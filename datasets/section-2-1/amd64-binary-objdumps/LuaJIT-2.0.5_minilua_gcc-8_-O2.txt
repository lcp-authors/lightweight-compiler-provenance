
../repos/LuaJIT-2.0.5/src/host/minilua:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x1cfe1]        # 41eff0 <__sprintf_chk@plt+0x1ca10>
  40200f:	test   rax,rax
  402012:	je     402016 <__ctype_toupper_loc@plt-0x2fa>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x1cfe2]        # 41f008 <__sprintf_chk@plt+0x1ca28>
  402026:	bnd jmp QWORD PTR [rip+0x1cfe3]        # 41f010 <__sprintf_chk@plt+0x1ca30>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <__ctype_toupper_loc@plt-0x2f0>
  40230f:	nop

Disassembly of section .plt.sec:

0000000000402310 <__ctype_toupper_loc@plt>:
  402310:	endbr64 
  402314:	bnd jmp QWORD PTR [rip+0x1ccfd]        # 41f018 <__sprintf_chk@plt+0x1ca38>
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402320 <free@plt>:
  402320:	endbr64 
  402324:	bnd jmp QWORD PTR [rip+0x1ccf5]        # 41f020 <__sprintf_chk@plt+0x1ca40>
  40232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402330 <__errno_location@plt>:
  402330:	endbr64 
  402334:	bnd jmp QWORD PTR [rip+0x1cced]        # 41f028 <__sprintf_chk@plt+0x1ca48>
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402340 <strncpy@plt>:
  402340:	endbr64 
  402344:	bnd jmp QWORD PTR [rip+0x1cce5]        # 41f030 <__sprintf_chk@plt+0x1ca50>
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402350 <remove@plt>:
  402350:	endbr64 
  402354:	bnd jmp QWORD PTR [rip+0x1ccdd]        # 41f038 <__sprintf_chk@plt+0x1ca58>
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402360 <strcpy@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0x1ccd5]        # 41f040 <__sprintf_chk@plt+0x1ca60>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <__isoc99_fscanf@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0x1cccd]        # 41f048 <__sprintf_chk@plt+0x1ca68>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <ferror@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0x1ccc5]        # 41f050 <__sprintf_chk@plt+0x1ca70>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <fread@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x1ccbd]        # 41f058 <__sprintf_chk@plt+0x1ca78>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <strtod@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x1ccb5]        # 41f060 <__sprintf_chk@plt+0x1ca80>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <pow@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x1ccad]        # 41f068 <__sprintf_chk@plt+0x1ca88>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <fclose@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x1cca5]        # 41f070 <__sprintf_chk@plt+0x1ca90>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <strlen@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x1cc9d]        # 41f078 <__sprintf_chk@plt+0x1ca98>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <__stack_chk_fail@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x1cc95]        # 41f080 <__sprintf_chk@plt+0x1caa0>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <strchr@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x1cc8d]        # 41f088 <__sprintf_chk@plt+0x1caa8>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <freopen@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x1cc85]        # 41f090 <__sprintf_chk@plt+0x1cab0>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <strncat@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x1cc7d]        # 41f098 <__sprintf_chk@plt+0x1cab8>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <strcspn@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x1cc75]        # 41f0a0 <__sprintf_chk@plt+0x1cac0>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <memchr@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x1cc6d]        # 41f0a8 <__sprintf_chk@plt+0x1cac8>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <memcmp@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x1cc65]        # 41f0b0 <__sprintf_chk@plt+0x1cad0>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <fgets@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x1cc5d]        # 41f0b8 <__sprintf_chk@plt+0x1cad8>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <_setjmp@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x1cc55]        # 41f0c0 <__sprintf_chk@plt+0x1cae0>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <strcmp@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x1cc4d]        # 41f0c8 <__sprintf_chk@plt+0x1cae8>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <feof@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x1cc45]        # 41f0d0 <__sprintf_chk@plt+0x1caf0>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <clearerr@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x1cc3d]        # 41f0d8 <__sprintf_chk@plt+0x1caf8>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <memcpy@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x1cc35]        # 41f0e0 <__sprintf_chk@plt+0x1cb00>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <malloc@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x1cc2d]        # 41f0e8 <__sprintf_chk@plt+0x1cb08>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <fflush@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x1cc25]        # 41f0f0 <__sprintf_chk@plt+0x1cb10>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <ungetc@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x1cc1d]        # 41f0f8 <__sprintf_chk@plt+0x1cb18>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <strcoll@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x1cc15]        # 41f100 <__sprintf_chk@plt+0x1cb20>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <strpbrk@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x1cc0d]        # 41f108 <__sprintf_chk@plt+0x1cb28>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <__strncpy_chk@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x1cc05]        # 41f110 <__sprintf_chk@plt+0x1cb30>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <realloc@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x1cbfd]        # 41f118 <__sprintf_chk@plt+0x1cb38>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <__longjmp_chk@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x1cbf5]        # 41f120 <__sprintf_chk@plt+0x1cb40>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <fopen@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x1cbed]        # 41f128 <__sprintf_chk@plt+0x1cb48>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <strtoul@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x1cbe5]        # 41f130 <__sprintf_chk@plt+0x1cb50>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <floor@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x1cbdd]        # 41f138 <__sprintf_chk@plt+0x1cb58>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <strcat@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x1cbd5]        # 41f140 <__sprintf_chk@plt+0x1cb60>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <exit@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x1cbcd]        # 41f148 <__sprintf_chk@plt+0x1cb68>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <fwrite@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x1cbc5]        # 41f150 <__sprintf_chk@plt+0x1cb70>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <__fprintf_chk@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x1cbbd]        # 41f158 <__sprintf_chk@plt+0x1cb78>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <strerror@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x1cbb5]        # 41f160 <__sprintf_chk@plt+0x1cb80>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <getc@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x1cbad]        # 41f168 <__sprintf_chk@plt+0x1cb88>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <__ctype_tolower_loc@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x1cba5]        # 41f170 <__sprintf_chk@plt+0x1cb90>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <__ctype_b_loc@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x1cb9d]        # 41f178 <__sprintf_chk@plt+0x1cb98>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <__sprintf_chk@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x1cb95]        # 41f180 <__sprintf_chk@plt+0x1cba0>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004025f0 <.text>:
  4025f0:	lea    rsi,[rip+0x14a65]        # 41705c <__sprintf_chk@plt+0x14a7c>
  4025f7:	mov    rdi,r13
  4025fa:	xor    eax,eax
  4025fc:	call   407190 <__sprintf_chk@plt+0x4bb0>
  402601:	vmovsd xmm0,QWORD PTR ds:0x0
  40260a:	ud2    
  40260c:	mov    rax,QWORD PTR ds:0x40
  402614:	ud2    
  402616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402620:	endbr64 
  402624:	push   r13
  402626:	mov    r13,rsi
  402629:	push   r12
  40262b:	mov    r12d,edi
  40262e:	mov    edi,0x268
  402633:	push   rbp
  402634:	push   rbx
  402635:	sub    rsp,0x38
  402639:	mov    rax,QWORD PTR fs:0x28
  402642:	mov    QWORD PTR [rsp+0x28],rax
  402647:	xor    eax,eax
  402649:	call   4024b0 <malloc@plt>
  40264e:	mov    rbx,rax
  402651:	test   rax,rax
  402654:	je     40283b <__sprintf_chk@plt+0x25b>
  40265a:	lea    rax,[rax+0xb8]
  402661:	mov    QWORD PTR [rbx+0x20],rax
  402665:	mov    eax,0x6108
  40266a:	mov    WORD PTR [rbx+0x8],ax
  40266e:	lea    rax,[rip+0xc7b]        # 4032f0 <__sprintf_chk@plt+0xd10>
  402675:	mov    QWORD PTR [rbx+0xc8],rax
  40267c:	lea    rax,[rbx+0x170]
  402683:	mov    edx,0x100
  402688:	mov    QWORD PTR [rbx+0x188],rax
  40268f:	mov    QWORD PTR [rbx+0x190],rax
  402696:	mov    ecx,0x21
  40269b:	lea    rax,[rbx+0xe0]
  4026a2:	mov    WORD PTR [rbx+0x64],dx
  4026a6:	mov    QWORD PTR [rbx+0xe8],rax
  4026ad:	mov    QWORD PTR [rbx+0x40],0x0
  4026b5:	mov    QWORD PTR [rbx+0x68],0x0
  4026bd:	mov    QWORD PTR [rbx+0x70],0x0
  4026c5:	mov    QWORD PTR [rbx+0x98],0x0
  4026d0:	mov    QWORD PTR [rbx],0x0
  4026d7:	mov    BYTE PTR [rbx+0xa],0x0
  4026db:	mov    QWORD PTR [rbx+0x28],0x0
  4026e3:	mov    QWORD PTR [rbx+0x50],0x0
  4026eb:	mov    QWORD PTR [rbx+0x58],0x0
  4026f3:	mov    DWORD PTR [rbx+0x60],0x0
  4026fa:	mov    QWORD PTR [rbx+0x30],0x0
  402702:	mov    DWORD PTR [rbx+0x80],0x0
  40270c:	mov    QWORD PTR [rbx+0x168],rbx
  402713:	mov    QWORD PTR [rbx+0x128],0x0
  40271e:	mov    QWORD PTR [rbx+0xa8],0x0
  402729:	mov    QWORD PTR [rbx+0xb0],0x0
  402734:	mov    QWORD PTR [rbx+0xb8],0x0
  40273f:	mov    QWORD PTR [rbx+0xc0],0x0
  40274a:	mov    DWORD PTR [rbx+0x160],0x0
  402754:	mov    QWORD PTR [rbx+0x110],0x0
  40275f:	mov    QWORD PTR [rbx+0x120],0x0
  40276a:	mov    QWORD PTR [rbx+0xd0],0x0
  402775:	mov    WORD PTR [rbx+0xd8],cx
  40277c:	mov    QWORD PTR [rbx+0xe0],rbx
  402783:	mov    DWORD PTR [rbx+0xdc],0x0
  40278d:	mov    QWORD PTR [rbx+0xf0],0x0
  402798:	mov    QWORD PTR [rbx+0xf8],0x0
  4027a3:	mov    QWORD PTR [rbx+0x100],0x0
  4027ae:	mov    QWORD PTR [rbx+0x108],0x0
  4027b9:	mov    QWORD PTR [rbx+0x130],0x268
  4027c4:	mov    QWORD PTR [rbx+0x140],0x0
  4027cf:	mov    QWORD PTR [rbx+0x150],0x0
  4027da:	movabs rax,0xc8000000c8
  4027e4:	mov    QWORD PTR [rbx+0x148],rax
  4027eb:	lea    rdx,[rbx+0x1e0]
  4027f2:	lea    rax,[rbx+0x198]
  4027f9:	nop    DWORD PTR [rax+0x0]
  402800:	mov    QWORD PTR [rax],0x0
  402807:	add    rax,0x8
  40280b:	cmp    rax,rdx
  40280e:	jne    402800 <__sprintf_chk@plt+0x220>
  402810:	xor    edx,edx
  402812:	lea    rsi,[rip+0x5ec7]        # 4086e0 <__sprintf_chk@plt+0x6100>
  402819:	mov    rdi,rbx
  40281c:	call   403320 <__sprintf_chk@plt+0xd40>
  402821:	test   eax,eax
  402823:	jne    402a38 <__sprintf_chk@plt+0x458>
  402829:	mov    rax,QWORD PTR [rbx+0x20]
  40282d:	lea    rcx,[rip+0xfd6c]        # 4125a0 <__sprintf_chk@plt+0xffc0>
  402834:	mov    QWORD PTR [rax+0x98],rcx
  40283b:	lea    rbp,[rip+0x1c07e]        # 41e8c0 <__sprintf_chk@plt+0x1c2e0>
  402842:	lea    rsi,[rip+0x12b47]        # 415390 <__sprintf_chk@plt+0x12db0>
  402849:	nop    DWORD PTR [rax+0x0]
  402850:	xor    edx,edx
  402852:	mov    rdi,rbx
  402855:	call   412390 <__sprintf_chk@plt+0xfdb0>
  40285a:	mov    rsi,QWORD PTR [rbp+0x0]
  40285e:	mov    rdi,rbx
  402861:	call   40dd60 <__sprintf_chk@plt+0xb780>
  402866:	mov    rax,QWORD PTR [rbx+0x10]
  40286a:	xor    edx,edx
  40286c:	lea    rsi,[rax-0x20]
  402870:	mov    rdi,rbx
  402873:	add    rbp,0x10
  402877:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  40287c:	mov    rsi,QWORD PTR [rbp+0x8]
  402880:	test   rsi,rsi
  402883:	jne    402850 <__sprintf_chk@plt+0x270>
  402885:	lea    rdx,[rip+0x1bf54]        # 41e7e0 <__sprintf_chk@plt+0x1c200>
  40288c:	lea    rsi,[rip+0x14f2d]        # 4177c0 <__sprintf_chk@plt+0x151e0>
  402893:	mov    rdi,rbx
  402896:	call   415240 <__sprintf_chk@plt+0x12c60>
  40289b:	mov    eax,0x8
  4028a0:	cmp    r12d,0x1
  4028a4:	jle    40299c <__sprintf_chk@plt+0x3bc>
  4028aa:	mov    esi,0x1
  4028af:	mov    rdi,rbx
  4028b2:	call   414600 <__sprintf_chk@plt+0x12020>
  4028b7:	mov    rsi,QWORD PTR [r13+0x8]
  4028bb:	mov    rdi,rbx
  4028be:	call   40dd60 <__sprintf_chk@plt+0xb780>
  4028c3:	xor    edx,edx
  4028c5:	mov    esi,0xfffffffe
  4028ca:	mov    rdi,rbx
  4028cd:	call   409010 <__sprintf_chk@plt+0x6a30>
  4028d2:	mov    esi,0xffffd8ee
  4028d7:	mov    rdi,rbx
  4028da:	lea    rdx,[rip+0x14e6f]        # 417750 <__sprintf_chk@plt+0x15170>
  4028e1:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4028e6:	mov    rsi,QWORD PTR [r13+0x8]
  4028ea:	mov    rdi,rbx
  4028ed:	call   413f20 <__sprintf_chk@plt+0x11940>
  4028f2:	test   eax,eax
  4028f4:	jne    40296a <__sprintf_chk@plt+0x38a>
  4028f6:	cmp    r12d,0x2
  4028fa:	je     402925 <__sprintf_chk@plt+0x345>
  4028fc:	lea    eax,[r12-0x3]
  402901:	lea    rbp,[r13+0x10]
  402905:	lea    r13,[r13+rax*8+0x18]
  40290a:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	mov    rsi,QWORD PTR [rbp+0x0]
  402914:	mov    rdi,rbx
  402917:	add    rbp,0x8
  40291b:	call   40dd60 <__sprintf_chk@plt+0xb780>
  402920:	cmp    r13,rbp
  402923:	jne    402910 <__sprintf_chk@plt+0x330>
  402925:	sub    r12d,0x2
  402929:	movsxd r12,r12d
  40292c:	shl    r12,0x4
  402930:	mov    rcx,0xfffffffffffffff0
  402937:	sub    rcx,r12
  40293a:	add    rcx,QWORD PTR [rbx+0x10]
  40293e:	mov    QWORD PTR [rsp+0x10],rcx
  402943:	xor    r8d,r8d
  402946:	sub    rcx,QWORD PTR [rbx+0x40]
  40294a:	lea    rdx,[rsp+0x10]
  40294f:	lea    rsi,[rip+0x11eca]        # 414820 <__sprintf_chk@plt+0x12240>
  402956:	mov    rdi,rbx
  402959:	mov    DWORD PTR [rsp+0x18],0x0
  402961:	call   4076c0 <__sprintf_chk@plt+0x50e0>
  402966:	test   eax,eax
  402968:	je     4029bb <__sprintf_chk@plt+0x3db>
  40296a:	xor    edx,edx
  40296c:	or     esi,0xffffffff
  40296f:	mov    rdi,rbx
  402972:	call   412510 <__sprintf_chk@plt+0xff30>
  402977:	mov    rcx,rax
  40297a:	mov    rax,QWORD PTR [rip+0x1c677]        # 41eff8 <__sprintf_chk@plt+0x1ca18>
  402981:	lea    rdx,[rip+0x14dcc]        # 417754 <__sprintf_chk@plt+0x15174>
  402988:	mov    rdi,QWORD PTR [rax]
  40298b:	mov    esi,0x1
  402990:	xor    eax,eax
  402992:	call   402590 <__fprintf_chk@plt>
  402997:	mov    eax,0x1
  40299c:	mov    rcx,QWORD PTR [rsp+0x28]
  4029a1:	xor    rcx,QWORD PTR fs:0x28
  4029aa:	jne    402a47 <__sprintf_chk@plt+0x467>
  4029b0:	add    rsp,0x38
  4029b4:	pop    rbx
  4029b5:	pop    rbp
  4029b6:	pop    r12
  4029b8:	pop    r13
  4029ba:	ret    
  4029bb:	mov    rax,QWORD PTR [rbx+0x20]
  4029bf:	lea    rbp,[rip+0x11e1a]        # 4147e0 <__sprintf_chk@plt+0x12200>
  4029c6:	mov    rbx,QWORD PTR [rax+0xb0]
  4029cd:	mov    rsi,QWORD PTR [rbx+0x40]
  4029d1:	mov    rdi,rbx
  4029d4:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  4029d9:	lea    rdi,[rbx+0x20]
  4029dd:	mov    esi,0x1
  4029e2:	call   403a60 <__sprintf_chk@plt+0x1480>
  4029e7:	mov    QWORD PTR [rbx+0xb0],0x0
  4029f2:	nop    WORD PTR [rax+rax*1+0x0]
  4029f8:	mov    rax,QWORD PTR [rbx+0x50]
  4029fc:	xor    edx,edx
  4029fe:	mov    QWORD PTR [rbx+0x28],rax
  402a02:	mov    rax,QWORD PTR [rax]
  402a05:	mov    DWORD PTR [rbx+0x60],0x0
  402a0c:	mov    QWORD PTR [rbx+0x10],rax
  402a10:	mov    QWORD PTR [rbx+0x18],rax
  402a14:	mov    rsi,rbp
  402a17:	mov    rdi,rbx
  402a1a:	call   403320 <__sprintf_chk@plt+0xd40>
  402a1f:	test   eax,eax
  402a21:	jne    4029f8 <__sprintf_chk@plt+0x418>
  402a23:	mov    rdi,rbx
  402a26:	mov    DWORD PTR [rsp+0xc],eax
  402a2a:	call   404b40 <__sprintf_chk@plt+0x2560>
  402a2f:	mov    eax,DWORD PTR [rsp+0xc]
  402a33:	jmp    40299c <__sprintf_chk@plt+0x3bc>
  402a38:	mov    rdi,rbx
  402a3b:	call   404b40 <__sprintf_chk@plt+0x2560>
  402a40:	xor    ebx,ebx
  402a42:	jmp    40283b <__sprintf_chk@plt+0x25b>
  402a47:	call   4023e0 <__stack_chk_fail@plt>
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	endbr64 
  402a54:	xor    ebp,ebp
  402a56:	mov    r9,rdx
  402a59:	pop    rsi
  402a5a:	mov    rdx,rsp
  402a5d:	and    rsp,0xfffffffffffffff0
  402a61:	push   rax
  402a62:	push   rsp
  402a63:	mov    r8,0x4168a0
  402a6a:	mov    rcx,0x416830
  402a71:	mov    rdi,0x402620
  402a78:	call   QWORD PTR [rip+0x1c56a]        # 41efe8 <__sprintf_chk@plt+0x1ca08>
  402a7e:	hlt    
  402a7f:	nop
  402a80:	endbr64 
  402a84:	ret    
  402a85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a8f:	nop
  402a90:	mov    eax,0x41f198
  402a95:	cmp    rax,0x41f198
  402a9b:	je     402ab0 <__sprintf_chk@plt+0x4d0>
  402a9d:	mov    eax,0x0
  402aa2:	test   rax,rax
  402aa5:	je     402ab0 <__sprintf_chk@plt+0x4d0>
  402aa7:	mov    edi,0x41f198
  402aac:	jmp    rax
  402aae:	xchg   ax,ax
  402ab0:	ret    
  402ab1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402abc:	nop    DWORD PTR [rax+0x0]
  402ac0:	mov    esi,0x41f198
  402ac5:	sub    rsi,0x41f198
  402acc:	sar    rsi,0x3
  402ad0:	mov    rax,rsi
  402ad3:	shr    rax,0x3f
  402ad7:	add    rsi,rax
  402ada:	sar    rsi,1
  402add:	je     402af0 <__sprintf_chk@plt+0x510>
  402adf:	mov    eax,0x0
  402ae4:	test   rax,rax
  402ae7:	je     402af0 <__sprintf_chk@plt+0x510>
  402ae9:	mov    edi,0x41f198
  402aee:	jmp    rax
  402af0:	ret    
  402af1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402afc:	nop    DWORD PTR [rax+0x0]
  402b00:	endbr64 
  402b04:	cmp    BYTE PTR [rip+0x1c68d],0x0        # 41f198 <__sprintf_chk@plt+0x1cbb8>
  402b0b:	jne    402b20 <__sprintf_chk@plt+0x540>
  402b0d:	push   rbp
  402b0e:	mov    rbp,rsp
  402b11:	call   402a90 <__sprintf_chk@plt+0x4b0>
  402b16:	mov    BYTE PTR [rip+0x1c67b],0x1        # 41f198 <__sprintf_chk@plt+0x1cbb8>
  402b1d:	pop    rbp
  402b1e:	ret    
  402b1f:	nop
  402b20:	ret    
  402b21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b2c:	nop    DWORD PTR [rax+0x0]
  402b30:	endbr64 
  402b34:	jmp    402ac0 <__sprintf_chk@plt+0x4e0>
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	mov    edx,DWORD PTR [rdi+0x8]
  402b43:	xor    eax,eax
  402b45:	cmp    edx,DWORD PTR [rsi+0x8]
  402b48:	jne    402b85 <__sprintf_chk@plt+0x5a5>
  402b4a:	cmp    edx,0x1
  402b4d:	je     402b90 <__sprintf_chk@plt+0x5b0>
  402b4f:	jle    402b70 <__sprintf_chk@plt+0x590>
  402b51:	cmp    edx,0x2
  402b54:	je     402b79 <__sprintf_chk@plt+0x599>
  402b56:	cmp    edx,0x3
  402b59:	jne    402b79 <__sprintf_chk@plt+0x599>
  402b5b:	vmovsd xmm0,QWORD PTR [rdi]
  402b5f:	xor    edx,edx
  402b61:	vucomisd xmm0,QWORD PTR [rsi]
  402b65:	setnp  dl
  402b68:	cmove  eax,edx
  402b6b:	ret    
  402b6c:	nop    DWORD PTR [rax+0x0]
  402b70:	mov    eax,0x1
  402b75:	test   edx,edx
  402b77:	je     402b85 <__sprintf_chk@plt+0x5a5>
  402b79:	mov    rax,QWORD PTR [rsi]
  402b7c:	cmp    QWORD PTR [rdi],rax
  402b7f:	sete   al
  402b82:	movzx  eax,al
  402b85:	ret    
  402b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b90:	mov    eax,DWORD PTR [rsi]
  402b92:	cmp    DWORD PTR [rdi],eax
  402b94:	sete   al
  402b97:	movzx  eax,al
  402b9a:	ret    
  402b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	movzx  ecx,BYTE PTR [rdi+0xb]
  402ba4:	mov    eax,0x1
  402ba9:	shlx   rax,rax,rcx
  402bae:	dec    eax
  402bb0:	and    eax,DWORD PTR [rdx+0xc]
  402bb3:	cdqe   
  402bb5:	lea    rcx,[rax+rax*4]
  402bb9:	mov    rax,QWORD PTR [rdi+0x20]
  402bbd:	lea    rax,[rax+rcx*8]
  402bc1:	jmp    402bd1 <__sprintf_chk@plt+0x5f1>
  402bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  402bc8:	mov    rax,QWORD PTR [rax+0x20]
  402bcc:	test   rax,rax
  402bcf:	je     402be8 <__sprintf_chk@plt+0x608>
  402bd1:	cmp    DWORD PTR [rax+0x18],0x4
  402bd5:	jne    402bc8 <__sprintf_chk@plt+0x5e8>
  402bd7:	cmp    rdx,QWORD PTR [rax+0x10]
  402bdb:	jne    402bc8 <__sprintf_chk@plt+0x5e8>
  402bdd:	mov    edx,DWORD PTR [rax+0x8]
  402be0:	test   edx,edx
  402be2:	je     402be8 <__sprintf_chk@plt+0x608>
  402be4:	ret    
  402be5:	nop    DWORD PTR [rax]
  402be8:	mov    eax,0x1
  402bed:	shlx   esi,eax,esi
  402bf2:	xor    eax,eax
  402bf4:	or     BYTE PTR [rdi+0xa],sil
  402bf8:	ret    
  402bf9:	nop    DWORD PTR [rax+0x0]
  402c00:	mov    rcx,QWORD PTR [rdi+0x28]
  402c04:	lea    rax,[rcx-0x28]
  402c08:	mov    rdx,QWORD PTR [rcx+0x8]
  402c0c:	mov    r8,QWORD PTR [rcx-0x28]
  402c10:	mov    QWORD PTR [rdi+0x28],rax
  402c14:	mov    eax,DWORD PTR [rcx+0x20]
  402c17:	mov    rcx,QWORD PTR [rcx-0x10]
  402c1b:	mov    QWORD PTR [rdi+0x18],r8
  402c1f:	mov    QWORD PTR [rdi+0x30],rcx
  402c23:	test   eax,eax
  402c25:	je     402c8a <__sprintf_chk@plt+0x6aa>
  402c27:	mov    r9,QWORD PTR [rdi+0x10]
  402c2b:	mov    ecx,eax
  402c2d:	jmp    402c4c <__sprintf_chk@plt+0x66c>
  402c2f:	nop
  402c30:	add    rsi,0x10
  402c34:	mov    r8,QWORD PTR [rsi-0x10]
  402c38:	add    rdx,0x10
  402c3c:	mov    QWORD PTR [rdx-0x10],r8
  402c40:	mov    r8d,DWORD PTR [rsi-0x8]
  402c44:	mov    DWORD PTR [rdx-0x8],r8d
  402c48:	dec    ecx
  402c4a:	je     402c8a <__sprintf_chk@plt+0x6aa>
  402c4c:	cmp    rsi,r9
  402c4f:	jb     402c30 <__sprintf_chk@plt+0x650>
  402c51:	lea    r8d,[rcx-0x1]
  402c55:	test   ecx,ecx
  402c57:	jle    402c8a <__sprintf_chk@plt+0x6aa>
  402c59:	lea    rsi,[r8+0x1]
  402c5d:	shl    rsi,0x4
  402c61:	add    rsi,rdx
  402c64:	mov    rcx,rdx
  402c67:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	add    rcx,0x10
  402c74:	mov    DWORD PTR [rcx-0x8],0x0
  402c7b:	cmp    rcx,rsi
  402c7e:	jne    402c70 <__sprintf_chk@plt+0x690>
  402c80:	inc    r8
  402c83:	shl    r8,0x4
  402c87:	add    rdx,r8
  402c8a:	mov    QWORD PTR [rdi+0x10],rdx
  402c8e:	inc    eax
  402c90:	ret    
  402c91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c9c:	nop    DWORD PTR [rax+0x0]
  402ca0:	cmp    DWORD PTR [rdi+0x8],0x3
  402ca4:	vmovsd xmm0,QWORD PTR [rdi]
  402ca8:	jne    402d10 <__sprintf_chk@plt+0x730>
  402caa:	vcvttsd2si edx,xmm0
  402cae:	vxorpd xmm1,xmm1,xmm1
  402cb2:	vcvtsi2sd xmm1,xmm1,edx
  402cb6:	vucomisd xmm0,xmm1
  402cba:	jp     402d10 <__sprintf_chk@plt+0x730>
  402cbc:	jne    402d10 <__sprintf_chk@plt+0x730>
  402cbe:	dec    edx
  402cc0:	xor    eax,eax
  402cc2:	cmp    edx,0x3fffffff
  402cc8:	ja     402d12 <__sprintf_chk@plt+0x732>
  402cca:	mov    eax,0xffffffff
  402ccf:	cmp    edx,0xff
  402cd5:	jbe    402cee <__sprintf_chk@plt+0x70e>
  402cd7:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	shr    edx,0x8
  402ce3:	add    eax,0x8
  402ce6:	cmp    edx,0xff
  402cec:	ja     402ce0 <__sprintf_chk@plt+0x700>
  402cee:	lea    rcx,[rip+0x1518b]        # 417e80 <__sprintf_chk@plt+0x158a0>
  402cf5:	movzx  edx,BYTE PTR [rcx+rdx*1]
  402cf9:	add    eax,edx
  402cfb:	cdqe   
  402cfd:	inc    DWORD PTR [rsi+rax*4+0x4]
  402d01:	mov    eax,0x1
  402d06:	ret    
  402d07:	nop    WORD PTR [rax+rax*1+0x0]
  402d10:	xor    eax,eax
  402d12:	ret    
  402d13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d1e:	xchg   ax,ax
  402d20:	mov    rax,QWORD PTR [rsi+0x8]
  402d24:	cmp    DWORD PTR [rax+0x8],0x6
  402d28:	jne    402d78 <__sprintf_chk@plt+0x798>
  402d2a:	mov    rdx,QWORD PTR [rax]
  402d2d:	cmp    BYTE PTR [rdx+0xa],0x0
  402d31:	jne    402d78 <__sprintf_chk@plt+0x798>
  402d33:	cmp    rsi,QWORD PTR [rdi+0x28]
  402d37:	je     402d68 <__sprintf_chk@plt+0x788>
  402d39:	mov    rax,QWORD PTR [rsi+0x18]
  402d3d:	mov    rcx,QWORD PTR [rdx+0x20]
  402d41:	sub    rax,QWORD PTR [rcx+0x18]
  402d45:	sar    rax,0x2
  402d49:	mov    edx,eax
  402d4b:	dec    edx
  402d4d:	js     402d78 <__sprintf_chk@plt+0x798>
  402d4f:	mov    rcx,QWORD PTR [rcx+0x28]
  402d53:	xor    eax,eax
  402d55:	test   rcx,rcx
  402d58:	je     402d60 <__sprintf_chk@plt+0x780>
  402d5a:	movsxd rax,edx
  402d5d:	mov    eax,DWORD PTR [rcx+rax*4]
  402d60:	ret    
  402d61:	nop    DWORD PTR [rax+0x0]
  402d68:	mov    rax,QWORD PTR [rdi+0x30]
  402d6c:	mov    QWORD PTR [rsi+0x18],rax
  402d70:	jmp    402d3d <__sprintf_chk@plt+0x75d>
  402d72:	nop    WORD PTR [rax+rax*1+0x0]
  402d78:	mov    eax,0xffffffff
  402d7d:	ret    
  402d7e:	xchg   ax,ax
  402d80:	push   rbx
  402d81:	mov    rbx,rdi
  402d84:	sub    rsp,0x10
  402d88:	mov    rsi,QWORD PTR [rdi+0x18]
  402d8c:	mov    rdi,QWORD PTR [rdi+0x20]
  402d90:	mov    rdx,rsp
  402d93:	mov    rax,QWORD PTR fs:0x28
  402d9c:	mov    QWORD PTR [rsp+0x8],rax
  402da1:	xor    eax,eax
  402da3:	call   QWORD PTR [rbx+0x10]
  402da6:	test   rax,rax
  402da9:	je     402de0 <__sprintf_chk@plt+0x800>
  402dab:	mov    rdx,QWORD PTR [rsp]
  402daf:	test   rdx,rdx
  402db2:	je     402de0 <__sprintf_chk@plt+0x800>
  402db4:	dec    rdx
  402db7:	mov    QWORD PTR [rbx],rdx
  402dba:	lea    rdx,[rax+0x1]
  402dbe:	mov    QWORD PTR [rbx+0x8],rdx
  402dc2:	movzx  eax,BYTE PTR [rax]
  402dc5:	mov    rcx,QWORD PTR [rsp+0x8]
  402dca:	xor    rcx,QWORD PTR fs:0x28
  402dd3:	jne    402de7 <__sprintf_chk@plt+0x807>
  402dd5:	add    rsp,0x10
  402dd9:	pop    rbx
  402dda:	ret    
  402ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	mov    eax,0xffffffff
  402de5:	jmp    402dc5 <__sprintf_chk@plt+0x7e5>
  402de7:	call   4023e0 <__stack_chk_fail@plt>
  402dec:	nop    DWORD PTR [rax+0x0]
  402df0:	cmp    esi,0xffffffff
  402df3:	je     402e50 <__sprintf_chk@plt+0x870>
  402df5:	mov    rax,QWORD PTR [rdi]
  402df8:	lea    r8,[rip+0x151e1]        # 417fe0 <__sprintf_chk@plt+0x15a00>
  402dff:	mov    rdi,QWORD PTR [rax+0x18]
  402e03:	jmp    402e20 <__sprintf_chk@plt+0x840>
  402e05:	nop    DWORD PTR [rax]
  402e08:	mov    eax,DWORD PTR [rax]
  402e0a:	shr    eax,0xe
  402e0d:	sub    eax,0x1ffff
  402e12:	cmp    eax,0xffffffff
  402e15:	je     402e50 <__sprintf_chk@plt+0x870>
  402e17:	lea    esi,[rax+rsi*1+0x1]
  402e1b:	cmp    esi,0xffffffff
  402e1e:	je     402e50 <__sprintf_chk@plt+0x870>
  402e20:	movsxd rax,esi
  402e23:	lea    rax,[rdi+rax*4]
  402e27:	mov    rdx,rax
  402e2a:	test   esi,esi
  402e2c:	jle    402e3f <__sprintf_chk@plt+0x85f>
  402e2e:	mov    ecx,DWORD PTR [rax-0x4]
  402e31:	and    ecx,0x3f
  402e34:	cmp    BYTE PTR [r8+rcx*1],0x0
  402e39:	jns    402e3f <__sprintf_chk@plt+0x85f>
  402e3b:	lea    rdx,[rax-0x4]
  402e3f:	mov    edx,DWORD PTR [rdx]
  402e41:	and    edx,0x3f
  402e44:	cmp    edx,0x1b
  402e47:	je     402e08 <__sprintf_chk@plt+0x828>
  402e49:	mov    eax,0x1
  402e4e:	ret    
  402e4f:	nop
  402e50:	xor    eax,eax
  402e52:	ret    
  402e53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e5e:	xchg   ax,ax
  402e60:	mov    rax,QWORD PTR [rdi]
  402e63:	movsxd rcx,esi
  402e66:	mov    rax,QWORD PTR [rax+0x18]
  402e6a:	lea    rdi,[rax+rcx*4]
  402e6e:	test   esi,esi
  402e70:	jle    402e85 <__sprintf_chk@plt+0x8a5>
  402e72:	mov    eax,DWORD PTR [rdi-0x4]
  402e75:	lea    rcx,[rip+0x15164]        # 417fe0 <__sprintf_chk@plt+0x15a00>
  402e7c:	and    eax,0x3f
  402e7f:	cmp    BYTE PTR [rcx+rax*1],0x0
  402e83:	js     402ee0 <__sprintf_chk@plt+0x900>
  402e85:	mov    ecx,DWORD PTR [rdi]
  402e87:	xor    eax,eax
  402e89:	mov    esi,ecx
  402e8b:	and    esi,0x3f
  402e8e:	cmp    esi,0x1b
  402e91:	jne    402ed5 <__sprintf_chk@plt+0x8f5>
  402e93:	mov    eax,ecx
  402e95:	shr    eax,0x17
  402e98:	cmp    edx,0xff
  402e9e:	je     402ec0 <__sprintf_chk@plt+0x8e0>
  402ea0:	cmp    eax,edx
  402ea2:	je     402ec0 <__sprintf_chk@plt+0x8e0>
  402ea4:	shl    edx,0x6
  402ea7:	and    edx,0x3fc0
  402ead:	and    ecx,0xffffc03f
  402eb3:	or     ecx,edx
  402eb5:	mov    DWORD PTR [rdi],ecx
  402eb7:	mov    eax,0x1
  402ebc:	ret    
  402ebd:	nop    DWORD PTR [rax]
  402ec0:	shl    eax,0x6
  402ec3:	and    ecx,0x7fc000
  402ec9:	or     ecx,eax
  402ecb:	or     ecx,0x1a
  402ece:	mov    DWORD PTR [rdi],ecx
  402ed0:	mov    eax,0x1
  402ed5:	ret    
  402ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ee0:	sub    rdi,0x4
  402ee4:	jmp    402e85 <__sprintf_chk@plt+0x8a5>
  402ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ef0:	mov    r9,rdi
  402ef3:	mov    r8d,esi
  402ef6:	cmp    esi,0xffffffff
  402ef9:	je     402f35 <__sprintf_chk@plt+0x955>
  402efb:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	mov    edx,0xff
  402f05:	mov    esi,r8d
  402f08:	mov    rdi,r9
  402f0b:	call   402e60 <__sprintf_chk@plt+0x880>
  402f10:	mov    rdx,QWORD PTR [r9]
  402f13:	movsxd rax,r8d
  402f16:	mov    rdx,QWORD PTR [rdx+0x18]
  402f1a:	mov    eax,DWORD PTR [rdx+rax*4]
  402f1d:	shr    eax,0xe
  402f20:	sub    eax,0x1ffff
  402f25:	cmp    eax,0xffffffff
  402f28:	je     402f35 <__sprintf_chk@plt+0x955>
  402f2a:	lea    r8d,[rax+r8*1+0x1]
  402f2f:	cmp    r8d,0xffffffff
  402f33:	jne    402f00 <__sprintf_chk@plt+0x920>
  402f35:	ret    
  402f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f40:	endbr64 
  402f44:	mov    rax,QWORD PTR [rsi+0x8]
  402f48:	test   rax,rax
  402f4b:	je     402f60 <__sprintf_chk@plt+0x980>
  402f4d:	mov    QWORD PTR [rdx],rax
  402f50:	mov    QWORD PTR [rsi+0x8],0x0
  402f58:	mov    rax,QWORD PTR [rsi]
  402f5b:	ret    
  402f5c:	nop    DWORD PTR [rax+0x0]
  402f60:	xor    eax,eax
  402f62:	ret    
  402f63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f6e:	xchg   ax,ax
  402f70:	push   r14
  402f72:	push   r13
  402f74:	mov    r13,rsi
  402f77:	push   r12
  402f79:	mov    r12,rdi
  402f7c:	push   rbp
  402f7d:	push   rbx
  402f7e:	sub    rsp,0x10
  402f82:	mov    r14,rsp
  402f85:	mov    rsi,r14
  402f88:	mov    rax,QWORD PTR fs:0x28
  402f91:	mov    QWORD PTR [rsp+0x8],rax
  402f96:	xor    eax,eax
  402f98:	call   4023a0 <strtod@plt>
  402f9d:	mov    rbx,QWORD PTR [rsp]
  402fa1:	vmovsd QWORD PTR [r13+0x0],xmm0
  402fa7:	cmp    rbx,r12
  402faa:	je     403070 <__sprintf_chk@plt+0xa90>
  402fb0:	movzx  ebp,BYTE PTR [rbx]
  402fb3:	mov    eax,ebp
  402fb5:	and    eax,0xffffffdf
  402fb8:	cmp    al,0x58
  402fba:	je     403018 <__sprintf_chk@plt+0xa38>
  402fbc:	mov    eax,0x1
  402fc1:	test   bpl,bpl
  402fc4:	je     402ff6 <__sprintf_chk@plt+0xa16>
  402fc6:	call   4025d0 <__ctype_b_loc@plt>
  402fcb:	mov    rcx,QWORD PTR [rax]
  402fce:	lea    rax,[rbx+0x1]
  402fd2:	jmp    402fe3 <__sprintf_chk@plt+0xa03>
  402fd4:	nop    DWORD PTR [rax+0x0]
  402fd8:	mov    QWORD PTR [rsp],rax
  402fdc:	inc    rax
  402fdf:	movzx  ebp,BYTE PTR [rax-0x1]
  402fe3:	movzx  edx,bpl
  402fe7:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  402fec:	jne    402fd8 <__sprintf_chk@plt+0x9f8>
  402fee:	xor    eax,eax
  402ff0:	test   bpl,bpl
  402ff3:	sete   al
  402ff6:	mov    rsi,QWORD PTR [rsp+0x8]
  402ffb:	xor    rsi,QWORD PTR fs:0x28
  403004:	jne    403074 <__sprintf_chk@plt+0xa94>
  403006:	add    rsp,0x10
  40300a:	pop    rbx
  40300b:	pop    rbp
  40300c:	pop    r12
  40300e:	pop    r13
  403010:	pop    r14
  403012:	ret    
  403013:	nop    DWORD PTR [rax+rax*1+0x0]
  403018:	mov    edx,0x10
  40301d:	mov    rsi,r14
  403020:	mov    rdi,r12
  403023:	call   402540 <strtoul@plt>
  403028:	test   rax,rax
  40302b:	js     403050 <__sprintf_chk@plt+0xa70>
  40302d:	vxorpd xmm0,xmm0,xmm0
  403031:	vcvtsi2sd xmm0,xmm0,rax
  403036:	mov    rbx,QWORD PTR [rsp]
  40303a:	vmovsd QWORD PTR [r13+0x0],xmm0
  403040:	movzx  ebp,BYTE PTR [rbx]
  403043:	jmp    402fbc <__sprintf_chk@plt+0x9dc>
  403048:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	mov    rdx,rax
  403053:	shr    rdx,1
  403056:	and    eax,0x1
  403059:	or     rdx,rax
  40305c:	vxorpd xmm0,xmm0,xmm0
  403060:	vcvtsi2sd xmm0,xmm0,rdx
  403065:	vaddsd xmm0,xmm0,xmm0
  403069:	jmp    403036 <__sprintf_chk@plt+0xa56>
  40306b:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	xor    eax,eax
  403072:	jmp    402ff6 <__sprintf_chk@plt+0xa16>
  403074:	call   4023e0 <__stack_chk_fail@plt>
  403079:	nop    DWORD PTR [rax+0x0]
  403080:	push   rbx
  403081:	sub    rsp,0x10
  403085:	mov    edx,DWORD PTR [rdi+0x8]
  403088:	mov    rax,QWORD PTR fs:0x28
  403091:	mov    QWORD PTR [rsp+0x8],rax
  403096:	xor    eax,eax
  403098:	mov    rax,rdi
  40309b:	cmp    edx,0x3
  40309e:	je     4030ce <__sprintf_chk@plt+0xaee>
  4030a0:	cmp    edx,0x4
  4030a3:	jne    4030e8 <__sprintf_chk@plt+0xb08>
  4030a5:	mov    rdi,QWORD PTR [rdi]
  4030a8:	mov    rbx,rsi
  4030ab:	add    rdi,0x18
  4030af:	mov    rsi,rsp
  4030b2:	call   402f70 <__sprintf_chk@plt+0x990>
  4030b7:	test   eax,eax
  4030b9:	je     4030e8 <__sprintf_chk@plt+0xb08>
  4030bb:	vmovsd xmm0,QWORD PTR [rsp]
  4030c0:	mov    DWORD PTR [rbx+0x8],0x3
  4030c7:	vmovsd QWORD PTR [rbx],xmm0
  4030cb:	mov    rax,rbx
  4030ce:	mov    rcx,QWORD PTR [rsp+0x8]
  4030d3:	xor    rcx,QWORD PTR fs:0x28
  4030dc:	jne    4030ec <__sprintf_chk@plt+0xb0c>
  4030de:	add    rsp,0x10
  4030e2:	pop    rbx
  4030e3:	ret    
  4030e4:	nop    DWORD PTR [rax+0x0]
  4030e8:	xor    eax,eax
  4030ea:	jmp    4030ce <__sprintf_chk@plt+0xaee>
  4030ec:	call   4023e0 <__stack_chk_fail@plt>
  4030f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4030fc:	nop    DWORD PTR [rax+0x0]
  403100:	mov    rax,rdi
  403103:	mov    ecx,DWORD PTR [rax]
  403105:	add    rax,0x4
  403109:	lea    edx,[rcx-0x1010101]
  40310f:	andn   edx,ecx,edx
  403114:	and    edx,0x80808080
  40311a:	je     403103 <__sprintf_chk@plt+0xb23>
  40311c:	mov    ecx,edx
  40311e:	shr    ecx,0x10
  403121:	test   edx,0x8080
  403127:	cmove  edx,ecx
  40312a:	lea    rcx,[rax+0x2]
  40312e:	cmove  rax,rcx
  403132:	mov    esi,edx
  403134:	add    sil,dl
  403137:	sbb    rax,0x3
  40313b:	sub    rax,rdi
  40313e:	lea    rdx,[rdi+rax*1-0x1]
  403143:	movzx  ecx,BYTE PTR [rdx]
  403146:	mov    esi,0x6c
  40314b:	mov    WORD PTR [rdx],si
  40314e:	mov    BYTE PTR [rdi+rax*1],cl
  403151:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
  403156:	ret    
  403157:	nop    WORD PTR [rax+rax*1+0x0]
  403160:	push   r12
  403162:	mov    r12,rsi
  403165:	push   rbp
  403166:	mov    rbp,rdx
  403169:	push   rbx
  40316a:	mov    rbx,rdi
  40316d:	movzx  eax,BYTE PTR [rsi]
  403170:	cmp    al,0x3d
  403172:	je     403208 <__sprintf_chk@plt+0xc28>
  403178:	cmp    al,0x40
  40317a:	je     403220 <__sprintf_chk@plt+0xc40>
  403180:	lea    rsi,[rip+0x13e7d]        # 417004 <__sprintf_chk@plt+0x14a24>
  403187:	mov    rdi,r12
  40318a:	call   402420 <strcspn@plt>
  40318f:	sub    rbp,0x11
  403193:	cmp    rbp,rax
  403196:	cmovbe rax,rbp
  40319a:	mov    ecx,0x22
  40319f:	mov    rdx,rax
  4031a2:	movabs rax,0x20676e697274735b
  4031ac:	mov    QWORD PTR [rbx],rax
  4031af:	mov    WORD PTR [rbx+0x8],cx
  4031b3:	cmp    BYTE PTR [r12+rdx*1],0x0
  4031b8:	jne    4031e8 <__sprintf_chk@plt+0xc08>
  4031ba:	lea    rdi,[rbx+0x9]
  4031be:	mov    rsi,r12
  4031c1:	call   402360 <strcpy@plt>
  4031c6:	mov    rdi,rbx
  4031c9:	call   4023d0 <strlen@plt>
  4031ce:	add    rbx,rax
  4031d1:	mov    eax,0x5d22
  4031d6:	mov    WORD PTR [rbx],ax
  4031d9:	mov    BYTE PTR [rbx+0x2],0x0
  4031dd:	pop    rbx
  4031de:	pop    rbp
  4031df:	pop    r12
  4031e1:	ret    
  4031e2:	nop    WORD PTR [rax+rax*1+0x0]
  4031e8:	mov    rsi,r12
  4031eb:	mov    rdi,rbx
  4031ee:	call   402410 <strncat@plt>
  4031f3:	mov    rdi,rbx
  4031f6:	call   4023d0 <strlen@plt>
  4031fb:	mov    DWORD PTR [rbx+rax*1],0x2e2e2e
  403202:	jmp    4031c6 <__sprintf_chk@plt+0xbe6>
  403204:	nop    DWORD PTR [rax+0x0]
  403208:	lea    rsi,[rsi+0x1]
  40320c:	call   402340 <strncpy@plt>
  403211:	mov    BYTE PTR [rbx+rbp*1-0x1],0x0
  403216:	pop    rbx
  403217:	pop    rbp
  403218:	pop    r12
  40321a:	ret    
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]
  403220:	inc    r12
  403223:	mov    rdi,r12
  403226:	call   4023d0 <strlen@plt>
  40322b:	sub    rbp,0x8
  40322f:	mov    BYTE PTR [rbx],0x0
  403232:	cmp    rbp,rax
  403235:	jb     403250 <__sprintf_chk@plt+0xc70>
  403237:	mov    rdi,rbx
  40323a:	pop    rbx
  40323b:	pop    rbp
  40323c:	mov    rsi,r12
  40323f:	pop    r12
  403241:	jmp    402560 <strcat@plt>
  403246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403250:	sub    rax,rbp
  403253:	add    r12,rax
  403256:	mov    DWORD PTR [rbx],0x2e2e2e
  40325c:	jmp    403237 <__sprintf_chk@plt+0xc57>
  40325e:	xchg   ax,ax
  403260:	push   r13
  403262:	push   r12
  403264:	push   rbp
  403265:	lea    rbp,[rsi+0x18]
  403269:	push   rbx
  40326a:	lea    rbx,[rdi+0x18]
  40326e:	sub    rsp,0x8
  403272:	mov    r13,QWORD PTR [rdi+0x10]
  403276:	mov    r12,QWORD PTR [rsi+0x10]
  40327a:	jmp    4032a1 <__sprintf_chk@plt+0xcc1>
  40327c:	nop    DWORD PTR [rax+0x0]
  403280:	mov    rdi,rbx
  403283:	call   4023d0 <strlen@plt>
  403288:	cmp    r12,rax
  40328b:	je     4032c0 <__sprintf_chk@plt+0xce0>
  40328d:	cmp    r13,rax
  403290:	je     4032d8 <__sprintf_chk@plt+0xcf8>
  403292:	inc    rax
  403295:	add    rbx,rax
  403298:	sub    r13,rax
  40329b:	add    rbp,rax
  40329e:	sub    r12,rax
  4032a1:	mov    rsi,rbp
  4032a4:	mov    rdi,rbx
  4032a7:	call   4024e0 <strcoll@plt>
  4032ac:	test   eax,eax
  4032ae:	je     403280 <__sprintf_chk@plt+0xca0>
  4032b0:	add    rsp,0x8
  4032b4:	pop    rbx
  4032b5:	pop    rbp
  4032b6:	pop    r12
  4032b8:	pop    r13
  4032ba:	ret    
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	xor    eax,eax
  4032c2:	cmp    r13,r12
  4032c5:	setne  al
  4032c8:	add    rsp,0x8
  4032cc:	pop    rbx
  4032cd:	pop    rbp
  4032ce:	pop    r12
  4032d0:	pop    r13
  4032d2:	ret    
  4032d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4032d8:	add    rsp,0x8
  4032dc:	pop    rbx
  4032dd:	pop    rbp
  4032de:	pop    r12
  4032e0:	mov    eax,0xffffffff
  4032e5:	pop    r13
  4032e7:	ret    
  4032e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032f0:	endbr64 
  4032f4:	mov    rdi,rsi
  4032f7:	test   rcx,rcx
  4032fa:	je     403308 <__sprintf_chk@plt+0xd28>
  4032fc:	mov    rsi,rcx
  4032ff:	jmp    402510 <realloc@plt>
  403304:	nop    DWORD PTR [rax+0x0]
  403308:	sub    rsp,0x8
  40330c:	call   402320 <free@plt>
  403311:	xor    eax,eax
  403313:	add    rsp,0x8
  403317:	ret    
  403318:	nop    DWORD PTR [rax+rax*1+0x0]
  403320:	sub    rsp,0x108
  403327:	mov    QWORD PTR [rsp+0x8],rdi
  40332c:	mov    QWORD PTR [rsp+0x10],rsi
  403331:	mov    QWORD PTR [rsp+0x18],rdx
  403336:	mov    rcx,rdi
  403339:	mov    rax,QWORD PTR fs:0x28
  403342:	mov    QWORD PTR [rsp+0xf8],rax
  40334a:	xor    eax,eax
  40334c:	mov    rax,QWORD PTR [rdi+0xa8]
  403353:	lea    rdi,[rsp+0x20]
  403358:	mov    QWORD PTR [rcx+0xa8],rdi
  40335f:	lea    rdi,[rsp+0x28]
  403364:	mov    DWORD PTR [rsp+0xf0],0x0
  40336f:	mov    QWORD PTR [rsp+0x20],rax
  403374:	call   402460 <_setjmp@plt>
  403379:	endbr64 
  40337d:	test   eax,eax
  40337f:	jne    403392 <__sprintf_chk@plt+0xdb2>
  403381:	mov    rsi,QWORD PTR [rsp+0x18]
  403386:	mov    rdi,QWORD PTR [rsp+0x8]
  40338b:	mov    rax,QWORD PTR [rsp+0x10]
  403390:	call   rax
  403392:	mov    rax,QWORD PTR [rsp+0x20]
  403397:	mov    rdx,QWORD PTR [rsp+0x8]
  40339c:	mov    QWORD PTR [rdx+0xa8],rax
  4033a3:	mov    eax,DWORD PTR [rsp+0xf0]
  4033aa:	mov    rsi,QWORD PTR [rsp+0xf8]
  4033b2:	xor    rsi,QWORD PTR fs:0x28
  4033bb:	jne    4033c5 <__sprintf_chk@plt+0xde5>
  4033bd:	add    rsp,0x108
  4033c4:	ret    
  4033c5:	call   4023e0 <__stack_chk_fail@plt>
  4033ca:	nop    WORD PTR [rax+rax*1+0x0]
  4033d0:	push   r12
  4033d2:	push   rbp
  4033d3:	movsxd rbp,esi
  4033d6:	mov    r12,rbp
  4033d9:	push   rbx
  4033da:	movsxd rbx,edi
  4033dd:	call   4025c0 <__ctype_tolower_loc@plt>
  4033e2:	mov    rax,QWORD PTR [rax]
  4033e5:	mov    eax,DWORD PTR [rax+rbp*4]
  4033e8:	sub    eax,0x61
  4033eb:	cmp    eax,0x19
  4033ee:	ja     403550 <__sprintf_chk@plt+0xf70>
  4033f4:	lea    rdx,[rip+0x14565]        # 417960 <__sprintf_chk@plt+0x15380>
  4033fb:	movsxd rax,DWORD PTR [rdx+rax*4]
  4033ff:	add    rax,rdx
  403402:	notrack jmp rax
  403405:	nop    DWORD PTR [rax]
  403408:	test   ebx,ebx
  40340a:	sete   bl
  40340d:	call   4025d0 <__ctype_b_loc@plt>
  403412:	mov    rax,QWORD PTR [rax]
  403415:	movzx  ebx,bl
  403418:	nop    DWORD PTR [rax+rax*1+0x0]
  403420:	test   BYTE PTR [rax+rbp*2+0x1],0x2
  403425:	jne    40342f <__sprintf_chk@plt+0xe4f>
  403427:	test   ebx,ebx
  403429:	sete   bl
  40342c:	movzx  ebx,bl
  40342f:	mov    eax,ebx
  403431:	pop    rbx
  403432:	pop    rbp
  403433:	pop    r12
  403435:	ret    
  403436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403440:	call   4025d0 <__ctype_b_loc@plt>
  403445:	mov    rax,QWORD PTR [rax]
  403448:	movzx  ebx,WORD PTR [rax+rbx*2]
  40344c:	and    bx,0x400
  403451:	movzx  ebx,bx
  403454:	jmp    403420 <__sprintf_chk@plt+0xe40>
  403456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403460:	call   4025d0 <__ctype_b_loc@plt>
  403465:	mov    rax,QWORD PTR [rax]
  403468:	movzx  ebx,WORD PTR [rax+rbx*2]
  40346c:	and    ebx,0x2
  40346f:	movzx  ebx,bx
  403472:	jmp    403420 <__sprintf_chk@plt+0xe40>
  403474:	nop    DWORD PTR [rax+0x0]
  403478:	call   4025d0 <__ctype_b_loc@plt>
  40347d:	mov    rax,QWORD PTR [rax]
  403480:	movzx  ebx,WORD PTR [rax+rbx*2]
  403484:	and    bx,0x800
  403489:	movzx  ebx,bx
  40348c:	jmp    403420 <__sprintf_chk@plt+0xe40>
  40348e:	xchg   ax,ax
  403490:	call   4025d0 <__ctype_b_loc@plt>
  403495:	mov    rax,QWORD PTR [rax]
  403498:	movzx  ebx,WORD PTR [rax+rbx*2]
  40349c:	and    bx,0x200
  4034a1:	movzx  ebx,bx
  4034a4:	jmp    403420 <__sprintf_chk@plt+0xe40>
  4034a9:	nop    DWORD PTR [rax+0x0]
  4034b0:	call   4025d0 <__ctype_b_loc@plt>
  4034b5:	mov    rax,QWORD PTR [rax]
  4034b8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4034bc:	and    ebx,0x4
  4034bf:	movzx  ebx,bx
  4034c2:	jmp    403420 <__sprintf_chk@plt+0xe40>
  4034c7:	nop    WORD PTR [rax+rax*1+0x0]
  4034d0:	call   4025d0 <__ctype_b_loc@plt>
  4034d5:	mov    rax,QWORD PTR [rax]
  4034d8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4034dc:	and    bx,0x2000
  4034e1:	movzx  ebx,bx
  4034e4:	jmp    403420 <__sprintf_chk@plt+0xe40>
  4034e9:	nop    DWORD PTR [rax+0x0]
  4034f0:	call   4025d0 <__ctype_b_loc@plt>
  4034f5:	mov    rax,QWORD PTR [rax]
  4034f8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4034fc:	and    bx,0x100
  403501:	movzx  ebx,bx
  403504:	jmp    403420 <__sprintf_chk@plt+0xe40>
  403509:	nop    DWORD PTR [rax+0x0]
  403510:	call   4025d0 <__ctype_b_loc@plt>
  403515:	mov    rax,QWORD PTR [rax]
  403518:	movzx  ebx,WORD PTR [rax+rbx*2]
  40351c:	and    ebx,0x8
  40351f:	movzx  ebx,bx
  403522:	jmp    403420 <__sprintf_chk@plt+0xe40>
  403527:	nop    WORD PTR [rax+rax*1+0x0]
  403530:	call   4025d0 <__ctype_b_loc@plt>
  403535:	mov    rax,QWORD PTR [rax]
  403538:	movzx  ebx,WORD PTR [rax+rbx*2]
  40353c:	and    bx,0x1000
  403541:	movzx  ebx,bx
  403544:	jmp    403420 <__sprintf_chk@plt+0xe40>
  403549:	nop    DWORD PTR [rax+0x0]
  403550:	cmp    r12d,ebx
  403553:	sete   bl
  403556:	movzx  ebx,bl
  403559:	jmp    40342f <__sprintf_chk@plt+0xe4f>
  40355e:	xchg   ax,ax
  403560:	push   r13
  403562:	mov    r13d,edi
  403565:	push   r12
  403567:	mov    r12,rdx
  40356a:	push   rbp
  40356b:	mov    ebp,0x1
  403570:	push   rbx
  403571:	sub    rsp,0x8
  403575:	cmp    BYTE PTR [rsi+0x1],0x5e
  403579:	jne    4035ad <__sprintf_chk@plt+0xfcd>
  40357b:	inc    rsi
  40357e:	lea    rbx,[rsi+0x1]
  403582:	xor    ebp,ebp
  403584:	cmp    rbx,r12
  403587:	jb     4035b6 <__sprintf_chk@plt+0xfd6>
  403589:	nop    DWORD PTR [rax+0x0]
  403590:	xor    ebp,0x1
  403593:	add    rsp,0x8
  403597:	pop    rbx
  403598:	mov    eax,ebp
  40359a:	pop    rbp
  40359b:	pop    r12
  40359d:	pop    r13
  40359f:	ret    
  4035a0:	cmp    cl,0x2d
  4035a3:	je     4035e8 <__sprintf_chk@plt+0x1008>
  4035a5:	cmp    r13d,eax
  4035a8:	je     403593 <__sprintf_chk@plt+0xfb3>
  4035aa:	mov    rsi,rbx
  4035ad:	lea    rbx,[rsi+0x1]
  4035b1:	cmp    rbx,r12
  4035b4:	jae    403590 <__sprintf_chk@plt+0xfb0>
  4035b6:	movzx  eax,BYTE PTR [rsi+0x1]
  4035ba:	movzx  ecx,BYTE PTR [rsi+0x2]
  4035be:	cmp    al,0x25
  4035c0:	jne    4035a0 <__sprintf_chk@plt+0xfc0>
  4035c2:	lea    rbx,[rsi+0x2]
  4035c6:	mov    edi,r13d
  4035c9:	movzx  esi,cl
  4035cc:	call   4033d0 <__sprintf_chk@plt+0xdf0>
  4035d1:	test   eax,eax
  4035d3:	je     4035aa <__sprintf_chk@plt+0xfca>
  4035d5:	add    rsp,0x8
  4035d9:	pop    rbx
  4035da:	mov    eax,ebp
  4035dc:	pop    rbp
  4035dd:	pop    r12
  4035df:	pop    r13
  4035e1:	ret    
  4035e2:	nop    WORD PTR [rax+rax*1+0x0]
  4035e8:	lea    rdx,[rsi+0x3]
  4035ec:	cmp    rdx,r12
  4035ef:	jae    4035a5 <__sprintf_chk@plt+0xfc5>
  4035f1:	cmp    r13d,eax
  4035f4:	jl     4035ff <__sprintf_chk@plt+0x101f>
  4035f6:	movzx  eax,BYTE PTR [rsi+0x3]
  4035fa:	cmp    eax,r13d
  4035fd:	jge    403593 <__sprintf_chk@plt+0xfb3>
  4035ff:	mov    rbx,rdx
  403602:	jmp    4035aa <__sprintf_chk@plt+0xfca>
  403604:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40360f:	nop
  403610:	vmovq  rdx,xmm0
  403615:	shr    rdx,0x20
  403619:	vmovq  rax,xmm0
  40361e:	add    eax,edx
  403620:	movzx  edx,BYTE PTR [rdi]
  403623:	mov    ecx,0x1
  403628:	shlx   rcx,rcx,rdx
  40362d:	dec    rcx
  403630:	or     rcx,0x1
  403634:	xor    edx,edx
  403636:	div    rcx
  403639:	mov    rax,QWORD PTR [rsi]
  40363c:	lea    rdx,[rdx+rdx*4]
  403640:	lea    rax,[rax+rdx*8]
  403644:	ret    
  403645:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403650:	mov    eax,DWORD PTR [rsi+0x8]
  403653:	cmp    eax,0x2
  403656:	je     4036c0 <__sprintf_chk@plt+0x10e0>
  403658:	jle    403690 <__sprintf_chk@plt+0x10b0>
  40365a:	cmp    eax,0x3
  40365d:	je     4036f0 <__sprintf_chk@plt+0x1110>
  403663:	cmp    eax,0x4
  403666:	jne    4036c0 <__sprintf_chk@plt+0x10e0>
  403668:	movzx  edx,BYTE PTR [rdi+0xb]
  40366c:	mov    eax,0x1
  403671:	shlx   rax,rax,rdx
  403676:	mov    rdx,QWORD PTR [rsi]
  403679:	dec    eax
  40367b:	and    eax,DWORD PTR [rdx+0xc]
  40367e:	cdqe   
  403680:	lea    rdx,[rax+rax*4]
  403684:	mov    rax,QWORD PTR [rdi+0x20]
  403688:	lea    rax,[rax+rdx*8]
  40368c:	ret    
  40368d:	nop    DWORD PTR [rax]
  403690:	cmp    eax,0x1
  403693:	jne    4036c0 <__sprintf_chk@plt+0x10e0>
  403695:	movzx  edx,BYTE PTR [rdi+0xb]
  403699:	mov    eax,0x1
  40369e:	shlx   rax,rax,rdx
  4036a3:	dec    eax
  4036a5:	and    eax,DWORD PTR [rsi]
  4036a7:	cdqe   
  4036a9:	lea    rdx,[rax+rax*4]
  4036ad:	mov    rax,QWORD PTR [rdi+0x20]
  4036b1:	lea    rax,[rax+rdx*8]
  4036b5:	ret    
  4036b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036c0:	movzx  edx,BYTE PTR [rdi+0xb]
  4036c4:	mov    ecx,0x1
  4036c9:	mov    eax,DWORD PTR [rsi]
  4036cb:	shlx   rcx,rcx,rdx
  4036d0:	dec    rcx
  4036d3:	or     rcx,0x1
  4036d7:	xor    edx,edx
  4036d9:	div    rcx
  4036dc:	mov    rax,QWORD PTR [rdi+0x20]
  4036e0:	lea    rdx,[rdx+rdx*4]
  4036e4:	lea    rax,[rax+rdx*8]
  4036e8:	ret    
  4036e9:	nop    DWORD PTR [rax+0x0]
  4036f0:	vmovsd xmm0,QWORD PTR [rsi]
  4036f4:	vucomisd xmm0,QWORD PTR [rip+0x14d5c]        # 418458 <__sprintf_chk@plt+0x15e78>
  4036fc:	jp     403708 <__sprintf_chk@plt+0x1128>
  4036fe:	jne    403708 <__sprintf_chk@plt+0x1128>
  403700:	mov    rax,QWORD PTR [rdi+0x20]
  403704:	ret    
  403705:	nop    DWORD PTR [rax]
  403708:	lea    rsi,[rdi+0x20]
  40370c:	add    rdi,0xb
  403710:	jmp    403610 <__sprintf_chk@plt+0x1030>
  403715:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403720:	vxorpd xmm1,xmm1,xmm1
  403724:	vcvtsi2sd xmm1,xmm1,esi
  403728:	test   esi,esi
  40372a:	jne    403760 <__sprintf_chk@plt+0x1180>
  40372c:	mov    rax,QWORD PTR [rdi+0x20]
  403730:	jmp    403741 <__sprintf_chk@plt+0x1161>
  403732:	nop    WORD PTR [rax+rax*1+0x0]
  403738:	mov    rax,QWORD PTR [rax+0x20]
  40373c:	test   rax,rax
  40373f:	je     403758 <__sprintf_chk@plt+0x1178>
  403741:	cmp    DWORD PTR [rax+0x18],0x3
  403745:	jne    403738 <__sprintf_chk@plt+0x1158>
  403747:	vucomisd xmm1,QWORD PTR [rax+0x10]
  40374c:	jp     403738 <__sprintf_chk@plt+0x1158>
  40374e:	jne    403738 <__sprintf_chk@plt+0x1158>
  403750:	ret    
  403751:	nop    DWORD PTR [rax+0x0]
  403758:	lea    rax,[rip+0x148b1]        # 418010 <__sprintf_chk@plt+0x15a30>
  40375f:	ret    
  403760:	lea    rsi,[rdi+0x20]
  403764:	vmovapd xmm0,xmm1
  403768:	add    rdi,0xb
  40376c:	call   403610 <__sprintf_chk@plt+0x1030>
  403771:	jmp    403741 <__sprintf_chk@plt+0x1161>
  403773:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40377e:	xchg   ax,ax
  403780:	mov    edx,DWORD PTR [rsi+0x8]
  403783:	cmp    edx,0x3
  403786:	je     4037f8 <__sprintf_chk@plt+0x1218>
  403788:	cmp    edx,0x4
  40378b:	je     403820 <__sprintf_chk@plt+0x1240>
  403791:	lea    rax,[rip+0x14878]        # 418010 <__sprintf_chk@plt+0x15a30>
  403798:	test   edx,edx
  40379a:	je     4037f0 <__sprintf_chk@plt+0x1210>
  40379c:	mov    r8,rsi
  40379f:	call   403650 <__sprintf_chk@plt+0x1070>
  4037a4:	mov    rcx,rax
  4037a7:	lea    rdi,[rcx+0x10]
  4037ab:	mov    rsi,r8
  4037ae:	call   402b40 <__sprintf_chk@plt+0x560>
  4037b3:	test   eax,eax
  4037b5:	jne    4037d9 <__sprintf_chk@plt+0x11f9>
  4037b7:	nop    WORD PTR [rax+rax*1+0x0]
  4037c0:	mov    rcx,QWORD PTR [rcx+0x20]
  4037c4:	test   rcx,rcx
  4037c7:	je     4037e0 <__sprintf_chk@plt+0x1200>
  4037c9:	lea    rdi,[rcx+0x10]
  4037cd:	mov    rsi,r8
  4037d0:	call   402b40 <__sprintf_chk@plt+0x560>
  4037d5:	test   eax,eax
  4037d7:	je     4037c0 <__sprintf_chk@plt+0x11e0>
  4037d9:	mov    rax,rcx
  4037dc:	ret    
  4037dd:	nop    DWORD PTR [rax]
  4037e0:	lea    rax,[rip+0x14829]        # 418010 <__sprintf_chk@plt+0x15a30>
  4037e7:	ret    
  4037e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037f0:	ret    
  4037f1:	nop    DWORD PTR [rax+0x0]
  4037f8:	vmovsd xmm0,QWORD PTR [rsi]
  4037fc:	vxorpd xmm1,xmm1,xmm1
  403800:	vcvttsd2si eax,xmm0
  403804:	vcvtsi2sd xmm1,xmm1,eax
  403808:	vucomisd xmm1,xmm0
  40380c:	jp     40379c <__sprintf_chk@plt+0x11bc>
  40380e:	jne    40379c <__sprintf_chk@plt+0x11bc>
  403810:	lea    edx,[rax-0x1]
  403813:	cmp    edx,DWORD PTR [rdi+0x38]
  403816:	jb     403866 <__sprintf_chk@plt+0x1286>
  403818:	mov    esi,eax
  40381a:	jmp    403720 <__sprintf_chk@plt+0x1140>
  40381f:	nop
  403820:	movzx  ecx,BYTE PTR [rdi+0xb]
  403824:	mov    rdx,QWORD PTR [rsi]
  403827:	mov    eax,0x1
  40382c:	shlx   rax,rax,rcx
  403831:	dec    eax
  403833:	and    eax,DWORD PTR [rdx+0xc]
  403836:	cdqe   
  403838:	lea    rcx,[rax+rax*4]
  40383c:	mov    rax,QWORD PTR [rdi+0x20]
  403840:	lea    rax,[rax+rcx*8]
  403844:	jmp    403859 <__sprintf_chk@plt+0x1279>
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403850:	mov    rax,QWORD PTR [rax+0x20]
  403854:	test   rax,rax
  403857:	je     4037e0 <__sprintf_chk@plt+0x1200>
  403859:	cmp    DWORD PTR [rax+0x18],0x4
  40385d:	jne    403850 <__sprintf_chk@plt+0x1270>
  40385f:	cmp    rdx,QWORD PTR [rax+0x10]
  403863:	jne    403850 <__sprintf_chk@plt+0x1270>
  403865:	ret    
  403866:	mov    rdx,QWORD PTR [rdi+0x18]
  40386a:	cdqe   
  40386c:	shl    rax,0x4
  403870:	lea    rax,[rdx+rax*1-0x10]
  403875:	ret    
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	mov    r10d,DWORD PTR [rdi+0x38]
  403884:	mov    eax,r10d
  403887:	test   r10d,r10d
  40388a:	je     4038a6 <__sprintf_chk@plt+0x12c6>
  40388c:	mov    rsi,QWORD PTR [rdi+0x18]
  403890:	lea    edx,[r10-0x1]
  403894:	shl    rdx,0x4
  403898:	mov    r8d,DWORD PTR [rsi+rdx*1+0x8]
  40389d:	test   r8d,r8d
  4038a0:	je     4039a0 <__sprintf_chk@plt+0x13c0>
  4038a6:	lea    rdx,[rip+0x146f3]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  4038ad:	cmp    QWORD PTR [rdi+0x20],rdx
  4038b1:	je     403958 <__sprintf_chk@plt+0x1378>
  4038b7:	push   rbx
  4038b8:	lea    r9d,[r10+0x1]
  4038bc:	mov    rbx,rdi
  4038bf:	mov    r8d,r10d
  4038c2:	jmp    4038ef <__sprintf_chk@plt+0x130f>
  4038c4:	nop    DWORD PTR [rax+0x0]
  4038c8:	mov    esi,r9d
  4038cb:	mov    rdi,rbx
  4038ce:	call   403720 <__sprintf_chk@plt+0x1140>
  4038d3:	mov    edx,DWORD PTR [rax+0x8]
  4038d6:	test   edx,edx
  4038d8:	je     403928 <__sprintf_chk@plt+0x1348>
  4038da:	lea    eax,[r9+r9*1]
  4038de:	mov    r8d,r9d
  4038e1:	cmp    eax,0x7ffffffd
  4038e6:	ja     403968 <__sprintf_chk@plt+0x1388>
  4038ec:	mov    r9d,eax
  4038ef:	lea    eax,[r9-0x1]
  4038f3:	cmp    r10d,eax
  4038f6:	jbe    4038c8 <__sprintf_chk@plt+0x12e8>
  4038f8:	movsxd rax,r9d
  4038fb:	mov    rdx,QWORD PTR [rbx+0x18]
  4038ff:	shl    rax,0x4
  403903:	lea    rax,[rdx+rax*1-0x10]
  403908:	jmp    4038d3 <__sprintf_chk@plt+0x12f3>
  40390a:	nop    WORD PTR [rax+rax*1+0x0]
  403910:	mov    esi,r11d
  403913:	mov    rdi,rbx
  403916:	call   403720 <__sprintf_chk@plt+0x1140>
  40391b:	mov    eax,DWORD PTR [rax+0x8]
  40391e:	test   eax,eax
  403920:	cmovne r8d,r11d
  403924:	cmove  r9d,r11d
  403928:	mov    eax,r9d
  40392b:	sub    eax,r8d
  40392e:	cmp    eax,0x1
  403931:	jbe    403960 <__sprintf_chk@plt+0x1380>
  403933:	lea    r11d,[r9+r8*1]
  403937:	shr    r11d,1
  40393a:	lea    eax,[r11-0x1]
  40393e:	cmp    r10d,eax
  403941:	jbe    403910 <__sprintf_chk@plt+0x1330>
  403943:	mov    eax,r11d
  403946:	mov    rdx,QWORD PTR [rbx+0x18]
  40394a:	shl    rax,0x4
  40394e:	lea    rax,[rdx+rax*1-0x10]
  403953:	jmp    40391b <__sprintf_chk@plt+0x133b>
  403955:	nop    DWORD PTR [rax]
  403958:	ret    
  403959:	nop    DWORD PTR [rax+0x0]
  403960:	mov    eax,r8d
  403963:	pop    rbx
  403964:	ret    
  403965:	nop    DWORD PTR [rax]
  403968:	xor    r8d,r8d
  40396b:	jmp    403985 <__sprintf_chk@plt+0x13a5>
  40396d:	nop    DWORD PTR [rax]
  403970:	mov    esi,r9d
  403973:	mov    rdi,rbx
  403976:	call   403720 <__sprintf_chk@plt+0x1140>
  40397b:	mov    ecx,DWORD PTR [rax+0x8]
  40397e:	test   ecx,ecx
  403980:	je     403960 <__sprintf_chk@plt+0x1380>
  403982:	mov    r8d,r9d
  403985:	lea    r9d,[r8+0x1]
  403989:	cmp    r10d,r8d
  40398c:	jbe    403970 <__sprintf_chk@plt+0x1390>
  40398e:	movsxd rax,r9d
  403991:	mov    rdx,QWORD PTR [rbx+0x18]
  403995:	shl    rax,0x4
  403999:	lea    rax,[rdx+rax*1-0x10]
  40399e:	jmp    40397b <__sprintf_chk@plt+0x139b>
  4039a0:	xor    eax,eax
  4039a2:	jmp    4039c2 <__sprintf_chk@plt+0x13e2>
  4039a4:	nop    DWORD PTR [rax+0x0]
  4039a8:	lea    edx,[r10+rax*1]
  4039ac:	shr    edx,1
  4039ae:	lea    ecx,[rdx-0x1]
  4039b1:	shl    rcx,0x4
  4039b5:	mov    edi,DWORD PTR [rsi+rcx*1+0x8]
  4039b9:	test   edi,edi
  4039bb:	cmovne eax,edx
  4039be:	cmove  r10d,edx
  4039c2:	mov    edx,r10d
  4039c5:	sub    edx,eax
  4039c7:	cmp    edx,0x1
  4039ca:	ja     4039a8 <__sprintf_chk@plt+0x13c8>
  4039cc:	ret    
  4039cd:	nop    DWORD PTR [rax]
  4039d0:	cmp    edx,0x5
  4039d3:	je     403a40 <__sprintf_chk@plt+0x1460>
  4039d5:	cmp    edx,0x7
  4039d8:	je     403a40 <__sprintf_chk@plt+0x1460>
  4039da:	mov    rax,QWORD PTR [rdi]
  4039dd:	movsxd rdx,edx
  4039e0:	mov    rsi,QWORD PTR [rax+rdx*8+0xe0]
  4039e8:	lea    rax,[rip+0x14621]        # 418010 <__sprintf_chk@plt+0x15a30>
  4039ef:	test   rsi,rsi
  4039f2:	je     403a3d <__sprintf_chk@plt+0x145d>
  4039f4:	mov    rax,QWORD PTR [rdi]
  4039f7:	mov    ecx,ecx
  4039f9:	mov    rdx,QWORD PTR [rax+rcx*8+0x128]
  403a01:	movzx  ecx,BYTE PTR [rsi+0xb]
  403a05:	mov    eax,0x1
  403a0a:	shlx   rax,rax,rcx
  403a0f:	dec    eax
  403a11:	and    eax,DWORD PTR [rdx+0xc]
  403a14:	cdqe   
  403a16:	lea    rcx,[rax+rax*4]
  403a1a:	mov    rax,QWORD PTR [rsi+0x20]
  403a1e:	lea    rax,[rax+rcx*8]
  403a22:	jmp    403a31 <__sprintf_chk@plt+0x1451>
  403a24:	nop    DWORD PTR [rax+0x0]
  403a28:	mov    rax,QWORD PTR [rax+0x20]
  403a2c:	test   rax,rax
  403a2f:	je     403a50 <__sprintf_chk@plt+0x1470>
  403a31:	cmp    DWORD PTR [rax+0x18],0x4
  403a35:	jne    403a28 <__sprintf_chk@plt+0x1448>
  403a37:	cmp    rdx,QWORD PTR [rax+0x10]
  403a3b:	jne    403a28 <__sprintf_chk@plt+0x1448>
  403a3d:	ret    
  403a3e:	xchg   ax,ax
  403a40:	mov    rsi,QWORD PTR [rsi+0x10]
  403a44:	jmp    4039e8 <__sprintf_chk@plt+0x1408>
  403a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a50:	lea    rax,[rip+0x145b9]        # 418010 <__sprintf_chk@plt+0x15a30>
  403a57:	ret    
  403a58:	nop    DWORD PTR [rax+rax*1+0x0]
  403a60:	push   rbp
  403a61:	mov    r10d,esi
  403a64:	mov    rbp,rdi
  403a67:	push   rbx
  403a68:	xor    r11d,r11d
  403a6b:	mov    rbx,QWORD PTR [rdi]
  403a6e:	mov    r9,QWORD PTR [rbx+0xb0]
  403a75:	jmp    403aac <__sprintf_chk@plt+0x14cc>
  403a77:	nop    WORD PTR [rax+rax*1+0x0]
  403a80:	movzx  eax,BYTE PTR [r8+0x9]
  403a85:	mov    edx,eax
  403a87:	and    edx,0x3
  403a8a:	or     edx,r10d
  403a8d:	je     403aa9 <__sprintf_chk@plt+0x14c9>
  403a8f:	test   al,0x8
  403a91:	jne    403aa9 <__sprintf_chk@plt+0x14c9>
  403a93:	mov    rdi,QWORD PTR [r8+0x10]
  403a97:	test   rdi,rdi
  403a9a:	je     403aa2 <__sprintf_chk@plt+0x14c2>
  403a9c:	test   BYTE PTR [rdi+0xa],0x4
  403aa0:	je     403ac0 <__sprintf_chk@plt+0x14e0>
  403aa2:	or     eax,0x8
  403aa5:	mov    BYTE PTR [r8+0x9],al
  403aa9:	mov    r9,r8
  403aac:	mov    r8,QWORD PTR [r9]
  403aaf:	test   r8,r8
  403ab2:	jne    403a80 <__sprintf_chk@plt+0x14a0>
  403ab4:	pop    rbx
  403ab5:	mov    rax,r11
  403ab8:	pop    rbp
  403ab9:	ret    
  403aba:	nop    WORD PTR [rax+rax*1+0x0]
  403ac0:	mov    rax,QWORD PTR [rbp+0x0]
  403ac4:	mov    esi,0x2
  403ac9:	mov    rdx,QWORD PTR [rax+0x138]
  403ad0:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  403ad5:	test   rax,rax
  403ad8:	je     403b10 <__sprintf_chk@plt+0x1530>
  403ada:	mov    rax,QWORD PTR [r8+0x20]
  403ade:	or     BYTE PTR [r8+0x9],0x8
  403ae3:	lea    r11,[r11+rax*1+0x28]
  403ae8:	mov    rax,QWORD PTR [r8]
  403aeb:	mov    QWORD PTR [r9],rax
  403aee:	mov    rax,QWORD PTR [rbx+0x50]
  403af2:	test   rax,rax
  403af5:	je     403b20 <__sprintf_chk@plt+0x1540>
  403af7:	mov    rdx,QWORD PTR [rax]
  403afa:	mov    QWORD PTR [r8],rdx
  403afd:	mov    QWORD PTR [rax],r8
  403b00:	mov    QWORD PTR [rbx+0x50],r8
  403b04:	jmp    403aac <__sprintf_chk@plt+0x14cc>
  403b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b10:	movzx  eax,BYTE PTR [r8+0x9]
  403b15:	jmp    403aa2 <__sprintf_chk@plt+0x14c2>
  403b17:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	mov    QWORD PTR [r8],r8
  403b23:	mov    QWORD PTR [rbx+0x50],r8
  403b27:	jmp    403aac <__sprintf_chk@plt+0x14cc>
  403b29:	nop    DWORD PTR [rax+0x0]
  403b30:	test   edx,edx
  403b32:	jle    403b68 <__sprintf_chk@plt+0x1588>
  403b34:	mov    r8,QWORD PTR [rsi]
  403b37:	jmp    403b5a <__sprintf_chk@plt+0x157a>
  403b39:	nop    DWORD PTR [rax+0x0]
  403b40:	mov    rax,QWORD PTR [rdi+0x8]
  403b44:	dec    edx
  403b46:	mov    rax,QWORD PTR [rax]
  403b49:	cmp    BYTE PTR [rax+0xa],0x0
  403b4d:	jne    403b52 <__sprintf_chk@plt+0x1572>
  403b4f:	sub    edx,DWORD PTR [rdi+0x24]
  403b52:	sub    rdi,0x28
  403b56:	test   edx,edx
  403b58:	jle    403b68 <__sprintf_chk@plt+0x1588>
  403b5a:	cmp    rdi,r8
  403b5d:	ja     403b40 <__sprintf_chk@plt+0x1560>
  403b5f:	xor    eax,eax
  403b61:	ret    
  403b62:	nop    WORD PTR [rax+rax*1+0x0]
  403b68:	test   edx,edx
  403b6a:	jne    403b99 <__sprintf_chk@plt+0x15b9>
  403b6c:	mov    rdx,QWORD PTR [rsi]
  403b6f:	xor    eax,eax
  403b71:	cmp    rdx,rdi
  403b74:	jae    403b98 <__sprintf_chk@plt+0x15b8>
  403b76:	sub    rdi,rdx
  403b79:	sar    rdi,0x3
  403b7d:	movabs rax,0xcccccccccccccccd
  403b87:	imul   rdi,rax
  403b8b:	mov    eax,0x1
  403b90:	mov    DWORD PTR [rcx],edi
  403b92:	ret    
  403b93:	nop    DWORD PTR [rax+rax*1+0x0]
  403b98:	ret    
  403b99:	mov    DWORD PTR [rcx],0x0
  403b9f:	mov    eax,0x1
  403ba4:	ret    
  403ba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403bb0:	mov    eax,DWORD PTR [rsi]
  403bb2:	cmp    eax,0xd
  403bb5:	je     403be8 <__sprintf_chk@plt+0x1608>
  403bb7:	cmp    eax,0xe
  403bba:	je     403bc0 <__sprintf_chk@plt+0x15e0>
  403bbc:	ret    
  403bbd:	nop    DWORD PTR [rax]
  403bc0:	mov    rax,QWORD PTR [rdi]
  403bc3:	movsxd rdx,DWORD PTR [rdx]
  403bc6:	mov    rax,QWORD PTR [rax+0x18]
  403bca:	lea    rdx,[rax+rdx*4]
  403bce:	mov    eax,DWORD PTR [rdx]
  403bd0:	and    eax,0x7fffff
  403bd5:	or     eax,0x1000000
  403bda:	mov    DWORD PTR [rdx],eax
  403bdc:	mov    DWORD PTR [rsi],0xb
  403be2:	ret    
  403be3:	nop    DWORD PTR [rax+rax*1+0x0]
  403be8:	mov    rax,QWORD PTR [rdi]
  403beb:	movsxd rcx,DWORD PTR [rdx]
  403bee:	mov    rax,QWORD PTR [rax+0x18]
  403bf2:	mov    DWORD PTR [rsi],0xc
  403bf8:	mov    eax,DWORD PTR [rax+rcx*4]
  403bfb:	shr    eax,0x6
  403bfe:	and    eax,0xff
  403c03:	mov    DWORD PTR [rdx],eax
  403c05:	ret    
  403c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c10:	mov    rax,QWORD PTR [rdi]
  403c13:	movsxd rdx,esi
  403c16:	mov    rax,QWORD PTR [rax+0x18]
  403c1a:	lea    rdx,[rax+rdx*4]
  403c1e:	test   esi,esi
  403c20:	jle    403c35 <__sprintf_chk@plt+0x1655>
  403c22:	mov    eax,DWORD PTR [rdx-0x4]
  403c25:	lea    rcx,[rip+0x143b4]        # 417fe0 <__sprintf_chk@plt+0x15a00>
  403c2c:	and    eax,0x3f
  403c2f:	cmp    BYTE PTR [rcx+rax*1],0x0
  403c33:	js     403c50 <__sprintf_chk@plt+0x1670>
  403c35:	mov    ecx,DWORD PTR [rdx]
  403c37:	mov    eax,ecx
  403c39:	and    eax,0xffffc03f
  403c3e:	mov    esi,eax
  403c40:	or     esi,0x40
  403c43:	and    ecx,0x3fc0
  403c49:	cmove  eax,esi
  403c4c:	mov    DWORD PTR [rdx],eax
  403c4e:	ret    
  403c4f:	nop
  403c50:	sub    rdx,0x4
  403c54:	jmp    403c35 <__sprintf_chk@plt+0x1655>
  403c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c60:	mov    rax,QWORD PTR [rdi+0x28]
  403c64:	mov    edx,0xffffd8ee
  403c69:	mov    rax,QWORD PTR [rax+0x8]
  403c6d:	sub    edx,esi
  403c6f:	mov    rcx,QWORD PTR [rax]
  403c72:	lea    rax,[rip+0x14397]        # 418010 <__sprintf_chk@plt+0x15a30>
  403c79:	movzx  edi,BYTE PTR [rcx+0xb]
  403c7d:	cmp    edx,edi
  403c7f:	jg     403c93 <__sprintf_chk@plt+0x16b3>
  403c81:	mov    eax,0xffffd8ed
  403c86:	sub    eax,esi
  403c88:	cdqe   
  403c8a:	shl    rax,0x4
  403c8e:	lea    rax,[rcx+rax*1+0x28]
  403c93:	ret    
  403c94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c9f:	nop
  403ca0:	test   esi,esi
  403ca2:	jle    403cd0 <__sprintf_chk@plt+0x16f0>
  403ca4:	movsxd rsi,esi
  403ca7:	mov    rax,QWORD PTR [rdi+0x18]
  403cab:	shl    rsi,0x4
  403caf:	lea    rax,[rax+rsi*1-0x10]
  403cb4:	cmp    QWORD PTR [rdi+0x10],rax
  403cb8:	ja     403cc8 <__sprintf_chk@plt+0x16e8>
  403cba:	lea    rax,[rip+0x1434f]        # 418010 <__sprintf_chk@plt+0x15a30>
  403cc1:	ret    
  403cc2:	nop    WORD PTR [rax+rax*1+0x0]
  403cc8:	ret    
  403cc9:	nop    DWORD PTR [rax+0x0]
  403cd0:	cmp    esi,0xffffd8f1
  403cd6:	jge    403d10 <__sprintf_chk@plt+0x1730>
  403cd8:	cmp    esi,0xffffd8ef
  403cde:	je     403d20 <__sprintf_chk@plt+0x1740>
  403ce0:	cmp    esi,0xffffd8f0
  403ce6:	je     403cf8 <__sprintf_chk@plt+0x1718>
  403ce8:	cmp    esi,0xffffd8ee
  403cee:	je     403d08 <__sprintf_chk@plt+0x1728>
  403cf0:	jmp    403c60 <__sprintf_chk@plt+0x1680>
  403cf5:	nop    DWORD PTR [rax]
  403cf8:	mov    rax,QWORD PTR [rdi+0x20]
  403cfc:	add    rax,0xa0
  403d02:	ret    
  403d03:	nop    DWORD PTR [rax+rax*1+0x0]
  403d08:	lea    rax,[rdi+0x78]
  403d0c:	ret    
  403d0d:	nop    DWORD PTR [rax]
  403d10:	movsxd rax,esi
  403d13:	shl    rax,0x4
  403d17:	add    rax,QWORD PTR [rdi+0x10]
  403d1b:	ret    
  403d1c:	nop    DWORD PTR [rax+0x0]
  403d20:	mov    rdx,QWORD PTR [rdi+0x28]
  403d24:	lea    rax,[rdi+0x88]
  403d2b:	mov    rdx,QWORD PTR [rdx+0x8]
  403d2f:	mov    rdx,QWORD PTR [rdx]
  403d32:	mov    rdx,QWORD PTR [rdx+0x18]
  403d36:	mov    DWORD PTR [rdi+0x90],0x5
  403d40:	mov    QWORD PTR [rdi+0x88],rdx
  403d47:	ret    
  403d48:	nop    DWORD PTR [rax+rax*1+0x0]
  403d50:	mov    r8,rdi
  403d53:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403d58:	mov    rcx,QWORD PTR [r8+0x10]
  403d5c:	add    rax,0x10
  403d60:	cmp    rax,rcx
  403d63:	jae    403d7e <__sprintf_chk@plt+0x179e>
  403d65:	nop    DWORD PTR [rax]
  403d68:	mov    rdx,QWORD PTR [rax]
  403d6b:	add    rax,0x10
  403d6f:	mov    QWORD PTR [rax-0x20],rdx
  403d73:	mov    edx,DWORD PTR [rax-0x8]
  403d76:	mov    DWORD PTR [rax-0x18],edx
  403d79:	cmp    rax,rcx
  403d7c:	jb     403d68 <__sprintf_chk@plt+0x1788>
  403d7e:	sub    rcx,0x10
  403d82:	mov    QWORD PTR [r8+0x10],rcx
  403d86:	ret    
  403d87:	nop    WORD PTR [rax+rax*1+0x0]
  403d90:	mov    r8,rdi
  403d93:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403d98:	mov    rsi,QWORD PTR [r8+0x10]
  403d9c:	cmp    rax,rsi
  403d9f:	jae    403dbf <__sprintf_chk@plt+0x17df>
  403da1:	mov    rdx,rsi
  403da4:	nop    DWORD PTR [rax+0x0]
  403da8:	mov    rcx,QWORD PTR [rdx-0x10]
  403dac:	sub    rdx,0x10
  403db0:	mov    QWORD PTR [rdx+0x10],rcx
  403db4:	mov    ecx,DWORD PTR [rdx+0x8]
  403db7:	mov    DWORD PTR [rdx+0x18],ecx
  403dba:	cmp    rax,rdx
  403dbd:	jb     403da8 <__sprintf_chk@plt+0x17c8>
  403dbf:	mov    rdx,QWORD PTR [rsi]
  403dc2:	mov    QWORD PTR [rax],rdx
  403dc5:	mov    edx,DWORD PTR [rsi+0x8]
  403dc8:	mov    DWORD PTR [rax+0x8],edx
  403dcb:	ret    
  403dcc:	nop    DWORD PTR [rax+0x0]
  403dd0:	mov    r10d,edx
  403dd3:	mov    r8,rdi
  403dd6:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403ddb:	mov    esi,r10d
  403dde:	mov    rdi,r8
  403de1:	mov    r9,rax
  403de4:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403de9:	lea    rdx,[rip+0x14220]        # 418010 <__sprintf_chk@plt+0x15a30>
  403df0:	cmp    r9,rdx
  403df3:	je     403e08 <__sprintf_chk@plt+0x1828>
  403df5:	cmp    rax,rdx
  403df8:	je     403e08 <__sprintf_chk@plt+0x1828>
  403dfa:	mov    rsi,rax
  403dfd:	mov    rdi,r9
  403e00:	jmp    402b40 <__sprintf_chk@plt+0x560>
  403e05:	nop    DWORD PTR [rax]
  403e08:	xor    eax,eax
  403e0a:	ret    
  403e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403e15:	mov    edx,DWORD PTR [rax+0x8]
  403e18:	test   edx,edx
  403e1a:	je     403e26 <__sprintf_chk@plt+0x1846>
  403e1c:	cmp    edx,0x1
  403e1f:	je     403e30 <__sprintf_chk@plt+0x1850>
  403e21:	mov    edx,0x1
  403e26:	mov    eax,edx
  403e28:	ret    
  403e29:	nop    DWORD PTR [rax+0x0]
  403e30:	mov    eax,DWORD PTR [rax]
  403e32:	xor    edx,edx
  403e34:	test   eax,eax
  403e36:	setne  dl
  403e39:	mov    eax,edx
  403e3b:	ret    
  403e3c:	nop    DWORD PTR [rax+0x0]
  403e40:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403e45:	mov    ecx,DWORD PTR [rax+0x8]
  403e48:	cmp    ecx,0x2
  403e4b:	je     403e60 <__sprintf_chk@plt+0x1880>
  403e4d:	xor    edx,edx
  403e4f:	cmp    ecx,0x7
  403e52:	jne    403e5b <__sprintf_chk@plt+0x187b>
  403e54:	mov    rdx,QWORD PTR [rax]
  403e57:	add    rdx,0x28
  403e5b:	mov    rax,rdx
  403e5e:	ret    
  403e5f:	nop
  403e60:	mov    rdx,QWORD PTR [rax]
  403e63:	mov    rax,rdx
  403e66:	ret    
  403e67:	nop    WORD PTR [rax+rax*1+0x0]
  403e70:	mov    r8,rdi
  403e73:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403e78:	mov    r9,QWORD PTR [r8+0x10]
  403e7c:	mov    rdi,QWORD PTR [rax]
  403e7f:	lea    rsi,[r9-0x10]
  403e83:	call   403780 <__sprintf_chk@plt+0x11a0>
  403e88:	mov    rdx,QWORD PTR [rax]
  403e8b:	mov    eax,DWORD PTR [rax+0x8]
  403e8e:	mov    QWORD PTR [r9-0x10],rdx
  403e92:	mov    DWORD PTR [r9-0x8],eax
  403e96:	ret    
  403e97:	nop    WORD PTR [rax+rax*1+0x0]
  403ea0:	mov    r9,rdi
  403ea3:	movsxd r8,edx
  403ea6:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403eab:	mov    rdi,QWORD PTR [rax]
  403eae:	lea    eax,[r8-0x1]
  403eb2:	cmp    eax,DWORD PTR [rdi+0x38]
  403eb5:	jb     403ee0 <__sprintf_chk@plt+0x1900>
  403eb7:	mov    esi,r8d
  403eba:	call   403720 <__sprintf_chk@plt+0x1140>
  403ebf:	mov    rdx,QWORD PTR [r9+0x10]
  403ec3:	mov    rcx,QWORD PTR [rax]
  403ec6:	mov    eax,DWORD PTR [rax+0x8]
  403ec9:	mov    QWORD PTR [rdx],rcx
  403ecc:	mov    DWORD PTR [rdx+0x8],eax
  403ecf:	add    rdx,0x10
  403ed3:	mov    QWORD PTR [r9+0x10],rdx
  403ed7:	ret    
  403ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ee0:	mov    rax,QWORD PTR [rdi+0x18]
  403ee4:	shl    r8,0x4
  403ee8:	lea    rax,[rax+r8*1-0x10]
  403eed:	jmp    403ebf <__sprintf_chk@plt+0x18df>
  403eef:	nop
  403ef0:	sub    rsp,0x28
  403ef4:	mov    rax,QWORD PTR fs:0x28
  403efd:	mov    QWORD PTR [rsp+0x18],rax
  403f02:	xor    eax,eax
  403f04:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403f09:	cmp    DWORD PTR [rax+0x8],0x3
  403f0d:	je     403f23 <__sprintf_chk@plt+0x1943>
  403f0f:	mov    rsi,rsp
  403f12:	mov    rdi,rax
  403f15:	call   403080 <__sprintf_chk@plt+0xaa0>
  403f1a:	vxorpd xmm0,xmm0,xmm0
  403f1e:	test   rax,rax
  403f21:	je     403f27 <__sprintf_chk@plt+0x1947>
  403f23:	vmovsd xmm0,QWORD PTR [rax]
  403f27:	mov    rax,QWORD PTR [rsp+0x18]
  403f2c:	xor    rax,QWORD PTR fs:0x28
  403f35:	jne    403f3c <__sprintf_chk@plt+0x195c>
  403f37:	add    rsp,0x28
  403f3b:	ret    
  403f3c:	call   4023e0 <__stack_chk_fail@plt>
  403f41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	sub    rsp,0x28
  403f54:	mov    rax,QWORD PTR fs:0x28
  403f5d:	mov    QWORD PTR [rsp+0x18],rax
  403f62:	xor    eax,eax
  403f64:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403f69:	cmp    DWORD PTR [rax+0x8],0x3
  403f6d:	mov    edx,0x1
  403f72:	je     403f87 <__sprintf_chk@plt+0x19a7>
  403f74:	mov    rsi,rsp
  403f77:	mov    rdi,rax
  403f7a:	call   403080 <__sprintf_chk@plt+0xaa0>
  403f7f:	xor    edx,edx
  403f81:	test   rax,rax
  403f84:	setne  dl
  403f87:	mov    rcx,QWORD PTR [rsp+0x18]
  403f8c:	xor    rcx,QWORD PTR fs:0x28
  403f95:	mov    eax,edx
  403f97:	jne    403f9e <__sprintf_chk@plt+0x19be>
  403f99:	add    rsp,0x28
  403f9d:	ret    
  403f9e:	call   4023e0 <__stack_chk_fail@plt>
  403fa3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403fae:	xchg   ax,ax
  403fb0:	sub    rsp,0x28
  403fb4:	mov    rax,QWORD PTR fs:0x28
  403fbd:	mov    QWORD PTR [rsp+0x18],rax
  403fc2:	xor    eax,eax
  403fc4:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  403fc9:	cmp    DWORD PTR [rax+0x8],0x3
  403fcd:	mov    rdi,rax
  403fd0:	je     403fe4 <__sprintf_chk@plt+0x1a04>
  403fd2:	mov    rsi,rsp
  403fd5:	call   403080 <__sprintf_chk@plt+0xaa0>
  403fda:	mov    rdi,rax
  403fdd:	xor    eax,eax
  403fdf:	test   rdi,rdi
  403fe2:	je     403fe9 <__sprintf_chk@plt+0x1a09>
  403fe4:	vcvttsd2si rax,QWORD PTR [rdi]
  403fe9:	mov    rdx,QWORD PTR [rsp+0x18]
  403fee:	xor    rdx,QWORD PTR fs:0x28
  403ff7:	jne    403ffe <__sprintf_chk@plt+0x1a1e>
  403ff9:	add    rsp,0x28
  403ffd:	ret    
  403ffe:	call   4023e0 <__stack_chk_fail@plt>
  404003:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40400e:	xchg   ax,ax
  404010:	movzx  eax,BYTE PTR [rsi]
  404013:	cmp    al,0x2e
  404015:	je     404030 <__sprintf_chk@plt+0x1a50>
  404017:	cmp    al,0x5b
  404019:	je     404050 <__sprintf_chk@plt+0x1a70>
  40401b:	cmp    al,0x25
  40401d:	je     404040 <__sprintf_chk@plt+0x1a60>
  40401f:	cmp    eax,edi
  404021:	sete   al
  404024:	movzx  eax,al
  404027:	ret    
  404028:	nop    DWORD PTR [rax+rax*1+0x0]
  404030:	mov    eax,0x1
  404035:	ret    
  404036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404040:	movzx  esi,BYTE PTR [rsi+0x1]
  404044:	jmp    4033d0 <__sprintf_chk@plt+0xdf0>
  404049:	nop    DWORD PTR [rax+0x0]
  404050:	dec    rdx
  404053:	jmp    403560 <__sprintf_chk@plt+0xf80>
  404058:	nop    DWORD PTR [rax+rax*1+0x0]
  404060:	endbr64 
  404064:	push   r12
  404066:	push   rbp
  404067:	push   rbx
  404068:	mov    eax,DWORD PTR [rsi]
  40406a:	test   eax,eax
  40406c:	je     404090 <__sprintf_chk@plt+0x1ab0>
  40406e:	mov    DWORD PTR [rsi],0x0
  404074:	mov    QWORD PTR [rdx],0x1
  40407b:	lea    rbp,[rip+0x136db]        # 41775d <__sprintf_chk@plt+0x1517d>
  404082:	pop    rbx
  404083:	mov    rax,rbp
  404086:	pop    rbp
  404087:	pop    r12
  404089:	ret    
  40408a:	nop    WORD PTR [rax+rax*1+0x0]
  404090:	mov    rdi,QWORD PTR [rsi+0x8]
  404094:	mov    r12,rdx
  404097:	mov    rbx,rsi
  40409a:	call   402480 <feof@plt>
  40409f:	test   eax,eax
  4040a1:	jne    4040c6 <__sprintf_chk@plt+0x1ae6>
  4040a3:	lea    rbp,[rbx+0x10]
  4040a7:	mov    rcx,QWORD PTR [rbx+0x8]
  4040ab:	mov    edx,0x2000
  4040b0:	mov    esi,0x1
  4040b5:	mov    rdi,rbp
  4040b8:	call   402390 <fread@plt>
  4040bd:	mov    QWORD PTR [r12],rax
  4040c1:	test   rax,rax
  4040c4:	jne    404082 <__sprintf_chk@plt+0x1aa2>
  4040c6:	xor    ebp,ebp
  4040c8:	pop    rbx
  4040c9:	mov    rax,rbp
  4040cc:	pop    rbp
  4040cd:	pop    r12
  4040cf:	ret    
  4040d0:	test   rsi,rsi
  4040d3:	je     404148 <__sprintf_chk@plt+0x1b68>
  4040d5:	test   BYTE PTR [rsi+0xa],0x10
  4040d9:	jne    404148 <__sprintf_chk@plt+0x1b68>
  4040db:	mov    rax,QWORD PTR [rdi]
  4040de:	mov    r8,rsi
  4040e1:	mov    r9,rdx
  4040e4:	mov    rdx,QWORD PTR [rax+0x148]
  4040eb:	mov    r11,rdi
  4040ee:	mov    esi,0x4
  4040f3:	mov    rdi,r8
  4040f6:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  4040fb:	mov    r10,rax
  4040fe:	test   rax,rax
  404101:	je     404148 <__sprintf_chk@plt+0x1b68>
  404103:	cmp    r8,r9
  404106:	je     40413f <__sprintf_chk@plt+0x1b5f>
  404108:	test   r9,r9
  40410b:	je     404148 <__sprintf_chk@plt+0x1b68>
  40410d:	test   BYTE PTR [r9+0xa],0x10
  404112:	jne    404148 <__sprintf_chk@plt+0x1b68>
  404114:	mov    rax,QWORD PTR [r11]
  404117:	mov    esi,0x4
  40411c:	mov    rdx,QWORD PTR [rax+0x148]
  404123:	mov    rdi,r9
  404126:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  40412b:	test   rax,rax
  40412e:	je     404148 <__sprintf_chk@plt+0x1b68>
  404130:	mov    rsi,rax
  404133:	mov    rdi,r10
  404136:	call   402b40 <__sprintf_chk@plt+0x560>
  40413b:	test   eax,eax
  40413d:	je     404148 <__sprintf_chk@plt+0x1b68>
  40413f:	mov    rax,r10
  404142:	ret    
  404143:	nop    DWORD PTR [rax+rax*1+0x0]
  404148:	xor    r10d,r10d
  40414b:	mov    rax,r10
  40414e:	ret    
  40414f:	nop
  404150:	mov    rcx,QWORD PTR [rdi+0x18]
  404154:	mov    rdx,QWORD PTR [rdi+0x10]
  404158:	cmp    rcx,rdx
  40415b:	jb     404190 <__sprintf_chk@plt+0x1bb0>
  40415d:	xor    eax,eax
  40415f:	mov    rcx,QWORD PTR [rdi+0x20]
  404163:	mov    rcx,QWORD PTR [rcx+rax*8+0xe0]
  40416b:	xor    eax,eax
  40416d:	test   rcx,rcx
  404170:	je     404189 <__sprintf_chk@plt+0x1ba9>
  404172:	mov    QWORD PTR [rdx],rcx
  404175:	mov    DWORD PTR [rdx+0x8],0x5
  40417c:	add    rdx,0x10
  404180:	mov    QWORD PTR [rdi+0x10],rdx
  404184:	mov    eax,0x1
  404189:	ret    
  40418a:	nop    WORD PTR [rax+rax*1+0x0]
  404190:	movsxd rax,DWORD PTR [rcx+0x8]
  404194:	cmp    eax,0x5
  404197:	je     40419e <__sprintf_chk@plt+0x1bbe>
  404199:	cmp    eax,0x7
  40419c:	jne    40415f <__sprintf_chk@plt+0x1b7f>
  40419e:	mov    rax,QWORD PTR [rcx]
  4041a1:	mov    rcx,QWORD PTR [rax+0x10]
  4041a5:	jmp    40416b <__sprintf_chk@plt+0x1b8b>
  4041a7:	nop    WORD PTR [rax+rax*1+0x0]
  4041b0:	push   r12
  4041b2:	mov    r12,rdi
  4041b5:	push   rbp
  4041b6:	lea    rbp,[rip+0x1380b]        # 4179c8 <__sprintf_chk@plt+0x153e8>
  4041bd:	push   rbx
  4041be:	mov    rbx,rsi
  4041c1:	movzx  eax,BYTE PTR [rsi+0x9]
  4041c5:	and    eax,0xfffffffc
  4041c8:	mov    edx,eax
  4041ca:	mov    BYTE PTR [rbx+0x9],al
  4041cd:	movzx  eax,BYTE PTR [rbx+0x8]
  4041d1:	sub    eax,0x5
  4041d4:	cmp    al,0x5
  4041d6:	ja     4041fe <__sprintf_chk@plt+0x1c1e>
  4041d8:	movzx  eax,al
  4041db:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  4041e0:	add    rax,rbp
  4041e3:	notrack jmp rax
  4041e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041f0:	mov    rax,QWORD PTR [r12+0x38]
  4041f5:	mov    QWORD PTR [rbx+0x68],rax
  4041f9:	mov    QWORD PTR [r12+0x38],rbx
  4041fe:	pop    rbx
  4041ff:	pop    rbp
  404200:	pop    r12
  404202:	ret    
  404203:	nop    DWORD PTR [rax+rax*1+0x0]
  404208:	mov    rax,QWORD PTR [r12+0x38]
  40420d:	mov    QWORD PTR [rbx+0xa0],rax
  404214:	mov    QWORD PTR [r12+0x38],rbx
  404219:	pop    rbx
  40421a:	pop    rbp
  40421b:	pop    r12
  40421d:	ret    
  40421e:	xchg   ax,ax
  404220:	mov    rax,QWORD PTR [rbx+0x10]
  404224:	cmp    DWORD PTR [rax+0x8],0x3
  404228:	jle    404237 <__sprintf_chk@plt+0x1c57>
  40422a:	mov    rsi,QWORD PTR [rax]
  40422d:	test   BYTE PTR [rsi+0x9],0x3
  404231:	jne    4042c0 <__sprintf_chk@plt+0x1ce0>
  404237:	lea    rdx,[rbx+0x18]
  40423b:	cmp    rax,rdx
  40423e:	jne    4041fe <__sprintf_chk@plt+0x1c1e>
  404240:	or     BYTE PTR [rbx+0x9],0x4
  404244:	jmp    4041fe <__sprintf_chk@plt+0x1c1e>
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404250:	mov    rax,QWORD PTR [r12+0x38]
  404255:	mov    QWORD PTR [rbx+0x30],rax
  404259:	mov    QWORD PTR [r12+0x38],rbx
  40425e:	pop    rbx
  40425f:	pop    rbp
  404260:	pop    r12
  404262:	ret    
  404263:	nop    DWORD PTR [rax+rax*1+0x0]
  404268:	mov    rax,QWORD PTR [r12+0x38]
  40426d:	mov    QWORD PTR [rbx+0x10],rax
  404271:	mov    QWORD PTR [r12+0x38],rbx
  404276:	pop    rbx
  404277:	pop    rbp
  404278:	pop    r12
  40427a:	ret    
  40427b:	nop    DWORD PTR [rax+rax*1+0x0]
  404280:	mov    eax,edx
  404282:	mov    rsi,QWORD PTR [rbx+0x10]
  404286:	or     eax,0x4
  404289:	mov    BYTE PTR [rbx+0x9],al
  40428c:	test   rsi,rsi
  40428f:	je     404297 <__sprintf_chk@plt+0x1cb7>
  404291:	test   BYTE PTR [rsi+0x9],0x3
  404295:	jne    4042b0 <__sprintf_chk@plt+0x1cd0>
  404297:	mov    rbx,QWORD PTR [rbx+0x18]
  40429b:	movzx  eax,BYTE PTR [rbx+0x9]
  40429f:	test   al,0x3
  4042a1:	jne    4041c5 <__sprintf_chk@plt+0x1be5>
  4042a7:	jmp    4041fe <__sprintf_chk@plt+0x1c1e>
  4042ac:	nop    DWORD PTR [rax+0x0]
  4042b0:	mov    rdi,r12
  4042b3:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  4042b8:	jmp    404297 <__sprintf_chk@plt+0x1cb7>
  4042ba:	nop    WORD PTR [rax+rax*1+0x0]
  4042c0:	mov    rdi,r12
  4042c3:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  4042c8:	mov    rax,QWORD PTR [rbx+0x10]
  4042cc:	jmp    404237 <__sprintf_chk@plt+0x1c57>
  4042d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4042dc:	nop    DWORD PTR [rax+0x0]
  4042e0:	mov    r9,rdi
  4042e3:	lea    rcx,[rdi+0xe0]
  4042ea:	lea    r8,[rdi+0x128]
  4042f1:	jmp    404301 <__sprintf_chk@plt+0x1d21>
  4042f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f8:	add    rcx,0x8
  4042fc:	cmp    rcx,r8
  4042ff:	je     404340 <__sprintf_chk@plt+0x1d60>
  404301:	mov    rsi,QWORD PTR [rcx]
  404304:	test   rsi,rsi
  404307:	je     4042f8 <__sprintf_chk@plt+0x1d18>
  404309:	test   BYTE PTR [rsi+0x9],0x3
  40430d:	je     4042f8 <__sprintf_chk@plt+0x1d18>
  40430f:	sub    rsp,0x8
  404313:	mov    rdi,r9
  404316:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40431b:	add    rcx,0x8
  40431f:	cmp    rcx,r8
  404322:	je     40433b <__sprintf_chk@plt+0x1d5b>
  404324:	mov    rsi,QWORD PTR [rcx]
  404327:	test   rsi,rsi
  40432a:	je     40431b <__sprintf_chk@plt+0x1d3b>
  40432c:	test   BYTE PTR [rsi+0x9],0x3
  404330:	jne    404313 <__sprintf_chk@plt+0x1d33>
  404332:	add    rcx,0x8
  404336:	cmp    rcx,r8
  404339:	jne    404324 <__sprintf_chk@plt+0x1d44>
  40433b:	add    rsp,0x8
  40433f:	ret    
  404340:	ret    
  404341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40434c:	nop    DWORD PTR [rax+0x0]
  404350:	sub    rsp,0x8
  404354:	mov    r8,rdi
  404357:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40435c:	mov    rdx,QWORD PTR [r8+0x10]
  404360:	mov    ecx,DWORD PTR [rdx-0x8]
  404363:	test   ecx,ecx
  404365:	je     4043d0 <__sprintf_chk@plt+0x1df0>
  404367:	mov    rsi,QWORD PTR [rdx-0x10]
  40436b:	movsxd rcx,DWORD PTR [rax+0x8]
  40436f:	mov    rdi,rsi
  404372:	cmp    ecx,0x5
  404375:	je     404418 <__sprintf_chk@plt+0x1e38>
  40437b:	cmp    ecx,0x7
  40437e:	jne    4043e0 <__sprintf_chk@plt+0x1e00>
  404380:	mov    rdx,QWORD PTR [rax]
  404383:	mov    QWORD PTR [rdx+0x10],rsi
  404387:	test   rsi,rsi
  40438a:	je     404460 <__sprintf_chk@plt+0x1e80>
  404390:	test   BYTE PTR [rsi+0x9],0x3
  404394:	je     404460 <__sprintf_chk@plt+0x1e80>
  40439a:	mov    rdx,QWORD PTR [rax]
  40439d:	movzx  eax,BYTE PTR [rdx+0x9]
  4043a1:	test   al,0x4
  4043a3:	je     404460 <__sprintf_chk@plt+0x1e80>
  4043a9:	mov    rdi,QWORD PTR [r8+0x20]
  4043ad:	cmp    BYTE PTR [rdi+0x21],0x1
  4043b1:	je     404458 <__sprintf_chk@plt+0x1e78>
  4043b7:	movzx  ecx,BYTE PTR [rdi+0x20]
  4043bb:	and    eax,0xfffffff8
  4043be:	and    ecx,0x3
  4043c1:	or     eax,ecx
  4043c3:	mov    BYTE PTR [rdx+0x9],al
  4043c6:	mov    rdx,QWORD PTR [r8+0x10]
  4043ca:	jmp    4043ec <__sprintf_chk@plt+0x1e0c>
  4043cc:	nop    DWORD PTR [rax+0x0]
  4043d0:	movsxd rcx,DWORD PTR [rax+0x8]
  4043d4:	cmp    ecx,0x5
  4043d7:	je     404400 <__sprintf_chk@plt+0x1e20>
  4043d9:	xor    edi,edi
  4043db:	cmp    ecx,0x7
  4043de:	je     404400 <__sprintf_chk@plt+0x1e20>
  4043e0:	mov    rax,QWORD PTR [r8+0x20]
  4043e4:	mov    QWORD PTR [rax+rcx*8+0xe0],rdi
  4043ec:	sub    rdx,0x10
  4043f0:	mov    QWORD PTR [r8+0x10],rdx
  4043f4:	mov    eax,0x1
  4043f9:	add    rsp,0x8
  4043fd:	ret    
  4043fe:	xchg   ax,ax
  404400:	mov    rax,QWORD PTR [rax]
  404403:	mov    QWORD PTR [rax+0x10],0x0
  40440b:	mov    rdx,QWORD PTR [r8+0x10]
  40440f:	jmp    4043ec <__sprintf_chk@plt+0x1e0c>
  404411:	nop    DWORD PTR [rax+0x0]
  404418:	mov    rdx,QWORD PTR [rax]
  40441b:	mov    QWORD PTR [rdx+0x10],rsi
  40441f:	test   rsi,rsi
  404422:	je     404460 <__sprintf_chk@plt+0x1e80>
  404424:	test   BYTE PTR [rsi+0x9],0x3
  404428:	je     404460 <__sprintf_chk@plt+0x1e80>
  40442a:	mov    rax,QWORD PTR [rax]
  40442d:	movzx  edx,BYTE PTR [rax+0x9]
  404431:	test   dl,0x4
  404434:	je     404460 <__sprintf_chk@plt+0x1e80>
  404436:	mov    rcx,QWORD PTR [r8+0x20]
  40443a:	and    edx,0xfffffffb
  40443d:	mov    BYTE PTR [rax+0x9],dl
  404440:	mov    rdx,QWORD PTR [rcx+0x40]
  404444:	mov    QWORD PTR [rax+0x30],rdx
  404448:	mov    QWORD PTR [rcx+0x40],rax
  40444c:	mov    rdx,QWORD PTR [r8+0x10]
  404450:	jmp    4043ec <__sprintf_chk@plt+0x1e0c>
  404452:	nop    WORD PTR [rax+rax*1+0x0]
  404458:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40445d:	nop    DWORD PTR [rax]
  404460:	mov    rdx,QWORD PTR [r8+0x10]
  404464:	jmp    4043ec <__sprintf_chk@plt+0x1e0c>
  404469:	nop    DWORD PTR [rax+0x0]
  404470:	mov    rdx,QWORD PTR [rdi+0x10]
  404474:	mov    r8,rdi
  404477:	mov    esi,DWORD PTR [rdx-0x18]
  40447a:	mov    rcx,rdx
  40447d:	cmp    esi,0x7
  404480:	je     4044a0 <__sprintf_chk@plt+0x1ec0>
  404482:	cmp    esi,0x8
  404485:	je     404510 <__sprintf_chk@plt+0x1f30>
  40448b:	xor    eax,eax
  40448d:	cmp    esi,0x6
  404490:	je     4044a0 <__sprintf_chk@plt+0x1ec0>
  404492:	sub    rcx,0x10
  404496:	mov    QWORD PTR [r8+0x10],rcx
  40449a:	ret    
  40449b:	nop    DWORD PTR [rax+rax*1+0x0]
  4044a0:	mov    rax,QWORD PTR [rdx-0x20]
  4044a4:	mov    rdx,QWORD PTR [rdx-0x10]
  4044a8:	mov    QWORD PTR [rax+0x18],rdx
  4044ac:	mov    rdx,QWORD PTR [r8+0x10]
  4044b0:	mov    rsi,QWORD PTR [rdx-0x10]
  4044b4:	test   BYTE PTR [rsi+0x9],0x3
  4044b8:	je     4044f8 <__sprintf_chk@plt+0x1f18>
  4044ba:	mov    rcx,QWORD PTR [rcx-0x20]
  4044be:	movzx  eax,BYTE PTR [rcx+0x9]
  4044c2:	test   al,0x4
  4044c4:	je     4044f8 <__sprintf_chk@plt+0x1f18>
  4044c6:	mov    rdi,QWORD PTR [r8+0x20]
  4044ca:	cmp    BYTE PTR [rdi+0x21],0x1
  4044ce:	je     404530 <__sprintf_chk@plt+0x1f50>
  4044d0:	movzx  edx,BYTE PTR [rdi+0x20]
  4044d4:	and    eax,0xfffffff8
  4044d7:	and    edx,0x3
  4044da:	or     eax,edx
  4044dc:	mov    BYTE PTR [rcx+0x9],al
  4044df:	mov    eax,0x1
  4044e4:	mov    rcx,QWORD PTR [r8+0x10]
  4044e8:	sub    rcx,0x10
  4044ec:	mov    QWORD PTR [r8+0x10],rcx
  4044f0:	ret    
  4044f1:	nop    DWORD PTR [rax+0x0]
  4044f8:	mov    rcx,rdx
  4044fb:	sub    rcx,0x10
  4044ff:	mov    eax,0x1
  404504:	mov    QWORD PTR [r8+0x10],rcx
  404508:	ret    
  404509:	nop    DWORD PTR [rax+0x0]
  404510:	mov    rax,QWORD PTR [rdx-0x20]
  404514:	mov    rsi,QWORD PTR [rdx-0x10]
  404518:	mov    DWORD PTR [rax+0x80],0x5
  404522:	mov    QWORD PTR [rax+0x78],rsi
  404526:	jmp    4044b0 <__sprintf_chk@plt+0x1ed0>
  404528:	nop    DWORD PTR [rax+rax*1+0x0]
  404530:	sub    rsp,0x8
  404534:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  404539:	mov    rcx,QWORD PTR [r8+0x10]
  40453d:	mov    eax,0x1
  404542:	sub    rcx,0x10
  404546:	mov    QWORD PTR [r8+0x10],rcx
  40454a:	add    rsp,0x8
  40454e:	ret    
  40454f:	nop
  404550:	mov    eax,DWORD PTR [rsi]
  404552:	test   ah,0x1
  404555:	jne    404562 <__sprintf_chk@plt+0x1f82>
  404557:	movzx  edx,BYTE PTR [rdi+0x4a]
  40455b:	cmp    eax,edx
  40455d:	jl     404562 <__sprintf_chk@plt+0x1f82>
  40455f:	dec    DWORD PTR [rdi+0x3c]
  404562:	ret    
  404563:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40456e:	xchg   ax,ax
  404570:	push   rbp
  404571:	mov    ebp,esi
  404573:	push   rbx
  404574:	mov    rbx,rdi
  404577:	sub    rsp,0x8
  40457b:	mov    rdi,QWORD PTR [rdi+0xa8]
  404582:	test   rdi,rdi
  404585:	je     40459b <__sprintf_chk@plt+0x1fbb>
  404587:	mov    DWORD PTR [rdi+0xd0],esi
  40458d:	add    rdi,0x8
  404591:	mov    esi,0x1
  404596:	call   402520 <__longjmp_chk@plt>
  40459b:	mov    BYTE PTR [rbx+0xa],sil
  40459f:	mov    rax,QWORD PTR [rbx+0x20]
  4045a3:	cmp    QWORD PTR [rax+0x98],0x0
  4045ab:	je     40460a <__sprintf_chk@plt+0x202a>
  4045ad:	mov    rax,QWORD PTR [rbx+0x50]
  4045b1:	mov    rdi,rbx
  4045b4:	mov    rsi,QWORD PTR [rax]
  4045b7:	mov    QWORD PTR [rbx+0x28],rax
  4045bb:	mov    QWORD PTR [rbx+0x18],rsi
  4045bf:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  4045c4:	mov    rdx,QWORD PTR [rbx+0x18]
  4045c8:	mov    esi,ebp
  4045ca:	mov    rdi,rbx
  4045cd:	call   407620 <__sprintf_chk@plt+0x5040>
  4045d2:	movzx  eax,WORD PTR [rbx+0x62]
  4045d6:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  4045dd:	mov    WORD PTR [rbx+0x60],ax
  4045e1:	mov    BYTE PTR [rbx+0x65],0x1
  4045e5:	jg     404614 <__sprintf_chk@plt+0x2034>
  4045e7:	mov    QWORD PTR [rbx+0xb0],0x0
  4045f2:	mov    QWORD PTR [rbx+0xa8],0x0
  4045fd:	mov    rax,QWORD PTR [rbx+0x20]
  404601:	mov    rdi,rbx
  404604:	call   QWORD PTR [rax+0x98]
  40460a:	mov    edi,0x1
  40460f:	call   402570 <exit@plt>
  404614:	mov    rax,QWORD PTR [rbx+0x28]
  404618:	sub    rax,QWORD PTR [rbx+0x50]
  40461c:	sar    rax,0x3
  404620:	imul   eax,eax,0xcccccccd
  404626:	cmp    eax,0x4e1e
  40462b:	jg     4045e7 <__sprintf_chk@plt+0x2007>
  40462d:	mov    esi,0x4e20
  404632:	mov    rdi,rbx
  404635:	call   407310 <__sprintf_chk@plt+0x4d30>
  40463a:	jmp    4045e7 <__sprintf_chk@plt+0x2007>
  40463c:	nop    DWORD PTR [rax+0x0]
  404640:	push   r13
  404642:	mov    r13,rdi
  404645:	push   r12
  404647:	mov    r12,rdx
  40464a:	push   rbp
  40464b:	push   rbx
  40464c:	mov    rbx,rcx
  40464f:	sub    rsp,0x8
  404653:	mov    rbp,QWORD PTR [rdi+0x20]
  404657:	mov    rdi,QWORD PTR [rbp+0x18]
  40465b:	call   QWORD PTR [rbp+0x10]
  40465e:	test   rax,rax
  404661:	jne    404668 <__sprintf_chk@plt+0x2088>
  404663:	test   rbx,rbx
  404666:	jne    404680 <__sprintf_chk@plt+0x20a0>
  404668:	sub    rbx,r12
  40466b:	add    QWORD PTR [rbp+0x78],rbx
  40466f:	add    rsp,0x8
  404673:	pop    rbx
  404674:	pop    rbp
  404675:	pop    r12
  404677:	pop    r13
  404679:	ret    
  40467a:	nop    WORD PTR [rax+rax*1+0x0]
  404680:	mov    esi,0x4
  404685:	mov    rdi,r13
  404688:	call   404570 <__sprintf_chk@plt+0x1f90>
  40468d:	nop    DWORD PTR [rax]
  404690:	lea    rax,[rsi+0x18]
  404694:	cmp    QWORD PTR [rsi+0x10],rax
  404698:	je     4046aa <__sprintf_chk@plt+0x20ca>
  40469a:	mov    rax,QWORD PTR [rsi+0x18]
  40469e:	mov    rdx,QWORD PTR [rsi+0x20]
  4046a2:	mov    QWORD PTR [rdx+0x18],rax
  4046a6:	mov    QWORD PTR [rax+0x20],rdx
  4046aa:	xor    ecx,ecx
  4046ac:	mov    edx,0x28
  4046b1:	jmp    404640 <__sprintf_chk@plt+0x2060>
  4046b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4046be:	xchg   ax,ax
  4046c0:	push   r12
  4046c2:	push   rbp
  4046c3:	mov    rbp,rsi
  4046c6:	push   rbx
  4046c7:	mov    rbx,rdi
  4046ca:	mov    r12,QWORD PTR [rdi+0x20]
  4046ce:	xchg   ax,ax
  4046d0:	mov    rsi,QWORD PTR [rbx+0x98]
  4046d7:	test   rsi,rsi
  4046da:	je     404713 <__sprintf_chk@plt+0x2133>
  4046dc:	mov    rdx,QWORD PTR [rsi+0x10]
  4046e0:	cmp    rdx,rbp
  4046e3:	jb     404713 <__sprintf_chk@plt+0x2133>
  4046e5:	mov    rax,QWORD PTR [rsi]
  4046e8:	mov    QWORD PTR [rbx+0x98],rax
  4046ef:	movzx  eax,BYTE PTR [r12+0x20]
  4046f5:	xor    eax,0x3
  4046f8:	and    al,BYTE PTR [rsi+0x9]
  4046fb:	test   al,0x3
  4046fd:	je     404720 <__sprintf_chk@plt+0x2140>
  4046ff:	mov    rdi,rbx
  404702:	call   404690 <__sprintf_chk@plt+0x20b0>
  404707:	mov    rsi,QWORD PTR [rbx+0x98]
  40470e:	test   rsi,rsi
  404711:	jne    4046dc <__sprintf_chk@plt+0x20fc>
  404713:	pop    rbx
  404714:	pop    rbp
  404715:	pop    r12
  404717:	ret    
  404718:	nop    DWORD PTR [rax+rax*1+0x0]
  404720:	mov    rax,QWORD PTR [rsi+0x18]
  404724:	mov    rcx,QWORD PTR [rsi+0x20]
  404728:	mov    QWORD PTR [rcx+0x18],rax
  40472c:	mov    QWORD PTR [rax+0x20],rcx
  404730:	mov    rax,QWORD PTR [rdx]
  404733:	mov    ecx,DWORD PTR [rdx+0x8]
  404736:	mov    QWORD PTR [rsi+0x18],rax
  40473a:	lea    rax,[rsi+0x18]
  40473e:	mov    QWORD PTR [rsi+0x10],rax
  404742:	mov    rax,QWORD PTR [rbx+0x20]
  404746:	mov    DWORD PTR [rsi+0x20],ecx
  404749:	mov    rdx,QWORD PTR [rax+0x28]
  40474d:	mov    QWORD PTR [rsi],rdx
  404750:	movzx  edx,BYTE PTR [rsi+0x9]
  404754:	mov    QWORD PTR [rax+0x28],rsi
  404758:	test   dl,0x7
  40475b:	jne    4046d0 <__sprintf_chk@plt+0x20f0>
  404761:	cmp    BYTE PTR [rax+0x21],0x1
  404765:	je     404780 <__sprintf_chk@plt+0x21a0>
  404767:	movzx  eax,BYTE PTR [rax+0x20]
  40476b:	and    edx,0xfffffff8
  40476e:	and    eax,0x3
  404771:	or     edx,eax
  404773:	mov    BYTE PTR [rsi+0x9],dl
  404776:	jmp    4046d0 <__sprintf_chk@plt+0x20f0>
  40477b:	nop    DWORD PTR [rax+rax*1+0x0]
  404780:	or     edx,0x4
  404783:	mov    BYTE PTR [rsi+0x9],dl
  404786:	cmp    ecx,0x3
  404789:	jle    4046d0 <__sprintf_chk@plt+0x20f0>
  40478f:	mov    rax,QWORD PTR [rsi+0x18]
  404793:	test   BYTE PTR [rax+0x9],0x3
  404797:	je     4046d0 <__sprintf_chk@plt+0x20f0>
  40479d:	mov    rdi,QWORD PTR [rbx+0x20]
  4047a1:	cmp    BYTE PTR [rdi+0x21],0x1
  4047a5:	je     4047bb <__sprintf_chk@plt+0x21db>
  4047a7:	movzx  eax,BYTE PTR [rdi+0x20]
  4047ab:	and    edx,0xfffffff8
  4047ae:	and    eax,0x3
  4047b1:	or     edx,eax
  4047b3:	mov    BYTE PTR [rsi+0x9],dl
  4047b6:	jmp    4046d0 <__sprintf_chk@plt+0x20f0>
  4047bb:	mov    rsi,rax
  4047be:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  4047c3:	jmp    4046d0 <__sprintf_chk@plt+0x20f0>
  4047c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4047d0:	push   r13
  4047d2:	mov    r13,rdx
  4047d5:	xor    edx,edx
  4047d7:	push   r12
  4047d9:	mov    r12,rdi
  4047dc:	push   rbp
  4047dd:	push   rbx
  4047de:	movsxd rbx,esi
  4047e1:	lea    ebp,[rbx-0x1]
  4047e4:	lea    ecx,[rbp*8+0x30]
  4047eb:	movsxd rcx,ecx
  4047ee:	sub    rsp,0x8
  4047f2:	xor    esi,esi
  4047f4:	call   404640 <__sprintf_chk@plt+0x2060>
  4047f9:	mov    rdx,QWORD PTR [r12+0x20]
  4047fe:	mov    rcx,QWORD PTR [rdx+0x28]
  404802:	mov    QWORD PTR [rax],rcx
  404805:	mov    QWORD PTR [rdx+0x28],rax
  404809:	movzx  edx,BYTE PTR [rdx+0x20]
  40480d:	mov    BYTE PTR [rax+0x8],0x6
  404811:	and    edx,0x3
  404814:	mov    BYTE PTR [rax+0x9],dl
  404817:	mov    BYTE PTR [rax+0xa],0x0
  40481b:	mov    QWORD PTR [rax+0x18],r13
  40481f:	mov    BYTE PTR [rax+0xb],bl
  404822:	test   ebx,ebx
  404824:	je     404851 <__sprintf_chk@plt+0x2271>
  404826:	shl    rbx,0x3
  40482a:	lea    rdx,[rax+rbx*1]
  40482e:	shl    rbp,0x3
  404832:	sub    rbx,0x8
  404836:	sub    rbx,rbp
  404839:	lea    rcx,[rax+rbx*1]
  40483d:	nop    DWORD PTR [rax]
  404840:	mov    QWORD PTR [rdx+0x20],0x0
  404848:	sub    rdx,0x8
  40484c:	cmp    rdx,rcx
  40484f:	jne    404840 <__sprintf_chk@plt+0x2260>
  404851:	add    rsp,0x8
  404855:	pop    rbx
  404856:	pop    rbp
  404857:	pop    r12
  404859:	pop    r13
  40485b:	ret    
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	push   rbp
  404861:	xor    ecx,ecx
  404863:	mov    rbp,rdi
  404866:	push   rbx
  404867:	mov    rbx,rsi
  40486a:	sub    rsp,0x8
  40486e:	movsxd rax,DWORD PTR [rsi+0x5c]
  404872:	mov    rsi,QWORD PTR [rsi+0x50]
  404876:	lea    rdx,[rax+rax*4]
  40487a:	shl    rdx,0x3
  40487e:	call   404640 <__sprintf_chk@plt+0x2060>
  404883:	movsxd rdx,DWORD PTR [rbx+0x58]
  404887:	mov    rsi,QWORD PTR [rbx+0x40]
  40488b:	add    rsp,0x8
  40488f:	pop    rbx
  404890:	mov    rdi,rbp
  404893:	shl    rdx,0x4
  404897:	xor    ecx,ecx
  404899:	pop    rbp
  40489a:	jmp    404640 <__sprintf_chk@plt+0x2060>
  40489f:	nop
  4048a0:	push   r15
  4048a2:	mov    r15,rsi
  4048a5:	push   r14
  4048a7:	push   r13
  4048a9:	mov    r13,rdx
  4048ac:	push   r12
  4048ae:	mov    r12,rdi
  4048b1:	push   rbp
  4048b2:	push   rbx
  4048b3:	sub    rsp,0x8
  4048b7:	mov    r14,QWORD PTR [rdi+0x20]
  4048bb:	mov    rbx,QWORD PTR [rsi]
  4048be:	movzx  ebp,BYTE PTR [r14+0x20]
  4048c3:	xor    ebp,0x3
  4048c6:	test   rbx,rbx
  4048c9:	je     40490a <__sprintf_chk@plt+0x232a>
  4048cb:	dec    r13
  4048ce:	cmp    r13,0xffffffffffffffff
  4048d2:	je     40490a <__sprintf_chk@plt+0x232a>
  4048d4:	cmp    BYTE PTR [rbx+0x8],0x8
  4048d8:	je     404970 <__sprintf_chk@plt+0x2390>
  4048de:	movzx  eax,BYTE PTR [rbx+0x9]
  4048e2:	mov    rcx,QWORD PTR [rbx]
  4048e5:	mov    edx,eax
  4048e7:	xor    edx,0x3
  4048ea:	test   dl,bpl
  4048ed:	je     404920 <__sprintf_chk@plt+0x2340>
  4048ef:	movzx  edx,BYTE PTR [r14+0x20]
  4048f4:	and    eax,0xfffffff8
  4048f7:	and    edx,0x3
  4048fa:	or     eax,edx
  4048fc:	mov    BYTE PTR [rbx+0x9],al
  4048ff:	mov    r15,rbx
  404902:	mov    rbx,rcx
  404905:	test   rbx,rbx
  404908:	jne    4048cb <__sprintf_chk@plt+0x22eb>
  40490a:	add    rsp,0x8
  40490e:	pop    rbx
  40490f:	pop    rbp
  404910:	pop    r12
  404912:	pop    r13
  404914:	pop    r14
  404916:	mov    rax,r15
  404919:	pop    r15
  40491b:	ret    
  40491c:	nop    DWORD PTR [rax+0x0]
  404920:	mov    QWORD PTR [r15],rcx
  404923:	cmp    QWORD PTR [r14+0x28],rbx
  404927:	je     404990 <__sprintf_chk@plt+0x23b0>
  404929:	movzx  eax,BYTE PTR [rbx+0x8]
  40492d:	sub    eax,0x4
  404930:	cmp    al,0x6
  404932:	ja     404965 <__sprintf_chk@plt+0x2385>
  404934:	lea    rdi,[rip+0x130a5]        # 4179e0 <__sprintf_chk@plt+0x15400>
  40493b:	movzx  eax,al
  40493e:	movsxd rax,DWORD PTR [rdi+rax*4]
  404942:	add    rax,rdi
  404945:	notrack jmp rax
  404948:	nop    DWORD PTR [rax+rax*1+0x0]
  404950:	mov    rax,QWORD PTR [rbx+0x20]
  404954:	lea    rdx,[rax+0x28]
  404958:	xor    ecx,ecx
  40495a:	mov    rsi,rbx
  40495d:	mov    rdi,r12
  404960:	call   404640 <__sprintf_chk@plt+0x2060>
  404965:	mov    rbx,QWORD PTR [r15]
  404968:	jmp    4048c6 <__sprintf_chk@plt+0x22e6>
  40496d:	nop    DWORD PTR [rax]
  404970:	lea    rsi,[rbx+0x98]
  404977:	mov    rdx,0xfffffffffffffffd
  40497e:	mov    rdi,r12
  404981:	call   4048a0 <__sprintf_chk@plt+0x22c0>
  404986:	jmp    4048de <__sprintf_chk@plt+0x22fe>
  40498b:	nop    DWORD PTR [rax+rax*1+0x0]
  404990:	mov    QWORD PTR [r14+0x28],rcx
  404994:	jmp    404929 <__sprintf_chk@plt+0x2349>
  404996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049a0:	movsxd rdx,DWORD PTR [rbx+0x50]
  4049a4:	mov    rsi,QWORD PTR [rbx+0x18]
  4049a8:	shl    rdx,0x2
  4049ac:	xor    ecx,ecx
  4049ae:	mov    rdi,r12
  4049b1:	call   404640 <__sprintf_chk@plt+0x2060>
  4049b6:	movsxd rdx,DWORD PTR [rbx+0x58]
  4049ba:	mov    rsi,QWORD PTR [rbx+0x20]
  4049be:	shl    rdx,0x3
  4049c2:	xor    ecx,ecx
  4049c4:	mov    rdi,r12
  4049c7:	call   404640 <__sprintf_chk@plt+0x2060>
  4049cc:	movsxd rdx,DWORD PTR [rbx+0x4c]
  4049d0:	mov    rsi,QWORD PTR [rbx+0x10]
  4049d4:	shl    rdx,0x4
  4049d8:	xor    ecx,ecx
  4049da:	mov    rdi,r12
  4049dd:	call   404640 <__sprintf_chk@plt+0x2060>
  4049e2:	movsxd rdx,DWORD PTR [rbx+0x54]
  4049e6:	mov    rsi,QWORD PTR [rbx+0x28]
  4049ea:	shl    rdx,0x2
  4049ee:	xor    ecx,ecx
  4049f0:	mov    rdi,r12
  4049f3:	call   404640 <__sprintf_chk@plt+0x2060>
  4049f8:	movsxd rdx,DWORD PTR [rbx+0x5c]
  4049fc:	mov    rsi,QWORD PTR [rbx+0x30]
  404a00:	shl    rdx,0x4
  404a04:	xor    ecx,ecx
  404a06:	mov    rdi,r12
  404a09:	call   404640 <__sprintf_chk@plt+0x2060>
  404a0e:	movsxd rdx,DWORD PTR [rbx+0x48]
  404a12:	mov    rsi,QWORD PTR [rbx+0x38]
  404a16:	shl    rdx,0x3
  404a1a:	xor    ecx,ecx
  404a1c:	mov    rdi,r12
  404a1f:	call   404640 <__sprintf_chk@plt+0x2060>
  404a24:	mov    rsi,rbx
  404a27:	xor    ecx,ecx
  404a29:	mov    edx,0x78
  404a2e:	mov    rdi,r12
  404a31:	call   404640 <__sprintf_chk@plt+0x2060>
  404a36:	mov    rbx,QWORD PTR [r15]
  404a39:	jmp    4048c6 <__sprintf_chk@plt+0x22e6>
  404a3e:	xchg   ax,ax
  404a40:	mov    rsi,QWORD PTR [rbx+0x40]
  404a44:	mov    rdi,rbx
  404a47:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  404a4c:	mov    rsi,rbx
  404a4f:	mov    rdi,r12
  404a52:	call   404860 <__sprintf_chk@plt+0x2280>
  404a57:	mov    rsi,rbx
  404a5a:	xor    ecx,ecx
  404a5c:	mov    edx,0xb8
  404a61:	mov    rdi,r12
  404a64:	call   404640 <__sprintf_chk@plt+0x2060>
  404a69:	mov    rbx,QWORD PTR [r15]
  404a6c:	jmp    4048c6 <__sprintf_chk@plt+0x22e6>
  404a71:	nop    DWORD PTR [rax+0x0]
  404a78:	movzx  eax,BYTE PTR [rbx+0xb]
  404a7c:	dec    eax
  404a7e:	cmp    BYTE PTR [rbx+0xa],0x0
  404a82:	jne    404b30 <__sprintf_chk@plt+0x2550>
  404a88:	lea    edx,[rax*8+0x30]
  404a8f:	movsxd rdx,edx
  404a92:	jmp    404958 <__sprintf_chk@plt+0x2378>
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	mov    rsi,QWORD PTR [rbx+0x20]
  404aa4:	lea    rax,[rip+0x134f5]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  404aab:	cmp    rsi,rax
  404aae:	je     404ac8 <__sprintf_chk@plt+0x24e8>
  404ab0:	movzx  edx,BYTE PTR [rbx+0xb]
  404ab4:	mov    eax,0x28
  404ab9:	xor    ecx,ecx
  404abb:	mov    rdi,r12
  404abe:	shlx   rdx,rax,rdx
  404ac3:	call   404640 <__sprintf_chk@plt+0x2060>
  404ac8:	movsxd rdx,DWORD PTR [rbx+0x38]
  404acc:	mov    rsi,QWORD PTR [rbx+0x18]
  404ad0:	shl    rdx,0x4
  404ad4:	xor    ecx,ecx
  404ad6:	mov    rdi,r12
  404ad9:	call   404640 <__sprintf_chk@plt+0x2060>
  404ade:	mov    rsi,rbx
  404ae1:	xor    ecx,ecx
  404ae3:	mov    edx,0x40
  404ae8:	mov    rdi,r12
  404aeb:	call   404640 <__sprintf_chk@plt+0x2060>
  404af0:	mov    rbx,QWORD PTR [r15]
  404af3:	jmp    4048c6 <__sprintf_chk@plt+0x22e6>
  404af8:	nop    DWORD PTR [rax+rax*1+0x0]
  404b00:	mov    rax,QWORD PTR [r12+0x20]
  404b05:	dec    DWORD PTR [rax+0x8]
  404b08:	mov    rax,QWORD PTR [rbx+0x10]
  404b0c:	lea    rdx,[rax+0x19]
  404b10:	jmp    404958 <__sprintf_chk@plt+0x2378>
  404b15:	nop    DWORD PTR [rax]
  404b18:	mov    rsi,rbx
  404b1b:	mov    rdi,r12
  404b1e:	call   404690 <__sprintf_chk@plt+0x20b0>
  404b23:	mov    rbx,QWORD PTR [r15]
  404b26:	jmp    4048c6 <__sprintf_chk@plt+0x22e6>
  404b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b30:	shl    eax,0x4
  404b33:	mov    edx,eax
  404b35:	add    edx,0x38
  404b38:	jmp    404a8f <__sprintf_chk@plt+0x24af>
  404b3d:	nop    DWORD PTR [rax]
  404b40:	push   r14
  404b42:	push   r13
  404b44:	push   r12
  404b46:	push   rbp
  404b47:	push   rbx
  404b48:	mov    rbx,rdi
  404b4b:	mov    rsi,QWORD PTR [rdi+0x40]
  404b4f:	mov    rbp,QWORD PTR [rdi+0x20]
  404b53:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  404b58:	mov    r12,QWORD PTR [rbx+0x20]
  404b5c:	mov    rdx,0xfffffffffffffffd
  404b63:	mov    BYTE PTR [r12+0x20],0x43
  404b69:	lea    rsi,[r12+0x28]
  404b6e:	mov    rdi,rbx
  404b71:	call   4048a0 <__sprintf_chk@plt+0x22c0>
  404b76:	mov    eax,DWORD PTR [r12+0xc]
  404b7b:	test   eax,eax
  404b7d:	jle    404bad <__sprintf_chk@plt+0x25cd>
  404b7f:	xor    r13d,r13d
  404b82:	mov    r14,0xfffffffffffffffd
  404b89:	nop    DWORD PTR [rax+0x0]
  404b90:	mov    rax,QWORD PTR [r12]
  404b94:	mov    rdx,r14
  404b97:	lea    rsi,[rax+r13*8]
  404b9b:	mov    rdi,rbx
  404b9e:	inc    r13
  404ba1:	call   4048a0 <__sprintf_chk@plt+0x22c0>
  404ba6:	cmp    DWORD PTR [r12+0xc],r13d
  404bab:	jg     404b90 <__sprintf_chk@plt+0x25b0>
  404bad:	mov    rax,QWORD PTR [rbx+0x20]
  404bb1:	mov    rdi,rbx
  404bb4:	movsxd rdx,DWORD PTR [rax+0xc]
  404bb8:	mov    rsi,QWORD PTR [rax]
  404bbb:	shl    rdx,0x3
  404bbf:	xor    ecx,ecx
  404bc1:	call   404640 <__sprintf_chk@plt+0x2060>
  404bc6:	mov    rdx,QWORD PTR [rbp+0x68]
  404bca:	mov    rsi,QWORD PTR [rbp+0x58]
  404bce:	xor    ecx,ecx
  404bd0:	mov    rdi,rbx
  404bd3:	call   404640 <__sprintf_chk@plt+0x2060>
  404bd8:	mov    QWORD PTR [rbp+0x58],rax
  404bdc:	mov    QWORD PTR [rbp+0x68],0x0
  404be4:	mov    rsi,rbx
  404be7:	mov    rdi,rbx
  404bea:	call   404860 <__sprintf_chk@plt+0x2280>
  404bef:	mov    rsi,rbx
  404bf2:	pop    rbx
  404bf3:	mov    rdi,QWORD PTR [rbp+0x18]
  404bf7:	mov    rax,QWORD PTR [rbp+0x10]
  404bfb:	pop    rbp
  404bfc:	pop    r12
  404bfe:	pop    r13
  404c00:	xor    ecx,ecx
  404c02:	mov    edx,0x268
  404c07:	pop    r14
  404c09:	jmp    rax
  404c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c10:	push   rbx
  404c11:	mov    rbx,rdi
  404c14:	mov    esi,DWORD PTR [rdi+0x5c]
  404c17:	cmp    esi,0x4e20
  404c1d:	jle    404c30 <__sprintf_chk@plt+0x2650>
  404c1f:	mov    esi,0x5
  404c24:	call   404570 <__sprintf_chk@plt+0x1f90>
  404c29:	nop    DWORD PTR [rax+0x0]
  404c30:	add    esi,esi
  404c32:	call   407310 <__sprintf_chk@plt+0x4d30>
  404c37:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  404c3e:	jg     404c50 <__sprintf_chk@plt+0x2670>
  404c40:	mov    rax,QWORD PTR [rbx+0x28]
  404c44:	add    rax,0x28
  404c48:	mov    QWORD PTR [rbx+0x28],rax
  404c4c:	pop    rbx
  404c4d:	ret    
  404c4e:	xchg   ax,ax
  404c50:	mov    rdi,rbx
  404c53:	xor    eax,eax
  404c55:	lea    rsi,[rip+0x123c6]        # 417022 <__sprintf_chk@plt+0x14a42>
  404c5c:	call   407190 <__sprintf_chk@plt+0x4bb0>
  404c61:	mov    rax,QWORD PTR [rbx+0x28]
  404c65:	add    rax,0x28
  404c69:	mov    QWORD PTR [rbx+0x28],rax
  404c6d:	pop    rbx
  404c6e:	ret    
  404c6f:	nop
  404c70:	push   r14
  404c72:	push   r13
  404c74:	push   r12
  404c76:	mov    r12d,edx
  404c79:	push   rbp
  404c7a:	mov    rbp,rsi
  404c7d:	push   rbx
  404c7e:	mov    rbx,rdi
  404c81:	movsxd r8,DWORD PTR [rsi+0x8]
  404c85:	mov    rsi,QWORD PTR [rsi]
  404c88:	cmp    r8d,0x6
  404c8c:	jne    404d70 <__sprintf_chk@plt+0x2790>
  404c92:	mov    rdx,QWORD PTR [rdi+0x38]
  404c96:	mov    rcx,QWORD PTR [rbx+0x28]
  404c9a:	mov    rdi,QWORD PTR [rbx+0x30]
  404c9e:	mov    r13,rbp
  404ca1:	sub    r13,QWORD PTR [rbx+0x40]
  404ca5:	mov    QWORD PTR [rcx+0x18],rdi
  404ca9:	mov    rdi,QWORD PTR [rbx+0x10]
  404cad:	mov    rax,rcx
  404cb0:	sub    rdx,rdi
  404cb3:	cmp    BYTE PTR [rsi+0xa],0x0
  404cb7:	je     404e10 <__sprintf_chk@plt+0x2830>
  404cbd:	cmp    rdx,0x140
  404cc4:	jle    404d40 <__sprintf_chk@plt+0x2760>
  404cc6:	cmp    QWORD PTR [rbx+0x48],rax
  404cca:	je     404d5b <__sprintf_chk@plt+0x277b>
  404cd0:	add    rax,0x28
  404cd4:	mov    QWORD PTR [rbx+0x28],rax
  404cd8:	mov    rcx,rax
  404cdb:	mov    rdx,QWORD PTR [rbx+0x40]
  404cdf:	mov    rdi,QWORD PTR [rbx+0x10]
  404ce3:	add    rdx,r13
  404ce6:	mov    QWORD PTR [rax+0x8],rdx
  404cea:	add    rdx,0x10
  404cee:	mov    QWORD PTR [rax],rdx
  404cf1:	mov    QWORD PTR [rbx+0x18],rdx
  404cf5:	lea    rdx,[rdi+0x140]
  404cfc:	mov    QWORD PTR [rax+0x10],rdx
  404d00:	mov    DWORD PTR [rax+0x20],r12d
  404d04:	mov    rax,QWORD PTR [rcx+0x8]
  404d08:	mov    rdi,rbx
  404d0b:	mov    rax,QWORD PTR [rax]
  404d0e:	call   QWORD PTR [rax+0x20]
  404d11:	movsxd rdx,eax
  404d14:	mov    eax,0x2
  404d19:	test   edx,edx
  404d1b:	js     404d35 <__sprintf_chk@plt+0x2755>
  404d1d:	mov    rsi,QWORD PTR [rbx+0x10]
  404d21:	shl    rdx,0x4
  404d25:	sub    rsi,rdx
  404d28:	mov    rdi,rbx
  404d2b:	call   402c00 <__sprintf_chk@plt+0x620>
  404d30:	mov    eax,0x1
  404d35:	pop    rbx
  404d36:	pop    rbp
  404d37:	pop    r12
  404d39:	pop    r13
  404d3b:	pop    r14
  404d3d:	ret    
  404d3e:	xchg   ax,ax
  404d40:	mov    esi,0x14
  404d45:	mov    rdi,rbx
  404d48:	call   408180 <__sprintf_chk@plt+0x5ba0>
  404d4d:	mov    rax,QWORD PTR [rbx+0x28]
  404d51:	cmp    QWORD PTR [rbx+0x48],rax
  404d55:	jne    404cd0 <__sprintf_chk@plt+0x26f0>
  404d5b:	mov    rdi,rbx
  404d5e:	call   404c10 <__sprintf_chk@plt+0x2630>
  404d63:	mov    rcx,QWORD PTR [rbx+0x28]
  404d67:	jmp    404cdb <__sprintf_chk@plt+0x26fb>
  404d6c:	nop    DWORD PTR [rax+0x0]
  404d70:	lea    rdi,[rdi+0x20]
  404d74:	mov    ecx,0x10
  404d79:	mov    edx,r8d
  404d7c:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  404d81:	mov    r14,rbp
  404d84:	sub    r14,QWORD PTR [rbx+0x40]
  404d88:	cmp    DWORD PTR [rax+0x8],0x6
  404d8c:	mov    r13,rax
  404d8f:	je     404db4 <__sprintf_chk@plt+0x27d4>
  404d91:	lea    rax,[rip+0x1a008]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  404d98:	mov    rcx,QWORD PTR [rax+r8*8]
  404d9c:	lea    rdx,[rip+0x12a16]        # 4177b9 <__sprintf_chk@plt+0x151d9>
  404da3:	lea    rsi,[rip+0x1225d]        # 417007 <__sprintf_chk@plt+0x14a27>
  404daa:	mov    rdi,rbx
  404dad:	xor    eax,eax
  404daf:	call   407190 <__sprintf_chk@plt+0x4bb0>
  404db4:	mov    rcx,QWORD PTR [rbx+0x10]
  404db8:	mov    rax,rcx
  404dbb:	cmp    rbp,rcx
  404dbe:	jae    404dd7 <__sprintf_chk@plt+0x27f7>
  404dc0:	mov    rdx,QWORD PTR [rax-0x10]
  404dc4:	sub    rax,0x10
  404dc8:	mov    QWORD PTR [rax+0x10],rdx
  404dcc:	mov    edx,DWORD PTR [rax+0x8]
  404dcf:	mov    DWORD PTR [rax+0x18],edx
  404dd2:	cmp    rbp,rax
  404dd5:	jb     404dc0 <__sprintf_chk@plt+0x27e0>
  404dd7:	mov    rdx,QWORD PTR [rbx+0x38]
  404ddb:	mov    rax,rdx
  404dde:	sub    rax,rcx
  404de1:	cmp    rax,0x10
  404de5:	jle    404ed0 <__sprintf_chk@plt+0x28f0>
  404deb:	mov    rsi,QWORD PTR [r13+0x0]
  404def:	mov    eax,DWORD PTR [r13+0x8]
  404df3:	add    r14,QWORD PTR [rbx+0x40]
  404df7:	add    QWORD PTR [rbx+0x10],0x10
  404dfc:	mov    rbp,r14
  404dff:	mov    QWORD PTR [r14],rsi
  404e02:	mov    DWORD PTR [r14+0x8],eax
  404e06:	jmp    404c96 <__sprintf_chk@plt+0x26b6>
  404e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e10:	mov    r14,QWORD PTR [rsi+0x20]
  404e14:	movzx  esi,BYTE PTR [r14+0x73]
  404e19:	mov    eax,esi
  404e1b:	shl    eax,0x4
  404e1e:	cdqe   
  404e20:	cmp    rax,rdx
  404e23:	jge    404fa8 <__sprintf_chk@plt+0x29c8>
  404e29:	cmp    BYTE PTR [r14+0x72],0x0
  404e2e:	movzx  eax,BYTE PTR [r14+0x71]
  404e33:	jne    404ef0 <__sprintf_chk@plt+0x2910>
  404e39:	lea    r13,[rbp+0x10]
  404e3d:	shl    rax,0x4
  404e41:	add    rax,r13
  404e44:	cmp    rax,rdi
  404e47:	jb     404ec0 <__sprintf_chk@plt+0x28e0>
  404e49:	cmp    rcx,QWORD PTR [rbx+0x48]
  404e4d:	je     404fc8 <__sprintf_chk@plt+0x29e8>
  404e53:	lea    rax,[rcx+0x28]
  404e57:	mov    QWORD PTR [rbx+0x28],rax
  404e5b:	mov    QWORD PTR [rax+0x8],rbp
  404e5f:	mov    QWORD PTR [rax],r13
  404e62:	mov    QWORD PTR [rbx+0x18],r13
  404e66:	mov    rcx,QWORD PTR [r14+0x18]
  404e6a:	movzx  edx,BYTE PTR [r14+0x73]
  404e6f:	shl    rdx,0x4
  404e73:	add    rdx,r13
  404e76:	mov    QWORD PTR [rax+0x10],rdx
  404e7a:	mov    QWORD PTR [rbx+0x30],rcx
  404e7e:	mov    DWORD PTR [rax+0x24],0x0
  404e85:	mov    DWORD PTR [rax+0x20],r12d
  404e89:	mov    rax,QWORD PTR [rbx+0x10]
  404e8d:	cmp    rdx,rax
  404e90:	jbe    404ea8 <__sprintf_chk@plt+0x28c8>
  404e92:	nop    WORD PTR [rax+rax*1+0x0]
  404e98:	mov    DWORD PTR [rax+0x8],0x0
  404e9f:	add    rax,0x10
  404ea3:	cmp    rdx,rax
  404ea6:	ja     404e98 <__sprintf_chk@plt+0x28b8>
  404ea8:	mov    QWORD PTR [rbx+0x10],rdx
  404eac:	pop    rbx
  404ead:	pop    rbp
  404eae:	pop    r12
  404eb0:	pop    r13
  404eb2:	xor    eax,eax
  404eb4:	pop    r14
  404eb6:	ret    
  404eb7:	nop    WORD PTR [rax+rax*1+0x0]
  404ec0:	mov    QWORD PTR [rbx+0x10],rax
  404ec4:	jmp    404e49 <__sprintf_chk@plt+0x2869>
  404ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ed0:	mov    esi,0x1
  404ed5:	mov    rdi,rbx
  404ed8:	call   408180 <__sprintf_chk@plt+0x5ba0>
  404edd:	mov    rdx,QWORD PTR [rbx+0x38]
  404ee1:	jmp    404deb <__sprintf_chk@plt+0x280b>
  404ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ef0:	mov    r10,rdi
  404ef3:	sub    r10,rbp
  404ef6:	sar    r10,0x4
  404efa:	lea    r8d,[r10-0x1]
  404efe:	movzx  esi,al
  404f01:	cmp    r8d,esi
  404f04:	jge    404fd5 <__sprintf_chk@plt+0x29f5>
  404f0a:	mov    r9d,esi
  404f0d:	sub    r9d,r10d
  404f10:	mov    rdx,r9
  404f13:	shl    rdx,0x4
  404f17:	lea    rax,[rdi+0x8]
  404f1b:	lea    rdx,[rdi+rdx*1+0x18]
  404f20:	mov    DWORD PTR [rax],0x0
  404f26:	add    rax,0x10
  404f2a:	cmp    rdx,rax
  404f2d:	jne    404f20 <__sprintf_chk@plt+0x2940>
  404f2f:	lea    rdx,[r9+0x1]
  404f33:	shl    rdx,0x4
  404f37:	lea    r13,[rdi+rdx*1]
  404f3b:	lea    eax,[rsi+0x1]
  404f3e:	mov    QWORD PTR [rbx+0x10],r13
  404f42:	sub    eax,r10d
  404f45:	add    r8d,eax
  404f48:	movsxd r8,r8d
  404f4b:	test   esi,esi
  404f4d:	je     404e49 <__sprintf_chk@plt+0x2869>
  404f53:	mov    rax,r8
  404f56:	shl    rax,0x4
  404f5a:	mov    rdi,r13
  404f5d:	sub    rdi,rax
  404f60:	mov    rax,rdi
  404f63:	lea    edi,[rsi-0x1]
  404f66:	sub    rdi,r8
  404f69:	shl    rdi,0x4
  404f6d:	add    rdi,r13
  404f70:	mov    rdx,r13
  404f73:	jmp    404f80 <__sprintf_chk@plt+0x29a0>
  404f75:	nop    DWORD PTR [rax]
  404f78:	mov    rdx,QWORD PTR [rbx+0x10]
  404f7c:	add    rax,0x10
  404f80:	lea    rsi,[rdx+0x10]
  404f84:	mov    QWORD PTR [rbx+0x10],rsi
  404f88:	mov    rsi,QWORD PTR [rax]
  404f8b:	mov    QWORD PTR [rdx],rsi
  404f8e:	mov    esi,DWORD PTR [rax+0x8]
  404f91:	mov    DWORD PTR [rdx+0x8],esi
  404f94:	mov    DWORD PTR [rax+0x8],0x0
  404f9b:	cmp    rdi,rax
  404f9e:	jne    404f78 <__sprintf_chk@plt+0x2998>
  404fa0:	jmp    404e49 <__sprintf_chk@plt+0x2869>
  404fa5:	nop    DWORD PTR [rax]
  404fa8:	mov    rdi,rbx
  404fab:	call   408180 <__sprintf_chk@plt+0x5ba0>
  404fb0:	mov    rbp,QWORD PTR [rbx+0x40]
  404fb4:	mov    rdi,QWORD PTR [rbx+0x10]
  404fb8:	add    rbp,r13
  404fbb:	mov    rcx,QWORD PTR [rbx+0x28]
  404fbf:	jmp    404e29 <__sprintf_chk@plt+0x2849>
  404fc4:	nop    DWORD PTR [rax+0x0]
  404fc8:	mov    rdi,rbx
  404fcb:	call   404c10 <__sprintf_chk@plt+0x2630>
  404fd0:	jmp    404e5b <__sprintf_chk@plt+0x287b>
  404fd5:	mov    r13,rdi
  404fd8:	jmp    404f48 <__sprintf_chk@plt+0x2968>
  404fdd:	nop    DWORD PTR [rax]
  404fe0:	push   r15
  404fe2:	push   r14
  404fe4:	push   r13
  404fe6:	mov    r13,rdi
  404fe9:	push   r12
  404feb:	push   rbp
  404fec:	push   rbx
  404fed:	mov    rbx,rsi
  404ff0:	sub    rsp,0x78
  404ff4:	mov    rax,QWORD PTR fs:0x28
  404ffd:	mov    QWORD PTR [rsp+0x68],rax
  405002:	xor    eax,eax
  405004:	movzx  eax,WORD PTR [rdi+0x60]
  405008:	inc    eax
  40500a:	mov    WORD PTR [rdi+0x60],ax
  40500e:	cmp    ax,0xc7
  405012:	jbe    405028 <__sprintf_chk@plt+0x2a48>
  405014:	cmp    ax,0xc8
  405018:	je     4063b0 <__sprintf_chk@plt+0x3dd0>
  40501e:	cmp    ax,0xe0
  405022:	ja     4063a0 <__sprintf_chk@plt+0x3dc0>
  405028:	mov    rsi,rbx
  40502b:	mov    rdi,r13
  40502e:	call   404c70 <__sprintf_chk@plt+0x2690>
  405033:	test   eax,eax
  405035:	je     405078 <__sprintf_chk@plt+0x2a98>
  405037:	mov    rax,QWORD PTR [r13+0x20]
  40503b:	dec    WORD PTR [r13+0x60]
  405040:	mov    rbx,QWORD PTR [rax+0x70]
  405044:	cmp    QWORD PTR [rax+0x78],rbx
  405048:	jae    406010 <__sprintf_chk@plt+0x3a30>
  40504e:	mov    rax,QWORD PTR [rsp+0x68]
  405053:	xor    rax,QWORD PTR fs:0x28
  40505c:	jne    40687d <__sprintf_chk@plt+0x429d>
  405062:	add    rsp,0x78
  405066:	pop    rbx
  405067:	pop    rbp
  405068:	pop    r12
  40506a:	pop    r13
  40506c:	pop    r14
  40506e:	pop    r15
  405070:	ret    
  405071:	nop    DWORD PTR [rax+0x0]
  405078:	mov    r10,QWORD PTR [r13+0x18]
  40507c:	mov    DWORD PTR [rsp+0x2c],0x1
  405084:	mov    rdx,QWORD PTR [r13+0x28]
  405088:	mov    r12,QWORD PTR [r13+0x30]
  40508c:	mov    r15,r10
  40508f:	mov    rax,QWORD PTR [rdx+0x8]
  405093:	mov    rbp,r12
  405096:	mov    rbx,QWORD PTR [rax]
  405099:	mov    rax,QWORD PTR [rbx+0x20]
  40509d:	mov    rax,QWORD PTR [rax+0x10]
  4050a1:	mov    QWORD PTR [rsp],rax
  4050a5:	nop    DWORD PTR [rax]
  4050a8:	mov    r9d,DWORD PTR [rbp+0x0]
  4050ac:	lea    r12,[rbp+0x4]
  4050b0:	mov    r10d,r9d
  4050b3:	shr    r10d,0x6
  4050b7:	movzx  eax,r10b
  4050bb:	mov    edx,r9d
  4050be:	mov    r10,rax
  4050c1:	and    edx,0x3f
  4050c4:	shl    rax,0x4
  4050c8:	lea    r14,[r15+rax*1]
  4050cc:	cmp    edx,0x25
  4050cf:	ja     405190 <__sprintf_chk@plt+0x2bb0>
  4050d5:	lea    rdi,[rip+0x12920]        # 4179fc <__sprintf_chk@plt+0x1541c>
  4050dc:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4050e0:	add    rdx,rdi
  4050e3:	notrack jmp rdx
  4050e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050f0:	cmp    DWORD PTR [r14+0x8],0x3
  4050f5:	lea    rbp,[r14+0x20]
  4050f9:	mov    QWORD PTR [r13+0x30],r12
  4050fd:	je     40511d <__sprintf_chk@plt+0x2b3d>
  4050ff:	mov    rsi,r14
  405102:	mov    rdi,r14
  405105:	mov    DWORD PTR [rsp+0x8],r9d
  40510a:	call   403080 <__sprintf_chk@plt+0xaa0>
  40510f:	test   rax,rax
  405112:	mov    r9d,DWORD PTR [rsp+0x8]
  405117:	je     406670 <__sprintf_chk@plt+0x4090>
  40511d:	cmp    DWORD PTR [r14+0x18],0x3
  405122:	je     405143 <__sprintf_chk@plt+0x2b63>
  405124:	lea    rdi,[r14+0x10]
  405128:	mov    rsi,rdi
  40512b:	mov    DWORD PTR [rsp+0x8],r9d
  405130:	call   403080 <__sprintf_chk@plt+0xaa0>
  405135:	test   rax,rax
  405138:	mov    r9d,DWORD PTR [rsp+0x8]
  40513d:	je     406690 <__sprintf_chk@plt+0x40b0>
  405143:	cmp    DWORD PTR [r14+0x28],0x3
  405148:	je     40516b <__sprintf_chk@plt+0x2b8b>
  40514a:	mov    rsi,rbp
  40514d:	mov    rdi,rbp
  405150:	mov    DWORD PTR [rsp+0x8],r9d
  405155:	call   403080 <__sprintf_chk@plt+0xaa0>
  40515a:	mov    rbp,rax
  40515d:	test   rax,rax
  405160:	je     4025f0 <__sprintf_chk@plt+0x10>
  405166:	mov    r9d,DWORD PTR [rsp+0x8]
  40516b:	vmovsd xmm0,QWORD PTR [r14]
  405170:	vsubsd xmm0,xmm0,QWORD PTR [rbp+0x0]
  405175:	mov    DWORD PTR [r14+0x8],0x3
  40517d:	vmovsd QWORD PTR [r14],xmm0
  405182:	shr    r9d,0xe
  405186:	lea    r12,[r12+r9*4-0x7fffc]
  40518e:	xchg   ax,ax
  405190:	mov    rbp,r12
  405193:	jmp    4050a8 <__sprintf_chk@plt+0x2ac8>
  405198:	nop    DWORD PTR [rax+rax*1+0x0]
  4051a0:	mov    edx,r9d
  4051a3:	shr    edx,0xe
  4051a6:	and    edx,0x1ff
  4051ac:	mov    r14d,r9d
  4051af:	mov    esi,edx
  4051b1:	shr    r14d,0x17
  4051b5:	mov    QWORD PTR [r13+0x30],r12
  4051b9:	sub    esi,r14d
  4051bc:	inc    esi
  4051be:	mov    rdi,r13
  4051c1:	mov    QWORD PTR [rsp+0x8],rax
  4051c6:	call   4069b0 <__sprintf_chk@plt+0x43d0>
  4051cb:	mov    rdx,QWORD PTR [r13+0x20]
  4051cf:	mov    rax,QWORD PTR [rdx+0x70]
  4051d3:	cmp    QWORD PTR [rdx+0x78],rax
  4051d7:	mov    rax,QWORD PTR [rsp+0x8]
  4051dc:	jae    406530 <__sprintf_chk@plt+0x3f50>
  4051e2:	mov    r15,QWORD PTR [r13+0x18]
  4051e6:	shl    r14,0x4
  4051ea:	add    r14,r15
  4051ed:	mov    rdx,QWORD PTR [r14]
  4051f0:	add    rax,r15
  4051f3:	mov    QWORD PTR [rax],rdx
  4051f6:	mov    edx,DWORD PTR [r14+0x8]
  4051fa:	mov    DWORD PTR [rax+0x8],edx
  4051fd:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4051ff:	nop
  405200:	shr    r9d,0x17
  405204:	mov    ebp,r9d
  405207:	shl    rbp,0x4
  40520b:	add    rbp,r15
  40520e:	mov    eax,DWORD PTR [rbp+0x8]
  405211:	cmp    eax,0x4
  405214:	je     406500 <__sprintf_chk@plt+0x3f20>
  40521a:	cmp    eax,0x5
  40521d:	je     406350 <__sprintf_chk@plt+0x3d70>
  405223:	mov    QWORD PTR [r13+0x30],r12
  405227:	mov    r8d,0xc
  40522d:	mov    rcx,r14
  405230:	lea    rdx,[rip+0x12dd9]        # 418010 <__sprintf_chk@plt+0x15a30>
  405237:	mov    rsi,rbp
  40523a:	mov    rdi,r13
  40523d:	call   406930 <__sprintf_chk@plt+0x4350>
  405242:	test   eax,eax
  405244:	je     406640 <__sprintf_chk@plt+0x4060>
  40524a:	nop    WORD PTR [rax+rax*1+0x0]
  405250:	mov    r15,QWORD PTR [r13+0x18]
  405254:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405259:	nop    DWORD PTR [rax+0x0]
  405260:	shr    r9d,0x17
  405264:	shl    r9,0x4
  405268:	add    r9,r15
  40526b:	mov    edx,DWORD PTR [r9+0x8]
  40526f:	mov    eax,0x1
  405274:	test   edx,edx
  405276:	je     405290 <__sprintf_chk@plt+0x2cb0>
  405278:	xor    eax,eax
  40527a:	cmp    edx,0x1
  40527d:	jne    405290 <__sprintf_chk@plt+0x2cb0>
  40527f:	mov    r11d,DWORD PTR [r9]
  405282:	xor    eax,eax
  405284:	test   r11d,r11d
  405287:	sete   al
  40528a:	nop    WORD PTR [rax+rax*1+0x0]
  405290:	mov    DWORD PTR [r14],eax
  405293:	mov    DWORD PTR [r14+0x8],0x1
  40529b:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4052a0:	mov    edx,r9d
  4052a3:	shr    edx,0x17
  4052a6:	shl    rdx,0x4
  4052aa:	add    rdx,r15
  4052ad:	cmp    DWORD PTR [rdx+0x8],0x3
  4052b1:	jne    406378 <__sprintf_chk@plt+0x3d98>
  4052b7:	vmovsd xmm0,QWORD PTR [rdx]
  4052bb:	mov    DWORD PTR [r14+0x8],0x3
  4052c3:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x131b5]        # 418480 <__sprintf_chk@plt+0x15ea0>
  4052cb:	vmovsd QWORD PTR [r14],xmm0
  4052d0:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4052d5:	nop    DWORD PTR [rax]
  4052d8:	mov    edx,r9d
  4052db:	shr    edx,0x17
  4052de:	test   dh,0x1
  4052e1:	jne    4062a8 <__sprintf_chk@plt+0x3cc8>
  4052e7:	movsxd rdx,edx
  4052ea:	shl    rdx,0x4
  4052ee:	shr    r9d,0xe
  4052f2:	add    rdx,r15
  4052f5:	test   r9d,0x100
  4052fc:	je     4062c4 <__sprintf_chk@plt+0x3ce4>
  405302:	movzx  ecx,r9b
  405306:	shl    rcx,0x4
  40530a:	add    rcx,QWORD PTR [rsp]
  40530e:	cmp    DWORD PTR [rdx+0x8],0x3
  405312:	jne    40531e <__sprintf_chk@plt+0x2d3e>
  405314:	cmp    DWORD PTR [rcx+0x8],0x3
  405318:	je     406800 <__sprintf_chk@plt+0x4220>
  40531e:	mov    QWORD PTR [r13+0x30],r12
  405322:	mov    r8d,0xa
  405328:	mov    rsi,r14
  40532b:	mov    rdi,r13
  40532e:	call   408330 <__sprintf_chk@plt+0x5d50>
  405333:	mov    r15,QWORD PTR [r13+0x18]
  405337:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40533c:	nop    DWORD PTR [rax+0x0]
  405340:	mov    edx,r9d
  405343:	shr    edx,0x17
  405346:	test   dh,0x1
  405349:	je     406318 <__sprintf_chk@plt+0x3d38>
  40534f:	movzx  edx,dl
  405352:	shl    rdx,0x4
  405356:	shr    r9d,0xe
  40535a:	add    rdx,QWORD PTR [rsp]
  40535e:	test   r9d,0x100
  405365:	je     406333 <__sprintf_chk@plt+0x3d53>
  40536b:	movzx  ecx,r9b
  40536f:	shl    rcx,0x4
  405373:	add    rcx,QWORD PTR [rsp]
  405377:	cmp    DWORD PTR [rdx+0x8],0x3
  40537b:	jne    405387 <__sprintf_chk@plt+0x2da7>
  40537d:	cmp    DWORD PTR [rcx+0x8],0x3
  405381:	je     406578 <__sprintf_chk@plt+0x3f98>
  405387:	mov    QWORD PTR [r13+0x30],r12
  40538b:	mov    r8d,0x9
  405391:	mov    rsi,r14
  405394:	mov    rdi,r13
  405397:	call   408330 <__sprintf_chk@plt+0x5d50>
  40539c:	mov    r15,QWORD PTR [r13+0x18]
  4053a0:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4053a5:	nop    DWORD PTR [rax]
  4053a8:	mov    edx,r9d
  4053ab:	shr    edx,0x17
  4053ae:	test   dh,0x1
  4053b1:	jne    4062e0 <__sprintf_chk@plt+0x3d00>
  4053b7:	movsxd rdx,edx
  4053ba:	shl    rdx,0x4
  4053be:	shr    r9d,0xe
  4053c2:	add    rdx,r15
  4053c5:	test   r9d,0x100
  4053cc:	je     4062fc <__sprintf_chk@plt+0x3d1c>
  4053d2:	movzx  ecx,r9b
  4053d6:	shl    rcx,0x4
  4053da:	add    rcx,QWORD PTR [rsp]
  4053de:	cmp    DWORD PTR [rdx+0x8],0x3
  4053e2:	jne    4053ee <__sprintf_chk@plt+0x2e0e>
  4053e4:	cmp    DWORD PTR [rcx+0x8],0x3
  4053e8:	je     406558 <__sprintf_chk@plt+0x3f78>
  4053ee:	mov    QWORD PTR [r13+0x30],r12
  4053f2:	mov    r8d,0x8
  4053f8:	mov    rsi,r14
  4053fb:	mov    rdi,r13
  4053fe:	call   408330 <__sprintf_chk@plt+0x5d50>
  405403:	mov    r15,QWORD PTR [r13+0x18]
  405407:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40540c:	nop    DWORD PTR [rax+0x0]
  405410:	mov    edx,r9d
  405413:	shr    edx,0x17
  405416:	test   dh,0x1
  405419:	jne    406270 <__sprintf_chk@plt+0x3c90>
  40541f:	movsxd rdx,edx
  405422:	shl    rdx,0x4
  405426:	shr    r9d,0xe
  40542a:	add    rdx,r15
  40542d:	test   r9d,0x100
  405434:	je     40628c <__sprintf_chk@plt+0x3cac>
  40543a:	movzx  ecx,r9b
  40543e:	shl    rcx,0x4
  405442:	add    rcx,QWORD PTR [rsp]
  405446:	cmp    DWORD PTR [rdx+0x8],0x3
  40544a:	jne    405456 <__sprintf_chk@plt+0x2e76>
  40544c:	cmp    DWORD PTR [rcx+0x8],0x3
  405450:	je     4065e8 <__sprintf_chk@plt+0x4008>
  405456:	mov    QWORD PTR [r13+0x30],r12
  40545a:	mov    r8d,0x7
  405460:	mov    rsi,r14
  405463:	mov    rdi,r13
  405466:	call   408330 <__sprintf_chk@plt+0x5d50>
  40546b:	mov    r15,QWORD PTR [r13+0x18]
  40546f:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405474:	nop    DWORD PTR [rax+0x0]
  405478:	mov    edx,r9d
  40547b:	shr    edx,0x17
  40547e:	test   dh,0x1
  405481:	jne    406238 <__sprintf_chk@plt+0x3c58>
  405487:	movsxd rdx,edx
  40548a:	shl    rdx,0x4
  40548e:	shr    r9d,0xe
  405492:	add    rdx,r15
  405495:	test   r9d,0x100
  40549c:	je     406254 <__sprintf_chk@plt+0x3c74>
  4054a2:	movzx  ecx,r9b
  4054a6:	shl    rcx,0x4
  4054aa:	add    rcx,QWORD PTR [rsp]
  4054ae:	cmp    DWORD PTR [rdx+0x8],0x3
  4054b2:	jne    4054be <__sprintf_chk@plt+0x2ede>
  4054b4:	cmp    DWORD PTR [rcx+0x8],0x3
  4054b8:	je     4065c8 <__sprintf_chk@plt+0x3fe8>
  4054be:	mov    QWORD PTR [r13+0x30],r12
  4054c2:	mov    r8d,0x6
  4054c8:	mov    rsi,r14
  4054cb:	mov    rdi,r13
  4054ce:	call   408330 <__sprintf_chk@plt+0x5d50>
  4054d3:	mov    r15,QWORD PTR [r13+0x18]
  4054d7:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4054dc:	nop    DWORD PTR [rax+0x0]
  4054e0:	mov    edx,r9d
  4054e3:	shr    edx,0x17
  4054e6:	test   dh,0x1
  4054e9:	jne    406200 <__sprintf_chk@plt+0x3c20>
  4054ef:	movsxd rdx,edx
  4054f2:	shl    rdx,0x4
  4054f6:	shr    r9d,0xe
  4054fa:	add    rdx,r15
  4054fd:	test   r9d,0x100
  405504:	je     40621c <__sprintf_chk@plt+0x3c3c>
  40550a:	movzx  ecx,r9b
  40550e:	shl    rcx,0x4
  405512:	add    rcx,QWORD PTR [rsp]
  405516:	cmp    DWORD PTR [rdx+0x8],0x3
  40551a:	jne    405526 <__sprintf_chk@plt+0x2f46>
  40551c:	cmp    DWORD PTR [rcx+0x8],0x3
  405520:	je     4065a8 <__sprintf_chk@plt+0x3fc8>
  405526:	mov    QWORD PTR [r13+0x30],r12
  40552a:	mov    r8d,0x5
  405530:	mov    rsi,r14
  405533:	mov    rdi,r13
  405536:	call   408330 <__sprintf_chk@plt+0x5d50>
  40553b:	mov    r15,QWORD PTR [r13+0x18]
  40553f:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405544:	nop    DWORD PTR [rax+0x0]
  405548:	mov    esi,r9d
  40554b:	shr    esi,0x17
  40554e:	shl    rsi,0x4
  405552:	add    rsi,r15
  405555:	mov    rax,QWORD PTR [rsi]
  405558:	shr    r9d,0xe
  40555c:	mov    QWORD PTR [r14+0x10],rax
  405560:	mov    eax,DWORD PTR [rsi+0x8]
  405563:	mov    DWORD PTR [r14+0x18],eax
  405567:	mov    QWORD PTR [r13+0x30],r12
  40556b:	test   r9d,0x100
  405572:	jne    4061e8 <__sprintf_chk@plt+0x3c08>
  405578:	and    r9d,0x1ff
  40557f:	mov    rdx,r9
  405582:	shl    rdx,0x4
  405586:	add    rdx,r15
  405589:	mov    rcx,r14
  40558c:	mov    rdi,r13
  40558f:	call   40b320 <__sprintf_chk@plt+0x8d40>
  405594:	mov    r15,QWORD PTR [r13+0x18]
  405598:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40559d:	nop    DWORD PTR [rax]
  4055a0:	mov    esi,r9d
  4055a3:	shr    r9d,0xe
  4055a7:	mov    edx,r9d
  4055aa:	and    edx,0x1ff
  4055b0:	mov    eax,edx
  4055b2:	sar    eax,0x3
  4055b5:	shr    esi,0x17
  4055b8:	and    eax,0x1f
  4055bb:	jne    4061c0 <__sprintf_chk@plt+0x3be0>
  4055c1:	mov    eax,esi
  4055c3:	sar    eax,0x3
  4055c6:	and    eax,0x1f
  4055c9:	jne    406020 <__sprintf_chk@plt+0x3a40>
  4055cf:	mov    rdi,r13
  4055d2:	call   408640 <__sprintf_chk@plt+0x6060>
  4055d7:	mov    QWORD PTR [r14],rax
  4055da:	mov    rax,QWORD PTR [r13+0x20]
  4055de:	mov    DWORD PTR [r14+0x8],0x5
  4055e6:	mov    rdi,QWORD PTR [rax+0x70]
  4055ea:	mov    QWORD PTR [r13+0x30],r12
  4055ee:	cmp    QWORD PTR [rax+0x78],rdi
  4055f2:	jb     405250 <__sprintf_chk@plt+0x2c70>
  4055f8:	mov    rdi,r13
  4055fb:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  405600:	mov    r15,QWORD PTR [r13+0x18]
  405604:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405609:	nop    DWORD PTR [rax+0x0]
  405610:	mov    ecx,r9d
  405613:	shr    ecx,0xe
  405616:	mov    QWORD PTR [r13+0x30],r12
  40561a:	test   ch,0x1
  40561d:	jne    406190 <__sprintf_chk@plt+0x3bb0>
  405623:	and    ecx,0x1ff
  405629:	shl    rcx,0x4
  40562d:	shr    r9d,0x17
  405631:	add    rcx,r15
  405634:	test   r9d,0x100
  40563b:	je     4061ac <__sprintf_chk@plt+0x3bcc>
  405641:	movzx  edx,r9b
  405645:	shl    rdx,0x4
  405649:	add    rdx,QWORD PTR [rsp]
  40564d:	mov    rsi,r14
  405650:	mov    rdi,r13
  405653:	call   414d00 <__sprintf_chk@plt+0x12720>
  405658:	mov    r15,QWORD PTR [r13+0x18]
  40565c:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405661:	nop    DWORD PTR [rax+0x0]
  405668:	mov    edx,r9d
  40566b:	mov    rax,QWORD PTR [rbx+0x18]
  40566f:	shr    edx,0xe
  405672:	mov    QWORD PTR [r13+0x30],r12
  405676:	shl    rdx,0x4
  40567a:	add    rdx,QWORD PTR [rsp]
  40567e:	lea    rsi,[rsp+0x50]
  405683:	mov    rcx,r14
  405686:	mov    rdi,r13
  405689:	mov    QWORD PTR [rsp+0x50],rax
  40568e:	mov    DWORD PTR [rsp+0x58],0x5
  405696:	call   414d00 <__sprintf_chk@plt+0x12720>
  40569b:	mov    r15,QWORD PTR [r13+0x18]
  40569f:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4056a4:	nop    DWORD PTR [rax+0x0]
  4056a8:	mov    edx,r9d
  4056ab:	shr    edx,0xe
  4056ae:	mov    QWORD PTR [r13+0x30],r12
  4056b2:	test   dh,0x1
  4056b5:	jne    406180 <__sprintf_chk@plt+0x3ba0>
  4056bb:	and    edx,0x1ff
  4056c1:	shl    rdx,0x4
  4056c5:	add    rdx,r15
  4056c8:	mov    esi,r9d
  4056cb:	shr    esi,0x17
  4056ce:	shl    rsi,0x4
  4056d2:	add    rsi,r15
  4056d5:	mov    rcx,r14
  4056d8:	mov    rdi,r13
  4056db:	call   40b320 <__sprintf_chk@plt+0x8d40>
  4056e0:	mov    r15,QWORD PTR [r13+0x18]
  4056e4:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4056e9:	nop    DWORD PTR [rax+0x0]
  4056f0:	shr    r9d,0x17
  4056f4:	mov    rdx,QWORD PTR [rbx+r9*8+0x28]
  4056f9:	mov    rcx,QWORD PTR [r14]
  4056fc:	mov    rax,QWORD PTR [rdx+0x10]
  405700:	mov    QWORD PTR [rax],rcx
  405703:	mov    ecx,DWORD PTR [r14+0x8]
  405707:	mov    DWORD PTR [rax+0x8],ecx
  40570a:	cmp    DWORD PTR [r14+0x8],0x3
  40570f:	jle    405190 <__sprintf_chk@plt+0x2bb0>
  405715:	mov    rsi,QWORD PTR [r14]
  405718:	test   BYTE PTR [rsi+0x9],0x3
  40571c:	je     405190 <__sprintf_chk@plt+0x2bb0>
  405722:	movzx  eax,BYTE PTR [rdx+0x9]
  405726:	test   al,0x4
  405728:	je     405190 <__sprintf_chk@plt+0x2bb0>
  40572e:	mov    rdi,QWORD PTR [r13+0x20]
  405732:	cmp    BYTE PTR [rdi+0x21],0x1
  405736:	je     406863 <__sprintf_chk@plt+0x4283>
  40573c:	movzx  ecx,BYTE PTR [rdi+0x20]
  405740:	and    eax,0xfffffff8
  405743:	and    ecx,0x3
  405746:	or     eax,ecx
  405748:	mov    BYTE PTR [rdx+0x9],al
  40574b:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405750:	mov    edx,r9d
  405753:	mov    rax,QWORD PTR [rbx+0x18]
  405757:	shr    edx,0xe
  40575a:	mov    QWORD PTR [r13+0x30],r12
  40575e:	shl    rdx,0x4
  405762:	add    rdx,QWORD PTR [rsp]
  405766:	lea    rsi,[rsp+0x50]
  40576b:	mov    rcx,r14
  40576e:	mov    rdi,r13
  405771:	mov    QWORD PTR [rsp+0x50],rax
  405776:	mov    DWORD PTR [rsp+0x58],0x5
  40577e:	call   40b320 <__sprintf_chk@plt+0x8d40>
  405783:	mov    r15,QWORD PTR [r13+0x18]
  405787:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40578c:	nop    DWORD PTR [rax+0x0]
  405790:	shr    r9d,0x17
  405794:	mov    rax,QWORD PTR [rbx+r9*8+0x28]
  405799:	mov    rax,QWORD PTR [rax+0x10]
  40579d:	mov    rdx,QWORD PTR [rax]
  4057a0:	mov    eax,DWORD PTR [rax+0x8]
  4057a3:	mov    QWORD PTR [r14],rdx
  4057a6:	mov    DWORD PTR [r14+0x8],eax
  4057aa:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4057af:	nop
  4057b0:	shr    r9d,0x17
  4057b4:	shl    r9,0x4
  4057b8:	add    r9,r15
  4057bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4057c0:	sub    r9,0x10
  4057c4:	mov    DWORD PTR [r9+0x18],0x0
  4057cc:	cmp    r14,r9
  4057cf:	jbe    4057c0 <__sprintf_chk@plt+0x31e0>
  4057d1:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4057d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057e0:	mov    eax,r9d
  4057e3:	shr    eax,0x17
  4057e6:	add    rbp,0x8
  4057ea:	and    r9d,0x7fc000
  4057f1:	mov    DWORD PTR [r14],eax
  4057f4:	mov    DWORD PTR [r14+0x8],0x1
  4057fc:	cmovne r12,rbp
  405800:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405805:	nop    DWORD PTR [rax]
  405808:	shr    r9d,0xe
  40580c:	shl    r9,0x4
  405810:	add    r9,QWORD PTR [rsp]
  405814:	mov    rax,QWORD PTR [r9]
  405817:	mov    QWORD PTR [r14],rax
  40581a:	mov    eax,DWORD PTR [r9+0x8]
  40581e:	mov    DWORD PTR [r14+0x8],eax
  405822:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405827:	nop    WORD PTR [rax+rax*1+0x0]
  405830:	mov    rdx,QWORD PTR [r13+0x28]
  405834:	mov    rcx,QWORD PTR [rbx+0x20]
  405838:	mov    rbp,QWORD PTR [rdx]
  40583b:	movzx  ecx,BYTE PTR [rcx+0x71]
  40583f:	sub    rbp,QWORD PTR [rdx+0x8]
  405843:	shr    r9d,0x17
  405847:	sar    rbp,0x4
  40584b:	sub    ebp,ecx
  40584d:	dec    r9d
  405850:	lea    ecx,[rbp-0x1]
  405853:	cmp    r9d,0xffffffff
  405857:	je     406400 <__sprintf_chk@plt+0x3e20>
  40585d:	test   r9d,r9d
  405860:	jle    405190 <__sprintf_chk@plt+0x2bb0>
  405866:	movsxd rax,ebp
  405869:	neg    rax
  40586c:	shl    rax,0x4
  405870:	sub    rax,r14
  405873:	lea    rsi,[r14+0x8]
  405877:	xor    r8d,r8d
  40587a:	add    rax,0x8
  40587e:	jmp    4058a3 <__sprintf_chk@plt+0x32c3>
  405880:	lea    rdi,[rax+rsi*1]
  405884:	add    rdi,QWORD PTR [rdx]
  405887:	mov    r10,QWORD PTR [rdi]
  40588a:	mov    edi,DWORD PTR [rdi+0x8]
  40588d:	mov    QWORD PTR [rsi-0x8],r10
  405891:	mov    DWORD PTR [rsi],edi
  405893:	inc    r8d
  405896:	add    rsi,0x10
  40589a:	cmp    r8d,r9d
  40589d:	je     405190 <__sprintf_chk@plt+0x2bb0>
  4058a3:	cmp    r8d,ecx
  4058a6:	jl     405880 <__sprintf_chk@plt+0x32a0>
  4058a8:	mov    DWORD PTR [rsi],0x0
  4058ae:	jmp    405893 <__sprintf_chk@plt+0x32b3>
  4058b0:	shr    r9d,0x17
  4058b4:	shl    r9,0x4
  4058b8:	add    r9,r15
  4058bb:	mov    rax,QWORD PTR [r9]
  4058be:	mov    QWORD PTR [r14],rax
  4058c1:	mov    eax,DWORD PTR [r9+0x8]
  4058c5:	mov    DWORD PTR [r14+0x8],eax
  4058c9:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4058ce:	xchg   ax,ax
  4058d0:	mov    rax,QWORD PTR [rbx+0x20]
  4058d4:	shr    r9d,0xe
  4058d8:	mov    rax,QWORD PTR [rax+0x20]
  4058dc:	mov    rdx,QWORD PTR [rbx+0x18]
  4058e0:	mov    rcx,QWORD PTR [rax+r9*8]
  4058e4:	mov    rdi,r13
  4058e7:	movzx  r8d,BYTE PTR [rcx+0x70]
  4058ec:	mov    QWORD PTR [rsp+0x10],rcx
  4058f1:	mov    esi,r8d
  4058f4:	mov    DWORD PTR [rsp+0x8],r8d
  4058f9:	call   4047d0 <__sprintf_chk@plt+0x21f0>
  4058fe:	mov    rcx,QWORD PTR [rsp+0x10]
  405903:	mov    r8d,DWORD PTR [rsp+0x8]
  405908:	mov    QWORD PTR [rsp+0x20],rax
  40590d:	mov    QWORD PTR [rax+0x20],rcx
  405911:	test   r8d,r8d
  405914:	je     4067f0 <__sprintf_chk@plt+0x4210>
  40591a:	mov    rax,QWORD PTR [rsp+0x20]
  40591f:	mov    QWORD PTR [rsp+0x38],r12
  405924:	lea    r10,[rax+0x28]
  405928:	lea    eax,[r8-0x1]
  40592c:	mov    QWORD PTR [rsp+0x30],rax
  405931:	mov    r8,QWORD PTR [r13+0x20]
  405935:	lea    rax,[rbp+rax*4+0x8]
  40593a:	mov    QWORD PTR [rsp+0x10],rax
  40593f:	lea    rax,[r13+0x98]
  405946:	mov    QWORD PTR [rsp+0x18],r15
  40594b:	mov    QWORD PTR [rsp+0x40],r14
  405950:	mov    r15,r8
  405953:	mov    r14,r12
  405956:	mov    r8,r13
  405959:	mov    QWORD PTR [rsp+0x48],rax
  40595e:	mov    r12,r10
  405961:	mov    r13,rbx
  405964:	jmp    40598c <__sprintf_chk@plt+0x33ac>
  405966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405970:	mov    rax,QWORD PTR [r13+rbp*8+0x28]
  405975:	add    r14,0x4
  405979:	mov    QWORD PTR [r12],rax
  40597d:	add    r12,0x8
  405981:	cmp    r14,QWORD PTR [rsp+0x10]
  405986:	je     405a5d <__sprintf_chk@plt+0x347d>
  40598c:	mov    eax,DWORD PTR [r14]
  40598f:	mov    ebp,eax
  405991:	and    eax,0x3f
  405994:	shr    ebp,0x17
  405997:	cmp    eax,0x4
  40599a:	je     405970 <__sprintf_chk@plt+0x3390>
  40599c:	mov    ebp,ebp
  40599e:	mov    rdx,QWORD PTR [r8+0x98]
  4059a5:	shl    rbp,0x4
  4059a9:	add    rbp,QWORD PTR [rsp+0x18]
  4059ae:	test   rdx,rdx
  4059b1:	je     406548 <__sprintf_chk@plt+0x3f68>
  4059b7:	mov    rbx,rdx
  4059ba:	cmp    QWORD PTR [rdx+0x10],rbp
  4059be:	jb     406548 <__sprintf_chk@plt+0x3f68>
  4059c4:	jne    4059e2 <__sprintf_chk@plt+0x3402>
  4059c6:	jmp    405fe0 <__sprintf_chk@plt+0x3a00>
  4059cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4059d0:	mov    rax,rdx
  4059d3:	cmp    rbp,QWORD PTR [rdx+0x10]
  4059d7:	ja     4059ea <__sprintf_chk@plt+0x340a>
  4059d9:	je     405fe8 <__sprintf_chk@plt+0x3a08>
  4059df:	mov    rbx,rdx
  4059e2:	mov    rdx,QWORD PTR [rdx]
  4059e5:	test   rdx,rdx
  4059e8:	jne    4059d0 <__sprintf_chk@plt+0x33f0>
  4059ea:	xor    edx,edx
  4059ec:	mov    rdi,r8
  4059ef:	mov    ecx,0x28
  4059f4:	xor    esi,esi
  4059f6:	mov    QWORD PTR [rsp+0x8],r8
  4059fb:	call   404640 <__sprintf_chk@plt+0x2060>
  405a00:	mov    BYTE PTR [rax+0x8],0xa
  405a04:	mov    r8,QWORD PTR [rsp+0x8]
  405a09:	movzx  edx,BYTE PTR [r15+0x20]
  405a0e:	mov    QWORD PTR [rax+0x10],rbp
  405a12:	and    edx,0x3
  405a15:	mov    BYTE PTR [rax+0x9],dl
  405a18:	mov    rdx,QWORD PTR [rbx]
  405a1b:	mov    QWORD PTR [rax],rdx
  405a1e:	mov    QWORD PTR [rbx],rax
  405a21:	lea    rdx,[r15+0xb8]
  405a28:	mov    QWORD PTR [rax+0x18],rdx
  405a2c:	mov    rdx,QWORD PTR [r15+0xd8]
  405a33:	mov    QWORD PTR [rax+0x20],rdx
  405a37:	mov    QWORD PTR [rdx+0x18],rax
  405a3b:	mov    QWORD PTR [r15+0xd8],rax
  405a42:	mov    r15,QWORD PTR [r8+0x20]
  405a46:	add    r14,0x4
  405a4a:	mov    QWORD PTR [r12],rax
  405a4e:	add    r12,0x8
  405a52:	cmp    r14,QWORD PTR [rsp+0x10]
  405a57:	jne    40598c <__sprintf_chk@plt+0x33ac>
  405a5d:	mov    r12,QWORD PTR [rsp+0x38]
  405a62:	mov    rax,QWORD PTR [rsp+0x30]
  405a67:	mov    r14,QWORD PTR [rsp+0x40]
  405a6c:	mov    rbx,r13
  405a6f:	lea    r12,[r12+rax*4+0x4]
  405a74:	mov    r13,r8
  405a77:	mov    r8,r15
  405a7a:	mov    rax,QWORD PTR [rsp+0x20]
  405a7f:	mov    DWORD PTR [r14+0x8],0x6
  405a87:	mov    QWORD PTR [r14],rax
  405a8a:	mov    rax,QWORD PTR [r8+0x70]
  405a8e:	mov    QWORD PTR [r13+0x30],r12
  405a92:	cmp    QWORD PTR [r8+0x78],rax
  405a96:	jae    4055f8 <__sprintf_chk@plt+0x3018>
  405a9c:	mov    r15,QWORD PTR [r13+0x18]
  405aa0:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405aa5:	nop    DWORD PTR [rax]
  405aa8:	mov    rsi,r14
  405aab:	mov    rdi,r13
  405aae:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  405ab3:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ac0:	mov    eax,r9d
  405ac3:	shr    eax,0xe
  405ac6:	and    eax,0x1ff
  405acb:	shr    r9d,0x17
  405acf:	jne    405aeb <__sprintf_chk@plt+0x350b>
  405ad1:	mov    rdx,QWORD PTR [r13+0x28]
  405ad5:	mov    r9,QWORD PTR [r13+0x10]
  405ad9:	mov    rdx,QWORD PTR [rdx+0x10]
  405add:	sub    r9,r14
  405ae0:	mov    QWORD PTR [r13+0x10],rdx
  405ae4:	sar    r9,0x4
  405ae8:	dec    r9d
  405aeb:	test   eax,eax
  405aed:	jne    405af6 <__sprintf_chk@plt+0x3516>
  405aef:	mov    eax,DWORD PTR [rbp+0x4]
  405af2:	lea    r12,[rbp+0x8]
  405af6:	cmp    DWORD PTR [r14+0x8],0x5
  405afb:	jne    405190 <__sprintf_chk@plt+0x2bb0>
  405b01:	lea    ebp,[rax-0x1]
  405b04:	imul   eax,ebp,0x32
  405b07:	mov    rdi,QWORD PTR [r14]
  405b0a:	mov    DWORD PTR [rsp+0x10],eax
  405b0e:	add    eax,r9d
  405b11:	mov    QWORD PTR [rsp+0x8],rdi
  405b16:	cmp    eax,DWORD PTR [rdi+0x38]
  405b19:	jg     406820 <__sprintf_chk@plt+0x4240>
  405b1f:	movsxd rcx,r9d
  405b22:	shl    rcx,0x4
  405b26:	lea    rbp,[r14+rcx*1]
  405b2a:	test   r9d,r9d
  405b2d:	jle    405190 <__sprintf_chk@plt+0x2bb0>
  405b33:	mov    QWORD PTR [rsp+0x18],rbx
  405b38:	mov    QWORD PTR [rsp+0x20],r12
  405b3d:	mov    r14,QWORD PTR [rsp+0x8]
  405b42:	mov    r12,rbp
  405b45:	mov    ebp,DWORD PTR [rsp+0x10]
  405b49:	mov    edx,eax
  405b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b50:	mov    rsi,r14
  405b53:	mov    rdi,r13
  405b56:	lea    ebx,[rdx-0x1]
  405b59:	call   408f70 <__sprintf_chk@plt+0x6990>
  405b5e:	mov    rdx,QWORD PTR [r12]
  405b62:	mov    QWORD PTR [rax],rdx
  405b65:	mov    edx,DWORD PTR [r12+0x8]
  405b6a:	mov    DWORD PTR [rax+0x8],edx
  405b6d:	cmp    DWORD PTR [r12+0x8],0x3
  405b73:	jle    405ba0 <__sprintf_chk@plt+0x35c0>
  405b75:	mov    rax,QWORD PTR [r12]
  405b79:	test   BYTE PTR [rax+0x9],0x3
  405b7d:	je     405ba0 <__sprintf_chk@plt+0x35c0>
  405b7f:	movzx  eax,BYTE PTR [r14+0x9]
  405b84:	test   al,0x4
  405b86:	je     405ba0 <__sprintf_chk@plt+0x35c0>
  405b88:	mov    rdx,QWORD PTR [r13+0x20]
  405b8c:	and    eax,0xfffffffb
  405b8f:	mov    BYTE PTR [r14+0x9],al
  405b93:	mov    rax,QWORD PTR [rdx+0x40]
  405b97:	mov    QWORD PTR [r14+0x30],rax
  405b9b:	mov    QWORD PTR [rdx+0x40],r14
  405b9f:	nop
  405ba0:	sub    r12,0x10
  405ba4:	mov    edx,ebx
  405ba6:	cmp    ebp,ebx
  405ba8:	jne    405b50 <__sprintf_chk@plt+0x3570>
  405baa:	mov    rbx,QWORD PTR [rsp+0x18]
  405baf:	mov    r12,QWORD PTR [rsp+0x20]
  405bb4:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405bb9:	nop    DWORD PTR [rax+0x0]
  405bc0:	mov    rdx,QWORD PTR [r14+0x20]
  405bc4:	lea    rsi,[r14+0x30]
  405bc8:	mov    QWORD PTR [r14+0x50],rdx
  405bcc:	mov    edx,DWORD PTR [r14+0x28]
  405bd0:	mov    rdi,r13
  405bd3:	mov    DWORD PTR [r14+0x58],edx
  405bd7:	mov    rdx,QWORD PTR [r14+0x10]
  405bdb:	mov    QWORD PTR [rsp+0x8],rax
  405be0:	mov    QWORD PTR [r14+0x40],rdx
  405be4:	mov    edx,DWORD PTR [r14+0x18]
  405be8:	mov    DWORD PTR [r14+0x48],edx
  405bec:	mov    rdx,QWORD PTR [r14]
  405bef:	mov    QWORD PTR [r14+0x30],rdx
  405bf3:	mov    edx,DWORD PTR [r14+0x8]
  405bf7:	mov    DWORD PTR [r14+0x38],edx
  405bfb:	lea    rdx,[r14+0x60]
  405bff:	mov    QWORD PTR [r13+0x10],rdx
  405c03:	mov    QWORD PTR [r13+0x30],r12
  405c07:	mov    edx,r9d
  405c0a:	shr    edx,0xe
  405c0d:	and    edx,0x1ff
  405c13:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  405c18:	mov    rdx,QWORD PTR [r13+0x28]
  405c1c:	mov    r15,QWORD PTR [r13+0x18]
  405c20:	mov    rax,QWORD PTR [rsp+0x8]
  405c25:	mov    rdx,QWORD PTR [rdx+0x10]
  405c29:	lea    rax,[r15+rax*1+0x30]
  405c2e:	mov    QWORD PTR [r13+0x10],rdx
  405c32:	mov    edx,DWORD PTR [rax+0x8]
  405c35:	test   edx,edx
  405c37:	je     405c51 <__sprintf_chk@plt+0x3671>
  405c39:	mov    rcx,QWORD PTR [rax]
  405c3c:	mov    DWORD PTR [rax-0x8],edx
  405c3f:	mov    QWORD PTR [rax-0x10],rcx
  405c43:	mov    eax,DWORD PTR [rbp+0x4]
  405c46:	shr    eax,0xe
  405c49:	lea    r12,[r12+rax*4-0x7fffc]
  405c51:	add    r12,0x4
  405c55:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405c5a:	nop    WORD PTR [rax+rax*1+0x0]
  405c60:	mov    ebp,r9d
  405c63:	shr    ebp,0x17
  405c66:	jne    406168 <__sprintf_chk@plt+0x3b88>
  405c6c:	cmp    QWORD PTR [r13+0x98],0x0
  405c74:	je     405c81 <__sprintf_chk@plt+0x36a1>
  405c76:	mov    rsi,r15
  405c79:	mov    rdi,r13
  405c7c:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  405c81:	mov    QWORD PTR [r13+0x30],r12
  405c85:	mov    rsi,r14
  405c88:	mov    rdi,r13
  405c8b:	call   402c00 <__sprintf_chk@plt+0x620>
  405c90:	dec    DWORD PTR [rsp+0x2c]
  405c94:	je     405037 <__sprintf_chk@plt+0x2a57>
  405c9a:	mov    rdx,QWORD PTR [r13+0x28]
  405c9e:	mov    r15,QWORD PTR [r13+0x18]
  405ca2:	test   eax,eax
  405ca4:	je     405cae <__sprintf_chk@plt+0x36ce>
  405ca6:	mov    rax,QWORD PTR [rdx+0x10]
  405caa:	mov    QWORD PTR [r13+0x10],rax
  405cae:	mov    r12,QWORD PTR [r13+0x30]
  405cb2:	jmp    40508f <__sprintf_chk@plt+0x2aaf>
  405cb7:	nop    WORD PTR [rax+rax*1+0x0]
  405cc0:	vmovsd xmm0,QWORD PTR [r14+0x20]
  405cc6:	vxorpd xmm3,xmm3,xmm3
  405cca:	vcomisd xmm0,xmm3
  405cce:	vaddsd xmm1,xmm0,QWORD PTR [r14]
  405cd3:	vmovsd xmm2,QWORD PTR [r14+0x10]
  405cd9:	jbe    4063f0 <__sprintf_chk@plt+0x3e10>
  405cdf:	vcomisd xmm2,xmm1
  405ce3:	setae  al
  405ce6:	test   al,al
  405ce8:	je     405190 <__sprintf_chk@plt+0x2bb0>
  405cee:	shr    r9d,0xe
  405cf2:	lea    r12,[r12+r9*4-0x7fffc]
  405cfa:	vmovsd QWORD PTR [r14],xmm1
  405cff:	mov    DWORD PTR [r14+0x8],0x3
  405d07:	vmovsd QWORD PTR [r14+0x30],xmm1
  405d0d:	mov    DWORD PTR [r14+0x38],0x3
  405d15:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405d1a:	nop    WORD PTR [rax+rax*1+0x0]
  405d20:	mov    edx,DWORD PTR [r14+0x8]
  405d24:	mov    eax,0x1
  405d29:	test   edx,edx
  405d2b:	jne    406148 <__sprintf_chk@plt+0x3b68>
  405d31:	shr    r9d,0xe
  405d35:	and    r9d,0x1ff
  405d3c:	cmp    r9d,eax
  405d3f:	je     405c51 <__sprintf_chk@plt+0x3671>
  405d45:	mov    eax,DWORD PTR [rbp+0x4]
  405d48:	shr    eax,0xe
  405d4b:	lea    r12,[r12+rax*4-0x7fffc]
  405d53:	add    r12,0x4
  405d57:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405d5c:	nop    DWORD PTR [rax+0x0]
  405d60:	mov    r14d,r9d
  405d63:	shr    r14d,0xe
  405d67:	mov    QWORD PTR [r13+0x30],r12
  405d6b:	test   r14d,0x100
  405d72:	jne    4060a8 <__sprintf_chk@plt+0x3ac8>
  405d78:	and    r14d,0x1ff
  405d7f:	shl    r14,0x4
  405d83:	shr    r9d,0x17
  405d87:	add    r14,r15
  405d8a:	test   r9d,0x100
  405d91:	je     4060c5 <__sprintf_chk@plt+0x3ae5>
  405d97:	movzx  r9d,r9b
  405d9b:	mov    rax,QWORD PTR [rsp]
  405d9f:	shl    r9,0x4
  405da3:	lea    r15,[rax+r9*1]
  405da7:	mov    esi,DWORD PTR [r15+0x8]
  405dab:	mov    edx,DWORD PTR [r14+0x8]
  405daf:	cmp    esi,edx
  405db1:	jne    4060df <__sprintf_chk@plt+0x3aff>
  405db7:	cmp    esi,0x3
  405dba:	je     406608 <__sprintf_chk@plt+0x4028>
  405dc0:	mov    DWORD PTR [rsp+0x8],r10d
  405dc5:	cmp    esi,0x4
  405dc8:	je     4067d0 <__sprintf_chk@plt+0x41f0>
  405dce:	mov    ecx,0xe
  405dd3:	mov    rdx,r14
  405dd6:	mov    rsi,r15
  405dd9:	mov    rdi,r13
  405ddc:	call   40b1d0 <__sprintf_chk@plt+0x8bf0>
  405de1:	cmp    eax,0xffffffff
  405de4:	mov    r10d,DWORD PTR [rsp+0x8]
  405de9:	jne    405fca <__sprintf_chk@plt+0x39ea>
  405def:	mov    ecx,0xd
  405df4:	mov    rdx,r15
  405df7:	mov    rsi,r14
  405dfa:	mov    rdi,r13
  405dfd:	call   40b1d0 <__sprintf_chk@plt+0x8bf0>
  405e02:	cmp    eax,0xffffffff
  405e05:	mov    r10d,DWORD PTR [rsp+0x8]
  405e0a:	je     406738 <__sprintf_chk@plt+0x4158>
  405e10:	test   eax,eax
  405e12:	sete   al
  405e15:	movzx  eax,al
  405e18:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  405e1d:	nop    DWORD PTR [rax]
  405e20:	mov    r15d,r9d
  405e23:	shr    r15d,0xe
  405e27:	and    r15d,0x1ff
  405e2e:	dec    r15d
  405e31:	shr    r9d,0x17
  405e35:	jne    406090 <__sprintf_chk@plt+0x3ab0>
  405e3b:	mov    QWORD PTR [r13+0x30],r12
  405e3f:	mov    edx,r15d
  405e42:	mov    rsi,r14
  405e45:	mov    rdi,r13
  405e48:	call   404c70 <__sprintf_chk@plt+0x2690>
  405e4d:	test   eax,eax
  405e4f:	je     406440 <__sprintf_chk@plt+0x3e60>
  405e55:	cmp    eax,0x1
  405e58:	jne    405037 <__sprintf_chk@plt+0x2a57>
  405e5e:	cmp    r15d,0xffffffff
  405e62:	je     405250 <__sprintf_chk@plt+0x2c70>
  405e68:	mov    rax,QWORD PTR [r13+0x28]
  405e6c:	mov    rax,QWORD PTR [rax+0x10]
  405e70:	mov    QWORD PTR [r13+0x10],rax
  405e74:	jmp    405250 <__sprintf_chk@plt+0x2c70>
  405e79:	nop    DWORD PTR [rax+0x0]
  405e80:	mov    eax,r9d
  405e83:	shr    eax,0x17
  405e86:	shl    rax,0x4
  405e8a:	add    rax,r15
  405e8d:	mov    edx,DWORD PTR [rax+0x8]
  405e90:	mov    ecx,0x1
  405e95:	test   edx,edx
  405e97:	jne    406070 <__sprintf_chk@plt+0x3a90>
  405e9d:	shr    r9d,0xe
  405ea1:	and    r9d,0x1ff
  405ea8:	cmp    r9d,ecx
  405eab:	je     405c51 <__sprintf_chk@plt+0x3671>
  405eb1:	mov    rax,QWORD PTR [rax]
  405eb4:	mov    DWORD PTR [r14+0x8],edx
  405eb8:	mov    QWORD PTR [r14],rax
  405ebb:	mov    eax,DWORD PTR [rbp+0x4]
  405ebe:	shr    eax,0xe
  405ec1:	lea    r12,[r12+rax*4-0x7fffc]
  405ec9:	add    r12,0x4
  405ecd:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405ed2:	nop    WORD PTR [rax+rax*1+0x0]
  405ed8:	shr    r9d,0x17
  405edc:	jne    406100 <__sprintf_chk@plt+0x3b20>
  405ee2:	mov    QWORD PTR [r13+0x30],r12
  405ee6:	mov    edx,0xffffffff
  405eeb:	mov    rsi,r14
  405eee:	mov    rdi,r13
  405ef1:	call   404c70 <__sprintf_chk@plt+0x2690>
  405ef6:	test   eax,eax
  405ef8:	je     406458 <__sprintf_chk@plt+0x3e78>
  405efe:	cmp    eax,0x1
  405f01:	je     405250 <__sprintf_chk@plt+0x2c70>
  405f07:	jmp    405037 <__sprintf_chk@plt+0x2a57>
  405f0c:	nop    DWORD PTR [rax+0x0]
  405f10:	mov    edx,r9d
  405f13:	shr    edx,0xe
  405f16:	mov    QWORD PTR [r13+0x30],r12
  405f1a:	test   dh,0x1
  405f1d:	je     406118 <__sprintf_chk@plt+0x3b38>
  405f23:	movzx  edx,dl
  405f26:	shl    rdx,0x4
  405f2a:	shr    r9d,0x17
  405f2e:	add    rdx,QWORD PTR [rsp]
  405f32:	test   r9d,0x100
  405f39:	je     406136 <__sprintf_chk@plt+0x3b56>
  405f3f:	movzx  esi,r9b
  405f43:	shl    rsi,0x4
  405f47:	add    rsi,QWORD PTR [rsp]
  405f4b:	mov    rdi,r13
  405f4e:	mov    DWORD PTR [rsp+0x8],r10d
  405f53:	call   40b290 <__sprintf_chk@plt+0x8cb0>
  405f58:	mov    r10d,DWORD PTR [rsp+0x8]
  405f5d:	cmp    r10d,eax
  405f60:	jne    405fcf <__sprintf_chk@plt+0x39ef>
  405f62:	mov    eax,DWORD PTR [rbp+0x4]
  405f65:	shr    eax,0xe
  405f68:	lea    r12,[r12+rax*4-0x7fffc]
  405f70:	jmp    405fcf <__sprintf_chk@plt+0x39ef>
  405f72:	nop    WORD PTR [rax+rax*1+0x0]
  405f78:	mov    r14d,r9d
  405f7b:	shr    r14d,0x17
  405f7f:	test   r14d,0x100
  405f86:	jne    406038 <__sprintf_chk@plt+0x3a58>
  405f8c:	movsxd r14,r14d
  405f8f:	shl    r14,0x4
  405f93:	shr    r9d,0xe
  405f97:	add    r14,r15
  405f9a:	test   r9d,0x100
  405fa1:	je     406055 <__sprintf_chk@plt+0x3a75>
  405fa7:	movzx  r9d,r9b
  405fab:	mov    r15,r9
  405fae:	shl    r15,0x4
  405fb2:	add    r15,QWORD PTR [rsp]
  405fb6:	mov    eax,DWORD PTR [r14+0x8]
  405fba:	mov    QWORD PTR [r13+0x30],r12
  405fbe:	cmp    eax,DWORD PTR [r15+0x8]
  405fc2:	je     4063d0 <__sprintf_chk@plt+0x3df0>
  405fc8:	xor    eax,eax
  405fca:	cmp    r10d,eax
  405fcd:	je     405f62 <__sprintf_chk@plt+0x3982>
  405fcf:	mov    r15,QWORD PTR [r13+0x18]
  405fd3:	add    r12,0x4
  405fd7:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  405fdc:	nop    DWORD PTR [rax+0x0]
  405fe0:	mov    rax,rdx
  405fe3:	nop    DWORD PTR [rax+rax*1+0x0]
  405fe8:	movzx  esi,BYTE PTR [rdx+0x9]
  405fec:	movzx  ecx,BYTE PTR [r15+0x20]
  405ff1:	andn   ecx,ecx,esi
  405ff6:	and    ecx,0x3
  405ff9:	je     405a46 <__sprintf_chk@plt+0x3466>
  405fff:	xor    esi,0x3
  406002:	mov    BYTE PTR [rdx+0x9],sil
  406006:	mov    r15,QWORD PTR [r8+0x20]
  40600a:	jmp    405a46 <__sprintf_chk@plt+0x3466>
  40600f:	nop
  406010:	mov    rdi,r13
  406013:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  406018:	jmp    40504e <__sprintf_chk@plt+0x2a6e>
  40601d:	nop    DWORD PTR [rax]
  406020:	and    esi,0x7
  406023:	add    esi,0x8
  406026:	dec    eax
  406028:	shlx   esi,esi,eax
  40602d:	jmp    4055cf <__sprintf_chk@plt+0x2fef>
  406032:	nop    WORD PTR [rax+rax*1+0x0]
  406038:	movzx  r14d,r14b
  40603c:	shl    r14,0x4
  406040:	shr    r9d,0xe
  406044:	add    r14,QWORD PTR [rsp]
  406048:	test   r9d,0x100
  40604f:	jne    405fa7 <__sprintf_chk@plt+0x39c7>
  406055:	and    r9d,0x1ff
  40605c:	shl    r9,0x4
  406060:	add    r15,r9
  406063:	jmp    405fb6 <__sprintf_chk@plt+0x39d6>
  406068:	nop    DWORD PTR [rax+rax*1+0x0]
  406070:	xor    ecx,ecx
  406072:	cmp    edx,0x1
  406075:	jne    405e9d <__sprintf_chk@plt+0x38bd>
  40607b:	mov    esi,DWORD PTR [rax]
  40607d:	xor    ecx,ecx
  40607f:	test   esi,esi
  406081:	sete   cl
  406084:	jmp    405e9d <__sprintf_chk@plt+0x38bd>
  406089:	nop    DWORD PTR [rax+0x0]
  406090:	mov    r9d,r9d
  406093:	shl    r9,0x4
  406097:	add    r9,r14
  40609a:	mov    QWORD PTR [r13+0x10],r9
  40609e:	jmp    405e3b <__sprintf_chk@plt+0x385b>
  4060a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4060a8:	movzx  r14d,r14b
  4060ac:	shl    r14,0x4
  4060b0:	shr    r9d,0x17
  4060b4:	add    r14,QWORD PTR [rsp]
  4060b8:	test   r9d,0x100
  4060bf:	jne    405d97 <__sprintf_chk@plt+0x37b7>
  4060c5:	movsxd r9,r9d
  4060c8:	shl    r9,0x4
  4060cc:	add    r15,r9
  4060cf:	mov    esi,DWORD PTR [r15+0x8]
  4060d3:	mov    edx,DWORD PTR [r14+0x8]
  4060d7:	cmp    esi,edx
  4060d9:	je     405db7 <__sprintf_chk@plt+0x37d7>
  4060df:	mov    rdi,r13
  4060e2:	mov    DWORD PTR [rsp+0x8],r10d
  4060e7:	call   409440 <__sprintf_chk@plt+0x6e60>
  4060ec:	mov    r10d,DWORD PTR [rsp+0x8]
  4060f1:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  4060f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406100:	mov    r9d,r9d
  406103:	shl    r9,0x4
  406107:	add    r9,r14
  40610a:	mov    QWORD PTR [r13+0x10],r9
  40610e:	jmp    405ee2 <__sprintf_chk@plt+0x3902>
  406113:	nop    DWORD PTR [rax+rax*1+0x0]
  406118:	and    edx,0x1ff
  40611e:	shl    rdx,0x4
  406122:	shr    r9d,0x17
  406126:	add    rdx,r15
  406129:	test   r9d,0x100
  406130:	jne    405f3f <__sprintf_chk@plt+0x395f>
  406136:	movsxd rsi,r9d
  406139:	shl    rsi,0x4
  40613d:	add    rsi,r15
  406140:	jmp    405f4b <__sprintf_chk@plt+0x396b>
  406145:	nop    DWORD PTR [rax]
  406148:	xor    eax,eax
  40614a:	cmp    edx,0x1
  40614d:	jne    405d31 <__sprintf_chk@plt+0x3751>
  406153:	mov    edi,DWORD PTR [r14]
  406156:	xor    eax,eax
  406158:	test   edi,edi
  40615a:	sete   al
  40615d:	jmp    405d31 <__sprintf_chk@plt+0x3751>
  406162:	nop    WORD PTR [rax+rax*1+0x0]
  406168:	mov    ebp,ebp
  40616a:	shl    rbp,0x4
  40616e:	lea    rax,[r14+rbp*1-0x10]
  406173:	mov    QWORD PTR [r13+0x10],rax
  406177:	jmp    405c6c <__sprintf_chk@plt+0x368c>
  40617c:	nop    DWORD PTR [rax+0x0]
  406180:	movzx  edx,dl
  406183:	shl    rdx,0x4
  406187:	add    rdx,QWORD PTR [rsp]
  40618b:	jmp    4056c8 <__sprintf_chk@plt+0x30e8>
  406190:	movzx  ecx,cl
  406193:	shl    rcx,0x4
  406197:	shr    r9d,0x17
  40619b:	add    rcx,QWORD PTR [rsp]
  40619f:	test   r9d,0x100
  4061a6:	jne    405641 <__sprintf_chk@plt+0x3061>
  4061ac:	movsxd rdx,r9d
  4061af:	shl    rdx,0x4
  4061b3:	add    rdx,r15
  4061b6:	jmp    40564d <__sprintf_chk@plt+0x306d>
  4061bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4061c0:	and    r9d,0x7
  4061c4:	dec    eax
  4061c6:	add    r9d,0x8
  4061ca:	shlx   edx,r9d,eax
  4061cf:	mov    eax,esi
  4061d1:	sar    eax,0x3
  4061d4:	and    eax,0x1f
  4061d7:	je     4055cf <__sprintf_chk@plt+0x2fef>
  4061dd:	jmp    406020 <__sprintf_chk@plt+0x3a40>
  4061e2:	nop    WORD PTR [rax+rax*1+0x0]
  4061e8:	movzx  edx,r9b
  4061ec:	shl    rdx,0x4
  4061f0:	add    rdx,QWORD PTR [rsp]
  4061f4:	jmp    405589 <__sprintf_chk@plt+0x2fa9>
  4061f9:	nop    DWORD PTR [rax+0x0]
  406200:	movzx  edx,dl
  406203:	shl    rdx,0x4
  406207:	shr    r9d,0xe
  40620b:	add    rdx,QWORD PTR [rsp]
  40620f:	test   r9d,0x100
  406216:	jne    40550a <__sprintf_chk@plt+0x2f2a>
  40621c:	and    r9d,0x1ff
  406223:	mov    rcx,r9
  406226:	shl    rcx,0x4
  40622a:	add    rcx,r15
  40622d:	jmp    405516 <__sprintf_chk@plt+0x2f36>
  406232:	nop    WORD PTR [rax+rax*1+0x0]
  406238:	movzx  edx,dl
  40623b:	shl    rdx,0x4
  40623f:	shr    r9d,0xe
  406243:	add    rdx,QWORD PTR [rsp]
  406247:	test   r9d,0x100
  40624e:	jne    4054a2 <__sprintf_chk@plt+0x2ec2>
  406254:	and    r9d,0x1ff
  40625b:	mov    rcx,r9
  40625e:	shl    rcx,0x4
  406262:	add    rcx,r15
  406265:	jmp    4054ae <__sprintf_chk@plt+0x2ece>
  40626a:	nop    WORD PTR [rax+rax*1+0x0]
  406270:	movzx  edx,dl
  406273:	shl    rdx,0x4
  406277:	shr    r9d,0xe
  40627b:	add    rdx,QWORD PTR [rsp]
  40627f:	test   r9d,0x100
  406286:	jne    40543a <__sprintf_chk@plt+0x2e5a>
  40628c:	and    r9d,0x1ff
  406293:	mov    rcx,r9
  406296:	shl    rcx,0x4
  40629a:	add    rcx,r15
  40629d:	jmp    405446 <__sprintf_chk@plt+0x2e66>
  4062a2:	nop    WORD PTR [rax+rax*1+0x0]
  4062a8:	movzx  edx,dl
  4062ab:	shl    rdx,0x4
  4062af:	shr    r9d,0xe
  4062b3:	add    rdx,QWORD PTR [rsp]
  4062b7:	test   r9d,0x100
  4062be:	jne    405302 <__sprintf_chk@plt+0x2d22>
  4062c4:	and    r9d,0x1ff
  4062cb:	mov    rcx,r9
  4062ce:	shl    rcx,0x4
  4062d2:	add    rcx,r15
  4062d5:	jmp    40530e <__sprintf_chk@plt+0x2d2e>
  4062da:	nop    WORD PTR [rax+rax*1+0x0]
  4062e0:	movzx  edx,dl
  4062e3:	shl    rdx,0x4
  4062e7:	shr    r9d,0xe
  4062eb:	add    rdx,QWORD PTR [rsp]
  4062ef:	test   r9d,0x100
  4062f6:	jne    4053d2 <__sprintf_chk@plt+0x2df2>
  4062fc:	and    r9d,0x1ff
  406303:	mov    rcx,r9
  406306:	shl    rcx,0x4
  40630a:	add    rcx,r15
  40630d:	jmp    4053de <__sprintf_chk@plt+0x2dfe>
  406312:	nop    WORD PTR [rax+rax*1+0x0]
  406318:	movsxd rdx,edx
  40631b:	shl    rdx,0x4
  40631f:	shr    r9d,0xe
  406323:	add    rdx,r15
  406326:	test   r9d,0x100
  40632d:	jne    40536b <__sprintf_chk@plt+0x2d8b>
  406333:	and    r9d,0x1ff
  40633a:	mov    rcx,r9
  40633d:	shl    rcx,0x4
  406341:	add    rcx,r15
  406344:	jmp    405377 <__sprintf_chk@plt+0x2d97>
  406349:	nop    DWORD PTR [rax+0x0]
  406350:	mov    rdi,QWORD PTR [rbp+0x0]
  406354:	call   403880 <__sprintf_chk@plt+0x12a0>
  406359:	vxorpd xmm0,xmm0,xmm0
  40635d:	vcvtsi2sd xmm0,xmm0,eax
  406361:	mov    DWORD PTR [r14+0x8],0x3
  406369:	vmovsd QWORD PTR [r14],xmm0
  40636e:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  406373:	nop    DWORD PTR [rax+rax*1+0x0]
  406378:	mov    QWORD PTR [r13+0x30],r12
  40637c:	mov    r8d,0xb
  406382:	mov    rcx,rdx
  406385:	mov    rsi,r14
  406388:	mov    rdi,r13
  40638b:	call   408330 <__sprintf_chk@plt+0x5d50>
  406390:	mov    r15,QWORD PTR [r13+0x18]
  406394:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  406399:	nop    DWORD PTR [rax+0x0]
  4063a0:	mov    esi,0x5
  4063a5:	call   404570 <__sprintf_chk@plt+0x1f90>
  4063aa:	nop    WORD PTR [rax+rax*1+0x0]
  4063b0:	lea    rsi,[rip+0x10c69]        # 417020 <__sprintf_chk@plt+0x14a40>
  4063b7:	xor    eax,eax
  4063b9:	mov    DWORD PTR [rsp],edx
  4063bc:	call   407190 <__sprintf_chk@plt+0x4bb0>
  4063c1:	mov    edx,DWORD PTR [rsp]
  4063c4:	jmp    405028 <__sprintf_chk@plt+0x2a48>
  4063c9:	nop    DWORD PTR [rax+0x0]
  4063d0:	cmp    eax,0x7
  4063d3:	ja     406760 <__sprintf_chk@plt+0x4180>
  4063d9:	lea    rdi,[rip+0x116b4]        # 417a94 <__sprintf_chk@plt+0x154b4>
  4063e0:	movsxd rax,DWORD PTR [rdi+rax*4]
  4063e4:	add    rax,rdi
  4063e7:	notrack jmp rax
  4063ea:	nop    WORD PTR [rax+rax*1+0x0]
  4063f0:	vcomisd xmm1,xmm2
  4063f4:	setae  al
  4063f7:	jmp    405ce6 <__sprintf_chk@plt+0x3706>
  4063fc:	nop    DWORD PTR [rax+0x0]
  406400:	mov    rdi,QWORD PTR [r13+0x38]
  406404:	mov    esi,ecx
  406406:	shl    esi,0x4
  406409:	sub    rdi,QWORD PTR [r13+0x10]
  40640d:	movsxd rsi,esi
  406410:	mov    QWORD PTR [r13+0x30],r12
  406414:	cmp    rdi,rsi
  406417:	jle    4067a0 <__sprintf_chk@plt+0x41c0>
  40641d:	mov    r15,QWORD PTR [r13+0x18]
  406421:	mov    r9d,ecx
  406424:	lea    r14,[r15+rax*1]
  406428:	movsxd rax,ecx
  40642b:	shl    rax,0x4
  40642f:	add    rax,r14
  406432:	mov    QWORD PTR [r13+0x10],rax
  406436:	jmp    40585d <__sprintf_chk@plt+0x327d>
  40643b:	nop    DWORD PTR [rax+rax*1+0x0]
  406440:	inc    DWORD PTR [rsp+0x2c]
  406444:	mov    rdx,QWORD PTR [r13+0x28]
  406448:	mov    r15,QWORD PTR [r13+0x18]
  40644c:	mov    r12,QWORD PTR [r13+0x30]
  406450:	jmp    40508f <__sprintf_chk@plt+0x2aaf>
  406455:	nop    DWORD PTR [rax]
  406458:	mov    rbx,QWORD PTR [r13+0x28]
  40645c:	cmp    QWORD PTR [r13+0x98],0x0
  406464:	mov    r12,QWORD PTR [rbx-0x20]
  406468:	mov    rbp,rbx
  40646b:	mov    r14,QWORD PTR [rbx+0x8]
  40646f:	mov    rdx,r12
  406472:	je     406488 <__sprintf_chk@plt+0x3ea8>
  406474:	mov    rsi,QWORD PTR [rbx-0x28]
  406478:	mov    rdi,r13
  40647b:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  406480:	mov    rdx,QWORD PTR [rbx-0x20]
  406484:	mov    rbx,QWORD PTR [r13+0x28]
  406488:	mov    rax,QWORD PTR [rbp+0x0]
  40648c:	sub    rax,r14
  40648f:	lea    r15,[rdx+rax*1]
  406493:	mov    rdx,QWORD PTR [r13+0x10]
  406497:	mov    QWORD PTR [rbp-0x28],r15
  40649b:	mov    QWORD PTR [r13+0x18],r15
  40649f:	cmp    r14,rdx
  4064a2:	jae    4064d9 <__sprintf_chk@plt+0x3ef9>
  4064a4:	lea    rcx,[r12+0x8]
  4064a9:	mov    rax,r14
  4064ac:	nop    DWORD PTR [rax+0x0]
  4064b0:	mov    rsi,QWORD PTR [rax]
  4064b3:	add    rax,0x10
  4064b7:	mov    QWORD PTR [rcx-0x8],rsi
  4064bb:	add    rcx,0x10
  4064bf:	mov    esi,DWORD PTR [rax-0x8]
  4064c2:	mov    DWORD PTR [rcx-0x10],esi
  4064c5:	cmp    rdx,rax
  4064c8:	ja     4064b0 <__sprintf_chk@plt+0x3ed0>
  4064ca:	dec    rdx
  4064cd:	sub    rdx,r14
  4064d0:	and    rdx,0xfffffffffffffff0
  4064d4:	lea    r12,[r12+rdx*1+0x10]
  4064d9:	mov    QWORD PTR [r13+0x10],r12
  4064dd:	mov    QWORD PTR [rbp-0x18],r12
  4064e1:	mov    r12,QWORD PTR [r13+0x30]
  4064e5:	lea    rdx,[rbx-0x28]
  4064e9:	mov    QWORD PTR [rbp-0x10],r12
  4064ed:	inc    DWORD PTR [rbp-0x4]
  4064f0:	mov    QWORD PTR [r13+0x28],rdx
  4064f4:	jmp    40508f <__sprintf_chk@plt+0x2aaf>
  4064f9:	nop    DWORD PTR [rax+0x0]
  406500:	mov    rax,QWORD PTR [rbp+0x0]
  406504:	mov    rax,QWORD PTR [rax+0x10]
  406508:	test   rax,rax
  40650b:	js     406620 <__sprintf_chk@plt+0x4040>
  406511:	vxorpd xmm0,xmm0,xmm0
  406515:	vcvtsi2sd xmm0,xmm0,rax
  40651a:	vmovsd QWORD PTR [r14],xmm0
  40651f:	mov    DWORD PTR [r14+0x8],0x3
  406527:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40652c:	nop    DWORD PTR [rax+0x0]
  406530:	mov    rdi,r13
  406533:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  406538:	mov    rax,QWORD PTR [rsp+0x8]
  40653d:	jmp    4051e2 <__sprintf_chk@plt+0x2c02>
  406542:	nop    WORD PTR [rax+rax*1+0x0]
  406548:	mov    rbx,QWORD PTR [rsp+0x48]
  40654d:	jmp    4059ea <__sprintf_chk@plt+0x340a>
  406552:	nop    WORD PTR [rax+rax*1+0x0]
  406558:	vmovsd xmm0,QWORD PTR [rdx]
  40655c:	vdivsd xmm0,xmm0,QWORD PTR [rcx]
  406560:	mov    DWORD PTR [r14+0x8],0x3
  406568:	vmovsd QWORD PTR [r14],xmm0
  40656d:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  406572:	nop    WORD PTR [rax+rax*1+0x0]
  406578:	vmovsd xmm2,QWORD PTR [rdx]
  40657c:	vmovsd xmm0,QWORD PTR [rcx]
  406580:	mov    DWORD PTR [r14+0x8],0x3
  406588:	vdivsd xmm1,xmm2,xmm0
  40658c:	vroundsd xmm1,xmm1,xmm1,0x9
  406592:	vfnmadd132sd xmm0,xmm2,xmm1
  406597:	vmovsd QWORD PTR [r14],xmm0
  40659c:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4065a1:	nop    DWORD PTR [rax+0x0]
  4065a8:	vmovsd xmm0,QWORD PTR [rdx]
  4065ac:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  4065b0:	mov    DWORD PTR [r14+0x8],0x3
  4065b8:	vmovsd QWORD PTR [r14],xmm0
  4065bd:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4065c2:	nop    WORD PTR [rax+rax*1+0x0]
  4065c8:	vmovsd xmm0,QWORD PTR [rdx]
  4065cc:	vsubsd xmm0,xmm0,QWORD PTR [rcx]
  4065d0:	mov    DWORD PTR [r14+0x8],0x3
  4065d8:	vmovsd QWORD PTR [r14],xmm0
  4065dd:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  4065e2:	nop    WORD PTR [rax+rax*1+0x0]
  4065e8:	vmovsd xmm0,QWORD PTR [rdx]
  4065ec:	vmulsd xmm0,xmm0,QWORD PTR [rcx]
  4065f0:	mov    DWORD PTR [r14+0x8],0x3
  4065f8:	vmovsd QWORD PTR [r14],xmm0
  4065fd:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  406602:	nop    WORD PTR [rax+rax*1+0x0]
  406608:	vmovsd xmm0,QWORD PTR [r14]
  40660d:	vcomisd xmm0,QWORD PTR [r15]
  406612:	setae  al
  406615:	movzx  eax,al
  406618:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  40661d:	nop    DWORD PTR [rax]
  406620:	mov    rdx,rax
  406623:	shr    rdx,1
  406626:	and    eax,0x1
  406629:	or     rdx,rax
  40662c:	vxorpd xmm0,xmm0,xmm0
  406630:	vcvtsi2sd xmm0,xmm0,rdx
  406635:	vaddsd xmm0,xmm0,xmm0
  406639:	jmp    40651a <__sprintf_chk@plt+0x3f3a>
  40663e:	xchg   ax,ax
  406640:	movsxd rdx,DWORD PTR [rbp+0x8]
  406644:	lea    rax,[rip+0x18755]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40664b:	mov    rcx,QWORD PTR [rax+rdx*8]
  40664f:	lea    rsi,[rip+0x109b1]        # 417007 <__sprintf_chk@plt+0x14a27>
  406656:	lea    rdx,[rip+0x109d4]        # 417031 <__sprintf_chk@plt+0x14a51>
  40665d:	mov    rdi,r13
  406660:	xor    eax,eax
  406662:	call   407190 <__sprintf_chk@plt+0x4bb0>
  406667:	jmp    405250 <__sprintf_chk@plt+0x2c70>
  40666c:	nop    DWORD PTR [rax+0x0]
  406670:	lea    rsi,[rip+0x119a9]        # 418020 <__sprintf_chk@plt+0x15a40>
  406677:	mov    rdi,r13
  40667a:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40667f:	mov    r9d,DWORD PTR [rsp+0x8]
  406684:	jmp    40516b <__sprintf_chk@plt+0x2b8b>
  406689:	nop    DWORD PTR [rax+0x0]
  406690:	lea    rsi,[rip+0x109a8]        # 41703f <__sprintf_chk@plt+0x14a5f>
  406697:	mov    rdi,r13
  40669a:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40669f:	mov    r9d,DWORD PTR [rsp+0x8]
  4066a4:	jmp    40516b <__sprintf_chk@plt+0x2b8b>
  4066a9:	nop    DWORD PTR [rax+0x0]
  4066b0:	mov    rax,QWORD PTR [r14]
  4066b3:	mov    rdx,QWORD PTR [r15]
  4066b6:	cmp    rax,rdx
  4066b9:	je     406728 <__sprintf_chk@plt+0x4148>
  4066bb:	mov    rdx,QWORD PTR [rdx+0x10]
  4066bf:	mov    rsi,QWORD PTR [rax+0x10]
  4066c3:	lea    rdi,[r13+0x20]
  4066c7:	mov    DWORD PTR [rsp+0x8],r10d
  4066cc:	call   4040d0 <__sprintf_chk@plt+0x1af0>
  4066d1:	mov    r10d,DWORD PTR [rsp+0x8]
  4066d6:	test   rax,rax
  4066d9:	je     405fc8 <__sprintf_chk@plt+0x39e8>
  4066df:	lea    rdx,[r15+0x8]
  4066e3:	mov    DWORD PTR [rsp+0x8],r10d
  4066e8:	mov    ecx,DWORD PTR [rax+0x8]
  4066eb:	mov    rsi,QWORD PTR [r13+0x10]
  4066ef:	push   rdx
  4066f0:	lea    r9,[r14+0x8]
  4066f4:	mov    r8,r14
  4066f7:	push   r15
  4066f9:	mov    rdi,r13
  4066fc:	mov    rdx,QWORD PTR [rax]
  4066ff:	call   406890 <__sprintf_chk@plt+0x42b0>
  406704:	mov    rdx,QWORD PTR [r13+0x10]
  406708:	pop    r9
  40670a:	mov    eax,DWORD PTR [rdx+0x8]
  40670d:	pop    r10
  40670f:	test   eax,eax
  406711:	mov    r10d,DWORD PTR [rsp+0x8]
  406716:	je     405fc8 <__sprintf_chk@plt+0x39e8>
  40671c:	cmp    eax,0x1
  40671f:	je     40686d <__sprintf_chk@plt+0x428d>
  406725:	nop    DWORD PTR [rax]
  406728:	mov    eax,0x1
  40672d:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  406732:	nop    WORD PTR [rax+rax*1+0x0]
  406738:	mov    edx,DWORD PTR [r14+0x8]
  40673c:	mov    esi,DWORD PTR [r15+0x8]
  406740:	mov    rdi,r13
  406743:	mov    DWORD PTR [rsp+0x8],r10d
  406748:	call   409440 <__sprintf_chk@plt+0x6e60>
  40674d:	mov    r10d,DWORD PTR [rsp+0x8]
  406752:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  406757:	nop    WORD PTR [rax+rax*1+0x0]
  406760:	mov    rax,QWORD PTR [r15]
  406763:	cmp    QWORD PTR [r14],rax
  406766:	sete   al
  406769:	jmp    406615 <__sprintf_chk@plt+0x4035>
  40676e:	xchg   ax,ax
  406770:	vmovsd xmm0,QWORD PTR [r14]
  406775:	mov    edx,0x0
  40677a:	vucomisd xmm0,QWORD PTR [r15]
  40677f:	setnp  al
  406782:	cmovne eax,edx
  406785:	jmp    406615 <__sprintf_chk@plt+0x4035>
  40678a:	nop    WORD PTR [rax+rax*1+0x0]
  406790:	mov    eax,DWORD PTR [r15]
  406793:	cmp    DWORD PTR [r14],eax
  406796:	sete   al
  406799:	jmp    406615 <__sprintf_chk@plt+0x4035>
  40679e:	xchg   ax,ax
  4067a0:	mov    esi,ecx
  4067a2:	mov    rdi,r13
  4067a5:	mov    QWORD PTR [rsp+0x18],rdx
  4067aa:	mov    QWORD PTR [rsp+0x10],rax
  4067af:	mov    DWORD PTR [rsp+0x8],ecx
  4067b3:	call   408180 <__sprintf_chk@plt+0x5ba0>
  4067b8:	mov    rdx,QWORD PTR [rsp+0x18]
  4067bd:	mov    rax,QWORD PTR [rsp+0x10]
  4067c2:	mov    ecx,DWORD PTR [rsp+0x8]
  4067c6:	jmp    40641d <__sprintf_chk@plt+0x3e3d>
  4067cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4067d0:	mov    rsi,QWORD PTR [r14]
  4067d3:	mov    rdi,QWORD PTR [r15]
  4067d6:	call   403260 <__sprintf_chk@plt+0xc80>
  4067db:	test   eax,eax
  4067dd:	setle  al
  4067e0:	movzx  eax,al
  4067e3:	mov    r10d,DWORD PTR [rsp+0x8]
  4067e8:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  4067ed:	nop    DWORD PTR [rax]
  4067f0:	mov    r8,QWORD PTR [r13+0x20]
  4067f4:	jmp    405a7a <__sprintf_chk@plt+0x349a>
  4067f9:	nop    DWORD PTR [rax+0x0]
  406800:	vmovsd xmm1,QWORD PTR [rcx]
  406804:	vmovsd xmm0,QWORD PTR [rdx]
  406808:	call   4023b0 <pow@plt>
  40680d:	vmovsd QWORD PTR [r14],xmm0
  406812:	mov    DWORD PTR [r14+0x8],0x3
  40681a:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40681f:	nop
  406820:	lea    rsi,[rip+0x11779]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  406827:	xor    ecx,ecx
  406829:	cmp    QWORD PTR [rdi+0x20],rsi
  40682d:	je     40683d <__sprintf_chk@plt+0x425d>
  40682f:	movzx  edx,BYTE PTR [rdi+0xb]
  406833:	mov    ecx,0x1
  406838:	shlx   rcx,rcx,rdx
  40683d:	mov    rsi,QWORD PTR [rsp+0x8]
  406842:	mov    edx,eax
  406844:	mov    rdi,r13
  406847:	mov    DWORD PTR [rsp+0x20],r9d
  40684c:	mov    DWORD PTR [rsp+0x18],eax
  406850:	call   408a30 <__sprintf_chk@plt+0x6450>
  406855:	mov    eax,DWORD PTR [rsp+0x18]
  406859:	mov    r9d,DWORD PTR [rsp+0x20]
  40685e:	jmp    405b1f <__sprintf_chk@plt+0x353f>
  406863:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  406868:	jmp    405190 <__sprintf_chk@plt+0x2bb0>
  40686d:	mov    r8d,DWORD PTR [rdx]
  406870:	xor    eax,eax
  406872:	test   r8d,r8d
  406875:	setne  al
  406878:	jmp    405fca <__sprintf_chk@plt+0x39ea>
  40687d:	call   4023e0 <__stack_chk_fail@plt>
  406882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40688d:	nop    DWORD PTR [rax]
  406890:	push   rbp
  406891:	push   rbx
  406892:	mov    rbx,rdi
  406895:	sub    rsp,0x8
  406899:	sub    rsi,QWORD PTR [rdi+0x40]
  40689d:	mov    rbp,rsi
  4068a0:	mov    rsi,QWORD PTR [rdi+0x10]
  4068a4:	mov    QWORD PTR [rsi],rdx
  4068a7:	mov    DWORD PTR [rsi+0x8],ecx
  4068aa:	mov    rax,QWORD PTR [r8]
  4068ad:	mov    QWORD PTR [rsi+0x10],rax
  4068b1:	mov    eax,DWORD PTR [r9]
  4068b4:	mov    DWORD PTR [rsi+0x18],eax
  4068b7:	mov    rax,QWORD PTR [rsp+0x20]
  4068bc:	mov    rax,QWORD PTR [rax]
  4068bf:	mov    QWORD PTR [rsi+0x20],rax
  4068c3:	mov    rax,QWORD PTR [rsp+0x28]
  4068c8:	mov    eax,DWORD PTR [rax]
  4068ca:	mov    DWORD PTR [rsi+0x28],eax
  4068cd:	mov    rax,QWORD PTR [rdi+0x38]
  4068d1:	sub    rax,rsi
  4068d4:	cmp    rax,0x30
  4068d8:	jle    406920 <__sprintf_chk@plt+0x4340>
  4068da:	lea    rax,[rsi+0x30]
  4068de:	mov    QWORD PTR [rbx+0x10],rax
  4068e2:	mov    edx,0x1
  4068e7:	mov    rdi,rbx
  4068ea:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  4068ef:	mov    rax,QWORD PTR [rbx+0x10]
  4068f3:	mov    rsi,QWORD PTR [rbx+0x40]
  4068f7:	lea    rdx,[rax-0x10]
  4068fb:	mov    QWORD PTR [rbx+0x10],rdx
  4068ff:	mov    rdx,QWORD PTR [rax-0x10]
  406903:	mov    eax,DWORD PTR [rax-0x8]
  406906:	add    rsi,rbp
  406909:	mov    QWORD PTR [rsi],rdx
  40690c:	mov    DWORD PTR [rsi+0x8],eax
  40690f:	add    rsp,0x8
  406913:	pop    rbx
  406914:	pop    rbp
  406915:	ret    
  406916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406920:	mov    esi,0x3
  406925:	call   408180 <__sprintf_chk@plt+0x5ba0>
  40692a:	mov    rsi,QWORD PTR [rbx+0x10]
  40692e:	jmp    4068da <__sprintf_chk@plt+0x42fa>
  406930:	push   rbp
  406931:	mov    r10,rsi
  406934:	mov    r9,rdx
  406937:	push   rbx
  406938:	lea    r11,[rdi+0x20]
  40693c:	mov    rbx,rdi
  40693f:	sub    rsp,0x8
  406943:	mov    edx,DWORD PTR [rsi+0x8]
  406946:	mov    rsi,QWORD PTR [rsi]
  406949:	mov    rbp,rcx
  40694c:	mov    rdi,r11
  40694f:	mov    ecx,r8d
  406952:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  406957:	mov    ecx,DWORD PTR [rax+0x8]
  40695a:	test   ecx,ecx
  40695c:	je     406990 <__sprintf_chk@plt+0x43b0>
  40695e:	lea    rdx,[r9+0x8]
  406962:	push   rdx
  406963:	mov    rsi,rbp
  406966:	mov    rdi,rbx
  406969:	push   r9
  40696b:	mov    r8,r10
  40696e:	lea    r9,[r10+0x8]
  406972:	mov    rdx,QWORD PTR [rax]
  406975:	call   406890 <__sprintf_chk@plt+0x42b0>
  40697a:	pop    rax
  40697b:	pop    rdx
  40697c:	add    rsp,0x8
  406980:	mov    ecx,0x1
  406985:	pop    rbx
  406986:	mov    eax,ecx
  406988:	pop    rbp
  406989:	ret    
  40698a:	nop    WORD PTR [rax+rax*1+0x0]
  406990:	mov    edx,DWORD PTR [r9+0x8]
  406994:	mov    rsi,QWORD PTR [r9]
  406997:	mov    ecx,r8d
  40699a:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  40699f:	mov    ecx,DWORD PTR [rax+0x8]
  4069a2:	test   ecx,ecx
  4069a4:	jne    40695e <__sprintf_chk@plt+0x437e>
  4069a6:	add    rsp,0x8
  4069aa:	pop    rbx
  4069ab:	mov    eax,ecx
  4069ad:	pop    rbp
  4069ae:	ret    
  4069af:	nop
  4069b0:	push   r15
  4069b2:	push   r14
  4069b4:	push   r13
  4069b6:	push   r12
  4069b8:	mov    r12,rdi
  4069bb:	push   rbp
  4069bc:	mov    ebp,edx
  4069be:	push   rbx
  4069bf:	mov    ebx,esi
  4069c1:	sub    rsp,0x38
  4069c5:	jmp    406a3a <__sprintf_chk@plt+0x445a>
  4069c7:	nop    WORD PTR [rax+rax*1+0x0]
  4069d0:	lea    r14,[r15-0x10]
  4069d4:	cmp    eax,0x3
  4069d7:	je     406aa8 <__sprintf_chk@plt+0x44c8>
  4069dd:	lea    r13,[r15-0x20]
  4069e1:	mov    r8d,0xf
  4069e7:	mov    rcx,r13
  4069ea:	mov    rdx,r14
  4069ed:	mov    rsi,r13
  4069f0:	mov    rdi,r12
  4069f3:	call   406930 <__sprintf_chk@plt+0x4350>
  4069f8:	dec    ebx
  4069fa:	dec    ebp
  4069fc:	test   eax,eax
  4069fe:	jne    406a35 <__sprintf_chk@plt+0x4455>
  406a00:	mov    eax,DWORD PTR [r15-0x18]
  406a04:	lea    rdx,[rip+0x18395]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  406a0b:	sub    eax,0x3
  406a0e:	cmp    eax,0x1
  406a11:	cmovbe r13,r14
  406a15:	lea    rsi,[rip+0x105eb]        # 417007 <__sprintf_chk@plt+0x14a27>
  406a1c:	movsxd rax,DWORD PTR [r13+0x8]
  406a20:	mov    rdi,r12
  406a23:	mov    rcx,QWORD PTR [rdx+rax*8]
  406a27:	lea    rdx,[rip+0x1064a]        # 417078 <__sprintf_chk@plt+0x14a98>
  406a2e:	xor    eax,eax
  406a30:	call   407190 <__sprintf_chk@plt+0x4bb0>
  406a35:	cmp    ebx,0x1
  406a38:	jle    406a96 <__sprintf_chk@plt+0x44b6>
  406a3a:	movsxd r9,ebp
  406a3d:	inc    r9
  406a40:	mov    r15,QWORD PTR [r12+0x18]
  406a45:	shl    r9,0x4
  406a49:	add    r15,r9
  406a4c:	mov    eax,DWORD PTR [r15-0x18]
  406a50:	lea    r14,[r15-0x10]
  406a54:	sub    eax,0x3
  406a57:	cmp    eax,0x1
  406a5a:	ja     4069dd <__sprintf_chk@plt+0x43fd>
  406a5c:	mov    eax,DWORD PTR [r15-0x8]
  406a60:	cmp    eax,0x4
  406a63:	jne    4069d0 <__sprintf_chk@plt+0x43f0>
  406a69:	mov    rax,QWORD PTR [r15-0x10]
  406a6d:	mov    r14,QWORD PTR [rax+0x10]
  406a71:	test   r14,r14
  406a74:	jne    406ad0 <__sprintf_chk@plt+0x44f0>
  406a76:	dec    ebx
  406a78:	dec    ebp
  406a7a:	cmp    DWORD PTR [r15-0x18],0x3
  406a7f:	jne    406a35 <__sprintf_chk@plt+0x4455>
  406a81:	lea    rdx,[r15-0x18]
  406a85:	lea    rsi,[r15-0x20]
  406a89:	mov    rdi,r12
  406a8c:	call   407840 <__sprintf_chk@plt+0x5260>
  406a91:	cmp    ebx,0x1
  406a94:	jg     406a3a <__sprintf_chk@plt+0x445a>
  406a96:	add    rsp,0x38
  406a9a:	pop    rbx
  406a9b:	pop    rbp
  406a9c:	pop    r12
  406a9e:	pop    r13
  406aa0:	pop    r14
  406aa2:	pop    r15
  406aa4:	ret    
  406aa5:	nop    DWORD PTR [rax]
  406aa8:	lea    rdx,[r15-0x8]
  406aac:	mov    rsi,r14
  406aaf:	mov    rdi,r12
  406ab2:	call   407840 <__sprintf_chk@plt+0x5260>
  406ab7:	test   eax,eax
  406ab9:	je     4069dd <__sprintf_chk@plt+0x43fd>
  406abf:	mov    rax,QWORD PTR [r15-0x10]
  406ac3:	mov    r14,QWORD PTR [rax+0x10]
  406ac7:	test   r14,r14
  406aca:	je     406a76 <__sprintf_chk@plt+0x4496>
  406acc:	nop    DWORD PTR [rax+0x0]
  406ad0:	cmp    ebx,0x1
  406ad3:	jle    406d58 <__sprintf_chk@plt+0x4778>
  406ad9:	lea    ecx,[rbx-0x2]
  406adc:	lea    r9,[r15-0x20]
  406ae0:	add    rcx,0x2
  406ae4:	mov    r13d,0x1
  406aea:	mov    eax,DWORD PTR [r9+0x8]
  406aee:	mov    r11,r13
  406af1:	mov    r8d,r13d
  406af4:	movsxd r10,r13d
  406af7:	shl    r11,0x4
  406afb:	cmp    eax,0x4
  406afe:	je     406c81 <__sprintf_chk@plt+0x46a1>
  406b04:	cmp    eax,0x3
  406b07:	je     406c38 <__sprintf_chk@plt+0x4658>
  406b0d:	neg    r11
  406b10:	mov    QWORD PTR [rsp+0x28],r11
  406b15:	lea    r8d,[r10-0x1]
  406b19:	sub    ebx,r8d
  406b1c:	sub    ebp,r8d
  406b1f:	mov    r11,QWORD PTR [r12+0x20]
  406b24:	mov    rdx,QWORD PTR [r11+0x68]
  406b28:	cmp    r14,rdx
  406b2b:	ja     406bd0 <__sprintf_chk@plt+0x45f0>
  406b31:	mov    rax,QWORD PTR [r11+0x58]
  406b35:	mov    QWORD PTR [rsp+0x8],rax
  406b3a:	mov    rax,r10
  406b3d:	sub    r8,r10
  406b40:	shl    rax,0x4
  406b44:	mov    r14,r15
  406b47:	shl    r8,0x4
  406b4b:	mov    QWORD PTR [rsp+0x10],r12
  406b50:	sub    r14,rax
  406b53:	xor    ecx,ecx
  406b55:	lea    rax,[r15+r8*1+0x10]
  406b5a:	mov    r13,QWORD PTR [rsp+0x8]
  406b5f:	mov    DWORD PTR [rsp+0x18],ebx
  406b63:	mov    DWORD PTR [rsp+0x24],ebp
  406b67:	mov    rbx,rcx
  406b6a:	mov    rbp,r14
  406b6d:	mov    r14,rax
  406b70:	mov    rsi,QWORD PTR [rbp+0x0]
  406b74:	lea    rdi,[r13+rbx*1+0x0]
  406b79:	mov    r12,QWORD PTR [rsi+0x10]
  406b7d:	add    rbp,0x10
  406b81:	add    rsi,0x18
  406b85:	mov    rdx,r12
  406b88:	call   4024a0 <memcpy@plt>
  406b8d:	add    rbx,r12
  406b90:	cmp    r14,rbp
  406b93:	jne    406b70 <__sprintf_chk@plt+0x4590>
  406b95:	mov    r12,QWORD PTR [rsp+0x10]
  406b9a:	mov    rcx,rbx
  406b9d:	mov    r13,QWORD PTR [rsp+0x28]
  406ba2:	mov    rsi,QWORD PTR [rsp+0x8]
  406ba7:	mov    rdx,rcx
  406baa:	mov    rdi,r12
  406bad:	add    r13,r15
  406bb0:	mov    ebx,DWORD PTR [rsp+0x18]
  406bb4:	mov    ebp,DWORD PTR [rsp+0x24]
  406bb8:	call   407490 <__sprintf_chk@plt+0x4eb0>
  406bbd:	mov    QWORD PTR [r13+0x0],rax
  406bc1:	mov    DWORD PTR [r13+0x8],0x4
  406bc9:	jmp    406a35 <__sprintf_chk@plt+0x4455>
  406bce:	xchg   ax,ax
  406bd0:	cmp    r14,0x1f
  406bd4:	jbe    406cd0 <__sprintf_chk@plt+0x46f0>
  406bda:	lea    rax,[r14+0x1]
  406bde:	cmp    rax,0xfffffffffffffffd
  406be2:	jbe    406cd6 <__sprintf_chk@plt+0x46f6>
  406be8:	lea    rsi,[rip+0x11459]        # 418048 <__sprintf_chk@plt+0x15a68>
  406bef:	mov    rdi,r12
  406bf2:	xor    eax,eax
  406bf4:	mov    DWORD PTR [rsp+0x24],r8d
  406bf9:	mov    DWORD PTR [rsp+0x18],r10d
  406bfe:	mov    QWORD PTR [rsp+0x10],r11
  406c03:	call   407190 <__sprintf_chk@plt+0x4bb0>
  406c08:	mov    QWORD PTR [rsp+0x8],0x0
  406c11:	mov    r8d,DWORD PTR [rsp+0x24]
  406c16:	movsxd r10,DWORD PTR [rsp+0x18]
  406c1b:	mov    r11,QWORD PTR [rsp+0x10]
  406c20:	mov    rax,QWORD PTR [rsp+0x8]
  406c25:	mov    QWORD PTR [r11+0x68],r14
  406c29:	mov    QWORD PTR [r11+0x58],rax
  406c2d:	jmp    406b3a <__sprintf_chk@plt+0x455a>
  406c32:	nop    WORD PTR [rax+rax*1+0x0]
  406c38:	lea    rdx,[r9+0x8]
  406c3c:	mov    rsi,r9
  406c3f:	mov    rdi,r12
  406c42:	mov    DWORD PTR [rsp+0x28],r8d
  406c47:	mov    DWORD PTR [rsp+0x24],r10d
  406c4c:	mov    QWORD PTR [rsp+0x18],r11
  406c51:	mov    QWORD PTR [rsp+0x10],rcx
  406c56:	mov    QWORD PTR [rsp+0x8],r9
  406c5b:	call   407840 <__sprintf_chk@plt+0x5260>
  406c60:	test   eax,eax
  406c62:	mov    r9,QWORD PTR [rsp+0x8]
  406c67:	mov    rcx,QWORD PTR [rsp+0x10]
  406c6c:	mov    r11,QWORD PTR [rsp+0x18]
  406c71:	movsxd r10,DWORD PTR [rsp+0x24]
  406c76:	mov    r8d,DWORD PTR [rsp+0x28]
  406c7b:	je     406b0d <__sprintf_chk@plt+0x452d>
  406c81:	mov    rax,QWORD PTR [r9]
  406c84:	mov    rdx,QWORD PTR [rax+0x10]
  406c88:	mov    rax,0xfffffffffffffffd
  406c8f:	sub    rax,r14
  406c92:	cmp    rax,rdx
  406c95:	jbe    406d10 <__sprintf_chk@plt+0x4730>
  406c97:	inc    r13
  406c9a:	add    r14,rdx
  406c9d:	lea    eax,[r8+0x1]
  406ca1:	sub    r9,0x10
  406ca5:	cmp    rcx,r13
  406ca8:	jne    406aea <__sprintf_chk@plt+0x450a>
  406cae:	movsxd rdx,eax
  406cb1:	shl    rdx,0x4
  406cb5:	neg    rdx
  406cb8:	sub    ebx,r10d
  406cbb:	sub    ebp,r10d
  406cbe:	mov    QWORD PTR [rsp+0x28],rdx
  406cc3:	movsxd r10,eax
  406cc6:	jmp    406b1f <__sprintf_chk@plt+0x453f>
  406ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cd0:	mov    r14d,0x20
  406cd6:	mov    rsi,QWORD PTR [r11+0x58]
  406cda:	mov    rcx,r14
  406cdd:	mov    rdi,r12
  406ce0:	mov    DWORD PTR [rsp+0x24],r8d
  406ce5:	mov    DWORD PTR [rsp+0x18],r10d
  406cea:	mov    QWORD PTR [rsp+0x10],r11
  406cef:	call   404640 <__sprintf_chk@plt+0x2060>
  406cf4:	mov    QWORD PTR [rsp+0x8],rax
  406cf9:	mov    r11,QWORD PTR [rsp+0x10]
  406cfe:	movsxd r10,DWORD PTR [rsp+0x18]
  406d03:	mov    r8d,DWORD PTR [rsp+0x24]
  406d08:	jmp    406c20 <__sprintf_chk@plt+0x4640>
  406d0d:	nop    DWORD PTR [rax]
  406d10:	lea    rsi,[rip+0x1036d]        # 417084 <__sprintf_chk@plt+0x14aa4>
  406d17:	mov    rdi,r12
  406d1a:	xor    eax,eax
  406d1c:	mov    DWORD PTR [rsp+0x28],r8d
  406d21:	mov    DWORD PTR [rsp+0x24],r10d
  406d26:	mov    QWORD PTR [rsp+0x18],r9
  406d2b:	mov    QWORD PTR [rsp+0x10],rcx
  406d30:	mov    QWORD PTR [rsp+0x8],rdx
  406d35:	call   407190 <__sprintf_chk@plt+0x4bb0>
  406d3a:	mov    r8d,DWORD PTR [rsp+0x28]
  406d3f:	mov    r10d,DWORD PTR [rsp+0x24]
  406d44:	mov    r9,QWORD PTR [rsp+0x18]
  406d49:	mov    rcx,QWORD PTR [rsp+0x10]
  406d4e:	mov    rdx,QWORD PTR [rsp+0x8]
  406d53:	jmp    406c97 <__sprintf_chk@plt+0x46b7>
  406d58:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffff0
  406d61:	mov    r10d,0x1
  406d67:	xor    r8d,r8d
  406d6a:	jmp    406b1f <__sprintf_chk@plt+0x453f>
  406d6f:	nop
  406d70:	push   r15
  406d72:	push   r14
  406d74:	mov    r14,rsi
  406d77:	lea    rsi,[rip+0x109e0]        # 41775e <__sprintf_chk@plt+0x1517e>
  406d7e:	push   r13
  406d80:	mov    r13,rdi
  406d83:	push   r12
  406d85:	push   rbp
  406d86:	mov    rbp,rdx
  406d89:	push   rbx
  406d8a:	mov    ebx,0x1
  406d8f:	sub    rsp,0x48
  406d93:	mov    rax,QWORD PTR fs:0x28
  406d9c:	mov    QWORD PTR [rsp+0x38],rax
  406da1:	xor    eax,eax
  406da3:	call   408230 <__sprintf_chk@plt+0x5c50>
  406da8:	lea    rax,[rsp+0x10]
  406dad:	mov    QWORD PTR [rsp+0x8],rax
  406db2:	jmp    406df7 <__sprintf_chk@plt+0x4817>
  406db4:	nop    DWORD PTR [rax+0x0]
  406db8:	cmp    al,0x70
  406dba:	je     406f80 <__sprintf_chk@plt+0x49a0>
  406dc0:	cmp    al,0x73
  406dc2:	je     406f40 <__sprintf_chk@plt+0x4960>
  406dc8:	cmp    al,0x66
  406dca:	je     406f18 <__sprintf_chk@plt+0x4938>
  406dd0:	mov    rsi,QWORD PTR [rsp+0x8]
  406dd5:	mov    rdi,r13
  406dd8:	mov    BYTE PTR [rsp+0x10],0x25
  406ddd:	mov    BYTE PTR [rsp+0x11],al
  406de1:	mov    BYTE PTR [rsp+0x12],0x0
  406de6:	call   408230 <__sprintf_chk@plt+0x5c50>
  406deb:	nop    DWORD PTR [rax+rax*1+0x0]
  406df0:	add    ebx,0x2
  406df3:	lea    r14,[r15+0x2]
  406df7:	mov    esi,0x25
  406dfc:	mov    rdi,r14
  406dff:	call   4023f0 <strchr@plt>
  406e04:	mov    r15,rax
  406e07:	test   rax,rax
  406e0a:	je     406fd0 <__sprintf_chk@plt+0x49f0>
  406e10:	mov    rdx,rax
  406e13:	mov    r12,QWORD PTR [r13+0x10]
  406e17:	sub    rdx,r14
  406e1a:	mov    rsi,r14
  406e1d:	mov    rdi,r13
  406e20:	call   407490 <__sprintf_chk@plt+0x4eb0>
  406e25:	mov    QWORD PTR [r12],rax
  406e29:	mov    rax,QWORD PTR [r13+0x38]
  406e2d:	mov    DWORD PTR [r12+0x8],0x4
  406e36:	sub    rax,QWORD PTR [r13+0x10]
  406e3a:	cmp    rax,0x10
  406e3e:	jle    406ea0 <__sprintf_chk@plt+0x48c0>
  406e40:	mov    rdx,QWORD PTR [r13+0x10]
  406e44:	lea    rcx,[rdx+0x10]
  406e48:	mov    QWORD PTR [r13+0x10],rcx
  406e4c:	movzx  eax,BYTE PTR [r15+0x1]
  406e51:	cmp    al,0x64
  406e53:	je     406eb0 <__sprintf_chk@plt+0x48d0>
  406e55:	jg     406db8 <__sprintf_chk@plt+0x47d8>
  406e5b:	cmp    al,0x25
  406e5d:	je     406f00 <__sprintf_chk@plt+0x4920>
  406e63:	cmp    al,0x63
  406e65:	jne    406dd0 <__sprintf_chk@plt+0x47f0>
  406e6b:	mov    eax,DWORD PTR [rbp+0x0]
  406e6e:	cmp    eax,0x2f
  406e71:	ja     407098 <__sprintf_chk@plt+0x4ab8>
  406e77:	mov    edx,eax
  406e79:	add    eax,0x8
  406e7c:	mov    DWORD PTR [rbp+0x0],eax
  406e7f:	add    rdx,QWORD PTR [rbp+0x10]
  406e83:	mov    eax,DWORD PTR [rdx]
  406e85:	mov    rsi,QWORD PTR [rsp+0x8]
  406e8a:	mov    rdi,r13
  406e8d:	mov    BYTE PTR [rsp+0x10],al
  406e91:	mov    BYTE PTR [rsp+0x11],0x0
  406e96:	call   408230 <__sprintf_chk@plt+0x5c50>
  406e9b:	jmp    406df0 <__sprintf_chk@plt+0x4810>
  406ea0:	mov    esi,0x1
  406ea5:	mov    rdi,r13
  406ea8:	call   408180 <__sprintf_chk@plt+0x5ba0>
  406ead:	jmp    406e40 <__sprintf_chk@plt+0x4860>
  406eaf:	nop
  406eb0:	mov    eax,DWORD PTR [rbp+0x0]
  406eb3:	cmp    eax,0x2f
  406eb6:	ja     407050 <__sprintf_chk@plt+0x4a70>
  406ebc:	mov    esi,eax
  406ebe:	add    eax,0x8
  406ec1:	mov    DWORD PTR [rbp+0x0],eax
  406ec4:	add    rsi,QWORD PTR [rbp+0x10]
  406ec8:	vxorpd xmm0,xmm0,xmm0
  406ecc:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rsi]
  406ed0:	mov    rax,QWORD PTR [r13+0x38]
  406ed4:	vmovsd QWORD PTR [rdx+0x10],xmm0
  406ed9:	sub    rax,rcx
  406edc:	mov    DWORD PTR [rdx+0x18],0x3
  406ee3:	cmp    rax,0x10
  406ee7:	jle    407038 <__sprintf_chk@plt+0x4a58>
  406eed:	add    QWORD PTR [r13+0x10],0x10
  406ef2:	jmp    406df0 <__sprintf_chk@plt+0x4810>
  406ef7:	nop    WORD PTR [rax+rax*1+0x0]
  406f00:	lea    rsi,[rip+0x1019e]        # 4170a5 <__sprintf_chk@plt+0x14ac5>
  406f07:	mov    rdi,r13
  406f0a:	call   408230 <__sprintf_chk@plt+0x5c50>
  406f0f:	jmp    406df0 <__sprintf_chk@plt+0x4810>
  406f14:	nop    DWORD PTR [rax+0x0]
  406f18:	mov    eax,DWORD PTR [rbp+0x4]
  406f1b:	cmp    eax,0xaf
  406f20:	ja     407068 <__sprintf_chk@plt+0x4a88>
  406f26:	mov    esi,eax
  406f28:	add    eax,0x10
  406f2b:	mov    DWORD PTR [rbp+0x4],eax
  406f2e:	add    rsi,QWORD PTR [rbp+0x10]
  406f32:	vmovsd xmm0,QWORD PTR [rsi]
  406f36:	jmp    406ed0 <__sprintf_chk@plt+0x48f0>
  406f38:	nop    DWORD PTR [rax+rax*1+0x0]
  406f40:	mov    eax,DWORD PTR [rbp+0x0]
  406f43:	cmp    eax,0x2f
  406f46:	ja     407080 <__sprintf_chk@plt+0x4aa0>
  406f4c:	mov    edx,eax
  406f4e:	add    eax,0x8
  406f51:	mov    DWORD PTR [rbp+0x0],eax
  406f54:	add    rdx,QWORD PTR [rbp+0x10]
  406f58:	mov    rsi,QWORD PTR [rdx]
  406f5b:	lea    rax,[rip+0x10139]        # 41709b <__sprintf_chk@plt+0x14abb>
  406f62:	test   rsi,rsi
  406f65:	cmove  rsi,rax
  406f69:	mov    rdi,r13
  406f6c:	call   408230 <__sprintf_chk@plt+0x5c50>
  406f71:	jmp    406df0 <__sprintf_chk@plt+0x4810>
  406f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f80:	mov    eax,DWORD PTR [rbp+0x0]
  406f83:	cmp    eax,0x2f
  406f86:	ja     4070b0 <__sprintf_chk@plt+0x4ad0>
  406f8c:	mov    edx,eax
  406f8e:	add    eax,0x8
  406f91:	mov    DWORD PTR [rbp+0x0],eax
  406f94:	add    rdx,QWORD PTR [rbp+0x10]
  406f98:	mov    r14,QWORD PTR [rsp+0x8]
  406f9d:	mov    r8,QWORD PTR [rdx]
  406fa0:	mov    rdi,r14
  406fa3:	lea    rcx,[rip+0x100f8]        # 4170a2 <__sprintf_chk@plt+0x14ac2>
  406faa:	mov    edx,0x28
  406faf:	mov    esi,0x1
  406fb4:	xor    eax,eax
  406fb6:	call   4025e0 <__sprintf_chk@plt>
  406fbb:	mov    rsi,r14
  406fbe:	mov    rdi,r13
  406fc1:	call   408230 <__sprintf_chk@plt+0x5c50>
  406fc6:	jmp    406df0 <__sprintf_chk@plt+0x4810>
  406fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  406fd0:	mov    rsi,r14
  406fd3:	mov    rdi,r13
  406fd6:	call   408230 <__sprintf_chk@plt+0x5c50>
  406fdb:	mov    rdx,QWORD PTR [r13+0x10]
  406fdf:	lea    esi,[rbx+0x1]
  406fe2:	sub    rdx,QWORD PTR [r13+0x18]
  406fe6:	sar    rdx,0x4
  406fea:	dec    edx
  406fec:	mov    rdi,r13
  406fef:	call   4069b0 <__sprintf_chk@plt+0x43d0>
  406ff4:	movsxd rbx,ebx
  406ff7:	mov    rax,QWORD PTR [r13+0x10]
  406ffb:	shl    rbx,0x4
  406fff:	sub    rax,rbx
  407002:	mov    QWORD PTR [r13+0x10],rax
  407006:	mov    rax,QWORD PTR [rax-0x10]
  40700a:	add    rax,0x18
  40700e:	mov    rbx,QWORD PTR [rsp+0x38]
  407013:	xor    rbx,QWORD PTR fs:0x28
  40701c:	jne    4070c1 <__sprintf_chk@plt+0x4ae1>
  407022:	add    rsp,0x48
  407026:	pop    rbx
  407027:	pop    rbp
  407028:	pop    r12
  40702a:	pop    r13
  40702c:	pop    r14
  40702e:	pop    r15
  407030:	ret    
  407031:	nop    DWORD PTR [rax+0x0]
  407038:	mov    esi,0x1
  40703d:	mov    rdi,r13
  407040:	call   408180 <__sprintf_chk@plt+0x5ba0>
  407045:	jmp    406eed <__sprintf_chk@plt+0x490d>
  40704a:	nop    WORD PTR [rax+rax*1+0x0]
  407050:	mov    rsi,QWORD PTR [rbp+0x8]
  407054:	lea    rax,[rsi+0x8]
  407058:	mov    QWORD PTR [rbp+0x8],rax
  40705c:	jmp    406ec8 <__sprintf_chk@plt+0x48e8>
  407061:	nop    DWORD PTR [rax+0x0]
  407068:	mov    rsi,QWORD PTR [rbp+0x8]
  40706c:	lea    rax,[rsi+0x8]
  407070:	mov    QWORD PTR [rbp+0x8],rax
  407074:	jmp    406f32 <__sprintf_chk@plt+0x4952>
  407079:	nop    DWORD PTR [rax+0x0]
  407080:	mov    rdx,QWORD PTR [rbp+0x8]
  407084:	lea    rax,[rdx+0x8]
  407088:	mov    QWORD PTR [rbp+0x8],rax
  40708c:	jmp    406f58 <__sprintf_chk@plt+0x4978>
  407091:	nop    DWORD PTR [rax+0x0]
  407098:	mov    rdx,QWORD PTR [rbp+0x8]
  40709c:	lea    rax,[rdx+0x8]
  4070a0:	mov    QWORD PTR [rbp+0x8],rax
  4070a4:	jmp    406e83 <__sprintf_chk@plt+0x48a3>
  4070a9:	nop    DWORD PTR [rax+0x0]
  4070b0:	mov    rdx,QWORD PTR [rbp+0x8]
  4070b4:	lea    rax,[rdx+0x8]
  4070b8:	mov    QWORD PTR [rbp+0x8],rax
  4070bc:	jmp    406f98 <__sprintf_chk@plt+0x49b8>
  4070c1:	call   4023e0 <__stack_chk_fail@plt>
  4070c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070d0:	sub    rsp,0xd8
  4070d7:	mov    QWORD PTR [rsp+0x30],rdx
  4070dc:	mov    QWORD PTR [rsp+0x38],rcx
  4070e1:	mov    QWORD PTR [rsp+0x40],r8
  4070e6:	mov    QWORD PTR [rsp+0x48],r9
  4070eb:	test   al,al
  4070ed:	je     40712e <__sprintf_chk@plt+0x4b4e>
  4070ef:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4070f5:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4070fb:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  407101:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40710a:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  407113:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40711c:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  407125:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40712e:	mov    rax,QWORD PTR fs:0x28
  407137:	mov    QWORD PTR [rsp+0x18],rax
  40713c:	xor    eax,eax
  40713e:	lea    rax,[rsp+0xe0]
  407146:	mov    QWORD PTR [rsp+0x8],rax
  40714b:	mov    rdx,rsp
  40714e:	lea    rax,[rsp+0x20]
  407153:	mov    DWORD PTR [rsp],0x10
  40715a:	mov    DWORD PTR [rsp+0x4],0x30
  407162:	mov    QWORD PTR [rsp+0x10],rax
  407167:	call   406d70 <__sprintf_chk@plt+0x4790>
  40716c:	mov    rcx,QWORD PTR [rsp+0x18]
  407171:	xor    rcx,QWORD PTR fs:0x28
  40717a:	jne    407184 <__sprintf_chk@plt+0x4ba4>
  40717c:	add    rsp,0xd8
  407183:	ret    
  407184:	call   4023e0 <__stack_chk_fail@plt>
  407189:	nop    DWORD PTR [rax+0x0]
  407190:	push   r12
  407192:	push   rbp
  407193:	push   rbx
  407194:	mov    rbx,rdi
  407197:	sub    rsp,0x130
  40719e:	mov    QWORD PTR [rsp+0x90],rdx
  4071a6:	mov    QWORD PTR [rsp+0x98],rcx
  4071ae:	mov    QWORD PTR [rsp+0xa0],r8
  4071b6:	mov    QWORD PTR [rsp+0xa8],r9
  4071be:	test   al,al
  4071c0:	je     40720a <__sprintf_chk@plt+0x4c2a>
  4071c2:	vmovaps XMMWORD PTR [rsp+0xb0],xmm0
  4071cb:	vmovaps XMMWORD PTR [rsp+0xc0],xmm1
  4071d4:	vmovaps XMMWORD PTR [rsp+0xd0],xmm2
  4071dd:	vmovaps XMMWORD PTR [rsp+0xe0],xmm3
  4071e6:	vmovaps XMMWORD PTR [rsp+0xf0],xmm4
  4071ef:	vmovaps XMMWORD PTR [rsp+0x100],xmm5
  4071f8:	vmovaps XMMWORD PTR [rsp+0x110],xmm6
  407201:	vmovaps XMMWORD PTR [rsp+0x120],xmm7
  40720a:	mov    rax,QWORD PTR fs:0x28
  407213:	mov    QWORD PTR [rsp+0x78],rax
  407218:	xor    eax,eax
  40721a:	lea    rax,[rsp+0x150]
  407222:	mov    QWORD PTR [rsp+0x20],rax
  407227:	lea    rdx,[rsp+0x18]
  40722c:	lea    rax,[rsp+0x80]
  407234:	mov    rdi,rbx
  407237:	mov    DWORD PTR [rsp+0x18],0x10
  40723f:	mov    DWORD PTR [rsp+0x1c],0x30
  407247:	mov    QWORD PTR [rsp+0x28],rax
  40724c:	call   406d70 <__sprintf_chk@plt+0x4790>
  407251:	mov    r9,QWORD PTR [rbx+0x28]
  407255:	mov    rbp,rax
  407258:	mov    rax,QWORD PTR [r9+0x8]
  40725c:	cmp    DWORD PTR [rax+0x8],0x6
  407260:	je     407290 <__sprintf_chk@plt+0x4cb0>
  407262:	mov    rdi,rbx
  407265:	call   4081a0 <__sprintf_chk@plt+0x5bc0>
  40726a:	mov    rax,QWORD PTR [rsp+0x78]
  40726f:	xor    rax,QWORD PTR fs:0x28
  407278:	jne    407303 <__sprintf_chk@plt+0x4d23>
  40727e:	add    rsp,0x130
  407285:	pop    rbx
  407286:	pop    rbp
  407287:	pop    r12
  407289:	ret    
  40728a:	nop    WORD PTR [rax+rax*1+0x0]
  407290:	mov    rax,QWORD PTR [rax]
  407293:	cmp    BYTE PTR [rax+0xa],0x0
  407297:	jne    407262 <__sprintf_chk@plt+0x4c82>
  407299:	mov    rsi,r9
  40729c:	mov    rdi,rbx
  40729f:	call   402d20 <__sprintf_chk@plt+0x740>
  4072a4:	mov    rdx,QWORD PTR [r9+0x8]
  4072a8:	mov    DWORD PTR [rsp+0xc],eax
  4072ac:	cmp    DWORD PTR [rdx+0x8],0x6
  4072b0:	jne    40260c <__sprintf_chk@plt+0x2c>
  4072b6:	mov    rdx,QWORD PTR [rdx]
  4072b9:	cmp    BYTE PTR [rdx+0xa],0x0
  4072bd:	jne    40260c <__sprintf_chk@plt+0x2c>
  4072c3:	mov    rdx,QWORD PTR [rdx+0x20]
  4072c7:	lea    r12,[rsp+0x30]
  4072cc:	mov    rsi,QWORD PTR [rdx+0x40]
  4072d0:	mov    rdi,r12
  4072d3:	add    rsi,0x18
  4072d7:	mov    edx,0x3c
  4072dc:	call   403160 <__sprintf_chk@plt+0xb80>
  4072e1:	mov    eax,DWORD PTR [rsp+0xc]
  4072e5:	mov    r8,rbp
  4072e8:	mov    ecx,eax
  4072ea:	mov    rdx,r12
  4072ed:	lea    rsi,[rip+0xfdb3]        # 4170a7 <__sprintf_chk@plt+0x14ac7>
  4072f4:	mov    rdi,rbx
  4072f7:	xor    eax,eax
  4072f9:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  4072fe:	jmp    407262 <__sprintf_chk@plt+0x4c82>
  407303:	call   4023e0 <__stack_chk_fail@plt>
  407308:	nop    DWORD PTR [rax+rax*1+0x0]
  407310:	push   r13
  407312:	movsxd rax,esi
  407315:	push   r12
  407317:	mov    r12,rax
  40731a:	push   rbp
  40731b:	lea    rbp,[rax+rax*4]
  40731f:	shl    rbp,0x3
  407323:	push   rbx
  407324:	mov    rbx,rdi
  407327:	sub    rsp,0x8
  40732b:	mov    r13,QWORD PTR [rdi+0x50]
  40732f:	cmp    eax,0xffffffff
  407332:	jl     407378 <__sprintf_chk@plt+0x4d98>
  407334:	movsxd rax,DWORD PTR [rdi+0x5c]
  407338:	mov    rcx,rbp
  40733b:	lea    rdx,[rax+rax*4]
  40733f:	shl    rdx,0x3
  407343:	mov    rsi,r13
  407346:	call   404640 <__sprintf_chk@plt+0x2060>
  40734b:	mov    rdx,QWORD PTR [rbx+0x28]
  40734f:	mov    QWORD PTR [rbx+0x50],rax
  407353:	add    rdx,rax
  407356:	sub    rdx,r13
  407359:	lea    rax,[rax+rbp*1-0x28]
  40735e:	mov    DWORD PTR [rbx+0x5c],r12d
  407362:	mov    QWORD PTR [rbx+0x28],rdx
  407366:	mov    QWORD PTR [rbx+0x48],rax
  40736a:	add    rsp,0x8
  40736e:	pop    rbx
  40736f:	pop    rbp
  407370:	pop    r12
  407372:	pop    r13
  407374:	ret    
  407375:	nop    DWORD PTR [rax]
  407378:	xor    eax,eax
  40737a:	lea    rsi,[rip+0x10cc7]        # 418048 <__sprintf_chk@plt+0x15a68>
  407381:	call   407190 <__sprintf_chk@plt+0x4bb0>
  407386:	xor    eax,eax
  407388:	jmp    40734b <__sprintf_chk@plt+0x4d6b>
  40738a:	nop    WORD PTR [rax+rax*1+0x0]
  407390:	mov    rax,QWORD PTR [rdi+0x20]
  407394:	cmp    BYTE PTR [rax+0x21],0x2
  407398:	je     407487 <__sprintf_chk@plt+0x4ea7>
  40739e:	push   r13
  4073a0:	push   r12
  4073a2:	mov    r12,rdi
  4073a5:	push   rbp
  4073a6:	mov    ebp,esi
  4073a8:	push   rbx
  4073a9:	sub    rsp,0x8
  4073ad:	cmp    esi,0xffffffff
  4073b0:	jl     40746d <__sprintf_chk@plt+0x4e8d>
  4073b6:	movsxd rcx,esi
  4073b9:	shl    rcx,0x3
  4073bd:	xor    edx,edx
  4073bf:	xor    esi,esi
  4073c1:	call   404640 <__sprintf_chk@plt+0x2060>
  4073c6:	mov    rbx,rax
  4073c9:	mov    r13,QWORD PTR [r12+0x20]
  4073ce:	test   ebp,ebp
  4073d0:	jle    4073f0 <__sprintf_chk@plt+0x4e10>
  4073d2:	lea    edx,[rbp-0x1]
  4073d5:	lea    rdx,[rax+rdx*8+0x8]
  4073da:	nop    WORD PTR [rax+rax*1+0x0]
  4073e0:	mov    QWORD PTR [rax],0x0
  4073e7:	add    rax,0x8
  4073eb:	cmp    rdx,rax
  4073ee:	jne    4073e0 <__sprintf_chk@plt+0x4e00>
  4073f0:	mov    r11d,DWORD PTR [r13+0xc]
  4073f4:	mov    rsi,QWORD PTR [r13+0x0]
  4073f8:	test   r11d,r11d
  4073fb:	jle    407449 <__sprintf_chk@plt+0x4e69>
  4073fd:	lea    eax,[r11-0x1]
  407401:	mov    r9,rsi
  407404:	lea    r10,[rsi+rax*8+0x8]
  407409:	lea    edi,[rbp-0x1]
  40740c:	nop    DWORD PTR [rax+0x0]
  407410:	mov    rax,QWORD PTR [r9]
  407413:	test   rax,rax
  407416:	je     407440 <__sprintf_chk@plt+0x4e60>
  407418:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	mov    edx,DWORD PTR [rax+0xc]
  407423:	mov    rcx,QWORD PTR [rax]
  407426:	and    edx,edi
  407428:	movsxd rdx,edx
  40742b:	lea    rdx,[rbx+rdx*8]
  40742f:	mov    r8,QWORD PTR [rdx]
  407432:	mov    QWORD PTR [rax],r8
  407435:	mov    QWORD PTR [rdx],rax
  407438:	mov    rax,rcx
  40743b:	test   rcx,rcx
  40743e:	jne    407420 <__sprintf_chk@plt+0x4e40>
  407440:	add    r9,0x8
  407444:	cmp    r10,r9
  407447:	jne    407410 <__sprintf_chk@plt+0x4e30>
  407449:	movsxd rdx,r11d
  40744c:	mov    rdi,r12
  40744f:	shl    rdx,0x3
  407453:	xor    ecx,ecx
  407455:	call   404640 <__sprintf_chk@plt+0x2060>
  40745a:	mov    DWORD PTR [r13+0xc],ebp
  40745e:	mov    QWORD PTR [r13+0x0],rbx
  407462:	add    rsp,0x8
  407466:	pop    rbx
  407467:	pop    rbp
  407468:	pop    r12
  40746a:	pop    r13
  40746c:	ret    
  40746d:	lea    rsi,[rip+0x10bd4]        # 418048 <__sprintf_chk@plt+0x15a68>
  407474:	xor    eax,eax
  407476:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40747b:	xor    ebx,ebx
  40747d:	mov    r13,QWORD PTR [r12+0x20]
  407482:	jmp    4073f0 <__sprintf_chk@plt+0x4e10>
  407487:	ret    
  407488:	nop    DWORD PTR [rax+rax*1+0x0]
  407490:	push   r15
  407492:	mov    rcx,rdx
  407495:	shr    rcx,0x5
  407499:	push   r14
  40749b:	inc    rcx
  40749e:	mov    r14,rsi
  4074a1:	push   r13
  4074a3:	mov    r13,rdx
  4074a6:	push   r12
  4074a8:	push   rbp
  4074a9:	mov    ebp,edx
  4074ab:	push   rbx
  4074ac:	sub    rsp,0x18
  4074b0:	mov    QWORD PTR [rsp+0x8],rdi
  4074b5:	cmp    rdx,rcx
  4074b8:	jb     4074de <__sprintf_chk@plt+0x4efe>
  4074ba:	nop    WORD PTR [rax+rax*1+0x0]
  4074c0:	mov    eax,ebp
  4074c2:	mov    esi,ebp
  4074c4:	shr    esi,0x2
  4074c7:	shl    eax,0x5
  4074ca:	add    eax,esi
  4074cc:	movzx  esi,BYTE PTR [r14+rdx*1-0x1]
  4074d2:	sub    rdx,rcx
  4074d5:	add    eax,esi
  4074d7:	xor    ebp,eax
  4074d9:	cmp    rcx,rdx
  4074dc:	jbe    4074c0 <__sprintf_chk@plt+0x4ee0>
  4074de:	mov    rax,QWORD PTR [rsp+0x8]
  4074e3:	mov    r15,QWORD PTR [rax+0x20]
  4074e7:	mov    eax,DWORD PTR [r15+0xc]
  4074eb:	mov    rdx,QWORD PTR [r15]
  4074ee:	dec    eax
  4074f0:	and    eax,ebp
  4074f2:	cdqe   
  4074f4:	mov    rbx,QWORD PTR [rdx+rax*8]
  4074f8:	test   rbx,rbx
  4074fb:	jne    407508 <__sprintf_chk@plt+0x4f28>
  4074fd:	jmp    407550 <__sprintf_chk@plt+0x4f70>
  4074ff:	nop
  407500:	mov    rbx,QWORD PTR [rbx]
  407503:	test   rbx,rbx
  407506:	je     407550 <__sprintf_chk@plt+0x4f70>
  407508:	mov    r12,rbx
  40750b:	cmp    QWORD PTR [rbx+0x10],r13
  40750f:	jne    407500 <__sprintf_chk@plt+0x4f20>
  407511:	lea    rsi,[rbx+0x18]
  407515:	mov    rdx,r13
  407518:	mov    rdi,r14
  40751b:	call   402440 <memcmp@plt>
  407520:	test   eax,eax
  407522:	jne    407500 <__sprintf_chk@plt+0x4f20>
  407524:	movzx  edx,BYTE PTR [rbx+0x9]
  407528:	movzx  eax,BYTE PTR [r15+0x20]
  40752d:	andn   eax,eax,edx
  407532:	test   al,0x3
  407534:	je     40753c <__sprintf_chk@plt+0x4f5c>
  407536:	xor    edx,0x3
  407539:	mov    BYTE PTR [rbx+0x9],dl
  40753c:	add    rsp,0x18
  407540:	pop    rbx
  407541:	pop    rbp
  407542:	mov    rax,r12
  407545:	pop    r12
  407547:	pop    r13
  407549:	pop    r14
  40754b:	pop    r15
  40754d:	ret    
  40754e:	xchg   ax,ax
  407550:	lea    rax,[r13+0x1]
  407554:	cmp    rax,0xffffffffffffffe5
  407558:	ja     407600 <__sprintf_chk@plt+0x5020>
  40755e:	mov    rbx,QWORD PTR [rsp+0x8]
  407563:	lea    rcx,[r13+0x19]
  407567:	xor    edx,edx
  407569:	xor    esi,esi
  40756b:	mov    rdi,rbx
  40756e:	call   404640 <__sprintf_chk@plt+0x2060>
  407573:	mov    r12,rax
  407576:	mov    DWORD PTR [rax+0xc],ebp
  407579:	mov    QWORD PTR [rax+0x10],r13
  40757d:	mov    rax,QWORD PTR [rbx+0x20]
  407581:	lea    rdi,[r12+0x18]
  407586:	movzx  eax,BYTE PTR [rax+0x20]
  40758a:	mov    BYTE PTR [r12+0x8],0x4
  407590:	and    eax,0x3
  407593:	mov    BYTE PTR [r12+0x9],al
  407598:	mov    BYTE PTR [r12+0xa],0x0
  40759e:	mov    rdx,r13
  4075a1:	mov    rsi,r14
  4075a4:	call   4024a0 <memcpy@plt>
  4075a9:	mov    BYTE PTR [r12+r13*1+0x18],0x0
  4075af:	mov    rdx,QWORD PTR [rbx+0x20]
  4075b3:	mov    esi,DWORD PTR [rdx+0xc]
  4075b6:	lea    eax,[rsi-0x1]
  4075b9:	and    ebp,eax
  4075bb:	mov    rax,QWORD PTR [rdx]
  4075be:	lea    rax,[rax+rbp*8]
  4075c2:	mov    rdi,QWORD PTR [rax]
  4075c5:	mov    QWORD PTR [r12],rdi
  4075c9:	mov    QWORD PTR [rax],r12
  4075cc:	mov    eax,DWORD PTR [rdx+0x8]
  4075cf:	inc    eax
  4075d1:	mov    DWORD PTR [rdx+0x8],eax
  4075d4:	cmp    eax,esi
  4075d6:	jbe    40753c <__sprintf_chk@plt+0x4f5c>
  4075dc:	cmp    esi,0x3ffffffe
  4075e2:	jg     40753c <__sprintf_chk@plt+0x4f5c>
  4075e8:	mov    rdi,QWORD PTR [rsp+0x8]
  4075ed:	add    esi,esi
  4075ef:	call   407390 <__sprintf_chk@plt+0x4db0>
  4075f4:	jmp    40753c <__sprintf_chk@plt+0x4f5c>
  4075f9:	nop    DWORD PTR [rax+0x0]
  407600:	mov    rdi,QWORD PTR [rsp+0x8]
  407605:	lea    rsi,[rip+0x10a3c]        # 418048 <__sprintf_chk@plt+0x15a68>
  40760c:	xor    eax,eax
  40760e:	call   407190 <__sprintf_chk@plt+0x4bb0>
  407613:	jmp    40755e <__sprintf_chk@plt+0x4f7e>
  407618:	nop    DWORD PTR [rax+rax*1+0x0]
  407620:	push   rbp
  407621:	mov    rbp,rdi
  407624:	push   rbx
  407625:	mov    rbx,rdx
  407628:	sub    rsp,0x8
  40762c:	cmp    esi,0x4
  40762f:	je     407690 <__sprintf_chk@plt+0x50b0>
  407631:	jg     407660 <__sprintf_chk@plt+0x5080>
  407633:	cmp    esi,0x2
  407636:	jl     407649 <__sprintf_chk@plt+0x5069>
  407638:	mov    rax,QWORD PTR [rdi+0x10]
  40763c:	mov    rdx,QWORD PTR [rax-0x10]
  407640:	mov    eax,DWORD PTR [rax-0x8]
  407643:	mov    QWORD PTR [rbx],rdx
  407646:	mov    DWORD PTR [rbx+0x8],eax
  407649:	add    rbx,0x10
  40764d:	mov    QWORD PTR [rbp+0x10],rbx
  407651:	add    rsp,0x8
  407655:	pop    rbx
  407656:	pop    rbp
  407657:	ret    
  407658:	nop    DWORD PTR [rax+rax*1+0x0]
  407660:	cmp    esi,0x5
  407663:	jne    407649 <__sprintf_chk@plt+0x5069>
  407665:	mov    edx,0x17
  40766a:	lea    rsi,[rip+0xfa52]        # 4170c3 <__sprintf_chk@plt+0x14ae3>
  407671:	call   407490 <__sprintf_chk@plt+0x4eb0>
  407676:	mov    QWORD PTR [rbx],rax
  407679:	mov    DWORD PTR [rbx+0x8],0x4
  407680:	add    rbx,0x10
  407684:	mov    QWORD PTR [rbp+0x10],rbx
  407688:	add    rsp,0x8
  40768c:	pop    rbx
  40768d:	pop    rbp
  40768e:	ret    
  40768f:	nop
  407690:	mov    edx,0x11
  407695:	lea    rsi,[rip+0xfa15]        # 4170b1 <__sprintf_chk@plt+0x14ad1>
  40769c:	call   407490 <__sprintf_chk@plt+0x4eb0>
  4076a1:	mov    QWORD PTR [rbx],rax
  4076a4:	mov    DWORD PTR [rbx+0x8],0x4
  4076ab:	add    rbx,0x10
  4076af:	mov    QWORD PTR [rbp+0x10],rbx
  4076b3:	add    rsp,0x8
  4076b7:	pop    rbx
  4076b8:	pop    rbp
  4076b9:	ret    
  4076ba:	nop    WORD PTR [rax+rax*1+0x0]
  4076c0:	push   r15
  4076c2:	mov    r15,rcx
  4076c5:	push   r14
  4076c7:	push   r13
  4076c9:	push   r12
  4076cb:	push   rbp
  4076cc:	push   rbx
  4076cd:	mov    rbx,rdi
  4076d0:	sub    rsp,0x18
  4076d4:	mov    r12,QWORD PTR [rdi+0xb0]
  4076db:	mov    QWORD PTR [rdi+0xb0],r8
  4076e2:	mov    rax,QWORD PTR [rdi+0x50]
  4076e6:	movzx  r14d,WORD PTR [rdi+0x60]
  4076eb:	mov    rbp,QWORD PTR [rdi+0x28]
  4076ef:	mov    QWORD PTR [rsp],rax
  4076f3:	movzx  r13d,BYTE PTR [rdi+0x65]
  4076f8:	call   403320 <__sprintf_chk@plt+0xd40>
  4076fd:	test   eax,eax
  4076ff:	jne    407720 <__sprintf_chk@plt+0x5140>
  407701:	mov    QWORD PTR [rbx+0xb0],r12
  407708:	add    rsp,0x18
  40770c:	pop    rbx
  40770d:	pop    rbp
  40770e:	pop    r12
  407710:	pop    r13
  407712:	pop    r14
  407714:	pop    r15
  407716:	ret    
  407717:	nop    WORD PTR [rax+rax*1+0x0]
  407720:	add    r15,QWORD PTR [rbx+0x40]
  407724:	mov    rsi,r15
  407727:	mov    rdi,rbx
  40772a:	sub    rbp,QWORD PTR [rsp]
  40772e:	mov    DWORD PTR [rsp+0xc],eax
  407732:	call   4046c0 <__sprintf_chk@plt+0x20e0>
  407737:	mov    eax,DWORD PTR [rsp+0xc]
  40773b:	mov    rdx,r15
  40773e:	mov    esi,eax
  407740:	mov    rdi,rbx
  407743:	mov    DWORD PTR [rsp],eax
  407746:	call   407620 <__sprintf_chk@plt+0x5040>
  40774b:	mov    rdx,QWORD PTR [rbx+0x50]
  40774f:	mov    WORD PTR [rbx+0x60],r14w
  407754:	add    rdx,rbp
  407757:	mov    rcx,QWORD PTR [rdx]
  40775a:	mov    QWORD PTR [rbx+0x28],rdx
  40775e:	mov    rdx,QWORD PTR [rdx+0x18]
  407762:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  407769:	mov    QWORD PTR [rbx+0x18],rcx
  40776d:	mov    QWORD PTR [rbx+0x30],rdx
  407771:	mov    BYTE PTR [rbx+0x65],r13b
  407775:	mov    eax,DWORD PTR [rsp]
  407778:	jle    407701 <__sprintf_chk@plt+0x5121>
  40777a:	sar    rbp,0x3
  40777e:	imul   ebp,ebp,0xcccccccd
  407784:	cmp    ebp,0x4e1e
  40778a:	jg     407701 <__sprintf_chk@plt+0x5121>
  407790:	mov    esi,0x4e20
  407795:	mov    rdi,rbx
  407798:	call   407310 <__sprintf_chk@plt+0x4d30>
  40779d:	mov    eax,DWORD PTR [rsp]
  4077a0:	jmp    407701 <__sprintf_chk@plt+0x5121>
  4077a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4077b0:	push   rbp
  4077b1:	push   rbx
  4077b2:	mov    rbx,rdi
  4077b5:	sub    rsp,0x38
  4077b9:	mov    rcx,QWORD PTR [rdi+0x10]
  4077bd:	mov    r8,QWORD PTR [rdi+0xb0]
  4077c4:	mov    rax,QWORD PTR fs:0x28
  4077cd:	mov    QWORD PTR [rsp+0x28],rax
  4077d2:	xor    eax,eax
  4077d4:	sub    rcx,QWORD PTR [rdi+0x40]
  4077d8:	mov    QWORD PTR [rsp],rsi
  4077dc:	mov    QWORD PTR [rsp+0x20],rdx
  4077e1:	lea    rsi,[rip+0xaa88]        # 412270 <__sprintf_chk@plt+0xfc90>
  4077e8:	mov    rdx,rsp
  4077eb:	mov    QWORD PTR [rsp+0x8],0x0
  4077f4:	mov    QWORD PTR [rsp+0x18],0x0
  4077fd:	call   4076c0 <__sprintf_chk@plt+0x50e0>
  407802:	mov    rdx,QWORD PTR [rsp+0x18]
  407807:	mov    rsi,QWORD PTR [rsp+0x8]
  40780c:	xor    ecx,ecx
  40780e:	mov    rdi,rbx
  407811:	mov    ebp,eax
  407813:	call   404640 <__sprintf_chk@plt+0x2060>
  407818:	mov    rdi,QWORD PTR [rsp+0x28]
  40781d:	xor    rdi,QWORD PTR fs:0x28
  407826:	jne    407831 <__sprintf_chk@plt+0x5251>
  407828:	add    rsp,0x38
  40782c:	pop    rbx
  40782d:	mov    eax,ebp
  40782f:	pop    rbp
  407830:	ret    
  407831:	call   4023e0 <__stack_chk_fail@plt>
  407836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407840:	push   r13
  407842:	lea    rcx,[rip+0xf892]        # 4170db <__sprintf_chk@plt+0x14afb>
  407849:	mov    r13,rdi
  40784c:	push   r12
  40784e:	mov    r12,rdx
  407851:	mov    edx,0x20
  407856:	push   rbp
  407857:	mov    rbp,rsi
  40785a:	push   rbx
  40785b:	sub    rsp,0x38
  40785f:	mov    rbx,rsp
  407862:	vmovsd xmm0,QWORD PTR [rsi]
  407866:	mov    rax,QWORD PTR fs:0x28
  40786f:	mov    QWORD PTR [rsp+0x28],rax
  407874:	xor    eax,eax
  407876:	mov    esi,0x1
  40787b:	mov    rdi,rbx
  40787e:	mov    eax,0x1
  407883:	call   4025e0 <__sprintf_chk@plt>
  407888:	mov    rdx,rbx
  40788b:	mov    ecx,DWORD PTR [rdx]
  40788d:	add    rdx,0x4
  407891:	lea    eax,[rcx-0x1010101]
  407897:	andn   eax,ecx,eax
  40789c:	and    eax,0x80808080
  4078a1:	je     40788b <__sprintf_chk@plt+0x52ab>
  4078a3:	mov    ecx,eax
  4078a5:	shr    ecx,0x10
  4078a8:	test   eax,0x8080
  4078ad:	cmove  eax,ecx
  4078b0:	lea    rcx,[rdx+0x2]
  4078b4:	cmove  rdx,rcx
  4078b8:	mov    esi,eax
  4078ba:	add    sil,al
  4078bd:	sbb    rdx,0x3
  4078c1:	sub    rdx,rbx
  4078c4:	mov    rdi,r13
  4078c7:	mov    rsi,rbx
  4078ca:	call   407490 <__sprintf_chk@plt+0x4eb0>
  4078cf:	mov    QWORD PTR [rbp+0x0],rax
  4078d3:	mov    DWORD PTR [r12],0x4
  4078db:	mov    eax,0x1
  4078e0:	mov    rdi,QWORD PTR [rsp+0x28]
  4078e5:	xor    rdi,QWORD PTR fs:0x28
  4078ee:	jne    4078fb <__sprintf_chk@plt+0x531b>
  4078f0:	add    rsp,0x38
  4078f4:	pop    rbx
  4078f5:	pop    rbp
  4078f6:	pop    r12
  4078f8:	pop    r13
  4078fa:	ret    
  4078fb:	call   4023e0 <__stack_chk_fail@plt>
  407900:	push   rbx
  407901:	mov    r8,rdi
  407904:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  407909:	mov    rbx,rax
  40790c:	mov    eax,DWORD PTR [rax+0x8]
  40790f:	cmp    eax,0x4
  407912:	je     40794c <__sprintf_chk@plt+0x536c>
  407914:	jle    407930 <__sprintf_chk@plt+0x5350>
  407916:	cmp    eax,0x5
  407919:	je     407960 <__sprintf_chk@plt+0x5380>
  40791b:	cmp    eax,0x7
  40791e:	jne    407958 <__sprintf_chk@plt+0x5378>
  407920:	mov    rax,QWORD PTR [rbx]
  407923:	mov    rax,QWORD PTR [rax+0x20]
  407927:	pop    rbx
  407928:	ret    
  407929:	nop    DWORD PTR [rax+0x0]
  407930:	cmp    eax,0x3
  407933:	jne    407958 <__sprintf_chk@plt+0x5378>
  407935:	lea    rdx,[rbx+0x8]
  407939:	mov    rsi,rbx
  40793c:	mov    rdi,r8
  40793f:	call   407840 <__sprintf_chk@plt+0x5260>
  407944:	mov    edx,eax
  407946:	xor    eax,eax
  407948:	test   edx,edx
  40794a:	je     407927 <__sprintf_chk@plt+0x5347>
  40794c:	mov    rax,QWORD PTR [rbx]
  40794f:	pop    rbx
  407950:	mov    rax,QWORD PTR [rax+0x10]
  407954:	ret    
  407955:	nop    DWORD PTR [rax]
  407958:	xor    eax,eax
  40795a:	pop    rbx
  40795b:	ret    
  40795c:	nop    DWORD PTR [rax+0x0]
  407960:	mov    rdi,QWORD PTR [rbx]
  407963:	call   403880 <__sprintf_chk@plt+0x12a0>
  407968:	cdqe   
  40796a:	pop    rbx
  40796b:	ret    
  40796c:	nop    DWORD PTR [rax+0x0]
  407970:	push   r12
  407972:	mov    r12,rsi
  407975:	push   rbp
  407976:	mov    rbp,rdx
  407979:	push   rbx
  40797a:	mov    ebx,ecx
  40797c:	cmp    ecx,0xffffffff
  40797f:	jl     4079e0 <__sprintf_chk@plt+0x5400>
  407981:	movsxd rdx,DWORD PTR [rdx]
  407984:	movsxd rcx,ecx
  407987:	mov    rsi,QWORD PTR [rsi]
  40798a:	shl    rcx,0x4
  40798e:	shl    rdx,0x4
  407992:	call   404640 <__sprintf_chk@plt+0x2060>
  407997:	mov    ecx,DWORD PTR [rbp+0x0]
  40799a:	mov    QWORD PTR [r12],rax
  40799e:	cmp    ebx,ecx
  4079a0:	jle    4079d0 <__sprintf_chk@plt+0x53f0>
  4079a2:	movsxd rsi,ecx
  4079a5:	not    ecx
  4079a7:	add    ecx,ebx
  4079a9:	mov    rdx,rsi
  4079ac:	lea    rcx,[rsi+rcx*1+0x1]
  4079b1:	shl    rdx,0x4
  4079b5:	shl    rcx,0x4
  4079b9:	add    rdx,rax
  4079bc:	add    rax,rcx
  4079bf:	nop
  4079c0:	mov    DWORD PTR [rdx+0x8],0x0
  4079c7:	add    rdx,0x10
  4079cb:	cmp    rdx,rax
  4079ce:	jne    4079c0 <__sprintf_chk@plt+0x53e0>
  4079d0:	mov    DWORD PTR [rbp+0x0],ebx
  4079d3:	pop    rbx
  4079d4:	pop    rbp
  4079d5:	pop    r12
  4079d7:	ret    
  4079d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079e0:	xor    eax,eax
  4079e2:	lea    rsi,[rip+0x1065f]        # 418048 <__sprintf_chk@plt+0x15a68>
  4079e9:	call   407190 <__sprintf_chk@plt+0x4bb0>
  4079ee:	xor    eax,eax
  4079f0:	jmp    407997 <__sprintf_chk@plt+0x53b7>
  4079f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4079fd:	nop    DWORD PTR [rax]
  407a00:	push   r13
  407a02:	push   r12
  407a04:	push   rbp
  407a05:	mov    rbp,rdi
  407a08:	push   rbx
  407a09:	movsxd rbx,esi
  407a0c:	lea    r13d,[rbx+0x6]
  407a10:	sub    rsp,0x8
  407a14:	mov    r12,QWORD PTR [rdi+0x40]
  407a18:	cmp    r13d,0xffffffff
  407a1c:	jl     407ae8 <__sprintf_chk@plt+0x5508>
  407a22:	movsxd rdx,DWORD PTR [rdi+0x58]
  407a26:	movsxd rcx,r13d
  407a29:	shl    rcx,0x4
  407a2d:	shl    rdx,0x4
  407a31:	mov    rsi,r12
  407a34:	call   404640 <__sprintf_chk@plt+0x2060>
  407a39:	mov    rdx,QWORD PTR [rbp+0x10]
  407a3d:	shl    rbx,0x4
  407a41:	add    rdx,rax
  407a44:	sub    rdx,r12
  407a47:	mov    QWORD PTR [rbp+0x10],rdx
  407a4b:	mov    rdx,QWORD PTR [rbp+0x98]
  407a52:	add    rbx,rax
  407a55:	mov    QWORD PTR [rbp+0x40],rax
  407a59:	mov    DWORD PTR [rbp+0x58],r13d
  407a5d:	mov    QWORD PTR [rbp+0x38],rbx
  407a61:	test   rdx,rdx
  407a64:	je     407a87 <__sprintf_chk@plt+0x54a7>
  407a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a70:	add    rax,QWORD PTR [rdx+0x10]
  407a74:	sub    rax,r12
  407a77:	mov    QWORD PTR [rdx+0x10],rax
  407a7b:	mov    rdx,QWORD PTR [rdx]
  407a7e:	mov    rax,QWORD PTR [rbp+0x40]
  407a82:	test   rdx,rdx
  407a85:	jne    407a70 <__sprintf_chk@plt+0x5490>
  407a87:	mov    rdx,QWORD PTR [rbp+0x50]
  407a8b:	mov    rsi,QWORD PTR [rbp+0x28]
  407a8f:	cmp    rdx,rsi
  407a92:	ja     407acb <__sprintf_chk@plt+0x54eb>
  407a94:	nop    DWORD PTR [rax+0x0]
  407a98:	mov    rcx,QWORD PTR [rdx+0x10]
  407a9c:	add    rdx,0x28
  407aa0:	add    rcx,rax
  407aa3:	sub    rcx,r12
  407aa6:	mov    QWORD PTR [rdx-0x18],rcx
  407aaa:	mov    rcx,QWORD PTR [rdx-0x28]
  407aae:	add    rcx,rax
  407ab1:	sub    rcx,r12
  407ab4:	mov    QWORD PTR [rdx-0x28],rcx
  407ab8:	mov    rcx,QWORD PTR [rdx-0x20]
  407abc:	add    rcx,rax
  407abf:	sub    rcx,r12
  407ac2:	mov    QWORD PTR [rdx-0x20],rcx
  407ac6:	cmp    rdx,rsi
  407ac9:	jbe    407a98 <__sprintf_chk@plt+0x54b8>
  407acb:	add    rax,QWORD PTR [rbp+0x18]
  407acf:	sub    rax,r12
  407ad2:	mov    QWORD PTR [rbp+0x18],rax
  407ad6:	add    rsp,0x8
  407ada:	pop    rbx
  407adb:	pop    rbp
  407adc:	pop    r12
  407ade:	pop    r13
  407ae0:	ret    
  407ae1:	nop    DWORD PTR [rax+0x0]
  407ae8:	xor    eax,eax
  407aea:	lea    rsi,[rip+0x10557]        # 418048 <__sprintf_chk@plt+0x15a68>
  407af1:	call   407190 <__sprintf_chk@plt+0x4bb0>
  407af6:	xor    eax,eax
  407af8:	jmp    407a39 <__sprintf_chk@plt+0x5459>
  407afd:	nop    DWORD PTR [rax]
  407b00:	push   r15
  407b02:	push   r14
  407b04:	push   r13
  407b06:	push   r12
  407b08:	mov    r12,rdi
  407b0b:	push   rbp
  407b0c:	push   rbx
  407b0d:	sub    rsp,0x8
  407b11:	mov    rbx,QWORD PTR [rdi+0x38]
  407b15:	movzx  edx,BYTE PTR [rbx+0x9]
  407b19:	mov    eax,edx
  407b1b:	or     eax,0x4
  407b1e:	mov    BYTE PTR [rbx+0x9],al
  407b21:	movzx  eax,BYTE PTR [rbx+0x8]
  407b25:	cmp    al,0x6
  407b27:	je     407e68 <__sprintf_chk@plt+0x5888>
  407b2d:	jbe    407c50 <__sprintf_chk@plt+0x5670>
  407b33:	cmp    al,0x8
  407b35:	je     407d20 <__sprintf_chk@plt+0x5740>
  407b3b:	cmp    al,0x9
  407b3d:	jne    407cd0 <__sprintf_chk@plt+0x56f0>
  407b43:	mov    rax,QWORD PTR [rbx+0x68]
  407b47:	mov    QWORD PTR [rdi+0x38],rax
  407b4b:	mov    rax,QWORD PTR [rbx+0x40]
  407b4f:	test   rax,rax
  407b52:	je     407b58 <__sprintf_chk@plt+0x5578>
  407b54:	and    BYTE PTR [rax+0x9],0xfc
  407b58:	mov    eax,DWORD PTR [rbx+0x4c]
  407b5b:	xor    ecx,ecx
  407b5d:	test   eax,eax
  407b5f:	jg     407cfc <__sprintf_chk@plt+0x571c>
  407b65:	nop    DWORD PTR [rax]
  407b68:	movsxd rsi,DWORD PTR [rbx+0x48]
  407b6c:	test   esi,esi
  407b6e:	jle    407ba0 <__sprintf_chk@plt+0x55c0>
  407b70:	mov    rdx,QWORD PTR [rbx+0x38]
  407b74:	lea    ecx,[rsi-0x1]
  407b77:	lea    rax,[rdx+0x8]
  407b7b:	lea    rcx,[rax+rcx*8]
  407b7f:	jmp    407b8c <__sprintf_chk@plt+0x55ac>
  407b81:	nop    DWORD PTR [rax+0x0]
  407b88:	add    rax,0x8
  407b8c:	mov    rdx,QWORD PTR [rdx]
  407b8f:	test   rdx,rdx
  407b92:	je     407b98 <__sprintf_chk@plt+0x55b8>
  407b94:	and    BYTE PTR [rdx+0x9],0xfc
  407b98:	mov    rdx,rax
  407b9b:	cmp    rcx,rax
  407b9e:	jne    407b88 <__sprintf_chk@plt+0x55a8>
  407ba0:	movsxd rdi,DWORD PTR [rbx+0x58]
  407ba4:	xor    ecx,ecx
  407ba6:	test   edi,edi
  407ba8:	jg     407bb7 <__sprintf_chk@plt+0x55d7>
  407baa:	jmp    407be1 <__sprintf_chk@plt+0x5601>
  407bac:	nop    DWORD PTR [rax+0x0]
  407bb0:	inc    rcx
  407bb3:	cmp    edi,ecx
  407bb5:	jle    407bdd <__sprintf_chk@plt+0x55fd>
  407bb7:	mov    rax,QWORD PTR [rbx+0x20]
  407bbb:	mov    rsi,QWORD PTR [rax+rcx*8]
  407bbf:	test   rsi,rsi
  407bc2:	je     407bb0 <__sprintf_chk@plt+0x55d0>
  407bc4:	test   BYTE PTR [rsi+0x9],0x3
  407bc8:	je     407bb0 <__sprintf_chk@plt+0x55d0>
  407bca:	mov    rdi,r12
  407bcd:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407bd2:	movsxd rdi,DWORD PTR [rbx+0x58]
  407bd6:	inc    rcx
  407bd9:	cmp    edi,ecx
  407bdb:	jg     407bb7 <__sprintf_chk@plt+0x55d7>
  407bdd:	movsxd rsi,DWORD PTR [rbx+0x48]
  407be1:	movsxd r8,DWORD PTR [rbx+0x5c]
  407be5:	test   r8d,r8d
  407be8:	jle    407c18 <__sprintf_chk@plt+0x5638>
  407bea:	mov    rdx,QWORD PTR [rbx+0x30]
  407bee:	lea    ecx,[r8-0x1]
  407bf2:	shl    rcx,0x4
  407bf6:	lea    rax,[rdx+0x10]
  407bfa:	add    rcx,rax
  407bfd:	jmp    407c04 <__sprintf_chk@plt+0x5624>
  407bff:	nop
  407c00:	add    rax,0x10
  407c04:	mov    rdx,QWORD PTR [rdx]
  407c07:	test   rdx,rdx
  407c0a:	je     407c10 <__sprintf_chk@plt+0x5630>
  407c0c:	and    BYTE PTR [rdx+0x9],0xfc
  407c10:	mov    rdx,rax
  407c13:	cmp    rcx,rax
  407c16:	jne    407c00 <__sprintf_chk@plt+0x5620>
  407c18:	movsxd rax,DWORD PTR [rbx+0x54]
  407c1c:	movsxd rdx,DWORD PTR [rbx+0x50]
  407c20:	add    rsi,rdi
  407c23:	lea    rdx,[rdx+rax*1+0x1e]
  407c28:	movsxd rax,DWORD PTR [rbx+0x4c]
  407c2c:	add    rsp,0x8
  407c30:	pop    rbx
  407c31:	pop    rbp
  407c32:	pop    r12
  407c34:	add    r8,rax
  407c37:	pop    r13
  407c39:	lea    rax,[rdx+r8*4]
  407c3d:	lea    rax,[rax+rsi*2]
  407c41:	pop    r14
  407c43:	shl    rax,0x2
  407c47:	pop    r15
  407c49:	ret    
  407c4a:	nop    WORD PTR [rax+rax*1+0x0]
  407c50:	cmp    al,0x5
  407c52:	jne    407cd0 <__sprintf_chk@plt+0x56f0>
  407c54:	mov    rax,QWORD PTR [rbx+0x30]
  407c58:	mov    QWORD PTR [rdi+0x38],rax
  407c5c:	mov    rdi,QWORD PTR [rbx+0x10]
  407c60:	test   rdi,rdi
  407c63:	je     407c79 <__sprintf_chk@plt+0x5699>
  407c65:	test   BYTE PTR [rdi+0x9],0x3
  407c69:	jne    407f68 <__sprintf_chk@plt+0x5988>
  407c6f:	test   BYTE PTR [rdi+0xa],0x8
  407c73:	je     408058 <__sprintf_chk@plt+0x5a78>
  407c79:	xor    ebp,ebp
  407c7b:	movsxd r8,DWORD PTR [rbx+0x38]
  407c7f:	mov    eax,r8d
  407c82:	mov    rcx,r8
  407c85:	sub    r8,rax
  407c88:	shl    rcx,0x4
  407c8c:	shl    r8,0x4
  407c90:	sub    rcx,0x10
  407c94:	sub    r8,0x10
  407c98:	jmp    407ca4 <__sprintf_chk@plt+0x56c4>
  407c9a:	nop    WORD PTR [rax+rax*1+0x0]
  407ca0:	sub    rcx,0x10
  407ca4:	cmp    r8,rcx
  407ca7:	je     407f88 <__sprintf_chk@plt+0x59a8>
  407cad:	mov    rax,QWORD PTR [rbx+0x18]
  407cb1:	add    rax,rcx
  407cb4:	cmp    DWORD PTR [rax+0x8],0x3
  407cb8:	jle    407ca0 <__sprintf_chk@plt+0x56c0>
  407cba:	mov    rsi,QWORD PTR [rax]
  407cbd:	test   BYTE PTR [rsi+0x9],0x3
  407cc1:	je     407ca0 <__sprintf_chk@plt+0x56c0>
  407cc3:	mov    rdi,r12
  407cc6:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407ccb:	jmp    407ca0 <__sprintf_chk@plt+0x56c0>
  407ccd:	nop    DWORD PTR [rax]
  407cd0:	xor    eax,eax
  407cd2:	add    rsp,0x8
  407cd6:	pop    rbx
  407cd7:	pop    rbp
  407cd8:	pop    r12
  407cda:	pop    r13
  407cdc:	pop    r14
  407cde:	pop    r15
  407ce0:	ret    
  407ce1:	nop    DWORD PTR [rax+0x0]
  407ce8:	mov    rdi,r12
  407ceb:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407cf0:	inc    rcx
  407cf3:	cmp    DWORD PTR [rbx+0x4c],ecx
  407cf6:	jle    407b68 <__sprintf_chk@plt+0x5588>
  407cfc:	mov    rax,rcx
  407cff:	shl    rax,0x4
  407d03:	add    rax,QWORD PTR [rbx+0x10]
  407d07:	cmp    DWORD PTR [rax+0x8],0x3
  407d0b:	jle    407cf0 <__sprintf_chk@plt+0x5710>
  407d0d:	mov    rsi,QWORD PTR [rax]
  407d10:	test   BYTE PTR [rsi+0x9],0x3
  407d14:	je     407cf0 <__sprintf_chk@plt+0x5710>
  407d16:	jmp    407ce8 <__sprintf_chk@plt+0x5708>
  407d18:	nop    DWORD PTR [rax+rax*1+0x0]
  407d20:	mov    rax,QWORD PTR [rbx+0xa0]
  407d27:	and    edx,0xfffffffb
  407d2a:	mov    QWORD PTR [rdi+0x38],rax
  407d2e:	mov    rax,QWORD PTR [rdi+0x40]
  407d32:	cmp    DWORD PTR [rbx+0x80],0x3
  407d39:	mov    QWORD PTR [rbx+0xa0],rax
  407d40:	mov    QWORD PTR [rdi+0x40],rbx
  407d44:	mov    BYTE PTR [rbx+0x9],dl
  407d47:	jle    407d57 <__sprintf_chk@plt+0x5777>
  407d49:	mov    rsi,QWORD PTR [rbx+0x78]
  407d4d:	test   BYTE PTR [rsi+0x9],0x3
  407d51:	jne    408110 <__sprintf_chk@plt+0x5b30>
  407d57:	mov    rsi,QWORD PTR [rbx+0x10]
  407d5b:	mov    rdi,QWORD PTR [rbx+0x50]
  407d5f:	mov    rdx,QWORD PTR [rbx+0x28]
  407d63:	mov    rbp,rsi
  407d66:	cmp    rdi,rdx
  407d69:	ja     407d84 <__sprintf_chk@plt+0x57a4>
  407d6b:	mov    rax,rdi
  407d6e:	xchg   ax,ax
  407d70:	mov    rcx,QWORD PTR [rax+0x10]
  407d74:	cmp    rbp,rcx
  407d77:	cmovb  rbp,rcx
  407d7b:	add    rax,0x28
  407d7f:	cmp    rax,rdx
  407d82:	jbe    407d70 <__sprintf_chk@plt+0x5790>
  407d84:	mov    rcx,QWORD PTR [rbx+0x40]
  407d88:	cmp    rsi,rcx
  407d8b:	ja     407daa <__sprintf_chk@plt+0x57ca>
  407d8d:	mov    r12,rcx
  407d90:	jmp    407dcf <__sprintf_chk@plt+0x57ef>
  407d92:	nop    WORD PTR [rax+rax*1+0x0]
  407d98:	mov    rdi,r12
  407d9b:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407da0:	add    rcx,0x10
  407da4:	cmp    rcx,QWORD PTR [rbx+0x10]
  407da8:	jae    407dc3 <__sprintf_chk@plt+0x57e3>
  407daa:	cmp    DWORD PTR [rcx+0x8],0x3
  407dae:	jle    407da0 <__sprintf_chk@plt+0x57c0>
  407db0:	mov    rsi,QWORD PTR [rcx]
  407db3:	test   BYTE PTR [rsi+0x9],0x3
  407db7:	jne    407d98 <__sprintf_chk@plt+0x57b8>
  407db9:	add    rcx,0x10
  407dbd:	cmp    rcx,QWORD PTR [rbx+0x10]
  407dc1:	jb     407daa <__sprintf_chk@plt+0x57ca>
  407dc3:	mov    rdx,QWORD PTR [rbx+0x28]
  407dc7:	mov    rdi,QWORD PTR [rbx+0x50]
  407dcb:	mov    r12,QWORD PTR [rbx+0x40]
  407dcf:	cmp    rbp,rcx
  407dd2:	jb     407de8 <__sprintf_chk@plt+0x5808>
  407dd4:	nop    DWORD PTR [rax+0x0]
  407dd8:	mov    DWORD PTR [rcx+0x8],0x0
  407ddf:	add    rcx,0x10
  407de3:	cmp    rcx,rbp
  407de6:	jbe    407dd8 <__sprintf_chk@plt+0x57f8>
  407de8:	movsxd rsi,DWORD PTR [rbx+0x5c]
  407dec:	cmp    esi,0x4e20
  407df2:	jg     407f58 <__sprintf_chk@plt+0x5978>
  407df8:	sub    rdx,rdi
  407dfb:	mov    rax,rdx
  407dfe:	sar    rax,0x3
  407e02:	imul   eax,eax,0xccccccd
  407e08:	mov    edx,0x10
  407e0d:	shl    eax,0x2
  407e10:	cmp    eax,0x10
  407e13:	cmovl  eax,edx
  407e16:	cmp    esi,eax
  407e18:	jg     408158 <__sprintf_chk@plt+0x5b78>
  407e1e:	sub    rbp,r12
  407e21:	sar    rbp,0x4
  407e25:	shl    ebp,0x2
  407e28:	cmp    ebp,0x5a
  407e2b:	mov    edx,0x5a
  407e30:	movsxd rax,DWORD PTR [rbx+0x58]
  407e34:	cmovl  ebp,edx
  407e37:	cmp    ebp,eax
  407e39:	jl     408140 <__sprintf_chk@plt+0x5b60>
  407e3f:	movsxd rsi,DWORD PTR [rbx+0x5c]
  407e43:	add    rsp,0x8
  407e47:	pop    rbx
  407e48:	pop    rbp
  407e49:	pop    r12
  407e4b:	pop    r13
  407e4d:	lea    rdx,[rsi+rsi*4]
  407e51:	shl    rax,0x4
  407e55:	pop    r14
  407e57:	lea    rax,[rax+rdx*8+0xb8]
  407e5f:	pop    r15
  407e61:	ret    
  407e62:	nop    WORD PTR [rax+rax*1+0x0]
  407e68:	mov    rax,QWORD PTR [rbx+0x10]
  407e6c:	mov    rsi,QWORD PTR [rbx+0x18]
  407e70:	mov    QWORD PTR [rdi+0x38],rax
  407e74:	test   BYTE PTR [rsi+0x9],0x3
  407e78:	jne    407f10 <__sprintf_chk@plt+0x5930>
  407e7e:	cmp    BYTE PTR [rbx+0xa],0x0
  407e82:	je     407ed0 <__sprintf_chk@plt+0x58f0>
  407e84:	cmp    BYTE PTR [rbx+0xb],0x0
  407e88:	je     408170 <__sprintf_chk@plt+0x5b90>
  407e8e:	xor    ecx,ecx
  407e90:	jmp    407ea7 <__sprintf_chk@plt+0x58c7>
  407e92:	nop    WORD PTR [rax+rax*1+0x0]
  407e98:	movzx  eax,BYTE PTR [rbx+0xb]
  407e9c:	inc    rcx
  407e9f:	cmp    eax,ecx
  407ea1:	jle    407f40 <__sprintf_chk@plt+0x5960>
  407ea7:	mov    rax,rcx
  407eaa:	shl    rax,0x4
  407eae:	cmp    DWORD PTR [rbx+rax*1+0x30],0x3
  407eb3:	jle    407e98 <__sprintf_chk@plt+0x58b8>
  407eb5:	mov    rsi,QWORD PTR [rbx+rax*1+0x28]
  407eba:	test   BYTE PTR [rsi+0x9],0x3
  407ebe:	je     407e98 <__sprintf_chk@plt+0x58b8>
  407ec0:	mov    rdi,r12
  407ec3:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407ec8:	jmp    407e98 <__sprintf_chk@plt+0x58b8>
  407eca:	nop    WORD PTR [rax+rax*1+0x0]
  407ed0:	mov    rsi,QWORD PTR [rbx+0x20]
  407ed4:	test   BYTE PTR [rsi+0x9],0x3
  407ed8:	jne    407f30 <__sprintf_chk@plt+0x5950>
  407eda:	xor    eax,eax
  407edc:	cmp    BYTE PTR [rbx+0xb],0x0
  407ee0:	je     407f20 <__sprintf_chk@plt+0x5940>
  407ee2:	xor    ecx,ecx
  407ee4:	jmp    407efb <__sprintf_chk@plt+0x591b>
  407ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ef0:	movzx  eax,BYTE PTR [rbx+0xb]
  407ef4:	inc    rcx
  407ef7:	cmp    eax,ecx
  407ef9:	jle    407f40 <__sprintf_chk@plt+0x5960>
  407efb:	mov    rsi,QWORD PTR [rbx+rcx*8+0x28]
  407f00:	test   BYTE PTR [rsi+0x9],0x3
  407f04:	je     407ef0 <__sprintf_chk@plt+0x5910>
  407f06:	mov    rdi,r12
  407f09:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407f0e:	jmp    407ef0 <__sprintf_chk@plt+0x5910>
  407f10:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407f15:	jmp    407e7e <__sprintf_chk@plt+0x589e>
  407f1a:	nop    WORD PTR [rax+rax*1+0x0]
  407f20:	lea    eax,[rax*8+0x28]
  407f27:	cdqe   
  407f29:	jmp    407cd2 <__sprintf_chk@plt+0x56f2>
  407f2e:	xchg   ax,ax
  407f30:	mov    rdi,r12
  407f33:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407f38:	cmp    BYTE PTR [rbx+0xb],0x0
  407f3c:	jne    407ee2 <__sprintf_chk@plt+0x5902>
  407f3e:	xor    eax,eax
  407f40:	cmp    BYTE PTR [rbx+0xa],0x0
  407f44:	je     407f20 <__sprintf_chk@plt+0x5940>
  407f46:	shl    eax,0x4
  407f49:	add    eax,0x28
  407f4c:	cdqe   
  407f4e:	jmp    407cd2 <__sprintf_chk@plt+0x56f2>
  407f53:	nop    DWORD PTR [rax+rax*1+0x0]
  407f58:	movsxd rax,DWORD PTR [rbx+0x58]
  407f5c:	jmp    407e43 <__sprintf_chk@plt+0x5863>
  407f61:	nop    DWORD PTR [rax+0x0]
  407f68:	mov    rsi,rdi
  407f6b:	mov    rdi,r12
  407f6e:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  407f73:	mov    rdi,QWORD PTR [rbx+0x10]
  407f77:	test   rdi,rdi
  407f7a:	jne    407c6f <__sprintf_chk@plt+0x568f>
  407f80:	jmp    407c79 <__sprintf_chk@plt+0x5699>
  407f85:	nop    DWORD PTR [rax]
  407f88:	mov    r11d,ebp
  407f8b:	xor    r10d,r10d
  407f8e:	movzx  eax,BYTE PTR [rbx+0xb]
  407f92:	mov    edx,0x1
  407f97:	shlx   rdx,rdx,rax
  407f9c:	movsxd rax,edx
  407f9f:	mov    edx,edx
  407fa1:	lea    rcx,[rax+rax*4]
  407fa5:	sub    rax,rdx
  407fa8:	lea    rax,[rax+rax*4]
  407fac:	lea    rcx,[rcx*8-0x28]
  407fb4:	lea    r9,[rax*8-0x28]
  407fbc:	jmp    407fd3 <__sprintf_chk@plt+0x59f3>
  407fbe:	xchg   ax,ax
  407fc0:	cmp    DWORD PTR [r8+0x18],0x3
  407fc5:	jle    407fcf <__sprintf_chk@plt+0x59ef>
  407fc7:	mov    DWORD PTR [r8+0x18],0xb
  407fcf:	sub    rcx,0x28
  407fd3:	cmp    rcx,r9
  407fd6:	je     408020 <__sprintf_chk@plt+0x5a40>
  407fd8:	mov    r8,QWORD PTR [rbx+0x20]
  407fdc:	add    r8,rcx
  407fdf:	mov    edx,DWORD PTR [r8+0x8]
  407fe3:	test   edx,edx
  407fe5:	je     407fc0 <__sprintf_chk@plt+0x59e0>
  407fe7:	test   ebp,ebp
  407fe9:	jne    408000 <__sprintf_chk@plt+0x5a20>
  407feb:	cmp    DWORD PTR [r8+0x18],0x3
  407ff0:	jle    408000 <__sprintf_chk@plt+0x5a20>
  407ff2:	mov    rsi,QWORD PTR [r8+0x10]
  407ff6:	test   BYTE PTR [rsi+0x9],0x3
  407ffa:	jne    408130 <__sprintf_chk@plt+0x5b50>
  408000:	test   r10d,r10d
  408003:	jne    407fcf <__sprintf_chk@plt+0x59ef>
  408005:	cmp    DWORD PTR [r8+0x8],0x3
  40800a:	jle    407fcf <__sprintf_chk@plt+0x59ef>
  40800c:	mov    rsi,QWORD PTR [r8]
  40800f:	test   BYTE PTR [rsi+0x9],0x3
  408013:	je     407fcf <__sprintf_chk@plt+0x59ef>
  408015:	mov    rdi,r12
  408018:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40801d:	jmp    407fcf <__sprintf_chk@plt+0x59ef>
  40801f:	nop
  408020:	test   r11d,r11d
  408023:	jne    408120 <__sprintf_chk@plt+0x5b40>
  408029:	movsxd rax,DWORD PTR [rbx+0x38]
  40802d:	movzx  ecx,BYTE PTR [rbx+0xb]
  408031:	add    rsp,0x8
  408035:	pop    rbx
  408036:	pop    rbp
  408037:	pop    r12
  408039:	pop    r13
  40803b:	add    rax,0x4
  40803f:	shl    rax,0x4
  408043:	mov    edx,0x28
  408048:	pop    r14
  40804a:	shlx   rdx,rdx,rcx
  40804f:	pop    r15
  408051:	add    rax,rdx
  408054:	ret    
  408055:	nop    DWORD PTR [rax]
  408058:	mov    rdx,QWORD PTR [r12+0x140]
  408060:	mov    esi,0x3
  408065:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  40806a:	test   rax,rax
  40806d:	je     407c79 <__sprintf_chk@plt+0x5699>
  408073:	cmp    DWORD PTR [rax+0x8],0x4
  408077:	jne    407c79 <__sprintf_chk@plt+0x5699>
  40807d:	mov    r13,QWORD PTR [rax]
  408080:	mov    esi,0x6b
  408085:	add    r13,0x18
  408089:	mov    rdi,r13
  40808c:	call   4023f0 <strchr@plt>
  408091:	test   rax,rax
  408094:	mov    esi,0x76
  408099:	mov    rdi,r13
  40809c:	setne  r14b
  4080a0:	mov    r15,rax
  4080a3:	call   4023f0 <strchr@plt>
  4080a8:	test   rax,rax
  4080ab:	setne  dil
  4080af:	or     r15,rax
  4080b2:	movzx  ebp,r14b
  4080b6:	mov    rsi,rax
  4080b9:	movzx  ecx,dil
  4080bd:	je     407c7b <__sprintf_chk@plt+0x569b>
  4080c3:	shl    ecx,0x4
  4080c6:	lea    edx,[rbp*8+0x0]
  4080cd:	or     edx,ecx
  4080cf:	movzx  ecx,BYTE PTR [rbx+0x9]
  4080d3:	mov    eax,edx
  4080d5:	and    ecx,0xffffffe7
  4080d8:	or     eax,ecx
  4080da:	mov    BYTE PTR [rbx+0x9],al
  4080dd:	mov    rdx,QWORD PTR [r12+0x48]
  4080e2:	mov    QWORD PTR [rbx+0x30],rdx
  4080e6:	mov    QWORD PTR [r12+0x48],rbx
  4080eb:	test   r14b,r14b
  4080ee:	je     4080f5 <__sprintf_chk@plt+0x5b15>
  4080f0:	test   dil,dil
  4080f3:	jne    408124 <__sprintf_chk@plt+0x5b44>
  4080f5:	test   rsi,rsi
  4080f8:	je     407c7b <__sprintf_chk@plt+0x569b>
  4080fe:	mov    r11d,0x1
  408104:	mov    r10d,0x1
  40810a:	jmp    407f8e <__sprintf_chk@plt+0x59ae>
  40810f:	nop
  408110:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  408115:	jmp    407d57 <__sprintf_chk@plt+0x5777>
  40811a:	nop    WORD PTR [rax+rax*1+0x0]
  408120:	movzx  eax,BYTE PTR [rbx+0x9]
  408124:	and    eax,0xfffffffb
  408127:	mov    BYTE PTR [rbx+0x9],al
  40812a:	jmp    408029 <__sprintf_chk@plt+0x5a49>
  40812f:	nop
  408130:	mov    rdi,r12
  408133:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  408138:	jmp    408000 <__sprintf_chk@plt+0x5a20>
  40813d:	nop    DWORD PTR [rax]
  408140:	sar    eax,1
  408142:	mov    esi,eax
  408144:	mov    rdi,rbx
  408147:	call   407a00 <__sprintf_chk@plt+0x5420>
  40814c:	movsxd rax,DWORD PTR [rbx+0x58]
  408150:	jmp    407e3f <__sprintf_chk@plt+0x585f>
  408155:	nop    DWORD PTR [rax]
  408158:	sar    esi,1
  40815a:	mov    rdi,rbx
  40815d:	call   407310 <__sprintf_chk@plt+0x4d30>
  408162:	jmp    407e1e <__sprintf_chk@plt+0x583e>
  408167:	nop    WORD PTR [rax+rax*1+0x0]
  408170:	xor    eax,eax
  408172:	jmp    407f46 <__sprintf_chk@plt+0x5966>
  408177:	nop    WORD PTR [rax+rax*1+0x0]
  408180:	mov    eax,DWORD PTR [rdi+0x58]
  408183:	cmp    eax,esi
  408185:	jl     408190 <__sprintf_chk@plt+0x5bb0>
  408187:	lea    esi,[rax+rax*1]
  40818a:	jmp    407a00 <__sprintf_chk@plt+0x5420>
  40818f:	nop
  408190:	add    esi,eax
  408192:	jmp    407a00 <__sprintf_chk@plt+0x5420>
  408197:	nop    WORD PTR [rax+rax*1+0x0]
  4081a0:	push   rbx
  4081a1:	mov    rbx,rdi
  4081a4:	mov    rax,QWORD PTR [rdi+0xb0]
  4081ab:	test   rax,rax
  4081ae:	je     4081fe <__sprintf_chk@plt+0x5c1e>
  4081b0:	add    rax,QWORD PTR [rdi+0x40]
  4081b4:	cmp    DWORD PTR [rax+0x8],0x6
  4081b8:	jne    40820b <__sprintf_chk@plt+0x5c2b>
  4081ba:	mov    rsi,QWORD PTR [rdi+0x10]
  4081be:	mov    rdx,QWORD PTR [rsi-0x10]
  4081c2:	mov    QWORD PTR [rsi],rdx
  4081c5:	mov    edx,DWORD PTR [rsi-0x8]
  4081c8:	mov    DWORD PTR [rsi+0x8],edx
  4081cb:	mov    rdx,QWORD PTR [rax]
  4081ce:	mov    eax,DWORD PTR [rax+0x8]
  4081d1:	mov    QWORD PTR [rsi-0x10],rdx
  4081d5:	mov    DWORD PTR [rsi-0x8],eax
  4081d8:	mov    rax,QWORD PTR [rdi+0x38]
  4081dc:	sub    rax,rsi
  4081df:	cmp    rax,0x10
  4081e3:	jle    408215 <__sprintf_chk@plt+0x5c35>
  4081e5:	lea    rax,[rsi+0x10]
  4081e9:	mov    QWORD PTR [rbx+0x10],rax
  4081ed:	sub    rsi,0x10
  4081f1:	mov    edx,0x1
  4081f6:	mov    rdi,rbx
  4081f9:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  4081fe:	mov    esi,0x2
  408203:	mov    rdi,rbx
  408206:	call   404570 <__sprintf_chk@plt+0x1f90>
  40820b:	mov    esi,0x5
  408210:	call   404570 <__sprintf_chk@plt+0x1f90>
  408215:	mov    esi,0x1
  40821a:	call   408180 <__sprintf_chk@plt+0x5ba0>
  40821f:	mov    rsi,QWORD PTR [rbx+0x10]
  408223:	jmp    4081e5 <__sprintf_chk@plt+0x5c05>
  408225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408230:	push   r12
  408232:	mov    r12,rsi
  408235:	push   rbp
  408236:	push   rbx
  408237:	mov    rbx,rdi
  40823a:	mov    rbp,QWORD PTR [rdi+0x10]
  40823e:	mov    rdi,rsi
  408241:	call   4023d0 <strlen@plt>
  408246:	mov    rdx,rax
  408249:	mov    rsi,r12
  40824c:	mov    rdi,rbx
  40824f:	call   407490 <__sprintf_chk@plt+0x4eb0>
  408254:	mov    QWORD PTR [rbp+0x0],rax
  408258:	mov    rax,QWORD PTR [rbx+0x38]
  40825c:	mov    DWORD PTR [rbp+0x8],0x4
  408263:	sub    rax,QWORD PTR [rbx+0x10]
  408267:	cmp    rax,0x10
  40826b:	jle    408280 <__sprintf_chk@plt+0x5ca0>
  40826d:	add    QWORD PTR [rbx+0x10],0x10
  408272:	pop    rbx
  408273:	pop    rbp
  408274:	pop    r12
  408276:	ret    
  408277:	nop    WORD PTR [rax+rax*1+0x0]
  408280:	mov    rdi,rbx
  408283:	mov    esi,0x1
  408288:	call   408180 <__sprintf_chk@plt+0x5ba0>
  40828d:	add    QWORD PTR [rbx+0x10],0x10
  408292:	pop    rbx
  408293:	pop    rbp
  408294:	pop    r12
  408296:	ret    
  408297:	nop    WORD PTR [rax+rax*1+0x0]
  4082a0:	xor    eax,eax
  4082a2:	cmp    esi,0x1f40
  4082a8:	jg     408318 <__sprintf_chk@plt+0x5d38>
  4082aa:	push   rbp
  4082ab:	movsxd rbp,esi
  4082ae:	push   rbx
  4082af:	sub    rsp,0x8
  4082b3:	mov    rcx,QWORD PTR [rdi+0x10]
  4082b7:	mov    rdx,rcx
  4082ba:	sub    rdx,QWORD PTR [rdi+0x18]
  4082be:	sar    rdx,0x4
  4082c2:	add    rdx,rbp
  4082c5:	cmp    rdx,0x1f40
  4082cc:	jle    4082d8 <__sprintf_chk@plt+0x5cf8>
  4082ce:	add    rsp,0x8
  4082d2:	pop    rbx
  4082d3:	pop    rbp
  4082d4:	ret    
  4082d5:	nop    DWORD PTR [rax]
  4082d8:	test   esi,esi
  4082da:	jle    408307 <__sprintf_chk@plt+0x5d27>
  4082dc:	mov    rdx,QWORD PTR [rdi+0x38]
  4082e0:	mov    eax,esi
  4082e2:	shl    eax,0x4
  4082e5:	sub    rdx,rcx
  4082e8:	cdqe   
  4082ea:	mov    rbx,rdi
  4082ed:	cmp    rdx,rax
  4082f0:	jle    408320 <__sprintf_chk@plt+0x5d40>
  4082f2:	shl    rbp,0x4
  4082f6:	mov    rax,QWORD PTR [rbx+0x28]
  4082fa:	add    rcx,rbp
  4082fd:	cmp    QWORD PTR [rax+0x10],rcx
  408301:	jae    408307 <__sprintf_chk@plt+0x5d27>
  408303:	mov    QWORD PTR [rax+0x10],rcx
  408307:	add    rsp,0x8
  40830b:	pop    rbx
  40830c:	mov    eax,0x1
  408311:	pop    rbp
  408312:	ret    
  408313:	nop    DWORD PTR [rax+rax*1+0x0]
  408318:	ret    
  408319:	nop    DWORD PTR [rax+0x0]
  408320:	call   408180 <__sprintf_chk@plt+0x5ba0>
  408325:	mov    rcx,QWORD PTR [rbx+0x10]
  408329:	jmp    4082f2 <__sprintf_chk@plt+0x5d12>
  40832b:	nop    DWORD PTR [rax+rax*1+0x0]
  408330:	push   r15
  408332:	mov    r15,rdi
  408335:	mov    rdi,rdx
  408338:	push   r14
  40833a:	mov    r14,rcx
  40833d:	push   r13
  40833f:	mov    r13,rsi
  408342:	push   r12
  408344:	mov    r12,rdx
  408347:	push   rbp
  408348:	push   rbx
  408349:	mov    ebx,r8d
  40834c:	sub    rsp,0x48
  408350:	mov    rsi,rsp
  408353:	mov    rax,QWORD PTR fs:0x28
  40835c:	mov    QWORD PTR [rsp+0x38],rax
  408361:	xor    eax,eax
  408363:	call   403080 <__sprintf_chk@plt+0xaa0>
  408368:	test   rax,rax
  40836b:	je     4083b0 <__sprintf_chk@plt+0x5dd0>
  40836d:	lea    rsi,[rsp+0x10]
  408372:	mov    rdi,r14
  408375:	mov    rbp,rax
  408378:	call   403080 <__sprintf_chk@plt+0xaa0>
  40837d:	test   rax,rax
  408380:	je     4083b0 <__sprintf_chk@plt+0x5dd0>
  408382:	sub    ebx,0x6
  408385:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  40838a:	vmovsd xmm1,QWORD PTR [rax]
  40838e:	cmp    ebx,0x5
  408391:	ja     4084f0 <__sprintf_chk@plt+0x5f10>
  408397:	lea    rdx,[rip+0xf716]        # 417ab4 <__sprintf_chk@plt+0x154d4>
  40839e:	movsxd rax,DWORD PTR [rdx+rbx*4]
  4083a2:	add    rax,rdx
  4083a5:	notrack jmp rax
  4083a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4083b0:	mov    r8d,ebx
  4083b3:	mov    rcx,r13
  4083b6:	mov    rdx,r14
  4083b9:	mov    rsi,r12
  4083bc:	mov    rdi,r15
  4083bf:	call   406930 <__sprintf_chk@plt+0x4350>
  4083c4:	test   eax,eax
  4083c6:	je     4083f0 <__sprintf_chk@plt+0x5e10>
  4083c8:	mov    rax,QWORD PTR [rsp+0x38]
  4083cd:	xor    rax,QWORD PTR fs:0x28
  4083d6:	jne    408507 <__sprintf_chk@plt+0x5f27>
  4083dc:	add    rsp,0x48
  4083e0:	pop    rbx
  4083e1:	pop    rbp
  4083e2:	pop    r12
  4083e4:	pop    r13
  4083e6:	pop    r14
  4083e8:	pop    r15
  4083ea:	ret    
  4083eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4083f0:	lea    rsi,[rsp+0x20]
  4083f5:	mov    rdi,r12
  4083f8:	call   403080 <__sprintf_chk@plt+0xaa0>
  4083fd:	test   rax,rax
  408400:	cmove  r14,r12
  408404:	lea    rax,[rip+0x16995]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40840b:	movsxd rdx,DWORD PTR [r14+0x8]
  40840f:	lea    rsi,[rip+0xebf1]        # 417007 <__sprintf_chk@plt+0x14a27>
  408416:	mov    rcx,QWORD PTR [rax+rdx*8]
  40841a:	mov    rdi,r15
  40841d:	lea    rdx,[rip+0xecbd]        # 4170e1 <__sprintf_chk@plt+0x14b01>
  408424:	xor    eax,eax
  408426:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40842b:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  40842d:	nop    DWORD PTR [rax]
  408430:	vdivsd xmm2,xmm0,xmm1
  408434:	mov    DWORD PTR [r13+0x8],0x3
  40843c:	vroundsd xmm2,xmm2,xmm2,0x9
  408442:	vfnmadd231sd xmm0,xmm2,xmm1
  408447:	vmovsd QWORD PTR [r13+0x0],xmm0
  40844d:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  408452:	nop    WORD PTR [rax+rax*1+0x0]
  408458:	vdivsd xmm0,xmm0,xmm1
  40845c:	mov    DWORD PTR [r13+0x8],0x3
  408464:	vmovsd QWORD PTR [r13+0x0],xmm0
  40846a:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  40846f:	nop
  408470:	vmulsd xmm0,xmm0,xmm1
  408474:	mov    DWORD PTR [r13+0x8],0x3
  40847c:	vmovsd QWORD PTR [r13+0x0],xmm0
  408482:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  408487:	nop    WORD PTR [rax+rax*1+0x0]
  408490:	vsubsd xmm0,xmm0,xmm1
  408494:	mov    DWORD PTR [r13+0x8],0x3
  40849c:	vmovsd QWORD PTR [r13+0x0],xmm0
  4084a2:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  4084a7:	nop    WORD PTR [rax+rax*1+0x0]
  4084b0:	call   4023b0 <pow@plt>
  4084b5:	vmovsd QWORD PTR [r13+0x0],xmm0
  4084bb:	mov    DWORD PTR [r13+0x8],0x3
  4084c3:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  4084c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084d0:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xffa8]        # 418480 <__sprintf_chk@plt+0x15ea0>
  4084d8:	mov    DWORD PTR [r13+0x8],0x3
  4084e0:	vmovsd QWORD PTR [r13+0x0],xmm0
  4084e6:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  4084eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4084f0:	vaddsd xmm0,xmm0,xmm1
  4084f4:	mov    DWORD PTR [r13+0x8],0x3
  4084fc:	vmovsd QWORD PTR [r13+0x0],xmm0
  408502:	jmp    4083c8 <__sprintf_chk@plt+0x5de8>
  408507:	call   4023e0 <__stack_chk_fail@plt>
  40850c:	nop    DWORD PTR [rax+0x0]
  408510:	push   r14
  408512:	push   r13
  408514:	push   r12
  408516:	push   rbp
  408517:	mov    rbp,rsi
  40851a:	push   rbx
  40851b:	test   edx,edx
  40851d:	jne    408540 <__sprintf_chk@plt+0x5f60>
  40851f:	lea    rax,[rip+0xfa7a]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  408526:	mov    QWORD PTR [rsi+0x20],rax
  40852a:	xor    r12d,r12d
  40852d:	pop    rbx
  40852e:	mov    BYTE PTR [rbp+0xb],r12b
  408532:	mov    QWORD PTR [rbp+0x28],rax
  408536:	pop    rbp
  408537:	pop    r12
  408539:	pop    r13
  40853b:	pop    r14
  40853d:	ret    
  40853e:	xchg   ax,ax
  408540:	dec    edx
  408542:	mov    r14,rdi
  408545:	mov    eax,0xffffffff
  40854a:	cmp    edx,0xff
  408550:	jbe    408566 <__sprintf_chk@plt+0x5f86>
  408552:	nop    WORD PTR [rax+rax*1+0x0]
  408558:	shr    edx,0x8
  40855b:	add    eax,0x8
  40855e:	cmp    edx,0xff
  408564:	ja     408558 <__sprintf_chk@plt+0x5f78>
  408566:	lea    rcx,[rip+0xf913]        # 417e80 <__sprintf_chk@plt+0x158a0>
  40856d:	movzx  edx,BYTE PTR [rcx+rdx*1]
  408571:	lea    r12d,[rax+rdx*1+0x1]
  408576:	cmp    r12d,0x1e
  40857a:	jg     408628 <__sprintf_chk@plt+0x6048>
  408580:	mov    r13d,0x1
  408586:	shlx   r13,r13,r12
  40858b:	movsxd rax,r13d
  40858e:	lea    rax,[rax+rax*4]
  408592:	lea    rbx,[rax*8+0x0]
  40859a:	cmp    r13d,0xffffffff
  40859e:	jl     408600 <__sprintf_chk@plt+0x6020>
  4085a0:	mov    rcx,rbx
  4085a3:	xor    edx,edx
  4085a5:	xor    esi,esi
  4085a7:	mov    rdi,r14
  4085aa:	call   404640 <__sprintf_chk@plt+0x2060>
  4085af:	mov    QWORD PTR [rbp+0x20],rax
  4085b3:	test   r13d,r13d
  4085b6:	jle    4085ee <__sprintf_chk@plt+0x600e>
  4085b8:	lea    ecx,[r13-0x1]
  4085bc:	lea    rcx,[rcx+rcx*4]
  4085c0:	lea    rdx,[rax+0x8]
  4085c4:	lea    rcx,[rax+rcx*8+0x30]
  4085c9:	nop    DWORD PTR [rax+0x0]
  4085d0:	mov    QWORD PTR [rdx+0x18],0x0
  4085d8:	mov    DWORD PTR [rdx+0x10],0x0
  4085df:	mov    DWORD PTR [rdx],0x0
  4085e5:	add    rdx,0x28
  4085e9:	cmp    rdx,rcx
  4085ec:	jne    4085d0 <__sprintf_chk@plt+0x5ff0>
  4085ee:	add    rax,rbx
  4085f1:	jmp    40852d <__sprintf_chk@plt+0x5f4d>
  4085f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408600:	xor    eax,eax
  408602:	lea    rsi,[rip+0xfa3f]        # 418048 <__sprintf_chk@plt+0x15a68>
  408609:	mov    rdi,r14
  40860c:	call   407190 <__sprintf_chk@plt+0x4bb0>
  408611:	mov    QWORD PTR [rbp+0x20],0x0
  408619:	mov    rax,rbx
  40861c:	jmp    40852d <__sprintf_chk@plt+0x5f4d>
  408621:	nop    DWORD PTR [rax+0x0]
  408628:	lea    rsi,[rip+0xeb3f]        # 41716e <__sprintf_chk@plt+0x14b8e>
  40862f:	mov    rdi,r14
  408632:	xor    eax,eax
  408634:	call   407190 <__sprintf_chk@plt+0x4bb0>
  408639:	jmp    408580 <__sprintf_chk@plt+0x5fa0>
  40863e:	xchg   ax,ax
  408640:	push   r13
  408642:	mov    ecx,0x40
  408647:	mov    r13d,esi
  40864a:	push   r12
  40864c:	xor    esi,esi
  40864e:	mov    r12d,edx
  408651:	push   rbp
  408652:	xor    edx,edx
  408654:	mov    rbp,rdi
  408657:	push   rbx
  408658:	sub    rsp,0x8
  40865c:	call   404640 <__sprintf_chk@plt+0x2060>
  408661:	mov    rbx,rax
  408664:	mov    rax,QWORD PTR [rbp+0x20]
  408668:	lea    rsi,[rbx+0x18]
  40866c:	mov    rdx,QWORD PTR [rax+0x28]
  408670:	mov    ecx,r13d
  408673:	mov    QWORD PTR [rbx],rdx
  408676:	mov    QWORD PTR [rax+0x28],rbx
  40867a:	lea    rdx,[rbx+0x38]
  40867e:	movzx  eax,BYTE PTR [rax+0x20]
  408682:	mov    BYTE PTR [rbx+0x8],0x5
  408686:	and    eax,0x3
  408689:	mov    BYTE PTR [rbx+0x9],al
  40868c:	mov    eax,0xff
  408691:	mov    WORD PTR [rbx+0xa],ax
  408695:	lea    rax,[rip+0xf904]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  40869c:	mov    QWORD PTR [rbx+0x20],rax
  4086a0:	mov    QWORD PTR [rbx+0x10],0x0
  4086a8:	mov    QWORD PTR [rbx+0x18],0x0
  4086b0:	mov    DWORD PTR [rbx+0x38],0x0
  4086b7:	mov    rdi,rbp
  4086ba:	call   407970 <__sprintf_chk@plt+0x5390>
  4086bf:	mov    edx,r12d
  4086c2:	mov    rsi,rbx
  4086c5:	mov    rdi,rbp
  4086c8:	call   408510 <__sprintf_chk@plt+0x5f30>
  4086cd:	add    rsp,0x8
  4086d1:	mov    rax,rbx
  4086d4:	pop    rbx
  4086d5:	pop    rbp
  4086d6:	pop    r12
  4086d8:	pop    r13
  4086da:	ret    
  4086db:	nop    DWORD PTR [rax+rax*1+0x0]
  4086e0:	endbr64 
  4086e4:	push   r15
  4086e6:	mov    ecx,0x140
  4086eb:	xor    edx,edx
  4086ed:	push   r14
  4086ef:	xor    esi,esi
  4086f1:	lea    r15,[rip+0xe9ff]        # 4170f7 <__sprintf_chk@plt+0x14b17>
  4086f8:	push   r13
  4086fa:	lea    r13,[rip+0x1603f]        # 41e740 <__sprintf_chk@plt+0x1c160>
  408701:	push   r12
  408703:	push   rbp
  408704:	push   rbx
  408705:	mov    rbx,rdi
  408708:	sub    rsp,0x8
  40870c:	mov    r12,QWORD PTR [rdi+0x20]
  408710:	call   404640 <__sprintf_chk@plt+0x2060>
  408715:	mov    QWORD PTR [rbx+0x50],rax
  408719:	mov    QWORD PTR [rbx+0x28],rax
  40871d:	add    rax,0x118
  408723:	mov    DWORD PTR [rbx+0x5c],0x8
  40872a:	mov    QWORD PTR [rbx+0x48],rax
  40872e:	mov    ecx,0x2d0
  408733:	xor    edx,edx
  408735:	xor    esi,esi
  408737:	mov    rdi,rbx
  40873a:	call   404640 <__sprintf_chk@plt+0x2060>
  40873f:	lea    rdx,[rax+0x270]
  408746:	mov    QWORD PTR [rbx+0x38],rdx
  40874a:	mov    rdx,QWORD PTR [rbx+0x28]
  40874e:	lea    rcx,[rax+0x10]
  408752:	mov    QWORD PTR [rbx+0x40],rax
  408756:	mov    DWORD PTR [rbx+0x58],0x2d
  40875d:	mov    QWORD PTR [rdx+0x8],rax
  408761:	mov    QWORD PTR [rbx+0x10],rcx
  408765:	add    rax,0x150
  40876b:	mov    DWORD PTR [rax-0x148],0x0
  408775:	mov    QWORD PTR [rdx],rcx
  408778:	mov    QWORD PTR [rbx+0x18],rcx
  40877c:	mov    QWORD PTR [rdx+0x10],rax
  408780:	xor    esi,esi
  408782:	mov    edx,0x2
  408787:	mov    rdi,rbx
  40878a:	call   408640 <__sprintf_chk@plt+0x6060>
  40878f:	mov    QWORD PTR [rbx+0x78],rax
  408793:	mov    DWORD PTR [rbx+0x80],0x5
  40879d:	mov    rbp,QWORD PTR [rbx+0x20]
  4087a1:	mov    edx,0x2
  4087a6:	xor    esi,esi
  4087a8:	mov    rdi,rbx
  4087ab:	call   408640 <__sprintf_chk@plt+0x6060>
  4087b0:	mov    QWORD PTR [rbp+0xa0],rax
  4087b7:	mov    DWORD PTR [rbp+0xa8],0x5
  4087c1:	mov    esi,0x20
  4087c6:	mov    rdi,rbx
  4087c9:	call   407390 <__sprintf_chk@plt+0x4db0>
  4087ce:	xor    ebp,ebp
  4087d0:	mov    eax,0x7
  4087d5:	mov    r14,QWORD PTR [rbx+0x20]
  4087d9:	jmp    4087ed <__sprintf_chk@plt+0x620d>
  4087db:	nop    DWORD PTR [rax+rax*1+0x0]
  4087e0:	mov    r15,QWORD PTR [r13+rbp*8+0x0]
  4087e5:	mov    rdi,r15
  4087e8:	call   4023d0 <strlen@plt>
  4087ed:	mov    rdx,rax
  4087f0:	mov    rsi,r15
  4087f3:	mov    rdi,rbx
  4087f6:	call   407490 <__sprintf_chk@plt+0x4eb0>
  4087fb:	movsxd rdx,ebp
  4087fe:	add    rdx,0x24
  408802:	mov    QWORD PTR [r14+rdx*8+0x8],rax
  408807:	mov    r14,QWORD PTR [rbx+0x20]
  40880b:	inc    rbp
  40880e:	mov    rax,QWORD PTR [r14+rdx*8+0x8]
  408813:	or     BYTE PTR [rax+0x9],0x20
  408817:	cmp    rbp,0x11
  40881b:	jne    4087e0 <__sprintf_chk@plt+0x6200>
  40881d:	mov    ebp,0x1
  408822:	mov    eax,0x3
  408827:	lea    r13,[rip+0xef9c]        # 4177ca <__sprintf_chk@plt+0x151ea>
  40882e:	lea    r14,[rip+0x1646b]        # 41eca0 <__sprintf_chk@plt+0x1c6c0>
  408835:	jmp    40884f <__sprintf_chk@plt+0x626f>
  408837:	nop    WORD PTR [rax+rax*1+0x0]
  408840:	mov    r13,QWORD PTR [r14+rbp*8]
  408844:	inc    rbp
  408847:	mov    rdi,r13
  40884a:	call   4023d0 <strlen@plt>
  40884f:	mov    rdx,rax
  408852:	mov    rsi,r13
  408855:	mov    rdi,rbx
  408858:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40885d:	or     BYTE PTR [rax+0x9],0x20
  408861:	mov    BYTE PTR [rax+0xa],bpl
  408865:	cmp    rbp,0x15
  408869:	jne    408840 <__sprintf_chk@plt+0x6260>
  40886b:	mov    rdi,rbx
  40886e:	mov    edx,0x11
  408873:	lea    rsi,[rip+0xe837]        # 4170b1 <__sprintf_chk@plt+0x14ad1>
  40887a:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40887f:	or     BYTE PTR [rax+0x9],0x20
  408883:	mov    rax,QWORD PTR [r12+0x78]
  408888:	shl    rax,0x2
  40888c:	mov    QWORD PTR [r12+0x70],rax
  408891:	add    rsp,0x8
  408895:	pop    rbx
  408896:	pop    rbp
  408897:	pop    r12
  408899:	pop    r13
  40889b:	pop    r14
  40889d:	pop    r15
  40889f:	ret    
  4088a0:	push   r13
  4088a2:	mov    ecx,0x78
  4088a7:	mov    r13,rdi
  4088aa:	push   r12
  4088ac:	xor    edx,edx
  4088ae:	push   rbp
  4088af:	mov    rbp,rsi
  4088b2:	xor    esi,esi
  4088b4:	push   rbx
  4088b5:	sub    rsp,0x8
  4088b9:	mov    r12,QWORD PTR [rdi+0x38]
  4088bd:	mov    rdi,r12
  4088c0:	call   404640 <__sprintf_chk@plt+0x2060>
  4088c5:	mov    rbx,rax
  4088c8:	mov    rax,QWORD PTR [r12+0x20]
  4088cd:	xor    esi,esi
  4088cf:	mov    rdx,QWORD PTR [rax+0x28]
  4088d3:	mov    rdi,r12
  4088d6:	mov    QWORD PTR [rbx],rdx
  4088d9:	mov    QWORD PTR [rax+0x28],rbx
  4088dd:	xor    edx,edx
  4088df:	movzx  eax,BYTE PTR [rax+0x20]
  4088e3:	mov    BYTE PTR [rbx+0x72],0x0
  4088e7:	and    eax,0x3
  4088ea:	mov    BYTE PTR [rbx+0x9],al
  4088ed:	xor    eax,eax
  4088ef:	mov    WORD PTR [rbx+0x70],ax
  4088f3:	mov    BYTE PTR [rbx+0x8],0x9
  4088f7:	mov    QWORD PTR [rbx+0x10],0x0
  4088ff:	mov    rax,QWORD PTR [r13+0x30]
  408903:	mov    QWORD PTR [rbx+0x20],0x0
  40890b:	mov    QWORD PTR [rbx+0x18],0x0
  408913:	mov    QWORD PTR [rbx+0x38],0x0
  40891b:	mov    QWORD PTR [rbx+0x28],0x0
  408923:	mov    QWORD PTR [rbx+0x30],0x0
  40892b:	mov    QWORD PTR [rbx+0x48],0x0
  408933:	mov    QWORD PTR [rbx+0x50],0x0
  40893b:	mov    QWORD PTR [rbx+0x58],0x0
  408943:	mov    QWORD PTR [rbx+0x60],0x0
  40894b:	mov    QWORD PTR [rbp+0x10],rax
  40894f:	mov    QWORD PTR [rbp+0x0],rbx
  408953:	mov    QWORD PTR [rbp+0x18],r13
  408957:	mov    QWORD PTR [rbp+0x20],r12
  40895b:	mov    QWORD PTR [r13+0x30],rbp
  40895f:	mov    BYTE PTR [rbp+0x4a],0x0
  408963:	movabs rax,0xffffffff00000000
  40896d:	mov    QWORD PTR [rbp+0x30],rax
  408971:	mov    eax,0xffffffff
  408976:	mov    QWORD PTR [rbp+0x38],rax
  40897a:	mov    rax,QWORD PTR [r13+0x50]
  40897e:	mov    WORD PTR [rbp+0x48],dx
  408982:	mov    QWORD PTR [rbp+0x28],0x0
  40898a:	mov    QWORD PTR [rbp+0x40],0x0
  408992:	mov    QWORD PTR [rbx+0x40],rax
  408996:	mov    BYTE PTR [rbx+0x73],0x2
  40899a:	xor    edx,edx
  40899c:	call   408640 <__sprintf_chk@plt+0x6060>
  4089a1:	mov    rdx,QWORD PTR [r12+0x10]
  4089a6:	mov    QWORD PTR [rbp+0x8],rax
  4089aa:	mov    QWORD PTR [rdx],rax
  4089ad:	mov    rax,QWORD PTR [r12+0x38]
  4089b2:	mov    DWORD PTR [rdx+0x8],0x5
  4089b9:	mov    rcx,rax
  4089bc:	sub    rcx,rdx
  4089bf:	cmp    rcx,0x10
  4089c3:	jle    4089f8 <__sprintf_chk@plt+0x6418>
  4089c5:	lea    rcx,[rdx+0x10]
  4089c9:	sub    rax,rcx
  4089cc:	mov    QWORD PTR [r12+0x10],rcx
  4089d1:	mov    QWORD PTR [rdx+0x10],rbx
  4089d5:	mov    DWORD PTR [rdx+0x18],0x9
  4089dc:	cmp    rax,0x10
  4089e0:	jle    408a18 <__sprintf_chk@plt+0x6438>
  4089e2:	add    QWORD PTR [r12+0x10],0x10
  4089e8:	add    rsp,0x8
  4089ec:	pop    rbx
  4089ed:	pop    rbp
  4089ee:	pop    r12
  4089f0:	pop    r13
  4089f2:	ret    
  4089f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4089f8:	mov    esi,0x1
  4089fd:	mov    rdi,r12
  408a00:	call   408180 <__sprintf_chk@plt+0x5ba0>
  408a05:	mov    rdx,QWORD PTR [r12+0x10]
  408a0a:	mov    rax,QWORD PTR [r12+0x38]
  408a0f:	jmp    4089c5 <__sprintf_chk@plt+0x63e5>
  408a11:	nop    DWORD PTR [rax+0x0]
  408a18:	mov    esi,0x1
  408a1d:	mov    rdi,r12
  408a20:	call   408180 <__sprintf_chk@plt+0x5ba0>
  408a25:	jmp    4089e2 <__sprintf_chk@plt+0x6402>
  408a27:	nop    WORD PTR [rax+rax*1+0x0]
  408a30:	push   r15
  408a32:	mov    r15d,edx
  408a35:	push   r14
  408a37:	push   r13
  408a39:	mov    r13,rdi
  408a3c:	push   r12
  408a3e:	mov    r12,rsi
  408a41:	push   rbp
  408a42:	push   rbx
  408a43:	mov    ebx,ecx
  408a45:	sub    rsp,0x28
  408a49:	movzx  eax,BYTE PTR [rsi+0xb]
  408a4d:	mov    r14d,DWORD PTR [rsi+0x38]
  408a51:	mov    DWORD PTR [rsp+0x14],eax
  408a55:	mov    rax,QWORD PTR [rsi+0x20]
  408a59:	mov    QWORD PTR [rsp],rax
  408a5d:	cmp    r14d,edx
  408a60:	jl     408bb0 <__sprintf_chk@plt+0x65d0>
  408a66:	mov    edx,ecx
  408a68:	call   408510 <__sprintf_chk@plt+0x5f30>
  408a6d:	cmp    r14d,r15d
  408a70:	jle    408b00 <__sprintf_chk@plt+0x6520>
  408a76:	movsxd rbx,r15d
  408a79:	shl    rbx,0x4
  408a7d:	mov    DWORD PTR [r12+0x38],r15d
  408a82:	mov    QWORD PTR [rsp+0x18],rbx
  408a87:	mov    ebp,r15d
  408a8a:	jmp    408a99 <__sprintf_chk@plt+0x64b9>
  408a8c:	nop    DWORD PTR [rax+0x0]
  408a90:	add    rbx,0x10
  408a94:	cmp    r14d,ebp
  408a97:	je     408ad8 <__sprintf_chk@plt+0x64f8>
  408a99:	mov    r8,QWORD PTR [r12+0x18]
  408a9e:	inc    ebp
  408aa0:	add    r8,rbx
  408aa3:	mov    edx,DWORD PTR [r8+0x8]
  408aa7:	test   edx,edx
  408aa9:	je     408a90 <__sprintf_chk@plt+0x64b0>
  408aab:	mov    edx,ebp
  408aad:	mov    rsi,r12
  408ab0:	mov    rdi,r13
  408ab3:	mov    QWORD PTR [rsp+0x8],r8
  408ab8:	call   408f70 <__sprintf_chk@plt+0x6990>
  408abd:	mov    r8,QWORD PTR [rsp+0x8]
  408ac2:	add    rbx,0x10
  408ac6:	mov    rdx,QWORD PTR [r8]
  408ac9:	mov    QWORD PTR [rax],rdx
  408acc:	mov    edx,DWORD PTR [r8+0x8]
  408ad0:	mov    DWORD PTR [rax+0x8],edx
  408ad3:	cmp    r14d,ebp
  408ad6:	jne    408a99 <__sprintf_chk@plt+0x64b9>
  408ad8:	cmp    r15d,0xffffffff
  408adc:	jl     408bd8 <__sprintf_chk@plt+0x65f8>
  408ae2:	movsxd rdx,r14d
  408ae5:	mov    rsi,QWORD PTR [r12+0x18]
  408aea:	mov    rcx,QWORD PTR [rsp+0x18]
  408aef:	shl    rdx,0x4
  408af3:	mov    rdi,r13
  408af6:	call   404640 <__sprintf_chk@plt+0x2060>
  408afb:	mov    QWORD PTR [r12+0x18],rax
  408b00:	movzx  eax,BYTE PTR [rsp+0x14]
  408b05:	mov    ebp,0x1
  408b0a:	shlx   rbp,rbp,rax
  408b0f:	dec    ebp
  408b11:	js     408b60 <__sprintf_chk@plt+0x6580>
  408b13:	movsxd rax,ebp
  408b16:	mov    rcx,QWORD PTR [rsp]
  408b1a:	lea    rax,[rax+rax*4]
  408b1e:	lea    rbx,[rcx+rax*8]
  408b22:	jmp    408b33 <__sprintf_chk@plt+0x6553>
  408b24:	nop    DWORD PTR [rax+0x0]
  408b28:	dec    ebp
  408b2a:	sub    rbx,0x28
  408b2e:	cmp    ebp,0xffffffff
  408b31:	je     408b60 <__sprintf_chk@plt+0x6580>
  408b33:	mov    eax,DWORD PTR [rbx+0x8]
  408b36:	test   eax,eax
  408b38:	je     408b28 <__sprintf_chk@plt+0x6548>
  408b3a:	lea    rdx,[rbx+0x10]
  408b3e:	mov    rsi,r12
  408b41:	mov    rdi,r13
  408b44:	call   408ee0 <__sprintf_chk@plt+0x6900>
  408b49:	mov    rdx,QWORD PTR [rbx]
  408b4c:	dec    ebp
  408b4e:	mov    QWORD PTR [rax],rdx
  408b51:	sub    rbx,0x28
  408b55:	mov    edx,DWORD PTR [rbx+0x30]
  408b58:	mov    DWORD PTR [rax+0x8],edx
  408b5b:	cmp    ebp,0xffffffff
  408b5e:	jne    408b33 <__sprintf_chk@plt+0x6553>
  408b60:	lea    rax,[rip+0xf439]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  408b67:	cmp    QWORD PTR [rsp],rax
  408b6b:	je     408ba0 <__sprintf_chk@plt+0x65c0>
  408b6d:	movzx  eax,BYTE PTR [rsp+0x14]
  408b72:	mov    rsi,QWORD PTR [rsp]
  408b76:	add    rsp,0x28
  408b7a:	pop    rbx
  408b7b:	pop    rbp
  408b7c:	pop    r12
  408b7e:	mov    rdi,r13
  408b81:	pop    r13
  408b83:	pop    r14
  408b85:	mov    edx,0x28
  408b8a:	xor    ecx,ecx
  408b8c:	pop    r15
  408b8e:	shlx   rdx,rdx,rax
  408b93:	jmp    404640 <__sprintf_chk@plt+0x2060>
  408b98:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	add    rsp,0x28
  408ba4:	pop    rbx
  408ba5:	pop    rbp
  408ba6:	pop    r12
  408ba8:	pop    r13
  408baa:	pop    r14
  408bac:	pop    r15
  408bae:	ret    
  408baf:	nop
  408bb0:	lea    rdx,[rsi+0x38]
  408bb4:	mov    ecx,r15d
  408bb7:	lea    rsi,[rsi+0x18]
  408bbb:	call   407970 <__sprintf_chk@plt+0x5390>
  408bc0:	mov    edx,ebx
  408bc2:	mov    rsi,r12
  408bc5:	mov    rdi,r13
  408bc8:	call   408510 <__sprintf_chk@plt+0x5f30>
  408bcd:	jmp    408b00 <__sprintf_chk@plt+0x6520>
  408bd2:	nop    WORD PTR [rax+rax*1+0x0]
  408bd8:	xor    eax,eax
  408bda:	lea    rsi,[rip+0xf467]        # 418048 <__sprintf_chk@plt+0x15a68>
  408be1:	mov    rdi,r13
  408be4:	call   407190 <__sprintf_chk@plt+0x4bb0>
  408be9:	xor    eax,eax
  408beb:	jmp    408afb <__sprintf_chk@plt+0x651b>
  408bf0:	push   r15
  408bf2:	push   r14
  408bf4:	push   r13
  408bf6:	push   r12
  408bf8:	mov    r12,rdx
  408bfb:	push   rbp
  408bfc:	mov    rbp,rsi
  408bff:	mov    rsi,rdx
  408c02:	push   rbx
  408c03:	mov    rbx,rdi
  408c06:	mov    rdi,rbp
  408c09:	sub    rsp,0x98
  408c10:	mov    rax,QWORD PTR fs:0x28
  408c19:	mov    QWORD PTR [rsp+0x88],rax
  408c21:	xor    eax,eax
  408c23:	call   403650 <__sprintf_chk@plt+0x1070>
  408c28:	mov    ecx,DWORD PTR [rax+0x8]
  408c2b:	mov    r10,rax
  408c2e:	test   ecx,ecx
  408c30:	jne    408c88 <__sprintf_chk@plt+0x66a8>
  408c32:	lea    rax,[rip+0xf367]        # 417fa0 <__sprintf_chk@plt+0x159c0>
  408c39:	cmp    r10,rax
  408c3c:	je     408c88 <__sprintf_chk@plt+0x66a8>
  408c3e:	mov    rax,QWORD PTR [r12]
  408c42:	mov    QWORD PTR [r10+0x10],rax
  408c46:	mov    eax,DWORD PTR [r12+0x8]
  408c4b:	mov    DWORD PTR [r10+0x18],eax
  408c4f:	cmp    eax,0x3
  408c52:	jg     408e10 <__sprintf_chk@plt+0x6830>
  408c58:	mov    rax,r10
  408c5b:	mov    rbx,QWORD PTR [rsp+0x88]
  408c63:	xor    rbx,QWORD PTR fs:0x28
  408c6c:	jne    408edb <__sprintf_chk@plt+0x68fb>
  408c72:	add    rsp,0x98
  408c79:	pop    rbx
  408c7a:	pop    rbp
  408c7b:	pop    r12
  408c7d:	pop    r13
  408c7f:	pop    r14
  408c81:	pop    r15
  408c83:	ret    
  408c84:	nop    DWORD PTR [rax+0x0]
  408c88:	mov    rax,QWORD PTR [rbp+0x20]
  408c8c:	mov    r8,QWORD PTR [rbp+0x28]
  408c90:	jmp    408ca7 <__sprintf_chk@plt+0x66c7>
  408c92:	nop    WORD PTR [rax+rax*1+0x0]
  408c98:	mov    edx,DWORD PTR [r8-0x10]
  408c9c:	test   edx,edx
  408c9e:	je     408da0 <__sprintf_chk@plt+0x67c0>
  408ca4:	mov    r8,r9
  408ca7:	lea    r9,[r8-0x28]
  408cab:	mov    QWORD PTR [rbp+0x28],r9
  408caf:	cmp    rax,r8
  408cb2:	jb     408c98 <__sprintf_chk@plt+0x66b8>
  408cb4:	mov    r10,rsp
  408cb7:	mov    r9,r10
  408cba:	lea    r13,[r10+0x7c]
  408cbe:	mov    rax,r10
  408cc1:	nop    DWORD PTR [rax+0x0]
  408cc8:	mov    DWORD PTR [rax],0x0
  408cce:	add    rax,0x4
  408cd2:	cmp    rax,r13
  408cd5:	jne    408cc8 <__sprintf_chk@plt+0x66e8>
  408cd7:	mov    r14d,DWORD PTR [rbp+0x38]
  408cdb:	mov    rsi,r10
  408cde:	xor    r11d,r11d
  408ce1:	mov    eax,0x1
  408ce6:	mov    r8d,0x1
  408cec:	nop    DWORD PTR [rax+0x0]
  408cf0:	cmp    r14d,r8d
  408cf3:	jge    408e48 <__sprintf_chk@plt+0x6868>
  408cf9:	cmp    r14d,eax
  408cfc:	jl     408d39 <__sprintf_chk@plt+0x6759>
  408cfe:	mov    edi,r14d
  408d01:	mov    rcx,QWORD PTR [rbp+0x18]
  408d05:	movsxd rdx,eax
  408d08:	shl    rdx,0x4
  408d0c:	lea    rdx,[rcx+rdx*1-0x8]
  408d11:	xor    ecx,ecx
  408d13:	nop    DWORD PTR [rax+rax*1+0x0]
  408d18:	cmp    DWORD PTR [rdx],0x1
  408d1b:	sbb    ecx,0xffffffff
  408d1e:	inc    eax
  408d20:	add    rdx,0x10
  408d24:	cmp    eax,edi
  408d26:	jle    408d18 <__sprintf_chk@plt+0x6738>
  408d28:	add    r11d,ecx
  408d2b:	add    DWORD PTR [rsi],ecx
  408d2d:	add    rsi,0x4
  408d31:	add    r8d,r8d
  408d34:	cmp    rsi,r13
  408d37:	jne    408cf0 <__sprintf_chk@plt+0x6710>
  408d39:	movzx  eax,BYTE PTR [rbp+0xb]
  408d3d:	mov    edx,0x1
  408d42:	shlx   rdx,rdx,rax
  408d47:	movsxd rax,edx
  408d4a:	mov    edx,edx
  408d4c:	lea    rcx,[rax+rax*4]
  408d50:	sub    rax,rdx
  408d53:	lea    rax,[rax+rax*4]
  408d57:	lea    r8,[rcx*8-0x28]
  408d5f:	lea    r14,[rax*8-0x28]
  408d67:	xor    r15d,r15d
  408d6a:	xor    r13d,r13d
  408d6d:	jmp    408d74 <__sprintf_chk@plt+0x6794>
  408d6f:	nop
  408d70:	sub    r8,0x28
  408d74:	cmp    r8,r14
  408d77:	je     408e60 <__sprintf_chk@plt+0x6880>
  408d7d:	mov    rdi,QWORD PTR [rbp+0x20]
  408d81:	add    rdi,r8
  408d84:	mov    eax,DWORD PTR [rdi+0x8]
  408d87:	test   eax,eax
  408d89:	je     408d70 <__sprintf_chk@plt+0x6790>
  408d8b:	add    rdi,0x10
  408d8f:	mov    rsi,r10
  408d92:	call   402ca0 <__sprintf_chk@plt+0x6c0>
  408d97:	add    r15d,eax
  408d9a:	inc    r13d
  408d9d:	jmp    408d70 <__sprintf_chk@plt+0x6790>
  408d9f:	nop
  408da0:	lea    rsi,[r10+0x10]
  408da4:	mov    rdi,rbp
  408da7:	call   403650 <__sprintf_chk@plt+0x1070>
  408dac:	cmp    r10,rax
  408daf:	jne    408dcb <__sprintf_chk@plt+0x67eb>
  408db1:	mov    rax,QWORD PTR [r10+0x20]
  408db5:	mov    QWORD PTR [r8-0x8],rax
  408db9:	mov    QWORD PTR [r10+0x20],r9
  408dbd:	mov    r10,r9
  408dc0:	jmp    408c3e <__sprintf_chk@plt+0x665e>
  408dc5:	nop    DWORD PTR [rax]
  408dc8:	mov    rax,rdx
  408dcb:	mov    rdx,QWORD PTR [rax+0x20]
  408dcf:	cmp    rdx,r10
  408dd2:	jne    408dc8 <__sprintf_chk@plt+0x67e8>
  408dd4:	mov    QWORD PTR [rax+0x20],r9
  408dd8:	vmovdqu xmm0,XMMWORD PTR [r10]
  408ddd:	vmovups XMMWORD PTR [r8-0x28],xmm0
  408de3:	vmovdqu xmm1,XMMWORD PTR [r10+0x10]
  408de9:	vmovups XMMWORD PTR [r8-0x18],xmm1
  408def:	mov    rax,QWORD PTR [r10+0x20]
  408df3:	mov    QWORD PTR [r8-0x8],rax
  408df7:	mov    QWORD PTR [r10+0x20],0x0
  408dff:	mov    DWORD PTR [r10+0x8],0x0
  408e07:	jmp    408c3e <__sprintf_chk@plt+0x665e>
  408e0c:	nop    DWORD PTR [rax+0x0]
  408e10:	mov    rax,QWORD PTR [r12]
  408e14:	test   BYTE PTR [rax+0x9],0x3
  408e18:	je     408c58 <__sprintf_chk@plt+0x6678>
  408e1e:	movzx  eax,BYTE PTR [rbp+0x9]
  408e22:	test   al,0x4
  408e24:	je     408c58 <__sprintf_chk@plt+0x6678>
  408e2a:	mov    rdx,QWORD PTR [rbx+0x20]
  408e2e:	and    eax,0xfffffffb
  408e31:	mov    BYTE PTR [rbp+0x9],al
  408e34:	mov    rax,QWORD PTR [rdx+0x40]
  408e38:	mov    QWORD PTR [rbp+0x30],rax
  408e3c:	mov    QWORD PTR [rdx+0x40],rbp
  408e40:	jmp    408c58 <__sprintf_chk@plt+0x6678>
  408e45:	nop    DWORD PTR [rax]
  408e48:	mov    edi,r8d
  408e4b:	cmp    r8d,eax
  408e4e:	jge    408d01 <__sprintf_chk@plt+0x6721>
  408e54:	xor    ecx,ecx
  408e56:	jmp    408d2b <__sprintf_chk@plt+0x674b>
  408e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e60:	mov    rsi,r10
  408e63:	mov    rdi,r12
  408e66:	add    r15d,r11d
  408e69:	add    r11d,r13d
  408e6c:	call   402ca0 <__sprintf_chk@plt+0x6c0>
  408e71:	add    eax,r15d
  408e74:	lea    ecx,[r11+0x1]
  408e78:	xor    edx,edx
  408e7a:	test   eax,eax
  408e7c:	jle    408ebd <__sprintf_chk@plt+0x68dd>
  408e7e:	xor    r11d,r11d
  408e81:	mov    edi,0x1
  408e86:	xor    r8d,r8d
  408e89:	xor    esi,esi
  408e8b:	jmp    408ea1 <__sprintf_chk@plt+0x68c1>
  408e8d:	nop    DWORD PTR [rax]
  408e90:	add    edi,edi
  408e92:	mov    r8d,edi
  408e95:	sar    r8d,1
  408e98:	add    r9,0x4
  408e9c:	cmp    eax,r8d
  408e9f:	jle    408eba <__sprintf_chk@plt+0x68da>
  408ea1:	mov    r10d,DWORD PTR [r9]
  408ea4:	test   r10d,r10d
  408ea7:	jle    408eb6 <__sprintf_chk@plt+0x68d6>
  408ea9:	add    esi,r10d
  408eac:	cmp    esi,r8d
  408eaf:	cmovg  edx,edi
  408eb2:	cmovg  r11d,esi
  408eb6:	cmp    eax,esi
  408eb8:	jne    408e90 <__sprintf_chk@plt+0x68b0>
  408eba:	sub    ecx,r11d
  408ebd:	mov    rsi,rbp
  408ec0:	mov    rdi,rbx
  408ec3:	call   408a30 <__sprintf_chk@plt+0x6450>
  408ec8:	mov    rdx,r12
  408ecb:	mov    rsi,rbp
  408ece:	mov    rdi,rbx
  408ed1:	call   408ee0 <__sprintf_chk@plt+0x6900>
  408ed6:	jmp    408c5b <__sprintf_chk@plt+0x667b>
  408edb:	call   4023e0 <__stack_chk_fail@plt>
  408ee0:	push   r12
  408ee2:	mov    r12,rdi
  408ee5:	push   rbp
  408ee6:	mov    rbp,rdx
  408ee9:	push   rbx
  408eea:	mov    rbx,rsi
  408eed:	mov    rdi,rbx
  408ef0:	mov    rsi,rdx
  408ef3:	call   403780 <__sprintf_chk@plt+0x11a0>
  408ef8:	lea    rdx,[rip+0xf111]        # 418010 <__sprintf_chk@plt+0x15a30>
  408eff:	mov    BYTE PTR [rbx+0xa],0x0
  408f03:	cmp    rax,rdx
  408f06:	je     408f10 <__sprintf_chk@plt+0x6930>
  408f08:	pop    rbx
  408f09:	pop    rbp
  408f0a:	pop    r12
  408f0c:	ret    
  408f0d:	nop    DWORD PTR [rax]
  408f10:	mov    eax,DWORD PTR [rbp+0x8]
  408f13:	test   eax,eax
  408f15:	je     408f50 <__sprintf_chk@plt+0x6970>
  408f17:	cmp    eax,0x3
  408f1a:	je     408f30 <__sprintf_chk@plt+0x6950>
  408f1c:	mov    rsi,rbx
  408f1f:	pop    rbx
  408f20:	mov    rdx,rbp
  408f23:	pop    rbp
  408f24:	mov    rdi,r12
  408f27:	pop    r12
  408f29:	jmp    408bf0 <__sprintf_chk@plt+0x6610>
  408f2e:	xchg   ax,ax
  408f30:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  408f35:	vucomisd xmm0,xmm0
  408f39:	jp     408f3d <__sprintf_chk@plt+0x695d>
  408f3b:	je     408f1c <__sprintf_chk@plt+0x693c>
  408f3d:	lea    rsi,[rip+0xe1ce]        # 417112 <__sprintf_chk@plt+0x14b32>
  408f44:	mov    rdi,r12
  408f47:	xor    eax,eax
  408f49:	call   407190 <__sprintf_chk@plt+0x4bb0>
  408f4e:	jmp    408f1c <__sprintf_chk@plt+0x693c>
  408f50:	lea    rsi,[rip+0xe1a8]        # 4170ff <__sprintf_chk@plt+0x14b1f>
  408f57:	mov    rdi,r12
  408f5a:	call   407190 <__sprintf_chk@plt+0x4bb0>
  408f5f:	jmp    408f1c <__sprintf_chk@plt+0x693c>
  408f61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408f6c:	nop    DWORD PTR [rax+0x0]
  408f70:	sub    rsp,0x28
  408f74:	mov    rax,QWORD PTR fs:0x28
  408f7d:	mov    QWORD PTR [rsp+0x18],rax
  408f82:	xor    eax,eax
  408f84:	lea    eax,[rdx-0x1]
  408f87:	mov    r10,rdi
  408f8a:	mov    r9,rsi
  408f8d:	mov    r8d,edx
  408f90:	cmp    eax,DWORD PTR [rsi+0x38]
  408f93:	jb     408fc0 <__sprintf_chk@plt+0x69e0>
  408f95:	mov    esi,edx
  408f97:	mov    rdi,r9
  408f9a:	call   403720 <__sprintf_chk@plt+0x1140>
  408f9f:	lea    rdx,[rip+0xf06a]        # 418010 <__sprintf_chk@plt+0x15a30>
  408fa6:	cmp    rax,rdx
  408fa9:	je     408fdc <__sprintf_chk@plt+0x69fc>
  408fab:	mov    rcx,QWORD PTR [rsp+0x18]
  408fb0:	xor    rcx,QWORD PTR fs:0x28
  408fb9:	jne    409002 <__sprintf_chk@plt+0x6a22>
  408fbb:	add    rsp,0x28
  408fbf:	ret    
  408fc0:	movsxd rax,edx
  408fc3:	mov    rdx,QWORD PTR [rsi+0x18]
  408fc7:	shl    rax,0x4
  408fcb:	lea    rax,[rdx+rax*1-0x10]
  408fd0:	lea    rdx,[rip+0xf039]        # 418010 <__sprintf_chk@plt+0x15a30>
  408fd7:	cmp    rax,rdx
  408fda:	jne    408fab <__sprintf_chk@plt+0x69cb>
  408fdc:	vxorpd xmm0,xmm0,xmm0
  408fe0:	vcvtsi2sd xmm0,xmm0,r8d
  408fe5:	mov    rdx,rsp
  408fe8:	mov    rsi,r9
  408feb:	mov    rdi,r10
  408fee:	vmovsd QWORD PTR [rsp],xmm0
  408ff3:	mov    DWORD PTR [rsp+0x8],0x3
  408ffb:	call   408bf0 <__sprintf_chk@plt+0x6610>
  409000:	jmp    408fab <__sprintf_chk@plt+0x69cb>
  409002:	call   4023e0 <__stack_chk_fail@plt>
  409007:	nop    WORD PTR [rax+rax*1+0x0]
  409010:	push   r12
  409012:	mov    r8d,edx
  409015:	push   rbp
  409016:	push   rbx
  409017:	mov    rbx,rdi
  40901a:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40901f:	mov    rsi,QWORD PTR [rax]
  409022:	mov    rbp,QWORD PTR [rbx+0x10]
  409026:	mov    edx,r8d
  409029:	mov    rdi,rbx
  40902c:	mov    r12,rax
  40902f:	call   408f70 <__sprintf_chk@plt+0x6990>
  409034:	mov    rdx,QWORD PTR [rbp-0x10]
  409038:	mov    QWORD PTR [rax],rdx
  40903b:	mov    edx,DWORD PTR [rbp-0x8]
  40903e:	mov    DWORD PTR [rax+0x8],edx
  409041:	mov    rax,QWORD PTR [rbx+0x10]
  409045:	cmp    DWORD PTR [rax-0x8],0x3
  409049:	jle    409078 <__sprintf_chk@plt+0x6a98>
  40904b:	mov    rax,QWORD PTR [rax-0x10]
  40904f:	test   BYTE PTR [rax+0x9],0x3
  409053:	je     409078 <__sprintf_chk@plt+0x6a98>
  409055:	mov    rax,QWORD PTR [r12]
  409059:	movzx  edx,BYTE PTR [rax+0x9]
  40905d:	test   dl,0x4
  409060:	je     409078 <__sprintf_chk@plt+0x6a98>
  409062:	mov    rcx,QWORD PTR [rbx+0x20]
  409066:	and    edx,0xfffffffb
  409069:	mov    BYTE PTR [rax+0x9],dl
  40906c:	mov    rdx,QWORD PTR [rcx+0x40]
  409070:	mov    QWORD PTR [rax+0x30],rdx
  409074:	mov    QWORD PTR [rcx+0x40],rax
  409078:	sub    QWORD PTR [rbx+0x10],0x10
  40907d:	pop    rbx
  40907e:	pop    rbp
  40907f:	pop    r12
  409081:	ret    
  409082:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40908d:	nop    DWORD PTR [rax]
  409090:	push   r15
  409092:	push   r14
  409094:	mov    r14,rdx
  409097:	push   r13
  409099:	push   r12
  40909b:	mov    r12,rsi
  40909e:	push   rbp
  40909f:	push   rbx
  4090a0:	mov    rbx,rdi
  4090a3:	sub    rsp,0x18
  4090a7:	cmp    BYTE PTR [rsi],0x3e
  4090aa:	je     4092d0 <__sprintf_chk@plt+0x6cf0>
  4090b0:	movsxd rax,DWORD PTR [rdx+0x74]
  4090b4:	test   eax,eax
  4090b6:	je     409310 <__sprintf_chk@plt+0x6d30>
  4090bc:	lea    rdx,[rax+rax*4]
  4090c0:	mov    rax,QWORD PTR [rdi+0x50]
  4090c4:	lea    r15,[rax+rdx*8]
  4090c8:	mov    rax,QWORD PTR [r15+0x8]
  4090cc:	mov    rbp,QWORD PTR [rax]
  4090cf:	test   rbp,rbp
  4090d2:	je     409310 <__sprintf_chk@plt+0x6d30>
  4090d8:	movzx  eax,BYTE PTR [r12]
  4090dd:	mov    r13,r12
  4090e0:	mov    DWORD PTR [rsp+0xc],0x1
  4090e8:	test   al,al
  4090ea:	je     40912c <__sprintf_chk@plt+0x6b4c>
  4090ec:	nop    DWORD PTR [rax+0x0]
  4090f0:	sub    eax,0x4c
  4090f3:	cmp    al,0x29
  4090f5:	ja     409250 <__sprintf_chk@plt+0x6c70>
  4090fb:	lea    rcx,[rip+0xe9ca]        # 417acc <__sprintf_chk@plt+0x154ec>
  409102:	movzx  eax,al
  409105:	movsxd rax,DWORD PTR [rcx+rax*4]
  409109:	add    rax,rcx
  40910c:	notrack jmp rax
  40910f:	nop
  409110:	movzx  eax,BYTE PTR [rbp+0xb]
  409114:	mov    DWORD PTR [r14+0x2c],eax
  409118:	nop    DWORD PTR [rax+rax*1+0x0]
  409120:	inc    r13
  409123:	movzx  eax,BYTE PTR [r13+0x0]
  409128:	test   al,al
  40912a:	jne    4090f0 <__sprintf_chk@plt+0x6b10>
  40912c:	mov    esi,0x66
  409131:	mov    rdi,r12
  409134:	call   4023f0 <strchr@plt>
  409139:	test   rax,rax
  40913c:	je     409260 <__sprintf_chk@plt+0x6c80>
  409142:	mov    r13,QWORD PTR [rbx+0x10]
  409146:	mov    QWORD PTR [r13+0x0],rbp
  40914a:	mov    DWORD PTR [r13+0x8],0x6
  409152:	mov    rax,QWORD PTR [rbx+0x38]
  409156:	sub    rax,r13
  409159:	cmp    rax,0x10
  40915d:	jle    4092f0 <__sprintf_chk@plt+0x6d10>
  409163:	add    r13,0x10
  409167:	mov    QWORD PTR [rbx+0x10],r13
  40916b:	mov    esi,0x4c
  409170:	mov    rdi,r12
  409173:	call   4023f0 <strchr@plt>
  409178:	test   rax,rax
  40917b:	je     4091a7 <__sprintf_chk@plt+0x6bc7>
  40917d:	test   rbp,rbp
  409180:	jne    409276 <__sprintf_chk@plt+0x6c96>
  409186:	mov    DWORD PTR [r13+0x8],0x0
  40918e:	mov    rax,QWORD PTR [rbx+0x38]
  409192:	sub    rax,r13
  409195:	cmp    rax,0x10
  409199:	jle    409390 <__sprintf_chk@plt+0x6db0>
  40919f:	add    r13,0x10
  4091a3:	mov    QWORD PTR [rbx+0x10],r13
  4091a7:	mov    eax,DWORD PTR [rsp+0xc]
  4091ab:	add    rsp,0x18
  4091af:	pop    rbx
  4091b0:	pop    rbp
  4091b1:	pop    r12
  4091b3:	pop    r13
  4091b5:	pop    r14
  4091b7:	pop    r15
  4091b9:	ret    
  4091ba:	nop    WORD PTR [rax+rax*1+0x0]
  4091c0:	lea    rax,[rip+0xe597]        # 41775e <__sprintf_chk@plt+0x1517e>
  4091c7:	mov    QWORD PTR [r14+0x10],rax
  4091cb:	mov    QWORD PTR [r14+0x8],0x0
  4091d3:	jmp    409120 <__sprintf_chk@plt+0x6b40>
  4091d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091e0:	cmp    BYTE PTR [rbp+0xa],0x0
  4091e4:	je     409290 <__sprintf_chk@plt+0x6cb0>
  4091ea:	lea    rax,[rip+0xdf3d]        # 41712e <__sprintf_chk@plt+0x14b4e>
  4091f1:	mov    QWORD PTR [r14+0x20],rax
  4091f5:	lea    rax,[rip+0xdf49]        # 417145 <__sprintf_chk@plt+0x14b65>
  4091fc:	mov    QWORD PTR [r14+0x30],0xffffffffffffffff
  409204:	mov    QWORD PTR [r14+0x18],rax
  409208:	lea    rsi,[rip+0xdf1f]        # 41712e <__sprintf_chk@plt+0x14b4e>
  40920f:	lea    rdi,[r14+0x38]
  409213:	mov    edx,0x3c
  409218:	call   403160 <__sprintf_chk@plt+0xb80>
  40921d:	jmp    409120 <__sprintf_chk@plt+0x6b40>
  409222:	nop    WORD PTR [rax+rax*1+0x0]
  409228:	mov    eax,0xffffffff
  40922d:	test   r15,r15
  409230:	je     40923d <__sprintf_chk@plt+0x6c5d>
  409232:	mov    rsi,r15
  409235:	mov    rdi,rbx
  409238:	call   402d20 <__sprintf_chk@plt+0x740>
  40923d:	mov    DWORD PTR [r14+0x28],eax
  409241:	jmp    409120 <__sprintf_chk@plt+0x6b40>
  409246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409250:	mov    DWORD PTR [rsp+0xc],0x0
  409258:	jmp    409120 <__sprintf_chk@plt+0x6b40>
  40925d:	nop    DWORD PTR [rax]
  409260:	mov    esi,0x4c
  409265:	mov    rdi,r12
  409268:	call   4023f0 <strchr@plt>
  40926d:	test   rax,rax
  409270:	je     4091a7 <__sprintf_chk@plt+0x6bc7>
  409276:	cmp    BYTE PTR [rbp+0xa],0x0
  40927a:	je     4093b0 <__sprintf_chk@plt+0x6dd0>
  409280:	mov    r13,QWORD PTR [rbx+0x10]
  409284:	jmp    409186 <__sprintf_chk@plt+0x6ba6>
  409289:	nop    DWORD PTR [rax+0x0]
  409290:	mov    rax,QWORD PTR [rbp+0x20]
  409294:	mov    rcx,QWORD PTR [rax+0x40]
  409298:	mov    edx,DWORD PTR [rax+0x60]
  40929b:	mov    eax,DWORD PTR [rax+0x64]
  40929e:	test   edx,edx
  4092a0:	mov    DWORD PTR [r14+0x30],edx
  4092a4:	mov    DWORD PTR [r14+0x34],eax
  4092a8:	lea    rdx,[rip+0xde7b]        # 41712a <__sprintf_chk@plt+0x14b4a>
  4092af:	lea    rax,[rip+0xde6f]        # 417125 <__sprintf_chk@plt+0x14b45>
  4092b6:	cmovne rax,rdx
  4092ba:	lea    rsi,[rcx+0x18]
  4092be:	mov    QWORD PTR [r14+0x20],rsi
  4092c2:	mov    QWORD PTR [r14+0x18],rax
  4092c6:	jmp    40920f <__sprintf_chk@plt+0x6c2f>
  4092cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	mov    rax,QWORD PTR [rdi+0x10]
  4092d4:	inc    r12
  4092d7:	mov    rbp,QWORD PTR [rax-0x10]
  4092db:	sub    rax,0x10
  4092df:	mov    QWORD PTR [rdi+0x10],rax
  4092e3:	xor    r15d,r15d
  4092e6:	jmp    4090cf <__sprintf_chk@plt+0x6aef>
  4092eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4092f0:	mov    esi,0x1
  4092f5:	mov    rdi,rbx
  4092f8:	call   408180 <__sprintf_chk@plt+0x5ba0>
  4092fd:	mov    r13,QWORD PTR [rbx+0x10]
  409301:	jmp    409163 <__sprintf_chk@plt+0x6b83>
  409306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409310:	lea    rax,[rip+0xe447]        # 41775e <__sprintf_chk@plt+0x1517e>
  409317:	lea    rsi,[rip+0xde1a]        # 417138 <__sprintf_chk@plt+0x14b58>
  40931e:	mov    QWORD PTR [r14+0x10],rax
  409322:	mov    QWORD PTR [r14+0x8],rax
  409326:	lea    rax,[rip+0xde06]        # 417133 <__sprintf_chk@plt+0x14b53>
  40932d:	mov    QWORD PTR [r14+0x20],rsi
  409331:	mov    QWORD PTR [r14+0x18],rax
  409335:	mov    DWORD PTR [r14+0x28],0xffffffff
  40933d:	mov    QWORD PTR [r14+0x30],0xffffffffffffffff
  409345:	lea    rdi,[r14+0x38]
  409349:	mov    edx,0x3c
  40934e:	call   403160 <__sprintf_chk@plt+0xb80>
  409353:	mov    DWORD PTR [r14+0x2c],0x0
  40935b:	mov    esi,0x66
  409360:	mov    rdi,r12
  409363:	call   4023f0 <strchr@plt>
  409368:	test   rax,rax
  40936b:	je     409417 <__sprintf_chk@plt+0x6e37>
  409371:	mov    r13,QWORD PTR [rbx+0x10]
  409375:	xor    ebp,ebp
  409377:	mov    DWORD PTR [r13+0x8],0x0
  40937f:	mov    DWORD PTR [rsp+0xc],0x1
  409387:	jmp    409152 <__sprintf_chk@plt+0x6b72>
  40938c:	nop    DWORD PTR [rax+0x0]
  409390:	mov    esi,0x1
  409395:	mov    rdi,rbx
  409398:	call   408180 <__sprintf_chk@plt+0x5ba0>
  40939d:	mov    r13,QWORD PTR [rbx+0x10]
  4093a1:	jmp    40919f <__sprintf_chk@plt+0x6bbf>
  4093a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093b0:	xor    edx,edx
  4093b2:	xor    esi,esi
  4093b4:	mov    rdi,rbx
  4093b7:	call   408640 <__sprintf_chk@plt+0x6060>
  4093bc:	mov    r14,rax
  4093bf:	mov    rax,QWORD PTR [rbp+0x20]
  4093c3:	xor    r12d,r12d
  4093c6:	mov    r13,QWORD PTR [rax+0x28]
  4093ca:	mov    eax,DWORD PTR [rax+0x54]
  4093cd:	test   eax,eax
  4093cf:	jle    409402 <__sprintf_chk@plt+0x6e22>
  4093d1:	nop    DWORD PTR [rax+0x0]
  4093d8:	mov    edx,DWORD PTR [r13+r12*4+0x0]
  4093dd:	mov    rsi,r14
  4093e0:	mov    rdi,rbx
  4093e3:	call   408f70 <__sprintf_chk@plt+0x6990>
  4093e8:	mov    DWORD PTR [rax],0x1
  4093ee:	mov    DWORD PTR [rax+0x8],0x1
  4093f5:	inc    r12
  4093f8:	mov    rax,QWORD PTR [rbp+0x20]
  4093fc:	cmp    DWORD PTR [rax+0x54],r12d
  409400:	jg     4093d8 <__sprintf_chk@plt+0x6df8>
  409402:	mov    r13,QWORD PTR [rbx+0x10]
  409406:	mov    QWORD PTR [r13+0x0],r14
  40940a:	mov    DWORD PTR [r13+0x8],0x5
  409412:	jmp    40918e <__sprintf_chk@plt+0x6bae>
  409417:	mov    esi,0x4c
  40941c:	mov    rdi,r12
  40941f:	call   4023f0 <strchr@plt>
  409424:	mov    DWORD PTR [rsp+0xc],0x1
  40942c:	test   rax,rax
  40942f:	jne    409280 <__sprintf_chk@plt+0x6ca0>
  409435:	jmp    4091a7 <__sprintf_chk@plt+0x6bc7>
  40943a:	nop    WORD PTR [rax+rax*1+0x0]
  409440:	sub    rsp,0x8
  409444:	movsxd rax,edx
  409447:	lea    rcx,[rip+0x15952]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40944e:	movsxd rsi,esi
  409451:	mov    rdx,QWORD PTR [rcx+rsi*8]
  409455:	mov    rcx,QWORD PTR [rcx+rax*8]
  409459:	movzx  eax,BYTE PTR [rcx+0x2]
  40945d:	cmp    BYTE PTR [rdx+0x2],al
  409460:	je     409480 <__sprintf_chk@plt+0x6ea0>
  409462:	xor    eax,eax
  409464:	lea    rsi,[rip+0xdcdc]        # 417147 <__sprintf_chk@plt+0x14b67>
  40946b:	call   407190 <__sprintf_chk@plt+0x4bb0>
  409470:	xor    eax,eax
  409472:	add    rsp,0x8
  409476:	ret    
  409477:	nop    WORD PTR [rax+rax*1+0x0]
  409480:	xor    eax,eax
  409482:	lea    rsi,[rip+0xebe7]        # 418070 <__sprintf_chk@plt+0x15a90>
  409489:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40948e:	xor    eax,eax
  409490:	add    rsp,0x8
  409494:	ret    
  409495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4094a0:	push   r13
  4094a2:	mov    r13,rsi
  4094a5:	push   r12
  4094a7:	mov    r12,rdi
  4094aa:	push   rbp
  4094ab:	mov    rbp,rdx
  4094ae:	push   rbx
  4094af:	sub    rsp,0x18
  4094b3:	mov    eax,DWORD PTR [rdx]
  4094b5:	mov    edx,r8d
  4094b8:	sar    edx,1
  4094ba:	cmp    eax,edx
  4094bc:	jl     4094f0 <__sprintf_chk@plt+0x6f10>
  4094be:	mov    ebx,r8d
  4094c1:	cmp    eax,r8d
  4094c4:	jge    409500 <__sprintf_chk@plt+0x6f20>
  4094c6:	movsxd rsi,ebx
  4094c9:	imul   rsi,rcx
  4094cd:	movsxd rdx,eax
  4094d0:	imul   rdx,rcx
  4094d4:	mov    rdi,r12
  4094d7:	mov    rcx,rsi
  4094da:	mov    rsi,r13
  4094dd:	call   404640 <__sprintf_chk@plt+0x2060>
  4094e2:	mov    DWORD PTR [rbp+0x0],ebx
  4094e5:	add    rsp,0x18
  4094e9:	pop    rbx
  4094ea:	pop    rbp
  4094eb:	pop    r12
  4094ed:	pop    r13
  4094ef:	ret    
  4094f0:	lea    ebx,[rax+rax*1]
  4094f3:	cmp    ebx,0x4
  4094f6:	mov    edx,0x4
  4094fb:	cmovl  ebx,edx
  4094fe:	jmp    4094c6 <__sprintf_chk@plt+0x6ee6>
  409500:	xor    eax,eax
  409502:	mov    rsi,r9
  409505:	mov    QWORD PTR [rsp+0x8],rcx
  40950a:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40950f:	mov    eax,DWORD PTR [rbp+0x0]
  409512:	mov    rcx,QWORD PTR [rsp+0x8]
  409517:	jmp    4094c6 <__sprintf_chk@plt+0x6ee6>
  409519:	nop    DWORD PTR [rax+0x0]
  409520:	push   r15
  409522:	push   r14
  409524:	push   r13
  409526:	mov    r13,rdi
  409529:	push   r12
  40952b:	mov    r12,rcx
  40952e:	push   rbp
  40952f:	mov    rbp,rdx
  409532:	mov    rdx,rsi
  409535:	push   rbx
  409536:	sub    rsp,0x8
  40953a:	mov    rbx,QWORD PTR [rdi+0x20]
  40953e:	mov    rsi,QWORD PTR [rdi+0x8]
  409542:	mov    rdi,rbx
  409545:	call   408ee0 <__sprintf_chk@plt+0x6900>
  40954a:	cmp    DWORD PTR [rax+0x8],0x3
  40954e:	je     409670 <__sprintf_chk@plt+0x7090>
  409554:	mov    edx,DWORD PTR [r13+0x40]
  409558:	vxorpd xmm0,xmm0,xmm0
  40955c:	mov    r14,QWORD PTR [r13+0x0]
  409560:	vcvtsi2sd xmm0,xmm0,edx
  409564:	mov    r15d,DWORD PTR [r14+0x4c]
  409568:	mov    rsi,QWORD PTR [r14+0x10]
  40956c:	mov    DWORD PTR [rax+0x8],0x3
  409573:	vmovsd QWORD PTR [rax],xmm0
  409577:	cmp    r15d,edx
  40957a:	jle    4095b8 <__sprintf_chk@plt+0x6fd8>
  40957c:	movsxd rax,edx
  40957f:	shl    rax,0x4
  409583:	add    rsi,rax
  409586:	mov    rax,QWORD PTR [rbp+0x0]
  40958a:	mov    QWORD PTR [rsi],rax
  40958d:	mov    eax,DWORD PTR [r12]
  409591:	mov    DWORD PTR [rsi+0x8],eax
  409594:	cmp    eax,0x3
  409597:	jg     409628 <__sprintf_chk@plt+0x7048>
  40959d:	lea    eax,[rdx+0x1]
  4095a0:	mov    DWORD PTR [r13+0x40],eax
  4095a4:	add    rsp,0x8
  4095a8:	pop    rbx
  4095a9:	pop    rbp
  4095aa:	pop    r12
  4095ac:	pop    r13
  4095ae:	pop    r14
  4095b0:	mov    eax,edx
  4095b2:	pop    r15
  4095b4:	ret    
  4095b5:	nop    DWORD PTR [rax]
  4095b8:	lea    rdx,[r14+0x4c]
  4095bc:	lea    r9,[rip+0xdba2]        # 417165 <__sprintf_chk@plt+0x14b85>
  4095c3:	mov    r8d,0x3ffff
  4095c9:	mov    ecx,0x10
  4095ce:	mov    rdi,rbx
  4095d1:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  4095d6:	mov    rsi,rax
  4095d9:	mov    QWORD PTR [r14+0x10],rax
  4095dd:	mov    eax,DWORD PTR [r14+0x4c]
  4095e1:	cmp    r15d,eax
  4095e4:	jge    409618 <__sprintf_chk@plt+0x7038>
  4095e6:	dec    eax
  4095e8:	movsxd rcx,r15d
  4095eb:	sub    eax,r15d
  4095ee:	mov    rdx,rcx
  4095f1:	lea    rcx,[rcx+rax*1+0x1]
  4095f6:	shl    rdx,0x4
  4095fa:	shl    rcx,0x4
  4095fe:	add    rdx,rsi
  409601:	add    rcx,rsi
  409604:	nop    DWORD PTR [rax+0x0]
  409608:	mov    DWORD PTR [rdx+0x8],0x0
  40960f:	add    rdx,0x10
  409613:	cmp    rdx,rcx
  409616:	jne    409608 <__sprintf_chk@plt+0x7028>
  409618:	mov    edx,DWORD PTR [r13+0x40]
  40961c:	jmp    40957c <__sprintf_chk@plt+0x6f9c>
  409621:	nop    DWORD PTR [rax+0x0]
  409628:	mov    rsi,QWORD PTR [rbp+0x0]
  40962c:	test   BYTE PTR [rsi+0x9],0x3
  409630:	je     40959d <__sprintf_chk@plt+0x6fbd>
  409636:	movzx  eax,BYTE PTR [r14+0x9]
  40963b:	test   al,0x4
  40963d:	je     40959d <__sprintf_chk@plt+0x6fbd>
  409643:	mov    rdi,QWORD PTR [rbx+0x20]
  409647:	cmp    BYTE PTR [rdi+0x21],0x1
  40964b:	je     409679 <__sprintf_chk@plt+0x7099>
  40964d:	movzx  edx,BYTE PTR [rdi+0x20]
  409651:	and    eax,0xfffffff8
  409654:	and    edx,0x3
  409657:	or     eax,edx
  409659:	mov    BYTE PTR [r14+0x9],al
  40965d:	mov    edx,DWORD PTR [r13+0x40]
  409661:	jmp    40959d <__sprintf_chk@plt+0x6fbd>
  409666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409670:	vcvttsd2si edx,QWORD PTR [rax]
  409674:	jmp    4095a4 <__sprintf_chk@plt+0x6fc4>
  409679:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40967e:	mov    edx,DWORD PTR [r13+0x40]
  409682:	jmp    40959d <__sprintf_chk@plt+0x6fbd>
  409687:	nop    WORD PTR [rax+rax*1+0x0]
  409690:	push   rbp
  409691:	mov    rbp,rdi
  409694:	push   rbx
  409695:	mov    ebx,esi
  409697:	sub    rsp,0x8
  40969b:	call   4025d0 <__ctype_b_loc@plt>
  4096a0:	mov    rax,QWORD PTR [rax]
  4096a3:	movsxd rdx,ebx
  4096a6:	test   BYTE PTR [rax+rdx*2],0x2
  4096aa:	mov    rdi,QWORD PTR [rbp+0x0]
  4096ae:	mov    edx,ebx
  4096b0:	lea    rsi,[rip+0xdac6]        # 41717d <__sprintf_chk@plt+0x14b9d>
  4096b7:	jne    4096c0 <__sprintf_chk@plt+0x70e0>
  4096b9:	lea    rsi,[rip+0xdac6]        # 417186 <__sprintf_chk@plt+0x14ba6>
  4096c0:	add    rsp,0x8
  4096c4:	pop    rbx
  4096c5:	xor    eax,eax
  4096c7:	pop    rbp
  4096c8:	jmp    4070d0 <__sprintf_chk@plt+0x4af0>
  4096cd:	nop    DWORD PTR [rax]
  4096d0:	push   r13
  4096d2:	mov    r13,rsi
  4096d5:	push   r12
  4096d7:	push   rbp
  4096d8:	mov    ebp,edx
  4096da:	mov    edx,0x50
  4096df:	push   rbx
  4096e0:	mov    rbx,rdi
  4096e3:	sub    rsp,0x68
  4096e7:	mov    rax,QWORD PTR fs:0x28
  4096f0:	mov    QWORD PTR [rsp+0x58],rax
  4096f5:	xor    eax,eax
  4096f7:	mov    rax,QWORD PTR [rdi+0x50]
  4096fb:	mov    r12,rsp
  4096fe:	lea    rsi,[rax+0x18]
  409702:	mov    rdi,r12
  409705:	call   403160 <__sprintf_chk@plt+0xb80>
  40970a:	mov    ecx,DWORD PTR [rbx+0x4]
  40970d:	mov    rdi,QWORD PTR [rbx+0x38]
  409711:	xor    eax,eax
  409713:	mov    r8,r13
  409716:	mov    rdx,r12
  409719:	lea    rsi,[rip+0xd987]        # 4170a7 <__sprintf_chk@plt+0x14ac7>
  409720:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  409725:	test   ebp,ebp
  409727:	jne    409737 <__sprintf_chk@plt+0x7157>
  409729:	mov    rdi,QWORD PTR [rbx+0x38]
  40972d:	mov    esi,0x3
  409732:	call   404570 <__sprintf_chk@plt+0x1f90>
  409737:	mov    r12,rax
  40973a:	lea    eax,[rbp-0x11c]
  409740:	cmp    eax,0x2
  409743:	jbe    409788 <__sprintf_chk@plt+0x71a8>
  409745:	cmp    ebp,0x100
  40974b:	jle    409778 <__sprintf_chk@plt+0x7198>
  40974d:	sub    ebp,0x101
  409753:	movsxd rbp,ebp
  409756:	lea    rax,[rip+0x15543]        # 41eca0 <__sprintf_chk@plt+0x1c6c0>
  40975d:	mov    rcx,QWORD PTR [rax+rbp*8]
  409761:	mov    rdi,QWORD PTR [rbx+0x38]
  409765:	mov    rdx,r12
  409768:	lea    rsi,[rip+0xda1a]        # 417189 <__sprintf_chk@plt+0x14ba9>
  40976f:	xor    eax,eax
  409771:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  409776:	jmp    409729 <__sprintf_chk@plt+0x7149>
  409778:	lea    rdi,[rbx+0x38]
  40977c:	mov    esi,ebp
  40977e:	call   409690 <__sprintf_chk@plt+0x70b0>
  409783:	mov    rcx,rax
  409786:	jmp    409761 <__sprintf_chk@plt+0x7181>
  409788:	xor    esi,esi
  40978a:	mov    rdi,rbx
  40978d:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  409792:	mov    rax,QWORD PTR [rbx+0x48]
  409796:	mov    rcx,QWORD PTR [rax]
  409799:	jmp    409761 <__sprintf_chk@plt+0x7181>
  40979b:	nop    DWORD PTR [rax+rax*1+0x0]
  4097a0:	push   rbp
  4097a1:	push   rbx
  4097a2:	mov    rbx,rdi
  4097a5:	sub    rsp,0x8
  4097a9:	mov    ebp,DWORD PTR [rdi]
  4097ab:	mov    rdi,QWORD PTR [rdi+0x40]
  4097af:	mov    rax,QWORD PTR [rdi]
  4097b2:	lea    rdx,[rax-0x1]
  4097b6:	mov    QWORD PTR [rdi],rdx
  4097b9:	test   rax,rax
  4097bc:	je     409848 <__sprintf_chk@plt+0x7268>
  4097c2:	mov    rax,QWORD PTR [rdi+0x8]
  4097c6:	lea    rdx,[rax+0x1]
  4097ca:	mov    QWORD PTR [rdi+0x8],rdx
  4097ce:	movzx  eax,BYTE PTR [rax]
  4097d1:	cmp    eax,0xa
  4097d4:	sete   cl
  4097d7:	cmp    eax,0xd
  4097da:	sete   dl
  4097dd:	or     cl,dl
  4097df:	mov    DWORD PTR [rbx],eax
  4097e1:	je     4097e7 <__sprintf_chk@plt+0x7207>
  4097e3:	cmp    eax,ebp
  4097e5:	jne    409800 <__sprintf_chk@plt+0x7220>
  4097e7:	mov    eax,DWORD PTR [rbx+0x4]
  4097ea:	inc    eax
  4097ec:	mov    DWORD PTR [rbx+0x4],eax
  4097ef:	cmp    eax,0x7ffffffc
  4097f4:	jg     409833 <__sprintf_chk@plt+0x7253>
  4097f6:	add    rsp,0x8
  4097fa:	pop    rbx
  4097fb:	pop    rbp
  4097fc:	ret    
  4097fd:	nop    DWORD PTR [rax]
  409800:	mov    rdi,QWORD PTR [rbx+0x40]
  409804:	mov    rax,QWORD PTR [rdi]
  409807:	lea    rdx,[rax-0x1]
  40980b:	mov    QWORD PTR [rdi],rdx
  40980e:	test   rax,rax
  409811:	je     409858 <__sprintf_chk@plt+0x7278>
  409813:	mov    rax,QWORD PTR [rdi+0x8]
  409817:	lea    rdx,[rax+0x1]
  40981b:	mov    QWORD PTR [rdi+0x8],rdx
  40981f:	movzx  eax,BYTE PTR [rax]
  409822:	mov    DWORD PTR [rbx],eax
  409824:	mov    eax,DWORD PTR [rbx+0x4]
  409827:	inc    eax
  409829:	mov    DWORD PTR [rbx+0x4],eax
  40982c:	cmp    eax,0x7ffffffc
  409831:	jle    4097f6 <__sprintf_chk@plt+0x7216>
  409833:	mov    edx,DWORD PTR [rbx+0x10]
  409836:	lea    rsi,[rip+0xd959]        # 417196 <__sprintf_chk@plt+0x14bb6>
  40983d:	mov    rdi,rbx
  409840:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  409845:	nop    DWORD PTR [rax]
  409848:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40984d:	jmp    4097d1 <__sprintf_chk@plt+0x71f1>
  409852:	nop    WORD PTR [rax+rax*1+0x0]
  409858:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40985d:	mov    DWORD PTR [rbx],eax
  40985f:	jmp    409824 <__sprintf_chk@plt+0x7244>
  409861:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40986c:	nop    DWORD PTR [rax+0x0]
  409870:	movsxd r8,edx
  409873:	inc    edx
  409875:	sub    ecx,edx
  409877:	mov    rax,QWORD PTR [rdi+0x18]
  40987b:	mov    edx,ecx
  40987d:	sar    edx,0x1f
  409880:	lea    rdi,[rax+r8*4]
  409884:	mov    eax,edx
  409886:	xor    eax,ecx
  409888:	sub    eax,edx
  40988a:	cmp    eax,0x1ffff
  40988f:	jg     4098b0 <__sprintf_chk@plt+0x72d0>
  409891:	mov    edx,DWORD PTR [rdi]
  409893:	lea    eax,[rcx+0x1ffff]
  409899:	shl    eax,0xe
  40989c:	and    edx,0x3fff
  4098a2:	mov    ecx,eax
  4098a4:	or     ecx,edx
  4098a6:	mov    DWORD PTR [rdi],ecx
  4098a8:	ret    
  4098a9:	nop    DWORD PTR [rax+0x0]
  4098b0:	sub    rsp,0x8
  4098b4:	mov    rdi,QWORD PTR [rsi]
  4098b7:	lea    rsi,[rip+0xd8f1]        # 4171af <__sprintf_chk@plt+0x14bcf>
  4098be:	mov    edx,DWORD PTR [rdi+0x10]
  4098c1:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  4098c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098d0:	cmp    esi,0xffffffff
  4098d3:	je     409978 <__sprintf_chk@plt+0x7398>
  4098d9:	push   r15
  4098db:	mov    r9d,esi
  4098de:	mov    r15,rdi
  4098e1:	push   r14
  4098e3:	mov    r14d,edx
  4098e6:	push   r13
  4098e8:	mov    r13d,r8d
  4098eb:	push   r12
  4098ed:	mov    r12d,ecx
  4098f0:	push   rbp
  4098f1:	lea    rbp,[rdi+0x18]
  4098f5:	push   rbx
  4098f6:	sub    rsp,0x8
  4098fa:	jmp    409919 <__sprintf_chk@plt+0x7339>
  4098fc:	nop    DWORD PTR [rax+0x0]
  409900:	mov    rdi,QWORD PTR [r15]
  409903:	mov    edx,r9d
  409906:	mov    ecx,r14d
  409909:	mov    rsi,rbp
  40990c:	call   409870 <__sprintf_chk@plt+0x7290>
  409911:	mov    r9d,ebx
  409914:	cmp    ebx,0xffffffff
  409917:	je     409964 <__sprintf_chk@plt+0x7384>
  409919:	mov    rdx,QWORD PTR [r15]
  40991c:	movsxd rax,r9d
  40991f:	mov    rdx,QWORD PTR [rdx+0x18]
  409923:	mov    ebx,DWORD PTR [rdx+rax*4]
  409926:	shr    ebx,0xe
  409929:	sub    ebx,0x1ffff
  40992f:	cmp    ebx,0xffffffff
  409932:	je     409939 <__sprintf_chk@plt+0x7359>
  409934:	lea    ebx,[rbx+r9*1+0x1]
  409939:	mov    edx,r12d
  40993c:	mov    esi,r9d
  40993f:	mov    rdi,r15
  409942:	call   402e60 <__sprintf_chk@plt+0x880>
  409947:	test   eax,eax
  409949:	jne    409900 <__sprintf_chk@plt+0x7320>
  40994b:	mov    rdi,QWORD PTR [r15]
  40994e:	mov    edx,r9d
  409951:	mov    ecx,r13d
  409954:	mov    rsi,rbp
  409957:	call   409870 <__sprintf_chk@plt+0x7290>
  40995c:	mov    r9d,ebx
  40995f:	cmp    ebx,0xffffffff
  409962:	jne    409919 <__sprintf_chk@plt+0x7339>
  409964:	add    rsp,0x8
  409968:	pop    rbx
  409969:	pop    rbp
  40996a:	pop    r12
  40996c:	pop    r13
  40996e:	pop    r14
  409970:	pop    r15
  409972:	ret    
  409973:	nop    DWORD PTR [rax+rax*1+0x0]
  409978:	ret    
  409979:	nop    DWORD PTR [rax+0x0]
  409980:	push   r13
  409982:	mov    r13d,esi
  409985:	mov    ecx,0xff
  40998a:	push   r12
  40998c:	mov    r12d,edx
  40998f:	push   rbp
  409990:	push   rbx
  409991:	mov    rbx,rdi
  409994:	sub    rsp,0x8
  409998:	mov    edx,DWORD PTR [rdi+0x30]
  40999b:	mov    esi,DWORD PTR [rdi+0x38]
  40999e:	mov    r8d,edx
  4099a1:	mov    rbp,QWORD PTR [rdi]
  4099a4:	call   4098d0 <__sprintf_chk@plt+0x72f0>
  4099a9:	movsxd rdx,DWORD PTR [rbx+0x30]
  4099ad:	mov    DWORD PTR [rbx+0x38],0xffffffff
  4099b4:	cmp    edx,DWORD PTR [rbp+0x50]
  4099b7:	jge    4099f0 <__sprintf_chk@plt+0x7410>
  4099b9:	mov    rax,QWORD PTR [rbp+0x18]
  4099bd:	mov    DWORD PTR [rax+rdx*4],r13d
  4099c1:	mov    rax,QWORD PTR [rbp+0x28]
  4099c5:	movsxd rdx,DWORD PTR [rbx+0x30]
  4099c9:	cmp    edx,DWORD PTR [rbp+0x54]
  4099cc:	jge    409a20 <__sprintf_chk@plt+0x7440>
  4099ce:	mov    DWORD PTR [rax+rdx*4],r12d
  4099d2:	mov    eax,DWORD PTR [rbx+0x30]
  4099d5:	lea    edx,[rax+0x1]
  4099d8:	mov    DWORD PTR [rbx+0x30],edx
  4099db:	add    rsp,0x8
  4099df:	pop    rbx
  4099e0:	pop    rbp
  4099e1:	pop    r12
  4099e3:	pop    r13
  4099e5:	ret    
  4099e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4099f0:	mov    rsi,QWORD PTR [rbp+0x18]
  4099f4:	mov    rdi,QWORD PTR [rbx+0x20]
  4099f8:	lea    rdx,[rbp+0x50]
  4099fc:	lea    r9,[rip+0xd7c7]        # 4171ca <__sprintf_chk@plt+0x14bea>
  409a03:	mov    r8d,0x7ffffffd
  409a09:	mov    ecx,0x4
  409a0e:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  409a13:	mov    QWORD PTR [rbp+0x18],rax
  409a17:	movsxd rdx,DWORD PTR [rbx+0x30]
  409a1b:	jmp    4099bd <__sprintf_chk@plt+0x73dd>
  409a1d:	nop    DWORD PTR [rax]
  409a20:	mov    rdi,QWORD PTR [rbx+0x20]
  409a24:	lea    rdx,[rbp+0x54]
  409a28:	lea    r9,[rip+0xd79b]        # 4171ca <__sprintf_chk@plt+0x14bea>
  409a2f:	mov    r8d,0x7ffffffd
  409a35:	mov    ecx,0x4
  409a3a:	mov    rsi,rax
  409a3d:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  409a42:	mov    QWORD PTR [rbp+0x28],rax
  409a46:	movsxd rdx,DWORD PTR [rbx+0x30]
  409a4a:	jmp    4099ce <__sprintf_chk@plt+0x73ee>
  409a4c:	nop    DWORD PTR [rax+0x0]
  409a50:	mov    eax,DWORD PTR [rsi]
  409a52:	sub    eax,0x6
  409a55:	cmp    eax,0x8
  409a58:	ja     409b40 <__sprintf_chk@plt+0x7560>
  409a5e:	lea    rdx,[rip+0xe10f]        # 417b74 <__sprintf_chk@plt+0x15594>
  409a65:	movsxd rax,DWORD PTR [rdx+rax*4]
  409a69:	push   rbx
  409a6a:	add    rax,rdx
  409a6d:	mov    rbx,rsi
  409a70:	notrack jmp rax
  409a73:	nop    DWORD PTR [rax+rax*1+0x0]
  409a78:	mov    eax,DWORD PTR [rsi+0xc]
  409a7b:	test   ah,0x1
  409a7e:	jne    409a8b <__sprintf_chk@plt+0x74ab>
  409a80:	movzx  edx,BYTE PTR [rdi+0x4a]
  409a84:	cmp    eax,edx
  409a86:	jl     409a8b <__sprintf_chk@plt+0x74ab>
  409a88:	dec    DWORD PTR [rdi+0x3c]
  409a8b:	mov    eax,DWORD PTR [rbx+0x8]
  409a8e:	test   ah,0x1
  409a91:	jne    409aa1 <__sprintf_chk@plt+0x74c1>
  409a93:	movzx  edx,BYTE PTR [rdi+0x4a]
  409a97:	cmp    eax,edx
  409a99:	jl     409aa1 <__sprintf_chk@plt+0x74c1>
  409a9b:	dec    DWORD PTR [rdi+0x3c]
  409a9e:	mov    eax,DWORD PTR [rbx+0x8]
  409aa1:	mov    rdx,QWORD PTR [rdi+0x18]
  409aa5:	mov    ecx,0xe
  409aaa:	shl    eax,0x17
  409aad:	shlx   esi,DWORD PTR [rbx+0xc],ecx
  409ab3:	mov    edx,DWORD PTR [rdx+0x8]
  409ab6:	or     esi,eax
  409ab8:	or     esi,0x6
  409abb:	call   409980 <__sprintf_chk@plt+0x73a0>
  409ac0:	mov    DWORD PTR [rbx+0x8],eax
  409ac3:	mov    DWORD PTR [rbx],0xb
  409ac9:	pop    rbx
  409aca:	ret    
  409acb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ad0:	lea    rdx,[rsi+0x8]
  409ad4:	pop    rbx
  409ad5:	jmp    403bb0 <__sprintf_chk@plt+0x15d0>
  409ada:	nop    WORD PTR [rax+rax*1+0x0]
  409ae0:	mov    DWORD PTR [rsi],0xc
  409ae6:	pop    rbx
  409ae7:	ret    
  409ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  409af0:	mov    rax,QWORD PTR [rdi+0x18]
  409af4:	mov    edx,DWORD PTR [rax+0x8]
  409af7:	mov    eax,0x17
  409afc:	shlx   esi,DWORD PTR [rsi+0x8],eax
  409b02:	or     esi,0x4
  409b05:	call   409980 <__sprintf_chk@plt+0x73a0>
  409b0a:	mov    DWORD PTR [rbx+0x8],eax
  409b0d:	mov    DWORD PTR [rbx],0xb
  409b13:	pop    rbx
  409b14:	ret    
  409b15:	nop    DWORD PTR [rax]
  409b18:	mov    rax,QWORD PTR [rdi+0x18]
  409b1c:	mov    edx,DWORD PTR [rax+0x8]
  409b1f:	mov    eax,0xe
  409b24:	shlx   esi,DWORD PTR [rsi+0x8],eax
  409b2a:	or     esi,0x5
  409b2d:	call   409980 <__sprintf_chk@plt+0x73a0>
  409b32:	mov    DWORD PTR [rbx+0x8],eax
  409b35:	mov    DWORD PTR [rbx],0xb
  409b3b:	pop    rbx
  409b3c:	ret    
  409b3d:	nop    DWORD PTR [rax]
  409b40:	ret    
  409b41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409b4c:	nop    DWORD PTR [rax+0x0]
  409b50:	movsxd rax,DWORD PTR [rdi+0x30]
  409b54:	cmp    eax,DWORD PTR [rdi+0x34]
  409b57:	jle    409b65 <__sprintf_chk@plt+0x7585>
  409b59:	test   eax,eax
  409b5b:	jne    409b80 <__sprintf_chk@plt+0x75a0>
  409b5d:	movzx  eax,BYTE PTR [rdi+0x4a]
  409b61:	cmp    eax,esi
  409b63:	jle    409bd0 <__sprintf_chk@plt+0x75f0>
  409b65:	lea    eax,[rsi+rdx*1-0x1]
  409b69:	mov    rdx,QWORD PTR [rdi+0x18]
  409b6d:	shl    esi,0x6
  409b70:	shl    eax,0x17
  409b73:	or     esi,eax
  409b75:	mov    edx,DWORD PTR [rdx+0x8]
  409b78:	or     esi,0x3
  409b7b:	jmp    409980 <__sprintf_chk@plt+0x73a0>
  409b80:	mov    rcx,QWORD PTR [rdi]
  409b83:	mov    rcx,QWORD PTR [rcx+0x18]
  409b87:	lea    r8,[rcx+rax*4-0x4]
  409b8c:	mov    ecx,DWORD PTR [r8]
  409b8f:	lea    eax,[rsi+rdx*1-0x1]
  409b93:	mov    edx,ecx
  409b95:	and    edx,0x3f
  409b98:	cmp    edx,0x3
  409b9b:	jne    409b69 <__sprintf_chk@plt+0x7589>
  409b9d:	mov    edx,ecx
  409b9f:	shr    edx,0x6
  409ba2:	movzx  edx,dl
  409ba5:	cmp    esi,edx
  409ba7:	jl     409b69 <__sprintf_chk@plt+0x7589>
  409ba9:	mov    edx,ecx
  409bab:	shr    edx,0x17
  409bae:	lea    r9d,[rdx+0x1]
  409bb2:	cmp    r9d,esi
  409bb5:	jl     409b69 <__sprintf_chk@plt+0x7589>
  409bb7:	cmp    edx,eax
  409bb9:	jge    409bd0 <__sprintf_chk@plt+0x75f0>
  409bbb:	and    ecx,0x7fffff
  409bc1:	shl    eax,0x17
  409bc4:	or     eax,ecx
  409bc6:	mov    DWORD PTR [r8],eax
  409bc9:	ret    
  409bca:	nop    WORD PTR [rax+rax*1+0x0]
  409bd0:	ret    
  409bd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409bdc:	nop    DWORD PTR [rax+0x0]
  409be0:	push   r12
  409be2:	mov    r12,rdi
  409be5:	push   rbp
  409be6:	mov    ebp,edx
  409be8:	push   rbx
  409be9:	mov    rbx,rsi
  409bec:	sub    rsp,0x20
  409bf0:	mov    rax,QWORD PTR fs:0x28
  409bf9:	mov    QWORD PTR [rsp+0x18],rax
  409bfe:	xor    eax,eax
  409c00:	call   409a50 <__sprintf_chk@plt+0x7470>
  409c05:	mov    ecx,DWORD PTR [rbx]
  409c07:	cmp    ecx,0xc
  409c0a:	ja     409c51 <__sprintf_chk@plt+0x7671>
  409c0c:	lea    rsi,[rip+0xdf85]        # 417b98 <__sprintf_chk@plt+0x155b8>
  409c13:	mov    edx,ecx
  409c15:	movsxd rax,DWORD PTR [rsi+rdx*4]
  409c19:	add    rax,rsi
  409c1c:	notrack jmp rax
  409c1f:	nop
  409c20:	mov    eax,DWORD PTR [rbx+0x8]
  409c23:	cmp    eax,ebp
  409c25:	je     409c48 <__sprintf_chk@plt+0x7668>
  409c27:	mov    rdx,QWORD PTR [r12+0x18]
  409c2c:	mov    ecx,ebp
  409c2e:	shl    eax,0x17
  409c31:	shl    ecx,0x6
  409c34:	mov    esi,eax
  409c36:	mov    edx,DWORD PTR [rdx+0x8]
  409c39:	or     esi,ecx
  409c3b:	mov    rdi,r12
  409c3e:	call   409980 <__sprintf_chk@plt+0x73a0>
  409c43:	nop    DWORD PTR [rax+rax*1+0x0]
  409c48:	mov    DWORD PTR [rbx+0x8],ebp
  409c4b:	mov    DWORD PTR [rbx],0xc
  409c51:	mov    rax,QWORD PTR [rsp+0x18]
  409c56:	xor    rax,QWORD PTR fs:0x28
  409c5f:	jne    409d5b <__sprintf_chk@plt+0x777b>
  409c65:	add    rsp,0x20
  409c69:	pop    rbx
  409c6a:	pop    rbp
  409c6b:	pop    r12
  409c6d:	ret    
  409c6e:	xchg   ax,ax
  409c70:	mov    edx,0x1
  409c75:	mov    esi,ebp
  409c77:	mov    rdi,r12
  409c7a:	call   409b50 <__sprintf_chk@plt+0x7570>
  409c7f:	jmp    409c48 <__sprintf_chk@plt+0x7668>
  409c81:	nop    DWORD PTR [rax+0x0]
  409c88:	mov    rax,QWORD PTR [r12+0x18]
  409c8d:	xor    esi,esi
  409c8f:	cmp    ecx,0x2
  409c92:	sete   sil
  409c96:	mov    edx,DWORD PTR [rax+0x8]
  409c99:	mov    eax,ebp
  409c9b:	shl    esi,0x17
  409c9e:	shl    eax,0x6
  409ca1:	or     esi,eax
  409ca3:	or     esi,0x2
  409ca6:	mov    rdi,r12
  409ca9:	call   409980 <__sprintf_chk@plt+0x73a0>
  409cae:	jmp    409c48 <__sprintf_chk@plt+0x7668>
  409cb0:	mov    rax,QWORD PTR [r12+0x18]
  409cb5:	mov    rdi,r12
  409cb8:	mov    edx,DWORD PTR [rax+0x8]
  409cbb:	mov    eax,0xe
  409cc0:	shlx   esi,DWORD PTR [rbx+0x8],eax
  409cc6:	mov    eax,ebp
  409cc8:	shl    eax,0x6
  409ccb:	or     esi,eax
  409ccd:	or     esi,0x1
  409cd0:	call   409980 <__sprintf_chk@plt+0x73a0>
  409cd5:	jmp    409c48 <__sprintf_chk@plt+0x7668>
  409cda:	nop    WORD PTR [rax+rax*1+0x0]
  409ce0:	mov    rsi,rsp
  409ce3:	vmovsd xmm0,QWORD PTR [rbx+0x8]
  409ce8:	lea    rcx,[rsi+0x8]
  409cec:	mov    rdx,rsi
  409cef:	mov    rdi,r12
  409cf2:	vmovsd QWORD PTR [rsp],xmm0
  409cf7:	mov    DWORD PTR [rsp+0x8],0x3
  409cff:	call   409520 <__sprintf_chk@plt+0x6f40>
  409d04:	mov    rdx,QWORD PTR [r12+0x18]
  409d09:	mov    esi,ebp
  409d0b:	shl    esi,0x6
  409d0e:	shl    eax,0xe
  409d11:	or     esi,eax
  409d13:	mov    edx,DWORD PTR [rdx+0x8]
  409d16:	or     esi,0x1
  409d19:	mov    rdi,r12
  409d1c:	call   409980 <__sprintf_chk@plt+0x73a0>
  409d21:	jmp    409c48 <__sprintf_chk@plt+0x7668>
  409d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d30:	mov    rax,QWORD PTR [r12]
  409d34:	movsxd rdx,DWORD PTR [rbx+0x8]
  409d38:	mov    rax,QWORD PTR [rax+0x18]
  409d3c:	lea    rcx,[rax+rdx*4]
  409d40:	mov    eax,DWORD PTR [rcx]
  409d42:	mov    edx,ebp
  409d44:	shl    edx,0x6
  409d47:	and    eax,0xffffc03f
  409d4c:	and    edx,0x3fc0
  409d52:	or     eax,edx
  409d54:	mov    DWORD PTR [rcx],eax
  409d56:	jmp    409c48 <__sprintf_chk@plt+0x7668>
  409d5b:	call   4023e0 <__stack_chk_fail@plt>
  409d60:	push   r12
  409d62:	mov    r12d,esi
  409d65:	lea    esi,[rdx-0x1]
  409d68:	mov    eax,esi
  409d6a:	mov    edx,0x51eb851f
  409d6f:	push   rbp
  409d70:	imul   edx
  409d72:	sar    esi,0x1f
  409d75:	push   rbx
  409d76:	sar    edx,0x4
  409d79:	sub    edx,esi
  409d7b:	mov    esi,ecx
  409d7d:	shl    esi,0x17
  409d80:	mov    eax,0x0
  409d85:	cmp    ecx,0xffffffff
  409d88:	cmovne eax,esi
  409d8b:	lea    ebx,[rdx+0x1]
  409d8e:	mov    esi,r12d
  409d91:	mov    rdx,QWORD PTR [rdi+0x18]
  409d95:	shl    esi,0x6
  409d98:	mov    rbp,rdi
  409d9b:	mov    edx,DWORD PTR [rdx+0x8]
  409d9e:	or     esi,eax
  409da0:	cmp    ebx,0x1ff
  409da6:	jg     409dc8 <__sprintf_chk@plt+0x77e8>
  409da8:	shl    ebx,0xe
  409dab:	or     esi,ebx
  409dad:	or     esi,0x22
  409db0:	call   409980 <__sprintf_chk@plt+0x73a0>
  409db5:	inc    r12d
  409db8:	pop    rbx
  409db9:	mov    DWORD PTR [rbp+0x3c],r12d
  409dbd:	pop    rbp
  409dbe:	pop    r12
  409dc0:	ret    
  409dc1:	nop    DWORD PTR [rax+0x0]
  409dc8:	or     esi,0x22
  409dcb:	call   409980 <__sprintf_chk@plt+0x73a0>
  409dd0:	mov    rax,QWORD PTR [rbp+0x18]
  409dd4:	mov    esi,ebx
  409dd6:	mov    edx,DWORD PTR [rax+0x8]
  409dd9:	mov    rdi,rbp
  409ddc:	call   409980 <__sprintf_chk@plt+0x73a0>
  409de1:	inc    r12d
  409de4:	pop    rbx
  409de5:	mov    DWORD PTR [rbp+0x3c],r12d
  409de9:	pop    rbp
  409dea:	pop    r12
  409dec:	ret    
  409ded:	nop    DWORD PTR [rax]
  409df0:	cmp    edx,0xffffffff
  409df3:	je     409e48 <__sprintf_chk@plt+0x7868>
  409df5:	mov    r8d,DWORD PTR [rsi]
  409df8:	cmp    r8d,0xffffffff
  409dfc:	je     409e50 <__sprintf_chk@plt+0x7870>
  409dfe:	mov    r10,QWORD PTR [rdi]
  409e01:	mov    r9,QWORD PTR [r10+0x18]
  409e05:	jmp    409e13 <__sprintf_chk@plt+0x7833>
  409e07:	nop    WORD PTR [rax+rax*1+0x0]
  409e10:	mov    r8d,eax
  409e13:	movsxd rax,r8d
  409e16:	mov    eax,DWORD PTR [r9+rax*4]
  409e1a:	shr    eax,0xe
  409e1d:	sub    eax,0x1ffff
  409e22:	cmp    eax,0xffffffff
  409e25:	je     409e31 <__sprintf_chk@plt+0x7851>
  409e27:	lea    eax,[r8+rax*1+0x1]
  409e2c:	cmp    eax,0xffffffff
  409e2f:	jne    409e10 <__sprintf_chk@plt+0x7830>
  409e31:	lea    rsi,[rdi+0x18]
  409e35:	mov    ecx,edx
  409e37:	mov    rdi,r10
  409e3a:	mov    edx,r8d
  409e3d:	jmp    409870 <__sprintf_chk@plt+0x7290>
  409e42:	nop    WORD PTR [rax+rax*1+0x0]
  409e48:	ret    
  409e49:	nop    DWORD PTR [rax+0x0]
  409e50:	mov    DWORD PTR [rsi],edx
  409e52:	ret    
  409e53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409e5e:	xchg   ax,ax
  409e60:	cmp    DWORD PTR [rdi+0x30],edx
  409e63:	je     409e78 <__sprintf_chk@plt+0x7898>
  409e65:	mov    r8d,edx
  409e68:	mov    ecx,0xff
  409e6d:	jmp    4098d0 <__sprintf_chk@plt+0x72f0>
  409e72:	nop    WORD PTR [rax+rax*1+0x0]
  409e78:	mov    DWORD PTR [rdi+0x34],edx
  409e7b:	lea    rax,[rdi+0x38]
  409e7f:	mov    edx,esi
  409e81:	mov    rsi,rax
  409e84:	jmp    409df0 <__sprintf_chk@plt+0x7810>
  409e89:	nop    DWORD PTR [rax+0x0]
  409e90:	push   rbp
  409e91:	mov    esi,0x7fff8016
  409e96:	push   rbx
  409e97:	mov    rbx,rdi
  409e9a:	sub    rsp,0x18
  409e9e:	mov    rax,QWORD PTR fs:0x28
  409ea7:	mov    QWORD PTR [rsp+0x8],rax
  409eac:	xor    eax,eax
  409eae:	mov    rax,QWORD PTR [rdi+0x18]
  409eb2:	mov    ebp,DWORD PTR [rdi+0x38]
  409eb5:	mov    DWORD PTR [rdi+0x38],0xffffffff
  409ebc:	mov    edx,DWORD PTR [rax+0x8]
  409ebf:	call   409980 <__sprintf_chk@plt+0x73a0>
  409ec4:	lea    rsi,[rsp+0x4]
  409ec9:	mov    edx,ebp
  409ecb:	mov    rdi,rbx
  409ece:	mov    DWORD PTR [rsp+0x4],eax
  409ed2:	call   409df0 <__sprintf_chk@plt+0x7810>
  409ed7:	mov    rcx,QWORD PTR [rsp+0x8]
  409edc:	xor    rcx,QWORD PTR fs:0x28
  409ee5:	mov    eax,DWORD PTR [rsp+0x4]
  409ee9:	jne    409ef2 <__sprintf_chk@plt+0x7912>
  409eeb:	add    rsp,0x18
  409eef:	pop    rbx
  409ef0:	pop    rbp
  409ef1:	ret    
  409ef2:	call   4023e0 <__stack_chk_fail@plt>
  409ef7:	nop    WORD PTR [rax+rax*1+0x0]
  409f00:	push   rbx
  409f01:	mov    eax,edx
  409f03:	shl    ecx,0x17
  409f06:	mov    rdx,QWORD PTR [rdi+0x18]
  409f0a:	or     ecx,esi
  409f0c:	shl    r8d,0xe
  409f10:	shl    eax,0x6
  409f13:	or     ecx,r8d
  409f16:	mov    esi,eax
  409f18:	mov    edx,DWORD PTR [rdx+0x8]
  409f1b:	mov    rbx,rdi
  409f1e:	or     esi,ecx
  409f20:	call   409980 <__sprintf_chk@plt+0x73a0>
  409f25:	mov    rdi,rbx
  409f28:	pop    rbx
  409f29:	jmp    409e90 <__sprintf_chk@plt+0x78b0>
  409f2e:	xchg   ax,ax
  409f30:	push   r15
  409f32:	push   r14
  409f34:	push   r13
  409f36:	push   r12
  409f38:	mov    r12d,edx
  409f3b:	push   rbp
  409f3c:	mov    rbp,rsi
  409f3f:	push   rbx
  409f40:	mov    rbx,rdi
  409f43:	sub    rsp,0x18
  409f47:	call   409be0 <__sprintf_chk@plt+0x7600>
  409f4c:	cmp    DWORD PTR [rbp+0x0],0xa
  409f50:	je     40a050 <__sprintf_chk@plt+0x7a70>
  409f56:	mov    esi,DWORD PTR [rbp+0x10]
  409f59:	mov    r9d,DWORD PTR [rbp+0x14]
  409f5d:	cmp    esi,r9d
  409f60:	jne    409f88 <__sprintf_chk@plt+0x79a8>
  409f62:	mov    DWORD PTR [rbp+0x8],r12d
  409f66:	mov    QWORD PTR [rbp+0x10],0xffffffffffffffff
  409f6e:	mov    DWORD PTR [rbp+0x0],0xc
  409f75:	add    rsp,0x18
  409f79:	pop    rbx
  409f7a:	pop    rbp
  409f7b:	pop    r12
  409f7d:	pop    r13
  409f7f:	pop    r14
  409f81:	pop    r15
  409f83:	ret    
  409f84:	nop    DWORD PTR [rax+0x0]
  409f88:	mov    rdi,rbx
  409f8b:	call   402df0 <__sprintf_chk@plt+0x810>
  409f90:	test   eax,eax
  409f92:	je     40a068 <__sprintf_chk@plt+0x7a88>
  409f98:	cmp    DWORD PTR [rbp+0x0],0xa
  409f9c:	mov    ecx,0xffffffff
  409fa1:	je     409fad <__sprintf_chk@plt+0x79cd>
  409fa3:	mov    rdi,rbx
  409fa6:	call   409e90 <__sprintf_chk@plt+0x78b0>
  409fab:	mov    ecx,eax
  409fad:	mov    eax,DWORD PTR [rbx+0x30]
  409fb0:	mov    r13d,r12d
  409fb3:	mov    DWORD PTR [rbx+0x34],eax
  409fb6:	mov    rax,QWORD PTR [rbx+0x18]
  409fba:	shl    r13d,0x6
  409fbe:	mov    edx,DWORD PTR [rax+0x8]
  409fc1:	mov    esi,r13d
  409fc4:	or     esi,0x4002
  409fca:	mov    rdi,rbx
  409fcd:	mov    DWORD PTR [rsp+0xc],ecx
  409fd1:	call   409980 <__sprintf_chk@plt+0x73a0>
  409fd6:	mov    r15d,eax
  409fd9:	mov    eax,DWORD PTR [rbx+0x30]
  409fdc:	mov    esi,r13d
  409fdf:	mov    DWORD PTR [rbx+0x34],eax
  409fe2:	mov    rax,QWORD PTR [rbx+0x18]
  409fe6:	or     esi,0x800002
  409fec:	mov    edx,DWORD PTR [rax+0x8]
  409fef:	mov    rdi,rbx
  409ff2:	call   409980 <__sprintf_chk@plt+0x73a0>
  409ff7:	mov    r14d,eax
  409ffa:	mov    eax,DWORD PTR [rbx+0x30]
  409ffd:	mov    ecx,DWORD PTR [rsp+0xc]
  40a001:	mov    DWORD PTR [rbx+0x34],eax
  40a004:	lea    rsi,[rbx+0x38]
  40a008:	mov    edx,ecx
  40a00a:	mov    rdi,rbx
  40a00d:	call   409df0 <__sprintf_chk@plt+0x7810>
  40a012:	mov    r13d,DWORD PTR [rbx+0x30]
  40a016:	mov    r8d,r15d
  40a019:	mov    DWORD PTR [rbx+0x34],r13d
  40a01d:	mov    ecx,r12d
  40a020:	mov    edx,r13d
  40a023:	mov    esi,DWORD PTR [rbp+0x14]
  40a026:	mov    rdi,rbx
  40a029:	call   4098d0 <__sprintf_chk@plt+0x72f0>
  40a02e:	mov    esi,DWORD PTR [rbp+0x10]
  40a031:	mov    r8d,r14d
  40a034:	mov    ecx,r12d
  40a037:	mov    edx,r13d
  40a03a:	mov    rdi,rbx
  40a03d:	call   4098d0 <__sprintf_chk@plt+0x72f0>
  40a042:	jmp    409f62 <__sprintf_chk@plt+0x7982>
  40a047:	nop    WORD PTR [rax+rax*1+0x0]
  40a050:	mov    edx,DWORD PTR [rbp+0x8]
  40a053:	lea    rsi,[rbp+0x10]
  40a057:	mov    rdi,rbx
  40a05a:	call   409df0 <__sprintf_chk@plt+0x7810>
  40a05f:	jmp    409f56 <__sprintf_chk@plt+0x7976>
  40a064:	nop    DWORD PTR [rax+0x0]
  40a068:	mov    esi,r9d
  40a06b:	mov    rdi,rbx
  40a06e:	mov    r14d,0xffffffff
  40a074:	call   402df0 <__sprintf_chk@plt+0x810>
  40a079:	mov    r15d,r14d
  40a07c:	test   eax,eax
  40a07e:	je     40a012 <__sprintf_chk@plt+0x7a32>
  40a080:	jmp    409f98 <__sprintf_chk@plt+0x79b8>
  40a085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a090:	push   rbp
  40a091:	push   rbx
  40a092:	mov    rbx,rdi
  40a095:	sub    rsp,0x8
  40a099:	mov    rbp,QWORD PTR [rdi+0x28]
  40a09d:	mov    r9,QWORD PTR [rdi+0x18]
  40a0a1:	mov    rax,QWORD PTR [rbp+0x0]
  40a0a5:	mov    QWORD PTR [rdi+0x28],rax
  40a0a9:	mov    rdi,QWORD PTR [r9+0x30]
  40a0ad:	movzx  r8d,BYTE PTR [rbp+0xc]
  40a0b2:	movzx  edx,BYTE PTR [rdi+0x4a]
  40a0b6:	cmp    r8b,dl
  40a0b9:	jae    40a10c <__sprintf_chk@plt+0x7b2c>
  40a0bb:	lea    r10d,[rdx-0x1]
  40a0bf:	sub    edx,r8d
  40a0c2:	mov    rax,QWORD PTR [rdi]
  40a0c5:	movzx  r10d,r10b
  40a0c9:	dec    edx
  40a0cb:	add    r10,r10
  40a0ce:	movzx  edx,dl
  40a0d1:	mov    rsi,QWORD PTR [rax+0x30]
  40a0d5:	add    rdx,rdx
  40a0d8:	lea    rax,[rdi+r10*1]
  40a0dc:	mov    ecx,DWORD PTR [rdi+0x30]
  40a0df:	lea    r10,[rdi+r10*1-0x2]
  40a0e4:	sub    r10,rdx
  40a0e7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0f0:	movzx  edx,WORD PTR [rax+0xc4]
  40a0f7:	sub    rax,0x2
  40a0fb:	shl    rdx,0x4
  40a0ff:	mov    DWORD PTR [rsi+rdx*1+0xc],ecx
  40a103:	cmp    rax,r10
  40a106:	jne    40a0f0 <__sprintf_chk@plt+0x7b10>
  40a108:	mov    BYTE PTR [rdi+0x4a],r8b
  40a10c:	cmp    BYTE PTR [rbp+0xd],0x0
  40a110:	jne    40a138 <__sprintf_chk@plt+0x7b58>
  40a112:	movzx  eax,BYTE PTR [rbx+0x4a]
  40a116:	mov    edx,DWORD PTR [rbp+0x8]
  40a119:	mov    DWORD PTR [rbx+0x3c],eax
  40a11c:	mov    eax,DWORD PTR [rbx+0x30]
  40a11f:	lea    rsi,[rbx+0x38]
  40a123:	mov    DWORD PTR [rbx+0x34],eax
  40a126:	add    rsp,0x8
  40a12a:	mov    rdi,rbx
  40a12d:	pop    rbx
  40a12e:	pop    rbp
  40a12f:	jmp    409df0 <__sprintf_chk@plt+0x7810>
  40a134:	nop    DWORD PTR [rax+0x0]
  40a138:	movzx  esi,r8b
  40a13c:	shl    esi,0x6
  40a13f:	mov    edx,DWORD PTR [r9+0x8]
  40a143:	or     esi,0x23
  40a146:	mov    rdi,rbx
  40a149:	call   409980 <__sprintf_chk@plt+0x73a0>
  40a14e:	jmp    40a112 <__sprintf_chk@plt+0x7b32>
  40a150:	mov    rax,QWORD PTR [rdi]
  40a153:	add    esi,DWORD PTR [rdi+0x3c]
  40a156:	movzx  edx,BYTE PTR [rax+0x73]
  40a15a:	cmp    edx,esi
  40a15c:	jge    40a16a <__sprintf_chk@plt+0x7b8a>
  40a15e:	cmp    esi,0xf9
  40a164:	jg     40a170 <__sprintf_chk@plt+0x7b90>
  40a166:	mov    BYTE PTR [rax+0x73],sil
  40a16a:	ret    
  40a16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a170:	sub    rsp,0x8
  40a174:	mov    rdi,QWORD PTR [rdi+0x18]
  40a178:	lea    rsi,[rip+0xdf19]        # 418098 <__sprintf_chk@plt+0x15ab8>
  40a17f:	mov    edx,DWORD PTR [rdi+0x10]
  40a182:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40a187:	nop    WORD PTR [rax+rax*1+0x0]
  40a190:	cmp    esi,0xd
  40a193:	je     40a1a0 <__sprintf_chk@plt+0x7bc0>
  40a195:	cmp    esi,0xe
  40a198:	je     40a1c8 <__sprintf_chk@plt+0x7be8>
  40a19a:	ret    
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	mov    rax,QWORD PTR [rdi]
  40a1a3:	movsxd rdx,DWORD PTR [rdx]
  40a1a6:	mov    rax,QWORD PTR [rax+0x18]
  40a1aa:	inc    ecx
  40a1ac:	lea    rdx,[rax+rdx*4]
  40a1b0:	mov    eax,DWORD PTR [rdx]
  40a1b2:	shl    ecx,0xe
  40a1b5:	and    ecx,0x7fc000
  40a1bb:	and    eax,0xff803fff
  40a1c0:	or     ecx,eax
  40a1c2:	mov    DWORD PTR [rdx],ecx
  40a1c4:	ret    
  40a1c5:	nop    DWORD PTR [rax]
  40a1c8:	push   rbx
  40a1c9:	mov    rbx,rdi
  40a1cc:	inc    ecx
  40a1ce:	mov    rax,QWORD PTR [rdi]
  40a1d1:	shl    ecx,0x17
  40a1d4:	mov    rsi,QWORD PTR [rax+0x18]
  40a1d8:	movsxd rax,DWORD PTR [rdx]
  40a1db:	lea    rdi,[rsi+rax*4]
  40a1df:	mov    eax,DWORD PTR [rdi]
  40a1e1:	and    eax,0x7fffff
  40a1e6:	or     ecx,eax
  40a1e8:	mov    DWORD PTR [rdi],ecx
  40a1ea:	mov    rdi,rbx
  40a1ed:	movsxd rax,DWORD PTR [rdx]
  40a1f0:	lea    rcx,[rsi+rax*4]
  40a1f4:	mov    edx,DWORD PTR [rcx]
  40a1f6:	mov    eax,0x6
  40a1fb:	shlx   eax,DWORD PTR [rbx+0x3c],eax
  40a201:	and    edx,0xffffc03f
  40a207:	and    eax,0x3fc0
  40a20c:	or     eax,edx
  40a20e:	mov    DWORD PTR [rcx],eax
  40a210:	mov    esi,0x1
  40a215:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40a21a:	inc    DWORD PTR [rbx+0x3c]
  40a21d:	pop    rbx
  40a21e:	ret    
  40a21f:	nop
  40a220:	push   rbp
  40a221:	mov    rbp,rsi
  40a224:	push   rbx
  40a225:	mov    rbx,rdi
  40a228:	sub    rsp,0x8
  40a22c:	call   409a50 <__sprintf_chk@plt+0x7470>
  40a231:	cmp    DWORD PTR [rbp+0x0],0xc
  40a235:	jne    40a243 <__sprintf_chk@plt+0x7c63>
  40a237:	lea    rsi,[rbp+0x8]
  40a23b:	mov    rdi,rbx
  40a23e:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a243:	mov    rdi,rbx
  40a246:	mov    esi,0x1
  40a24b:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40a250:	mov    edx,DWORD PTR [rbx+0x3c]
  40a253:	mov    rdi,rbx
  40a256:	lea    eax,[rdx+0x1]
  40a259:	mov    DWORD PTR [rbx+0x3c],eax
  40a25c:	add    rsp,0x8
  40a260:	pop    rbx
  40a261:	mov    rsi,rbp
  40a264:	pop    rbp
  40a265:	jmp    409f30 <__sprintf_chk@plt+0x7950>
  40a26a:	nop    WORD PTR [rax+rax*1+0x0]
  40a270:	push   rbp
  40a271:	mov    rbp,rdi
  40a274:	push   rbx
  40a275:	mov    rbx,rsi
  40a278:	sub    rsp,0x8
  40a27c:	call   409a50 <__sprintf_chk@plt+0x7470>
  40a281:	cmp    DWORD PTR [rbx],0xc
  40a284:	jne    40a299 <__sprintf_chk@plt+0x7cb9>
  40a286:	mov    ecx,DWORD PTR [rbx+0x14]
  40a289:	mov    eax,DWORD PTR [rbx+0x8]
  40a28c:	cmp    DWORD PTR [rbx+0x10],ecx
  40a28f:	je     40a2a7 <__sprintf_chk@plt+0x7cc7>
  40a291:	movzx  edx,BYTE PTR [rbp+0x4a]
  40a295:	cmp    edx,eax
  40a297:	jle    40a2b0 <__sprintf_chk@plt+0x7cd0>
  40a299:	mov    rsi,rbx
  40a29c:	mov    rdi,rbp
  40a29f:	call   40a220 <__sprintf_chk@plt+0x7c40>
  40a2a4:	mov    eax,DWORD PTR [rbx+0x8]
  40a2a7:	add    rsp,0x8
  40a2ab:	pop    rbx
  40a2ac:	pop    rbp
  40a2ad:	ret    
  40a2ae:	xchg   ax,ax
  40a2b0:	mov    edx,eax
  40a2b2:	mov    rsi,rbx
  40a2b5:	mov    rdi,rbp
  40a2b8:	call   409f30 <__sprintf_chk@plt+0x7950>
  40a2bd:	mov    eax,DWORD PTR [rbx+0x8]
  40a2c0:	jmp    40a2a7 <__sprintf_chk@plt+0x7cc7>
  40a2c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a2cd:	nop    DWORD PTR [rax]
  40a2d0:	mov    eax,DWORD PTR [rsi+0x14]
  40a2d3:	cmp    DWORD PTR [rsi+0x10],eax
  40a2d6:	je     40a2e0 <__sprintf_chk@plt+0x7d00>
  40a2d8:	jmp    40a270 <__sprintf_chk@plt+0x7c90>
  40a2da:	nop    WORD PTR [rax+rax*1+0x0]
  40a2e0:	jmp    409a50 <__sprintf_chk@plt+0x7470>
  40a2e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a2f0:	push   rbp
  40a2f1:	mov    rbp,rdi
  40a2f4:	push   rbx
  40a2f5:	mov    rbx,rsi
  40a2f8:	sub    rsp,0x38
  40a2fc:	mov    rax,QWORD PTR fs:0x28
  40a305:	mov    QWORD PTR [rsp+0x28],rax
  40a30a:	xor    eax,eax
  40a30c:	call   40a2d0 <__sprintf_chk@plt+0x7cf0>
  40a311:	mov    eax,DWORD PTR [rbx]
  40a313:	cmp    eax,0x4
  40a316:	je     40a3b0 <__sprintf_chk@plt+0x7dd0>
  40a31c:	jbe    40a360 <__sprintf_chk@plt+0x7d80>
  40a31e:	cmp    eax,0x5
  40a321:	jne    40a330 <__sprintf_chk@plt+0x7d50>
  40a323:	cmp    DWORD PTR [rbp+0x40],0xff
  40a32a:	jle    40a36d <__sprintf_chk@plt+0x7d8d>
  40a32c:	nop    DWORD PTR [rax+0x0]
  40a330:	mov    rsi,rbx
  40a333:	mov    rdi,rbp
  40a336:	call   40a270 <__sprintf_chk@plt+0x7c90>
  40a33b:	mov    rdx,QWORD PTR [rsp+0x28]
  40a340:	xor    rdx,QWORD PTR fs:0x28
  40a349:	jne    40a416 <__sprintf_chk@plt+0x7e36>
  40a34f:	add    rsp,0x38
  40a353:	pop    rbx
  40a354:	pop    rbp
  40a355:	ret    
  40a356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a360:	test   eax,eax
  40a362:	je     40a330 <__sprintf_chk@plt+0x7d50>
  40a364:	cmp    DWORD PTR [rbp+0x40],0xff
  40a36b:	jg     40a330 <__sprintf_chk@plt+0x7d50>
  40a36d:	cmp    eax,0x1
  40a370:	je     40a3e8 <__sprintf_chk@plt+0x7e08>
  40a372:	cmp    eax,0x5
  40a375:	je     40a3d0 <__sprintf_chk@plt+0x7df0>
  40a377:	cmp    eax,0x2
  40a37a:	sete   al
  40a37d:	movzx  eax,al
  40a380:	mov    DWORD PTR [rsp+0x10],eax
  40a384:	mov    DWORD PTR [rsp+0x18],0x1
  40a38c:	lea    rsi,[rsp+0x10]
  40a391:	lea    rcx,[rsi+0x8]
  40a395:	mov    rdx,rsi
  40a398:	mov    rdi,rbp
  40a39b:	call   409520 <__sprintf_chk@plt+0x6f40>
  40a3a0:	mov    DWORD PTR [rbx+0x8],eax
  40a3a3:	mov    DWORD PTR [rbx],0x4
  40a3a9:	or     ah,0x1
  40a3ac:	jmp    40a33b <__sprintf_chk@plt+0x7d5b>
  40a3ae:	xchg   ax,ax
  40a3b0:	mov    eax,DWORD PTR [rbx+0x8]
  40a3b3:	cmp    eax,0xff
  40a3b8:	jg     40a330 <__sprintf_chk@plt+0x7d50>
  40a3be:	or     ah,0x1
  40a3c1:	jmp    40a33b <__sprintf_chk@plt+0x7d5b>
  40a3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3d0:	vmovsd xmm0,QWORD PTR [rbx+0x8]
  40a3d5:	mov    DWORD PTR [rsp+0x18],0x3
  40a3dd:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40a3e3:	jmp    40a38c <__sprintf_chk@plt+0x7dac>
  40a3e5:	nop    DWORD PTR [rax]
  40a3e8:	mov    rax,QWORD PTR [rbp+0x8]
  40a3ec:	lea    rdx,[rsp+0x10]
  40a3f1:	lea    rcx,[rdx+0x8]
  40a3f5:	mov    rsi,rsp
  40a3f8:	mov    rdi,rbp
  40a3fb:	mov    DWORD PTR [rsp+0x18],0x0
  40a403:	mov    QWORD PTR [rsp],rax
  40a407:	mov    DWORD PTR [rsp+0x8],0x5
  40a40f:	call   409520 <__sprintf_chk@plt+0x6f40>
  40a414:	jmp    40a3a0 <__sprintf_chk@plt+0x7dc0>
  40a416:	call   4023e0 <__stack_chk_fail@plt>
  40a41b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a420:	push   r15
  40a422:	push   r14
  40a424:	mov    r14d,esi
  40a427:	mov    rsi,rcx
  40a42a:	push   r13
  40a42c:	mov    r13d,edx
  40a42f:	push   r12
  40a431:	mov    r12,r8
  40a434:	push   rbp
  40a435:	mov    rbp,rdi
  40a438:	push   rbx
  40a439:	mov    rbx,rcx
  40a43c:	sub    rsp,0x8
  40a440:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40a445:	mov    rsi,r12
  40a448:	mov    rdi,rbp
  40a44b:	mov    r15d,eax
  40a44e:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40a453:	cmp    DWORD PTR [r12],0xc
  40a458:	mov    ecx,eax
  40a45a:	jne    40a469 <__sprintf_chk@plt+0x7e89>
  40a45c:	lea    rsi,[r12+0x8]
  40a461:	mov    rdi,rbp
  40a464:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a469:	cmp    DWORD PTR [rbx],0xc
  40a46c:	jne    40a47a <__sprintf_chk@plt+0x7e9a>
  40a46e:	lea    rsi,[rbx+0x8]
  40a472:	mov    rdi,rbp
  40a475:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a47a:	test   r13b,0x1
  40a47e:	jne    40a4b8 <__sprintf_chk@plt+0x7ed8>
  40a480:	cmp    r14d,0x17
  40a484:	je     40a4b8 <__sprintf_chk@plt+0x7ed8>
  40a486:	mov    r13d,0x1
  40a48c:	mov    r8d,r15d
  40a48f:	mov    edx,r13d
  40a492:	mov    esi,r14d
  40a495:	mov    rdi,rbp
  40a498:	call   409f00 <__sprintf_chk@plt+0x7920>
  40a49d:	mov    DWORD PTR [rbx+0x8],eax
  40a4a0:	mov    DWORD PTR [rbx],0xa
  40a4a6:	add    rsp,0x8
  40a4aa:	pop    rbx
  40a4ab:	pop    rbp
  40a4ac:	pop    r12
  40a4ae:	pop    r13
  40a4b0:	pop    r14
  40a4b2:	pop    r15
  40a4b4:	ret    
  40a4b5:	nop    DWORD PTR [rax]
  40a4b8:	mov    eax,ecx
  40a4ba:	mov    ecx,r15d
  40a4bd:	mov    r15d,eax
  40a4c0:	jmp    40a48c <__sprintf_chk@plt+0x7eac>
  40a4c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a4cd:	nop    DWORD PTR [rax]
  40a4d0:	push   r15
  40a4d2:	mov    r15,rcx
  40a4d5:	push   r14
  40a4d7:	push   r13
  40a4d9:	mov    r13d,esi
  40a4dc:	push   r12
  40a4de:	mov    r12,rdi
  40a4e1:	push   rbp
  40a4e2:	push   rbx
  40a4e3:	mov    rbx,rdx
  40a4e6:	sub    rsp,0x18
  40a4ea:	cmp    DWORD PTR [rdx],0x5
  40a4ed:	je     40a5a0 <__sprintf_chk@plt+0x7fc0>
  40a4f3:	lea    ebp,[r13-0x12]
  40a4f7:	and    ebp,0xfffffffd
  40a4fa:	jne    40a588 <__sprintf_chk@plt+0x7fa8>
  40a500:	xor    r14d,r14d
  40a503:	mov    rsi,rbx
  40a506:	mov    rdi,r12
  40a509:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40a50e:	mov    r8d,eax
  40a511:	lea    r9,[r15+0x8]
  40a515:	lea    rcx,[rbx+0x8]
  40a519:	cmp    eax,r14d
  40a51c:	jle    40a5f0 <__sprintf_chk@plt+0x8010>
  40a522:	cmp    DWORD PTR [rbx],0xc
  40a525:	jne    40a532 <__sprintf_chk@plt+0x7f52>
  40a527:	mov    rsi,rcx
  40a52a:	mov    rdi,r12
  40a52d:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a532:	cmp    DWORD PTR [r15],0xc
  40a536:	jne    40a548 <__sprintf_chk@plt+0x7f68>
  40a538:	mov    rsi,r9
  40a53b:	mov    rdi,r12
  40a53e:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a543:	nop    DWORD PTR [rax+rax*1+0x0]
  40a548:	mov    rax,QWORD PTR [r12+0x18]
  40a54d:	mov    esi,r13d
  40a550:	shl    r8d,0x17
  40a554:	mov    edx,DWORD PTR [rax+0x8]
  40a557:	or     esi,ebp
  40a559:	or     esi,r8d
  40a55c:	mov    rdi,r12
  40a55f:	call   409980 <__sprintf_chk@plt+0x73a0>
  40a564:	mov    DWORD PTR [rbx+0x8],eax
  40a567:	mov    DWORD PTR [rbx],0xb
  40a56d:	add    rsp,0x18
  40a571:	pop    rbx
  40a572:	pop    rbp
  40a573:	pop    r12
  40a575:	pop    r13
  40a577:	pop    r14
  40a579:	pop    r15
  40a57b:	ret    
  40a57c:	jne    40a697 <__sprintf_chk@plt+0x80b7>
  40a582:	nop    WORD PTR [rax+rax*1+0x0]
  40a588:	mov    rsi,r15
  40a58b:	mov    rdi,r12
  40a58e:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40a593:	mov    ebp,eax
  40a595:	mov    r14d,eax
  40a598:	shl    ebp,0xe
  40a59b:	jmp    40a503 <__sprintf_chk@plt+0x7f23>
  40a5a0:	cmp    QWORD PTR [rdx+0x10],0xffffffffffffffff
  40a5a5:	jne    40a4f3 <__sprintf_chk@plt+0x7f13>
  40a5ab:	cmp    DWORD PTR [rcx],0x5
  40a5ae:	jne    40a4f3 <__sprintf_chk@plt+0x7f13>
  40a5b4:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
  40a5b9:	jne    40a4f3 <__sprintf_chk@plt+0x7f13>
  40a5bf:	lea    eax,[rsi-0xc]
  40a5c2:	vmovsd xmm2,QWORD PTR [rdx+0x8]
  40a5c7:	vmovsd xmm1,QWORD PTR [rcx+0x8]
  40a5cc:	cmp    eax,0x8
  40a5cf:	ja     40a6af <__sprintf_chk@plt+0x80cf>
  40a5d5:	lea    rdx,[rip+0xd5f0]        # 417bcc <__sprintf_chk@plt+0x155ec>
  40a5dc:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a5e0:	add    rax,rdx
  40a5e3:	notrack jmp rax
  40a5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5f0:	cmp    DWORD PTR [r15],0xc
  40a5f4:	jne    40a601 <__sprintf_chk@plt+0x8021>
  40a5f6:	mov    rsi,r9
  40a5f9:	mov    rdi,r12
  40a5fc:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a601:	cmp    DWORD PTR [rbx],0xc
  40a604:	jne    40a548 <__sprintf_chk@plt+0x7f68>
  40a60a:	mov    rsi,rcx
  40a60d:	mov    rdi,r12
  40a610:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a615:	jmp    40a548 <__sprintf_chk@plt+0x7f68>
  40a61a:	xor    ebp,ebp
  40a61c:	jmp    40a500 <__sprintf_chk@plt+0x7f20>
  40a621:	vucomisd xmm2,xmm2
  40a625:	jp     40a61a <__sprintf_chk@plt+0x803a>
  40a627:	jne    40a61a <__sprintf_chk@plt+0x803a>
  40a629:	vxorpd xmm2,xmm2,XMMWORD PTR [rip+0xde4f]        # 418480 <__sprintf_chk@plt+0x15ea0>
  40a631:	vmovsd QWORD PTR [rbx+0x8],xmm2
  40a636:	jmp    40a56d <__sprintf_chk@plt+0x7f8d>
  40a63b:	vmovapd xmm0,xmm2
  40a63f:	call   4023b0 <pow@plt>
  40a644:	vmovapd xmm2,xmm0
  40a648:	vucomisd xmm2,xmm2
  40a64c:	jp     40a588 <__sprintf_chk@plt+0x7fa8>
  40a652:	je     40a631 <__sprintf_chk@plt+0x8051>
  40a654:	jmp    40a588 <__sprintf_chk@plt+0x7fa8>
  40a659:	vucomisd xmm1,QWORD PTR [rip+0xddf7]        # 418458 <__sprintf_chk@plt+0x15e78>
  40a661:	jnp    40a6b8 <__sprintf_chk@plt+0x80d8>
  40a663:	vdivsd xmm0,xmm2,xmm1
  40a667:	vmovsd QWORD PTR [rsp+0x8],xmm1
  40a66d:	vmovsd QWORD PTR [rsp],xmm2
  40a672:	call   402550 <floor@plt>
  40a677:	vmovsd xmm2,QWORD PTR [rsp]
  40a67c:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40a682:	vfnmadd231sd xmm2,xmm1,xmm0
  40a687:	jmp    40a648 <__sprintf_chk@plt+0x8068>
  40a689:	vucomisd xmm1,QWORD PTR [rip+0xddc7]        # 418458 <__sprintf_chk@plt+0x15e78>
  40a691:	jnp    40a57c <__sprintf_chk@plt+0x7f9c>
  40a697:	vdivsd xmm2,xmm2,xmm1
  40a69b:	jmp    40a648 <__sprintf_chk@plt+0x8068>
  40a69d:	vmulsd xmm2,xmm2,xmm1
  40a6a1:	jmp    40a648 <__sprintf_chk@plt+0x8068>
  40a6a3:	vaddsd xmm2,xmm2,xmm1
  40a6a7:	jmp    40a648 <__sprintf_chk@plt+0x8068>
  40a6a9:	vsubsd xmm2,xmm2,xmm1
  40a6ad:	jmp    40a648 <__sprintf_chk@plt+0x8068>
  40a6af:	vxorpd xmm2,xmm2,xmm2
  40a6b3:	jmp    40a631 <__sprintf_chk@plt+0x8051>
  40a6b8:	je     40a588 <__sprintf_chk@plt+0x7fa8>
  40a6be:	jmp    40a663 <__sprintf_chk@plt+0x8083>
  40a6c0:	push   r13
  40a6c2:	lea    r13,[rdx+0x8]
  40a6c6:	push   r12
  40a6c8:	mov    r12,rsi
  40a6cb:	push   rbp
  40a6cc:	mov    rbp,rdi
  40a6cf:	push   rbx
  40a6d0:	mov    rbx,rdx
  40a6d3:	sub    rsp,0x8
  40a6d7:	mov    eax,DWORD PTR [rsi]
  40a6d9:	cmp    eax,0x7
  40a6dc:	je     40a7b8 <__sprintf_chk@plt+0x81d8>
  40a6e2:	jbe    40a740 <__sprintf_chk@plt+0x8160>
  40a6e4:	cmp    eax,0x8
  40a6e7:	je     40a788 <__sprintf_chk@plt+0x81a8>
  40a6ed:	cmp    eax,0x9
  40a6f0:	jne    40a730 <__sprintf_chk@plt+0x8150>
  40a6f2:	mov    rsi,rdx
  40a6f5:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40a6fa:	mov    ecx,0x6
  40a6ff:	shlx   esi,DWORD PTR [r12+0x8],ecx
  40a706:	mov    ecx,DWORD PTR [r12+0xc]
  40a70b:	mov    rdx,QWORD PTR [rbp+0x18]
  40a70f:	shl    ecx,0x17
  40a712:	or     esi,ecx
  40a714:	shl    eax,0xe
  40a717:	or     esi,eax
  40a719:	mov    edx,DWORD PTR [rdx+0x8]
  40a71c:	or     esi,0x9
  40a71f:	mov    rdi,rbp
  40a722:	call   409980 <__sprintf_chk@plt+0x73a0>
  40a727:	nop    WORD PTR [rax+rax*1+0x0]
  40a730:	cmp    DWORD PTR [rbx],0xc
  40a733:	je     40a770 <__sprintf_chk@plt+0x8190>
  40a735:	add    rsp,0x8
  40a739:	pop    rbx
  40a73a:	pop    rbp
  40a73b:	pop    r12
  40a73d:	pop    r13
  40a73f:	ret    
  40a740:	cmp    eax,0x6
  40a743:	jne    40a730 <__sprintf_chk@plt+0x8150>
  40a745:	cmp    DWORD PTR [rdx],0xc
  40a748:	je     40a7e8 <__sprintf_chk@plt+0x8208>
  40a74e:	mov    edx,DWORD PTR [r12+0x8]
  40a753:	add    rsp,0x8
  40a757:	mov    rsi,rbx
  40a75a:	pop    rbx
  40a75b:	mov    rdi,rbp
  40a75e:	pop    rbp
  40a75f:	pop    r12
  40a761:	pop    r13
  40a763:	jmp    409f30 <__sprintf_chk@plt+0x7950>
  40a768:	nop    DWORD PTR [rax+rax*1+0x0]
  40a770:	add    rsp,0x8
  40a774:	pop    rbx
  40a775:	mov    rdi,rbp
  40a778:	pop    rbp
  40a779:	pop    r12
  40a77b:	mov    rsi,r13
  40a77e:	pop    r13
  40a780:	jmp    404550 <__sprintf_chk@plt+0x1f70>
  40a785:	nop    DWORD PTR [rax]
  40a788:	mov    rsi,rdx
  40a78b:	call   40a270 <__sprintf_chk@plt+0x7c90>
  40a790:	mov    esi,DWORD PTR [r12+0x8]
  40a795:	mov    rdx,QWORD PTR [rbp+0x18]
  40a799:	shl    esi,0xe
  40a79c:	shl    eax,0x6
  40a79f:	or     esi,eax
  40a7a1:	mov    edx,DWORD PTR [rdx+0x8]
  40a7a4:	or     esi,0x7
  40a7a7:	mov    rdi,rbp
  40a7aa:	call   409980 <__sprintf_chk@plt+0x73a0>
  40a7af:	jmp    40a730 <__sprintf_chk@plt+0x8150>
  40a7b4:	nop    DWORD PTR [rax+0x0]
  40a7b8:	mov    rsi,rdx
  40a7bb:	call   40a270 <__sprintf_chk@plt+0x7c90>
  40a7c0:	mov    esi,DWORD PTR [r12+0x8]
  40a7c5:	mov    rdx,QWORD PTR [rbp+0x18]
  40a7c9:	shl    esi,0x17
  40a7cc:	shl    eax,0x6
  40a7cf:	or     esi,eax
  40a7d1:	mov    edx,DWORD PTR [rdx+0x8]
  40a7d4:	or     esi,0x8
  40a7d7:	mov    rdi,rbp
  40a7da:	call   409980 <__sprintf_chk@plt+0x73a0>
  40a7df:	jmp    40a730 <__sprintf_chk@plt+0x8150>
  40a7e4:	nop    DWORD PTR [rax+0x0]
  40a7e8:	mov    rsi,r13
  40a7eb:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a7f0:	jmp    40a74e <__sprintf_chk@plt+0x816e>
  40a7f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a800:	push   r12
  40a802:	push   rbp
  40a803:	mov    rbp,rdi
  40a806:	push   rbx
  40a807:	mov    ebx,esi
  40a809:	sub    ebx,edx
  40a80b:	mov    esi,DWORD PTR [rcx]
  40a80d:	lea    eax,[rsi-0xd]
  40a810:	cmp    eax,0x1
  40a813:	jbe    40a850 <__sprintf_chk@plt+0x8270>
  40a815:	test   esi,esi
  40a817:	jne    40a880 <__sprintf_chk@plt+0x82a0>
  40a819:	test   ebx,ebx
  40a81b:	jg     40a828 <__sprintf_chk@plt+0x8248>
  40a81d:	pop    rbx
  40a81e:	pop    rbp
  40a81f:	pop    r12
  40a821:	ret    
  40a822:	nop    WORD PTR [rax+rax*1+0x0]
  40a828:	mov    esi,ebx
  40a82a:	mov    rdi,rbp
  40a82d:	mov    r12d,DWORD PTR [rbp+0x3c]
  40a831:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40a836:	add    DWORD PTR [rbp+0x3c],ebx
  40a839:	mov    edx,ebx
  40a83b:	pop    rbx
  40a83c:	mov    rdi,rbp
  40a83f:	pop    rbp
  40a840:	mov    esi,r12d
  40a843:	pop    r12
  40a845:	jmp    409b50 <__sprintf_chk@plt+0x7570>
  40a84a:	nop    WORD PTR [rax+rax*1+0x0]
  40a850:	mov    r12d,ebx
  40a853:	lea    rdx,[rcx+0x8]
  40a857:	inc    r12d
  40a85a:	js     40a890 <__sprintf_chk@plt+0x82b0>
  40a85c:	mov    ecx,r12d
  40a85f:	call   40a190 <__sprintf_chk@plt+0x7bb0>
  40a864:	cmp    r12d,0x1
  40a868:	jle    40a81d <__sprintf_chk@plt+0x823d>
  40a86a:	mov    esi,ebx
  40a86c:	mov    rdi,rbp
  40a86f:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40a874:	add    DWORD PTR [rbp+0x3c],ebx
  40a877:	pop    rbx
  40a878:	pop    rbp
  40a879:	pop    r12
  40a87b:	ret    
  40a87c:	nop    DWORD PTR [rax+0x0]
  40a880:	mov    rsi,rcx
  40a883:	call   40a220 <__sprintf_chk@plt+0x7c40>
  40a888:	test   ebx,ebx
  40a88a:	jle    40a81d <__sprintf_chk@plt+0x823d>
  40a88c:	jmp    40a828 <__sprintf_chk@plt+0x8248>
  40a88e:	xchg   ax,ax
  40a890:	pop    rbx
  40a891:	pop    rbp
  40a892:	xor    ecx,ecx
  40a894:	pop    r12
  40a896:	jmp    40a190 <__sprintf_chk@plt+0x7bb0>
  40a89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8a0:	push   r12
  40a8a2:	mov    r12d,edx
  40a8a5:	push   rbp
  40a8a6:	mov    rbp,rsi
  40a8a9:	push   rbx
  40a8aa:	mov    rbx,rdi
  40a8ad:	mov    eax,DWORD PTR [rsi]
  40a8af:	cmp    eax,0xb
  40a8b2:	je     40a8d0 <__sprintf_chk@plt+0x82f0>
  40a8b4:	cmp    eax,0xc
  40a8b7:	jne    40a8e8 <__sprintf_chk@plt+0x8308>
  40a8b9:	lea    rsi,[rbp+0x8]
  40a8bd:	mov    rdi,rbx
  40a8c0:	call   404550 <__sprintf_chk@plt+0x1f70>
  40a8c5:	jmp    40a90f <__sprintf_chk@plt+0x832f>
  40a8c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a8d0:	mov    rax,QWORD PTR [rdi]
  40a8d3:	movsxd rdx,DWORD PTR [rsi+0x8]
  40a8d7:	mov    rax,QWORD PTR [rax+0x18]
  40a8db:	mov    edx,DWORD PTR [rax+rdx*4]
  40a8de:	mov    eax,edx
  40a8e0:	and    eax,0x3f
  40a8e3:	cmp    eax,0x13
  40a8e6:	je     40a930 <__sprintf_chk@plt+0x8350>
  40a8e8:	mov    esi,0x1
  40a8ed:	mov    rdi,rbx
  40a8f0:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40a8f5:	mov    edx,DWORD PTR [rbx+0x3c]
  40a8f8:	mov    rsi,rbp
  40a8fb:	lea    eax,[rdx+0x1]
  40a8fe:	mov    DWORD PTR [rbx+0x3c],eax
  40a901:	mov    rdi,rbx
  40a904:	call   409be0 <__sprintf_chk@plt+0x7600>
  40a909:	cmp    DWORD PTR [rbp+0x0],0xc
  40a90d:	je     40a8b9 <__sprintf_chk@plt+0x82d9>
  40a90f:	mov    ecx,DWORD PTR [rbp+0x8]
  40a912:	mov    r8d,r12d
  40a915:	mov    edx,0xff
  40a91a:	mov    esi,0x1b
  40a91f:	mov    rdi,rbx
  40a922:	pop    rbx
  40a923:	pop    rbp
  40a924:	pop    r12
  40a926:	jmp    409f00 <__sprintf_chk@plt+0x7920>
  40a92b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a930:	mov    r8d,r12d
  40a933:	dec    DWORD PTR [rdi+0x30]
  40a936:	shr    edx,0x17
  40a939:	xor    r8d,0x1
  40a93d:	xor    ecx,ecx
  40a93f:	mov    esi,0x1a
  40a944:	jmp    40a91f <__sprintf_chk@plt+0x833f>
  40a946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a950:	push   rbp
  40a951:	mov    rbp,rsi
  40a954:	push   rbx
  40a955:	mov    rbx,rdi
  40a958:	sub    rsp,0x8
  40a95c:	call   409a50 <__sprintf_chk@plt+0x7470>
  40a961:	mov    ecx,DWORD PTR [rbp+0x0]
  40a964:	cmp    ecx,0x5
  40a967:	jbe    40a9b0 <__sprintf_chk@plt+0x83d0>
  40a969:	cmp    ecx,0xa
  40a96c:	jne    40a9bf <__sprintf_chk@plt+0x83df>
  40a96e:	mov    esi,DWORD PTR [rbp+0x8]
  40a971:	mov    rdi,rbx
  40a974:	call   403c10 <__sprintf_chk@plt+0x1630>
  40a979:	mov    edx,DWORD PTR [rbp+0x8]
  40a97c:	lea    rsi,[rbp+0x14]
  40a980:	mov    rdi,rbx
  40a983:	call   409df0 <__sprintf_chk@plt+0x7810>
  40a988:	mov    eax,DWORD PTR [rbx+0x30]
  40a98b:	mov    edx,DWORD PTR [rbp+0x10]
  40a98e:	mov    DWORD PTR [rbx+0x34],eax
  40a991:	lea    rsi,[rbx+0x38]
  40a995:	mov    rdi,rbx
  40a998:	call   409df0 <__sprintf_chk@plt+0x7810>
  40a99d:	mov    DWORD PTR [rbp+0x10],0xffffffff
  40a9a4:	add    rsp,0x8
  40a9a8:	pop    rbx
  40a9a9:	pop    rbp
  40a9aa:	ret    
  40a9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9b0:	mov    edx,0xffffffff
  40a9b5:	cmp    ecx,0x4
  40a9b8:	jae    40a97c <__sprintf_chk@plt+0x839c>
  40a9ba:	cmp    ecx,0x2
  40a9bd:	je     40a97c <__sprintf_chk@plt+0x839c>
  40a9bf:	xor    edx,edx
  40a9c1:	mov    rsi,rbp
  40a9c4:	mov    rdi,rbx
  40a9c7:	call   40a8a0 <__sprintf_chk@plt+0x82c0>
  40a9cc:	mov    edx,eax
  40a9ce:	jmp    40a97c <__sprintf_chk@plt+0x839c>
  40a9d0:	push   r12
  40a9d2:	push   rbp
  40a9d3:	mov    ebp,esi
  40a9d5:	push   rbx
  40a9d6:	mov    rbx,QWORD PTR [rdi+0x48]
  40a9da:	mov    rcx,QWORD PTR [rbx+0x8]
  40a9de:	mov    rdx,QWORD PTR [rbx+0x10]
  40a9e2:	lea    rsi,[rcx+0x1]
  40a9e6:	cmp    rsi,rdx
  40a9e9:	ja     40aa00 <__sprintf_chk@plt+0x8420>
  40a9eb:	mov    rax,QWORD PTR [rbx]
  40a9ee:	mov    QWORD PTR [rbx+0x8],rsi
  40a9f2:	mov    BYTE PTR [rax+rcx*1],bpl
  40a9f6:	pop    rbx
  40a9f7:	pop    rbp
  40a9f8:	pop    r12
  40a9fa:	ret    
  40a9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa00:	movabs rax,0x7ffffffffffffffd
  40aa0a:	cmp    rdx,rax
  40aa0d:	ja     40aa40 <__sprintf_chk@plt+0x8460>
  40aa0f:	lea    r12,[rdx+rdx*1]
  40aa13:	mov    rsi,QWORD PTR [rbx]
  40aa16:	mov    rdi,QWORD PTR [rdi+0x38]
  40aa1a:	mov    rcx,r12
  40aa1d:	call   404640 <__sprintf_chk@plt+0x2060>
  40aa22:	mov    rcx,QWORD PTR [rbx+0x8]
  40aa26:	mov    QWORD PTR [rbx],rax
  40aa29:	lea    rsi,[rcx+0x1]
  40aa2d:	mov    QWORD PTR [rbx+0x10],r12
  40aa31:	mov    QWORD PTR [rbx+0x8],rsi
  40aa35:	mov    BYTE PTR [rax+rcx*1],bpl
  40aa39:	pop    rbx
  40aa3a:	pop    rbp
  40aa3b:	pop    r12
  40aa3d:	ret    
  40aa3e:	xchg   ax,ax
  40aa40:	xor    edx,edx
  40aa42:	lea    rsi,[rip+0xc794]        # 4171dd <__sprintf_chk@plt+0x14bfd>
  40aa49:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40aa4e:	xchg   ax,ax
  40aa50:	push   r12
  40aa52:	push   rbp
  40aa53:	push   rbx
  40aa54:	mov    rbx,rdi
  40aa57:	mov    r12d,DWORD PTR [rdi]
  40aa5a:	mov    esi,r12d
  40aa5d:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40aa62:	mov    rdi,QWORD PTR [rbx+0x40]
  40aa66:	mov    rax,QWORD PTR [rdi]
  40aa69:	lea    rdx,[rax-0x1]
  40aa6d:	mov    QWORD PTR [rdi],rdx
  40aa70:	test   rax,rax
  40aa73:	je     40aaf0 <__sprintf_chk@plt+0x8510>
  40aa75:	mov    rax,QWORD PTR [rdi+0x8]
  40aa79:	lea    rdx,[rax+0x1]
  40aa7d:	mov    QWORD PTR [rdi+0x8],rdx
  40aa81:	movzx  eax,BYTE PTR [rax]
  40aa84:	mov    DWORD PTR [rbx],eax
  40aa86:	xor    ebp,ebp
  40aa88:	cmp    eax,0x3d
  40aa8b:	je     40aaa8 <__sprintf_chk@plt+0x84c8>
  40aa8d:	jmp    40aad6 <__sprintf_chk@plt+0x84f6>
  40aa8f:	nop
  40aa90:	mov    rax,QWORD PTR [rdi+0x8]
  40aa94:	inc    ebp
  40aa96:	lea    rdx,[rax+0x1]
  40aa9a:	mov    QWORD PTR [rdi+0x8],rdx
  40aa9e:	movzx  eax,BYTE PTR [rax]
  40aaa1:	mov    DWORD PTR [rbx],eax
  40aaa3:	cmp    eax,0x3d
  40aaa6:	jne    40aad6 <__sprintf_chk@plt+0x84f6>
  40aaa8:	mov    rdi,rbx
  40aaab:	mov    esi,0x3d
  40aab0:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40aab5:	mov    rdi,QWORD PTR [rbx+0x40]
  40aab9:	mov    rax,QWORD PTR [rdi]
  40aabc:	lea    rdx,[rax-0x1]
  40aac0:	mov    QWORD PTR [rdi],rdx
  40aac3:	test   rax,rax
  40aac6:	jne    40aa90 <__sprintf_chk@plt+0x84b0>
  40aac8:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40aacd:	mov    DWORD PTR [rbx],eax
  40aacf:	inc    ebp
  40aad1:	cmp    eax,0x3d
  40aad4:	je     40aaa8 <__sprintf_chk@plt+0x84c8>
  40aad6:	mov    edx,ebp
  40aad8:	cmp    r12d,eax
  40aadb:	not    edx
  40aadd:	cmovne ebp,edx
  40aae0:	pop    rbx
  40aae1:	mov    eax,ebp
  40aae3:	pop    rbp
  40aae4:	pop    r12
  40aae6:	ret    
  40aae7:	nop    WORD PTR [rax+rax*1+0x0]
  40aaf0:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40aaf5:	jmp    40aa84 <__sprintf_chk@plt+0x84a4>
  40aaf7:	nop    WORD PTR [rax+rax*1+0x0]
  40ab00:	push   rbp
  40ab01:	push   rbx
  40ab02:	mov    rbx,rdi
  40ab05:	mov    rdi,rsi
  40ab08:	sub    rsp,0x8
  40ab0c:	mov    ebp,DWORD PTR [rbx]
  40ab0e:	mov    esi,ebp
  40ab10:	call   4023f0 <strchr@plt>
  40ab15:	xor    edx,edx
  40ab17:	test   rax,rax
  40ab1a:	je     40ab4f <__sprintf_chk@plt+0x856f>
  40ab1c:	mov    rdi,rbx
  40ab1f:	mov    esi,ebp
  40ab21:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ab26:	mov    rdi,QWORD PTR [rbx+0x40]
  40ab2a:	mov    rax,QWORD PTR [rdi]
  40ab2d:	lea    rdx,[rax-0x1]
  40ab31:	mov    QWORD PTR [rdi],rdx
  40ab34:	test   rax,rax
  40ab37:	je     40ab60 <__sprintf_chk@plt+0x8580>
  40ab39:	mov    rax,QWORD PTR [rdi+0x8]
  40ab3d:	lea    rdx,[rax+0x1]
  40ab41:	mov    QWORD PTR [rdi+0x8],rdx
  40ab45:	movzx  eax,BYTE PTR [rax]
  40ab48:	mov    DWORD PTR [rbx],eax
  40ab4a:	mov    edx,0x1
  40ab4f:	add    rsp,0x8
  40ab53:	pop    rbx
  40ab54:	mov    eax,edx
  40ab56:	pop    rbp
  40ab57:	ret    
  40ab58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab60:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ab65:	jmp    40ab48 <__sprintf_chk@plt+0x8568>
  40ab67:	nop    WORD PTR [rax+rax*1+0x0]
  40ab70:	push   r12
  40ab72:	mov    r12,rsi
  40ab75:	push   rbp
  40ab76:	push   rbx
  40ab77:	mov    rbx,rdi
  40ab7a:	sub    rsp,0x10
  40ab7e:	mov    esi,DWORD PTR [rdi]
  40ab80:	mov    DWORD PTR [rsp+0xc],esi
  40ab84:	call   4025d0 <__ctype_b_loc@plt>
  40ab89:	mov    esi,DWORD PTR [rsp+0xc]
  40ab8d:	mov    rbp,rax
  40ab90:	mov    rdi,rbx
  40ab93:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ab98:	mov    rdi,QWORD PTR [rbx+0x40]
  40ab9c:	mov    rax,QWORD PTR [rdi]
  40ab9f:	lea    rdx,[rax-0x1]
  40aba3:	mov    QWORD PTR [rdi],rdx
  40aba6:	test   rax,rax
  40aba9:	je     40ac50 <__sprintf_chk@plt+0x8670>
  40abaf:	mov    rax,QWORD PTR [rdi+0x8]
  40abb3:	lea    rdx,[rax+0x1]
  40abb7:	mov    QWORD PTR [rdi+0x8],rdx
  40abbb:	movzx  esi,BYTE PTR [rax]
  40abbe:	mov    rdx,QWORD PTR [rbp+0x0]
  40abc2:	movsxd rax,esi
  40abc5:	mov    DWORD PTR [rbx],esi
  40abc7:	test   BYTE PTR [rdx+rax*2+0x1],0x8
  40abcc:	jne    40ab90 <__sprintf_chk@plt+0x85b0>
  40abce:	cmp    esi,0x2e
  40abd1:	je     40ab90 <__sprintf_chk@plt+0x85b0>
  40abd3:	lea    rsi,[rip+0xc61c]        # 4171f6 <__sprintf_chk@plt+0x14c16>
  40abda:	mov    rdi,rbx
  40abdd:	call   40ab00 <__sprintf_chk@plt+0x8520>
  40abe2:	test   eax,eax
  40abe4:	jne    40acc0 <__sprintf_chk@plt+0x86e0>
  40abea:	movsxd rdx,DWORD PTR [rbx]
  40abed:	mov    rax,QWORD PTR [rbp+0x0]
  40abf1:	mov    rsi,rdx
  40abf4:	test   BYTE PTR [rax+rdx*2],0x8
  40abf8:	je     40ac1e <__sprintf_chk@plt+0x863e>
  40abfa:	jmp    40ac23 <__sprintf_chk@plt+0x8643>
  40abfc:	nop    DWORD PTR [rax+0x0]
  40ac00:	mov    rax,QWORD PTR [rdi+0x8]
  40ac04:	lea    rdx,[rax+0x1]
  40ac08:	mov    QWORD PTR [rdi+0x8],rdx
  40ac0c:	movzx  esi,BYTE PTR [rax]
  40ac0f:	mov    rdx,QWORD PTR [rbp+0x0]
  40ac13:	movsxd rax,esi
  40ac16:	mov    DWORD PTR [rbx],esi
  40ac18:	test   BYTE PTR [rdx+rax*2],0x8
  40ac1c:	jne    40ac23 <__sprintf_chk@plt+0x8643>
  40ac1e:	cmp    esi,0x5f
  40ac21:	jne    40ac60 <__sprintf_chk@plt+0x8680>
  40ac23:	mov    rdi,rbx
  40ac26:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ac2b:	mov    rdi,QWORD PTR [rbx+0x40]
  40ac2f:	mov    rax,QWORD PTR [rdi]
  40ac32:	lea    rdx,[rax-0x1]
  40ac36:	mov    QWORD PTR [rdi],rdx
  40ac39:	test   rax,rax
  40ac3c:	jne    40ac00 <__sprintf_chk@plt+0x8620>
  40ac3e:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ac43:	mov    esi,eax
  40ac45:	jmp    40ac0f <__sprintf_chk@plt+0x862f>
  40ac47:	nop    WORD PTR [rax+rax*1+0x0]
  40ac50:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ac55:	mov    esi,eax
  40ac57:	jmp    40abbe <__sprintf_chk@plt+0x85de>
  40ac5c:	nop    DWORD PTR [rax+0x0]
  40ac60:	xor    esi,esi
  40ac62:	mov    rdi,rbx
  40ac65:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ac6a:	mov    rdx,QWORD PTR [rbx+0x48]
  40ac6e:	movzx  ecx,BYTE PTR [rbx+0x58]
  40ac72:	mov    rax,QWORD PTR [rdx+0x8]
  40ac76:	mov    rdx,QWORD PTR [rdx]
  40ac79:	nop    DWORD PTR [rax+0x0]
  40ac80:	dec    rax
  40ac83:	cmp    rax,0xffffffffffffffff
  40ac87:	je     40ac9b <__sprintf_chk@plt+0x86bb>
  40ac89:	cmp    BYTE PTR [rdx+rax*1],0x2e
  40ac8d:	jne    40ac80 <__sprintf_chk@plt+0x86a0>
  40ac8f:	mov    BYTE PTR [rdx+rax*1],cl
  40ac92:	dec    rax
  40ac95:	cmp    rax,0xffffffffffffffff
  40ac99:	jne    40ac89 <__sprintf_chk@plt+0x86a9>
  40ac9b:	mov    rax,QWORD PTR [rbx+0x48]
  40ac9f:	mov    rsi,r12
  40aca2:	mov    rdi,QWORD PTR [rax]
  40aca5:	call   402f70 <__sprintf_chk@plt+0x990>
  40acaa:	test   eax,eax
  40acac:	je     40acd8 <__sprintf_chk@plt+0x86f8>
  40acae:	add    rsp,0x10
  40acb2:	pop    rbx
  40acb3:	pop    rbp
  40acb4:	pop    r12
  40acb6:	ret    
  40acb7:	nop    WORD PTR [rax+rax*1+0x0]
  40acc0:	lea    rsi,[rip+0xc532]        # 4171f9 <__sprintf_chk@plt+0x14c19>
  40acc7:	mov    rdi,rbx
  40acca:	call   40ab00 <__sprintf_chk@plt+0x8520>
  40accf:	jmp    40abea <__sprintf_chk@plt+0x860a>
  40acd4:	nop    DWORD PTR [rax+0x0]
  40acd8:	mov    edx,0x11c
  40acdd:	lea    rsi,[rip+0xc518]        # 4171fc <__sprintf_chk@plt+0x14c1c>
  40ace4:	mov    rdi,rbx
  40ace7:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40acec:	nop    DWORD PTR [rax+0x0]
  40acf0:	push   rbp
  40acf1:	push   rbx
  40acf2:	sub    rsp,0x8
  40acf6:	mov    rbp,QWORD PTR [rdi+0x30]
  40acfa:	mov    rbx,QWORD PTR [rbp+0x28]
  40acfe:	test   rbx,rbx
  40ad01:	je     40ad24 <__sprintf_chk@plt+0x8744>
  40ad03:	cmp    BYTE PTR [rbx+0xe],0x0
  40ad07:	jne    40ad55 <__sprintf_chk@plt+0x8775>
  40ad09:	xor    eax,eax
  40ad0b:	jmp    40ad16 <__sprintf_chk@plt+0x8736>
  40ad0d:	nop    DWORD PTR [rax]
  40ad10:	cmp    BYTE PTR [rbx+0xe],0x0
  40ad14:	jne    40ad38 <__sprintf_chk@plt+0x8758>
  40ad16:	movzx  edx,BYTE PTR [rbx+0xd]
  40ad1a:	mov    rbx,QWORD PTR [rbx]
  40ad1d:	or     eax,edx
  40ad1f:	test   rbx,rbx
  40ad22:	jne    40ad10 <__sprintf_chk@plt+0x8730>
  40ad24:	mov    edx,DWORD PTR [rdi+0x10]
  40ad27:	lea    rsi,[rip+0xc4df]        # 41720d <__sprintf_chk@plt+0x14c2d>
  40ad2e:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40ad33:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad38:	test   eax,eax
  40ad3a:	je     40ad55 <__sprintf_chk@plt+0x8775>
  40ad3c:	mov    rax,QWORD PTR [rbp+0x18]
  40ad40:	movzx  esi,BYTE PTR [rbx+0xc]
  40ad44:	mov    edx,DWORD PTR [rax+0x8]
  40ad47:	shl    esi,0x6
  40ad4a:	or     esi,0x23
  40ad4d:	mov    rdi,rbp
  40ad50:	call   409980 <__sprintf_chk@plt+0x73a0>
  40ad55:	mov    rdi,rbp
  40ad58:	call   409e90 <__sprintf_chk@plt+0x78b0>
  40ad5d:	add    rsp,0x8
  40ad61:	lea    rsi,[rbx+0x8]
  40ad65:	pop    rbx
  40ad66:	mov    rdi,rbp
  40ad69:	mov    edx,eax
  40ad6b:	pop    rbp
  40ad6c:	jmp    409df0 <__sprintf_chk@plt+0x7810>
  40ad71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ad7c:	nop    DWORD PTR [rax+0x0]
  40ad80:	push   rbx
  40ad81:	mov    rbx,rdi
  40ad84:	mov    rax,QWORD PTR [rdi]
  40ad87:	mov    rdi,QWORD PTR [rdi+0x20]
  40ad8b:	mov    eax,DWORD PTR [rax+0x60]
  40ad8e:	test   eax,eax
  40ad90:	jne    40adb1 <__sprintf_chk@plt+0x87d1>
  40ad92:	mov    rcx,rdx
  40ad95:	mov    edx,esi
  40ad97:	lea    rsi,[rip+0xd322]        # 4180c0 <__sprintf_chk@plt+0x15ae0>
  40ad9e:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  40ada3:	mov    rdi,QWORD PTR [rbx+0x18]
  40ada7:	xor    edx,edx
  40ada9:	mov    rsi,rax
  40adac:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40adb1:	mov    r8,rdx
  40adb4:	mov    ecx,esi
  40adb6:	mov    edx,eax
  40adb8:	lea    rsi,[rip+0xd329]        # 4180e8 <__sprintf_chk@plt+0x15b08>
  40adbf:	xor    eax,eax
  40adc1:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  40adc6:	jmp    40ada3 <__sprintf_chk@plt+0x87c3>
  40adc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40add0:	push   r15
  40add2:	push   r14
  40add4:	push   r13
  40add6:	push   r12
  40add8:	push   rbp
  40add9:	push   rbx
  40adda:	sub    rsp,0x8
  40adde:	mov    rbx,QWORD PTR [rdi+0x30]
  40ade2:	movzx  eax,BYTE PTR [rbx+0x4a]
  40ade6:	add    eax,edx
  40ade8:	cmp    eax,0xc7
  40aded:	jg     40aef0 <__sprintf_chk@plt+0x8910>
  40adf3:	mov    rbp,QWORD PTR [rbx]
  40adf6:	movsx  ecx,WORD PTR [rbx+0x48]
  40adfa:	mov    r12d,DWORD PTR [rbp+0x5c]
  40adfe:	mov    r14d,edx
  40ae01:	mov    r13,rdi
  40ae04:	mov    r15,rsi
  40ae07:	mov    edx,ecx
  40ae09:	mov    rax,QWORD PTR [rbp+0x30]
  40ae0d:	cmp    r12d,ecx
  40ae10:	jle    40ae80 <__sprintf_chk@plt+0x88a0>
  40ae12:	movsx  rcx,dx
  40ae16:	shl    rcx,0x4
  40ae1a:	mov    QWORD PTR [rax+rcx*1],r15
  40ae1e:	test   BYTE PTR [r15+0x9],0x3
  40ae23:	je     40ae52 <__sprintf_chk@plt+0x8872>
  40ae25:	movzx  eax,BYTE PTR [rbp+0x9]
  40ae29:	test   al,0x4
  40ae2b:	je     40ae52 <__sprintf_chk@plt+0x8872>
  40ae2d:	mov    rdx,QWORD PTR [r13+0x38]
  40ae31:	mov    rdi,QWORD PTR [rdx+0x20]
  40ae35:	cmp    BYTE PTR [rdi+0x21],0x1
  40ae39:	je     40af08 <__sprintf_chk@plt+0x8928>
  40ae3f:	movzx  edx,BYTE PTR [rdi+0x20]
  40ae43:	and    eax,0xfffffff8
  40ae46:	and    edx,0x3
  40ae49:	or     eax,edx
  40ae4b:	mov    BYTE PTR [rbp+0x9],al
  40ae4e:	movzx  edx,WORD PTR [rbx+0x48]
  40ae52:	lea    eax,[rdx+0x1]
  40ae55:	mov    WORD PTR [rbx+0x48],ax
  40ae59:	movzx  eax,BYTE PTR [rbx+0x4a]
  40ae5d:	add    r14d,eax
  40ae60:	movsxd r14,r14d
  40ae63:	mov    WORD PTR [rbx+r14*2+0xc4],dx
  40ae6c:	add    rsp,0x8
  40ae70:	pop    rbx
  40ae71:	pop    rbp
  40ae72:	pop    r12
  40ae74:	pop    r13
  40ae76:	pop    r14
  40ae78:	pop    r15
  40ae7a:	ret    
  40ae7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae80:	mov    rdi,QWORD PTR [rdi+0x38]
  40ae84:	mov    ecx,0x10
  40ae89:	lea    rdx,[rbp+0x5c]
  40ae8d:	lea    r9,[rip+0xc38a]        # 41721e <__sprintf_chk@plt+0x14c3e>
  40ae94:	mov    r8d,0x7fff
  40ae9a:	mov    rsi,rax
  40ae9d:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  40aea2:	mov    ecx,DWORD PTR [rbp+0x5c]
  40aea5:	mov    QWORD PTR [rbp+0x30],rax
  40aea9:	cmp    r12d,ecx
  40aeac:	jge    40aee0 <__sprintf_chk@plt+0x8900>
  40aeae:	dec    ecx
  40aeb0:	movsxd rsi,r12d
  40aeb3:	sub    ecx,r12d
  40aeb6:	mov    rdx,rsi
  40aeb9:	lea    rcx,[rsi+rcx*1+0x1]
  40aebe:	shl    rdx,0x4
  40aec2:	shl    rcx,0x4
  40aec6:	add    rdx,rax
  40aec9:	add    rcx,rax
  40aecc:	nop    DWORD PTR [rax+0x0]
  40aed0:	mov    QWORD PTR [rdx],0x0
  40aed7:	add    rdx,0x10
  40aedb:	cmp    rcx,rdx
  40aede:	jne    40aed0 <__sprintf_chk@plt+0x88f0>
  40aee0:	movzx  edx,WORD PTR [rbx+0x48]
  40aee4:	jmp    40ae12 <__sprintf_chk@plt+0x8832>
  40aee9:	nop    DWORD PTR [rax+0x0]
  40aef0:	lea    rdx,[rip+0xc330]        # 417227 <__sprintf_chk@plt+0x14c47>
  40aef7:	mov    esi,0xc8
  40aefc:	mov    rdi,rbx
  40aeff:	call   40ad80 <__sprintf_chk@plt+0x87a0>
  40af04:	nop    DWORD PTR [rax+0x0]
  40af08:	mov    rsi,r15
  40af0b:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40af10:	movzx  edx,WORD PTR [rbx+0x48]
  40af14:	jmp    40ae52 <__sprintf_chk@plt+0x8872>
  40af19:	nop    DWORD PTR [rax+0x0]
  40af20:	test   rdi,rdi
  40af23:	je     40b060 <__sprintf_chk@plt+0x8a80>
  40af29:	movzx  eax,BYTE PTR [rdi+0x4a]
  40af2d:	lea    r9d,[rax-0x1]
  40af31:	cmp    r9d,0xffffffff
  40af35:	je     40af7e <__sprintf_chk@plt+0x899e>
  40af37:	mov    r8,QWORD PTR [rdi]
  40af3a:	mov    r10,QWORD PTR [r8+0x30]
  40af3e:	movsxd r8,r9d
  40af41:	movzx  r8d,WORD PTR [rdi+r8*2+0xc4]
  40af4a:	shl    r8,0x4
  40af4e:	cmp    rsi,QWORD PTR [r10+r8*1]
  40af52:	je     40afb0 <__sprintf_chk@plt+0x89d0>
  40af54:	sub    eax,0x2
  40af57:	cdqe   
  40af59:	jmp    40af76 <__sprintf_chk@plt+0x8996>
  40af5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af60:	movzx  r8d,WORD PTR [rdi+rax*2+0xc4]
  40af69:	dec    rax
  40af6c:	shl    r8,0x4
  40af70:	cmp    rsi,QWORD PTR [r10+r8*1]
  40af74:	je     40afb0 <__sprintf_chk@plt+0x89d0>
  40af76:	mov    r9d,eax
  40af79:	cmp    eax,0xffffffff
  40af7c:	jne    40af60 <__sprintf_chk@plt+0x8980>
  40af7e:	push   r14
  40af80:	xor    ecx,ecx
  40af82:	push   r13
  40af84:	push   r12
  40af86:	mov    r12,rdx
  40af89:	push   rbp
  40af8a:	mov    rbp,rsi
  40af8d:	push   rbx
  40af8e:	mov    rbx,rdi
  40af91:	mov    rdi,QWORD PTR [rdi+0x10]
  40af95:	call   40af20 <__sprintf_chk@plt+0x8940>
  40af9a:	cmp    eax,0x8
  40af9d:	jne    40b000 <__sprintf_chk@plt+0x8a20>
  40af9f:	pop    rbx
  40afa0:	pop    rbp
  40afa1:	pop    r12
  40afa3:	pop    r13
  40afa5:	pop    r14
  40afa7:	ret    
  40afa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40afb0:	mov    QWORD PTR [rdx+0x10],0xffffffffffffffff
  40afb8:	mov    DWORD PTR [rdx],0x6
  40afbe:	mov    DWORD PTR [rdx+0x8],r9d
  40afc2:	test   ecx,ecx
  40afc4:	jne    40aff8 <__sprintf_chk@plt+0x8a18>
  40afc6:	mov    rax,QWORD PTR [rdi+0x28]
  40afca:	test   rax,rax
  40afcd:	jne    40afe0 <__sprintf_chk@plt+0x8a00>
  40afcf:	jmp    40aff8 <__sprintf_chk@plt+0x8a18>
  40afd1:	nop    DWORD PTR [rax+0x0]
  40afd8:	mov    rax,QWORD PTR [rax]
  40afdb:	test   rax,rax
  40afde:	je     40aff8 <__sprintf_chk@plt+0x8a18>
  40afe0:	movzx  edx,BYTE PTR [rax+0xc]
  40afe4:	cmp    r9d,edx
  40afe7:	jl     40afd8 <__sprintf_chk@plt+0x89f8>
  40afe9:	mov    BYTE PTR [rax+0xd],0x1
  40afed:	mov    eax,0x6
  40aff2:	ret    
  40aff3:	nop    DWORD PTR [rax+rax*1+0x0]
  40aff8:	mov    eax,0x6
  40affd:	ret    
  40affe:	xchg   ax,ax
  40b000:	mov    r13,QWORD PTR [rbx]
  40b003:	movzx  r9d,BYTE PTR [r13+0x70]
  40b008:	mov    r8,r9
  40b00b:	test   r9d,r9d
  40b00e:	je     40b080 <__sprintf_chk@plt+0x8aa0>
  40b010:	mov    esi,DWORD PTR [r12]
  40b014:	lea    edi,[r9-0x1]
  40b018:	xor    eax,eax
  40b01a:	jmp    40b02c <__sprintf_chk@plt+0x8a4c>
  40b01c:	nop    DWORD PTR [rax+0x0]
  40b020:	lea    rcx,[rax+0x1]
  40b024:	cmp    rax,rdi
  40b027:	je     40b080 <__sprintf_chk@plt+0x8aa0>
  40b029:	mov    rax,rcx
  40b02c:	movzx  ecx,BYTE PTR [rbx+rax*2+0x4b]
  40b031:	mov    edx,eax
  40b033:	cmp    ecx,esi
  40b035:	jne    40b020 <__sprintf_chk@plt+0x8a40>
  40b037:	movzx  ecx,BYTE PTR [rbx+rax*2+0x4c]
  40b03c:	cmp    ecx,DWORD PTR [r12+0x8]
  40b041:	jne    40b020 <__sprintf_chk@plt+0x8a40>
  40b043:	mov    DWORD PTR [r12+0x8],edx
  40b048:	mov    DWORD PTR [r12],0x7
  40b050:	mov    eax,0x7
  40b055:	pop    rbx
  40b056:	pop    rbp
  40b057:	pop    r12
  40b059:	pop    r13
  40b05b:	pop    r14
  40b05d:	ret    
  40b05e:	xchg   ax,ax
  40b060:	mov    QWORD PTR [rdx+0x10],0xffffffffffffffff
  40b068:	mov    DWORD PTR [rdx],0x8
  40b06e:	mov    DWORD PTR [rdx+0x8],0xff
  40b075:	mov    eax,0x8
  40b07a:	ret    
  40b07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b080:	cmp    r8b,0x3b
  40b084:	ja     40b15a <__sprintf_chk@plt+0x8b7a>
  40b08a:	mov    r14d,DWORD PTR [r13+0x48]
  40b08e:	mov    rax,QWORD PTR [r13+0x38]
  40b092:	cmp    r14d,r9d
  40b095:	jle    40b0fa <__sprintf_chk@plt+0x8b1a>
  40b097:	mov    QWORD PTR [rax+r8*8],rbp
  40b09b:	test   BYTE PTR [rbp+0x9],0x3
  40b09f:	je     40b0d0 <__sprintf_chk@plt+0x8af0>
  40b0a1:	movzx  eax,BYTE PTR [r13+0x9]
  40b0a6:	test   al,0x4
  40b0a8:	je     40b0d0 <__sprintf_chk@plt+0x8af0>
  40b0aa:	mov    rdx,QWORD PTR [rbx+0x20]
  40b0ae:	mov    rdi,QWORD PTR [rdx+0x20]
  40b0b2:	cmp    BYTE PTR [rdi+0x21],0x1
  40b0b6:	je     40b16e <__sprintf_chk@plt+0x8b8e>
  40b0bc:	movzx  edx,BYTE PTR [rdi+0x20]
  40b0c0:	and    eax,0xfffffff8
  40b0c3:	and    edx,0x3
  40b0c6:	or     eax,edx
  40b0c8:	mov    BYTE PTR [r13+0x9],al
  40b0cc:	nop    DWORD PTR [rax+0x0]
  40b0d0:	movzx  edx,BYTE PTR [r13+0x70]
  40b0d5:	mov    esi,DWORD PTR [r12]
  40b0d9:	movzx  ecx,dl
  40b0dc:	lea    rcx,[rbx+rcx*2]
  40b0e0:	mov    BYTE PTR [rcx+0x4b],sil
  40b0e4:	mov    eax,edx
  40b0e6:	inc    eax
  40b0e8:	mov    esi,DWORD PTR [r12+0x8]
  40b0ed:	mov    BYTE PTR [rcx+0x4c],sil
  40b0f1:	mov    BYTE PTR [r13+0x70],al
  40b0f5:	jmp    40b043 <__sprintf_chk@plt+0x8a63>
  40b0fa:	mov    rdi,QWORD PTR [rbx+0x20]
  40b0fe:	mov    ecx,0x8
  40b103:	lea    rdx,[r13+0x48]
  40b107:	lea    r9,[rip+0xc650]        # 41775e <__sprintf_chk@plt+0x1517e>
  40b10e:	mov    r8d,0x7ffffffd
  40b114:	mov    rsi,rax
  40b117:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  40b11c:	mov    ecx,DWORD PTR [r13+0x48]
  40b120:	mov    QWORD PTR [r13+0x38],rax
  40b124:	cmp    r14d,ecx
  40b127:	jge    40b150 <__sprintf_chk@plt+0x8b70>
  40b129:	dec    ecx
  40b12b:	movsxd rsi,r14d
  40b12e:	sub    ecx,r14d
  40b131:	lea    rcx,[rsi+rcx*1+0x1]
  40b136:	lea    rdx,[rax+rsi*8]
  40b13a:	lea    rcx,[rax+rcx*8]
  40b13e:	xchg   ax,ax
  40b140:	mov    QWORD PTR [rdx],0x0
  40b147:	add    rdx,0x8
  40b14b:	cmp    rcx,rdx
  40b14e:	jne    40b140 <__sprintf_chk@plt+0x8b60>
  40b150:	movzx  r8d,BYTE PTR [r13+0x70]
  40b155:	jmp    40b097 <__sprintf_chk@plt+0x8ab7>
  40b15a:	lea    rdx,[rip+0xc0d6]        # 417237 <__sprintf_chk@plt+0x14c57>
  40b161:	mov    esi,0x3c
  40b166:	mov    rdi,rbx
  40b169:	call   40ad80 <__sprintf_chk@plt+0x87a0>
  40b16e:	mov    rsi,rbp
  40b171:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40b176:	jmp    40b0d0 <__sprintf_chk@plt+0x8af0>
  40b17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b180:	push   rbx
  40b181:	mov    rbx,rdi
  40b184:	cmp    esi,0x100
  40b18a:	jg     40b1b8 <__sprintf_chk@plt+0x8bd8>
  40b18c:	lea    rdi,[rdi+0x38]
  40b190:	call   409690 <__sprintf_chk@plt+0x70b0>
  40b195:	mov    rdx,rax
  40b198:	mov    rdi,QWORD PTR [rbx+0x38]
  40b19c:	lea    rsi,[rip+0xc09d]        # 417240 <__sprintf_chk@plt+0x14c60>
  40b1a3:	xor    eax,eax
  40b1a5:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  40b1aa:	mov    edx,DWORD PTR [rbx+0x10]
  40b1ad:	mov    rsi,rax
  40b1b0:	mov    rdi,rbx
  40b1b3:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40b1b8:	sub    esi,0x101
  40b1be:	movsxd rsi,esi
  40b1c1:	lea    rax,[rip+0x13ad8]        # 41eca0 <__sprintf_chk@plt+0x1c6c0>
  40b1c8:	mov    rdx,QWORD PTR [rax+rsi*8]
  40b1cc:	jmp    40b198 <__sprintf_chk@plt+0x8bb8>
  40b1ce:	xchg   ax,ax
  40b1d0:	push   r13
  40b1d2:	mov    r8,rsi
  40b1d5:	lea    r11,[rdi+0x20]
  40b1d9:	push   r12
  40b1db:	mov    r12,rdx
  40b1de:	push   rbp
  40b1df:	mov    ebp,ecx
  40b1e1:	push   rbx
  40b1e2:	mov    rbx,rdi
  40b1e5:	mov    rdi,r11
  40b1e8:	sub    rsp,0x8
  40b1ec:	mov    edx,DWORD PTR [rsi+0x8]
  40b1ef:	mov    rsi,QWORD PTR [rsi]
  40b1f2:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  40b1f7:	mov    r13d,DWORD PTR [rax+0x8]
  40b1fb:	mov    r9d,0xffffffff
  40b201:	test   r13d,r13d
  40b204:	jne    40b218 <__sprintf_chk@plt+0x8c38>
  40b206:	add    rsp,0x8
  40b20a:	pop    rbx
  40b20b:	pop    rbp
  40b20c:	pop    r12
  40b20e:	mov    eax,r9d
  40b211:	pop    r13
  40b213:	ret    
  40b214:	nop    DWORD PTR [rax+0x0]
  40b218:	mov    rsi,QWORD PTR [r12]
  40b21c:	mov    edx,DWORD PTR [r12+0x8]
  40b221:	mov    ecx,ebp
  40b223:	mov    r10,rax
  40b226:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  40b22b:	mov    rsi,rax
  40b22e:	mov    rdi,r10
  40b231:	call   402b40 <__sprintf_chk@plt+0x560>
  40b236:	test   eax,eax
  40b238:	je     40b206 <__sprintf_chk@plt+0x8c26>
  40b23a:	lea    rax,[r12+0x8]
  40b23f:	push   rax
  40b240:	mov    rsi,QWORD PTR [rbx+0x10]
  40b244:	lea    r9,[r8+0x8]
  40b248:	push   r12
  40b24a:	mov    ecx,r13d
  40b24d:	mov    rdi,rbx
  40b250:	mov    rdx,QWORD PTR [r10]
  40b253:	call   406890 <__sprintf_chk@plt+0x42b0>
  40b258:	mov    rax,QWORD PTR [rbx+0x10]
  40b25c:	pop    rdx
  40b25d:	mov    r9d,DWORD PTR [rax+0x8]
  40b261:	pop    rcx
  40b262:	test   r9d,r9d
  40b265:	je     40b206 <__sprintf_chk@plt+0x8c26>
  40b267:	cmp    r9d,0x1
  40b26b:	je     40b278 <__sprintf_chk@plt+0x8c98>
  40b26d:	mov    r9d,0x1
  40b273:	jmp    40b206 <__sprintf_chk@plt+0x8c26>
  40b275:	nop    DWORD PTR [rax]
  40b278:	mov    eax,DWORD PTR [rax]
  40b27a:	xor    r9d,r9d
  40b27d:	test   eax,eax
  40b27f:	setne  r9b
  40b283:	jmp    40b206 <__sprintf_chk@plt+0x8c26>
  40b285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b290:	mov    eax,DWORD PTR [rsi+0x8]
  40b293:	mov    ecx,DWORD PTR [rdx+0x8]
  40b296:	cmp    eax,ecx
  40b298:	jne    40b2c8 <__sprintf_chk@plt+0x8ce8>
  40b29a:	cmp    eax,0x3
  40b29d:	je     40b2f0 <__sprintf_chk@plt+0x8d10>
  40b29f:	push   r12
  40b2a1:	mov    r12,rdi
  40b2a4:	push   rbp
  40b2a5:	mov    rbp,rdx
  40b2a8:	push   rbx
  40b2a9:	mov    rbx,rsi
  40b2ac:	cmp    eax,0x4
  40b2af:	je     40b2d8 <__sprintf_chk@plt+0x8cf8>
  40b2b1:	mov    ecx,0xd
  40b2b6:	call   40b1d0 <__sprintf_chk@plt+0x8bf0>
  40b2bb:	cmp    eax,0xffffffff
  40b2be:	je     40b300 <__sprintf_chk@plt+0x8d20>
  40b2c0:	pop    rbx
  40b2c1:	pop    rbp
  40b2c2:	pop    r12
  40b2c4:	ret    
  40b2c5:	nop    DWORD PTR [rax]
  40b2c8:	mov    edx,ecx
  40b2ca:	mov    esi,eax
  40b2cc:	jmp    409440 <__sprintf_chk@plt+0x6e60>
  40b2d1:	nop    DWORD PTR [rax+0x0]
  40b2d8:	mov    rdi,QWORD PTR [rbx]
  40b2db:	mov    rsi,QWORD PTR [rdx]
  40b2de:	call   403260 <__sprintf_chk@plt+0xc80>
  40b2e3:	pop    rbx
  40b2e4:	pop    rbp
  40b2e5:	shr    eax,0x1f
  40b2e8:	pop    r12
  40b2ea:	ret    
  40b2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2f0:	vmovsd xmm0,QWORD PTR [rdx]
  40b2f4:	xor    eax,eax
  40b2f6:	vcomisd xmm0,QWORD PTR [rsi]
  40b2fa:	seta   al
  40b2fd:	ret    
  40b2fe:	xchg   ax,ax
  40b300:	mov    esi,DWORD PTR [rbx+0x8]
  40b303:	pop    rbx
  40b304:	mov    edx,DWORD PTR [rbp+0x8]
  40b307:	pop    rbp
  40b308:	mov    rdi,r12
  40b30b:	pop    r12
  40b30d:	jmp    409440 <__sprintf_chk@plt+0x6e60>
  40b312:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b31d:	nop    DWORD PTR [rax]
  40b320:	push   r15
  40b322:	push   r14
  40b324:	lea    r14,[rip+0x13a75]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40b32b:	push   r13
  40b32d:	mov    r13,rdx
  40b330:	push   r12
  40b332:	mov    r12,rdi
  40b335:	push   rbp
  40b336:	mov    rbp,rsi
  40b339:	push   rbx
  40b33a:	mov    ebx,0x64
  40b33f:	sub    rsp,0x18
  40b343:	mov    QWORD PTR [rsp+0x8],rcx
  40b348:	movsxd r8,DWORD PTR [rsi+0x8]
  40b34c:	jmp    40b384 <__sprintf_chk@plt+0x8da4>
  40b34e:	xchg   ax,ax
  40b350:	lea    rdi,[r12+0x20]
  40b355:	xor    ecx,ecx
  40b357:	mov    edx,r8d
  40b35a:	mov    rsi,r9
  40b35d:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  40b362:	mov    r15,rax
  40b365:	mov    eax,DWORD PTR [rax+0x8]
  40b368:	test   eax,eax
  40b36a:	je     40b418 <__sprintf_chk@plt+0x8e38>
  40b370:	movsxd r8,eax
  40b373:	cmp    r8d,0x6
  40b377:	je     40b3df <__sprintf_chk@plt+0x8dff>
  40b379:	mov    rbp,r15
  40b37c:	dec    ebx
  40b37e:	je     40b455 <__sprintf_chk@plt+0x8e75>
  40b384:	mov    r9,QWORD PTR [rbp+0x0]
  40b388:	cmp    r8d,0x5
  40b38c:	jne    40b350 <__sprintf_chk@plt+0x8d70>
  40b38e:	mov    rsi,r13
  40b391:	mov    rdi,r9
  40b394:	call   403780 <__sprintf_chk@plt+0x11a0>
  40b399:	mov    r8,rax
  40b39c:	mov    eax,DWORD PTR [rax+0x8]
  40b39f:	test   eax,eax
  40b3a1:	jne    40b438 <__sprintf_chk@plt+0x8e58>
  40b3a7:	mov    rdi,QWORD PTR [r9+0x10]
  40b3ab:	test   rdi,rdi
  40b3ae:	je     40b438 <__sprintf_chk@plt+0x8e58>
  40b3b4:	test   BYTE PTR [rdi+0xa],0x1
  40b3b8:	jne    40b438 <__sprintf_chk@plt+0x8e58>
  40b3ba:	mov    rax,QWORD PTR [r12+0x20]
  40b3bf:	xor    esi,esi
  40b3c1:	mov    rdx,QWORD PTR [rax+0x128]
  40b3c8:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  40b3cd:	mov    r15,rax
  40b3d0:	test   rax,rax
  40b3d3:	je     40b434 <__sprintf_chk@plt+0x8e54>
  40b3d5:	movsxd r8,DWORD PTR [r15+0x8]
  40b3d9:	cmp    r8d,0x6
  40b3dd:	jne    40b379 <__sprintf_chk@plt+0x8d99>
  40b3df:	lea    rax,[r13+0x8]
  40b3e3:	push   rax
  40b3e4:	lea    r9,[rbp+0x8]
  40b3e8:	mov    r8,rbp
  40b3eb:	push   r13
  40b3ed:	mov    rdi,r12
  40b3f0:	mov    ecx,0x6
  40b3f5:	mov    rsi,QWORD PTR [rsp+0x18]
  40b3fa:	mov    rdx,QWORD PTR [r15]
  40b3fd:	call   406890 <__sprintf_chk@plt+0x42b0>
  40b402:	pop    rax
  40b403:	pop    rdx
  40b404:	add    rsp,0x18
  40b408:	pop    rbx
  40b409:	pop    rbp
  40b40a:	pop    r12
  40b40c:	pop    r13
  40b40e:	pop    r14
  40b410:	pop    r15
  40b412:	ret    
  40b413:	nop    DWORD PTR [rax+rax*1+0x0]
  40b418:	mov    rcx,QWORD PTR [r14+r8*8]
  40b41c:	lea    rdx,[rip+0xbfb7]        # 4173da <__sprintf_chk@plt+0x14dfa>
  40b423:	lea    rsi,[rip+0xbbdd]        # 417007 <__sprintf_chk@plt+0x14a27>
  40b42a:	mov    rdi,r12
  40b42d:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40b432:	jmp    40b3d5 <__sprintf_chk@plt+0x8df5>
  40b434:	mov    eax,DWORD PTR [r8+0x8]
  40b438:	mov    rbx,QWORD PTR [rsp+0x8]
  40b43d:	mov    rdx,QWORD PTR [r8]
  40b440:	mov    DWORD PTR [rbx+0x8],eax
  40b443:	mov    QWORD PTR [rbx],rdx
  40b446:	add    rsp,0x18
  40b44a:	pop    rbx
  40b44b:	pop    rbp
  40b44c:	pop    r12
  40b44e:	pop    r13
  40b450:	pop    r14
  40b452:	pop    r15
  40b454:	ret    
  40b455:	add    rsp,0x18
  40b459:	pop    rbx
  40b45a:	pop    rbp
  40b45b:	mov    rdi,r12
  40b45e:	pop    r12
  40b460:	pop    r13
  40b462:	pop    r14
  40b464:	lea    rsi,[rip+0xbde3]        # 41724e <__sprintf_chk@plt+0x14c6e>
  40b46b:	xor    eax,eax
  40b46d:	pop    r15
  40b46f:	jmp    407190 <__sprintf_chk@plt+0x4bb0>
  40b474:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b47f:	nop
  40b480:	push   r12
  40b482:	push   rbp
  40b483:	mov    rbp,rdx
  40b486:	push   rbx
  40b487:	mov    rbx,rdi
  40b48a:	sub    rsp,0x20
  40b48e:	mov    rax,QWORD PTR fs:0x28
  40b497:	mov    QWORD PTR [rsp+0x18],rax
  40b49c:	xor    eax,eax
  40b49e:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40b4a3:	mov    rdi,rbp
  40b4a6:	mov    r12,rax
  40b4a9:	call   4023d0 <strlen@plt>
  40b4ae:	mov    rdx,rax
  40b4b1:	mov    rsi,rbp
  40b4b4:	mov    rdi,rbx
  40b4b7:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40b4bc:	mov    rcx,QWORD PTR [rbx+0x10]
  40b4c0:	mov    rdx,rsp
  40b4c3:	mov    rsi,r12
  40b4c6:	mov    rdi,rbx
  40b4c9:	mov    QWORD PTR [rsp],rax
  40b4cd:	mov    DWORD PTR [rsp+0x8],0x4
  40b4d5:	call   40b320 <__sprintf_chk@plt+0x8d40>
  40b4da:	add    QWORD PTR [rbx+0x10],0x10
  40b4df:	mov    rax,QWORD PTR [rsp+0x18]
  40b4e4:	xor    rax,QWORD PTR fs:0x28
  40b4ed:	jne    40b4f8 <__sprintf_chk@plt+0x8f18>
  40b4ef:	add    rsp,0x20
  40b4f3:	pop    rbx
  40b4f4:	pop    rbp
  40b4f5:	pop    r12
  40b4f7:	ret    
  40b4f8:	call   4023e0 <__stack_chk_fail@plt>
  40b4fd:	nop    DWORD PTR [rax]
  40b500:	push   rbx
  40b501:	mov    rbx,rdi
  40b504:	mov    rdx,QWORD PTR [rdi+0x18]
  40b508:	mov    rax,QWORD PTR [rdi+0x10]
  40b50c:	cmp    rdx,rax
  40b50f:	jb     40b558 <__sprintf_chk@plt+0x8f78>
  40b511:	mov    DWORD PTR [rax+0x8],0x0
  40b518:	add    rax,0x10
  40b51c:	mov    QWORD PTR [rbx+0x10],rax
  40b520:	lea    rdx,[rip+0xbd38]        # 41725f <__sprintf_chk@plt+0x14c7f>
  40b527:	mov    esi,0xffffffff
  40b52c:	mov    rdi,rbx
  40b52f:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  40b534:	mov    rax,QWORD PTR [rbx+0x10]
  40b538:	xor    edx,edx
  40b53a:	cmp    DWORD PTR [rax-0x8],0x6
  40b53e:	jne    40b54e <__sprintf_chk@plt+0x8f6e>
  40b540:	mov    rax,QWORD PTR [rax-0x10]
  40b544:	cmp    BYTE PTR [rax+0xa],0x0
  40b548:	je     40b54e <__sprintf_chk@plt+0x8f6e>
  40b54a:	mov    rdx,QWORD PTR [rax+0x20]
  40b54e:	mov    rdi,rbx
  40b551:	pop    rbx
  40b552:	jmp    rdx
  40b554:	nop    DWORD PTR [rax+0x0]
  40b558:	mov    ecx,DWORD PTR [rdx+0x8]
  40b55b:	cmp    ecx,0x7
  40b55e:	je     40b585 <__sprintf_chk@plt+0x8fa5>
  40b560:	cmp    ecx,0x8
  40b563:	jne    40b580 <__sprintf_chk@plt+0x8fa0>
  40b565:	mov    rdx,QWORD PTR [rdx]
  40b568:	mov    rcx,QWORD PTR [rdx+0x78]
  40b56c:	mov    edx,DWORD PTR [rdx+0x80]
  40b572:	mov    QWORD PTR [rax],rcx
  40b575:	mov    DWORD PTR [rax+0x8],edx
  40b578:	jmp    40b518 <__sprintf_chk@plt+0x8f38>
  40b57a:	nop    WORD PTR [rax+rax*1+0x0]
  40b580:	cmp    ecx,0x6
  40b583:	jne    40b511 <__sprintf_chk@plt+0x8f31>
  40b585:	mov    rdx,QWORD PTR [rdx]
  40b588:	mov    rdx,QWORD PTR [rdx+0x18]
  40b58c:	mov    DWORD PTR [rax+0x8],0x5
  40b593:	mov    QWORD PTR [rax],rdx
  40b596:	jmp    40b518 <__sprintf_chk@plt+0x8f38>
  40b598:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5a0:	push   r13
  40b5a2:	push   r12
  40b5a4:	push   rbp
  40b5a5:	push   rbx
  40b5a6:	sub    rsp,0x8
  40b5aa:	mov    rbx,QWORD PTR [rdi+0x20]
  40b5ae:	mov    rax,QWORD PTR [rbx+0x50]
  40b5b2:	mov    r8,QWORD PTR [rax]
  40b5b5:	cmp    rax,r8
  40b5b8:	je     40b688 <__sprintf_chk@plt+0x90a8>
  40b5be:	mov    rdx,QWORD PTR [r8]
  40b5c1:	mov    QWORD PTR [rax],rdx
  40b5c4:	mov    rax,QWORD PTR [rbx+0xb0]
  40b5cb:	mov    rdx,QWORD PTR [rax]
  40b5ce:	mov    QWORD PTR [r8],rdx
  40b5d1:	mov    QWORD PTR [rax],r8
  40b5d4:	movzx  eax,BYTE PTR [r8+0x9]
  40b5d9:	movzx  edx,BYTE PTR [rbx+0x20]
  40b5dd:	and    eax,0xfffffff8
  40b5e0:	and    edx,0x3
  40b5e3:	or     eax,edx
  40b5e5:	mov    BYTE PTR [r8+0x9],al
  40b5e9:	mov    rax,QWORD PTR [r8+0x10]
  40b5ed:	test   rax,rax
  40b5f0:	je     40b5f8 <__sprintf_chk@plt+0x9018>
  40b5f2:	test   BYTE PTR [rax+0xa],0x4
  40b5f6:	je     40b608 <__sprintf_chk@plt+0x9028>
  40b5f8:	add    rsp,0x8
  40b5fc:	pop    rbx
  40b5fd:	pop    rbp
  40b5fe:	pop    r12
  40b600:	pop    r13
  40b602:	ret    
  40b603:	nop    DWORD PTR [rax+rax*1+0x0]
  40b608:	mov    rdx,QWORD PTR [rdi+0x20]
  40b60c:	mov    rbp,rdi
  40b60f:	mov    rdx,QWORD PTR [rdx+0x138]
  40b616:	mov    esi,0x2
  40b61b:	mov    rdi,rax
  40b61e:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  40b623:	test   rax,rax
  40b626:	je     40b5f8 <__sprintf_chk@plt+0x9018>
  40b628:	mov    r12,QWORD PTR [rbx+0x70]
  40b62c:	movzx  r13d,BYTE PTR [rbp+0x65]
  40b631:	mov    BYTE PTR [rbp+0x65],0x0
  40b635:	mov    rsi,QWORD PTR [rbp+0x10]
  40b639:	mov    rdi,rbp
  40b63c:	mov    rcx,QWORD PTR [rbx+0x78]
  40b640:	lea    rdx,[rcx+rcx*1]
  40b644:	mov    QWORD PTR [rbx+0x70],rdx
  40b648:	mov    rdx,QWORD PTR [rax]
  40b64b:	mov    eax,DWORD PTR [rax+0x8]
  40b64e:	mov    QWORD PTR [rsi],rdx
  40b651:	mov    DWORD PTR [rsi+0x8],eax
  40b654:	lea    rax,[rsi+0x20]
  40b658:	mov    QWORD PTR [rsi+0x10],r8
  40b65c:	mov    DWORD PTR [rsi+0x18],0x7
  40b663:	mov    QWORD PTR [rbp+0x10],rax
  40b667:	xor    edx,edx
  40b669:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  40b66e:	mov    BYTE PTR [rbp+0x65],r13b
  40b672:	mov    QWORD PTR [rbx+0x70],r12
  40b676:	add    rsp,0x8
  40b67a:	pop    rbx
  40b67b:	pop    rbp
  40b67c:	pop    r12
  40b67e:	pop    r13
  40b680:	ret    
  40b681:	nop    DWORD PTR [rax+0x0]
  40b688:	mov    QWORD PTR [rbx+0x50],0x0
  40b690:	jmp    40b5c4 <__sprintf_chk@plt+0x8fe4>
  40b695:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b6a0:	push   r15
  40b6a2:	push   r14
  40b6a4:	lea    r14,[rip+0xc545]        # 417bf0 <__sprintf_chk@plt+0x15610>
  40b6ab:	push   r13
  40b6ad:	mov    r13,rdi
  40b6b0:	push   r12
  40b6b2:	push   rbp
  40b6b3:	push   rbx
  40b6b4:	sub    rsp,0x18
  40b6b8:	mov    rbp,QWORD PTR [rdi+0x20]
  40b6bc:	mov    eax,DWORD PTR [rbp+0x94]
  40b6c2:	mov    rbx,rbp
  40b6c5:	lea    eax,[rax+rax*4]
  40b6c8:	lea    r12d,[rax+rax*1]
  40b6cc:	test   r12d,r12d
  40b6cf:	movabs rax,0x7ffffffffffffffe
  40b6d9:	cmove  r12,rax
  40b6dd:	mov    rax,QWORD PTR [rbp+0x78]
  40b6e1:	add    rax,QWORD PTR [rbp+0x88]
  40b6e8:	sub    rax,QWORD PTR [rbp+0x70]
  40b6ec:	mov    QWORD PTR [rbp+0x88],rax
  40b6f3:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6f8:	cmp    BYTE PTR [rbx+0x21],0x4
  40b6fc:	ja     40b74f <__sprintf_chk@plt+0x916f>
  40b6fe:	movzx  eax,BYTE PTR [rbx+0x21]
  40b702:	movsxd rax,DWORD PTR [r14+rax*4]
  40b706:	add    rax,r14
  40b709:	notrack jmp rax
  40b70c:	nop    DWORD PTR [rax+0x0]
  40b710:	mov    rsi,QWORD PTR [rbx+0x30]
  40b714:	mov    edx,0x28
  40b719:	mov    rdi,r13
  40b71c:	mov    r15,QWORD PTR [rbx+0x78]
  40b720:	call   4048a0 <__sprintf_chk@plt+0x22c0>
  40b725:	cmp    QWORD PTR [rax],0x0
  40b729:	mov    QWORD PTR [rbx+0x30],rax
  40b72d:	je     40bc50 <__sprintf_chk@plt+0x9670>
  40b733:	mov    rax,QWORD PTR [rbx+0x78]
  40b737:	sub    r12,0x190
  40b73e:	add    rax,QWORD PTR [rbx+0x80]
  40b745:	sub    rax,r15
  40b748:	mov    QWORD PTR [rbx+0x80],rax
  40b74f:	cmp    BYTE PTR [rbp+0x21],0x0
  40b753:	je     40b7b7 <__sprintf_chk@plt+0x91d7>
  40b755:	test   r12,r12
  40b758:	jle    40b908 <__sprintf_chk@plt+0x9328>
  40b75e:	mov    rbx,QWORD PTR [r13+0x20]
  40b762:	jmp    40b6f8 <__sprintf_chk@plt+0x9118>
  40b764:	nop    DWORD PTR [rax+0x0]
  40b768:	movsxd rsi,DWORD PTR [rbx+0x24]
  40b76c:	mov    rax,QWORD PTR [rbx]
  40b76f:	lea    edx,[rsi+0x1]
  40b772:	mov    DWORD PTR [rbx+0x24],edx
  40b775:	lea    rsi,[rax+rsi*8]
  40b779:	mov    rdx,0xfffffffffffffffd
  40b780:	mov    rdi,r13
  40b783:	mov    r15,QWORD PTR [rbx+0x78]
  40b787:	call   4048a0 <__sprintf_chk@plt+0x22c0>
  40b78c:	mov    eax,DWORD PTR [rbx+0xc]
  40b78f:	cmp    DWORD PTR [rbx+0x24],eax
  40b792:	jl     40b798 <__sprintf_chk@plt+0x91b8>
  40b794:	mov    BYTE PTR [rbx+0x21],0x3
  40b798:	mov    rax,QWORD PTR [rbx+0x78]
  40b79c:	sub    r12,0xa
  40b7a0:	add    rax,QWORD PTR [rbx+0x80]
  40b7a7:	sub    rax,r15
  40b7aa:	mov    QWORD PTR [rbx+0x80],rax
  40b7b1:	cmp    BYTE PTR [rbp+0x21],0x0
  40b7b5:	jne    40b755 <__sprintf_chk@plt+0x9175>
  40b7b7:	mov    eax,0x2
  40b7bc:	shrx   rdx,QWORD PTR [rbp+0x80],rax
  40b7c5:	movabs rcx,0x28f5c28f5c28f5c3
  40b7cf:	mov    rax,rdx
  40b7d2:	mul    rcx
  40b7d5:	movsxd rax,DWORD PTR [rbp+0x90]
  40b7dc:	shr    rdx,0x2
  40b7e0:	imul   rdx,rax
  40b7e4:	mov    QWORD PTR [rbp+0x70],rdx
  40b7e8:	add    rsp,0x18
  40b7ec:	pop    rbx
  40b7ed:	pop    rbp
  40b7ee:	pop    r12
  40b7f0:	pop    r13
  40b7f2:	pop    r14
  40b7f4:	pop    r15
  40b7f6:	ret    
  40b7f7:	nop    WORD PTR [rax+rax*1+0x0]
  40b800:	cmp    QWORD PTR [rbx+0x38],0x0
  40b805:	je     40b960 <__sprintf_chk@plt+0x9380>
  40b80b:	mov    rdi,rbx
  40b80e:	call   407b00 <__sprintf_chk@plt+0x5520>
  40b813:	sub    r12,rax
  40b816:	jmp    40b74f <__sprintf_chk@plt+0x916f>
  40b81b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b820:	cmp    QWORD PTR [rbx+0x50],0x0
  40b825:	jne    40b8c0 <__sprintf_chk@plt+0x92e0>
  40b82b:	mov    BYTE PTR [rbx+0x21],0x0
  40b82f:	mov    QWORD PTR [rbx+0x88],0x0
  40b83a:	cmp    BYTE PTR [rbp+0x21],0x0
  40b83e:	jne    40b75e <__sprintf_chk@plt+0x917e>
  40b844:	jmp    40b7b7 <__sprintf_chk@plt+0x91d7>
  40b849:	nop    DWORD PTR [rax+0x0]
  40b850:	mov    rsi,QWORD PTR [rbx+0xb0]
  40b857:	mov    QWORD PTR [rbx+0x38],0x0
  40b85f:	mov    QWORD PTR [rbx+0x40],0x0
  40b867:	mov    QWORD PTR [rbx+0x48],0x0
  40b86f:	test   BYTE PTR [rsi+0x9],0x3
  40b873:	jne    40b8f0 <__sprintf_chk@plt+0x9310>
  40b875:	cmp    DWORD PTR [rsi+0x80],0x3
  40b87c:	jle    40b88c <__sprintf_chk@plt+0x92ac>
  40b87e:	mov    rsi,QWORD PTR [rsi+0x78]
  40b882:	test   BYTE PTR [rsi+0x9],0x3
  40b886:	jne    40bc98 <__sprintf_chk@plt+0x96b8>
  40b88c:	mov    rax,QWORD PTR [r13+0x20]
  40b890:	cmp    DWORD PTR [rax+0xa8],0x3
  40b897:	jle    40b8aa <__sprintf_chk@plt+0x92ca>
  40b899:	mov    rsi,QWORD PTR [rax+0xa0]
  40b8a0:	test   BYTE PTR [rsi+0x9],0x3
  40b8a4:	jne    40bc88 <__sprintf_chk@plt+0x96a8>
  40b8aa:	mov    rdi,rbx
  40b8ad:	call   4042e0 <__sprintf_chk@plt+0x1d00>
  40b8b2:	mov    BYTE PTR [rbx+0x21],0x1
  40b8b6:	jmp    40b83a <__sprintf_chk@plt+0x925a>
  40b8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8c0:	mov    rdi,r13
  40b8c3:	call   40b5a0 <__sprintf_chk@plt+0x8fc0>
  40b8c8:	mov    rax,QWORD PTR [rbx+0x80]
  40b8cf:	sub    r12,0x64
  40b8d3:	cmp    rax,0x64
  40b8d7:	jbe    40b74f <__sprintf_chk@plt+0x916f>
  40b8dd:	sub    rax,0x64
  40b8e1:	mov    QWORD PTR [rbx+0x80],rax
  40b8e8:	jmp    40b74f <__sprintf_chk@plt+0x916f>
  40b8ed:	nop    DWORD PTR [rax]
  40b8f0:	mov    rdi,rbx
  40b8f3:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40b8f8:	mov    rsi,QWORD PTR [rbx+0xb0]
  40b8ff:	jmp    40b875 <__sprintf_chk@plt+0x9295>
  40b904:	nop    DWORD PTR [rax+0x0]
  40b908:	mov    rax,QWORD PTR [rbp+0x88]
  40b90f:	mov    rdx,QWORD PTR [rbp+0x78]
  40b913:	cmp    rax,0x3ff
  40b919:	ja     40b938 <__sprintf_chk@plt+0x9358>
  40b91b:	add    rdx,0x400
  40b922:	mov    QWORD PTR [rbp+0x70],rdx
  40b926:	add    rsp,0x18
  40b92a:	pop    rbx
  40b92b:	pop    rbp
  40b92c:	pop    r12
  40b92e:	pop    r13
  40b930:	pop    r14
  40b932:	pop    r15
  40b934:	ret    
  40b935:	nop    DWORD PTR [rax]
  40b938:	sub    rax,0x400
  40b93e:	mov    QWORD PTR [rbp+0x88],rax
  40b945:	mov    QWORD PTR [rbp+0x70],rdx
  40b949:	add    rsp,0x18
  40b94d:	pop    rbx
  40b94e:	pop    rbp
  40b94f:	pop    r12
  40b951:	pop    r13
  40b953:	pop    r14
  40b955:	pop    r15
  40b957:	ret    
  40b958:	nop    DWORD PTR [rax+rax*1+0x0]
  40b960:	mov    rcx,QWORD PTR [rbx+0xd8]
  40b967:	lea    r8,[rbx+0xb8]
  40b96e:	cmp    rcx,r8
  40b971:	je     40b9bf <__sprintf_chk@plt+0x93df>
  40b973:	nop    DWORD PTR [rax+rax*1+0x0]
  40b978:	test   BYTE PTR [rcx+0x9],0x7
  40b97c:	jne    40b998 <__sprintf_chk@plt+0x93b8>
  40b97e:	mov    rax,QWORD PTR [rcx+0x10]
  40b982:	cmp    DWORD PTR [rax+0x8],0x3
  40b986:	jle    40b998 <__sprintf_chk@plt+0x93b8>
  40b988:	mov    rsi,QWORD PTR [rax]
  40b98b:	test   BYTE PTR [rsi+0x9],0x3
  40b98f:	jne    40bc40 <__sprintf_chk@plt+0x9660>
  40b995:	nop    DWORD PTR [rax]
  40b998:	mov    rcx,QWORD PTR [rcx+0x20]
  40b99c:	cmp    rcx,r8
  40b99f:	jne    40b978 <__sprintf_chk@plt+0x9398>
  40b9a1:	cmp    QWORD PTR [rbx+0x38],0x0
  40b9a6:	je     40b9bf <__sprintf_chk@plt+0x93df>
  40b9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b9b0:	mov    rdi,rbx
  40b9b3:	call   407b00 <__sprintf_chk@plt+0x5520>
  40b9b8:	cmp    QWORD PTR [rbx+0x38],0x0
  40b9bd:	jne    40b9b0 <__sprintf_chk@plt+0x93d0>
  40b9bf:	mov    rax,QWORD PTR [rbx+0x48]
  40b9c3:	mov    QWORD PTR [rbx+0x48],0x0
  40b9cb:	mov    QWORD PTR [rbx+0x38],rax
  40b9cf:	test   BYTE PTR [r13+0x9],0x3
  40b9d4:	jne    40bce0 <__sprintf_chk@plt+0x9700>
  40b9da:	mov    rdi,rbx
  40b9dd:	call   4042e0 <__sprintf_chk@plt+0x1d00>
  40b9e2:	cmp    QWORD PTR [rbx+0x38],0x0
  40b9e7:	je     40b9ff <__sprintf_chk@plt+0x941f>
  40b9e9:	nop    DWORD PTR [rax+0x0]
  40b9f0:	mov    rdi,rbx
  40b9f3:	call   407b00 <__sprintf_chk@plt+0x5520>
  40b9f8:	cmp    QWORD PTR [rbx+0x38],0x0
  40b9fd:	jne    40b9f0 <__sprintf_chk@plt+0x9410>
  40b9ff:	mov    rax,QWORD PTR [rbx+0x40]
  40ba03:	mov    QWORD PTR [rbx+0x40],0x0
  40ba0b:	mov    QWORD PTR [rbx+0x38],rax
  40ba0f:	test   rax,rax
  40ba12:	je     40ba27 <__sprintf_chk@plt+0x9447>
  40ba14:	nop    DWORD PTR [rax+0x0]
  40ba18:	mov    rdi,rbx
  40ba1b:	call   407b00 <__sprintf_chk@plt+0x5520>
  40ba20:	cmp    QWORD PTR [rbx+0x38],0x0
  40ba25:	jne    40ba18 <__sprintf_chk@plt+0x9438>
  40ba27:	lea    rdi,[r13+0x20]
  40ba2b:	xor    esi,esi
  40ba2d:	call   403a60 <__sprintf_chk@plt+0x1480>
  40ba32:	mov    rcx,QWORD PTR [rbx+0x50]
  40ba36:	mov    QWORD PTR [rsp],rax
  40ba3a:	test   rcx,rcx
  40ba3d:	je     40ba67 <__sprintf_chk@plt+0x9487>
  40ba3f:	nop
  40ba40:	mov    rcx,QWORD PTR [rcx]
  40ba43:	movzx  edx,BYTE PTR [rbx+0x20]
  40ba47:	movzx  eax,BYTE PTR [rcx+0x9]
  40ba4b:	and    edx,0x3
  40ba4e:	and    eax,0xfffffff8
  40ba51:	or     eax,edx
  40ba53:	mov    BYTE PTR [rcx+0x9],al
  40ba56:	mov    rsi,rcx
  40ba59:	mov    rdi,rbx
  40ba5c:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40ba61:	cmp    rcx,QWORD PTR [rbx+0x50]
  40ba65:	jne    40ba40 <__sprintf_chk@plt+0x9460>
  40ba67:	xor    r15d,r15d
  40ba6a:	cmp    QWORD PTR [rbx+0x38],0x0
  40ba6f:	je     40ba8a <__sprintf_chk@plt+0x94aa>
  40ba71:	nop    DWORD PTR [rax+0x0]
  40ba78:	mov    rdi,rbx
  40ba7b:	call   407b00 <__sprintf_chk@plt+0x5520>
  40ba80:	add    r15,rax
  40ba83:	cmp    QWORD PTR [rbx+0x38],0x0
  40ba88:	jne    40ba78 <__sprintf_chk@plt+0x9498>
  40ba8a:	mov    rsi,QWORD PTR [rbx+0x48]
  40ba8e:	mov    r11d,0x1
  40ba94:	test   rsi,rsi
  40ba97:	je     40bb6d <__sprintf_chk@plt+0x958d>
  40ba9d:	nop    DWORD PTR [rax]
  40baa0:	test   BYTE PTR [rsi+0x9],0x10
  40baa4:	jne    40bbc0 <__sprintf_chk@plt+0x95e0>
  40baaa:	movzx  ecx,BYTE PTR [rsi+0xb]
  40baae:	shlx   rcx,r11,rcx
  40bab3:	movsxd rax,ecx
  40bab6:	mov    ecx,ecx
  40bab8:	lea    rdx,[rax+rax*4]
  40babc:	sub    rax,rcx
  40babf:	lea    rax,[rax+rax*4]
  40bac3:	lea    rdx,[rdx*8-0x28]
  40bacb:	lea    r10,[rax*8-0x28]
  40bad3:	jmp    40bb04 <__sprintf_chk@plt+0x9524>
  40bad5:	nop    DWORD PTR [rax]
  40bad8:	mov    r9,QWORD PTR [rax+0x10]
  40badc:	movzx  r8d,BYTE PTR [r9+0x9]
  40bae1:	cmp    edi,0x4
  40bae4:	je     40bba0 <__sprintf_chk@plt+0x95c0>
  40baea:	and    r8d,0x3
  40baee:	je     40bb1f <__sprintf_chk@plt+0x953f>
  40baf0:	mov    DWORD PTR [rax+0x8],0x0
  40baf7:	mov    DWORD PTR [rax+0x18],0xb
  40bafe:	xchg   ax,ax
  40bb00:	sub    rdx,0x28
  40bb04:	cmp    rdx,r10
  40bb07:	je     40bb60 <__sprintf_chk@plt+0x9580>
  40bb09:	mov    rax,QWORD PTR [rsi+0x20]
  40bb0d:	add    rax,rdx
  40bb10:	mov    ecx,DWORD PTR [rax+0x8]
  40bb13:	test   ecx,ecx
  40bb15:	je     40bb00 <__sprintf_chk@plt+0x9520>
  40bb17:	mov    edi,DWORD PTR [rax+0x18]
  40bb1a:	cmp    edi,0x3
  40bb1d:	jg     40bad8 <__sprintf_chk@plt+0x94f8>
  40bb1f:	cmp    ecx,0x3
  40bb22:	jle    40bb00 <__sprintf_chk@plt+0x9520>
  40bb24:	mov    r8,QWORD PTR [rax]
  40bb27:	movzx  edi,BYTE PTR [r8+0x9]
  40bb2c:	cmp    ecx,0x4
  40bb2f:	je     40bbb0 <__sprintf_chk@plt+0x95d0>
  40bb31:	test   dil,0x3
  40bb35:	jne    40bb48 <__sprintf_chk@plt+0x9568>
  40bb37:	cmp    ecx,0x7
  40bb3a:	jne    40bb00 <__sprintf_chk@plt+0x9520>
  40bb3c:	and    edi,0x8
  40bb3f:	je     40bb00 <__sprintf_chk@plt+0x9520>
  40bb41:	nop    DWORD PTR [rax+0x0]
  40bb48:	mov    ecx,DWORD PTR [rax+0x18]
  40bb4b:	mov    DWORD PTR [rax+0x8],0x0
  40bb52:	cmp    ecx,0x3
  40bb55:	jle    40bb00 <__sprintf_chk@plt+0x9520>
  40bb57:	jmp    40baf7 <__sprintf_chk@plt+0x9517>
  40bb59:	nop    DWORD PTR [rax+0x0]
  40bb60:	mov    rsi,QWORD PTR [rsi+0x30]
  40bb64:	test   rsi,rsi
  40bb67:	jne    40baa0 <__sprintf_chk@plt+0x94c0>
  40bb6d:	lea    rax,[rbx+0x28]
  40bb71:	mov    QWORD PTR [rbx+0x30],rax
  40bb75:	mov    rax,QWORD PTR [rbx+0x78]
  40bb79:	xor    BYTE PTR [rbx+0x20],0x3
  40bb7d:	sub    rax,QWORD PTR [rsp]
  40bb81:	sub    rax,r15
  40bb84:	mov    DWORD PTR [rbx+0x24],0x0
  40bb8b:	mov    BYTE PTR [rbx+0x21],0x2
  40bb8f:	mov    QWORD PTR [rbx+0x80],rax
  40bb96:	jmp    40b83a <__sprintf_chk@plt+0x925a>
  40bb9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bba0:	and    r8d,0xfffffffc
  40bba4:	mov    BYTE PTR [r9+0x9],r8b
  40bba8:	mov    ecx,DWORD PTR [rax+0x8]
  40bbab:	jmp    40bb1f <__sprintf_chk@plt+0x953f>
  40bbb0:	and    edi,0xfffffffc
  40bbb3:	mov    BYTE PTR [r8+0x9],dil
  40bbb7:	jmp    40bb00 <__sprintf_chk@plt+0x9520>
  40bbbc:	nop    DWORD PTR [rax+0x0]
  40bbc0:	movsxd rdi,DWORD PTR [rsi+0x38]
  40bbc4:	mov    edx,edi
  40bbc6:	mov    rax,rdi
  40bbc9:	sub    rdi,rdx
  40bbcc:	shl    rax,0x4
  40bbd0:	shl    rdi,0x4
  40bbd4:	sub    rax,0x10
  40bbd8:	sub    rdi,0x10
  40bbdc:	jmp    40bbec <__sprintf_chk@plt+0x960c>
  40bbde:	xchg   ax,ax
  40bbe0:	cmp    ecx,0x7
  40bbe3:	je     40bc30 <__sprintf_chk@plt+0x9650>
  40bbe5:	nop    DWORD PTR [rax]
  40bbe8:	sub    rax,0x10
  40bbec:	cmp    rdi,rax
  40bbef:	je     40baaa <__sprintf_chk@plt+0x94ca>
  40bbf5:	mov    rdx,QWORD PTR [rsi+0x18]
  40bbf9:	add    rdx,rax
  40bbfc:	mov    ecx,DWORD PTR [rdx+0x8]
  40bbff:	cmp    ecx,0x3
  40bc02:	jle    40bbe8 <__sprintf_chk@plt+0x9608>
  40bc04:	mov    r9,QWORD PTR [rdx]
  40bc07:	movzx  r8d,BYTE PTR [r9+0x9]
  40bc0c:	cmp    ecx,0x4
  40bc0f:	je     40bc20 <__sprintf_chk@plt+0x9640>
  40bc11:	test   r8b,0x3
  40bc15:	je     40bbe0 <__sprintf_chk@plt+0x9600>
  40bc17:	mov    DWORD PTR [rdx+0x8],0x0
  40bc1e:	jmp    40bbe8 <__sprintf_chk@plt+0x9608>
  40bc20:	and    r8d,0xfffffffc
  40bc24:	mov    BYTE PTR [r9+0x9],r8b
  40bc28:	jmp    40bbe8 <__sprintf_chk@plt+0x9608>
  40bc2a:	nop    WORD PTR [rax+rax*1+0x0]
  40bc30:	and    r8d,0x8
  40bc34:	je     40bbe8 <__sprintf_chk@plt+0x9608>
  40bc36:	mov    DWORD PTR [rdx+0x8],0x0
  40bc3d:	jmp    40bbe8 <__sprintf_chk@plt+0x9608>
  40bc3f:	nop
  40bc40:	mov    rdi,rbx
  40bc43:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40bc48:	jmp    40b998 <__sprintf_chk@plt+0x93b8>
  40bc4d:	nop    DWORD PTR [rax]
  40bc50:	mov    r8,QWORD PTR [r13+0x20]
  40bc54:	mov    edx,DWORD PTR [r8+0xc]
  40bc58:	test   edx,edx
  40bc5a:	lea    eax,[rdx+0x3]
  40bc5d:	cmovns eax,edx
  40bc60:	sar    eax,0x2
  40bc63:	cmp    DWORD PTR [r8+0x8],eax
  40bc67:	jae    40bc72 <__sprintf_chk@plt+0x9692>
  40bc69:	cmp    edx,0x40
  40bc6c:	jg     40bcf0 <__sprintf_chk@plt+0x9710>
  40bc72:	mov    rdx,QWORD PTR [r8+0x68]
  40bc76:	cmp    rdx,0x40
  40bc7a:	ja     40bca5 <__sprintf_chk@plt+0x96c5>
  40bc7c:	mov    BYTE PTR [rbx+0x21],0x4
  40bc80:	jmp    40b733 <__sprintf_chk@plt+0x9153>
  40bc85:	nop    DWORD PTR [rax]
  40bc88:	mov    rdi,rbx
  40bc8b:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40bc90:	jmp    40b8aa <__sprintf_chk@plt+0x92ca>
  40bc95:	nop    DWORD PTR [rax]
  40bc98:	mov    rdi,rbx
  40bc9b:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40bca0:	jmp    40b88c <__sprintf_chk@plt+0x92ac>
  40bca5:	mov    r9,rdx
  40bca8:	shr    r9,1
  40bcab:	mov    rsi,QWORD PTR [r8+0x58]
  40bcaf:	mov    rcx,r9
  40bcb2:	mov    rdi,r13
  40bcb5:	mov    QWORD PTR [rsp+0x8],r8
  40bcba:	mov    QWORD PTR [rsp],r9
  40bcbe:	call   404640 <__sprintf_chk@plt+0x2060>
  40bcc3:	mov    r8,QWORD PTR [rsp+0x8]
  40bcc8:	mov    r9,QWORD PTR [rsp]
  40bccc:	mov    QWORD PTR [r8+0x58],rax
  40bcd0:	mov    QWORD PTR [r8+0x68],r9
  40bcd4:	jmp    40bc7c <__sprintf_chk@plt+0x969c>
  40bcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bce0:	mov    rsi,r13
  40bce3:	mov    rdi,rbx
  40bce6:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  40bceb:	jmp    40b9da <__sprintf_chk@plt+0x93fa>
  40bcf0:	mov    esi,edx
  40bcf2:	sar    esi,1
  40bcf4:	mov    rdi,r13
  40bcf7:	mov    QWORD PTR [rsp],r8
  40bcfb:	call   407390 <__sprintf_chk@plt+0x4db0>
  40bd00:	mov    r8,QWORD PTR [rsp]
  40bd04:	jmp    40bc72 <__sprintf_chk@plt+0x9692>
  40bd09:	nop    DWORD PTR [rax+0x0]
  40bd10:	push   rbx
  40bd11:	mov    rbx,rdi
  40bd14:	sub    rsp,0xe0
  40bd1b:	mov    QWORD PTR [rsp+0x40],rdx
  40bd20:	mov    QWORD PTR [rsp+0x48],rcx
  40bd25:	mov    QWORD PTR [rsp+0x50],r8
  40bd2a:	mov    QWORD PTR [rsp+0x58],r9
  40bd2f:	test   al,al
  40bd31:	je     40bd75 <__sprintf_chk@plt+0x9795>
  40bd33:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  40bd39:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  40bd3f:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  40bd48:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  40bd51:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  40bd5a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  40bd63:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  40bd6c:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  40bd75:	mov    rax,QWORD PTR fs:0x28
  40bd7e:	mov    QWORD PTR [rsp+0x28],rax
  40bd83:	xor    eax,eax
  40bd85:	mov    rax,QWORD PTR [rbx+0x20]
  40bd89:	mov    rcx,QWORD PTR [rax+0x70]
  40bd8d:	cmp    QWORD PTR [rax+0x78],rcx
  40bd91:	jae    40bde0 <__sprintf_chk@plt+0x9800>
  40bd93:	lea    rax,[rsp+0xf0]
  40bd9b:	mov    QWORD PTR [rsp+0x18],rax
  40bda0:	mov    rdi,rbx
  40bda3:	lea    rax,[rsp+0x30]
  40bda8:	lea    rdx,[rsp+0x10]
  40bdad:	mov    DWORD PTR [rsp+0x10],0x10
  40bdb5:	mov    DWORD PTR [rsp+0x14],0x30
  40bdbd:	mov    QWORD PTR [rsp+0x20],rax
  40bdc2:	call   406d70 <__sprintf_chk@plt+0x4790>
  40bdc7:	mov    rdi,QWORD PTR [rsp+0x28]
  40bdcc:	xor    rdi,QWORD PTR fs:0x28
  40bdd5:	jne    40bdf4 <__sprintf_chk@plt+0x9814>
  40bdd7:	add    rsp,0xe0
  40bdde:	pop    rbx
  40bddf:	ret    
  40bde0:	mov    rdi,rbx
  40bde3:	mov    QWORD PTR [rsp+0x8],rsi
  40bde8:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40bded:	mov    rsi,QWORD PTR [rsp+0x8]
  40bdf2:	jmp    40bd93 <__sprintf_chk@plt+0x97b3>
  40bdf4:	call   4023e0 <__stack_chk_fail@plt>
  40bdf9:	nop    DWORD PTR [rax+0x0]
  40be00:	push   r14
  40be02:	push   r13
  40be04:	push   r12
  40be06:	push   rbp
  40be07:	push   rbx
  40be08:	mov    rbx,QWORD PTR [rdi+0x10]
  40be0c:	lea    r12,[rbx+0x10]
  40be10:	test   esi,esi
  40be12:	je     40be30 <__sprintf_chk@plt+0x9850>
  40be14:	mov    DWORD PTR [rbx],0x1
  40be1a:	mov    DWORD PTR [rbx+0x8],0x1
  40be21:	mov    QWORD PTR [rdi+0x10],r12
  40be25:	mov    eax,esi
  40be27:	pop    rbx
  40be28:	pop    rbp
  40be29:	pop    r12
  40be2b:	pop    r13
  40be2d:	pop    r14
  40be2f:	ret    
  40be30:	mov    rbp,rdi
  40be33:	mov    r14,rdx
  40be36:	call   402330 <__errno_location@plt>
  40be3b:	mov    r13d,DWORD PTR [rax]
  40be3e:	mov    DWORD PTR [rbx+0x8],0x0
  40be45:	mov    edi,r13d
  40be48:	mov    QWORD PTR [rbp+0x10],r12
  40be4c:	test   r14,r14
  40be4f:	je     40bea0 <__sprintf_chk@plt+0x98c0>
  40be51:	call   4025a0 <strerror@plt>
  40be56:	mov    rcx,rax
  40be59:	mov    rdx,r14
  40be5c:	lea    rsi,[rip+0xb7b6]        # 417619 <__sprintf_chk@plt+0x15039>
  40be63:	mov    rdi,rbp
  40be66:	xor    eax,eax
  40be68:	call   40bd10 <__sprintf_chk@plt+0x9730>
  40be6d:	vxorpd xmm0,xmm0,xmm0
  40be71:	vcvtsi2sd xmm0,xmm0,r13d
  40be76:	mov    rax,QWORD PTR [rbp+0x10]
  40be7a:	mov    DWORD PTR [rax+0x8],0x3
  40be81:	vmovsd QWORD PTR [rax],xmm0
  40be85:	add    rax,0x10
  40be89:	mov    QWORD PTR [rbp+0x10],rax
  40be8d:	mov    eax,0x3
  40be92:	pop    rbx
  40be93:	pop    rbp
  40be94:	pop    r12
  40be96:	pop    r13
  40be98:	pop    r14
  40be9a:	ret    
  40be9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bea0:	call   4025a0 <strerror@plt>
  40bea5:	mov    rdx,rax
  40bea8:	lea    rsi,[rip+0xb1ff]        # 4170ae <__sprintf_chk@plt+0x14ace>
  40beaf:	mov    rdi,rbp
  40beb2:	xor    eax,eax
  40beb4:	call   40bd10 <__sprintf_chk@plt+0x9730>
  40beb9:	jmp    40be6d <__sprintf_chk@plt+0x988d>
  40bebb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bec0:	push   rbp
  40bec1:	mov    rbp,rdi
  40bec4:	push   rbx
  40bec5:	movsxd rbx,esi
  40bec8:	sub    rsp,0x8
  40becc:	cmp    ebx,0x1
  40becf:	jle    40bf10 <__sprintf_chk@plt+0x9930>
  40bed1:	mov    rax,QWORD PTR [rdi+0x20]
  40bed5:	mov    rcx,QWORD PTR [rax+0x70]
  40bed9:	cmp    QWORD PTR [rax+0x78],rcx
  40bedd:	jae    40bf40 <__sprintf_chk@plt+0x9960>
  40bedf:	mov    rdx,QWORD PTR [rbp+0x10]
  40bee3:	mov    esi,ebx
  40bee5:	sub    rdx,QWORD PTR [rbp+0x18]
  40bee9:	neg    rbx
  40beec:	sar    rdx,0x4
  40bef0:	shl    rbx,0x4
  40bef4:	dec    edx
  40bef6:	mov    rdi,rbp
  40bef9:	add    rbx,0x10
  40befd:	call   4069b0 <__sprintf_chk@plt+0x43d0>
  40bf02:	add    QWORD PTR [rbp+0x10],rbx
  40bf06:	add    rsp,0x8
  40bf0a:	pop    rbx
  40bf0b:	pop    rbp
  40bf0c:	ret    
  40bf0d:	nop    DWORD PTR [rax]
  40bf10:	test   ebx,ebx
  40bf12:	jne    40bf06 <__sprintf_chk@plt+0x9926>
  40bf14:	mov    rbx,QWORD PTR [rdi+0x10]
  40bf18:	xor    edx,edx
  40bf1a:	lea    rsi,[rip+0xb83d]        # 41775e <__sprintf_chk@plt+0x1517e>
  40bf21:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40bf26:	mov    QWORD PTR [rbx],rax
  40bf29:	mov    DWORD PTR [rbx+0x8],0x4
  40bf30:	add    QWORD PTR [rbp+0x10],0x10
  40bf35:	add    rsp,0x8
  40bf39:	pop    rbx
  40bf3a:	pop    rbp
  40bf3b:	ret    
  40bf3c:	nop    DWORD PTR [rax+0x0]
  40bf40:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40bf45:	jmp    40bedf <__sprintf_chk@plt+0x98ff>
  40bf47:	nop    WORD PTR [rax+rax*1+0x0]
  40bf50:	push   r13
  40bf52:	push   r12
  40bf54:	mov    r12,rdi
  40bf57:	push   rbp
  40bf58:	push   rbx
  40bf59:	mov    ebx,0x1
  40bf5e:	sub    rsp,0x8
  40bf62:	mov    r13,QWORD PTR [rsi]
  40bf65:	mov    esi,0xffffffff
  40bf6a:	mov    rdi,r13
  40bf6d:	call   407900 <__sprintf_chk@plt+0x5320>
  40bf72:	mov    rbp,rax
  40bf75:	nop    DWORD PTR [rax]
  40bf78:	mov    esi,ebx
  40bf7a:	not    esi
  40bf7c:	mov    rdi,r13
  40bf7f:	call   407900 <__sprintf_chk@plt+0x5320>
  40bf84:	mov    edx,DWORD PTR [r12]
  40bf88:	mov    ecx,edx
  40bf8a:	sub    ecx,ebx
  40bf8c:	cmp    ecx,0x8
  40bf8f:	jg     40bf96 <__sprintf_chk@plt+0x99b6>
  40bf91:	cmp    rax,rbp
  40bf94:	jae    40bf9f <__sprintf_chk@plt+0x99bf>
  40bf96:	inc    ebx
  40bf98:	add    rbp,rax
  40bf9b:	cmp    edx,ebx
  40bf9d:	jg     40bf78 <__sprintf_chk@plt+0x9998>
  40bf9f:	mov    esi,ebx
  40bfa1:	mov    rdi,r13
  40bfa4:	call   40bec0 <__sprintf_chk@plt+0x98e0>
  40bfa9:	mov    eax,DWORD PTR [r12]
  40bfad:	sub    eax,ebx
  40bfaf:	inc    eax
  40bfb1:	mov    DWORD PTR [r12],eax
  40bfb5:	add    rsp,0x8
  40bfb9:	pop    rbx
  40bfba:	pop    rbp
  40bfbb:	pop    r12
  40bfbd:	pop    r13
  40bfbf:	ret    
  40bfc0:	push   rbp
  40bfc1:	push   rbx
  40bfc2:	mov    rbx,rdi
  40bfc5:	sub    rsp,0x18
  40bfc9:	mov    rax,QWORD PTR [rdi+0x20]
  40bfcd:	mov    rcx,QWORD PTR [rax+0x70]
  40bfd1:	cmp    QWORD PTR [rax+0x78],rcx
  40bfd5:	jae    40c000 <__sprintf_chk@plt+0x9a20>
  40bfd7:	mov    rbp,QWORD PTR [rbx+0x10]
  40bfdb:	mov    rdi,rbx
  40bfde:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40bfe3:	mov    QWORD PTR [rbp+0x0],rax
  40bfe7:	mov    DWORD PTR [rbp+0x8],0x4
  40bfee:	add    QWORD PTR [rbx+0x10],0x10
  40bff3:	add    rsp,0x18
  40bff7:	pop    rbx
  40bff8:	pop    rbp
  40bff9:	ret    
  40bffa:	nop    WORD PTR [rax+rax*1+0x0]
  40c000:	mov    QWORD PTR [rsp+0x8],rdx
  40c005:	mov    QWORD PTR [rsp],rsi
  40c009:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40c00e:	mov    rdx,QWORD PTR [rsp+0x8]
  40c013:	mov    rsi,QWORD PTR [rsp]
  40c017:	jmp    40bfd7 <__sprintf_chk@plt+0x99f7>
  40c019:	nop    DWORD PTR [rax+0x0]
  40c020:	push   rbp
  40c021:	mov    edx,esi
  40c023:	lea    rsi,[rdi+0x50]
  40c027:	push   rbx
  40c028:	mov    rbx,rdi
  40c02b:	sub    rsp,0x88
  40c032:	mov    rbp,rsp
  40c035:	mov    rdi,QWORD PTR [rdi+0x28]
  40c039:	lea    rcx,[rbp+0x74]
  40c03d:	mov    rax,QWORD PTR fs:0x28
  40c046:	mov    QWORD PTR [rsp+0x78],rax
  40c04b:	xor    eax,eax
  40c04d:	call   403b30 <__sprintf_chk@plt+0x1550>
  40c052:	test   eax,eax
  40c054:	je     40c070 <__sprintf_chk@plt+0x9a90>
  40c056:	mov    rdx,rbp
  40c059:	lea    rsi,[rip+0xb207]        # 417267 <__sprintf_chk@plt+0x14c87>
  40c060:	mov    rdi,rbx
  40c063:	call   409090 <__sprintf_chk@plt+0x6ab0>
  40c068:	mov    ecx,DWORD PTR [rsp+0x28]
  40c06c:	test   ecx,ecx
  40c06e:	jg     40c0a0 <__sprintf_chk@plt+0x9ac0>
  40c070:	xor    edx,edx
  40c072:	lea    rsi,[rip+0xb6e5]        # 41775e <__sprintf_chk@plt+0x1517e>
  40c079:	mov    rdi,rbx
  40c07c:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40c081:	mov    rax,QWORD PTR [rsp+0x78]
  40c086:	xor    rax,QWORD PTR fs:0x28
  40c08f:	jne    40c0b7 <__sprintf_chk@plt+0x9ad7>
  40c091:	add    rsp,0x88
  40c098:	pop    rbx
  40c099:	pop    rbp
  40c09a:	ret    
  40c09b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0a0:	lea    rdx,[rbp+0x38]
  40c0a4:	lea    rsi,[rip+0xb1bf]        # 41726a <__sprintf_chk@plt+0x14c8a>
  40c0ab:	mov    rdi,rbx
  40c0ae:	xor    eax,eax
  40c0b0:	call   40bd10 <__sprintf_chk@plt+0x9730>
  40c0b5:	jmp    40c081 <__sprintf_chk@plt+0x9aa1>
  40c0b7:	call   4023e0 <__stack_chk_fail@plt>
  40c0bc:	nop    DWORD PTR [rax+0x0]
  40c0c0:	push   rbp
  40c0c1:	mov    rbp,rsi
  40c0c4:	push   rbx
  40c0c5:	mov    rbx,rdi
  40c0c8:	sub    rsp,0xd8
  40c0cf:	mov    QWORD PTR [rsp+0x30],rdx
  40c0d4:	mov    QWORD PTR [rsp+0x38],rcx
  40c0d9:	mov    QWORD PTR [rsp+0x40],r8
  40c0de:	mov    QWORD PTR [rsp+0x48],r9
  40c0e3:	test   al,al
  40c0e5:	je     40c126 <__sprintf_chk@plt+0x9b46>
  40c0e7:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40c0ed:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40c0f3:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40c0f9:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40c102:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40c10b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40c114:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40c11d:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40c126:	mov    rax,QWORD PTR fs:0x28
  40c12f:	mov    QWORD PTR [rsp+0x18],rax
  40c134:	xor    eax,eax
  40c136:	lea    rax,[rsp+0xf0]
  40c13e:	mov    QWORD PTR [rsp+0x8],rax
  40c143:	mov    esi,0x1
  40c148:	lea    rax,[rsp+0x20]
  40c14d:	mov    rdi,rbx
  40c150:	mov    QWORD PTR [rsp+0x10],rax
  40c155:	mov    DWORD PTR [rsp],0x10
  40c15c:	mov    DWORD PTR [rsp+0x4],0x30
  40c164:	call   40c020 <__sprintf_chk@plt+0x9a40>
  40c169:	mov    rax,QWORD PTR [rbx+0x20]
  40c16d:	mov    rcx,QWORD PTR [rax+0x70]
  40c171:	cmp    QWORD PTR [rax+0x78],rcx
  40c175:	jae    40c19a <__sprintf_chk@plt+0x9bba>
  40c177:	mov    rdx,rsp
  40c17a:	mov    rsi,rbp
  40c17d:	mov    rdi,rbx
  40c180:	call   406d70 <__sprintf_chk@plt+0x4790>
  40c185:	mov    rdi,rbx
  40c188:	mov    esi,0x2
  40c18d:	call   40bec0 <__sprintf_chk@plt+0x98e0>
  40c192:	mov    rdi,rbx
  40c195:	call   4081a0 <__sprintf_chk@plt+0x5bc0>
  40c19a:	mov    rdi,rbx
  40c19d:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40c1a2:	jmp    40c177 <__sprintf_chk@plt+0x9b97>
  40c1a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c1af:	nop
  40c1b0:	sub    rsp,0x8
  40c1b4:	movzx  edx,BYTE PTR [rsi]
  40c1b7:	cmp    dl,0x25
  40c1ba:	je     40c1f8 <__sprintf_chk@plt+0x9c18>
  40c1bc:	lea    rax,[rsi+0x1]
  40c1c0:	cmp    dl,0x5b
  40c1c3:	jne    40c1ec <__sprintf_chk@plt+0x9c0c>
  40c1c5:	movzx  edx,BYTE PTR [rsi+0x1]
  40c1c9:	cmp    dl,0x5e
  40c1cc:	je     40c240 <__sprintf_chk@plt+0x9c60>
  40c1ce:	test   dl,dl
  40c1d0:	je     40c218 <__sprintf_chk@plt+0x9c38>
  40c1d2:	lea    rsi,[rax+0x1]
  40c1d6:	movzx  ecx,BYTE PTR [rax+0x1]
  40c1da:	cmp    dl,0x25
  40c1dd:	je     40c230 <__sprintf_chk@plt+0x9c50>
  40c1df:	mov    edx,ecx
  40c1e1:	mov    rax,rsi
  40c1e4:	cmp    dl,0x5d
  40c1e7:	jne    40c1ce <__sprintf_chk@plt+0x9bee>
  40c1e9:	inc    rax
  40c1ec:	add    rsp,0x8
  40c1f0:	ret    
  40c1f1:	nop    DWORD PTR [rax+0x0]
  40c1f8:	cmp    BYTE PTR [rsi+0x1],0x0
  40c1fc:	lea    rax,[rsi+0x2]
  40c200:	jne    40c1ec <__sprintf_chk@plt+0x9c0c>
  40c202:	mov    rdi,QWORD PTR [rdi]
  40c205:	lea    rsi,[rip+0xbf04]        # 418110 <__sprintf_chk@plt+0x15b30>
  40c20c:	xor    eax,eax
  40c20e:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c213:	nop    DWORD PTR [rax+rax*1+0x0]
  40c218:	mov    rdi,QWORD PTR [rdi]
  40c21b:	lea    rsi,[rip+0xbf16]        # 418138 <__sprintf_chk@plt+0x15b58>
  40c222:	xor    eax,eax
  40c224:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c229:	nop    DWORD PTR [rax+0x0]
  40c230:	test   cl,cl
  40c232:	je     40c218 <__sprintf_chk@plt+0x9c38>
  40c234:	movzx  edx,BYTE PTR [rax+0x2]
  40c238:	add    rax,0x2
  40c23c:	jmp    40c1e4 <__sprintf_chk@plt+0x9c04>
  40c23e:	xchg   ax,ax
  40c240:	lea    rax,[rsi+0x2]
  40c244:	movzx  edx,BYTE PTR [rsi+0x2]
  40c248:	jmp    40c1ce <__sprintf_chk@plt+0x9bee>
  40c24a:	nop    WORD PTR [rax+rax*1+0x0]
  40c250:	push   rbp
  40c251:	mov    rbp,rdx
  40c254:	push   rbx
  40c255:	mov    rbx,rdi
  40c258:	sub    rsp,0x8
  40c25c:	call   4082a0 <__sprintf_chk@plt+0x5cc0>
  40c261:	test   eax,eax
  40c263:	je     40c270 <__sprintf_chk@plt+0x9c90>
  40c265:	add    rsp,0x8
  40c269:	pop    rbx
  40c26a:	pop    rbp
  40c26b:	ret    
  40c26c:	nop    DWORD PTR [rax+0x0]
  40c270:	mov    rdx,rbp
  40c273:	lea    rsi,[rip+0xaff8]        # 417272 <__sprintf_chk@plt+0x14c92>
  40c27a:	mov    rdi,rbx
  40c27d:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c282:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c28d:	nop    DWORD PTR [rax]
  40c290:	mov    r11d,esi
  40c293:	mov    edx,esi
  40c295:	sub    rsp,0x8
  40c299:	mov    esi,0xffffd8ef
  40c29e:	mov    r10,rdi
  40c2a1:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40c2a6:	mov    rdi,r10
  40c2a9:	mov    esi,0xffffffff
  40c2ae:	call   403e40 <__sprintf_chk@plt+0x1860>
  40c2b3:	mov    rax,QWORD PTR [rax]
  40c2b6:	test   rax,rax
  40c2b9:	je     40c2c0 <__sprintf_chk@plt+0x9ce0>
  40c2bb:	add    rsp,0x8
  40c2bf:	ret    
  40c2c0:	dec    r11d
  40c2c3:	lea    rax,[rip+0x12876]        # 41eb40 <__sprintf_chk@plt+0x1c560>
  40c2ca:	movsxd r11,r11d
  40c2cd:	mov    rdx,QWORD PTR [rax+r11*8]
  40c2d1:	lea    rsi,[rip+0xafae]        # 417286 <__sprintf_chk@plt+0x14ca6>
  40c2d8:	mov    rdi,r10
  40c2db:	xor    eax,eax
  40c2dd:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c2e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c2ed:	nop    DWORD PTR [rax]
  40c2f0:	endbr64 
  40c2f4:	push   rbx
  40c2f5:	mov    esi,0x2
  40c2fa:	mov    rbx,rdi
  40c2fd:	call   40c290 <__sprintf_chk@plt+0x9cb0>
  40c302:	mov    rdi,rax
  40c305:	call   4024c0 <fflush@plt>
  40c30a:	test   eax,eax
  40c30c:	sete   sil
  40c310:	mov    rdi,rbx
  40c313:	mov    edx,0x0
  40c318:	movzx  esi,sil
  40c31c:	pop    rbx
  40c31d:	jmp    40be00 <__sprintf_chk@plt+0x9820>
  40c322:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c32d:	nop    DWORD PTR [rax]
  40c330:	push   r12
  40c332:	mov    r12,rdx
  40c335:	xor    edx,edx
  40c337:	push   rbp
  40c338:	mov    ebp,esi
  40c33a:	lea    rsi,[rdi+0x50]
  40c33e:	push   rbx
  40c33f:	mov    rbx,rdi
  40c342:	add    rsp,0xffffffffffffff80
  40c346:	mov    r9,rsp
  40c349:	mov    rdi,QWORD PTR [rdi+0x28]
  40c34d:	lea    rcx,[r9+0x74]
  40c351:	mov    rax,QWORD PTR fs:0x28
  40c35a:	mov    QWORD PTR [rsp+0x78],rax
  40c35f:	xor    eax,eax
  40c361:	call   403b30 <__sprintf_chk@plt+0x1550>
  40c366:	test   eax,eax
  40c368:	je     40c3b8 <__sprintf_chk@plt+0x9dd8>
  40c36a:	mov    rdx,r9
  40c36d:	lea    rsi,[rip+0xb5b3]        # 417927 <__sprintf_chk@plt+0x15347>
  40c374:	mov    rdi,rbx
  40c377:	call   409090 <__sprintf_chk@plt+0x6ab0>
  40c37c:	mov    rdi,QWORD PTR [rsp+0x10]
  40c381:	lea    rsi,[rip+0xaf31]        # 4172b9 <__sprintf_chk@plt+0x14cd9>
  40c388:	call   402470 <strcmp@plt>
  40c38d:	mov    rdx,QWORD PTR [rsp+0x8]
  40c392:	test   eax,eax
  40c394:	jne    40c39a <__sprintf_chk@plt+0x9dba>
  40c396:	dec    ebp
  40c398:	je     40c3da <__sprintf_chk@plt+0x9dfa>
  40c39a:	test   rdx,rdx
  40c39d:	je     40c3cc <__sprintf_chk@plt+0x9dec>
  40c39f:	mov    rcx,rdx
  40c3a2:	mov    r8,r12
  40c3a5:	mov    edx,ebp
  40c3a7:	lea    rsi,[rip+0xaf30]        # 4172de <__sprintf_chk@plt+0x14cfe>
  40c3ae:	mov    rdi,rbx
  40c3b1:	xor    eax,eax
  40c3b3:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c3b8:	mov    rcx,r12
  40c3bb:	mov    edx,ebp
  40c3bd:	lea    rsi,[rip+0xaedf]        # 4172a3 <__sprintf_chk@plt+0x14cc3>
  40c3c4:	mov    rdi,rbx
  40c3c7:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c3cc:	lea    rdx,[rip+0xaece]        # 4172a1 <__sprintf_chk@plt+0x14cc1>
  40c3d3:	mov    QWORD PTR [rsp+0x8],rdx
  40c3d8:	jmp    40c39f <__sprintf_chk@plt+0x9dbf>
  40c3da:	mov    rcx,r12
  40c3dd:	lea    rsi,[rip+0xaedc]        # 4172c0 <__sprintf_chk@plt+0x14ce0>
  40c3e4:	mov    rdi,rbx
  40c3e7:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40c3ec:	nop    DWORD PTR [rax+0x0]
  40c3f0:	push   rbp
  40c3f1:	mov    r8,rdx
  40c3f4:	mov    ebp,esi
  40c3f6:	push   rbx
  40c3f7:	mov    rbx,rdi
  40c3fa:	sub    rsp,0x8
  40c3fe:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40c403:	lea    rdx,[rip+0xbc06]        # 418010 <__sprintf_chk@plt+0x15a30>
  40c40a:	cmp    rax,rdx
  40c40d:	je     40c44b <__sprintf_chk@plt+0x9e6b>
  40c40f:	movsxd rax,DWORD PTR [rax+0x8]
  40c413:	lea    rcx,[rip+0xaee2]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  40c41a:	cmp    eax,0xffffffff
  40c41d:	je     40c42a <__sprintf_chk@plt+0x9e4a>
  40c41f:	lea    rdx,[rip+0x1297a]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40c426:	mov    rcx,QWORD PTR [rdx+rax*8]
  40c42a:	mov    rdx,r8
  40c42d:	lea    rsi,[rip+0xaed1]        # 417305 <__sprintf_chk@plt+0x14d25>
  40c434:	mov    rdi,rbx
  40c437:	xor    eax,eax
  40c439:	call   40bd10 <__sprintf_chk@plt+0x9730>
  40c43e:	mov    rdx,rax
  40c441:	mov    esi,ebp
  40c443:	mov    rdi,rbx
  40c446:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40c44b:	lea    rcx,[rip+0xaeaa]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  40c452:	jmp    40c42a <__sprintf_chk@plt+0x9e4a>
  40c454:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c45f:	nop
  40c460:	push   r12
  40c462:	push   rbp
  40c463:	mov    ebp,esi
  40c465:	push   rbx
  40c466:	mov    rbx,rdi
  40c469:	call   403ef0 <__sprintf_chk@plt+0x1910>
  40c46e:	vaddsd xmm0,xmm0,QWORD PTR [rip+0xbfea]        # 418460 <__sprintf_chk@plt+0x15e80>
  40c476:	vucomisd xmm0,QWORD PTR [rip+0xbfda]        # 418458 <__sprintf_chk@plt+0x15e78>
  40c47e:	vmovq  r12,xmm0
  40c483:	jnp    40c490 <__sprintf_chk@plt+0x9eb0>
  40c485:	pop    rbx
  40c486:	pop    rbp
  40c487:	mov    eax,r12d
  40c48a:	pop    r12
  40c48c:	ret    
  40c48d:	nop    DWORD PTR [rax]
  40c490:	jne    40c485 <__sprintf_chk@plt+0x9ea5>
  40c492:	mov    esi,ebp
  40c494:	mov    rdi,rbx
  40c497:	call   403f50 <__sprintf_chk@plt+0x1970>
  40c49c:	test   eax,eax
  40c49e:	jne    40c485 <__sprintf_chk@plt+0x9ea5>
  40c4a0:	lea    rdx,[rip+0xabca]        # 417071 <__sprintf_chk@plt+0x14a91>
  40c4a7:	mov    esi,ebp
  40c4a9:	mov    rdi,rbx
  40c4ac:	call   40c3f0 <__sprintf_chk@plt+0x9e10>
  40c4b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c4bc:	nop    DWORD PTR [rax+0x0]
  40c4c0:	endbr64 
  40c4c4:	push   rbx
  40c4c5:	mov    esi,0x1
  40c4ca:	mov    rbx,rdi
  40c4cd:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c4d2:	vxorpd xmm0,xmm0,xmm0
  40c4d6:	mov    rdx,QWORD PTR [rbx+0x10]
  40c4da:	bswap  eax
  40c4dc:	vcvtsi2sd xmm0,xmm0,eax
  40c4e0:	mov    DWORD PTR [rdx+0x8],0x3
  40c4e7:	add    rdx,0x10
  40c4eb:	mov    eax,0x1
  40c4f0:	vmovsd QWORD PTR [rdx-0x10],xmm0
  40c4f5:	mov    QWORD PTR [rbx+0x10],rdx
  40c4f9:	pop    rbx
  40c4fa:	ret    
  40c4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c500:	endbr64 
  40c504:	push   rbp
  40c505:	mov    esi,0x1
  40c50a:	mov    rbp,rdi
  40c50d:	push   rbx
  40c50e:	sub    rsp,0x8
  40c512:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c517:	mov    rdi,rbp
  40c51a:	mov    esi,0x2
  40c51f:	mov    ebx,eax
  40c521:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c526:	mov    ecx,eax
  40c528:	ror    ebx,cl
  40c52a:	vxorpd xmm0,xmm0,xmm0
  40c52e:	vcvtsi2sd xmm0,xmm0,ebx
  40c532:	mov    rdx,QWORD PTR [rbp+0x10]
  40c536:	mov    eax,0x1
  40c53b:	mov    DWORD PTR [rdx+0x8],0x3
  40c542:	vmovsd QWORD PTR [rdx],xmm0
  40c546:	add    rdx,0x10
  40c54a:	mov    QWORD PTR [rbp+0x10],rdx
  40c54e:	add    rsp,0x8
  40c552:	pop    rbx
  40c553:	pop    rbp
  40c554:	ret    
  40c555:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c560:	endbr64 
  40c564:	push   rbp
  40c565:	mov    esi,0x1
  40c56a:	mov    rbp,rdi
  40c56d:	push   rbx
  40c56e:	sub    rsp,0x8
  40c572:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c577:	mov    rdi,rbp
  40c57a:	mov    esi,0x2
  40c57f:	mov    ebx,eax
  40c581:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c586:	mov    ecx,eax
  40c588:	rol    ebx,cl
  40c58a:	vxorpd xmm0,xmm0,xmm0
  40c58e:	vcvtsi2sd xmm0,xmm0,ebx
  40c592:	mov    rdx,QWORD PTR [rbp+0x10]
  40c596:	mov    eax,0x1
  40c59b:	mov    DWORD PTR [rdx+0x8],0x3
  40c5a2:	vmovsd QWORD PTR [rdx],xmm0
  40c5a6:	add    rdx,0x10
  40c5aa:	mov    QWORD PTR [rbp+0x10],rdx
  40c5ae:	add    rsp,0x8
  40c5b2:	pop    rbx
  40c5b3:	pop    rbp
  40c5b4:	ret    
  40c5b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c5c0:	endbr64 
  40c5c4:	push   rbp
  40c5c5:	mov    esi,0x1
  40c5ca:	mov    rbp,rdi
  40c5cd:	push   rbx
  40c5ce:	sub    rsp,0x8
  40c5d2:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c5d7:	mov    rdi,rbp
  40c5da:	mov    esi,0x2
  40c5df:	mov    ebx,eax
  40c5e1:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c5e6:	vxorpd xmm0,xmm0,xmm0
  40c5ea:	sarx   ebx,ebx,eax
  40c5ef:	vcvtsi2sd xmm0,xmm0,ebx
  40c5f3:	mov    rdx,QWORD PTR [rbp+0x10]
  40c5f7:	mov    eax,0x1
  40c5fc:	mov    DWORD PTR [rdx+0x8],0x3
  40c603:	vmovsd QWORD PTR [rdx],xmm0
  40c607:	add    rdx,0x10
  40c60b:	mov    QWORD PTR [rbp+0x10],rdx
  40c60f:	add    rsp,0x8
  40c613:	pop    rbx
  40c614:	pop    rbp
  40c615:	ret    
  40c616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c620:	endbr64 
  40c624:	push   rbp
  40c625:	mov    esi,0x1
  40c62a:	mov    rbp,rdi
  40c62d:	push   rbx
  40c62e:	sub    rsp,0x8
  40c632:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c637:	mov    rdi,rbp
  40c63a:	mov    esi,0x2
  40c63f:	mov    ebx,eax
  40c641:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c646:	vxorpd xmm0,xmm0,xmm0
  40c64a:	shrx   ebx,ebx,eax
  40c64f:	vcvtsi2sd xmm0,xmm0,ebx
  40c653:	mov    rdx,QWORD PTR [rbp+0x10]
  40c657:	mov    eax,0x1
  40c65c:	mov    DWORD PTR [rdx+0x8],0x3
  40c663:	vmovsd QWORD PTR [rdx],xmm0
  40c667:	add    rdx,0x10
  40c66b:	mov    QWORD PTR [rbp+0x10],rdx
  40c66f:	add    rsp,0x8
  40c673:	pop    rbx
  40c674:	pop    rbp
  40c675:	ret    
  40c676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c680:	endbr64 
  40c684:	push   rbp
  40c685:	mov    esi,0x1
  40c68a:	mov    rbp,rdi
  40c68d:	push   rbx
  40c68e:	sub    rsp,0x8
  40c692:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c697:	mov    rdi,rbp
  40c69a:	mov    esi,0x2
  40c69f:	mov    ebx,eax
  40c6a1:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c6a6:	vxorpd xmm0,xmm0,xmm0
  40c6aa:	shlx   ebx,ebx,eax
  40c6af:	vcvtsi2sd xmm0,xmm0,ebx
  40c6b3:	mov    rdx,QWORD PTR [rbp+0x10]
  40c6b7:	mov    eax,0x1
  40c6bc:	mov    DWORD PTR [rdx+0x8],0x3
  40c6c3:	vmovsd QWORD PTR [rdx],xmm0
  40c6c7:	add    rdx,0x10
  40c6cb:	mov    QWORD PTR [rbp+0x10],rdx
  40c6cf:	add    rsp,0x8
  40c6d3:	pop    rbx
  40c6d4:	pop    rbp
  40c6d5:	ret    
  40c6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c6e0:	endbr64 
  40c6e4:	push   r12
  40c6e6:	mov    esi,0x1
  40c6eb:	mov    r12,rdi
  40c6ee:	push   rbp
  40c6ef:	push   rbx
  40c6f0:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c6f5:	mov    ebp,eax
  40c6f7:	mov    rax,QWORD PTR [r12+0x10]
  40c6fc:	mov    rdx,rax
  40c6ff:	sub    rdx,QWORD PTR [r12+0x18]
  40c704:	sar    rdx,0x4
  40c708:	cmp    edx,0x1
  40c70b:	jle    40c728 <__sprintf_chk@plt+0xa148>
  40c70d:	mov    ebx,edx
  40c70f:	nop
  40c710:	mov    esi,ebx
  40c712:	mov    rdi,r12
  40c715:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c71a:	dec    ebx
  40c71c:	xor    ebp,eax
  40c71e:	cmp    ebx,0x1
  40c721:	jne    40c710 <__sprintf_chk@plt+0xa130>
  40c723:	mov    rax,QWORD PTR [r12+0x10]
  40c728:	vxorpd xmm0,xmm0,xmm0
  40c72c:	vcvtsi2sd xmm0,xmm0,ebp
  40c730:	mov    DWORD PTR [rax+0x8],0x3
  40c737:	add    rax,0x10
  40c73b:	vmovsd QWORD PTR [rax-0x10],xmm0
  40c740:	pop    rbx
  40c741:	pop    rbp
  40c742:	mov    QWORD PTR [r12+0x10],rax
  40c747:	mov    eax,0x1
  40c74c:	pop    r12
  40c74e:	ret    
  40c74f:	nop
  40c750:	endbr64 
  40c754:	push   r12
  40c756:	mov    esi,0x1
  40c75b:	mov    r12,rdi
  40c75e:	push   rbp
  40c75f:	push   rbx
  40c760:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c765:	mov    ebp,eax
  40c767:	mov    rax,QWORD PTR [r12+0x10]
  40c76c:	mov    rdx,rax
  40c76f:	sub    rdx,QWORD PTR [r12+0x18]
  40c774:	sar    rdx,0x4
  40c778:	cmp    edx,0x1
  40c77b:	jle    40c798 <__sprintf_chk@plt+0xa1b8>
  40c77d:	mov    ebx,edx
  40c77f:	nop
  40c780:	mov    esi,ebx
  40c782:	mov    rdi,r12
  40c785:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c78a:	dec    ebx
  40c78c:	or     ebp,eax
  40c78e:	cmp    ebx,0x1
  40c791:	jne    40c780 <__sprintf_chk@plt+0xa1a0>
  40c793:	mov    rax,QWORD PTR [r12+0x10]
  40c798:	vxorpd xmm0,xmm0,xmm0
  40c79c:	vcvtsi2sd xmm0,xmm0,ebp
  40c7a0:	mov    DWORD PTR [rax+0x8],0x3
  40c7a7:	add    rax,0x10
  40c7ab:	vmovsd QWORD PTR [rax-0x10],xmm0
  40c7b0:	pop    rbx
  40c7b1:	pop    rbp
  40c7b2:	mov    QWORD PTR [r12+0x10],rax
  40c7b7:	mov    eax,0x1
  40c7bc:	pop    r12
  40c7be:	ret    
  40c7bf:	nop
  40c7c0:	endbr64 
  40c7c4:	push   r12
  40c7c6:	mov    esi,0x1
  40c7cb:	mov    r12,rdi
  40c7ce:	push   rbp
  40c7cf:	push   rbx
  40c7d0:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c7d5:	mov    ebp,eax
  40c7d7:	mov    rax,QWORD PTR [r12+0x10]
  40c7dc:	mov    rdx,rax
  40c7df:	sub    rdx,QWORD PTR [r12+0x18]
  40c7e4:	sar    rdx,0x4
  40c7e8:	cmp    edx,0x1
  40c7eb:	jle    40c808 <__sprintf_chk@plt+0xa228>
  40c7ed:	mov    ebx,edx
  40c7ef:	nop
  40c7f0:	mov    esi,ebx
  40c7f2:	mov    rdi,r12
  40c7f5:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c7fa:	dec    ebx
  40c7fc:	and    ebp,eax
  40c7fe:	cmp    ebx,0x1
  40c801:	jne    40c7f0 <__sprintf_chk@plt+0xa210>
  40c803:	mov    rax,QWORD PTR [r12+0x10]
  40c808:	vxorpd xmm0,xmm0,xmm0
  40c80c:	vcvtsi2sd xmm0,xmm0,ebp
  40c810:	mov    DWORD PTR [rax+0x8],0x3
  40c817:	add    rax,0x10
  40c81b:	vmovsd QWORD PTR [rax-0x10],xmm0
  40c820:	pop    rbx
  40c821:	pop    rbp
  40c822:	mov    QWORD PTR [r12+0x10],rax
  40c827:	mov    eax,0x1
  40c82c:	pop    r12
  40c82e:	ret    
  40c82f:	nop
  40c830:	endbr64 
  40c834:	push   rbx
  40c835:	mov    esi,0x1
  40c83a:	mov    rbx,rdi
  40c83d:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c842:	not    eax
  40c844:	vxorpd xmm0,xmm0,xmm0
  40c848:	mov    rdx,QWORD PTR [rbx+0x10]
  40c84c:	vcvtsi2sd xmm0,xmm0,eax
  40c850:	mov    DWORD PTR [rdx+0x8],0x3
  40c857:	add    rdx,0x10
  40c85b:	mov    eax,0x1
  40c860:	vmovsd QWORD PTR [rdx-0x10],xmm0
  40c865:	mov    QWORD PTR [rbx+0x10],rdx
  40c869:	pop    rbx
  40c86a:	ret    
  40c86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	endbr64 
  40c874:	push   rbx
  40c875:	mov    esi,0x1
  40c87a:	mov    rbx,rdi
  40c87d:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40c882:	vxorpd xmm0,xmm0,xmm0
  40c886:	mov    rdx,QWORD PTR [rbx+0x10]
  40c88a:	vcvtsi2sd xmm0,xmm0,eax
  40c88e:	mov    DWORD PTR [rdx+0x8],0x3
  40c895:	add    rdx,0x10
  40c899:	mov    eax,0x1
  40c89e:	vmovsd QWORD PTR [rdx-0x10],xmm0
  40c8a3:	mov    QWORD PTR [rbx+0x10],rdx
  40c8a7:	pop    rbx
  40c8a8:	ret    
  40c8a9:	nop    DWORD PTR [rax+0x0]
  40c8b0:	push   rbp
  40c8b1:	mov    ebp,esi
  40c8b3:	push   rbx
  40c8b4:	mov    rbx,rdi
  40c8b7:	sub    rsp,0x8
  40c8bb:	call   403f50 <__sprintf_chk@plt+0x1970>
  40c8c0:	test   eax,eax
  40c8c2:	je     40c8d0 <__sprintf_chk@plt+0xa2f0>
  40c8c4:	add    rsp,0x8
  40c8c8:	pop    rbx
  40c8c9:	pop    rbp
  40c8ca:	ret    
  40c8cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8d0:	lea    rdx,[rip+0xa79a]        # 417071 <__sprintf_chk@plt+0x14a91>
  40c8d7:	mov    esi,ebp
  40c8d9:	mov    rdi,rbx
  40c8dc:	call   40c3f0 <__sprintf_chk@plt+0x9e10>
  40c8e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c8ec:	nop    DWORD PTR [rax+0x0]
  40c8f0:	push   rbp
  40c8f1:	mov    ebp,esi
  40c8f3:	push   rbx
  40c8f4:	mov    rbx,rdi
  40c8f7:	sub    rsp,0x18
  40c8fb:	call   403ef0 <__sprintf_chk@plt+0x1910>
  40c900:	vucomisd xmm0,QWORD PTR [rip+0xbb50]        # 418458 <__sprintf_chk@plt+0x15e78>
  40c908:	jnp    40c918 <__sprintf_chk@plt+0xa338>
  40c90a:	add    rsp,0x18
  40c90e:	pop    rbx
  40c90f:	pop    rbp
  40c910:	ret    
  40c911:	nop    DWORD PTR [rax+0x0]
  40c918:	jne    40c90a <__sprintf_chk@plt+0xa32a>
  40c91a:	mov    esi,ebp
  40c91c:	mov    rdi,rbx
  40c91f:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40c925:	call   40c8b0 <__sprintf_chk@plt+0xa2d0>
  40c92a:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40c930:	add    rsp,0x18
  40c934:	pop    rbx
  40c935:	pop    rbp
  40c936:	ret    
  40c937:	nop    WORD PTR [rax+rax*1+0x0]
  40c940:	push   rbp
  40c941:	mov    ebp,esi
  40c943:	push   rbx
  40c944:	mov    rbx,rdi
  40c947:	sub    rsp,0x18
  40c94b:	call   403fb0 <__sprintf_chk@plt+0x19d0>
  40c950:	test   rax,rax
  40c953:	je     40c960 <__sprintf_chk@plt+0xa380>
  40c955:	add    rsp,0x18
  40c959:	pop    rbx
  40c95a:	pop    rbp
  40c95b:	ret    
  40c95c:	nop    DWORD PTR [rax+0x0]
  40c960:	mov    esi,ebp
  40c962:	mov    rdi,rbx
  40c965:	mov    QWORD PTR [rsp+0x8],rax
  40c96a:	call   40c8b0 <__sprintf_chk@plt+0xa2d0>
  40c96f:	mov    rax,QWORD PTR [rsp+0x8]
  40c974:	add    rsp,0x18
  40c978:	pop    rbx
  40c979:	pop    rbp
  40c97a:	ret    
  40c97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c980:	sub    rsp,0x8
  40c984:	mov    r8,rdi
  40c987:	mov    r9d,esi
  40c98a:	mov    r10,rdx
  40c98d:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40c992:	lea    rcx,[rip+0xb677]        # 418010 <__sprintf_chk@plt+0x15a30>
  40c999:	cmp    rax,rcx
  40c99c:	je     40c9a5 <__sprintf_chk@plt+0xa3c5>
  40c99e:	mov    eax,DWORD PTR [rax+0x8]
  40c9a1:	test   eax,eax
  40c9a3:	jg     40c9b0 <__sprintf_chk@plt+0xa3d0>
  40c9a5:	mov    rax,r10
  40c9a8:	add    rsp,0x8
  40c9ac:	ret    
  40c9ad:	nop    DWORD PTR [rax]
  40c9b0:	mov    esi,r9d
  40c9b3:	mov    rdi,r8
  40c9b6:	add    rsp,0x8
  40c9ba:	jmp    40c940 <__sprintf_chk@plt+0xa360>
  40c9bc:	nop    DWORD PTR [rax+0x0]
  40c9c0:	endbr64 
  40c9c4:	push   rax
  40c9c5:	pop    rax
  40c9c6:	xor    edx,edx
  40c9c8:	mov    esi,0x1
  40c9cd:	sub    rsp,0x8
  40c9d1:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  40c9d6:	mov    edi,eax
  40c9d8:	call   402570 <exit@plt>
  40c9dd:	nop    DWORD PTR [rax]
  40c9e0:	sub    rsp,0x8
  40c9e4:	movsxd r8,edx
  40c9e7:	mov    r9,rdi
  40c9ea:	mov    r10d,esi
  40c9ed:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40c9f2:	lea    rdx,[rip+0xb617]        # 418010 <__sprintf_chk@plt+0x15a30>
  40c9f9:	cmp    rax,rdx
  40c9fc:	je     40ca04 <__sprintf_chk@plt+0xa424>
  40c9fe:	cmp    r8d,DWORD PTR [rax+0x8]
  40ca02:	je     40ca20 <__sprintf_chk@plt+0xa440>
  40ca04:	lea    rax,[rip+0x12395]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40ca0b:	mov    rdx,QWORD PTR [rax+r8*8]
  40ca0f:	mov    esi,r10d
  40ca12:	mov    rdi,r9
  40ca15:	call   40c3f0 <__sprintf_chk@plt+0x9e10>
  40ca1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca20:	add    rsp,0x8
  40ca24:	ret    
  40ca25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ca30:	endbr64 
  40ca34:	push   r13
  40ca36:	mov    edx,0x5
  40ca3b:	mov    esi,0x1
  40ca40:	push   r12
  40ca42:	push   rbp
  40ca43:	push   rbx
  40ca44:	mov    rbx,rdi
  40ca47:	sub    rsp,0x8
  40ca4b:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40ca50:	mov    esi,0x1
  40ca55:	mov    rdi,rbx
  40ca58:	call   407900 <__sprintf_chk@plt+0x5320>
  40ca5d:	movsxd rdx,eax
  40ca60:	mov    esi,0x2
  40ca65:	mov    rdi,rbx
  40ca68:	mov    r13,rax
  40ca6b:	mov    r12d,eax
  40ca6e:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  40ca73:	test   eax,eax
  40ca75:	jle    40cb00 <__sprintf_chk@plt+0xa520>
  40ca7b:	mov    r11,rax
  40ca7e:	cmp    r13d,eax
  40ca81:	jl     40cb00 <__sprintf_chk@plt+0xa520>
  40ca83:	mov    edx,eax
  40ca85:	mov    esi,0x1
  40ca8a:	mov    rdi,rbx
  40ca8d:	mov    r10d,eax
  40ca90:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40ca95:	cmp    r13d,r11d
  40ca98:	jle    40cacb <__sprintf_chk@plt+0xa4eb>
  40ca9a:	nop    WORD PTR [rax+rax*1+0x0]
  40caa0:	lea    ebp,[r10+0x1]
  40caa4:	mov    edx,ebp
  40caa6:	mov    esi,0x1
  40caab:	mov    rdi,rbx
  40caae:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40cab3:	mov    edx,r10d
  40cab6:	mov    esi,0x1
  40cabb:	mov    rdi,rbx
  40cabe:	call   409010 <__sprintf_chk@plt+0x6a30>
  40cac3:	mov    r10d,ebp
  40cac6:	cmp    ebp,r12d
  40cac9:	jne    40caa0 <__sprintf_chk@plt+0xa4c0>
  40cacb:	mov    rax,QWORD PTR [rbx+0x10]
  40cacf:	mov    edx,r13d
  40cad2:	mov    DWORD PTR [rax+0x8],0x0
  40cad9:	add    rax,0x10
  40cadd:	mov    QWORD PTR [rbx+0x10],rax
  40cae1:	mov    rdi,rbx
  40cae4:	mov    esi,0x1
  40cae9:	call   409010 <__sprintf_chk@plt+0x6a30>
  40caee:	add    rsp,0x8
  40caf2:	pop    rbx
  40caf3:	pop    rbp
  40caf4:	pop    r12
  40caf6:	mov    eax,0x1
  40cafb:	pop    r13
  40cafd:	ret    
  40cafe:	xchg   ax,ax
  40cb00:	add    rsp,0x8
  40cb04:	pop    rbx
  40cb05:	pop    rbp
  40cb06:	pop    r12
  40cb08:	xor    eax,eax
  40cb0a:	pop    r13
  40cb0c:	ret    
  40cb0d:	nop    DWORD PTR [rax]
  40cb10:	endbr64 
  40cb14:	push   r12
  40cb16:	mov    edx,0x5
  40cb1b:	mov    esi,0x1
  40cb20:	push   rbp
  40cb21:	mov    rbp,rdi
  40cb24:	push   rbx
  40cb25:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40cb2a:	mov    rbx,QWORD PTR [rbp+0x18]
  40cb2e:	mov    rax,QWORD PTR [rbp+0x10]
  40cb32:	lea    rdx,[rbx+0x20]
  40cb36:	cmp    rax,rdx
  40cb39:	jae    40cb50 <__sprintf_chk@plt+0xa570>
  40cb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb40:	add    rax,0x10
  40cb44:	mov    DWORD PTR [rax-0x8],0x0
  40cb4b:	cmp    rax,rdx
  40cb4e:	jb     40cb40 <__sprintf_chk@plt+0xa560>
  40cb50:	mov    QWORD PTR [rbp+0x10],rdx
  40cb54:	mov    r9d,DWORD PTR [rbx+0x18]
  40cb58:	lea    r8,[rbx+0x10]
  40cb5c:	mov    r12,QWORD PTR [rbx]
  40cb5f:	test   r9d,r9d
  40cb62:	je     40cd4d <__sprintf_chk@plt+0xa76d>
  40cb68:	vmovsd xmm1,QWORD PTR [rbx+0x10]
  40cb6d:	cmp    r9d,0x3
  40cb71:	jne    40cb9f <__sprintf_chk@plt+0xa5bf>
  40cb73:	vcvttsd2si eax,xmm1
  40cb77:	vxorpd xmm0,xmm0,xmm0
  40cb7b:	mov    ecx,0x0
  40cb80:	vcvtsi2sd xmm0,xmm0,eax
  40cb84:	vucomisd xmm0,xmm1
  40cb88:	setnp  dl
  40cb8b:	cmovne edx,ecx
  40cb8e:	test   dl,dl
  40cb90:	je     40cb9f <__sprintf_chk@plt+0xa5bf>
  40cb92:	test   eax,eax
  40cb94:	jle    40cb9f <__sprintf_chk@plt+0xa5bf>
  40cb96:	mov    esi,DWORD PTR [r12+0x38]
  40cb9b:	cmp    eax,esi
  40cb9d:	jle    40cc03 <__sprintf_chk@plt+0xa623>
  40cb9f:	mov    rsi,r8
  40cba2:	mov    rdi,r12
  40cba5:	call   403650 <__sprintf_chk@plt+0x1070>
  40cbaa:	mov    rcx,rax
  40cbad:	jmp    40cbbd <__sprintf_chk@plt+0xa5dd>
  40cbaf:	nop
  40cbb0:	mov    rcx,QWORD PTR [rcx+0x20]
  40cbb4:	test   rcx,rcx
  40cbb7:	je     40cd08 <__sprintf_chk@plt+0xa728>
  40cbbd:	lea    rdi,[rcx+0x10]
  40cbc1:	mov    rsi,r8
  40cbc4:	call   402b40 <__sprintf_chk@plt+0x560>
  40cbc9:	test   eax,eax
  40cbcb:	jne    40cbe8 <__sprintf_chk@plt+0xa608>
  40cbcd:	cmp    DWORD PTR [rcx+0x18],0xb
  40cbd1:	jne    40cbb0 <__sprintf_chk@plt+0xa5d0>
  40cbd3:	cmp    r9d,0x3
  40cbd7:	jle    40cbb0 <__sprintf_chk@plt+0xa5d0>
  40cbd9:	vmovq  rax,xmm1
  40cbde:	cmp    QWORD PTR [rcx+0x10],rax
  40cbe2:	jne    40cbb0 <__sprintf_chk@plt+0xa5d0>
  40cbe4:	nop    DWORD PTR [rax+0x0]
  40cbe8:	sub    rcx,QWORD PTR [r12+0x20]
  40cbed:	mov    rax,rcx
  40cbf0:	sar    rax,0x3
  40cbf4:	imul   eax,eax,0xcccccccd
  40cbfa:	mov    esi,DWORD PTR [r12+0x38]
  40cbff:	lea    eax,[rsi+rax*1+0x1]
  40cc03:	cmp    esi,eax
  40cc05:	jle    40cc4a <__sprintf_chk@plt+0xa66a>
  40cc07:	mov    rdi,QWORD PTR [r12+0x18]
  40cc0c:	movsxd rdx,eax
  40cc0f:	shl    rdx,0x4
  40cc13:	lea    rcx,[rdi+rdx*1]
  40cc17:	mov    r11d,DWORD PTR [rcx+0x8]
  40cc1b:	lea    rdx,[rdi+rdx*1+0x10]
  40cc20:	test   r11d,r11d
  40cc23:	je     40cc44 <__sprintf_chk@plt+0xa664>
  40cc25:	jmp    40ccd0 <__sprintf_chk@plt+0xa6f0>
  40cc2a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc30:	mov    rcx,rdx
  40cc33:	add    rdx,0x10
  40cc37:	mov    r10d,DWORD PTR [rdx-0x8]
  40cc3b:	test   r10d,r10d
  40cc3e:	jne    40ccd0 <__sprintf_chk@plt+0xa6f0>
  40cc44:	inc    eax
  40cc46:	cmp    eax,esi
  40cc48:	jne    40cc30 <__sprintf_chk@plt+0xa650>
  40cc4a:	movzx  edx,BYTE PTR [r12+0xb]
  40cc50:	sub    eax,esi
  40cc52:	mov    esi,0x1
  40cc57:	shlx   rsi,rsi,rdx
  40cc5c:	cmp    eax,esi
  40cc5e:	jge    40ccb7 <__sprintf_chk@plt+0xa6d7>
  40cc60:	mov    r8,QWORD PTR [r12+0x20]
  40cc65:	movsxd rdi,eax
  40cc68:	lea    rdx,[rdi+rdi*4]
  40cc6c:	lea    rcx,[r8+rdx*8]
  40cc70:	mov    r9d,DWORD PTR [rcx+0x8]
  40cc74:	test   r9d,r9d
  40cc77:	jne    40cd30 <__sprintf_chk@plt+0xa750>
  40cc7d:	dec    esi
  40cc7f:	sub    esi,eax
  40cc81:	lea    rax,[rsi+rdi*1]
  40cc85:	lea    rdx,[rdi+rdi*4+0x5]
  40cc8a:	lea    rax,[rax+rax*4]
  40cc8e:	lea    rdx,[r8+rdx*8]
  40cc92:	lea    rax,[r8+rax*8+0x28]
  40cc97:	jmp    40ccb2 <__sprintf_chk@plt+0xa6d2>
  40cc99:	nop    DWORD PTR [rax+0x0]
  40cca0:	mov    rcx,rdx
  40cca3:	add    rdx,0x28
  40cca7:	mov    esi,DWORD PTR [rdx-0x20]
  40ccaa:	test   esi,esi
  40ccac:	jne    40cd30 <__sprintf_chk@plt+0xa750>
  40ccb2:	cmp    rdx,rax
  40ccb5:	jne    40cca0 <__sprintf_chk@plt+0xa6c0>
  40ccb7:	mov    rax,QWORD PTR [rbp+0x10]
  40ccbb:	mov    DWORD PTR [rax-0x8],0x0
  40ccc2:	mov    QWORD PTR [rbp+0x10],rax
  40ccc6:	mov    eax,0x1
  40cccb:	pop    rbx
  40cccc:	pop    rbp
  40cccd:	pop    r12
  40cccf:	ret    
  40ccd0:	inc    eax
  40ccd2:	vxorpd xmm0,xmm0,xmm0
  40ccd6:	vcvtsi2sd xmm0,xmm0,eax
  40ccda:	mov    DWORD PTR [rbx+0x18],0x3
  40cce1:	vmovsd QWORD PTR [rbx+0x10],xmm0
  40cce6:	mov    rax,QWORD PTR [rcx]
  40cce9:	mov    QWORD PTR [rbx+0x20],rax
  40cced:	mov    eax,DWORD PTR [rcx+0x8]
  40ccf0:	mov    DWORD PTR [rbx+0x28],eax
  40ccf3:	pop    rbx
  40ccf4:	add    QWORD PTR [rbp+0x10],0x10
  40ccf9:	pop    rbp
  40ccfa:	mov    eax,0x2
  40ccff:	pop    r12
  40cd01:	ret    
  40cd02:	nop    WORD PTR [rax+rax*1+0x0]
  40cd08:	lea    rsi,[rip+0xa60a]        # 417319 <__sprintf_chk@plt+0x14d39>
  40cd0f:	xor    eax,eax
  40cd11:	mov    rdi,rbp
  40cd14:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40cd19:	mov    esi,DWORD PTR [r12+0x38]
  40cd1e:	mov    eax,0x1
  40cd23:	jmp    40cc03 <__sprintf_chk@plt+0xa623>
  40cd28:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd30:	mov    rax,QWORD PTR [rcx+0x10]
  40cd34:	mov    QWORD PTR [rbx+0x10],rax
  40cd38:	mov    eax,DWORD PTR [rcx+0x18]
  40cd3b:	mov    DWORD PTR [rbx+0x18],eax
  40cd3e:	mov    rax,QWORD PTR [rcx]
  40cd41:	mov    QWORD PTR [rbx+0x20],rax
  40cd45:	mov    eax,DWORD PTR [rcx+0x8]
  40cd48:	mov    DWORD PTR [rbx+0x28],eax
  40cd4b:	jmp    40ccf3 <__sprintf_chk@plt+0xa713>
  40cd4d:	mov    esi,DWORD PTR [r12+0x38]
  40cd52:	xor    eax,eax
  40cd54:	jmp    40cc03 <__sprintf_chk@plt+0xa623>
  40cd59:	nop    DWORD PTR [rax+0x0]
  40cd60:	endbr64 
  40cd64:	push   rbx
  40cd65:	mov    edx,0x5
  40cd6a:	mov    rbx,rdi
  40cd6d:	mov    esi,0x1
  40cd72:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40cd77:	mov    esi,0xffffd8ed
  40cd7c:	mov    rdi,rbx
  40cd7f:	call   403c60 <__sprintf_chk@plt+0x1680>
  40cd84:	mov    rcx,QWORD PTR [rax]
  40cd87:	mov    rdx,QWORD PTR [rbx+0x10]
  40cd8b:	mov    eax,DWORD PTR [rax+0x8]
  40cd8e:	mov    QWORD PTR [rdx],rcx
  40cd91:	mov    DWORD PTR [rdx+0x8],eax
  40cd94:	mov    rax,QWORD PTR [rbx+0x18]
  40cd98:	lea    rcx,[rdx+0x10]
  40cd9c:	cmp    rax,rcx
  40cd9f:	jae    40cdc8 <__sprintf_chk@plt+0xa7e8>
  40cda1:	mov    ecx,DWORD PTR [rax+0x8]
  40cda4:	mov    rax,QWORD PTR [rax]
  40cda7:	mov    DWORD PTR [rdx+0x18],ecx
  40cdaa:	mov    QWORD PTR [rdx+0x10],rax
  40cdae:	mov    DWORD PTR [rdx+0x28],0x0
  40cdb5:	add    rdx,0x30
  40cdb9:	mov    QWORD PTR [rbx+0x10],rdx
  40cdbd:	mov    eax,0x3
  40cdc2:	pop    rbx
  40cdc3:	ret    
  40cdc4:	nop    DWORD PTR [rax+0x0]
  40cdc8:	xor    ecx,ecx
  40cdca:	lea    rax,[rip+0xb23f]        # 418010 <__sprintf_chk@plt+0x15a30>
  40cdd1:	jmp    40cda4 <__sprintf_chk@plt+0xa7c4>
  40cdd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cdde:	xchg   ax,ax
  40cde0:	endbr64 
  40cde4:	push   rbp
  40cde5:	mov    esi,0x2
  40cdea:	push   rbx
  40cdeb:	mov    rbx,rdi
  40cdee:	sub    rsp,0x8
  40cdf2:	call   40c940 <__sprintf_chk@plt+0xa360>
  40cdf7:	mov    rbp,rax
  40cdfa:	mov    edx,0x5
  40cdff:	mov    esi,0x1
  40ce04:	mov    rdi,rbx
  40ce07:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40ce0c:	lea    edx,[rbp+0x1]
  40ce0f:	vxorpd xmm0,xmm0,xmm0
  40ce13:	vcvtsi2sd xmm0,xmm0,edx
  40ce17:	mov    rcx,QWORD PTR [rbx+0x10]
  40ce1b:	mov    esi,0x1
  40ce20:	mov    DWORD PTR [rcx+0x8],0x3
  40ce27:	vmovsd QWORD PTR [rcx],xmm0
  40ce2b:	add    rcx,0x10
  40ce2f:	mov    QWORD PTR [rbx+0x10],rcx
  40ce33:	mov    rdi,rbx
  40ce36:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40ce3b:	mov    rax,QWORD PTR [rbx+0x10]
  40ce3f:	lea    rdx,[rip+0xb1da]        # 418020 <__sprintf_chk@plt+0x15a40>
  40ce46:	cmp    rax,rdx
  40ce49:	je     40ce5f <__sprintf_chk@plt+0xa87f>
  40ce4b:	mov    eax,DWORD PTR [rax-0x8]
  40ce4e:	mov    edx,0x2
  40ce53:	test   eax,eax
  40ce55:	cmovne eax,edx
  40ce58:	add    rsp,0x8
  40ce5c:	pop    rbx
  40ce5d:	pop    rbp
  40ce5e:	ret    
  40ce5f:	mov    eax,0x2
  40ce64:	jmp    40ce58 <__sprintf_chk@plt+0xa878>
  40ce66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce70:	endbr64 
  40ce74:	push   rbx
  40ce75:	mov    edx,0x5
  40ce7a:	mov    rbx,rdi
  40ce7d:	mov    esi,0x1
  40ce82:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40ce87:	mov    esi,0xffffd8ed
  40ce8c:	mov    rdi,rbx
  40ce8f:	call   403c60 <__sprintf_chk@plt+0x1680>
  40ce94:	mov    rcx,QWORD PTR [rax]
  40ce97:	mov    rdx,QWORD PTR [rbx+0x10]
  40ce9b:	mov    eax,DWORD PTR [rax+0x8]
  40ce9e:	mov    QWORD PTR [rdx],rcx
  40cea1:	mov    DWORD PTR [rdx+0x8],eax
  40cea4:	mov    rax,QWORD PTR [rbx+0x18]
  40cea8:	lea    rcx,[rdx+0x10]
  40ceac:	cmp    rax,rcx
  40ceaf:	jae    40cee0 <__sprintf_chk@plt+0xa900>
  40ceb1:	mov    ecx,DWORD PTR [rax+0x8]
  40ceb4:	mov    rax,QWORD PTR [rax]
  40ceb7:	mov    DWORD PTR [rdx+0x18],ecx
  40ceba:	mov    QWORD PTR [rdx+0x10],rax
  40cebe:	mov    QWORD PTR [rdx+0x20],0x0
  40cec6:	mov    DWORD PTR [rdx+0x28],0x3
  40cecd:	add    rdx,0x30
  40ced1:	mov    QWORD PTR [rbx+0x10],rdx
  40ced5:	mov    eax,0x3
  40ceda:	pop    rbx
  40cedb:	ret    
  40cedc:	nop    DWORD PTR [rax+0x0]
  40cee0:	xor    ecx,ecx
  40cee2:	lea    rax,[rip+0xb127]        # 418010 <__sprintf_chk@plt+0x15a30>
  40cee9:	jmp    40ceb4 <__sprintf_chk@plt+0xa8d4>
  40ceeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cef0:	push   rbp
  40cef1:	mov    esi,0x1
  40cef6:	push   rbx
  40cef7:	mov    rbx,rdi
  40cefa:	sub    rsp,0x8
  40cefe:	call   403e40 <__sprintf_chk@plt+0x1860>
  40cf03:	test   rax,rax
  40cf06:	je     40cf3e <__sprintf_chk@plt+0xa95e>
  40cf08:	mov    rdi,rbx
  40cf0b:	mov    rbp,rax
  40cf0e:	call   404150 <__sprintf_chk@plt+0x1b70>
  40cf13:	test   eax,eax
  40cf15:	je     40cf3e <__sprintf_chk@plt+0xa95e>
  40cf17:	lea    rdx,[rip+0xa411]        # 41732f <__sprintf_chk@plt+0x14d4f>
  40cf1e:	mov    esi,0xffffd8f0
  40cf23:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  40cf28:	mov    edx,0xfffffffe
  40cf2d:	mov    esi,0xffffffff
  40cf32:	mov    rdi,rbx
  40cf35:	call   403dd0 <__sprintf_chk@plt+0x17f0>
  40cf3a:	test   eax,eax
  40cf3c:	jne    40cf58 <__sprintf_chk@plt+0xa978>
  40cf3e:	lea    rdx,[rip+0xa3ea]        # 41732f <__sprintf_chk@plt+0x14d4f>
  40cf45:	mov    esi,0x1
  40cf4a:	mov    rdi,rbx
  40cf4d:	call   40c3f0 <__sprintf_chk@plt+0x9e10>
  40cf52:	nop    WORD PTR [rax+rax*1+0x0]
  40cf58:	sub    QWORD PTR [rbx+0x10],0x20
  40cf5d:	add    rsp,0x8
  40cf61:	pop    rbx
  40cf62:	mov    rax,rbp
  40cf65:	pop    rbp
  40cf66:	ret    
  40cf67:	nop    WORD PTR [rax+rax*1+0x0]
  40cf70:	endbr64 
  40cf74:	push   rbp
  40cf75:	push   rbx
  40cf76:	mov    rbx,rdi
  40cf79:	sub    rsp,0x8
  40cf7d:	call   40cef0 <__sprintf_chk@plt+0xa910>
  40cf82:	mov    rdi,QWORD PTR [rax]
  40cf85:	mov    rbp,rax
  40cf88:	call   4023c0 <fclose@plt>
  40cf8d:	mov    QWORD PTR [rbp+0x0],0x0
  40cf95:	test   eax,eax
  40cf97:	sete   sil
  40cf9b:	add    rsp,0x8
  40cf9f:	mov    rdi,rbx
  40cfa2:	pop    rbx
  40cfa3:	mov    edx,0x0
  40cfa8:	movzx  esi,sil
  40cfac:	pop    rbp
  40cfad:	jmp    40be00 <__sprintf_chk@plt+0x9820>
  40cfb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cfbd:	nop    DWORD PTR [rax]
  40cfc0:	endbr64 
  40cfc4:	push   rbx
  40cfc5:	mov    rbx,rdi
  40cfc8:	call   40cef0 <__sprintf_chk@plt+0xa910>
  40cfcd:	mov    QWORD PTR [rax],0x0
  40cfd4:	mov    rdi,rbx
  40cfd7:	xor    edx,edx
  40cfd9:	xor    esi,esi
  40cfdb:	pop    rbx
  40cfdc:	jmp    40be00 <__sprintf_chk@plt+0x9820>
  40cfe1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cfec:	nop    DWORD PTR [rax+0x0]
  40cff0:	endbr64 
  40cff4:	push   rbx
  40cff5:	mov    rbx,rdi
  40cff8:	call   40cef0 <__sprintf_chk@plt+0xa910>
  40cffd:	cmp    QWORD PTR [rax],0x0
  40d001:	je     40d00b <__sprintf_chk@plt+0xaa2b>
  40d003:	mov    rdi,rbx
  40d006:	call   40b500 <__sprintf_chk@plt+0x8f20>
  40d00b:	xor    eax,eax
  40d00d:	pop    rbx
  40d00e:	ret    
  40d00f:	nop
  40d010:	sub    rsp,0x8
  40d014:	mov    r8,rdi
  40d017:	mov    r9d,esi
  40d01a:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  40d01f:	lea    rdx,[rip+0xafea]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d026:	cmp    rax,rdx
  40d029:	je     40d040 <__sprintf_chk@plt+0xaa60>
  40d02b:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40d02f:	je     40d040 <__sprintf_chk@plt+0xaa60>
  40d031:	add    rsp,0x8
  40d035:	ret    
  40d036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d040:	lea    rdx,[rip+0xa2ee]        # 417335 <__sprintf_chk@plt+0x14d55>
  40d047:	mov    esi,r9d
  40d04a:	mov    rdi,r8
  40d04d:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40d052:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d05d:	nop    DWORD PTR [rax]
  40d060:	endbr64 
  40d064:	push   rbx
  40d065:	mov    edx,0x5
  40d06a:	mov    rbx,rdi
  40d06d:	mov    esi,0x1
  40d072:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40d077:	mov    esi,0x2
  40d07c:	mov    rdi,rbx
  40d07f:	call   40d010 <__sprintf_chk@plt+0xaa30>
  40d084:	mov    rcx,QWORD PTR [rbx+0x18]
  40d088:	mov    rax,QWORD PTR [rbx+0x10]
  40d08c:	lea    rdx,[rcx+0x20]
  40d090:	cmp    rdx,rax
  40d093:	jbe    40d0a8 <__sprintf_chk@plt+0xaac8>
  40d095:	nop    DWORD PTR [rax]
  40d098:	add    rax,0x10
  40d09c:	mov    DWORD PTR [rax-0x8],0x0
  40d0a3:	cmp    rax,rdx
  40d0a6:	jb     40d098 <__sprintf_chk@plt+0xaab8>
  40d0a8:	mov    QWORD PTR [rbx+0x10],rdx
  40d0ac:	mov    rdi,rbx
  40d0af:	mov    esi,0x1
  40d0b4:	call   403e70 <__sprintf_chk@plt+0x1890>
  40d0b9:	mov    eax,0x1
  40d0be:	pop    rbx
  40d0bf:	ret    
  40d0c0:	endbr64 
  40d0c4:	push   rbx
  40d0c5:	mov    esi,0x1
  40d0ca:	mov    rbx,rdi
  40d0cd:	sub    rsp,0x20
  40d0d1:	mov    rax,QWORD PTR fs:0x28
  40d0da:	mov    QWORD PTR [rsp+0x18],rax
  40d0df:	xor    eax,eax
  40d0e1:	call   40d010 <__sprintf_chk@plt+0xaa30>
  40d0e6:	mov    rdx,QWORD PTR [rbx+0x10]
  40d0ea:	xor    r8d,r8d
  40d0ed:	mov    rax,rdx
  40d0f0:	sub    rax,QWORD PTR [rbx+0x18]
  40d0f4:	sar    rax,0x4
  40d0f8:	dec    eax
  40d0fa:	cdqe   
  40d0fc:	shl    rax,0x4
  40d100:	sub    rdx,rax
  40d103:	lea    rcx,[rdx-0x10]
  40d107:	mov    QWORD PTR [rsp],rcx
  40d10b:	mov    rdx,rsp
  40d10e:	sub    rcx,QWORD PTR [rbx+0x40]
  40d112:	lea    rsi,[rip+0x7707]        # 414820 <__sprintf_chk@plt+0x12240>
  40d119:	mov    rdi,rbx
  40d11c:	mov    DWORD PTR [rsp+0x8],0xffffffff
  40d124:	call   4076c0 <__sprintf_chk@plt+0x50e0>
  40d129:	mov    rdx,QWORD PTR [rbx+0x10]
  40d12d:	mov    rcx,QWORD PTR [rbx+0x28]
  40d131:	cmp    rdx,QWORD PTR [rcx+0x10]
  40d135:	jb     40d13f <__sprintf_chk@plt+0xab5f>
  40d137:	mov    QWORD PTR [rcx+0x10],rdx
  40d13b:	mov    rdx,QWORD PTR [rbx+0x10]
  40d13f:	test   eax,eax
  40d141:	sete   al
  40d144:	movzx  eax,al
  40d147:	mov    DWORD PTR [rdx],eax
  40d149:	mov    DWORD PTR [rdx+0x8],0x1
  40d150:	add    rdx,0x10
  40d154:	mov    QWORD PTR [rbx+0x10],rdx
  40d158:	mov    esi,0x1
  40d15d:	mov    rdi,rbx
  40d160:	call   403d90 <__sprintf_chk@plt+0x17b0>
  40d165:	mov    rax,QWORD PTR [rbx+0x10]
  40d169:	sub    rax,QWORD PTR [rbx+0x18]
  40d16d:	sar    rax,0x4
  40d171:	mov    rsi,QWORD PTR [rsp+0x18]
  40d176:	xor    rsi,QWORD PTR fs:0x28
  40d17f:	jne    40d187 <__sprintf_chk@plt+0xaba7>
  40d181:	add    rsp,0x20
  40d185:	pop    rbx
  40d186:	ret    
  40d187:	call   4023e0 <__stack_chk_fail@plt>
  40d18c:	nop    DWORD PTR [rax+0x0]
  40d190:	endbr64 
  40d194:	push   r13
  40d196:	mov    edx,0x5
  40d19b:	mov    esi,0x1
  40d1a0:	push   r12
  40d1a2:	push   rbp
  40d1a3:	mov    rbp,rdi
  40d1a6:	push   rbx
  40d1a7:	sub    rsp,0x8
  40d1ab:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40d1b0:	mov    esi,0x1
  40d1b5:	mov    rdi,rbp
  40d1b8:	call   407900 <__sprintf_chk@plt+0x5320>
  40d1bd:	lea    ebx,[rax+0x1]
  40d1c0:	mov    rax,QWORD PTR [rbp+0x10]
  40d1c4:	sub    rax,QWORD PTR [rbp+0x18]
  40d1c8:	sar    rax,0x4
  40d1cc:	cmp    eax,0x2
  40d1cf:	je     40d21b <__sprintf_chk@plt+0xac3b>
  40d1d1:	cmp    eax,0x3
  40d1d4:	jne    40d240 <__sprintf_chk@plt+0xac60>
  40d1d6:	mov    esi,0x2
  40d1db:	mov    rdi,rbp
  40d1de:	call   40c940 <__sprintf_chk@plt+0xa360>
  40d1e3:	mov    r13d,eax
  40d1e6:	cmp    ebx,eax
  40d1e8:	jl     40d258 <__sprintf_chk@plt+0xac78>
  40d1ea:	jle    40d258 <__sprintf_chk@plt+0xac78>
  40d1ec:	nop    DWORD PTR [rax+0x0]
  40d1f0:	lea    r12d,[rbx-0x1]
  40d1f4:	mov    edx,r12d
  40d1f7:	mov    esi,0x1
  40d1fc:	mov    rdi,rbp
  40d1ff:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40d204:	mov    edx,ebx
  40d206:	mov    esi,0x1
  40d20b:	mov    rdi,rbp
  40d20e:	call   409010 <__sprintf_chk@plt+0x6a30>
  40d213:	mov    ebx,r12d
  40d216:	cmp    r12d,r13d
  40d219:	jne    40d1f0 <__sprintf_chk@plt+0xac10>
  40d21b:	mov    edx,ebx
  40d21d:	mov    rdi,rbp
  40d220:	mov    esi,0x1
  40d225:	call   409010 <__sprintf_chk@plt+0x6a30>
  40d22a:	add    rsp,0x8
  40d22e:	pop    rbx
  40d22f:	pop    rbp
  40d230:	pop    r12
  40d232:	xor    eax,eax
  40d234:	pop    r13
  40d236:	ret    
  40d237:	nop    WORD PTR [rax+rax*1+0x0]
  40d240:	lea    rsi,[rip+0xaf11]        # 418158 <__sprintf_chk@plt+0x15b78>
  40d247:	mov    rdi,rbp
  40d24a:	xor    eax,eax
  40d24c:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d251:	nop    DWORD PTR [rax+0x0]
  40d258:	mov    ebx,eax
  40d25a:	jmp    40d21b <__sprintf_chk@plt+0xac3b>
  40d25c:	nop    DWORD PTR [rax+0x0]
  40d260:	endbr64 
  40d264:	push   r13
  40d266:	mov    edx,0x5
  40d26b:	mov    esi,0x1
  40d270:	push   r12
  40d272:	push   rbp
  40d273:	push   rbx
  40d274:	mov    rbx,rdi
  40d277:	sub    rsp,0x8
  40d27b:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40d280:	mov    edx,0x1
  40d285:	mov    esi,0x2
  40d28a:	mov    rdi,rbx
  40d28d:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  40d292:	mov    r12,rax
  40d295:	mov    rax,QWORD PTR [rbx+0x18]
  40d299:	lea    rdx,[rax+0x20]
  40d29d:	cmp    rdx,QWORD PTR [rbx+0x10]
  40d2a1:	jae    40d2ba <__sprintf_chk@plt+0xacda>
  40d2a3:	lea    rcx,[rip+0xad66]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d2aa:	cmp    rdx,rcx
  40d2ad:	je     40d2ba <__sprintf_chk@plt+0xacda>
  40d2af:	mov    eax,DWORD PTR [rax+0x28]
  40d2b2:	test   eax,eax
  40d2b4:	jg     40d340 <__sprintf_chk@plt+0xad60>
  40d2ba:	mov    esi,0x1
  40d2bf:	mov    rdi,rbx
  40d2c2:	call   407900 <__sprintf_chk@plt+0x5320>
  40d2c7:	mov    ebp,eax
  40d2c9:	xor    r13d,r13d
  40d2cc:	cmp    ebp,r12d
  40d2cf:	jge    40d2e0 <__sprintf_chk@plt+0xad00>
  40d2d1:	add    rsp,0x8
  40d2d5:	pop    rbx
  40d2d6:	pop    rbp
  40d2d7:	pop    r12
  40d2d9:	mov    eax,r13d
  40d2dc:	pop    r13
  40d2de:	ret    
  40d2df:	nop
  40d2e0:	mov    r13d,ebp
  40d2e3:	sub    r13d,r12d
  40d2e6:	inc    r13d
  40d2e9:	mov    esi,r13d
  40d2ec:	mov    rdi,rbx
  40d2ef:	call   4082a0 <__sprintf_chk@plt+0x5cc0>
  40d2f4:	test   eax,eax
  40d2f6:	je     40d358 <__sprintf_chk@plt+0xad78>
  40d2f8:	mov    edx,r12d
  40d2fb:	mov    esi,0x1
  40d300:	mov    rdi,rbx
  40d303:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40d308:	lea    r10d,[r12+0x1]
  40d30d:	cmp    ebp,r12d
  40d310:	jle    40d2d1 <__sprintf_chk@plt+0xacf1>
  40d312:	inc    ebp
  40d314:	nop    DWORD PTR [rax+0x0]
  40d318:	mov    edx,r10d
  40d31b:	mov    esi,0x1
  40d320:	mov    rdi,rbx
  40d323:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40d328:	inc    r10d
  40d32b:	cmp    r10d,ebp
  40d32e:	jne    40d318 <__sprintf_chk@plt+0xad38>
  40d330:	add    rsp,0x8
  40d334:	pop    rbx
  40d335:	pop    rbp
  40d336:	pop    r12
  40d338:	mov    eax,r13d
  40d33b:	pop    r13
  40d33d:	ret    
  40d33e:	xchg   ax,ax
  40d340:	mov    esi,0x3
  40d345:	mov    rdi,rbx
  40d348:	call   40c940 <__sprintf_chk@plt+0xa360>
  40d34d:	mov    ebp,eax
  40d34f:	jmp    40d2c9 <__sprintf_chk@plt+0xace9>
  40d354:	nop    DWORD PTR [rax+0x0]
  40d358:	lea    rsi,[rip+0x9fe5]        # 417344 <__sprintf_chk@plt+0x14d64>
  40d35f:	mov    rdi,rbx
  40d362:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d367:	nop    WORD PTR [rax+rax*1+0x0]
  40d370:	push   rbx
  40d371:	mov    rbx,rdi
  40d374:	call   40cef0 <__sprintf_chk@plt+0xa910>
  40d379:	mov    rax,QWORD PTR [rax]
  40d37c:	test   rax,rax
  40d37f:	je     40d388 <__sprintf_chk@plt+0xada8>
  40d381:	pop    rbx
  40d382:	ret    
  40d383:	nop    DWORD PTR [rax+rax*1+0x0]
  40d388:	lea    rsi,[rip+0x9fd0]        # 41735f <__sprintf_chk@plt+0x14d7f>
  40d38f:	mov    rdi,rbx
  40d392:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d397:	nop    WORD PTR [rax+rax*1+0x0]
  40d3a0:	endbr64 
  40d3a4:	push   rbx
  40d3a5:	mov    rbx,rdi
  40d3a8:	mov    rax,QWORD PTR [rdi+0x18]
  40d3ac:	cmp    rax,QWORD PTR [rdi+0x10]
  40d3b0:	jae    40d3d8 <__sprintf_chk@plt+0xadf8>
  40d3b2:	lea    rdx,[rip+0xac57]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d3b9:	cmp    rax,rdx
  40d3bc:	je     40d3d8 <__sprintf_chk@plt+0xadf8>
  40d3be:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40d3c2:	je     40d3d8 <__sprintf_chk@plt+0xadf8>
  40d3c4:	mov    rdi,rbx
  40d3c7:	call   40d370 <__sprintf_chk@plt+0xad90>
  40d3cc:	mov    rdi,rbx
  40d3cf:	pop    rbx
  40d3d0:	jmp    40b500 <__sprintf_chk@plt+0x8f20>
  40d3d5:	nop    DWORD PTR [rax]
  40d3d8:	mov    edx,0x2
  40d3dd:	mov    esi,0xffffd8ef
  40d3e2:	mov    rdi,rbx
  40d3e5:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  40d3ea:	jmp    40d3c4 <__sprintf_chk@plt+0xade4>
  40d3ec:	nop    DWORD PTR [rax+0x0]
  40d3f0:	endbr64 
  40d3f4:	push   rbx
  40d3f5:	mov    rbx,rdi
  40d3f8:	call   40d370 <__sprintf_chk@plt+0xad90>
  40d3fd:	mov    rdi,rax
  40d400:	call   4024c0 <fflush@plt>
  40d405:	test   eax,eax
  40d407:	sete   sil
  40d40b:	mov    rdi,rbx
  40d40e:	mov    edx,0x0
  40d413:	movzx  esi,sil
  40d417:	pop    rbx
  40d418:	jmp    40be00 <__sprintf_chk@plt+0x9820>
  40d41d:	nop    DWORD PTR [rax]
  40d420:	endbr64 
  40d424:	push   r12
  40d426:	mov    edx,0x5
  40d42b:	mov    esi,0x2
  40d430:	push   rbp
  40d431:	lea    rbp,[rip+0xabd8]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d438:	push   rbx
  40d439:	mov    rbx,rdi
  40d43c:	add    rsp,0xffffffffffffff80
  40d440:	mov    rax,QWORD PTR fs:0x28
  40d449:	mov    QWORD PTR [rsp+0x78],rax
  40d44e:	xor    eax,eax
  40d450:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40d455:	mov    rdx,QWORD PTR [rbx+0x18]
  40d459:	mov    rax,QWORD PTR [rbx+0x10]
  40d45d:	cmp    rdx,rbp
  40d460:	je     40d471 <__sprintf_chk@plt+0xae91>
  40d462:	cmp    rdx,rax
  40d465:	jae    40d471 <__sprintf_chk@plt+0xae91>
  40d467:	cmp    DWORD PTR [rdx+0x8],0x6
  40d46b:	je     40d5a8 <__sprintf_chk@plt+0xafc8>
  40d471:	mov    esi,0x1
  40d476:	mov    rdi,rbx
  40d479:	call   40c940 <__sprintf_chk@plt+0xa360>
  40d47e:	mov    r12,rax
  40d481:	test   eax,eax
  40d483:	js     40d590 <__sprintf_chk@plt+0xafb0>
  40d489:	mov    r9,rsp
  40d48c:	mov    rdi,QWORD PTR [rbx+0x28]
  40d490:	lea    rcx,[r9+0x74]
  40d494:	lea    rsi,[rbx+0x50]
  40d498:	mov    edx,eax
  40d49a:	call   403b30 <__sprintf_chk@plt+0x1550>
  40d49f:	test   eax,eax
  40d4a1:	je     40d5c0 <__sprintf_chk@plt+0xafe0>
  40d4a7:	mov    rdx,r9
  40d4aa:	lea    rsi,[rip+0x9fa0]        # 417451 <__sprintf_chk@plt+0x14e71>
  40d4b1:	mov    rdi,rbx
  40d4b4:	call   409090 <__sprintf_chk@plt+0x6ab0>
  40d4b9:	mov    rax,QWORD PTR [rbx+0x10]
  40d4bd:	lea    rdx,[rax-0x10]
  40d4c1:	cmp    rdx,rbp
  40d4c4:	je     40d4d1 <__sprintf_chk@plt+0xaef1>
  40d4c6:	mov    edx,DWORD PTR [rax-0x8]
  40d4c9:	test   edx,edx
  40d4cb:	je     40d5d8 <__sprintf_chk@plt+0xaff8>
  40d4d1:	mov    rdx,QWORD PTR [rbx+0x18]
  40d4d5:	lea    rcx,[rdx+0x10]
  40d4d9:	cmp    rcx,rax
  40d4dc:	jae    40d580 <__sprintf_chk@plt+0xafa0>
  40d4e2:	mov    esi,DWORD PTR [rdx+0x18]
  40d4e5:	mov    rdx,QWORD PTR [rcx]
  40d4e8:	add    rax,0x10
  40d4ec:	mov    DWORD PTR [rax-0x8],esi
  40d4ef:	mov    QWORD PTR [rax-0x10],rdx
  40d4f3:	mov    QWORD PTR [rbx+0x10],rax
  40d4f7:	mov    esi,0x1
  40d4fc:	mov    rdi,rbx
  40d4ff:	call   403f50 <__sprintf_chk@plt+0x1970>
  40d504:	test   eax,eax
  40d506:	je     40d523 <__sprintf_chk@plt+0xaf43>
  40d508:	mov    esi,0x1
  40d50d:	mov    rdi,rbx
  40d510:	call   403ef0 <__sprintf_chk@plt+0x1910>
  40d515:	vucomisd xmm0,QWORD PTR [rip+0xaf3b]        # 418458 <__sprintf_chk@plt+0x15e78>
  40d51d:	jnp    40d5f0 <__sprintf_chk@plt+0xb010>
  40d523:	mov    rax,QWORD PTR [rbx+0x10]
  40d527:	cmp    DWORD PTR [rax-0x18],0x6
  40d52b:	je     40d560 <__sprintf_chk@plt+0xaf80>
  40d52d:	mov    rdi,rbx
  40d530:	call   404470 <__sprintf_chk@plt+0x1e90>
  40d535:	test   eax,eax
  40d537:	je     40d56a <__sprintf_chk@plt+0xaf8a>
  40d539:	mov    eax,0x1
  40d53e:	mov    rcx,QWORD PTR [rsp+0x78]
  40d543:	xor    rcx,QWORD PTR fs:0x28
  40d54c:	jne    40d628 <__sprintf_chk@plt+0xb048>
  40d552:	sub    rsp,0xffffffffffffff80
  40d556:	pop    rbx
  40d557:	pop    rbp
  40d558:	pop    r12
  40d55a:	ret    
  40d55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d560:	mov    rax,QWORD PTR [rax-0x20]
  40d564:	cmp    BYTE PTR [rax+0xa],0x0
  40d568:	je     40d52d <__sprintf_chk@plt+0xaf4d>
  40d56a:	lea    rsi,[rip+0xac47]        # 4181b8 <__sprintf_chk@plt+0x15bd8>
  40d571:	mov    rdi,rbx
  40d574:	xor    eax,eax
  40d576:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d57b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d580:	xor    esi,esi
  40d582:	lea    rcx,[rip+0xaa87]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d589:	jmp    40d4e5 <__sprintf_chk@plt+0xaf05>
  40d58e:	xchg   ax,ax
  40d590:	lea    rdx,[rip+0x9de5]        # 41737c <__sprintf_chk@plt+0x14d9c>
  40d597:	mov    esi,0x1
  40d59c:	mov    rdi,rbx
  40d59f:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40d5a4:	nop    DWORD PTR [rax+0x0]
  40d5a8:	mov    rcx,QWORD PTR [rdx]
  40d5ab:	add    rax,0x10
  40d5af:	mov    QWORD PTR [rax-0x10],rcx
  40d5b3:	mov    DWORD PTR [rax-0x8],0x6
  40d5ba:	jmp    40d4d5 <__sprintf_chk@plt+0xaef5>
  40d5bf:	nop
  40d5c0:	lea    rdx,[rip+0x9dd0]        # 417397 <__sprintf_chk@plt+0x14db7>
  40d5c7:	mov    esi,0x1
  40d5cc:	mov    rdi,rbx
  40d5cf:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40d5d4:	nop    DWORD PTR [rax+0x0]
  40d5d8:	mov    edx,r12d
  40d5db:	lea    rsi,[rip+0xab9e]        # 418180 <__sprintf_chk@plt+0x15ba0>
  40d5e2:	mov    rdi,rbx
  40d5e5:	xor    eax,eax
  40d5e7:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d5ec:	nop    DWORD PTR [rax+0x0]
  40d5f0:	jne    40d523 <__sprintf_chk@plt+0xaf43>
  40d5f6:	mov    rax,QWORD PTR [rbx+0x10]
  40d5fa:	mov    esi,0xfffffffe
  40d5ff:	mov    QWORD PTR [rax],rbx
  40d602:	mov    DWORD PTR [rax+0x8],0x8
  40d609:	add    rax,0x10
  40d60d:	mov    QWORD PTR [rbx+0x10],rax
  40d611:	mov    rdi,rbx
  40d614:	call   403d90 <__sprintf_chk@plt+0x17b0>
  40d619:	mov    rdi,rbx
  40d61c:	call   404470 <__sprintf_chk@plt+0x1e90>
  40d621:	xor    eax,eax
  40d623:	jmp    40d53e <__sprintf_chk@plt+0xaf5e>
  40d628:	call   4023e0 <__stack_chk_fail@plt>
  40d62d:	nop    DWORD PTR [rax]
  40d630:	endbr64 
  40d634:	push   rbp
  40d635:	mov    edx,0x1
  40d63a:	mov    esi,0x2
  40d63f:	push   rbx
  40d640:	mov    rbx,rdi
  40d643:	sub    rsp,0x8
  40d647:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  40d64c:	mov    rdi,QWORD PTR [rbx+0x18]
  40d650:	mov    rdx,QWORD PTR [rbx+0x10]
  40d654:	lea    rcx,[rdi+0x10]
  40d658:	cmp    rdx,rcx
  40d65b:	jae    40d670 <__sprintf_chk@plt+0xb090>
  40d65d:	nop    DWORD PTR [rax]
  40d660:	add    rdx,0x10
  40d664:	mov    DWORD PTR [rdx-0x8],0x0
  40d66b:	cmp    rdx,rcx
  40d66e:	jb     40d660 <__sprintf_chk@plt+0xb080>
  40d670:	lea    rbp,[rip+0xa999]        # 418010 <__sprintf_chk@plt+0x15a30>
  40d677:	mov    QWORD PTR [rbx+0x10],rcx
  40d67b:	cmp    rdi,rbp
  40d67e:	je     40d68f <__sprintf_chk@plt+0xb0af>
  40d680:	mov    edx,DWORD PTR [rdi+0x8]
  40d683:	sub    edx,0x3
  40d686:	cmp    edx,0x1
  40d689:	ja     40d68f <__sprintf_chk@plt+0xb0af>
  40d68b:	test   eax,eax
  40d68d:	jg     40d697 <__sprintf_chk@plt+0xb0b7>
  40d68f:	mov    rdi,rbx
  40d692:	call   4081a0 <__sprintf_chk@plt+0x5bc0>
  40d697:	mov    esi,eax
  40d699:	mov    rdi,rbx
  40d69c:	call   40c020 <__sprintf_chk@plt+0x9a40>
  40d6a1:	mov    rdx,QWORD PTR [rbx+0x18]
  40d6a5:	mov    rax,QWORD PTR [rbx+0x10]
  40d6a9:	cmp    rdx,rax
  40d6ac:	jae    40d6d2 <__sprintf_chk@plt+0xb0f2>
  40d6ae:	mov    ecx,DWORD PTR [rdx+0x8]
  40d6b1:	mov    rdx,QWORD PTR [rdx]
  40d6b4:	add    rax,0x10
  40d6b8:	mov    QWORD PTR [rax-0x10],rdx
  40d6bc:	mov    DWORD PTR [rax-0x8],ecx
  40d6bf:	mov    QWORD PTR [rbx+0x10],rax
  40d6c3:	mov    esi,0x2
  40d6c8:	mov    rdi,rbx
  40d6cb:	call   40bec0 <__sprintf_chk@plt+0x98e0>
  40d6d0:	jmp    40d68f <__sprintf_chk@plt+0xb0af>
  40d6d2:	xor    ecx,ecx
  40d6d4:	mov    rdx,rbp
  40d6d7:	jmp    40d6b1 <__sprintf_chk@plt+0xb0d1>
  40d6d9:	nop    DWORD PTR [rax+0x0]
  40d6e0:	push   rbp
  40d6e1:	lea    rbp,[rdi+0x18]
  40d6e5:	push   rbx
  40d6e6:	sub    rsp,0x8
  40d6ea:	mov    rdx,QWORD PTR [rdi]
  40d6ed:	sub    rdx,rbp
  40d6f0:	jne    40d700 <__sprintf_chk@plt+0xb120>
  40d6f2:	add    rsp,0x8
  40d6f6:	pop    rbx
  40d6f7:	xor    eax,eax
  40d6f9:	pop    rbp
  40d6fa:	ret    
  40d6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d700:	mov    rbx,rdi
  40d703:	mov    rdi,QWORD PTR [rdi+0x10]
  40d707:	mov    rsi,rbp
  40d70a:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40d70f:	inc    DWORD PTR [rbx+0x8]
  40d712:	mov    QWORD PTR [rbx],rbp
  40d715:	add    rsp,0x8
  40d719:	mov    eax,0x1
  40d71e:	pop    rbx
  40d71f:	pop    rbp
  40d720:	ret    
  40d721:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d72c:	nop    DWORD PTR [rax+0x0]
  40d730:	push   rbx
  40d731:	mov    rbx,rdi
  40d734:	call   40d6e0 <__sprintf_chk@plt+0xb100>
  40d739:	test   eax,eax
  40d73b:	je     40d743 <__sprintf_chk@plt+0xb163>
  40d73d:	cmp    DWORD PTR [rbx+0x8],0x1
  40d741:	jg     40d750 <__sprintf_chk@plt+0xb170>
  40d743:	lea    rax,[rbx+0x18]
  40d747:	pop    rbx
  40d748:	ret    
  40d749:	nop    DWORD PTR [rax+0x0]
  40d750:	lea    rsi,[rbx+0x10]
  40d754:	lea    rdi,[rbx+0x8]
  40d758:	call   40bf50 <__sprintf_chk@plt+0x9970>
  40d75d:	lea    rax,[rbx+0x18]
  40d761:	pop    rbx
  40d762:	ret    
  40d763:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d76e:	xchg   ax,ax
  40d770:	push   r13
  40d772:	push   r12
  40d774:	lea    r12,[rsi+rdx*1]
  40d778:	push   rbp
  40d779:	push   rbx
  40d77a:	sub    rsp,0x8
  40d77e:	test   rdx,rdx
  40d781:	je     40d7c8 <__sprintf_chk@plt+0xb1e8>
  40d783:	mov    rbp,rdi
  40d786:	mov    rbx,rsi
  40d789:	lea    r13,[rdi+0x2018]
  40d790:	jmp    40d7ae <__sprintf_chk@plt+0xb1ce>
  40d792:	nop    WORD PTR [rax+rax*1+0x0]
  40d798:	lea    rdx,[rax+0x1]
  40d79c:	mov    QWORD PTR [rbp+0x0],rdx
  40d7a0:	inc    rbx
  40d7a3:	movzx  edx,BYTE PTR [rbx-0x1]
  40d7a7:	mov    BYTE PTR [rax],dl
  40d7a9:	cmp    rbx,r12
  40d7ac:	je     40d7c8 <__sprintf_chk@plt+0xb1e8>
  40d7ae:	mov    rax,QWORD PTR [rbp+0x0]
  40d7b2:	cmp    rax,r13
  40d7b5:	jb     40d798 <__sprintf_chk@plt+0xb1b8>
  40d7b7:	mov    rdi,rbp
  40d7ba:	call   40d730 <__sprintf_chk@plt+0xb150>
  40d7bf:	mov    rax,QWORD PTR [rbp+0x0]
  40d7c3:	jmp    40d798 <__sprintf_chk@plt+0xb1b8>
  40d7c5:	nop    DWORD PTR [rax]
  40d7c8:	add    rsp,0x8
  40d7cc:	pop    rbx
  40d7cd:	pop    rbp
  40d7ce:	pop    r12
  40d7d0:	pop    r13
  40d7d2:	ret    
  40d7d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d7de:	xchg   ax,ax
  40d7e0:	push   rbx
  40d7e1:	mov    rbx,rdi
  40d7e4:	call   40d6e0 <__sprintf_chk@plt+0xb100>
  40d7e9:	mov    esi,DWORD PTR [rbx+0x8]
  40d7ec:	mov    rdi,QWORD PTR [rbx+0x10]
  40d7f0:	call   40bec0 <__sprintf_chk@plt+0x98e0>
  40d7f5:	mov    DWORD PTR [rbx+0x8],0x1
  40d7fc:	pop    rbx
  40d7fd:	ret    
  40d7fe:	xchg   ax,ax
  40d800:	push   r13
  40d802:	push   r12
  40d804:	push   rbp
  40d805:	push   rbx
  40d806:	sub    rsp,0x1000
  40d80d:	or     QWORD PTR [rsp],0x0
  40d812:	sub    rsp,0x1000
  40d819:	or     QWORD PTR [rsp],0x0
  40d81e:	sub    rsp,0x28
  40d822:	mov    rbp,rsp
  40d825:	mov    rax,QWORD PTR fs:0x28
  40d82e:	mov    QWORD PTR [rsp+0x2018],rax
  40d836:	xor    eax,eax
  40d838:	lea    rax,[rbp+0x18]
  40d83c:	mov    r13,rdi
  40d83f:	mov    r12,rsi
  40d842:	mov    QWORD PTR [rsp+0x10],rdi
  40d847:	mov    QWORD PTR [rsp],rax
  40d84b:	mov    DWORD PTR [rsp+0x8],0x0
  40d853:	jmp    40d874 <__sprintf_chk@plt+0xb294>
  40d855:	nop    DWORD PTR [rax]
  40d858:	mov    rdi,rbx
  40d85b:	call   4023d0 <strlen@plt>
  40d860:	test   rax,rax
  40d863:	je     40d870 <__sprintf_chk@plt+0xb290>
  40d865:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
  40d86a:	lea    rdx,[rax-0x1]
  40d86e:	je     40d8d8 <__sprintf_chk@plt+0xb2f8>
  40d870:	add    QWORD PTR [rsp],rax
  40d874:	mov    rdi,rbp
  40d877:	call   40d730 <__sprintf_chk@plt+0xb150>
  40d87c:	mov    rdi,rax
  40d87f:	mov    rdx,r12
  40d882:	mov    esi,0x2000
  40d887:	mov    rbx,rax
  40d88a:	call   402450 <fgets@plt>
  40d88f:	test   rax,rax
  40d892:	jne    40d858 <__sprintf_chk@plt+0xb278>
  40d894:	mov    rdi,rbp
  40d897:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  40d89c:	mov    esi,0xffffffff
  40d8a1:	mov    rdi,r13
  40d8a4:	call   407900 <__sprintf_chk@plt+0x5320>
  40d8a9:	test   rax,rax
  40d8ac:	setne  al
  40d8af:	movzx  eax,al
  40d8b2:	mov    rcx,QWORD PTR [rsp+0x2018]
  40d8ba:	xor    rcx,QWORD PTR fs:0x28
  40d8c3:	jne    40d8eb <__sprintf_chk@plt+0xb30b>
  40d8c5:	add    rsp,0x2028
  40d8cc:	pop    rbx
  40d8cd:	pop    rbp
  40d8ce:	pop    r12
  40d8d0:	pop    r13
  40d8d2:	ret    
  40d8d3:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8d8:	mov    rdi,rbp
  40d8db:	add    QWORD PTR [rsp],rdx
  40d8df:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  40d8e4:	mov    eax,0x1
  40d8e9:	jmp    40d8b2 <__sprintf_chk@plt+0xb2d2>
  40d8eb:	call   4023e0 <__stack_chk_fail@plt>
  40d8f0:	endbr64 
  40d8f4:	push   r12
  40d8f6:	mov    esi,0xffffd8ed
  40d8fb:	push   rbp
  40d8fc:	push   rbx
  40d8fd:	mov    rbx,rdi
  40d900:	call   403e40 <__sprintf_chk@plt+0x1860>
  40d905:	mov    rbp,QWORD PTR [rax]
  40d908:	test   rbp,rbp
  40d90b:	je     40d9a8 <__sprintf_chk@plt+0xb3c8>
  40d911:	mov    rdi,rbx
  40d914:	mov    rsi,rbp
  40d917:	call   40d800 <__sprintf_chk@plt+0xb220>
  40d91c:	mov    rdi,rbp
  40d91f:	mov    r12d,eax
  40d922:	call   402380 <ferror@plt>
  40d927:	test   eax,eax
  40d929:	jne    40d9c0 <__sprintf_chk@plt+0xb3e0>
  40d92f:	mov    eax,0x1
  40d934:	test   r12d,r12d
  40d937:	je     40d940 <__sprintf_chk@plt+0xb360>
  40d939:	pop    rbx
  40d93a:	pop    rbp
  40d93b:	pop    r12
  40d93d:	ret    
  40d93e:	xchg   ax,ax
  40d940:	mov    esi,0xffffd8ec
  40d945:	mov    rdi,rbx
  40d948:	call   403e10 <__sprintf_chk@plt+0x1830>
  40d94d:	test   eax,eax
  40d94f:	je     40d939 <__sprintf_chk@plt+0xb359>
  40d951:	mov    rax,QWORD PTR [rbx+0x10]
  40d955:	mov    r8,QWORD PTR [rbx+0x18]
  40d959:	cmp    rax,r8
  40d95c:	jae    40d970 <__sprintf_chk@plt+0xb390>
  40d95e:	xchg   ax,ax
  40d960:	mov    DWORD PTR [rax+0x8],0x0
  40d967:	add    rax,0x10
  40d96b:	cmp    r8,rax
  40d96e:	ja     40d960 <__sprintf_chk@plt+0xb380>
  40d970:	mov    QWORD PTR [rbx+0x10],r8
  40d974:	mov    rdi,rbx
  40d977:	mov    esi,0xffffd8ed
  40d97c:	call   403c60 <__sprintf_chk@plt+0x1680>
  40d981:	mov    rdx,QWORD PTR [rax]
  40d984:	mov    eax,DWORD PTR [rax+0x8]
  40d987:	mov    QWORD PTR [r8],rdx
  40d98a:	mov    DWORD PTR [r8+0x8],eax
  40d98e:	add    r8,0x10
  40d992:	mov    QWORD PTR [rbx+0x10],r8
  40d996:	mov    rdi,rbx
  40d999:	call   40b500 <__sprintf_chk@plt+0x8f20>
  40d99e:	pop    rbx
  40d99f:	pop    rbp
  40d9a0:	xor    eax,eax
  40d9a2:	pop    r12
  40d9a4:	ret    
  40d9a5:	nop    DWORD PTR [rax]
  40d9a8:	lea    rsi,[rip+0x99f6]        # 4173a5 <__sprintf_chk@plt+0x14dc5>
  40d9af:	mov    rdi,rbx
  40d9b2:	xor    eax,eax
  40d9b4:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d9b9:	nop    DWORD PTR [rax+0x0]
  40d9c0:	call   402330 <__errno_location@plt>
  40d9c5:	mov    edi,DWORD PTR [rax]
  40d9c7:	call   4025a0 <strerror@plt>
  40d9cc:	mov    rdx,rax
  40d9cf:	lea    rsi,[rip+0x96d8]        # 4170ae <__sprintf_chk@plt+0x14ace>
  40d9d6:	mov    rdi,rbx
  40d9d9:	xor    eax,eax
  40d9db:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40d9e0:	push   r14
  40d9e2:	push   r13
  40d9e4:	push   r12
  40d9e6:	push   rbp
  40d9e7:	push   rbx
  40d9e8:	sub    rsp,0x1000
  40d9ef:	or     QWORD PTR [rsp],0x0
  40d9f4:	sub    rsp,0x1000
  40d9fb:	or     QWORD PTR [rsp],0x0
  40da00:	sub    rsp,0x20
  40da04:	mov    ebp,0x2000
  40da09:	mov    r12,rsp
  40da0c:	mov    rax,QWORD PTR fs:0x28
  40da15:	mov    QWORD PTR [rsp+0x2018],rax
  40da1d:	xor    eax,eax
  40da1f:	lea    rax,[r12+0x18]
  40da24:	mov    QWORD PTR [rsp+0x10],rdi
  40da29:	mov    QWORD PTR [rsp],rax
  40da2d:	mov    DWORD PTR [rsp+0x8],0x0
  40da35:	mov    r14,rdi
  40da38:	mov    r13,rsi
  40da3b:	mov    rbx,rdx
  40da3e:	xchg   ax,ax
  40da40:	mov    rdi,r12
  40da43:	call   40d730 <__sprintf_chk@plt+0xb150>
  40da48:	cmp    rbp,rbx
  40da4b:	cmova  rbp,rbx
  40da4f:	mov    rcx,r13
  40da52:	mov    rdx,rbp
  40da55:	mov    esi,0x1
  40da5a:	mov    rdi,rax
  40da5d:	call   402390 <fread@plt>
  40da62:	add    QWORD PTR [rsp],rax
  40da66:	sub    rbx,rax
  40da69:	je     40da70 <__sprintf_chk@plt+0xb490>
  40da6b:	cmp    rbp,rax
  40da6e:	je     40da40 <__sprintf_chk@plt+0xb460>
  40da70:	mov    rdi,r12
  40da73:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  40da78:	mov    eax,0x1
  40da7d:	test   rbx,rbx
  40da80:	jne    40daa8 <__sprintf_chk@plt+0xb4c8>
  40da82:	mov    rcx,QWORD PTR [rsp+0x2018]
  40da8a:	xor    rcx,QWORD PTR fs:0x28
  40da93:	jne    40dac0 <__sprintf_chk@plt+0xb4e0>
  40da95:	add    rsp,0x2020
  40da9c:	pop    rbx
  40da9d:	pop    rbp
  40da9e:	pop    r12
  40daa0:	pop    r13
  40daa2:	pop    r14
  40daa4:	ret    
  40daa5:	nop    DWORD PTR [rax]
  40daa8:	mov    esi,0xffffffff
  40daad:	mov    rdi,r14
  40dab0:	call   407900 <__sprintf_chk@plt+0x5320>
  40dab5:	test   rax,rax
  40dab8:	setne  al
  40dabb:	movzx  eax,al
  40dabe:	jmp    40da82 <__sprintf_chk@plt+0xb4a2>
  40dac0:	call   4023e0 <__stack_chk_fail@plt>
  40dac5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40dad0:	endbr64 
  40dad4:	push   r15
  40dad6:	push   r14
  40dad8:	push   r13
  40dada:	push   r12
  40dadc:	push   rbp
  40dadd:	push   rbx
  40dade:	sub    rsp,0x1000
  40dae5:	or     QWORD PTR [rsp],0x0
  40daea:	sub    rsp,0x1000
  40daf1:	or     QWORD PTR [rsp],0x0
  40daf6:	sub    rsp,0x28
  40dafa:	mov    rax,QWORD PTR fs:0x28
  40db03:	mov    QWORD PTR [rsp+0x2018],rax
  40db0b:	xor    eax,eax
  40db0d:	mov    rax,QWORD PTR [rdi+0x10]
  40db11:	mov    r14,rsp
  40db14:	sub    rax,QWORD PTR [rdi+0x18]
  40db18:	lea    rdx,[r14+0x18]
  40db1c:	sar    rax,0x4
  40db20:	mov    QWORD PTR [rsp+0x10],rdi
  40db25:	mov    QWORD PTR [rsp],rdx
  40db29:	mov    DWORD PTR [rsp+0x8],0x0
  40db31:	test   eax,eax
  40db33:	jle    40db93 <__sprintf_chk@plt+0xb5b3>
  40db35:	mov    rbp,rdi
  40db38:	mov    r13d,eax
  40db3b:	mov    ebx,0x1
  40db40:	lea    r12,[r14+0x2018]
  40db47:	nop    WORD PTR [rax+rax*1+0x0]
  40db50:	mov    esi,ebx
  40db52:	mov    rdi,rbp
  40db55:	call   40c940 <__sprintf_chk@plt+0xa360>
  40db5a:	mov    r15,rax
  40db5d:	test   eax,0xffffff00
  40db62:	je     40db78 <__sprintf_chk@plt+0xb598>
  40db64:	lea    rdx,[rip+0x9851]        # 4173bc <__sprintf_chk@plt+0x14ddc>
  40db6b:	mov    esi,ebx
  40db6d:	mov    rdi,rbp
  40db70:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40db75:	nop    DWORD PTR [rax]
  40db78:	mov    rax,QWORD PTR [rsp]
  40db7c:	cmp    rax,r12
  40db7f:	jae    40dbc8 <__sprintf_chk@plt+0xb5e8>
  40db81:	lea    rdx,[rax+0x1]
  40db85:	inc    ebx
  40db87:	mov    QWORD PTR [rsp],rdx
  40db8b:	mov    BYTE PTR [rax],r15b
  40db8e:	cmp    ebx,r13d
  40db91:	jle    40db50 <__sprintf_chk@plt+0xb570>
  40db93:	mov    rdi,r14
  40db96:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  40db9b:	mov    rcx,QWORD PTR [rsp+0x2018]
  40dba3:	xor    rcx,QWORD PTR fs:0x28
  40dbac:	mov    eax,0x1
  40dbb1:	jne    40dbd6 <__sprintf_chk@plt+0xb5f6>
  40dbb3:	add    rsp,0x2028
  40dbba:	pop    rbx
  40dbbb:	pop    rbp
  40dbbc:	pop    r12
  40dbbe:	pop    r13
  40dbc0:	pop    r14
  40dbc2:	pop    r15
  40dbc4:	ret    
  40dbc5:	nop    DWORD PTR [rax]
  40dbc8:	mov    rdi,r14
  40dbcb:	call   40d730 <__sprintf_chk@plt+0xb150>
  40dbd0:	mov    rax,QWORD PTR [rsp]
  40dbd4:	jmp    40db81 <__sprintf_chk@plt+0xb5a1>
  40dbd6:	call   4023e0 <__stack_chk_fail@plt>
  40dbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbe0:	sub    rsp,0x8
  40dbe4:	mov    rax,rdi
  40dbe7:	mov    rdi,QWORD PTR [rdi+0x10]
  40dbeb:	cmp    DWORD PTR [rax+0x18],esi
  40dbee:	jg     40dc20 <__sprintf_chk@plt+0xb640>
  40dbf0:	test   esi,esi
  40dbf2:	jne    40dc10 <__sprintf_chk@plt+0xb630>
  40dbf4:	mov    r8,rdx
  40dbf7:	sub    rcx,rdx
  40dbfa:	mov    rdx,rcx
  40dbfd:	mov    rsi,r8
  40dc00:	add    rsp,0x8
  40dc04:	jmp    40bfc0 <__sprintf_chk@plt+0x99e0>
  40dc09:	nop    DWORD PTR [rax+0x0]
  40dc10:	lea    rsi,[rip+0x97b3]        # 4173ca <__sprintf_chk@plt+0x14dea>
  40dc17:	xor    eax,eax
  40dc19:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40dc1e:	xchg   ax,ax
  40dc20:	movsxd rsi,esi
  40dc23:	shl    rsi,0x4
  40dc27:	add    rsi,rax
  40dc2a:	mov    rdx,QWORD PTR [rsi+0x28]
  40dc2e:	cmp    rdx,0xffffffffffffffff
  40dc32:	je     40dc80 <__sprintf_chk@plt+0xb6a0>
  40dc34:	mov    rsi,QWORD PTR [rsi+0x20]
  40dc38:	cmp    rdx,0xfffffffffffffffe
  40dc3c:	jne    40dc70 <__sprintf_chk@plt+0xb690>
  40dc3e:	sub    rsi,QWORD PTR [rax]
  40dc41:	inc    rsi
  40dc44:	vxorpd xmm0,xmm0,xmm0
  40dc48:	vcvtsi2sd xmm0,xmm0,rsi
  40dc4d:	mov    rdx,QWORD PTR [rdi+0x10]
  40dc51:	mov    DWORD PTR [rdx+0x8],0x3
  40dc58:	vmovsd QWORD PTR [rdx],xmm0
  40dc5c:	add    rdx,0x10
  40dc60:	mov    QWORD PTR [rdi+0x10],rdx
  40dc64:	add    rsp,0x8
  40dc68:	ret    
  40dc69:	nop    DWORD PTR [rax+0x0]
  40dc70:	add    rsp,0x8
  40dc74:	jmp    40bfc0 <__sprintf_chk@plt+0x99e0>
  40dc79:	nop    DWORD PTR [rax+0x0]
  40dc80:	lea    rsi,[rip+0x9759]        # 4173e0 <__sprintf_chk@plt+0x14e00>
  40dc87:	xor    eax,eax
  40dc89:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40dc8e:	xchg   ax,ax
  40dc90:	push   r14
  40dc92:	mov    r14,rdx
  40dc95:	lea    rdx,[rip+0x9757]        # 4173f3 <__sprintf_chk@plt+0x14e13>
  40dc9c:	push   r13
  40dc9e:	mov    r13,rsi
  40dca1:	push   r12
  40dca3:	mov    r12,rdi
  40dca6:	push   rbp
  40dca7:	push   rbx
  40dca8:	mov    ebp,DWORD PTR [rdi+0x18]
  40dcab:	mov    rdi,QWORD PTR [rdi+0x10]
  40dcaf:	test   ebp,ebp
  40dcb1:	jne    40dce8 <__sprintf_chk@plt+0xb708>
  40dcb3:	test   rsi,rsi
  40dcb6:	je     40dce8 <__sprintf_chk@plt+0xb708>
  40dcb8:	mov    esi,0x1
  40dcbd:	call   40c250 <__sprintf_chk@plt+0x9c70>
  40dcc2:	mov    rcx,r14
  40dcc5:	mov    rdx,r13
  40dcc8:	xor    esi,esi
  40dcca:	mov    rdi,r12
  40dccd:	call   40dbe0 <__sprintf_chk@plt+0xb600>
  40dcd2:	mov    ebp,0x1
  40dcd7:	pop    rbx
  40dcd8:	mov    eax,ebp
  40dcda:	pop    rbp
  40dcdb:	pop    r12
  40dcdd:	pop    r13
  40dcdf:	pop    r14
  40dce1:	ret    
  40dce2:	nop    WORD PTR [rax+rax*1+0x0]
  40dce8:	mov    esi,ebp
  40dcea:	call   40c250 <__sprintf_chk@plt+0x9c70>
  40dcef:	test   ebp,ebp
  40dcf1:	jle    40dcd7 <__sprintf_chk@plt+0xb6f7>
  40dcf3:	xor    ebx,ebx
  40dcf5:	nop    DWORD PTR [rax]
  40dcf8:	mov    esi,ebx
  40dcfa:	mov    rcx,r14
  40dcfd:	mov    rdx,r13
  40dd00:	mov    rdi,r12
  40dd03:	inc    ebx
  40dd05:	call   40dbe0 <__sprintf_chk@plt+0xb600>
  40dd0a:	cmp    ebp,ebx
  40dd0c:	jne    40dcf8 <__sprintf_chk@plt+0xb718>
  40dd0e:	pop    rbx
  40dd0f:	mov    eax,ebp
  40dd11:	pop    rbp
  40dd12:	pop    r12
  40dd14:	pop    r13
  40dd16:	pop    r14
  40dd18:	ret    
  40dd19:	nop    DWORD PTR [rax+0x0]
  40dd20:	endbr64 
  40dd24:	sub    rsp,0x8
  40dd28:	mov    rax,QWORD PTR [rdi+0x10]
  40dd2c:	mov    edx,0x1a
  40dd31:	mov    DWORD PTR [rax+0x8],0x0
  40dd38:	add    rax,0x10
  40dd3c:	mov    QWORD PTR [rdi+0x10],rax
  40dd40:	lea    rsi,[rip+0x96be]        # 417405 <__sprintf_chk@plt+0x14e25>
  40dd47:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40dd4c:	mov    eax,0x2
  40dd51:	add    rsp,0x8
  40dd55:	ret    
  40dd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd60:	test   rsi,rsi
  40dd63:	je     40dd90 <__sprintf_chk@plt+0xb7b0>
  40dd65:	push   rbp
  40dd66:	mov    rbp,rdi
  40dd69:	mov    rdi,rsi
  40dd6c:	push   rbx
  40dd6d:	mov    rbx,rsi
  40dd70:	sub    rsp,0x8
  40dd74:	call   4023d0 <strlen@plt>
  40dd79:	add    rsp,0x8
  40dd7d:	mov    rsi,rbx
  40dd80:	pop    rbx
  40dd81:	mov    rdi,rbp
  40dd84:	mov    rdx,rax
  40dd87:	pop    rbp
  40dd88:	jmp    40bfc0 <__sprintf_chk@plt+0x99e0>
  40dd8d:	nop    DWORD PTR [rax]
  40dd90:	mov    rax,QWORD PTR [rdi+0x10]
  40dd94:	mov    DWORD PTR [rax+0x8],0x0
  40dd9b:	add    rax,0x10
  40dd9f:	mov    QWORD PTR [rdi+0x10],rax
  40dda3:	ret    
  40dda4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ddaf:	nop
  40ddb0:	endbr64 
  40ddb4:	push   rbx
  40ddb5:	mov    esi,0x1
  40ddba:	mov    rbx,rdi
  40ddbd:	call   40d010 <__sprintf_chk@plt+0xaa30>
  40ddc2:	mov    rax,QWORD PTR [rbx+0x18]
  40ddc6:	cmp    rax,QWORD PTR [rbx+0x10]
  40ddca:	jae    40de08 <__sprintf_chk@plt+0xb828>
  40ddcc:	lea    rdx,[rip+0xa23d]        # 418010 <__sprintf_chk@plt+0x15a30>
  40ddd3:	cmp    rax,rdx
  40ddd6:	je     40de08 <__sprintf_chk@plt+0xb828>
  40ddd8:	movsxd rax,DWORD PTR [rax+0x8]
  40dddc:	lea    rsi,[rip+0x9519]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  40dde3:	cmp    eax,0xffffffff
  40dde6:	je     40ddf3 <__sprintf_chk@plt+0xb813>
  40dde8:	lea    rdx,[rip+0x10fb1]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  40ddef:	mov    rsi,QWORD PTR [rdx+rax*8]
  40ddf3:	mov    rdi,rbx
  40ddf6:	call   40dd60 <__sprintf_chk@plt+0xb780>
  40ddfb:	mov    eax,0x1
  40de00:	pop    rbx
  40de01:	ret    
  40de02:	nop    WORD PTR [rax+rax*1+0x0]
  40de08:	mov    rdi,rbx
  40de0b:	lea    rsi,[rip+0x94ea]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  40de12:	call   40dd60 <__sprintf_chk@plt+0xb780>
  40de17:	mov    eax,0x1
  40de1c:	pop    rbx
  40de1d:	ret    
  40de1e:	xchg   ax,ax
  40de20:	endbr64 
  40de24:	push   r12
  40de26:	push   rbp
  40de27:	push   rbx
  40de28:	mov    rbx,rdi
  40de2b:	mov    rax,QWORD PTR [rdi+0x18]
  40de2f:	lea    rdx,[rax+0x10]
  40de33:	cmp    rdx,QWORD PTR [rdi+0x10]
  40de37:	jae    40df10 <__sprintf_chk@plt+0xb930>
  40de3d:	lea    r12,[rip+0xa1cc]        # 418010 <__sprintf_chk@plt+0x15a30>
  40de44:	cmp    rdx,r12
  40de47:	je     40df10 <__sprintf_chk@plt+0xb930>
  40de4d:	mov    ebp,DWORD PTR [rax+0x18]
  40de50:	mov    edx,0x5
  40de55:	mov    esi,0x1
  40de5a:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40de5f:	test   ebp,ebp
  40de61:	je     40de6c <__sprintf_chk@plt+0xb88c>
  40de63:	cmp    ebp,0x5
  40de66:	jne    40df28 <__sprintf_chk@plt+0xb948>
  40de6c:	mov    rdi,rbx
  40de6f:	call   404150 <__sprintf_chk@plt+0x1b70>
  40de74:	test   eax,eax
  40de76:	jne    40dec0 <__sprintf_chk@plt+0xb8e0>
  40de78:	mov    rax,QWORD PTR [rbx+0x10]
  40de7c:	mov    rcx,QWORD PTR [rbx+0x18]
  40de80:	lea    rdx,[rcx+0x20]
  40de84:	cmp    rdx,rax
  40de87:	jbe    40dea0 <__sprintf_chk@plt+0xb8c0>
  40de89:	nop    DWORD PTR [rax+0x0]
  40de90:	add    rax,0x10
  40de94:	mov    DWORD PTR [rax-0x8],0x0
  40de9b:	cmp    rax,rdx
  40de9e:	jb     40de90 <__sprintf_chk@plt+0xb8b0>
  40dea0:	mov    QWORD PTR [rbx+0x10],rdx
  40dea4:	mov    rdi,rbx
  40dea7:	mov    esi,0x1
  40deac:	call   404350 <__sprintf_chk@plt+0x1d70>
  40deb1:	pop    rbx
  40deb2:	pop    rbp
  40deb3:	mov    eax,0x1
  40deb8:	pop    r12
  40deba:	ret    
  40debb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dec0:	lea    rsi,[rip+0x956f]        # 417436 <__sprintf_chk@plt+0x14e56>
  40dec7:	call   40dd60 <__sprintf_chk@plt+0xb780>
  40decc:	mov    esi,0xfffffffe
  40ded1:	mov    rdi,rbx
  40ded4:	call   403e70 <__sprintf_chk@plt+0x1890>
  40ded9:	mov    rax,QWORD PTR [rbx+0x10]
  40dedd:	lea    rdx,[rax-0x10]
  40dee1:	cmp    rdx,r12
  40dee4:	je     40deed <__sprintf_chk@plt+0xb90d>
  40dee6:	mov    edx,DWORD PTR [rax-0x8]
  40dee9:	test   edx,edx
  40deeb:	je     40df40 <__sprintf_chk@plt+0xb960>
  40deed:	mov    esi,0xfffffffe
  40def2:	mov    rdi,rbx
  40def5:	call   403d50 <__sprintf_chk@plt+0x1770>
  40defa:	lea    rsi,[rip+0xa2ef]        # 4181f0 <__sprintf_chk@plt+0x15c10>
  40df01:	mov    rdi,rbx
  40df04:	xor    eax,eax
  40df06:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  40df0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df10:	mov    edx,0x5
  40df15:	mov    esi,0x1
  40df1a:	mov    rdi,rbx
  40df1d:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  40df22:	nop    WORD PTR [rax+rax*1+0x0]
  40df28:	lea    rdx,[rip+0x94f1]        # 417420 <__sprintf_chk@plt+0x14e40>
  40df2f:	mov    esi,0x2
  40df34:	mov    rdi,rbx
  40df37:	call   40c330 <__sprintf_chk@plt+0x9d50>
  40df3c:	nop    DWORD PTR [rax+0x0]
  40df40:	sub    rax,0x20
  40df44:	mov    QWORD PTR [rbx+0x10],rax
  40df48:	jmp    40de7c <__sprintf_chk@plt+0xb89c>
  40df4d:	nop    DWORD PTR [rax]
  40df50:	endbr64 
  40df54:	push   rbp
  40df55:	mov    esi,0x1
  40df5a:	mov    rbp,rdi
  40df5d:	push   rbx
  40df5e:	sub    rsp,0x18
  40df62:	mov    rax,QWORD PTR fs:0x28
  40df6b:	mov    QWORD PTR [rsp+0x8],rax
  40df70:	xor    eax,eax
  40df72:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40df77:	mov    ebx,eax
  40df79:	mov    rax,QWORD PTR [rbp+0x18]
  40df7d:	lea    rdx,[rax+0x10]
  40df81:	cmp    rdx,QWORD PTR [rbp+0x10]
  40df85:	jae    40df99 <__sprintf_chk@plt+0xb9b9>
  40df87:	lea    rcx,[rip+0xa082]        # 418010 <__sprintf_chk@plt+0x15a30>
  40df8e:	cmp    rdx,rcx
  40df91:	je     40df99 <__sprintf_chk@plt+0xb9b9>
  40df93:	cmp    DWORD PTR [rax+0x18],0xffffffff
  40df97:	jne    40e000 <__sprintf_chk@plt+0xba20>
  40df99:	mov    edx,0x8
  40df9e:	lea    rdi,[rip+0x949d]        # 417442 <__sprintf_chk@plt+0x14e62>
  40dfa5:	mov    ecx,0x7
  40dfaa:	movsxd rax,ecx
  40dfad:	mov    rsi,rsp
  40dfb0:	add    rax,rsi
  40dfb3:	lea    r8,[rsp-0x1]
  40dfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfc0:	mov    ecx,ebx
  40dfc2:	and    ecx,0xf
  40dfc5:	movzx  ecx,BYTE PTR [rdi+rcx*1]
  40dfc9:	dec    rax
  40dfcc:	mov    BYTE PTR [rax+0x1],cl
  40dfcf:	shr    ebx,0x4
  40dfd2:	cmp    rax,r8
  40dfd5:	jne    40dfc0 <__sprintf_chk@plt+0xb9e0>
  40dfd7:	mov    rdi,rbp
  40dfda:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40dfdf:	mov    rsi,QWORD PTR [rsp+0x8]
  40dfe4:	xor    rsi,QWORD PTR fs:0x28
  40dfed:	mov    eax,0x1
  40dff2:	jne    40e05b <__sprintf_chk@plt+0xba7b>
  40dff4:	add    rsp,0x18
  40dff8:	pop    rbx
  40dff9:	pop    rbp
  40dffa:	ret    
  40dffb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e000:	mov    esi,0x2
  40e005:	mov    rdi,rbp
  40e008:	call   40c460 <__sprintf_chk@plt+0x9e80>
  40e00d:	test   eax,eax
  40e00f:	js     40e030 <__sprintf_chk@plt+0xba50>
  40e011:	cmp    eax,0x8
  40e014:	mov    edx,0x8
  40e019:	cmovle edx,eax
  40e01c:	lea    ecx,[rdx-0x1]
  40e01f:	movsxd rdx,edx
  40e022:	cmp    ecx,0xffffffff
  40e025:	jne    40e04f <__sprintf_chk@plt+0xba6f>
  40e027:	mov    rsi,rsp
  40e02a:	jmp    40dfd7 <__sprintf_chk@plt+0xb9f7>
  40e02c:	nop    DWORD PTR [rax+0x0]
  40e030:	neg    eax
  40e032:	mov    edx,0x8
  40e037:	cmp    eax,0x8
  40e03a:	cmovg  eax,edx
  40e03d:	lea    rdi,[rip+0x940f]        # 417453 <__sprintf_chk@plt+0x14e73>
  40e044:	lea    ecx,[rax-0x1]
  40e047:	movsxd rdx,eax
  40e04a:	jmp    40dfaa <__sprintf_chk@plt+0xb9ca>
  40e04f:	lea    rdi,[rip+0x93ec]        # 417442 <__sprintf_chk@plt+0x14e62>
  40e056:	jmp    40dfaa <__sprintf_chk@plt+0xb9ca>
  40e05b:	call   4023e0 <__stack_chk_fail@plt>
  40e060:	endbr64 
  40e064:	push   rbp
  40e065:	mov    esi,0x1
  40e06a:	push   rbx
  40e06b:	mov    rbx,rdi
  40e06e:	sub    rsp,0x8
  40e072:	call   40d010 <__sprintf_chk@plt+0xaa30>
  40e077:	mov    esi,0x1
  40e07c:	mov    rdi,rbx
  40e07f:	call   403e40 <__sprintf_chk@plt+0x1860>
  40e084:	mov    rbp,rax
  40e087:	lea    rdx,[rip+0x92a1]        # 41732f <__sprintf_chk@plt+0x14d4f>
  40e08e:	mov    esi,0xffffd8f0
  40e093:	mov    rdi,rbx
  40e096:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  40e09b:	test   rbp,rbp
  40e09e:	je     40e0ac <__sprintf_chk@plt+0xbacc>
  40e0a0:	mov    rdi,rbx
  40e0a3:	call   404150 <__sprintf_chk@plt+0x1b70>
  40e0a8:	test   eax,eax
  40e0aa:	jne    40e0d0 <__sprintf_chk@plt+0xbaf0>
  40e0ac:	mov    rax,QWORD PTR [rbx+0x10]
  40e0b0:	mov    DWORD PTR [rax+0x8],0x0
  40e0b7:	add    rax,0x10
  40e0bb:	mov    QWORD PTR [rbx+0x10],rax
  40e0bf:	add    rsp,0x8
  40e0c3:	pop    rbx
  40e0c4:	mov    eax,0x1
  40e0c9:	pop    rbp
  40e0ca:	ret    
  40e0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0d0:	mov    edx,0xffffffff
  40e0d5:	mov    esi,0xfffffffe
  40e0da:	call   403dd0 <__sprintf_chk@plt+0x17f0>
  40e0df:	test   eax,eax
  40e0e1:	je     40e0ac <__sprintf_chk@plt+0xbacc>
  40e0e3:	cmp    QWORD PTR [rbp+0x0],0x0
  40e0e8:	je     40e100 <__sprintf_chk@plt+0xbb20>
  40e0ea:	mov    edx,0x4
  40e0ef:	lea    rsi,[rip+0x9281]        # 417377 <__sprintf_chk@plt+0x14d97>
  40e0f6:	mov    rdi,rbx
  40e0f9:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40e0fe:	jmp    40e0bf <__sprintf_chk@plt+0xbadf>
  40e100:	mov    edx,0xb
  40e105:	lea    rsi,[rip+0x9264]        # 417370 <__sprintf_chk@plt+0x14d90>
  40e10c:	mov    rdi,rbx
  40e10f:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  40e114:	jmp    40e0bf <__sprintf_chk@plt+0xbadf>
  40e116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e120:	push   r12
  40e122:	push   rbp
  40e123:	mov    rbp,rsi
  40e126:	push   rbx
  40e127:	mov    rbx,rdi
  40e12a:	mov    rax,QWORD PTR [rdi+0x20]
  40e12e:	mov    rsi,QWORD PTR [rax+0x70]
  40e132:	cmp    QWORD PTR [rax+0x78],rsi
  40e136:	jae    40e1b0 <__sprintf_chk@plt+0xbbd0>
  40e138:	mov    rax,QWORD PTR [rbx+0x28]
  40e13c:	cmp    rax,QWORD PTR [rbx+0x50]
  40e140:	je     40e1bf <__sprintf_chk@plt+0xbbdf>
  40e142:	mov    rax,QWORD PTR [rax+0x8]
  40e146:	mov    rax,QWORD PTR [rax]
  40e149:	mov    r12,QWORD PTR [rax+0x18]
  40e14d:	lea    rcx,[rbp+0x28]
  40e151:	xor    edx,edx
  40e153:	mov    rdi,rbx
  40e156:	xor    esi,esi
  40e158:	call   404640 <__sprintf_chk@plt+0x2060>
  40e15d:	mov    rcx,QWORD PTR [rbx+0x20]
  40e161:	movzx  edx,BYTE PTR [rcx+0x20]
  40e165:	mov    BYTE PTR [rax+0x8],0x7
  40e169:	and    edx,0x3
  40e16c:	mov    BYTE PTR [rax+0x9],dl
  40e16f:	mov    rdx,QWORD PTR [rcx+0xb0]
  40e176:	mov    QWORD PTR [rax+0x20],rbp
  40e17a:	mov    rcx,QWORD PTR [rdx]
  40e17d:	mov    QWORD PTR [rax+0x10],0x0
  40e185:	mov    QWORD PTR [rax+0x18],r12
  40e189:	mov    QWORD PTR [rax],rcx
  40e18c:	mov    QWORD PTR [rdx],rax
  40e18f:	mov    rdx,QWORD PTR [rbx+0x10]
  40e193:	mov    QWORD PTR [rdx],rax
  40e196:	mov    DWORD PTR [rdx+0x8],0x7
  40e19d:	add    rdx,0x10
  40e1a1:	mov    QWORD PTR [rbx+0x10],rdx
  40e1a5:	pop    rbx
  40e1a6:	pop    rbp
  40e1a7:	add    rax,0x28
  40e1ab:	pop    r12
  40e1ad:	ret    
  40e1ae:	xchg   ax,ax
  40e1b0:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40e1b5:	mov    rax,QWORD PTR [rbx+0x28]
  40e1b9:	cmp    rax,QWORD PTR [rbx+0x50]
  40e1bd:	jne    40e142 <__sprintf_chk@plt+0xbb62>
  40e1bf:	mov    r12,QWORD PTR [rbx+0x78]
  40e1c3:	jmp    40e14d <__sprintf_chk@plt+0xbb6d>
  40e1c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e1d0:	push   rbp
  40e1d1:	mov    esi,0x8
  40e1d6:	push   rbx
  40e1d7:	mov    rbx,rdi
  40e1da:	sub    rsp,0x8
  40e1de:	call   40e120 <__sprintf_chk@plt+0xbb40>
  40e1e3:	mov    QWORD PTR [rax],0x0
  40e1ea:	mov    rdi,rbx
  40e1ed:	lea    rdx,[rip+0x913b]        # 41732f <__sprintf_chk@plt+0x14d4f>
  40e1f4:	mov    esi,0xffffd8f0
  40e1f9:	mov    rbp,rax
  40e1fc:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  40e201:	mov    rdi,rbx
  40e204:	mov    esi,0xfffffffe
  40e209:	call   404350 <__sprintf_chk@plt+0x1d70>
  40e20e:	add    rsp,0x8
  40e212:	pop    rbx
  40e213:	mov    rax,rbp
  40e216:	pop    rbp
  40e217:	ret    
  40e218:	nop    DWORD PTR [rax+rax*1+0x0]
  40e220:	push   r12
  40e222:	mov    r12,rdi
  40e225:	push   rbp
  40e226:	mov    rbp,rsi
  40e229:	mov    rdi,rbp
  40e22c:	push   rbx
  40e22d:	mov    rsi,rdx
  40e230:	mov    rdx,rcx
  40e233:	sub    rsp,0x20
  40e237:	mov    rax,QWORD PTR fs:0x28
  40e240:	mov    QWORD PTR [rsp+0x18],rax
  40e245:	xor    eax,eax
  40e247:	call   407490 <__sprintf_chk@plt+0x4eb0>
  40e24c:	mov    rbx,rax
  40e24f:	mov    rax,QWORD PTR [r12]
  40e253:	mov    rsi,QWORD PTR [rax+0x8]
  40e257:	mov    eax,0x1
  40e25c:	movzx  edx,BYTE PTR [rsi+0xb]
  40e260:	shlx   rax,rax,rdx
  40e265:	dec    eax
  40e267:	and    eax,DWORD PTR [rbx+0xc]
  40e26a:	cdqe   
  40e26c:	lea    rdx,[rax+rax*4]
  40e270:	mov    rax,QWORD PTR [rsi+0x20]
  40e274:	lea    rax,[rax+rdx*8]
  40e278:	jmp    40e289 <__sprintf_chk@plt+0xbca9>
  40e27a:	nop    WORD PTR [rax+rax*1+0x0]
  40e280:	mov    rax,QWORD PTR [rax+0x20]
  40e284:	test   rax,rax
  40e287:	je     40e2f0 <__sprintf_chk@plt+0xbd10>
  40e289:	cmp    DWORD PTR [rax+0x18],0x4
  40e28d:	jne    40e280 <__sprintf_chk@plt+0xbca0>
  40e28f:	cmp    rbx,QWORD PTR [rax+0x10]
  40e293:	jne    40e280 <__sprintf_chk@plt+0xbca0>
  40e295:	lea    rdx,[rip+0x9d74]        # 418010 <__sprintf_chk@plt+0x15a30>
  40e29c:	cmp    rax,rdx
  40e29f:	je     40e2f0 <__sprintf_chk@plt+0xbd10>
  40e2a1:	mov    edx,DWORD PTR [rax+0x8]
  40e2a4:	test   edx,edx
  40e2a6:	jne    40e2c3 <__sprintf_chk@plt+0xbce3>
  40e2a8:	mov    DWORD PTR [rax],0x1
  40e2ae:	mov    DWORD PTR [rax+0x8],0x1
  40e2b5:	mov    rax,QWORD PTR [rbp+0x20]
  40e2b9:	mov    rcx,QWORD PTR [rax+0x70]
  40e2bd:	cmp    QWORD PTR [rax+0x78],rcx
  40e2c1:	jae    40e2e0 <__sprintf_chk@plt+0xbd00>
  40e2c3:	mov    rcx,QWORD PTR [rsp+0x18]
  40e2c8:	xor    rcx,QWORD PTR fs:0x28
  40e2d1:	mov    rax,rbx
  40e2d4:	jne    40e309 <__sprintf_chk@plt+0xbd29>
  40e2d6:	add    rsp,0x20
  40e2da:	pop    rbx
  40e2db:	pop    rbp
  40e2dc:	pop    r12
  40e2de:	ret    
  40e2df:	nop
  40e2e0:	mov    rdi,rbp
  40e2e3:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  40e2e8:	jmp    40e2c3 <__sprintf_chk@plt+0xbce3>
  40e2ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e2f0:	mov    rdx,rsp
  40e2f3:	mov    rdi,rbp
  40e2f6:	mov    QWORD PTR [rsp],rbx
  40e2fa:	mov    DWORD PTR [rsp+0x8],0x4
  40e302:	call   408bf0 <__sprintf_chk@plt+0x6610>
  40e307:	jmp    40e2a1 <__sprintf_chk@plt+0xbcc1>
  40e309:	call   4023e0 <__stack_chk_fail@plt>
  40e30e:	xchg   ax,ax
  40e310:	push   r12
  40e312:	mov    r12d,edx
  40e315:	push   rbp
  40e316:	mov    rbp,rsi
  40e319:	push   rbx
  40e31a:	mov    rbx,rdi
  40e31d:	mov    esi,DWORD PTR [rdi]
  40e31f:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e324:	mov    rdi,QWORD PTR [rbx+0x40]
  40e328:	mov    rax,QWORD PTR [rdi]
  40e32b:	lea    rdx,[rax-0x1]
  40e32f:	mov    QWORD PTR [rdi],rdx
  40e332:	test   rax,rax
  40e335:	je     40e4ae <__sprintf_chk@plt+0xbece>
  40e33b:	mov    rax,QWORD PTR [rdi+0x8]
  40e33f:	lea    rdx,[rax+0x1]
  40e343:	mov    QWORD PTR [rdi+0x8],rdx
  40e347:	movzx  esi,BYTE PTR [rax]
  40e34a:	mov    DWORD PTR [rbx],esi
  40e34c:	cmp    esi,0xa
  40e34f:	je     40e4c0 <__sprintf_chk@plt+0xbee0>
  40e355:	cmp    esi,0xd
  40e358:	je     40e4c0 <__sprintf_chk@plt+0xbee0>
  40e35e:	xchg   ax,ax
  40e360:	cmp    esi,0xa
  40e363:	je     40e390 <__sprintf_chk@plt+0xbdb0>
  40e365:	jle    40e430 <__sprintf_chk@plt+0xbe50>
  40e36b:	cmp    esi,0xd
  40e36e:	je     40e390 <__sprintf_chk@plt+0xbdb0>
  40e370:	cmp    esi,0x5d
  40e373:	jne    40e460 <__sprintf_chk@plt+0xbe80>
  40e379:	mov    rdi,rbx
  40e37c:	call   40aa50 <__sprintf_chk@plt+0x8470>
  40e381:	cmp    eax,r12d
  40e384:	je     40e3c0 <__sprintf_chk@plt+0xbde0>
  40e386:	mov    esi,DWORD PTR [rbx]
  40e388:	cmp    esi,0xa
  40e38b:	jne    40e365 <__sprintf_chk@plt+0xbd85>
  40e38d:	nop    DWORD PTR [rax]
  40e390:	mov    rdi,rbx
  40e393:	mov    esi,0xa
  40e398:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e39d:	mov    rdi,rbx
  40e3a0:	call   4097a0 <__sprintf_chk@plt+0x71c0>
  40e3a5:	test   rbp,rbp
  40e3a8:	jne    40e386 <__sprintf_chk@plt+0xbda6>
  40e3aa:	mov    rax,QWORD PTR [rbx+0x48]
  40e3ae:	mov    esi,DWORD PTR [rbx]
  40e3b0:	mov    QWORD PTR [rax+0x8],0x0
  40e3b8:	jmp    40e360 <__sprintf_chk@plt+0xbd80>
  40e3ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e3c0:	mov    esi,DWORD PTR [rbx]
  40e3c2:	mov    rdi,rbx
  40e3c5:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e3ca:	mov    rdi,QWORD PTR [rbx+0x40]
  40e3ce:	mov    rax,QWORD PTR [rdi]
  40e3d1:	lea    rdx,[rax-0x1]
  40e3d5:	mov    QWORD PTR [rdi],rdx
  40e3d8:	test   rax,rax
  40e3db:	je     40e4cf <__sprintf_chk@plt+0xbeef>
  40e3e1:	mov    rax,QWORD PTR [rdi+0x8]
  40e3e5:	lea    rdx,[rax+0x1]
  40e3e9:	mov    QWORD PTR [rdi+0x8],rdx
  40e3ed:	movzx  eax,BYTE PTR [rax]
  40e3f0:	mov    DWORD PTR [rbx],eax
  40e3f2:	test   rbp,rbp
  40e3f5:	je     40e426 <__sprintf_chk@plt+0xbe46>
  40e3f7:	mov    rdx,QWORD PTR [rbx+0x48]
  40e3fb:	add    r12d,0x2
  40e3ff:	mov    rcx,QWORD PTR [rdx+0x8]
  40e403:	lea    eax,[r12+r12*1]
  40e407:	movsxd r12,r12d
  40e40a:	cdqe   
  40e40c:	add    r12,QWORD PTR [rdx]
  40e40f:	mov    rsi,QWORD PTR [rbx+0x38]
  40e413:	sub    rcx,rax
  40e416:	mov    rdx,r12
  40e419:	lea    rdi,[rbx+0x30]
  40e41d:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40e422:	mov    QWORD PTR [rbp+0x0],rax
  40e426:	pop    rbx
  40e427:	pop    rbp
  40e428:	pop    r12
  40e42a:	ret    
  40e42b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e430:	cmp    esi,0xffffffff
  40e433:	jne    40e460 <__sprintf_chk@plt+0xbe80>
  40e435:	test   rbp,rbp
  40e438:	lea    rsi,[rip+0x9025]        # 417464 <__sprintf_chk@plt+0x14e84>
  40e43f:	lea    rax,[rip+0x9035]        # 41747b <__sprintf_chk@plt+0x14e9b>
  40e446:	cmove  rsi,rax
  40e44a:	mov    edx,0x11f
  40e44f:	mov    rdi,rbx
  40e452:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40e457:	nop    WORD PTR [rax+rax*1+0x0]
  40e460:	test   rbp,rbp
  40e463:	je     40e46d <__sprintf_chk@plt+0xbe8d>
  40e465:	mov    rdi,rbx
  40e468:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e46d:	mov    rdi,QWORD PTR [rbx+0x40]
  40e471:	mov    rax,QWORD PTR [rdi]
  40e474:	lea    rdx,[rax-0x1]
  40e478:	mov    QWORD PTR [rdi],rdx
  40e47b:	test   rax,rax
  40e47e:	je     40e4a0 <__sprintf_chk@plt+0xbec0>
  40e480:	mov    rax,QWORD PTR [rdi+0x8]
  40e484:	lea    rdx,[rax+0x1]
  40e488:	mov    QWORD PTR [rdi+0x8],rdx
  40e48c:	movzx  esi,BYTE PTR [rax]
  40e48f:	mov    DWORD PTR [rbx],esi
  40e491:	jmp    40e360 <__sprintf_chk@plt+0xbd80>
  40e496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e4a0:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40e4a5:	mov    esi,eax
  40e4a7:	mov    DWORD PTR [rbx],esi
  40e4a9:	jmp    40e360 <__sprintf_chk@plt+0xbd80>
  40e4ae:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40e4b3:	mov    esi,eax
  40e4b5:	mov    DWORD PTR [rbx],esi
  40e4b7:	cmp    esi,0xa
  40e4ba:	jne    40e355 <__sprintf_chk@plt+0xbd75>
  40e4c0:	mov    rdi,rbx
  40e4c3:	call   4097a0 <__sprintf_chk@plt+0x71c0>
  40e4c8:	mov    esi,DWORD PTR [rbx]
  40e4ca:	jmp    40e360 <__sprintf_chk@plt+0xbd80>
  40e4cf:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40e4d4:	jmp    40e3f0 <__sprintf_chk@plt+0xbe10>
  40e4d9:	nop    DWORD PTR [rax+0x0]
  40e4e0:	push   r15
  40e4e2:	push   r14
  40e4e4:	push   r13
  40e4e6:	mov    r13d,0x4801
  40e4ec:	push   r12
  40e4ee:	mov    r12,rsi
  40e4f1:	push   rbp
  40e4f2:	mov    rbp,rdi
  40e4f5:	push   rbx
  40e4f6:	sub    rsp,0x18
  40e4fa:	mov    rax,QWORD PTR [rdi+0x48]
  40e4fe:	mov    ebx,DWORD PTR [rdi]
  40e500:	mov    QWORD PTR [rax+0x8],0x0
  40e508:	cmp    ebx,0x2d
  40e50b:	je     40e678 <__sprintf_chk@plt+0xc098>
  40e511:	jle    40e5a8 <__sprintf_chk@plt+0xbfc8>
  40e517:	cmp    ebx,0x3d
  40e51a:	je     40e8f0 <__sprintf_chk@plt+0xc310>
  40e520:	jle    40e5e0 <__sprintf_chk@plt+0xc000>
  40e526:	cmp    ebx,0x5b
  40e529:	je     40e958 <__sprintf_chk@plt+0xc378>
  40e52f:	cmp    ebx,0x7e
  40e532:	je     40e988 <__sprintf_chk@plt+0xc3a8>
  40e538:	cmp    ebx,0x3e
  40e53b:	je     40ea70 <__sprintf_chk@plt+0xc490>
  40e541:	call   4025d0 <__ctype_b_loc@plt>
  40e546:	mov    r14,rax
  40e549:	mov    rdx,QWORD PTR [r14]
  40e54c:	movsxd rax,ebx
  40e54f:	movzx  eax,WORD PTR [rdx+rax*2]
  40e553:	test   ah,0x20
  40e556:	jne    40eaf8 <__sprintf_chk@plt+0xc518>
  40e55c:	test   ah,0x8
  40e55f:	jne    40ea54 <__sprintf_chk@plt+0xc474>
  40e565:	test   ah,0x4
  40e568:	jne    40e810 <__sprintf_chk@plt+0xc230>
  40e56e:	cmp    ebx,0x5f
  40e571:	je     40e810 <__sprintf_chk@plt+0xc230>
  40e577:	mov    rdi,QWORD PTR [rbp+0x40]
  40e57b:	mov    rax,QWORD PTR [rdi]
  40e57e:	lea    rdx,[rax-0x1]
  40e582:	mov    QWORD PTR [rdi],rdx
  40e585:	test   rax,rax
  40e588:	je     40ed6a <__sprintf_chk@plt+0xc78a>
  40e58e:	mov    rax,QWORD PTR [rdi+0x8]
  40e592:	lea    rdx,[rax+0x1]
  40e596:	mov    QWORD PTR [rdi+0x8],rdx
  40e59a:	movzx  eax,BYTE PTR [rax]
  40e59d:	mov    DWORD PTR [rbp+0x0],eax
  40e5a0:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e5a2:	nop    WORD PTR [rax+rax*1+0x0]
  40e5a8:	cmp    ebx,0xd
  40e5ab:	je     40e661 <__sprintf_chk@plt+0xc081>
  40e5b1:	jg     40e720 <__sprintf_chk@plt+0xc140>
  40e5b7:	cmp    ebx,0xffffffff
  40e5ba:	jne    40e658 <__sprintf_chk@plt+0xc078>
  40e5c0:	mov    ebx,0x11f
  40e5c5:	add    rsp,0x18
  40e5c9:	mov    eax,ebx
  40e5cb:	pop    rbx
  40e5cc:	pop    rbp
  40e5cd:	pop    r12
  40e5cf:	pop    r13
  40e5d1:	pop    r14
  40e5d3:	pop    r15
  40e5d5:	ret    
  40e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5e0:	cmp    ebx,0x2e
  40e5e3:	je     40e9f0 <__sprintf_chk@plt+0xc410>
  40e5e9:	cmp    ebx,0x3c
  40e5ec:	jne    40e541 <__sprintf_chk@plt+0xbf61>
  40e5f2:	mov    rdi,QWORD PTR [rbp+0x40]
  40e5f6:	mov    rax,QWORD PTR [rdi]
  40e5f9:	lea    rdx,[rax-0x1]
  40e5fd:	mov    QWORD PTR [rdi],rdx
  40e600:	test   rax,rax
  40e603:	je     40eae8 <__sprintf_chk@plt+0xc508>
  40e609:	mov    rax,QWORD PTR [rdi+0x8]
  40e60d:	lea    rdx,[rax+0x1]
  40e611:	mov    QWORD PTR [rdi+0x8],rdx
  40e615:	movzx  eax,BYTE PTR [rax]
  40e618:	mov    DWORD PTR [rbp+0x0],eax
  40e61b:	cmp    eax,0x3d
  40e61e:	jne    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e620:	mov    rdi,QWORD PTR [rbp+0x40]
  40e624:	mov    rax,QWORD PTR [rdi]
  40e627:	lea    rdx,[rax-0x1]
  40e62b:	mov    QWORD PTR [rdi],rdx
  40e62e:	test   rax,rax
  40e631:	je     40ed30 <__sprintf_chk@plt+0xc750>
  40e637:	mov    rax,QWORD PTR [rdi+0x8]
  40e63b:	lea    rdx,[rax+0x1]
  40e63f:	mov    QWORD PTR [rdi+0x8],rdx
  40e643:	movzx  eax,BYTE PTR [rax]
  40e646:	mov    DWORD PTR [rbp+0x0],eax
  40e649:	mov    ebx,0x11a
  40e64e:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e653:	nop    DWORD PTR [rax+rax*1+0x0]
  40e658:	cmp    ebx,0xa
  40e65b:	jne    40e541 <__sprintf_chk@plt+0xbf61>
  40e661:	mov    rdi,rbp
  40e664:	call   4097a0 <__sprintf_chk@plt+0x71c0>
  40e669:	mov    ebx,DWORD PTR [rbp+0x0]
  40e66c:	cmp    ebx,0x2d
  40e66f:	jne    40e511 <__sprintf_chk@plt+0xbf31>
  40e675:	nop    DWORD PTR [rax]
  40e678:	mov    rdi,QWORD PTR [rbp+0x40]
  40e67c:	mov    rax,QWORD PTR [rdi]
  40e67f:	lea    rdx,[rax-0x1]
  40e683:	mov    QWORD PTR [rdi],rdx
  40e686:	test   rax,rax
  40e689:	je     40ec38 <__sprintf_chk@plt+0xc658>
  40e68f:	mov    rax,QWORD PTR [rdi+0x8]
  40e693:	lea    rdx,[rax+0x1]
  40e697:	mov    QWORD PTR [rdi+0x8],rdx
  40e69b:	movzx  eax,BYTE PTR [rax]
  40e69e:	mov    DWORD PTR [rbp+0x0],eax
  40e6a1:	cmp    eax,0x2d
  40e6a4:	jne    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e6aa:	mov    rdi,QWORD PTR [rbp+0x40]
  40e6ae:	mov    rax,QWORD PTR [rdi]
  40e6b1:	lea    rdx,[rax-0x1]
  40e6b5:	mov    QWORD PTR [rdi],rdx
  40e6b8:	test   rax,rax
  40e6bb:	je     40ec58 <__sprintf_chk@plt+0xc678>
  40e6c1:	mov    rax,QWORD PTR [rdi+0x8]
  40e6c5:	lea    rdx,[rax+0x1]
  40e6c9:	mov    QWORD PTR [rdi+0x8],rdx
  40e6cd:	movzx  ebx,BYTE PTR [rax]
  40e6d0:	mov    DWORD PTR [rbp+0x0],ebx
  40e6d3:	cmp    ebx,0x5b
  40e6d6:	jne    40e8c2 <__sprintf_chk@plt+0xc2e2>
  40e6dc:	mov    rdi,rbp
  40e6df:	call   40aa50 <__sprintf_chk@plt+0x8470>
  40e6e4:	mov    rdx,QWORD PTR [rbp+0x48]
  40e6e8:	mov    QWORD PTR [rdx+0x8],0x0
  40e6f0:	test   eax,eax
  40e6f2:	js     40eb30 <__sprintf_chk@plt+0xc550>
  40e6f8:	mov    edx,eax
  40e6fa:	xor    esi,esi
  40e6fc:	mov    rdi,rbp
  40e6ff:	call   40e310 <__sprintf_chk@plt+0xbd30>
  40e704:	mov    rax,QWORD PTR [rbp+0x48]
  40e708:	mov    ebx,DWORD PTR [rbp+0x0]
  40e70b:	mov    QWORD PTR [rax+0x8],0x0
  40e713:	jmp    40e508 <__sprintf_chk@plt+0xbf28>
  40e718:	nop    DWORD PTR [rax+rax*1+0x0]
  40e720:	cmp    ebx,0x22
  40e723:	je     40e72e <__sprintf_chk@plt+0xc14e>
  40e725:	cmp    ebx,0x27
  40e728:	jne    40e541 <__sprintf_chk@plt+0xbf61>
  40e72e:	mov    esi,ebx
  40e730:	mov    rdi,rbp
  40e733:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e738:	mov    rdi,QWORD PTR [rbp+0x40]
  40e73c:	mov    rax,QWORD PTR [rdi]
  40e73f:	lea    rdx,[rax-0x1]
  40e743:	mov    QWORD PTR [rdi],rdx
  40e746:	test   rax,rax
  40e749:	je     40ead8 <__sprintf_chk@plt+0xc4f8>
  40e74f:	mov    rax,QWORD PTR [rdi+0x8]
  40e753:	lea    rdx,[rax+0x1]
  40e757:	mov    QWORD PTR [rdi+0x8],rdx
  40e75b:	movzx  eax,BYTE PTR [rax]
  40e75e:	mov    DWORD PTR [rbp+0x0],eax
  40e761:	cmp    ebx,eax
  40e763:	je     40ec68 <__sprintf_chk@plt+0xc688>
  40e769:	cmp    eax,0xa
  40e76c:	je     40eb60 <__sprintf_chk@plt+0xc580>
  40e772:	jle    40e890 <__sprintf_chk@plt+0xc2b0>
  40e778:	cmp    eax,0xd
  40e77b:	je     40eb60 <__sprintf_chk@plt+0xc580>
  40e781:	cmp    eax,0x5c
  40e784:	jne    40eb78 <__sprintf_chk@plt+0xc598>
  40e78a:	mov    rdi,QWORD PTR [rbp+0x40]
  40e78e:	mov    rax,QWORD PTR [rdi]
  40e791:	lea    rdx,[rax-0x1]
  40e795:	mov    QWORD PTR [rdi],rdx
  40e798:	test   rax,rax
  40e79b:	je     40eb50 <__sprintf_chk@plt+0xc570>
  40e7a1:	mov    rax,QWORD PTR [rdi+0x8]
  40e7a5:	lea    rdx,[rax+0x1]
  40e7a9:	mov    QWORD PTR [rdi+0x8],rdx
  40e7ad:	movzx  r13d,BYTE PTR [rax]
  40e7b1:	mov    DWORD PTR [rbp+0x0],r13d
  40e7b5:	cmp    r13d,0x62
  40e7b9:	je     40ed95 <__sprintf_chk@plt+0xc7b5>
  40e7bf:	jle    40eba0 <__sprintf_chk@plt+0xc5c0>
  40e7c5:	cmp    r13d,0x72
  40e7c9:	je     40ed56 <__sprintf_chk@plt+0xc776>
  40e7cf:	jg     40eb80 <__sprintf_chk@plt+0xc5a0>
  40e7d5:	cmp    r13d,0x66
  40e7d9:	je     40ecd0 <__sprintf_chk@plt+0xc6f0>
  40e7df:	mov    esi,0xa
  40e7e4:	cmp    r13d,0x6e
  40e7e8:	je     40e730 <__sprintf_chk@plt+0xc150>
  40e7ee:	call   4025d0 <__ctype_b_loc@plt>
  40e7f3:	mov    rdx,rax
  40e7f6:	mov    rcx,QWORD PTR [rdx]
  40e7f9:	movsxd rax,r13d
  40e7fc:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  40e801:	jne    40ed9f <__sprintf_chk@plt+0xc7bf>
  40e807:	mov    esi,r13d
  40e80a:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40e80f:	nop
  40e810:	mov    rdi,rbp
  40e813:	mov    esi,ebx
  40e815:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e81a:	mov    rdi,QWORD PTR [rbp+0x40]
  40e81e:	mov    rax,QWORD PTR [rdi]
  40e821:	lea    rdx,[rax-0x1]
  40e825:	mov    QWORD PTR [rdi],rdx
  40e828:	test   rax,rax
  40e82b:	je     40e880 <__sprintf_chk@plt+0xc2a0>
  40e82d:	mov    rax,QWORD PTR [rdi+0x8]
  40e831:	lea    rdx,[rax+0x1]
  40e835:	mov    QWORD PTR [rdi+0x8],rdx
  40e839:	movzx  ebx,BYTE PTR [rax]
  40e83c:	mov    rdx,QWORD PTR [r14]
  40e83f:	movsxd rax,ebx
  40e842:	mov    DWORD PTR [rbp+0x0],ebx
  40e845:	test   BYTE PTR [rdx+rax*2],0x8
  40e849:	jne    40e810 <__sprintf_chk@plt+0xc230>
  40e84b:	cmp    ebx,0x5f
  40e84e:	je     40e810 <__sprintf_chk@plt+0xc230>
  40e850:	mov    rax,QWORD PTR [rbp+0x48]
  40e854:	mov    rsi,QWORD PTR [rbp+0x38]
  40e858:	mov    rcx,QWORD PTR [rax+0x8]
  40e85c:	mov    rdx,QWORD PTR [rax]
  40e85f:	lea    rdi,[rbp+0x30]
  40e863:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40e868:	movzx  ebx,BYTE PTR [rax+0xa]
  40e86c:	test   bl,bl
  40e86e:	je     40eb40 <__sprintf_chk@plt+0xc560>
  40e874:	add    ebx,0x100
  40e87a:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e87f:	nop
  40e880:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40e885:	mov    ebx,eax
  40e887:	jmp    40e83c <__sprintf_chk@plt+0xc25c>
  40e889:	nop    DWORD PTR [rax+0x0]
  40e890:	cmp    eax,0xffffffff
  40e893:	jne    40eb78 <__sprintf_chk@plt+0xc598>
  40e899:	mov    edx,0x11f
  40e89e:	lea    rsi,[rip+0x8c0c]        # 4174b1 <__sprintf_chk@plt+0x14ed1>
  40e8a5:	mov    rdi,rbp
  40e8a8:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40e8ad:	nop    DWORD PTR [rax]
  40e8b0:	mov    rax,QWORD PTR [rdi+0x8]
  40e8b4:	lea    rdx,[rax+0x1]
  40e8b8:	mov    QWORD PTR [rdi+0x8],rdx
  40e8bc:	movzx  ebx,BYTE PTR [rax]
  40e8bf:	mov    DWORD PTR [rbp+0x0],ebx
  40e8c2:	lea    eax,[rbx+0x1]
  40e8c5:	cmp    eax,0xe
  40e8c8:	ja     40e8d4 <__sprintf_chk@plt+0xc2f4>
  40e8ca:	bt     r13,rax
  40e8ce:	jb     40e508 <__sprintf_chk@plt+0xbf28>
  40e8d4:	mov    rdi,QWORD PTR [rbp+0x40]
  40e8d8:	mov    rax,QWORD PTR [rdi]
  40e8db:	lea    rdx,[rax-0x1]
  40e8df:	mov    QWORD PTR [rdi],rdx
  40e8e2:	test   rax,rax
  40e8e5:	jne    40e8b0 <__sprintf_chk@plt+0xc2d0>
  40e8e7:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40e8ec:	mov    ebx,eax
  40e8ee:	jmp    40e8bf <__sprintf_chk@plt+0xc2df>
  40e8f0:	mov    rdi,QWORD PTR [rbp+0x40]
  40e8f4:	mov    rax,QWORD PTR [rdi]
  40e8f7:	lea    rdx,[rax-0x1]
  40e8fb:	mov    QWORD PTR [rdi],rdx
  40e8fe:	test   rax,rax
  40e901:	je     40ec48 <__sprintf_chk@plt+0xc668>
  40e907:	mov    rax,QWORD PTR [rdi+0x8]
  40e90b:	lea    rdx,[rax+0x1]
  40e90f:	mov    QWORD PTR [rdi+0x8],rdx
  40e913:	movzx  eax,BYTE PTR [rax]
  40e916:	mov    DWORD PTR [rbp+0x0],eax
  40e919:	cmp    eax,0x3d
  40e91c:	jne    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e922:	mov    rdi,QWORD PTR [rbp+0x40]
  40e926:	mov    rax,QWORD PTR [rdi]
  40e929:	lea    rdx,[rax-0x1]
  40e92d:	mov    QWORD PTR [rdi],rdx
  40e930:	test   rax,rax
  40e933:	je     40ed40 <__sprintf_chk@plt+0xc760>
  40e939:	mov    rax,QWORD PTR [rdi+0x8]
  40e93d:	lea    rdx,[rax+0x1]
  40e941:	mov    QWORD PTR [rdi+0x8],rdx
  40e945:	movzx  eax,BYTE PTR [rax]
  40e948:	mov    DWORD PTR [rbp+0x0],eax
  40e94b:	mov    ebx,0x118
  40e950:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e955:	nop    DWORD PTR [rax]
  40e958:	mov    rdi,rbp
  40e95b:	call   40aa50 <__sprintf_chk@plt+0x8470>
  40e960:	test   eax,eax
  40e962:	jns    40ecf0 <__sprintf_chk@plt+0xc710>
  40e968:	cmp    eax,0xffffffff
  40e96b:	je     40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e971:	mov    edx,0x11e
  40e976:	lea    rsi,[rip+0x8b16]        # 417493 <__sprintf_chk@plt+0x14eb3>
  40e97d:	mov    rdi,rbp
  40e980:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40e985:	nop    DWORD PTR [rax]
  40e988:	mov    rdi,QWORD PTR [rbp+0x40]
  40e98c:	mov    rax,QWORD PTR [rdi]
  40e98f:	lea    rdx,[rax-0x1]
  40e993:	mov    QWORD PTR [rdi],rdx
  40e996:	test   rax,rax
  40e999:	je     40ec18 <__sprintf_chk@plt+0xc638>
  40e99f:	mov    rax,QWORD PTR [rdi+0x8]
  40e9a3:	lea    rdx,[rax+0x1]
  40e9a7:	mov    QWORD PTR [rdi+0x8],rdx
  40e9ab:	movzx  eax,BYTE PTR [rax]
  40e9ae:	mov    DWORD PTR [rbp+0x0],eax
  40e9b1:	cmp    eax,0x3d
  40e9b4:	jne    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e9ba:	mov    rdi,QWORD PTR [rbp+0x40]
  40e9be:	mov    rax,QWORD PTR [rdi]
  40e9c1:	lea    rdx,[rax-0x1]
  40e9c5:	mov    QWORD PTR [rdi],rdx
  40e9c8:	test   rax,rax
  40e9cb:	je     40ed10 <__sprintf_chk@plt+0xc730>
  40e9d1:	mov    rax,QWORD PTR [rdi+0x8]
  40e9d5:	lea    rdx,[rax+0x1]
  40e9d9:	mov    QWORD PTR [rdi+0x8],rdx
  40e9dd:	movzx  eax,BYTE PTR [rax]
  40e9e0:	mov    DWORD PTR [rbp+0x0],eax
  40e9e3:	mov    ebx,0x11b
  40e9e8:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40e9ed:	nop    DWORD PTR [rax]
  40e9f0:	mov    rdi,rbp
  40e9f3:	mov    esi,0x2e
  40e9f8:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40e9fd:	mov    rdi,QWORD PTR [rbp+0x40]
  40ea01:	mov    rax,QWORD PTR [rdi]
  40ea04:	lea    rdx,[rax-0x1]
  40ea08:	mov    QWORD PTR [rdi],rdx
  40ea0b:	test   rax,rax
  40ea0e:	je     40ec08 <__sprintf_chk@plt+0xc628>
  40ea14:	mov    rax,QWORD PTR [rdi+0x8]
  40ea18:	lea    rdx,[rax+0x1]
  40ea1c:	mov    QWORD PTR [rdi+0x8],rdx
  40ea20:	movzx  eax,BYTE PTR [rax]
  40ea23:	mov    DWORD PTR [rbp+0x0],eax
  40ea26:	lea    rsi,[rip+0x8ec7]        # 4178f4 <__sprintf_chk@plt+0x15314>
  40ea2d:	mov    rdi,rbp
  40ea30:	call   40ab00 <__sprintf_chk@plt+0x8520>
  40ea35:	test   eax,eax
  40ea37:	jne    40ebe0 <__sprintf_chk@plt+0xc600>
  40ea3d:	call   4025d0 <__ctype_b_loc@plt>
  40ea42:	mov    rax,QWORD PTR [rax]
  40ea45:	movsxd rdx,DWORD PTR [rbp+0x0]
  40ea49:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  40ea4e:	je     40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ea54:	mov    rsi,r12
  40ea57:	mov    rdi,rbp
  40ea5a:	call   40ab70 <__sprintf_chk@plt+0x8590>
  40ea5f:	mov    ebx,0x11c
  40ea64:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ea69:	nop    DWORD PTR [rax+0x0]
  40ea70:	mov    rdi,QWORD PTR [rbp+0x40]
  40ea74:	mov    rax,QWORD PTR [rdi]
  40ea77:	lea    rdx,[rax-0x1]
  40ea7b:	mov    QWORD PTR [rdi],rdx
  40ea7e:	test   rax,rax
  40ea81:	je     40ec28 <__sprintf_chk@plt+0xc648>
  40ea87:	mov    rax,QWORD PTR [rdi+0x8]
  40ea8b:	lea    rdx,[rax+0x1]
  40ea8f:	mov    QWORD PTR [rdi+0x8],rdx
  40ea93:	movzx  eax,BYTE PTR [rax]
  40ea96:	mov    DWORD PTR [rbp+0x0],eax
  40ea99:	cmp    eax,0x3d
  40ea9c:	jne    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40eaa2:	mov    rdi,QWORD PTR [rbp+0x40]
  40eaa6:	mov    rax,QWORD PTR [rdi]
  40eaa9:	lea    rdx,[rax-0x1]
  40eaad:	mov    QWORD PTR [rdi],rdx
  40eab0:	test   rax,rax
  40eab3:	je     40ed20 <__sprintf_chk@plt+0xc740>
  40eab9:	mov    rax,QWORD PTR [rdi+0x8]
  40eabd:	lea    rdx,[rax+0x1]
  40eac1:	mov    QWORD PTR [rdi+0x8],rdx
  40eac5:	movzx  eax,BYTE PTR [rax]
  40eac8:	mov    DWORD PTR [rbp+0x0],eax
  40eacb:	mov    ebx,0x119
  40ead0:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ead5:	nop    DWORD PTR [rax]
  40ead8:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40eadd:	jmp    40e75e <__sprintf_chk@plt+0xc17e>
  40eae2:	nop    WORD PTR [rax+rax*1+0x0]
  40eae8:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40eaed:	jmp    40e618 <__sprintf_chk@plt+0xc038>
  40eaf2:	nop    WORD PTR [rax+rax*1+0x0]
  40eaf8:	mov    rdi,QWORD PTR [rbp+0x40]
  40eafc:	mov    rax,QWORD PTR [rdi]
  40eaff:	lea    rdx,[rax-0x1]
  40eb03:	mov    QWORD PTR [rdi],rdx
  40eb06:	test   rax,rax
  40eb09:	je     40ed4a <__sprintf_chk@plt+0xc76a>
  40eb0f:	mov    rax,QWORD PTR [rdi+0x8]
  40eb13:	lea    rdx,[rax+0x1]
  40eb17:	mov    QWORD PTR [rdi+0x8],rdx
  40eb1b:	movzx  ebx,BYTE PTR [rax]
  40eb1e:	mov    DWORD PTR [rbp+0x0],ebx
  40eb21:	jmp    40e508 <__sprintf_chk@plt+0xbf28>
  40eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb30:	mov    ebx,DWORD PTR [rbp+0x0]
  40eb33:	jmp    40e8c2 <__sprintf_chk@plt+0xc2e2>
  40eb38:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb40:	mov    QWORD PTR [r12],rax
  40eb44:	mov    ebx,0x11d
  40eb49:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40eb4e:	xchg   ax,ax
  40eb50:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40eb55:	mov    r13d,eax
  40eb58:	jmp    40e7b1 <__sprintf_chk@plt+0xc1d1>
  40eb5d:	nop    DWORD PTR [rax]
  40eb60:	mov    edx,0x11e
  40eb65:	lea    rsi,[rip+0x8945]        # 4174b1 <__sprintf_chk@plt+0x14ed1>
  40eb6c:	mov    rdi,rbp
  40eb6f:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40eb74:	nop    DWORD PTR [rax+0x0]
  40eb78:	mov    esi,eax
  40eb7a:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40eb7f:	nop
  40eb80:	cmp    r13d,0x74
  40eb84:	je     40ece0 <__sprintf_chk@plt+0xc700>
  40eb8a:	mov    esi,0xb
  40eb8f:	cmp    r13d,0x76
  40eb93:	je     40e730 <__sprintf_chk@plt+0xc150>
  40eb99:	jmp    40e7ee <__sprintf_chk@plt+0xc20e>
  40eb9e:	xchg   ax,ax
  40eba0:	cmp    r13d,0xa
  40eba4:	je     40ed78 <__sprintf_chk@plt+0xc798>
  40ebaa:	jle    40ebd0 <__sprintf_chk@plt+0xc5f0>
  40ebac:	cmp    r13d,0xd
  40ebb0:	je     40ed78 <__sprintf_chk@plt+0xc798>
  40ebb6:	mov    esi,0x7
  40ebbb:	cmp    r13d,0x61
  40ebbf:	je     40e730 <__sprintf_chk@plt+0xc150>
  40ebc5:	jmp    40e7ee <__sprintf_chk@plt+0xc20e>
  40ebca:	nop    WORD PTR [rax+rax*1+0x0]
  40ebd0:	cmp    r13d,0xffffffff
  40ebd4:	je     40e899 <__sprintf_chk@plt+0xc2b9>
  40ebda:	jmp    40e7ee <__sprintf_chk@plt+0xc20e>
  40ebdf:	nop
  40ebe0:	lea    rsi,[rip+0x8d0d]        # 4178f4 <__sprintf_chk@plt+0x15314>
  40ebe7:	mov    rdi,rbp
  40ebea:	call   40ab00 <__sprintf_chk@plt+0x8520>
  40ebef:	xor    ebx,ebx
  40ebf1:	test   eax,eax
  40ebf3:	setne  bl
  40ebf6:	add    ebx,0x116
  40ebfc:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ec01:	nop    DWORD PTR [rax+0x0]
  40ec08:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec0d:	jmp    40ea23 <__sprintf_chk@plt+0xc443>
  40ec12:	nop    WORD PTR [rax+rax*1+0x0]
  40ec18:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec1d:	jmp    40e9ae <__sprintf_chk@plt+0xc3ce>
  40ec22:	nop    WORD PTR [rax+rax*1+0x0]
  40ec28:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec2d:	jmp    40ea96 <__sprintf_chk@plt+0xc4b6>
  40ec32:	nop    WORD PTR [rax+rax*1+0x0]
  40ec38:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec3d:	jmp    40e69e <__sprintf_chk@plt+0xc0be>
  40ec42:	nop    WORD PTR [rax+rax*1+0x0]
  40ec48:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec4d:	jmp    40e916 <__sprintf_chk@plt+0xc336>
  40ec52:	nop    WORD PTR [rax+rax*1+0x0]
  40ec58:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ec5d:	mov    ebx,eax
  40ec5f:	jmp    40e6d0 <__sprintf_chk@plt+0xc0f0>
  40ec64:	nop    DWORD PTR [rax+0x0]
  40ec68:	mov    rdi,rbp
  40ec6b:	mov    esi,ebx
  40ec6d:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ec72:	mov    rdi,QWORD PTR [rbp+0x40]
  40ec76:	mov    rax,QWORD PTR [rdi]
  40ec79:	lea    rdx,[rax-0x1]
  40ec7d:	mov    QWORD PTR [rdi],rdx
  40ec80:	test   rax,rax
  40ec83:	je     40ed60 <__sprintf_chk@plt+0xc780>
  40ec89:	mov    rax,QWORD PTR [rdi+0x8]
  40ec8d:	lea    rdx,[rax+0x1]
  40ec91:	mov    QWORD PTR [rdi+0x8],rdx
  40ec95:	movzx  eax,BYTE PTR [rax]
  40ec98:	mov    DWORD PTR [rbp+0x0],eax
  40ec9b:	mov    rax,QWORD PTR [rbp+0x48]
  40ec9f:	mov    rsi,QWORD PTR [rbp+0x38]
  40eca3:	mov    rcx,QWORD PTR [rax+0x8]
  40eca7:	mov    rdx,QWORD PTR [rax]
  40ecaa:	sub    rcx,0x2
  40ecae:	inc    rdx
  40ecb1:	lea    rdi,[rbp+0x30]
  40ecb5:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40ecba:	mov    QWORD PTR [r12],rax
  40ecbe:	mov    ebx,0x11e
  40ecc3:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ecc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecd0:	mov    esi,0xc
  40ecd5:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40ecda:	nop    WORD PTR [rax+rax*1+0x0]
  40ece0:	mov    esi,0x9
  40ece5:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40ecea:	nop    WORD PTR [rax+rax*1+0x0]
  40ecf0:	mov    edx,eax
  40ecf2:	mov    rsi,r12
  40ecf5:	mov    rdi,rbp
  40ecf8:	call   40e310 <__sprintf_chk@plt+0xbd30>
  40ecfd:	mov    ebx,0x11e
  40ed02:	jmp    40e5c5 <__sprintf_chk@plt+0xbfe5>
  40ed07:	nop    WORD PTR [rax+rax*1+0x0]
  40ed10:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed15:	jmp    40e9e0 <__sprintf_chk@plt+0xc400>
  40ed1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed20:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed25:	jmp    40eac8 <__sprintf_chk@plt+0xc4e8>
  40ed2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed30:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed35:	jmp    40e646 <__sprintf_chk@plt+0xc066>
  40ed3a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed40:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed45:	jmp    40e948 <__sprintf_chk@plt+0xc368>
  40ed4a:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed4f:	mov    ebx,eax
  40ed51:	jmp    40eb1e <__sprintf_chk@plt+0xc53e>
  40ed56:	mov    esi,0xd
  40ed5b:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40ed60:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed65:	jmp    40ec98 <__sprintf_chk@plt+0xc6b8>
  40ed6a:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ed6f:	jmp    40e59d <__sprintf_chk@plt+0xbfbd>
  40ed74:	nop    DWORD PTR [rax+0x0]
  40ed78:	mov    esi,0xa
  40ed7d:	mov    rdi,rbp
  40ed80:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40ed85:	mov    rdi,rbp
  40ed88:	call   4097a0 <__sprintf_chk@plt+0x71c0>
  40ed8d:	mov    eax,DWORD PTR [rbp+0x0]
  40ed90:	jmp    40e761 <__sprintf_chk@plt+0xc181>
  40ed95:	mov    esi,0x8
  40ed9a:	jmp    40e730 <__sprintf_chk@plt+0xc150>
  40ed9f:	mov    r15d,0x3
  40eda5:	xor    r14d,r14d
  40eda8:	mov    rdi,QWORD PTR [rbp+0x40]
  40edac:	lea    eax,[r14+r14*4]
  40edb0:	lea    r14d,[r13+rax*2-0x30]
  40edb5:	mov    rax,QWORD PTR [rdi]
  40edb8:	lea    rcx,[rax-0x1]
  40edbc:	mov    QWORD PTR [rdi],rcx
  40edbf:	test   rax,rax
  40edc2:	je     40ee06 <__sprintf_chk@plt+0xc826>
  40edc4:	mov    rax,QWORD PTR [rdi+0x8]
  40edc8:	lea    rcx,[rax+0x1]
  40edcc:	mov    QWORD PTR [rdi+0x8],rcx
  40edd0:	movzx  r13d,BYTE PTR [rax]
  40edd4:	mov    DWORD PTR [rbp+0x0],r13d
  40edd8:	dec    r15d
  40eddb:	je     40edea <__sprintf_chk@plt+0xc80a>
  40eddd:	mov    rcx,QWORD PTR [rdx]
  40ede0:	movsxd rax,r13d
  40ede3:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  40ede8:	jne    40eda8 <__sprintf_chk@plt+0xc7c8>
  40edea:	cmp    r14d,0xff
  40edf1:	jg     40ee1a <__sprintf_chk@plt+0xc83a>
  40edf3:	mov    esi,r14d
  40edf6:	mov    rdi,rbp
  40edf9:	call   40a9d0 <__sprintf_chk@plt+0x83f0>
  40edfe:	mov    eax,DWORD PTR [rbp+0x0]
  40ee01:	jmp    40e761 <__sprintf_chk@plt+0xc181>
  40ee06:	mov    QWORD PTR [rsp+0x8],rdx
  40ee0b:	call   402d80 <__sprintf_chk@plt+0x7a0>
  40ee10:	mov    r13d,eax
  40ee13:	mov    rdx,QWORD PTR [rsp+0x8]
  40ee18:	jmp    40edd4 <__sprintf_chk@plt+0xc7f4>
  40ee1a:	mov    edx,0x11e
  40ee1f:	lea    rsi,[rip+0x869d]        # 4174c3 <__sprintf_chk@plt+0x14ee3>
  40ee26:	mov    rdi,rbp
  40ee29:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40ee2e:	xchg   ax,ax
  40ee30:	push   rbx
  40ee31:	lea    rsi,[rdi+0x18]
  40ee35:	mov    rbx,rdi
  40ee38:	call   40e4e0 <__sprintf_chk@plt+0xbf00>
  40ee3d:	mov    DWORD PTR [rbx+0x10],eax
  40ee40:	pop    rbx
  40ee41:	ret    
  40ee42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ee4d:	nop    DWORD PTR [rax]
  40ee50:	sub    rsp,0x18
  40ee54:	cmp    DWORD PTR [rdi+0x10],0x11d
  40ee5b:	jne    40ee90 <__sprintf_chk@plt+0xc8b0>
  40ee5d:	mov    edx,DWORD PTR [rdi+0x4]
  40ee60:	cmp    DWORD PTR [rdi+0x20],0x11f
  40ee67:	mov    rax,QWORD PTR [rdi+0x18]
  40ee6b:	mov    DWORD PTR [rdi+0x8],edx
  40ee6e:	je     40eea0 <__sprintf_chk@plt+0xc8c0>
  40ee70:	vmovdqa xmm0,XMMWORD PTR [rdi+0x20]
  40ee75:	mov    DWORD PTR [rdi+0x20],0x11f
  40ee7c:	vmovaps XMMWORD PTR [rdi+0x10],xmm0
  40ee81:	add    rsp,0x18
  40ee85:	ret    
  40ee86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee90:	mov    esi,0x11d
  40ee95:	call   40b180 <__sprintf_chk@plt+0x8ba0>
  40ee9a:	nop    WORD PTR [rax+rax*1+0x0]
  40eea0:	mov    QWORD PTR [rsp+0x8],rax
  40eea5:	call   40ee30 <__sprintf_chk@plt+0xc850>
  40eeaa:	mov    rax,QWORD PTR [rsp+0x8]
  40eeaf:	add    rsp,0x18
  40eeb3:	ret    
  40eeb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40eebf:	nop
  40eec0:	push   rbp
  40eec1:	mov    rbp,rdi
  40eec4:	push   rbx
  40eec5:	mov    rbx,rsi
  40eec8:	sub    rsp,0x28
  40eecc:	mov    rax,QWORD PTR fs:0x28
  40eed5:	mov    QWORD PTR [rsp+0x18],rax
  40eeda:	xor    eax,eax
  40eedc:	call   40ee50 <__sprintf_chk@plt+0xc870>
  40eee1:	mov    rsi,rsp
  40eee4:	mov    rdi,QWORD PTR [rbp+0x30]
  40eee8:	lea    rcx,[rsi+0x8]
  40eeec:	mov    rdx,rsi
  40eeef:	mov    QWORD PTR [rsp],rax
  40eef3:	mov    DWORD PTR [rsp+0x8],0x4
  40eefb:	call   409520 <__sprintf_chk@plt+0x6f40>
  40ef00:	mov    DWORD PTR [rbx+0x8],eax
  40ef03:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  40ef0b:	mov    DWORD PTR [rbx],0x4
  40ef11:	mov    rax,QWORD PTR [rsp+0x18]
  40ef16:	xor    rax,QWORD PTR fs:0x28
  40ef1f:	jne    40ef28 <__sprintf_chk@plt+0xc948>
  40ef21:	add    rsp,0x28
  40ef25:	pop    rbx
  40ef26:	pop    rbp
  40ef27:	ret    
  40ef28:	call   4023e0 <__stack_chk_fail@plt>
  40ef2d:	nop    DWORD PTR [rax]
  40ef30:	push   r12
  40ef32:	push   rbp
  40ef33:	mov    rbp,rsi
  40ef36:	push   rbx
  40ef37:	mov    rbx,rdi
  40ef3a:	sub    rsp,0x20
  40ef3e:	mov    rax,QWORD PTR fs:0x28
  40ef47:	mov    QWORD PTR [rsp+0x18],rax
  40ef4c:	xor    eax,eax
  40ef4e:	call   40ee50 <__sprintf_chk@plt+0xc870>
  40ef53:	mov    rbx,QWORD PTR [rbx+0x30]
  40ef57:	mov    ecx,0x1
  40ef5c:	mov    rdx,rbp
  40ef5f:	mov    rsi,rax
  40ef62:	mov    rdi,rbx
  40ef65:	mov    r12,rax
  40ef68:	call   40af20 <__sprintf_chk@plt+0x8940>
  40ef6d:	cmp    eax,0x8
  40ef70:	je     40ef90 <__sprintf_chk@plt+0xc9b0>
  40ef72:	mov    rax,QWORD PTR [rsp+0x18]
  40ef77:	xor    rax,QWORD PTR fs:0x28
  40ef80:	jne    40efb3 <__sprintf_chk@plt+0xc9d3>
  40ef82:	add    rsp,0x20
  40ef86:	pop    rbx
  40ef87:	pop    rbp
  40ef88:	pop    r12
  40ef8a:	ret    
  40ef8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef90:	mov    rsi,rsp
  40ef93:	lea    rcx,[rsi+0x8]
  40ef97:	mov    rdx,rsi
  40ef9a:	mov    rdi,rbx
  40ef9d:	mov    QWORD PTR [rsp],r12
  40efa1:	mov    DWORD PTR [rsp+0x8],0x4
  40efa9:	call   409520 <__sprintf_chk@plt+0x6f40>
  40efae:	mov    DWORD PTR [rbp+0x8],eax
  40efb1:	jmp    40ef72 <__sprintf_chk@plt+0xc992>
  40efb3:	call   4023e0 <__stack_chk_fail@plt>
  40efb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40efc0:	push   r13
  40efc2:	push   r12
  40efc4:	push   rbp
  40efc5:	mov    rbp,rsi
  40efc8:	push   rbx
  40efc9:	mov    rbx,rdi
  40efcc:	sub    rsp,0x28
  40efd0:	mov    r12,QWORD PTR [rdi+0x30]
  40efd4:	mov    rax,QWORD PTR fs:0x28
  40efdd:	mov    QWORD PTR [rsp+0x18],rax
  40efe2:	xor    eax,eax
  40efe4:	mov    rdi,r12
  40efe7:	call   40a270 <__sprintf_chk@plt+0x7c90>
  40efec:	mov    eax,DWORD PTR [rbx+0x4]
  40efef:	cmp    DWORD PTR [rbx+0x20],0x11f
  40eff6:	mov    DWORD PTR [rbx+0x8],eax
  40eff9:	je     40f050 <__sprintf_chk@plt+0xca70>
  40effb:	vmovdqa xmm0,XMMWORD PTR [rbx+0x20]
  40f000:	mov    DWORD PTR [rbx+0x20],0x11f
  40f007:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  40f00c:	mov    r13,rsp
  40f00f:	mov    rsi,r13
  40f012:	mov    rdi,rbx
  40f015:	call   40eec0 <__sprintf_chk@plt+0xc8e0>
  40f01a:	mov    rsi,r13
  40f01d:	mov    rdi,r12
  40f020:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  40f025:	mov    DWORD PTR [rbp+0xc],eax
  40f028:	mov    DWORD PTR [rbp+0x0],0x9
  40f02f:	mov    rax,QWORD PTR [rsp+0x18]
  40f034:	xor    rax,QWORD PTR fs:0x28
  40f03d:	jne    40f05a <__sprintf_chk@plt+0xca7a>
  40f03f:	add    rsp,0x28
  40f043:	pop    rbx
  40f044:	pop    rbp
  40f045:	pop    r12
  40f047:	pop    r13
  40f049:	ret    
  40f04a:	nop    WORD PTR [rax+rax*1+0x0]
  40f050:	mov    rdi,rbx
  40f053:	call   40ee30 <__sprintf_chk@plt+0xc850>
  40f058:	jmp    40f00c <__sprintf_chk@plt+0xca2c>
  40f05a:	call   4023e0 <__stack_chk_fail@plt>
  40f05f:	nop
  40f060:	cmp    esi,DWORD PTR [rdi+0x10]
  40f063:	jne    40f090 <__sprintf_chk@plt+0xcab0>
  40f065:	mov    eax,DWORD PTR [rdi+0x4]
  40f068:	cmp    DWORD PTR [rdi+0x20],0x11f
  40f06f:	mov    DWORD PTR [rdi+0x8],eax
  40f072:	je     40f0a0 <__sprintf_chk@plt+0xcac0>
  40f074:	vmovdqa xmm0,XMMWORD PTR [rdi+0x20]
  40f079:	mov    DWORD PTR [rdi+0x20],0x11f
  40f080:	vmovaps XMMWORD PTR [rdi+0x10],xmm0
  40f085:	ret    
  40f086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f090:	sub    rsp,0x8
  40f094:	call   40b180 <__sprintf_chk@plt+0x8ba0>
  40f099:	nop    DWORD PTR [rax+0x0]
  40f0a0:	jmp    40ee30 <__sprintf_chk@plt+0xc850>
  40f0a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f0b0:	mov    eax,DWORD PTR [rdi+0x4]
  40f0b3:	cmp    DWORD PTR [rdi+0x20],0x11f
  40f0ba:	mov    DWORD PTR [rdi+0x8],eax
  40f0bd:	je     40f0e0 <__sprintf_chk@plt+0xcb00>
  40f0bf:	vmovdqa xmm0,XMMWORD PTR [rdi+0x20]
  40f0c4:	mov    eax,0x1
  40f0c9:	vmovaps XMMWORD PTR [rdi+0x10],xmm0
  40f0ce:	mov    DWORD PTR [rdi+0x20],0x11f
  40f0d5:	ret    
  40f0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0e0:	sub    rsp,0x8
  40f0e4:	call   40ee30 <__sprintf_chk@plt+0xc850>
  40f0e9:	mov    eax,0x1
  40f0ee:	add    rsp,0x8
  40f0f2:	ret    
  40f0f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f0fe:	xchg   ax,ax
  40f100:	push   r14
  40f102:	push   r13
  40f104:	push   r12
  40f106:	mov    r12d,ecx
  40f109:	push   rbp
  40f10a:	mov    ebp,esi
  40f10c:	push   rbx
  40f10d:	mov    rbx,rdi
  40f110:	sub    rsp,0x10
  40f114:	cmp    esi,DWORD PTR [rdi+0x10]
  40f117:	je     40f1b8 <__sprintf_chk@plt+0xcbd8>
  40f11d:	cmp    DWORD PTR [rbx+0x4],r12d
  40f121:	je     40f1e0 <__sprintf_chk@plt+0xcc00>
  40f127:	lea    r14,[rbx+0x38]
  40f12b:	cmp    edx,0x100
  40f131:	jle    40f188 <__sprintf_chk@plt+0xcba8>
  40f133:	sub    edx,0x101
  40f139:	movsxd rdx,edx
  40f13c:	lea    rax,[rip+0xfb5d]        # 41eca0 <__sprintf_chk@plt+0x1c6c0>
  40f143:	mov    r13,QWORD PTR [rax+rdx*8]
  40f147:	cmp    ebp,0x100
  40f14d:	jg     40f19d <__sprintf_chk@plt+0xcbbd>
  40f14f:	mov    esi,ebp
  40f151:	mov    rdi,r14
  40f154:	call   409690 <__sprintf_chk@plt+0x70b0>
  40f159:	mov    rdx,rax
  40f15c:	mov    rdi,QWORD PTR [rbx+0x38]
  40f160:	lea    rsi,[rip+0x90b1]        # 418218 <__sprintf_chk@plt+0x15c38>
  40f167:	mov    r8d,r12d
  40f16a:	mov    rcx,r13
  40f16d:	xor    eax,eax
  40f16f:	call   4070d0 <__sprintf_chk@plt+0x4af0>
  40f174:	mov    edx,DWORD PTR [rbx+0x10]
  40f177:	mov    rsi,rax
  40f17a:	mov    rdi,rbx
  40f17d:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40f182:	nop    WORD PTR [rax+rax*1+0x0]
  40f188:	mov    esi,edx
  40f18a:	mov    rdi,r14
  40f18d:	call   409690 <__sprintf_chk@plt+0x70b0>
  40f192:	mov    r13,rax
  40f195:	cmp    ebp,0x100
  40f19b:	jle    40f14f <__sprintf_chk@plt+0xcb6f>
  40f19d:	sub    ebp,0x101
  40f1a3:	movsxd rbp,ebp
  40f1a6:	lea    rax,[rip+0xfaf3]        # 41eca0 <__sprintf_chk@plt+0x1c6c0>
  40f1ad:	mov    rdx,QWORD PTR [rax+rbp*8]
  40f1b1:	jmp    40f15c <__sprintf_chk@plt+0xcb7c>
  40f1b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1b8:	mov    DWORD PTR [rsp+0xc],edx
  40f1bc:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  40f1c1:	test   eax,eax
  40f1c3:	mov    edx,DWORD PTR [rsp+0xc]
  40f1c7:	je     40f11d <__sprintf_chk@plt+0xcb3d>
  40f1cd:	add    rsp,0x10
  40f1d1:	pop    rbx
  40f1d2:	pop    rbp
  40f1d3:	pop    r12
  40f1d5:	pop    r13
  40f1d7:	pop    r14
  40f1d9:	ret    
  40f1da:	nop    WORD PTR [rax+rax*1+0x0]
  40f1e0:	mov    esi,ebp
  40f1e2:	mov    rdi,rbx
  40f1e5:	call   40b180 <__sprintf_chk@plt+0x8ba0>
  40f1ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f1f0:	push   r13
  40f1f2:	push   r12
  40f1f4:	mov    r12,rdi
  40f1f7:	push   rbp
  40f1f8:	push   rbx
  40f1f9:	sub    rsp,0x8
  40f1fd:	mov    rbx,QWORD PTR [rdi+0x30]
  40f201:	mov    rbp,QWORD PTR [rdi+0x38]
  40f205:	movzx  eax,BYTE PTR [rbx+0x4a]
  40f209:	mov    r13,QWORD PTR [rbx]
  40f20c:	test   al,al
  40f20e:	je     40f247 <__sprintf_chk@plt+0xcc67>
  40f210:	dec    eax
  40f212:	movzx  eax,al
  40f215:	mov    rsi,QWORD PTR [r13+0x30]
  40f219:	mov    ecx,DWORD PTR [rbx+0x30]
  40f21c:	lea    rdx,[rbx+rax*2]
  40f220:	jmp    40f22b <__sprintf_chk@plt+0xcc4b>
  40f222:	nop    WORD PTR [rax+rax*1+0x0]
  40f228:	mov    rdx,rax
  40f22b:	movzx  eax,WORD PTR [rdx+0xc4]
  40f232:	shl    rax,0x4
  40f236:	mov    DWORD PTR [rsi+rax*1+0xc],ecx
  40f23a:	lea    rax,[rdx-0x2]
  40f23e:	cmp    rbx,rdx
  40f241:	jne    40f228 <__sprintf_chk@plt+0xcc48>
  40f243:	mov    BYTE PTR [rbx+0x4a],0x0
  40f247:	mov    rax,QWORD PTR [rbx+0x18]
  40f24b:	mov    esi,0x80001e
  40f250:	mov    edx,DWORD PTR [rax+0x8]
  40f253:	mov    rdi,rbx
  40f256:	call   409980 <__sprintf_chk@plt+0x73a0>
  40f25b:	movsxd rcx,DWORD PTR [rbx+0x30]
  40f25f:	cmp    ecx,0xffffffff
  40f262:	jl     40f3a8 <__sprintf_chk@plt+0xcdc8>
  40f268:	movsxd rdx,DWORD PTR [r13+0x50]
  40f26c:	mov    rsi,QWORD PTR [r13+0x18]
  40f270:	shl    rcx,0x2
  40f274:	shl    rdx,0x2
  40f278:	mov    rdi,rbp
  40f27b:	call   404640 <__sprintf_chk@plt+0x2060>
  40f280:	movsxd rcx,DWORD PTR [rbx+0x30]
  40f284:	mov    QWORD PTR [r13+0x18],rax
  40f288:	mov    DWORD PTR [r13+0x50],ecx
  40f28c:	cmp    ecx,0xffffffff
  40f28f:	jl     40f420 <__sprintf_chk@plt+0xce40>
  40f295:	movsxd rdx,DWORD PTR [r13+0x54]
  40f299:	mov    rsi,QWORD PTR [r13+0x28]
  40f29d:	shl    rcx,0x2
  40f2a1:	shl    rdx,0x2
  40f2a5:	mov    rdi,rbp
  40f2a8:	call   404640 <__sprintf_chk@plt+0x2060>
  40f2ad:	mov    QWORD PTR [r13+0x28],rax
  40f2b1:	movsxd rcx,DWORD PTR [rbx+0x40]
  40f2b5:	mov    eax,DWORD PTR [rbx+0x30]
  40f2b8:	mov    DWORD PTR [r13+0x54],eax
  40f2bc:	cmp    ecx,0xffffffff
  40f2bf:	jl     40f400 <__sprintf_chk@plt+0xce20>
  40f2c5:	movsxd rdx,DWORD PTR [r13+0x4c]
  40f2c9:	mov    rsi,QWORD PTR [r13+0x10]
  40f2cd:	shl    rcx,0x4
  40f2d1:	shl    rdx,0x4
  40f2d5:	mov    rdi,rbp
  40f2d8:	call   404640 <__sprintf_chk@plt+0x2060>
  40f2dd:	mov    QWORD PTR [r13+0x10],rax
  40f2e1:	movsxd rcx,DWORD PTR [rbx+0x44]
  40f2e5:	mov    eax,DWORD PTR [rbx+0x40]
  40f2e8:	mov    DWORD PTR [r13+0x4c],eax
  40f2ec:	cmp    ecx,0xffffffff
  40f2ef:	jl     40f3e0 <__sprintf_chk@plt+0xce00>
  40f2f5:	movsxd rdx,DWORD PTR [r13+0x58]
  40f2f9:	mov    rsi,QWORD PTR [r13+0x20]
  40f2fd:	shl    rcx,0x3
  40f301:	shl    rdx,0x3
  40f305:	mov    rdi,rbp
  40f308:	call   404640 <__sprintf_chk@plt+0x2060>
  40f30d:	mov    QWORD PTR [r13+0x20],rax
  40f311:	movsx  rcx,WORD PTR [rbx+0x48]
  40f316:	mov    eax,DWORD PTR [rbx+0x44]
  40f319:	mov    DWORD PTR [r13+0x58],eax
  40f31d:	cmp    cx,0xffff
  40f321:	jl     40f3c0 <__sprintf_chk@plt+0xcde0>
  40f327:	movsxd rdx,DWORD PTR [r13+0x5c]
  40f32b:	mov    rsi,QWORD PTR [r13+0x30]
  40f32f:	shl    rcx,0x4
  40f333:	shl    rdx,0x4
  40f337:	mov    rdi,rbp
  40f33a:	call   404640 <__sprintf_chk@plt+0x2060>
  40f33f:	mov    QWORD PTR [r13+0x30],rax
  40f343:	movsx  eax,WORD PTR [rbx+0x48]
  40f347:	movzx  ecx,BYTE PTR [r13+0x70]
  40f34c:	movsxd rdx,DWORD PTR [r13+0x48]
  40f350:	mov    DWORD PTR [r13+0x5c],eax
  40f354:	mov    rsi,QWORD PTR [r13+0x38]
  40f358:	shl    rcx,0x3
  40f35c:	shl    rdx,0x3
  40f360:	mov    rdi,rbp
  40f363:	call   404640 <__sprintf_chk@plt+0x2060>
  40f368:	mov    QWORD PTR [r13+0x38],rax
  40f36c:	movzx  eax,BYTE PTR [r13+0x70]
  40f371:	mov    DWORD PTR [r13+0x48],eax
  40f375:	mov    rax,QWORD PTR [rbx+0x10]
  40f379:	mov    QWORD PTR [r12+0x30],rax
  40f37e:	mov    eax,DWORD PTR [r12+0x10]
  40f383:	sub    eax,0x11d
  40f388:	cmp    eax,0x1
  40f38b:	jbe    40f440 <__sprintf_chk@plt+0xce60>
  40f391:	sub    QWORD PTR [rbp+0x10],0x20
  40f396:	add    rsp,0x8
  40f39a:	pop    rbx
  40f39b:	pop    rbp
  40f39c:	pop    r12
  40f39e:	pop    r13
  40f3a0:	ret    
  40f3a1:	nop    DWORD PTR [rax+0x0]
  40f3a8:	xor    eax,eax
  40f3aa:	lea    rsi,[rip+0x8c97]        # 418048 <__sprintf_chk@plt+0x15a68>
  40f3b1:	mov    rdi,rbp
  40f3b4:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40f3b9:	xor    eax,eax
  40f3bb:	jmp    40f280 <__sprintf_chk@plt+0xcca0>
  40f3c0:	xor    eax,eax
  40f3c2:	lea    rsi,[rip+0x8c7f]        # 418048 <__sprintf_chk@plt+0x15a68>
  40f3c9:	mov    rdi,rbp
  40f3cc:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40f3d1:	xor    eax,eax
  40f3d3:	jmp    40f33f <__sprintf_chk@plt+0xcd5f>
  40f3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f3e0:	xor    eax,eax
  40f3e2:	lea    rsi,[rip+0x8c5f]        # 418048 <__sprintf_chk@plt+0x15a68>
  40f3e9:	mov    rdi,rbp
  40f3ec:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40f3f1:	xor    eax,eax
  40f3f3:	jmp    40f30d <__sprintf_chk@plt+0xcd2d>
  40f3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f400:	xor    eax,eax
  40f402:	lea    rsi,[rip+0x8c3f]        # 418048 <__sprintf_chk@plt+0x15a68>
  40f409:	mov    rdi,rbp
  40f40c:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40f411:	xor    eax,eax
  40f413:	jmp    40f2dd <__sprintf_chk@plt+0xccfd>
  40f418:	nop    DWORD PTR [rax+rax*1+0x0]
  40f420:	xor    eax,eax
  40f422:	lea    rsi,[rip+0x8c1f]        # 418048 <__sprintf_chk@plt+0x15a68>
  40f429:	mov    rdi,rbp
  40f42c:	call   407190 <__sprintf_chk@plt+0x4bb0>
  40f431:	xor    eax,eax
  40f433:	jmp    40f2ad <__sprintf_chk@plt+0xcccd>
  40f438:	nop    DWORD PTR [rax+rax*1+0x0]
  40f440:	mov    rdx,QWORD PTR [r12+0x18]
  40f445:	mov    rsi,QWORD PTR [r12+0x38]
  40f44a:	mov    rcx,QWORD PTR [rdx+0x10]
  40f44e:	lea    rdi,[r12+0x30]
  40f453:	add    rdx,0x18
  40f457:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40f45c:	sub    QWORD PTR [rbp+0x10],0x20
  40f461:	add    rsp,0x8
  40f465:	pop    rbx
  40f466:	pop    rbp
  40f467:	pop    r12
  40f469:	pop    r13
  40f46b:	ret    
  40f46c:	nop    DWORD PTR [rax+0x0]
  40f470:	push   r15
  40f472:	push   r14
  40f474:	push   r13
  40f476:	mov    r13,rdi
  40f479:	push   r12
  40f47b:	push   rbp
  40f47c:	push   rbx
  40f47d:	sub    rsp,0x78
  40f481:	mov    rdx,QWORD PTR [rdi+0x38]
  40f485:	mov    rax,QWORD PTR fs:0x28
  40f48e:	mov    QWORD PTR [rsp+0x68],rax
  40f493:	xor    eax,eax
  40f495:	movzx  eax,WORD PTR [rdx+0x60]
  40f499:	inc    eax
  40f49b:	mov    WORD PTR [rdx+0x60],ax
  40f49f:	cmp    ax,0xc8
  40f4a3:	ja     40f530 <__sprintf_chk@plt+0xcf50>
  40f4a9:	lea    rbx,[rsp+0x40]
  40f4ae:	lea    rcx,[rbx+0x8]
  40f4b2:	mov    QWORD PTR [rsp+0x8],rcx
  40f4b7:	mov    eax,DWORD PTR [rdi+0x10]
  40f4ba:	lea    r12,[rip+0x8743]        # 417c04 <__sprintf_chk@plt+0x15624>
  40f4c1:	lea    edx,[rax-0x104]
  40f4c7:	cmp    edx,0x1b
  40f4ca:	ja     40f510 <__sprintf_chk@plt+0xcf30>
  40f4cc:	mov    ecx,0x1
  40f4d1:	shlx   rdx,rcx,rdx
  40f4d6:	test   edx,0x8010007
  40f4dc:	je     40f510 <__sprintf_chk@plt+0xcf30>
  40f4de:	mov    rax,QWORD PTR [r13+0x38]
  40f4e2:	dec    WORD PTR [rax+0x60]
  40f4e6:	mov    rax,QWORD PTR [rsp+0x68]
  40f4eb:	xor    rax,QWORD PTR fs:0x28
  40f4f4:	jne    4101c0 <__sprintf_chk@plt+0xdbe0>
  40f4fa:	add    rsp,0x78
  40f4fe:	pop    rbx
  40f4ff:	pop    rbp
  40f500:	pop    r12
  40f502:	pop    r13
  40f504:	pop    r14
  40f506:	pop    r15
  40f508:	ret    
  40f509:	nop    DWORD PTR [rax+0x0]
  40f510:	sub    eax,0x102
  40f515:	mov    ebp,DWORD PTR [r13+0x4]
  40f519:	cmp    eax,0x13
  40f51c:	ja     40fb70 <__sprintf_chk@plt+0xd590>
  40f522:	movsxd rax,DWORD PTR [r12+rax*4]
  40f526:	add    rax,r12
  40f529:	notrack jmp rax
  40f52c:	nop    DWORD PTR [rax+0x0]
  40f530:	xor    edx,edx
  40f532:	lea    rsi,[rip+0x8d0f]        # 418248 <__sprintf_chk@plt+0x15c68>
  40f539:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40f53e:	xchg   ax,ax
  40f540:	cmp    DWORD PTR [r13+0x20],0x11f
  40f548:	mov    r15,QWORD PTR [r13+0x30]
  40f54c:	mov    DWORD PTR [r13+0x8],ebp
  40f550:	je     41015f <__sprintf_chk@plt+0xdb7f>
  40f556:	vmovdqa xmm0,XMMWORD PTR [r13+0x20]
  40f55c:	mov    DWORD PTR [r13+0x20],0x11f
  40f564:	vmovaps XMMWORD PTR [r13+0x10],xmm0
  40f56a:	mov    edx,DWORD PTR [r15+0x30]
  40f56e:	mov    rdi,r13
  40f571:	mov    DWORD PTR [r15+0x34],edx
  40f575:	mov    DWORD PTR [rsp],edx
  40f578:	call   411150 <__sprintf_chk@plt+0xeb70>
  40f57d:	mov    DWORD PTR [rsp+0x48],0xffffffff
  40f585:	mov    r14d,eax
  40f588:	mov    edi,0x100
  40f58d:	movzx  eax,BYTE PTR [r15+0x4a]
  40f592:	mov    WORD PTR [rsp+0x4d],di
  40f597:	mov    BYTE PTR [rsp+0x4c],al
  40f59b:	mov    esi,0x103
  40f5a0:	mov    rdi,r13
  40f5a3:	mov    rax,QWORD PTR [r15+0x28]
  40f5a7:	mov    QWORD PTR [rsp+0x40],rax
  40f5ac:	mov    QWORD PTR [r15+0x28],rbx
  40f5b0:	call   40f060 <__sprintf_chk@plt+0xca80>
  40f5b5:	mov    rdi,r13
  40f5b8:	call   411fa0 <__sprintf_chk@plt+0xf9c0>
  40f5bd:	mov    rdi,r15
  40f5c0:	call   409e90 <__sprintf_chk@plt+0x78b0>
  40f5c5:	mov    edx,DWORD PTR [rsp]
  40f5c8:	mov    esi,eax
  40f5ca:	mov    rdi,r15
  40f5cd:	call   409e60 <__sprintf_chk@plt+0x7880>
  40f5d2:	mov    edx,0x115
  40f5d7:	mov    esi,0x106
  40f5dc:	mov    ecx,ebp
  40f5de:	mov    rdi,r13
  40f5e1:	call   40f100 <__sprintf_chk@plt+0xcb20>
  40f5e6:	mov    rdi,r15
  40f5e9:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  40f5ee:	mov    eax,DWORD PTR [r15+0x30]
  40f5f2:	lea    rsi,[r15+0x38]
  40f5f6:	mov    DWORD PTR [r15+0x34],eax
  40f5fa:	mov    edx,r14d
  40f5fd:	mov    rdi,r15
  40f600:	call   409df0 <__sprintf_chk@plt+0x7810>
  40f605:	nop    DWORD PTR [rax]
  40f608:	mov    eax,DWORD PTR [r13+0x10]
  40f60c:	cmp    eax,0x3b
  40f60f:	je     40f748 <__sprintf_chk@plt+0xd168>
  40f615:	mov    rdx,QWORD PTR [r13+0x30]
  40f619:	movzx  ecx,BYTE PTR [rdx+0x4a]
  40f61d:	mov    DWORD PTR [rdx+0x3c],ecx
  40f620:	jmp    40f4c1 <__sprintf_chk@plt+0xcee1>
  40f625:	nop    DWORD PTR [rax]
  40f628:	cmp    DWORD PTR [r13+0x20],0x11f
  40f630:	mov    DWORD PTR [r13+0x8],ebp
  40f634:	je     410152 <__sprintf_chk@plt+0xdb72>
  40f63a:	vmovdqa xmm7,XMMWORD PTR [r13+0x20]
  40f640:	mov    DWORD PTR [r13+0x20],0x11f
  40f648:	vmovaps XMMWORD PTR [r13+0x10],xmm7
  40f64e:	mov    rdi,r13
  40f651:	call   40acf0 <__sprintf_chk@plt+0x8710>
  40f656:	cmp    DWORD PTR [r13+0x10],0x3b
  40f65b:	jne    40f99a <__sprintf_chk@plt+0xd3ba>
  40f661:	mov    rdi,r13
  40f664:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  40f669:	mov    rax,QWORD PTR [r13+0x30]
  40f66d:	movzx  edx,BYTE PTR [rax+0x4a]
  40f671:	mov    DWORD PTR [rax+0x3c],edx
  40f674:	jmp    40f4de <__sprintf_chk@plt+0xcefe>
  40f679:	nop    DWORD PTR [rax+0x0]
  40f680:	mov    rdi,r13
  40f683:	mov    r15,QWORD PTR [r13+0x30]
  40f687:	mov    DWORD PTR [rsp+0x40],0xffffffff
  40f68f:	call   412010 <__sprintf_chk@plt+0xfa30>
  40f694:	mov    r14d,eax
  40f697:	mov    eax,DWORD PTR [r13+0x10]
  40f69b:	lea    rcx,[r15+0x38]
  40f69f:	mov    QWORD PTR [rsp],rcx
  40f6a3:	cmp    eax,0x105
  40f6a8:	jne    40f6f2 <__sprintf_chk@plt+0xd112>
  40f6aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f6b0:	mov    rdi,r15
  40f6b3:	call   409e90 <__sprintf_chk@plt+0x78b0>
  40f6b8:	mov    edx,eax
  40f6ba:	mov    rsi,rbx
  40f6bd:	mov    rdi,r15
  40f6c0:	call   409df0 <__sprintf_chk@plt+0x7810>
  40f6c5:	mov    eax,DWORD PTR [r15+0x30]
  40f6c9:	mov    rsi,QWORD PTR [rsp]
  40f6cd:	mov    DWORD PTR [r15+0x34],eax
  40f6d1:	mov    edx,r14d
  40f6d4:	mov    rdi,r15
  40f6d7:	call   409df0 <__sprintf_chk@plt+0x7810>
  40f6dc:	mov    rdi,r13
  40f6df:	call   412010 <__sprintf_chk@plt+0xfa30>
  40f6e4:	mov    r14d,eax
  40f6e7:	mov    eax,DWORD PTR [r13+0x10]
  40f6eb:	cmp    eax,0x105
  40f6f0:	je     40f6b0 <__sprintf_chk@plt+0xd0d0>
  40f6f2:	cmp    eax,0x104
  40f6f7:	je     40fd20 <__sprintf_chk@plt+0xd740>
  40f6fd:	mov    edx,r14d
  40f700:	mov    rsi,rbx
  40f703:	mov    rdi,r15
  40f706:	call   409df0 <__sprintf_chk@plt+0x7810>
  40f70b:	mov    eax,DWORD PTR [r15+0x30]
  40f70f:	mov    edx,DWORD PTR [rsp+0x40]
  40f713:	mov    DWORD PTR [r15+0x34],eax
  40f717:	mov    rsi,QWORD PTR [rsp]
  40f71b:	mov    rdi,r15
  40f71e:	call   409df0 <__sprintf_chk@plt+0x7810>
  40f723:	mov    ecx,ebp
  40f725:	mov    edx,0x10a
  40f72a:	mov    esi,0x106
  40f72f:	mov    rdi,r13
  40f732:	call   40f100 <__sprintf_chk@plt+0xcb20>
  40f737:	mov    eax,DWORD PTR [r13+0x10]
  40f73b:	cmp    eax,0x3b
  40f73e:	jne    40f615 <__sprintf_chk@plt+0xd035>
  40f744:	nop    DWORD PTR [rax+0x0]
  40f748:	mov    rdi,r13
  40f74b:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  40f750:	mov    rax,QWORD PTR [r13+0x30]
  40f754:	movzx  edx,BYTE PTR [rax+0x4a]
  40f758:	mov    DWORD PTR [rax+0x3c],edx
  40f75b:	mov    eax,DWORD PTR [r13+0x10]
  40f75f:	jmp    40f4c1 <__sprintf_chk@plt+0xcee1>
  40f764:	nop    DWORD PTR [rax+0x0]
  40f768:	mov    DWORD PTR [rsp+0x28],0xffffffff
  40f770:	mov    r14,QWORD PTR [r13+0x30]
  40f774:	mov    esi,0x100
  40f779:	movzx  eax,BYTE PTR [r14+0x4a]
  40f77e:	mov    WORD PTR [rsp+0x2d],si
  40f783:	mov    BYTE PTR [rsp+0x2c],al
  40f787:	cmp    DWORD PTR [r13+0x20],0x11f
  40f78f:	mov    rax,QWORD PTR [r14+0x28]
  40f793:	mov    QWORD PTR [rsp+0x20],rax
  40f798:	lea    rax,[rsp+0x20]
  40f79d:	mov    QWORD PTR [r14+0x28],rax
  40f7a1:	mov    DWORD PTR [r13+0x8],ebp
  40f7a5:	je     410145 <__sprintf_chk@plt+0xdb65>
  40f7ab:	vmovdqa xmm2,XMMWORD PTR [r13+0x20]
  40f7b1:	mov    DWORD PTR [r13+0x20],0x11f
  40f7b9:	vmovaps XMMWORD PTR [r13+0x10],xmm2
  40f7bf:	mov    rdi,r13
  40f7c2:	call   40ee50 <__sprintf_chk@plt+0xc870>
  40f7c7:	mov    edx,DWORD PTR [r13+0x10]
  40f7cb:	mov    r10,rax
  40f7ce:	cmp    edx,0x3d
  40f7d1:	je     40fea8 <__sprintf_chk@plt+0xd8c8>
  40f7d7:	cmp    edx,0x10b
  40f7dd:	je     40fd88 <__sprintf_chk@plt+0xd7a8>
  40f7e3:	cmp    edx,0x2c
  40f7e6:	je     40fd88 <__sprintf_chk@plt+0xd7a8>
  40f7ec:	lea    rsi,[rip+0x7d37]        # 41752a <__sprintf_chk@plt+0x14f4a>
  40f7f3:	mov    rdi,r13
  40f7f6:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  40f7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f800:	mov    r15,QWORD PTR [r13+0x30]
  40f804:	mov    edx,0x100
  40f809:	mov    r14d,DWORD PTR [r15+0x30]
  40f80d:	xor    ecx,ecx
  40f80f:	mov    DWORD PTR [r15+0x34],r14d
  40f813:	mov    DWORD PTR [rsp+0x28],0xffffffff
  40f81b:	cmp    DWORD PTR [r13+0x20],0x11f
  40f823:	movzx  eax,BYTE PTR [r15+0x4a]
  40f828:	mov    WORD PTR [rsp+0x2d],dx
  40f82d:	mov    BYTE PTR [rsp+0x2c],al
  40f831:	mov    rdx,QWORD PTR [r15+0x28]
  40f835:	mov    BYTE PTR [rsp+0x4c],al
  40f839:	lea    rax,[rsp+0x20]
  40f83e:	mov    QWORD PTR [rsp+0x40],rax
  40f843:	mov    eax,DWORD PTR [r13+0x4]
  40f847:	mov    QWORD PTR [rsp+0x20],rdx
  40f84c:	mov    DWORD PTR [rsp+0x48],0xffffffff
  40f854:	mov    WORD PTR [rsp+0x4d],cx
  40f859:	mov    QWORD PTR [r15+0x28],rbx
  40f85d:	mov    DWORD PTR [r13+0x8],eax
  40f861:	je     410138 <__sprintf_chk@plt+0xdb58>
  40f867:	vmovdqa xmm3,XMMWORD PTR [r13+0x20]
  40f86d:	mov    DWORD PTR [r13+0x20],0x11f
  40f875:	vmovaps XMMWORD PTR [r13+0x10],xmm3
  40f87b:	mov    rdi,r13
  40f87e:	call   40f470 <__sprintf_chk@plt+0xce90>
  40f883:	mov    ecx,ebp
  40f885:	mov    edx,0x110
  40f88a:	mov    esi,0x114
  40f88f:	mov    rdi,r13
  40f892:	call   40f100 <__sprintf_chk@plt+0xcb20>
  40f897:	mov    rdi,r13
  40f89a:	call   411150 <__sprintf_chk@plt+0xeb70>
  40f89f:	cmp    BYTE PTR [rsp+0x4d],0x0
  40f8a4:	mov    ebp,eax
  40f8a6:	jne    40fc98 <__sprintf_chk@plt+0xd6b8>
  40f8ac:	mov    rdi,r15
  40f8af:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  40f8b4:	mov    rdi,QWORD PTR [r13+0x30]
  40f8b8:	mov    edx,r14d
  40f8bb:	mov    esi,ebp
  40f8bd:	call   409e60 <__sprintf_chk@plt+0x7880>
  40f8c2:	mov    rdi,r15
  40f8c5:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  40f8ca:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40f8cf:	nop
  40f8d0:	cmp    DWORD PTR [r13+0x20],0x11f
  40f8d8:	mov    rbx,QWORD PTR [r13+0x30]
  40f8dc:	mov    DWORD PTR [r13+0x8],ebp
  40f8e0:	je     41012b <__sprintf_chk@plt+0xdb4b>
  40f8e6:	vmovdqa xmm6,XMMWORD PTR [r13+0x20]
  40f8ec:	mov    DWORD PTR [r13+0x20],0x11f
  40f8f4:	vmovaps XMMWORD PTR [r13+0x10],xmm6
  40f8fa:	mov    eax,DWORD PTR [r13+0x10]
  40f8fe:	lea    edx,[rax-0x104]
  40f904:	cmp    edx,0x1b
  40f907:	ja     40fc80 <__sprintf_chk@plt+0xd6a0>
  40f90d:	mov    eax,0x1
  40f912:	shlx   rdx,rax,rdx
  40f917:	mov    esi,0x80001e
  40f91c:	test   edx,0x8010007
  40f922:	jne    40f980 <__sprintf_chk@plt+0xd3a0>
  40f924:	lea    rbp,[rsp+0x40]
  40f929:	xor    edx,edx
  40f92b:	mov    rsi,rbp
  40f92e:	mov    rdi,r13
  40f931:	call   410610 <__sprintf_chk@plt+0xe030>
  40f936:	mov    rsi,rbp
  40f939:	mov    rdi,r13
  40f93c:	call   411680 <__sprintf_chk@plt+0xf0a0>
  40f941:	mov    esi,DWORD PTR [rsp+0x40]
  40f945:	mov    r12d,eax
  40f948:	lea    eax,[rsi-0xd]
  40f94b:	cmp    eax,0x1
  40f94e:	jbe    41007c <__sprintf_chk@plt+0xda9c>
  40f954:	mov    rsi,rbp
  40f957:	mov    rdi,rbx
  40f95a:	cmp    r12d,0x1
  40f95e:	je     41016c <__sprintf_chk@plt+0xdb8c>
  40f964:	call   40a220 <__sprintf_chk@plt+0x7c40>
  40f969:	movzx  esi,BYTE PTR [rbx+0x4a]
  40f96d:	lea    eax,[r12+0x1]
  40f972:	shl    esi,0x6
  40f975:	shl    eax,0x17
  40f978:	or     esi,eax
  40f97a:	or     esi,0x1e
  40f97d:	nop    DWORD PTR [rax]
  40f980:	mov    rax,QWORD PTR [rbx+0x18]
  40f984:	mov    rdi,rbx
  40f987:	mov    edx,DWORD PTR [rax+0x8]
  40f98a:	call   409980 <__sprintf_chk@plt+0x73a0>
  40f98f:	cmp    DWORD PTR [r13+0x10],0x3b
  40f994:	je     40f661 <__sprintf_chk@plt+0xd081>
  40f99a:	mov    rax,QWORD PTR [r13+0x30]
  40f99e:	movzx  edx,BYTE PTR [rax+0x4a]
  40f9a2:	mov    DWORD PTR [rax+0x3c],edx
  40f9a5:	jmp    40f4de <__sprintf_chk@plt+0xcefe>
  40f9aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f9b0:	cmp    DWORD PTR [r13+0x20],0x11f
  40f9b8:	mov    DWORD PTR [r13+0x8],ebp
  40f9bc:	je     41011e <__sprintf_chk@plt+0xdb3e>
  40f9c2:	vmovdqa xmm1,XMMWORD PTR [r13+0x20]
  40f9c8:	mov    DWORD PTR [r13+0x20],0x11f
  40f9d0:	vmovaps XMMWORD PTR [r13+0x10],xmm1
  40f9d6:	mov    rdi,r13
  40f9d9:	call   411fa0 <__sprintf_chk@plt+0xf9c0>
  40f9de:	mov    ecx,ebp
  40f9e0:	mov    edx,0x103
  40f9e5:	mov    esi,0x106
  40f9ea:	mov    rdi,r13
  40f9ed:	call   40f100 <__sprintf_chk@plt+0xcb20>
  40f9f2:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40f9f7:	nop    WORD PTR [rax+rax*1+0x0]
  40fa00:	cmp    DWORD PTR [r13+0x20],0x11f
  40fa08:	mov    DWORD PTR [r13+0x8],ebp
  40fa0c:	je     410111 <__sprintf_chk@plt+0xdb31>
  40fa12:	vmovdqa xmm4,XMMWORD PTR [r13+0x20]
  40fa18:	mov    DWORD PTR [r13+0x20],0x11f
  40fa20:	vmovaps XMMWORD PTR [r13+0x10],xmm4
  40fa26:	lea    r14,[rsp+0x20]
  40fa2b:	mov    rsi,r14
  40fa2e:	mov    rdi,r13
  40fa31:	call   40ef30 <__sprintf_chk@plt+0xc950>
  40fa36:	mov    eax,DWORD PTR [r13+0x10]
  40fa3a:	cmp    eax,0x2e
  40fa3d:	jne    40fa54 <__sprintf_chk@plt+0xd474>
  40fa3f:	nop
  40fa40:	mov    rsi,r14
  40fa43:	mov    rdi,r13
  40fa46:	call   40efc0 <__sprintf_chk@plt+0xc9e0>
  40fa4b:	mov    eax,DWORD PTR [r13+0x10]
  40fa4f:	cmp    eax,0x2e
  40fa52:	je     40fa40 <__sprintf_chk@plt+0xd460>
  40fa54:	xor    edx,edx
  40fa56:	cmp    eax,0x3a
  40fa59:	je     4100ef <__sprintf_chk@plt+0xdb0f>
  40fa5f:	mov    ecx,ebp
  40fa61:	mov    rsi,rbx
  40fa64:	mov    rdi,r13
  40fa67:	call   4101d0 <__sprintf_chk@plt+0xdbf0>
  40fa6c:	mov    rdi,QWORD PTR [r13+0x30]
  40fa70:	mov    rdx,rbx
  40fa73:	mov    rsi,r14
  40fa76:	call   40a6c0 <__sprintf_chk@plt+0x80e0>
  40fa7b:	mov    rax,QWORD PTR [r13+0x30]
  40fa7f:	mov    rcx,QWORD PTR [rax]
  40fa82:	movsxd rdx,DWORD PTR [rax+0x30]
  40fa86:	mov    rax,QWORD PTR [rcx+0x28]
  40fa8a:	mov    DWORD PTR [rax+rdx*4-0x4],ebp
  40fa8e:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40fa93:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa98:	cmp    DWORD PTR [r13+0x20],0x11f
  40faa0:	mov    DWORD PTR [r13+0x8],ebp
  40faa4:	je     410104 <__sprintf_chk@plt+0xdb24>
  40faaa:	vmovdqa xmm5,XMMWORD PTR [r13+0x20]
  40fab0:	mov    DWORD PTR [r13+0x20],0x11f
  40fab8:	vmovaps XMMWORD PTR [r13+0x10],xmm5
  40fabe:	cmp    DWORD PTR [r13+0x10],0x109
  40fac6:	je     40fbb0 <__sprintf_chk@plt+0xd5d0>
  40facc:	xor    ebp,ebp
  40face:	mov    rdi,r13
  40fad1:	call   40ee50 <__sprintf_chk@plt+0xc870>
  40fad6:	mov    rsi,rax
  40fad9:	mov    edx,ebp
  40fadb:	mov    rdi,r13
  40fade:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fae3:	mov    eax,DWORD PTR [r13+0x10]
  40fae7:	lea    r14d,[rbp+0x1]
  40faeb:	cmp    eax,0x2c
  40faee:	je     40fd00 <__sprintf_chk@plt+0xd720>
  40faf4:	cmp    eax,0x3d
  40faf7:	je     4100c0 <__sprintf_chk@plt+0xdae0>
  40fafd:	mov    DWORD PTR [rsp+0x40],0x0
  40fb05:	xor    edx,edx
  40fb07:	mov    rdi,QWORD PTR [r13+0x30]
  40fb0b:	mov    rcx,rbx
  40fb0e:	mov    esi,r14d
  40fb11:	call   40a800 <__sprintf_chk@plt+0x8220>
  40fb16:	mov    rdi,QWORD PTR [r13+0x30]
  40fb1a:	movzx  eax,BYTE PTR [rdi+0x4a]
  40fb1e:	mov    rdx,QWORD PTR [rdi]
  40fb21:	add    eax,r14d
  40fb24:	mov    BYTE PTR [rdi+0x4a],al
  40fb27:	movzx  eax,al
  40fb2a:	sub    eax,r14d
  40fb2d:	mov    rsi,QWORD PTR [rdx+0x30]
  40fb31:	movsxd rdx,eax
  40fb34:	lea    rax,[rdi+rdx*2+0xc4]
  40fb3c:	add    rdx,rbp
  40fb3f:	mov    ecx,DWORD PTR [rdi+0x30]
  40fb42:	lea    rdi,[rdi+rdx*2+0xc6]
  40fb4a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb50:	movzx  edx,WORD PTR [rax]
  40fb53:	add    rax,0x2
  40fb57:	shl    rdx,0x4
  40fb5b:	mov    DWORD PTR [rsi+rdx*1+0x8],ecx
  40fb5f:	cmp    rdi,rax
  40fb62:	jne    40fb50 <__sprintf_chk@plt+0xd570>
  40fb64:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40fb69:	nop    DWORD PTR [rax+0x0]
  40fb70:	mov    rsi,QWORD PTR [rsp+0x8]
  40fb75:	mov    rdi,r13
  40fb78:	mov    rbp,QWORD PTR [r13+0x30]
  40fb7c:	call   411920 <__sprintf_chk@plt+0xf340>
  40fb81:	cmp    DWORD PTR [rsp+0x48],0xd
  40fb86:	jne    40fce0 <__sprintf_chk@plt+0xd700>
  40fb8c:	mov    rax,QWORD PTR [rbp+0x0]
  40fb90:	movsxd rdx,DWORD PTR [rsp+0x50]
  40fb95:	mov    rax,QWORD PTR [rax+0x18]
  40fb99:	lea    rdx,[rax+rdx*4]
  40fb9d:	mov    eax,DWORD PTR [rdx]
  40fb9f:	and    eax,0xff803fff
  40fba4:	or     ah,0x40
  40fba7:	mov    DWORD PTR [rdx],eax
  40fba9:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40fbae:	xchg   ax,ax
  40fbb0:	mov    rdi,r13
  40fbb3:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  40fbb8:	test   eax,eax
  40fbba:	je     40facc <__sprintf_chk@plt+0xd4ec>
  40fbc0:	mov    rdi,r13
  40fbc3:	mov    rbp,QWORD PTR [r13+0x30]
  40fbc7:	call   40ee50 <__sprintf_chk@plt+0xc870>
  40fbcc:	mov    rsi,rax
  40fbcf:	xor    edx,edx
  40fbd1:	mov    rdi,r13
  40fbd4:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fbd9:	mov    eax,DWORD PTR [rbp+0x3c]
  40fbdc:	mov    esi,0x1
  40fbe1:	mov    rdi,rbp
  40fbe4:	mov    DWORD PTR [rsp+0x28],eax
  40fbe8:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
  40fbf1:	mov    DWORD PTR [rsp+0x20],0x6
  40fbf9:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40fbfe:	inc    DWORD PTR [rbp+0x3c]
  40fc01:	mov    rdx,QWORD PTR [r13+0x30]
  40fc05:	mov    rsi,rbx
  40fc08:	mov    rcx,QWORD PTR [rdx]
  40fc0b:	movzx  eax,BYTE PTR [rdx+0x4a]
  40fc0f:	mov    rdi,r13
  40fc12:	inc    eax
  40fc14:	mov    BYTE PTR [rdx+0x4a],al
  40fc17:	movzx  eax,al
  40fc1a:	dec    eax
  40fc1c:	cdqe   
  40fc1e:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  40fc26:	mov    edx,DWORD PTR [rdx+0x30]
  40fc29:	shl    rax,0x4
  40fc2d:	add    rax,QWORD PTR [rcx+0x30]
  40fc31:	mov    DWORD PTR [rax+0x8],edx
  40fc34:	mov    ecx,DWORD PTR [r13+0x4]
  40fc38:	xor    edx,edx
  40fc3a:	call   4101d0 <__sprintf_chk@plt+0xdbf0>
  40fc3f:	mov    rdx,rbx
  40fc42:	lea    rsi,[rsp+0x20]
  40fc47:	mov    rdi,rbp
  40fc4a:	call   40a6c0 <__sprintf_chk@plt+0x80e0>
  40fc4f:	movzx  eax,BYTE PTR [rbp+0x4a]
  40fc53:	mov    rdx,QWORD PTR [rbp+0x0]
  40fc57:	dec    eax
  40fc59:	cdqe   
  40fc5b:	movzx  eax,WORD PTR [rbp+rax*2+0xc4]
  40fc63:	shl    rax,0x4
  40fc67:	add    rax,QWORD PTR [rdx+0x30]
  40fc6b:	mov    edx,DWORD PTR [rbp+0x30]
  40fc6e:	mov    DWORD PTR [rax+0x8],edx
  40fc71:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40fc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc80:	mov    esi,0x80001e
  40fc85:	cmp    eax,0x3b
  40fc88:	je     40f980 <__sprintf_chk@plt+0xd3a0>
  40fc8e:	jmp    40f924 <__sprintf_chk@plt+0xd344>
  40fc93:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc98:	mov    rdi,r13
  40fc9b:	call   40acf0 <__sprintf_chk@plt+0x8710>
  40fca0:	mov    rdi,QWORD PTR [r13+0x30]
  40fca4:	mov    edx,ebp
  40fca6:	mov    eax,DWORD PTR [rdi+0x30]
  40fca9:	lea    rsi,[rdi+0x38]
  40fcad:	mov    DWORD PTR [rdi+0x34],eax
  40fcb0:	call   409df0 <__sprintf_chk@plt+0x7810>
  40fcb5:	mov    rdi,r15
  40fcb8:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  40fcbd:	mov    rdi,r15
  40fcc0:	call   409e90 <__sprintf_chk@plt+0x78b0>
  40fcc5:	mov    rdi,QWORD PTR [r13+0x30]
  40fcc9:	mov    edx,r14d
  40fccc:	mov    esi,eax
  40fcce:	call   409e60 <__sprintf_chk@plt+0x7880>
  40fcd3:	jmp    40f8c2 <__sprintf_chk@plt+0xd2e2>
  40fcd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fce0:	mov    edx,0x1
  40fce5:	mov    rsi,rbx
  40fce8:	mov    rdi,r13
  40fceb:	mov    QWORD PTR [rsp+0x40],0x0
  40fcf4:	call   411b80 <__sprintf_chk@plt+0xf5a0>
  40fcf9:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  40fcfe:	xchg   ax,ax
  40fd00:	mov    rdi,r13
  40fd03:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  40fd08:	test   eax,eax
  40fd0a:	je     41018b <__sprintf_chk@plt+0xdbab>
  40fd10:	mov    ebp,r14d
  40fd13:	jmp    40face <__sprintf_chk@plt+0xd4ee>
  40fd18:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd20:	mov    rdi,r15
  40fd23:	call   409e90 <__sprintf_chk@plt+0x78b0>
  40fd28:	mov    edx,eax
  40fd2a:	mov    rsi,rbx
  40fd2d:	mov    rdi,r15
  40fd30:	call   409df0 <__sprintf_chk@plt+0x7810>
  40fd35:	mov    eax,DWORD PTR [r15+0x30]
  40fd39:	mov    rsi,QWORD PTR [rsp]
  40fd3d:	mov    DWORD PTR [r15+0x34],eax
  40fd41:	mov    edx,r14d
  40fd44:	mov    rdi,r15
  40fd47:	call   409df0 <__sprintf_chk@plt+0x7810>
  40fd4c:	mov    eax,DWORD PTR [r13+0x4]
  40fd50:	cmp    DWORD PTR [r13+0x20],0x11f
  40fd58:	mov    DWORD PTR [r13+0x8],eax
  40fd5c:	je     4100ad <__sprintf_chk@plt+0xdacd>
  40fd62:	vmovdqa xmm0,XMMWORD PTR [r13+0x20]
  40fd68:	mov    DWORD PTR [r13+0x20],0x11f
  40fd70:	vmovaps XMMWORD PTR [r13+0x10],xmm0
  40fd76:	mov    rdi,r13
  40fd79:	call   411fa0 <__sprintf_chk@plt+0xf9c0>
  40fd7e:	jmp    40f70b <__sprintf_chk@plt+0xd12b>
  40fd83:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd88:	mov    rax,QWORD PTR [r13+0x30]
  40fd8c:	lea    r15,[r13+0x30]
  40fd90:	mov    QWORD PTR [rsp],rax
  40fd94:	mov    rsi,QWORD PTR [r13+0x38]
  40fd98:	mov    eax,DWORD PTR [rax+0x3c]
  40fd9b:	mov    ecx,0xf
  40fda0:	lea    rdx,[rip+0x7759]        # 417500 <__sprintf_chk@plt+0x14f20>
  40fda7:	mov    rdi,r15
  40fdaa:	mov    QWORD PTR [rsp+0x18],r10
  40fdaf:	mov    DWORD PTR [rsp+0x14],eax
  40fdb3:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40fdb8:	mov    rsi,rax
  40fdbb:	xor    edx,edx
  40fdbd:	mov    rdi,r13
  40fdc0:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fdc5:	mov    rsi,QWORD PTR [r13+0x38]
  40fdc9:	mov    ecx,0xb
  40fdce:	lea    rdx,[rip+0x773b]        # 417510 <__sprintf_chk@plt+0x14f30>
  40fdd5:	mov    rdi,r15
  40fdd8:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40fddd:	mov    rsi,rax
  40fde0:	mov    edx,0x1
  40fde5:	mov    rdi,r13
  40fde8:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fded:	mov    rsi,QWORD PTR [r13+0x38]
  40fdf1:	mov    ecx,0xd
  40fdf6:	lea    rdx,[rip+0x771f]        # 41751c <__sprintf_chk@plt+0x14f3c>
  40fdfd:	mov    rdi,r15
  40fe00:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40fe05:	mov    rsi,rax
  40fe08:	mov    edx,0x2
  40fe0d:	mov    rdi,r13
  40fe10:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fe15:	mov    r10,QWORD PTR [rsp+0x18]
  40fe1a:	mov    edx,0x3
  40fe1f:	mov    rsi,r10
  40fe22:	mov    rdi,r13
  40fe25:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fe2a:	cmp    DWORD PTR [r13+0x10],0x2c
  40fe2f:	je     410030 <__sprintf_chk@plt+0xda50>
  40fe35:	mov    DWORD PTR [rsp+0x18],0x1
  40fe3d:	mov    rdi,r13
  40fe40:	mov    esi,0x10b
  40fe45:	call   40f060 <__sprintf_chk@plt+0xca80>
  40fe4a:	xor    edx,edx
  40fe4c:	mov    rsi,rbx
  40fe4f:	mov    rdi,r13
  40fe52:	mov    r15d,DWORD PTR [r13+0x4]
  40fe56:	call   410610 <__sprintf_chk@plt+0xe030>
  40fe5b:	mov    rsi,rbx
  40fe5e:	mov    rdi,r13
  40fe61:	call   411680 <__sprintf_chk@plt+0xf0a0>
  40fe66:	mov    rdi,QWORD PTR [r13+0x30]
  40fe6a:	mov    rcx,rbx
  40fe6d:	mov    edx,eax
  40fe6f:	mov    esi,0x3
  40fe74:	call   40a800 <__sprintf_chk@plt+0x8220>
  40fe79:	mov    rdi,QWORD PTR [rsp]
  40fe7d:	mov    esi,0x3
  40fe82:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40fe87:	mov    ecx,DWORD PTR [rsp+0x18]
  40fe8b:	mov    esi,DWORD PTR [rsp+0x14]
  40fe8f:	xor    r8d,r8d
  40fe92:	mov    edx,r15d
  40fe95:	mov    rdi,r13
  40fe98:	call   412070 <__sprintf_chk@plt+0xfa90>
  40fe9d:	jmp    40fff5 <__sprintf_chk@plt+0xda15>
  40fea2:	nop    WORD PTR [rax+rax*1+0x0]
  40fea8:	mov    r15,QWORD PTR [r13+0x30]
  40feac:	mov    QWORD PTR [rsp+0x18],rax
  40feb1:	mov    eax,DWORD PTR [r15+0x3c]
  40feb5:	mov    rsi,QWORD PTR [r13+0x38]
  40feb9:	mov    DWORD PTR [rsp+0x14],eax
  40febd:	lea    rax,[r13+0x30]
  40fec1:	mov    ecx,0xb
  40fec6:	lea    rdx,[rip+0x7610]        # 4174dd <__sprintf_chk@plt+0x14efd>
  40fecd:	mov    rdi,rax
  40fed0:	mov    QWORD PTR [rsp],rax
  40fed4:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40fed9:	mov    rsi,rax
  40fedc:	xor    edx,edx
  40fede:	mov    rdi,r13
  40fee1:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40fee6:	mov    rsi,QWORD PTR [r13+0x38]
  40feea:	mov    rdi,QWORD PTR [rsp]
  40feee:	mov    ecx,0xb
  40fef3:	lea    rdx,[rip+0x75ef]        # 4174e9 <__sprintf_chk@plt+0x14f09>
  40fefa:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40feff:	mov    rsi,rax
  40ff02:	mov    edx,0x1
  40ff07:	mov    rdi,r13
  40ff0a:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40ff0f:	mov    rsi,QWORD PTR [r13+0x38]
  40ff13:	mov    rdi,QWORD PTR [rsp]
  40ff17:	mov    ecx,0xa
  40ff1c:	lea    rdx,[rip+0x75d2]        # 4174f5 <__sprintf_chk@plt+0x14f15>
  40ff23:	call   40e220 <__sprintf_chk@plt+0xbc40>
  40ff28:	mov    rsi,rax
  40ff2b:	mov    edx,0x2
  40ff30:	mov    rdi,r13
  40ff33:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40ff38:	mov    r10,QWORD PTR [rsp+0x18]
  40ff3d:	mov    edx,0x3
  40ff42:	mov    rsi,r10
  40ff45:	mov    rdi,r13
  40ff48:	call   40add0 <__sprintf_chk@plt+0x87f0>
  40ff4d:	mov    esi,0x3d
  40ff52:	mov    rdi,r13
  40ff55:	call   40f060 <__sprintf_chk@plt+0xca80>
  40ff5a:	mov    rdi,r13
  40ff5d:	call   411dc0 <__sprintf_chk@plt+0xf7e0>
  40ff62:	mov    esi,0x2c
  40ff67:	mov    rdi,r13
  40ff6a:	call   40f060 <__sprintf_chk@plt+0xca80>
  40ff6f:	mov    rdi,r13
  40ff72:	call   411dc0 <__sprintf_chk@plt+0xf7e0>
  40ff77:	cmp    DWORD PTR [r13+0x10],0x2c
  40ff7c:	je     410016 <__sprintf_chk@plt+0xda36>
  40ff82:	mov    rax,QWORD PTR [rip+0x84df]        # 418468 <__sprintf_chk@plt+0x15e88>
  40ff89:	mov    rcx,QWORD PTR [rsp+0x8]
  40ff8e:	mov    rdx,rbx
  40ff91:	mov    rsi,rbx
  40ff94:	mov    rdi,r15
  40ff97:	mov    QWORD PTR [rsp+0x40],rax
  40ff9c:	mov    DWORD PTR [rsp+0x48],0x3
  40ffa4:	call   409520 <__sprintf_chk@plt+0x6f40>
  40ffa9:	mov    rdx,QWORD PTR [r15+0x18]
  40ffad:	mov    ecx,0x6
  40ffb2:	shl    eax,0xe
  40ffb5:	shlx   esi,DWORD PTR [r15+0x3c],ecx
  40ffbb:	mov    edx,DWORD PTR [rdx+0x8]
  40ffbe:	or     esi,eax
  40ffc0:	or     esi,0x1
  40ffc3:	mov    rdi,r15
  40ffc6:	call   409980 <__sprintf_chk@plt+0x73a0>
  40ffcb:	mov    esi,0x1
  40ffd0:	mov    rdi,r15
  40ffd3:	call   40a150 <__sprintf_chk@plt+0x7b70>
  40ffd8:	inc    DWORD PTR [r15+0x3c]
  40ffdc:	mov    esi,DWORD PTR [rsp+0x14]
  40ffe0:	mov    r8d,0x1
  40ffe6:	mov    ecx,0x1
  40ffeb:	mov    edx,ebp
  40ffed:	mov    rdi,r13
  40fff0:	call   412070 <__sprintf_chk@plt+0xfa90>
  40fff5:	mov    rdi,r13
  40fff8:	mov    ecx,ebp
  40fffa:	mov    edx,0x108
  40ffff:	mov    esi,0x106
  410004:	call   40f100 <__sprintf_chk@plt+0xcb20>
  410009:	mov    rdi,r14
  41000c:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  410011:	jmp    40f608 <__sprintf_chk@plt+0xd028>
  410016:	mov    rdi,r13
  410019:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  41001e:	test   eax,eax
  410020:	je     40ff82 <__sprintf_chk@plt+0xd9a2>
  410026:	mov    rdi,r13
  410029:	call   411dc0 <__sprintf_chk@plt+0xf7e0>
  41002e:	jmp    40ffdc <__sprintf_chk@plt+0xd9fc>
  410030:	mov    r15d,0x4
  410036:	mov    rdi,r13
  410039:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  41003e:	test   eax,eax
  410040:	je     4101b3 <__sprintf_chk@plt+0xdbd3>
  410046:	lea    eax,[r15+0x1]
  41004a:	mov    rdi,r13
  41004d:	mov    DWORD PTR [rsp+0x18],eax
  410051:	call   40ee50 <__sprintf_chk@plt+0xc870>
  410056:	mov    rsi,rax
  410059:	mov    edx,r15d
  41005c:	mov    rdi,r13
  41005f:	call   40add0 <__sprintf_chk@plt+0x87f0>
  410064:	cmp    DWORD PTR [r13+0x10],0x2c
  410069:	je     410181 <__sprintf_chk@plt+0xdba1>
  41006f:	lea    eax,[r15-0x2]
  410073:	mov    DWORD PTR [rsp+0x18],eax
  410077:	jmp    40fe3d <__sprintf_chk@plt+0xd85d>
  41007c:	lea    rdx,[rbp+0x8]
  410080:	mov    ecx,0xffffffff
  410085:	mov    rdi,rbx
  410088:	call   40a190 <__sprintf_chk@plt+0x7bb0>
  41008d:	cmp    DWORD PTR [rsp+0x40],0xd
  410092:	jne    41009e <__sprintf_chk@plt+0xdabe>
  410094:	cmp    r12d,0x1
  410098:	je     410194 <__sprintf_chk@plt+0xdbb4>
  41009e:	movzx  esi,BYTE PTR [rbx+0x4a]
  4100a2:	shl    esi,0x6
  4100a5:	or     esi,0x1e
  4100a8:	jmp    40f980 <__sprintf_chk@plt+0xd3a0>
  4100ad:	mov    rdi,r13
  4100b0:	call   40ee30 <__sprintf_chk@plt+0xc850>
  4100b5:	jmp    40fd76 <__sprintf_chk@plt+0xd796>
  4100ba:	nop    WORD PTR [rax+rax*1+0x0]
  4100c0:	mov    rdi,r13
  4100c3:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  4100c8:	test   eax,eax
  4100ca:	je     40fafd <__sprintf_chk@plt+0xd51d>
  4100d0:	xor    edx,edx
  4100d2:	mov    rsi,rbx
  4100d5:	mov    rdi,r13
  4100d8:	call   410610 <__sprintf_chk@plt+0xe030>
  4100dd:	mov    rsi,rbx
  4100e0:	mov    rdi,r13
  4100e3:	call   411680 <__sprintf_chk@plt+0xf0a0>
  4100e8:	mov    edx,eax
  4100ea:	jmp    40fb07 <__sprintf_chk@plt+0xd527>
  4100ef:	mov    rsi,r14
  4100f2:	mov    rdi,r13
  4100f5:	call   40efc0 <__sprintf_chk@plt+0xc9e0>
  4100fa:	mov    edx,0x1
  4100ff:	jmp    40fa5f <__sprintf_chk@plt+0xd47f>
  410104:	mov    rdi,r13
  410107:	call   40ee30 <__sprintf_chk@plt+0xc850>
  41010c:	jmp    40fabe <__sprintf_chk@plt+0xd4de>
  410111:	mov    rdi,r13
  410114:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410119:	jmp    40fa26 <__sprintf_chk@plt+0xd446>
  41011e:	mov    rdi,r13
  410121:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410126:	jmp    40f9d6 <__sprintf_chk@plt+0xd3f6>
  41012b:	mov    rdi,r13
  41012e:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410133:	jmp    40f8fa <__sprintf_chk@plt+0xd31a>
  410138:	mov    rdi,r13
  41013b:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410140:	jmp    40f87b <__sprintf_chk@plt+0xd29b>
  410145:	mov    rdi,r13
  410148:	call   40ee30 <__sprintf_chk@plt+0xc850>
  41014d:	jmp    40f7bf <__sprintf_chk@plt+0xd1df>
  410152:	mov    rdi,r13
  410155:	call   40ee30 <__sprintf_chk@plt+0xc850>
  41015a:	jmp    40f64e <__sprintf_chk@plt+0xd06e>
  41015f:	mov    rdi,r13
  410162:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410167:	jmp    40f56a <__sprintf_chk@plt+0xcf8a>
  41016c:	call   40a270 <__sprintf_chk@plt+0x7c90>
  410171:	shl    eax,0x6
  410174:	mov    esi,eax
  410176:	or     esi,0x100001e
  41017c:	jmp    40f980 <__sprintf_chk@plt+0xd3a0>
  410181:	mov    r15d,DWORD PTR [rsp+0x18]
  410186:	jmp    410036 <__sprintf_chk@plt+0xda56>
  41018b:	mov    eax,DWORD PTR [r13+0x10]
  41018f:	jmp    40faf4 <__sprintf_chk@plt+0xd514>
  410194:	mov    rax,QWORD PTR [rbx]
  410197:	movsxd rdx,DWORD PTR [rsp+0x48]
  41019c:	mov    rax,QWORD PTR [rax+0x18]
  4101a0:	lea    rdx,[rax+rdx*4]
  4101a4:	mov    eax,DWORD PTR [rdx]
  4101a6:	and    eax,0xffffffc0
  4101a9:	or     eax,0x1d
  4101ac:	mov    DWORD PTR [rdx],eax
  4101ae:	jmp    41009e <__sprintf_chk@plt+0xdabe>
  4101b3:	lea    eax,[r15-0x3]
  4101b7:	mov    DWORD PTR [rsp+0x18],eax
  4101bb:	jmp    40fe3d <__sprintf_chk@plt+0xd85d>
  4101c0:	call   4023e0 <__stack_chk_fail@plt>
  4101c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4101d0:	push   r15
  4101d2:	push   r14
  4101d4:	mov    r14d,edx
  4101d7:	push   r13
  4101d9:	mov    r13,rsi
  4101dc:	push   r12
  4101de:	mov    r12d,ecx
  4101e1:	push   rbp
  4101e2:	push   rbx
  4101e3:	mov    rbx,rdi
  4101e6:	sub    rsp,0x278
  4101ed:	lea    rbp,[rsp+0x10]
  4101f2:	mov    rsi,rbp
  4101f5:	mov    rax,QWORD PTR fs:0x28
  4101fe:	mov    QWORD PTR [rsp+0x268],rax
  410206:	xor    eax,eax
  410208:	call   4088a0 <__sprintf_chk@plt+0x62c0>
  41020d:	mov    rax,QWORD PTR [rsp+0x10]
  410212:	mov    esi,0x28
  410217:	mov    DWORD PTR [rax+0x60],r12d
  41021b:	mov    rdi,rbx
  41021e:	call   40f060 <__sprintf_chk@plt+0xca80>
  410223:	test   r14d,r14d
  410226:	jne    4104f0 <__sprintf_chk@plt+0xdf10>
  41022c:	mov    r14,QWORD PTR [rbx+0x30]
  410230:	mov    r15,QWORD PTR [r14]
  410233:	mov    BYTE PTR [r15+0x72],0x0
  410238:	mov    eax,DWORD PTR [rbx+0x10]
  41023b:	cmp    eax,0x29
  41023e:	je     4104e0 <__sprintf_chk@plt+0xdf00>
  410244:	xor    edx,edx
  410246:	cmp    eax,0x117
  41024b:	je     410550 <__sprintf_chk@plt+0xdf70>
  410251:	cmp    eax,0x11d
  410256:	jne    410460 <__sprintf_chk@plt+0xde80>
  41025c:	lea    r8d,[rdx+0x1]
  410260:	mov    rdi,rbx
  410263:	mov    DWORD PTR [rsp+0x8],r8d
  410268:	mov    DWORD PTR [rsp+0xc],edx
  41026c:	call   40ee50 <__sprintf_chk@plt+0xc870>
  410271:	mov    edx,DWORD PTR [rsp+0xc]
  410275:	mov    rsi,rax
  410278:	mov    rdi,rbx
  41027b:	call   40add0 <__sprintf_chk@plt+0x87f0>
  410280:	movzx  ecx,BYTE PTR [r15+0x72]
  410285:	mov    r8d,DWORD PTR [rsp+0x8]
  41028a:	test   cl,cl
  41028c:	jne    410298 <__sprintf_chk@plt+0xdcb8>
  41028e:	cmp    DWORD PTR [rbx+0x10],0x2c
  410292:	je     4105a0 <__sprintf_chk@plt+0xdfc0>
  410298:	mov    rsi,QWORD PTR [rbx+0x30]
  41029c:	and    ecx,0x1
  41029f:	movzx  eax,BYTE PTR [rsi+0x4a]
  4102a3:	add    eax,r8d
  4102a6:	mov    BYTE PTR [rsi+0x4a],al
  4102a9:	mov    rdx,QWORD PTR [rsi]
  4102ac:	movzx  eax,al
  4102af:	sub    eax,r8d
  4102b2:	mov    r9,QWORD PTR [rdx+0x30]
  4102b6:	dec    r8d
  4102b9:	movsxd rdx,eax
  4102bc:	lea    rax,[rsi+rdx*2+0xc4]
  4102c4:	add    rdx,r8
  4102c7:	mov    edi,DWORD PTR [rsi+0x30]
  4102ca:	lea    rsi,[rsi+rdx*2+0xc6]
  4102d2:	nop    WORD PTR [rax+rax*1+0x0]
  4102d8:	movzx  edx,WORD PTR [rax]
  4102db:	add    rax,0x2
  4102df:	shl    rdx,0x4
  4102e3:	mov    DWORD PTR [r9+rdx*1+0x8],edi
  4102e8:	cmp    rsi,rax
  4102eb:	jne    4102d8 <__sprintf_chk@plt+0xdcf8>
  4102ed:	movzx  esi,BYTE PTR [r14+0x4a]
  4102f2:	mov    rdi,r14
  4102f5:	mov    eax,esi
  4102f7:	sub    eax,ecx
  4102f9:	mov    BYTE PTR [r15+0x71],al
  4102fd:	movzx  r15d,sil
  410301:	call   40a150 <__sprintf_chk@plt+0x7b70>
  410306:	add    DWORD PTR [r14+0x3c],r15d
  41030a:	mov    esi,0x29
  41030f:	mov    rdi,rbx
  410312:	call   40f060 <__sprintf_chk@plt+0xca80>
  410317:	mov    rdi,rbx
  41031a:	call   40f470 <__sprintf_chk@plt+0xce90>
  41031f:	mov    edx,DWORD PTR [rbx+0x4]
  410322:	mov    rax,QWORD PTR [rsp+0x10]
  410327:	mov    ecx,r12d
  41032a:	mov    DWORD PTR [rax+0x64],edx
  41032d:	mov    esi,0x106
  410332:	mov    edx,0x109
  410337:	mov    rdi,rbx
  41033a:	call   40f100 <__sprintf_chk@plt+0xcb20>
  41033f:	mov    rdi,rbx
  410342:	call   40f1f0 <__sprintf_chk@plt+0xcc10>
  410347:	mov    r12,QWORD PTR [rbx+0x30]
  41034b:	mov    r14,QWORD PTR [r12]
  41034f:	mov    ecx,DWORD PTR [r12+0x44]
  410354:	mov    r15d,DWORD PTR [r14+0x58]
  410358:	cmp    r15d,ecx
  41035b:	jle    410478 <__sprintf_chk@plt+0xde98>
  410361:	mov    rax,QWORD PTR [r14+0x20]
  410365:	lea    edx,[rcx+0x1]
  410368:	mov    rsi,QWORD PTR [rsp+0x10]
  41036d:	mov    DWORD PTR [r12+0x44],edx
  410372:	movsxd rdx,ecx
  410375:	mov    QWORD PTR [rax+rdx*8],rsi
  410379:	mov    rsi,QWORD PTR [rsp+0x10]
  41037e:	test   BYTE PTR [rsi+0x9],0x3
  410382:	je     4103c0 <__sprintf_chk@plt+0xdde0>
  410384:	movzx  eax,BYTE PTR [r14+0x9]
  410389:	test   al,0x4
  41038b:	je     4103c0 <__sprintf_chk@plt+0xdde0>
  41038d:	mov    rdx,QWORD PTR [rbx+0x38]
  410391:	mov    rdi,QWORD PTR [rdx+0x20]
  410395:	cmp    BYTE PTR [rdi+0x21],0x1
  410399:	je     4105e0 <__sprintf_chk@plt+0xe000>
  41039f:	movzx  edx,BYTE PTR [rdi+0x20]
  4103a3:	and    eax,0xfffffff8
  4103a6:	and    edx,0x3
  4103a9:	or     eax,edx
  4103ab:	mov    BYTE PTR [r14+0x9],al
  4103af:	mov    eax,DWORD PTR [r12+0x44]
  4103b4:	lea    ecx,[rax-0x1]
  4103b7:	nop    WORD PTR [rax+rax*1+0x0]
  4103c0:	mov    rax,QWORD PTR [r12+0x18]
  4103c5:	shl    ecx,0xe
  4103c8:	mov    esi,ecx
  4103ca:	mov    edx,DWORD PTR [rax+0x8]
  4103cd:	or     esi,0x24
  4103d0:	mov    rdi,r12
  4103d3:	call   409980 <__sprintf_chk@plt+0x73a0>
  4103d8:	mov    DWORD PTR [r13+0x8],eax
  4103dc:	mov    QWORD PTR [r13+0x10],0xffffffffffffffff
  4103e4:	mov    DWORD PTR [r13+0x0],0xb
  4103ec:	mov    rax,QWORD PTR [rsp+0x10]
  4103f1:	xor    ebx,ebx
  4103f3:	cmp    BYTE PTR [rax+0x70],0x0
  4103f7:	je     410437 <__sprintf_chk@plt+0xde57>
  4103f9:	nop    DWORD PTR [rax+0x0]
  410400:	movzx  esi,BYTE PTR [rbp+rbx*2+0x4c]
  410405:	xor    eax,eax
  410407:	mov    rdx,QWORD PTR [r12+0x18]
  41040c:	cmp    BYTE PTR [rbp+rbx*2+0x4b],0x6
  410411:	setne  al
  410414:	shl    eax,0x2
  410417:	mov    edx,DWORD PTR [rdx+0x8]
  41041a:	shl    esi,0x17
  41041d:	or     esi,eax
  41041f:	mov    rdi,r12
  410422:	call   409980 <__sprintf_chk@plt+0x73a0>
  410427:	mov    rax,QWORD PTR [rsp+0x10]
  41042c:	inc    rbx
  41042f:	movzx  eax,BYTE PTR [rax+0x70]
  410433:	cmp    eax,ebx
  410435:	jg     410400 <__sprintf_chk@plt+0xde20>
  410437:	mov    rax,QWORD PTR [rsp+0x268]
  41043f:	xor    rax,QWORD PTR fs:0x28
  410448:	jne    4105fc <__sprintf_chk@plt+0xe01c>
  41044e:	add    rsp,0x278
  410455:	pop    rbx
  410456:	pop    rbp
  410457:	pop    r12
  410459:	pop    r13
  41045b:	pop    r14
  41045d:	pop    r15
  41045f:	ret    
  410460:	mov    edx,eax
  410462:	lea    rsi,[rip+0x70db]        # 417544 <__sprintf_chk@plt+0x14f64>
  410469:	mov    rdi,rbx
  41046c:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  410471:	nop    DWORD PTR [rax+0x0]
  410478:	mov    rsi,QWORD PTR [r14+0x20]
  41047c:	mov    rdi,QWORD PTR [rbx+0x38]
  410480:	mov    ecx,0x8
  410485:	lea    rdx,[r14+0x58]
  410489:	lea    r9,[rip+0x6cd5]        # 417165 <__sprintf_chk@plt+0x14b85>
  410490:	mov    r8d,0x3ffff
  410496:	call   4094a0 <__sprintf_chk@plt+0x6ec0>
  41049b:	mov    ecx,DWORD PTR [r14+0x58]
  41049f:	mov    QWORD PTR [r14+0x20],rax
  4104a3:	cmp    ecx,r15d
  4104a6:	jle    4104d0 <__sprintf_chk@plt+0xdef0>
  4104a8:	dec    ecx
  4104aa:	movsxd rsi,r15d
  4104ad:	sub    ecx,r15d
  4104b0:	lea    rcx,[rsi+rcx*1+0x1]
  4104b5:	lea    rdx,[rax+rsi*8]
  4104b9:	lea    rcx,[rax+rcx*8]
  4104bd:	nop    DWORD PTR [rax]
  4104c0:	mov    QWORD PTR [rdx],0x0
  4104c7:	add    rdx,0x8
  4104cb:	cmp    rcx,rdx
  4104ce:	jne    4104c0 <__sprintf_chk@plt+0xdee0>
  4104d0:	mov    ecx,DWORD PTR [r12+0x44]
  4104d5:	jmp    410365 <__sprintf_chk@plt+0xdd85>
  4104da:	nop    WORD PTR [rax+rax*1+0x0]
  4104e0:	xor    ecx,ecx
  4104e2:	jmp    4102ed <__sprintf_chk@plt+0xdd0d>
  4104e7:	nop    WORD PTR [rax+rax*1+0x0]
  4104f0:	mov    rsi,QWORD PTR [rbx+0x38]
  4104f4:	lea    rdi,[rbx+0x30]
  4104f8:	mov    ecx,0x4
  4104fd:	lea    rdx,[rip+0x703b]        # 41753f <__sprintf_chk@plt+0x14f5f>
  410504:	call   40e220 <__sprintf_chk@plt+0xbc40>
  410509:	mov    rsi,rax
  41050c:	xor    edx,edx
  41050e:	mov    rdi,rbx
  410511:	call   40add0 <__sprintf_chk@plt+0x87f0>
  410516:	mov    r14,QWORD PTR [rbx+0x30]
  41051a:	movzx  eax,BYTE PTR [r14+0x4a]
  41051f:	mov    r15,QWORD PTR [r14]
  410522:	inc    eax
  410524:	mov    BYTE PTR [r14+0x4a],al
  410528:	movzx  eax,al
  41052b:	dec    eax
  41052d:	cdqe   
  41052f:	movzx  eax,WORD PTR [r14+rax*2+0xc4]
  410538:	mov    edx,DWORD PTR [r14+0x30]
  41053c:	shl    rax,0x4
  410540:	add    rax,QWORD PTR [r15+0x30]
  410544:	mov    DWORD PTR [rax+0x8],edx
  410547:	jmp    410233 <__sprintf_chk@plt+0xdc53>
  41054c:	nop    DWORD PTR [rax+0x0]
  410550:	mov    eax,DWORD PTR [rbx+0x4]
  410553:	cmp    DWORD PTR [rbx+0x20],0x11f
  41055a:	mov    DWORD PTR [rbx+0x8],eax
  41055d:	je     4105c8 <__sprintf_chk@plt+0xdfe8>
  41055f:	vmovdqa xmm0,XMMWORD PTR [rbx+0x20]
  410564:	mov    DWORD PTR [rbx+0x20],0x11f
  41056b:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  410570:	movzx  ecx,BYTE PTR [r15+0x72]
  410575:	mov    eax,ecx
  410577:	or     eax,0x2
  41057a:	mov    BYTE PTR [r15+0x72],al
  41057e:	and    ecx,0x1
  410581:	mov    rsi,QWORD PTR [rbx+0x30]
  410585:	movzx  eax,BYTE PTR [rsi+0x4a]
  410589:	add    eax,edx
  41058b:	mov    BYTE PTR [rsi+0x4a],al
  41058e:	test   edx,edx
  410590:	je     4102ed <__sprintf_chk@plt+0xdd0d>
  410596:	mov    r8d,edx
  410599:	jmp    4102a9 <__sprintf_chk@plt+0xdcc9>
  41059e:	xchg   ax,ax
  4105a0:	mov    rdi,rbx
  4105a3:	mov    DWORD PTR [rsp+0x8],r8d
  4105a8:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  4105ad:	test   eax,eax
  4105af:	mov    r8d,DWORD PTR [rsp+0x8]
  4105b4:	je     4105f2 <__sprintf_chk@plt+0xe012>
  4105b6:	mov    eax,DWORD PTR [rbx+0x10]
  4105b9:	mov    edx,r8d
  4105bc:	jmp    410246 <__sprintf_chk@plt+0xdc66>
  4105c1:	nop    DWORD PTR [rax+0x0]
  4105c8:	mov    rdi,rbx
  4105cb:	mov    DWORD PTR [rsp+0x8],edx
  4105cf:	call   40ee30 <__sprintf_chk@plt+0xc850>
  4105d4:	mov    edx,DWORD PTR [rsp+0x8]
  4105d8:	jmp    410570 <__sprintf_chk@plt+0xdf90>
  4105da:	nop    WORD PTR [rax+rax*1+0x0]
  4105e0:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  4105e5:	mov    eax,DWORD PTR [r12+0x44]
  4105ea:	lea    ecx,[rax-0x1]
  4105ed:	jmp    4103c0 <__sprintf_chk@plt+0xdde0>
  4105f2:	movzx  ecx,BYTE PTR [r15+0x72]
  4105f7:	jmp    410298 <__sprintf_chk@plt+0xdcb8>
  4105fc:	call   4023e0 <__stack_chk_fail@plt>
  410601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41060c:	nop    DWORD PTR [rax+0x0]
  410610:	push   r15
  410612:	push   r14
  410614:	mov    r14,rdi
  410617:	push   r13
  410619:	push   r12
  41061b:	push   rbp
  41061c:	push   rbx
  41061d:	sub    rsp,0x38
  410621:	mov    DWORD PTR [rsp+0x4],edx
  410625:	mov    rdx,QWORD PTR [rdi+0x38]
  410629:	mov    rax,QWORD PTR fs:0x28
  410632:	mov    QWORD PTR [rsp+0x28],rax
  410637:	xor    eax,eax
  410639:	movzx  eax,WORD PTR [rdx+0x60]
  41063d:	inc    eax
  41063f:	mov    WORD PTR [rdx+0x60],ax
  410643:	cmp    ax,0xc8
  410647:	ja     410840 <__sprintf_chk@plt+0xe260>
  41064d:	mov    eax,DWORD PTR [rdi+0x10]
  410650:	mov    rbx,rsi
  410653:	cmp    eax,0x2d
  410656:	je     410e50 <__sprintf_chk@plt+0xe870>
  41065c:	cmp    eax,0x10e
  410661:	je     410720 <__sprintf_chk@plt+0xe140>
  410667:	cmp    eax,0x23
  41066a:	je     410830 <__sprintf_chk@plt+0xe250>
  410670:	cmp    eax,0x10d
  410675:	je     41109d <__sprintf_chk@plt+0xeabd>
  41067b:	jle    410e18 <__sprintf_chk@plt+0xe838>
  410681:	cmp    eax,0x117
  410686:	je     41105d <__sprintf_chk@plt+0xea7d>
  41068c:	jle    410df0 <__sprintf_chk@plt+0xe810>
  410692:	cmp    eax,0x11c
  410697:	je     411040 <__sprintf_chk@plt+0xea60>
  41069d:	cmp    eax,0x11e
  4106a2:	jne    410e37 <__sprintf_chk@plt+0xe857>
  4106a8:	mov    rax,QWORD PTR [r14+0x18]
  4106ac:	lea    rbp,[rsp+0x10]
  4106b1:	mov    rdi,QWORD PTR [rdi+0x30]
  4106b5:	lea    rcx,[rsp+0x18]
  4106ba:	mov    rdx,rbp
  4106bd:	mov    rsi,rbp
  4106c0:	mov    QWORD PTR [rsp+0x10],rax
  4106c5:	mov    DWORD PTR [rsp+0x18],0x4
  4106cd:	call   409520 <__sprintf_chk@plt+0x6f40>
  4106d2:	mov    DWORD PTR [rbx+0x8],eax
  4106d5:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  4106dd:	mov    DWORD PTR [rbx],0x4
  4106e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4106e8:	mov    eax,DWORD PTR [r14+0x4]
  4106ec:	cmp    DWORD PTR [r14+0x20],0x11f
  4106f4:	mov    DWORD PTR [r14+0x8],eax
  4106f8:	je     410fe1 <__sprintf_chk@plt+0xea01>
  4106fe:	vmovdqa xmm5,XMMWORD PTR [r14+0x20]
  410704:	mov    DWORD PTR [r14+0x20],0x11f
  41070c:	vmovaps XMMWORD PTR [r14+0x10],xmm5
  410712:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  410717:	nop    WORD PTR [rax+rax*1+0x0]
  410720:	mov    ebp,0x1
  410725:	mov    eax,DWORD PTR [r14+0x4]
  410729:	cmp    DWORD PTR [r14+0x20],0x11f
  410731:	mov    DWORD PTR [r14+0x8],eax
  410735:	je     410f18 <__sprintf_chk@plt+0xe938>
  41073b:	vmovdqa xmm2,XMMWORD PTR [r14+0x20]
  410741:	mov    DWORD PTR [r14+0x20],0x11f
  410749:	vmovaps XMMWORD PTR [r14+0x10],xmm2
  41074f:	mov    edx,0x8
  410754:	mov    rsi,rbx
  410757:	mov    rdi,r14
  41075a:	call   410610 <__sprintf_chk@plt+0xe030>
  41075f:	mov    r12,QWORD PTR [r14+0x30]
  410763:	mov    DWORD PTR [rsp+0x10],0x5
  41076b:	mov    QWORD PTR [rsp+0x18],0x0
  410774:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
  41077d:	cmp    ebp,0x1
  410780:	je     410e90 <__sprintf_chk@plt+0xe8b0>
  410786:	cmp    ebp,0x2
  410789:	je     410e60 <__sprintf_chk@plt+0xe880>
  41078f:	cmp    DWORD PTR [rbx],0x5
  410792:	je     410f50 <__sprintf_chk@plt+0xe970>
  410798:	mov    rsi,rbx
  41079b:	mov    rdi,r12
  41079e:	call   40a270 <__sprintf_chk@plt+0x7c90>
  4107a3:	lea    rbp,[rsp+0x10]
  4107a8:	mov    rcx,rbp
  4107ab:	mov    rdx,rbx
  4107ae:	mov    esi,0x12
  4107b3:	mov    rdi,r12
  4107b6:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  4107bb:	mov    eax,DWORD PTR [r14+0x10]
  4107bf:	cmp    eax,0x5e
  4107c2:	je     410f83 <__sprintf_chk@plt+0xe9a3>
  4107c8:	jg     410cc0 <__sprintf_chk@plt+0xe6e0>
  4107ce:	cmp    eax,0x2d
  4107d1:	je     410f28 <__sprintf_chk@plt+0xe948>
  4107d7:	jg     410850 <__sprintf_chk@plt+0xe270>
  4107d9:	cmp    eax,0x2a
  4107dc:	je     410dc0 <__sprintf_chk@plt+0xe7e0>
  4107e2:	cmp    eax,0x2b
  4107e5:	je     410d60 <__sprintf_chk@plt+0xe780>
  4107eb:	cmp    eax,0x25
  4107ee:	je     410d50 <__sprintf_chk@plt+0xe770>
  4107f4:	mov    r15d,0xf
  4107fa:	mov    rax,QWORD PTR [r14+0x38]
  4107fe:	dec    WORD PTR [rax+0x60]
  410802:	mov    eax,r15d
  410805:	mov    rbx,QWORD PTR [rsp+0x28]
  41080a:	xor    rbx,QWORD PTR fs:0x28
  410813:	jne    41112a <__sprintf_chk@plt+0xeb4a>
  410819:	add    rsp,0x38
  41081d:	pop    rbx
  41081e:	pop    rbp
  41081f:	pop    r12
  410821:	pop    r13
  410823:	pop    r14
  410825:	pop    r15
  410827:	ret    
  410828:	nop    DWORD PTR [rax+rax*1+0x0]
  410830:	mov    ebp,0x2
  410835:	jmp    410725 <__sprintf_chk@plt+0xe145>
  41083a:	nop    WORD PTR [rax+rax*1+0x0]
  410840:	xor    edx,edx
  410842:	lea    rsi,[rip+0x79ff]        # 418248 <__sprintf_chk@plt+0x15c68>
  410849:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  41084e:	xchg   ax,ax
  410850:	cmp    eax,0x3c
  410853:	je     410db0 <__sprintf_chk@plt+0xe7d0>
  410859:	cmp    eax,0x3e
  41085c:	je     410d70 <__sprintf_chk@plt+0xe790>
  410862:	cmp    eax,0x2f
  410865:	jne    4107f4 <__sprintf_chk@plt+0xe214>
  410867:	mov    eax,0x7
  41086c:	mov    r15d,0x3
  410872:	nop    WORD PTR [rax+rax*1+0x0]
  410878:	cmp    DWORD PTR [rsp+0x4],eax
  41087c:	jae    4107fa <__sprintf_chk@plt+0xe21a>
  410882:	lea    rbp,[rsp+0x10]
  410887:	mov    r12d,r15d
  41088a:	lea    r13,[rip+0x76ef]        # 417f80 <__sprintf_chk@plt+0x159a0>
  410891:	mov    eax,DWORD PTR [r14+0x4]
  410895:	cmp    DWORD PTR [r14+0x20],0x11f
  41089d:	mov    DWORD PTR [r14+0x8],eax
  4108a1:	je     410d30 <__sprintf_chk@plt+0xe750>
  4108a7:	vmovdqa xmm1,XMMWORD PTR [r14+0x20]
  4108ad:	mov    DWORD PTR [r14+0x20],0x11f
  4108b5:	vmovaps XMMWORD PTR [r14+0x10],xmm1
  4108bb:	mov    r10,QWORD PTR [r14+0x30]
  4108bf:	cmp    r15d,0xe
  4108c3:	ja     410a71 <__sprintf_chk@plt+0xe491>
  4108c9:	lea    rcx,[rip+0x7384]        # 417c54 <__sprintf_chk@plt+0x15674>
  4108d0:	movsxd rax,DWORD PTR [rcx+r12*4]
  4108d4:	add    rax,rcx
  4108d7:	notrack jmp rax
  4108da:	nop    WORD PTR [rax+rax*1+0x0]
  4108e0:	mov    rdi,r10
  4108e3:	mov    rsi,rbx
  4108e6:	mov    QWORD PTR [rsp+0x8],r10
  4108eb:	call   409a50 <__sprintf_chk@plt+0x7470>
  4108f0:	mov    ecx,DWORD PTR [rbx]
  4108f2:	mov    edx,0xffffffff
  4108f7:	cmp    ecx,0x3
  4108fa:	mov    r10,QWORD PTR [rsp+0x8]
  4108ff:	je     41092b <__sprintf_chk@plt+0xe34b>
  410901:	cmp    ecx,0xa
  410904:	je     410de0 <__sprintf_chk@plt+0xe800>
  41090a:	cmp    ecx,0x1
  41090d:	je     41092b <__sprintf_chk@plt+0xe34b>
  41090f:	mov    edx,0x1
  410914:	mov    rdi,r10
  410917:	mov    rsi,rbx
  41091a:	mov    QWORD PTR [rsp+0x8],r10
  41091f:	call   40a8a0 <__sprintf_chk@plt+0x82c0>
  410924:	mov    r10,QWORD PTR [rsp+0x8]
  410929:	mov    edx,eax
  41092b:	mov    rdi,r10
  41092e:	lea    rsi,[rbx+0x10]
  410932:	mov    QWORD PTR [rsp+0x8],r10
  410937:	call   409df0 <__sprintf_chk@plt+0x7810>
  41093c:	mov    r10,QWORD PTR [rsp+0x8]
  410941:	mov    edx,DWORD PTR [rbx+0x14]
  410944:	mov    eax,DWORD PTR [r10+0x30]
  410948:	lea    rsi,[r10+0x38]
  41094c:	mov    DWORD PTR [r10+0x34],eax
  410950:	mov    rdi,r10
  410953:	call   409df0 <__sprintf_chk@plt+0x7810>
  410958:	mov    DWORD PTR [rbx+0x14],0xffffffff
  41095f:	mov    edx,0x1
  410964:	mov    rsi,rbp
  410967:	mov    rdi,r14
  41096a:	call   410610 <__sprintf_chk@plt+0xe030>
  41096f:	mov    r10,QWORD PTR [r14+0x30]
  410973:	mov    r15d,eax
  410976:	mov    rdi,r10
  410979:	mov    rsi,rbp
  41097c:	mov    QWORD PTR [rsp+0x8],r10
  410981:	call   409a50 <__sprintf_chk@plt+0x7470>
  410986:	mov    r10,QWORD PTR [rsp+0x8]
  41098b:	mov    edx,DWORD PTR [rbx+0x10]
  41098e:	lea    rsi,[rbp+0x10]
  410992:	mov    rdi,r10
  410995:	call   409df0 <__sprintf_chk@plt+0x7810>
  41099a:	mov    rax,QWORD PTR [rsp+0x20]
  41099f:	vmovdqa xmm4,XMMWORD PTR [rsp+0x10]
  4109a5:	mov    QWORD PTR [rbx+0x10],rax
  4109a9:	vmovups XMMWORD PTR [rbx],xmm4
  4109ad:	nop    DWORD PTR [rax]
  4109b0:	cmp    r15d,0xf
  4109b4:	je     4107fa <__sprintf_chk@plt+0xe21a>
  4109ba:	mov    r12d,r15d
  4109bd:	movzx  eax,BYTE PTR [r13+r12*2+0x0]
  4109c3:	cmp    eax,DWORD PTR [rsp+0x4]
  4109c7:	ja     410891 <__sprintf_chk@plt+0xe2b1>
  4109cd:	jmp    4107fa <__sprintf_chk@plt+0xe21a>
  4109d2:	nop    WORD PTR [rax+rax*1+0x0]
  4109d8:	mov    rdi,r10
  4109db:	mov    rsi,rbx
  4109de:	call   40a220 <__sprintf_chk@plt+0x7c40>
  4109e3:	mov    edx,0x4
  4109e8:	mov    rsi,rbp
  4109eb:	mov    rdi,r14
  4109ee:	call   410610 <__sprintf_chk@plt+0xe030>
  4109f3:	mov    r10,QWORD PTR [r14+0x30]
  4109f7:	mov    r15d,eax
  4109fa:	mov    rdi,r10
  4109fd:	mov    rsi,rbp
  410a00:	mov    QWORD PTR [rsp+0x8],r10
  410a05:	call   40a2d0 <__sprintf_chk@plt+0x7cf0>
  410a0a:	cmp    DWORD PTR [rsp+0x10],0xb
  410a0f:	mov    r10,QWORD PTR [rsp+0x8]
  410a14:	jne    410a36 <__sprintf_chk@plt+0xe456>
  410a16:	mov    rax,QWORD PTR [r10]
  410a19:	movsxd rdx,DWORD PTR [rsp+0x18]
  410a1e:	mov    rax,QWORD PTR [rax+0x18]
  410a22:	lea    rdx,[rax+rdx*4]
  410a26:	mov    eax,DWORD PTR [rdx]
  410a28:	mov    ecx,eax
  410a2a:	and    ecx,0x3f
  410a2d:	cmp    ecx,0x15
  410a30:	je     410f93 <__sprintf_chk@plt+0xe9b3>
  410a36:	mov    rsi,rbp
  410a39:	mov    rdi,r10
  410a3c:	mov    QWORD PTR [rsp+0x8],r10
  410a41:	call   40a220 <__sprintf_chk@plt+0x7c40>
  410a46:	mov    r10,QWORD PTR [rsp+0x8]
  410a4b:	mov    rcx,rbp
  410a4e:	mov    rdx,rbx
  410a51:	mov    esi,0x15
  410a56:	mov    rdi,r10
  410a59:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410a5e:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410a63:	nop    DWORD PTR [rax+rax*1+0x0]
  410a68:	cmp    DWORD PTR [rbx],0x5
  410a6b:	je     410dd0 <__sprintf_chk@plt+0xe7f0>
  410a71:	mov    rsi,rbx
  410a74:	mov    rdi,r10
  410a77:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  410a7c:	movzx  edx,BYTE PTR [r13+r12*2+0x1]
  410a82:	mov    rsi,rbp
  410a85:	mov    rdi,r14
  410a88:	call   410610 <__sprintf_chk@plt+0xe030>
  410a8d:	mov    r10,QWORD PTR [r14+0x30]
  410a91:	cmp    r15d,0xe
  410a95:	ja     411147 <__sprintf_chk@plt+0xeb67>
  410a9b:	lea    rdi,[rip+0x71ee]        # 417c90 <__sprintf_chk@plt+0x156b0>
  410aa2:	movsxd rdx,DWORD PTR [rdi+r12*4]
  410aa6:	add    rdx,rdi
  410aa9:	notrack jmp rdx
  410aac:	nop    DWORD PTR [rax+0x0]
  410ab0:	mov    rdi,r10
  410ab3:	mov    rsi,rbx
  410ab6:	call   40a950 <__sprintf_chk@plt+0x8370>
  410abb:	mov    edx,0x2
  410ac0:	mov    rsi,rbp
  410ac3:	mov    rdi,r14
  410ac6:	call   410610 <__sprintf_chk@plt+0xe030>
  410acb:	mov    r10,QWORD PTR [r14+0x30]
  410acf:	mov    r15d,eax
  410ad2:	mov    rdi,r10
  410ad5:	mov    rsi,rbp
  410ad8:	mov    QWORD PTR [rsp+0x8],r10
  410add:	call   409a50 <__sprintf_chk@plt+0x7470>
  410ae2:	mov    r10,QWORD PTR [rsp+0x8]
  410ae7:	mov    edx,DWORD PTR [rbx+0x14]
  410aea:	lea    rsi,[rbp+0x14]
  410aee:	mov    rdi,r10
  410af1:	call   409df0 <__sprintf_chk@plt+0x7810>
  410af6:	vmovdqa xmm3,XMMWORD PTR [rsp+0x10]
  410afc:	mov    rax,QWORD PTR [rsp+0x20]
  410b01:	vmovups XMMWORD PTR [rbx],xmm3
  410b05:	mov    QWORD PTR [rbx+0x10],rax
  410b09:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410b0e:	xchg   ax,ax
  410b10:	mov    DWORD PTR [rsp+0x8],eax
  410b14:	mov    r8,rbp
  410b17:	mov    rcx,rbx
  410b1a:	xor    edx,edx
  410b1c:	mov    esi,0x19
  410b21:	mov    rdi,r10
  410b24:	call   40a420 <__sprintf_chk@plt+0x7e40>
  410b29:	mov    eax,DWORD PTR [rsp+0x8]
  410b2d:	mov    r15d,eax
  410b30:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410b35:	nop    DWORD PTR [rax]
  410b38:	mov    DWORD PTR [rsp+0x8],eax
  410b3c:	mov    r8,rbp
  410b3f:	mov    rcx,rbx
  410b42:	xor    edx,edx
  410b44:	mov    esi,0x18
  410b49:	mov    rdi,r10
  410b4c:	call   40a420 <__sprintf_chk@plt+0x7e40>
  410b51:	mov    eax,DWORD PTR [rsp+0x8]
  410b55:	mov    r15d,eax
  410b58:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410b5d:	nop    DWORD PTR [rax]
  410b60:	mov    DWORD PTR [rsp+0x8],eax
  410b64:	mov    r8,rbp
  410b67:	mov    rcx,rbx
  410b6a:	mov    edx,0x1
  410b6f:	jmp    410b1c <__sprintf_chk@plt+0xe53c>
  410b71:	nop    DWORD PTR [rax+0x0]
  410b78:	mov    DWORD PTR [rsp+0x8],eax
  410b7c:	mov    r8,rbp
  410b7f:	mov    rcx,rbx
  410b82:	mov    edx,0x1
  410b87:	jmp    410b44 <__sprintf_chk@plt+0xe564>
  410b89:	nop    DWORD PTR [rax+0x0]
  410b90:	mov    DWORD PTR [rsp+0x8],eax
  410b94:	mov    r8,rbp
  410b97:	mov    rcx,rbx
  410b9a:	mov    edx,0x1
  410b9f:	mov    esi,0x17
  410ba4:	mov    rdi,r10
  410ba7:	call   40a420 <__sprintf_chk@plt+0x7e40>
  410bac:	mov    eax,DWORD PTR [rsp+0x8]
  410bb0:	mov    r15d,eax
  410bb3:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  410bc0:	mov    DWORD PTR [rsp+0x8],eax
  410bc4:	mov    r8,rbp
  410bc7:	mov    rcx,rbx
  410bca:	xor    edx,edx
  410bcc:	jmp    410b9f <__sprintf_chk@plt+0xe5bf>
  410bce:	xchg   ax,ax
  410bd0:	mov    rcx,rbp
  410bd3:	mov    rdx,rbx
  410bd6:	mov    esi,0x11
  410bdb:	mov    rdi,r10
  410bde:	mov    DWORD PTR [rsp+0x8],eax
  410be2:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410be7:	mov    eax,DWORD PTR [rsp+0x8]
  410beb:	mov    r15d,eax
  410bee:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410bf3:	nop    DWORD PTR [rax+rax*1+0x0]
  410bf8:	mov    rcx,rbp
  410bfb:	mov    rdx,rbx
  410bfe:	mov    esi,0x10
  410c03:	mov    rdi,r10
  410c06:	mov    DWORD PTR [rsp+0x8],eax
  410c0a:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410c0f:	mov    eax,DWORD PTR [rsp+0x8]
  410c13:	mov    r15d,eax
  410c16:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c20:	mov    rcx,rbp
  410c23:	mov    rdx,rbx
  410c26:	mov    esi,0xf
  410c2b:	mov    rdi,r10
  410c2e:	mov    DWORD PTR [rsp+0x8],eax
  410c32:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410c37:	mov    eax,DWORD PTR [rsp+0x8]
  410c3b:	mov    r15d,eax
  410c3e:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410c43:	nop    DWORD PTR [rax+rax*1+0x0]
  410c48:	mov    rcx,rbp
  410c4b:	mov    rdx,rbx
  410c4e:	mov    esi,0xe
  410c53:	mov    rdi,r10
  410c56:	mov    DWORD PTR [rsp+0x8],eax
  410c5a:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410c5f:	mov    eax,DWORD PTR [rsp+0x8]
  410c63:	mov    r15d,eax
  410c66:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c70:	mov    rcx,rbp
  410c73:	mov    rdx,rbx
  410c76:	mov    esi,0xd
  410c7b:	mov    rdi,r10
  410c7e:	mov    DWORD PTR [rsp+0x8],eax
  410c82:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410c87:	mov    eax,DWORD PTR [rsp+0x8]
  410c8b:	mov    r15d,eax
  410c8e:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410c93:	nop    DWORD PTR [rax+rax*1+0x0]
  410c98:	mov    rcx,rbp
  410c9b:	mov    rdx,rbx
  410c9e:	mov    esi,0xc
  410ca3:	mov    rdi,r10
  410ca6:	mov    DWORD PTR [rsp+0x8],eax
  410caa:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410caf:	mov    eax,DWORD PTR [rsp+0x8]
  410cb3:	mov    r15d,eax
  410cb6:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  410cc0:	cmp    eax,0x118
  410cc5:	je     410f40 <__sprintf_chk@plt+0xe960>
  410ccb:	jg     410d00 <__sprintf_chk@plt+0xe720>
  410ccd:	cmp    eax,0x10f
  410cd2:	je     410da0 <__sprintf_chk@plt+0xe7c0>
  410cd8:	cmp    eax,0x116
  410cdd:	je     410d40 <__sprintf_chk@plt+0xe760>
  410cdf:	cmp    eax,0x101
  410ce4:	jne    4107f4 <__sprintf_chk@plt+0xe214>
  410cea:	mov    eax,0x2
  410cef:	mov    r15d,0xd
  410cf5:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410cfa:	nop    WORD PTR [rax+rax*1+0x0]
  410d00:	cmp    eax,0x11a
  410d05:	je     410d90 <__sprintf_chk@plt+0xe7b0>
  410d0b:	jl     410d80 <__sprintf_chk@plt+0xe7a0>
  410d0d:	cmp    eax,0x11b
  410d12:	jne    4107f4 <__sprintf_chk@plt+0xe214>
  410d18:	mov    eax,0x3
  410d1d:	mov    r15d,0x7
  410d23:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d28:	nop    DWORD PTR [rax+rax*1+0x0]
  410d30:	mov    rdi,r14
  410d33:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410d38:	jmp    4108bb <__sprintf_chk@plt+0xe2db>
  410d3d:	nop    DWORD PTR [rax]
  410d40:	mov    eax,0x5
  410d45:	mov    r15d,0x6
  410d4b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d50:	mov    eax,0x7
  410d55:	mov    r15d,0x4
  410d5b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d60:	mov    eax,0x6
  410d65:	xor    r15d,r15d
  410d68:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d6d:	nop    DWORD PTR [rax]
  410d70:	mov    eax,0x3
  410d75:	mov    r15d,0xb
  410d7b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d80:	mov    eax,0x3
  410d85:	mov    r15d,0xc
  410d8b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410d90:	mov    eax,0x3
  410d95:	mov    r15d,0xa
  410d9b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410da0:	mov    eax,0x1
  410da5:	mov    r15d,0xe
  410dab:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410db0:	mov    eax,0x3
  410db5:	mov    r15d,0x9
  410dbb:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410dc0:	mov    eax,0x7
  410dc5:	mov    r15d,0x2
  410dcb:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410dd0:	cmp    QWORD PTR [rbx+0x10],0xffffffffffffffff
  410dd5:	jne    410a71 <__sprintf_chk@plt+0xe491>
  410ddb:	jmp    410a7c <__sprintf_chk@plt+0xe49c>
  410de0:	mov    edx,DWORD PTR [rbx+0x8]
  410de3:	jmp    41092b <__sprintf_chk@plt+0xe34b>
  410de8:	nop    DWORD PTR [rax+rax*1+0x0]
  410df0:	cmp    eax,0x113
  410df5:	jne    410e37 <__sprintf_chk@plt+0xe857>
  410df7:	mov    QWORD PTR [rsi+0x10],0xffffffffffffffff
  410dff:	mov    DWORD PTR [rsi],0x2
  410e05:	mov    DWORD PTR [rsi+0x8],0x0
  410e0c:	jmp    4106e8 <__sprintf_chk@plt+0xe108>
  410e11:	nop    DWORD PTR [rax+0x0]
  410e18:	cmp    eax,0x107
  410e1d:	je     4110b7 <__sprintf_chk@plt+0xead7>
  410e23:	cmp    eax,0x109
  410e28:	je     410ff0 <__sprintf_chk@plt+0xea10>
  410e2e:	cmp    eax,0x7b
  410e31:	je     411030 <__sprintf_chk@plt+0xea50>
  410e37:	mov    rsi,rbx
  410e3a:	mov    rdi,r14
  410e3d:	call   411920 <__sprintf_chk@plt+0xf340>
  410e42:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  410e47:	nop    WORD PTR [rax+rax*1+0x0]
  410e50:	xor    ebp,ebp
  410e52:	jmp    410725 <__sprintf_chk@plt+0xe145>
  410e57:	nop    WORD PTR [rax+rax*1+0x0]
  410e60:	mov    rsi,rbx
  410e63:	mov    rdi,r12
  410e66:	lea    rbp,[rsp+0x10]
  410e6b:	call   40a270 <__sprintf_chk@plt+0x7c90>
  410e70:	mov    rcx,rbp
  410e73:	mov    rdx,rbx
  410e76:	mov    esi,0x14
  410e7b:	mov    rdi,r12
  410e7e:	call   40a4d0 <__sprintf_chk@plt+0x7ef0>
  410e83:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  410e88:	nop    DWORD PTR [rax+rax*1+0x0]
  410e90:	mov    rsi,rbx
  410e93:	mov    rdi,r12
  410e96:	call   409a50 <__sprintf_chk@plt+0x7470>
  410e9b:	mov    ecx,DWORD PTR [rbx]
  410e9d:	cmp    ecx,0xc
  410ea0:	ja     410ef1 <__sprintf_chk@plt+0xe911>
  410ea2:	lea    rsi,[rip+0x6e23]        # 417ccc <__sprintf_chk@plt+0x156ec>
  410ea9:	mov    edx,ecx
  410eab:	movsxd rax,DWORD PTR [rsi+rdx*4]
  410eaf:	add    rax,rsi
  410eb2:	notrack jmp rax
  410eb5:	cmp    ecx,0xc
  410eb8:	jne    4110d1 <__sprintf_chk@plt+0xeaf1>
  410ebe:	lea    rsi,[rbx+0x8]
  410ec2:	mov    rdi,r12
  410ec5:	call   404550 <__sprintf_chk@plt+0x1f70>
  410eca:	mov    rax,QWORD PTR [r12+0x18]
  410ecf:	mov    rdi,r12
  410ed2:	mov    edx,DWORD PTR [rax+0x8]
  410ed5:	mov    eax,0x17
  410eda:	shlx   esi,DWORD PTR [rbx+0x8],eax
  410ee0:	or     esi,0x13
  410ee3:	call   409980 <__sprintf_chk@plt+0x73a0>
  410ee8:	mov    DWORD PTR [rbx+0x8],eax
  410eeb:	mov    DWORD PTR [rbx],0xb
  410ef1:	mov    esi,DWORD PTR [rbx+0x10]
  410ef4:	mov    eax,DWORD PTR [rbx+0x14]
  410ef7:	mov    DWORD PTR [rbx+0x14],esi
  410efa:	mov    DWORD PTR [rbx+0x10],eax
  410efd:	mov    rdi,r12
  410f00:	call   402ef0 <__sprintf_chk@plt+0x910>
  410f05:	mov    esi,DWORD PTR [rbx+0x10]
  410f08:	mov    rdi,r12
  410f0b:	call   402ef0 <__sprintf_chk@plt+0x910>
  410f10:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  410f15:	nop    DWORD PTR [rax]
  410f18:	mov    rdi,r14
  410f1b:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410f20:	jmp    41074f <__sprintf_chk@plt+0xe16f>
  410f25:	nop    DWORD PTR [rax]
  410f28:	mov    eax,0x6
  410f2d:	mov    r15d,0x1
  410f33:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410f38:	nop    DWORD PTR [rax+rax*1+0x0]
  410f40:	mov    eax,0x3
  410f45:	mov    r15d,0x8
  410f4b:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410f50:	cmp    QWORD PTR [rbx+0x10],0xffffffffffffffff
  410f55:	jne    410798 <__sprintf_chk@plt+0xe1b8>
  410f5b:	jmp    4107a3 <__sprintf_chk@plt+0xe1c3>
  410f60:	mov    esi,DWORD PTR [rbx+0x8]
  410f63:	mov    rdi,r12
  410f66:	call   403c10 <__sprintf_chk@plt+0x1630>
  410f6b:	jmp    410ef1 <__sprintf_chk@plt+0xe911>
  410f6d:	mov    DWORD PTR [rbx],0x3
  410f73:	jmp    410ef1 <__sprintf_chk@plt+0xe911>
  410f78:	mov    DWORD PTR [rbx],0x2
  410f7e:	jmp    410ef1 <__sprintf_chk@plt+0xe911>
  410f83:	mov    eax,0xa
  410f88:	mov    r15d,0x5
  410f8e:	jmp    410878 <__sprintf_chk@plt+0xe298>
  410f93:	cmp    DWORD PTR [rbx],0xc
  410f96:	jne    410fbb <__sprintf_chk@plt+0xe9db>
  410f98:	mov    rdi,r10
  410f9b:	lea    rsi,[rbx+0x8]
  410f9f:	call   404550 <__sprintf_chk@plt+0x1f70>
  410fa4:	mov    r10,QWORD PTR [rsp+0x8]
  410fa9:	movsxd rdx,DWORD PTR [rsp+0x18]
  410fae:	mov    rax,QWORD PTR [r10]
  410fb1:	mov    rax,QWORD PTR [rax+0x18]
  410fb5:	lea    rdx,[rax+rdx*4]
  410fb9:	mov    eax,DWORD PTR [rdx]
  410fbb:	mov    esi,0x17
  410fc0:	and    eax,0x7fffff
  410fc5:	shlx   ecx,DWORD PTR [rbx+0x8],esi
  410fcb:	or     eax,ecx
  410fcd:	mov    DWORD PTR [rdx],eax
  410fcf:	mov    DWORD PTR [rbx],0xb
  410fd5:	mov    eax,DWORD PTR [rsp+0x18]
  410fd9:	mov    DWORD PTR [rbx+0x8],eax
  410fdc:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  410fe1:	mov    rdi,r14
  410fe4:	call   40ee30 <__sprintf_chk@plt+0xc850>
  410fe9:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  410fee:	xchg   ax,ax
  410ff0:	mov    ecx,DWORD PTR [rdi+0x4]
  410ff3:	cmp    DWORD PTR [rdi+0x20],0x11f
  410ffa:	mov    DWORD PTR [rdi+0x8],ecx
  410ffd:	je     41111c <__sprintf_chk@plt+0xeb3c>
  411003:	vmovdqa xmm6,XMMWORD PTR [rdi+0x20]
  411008:	mov    DWORD PTR [rdi+0x20],0x11f
  41100f:	vmovaps XMMWORD PTR [rdi+0x10],xmm6
  411014:	xor    edx,edx
  411016:	mov    rsi,rbx
  411019:	mov    rdi,r14
  41101c:	call   4101d0 <__sprintf_chk@plt+0xdbf0>
  411021:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  411026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411030:	call   411380 <__sprintf_chk@plt+0xeda0>
  411035:	jmp    4107bb <__sprintf_chk@plt+0xe1db>
  41103a:	nop    WORD PTR [rax+rax*1+0x0]
  411040:	vmovsd xmm0,QWORD PTR [rdi+0x18]
  411045:	mov    QWORD PTR [rsi+0x10],0xffffffffffffffff
  41104d:	mov    DWORD PTR [rsi],0x5
  411053:	vmovsd QWORD PTR [rsi+0x8],xmm0
  411058:	jmp    4106e8 <__sprintf_chk@plt+0xe108>
  41105d:	mov    rdi,QWORD PTR [rdi+0x30]
  411061:	mov    rdx,QWORD PTR [rdi]
  411064:	movzx  eax,BYTE PTR [rdx+0x72]
  411068:	test   al,al
  41106a:	je     411108 <__sprintf_chk@plt+0xeb28>
  411070:	and    eax,0xfffffffb
  411073:	mov    BYTE PTR [rdx+0x72],al
  411076:	mov    esi,0x800025
  41107b:	mov    rax,QWORD PTR [rdi+0x18]
  41107f:	mov    edx,DWORD PTR [rax+0x8]
  411082:	call   409980 <__sprintf_chk@plt+0x73a0>
  411087:	mov    DWORD PTR [rbx+0x8],eax
  41108a:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  411092:	mov    DWORD PTR [rbx],0xe
  411098:	jmp    4106e8 <__sprintf_chk@plt+0xe108>
  41109d:	mov    QWORD PTR [rsi+0x10],0xffffffffffffffff
  4110a5:	mov    DWORD PTR [rsi],0x1
  4110ab:	mov    DWORD PTR [rsi+0x8],0x0
  4110b2:	jmp    4106e8 <__sprintf_chk@plt+0xe108>
  4110b7:	mov    QWORD PTR [rsi+0x10],0xffffffffffffffff
  4110bf:	mov    DWORD PTR [rsi],0x3
  4110c5:	mov    DWORD PTR [rsi+0x8],0x0
  4110cc:	jmp    4106e8 <__sprintf_chk@plt+0xe108>
  4110d1:	mov    esi,0x1
  4110d6:	mov    rdi,r12
  4110d9:	call   40a150 <__sprintf_chk@plt+0x7b70>
  4110de:	mov    edx,DWORD PTR [r12+0x3c]
  4110e3:	mov    rsi,rbx
  4110e6:	lea    eax,[rdx+0x1]
  4110e9:	mov    DWORD PTR [r12+0x3c],eax
  4110ee:	mov    rdi,r12
  4110f1:	call   409be0 <__sprintf_chk@plt+0x7600>
  4110f6:	cmp    DWORD PTR [rbx],0xc
  4110f9:	jne    410eca <__sprintf_chk@plt+0xe8ea>
  4110ff:	jmp    410ebe <__sprintf_chk@plt+0xe8de>
  411104:	nop    DWORD PTR [rax+0x0]
  411108:	mov    edx,0x117
  41110d:	lea    rsi,[rip+0x715c]        # 418270 <__sprintf_chk@plt+0x15c90>
  411114:	mov    rdi,r14
  411117:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  41111c:	call   40ee30 <__sprintf_chk@plt+0xc850>
  411121:	mov    ecx,DWORD PTR [r14+0x4]
  411125:	jmp    411014 <__sprintf_chk@plt+0xea34>
  41112a:	call   4023e0 <__stack_chk_fail@plt>
  41112f:	mov    r15d,eax
  411132:	jmp    410ad2 <__sprintf_chk@plt+0xe4f2>
  411137:	mov    r15d,eax
  41113a:	jmp    4109fa <__sprintf_chk@plt+0xe41a>
  41113f:	mov    r15d,eax
  411142:	jmp    410976 <__sprintf_chk@plt+0xe396>
  411147:	mov    r15d,eax
  41114a:	jmp    4109b0 <__sprintf_chk@plt+0xe3d0>
  41114f:	nop
  411150:	push   rbp
  411151:	xor    edx,edx
  411153:	mov    rbp,rdi
  411156:	push   rbx
  411157:	sub    rsp,0x28
  41115b:	mov    rbx,rsp
  41115e:	mov    rsi,rbx
  411161:	mov    rax,QWORD PTR fs:0x28
  41116a:	mov    QWORD PTR [rsp+0x18],rax
  41116f:	xor    eax,eax
  411171:	call   410610 <__sprintf_chk@plt+0xe030>
  411176:	cmp    DWORD PTR [rsp],0x1
  41117a:	jne    411183 <__sprintf_chk@plt+0xeba3>
  41117c:	mov    DWORD PTR [rsp],0x3
  411183:	mov    rdi,QWORD PTR [rbp+0x30]
  411187:	mov    rsi,rbx
  41118a:	call   40a950 <__sprintf_chk@plt+0x8370>
  41118f:	mov    rcx,QWORD PTR [rsp+0x18]
  411194:	xor    rcx,QWORD PTR fs:0x28
  41119d:	mov    eax,DWORD PTR [rsp+0x14]
  4111a1:	jne    4111aa <__sprintf_chk@plt+0xebca>
  4111a3:	add    rsp,0x28
  4111a7:	pop    rbx
  4111a8:	pop    rbp
  4111a9:	ret    
  4111aa:	call   4023e0 <__stack_chk_fail@plt>
  4111af:	nop
  4111b0:	push   rbp
  4111b1:	mov    rbp,rsi
  4111b4:	push   rbx
  4111b5:	mov    rbx,rdi
  4111b8:	sub    rsp,0x8
  4111bc:	mov    eax,DWORD PTR [rdi+0x4]
  4111bf:	cmp    DWORD PTR [rdi+0x20],0x11f
  4111c6:	mov    DWORD PTR [rdi+0x8],eax
  4111c9:	je     411210 <__sprintf_chk@plt+0xec30>
  4111cb:	vmovdqa xmm0,XMMWORD PTR [rdi+0x20]
  4111d0:	mov    DWORD PTR [rdi+0x20],0x11f
  4111d7:	vmovaps XMMWORD PTR [rdi+0x10],xmm0
  4111dc:	mov    rsi,rbp
  4111df:	mov    rdi,rbx
  4111e2:	xor    edx,edx
  4111e4:	call   410610 <__sprintf_chk@plt+0xe030>
  4111e9:	mov    rdi,QWORD PTR [rbx+0x30]
  4111ed:	mov    rsi,rbp
  4111f0:	call   40a2d0 <__sprintf_chk@plt+0x7cf0>
  4111f5:	add    rsp,0x8
  4111f9:	mov    rdi,rbx
  4111fc:	pop    rbx
  4111fd:	mov    esi,0x5d
  411202:	pop    rbp
  411203:	jmp    40f060 <__sprintf_chk@plt+0xca80>
  411208:	nop    DWORD PTR [rax+rax*1+0x0]
  411210:	call   40ee30 <__sprintf_chk@plt+0xc850>
  411215:	jmp    4111dc <__sprintf_chk@plt+0xebfc>
  411217:	nop    WORD PTR [rax+rax*1+0x0]
  411220:	push   r15
  411222:	push   r14
  411224:	mov    r14,rsi
  411227:	push   r13
  411229:	mov    r13,rdi
  41122c:	push   r12
  41122e:	mov    r12,rdx
  411231:	push   rbp
  411232:	push   rbx
  411233:	sub    rsp,0x48
  411237:	mov    rbx,QWORD PTR [rdi+0x30]
  41123b:	mov    rax,QWORD PTR fs:0x28
  411244:	mov    QWORD PTR [rsp+0x38],rax
  411249:	xor    eax,eax
  41124b:	cmp    DWORD PTR [rdi+0x10],0x11d
  411252:	mov    ebp,DWORD PTR [rbx+0x3c]
  411255:	jne    411300 <__sprintf_chk@plt+0xed20>
  41125b:	cmp    DWORD PTR [rdx],0x7ffffffd
  411261:	jg     411310 <__sprintf_chk@plt+0xed30>
  411267:	mov    r15,rsp
  41126a:	mov    rsi,r15
  41126d:	call   40eec0 <__sprintf_chk@plt+0xc8e0>
  411272:	inc    DWORD PTR [r12]
  411276:	mov    esi,0x3d
  41127b:	mov    rdi,r13
  41127e:	call   40f060 <__sprintf_chk@plt+0xca80>
  411283:	mov    rsi,r15
  411286:	mov    rdi,rbx
  411289:	lea    r15,[rsp+0x20]
  41128e:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  411293:	xor    edx,edx
  411295:	mov    rsi,r15
  411298:	mov    rdi,r13
  41129b:	mov    r12d,eax
  41129e:	call   410610 <__sprintf_chk@plt+0xe030>
  4112a3:	mov    rsi,r15
  4112a6:	mov    rdi,rbx
  4112a9:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  4112ae:	mov    rcx,QWORD PTR [r14]
  4112b1:	shl    eax,0xe
  4112b4:	mov    esi,DWORD PTR [rcx+0x8]
  4112b7:	mov    rdx,QWORD PTR [rbx+0x18]
  4112bb:	shl    r12d,0x17
  4112bf:	or     r12d,eax
  4112c2:	shl    esi,0x6
  4112c5:	or     esi,r12d
  4112c8:	mov    edx,DWORD PTR [rdx+0x8]
  4112cb:	or     esi,0x9
  4112ce:	mov    rdi,rbx
  4112d1:	call   409980 <__sprintf_chk@plt+0x73a0>
  4112d6:	mov    DWORD PTR [rbx+0x3c],ebp
  4112d9:	mov    rax,QWORD PTR [rsp+0x38]
  4112de:	xor    rax,QWORD PTR fs:0x28
  4112e7:	jne    411324 <__sprintf_chk@plt+0xed44>
  4112e9:	add    rsp,0x48
  4112ed:	pop    rbx
  4112ee:	pop    rbp
  4112ef:	pop    r12
  4112f1:	pop    r13
  4112f3:	pop    r14
  4112f5:	pop    r15
  4112f7:	ret    
  4112f8:	nop    DWORD PTR [rax+rax*1+0x0]
  411300:	mov    r15,rsp
  411303:	mov    rsi,r15
  411306:	call   4111b0 <__sprintf_chk@plt+0xebd0>
  41130b:	jmp    411272 <__sprintf_chk@plt+0xec92>
  411310:	lea    rdx,[rip+0x6246]        # 41755d <__sprintf_chk@plt+0x14f7d>
  411317:	mov    esi,0x7ffffffd
  41131c:	mov    rdi,rbx
  41131f:	call   40ad80 <__sprintf_chk@plt+0x87a0>
  411324:	call   4023e0 <__stack_chk_fail@plt>
  411329:	nop    DWORD PTR [rax+0x0]
  411330:	push   rbp
  411331:	xor    edx,edx
  411333:	mov    rbp,rdi
  411336:	push   rbx
  411337:	mov    rbx,rsi
  41133a:	sub    rsp,0x8
  41133e:	call   410610 <__sprintf_chk@plt+0xe030>
  411343:	mov    eax,DWORD PTR [rbx+0x24]
  411346:	cmp    eax,0x7ffffffd
  41134b:	jg     411360 <__sprintf_chk@plt+0xed80>
  41134d:	inc    eax
  41134f:	mov    DWORD PTR [rbx+0x24],eax
  411352:	inc    DWORD PTR [rbx+0x28]
  411355:	add    rsp,0x8
  411359:	pop    rbx
  41135a:	pop    rbp
  41135b:	ret    
  41135c:	nop    DWORD PTR [rax+0x0]
  411360:	mov    rdi,QWORD PTR [rbp+0x30]
  411364:	lea    rdx,[rip+0x61f2]        # 41755d <__sprintf_chk@plt+0x14f7d>
  41136b:	mov    esi,0x7ffffffd
  411370:	call   40ad80 <__sprintf_chk@plt+0x87a0>
  411375:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411380:	push   r14
  411382:	push   r13
  411384:	push   r12
  411386:	push   rbp
  411387:	mov    rbp,rsi
  41138a:	mov    esi,0xa
  41138f:	push   rbx
  411390:	mov    rbx,rdi
  411393:	sub    rsp,0x40
  411397:	mov    r12,QWORD PTR [rdi+0x30]
  41139b:	mov    rax,QWORD PTR fs:0x28
  4113a4:	mov    QWORD PTR [rsp+0x38],rax
  4113a9:	xor    eax,eax
  4113ab:	mov    rax,QWORD PTR [r12+0x18]
  4113b0:	mov    r14d,DWORD PTR [rdi+0x4]
  4113b4:	mov    edx,DWORD PTR [rax+0x8]
  4113b7:	mov    rdi,r12
  4113ba:	call   409980 <__sprintf_chk@plt+0x73a0>
  4113bf:	movsxd r13,eax
  4113c2:	mov    rax,0xffffffffffffffff
  4113c9:	mov    QWORD PTR [rbp+0x10],rax
  4113cd:	mov    DWORD PTR [rbp+0x0],0xb
  4113d4:	mov    DWORD PTR [rbp+0x8],r13d
  4113d8:	mov    rdi,QWORD PTR [rbx+0x30]
  4113dc:	mov    rsi,rbp
  4113df:	mov    QWORD PTR [rsp+0x18],rbp
  4113e4:	mov    QWORD PTR [rsp+0x10],rax
  4113e9:	mov    QWORD PTR [rsp+0x20],0x0
  4113f2:	mov    DWORD PTR [rsp+0x28],0x0
  4113fa:	mov    DWORD PTR [rsp],0x0
  411401:	mov    DWORD PTR [rsp+0x8],0x0
  411409:	call   40a220 <__sprintf_chk@plt+0x7c40>
  41140e:	mov    esi,0x7b
  411413:	mov    rdi,rbx
  411416:	call   40f060 <__sprintf_chk@plt+0xca80>
  41141b:	mov    rbp,rsp
  41141e:	mov    eax,DWORD PTR [rbx+0x10]
  411421:	cmp    eax,0x7d
  411424:	je     411495 <__sprintf_chk@plt+0xeeb5>
  411426:	mov    edx,DWORD PTR [rsp]
  411429:	test   edx,edx
  41142b:	je     41144d <__sprintf_chk@plt+0xee6d>
  41142d:	mov    rsi,rbp
  411430:	mov    rdi,r12
  411433:	call   40a220 <__sprintf_chk@plt+0x7c40>
  411438:	cmp    DWORD PTR [rsp+0x28],0x32
  41143d:	mov    DWORD PTR [rsp],0x0
  411444:	je     411638 <__sprintf_chk@plt+0xf058>
  41144a:	mov    eax,DWORD PTR [rbx+0x10]
  41144d:	cmp    eax,0x5b
  411450:	je     411578 <__sprintf_chk@plt+0xef98>
  411456:	cmp    eax,0x11d
  41145b:	jne    411475 <__sprintf_chk@plt+0xee95>
  41145d:	lea    rsi,[rbx+0x28]
  411461:	mov    rdi,rbx
  411464:	call   40e4e0 <__sprintf_chk@plt+0xbf00>
  411469:	mov    DWORD PTR [rbx+0x20],eax
  41146c:	cmp    eax,0x3d
  41146f:	je     411578 <__sprintf_chk@plt+0xef98>
  411475:	mov    rsi,rbp
  411478:	mov    rdi,rbx
  41147b:	call   411330 <__sprintf_chk@plt+0xed50>
  411480:	mov    eax,DWORD PTR [rbx+0x10]
  411483:	cmp    eax,0x2c
  411486:	je     411594 <__sprintf_chk@plt+0xefb4>
  41148c:	cmp    eax,0x3b
  41148f:	je     4115b0 <__sprintf_chk@plt+0xefd0>
  411495:	mov    ecx,r14d
  411498:	mov    edx,0x7b
  41149d:	mov    esi,0x7d
  4114a2:	mov    rdi,rbx
  4114a5:	call   40f100 <__sprintf_chk@plt+0xcb20>
  4114aa:	mov    ecx,DWORD PTR [rsp+0x28]
  4114ae:	test   ecx,ecx
  4114b0:	je     4114dd <__sprintf_chk@plt+0xeefd>
  4114b2:	mov    esi,DWORD PTR [rsp]
  4114b5:	lea    eax,[rsi-0xd]
  4114b8:	cmp    eax,0x1
  4114bb:	jbe    4115f8 <__sprintf_chk@plt+0xf018>
  4114c1:	test   esi,esi
  4114c3:	jne    411660 <__sprintf_chk@plt+0xf080>
  4114c9:	mov    rax,QWORD PTR [rsp+0x18]
  4114ce:	mov    edx,DWORD PTR [rsp+0x24]
  4114d2:	mov    esi,DWORD PTR [rax+0x8]
  4114d5:	mov    rdi,r12
  4114d8:	call   409d60 <__sprintf_chk@plt+0x7780>
  4114dd:	mov    ecx,DWORD PTR [rsp+0x24]
  4114e1:	mov    rax,QWORD PTR [r12]
  4114e5:	xor    edx,edx
  4114e7:	mov    rax,QWORD PTR [rax+0x18]
  4114eb:	lea    rsi,[rax+r13*4]
  4114ef:	mov    edi,DWORD PTR [rsi]
  4114f1:	mov    eax,ecx
  4114f3:	and    edi,0x7fffff
  4114f9:	cmp    ecx,0xf
  4114fc:	jbe    41150d <__sprintf_chk@plt+0xef2d>
  4114fe:	xchg   ax,ax
  411500:	inc    eax
  411502:	shr    eax,1
  411504:	inc    edx
  411506:	cmp    eax,0xf
  411509:	ja     411500 <__sprintf_chk@plt+0xef20>
  41150b:	mov    ecx,eax
  41150d:	cmp    eax,0x7
  411510:	ja     4115e0 <__sprintf_chk@plt+0xf000>
  411516:	shl    eax,0x17
  411519:	or     eax,edi
  41151b:	mov    DWORD PTR [rsi],eax
  41151d:	xor    ecx,ecx
  41151f:	and    eax,0xff803fff
  411524:	mov    edx,DWORD PTR [rsp+0x20]
  411528:	cmp    edx,0xf
  41152b:	jbe    41153b <__sprintf_chk@plt+0xef5b>
  41152d:	nop    DWORD PTR [rax]
  411530:	inc    edx
  411532:	shr    edx,1
  411534:	inc    ecx
  411536:	cmp    edx,0xf
  411539:	ja     411530 <__sprintf_chk@plt+0xef50>
  41153b:	cmp    edx,0x7
  41153e:	ja     4115c8 <__sprintf_chk@plt+0xefe8>
  411544:	shl    edx,0xe
  411547:	and    edx,0x7fc000
  41154d:	or     eax,edx
  41154f:	mov    DWORD PTR [rsi],eax
  411551:	mov    rax,QWORD PTR [rsp+0x38]
  411556:	xor    rax,QWORD PTR fs:0x28
  41155f:	jne    411674 <__sprintf_chk@plt+0xf094>
  411565:	add    rsp,0x40
  411569:	pop    rbx
  41156a:	pop    rbp
  41156b:	pop    r12
  41156d:	pop    r13
  41156f:	pop    r14
  411571:	ret    
  411572:	nop    WORD PTR [rax+rax*1+0x0]
  411578:	lea    rdx,[rbp+0x20]
  41157c:	lea    rsi,[rbp+0x18]
  411580:	mov    rdi,rbx
  411583:	call   411220 <__sprintf_chk@plt+0xec40>
  411588:	mov    eax,DWORD PTR [rbx+0x10]
  41158b:	cmp    eax,0x2c
  41158e:	jne    41148c <__sprintf_chk@plt+0xeeac>
  411594:	mov    rdi,rbx
  411597:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  41159c:	test   eax,eax
  41159e:	jne    41141e <__sprintf_chk@plt+0xee3e>
  4115a4:	mov    eax,DWORD PTR [rbx+0x10]
  4115a7:	cmp    eax,0x3b
  4115aa:	jne    411495 <__sprintf_chk@plt+0xeeb5>
  4115b0:	mov    rdi,rbx
  4115b3:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  4115b8:	test   eax,eax
  4115ba:	jne    41141e <__sprintf_chk@plt+0xee3e>
  4115c0:	jmp    411495 <__sprintf_chk@plt+0xeeb5>
  4115c5:	nop    DWORD PTR [rax]
  4115c8:	lea    ecx,[rcx*8+0x8]
  4115cf:	sub    edx,0x8
  4115d2:	or     edx,ecx
  4115d4:	jmp    411544 <__sprintf_chk@plt+0xef64>
  4115d9:	nop    DWORD PTR [rax+0x0]
  4115e0:	lea    eax,[rdx*8+0x8]
  4115e7:	sub    ecx,0x8
  4115ea:	or     eax,ecx
  4115ec:	jmp    411516 <__sprintf_chk@plt+0xef36>
  4115f1:	nop    DWORD PTR [rax+0x0]
  4115f8:	lea    rdx,[rsp+0x8]
  4115fd:	mov    ecx,0xffffffff
  411602:	mov    rdi,r12
  411605:	call   40a190 <__sprintf_chk@plt+0x7bb0>
  41160a:	mov    rax,QWORD PTR [rsp+0x18]
  41160f:	mov    edx,DWORD PTR [rsp+0x24]
  411613:	mov    esi,DWORD PTR [rax+0x8]
  411616:	mov    ecx,0xffffffff
  41161b:	mov    rdi,r12
  41161e:	call   409d60 <__sprintf_chk@plt+0x7780>
  411623:	mov    eax,DWORD PTR [rsp+0x24]
  411627:	lea    ecx,[rax-0x1]
  41162a:	mov    DWORD PTR [rsp+0x24],ecx
  41162e:	jmp    4114e1 <__sprintf_chk@plt+0xef01>
  411633:	nop    DWORD PTR [rax+rax*1+0x0]
  411638:	mov    rax,QWORD PTR [rsp+0x18]
  41163d:	mov    edx,DWORD PTR [rsp+0x24]
  411641:	mov    esi,DWORD PTR [rax+0x8]
  411644:	mov    ecx,0x32
  411649:	mov    rdi,r12
  41164c:	call   409d60 <__sprintf_chk@plt+0x7780>
  411651:	mov    DWORD PTR [rsp+0x28],0x0
  411659:	jmp    41144a <__sprintf_chk@plt+0xee6a>
  41165e:	xchg   ax,ax
  411660:	mov    rsi,rsp
  411663:	mov    rdi,r12
  411666:	call   40a220 <__sprintf_chk@plt+0x7c40>
  41166b:	mov    ecx,DWORD PTR [rsp+0x28]
  41166f:	jmp    4114c9 <__sprintf_chk@plt+0xeee9>
  411674:	call   4023e0 <__stack_chk_fail@plt>
  411679:	nop    DWORD PTR [rax+0x0]
  411680:	push   r12
  411682:	push   rbp
  411683:	mov    ebp,0x1
  411688:	push   rbx
  411689:	cmp    DWORD PTR [rdi+0x10],0x2c
  41168d:	je     4116a0 <__sprintf_chk@plt+0xf0c0>
  41168f:	pop    rbx
  411690:	mov    eax,ebp
  411692:	pop    rbp
  411693:	pop    r12
  411695:	ret    
  411696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116a0:	mov    r12,rsi
  4116a3:	mov    rbx,rdi
  4116a6:	mov    ebp,0x1
  4116ab:	mov    rdi,rbx
  4116ae:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  4116b3:	test   eax,eax
  4116b5:	je     41168f <__sprintf_chk@plt+0xf0af>
  4116b7:	mov    rdi,QWORD PTR [rbx+0x30]
  4116bb:	mov    rsi,r12
  4116be:	call   40a220 <__sprintf_chk@plt+0x7c40>
  4116c3:	xor    edx,edx
  4116c5:	mov    rsi,r12
  4116c8:	mov    rdi,rbx
  4116cb:	call   410610 <__sprintf_chk@plt+0xe030>
  4116d0:	inc    ebp
  4116d2:	cmp    DWORD PTR [rbx+0x10],0x2c
  4116d6:	je     4116ab <__sprintf_chk@plt+0xf0cb>
  4116d8:	pop    rbx
  4116d9:	mov    eax,ebp
  4116db:	pop    rbp
  4116dc:	pop    r12
  4116de:	ret    
  4116df:	nop
  4116e0:	push   r15
  4116e2:	push   r14
  4116e4:	push   r13
  4116e6:	mov    r13,rsi
  4116e9:	push   r12
  4116eb:	push   rbp
  4116ec:	push   rbx
  4116ed:	mov    rbx,rdi
  4116f0:	sub    rsp,0x28
  4116f4:	mov    edx,DWORD PTR [rdi+0x10]
  4116f7:	mov    rax,QWORD PTR fs:0x28
  411700:	mov    QWORD PTR [rsp+0x18],rax
  411705:	xor    eax,eax
  411707:	mov    r12,QWORD PTR [rdi+0x30]
  41170b:	mov    ebp,DWORD PTR [rdi+0x4]
  41170e:	cmp    edx,0x7b
  411711:	je     411738 <__sprintf_chk@plt+0xf158>
  411713:	cmp    edx,0x11e
  411719:	je     411838 <__sprintf_chk@plt+0xf258>
  41171f:	cmp    edx,0x28
  411722:	je     4117e0 <__sprintf_chk@plt+0xf200>
  411728:	lea    rsi,[rip+0x5e45]        # 417574 <__sprintf_chk@plt+0x14f94>
  41172f:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  411734:	nop    DWORD PTR [rax+0x0]
  411738:	mov    r15,rsp
  41173b:	mov    rsi,r15
  41173e:	call   411380 <__sprintf_chk@plt+0xeda0>
  411743:	mov    edx,DWORD PTR [rsp]
  411746:	mov    ebx,DWORD PTR [r13+0x8]
  41174a:	lea    ecx,[rdx-0xd]
  41174d:	lea    r14d,[rbx+0x1]
  411751:	xor    eax,eax
  411753:	cmp    ecx,0x1
  411756:	jbe    41176f <__sprintf_chk@plt+0xf18f>
  411758:	test   edx,edx
  41175a:	jne    411917 <__sprintf_chk@plt+0xf337>
  411760:	mov    esi,DWORD PTR [r12+0x3c]
  411765:	sub    esi,r14d
  411768:	inc    esi
  41176a:	mov    eax,esi
  41176c:	shl    eax,0x17
  41176f:	mov    rdx,QWORD PTR [r12+0x18]
  411774:	mov    esi,ebx
  411776:	shl    esi,0x6
  411779:	or     esi,eax
  41177b:	mov    edx,DWORD PTR [rdx+0x8]
  41177e:	or     esi,0x801c
  411784:	mov    rdi,r12
  411787:	call   409980 <__sprintf_chk@plt+0x73a0>
  41178c:	mov    DWORD PTR [r13+0x8],eax
  411790:	mov    QWORD PTR [r13+0x10],0xffffffffffffffff
  411798:	mov    rax,QWORD PTR [r12]
  41179c:	mov    DWORD PTR [r13+0x0],0xd
  4117a4:	mov    rax,QWORD PTR [rax+0x28]
  4117a8:	movsxd rdx,DWORD PTR [r12+0x30]
  4117ad:	mov    DWORD PTR [rax+rdx*4-0x4],ebp
  4117b1:	mov    DWORD PTR [r12+0x3c],r14d
  4117b6:	mov    rax,QWORD PTR [rsp+0x18]
  4117bb:	xor    rax,QWORD PTR fs:0x28
  4117c4:	jne    411912 <__sprintf_chk@plt+0xf332>
  4117ca:	add    rsp,0x28
  4117ce:	pop    rbx
  4117cf:	pop    rbp
  4117d0:	pop    r12
  4117d2:	pop    r13
  4117d4:	pop    r14
  4117d6:	pop    r15
  4117d8:	ret    
  4117d9:	nop    DWORD PTR [rax+0x0]
  4117e0:	cmp    DWORD PTR [rdi+0x8],ebp
  4117e3:	jne    4118b0 <__sprintf_chk@plt+0xf2d0>
  4117e9:	cmp    DWORD PTR [rdi+0x20],0x11f
  4117f0:	je     411908 <__sprintf_chk@plt+0xf328>
  4117f6:	vmovdqa xmm1,XMMWORD PTR [rdi+0x20]
  4117fb:	mov    DWORD PTR [rdi+0x20],0x11f
  411802:	vmovaps XMMWORD PTR [rdi+0x10],xmm1
  411807:	cmp    DWORD PTR [rbx+0x10],0x29
  41180b:	jne    4118d0 <__sprintf_chk@plt+0xf2f0>
  411811:	mov    DWORD PTR [rsp],0x0
  411818:	mov    ecx,ebp
  41181a:	mov    edx,0x28
  41181f:	mov    esi,0x29
  411824:	mov    rdi,rbx
  411827:	call   40f100 <__sprintf_chk@plt+0xcb20>
  41182c:	jmp    411743 <__sprintf_chk@plt+0xf163>
  411831:	nop    DWORD PTR [rax+0x0]
  411838:	mov    rax,QWORD PTR [rdi+0x18]
  41183c:	mov    r15,rsp
  41183f:	lea    rcx,[r15+0x8]
  411843:	mov    rdx,r15
  411846:	mov    rsi,r15
  411849:	mov    rdi,r12
  41184c:	mov    QWORD PTR [rsp],rax
  411850:	mov    DWORD PTR [rsp+0x8],0x4
  411858:	call   409520 <__sprintf_chk@plt+0x6f40>
  41185d:	mov    DWORD PTR [rsp+0x8],eax
  411861:	mov    eax,DWORD PTR [rbx+0x4]
  411864:	cmp    DWORD PTR [rbx+0x20],0x11f
  41186b:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  411874:	mov    DWORD PTR [rsp],0x4
  41187b:	mov    DWORD PTR [rbx+0x8],eax
  41187e:	je     4118c0 <__sprintf_chk@plt+0xf2e0>
  411880:	vmovdqa xmm0,XMMWORD PTR [rbx+0x20]
  411885:	mov    DWORD PTR [rbx+0x20],0x11f
  41188c:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  411891:	mov    ebx,DWORD PTR [r13+0x8]
  411895:	lea    r14d,[rbx+0x1]
  411899:	mov    rsi,r15
  41189c:	mov    rdi,r12
  41189f:	call   40a220 <__sprintf_chk@plt+0x7c40>
  4118a4:	jmp    411760 <__sprintf_chk@plt+0xf180>
  4118a9:	nop    DWORD PTR [rax+0x0]
  4118b0:	lea    rsi,[rip+0x69e9]        # 4182a0 <__sprintf_chk@plt+0x15cc0>
  4118b7:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  4118bc:	nop    DWORD PTR [rax+0x0]
  4118c0:	mov    rdi,rbx
  4118c3:	call   40ee30 <__sprintf_chk@plt+0xc850>
  4118c8:	jmp    411743 <__sprintf_chk@plt+0xf163>
  4118cd:	nop    DWORD PTR [rax]
  4118d0:	mov    r15,rsp
  4118d3:	xor    edx,edx
  4118d5:	mov    rsi,r15
  4118d8:	mov    rdi,rbx
  4118db:	call   410610 <__sprintf_chk@plt+0xe030>
  4118e0:	mov    rsi,r15
  4118e3:	mov    rdi,rbx
  4118e6:	call   411680 <__sprintf_chk@plt+0xf0a0>
  4118eb:	mov    esi,DWORD PTR [rsp]
  4118ee:	lea    rdx,[r15+0x8]
  4118f2:	mov    ecx,0xffffffff
  4118f7:	mov    rdi,r12
  4118fa:	call   40a190 <__sprintf_chk@plt+0x7bb0>
  4118ff:	jmp    411818 <__sprintf_chk@plt+0xf238>
  411904:	nop    DWORD PTR [rax+0x0]
  411908:	call   40ee30 <__sprintf_chk@plt+0xc850>
  41190d:	jmp    411807 <__sprintf_chk@plt+0xf227>
  411912:	call   4023e0 <__stack_chk_fail@plt>
  411917:	mov    r15,rsp
  41191a:	jmp    411899 <__sprintf_chk@plt+0xf2b9>
  41191f:	nop
  411920:	push   r14
  411922:	push   r13
  411924:	push   r12
  411926:	push   rbp
  411927:	mov    rbp,rsi
  41192a:	push   rbx
  41192b:	mov    rbx,rdi
  41192e:	sub    rsp,0x20
  411932:	mov    edx,DWORD PTR [rdi+0x10]
  411935:	mov    rax,QWORD PTR fs:0x28
  41193e:	mov    QWORD PTR [rsp+0x18],rax
  411943:	xor    eax,eax
  411945:	mov    r12,QWORD PTR [rdi+0x30]
  411949:	cmp    edx,0x28
  41194c:	je     411970 <__sprintf_chk@plt+0xf390>
  41194e:	cmp    edx,0x11d
  411954:	je     411b50 <__sprintf_chk@plt+0xf570>
  41195a:	lea    rsi,[rip+0x5c2f]        # 417590 <__sprintf_chk@plt+0x14fb0>
  411961:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  411966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411970:	mov    r13d,DWORD PTR [rdi+0x4]
  411974:	cmp    DWORD PTR [rdi+0x20],0x11f
  41197b:	mov    DWORD PTR [rdi+0x8],r13d
  41197f:	je     411b70 <__sprintf_chk@plt+0xf590>
  411985:	vmovdqa xmm1,XMMWORD PTR [rdi+0x20]
  41198a:	mov    DWORD PTR [rdi+0x20],0x11f
  411991:	vmovaps XMMWORD PTR [rdi+0x10],xmm1
  411996:	xor    edx,edx
  411998:	mov    rsi,rbp
  41199b:	mov    rdi,rbx
  41199e:	call   410610 <__sprintf_chk@plt+0xe030>
  4119a3:	mov    esi,0x29
  4119a8:	mov    rdi,rbx
  4119ab:	mov    ecx,r13d
  4119ae:	mov    edx,0x28
  4119b3:	call   40f100 <__sprintf_chk@plt+0xcb20>
  4119b8:	mov    rdi,QWORD PTR [rbx+0x30]
  4119bc:	mov    rsi,rbp
  4119bf:	call   409a50 <__sprintf_chk@plt+0x7470>
  4119c4:	mov    r13,rsp
  4119c7:	mov    eax,DWORD PTR [rbx+0x10]
  4119ca:	cmp    eax,0x3a
  4119cd:	je     411a28 <__sprintf_chk@plt+0xf448>
  4119cf:	jle    411af0 <__sprintf_chk@plt+0xf510>
  4119d5:	cmp    eax,0x7b
  4119d8:	je     411b10 <__sprintf_chk@plt+0xf530>
  4119de:	cmp    eax,0x11e
  4119e3:	je     411b10 <__sprintf_chk@plt+0xf530>
  4119e9:	cmp    eax,0x5b
  4119ec:	jne    411b30 <__sprintf_chk@plt+0xf550>
  4119f2:	mov    rsi,rbp
  4119f5:	mov    rdi,r12
  4119f8:	call   40a270 <__sprintf_chk@plt+0x7c90>
  4119fd:	mov    rsi,r13
  411a00:	mov    rdi,rbx
  411a03:	call   4111b0 <__sprintf_chk@plt+0xebd0>
  411a08:	mov    rsi,r13
  411a0b:	mov    rdi,r12
  411a0e:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  411a13:	mov    DWORD PTR [rbp+0xc],eax
  411a16:	mov    DWORD PTR [rbp+0x0],0x9
  411a1d:	mov    eax,DWORD PTR [rbx+0x10]
  411a20:	cmp    eax,0x3a
  411a23:	jne    4119cf <__sprintf_chk@plt+0xf3ef>
  411a25:	nop    DWORD PTR [rax]
  411a28:	mov    eax,DWORD PTR [rbx+0x4]
  411a2b:	cmp    DWORD PTR [rbx+0x20],0x11f
  411a32:	mov    DWORD PTR [rbx+0x8],eax
  411a35:	je     411b60 <__sprintf_chk@plt+0xf580>
  411a3b:	vmovdqa xmm0,XMMWORD PTR [rbx+0x20]
  411a40:	mov    DWORD PTR [rbx+0x20],0x11f
  411a47:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  411a4c:	mov    rsi,r13
  411a4f:	mov    rdi,rbx
  411a52:	call   40eec0 <__sprintf_chk@plt+0xc8e0>
  411a57:	mov    rsi,rbp
  411a5a:	mov    rdi,r12
  411a5d:	call   40a270 <__sprintf_chk@plt+0x7c90>
  411a62:	cmp    DWORD PTR [rbp+0x0],0xc
  411a66:	jne    411a74 <__sprintf_chk@plt+0xf494>
  411a68:	lea    rsi,[rbp+0x8]
  411a6c:	mov    rdi,r12
  411a6f:	call   404550 <__sprintf_chk@plt+0x1f70>
  411a74:	mov    esi,0x2
  411a79:	mov    rdi,r12
  411a7c:	mov    r14d,DWORD PTR [r12+0x3c]
  411a81:	call   40a150 <__sprintf_chk@plt+0x7b70>
  411a86:	add    DWORD PTR [r12+0x3c],0x2
  411a8c:	mov    rsi,r13
  411a8f:	mov    rdi,r12
  411a92:	call   40a2f0 <__sprintf_chk@plt+0x7d10>
  411a97:	shl    eax,0xe
  411a9a:	mov    ecx,0x17
  411a9f:	mov    rdx,QWORD PTR [r12+0x18]
  411aa4:	shlx   esi,DWORD PTR [rbp+0x8],ecx
  411aaa:	or     esi,eax
  411aac:	mov    eax,r14d
  411aaf:	shl    eax,0x6
  411ab2:	or     esi,eax
  411ab4:	mov    edx,DWORD PTR [rdx+0x8]
  411ab7:	or     esi,0xb
  411aba:	mov    rdi,r12
  411abd:	call   409980 <__sprintf_chk@plt+0x73a0>
  411ac2:	cmp    DWORD PTR [rsp],0xc
  411ac6:	jne    411ad4 <__sprintf_chk@plt+0xf4f4>
  411ac8:	lea    rsi,[r13+0x8]
  411acc:	mov    rdi,r12
  411acf:	call   404550 <__sprintf_chk@plt+0x1f70>
  411ad4:	mov    DWORD PTR [rbp+0x8],r14d
  411ad8:	mov    DWORD PTR [rbp+0x0],0xc
  411adf:	mov    rsi,rbp
  411ae2:	mov    rdi,rbx
  411ae5:	call   4116e0 <__sprintf_chk@plt+0xf100>
  411aea:	jmp    4119c7 <__sprintf_chk@plt+0xf3e7>
  411aef:	nop
  411af0:	cmp    eax,0x28
  411af3:	je     411b10 <__sprintf_chk@plt+0xf530>
  411af5:	cmp    eax,0x2e
  411af8:	jne    411b30 <__sprintf_chk@plt+0xf550>
  411afa:	mov    rsi,rbp
  411afd:	mov    rdi,rbx
  411b00:	call   40efc0 <__sprintf_chk@plt+0xc9e0>
  411b05:	jmp    4119c7 <__sprintf_chk@plt+0xf3e7>
  411b0a:	nop    WORD PTR [rax+rax*1+0x0]
  411b10:	mov    rsi,rbp
  411b13:	mov    rdi,r12
  411b16:	call   40a220 <__sprintf_chk@plt+0x7c40>
  411b1b:	mov    rsi,rbp
  411b1e:	mov    rdi,rbx
  411b21:	call   4116e0 <__sprintf_chk@plt+0xf100>
  411b26:	jmp    4119c7 <__sprintf_chk@plt+0xf3e7>
  411b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  411b30:	mov    rax,QWORD PTR [rsp+0x18]
  411b35:	xor    rax,QWORD PTR fs:0x28
  411b3e:	jne    411b7a <__sprintf_chk@plt+0xf59a>
  411b40:	add    rsp,0x20
  411b44:	pop    rbx
  411b45:	pop    rbp
  411b46:	pop    r12
  411b48:	pop    r13
  411b4a:	pop    r14
  411b4c:	ret    
  411b4d:	nop    DWORD PTR [rax]
  411b50:	call   40ef30 <__sprintf_chk@plt+0xc950>
  411b55:	jmp    4119c4 <__sprintf_chk@plt+0xf3e4>
  411b5a:	nop    WORD PTR [rax+rax*1+0x0]
  411b60:	mov    rdi,rbx
  411b63:	call   40ee30 <__sprintf_chk@plt+0xc850>
  411b68:	jmp    411a4c <__sprintf_chk@plt+0xf46c>
  411b6d:	nop    DWORD PTR [rax]
  411b70:	call   40ee30 <__sprintf_chk@plt+0xc850>
  411b75:	jmp    411996 <__sprintf_chk@plt+0xf3b6>
  411b7a:	call   4023e0 <__stack_chk_fail@plt>
  411b7f:	nop
  411b80:	push   r14
  411b82:	push   r13
  411b84:	mov    r13d,edx
  411b87:	push   r12
  411b89:	push   rbp
  411b8a:	push   rbx
  411b8b:	mov    rbx,rdi
  411b8e:	sub    rsp,0x30
  411b92:	mov    rax,QWORD PTR fs:0x28
  411b9b:	mov    QWORD PTR [rsp+0x28],rax
  411ba0:	xor    eax,eax
  411ba2:	mov    eax,DWORD PTR [rsi+0x8]
  411ba5:	mov    edx,DWORD PTR [rdi+0x10]
  411ba8:	sub    eax,0x6
  411bab:	cmp    eax,0x3
  411bae:	ja     411cd0 <__sprintf_chk@plt+0xf6f0>
  411bb4:	mov    rbp,rsi
  411bb7:	cmp    edx,0x2c
  411bba:	je     411c68 <__sprintf_chk@plt+0xf688>
  411bc0:	mov    esi,0x3d
  411bc5:	mov    rdi,rbx
  411bc8:	mov    r12,rsp
  411bcb:	call   40f060 <__sprintf_chk@plt+0xca80>
  411bd0:	xor    edx,edx
  411bd2:	mov    rsi,r12
  411bd5:	mov    rdi,rbx
  411bd8:	call   410610 <__sprintf_chk@plt+0xe030>
  411bdd:	mov    rsi,r12
  411be0:	mov    rdi,rbx
  411be3:	call   411680 <__sprintf_chk@plt+0xf0a0>
  411be8:	mov    r14d,eax
  411beb:	add    rbp,0x8
  411bef:	cmp    r13d,eax
  411bf2:	je     411cf0 <__sprintf_chk@plt+0xf710>
  411bf8:	mov    rdi,QWORD PTR [rbx+0x30]
  411bfc:	mov    rcx,r12
  411bff:	mov    edx,eax
  411c01:	mov    esi,r13d
  411c04:	call   40a800 <__sprintf_chk@plt+0x8220>
  411c09:	mov    rdi,QWORD PTR [rbx+0x30]
  411c0d:	cmp    r13d,r14d
  411c10:	jge    411ce0 <__sprintf_chk@plt+0xf700>
  411c16:	mov    eax,DWORD PTR [rdi+0x3c]
  411c19:	sub    r14d,r13d
  411c1c:	sub    eax,r14d
  411c1f:	mov    DWORD PTR [rdi+0x3c],eax
  411c22:	dec    eax
  411c24:	mov    rdx,r12
  411c27:	mov    rsi,rbp
  411c2a:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  411c33:	mov    DWORD PTR [rsp],0xc
  411c3a:	mov    DWORD PTR [rsp+0x8],eax
  411c3e:	call   40a6c0 <__sprintf_chk@plt+0x80e0>
  411c43:	mov    rax,QWORD PTR [rsp+0x28]
  411c48:	xor    rax,QWORD PTR fs:0x28
  411c51:	jne    411db6 <__sprintf_chk@plt+0xf7d6>
  411c57:	add    rsp,0x30
  411c5b:	pop    rbx
  411c5c:	pop    rbp
  411c5d:	pop    r12
  411c5f:	pop    r13
  411c61:	pop    r14
  411c63:	ret    
  411c64:	nop    DWORD PTR [rax+0x0]
  411c68:	call   40f0b0 <__sprintf_chk@plt+0xcad0>
  411c6d:	test   eax,eax
  411c6f:	je     411bc0 <__sprintf_chk@plt+0xf5e0>
  411c75:	mov    r12,rsp
  411c78:	lea    rsi,[r12+0x8]
  411c7d:	mov    rdi,rbx
  411c80:	mov    QWORD PTR [rsp],rbp
  411c84:	call   411920 <__sprintf_chk@plt+0xf340>
  411c89:	cmp    DWORD PTR [rsp+0x8],0x6
  411c8e:	je     411d30 <__sprintf_chk@plt+0xf750>
  411c94:	mov    rax,QWORD PTR [rbx+0x38]
  411c98:	mov    esi,0xc8
  411c9d:	movzx  eax,WORD PTR [rax+0x60]
  411ca1:	sub    esi,eax
  411ca3:	cmp    esi,r13d
  411ca6:	jl     411d18 <__sprintf_chk@plt+0xf738>
  411ca8:	mov    rdi,rbx
  411cab:	lea    edx,[r13+0x1]
  411caf:	mov    rsi,r12
  411cb2:	call   411b80 <__sprintf_chk@plt+0xf5a0>
  411cb7:	mov    rdi,QWORD PTR [rbx+0x30]
  411cbb:	add    rbp,0x8
  411cbf:	mov    eax,DWORD PTR [rdi+0x3c]
  411cc2:	jmp    411c22 <__sprintf_chk@plt+0xf642>
  411cc7:	nop    WORD PTR [rax+rax*1+0x0]
  411cd0:	lea    rsi,[rip+0x58cb]        # 4175a2 <__sprintf_chk@plt+0x14fc2>
  411cd7:	call   4096d0 <__sprintf_chk@plt+0x70f0>
  411cdc:	nop    DWORD PTR [rax+0x0]
  411ce0:	mov    eax,DWORD PTR [rdi+0x3c]
  411ce3:	jmp    411c22 <__sprintf_chk@plt+0xf642>
  411ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  411cf0:	mov    rdi,QWORD PTR [rbx+0x30]
  411cf4:	lea    rdx,[r12+0x8]
  411cf9:	mov    rsi,r12
  411cfc:	call   403bb0 <__sprintf_chk@plt+0x15d0>
  411d01:	mov    rdi,QWORD PTR [rbx+0x30]
  411d05:	mov    rdx,r12
  411d08:	mov    rsi,rbp
  411d0b:	call   40a6c0 <__sprintf_chk@plt+0x80e0>
  411d10:	jmp    411c43 <__sprintf_chk@plt+0xf663>
  411d15:	nop    DWORD PTR [rax]
  411d18:	mov    rdi,QWORD PTR [rbx+0x30]
  411d1c:	lea    rdx,[rip+0x588c]        # 4175af <__sprintf_chk@plt+0x14fcf>
  411d23:	call   40ad80 <__sprintf_chk@plt+0x87a0>
  411d28:	nop    DWORD PTR [rax+rax*1+0x0]
  411d30:	mov    r14,QWORD PTR [rbx+0x30]
  411d34:	mov    rax,rbp
  411d37:	mov    ecx,DWORD PTR [r14+0x3c]
  411d3b:	xor    esi,esi
  411d3d:	jmp    411d48 <__sprintf_chk@plt+0xf768>
  411d3f:	nop
  411d40:	mov    rax,QWORD PTR [rax]
  411d43:	test   rax,rax
  411d46:	je     411d78 <__sprintf_chk@plt+0xf798>
  411d48:	cmp    DWORD PTR [rax+0x8],0x9
  411d4c:	jne    411d40 <__sprintf_chk@plt+0xf760>
  411d4e:	mov    edx,DWORD PTR [rsp+0x10]
  411d52:	cmp    DWORD PTR [rax+0x10],edx
  411d55:	jne    411d63 <__sprintf_chk@plt+0xf783>
  411d57:	mov    DWORD PTR [rax+0x10],ecx
  411d5a:	mov    esi,0x1
  411d5f:	mov    edx,DWORD PTR [rsp+0x10]
  411d63:	cmp    DWORD PTR [rax+0x14],edx
  411d66:	jne    411d40 <__sprintf_chk@plt+0xf760>
  411d68:	mov    DWORD PTR [rax+0x14],ecx
  411d6b:	mov    esi,0x1
  411d70:	jmp    411d40 <__sprintf_chk@plt+0xf760>
  411d72:	nop    WORD PTR [rax+rax*1+0x0]
  411d78:	test   esi,esi
  411d7a:	je     411c94 <__sprintf_chk@plt+0xf6b4>
  411d80:	mov    rax,QWORD PTR [r14+0x18]
  411d84:	shl    ecx,0x6
  411d87:	mov    edx,DWORD PTR [rax+0x8]
  411d8a:	mov    eax,0x17
  411d8f:	shlx   esi,DWORD PTR [rsp+0x10],eax
  411d96:	mov    rdi,r14
  411d99:	or     esi,ecx
  411d9b:	call   409980 <__sprintf_chk@plt+0x73a0>
  411da0:	mov    esi,0x1
  411da5:	mov    rdi,r14
  411da8:	call   40a150 <__sprintf_chk@plt+0x7b70>
  411dad:	inc    DWORD PTR [r14+0x3c]
  411db1:	jmp    411c94 <__sprintf_chk@plt+0xf6b4>
  411db6:	call   4023e0 <__stack_chk_fail@plt>
  411dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  411dc0:	push   r12
  411dc2:	xor    edx,edx
  411dc4:	push   rbp
  411dc5:	mov    rbp,rdi
  411dc8:	push   rbx
  411dc9:	sub    rsp,0x20
  411dcd:	mov    rbx,rsp
  411dd0:	mov    rsi,rbx
  411dd3:	mov    rax,QWORD PTR fs:0x28
  411ddc:	mov    QWORD PTR [rsp+0x18],rax
  411de1:	xor    eax,eax
  411de3:	call   410610 <__sprintf_chk@plt+0xe030>
  411de8:	mov    rdi,QWORD PTR [rbp+0x30]
  411dec:	mov    rsi,rbx
  411def:	mov    r12d,DWORD PTR [rsp]
  411df3:	call   40a220 <__sprintf_chk@plt+0x7c40>
  411df8:	mov    rcx,QWORD PTR [rsp+0x18]
  411dfd:	xor    rcx,QWORD PTR fs:0x28
  411e06:	jne    411e14 <__sprintf_chk@plt+0xf834>
  411e08:	add    rsp,0x20
  411e0c:	pop    rbx
  411e0d:	pop    rbp
  411e0e:	mov    eax,r12d
  411e11:	pop    r12
  411e13:	ret    
  411e14:	call   4023e0 <__stack_chk_fail@plt>
  411e19:	nop    DWORD PTR [rax+0x0]
  411e20:	push   r12
  411e22:	mov    r12,rsi
  411e25:	push   rbp
  411e26:	mov    rbp,rdi
  411e29:	mov    rdi,rcx
  411e2c:	push   rbx
  411e2d:	mov    rbx,rcx
  411e30:	sub    rsp,0x2c0
  411e37:	mov    rax,QWORD PTR fs:0x28
  411e40:	mov    QWORD PTR [rsp+0x2b8],rax
  411e48:	xor    eax,eax
  411e4a:	mov    QWORD PTR [rsp+0x48],rdx
  411e4f:	call   4023d0 <strlen@plt>
  411e54:	mov    rdx,rax
  411e57:	mov    rsi,rbx
  411e5a:	mov    rdi,rbp
  411e5d:	call   407490 <__sprintf_chk@plt+0x4eb0>
  411e62:	mov    BYTE PTR [rsp+0x58],0x2e
  411e67:	mov    rbx,QWORD PTR [rsp+0x48]
  411e6c:	movabs rcx,0x100000001
  411e76:	mov    rdx,QWORD PTR [rbx+0x10]
  411e7a:	mov    rsi,QWORD PTR [rbx]
  411e7d:	mov    QWORD PTR [rsp+0x4],rcx
  411e82:	mov    rdi,rbp
  411e85:	mov    ecx,0x20
  411e8a:	mov    QWORD PTR [rsp+0x38],rbp
  411e8f:	mov    DWORD PTR [rsp+0x20],0x11f
  411e97:	mov    QWORD PTR [rsp+0x40],r12
  411e9c:	mov    QWORD PTR [rsp+0x30],0x0
  411ea5:	mov    QWORD PTR [rsp+0x50],rax
  411eaa:	call   404640 <__sprintf_chk@plt+0x2060>
  411eaf:	mov    QWORD PTR [rbx],rax
  411eb2:	mov    rdi,QWORD PTR [rsp+0x40]
  411eb7:	mov    rax,QWORD PTR [rsp+0x48]
  411ebc:	mov    QWORD PTR [rax+0x10],0x20
  411ec4:	mov    rax,QWORD PTR [rdi]
  411ec7:	lea    rdx,[rax-0x1]
  411ecb:	mov    QWORD PTR [rdi],rdx
  411ece:	test   rax,rax
  411ed1:	je     411f80 <__sprintf_chk@plt+0xf9a0>
  411ed7:	mov    rax,QWORD PTR [rdi+0x8]
  411edb:	lea    rdx,[rax+0x1]
  411edf:	mov    QWORD PTR [rdi+0x8],rdx
  411ee3:	movzx  eax,BYTE PTR [rax]
  411ee6:	mov    rbx,rsp
  411ee9:	lea    rsi,[rsp+0x60]
  411eee:	mov    rdi,rbx
  411ef1:	mov    DWORD PTR [rsp],eax
  411ef4:	call   4088a0 <__sprintf_chk@plt+0x62c0>
  411ef9:	mov    rax,QWORD PTR [rsp+0x60]
  411efe:	cmp    DWORD PTR [rsp+0x20],0x11f
  411f06:	mov    BYTE PTR [rax+0x72],0x2
  411f0a:	mov    eax,DWORD PTR [rsp+0x4]
  411f0e:	mov    DWORD PTR [rsp+0x8],eax
  411f12:	je     411f90 <__sprintf_chk@plt+0xf9b0>
  411f14:	vmovdqa xmm0,XMMWORD PTR [rsp+0x20]
  411f1a:	mov    DWORD PTR [rsp+0x20],0x11f
  411f22:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  411f28:	mov    rdi,rbx
  411f2b:	call   40f470 <__sprintf_chk@plt+0xce90>
  411f30:	cmp    DWORD PTR [rsp+0x10],0x11f
  411f38:	jne    411f70 <__sprintf_chk@plt+0xf990>
  411f3a:	mov    rdi,rbx
  411f3d:	call   40f1f0 <__sprintf_chk@plt+0xcc10>
  411f42:	mov    rcx,QWORD PTR [rsp+0x2b8]
  411f4a:	xor    rcx,QWORD PTR fs:0x28
  411f53:	mov    rax,QWORD PTR [rsp+0x60]
  411f58:	jne    411f9a <__sprintf_chk@plt+0xf9ba>
  411f5a:	add    rsp,0x2c0
  411f61:	pop    rbx
  411f62:	pop    rbp
  411f63:	pop    r12
  411f65:	ret    
  411f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f70:	mov    esi,0x11f
  411f75:	mov    rdi,rbx
  411f78:	call   40b180 <__sprintf_chk@plt+0x8ba0>
  411f7d:	nop    DWORD PTR [rax]
  411f80:	call   402d80 <__sprintf_chk@plt+0x7a0>
  411f85:	jmp    411ee6 <__sprintf_chk@plt+0xf906>
  411f8a:	nop    WORD PTR [rax+rax*1+0x0]
  411f90:	mov    rdi,rbx
  411f93:	call   40ee30 <__sprintf_chk@plt+0xc850>
  411f98:	jmp    411f28 <__sprintf_chk@plt+0xf948>
  411f9a:	call   4023e0 <__stack_chk_fail@plt>
  411f9f:	nop
  411fa0:	push   rbx
  411fa1:	sub    rsp,0x20
  411fa5:	mov    rbx,QWORD PTR [rdi+0x30]
  411fa9:	mov    rax,QWORD PTR fs:0x28
  411fb2:	mov    QWORD PTR [rsp+0x18],rax
  411fb7:	xor    eax,eax
  411fb9:	movzx  eax,BYTE PTR [rbx+0x4a]
  411fbd:	mov    DWORD PTR [rsp+0x8],0xffffffff
  411fc5:	mov    BYTE PTR [rsp+0xc],al
  411fc9:	xor    eax,eax
  411fcb:	mov    WORD PTR [rsp+0xd],ax
  411fd0:	mov    rax,QWORD PTR [rbx+0x28]
  411fd4:	mov    QWORD PTR [rsp],rax
  411fd8:	mov    rax,rsp
  411fdb:	mov    QWORD PTR [rbx+0x28],rax
  411fdf:	call   40f470 <__sprintf_chk@plt+0xce90>
  411fe4:	mov    rdi,rbx
  411fe7:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  411fec:	mov    rax,QWORD PTR [rsp+0x18]
  411ff1:	xor    rax,QWORD PTR fs:0x28
  411ffa:	jne    412002 <__sprintf_chk@plt+0xfa22>
  411ffc:	add    rsp,0x20
  412000:	pop    rbx
  412001:	ret    
  412002:	call   4023e0 <__stack_chk_fail@plt>
  412007:	nop    WORD PTR [rax+rax*1+0x0]
  412010:	push   rbp
  412011:	push   rbx
  412012:	mov    rbx,rdi
  412015:	sub    rsp,0x8
  412019:	mov    eax,DWORD PTR [rdi+0x4]
  41201c:	cmp    DWORD PTR [rdi+0x20],0x11f
  412023:	mov    DWORD PTR [rdi+0x8],eax
  412026:	je     412068 <__sprintf_chk@plt+0xfa88>
  412028:	vmovdqa xmm0,XMMWORD PTR [rdi+0x20]
  41202d:	mov    DWORD PTR [rdi+0x20],0x11f
  412034:	vmovaps XMMWORD PTR [rdi+0x10],xmm0
  412039:	mov    rdi,rbx
  41203c:	call   411150 <__sprintf_chk@plt+0xeb70>
  412041:	mov    rdi,rbx
  412044:	mov    esi,0x112
  412049:	mov    ebp,eax
  41204b:	call   40f060 <__sprintf_chk@plt+0xca80>
  412050:	mov    rdi,rbx
  412053:	call   411fa0 <__sprintf_chk@plt+0xf9c0>
  412058:	add    rsp,0x8
  41205c:	pop    rbx
  41205d:	mov    eax,ebp
  41205f:	pop    rbp
  412060:	ret    
  412061:	nop    DWORD PTR [rax+0x0]
  412068:	call   40ee30 <__sprintf_chk@plt+0xc850>
  41206d:	jmp    412039 <__sprintf_chk@plt+0xfa59>
  41206f:	nop
  412070:	push   r15
  412072:	push   r14
  412074:	mov    r14d,r8d
  412077:	push   r13
  412079:	mov    r13,rdi
  41207c:	push   r12
  41207e:	push   rbp
  41207f:	mov    ebp,esi
  412081:	push   rbx
  412082:	mov    ebx,ecx
  412084:	sub    rsp,0x38
  412088:	mov    DWORD PTR [rsp+0xc],edx
  41208c:	mov    r15,QWORD PTR [rdi+0x30]
  412090:	mov    rax,QWORD PTR fs:0x28
  412099:	mov    QWORD PTR [rsp+0x28],rax
  41209e:	xor    eax,eax
  4120a0:	movzx  eax,BYTE PTR [r15+0x4a]
  4120a5:	mov    rdx,QWORD PTR [r15]
  4120a8:	add    eax,0x3
  4120ab:	mov    BYTE PTR [r15+0x4a],al
  4120af:	mov    edi,DWORD PTR [r15+0x30]
  4120b3:	movzx  eax,al
  4120b6:	mov    r8,QWORD PTR [rdx+0x30]
  4120ba:	lea    rsi,[r15+rax*2]
  4120be:	xor    eax,eax
  4120c0:	movzx  edx,WORD PTR [rsi+rax*2+0xbe]
  4120c8:	inc    rax
  4120cb:	shl    rdx,0x4
  4120cf:	mov    DWORD PTR [r8+rdx*1+0x8],edi
  4120d4:	cmp    rax,0x3
  4120d8:	jne    4120c0 <__sprintf_chk@plt+0xfae0>
  4120da:	mov    esi,0x103
  4120df:	mov    rdi,r13
  4120e2:	call   40f060 <__sprintf_chk@plt+0xca80>
  4120e7:	shl    ebp,0x6
  4120ea:	test   r14d,r14d
  4120ed:	je     412250 <__sprintf_chk@plt+0xfc70>
  4120f3:	mov    rax,QWORD PTR [r15+0x18]
  4120f7:	mov    esi,ebp
  4120f9:	mov    edx,DWORD PTR [rax+0x8]
  4120fc:	or     esi,0x7fff8020
  412102:	mov    rdi,r15
  412105:	call   409980 <__sprintf_chk@plt+0x73a0>
  41210a:	mov    r12d,eax
  41210d:	movzx  eax,BYTE PTR [r15+0x4a]
  412112:	mov    r8,QWORD PTR [r13+0x30]
  412116:	mov    BYTE PTR [rsp+0x1c],al
  41211a:	xor    eax,eax
  41211c:	mov    WORD PTR [rsp+0x1d],ax
  412121:	mov    rax,QWORD PTR [r15+0x28]
  412125:	lea    r9d,[rbx-0x1]
  412129:	mov    QWORD PTR [rsp+0x10],rax
  41212e:	lea    rax,[rsp+0x10]
  412133:	mov    QWORD PTR [r15+0x28],rax
  412137:	mov    rax,QWORD PTR [r8]
  41213a:	mov    DWORD PTR [rsp+0x18],0xffffffff
  412142:	movzx  edx,BYTE PTR [r8+0x4a]
  412147:	mov    esi,DWORD PTR [r8+0x30]
  41214b:	add    edx,ebx
  41214d:	mov    BYTE PTR [r8+0x4a],dl
  412151:	movzx  edx,dl
  412154:	sub    edx,ebx
  412156:	movsxd rdx,edx
  412159:	mov    rdi,QWORD PTR [rax+0x30]
  41215d:	lea    rax,[r8+rdx*2+0xc4]
  412165:	add    rdx,r9
  412168:	lea    r8,[r8+rdx*2+0xc6]
  412170:	movzx  edx,WORD PTR [rax]
  412173:	add    rax,0x2
  412177:	shl    rdx,0x4
  41217b:	mov    DWORD PTR [rdi+rdx*1+0x8],esi
  41217f:	cmp    r8,rax
  412182:	jne    412170 <__sprintf_chk@plt+0xfb90>
  412184:	mov    esi,ebx
  412186:	mov    rdi,r15
  412189:	call   40a150 <__sprintf_chk@plt+0x7b70>
  41218e:	add    DWORD PTR [r15+0x3c],ebx
  412192:	mov    rdi,r13
  412195:	call   411fa0 <__sprintf_chk@plt+0xf9c0>
  41219a:	mov    rdi,r15
  41219d:	call   40a090 <__sprintf_chk@plt+0x7ab0>
  4121a2:	mov    eax,DWORD PTR [r15+0x30]
  4121a6:	mov    edx,r12d
  4121a9:	mov    DWORD PTR [r15+0x34],eax
  4121ad:	lea    rsi,[r15+0x38]
  4121b1:	mov    rdi,r15
  4121b4:	call   409df0 <__sprintf_chk@plt+0x7810>
  4121b9:	mov    rax,QWORD PTR [r15+0x18]
  4121bd:	inc    r12d
  4121c0:	mov    edx,DWORD PTR [rax+0x8]
  4121c3:	test   r14d,r14d
  4121c6:	jne    412228 <__sprintf_chk@plt+0xfc48>
  4121c8:	shl    ebx,0xe
  4121cb:	mov    esi,ebx
  4121cd:	or     esi,ebp
  4121cf:	mov    rdi,r15
  4121d2:	or     esi,0x21
  4121d5:	call   409980 <__sprintf_chk@plt+0x73a0>
  4121da:	mov    rax,QWORD PTR [r15]
  4121dd:	movsxd rdx,DWORD PTR [r15+0x30]
  4121e1:	mov    rax,QWORD PTR [rax+0x28]
  4121e5:	mov    ecx,DWORD PTR [rsp+0xc]
  4121e9:	mov    rdi,r15
  4121ec:	mov    DWORD PTR [rax+rdx*4-0x4],ecx
  4121f0:	call   409e90 <__sprintf_chk@plt+0x78b0>
  4121f5:	mov    esi,eax
  4121f7:	mov    edx,r12d
  4121fa:	mov    rdi,r15
  4121fd:	call   409e60 <__sprintf_chk@plt+0x7880>
  412202:	mov    rax,QWORD PTR [rsp+0x28]
  412207:	xor    rax,QWORD PTR fs:0x28
  412210:	jne    412260 <__sprintf_chk@plt+0xfc80>
  412212:	add    rsp,0x38
  412216:	pop    rbx
  412217:	pop    rbp
  412218:	pop    r12
  41221a:	pop    r13
  41221c:	pop    r14
  41221e:	pop    r15
  412220:	ret    
  412221:	nop    DWORD PTR [rax+0x0]
  412228:	mov    esi,ebp
  41222a:	or     esi,0x7fff801f
  412230:	mov    rdi,r15
  412233:	call   409980 <__sprintf_chk@plt+0x73a0>
  412238:	mov    rdx,QWORD PTR [r15]
  41223b:	movsxd rsi,DWORD PTR [r15+0x30]
  41223f:	mov    rdx,QWORD PTR [rdx+0x28]
  412243:	mov    ecx,DWORD PTR [rsp+0xc]
  412247:	mov    DWORD PTR [rdx+rsi*4-0x4],ecx
  41224b:	jmp    4121f5 <__sprintf_chk@plt+0xfc15>
  41224d:	nop    DWORD PTR [rax]
  412250:	mov    rdi,r15
  412253:	call   409e90 <__sprintf_chk@plt+0x78b0>
  412258:	mov    r12d,eax
  41225b:	jmp    41210d <__sprintf_chk@plt+0xfb2d>
  412260:	call   4023e0 <__stack_chk_fail@plt>
  412265:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412270:	endbr64 
  412274:	push   r13
  412276:	mov    r13,rdi
  412279:	push   r12
  41227b:	push   rbp
  41227c:	push   rbx
  41227d:	sub    rsp,0x18
  412281:	mov    rax,QWORD PTR [rdi+0x20]
  412285:	mov    rdi,QWORD PTR [rax+0x70]
  412289:	cmp    QWORD PTR [rax+0x78],rdi
  41228d:	jae    412350 <__sprintf_chk@plt+0xfd70>
  412293:	mov    rcx,QWORD PTR [rsi+0x20]
  412297:	lea    rdx,[rsi+0x8]
  41229b:	mov    rsi,QWORD PTR [rsi]
  41229e:	mov    rdi,r13
  4122a1:	call   411e20 <__sprintf_chk@plt+0xf840>
  4122a6:	movzx  esi,BYTE PTR [rax+0x70]
  4122aa:	mov    rdx,QWORD PTR [r13+0x78]
  4122ae:	mov    rdi,r13
  4122b1:	mov    rbp,rax
  4122b4:	call   4047d0 <__sprintf_chk@plt+0x21f0>
  4122b9:	mov    QWORD PTR [rax+0x20],rbp
  4122bd:	mov    r12,rax
  4122c0:	cmp    BYTE PTR [rbp+0x70],0x0
  4122c4:	je     41231d <__sprintf_chk@plt+0xfd3d>
  4122c6:	xor    ebx,ebx
  4122c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4122d0:	mov    ecx,0x28
  4122d5:	xor    edx,edx
  4122d7:	xor    esi,esi
  4122d9:	mov    rdi,r13
  4122dc:	call   404640 <__sprintf_chk@plt+0x2060>
  4122e1:	mov    rdx,QWORD PTR [r13+0x20]
  4122e5:	mov    rcx,QWORD PTR [rdx+0x28]
  4122e9:	mov    QWORD PTR [rax],rcx
  4122ec:	mov    QWORD PTR [rdx+0x28],rax
  4122f0:	movzx  edx,BYTE PTR [rdx+0x20]
  4122f4:	mov    BYTE PTR [rax+0x8],0xa
  4122f8:	and    edx,0x3
  4122fb:	mov    BYTE PTR [rax+0x9],dl
  4122fe:	lea    rdx,[rax+0x18]
  412302:	mov    QWORD PTR [rax+0x10],rdx
  412306:	mov    DWORD PTR [rax+0x20],0x0
  41230d:	mov    QWORD PTR [r12+rbx*8+0x28],rax
  412312:	inc    rbx
  412315:	movzx  eax,BYTE PTR [rbp+0x70]
  412319:	cmp    eax,ebx
  41231b:	jg     4122d0 <__sprintf_chk@plt+0xfcf0>
  41231d:	mov    rax,QWORD PTR [r13+0x10]
  412321:	mov    rdi,QWORD PTR [r13+0x38]
  412325:	mov    QWORD PTR [rax],r12
  412328:	sub    rdi,rax
  41232b:	mov    DWORD PTR [rax+0x8],0x6
  412332:	cmp    rdi,0x10
  412336:	jle    412370 <__sprintf_chk@plt+0xfd90>
  412338:	add    QWORD PTR [r13+0x10],0x10
  41233d:	add    rsp,0x18
  412341:	pop    rbx
  412342:	pop    rbp
  412343:	pop    r12
  412345:	pop    r13
  412347:	ret    
  412348:	nop    DWORD PTR [rax+rax*1+0x0]
  412350:	mov    rdi,r13
  412353:	mov    QWORD PTR [rsp+0x8],rsi
  412358:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  41235d:	mov    rsi,QWORD PTR [rsp+0x8]
  412362:	jmp    412293 <__sprintf_chk@plt+0xfcb3>
  412367:	nop    WORD PTR [rax+rax*1+0x0]
  412370:	mov    rdi,r13
  412373:	mov    esi,0x1
  412378:	call   408180 <__sprintf_chk@plt+0x5ba0>
  41237d:	add    QWORD PTR [r13+0x10],0x10
  412382:	add    rsp,0x18
  412386:	pop    rbx
  412387:	pop    rbp
  412388:	pop    r12
  41238a:	pop    r13
  41238c:	ret    
  41238d:	nop    DWORD PTR [rax]
  412390:	push   r14
  412392:	push   r13
  412394:	mov    r13d,edx
  412397:	push   r12
  412399:	mov    r12,rsi
  41239c:	push   rbp
  41239d:	mov    rbp,rdi
  4123a0:	push   rbx
  4123a1:	mov    rax,QWORD PTR [rdi+0x20]
  4123a5:	mov    rdi,QWORD PTR [rax+0x70]
  4123a9:	cmp    QWORD PTR [rax+0x78],rdi
  4123ad:	jae    412470 <__sprintf_chk@plt+0xfe90>
  4123b3:	mov    rax,QWORD PTR [rbp+0x28]
  4123b7:	cmp    rax,QWORD PTR [rbp+0x50]
  4123bb:	je     412486 <__sprintf_chk@plt+0xfea6>
  4123c1:	mov    rax,QWORD PTR [rax+0x8]
  4123c5:	mov    rax,QWORD PTR [rax]
  4123c8:	mov    r14,QWORD PTR [rax+0x18]
  4123cc:	lea    ebx,[r13-0x1]
  4123d0:	mov    ecx,ebx
  4123d2:	shl    ecx,0x4
  4123d5:	add    ecx,0x38
  4123d8:	movsxd rcx,ecx
  4123db:	xor    edx,edx
  4123dd:	xor    esi,esi
  4123df:	mov    rdi,rbp
  4123e2:	call   404640 <__sprintf_chk@plt+0x2060>
  4123e7:	mov    rdx,QWORD PTR [rbp+0x20]
  4123eb:	mov    rcx,QWORD PTR [rdx+0x28]
  4123ef:	mov    QWORD PTR [rax],rcx
  4123f2:	mov    QWORD PTR [rdx+0x28],rax
  4123f6:	movsxd rcx,r13d
  4123f9:	movzx  edx,BYTE PTR [rdx+0x20]
  4123fd:	mov    BYTE PTR [rax+0x8],0x6
  412401:	and    edx,0x3
  412404:	mov    BYTE PTR [rax+0x9],dl
  412407:	shl    rcx,0x4
  41240b:	mov    BYTE PTR [rax+0xa],0x1
  41240f:	mov    rdx,QWORD PTR [rbp+0x10]
  412413:	mov    QWORD PTR [rax+0x18],r14
  412417:	sub    rdx,rcx
  41241a:	mov    BYTE PTR [rax+0xb],r13b
  41241e:	mov    QWORD PTR [rax+0x20],r12
  412422:	mov    QWORD PTR [rbp+0x10],rdx
  412426:	test   r13d,r13d
  412429:	je     412451 <__sprintf_chk@plt+0xfe71>
  41242b:	sub    rcx,0x10
  41242f:	nop
  412430:	add    rdx,rcx
  412433:	mov    rsi,QWORD PTR [rdx]
  412436:	dec    ebx
  412438:	mov    QWORD PTR [rax+rcx*1+0x28],rsi
  41243d:	mov    edx,DWORD PTR [rdx+0x8]
  412440:	mov    DWORD PTR [rax+rcx*1+0x30],edx
  412444:	sub    rcx,0x10
  412448:	mov    rdx,QWORD PTR [rbp+0x10]
  41244c:	cmp    ebx,0xffffffff
  41244f:	jne    412430 <__sprintf_chk@plt+0xfe50>
  412451:	mov    QWORD PTR [rdx],rax
  412454:	mov    DWORD PTR [rdx+0x8],0x6
  41245b:	add    rdx,0x10
  41245f:	mov    QWORD PTR [rbp+0x10],rdx
  412463:	pop    rbx
  412464:	pop    rbp
  412465:	pop    r12
  412467:	pop    r13
  412469:	pop    r14
  41246b:	ret    
  41246c:	nop    DWORD PTR [rax+0x0]
  412470:	mov    rdi,rbp
  412473:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  412478:	mov    rax,QWORD PTR [rbp+0x28]
  41247c:	cmp    rax,QWORD PTR [rbp+0x50]
  412480:	jne    4123c1 <__sprintf_chk@plt+0xfde1>
  412486:	mov    r14,QWORD PTR [rbp+0x78]
  41248a:	jmp    4123cc <__sprintf_chk@plt+0xfdec>
  41248f:	nop
  412490:	sub    rsp,0x8
  412494:	mov    r8,rdi
  412497:	mov    r9d,edx
  41249a:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  41249f:	mov    rdx,QWORD PTR [rax]
  4124a2:	mov    rcx,QWORD PTR [r8+0x10]
  4124a6:	mov    eax,DWORD PTR [rax+0x8]
  4124a9:	mov    QWORD PTR [rcx],rdx
  4124ac:	mov    DWORD PTR [rcx+0x8],eax
  4124af:	mov    DWORD PTR [rcx+0x10],r9d
  4124b3:	mov    DWORD PTR [rcx+0x18],0x1
  4124ba:	add    rcx,0x20
  4124be:	mov    QWORD PTR [r8+0x10],rcx
  4124c2:	mov    edx,0x2
  4124c7:	lea    rsi,[rip+0xffffffffffffb422]        # 40d8f0 <__sprintf_chk@plt+0xb310>
  4124ce:	mov    rdi,r8
  4124d1:	add    rsp,0x8
  4124d5:	jmp    412390 <__sprintf_chk@plt+0xfdb0>
  4124da:	nop    WORD PTR [rax+rax*1+0x0]
  4124e0:	endbr64 
  4124e4:	push   rbx
  4124e5:	mov    rbx,rdi
  4124e8:	call   40d370 <__sprintf_chk@plt+0xad90>
  4124ed:	mov    rdi,rbx
  4124f0:	xor    edx,edx
  4124f2:	mov    esi,0x1
  4124f7:	call   412490 <__sprintf_chk@plt+0xfeb0>
  4124fc:	mov    eax,0x1
  412501:	pop    rbx
  412502:	ret    
  412503:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41250e:	xchg   ax,ax
  412510:	push   r12
  412512:	mov    r12d,esi
  412515:	push   rbp
  412516:	mov    rbp,rdi
  412519:	push   rbx
  41251a:	mov    rbx,rdx
  41251d:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  412522:	mov    edx,DWORD PTR [rax+0x8]
  412525:	cmp    edx,0x4
  412528:	je     412574 <__sprintf_chk@plt+0xff94>
  41252a:	cmp    edx,0x3
  41252d:	je     412548 <__sprintf_chk@plt+0xff68>
  41252f:	test   rbx,rbx
  412532:	je     41253b <__sprintf_chk@plt+0xff5b>
  412534:	mov    QWORD PTR [rbx],0x0
  41253b:	pop    rbx
  41253c:	pop    rbp
  41253d:	xor    eax,eax
  41253f:	pop    r12
  412541:	ret    
  412542:	nop    WORD PTR [rax+rax*1+0x0]
  412548:	lea    rdx,[rax+0x8]
  41254c:	mov    rsi,rax
  41254f:	mov    rdi,rbp
  412552:	call   407840 <__sprintf_chk@plt+0x5260>
  412557:	test   eax,eax
  412559:	je     41252f <__sprintf_chk@plt+0xff4f>
  41255b:	mov    rax,QWORD PTR [rbp+0x20]
  41255f:	mov    rcx,QWORD PTR [rax+0x70]
  412563:	cmp    QWORD PTR [rax+0x78],rcx
  412567:	jae    412590 <__sprintf_chk@plt+0xffb0>
  412569:	mov    esi,r12d
  41256c:	mov    rdi,rbp
  41256f:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  412574:	mov    rax,QWORD PTR [rax]
  412577:	test   rbx,rbx
  41257a:	je     412583 <__sprintf_chk@plt+0xffa3>
  41257c:	mov    rdx,QWORD PTR [rax+0x10]
  412580:	mov    QWORD PTR [rbx],rdx
  412583:	pop    rbx
  412584:	pop    rbp
  412585:	add    rax,0x18
  412589:	pop    r12
  41258b:	ret    
  41258c:	nop    DWORD PTR [rax+0x0]
  412590:	mov    rdi,rbp
  412593:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  412598:	jmp    412569 <__sprintf_chk@plt+0xff89>
  41259a:	nop    WORD PTR [rax+rax*1+0x0]
  4125a0:	endbr64 
  4125a4:	sub    rsp,0x8
  4125a8:	xor    edx,edx
  4125aa:	mov    esi,0xffffffff
  4125af:	call   412510 <__sprintf_chk@plt+0xff30>
  4125b4:	mov    rcx,rax
  4125b7:	mov    rax,QWORD PTR [rip+0xca3a]        # 41eff8 <__sprintf_chk@plt+0x1ca18>
  4125be:	lea    rdx,[rip+0x5d13]        # 4182d8 <__sprintf_chk@plt+0x15cf8>
  4125c5:	mov    rdi,QWORD PTR [rax]
  4125c8:	mov    esi,0x1
  4125cd:	xor    eax,eax
  4125cf:	call   402590 <__fprintf_chk@plt>
  4125d4:	xor    eax,eax
  4125d6:	add    rsp,0x8
  4125da:	ret    
  4125db:	nop    DWORD PTR [rax+rax*1+0x0]
  4125e0:	push   rbp
  4125e1:	mov    esi,0xffffffff
  4125e6:	push   rbx
  4125e7:	mov    rbx,rdi
  4125ea:	sub    rsp,0x18
  4125ee:	mov    rbp,QWORD PTR [rdi+0x10]
  4125f2:	mov    rdx,rsp
  4125f5:	mov    rdi,rbp
  4125f8:	mov    rax,QWORD PTR fs:0x28
  412601:	mov    QWORD PTR [rsp+0x8],rax
  412606:	xor    eax,eax
  412608:	call   412510 <__sprintf_chk@plt+0xff30>
  41260d:	mov    rdi,QWORD PTR [rbx]
  412610:	mov    rcx,rbx
  412613:	sub    rcx,rdi
  412616:	mov    rdx,QWORD PTR [rsp]
  41261a:	add    rcx,0x2018
  412621:	cmp    rcx,rdx
  412624:	jb     412658 <__sprintf_chk@plt+0x10078>
  412626:	mov    rsi,rax
  412629:	call   4024a0 <memcpy@plt>
  41262e:	mov    rax,QWORD PTR [rsp]
  412632:	add    QWORD PTR [rbx],rax
  412635:	sub    QWORD PTR [rbp+0x10],0x10
  41263a:	mov    rax,QWORD PTR [rsp+0x8]
  41263f:	xor    rax,QWORD PTR fs:0x28
  412648:	jne    41268f <__sprintf_chk@plt+0x100af>
  41264a:	add    rsp,0x18
  41264e:	pop    rbx
  41264f:	pop    rbp
  412650:	ret    
  412651:	nop    DWORD PTR [rax+0x0]
  412658:	mov    rdi,rbx
  41265b:	call   40d6e0 <__sprintf_chk@plt+0xb100>
  412660:	test   eax,eax
  412662:	jne    412680 <__sprintf_chk@plt+0x100a0>
  412664:	mov    eax,DWORD PTR [rbx+0x8]
  412667:	inc    eax
  412669:	mov    DWORD PTR [rbx+0x8],eax
  41266c:	cmp    eax,0x1
  41266f:	jle    41263a <__sprintf_chk@plt+0x1005a>
  412671:	lea    rsi,[rbx+0x10]
  412675:	lea    rdi,[rbx+0x8]
  412679:	call   40bf50 <__sprintf_chk@plt+0x9970>
  41267e:	jmp    41263a <__sprintf_chk@plt+0x1005a>
  412680:	mov    esi,0xfffffffe
  412685:	mov    rdi,rbp
  412688:	call   403d90 <__sprintf_chk@plt+0x17b0>
  41268d:	jmp    412664 <__sprintf_chk@plt+0x10084>
  41268f:	call   4023e0 <__stack_chk_fail@plt>
  412694:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41269f:	nop
  4126a0:	push   rbx
  4126a1:	mov    rbx,rsi
  4126a4:	mov    esi,0x1
  4126a9:	mov    r10,rdi
  4126ac:	mov    r11d,edx
  4126af:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  4126b4:	mov    rax,QWORD PTR [r10+0x10]
  4126b8:	lea    rdx,[rip+0x5961]        # 418020 <__sprintf_chk@plt+0x15a40>
  4126bf:	cmp    rax,rdx
  4126c2:	je     41270b <__sprintf_chk@plt+0x1012b>
  4126c4:	movsxd rax,DWORD PTR [rax-0x8]
  4126c8:	lea    edx,[rax-0x3]
  4126cb:	cmp    edx,0x1
  4126ce:	ja     4126e0 <__sprintf_chk@plt+0x10100>
  4126d0:	mov    rdi,rbx
  4126d3:	pop    rbx
  4126d4:	jmp    4125e0 <__sprintf_chk@plt+0x10000>
  4126d9:	nop    DWORD PTR [rax+0x0]
  4126e0:	lea    rdx,[rip+0x4c15]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  4126e7:	cmp    eax,0xffffffff
  4126ea:	je     4126f7 <__sprintf_chk@plt+0x10117>
  4126ec:	lea    rdx,[rip+0xc6ad]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  4126f3:	mov    rdx,QWORD PTR [rdx+rax*8]
  4126f7:	mov    ecx,r11d
  4126fa:	lea    rsi,[rip+0x5c0f]        # 418310 <__sprintf_chk@plt+0x15d30>
  412701:	mov    rdi,r10
  412704:	xor    eax,eax
  412706:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  41270b:	lea    rdx,[rip+0x4bea]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  412712:	jmp    4126f7 <__sprintf_chk@plt+0x10117>
  412714:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41271f:	nop
  412720:	push   rbp
  412721:	mov    ebp,esi
  412723:	push   rbx
  412724:	mov    rbx,rdi
  412727:	sub    rsp,0x8
  41272b:	call   412510 <__sprintf_chk@plt+0xff30>
  412730:	test   rax,rax
  412733:	je     412740 <__sprintf_chk@plt+0x10160>
  412735:	add    rsp,0x8
  412739:	pop    rbx
  41273a:	pop    rbp
  41273b:	ret    
  41273c:	nop    DWORD PTR [rax+0x0]
  412740:	lea    rdx,[rip+0x4d75]        # 4174bc <__sprintf_chk@plt+0x14edc>
  412747:	mov    esi,ebp
  412749:	mov    rdi,rbx
  41274c:	call   40c3f0 <__sprintf_chk@plt+0x9e10>
  412751:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41275c:	nop    DWORD PTR [rax+0x0]
  412760:	endbr64 
  412764:	push   rbx
  412765:	xor    edx,edx
  412767:	mov    rbx,rdi
  41276a:	mov    esi,0x1
  41276f:	call   412720 <__sprintf_chk@plt+0x10140>
  412774:	xor    edx,edx
  412776:	mov    esi,0x2
  41277b:	mov    rdi,rbx
  41277e:	call   412720 <__sprintf_chk@plt+0x10140>
  412783:	mov    rcx,QWORD PTR [rbx+0x18]
  412787:	mov    rax,QWORD PTR [rbx+0x10]
  41278b:	lea    rdx,[rcx+0x20]
  41278f:	cmp    rax,rdx
  412792:	jae    4127a8 <__sprintf_chk@plt+0x101c8>
  412794:	nop    DWORD PTR [rax+0x0]
  412798:	add    rax,0x10
  41279c:	mov    DWORD PTR [rax-0x8],0x0
  4127a3:	cmp    rax,rdx
  4127a6:	jb     412798 <__sprintf_chk@plt+0x101b8>
  4127a8:	mov    QWORD PTR [rcx+0x20],0x0
  4127b0:	mov    DWORD PTR [rcx+0x28],0x3
  4127b7:	add    rcx,0x30
  4127bb:	mov    QWORD PTR [rbx+0x10],rcx
  4127bf:	mov    rdi,rbx
  4127c2:	mov    edx,0x3
  4127c7:	lea    rsi,[rip+0x3ec2]        # 416690 <__sprintf_chk@plt+0x140b0>
  4127ce:	call   412390 <__sprintf_chk@plt+0xfdb0>
  4127d3:	mov    eax,0x1
  4127d8:	pop    rbx
  4127d9:	ret    
  4127da:	nop    WORD PTR [rax+rax*1+0x0]
  4127e0:	push   rbp
  4127e1:	mov    r8,rdi
  4127e4:	mov    rbp,rdx
  4127e7:	push   rbx
  4127e8:	mov    r9d,esi
  4127eb:	mov    rbx,rcx
  4127ee:	sub    rsp,0x8
  4127f2:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  4127f7:	lea    rdx,[rip+0x5812]        # 418010 <__sprintf_chk@plt+0x15a30>
  4127fe:	cmp    rax,rdx
  412801:	je     41280a <__sprintf_chk@plt+0x1022a>
  412803:	mov    eax,DWORD PTR [rax+0x8]
  412806:	test   eax,eax
  412808:	jg     412830 <__sprintf_chk@plt+0x10250>
  41280a:	test   rbx,rbx
  41280d:	je     412821 <__sprintf_chk@plt+0x10241>
  41280f:	xor    eax,eax
  412811:	test   rbp,rbp
  412814:	je     41281e <__sprintf_chk@plt+0x1023e>
  412816:	mov    rdi,rbp
  412819:	call   4023d0 <strlen@plt>
  41281e:	mov    QWORD PTR [rbx],rax
  412821:	add    rsp,0x8
  412825:	pop    rbx
  412826:	mov    rax,rbp
  412829:	pop    rbp
  41282a:	ret    
  41282b:	nop    DWORD PTR [rax+rax*1+0x0]
  412830:	add    rsp,0x8
  412834:	mov    rdx,rbx
  412837:	pop    rbx
  412838:	mov    esi,r9d
  41283b:	mov    rdi,r8
  41283e:	pop    rbp
  41283f:	jmp    412720 <__sprintf_chk@plt+0x10140>
  412844:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41284f:	nop
  412850:	endbr64 
  412854:	push   r15
  412856:	push   r14
  412858:	push   r13
  41285a:	push   r12
  41285c:	push   rbp
  41285d:	push   rbx
  41285e:	sub    rsp,0x1000
  412865:	or     QWORD PTR [rsp],0x0
  41286a:	sub    rsp,0x1000
  412871:	or     QWORD PTR [rsp],0x0
  412876:	sub    rsp,0x38
  41287a:	lea    rdx,[rip+0x4edd]        # 41775e <__sprintf_chk@plt+0x1517e>
  412881:	mov    esi,0x2
  412886:	mov    r12,rdi
  412889:	lea    rcx,[rsp+0x8]
  41288e:	mov    rax,QWORD PTR fs:0x28
  412897:	mov    QWORD PTR [rsp+0x2028],rax
  41289f:	xor    eax,eax
  4128a1:	call   4127e0 <__sprintf_chk@plt+0x10200>
  4128a6:	mov    edx,0x5
  4128ab:	mov    esi,0x1
  4128b0:	mov    rdi,r12
  4128b3:	mov    r14,rax
  4128b6:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  4128bb:	mov    edx,0x1
  4128c0:	mov    esi,0x3
  4128c5:	mov    rdi,r12
  4128c8:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  4128cd:	mov    r15,rax
  4128d0:	mov    ebx,eax
  4128d2:	mov    rax,QWORD PTR [r12+0x18]
  4128d7:	lea    rdx,[rax+0x30]
  4128db:	cmp    rdx,QWORD PTR [r12+0x10]
  4128e0:	jae    4128f9 <__sprintf_chk@plt+0x10319>
  4128e2:	lea    rcx,[rip+0x5727]        # 418010 <__sprintf_chk@plt+0x15a30>
  4128e9:	cmp    rdx,rcx
  4128ec:	je     4128f9 <__sprintf_chk@plt+0x10319>
  4128ee:	mov    eax,DWORD PTR [rax+0x38]
  4128f1:	test   eax,eax
  4128f3:	jg     412990 <__sprintf_chk@plt+0x103b0>
  4128f9:	mov    esi,0x1
  4128fe:	mov    rdi,r12
  412901:	call   407900 <__sprintf_chk@plt+0x5320>
  412906:	mov    r13d,eax
  412909:	lea    rbp,[rsp+0x10]
  41290e:	lea    rax,[rbp+0x18]
  412912:	mov    QWORD PTR [rsp+0x20],r12
  412917:	mov    QWORD PTR [rsp+0x10],rax
  41291c:	mov    DWORD PTR [rsp+0x18],0x0
  412924:	cmp    r13d,r15d
  412927:	jle    412957 <__sprintf_chk@plt+0x10377>
  412929:	nop    DWORD PTR [rax+0x0]
  412930:	mov    edx,ebx
  412932:	mov    rsi,rbp
  412935:	mov    rdi,r12
  412938:	call   4126a0 <__sprintf_chk@plt+0x100c0>
  41293d:	mov    rdx,QWORD PTR [rsp+0x8]
  412942:	mov    rsi,r14
  412945:	mov    rdi,rbp
  412948:	inc    ebx
  41294a:	call   40d770 <__sprintf_chk@plt+0xb190>
  41294f:	cmp    r13d,ebx
  412952:	jne    412930 <__sprintf_chk@plt+0x10350>
  412954:	mov    ebx,r13d
  412957:	cmp    r13d,ebx
  41295a:	je     4129a8 <__sprintf_chk@plt+0x103c8>
  41295c:	mov    rdi,rbp
  41295f:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  412964:	mov    rcx,QWORD PTR [rsp+0x2028]
  41296c:	xor    rcx,QWORD PTR fs:0x28
  412975:	mov    eax,0x1
  41297a:	jne    4129b8 <__sprintf_chk@plt+0x103d8>
  41297c:	add    rsp,0x2038
  412983:	pop    rbx
  412984:	pop    rbp
  412985:	pop    r12
  412987:	pop    r13
  412989:	pop    r14
  41298b:	pop    r15
  41298d:	ret    
  41298e:	xchg   ax,ax
  412990:	mov    esi,0x4
  412995:	mov    rdi,r12
  412998:	call   40c940 <__sprintf_chk@plt+0xa360>
  41299d:	mov    r13d,eax
  4129a0:	jmp    412909 <__sprintf_chk@plt+0x10329>
  4129a5:	nop    DWORD PTR [rax]
  4129a8:	mov    edx,r13d
  4129ab:	mov    rsi,rbp
  4129ae:	mov    rdi,r12
  4129b1:	call   4126a0 <__sprintf_chk@plt+0x100c0>
  4129b6:	jmp    41295c <__sprintf_chk@plt+0x1037c>
  4129b8:	call   4023e0 <__stack_chk_fail@plt>
  4129bd:	nop    DWORD PTR [rax]
  4129c0:	endbr64 
  4129c4:	push   rbx
  4129c5:	mov    esi,0x1
  4129ca:	mov    rbx,rdi
  4129cd:	call   40d010 <__sprintf_chk@plt+0xaa30>
  4129d2:	mov    esi,0x1
  4129d7:	mov    rdi,rbx
  4129da:	call   403e10 <__sprintf_chk@plt+0x1830>
  4129df:	test   eax,eax
  4129e1:	je     4129f8 <__sprintf_chk@plt+0x10418>
  4129e3:	mov    rax,QWORD PTR [rbx+0x10]
  4129e7:	sub    rax,QWORD PTR [rbx+0x18]
  4129eb:	sar    rax,0x4
  4129ef:	pop    rbx
  4129f0:	ret    
  4129f1:	nop    DWORD PTR [rax+0x0]
  4129f8:	lea    rdx,[rip+0x4bc8]        # 4175c7 <__sprintf_chk@plt+0x14fe7>
  4129ff:	mov    esi,0x2
  412a04:	mov    rdi,rbx
  412a07:	xor    ecx,ecx
  412a09:	call   4127e0 <__sprintf_chk@plt+0x10200>
  412a0e:	mov    rdx,rax
  412a11:	lea    rsi,[rip+0x4696]        # 4170ae <__sprintf_chk@plt+0x14ace>
  412a18:	mov    rdi,rbx
  412a1b:	xor    eax,eax
  412a1d:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  412a22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412a2d:	nop    DWORD PTR [rax]
  412a30:	endbr64 
  412a34:	push   r15
  412a36:	mov    esi,0x1
  412a3b:	push   r14
  412a3d:	push   r13
  412a3f:	push   r12
  412a41:	push   rbp
  412a42:	push   rbx
  412a43:	mov    rbx,rdi
  412a46:	sub    rsp,0x18
  412a4a:	mov    rdx,rsp
  412a4d:	mov    rax,QWORD PTR fs:0x28
  412a56:	mov    QWORD PTR [rsp+0x8],rax
  412a5b:	xor    eax,eax
  412a5d:	call   412720 <__sprintf_chk@plt+0x10140>
  412a62:	mov    edx,0x1
  412a67:	mov    esi,0x2
  412a6c:	mov    rdi,rbx
  412a6f:	mov    r13,QWORD PTR [rsp]
  412a73:	mov    r12,rax
  412a76:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  412a7b:	mov    rbp,rax
  412a7e:	test   rbp,rbp
  412a81:	lea    rax,[r13+rax*1+0x1]
  412a86:	cmovs  rbp,rax
  412a8a:	xor    r14d,r14d
  412a8d:	mov    r13,r14
  412a90:	test   rbp,rbp
  412a93:	cmovns r13,rbp
  412a97:	mov    r15,QWORD PTR [rsp]
  412a9b:	mov    rdx,r13
  412a9e:	mov    esi,0x3
  412aa3:	mov    rdi,rbx
  412aa6:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  412aab:	lea    rdx,[r15+rax*1+0x1]
  412ab0:	test   rax,rax
  412ab3:	cmovs  rax,rdx
  412ab7:	mov    rdx,r14
  412aba:	test   rax,rax
  412abd:	cmovns rdx,rax
  412ac1:	test   rbp,rbp
  412ac4:	mov    eax,0x1
  412ac9:	cmovle r13,rax
  412acd:	mov    rax,QWORD PTR [rsp]
  412ad1:	cmp    rdx,rax
  412ad4:	cmova  rdx,rax
  412ad8:	cmp    r13,rdx
  412adb:	jg     412b88 <__sprintf_chk@plt+0x105a8>
  412ae1:	mov    eax,edx
  412ae3:	sub    eax,r13d
  412ae6:	lea    ebp,[rax+0x1]
  412ae9:	movsxd rax,ebp
  412aec:	add    rax,r13
  412aef:	cmp    rax,rdx
  412af2:	jle    412b70 <__sprintf_chk@plt+0x10590>
  412af4:	lea    rdx,[rip+0x4ade]        # 4175d9 <__sprintf_chk@plt+0x14ff9>
  412afb:	mov    esi,ebp
  412afd:	mov    rdi,rbx
  412b00:	call   40c250 <__sprintf_chk@plt+0x9c70>
  412b05:	test   ebp,ebp
  412b07:	jle    412b48 <__sprintf_chk@plt+0x10568>
  412b09:	lea    edi,[rbp-0x1]
  412b0c:	mov    rdx,QWORD PTR [rbx+0x10]
  412b10:	inc    rdi
  412b13:	shl    rdi,0x4
  412b17:	lea    rsi,[r12+r13*1-0x1]
  412b1c:	add    rdi,rdx
  412b1f:	nop
  412b20:	movzx  ecx,BYTE PTR [rsi]
  412b23:	vxorpd xmm0,xmm0,xmm0
  412b27:	vcvtsi2sd xmm0,xmm0,rcx
  412b2c:	mov    DWORD PTR [rdx+0x8],0x3
  412b33:	add    rdx,0x10
  412b37:	inc    rsi
  412b3a:	vmovsd QWORD PTR [rdx-0x10],xmm0
  412b3f:	mov    QWORD PTR [rbx+0x10],rdx
  412b43:	cmp    rdx,rdi
  412b46:	jne    412b20 <__sprintf_chk@plt+0x10540>
  412b48:	mov    rcx,QWORD PTR [rsp+0x8]
  412b4d:	xor    rcx,QWORD PTR fs:0x28
  412b56:	mov    eax,ebp
  412b58:	jne    412b8c <__sprintf_chk@plt+0x105ac>
  412b5a:	add    rsp,0x18
  412b5e:	pop    rbx
  412b5f:	pop    rbp
  412b60:	pop    r12
  412b62:	pop    r13
  412b64:	pop    r14
  412b66:	pop    r15
  412b68:	ret    
  412b69:	nop    DWORD PTR [rax+0x0]
  412b70:	lea    rsi,[rip+0x4a62]        # 4175d9 <__sprintf_chk@plt+0x14ff9>
  412b77:	mov    rdi,rbx
  412b7a:	xor    eax,eax
  412b7c:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  412b81:	nop    DWORD PTR [rax+0x0]
  412b88:	xor    ebp,ebp
  412b8a:	jmp    412b48 <__sprintf_chk@plt+0x10568>
  412b8c:	call   4023e0 <__stack_chk_fail@plt>
  412b91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412b9c:	nop    DWORD PTR [rax+0x0]
  412ba0:	endbr64 
  412ba4:	push   r13
  412ba6:	mov    esi,0x1
  412bab:	push   r12
  412bad:	push   rbp
  412bae:	push   rbx
  412baf:	mov    rbx,rdi
  412bb2:	sub    rsp,0x18
  412bb6:	mov    rdx,rsp
  412bb9:	mov    rax,QWORD PTR fs:0x28
  412bc2:	mov    QWORD PTR [rsp+0x8],rax
  412bc7:	xor    eax,eax
  412bc9:	call   412720 <__sprintf_chk@plt+0x10140>
  412bce:	mov    esi,0x2
  412bd3:	mov    rdi,rbx
  412bd6:	mov    r13,QWORD PTR [rsp]
  412bda:	mov    rbp,rax
  412bdd:	call   40c940 <__sprintf_chk@plt+0xa360>
  412be2:	mov    r12,rax
  412be5:	test   r12,r12
  412be8:	lea    rax,[r13+rax*1+0x1]
  412bed:	mov    rdx,0xffffffffffffffff
  412bf4:	mov    r13,QWORD PTR [rsp]
  412bf8:	mov    esi,0x3
  412bfd:	mov    rdi,rbx
  412c00:	cmovs  r12,rax
  412c04:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  412c09:	lea    rdx,[r13+rax*1+0x1]
  412c0e:	test   rax,rax
  412c11:	cmovs  rax,rdx
  412c15:	mov    edx,0x0
  412c1a:	test   rax,rax
  412c1d:	cmovs  rax,rdx
  412c21:	test   r12,r12
  412c24:	mov    edx,0x1
  412c29:	cmovle r12,rdx
  412c2d:	cmp    QWORD PTR [rsp],rax
  412c31:	cmovle rax,QWORD PTR [rsp]
  412c36:	cmp    r12,rax
  412c39:	jg     412c70 <__sprintf_chk@plt+0x10690>
  412c3b:	sub    rax,r12
  412c3e:	lea    rdx,[rax+0x1]
  412c42:	lea    rsi,[rbp+r12*1-0x1]
  412c47:	mov    rdi,rbx
  412c4a:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  412c4f:	mov    rcx,QWORD PTR [rsp+0x8]
  412c54:	xor    rcx,QWORD PTR fs:0x28
  412c5d:	mov    eax,0x1
  412c62:	jne    412c83 <__sprintf_chk@plt+0x106a3>
  412c64:	add    rsp,0x18
  412c68:	pop    rbx
  412c69:	pop    rbp
  412c6a:	pop    r12
  412c6c:	pop    r13
  412c6e:	ret    
  412c6f:	nop
  412c70:	xor    edx,edx
  412c72:	lea    rsi,[rip+0x4ae5]        # 41775e <__sprintf_chk@plt+0x1517e>
  412c79:	mov    rdi,rbx
  412c7c:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  412c81:	jmp    412c4f <__sprintf_chk@plt+0x1066f>
  412c83:	call   4023e0 <__stack_chk_fail@plt>
  412c88:	nop    DWORD PTR [rax+rax*1+0x0]
  412c90:	endbr64 
  412c94:	push   r12
  412c96:	push   rbp
  412c97:	push   rbx
  412c98:	sub    rsp,0x1000
  412c9f:	or     QWORD PTR [rsp],0x0
  412ca4:	sub    rsp,0x1000
  412cab:	or     QWORD PTR [rsp],0x0
  412cb0:	sub    rsp,0x30
  412cb4:	mov    esi,0x1
  412cb9:	mov    rbx,rdi
  412cbc:	lea    rdx,[rsp+0x8]
  412cc1:	mov    rax,QWORD PTR fs:0x28
  412cca:	mov    QWORD PTR [rsp+0x2028],rax
  412cd2:	xor    eax,eax
  412cd4:	lea    rbp,[rsp+0x10]
  412cd9:	call   412720 <__sprintf_chk@plt+0x10140>
  412cde:	mov    esi,0x2
  412ce3:	mov    rdi,rbx
  412ce6:	mov    r12,rax
  412ce9:	call   40c940 <__sprintf_chk@plt+0xa360>
  412cee:	lea    rdx,[rbp+0x18]
  412cf2:	mov    QWORD PTR [rsp+0x20],rbx
  412cf7:	mov    QWORD PTR [rsp+0x10],rdx
  412cfc:	mov    DWORD PTR [rsp+0x18],0x0
  412d04:	test   eax,eax
  412d06:	jle    412d27 <__sprintf_chk@plt+0x10747>
  412d08:	lea    ebx,[rax-0x1]
  412d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d10:	mov    rdx,QWORD PTR [rsp+0x8]
  412d15:	mov    rsi,r12
  412d18:	mov    rdi,rbp
  412d1b:	dec    ebx
  412d1d:	call   40d770 <__sprintf_chk@plt+0xb190>
  412d22:	cmp    ebx,0xffffffff
  412d25:	jne    412d10 <__sprintf_chk@plt+0x10730>
  412d27:	mov    rdi,rbp
  412d2a:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  412d2f:	mov    rcx,QWORD PTR [rsp+0x2028]
  412d37:	xor    rcx,QWORD PTR fs:0x28
  412d40:	mov    eax,0x1
  412d45:	jne    412d53 <__sprintf_chk@plt+0x10773>
  412d47:	add    rsp,0x2030
  412d4e:	pop    rbx
  412d4f:	pop    rbp
  412d50:	pop    r12
  412d52:	ret    
  412d53:	call   4023e0 <__stack_chk_fail@plt>
  412d58:	nop    DWORD PTR [rax+rax*1+0x0]
  412d60:	endbr64 
  412d64:	push   r15
  412d66:	push   r14
  412d68:	push   r13
  412d6a:	push   r12
  412d6c:	push   rbp
  412d6d:	push   rbx
  412d6e:	sub    rsp,0x1000
  412d75:	or     QWORD PTR [rsp],0x0
  412d7a:	sub    rsp,0x1000
  412d81:	or     QWORD PTR [rsp],0x0
  412d86:	sub    rsp,0x298
  412d8d:	mov    esi,0x1
  412d92:	mov    rax,QWORD PTR fs:0x28
  412d9b:	mov    QWORD PTR [rsp+0x2288],rax
  412da3:	xor    eax,eax
  412da5:	mov    rax,QWORD PTR [rdi+0x10]
  412da9:	lea    rdx,[rsp+0x30]
  412dae:	sub    rax,QWORD PTR [rdi+0x18]
  412db2:	sar    rax,0x4
  412db6:	mov    r14,rdi
  412db9:	mov    DWORD PTR [rsp+0x14],eax
  412dbd:	call   412720 <__sprintf_chk@plt+0x10140>
  412dc2:	mov    rcx,QWORD PTR [rsp+0x30]
  412dc7:	lea    r12,[rsp+0x40]
  412dcc:	add    rcx,rax
  412dcf:	mov    r9,rax
  412dd2:	lea    rax,[r12+0x18]
  412dd7:	mov    QWORD PTR [rsp+0x8],rcx
  412ddc:	mov    QWORD PTR [rsp+0x50],r14
  412de1:	mov    QWORD PTR [rsp+0x40],rax
  412de6:	mov    DWORD PTR [rsp+0x48],0x0
  412dee:	mov    DWORD PTR [rsp+0x10],0x1
  412df6:	cmp    r9,rcx
  412df9:	jae    412e5d <__sprintf_chk@plt+0x1087d>
  412dfb:	lea    rax,[rsp+0x2060]
  412e03:	mov    QWORD PTR [rsp+0x28],rax
  412e08:	lea    rax,[rsp+0x2061]
  412e10:	mov    QWORD PTR [rsp+0x20],rax
  412e15:	mov    QWORD PTR [rsp+0x18],r14
  412e1a:	lea    r13,[rip+0x47ce]        # 4175ef <__sprintf_chk@plt+0x1500f>
  412e21:	mov    r14,r9
  412e24:	cmp    BYTE PTR [r14],0x25
  412e28:	lea    rbp,[r14+0x1]
  412e2c:	je     412e98 <__sprintf_chk@plt+0x108b8>
  412e2e:	mov    rax,QWORD PTR [rsp+0x40]
  412e33:	lea    rdx,[r12+0x2018]
  412e3b:	cmp    rax,rdx
  412e3e:	jae    412f60 <__sprintf_chk@plt+0x10980>
  412e44:	lea    rdx,[rax+0x1]
  412e48:	mov    QWORD PTR [rsp+0x40],rdx
  412e4d:	movzx  edx,BYTE PTR [r14]
  412e51:	mov    r14,rbp
  412e54:	mov    BYTE PTR [rax],dl
  412e56:	cmp    r14,QWORD PTR [rsp+0x8]
  412e5b:	jb     412e24 <__sprintf_chk@plt+0x10844>
  412e5d:	mov    rdi,r12
  412e60:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  412e65:	mov    rcx,QWORD PTR [rsp+0x2288]
  412e6d:	xor    rcx,QWORD PTR fs:0x28
  412e76:	mov    eax,0x1
  412e7b:	jne    4133f6 <__sprintf_chk@plt+0x10e16>
  412e81:	add    rsp,0x2298
  412e88:	pop    rbx
  412e89:	pop    rbp
  412e8a:	pop    r12
  412e8c:	pop    r13
  412e8e:	pop    r14
  412e90:	pop    r15
  412e92:	ret    
  412e93:	nop    DWORD PTR [rax+rax*1+0x0]
  412e98:	movzx  ebx,BYTE PTR [r14+0x1]
  412e9d:	cmp    bl,0x25
  412ea0:	je     412f78 <__sprintf_chk@plt+0x10998>
  412ea6:	inc    DWORD PTR [rsp+0x10]
  412eaa:	mov    eax,DWORD PTR [rsp+0x10]
  412eae:	cmp    eax,DWORD PTR [rsp+0x14]
  412eb2:	jg     412fd0 <__sprintf_chk@plt+0x109f0>
  412eb8:	mov    r15,rbp
  412ebb:	test   bl,bl
  412ebd:	jne    412ed3 <__sprintf_chk@plt+0x108f3>
  412ebf:	jmp    41335f <__sprintf_chk@plt+0x10d7f>
  412ec4:	nop    DWORD PTR [rax+0x0]
  412ec8:	inc    r15
  412ecb:	movzx  ebx,BYTE PTR [r15]
  412ecf:	test   bl,bl
  412ed1:	je     412ee3 <__sprintf_chk@plt+0x10903>
  412ed3:	movsx  esi,bl
  412ed6:	mov    rdi,r13
  412ed9:	call   4023f0 <strchr@plt>
  412ede:	test   rax,rax
  412ee1:	jne    412ec8 <__sprintf_chk@plt+0x108e8>
  412ee3:	mov    rax,r15
  412ee6:	sub    rax,rbp
  412ee9:	cmp    rax,0x5
  412eed:	ja     412fb0 <__sprintf_chk@plt+0x109d0>
  412ef3:	movzx  ebx,bl
  412ef6:	add    rbx,rbx
  412ef9:	call   4025d0 <__ctype_b_loc@plt>
  412efe:	mov    rax,QWORD PTR [rax]
  412f01:	lea    r14,[r15+0x1]
  412f05:	movzx  edx,WORD PTR [rax+rbx*1]
  412f09:	and    dh,0x8
  412f0c:	je     412f18 <__sprintf_chk@plt+0x10938>
  412f0e:	lea    rdx,[r15+0x2]
  412f12:	mov    r15,r14
  412f15:	mov    r14,rdx
  412f18:	movzx  ecx,BYTE PTR [r15]
  412f1c:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  412f21:	je     412ff0 <__sprintf_chk@plt+0x10a10>
  412f27:	movzx  edx,BYTE PTR [r15+0x1]
  412f2c:	cmp    dl,0x2e
  412f2f:	je     413068 <__sprintf_chk@plt+0x10a88>
  412f35:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  412f3a:	je     413060 <__sprintf_chk@plt+0x10a80>
  412f40:	mov    r14,QWORD PTR [rsp+0x18]
  412f45:	lea    rsi,[rip+0x541c]        # 418368 <__sprintf_chk@plt+0x15d88>
  412f4c:	mov    rdi,r14
  412f4f:	xor    eax,eax
  412f51:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  412f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f60:	mov    rdi,r12
  412f63:	call   40d730 <__sprintf_chk@plt+0xb150>
  412f68:	mov    rax,QWORD PTR [rsp+0x40]
  412f6d:	jmp    412e44 <__sprintf_chk@plt+0x10864>
  412f72:	nop    WORD PTR [rax+rax*1+0x0]
  412f78:	mov    rax,QWORD PTR [rsp+0x40]
  412f7d:	lea    rdx,[r12+0x2018]
  412f85:	cmp    rax,rdx
  412f88:	jae    413048 <__sprintf_chk@plt+0x10a68>
  412f8e:	lea    rdx,[rax+0x1]
  412f92:	mov    QWORD PTR [rsp+0x40],rdx
  412f97:	add    r14,0x2
  412f9b:	movzx  edx,BYTE PTR [r14-0x1]
  412fa0:	mov    BYTE PTR [rax],dl
  412fa2:	jmp    412e56 <__sprintf_chk@plt+0x10876>
  412fa7:	nop    WORD PTR [rax+rax*1+0x0]
  412fb0:	mov    r14,QWORD PTR [rsp+0x18]
  412fb5:	lea    rsi,[rip+0x538c]        # 418348 <__sprintf_chk@plt+0x15d68>
  412fbc:	mov    rdi,r14
  412fbf:	xor    eax,eax
  412fc1:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  412fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fd0:	mov    r14,QWORD PTR [rsp+0x18]
  412fd5:	mov    esi,DWORD PTR [rsp+0x10]
  412fd9:	lea    rdx,[rip+0x431c]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  412fe0:	mov    rdi,r14
  412fe3:	call   40c330 <__sprintf_chk@plt+0x9d50>
  412fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  412ff0:	cmp    cl,0x2e
  412ff3:	je     41306e <__sprintf_chk@plt+0x10a8e>
  412ff5:	mov    rbx,r15
  412ff8:	sub    rbx,rbp
  412ffb:	mov    rdi,QWORD PTR [rsp+0x20]
  413000:	lea    rdx,[rbx+0x1]
  413004:	mov    ecx,0x11
  413009:	mov    rsi,rbp
  41300c:	mov    BYTE PTR [rsp+0x2060],0x25
  413014:	call   402500 <__strncpy_chk@plt>
  413019:	mov    BYTE PTR [rsp+rbx*1+0x2062],0x0
  413021:	movsx  edx,BYTE PTR [r15]
  413025:	lea    eax,[rdx-0x45]
  413028:	cmp    al,0x33
  41302a:	ja     4132cb <__sprintf_chk@plt+0x10ceb>
  413030:	lea    rdi,[rip+0x4cc9]        # 417d00 <__sprintf_chk@plt+0x15720>
  413037:	movzx  eax,al
  41303a:	movsxd rax,DWORD PTR [rdi+rax*4]
  41303e:	add    rax,rdi
  413041:	notrack jmp rax
  413044:	nop    DWORD PTR [rax+0x0]
  413048:	mov    rdi,r12
  41304b:	call   40d730 <__sprintf_chk@plt+0xb150>
  413050:	mov    rax,QWORD PTR [rsp+0x40]
  413055:	jmp    412f8e <__sprintf_chk@plt+0x109ae>
  41305a:	nop    WORD PTR [rax+rax*1+0x0]
  413060:	mov    r15,r14
  413063:	inc    r14
  413066:	jmp    412ff5 <__sprintf_chk@plt+0x10a15>
  413068:	mov    r15,r14
  41306b:	inc    r14
  41306e:	movzx  edx,BYTE PTR [r15+0x1]
  413073:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  413078:	je     413060 <__sprintf_chk@plt+0x10a80>
  41307a:	movzx  edx,BYTE PTR [r15+0x2]
  41307f:	lea    rcx,[r15+0x2]
  413083:	lea    r14,[r15+0x3]
  413087:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41308c:	je     4133ee <__sprintf_chk@plt+0x10e0e>
  413092:	movzx  edx,BYTE PTR [r15+0x3]
  413097:	jmp    412f35 <__sprintf_chk@plt+0x10955>
  41309c:	mov    esi,DWORD PTR [rsp+0x10]
  4130a0:	mov    rdi,QWORD PTR [rsp+0x18]
  4130a5:	lea    rdx,[rsp+0x38]
  4130aa:	call   412720 <__sprintf_chk@plt+0x10140>
  4130af:	mov    rdi,QWORD PTR [rsp+0x28]
  4130b4:	mov    esi,0x2e
  4130b9:	mov    rbp,rax
  4130bc:	call   4023f0 <strchr@plt>
  4130c1:	test   rax,rax
  4130c4:	je     413388 <__sprintf_chk@plt+0x10da8>
  4130ca:	lea    rbx,[rsp+0x2080]
  4130d2:	mov    r8,rbp
  4130d5:	mov    rcx,QWORD PTR [rsp+0x28]
  4130da:	mov    edx,0x200
  4130df:	mov    esi,0x1
  4130e4:	mov    rdi,rbx
  4130e7:	xor    eax,eax
  4130e9:	call   4025e0 <__sprintf_chk@plt>
  4130ee:	mov    rdx,rbx
  4130f1:	mov    ecx,DWORD PTR [rdx]
  4130f3:	add    rdx,0x4
  4130f7:	lea    eax,[rcx-0x1010101]
  4130fd:	andn   eax,ecx,eax
  413102:	and    eax,0x80808080
  413107:	je     4130f1 <__sprintf_chk@plt+0x10b11>
  413109:	mov    ecx,eax
  41310b:	shr    ecx,0x10
  41310e:	test   eax,0x8080
  413113:	cmove  eax,ecx
  413116:	lea    rcx,[rdx+0x2]
  41311a:	cmove  rdx,rcx
  41311e:	mov    ecx,eax
  413120:	add    cl,al
  413122:	sbb    rdx,0x3
  413126:	sub    rdx,rbx
  413129:	mov    rsi,rbx
  41312c:	mov    rdi,r12
  41312f:	call   40d770 <__sprintf_chk@plt+0xb190>
  413134:	jmp    412e56 <__sprintf_chk@plt+0x10876>
  413139:	mov    esi,DWORD PTR [rsp+0x10]
  41313d:	mov    rdi,QWORD PTR [rsp+0x18]
  413142:	lea    rbx,[rsp+0x2080]
  41314a:	call   40c8f0 <__sprintf_chk@plt+0xa310>
  41314f:	mov    rcx,QWORD PTR [rsp+0x28]
  413154:	mov    edx,0x200
  413159:	mov    esi,0x1
  41315e:	mov    rdi,rbx
  413161:	mov    eax,0x1
  413166:	call   4025e0 <__sprintf_chk@plt>
  41316b:	jmp    4130ee <__sprintf_chk@plt+0x10b0e>
  41316d:	mov    rdi,QWORD PTR [rsp+0x28]
  413172:	call   403100 <__sprintf_chk@plt+0xb20>
  413177:	mov    esi,DWORD PTR [rsp+0x10]
  41317b:	mov    rdi,QWORD PTR [rsp+0x18]
  413180:	call   40c8f0 <__sprintf_chk@plt+0xa310>
  413185:	vmovsd xmm1,QWORD PTR [rip+0x52e3]        # 418470 <__sprintf_chk@plt+0x15e90>
  41318d:	vcomisd xmm0,xmm1
  413191:	jae    413375 <__sprintf_chk@plt+0x10d95>
  413197:	vcvttsd2si r8,xmm0
  41319c:	lea    rbx,[rsp+0x2080]
  4131a4:	jmp    4130d5 <__sprintf_chk@plt+0x10af5>
  4131a9:	mov    esi,DWORD PTR [rsp+0x10]
  4131ad:	mov    rdi,QWORD PTR [rsp+0x18]
  4131b2:	lea    rbx,[rsp+0x2080]
  4131ba:	call   40c8f0 <__sprintf_chk@plt+0xa310>
  4131bf:	vcvttsd2si r8d,xmm0
  4131c3:	mov    rcx,QWORD PTR [rsp+0x28]
  4131c8:	mov    edx,0x200
  4131cd:	mov    esi,0x1
  4131d2:	mov    rdi,rbx
  4131d5:	xor    eax,eax
  4131d7:	call   4025e0 <__sprintf_chk@plt>
  4131dc:	jmp    4130ee <__sprintf_chk@plt+0x10b0e>
  4131e1:	mov    r15,QWORD PTR [rsp+0x28]
  4131e6:	lea    rbx,[rsp+0x2080]
  4131ee:	mov    rdi,r15
  4131f1:	call   403100 <__sprintf_chk@plt+0xb20>
  4131f6:	mov    esi,DWORD PTR [rsp+0x10]
  4131fa:	mov    rdi,QWORD PTR [rsp+0x18]
  4131ff:	call   40c8f0 <__sprintf_chk@plt+0xa310>
  413204:	vcvttsd2si r8,xmm0
  413209:	mov    rcx,r15
  41320c:	jmp    4130da <__sprintf_chk@plt+0x10afa>
  413211:	mov    esi,DWORD PTR [rsp+0x10]
  413215:	mov    rdi,QWORD PTR [rsp+0x18]
  41321a:	lea    rdx,[rsp+0x38]
  41321f:	call   412720 <__sprintf_chk@plt+0x10140>
  413224:	mov    rbp,rax
  413227:	mov    rax,QWORD PTR [rsp+0x40]
  41322c:	lea    rdx,[r12+0x2018]
  413234:	cmp    rax,rdx
  413237:	jae    4133ca <__sprintf_chk@plt+0x10dea>
  41323d:	lea    rdx,[rax+0x1]
  413241:	mov    QWORD PTR [rsp+0x40],rdx
  413246:	mov    BYTE PTR [rax],0x22
  413249:	lea    rbx,[r12+0x2018]
  413251:	mov    rax,QWORD PTR [rsp+0x38]
  413256:	lea    rdx,[rax-0x1]
  41325a:	mov    QWORD PTR [rsp+0x38],rdx
  41325f:	test   rax,rax
  413262:	jne    41329e <__sprintf_chk@plt+0x10cbe>
  413264:	jmp    413338 <__sprintf_chk@plt+0x10d58>
  413269:	nop    DWORD PTR [rax+0x0]
  413270:	mov    edx,0x4
  413275:	lea    rsi,[rip+0x437c]        # 4175f8 <__sprintf_chk@plt+0x15018>
  41327c:	mov    rdi,r12
  41327f:	call   40d770 <__sprintf_chk@plt+0xb190>
  413284:	mov    rax,QWORD PTR [rsp+0x38]
  413289:	inc    rbp
  41328c:	lea    rdx,[rax-0x1]
  413290:	mov    QWORD PTR [rsp+0x38],rdx
  413295:	test   rax,rax
  413298:	je     413338 <__sprintf_chk@plt+0x10d58>
  41329e:	movzx  eax,BYTE PTR [rbp+0x0]
  4132a2:	cmp    al,0xd
  4132a4:	je     41331f <__sprintf_chk@plt+0x10d3f>
  4132a6:	jg     4132e8 <__sprintf_chk@plt+0x10d08>
  4132a8:	test   al,al
  4132aa:	je     413270 <__sprintf_chk@plt+0x10c90>
  4132ac:	cmp    al,0xa
  4132ae:	je     4132f0 <__sprintf_chk@plt+0x10d10>
  4132b0:	mov    rax,QWORD PTR [rsp+0x40]
  4132b5:	cmp    rax,rbx
  4132b8:	jae    413310 <__sprintf_chk@plt+0x10d30>
  4132ba:	lea    rdx,[rax+0x1]
  4132be:	mov    QWORD PTR [rsp+0x40],rdx
  4132c3:	movzx  edx,BYTE PTR [rbp+0x0]
  4132c7:	mov    BYTE PTR [rax],dl
  4132c9:	jmp    413284 <__sprintf_chk@plt+0x10ca4>
  4132cb:	mov    r14,QWORD PTR [rsp+0x18]
  4132d0:	lea    rsi,[rip+0x50c1]        # 418398 <__sprintf_chk@plt+0x15db8>
  4132d7:	mov    rdi,r14
  4132da:	xor    eax,eax
  4132dc:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  4132e1:	nop    DWORD PTR [rax+0x0]
  4132e8:	cmp    al,0x22
  4132ea:	je     4132f0 <__sprintf_chk@plt+0x10d10>
  4132ec:	cmp    al,0x5c
  4132ee:	jne    4132b0 <__sprintf_chk@plt+0x10cd0>
  4132f0:	mov    rax,QWORD PTR [rsp+0x40]
  4132f5:	cmp    rax,rbx
  4132f8:	jae    413366 <__sprintf_chk@plt+0x10d86>
  4132fa:	lea    rdx,[rax+0x1]
  4132fe:	mov    QWORD PTR [rsp+0x40],rdx
  413303:	mov    BYTE PTR [rax],0x5c
  413306:	mov    rax,QWORD PTR [rsp+0x40]
  41330b:	cmp    rax,rbx
  41330e:	jb     4132ba <__sprintf_chk@plt+0x10cda>
  413310:	mov    rdi,r12
  413313:	call   40d730 <__sprintf_chk@plt+0xb150>
  413318:	mov    rax,QWORD PTR [rsp+0x40]
  41331d:	jmp    4132ba <__sprintf_chk@plt+0x10cda>
  41331f:	mov    edx,0x2
  413324:	lea    rsi,[rip+0x42ca]        # 4175f5 <__sprintf_chk@plt+0x15015>
  41332b:	mov    rdi,r12
  41332e:	call   40d770 <__sprintf_chk@plt+0xb190>
  413333:	jmp    413284 <__sprintf_chk@plt+0x10ca4>
  413338:	mov    rax,QWORD PTR [rsp+0x40]
  41333d:	lea    rdx,[r12+0x2018]
  413345:	cmp    rax,rdx
  413348:	jae    4133dc <__sprintf_chk@plt+0x10dfc>
  41334e:	lea    rdx,[rax+0x1]
  413352:	mov    QWORD PTR [rsp+0x40],rdx
  413357:	mov    BYTE PTR [rax],0x22
  41335a:	jmp    412e56 <__sprintf_chk@plt+0x10876>
  41335f:	xor    ebx,ebx
  413361:	jmp    412ef9 <__sprintf_chk@plt+0x10919>
  413366:	mov    rdi,r12
  413369:	call   40d730 <__sprintf_chk@plt+0xb150>
  41336e:	mov    rax,QWORD PTR [rsp+0x40]
  413373:	jmp    4132fa <__sprintf_chk@plt+0x10d1a>
  413375:	vsubsd xmm0,xmm0,xmm1
  413379:	vcvttsd2si r8,xmm0
  41337e:	btc    r8,0x3f
  413383:	jmp    41319c <__sprintf_chk@plt+0x10bbc>
  413388:	cmp    QWORD PTR [rsp+0x38],0x63
  41338e:	jbe    4130ca <__sprintf_chk@plt+0x10aea>
  413394:	mov    rbx,QWORD PTR [rsp+0x18]
  413399:	mov    esi,DWORD PTR [rsp+0x10]
  41339d:	mov    rdi,rbx
  4133a0:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  4133a5:	mov    rcx,QWORD PTR [rax]
  4133a8:	mov    rdx,QWORD PTR [rbx+0x10]
  4133ac:	mov    eax,DWORD PTR [rax+0x8]
  4133af:	mov    QWORD PTR [rdx],rcx
  4133b2:	mov    DWORD PTR [rdx+0x8],eax
  4133b5:	add    rdx,0x10
  4133b9:	mov    QWORD PTR [rbx+0x10],rdx
  4133bd:	mov    rdi,r12
  4133c0:	call   4125e0 <__sprintf_chk@plt+0x10000>
  4133c5:	jmp    412e56 <__sprintf_chk@plt+0x10876>
  4133ca:	mov    rdi,r12
  4133cd:	call   40d730 <__sprintf_chk@plt+0xb150>
  4133d2:	mov    rax,QWORD PTR [rsp+0x40]
  4133d7:	jmp    41323d <__sprintf_chk@plt+0x10c5d>
  4133dc:	mov    rdi,r12
  4133df:	call   40d730 <__sprintf_chk@plt+0xb150>
  4133e4:	mov    rax,QWORD PTR [rsp+0x40]
  4133e9:	jmp    41334e <__sprintf_chk@plt+0x10d6e>
  4133ee:	mov    r15,rcx
  4133f1:	jmp    412ff5 <__sprintf_chk@plt+0x10a15>
  4133f6:	call   4023e0 <__stack_chk_fail@plt>
  4133fb:	nop    DWORD PTR [rax+rax*1+0x0]
  413400:	endbr64 
  413404:	push   r13
  413406:	mov    edx,0xa
  41340b:	mov    esi,0x2
  413410:	push   r12
  413412:	push   rbp
  413413:	mov    rbp,rdi
  413416:	push   rbx
  413417:	sub    rsp,0x18
  41341b:	mov    rax,QWORD PTR fs:0x28
  413424:	mov    QWORD PTR [rsp+0x8],rax
  413429:	xor    eax,eax
  41342b:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  413430:	cmp    eax,0xa
  413433:	je     4134f8 <__sprintf_chk@plt+0x10f18>
  413439:	xor    edx,edx
  41343b:	mov    esi,0x1
  413440:	mov    rdi,rbp
  413443:	mov    rbx,rax
  413446:	call   412720 <__sprintf_chk@plt+0x10140>
  41344b:	mov    r12,rax
  41344e:	lea    eax,[rbx-0x2]
  413451:	cmp    eax,0x22
  413454:	ja     4134e0 <__sprintf_chk@plt+0x10f00>
  41345a:	mov    edx,ebx
  41345c:	mov    rsi,rsp
  41345f:	mov    rdi,r12
  413462:	call   402540 <strtoul@plt>
  413467:	mov    rbx,QWORD PTR [rsp]
  41346b:	mov    r13,rax
  41346e:	cmp    rbx,r12
  413471:	je     413516 <__sprintf_chk@plt+0x10f36>
  413477:	call   4025d0 <__ctype_b_loc@plt>
  41347c:	mov    rsi,QWORD PTR [rax]
  41347f:	mov    rax,rbx
  413482:	jmp    41348c <__sprintf_chk@plt+0x10eac>
  413484:	nop    DWORD PTR [rax+0x0]
  413488:	mov    QWORD PTR [rsp],rax
  41348c:	movzx  ecx,BYTE PTR [rax]
  41348f:	inc    rax
  413492:	mov    rdx,rcx
  413495:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
  41349a:	jne    413488 <__sprintf_chk@plt+0x10ea8>
  41349c:	mov    rcx,QWORD PTR [rbp+0x10]
  4134a0:	lea    rsi,[rcx+0x10]
  4134a4:	test   dl,dl
  4134a6:	je     413550 <__sprintf_chk@plt+0x10f70>
  4134ac:	mov    DWORD PTR [rcx+0x8],0x0
  4134b3:	mov    QWORD PTR [rbp+0x10],rsi
  4134b7:	mov    rdi,QWORD PTR [rsp+0x8]
  4134bc:	xor    rdi,QWORD PTR fs:0x28
  4134c5:	mov    eax,0x1
  4134ca:	jne    413594 <__sprintf_chk@plt+0x10fb4>
  4134d0:	add    rsp,0x18
  4134d4:	pop    rbx
  4134d5:	pop    rbp
  4134d6:	pop    r12
  4134d8:	pop    r13
  4134da:	ret    
  4134db:	nop    DWORD PTR [rax+rax*1+0x0]
  4134e0:	lea    rdx,[rip+0x4116]        # 4175fd <__sprintf_chk@plt+0x1501d>
  4134e7:	mov    esi,0x2
  4134ec:	mov    rdi,rbp
  4134ef:	call   40c330 <__sprintf_chk@plt+0x9d50>
  4134f4:	nop    DWORD PTR [rax+0x0]
  4134f8:	mov    esi,0x1
  4134fd:	mov    rdi,rbp
  413500:	call   40d010 <__sprintf_chk@plt+0xaa30>
  413505:	mov    esi,0x1
  41350a:	mov    rdi,rbp
  41350d:	call   403f50 <__sprintf_chk@plt+0x1970>
  413512:	test   eax,eax
  413514:	jne    413520 <__sprintf_chk@plt+0x10f40>
  413516:	mov    rcx,QWORD PTR [rbp+0x10]
  41351a:	lea    rsi,[rcx+0x10]
  41351e:	jmp    4134ac <__sprintf_chk@plt+0x10ecc>
  413520:	mov    esi,0x1
  413525:	mov    rdi,rbp
  413528:	call   403ef0 <__sprintf_chk@plt+0x1910>
  41352d:	mov    rax,QWORD PTR [rbp+0x10]
  413531:	vmovsd QWORD PTR [rax],xmm0
  413535:	mov    DWORD PTR [rax+0x8],0x3
  41353c:	add    rax,0x10
  413540:	mov    QWORD PTR [rbp+0x10],rax
  413544:	jmp    4134b7 <__sprintf_chk@plt+0x10ed7>
  413549:	nop    DWORD PTR [rax+0x0]
  413550:	test   r13,r13
  413553:	js     413578 <__sprintf_chk@plt+0x10f98>
  413555:	vxorpd xmm0,xmm0,xmm0
  413559:	vcvtsi2sd xmm0,xmm0,r13
  41355e:	vmovsd QWORD PTR [rcx],xmm0
  413562:	mov    DWORD PTR [rcx+0x8],0x3
  413569:	mov    QWORD PTR [rbp+0x10],rsi
  41356d:	jmp    4134b7 <__sprintf_chk@plt+0x10ed7>
  413572:	nop    WORD PTR [rax+rax*1+0x0]
  413578:	mov    rax,r13
  41357b:	shr    rax,1
  41357e:	and    r13d,0x1
  413582:	or     rax,r13
  413585:	vxorpd xmm0,xmm0,xmm0
  413589:	vcvtsi2sd xmm0,xmm0,rax
  41358e:	vaddsd xmm0,xmm0,xmm0
  413592:	jmp    41355e <__sprintf_chk@plt+0x10f7e>
  413594:	call   4023e0 <__stack_chk_fail@plt>
  413599:	nop    DWORD PTR [rax+0x0]
  4135a0:	endbr64 
  4135a4:	push   rbp
  4135a5:	mov    esi,0x1
  4135aa:	push   rbx
  4135ab:	mov    rbx,rdi
  4135ae:	sub    rsp,0x58
  4135b2:	lea    rdx,[rsp+0x8]
  4135b7:	mov    rax,QWORD PTR fs:0x28
  4135c0:	mov    QWORD PTR [rsp+0x48],rax
  4135c5:	xor    eax,eax
  4135c7:	call   412720 <__sprintf_chk@plt+0x10140>
  4135cc:	mov    rdx,rax
  4135cf:	xor    ecx,ecx
  4135d1:	mov    esi,0x2
  4135d6:	mov    rdi,rbx
  4135d9:	mov    rbp,rax
  4135dc:	call   4127e0 <__sprintf_chk@plt+0x10200>
  4135e1:	mov    rdx,QWORD PTR [rsp+0x8]
  4135e6:	test   rax,rax
  4135e9:	mov    QWORD PTR [rsp+0x18],rdx
  4135ee:	lea    rdx,[rip+0x3cac]        # 4172a1 <__sprintf_chk@plt+0x14cc1>
  4135f5:	cmove  rax,rdx
  4135f9:	lea    rdx,[rsp+0x10]
  4135fe:	lea    rcx,[rip+0xfffffffffffef93b]        # 402f40 <__sprintf_chk@plt+0x960>
  413605:	mov    QWORD PTR [rsp+0x38],rdx
  41360a:	lea    rsi,[rsp+0x20]
  41360f:	mov    rdx,rax
  413612:	mov    rdi,rbx
  413615:	mov    QWORD PTR [rsp+0x10],rbp
  41361a:	mov    QWORD PTR [rsp+0x40],rbx
  41361f:	mov    QWORD PTR [rsp+0x30],rcx
  413624:	mov    QWORD PTR [rsp+0x20],0x0
  41362d:	mov    QWORD PTR [rsp+0x28],0x0
  413636:	call   4077b0 <__sprintf_chk@plt+0x51d0>
  41363b:	mov    edx,0x1
  413640:	test   eax,eax
  413642:	jne    413660 <__sprintf_chk@plt+0x11080>
  413644:	mov    rcx,QWORD PTR [rsp+0x48]
  413649:	xor    rcx,QWORD PTR fs:0x28
  413652:	mov    eax,edx
  413654:	jne    413687 <__sprintf_chk@plt+0x110a7>
  413656:	add    rsp,0x58
  41365a:	pop    rbx
  41365b:	pop    rbp
  41365c:	ret    
  41365d:	nop    DWORD PTR [rax]
  413660:	mov    rax,QWORD PTR [rbx+0x10]
  413664:	mov    esi,0xfffffffe
  413669:	mov    DWORD PTR [rax+0x8],0x0
  413670:	add    rax,0x10
  413674:	mov    QWORD PTR [rbx+0x10],rax
  413678:	mov    rdi,rbx
  41367b:	call   403d90 <__sprintf_chk@plt+0x17b0>
  413680:	mov    edx,0x2
  413685:	jmp    413644 <__sprintf_chk@plt+0x11064>
  413687:	call   4023e0 <__stack_chk_fail@plt>
  41368c:	nop    DWORD PTR [rax+0x0]
  413690:	endbr64 
  413694:	push   r14
  413696:	push   r13
  413698:	push   r12
  41369a:	push   rbp
  41369b:	push   rbx
  41369c:	sub    rsp,0x1000
  4136a3:	or     QWORD PTR [rsp],0x0
  4136a8:	sub    rsp,0x1000
  4136af:	or     QWORD PTR [rsp],0x0
  4136b4:	sub    rsp,0x30
  4136b8:	mov    esi,0x1
  4136bd:	mov    rbx,rdi
  4136c0:	lea    rdx,[rsp+0x8]
  4136c5:	lea    rbp,[rsp+0x10]
  4136ca:	mov    rax,QWORD PTR fs:0x28
  4136d3:	mov    QWORD PTR [rsp+0x2028],rax
  4136db:	xor    eax,eax
  4136dd:	call   412720 <__sprintf_chk@plt+0x10140>
  4136e2:	mov    QWORD PTR [rsp+0x20],rbx
  4136e7:	cmp    QWORD PTR [rsp+0x8],0x0
  4136ed:	lea    rbx,[rbp+0x18]
  4136f1:	mov    QWORD PTR [rsp+0x10],rbx
  4136f6:	mov    DWORD PTR [rsp+0x18],0x0
  4136fe:	je     413760 <__sprintf_chk@plt+0x11180>
  413700:	mov    r12,rax
  413703:	call   402310 <__ctype_toupper_loc@plt>
  413708:	mov    r13,rax
  41370b:	lea    r14,[rbp+0x2018]
  413712:	mov    rax,rbx
  413715:	xor    ebx,ebx
  413717:	nop    WORD PTR [rax+rax*1+0x0]
  413720:	movzx  ecx,BYTE PTR [r12+rbx*1]
  413725:	mov    rdx,QWORD PTR [r13+0x0]
  413729:	inc    rbx
  41372c:	mov    edx,DWORD PTR [rdx+rcx*4]
  41372f:	lea    rcx,[rax+0x1]
  413733:	mov    QWORD PTR [rsp+0x10],rcx
  413738:	mov    BYTE PTR [rax],dl
  41373a:	cmp    rbx,QWORD PTR [rsp+0x8]
  41373f:	jae    413760 <__sprintf_chk@plt+0x11180>
  413741:	mov    rax,QWORD PTR [rsp+0x10]
  413746:	cmp    rax,r14
  413749:	jb     413720 <__sprintf_chk@plt+0x11140>
  41374b:	mov    rdi,rbp
  41374e:	call   40d730 <__sprintf_chk@plt+0xb150>
  413753:	mov    rax,QWORD PTR [rsp+0x10]
  413758:	jmp    413720 <__sprintf_chk@plt+0x11140>
  41375a:	nop    WORD PTR [rax+rax*1+0x0]
  413760:	mov    rdi,rbp
  413763:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  413768:	mov    rsi,QWORD PTR [rsp+0x2028]
  413770:	xor    rsi,QWORD PTR fs:0x28
  413779:	mov    eax,0x1
  41377e:	jne    413790 <__sprintf_chk@plt+0x111b0>
  413780:	add    rsp,0x2030
  413787:	pop    rbx
  413788:	pop    rbp
  413789:	pop    r12
  41378b:	pop    r13
  41378d:	pop    r14
  41378f:	ret    
  413790:	call   4023e0 <__stack_chk_fail@plt>
  413795:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4137a0:	endbr64 
  4137a4:	push   r14
  4137a6:	push   r13
  4137a8:	push   r12
  4137aa:	push   rbp
  4137ab:	push   rbx
  4137ac:	sub    rsp,0x1000
  4137b3:	or     QWORD PTR [rsp],0x0
  4137b8:	sub    rsp,0x1000
  4137bf:	or     QWORD PTR [rsp],0x0
  4137c4:	sub    rsp,0x30
  4137c8:	mov    esi,0x1
  4137cd:	mov    rbx,rdi
  4137d0:	lea    rdx,[rsp+0x8]
  4137d5:	lea    rbp,[rsp+0x10]
  4137da:	mov    rax,QWORD PTR fs:0x28
  4137e3:	mov    QWORD PTR [rsp+0x2028],rax
  4137eb:	xor    eax,eax
  4137ed:	call   412720 <__sprintf_chk@plt+0x10140>
  4137f2:	mov    QWORD PTR [rsp+0x20],rbx
  4137f7:	cmp    QWORD PTR [rsp+0x8],0x0
  4137fd:	lea    rbx,[rbp+0x18]
  413801:	mov    QWORD PTR [rsp+0x10],rbx
  413806:	mov    DWORD PTR [rsp+0x18],0x0
  41380e:	je     413870 <__sprintf_chk@plt+0x11290>
  413810:	mov    r12,rax
  413813:	call   4025c0 <__ctype_tolower_loc@plt>
  413818:	mov    r13,rax
  41381b:	lea    r14,[rbp+0x2018]
  413822:	mov    rax,rbx
  413825:	xor    ebx,ebx
  413827:	nop    WORD PTR [rax+rax*1+0x0]
  413830:	movzx  ecx,BYTE PTR [r12+rbx*1]
  413835:	mov    rdx,QWORD PTR [r13+0x0]
  413839:	inc    rbx
  41383c:	mov    edx,DWORD PTR [rdx+rcx*4]
  41383f:	lea    rcx,[rax+0x1]
  413843:	mov    QWORD PTR [rsp+0x10],rcx
  413848:	mov    BYTE PTR [rax],dl
  41384a:	cmp    rbx,QWORD PTR [rsp+0x8]
  41384f:	jae    413870 <__sprintf_chk@plt+0x11290>
  413851:	mov    rax,QWORD PTR [rsp+0x10]
  413856:	cmp    rax,r14
  413859:	jb     413830 <__sprintf_chk@plt+0x11250>
  41385b:	mov    rdi,rbp
  41385e:	call   40d730 <__sprintf_chk@plt+0xb150>
  413863:	mov    rax,QWORD PTR [rsp+0x10]
  413868:	jmp    413830 <__sprintf_chk@plt+0x11250>
  41386a:	nop    WORD PTR [rax+rax*1+0x0]
  413870:	mov    rdi,rbp
  413873:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  413878:	mov    rsi,QWORD PTR [rsp+0x2028]
  413880:	xor    rsi,QWORD PTR fs:0x28
  413889:	mov    eax,0x1
  41388e:	jne    4138a0 <__sprintf_chk@plt+0x112c0>
  413890:	add    rsp,0x2030
  413897:	pop    rbx
  413898:	pop    rbp
  413899:	pop    r12
  41389b:	pop    r13
  41389d:	pop    r14
  41389f:	ret    
  4138a0:	call   4023e0 <__stack_chk_fail@plt>
  4138a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4138b0:	endbr64 
  4138b4:	push   r12
  4138b6:	xor    edx,edx
  4138b8:	mov    esi,0x1
  4138bd:	push   rbp
  4138be:	push   rbx
  4138bf:	mov    rbx,rdi
  4138c2:	call   412720 <__sprintf_chk@plt+0x10140>
  4138c7:	mov    rdi,rax
  4138ca:	mov    rbp,rax
  4138cd:	call   402350 <remove@plt>
  4138d2:	test   eax,eax
  4138d4:	jne    413900 <__sprintf_chk@plt+0x11320>
  4138d6:	mov    rax,QWORD PTR [rbx+0x10]
  4138da:	mov    DWORD PTR [rax],0x1
  4138e0:	mov    DWORD PTR [rax+0x8],0x1
  4138e7:	add    rax,0x10
  4138eb:	mov    QWORD PTR [rbx+0x10],rax
  4138ef:	pop    rbx
  4138f0:	pop    rbp
  4138f1:	mov    eax,0x1
  4138f6:	pop    r12
  4138f8:	ret    
  4138f9:	nop    DWORD PTR [rax+0x0]
  413900:	call   402330 <__errno_location@plt>
  413905:	mov    r12d,DWORD PTR [rax]
  413908:	mov    rax,QWORD PTR [rbx+0x10]
  41390c:	mov    edi,r12d
  41390f:	mov    DWORD PTR [rax+0x8],0x0
  413916:	add    rax,0x10
  41391a:	mov    QWORD PTR [rbx+0x10],rax
  41391e:	call   4025a0 <strerror@plt>
  413923:	mov    rcx,rax
  413926:	mov    rdx,rbp
  413929:	mov    rdi,rbx
  41392c:	lea    rsi,[rip+0x3ce6]        # 417619 <__sprintf_chk@plt+0x15039>
  413933:	xor    eax,eax
  413935:	call   40bd10 <__sprintf_chk@plt+0x9730>
  41393a:	vxorpd xmm0,xmm0,xmm0
  41393e:	mov    rax,QWORD PTR [rbx+0x10]
  413942:	vcvtsi2sd xmm0,xmm0,r12d
  413947:	mov    DWORD PTR [rax+0x8],0x3
  41394e:	add    rax,0x10
  413952:	vmovsd QWORD PTR [rax-0x10],xmm0
  413957:	mov    QWORD PTR [rbx+0x10],rax
  41395b:	pop    rbx
  41395c:	pop    rbp
  41395d:	mov    eax,0x3
  413962:	pop    r12
  413964:	ret    
  413965:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413970:	push   r15
  413972:	push   r14
  413974:	push   r13
  413976:	push   r12
  413978:	push   rbp
  413979:	push   rbx
  41397a:	mov    rbx,rdi
  41397d:	sub    rsp,0x28
  413981:	mov    QWORD PTR [rsp+0x8],rsi
  413986:	mov    rax,QWORD PTR fs:0x28
  41398f:	mov    QWORD PTR [rsp+0x18],rax
  413994:	xor    eax,eax
  413996:	mov    rax,QWORD PTR [rdi+0x10]
  41399a:	sub    rax,QWORD PTR [rdi+0x18]
  41399e:	sar    rax,0x4
  4139a2:	cmp    eax,0x1
  4139a5:	je     413aa0 <__sprintf_chk@plt+0x114c0>
  4139ab:	mov    r15d,edx
  4139ae:	lea    r13d,[rdx+rax*1-0x1]
  4139b3:	mov    ebp,0x1
  4139b8:	lea    r12,[rip+0x4651]        # 418010 <__sprintf_chk@plt+0x15a30>
  4139bf:	lea    r14,[rsp+0x10]
  4139c4:	jmp    4139ee <__sprintf_chk@plt+0x1140e>
  4139c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139d0:	mov    rdx,r14
  4139d3:	mov    esi,r15d
  4139d6:	mov    rdi,rbx
  4139d9:	call   412720 <__sprintf_chk@plt+0x10140>
  4139de:	test   ebp,ebp
  4139e0:	jne    413a70 <__sprintf_chk@plt+0x11490>
  4139e6:	inc    r15d
  4139e9:	cmp    r15d,r13d
  4139ec:	je     413a40 <__sprintf_chk@plt+0x11460>
  4139ee:	mov    esi,r15d
  4139f1:	mov    rdi,rbx
  4139f4:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  4139f9:	cmp    rax,r12
  4139fc:	je     4139d0 <__sprintf_chk@plt+0x113f0>
  4139fe:	cmp    DWORD PTR [rax+0x8],0x3
  413a02:	jne    4139d0 <__sprintf_chk@plt+0x113f0>
  413a04:	test   ebp,ebp
  413a06:	je     4139e6 <__sprintf_chk@plt+0x11406>
  413a08:	mov    esi,r15d
  413a0b:	mov    rdi,rbx
  413a0e:	call   403ef0 <__sprintf_chk@plt+0x1910>
  413a13:	mov    rdi,QWORD PTR [rsp+0x8]
  413a18:	lea    rdx,[rip+0x36bc]        # 4170db <__sprintf_chk@plt+0x14afb>
  413a1f:	mov    esi,0x1
  413a24:	mov    eax,0x1
  413a29:	call   402590 <__fprintf_chk@plt>
  413a2e:	xor    ebp,ebp
  413a30:	test   eax,eax
  413a32:	setg   bpl
  413a36:	inc    r15d
  413a39:	cmp    r15d,r13d
  413a3c:	jne    4139ee <__sprintf_chk@plt+0x1140e>
  413a3e:	xchg   ax,ax
  413a40:	xor    edx,edx
  413a42:	mov    esi,ebp
  413a44:	mov    rdi,rbx
  413a47:	call   40be00 <__sprintf_chk@plt+0x9820>
  413a4c:	mov    rcx,QWORD PTR [rsp+0x18]
  413a51:	xor    rcx,QWORD PTR fs:0x28
  413a5a:	jne    413aa4 <__sprintf_chk@plt+0x114c4>
  413a5c:	add    rsp,0x28
  413a60:	pop    rbx
  413a61:	pop    rbp
  413a62:	pop    r12
  413a64:	pop    r13
  413a66:	pop    r14
  413a68:	pop    r15
  413a6a:	ret    
  413a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  413a70:	mov    rcx,QWORD PTR [rsp+0x8]
  413a75:	mov    rdx,QWORD PTR [rsp+0x10]
  413a7a:	mov    esi,0x1
  413a7f:	mov    rdi,rax
  413a82:	call   402580 <fwrite@plt>
  413a87:	xor    ebp,ebp
  413a89:	cmp    QWORD PTR [rsp+0x10],rax
  413a8e:	sete   bpl
  413a92:	jmp    4139e6 <__sprintf_chk@plt+0x11406>
  413a97:	nop    WORD PTR [rax+rax*1+0x0]
  413aa0:	mov    ebp,eax
  413aa2:	jmp    413a40 <__sprintf_chk@plt+0x11460>
  413aa4:	call   4023e0 <__stack_chk_fail@plt>
  413aa9:	nop    DWORD PTR [rax+0x0]
  413ab0:	endbr64 
  413ab4:	push   rbx
  413ab5:	mov    esi,0x2
  413aba:	mov    rbx,rdi
  413abd:	call   40c290 <__sprintf_chk@plt+0x9cb0>
  413ac2:	mov    rsi,rax
  413ac5:	mov    rdi,rbx
  413ac8:	mov    edx,0x1
  413acd:	pop    rbx
  413ace:	jmp    413970 <__sprintf_chk@plt+0x11390>
  413ad3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413ade:	xchg   ax,ax
  413ae0:	endbr64 
  413ae4:	push   rbx
  413ae5:	mov    rbx,rdi
  413ae8:	call   40d370 <__sprintf_chk@plt+0xad90>
  413aed:	mov    rsi,rax
  413af0:	mov    rdi,rbx
  413af3:	mov    edx,0x2
  413af8:	pop    rbx
  413af9:	jmp    413970 <__sprintf_chk@plt+0x11390>
  413afe:	xchg   ax,ax
  413b00:	endbr64 
  413b04:	push   r13
  413b06:	xor    edx,edx
  413b08:	mov    esi,0x1
  413b0d:	push   r12
  413b0f:	push   rbp
  413b10:	push   rbx
  413b11:	mov    rbx,rdi
  413b14:	sub    rsp,0x8
  413b18:	call   412720 <__sprintf_chk@plt+0x10140>
  413b1d:	xor    ecx,ecx
  413b1f:	lea    rdx,[rip+0x3ad0]        # 4175f6 <__sprintf_chk@plt+0x15016>
  413b26:	mov    esi,0x2
  413b2b:	mov    rdi,rbx
  413b2e:	mov    rbp,rax
  413b31:	call   4127e0 <__sprintf_chk@plt+0x10200>
  413b36:	mov    r13,rax
  413b39:	mov    rdi,rbx
  413b3c:	call   40e1d0 <__sprintf_chk@plt+0xbbf0>
  413b41:	mov    rsi,r13
  413b44:	mov    rdi,rbp
  413b47:	mov    r12,rax
  413b4a:	call   402530 <fopen@plt>
  413b4f:	mov    QWORD PTR [r12],rax
  413b53:	test   rax,rax
  413b56:	je     413b70 <__sprintf_chk@plt+0x11590>
  413b58:	add    rsp,0x8
  413b5c:	pop    rbx
  413b5d:	pop    rbp
  413b5e:	pop    r12
  413b60:	mov    eax,0x1
  413b65:	pop    r13
  413b67:	ret    
  413b68:	nop    DWORD PTR [rax+rax*1+0x0]
  413b70:	add    rsp,0x8
  413b74:	mov    rdi,rbx
  413b77:	pop    rbx
  413b78:	mov    rdx,rbp
  413b7b:	pop    rbp
  413b7c:	pop    r12
  413b7e:	xor    esi,esi
  413b80:	pop    r13
  413b82:	jmp    40be00 <__sprintf_chk@plt+0x9820>
  413b87:	nop    WORD PTR [rax+rax*1+0x0]
  413b90:	push   r13
  413b92:	push   r12
  413b94:	mov    r12,rsi
  413b97:	push   rbp
  413b98:	mov    ebp,edx
  413b9a:	push   rbx
  413b9b:	mov    rbx,rdi
  413b9e:	sub    rsp,0x8
  413ba2:	call   402330 <__errno_location@plt>
  413ba7:	mov    edi,DWORD PTR [rax]
  413ba9:	call   4025a0 <strerror@plt>
  413bae:	mov    esi,ebp
  413bb0:	mov    rdi,rbx
  413bb3:	xor    edx,edx
  413bb5:	mov    r13,rax
  413bb8:	call   412510 <__sprintf_chk@plt+0xff30>
  413bbd:	lea    rcx,[rax+0x1]
  413bc1:	mov    r8,r13
  413bc4:	mov    rdx,r12
  413bc7:	mov    rdi,rbx
  413bca:	lea    rsi,[rip+0x3a3e]        # 41760f <__sprintf_chk@plt+0x1502f>
  413bd1:	xor    eax,eax
  413bd3:	call   40bd10 <__sprintf_chk@plt+0x9730>
  413bd8:	mov    esi,ebp
  413bda:	mov    rdi,rbx
  413bdd:	call   403d50 <__sprintf_chk@plt+0x1770>
  413be2:	add    rsp,0x8
  413be6:	pop    rbx
  413be7:	pop    rbp
  413be8:	pop    r12
  413bea:	mov    eax,0x6
  413bef:	pop    r13
  413bf1:	ret    
  413bf2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413bfd:	nop    DWORD PTR [rax]
  413c00:	push   r15
  413c02:	push   r14
  413c04:	push   r13
  413c06:	push   r12
  413c08:	mov    r12d,edx
  413c0b:	push   rbp
  413c0c:	mov    rbp,rsi
  413c0f:	push   rbx
  413c10:	mov    rbx,rdi
  413c13:	sub    rsp,0x28
  413c17:	mov    r13,QWORD PTR [rdi+0x10]
  413c1b:	mov    rax,QWORD PTR fs:0x28
  413c24:	mov    QWORD PTR [rsp+0x18],rax
  413c29:	xor    eax,eax
  413c2b:	sub    r13,QWORD PTR [rdi+0x18]
  413c2f:	sar    r13,0x4
  413c33:	mov    rdi,rsi
  413c36:	call   402490 <clearerr@plt>
  413c3b:	cmp    r13d,0x1
  413c3f:	jne    413ca0 <__sprintf_chk@plt+0x116c0>
  413c41:	mov    rsi,rbp
  413c44:	mov    rdi,rbx
  413c47:	call   40d800 <__sprintf_chk@plt+0xb220>
  413c4c:	mov    r15d,eax
  413c4f:	lea    ecx,[r12+0x1]
  413c54:	mov    rdi,rbp
  413c57:	mov    DWORD PTR [rsp+0x4],ecx
  413c5b:	call   402380 <ferror@plt>
  413c60:	test   eax,eax
  413c62:	mov    ecx,DWORD PTR [rsp+0x4]
  413c66:	jne    413d70 <__sprintf_chk@plt+0x11790>
  413c6c:	test   r15d,r15d
  413c6f:	je     413db8 <__sprintf_chk@plt+0x117d8>
  413c75:	mov    eax,ecx
  413c77:	sub    eax,r12d
  413c7a:	mov    rcx,QWORD PTR [rsp+0x18]
  413c7f:	xor    rcx,QWORD PTR fs:0x28
  413c88:	jne    413ec6 <__sprintf_chk@plt+0x118e6>
  413c8e:	add    rsp,0x28
  413c92:	pop    rbx
  413c93:	pop    rbp
  413c94:	pop    r12
  413c96:	pop    r13
  413c98:	pop    r14
  413c9a:	pop    r15
  413c9c:	ret    
  413c9d:	nop    DWORD PTR [rax]
  413ca0:	lea    esi,[r13+0x13]
  413ca4:	lea    rdx,[rip+0x3975]        # 417620 <__sprintf_chk@plt+0x15040>
  413cab:	mov    rdi,rbx
  413cae:	call   40c250 <__sprintf_chk@plt+0x9c70>
  413cb3:	lea    rax,[rsp+0x10]
  413cb8:	mov    QWORD PTR [rsp+0x8],rax
  413cbd:	sub    r13d,0x2
  413cc1:	mov    ecx,r12d
  413cc4:	mov    r14d,ecx
  413cc7:	add    r13d,ecx
  413cca:	mov    eax,r13d
  413ccd:	sub    eax,r14d
  413cd0:	mov    esi,r14d
  413cd3:	mov    rdi,rbx
  413cd6:	mov    DWORD PTR [rsp+0x4],eax
  413cda:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  413cdf:	lea    rdx,[rip+0x432a]        # 418010 <__sprintf_chk@plt+0x15a30>
  413ce6:	cmp    rax,rdx
  413ce9:	je     413cf5 <__sprintf_chk@plt+0x11715>
  413ceb:	cmp    DWORD PTR [rax+0x8],0x3
  413cef:	je     413dd0 <__sprintf_chk@plt+0x117f0>
  413cf5:	xor    edx,edx
  413cf7:	mov    esi,r14d
  413cfa:	mov    rdi,rbx
  413cfd:	call   412510 <__sprintf_chk@plt+0xff30>
  413d02:	test   rax,rax
  413d05:	je     413d0c <__sprintf_chk@plt+0x1172c>
  413d07:	cmp    BYTE PTR [rax],0x2a
  413d0a:	je     413d88 <__sprintf_chk@plt+0x117a8>
  413d0c:	lea    rdx,[rip+0x3920]        # 417633 <__sprintf_chk@plt+0x15053>
  413d13:	mov    esi,r14d
  413d16:	mov    rdi,rbx
  413d19:	call   40c330 <__sprintf_chk@plt+0x9d50>
  413d1e:	xchg   ax,ax
  413d20:	mov    rdx,QWORD PTR [rsp+0x8]
  413d25:	xor    eax,eax
  413d27:	lea    rsi,[rip+0x3914]        # 417642 <__sprintf_chk@plt+0x15062>
  413d2e:	mov    rdi,rbp
  413d31:	call   402370 <__isoc99_fscanf@plt>
  413d36:	cmp    eax,0x1
  413d39:	lea    edx,[r14+0x1]
  413d3d:	mov    ecx,edx
  413d3f:	mov    rax,QWORD PTR [rbx+0x10]
  413d43:	je     413e88 <__sprintf_chk@plt+0x118a8>
  413d49:	mov    DWORD PTR [rax+0x8],0x0
  413d50:	add    rax,0x10
  413d54:	mov    QWORD PTR [rbx+0x10],rax
  413d58:	mov    rdi,rbp
  413d5b:	mov    DWORD PTR [rsp+0x4],ecx
  413d5f:	call   402380 <ferror@plt>
  413d64:	test   eax,eax
  413d66:	mov    ecx,DWORD PTR [rsp+0x4]
  413d6a:	je     413db8 <__sprintf_chk@plt+0x117d8>
  413d6c:	nop    DWORD PTR [rax+0x0]
  413d70:	xor    edx,edx
  413d72:	xor    esi,esi
  413d74:	mov    rdi,rbx
  413d77:	call   40be00 <__sprintf_chk@plt+0x9820>
  413d7c:	jmp    413c7a <__sprintf_chk@plt+0x1169a>
  413d81:	nop    DWORD PTR [rax+0x0]
  413d88:	movzx  eax,BYTE PTR [rax+0x1]
  413d8c:	cmp    al,0x6c
  413d8e:	je     413e48 <__sprintf_chk@plt+0x11868>
  413d94:	cmp    al,0x6e
  413d96:	je     413d20 <__sprintf_chk@plt+0x11740>
  413d98:	cmp    al,0x61
  413d9a:	je     413e60 <__sprintf_chk@plt+0x11880>
  413da0:	lea    rdx,[rip+0x389f]        # 417646 <__sprintf_chk@plt+0x15066>
  413da7:	mov    esi,r14d
  413daa:	mov    rdi,rbx
  413dad:	call   40c330 <__sprintf_chk@plt+0x9d50>
  413db2:	nop    WORD PTR [rax+rax*1+0x0]
  413db8:	mov    rax,QWORD PTR [rbx+0x10]
  413dbc:	mov    DWORD PTR [rax-0x8],0x0
  413dc3:	mov    QWORD PTR [rbx+0x10],rax
  413dc7:	jmp    413c75 <__sprintf_chk@plt+0x11695>
  413dcc:	nop    DWORD PTR [rax+0x0]
  413dd0:	mov    esi,r14d
  413dd3:	mov    rdi,rbx
  413dd6:	call   403fb0 <__sprintf_chk@plt+0x19d0>
  413ddb:	test   rax,rax
  413dde:	jne    413e30 <__sprintf_chk@plt+0x11850>
  413de0:	mov    rdi,rbp
  413de3:	call   4025b0 <getc@plt>
  413de8:	mov    edi,eax
  413dea:	mov    rsi,rbp
  413ded:	mov    r13d,eax
  413df0:	call   4024d0 <ungetc@plt>
  413df5:	xor    edx,edx
  413df7:	xor    esi,esi
  413df9:	mov    rdi,rbx
  413dfc:	xor    r15d,r15d
  413dff:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  413e04:	cmp    r13d,0xffffffff
  413e08:	setne  r15b
  413e0c:	mov    eax,DWORD PTR [rsp+0x4]
  413e10:	lea    ecx,[r14+0x1]
  413e14:	lea    r13d,[rax-0x1]
  413e18:	test   eax,eax
  413e1a:	je     413c54 <__sprintf_chk@plt+0x11674>
  413e20:	test   r15d,r15d
  413e23:	jne    413cc4 <__sprintf_chk@plt+0x116e4>
  413e29:	jmp    413d58 <__sprintf_chk@plt+0x11778>
  413e2e:	xchg   ax,ax
  413e30:	mov    rdx,rax
  413e33:	mov    rsi,rbp
  413e36:	mov    rdi,rbx
  413e39:	call   40d9e0 <__sprintf_chk@plt+0xb400>
  413e3e:	mov    r15d,eax
  413e41:	jmp    413e0c <__sprintf_chk@plt+0x1182c>
  413e43:	nop    DWORD PTR [rax+rax*1+0x0]
  413e48:	mov    rsi,rbp
  413e4b:	mov    rdi,rbx
  413e4e:	call   40d800 <__sprintf_chk@plt+0xb220>
  413e53:	mov    r15d,eax
  413e56:	jmp    413e0c <__sprintf_chk@plt+0x1182c>
  413e58:	nop    DWORD PTR [rax+rax*1+0x0]
  413e60:	mov    rdx,0xffffffffffffffff
  413e67:	mov    rsi,rbp
  413e6a:	mov    rdi,rbx
  413e6d:	call   40d9e0 <__sprintf_chk@plt+0xb400>
  413e72:	mov    eax,DWORD PTR [rsp+0x4]
  413e76:	lea    edx,[r14+0x1]
  413e7a:	mov    ecx,edx
  413e7c:	test   eax,eax
  413e7e:	je     413ea9 <__sprintf_chk@plt+0x118c9>
  413e80:	mov    r14d,edx
  413e83:	jmp    413cca <__sprintf_chk@plt+0x116ea>
  413e88:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  413e8e:	mov    esi,DWORD PTR [rsp+0x4]
  413e92:	vmovsd QWORD PTR [rax],xmm0
  413e96:	mov    DWORD PTR [rax+0x8],0x3
  413e9d:	add    rax,0x10
  413ea1:	mov    QWORD PTR [rbx+0x10],rax
  413ea5:	test   esi,esi
  413ea7:	jne    413e80 <__sprintf_chk@plt+0x118a0>
  413ea9:	mov    rdi,rbp
  413eac:	mov    DWORD PTR [rsp+0x4],ecx
  413eb0:	call   402380 <ferror@plt>
  413eb5:	test   eax,eax
  413eb7:	mov    ecx,DWORD PTR [rsp+0x4]
  413ebb:	je     413c75 <__sprintf_chk@plt+0x11695>
  413ec1:	jmp    413d70 <__sprintf_chk@plt+0x11790>
  413ec6:	call   4023e0 <__stack_chk_fail@plt>
  413ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  413ed0:	endbr64 
  413ed4:	push   rbx
  413ed5:	mov    esi,0x1
  413eda:	mov    rbx,rdi
  413edd:	call   40c290 <__sprintf_chk@plt+0x9cb0>
  413ee2:	mov    rsi,rax
  413ee5:	mov    rdi,rbx
  413ee8:	mov    edx,0x1
  413eed:	pop    rbx
  413eee:	jmp    413c00 <__sprintf_chk@plt+0x11620>
  413ef3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413efe:	xchg   ax,ax
  413f00:	endbr64 
  413f04:	push   rbx
  413f05:	mov    rbx,rdi
  413f08:	call   40d370 <__sprintf_chk@plt+0xad90>
  413f0d:	mov    rsi,rax
  413f10:	mov    rdi,rbx
  413f13:	mov    edx,0x2
  413f18:	pop    rbx
  413f19:	jmp    413c00 <__sprintf_chk@plt+0x11620>
  413f1e:	xchg   ax,ax
  413f20:	push   r14
  413f22:	push   r13
  413f24:	push   r12
  413f26:	push   rbp
  413f27:	push   rbx
  413f28:	sub    rsp,0x1000
  413f2f:	or     QWORD PTR [rsp],0x0
  413f34:	sub    rsp,0x1000
  413f3b:	or     QWORD PTR [rsp],0x0
  413f40:	sub    rsp,0x50
  413f44:	mov    rbx,QWORD PTR [rdi+0x10]
  413f48:	mov    rax,QWORD PTR fs:0x28
  413f51:	mov    QWORD PTR [rsp+0x2048],rax
  413f59:	xor    eax,eax
  413f5b:	sub    rbx,QWORD PTR [rdi+0x18]
  413f5f:	sar    rbx,0x4
  413f63:	mov    rbp,rdi
  413f66:	mov    r12,rsi
  413f69:	inc    ebx
  413f6b:	mov    DWORD PTR [rsp+0x30],0x0
  413f73:	test   rsi,rsi
  413f76:	je     4141c8 <__sprintf_chk@plt+0x11be8>
  413f7c:	mov    rdx,rsi
  413f7f:	xor    eax,eax
  413f81:	lea    rsi,[rip+0x36d4]        # 41765c <__sprintf_chk@plt+0x1507c>
  413f88:	call   40bd10 <__sprintf_chk@plt+0x9730>
  413f8d:	mov    rdi,r12
  413f90:	lea    rsi,[rip+0x365f]        # 4175f6 <__sprintf_chk@plt+0x15016>
  413f97:	call   402530 <fopen@plt>
  413f9c:	mov    rdi,rax
  413f9f:	mov    QWORD PTR [rsp+0x38],rax
  413fa4:	test   rax,rax
  413fa7:	je     414300 <__sprintf_chk@plt+0x11d20>
  413fad:	call   4025b0 <getc@plt>
  413fb2:	cmp    eax,0x23
  413fb5:	je     414090 <__sprintf_chk@plt+0x11ab0>
  413fbb:	mov    rsi,QWORD PTR [rsp+0x38]
  413fc0:	cmp    eax,0x1b
  413fc3:	jne    4140bd <__sprintf_chk@plt+0x11add>
  413fc9:	test   r12,r12
  413fcc:	je     4141f0 <__sprintf_chk@plt+0x11c10>
  413fd2:	mov    rdx,rsi
  413fd5:	mov    rdi,r12
  413fd8:	lea    rsi,[rip+0x3681]        # 417660 <__sprintf_chk@plt+0x15080>
  413fdf:	call   402400 <freopen@plt>
  413fe4:	mov    rdi,rax
  413fe7:	mov    QWORD PTR [rsp+0x38],rax
  413fec:	test   rax,rax
  413fef:	jne    414005 <__sprintf_chk@plt+0x11a25>
  413ff1:	jmp    41432f <__sprintf_chk@plt+0x11d4f>
  413ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414000:	cmp    eax,0x1b
  414003:	je     414014 <__sprintf_chk@plt+0x11a34>
  414005:	call   4025b0 <getc@plt>
  41400a:	mov    rdi,QWORD PTR [rsp+0x38]
  41400f:	cmp    eax,0xffffffff
  414012:	jne    414000 <__sprintf_chk@plt+0x11a20>
  414014:	mov    rsi,rdi
  414017:	mov    edi,eax
  414019:	mov    DWORD PTR [rsp+0x30],0x0
  414021:	call   4024d0 <ungetc@plt>
  414026:	xor    edx,edx
  414028:	mov    esi,0xffffffff
  41402d:	mov    rdi,rbp
  414030:	call   412510 <__sprintf_chk@plt+0xff30>
  414035:	test   rax,rax
  414038:	je     414280 <__sprintf_chk@plt+0x11ca0>
  41403e:	lea    rcx,[rip+0xffffffffffff001b]        # 404060 <__sprintf_chk@plt+0x1a80>
  414045:	mov    QWORD PTR [rsp+0x20],rbp
  41404a:	mov    QWORD PTR [rsp+0x10],rcx
  41404f:	mov    QWORD PTR [rsp],0x0
  414057:	mov    QWORD PTR [rsp+0x8],0x0
  414060:	lea    rdx,[rsp+0x30]
  414065:	mov    QWORD PTR [rsp+0x18],rdx
  41406a:	mov    rsi,rsp
  41406d:	mov    rdx,rax
  414070:	mov    rdi,rbp
  414073:	call   4077b0 <__sprintf_chk@plt+0x51d0>
  414078:	mov    rdi,QWORD PTR [rsp+0x38]
  41407d:	mov    r13d,eax
  414080:	call   402380 <ferror@plt>
  414085:	mov    r14d,eax
  414088:	jmp    414130 <__sprintf_chk@plt+0x11b50>
  41408d:	nop    DWORD PTR [rax]
  414090:	mov    DWORD PTR [rsp+0x30],0x1
  414098:	jmp    4140a9 <__sprintf_chk@plt+0x11ac9>
  41409a:	nop    WORD PTR [rax+rax*1+0x0]
  4140a0:	cmp    eax,0xa
  4140a3:	je     414320 <__sprintf_chk@plt+0x11d40>
  4140a9:	mov    rdi,QWORD PTR [rsp+0x38]
  4140ae:	call   4025b0 <getc@plt>
  4140b3:	cmp    eax,0xffffffff
  4140b6:	jne    4140a0 <__sprintf_chk@plt+0x11ac0>
  4140b8:	mov    rsi,QWORD PTR [rsp+0x38]
  4140bd:	mov    edi,eax
  4140bf:	call   4024d0 <ungetc@plt>
  4140c4:	xor    edx,edx
  4140c6:	mov    esi,0xffffffff
  4140cb:	mov    rdi,rbp
  4140ce:	call   412510 <__sprintf_chk@plt+0xff30>
  4140d3:	test   rax,rax
  4140d6:	lea    rdx,[rip+0x31c4]        # 4172a1 <__sprintf_chk@plt+0x14cc1>
  4140dd:	cmove  rax,rdx
  4140e1:	lea    rdx,[rsp+0x30]
  4140e6:	lea    rcx,[rip+0xfffffffffffeff73]        # 404060 <__sprintf_chk@plt+0x1a80>
  4140ed:	mov    QWORD PTR [rsp+0x18],rdx
  4140f2:	mov    rsi,rsp
  4140f5:	mov    rdx,rax
  4140f8:	mov    rdi,rbp
  4140fb:	mov    QWORD PTR [rsp+0x10],rcx
  414100:	mov    QWORD PTR [rsp+0x20],rbp
  414105:	mov    QWORD PTR [rsp],0x0
  41410d:	mov    QWORD PTR [rsp+0x8],0x0
  414116:	call   4077b0 <__sprintf_chk@plt+0x51d0>
  41411b:	mov    rdi,QWORD PTR [rsp+0x38]
  414120:	mov    r13d,eax
  414123:	call   402380 <ferror@plt>
  414128:	mov    r14d,eax
  41412b:	test   r12,r12
  41412e:	je     41413a <__sprintf_chk@plt+0x11b5a>
  414130:	mov    rdi,QWORD PTR [rsp+0x38]
  414135:	call   4023c0 <fclose@plt>
  41413a:	test   r14d,r14d
  41413d:	jne    414178 <__sprintf_chk@plt+0x11b98>
  41413f:	mov    esi,ebx
  414141:	mov    rdi,rbp
  414144:	call   403d50 <__sprintf_chk@plt+0x1770>
  414149:	mov    rcx,QWORD PTR [rsp+0x2048]
  414151:	xor    rcx,QWORD PTR fs:0x28
  41415a:	mov    eax,r13d
  41415d:	jne    414348 <__sprintf_chk@plt+0x11d68>
  414163:	add    rsp,0x2050
  41416a:	pop    rbx
  41416b:	pop    rbp
  41416c:	pop    r12
  41416e:	pop    r13
  414170:	pop    r14
  414172:	ret    
  414173:	nop    DWORD PTR [rax+rax*1+0x0]
  414178:	mov    rax,QWORD PTR [rbp+0x10]
  41417c:	movsxd rdx,ebx
  41417f:	test   ebx,ebx
  414181:	js     414268 <__sprintf_chk@plt+0x11c88>
  414187:	shl    rdx,0x4
  41418b:	add    rdx,QWORD PTR [rbp+0x18]
  41418f:	cmp    rdx,rax
  414192:	jbe    4141a8 <__sprintf_chk@plt+0x11bc8>
  414194:	nop    DWORD PTR [rax+0x0]
  414198:	add    rax,0x10
  41419c:	mov    DWORD PTR [rax-0x8],0x0
  4141a3:	cmp    rdx,rax
  4141a6:	ja     414198 <__sprintf_chk@plt+0x11bb8>
  4141a8:	mov    QWORD PTR [rbp+0x10],rdx
  4141ac:	mov    edx,ebx
  4141ae:	lea    rsi,[rip+0x377f]        # 417934 <__sprintf_chk@plt+0x15354>
  4141b5:	mov    rdi,rbp
  4141b8:	call   413b90 <__sprintf_chk@plt+0x115b0>
  4141bd:	mov    r13d,eax
  4141c0:	jmp    414149 <__sprintf_chk@plt+0x11b69>
  4141c2:	nop    WORD PTR [rax+rax*1+0x0]
  4141c8:	mov    edx,0x6
  4141cd:	lea    rsi,[rip+0x3481]        # 417655 <__sprintf_chk@plt+0x15075>
  4141d4:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4141d9:	mov    rax,QWORD PTR [rip+0xae00]        # 41efe0 <__sprintf_chk@plt+0x1ca00>
  4141e0:	mov    rdi,QWORD PTR [rax]
  4141e3:	mov    QWORD PTR [rsp+0x38],rdi
  4141e8:	jmp    413fad <__sprintf_chk@plt+0x119cd>
  4141ed:	nop    DWORD PTR [rax]
  4141f0:	mov    edi,0x1b
  4141f5:	call   4024d0 <ungetc@plt>
  4141fa:	xor    edx,edx
  4141fc:	mov    esi,0xffffffff
  414201:	mov    rdi,rbp
  414204:	call   412510 <__sprintf_chk@plt+0xff30>
  414209:	test   rax,rax
  41420c:	je     4142c0 <__sprintf_chk@plt+0x11ce0>
  414212:	lea    rcx,[rip+0xfffffffffffefe47]        # 404060 <__sprintf_chk@plt+0x1a80>
  414219:	mov    QWORD PTR [rsp+0x20],rbp
  41421e:	mov    QWORD PTR [rsp+0x10],rcx
  414223:	mov    QWORD PTR [rsp],0x0
  41422b:	mov    QWORD PTR [rsp+0x8],0x0
  414234:	lea    rdx,[rsp+0x30]
  414239:	mov    QWORD PTR [rsp+0x18],rdx
  41423e:	mov    rsi,rsp
  414241:	mov    rdx,rax
  414244:	mov    rdi,rbp
  414247:	call   4077b0 <__sprintf_chk@plt+0x51d0>
  41424c:	mov    rdi,QWORD PTR [rsp+0x38]
  414251:	mov    r13d,eax
  414254:	call   402380 <ferror@plt>
  414259:	mov    r14d,eax
  41425c:	jmp    41413a <__sprintf_chk@plt+0x11b5a>
  414261:	nop    DWORD PTR [rax+0x0]
  414268:	inc    rdx
  41426b:	shl    rdx,0x4
  41426f:	add    rax,rdx
  414272:	mov    QWORD PTR [rbp+0x10],rax
  414276:	jmp    4141ac <__sprintf_chk@plt+0x11bcc>
  41427b:	nop    DWORD PTR [rax+rax*1+0x0]
  414280:	lea    rax,[rip+0xfffffffffffefdd9]        # 404060 <__sprintf_chk@plt+0x1a80>
  414287:	mov    QWORD PTR [rsp+0x10],rax
  41428c:	lea    rax,[rsp+0x30]
  414291:	mov    QWORD PTR [rsp+0x20],rbp
  414296:	mov    QWORD PTR [rsp+0x18],rax
  41429b:	mov    QWORD PTR [rsp],0x0
  4142a3:	mov    QWORD PTR [rsp+0x8],0x0
  4142ac:	mov    rsi,rsp
  4142af:	lea    rdx,[rip+0x2feb]        # 4172a1 <__sprintf_chk@plt+0x14cc1>
  4142b6:	jmp    414070 <__sprintf_chk@plt+0x11a90>
  4142bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4142c0:	lea    rax,[rip+0xfffffffffffefd99]        # 404060 <__sprintf_chk@plt+0x1a80>
  4142c7:	mov    QWORD PTR [rsp+0x10],rax
  4142cc:	lea    rax,[rsp+0x30]
  4142d1:	mov    QWORD PTR [rsp+0x20],rbp
  4142d6:	mov    QWORD PTR [rsp+0x18],rax
  4142db:	mov    QWORD PTR [rsp],0x0
  4142e3:	mov    QWORD PTR [rsp+0x8],0x0
  4142ec:	mov    rsi,rsp
  4142ef:	lea    rdx,[rip+0x2fab]        # 4172a1 <__sprintf_chk@plt+0x14cc1>
  4142f6:	jmp    414244 <__sprintf_chk@plt+0x11c64>
  4142fb:	nop    DWORD PTR [rax+rax*1+0x0]
  414300:	mov    edx,ebx
  414302:	lea    rsi,[rip+0x335c]        # 417665 <__sprintf_chk@plt+0x15085>
  414309:	mov    rdi,rbp
  41430c:	call   413b90 <__sprintf_chk@plt+0x115b0>
  414311:	mov    r13d,eax
  414314:	jmp    414149 <__sprintf_chk@plt+0x11b69>
  414319:	nop    DWORD PTR [rax+0x0]
  414320:	mov    rdi,QWORD PTR [rsp+0x38]
  414325:	call   4025b0 <getc@plt>
  41432a:	jmp    413fbb <__sprintf_chk@plt+0x119db>
  41432f:	mov    edx,ebx
  414331:	lea    rsi,[rip+0x332b]        # 417663 <__sprintf_chk@plt+0x15083>
  414338:	mov    rdi,rbp
  41433b:	call   413b90 <__sprintf_chk@plt+0x115b0>
  414340:	mov    r13d,eax
  414343:	jmp    414149 <__sprintf_chk@plt+0x11b69>
  414348:	call   4023e0 <__stack_chk_fail@plt>
  41434d:	nop    DWORD PTR [rax]
  414350:	endbr64 
  414354:	push   rbx
  414355:	xor    edx,edx
  414357:	xor    ecx,ecx
  414359:	mov    esi,0x1
  41435e:	mov    rbx,rdi
  414361:	call   4127e0 <__sprintf_chk@plt+0x10200>
  414366:	mov    rsi,rax
  414369:	mov    rdi,rbx
  41436c:	call   413f20 <__sprintf_chk@plt+0x11940>
  414371:	mov    edx,0x1
  414376:	test   eax,eax
  414378:	jne    414380 <__sprintf_chk@plt+0x11da0>
  41437a:	mov    eax,edx
  41437c:	pop    rbx
  41437d:	ret    
  41437e:	xchg   ax,ax
  414380:	mov    rax,QWORD PTR [rbx+0x10]
  414384:	mov    rdi,rbx
  414387:	mov    DWORD PTR [rax+0x8],0x0
  41438e:	add    rax,0x10
  414392:	mov    QWORD PTR [rbx+0x10],rax
  414396:	mov    esi,0xfffffffe
  41439b:	call   403d90 <__sprintf_chk@plt+0x17b0>
  4143a0:	mov    edx,0x2
  4143a5:	mov    eax,edx
  4143a7:	pop    rbx
  4143a8:	ret    
  4143a9:	nop    DWORD PTR [rax+0x0]
  4143b0:	push   rbp
  4143b1:	mov    rbp,rsi
  4143b4:	push   rbx
  4143b5:	mov    rbx,rdi
  4143b8:	sub    rsp,0x8
  4143bc:	call   402330 <__errno_location@plt>
  4143c1:	mov    edi,DWORD PTR [rax]
  4143c3:	call   4025a0 <strerror@plt>
  4143c8:	mov    rcx,rax
  4143cb:	mov    rdx,rbp
  4143ce:	lea    rsi,[rip+0x3244]        # 417619 <__sprintf_chk@plt+0x15039>
  4143d5:	mov    rdi,rbx
  4143d8:	xor    eax,eax
  4143da:	call   40bd10 <__sprintf_chk@plt+0x9730>
  4143df:	xor    edx,edx
  4143e1:	mov    esi,0xffffffff
  4143e6:	mov    rdi,rbx
  4143e9:	call   412510 <__sprintf_chk@plt+0xff30>
  4143ee:	mov    rdx,rax
  4143f1:	mov    esi,0x1
  4143f6:	mov    rdi,rbx
  4143f9:	call   40c330 <__sprintf_chk@plt+0x9d50>
  4143fe:	xchg   ax,ax
  414400:	endbr64 
  414404:	push   r12
  414406:	push   rbp
  414407:	push   rbx
  414408:	mov    rbx,rdi
  41440b:	mov    rax,QWORD PTR [rdi+0x18]
  41440f:	cmp    rax,QWORD PTR [rdi+0x10]
  414413:	jae    414428 <__sprintf_chk@plt+0x11e48>
  414415:	lea    rdx,[rip+0x3bf4]        # 418010 <__sprintf_chk@plt+0x15a30>
  41441c:	cmp    rax,rdx
  41441f:	je     414428 <__sprintf_chk@plt+0x11e48>
  414421:	mov    eax,DWORD PTR [rax+0x8]
  414424:	test   eax,eax
  414426:	jg     414460 <__sprintf_chk@plt+0x11e80>
  414428:	mov    edx,0x1
  41442d:	mov    esi,0xffffd8ef
  414432:	mov    rdi,rbx
  414435:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  41443a:	mov    rdi,rbx
  41443d:	call   40d370 <__sprintf_chk@plt+0xad90>
  414442:	mov    rdi,rbx
  414445:	xor    edx,edx
  414447:	mov    esi,0x1
  41444c:	call   412490 <__sprintf_chk@plt+0xfeb0>
  414451:	pop    rbx
  414452:	pop    rbp
  414453:	mov    eax,0x1
  414458:	pop    r12
  41445a:	ret    
  41445b:	nop    DWORD PTR [rax+rax*1+0x0]
  414460:	xor    edx,edx
  414462:	mov    esi,0x1
  414467:	call   412720 <__sprintf_chk@plt+0x10140>
  41446c:	mov    rbp,rax
  41446f:	mov    rdi,rbx
  414472:	call   40e1d0 <__sprintf_chk@plt+0xbbf0>
  414477:	lea    rsi,[rip+0x3178]        # 4175f6 <__sprintf_chk@plt+0x15016>
  41447e:	mov    rdi,rbp
  414481:	mov    r12,rax
  414484:	call   402530 <fopen@plt>
  414489:	mov    QWORD PTR [r12],rax
  41448d:	test   rax,rax
  414490:	je     4144b8 <__sprintf_chk@plt+0x11ed8>
  414492:	mov    rsi,QWORD PTR [rbx+0x10]
  414496:	mov    rdi,rbx
  414499:	sub    rsi,QWORD PTR [rbx+0x18]
  41449d:	sar    rsi,0x4
  4144a1:	mov    edx,0x1
  4144a6:	call   412490 <__sprintf_chk@plt+0xfeb0>
  4144ab:	pop    rbx
  4144ac:	pop    rbp
  4144ad:	mov    eax,0x1
  4144b2:	pop    r12
  4144b4:	ret    
  4144b5:	nop    DWORD PTR [rax]
  4144b8:	mov    rsi,rbp
  4144bb:	mov    rdi,rbx
  4144be:	call   4143b0 <__sprintf_chk@plt+0x11dd0>
  4144c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4144ce:	xchg   ax,ax
  4144d0:	push   r14
  4144d2:	push   r13
  4144d4:	push   r12
  4144d6:	push   rbp
  4144d7:	mov    ebp,esi
  4144d9:	push   rbx
  4144da:	mov    rbx,rdi
  4144dd:	mov    rax,QWORD PTR [rdi+0x18]
  4144e1:	cmp    rax,QWORD PTR [rdi+0x10]
  4144e5:	jae    4144fa <__sprintf_chk@plt+0x11f1a>
  4144e7:	lea    r12,[rip+0x3b22]        # 418010 <__sprintf_chk@plt+0x15a30>
  4144ee:	cmp    rax,r12
  4144f1:	je     4144fa <__sprintf_chk@plt+0x11f1a>
  4144f3:	mov    eax,DWORD PTR [rax+0x8]
  4144f6:	test   eax,eax
  4144f8:	jg     414520 <__sprintf_chk@plt+0x11f40>
  4144fa:	mov    edx,ebp
  4144fc:	mov    rdi,rbx
  4144ff:	mov    esi,0xffffd8ef
  414504:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414509:	pop    rbx
  41450a:	pop    rbp
  41450b:	pop    r12
  41450d:	pop    r13
  41450f:	mov    eax,0x1
  414514:	pop    r14
  414516:	ret    
  414517:	nop    WORD PTR [rax+rax*1+0x0]
  414520:	mov    r13,rdx
  414523:	mov    esi,0x1
  414528:	xor    edx,edx
  41452a:	call   412510 <__sprintf_chk@plt+0xff30>
  41452f:	mov    r14,rax
  414532:	mov    rdi,rbx
  414535:	test   rax,rax
  414538:	je     414570 <__sprintf_chk@plt+0x11f90>
  41453a:	call   40e1d0 <__sprintf_chk@plt+0xbbf0>
  41453f:	mov    rsi,r13
  414542:	mov    rdi,r14
  414545:	mov    r12,rax
  414548:	call   402530 <fopen@plt>
  41454d:	mov    QWORD PTR [r12],rax
  414551:	test   rax,rax
  414554:	je     4145b0 <__sprintf_chk@plt+0x11fd0>
  414556:	mov    edx,ebp
  414558:	mov    esi,0xffffd8ef
  41455d:	mov    rdi,rbx
  414560:	call   409010 <__sprintf_chk@plt+0x6a30>
  414565:	jmp    4144fa <__sprintf_chk@plt+0x11f1a>
  414567:	nop    WORD PTR [rax+rax*1+0x0]
  414570:	call   40d370 <__sprintf_chk@plt+0xad90>
  414575:	mov    rdx,QWORD PTR [rbx+0x18]
  414579:	mov    rax,QWORD PTR [rbx+0x10]
  41457d:	cmp    rdx,rax
  414580:	jae    4145a0 <__sprintf_chk@plt+0x11fc0>
  414582:	mov    ecx,DWORD PTR [rdx+0x8]
  414585:	mov    rdx,QWORD PTR [rdx]
  414588:	add    rax,0x10
  41458c:	mov    QWORD PTR [rax-0x10],rdx
  414590:	mov    DWORD PTR [rax-0x8],ecx
  414593:	mov    QWORD PTR [rbx+0x10],rax
  414597:	jmp    414556 <__sprintf_chk@plt+0x11f76>
  414599:	nop    DWORD PTR [rax+0x0]
  4145a0:	xor    ecx,ecx
  4145a2:	mov    rdx,r12
  4145a5:	jmp    414585 <__sprintf_chk@plt+0x11fa5>
  4145a7:	nop    WORD PTR [rax+rax*1+0x0]
  4145b0:	mov    rsi,r14
  4145b3:	mov    rdi,rbx
  4145b6:	call   4143b0 <__sprintf_chk@plt+0x11dd0>
  4145bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4145c0:	endbr64 
  4145c4:	lea    rdx,[rip+0x2bb0]        # 41717b <__sprintf_chk@plt+0x14b9b>
  4145cb:	mov    esi,0x2
  4145d0:	jmp    4144d0 <__sprintf_chk@plt+0x11ef0>
  4145d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4145e0:	endbr64 
  4145e4:	lea    rdx,[rip+0x300b]        # 4175f6 <__sprintf_chk@plt+0x15016>
  4145eb:	mov    esi,0x1
  4145f0:	jmp    4144d0 <__sprintf_chk@plt+0x11ef0>
  4145f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414600:	push   rbp
  414601:	mov    edx,esi
  414603:	push   rbx
  414604:	mov    rbx,rdi
  414607:	sub    rsp,0x18
  41460b:	mov    rax,QWORD PTR [rdi+0x20]
  41460f:	mov    rcx,QWORD PTR [rax+0x70]
  414613:	cmp    QWORD PTR [rax+0x78],rcx
  414617:	jae    414640 <__sprintf_chk@plt+0x12060>
  414619:	mov    rbp,QWORD PTR [rbx+0x10]
  41461d:	mov    rdi,rbx
  414620:	xor    esi,esi
  414622:	call   408640 <__sprintf_chk@plt+0x6060>
  414627:	mov    QWORD PTR [rbp+0x0],rax
  41462b:	mov    DWORD PTR [rbp+0x8],0x5
  414632:	add    QWORD PTR [rbx+0x10],0x10
  414637:	add    rsp,0x18
  41463b:	pop    rbx
  41463c:	pop    rbp
  41463d:	ret    
  41463e:	xchg   ax,ax
  414640:	mov    DWORD PTR [rsp+0xc],esi
  414644:	call   40b6a0 <__sprintf_chk@plt+0x90c0>
  414649:	mov    edx,DWORD PTR [rsp+0xc]
  41464d:	jmp    414619 <__sprintf_chk@plt+0x12039>
  41464f:	nop
  414650:	endbr64 
  414654:	push   r12
  414656:	push   rbp
  414657:	push   rbx
  414658:	mov    rbx,rdi
  41465b:	mov    rcx,QWORD PTR [rdi+0x18]
  41465f:	mov    rax,QWORD PTR [rdi+0x10]
  414663:	lea    rdx,[rcx+0x10]
  414667:	cmp    rax,rdx
  41466a:	jae    414680 <__sprintf_chk@plt+0x120a0>
  41466c:	nop    DWORD PTR [rax+0x0]
  414670:	add    rax,0x10
  414674:	mov    DWORD PTR [rax-0x8],0x0
  41467b:	cmp    rdx,rax
  41467e:	ja     414670 <__sprintf_chk@plt+0x12090>
  414680:	mov    QWORD PTR [rbx+0x10],rdx
  414684:	xor    esi,esi
  414686:	mov    rdi,rbx
  414689:	call   40e120 <__sprintf_chk@plt+0xbb40>
  41468e:	mov    esi,0x1
  414693:	mov    rdi,rbx
  414696:	call   403e10 <__sprintf_chk@plt+0x1830>
  41469b:	test   eax,eax
  41469d:	jne    4146b0 <__sprintf_chk@plt+0x120d0>
  41469f:	pop    rbx
  4146a0:	pop    rbp
  4146a1:	mov    eax,0x1
  4146a6:	pop    r12
  4146a8:	ret    
  4146a9:	nop    DWORD PTR [rax+0x0]
  4146b0:	mov    rax,QWORD PTR [rbx+0x18]
  4146b4:	cmp    rax,QWORD PTR [rbx+0x10]
  4146b8:	jae    4146cc <__sprintf_chk@plt+0x120ec>
  4146ba:	lea    rdx,[rip+0x394f]        # 418010 <__sprintf_chk@plt+0x15a30>
  4146c1:	cmp    rax,rdx
  4146c4:	je     4146cc <__sprintf_chk@plt+0x120ec>
  4146c6:	cmp    DWORD PTR [rax+0x8],0x1
  4146ca:	je     414738 <__sprintf_chk@plt+0x12158>
  4146cc:	mov    rdi,rbx
  4146cf:	call   404150 <__sprintf_chk@plt+0x1b70>
  4146d4:	test   eax,eax
  4146d6:	je     414720 <__sprintf_chk@plt+0x12140>
  4146d8:	mov    esi,0xffffd8ed
  4146dd:	call   403e70 <__sprintf_chk@plt+0x1890>
  4146e2:	mov    esi,0xffffffff
  4146e7:	mov    rdi,rbx
  4146ea:	call   403e10 <__sprintf_chk@plt+0x1830>
  4146ef:	sub    QWORD PTR [rbx+0x10],0x10
  4146f4:	test   eax,eax
  4146f6:	je     414720 <__sprintf_chk@plt+0x12140>
  4146f8:	mov    rdi,rbx
  4146fb:	call   404150 <__sprintf_chk@plt+0x1b70>
  414700:	mov    rdi,rbx
  414703:	mov    esi,0x2
  414708:	call   404350 <__sprintf_chk@plt+0x1d70>
  41470d:	pop    rbx
  41470e:	pop    rbp
  41470f:	mov    eax,0x1
  414714:	pop    r12
  414716:	ret    
  414717:	nop    WORD PTR [rax+rax*1+0x0]
  414720:	lea    rdx,[rip+0x2f43]        # 41766a <__sprintf_chk@plt+0x1508a>
  414727:	mov    esi,0x1
  41472c:	mov    rdi,rbx
  41472f:	call   40c330 <__sprintf_chk@plt+0x9d50>
  414734:	nop    DWORD PTR [rax+0x0]
  414738:	xor    esi,esi
  41473a:	mov    rdi,rbx
  41473d:	call   414600 <__sprintf_chk@plt+0x12020>
  414742:	mov    rbp,QWORD PTR [rbx+0x10]
  414746:	mov    esi,0xffffd8ed
  41474b:	mov    rax,QWORD PTR [rbp-0x10]
  41474f:	mov    DWORD PTR [rbp+0x10],0x1
  414756:	mov    QWORD PTR [rbp+0x0],rax
  41475a:	mov    eax,DWORD PTR [rbp-0x8]
  41475d:	mov    DWORD PTR [rbp+0x18],0x1
  414764:	mov    DWORD PTR [rbp+0x8],eax
  414767:	lea    rax,[rbp+0x20]
  41476b:	mov    QWORD PTR [rbx+0x10],rax
  41476f:	mov    rdi,rbx
  414772:	call   403c60 <__sprintf_chk@plt+0x1680>
  414777:	mov    rsi,QWORD PTR [rax]
  41477a:	mov    rdx,rbp
  41477d:	mov    rdi,rbx
  414780:	mov    r12,rax
  414783:	call   408ee0 <__sprintf_chk@plt+0x6900>
  414788:	mov    rdx,QWORD PTR [rbp+0x10]
  41478c:	mov    QWORD PTR [rax],rdx
  41478f:	mov    edx,DWORD PTR [rbp+0x18]
  414792:	mov    DWORD PTR [rax+0x8],edx
  414795:	mov    rax,QWORD PTR [rbx+0x10]
  414799:	cmp    DWORD PTR [rax-0x8],0x3
  41479d:	jle    4147d0 <__sprintf_chk@plt+0x121f0>
  41479f:	mov    rax,QWORD PTR [rax-0x10]
  4147a3:	test   BYTE PTR [rax+0x9],0x3
  4147a7:	je     4147d0 <__sprintf_chk@plt+0x121f0>
  4147a9:	mov    rax,QWORD PTR [r12]
  4147ad:	movzx  edx,BYTE PTR [rax+0x9]
  4147b1:	test   dl,0x4
  4147b4:	je     4147d0 <__sprintf_chk@plt+0x121f0>
  4147b6:	mov    rcx,QWORD PTR [rbx+0x20]
  4147ba:	and    edx,0xfffffffb
  4147bd:	mov    BYTE PTR [rax+0x9],dl
  4147c0:	mov    rdx,QWORD PTR [rcx+0x40]
  4147c4:	mov    QWORD PTR [rax+0x30],rdx
  4147c8:	mov    QWORD PTR [rcx+0x40],rax
  4147cc:	nop    DWORD PTR [rax+0x0]
  4147d0:	sub    QWORD PTR [rbx+0x10],0x20
  4147d5:	jmp    414700 <__sprintf_chk@plt+0x12120>
  4147da:	nop    WORD PTR [rax+rax*1+0x0]
  4147e0:	endbr64 
  4147e4:	mov    rax,QWORD PTR [rdi+0x20]
  4147e8:	cmp    QWORD PTR [rax+0x50],0x0
  4147ed:	je     414810 <__sprintf_chk@plt+0x12230>
  4147ef:	push   rbx
  4147f0:	mov    rbx,rdi
  4147f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4147f8:	mov    rdi,rbx
  4147fb:	call   40b5a0 <__sprintf_chk@plt+0x8fc0>
  414800:	mov    rax,QWORD PTR [rbx+0x20]
  414804:	cmp    QWORD PTR [rax+0x50],0x0
  414809:	jne    4147f8 <__sprintf_chk@plt+0x12218>
  41480b:	pop    rbx
  41480c:	ret    
  41480d:	nop    DWORD PTR [rax]
  414810:	ret    
  414811:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41481c:	nop    DWORD PTR [rax+0x0]
  414820:	endbr64 
  414824:	mov    edx,DWORD PTR [rsi+0x8]
  414827:	mov    rsi,QWORD PTR [rsi]
  41482a:	jmp    404fe0 <__sprintf_chk@plt+0x2a00>
  41482f:	nop
  414830:	push   rbx
  414831:	mov    r9d,edx
  414834:	mov    rbx,rdi
  414837:	mov    rdx,QWORD PTR [rdi+0x18]
  41483b:	mov    rax,QWORD PTR [rdi+0x10]
  41483f:	lea    rcx,[rdx+0x10]
  414843:	cmp    rcx,rax
  414846:	jb     4148e0 <__sprintf_chk@plt+0x12300>
  41484c:	xor    r8d,r8d
  41484f:	lea    rcx,[rip+0x37ba]        # 418010 <__sprintf_chk@plt+0x15a30>
  414856:	mov    rdx,QWORD PTR [rcx]
  414859:	add    rax,0x10
  41485d:	mov    DWORD PTR [rax-0x8],r8d
  414861:	mov    QWORD PTR [rax-0x10],rdx
  414865:	mov    QWORD PTR [rbx+0x10],rax
  414869:	dec    esi
  41486b:	mov    rdi,rbx
  41486e:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  414873:	mov    rdx,QWORD PTR [rax]
  414876:	mov    rcx,QWORD PTR [rbx+0x10]
  41487a:	mov    eax,DWORD PTR [rax+0x8]
  41487d:	mov    QWORD PTR [rcx],rdx
  414880:	mov    DWORD PTR [rcx+0x8],eax
  414883:	add    rcx,0x10
  414887:	mov    QWORD PTR [rbx+0x10],rcx
  41488b:	lea    esi,[r9-0x2]
  41488f:	mov    rdi,rbx
  414892:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  414897:	mov    rdx,QWORD PTR [rax]
  41489a:	mov    rsi,QWORD PTR [rbx+0x10]
  41489e:	mov    eax,DWORD PTR [rax+0x8]
  4148a1:	mov    QWORD PTR [rsi],rdx
  4148a4:	mov    DWORD PTR [rsi+0x8],eax
  4148a7:	lea    rax,[rsi+0x10]
  4148ab:	mov    QWORD PTR [rbx+0x10],rax
  4148af:	sub    rsi,0x20
  4148b3:	mov    edx,0x1
  4148b8:	mov    rdi,rbx
  4148bb:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  4148c0:	mov    esi,0xffffffff
  4148c5:	mov    rdi,rbx
  4148c8:	call   403e10 <__sprintf_chk@plt+0x1830>
  4148cd:	sub    QWORD PTR [rbx+0x10],0x10
  4148d2:	mov    r8d,eax
  4148d5:	mov    eax,r8d
  4148d8:	pop    rbx
  4148d9:	ret    
  4148da:	nop    WORD PTR [rax+rax*1+0x0]
  4148e0:	lea    r10,[rip+0x3729]        # 418010 <__sprintf_chk@plt+0x15a30>
  4148e7:	cmp    rcx,r10
  4148ea:	je     414925 <__sprintf_chk@plt+0x12345>
  4148ec:	mov    r8d,DWORD PTR [rdx+0x18]
  4148f0:	test   r8d,r8d
  4148f3:	jne    414856 <__sprintf_chk@plt+0x12276>
  4148f9:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  4148fe:	mov    esi,r9d
  414901:	mov    rdi,rbx
  414904:	mov    r11,rax
  414907:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  41490c:	cmp    rax,r10
  41490f:	je     4148d5 <__sprintf_chk@plt+0x122f5>
  414911:	cmp    r11,r10
  414914:	je     4148d5 <__sprintf_chk@plt+0x122f5>
  414916:	mov    rdi,rbx
  414919:	mov    rdx,rax
  41491c:	mov    rsi,r11
  41491f:	pop    rbx
  414920:	jmp    40b290 <__sprintf_chk@plt+0x8cb0>
  414925:	xor    r8d,r8d
  414928:	jmp    414856 <__sprintf_chk@plt+0x12276>
  41492d:	nop    DWORD PTR [rax]
  414930:	cmp    esi,edx
  414932:	jge    414c2b <__sprintf_chk@plt+0x1264b>
  414938:	push   r15
  41493a:	push   r14
  41493c:	push   r13
  41493e:	mov    r13d,edx
  414941:	push   r12
  414943:	push   rbp
  414944:	mov    ebp,esi
  414946:	push   rbx
  414947:	mov    rbx,rdi
  41494a:	sub    rsp,0x18
  41494e:	mov    edx,ebp
  414950:	mov    esi,0x1
  414955:	mov    rdi,rbx
  414958:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  41495d:	mov    edx,r13d
  414960:	mov    esi,0x1
  414965:	mov    rdi,rbx
  414968:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  41496d:	mov    edx,0xfffffffe
  414972:	mov    esi,0xffffffff
  414977:	mov    rdi,rbx
  41497a:	call   414830 <__sprintf_chk@plt+0x12250>
  41497f:	test   eax,eax
  414981:	jne    414aec <__sprintf_chk@plt+0x1250c>
  414987:	sub    QWORD PTR [rbx+0x10],0x20
  41498c:	mov    r14d,r13d
  41498f:	sub    r14d,ebp
  414992:	cmp    r14d,0x1
  414996:	je     414c1c <__sprintf_chk@plt+0x1263c>
  41499c:	lea    eax,[r13+rbp*1+0x0]
  4149a1:	mov    r12d,eax
  4149a4:	shr    r12d,0x1f
  4149a8:	add    r12d,eax
  4149ab:	sar    r12d,1
  4149ae:	mov    edx,r12d
  4149b1:	mov    esi,0x1
  4149b6:	mov    rdi,rbx
  4149b9:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  4149be:	mov    edx,ebp
  4149c0:	mov    esi,0x1
  4149c5:	mov    rdi,rbx
  4149c8:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  4149cd:	mov    edx,0xffffffff
  4149d2:	mov    esi,0xfffffffe
  4149d7:	mov    rdi,rbx
  4149da:	call   414830 <__sprintf_chk@plt+0x12250>
  4149df:	test   eax,eax
  4149e1:	je     414b21 <__sprintf_chk@plt+0x12541>
  4149e7:	mov    edx,r12d
  4149ea:	mov    esi,0x1
  4149ef:	mov    rdi,rbx
  4149f2:	call   409010 <__sprintf_chk@plt+0x6a30>
  4149f7:	mov    edx,ebp
  4149f9:	mov    esi,0x1
  4149fe:	mov    rdi,rbx
  414a01:	call   409010 <__sprintf_chk@plt+0x6a30>
  414a06:	cmp    r14d,0x2
  414a0a:	je     414c1c <__sprintf_chk@plt+0x1263c>
  414a10:	mov    edx,r12d
  414a13:	mov    esi,0x1
  414a18:	mov    rdi,rbx
  414a1b:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414a20:	mov    rax,QWORD PTR [rbx+0x10]
  414a24:	mov    esi,0x1
  414a29:	mov    rdx,QWORD PTR [rax-0x10]
  414a2d:	add    rax,0x10
  414a31:	mov    QWORD PTR [rax-0x10],rdx
  414a35:	mov    edx,DWORD PTR [rax-0x18]
  414a38:	mov    rdi,rbx
  414a3b:	mov    DWORD PTR [rax-0x8],edx
  414a3e:	mov    QWORD PTR [rbx+0x10],rax
  414a42:	lea    eax,[r13-0x1]
  414a46:	mov    edx,eax
  414a48:	mov    r15d,eax
  414a4b:	mov    DWORD PTR [rsp+0xc],eax
  414a4f:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414a54:	mov    edx,r12d
  414a57:	mov    esi,0x1
  414a5c:	mov    rdi,rbx
  414a5f:	call   409010 <__sprintf_chk@plt+0x6a30>
  414a64:	mov    edx,r15d
  414a67:	mov    esi,0x1
  414a6c:	mov    rdi,rbx
  414a6f:	mov    r12d,r15d
  414a72:	call   409010 <__sprintf_chk@plt+0x6a30>
  414a77:	mov    r15d,ebp
  414a7a:	lea    r14d,[r15+0x1]
  414a7e:	mov    edx,r14d
  414a81:	mov    esi,0x1
  414a86:	mov    rdi,rbx
  414a89:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414a8e:	mov    edx,0xfffffffe
  414a93:	mov    esi,0xffffffff
  414a98:	mov    rdi,rbx
  414a9b:	call   414830 <__sprintf_chk@plt+0x12250>
  414aa0:	test   eax,eax
  414aa2:	je     414ab3 <__sprintf_chk@plt+0x124d3>
  414aa4:	cmp    r13d,r14d
  414aa7:	jl     414b10 <__sprintf_chk@plt+0x12530>
  414aa9:	sub    QWORD PTR [rbx+0x10],0x10
  414aae:	mov    r15d,r14d
  414ab1:	jmp    414a7a <__sprintf_chk@plt+0x1249a>
  414ab3:	dec    r12d
  414ab6:	mov    edx,r12d
  414ab9:	mov    esi,0x1
  414abe:	mov    rdi,rbx
  414ac1:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414ac6:	mov    edx,0xffffffff
  414acb:	mov    esi,0xfffffffd
  414ad0:	mov    rdi,rbx
  414ad3:	call   414830 <__sprintf_chk@plt+0x12250>
  414ad8:	test   eax,eax
  414ada:	je     414b7b <__sprintf_chk@plt+0x1259b>
  414ae0:	cmp    ebp,r12d
  414ae3:	jg     414b10 <__sprintf_chk@plt+0x12530>
  414ae5:	sub    QWORD PTR [rbx+0x10],0x10
  414aea:	jmp    414ab3 <__sprintf_chk@plt+0x124d3>
  414aec:	mov    edx,ebp
  414aee:	mov    rdi,rbx
  414af1:	mov    esi,0x1
  414af6:	call   409010 <__sprintf_chk@plt+0x6a30>
  414afb:	mov    edx,r13d
  414afe:	mov    esi,0x1
  414b03:	mov    rdi,rbx
  414b06:	call   409010 <__sprintf_chk@plt+0x6a30>
  414b0b:	jmp    41498c <__sprintf_chk@plt+0x123ac>
  414b10:	lea    rsi,[rip+0x38a9]        # 4183c0 <__sprintf_chk@plt+0x15de0>
  414b17:	mov    rdi,rbx
  414b1a:	xor    eax,eax
  414b1c:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  414b21:	sub    QWORD PTR [rbx+0x10],0x10
  414b26:	mov    edx,r13d
  414b29:	mov    esi,0x1
  414b2e:	mov    rdi,rbx
  414b31:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414b36:	mov    edx,0xfffffffe
  414b3b:	mov    esi,0xffffffff
  414b40:	mov    rdi,rbx
  414b43:	call   414830 <__sprintf_chk@plt+0x12250>
  414b48:	test   eax,eax
  414b4a:	je     414b71 <__sprintf_chk@plt+0x12591>
  414b4c:	mov    edx,r12d
  414b4f:	mov    rdi,rbx
  414b52:	mov    esi,0x1
  414b57:	call   409010 <__sprintf_chk@plt+0x6a30>
  414b5c:	mov    edx,r13d
  414b5f:	mov    esi,0x1
  414b64:	mov    rdi,rbx
  414b67:	call   409010 <__sprintf_chk@plt+0x6a30>
  414b6c:	jmp    414a06 <__sprintf_chk@plt+0x12426>
  414b71:	sub    QWORD PTR [rbx+0x10],0x20
  414b76:	jmp    414a06 <__sprintf_chk@plt+0x12426>
  414b7b:	cmp    r14d,r12d
  414b7e:	jg     414ba5 <__sprintf_chk@plt+0x125c5>
  414b80:	mov    edx,r14d
  414b83:	mov    rdi,rbx
  414b86:	mov    esi,0x1
  414b8b:	call   409010 <__sprintf_chk@plt+0x6a30>
  414b90:	mov    edx,r12d
  414b93:	mov    esi,0x1
  414b98:	mov    rdi,rbx
  414b9b:	call   409010 <__sprintf_chk@plt+0x6a30>
  414ba0:	jmp    414aae <__sprintf_chk@plt+0x124ce>
  414ba5:	sub    QWORD PTR [rbx+0x10],0x30
  414baa:	mov    r10d,DWORD PTR [rsp+0xc]
  414baf:	mov    esi,0x1
  414bb4:	mov    edx,r10d
  414bb7:	mov    rdi,rbx
  414bba:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414bbf:	mov    edx,r14d
  414bc2:	mov    esi,0x1
  414bc7:	mov    rdi,rbx
  414bca:	call   403ea0 <__sprintf_chk@plt+0x18c0>
  414bcf:	mov    edx,r10d
  414bd2:	mov    esi,0x1
  414bd7:	mov    rdi,rbx
  414bda:	call   409010 <__sprintf_chk@plt+0x6a30>
  414bdf:	mov    edx,r14d
  414be2:	mov    esi,0x1
  414be7:	mov    rdi,rbx
  414bea:	call   409010 <__sprintf_chk@plt+0x6a30>
  414bef:	mov    edx,r14d
  414bf2:	mov    eax,r13d
  414bf5:	sub    edx,ebp
  414bf7:	sub    eax,r14d
  414bfa:	lea    esi,[r15+0x2]
  414bfe:	cmp    edx,eax
  414c00:	jge    414c2c <__sprintf_chk@plt+0x1264c>
  414c02:	mov    eax,ebp
  414c04:	mov    ebp,esi
  414c06:	mov    esi,eax
  414c08:	mov    edx,r15d
  414c0b:	mov    rdi,rbx
  414c0e:	call   414930 <__sprintf_chk@plt+0x12350>
  414c13:	cmp    ebp,r13d
  414c16:	jl     41494e <__sprintf_chk@plt+0x1236e>
  414c1c:	add    rsp,0x18
  414c20:	pop    rbx
  414c21:	pop    rbp
  414c22:	pop    r12
  414c24:	pop    r13
  414c26:	pop    r14
  414c28:	pop    r15
  414c2a:	ret    
  414c2b:	ret    
  414c2c:	mov    eax,r13d
  414c2f:	mov    r13d,r15d
  414c32:	mov    r15d,eax
  414c35:	jmp    414c08 <__sprintf_chk@plt+0x12628>
  414c37:	nop    WORD PTR [rax+rax*1+0x0]
  414c40:	endbr64 
  414c44:	push   rbp
  414c45:	mov    edx,0x5
  414c4a:	mov    esi,0x1
  414c4f:	push   rbx
  414c50:	mov    rbx,rdi
  414c53:	sub    rsp,0x8
  414c57:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  414c5c:	mov    esi,0x1
  414c61:	mov    rdi,rbx
  414c64:	call   407900 <__sprintf_chk@plt+0x5320>
  414c69:	lea    rdx,[rip+0x2aee]        # 41775e <__sprintf_chk@plt+0x1517e>
  414c70:	mov    esi,0x28
  414c75:	mov    rdi,rbx
  414c78:	mov    rbp,rax
  414c7b:	call   40c250 <__sprintf_chk@plt+0x9c70>
  414c80:	mov    rdx,QWORD PTR [rbx+0x18]
  414c84:	mov    rax,QWORD PTR [rbx+0x10]
  414c88:	lea    rcx,[rdx+0x10]
  414c8c:	cmp    rcx,rax
  414c8f:	jae    414cbe <__sprintf_chk@plt+0x126de>
  414c91:	lea    rsi,[rip+0x3378]        # 418010 <__sprintf_chk@plt+0x15a30>
  414c98:	cmp    rcx,rsi
  414c9b:	je     414cbe <__sprintf_chk@plt+0x126de>
  414c9d:	mov    ecx,DWORD PTR [rdx+0x18]
  414ca0:	test   ecx,ecx
  414ca2:	jle    414cbe <__sprintf_chk@plt+0x126de>
  414ca4:	mov    edx,0x6
  414ca9:	mov    esi,0x2
  414cae:	mov    rdi,rbx
  414cb1:	call   40c9e0 <__sprintf_chk@plt+0xa400>
  414cb6:	mov    rax,QWORD PTR [rbx+0x10]
  414cba:	mov    rdx,QWORD PTR [rbx+0x18]
  414cbe:	add    rdx,0x20
  414cc2:	cmp    rdx,rax
  414cc5:	jbe    414ce0 <__sprintf_chk@plt+0x12700>
  414cc7:	nop    WORD PTR [rax+rax*1+0x0]
  414cd0:	mov    DWORD PTR [rax+0x8],0x0
  414cd7:	add    rax,0x10
  414cdb:	cmp    rdx,rax
  414cde:	ja     414cd0 <__sprintf_chk@plt+0x126f0>
  414ce0:	mov    QWORD PTR [rbx+0x10],rdx
  414ce4:	mov    rdi,rbx
  414ce7:	mov    edx,ebp
  414ce9:	mov    esi,0x1
  414cee:	call   414930 <__sprintf_chk@plt+0x12350>
  414cf3:	add    rsp,0x8
  414cf7:	pop    rbx
  414cf8:	xor    eax,eax
  414cfa:	pop    rbp
  414cfb:	ret    
  414cfc:	nop    DWORD PTR [rax+0x0]
  414d00:	push   r15
  414d02:	push   r14
  414d04:	push   r13
  414d06:	push   r12
  414d08:	mov    r12,rdi
  414d0b:	push   rbp
  414d0c:	mov    rbp,rsi
  414d0f:	push   rbx
  414d10:	mov    ebx,0x64
  414d15:	sub    rsp,0x48
  414d19:	mov    QWORD PTR [rsp+0x10],rdx
  414d1e:	mov    QWORD PTR [rsp+0x18],rcx
  414d23:	movsxd r8,DWORD PTR [rsi+0x8]
  414d27:	lea    r13,[rsp+0x20]
  414d2c:	mov    rax,QWORD PTR fs:0x28
  414d35:	mov    QWORD PTR [rsp+0x38],rax
  414d3a:	xor    eax,eax
  414d3c:	lea    rax,[rdi+0x20]
  414d40:	mov    QWORD PTR [rsp+0x8],rax
  414d45:	jmp    414d98 <__sprintf_chk@plt+0x127b8>
  414d47:	nop    WORD PTR [rax+rax*1+0x0]
  414d50:	mov    rdi,QWORD PTR [rsp+0x8]
  414d55:	mov    ecx,0x1
  414d5a:	mov    edx,r8d
  414d5d:	mov    rsi,r14
  414d60:	call   4039d0 <__sprintf_chk@plt+0x13f0>
  414d65:	mov    r15,rax
  414d68:	mov    eax,DWORD PTR [rax+0x8]
  414d6b:	test   eax,eax
  414d6d:	je     414e98 <__sprintf_chk@plt+0x128b8>
  414d73:	movsxd r8,eax
  414d76:	mov    rax,QWORD PTR [r15]
  414d79:	cmp    r8d,0x6
  414d7d:	je     414e0a <__sprintf_chk@plt+0x1282a>
  414d83:	mov    QWORD PTR [rsp+0x20],rax
  414d88:	mov    DWORD PTR [rsp+0x28],r8d
  414d8d:	mov    rbp,r13
  414d90:	dec    ebx
  414d92:	je     414f2f <__sprintf_chk@plt+0x1294f>
  414d98:	mov    r14,QWORD PTR [rbp+0x0]
  414d9c:	cmp    r8d,0x5
  414da0:	jne    414d50 <__sprintf_chk@plt+0x12770>
  414da2:	mov    rdx,QWORD PTR [rsp+0x10]
  414da7:	mov    rsi,r14
  414daa:	mov    rdi,r12
  414dad:	call   408ee0 <__sprintf_chk@plt+0x6900>
  414db2:	mov    r8,rax
  414db5:	mov    eax,DWORD PTR [rax+0x8]
  414db8:	test   eax,eax
  414dba:	jne    414ec0 <__sprintf_chk@plt+0x128e0>
  414dc0:	mov    rdi,QWORD PTR [r14+0x10]
  414dc4:	test   rdi,rdi
  414dc7:	je     414ec0 <__sprintf_chk@plt+0x128e0>
  414dcd:	test   BYTE PTR [rdi+0xa],0x2
  414dd1:	jne    414ec0 <__sprintf_chk@plt+0x128e0>
  414dd7:	mov    rax,QWORD PTR [r12+0x20]
  414ddc:	mov    esi,0x1
  414de1:	mov    rdx,QWORD PTR [rax+0x130]
  414de8:	call   402ba0 <__sprintf_chk@plt+0x5c0>
  414ded:	mov    r15,rax
  414df0:	test   rax,rax
  414df3:	je     414ec0 <__sprintf_chk@plt+0x128e0>
  414df9:	movsxd r8,DWORD PTR [r15+0x8]
  414dfd:	mov    rax,QWORD PTR [r15]
  414e00:	cmp    r8d,0x6
  414e04:	jne    414d83 <__sprintf_chk@plt+0x127a3>
  414e0a:	mov    rsi,QWORD PTR [r12+0x10]
  414e0f:	mov    rcx,QWORD PTR [rsp+0x10]
  414e14:	mov    QWORD PTR [rsi],rax
  414e17:	mov    DWORD PTR [rsi+0x8],0x6
  414e1e:	mov    rbx,QWORD PTR [rsp+0x18]
  414e23:	mov    rax,QWORD PTR [rbp+0x0]
  414e27:	mov    QWORD PTR [rsi+0x10],rax
  414e2b:	mov    eax,DWORD PTR [rbp+0x8]
  414e2e:	mov    DWORD PTR [rsi+0x18],eax
  414e31:	mov    rax,QWORD PTR [rcx]
  414e34:	mov    QWORD PTR [rsi+0x20],rax
  414e38:	mov    eax,DWORD PTR [rcx+0x8]
  414e3b:	mov    DWORD PTR [rsi+0x28],eax
  414e3e:	mov    rax,QWORD PTR [rbx]
  414e41:	mov    QWORD PTR [rsi+0x30],rax
  414e45:	mov    eax,DWORD PTR [rbx+0x8]
  414e48:	mov    DWORD PTR [rsi+0x38],eax
  414e4b:	mov    rax,QWORD PTR [r12+0x38]
  414e50:	sub    rax,rsi
  414e53:	cmp    rax,0x40
  414e57:	jle    414f5e <__sprintf_chk@plt+0x1297e>
  414e5d:	lea    rax,[rsi+0x40]
  414e61:	mov    QWORD PTR [r12+0x10],rax
  414e66:	mov    rax,QWORD PTR [rsp+0x38]
  414e6b:	xor    rax,QWORD PTR fs:0x28
  414e74:	jne    414f75 <__sprintf_chk@plt+0x12995>
  414e7a:	add    rsp,0x48
  414e7e:	pop    rbx
  414e7f:	pop    rbp
  414e80:	mov    rdi,r12
  414e83:	pop    r12
  414e85:	pop    r13
  414e87:	pop    r14
  414e89:	xor    edx,edx
  414e8b:	pop    r15
  414e8d:	jmp    404fe0 <__sprintf_chk@plt+0x2a00>
  414e92:	nop    WORD PTR [rax+rax*1+0x0]
  414e98:	lea    rax,[rip+0x9f01]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  414e9f:	mov    rcx,QWORD PTR [rax+r8*8]
  414ea3:	lea    rdx,[rip+0x2530]        # 4173da <__sprintf_chk@plt+0x14dfa>
  414eaa:	lea    rsi,[rip+0x2156]        # 417007 <__sprintf_chk@plt+0x14a27>
  414eb1:	mov    rdi,r12
  414eb4:	xor    eax,eax
  414eb6:	call   407190 <__sprintf_chk@plt+0x4bb0>
  414ebb:	jmp    414df9 <__sprintf_chk@plt+0x12819>
  414ec0:	mov    rbx,QWORD PTR [rsp+0x18]
  414ec5:	mov    rax,QWORD PTR [rbx]
  414ec8:	mov    QWORD PTR [r8],rax
  414ecb:	mov    eax,DWORD PTR [rbx+0x8]
  414ece:	mov    DWORD PTR [r8+0x8],eax
  414ed2:	mov    BYTE PTR [r14+0xa],0x0
  414ed7:	cmp    DWORD PTR [rbx+0x8],0x3
  414edb:	jle    414f10 <__sprintf_chk@plt+0x12930>
  414edd:	mov    rax,QWORD PTR [rbx]
  414ee0:	test   BYTE PTR [rax+0x9],0x3
  414ee4:	je     414f10 <__sprintf_chk@plt+0x12930>
  414ee6:	movzx  eax,BYTE PTR [r14+0x9]
  414eeb:	test   al,0x4
  414eed:	je     414f10 <__sprintf_chk@plt+0x12930>
  414eef:	mov    rdx,QWORD PTR [r12+0x20]
  414ef4:	and    eax,0xfffffffb
  414ef7:	mov    BYTE PTR [r14+0x9],al
  414efb:	mov    rax,QWORD PTR [rdx+0x40]
  414eff:	mov    QWORD PTR [r14+0x30],rax
  414f03:	mov    QWORD PTR [rdx+0x40],r14
  414f07:	nop    WORD PTR [rax+rax*1+0x0]
  414f10:	mov    rax,QWORD PTR [rsp+0x38]
  414f15:	xor    rax,QWORD PTR fs:0x28
  414f1e:	jne    414f75 <__sprintf_chk@plt+0x12995>
  414f20:	add    rsp,0x48
  414f24:	pop    rbx
  414f25:	pop    rbp
  414f26:	pop    r12
  414f28:	pop    r13
  414f2a:	pop    r14
  414f2c:	pop    r15
  414f2e:	ret    
  414f2f:	mov    rax,QWORD PTR [rsp+0x38]
  414f34:	xor    rax,QWORD PTR fs:0x28
  414f3d:	jne    414f75 <__sprintf_chk@plt+0x12995>
  414f3f:	add    rsp,0x48
  414f43:	pop    rbx
  414f44:	pop    rbp
  414f45:	mov    rdi,r12
  414f48:	pop    r12
  414f4a:	pop    r13
  414f4c:	pop    r14
  414f4e:	lea    rsi,[rip+0x272f]        # 417684 <__sprintf_chk@plt+0x150a4>
  414f55:	xor    eax,eax
  414f57:	pop    r15
  414f59:	jmp    407190 <__sprintf_chk@plt+0x4bb0>
  414f5e:	mov    esi,0x4
  414f63:	mov    rdi,r12
  414f66:	call   408180 <__sprintf_chk@plt+0x5ba0>
  414f6b:	mov    rsi,QWORD PTR [r12+0x10]
  414f70:	jmp    414e5d <__sprintf_chk@plt+0x1287d>
  414f75:	call   4023e0 <__stack_chk_fail@plt>
  414f7a:	nop    WORD PTR [rax+rax*1+0x0]
  414f80:	push   r12
  414f82:	push   rbp
  414f83:	mov    rbp,rdx
  414f86:	push   rbx
  414f87:	mov    rbx,rdi
  414f8a:	sub    rsp,0x20
  414f8e:	mov    rax,QWORD PTR fs:0x28
  414f97:	mov    QWORD PTR [rsp+0x18],rax
  414f9c:	xor    eax,eax
  414f9e:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  414fa3:	mov    rdi,rbp
  414fa6:	mov    r12,rax
  414fa9:	call   4023d0 <strlen@plt>
  414fae:	mov    rdx,rax
  414fb1:	mov    rsi,rbp
  414fb4:	mov    rdi,rbx
  414fb7:	call   407490 <__sprintf_chk@plt+0x4eb0>
  414fbc:	mov    QWORD PTR [rsp],rax
  414fc0:	mov    rax,QWORD PTR [rbx+0x10]
  414fc4:	mov    rdx,rsp
  414fc7:	lea    rcx,[rax-0x10]
  414fcb:	mov    rsi,r12
  414fce:	mov    rdi,rbx
  414fd1:	mov    DWORD PTR [rsp+0x8],0x4
  414fd9:	call   414d00 <__sprintf_chk@plt+0x12720>
  414fde:	sub    QWORD PTR [rbx+0x10],0x10
  414fe3:	mov    rax,QWORD PTR [rsp+0x18]
  414fe8:	xor    rax,QWORD PTR fs:0x28
  414ff1:	jne    414ffc <__sprintf_chk@plt+0x12a1c>
  414ff3:	add    rsp,0x20
  414ff7:	pop    rbx
  414ff8:	pop    rbp
  414ff9:	pop    r12
  414ffb:	ret    
  414ffc:	call   4023e0 <__stack_chk_fail@plt>
  415001:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41500c:	nop    DWORD PTR [rax+0x0]
  415010:	push   r13
  415012:	mov    r13,rsi
  415015:	push   r12
  415017:	mov    r12d,edx
  41501a:	push   rbp
  41501b:	mov    rbp,rcx
  41501e:	push   rbx
  41501f:	mov    rbx,rdi
  415022:	sub    rsp,0x8
  415026:	call   40e1d0 <__sprintf_chk@plt+0xbbf0>
  41502b:	mov    QWORD PTR [rax],r13
  41502e:	test   r12d,r12d
  415031:	je     41505d <__sprintf_chk@plt+0x12a7d>
  415033:	mov    rax,QWORD PTR [rbx+0x10]
  415037:	mov    esi,0xffffd8ef
  41503c:	mov    rdx,QWORD PTR [rax-0x10]
  415040:	add    rax,0x10
  415044:	mov    QWORD PTR [rax-0x10],rdx
  415048:	mov    edx,DWORD PTR [rax-0x18]
  41504b:	mov    rdi,rbx
  41504e:	mov    DWORD PTR [rax-0x8],edx
  415051:	mov    QWORD PTR [rbx+0x10],rax
  415055:	mov    edx,r12d
  415058:	call   409010 <__sprintf_chk@plt+0x6a30>
  41505d:	mov    rax,QWORD PTR [rbx+0x10]
  415061:	mov    rdi,rbx
  415064:	mov    rdx,QWORD PTR [rax-0x20]
  415068:	add    rax,0x10
  41506c:	mov    QWORD PTR [rax-0x10],rdx
  415070:	mov    edx,DWORD PTR [rax-0x28]
  415073:	mov    DWORD PTR [rax-0x8],edx
  415076:	mov    QWORD PTR [rbx+0x10],rax
  41507a:	call   404470 <__sprintf_chk@plt+0x1e90>
  41507f:	add    rsp,0x8
  415083:	mov    rdi,rbx
  415086:	pop    rbx
  415087:	mov    rdx,rbp
  41508a:	pop    rbp
  41508b:	pop    r12
  41508d:	mov    esi,0xfffffffd
  415092:	pop    r13
  415094:	jmp    414f80 <__sprintf_chk@plt+0x129a0>
  415099:	nop    DWORD PTR [rax+0x0]
  4150a0:	push   rbp
  4150a1:	mov    rbp,rsi
  4150a4:	mov    esi,0x1
  4150a9:	push   rbx
  4150aa:	mov    rbx,rdi
  4150ad:	sub    rsp,0x8
  4150b1:	call   414600 <__sprintf_chk@plt+0x12020>
  4150b6:	mov    rsi,rbp
  4150b9:	mov    rdi,rbx
  4150bc:	xor    edx,edx
  4150be:	call   412390 <__sprintf_chk@plt+0xfdb0>
  4150c3:	add    rsp,0x8
  4150c7:	mov    rdi,rbx
  4150ca:	pop    rbx
  4150cb:	lea    rdx,[rip+0x218d]        # 41725f <__sprintf_chk@plt+0x14c7f>
  4150d2:	mov    esi,0xfffffffe
  4150d7:	pop    rbp
  4150d8:	jmp    414f80 <__sprintf_chk@plt+0x129a0>
  4150dd:	nop    DWORD PTR [rax]
  4150e0:	push   r15
  4150e2:	mov    r15d,ecx
  4150e5:	push   r14
  4150e7:	push   r13
  4150e9:	lea    r13,[rip+0x2f20]        # 418010 <__sprintf_chk@plt+0x15a30>
  4150f0:	push   r12
  4150f2:	push   rbp
  4150f3:	mov    rbp,rdx
  4150f6:	push   rbx
  4150f7:	mov    rbx,rdi
  4150fa:	sub    rsp,0x8
  4150fe:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  415103:	mov    rcx,QWORD PTR [rax]
  415106:	mov    rdx,QWORD PTR [rbx+0x10]
  41510a:	mov    eax,DWORD PTR [rax+0x8]
  41510d:	mov    QWORD PTR [rdx],rcx
  415110:	mov    DWORD PTR [rdx+0x8],eax
  415113:	add    rdx,0x10
  415117:	mov    QWORD PTR [rbx+0x10],rdx
  41511b:	jmp    415144 <__sprintf_chk@plt+0x12b64>
  41511d:	nop    DWORD PTR [rax]
  415120:	cmp    ecx,0x5
  415123:	jne    415220 <__sprintf_chk@plt+0x12c40>
  415129:	mov    esi,0xfffffffe
  41512e:	mov    rdi,rbx
  415131:	call   403d50 <__sprintf_chk@plt+0x1770>
  415136:	cmp    BYTE PTR [r14],0x2e
  41513a:	lea    rbp,[r14+0x1]
  41513e:	jne    415208 <__sprintf_chk@plt+0x12c28>
  415144:	mov    esi,0x2e
  415149:	mov    rdi,rbp
  41514c:	call   4023f0 <strchr@plt>
  415151:	mov    r14,rax
  415154:	test   rax,rax
  415157:	je     4151f0 <__sprintf_chk@plt+0x12c10>
  41515d:	mov    r12,r14
  415160:	sub    r12,rbp
  415163:	mov    rdx,r12
  415166:	mov    rsi,rbp
  415169:	mov    rdi,rbx
  41516c:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  415171:	mov    esi,0xfffffffe
  415176:	mov    rdi,rbx
  415179:	call   403e70 <__sprintf_chk@plt+0x1890>
  41517e:	mov    rdx,QWORD PTR [rbx+0x10]
  415182:	lea    rsi,[rdx-0x10]
  415186:	cmp    rsi,r13
  415189:	je     415220 <__sprintf_chk@plt+0x12c40>
  41518f:	mov    ecx,DWORD PTR [rdx-0x8]
  415192:	test   ecx,ecx
  415194:	jne    415120 <__sprintf_chk@plt+0x12b40>
  415196:	mov    QWORD PTR [rbx+0x10],rsi
  41519a:	mov    esi,0x1
  41519f:	mov    rdi,rbx
  4151a2:	cmp    BYTE PTR [r14],0x2e
  4151a6:	cmovne esi,r15d
  4151aa:	call   414600 <__sprintf_chk@plt+0x12020>
  4151af:	mov    rdx,r12
  4151b2:	mov    rsi,rbp
  4151b5:	mov    rdi,rbx
  4151b8:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4151bd:	mov    rcx,QWORD PTR [rbx+0x10]
  4151c1:	mov    rdi,rbx
  4151c4:	mov    rdx,QWORD PTR [rcx-0x20]
  4151c8:	lea    rsi,[rcx-0x30]
  4151cc:	mov    QWORD PTR [rcx],rdx
  4151cf:	mov    edx,DWORD PTR [rcx-0x18]
  4151d2:	mov    DWORD PTR [rcx+0x8],edx
  4151d5:	lea    rdx,[rcx+0x10]
  4151d9:	mov    QWORD PTR [rbx+0x10],rdx
  4151dd:	lea    rdx,[rcx-0x10]
  4151e1:	call   414d00 <__sprintf_chk@plt+0x12720>
  4151e6:	sub    QWORD PTR [rbx+0x10],0x20
  4151eb:	jmp    415129 <__sprintf_chk@plt+0x12b49>
  4151f0:	mov    rdi,rbp
  4151f3:	call   4023d0 <strlen@plt>
  4151f8:	lea    r14,[rbp+rax*1+0x0]
  4151fd:	jmp    41515d <__sprintf_chk@plt+0x12b7d>
  415202:	nop    WORD PTR [rax+rax*1+0x0]
  415208:	add    rsp,0x8
  41520c:	pop    rbx
  41520d:	pop    rbp
  41520e:	pop    r12
  415210:	pop    r13
  415212:	pop    r14
  415214:	xor    eax,eax
  415216:	pop    r15
  415218:	ret    
  415219:	nop    DWORD PTR [rax+0x0]
  415220:	sub    rdx,0x20
  415224:	mov    QWORD PTR [rbx+0x10],rdx
  415228:	add    rsp,0x8
  41522c:	pop    rbx
  41522d:	mov    rax,rbp
  415230:	pop    rbp
  415231:	pop    r12
  415233:	pop    r13
  415235:	pop    r14
  415237:	pop    r15
  415239:	ret    
  41523a:	nop    WORD PTR [rax+rax*1+0x0]
  415240:	push   r13
  415242:	push   r12
  415244:	push   rbp
  415245:	mov    rbp,rdi
  415248:	push   rbx
  415249:	mov    rbx,rdx
  41524c:	sub    rsp,0x8
  415250:	mov    rax,QWORD PTR [rdx]
  415253:	test   rsi,rsi
  415256:	je     415337 <__sprintf_chk@plt+0x12d57>
  41525c:	mov    r13,rsi
  41525f:	test   rax,rax
  415262:	je     415379 <__sprintf_chk@plt+0x12d99>
  415268:	mov    rax,rdx
  41526b:	xor    r12d,r12d
  41526e:	xchg   ax,ax
  415270:	add    rax,0x10
  415274:	inc    r12d
  415277:	cmp    QWORD PTR [rax],0x0
  41527b:	jne    415270 <__sprintf_chk@plt+0x12c90>
  41527d:	mov    ecx,0x1
  415282:	lea    rdx,[rip+0x240c]        # 417695 <__sprintf_chk@plt+0x150b5>
  415289:	mov    esi,0xffffd8f0
  41528e:	mov    rdi,rbp
  415291:	call   4150e0 <__sprintf_chk@plt+0x12b00>
  415296:	mov    rdx,r13
  415299:	mov    esi,0xffffffff
  41529e:	mov    rdi,rbp
  4152a1:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  4152a6:	mov    rax,QWORD PTR [rbp+0x10]
  4152aa:	lea    rcx,[rip+0x2d5f]        # 418010 <__sprintf_chk@plt+0x15a30>
  4152b1:	lea    rdx,[rax-0x10]
  4152b5:	cmp    rdx,rcx
  4152b8:	je     4152c0 <__sprintf_chk@plt+0x12ce0>
  4152ba:	cmp    DWORD PTR [rax-0x8],0x5
  4152be:	je     41531a <__sprintf_chk@plt+0x12d3a>
  4152c0:	mov    QWORD PTR [rbp+0x10],rdx
  4152c4:	mov    ecx,r12d
  4152c7:	mov    rdx,r13
  4152ca:	mov    esi,0xffffd8ee
  4152cf:	mov    rdi,rbp
  4152d2:	call   4150e0 <__sprintf_chk@plt+0x12b00>
  4152d7:	test   rax,rax
  4152da:	je     4152f0 <__sprintf_chk@plt+0x12d10>
  4152dc:	mov    rdx,r13
  4152df:	lea    rsi,[rip+0x23b7]        # 41769d <__sprintf_chk@plt+0x150bd>
  4152e6:	mov    rdi,rbp
  4152e9:	xor    eax,eax
  4152eb:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  4152f0:	mov    rax,QWORD PTR [rbp+0x10]
  4152f4:	mov    esi,0xfffffffd
  4152f9:	mov    rdx,QWORD PTR [rax-0x10]
  4152fd:	add    rax,0x10
  415301:	mov    QWORD PTR [rax-0x10],rdx
  415305:	mov    edx,DWORD PTR [rax-0x18]
  415308:	mov    rdi,rbp
  41530b:	mov    DWORD PTR [rax-0x8],edx
  41530e:	mov    QWORD PTR [rbp+0x10],rax
  415312:	mov    rdx,r13
  415315:	call   414f80 <__sprintf_chk@plt+0x129a0>
  41531a:	mov    esi,0xfffffffe
  41531f:	mov    rdi,rbp
  415322:	call   403d50 <__sprintf_chk@plt+0x1770>
  415327:	mov    esi,0xffffffff
  41532c:	mov    rdi,rbp
  41532f:	call   403d90 <__sprintf_chk@plt+0x17b0>
  415334:	mov    rax,QWORD PTR [rbx]
  415337:	mov    r12d,0xfffffffe
  41533d:	test   rax,rax
  415340:	je     41536e <__sprintf_chk@plt+0x12d8e>
  415342:	nop    WORD PTR [rax+rax*1+0x0]
  415348:	mov    rsi,QWORD PTR [rbx+0x8]
  41534c:	xor    edx,edx
  41534e:	mov    rdi,rbp
  415351:	call   412390 <__sprintf_chk@plt+0xfdb0>
  415356:	mov    rdx,QWORD PTR [rbx]
  415359:	mov    esi,r12d
  41535c:	mov    rdi,rbp
  41535f:	add    rbx,0x10
  415363:	call   414f80 <__sprintf_chk@plt+0x129a0>
  415368:	cmp    QWORD PTR [rbx],0x0
  41536c:	jne    415348 <__sprintf_chk@plt+0x12d68>
  41536e:	add    rsp,0x8
  415372:	pop    rbx
  415373:	pop    rbp
  415374:	pop    r12
  415376:	pop    r13
  415378:	ret    
  415379:	xor    r12d,r12d
  41537c:	jmp    41527d <__sprintf_chk@plt+0x12c9d>
  415381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41538c:	nop    DWORD PTR [rax+0x0]
  415390:	endbr64 
  415394:	push   rbx
  415395:	mov    esi,0xffffd8ee
  41539a:	mov    rbx,rdi
  41539d:	mov    rax,QWORD PTR [rdi+0x10]
  4153a1:	mov    rdx,QWORD PTR [rdi+0x78]
  4153a5:	add    rax,0x10
  4153a9:	mov    QWORD PTR [rax-0x10],rdx
  4153ad:	mov    edx,DWORD PTR [rdi+0x80]
  4153b3:	mov    DWORD PTR [rax-0x8],edx
  4153b6:	mov    QWORD PTR [rdi+0x10],rax
  4153ba:	lea    rdx,[rip+0x22fa]        # 4176bb <__sprintf_chk@plt+0x150db>
  4153c1:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4153c6:	mov    rdi,rbx
  4153c9:	lea    rdx,[rip+0x97f0]        # 41ebc0 <__sprintf_chk@plt+0x1c5e0>
  4153d0:	lea    rsi,[rip+0x22e4]        # 4176bb <__sprintf_chk@plt+0x150db>
  4153d7:	call   415240 <__sprintf_chk@plt+0x12c60>
  4153dc:	mov    rdi,rbx
  4153df:	mov    edx,0x7
  4153e4:	lea    rsi,[rip+0x22d3]        # 4176be <__sprintf_chk@plt+0x150de>
  4153eb:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4153f0:	mov    rdi,rbx
  4153f3:	lea    rdx,[rip+0x22cc]        # 4176c6 <__sprintf_chk@plt+0x150e6>
  4153fa:	mov    esi,0xffffd8ee
  4153ff:	call   414f80 <__sprintf_chk@plt+0x129a0>
  415404:	mov    rdi,rbx
  415407:	xor    edx,edx
  415409:	lea    rsi,[rip+0xffffffffffff79d0]        # 40cde0 <__sprintf_chk@plt+0xa800>
  415410:	call   412390 <__sprintf_chk@plt+0xfdb0>
  415415:	mov    rdi,rbx
  415418:	mov    edx,0x1
  41541d:	lea    rsi,[rip+0xffffffffffff7a4c]        # 40ce70 <__sprintf_chk@plt+0xa890>
  415424:	call   412390 <__sprintf_chk@plt+0xfdb0>
  415429:	mov    rdi,rbx
  41542c:	lea    rdx,[rip+0x229c]        # 4176cf <__sprintf_chk@plt+0x150ef>
  415433:	mov    esi,0xfffffffe
  415438:	call   414f80 <__sprintf_chk@plt+0x129a0>
  41543d:	mov    rdi,rbx
  415440:	xor    edx,edx
  415442:	lea    rsi,[rip+0xffffffffffff76c7]        # 40cb10 <__sprintf_chk@plt+0xa530>
  415449:	call   412390 <__sprintf_chk@plt+0xfdb0>
  41544e:	mov    rdi,rbx
  415451:	mov    edx,0x1
  415456:	lea    rsi,[rip+0xffffffffffff7903]        # 40cd60 <__sprintf_chk@plt+0xa780>
  41545d:	call   412390 <__sprintf_chk@plt+0xfdb0>
  415462:	lea    rdx,[rip+0x2267]        # 4176d0 <__sprintf_chk@plt+0x150f0>
  415469:	mov    rdi,rbx
  41546c:	mov    esi,0xfffffffe
  415471:	call   414f80 <__sprintf_chk@plt+0x129a0>
  415476:	mov    rdi,rbx
  415479:	mov    esi,0x1
  41547e:	call   414600 <__sprintf_chk@plt+0x12020>
  415483:	mov    rax,QWORD PTR [rbx+0x10]
  415487:	mov    rdi,rbx
  41548a:	mov    rdx,QWORD PTR [rax-0x10]
  41548e:	add    rax,0x10
  415492:	mov    QWORD PTR [rax-0x10],rdx
  415496:	mov    edx,DWORD PTR [rax-0x18]
  415499:	mov    esi,0xfffffffe
  41549e:	mov    DWORD PTR [rax-0x8],edx
  4154a1:	mov    QWORD PTR [rbx+0x10],rax
  4154a5:	call   404350 <__sprintf_chk@plt+0x1d70>
  4154aa:	mov    rdi,rbx
  4154ad:	mov    edx,0x2
  4154b2:	lea    rsi,[rip+0x221d]        # 4176d6 <__sprintf_chk@plt+0x150f6>
  4154b9:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4154be:	mov    rdi,rbx
  4154c1:	lea    rdx,[rip+0x2211]        # 4176d9 <__sprintf_chk@plt+0x150f9>
  4154c8:	mov    esi,0xfffffffe
  4154cd:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4154d2:	mov    rdi,rbx
  4154d5:	mov    edx,0x1
  4154da:	lea    rsi,[rip+0xfffffffffffff16f]        # 414650 <__sprintf_chk@plt+0x12070>
  4154e1:	call   412390 <__sprintf_chk@plt+0xfdb0>
  4154e6:	mov    rdi,rbx
  4154e9:	lea    rdx,[rip+0x21f0]        # 4176e0 <__sprintf_chk@plt+0x15100>
  4154f0:	mov    esi,0xffffd8ee
  4154f5:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4154fa:	mov    eax,0x1
  4154ff:	pop    rbx
  415500:	ret    
  415501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41550c:	nop    DWORD PTR [rax+0x0]
  415510:	endbr64 
  415514:	sub    rsp,0x8
  415518:	lea    rdx,[rip+0x9641]        # 41eb60 <__sprintf_chk@plt+0x1c580>
  41551f:	lea    rsi,[rip+0x1f16]        # 41743c <__sprintf_chk@plt+0x14e5c>
  415526:	call   415240 <__sprintf_chk@plt+0x12c60>
  41552b:	mov    eax,0x1
  415530:	add    rsp,0x8
  415534:	ret    
  415535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415540:	endbr64 
  415544:	push   rbx
  415545:	lea    rdx,[rip+0x1de3]        # 41732f <__sprintf_chk@plt+0x14d4f>
  41554c:	mov    rbx,rdi
  41554f:	mov    esi,0xffffd8f0
  415554:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  415559:	mov    rax,QWORD PTR [rbx+0x10]
  41555d:	lea    rdx,[rip+0x2aac]        # 418010 <__sprintf_chk@plt+0x15a30>
  415564:	lea    rcx,[rax-0x10]
  415568:	cmp    rcx,rdx
  41556b:	mov    edx,DWORD PTR [rax-0x8]
  41556e:	je     4155b7 <__sprintf_chk@plt+0x12fd7>
  415570:	test   edx,edx
  415572:	jne    4155b7 <__sprintf_chk@plt+0x12fd7>
  415574:	mov    QWORD PTR [rbx+0x10],rcx
  415578:	xor    esi,esi
  41557a:	mov    rdi,rbx
  41557d:	call   414600 <__sprintf_chk@plt+0x12020>
  415582:	mov    rax,QWORD PTR [rbx+0x10]
  415586:	mov    esi,0xffffd8f0
  41558b:	mov    rdx,QWORD PTR [rax-0x10]
  41558f:	add    rax,0x10
  415593:	mov    QWORD PTR [rax-0x10],rdx
  415597:	mov    edx,DWORD PTR [rax-0x18]
  41559a:	mov    rdi,rbx
  41559d:	mov    DWORD PTR [rax-0x8],edx
  4155a0:	mov    QWORD PTR [rbx+0x10],rax
  4155a4:	lea    rdx,[rip+0x1d84]        # 41732f <__sprintf_chk@plt+0x14d4f>
  4155ab:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4155b0:	mov    rax,QWORD PTR [rbx+0x10]
  4155b4:	mov    edx,DWORD PTR [rax-0x8]
  4155b7:	mov    rcx,QWORD PTR [rax-0x10]
  4155bb:	mov    DWORD PTR [rax+0x8],edx
  4155be:	mov    QWORD PTR [rax],rcx
  4155c1:	add    rax,0x10
  4155c5:	mov    QWORD PTR [rbx+0x10],rax
  4155c9:	lea    rdx,[rip+0x1b27]        # 4170f7 <__sprintf_chk@plt+0x14b17>
  4155d0:	mov    esi,0xfffffffe
  4155d5:	mov    rdi,rbx
  4155d8:	call   414f80 <__sprintf_chk@plt+0x129a0>
  4155dd:	lea    rdx,[rip+0x943c]        # 41ea20 <__sprintf_chk@plt+0x1c440>
  4155e4:	xor    esi,esi
  4155e6:	mov    rdi,rbx
  4155e9:	call   415240 <__sprintf_chk@plt+0x12c60>
  4155ee:	lea    rsi,[rip+0xffffffffffff797b]        # 40cf70 <__sprintf_chk@plt+0xa990>
  4155f5:	mov    rdi,rbx
  4155f8:	call   4150a0 <__sprintf_chk@plt+0x12ac0>
  4155fd:	mov    rax,QWORD PTR [rbx+0x50]
  415601:	cmp    QWORD PTR [rbx+0x28],rax
  415605:	je     415730 <__sprintf_chk@plt+0x13150>
  41560b:	mov    esi,0xffffd8ef
  415610:	mov    rdi,rbx
  415613:	call   403ca0 <__sprintf_chk@plt+0x16c0>
  415618:	mov    rax,QWORD PTR [rbx+0x28]
  41561c:	mov    rax,QWORD PTR [rax+0x8]
  415620:	mov    rdx,QWORD PTR [rax]
  415623:	mov    rax,QWORD PTR [rbx+0x10]
  415627:	mov    rcx,QWORD PTR [rax-0x10]
  41562b:	mov    QWORD PTR [rdx+0x18],rcx
  41562f:	cmp    DWORD PTR [rax-0x8],0x3
  415633:	jle    415669 <__sprintf_chk@plt+0x13089>
  415635:	mov    rsi,QWORD PTR [rax-0x10]
  415639:	test   BYTE PTR [rsi+0x9],0x3
  41563d:	je     415669 <__sprintf_chk@plt+0x13089>
  41563f:	movzx  ecx,BYTE PTR [rdx+0x9]
  415643:	test   cl,0x4
  415646:	je     415669 <__sprintf_chk@plt+0x13089>
  415648:	mov    rdi,QWORD PTR [rbx+0x20]
  41564c:	cmp    BYTE PTR [rdi+0x21],0x1
  415650:	je     415750 <__sprintf_chk@plt+0x13170>
  415656:	movzx  eax,BYTE PTR [rdi+0x20]
  41565a:	and    ecx,0xfffffff8
  41565d:	and    eax,0x3
  415660:	or     ecx,eax
  415662:	mov    BYTE PTR [rdx+0x9],cl
  415665:	mov    rax,QWORD PTR [rbx+0x10]
  415669:	sub    rax,0x10
  41566d:	mov    QWORD PTR [rbx+0x10],rax
  415671:	lea    rdx,[rip+0x9428]        # 41eaa0 <__sprintf_chk@plt+0x1c4c0>
  415678:	mov    rdi,rbx
  41567b:	lea    rsi,[rip+0x207e]        # 417700 <__sprintf_chk@plt+0x15120>
  415682:	call   415240 <__sprintf_chk@plt+0x12c60>
  415687:	mov    rdi,rbx
  41568a:	lea    rsi,[rip+0xffffffffffff868f]        # 40dd20 <__sprintf_chk@plt+0xb740>
  415691:	call   4150a0 <__sprintf_chk@plt+0x12ac0>
  415696:	mov    rax,QWORD PTR [rip+0x9943]        # 41efe0 <__sprintf_chk@plt+0x1ca00>
  41569d:	mov    rdi,rbx
  4156a0:	mov    rsi,QWORD PTR [rax]
  4156a3:	lea    rcx,[rip+0x1fac]        # 417656 <__sprintf_chk@plt+0x15076>
  4156aa:	mov    edx,0x1
  4156af:	call   415010 <__sprintf_chk@plt+0x12a30>
  4156b4:	mov    rax,QWORD PTR [rip+0x991d]        # 41efd8 <__sprintf_chk@plt+0x1c9f8>
  4156bb:	mov    rdi,rbx
  4156be:	mov    rsi,QWORD PTR [rax]
  4156c1:	lea    rcx,[rip+0x203b]        # 417703 <__sprintf_chk@plt+0x15123>
  4156c8:	mov    edx,0x2
  4156cd:	call   415010 <__sprintf_chk@plt+0x12a30>
  4156d2:	mov    rax,QWORD PTR [rip+0x991f]        # 41eff8 <__sprintf_chk@plt+0x1ca18>
  4156d9:	lea    rcx,[rip+0x202a]        # 41770a <__sprintf_chk@plt+0x1512a>
  4156e0:	mov    rsi,QWORD PTR [rax]
  4156e3:	mov    rdi,rbx
  4156e6:	xor    edx,edx
  4156e8:	call   415010 <__sprintf_chk@plt+0x12a30>
  4156ed:	sub    QWORD PTR [rbx+0x10],0x10
  4156f2:	lea    rdx,[rip+0x2018]        # 417711 <__sprintf_chk@plt+0x15131>
  4156f9:	mov    rdi,rbx
  4156fc:	mov    esi,0xffffffff
  415701:	call   40b480 <__sprintf_chk@plt+0x8ea0>
  415706:	mov    rdi,rbx
  415709:	lea    rsi,[rip+0xffffffffffff78b0]        # 40cfc0 <__sprintf_chk@plt+0xa9e0>
  415710:	call   4150a0 <__sprintf_chk@plt+0x12ac0>
  415715:	mov    rdi,rbx
  415718:	call   404470 <__sprintf_chk@plt+0x1e90>
  41571d:	sub    QWORD PTR [rbx+0x10],0x10
  415722:	mov    eax,0x1
  415727:	pop    rbx
  415728:	ret    
  415729:	nop    DWORD PTR [rax+0x0]
  415730:	lea    rsi,[rip+0x1fb2]        # 4176e9 <__sprintf_chk@plt+0x15109>
  415737:	mov    rdi,rbx
  41573a:	xor    eax,eax
  41573c:	call   407190 <__sprintf_chk@plt+0x4bb0>
  415741:	jmp    41560b <__sprintf_chk@plt+0x1302b>
  415746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415750:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  415755:	mov    rax,QWORD PTR [rbx+0x10]
  415759:	jmp    415669 <__sprintf_chk@plt+0x13089>
  41575e:	xchg   ax,ax
  415760:	endbr64 
  415764:	sub    rsp,0x8
  415768:	lea    rdx,[rip+0x9271]        # 41e9e0 <__sprintf_chk@plt+0x1c400>
  41576f:	lea    rsi,[rip+0x1fa1]        # 417717 <__sprintf_chk@plt+0x15137>
  415776:	call   415240 <__sprintf_chk@plt+0x12c60>
  41577b:	mov    eax,0x1
  415780:	add    rsp,0x8
  415784:	ret    
  415785:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415790:	endbr64 
  415794:	push   rbx
  415795:	lea    rdx,[rip+0x9184]        # 41e920 <__sprintf_chk@plt+0x1c340>
  41579c:	mov    rbx,rdi
  41579f:	lea    rsi,[rip+0x1d16]        # 4174bc <__sprintf_chk@plt+0x14edc>
  4157a6:	call   415240 <__sprintf_chk@plt+0x12c60>
  4157ab:	mov    rdi,rbx
  4157ae:	mov    esi,0x1
  4157b3:	call   414600 <__sprintf_chk@plt+0x12020>
  4157b8:	mov    rdi,rbx
  4157bb:	xor    edx,edx
  4157bd:	lea    rsi,[rip+0x1f9a]        # 41775e <__sprintf_chk@plt+0x1517e>
  4157c4:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4157c9:	mov    rax,QWORD PTR [rbx+0x10]
  4157cd:	mov    rdi,rbx
  4157d0:	mov    rdx,QWORD PTR [rax-0x20]
  4157d4:	add    rax,0x10
  4157d8:	mov    QWORD PTR [rax-0x10],rdx
  4157dc:	mov    edx,DWORD PTR [rax-0x28]
  4157df:	mov    esi,0xfffffffe
  4157e4:	mov    DWORD PTR [rax-0x8],edx
  4157e7:	mov    QWORD PTR [rbx+0x10],rax
  4157eb:	call   404350 <__sprintf_chk@plt+0x1d70>
  4157f0:	mov    rax,QWORD PTR [rbx+0x10]
  4157f4:	mov    rdi,rbx
  4157f7:	lea    rdx,[rax-0x10]
  4157fb:	mov    QWORD PTR [rbx+0x10],rdx
  4157ff:	mov    esi,0xfffffffe
  415804:	mov    rdx,QWORD PTR [rax-0x30]
  415808:	mov    QWORD PTR [rax-0x10],rdx
  41580c:	mov    edx,DWORD PTR [rax-0x28]
  41580f:	mov    DWORD PTR [rax-0x8],edx
  415812:	mov    QWORD PTR [rbx+0x10],rax
  415816:	lea    rdx,[rip+0x18da]        # 4170f7 <__sprintf_chk@plt+0x14b17>
  41581d:	call   414f80 <__sprintf_chk@plt+0x129a0>
  415822:	sub    QWORD PTR [rbx+0x10],0x10
  415827:	mov    eax,0x1
  41582c:	pop    rbx
  41582d:	ret    
  41582e:	xchg   ax,ax
  415830:	push   r15
  415832:	push   r14
  415834:	push   r13
  415836:	lea    r13,[rip+0x2593]        # 417dd0 <__sprintf_chk@plt+0x157f0>
  41583d:	push   r12
  41583f:	mov    r12,rdx
  415842:	push   rbp
  415843:	mov    rbp,rdi
  415846:	push   rbx
  415847:	mov    rbx,rsi
  41584a:	sub    rsp,0x8
  41584e:	movzx  ecx,BYTE PTR [rdx]
  415851:	cmp    cl,0x29
  415854:	ja     4159ec <__sprintf_chk@plt+0x1340c>
  41585a:	movsxd rax,DWORD PTR [r13+rcx*4+0x0]
  41585f:	add    rax,r13
  415862:	notrack jmp rax
  415865:	nop    DWORD PTR [rax]
  415868:	mov    rax,rbx
  41586b:	add    rsp,0x8
  41586f:	pop    rbx
  415870:	pop    rbp
  415871:	pop    r12
  415873:	pop    r13
  415875:	pop    r14
  415877:	pop    r15
  415879:	ret    
  41587a:	nop    WORD PTR [rax+rax*1+0x0]
  415880:	movsxd rax,DWORD PTR [rbp+0x18]
  415884:	mov    edx,eax
  415886:	dec    edx
  415888:	js     4158c6 <__sprintf_chk@plt+0x132e6>
  41588a:	movsxd rcx,edx
  41588d:	lea    rsi,[rcx+0x2]
  415891:	shl    rax,0x4
  415895:	shl    rsi,0x4
  415899:	add    rax,rbp
  41589c:	cmp    QWORD PTR [rbp+rsi*1+0x8],0xffffffffffffffff
  4158a2:	jne    4158bf <__sprintf_chk@plt+0x132df>
  4158a4:	jmp    415c33 <__sprintf_chk@plt+0x13653>
  4158a9:	nop    DWORD PTR [rax+0x0]
  4158b0:	sub    rax,0x10
  4158b4:	cmp    QWORD PTR [rax+0x18],0xffffffffffffffff
  4158b9:	je     415c30 <__sprintf_chk@plt+0x13650>
  4158bf:	dec    edx
  4158c1:	cmp    edx,0xffffffff
  4158c4:	jne    4158b0 <__sprintf_chk@plt+0x132d0>
  4158c6:	mov    rdi,QWORD PTR [rbp+0x10]
  4158ca:	lea    rsi,[rip+0x1e49]        # 41771a <__sprintf_chk@plt+0x1513a>
  4158d1:	xor    eax,eax
  4158d3:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  4158d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4158e0:	cmp    BYTE PTR [r12+0x1],0x29
  4158e6:	mov    eax,DWORD PTR [rbp+0x18]
  4158e9:	je     415b10 <__sprintf_chk@plt+0x13530>
  4158ef:	cmp    eax,0x1f
  4158f2:	jg     415bc0 <__sprintf_chk@plt+0x135e0>
  4158f8:	movsxd rdx,eax
  4158fb:	shl    rdx,0x4
  4158ff:	add    rdx,rbp
  415902:	inc    eax
  415904:	mov    QWORD PTR [rdx+0x20],rbx
  415908:	mov    QWORD PTR [rdx+0x28],0xffffffffffffffff
  415910:	mov    DWORD PTR [rbp+0x18],eax
  415913:	lea    rdx,[r12+0x1]
  415918:	mov    rsi,rbx
  41591b:	mov    rdi,rbp
  41591e:	call   415830 <__sprintf_chk@plt+0x13250>
  415923:	test   rax,rax
  415926:	jne    41586b <__sprintf_chk@plt+0x1328b>
  41592c:	dec    DWORD PTR [rbp+0x18]
  41592f:	jmp    41586b <__sprintf_chk@plt+0x1328b>
  415934:	nop    DWORD PTR [rax+0x0]
  415938:	movzx  r14d,BYTE PTR [r12+0x1]
  41593e:	cmp    r14b,0x62
  415942:	je     415b40 <__sprintf_chk@plt+0x13560>
  415948:	cmp    r14b,0x66
  41594c:	je     415ab0 <__sprintf_chk@plt+0x134d0>
  415952:	call   4025d0 <__ctype_b_loc@plt>
  415957:	mov    rax,QWORD PTR [rax]
  41595a:	movzx  edx,r14b
  41595e:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  415963:	je     4159ec <__sprintf_chk@plt+0x1340c>
  415969:	sub    r14d,0x31
  41596d:	js     415cc0 <__sprintf_chk@plt+0x136e0>
  415973:	cmp    r14d,DWORD PTR [rbp+0x18]
  415977:	jge    415cc0 <__sprintf_chk@plt+0x136e0>
  41597d:	mov    rax,rdx
  415980:	shl    rax,0x4
  415984:	add    rax,rbp
  415987:	mov    r14,QWORD PTR [rax-0x2e8]
  41598e:	cmp    r14,0xffffffffffffffff
  415992:	je     415cc0 <__sprintf_chk@plt+0x136e0>
  415998:	mov    rdx,QWORD PTR [rbp+0x8]
  41599c:	sub    rdx,rbx
  41599f:	cmp    r14,rdx
  4159a2:	ja     415a98 <__sprintf_chk@plt+0x134b8>
  4159a8:	mov    rdi,QWORD PTR [rax-0x2f0]
  4159af:	mov    rdx,r14
  4159b2:	mov    rsi,rbx
  4159b5:	call   402440 <memcmp@plt>
  4159ba:	test   eax,eax
  4159bc:	jne    415a98 <__sprintf_chk@plt+0x134b8>
  4159c2:	add    rbx,r14
  4159c5:	je     415a98 <__sprintf_chk@plt+0x134b8>
  4159cb:	movzx  ecx,BYTE PTR [r12+0x2]
  4159d1:	add    r12,0x2
  4159d5:	jmp    415851 <__sprintf_chk@plt+0x13271>
  4159da:	nop    WORD PTR [rax+rax*1+0x0]
  4159e0:	cmp    BYTE PTR [r12+0x1],0x0
  4159e6:	je     415cd2 <__sprintf_chk@plt+0x136f2>
  4159ec:	lea    rdi,[rbp+0x10]
  4159f0:	mov    rsi,r12
  4159f3:	call   40c1b0 <__sprintf_chk@plt+0x9bd0>
  4159f8:	mov    r14,rax
  4159fb:	cmp    QWORD PTR [rbp+0x8],rbx
  4159ff:	ja     415bd8 <__sprintf_chk@plt+0x135f8>
  415a05:	movzx  ecx,BYTE PTR [rax]
  415a08:	cmp    cl,0x2b
  415a0b:	je     415a98 <__sprintf_chk@plt+0x134b8>
  415a11:	jle    415a30 <__sprintf_chk@plt+0x13450>
  415a13:	cmp    cl,0x2d
  415a16:	je     415a58 <__sprintf_chk@plt+0x13478>
  415a18:	cmp    cl,0x3f
  415a1b:	jne    415a98 <__sprintf_chk@plt+0x134b8>
  415a1d:	lea    r12,[r14+0x1]
  415a21:	movzx  ecx,BYTE PTR [r14+0x1]
  415a26:	jmp    415851 <__sprintf_chk@plt+0x13271>
  415a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  415a30:	cmp    cl,0x2a
  415a33:	jne    415a98 <__sprintf_chk@plt+0x134b8>
  415a35:	mov    rcx,r14
  415a38:	mov    rdx,r12
  415a3b:	mov    rsi,rbx
  415a3e:	add    rsp,0x8
  415a42:	pop    rbx
  415a43:	mov    rdi,rbp
  415a46:	pop    rbp
  415a47:	pop    r12
  415a49:	pop    r13
  415a4b:	pop    r14
  415a4d:	pop    r15
  415a4f:	jmp    415d00 <__sprintf_chk@plt+0x13720>
  415a54:	nop    DWORD PTR [rax+0x0]
  415a58:	lea    r13,[r14+0x1]
  415a5c:	jmp    415a75 <__sprintf_chk@plt+0x13495>
  415a5e:	xchg   ax,ax
  415a60:	movzx  edi,BYTE PTR [rbx]
  415a63:	mov    rdx,r14
  415a66:	mov    rsi,r12
  415a69:	call   404010 <__sprintf_chk@plt+0x1a30>
  415a6e:	test   eax,eax
  415a70:	je     415a98 <__sprintf_chk@plt+0x134b8>
  415a72:	inc    rbx
  415a75:	mov    rdx,r13
  415a78:	mov    rsi,rbx
  415a7b:	mov    rdi,rbp
  415a7e:	call   415830 <__sprintf_chk@plt+0x13250>
  415a83:	test   rax,rax
  415a86:	jne    41586b <__sprintf_chk@plt+0x1328b>
  415a8c:	cmp    rbx,QWORD PTR [rbp+0x8]
  415a90:	jb     415a60 <__sprintf_chk@plt+0x13480>
  415a92:	nop    WORD PTR [rax+rax*1+0x0]
  415a98:	xor    eax,eax
  415a9a:	add    rsp,0x8
  415a9e:	pop    rbx
  415a9f:	pop    rbp
  415aa0:	pop    r12
  415aa2:	pop    r13
  415aa4:	pop    r14
  415aa6:	pop    r15
  415aa8:	ret    
  415aa9:	nop    DWORD PTR [rax+0x0]
  415ab0:	cmp    BYTE PTR [r12+0x2],0x5b
  415ab6:	jne    415c70 <__sprintf_chk@plt+0x13690>
  415abc:	lea    r14,[r12+0x2]
  415ac1:	lea    rdi,[rbp+0x10]
  415ac5:	mov    rsi,r14
  415ac8:	call   40c1b0 <__sprintf_chk@plt+0x9bd0>
  415acd:	mov    r12,rax
  415ad0:	xor    edi,edi
  415ad2:	cmp    QWORD PTR [rbp+0x0],rbx
  415ad6:	je     415adc <__sprintf_chk@plt+0x134fc>
  415ad8:	movzx  edi,BYTE PTR [rbx-0x1]
  415adc:	lea    r15,[r12-0x1]
  415ae1:	mov    rdx,r15
  415ae4:	mov    rsi,r14
  415ae7:	call   403560 <__sprintf_chk@plt+0xf80>
  415aec:	test   eax,eax
  415aee:	jne    415a98 <__sprintf_chk@plt+0x134b8>
  415af0:	movzx  edi,BYTE PTR [rbx]
  415af3:	mov    rdx,r15
  415af6:	mov    rsi,r14
  415af9:	call   403560 <__sprintf_chk@plt+0xf80>
  415afe:	test   eax,eax
  415b00:	je     415a98 <__sprintf_chk@plt+0x134b8>
  415b02:	movzx  ecx,BYTE PTR [r12]
  415b07:	jmp    415851 <__sprintf_chk@plt+0x13271>
  415b0c:	nop    DWORD PTR [rax+0x0]
  415b10:	cmp    eax,0x1f
  415b13:	jg     415bc0 <__sprintf_chk@plt+0x135e0>
  415b19:	movsxd rdx,eax
  415b1c:	shl    rdx,0x4
  415b20:	add    rdx,rbp
  415b23:	inc    eax
  415b25:	mov    QWORD PTR [rdx+0x20],rbx
  415b29:	mov    QWORD PTR [rdx+0x28],0xfffffffffffffffe
  415b31:	mov    DWORD PTR [rbp+0x18],eax
  415b34:	lea    rdx,[r12+0x2]
  415b39:	jmp    415918 <__sprintf_chk@plt+0x13338>
  415b3e:	xchg   ax,ax
  415b40:	movzx  edi,BYTE PTR [r12+0x2]
  415b46:	test   dil,dil
  415b49:	je     415c88 <__sprintf_chk@plt+0x136a8>
  415b4f:	movzx  esi,BYTE PTR [r12+0x3]
  415b55:	test   sil,sil
  415b58:	je     415c88 <__sprintf_chk@plt+0x136a8>
  415b5e:	cmp    dil,BYTE PTR [rbx]
  415b61:	jne    415a98 <__sprintf_chk@plt+0x134b8>
  415b67:	mov    r8,QWORD PTR [rbp+0x8]
  415b6b:	mov    ecx,0x1
  415b70:	jmp    415b86 <__sprintf_chk@plt+0x135a6>
  415b72:	nop    WORD PTR [rax+rax*1+0x0]
  415b78:	cmp    dil,dl
  415b7b:	sete   dl
  415b7e:	movzx  edx,dl
  415b81:	add    ecx,edx
  415b83:	mov    rbx,rax
  415b86:	lea    rax,[rbx+0x1]
  415b8a:	cmp    rax,r8
  415b8d:	jae    415a98 <__sprintf_chk@plt+0x134b8>
  415b93:	movzx  edx,BYTE PTR [rbx+0x1]
  415b97:	cmp    sil,dl
  415b9a:	jne    415b78 <__sprintf_chk@plt+0x13598>
  415b9c:	dec    ecx
  415b9e:	jne    415b83 <__sprintf_chk@plt+0x135a3>
  415ba0:	add    rbx,0x2
  415ba4:	je     415a98 <__sprintf_chk@plt+0x134b8>
  415baa:	movzx  ecx,BYTE PTR [r12+0x4]
  415bb0:	add    r12,0x4
  415bb4:	jmp    415851 <__sprintf_chk@plt+0x13271>
  415bb9:	nop    DWORD PTR [rax+0x0]
  415bc0:	mov    rdi,QWORD PTR [rbp+0x10]
  415bc4:	lea    rsi,[rip+0x1828]        # 4173f3 <__sprintf_chk@plt+0x14e13>
  415bcb:	xor    eax,eax
  415bcd:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  415bd2:	nop    WORD PTR [rax+rax*1+0x0]
  415bd8:	movzx  edi,BYTE PTR [rbx]
  415bdb:	mov    rdx,rax
  415bde:	mov    rsi,r12
  415be1:	call   404010 <__sprintf_chk@plt+0x1a30>
  415be6:	movzx  ecx,BYTE PTR [r14]
  415bea:	test   eax,eax
  415bec:	je     415a08 <__sprintf_chk@plt+0x13428>
  415bf2:	cmp    cl,0x2b
  415bf5:	je     415ce6 <__sprintf_chk@plt+0x13706>
  415bfb:	jle    415c20 <__sprintf_chk@plt+0x13640>
  415bfd:	cmp    cl,0x2d
  415c00:	je     415a58 <__sprintf_chk@plt+0x13478>
  415c06:	cmp    cl,0x3f
  415c09:	je     415c9a <__sprintf_chk@plt+0x136ba>
  415c0f:	inc    rbx
  415c12:	mov    r12,r14
  415c15:	jmp    415851 <__sprintf_chk@plt+0x13271>
  415c1a:	nop    WORD PTR [rax+rax*1+0x0]
  415c20:	cmp    cl,0x2a
  415c23:	jne    415c0f <__sprintf_chk@plt+0x1362f>
  415c25:	jmp    415a35 <__sprintf_chk@plt+0x13455>
  415c2a:	nop    WORD PTR [rax+rax*1+0x0]
  415c30:	movsxd rcx,edx
  415c33:	shl    rcx,0x4
  415c37:	lea    r13,[rbp+rcx*1+0x0]
  415c3c:	mov    rax,rbx
  415c3f:	sub    rax,QWORD PTR [r13+0x20]
  415c43:	mov    QWORD PTR [r13+0x28],rax
  415c47:	lea    rdx,[r12+0x1]
  415c4c:	mov    rsi,rbx
  415c4f:	mov    rdi,rbp
  415c52:	call   415830 <__sprintf_chk@plt+0x13250>
  415c57:	test   rax,rax
  415c5a:	jne    41586b <__sprintf_chk@plt+0x1328b>
  415c60:	mov    QWORD PTR [r13+0x28],0xffffffffffffffff
  415c68:	jmp    41586b <__sprintf_chk@plt+0x1328b>
  415c6d:	nop    DWORD PTR [rax]
  415c70:	mov    rdi,QWORD PTR [rbp+0x10]
  415c74:	lea    rsi,[rip+0x276d]        # 4183e8 <__sprintf_chk@plt+0x15e08>
  415c7b:	xor    eax,eax
  415c7d:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  415c82:	nop    WORD PTR [rax+rax*1+0x0]
  415c88:	mov    rdi,QWORD PTR [rbp+0x10]
  415c8c:	lea    rsi,[rip+0x1a9f]        # 417732 <__sprintf_chk@plt+0x15152>
  415c93:	xor    eax,eax
  415c95:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  415c9a:	lea    r12,[r14+0x1]
  415c9e:	lea    rsi,[rbx+0x1]
  415ca2:	mov    rdx,r12
  415ca5:	mov    rdi,rbp
  415ca8:	call   415830 <__sprintf_chk@plt+0x13250>
  415cad:	test   rax,rax
  415cb0:	je     415a21 <__sprintf_chk@plt+0x13441>
  415cb6:	jmp    41586b <__sprintf_chk@plt+0x1328b>
  415cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  415cc0:	mov    rdi,QWORD PTR [rbp+0x10]
  415cc4:	lea    rsi,[rip+0x16ff]        # 4173ca <__sprintf_chk@plt+0x14dea>
  415ccb:	xor    eax,eax
  415ccd:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  415cd2:	mov    rax,rbx
  415cd5:	cmp    QWORD PTR [rbp+0x8],rbx
  415cd9:	je     41586b <__sprintf_chk@plt+0x1328b>
  415cdf:	xor    eax,eax
  415ce1:	jmp    415a9a <__sprintf_chk@plt+0x134ba>
  415ce6:	lea    rsi,[rbx+0x1]
  415cea:	mov    rcx,r14
  415ced:	mov    rdx,r12
  415cf0:	jmp    415a3e <__sprintf_chk@plt+0x1345e>
  415cf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415d00:	push   r15
  415d02:	push   r14
  415d04:	push   r13
  415d06:	mov    r13,rdi
  415d09:	push   r12
  415d0b:	mov    r12,rcx
  415d0e:	push   rbp
  415d0f:	mov    rbp,rsi
  415d12:	push   rbx
  415d13:	sub    rsp,0x8
  415d17:	mov    r14,QWORD PTR [rdi+0x8]
  415d1b:	cmp    r14,rsi
  415d1e:	jbe    415d86 <__sprintf_chk@plt+0x137a6>
  415d20:	mov    r15,rdx
  415d23:	sub    r14,rsi
  415d26:	xor    ebx,ebx
  415d28:	jmp    415d38 <__sprintf_chk@plt+0x13758>
  415d2a:	nop    WORD PTR [rax+rax*1+0x0]
  415d30:	inc    rbx
  415d33:	cmp    rbx,r14
  415d36:	je     415d4c <__sprintf_chk@plt+0x1376c>
  415d38:	movzx  edi,BYTE PTR [rbp+rbx*1+0x0]
  415d3d:	mov    rdx,r12
  415d40:	mov    rsi,r15
  415d43:	call   404010 <__sprintf_chk@plt+0x1a30>
  415d48:	test   eax,eax
  415d4a:	jne    415d30 <__sprintf_chk@plt+0x13750>
  415d4c:	inc    r12
  415d4f:	add    rbx,rbp
  415d52:	jmp    415d5b <__sprintf_chk@plt+0x1377b>
  415d54:	nop    DWORD PTR [rax+0x0]
  415d58:	mov    rbx,rdx
  415d5b:	mov    rdx,r12
  415d5e:	mov    rsi,rbx
  415d61:	mov    rdi,r13
  415d64:	call   415830 <__sprintf_chk@plt+0x13250>
  415d69:	test   rax,rax
  415d6c:	jne    415d77 <__sprintf_chk@plt+0x13797>
  415d6e:	lea    rdx,[rbx-0x1]
  415d72:	cmp    rbx,rbp
  415d75:	jne    415d58 <__sprintf_chk@plt+0x13778>
  415d77:	add    rsp,0x8
  415d7b:	pop    rbx
  415d7c:	pop    rbp
  415d7d:	pop    r12
  415d7f:	pop    r13
  415d81:	pop    r14
  415d83:	pop    r15
  415d85:	ret    
  415d86:	xor    ebx,ebx
  415d88:	jmp    415d4c <__sprintf_chk@plt+0x1376c>
  415d8a:	nop    WORD PTR [rax+rax*1+0x0]
  415d90:	push   r15
  415d92:	push   r14
  415d94:	push   r13
  415d96:	mov    r13,rdi
  415d99:	push   r12
  415d9b:	push   rbp
  415d9c:	mov    ebp,0x0
  415da1:	push   rbx
  415da2:	sub    rsp,0x268
  415da9:	mov    DWORD PTR [rsp+0x4],esi
  415dad:	lea    rdx,[rsp+0x20]
  415db2:	mov    esi,0x1
  415db7:	mov    rax,QWORD PTR fs:0x28
  415dc0:	mov    QWORD PTR [rsp+0x258],rax
  415dc8:	xor    eax,eax
  415dca:	call   412720 <__sprintf_chk@plt+0x10140>
  415dcf:	lea    rdx,[rsp+0x28]
  415dd4:	mov    esi,0x2
  415dd9:	mov    rdi,r13
  415ddc:	mov    r15,rax
  415ddf:	mov    QWORD PTR [rsp+0x10],rax
  415de4:	call   412720 <__sprintf_chk@plt+0x10140>
  415de9:	mov    rbx,QWORD PTR [rsp+0x20]
  415dee:	mov    edx,0x1
  415df3:	mov    esi,0x3
  415df8:	mov    rdi,r13
  415dfb:	mov    r12,rax
  415dfe:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  415e03:	test   rax,rax
  415e06:	lea    rdx,[rbx+rax*1+0x1]
  415e0b:	cmovs  rax,rdx
  415e0f:	test   rax,rax
  415e12:	cmovs  rax,rbp
  415e16:	lea    rbp,[rax-0x1]
  415e1a:	cmp    rbp,0xffffffffffffffff
  415e1e:	je     416030 <__sprintf_chk@plt+0x13a50>
  415e24:	mov    r14,QWORD PTR [rsp+0x20]
  415e29:	cmp    rbp,r14
  415e2c:	ja     415f40 <__sprintf_chk@plt+0x13960>
  415e32:	add    r15,rbp
  415e35:	mov    r14,rbp
  415e38:	mov    ecx,DWORD PTR [rsp+0x4]
  415e3c:	test   ecx,ecx
  415e3e:	je     415f58 <__sprintf_chk@plt+0x13978>
  415e44:	mov    esi,0x4
  415e49:	mov    rdi,r13
  415e4c:	call   403e10 <__sprintf_chk@plt+0x1830>
  415e51:	test   eax,eax
  415e53:	jne    415e6d <__sprintf_chk@plt+0x1388d>
  415e55:	lea    rsi,[rip+0x18e9]        # 417745 <__sprintf_chk@plt+0x15165>
  415e5c:	mov    rdi,r12
  415e5f:	call   4024f0 <strpbrk@plt>
  415e64:	test   rax,rax
  415e67:	jne    415f58 <__sprintf_chk@plt+0x13978>
  415e6d:	mov    rax,QWORD PTR [rsp+0x28]
  415e72:	mov    QWORD PTR [rsp+0x18],rax
  415e77:	test   rax,rax
  415e7a:	je     416040 <__sprintf_chk@plt+0x13a60>
  415e80:	mov    rbp,QWORD PTR [rsp+0x20]
  415e85:	sub    rbp,r14
  415e88:	cmp    rax,rbp
  415e8b:	ja     415ef8 <__sprintf_chk@plt+0x13918>
  415e8d:	lea    r14,[rax-0x1]
  415e91:	sub    rbp,r14
  415e94:	je     415ef8 <__sprintf_chk@plt+0x13918>
  415e96:	movsx  eax,BYTE PTR [r12]
  415e9b:	mov    DWORD PTR [rsp+0x4],eax
  415e9f:	lea    rax,[r12+0x1]
  415ea4:	mov    QWORD PTR [rsp+0x8],rax
  415ea9:	jmp    415eda <__sprintf_chk@plt+0x138fa>
  415eab:	nop    DWORD PTR [rax+rax*1+0x0]
  415eb0:	lea    r12,[rbx+0x1]
  415eb4:	mov    rsi,QWORD PTR [rsp+0x8]
  415eb9:	mov    rdx,r14
  415ebc:	mov    rdi,r12
  415ebf:	call   402440 <memcmp@plt>
  415ec4:	test   eax,eax
  415ec6:	je     416098 <__sprintf_chk@plt+0x13ab8>
  415ecc:	mov    rax,r12
  415ecf:	sub    rax,r15
  415ed2:	mov    r15,r12
  415ed5:	sub    rbp,rax
  415ed8:	je     415ef8 <__sprintf_chk@plt+0x13918>
  415eda:	mov    esi,DWORD PTR [rsp+0x4]
  415ede:	mov    rdx,rbp
  415ee1:	mov    rdi,r15
  415ee4:	call   402430 <memchr@plt>
  415ee9:	mov    rbx,rax
  415eec:	test   rax,rax
  415eef:	jne    415eb0 <__sprintf_chk@plt+0x138d0>
  415ef1:	nop    DWORD PTR [rax+0x0]
  415ef8:	mov    rax,QWORD PTR [r13+0x10]
  415efc:	mov    DWORD PTR [rax+0x8],0x0
  415f03:	add    rax,0x10
  415f07:	mov    QWORD PTR [r13+0x10],rax
  415f0b:	mov    eax,0x1
  415f10:	mov    rcx,QWORD PTR [rsp+0x258]
  415f18:	xor    rcx,QWORD PTR fs:0x28
  415f21:	jne    4160bb <__sprintf_chk@plt+0x13adb>
  415f27:	add    rsp,0x268
  415f2e:	pop    rbx
  415f2f:	pop    rbp
  415f30:	pop    r12
  415f32:	pop    r13
  415f34:	pop    r14
  415f36:	pop    r15
  415f38:	ret    
  415f39:	nop    DWORD PTR [rax+0x0]
  415f40:	mov    rax,QWORD PTR [rsp+0x10]
  415f45:	mov    ecx,DWORD PTR [rsp+0x4]
  415f49:	mov    rbp,r14
  415f4c:	lea    r15,[rax+r14*1]
  415f50:	test   ecx,ecx
  415f52:	jne    415e44 <__sprintf_chk@plt+0x13864>
  415f58:	xor    r14d,r14d
  415f5b:	cmp    BYTE PTR [r12],0x5e
  415f60:	jne    415f6b <__sprintf_chk@plt+0x1398b>
  415f62:	inc    r12
  415f65:	mov    r14d,0x1
  415f6b:	mov    rax,QWORD PTR [rsp+0x10]
  415f70:	mov    QWORD PTR [rsp+0x40],r13
  415f75:	mov    QWORD PTR [rsp+0x30],rax
  415f7a:	add    rax,QWORD PTR [rsp+0x20]
  415f7f:	mov    QWORD PTR [rsp+0x38],rax
  415f84:	lea    rbx,[rsp+0x30]
  415f89:	xor    r14d,0x1
  415f8d:	jmp    415fa7 <__sprintf_chk@plt+0x139c7>
  415f8f:	nop
  415f90:	inc    r15
  415f93:	cmp    QWORD PTR [rsp+0x38],rbp
  415f98:	jbe    415ef8 <__sprintf_chk@plt+0x13918>
  415f9e:	test   r14d,r14d
  415fa1:	je     415ef8 <__sprintf_chk@plt+0x13918>
  415fa7:	mov    rdx,r12
  415faa:	mov    rsi,r15
  415fad:	mov    rdi,rbx
  415fb0:	mov    rbp,r15
  415fb3:	mov    DWORD PTR [rsp+0x48],0x0
  415fbb:	call   415830 <__sprintf_chk@plt+0x13250>
  415fc0:	test   rax,rax
  415fc3:	je     415f90 <__sprintf_chk@plt+0x139b0>
  415fc5:	mov    edx,DWORD PTR [rsp+0x4]
  415fc9:	test   edx,edx
  415fcb:	je     4160a8 <__sprintf_chk@plt+0x13ac8>
  415fd1:	mov    rsi,QWORD PTR [rsp+0x10]
  415fd6:	mov    rcx,r15
  415fd9:	sub    rcx,rsi
  415fdc:	inc    rcx
  415fdf:	vxorpd xmm0,xmm0,xmm0
  415fe3:	vcvtsi2sd xmm0,xmm0,rcx
  415fe8:	mov    rdx,QWORD PTR [r13+0x10]
  415fec:	sub    rax,rsi
  415fef:	mov    DWORD PTR [rdx+0x8],0x3
  415ff6:	vmovsd QWORD PTR [rdx],xmm0
  415ffa:	vxorpd xmm0,xmm0,xmm0
  415ffe:	vcvtsi2sd xmm0,xmm0,rax
  416003:	mov    DWORD PTR [rdx+0x18],0x3
  41600a:	add    rdx,0x20
  41600e:	xor    esi,esi
  416010:	vmovsd QWORD PTR [rdx-0x10],xmm0
  416015:	mov    QWORD PTR [r13+0x10],rdx
  416019:	mov    rdi,rbx
  41601c:	xor    edx,edx
  41601e:	call   40dc90 <__sprintf_chk@plt+0xb6b0>
  416023:	add    eax,0x2
  416026:	jmp    415f10 <__sprintf_chk@plt+0x13930>
  41602b:	nop    DWORD PTR [rax+rax*1+0x0]
  416030:	mov    r15,QWORD PTR [rsp+0x10]
  416035:	xor    r14d,r14d
  416038:	xor    ebp,ebp
  41603a:	jmp    415e38 <__sprintf_chk@plt+0x13858>
  41603f:	nop
  416040:	test   r15,r15
  416043:	je     415ef8 <__sprintf_chk@plt+0x13918>
  416049:	lea    rcx,[rbp+0x1]
  41604d:	vxorpd xmm0,xmm0,xmm0
  416051:	vcvtsi2sd xmm0,xmm0,rcx
  416056:	mov    rax,QWORD PTR [r13+0x10]
  41605a:	add    r14,QWORD PTR [rsp+0x18]
  41605f:	mov    DWORD PTR [rax+0x8],0x3
  416066:	vmovsd QWORD PTR [rax],xmm0
  41606a:	vxorpd xmm0,xmm0,xmm0
  41606e:	vcvtsi2sd xmm0,xmm0,r14
  416073:	mov    DWORD PTR [rax+0x18],0x3
  41607a:	add    rax,0x20
  41607e:	vmovsd QWORD PTR [rax-0x10],xmm0
  416083:	mov    QWORD PTR [r13+0x10],rax
  416087:	mov    eax,0x2
  41608c:	jmp    415f10 <__sprintf_chk@plt+0x13930>
  416091:	nop    DWORD PTR [rax+0x0]
  416098:	sub    rbx,QWORD PTR [rsp+0x10]
  41609d:	mov    rbp,rbx
  4160a0:	mov    r14,rbx
  4160a3:	jmp    416049 <__sprintf_chk@plt+0x13a69>
  4160a5:	nop    DWORD PTR [rax]
  4160a8:	mov    rdx,rax
  4160ab:	mov    rsi,r15
  4160ae:	mov    rdi,rbx
  4160b1:	call   40dc90 <__sprintf_chk@plt+0xb6b0>
  4160b6:	jmp    415f10 <__sprintf_chk@plt+0x13930>
  4160bb:	call   4023e0 <__stack_chk_fail@plt>
  4160c0:	endbr64 
  4160c4:	xor    esi,esi
  4160c6:	jmp    415d90 <__sprintf_chk@plt+0x137b0>
  4160cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4160d0:	endbr64 
  4160d4:	mov    esi,0x1
  4160d9:	jmp    415d90 <__sprintf_chk@plt+0x137b0>
  4160de:	xchg   ax,ax
  4160e0:	endbr64 
  4160e4:	push   r15
  4160e6:	push   r14
  4160e8:	push   r13
  4160ea:	push   r12
  4160ec:	push   rbp
  4160ed:	push   rbx
  4160ee:	sub    rsp,0x1000
  4160f5:	or     QWORD PTR [rsp],0x0
  4160fa:	sub    rsp,0x1000
  416101:	or     QWORD PTR [rsp],0x0
  416106:	sub    rsp,0x2b8
  41610d:	mov    esi,0x1
  416112:	mov    r13,rdi
  416115:	lea    rdx,[rsp+0x60]
  41611a:	mov    rax,QWORD PTR fs:0x28
  416123:	mov    QWORD PTR [rsp+0x22a8],rax
  41612b:	xor    eax,eax
  41612d:	call   412720 <__sprintf_chk@plt+0x10140>
  416132:	xor    edx,edx
  416134:	mov    esi,0x2
  416139:	mov    rdi,r13
  41613c:	mov    rbx,rax
  41613f:	call   412720 <__sprintf_chk@plt+0x10140>
  416144:	mov    r15,rax
  416147:	mov    QWORD PTR [rsp+0x10],rax
  41614c:	mov    rax,QWORD PTR [r13+0x18]
  416150:	lea    rdx,[rax+0x20]
  416154:	cmp    rdx,QWORD PTR [r13+0x10]
  416158:	jae    4165f0 <__sprintf_chk@plt+0x14010>
  41615e:	lea    rcx,[rip+0x1eab]        # 418010 <__sprintf_chk@plt+0x15a30>
  416165:	cmp    rdx,rcx
  416168:	je     4165f0 <__sprintf_chk@plt+0x14010>
  41616e:	mov    ebp,DWORD PTR [rax+0x28]
  416171:	mov    rax,QWORD PTR [rsp+0x60]
  416176:	mov    esi,0x4
  41617b:	lea    rdx,[rax+0x1]
  41617f:	mov    rdi,r13
  416182:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  416187:	sub    ebp,0x3
  41618a:	cmp    BYTE PTR [r15],0x5e
  41618e:	mov    DWORD PTR [rsp+0x48],eax
  416192:	mov    DWORD PTR [rsp+0x1c],0x0
  41619a:	jne    4161a9 <__sprintf_chk@plt+0x13bc9>
  41619c:	inc    QWORD PTR [rsp+0x10]
  4161a1:	mov    DWORD PTR [rsp+0x1c],0x1
  4161a9:	cmp    ebp,0x3
  4161ac:	ja     416610 <__sprintf_chk@plt+0x14030>
  4161b2:	lea    r15,[rsp+0x290]
  4161ba:	lea    rdx,[r15+0x18]
  4161be:	mov    QWORD PTR [rsp+0x290],rdx
  4161c6:	mov    rdx,QWORD PTR [rsp+0x60]
  4161cb:	mov    QWORD PTR [rsp+0x2a0],r13
  4161d3:	add    rdx,rbx
  4161d6:	mov    DWORD PTR [rsp+0x298],0x0
  4161e1:	mov    QWORD PTR [rsp+0x80],r13
  4161e9:	mov    QWORD PTR [rsp+0x70],rbx
  4161ee:	mov    QWORD PTR [rsp+0x78],rdx
  4161f3:	xor    r12d,r12d
  4161f6:	test   eax,eax
  4161f8:	jle    416433 <__sprintf_chk@plt+0x13e53>
  4161fe:	lea    rax,[rsp+0x70]
  416203:	mov    QWORD PTR [rsp+0x8],rax
  416208:	lea    rax,[r15+0x2018]
  41620f:	mov    QWORD PTR [rsp+0x28],rax
  416214:	lea    rax,[rsp+0x68]
  416219:	mov    QWORD PTR [rsp+0x38],rax
  41621e:	mov    QWORD PTR [rsp+0x40],r13
  416223:	mov    QWORD PTR [rsp+0x20],r15
  416228:	nop    DWORD PTR [rax+rax*1+0x0]
  416230:	mov    rdx,QWORD PTR [rsp+0x10]
  416235:	mov    rdi,QWORD PTR [rsp+0x8]
  41623a:	mov    rsi,rbx
  41623d:	mov    DWORD PTR [rsp+0x88],0x0
  416248:	call   415830 <__sprintf_chk@plt+0x13250>
  41624d:	mov    rbp,rax
  416250:	test   rax,rax
  416253:	je     4164a0 <__sprintf_chk@plt+0x13ec0>
  416259:	mov    r13,QWORD PTR [rsp+0x80]
  416261:	lea    rdi,[rip+0x1da8]        # 418010 <__sprintf_chk@plt+0x15a30>
  416268:	mov    rdx,QWORD PTR [r13+0x18]
  41626c:	inc    r12d
  41626f:	lea    rax,[rdx+0x20]
  416273:	mov    rcx,QWORD PTR [r13+0x10]
  416277:	cmp    rax,rdi
  41627a:	je     4163d0 <__sprintf_chk@plt+0x13df0>
  416280:	cmp    rax,rcx
  416283:	jae    4163d0 <__sprintf_chk@plt+0x13df0>
  416289:	mov    eax,DWORD PTR [rdx+0x28]
  41628c:	cmp    eax,0x5
  41628f:	je     4165b0 <__sprintf_chk@plt+0x13fd0>
  416295:	jg     416380 <__sprintf_chk@plt+0x13da0>
  41629b:	cmp    eax,0x3
  41629e:	jl     4163d0 <__sprintf_chk@plt+0x13df0>
  4162a4:	mov    rdx,QWORD PTR [rsp+0x38]
  4162a9:	mov    rdi,r13
  4162ac:	mov    esi,0x3
  4162b1:	call   412510 <__sprintf_chk@plt+0xff30>
  4162b6:	mov    r13,rax
  4162b9:	mov    rax,rbp
  4162bc:	sub    rax,rbx
  4162bf:	xor    r14d,r14d
  4162c2:	cmp    QWORD PTR [rsp+0x68],0x0
  4162c8:	mov    QWORD PTR [rsp+0x50],rax
  4162cd:	je     416405 <__sprintf_chk@plt+0x13e25>
  4162d3:	mov    QWORD PTR [rsp+0x30],rbp
  4162d8:	mov    DWORD PTR [rsp+0x4c],r12d
  4162dd:	mov    r15,QWORD PTR [rsp+0x28]
  4162e2:	jmp    416315 <__sprintf_chk@plt+0x13d35>
  4162e4:	nop    DWORD PTR [rax+0x0]
  4162e8:	mov    rax,QWORD PTR [rsp+0x290]
  4162f0:	cmp    rax,r15
  4162f3:	jae    4164e0 <__sprintf_chk@plt+0x13f00>
  4162f9:	lea    rsi,[rax+0x1]
  4162fd:	mov    QWORD PTR [rsp+0x290],rsi
  416305:	mov    r14,r12
  416308:	movzx  edx,BYTE PTR [rbp+0x0]
  41630c:	mov    BYTE PTR [rax],dl
  41630e:	cmp    QWORD PTR [rsp+0x68],r14
  416313:	jbe    416370 <__sprintf_chk@plt+0x13d90>
  416315:	lea    rbp,[r13+r14*1+0x0]
  41631a:	cmp    BYTE PTR [rbp+0x0],0x25
  41631e:	lea    r12,[r14+0x1]
  416322:	jne    4162e8 <__sprintf_chk@plt+0x13d08>
  416324:	call   4025d0 <__ctype_b_loc@plt>
  416329:	lea    rcx,[r13+r12*1+0x0]
  41632e:	movzx  esi,BYTE PTR [rcx]
  416331:	mov    rax,QWORD PTR [rax]
  416334:	add    r14,0x2
  416338:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41633d:	jne    416558 <__sprintf_chk@plt+0x13f78>
  416343:	mov    rax,QWORD PTR [rsp+0x290]
  41634b:	cmp    rax,r15
  41634e:	jae    416640 <__sprintf_chk@plt+0x14060>
  416354:	lea    rdx,[rax+0x1]
  416358:	mov    QWORD PTR [rsp+0x290],rdx
  416360:	movzx  edx,BYTE PTR [rcx]
  416363:	mov    BYTE PTR [rax],dl
  416365:	cmp    QWORD PTR [rsp+0x68],r14
  41636a:	ja     416315 <__sprintf_chk@plt+0x13d35>
  41636c:	nop    DWORD PTR [rax+0x0]
  416370:	mov    rbp,QWORD PTR [rsp+0x30]
  416375:	mov    r12d,DWORD PTR [rsp+0x4c]
  41637a:	jmp    416405 <__sprintf_chk@plt+0x13e25>
  41637f:	nop
  416380:	cmp    eax,0x6
  416383:	jne    4163d0 <__sprintf_chk@plt+0x13df0>
  416385:	mov    rax,QWORD PTR [rdx+0x20]
  416389:	add    rcx,0x10
  41638d:	mov    QWORD PTR [rcx-0x10],rax
  416391:	mov    DWORD PTR [rcx-0x8],0x6
  416398:	mov    QWORD PTR [r13+0x10],rcx
  41639c:	mov    rdi,QWORD PTR [rsp+0x8]
  4163a1:	mov    rdx,rbp
  4163a4:	mov    rsi,rbx
  4163a7:	call   40dc90 <__sprintf_chk@plt+0xb6b0>
  4163ac:	cdqe   
  4163ae:	shl    rax,0x4
  4163b2:	mov    rsi,0xfffffffffffffff0
  4163b9:	sub    rsi,rax
  4163bc:	add    rsi,QWORD PTR [r13+0x10]
  4163c0:	mov    edx,0x1
  4163c5:	mov    rdi,r13
  4163c8:	call   404fe0 <__sprintf_chk@plt+0x2a00>
  4163cd:	nop    DWORD PTR [rax]
  4163d0:	mov    esi,0xffffffff
  4163d5:	mov    rdi,r13
  4163d8:	call   403e10 <__sprintf_chk@plt+0x1830>
  4163dd:	test   eax,eax
  4163df:	jne    416500 <__sprintf_chk@plt+0x13f20>
  4163e5:	sub    QWORD PTR [r13+0x10],0x10
  4163ea:	mov    rdx,rbp
  4163ed:	sub    rdx,rbx
  4163f0:	mov    rsi,rbx
  4163f3:	mov    rdi,r13
  4163f6:	call   40bfc0 <__sprintf_chk@plt+0x99e0>
  4163fb:	mov    rdi,QWORD PTR [rsp+0x20]
  416400:	call   4125e0 <__sprintf_chk@plt+0x10000>
  416405:	cmp    rbp,rbx
  416408:	jbe    4164a0 <__sprintf_chk@plt+0x13ec0>
  41640e:	mov    rbx,rbp
  416411:	mov    eax,DWORD PTR [rsp+0x1c]
  416415:	test   eax,eax
  416417:	jne    416424 <__sprintf_chk@plt+0x13e44>
  416419:	cmp    DWORD PTR [rsp+0x48],r12d
  41641e:	jg     416230 <__sprintf_chk@plt+0x13c50>
  416424:	mov    r13,QWORD PTR [rsp+0x40]
  416429:	mov    r15,QWORD PTR [rsp+0x20]
  41642e:	mov    rdx,QWORD PTR [rsp+0x78]
  416433:	sub    rdx,rbx
  416436:	mov    rsi,rbx
  416439:	mov    rdi,r15
  41643c:	call   40d770 <__sprintf_chk@plt+0xb190>
  416441:	mov    rdi,r15
  416444:	call   40d7e0 <__sprintf_chk@plt+0xb200>
  416449:	vxorpd xmm0,xmm0,xmm0
  41644d:	vcvtsi2sd xmm0,xmm0,r12d
  416452:	mov    rax,QWORD PTR [r13+0x10]
  416456:	mov    DWORD PTR [rax+0x8],0x3
  41645d:	vmovsd QWORD PTR [rax],xmm0
  416461:	add    rax,0x10
  416465:	mov    QWORD PTR [r13+0x10],rax
  416469:	mov    eax,0x2
  41646e:	mov    rcx,QWORD PTR [rsp+0x22a8]
  416476:	xor    rcx,QWORD PTR fs:0x28
  41647f:	jne    41667f <__sprintf_chk@plt+0x1409f>
  416485:	add    rsp,0x22b8
  41648c:	pop    rbx
  41648d:	pop    rbp
  41648e:	pop    r12
  416490:	pop    r13
  416492:	pop    r14
  416494:	pop    r15
  416496:	ret    
  416497:	nop    WORD PTR [rax+rax*1+0x0]
  4164a0:	mov    rdx,QWORD PTR [rsp+0x78]
  4164a5:	cmp    rdx,rbx
  4164a8:	jbe    416661 <__sprintf_chk@plt+0x14081>
  4164ae:	mov    rax,QWORD PTR [rsp+0x290]
  4164b6:	cmp    rax,QWORD PTR [rsp+0x28]
  4164bb:	jae    416590 <__sprintf_chk@plt+0x13fb0>
  4164c1:	lea    rdx,[rax+0x1]
  4164c5:	mov    QWORD PTR [rsp+0x290],rdx
  4164cd:	inc    rbx
  4164d0:	movzx  edx,BYTE PTR [rbx-0x1]
  4164d4:	mov    BYTE PTR [rax],dl
  4164d6:	jmp    416411 <__sprintf_chk@plt+0x13e31>
  4164db:	nop    DWORD PTR [rax+rax*1+0x0]
  4164e0:	mov    rdi,QWORD PTR [rsp+0x20]
  4164e5:	call   40d730 <__sprintf_chk@plt+0xb150>
  4164ea:	mov    rax,QWORD PTR [rsp+0x290]
  4164f2:	jmp    4162f9 <__sprintf_chk@plt+0x13d19>
  4164f7:	nop    WORD PTR [rax+rax*1+0x0]
  416500:	mov    rax,QWORD PTR [r13+0x10]
  416504:	lea    rcx,[rip+0x1b05]        # 418010 <__sprintf_chk@plt+0x15a30>
  41650b:	lea    rdx,[rax-0x10]
  41650f:	cmp    rdx,rcx
  416512:	je     416670 <__sprintf_chk@plt+0x14090>
  416518:	movsxd rax,DWORD PTR [rax-0x8]
  41651c:	lea    edx,[rax-0x3]
  41651f:	cmp    edx,0x1
  416522:	jbe    4163fb <__sprintf_chk@plt+0x13e1b>
  416528:	mov    r14,r13
  41652b:	lea    rdx,[rip+0xdca]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  416532:	cmp    eax,0xffffffff
  416535:	je     416542 <__sprintf_chk@plt+0x13f62>
  416537:	lea    rdx,[rip+0x8862]        # 41eda0 <__sprintf_chk@plt+0x1c7c0>
  41653e:	mov    rdx,QWORD PTR [rdx+rax*8]
  416542:	lea    rsi,[rip+0x1ee7]        # 418430 <__sprintf_chk@plt+0x15e50>
  416549:	mov    rdi,r14
  41654c:	xor    eax,eax
  41654e:	call   40c0c0 <__sprintf_chk@plt+0x9ae0>
  416553:	nop    DWORD PTR [rax+rax*1+0x0]
  416558:	cmp    sil,0x30
  41655c:	je     416628 <__sprintf_chk@plt+0x14048>
  416562:	mov    rdi,QWORD PTR [rsp+0x8]
  416567:	movsx  edx,sil
  41656b:	mov    rcx,QWORD PTR [rsp+0x30]
  416570:	lea    esi,[rdx-0x31]
  416573:	mov    rdx,rbx
  416576:	call   40dbe0 <__sprintf_chk@plt+0xb600>
  41657b:	mov    rdi,QWORD PTR [rsp+0x20]
  416580:	call   4125e0 <__sprintf_chk@plt+0x10000>
  416585:	jmp    41630e <__sprintf_chk@plt+0x13d2e>
  41658a:	nop    WORD PTR [rax+rax*1+0x0]
  416590:	mov    rdi,QWORD PTR [rsp+0x20]
  416595:	call   40d730 <__sprintf_chk@plt+0xb150>
  41659a:	mov    rax,QWORD PTR [rsp+0x290]
  4165a2:	jmp    4164c1 <__sprintf_chk@plt+0x13ee1>
  4165a7:	nop    WORD PTR [rax+rax*1+0x0]
  4165b0:	mov    rdi,QWORD PTR [rsp+0x8]
  4165b5:	mov    rcx,rbp
  4165b8:	mov    rdx,rbx
  4165bb:	xor    esi,esi
  4165bd:	call   40dbe0 <__sprintf_chk@plt+0xb600>
  4165c2:	mov    rax,QWORD PTR [r13+0x18]
  4165c6:	mov    rdx,QWORD PTR [r13+0x10]
  4165ca:	lea    rsi,[rax+0x20]
  4165ce:	cmp    rsi,rdx
  4165d1:	lea    rax,[rip+0x1a38]        # 418010 <__sprintf_chk@plt+0x15a30>
  4165d8:	cmovae rsi,rax
  4165dc:	sub    rdx,0x10
  4165e0:	mov    rcx,rdx
  4165e3:	mov    rdi,r13
  4165e6:	call   40b320 <__sprintf_chk@plt+0x8d40>
  4165eb:	jmp    4163d0 <__sprintf_chk@plt+0x13df0>
  4165f0:	mov    rax,QWORD PTR [rsp+0x60]
  4165f5:	mov    esi,0x4
  4165fa:	lea    rdx,[rax+0x1]
  4165fe:	mov    rdi,r13
  416601:	call   40c980 <__sprintf_chk@plt+0xa3a0>
  416606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416610:	lea    rdx,[rip+0x1df9]        # 418410 <__sprintf_chk@plt+0x15e30>
  416617:	mov    esi,0x3
  41661c:	mov    rdi,r13
  41661f:	call   40c330 <__sprintf_chk@plt+0x9d50>
  416624:	nop    DWORD PTR [rax+0x0]
  416628:	mov    rdx,QWORD PTR [rsp+0x50]
  41662d:	mov    rdi,QWORD PTR [rsp+0x20]
  416632:	mov    rsi,rbx
  416635:	call   40d770 <__sprintf_chk@plt+0xb190>
  41663a:	jmp    41630e <__sprintf_chk@plt+0x13d2e>
  41663f:	nop
  416640:	mov    rdi,QWORD PTR [rsp+0x20]
  416645:	mov    QWORD PTR [rsp+0x58],rcx
  41664a:	call   40d730 <__sprintf_chk@plt+0xb150>
  41664f:	mov    rax,QWORD PTR [rsp+0x290]
  416657:	mov    rcx,QWORD PTR [rsp+0x58]
  41665c:	jmp    416354 <__sprintf_chk@plt+0x13d74>
  416661:	mov    r13,QWORD PTR [rsp+0x40]
  416666:	mov    r15,QWORD PTR [rsp+0x20]
  41666b:	jmp    416433 <__sprintf_chk@plt+0x13e53>
  416670:	mov    r14,r13
  416673:	lea    rdx,[rip+0xc82]        # 4172fc <__sprintf_chk@plt+0x14d1c>
  41667a:	jmp    416542 <__sprintf_chk@plt+0x13f62>
  41667f:	call   4023e0 <__stack_chk_fail@plt>
  416684:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41668f:	nop
  416690:	endbr64 
  416694:	push   r14
  416696:	mov    esi,0xffffd8ed
  41669b:	push   r13
  41669d:	mov    r13,rdi
  4166a0:	push   r12
  4166a2:	push   rbp
  4166a3:	push   rbx
  4166a4:	sub    rsp,0x240
  4166ab:	lea    rdx,[rsp+0x8]
  4166b0:	mov    rax,QWORD PTR fs:0x28
  4166b9:	mov    QWORD PTR [rsp+0x238],rax
  4166c1:	xor    eax,eax
  4166c3:	call   412510 <__sprintf_chk@plt+0xff30>
  4166c8:	xor    edx,edx
  4166ca:	mov    esi,0xffffd8ec
  4166cf:	mov    rdi,r13
  4166d2:	mov    r14,rax
  4166d5:	call   412510 <__sprintf_chk@plt+0xff30>
  4166da:	mov    r12,rax
  4166dd:	mov    rax,QWORD PTR [rsp+0x8]
  4166e2:	mov    esi,0xffffd8eb
  4166e7:	add    rax,r14
  4166ea:	mov    rdi,r13
  4166ed:	mov    QWORD PTR [rsp+0x20],r13
  4166f2:	mov    QWORD PTR [rsp+0x10],r14
  4166f7:	mov    QWORD PTR [rsp+0x18],rax
  4166fc:	call   403fb0 <__sprintf_chk@plt+0x19d0>
  416701:	lea    rbx,[r14+rax*1]
  416705:	cmp    rbx,QWORD PTR [rsp+0x18]
  41670a:	ja     4167f0 <__sprintf_chk@plt+0x14210>
  416710:	lea    rbp,[rsp+0x10]
  416715:	jmp    41672e <__sprintf_chk@plt+0x1414e>
  416717:	nop    WORD PTR [rax+rax*1+0x0]
  416720:	inc    rbx
  416723:	cmp    QWORD PTR [rsp+0x18],rbx
  416728:	jb     4167f0 <__sprintf_chk@plt+0x14210>
  41672e:	mov    rdx,r12
  416731:	mov    rsi,rbx
  416734:	mov    rdi,rbp
  416737:	mov    DWORD PTR [rsp+0x28],0x0
  41673f:	call   415830 <__sprintf_chk@plt+0x13250>
  416744:	mov    r8,rax
  416747:	test   rax,rax
  41674a:	je     416720 <__sprintf_chk@plt+0x14140>
  41674c:	sub    rax,r14
  41674f:	xor    edx,edx
  416751:	cmp    r8,rbx
  416754:	sete   dl
  416757:	add    rax,rdx
  41675a:	vxorpd xmm0,xmm0,xmm0
  41675e:	vcvtsi2sd xmm0,xmm0,rax
  416763:	mov    r9,QWORD PTR [r13+0x10]
  416767:	mov    esi,0xffffd8eb
  41676c:	lea    rax,[r9+0x10]
  416770:	vmovsd QWORD PTR [r9],xmm0
  416775:	mov    DWORD PTR [r9+0x8],0x3
  41677d:	mov    QWORD PTR [r13+0x10],rax
  416781:	mov    rdi,r13
  416784:	call   403c60 <__sprintf_chk@plt+0x1680>
  416789:	mov    rdx,QWORD PTR [r9]
  41678c:	mov    DWORD PTR [rax+0x8],0x3
  416793:	mov    QWORD PTR [rax],rdx
  416796:	cmp    DWORD PTR [r9+0x8],0x3
  41679b:	jle    4167d8 <__sprintf_chk@plt+0x141f8>
  41679d:	mov    rsi,QWORD PTR [r9]
  4167a0:	test   BYTE PTR [rsi+0x9],0x3
  4167a4:	je     4167d8 <__sprintf_chk@plt+0x141f8>
  4167a6:	mov    rax,QWORD PTR [r13+0x28]
  4167aa:	mov    rax,QWORD PTR [rax+0x8]
  4167ae:	mov    rdx,QWORD PTR [rax]
  4167b1:	movzx  eax,BYTE PTR [rdx+0x9]
  4167b5:	test   al,0x4
  4167b7:	je     4167d8 <__sprintf_chk@plt+0x141f8>
  4167b9:	mov    rdi,QWORD PTR [r13+0x20]
  4167bd:	cmp    BYTE PTR [rdi+0x21],0x1
  4167c1:	je     416815 <__sprintf_chk@plt+0x14235>
  4167c3:	movzx  ecx,BYTE PTR [rdi+0x20]
  4167c7:	and    eax,0xfffffff8
  4167ca:	and    ecx,0x3
  4167cd:	or     eax,ecx
  4167cf:	mov    BYTE PTR [rdx+0x9],al
  4167d2:	nop    WORD PTR [rax+rax*1+0x0]
  4167d8:	sub    QWORD PTR [r13+0x10],0x10
  4167dd:	mov    rdx,r8
  4167e0:	mov    rsi,rbx
  4167e3:	mov    rdi,rbp
  4167e6:	call   40dc90 <__sprintf_chk@plt+0xb6b0>
  4167eb:	jmp    4167f2 <__sprintf_chk@plt+0x14212>
  4167ed:	nop    DWORD PTR [rax]
  4167f0:	xor    eax,eax
  4167f2:	mov    rcx,QWORD PTR [rsp+0x238]
  4167fa:	xor    rcx,QWORD PTR fs:0x28
  416803:	jne    41681c <__sprintf_chk@plt+0x1423c>
  416805:	add    rsp,0x240
  41680c:	pop    rbx
  41680d:	pop    rbp
  41680e:	pop    r12
  416810:	pop    r13
  416812:	pop    r14
  416814:	ret    
  416815:	call   4041b0 <__sprintf_chk@plt+0x1bd0>
  41681a:	jmp    4167d8 <__sprintf_chk@plt+0x141f8>
  41681c:	call   4023e0 <__stack_chk_fail@plt>
  416821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41682b:	nop    DWORD PTR [rax+rax*1+0x0]
  416830:	endbr64 
  416834:	push   r15
  416836:	lea    r15,[rip+0x7ef3]        # 41e730 <__sprintf_chk@plt+0x1c150>
  41683d:	push   r14
  41683f:	mov    r14,rdx
  416842:	push   r13
  416844:	mov    r13,rsi
  416847:	push   r12
  416849:	mov    r12d,edi
  41684c:	push   rbp
  41684d:	lea    rbp,[rip+0x7ee4]        # 41e738 <__sprintf_chk@plt+0x1c158>
  416854:	push   rbx
  416855:	sub    rbp,r15
  416858:	sub    rsp,0x8
  41685c:	call   402000 <__ctype_toupper_loc@plt-0x310>
  416861:	sar    rbp,0x3
  416865:	je     416886 <__sprintf_chk@plt+0x142a6>
  416867:	xor    ebx,ebx
  416869:	nop    DWORD PTR [rax+0x0]
  416870:	mov    rdx,r14
  416873:	mov    rsi,r13
  416876:	mov    edi,r12d
  416879:	call   QWORD PTR [r15+rbx*8]
  41687d:	add    rbx,0x1
  416881:	cmp    rbp,rbx
  416884:	jne    416870 <__sprintf_chk@plt+0x14290>
  416886:	add    rsp,0x8
  41688a:	pop    rbx
  41688b:	pop    rbp
  41688c:	pop    r12
  41688e:	pop    r13
  416890:	pop    r14
  416892:	pop    r15
  416894:	ret    
  416895:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4168a0:	endbr64 
  4168a4:	ret    

Disassembly of section .fini:

00000000004168a8 <.fini>:
  4168a8:	endbr64 
  4168ac:	sub    rsp,0x8
  4168b0:	add    rsp,0x8
  4168b4:	ret    
