
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x8fe9]        # 40cff8 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x8fe2]        # 40d008 <_IO_stdin_used@@Base+0x4008>
  404026:	jmp    QWORD PTR [rip+0x8fe4]        # 40d010 <_IO_stdin_used@@Base+0x4010>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x8fe2]        # 40d018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strcpy@plt>:
  404040:	jmp    QWORD PTR [rip+0x8fda]        # 40d020 <strcpy@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <strlen@plt>:
  404050:	jmp    QWORD PTR [rip+0x8fd2]        # 40d028 <strlen@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <printf@plt>:
  404060:	jmp    QWORD PTR [rip+0x8fca]        # 40d030 <printf@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <snprintf@plt>:
  404070:	jmp    QWORD PTR [rip+0x8fc2]        # 40d038 <snprintf@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <strcmp@plt>:
  404080:	jmp    QWORD PTR [rip+0x8fba]        # 40d040 <strcmp@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <malloc@plt>:
  404090:	jmp    QWORD PTR [rip+0x8fb2]        # 40d048 <malloc@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <__isoc99_sscanf@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x8faa]        # 40d050 <__isoc99_sscanf@GLIBC_2.7>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <realloc@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x8fa2]        # 40d058 <realloc@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

00000000004040c0 <_start@@Base>:
  4040c0:	endbr64 
  4040c4:	xor    ebp,ebp
  4040c6:	mov    r9,rdx
  4040c9:	pop    rsi
  4040ca:	mov    rdx,rsp
  4040cd:	and    rsp,0xfffffffffffffff0
  4040d1:	push   rax
  4040d2:	push   rsp
  4040d3:	mov    r8,0x4082e0
  4040da:	mov    rcx,0x408270
  4040e1:	mov    rdi,0x4041b0
  4040e8:	call   QWORD PTR [rip+0x8f02]        # 40cff0 <__libc_start_main@GLIBC_2.2.5>
  4040ee:	hlt    
  4040ef:	nop
  4040f0:	endbr64 
  4040f4:	ret    
  4040f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040ff:	nop
  404100:	mov    eax,0x40d070
  404105:	cmp    rax,0x40d070
  40410b:	je     404120 <_start@@Base+0x60>
  40410d:	mov    eax,0x0
  404112:	test   rax,rax
  404115:	je     404120 <_start@@Base+0x60>
  404117:	mov    edi,0x40d070
  40411c:	jmp    rax
  40411e:	xchg   ax,ax
  404120:	ret    
  404121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40412c:	nop    DWORD PTR [rax+0x0]
  404130:	mov    esi,0x40d070
  404135:	sub    rsi,0x40d070
  40413c:	mov    rax,rsi
  40413f:	shr    rsi,0x3f
  404143:	sar    rax,0x3
  404147:	add    rsi,rax
  40414a:	sar    rsi,1
  40414d:	je     404160 <_start@@Base+0xa0>
  40414f:	mov    eax,0x0
  404154:	test   rax,rax
  404157:	je     404160 <_start@@Base+0xa0>
  404159:	mov    edi,0x40d070
  40415e:	jmp    rax
  404160:	ret    
  404161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40416c:	nop    DWORD PTR [rax+0x0]
  404170:	endbr64 
  404174:	cmp    BYTE PTR [rip+0x8ef5],0x0        # 40d070 <__bss_start@@Base>
  40417b:	jne    404190 <_start@@Base+0xd0>
  40417d:	push   rbp
  40417e:	mov    rbp,rsp
  404181:	call   404100 <_start@@Base+0x40>
  404186:	mov    BYTE PTR [rip+0x8ee3],0x1        # 40d070 <__bss_start@@Base>
  40418d:	pop    rbp
  40418e:	ret    
  40418f:	nop
  404190:	ret    
  404191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	endbr64 
  4041a4:	jmp    404130 <_start@@Base+0x70>
  4041a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004041b0 <main@@Base>:
  4041b0:	push   rbp
  4041b1:	push   r15
  4041b3:	push   r14
  4041b5:	push   r13
  4041b7:	push   r12
  4041b9:	push   rbx
  4041ba:	sub    rsp,0x78
  4041be:	lea    r12,[rsp+0x8]
  4041c3:	mov    rdi,r12
  4041c6:	call   404420 <table_init@@Base>
  4041cb:	lea    rsi,[rip+0x4e3a]        # 40900c <_IO_stdin_used@@Base+0xc>
  4041d2:	xor    ebp,ebp
  4041d4:	xor    edx,edx
  4041d6:	mov    rdi,r12
  4041d9:	call   404e30 <table_add_column@@Base>
  4041de:	mov    r15d,eax
  4041e1:	lea    rsi,[rip+0x4e26]        # 40900e <_IO_stdin_used@@Base+0xe>
  4041e8:	mov    edx,0x10
  4041ed:	mov    rdi,r12
  4041f0:	call   404e30 <table_add_column@@Base>
  4041f5:	mov    r14d,eax
  4041f8:	vxorps xmm0,xmm0,xmm0
  4041fc:	vmovss DWORD PTR [rsp+0x4],xmm0
  404202:	mov    r13b,0xf6
  404205:	xor    ebx,ebx
  404207:	nop    WORD PTR [rax+rax*1+0x0]
  404210:	movzx  eax,bl
  404213:	imul   eax,eax,0xcd
  404219:	shr    eax,0xb
  40421c:	mul    r13b
  40421f:	test   ebx,ebx
  404221:	setne  cl
  404224:	add    al,bl
  404226:	sete   al
  404229:	vxorps xmm0,xmm0,xmm0
  40422d:	and    al,cl
  40422f:	jne    404237 <main@@Base+0x87>
  404231:	vmovss xmm0,DWORD PTR [rsp+0x4]
  404237:	test   bl,0x1
  40423a:	je     404250 <main@@Base+0xa0>
  40423c:	vmovss DWORD PTR [rsp+0x4],xmm0
  404242:	jmp    40425e <main@@Base+0xae>
  404244:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40424e:	xchg   ax,ax
  404250:	vaddss xmm1,xmm0,DWORD PTR [rip+0x4dac]        # 409004 <_IO_stdin_used@@Base+0x4>
  404258:	vmovss DWORD PTR [rsp+0x4],xmm1
  40425e:	movzx  eax,al
  404261:	test   ebx,ebx
  404263:	jne    40426b <main@@Base+0xbb>
  404265:	vmovss DWORD PTR [rsp+0x4],xmm0
  40426b:	add    ebp,eax
  40426d:	mov    rdi,r12
  404270:	call   406810 <table_add_row@@Base>
  404275:	mov    rdi,r12
  404278:	mov    esi,ebx
  40427a:	mov    edx,r15d
  40427d:	mov    ecx,ebp
  40427f:	call   406dc0 <table_set_int@@Base>
  404284:	mov    rdi,r12
  404287:	mov    esi,ebx
  404289:	mov    edx,r14d
  40428c:	vmovss xmm0,DWORD PTR [rsp+0x4]
  404292:	call   4075c0 <table_set_float@@Base>
  404297:	add    ebx,0x1
  40429a:	cmp    ebx,0x64
  40429d:	jne    404210 <main@@Base+0x60>
  4042a3:	lea    rbx,[rsp+0x8]
  4042a8:	xor    r12d,r12d
  4042ab:	mov    edx,0x4
  4042b0:	xor    ecx,ecx
  4042b2:	mov    rdi,rbx
  4042b5:	mov    esi,r15d
  4042b8:	call   405d90 <table_sorted_find_int@@Base>
  4042bd:	mov    r13d,eax
  4042c0:	mov    edx,0x4
  4042c5:	mov    ecx,0x1
  4042ca:	mov    rdi,rbx
  4042cd:	mov    esi,r15d
  4042d0:	call   405d90 <table_sorted_find_int@@Base>
  4042d5:	mov    ebx,eax
  4042d7:	cmp    r13d,0x28
  4042db:	je     4042f4 <main@@Base+0x144>
  4042dd:	lea    rdi,[rip+0x4d2c]        # 409010 <_IO_stdin_used@@Base+0x10>
  4042e4:	xor    eax,eax
  4042e6:	mov    esi,r13d
  4042e9:	call   404060 <printf@plt>
  4042ee:	mov    r12d,0xffffffff
  4042f4:	cmp    ebx,0x31
  4042f7:	je     40430f <main@@Base+0x15f>
  4042f9:	lea    rdi,[rip+0x4d48]        # 409048 <_IO_stdin_used@@Base+0x48>
  404300:	xor    eax,eax
  404302:	mov    esi,ebx
  404304:	call   404060 <printf@plt>
  404309:	mov    r12d,0xffffffff
  40430f:	lea    r15,[rsp+0x8]
  404314:	vmovss xmm0,DWORD PTR [rip+0x4cec]        # 409008 <_IO_stdin_used@@Base+0x8>
  40431c:	xor    edx,edx
  40431e:	mov    rdi,r15
  404321:	mov    esi,r14d
  404324:	mov    ecx,r13d
  404327:	mov    r8d,ebx
  40432a:	call   4064f0 <table_sorted_subset_find_float@@Base>
  40432f:	mov    ebp,eax
  404331:	mov    edx,0x1
  404336:	mov    rdi,r15
  404339:	mov    esi,r14d
  40433c:	vmovss xmm0,DWORD PTR [rip+0x4cc4]        # 409008 <_IO_stdin_used@@Base+0x8>
  404344:	mov    ecx,r13d
  404347:	mov    r8d,ebx
  40434a:	call   4064f0 <table_sorted_subset_find_float@@Base>
  40434f:	mov    ebx,eax
  404351:	cmp    ebp,0x2a
  404354:	je     40436c <main@@Base+0x1bc>
  404356:	lea    rdi,[rip+0x4d22]        # 40907f <_IO_stdin_used@@Base+0x7f>
  40435d:	xor    eax,eax
  40435f:	mov    esi,ebp
  404361:	call   404060 <printf@plt>
  404366:	mov    r12d,0xffffffff
  40436c:	cmp    ebx,0x2b
  40436f:	je     404387 <main@@Base+0x1d7>
  404371:	lea    rdi,[rip+0x4d45]        # 4090bd <_IO_stdin_used@@Base+0xbd>
  404378:	xor    eax,eax
  40437a:	mov    esi,ebx
  40437c:	call   404060 <printf@plt>
  404381:	mov    r12d,0xffffffff
  404387:	lea    rdi,[rsp+0x8]
  40438c:	call   4044b0 <table_destroy@@Base>
  404391:	mov    eax,r12d
  404394:	add    rsp,0x78
  404398:	pop    rbx
  404399:	pop    r12
  40439b:	pop    r13
  40439d:	pop    r14
  40439f:	pop    r15
  4043a1:	pop    rbp
  4043a2:	ret    
  4043a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043ad:	nop    DWORD PTR [rax]

00000000004043b0 <table_new@@Base>:
  4043b0:	push   rax
  4043b1:	mov    edi,0x70
  4043b6:	call   404090 <malloc@plt>
  4043bb:	mov    QWORD PTR [rax],0x0
  4043c2:	mov    DWORD PTR [rax+0x8],0x0
  4043c9:	mov    ecx,0xa
  4043ce:	vmovq  xmm0,rcx
  4043d3:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  4043d8:	mov    QWORD PTR [rax+0x20],0x0
  4043e0:	mov    DWORD PTR [rax+0x28],0x0
  4043e7:	mov    ecx,0x14
  4043ec:	vmovq  xmm0,rcx
  4043f1:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  4043f6:	mov    DWORD PTR [rax+0x40],0x0
  4043fd:	mov    QWORD PTR [rax+0x68],0x0
  404405:	vpxor  xmm0,xmm0,xmm0
  404409:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  40440e:	mov    QWORD PTR [rax+0x58],0x0
  404416:	mov    QWORD PTR [rax+0x60],0xa
  40441e:	pop    rcx
  40441f:	ret    

0000000000404420 <table_init@@Base>:
  404420:	mov    QWORD PTR [rdi],0x0
  404427:	mov    DWORD PTR [rdi+0x8],0x0
  40442e:	mov    eax,0xa
  404433:	vmovq  xmm0,rax
  404438:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  40443d:	mov    QWORD PTR [rdi+0x20],0x0
  404445:	mov    DWORD PTR [rdi+0x28],0x0
  40444c:	mov    eax,0x14
  404451:	vmovq  xmm0,rax
  404456:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  40445b:	mov    DWORD PTR [rdi+0x40],0x0
  404462:	mov    QWORD PTR [rdi+0x68],0x0
  40446a:	vpxor  xmm0,xmm0,xmm0
  40446e:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  404473:	mov    QWORD PTR [rdi+0x58],0x0
  40447b:	mov    QWORD PTR [rdi+0x60],0xa
  404483:	ret    
  404484:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40448e:	xchg   ax,ax

0000000000404490 <table_delete@@Base>:
  404490:	push   rbx
  404491:	mov    rbx,rdi
  404494:	call   4044b0 <table_destroy@@Base>
  404499:	mov    rdi,rbx
  40449c:	pop    rbx
  40449d:	jmp    404030 <free@plt>
  4044a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044ac:	nop    DWORD PTR [rax+0x0]

00000000004044b0 <table_destroy@@Base>:
  4044b0:	test   rdi,rdi
  4044b3:	je     40456c <table_destroy@@Base+0xbc>
  4044b9:	push   rbp
  4044ba:	push   r14
  4044bc:	push   rbx
  4044bd:	mov    r14,rdi
  4044c0:	mov    esi,0xffffffff
  4044c5:	mov    edx,0xffffffff
  4044ca:	mov    ecx,0x40
  4044cf:	call   404cb0 <table_notify@@Base>
  4044d4:	mov    rdi,r14
  4044d7:	call   406800 <table_get_row_length@@Base>
  4044dc:	test   eax,eax
  4044de:	jle    404501 <table_destroy@@Base+0x51>
  4044e0:	mov    ebp,eax
  4044e2:	xor    ebx,ebx
  4044e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044ee:	xchg   ax,ax
  4044f0:	mov    rdi,r14
  4044f3:	mov    esi,ebx
  4044f5:	call   406790 <table_row_destroy@@Base>
  4044fa:	add    ebx,0x1
  4044fd:	cmp    ebp,ebx
  4044ff:	jne    4044f0 <table_destroy@@Base+0x40>
  404501:	mov    rdi,QWORD PTR [r14+0x20]
  404505:	test   rdi,rdi
  404508:	je     40450f <table_destroy@@Base+0x5f>
  40450a:	call   404030 <free@plt>
  40450f:	mov    rdi,r14
  404512:	call   404da0 <table_get_column_length@@Base>
  404517:	test   eax,eax
  404519:	jle    404531 <table_destroy@@Base+0x81>
  40451b:	mov    ebp,eax
  40451d:	xor    ebx,ebx
  40451f:	nop
  404520:	mov    rdi,r14
  404523:	mov    esi,ebx
  404525:	call   404d80 <table_column_destroy@@Base>
  40452a:	add    ebx,0x1
  40452d:	cmp    ebp,ebx
  40452f:	jne    404520 <table_destroy@@Base+0x70>
  404531:	mov    rdi,QWORD PTR [r14]
  404534:	test   rdi,rdi
  404537:	je     40453e <table_destroy@@Base+0x8e>
  404539:	call   404030 <free@plt>
  40453e:	mov    rdi,QWORD PTR [r14+0x48]
  404542:	test   rdi,rdi
  404545:	je     40454c <table_destroy@@Base+0x9c>
  404547:	call   404030 <free@plt>
  40454c:	mov    rdi,QWORD PTR [r14+0x50]
  404550:	test   rdi,rdi
  404553:	je     40455a <table_destroy@@Base+0xaa>
  404555:	call   404030 <free@plt>
  40455a:	mov    rdi,QWORD PTR [r14+0x58]
  40455e:	test   rdi,rdi
  404561:	pop    rbx
  404562:	pop    r14
  404564:	pop    rbp
  404565:	je     40456c <table_destroy@@Base+0xbc>
  404567:	jmp    404030 <free@plt>
  40456c:	ret    
  40456d:	nop    DWORD PTR [rax]

0000000000404570 <table_dupe@@Base>:
  404570:	push   rbp
  404571:	push   r15
  404573:	push   r14
  404575:	push   r13
  404577:	push   r12
  404579:	push   rbx
  40457a:	sub    rsp,0x28
  40457e:	mov    rbx,rdi
  404581:	call   406800 <table_get_row_length@@Base>
  404586:	mov    DWORD PTR [rsp+0x1c],eax
  40458a:	mov    rdi,rbx
  40458d:	call   404da0 <table_get_column_length@@Base>
  404592:	mov    r12d,eax
  404595:	mov    edi,0x70
  40459a:	call   404090 <malloc@plt>
  40459f:	mov    r15,rax
  4045a2:	mov    QWORD PTR [rax],0x0
  4045a9:	mov    DWORD PTR [rax+0x8],0x0
  4045b0:	mov    eax,0xa
  4045b5:	vmovq  xmm0,rax
  4045ba:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  4045c0:	mov    QWORD PTR [r15+0x20],0x0
  4045c8:	mov    DWORD PTR [r15+0x28],0x0
  4045d0:	mov    eax,0x14
  4045d5:	vmovq  xmm0,rax
  4045da:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  4045e0:	mov    DWORD PTR [r15+0x40],0x0
  4045e8:	mov    QWORD PTR [r15+0x68],0x0
  4045f0:	vpxor  xmm0,xmm0,xmm0
  4045f4:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  4045fa:	mov    QWORD PTR [r15+0x58],0x0
  404602:	mov    QWORD PTR [r15+0x60],0xa
  40460a:	test   r12d,r12d
  40460d:	jle    40464c <table_dupe@@Base+0xdc>
  40460f:	xor    ebp,ebp
  404611:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40461b:	nop    DWORD PTR [rax+rax*1+0x0]
  404620:	mov    rdi,rbx
  404623:	mov    esi,ebp
  404625:	call   404e10 <table_get_column_name@@Base>
  40462a:	mov    r13,rax
  40462d:	mov    rdi,rbx
  404630:	mov    esi,ebp
  404632:	call   404e20 <table_get_column_data_type@@Base>
  404637:	mov    rdi,r15
  40463a:	mov    rsi,r13
  40463d:	mov    edx,eax
  40463f:	call   404e30 <table_add_column@@Base>
  404644:	add    ebp,0x1
  404647:	cmp    r12d,ebp
  40464a:	jne    404620 <table_dupe@@Base+0xb0>
  40464c:	cmp    DWORD PTR [rsp+0x1c],0x0
  404651:	jle    4049da <table_dupe@@Base+0x46a>
  404657:	xor    ebp,ebp
  404659:	lea    r14,[rip+0x4a9c]        # 4090fc <_IO_stdin_used@@Base+0xfc>
  404660:	mov    rdi,r15
  404663:	call   406810 <table_add_row@@Base>
  404668:	test   r12d,r12d
  40466b:	jle    4049cd <table_dupe@@Base+0x45d>
  404671:	xor    r13d,r13d
  404674:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40467e:	xchg   ax,ax
  404680:	mov    rdi,rbx
  404683:	mov    esi,r13d
  404686:	call   404e20 <table_get_column_data_type@@Base>
  40468b:	cmp    eax,0x17
  40468e:	ja     4049c0 <table_dupe@@Base+0x450>
  404694:	mov    eax,eax
  404696:	movsxd rax,DWORD PTR [r14+rax*4]
  40469a:	add    rax,r14
  40469d:	jmp    rax
  40469f:	mov    rdi,rbx
  4046a2:	mov    esi,ebp
  4046a4:	mov    edx,r13d
  4046a7:	call   4065e0 <table_get_int@@Base>
  4046ac:	mov    rdi,r15
  4046af:	mov    esi,ebp
  4046b1:	mov    edx,r13d
  4046b4:	mov    ecx,eax
  4046b6:	call   406dc0 <table_set_int@@Base>
  4046bb:	jmp    4049c0 <table_dupe@@Base+0x450>
  4046c0:	mov    rdi,rbx
  4046c3:	mov    esi,ebp
  4046c5:	mov    edx,r13d
  4046c8:	call   4065f0 <table_get_uint@@Base>
  4046cd:	mov    rdi,r15
  4046d0:	mov    esi,ebp
  4046d2:	mov    edx,r13d
  4046d5:	mov    ecx,eax
  4046d7:	call   406e40 <table_set_uint@@Base>
  4046dc:	jmp    4049c0 <table_dupe@@Base+0x450>
  4046e1:	mov    rdi,rbx
  4046e4:	mov    esi,ebp
  4046e6:	mov    edx,r13d
  4046e9:	call   406600 <table_get_int8@@Base>
  4046ee:	movsx  ecx,al
  4046f1:	mov    rdi,r15
  4046f4:	mov    esi,ebp
  4046f6:	mov    edx,r13d
  4046f9:	call   406ec0 <table_set_int8@@Base>
  4046fe:	jmp    4049c0 <table_dupe@@Base+0x450>
  404703:	mov    rdi,rbx
  404706:	mov    esi,ebp
  404708:	mov    edx,r13d
  40470b:	call   406610 <table_get_uint8@@Base>
  404710:	movzx  ecx,al
  404713:	mov    rdi,r15
  404716:	mov    esi,ebp
  404718:	mov    edx,r13d
  40471b:	call   406f40 <table_set_uint8@@Base>
  404720:	jmp    4049c0 <table_dupe@@Base+0x450>
  404725:	mov    rdi,rbx
  404728:	mov    esi,ebp
  40472a:	mov    edx,r13d
  40472d:	call   406620 <table_get_int16@@Base>
  404732:	movsx  ecx,ax
  404735:	mov    rdi,r15
  404738:	mov    esi,ebp
  40473a:	mov    edx,r13d
  40473d:	call   406fc0 <table_set_int16@@Base>
  404742:	jmp    4049c0 <table_dupe@@Base+0x450>
  404747:	mov    rdi,rbx
  40474a:	mov    esi,ebp
  40474c:	mov    edx,r13d
  40474f:	call   406630 <table_get_uint16@@Base>
  404754:	movzx  ecx,ax
  404757:	mov    rdi,r15
  40475a:	mov    esi,ebp
  40475c:	mov    edx,r13d
  40475f:	call   407040 <table_set_uint16@@Base>
  404764:	jmp    4049c0 <table_dupe@@Base+0x450>
  404769:	mov    rdi,rbx
  40476c:	mov    esi,ebp
  40476e:	mov    edx,r13d
  404771:	call   406640 <table_get_int32@@Base>
  404776:	mov    rdi,r15
  404779:	mov    esi,ebp
  40477b:	mov    edx,r13d
  40477e:	mov    ecx,eax
  404780:	call   4070c0 <table_set_int32@@Base>
  404785:	jmp    4049c0 <table_dupe@@Base+0x450>
  40478a:	mov    rdi,rbx
  40478d:	mov    esi,ebp
  40478f:	mov    edx,r13d
  404792:	call   406650 <table_get_uint32@@Base>
  404797:	mov    rdi,r15
  40479a:	mov    esi,ebp
  40479c:	mov    edx,r13d
  40479f:	mov    ecx,eax
  4047a1:	call   407140 <table_set_uint32@@Base>
  4047a6:	jmp    4049c0 <table_dupe@@Base+0x450>
  4047ab:	mov    rdi,rbx
  4047ae:	mov    esi,ebp
  4047b0:	mov    edx,r13d
  4047b3:	call   406660 <table_get_int64@@Base>
  4047b8:	mov    rdi,r15
  4047bb:	mov    esi,ebp
  4047bd:	mov    edx,r13d
  4047c0:	mov    rcx,rax
  4047c3:	call   4071c0 <table_set_int64@@Base>
  4047c8:	jmp    4049c0 <table_dupe@@Base+0x450>
  4047cd:	mov    rdi,rbx
  4047d0:	mov    esi,ebp
  4047d2:	mov    edx,r13d
  4047d5:	call   406670 <table_get_uint64@@Base>
  4047da:	mov    rdi,r15
  4047dd:	mov    esi,ebp
  4047df:	mov    edx,r13d
  4047e2:	mov    rcx,rax
  4047e5:	call   407240 <table_set_uint64@@Base>
  4047ea:	jmp    4049c0 <table_dupe@@Base+0x450>
  4047ef:	mov    rdi,rbx
  4047f2:	mov    esi,ebp
  4047f4:	mov    edx,r13d
  4047f7:	call   406680 <table_get_short@@Base>
  4047fc:	movsx  ecx,ax
  4047ff:	mov    rdi,r15
  404802:	mov    esi,ebp
  404804:	mov    edx,r13d
  404807:	call   4072c0 <table_set_short@@Base>
  40480c:	jmp    4049c0 <table_dupe@@Base+0x450>
  404811:	mov    rdi,rbx
  404814:	mov    esi,ebp
  404816:	mov    edx,r13d
  404819:	call   406690 <table_get_ushort@@Base>
  40481e:	movzx  ecx,ax
  404821:	mov    rdi,r15
  404824:	mov    esi,ebp
  404826:	mov    edx,r13d
  404829:	call   407340 <table_set_ushort@@Base>
  40482e:	jmp    4049c0 <table_dupe@@Base+0x450>
  404833:	mov    rdi,rbx
  404836:	mov    esi,ebp
  404838:	mov    edx,r13d
  40483b:	call   4066a0 <table_get_long@@Base>
  404840:	mov    rdi,r15
  404843:	mov    esi,ebp
  404845:	mov    edx,r13d
  404848:	mov    rcx,rax
  40484b:	call   4073c0 <table_set_long@@Base>
  404850:	jmp    4049c0 <table_dupe@@Base+0x450>
  404855:	mov    rdi,rbx
  404858:	mov    esi,ebp
  40485a:	mov    edx,r13d
  40485d:	call   4066b0 <table_get_ulong@@Base>
  404862:	mov    rdi,r15
  404865:	mov    esi,ebp
  404867:	mov    edx,r13d
  40486a:	mov    rcx,rax
  40486d:	call   407440 <table_set_ulong@@Base>
  404872:	jmp    4049c0 <table_dupe@@Base+0x450>
  404877:	mov    rdi,rbx
  40487a:	mov    esi,ebp
  40487c:	mov    edx,r13d
  40487f:	call   4066c0 <table_get_llong@@Base>
  404884:	mov    rdi,r15
  404887:	mov    esi,ebp
  404889:	mov    edx,r13d
  40488c:	mov    rcx,rax
  40488f:	call   4074c0 <table_set_llong@@Base>
  404894:	jmp    4049c0 <table_dupe@@Base+0x450>
  404899:	mov    rdi,rbx
  40489c:	mov    esi,ebp
  40489e:	mov    edx,r13d
  4048a1:	call   4066d0 <table_get_ullong@@Base>
  4048a6:	mov    rdi,r15
  4048a9:	mov    esi,ebp
  4048ab:	mov    edx,r13d
  4048ae:	mov    rcx,rax
  4048b1:	call   407540 <table_set_ullong@@Base>
  4048b6:	jmp    4049c0 <table_dupe@@Base+0x450>
  4048bb:	mov    rdi,rbx
  4048be:	mov    esi,ebp
  4048c0:	mov    edx,r13d
  4048c3:	call   4066e0 <table_get_float@@Base>
  4048c8:	mov    rdi,r15
  4048cb:	mov    esi,ebp
  4048cd:	mov    edx,r13d
  4048d0:	call   4075c0 <table_set_float@@Base>
  4048d5:	jmp    4049c0 <table_dupe@@Base+0x450>
  4048da:	mov    rdi,rbx
  4048dd:	mov    esi,ebp
  4048df:	mov    edx,r13d
  4048e2:	call   4066f0 <table_get_double@@Base>
  4048e7:	mov    rdi,r15
  4048ea:	mov    esi,ebp
  4048ec:	mov    edx,r13d
  4048ef:	call   407650 <table_set_double@@Base>
  4048f4:	jmp    4049c0 <table_dupe@@Base+0x450>
  4048f9:	mov    rdi,rbx
  4048fc:	mov    esi,ebp
  4048fe:	mov    edx,r13d
  404901:	call   406700 <table_get_ldouble@@Base>
  404906:	fstp   TBYTE PTR [rsp]
  404909:	mov    rdi,r15
  40490c:	mov    esi,ebp
  40490e:	mov    edx,r13d
  404911:	call   4076e0 <table_set_ldouble@@Base>
  404916:	jmp    4049c0 <table_dupe@@Base+0x450>
  40491b:	mov    rdi,rbx
  40491e:	mov    esi,ebp
  404920:	mov    edx,r13d
  404923:	call   406710 <table_get_char@@Base>
  404928:	movsx  ecx,al
  40492b:	mov    rdi,r15
  40492e:	mov    esi,ebp
  404930:	mov    edx,r13d
  404933:	call   407790 <table_set_char@@Base>
  404938:	jmp    4049c0 <table_dupe@@Base+0x450>
  40493d:	mov    rdi,rbx
  404940:	mov    esi,ebp
  404942:	mov    edx,r13d
  404945:	call   406720 <table_get_uchar@@Base>
  40494a:	movzx  ecx,al
  40494d:	mov    rdi,r15
  404950:	mov    esi,ebp
  404952:	mov    edx,r13d
  404955:	call   407810 <table_set_uchar@@Base>
  40495a:	jmp    4049c0 <table_dupe@@Base+0x450>
  40495c:	mov    rdi,rbx
  40495f:	mov    esi,ebp
  404961:	mov    edx,r13d
  404964:	call   406730 <table_get_string@@Base>
  404969:	mov    rdi,r15
  40496c:	mov    esi,ebp
  40496e:	mov    edx,r13d
  404971:	mov    rcx,rax
  404974:	call   407780 <table_set_string@@Base>
  404979:	jmp    4049c0 <table_dupe@@Base+0x450>
  40497b:	mov    rdi,rbx
  40497e:	mov    esi,ebp
  404980:	mov    edx,r13d
  404983:	call   4065d0 <table_get_bool@@Base>
  404988:	movzx  ecx,al
  40498b:	mov    rdi,r15
  40498e:	mov    esi,ebp
  404990:	mov    edx,r13d
  404993:	call   406d40 <table_set_bool@@Base>
  404998:	jmp    4049c0 <table_dupe@@Base+0x450>
  40499a:	mov    rdi,rbx
  40499d:	mov    esi,ebp
  40499f:	mov    edx,r13d
  4049a2:	call   406740 <table_get_ptr@@Base>
  4049a7:	mov    QWORD PTR [rsp+0x20],rax
  4049ac:	mov    rdi,r15
  4049af:	mov    esi,ebp
  4049b1:	mov    edx,r13d
  4049b4:	lea    rcx,[rsp+0x20]
  4049b9:	call   407890 <table_set_ptr@@Base>
  4049be:	xchg   ax,ax
  4049c0:	add    r13d,0x1
  4049c4:	cmp    r12d,r13d
  4049c7:	jne    404680 <table_dupe@@Base+0x110>
  4049cd:	add    ebp,0x1
  4049d0:	cmp    ebp,DWORD PTR [rsp+0x1c]
  4049d4:	jne    404660 <table_dupe@@Base+0xf0>
  4049da:	mov    rax,r15
  4049dd:	add    rsp,0x28
  4049e1:	pop    rbx
  4049e2:	pop    r12
  4049e4:	pop    r13
  4049e6:	pop    r14
  4049e8:	pop    r15
  4049ea:	pop    rbp
  4049eb:	ret    
  4049ec:	nop    DWORD PTR [rax+0x0]

00000000004049f0 <table_get_major_version@@Base>:
  4049f0:	xor    eax,eax
  4049f2:	ret    
  4049f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049fd:	nop    DWORD PTR [rax]

0000000000404a00 <table_get_minor_version@@Base>:
  404a00:	xor    eax,eax
  404a02:	ret    
  404a03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a0d:	nop    DWORD PTR [rax]

0000000000404a10 <table_get_patch_version@@Base>:
  404a10:	xor    eax,eax
  404a12:	ret    
  404a13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a1d:	nop    DWORD PTR [rax]

0000000000404a20 <table_get_version@@Base>:
  404a20:	lea    rax,[rip+0x45e6]        # 40900d <_IO_stdin_used@@Base+0xd>
  404a27:	ret    
  404a28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a30 <table_get_callback_length@@Base>:
  404a30:	mov    eax,DWORD PTR [rdi+0x40]
  404a33:	ret    
  404a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a3e:	xchg   ax,ax

0000000000404a40 <table_register_callback@@Base>:
  404a40:	push   rbp
  404a41:	push   r15
  404a43:	push   r14
  404a45:	push   rbx
  404a46:	push   rax
  404a47:	mov    r14d,ecx
  404a4a:	mov    r15,rdx
  404a4d:	mov    rbp,rsi
  404a50:	mov    rbx,rdi
  404a53:	movsxd rcx,DWORD PTR [rdi+0x40]
  404a57:	test   rcx,rcx
  404a5a:	jle    404a8d <table_register_callback@@Base+0x4d>
  404a5c:	mov    rdx,QWORD PTR [rbx+0x48]
  404a60:	xor    eax,eax
  404a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a6c:	nop    DWORD PTR [rax+0x0]
  404a70:	cmp    QWORD PTR [rdx+rax*8],rbp
  404a74:	jne    404a84 <table_register_callback@@Base+0x44>
  404a76:	mov    rsi,QWORD PTR [rbx+0x50]
  404a7a:	cmp    QWORD PTR [rsi+rax*8],r15
  404a7e:	je     404b25 <table_register_callback@@Base+0xe5>
  404a84:	add    rax,0x1
  404a88:	cmp    rax,rcx
  404a8b:	jl     404a70 <table_register_callback@@Base+0x30>
  404a8d:	mov    rsi,QWORD PTR [rbx+0x60]
  404a91:	mov    rax,rcx
  404a94:	or     rax,rsi
  404a97:	shr    rax,0x20
  404a9b:	je     404b18 <table_register_callback@@Base+0xd8>
  404a9d:	xor    edx,edx
  404a9f:	mov    rax,rcx
  404aa2:	div    rsi
  404aa5:	test   rdx,rdx
  404aa8:	jne    404af1 <table_register_callback@@Base+0xb1>
  404aaa:	add    rsi,QWORD PTR [rbx+0x68]
  404aae:	mov    QWORD PTR [rbx+0x68],rsi
  404ab2:	mov    rdi,QWORD PTR [rbx+0x48]
  404ab6:	shl    rsi,0x3
  404aba:	call   4040b0 <realloc@plt>
  404abf:	mov    QWORD PTR [rbx+0x48],rax
  404ac3:	mov    rdi,QWORD PTR [rbx+0x50]
  404ac7:	mov    rsi,QWORD PTR [rbx+0x68]
  404acb:	shl    rsi,0x3
  404acf:	call   4040b0 <realloc@plt>
  404ad4:	mov    QWORD PTR [rbx+0x50],rax
  404ad8:	mov    rdi,QWORD PTR [rbx+0x58]
  404adc:	mov    rsi,QWORD PTR [rbx+0x68]
  404ae0:	shl    rsi,0x2
  404ae4:	call   4040b0 <realloc@plt>
  404ae9:	mov    QWORD PTR [rbx+0x58],rax
  404aed:	movsxd rcx,DWORD PTR [rbx+0x40]
  404af1:	mov    rax,QWORD PTR [rbx+0x48]
  404af5:	mov    QWORD PTR [rax+rcx*8],rbp
  404af9:	mov    rax,QWORD PTR [rbx+0x50]
  404afd:	mov    QWORD PTR [rax+rcx*8],r15
  404b01:	mov    rax,QWORD PTR [rbx+0x58]
  404b05:	mov    DWORD PTR [rax+rcx*4],r14d
  404b09:	add    DWORD PTR [rbx+0x40],0x1
  404b0d:	add    rsp,0x8
  404b11:	pop    rbx
  404b12:	pop    r14
  404b14:	pop    r15
  404b16:	pop    rbp
  404b17:	ret    
  404b18:	xor    edx,edx
  404b1a:	mov    eax,ecx
  404b1c:	div    esi
  404b1e:	test   rdx,rdx
  404b21:	jne    404af1 <table_register_callback@@Base+0xb1>
  404b23:	jmp    404aaa <table_register_callback@@Base+0x6a>
  404b25:	test   eax,eax
  404b27:	jle    404a8d <table_register_callback@@Base+0x4d>
  404b2d:	mov    rcx,QWORD PTR [rbx+0x58]
  404b31:	or     DWORD PTR [rcx+rax*4],r14d
  404b35:	jmp    404b0d <table_register_callback@@Base+0xcd>
  404b37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404b40 <table_unregister_callback@@Base>:
  404b40:	push   r15
  404b42:	push   r14
  404b44:	push   rbx
  404b45:	movsxd rcx,DWORD PTR [rdi+0x40]
  404b49:	test   rcx,rcx
  404b4c:	jle    404b79 <table_unregister_callback@@Base+0x39>
  404b4e:	mov    r15,rdi
  404b51:	lea    r14,[rdi+0x48]
  404b55:	mov    rdi,QWORD PTR [rdi+0x48]
  404b59:	xor    eax,eax
  404b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b60:	cmp    QWORD PTR [rdi+rax*8],rsi
  404b64:	jne    404b70 <table_unregister_callback@@Base+0x30>
  404b66:	mov    rbx,QWORD PTR [r15+0x50]
  404b6a:	cmp    QWORD PTR [rbx+rax*8],rdx
  404b6e:	je     404b7f <table_unregister_callback@@Base+0x3f>
  404b70:	add    rax,0x1
  404b74:	cmp    rax,rcx
  404b77:	jl     404b60 <table_unregister_callback@@Base+0x20>
  404b79:	pop    rbx
  404b7a:	pop    r14
  404b7c:	pop    r15
  404b7e:	ret    
  404b7f:	cmp    eax,0xffffffff
  404b82:	je     404b79 <table_unregister_callback@@Base+0x39>
  404b84:	add    ecx,0xffffffff
  404b87:	cmp    ecx,eax
  404b89:	jle    404bfa <table_unregister_callback@@Base+0xba>
  404b8b:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  404b90:	mov    QWORD PTR [rdi+rax*8],rcx
  404b94:	mov    rcx,QWORD PTR [r15+0x50]
  404b98:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  404b9d:	mov    QWORD PTR [rcx+rax*8],rdx
  404ba1:	mov    rcx,QWORD PTR [r15+0x58]
  404ba5:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  404ba9:	mov    DWORD PTR [rcx+rax*4],edx
  404bac:	lea    rdx,[rax+0x1]
  404bb0:	movsxd rax,DWORD PTR [r15+0x40]
  404bb4:	add    rax,0xffffffffffffffff
  404bb8:	mov    ecx,eax
  404bba:	cmp    rdx,rax
  404bbd:	jge    404bfd <table_unregister_callback@@Base+0xbd>
  404bbf:	nop
  404bc0:	mov    rax,QWORD PTR [r15+0x48]
  404bc4:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404bc9:	mov    QWORD PTR [rax+rdx*8],rcx
  404bcd:	mov    rax,QWORD PTR [r15+0x50]
  404bd1:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404bd6:	mov    QWORD PTR [rax+rdx*8],rcx
  404bda:	mov    rax,QWORD PTR [r15+0x58]
  404bde:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  404be2:	mov    DWORD PTR [rax+rdx*4],ecx
  404be5:	lea    rdx,[rdx+0x1]
  404be9:	movsxd rax,DWORD PTR [r15+0x40]
  404bed:	add    rax,0xffffffffffffffff
  404bf1:	cmp    rdx,rax
  404bf4:	jl     404bc0 <table_unregister_callback@@Base+0x80>
  404bf6:	mov    ecx,eax
  404bf8:	jmp    404bfd <table_unregister_callback@@Base+0xbd>
  404bfa:	movsxd rax,ecx
  404bfd:	mov    DWORD PTR [r15+0x40],ecx
  404c01:	mov    rcx,QWORD PTR [r15+0x60]
  404c05:	mov    rdx,rax
  404c08:	or     rdx,rcx
  404c0b:	shr    rdx,0x20
  404c0f:	je     404c21 <table_unregister_callback@@Base+0xe1>
  404c11:	xor    edx,edx
  404c13:	div    rcx
  404c16:	test   rdx,rdx
  404c19:	jne    404b79 <table_unregister_callback@@Base+0x39>
  404c1f:	jmp    404c2e <table_unregister_callback@@Base+0xee>
  404c21:	xor    edx,edx
  404c23:	div    ecx
  404c25:	test   rdx,rdx
  404c28:	jne    404b79 <table_unregister_callback@@Base+0x39>
  404c2e:	mov    rdi,QWORD PTR [r15+0x48]
  404c32:	mov    rsi,QWORD PTR [r15+0x68]
  404c36:	sub    rsi,rcx
  404c39:	mov    QWORD PTR [r15+0x68],rsi
  404c3d:	je     404c7b <table_unregister_callback@@Base+0x13b>
  404c3f:	shl    rsi,0x3
  404c43:	call   4040b0 <realloc@plt>
  404c48:	mov    QWORD PTR [r15+0x48],rax
  404c4c:	mov    rdi,QWORD PTR [r15+0x50]
  404c50:	mov    rsi,QWORD PTR [r15+0x68]
  404c54:	shl    rsi,0x3
  404c58:	call   4040b0 <realloc@plt>
  404c5d:	mov    QWORD PTR [r15+0x50],rax
  404c61:	mov    rdi,QWORD PTR [r15+0x58]
  404c65:	mov    rsi,QWORD PTR [r15+0x68]
  404c69:	shl    rsi,0x2
  404c6d:	call   4040b0 <realloc@plt>
  404c72:	mov    QWORD PTR [r15+0x58],rax
  404c76:	jmp    404b79 <table_unregister_callback@@Base+0x39>
  404c7b:	call   404030 <free@plt>
  404c80:	mov    rdi,QWORD PTR [r15+0x50]
  404c84:	call   404030 <free@plt>
  404c89:	mov    rdi,QWORD PTR [r15+0x58]
  404c8d:	call   404030 <free@plt>
  404c92:	vxorps xmm0,xmm0,xmm0
  404c96:	vmovups XMMWORD PTR [r14],xmm0
  404c9b:	mov    QWORD PTR [r14+0x10],0x0
  404ca3:	jmp    404b79 <table_unregister_callback@@Base+0x39>
  404ca8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404cb0 <table_notify@@Base>:
  404cb0:	push   rbp
  404cb1:	push   r15
  404cb3:	push   r14
  404cb5:	push   r12
  404cb7:	push   rbx
  404cb8:	mov    eax,DWORD PTR [rdi+0x40]
  404cbb:	test   eax,eax
  404cbd:	jle    404d04 <table_notify@@Base+0x54>
  404cbf:	mov    r12d,ecx
  404cc2:	mov    r14d,edx
  404cc5:	mov    r15d,esi
  404cc8:	mov    rbp,rdi
  404ccb:	xor    ebx,ebx
  404ccd:	nop    DWORD PTR [rax]
  404cd0:	mov    rcx,QWORD PTR [rbp+0x58]
  404cd4:	test   DWORD PTR [rcx+rbx*4],r12d
  404cd8:	je     404cf8 <table_notify@@Base+0x48>
  404cda:	mov    rax,QWORD PTR [rbp+0x48]
  404cde:	mov    rcx,QWORD PTR [rbp+0x50]
  404ce2:	mov    r8,QWORD PTR [rcx+rbx*8]
  404ce6:	mov    rdi,rbp
  404ce9:	mov    esi,r15d
  404cec:	mov    edx,r14d
  404cef:	mov    ecx,r12d
  404cf2:	call   QWORD PTR [rax+rbx*8]
  404cf5:	mov    eax,DWORD PTR [rbp+0x40]
  404cf8:	add    rbx,0x1
  404cfc:	movsxd rcx,eax
  404cff:	cmp    rbx,rcx
  404d02:	jl     404cd0 <table_notify@@Base+0x20>
  404d04:	pop    rbx
  404d05:	pop    r12
  404d07:	pop    r14
  404d09:	pop    r15
  404d0b:	pop    rbp
  404d0c:	ret    
  404d0d:	nop    DWORD PTR [rax]

0000000000404d10 <table_column_init@@Base>:
  404d10:	push   rbp
  404d11:	push   r15
  404d13:	push   r14
  404d15:	push   r12
  404d17:	push   rbx
  404d18:	mov    r14,r8
  404d1b:	mov    r15d,ecx
  404d1e:	mov    r12,rdx
  404d21:	mov    rbp,QWORD PTR [rdi]
  404d24:	movsxd rbx,esi
  404d27:	mov    rdi,rdx
  404d2a:	call   404050 <strlen@plt>
  404d2f:	lea    rdi,[rax+0x1]
  404d33:	call   404090 <malloc@plt>
  404d38:	lea    rbx,[rbx+rbx*2]
  404d3c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  404d41:	test   rax,rax
  404d44:	je     404d51 <table_column_init@@Base+0x41>
  404d46:	mov    rdi,rax
  404d49:	mov    rsi,r12
  404d4c:	call   404040 <strcpy@plt>
  404d51:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  404d56:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  404d5b:	pop    rbx
  404d5c:	pop    r12
  404d5e:	pop    r14
  404d60:	pop    r15
  404d62:	pop    rbp
  404d63:	ret    
  404d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d6e:	xchg   ax,ax

0000000000404d70 <table_get_col_ptr@@Base>:
  404d70:	movsxd rax,esi
  404d73:	lea    rax,[rax+rax*2]
  404d77:	shl    rax,0x3
  404d7b:	add    rax,QWORD PTR [rdi]
  404d7e:	ret    
  404d7f:	nop

0000000000404d80 <table_column_destroy@@Base>:
  404d80:	mov    rax,QWORD PTR [rdi]
  404d83:	movsxd rcx,esi
  404d86:	lea    rcx,[rcx+rcx*2]
  404d8a:	mov    rdi,QWORD PTR [rax+rcx*8]
  404d8e:	test   rdi,rdi
  404d91:	je     404d98 <table_column_destroy@@Base+0x18>
  404d93:	jmp    404030 <free@plt>
  404d98:	ret    
  404d99:	nop    DWORD PTR [rax+0x0]

0000000000404da0 <table_get_column_length@@Base>:
  404da0:	mov    eax,DWORD PTR [rdi+0x8]
  404da3:	ret    
  404da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dae:	xchg   ax,ax

0000000000404db0 <table_get_column@@Base>:
  404db0:	push   r15
  404db2:	push   r14
  404db4:	push   r12
  404db6:	push   rbx
  404db7:	push   rax
  404db8:	movsxd r14,DWORD PTR [rdi+0x8]
  404dbc:	test   r14,r14
  404dbf:	jle    404dee <table_get_column@@Base+0x3e>
  404dc1:	mov    r15,rsi
  404dc4:	mov    rbx,QWORD PTR [rdi]
  404dc7:	xor    r12d,r12d
  404dca:	nop    WORD PTR [rax+rax*1+0x0]
  404dd0:	mov    rdi,QWORD PTR [rbx]
  404dd3:	mov    rsi,r15
  404dd6:	call   404080 <strcmp@plt>
  404ddb:	test   eax,eax
  404ddd:	je     404df1 <table_get_column@@Base+0x41>
  404ddf:	add    r12,0x1
  404de3:	add    rbx,0x18
  404de7:	cmp    r12,r14
  404dea:	jl     404dd0 <table_get_column@@Base+0x20>
  404dec:	jmp    404df1 <table_get_column@@Base+0x41>
  404dee:	xor    r12d,r12d
  404df1:	cmp    r12d,r14d
  404df4:	mov    eax,0xffffffff
  404df9:	cmovne eax,r12d
  404dfd:	add    rsp,0x8
  404e01:	pop    rbx
  404e02:	pop    r12
  404e04:	pop    r14
  404e06:	pop    r15
  404e08:	ret    
  404e09:	nop    DWORD PTR [rax+0x0]

0000000000404e10 <table_get_column_name@@Base>:
  404e10:	mov    rax,QWORD PTR [rdi]
  404e13:	movsxd rcx,esi
  404e16:	lea    rcx,[rcx+rcx*2]
  404e1a:	mov    rax,QWORD PTR [rax+rcx*8]
  404e1e:	ret    
  404e1f:	nop

0000000000404e20 <table_get_column_data_type@@Base>:
  404e20:	mov    rax,QWORD PTR [rdi]
  404e23:	movsxd rcx,esi
  404e26:	lea    rcx,[rcx+rcx*2]
  404e2a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  404e2e:	ret    
  404e2f:	nop

0000000000404e30 <table_add_column@@Base>:
  404e30:	push   rbp
  404e31:	push   r15
  404e33:	push   r14
  404e35:	push   r13
  404e37:	push   r12
  404e39:	push   rbx
  404e3a:	sub    rsp,0x18
  404e3e:	mov    r15d,edx
  404e41:	mov    r13,rsi
  404e44:	mov    r12,rdi
  404e47:	movsxd rax,DWORD PTR [rdi+0x8]
  404e4b:	mov    rcx,QWORD PTR [rdi+0x10]
  404e4f:	mov    rdx,rax
  404e52:	or     rdx,rcx
  404e55:	shr    rdx,0x20
  404e59:	je     404e67 <table_add_column@@Base+0x37>
  404e5b:	xor    edx,edx
  404e5d:	div    rcx
  404e60:	test   rdx,rdx
  404e63:	jne    404ec9 <table_add_column@@Base+0x99>
  404e65:	jmp    404e70 <table_add_column@@Base+0x40>
  404e67:	xor    edx,edx
  404e69:	div    ecx
  404e6b:	test   rdx,rdx
  404e6e:	jne    404ec9 <table_add_column@@Base+0x99>
  404e70:	add    rcx,QWORD PTR [r12+0x18]
  404e75:	mov    QWORD PTR [r12+0x18],rcx
  404e7a:	mov    rdi,QWORD PTR [r12]
  404e7e:	shl    rcx,0x3
  404e82:	lea    rsi,[rcx+rcx*2]
  404e86:	call   4040b0 <realloc@plt>
  404e8b:	mov    QWORD PTR [r12],rax
  404e8f:	mov    rdi,r12
  404e92:	call   406800 <table_get_row_length@@Base>
  404e97:	test   eax,eax
  404e99:	jle    404ec9 <table_add_column@@Base+0x99>
  404e9b:	mov    r14d,eax
  404e9e:	xor    ebp,ebp
  404ea0:	mov    rdi,r12
  404ea3:	mov    esi,ebp
  404ea5:	call   406780 <table_get_row_ptr@@Base>
  404eaa:	mov    rbx,rax
  404ead:	mov    rdi,QWORD PTR [rax]
  404eb0:	mov    rsi,QWORD PTR [r12+0x18]
  404eb5:	shl    rsi,0x3
  404eb9:	call   4040b0 <realloc@plt>
  404ebe:	mov    QWORD PTR [rbx],rax
  404ec1:	add    ebp,0x1
  404ec4:	cmp    r14d,ebp
  404ec7:	jne    404ea0 <table_add_column@@Base+0x70>
  404ec9:	mov    rdi,r12
  404ecc:	call   406800 <table_get_row_length@@Base>
  404ed1:	mov    r14d,eax
  404ed4:	movsxd rbx,DWORD PTR [r12+0x8]
  404ed9:	mov    DWORD PTR [rsp+0xc],r15d
  404ede:	mov    edi,r15d
  404ee1:	call   405850 <table_get_default_compare_function_for_data_type@@Base>
  404ee6:	mov    QWORD PTR [rsp+0x10],rax
  404eeb:	mov    rbp,QWORD PTR [r12]
  404eef:	mov    rdi,r13
  404ef2:	call   404050 <strlen@plt>
  404ef7:	lea    rdi,[rax+0x1]
  404efb:	call   404090 <malloc@plt>
  404f00:	lea    r15,[rbx+rbx*2]
  404f04:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  404f09:	test   rax,rax
  404f0c:	je     404f19 <table_add_column@@Base+0xe9>
  404f0e:	mov    rdi,rax
  404f11:	mov    rsi,r13
  404f14:	call   404040 <strcpy@plt>
  404f19:	mov    eax,DWORD PTR [rsp+0xc]
  404f1d:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  404f22:	mov    rax,QWORD PTR [rsp+0x10]
  404f27:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  404f2c:	test   r14d,r14d
  404f2f:	jle    404f54 <table_add_column@@Base+0x124>
  404f31:	xor    ebp,ebp
  404f33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f3d:	nop    DWORD PTR [rax]
  404f40:	mov    rdi,r12
  404f43:	mov    esi,ebp
  404f45:	mov    edx,ebx
  404f47:	call   4078f0 <table_cell_init@@Base>
  404f4c:	add    ebp,0x1
  404f4f:	cmp    r14d,ebp
  404f52:	jne    404f40 <table_add_column@@Base+0x110>
  404f54:	mov    edx,DWORD PTR [r12+0x8]
  404f59:	mov    esi,0xffffffff
  404f5e:	mov    ecx,0x8
  404f63:	mov    rdi,r12
  404f66:	call   404cb0 <table_notify@@Base>
  404f6b:	mov    eax,DWORD PTR [r12+0x8]
  404f70:	lea    ecx,[rax+0x1]
  404f73:	mov    DWORD PTR [r12+0x8],ecx
  404f78:	add    rsp,0x18
  404f7c:	pop    rbx
  404f7d:	pop    r12
  404f7f:	pop    r13
  404f81:	pop    r14
  404f83:	pop    r15
  404f85:	pop    rbp
  404f86:	ret    
  404f87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404f90 <table_remove_column@@Base>:
  404f90:	push   rbp
  404f91:	push   r15
  404f93:	push   r14
  404f95:	push   r13
  404f97:	push   r12
  404f99:	push   rbx
  404f9a:	sub    rsp,0x28
  404f9e:	mov    r14d,esi
  404fa1:	mov    r12,rdi
  404fa4:	mov    rax,QWORD PTR [rdi]
  404fa7:	movsxd r15,esi
  404faa:	lea    rcx,[r15+r15*2]
  404fae:	mov    rdi,QWORD PTR [rax+rcx*8]
  404fb2:	test   rdi,rdi
  404fb5:	je     404fbc <table_remove_column@@Base+0x2c>
  404fb7:	call   404030 <free@plt>
  404fbc:	mov    eax,DWORD PTR [r12+0x8]
  404fc1:	add    eax,0xffffffff
  404fc4:	mov    DWORD PTR [rsp+0xc],eax
  404fc8:	sub    eax,r14d
  404fcb:	mov    QWORD PTR [rsp+0x10],rax
  404fd0:	jle    405164 <table_remove_column@@Base+0x1d4>
  404fd6:	movsxd rax,DWORD PTR [rsp+0xc]
  404fdb:	mov    rcx,r15
  404fde:	not    rcx
  404fe1:	add    rcx,rax
  404fe4:	mov    rdx,QWORD PTR [rsp+0x10]
  404fe9:	mov    rsi,r15
  404fec:	and    rdx,0x7
  404ff0:	je     40503d <table_remove_column@@Base+0xad>
  404ff2:	lea    rsi,[r15*8+0x0]
  404ffa:	lea    rsi,[rsi+rsi*2]
  404ffe:	neg    rdx
  405001:	xor    edi,edi
  405003:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40500d:	nop    DWORD PTR [rax]
  405010:	mov    rbp,QWORD PTR [r12]
  405014:	mov    rbx,QWORD PTR [rbp+rsi*1+0x28]
  405019:	mov    QWORD PTR [rbp+rsi*1+0x10],rbx
  40501e:	vmovups xmm0,XMMWORD PTR [rbp+rsi*1+0x18]
  405024:	vmovups XMMWORD PTR [rbp+rsi*1+0x0],xmm0
  40502a:	add    rdi,0xffffffffffffffff
  40502e:	add    rsi,0x18
  405032:	cmp    rdx,rdi
  405035:	jne    405010 <table_remove_column@@Base+0x80>
  405037:	mov    rsi,r15
  40503a:	sub    rsi,rdi
  40503d:	cmp    rcx,0x7
  405041:	jb     405164 <table_remove_column@@Base+0x1d4>
  405047:	sub    rax,rsi
  40504a:	shl    rsi,0x3
  40504e:	lea    rcx,[rsi+rsi*2]
  405052:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40505c:	nop    DWORD PTR [rax+0x0]
  405060:	mov    rdx,QWORD PTR [r12]
  405064:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  405069:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  40506e:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  405074:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  405079:	mov    rdx,QWORD PTR [r12]
  40507d:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  405082:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  405087:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  40508d:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  405093:	mov    rdx,QWORD PTR [r12]
  405097:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  40509c:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  4050a1:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  4050a7:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  4050ad:	mov    rdx,QWORD PTR [r12]
  4050b1:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  4050b6:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  4050bb:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  4050c1:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  4050c7:	mov    rdx,QWORD PTR [r12]
  4050cb:	mov    rsi,QWORD PTR [rdx+rcx*1+0x88]
  4050d3:	mov    QWORD PTR [rdx+rcx*1+0x70],rsi
  4050d8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x78]
  4050de:	vmovups XMMWORD PTR [rdx+rcx*1+0x60],xmm0
  4050e4:	mov    rdx,QWORD PTR [r12]
  4050e8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x90]
  4050f1:	vmovups XMMWORD PTR [rdx+rcx*1+0x78],xmm0
  4050f7:	mov    rsi,QWORD PTR [rdx+rcx*1+0xa0]
  4050ff:	mov    QWORD PTR [rdx+rcx*1+0x88],rsi
  405107:	mov    rdx,QWORD PTR [r12]
  40510b:	mov    rsi,QWORD PTR [rdx+rcx*1+0xb8]
  405113:	mov    QWORD PTR [rdx+rcx*1+0xa0],rsi
  40511b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xa8]
  405124:	vmovups XMMWORD PTR [rdx+rcx*1+0x90],xmm0
  40512d:	mov    rdx,QWORD PTR [r12]
  405131:	mov    rsi,QWORD PTR [rdx+rcx*1+0xd0]
  405139:	mov    QWORD PTR [rdx+rcx*1+0xb8],rsi
  405141:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xc0]
  40514a:	vmovups XMMWORD PTR [rdx+rcx*1+0xa8],xmm0
  405153:	add    rcx,0xc0
  40515a:	add    rax,0xfffffffffffffff8
  40515e:	jne    405060 <table_remove_column@@Base+0xd0>
  405164:	mov    rbx,r15
  405167:	mov    rdi,r12
  40516a:	call   406800 <table_get_row_length@@Base>
  40516f:	test   eax,eax
  405171:	jle    40528c <table_remove_column@@Base+0x2fc>
  405177:	mov    r15d,eax
  40517a:	movsxd r13,DWORD PTR [rsp+0xc]
  40517f:	mov    rax,rbx
  405182:	not    rax
  405185:	add    rax,r13
  405188:	mov    QWORD PTR [rsp+0x20],rax
  40518d:	mov    rax,QWORD PTR [rsp+0x10]
  405192:	and    eax,0x7
  405195:	mov    QWORD PTR [rsp+0x10],rax
  40519a:	neg    rax
  40519d:	mov    QWORD PTR [rsp+0x18],rax
  4051a2:	xor    ebp,ebp
  4051a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051ae:	xchg   ax,ax
  4051b0:	mov    rdi,r12
  4051b3:	mov    esi,ebp
  4051b5:	mov    edx,r14d
  4051b8:	call   407930 <table_cell_destroy@@Base>
  4051bd:	mov    rdi,r12
  4051c0:	mov    esi,ebp
  4051c2:	call   406780 <table_get_row_ptr@@Base>
  4051c7:	cmp    DWORD PTR [rsp+0xc],r14d
  4051cc:	jle    405280 <table_remove_column@@Base+0x2f0>
  4051d2:	mov    rcx,rbx
  4051d5:	cmp    QWORD PTR [rsp+0x10],0x0
  4051db:	je     405206 <table_remove_column@@Base+0x276>
  4051dd:	mov    rdx,QWORD PTR [rsp+0x18]
  4051e2:	mov    rcx,rbx
  4051e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051ef:	nop
  4051f0:	mov    rsi,QWORD PTR [rax]
  4051f3:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  4051f8:	mov    QWORD PTR [rsi+rcx*8],rdi
  4051fc:	add    rcx,0x1
  405200:	add    rdx,0x1
  405204:	jne    4051f0 <table_remove_column@@Base+0x260>
  405206:	cmp    QWORD PTR [rsp+0x20],0x7
  40520c:	jb     405280 <table_remove_column@@Base+0x2f0>
  40520e:	xchg   ax,ax
  405210:	mov    rdx,QWORD PTR [rax]
  405213:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  405218:	mov    QWORD PTR [rdx+rcx*8],rsi
  40521c:	mov    rdx,QWORD PTR [rax]
  40521f:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  405224:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  405229:	mov    rdx,QWORD PTR [rax]
  40522c:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  405231:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  405236:	mov    rdx,QWORD PTR [rax]
  405239:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  40523e:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  405243:	mov    rdx,QWORD PTR [rax]
  405246:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  40524b:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  405250:	mov    rdx,QWORD PTR [rax]
  405253:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  405258:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  40525d:	mov    rdx,QWORD PTR [rax]
  405260:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  405265:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  40526a:	mov    rdx,QWORD PTR [rax]
  40526d:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  405272:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  405277:	add    rcx,0x8
  40527b:	cmp    r13,rcx
  40527e:	jne    405210 <table_remove_column@@Base+0x280>
  405280:	add    ebp,0x1
  405283:	cmp    ebp,r15d
  405286:	jne    4051b0 <table_remove_column@@Base+0x220>
  40528c:	movsxd rax,DWORD PTR [r12+0x8]
  405291:	add    rax,0xffffffffffffffff
  405295:	mov    DWORD PTR [r12+0x8],eax
  40529a:	mov    rcx,QWORD PTR [r12+0x10]
  40529f:	mov    rdx,rax
  4052a2:	or     rdx,rcx
  4052a5:	shr    rdx,0x20
  4052a9:	je     4052b7 <table_remove_column@@Base+0x327>
  4052ab:	xor    edx,edx
  4052ad:	div    rcx
  4052b0:	test   rdx,rdx
  4052b3:	jne    405329 <table_remove_column@@Base+0x399>
  4052b5:	jmp    4052c0 <table_remove_column@@Base+0x330>
  4052b7:	xor    edx,edx
  4052b9:	div    ecx
  4052bb:	test   rdx,rdx
  4052be:	jne    405329 <table_remove_column@@Base+0x399>
  4052c0:	mov    rdi,QWORD PTR [r12]
  4052c4:	mov    rax,QWORD PTR [r12+0x18]
  4052c9:	sub    rax,rcx
  4052cc:	mov    QWORD PTR [r12+0x18],rax
  4052d1:	shl    rax,0x3
  4052d5:	lea    rsi,[rax+rax*2]
  4052d9:	call   4040b0 <realloc@plt>
  4052de:	mov    QWORD PTR [r12],rax
  4052e2:	mov    rdi,r12
  4052e5:	call   406800 <table_get_row_length@@Base>
  4052ea:	test   eax,eax
  4052ec:	jle    405329 <table_remove_column@@Base+0x399>
  4052ee:	mov    r15d,eax
  4052f1:	xor    ebp,ebp
  4052f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052fd:	nop    DWORD PTR [rax]
  405300:	mov    rdi,r12
  405303:	mov    esi,ebp
  405305:	call   406780 <table_get_row_ptr@@Base>
  40530a:	mov    rbx,rax
  40530d:	mov    rdi,QWORD PTR [rax]
  405310:	mov    rsi,QWORD PTR [r12+0x18]
  405315:	shl    rsi,0x3
  405319:	call   4040b0 <realloc@plt>
  40531e:	mov    QWORD PTR [rbx],rax
  405321:	add    ebp,0x1
  405324:	cmp    r15d,ebp
  405327:	jne    405300 <table_remove_column@@Base+0x370>
  405329:	mov    esi,0xffffffff
  40532e:	mov    ecx,0x10
  405333:	mov    rdi,r12
  405336:	mov    edx,r14d
  405339:	call   404cb0 <table_notify@@Base>
  40533e:	xor    eax,eax
  405340:	add    rsp,0x28
  405344:	pop    rbx
  405345:	pop    r12
  405347:	pop    r13
  405349:	pop    r14
  40534b:	pop    r15
  40534d:	pop    rbp
  40534e:	ret    
  40534f:	nop

0000000000405350 <table_get_column_compare_function@@Base>:
  405350:	mov    rax,QWORD PTR [rdi]
  405353:	movsxd rcx,esi
  405356:	lea    rcx,[rcx+rcx*2]
  40535a:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  40535f:	ret    

0000000000405360 <table_set_column_compare_function@@Base>:
  405360:	mov    rax,QWORD PTR [rdi]
  405363:	movsxd rcx,esi
  405366:	lea    rcx,[rcx+rcx*2]
  40536a:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  40536f:	ret    

0000000000405370 <table_compare_bool@@Base>:
  405370:	test   rdi,rdi
  405373:	je     40538d <table_compare_bool@@Base+0x1d>
  405375:	test   rsi,rsi
  405378:	je     405393 <table_compare_bool@@Base+0x23>
  40537a:	mov    al,BYTE PTR [rdi]
  40537c:	mov    cl,BYTE PTR [rsi]
  40537e:	cmp    al,cl
  405380:	sbb    edx,edx
  405382:	cmp    al,cl
  405384:	mov    eax,0x1
  405389:	cmovbe eax,edx
  40538c:	ret    
  40538d:	neg    rsi
  405390:	sbb    eax,eax
  405392:	ret    
  405393:	mov    eax,0x1
  405398:	ret    
  405399:	nop    DWORD PTR [rax+0x0]

00000000004053a0 <table_compare_int@@Base>:
  4053a0:	test   rdi,rdi
  4053a3:	je     4053c2 <table_compare_int@@Base+0x22>
  4053a5:	test   rsi,rsi
  4053a8:	je     4053c8 <table_compare_int@@Base+0x28>
  4053aa:	mov    eax,DWORD PTR [rdi]
  4053ac:	mov    ecx,DWORD PTR [rsi]
  4053ae:	xor    edx,edx
  4053b0:	cmp    eax,ecx
  4053b2:	setl   dl
  4053b5:	neg    edx
  4053b7:	cmp    eax,ecx
  4053b9:	mov    eax,0x1
  4053be:	cmovle eax,edx
  4053c1:	ret    
  4053c2:	neg    rsi
  4053c5:	sbb    eax,eax
  4053c7:	ret    
  4053c8:	mov    eax,0x1
  4053cd:	ret    
  4053ce:	xchg   ax,ax

00000000004053d0 <table_compare_uint@@Base>:
  4053d0:	test   rdi,rdi
  4053d3:	je     4053ed <table_compare_uint@@Base+0x1d>
  4053d5:	test   rsi,rsi
  4053d8:	je     4053f3 <table_compare_uint@@Base+0x23>
  4053da:	mov    eax,DWORD PTR [rdi]
  4053dc:	mov    ecx,DWORD PTR [rsi]
  4053de:	cmp    eax,ecx
  4053e0:	sbb    edx,edx
  4053e2:	cmp    eax,ecx
  4053e4:	mov    eax,0x1
  4053e9:	cmovbe eax,edx
  4053ec:	ret    
  4053ed:	neg    rsi
  4053f0:	sbb    eax,eax
  4053f2:	ret    
  4053f3:	mov    eax,0x1
  4053f8:	ret    
  4053f9:	nop    DWORD PTR [rax+0x0]

0000000000405400 <table_compare_int8@@Base>:
  405400:	test   rdi,rdi
  405403:	je     405422 <table_compare_int8@@Base+0x22>
  405405:	test   rsi,rsi
  405408:	je     405428 <table_compare_int8@@Base+0x28>
  40540a:	mov    al,BYTE PTR [rdi]
  40540c:	mov    cl,BYTE PTR [rsi]
  40540e:	xor    edx,edx
  405410:	cmp    al,cl
  405412:	setl   dl
  405415:	neg    edx
  405417:	cmp    al,cl
  405419:	mov    eax,0x1
  40541e:	cmovle eax,edx
  405421:	ret    
  405422:	neg    rsi
  405425:	sbb    eax,eax
  405427:	ret    
  405428:	mov    eax,0x1
  40542d:	ret    
  40542e:	xchg   ax,ax

0000000000405430 <table_compare_uint8@@Base>:
  405430:	test   rdi,rdi
  405433:	je     40544d <table_compare_uint8@@Base+0x1d>
  405435:	test   rsi,rsi
  405438:	je     405453 <table_compare_uint8@@Base+0x23>
  40543a:	mov    al,BYTE PTR [rdi]
  40543c:	mov    cl,BYTE PTR [rsi]
  40543e:	cmp    al,cl
  405440:	sbb    edx,edx
  405442:	cmp    al,cl
  405444:	mov    eax,0x1
  405449:	cmovbe eax,edx
  40544c:	ret    
  40544d:	neg    rsi
  405450:	sbb    eax,eax
  405452:	ret    
  405453:	mov    eax,0x1
  405458:	ret    
  405459:	nop    DWORD PTR [rax+0x0]

0000000000405460 <table_compare_int16@@Base>:
  405460:	test   rdi,rdi
  405463:	je     405486 <table_compare_int16@@Base+0x26>
  405465:	test   rsi,rsi
  405468:	je     40548c <table_compare_int16@@Base+0x2c>
  40546a:	movzx  eax,WORD PTR [rdi]
  40546d:	movzx  ecx,WORD PTR [rsi]
  405470:	xor    edx,edx
  405472:	cmp    ax,cx
  405475:	setl   dl
  405478:	neg    edx
  40547a:	cmp    ax,cx
  40547d:	mov    eax,0x1
  405482:	cmovle eax,edx
  405485:	ret    
  405486:	neg    rsi
  405489:	sbb    eax,eax
  40548b:	ret    
  40548c:	mov    eax,0x1
  405491:	ret    
  405492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40549c:	nop    DWORD PTR [rax+0x0]

00000000004054a0 <table_compare_uint16@@Base>:
  4054a0:	test   rdi,rdi
  4054a3:	je     4054c1 <table_compare_uint16@@Base+0x21>
  4054a5:	test   rsi,rsi
  4054a8:	je     4054c7 <table_compare_uint16@@Base+0x27>
  4054aa:	movzx  eax,WORD PTR [rdi]
  4054ad:	movzx  ecx,WORD PTR [rsi]
  4054b0:	cmp    ax,cx
  4054b3:	sbb    edx,edx
  4054b5:	cmp    ax,cx
  4054b8:	mov    eax,0x1
  4054bd:	cmovbe eax,edx
  4054c0:	ret    
  4054c1:	neg    rsi
  4054c4:	sbb    eax,eax
  4054c6:	ret    
  4054c7:	mov    eax,0x1
  4054cc:	ret    
  4054cd:	nop    DWORD PTR [rax]

00000000004054d0 <table_compare_int32@@Base>:
  4054d0:	test   rdi,rdi
  4054d3:	je     4054f2 <table_compare_int32@@Base+0x22>
  4054d5:	test   rsi,rsi
  4054d8:	je     4054f8 <table_compare_int32@@Base+0x28>
  4054da:	mov    eax,DWORD PTR [rdi]
  4054dc:	mov    ecx,DWORD PTR [rsi]
  4054de:	xor    edx,edx
  4054e0:	cmp    eax,ecx
  4054e2:	setl   dl
  4054e5:	neg    edx
  4054e7:	cmp    eax,ecx
  4054e9:	mov    eax,0x1
  4054ee:	cmovle eax,edx
  4054f1:	ret    
  4054f2:	neg    rsi
  4054f5:	sbb    eax,eax
  4054f7:	ret    
  4054f8:	mov    eax,0x1
  4054fd:	ret    
  4054fe:	xchg   ax,ax

0000000000405500 <table_compare_uint32@@Base>:
  405500:	test   rdi,rdi
  405503:	je     40551d <table_compare_uint32@@Base+0x1d>
  405505:	test   rsi,rsi
  405508:	je     405523 <table_compare_uint32@@Base+0x23>
  40550a:	mov    eax,DWORD PTR [rdi]
  40550c:	mov    ecx,DWORD PTR [rsi]
  40550e:	cmp    eax,ecx
  405510:	sbb    edx,edx
  405512:	cmp    eax,ecx
  405514:	mov    eax,0x1
  405519:	cmovbe eax,edx
  40551c:	ret    
  40551d:	neg    rsi
  405520:	sbb    eax,eax
  405522:	ret    
  405523:	mov    eax,0x1
  405528:	ret    
  405529:	nop    DWORD PTR [rax+0x0]

0000000000405530 <table_compare_int64@@Base>:
  405530:	test   rdi,rdi
  405533:	je     405556 <table_compare_int64@@Base+0x26>
  405535:	test   rsi,rsi
  405538:	je     40555c <table_compare_int64@@Base+0x2c>
  40553a:	mov    rax,QWORD PTR [rdi]
  40553d:	mov    rcx,QWORD PTR [rsi]
  405540:	xor    edx,edx
  405542:	cmp    rax,rcx
  405545:	setl   dl
  405548:	neg    edx
  40554a:	cmp    rax,rcx
  40554d:	mov    eax,0x1
  405552:	cmovle eax,edx
  405555:	ret    
  405556:	neg    rsi
  405559:	sbb    eax,eax
  40555b:	ret    
  40555c:	mov    eax,0x1
  405561:	ret    
  405562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40556c:	nop    DWORD PTR [rax+0x0]

0000000000405570 <table_compare_uint64@@Base>:
  405570:	test   rdi,rdi
  405573:	je     405591 <table_compare_uint64@@Base+0x21>
  405575:	test   rsi,rsi
  405578:	je     405597 <table_compare_uint64@@Base+0x27>
  40557a:	mov    rax,QWORD PTR [rdi]
  40557d:	mov    rcx,QWORD PTR [rsi]
  405580:	cmp    rax,rcx
  405583:	sbb    edx,edx
  405585:	cmp    rax,rcx
  405588:	mov    eax,0x1
  40558d:	cmovbe eax,edx
  405590:	ret    
  405591:	neg    rsi
  405594:	sbb    eax,eax
  405596:	ret    
  405597:	mov    eax,0x1
  40559c:	ret    
  40559d:	nop    DWORD PTR [rax]

00000000004055a0 <table_compare_short@@Base>:
  4055a0:	test   rdi,rdi
  4055a3:	je     4055c6 <table_compare_short@@Base+0x26>
  4055a5:	test   rsi,rsi
  4055a8:	je     4055cc <table_compare_short@@Base+0x2c>
  4055aa:	movzx  eax,WORD PTR [rdi]
  4055ad:	movzx  ecx,WORD PTR [rsi]
  4055b0:	xor    edx,edx
  4055b2:	cmp    ax,cx
  4055b5:	setl   dl
  4055b8:	neg    edx
  4055ba:	cmp    ax,cx
  4055bd:	mov    eax,0x1
  4055c2:	cmovle eax,edx
  4055c5:	ret    
  4055c6:	neg    rsi
  4055c9:	sbb    eax,eax
  4055cb:	ret    
  4055cc:	mov    eax,0x1
  4055d1:	ret    
  4055d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055dc:	nop    DWORD PTR [rax+0x0]

00000000004055e0 <table_compare_ushort@@Base>:
  4055e0:	test   rdi,rdi
  4055e3:	je     405601 <table_compare_ushort@@Base+0x21>
  4055e5:	test   rsi,rsi
  4055e8:	je     405607 <table_compare_ushort@@Base+0x27>
  4055ea:	movzx  eax,WORD PTR [rdi]
  4055ed:	movzx  ecx,WORD PTR [rsi]
  4055f0:	cmp    ax,cx
  4055f3:	sbb    edx,edx
  4055f5:	cmp    ax,cx
  4055f8:	mov    eax,0x1
  4055fd:	cmovbe eax,edx
  405600:	ret    
  405601:	neg    rsi
  405604:	sbb    eax,eax
  405606:	ret    
  405607:	mov    eax,0x1
  40560c:	ret    
  40560d:	nop    DWORD PTR [rax]

0000000000405610 <table_compare_long@@Base>:
  405610:	test   rdi,rdi
  405613:	je     405636 <table_compare_long@@Base+0x26>
  405615:	test   rsi,rsi
  405618:	je     40563c <table_compare_long@@Base+0x2c>
  40561a:	mov    rax,QWORD PTR [rdi]
  40561d:	mov    rcx,QWORD PTR [rsi]
  405620:	xor    edx,edx
  405622:	cmp    rax,rcx
  405625:	setl   dl
  405628:	neg    edx
  40562a:	cmp    rax,rcx
  40562d:	mov    eax,0x1
  405632:	cmovle eax,edx
  405635:	ret    
  405636:	neg    rsi
  405639:	sbb    eax,eax
  40563b:	ret    
  40563c:	mov    eax,0x1
  405641:	ret    
  405642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40564c:	nop    DWORD PTR [rax+0x0]

0000000000405650 <table_compare_ulong@@Base>:
  405650:	test   rdi,rdi
  405653:	je     405671 <table_compare_ulong@@Base+0x21>
  405655:	test   rsi,rsi
  405658:	je     405677 <table_compare_ulong@@Base+0x27>
  40565a:	mov    rax,QWORD PTR [rdi]
  40565d:	mov    rcx,QWORD PTR [rsi]
  405660:	cmp    rax,rcx
  405663:	sbb    edx,edx
  405665:	cmp    rax,rcx
  405668:	mov    eax,0x1
  40566d:	cmovbe eax,edx
  405670:	ret    
  405671:	neg    rsi
  405674:	sbb    eax,eax
  405676:	ret    
  405677:	mov    eax,0x1
  40567c:	ret    
  40567d:	nop    DWORD PTR [rax]

0000000000405680 <table_compare_llong@@Base>:
  405680:	test   rdi,rdi
  405683:	je     4056a6 <table_compare_llong@@Base+0x26>
  405685:	test   rsi,rsi
  405688:	je     4056ac <table_compare_llong@@Base+0x2c>
  40568a:	mov    rax,QWORD PTR [rdi]
  40568d:	mov    rcx,QWORD PTR [rsi]
  405690:	xor    edx,edx
  405692:	cmp    rax,rcx
  405695:	setl   dl
  405698:	neg    edx
  40569a:	cmp    rax,rcx
  40569d:	mov    eax,0x1
  4056a2:	cmovle eax,edx
  4056a5:	ret    
  4056a6:	neg    rsi
  4056a9:	sbb    eax,eax
  4056ab:	ret    
  4056ac:	mov    eax,0x1
  4056b1:	ret    
  4056b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056bc:	nop    DWORD PTR [rax+0x0]

00000000004056c0 <table_compare_ullong@@Base>:
  4056c0:	test   rdi,rdi
  4056c3:	je     4056e1 <table_compare_ullong@@Base+0x21>
  4056c5:	test   rsi,rsi
  4056c8:	je     4056e7 <table_compare_ullong@@Base+0x27>
  4056ca:	mov    rax,QWORD PTR [rdi]
  4056cd:	mov    rcx,QWORD PTR [rsi]
  4056d0:	cmp    rax,rcx
  4056d3:	sbb    edx,edx
  4056d5:	cmp    rax,rcx
  4056d8:	mov    eax,0x1
  4056dd:	cmovbe eax,edx
  4056e0:	ret    
  4056e1:	neg    rsi
  4056e4:	sbb    eax,eax
  4056e6:	ret    
  4056e7:	mov    eax,0x1
  4056ec:	ret    
  4056ed:	nop    DWORD PTR [rax]

00000000004056f0 <table_compare_float@@Base>:
  4056f0:	test   rdi,rdi
  4056f3:	je     40571a <table_compare_float@@Base+0x2a>
  4056f5:	test   rsi,rsi
  4056f8:	je     405720 <table_compare_float@@Base+0x30>
  4056fa:	vmovss xmm0,DWORD PTR [rdi]
  4056fe:	vmovss xmm1,DWORD PTR [rsi]
  405702:	xor    ecx,ecx
  405704:	vucomiss xmm1,xmm0
  405708:	seta   cl
  40570b:	neg    ecx
  40570d:	vucomiss xmm0,xmm1
  405711:	mov    eax,0x1
  405716:	cmovbe eax,ecx
  405719:	ret    
  40571a:	neg    rsi
  40571d:	sbb    eax,eax
  40571f:	ret    
  405720:	mov    eax,0x1
  405725:	ret    
  405726:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405730 <table_compare_double@@Base>:
  405730:	test   rdi,rdi
  405733:	je     40575a <table_compare_double@@Base+0x2a>
  405735:	test   rsi,rsi
  405738:	je     405760 <table_compare_double@@Base+0x30>
  40573a:	vmovsd xmm0,QWORD PTR [rdi]
  40573e:	vmovsd xmm1,QWORD PTR [rsi]
  405742:	xor    ecx,ecx
  405744:	vucomisd xmm1,xmm0
  405748:	seta   cl
  40574b:	neg    ecx
  40574d:	vucomisd xmm0,xmm1
  405751:	mov    eax,0x1
  405756:	cmovbe eax,ecx
  405759:	ret    
  40575a:	neg    rsi
  40575d:	sbb    eax,eax
  40575f:	ret    
  405760:	mov    eax,0x1
  405765:	ret    
  405766:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405770 <table_compare_ldouble@@Base>:
  405770:	test   rdi,rdi
  405773:	je     405796 <table_compare_ldouble@@Base+0x26>
  405775:	test   rsi,rsi
  405778:	je     40579c <table_compare_ldouble@@Base+0x2c>
  40577a:	fld    TBYTE PTR [rdi]
  40577c:	fld    TBYTE PTR [rsi]
  40577e:	xor    ecx,ecx
  405780:	fucomi st,st(1)
  405782:	seta   cl
  405785:	neg    ecx
  405787:	fxch   st(1)
  405789:	fucomip st,st(1)
  40578b:	fstp   st(0)
  40578d:	mov    eax,0x1
  405792:	cmovbe eax,ecx
  405795:	ret    
  405796:	neg    rsi
  405799:	sbb    eax,eax
  40579b:	ret    
  40579c:	mov    eax,0x1
  4057a1:	ret    
  4057a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057ac:	nop    DWORD PTR [rax+0x0]

00000000004057b0 <table_compare_char@@Base>:
  4057b0:	test   rdi,rdi
  4057b3:	je     4057d2 <table_compare_char@@Base+0x22>
  4057b5:	test   rsi,rsi
  4057b8:	je     4057d8 <table_compare_char@@Base+0x28>
  4057ba:	mov    al,BYTE PTR [rdi]
  4057bc:	mov    cl,BYTE PTR [rsi]
  4057be:	xor    edx,edx
  4057c0:	cmp    al,cl
  4057c2:	setl   dl
  4057c5:	neg    edx
  4057c7:	cmp    al,cl
  4057c9:	mov    eax,0x1
  4057ce:	cmovle eax,edx
  4057d1:	ret    
  4057d2:	neg    rsi
  4057d5:	sbb    eax,eax
  4057d7:	ret    
  4057d8:	mov    eax,0x1
  4057dd:	ret    
  4057de:	xchg   ax,ax

00000000004057e0 <table_compare_uchar@@Base>:
  4057e0:	test   rdi,rdi
  4057e3:	je     4057fd <table_compare_uchar@@Base+0x1d>
  4057e5:	test   rsi,rsi
  4057e8:	je     405803 <table_compare_uchar@@Base+0x23>
  4057ea:	mov    al,BYTE PTR [rdi]
  4057ec:	mov    cl,BYTE PTR [rsi]
  4057ee:	cmp    al,cl
  4057f0:	sbb    edx,edx
  4057f2:	cmp    al,cl
  4057f4:	mov    eax,0x1
  4057f9:	cmovbe eax,edx
  4057fc:	ret    
  4057fd:	neg    rsi
  405800:	sbb    eax,eax
  405802:	ret    
  405803:	mov    eax,0x1
  405808:	ret    
  405809:	nop    DWORD PTR [rax+0x0]

0000000000405810 <table_compare_string@@Base>:
  405810:	test   rdi,rdi
  405813:	je     40581f <table_compare_string@@Base+0xf>
  405815:	test   rsi,rsi
  405818:	je     405825 <table_compare_string@@Base+0x15>
  40581a:	jmp    404080 <strcmp@plt>
  40581f:	neg    rsi
  405822:	sbb    eax,eax
  405824:	ret    
  405825:	mov    eax,0x1
  40582a:	ret    
  40582b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405830 <table_compare_ptr@@Base>:
  405830:	cmp    rdi,rsi
  405833:	sbb    ecx,ecx
  405835:	cmp    rdi,rsi
  405838:	mov    eax,0x1
  40583d:	cmovbe eax,ecx
  405840:	ret    
  405841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40584b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405850 <table_get_default_compare_function_for_data_type@@Base>:
  405850:	cmp    edi,0x17
  405853:	ja     405864 <table_get_default_compare_function_for_data_type@@Base+0x14>
  405855:	movsxd rax,edi
  405858:	lea    rcx,[rip+0x74f1]        # 40cd50 <_IO_stdin_used@@Base+0x3d50>
  40585f:	mov    rax,QWORD PTR [rcx+rax*8]
  405863:	ret    
  405864:	xor    eax,eax
  405866:	ret    
  405867:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405870 <table_subset_find@@Base>:
  405870:	push   rbp
  405871:	push   r15
  405873:	push   r14
  405875:	push   r13
  405877:	push   r12
  405879:	push   rbx
  40587a:	push   rax
  40587b:	mov    ebx,r9d
  40587e:	mov    r14d,r8d
  405881:	mov    DWORD PTR [rsp+0x4],ecx
  405885:	mov    r12,rdx
  405888:	mov    r13d,esi
  40588b:	mov    rbp,rdi
  40588e:	call   405350 <table_get_column_compare_function@@Base>
  405893:	mov    r15,rax
  405896:	cmp    DWORD PTR [rsp+0x4],0x0
  40589b:	je     4058d6 <table_subset_find@@Base+0x66>
  40589d:	mov    eax,0xffffffff
  4058a2:	cmp    ebx,r14d
  4058a5:	jl     405915 <table_subset_find@@Base+0xa5>
  4058a7:	nop    WORD PTR [rax+rax*1+0x0]
  4058b0:	mov    rdi,rbp
  4058b3:	mov    esi,ebx
  4058b5:	mov    edx,r13d
  4058b8:	call   4065c0 <table_get@@Base>
  4058bd:	mov    rdi,r12
  4058c0:	mov    rsi,rax
  4058c3:	call   r15
  4058c6:	test   eax,eax
  4058c8:	je     40590e <table_subset_find@@Base+0x9e>
  4058ca:	lea    eax,[rbx-0x1]
  4058cd:	cmp    ebx,r14d
  4058d0:	mov    ebx,eax
  4058d2:	jg     4058b0 <table_subset_find@@Base+0x40>
  4058d4:	jmp    405907 <table_subset_find@@Base+0x97>
  4058d6:	mov    eax,0xffffffff
  4058db:	cmp    r14d,ebx
  4058de:	jg     405915 <table_subset_find@@Base+0xa5>
  4058e0:	mov    rdi,rbp
  4058e3:	mov    esi,r14d
  4058e6:	mov    edx,r13d
  4058e9:	call   4065c0 <table_get@@Base>
  4058ee:	mov    rdi,r12
  4058f1:	mov    rsi,rax
  4058f4:	call   r15
  4058f7:	test   eax,eax
  4058f9:	je     405912 <table_subset_find@@Base+0xa2>
  4058fb:	lea    eax,[r14+0x1]
  4058ff:	cmp    r14d,ebx
  405902:	mov    r14d,eax
  405905:	jl     4058e0 <table_subset_find@@Base+0x70>
  405907:	mov    eax,0xffffffff
  40590c:	jmp    405915 <table_subset_find@@Base+0xa5>
  40590e:	mov    eax,ebx
  405910:	jmp    405915 <table_subset_find@@Base+0xa5>
  405912:	mov    eax,r14d
  405915:	add    rsp,0x8
  405919:	pop    rbx
  40591a:	pop    r12
  40591c:	pop    r13
  40591e:	pop    r14
  405920:	pop    r15
  405922:	pop    rbp
  405923:	ret    
  405924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40592e:	xchg   ax,ax

0000000000405930 <table_find@@Base>:
  405930:	push   rbp
  405931:	push   r15
  405933:	push   r14
  405935:	push   r13
  405937:	push   r12
  405939:	push   rbx
  40593a:	push   rax
  40593b:	mov    ebx,ecx
  40593d:	mov    r14,rdx
  405940:	mov    r15d,esi
  405943:	mov    r13,rdi
  405946:	call   406800 <table_get_row_length@@Base>
  40594b:	mov    ebp,eax
  40594d:	mov    rdi,r13
  405950:	mov    esi,r15d
  405953:	call   405350 <table_get_column_compare_function@@Base>
  405958:	mov    r12,rax
  40595b:	test   ebx,ebx
  40595d:	je     405999 <table_find@@Base+0x69>
  40595f:	test   ebp,ebp
  405961:	jle    405992 <table_find@@Base+0x62>
  405963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40596d:	nop    DWORD PTR [rax]
  405970:	lea    ebx,[rbp-0x1]
  405973:	mov    rdi,r13
  405976:	mov    esi,ebx
  405978:	mov    edx,r15d
  40597b:	call   4065c0 <table_get@@Base>
  405980:	mov    rdi,r14
  405983:	mov    rsi,rax
  405986:	call   r12
  405989:	test   eax,eax
  40598b:	je     4059dd <table_find@@Base+0xad>
  40598d:	add    ebp,0xffffffff
  405990:	jg     405970 <table_find@@Base+0x40>
  405992:	mov    ebx,0xffffffff
  405997:	jmp    4059dd <table_find@@Base+0xad>
  405999:	mov    ebx,0xffffffff
  40599e:	test   ebp,ebp
  4059a0:	jle    4059dd <table_find@@Base+0xad>
  4059a2:	mov    QWORD PTR [rsp],r14
  4059a6:	add    ebp,0xffffffff
  4059a9:	xor    r14d,r14d
  4059ac:	nop    DWORD PTR [rax+0x0]
  4059b0:	mov    rdi,r13
  4059b3:	mov    esi,r14d
  4059b6:	mov    edx,r15d
  4059b9:	call   4065c0 <table_get@@Base>
  4059be:	mov    rdi,QWORD PTR [rsp]
  4059c2:	mov    rsi,rax
  4059c5:	call   r12
  4059c8:	test   eax,eax
  4059ca:	je     4059da <table_find@@Base+0xaa>
  4059cc:	lea    eax,[r14+0x1]
  4059d0:	cmp    r14d,ebp
  4059d3:	mov    r14d,eax
  4059d6:	jl     4059b0 <table_find@@Base+0x80>
  4059d8:	jmp    4059dd <table_find@@Base+0xad>
  4059da:	mov    ebx,r14d
  4059dd:	mov    eax,ebx
  4059df:	add    rsp,0x8
  4059e3:	pop    rbx
  4059e4:	pop    r12
  4059e6:	pop    r13
  4059e8:	pop    r14
  4059ea:	pop    r15
  4059ec:	pop    rbp
  4059ed:	ret    
  4059ee:	xchg   ax,ax

00000000004059f0 <table_find_bool@@Base>:
  4059f0:	push   rax
  4059f1:	mov    BYTE PTR [rsp+0x7],dl
  4059f5:	lea    rdx,[rsp+0x7]
  4059fa:	call   405930 <table_find@@Base>
  4059ff:	pop    rcx
  405a00:	ret    
  405a01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a10 <table_find_int@@Base>:
  405a10:	push   rax
  405a11:	mov    DWORD PTR [rsp+0x4],edx
  405a15:	lea    rdx,[rsp+0x4]
  405a1a:	call   405930 <table_find@@Base>
  405a1f:	pop    rcx
  405a20:	ret    
  405a21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a30 <table_find_uint@@Base>:
  405a30:	push   rax
  405a31:	mov    DWORD PTR [rsp+0x4],edx
  405a35:	lea    rdx,[rsp+0x4]
  405a3a:	call   405930 <table_find@@Base>
  405a3f:	pop    rcx
  405a40:	ret    
  405a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a50 <table_find_int8@@Base>:
  405a50:	push   rax
  405a51:	mov    BYTE PTR [rsp+0x7],dl
  405a55:	lea    rdx,[rsp+0x7]
  405a5a:	call   405930 <table_find@@Base>
  405a5f:	pop    rcx
  405a60:	ret    
  405a61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a70 <table_find_uint8@@Base>:
  405a70:	push   rax
  405a71:	mov    BYTE PTR [rsp+0x7],dl
  405a75:	lea    rdx,[rsp+0x7]
  405a7a:	call   405930 <table_find@@Base>
  405a7f:	pop    rcx
  405a80:	ret    
  405a81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a90 <table_find_int16@@Base>:
  405a90:	push   rax
  405a91:	mov    WORD PTR [rsp+0x6],dx
  405a96:	lea    rdx,[rsp+0x6]
  405a9b:	call   405930 <table_find@@Base>
  405aa0:	pop    rcx
  405aa1:	ret    
  405aa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aac:	nop    DWORD PTR [rax+0x0]

0000000000405ab0 <table_find_uint16@@Base>:
  405ab0:	push   rax
  405ab1:	mov    WORD PTR [rsp+0x6],dx
  405ab6:	lea    rdx,[rsp+0x6]
  405abb:	call   405930 <table_find@@Base>
  405ac0:	pop    rcx
  405ac1:	ret    
  405ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405acc:	nop    DWORD PTR [rax+0x0]

0000000000405ad0 <table_find_int32@@Base>:
  405ad0:	push   rax
  405ad1:	mov    DWORD PTR [rsp+0x4],edx
  405ad5:	lea    rdx,[rsp+0x4]
  405ada:	call   405930 <table_find@@Base>
  405adf:	pop    rcx
  405ae0:	ret    
  405ae1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405af0 <table_find_uint32@@Base>:
  405af0:	push   rax
  405af1:	mov    DWORD PTR [rsp+0x4],edx
  405af5:	lea    rdx,[rsp+0x4]
  405afa:	call   405930 <table_find@@Base>
  405aff:	pop    rcx
  405b00:	ret    
  405b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405b10 <table_find_int64@@Base>:
  405b10:	push   rax
  405b11:	mov    QWORD PTR [rsp],rdx
  405b15:	mov    rdx,rsp
  405b18:	call   405930 <table_find@@Base>
  405b1d:	pop    rcx
  405b1e:	ret    
  405b1f:	nop

0000000000405b20 <table_find_uint64@@Base>:
  405b20:	push   rax
  405b21:	mov    QWORD PTR [rsp],rdx
  405b25:	mov    rdx,rsp
  405b28:	call   405930 <table_find@@Base>
  405b2d:	pop    rcx
  405b2e:	ret    
  405b2f:	nop

0000000000405b30 <table_find_short@@Base>:
  405b30:	push   rax
  405b31:	mov    WORD PTR [rsp+0x6],dx
  405b36:	lea    rdx,[rsp+0x6]
  405b3b:	call   405930 <table_find@@Base>
  405b40:	pop    rcx
  405b41:	ret    
  405b42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b4c:	nop    DWORD PTR [rax+0x0]

0000000000405b50 <table_find_ushort@@Base>:
  405b50:	push   rax
  405b51:	mov    WORD PTR [rsp+0x6],dx
  405b56:	lea    rdx,[rsp+0x6]
  405b5b:	call   405930 <table_find@@Base>
  405b60:	pop    rcx
  405b61:	ret    
  405b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b6c:	nop    DWORD PTR [rax+0x0]

0000000000405b70 <table_find_long@@Base>:
  405b70:	push   rax
  405b71:	mov    QWORD PTR [rsp],rdx
  405b75:	mov    rdx,rsp
  405b78:	call   405930 <table_find@@Base>
  405b7d:	pop    rcx
  405b7e:	ret    
  405b7f:	nop

0000000000405b80 <table_find_ulong@@Base>:
  405b80:	push   rax
  405b81:	mov    QWORD PTR [rsp],rdx
  405b85:	mov    rdx,rsp
  405b88:	call   405930 <table_find@@Base>
  405b8d:	pop    rcx
  405b8e:	ret    
  405b8f:	nop

0000000000405b90 <table_find_llong@@Base>:
  405b90:	push   rax
  405b91:	mov    QWORD PTR [rsp],rdx
  405b95:	mov    rdx,rsp
  405b98:	call   405930 <table_find@@Base>
  405b9d:	pop    rcx
  405b9e:	ret    
  405b9f:	nop

0000000000405ba0 <table_find_ullong@@Base>:
  405ba0:	push   rax
  405ba1:	mov    QWORD PTR [rsp],rdx
  405ba5:	mov    rdx,rsp
  405ba8:	call   405930 <table_find@@Base>
  405bad:	pop    rcx
  405bae:	ret    
  405baf:	nop

0000000000405bb0 <table_find_float@@Base>:
  405bb0:	push   rax
  405bb1:	mov    eax,edx
  405bb3:	vmovss DWORD PTR [rsp+0x4],xmm0
  405bb9:	lea    rdx,[rsp+0x4]
  405bbe:	mov    ecx,eax
  405bc0:	call   405930 <table_find@@Base>
  405bc5:	pop    rcx
  405bc6:	ret    
  405bc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405bd0 <table_find_double@@Base>:
  405bd0:	push   rax
  405bd1:	mov    eax,edx
  405bd3:	vmovsd QWORD PTR [rsp],xmm0
  405bd8:	mov    rdx,rsp
  405bdb:	mov    ecx,eax
  405bdd:	call   405930 <table_find@@Base>
  405be2:	pop    rcx
  405be3:	ret    
  405be4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bee:	xchg   ax,ax

0000000000405bf0 <table_find_ldouble@@Base>:
  405bf0:	sub    rsp,0x18
  405bf4:	mov    eax,edx
  405bf6:	fld    TBYTE PTR [rsp+0x20]
  405bfa:	fstp   TBYTE PTR [rsp]
  405bfd:	mov    rdx,rsp
  405c00:	mov    ecx,eax
  405c02:	call   405930 <table_find@@Base>
  405c07:	add    rsp,0x18
  405c0b:	ret    
  405c0c:	nop    DWORD PTR [rax+0x0]

0000000000405c10 <table_find_char@@Base>:
  405c10:	push   rax
  405c11:	mov    BYTE PTR [rsp+0x7],dl
  405c15:	lea    rdx,[rsp+0x7]
  405c1a:	call   405930 <table_find@@Base>
  405c1f:	pop    rcx
  405c20:	ret    
  405c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405c30 <table_find_uchar@@Base>:
  405c30:	push   rax
  405c31:	mov    BYTE PTR [rsp+0x7],dl
  405c35:	lea    rdx,[rsp+0x7]
  405c3a:	call   405930 <table_find@@Base>
  405c3f:	pop    rcx
  405c40:	ret    
  405c41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405c50 <table_find_string@@Base>:
  405c50:	push   rax
  405c51:	mov    QWORD PTR [rsp],rdx
  405c55:	mov    rdx,rsp
  405c58:	call   405930 <table_find@@Base>
  405c5d:	pop    rcx
  405c5e:	ret    
  405c5f:	nop

0000000000405c60 <table_find_ptr@@Base>:
  405c60:	jmp    405930 <table_find@@Base>
  405c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c6f:	nop

0000000000405c70 <table_sorted_find@@Base>:
  405c70:	push   rbp
  405c71:	push   r15
  405c73:	push   r14
  405c75:	push   rbx
  405c76:	push   rax
  405c77:	mov    r14d,ecx
  405c7a:	mov    r15,rdx
  405c7d:	mov    ebp,esi
  405c7f:	mov    rbx,rdi
  405c82:	call   406800 <table_get_row_length@@Base>
  405c87:	lea    r9d,[rax-0x1]
  405c8b:	xor    r8d,r8d
  405c8e:	mov    rdi,rbx
  405c91:	mov    esi,ebp
  405c93:	mov    rdx,r15
  405c96:	mov    ecx,r14d
  405c99:	add    rsp,0x8
  405c9d:	pop    rbx
  405c9e:	pop    r14
  405ca0:	pop    r15
  405ca2:	pop    rbp
  405ca3:	jmp    405cb0 <table_sorted_subset_find@@Base>
  405ca8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405cb0 <table_sorted_subset_find@@Base>:
  405cb0:	push   rbp
  405cb1:	push   r15
  405cb3:	push   r14
  405cb5:	push   r13
  405cb7:	push   r12
  405cb9:	push   rbx
  405cba:	sub    rsp,0x18
  405cbe:	mov    r14d,r9d
  405cc1:	mov    r15d,r8d
  405cc4:	mov    DWORD PTR [rsp+0xc],ecx
  405cc8:	mov    QWORD PTR [rsp+0x10],rdx
  405ccd:	mov    r12d,esi
  405cd0:	mov    r13,rdi
  405cd3:	jmp    405ce6 <table_sorted_subset_find@@Base+0x36>
  405cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cdf:	nop
  405ce0:	add    ebx,0xffffffff
  405ce3:	mov    r14d,ebx
  405ce6:	mov    rdi,r13
  405ce9:	mov    esi,r12d
  405cec:	call   405350 <table_get_column_compare_function@@Base>
  405cf1:	mov    rbp,rax
  405cf4:	mov    eax,r14d
  405cf7:	sub    eax,r15d
  405cfa:	mov    ebx,eax
  405cfc:	shr    ebx,0x1f
  405cff:	add    ebx,eax
  405d01:	sar    ebx,1
  405d03:	add    ebx,r15d
  405d06:	mov    rdi,r13
  405d09:	mov    esi,ebx
  405d0b:	mov    edx,r12d
  405d0e:	call   4065c0 <table_get@@Base>
  405d13:	mov    rdi,QWORD PTR [rsp+0x10]
  405d18:	mov    rsi,rax
  405d1b:	call   rbp
  405d1d:	cmp    r14d,r15d
  405d20:	jl     405d6f <table_sorted_subset_find@@Base+0xbf>
  405d22:	cmp    eax,0xffffffff
  405d25:	je     405ce0 <table_sorted_subset_find@@Base+0x30>
  405d27:	cmp    eax,0x1
  405d2a:	jne    405d31 <table_sorted_subset_find@@Base+0x81>
  405d2c:	mov    r15d,ebx
  405d2f:	jmp    405ce6 <table_sorted_subset_find@@Base+0x36>
  405d31:	test   eax,eax
  405d33:	jne    405d6f <table_sorted_subset_find@@Base+0xbf>
  405d35:	mov    r14d,DWORD PTR [rsp+0xc]
  405d3a:	mov    r15,QWORD PTR [rsp+0x10]
  405d3f:	nop
  405d40:	lea    eax,[rbx-0x1]
  405d43:	add    ebx,0x1
  405d46:	test   r14d,r14d
  405d49:	cmove  ebx,eax
  405d4c:	mov    rdi,r13
  405d4f:	mov    esi,ebx
  405d51:	mov    edx,r12d
  405d54:	call   4065c0 <table_get@@Base>
  405d59:	mov    rdi,rax
  405d5c:	mov    rsi,r15
  405d5f:	call   rbp
  405d61:	test   eax,eax
  405d63:	je     405d40 <table_sorted_subset_find@@Base+0x90>
  405d65:	test   r14d,r14d
  405d68:	je     405d82 <table_sorted_subset_find@@Base+0xd2>
  405d6a:	add    ebx,0xffffffff
  405d6d:	jmp    405d71 <table_sorted_subset_find@@Base+0xc1>
  405d6f:	neg    ebx
  405d71:	mov    eax,ebx
  405d73:	add    rsp,0x18
  405d77:	pop    rbx
  405d78:	pop    r12
  405d7a:	pop    r13
  405d7c:	pop    r14
  405d7e:	pop    r15
  405d80:	pop    rbp
  405d81:	ret    
  405d82:	add    ebx,0x1
  405d85:	jmp    405d71 <table_sorted_subset_find@@Base+0xc1>
  405d87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405d90 <table_sorted_find_int@@Base>:
  405d90:	push   rbp
  405d91:	push   r14
  405d93:	push   rbx
  405d94:	sub    rsp,0x10
  405d98:	mov    r14d,ecx
  405d9b:	mov    ebp,esi
  405d9d:	mov    rbx,rdi
  405da0:	mov    DWORD PTR [rsp+0xc],edx
  405da4:	call   406800 <table_get_row_length@@Base>
  405da9:	lea    r9d,[rax-0x1]
  405dad:	lea    rdx,[rsp+0xc]
  405db2:	xor    r8d,r8d
  405db5:	mov    rdi,rbx
  405db8:	mov    esi,ebp
  405dba:	mov    ecx,r14d
  405dbd:	call   405cb0 <table_sorted_subset_find@@Base>
  405dc2:	add    rsp,0x10
  405dc6:	pop    rbx
  405dc7:	pop    r14
  405dc9:	pop    rbp
  405dca:	ret    
  405dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405dd0 <table_sorted_find_uint@@Base>:
  405dd0:	push   rbp
  405dd1:	push   r14
  405dd3:	push   rbx
  405dd4:	sub    rsp,0x10
  405dd8:	mov    r14d,ecx
  405ddb:	mov    ebp,esi
  405ddd:	mov    rbx,rdi
  405de0:	mov    DWORD PTR [rsp+0xc],edx
  405de4:	call   406800 <table_get_row_length@@Base>
  405de9:	lea    r9d,[rax-0x1]
  405ded:	lea    rdx,[rsp+0xc]
  405df2:	xor    r8d,r8d
  405df5:	mov    rdi,rbx
  405df8:	mov    esi,ebp
  405dfa:	mov    ecx,r14d
  405dfd:	call   405cb0 <table_sorted_subset_find@@Base>
  405e02:	add    rsp,0x10
  405e06:	pop    rbx
  405e07:	pop    r14
  405e09:	pop    rbp
  405e0a:	ret    
  405e0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e10 <table_sorted_find_int8@@Base>:
  405e10:	push   rbp
  405e11:	push   r14
  405e13:	push   rbx
  405e14:	sub    rsp,0x10
  405e18:	mov    r14d,ecx
  405e1b:	mov    ebp,esi
  405e1d:	mov    rbx,rdi
  405e20:	mov    BYTE PTR [rsp+0xf],dl
  405e24:	call   406800 <table_get_row_length@@Base>
  405e29:	lea    r9d,[rax-0x1]
  405e2d:	lea    rdx,[rsp+0xf]
  405e32:	xor    r8d,r8d
  405e35:	mov    rdi,rbx
  405e38:	mov    esi,ebp
  405e3a:	mov    ecx,r14d
  405e3d:	call   405cb0 <table_sorted_subset_find@@Base>
  405e42:	add    rsp,0x10
  405e46:	pop    rbx
  405e47:	pop    r14
  405e49:	pop    rbp
  405e4a:	ret    
  405e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e50 <table_sorted_find_uint8@@Base>:
  405e50:	push   rbp
  405e51:	push   r14
  405e53:	push   rbx
  405e54:	sub    rsp,0x10
  405e58:	mov    r14d,ecx
  405e5b:	mov    ebp,esi
  405e5d:	mov    rbx,rdi
  405e60:	mov    BYTE PTR [rsp+0xf],dl
  405e64:	call   406800 <table_get_row_length@@Base>
  405e69:	lea    r9d,[rax-0x1]
  405e6d:	lea    rdx,[rsp+0xf]
  405e72:	xor    r8d,r8d
  405e75:	mov    rdi,rbx
  405e78:	mov    esi,ebp
  405e7a:	mov    ecx,r14d
  405e7d:	call   405cb0 <table_sorted_subset_find@@Base>
  405e82:	add    rsp,0x10
  405e86:	pop    rbx
  405e87:	pop    r14
  405e89:	pop    rbp
  405e8a:	ret    
  405e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e90 <table_sorted_find_int16@@Base>:
  405e90:	push   rbp
  405e91:	push   r14
  405e93:	push   rbx
  405e94:	sub    rsp,0x10
  405e98:	mov    r14d,ecx
  405e9b:	mov    ebp,esi
  405e9d:	mov    rbx,rdi
  405ea0:	mov    WORD PTR [rsp+0xe],dx
  405ea5:	call   406800 <table_get_row_length@@Base>
  405eaa:	lea    r9d,[rax-0x1]
  405eae:	lea    rdx,[rsp+0xe]
  405eb3:	xor    r8d,r8d
  405eb6:	mov    rdi,rbx
  405eb9:	mov    esi,ebp
  405ebb:	mov    ecx,r14d
  405ebe:	call   405cb0 <table_sorted_subset_find@@Base>
  405ec3:	add    rsp,0x10
  405ec7:	pop    rbx
  405ec8:	pop    r14
  405eca:	pop    rbp
  405ecb:	ret    
  405ecc:	nop    DWORD PTR [rax+0x0]

0000000000405ed0 <table_sorted_find_uint16@@Base>:
  405ed0:	push   rbp
  405ed1:	push   r14
  405ed3:	push   rbx
  405ed4:	sub    rsp,0x10
  405ed8:	mov    r14d,ecx
  405edb:	mov    ebp,esi
  405edd:	mov    rbx,rdi
  405ee0:	mov    WORD PTR [rsp+0xe],dx
  405ee5:	call   406800 <table_get_row_length@@Base>
  405eea:	lea    r9d,[rax-0x1]
  405eee:	lea    rdx,[rsp+0xe]
  405ef3:	xor    r8d,r8d
  405ef6:	mov    rdi,rbx
  405ef9:	mov    esi,ebp
  405efb:	mov    ecx,r14d
  405efe:	call   405cb0 <table_sorted_subset_find@@Base>
  405f03:	add    rsp,0x10
  405f07:	pop    rbx
  405f08:	pop    r14
  405f0a:	pop    rbp
  405f0b:	ret    
  405f0c:	nop    DWORD PTR [rax+0x0]

0000000000405f10 <table_sorted_find_int32@@Base>:
  405f10:	push   rbp
  405f11:	push   r14
  405f13:	push   rbx
  405f14:	sub    rsp,0x10
  405f18:	mov    r14d,ecx
  405f1b:	mov    ebp,esi
  405f1d:	mov    rbx,rdi
  405f20:	mov    DWORD PTR [rsp+0xc],edx
  405f24:	call   406800 <table_get_row_length@@Base>
  405f29:	lea    r9d,[rax-0x1]
  405f2d:	lea    rdx,[rsp+0xc]
  405f32:	xor    r8d,r8d
  405f35:	mov    rdi,rbx
  405f38:	mov    esi,ebp
  405f3a:	mov    ecx,r14d
  405f3d:	call   405cb0 <table_sorted_subset_find@@Base>
  405f42:	add    rsp,0x10
  405f46:	pop    rbx
  405f47:	pop    r14
  405f49:	pop    rbp
  405f4a:	ret    
  405f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405f50 <table_sorted_find_uint32@@Base>:
  405f50:	push   rbp
  405f51:	push   r14
  405f53:	push   rbx
  405f54:	sub    rsp,0x10
  405f58:	mov    r14d,ecx
  405f5b:	mov    ebp,esi
  405f5d:	mov    rbx,rdi
  405f60:	mov    DWORD PTR [rsp+0xc],edx
  405f64:	call   406800 <table_get_row_length@@Base>
  405f69:	lea    r9d,[rax-0x1]
  405f6d:	lea    rdx,[rsp+0xc]
  405f72:	xor    r8d,r8d
  405f75:	mov    rdi,rbx
  405f78:	mov    esi,ebp
  405f7a:	mov    ecx,r14d
  405f7d:	call   405cb0 <table_sorted_subset_find@@Base>
  405f82:	add    rsp,0x10
  405f86:	pop    rbx
  405f87:	pop    r14
  405f89:	pop    rbp
  405f8a:	ret    
  405f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405f90 <table_sorted_find_int64@@Base>:
  405f90:	push   rbp
  405f91:	push   r14
  405f93:	push   rbx
  405f94:	sub    rsp,0x10
  405f98:	mov    r14d,ecx
  405f9b:	mov    ebp,esi
  405f9d:	mov    rbx,rdi
  405fa0:	mov    QWORD PTR [rsp+0x8],rdx
  405fa5:	call   406800 <table_get_row_length@@Base>
  405faa:	lea    r9d,[rax-0x1]
  405fae:	lea    rdx,[rsp+0x8]
  405fb3:	xor    r8d,r8d
  405fb6:	mov    rdi,rbx
  405fb9:	mov    esi,ebp
  405fbb:	mov    ecx,r14d
  405fbe:	call   405cb0 <table_sorted_subset_find@@Base>
  405fc3:	add    rsp,0x10
  405fc7:	pop    rbx
  405fc8:	pop    r14
  405fca:	pop    rbp
  405fcb:	ret    
  405fcc:	nop    DWORD PTR [rax+0x0]

0000000000405fd0 <table_sorted_find_uint64@@Base>:
  405fd0:	push   rbp
  405fd1:	push   r14
  405fd3:	push   rbx
  405fd4:	sub    rsp,0x10
  405fd8:	mov    r14d,ecx
  405fdb:	mov    ebp,esi
  405fdd:	mov    rbx,rdi
  405fe0:	mov    QWORD PTR [rsp+0x8],rdx
  405fe5:	call   406800 <table_get_row_length@@Base>
  405fea:	lea    r9d,[rax-0x1]
  405fee:	lea    rdx,[rsp+0x8]
  405ff3:	xor    r8d,r8d
  405ff6:	mov    rdi,rbx
  405ff9:	mov    esi,ebp
  405ffb:	mov    ecx,r14d
  405ffe:	call   405cb0 <table_sorted_subset_find@@Base>
  406003:	add    rsp,0x10
  406007:	pop    rbx
  406008:	pop    r14
  40600a:	pop    rbp
  40600b:	ret    
  40600c:	nop    DWORD PTR [rax+0x0]

0000000000406010 <table_sorted_find_short@@Base>:
  406010:	push   rbp
  406011:	push   r14
  406013:	push   rbx
  406014:	sub    rsp,0x10
  406018:	mov    r14d,ecx
  40601b:	mov    ebp,esi
  40601d:	mov    rbx,rdi
  406020:	mov    WORD PTR [rsp+0xe],dx
  406025:	call   406800 <table_get_row_length@@Base>
  40602a:	lea    r9d,[rax-0x1]
  40602e:	lea    rdx,[rsp+0xe]
  406033:	xor    r8d,r8d
  406036:	mov    rdi,rbx
  406039:	mov    esi,ebp
  40603b:	mov    ecx,r14d
  40603e:	call   405cb0 <table_sorted_subset_find@@Base>
  406043:	add    rsp,0x10
  406047:	pop    rbx
  406048:	pop    r14
  40604a:	pop    rbp
  40604b:	ret    
  40604c:	nop    DWORD PTR [rax+0x0]

0000000000406050 <table_sorted_find_ushort@@Base>:
  406050:	push   rbp
  406051:	push   r14
  406053:	push   rbx
  406054:	sub    rsp,0x10
  406058:	mov    r14d,ecx
  40605b:	mov    ebp,esi
  40605d:	mov    rbx,rdi
  406060:	mov    WORD PTR [rsp+0xe],dx
  406065:	call   406800 <table_get_row_length@@Base>
  40606a:	lea    r9d,[rax-0x1]
  40606e:	lea    rdx,[rsp+0xe]
  406073:	xor    r8d,r8d
  406076:	mov    rdi,rbx
  406079:	mov    esi,ebp
  40607b:	mov    ecx,r14d
  40607e:	call   405cb0 <table_sorted_subset_find@@Base>
  406083:	add    rsp,0x10
  406087:	pop    rbx
  406088:	pop    r14
  40608a:	pop    rbp
  40608b:	ret    
  40608c:	nop    DWORD PTR [rax+0x0]

0000000000406090 <table_sorted_find_long@@Base>:
  406090:	push   rbp
  406091:	push   r14
  406093:	push   rbx
  406094:	sub    rsp,0x10
  406098:	mov    r14d,ecx
  40609b:	mov    ebp,esi
  40609d:	mov    rbx,rdi
  4060a0:	mov    QWORD PTR [rsp+0x8],rdx
  4060a5:	call   406800 <table_get_row_length@@Base>
  4060aa:	lea    r9d,[rax-0x1]
  4060ae:	lea    rdx,[rsp+0x8]
  4060b3:	xor    r8d,r8d
  4060b6:	mov    rdi,rbx
  4060b9:	mov    esi,ebp
  4060bb:	mov    ecx,r14d
  4060be:	call   405cb0 <table_sorted_subset_find@@Base>
  4060c3:	add    rsp,0x10
  4060c7:	pop    rbx
  4060c8:	pop    r14
  4060ca:	pop    rbp
  4060cb:	ret    
  4060cc:	nop    DWORD PTR [rax+0x0]

00000000004060d0 <table_sorted_find_ulong@@Base>:
  4060d0:	push   rbp
  4060d1:	push   r14
  4060d3:	push   rbx
  4060d4:	sub    rsp,0x10
  4060d8:	mov    r14d,ecx
  4060db:	mov    ebp,esi
  4060dd:	mov    rbx,rdi
  4060e0:	mov    QWORD PTR [rsp+0x8],rdx
  4060e5:	call   406800 <table_get_row_length@@Base>
  4060ea:	lea    r9d,[rax-0x1]
  4060ee:	lea    rdx,[rsp+0x8]
  4060f3:	xor    r8d,r8d
  4060f6:	mov    rdi,rbx
  4060f9:	mov    esi,ebp
  4060fb:	mov    ecx,r14d
  4060fe:	call   405cb0 <table_sorted_subset_find@@Base>
  406103:	add    rsp,0x10
  406107:	pop    rbx
  406108:	pop    r14
  40610a:	pop    rbp
  40610b:	ret    
  40610c:	nop    DWORD PTR [rax+0x0]

0000000000406110 <table_sorted_find_llong@@Base>:
  406110:	push   rbp
  406111:	push   r14
  406113:	push   rbx
  406114:	sub    rsp,0x10
  406118:	mov    r14d,ecx
  40611b:	mov    ebp,esi
  40611d:	mov    rbx,rdi
  406120:	mov    QWORD PTR [rsp+0x8],rdx
  406125:	call   406800 <table_get_row_length@@Base>
  40612a:	lea    r9d,[rax-0x1]
  40612e:	lea    rdx,[rsp+0x8]
  406133:	xor    r8d,r8d
  406136:	mov    rdi,rbx
  406139:	mov    esi,ebp
  40613b:	mov    ecx,r14d
  40613e:	call   405cb0 <table_sorted_subset_find@@Base>
  406143:	add    rsp,0x10
  406147:	pop    rbx
  406148:	pop    r14
  40614a:	pop    rbp
  40614b:	ret    
  40614c:	nop    DWORD PTR [rax+0x0]

0000000000406150 <table_sorted_find_ullong@@Base>:
  406150:	push   rbp
  406151:	push   r14
  406153:	push   rbx
  406154:	sub    rsp,0x10
  406158:	mov    r14d,ecx
  40615b:	mov    ebp,esi
  40615d:	mov    rbx,rdi
  406160:	mov    QWORD PTR [rsp+0x8],rdx
  406165:	call   406800 <table_get_row_length@@Base>
  40616a:	lea    r9d,[rax-0x1]
  40616e:	lea    rdx,[rsp+0x8]
  406173:	xor    r8d,r8d
  406176:	mov    rdi,rbx
  406179:	mov    esi,ebp
  40617b:	mov    ecx,r14d
  40617e:	call   405cb0 <table_sorted_subset_find@@Base>
  406183:	add    rsp,0x10
  406187:	pop    rbx
  406188:	pop    r14
  40618a:	pop    rbp
  40618b:	ret    
  40618c:	nop    DWORD PTR [rax+0x0]

0000000000406190 <table_sorted_find_float@@Base>:
  406190:	push   rbp
  406191:	push   r14
  406193:	push   rbx
  406194:	sub    rsp,0x10
  406198:	mov    r14d,edx
  40619b:	mov    ebp,esi
  40619d:	mov    rbx,rdi
  4061a0:	vmovss DWORD PTR [rsp+0xc],xmm0
  4061a6:	call   406800 <table_get_row_length@@Base>
  4061ab:	lea    r9d,[rax-0x1]
  4061af:	lea    rdx,[rsp+0xc]
  4061b4:	xor    r8d,r8d
  4061b7:	mov    rdi,rbx
  4061ba:	mov    esi,ebp
  4061bc:	mov    ecx,r14d
  4061bf:	call   405cb0 <table_sorted_subset_find@@Base>
  4061c4:	add    rsp,0x10
  4061c8:	pop    rbx
  4061c9:	pop    r14
  4061cb:	pop    rbp
  4061cc:	ret    
  4061cd:	nop    DWORD PTR [rax]

00000000004061d0 <table_sorted_find_double@@Base>:
  4061d0:	push   rbp
  4061d1:	push   r14
  4061d3:	push   rbx
  4061d4:	sub    rsp,0x10
  4061d8:	mov    r14d,edx
  4061db:	mov    ebp,esi
  4061dd:	mov    rbx,rdi
  4061e0:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4061e6:	call   406800 <table_get_row_length@@Base>
  4061eb:	lea    r9d,[rax-0x1]
  4061ef:	lea    rdx,[rsp+0x8]
  4061f4:	xor    r8d,r8d
  4061f7:	mov    rdi,rbx
  4061fa:	mov    esi,ebp
  4061fc:	mov    ecx,r14d
  4061ff:	call   405cb0 <table_sorted_subset_find@@Base>
  406204:	add    rsp,0x10
  406208:	pop    rbx
  406209:	pop    r14
  40620b:	pop    rbp
  40620c:	ret    
  40620d:	nop    DWORD PTR [rax]

0000000000406210 <table_sorted_find_ldouble@@Base>:
  406210:	push   rbp
  406211:	push   r14
  406213:	push   rbx
  406214:	sub    rsp,0x10
  406218:	mov    r14d,edx
  40621b:	mov    ebp,esi
  40621d:	mov    rbx,rdi
  406220:	fld    TBYTE PTR [rsp+0x30]
  406224:	fstp   TBYTE PTR [rsp]
  406227:	call   406800 <table_get_row_length@@Base>
  40622c:	lea    r9d,[rax-0x1]
  406230:	mov    rdx,rsp
  406233:	xor    r8d,r8d
  406236:	mov    rdi,rbx
  406239:	mov    esi,ebp
  40623b:	mov    ecx,r14d
  40623e:	call   405cb0 <table_sorted_subset_find@@Base>
  406243:	add    rsp,0x10
  406247:	pop    rbx
  406248:	pop    r14
  40624a:	pop    rbp
  40624b:	ret    
  40624c:	nop    DWORD PTR [rax+0x0]

0000000000406250 <table_sorted_find_char@@Base>:
  406250:	push   rbp
  406251:	push   r14
  406253:	push   rbx
  406254:	sub    rsp,0x10
  406258:	mov    r14d,ecx
  40625b:	mov    ebp,esi
  40625d:	mov    rbx,rdi
  406260:	mov    BYTE PTR [rsp+0xf],dl
  406264:	call   406800 <table_get_row_length@@Base>
  406269:	lea    r9d,[rax-0x1]
  40626d:	lea    rdx,[rsp+0xf]
  406272:	xor    r8d,r8d
  406275:	mov    rdi,rbx
  406278:	mov    esi,ebp
  40627a:	mov    ecx,r14d
  40627d:	call   405cb0 <table_sorted_subset_find@@Base>
  406282:	add    rsp,0x10
  406286:	pop    rbx
  406287:	pop    r14
  406289:	pop    rbp
  40628a:	ret    
  40628b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406290 <table_sorted_find_uchar@@Base>:
  406290:	push   rbp
  406291:	push   r14
  406293:	push   rbx
  406294:	sub    rsp,0x10
  406298:	mov    r14d,ecx
  40629b:	mov    ebp,esi
  40629d:	mov    rbx,rdi
  4062a0:	mov    BYTE PTR [rsp+0xf],dl
  4062a4:	call   406800 <table_get_row_length@@Base>
  4062a9:	lea    r9d,[rax-0x1]
  4062ad:	lea    rdx,[rsp+0xf]
  4062b2:	xor    r8d,r8d
  4062b5:	mov    rdi,rbx
  4062b8:	mov    esi,ebp
  4062ba:	mov    ecx,r14d
  4062bd:	call   405cb0 <table_sorted_subset_find@@Base>
  4062c2:	add    rsp,0x10
  4062c6:	pop    rbx
  4062c7:	pop    r14
  4062c9:	pop    rbp
  4062ca:	ret    
  4062cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004062d0 <table_sorted_find_string@@Base>:
  4062d0:	push   rbp
  4062d1:	push   r15
  4062d3:	push   r14
  4062d5:	push   rbx
  4062d6:	push   rax
  4062d7:	mov    r14d,ecx
  4062da:	mov    r15,rdx
  4062dd:	mov    ebp,esi
  4062df:	mov    rbx,rdi
  4062e2:	call   406800 <table_get_row_length@@Base>
  4062e7:	lea    r9d,[rax-0x1]
  4062eb:	xor    r8d,r8d
  4062ee:	mov    rdi,rbx
  4062f1:	mov    esi,ebp
  4062f3:	mov    rdx,r15
  4062f6:	mov    ecx,r14d
  4062f9:	add    rsp,0x8
  4062fd:	pop    rbx
  4062fe:	pop    r14
  406300:	pop    r15
  406302:	pop    rbp
  406303:	jmp    405cb0 <table_sorted_subset_find@@Base>
  406308:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406310 <table_sorted_find_ptr@@Base>:
  406310:	push   rbp
  406311:	push   r15
  406313:	push   r14
  406315:	push   rbx
  406316:	push   rax
  406317:	mov    r14d,ecx
  40631a:	mov    r15,rdx
  40631d:	mov    ebp,esi
  40631f:	mov    rbx,rdi
  406322:	call   406800 <table_get_row_length@@Base>
  406327:	lea    r9d,[rax-0x1]
  40632b:	xor    r8d,r8d
  40632e:	mov    rdi,rbx
  406331:	mov    esi,ebp
  406333:	mov    rdx,r15
  406336:	mov    ecx,r14d
  406339:	add    rsp,0x8
  40633d:	pop    rbx
  40633e:	pop    r14
  406340:	pop    r15
  406342:	pop    rbp
  406343:	jmp    405cb0 <table_sorted_subset_find@@Base>
  406348:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406350 <table_sorted_subset_find_int@@Base>:
  406350:	push   rax
  406351:	mov    DWORD PTR [rsp+0x4],edx
  406355:	lea    rdx,[rsp+0x4]
  40635a:	call   405cb0 <table_sorted_subset_find@@Base>
  40635f:	pop    rcx
  406360:	ret    
  406361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40636b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406370 <table_sorted_subset_find_uint@@Base>:
  406370:	push   rax
  406371:	mov    DWORD PTR [rsp+0x4],edx
  406375:	lea    rdx,[rsp+0x4]
  40637a:	call   405cb0 <table_sorted_subset_find@@Base>
  40637f:	pop    rcx
  406380:	ret    
  406381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40638b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406390 <table_sorted_subset_find_int8@@Base>:
  406390:	push   rax
  406391:	mov    BYTE PTR [rsp+0x7],dl
  406395:	lea    rdx,[rsp+0x7]
  40639a:	call   405cb0 <table_sorted_subset_find@@Base>
  40639f:	pop    rcx
  4063a0:	ret    
  4063a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004063b0 <table_sorted_subset_find_uint8@@Base>:
  4063b0:	push   rax
  4063b1:	mov    BYTE PTR [rsp+0x7],dl
  4063b5:	lea    rdx,[rsp+0x7]
  4063ba:	call   405cb0 <table_sorted_subset_find@@Base>
  4063bf:	pop    rcx
  4063c0:	ret    
  4063c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004063d0 <table_sorted_subset_find_int16@@Base>:
  4063d0:	push   rax
  4063d1:	mov    WORD PTR [rsp+0x6],dx
  4063d6:	lea    rdx,[rsp+0x6]
  4063db:	call   405cb0 <table_sorted_subset_find@@Base>
  4063e0:	pop    rcx
  4063e1:	ret    
  4063e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063ec:	nop    DWORD PTR [rax+0x0]

00000000004063f0 <table_sorted_subset_find_uint16@@Base>:
  4063f0:	push   rax
  4063f1:	mov    WORD PTR [rsp+0x6],dx
  4063f6:	lea    rdx,[rsp+0x6]
  4063fb:	call   405cb0 <table_sorted_subset_find@@Base>
  406400:	pop    rcx
  406401:	ret    
  406402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40640c:	nop    DWORD PTR [rax+0x0]

0000000000406410 <table_sorted_subset_find_int32@@Base>:
  406410:	push   rax
  406411:	mov    DWORD PTR [rsp+0x4],edx
  406415:	lea    rdx,[rsp+0x4]
  40641a:	call   405cb0 <table_sorted_subset_find@@Base>
  40641f:	pop    rcx
  406420:	ret    
  406421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40642b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406430 <table_sorted_subset_find_uint32@@Base>:
  406430:	push   rax
  406431:	mov    DWORD PTR [rsp+0x4],edx
  406435:	lea    rdx,[rsp+0x4]
  40643a:	call   405cb0 <table_sorted_subset_find@@Base>
  40643f:	pop    rcx
  406440:	ret    
  406441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40644b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406450 <table_sorted_subset_find_int64@@Base>:
  406450:	push   rax
  406451:	mov    QWORD PTR [rsp],rdx
  406455:	mov    rdx,rsp
  406458:	call   405cb0 <table_sorted_subset_find@@Base>
  40645d:	pop    rcx
  40645e:	ret    
  40645f:	nop

0000000000406460 <table_sorted_subset_find_uint64@@Base>:
  406460:	push   rax
  406461:	mov    QWORD PTR [rsp],rdx
  406465:	mov    rdx,rsp
  406468:	call   405cb0 <table_sorted_subset_find@@Base>
  40646d:	pop    rcx
  40646e:	ret    
  40646f:	nop

0000000000406470 <table_sorted_subset_find_short@@Base>:
  406470:	push   rax
  406471:	mov    WORD PTR [rsp+0x6],dx
  406476:	lea    rdx,[rsp+0x6]
  40647b:	call   405cb0 <table_sorted_subset_find@@Base>
  406480:	pop    rcx
  406481:	ret    
  406482:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40648c:	nop    DWORD PTR [rax+0x0]

0000000000406490 <table_sorted_subset_find_ushort@@Base>:
  406490:	push   rax
  406491:	mov    WORD PTR [rsp+0x6],dx
  406496:	lea    rdx,[rsp+0x6]
  40649b:	call   405cb0 <table_sorted_subset_find@@Base>
  4064a0:	pop    rcx
  4064a1:	ret    
  4064a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064ac:	nop    DWORD PTR [rax+0x0]

00000000004064b0 <table_sorted_subset_find_long@@Base>:
  4064b0:	push   rax
  4064b1:	mov    QWORD PTR [rsp],rdx
  4064b5:	mov    rdx,rsp
  4064b8:	call   405cb0 <table_sorted_subset_find@@Base>
  4064bd:	pop    rcx
  4064be:	ret    
  4064bf:	nop

00000000004064c0 <table_sorted_subset_find_ulong@@Base>:
  4064c0:	push   rax
  4064c1:	mov    QWORD PTR [rsp],rdx
  4064c5:	mov    rdx,rsp
  4064c8:	call   405cb0 <table_sorted_subset_find@@Base>
  4064cd:	pop    rcx
  4064ce:	ret    
  4064cf:	nop

00000000004064d0 <table_sorted_subset_find_llong@@Base>:
  4064d0:	push   rax
  4064d1:	mov    QWORD PTR [rsp],rdx
  4064d5:	mov    rdx,rsp
  4064d8:	call   405cb0 <table_sorted_subset_find@@Base>
  4064dd:	pop    rcx
  4064de:	ret    
  4064df:	nop

00000000004064e0 <table_sorted_subset_find_ullong@@Base>:
  4064e0:	push   rax
  4064e1:	mov    QWORD PTR [rsp],rdx
  4064e5:	mov    rdx,rsp
  4064e8:	call   405cb0 <table_sorted_subset_find@@Base>
  4064ed:	pop    rcx
  4064ee:	ret    
  4064ef:	nop

00000000004064f0 <table_sorted_subset_find_float@@Base>:
  4064f0:	push   rax
  4064f1:	mov    r9d,r8d
  4064f4:	mov    eax,ecx
  4064f6:	mov    ecx,edx
  4064f8:	vmovss DWORD PTR [rsp+0x4],xmm0
  4064fe:	lea    rdx,[rsp+0x4]
  406503:	mov    r8d,eax
  406506:	call   405cb0 <table_sorted_subset_find@@Base>
  40650b:	pop    rcx
  40650c:	ret    
  40650d:	nop    DWORD PTR [rax]

0000000000406510 <table_sorted_subset_find_double@@Base>:
  406510:	push   rax
  406511:	mov    r9d,r8d
  406514:	mov    eax,ecx
  406516:	mov    ecx,edx
  406518:	vmovsd QWORD PTR [rsp],xmm0
  40651d:	mov    rdx,rsp
  406520:	mov    r8d,eax
  406523:	call   405cb0 <table_sorted_subset_find@@Base>
  406528:	pop    rcx
  406529:	ret    
  40652a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406530 <table_sorted_subset_find_ldouble@@Base>:
  406530:	sub    rsp,0x18
  406534:	mov    r9d,r8d
  406537:	mov    eax,ecx
  406539:	mov    ecx,edx
  40653b:	fld    TBYTE PTR [rsp+0x20]
  40653f:	fstp   TBYTE PTR [rsp]
  406542:	mov    rdx,rsp
  406545:	mov    r8d,eax
  406548:	call   405cb0 <table_sorted_subset_find@@Base>
  40654d:	add    rsp,0x18
  406551:	ret    
  406552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40655c:	nop    DWORD PTR [rax+0x0]

0000000000406560 <table_sorted_subset_find_char@@Base>:
  406560:	push   rax
  406561:	mov    BYTE PTR [rsp+0x7],dl
  406565:	lea    rdx,[rsp+0x7]
  40656a:	call   405cb0 <table_sorted_subset_find@@Base>
  40656f:	pop    rcx
  406570:	ret    
  406571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40657b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406580 <table_sorted_subset_find_uchar@@Base>:
  406580:	push   rax
  406581:	mov    BYTE PTR [rsp+0x7],dl
  406585:	lea    rdx,[rsp+0x7]
  40658a:	call   405cb0 <table_sorted_subset_find@@Base>
  40658f:	pop    rcx
  406590:	ret    
  406591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40659b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004065a0 <table_sorted_subset_find_string@@Base>:
  4065a0:	jmp    405cb0 <table_sorted_subset_find@@Base>
  4065a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065af:	nop

00000000004065b0 <table_sorted_subset_find_ptr@@Base>:
  4065b0:	jmp    405cb0 <table_sorted_subset_find@@Base>
  4065b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065bf:	nop

00000000004065c0 <table_get@@Base>:
  4065c0:	push   rax
  4065c1:	call   407910 <table_get_cell_ptr@@Base>
  4065c6:	mov    rax,QWORD PTR [rax]
  4065c9:	pop    rcx
  4065ca:	ret    
  4065cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004065d0 <table_get_bool@@Base>:
  4065d0:	push   rax
  4065d1:	call   407910 <table_get_cell_ptr@@Base>
  4065d6:	mov    rax,QWORD PTR [rax]
  4065d9:	mov    al,BYTE PTR [rax]
  4065db:	pop    rcx
  4065dc:	ret    
  4065dd:	nop    DWORD PTR [rax]

00000000004065e0 <table_get_int@@Base>:
  4065e0:	push   rax
  4065e1:	call   407910 <table_get_cell_ptr@@Base>
  4065e6:	mov    rax,QWORD PTR [rax]
  4065e9:	mov    eax,DWORD PTR [rax]
  4065eb:	pop    rcx
  4065ec:	ret    
  4065ed:	nop    DWORD PTR [rax]

00000000004065f0 <table_get_uint@@Base>:
  4065f0:	push   rax
  4065f1:	call   407910 <table_get_cell_ptr@@Base>
  4065f6:	mov    rax,QWORD PTR [rax]
  4065f9:	mov    eax,DWORD PTR [rax]
  4065fb:	pop    rcx
  4065fc:	ret    
  4065fd:	nop    DWORD PTR [rax]

0000000000406600 <table_get_int8@@Base>:
  406600:	push   rax
  406601:	call   407910 <table_get_cell_ptr@@Base>
  406606:	mov    rax,QWORD PTR [rax]
  406609:	mov    al,BYTE PTR [rax]
  40660b:	pop    rcx
  40660c:	ret    
  40660d:	nop    DWORD PTR [rax]

0000000000406610 <table_get_uint8@@Base>:
  406610:	push   rax
  406611:	call   407910 <table_get_cell_ptr@@Base>
  406616:	mov    rax,QWORD PTR [rax]
  406619:	mov    al,BYTE PTR [rax]
  40661b:	pop    rcx
  40661c:	ret    
  40661d:	nop    DWORD PTR [rax]

0000000000406620 <table_get_int16@@Base>:
  406620:	push   rax
  406621:	call   407910 <table_get_cell_ptr@@Base>
  406626:	mov    rax,QWORD PTR [rax]
  406629:	movzx  eax,WORD PTR [rax]
  40662c:	pop    rcx
  40662d:	ret    
  40662e:	xchg   ax,ax

0000000000406630 <table_get_uint16@@Base>:
  406630:	push   rax
  406631:	call   407910 <table_get_cell_ptr@@Base>
  406636:	mov    rax,QWORD PTR [rax]
  406639:	movzx  eax,WORD PTR [rax]
  40663c:	pop    rcx
  40663d:	ret    
  40663e:	xchg   ax,ax

0000000000406640 <table_get_int32@@Base>:
  406640:	push   rax
  406641:	call   407910 <table_get_cell_ptr@@Base>
  406646:	mov    rax,QWORD PTR [rax]
  406649:	mov    eax,DWORD PTR [rax]
  40664b:	pop    rcx
  40664c:	ret    
  40664d:	nop    DWORD PTR [rax]

0000000000406650 <table_get_uint32@@Base>:
  406650:	push   rax
  406651:	call   407910 <table_get_cell_ptr@@Base>
  406656:	mov    rax,QWORD PTR [rax]
  406659:	mov    eax,DWORD PTR [rax]
  40665b:	pop    rcx
  40665c:	ret    
  40665d:	nop    DWORD PTR [rax]

0000000000406660 <table_get_int64@@Base>:
  406660:	push   rax
  406661:	call   407910 <table_get_cell_ptr@@Base>
  406666:	mov    rax,QWORD PTR [rax]
  406669:	mov    rax,QWORD PTR [rax]
  40666c:	pop    rcx
  40666d:	ret    
  40666e:	xchg   ax,ax

0000000000406670 <table_get_uint64@@Base>:
  406670:	push   rax
  406671:	call   407910 <table_get_cell_ptr@@Base>
  406676:	mov    rax,QWORD PTR [rax]
  406679:	mov    rax,QWORD PTR [rax]
  40667c:	pop    rcx
  40667d:	ret    
  40667e:	xchg   ax,ax

0000000000406680 <table_get_short@@Base>:
  406680:	push   rax
  406681:	call   407910 <table_get_cell_ptr@@Base>
  406686:	mov    rax,QWORD PTR [rax]
  406689:	movzx  eax,WORD PTR [rax]
  40668c:	pop    rcx
  40668d:	ret    
  40668e:	xchg   ax,ax

0000000000406690 <table_get_ushort@@Base>:
  406690:	push   rax
  406691:	call   407910 <table_get_cell_ptr@@Base>
  406696:	mov    rax,QWORD PTR [rax]
  406699:	movzx  eax,WORD PTR [rax]
  40669c:	pop    rcx
  40669d:	ret    
  40669e:	xchg   ax,ax

00000000004066a0 <table_get_long@@Base>:
  4066a0:	push   rax
  4066a1:	call   407910 <table_get_cell_ptr@@Base>
  4066a6:	mov    rax,QWORD PTR [rax]
  4066a9:	mov    rax,QWORD PTR [rax]
  4066ac:	pop    rcx
  4066ad:	ret    
  4066ae:	xchg   ax,ax

00000000004066b0 <table_get_ulong@@Base>:
  4066b0:	push   rax
  4066b1:	call   407910 <table_get_cell_ptr@@Base>
  4066b6:	mov    rax,QWORD PTR [rax]
  4066b9:	mov    rax,QWORD PTR [rax]
  4066bc:	pop    rcx
  4066bd:	ret    
  4066be:	xchg   ax,ax

00000000004066c0 <table_get_llong@@Base>:
  4066c0:	push   rax
  4066c1:	call   407910 <table_get_cell_ptr@@Base>
  4066c6:	mov    rax,QWORD PTR [rax]
  4066c9:	mov    rax,QWORD PTR [rax]
  4066cc:	pop    rcx
  4066cd:	ret    
  4066ce:	xchg   ax,ax

00000000004066d0 <table_get_ullong@@Base>:
  4066d0:	push   rax
  4066d1:	call   407910 <table_get_cell_ptr@@Base>
  4066d6:	mov    rax,QWORD PTR [rax]
  4066d9:	mov    rax,QWORD PTR [rax]
  4066dc:	pop    rcx
  4066dd:	ret    
  4066de:	xchg   ax,ax

00000000004066e0 <table_get_float@@Base>:
  4066e0:	push   rax
  4066e1:	call   407910 <table_get_cell_ptr@@Base>
  4066e6:	mov    rax,QWORD PTR [rax]
  4066e9:	vmovss xmm0,DWORD PTR [rax]
  4066ed:	pop    rax
  4066ee:	ret    
  4066ef:	nop

00000000004066f0 <table_get_double@@Base>:
  4066f0:	push   rax
  4066f1:	call   407910 <table_get_cell_ptr@@Base>
  4066f6:	mov    rax,QWORD PTR [rax]
  4066f9:	vmovsd xmm0,QWORD PTR [rax]
  4066fd:	pop    rax
  4066fe:	ret    
  4066ff:	nop

0000000000406700 <table_get_ldouble@@Base>:
  406700:	push   rax
  406701:	call   407910 <table_get_cell_ptr@@Base>
  406706:	mov    rax,QWORD PTR [rax]
  406709:	fld    TBYTE PTR [rax]
  40670b:	pop    rax
  40670c:	ret    
  40670d:	nop    DWORD PTR [rax]

0000000000406710 <table_get_char@@Base>:
  406710:	push   rax
  406711:	call   407910 <table_get_cell_ptr@@Base>
  406716:	mov    rax,QWORD PTR [rax]
  406719:	mov    al,BYTE PTR [rax]
  40671b:	pop    rcx
  40671c:	ret    
  40671d:	nop    DWORD PTR [rax]

0000000000406720 <table_get_uchar@@Base>:
  406720:	push   rax
  406721:	call   407910 <table_get_cell_ptr@@Base>
  406726:	mov    rax,QWORD PTR [rax]
  406729:	mov    al,BYTE PTR [rax]
  40672b:	pop    rcx
  40672c:	ret    
  40672d:	nop    DWORD PTR [rax]

0000000000406730 <table_get_string@@Base>:
  406730:	push   rax
  406731:	call   407910 <table_get_cell_ptr@@Base>
  406736:	mov    rax,QWORD PTR [rax]
  406739:	pop    rcx
  40673a:	ret    
  40673b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406740 <table_get_ptr@@Base>:
  406740:	push   rax
  406741:	call   407910 <table_get_cell_ptr@@Base>
  406746:	mov    rax,QWORD PTR [rax]
  406749:	pop    rcx
  40674a:	ret    
  40674b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406750 <table_row_init@@Base>:
  406750:	push   r14
  406752:	push   rbx
  406753:	push   rax
  406754:	mov    rax,QWORD PTR [rdi+0x18]
  406758:	mov    r14,QWORD PTR [rdi+0x20]
  40675c:	movsxd rbx,esi
  40675f:	shl    rax,0x3
  406763:	mov    rdi,rax
  406766:	call   404090 <malloc@plt>
  40676b:	mov    QWORD PTR [r14+rbx*8],rax
  40676f:	add    rsp,0x8
  406773:	pop    rbx
  406774:	pop    r14
  406776:	ret    
  406777:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406780 <table_get_row_ptr@@Base>:
  406780:	movsxd rax,esi
  406783:	shl    rax,0x3
  406787:	add    rax,QWORD PTR [rdi+0x20]
  40678b:	ret    
  40678c:	nop    DWORD PTR [rax+0x0]

0000000000406790 <table_row_destroy@@Base>:
  406790:	push   rbp
  406791:	push   r15
  406793:	push   r14
  406795:	push   r13
  406797:	push   r12
  406799:	push   rbx
  40679a:	push   rax
  40679b:	mov    r14d,esi
  40679e:	mov    r15,rdi
  4067a1:	call   404da0 <table_get_column_length@@Base>
  4067a6:	mov    r12,QWORD PTR [r15+0x20]
  4067aa:	movsxd r13,r14d
  4067ad:	test   eax,eax
  4067af:	jle    4067d4 <table_row_destroy@@Base+0x44>
  4067b1:	mov    ebp,eax
  4067b3:	xor    ebx,ebx
  4067b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067bf:	nop
  4067c0:	mov    rdi,r15
  4067c3:	mov    esi,r14d
  4067c6:	mov    edx,ebx
  4067c8:	call   407930 <table_cell_destroy@@Base>
  4067cd:	add    ebx,0x1
  4067d0:	cmp    ebp,ebx
  4067d2:	jne    4067c0 <table_row_destroy@@Base+0x30>
  4067d4:	mov    rdi,QWORD PTR [r12+r13*8]
  4067d8:	add    rsp,0x8
  4067dc:	test   rdi,rdi
  4067df:	je     4067f0 <table_row_destroy@@Base+0x60>
  4067e1:	pop    rbx
  4067e2:	pop    r12
  4067e4:	pop    r13
  4067e6:	pop    r14
  4067e8:	pop    r15
  4067ea:	pop    rbp
  4067eb:	jmp    404030 <free@plt>
  4067f0:	pop    rbx
  4067f1:	pop    r12
  4067f3:	pop    r13
  4067f5:	pop    r14
  4067f7:	pop    r15
  4067f9:	pop    rbp
  4067fa:	ret    
  4067fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406800 <table_get_row_length@@Base>:
  406800:	mov    eax,DWORD PTR [rdi+0x28]
  406803:	ret    
  406804:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40680e:	xchg   ax,ax

0000000000406810 <table_add_row@@Base>:
  406810:	push   rbp
  406811:	push   r15
  406813:	push   r14
  406815:	push   r12
  406817:	push   rbx
  406818:	mov    r12,rdi
  40681b:	mov    r15d,DWORD PTR [rdi+0x28]
  40681f:	movsxd r14,r15d
  406822:	mov    rsi,QWORD PTR [rdi+0x30]
  406826:	mov    rax,r14
  406829:	or     rax,rsi
  40682c:	shr    rax,0x20
  406830:	je     4068d1 <table_add_row@@Base+0xc1>
  406836:	xor    edx,edx
  406838:	mov    rax,r14
  40683b:	div    rsi
  40683e:	test   rdx,rdx
  406841:	jne    406868 <table_add_row@@Base+0x58>
  406843:	add    rsi,QWORD PTR [r12+0x38]
  406848:	mov    QWORD PTR [r12+0x38],rsi
  40684d:	mov    rdi,QWORD PTR [r12+0x20]
  406852:	shl    rsi,0x3
  406856:	call   4040b0 <realloc@plt>
  40685b:	mov    QWORD PTR [r12+0x20],rax
  406860:	mov    r15d,DWORD PTR [r12+0x28]
  406865:	movsxd r14,r15d
  406868:	mov    rdi,r12
  40686b:	call   404da0 <table_get_column_length@@Base>
  406870:	mov    ebp,eax
  406872:	mov    rdi,QWORD PTR [r12+0x18]
  406877:	mov    rbx,QWORD PTR [r12+0x20]
  40687c:	shl    rdi,0x3
  406880:	call   404090 <malloc@plt>
  406885:	mov    QWORD PTR [rbx+r14*8],rax
  406889:	test   ebp,ebp
  40688b:	jle    4068a4 <table_add_row@@Base+0x94>
  40688d:	xor    ebx,ebx
  40688f:	nop
  406890:	mov    rdi,r12
  406893:	mov    esi,r15d
  406896:	mov    edx,ebx
  406898:	call   4078f0 <table_cell_init@@Base>
  40689d:	add    ebx,0x1
  4068a0:	cmp    ebp,ebx
  4068a2:	jne    406890 <table_add_row@@Base+0x80>
  4068a4:	mov    esi,DWORD PTR [r12+0x28]
  4068a9:	mov    edx,0xffffffff
  4068ae:	mov    ecx,0x2
  4068b3:	mov    rdi,r12
  4068b6:	call   404cb0 <table_notify@@Base>
  4068bb:	mov    eax,DWORD PTR [r12+0x28]
  4068c0:	lea    ecx,[rax+0x1]
  4068c3:	mov    DWORD PTR [r12+0x28],ecx
  4068c8:	pop    rbx
  4068c9:	pop    r12
  4068cb:	pop    r14
  4068cd:	pop    r15
  4068cf:	pop    rbp
  4068d0:	ret    
  4068d1:	xor    edx,edx
  4068d3:	mov    eax,r15d
  4068d6:	div    esi
  4068d8:	test   rdx,rdx
  4068db:	jne    406868 <table_add_row@@Base+0x58>
  4068dd:	jmp    406843 <table_add_row@@Base+0x33>
  4068e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ec:	nop    DWORD PTR [rax+0x0]

00000000004068f0 <table_remove_row@@Base>:
  4068f0:	push   rbp
  4068f1:	push   r15
  4068f3:	push   r14
  4068f5:	push   r12
  4068f7:	push   rbx
  4068f8:	mov    r14d,esi
  4068fb:	mov    rbx,rdi
  4068fe:	mov    r12d,DWORD PTR [rdi+0x28]
  406902:	call   404da0 <table_get_column_length@@Base>
  406907:	test   eax,eax
  406909:	jle    406941 <table_remove_row@@Base+0x51>
  40690b:	mov    r15d,eax
  40690e:	xor    ebp,ebp
  406910:	mov    rdi,rbx
  406913:	mov    esi,ebp
  406915:	call   404e20 <table_get_column_data_type@@Base>
  40691a:	cmp    eax,0x17
  40691d:	je     406939 <table_remove_row@@Base+0x49>
  40691f:	mov    rdi,rbx
  406922:	mov    esi,r14d
  406925:	mov    edx,ebp
  406927:	call   407910 <table_get_cell_ptr@@Base>
  40692c:	mov    rdi,QWORD PTR [rax]
  40692f:	test   rdi,rdi
  406932:	je     406939 <table_remove_row@@Base+0x49>
  406934:	call   404030 <free@plt>
  406939:	add    ebp,0x1
  40693c:	cmp    r15d,ebp
  40693f:	jne    406910 <table_remove_row@@Base+0x20>
  406941:	mov    rax,QWORD PTR [rbx+0x20]
  406945:	movsxd rbp,r14d
  406948:	mov    rdi,QWORD PTR [rax+rbp*8]
  40694c:	test   rdi,rdi
  40694f:	je     406956 <table_remove_row@@Base+0x66>
  406951:	call   404030 <free@plt>
  406956:	add    r12d,0xffffffff
  40695a:	mov    ecx,r12d
  40695d:	sub    ecx,r14d
  406960:	jle    406a18 <table_remove_row@@Base+0x128>
  406966:	movsxd rax,r12d
  406969:	mov    rdx,rbp
  40696c:	not    rdx
  40696f:	add    rdx,rax
  406972:	and    rcx,0x7
  406976:	je     406997 <table_remove_row@@Base+0xa7>
  406978:	neg    rcx
  40697b:	nop    DWORD PTR [rax+rax*1+0x0]
  406980:	mov    rsi,QWORD PTR [rbx+0x20]
  406984:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  406989:	mov    QWORD PTR [rsi+rbp*8],rdi
  40698d:	add    rbp,0x1
  406991:	add    rcx,0x1
  406995:	jne    406980 <table_remove_row@@Base+0x90>
  406997:	cmp    rdx,0x7
  40699b:	jb     406a18 <table_remove_row@@Base+0x128>
  40699d:	nop    DWORD PTR [rax]
  4069a0:	mov    rcx,QWORD PTR [rbx+0x20]
  4069a4:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  4069a9:	mov    QWORD PTR [rcx+rbp*8],rdx
  4069ad:	mov    rcx,QWORD PTR [rbx+0x20]
  4069b1:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  4069b6:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  4069bb:	mov    rcx,QWORD PTR [rbx+0x20]
  4069bf:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  4069c4:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  4069c9:	mov    rcx,QWORD PTR [rbx+0x20]
  4069cd:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  4069d2:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  4069d7:	mov    rcx,QWORD PTR [rbx+0x20]
  4069db:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  4069e0:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  4069e5:	mov    rcx,QWORD PTR [rbx+0x20]
  4069e9:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  4069ee:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  4069f3:	mov    rcx,QWORD PTR [rbx+0x20]
  4069f7:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  4069fc:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  406a01:	mov    rcx,QWORD PTR [rbx+0x20]
  406a05:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  406a0a:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  406a0f:	add    rbp,0x8
  406a13:	cmp    rax,rbp
  406a16:	jne    4069a0 <table_remove_row@@Base+0xb0>
  406a18:	movsxd rax,DWORD PTR [rbx+0x28]
  406a1c:	add    rax,0xffffffffffffffff
  406a20:	mov    DWORD PTR [rbx+0x28],eax
  406a23:	mov    rcx,QWORD PTR [rbx+0x30]
  406a27:	mov    rdx,rax
  406a2a:	or     rdx,rcx
  406a2d:	shr    rdx,0x20
  406a31:	je     406a79 <table_remove_row@@Base+0x189>
  406a33:	xor    edx,edx
  406a35:	div    rcx
  406a38:	test   rdx,rdx
  406a3b:	jne    406a59 <table_remove_row@@Base+0x169>
  406a3d:	mov    rdi,QWORD PTR [rbx+0x20]
  406a41:	mov    rsi,QWORD PTR [rbx+0x38]
  406a45:	sub    rsi,rcx
  406a48:	mov    QWORD PTR [rbx+0x38],rsi
  406a4c:	shl    rsi,0x3
  406a50:	call   4040b0 <realloc@plt>
  406a55:	mov    QWORD PTR [rbx+0x20],rax
  406a59:	mov    edx,0xffffffff
  406a5e:	mov    ecx,0x4
  406a63:	mov    rdi,rbx
  406a66:	mov    esi,r14d
  406a69:	call   404cb0 <table_notify@@Base>
  406a6e:	xor    eax,eax
  406a70:	pop    rbx
  406a71:	pop    r12
  406a73:	pop    r14
  406a75:	pop    r15
  406a77:	pop    rbp
  406a78:	ret    
  406a79:	xor    edx,edx
  406a7b:	div    ecx
  406a7d:	test   rdx,rdx
  406a80:	jne    406a59 <table_remove_row@@Base+0x169>
  406a82:	jmp    406a3d <table_remove_row@@Base+0x14d>
  406a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a8e:	xchg   ax,ax

0000000000406a90 <table_set_row_ptr@@Base>:
  406a90:	mov    rax,QWORD PTR [rdi+0x20]
  406a94:	movsxd rcx,esi
  406a97:	mov    rdx,QWORD PTR [rdx]
  406a9a:	mov    QWORD PTR [rax+rcx*8],rdx
  406a9e:	ret    
  406a9f:	nop

0000000000406aa0 <table_set@@Base>:
  406aa0:	push   rbp
  406aa1:	push   r15
  406aa3:	push   r14
  406aa5:	push   r13
  406aa7:	push   r12
  406aa9:	push   rbx
  406aaa:	push   rax
  406aab:	mov    r12d,r8d
  406aae:	mov    QWORD PTR [rsp],rcx
  406ab2:	mov    ebx,edx
  406ab4:	mov    r14d,esi
  406ab7:	mov    rbp,rdi
  406aba:	call   407910 <table_get_cell_ptr@@Base>
  406abf:	mov    r13,rax
  406ac2:	mov    rdi,rbp
  406ac5:	mov    esi,ebx
  406ac7:	call   404d70 <table_get_col_ptr@@Base>
  406acc:	mov    r15d,0xffffffff
  406ad2:	cmp    r12d,0x17
  406ad6:	ja     406d17 <table_set@@Base+0x277>
  406adc:	mov    ecx,r12d
  406adf:	lea    rdx,[rip+0x2676]        # 40915c <_IO_stdin_used@@Base+0x15c>
  406ae6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  406aea:	add    rcx,rdx
  406aed:	jmp    rcx
  406aef:	cmp    DWORD PTR [rax+0x8],0x0
  406af3:	jne    406d17 <table_set@@Base+0x277>
  406af9:	jmp    406bf7 <table_set@@Base+0x157>
  406afe:	cmp    DWORD PTR [rax+0x8],0x1
  406b02:	je     406bf7 <table_set@@Base+0x157>
  406b08:	jmp    406d17 <table_set@@Base+0x277>
  406b0d:	cmp    DWORD PTR [rax+0x8],0x2
  406b11:	je     406cde <table_set@@Base+0x23e>
  406b17:	jmp    406d17 <table_set@@Base+0x277>
  406b1c:	cmp    DWORD PTR [rax+0x8],0x3
  406b20:	je     406cde <table_set@@Base+0x23e>
  406b26:	jmp    406d17 <table_set@@Base+0x277>
  406b2b:	cmp    DWORD PTR [rax+0x8],0x4
  406b2f:	je     406b92 <table_set@@Base+0xf2>
  406b31:	jmp    406d17 <table_set@@Base+0x277>
  406b36:	cmp    DWORD PTR [rax+0x8],0x5
  406b3a:	je     406b92 <table_set@@Base+0xf2>
  406b3c:	jmp    406d17 <table_set@@Base+0x277>
  406b41:	cmp    DWORD PTR [rax+0x8],0x6
  406b45:	je     406bf7 <table_set@@Base+0x157>
  406b4b:	jmp    406d17 <table_set@@Base+0x277>
  406b50:	cmp    DWORD PTR [rax+0x8],0x7
  406b54:	je     406bf7 <table_set@@Base+0x157>
  406b5a:	jmp    406d17 <table_set@@Base+0x277>
  406b5f:	cmp    DWORD PTR [rax+0x8],0x8
  406b63:	je     406c2e <table_set@@Base+0x18e>
  406b69:	jmp    406d17 <table_set@@Base+0x277>
  406b6e:	cmp    DWORD PTR [rax+0x8],0x9
  406b72:	je     406c2e <table_set@@Base+0x18e>
  406b78:	jmp    406d17 <table_set@@Base+0x277>
  406b7d:	cmp    DWORD PTR [rax+0x8],0xa
  406b81:	je     406b92 <table_set@@Base+0xf2>
  406b83:	jmp    406d17 <table_set@@Base+0x277>
  406b88:	cmp    DWORD PTR [rax+0x8],0xb
  406b8c:	jne    406d17 <table_set@@Base+0x277>
  406b92:	mov    rax,QWORD PTR [r13+0x0]
  406b96:	test   rax,rax
  406b99:	jne    406bb2 <table_set@@Base+0x112>
  406b9b:	mov    edi,0x2
  406ba0:	call   404090 <malloc@plt>
  406ba5:	mov    QWORD PTR [r13+0x0],rax
  406ba9:	test   rax,rax
  406bac:	je     406d17 <table_set@@Base+0x277>
  406bb2:	mov    rcx,QWORD PTR [rsp]
  406bb6:	movzx  ecx,WORD PTR [rcx]
  406bb9:	mov    WORD PTR [rax],cx
  406bbc:	jmp    406d02 <table_set@@Base+0x262>
  406bc1:	cmp    DWORD PTR [rax+0x8],0xc
  406bc5:	je     406c2e <table_set@@Base+0x18e>
  406bc7:	jmp    406d17 <table_set@@Base+0x277>
  406bcc:	cmp    DWORD PTR [rax+0x8],0xd
  406bd0:	je     406c2e <table_set@@Base+0x18e>
  406bd2:	jmp    406d17 <table_set@@Base+0x277>
  406bd7:	cmp    DWORD PTR [rax+0x8],0xe
  406bdb:	je     406c2e <table_set@@Base+0x18e>
  406bdd:	jmp    406d17 <table_set@@Base+0x277>
  406be2:	cmp    DWORD PTR [rax+0x8],0xf
  406be6:	je     406c2e <table_set@@Base+0x18e>
  406be8:	jmp    406d17 <table_set@@Base+0x277>
  406bed:	cmp    DWORD PTR [rax+0x8],0x10
  406bf1:	jne    406d17 <table_set@@Base+0x277>
  406bf7:	mov    rax,QWORD PTR [r13+0x0]
  406bfb:	test   rax,rax
  406bfe:	jne    406c17 <table_set@@Base+0x177>
  406c00:	mov    edi,0x4
  406c05:	call   404090 <malloc@plt>
  406c0a:	mov    QWORD PTR [r13+0x0],rax
  406c0e:	test   rax,rax
  406c11:	je     406d17 <table_set@@Base+0x277>
  406c17:	mov    rcx,QWORD PTR [rsp]
  406c1b:	mov    ecx,DWORD PTR [rcx]
  406c1d:	mov    DWORD PTR [rax],ecx
  406c1f:	jmp    406d02 <table_set@@Base+0x262>
  406c24:	cmp    DWORD PTR [rax+0x8],0x11
  406c28:	jne    406d17 <table_set@@Base+0x277>
  406c2e:	mov    rax,QWORD PTR [r13+0x0]
  406c32:	test   rax,rax
  406c35:	jne    406c4e <table_set@@Base+0x1ae>
  406c37:	mov    edi,0x8
  406c3c:	call   404090 <malloc@plt>
  406c41:	mov    QWORD PTR [r13+0x0],rax
  406c45:	test   rax,rax
  406c48:	je     406d17 <table_set@@Base+0x277>
  406c4e:	mov    rcx,QWORD PTR [rsp]
  406c52:	mov    rcx,QWORD PTR [rcx]
  406c55:	mov    QWORD PTR [rax],rcx
  406c58:	jmp    406d02 <table_set@@Base+0x262>
  406c5d:	cmp    DWORD PTR [rax+0x8],0x12
  406c61:	jne    406d17 <table_set@@Base+0x277>
  406c67:	mov    rax,QWORD PTR [r13+0x0]
  406c6b:	test   rax,rax
  406c6e:	jne    406c87 <table_set@@Base+0x1e7>
  406c70:	mov    edi,0x10
  406c75:	call   404090 <malloc@plt>
  406c7a:	mov    QWORD PTR [r13+0x0],rax
  406c7e:	test   rax,rax
  406c81:	je     406d17 <table_set@@Base+0x277>
  406c87:	mov    rcx,QWORD PTR [rsp]
  406c8b:	vmovups xmm0,XMMWORD PTR [rcx]
  406c8f:	vmovups XMMWORD PTR [rax],xmm0
  406c93:	jmp    406d02 <table_set@@Base+0x262>
  406c95:	cmp    DWORD PTR [rax+0x8],0x13
  406c99:	je     406cde <table_set@@Base+0x23e>
  406c9b:	jmp    406d17 <table_set@@Base+0x277>
  406c9d:	cmp    DWORD PTR [rax+0x8],0x14
  406ca1:	je     406cde <table_set@@Base+0x23e>
  406ca3:	jmp    406d17 <table_set@@Base+0x277>
  406ca5:	cmp    DWORD PTR [rax+0x8],0x15
  406ca9:	jne    406d17 <table_set@@Base+0x277>
  406cab:	mov    rdi,QWORD PTR [rsp]
  406caf:	call   404050 <strlen@plt>
  406cb4:	mov    rdi,QWORD PTR [r13+0x0]
  406cb8:	lea    rsi,[rax+0x1]
  406cbc:	call   4040b0 <realloc@plt>
  406cc1:	mov    QWORD PTR [r13+0x0],rax
  406cc5:	test   rax,rax
  406cc8:	je     406d17 <table_set@@Base+0x277>
  406cca:	mov    rdi,rax
  406ccd:	mov    rsi,QWORD PTR [rsp]
  406cd1:	call   404040 <strcpy@plt>
  406cd6:	jmp    406d02 <table_set@@Base+0x262>
  406cd8:	cmp    DWORD PTR [rax+0x8],0x16
  406cdc:	jne    406d17 <table_set@@Base+0x277>
  406cde:	mov    rax,QWORD PTR [r13+0x0]
  406ce2:	test   rax,rax
  406ce5:	jne    406cfa <table_set@@Base+0x25a>
  406ce7:	mov    edi,0x1
  406cec:	call   404090 <malloc@plt>
  406cf1:	mov    QWORD PTR [r13+0x0],rax
  406cf5:	test   rax,rax
  406cf8:	je     406d17 <table_set@@Base+0x277>
  406cfa:	mov    rcx,QWORD PTR [rsp]
  406cfe:	mov    cl,BYTE PTR [rcx]
  406d00:	mov    BYTE PTR [rax],cl
  406d02:	mov    ecx,0x1
  406d07:	mov    rdi,rbp
  406d0a:	mov    esi,r14d
  406d0d:	mov    edx,ebx
  406d0f:	call   404cb0 <table_notify@@Base>
  406d14:	xor    r15d,r15d
  406d17:	mov    eax,r15d
  406d1a:	add    rsp,0x8
  406d1e:	pop    rbx
  406d1f:	pop    r12
  406d21:	pop    r13
  406d23:	pop    r14
  406d25:	pop    r15
  406d27:	pop    rbp
  406d28:	ret    
  406d29:	cmp    DWORD PTR [rax+0x8],0x17
  406d2d:	jne    406d17 <table_set@@Base+0x277>
  406d2f:	mov    rax,QWORD PTR [rsp]
  406d33:	mov    QWORD PTR [r13+0x0],rax
  406d37:	jmp    406d02 <table_set@@Base+0x262>
  406d39:	nop    DWORD PTR [rax+0x0]

0000000000406d40 <table_set_bool@@Base>:
  406d40:	push   rbp
  406d41:	push   r15
  406d43:	push   r14
  406d45:	push   r13
  406d47:	push   r12
  406d49:	push   rbx
  406d4a:	push   rax
  406d4b:	mov    r15d,ecx
  406d4e:	mov    ebx,edx
  406d50:	mov    r14d,esi
  406d53:	mov    rbp,rdi
  406d56:	call   407910 <table_get_cell_ptr@@Base>
  406d5b:	mov    r13,rax
  406d5e:	mov    rdi,rbp
  406d61:	mov    esi,ebx
  406d63:	call   404d70 <table_get_col_ptr@@Base>
  406d68:	mov    r12d,0xffffffff
  406d6e:	cmp    DWORD PTR [rax+0x8],0x16
  406d72:	jne    406da8 <table_set_bool@@Base+0x68>
  406d74:	mov    rax,QWORD PTR [r13+0x0]
  406d78:	test   rax,rax
  406d7b:	jne    406d90 <table_set_bool@@Base+0x50>
  406d7d:	mov    edi,0x1
  406d82:	call   404090 <malloc@plt>
  406d87:	mov    QWORD PTR [r13+0x0],rax
  406d8b:	test   rax,rax
  406d8e:	je     406da8 <table_set_bool@@Base+0x68>
  406d90:	mov    BYTE PTR [rax],r15b
  406d93:	mov    ecx,0x1
  406d98:	mov    rdi,rbp
  406d9b:	mov    esi,r14d
  406d9e:	mov    edx,ebx
  406da0:	call   404cb0 <table_notify@@Base>
  406da5:	xor    r12d,r12d
  406da8:	mov    eax,r12d
  406dab:	add    rsp,0x8
  406daf:	pop    rbx
  406db0:	pop    r12
  406db2:	pop    r13
  406db4:	pop    r14
  406db6:	pop    r15
  406db8:	pop    rbp
  406db9:	ret    
  406dba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406dc0 <table_set_int@@Base>:
  406dc0:	push   rbp
  406dc1:	push   r15
  406dc3:	push   r14
  406dc5:	push   r13
  406dc7:	push   r12
  406dc9:	push   rbx
  406dca:	push   rax
  406dcb:	mov    r15d,ecx
  406dce:	mov    ebx,edx
  406dd0:	mov    r14d,esi
  406dd3:	mov    rbp,rdi
  406dd6:	call   407910 <table_get_cell_ptr@@Base>
  406ddb:	mov    r13,rax
  406dde:	mov    rdi,rbp
  406de1:	mov    esi,ebx
  406de3:	call   404d70 <table_get_col_ptr@@Base>
  406de8:	mov    r12d,0xffffffff
  406dee:	cmp    DWORD PTR [rax+0x8],0x0
  406df2:	jne    406e28 <table_set_int@@Base+0x68>
  406df4:	mov    rax,QWORD PTR [r13+0x0]
  406df8:	test   rax,rax
  406dfb:	jne    406e10 <table_set_int@@Base+0x50>
  406dfd:	mov    edi,0x4
  406e02:	call   404090 <malloc@plt>
  406e07:	mov    QWORD PTR [r13+0x0],rax
  406e0b:	test   rax,rax
  406e0e:	je     406e28 <table_set_int@@Base+0x68>
  406e10:	mov    DWORD PTR [rax],r15d
  406e13:	mov    ecx,0x1
  406e18:	mov    rdi,rbp
  406e1b:	mov    esi,r14d
  406e1e:	mov    edx,ebx
  406e20:	call   404cb0 <table_notify@@Base>
  406e25:	xor    r12d,r12d
  406e28:	mov    eax,r12d
  406e2b:	add    rsp,0x8
  406e2f:	pop    rbx
  406e30:	pop    r12
  406e32:	pop    r13
  406e34:	pop    r14
  406e36:	pop    r15
  406e38:	pop    rbp
  406e39:	ret    
  406e3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406e40 <table_set_uint@@Base>:
  406e40:	push   rbp
  406e41:	push   r15
  406e43:	push   r14
  406e45:	push   r13
  406e47:	push   r12
  406e49:	push   rbx
  406e4a:	push   rax
  406e4b:	mov    r15d,ecx
  406e4e:	mov    ebx,edx
  406e50:	mov    r14d,esi
  406e53:	mov    rbp,rdi
  406e56:	call   407910 <table_get_cell_ptr@@Base>
  406e5b:	mov    r13,rax
  406e5e:	mov    rdi,rbp
  406e61:	mov    esi,ebx
  406e63:	call   404d70 <table_get_col_ptr@@Base>
  406e68:	mov    r12d,0xffffffff
  406e6e:	cmp    DWORD PTR [rax+0x8],0x1
  406e72:	jne    406ea8 <table_set_uint@@Base+0x68>
  406e74:	mov    rax,QWORD PTR [r13+0x0]
  406e78:	test   rax,rax
  406e7b:	jne    406e90 <table_set_uint@@Base+0x50>
  406e7d:	mov    edi,0x4
  406e82:	call   404090 <malloc@plt>
  406e87:	mov    QWORD PTR [r13+0x0],rax
  406e8b:	test   rax,rax
  406e8e:	je     406ea8 <table_set_uint@@Base+0x68>
  406e90:	mov    DWORD PTR [rax],r15d
  406e93:	mov    ecx,0x1
  406e98:	mov    rdi,rbp
  406e9b:	mov    esi,r14d
  406e9e:	mov    edx,ebx
  406ea0:	call   404cb0 <table_notify@@Base>
  406ea5:	xor    r12d,r12d
  406ea8:	mov    eax,r12d
  406eab:	add    rsp,0x8
  406eaf:	pop    rbx
  406eb0:	pop    r12
  406eb2:	pop    r13
  406eb4:	pop    r14
  406eb6:	pop    r15
  406eb8:	pop    rbp
  406eb9:	ret    
  406eba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406ec0 <table_set_int8@@Base>:
  406ec0:	push   rbp
  406ec1:	push   r15
  406ec3:	push   r14
  406ec5:	push   r13
  406ec7:	push   r12
  406ec9:	push   rbx
  406eca:	push   rax
  406ecb:	mov    r15d,ecx
  406ece:	mov    ebx,edx
  406ed0:	mov    r14d,esi
  406ed3:	mov    rbp,rdi
  406ed6:	call   407910 <table_get_cell_ptr@@Base>
  406edb:	mov    r13,rax
  406ede:	mov    rdi,rbp
  406ee1:	mov    esi,ebx
  406ee3:	call   404d70 <table_get_col_ptr@@Base>
  406ee8:	mov    r12d,0xffffffff
  406eee:	cmp    DWORD PTR [rax+0x8],0x2
  406ef2:	jne    406f28 <table_set_int8@@Base+0x68>
  406ef4:	mov    rax,QWORD PTR [r13+0x0]
  406ef8:	test   rax,rax
  406efb:	jne    406f10 <table_set_int8@@Base+0x50>
  406efd:	mov    edi,0x1
  406f02:	call   404090 <malloc@plt>
  406f07:	mov    QWORD PTR [r13+0x0],rax
  406f0b:	test   rax,rax
  406f0e:	je     406f28 <table_set_int8@@Base+0x68>
  406f10:	mov    BYTE PTR [rax],r15b
  406f13:	mov    ecx,0x1
  406f18:	mov    rdi,rbp
  406f1b:	mov    esi,r14d
  406f1e:	mov    edx,ebx
  406f20:	call   404cb0 <table_notify@@Base>
  406f25:	xor    r12d,r12d
  406f28:	mov    eax,r12d
  406f2b:	add    rsp,0x8
  406f2f:	pop    rbx
  406f30:	pop    r12
  406f32:	pop    r13
  406f34:	pop    r14
  406f36:	pop    r15
  406f38:	pop    rbp
  406f39:	ret    
  406f3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406f40 <table_set_uint8@@Base>:
  406f40:	push   rbp
  406f41:	push   r15
  406f43:	push   r14
  406f45:	push   r13
  406f47:	push   r12
  406f49:	push   rbx
  406f4a:	push   rax
  406f4b:	mov    r15d,ecx
  406f4e:	mov    ebx,edx
  406f50:	mov    r14d,esi
  406f53:	mov    rbp,rdi
  406f56:	call   407910 <table_get_cell_ptr@@Base>
  406f5b:	mov    r13,rax
  406f5e:	mov    rdi,rbp
  406f61:	mov    esi,ebx
  406f63:	call   404d70 <table_get_col_ptr@@Base>
  406f68:	mov    r12d,0xffffffff
  406f6e:	cmp    DWORD PTR [rax+0x8],0x3
  406f72:	jne    406fa8 <table_set_uint8@@Base+0x68>
  406f74:	mov    rax,QWORD PTR [r13+0x0]
  406f78:	test   rax,rax
  406f7b:	jne    406f90 <table_set_uint8@@Base+0x50>
  406f7d:	mov    edi,0x1
  406f82:	call   404090 <malloc@plt>
  406f87:	mov    QWORD PTR [r13+0x0],rax
  406f8b:	test   rax,rax
  406f8e:	je     406fa8 <table_set_uint8@@Base+0x68>
  406f90:	mov    BYTE PTR [rax],r15b
  406f93:	mov    ecx,0x1
  406f98:	mov    rdi,rbp
  406f9b:	mov    esi,r14d
  406f9e:	mov    edx,ebx
  406fa0:	call   404cb0 <table_notify@@Base>
  406fa5:	xor    r12d,r12d
  406fa8:	mov    eax,r12d
  406fab:	add    rsp,0x8
  406faf:	pop    rbx
  406fb0:	pop    r12
  406fb2:	pop    r13
  406fb4:	pop    r14
  406fb6:	pop    r15
  406fb8:	pop    rbp
  406fb9:	ret    
  406fba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406fc0 <table_set_int16@@Base>:
  406fc0:	push   rbp
  406fc1:	push   r15
  406fc3:	push   r14
  406fc5:	push   r13
  406fc7:	push   r12
  406fc9:	push   rbx
  406fca:	push   rax
  406fcb:	mov    r15d,ecx
  406fce:	mov    ebx,edx
  406fd0:	mov    r14d,esi
  406fd3:	mov    rbp,rdi
  406fd6:	call   407910 <table_get_cell_ptr@@Base>
  406fdb:	mov    r13,rax
  406fde:	mov    rdi,rbp
  406fe1:	mov    esi,ebx
  406fe3:	call   404d70 <table_get_col_ptr@@Base>
  406fe8:	mov    r12d,0xffffffff
  406fee:	cmp    DWORD PTR [rax+0x8],0x4
  406ff2:	jne    407029 <table_set_int16@@Base+0x69>
  406ff4:	mov    rax,QWORD PTR [r13+0x0]
  406ff8:	test   rax,rax
  406ffb:	jne    407010 <table_set_int16@@Base+0x50>
  406ffd:	mov    edi,0x2
  407002:	call   404090 <malloc@plt>
  407007:	mov    QWORD PTR [r13+0x0],rax
  40700b:	test   rax,rax
  40700e:	je     407029 <table_set_int16@@Base+0x69>
  407010:	mov    WORD PTR [rax],r15w
  407014:	mov    ecx,0x1
  407019:	mov    rdi,rbp
  40701c:	mov    esi,r14d
  40701f:	mov    edx,ebx
  407021:	call   404cb0 <table_notify@@Base>
  407026:	xor    r12d,r12d
  407029:	mov    eax,r12d
  40702c:	add    rsp,0x8
  407030:	pop    rbx
  407031:	pop    r12
  407033:	pop    r13
  407035:	pop    r14
  407037:	pop    r15
  407039:	pop    rbp
  40703a:	ret    
  40703b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407040 <table_set_uint16@@Base>:
  407040:	push   rbp
  407041:	push   r15
  407043:	push   r14
  407045:	push   r13
  407047:	push   r12
  407049:	push   rbx
  40704a:	push   rax
  40704b:	mov    r15d,ecx
  40704e:	mov    ebx,edx
  407050:	mov    r14d,esi
  407053:	mov    rbp,rdi
  407056:	call   407910 <table_get_cell_ptr@@Base>
  40705b:	mov    r13,rax
  40705e:	mov    rdi,rbp
  407061:	mov    esi,ebx
  407063:	call   404d70 <table_get_col_ptr@@Base>
  407068:	mov    r12d,0xffffffff
  40706e:	cmp    DWORD PTR [rax+0x8],0x5
  407072:	jne    4070a9 <table_set_uint16@@Base+0x69>
  407074:	mov    rax,QWORD PTR [r13+0x0]
  407078:	test   rax,rax
  40707b:	jne    407090 <table_set_uint16@@Base+0x50>
  40707d:	mov    edi,0x2
  407082:	call   404090 <malloc@plt>
  407087:	mov    QWORD PTR [r13+0x0],rax
  40708b:	test   rax,rax
  40708e:	je     4070a9 <table_set_uint16@@Base+0x69>
  407090:	mov    WORD PTR [rax],r15w
  407094:	mov    ecx,0x1
  407099:	mov    rdi,rbp
  40709c:	mov    esi,r14d
  40709f:	mov    edx,ebx
  4070a1:	call   404cb0 <table_notify@@Base>
  4070a6:	xor    r12d,r12d
  4070a9:	mov    eax,r12d
  4070ac:	add    rsp,0x8
  4070b0:	pop    rbx
  4070b1:	pop    r12
  4070b3:	pop    r13
  4070b5:	pop    r14
  4070b7:	pop    r15
  4070b9:	pop    rbp
  4070ba:	ret    
  4070bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004070c0 <table_set_int32@@Base>:
  4070c0:	push   rbp
  4070c1:	push   r15
  4070c3:	push   r14
  4070c5:	push   r13
  4070c7:	push   r12
  4070c9:	push   rbx
  4070ca:	push   rax
  4070cb:	mov    r15d,ecx
  4070ce:	mov    ebx,edx
  4070d0:	mov    r14d,esi
  4070d3:	mov    rbp,rdi
  4070d6:	call   407910 <table_get_cell_ptr@@Base>
  4070db:	mov    r13,rax
  4070de:	mov    rdi,rbp
  4070e1:	mov    esi,ebx
  4070e3:	call   404d70 <table_get_col_ptr@@Base>
  4070e8:	mov    r12d,0xffffffff
  4070ee:	cmp    DWORD PTR [rax+0x8],0x6
  4070f2:	jne    407128 <table_set_int32@@Base+0x68>
  4070f4:	mov    rax,QWORD PTR [r13+0x0]
  4070f8:	test   rax,rax
  4070fb:	jne    407110 <table_set_int32@@Base+0x50>
  4070fd:	mov    edi,0x4
  407102:	call   404090 <malloc@plt>
  407107:	mov    QWORD PTR [r13+0x0],rax
  40710b:	test   rax,rax
  40710e:	je     407128 <table_set_int32@@Base+0x68>
  407110:	mov    DWORD PTR [rax],r15d
  407113:	mov    ecx,0x1
  407118:	mov    rdi,rbp
  40711b:	mov    esi,r14d
  40711e:	mov    edx,ebx
  407120:	call   404cb0 <table_notify@@Base>
  407125:	xor    r12d,r12d
  407128:	mov    eax,r12d
  40712b:	add    rsp,0x8
  40712f:	pop    rbx
  407130:	pop    r12
  407132:	pop    r13
  407134:	pop    r14
  407136:	pop    r15
  407138:	pop    rbp
  407139:	ret    
  40713a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407140 <table_set_uint32@@Base>:
  407140:	push   rbp
  407141:	push   r15
  407143:	push   r14
  407145:	push   r13
  407147:	push   r12
  407149:	push   rbx
  40714a:	push   rax
  40714b:	mov    r15d,ecx
  40714e:	mov    ebx,edx
  407150:	mov    r14d,esi
  407153:	mov    rbp,rdi
  407156:	call   407910 <table_get_cell_ptr@@Base>
  40715b:	mov    r13,rax
  40715e:	mov    rdi,rbp
  407161:	mov    esi,ebx
  407163:	call   404d70 <table_get_col_ptr@@Base>
  407168:	mov    r12d,0xffffffff
  40716e:	cmp    DWORD PTR [rax+0x8],0x7
  407172:	jne    4071a8 <table_set_uint32@@Base+0x68>
  407174:	mov    rax,QWORD PTR [r13+0x0]
  407178:	test   rax,rax
  40717b:	jne    407190 <table_set_uint32@@Base+0x50>
  40717d:	mov    edi,0x4
  407182:	call   404090 <malloc@plt>
  407187:	mov    QWORD PTR [r13+0x0],rax
  40718b:	test   rax,rax
  40718e:	je     4071a8 <table_set_uint32@@Base+0x68>
  407190:	mov    DWORD PTR [rax],r15d
  407193:	mov    ecx,0x1
  407198:	mov    rdi,rbp
  40719b:	mov    esi,r14d
  40719e:	mov    edx,ebx
  4071a0:	call   404cb0 <table_notify@@Base>
  4071a5:	xor    r12d,r12d
  4071a8:	mov    eax,r12d
  4071ab:	add    rsp,0x8
  4071af:	pop    rbx
  4071b0:	pop    r12
  4071b2:	pop    r13
  4071b4:	pop    r14
  4071b6:	pop    r15
  4071b8:	pop    rbp
  4071b9:	ret    
  4071ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004071c0 <table_set_int64@@Base>:
  4071c0:	push   rbp
  4071c1:	push   r15
  4071c3:	push   r14
  4071c5:	push   r13
  4071c7:	push   r12
  4071c9:	push   rbx
  4071ca:	push   rax
  4071cb:	mov    r15,rcx
  4071ce:	mov    ebx,edx
  4071d0:	mov    r14d,esi
  4071d3:	mov    rbp,rdi
  4071d6:	call   407910 <table_get_cell_ptr@@Base>
  4071db:	mov    r13,rax
  4071de:	mov    rdi,rbp
  4071e1:	mov    esi,ebx
  4071e3:	call   404d70 <table_get_col_ptr@@Base>
  4071e8:	mov    r12d,0xffffffff
  4071ee:	cmp    DWORD PTR [rax+0x8],0x8
  4071f2:	jne    407228 <table_set_int64@@Base+0x68>
  4071f4:	mov    rax,QWORD PTR [r13+0x0]
  4071f8:	test   rax,rax
  4071fb:	jne    407210 <table_set_int64@@Base+0x50>
  4071fd:	mov    edi,0x8
  407202:	call   404090 <malloc@plt>
  407207:	mov    QWORD PTR [r13+0x0],rax
  40720b:	test   rax,rax
  40720e:	je     407228 <table_set_int64@@Base+0x68>
  407210:	mov    QWORD PTR [rax],r15
  407213:	mov    ecx,0x1
  407218:	mov    rdi,rbp
  40721b:	mov    esi,r14d
  40721e:	mov    edx,ebx
  407220:	call   404cb0 <table_notify@@Base>
  407225:	xor    r12d,r12d
  407228:	mov    eax,r12d
  40722b:	add    rsp,0x8
  40722f:	pop    rbx
  407230:	pop    r12
  407232:	pop    r13
  407234:	pop    r14
  407236:	pop    r15
  407238:	pop    rbp
  407239:	ret    
  40723a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407240 <table_set_uint64@@Base>:
  407240:	push   rbp
  407241:	push   r15
  407243:	push   r14
  407245:	push   r13
  407247:	push   r12
  407249:	push   rbx
  40724a:	push   rax
  40724b:	mov    r15,rcx
  40724e:	mov    ebx,edx
  407250:	mov    r14d,esi
  407253:	mov    rbp,rdi
  407256:	call   407910 <table_get_cell_ptr@@Base>
  40725b:	mov    r13,rax
  40725e:	mov    rdi,rbp
  407261:	mov    esi,ebx
  407263:	call   404d70 <table_get_col_ptr@@Base>
  407268:	mov    r12d,0xffffffff
  40726e:	cmp    DWORD PTR [rax+0x8],0x9
  407272:	jne    4072a8 <table_set_uint64@@Base+0x68>
  407274:	mov    rax,QWORD PTR [r13+0x0]
  407278:	test   rax,rax
  40727b:	jne    407290 <table_set_uint64@@Base+0x50>
  40727d:	mov    edi,0x8
  407282:	call   404090 <malloc@plt>
  407287:	mov    QWORD PTR [r13+0x0],rax
  40728b:	test   rax,rax
  40728e:	je     4072a8 <table_set_uint64@@Base+0x68>
  407290:	mov    QWORD PTR [rax],r15
  407293:	mov    ecx,0x1
  407298:	mov    rdi,rbp
  40729b:	mov    esi,r14d
  40729e:	mov    edx,ebx
  4072a0:	call   404cb0 <table_notify@@Base>
  4072a5:	xor    r12d,r12d
  4072a8:	mov    eax,r12d
  4072ab:	add    rsp,0x8
  4072af:	pop    rbx
  4072b0:	pop    r12
  4072b2:	pop    r13
  4072b4:	pop    r14
  4072b6:	pop    r15
  4072b8:	pop    rbp
  4072b9:	ret    
  4072ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004072c0 <table_set_short@@Base>:
  4072c0:	push   rbp
  4072c1:	push   r15
  4072c3:	push   r14
  4072c5:	push   r13
  4072c7:	push   r12
  4072c9:	push   rbx
  4072ca:	push   rax
  4072cb:	mov    r15d,ecx
  4072ce:	mov    ebx,edx
  4072d0:	mov    r14d,esi
  4072d3:	mov    rbp,rdi
  4072d6:	call   407910 <table_get_cell_ptr@@Base>
  4072db:	mov    r13,rax
  4072de:	mov    rdi,rbp
  4072e1:	mov    esi,ebx
  4072e3:	call   404d70 <table_get_col_ptr@@Base>
  4072e8:	mov    r12d,0xffffffff
  4072ee:	cmp    DWORD PTR [rax+0x8],0xa
  4072f2:	jne    407329 <table_set_short@@Base+0x69>
  4072f4:	mov    rax,QWORD PTR [r13+0x0]
  4072f8:	test   rax,rax
  4072fb:	jne    407310 <table_set_short@@Base+0x50>
  4072fd:	mov    edi,0x2
  407302:	call   404090 <malloc@plt>
  407307:	mov    QWORD PTR [r13+0x0],rax
  40730b:	test   rax,rax
  40730e:	je     407329 <table_set_short@@Base+0x69>
  407310:	mov    WORD PTR [rax],r15w
  407314:	mov    ecx,0x1
  407319:	mov    rdi,rbp
  40731c:	mov    esi,r14d
  40731f:	mov    edx,ebx
  407321:	call   404cb0 <table_notify@@Base>
  407326:	xor    r12d,r12d
  407329:	mov    eax,r12d
  40732c:	add    rsp,0x8
  407330:	pop    rbx
  407331:	pop    r12
  407333:	pop    r13
  407335:	pop    r14
  407337:	pop    r15
  407339:	pop    rbp
  40733a:	ret    
  40733b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407340 <table_set_ushort@@Base>:
  407340:	push   rbp
  407341:	push   r15
  407343:	push   r14
  407345:	push   r13
  407347:	push   r12
  407349:	push   rbx
  40734a:	push   rax
  40734b:	mov    r15d,ecx
  40734e:	mov    ebx,edx
  407350:	mov    r14d,esi
  407353:	mov    rbp,rdi
  407356:	call   407910 <table_get_cell_ptr@@Base>
  40735b:	mov    r13,rax
  40735e:	mov    rdi,rbp
  407361:	mov    esi,ebx
  407363:	call   404d70 <table_get_col_ptr@@Base>
  407368:	mov    r12d,0xffffffff
  40736e:	cmp    DWORD PTR [rax+0x8],0xb
  407372:	jne    4073a9 <table_set_ushort@@Base+0x69>
  407374:	mov    rax,QWORD PTR [r13+0x0]
  407378:	test   rax,rax
  40737b:	jne    407390 <table_set_ushort@@Base+0x50>
  40737d:	mov    edi,0x2
  407382:	call   404090 <malloc@plt>
  407387:	mov    QWORD PTR [r13+0x0],rax
  40738b:	test   rax,rax
  40738e:	je     4073a9 <table_set_ushort@@Base+0x69>
  407390:	mov    WORD PTR [rax],r15w
  407394:	mov    ecx,0x1
  407399:	mov    rdi,rbp
  40739c:	mov    esi,r14d
  40739f:	mov    edx,ebx
  4073a1:	call   404cb0 <table_notify@@Base>
  4073a6:	xor    r12d,r12d
  4073a9:	mov    eax,r12d
  4073ac:	add    rsp,0x8
  4073b0:	pop    rbx
  4073b1:	pop    r12
  4073b3:	pop    r13
  4073b5:	pop    r14
  4073b7:	pop    r15
  4073b9:	pop    rbp
  4073ba:	ret    
  4073bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004073c0 <table_set_long@@Base>:
  4073c0:	push   rbp
  4073c1:	push   r15
  4073c3:	push   r14
  4073c5:	push   r13
  4073c7:	push   r12
  4073c9:	push   rbx
  4073ca:	push   rax
  4073cb:	mov    r15,rcx
  4073ce:	mov    ebx,edx
  4073d0:	mov    r14d,esi
  4073d3:	mov    rbp,rdi
  4073d6:	call   407910 <table_get_cell_ptr@@Base>
  4073db:	mov    r13,rax
  4073de:	mov    rdi,rbp
  4073e1:	mov    esi,ebx
  4073e3:	call   404d70 <table_get_col_ptr@@Base>
  4073e8:	mov    r12d,0xffffffff
  4073ee:	cmp    DWORD PTR [rax+0x8],0xc
  4073f2:	jne    407428 <table_set_long@@Base+0x68>
  4073f4:	mov    rax,QWORD PTR [r13+0x0]
  4073f8:	test   rax,rax
  4073fb:	jne    407410 <table_set_long@@Base+0x50>
  4073fd:	mov    edi,0x8
  407402:	call   404090 <malloc@plt>
  407407:	mov    QWORD PTR [r13+0x0],rax
  40740b:	test   rax,rax
  40740e:	je     407428 <table_set_long@@Base+0x68>
  407410:	mov    QWORD PTR [rax],r15
  407413:	mov    ecx,0x1
  407418:	mov    rdi,rbp
  40741b:	mov    esi,r14d
  40741e:	mov    edx,ebx
  407420:	call   404cb0 <table_notify@@Base>
  407425:	xor    r12d,r12d
  407428:	mov    eax,r12d
  40742b:	add    rsp,0x8
  40742f:	pop    rbx
  407430:	pop    r12
  407432:	pop    r13
  407434:	pop    r14
  407436:	pop    r15
  407438:	pop    rbp
  407439:	ret    
  40743a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407440 <table_set_ulong@@Base>:
  407440:	push   rbp
  407441:	push   r15
  407443:	push   r14
  407445:	push   r13
  407447:	push   r12
  407449:	push   rbx
  40744a:	push   rax
  40744b:	mov    r15,rcx
  40744e:	mov    ebx,edx
  407450:	mov    r14d,esi
  407453:	mov    rbp,rdi
  407456:	call   407910 <table_get_cell_ptr@@Base>
  40745b:	mov    r13,rax
  40745e:	mov    rdi,rbp
  407461:	mov    esi,ebx
  407463:	call   404d70 <table_get_col_ptr@@Base>
  407468:	mov    r12d,0xffffffff
  40746e:	cmp    DWORD PTR [rax+0x8],0xd
  407472:	jne    4074a8 <table_set_ulong@@Base+0x68>
  407474:	mov    rax,QWORD PTR [r13+0x0]
  407478:	test   rax,rax
  40747b:	jne    407490 <table_set_ulong@@Base+0x50>
  40747d:	mov    edi,0x8
  407482:	call   404090 <malloc@plt>
  407487:	mov    QWORD PTR [r13+0x0],rax
  40748b:	test   rax,rax
  40748e:	je     4074a8 <table_set_ulong@@Base+0x68>
  407490:	mov    QWORD PTR [rax],r15
  407493:	mov    ecx,0x1
  407498:	mov    rdi,rbp
  40749b:	mov    esi,r14d
  40749e:	mov    edx,ebx
  4074a0:	call   404cb0 <table_notify@@Base>
  4074a5:	xor    r12d,r12d
  4074a8:	mov    eax,r12d
  4074ab:	add    rsp,0x8
  4074af:	pop    rbx
  4074b0:	pop    r12
  4074b2:	pop    r13
  4074b4:	pop    r14
  4074b6:	pop    r15
  4074b8:	pop    rbp
  4074b9:	ret    
  4074ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004074c0 <table_set_llong@@Base>:
  4074c0:	push   rbp
  4074c1:	push   r15
  4074c3:	push   r14
  4074c5:	push   r13
  4074c7:	push   r12
  4074c9:	push   rbx
  4074ca:	push   rax
  4074cb:	mov    r15,rcx
  4074ce:	mov    ebx,edx
  4074d0:	mov    r14d,esi
  4074d3:	mov    rbp,rdi
  4074d6:	call   407910 <table_get_cell_ptr@@Base>
  4074db:	mov    r13,rax
  4074de:	mov    rdi,rbp
  4074e1:	mov    esi,ebx
  4074e3:	call   404d70 <table_get_col_ptr@@Base>
  4074e8:	mov    r12d,0xffffffff
  4074ee:	cmp    DWORD PTR [rax+0x8],0xe
  4074f2:	jne    407528 <table_set_llong@@Base+0x68>
  4074f4:	mov    rax,QWORD PTR [r13+0x0]
  4074f8:	test   rax,rax
  4074fb:	jne    407510 <table_set_llong@@Base+0x50>
  4074fd:	mov    edi,0x8
  407502:	call   404090 <malloc@plt>
  407507:	mov    QWORD PTR [r13+0x0],rax
  40750b:	test   rax,rax
  40750e:	je     407528 <table_set_llong@@Base+0x68>
  407510:	mov    QWORD PTR [rax],r15
  407513:	mov    ecx,0x1
  407518:	mov    rdi,rbp
  40751b:	mov    esi,r14d
  40751e:	mov    edx,ebx
  407520:	call   404cb0 <table_notify@@Base>
  407525:	xor    r12d,r12d
  407528:	mov    eax,r12d
  40752b:	add    rsp,0x8
  40752f:	pop    rbx
  407530:	pop    r12
  407532:	pop    r13
  407534:	pop    r14
  407536:	pop    r15
  407538:	pop    rbp
  407539:	ret    
  40753a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407540 <table_set_ullong@@Base>:
  407540:	push   rbp
  407541:	push   r15
  407543:	push   r14
  407545:	push   r13
  407547:	push   r12
  407549:	push   rbx
  40754a:	push   rax
  40754b:	mov    r15,rcx
  40754e:	mov    ebx,edx
  407550:	mov    r14d,esi
  407553:	mov    rbp,rdi
  407556:	call   407910 <table_get_cell_ptr@@Base>
  40755b:	mov    r13,rax
  40755e:	mov    rdi,rbp
  407561:	mov    esi,ebx
  407563:	call   404d70 <table_get_col_ptr@@Base>
  407568:	mov    r12d,0xffffffff
  40756e:	cmp    DWORD PTR [rax+0x8],0xf
  407572:	jne    4075a8 <table_set_ullong@@Base+0x68>
  407574:	mov    rax,QWORD PTR [r13+0x0]
  407578:	test   rax,rax
  40757b:	jne    407590 <table_set_ullong@@Base+0x50>
  40757d:	mov    edi,0x8
  407582:	call   404090 <malloc@plt>
  407587:	mov    QWORD PTR [r13+0x0],rax
  40758b:	test   rax,rax
  40758e:	je     4075a8 <table_set_ullong@@Base+0x68>
  407590:	mov    QWORD PTR [rax],r15
  407593:	mov    ecx,0x1
  407598:	mov    rdi,rbp
  40759b:	mov    esi,r14d
  40759e:	mov    edx,ebx
  4075a0:	call   404cb0 <table_notify@@Base>
  4075a5:	xor    r12d,r12d
  4075a8:	mov    eax,r12d
  4075ab:	add    rsp,0x8
  4075af:	pop    rbx
  4075b0:	pop    r12
  4075b2:	pop    r13
  4075b4:	pop    r14
  4075b6:	pop    r15
  4075b8:	pop    rbp
  4075b9:	ret    
  4075ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004075c0 <table_set_float@@Base>:
  4075c0:	push   rbp
  4075c1:	push   r15
  4075c3:	push   r14
  4075c5:	push   r12
  4075c7:	push   rbx
  4075c8:	sub    rsp,0x10
  4075cc:	vmovss DWORD PTR [rsp+0xc],xmm0
  4075d2:	mov    ebx,edx
  4075d4:	mov    r14d,esi
  4075d7:	mov    rbp,rdi
  4075da:	call   407910 <table_get_cell_ptr@@Base>
  4075df:	mov    r12,rax
  4075e2:	mov    rdi,rbp
  4075e5:	mov    esi,ebx
  4075e7:	call   404d70 <table_get_col_ptr@@Base>
  4075ec:	mov    r15d,0xffffffff
  4075f2:	cmp    DWORD PTR [rax+0x8],0x10
  4075f6:	jne    407633 <table_set_float@@Base+0x73>
  4075f8:	mov    rax,QWORD PTR [r12]
  4075fc:	test   rax,rax
  4075ff:	jne    407614 <table_set_float@@Base+0x54>
  407601:	mov    edi,0x4
  407606:	call   404090 <malloc@plt>
  40760b:	mov    QWORD PTR [r12],rax
  40760f:	test   rax,rax
  407612:	je     407633 <table_set_float@@Base+0x73>
  407614:	vmovss xmm0,DWORD PTR [rsp+0xc]
  40761a:	vmovss DWORD PTR [rax],xmm0
  40761e:	mov    ecx,0x1
  407623:	mov    rdi,rbp
  407626:	mov    esi,r14d
  407629:	mov    edx,ebx
  40762b:	call   404cb0 <table_notify@@Base>
  407630:	xor    r15d,r15d
  407633:	mov    eax,r15d
  407636:	add    rsp,0x10
  40763a:	pop    rbx
  40763b:	pop    r12
  40763d:	pop    r14
  40763f:	pop    r15
  407641:	pop    rbp
  407642:	ret    
  407643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40764d:	nop    DWORD PTR [rax]

0000000000407650 <table_set_double@@Base>:
  407650:	push   rbp
  407651:	push   r15
  407653:	push   r14
  407655:	push   r12
  407657:	push   rbx
  407658:	sub    rsp,0x10
  40765c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  407662:	mov    ebx,edx
  407664:	mov    r14d,esi
  407667:	mov    rbp,rdi
  40766a:	call   407910 <table_get_cell_ptr@@Base>
  40766f:	mov    r12,rax
  407672:	mov    rdi,rbp
  407675:	mov    esi,ebx
  407677:	call   404d70 <table_get_col_ptr@@Base>
  40767c:	mov    r15d,0xffffffff
  407682:	cmp    DWORD PTR [rax+0x8],0x11
  407686:	jne    4076c3 <table_set_double@@Base+0x73>
  407688:	mov    rax,QWORD PTR [r12]
  40768c:	test   rax,rax
  40768f:	jne    4076a4 <table_set_double@@Base+0x54>
  407691:	mov    edi,0x8
  407696:	call   404090 <malloc@plt>
  40769b:	mov    QWORD PTR [r12],rax
  40769f:	test   rax,rax
  4076a2:	je     4076c3 <table_set_double@@Base+0x73>
  4076a4:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4076aa:	vmovsd QWORD PTR [rax],xmm0
  4076ae:	mov    ecx,0x1
  4076b3:	mov    rdi,rbp
  4076b6:	mov    esi,r14d
  4076b9:	mov    edx,ebx
  4076bb:	call   404cb0 <table_notify@@Base>
  4076c0:	xor    r15d,r15d
  4076c3:	mov    eax,r15d
  4076c6:	add    rsp,0x10
  4076ca:	pop    rbx
  4076cb:	pop    r12
  4076cd:	pop    r14
  4076cf:	pop    r15
  4076d1:	pop    rbp
  4076d2:	ret    
  4076d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076dd:	nop    DWORD PTR [rax]

00000000004076e0 <table_set_ldouble@@Base>:
  4076e0:	push   rbp
  4076e1:	push   r15
  4076e3:	push   r14
  4076e5:	push   r12
  4076e7:	push   rbx
  4076e8:	sub    rsp,0x20
  4076ec:	mov    r15d,edx
  4076ef:	mov    r14d,esi
  4076f2:	mov    rbp,rdi
  4076f5:	fld    TBYTE PTR [rsp+0x50]
  4076f9:	fstp   TBYTE PTR [rsp+0x14]
  4076fd:	call   407910 <table_get_cell_ptr@@Base>
  407702:	mov    r12,rax
  407705:	mov    rdi,rbp
  407708:	mov    esi,r15d
  40770b:	call   404d70 <table_get_col_ptr@@Base>
  407710:	mov    ebx,0xffffffff
  407715:	cmp    DWORD PTR [rax+0x8],0x12
  407719:	jne    407762 <table_set_ldouble@@Base+0x82>
  40771b:	mov    rax,QWORD PTR [r12]
  40771f:	test   rax,rax
  407722:	jne    407737 <table_set_ldouble@@Base+0x57>
  407724:	mov    edi,0x10
  407729:	call   404090 <malloc@plt>
  40772e:	mov    QWORD PTR [r12],rax
  407732:	test   rax,rax
  407735:	je     407762 <table_set_ldouble@@Base+0x82>
  407737:	fld    TBYTE PTR [rsp+0x14]
  40773b:	fstp   TBYTE PTR [rax]
  40773d:	movzx  ecx,WORD PTR [rsp+0x12]
  407742:	mov    WORD PTR [rax+0xe],cx
  407746:	mov    ecx,DWORD PTR [rsp+0xe]
  40774a:	mov    DWORD PTR [rax+0xa],ecx
  40774d:	mov    ecx,0x1
  407752:	mov    rdi,rbp
  407755:	mov    esi,r14d
  407758:	mov    edx,r15d
  40775b:	call   404cb0 <table_notify@@Base>
  407760:	xor    ebx,ebx
  407762:	mov    eax,ebx
  407764:	add    rsp,0x20
  407768:	pop    rbx
  407769:	pop    r12
  40776b:	pop    r14
  40776d:	pop    r15
  40776f:	pop    rbp
  407770:	ret    
  407771:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40777b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407780 <table_set_string@@Base>:
  407780:	mov    r8d,0x15
  407786:	jmp    406aa0 <table_set@@Base>
  40778b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407790 <table_set_char@@Base>:
  407790:	push   rbp
  407791:	push   r15
  407793:	push   r14
  407795:	push   r13
  407797:	push   r12
  407799:	push   rbx
  40779a:	push   rax
  40779b:	mov    r15d,ecx
  40779e:	mov    ebx,edx
  4077a0:	mov    r14d,esi
  4077a3:	mov    rbp,rdi
  4077a6:	call   407910 <table_get_cell_ptr@@Base>
  4077ab:	mov    r13,rax
  4077ae:	mov    rdi,rbp
  4077b1:	mov    esi,ebx
  4077b3:	call   404d70 <table_get_col_ptr@@Base>
  4077b8:	mov    r12d,0xffffffff
  4077be:	cmp    DWORD PTR [rax+0x8],0x13
  4077c2:	jne    4077f8 <table_set_char@@Base+0x68>
  4077c4:	mov    rax,QWORD PTR [r13+0x0]
  4077c8:	test   rax,rax
  4077cb:	jne    4077e0 <table_set_char@@Base+0x50>
  4077cd:	mov    edi,0x1
  4077d2:	call   404090 <malloc@plt>
  4077d7:	mov    QWORD PTR [r13+0x0],rax
  4077db:	test   rax,rax
  4077de:	je     4077f8 <table_set_char@@Base+0x68>
  4077e0:	mov    BYTE PTR [rax],r15b
  4077e3:	mov    ecx,0x1
  4077e8:	mov    rdi,rbp
  4077eb:	mov    esi,r14d
  4077ee:	mov    edx,ebx
  4077f0:	call   404cb0 <table_notify@@Base>
  4077f5:	xor    r12d,r12d
  4077f8:	mov    eax,r12d
  4077fb:	add    rsp,0x8
  4077ff:	pop    rbx
  407800:	pop    r12
  407802:	pop    r13
  407804:	pop    r14
  407806:	pop    r15
  407808:	pop    rbp
  407809:	ret    
  40780a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407810 <table_set_uchar@@Base>:
  407810:	push   rbp
  407811:	push   r15
  407813:	push   r14
  407815:	push   r13
  407817:	push   r12
  407819:	push   rbx
  40781a:	push   rax
  40781b:	mov    r15d,ecx
  40781e:	mov    ebx,edx
  407820:	mov    r14d,esi
  407823:	mov    rbp,rdi
  407826:	call   407910 <table_get_cell_ptr@@Base>
  40782b:	mov    r13,rax
  40782e:	mov    rdi,rbp
  407831:	mov    esi,ebx
  407833:	call   404d70 <table_get_col_ptr@@Base>
  407838:	mov    r12d,0xffffffff
  40783e:	cmp    DWORD PTR [rax+0x8],0x14
  407842:	jne    407878 <table_set_uchar@@Base+0x68>
  407844:	mov    rax,QWORD PTR [r13+0x0]
  407848:	test   rax,rax
  40784b:	jne    407860 <table_set_uchar@@Base+0x50>
  40784d:	mov    edi,0x1
  407852:	call   404090 <malloc@plt>
  407857:	mov    QWORD PTR [r13+0x0],rax
  40785b:	test   rax,rax
  40785e:	je     407878 <table_set_uchar@@Base+0x68>
  407860:	mov    BYTE PTR [rax],r15b
  407863:	mov    ecx,0x1
  407868:	mov    rdi,rbp
  40786b:	mov    esi,r14d
  40786e:	mov    edx,ebx
  407870:	call   404cb0 <table_notify@@Base>
  407875:	xor    r12d,r12d
  407878:	mov    eax,r12d
  40787b:	add    rsp,0x8
  40787f:	pop    rbx
  407880:	pop    r12
  407882:	pop    r13
  407884:	pop    r14
  407886:	pop    r15
  407888:	pop    rbp
  407889:	ret    
  40788a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407890 <table_set_ptr@@Base>:
  407890:	push   rbp
  407891:	push   r15
  407893:	push   r14
  407895:	push   r12
  407897:	push   rbx
  407898:	mov    r15,rcx
  40789b:	mov    ebx,edx
  40789d:	mov    r14d,esi
  4078a0:	mov    rbp,rdi
  4078a3:	call   407910 <table_get_cell_ptr@@Base>
  4078a8:	mov    r12,rax
  4078ab:	mov    rdi,rbp
  4078ae:	mov    esi,ebx
  4078b0:	call   404d70 <table_get_col_ptr@@Base>
  4078b5:	mov    rcx,rax
  4078b8:	mov    eax,0xffffffff
  4078bd:	cmp    DWORD PTR [rcx+0x8],0x17
  4078c1:	jne    4078db <table_set_ptr@@Base+0x4b>
  4078c3:	mov    QWORD PTR [r12],r15
  4078c7:	mov    ecx,0x1
  4078cc:	mov    rdi,rbp
  4078cf:	mov    esi,r14d
  4078d2:	mov    edx,ebx
  4078d4:	call   404cb0 <table_notify@@Base>
  4078d9:	xor    eax,eax
  4078db:	pop    rbx
  4078dc:	pop    r12
  4078de:	pop    r14
  4078e0:	pop    r15
  4078e2:	pop    rbp
  4078e3:	ret    
  4078e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078ee:	xchg   ax,ax

00000000004078f0 <table_cell_init@@Base>:
  4078f0:	push   rbx
  4078f1:	mov    ebx,edx
  4078f3:	call   406780 <table_get_row_ptr@@Base>
  4078f8:	mov    rax,QWORD PTR [rax]
  4078fb:	movsxd rcx,ebx
  4078fe:	mov    QWORD PTR [rax+rcx*8],0x0
  407906:	pop    rbx
  407907:	ret    
  407908:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407910 <table_get_cell_ptr@@Base>:
  407910:	push   rbx
  407911:	mov    ebx,edx
  407913:	call   406780 <table_get_row_ptr@@Base>
  407918:	movsxd rcx,ebx
  40791b:	shl    rcx,0x3
  40791f:	add    rcx,QWORD PTR [rax]
  407922:	mov    rax,rcx
  407925:	pop    rbx
  407926:	ret    
  407927:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407930 <table_cell_destroy@@Base>:
  407930:	push   rbp
  407931:	push   r14
  407933:	push   rbx
  407934:	mov    ebx,edx
  407936:	mov    r14d,esi
  407939:	mov    rbp,rdi
  40793c:	mov    esi,edx
  40793e:	call   404e20 <table_get_column_data_type@@Base>
  407943:	cmp    eax,0x17
  407946:	je     40796b <table_cell_destroy@@Base+0x3b>
  407948:	mov    rdi,rbp
  40794b:	mov    esi,r14d
  40794e:	call   406780 <table_get_row_ptr@@Base>
  407953:	mov    rax,QWORD PTR [rax]
  407956:	movsxd rcx,ebx
  407959:	mov    rdi,QWORD PTR [rax+rcx*8]
  40795d:	test   rdi,rdi
  407960:	je     40796b <table_cell_destroy@@Base+0x3b>
  407962:	pop    rbx
  407963:	pop    r14
  407965:	pop    rbp
  407966:	jmp    404030 <free@plt>
  40796b:	pop    rbx
  40796c:	pop    r14
  40796e:	pop    rbp
  40796f:	ret    

0000000000407970 <table_cell_to_buffer@@Base>:
  407970:	push   rbp
  407971:	push   r15
  407973:	push   r14
  407975:	push   r12
  407977:	push   rbx
  407978:	sub    rsp,0x10
  40797c:	mov    r14,r8
  40797f:	mov    r15,rcx
  407982:	mov    ebp,edx
  407984:	mov    r12d,esi
  407987:	mov    rbx,rdi
  40798a:	mov    esi,edx
  40798c:	call   404e20 <table_get_column_data_type@@Base>
  407991:	cmp    eax,0x17
  407994:	ja     407c25 <table_cell_to_buffer@@Base+0x2b5>
  40799a:	mov    eax,eax
  40799c:	lea    rcx,[rip+0x1819]        # 4091bc <_IO_stdin_used@@Base+0x1bc>
  4079a3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4079a7:	add    rax,rcx
  4079aa:	jmp    rax
  4079ac:	mov    rdi,rbx
  4079af:	mov    esi,r12d
  4079b2:	mov    edx,ebp
  4079b4:	call   4065e0 <table_get_int@@Base>
  4079b9:	jmp    407a3f <table_cell_to_buffer@@Base+0xcf>
  4079be:	mov    rdi,rbx
  4079c1:	mov    esi,r12d
  4079c4:	mov    edx,ebp
  4079c6:	call   4065f0 <table_get_uint@@Base>
  4079cb:	jmp    407a53 <table_cell_to_buffer@@Base+0xe3>
  4079d0:	mov    rdi,rbx
  4079d3:	mov    esi,r12d
  4079d6:	mov    edx,ebp
  4079d8:	call   406600 <table_get_int8@@Base>
  4079dd:	movsx  ecx,al
  4079e0:	jmp    407beb <table_cell_to_buffer@@Base+0x27b>
  4079e5:	mov    rdi,rbx
  4079e8:	mov    esi,r12d
  4079eb:	mov    edx,ebp
  4079ed:	call   406610 <table_get_uint8@@Base>
  4079f2:	movzx  ecx,al
  4079f5:	lea    rdx,[rip+0x1880]        # 40927c <_IO_stdin_used@@Base+0x27c>
  4079fc:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407a01:	mov    rdi,rbx
  407a04:	mov    esi,r12d
  407a07:	mov    edx,ebp
  407a09:	call   406620 <table_get_int16@@Base>
  407a0e:	movsx  ecx,ax
  407a11:	jmp    407beb <table_cell_to_buffer@@Base+0x27b>
  407a16:	mov    rdi,rbx
  407a19:	mov    esi,r12d
  407a1c:	mov    edx,ebp
  407a1e:	call   406630 <table_get_uint16@@Base>
  407a23:	movzx  ecx,ax
  407a26:	lea    rdx,[rip+0x184f]        # 40927c <_IO_stdin_used@@Base+0x27c>
  407a2d:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407a32:	mov    rdi,rbx
  407a35:	mov    esi,r12d
  407a38:	mov    edx,ebp
  407a3a:	call   406640 <table_get_int32@@Base>
  407a3f:	mov    ecx,eax
  407a41:	jmp    407beb <table_cell_to_buffer@@Base+0x27b>
  407a46:	mov    rdi,rbx
  407a49:	mov    esi,r12d
  407a4c:	mov    edx,ebp
  407a4e:	call   406650 <table_get_uint32@@Base>
  407a53:	mov    ecx,eax
  407a55:	lea    rdx,[rip+0x1820]        # 40927c <_IO_stdin_used@@Base+0x27c>
  407a5c:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407a61:	mov    rdi,rbx
  407a64:	mov    esi,r12d
  407a67:	mov    edx,ebp
  407a69:	call   406660 <table_get_int64@@Base>
  407a6e:	jmp    407ac4 <table_cell_to_buffer@@Base+0x154>
  407a70:	mov    rdi,rbx
  407a73:	mov    esi,r12d
  407a76:	mov    edx,ebp
  407a78:	call   406670 <table_get_uint64@@Base>
  407a7d:	jmp    407ae0 <table_cell_to_buffer@@Base+0x170>
  407a7f:	mov    rdi,rbx
  407a82:	mov    esi,r12d
  407a85:	mov    edx,ebp
  407a87:	call   406680 <table_get_short@@Base>
  407a8c:	movsx  ecx,ax
  407a8f:	lea    rdx,[rip+0x17f1]        # 409287 <_IO_stdin_used@@Base+0x287>
  407a96:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407a9b:	mov    rdi,rbx
  407a9e:	mov    esi,r12d
  407aa1:	mov    edx,ebp
  407aa3:	call   406690 <table_get_ushort@@Base>
  407aa8:	movzx  ecx,ax
  407aab:	lea    rdx,[rip+0x17d9]        # 40928b <_IO_stdin_used@@Base+0x28b>
  407ab2:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407ab7:	mov    rdi,rbx
  407aba:	mov    esi,r12d
  407abd:	mov    edx,ebp
  407abf:	call   4066a0 <table_get_long@@Base>
  407ac4:	mov    rcx,rax
  407ac7:	lea    rdx,[rip+0x17b1]        # 40927f <_IO_stdin_used@@Base+0x27f>
  407ace:	jmp    407c18 <table_cell_to_buffer@@Base+0x2a8>
  407ad3:	mov    rdi,rbx
  407ad6:	mov    esi,r12d
  407ad9:	mov    edx,ebp
  407adb:	call   4066b0 <table_get_ulong@@Base>
  407ae0:	mov    rcx,rax
  407ae3:	lea    rdx,[rip+0x1799]        # 409283 <_IO_stdin_used@@Base+0x283>
  407aea:	jmp    407c18 <table_cell_to_buffer@@Base+0x2a8>
  407aef:	mov    rdi,rbx
  407af2:	mov    esi,r12d
  407af5:	mov    edx,ebp
  407af7:	call   4066c0 <table_get_llong@@Base>
  407afc:	mov    rcx,rax
  407aff:	lea    rdx,[rip+0x1789]        # 40928f <_IO_stdin_used@@Base+0x28f>
  407b06:	jmp    407c18 <table_cell_to_buffer@@Base+0x2a8>
  407b0b:	mov    rdi,rbx
  407b0e:	mov    esi,r12d
  407b11:	mov    edx,ebp
  407b13:	call   4066d0 <table_get_ullong@@Base>
  407b18:	mov    rcx,rax
  407b1b:	lea    rdx,[rip+0x1772]        # 409294 <_IO_stdin_used@@Base+0x294>
  407b22:	jmp    407c18 <table_cell_to_buffer@@Base+0x2a8>
  407b27:	mov    rdi,rbx
  407b2a:	mov    esi,r12d
  407b2d:	mov    edx,ebp
  407b2f:	call   4066e0 <table_get_float@@Base>
  407b34:	vcvtss2sd xmm0,xmm0,xmm0
  407b38:	lea    rdx,[rip+0x175d]        # 40929c <_IO_stdin_used@@Base+0x29c>
  407b3f:	jmp    407b55 <table_cell_to_buffer@@Base+0x1e5>
  407b41:	mov    rdi,rbx
  407b44:	mov    esi,r12d
  407b47:	mov    edx,ebp
  407b49:	call   4066f0 <table_get_double@@Base>
  407b4e:	lea    rdx,[rip+0x174a]        # 40929f <_IO_stdin_used@@Base+0x29f>
  407b55:	mov    al,0x1
  407b57:	mov    rdi,r15
  407b5a:	mov    rsi,r14
  407b5d:	call   404070 <snprintf@plt>
  407b62:	jmp    407c25 <table_cell_to_buffer@@Base+0x2b5>
  407b67:	mov    rdi,rbx
  407b6a:	mov    esi,r12d
  407b6d:	mov    edx,ebp
  407b6f:	call   406700 <table_get_ldouble@@Base>
  407b74:	fstp   TBYTE PTR [rsp]
  407b77:	lea    rdx,[rip+0x1725]        # 4092a3 <_IO_stdin_used@@Base+0x2a3>
  407b7e:	xor    eax,eax
  407b80:	mov    rdi,r15
  407b83:	mov    rsi,r14
  407b86:	call   404070 <snprintf@plt>
  407b8b:	jmp    407c25 <table_cell_to_buffer@@Base+0x2b5>
  407b90:	mov    rdi,rbx
  407b93:	mov    esi,r12d
  407b96:	mov    edx,ebp
  407b98:	call   406710 <table_get_char@@Base>
  407b9d:	movsx  ecx,al
  407ba0:	lea    rdx,[rip+0x1700]        # 4092a7 <_IO_stdin_used@@Base+0x2a7>
  407ba7:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407ba9:	mov    rdi,rbx
  407bac:	mov    esi,r12d
  407baf:	mov    edx,ebp
  407bb1:	call   406720 <table_get_uchar@@Base>
  407bb6:	movzx  ecx,al
  407bb9:	lea    rdx,[rip+0x16e7]        # 4092a7 <_IO_stdin_used@@Base+0x2a7>
  407bc0:	jmp    407bf2 <table_cell_to_buffer@@Base+0x282>
  407bc2:	mov    rdi,rbx
  407bc5:	mov    esi,r12d
  407bc8:	mov    edx,ebp
  407bca:	call   406730 <table_get_string@@Base>
  407bcf:	mov    rcx,rax
  407bd2:	lea    rdx,[rip+0x16c0]        # 409299 <_IO_stdin_used@@Base+0x299>
  407bd9:	jmp    407c18 <table_cell_to_buffer@@Base+0x2a8>
  407bdb:	mov    rdi,rbx
  407bde:	mov    esi,r12d
  407be1:	mov    edx,ebp
  407be3:	call   4065d0 <table_get_bool@@Base>
  407be8:	movzx  ecx,al
  407beb:	lea    rdx,[rip+0x1453]        # 409045 <_IO_stdin_used@@Base+0x45>
  407bf2:	xor    eax,eax
  407bf4:	mov    rdi,r15
  407bf7:	mov    rsi,r14
  407bfa:	call   404070 <snprintf@plt>
  407bff:	jmp    407c25 <table_cell_to_buffer@@Base+0x2b5>
  407c01:	mov    rdi,rbx
  407c04:	mov    esi,r12d
  407c07:	mov    edx,ebp
  407c09:	call   406740 <table_get_ptr@@Base>
  407c0e:	mov    rcx,rax
  407c11:	lea    rdx,[rip+0x1692]        # 4092aa <_IO_stdin_used@@Base+0x2aa>
  407c18:	xor    eax,eax
  407c1a:	mov    rdi,r15
  407c1d:	mov    rsi,r14
  407c20:	call   404070 <snprintf@plt>
  407c25:	xor    eax,eax
  407c27:	add    rsp,0x10
  407c2b:	pop    rbx
  407c2c:	pop    r12
  407c2e:	pop    r14
  407c30:	pop    r15
  407c32:	pop    rbp
  407c33:	ret    
  407c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c3e:	xchg   ax,ax

0000000000407c40 <table_cell_from_buffer@@Base>:
  407c40:	push   rbp
  407c41:	push   r15
  407c43:	push   r14
  407c45:	push   rbx
  407c46:	sub    rsp,0x118
  407c4d:	mov    rbx,rcx
  407c50:	mov    r15d,edx
  407c53:	mov    r14d,esi
  407c56:	mov    rbp,rdi
  407c59:	mov    esi,edx
  407c5b:	call   404e20 <table_get_column_data_type@@Base>
  407c60:	cmp    eax,0x17
  407c63:	ja     40820f <table_cell_from_buffer@@Base+0x5cf>
  407c69:	mov    eax,eax
  407c6b:	lea    rcx,[rip+0x15aa]        # 40921c <_IO_stdin_used@@Base+0x21c>
  407c72:	movsxd rax,DWORD PTR [rcx+rax*4]
  407c76:	add    rax,rcx
  407c79:	jmp    rax
  407c7b:	lea    rsi,[rip+0x13c3]        # 409045 <_IO_stdin_used@@Base+0x45>
  407c82:	lea    rdx,[rsp+0x10]
  407c87:	xor    eax,eax
  407c89:	mov    rdi,rbx
  407c8c:	call   4040a0 <__isoc99_sscanf@plt>
  407c91:	mov    ebx,0xffffffff
  407c96:	cmp    eax,0x1
  407c99:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407c9f:	mov    ecx,DWORD PTR [rsp+0x10]
  407ca3:	mov    rdi,rbp
  407ca6:	mov    esi,r14d
  407ca9:	mov    edx,r15d
  407cac:	call   406dc0 <table_set_int@@Base>
  407cb1:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407cb6:	lea    rsi,[rip+0x15bf]        # 40927c <_IO_stdin_used@@Base+0x27c>
  407cbd:	lea    rdx,[rsp+0x10]
  407cc2:	xor    eax,eax
  407cc4:	mov    rdi,rbx
  407cc7:	call   4040a0 <__isoc99_sscanf@plt>
  407ccc:	mov    ebx,0xffffffff
  407cd1:	cmp    eax,0x1
  407cd4:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407cda:	mov    ecx,DWORD PTR [rsp+0x10]
  407cde:	mov    rdi,rbp
  407ce1:	mov    esi,r14d
  407ce4:	mov    edx,r15d
  407ce7:	call   406e40 <table_set_uint@@Base>
  407cec:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407cf1:	lea    rsi,[rip+0x15b5]        # 4092ad <_IO_stdin_used@@Base+0x2ad>
  407cf8:	lea    rdx,[rsp+0x10]
  407cfd:	xor    eax,eax
  407cff:	mov    rdi,rbx
  407d02:	call   4040a0 <__isoc99_sscanf@plt>
  407d07:	mov    ebx,0xffffffff
  407d0c:	cmp    eax,0x1
  407d0f:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407d15:	movsx  ecx,BYTE PTR [rsp+0x10]
  407d1a:	mov    rdi,rbp
  407d1d:	mov    esi,r14d
  407d20:	mov    edx,r15d
  407d23:	call   406ec0 <table_set_int8@@Base>
  407d28:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407d2d:	lea    rsi,[rip+0x157e]        # 4092b2 <_IO_stdin_used@@Base+0x2b2>
  407d34:	lea    rdx,[rsp+0x10]
  407d39:	xor    eax,eax
  407d3b:	mov    rdi,rbx
  407d3e:	call   4040a0 <__isoc99_sscanf@plt>
  407d43:	mov    ebx,0xffffffff
  407d48:	cmp    eax,0x1
  407d4b:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407d51:	movzx  ecx,BYTE PTR [rsp+0x10]
  407d56:	mov    rdi,rbp
  407d59:	mov    esi,r14d
  407d5c:	mov    edx,r15d
  407d5f:	call   406f40 <table_set_uint8@@Base>
  407d64:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407d69:	lea    rsi,[rip+0x1517]        # 409287 <_IO_stdin_used@@Base+0x287>
  407d70:	lea    rdx,[rsp+0x10]
  407d75:	xor    eax,eax
  407d77:	mov    rdi,rbx
  407d7a:	call   4040a0 <__isoc99_sscanf@plt>
  407d7f:	mov    ebx,0xffffffff
  407d84:	cmp    eax,0x1
  407d87:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407d8d:	movsx  ecx,WORD PTR [rsp+0x10]
  407d92:	mov    rdi,rbp
  407d95:	mov    esi,r14d
  407d98:	mov    edx,r15d
  407d9b:	call   406fc0 <table_set_int16@@Base>
  407da0:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407da5:	lea    rsi,[rip+0x14df]        # 40928b <_IO_stdin_used@@Base+0x28b>
  407dac:	lea    rdx,[rsp+0x10]
  407db1:	xor    eax,eax
  407db3:	mov    rdi,rbx
  407db6:	call   4040a0 <__isoc99_sscanf@plt>
  407dbb:	mov    ebx,0xffffffff
  407dc0:	cmp    eax,0x1
  407dc3:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407dc9:	movzx  ecx,WORD PTR [rsp+0x10]
  407dce:	mov    rdi,rbp
  407dd1:	mov    esi,r14d
  407dd4:	mov    edx,r15d
  407dd7:	call   407040 <table_set_uint16@@Base>
  407ddc:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407de1:	lea    rsi,[rip+0x125d]        # 409045 <_IO_stdin_used@@Base+0x45>
  407de8:	lea    rdx,[rsp+0x10]
  407ded:	xor    eax,eax
  407def:	mov    rdi,rbx
  407df2:	call   4040a0 <__isoc99_sscanf@plt>
  407df7:	mov    ebx,0xffffffff
  407dfc:	cmp    eax,0x1
  407dff:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407e05:	mov    ecx,DWORD PTR [rsp+0x10]
  407e09:	mov    rdi,rbp
  407e0c:	mov    esi,r14d
  407e0f:	mov    edx,r15d
  407e12:	call   4070c0 <table_set_int32@@Base>
  407e17:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407e1c:	lea    rsi,[rip+0x1459]        # 40927c <_IO_stdin_used@@Base+0x27c>
  407e23:	lea    rdx,[rsp+0x10]
  407e28:	xor    eax,eax
  407e2a:	mov    rdi,rbx
  407e2d:	call   4040a0 <__isoc99_sscanf@plt>
  407e32:	mov    ebx,0xffffffff
  407e37:	cmp    eax,0x1
  407e3a:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407e40:	mov    ecx,DWORD PTR [rsp+0x10]
  407e44:	mov    rdi,rbp
  407e47:	mov    esi,r14d
  407e4a:	mov    edx,r15d
  407e4d:	call   407140 <table_set_uint32@@Base>
  407e52:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407e57:	lea    rsi,[rip+0x1421]        # 40927f <_IO_stdin_used@@Base+0x27f>
  407e5e:	lea    rdx,[rsp+0x10]
  407e63:	xor    eax,eax
  407e65:	mov    rdi,rbx
  407e68:	call   4040a0 <__isoc99_sscanf@plt>
  407e6d:	mov    ebx,0xffffffff
  407e72:	cmp    eax,0x1
  407e75:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407e7b:	mov    rcx,QWORD PTR [rsp+0x10]
  407e80:	mov    rdi,rbp
  407e83:	mov    esi,r14d
  407e86:	mov    edx,r15d
  407e89:	call   4071c0 <table_set_int64@@Base>
  407e8e:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407e93:	lea    rsi,[rip+0x13e9]        # 409283 <_IO_stdin_used@@Base+0x283>
  407e9a:	lea    rdx,[rsp+0x10]
  407e9f:	xor    eax,eax
  407ea1:	mov    rdi,rbx
  407ea4:	call   4040a0 <__isoc99_sscanf@plt>
  407ea9:	mov    ebx,0xffffffff
  407eae:	cmp    eax,0x1
  407eb1:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407eb7:	mov    rcx,QWORD PTR [rsp+0x10]
  407ebc:	mov    rdi,rbp
  407ebf:	mov    esi,r14d
  407ec2:	mov    edx,r15d
  407ec5:	call   407240 <table_set_uint64@@Base>
  407eca:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407ecf:	lea    rsi,[rip+0x13b1]        # 409287 <_IO_stdin_used@@Base+0x287>
  407ed6:	lea    rdx,[rsp+0x10]
  407edb:	xor    eax,eax
  407edd:	mov    rdi,rbx
  407ee0:	call   4040a0 <__isoc99_sscanf@plt>
  407ee5:	mov    ebx,0xffffffff
  407eea:	cmp    eax,0x1
  407eed:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407ef3:	movsx  ecx,WORD PTR [rsp+0x10]
  407ef8:	mov    rdi,rbp
  407efb:	mov    esi,r14d
  407efe:	mov    edx,r15d
  407f01:	call   4072c0 <table_set_short@@Base>
  407f06:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407f0b:	lea    rsi,[rip+0x1379]        # 40928b <_IO_stdin_used@@Base+0x28b>
  407f12:	lea    rdx,[rsp+0x10]
  407f17:	xor    eax,eax
  407f19:	mov    rdi,rbx
  407f1c:	call   4040a0 <__isoc99_sscanf@plt>
  407f21:	mov    ebx,0xffffffff
  407f26:	cmp    eax,0x1
  407f29:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407f2f:	movzx  ecx,WORD PTR [rsp+0x10]
  407f34:	mov    rdi,rbp
  407f37:	mov    esi,r14d
  407f3a:	mov    edx,r15d
  407f3d:	call   407340 <table_set_ushort@@Base>
  407f42:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407f47:	lea    rsi,[rip+0x1331]        # 40927f <_IO_stdin_used@@Base+0x27f>
  407f4e:	lea    rdx,[rsp+0x10]
  407f53:	xor    eax,eax
  407f55:	mov    rdi,rbx
  407f58:	call   4040a0 <__isoc99_sscanf@plt>
  407f5d:	mov    ebx,0xffffffff
  407f62:	cmp    eax,0x1
  407f65:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407f6b:	mov    rcx,QWORD PTR [rsp+0x10]
  407f70:	mov    rdi,rbp
  407f73:	mov    esi,r14d
  407f76:	mov    edx,r15d
  407f79:	call   4073c0 <table_set_long@@Base>
  407f7e:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407f83:	lea    rsi,[rip+0x12f9]        # 409283 <_IO_stdin_used@@Base+0x283>
  407f8a:	lea    rdx,[rsp+0x10]
  407f8f:	xor    eax,eax
  407f91:	mov    rdi,rbx
  407f94:	call   4040a0 <__isoc99_sscanf@plt>
  407f99:	mov    ebx,0xffffffff
  407f9e:	cmp    eax,0x1
  407fa1:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407fa7:	mov    rcx,QWORD PTR [rsp+0x10]
  407fac:	mov    rdi,rbp
  407faf:	mov    esi,r14d
  407fb2:	mov    edx,r15d
  407fb5:	call   407440 <table_set_ulong@@Base>
  407fba:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407fbf:	lea    rsi,[rip+0x12c9]        # 40928f <_IO_stdin_used@@Base+0x28f>
  407fc6:	lea    rdx,[rsp+0x10]
  407fcb:	xor    eax,eax
  407fcd:	mov    rdi,rbx
  407fd0:	call   4040a0 <__isoc99_sscanf@plt>
  407fd5:	mov    ebx,0xffffffff
  407fda:	cmp    eax,0x1
  407fdd:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  407fe3:	mov    rcx,QWORD PTR [rsp+0x10]
  407fe8:	mov    rdi,rbp
  407feb:	mov    esi,r14d
  407fee:	mov    edx,r15d
  407ff1:	call   4074c0 <table_set_llong@@Base>
  407ff6:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  407ffb:	lea    rsi,[rip+0x1292]        # 409294 <_IO_stdin_used@@Base+0x294>
  408002:	lea    rdx,[rsp+0x10]
  408007:	xor    eax,eax
  408009:	mov    rdi,rbx
  40800c:	call   4040a0 <__isoc99_sscanf@plt>
  408011:	mov    ebx,0xffffffff
  408016:	cmp    eax,0x1
  408019:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  40801f:	mov    rcx,QWORD PTR [rsp+0x10]
  408024:	mov    rdi,rbp
  408027:	mov    esi,r14d
  40802a:	mov    edx,r15d
  40802d:	call   407540 <table_set_ullong@@Base>
  408032:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  408037:	lea    rsi,[rip+0x125e]        # 40929c <_IO_stdin_used@@Base+0x29c>
  40803e:	lea    rdx,[rsp+0x10]
  408043:	xor    eax,eax
  408045:	mov    rdi,rbx
  408048:	call   4040a0 <__isoc99_sscanf@plt>
  40804d:	mov    ebx,0xffffffff
  408052:	cmp    eax,0x1
  408055:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  40805b:	vmovss xmm0,DWORD PTR [rsp+0x10]
  408061:	mov    rdi,rbp
  408064:	mov    esi,r14d
  408067:	mov    edx,r15d
  40806a:	call   4075c0 <table_set_float@@Base>
  40806f:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  408074:	lea    rsi,[rip+0x1224]        # 40929f <_IO_stdin_used@@Base+0x29f>
  40807b:	lea    rdx,[rsp+0x10]
  408080:	xor    eax,eax
  408082:	mov    rdi,rbx
  408085:	call   4040a0 <__isoc99_sscanf@plt>
  40808a:	mov    ebx,0xffffffff
  40808f:	cmp    eax,0x1
  408092:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  408098:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  40809e:	mov    rdi,rbp
  4080a1:	mov    esi,r14d
  4080a4:	mov    edx,r15d
  4080a7:	call   407650 <table_set_double@@Base>
  4080ac:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  4080b1:	lea    rsi,[rip+0x11eb]        # 4092a3 <_IO_stdin_used@@Base+0x2a3>
  4080b8:	lea    rdx,[rsp+0x10]
  4080bd:	xor    eax,eax
  4080bf:	mov    rdi,rbx
  4080c2:	call   4040a0 <__isoc99_sscanf@plt>
  4080c7:	mov    ebx,0xffffffff
  4080cc:	cmp    eax,0x1
  4080cf:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  4080d5:	fld    TBYTE PTR [rsp+0x10]
  4080d9:	fstp   TBYTE PTR [rsp]
  4080dc:	mov    rdi,rbp
  4080df:	mov    esi,r14d
  4080e2:	mov    edx,r15d
  4080e5:	call   4076e0 <table_set_ldouble@@Base>
  4080ea:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  4080ef:	lea    rsi,[rip+0x11b1]        # 4092a7 <_IO_stdin_used@@Base+0x2a7>
  4080f6:	lea    rdx,[rsp+0x10]
  4080fb:	xor    eax,eax
  4080fd:	mov    rdi,rbx
  408100:	call   4040a0 <__isoc99_sscanf@plt>
  408105:	mov    ebx,0xffffffff
  40810a:	cmp    eax,0x1
  40810d:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  408113:	movsx  ecx,BYTE PTR [rsp+0x10]
  408118:	mov    rdi,rbp
  40811b:	mov    esi,r14d
  40811e:	mov    edx,r15d
  408121:	call   407790 <table_set_char@@Base>
  408126:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  40812b:	lea    rsi,[rip+0x1175]        # 4092a7 <_IO_stdin_used@@Base+0x2a7>
  408132:	lea    rdx,[rsp+0x10]
  408137:	xor    eax,eax
  408139:	mov    rdi,rbx
  40813c:	call   4040a0 <__isoc99_sscanf@plt>
  408141:	mov    ebx,0xffffffff
  408146:	cmp    eax,0x1
  408149:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  40814f:	movzx  ecx,BYTE PTR [rsp+0x10]
  408154:	mov    rdi,rbp
  408157:	mov    esi,r14d
  40815a:	mov    edx,r15d
  40815d:	call   407810 <table_set_uchar@@Base>
  408162:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  408167:	lea    rsi,[rip+0x112b]        # 409299 <_IO_stdin_used@@Base+0x299>
  40816e:	lea    rdx,[rsp+0x10]
  408173:	xor    eax,eax
  408175:	mov    rdi,rbx
  408178:	call   4040a0 <__isoc99_sscanf@plt>
  40817d:	mov    ebx,0xffffffff
  408182:	cmp    eax,0x1
  408185:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  40818b:	lea    rcx,[rsp+0x10]
  408190:	mov    rdi,rbp
  408193:	mov    esi,r14d
  408196:	mov    edx,r15d
  408199:	call   407780 <table_set_string@@Base>
  40819e:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  4081a0:	lea    rsi,[rip+0xe9e]        # 409045 <_IO_stdin_used@@Base+0x45>
  4081a7:	lea    rdx,[rsp+0x10]
  4081ac:	xor    eax,eax
  4081ae:	mov    rdi,rbx
  4081b1:	call   4040a0 <__isoc99_sscanf@plt>
  4081b6:	mov    ebx,0xffffffff
  4081bb:	cmp    eax,0x1
  4081be:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  4081c0:	cmp    DWORD PTR [rsp+0x10],0x0
  4081c5:	je     408221 <table_cell_from_buffer@@Base+0x5e1>
  4081c7:	mov    ecx,0x1
  4081cc:	mov    rdi,rbp
  4081cf:	mov    esi,r14d
  4081d2:	mov    edx,r15d
  4081d5:	call   406d40 <table_set_bool@@Base>
  4081da:	jmp    40820f <table_cell_from_buffer@@Base+0x5cf>
  4081dc:	lea    rsi,[rip+0x10c7]        # 4092aa <_IO_stdin_used@@Base+0x2aa>
  4081e3:	lea    rdx,[rsp+0x10]
  4081e8:	xor    eax,eax
  4081ea:	mov    rdi,rbx
  4081ed:	call   4040a0 <__isoc99_sscanf@plt>
  4081f2:	mov    ebx,0xffffffff
  4081f7:	cmp    eax,0x1
  4081fa:	jne    408211 <table_cell_from_buffer@@Base+0x5d1>
  4081fc:	mov    rcx,QWORD PTR [rsp+0x10]
  408201:	mov    rdi,rbp
  408204:	mov    esi,r14d
  408207:	mov    edx,r15d
  40820a:	call   407890 <table_set_ptr@@Base>
  40820f:	xor    ebx,ebx
  408211:	mov    eax,ebx
  408213:	add    rsp,0x118
  40821a:	pop    rbx
  40821b:	pop    r14
  40821d:	pop    r15
  40821f:	pop    rbp
  408220:	ret    
  408221:	xor    ebx,ebx
  408223:	xor    ecx,ecx
  408225:	mov    rdi,rbp
  408228:	mov    esi,r14d
  40822b:	mov    edx,r15d
  40822e:	call   406d40 <table_set_bool@@Base>
  408233:	jmp    408211 <table_cell_from_buffer@@Base+0x5d1>
  408235:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40823f:	nop

0000000000408240 <table_cell_nullify@@Base>:
  408240:	push   rbp
  408241:	push   rbx
  408242:	push   rax
  408243:	mov    ebp,edx
  408245:	call   406780 <table_get_row_ptr@@Base>
  40824a:	mov    rbx,QWORD PTR [rax]
  40824d:	movsxd rbp,ebp
  408250:	mov    rdi,QWORD PTR [rbx+rbp*8]
  408254:	test   rdi,rdi
  408257:	je     408266 <table_cell_nullify@@Base+0x26>
  408259:	call   404030 <free@plt>
  40825e:	mov    QWORD PTR [rbx+rbp*8],0x0
  408266:	xor    eax,eax
  408268:	add    rsp,0x8
  40826c:	pop    rbx
  40826d:	pop    rbp
  40826e:	ret    
  40826f:	nop

0000000000408270 <__libc_csu_init@@Base>:
  408270:	endbr64 
  408274:	push   r15
  408276:	lea    r15,[rip+0x4ac3]        # 40cd40 <_IO_stdin_used@@Base+0x3d40>
  40827d:	push   r14
  40827f:	mov    r14,rdx
  408282:	push   r13
  408284:	mov    r13,rsi
  408287:	push   r12
  408289:	mov    r12d,edi
  40828c:	push   rbp
  40828d:	lea    rbp,[rip+0x4ab4]        # 40cd48 <_IO_stdin_used@@Base+0x3d48>
  408294:	push   rbx
  408295:	sub    rbp,r15
  408298:	sub    rsp,0x8
  40829c:	call   404000 <free@plt-0x30>
  4082a1:	sar    rbp,0x3
  4082a5:	je     4082c6 <__libc_csu_init@@Base+0x56>
  4082a7:	xor    ebx,ebx
  4082a9:	nop    DWORD PTR [rax+0x0]
  4082b0:	mov    rdx,r14
  4082b3:	mov    rsi,r13
  4082b6:	mov    edi,r12d
  4082b9:	call   QWORD PTR [r15+rbx*8]
  4082bd:	add    rbx,0x1
  4082c1:	cmp    rbp,rbx
  4082c4:	jne    4082b0 <__libc_csu_init@@Base+0x40>
  4082c6:	add    rsp,0x8
  4082ca:	pop    rbx
  4082cb:	pop    rbp
  4082cc:	pop    r12
  4082ce:	pop    r13
  4082d0:	pop    r14
  4082d2:	pop    r15
  4082d4:	ret    
  4082d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004082e0 <__libc_csu_fini@@Base>:
  4082e0:	endbr64 
  4082e4:	ret    

Disassembly of section .fini:

00000000004082e8 <.fini>:
  4082e8:	endbr64 
  4082ec:	sub    rsp,0x8
  4082f0:	add    rsp,0x8
  4082f4:	ret    
