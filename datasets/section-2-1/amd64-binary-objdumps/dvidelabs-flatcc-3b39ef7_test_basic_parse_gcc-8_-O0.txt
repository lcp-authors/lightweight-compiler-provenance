
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_basic_parse:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x16fe1]        # 419ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0xfa>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x16fe2]        # 41a008 <flatcc_builder_padding_base@@Base+0x5c68>
  403026:	bnd jmp QWORD PTR [rip+0x16fe3]        # 41a010 <flatcc_builder_padding_base@@Base+0x5c70>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0xf0>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0xf0>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0xf0>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0xf0>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0xf0>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0xf0>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0xf0>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0xf0>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0xf0>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0xf0>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0xf0>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0xf0>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0xf0>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0xf0>
  40310f:	nop

Disassembly of section .plt.sec:

0000000000403110 <free@plt>:
  403110:	endbr64 
  403114:	bnd jmp QWORD PTR [rip+0x16efd]        # 41a018 <free@GLIBC_2.2.5>
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403120 <strtod@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0x16ef5]        # 41a020 <strtod@GLIBC_2.2.5>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <strlen@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0x16eed]        # 41a028 <strlen@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <__stack_chk_fail@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0x16ee5]        # 41a030 <__stack_chk_fail@GLIBC_2.4>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <__assert_fail@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0x16edd]        # 41a038 <__assert_fail@GLIBC_2.2.5>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <memset@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0x16ed5]        # 41a040 <memset@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <memchr@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0x16ecd]        # 41a048 <memchr@GLIBC_2.2.5>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <memcmp@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0x16ec5]        # 41a050 <memcmp@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <fprintf@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0x16ebd]        # 41a058 <fprintf@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <memcpy@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0x16eb5]        # 41a060 <memcpy@GLIBC_2.14>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <malloc@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0x16ead]        # 41a068 <malloc@GLIBC_2.2.5>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <realloc@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0x16ea5]        # 41a070 <realloc@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <fwrite@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0x16e9d]        # 41a078 <fwrite@GLIBC_2.2.5>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <posix_memalign@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0x16e95]        # 41a080 <posix_memalign@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004031f0 <_start@@Base>:
  4031f0:	endbr64 
  4031f4:	xor    ebp,ebp
  4031f6:	mov    r9,rdx
  4031f9:	pop    rsi
  4031fa:	mov    rdx,rsp
  4031fd:	and    rsp,0xfffffffffffffff0
  403201:	push   rax
  403202:	push   rsp
  403203:	mov    r8,0x413660
  40320a:	mov    rcx,0x4135f0
  403211:	mov    rdi,0x40665c
  403218:	call   QWORD PTR [rip+0x16dca]        # 419fe8 <__libc_start_main@GLIBC_2.2.5>
  40321e:	hlt    
  40321f:	nop
  403220:	endbr64 
  403224:	ret    
  403225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40322f:	nop
  403230:	mov    eax,0x41a130
  403235:	cmp    rax,0x41a130
  40323b:	je     403250 <_start@@Base+0x60>
  40323d:	mov    eax,0x0
  403242:	test   rax,rax
  403245:	je     403250 <_start@@Base+0x60>
  403247:	mov    edi,0x41a130
  40324c:	jmp    rax
  40324e:	xchg   ax,ax
  403250:	ret    
  403251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	mov    esi,0x41a130
  403265:	sub    rsi,0x41a130
  40326c:	sar    rsi,0x3
  403270:	mov    rax,rsi
  403273:	shr    rax,0x3f
  403277:	add    rsi,rax
  40327a:	sar    rsi,1
  40327d:	je     403290 <_start@@Base+0xa0>
  40327f:	mov    eax,0x0
  403284:	test   rax,rax
  403287:	je     403290 <_start@@Base+0xa0>
  403289:	mov    edi,0x41a130
  40328e:	jmp    rax
  403290:	ret    
  403291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40329c:	nop    DWORD PTR [rax+0x0]
  4032a0:	endbr64 
  4032a4:	cmp    BYTE PTR [rip+0x16e85],0x0        # 41a130 <__bss_start@@Base>
  4032ab:	jne    4032c0 <_start@@Base+0xd0>
  4032ad:	push   rbp
  4032ae:	mov    rbp,rsp
  4032b1:	call   403230 <_start@@Base+0x40>
  4032b6:	mov    BYTE PTR [rip+0x16e73],0x1        # 41a130 <__bss_start@@Base>
  4032bd:	pop    rbp
  4032be:	ret    
  4032bf:	nop
  4032c0:	ret    
  4032c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	endbr64 
  4032d4:	jmp    403260 <_start@@Base+0x70>
  4032d6:	push   rbp
  4032d7:	mov    rbp,rsp
  4032da:	sub    rsp,0x20
  4032de:	mov    QWORD PTR [rbp-0x8],rdi
  4032e2:	mov    QWORD PTR [rbp-0x10],rsi
  4032e6:	mov    QWORD PTR [rbp-0x18],rdx
  4032ea:	mov    rax,QWORD PTR [rbp-0x18]
  4032ee:	sub    rax,QWORD PTR [rbp-0x10]
  4032f2:	cmp    rax,0x1
  4032f6:	jle    40332b <_start@@Base+0x13b>
  4032f8:	mov    rax,QWORD PTR [rbp-0x10]
  4032fc:	movzx  eax,BYTE PTR [rax]
  4032ff:	cmp    al,0x20
  403301:	jle    403309 <_start@@Base+0x119>
  403303:	mov    rax,QWORD PTR [rbp-0x10]
  403307:	jmp    403342 <_start@@Base+0x152>
  403309:	mov    rax,QWORD PTR [rbp-0x10]
  40330d:	movzx  eax,BYTE PTR [rax]
  403310:	cmp    al,0x20
  403312:	jne    40332b <_start@@Base+0x13b>
  403314:	mov    rax,QWORD PTR [rbp-0x10]
  403318:	inc    rax
  40331b:	movzx  eax,BYTE PTR [rax]
  40331e:	cmp    al,0x20
  403320:	jle    40332b <_start@@Base+0x13b>
  403322:	mov    rax,QWORD PTR [rbp-0x10]
  403326:	inc    rax
  403329:	jmp    403342 <_start@@Base+0x152>
  40332b:	mov    rdx,QWORD PTR [rbp-0x18]
  40332f:	mov    rcx,QWORD PTR [rbp-0x10]
  403333:	mov    rax,QWORD PTR [rbp-0x8]
  403337:	mov    rsi,rcx
  40333a:	mov    rdi,rax
  40333d:	call   410a8c <flatcc_json_parser_space_ext@@Base>
  403342:	leave  
  403343:	ret    
  403344:	push   rbp
  403345:	mov    rbp,rsp
  403348:	sub    rsp,0x20
  40334c:	mov    QWORD PTR [rbp-0x8],rdi
  403350:	mov    QWORD PTR [rbp-0x10],rsi
  403354:	mov    QWORD PTR [rbp-0x18],rdx
  403358:	mov    rax,QWORD PTR [rbp-0x10]
  40335c:	cmp    rax,QWORD PTR [rbp-0x18]
  403360:	je     40336d <_start@@Base+0x17d>
  403362:	mov    rax,QWORD PTR [rbp-0x10]
  403366:	movzx  eax,BYTE PTR [rax]
  403369:	cmp    al,0x22
  40336b:	je     403388 <_start@@Base+0x198>
  40336d:	mov    rdx,QWORD PTR [rbp-0x18]
  403371:	mov    rsi,QWORD PTR [rbp-0x10]
  403375:	mov    rax,QWORD PTR [rbp-0x8]
  403379:	mov    ecx,0x10
  40337e:	mov    rdi,rax
  403381:	call   410986 <flatcc_json_parser_set_error@@Base>
  403386:	jmp    403390 <_start@@Base+0x1a0>
  403388:	inc    QWORD PTR [rbp-0x10]
  40338c:	mov    rax,QWORD PTR [rbp-0x10]
  403390:	leave  
  403391:	ret    
  403392:	push   rbp
  403393:	mov    rbp,rsp
  403396:	sub    rsp,0x20
  40339a:	mov    QWORD PTR [rbp-0x8],rdi
  40339e:	mov    QWORD PTR [rbp-0x10],rsi
  4033a2:	mov    QWORD PTR [rbp-0x18],rdx
  4033a6:	mov    rax,QWORD PTR [rbp-0x10]
  4033aa:	cmp    rax,QWORD PTR [rbp-0x18]
  4033ae:	je     4033bb <_start@@Base+0x1cb>
  4033b0:	mov    rax,QWORD PTR [rbp-0x10]
  4033b4:	movzx  eax,BYTE PTR [rax]
  4033b7:	cmp    al,0x22
  4033b9:	je     4033d6 <_start@@Base+0x1e6>
  4033bb:	mov    rdx,QWORD PTR [rbp-0x18]
  4033bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4033c3:	mov    rax,QWORD PTR [rbp-0x8]
  4033c7:	mov    ecx,0x14
  4033cc:	mov    rdi,rax
  4033cf:	call   410986 <flatcc_json_parser_set_error@@Base>
  4033d4:	jmp    4033de <_start@@Base+0x1ee>
  4033d6:	inc    QWORD PTR [rbp-0x10]
  4033da:	mov    rax,QWORD PTR [rbp-0x10]
  4033de:	leave  
  4033df:	ret    
  4033e0:	push   rbp
  4033e1:	mov    rbp,rsp
  4033e4:	sub    rsp,0x20
  4033e8:	mov    QWORD PTR [rbp-0x8],rdi
  4033ec:	mov    QWORD PTR [rbp-0x10],rsi
  4033f0:	mov    QWORD PTR [rbp-0x18],rdx
  4033f4:	mov    rax,QWORD PTR [rbp-0x10]
  4033f8:	cmp    rax,QWORD PTR [rbp-0x18]
  4033fc:	jne    403404 <_start@@Base+0x214>
  4033fe:	mov    rax,QWORD PTR [rbp-0x10]
  403402:	jmp    403455 <_start@@Base+0x265>
  403404:	mov    rax,QWORD PTR [rbp-0x10]
  403408:	movzx  eax,BYTE PTR [rax]
  40340b:	cmp    al,0x22
  40340d:	jne    403420 <_start@@Base+0x230>
  40340f:	inc    QWORD PTR [rbp-0x10]
  403413:	mov    rax,QWORD PTR [rbp-0x8]
  403417:	mov    DWORD PTR [rax+0x14],0x0
  40341e:	jmp    403451 <_start@@Base+0x261>
  403420:	mov    rax,QWORD PTR [rbp-0x10]
  403424:	movzx  eax,BYTE PTR [rax]
  403427:	cmp    al,0x2e
  403429:	jne    403446 <_start@@Base+0x256>
  40342b:	mov    rdx,QWORD PTR [rbp-0x18]
  40342f:	mov    rsi,QWORD PTR [rbp-0x10]
  403433:	mov    rax,QWORD PTR [rbp-0x8]
  403437:	mov    ecx,0x5
  40343c:	mov    rdi,rax
  40343f:	call   410986 <flatcc_json_parser_set_error@@Base>
  403444:	jmp    403455 <_start@@Base+0x265>
  403446:	mov    rax,QWORD PTR [rbp-0x8]
  40344a:	mov    DWORD PTR [rax+0x14],0x1
  403451:	mov    rax,QWORD PTR [rbp-0x10]
  403455:	leave  
  403456:	ret    
  403457:	push   rbp
  403458:	mov    rbp,rsp
  40345b:	mov    QWORD PTR [rbp-0x18],rdi
  40345f:	mov    QWORD PTR [rbp-0x20],rsi
  403463:	mov    QWORD PTR [rbp-0x10],0x0
  40346b:	mov    rax,QWORD PTR [rbp-0x20]
  40346f:	sub    rax,QWORD PTR [rbp-0x18]
  403473:	mov    QWORD PTR [rbp-0x8],rax
  403477:	cmp    QWORD PTR [rbp-0x8],0x8
  40347c:	jbe    403486 <_start@@Base+0x296>
  40347e:	mov    QWORD PTR [rbp-0x8],0x8
  403486:	cmp    QWORD PTR [rbp-0x8],0x8
  40348b:	ja     403567 <_start@@Base+0x377>
  403491:	mov    rax,QWORD PTR [rbp-0x8]
  403495:	lea    rdx,[rax*4+0x0]
  40349d:	lea    rax,[rip+0x10b80]        # 414024 <_IO_stdin_used@@Base+0x24>
  4034a4:	mov    eax,DWORD PTR [rdx+rax*1]
  4034a7:	movsxd rdx,eax
  4034aa:	lea    rax,[rip+0x10b73]        # 414024 <_IO_stdin_used@@Base+0x24>
  4034b1:	add    rax,rdx
  4034b4:	notrack jmp rax
  4034b7:	mov    rax,QWORD PTR [rbp-0x18]
  4034bb:	add    rax,0x7
  4034bf:	movzx  eax,BYTE PTR [rax]
  4034c2:	movsx  rax,al
  4034c6:	or     QWORD PTR [rbp-0x10],rax
  4034ca:	mov    rax,QWORD PTR [rbp-0x18]
  4034ce:	add    rax,0x6
  4034d2:	movzx  eax,BYTE PTR [rax]
  4034d5:	movsx  rax,al
  4034d9:	shl    rax,0x8
  4034dd:	or     QWORD PTR [rbp-0x10],rax
  4034e1:	mov    rax,QWORD PTR [rbp-0x18]
  4034e5:	add    rax,0x5
  4034e9:	movzx  eax,BYTE PTR [rax]
  4034ec:	movsx  rax,al
  4034f0:	shl    rax,0x10
  4034f4:	or     QWORD PTR [rbp-0x10],rax
  4034f8:	mov    rax,QWORD PTR [rbp-0x18]
  4034fc:	add    rax,0x4
  403500:	movzx  eax,BYTE PTR [rax]
  403503:	movsx  rax,al
  403507:	shl    rax,0x18
  40350b:	or     QWORD PTR [rbp-0x10],rax
  40350f:	mov    rax,QWORD PTR [rbp-0x18]
  403513:	add    rax,0x3
  403517:	movzx  eax,BYTE PTR [rax]
  40351a:	movsx  rax,al
  40351e:	shl    rax,0x20
  403522:	or     QWORD PTR [rbp-0x10],rax
  403526:	mov    rax,QWORD PTR [rbp-0x18]
  40352a:	add    rax,0x2
  40352e:	movzx  eax,BYTE PTR [rax]
  403531:	movsx  rax,al
  403535:	shl    rax,0x28
  403539:	or     QWORD PTR [rbp-0x10],rax
  40353d:	mov    rax,QWORD PTR [rbp-0x18]
  403541:	inc    rax
  403544:	movzx  eax,BYTE PTR [rax]
  403547:	movsx  rax,al
  40354b:	shl    rax,0x30
  40354f:	or     QWORD PTR [rbp-0x10],rax
  403553:	mov    rax,QWORD PTR [rbp-0x18]
  403557:	movzx  eax,BYTE PTR [rax]
  40355a:	movsx  rax,al
  40355e:	shl    rax,0x38
  403562:	or     QWORD PTR [rbp-0x10],rax
  403566:	nop
  403567:	mov    rax,QWORD PTR [rbp-0x10]
  40356b:	pop    rbp
  40356c:	ret    
  40356d:	push   rbp
  40356e:	mov    rbp,rsp
  403571:	sub    rsp,0x20
  403575:	mov    QWORD PTR [rbp-0x18],rdi
  403579:	mov    QWORD PTR [rbp-0x20],rsi
  40357d:	mov    rax,QWORD PTR [rbp-0x20]
  403581:	sub    rax,QWORD PTR [rbp-0x18]
  403585:	mov    QWORD PTR [rbp-0x8],rax
  403589:	cmp    QWORD PTR [rbp-0x8],0x7
  40358e:	jbe    40359c <_start@@Base+0x3ac>
  403590:	mov    rax,QWORD PTR [rbp-0x18]
  403594:	mov    rax,QWORD PTR [rax]
  403597:	bswap  rax
  40359a:	jmp    4035af <_start@@Base+0x3bf>
  40359c:	mov    rdx,QWORD PTR [rbp-0x20]
  4035a0:	mov    rax,QWORD PTR [rbp-0x18]
  4035a4:	mov    rsi,rdx
  4035a7:	mov    rdi,rax
  4035aa:	call   403457 <_start@@Base+0x267>
  4035af:	leave  
  4035b0:	ret    
  4035b1:	push   rbp
  4035b2:	mov    rbp,rsp
  4035b5:	sub    rsp,0x30
  4035b9:	mov    QWORD PTR [rbp-0x18],rdi
  4035bd:	mov    QWORD PTR [rbp-0x20],rsi
  4035c1:	mov    QWORD PTR [rbp-0x28],rdx
  4035c5:	mov    BYTE PTR [rbp-0x2],0x0
  4035c9:	mov    rax,QWORD PTR [rbp-0x18]
  4035cd:	mov    eax,DWORD PTR [rax+0x14]
  4035d0:	test   eax,eax
  4035d2:	je     403682 <_start@@Base+0x492>
  4035d8:	jmp    403624 <_start@@Base+0x434>
  4035da:	mov    rax,QWORD PTR [rbp-0x20]
  4035de:	movzx  eax,BYTE PTR [rax]
  4035e1:	mov    BYTE PTR [rbp-0x1],al
  4035e4:	movzx  eax,BYTE PTR [rbp-0x1]
  4035e8:	mov    BYTE PTR [rbp-0x2],al
  4035eb:	cmp    BYTE PTR [rbp-0x1],0x5f
  4035ef:	je     403609 <_start@@Base+0x419>
  4035f1:	cmp    BYTE PTR [rbp-0x1],0x2e
  4035f5:	je     403609 <_start@@Base+0x419>
  4035f7:	cmp    BYTE PTR [rbp-0x1],0x0
  4035fb:	js     403609 <_start@@Base+0x419>
  4035fd:	cmp    BYTE PTR [rbp-0x1],0x2f
  403601:	jle    40360f <_start@@Base+0x41f>
  403603:	cmp    BYTE PTR [rbp-0x1],0x39
  403607:	jg     40360f <_start@@Base+0x41f>
  403609:	inc    QWORD PTR [rbp-0x20]
  40360d:	jmp    403624 <_start@@Base+0x434>
  40360f:	or     BYTE PTR [rbp-0x1],0x20
  403613:	cmp    BYTE PTR [rbp-0x1],0x60
  403617:	jle    40363b <_start@@Base+0x44b>
  403619:	cmp    BYTE PTR [rbp-0x1],0x7a
  40361d:	jg     40363b <_start@@Base+0x44b>
  40361f:	inc    QWORD PTR [rbp-0x20]
  403623:	nop
  403624:	mov    rax,QWORD PTR [rbp-0x20]
  403628:	cmp    rax,QWORD PTR [rbp-0x28]
  40362c:	je     40363c <_start@@Base+0x44c>
  40362e:	mov    rax,QWORD PTR [rbp-0x20]
  403632:	movzx  eax,BYTE PTR [rax]
  403635:	cmp    al,0x20
  403637:	jg     4035da <_start@@Base+0x3ea>
  403639:	jmp    40363c <_start@@Base+0x44c>
  40363b:	nop
  40363c:	cmp    BYTE PTR [rbp-0x2],0x2e
  403640:	jne    4036ce <_start@@Base+0x4de>
  403646:	mov    rdx,QWORD PTR [rbp-0x28]
  40364a:	mov    rsi,QWORD PTR [rbp-0x20]
  40364e:	mov    rax,QWORD PTR [rbp-0x18]
  403652:	mov    ecx,0x5
  403657:	mov    rdi,rax
  40365a:	call   410986 <flatcc_json_parser_set_error@@Base>
  40365f:	jmp    4036d2 <_start@@Base+0x4e2>
  403661:	mov    rax,QWORD PTR [rbp-0x20]
  403665:	movzx  eax,BYTE PTR [rax]
  403668:	cmp    al,0x5c
  40366a:	jne    40367e <_start@@Base+0x48e>
  40366c:	mov    rax,QWORD PTR [rbp-0x28]
  403670:	sub    rax,QWORD PTR [rbp-0x20]
  403674:	cmp    rax,0x1
  403678:	jle    403699 <_start@@Base+0x4a9>
  40367a:	inc    QWORD PTR [rbp-0x20]
  40367e:	inc    QWORD PTR [rbp-0x20]
  403682:	mov    rax,QWORD PTR [rbp-0x20]
  403686:	cmp    rax,QWORD PTR [rbp-0x28]
  40368a:	je     40369a <_start@@Base+0x4aa>
  40368c:	mov    rax,QWORD PTR [rbp-0x20]
  403690:	movzx  eax,BYTE PTR [rax]
  403693:	cmp    al,0x22
  403695:	jne    403661 <_start@@Base+0x471>
  403697:	jmp    40369a <_start@@Base+0x4aa>
  403699:	nop
  40369a:	mov    rax,QWORD PTR [rbp-0x20]
  40369e:	cmp    rax,QWORD PTR [rbp-0x28]
  4036a2:	je     4036af <_start@@Base+0x4bf>
  4036a4:	mov    rax,QWORD PTR [rbp-0x20]
  4036a8:	movzx  eax,BYTE PTR [rax]
  4036ab:	cmp    al,0x22
  4036ad:	je     4036ca <_start@@Base+0x4da>
  4036af:	mov    rdx,QWORD PTR [rbp-0x28]
  4036b3:	mov    rsi,QWORD PTR [rbp-0x20]
  4036b7:	mov    rax,QWORD PTR [rbp-0x18]
  4036bb:	mov    ecx,0x14
  4036c0:	mov    rdi,rax
  4036c3:	call   410986 <flatcc_json_parser_set_error@@Base>
  4036c8:	jmp    4036d2 <_start@@Base+0x4e2>
  4036ca:	inc    QWORD PTR [rbp-0x20]
  4036ce:	mov    rax,QWORD PTR [rbp-0x20]
  4036d2:	leave  
  4036d3:	ret    
  4036d4:	push   rbp
  4036d5:	mov    rbp,rsp
  4036d8:	sub    rsp,0x20
  4036dc:	mov    QWORD PTR [rbp-0x8],rdi
  4036e0:	mov    QWORD PTR [rbp-0x10],rsi
  4036e4:	mov    QWORD PTR [rbp-0x18],rdx
  4036e8:	mov    rdx,QWORD PTR [rbp-0x18]
  4036ec:	mov    rcx,QWORD PTR [rbp-0x10]
  4036f0:	mov    rax,QWORD PTR [rbp-0x8]
  4036f4:	mov    rsi,rcx
  4036f7:	mov    rdi,rax
  4036fa:	call   4033e0 <_start@@Base+0x1f0>
  4036ff:	mov    QWORD PTR [rbp-0x10],rax
  403703:	mov    rax,QWORD PTR [rbp-0x8]
  403707:	mov    eax,DWORD PTR [rax+0x14]
  40370a:	test   eax,eax
  40370c:	jne    403729 <_start@@Base+0x539>
  40370e:	mov    rdx,QWORD PTR [rbp-0x18]
  403712:	mov    rcx,QWORD PTR [rbp-0x10]
  403716:	mov    rax,QWORD PTR [rbp-0x8]
  40371a:	mov    rsi,rcx
  40371d:	mov    rdi,rax
  403720:	call   4032d6 <_start@@Base+0xe6>
  403725:	mov    QWORD PTR [rbp-0x10],rax
  403729:	mov    rax,QWORD PTR [rbp-0x10]
  40372d:	leave  
  40372e:	ret    
  40372f:	push   rbp
  403730:	mov    rbp,rsp
  403733:	sub    rsp,0x30
  403737:	mov    QWORD PTR [rbp-0x8],rdi
  40373b:	mov    QWORD PTR [rbp-0x10],rsi
  40373f:	mov    QWORD PTR [rbp-0x18],rdx
  403743:	mov    DWORD PTR [rbp-0x1c],ecx
  403746:	mov    QWORD PTR [rbp-0x28],r8
  40374a:	mov    QWORD PTR [rbp-0x30],r9
  40374e:	cmp    DWORD PTR [rbp-0x1c],0x0
  403752:	je     40376f <_start@@Base+0x57f>
  403754:	mov    rdx,QWORD PTR [rbp-0x18]
  403758:	mov    rsi,QWORD PTR [rbp-0x10]
  40375c:	mov    rax,QWORD PTR [rbp-0x8]
  403760:	mov    ecx,0x8
  403765:	mov    rdi,rax
  403768:	call   410986 <flatcc_json_parser_set_error@@Base>
  40376d:	jmp    40377e <_start@@Base+0x58e>
  40376f:	mov    rax,QWORD PTR [rbp-0x30]
  403773:	mov    rdx,QWORD PTR [rbp-0x28]
  403777:	mov    QWORD PTR [rax],rdx
  40377a:	mov    rax,QWORD PTR [rbp-0x10]
  40377e:	leave  
  40377f:	ret    
  403780:	push   rbp
  403781:	mov    rbp,rsp
  403784:	sub    rsp,0x30
  403788:	mov    QWORD PTR [rbp-0x8],rdi
  40378c:	mov    QWORD PTR [rbp-0x10],rsi
  403790:	mov    QWORD PTR [rbp-0x18],rdx
  403794:	mov    DWORD PTR [rbp-0x1c],ecx
  403797:	mov    QWORD PTR [rbp-0x28],r8
  40379b:	mov    QWORD PTR [rbp-0x30],r9
  40379f:	cmp    DWORD PTR [rbp-0x1c],0x0
  4037a3:	je     4037c0 <_start@@Base+0x5d0>
  4037a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4037a9:	mov    rsi,QWORD PTR [rbp-0x10]
  4037ad:	mov    rax,QWORD PTR [rbp-0x8]
  4037b1:	mov    ecx,0x8
  4037b6:	mov    rdi,rax
  4037b9:	call   410986 <flatcc_json_parser_set_error@@Base>
  4037be:	jmp    4037d4 <_start@@Base+0x5e4>
  4037c0:	cmp    QWORD PTR [rbp-0x28],0x0
  4037c5:	setne  al
  4037c8:	mov    edx,eax
  4037ca:	mov    rax,QWORD PTR [rbp-0x30]
  4037ce:	mov    BYTE PTR [rax],dl
  4037d0:	mov    rax,QWORD PTR [rbp-0x10]
  4037d4:	leave  
  4037d5:	ret    
  4037d6:	push   rbp
  4037d7:	mov    rbp,rsp
  4037da:	sub    rsp,0x30
  4037de:	mov    QWORD PTR [rbp-0x8],rdi
  4037e2:	mov    QWORD PTR [rbp-0x10],rsi
  4037e6:	mov    QWORD PTR [rbp-0x18],rdx
  4037ea:	mov    DWORD PTR [rbp-0x1c],ecx
  4037ed:	mov    QWORD PTR [rbp-0x28],r8
  4037f1:	mov    QWORD PTR [rbp-0x30],r9
  4037f5:	cmp    DWORD PTR [rbp-0x1c],0x0
  4037f9:	je     403816 <_start@@Base+0x626>
  4037fb:	mov    rdx,QWORD PTR [rbp-0x18]
  4037ff:	mov    rsi,QWORD PTR [rbp-0x10]
  403803:	mov    rax,QWORD PTR [rbp-0x8]
  403807:	mov    ecx,0x8
  40380c:	mov    rdi,rax
  40380f:	call   410986 <flatcc_json_parser_set_error@@Base>
  403814:	jmp    40384c <_start@@Base+0x65c>
  403816:	mov    eax,0xffffffff
  40381b:	cmp    QWORD PTR [rbp-0x28],rax
  40381f:	jbe    40383c <_start@@Base+0x64c>
  403821:	mov    rdx,QWORD PTR [rbp-0x18]
  403825:	mov    rsi,QWORD PTR [rbp-0x10]
  403829:	mov    rax,QWORD PTR [rbp-0x8]
  40382d:	mov    ecx,0x7
  403832:	mov    rdi,rax
  403835:	call   410986 <flatcc_json_parser_set_error@@Base>
  40383a:	jmp    40384c <_start@@Base+0x65c>
  40383c:	mov    rax,QWORD PTR [rbp-0x28]
  403840:	mov    edx,eax
  403842:	mov    rax,QWORD PTR [rbp-0x30]
  403846:	mov    DWORD PTR [rax],edx
  403848:	mov    rax,QWORD PTR [rbp-0x10]
  40384c:	leave  
  40384d:	ret    
  40384e:	push   rbp
  40384f:	mov    rbp,rsp
  403852:	sub    rsp,0x30
  403856:	mov    QWORD PTR [rbp-0x8],rdi
  40385a:	mov    QWORD PTR [rbp-0x10],rsi
  40385e:	mov    QWORD PTR [rbp-0x18],rdx
  403862:	mov    DWORD PTR [rbp-0x1c],ecx
  403865:	mov    QWORD PTR [rbp-0x28],r8
  403869:	mov    QWORD PTR [rbp-0x30],r9
  40386d:	cmp    DWORD PTR [rbp-0x1c],0x0
  403871:	je     40388e <_start@@Base+0x69e>
  403873:	mov    rdx,QWORD PTR [rbp-0x18]
  403877:	mov    rsi,QWORD PTR [rbp-0x10]
  40387b:	mov    rax,QWORD PTR [rbp-0x8]
  40387f:	mov    ecx,0x8
  403884:	mov    rdi,rax
  403887:	call   410986 <flatcc_json_parser_set_error@@Base>
  40388c:	jmp    4038c4 <_start@@Base+0x6d4>
  40388e:	cmp    QWORD PTR [rbp-0x28],0xffff
  403896:	jbe    4038b3 <_start@@Base+0x6c3>
  403898:	mov    rdx,QWORD PTR [rbp-0x18]
  40389c:	mov    rsi,QWORD PTR [rbp-0x10]
  4038a0:	mov    rax,QWORD PTR [rbp-0x8]
  4038a4:	mov    ecx,0x7
  4038a9:	mov    rdi,rax
  4038ac:	call   410986 <flatcc_json_parser_set_error@@Base>
  4038b1:	jmp    4038c4 <_start@@Base+0x6d4>
  4038b3:	mov    rax,QWORD PTR [rbp-0x28]
  4038b7:	mov    edx,eax
  4038b9:	mov    rax,QWORD PTR [rbp-0x30]
  4038bd:	mov    WORD PTR [rax],dx
  4038c0:	mov    rax,QWORD PTR [rbp-0x10]
  4038c4:	leave  
  4038c5:	ret    
  4038c6:	push   rbp
  4038c7:	mov    rbp,rsp
  4038ca:	sub    rsp,0x30
  4038ce:	mov    QWORD PTR [rbp-0x8],rdi
  4038d2:	mov    QWORD PTR [rbp-0x10],rsi
  4038d6:	mov    QWORD PTR [rbp-0x18],rdx
  4038da:	mov    DWORD PTR [rbp-0x1c],ecx
  4038dd:	mov    QWORD PTR [rbp-0x28],r8
  4038e1:	mov    QWORD PTR [rbp-0x30],r9
  4038e5:	cmp    DWORD PTR [rbp-0x1c],0x0
  4038e9:	je     403906 <_start@@Base+0x716>
  4038eb:	mov    rdx,QWORD PTR [rbp-0x18]
  4038ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4038f3:	mov    rax,QWORD PTR [rbp-0x8]
  4038f7:	mov    ecx,0x8
  4038fc:	mov    rdi,rax
  4038ff:	call   410986 <flatcc_json_parser_set_error@@Base>
  403904:	jmp    40393b <_start@@Base+0x74b>
  403906:	cmp    QWORD PTR [rbp-0x28],0xff
  40390e:	jbe    40392b <_start@@Base+0x73b>
  403910:	mov    rdx,QWORD PTR [rbp-0x18]
  403914:	mov    rsi,QWORD PTR [rbp-0x10]
  403918:	mov    rax,QWORD PTR [rbp-0x8]
  40391c:	mov    ecx,0x7
  403921:	mov    rdi,rax
  403924:	call   410986 <flatcc_json_parser_set_error@@Base>
  403929:	jmp    40393b <_start@@Base+0x74b>
  40392b:	mov    rax,QWORD PTR [rbp-0x28]
  40392f:	mov    edx,eax
  403931:	mov    rax,QWORD PTR [rbp-0x30]
  403935:	mov    BYTE PTR [rax],dl
  403937:	mov    rax,QWORD PTR [rbp-0x10]
  40393b:	leave  
  40393c:	ret    
  40393d:	push   rbp
  40393e:	mov    rbp,rsp
  403941:	sub    rsp,0x30
  403945:	mov    QWORD PTR [rbp-0x8],rdi
  403949:	mov    QWORD PTR [rbp-0x10],rsi
  40394d:	mov    QWORD PTR [rbp-0x18],rdx
  403951:	mov    DWORD PTR [rbp-0x1c],ecx
  403954:	mov    QWORD PTR [rbp-0x28],r8
  403958:	mov    QWORD PTR [rbp-0x30],r9
  40395c:	cmp    DWORD PTR [rbp-0x1c],0x0
  403960:	je     4039a0 <_start@@Base+0x7b0>
  403962:	movabs rax,0x8000000000000000
  40396c:	cmp    QWORD PTR [rbp-0x28],rax
  403970:	jbe    40398d <_start@@Base+0x79d>
  403972:	mov    rdx,QWORD PTR [rbp-0x18]
  403976:	mov    rsi,QWORD PTR [rbp-0x10]
  40397a:	mov    rax,QWORD PTR [rbp-0x8]
  40397e:	mov    ecx,0x8
  403983:	mov    rdi,rax
  403986:	call   410986 <flatcc_json_parser_set_error@@Base>
  40398b:	jmp    4039d3 <_start@@Base+0x7e3>
  40398d:	mov    rax,QWORD PTR [rbp-0x28]
  403991:	neg    rax
  403994:	mov    rdx,rax
  403997:	mov    rax,QWORD PTR [rbp-0x30]
  40399b:	mov    QWORD PTR [rax],rdx
  40399e:	jmp    4039cf <_start@@Base+0x7df>
  4039a0:	mov    rax,QWORD PTR [rbp-0x28]
  4039a4:	test   rax,rax
  4039a7:	jns    4039c4 <_start@@Base+0x7d4>
  4039a9:	mov    rdx,QWORD PTR [rbp-0x18]
  4039ad:	mov    rsi,QWORD PTR [rbp-0x10]
  4039b1:	mov    rax,QWORD PTR [rbp-0x8]
  4039b5:	mov    ecx,0x7
  4039ba:	mov    rdi,rax
  4039bd:	call   410986 <flatcc_json_parser_set_error@@Base>
  4039c2:	jmp    4039d3 <_start@@Base+0x7e3>
  4039c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4039c8:	mov    rax,QWORD PTR [rbp-0x30]
  4039cc:	mov    QWORD PTR [rax],rdx
  4039cf:	mov    rax,QWORD PTR [rbp-0x10]
  4039d3:	leave  
  4039d4:	ret    
  4039d5:	push   rbp
  4039d6:	mov    rbp,rsp
  4039d9:	sub    rsp,0x30
  4039dd:	mov    QWORD PTR [rbp-0x8],rdi
  4039e1:	mov    QWORD PTR [rbp-0x10],rsi
  4039e5:	mov    QWORD PTR [rbp-0x18],rdx
  4039e9:	mov    DWORD PTR [rbp-0x1c],ecx
  4039ec:	mov    QWORD PTR [rbp-0x28],r8
  4039f0:	mov    QWORD PTR [rbp-0x30],r9
  4039f4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4039f8:	je     403a30 <_start@@Base+0x840>
  4039fa:	mov    eax,0x80000000
  4039ff:	cmp    QWORD PTR [rbp-0x28],rax
  403a03:	jbe    403a20 <_start@@Base+0x830>
  403a05:	mov    rdx,QWORD PTR [rbp-0x18]
  403a09:	mov    rsi,QWORD PTR [rbp-0x10]
  403a0d:	mov    rax,QWORD PTR [rbp-0x8]
  403a11:	mov    ecx,0x8
  403a16:	mov    rdi,rax
  403a19:	call   410986 <flatcc_json_parser_set_error@@Base>
  403a1e:	jmp    403a65 <_start@@Base+0x875>
  403a20:	mov    rax,QWORD PTR [rbp-0x28]
  403a24:	neg    eax
  403a26:	mov    edx,eax
  403a28:	mov    rax,QWORD PTR [rbp-0x30]
  403a2c:	mov    DWORD PTR [rax],edx
  403a2e:	jmp    403a61 <_start@@Base+0x871>
  403a30:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  403a38:	jbe    403a55 <_start@@Base+0x865>
  403a3a:	mov    rdx,QWORD PTR [rbp-0x18]
  403a3e:	mov    rsi,QWORD PTR [rbp-0x10]
  403a42:	mov    rax,QWORD PTR [rbp-0x8]
  403a46:	mov    ecx,0x7
  403a4b:	mov    rdi,rax
  403a4e:	call   410986 <flatcc_json_parser_set_error@@Base>
  403a53:	jmp    403a65 <_start@@Base+0x875>
  403a55:	mov    rax,QWORD PTR [rbp-0x28]
  403a59:	mov    edx,eax
  403a5b:	mov    rax,QWORD PTR [rbp-0x30]
  403a5f:	mov    DWORD PTR [rax],edx
  403a61:	mov    rax,QWORD PTR [rbp-0x10]
  403a65:	leave  
  403a66:	ret    
  403a67:	push   rbp
  403a68:	mov    rbp,rsp
  403a6b:	sub    rsp,0x30
  403a6f:	mov    QWORD PTR [rbp-0x8],rdi
  403a73:	mov    QWORD PTR [rbp-0x10],rsi
  403a77:	mov    QWORD PTR [rbp-0x18],rdx
  403a7b:	mov    DWORD PTR [rbp-0x1c],ecx
  403a7e:	mov    QWORD PTR [rbp-0x28],r8
  403a82:	mov    QWORD PTR [rbp-0x30],r9
  403a86:	cmp    DWORD PTR [rbp-0x1c],0x0
  403a8a:	je     403ac2 <_start@@Base+0x8d2>
  403a8c:	cmp    QWORD PTR [rbp-0x28],0x8000
  403a94:	jbe    403ab1 <_start@@Base+0x8c1>
  403a96:	mov    rdx,QWORD PTR [rbp-0x18]
  403a9a:	mov    rsi,QWORD PTR [rbp-0x10]
  403a9e:	mov    rax,QWORD PTR [rbp-0x8]
  403aa2:	mov    ecx,0x8
  403aa7:	mov    rdi,rax
  403aaa:	call   410986 <flatcc_json_parser_set_error@@Base>
  403aaf:	jmp    403af8 <_start@@Base+0x908>
  403ab1:	mov    rax,QWORD PTR [rbp-0x28]
  403ab5:	neg    eax
  403ab7:	mov    edx,eax
  403ab9:	mov    rax,QWORD PTR [rbp-0x30]
  403abd:	mov    WORD PTR [rax],dx
  403ac0:	jmp    403af4 <_start@@Base+0x904>
  403ac2:	cmp    QWORD PTR [rbp-0x28],0x7fff
  403aca:	jbe    403ae7 <_start@@Base+0x8f7>
  403acc:	mov    rdx,QWORD PTR [rbp-0x18]
  403ad0:	mov    rsi,QWORD PTR [rbp-0x10]
  403ad4:	mov    rax,QWORD PTR [rbp-0x8]
  403ad8:	mov    ecx,0x7
  403add:	mov    rdi,rax
  403ae0:	call   410986 <flatcc_json_parser_set_error@@Base>
  403ae5:	jmp    403af8 <_start@@Base+0x908>
  403ae7:	mov    rax,QWORD PTR [rbp-0x28]
  403aeb:	mov    edx,eax
  403aed:	mov    rax,QWORD PTR [rbp-0x30]
  403af1:	mov    WORD PTR [rax],dx
  403af4:	mov    rax,QWORD PTR [rbp-0x10]
  403af8:	leave  
  403af9:	ret    
  403afa:	push   rbp
  403afb:	mov    rbp,rsp
  403afe:	sub    rsp,0x30
  403b02:	mov    QWORD PTR [rbp-0x8],rdi
  403b06:	mov    QWORD PTR [rbp-0x10],rsi
  403b0a:	mov    QWORD PTR [rbp-0x18],rdx
  403b0e:	mov    DWORD PTR [rbp-0x1c],ecx
  403b11:	mov    QWORD PTR [rbp-0x28],r8
  403b15:	mov    QWORD PTR [rbp-0x30],r9
  403b19:	cmp    DWORD PTR [rbp-0x1c],0x0
  403b1d:	je     403b54 <_start@@Base+0x964>
  403b1f:	cmp    QWORD PTR [rbp-0x28],0x80
  403b27:	jbe    403b44 <_start@@Base+0x954>
  403b29:	mov    rdx,QWORD PTR [rbp-0x18]
  403b2d:	mov    rsi,QWORD PTR [rbp-0x10]
  403b31:	mov    rax,QWORD PTR [rbp-0x8]
  403b35:	mov    ecx,0x8
  403b3a:	mov    rdi,rax
  403b3d:	call   410986 <flatcc_json_parser_set_error@@Base>
  403b42:	jmp    403b86 <_start@@Base+0x996>
  403b44:	mov    rax,QWORD PTR [rbp-0x28]
  403b48:	neg    eax
  403b4a:	mov    edx,eax
  403b4c:	mov    rax,QWORD PTR [rbp-0x30]
  403b50:	mov    BYTE PTR [rax],dl
  403b52:	jmp    403b82 <_start@@Base+0x992>
  403b54:	cmp    QWORD PTR [rbp-0x28],0x7f
  403b59:	jbe    403b76 <_start@@Base+0x986>
  403b5b:	mov    rdx,QWORD PTR [rbp-0x18]
  403b5f:	mov    rsi,QWORD PTR [rbp-0x10]
  403b63:	mov    rax,QWORD PTR [rbp-0x8]
  403b67:	mov    ecx,0x7
  403b6c:	mov    rdi,rax
  403b6f:	call   410986 <flatcc_json_parser_set_error@@Base>
  403b74:	jmp    403b86 <_start@@Base+0x996>
  403b76:	mov    rax,QWORD PTR [rbp-0x28]
  403b7a:	mov    edx,eax
  403b7c:	mov    rax,QWORD PTR [rbp-0x30]
  403b80:	mov    BYTE PTR [rax],dl
  403b82:	mov    rax,QWORD PTR [rbp-0x10]
  403b86:	leave  
  403b87:	ret    
  403b88:	push   rbp
  403b89:	mov    rbp,rsp
  403b8c:	mov    QWORD PTR [rbp-0x8],rdi
  403b90:	mov    QWORD PTR [rbp-0x10],rsi
  403b94:	mov    QWORD PTR [rbp-0x18],rdx
  403b98:	mov    DWORD PTR [rbp-0x1c],ecx
  403b9b:	mov    QWORD PTR [rbp-0x28],r8
  403b9f:	mov    QWORD PTR [rbp-0x30],r9
  403ba3:	cmp    DWORD PTR [rbp-0x1c],0x0
  403ba7:	je     403bdc <_start@@Base+0x9ec>
  403ba9:	mov    rax,QWORD PTR [rbp-0x28]
  403bad:	test   rax,rax
  403bb0:	js     403bb9 <_start@@Base+0x9c9>
  403bb2:	vcvtsi2ss xmm0,xmm0,rax
  403bb7:	jmp    403bce <_start@@Base+0x9de>
  403bb9:	mov    rdx,rax
  403bbc:	shr    rdx,1
  403bbf:	and    eax,0x1
  403bc2:	or     rdx,rax
  403bc5:	vcvtsi2ss xmm0,xmm0,rdx
  403bca:	vaddss xmm0,xmm0,xmm0
  403bce:	vmovss xmm1,DWORD PTR [rip+0x1077a]        # 414350 <g_data@@Base+0x2f0>
  403bd6:	vxorps xmm0,xmm0,xmm1
  403bda:	jmp    403c01 <_start@@Base+0xa11>
  403bdc:	mov    rax,QWORD PTR [rbp-0x28]
  403be0:	test   rax,rax
  403be3:	js     403bec <_start@@Base+0x9fc>
  403be5:	vcvtsi2ss xmm0,xmm0,rax
  403bea:	jmp    403c01 <_start@@Base+0xa11>
  403bec:	mov    rdx,rax
  403bef:	shr    rdx,1
  403bf2:	and    eax,0x1
  403bf5:	or     rdx,rax
  403bf8:	vcvtsi2ss xmm0,xmm0,rdx
  403bfd:	vaddss xmm0,xmm0,xmm0
  403c01:	mov    rax,QWORD PTR [rbp-0x30]
  403c05:	vmovss DWORD PTR [rax],xmm0
  403c09:	mov    rax,QWORD PTR [rbp-0x10]
  403c0d:	pop    rbp
  403c0e:	ret    
  403c0f:	push   rbp
  403c10:	mov    rbp,rsp
  403c13:	mov    QWORD PTR [rbp-0x8],rdi
  403c17:	mov    QWORD PTR [rbp-0x10],rsi
  403c1b:	mov    QWORD PTR [rbp-0x18],rdx
  403c1f:	mov    DWORD PTR [rbp-0x1c],ecx
  403c22:	mov    QWORD PTR [rbp-0x28],r8
  403c26:	mov    QWORD PTR [rbp-0x30],r9
  403c2a:	cmp    DWORD PTR [rbp-0x1c],0x0
  403c2e:	je     403c63 <_start@@Base+0xa73>
  403c30:	mov    rax,QWORD PTR [rbp-0x28]
  403c34:	test   rax,rax
  403c37:	js     403c40 <_start@@Base+0xa50>
  403c39:	vcvtsi2sd xmm0,xmm0,rax
  403c3e:	jmp    403c55 <_start@@Base+0xa65>
  403c40:	mov    rdx,rax
  403c43:	shr    rdx,1
  403c46:	and    eax,0x1
  403c49:	or     rdx,rax
  403c4c:	vcvtsi2sd xmm0,xmm0,rdx
  403c51:	vaddsd xmm0,xmm0,xmm0
  403c55:	vmovq  xmm1,QWORD PTR [rip+0x10703]        # 414360 <g_data@@Base+0x300>
  403c5d:	vxorpd xmm0,xmm0,xmm1
  403c61:	jmp    403c88 <_start@@Base+0xa98>
  403c63:	mov    rax,QWORD PTR [rbp-0x28]
  403c67:	test   rax,rax
  403c6a:	js     403c73 <_start@@Base+0xa83>
  403c6c:	vcvtsi2sd xmm0,xmm0,rax
  403c71:	jmp    403c88 <_start@@Base+0xa98>
  403c73:	mov    rdx,rax
  403c76:	shr    rdx,1
  403c79:	and    eax,0x1
  403c7c:	or     rdx,rax
  403c7f:	vcvtsi2sd xmm0,xmm0,rdx
  403c84:	vaddsd xmm0,xmm0,xmm0
  403c88:	mov    rax,QWORD PTR [rbp-0x30]
  403c8c:	vmovsd QWORD PTR [rax],xmm0
  403c90:	mov    rax,QWORD PTR [rbp-0x10]
  403c94:	pop    rbp
  403c95:	ret    
  403c96:	push   rbp
  403c97:	mov    rbp,rsp
  403c9a:	sub    rsp,0x40
  403c9e:	mov    QWORD PTR [rbp-0x28],rdi
  403ca2:	mov    QWORD PTR [rbp-0x30],rsi
  403ca6:	mov    QWORD PTR [rbp-0x38],rdx
  403caa:	mov    QWORD PTR [rbp-0x40],rcx
  403cae:	mov    rax,QWORD PTR fs:0x28
  403cb7:	mov    QWORD PTR [rbp-0x8],rax
  403cbb:	xor    eax,eax
  403cbd:	mov    QWORD PTR [rbp-0x18],0x0
  403cc5:	mov    DWORD PTR [rbp-0x1c],0x0
  403ccc:	mov    rax,QWORD PTR [rbp-0x30]
  403cd0:	mov    QWORD PTR [rbp-0x10],rax
  403cd4:	mov    rax,QWORD PTR [rbp-0x40]
  403cd8:	mov    DWORD PTR [rax],0x0
  403cde:	mov    rax,QWORD PTR [rbp-0x30]
  403ce2:	cmp    rax,QWORD PTR [rbp-0x38]
  403ce6:	jne    403cee <_start@@Base+0xafe>
  403ce8:	mov    rax,QWORD PTR [rbp-0x30]
  403cec:	jmp    403d46 <_start@@Base+0xb56>
  403cee:	lea    rdi,[rbp-0x18]
  403cf2:	lea    rcx,[rbp-0x1c]
  403cf6:	mov    rdx,QWORD PTR [rbp-0x38]
  403cfa:	mov    rsi,QWORD PTR [rbp-0x30]
  403cfe:	mov    rax,QWORD PTR [rbp-0x28]
  403d02:	mov    r8,rdi
  403d05:	mov    rdi,rax
  403d08:	call   41204e <flatcc_json_parser_integer@@Base>
  403d0d:	mov    QWORD PTR [rbp-0x30],rax
  403d11:	mov    rax,QWORD PTR [rbp-0x30]
  403d15:	cmp    rax,QWORD PTR [rbp-0x10]
  403d19:	je     403d42 <_start@@Base+0xb52>
  403d1b:	mov    rdi,QWORD PTR [rbp-0x18]
  403d1f:	mov    ecx,DWORD PTR [rbp-0x1c]
  403d22:	mov    r8,QWORD PTR [rbp-0x40]
  403d26:	mov    rdx,QWORD PTR [rbp-0x38]
  403d2a:	mov    rsi,QWORD PTR [rbp-0x30]
  403d2e:	mov    rax,QWORD PTR [rbp-0x28]
  403d32:	mov    r9,r8
  403d35:	mov    r8,rdi
  403d38:	mov    rdi,rax
  403d3b:	call   4037d6 <_start@@Base+0x5e6>
  403d40:	jmp    403d46 <_start@@Base+0xb56>
  403d42:	mov    rax,QWORD PTR [rbp-0x30]
  403d46:	mov    rdx,QWORD PTR [rbp-0x8]
  403d4a:	xor    rdx,QWORD PTR fs:0x28
  403d53:	je     403d5a <_start@@Base+0xb6a>
  403d55:	call   403140 <__stack_chk_fail@plt>
  403d5a:	leave  
  403d5b:	ret    
  403d5c:	push   rbp
  403d5d:	mov    rbp,rsp
  403d60:	sub    rsp,0x40
  403d64:	mov    QWORD PTR [rbp-0x28],rdi
  403d68:	mov    QWORD PTR [rbp-0x30],rsi
  403d6c:	mov    QWORD PTR [rbp-0x38],rdx
  403d70:	mov    QWORD PTR [rbp-0x40],rcx
  403d74:	mov    rax,QWORD PTR fs:0x28
  403d7d:	mov    QWORD PTR [rbp-0x8],rax
  403d81:	xor    eax,eax
  403d83:	mov    QWORD PTR [rbp-0x18],0x0
  403d8b:	mov    DWORD PTR [rbp-0x1c],0x0
  403d92:	mov    rax,QWORD PTR [rbp-0x30]
  403d96:	mov    QWORD PTR [rbp-0x10],rax
  403d9a:	mov    rax,QWORD PTR [rbp-0x40]
  403d9e:	mov    BYTE PTR [rax],0x0
  403da1:	mov    rax,QWORD PTR [rbp-0x30]
  403da5:	cmp    rax,QWORD PTR [rbp-0x38]
  403da9:	jne    403db1 <_start@@Base+0xbc1>
  403dab:	mov    rax,QWORD PTR [rbp-0x30]
  403daf:	jmp    403e09 <_start@@Base+0xc19>
  403db1:	lea    rdi,[rbp-0x18]
  403db5:	lea    rcx,[rbp-0x1c]
  403db9:	mov    rdx,QWORD PTR [rbp-0x38]
  403dbd:	mov    rsi,QWORD PTR [rbp-0x30]
  403dc1:	mov    rax,QWORD PTR [rbp-0x28]
  403dc5:	mov    r8,rdi
  403dc8:	mov    rdi,rax
  403dcb:	call   41204e <flatcc_json_parser_integer@@Base>
  403dd0:	mov    QWORD PTR [rbp-0x30],rax
  403dd4:	mov    rax,QWORD PTR [rbp-0x30]
  403dd8:	cmp    rax,QWORD PTR [rbp-0x10]
  403ddc:	je     403e05 <_start@@Base+0xc15>
  403dde:	mov    rdi,QWORD PTR [rbp-0x18]
  403de2:	mov    ecx,DWORD PTR [rbp-0x1c]
  403de5:	mov    r8,QWORD PTR [rbp-0x40]
  403de9:	mov    rdx,QWORD PTR [rbp-0x38]
  403ded:	mov    rsi,QWORD PTR [rbp-0x30]
  403df1:	mov    rax,QWORD PTR [rbp-0x28]
  403df5:	mov    r9,r8
  403df8:	mov    r8,rdi
  403dfb:	mov    rdi,rax
  403dfe:	call   4038c6 <_start@@Base+0x6d6>
  403e03:	jmp    403e09 <_start@@Base+0xc19>
  403e05:	mov    rax,QWORD PTR [rbp-0x30]
  403e09:	mov    rdx,QWORD PTR [rbp-0x8]
  403e0d:	xor    rdx,QWORD PTR fs:0x28
  403e16:	je     403e1d <_start@@Base+0xc2d>
  403e18:	call   403140 <__stack_chk_fail@plt>
  403e1d:	leave  
  403e1e:	ret    
  403e1f:	push   rbp
  403e20:	mov    rbp,rsp
  403e23:	sub    rsp,0x40
  403e27:	mov    QWORD PTR [rbp-0x28],rdi
  403e2b:	mov    QWORD PTR [rbp-0x30],rsi
  403e2f:	mov    QWORD PTR [rbp-0x38],rdx
  403e33:	mov    QWORD PTR [rbp-0x40],rcx
  403e37:	mov    rax,QWORD PTR fs:0x28
  403e40:	mov    QWORD PTR [rbp-0x8],rax
  403e44:	xor    eax,eax
  403e46:	mov    QWORD PTR [rbp-0x18],0x0
  403e4e:	mov    DWORD PTR [rbp-0x1c],0x0
  403e55:	mov    rax,QWORD PTR [rbp-0x30]
  403e59:	mov    QWORD PTR [rbp-0x10],rax
  403e5d:	mov    rax,QWORD PTR [rbp-0x40]
  403e61:	mov    QWORD PTR [rax],0x0
  403e68:	mov    rax,QWORD PTR [rbp-0x30]
  403e6c:	cmp    rax,QWORD PTR [rbp-0x38]
  403e70:	jne    403e78 <_start@@Base+0xc88>
  403e72:	mov    rax,QWORD PTR [rbp-0x30]
  403e76:	jmp    403ed0 <_start@@Base+0xce0>
  403e78:	lea    rdi,[rbp-0x18]
  403e7c:	lea    rcx,[rbp-0x1c]
  403e80:	mov    rdx,QWORD PTR [rbp-0x38]
  403e84:	mov    rsi,QWORD PTR [rbp-0x30]
  403e88:	mov    rax,QWORD PTR [rbp-0x28]
  403e8c:	mov    r8,rdi
  403e8f:	mov    rdi,rax
  403e92:	call   41204e <flatcc_json_parser_integer@@Base>
  403e97:	mov    QWORD PTR [rbp-0x30],rax
  403e9b:	mov    rax,QWORD PTR [rbp-0x30]
  403e9f:	cmp    rax,QWORD PTR [rbp-0x10]
  403ea3:	je     403ecc <_start@@Base+0xcdc>
  403ea5:	mov    rdi,QWORD PTR [rbp-0x18]
  403ea9:	mov    ecx,DWORD PTR [rbp-0x1c]
  403eac:	mov    r8,QWORD PTR [rbp-0x40]
  403eb0:	mov    rdx,QWORD PTR [rbp-0x38]
  403eb4:	mov    rsi,QWORD PTR [rbp-0x30]
  403eb8:	mov    rax,QWORD PTR [rbp-0x28]
  403ebc:	mov    r9,r8
  403ebf:	mov    r8,rdi
  403ec2:	mov    rdi,rax
  403ec5:	call   40393d <_start@@Base+0x74d>
  403eca:	jmp    403ed0 <_start@@Base+0xce0>
  403ecc:	mov    rax,QWORD PTR [rbp-0x30]
  403ed0:	mov    rdx,QWORD PTR [rbp-0x8]
  403ed4:	xor    rdx,QWORD PTR fs:0x28
  403edd:	je     403ee4 <_start@@Base+0xcf4>
  403edf:	call   403140 <__stack_chk_fail@plt>
  403ee4:	leave  
  403ee5:	ret    
  403ee6:	endbr64 
  403eea:	push   rbp
  403eeb:	mov    rbp,rsp
  403eee:	sub    rsp,0x70
  403ef2:	mov    QWORD PTR [rbp-0x48],rdi
  403ef6:	mov    QWORD PTR [rbp-0x50],rsi
  403efa:	mov    QWORD PTR [rbp-0x58],rdx
  403efe:	mov    QWORD PTR [rbp-0x60],rcx
  403f02:	mov    QWORD PTR [rbp-0x68],r8
  403f06:	mov    rax,QWORD PTR fs:0x28
  403f0f:	mov    QWORD PTR [rbp-0x8],rax
  403f13:	xor    eax,eax
  403f15:	mov    QWORD PTR [rbp-0x28],0x0
  403f1d:	mov    DWORD PTR [rbp-0x2c],0x0
  403f24:	mov    rax,QWORD PTR [rbp-0x68]
  403f28:	mov    QWORD PTR [rax],0x0
  403f2f:	mov    rdx,QWORD PTR [rbp-0x58]
  403f33:	mov    rcx,QWORD PTR [rbp-0x50]
  403f37:	mov    rax,QWORD PTR [rbp-0x48]
  403f3b:	mov    rsi,rcx
  403f3e:	mov    rdi,rax
  403f41:	call   4036d4 <_start@@Base+0x4e4>
  403f46:	mov    QWORD PTR [rbp-0x50],rax
  403f4a:	mov    rax,QWORD PTR [rbp-0x50]
  403f4e:	cmp    rax,QWORD PTR [rbp-0x58]
  403f52:	jne    403f5d <_start@@Base+0xd6d>
  403f54:	mov    rax,QWORD PTR [rbp-0x50]
  403f58:	jmp    404070 <_start@@Base+0xe80>
  403f5d:	mov    rax,QWORD PTR [rbp-0x60]
  403f61:	mov    QWORD PTR [rbp-0x18],rax
  403f65:	mov    rax,QWORD PTR [rbp-0x18]
  403f69:	mov    rax,QWORD PTR [rax]
  403f6c:	mov    rdx,QWORD PTR [rbp-0x50]
  403f70:	mov    QWORD PTR [rbp-0x10],rdx
  403f74:	lea    r9,[rbp-0x30]
  403f78:	lea    r8,[rbp-0x20]
  403f7c:	lea    rcx,[rbp-0x34]
  403f80:	mov    rdx,QWORD PTR [rbp-0x58]
  403f84:	mov    rsi,QWORD PTR [rbp-0x10]
  403f88:	mov    rdi,QWORD PTR [rbp-0x48]
  403f8c:	call   rax
  403f8e:	mov    QWORD PTR [rbp-0x50],rax
  403f92:	mov    rax,QWORD PTR [rbp-0x50]
  403f96:	cmp    rax,QWORD PTR [rbp-0x58]
  403f9a:	jne    403fa5 <_start@@Base+0xdb5>
  403f9c:	mov    rax,QWORD PTR [rbp-0x50]
  403fa0:	jmp    404070 <_start@@Base+0xe80>
  403fa5:	mov    rax,QWORD PTR [rbp-0x50]
  403fa9:	cmp    rax,QWORD PTR [rbp-0x10]
  403fad:	jne    403fc0 <_start@@Base+0xdd0>
  403faf:	add    QWORD PTR [rbp-0x18],0x8
  403fb4:	mov    rax,QWORD PTR [rbp-0x18]
  403fb8:	mov    rax,QWORD PTR [rax]
  403fbb:	test   rax,rax
  403fbe:	jne    403f65 <_start@@Base+0xd75>
  403fc0:	mov    rax,QWORD PTR [rbp-0x10]
  403fc4:	cmp    rax,QWORD PTR [rbp-0x50]
  403fc8:	jne    403fe8 <_start@@Base+0xdf8>
  403fca:	mov    rdx,QWORD PTR [rbp-0x58]
  403fce:	mov    rsi,QWORD PTR [rbp-0x50]
  403fd2:	mov    rax,QWORD PTR [rbp-0x48]
  403fd6:	mov    ecx,0x17
  403fdb:	mov    rdi,rax
  403fde:	call   410986 <flatcc_json_parser_set_error@@Base>
  403fe3:	jmp    404070 <_start@@Base+0xe80>
  403fe8:	mov    eax,DWORD PTR [rbp-0x2c]
  403feb:	lea    edx,[rax+0x1]
  403fee:	mov    DWORD PTR [rbp-0x2c],edx
  403ff1:	test   eax,eax
  403ff3:	je     40401b <_start@@Base+0xe2b>
  403ff5:	mov    rax,QWORD PTR [rbp-0x48]
  403ff9:	mov    eax,DWORD PTR [rax+0x14]
  403ffc:	test   eax,eax
  403ffe:	je     40401b <_start@@Base+0xe2b>
  404000:	mov    rdx,QWORD PTR [rbp-0x58]
  404004:	mov    rsi,QWORD PTR [rbp-0x50]
  404008:	mov    rax,QWORD PTR [rbp-0x48]
  40400c:	mov    ecx,0xe
  404011:	mov    rdi,rax
  404014:	call   410986 <flatcc_json_parser_set_error@@Base>
  404019:	jmp    404070 <_start@@Base+0xe80>
  40401b:	mov    rdi,QWORD PTR [rbp-0x20]
  40401f:	mov    ecx,DWORD PTR [rbp-0x34]
  404022:	lea    r8,[rbp-0x28]
  404026:	mov    rdx,QWORD PTR [rbp-0x58]
  40402a:	mov    rsi,QWORD PTR [rbp-0x50]
  40402e:	mov    rax,QWORD PTR [rbp-0x48]
  404032:	mov    r9,r8
  404035:	mov    r8,rdi
  404038:	mov    rdi,rax
  40403b:	call   40372f <_start@@Base+0x53f>
  404040:	cmp    QWORD PTR [rbp-0x58],rax
  404044:	jne    40404c <_start@@Base+0xe5c>
  404046:	mov    rax,QWORD PTR [rbp-0x58]
  40404a:	jmp    404070 <_start@@Base+0xe80>
  40404c:	mov    rax,QWORD PTR [rbp-0x68]
  404050:	mov    rdx,QWORD PTR [rax]
  404053:	mov    rax,QWORD PTR [rbp-0x28]
  404057:	add    rdx,rax
  40405a:	mov    rax,QWORD PTR [rbp-0x68]
  40405e:	mov    QWORD PTR [rax],rdx
  404061:	mov    eax,DWORD PTR [rbp-0x30]
  404064:	test   eax,eax
  404066:	jne    403f5d <_start@@Base+0xd6d>
  40406c:	mov    rax,QWORD PTR [rbp-0x50]
  404070:	mov    rdi,QWORD PTR [rbp-0x8]
  404074:	xor    rdi,QWORD PTR fs:0x28
  40407d:	je     404084 <_start@@Base+0xe94>
  40407f:	call   403140 <__stack_chk_fail@plt>
  404084:	leave  
  404085:	ret    
  404086:	endbr64 
  40408a:	push   rbp
  40408b:	mov    rbp,rsp
  40408e:	sub    rsp,0x60
  404092:	mov    QWORD PTR [rbp-0x38],rdi
  404096:	mov    QWORD PTR [rbp-0x40],rsi
  40409a:	mov    QWORD PTR [rbp-0x48],rdx
  40409e:	mov    QWORD PTR [rbp-0x50],rcx
  4040a2:	mov    QWORD PTR [rbp-0x58],r8
  4040a6:	mov    rax,QWORD PTR fs:0x28
  4040af:	mov    QWORD PTR [rbp-0x8],rax
  4040b3:	xor    eax,eax
  4040b5:	mov    DWORD PTR [rbp-0x30],0x0
  4040bc:	mov    DWORD PTR [rbp-0x24],0x0
  4040c3:	mov    rax,QWORD PTR [rbp-0x58]
  4040c7:	mov    DWORD PTR [rax],0x0
  4040cd:	mov    rdx,QWORD PTR [rbp-0x48]
  4040d1:	mov    rcx,QWORD PTR [rbp-0x40]
  4040d5:	mov    rax,QWORD PTR [rbp-0x38]
  4040d9:	mov    rsi,rcx
  4040dc:	mov    rdi,rax
  4040df:	call   4036d4 <_start@@Base+0x4e4>
  4040e4:	mov    QWORD PTR [rbp-0x40],rax
  4040e8:	mov    rax,QWORD PTR [rbp-0x40]
  4040ec:	cmp    rax,QWORD PTR [rbp-0x48]
  4040f0:	jne    4040fb <_start@@Base+0xf0b>
  4040f2:	mov    rax,QWORD PTR [rbp-0x40]
  4040f6:	jmp    40420a <_start@@Base+0x101a>
  4040fb:	mov    rax,QWORD PTR [rbp-0x50]
  4040ff:	mov    QWORD PTR [rbp-0x18],rax
  404103:	mov    rax,QWORD PTR [rbp-0x18]
  404107:	mov    rax,QWORD PTR [rax]
  40410a:	mov    rdx,QWORD PTR [rbp-0x40]
  40410e:	mov    QWORD PTR [rbp-0x10],rdx
  404112:	lea    r9,[rbp-0x28]
  404116:	lea    r8,[rbp-0x20]
  40411a:	lea    rcx,[rbp-0x2c]
  40411e:	mov    rdx,QWORD PTR [rbp-0x48]
  404122:	mov    rsi,QWORD PTR [rbp-0x10]
  404126:	mov    rdi,QWORD PTR [rbp-0x38]
  40412a:	call   rax
  40412c:	mov    QWORD PTR [rbp-0x40],rax
  404130:	mov    rax,QWORD PTR [rbp-0x40]
  404134:	cmp    rax,QWORD PTR [rbp-0x48]
  404138:	jne    404143 <_start@@Base+0xf53>
  40413a:	mov    rax,QWORD PTR [rbp-0x40]
  40413e:	jmp    40420a <_start@@Base+0x101a>
  404143:	mov    rax,QWORD PTR [rbp-0x40]
  404147:	cmp    rax,QWORD PTR [rbp-0x10]
  40414b:	jne    40415e <_start@@Base+0xf6e>
  40414d:	add    QWORD PTR [rbp-0x18],0x8
  404152:	mov    rax,QWORD PTR [rbp-0x18]
  404156:	mov    rax,QWORD PTR [rax]
  404159:	test   rax,rax
  40415c:	jne    404103 <_start@@Base+0xf13>
  40415e:	mov    rax,QWORD PTR [rbp-0x10]
  404162:	cmp    rax,QWORD PTR [rbp-0x40]
  404166:	jne    404186 <_start@@Base+0xf96>
  404168:	mov    rdx,QWORD PTR [rbp-0x48]
  40416c:	mov    rsi,QWORD PTR [rbp-0x40]
  404170:	mov    rax,QWORD PTR [rbp-0x38]
  404174:	mov    ecx,0x17
  404179:	mov    rdi,rax
  40417c:	call   410986 <flatcc_json_parser_set_error@@Base>
  404181:	jmp    40420a <_start@@Base+0x101a>
  404186:	mov    eax,DWORD PTR [rbp-0x24]
  404189:	lea    edx,[rax+0x1]
  40418c:	mov    DWORD PTR [rbp-0x24],edx
  40418f:	test   eax,eax
  404191:	je     4041b9 <_start@@Base+0xfc9>
  404193:	mov    rax,QWORD PTR [rbp-0x38]
  404197:	mov    eax,DWORD PTR [rax+0x14]
  40419a:	test   eax,eax
  40419c:	je     4041b9 <_start@@Base+0xfc9>
  40419e:	mov    rdx,QWORD PTR [rbp-0x48]
  4041a2:	mov    rsi,QWORD PTR [rbp-0x40]
  4041a6:	mov    rax,QWORD PTR [rbp-0x38]
  4041aa:	mov    ecx,0xe
  4041af:	mov    rdi,rax
  4041b2:	call   410986 <flatcc_json_parser_set_error@@Base>
  4041b7:	jmp    40420a <_start@@Base+0x101a>
  4041b9:	mov    rdi,QWORD PTR [rbp-0x20]
  4041bd:	mov    ecx,DWORD PTR [rbp-0x2c]
  4041c0:	lea    r8,[rbp-0x30]
  4041c4:	mov    rdx,QWORD PTR [rbp-0x48]
  4041c8:	mov    rsi,QWORD PTR [rbp-0x40]
  4041cc:	mov    rax,QWORD PTR [rbp-0x38]
  4041d0:	mov    r9,r8
  4041d3:	mov    r8,rdi
  4041d6:	mov    rdi,rax
  4041d9:	call   4037d6 <_start@@Base+0x5e6>
  4041de:	cmp    QWORD PTR [rbp-0x48],rax
  4041e2:	jne    4041ea <_start@@Base+0xffa>
  4041e4:	mov    rax,QWORD PTR [rbp-0x48]
  4041e8:	jmp    40420a <_start@@Base+0x101a>
  4041ea:	mov    rax,QWORD PTR [rbp-0x58]
  4041ee:	mov    edx,DWORD PTR [rax]
  4041f0:	mov    eax,DWORD PTR [rbp-0x30]
  4041f3:	add    edx,eax
  4041f5:	mov    rax,QWORD PTR [rbp-0x58]
  4041f9:	mov    DWORD PTR [rax],edx
  4041fb:	mov    eax,DWORD PTR [rbp-0x28]
  4041fe:	test   eax,eax
  404200:	jne    4040fb <_start@@Base+0xf0b>
  404206:	mov    rax,QWORD PTR [rbp-0x40]
  40420a:	mov    rdi,QWORD PTR [rbp-0x8]
  40420e:	xor    rdi,QWORD PTR fs:0x28
  404217:	je     40421e <_start@@Base+0x102e>
  404219:	call   403140 <__stack_chk_fail@plt>
  40421e:	leave  
  40421f:	ret    
  404220:	endbr64 
  404224:	push   rbp
  404225:	mov    rbp,rsp
  404228:	sub    rsp,0x60
  40422c:	mov    QWORD PTR [rbp-0x38],rdi
  404230:	mov    QWORD PTR [rbp-0x40],rsi
  404234:	mov    QWORD PTR [rbp-0x48],rdx
  404238:	mov    QWORD PTR [rbp-0x50],rcx
  40423c:	mov    QWORD PTR [rbp-0x58],r8
  404240:	mov    rax,QWORD PTR fs:0x28
  404249:	mov    QWORD PTR [rbp-0x8],rax
  40424d:	xor    eax,eax
  40424f:	mov    WORD PTR [rbp-0x2e],0x0
  404255:	mov    DWORD PTR [rbp-0x24],0x0
  40425c:	mov    rax,QWORD PTR [rbp-0x58]
  404260:	mov    WORD PTR [rax],0x0
  404265:	mov    rdx,QWORD PTR [rbp-0x48]
  404269:	mov    rcx,QWORD PTR [rbp-0x40]
  40426d:	mov    rax,QWORD PTR [rbp-0x38]
  404271:	mov    rsi,rcx
  404274:	mov    rdi,rax
  404277:	call   4036d4 <_start@@Base+0x4e4>
  40427c:	mov    QWORD PTR [rbp-0x40],rax
  404280:	mov    rax,QWORD PTR [rbp-0x40]
  404284:	cmp    rax,QWORD PTR [rbp-0x48]
  404288:	jne    404293 <_start@@Base+0x10a3>
  40428a:	mov    rax,QWORD PTR [rbp-0x40]
  40428e:	jmp    4043a5 <_start@@Base+0x11b5>
  404293:	mov    rax,QWORD PTR [rbp-0x50]
  404297:	mov    QWORD PTR [rbp-0x18],rax
  40429b:	mov    rax,QWORD PTR [rbp-0x18]
  40429f:	mov    rax,QWORD PTR [rax]
  4042a2:	mov    rdx,QWORD PTR [rbp-0x40]
  4042a6:	mov    QWORD PTR [rbp-0x10],rdx
  4042aa:	lea    r9,[rbp-0x28]
  4042ae:	lea    r8,[rbp-0x20]
  4042b2:	lea    rcx,[rbp-0x2c]
  4042b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4042ba:	mov    rsi,QWORD PTR [rbp-0x10]
  4042be:	mov    rdi,QWORD PTR [rbp-0x38]
  4042c2:	call   rax
  4042c4:	mov    QWORD PTR [rbp-0x40],rax
  4042c8:	mov    rax,QWORD PTR [rbp-0x40]
  4042cc:	cmp    rax,QWORD PTR [rbp-0x48]
  4042d0:	jne    4042db <_start@@Base+0x10eb>
  4042d2:	mov    rax,QWORD PTR [rbp-0x40]
  4042d6:	jmp    4043a5 <_start@@Base+0x11b5>
  4042db:	mov    rax,QWORD PTR [rbp-0x40]
  4042df:	cmp    rax,QWORD PTR [rbp-0x10]
  4042e3:	jne    4042f6 <_start@@Base+0x1106>
  4042e5:	add    QWORD PTR [rbp-0x18],0x8
  4042ea:	mov    rax,QWORD PTR [rbp-0x18]
  4042ee:	mov    rax,QWORD PTR [rax]
  4042f1:	test   rax,rax
  4042f4:	jne    40429b <_start@@Base+0x10ab>
  4042f6:	mov    rax,QWORD PTR [rbp-0x10]
  4042fa:	cmp    rax,QWORD PTR [rbp-0x40]
  4042fe:	jne    40431e <_start@@Base+0x112e>
  404300:	mov    rdx,QWORD PTR [rbp-0x48]
  404304:	mov    rsi,QWORD PTR [rbp-0x40]
  404308:	mov    rax,QWORD PTR [rbp-0x38]
  40430c:	mov    ecx,0x17
  404311:	mov    rdi,rax
  404314:	call   410986 <flatcc_json_parser_set_error@@Base>
  404319:	jmp    4043a5 <_start@@Base+0x11b5>
  40431e:	mov    eax,DWORD PTR [rbp-0x24]
  404321:	lea    edx,[rax+0x1]
  404324:	mov    DWORD PTR [rbp-0x24],edx
  404327:	test   eax,eax
  404329:	je     404351 <_start@@Base+0x1161>
  40432b:	mov    rax,QWORD PTR [rbp-0x38]
  40432f:	mov    eax,DWORD PTR [rax+0x14]
  404332:	test   eax,eax
  404334:	je     404351 <_start@@Base+0x1161>
  404336:	mov    rdx,QWORD PTR [rbp-0x48]
  40433a:	mov    rsi,QWORD PTR [rbp-0x40]
  40433e:	mov    rax,QWORD PTR [rbp-0x38]
  404342:	mov    ecx,0xe
  404347:	mov    rdi,rax
  40434a:	call   410986 <flatcc_json_parser_set_error@@Base>
  40434f:	jmp    4043a5 <_start@@Base+0x11b5>
  404351:	mov    rdi,QWORD PTR [rbp-0x20]
  404355:	mov    ecx,DWORD PTR [rbp-0x2c]
  404358:	lea    r8,[rbp-0x2e]
  40435c:	mov    rdx,QWORD PTR [rbp-0x48]
  404360:	mov    rsi,QWORD PTR [rbp-0x40]
  404364:	mov    rax,QWORD PTR [rbp-0x38]
  404368:	mov    r9,r8
  40436b:	mov    r8,rdi
  40436e:	mov    rdi,rax
  404371:	call   40384e <_start@@Base+0x65e>
  404376:	cmp    QWORD PTR [rbp-0x48],rax
  40437a:	jne    404382 <_start@@Base+0x1192>
  40437c:	mov    rax,QWORD PTR [rbp-0x48]
  404380:	jmp    4043a5 <_start@@Base+0x11b5>
  404382:	mov    rax,QWORD PTR [rbp-0x58]
  404386:	movzx  edx,WORD PTR [rax]
  404389:	movzx  eax,WORD PTR [rbp-0x2e]
  40438d:	add    eax,edx
  40438f:	mov    rdx,QWORD PTR [rbp-0x58]
  404393:	mov    WORD PTR [rdx],ax
  404396:	mov    eax,DWORD PTR [rbp-0x28]
  404399:	test   eax,eax
  40439b:	jne    404293 <_start@@Base+0x10a3>
  4043a1:	mov    rax,QWORD PTR [rbp-0x40]
  4043a5:	mov    rdi,QWORD PTR [rbp-0x8]
  4043a9:	xor    rdi,QWORD PTR fs:0x28
  4043b2:	je     4043b9 <_start@@Base+0x11c9>
  4043b4:	call   403140 <__stack_chk_fail@plt>
  4043b9:	leave  
  4043ba:	ret    
  4043bb:	endbr64 
  4043bf:	push   rbp
  4043c0:	mov    rbp,rsp
  4043c3:	sub    rsp,0x60
  4043c7:	mov    QWORD PTR [rbp-0x38],rdi
  4043cb:	mov    QWORD PTR [rbp-0x40],rsi
  4043cf:	mov    QWORD PTR [rbp-0x48],rdx
  4043d3:	mov    QWORD PTR [rbp-0x50],rcx
  4043d7:	mov    QWORD PTR [rbp-0x58],r8
  4043db:	mov    rax,QWORD PTR fs:0x28
  4043e4:	mov    QWORD PTR [rbp-0x8],rax
  4043e8:	xor    eax,eax
  4043ea:	mov    BYTE PTR [rbp-0x2d],0x0
  4043ee:	mov    DWORD PTR [rbp-0x24],0x0
  4043f5:	mov    rax,QWORD PTR [rbp-0x58]
  4043f9:	mov    BYTE PTR [rax],0x0
  4043fc:	mov    rdx,QWORD PTR [rbp-0x48]
  404400:	mov    rcx,QWORD PTR [rbp-0x40]
  404404:	mov    rax,QWORD PTR [rbp-0x38]
  404408:	mov    rsi,rcx
  40440b:	mov    rdi,rax
  40440e:	call   4036d4 <_start@@Base+0x4e4>
  404413:	mov    QWORD PTR [rbp-0x40],rax
  404417:	mov    rax,QWORD PTR [rbp-0x40]
  40441b:	cmp    rax,QWORD PTR [rbp-0x48]
  40441f:	jne    40442a <_start@@Base+0x123a>
  404421:	mov    rax,QWORD PTR [rbp-0x40]
  404425:	jmp    40453b <_start@@Base+0x134b>
  40442a:	mov    rax,QWORD PTR [rbp-0x50]
  40442e:	mov    QWORD PTR [rbp-0x18],rax
  404432:	mov    rax,QWORD PTR [rbp-0x18]
  404436:	mov    rax,QWORD PTR [rax]
  404439:	mov    rdx,QWORD PTR [rbp-0x40]
  40443d:	mov    QWORD PTR [rbp-0x10],rdx
  404441:	lea    r9,[rbp-0x28]
  404445:	lea    r8,[rbp-0x20]
  404449:	lea    rcx,[rbp-0x2c]
  40444d:	mov    rdx,QWORD PTR [rbp-0x48]
  404451:	mov    rsi,QWORD PTR [rbp-0x10]
  404455:	mov    rdi,QWORD PTR [rbp-0x38]
  404459:	call   rax
  40445b:	mov    QWORD PTR [rbp-0x40],rax
  40445f:	mov    rax,QWORD PTR [rbp-0x40]
  404463:	cmp    rax,QWORD PTR [rbp-0x48]
  404467:	jne    404472 <_start@@Base+0x1282>
  404469:	mov    rax,QWORD PTR [rbp-0x40]
  40446d:	jmp    40453b <_start@@Base+0x134b>
  404472:	mov    rax,QWORD PTR [rbp-0x40]
  404476:	cmp    rax,QWORD PTR [rbp-0x10]
  40447a:	jne    40448d <_start@@Base+0x129d>
  40447c:	add    QWORD PTR [rbp-0x18],0x8
  404481:	mov    rax,QWORD PTR [rbp-0x18]
  404485:	mov    rax,QWORD PTR [rax]
  404488:	test   rax,rax
  40448b:	jne    404432 <_start@@Base+0x1242>
  40448d:	mov    rax,QWORD PTR [rbp-0x10]
  404491:	cmp    rax,QWORD PTR [rbp-0x40]
  404495:	jne    4044b5 <_start@@Base+0x12c5>
  404497:	mov    rdx,QWORD PTR [rbp-0x48]
  40449b:	mov    rsi,QWORD PTR [rbp-0x40]
  40449f:	mov    rax,QWORD PTR [rbp-0x38]
  4044a3:	mov    ecx,0x17
  4044a8:	mov    rdi,rax
  4044ab:	call   410986 <flatcc_json_parser_set_error@@Base>
  4044b0:	jmp    40453b <_start@@Base+0x134b>
  4044b5:	mov    eax,DWORD PTR [rbp-0x24]
  4044b8:	lea    edx,[rax+0x1]
  4044bb:	mov    DWORD PTR [rbp-0x24],edx
  4044be:	test   eax,eax
  4044c0:	je     4044e8 <_start@@Base+0x12f8>
  4044c2:	mov    rax,QWORD PTR [rbp-0x38]
  4044c6:	mov    eax,DWORD PTR [rax+0x14]
  4044c9:	test   eax,eax
  4044cb:	je     4044e8 <_start@@Base+0x12f8>
  4044cd:	mov    rdx,QWORD PTR [rbp-0x48]
  4044d1:	mov    rsi,QWORD PTR [rbp-0x40]
  4044d5:	mov    rax,QWORD PTR [rbp-0x38]
  4044d9:	mov    ecx,0xe
  4044de:	mov    rdi,rax
  4044e1:	call   410986 <flatcc_json_parser_set_error@@Base>
  4044e6:	jmp    40453b <_start@@Base+0x134b>
  4044e8:	mov    rdi,QWORD PTR [rbp-0x20]
  4044ec:	mov    ecx,DWORD PTR [rbp-0x2c]
  4044ef:	lea    r8,[rbp-0x2d]
  4044f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4044f7:	mov    rsi,QWORD PTR [rbp-0x40]
  4044fb:	mov    rax,QWORD PTR [rbp-0x38]
  4044ff:	mov    r9,r8
  404502:	mov    r8,rdi
  404505:	mov    rdi,rax
  404508:	call   4038c6 <_start@@Base+0x6d6>
  40450d:	cmp    QWORD PTR [rbp-0x48],rax
  404511:	jne    404519 <_start@@Base+0x1329>
  404513:	mov    rax,QWORD PTR [rbp-0x48]
  404517:	jmp    40453b <_start@@Base+0x134b>
  404519:	mov    rax,QWORD PTR [rbp-0x58]
  40451d:	movzx  edx,BYTE PTR [rax]
  404520:	movzx  eax,BYTE PTR [rbp-0x2d]
  404524:	add    eax,edx
  404526:	mov    rdx,QWORD PTR [rbp-0x58]
  40452a:	mov    BYTE PTR [rdx],al
  40452c:	mov    eax,DWORD PTR [rbp-0x28]
  40452f:	test   eax,eax
  404531:	jne    40442a <_start@@Base+0x123a>
  404537:	mov    rax,QWORD PTR [rbp-0x40]
  40453b:	mov    rdi,QWORD PTR [rbp-0x8]
  40453f:	xor    rdi,QWORD PTR fs:0x28
  404548:	je     40454f <_start@@Base+0x135f>
  40454a:	call   403140 <__stack_chk_fail@plt>
  40454f:	leave  
  404550:	ret    
  404551:	endbr64 
  404555:	push   rbp
  404556:	mov    rbp,rsp
  404559:	sub    rsp,0x70
  40455d:	mov    QWORD PTR [rbp-0x48],rdi
  404561:	mov    QWORD PTR [rbp-0x50],rsi
  404565:	mov    QWORD PTR [rbp-0x58],rdx
  404569:	mov    QWORD PTR [rbp-0x60],rcx
  40456d:	mov    QWORD PTR [rbp-0x68],r8
  404571:	mov    rax,QWORD PTR fs:0x28
  40457a:	mov    QWORD PTR [rbp-0x8],rax
  40457e:	xor    eax,eax
  404580:	mov    QWORD PTR [rbp-0x28],0x0
  404588:	mov    DWORD PTR [rbp-0x2c],0x0
  40458f:	mov    rax,QWORD PTR [rbp-0x68]
  404593:	mov    QWORD PTR [rax],0x0
  40459a:	mov    rdx,QWORD PTR [rbp-0x58]
  40459e:	mov    rcx,QWORD PTR [rbp-0x50]
  4045a2:	mov    rax,QWORD PTR [rbp-0x48]
  4045a6:	mov    rsi,rcx
  4045a9:	mov    rdi,rax
  4045ac:	call   4036d4 <_start@@Base+0x4e4>
  4045b1:	mov    QWORD PTR [rbp-0x50],rax
  4045b5:	mov    rax,QWORD PTR [rbp-0x50]
  4045b9:	cmp    rax,QWORD PTR [rbp-0x58]
  4045bd:	jne    4045c8 <_start@@Base+0x13d8>
  4045bf:	mov    rax,QWORD PTR [rbp-0x50]
  4045c3:	jmp    4046db <_start@@Base+0x14eb>
  4045c8:	mov    rax,QWORD PTR [rbp-0x60]
  4045cc:	mov    QWORD PTR [rbp-0x18],rax
  4045d0:	mov    rax,QWORD PTR [rbp-0x18]
  4045d4:	mov    rax,QWORD PTR [rax]
  4045d7:	mov    rdx,QWORD PTR [rbp-0x50]
  4045db:	mov    QWORD PTR [rbp-0x10],rdx
  4045df:	lea    r9,[rbp-0x30]
  4045e3:	lea    r8,[rbp-0x20]
  4045e7:	lea    rcx,[rbp-0x34]
  4045eb:	mov    rdx,QWORD PTR [rbp-0x58]
  4045ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4045f3:	mov    rdi,QWORD PTR [rbp-0x48]
  4045f7:	call   rax
  4045f9:	mov    QWORD PTR [rbp-0x50],rax
  4045fd:	mov    rax,QWORD PTR [rbp-0x50]
  404601:	cmp    rax,QWORD PTR [rbp-0x58]
  404605:	jne    404610 <_start@@Base+0x1420>
  404607:	mov    rax,QWORD PTR [rbp-0x50]
  40460b:	jmp    4046db <_start@@Base+0x14eb>
  404610:	mov    rax,QWORD PTR [rbp-0x50]
  404614:	cmp    rax,QWORD PTR [rbp-0x10]
  404618:	jne    40462b <_start@@Base+0x143b>
  40461a:	add    QWORD PTR [rbp-0x18],0x8
  40461f:	mov    rax,QWORD PTR [rbp-0x18]
  404623:	mov    rax,QWORD PTR [rax]
  404626:	test   rax,rax
  404629:	jne    4045d0 <_start@@Base+0x13e0>
  40462b:	mov    rax,QWORD PTR [rbp-0x10]
  40462f:	cmp    rax,QWORD PTR [rbp-0x50]
  404633:	jne    404653 <_start@@Base+0x1463>
  404635:	mov    rdx,QWORD PTR [rbp-0x58]
  404639:	mov    rsi,QWORD PTR [rbp-0x50]
  40463d:	mov    rax,QWORD PTR [rbp-0x48]
  404641:	mov    ecx,0x17
  404646:	mov    rdi,rax
  404649:	call   410986 <flatcc_json_parser_set_error@@Base>
  40464e:	jmp    4046db <_start@@Base+0x14eb>
  404653:	mov    eax,DWORD PTR [rbp-0x2c]
  404656:	lea    edx,[rax+0x1]
  404659:	mov    DWORD PTR [rbp-0x2c],edx
  40465c:	test   eax,eax
  40465e:	je     404686 <_start@@Base+0x1496>
  404660:	mov    rax,QWORD PTR [rbp-0x48]
  404664:	mov    eax,DWORD PTR [rax+0x14]
  404667:	test   eax,eax
  404669:	je     404686 <_start@@Base+0x1496>
  40466b:	mov    rdx,QWORD PTR [rbp-0x58]
  40466f:	mov    rsi,QWORD PTR [rbp-0x50]
  404673:	mov    rax,QWORD PTR [rbp-0x48]
  404677:	mov    ecx,0xe
  40467c:	mov    rdi,rax
  40467f:	call   410986 <flatcc_json_parser_set_error@@Base>
  404684:	jmp    4046db <_start@@Base+0x14eb>
  404686:	mov    rdi,QWORD PTR [rbp-0x20]
  40468a:	mov    ecx,DWORD PTR [rbp-0x34]
  40468d:	lea    r8,[rbp-0x28]
  404691:	mov    rdx,QWORD PTR [rbp-0x58]
  404695:	mov    rsi,QWORD PTR [rbp-0x50]
  404699:	mov    rax,QWORD PTR [rbp-0x48]
  40469d:	mov    r9,r8
  4046a0:	mov    r8,rdi
  4046a3:	mov    rdi,rax
  4046a6:	call   40393d <_start@@Base+0x74d>
  4046ab:	cmp    QWORD PTR [rbp-0x58],rax
  4046af:	jne    4046b7 <_start@@Base+0x14c7>
  4046b1:	mov    rax,QWORD PTR [rbp-0x58]
  4046b5:	jmp    4046db <_start@@Base+0x14eb>
  4046b7:	mov    rax,QWORD PTR [rbp-0x68]
  4046bb:	mov    rdx,QWORD PTR [rax]
  4046be:	mov    rax,QWORD PTR [rbp-0x28]
  4046c2:	add    rdx,rax
  4046c5:	mov    rax,QWORD PTR [rbp-0x68]
  4046c9:	mov    QWORD PTR [rax],rdx
  4046cc:	mov    eax,DWORD PTR [rbp-0x30]
  4046cf:	test   eax,eax
  4046d1:	jne    4045c8 <_start@@Base+0x13d8>
  4046d7:	mov    rax,QWORD PTR [rbp-0x50]
  4046db:	mov    rdi,QWORD PTR [rbp-0x8]
  4046df:	xor    rdi,QWORD PTR fs:0x28
  4046e8:	je     4046ef <_start@@Base+0x14ff>
  4046ea:	call   403140 <__stack_chk_fail@plt>
  4046ef:	leave  
  4046f0:	ret    
  4046f1:	endbr64 
  4046f5:	push   rbp
  4046f6:	mov    rbp,rsp
  4046f9:	sub    rsp,0x60
  4046fd:	mov    QWORD PTR [rbp-0x38],rdi
  404701:	mov    QWORD PTR [rbp-0x40],rsi
  404705:	mov    QWORD PTR [rbp-0x48],rdx
  404709:	mov    QWORD PTR [rbp-0x50],rcx
  40470d:	mov    QWORD PTR [rbp-0x58],r8
  404711:	mov    rax,QWORD PTR fs:0x28
  40471a:	mov    QWORD PTR [rbp-0x8],rax
  40471e:	xor    eax,eax
  404720:	mov    DWORD PTR [rbp-0x30],0x0
  404727:	mov    DWORD PTR [rbp-0x24],0x0
  40472e:	mov    rax,QWORD PTR [rbp-0x58]
  404732:	mov    DWORD PTR [rax],0x0
  404738:	mov    rdx,QWORD PTR [rbp-0x48]
  40473c:	mov    rcx,QWORD PTR [rbp-0x40]
  404740:	mov    rax,QWORD PTR [rbp-0x38]
  404744:	mov    rsi,rcx
  404747:	mov    rdi,rax
  40474a:	call   4036d4 <_start@@Base+0x4e4>
  40474f:	mov    QWORD PTR [rbp-0x40],rax
  404753:	mov    rax,QWORD PTR [rbp-0x40]
  404757:	cmp    rax,QWORD PTR [rbp-0x48]
  40475b:	jne    404766 <_start@@Base+0x1576>
  40475d:	mov    rax,QWORD PTR [rbp-0x40]
  404761:	jmp    404875 <_start@@Base+0x1685>
  404766:	mov    rax,QWORD PTR [rbp-0x50]
  40476a:	mov    QWORD PTR [rbp-0x18],rax
  40476e:	mov    rax,QWORD PTR [rbp-0x18]
  404772:	mov    rax,QWORD PTR [rax]
  404775:	mov    rdx,QWORD PTR [rbp-0x40]
  404779:	mov    QWORD PTR [rbp-0x10],rdx
  40477d:	lea    r9,[rbp-0x28]
  404781:	lea    r8,[rbp-0x20]
  404785:	lea    rcx,[rbp-0x2c]
  404789:	mov    rdx,QWORD PTR [rbp-0x48]
  40478d:	mov    rsi,QWORD PTR [rbp-0x10]
  404791:	mov    rdi,QWORD PTR [rbp-0x38]
  404795:	call   rax
  404797:	mov    QWORD PTR [rbp-0x40],rax
  40479b:	mov    rax,QWORD PTR [rbp-0x40]
  40479f:	cmp    rax,QWORD PTR [rbp-0x48]
  4047a3:	jne    4047ae <_start@@Base+0x15be>
  4047a5:	mov    rax,QWORD PTR [rbp-0x40]
  4047a9:	jmp    404875 <_start@@Base+0x1685>
  4047ae:	mov    rax,QWORD PTR [rbp-0x40]
  4047b2:	cmp    rax,QWORD PTR [rbp-0x10]
  4047b6:	jne    4047c9 <_start@@Base+0x15d9>
  4047b8:	add    QWORD PTR [rbp-0x18],0x8
  4047bd:	mov    rax,QWORD PTR [rbp-0x18]
  4047c1:	mov    rax,QWORD PTR [rax]
  4047c4:	test   rax,rax
  4047c7:	jne    40476e <_start@@Base+0x157e>
  4047c9:	mov    rax,QWORD PTR [rbp-0x10]
  4047cd:	cmp    rax,QWORD PTR [rbp-0x40]
  4047d1:	jne    4047f1 <_start@@Base+0x1601>
  4047d3:	mov    rdx,QWORD PTR [rbp-0x48]
  4047d7:	mov    rsi,QWORD PTR [rbp-0x40]
  4047db:	mov    rax,QWORD PTR [rbp-0x38]
  4047df:	mov    ecx,0x17
  4047e4:	mov    rdi,rax
  4047e7:	call   410986 <flatcc_json_parser_set_error@@Base>
  4047ec:	jmp    404875 <_start@@Base+0x1685>
  4047f1:	mov    eax,DWORD PTR [rbp-0x24]
  4047f4:	lea    edx,[rax+0x1]
  4047f7:	mov    DWORD PTR [rbp-0x24],edx
  4047fa:	test   eax,eax
  4047fc:	je     404824 <_start@@Base+0x1634>
  4047fe:	mov    rax,QWORD PTR [rbp-0x38]
  404802:	mov    eax,DWORD PTR [rax+0x14]
  404805:	test   eax,eax
  404807:	je     404824 <_start@@Base+0x1634>
  404809:	mov    rdx,QWORD PTR [rbp-0x48]
  40480d:	mov    rsi,QWORD PTR [rbp-0x40]
  404811:	mov    rax,QWORD PTR [rbp-0x38]
  404815:	mov    ecx,0xe
  40481a:	mov    rdi,rax
  40481d:	call   410986 <flatcc_json_parser_set_error@@Base>
  404822:	jmp    404875 <_start@@Base+0x1685>
  404824:	mov    rdi,QWORD PTR [rbp-0x20]
  404828:	mov    ecx,DWORD PTR [rbp-0x2c]
  40482b:	lea    r8,[rbp-0x30]
  40482f:	mov    rdx,QWORD PTR [rbp-0x48]
  404833:	mov    rsi,QWORD PTR [rbp-0x40]
  404837:	mov    rax,QWORD PTR [rbp-0x38]
  40483b:	mov    r9,r8
  40483e:	mov    r8,rdi
  404841:	mov    rdi,rax
  404844:	call   4039d5 <_start@@Base+0x7e5>
  404849:	cmp    QWORD PTR [rbp-0x48],rax
  40484d:	jne    404855 <_start@@Base+0x1665>
  40484f:	mov    rax,QWORD PTR [rbp-0x48]
  404853:	jmp    404875 <_start@@Base+0x1685>
  404855:	mov    rax,QWORD PTR [rbp-0x58]
  404859:	mov    edx,DWORD PTR [rax]
  40485b:	mov    eax,DWORD PTR [rbp-0x30]
  40485e:	add    edx,eax
  404860:	mov    rax,QWORD PTR [rbp-0x58]
  404864:	mov    DWORD PTR [rax],edx
  404866:	mov    eax,DWORD PTR [rbp-0x28]
  404869:	test   eax,eax
  40486b:	jne    404766 <_start@@Base+0x1576>
  404871:	mov    rax,QWORD PTR [rbp-0x40]
  404875:	mov    rdi,QWORD PTR [rbp-0x8]
  404879:	xor    rdi,QWORD PTR fs:0x28
  404882:	je     404889 <_start@@Base+0x1699>
  404884:	call   403140 <__stack_chk_fail@plt>
  404889:	leave  
  40488a:	ret    
  40488b:	endbr64 
  40488f:	push   rbp
  404890:	mov    rbp,rsp
  404893:	sub    rsp,0x60
  404897:	mov    QWORD PTR [rbp-0x38],rdi
  40489b:	mov    QWORD PTR [rbp-0x40],rsi
  40489f:	mov    QWORD PTR [rbp-0x48],rdx
  4048a3:	mov    QWORD PTR [rbp-0x50],rcx
  4048a7:	mov    QWORD PTR [rbp-0x58],r8
  4048ab:	mov    rax,QWORD PTR fs:0x28
  4048b4:	mov    QWORD PTR [rbp-0x8],rax
  4048b8:	xor    eax,eax
  4048ba:	mov    WORD PTR [rbp-0x2e],0x0
  4048c0:	mov    DWORD PTR [rbp-0x24],0x0
  4048c7:	mov    rax,QWORD PTR [rbp-0x58]
  4048cb:	mov    WORD PTR [rax],0x0
  4048d0:	mov    rdx,QWORD PTR [rbp-0x48]
  4048d4:	mov    rcx,QWORD PTR [rbp-0x40]
  4048d8:	mov    rax,QWORD PTR [rbp-0x38]
  4048dc:	mov    rsi,rcx
  4048df:	mov    rdi,rax
  4048e2:	call   4036d4 <_start@@Base+0x4e4>
  4048e7:	mov    QWORD PTR [rbp-0x40],rax
  4048eb:	mov    rax,QWORD PTR [rbp-0x40]
  4048ef:	cmp    rax,QWORD PTR [rbp-0x48]
  4048f3:	jne    4048fe <_start@@Base+0x170e>
  4048f5:	mov    rax,QWORD PTR [rbp-0x40]
  4048f9:	jmp    404a14 <_start@@Base+0x1824>
  4048fe:	mov    rax,QWORD PTR [rbp-0x50]
  404902:	mov    QWORD PTR [rbp-0x18],rax
  404906:	mov    rax,QWORD PTR [rbp-0x18]
  40490a:	mov    rax,QWORD PTR [rax]
  40490d:	mov    rdx,QWORD PTR [rbp-0x40]
  404911:	mov    QWORD PTR [rbp-0x10],rdx
  404915:	lea    r9,[rbp-0x28]
  404919:	lea    r8,[rbp-0x20]
  40491d:	lea    rcx,[rbp-0x2c]
  404921:	mov    rdx,QWORD PTR [rbp-0x48]
  404925:	mov    rsi,QWORD PTR [rbp-0x10]
  404929:	mov    rdi,QWORD PTR [rbp-0x38]
  40492d:	call   rax
  40492f:	mov    QWORD PTR [rbp-0x40],rax
  404933:	mov    rax,QWORD PTR [rbp-0x40]
  404937:	cmp    rax,QWORD PTR [rbp-0x48]
  40493b:	jne    404946 <_start@@Base+0x1756>
  40493d:	mov    rax,QWORD PTR [rbp-0x40]
  404941:	jmp    404a14 <_start@@Base+0x1824>
  404946:	mov    rax,QWORD PTR [rbp-0x40]
  40494a:	cmp    rax,QWORD PTR [rbp-0x10]
  40494e:	jne    404961 <_start@@Base+0x1771>
  404950:	add    QWORD PTR [rbp-0x18],0x8
  404955:	mov    rax,QWORD PTR [rbp-0x18]
  404959:	mov    rax,QWORD PTR [rax]
  40495c:	test   rax,rax
  40495f:	jne    404906 <_start@@Base+0x1716>
  404961:	mov    rax,QWORD PTR [rbp-0x10]
  404965:	cmp    rax,QWORD PTR [rbp-0x40]
  404969:	jne    404989 <_start@@Base+0x1799>
  40496b:	mov    rdx,QWORD PTR [rbp-0x48]
  40496f:	mov    rsi,QWORD PTR [rbp-0x40]
  404973:	mov    rax,QWORD PTR [rbp-0x38]
  404977:	mov    ecx,0x17
  40497c:	mov    rdi,rax
  40497f:	call   410986 <flatcc_json_parser_set_error@@Base>
  404984:	jmp    404a14 <_start@@Base+0x1824>
  404989:	mov    eax,DWORD PTR [rbp-0x24]
  40498c:	lea    edx,[rax+0x1]
  40498f:	mov    DWORD PTR [rbp-0x24],edx
  404992:	test   eax,eax
  404994:	je     4049bc <_start@@Base+0x17cc>
  404996:	mov    rax,QWORD PTR [rbp-0x38]
  40499a:	mov    eax,DWORD PTR [rax+0x14]
  40499d:	test   eax,eax
  40499f:	je     4049bc <_start@@Base+0x17cc>
  4049a1:	mov    rdx,QWORD PTR [rbp-0x48]
  4049a5:	mov    rsi,QWORD PTR [rbp-0x40]
  4049a9:	mov    rax,QWORD PTR [rbp-0x38]
  4049ad:	mov    ecx,0xe
  4049b2:	mov    rdi,rax
  4049b5:	call   410986 <flatcc_json_parser_set_error@@Base>
  4049ba:	jmp    404a14 <_start@@Base+0x1824>
  4049bc:	mov    rdi,QWORD PTR [rbp-0x20]
  4049c0:	mov    ecx,DWORD PTR [rbp-0x2c]
  4049c3:	lea    r8,[rbp-0x2e]
  4049c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4049cb:	mov    rsi,QWORD PTR [rbp-0x40]
  4049cf:	mov    rax,QWORD PTR [rbp-0x38]
  4049d3:	mov    r9,r8
  4049d6:	mov    r8,rdi
  4049d9:	mov    rdi,rax
  4049dc:	call   403a67 <_start@@Base+0x877>
  4049e1:	cmp    QWORD PTR [rbp-0x48],rax
  4049e5:	jne    4049ed <_start@@Base+0x17fd>
  4049e7:	mov    rax,QWORD PTR [rbp-0x48]
  4049eb:	jmp    404a14 <_start@@Base+0x1824>
  4049ed:	mov    rax,QWORD PTR [rbp-0x58]
  4049f1:	movzx  eax,WORD PTR [rax]
  4049f4:	mov    edx,eax
  4049f6:	movzx  eax,WORD PTR [rbp-0x2e]
  4049fa:	add    eax,edx
  4049fc:	mov    edx,eax
  4049fe:	mov    rax,QWORD PTR [rbp-0x58]
  404a02:	mov    WORD PTR [rax],dx
  404a05:	mov    eax,DWORD PTR [rbp-0x28]
  404a08:	test   eax,eax
  404a0a:	jne    4048fe <_start@@Base+0x170e>
  404a10:	mov    rax,QWORD PTR [rbp-0x40]
  404a14:	mov    rdi,QWORD PTR [rbp-0x8]
  404a18:	xor    rdi,QWORD PTR fs:0x28
  404a21:	je     404a28 <_start@@Base+0x1838>
  404a23:	call   403140 <__stack_chk_fail@plt>
  404a28:	leave  
  404a29:	ret    
  404a2a:	endbr64 
  404a2e:	push   rbp
  404a2f:	mov    rbp,rsp
  404a32:	sub    rsp,0x60
  404a36:	mov    QWORD PTR [rbp-0x38],rdi
  404a3a:	mov    QWORD PTR [rbp-0x40],rsi
  404a3e:	mov    QWORD PTR [rbp-0x48],rdx
  404a42:	mov    QWORD PTR [rbp-0x50],rcx
  404a46:	mov    QWORD PTR [rbp-0x58],r8
  404a4a:	mov    rax,QWORD PTR fs:0x28
  404a53:	mov    QWORD PTR [rbp-0x8],rax
  404a57:	xor    eax,eax
  404a59:	mov    BYTE PTR [rbp-0x2d],0x0
  404a5d:	mov    DWORD PTR [rbp-0x24],0x0
  404a64:	mov    rax,QWORD PTR [rbp-0x58]
  404a68:	mov    BYTE PTR [rax],0x0
  404a6b:	mov    rdx,QWORD PTR [rbp-0x48]
  404a6f:	mov    rcx,QWORD PTR [rbp-0x40]
  404a73:	mov    rax,QWORD PTR [rbp-0x38]
  404a77:	mov    rsi,rcx
  404a7a:	mov    rdi,rax
  404a7d:	call   4036d4 <_start@@Base+0x4e4>
  404a82:	mov    QWORD PTR [rbp-0x40],rax
  404a86:	mov    rax,QWORD PTR [rbp-0x40]
  404a8a:	cmp    rax,QWORD PTR [rbp-0x48]
  404a8e:	jne    404a99 <_start@@Base+0x18a9>
  404a90:	mov    rax,QWORD PTR [rbp-0x40]
  404a94:	jmp    404bae <_start@@Base+0x19be>
  404a99:	mov    rax,QWORD PTR [rbp-0x50]
  404a9d:	mov    QWORD PTR [rbp-0x18],rax
  404aa1:	mov    rax,QWORD PTR [rbp-0x18]
  404aa5:	mov    rax,QWORD PTR [rax]
  404aa8:	mov    rdx,QWORD PTR [rbp-0x40]
  404aac:	mov    QWORD PTR [rbp-0x10],rdx
  404ab0:	lea    r9,[rbp-0x28]
  404ab4:	lea    r8,[rbp-0x20]
  404ab8:	lea    rcx,[rbp-0x2c]
  404abc:	mov    rdx,QWORD PTR [rbp-0x48]
  404ac0:	mov    rsi,QWORD PTR [rbp-0x10]
  404ac4:	mov    rdi,QWORD PTR [rbp-0x38]
  404ac8:	call   rax
  404aca:	mov    QWORD PTR [rbp-0x40],rax
  404ace:	mov    rax,QWORD PTR [rbp-0x40]
  404ad2:	cmp    rax,QWORD PTR [rbp-0x48]
  404ad6:	jne    404ae1 <_start@@Base+0x18f1>
  404ad8:	mov    rax,QWORD PTR [rbp-0x40]
  404adc:	jmp    404bae <_start@@Base+0x19be>
  404ae1:	mov    rax,QWORD PTR [rbp-0x40]
  404ae5:	cmp    rax,QWORD PTR [rbp-0x10]
  404ae9:	jne    404afc <_start@@Base+0x190c>
  404aeb:	add    QWORD PTR [rbp-0x18],0x8
  404af0:	mov    rax,QWORD PTR [rbp-0x18]
  404af4:	mov    rax,QWORD PTR [rax]
  404af7:	test   rax,rax
  404afa:	jne    404aa1 <_start@@Base+0x18b1>
  404afc:	mov    rax,QWORD PTR [rbp-0x10]
  404b00:	cmp    rax,QWORD PTR [rbp-0x40]
  404b04:	jne    404b24 <_start@@Base+0x1934>
  404b06:	mov    rdx,QWORD PTR [rbp-0x48]
  404b0a:	mov    rsi,QWORD PTR [rbp-0x40]
  404b0e:	mov    rax,QWORD PTR [rbp-0x38]
  404b12:	mov    ecx,0x17
  404b17:	mov    rdi,rax
  404b1a:	call   410986 <flatcc_json_parser_set_error@@Base>
  404b1f:	jmp    404bae <_start@@Base+0x19be>
  404b24:	mov    eax,DWORD PTR [rbp-0x24]
  404b27:	lea    edx,[rax+0x1]
  404b2a:	mov    DWORD PTR [rbp-0x24],edx
  404b2d:	test   eax,eax
  404b2f:	je     404b57 <_start@@Base+0x1967>
  404b31:	mov    rax,QWORD PTR [rbp-0x38]
  404b35:	mov    eax,DWORD PTR [rax+0x14]
  404b38:	test   eax,eax
  404b3a:	je     404b57 <_start@@Base+0x1967>
  404b3c:	mov    rdx,QWORD PTR [rbp-0x48]
  404b40:	mov    rsi,QWORD PTR [rbp-0x40]
  404b44:	mov    rax,QWORD PTR [rbp-0x38]
  404b48:	mov    ecx,0xe
  404b4d:	mov    rdi,rax
  404b50:	call   410986 <flatcc_json_parser_set_error@@Base>
  404b55:	jmp    404bae <_start@@Base+0x19be>
  404b57:	mov    rdi,QWORD PTR [rbp-0x20]
  404b5b:	mov    ecx,DWORD PTR [rbp-0x2c]
  404b5e:	lea    r8,[rbp-0x2d]
  404b62:	mov    rdx,QWORD PTR [rbp-0x48]
  404b66:	mov    rsi,QWORD PTR [rbp-0x40]
  404b6a:	mov    rax,QWORD PTR [rbp-0x38]
  404b6e:	mov    r9,r8
  404b71:	mov    r8,rdi
  404b74:	mov    rdi,rax
  404b77:	call   403afa <_start@@Base+0x90a>
  404b7c:	cmp    QWORD PTR [rbp-0x48],rax
  404b80:	jne    404b88 <_start@@Base+0x1998>
  404b82:	mov    rax,QWORD PTR [rbp-0x48]
  404b86:	jmp    404bae <_start@@Base+0x19be>
  404b88:	mov    rax,QWORD PTR [rbp-0x58]
  404b8c:	movzx  eax,BYTE PTR [rax]
  404b8f:	mov    edx,eax
  404b91:	movzx  eax,BYTE PTR [rbp-0x2d]
  404b95:	add    eax,edx
  404b97:	mov    edx,eax
  404b99:	mov    rax,QWORD PTR [rbp-0x58]
  404b9d:	mov    BYTE PTR [rax],dl
  404b9f:	mov    eax,DWORD PTR [rbp-0x28]
  404ba2:	test   eax,eax
  404ba4:	jne    404a99 <_start@@Base+0x18a9>
  404baa:	mov    rax,QWORD PTR [rbp-0x40]
  404bae:	mov    rdi,QWORD PTR [rbp-0x8]
  404bb2:	xor    rdi,QWORD PTR fs:0x28
  404bbb:	je     404bc2 <_start@@Base+0x19d2>
  404bbd:	call   403140 <__stack_chk_fail@plt>
  404bc2:	leave  
  404bc3:	ret    
  404bc4:	endbr64 
  404bc8:	push   rbp
  404bc9:	mov    rbp,rsp
  404bcc:	sub    rsp,0x60
  404bd0:	mov    QWORD PTR [rbp-0x38],rdi
  404bd4:	mov    QWORD PTR [rbp-0x40],rsi
  404bd8:	mov    QWORD PTR [rbp-0x48],rdx
  404bdc:	mov    QWORD PTR [rbp-0x50],rcx
  404be0:	mov    QWORD PTR [rbp-0x58],r8
  404be4:	mov    rax,QWORD PTR fs:0x28
  404bed:	mov    QWORD PTR [rbp-0x8],rax
  404bf1:	xor    eax,eax
  404bf3:	mov    BYTE PTR [rbp-0x2d],0x0
  404bf7:	mov    DWORD PTR [rbp-0x24],0x0
  404bfe:	mov    rax,QWORD PTR [rbp-0x58]
  404c02:	mov    BYTE PTR [rax],0x0
  404c05:	mov    rdx,QWORD PTR [rbp-0x48]
  404c09:	mov    rcx,QWORD PTR [rbp-0x40]
  404c0d:	mov    rax,QWORD PTR [rbp-0x38]
  404c11:	mov    rsi,rcx
  404c14:	mov    rdi,rax
  404c17:	call   4036d4 <_start@@Base+0x4e4>
  404c1c:	mov    QWORD PTR [rbp-0x40],rax
  404c20:	mov    rax,QWORD PTR [rbp-0x40]
  404c24:	cmp    rax,QWORD PTR [rbp-0x48]
  404c28:	jne    404c33 <_start@@Base+0x1a43>
  404c2a:	mov    rax,QWORD PTR [rbp-0x40]
  404c2e:	jmp    404d44 <_start@@Base+0x1b54>
  404c33:	mov    rax,QWORD PTR [rbp-0x50]
  404c37:	mov    QWORD PTR [rbp-0x18],rax
  404c3b:	mov    rax,QWORD PTR [rbp-0x18]
  404c3f:	mov    rax,QWORD PTR [rax]
  404c42:	mov    rdx,QWORD PTR [rbp-0x40]
  404c46:	mov    QWORD PTR [rbp-0x10],rdx
  404c4a:	lea    r9,[rbp-0x28]
  404c4e:	lea    r8,[rbp-0x20]
  404c52:	lea    rcx,[rbp-0x2c]
  404c56:	mov    rdx,QWORD PTR [rbp-0x48]
  404c5a:	mov    rsi,QWORD PTR [rbp-0x10]
  404c5e:	mov    rdi,QWORD PTR [rbp-0x38]
  404c62:	call   rax
  404c64:	mov    QWORD PTR [rbp-0x40],rax
  404c68:	mov    rax,QWORD PTR [rbp-0x40]
  404c6c:	cmp    rax,QWORD PTR [rbp-0x48]
  404c70:	jne    404c7b <_start@@Base+0x1a8b>
  404c72:	mov    rax,QWORD PTR [rbp-0x40]
  404c76:	jmp    404d44 <_start@@Base+0x1b54>
  404c7b:	mov    rax,QWORD PTR [rbp-0x40]
  404c7f:	cmp    rax,QWORD PTR [rbp-0x10]
  404c83:	jne    404c96 <_start@@Base+0x1aa6>
  404c85:	add    QWORD PTR [rbp-0x18],0x8
  404c8a:	mov    rax,QWORD PTR [rbp-0x18]
  404c8e:	mov    rax,QWORD PTR [rax]
  404c91:	test   rax,rax
  404c94:	jne    404c3b <_start@@Base+0x1a4b>
  404c96:	mov    rax,QWORD PTR [rbp-0x10]
  404c9a:	cmp    rax,QWORD PTR [rbp-0x40]
  404c9e:	jne    404cbe <_start@@Base+0x1ace>
  404ca0:	mov    rdx,QWORD PTR [rbp-0x48]
  404ca4:	mov    rsi,QWORD PTR [rbp-0x40]
  404ca8:	mov    rax,QWORD PTR [rbp-0x38]
  404cac:	mov    ecx,0x17
  404cb1:	mov    rdi,rax
  404cb4:	call   410986 <flatcc_json_parser_set_error@@Base>
  404cb9:	jmp    404d44 <_start@@Base+0x1b54>
  404cbe:	mov    eax,DWORD PTR [rbp-0x24]
  404cc1:	lea    edx,[rax+0x1]
  404cc4:	mov    DWORD PTR [rbp-0x24],edx
  404cc7:	test   eax,eax
  404cc9:	je     404cf1 <_start@@Base+0x1b01>
  404ccb:	mov    rax,QWORD PTR [rbp-0x38]
  404ccf:	mov    eax,DWORD PTR [rax+0x14]
  404cd2:	test   eax,eax
  404cd4:	je     404cf1 <_start@@Base+0x1b01>
  404cd6:	mov    rdx,QWORD PTR [rbp-0x48]
  404cda:	mov    rsi,QWORD PTR [rbp-0x40]
  404cde:	mov    rax,QWORD PTR [rbp-0x38]
  404ce2:	mov    ecx,0xe
  404ce7:	mov    rdi,rax
  404cea:	call   410986 <flatcc_json_parser_set_error@@Base>
  404cef:	jmp    404d44 <_start@@Base+0x1b54>
  404cf1:	mov    rdi,QWORD PTR [rbp-0x20]
  404cf5:	mov    ecx,DWORD PTR [rbp-0x2c]
  404cf8:	lea    r8,[rbp-0x2d]
  404cfc:	mov    rdx,QWORD PTR [rbp-0x48]
  404d00:	mov    rsi,QWORD PTR [rbp-0x40]
  404d04:	mov    rax,QWORD PTR [rbp-0x38]
  404d08:	mov    r9,r8
  404d0b:	mov    r8,rdi
  404d0e:	mov    rdi,rax
  404d11:	call   403780 <_start@@Base+0x590>
  404d16:	cmp    QWORD PTR [rbp-0x48],rax
  404d1a:	jne    404d22 <_start@@Base+0x1b32>
  404d1c:	mov    rax,QWORD PTR [rbp-0x48]
  404d20:	jmp    404d44 <_start@@Base+0x1b54>
  404d22:	mov    rax,QWORD PTR [rbp-0x58]
  404d26:	movzx  edx,BYTE PTR [rax]
  404d29:	movzx  eax,BYTE PTR [rbp-0x2d]
  404d2d:	add    eax,edx
  404d2f:	mov    rdx,QWORD PTR [rbp-0x58]
  404d33:	mov    BYTE PTR [rdx],al
  404d35:	mov    eax,DWORD PTR [rbp-0x28]
  404d38:	test   eax,eax
  404d3a:	jne    404c33 <_start@@Base+0x1a43>
  404d40:	mov    rax,QWORD PTR [rbp-0x40]
  404d44:	mov    rdi,QWORD PTR [rbp-0x8]
  404d48:	xor    rdi,QWORD PTR fs:0x28
  404d51:	je     404d58 <_start@@Base+0x1b68>
  404d53:	call   403140 <__stack_chk_fail@plt>
  404d58:	leave  
  404d59:	ret    
  404d5a:	endbr64 
  404d5e:	push   rbp
  404d5f:	mov    rbp,rsp
  404d62:	sub    rsp,0x60
  404d66:	mov    QWORD PTR [rbp-0x38],rdi
  404d6a:	mov    QWORD PTR [rbp-0x40],rsi
  404d6e:	mov    QWORD PTR [rbp-0x48],rdx
  404d72:	mov    QWORD PTR [rbp-0x50],rcx
  404d76:	mov    QWORD PTR [rbp-0x58],r8
  404d7a:	mov    rax,QWORD PTR fs:0x28
  404d83:	mov    QWORD PTR [rbp-0x8],rax
  404d87:	xor    eax,eax
  404d89:	vxorps xmm0,xmm0,xmm0
  404d8d:	vmovss DWORD PTR [rbp-0x30],xmm0
  404d92:	mov    DWORD PTR [rbp-0x24],0x0
  404d99:	mov    rax,QWORD PTR [rbp-0x58]
  404d9d:	vxorps xmm0,xmm0,xmm0
  404da1:	vmovss DWORD PTR [rax],xmm0
  404da5:	mov    rdx,QWORD PTR [rbp-0x48]
  404da9:	mov    rcx,QWORD PTR [rbp-0x40]
  404dad:	mov    rax,QWORD PTR [rbp-0x38]
  404db1:	mov    rsi,rcx
  404db4:	mov    rdi,rax
  404db7:	call   4036d4 <_start@@Base+0x4e4>
  404dbc:	mov    QWORD PTR [rbp-0x40],rax
  404dc0:	mov    rax,QWORD PTR [rbp-0x40]
  404dc4:	cmp    rax,QWORD PTR [rbp-0x48]
  404dc8:	jne    404dd3 <_start@@Base+0x1be3>
  404dca:	mov    rax,QWORD PTR [rbp-0x40]
  404dce:	jmp    404eea <_start@@Base+0x1cfa>
  404dd3:	mov    rax,QWORD PTR [rbp-0x50]
  404dd7:	mov    QWORD PTR [rbp-0x18],rax
  404ddb:	mov    rax,QWORD PTR [rbp-0x18]
  404ddf:	mov    rax,QWORD PTR [rax]
  404de2:	mov    rdx,QWORD PTR [rbp-0x40]
  404de6:	mov    QWORD PTR [rbp-0x10],rdx
  404dea:	lea    r9,[rbp-0x28]
  404dee:	lea    r8,[rbp-0x20]
  404df2:	lea    rcx,[rbp-0x2c]
  404df6:	mov    rdx,QWORD PTR [rbp-0x48]
  404dfa:	mov    rsi,QWORD PTR [rbp-0x10]
  404dfe:	mov    rdi,QWORD PTR [rbp-0x38]
  404e02:	call   rax
  404e04:	mov    QWORD PTR [rbp-0x40],rax
  404e08:	mov    rax,QWORD PTR [rbp-0x40]
  404e0c:	cmp    rax,QWORD PTR [rbp-0x48]
  404e10:	jne    404e1b <_start@@Base+0x1c2b>
  404e12:	mov    rax,QWORD PTR [rbp-0x40]
  404e16:	jmp    404eea <_start@@Base+0x1cfa>
  404e1b:	mov    rax,QWORD PTR [rbp-0x40]
  404e1f:	cmp    rax,QWORD PTR [rbp-0x10]
  404e23:	jne    404e36 <_start@@Base+0x1c46>
  404e25:	add    QWORD PTR [rbp-0x18],0x8
  404e2a:	mov    rax,QWORD PTR [rbp-0x18]
  404e2e:	mov    rax,QWORD PTR [rax]
  404e31:	test   rax,rax
  404e34:	jne    404ddb <_start@@Base+0x1beb>
  404e36:	mov    rax,QWORD PTR [rbp-0x10]
  404e3a:	cmp    rax,QWORD PTR [rbp-0x40]
  404e3e:	jne    404e5e <_start@@Base+0x1c6e>
  404e40:	mov    rdx,QWORD PTR [rbp-0x48]
  404e44:	mov    rsi,QWORD PTR [rbp-0x40]
  404e48:	mov    rax,QWORD PTR [rbp-0x38]
  404e4c:	mov    ecx,0x17
  404e51:	mov    rdi,rax
  404e54:	call   410986 <flatcc_json_parser_set_error@@Base>
  404e59:	jmp    404eea <_start@@Base+0x1cfa>
  404e5e:	mov    eax,DWORD PTR [rbp-0x24]
  404e61:	lea    edx,[rax+0x1]
  404e64:	mov    DWORD PTR [rbp-0x24],edx
  404e67:	test   eax,eax
  404e69:	je     404e91 <_start@@Base+0x1ca1>
  404e6b:	mov    rax,QWORD PTR [rbp-0x38]
  404e6f:	mov    eax,DWORD PTR [rax+0x14]
  404e72:	test   eax,eax
  404e74:	je     404e91 <_start@@Base+0x1ca1>
  404e76:	mov    rdx,QWORD PTR [rbp-0x48]
  404e7a:	mov    rsi,QWORD PTR [rbp-0x40]
  404e7e:	mov    rax,QWORD PTR [rbp-0x38]
  404e82:	mov    ecx,0xe
  404e87:	mov    rdi,rax
  404e8a:	call   410986 <flatcc_json_parser_set_error@@Base>
  404e8f:	jmp    404eea <_start@@Base+0x1cfa>
  404e91:	mov    rdi,QWORD PTR [rbp-0x20]
  404e95:	mov    ecx,DWORD PTR [rbp-0x2c]
  404e98:	lea    r8,[rbp-0x30]
  404e9c:	mov    rdx,QWORD PTR [rbp-0x48]
  404ea0:	mov    rsi,QWORD PTR [rbp-0x40]
  404ea4:	mov    rax,QWORD PTR [rbp-0x38]
  404ea8:	mov    r9,r8
  404eab:	mov    r8,rdi
  404eae:	mov    rdi,rax
  404eb1:	call   403b88 <_start@@Base+0x998>
  404eb6:	cmp    QWORD PTR [rbp-0x48],rax
  404eba:	jne    404ec2 <_start@@Base+0x1cd2>
  404ebc:	mov    rax,QWORD PTR [rbp-0x48]
  404ec0:	jmp    404eea <_start@@Base+0x1cfa>
  404ec2:	mov    rax,QWORD PTR [rbp-0x58]
  404ec6:	vmovss xmm1,DWORD PTR [rax]
  404eca:	vmovss xmm0,DWORD PTR [rbp-0x30]
  404ecf:	vaddss xmm0,xmm1,xmm0
  404ed3:	mov    rax,QWORD PTR [rbp-0x58]
  404ed7:	vmovss DWORD PTR [rax],xmm0
  404edb:	mov    eax,DWORD PTR [rbp-0x28]
  404ede:	test   eax,eax
  404ee0:	jne    404dd3 <_start@@Base+0x1be3>
  404ee6:	mov    rax,QWORD PTR [rbp-0x40]
  404eea:	mov    rdi,QWORD PTR [rbp-0x8]
  404eee:	xor    rdi,QWORD PTR fs:0x28
  404ef7:	je     404efe <_start@@Base+0x1d0e>
  404ef9:	call   403140 <__stack_chk_fail@plt>
  404efe:	leave  
  404eff:	ret    
  404f00:	endbr64 
  404f04:	push   rbp
  404f05:	mov    rbp,rsp
  404f08:	sub    rsp,0x70
  404f0c:	mov    QWORD PTR [rbp-0x48],rdi
  404f10:	mov    QWORD PTR [rbp-0x50],rsi
  404f14:	mov    QWORD PTR [rbp-0x58],rdx
  404f18:	mov    QWORD PTR [rbp-0x60],rcx
  404f1c:	mov    QWORD PTR [rbp-0x68],r8
  404f20:	mov    rax,QWORD PTR fs:0x28
  404f29:	mov    QWORD PTR [rbp-0x8],rax
  404f2d:	xor    eax,eax
  404f2f:	vxorpd xmm0,xmm0,xmm0
  404f33:	vmovsd QWORD PTR [rbp-0x28],xmm0
  404f38:	mov    DWORD PTR [rbp-0x2c],0x0
  404f3f:	mov    rax,QWORD PTR [rbp-0x68]
  404f43:	vxorpd xmm0,xmm0,xmm0
  404f47:	vmovsd QWORD PTR [rax],xmm0
  404f4b:	mov    rdx,QWORD PTR [rbp-0x58]
  404f4f:	mov    rcx,QWORD PTR [rbp-0x50]
  404f53:	mov    rax,QWORD PTR [rbp-0x48]
  404f57:	mov    rsi,rcx
  404f5a:	mov    rdi,rax
  404f5d:	call   4036d4 <_start@@Base+0x4e4>
  404f62:	mov    QWORD PTR [rbp-0x50],rax
  404f66:	mov    rax,QWORD PTR [rbp-0x50]
  404f6a:	cmp    rax,QWORD PTR [rbp-0x58]
  404f6e:	jne    404f79 <_start@@Base+0x1d89>
  404f70:	mov    rax,QWORD PTR [rbp-0x50]
  404f74:	jmp    405090 <_start@@Base+0x1ea0>
  404f79:	mov    rax,QWORD PTR [rbp-0x60]
  404f7d:	mov    QWORD PTR [rbp-0x18],rax
  404f81:	mov    rax,QWORD PTR [rbp-0x18]
  404f85:	mov    rax,QWORD PTR [rax]
  404f88:	mov    rdx,QWORD PTR [rbp-0x50]
  404f8c:	mov    QWORD PTR [rbp-0x10],rdx
  404f90:	lea    r9,[rbp-0x30]
  404f94:	lea    r8,[rbp-0x20]
  404f98:	lea    rcx,[rbp-0x34]
  404f9c:	mov    rdx,QWORD PTR [rbp-0x58]
  404fa0:	mov    rsi,QWORD PTR [rbp-0x10]
  404fa4:	mov    rdi,QWORD PTR [rbp-0x48]
  404fa8:	call   rax
  404faa:	mov    QWORD PTR [rbp-0x50],rax
  404fae:	mov    rax,QWORD PTR [rbp-0x50]
  404fb2:	cmp    rax,QWORD PTR [rbp-0x58]
  404fb6:	jne    404fc1 <_start@@Base+0x1dd1>
  404fb8:	mov    rax,QWORD PTR [rbp-0x50]
  404fbc:	jmp    405090 <_start@@Base+0x1ea0>
  404fc1:	mov    rax,QWORD PTR [rbp-0x50]
  404fc5:	cmp    rax,QWORD PTR [rbp-0x10]
  404fc9:	jne    404fdc <_start@@Base+0x1dec>
  404fcb:	add    QWORD PTR [rbp-0x18],0x8
  404fd0:	mov    rax,QWORD PTR [rbp-0x18]
  404fd4:	mov    rax,QWORD PTR [rax]
  404fd7:	test   rax,rax
  404fda:	jne    404f81 <_start@@Base+0x1d91>
  404fdc:	mov    rax,QWORD PTR [rbp-0x10]
  404fe0:	cmp    rax,QWORD PTR [rbp-0x50]
  404fe4:	jne    405004 <_start@@Base+0x1e14>
  404fe6:	mov    rdx,QWORD PTR [rbp-0x58]
  404fea:	mov    rsi,QWORD PTR [rbp-0x50]
  404fee:	mov    rax,QWORD PTR [rbp-0x48]
  404ff2:	mov    ecx,0x17
  404ff7:	mov    rdi,rax
  404ffa:	call   410986 <flatcc_json_parser_set_error@@Base>
  404fff:	jmp    405090 <_start@@Base+0x1ea0>
  405004:	mov    eax,DWORD PTR [rbp-0x2c]
  405007:	lea    edx,[rax+0x1]
  40500a:	mov    DWORD PTR [rbp-0x2c],edx
  40500d:	test   eax,eax
  40500f:	je     405037 <_start@@Base+0x1e47>
  405011:	mov    rax,QWORD PTR [rbp-0x48]
  405015:	mov    eax,DWORD PTR [rax+0x14]
  405018:	test   eax,eax
  40501a:	je     405037 <_start@@Base+0x1e47>
  40501c:	mov    rdx,QWORD PTR [rbp-0x58]
  405020:	mov    rsi,QWORD PTR [rbp-0x50]
  405024:	mov    rax,QWORD PTR [rbp-0x48]
  405028:	mov    ecx,0xe
  40502d:	mov    rdi,rax
  405030:	call   410986 <flatcc_json_parser_set_error@@Base>
  405035:	jmp    405090 <_start@@Base+0x1ea0>
  405037:	mov    rdi,QWORD PTR [rbp-0x20]
  40503b:	mov    ecx,DWORD PTR [rbp-0x34]
  40503e:	lea    r8,[rbp-0x28]
  405042:	mov    rdx,QWORD PTR [rbp-0x58]
  405046:	mov    rsi,QWORD PTR [rbp-0x50]
  40504a:	mov    rax,QWORD PTR [rbp-0x48]
  40504e:	mov    r9,r8
  405051:	mov    r8,rdi
  405054:	mov    rdi,rax
  405057:	call   403c0f <_start@@Base+0xa1f>
  40505c:	cmp    QWORD PTR [rbp-0x58],rax
  405060:	jne    405068 <_start@@Base+0x1e78>
  405062:	mov    rax,QWORD PTR [rbp-0x58]
  405066:	jmp    405090 <_start@@Base+0x1ea0>
  405068:	mov    rax,QWORD PTR [rbp-0x68]
  40506c:	vmovsd xmm1,QWORD PTR [rax]
  405070:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  405075:	vaddsd xmm0,xmm1,xmm0
  405079:	mov    rax,QWORD PTR [rbp-0x68]
  40507d:	vmovsd QWORD PTR [rax],xmm0
  405081:	mov    eax,DWORD PTR [rbp-0x30]
  405084:	test   eax,eax
  405086:	jne    404f79 <_start@@Base+0x1d89>
  40508c:	mov    rax,QWORD PTR [rbp-0x50]
  405090:	mov    rdi,QWORD PTR [rbp-0x8]
  405094:	xor    rdi,QWORD PTR fs:0x28
  40509d:	je     4050a4 <_start@@Base+0x1eb4>
  40509f:	call   403140 <__stack_chk_fail@plt>
  4050a4:	leave  
  4050a5:	ret    

00000000004050a6 <test@@Base>:
  4050a6:	endbr64 
  4050aa:	push   rbp
  4050ab:	mov    rbp,rsp
  4050ae:	sub    rsp,0xc0
  4050b5:	mov    QWORD PTR [rbp-0xa8],rdi
  4050bc:	mov    QWORD PTR [rbp-0xb0],rsi
  4050c3:	mov    QWORD PTR [rbp-0xb8],rdx
  4050ca:	mov    QWORD PTR [rbp-0xc0],rcx
  4050d1:	mov    rax,QWORD PTR fs:0x28
  4050da:	mov    QWORD PTR [rbp-0x8],rax
  4050de:	xor    eax,eax
  4050e0:	mov    DWORD PTR [rbp-0x94],0x0
  4050ea:	lea    rax,[rbp-0x60]
  4050ee:	mov    QWORD PTR [rbp-0x90],rax
  4050f5:	mov    rax,QWORD PTR [rbp-0x90]
  4050fc:	mov    edx,0x48
  405101:	mov    esi,0x0
  405106:	mov    rdi,rax
  405109:	call   403160 <memset@plt>
  40510e:	mov    rax,QWORD PTR [rbp-0x90]
  405115:	mov    DWORD PTR [rax+0x18],0x1
  40511c:	mov    rax,QWORD PTR [rbp-0x90]
  405123:	mov    rdx,QWORD PTR [rbp-0xb0]
  40512a:	mov    QWORD PTR [rax+0x8],rdx
  40512e:	mov    rax,QWORD PTR [rbp-0xa8]
  405135:	mov    ecx,0x0
  40513a:	mov    edx,0x0
  40513f:	lea    rsi,[rip+0xf1a0]        # 4142e6 <g_data@@Base+0x286>
  405146:	mov    rdi,rax
  405149:	call   4086a4 <flatcc_builder_start_buffer@@Base>
  40514e:	mov    rdx,QWORD PTR [rbp-0xb8]
  405155:	mov    rcx,QWORD PTR [rbp-0xb0]
  40515c:	mov    rax,QWORD PTR [rbp-0x90]
  405163:	mov    rsi,rcx
  405166:	mov    rdi,rax
  405169:	call   4032d6 <_start@@Base+0xe6>
  40516e:	mov    QWORD PTR [rbp-0xb0],rax
  405175:	mov    rax,QWORD PTR [rbp-0xb0]
  40517c:	cmp    rax,QWORD PTR [rbp-0xb8]
  405183:	jne    4051ad <test@@Base+0x107>
  405185:	mov    rax,QWORD PTR [rip+0x14e6c]        # 419ff8 <stderr@GLIBC_2.2.5>
  40518c:	mov    rax,QWORD PTR [rax]
  40518f:	mov    rcx,rax
  405192:	mov    edx,0xd
  405197:	mov    esi,0x1
  40519c:	lea    rdi,[rip+0xf148]        # 4142eb <g_data@@Base+0x28b>
  4051a3:	call   4031d0 <fwrite@plt>
  4051a8:	jmp    40658b <test@@Base+0x14e5>
  4051ad:	mov    rax,QWORD PTR [rbp-0xb8]
  4051b4:	cmp    rax,QWORD PTR [rbp-0xb0]
  4051bb:	jbe    40520b <test@@Base+0x165>
  4051bd:	mov    rax,QWORD PTR [rbp-0xb0]
  4051c4:	movzx  eax,BYTE PTR [rax]
  4051c7:	cmp    al,0x7b
  4051c9:	jne    40520b <test@@Base+0x165>
  4051cb:	inc    QWORD PTR [rbp-0xb0]
  4051d2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4051d9:	mov    rcx,QWORD PTR [rbp-0xb0]
  4051e0:	mov    rax,QWORD PTR [rbp-0x90]
  4051e7:	mov    rsi,rcx
  4051ea:	mov    rdi,rax
  4051ed:	call   4032d6 <_start@@Base+0xe6>
  4051f2:	mov    QWORD PTR [rbp-0xb0],rax
  4051f9:	mov    rax,QWORD PTR [rbp-0xb0]
  405200:	cmp    rax,QWORD PTR [rbp-0xb8]
  405207:	je     40525c <test@@Base+0x1b6>
  405209:	jmp    405284 <test@@Base+0x1de>
  40520b:	mov    rax,QWORD PTR [rip+0x14de6]        # 419ff8 <stderr@GLIBC_2.2.5>
  405212:	mov    rax,QWORD PTR [rax]
  405215:	mov    edx,0x7b
  40521a:	lea    rsi,[rip+0xf0d8]        # 4142f9 <g_data@@Base+0x299>
  405221:	mov    rdi,rax
  405224:	mov    eax,0x0
  405229:	call   403190 <fprintf@plt>
  40522e:	mov    rdx,QWORD PTR [rbp-0xb8]
  405235:	mov    rsi,QWORD PTR [rbp-0xb0]
  40523c:	mov    rax,QWORD PTR [rbp-0x90]
  405243:	mov    ecx,0x11
  405248:	mov    rdi,rax
  40524b:	call   410986 <flatcc_json_parser_set_error@@Base>
  405250:	mov    QWORD PTR [rbp-0xb0],rax
  405257:	jmp    40658b <test@@Base+0x14e5>
  40525c:	mov    rax,QWORD PTR [rip+0x14d95]        # 419ff8 <stderr@GLIBC_2.2.5>
  405263:	mov    rax,QWORD PTR [rax]
  405266:	mov    rcx,rax
  405269:	mov    edx,0xd
  40526e:	mov    esi,0x1
  405273:	lea    rdi,[rip+0xf071]        # 4142eb <g_data@@Base+0x28b>
  40527a:	call   4031d0 <fwrite@plt>
  40527f:	jmp    40658b <test@@Base+0x14e5>
  405284:	mov    rax,QWORD PTR [rbp-0xa8]
  40528b:	mov    esi,0xb
  405290:	mov    rdi,rax
  405293:	call   409469 <flatcc_builder_start_table@@Base>
  405298:	mov    rdx,QWORD PTR [rbp-0xb8]
  40529f:	mov    rcx,QWORD PTR [rbp-0xb0]
  4052a6:	mov    rax,QWORD PTR [rbp-0x90]
  4052ad:	mov    rsi,rcx
  4052b0:	mov    rdi,rax
  4052b3:	call   4033e0 <_start@@Base+0x1f0>
  4052b8:	mov    QWORD PTR [rbp-0xb0],rax
  4052bf:	mov    rdx,QWORD PTR [rbp-0xb8]
  4052c6:	mov    rax,QWORD PTR [rbp-0xb0]
  4052cd:	mov    rsi,rdx
  4052d0:	mov    rdi,rax
  4052d3:	call   40356d <_start@@Base+0x37d>
  4052d8:	mov    QWORD PTR [rbp-0x88],rax
  4052df:	mov    rax,QWORD PTR [rbp-0xb8]
  4052e6:	sub    rax,QWORD PTR [rbp-0xb0]
  4052ed:	cmp    rax,0x8
  4052f1:	jle    405300 <test@@Base+0x25a>
  4052f3:	mov    rax,QWORD PTR [rbp-0xb0]
  4052fa:	add    rax,0x8
  4052fe:	jmp    405307 <test@@Base+0x261>
  405300:	mov    rax,QWORD PTR [rbp-0xb8]
  405307:	mov    QWORD PTR [rbp-0x80],rax
  40530b:	mov    rax,QWORD PTR [rbp-0x88]
  405312:	mov    ax,0x0
  405316:	mov    rdx,rax
  405319:	mov    eax,0x73
  40531e:	movsx  rax,al
  405322:	shl    rax,0x38
  405326:	mov    rcx,rax
  405329:	mov    eax,0x65
  40532e:	movsx  rax,al
  405332:	shl    rax,0x30
  405336:	or     rcx,rax
  405339:	mov    eax,0x63
  40533e:	movsx  rax,al
  405342:	shl    rax,0x28
  405346:	or     rcx,rax
  405349:	mov    eax,0x6f
  40534e:	movsx  rax,al
  405352:	shl    rax,0x20
  405356:	or     rcx,rax
  405359:	mov    eax,0x6e
  40535e:	movsx  rax,al
  405362:	shl    rax,0x18
  405366:	or     rcx,rax
  405369:	mov    eax,0x64
  40536e:	movsx  rax,al
  405372:	shl    rax,0x10
  405376:	or     rax,rcx
  405379:	cmp    rdx,rax
  40537c:	jae    4055ec <test@@Base+0x546>
  405382:	mov    rax,QWORD PTR [rbp-0x88]
  405389:	and    rax,0xffffffffff000000
  40538f:	mov    rdx,rax
  405392:	mov    eax,0x66
  405397:	movsx  rax,al
  40539b:	shl    rax,0x38
  40539f:	mov    rcx,rax
  4053a2:	mov    eax,0x69
  4053a7:	movsx  rax,al
  4053ab:	shl    rax,0x30
  4053af:	or     rcx,rax
  4053b2:	mov    eax,0x72
  4053b7:	movsx  rax,al
  4053bb:	shl    rax,0x28
  4053bf:	or     rcx,rax
  4053c2:	mov    eax,0x73
  4053c7:	movsx  rax,al
  4053cb:	shl    rax,0x20
  4053cf:	or     rcx,rax
  4053d2:	mov    eax,0x74
  4053d7:	movsx  rax,al
  4053db:	shl    rax,0x18
  4053df:	or     rax,rcx
  4053e2:	cmp    rdx,rax
  4053e5:	je     405415 <test@@Base+0x36f>
  4053e7:	mov    rdx,QWORD PTR [rbp-0xb8]
  4053ee:	mov    rsi,QWORD PTR [rbp-0xb0]
  4053f5:	mov    rax,QWORD PTR [rbp-0x90]
  4053fc:	mov    ecx,0xd
  405401:	mov    rdi,rax
  405404:	call   410986 <flatcc_json_parser_set_error@@Base>
  405409:	mov    QWORD PTR [rbp-0xb0],rax
  405410:	jmp    40658b <test@@Base+0x14e5>
  405415:	mov    rax,QWORD PTR [rbp-0xb0]
  40541c:	lea    rcx,[rax+0x5]
  405420:	mov    rdx,QWORD PTR [rbp-0xb8]
  405427:	mov    rax,QWORD PTR [rbp-0x90]
  40542e:	mov    rsi,rcx
  405431:	mov    rdi,rax
  405434:	call   4035b1 <_start@@Base+0x3c1>
  405439:	mov    QWORD PTR [rbp-0xb0],rax
  405440:	mov    rdx,QWORD PTR [rbp-0xb8]
  405447:	mov    rcx,QWORD PTR [rbp-0xb0]
  40544e:	mov    rax,QWORD PTR [rbp-0x90]
  405455:	mov    rsi,rcx
  405458:	mov    rdi,rax
  40545b:	call   4032d6 <_start@@Base+0xe6>
  405460:	mov    QWORD PTR [rbp-0xb0],rax
  405467:	mov    rax,QWORD PTR [rbp-0xb0]
  40546e:	cmp    rax,QWORD PTR [rbp-0xb8]
  405475:	jne    40549f <test@@Base+0x3f9>
  405477:	mov    rax,QWORD PTR [rip+0x14b7a]        # 419ff8 <stderr@GLIBC_2.2.5>
  40547e:	mov    rax,QWORD PTR [rax]
  405481:	mov    rcx,rax
  405484:	mov    edx,0xd
  405489:	mov    esi,0x1
  40548e:	lea    rdi,[rip+0xee56]        # 4142eb <g_data@@Base+0x28b>
  405495:	call   4031d0 <fwrite@plt>
  40549a:	jmp    40658b <test@@Base+0x14e5>
  40549f:	mov    rax,QWORD PTR [rbp-0xb8]
  4054a6:	cmp    rax,QWORD PTR [rbp-0xb0]
  4054ad:	jbe    4054fd <test@@Base+0x457>
  4054af:	mov    rax,QWORD PTR [rbp-0xb0]
  4054b6:	movzx  eax,BYTE PTR [rax]
  4054b9:	cmp    al,0x3a
  4054bb:	jne    4054fd <test@@Base+0x457>
  4054bd:	inc    QWORD PTR [rbp-0xb0]
  4054c4:	mov    rdx,QWORD PTR [rbp-0xb8]
  4054cb:	mov    rcx,QWORD PTR [rbp-0xb0]
  4054d2:	mov    rax,QWORD PTR [rbp-0x90]
  4054d9:	mov    rsi,rcx
  4054dc:	mov    rdi,rax
  4054df:	call   4032d6 <_start@@Base+0xe6>
  4054e4:	mov    QWORD PTR [rbp-0xb0],rax
  4054eb:	mov    rax,QWORD PTR [rbp-0xb0]
  4054f2:	cmp    rax,QWORD PTR [rbp-0xb8]
  4054f9:	je     40554e <test@@Base+0x4a8>
  4054fb:	jmp    405576 <test@@Base+0x4d0>
  4054fd:	mov    rax,QWORD PTR [rip+0x14af4]        # 419ff8 <stderr@GLIBC_2.2.5>
  405504:	mov    rax,QWORD PTR [rax]
  405507:	mov    edx,0x3a
  40550c:	lea    rsi,[rip+0xede6]        # 4142f9 <g_data@@Base+0x299>
  405513:	mov    rdi,rax
  405516:	mov    eax,0x0
  40551b:	call   403190 <fprintf@plt>
  405520:	mov    rdx,QWORD PTR [rbp-0xb8]
  405527:	mov    rsi,QWORD PTR [rbp-0xb0]
  40552e:	mov    rax,QWORD PTR [rbp-0x90]
  405535:	mov    ecx,0x11
  40553a:	mov    rdi,rax
  40553d:	call   410986 <flatcc_json_parser_set_error@@Base>
  405542:	mov    QWORD PTR [rbp-0xb0],rax
  405549:	jmp    40658b <test@@Base+0x14e5>
  40554e:	mov    rax,QWORD PTR [rip+0x14aa3]        # 419ff8 <stderr@GLIBC_2.2.5>
  405555:	mov    rax,QWORD PTR [rax]
  405558:	mov    rcx,rax
  40555b:	mov    edx,0xd
  405560:	mov    esi,0x1
  405565:	lea    rdi,[rip+0xed7f]        # 4142eb <g_data@@Base+0x28b>
  40556c:	call   4031d0 <fwrite@plt>
  405571:	jmp    40658b <test@@Base+0x14e5>
  405576:	mov    rax,QWORD PTR [rbp-0xa8]
  40557d:	mov    ecx,0x1
  405582:	mov    edx,0x1
  405587:	mov    esi,0x0
  40558c:	mov    rdi,rax
  40558f:	call   40b619 <flatcc_builder_table_add@@Base>
  405594:	mov    QWORD PTR [rbp-0x78],rax
  405598:	cmp    QWORD PTR [rbp-0x78],0x0
  40559d:	je     406572 <test@@Base+0x14cc>
  4055a3:	mov    rax,QWORD PTR [rbp-0xb0]
  4055aa:	mov    QWORD PTR [rbp-0x80],rax
  4055ae:	mov    rcx,QWORD PTR [rbp-0x78]
  4055b2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4055b9:	mov    rsi,QWORD PTR [rbp-0xb0]
  4055c0:	mov    rax,QWORD PTR [rbp-0x90]
  4055c7:	mov    rdi,rax
  4055ca:	call   403d5c <_start@@Base+0xb6c>
  4055cf:	mov    QWORD PTR [rbp-0xb0],rax
  4055d6:	mov    rax,QWORD PTR [rbp-0x80]
  4055da:	cmp    rax,QWORD PTR [rbp-0xb0]
  4055e1:	jne    40638c <test@@Base+0x12e6>
  4055e7:	jmp    40658b <test@@Base+0x14e5>
  4055ec:	movabs rax,0xffffffff00000000
  4055f6:	and    rax,QWORD PTR [rbp-0x88]
  4055fd:	mov    edx,0x7a
  405602:	movsx  rdx,dl
  405606:	mov    rcx,rdx
  405609:	shl    rcx,0x38
  40560d:	mov    edx,0x75
  405612:	movsx  rdx,dl
  405616:	shl    rdx,0x30
  40561a:	or     rcx,rdx
  40561d:	mov    edx,0x6c
  405622:	movsx  rdx,dl
  405626:	shl    rdx,0x28
  40562a:	or     rcx,rdx
  40562d:	mov    edx,0x75
  405632:	movsx  rdx,dl
  405636:	shl    rdx,0x20
  40563a:	or     rdx,rcx
  40563d:	cmp    rax,rdx
  405640:	jae    405f61 <test@@Base+0xebb>
  405646:	mov    eax,0x73
  40564b:	movsx  rax,al
  40564f:	shl    rax,0x38
  405653:	mov    rdx,rax
  405656:	mov    eax,0x65
  40565b:	movsx  rax,al
  40565f:	shl    rax,0x30
  405663:	or     rdx,rax
  405666:	mov    eax,0x63
  40566b:	movsx  rax,al
  40566f:	shl    rax,0x28
  405673:	or     rdx,rax
  405676:	mov    eax,0x6f
  40567b:	movsx  rax,al
  40567f:	shl    rax,0x20
  405683:	or     rdx,rax
  405686:	mov    eax,0x6e
  40568b:	movsx  rax,al
  40568f:	shl    rax,0x18
  405693:	or     rdx,rax
  405696:	mov    eax,0x64
  40569b:	movsx  rax,al
  40569f:	shl    rax,0x10
  4056a3:	or     rdx,rax
  4056a6:	mov    eax,0x73
  4056ab:	movsx  rax,al
  4056af:	shl    rax,0x8
  4056b3:	or     rdx,rax
  4056b6:	mov    eax,0x20
  4056bb:	movsx  rax,al
  4056bf:	or     rax,rdx
  4056c2:	cmp    QWORD PTR [rbp-0x88],rax
  4056c9:	jae    405947 <test@@Base+0x8a1>
  4056cf:	mov    rax,QWORD PTR [rbp-0x88]
  4056d6:	mov    ax,0x0
  4056da:	mov    rdx,rax
  4056dd:	mov    eax,0x73
  4056e2:	movsx  rax,al
  4056e6:	shl    rax,0x38
  4056ea:	mov    rcx,rax
  4056ed:	mov    eax,0x65
  4056f2:	movsx  rax,al
  4056f6:	shl    rax,0x30
  4056fa:	or     rcx,rax
  4056fd:	mov    eax,0x63
  405702:	movsx  rax,al
  405706:	shl    rax,0x28
  40570a:	or     rcx,rax
  40570d:	mov    eax,0x6f
  405712:	movsx  rax,al
  405716:	shl    rax,0x20
  40571a:	or     rcx,rax
  40571d:	mov    eax,0x6e
  405722:	movsx  rax,al
  405726:	shl    rax,0x18
  40572a:	or     rcx,rax
  40572d:	mov    eax,0x64
  405732:	movsx  rax,al
  405736:	shl    rax,0x10
  40573a:	or     rax,rcx
  40573d:	cmp    rdx,rax
  405740:	je     405770 <test@@Base+0x6ca>
  405742:	mov    rdx,QWORD PTR [rbp-0xb8]
  405749:	mov    rsi,QWORD PTR [rbp-0xb0]
  405750:	mov    rax,QWORD PTR [rbp-0x90]
  405757:	mov    ecx,0xd
  40575c:	mov    rdi,rax
  40575f:	call   410986 <flatcc_json_parser_set_error@@Base>
  405764:	mov    QWORD PTR [rbp-0xb0],rax
  40576b:	jmp    40658b <test@@Base+0x14e5>
  405770:	mov    rax,QWORD PTR [rbp-0xb0]
  405777:	lea    rcx,[rax+0x6]
  40577b:	mov    rdx,QWORD PTR [rbp-0xb8]
  405782:	mov    rax,QWORD PTR [rbp-0x90]
  405789:	mov    rsi,rcx
  40578c:	mov    rdi,rax
  40578f:	call   4035b1 <_start@@Base+0x3c1>
  405794:	mov    QWORD PTR [rbp-0xb0],rax
  40579b:	mov    rdx,QWORD PTR [rbp-0xb8]
  4057a2:	mov    rcx,QWORD PTR [rbp-0xb0]
  4057a9:	mov    rax,QWORD PTR [rbp-0x90]
  4057b0:	mov    rsi,rcx
  4057b3:	mov    rdi,rax
  4057b6:	call   4032d6 <_start@@Base+0xe6>
  4057bb:	mov    QWORD PTR [rbp-0xb0],rax
  4057c2:	mov    rax,QWORD PTR [rbp-0xb0]
  4057c9:	cmp    rax,QWORD PTR [rbp-0xb8]
  4057d0:	jne    4057fa <test@@Base+0x754>
  4057d2:	mov    rax,QWORD PTR [rip+0x1481f]        # 419ff8 <stderr@GLIBC_2.2.5>
  4057d9:	mov    rax,QWORD PTR [rax]
  4057dc:	mov    rcx,rax
  4057df:	mov    edx,0xd
  4057e4:	mov    esi,0x1
  4057e9:	lea    rdi,[rip+0xeafb]        # 4142eb <g_data@@Base+0x28b>
  4057f0:	call   4031d0 <fwrite@plt>
  4057f5:	jmp    40658b <test@@Base+0x14e5>
  4057fa:	mov    rax,QWORD PTR [rbp-0xb8]
  405801:	cmp    rax,QWORD PTR [rbp-0xb0]
  405808:	jbe    405858 <test@@Base+0x7b2>
  40580a:	mov    rax,QWORD PTR [rbp-0xb0]
  405811:	movzx  eax,BYTE PTR [rax]
  405814:	cmp    al,0x3a
  405816:	jne    405858 <test@@Base+0x7b2>
  405818:	inc    QWORD PTR [rbp-0xb0]
  40581f:	mov    rdx,QWORD PTR [rbp-0xb8]
  405826:	mov    rcx,QWORD PTR [rbp-0xb0]
  40582d:	mov    rax,QWORD PTR [rbp-0x90]
  405834:	mov    rsi,rcx
  405837:	mov    rdi,rax
  40583a:	call   4032d6 <_start@@Base+0xe6>
  40583f:	mov    QWORD PTR [rbp-0xb0],rax
  405846:	mov    rax,QWORD PTR [rbp-0xb0]
  40584d:	cmp    rax,QWORD PTR [rbp-0xb8]
  405854:	je     4058a9 <test@@Base+0x803>
  405856:	jmp    4058d1 <test@@Base+0x82b>
  405858:	mov    rax,QWORD PTR [rip+0x14799]        # 419ff8 <stderr@GLIBC_2.2.5>
  40585f:	mov    rax,QWORD PTR [rax]
  405862:	mov    edx,0x3a
  405867:	lea    rsi,[rip+0xea8b]        # 4142f9 <g_data@@Base+0x299>
  40586e:	mov    rdi,rax
  405871:	mov    eax,0x0
  405876:	call   403190 <fprintf@plt>
  40587b:	mov    rdx,QWORD PTR [rbp-0xb8]
  405882:	mov    rsi,QWORD PTR [rbp-0xb0]
  405889:	mov    rax,QWORD PTR [rbp-0x90]
  405890:	mov    ecx,0x11
  405895:	mov    rdi,rax
  405898:	call   410986 <flatcc_json_parser_set_error@@Base>
  40589d:	mov    QWORD PTR [rbp-0xb0],rax
  4058a4:	jmp    40658b <test@@Base+0x14e5>
  4058a9:	mov    rax,QWORD PTR [rip+0x14748]        # 419ff8 <stderr@GLIBC_2.2.5>
  4058b0:	mov    rax,QWORD PTR [rax]
  4058b3:	mov    rcx,rax
  4058b6:	mov    edx,0xd
  4058bb:	mov    esi,0x1
  4058c0:	lea    rdi,[rip+0xea24]        # 4142eb <g_data@@Base+0x28b>
  4058c7:	call   4031d0 <fwrite@plt>
  4058cc:	jmp    40658b <test@@Base+0x14e5>
  4058d1:	mov    rax,QWORD PTR [rbp-0xa8]
  4058d8:	mov    ecx,0x8
  4058dd:	mov    edx,0x8
  4058e2:	mov    esi,0x1
  4058e7:	mov    rdi,rax
  4058ea:	call   40b619 <flatcc_builder_table_add@@Base>
  4058ef:	mov    QWORD PTR [rbp-0x78],rax
  4058f3:	cmp    QWORD PTR [rbp-0x78],0x0
  4058f8:	je     406575 <test@@Base+0x14cf>
  4058fe:	mov    rax,QWORD PTR [rbp-0xb0]
  405905:	mov    QWORD PTR [rbp-0x80],rax
  405909:	mov    rcx,QWORD PTR [rbp-0x78]
  40590d:	mov    rdx,QWORD PTR [rbp-0xb8]
  405914:	mov    rsi,QWORD PTR [rbp-0xb0]
  40591b:	mov    rax,QWORD PTR [rbp-0x90]
  405922:	mov    rdi,rax
  405925:	call   4117db <flatcc_json_parser_double@@Base>
  40592a:	mov    QWORD PTR [rbp-0xb0],rax
  405931:	mov    rax,QWORD PTR [rbp-0x80]
  405935:	cmp    rax,QWORD PTR [rbp-0xb0]
  40593c:	jne    40638c <test@@Base+0x12e6>
  405942:	jmp    40658b <test@@Base+0x14e5>
  405947:	mov    eax,0x73
  40594c:	movsx  rax,al
  405950:	shl    rax,0x38
  405954:	mov    rdx,rax
  405957:	mov    eax,0x65
  40595c:	movsx  rax,al
  405960:	shl    rax,0x30
  405964:	or     rdx,rax
  405967:	mov    eax,0x63
  40596c:	movsx  rax,al
  405970:	shl    rax,0x28
  405974:	or     rdx,rax
  405977:	mov    eax,0x6f
  40597c:	movsx  rax,al
  405980:	shl    rax,0x20
  405984:	or     rdx,rax
  405987:	mov    eax,0x6e
  40598c:	movsx  rax,al
  405990:	shl    rax,0x18
  405994:	or     rdx,rax
  405997:	mov    eax,0x64
  40599c:	movsx  rax,al
  4059a0:	shl    rax,0x10
  4059a4:	or     rdx,rax
  4059a7:	mov    eax,0x73
  4059ac:	movsx  rax,al
  4059b0:	shl    rax,0x8
  4059b4:	or     rdx,rax
  4059b7:	mov    eax,0x20
  4059bc:	movsx  rax,al
  4059c0:	or     rax,rdx
  4059c3:	cmp    QWORD PTR [rbp-0x88],rax
  4059ca:	je     4059fa <test@@Base+0x954>
  4059cc:	mov    rdx,QWORD PTR [rbp-0xb8]
  4059d3:	mov    rsi,QWORD PTR [rbp-0xb0]
  4059da:	mov    rax,QWORD PTR [rbp-0x90]
  4059e1:	mov    ecx,0xd
  4059e6:	mov    rdi,rax
  4059e9:	call   410986 <flatcc_json_parser_set_error@@Base>
  4059ee:	mov    QWORD PTR [rbp-0xb0],rax
  4059f5:	jmp    40658b <test@@Base+0x14e5>
  4059fa:	mov    rax,QWORD PTR [rbp-0x80]
  4059fe:	mov    QWORD PTR [rbp-0xb0],rax
  405a05:	mov    rdx,QWORD PTR [rbp-0xb8]
  405a0c:	mov    rax,QWORD PTR [rbp-0xb0]
  405a13:	mov    rsi,rdx
  405a16:	mov    rdi,rax
  405a19:	call   40356d <_start@@Base+0x37d>
  405a1e:	mov    QWORD PTR [rbp-0x88],rax
  405a25:	mov    rax,QWORD PTR [rbp-0xb8]
  405a2c:	sub    rax,QWORD PTR [rbp-0xb0]
  405a33:	cmp    rax,0x8
  405a37:	jle    405a46 <test@@Base+0x9a0>
  405a39:	mov    rax,QWORD PTR [rbp-0xb0]
  405a40:	add    rax,0x8
  405a44:	jmp    405a4d <test@@Base+0x9a7>
  405a46:	mov    rax,QWORD PTR [rbp-0xb8]
  405a4d:	mov    QWORD PTR [rbp-0x80],rax
  405a51:	movabs rax,0xffffffff00000000
  405a5b:	and    rax,QWORD PTR [rbp-0x88]
  405a62:	mov    edx,0x6c
  405a67:	movsx  rdx,dl
  405a6b:	mov    rcx,rdx
  405a6e:	shl    rcx,0x38
  405a72:	mov    edx,0x65
  405a77:	movsx  rdx,dl
  405a7b:	shl    rdx,0x30
  405a7f:	or     rcx,rdx
  405a82:	mov    edx,0x66
  405a87:	movsx  rdx,dl
  405a8b:	shl    rdx,0x28
  405a8f:	or     rcx,rdx
  405a92:	mov    edx,0x74
  405a97:	movsx  rdx,dl
  405a9b:	shl    rdx,0x20
  405a9f:	or     rdx,rcx
  405aa2:	cmp    rax,rdx
  405aa5:	jae    405d06 <test@@Base+0xc60>
  405aab:	movabs rax,0xffffffff00000000
  405ab5:	and    rax,QWORD PTR [rbp-0x88]
  405abc:	mov    edx,0x6c
  405ac1:	movsx  rdx,dl
  405ac5:	mov    rcx,rdx
  405ac8:	shl    rcx,0x38
  405acc:	mov    edx,0x65
  405ad1:	movsx  rdx,dl
  405ad5:	shl    rdx,0x30
  405ad9:	or     rcx,rdx
  405adc:	mov    edx,0x61
  405ae1:	movsx  rdx,dl
  405ae5:	shl    rdx,0x28
  405ae9:	or     rcx,rdx
  405aec:	mov    edx,0x64
  405af1:	movsx  rdx,dl
  405af5:	shl    rdx,0x20
  405af9:	or     rdx,rcx
  405afc:	cmp    rax,rdx
  405aff:	je     405b2f <test@@Base+0xa89>
  405b01:	mov    rdx,QWORD PTR [rbp-0xb8]
  405b08:	mov    rsi,QWORD PTR [rbp-0xb0]
  405b0f:	mov    rax,QWORD PTR [rbp-0x90]
  405b16:	mov    ecx,0xd
  405b1b:	mov    rdi,rax
  405b1e:	call   410986 <flatcc_json_parser_set_error@@Base>
  405b23:	mov    QWORD PTR [rbp-0xb0],rax
  405b2a:	jmp    40658b <test@@Base+0x14e5>
  405b2f:	mov    rax,QWORD PTR [rbp-0xb0]
  405b36:	lea    rcx,[rax+0x4]
  405b3a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405b41:	mov    rax,QWORD PTR [rbp-0x90]
  405b48:	mov    rsi,rcx
  405b4b:	mov    rdi,rax
  405b4e:	call   4035b1 <_start@@Base+0x3c1>
  405b53:	mov    QWORD PTR [rbp-0xb0],rax
  405b5a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405b61:	mov    rcx,QWORD PTR [rbp-0xb0]
  405b68:	mov    rax,QWORD PTR [rbp-0x90]
  405b6f:	mov    rsi,rcx
  405b72:	mov    rdi,rax
  405b75:	call   4032d6 <_start@@Base+0xe6>
  405b7a:	mov    QWORD PTR [rbp-0xb0],rax
  405b81:	mov    rax,QWORD PTR [rbp-0xb0]
  405b88:	cmp    rax,QWORD PTR [rbp-0xb8]
  405b8f:	jne    405bb9 <test@@Base+0xb13>
  405b91:	mov    rax,QWORD PTR [rip+0x14460]        # 419ff8 <stderr@GLIBC_2.2.5>
  405b98:	mov    rax,QWORD PTR [rax]
  405b9b:	mov    rcx,rax
  405b9e:	mov    edx,0xd
  405ba3:	mov    esi,0x1
  405ba8:	lea    rdi,[rip+0xe73c]        # 4142eb <g_data@@Base+0x28b>
  405baf:	call   4031d0 <fwrite@plt>
  405bb4:	jmp    40658b <test@@Base+0x14e5>
  405bb9:	mov    rax,QWORD PTR [rbp-0xb8]
  405bc0:	cmp    rax,QWORD PTR [rbp-0xb0]
  405bc7:	jbe    405c17 <test@@Base+0xb71>
  405bc9:	mov    rax,QWORD PTR [rbp-0xb0]
  405bd0:	movzx  eax,BYTE PTR [rax]
  405bd3:	cmp    al,0x3a
  405bd5:	jne    405c17 <test@@Base+0xb71>
  405bd7:	inc    QWORD PTR [rbp-0xb0]
  405bde:	mov    rdx,QWORD PTR [rbp-0xb8]
  405be5:	mov    rcx,QWORD PTR [rbp-0xb0]
  405bec:	mov    rax,QWORD PTR [rbp-0x90]
  405bf3:	mov    rsi,rcx
  405bf6:	mov    rdi,rax
  405bf9:	call   4032d6 <_start@@Base+0xe6>
  405bfe:	mov    QWORD PTR [rbp-0xb0],rax
  405c05:	mov    rax,QWORD PTR [rbp-0xb0]
  405c0c:	cmp    rax,QWORD PTR [rbp-0xb8]
  405c13:	je     405c68 <test@@Base+0xbc2>
  405c15:	jmp    405c90 <test@@Base+0xbea>
  405c17:	mov    rax,QWORD PTR [rip+0x143da]        # 419ff8 <stderr@GLIBC_2.2.5>
  405c1e:	mov    rax,QWORD PTR [rax]
  405c21:	mov    edx,0x3a
  405c26:	lea    rsi,[rip+0xe6cc]        # 4142f9 <g_data@@Base+0x299>
  405c2d:	mov    rdi,rax
  405c30:	mov    eax,0x0
  405c35:	call   403190 <fprintf@plt>
  405c3a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405c41:	mov    rsi,QWORD PTR [rbp-0xb0]
  405c48:	mov    rax,QWORD PTR [rbp-0x90]
  405c4f:	mov    ecx,0x11
  405c54:	mov    rdi,rax
  405c57:	call   410986 <flatcc_json_parser_set_error@@Base>
  405c5c:	mov    QWORD PTR [rbp-0xb0],rax
  405c63:	jmp    40658b <test@@Base+0x14e5>
  405c68:	mov    rax,QWORD PTR [rip+0x14389]        # 419ff8 <stderr@GLIBC_2.2.5>
  405c6f:	mov    rax,QWORD PTR [rax]
  405c72:	mov    rcx,rax
  405c75:	mov    edx,0xd
  405c7a:	mov    esi,0x1
  405c7f:	lea    rdi,[rip+0xe665]        # 4142eb <g_data@@Base+0x28b>
  405c86:	call   4031d0 <fwrite@plt>
  405c8b:	jmp    40658b <test@@Base+0x14e5>
  405c90:	mov    rax,QWORD PTR [rbp-0xa8]
  405c97:	mov    ecx,0x8
  405c9c:	mov    edx,0x8
  405ca1:	mov    esi,0x3
  405ca6:	mov    rdi,rax
  405ca9:	call   40b619 <flatcc_builder_table_add@@Base>
  405cae:	mov    QWORD PTR [rbp-0x78],rax
  405cb2:	cmp    QWORD PTR [rbp-0x78],0x0
  405cb7:	je     406578 <test@@Base+0x14d2>
  405cbd:	mov    rax,QWORD PTR [rbp-0xb0]
  405cc4:	mov    QWORD PTR [rbp-0x80],rax
  405cc8:	mov    rcx,QWORD PTR [rbp-0x78]
  405ccc:	mov    rdx,QWORD PTR [rbp-0xb8]
  405cd3:	mov    rsi,QWORD PTR [rbp-0xb0]
  405cda:	mov    rax,QWORD PTR [rbp-0x90]
  405ce1:	mov    rdi,rax
  405ce4:	call   403e1f <_start@@Base+0xc2f>
  405ce9:	mov    QWORD PTR [rbp-0xb0],rax
  405cf0:	mov    rax,QWORD PTR [rbp-0x80]
  405cf4:	cmp    rax,QWORD PTR [rbp-0xb0]
  405cfb:	jne    40638c <test@@Base+0x12e6>
  405d01:	jmp    40658b <test@@Base+0x14e5>
  405d06:	movabs rax,0xffffffff00000000
  405d10:	and    rax,QWORD PTR [rbp-0x88]
  405d17:	mov    edx,0x6c
  405d1c:	movsx  rdx,dl
  405d20:	mov    rcx,rdx
  405d23:	shl    rcx,0x38
  405d27:	mov    edx,0x65
  405d2c:	movsx  rdx,dl
  405d30:	shl    rdx,0x30
  405d34:	or     rcx,rdx
  405d37:	mov    edx,0x66
  405d3c:	movsx  rdx,dl
  405d40:	shl    rdx,0x28
  405d44:	or     rcx,rdx
  405d47:	mov    edx,0x74
  405d4c:	movsx  rdx,dl
  405d50:	shl    rdx,0x20
  405d54:	or     rdx,rcx
  405d57:	cmp    rax,rdx
  405d5a:	je     405d8a <test@@Base+0xce4>
  405d5c:	mov    rdx,QWORD PTR [rbp-0xb8]
  405d63:	mov    rsi,QWORD PTR [rbp-0xb0]
  405d6a:	mov    rax,QWORD PTR [rbp-0x90]
  405d71:	mov    ecx,0xd
  405d76:	mov    rdi,rax
  405d79:	call   410986 <flatcc_json_parser_set_error@@Base>
  405d7e:	mov    QWORD PTR [rbp-0xb0],rax
  405d85:	jmp    40658b <test@@Base+0x14e5>
  405d8a:	mov    rax,QWORD PTR [rbp-0xb0]
  405d91:	lea    rcx,[rax+0x4]
  405d95:	mov    rdx,QWORD PTR [rbp-0xb8]
  405d9c:	mov    rax,QWORD PTR [rbp-0x90]
  405da3:	mov    rsi,rcx
  405da6:	mov    rdi,rax
  405da9:	call   4035b1 <_start@@Base+0x3c1>
  405dae:	mov    QWORD PTR [rbp-0xb0],rax
  405db5:	mov    rdx,QWORD PTR [rbp-0xb8]
  405dbc:	mov    rcx,QWORD PTR [rbp-0xb0]
  405dc3:	mov    rax,QWORD PTR [rbp-0x90]
  405dca:	mov    rsi,rcx
  405dcd:	mov    rdi,rax
  405dd0:	call   4032d6 <_start@@Base+0xe6>
  405dd5:	mov    QWORD PTR [rbp-0xb0],rax
  405ddc:	mov    rax,QWORD PTR [rbp-0xb0]
  405de3:	cmp    rax,QWORD PTR [rbp-0xb8]
  405dea:	jne    405e14 <test@@Base+0xd6e>
  405dec:	mov    rax,QWORD PTR [rip+0x14205]        # 419ff8 <stderr@GLIBC_2.2.5>
  405df3:	mov    rax,QWORD PTR [rax]
  405df6:	mov    rcx,rax
  405df9:	mov    edx,0xd
  405dfe:	mov    esi,0x1
  405e03:	lea    rdi,[rip+0xe4e1]        # 4142eb <g_data@@Base+0x28b>
  405e0a:	call   4031d0 <fwrite@plt>
  405e0f:	jmp    40658b <test@@Base+0x14e5>
  405e14:	mov    rax,QWORD PTR [rbp-0xb8]
  405e1b:	cmp    rax,QWORD PTR [rbp-0xb0]
  405e22:	jbe    405e72 <test@@Base+0xdcc>
  405e24:	mov    rax,QWORD PTR [rbp-0xb0]
  405e2b:	movzx  eax,BYTE PTR [rax]
  405e2e:	cmp    al,0x3a
  405e30:	jne    405e72 <test@@Base+0xdcc>
  405e32:	inc    QWORD PTR [rbp-0xb0]
  405e39:	mov    rdx,QWORD PTR [rbp-0xb8]
  405e40:	mov    rcx,QWORD PTR [rbp-0xb0]
  405e47:	mov    rax,QWORD PTR [rbp-0x90]
  405e4e:	mov    rsi,rcx
  405e51:	mov    rdi,rax
  405e54:	call   4032d6 <_start@@Base+0xe6>
  405e59:	mov    QWORD PTR [rbp-0xb0],rax
  405e60:	mov    rax,QWORD PTR [rbp-0xb0]
  405e67:	cmp    rax,QWORD PTR [rbp-0xb8]
  405e6e:	je     405ec3 <test@@Base+0xe1d>
  405e70:	jmp    405eeb <test@@Base+0xe45>
  405e72:	mov    rax,QWORD PTR [rip+0x1417f]        # 419ff8 <stderr@GLIBC_2.2.5>
  405e79:	mov    rax,QWORD PTR [rax]
  405e7c:	mov    edx,0x3a
  405e81:	lea    rsi,[rip+0xe471]        # 4142f9 <g_data@@Base+0x299>
  405e88:	mov    rdi,rax
  405e8b:	mov    eax,0x0
  405e90:	call   403190 <fprintf@plt>
  405e95:	mov    rdx,QWORD PTR [rbp-0xb8]
  405e9c:	mov    rsi,QWORD PTR [rbp-0xb0]
  405ea3:	mov    rax,QWORD PTR [rbp-0x90]
  405eaa:	mov    ecx,0x11
  405eaf:	mov    rdi,rax
  405eb2:	call   410986 <flatcc_json_parser_set_error@@Base>
  405eb7:	mov    QWORD PTR [rbp-0xb0],rax
  405ebe:	jmp    40658b <test@@Base+0x14e5>
  405ec3:	mov    rax,QWORD PTR [rip+0x1412e]        # 419ff8 <stderr@GLIBC_2.2.5>
  405eca:	mov    rax,QWORD PTR [rax]
  405ecd:	mov    rcx,rax
  405ed0:	mov    edx,0xd
  405ed5:	mov    esi,0x1
  405eda:	lea    rdi,[rip+0xe40a]        # 4142eb <g_data@@Base+0x28b>
  405ee1:	call   4031d0 <fwrite@plt>
  405ee6:	jmp    40658b <test@@Base+0x14e5>
  405eeb:	mov    rax,QWORD PTR [rbp-0xa8]
  405ef2:	mov    ecx,0x4
  405ef7:	mov    edx,0x4
  405efc:	mov    esi,0x2
  405f01:	mov    rdi,rax
  405f04:	call   40b619 <flatcc_builder_table_add@@Base>
  405f09:	mov    QWORD PTR [rbp-0x78],rax
  405f0d:	cmp    QWORD PTR [rbp-0x78],0x0
  405f12:	je     40657b <test@@Base+0x14d5>
  405f18:	mov    rax,QWORD PTR [rbp-0xb0]
  405f1f:	mov    QWORD PTR [rbp-0x80],rax
  405f23:	mov    rcx,QWORD PTR [rbp-0x78]
  405f27:	mov    rdx,QWORD PTR [rbp-0xb8]
  405f2e:	mov    rsi,QWORD PTR [rbp-0xb0]
  405f35:	mov    rax,QWORD PTR [rbp-0x90]
  405f3c:	mov    rdi,rax
  405f3f:	call   403c96 <_start@@Base+0xaa6>
  405f44:	mov    QWORD PTR [rbp-0xb0],rax
  405f4b:	mov    rax,QWORD PTR [rbp-0x80]
  405f4f:	cmp    rax,QWORD PTR [rbp-0xb0]
  405f56:	jne    40638c <test@@Base+0x12e6>
  405f5c:	jmp    40658b <test@@Base+0x14e5>
  405f61:	movabs rax,0xffffffff00000000
  405f6b:	and    rax,QWORD PTR [rbp-0x88]
  405f72:	mov    edx,0x7a
  405f77:	movsx  rdx,dl
  405f7b:	mov    rcx,rdx
  405f7e:	shl    rcx,0x38
  405f82:	mov    edx,0x75
  405f87:	movsx  rdx,dl
  405f8b:	shl    rdx,0x30
  405f8f:	or     rcx,rdx
  405f92:	mov    edx,0x6c
  405f97:	movsx  rdx,dl
  405f9b:	shl    rdx,0x28
  405f9f:	or     rcx,rdx
  405fa2:	mov    edx,0x75
  405fa7:	movsx  rdx,dl
  405fab:	shl    rdx,0x20
  405faf:	or     rdx,rcx
  405fb2:	cmp    rax,rdx
  405fb5:	je     405fe5 <test@@Base+0xf3f>
  405fb7:	mov    rdx,QWORD PTR [rbp-0xb8]
  405fbe:	mov    rsi,QWORD PTR [rbp-0xb0]
  405fc5:	mov    rax,QWORD PTR [rbp-0x90]
  405fcc:	mov    ecx,0xd
  405fd1:	mov    rdi,rax
  405fd4:	call   410986 <flatcc_json_parser_set_error@@Base>
  405fd9:	mov    QWORD PTR [rbp-0xb0],rax
  405fe0:	jmp    40658b <test@@Base+0x14e5>
  405fe5:	mov    rax,QWORD PTR [rbp-0xb0]
  405fec:	lea    rcx,[rax+0x4]
  405ff0:	mov    rdx,QWORD PTR [rbp-0xb8]
  405ff7:	mov    rax,QWORD PTR [rbp-0x90]
  405ffe:	mov    rsi,rcx
  406001:	mov    rdi,rax
  406004:	call   4035b1 <_start@@Base+0x3c1>
  406009:	mov    QWORD PTR [rbp-0xb0],rax
  406010:	mov    rdx,QWORD PTR [rbp-0xb8]
  406017:	mov    rcx,QWORD PTR [rbp-0xb0]
  40601e:	mov    rax,QWORD PTR [rbp-0x90]
  406025:	mov    rsi,rcx
  406028:	mov    rdi,rax
  40602b:	call   4032d6 <_start@@Base+0xe6>
  406030:	mov    QWORD PTR [rbp-0xb0],rax
  406037:	mov    rax,QWORD PTR [rbp-0xb0]
  40603e:	cmp    rax,QWORD PTR [rbp-0xb8]
  406045:	jne    40606f <test@@Base+0xfc9>
  406047:	mov    rax,QWORD PTR [rip+0x13faa]        # 419ff8 <stderr@GLIBC_2.2.5>
  40604e:	mov    rax,QWORD PTR [rax]
  406051:	mov    rcx,rax
  406054:	mov    edx,0xd
  406059:	mov    esi,0x1
  40605e:	lea    rdi,[rip+0xe286]        # 4142eb <g_data@@Base+0x28b>
  406065:	call   4031d0 <fwrite@plt>
  40606a:	jmp    40658b <test@@Base+0x14e5>
  40606f:	mov    rax,QWORD PTR [rbp-0xb8]
  406076:	cmp    rax,QWORD PTR [rbp-0xb0]
  40607d:	jbe    4060cd <test@@Base+0x1027>
  40607f:	mov    rax,QWORD PTR [rbp-0xb0]
  406086:	movzx  eax,BYTE PTR [rax]
  406089:	cmp    al,0x3a
  40608b:	jne    4060cd <test@@Base+0x1027>
  40608d:	inc    QWORD PTR [rbp-0xb0]
  406094:	mov    rdx,QWORD PTR [rbp-0xb8]
  40609b:	mov    rcx,QWORD PTR [rbp-0xb0]
  4060a2:	mov    rax,QWORD PTR [rbp-0x90]
  4060a9:	mov    rsi,rcx
  4060ac:	mov    rdi,rax
  4060af:	call   4032d6 <_start@@Base+0xe6>
  4060b4:	mov    QWORD PTR [rbp-0xb0],rax
  4060bb:	mov    rax,QWORD PTR [rbp-0xb0]
  4060c2:	cmp    rax,QWORD PTR [rbp-0xb8]
  4060c9:	je     40611e <test@@Base+0x1078>
  4060cb:	jmp    406146 <test@@Base+0x10a0>
  4060cd:	mov    rax,QWORD PTR [rip+0x13f24]        # 419ff8 <stderr@GLIBC_2.2.5>
  4060d4:	mov    rax,QWORD PTR [rax]
  4060d7:	mov    edx,0x3a
  4060dc:	lea    rsi,[rip+0xe216]        # 4142f9 <g_data@@Base+0x299>
  4060e3:	mov    rdi,rax
  4060e6:	mov    eax,0x0
  4060eb:	call   403190 <fprintf@plt>
  4060f0:	mov    rdx,QWORD PTR [rbp-0xb8]
  4060f7:	mov    rsi,QWORD PTR [rbp-0xb0]
  4060fe:	mov    rax,QWORD PTR [rbp-0x90]
  406105:	mov    ecx,0x11
  40610a:	mov    rdi,rax
  40610d:	call   410986 <flatcc_json_parser_set_error@@Base>
  406112:	mov    QWORD PTR [rbp-0xb0],rax
  406119:	jmp    40658b <test@@Base+0x14e5>
  40611e:	mov    rax,QWORD PTR [rip+0x13ed3]        # 419ff8 <stderr@GLIBC_2.2.5>
  406125:	mov    rax,QWORD PTR [rax]
  406128:	mov    rcx,rax
  40612b:	mov    edx,0xd
  406130:	mov    esi,0x1
  406135:	lea    rdi,[rip+0xe1af]        # 4142eb <g_data@@Base+0x28b>
  40613c:	call   4031d0 <fwrite@plt>
  406141:	jmp    40658b <test@@Base+0x14e5>
  406146:	mov    rdx,QWORD PTR [rbp-0xb8]
  40614d:	mov    rcx,QWORD PTR [rbp-0xb0]
  406154:	mov    rax,QWORD PTR [rbp-0x90]
  40615b:	mov    rsi,rcx
  40615e:	mov    rdi,rax
  406161:	call   403344 <_start@@Base+0x154>
  406166:	mov    QWORD PTR [rbp-0xb0],rax
  40616d:	mov    rax,QWORD PTR [rbp-0xb0]
  406174:	mov    QWORD PTR [rbp-0x80],rax
  406178:	mov    rdx,QWORD PTR [rbp-0xb8]
  40617f:	mov    rcx,QWORD PTR [rbp-0xb0]
  406186:	mov    rax,QWORD PTR [rbp-0x90]
  40618d:	mov    rsi,rcx
  406190:	mov    rdi,rax
  406193:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  406198:	mov    QWORD PTR [rbp-0xb0],rax
  40619f:	mov    rax,QWORD PTR [rbp-0xb0]
  4061a6:	cmp    rax,QWORD PTR [rbp-0xb8]
  4061ad:	je     40657e <test@@Base+0x14d8>
  4061b3:	mov    rax,QWORD PTR [rbp-0xb0]
  4061ba:	movzx  eax,BYTE PTR [rax]
  4061bd:	cmp    al,0x22
  4061bf:	jne    4061f0 <test@@Base+0x114a>
  4061c1:	mov    rax,QWORD PTR [rbp-0xb0]
  4061c8:	sub    rax,QWORD PTR [rbp-0x80]
  4061cc:	mov    rdx,rax
  4061cf:	mov    rcx,QWORD PTR [rbp-0x80]
  4061d3:	mov    rax,QWORD PTR [rbp-0xa8]
  4061da:	mov    rsi,rcx
  4061dd:	mov    rdi,rax
  4061e0:	call   40b2b2 <flatcc_builder_create_string@@Base>
  4061e5:	mov    DWORD PTR [rbp-0x98],eax
  4061eb:	jmp    406329 <test@@Base+0x1283>
  4061f0:	mov    rax,QWORD PTR [rbp-0xa8]
  4061f7:	mov    rdi,rax
  4061fa:	call   4093ae <flatcc_builder_start_string@@Base>
  4061ff:	mov    rax,QWORD PTR [rbp-0xb0]
  406206:	sub    rax,QWORD PTR [rbp-0x80]
  40620a:	mov    rdx,rax
  40620d:	mov    rax,QWORD PTR [rbp-0xa8]
  406214:	mov    rsi,rdx
  406217:	mov    rdi,rax
  40621a:	call   408e23 <flatcc_builder_extend_string@@Base>
  40621f:	mov    QWORD PTR [rbp-0x70],rax
  406223:	cmp    QWORD PTR [rbp-0x70],0x0
  406228:	je     406581 <test@@Base+0x14db>
  40622e:	mov    rax,QWORD PTR [rbp-0xb0]
  406235:	sub    rax,QWORD PTR [rbp-0x80]
  406239:	mov    rdx,rax
  40623c:	mov    rcx,QWORD PTR [rbp-0x80]
  406240:	mov    rax,QWORD PTR [rbp-0x70]
  406244:	mov    rsi,rcx
  406247:	mov    rdi,rax
  40624a:	call   4031a0 <memcpy@plt>
  40624f:	lea    rcx,[rbp-0xc]
  406253:	mov    rdx,QWORD PTR [rbp-0xb8]
  40625a:	mov    rsi,QWORD PTR [rbp-0xb0]
  406261:	mov    rax,QWORD PTR [rbp-0x90]
  406268:	mov    rdi,rax
  40626b:	call   410bdd <flatcc_json_parser_string_escape@@Base>
  406270:	mov    QWORD PTR [rbp-0xb0],rax
  406277:	movzx  eax,BYTE PTR [rbp-0xc]
  40627b:	movsx  rdx,al
  40627f:	lea    rax,[rbp-0xc]
  406283:	inc    rax
  406286:	mov    rcx,QWORD PTR [rbp-0xa8]
  40628d:	mov    rsi,rax
  406290:	mov    rdi,rcx
  406293:	call   408ea2 <flatcc_builder_append_string@@Base>
  406298:	mov    rax,QWORD PTR [rbp-0xb0]
  40629f:	mov    QWORD PTR [rbp-0x80],rax
  4062a3:	mov    rdx,QWORD PTR [rbp-0xb8]
  4062aa:	mov    rcx,QWORD PTR [rbp-0xb0]
  4062b1:	mov    rax,QWORD PTR [rbp-0x90]
  4062b8:	mov    rsi,rcx
  4062bb:	mov    rdi,rax
  4062be:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  4062c3:	mov    QWORD PTR [rbp-0xb0],rax
  4062ca:	mov    rax,QWORD PTR [rbp-0xb0]
  4062d1:	cmp    rax,QWORD PTR [rbp-0xb8]
  4062d8:	je     406584 <test@@Base+0x14de>
  4062de:	mov    rax,QWORD PTR [rbp-0xb0]
  4062e5:	sub    rax,QWORD PTR [rbp-0x80]
  4062e9:	mov    rdx,rax
  4062ec:	mov    rcx,QWORD PTR [rbp-0x80]
  4062f0:	mov    rax,QWORD PTR [rbp-0xa8]
  4062f7:	mov    rsi,rcx
  4062fa:	mov    rdi,rax
  4062fd:	call   408ea2 <flatcc_builder_append_string@@Base>
  406302:	mov    rax,QWORD PTR [rbp-0xb0]
  406309:	movzx  eax,BYTE PTR [rax]
  40630c:	cmp    al,0x22
  40630e:	jne    40624f <test@@Base+0x11a9>
  406314:	mov    rax,QWORD PTR [rbp-0xa8]
  40631b:	mov    rdi,rax
  40631e:	call   40b531 <flatcc_builder_end_string@@Base>
  406323:	mov    DWORD PTR [rbp-0x98],eax
  406329:	cmp    DWORD PTR [rbp-0x98],0x0
  406330:	je     406587 <test@@Base+0x14e1>
  406336:	mov    rax,QWORD PTR [rbp-0xa8]
  40633d:	mov    esi,0xa
  406342:	mov    rdi,rax
  406345:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  40634a:	mov    QWORD PTR [rbp-0x68],rax
  40634e:	cmp    QWORD PTR [rbp-0x68],0x0
  406353:	je     40658a <test@@Base+0x14e4>
  406359:	mov    rax,QWORD PTR [rbp-0x68]
  40635d:	mov    edx,DWORD PTR [rbp-0x98]
  406363:	mov    DWORD PTR [rax],edx
  406365:	mov    rdx,QWORD PTR [rbp-0xb8]
  40636c:	mov    rcx,QWORD PTR [rbp-0xb0]
  406373:	mov    rax,QWORD PTR [rbp-0x90]
  40637a:	mov    rsi,rcx
  40637d:	mov    rdi,rax
  406380:	call   403392 <_start@@Base+0x1a2>
  406385:	mov    QWORD PTR [rbp-0xb0],rax
  40638c:	mov    rdx,QWORD PTR [rbp-0xb8]
  406393:	mov    rcx,QWORD PTR [rbp-0xb0]
  40639a:	mov    rax,QWORD PTR [rbp-0x90]
  4063a1:	mov    rsi,rcx
  4063a4:	mov    rdi,rax
  4063a7:	call   4032d6 <_start@@Base+0xe6>
  4063ac:	mov    QWORD PTR [rbp-0xb0],rax
  4063b3:	mov    rax,QWORD PTR [rbp-0xb0]
  4063ba:	cmp    rax,QWORD PTR [rbp-0xb8]
  4063c1:	jne    4063eb <test@@Base+0x1345>
  4063c3:	mov    rax,QWORD PTR [rip+0x13c2e]        # 419ff8 <stderr@GLIBC_2.2.5>
  4063ca:	mov    rax,QWORD PTR [rax]
  4063cd:	mov    rcx,rax
  4063d0:	mov    edx,0xd
  4063d5:	mov    esi,0x1
  4063da:	lea    rdi,[rip+0xdf0a]        # 4142eb <g_data@@Base+0x28b>
  4063e1:	call   4031d0 <fwrite@plt>
  4063e6:	jmp    40658b <test@@Base+0x14e5>
  4063eb:	mov    rax,QWORD PTR [rbp-0xb0]
  4063f2:	movzx  eax,BYTE PTR [rax]
  4063f5:	cmp    al,0x2c
  4063f7:	jne    406472 <test@@Base+0x13cc>
  4063f9:	inc    QWORD PTR [rbp-0xb0]
  406400:	mov    rdx,QWORD PTR [rbp-0xb8]
  406407:	mov    rcx,QWORD PTR [rbp-0xb0]
  40640e:	mov    rax,QWORD PTR [rbp-0x90]
  406415:	mov    rsi,rcx
  406418:	mov    rdi,rax
  40641b:	call   4032d6 <_start@@Base+0xe6>
  406420:	mov    QWORD PTR [rbp-0xb0],rax
  406427:	mov    rax,QWORD PTR [rbp-0xb0]
  40642e:	cmp    rax,QWORD PTR [rbp-0xb8]
  406435:	jne    40645f <test@@Base+0x13b9>
  406437:	mov    rax,QWORD PTR [rip+0x13bba]        # 419ff8 <stderr@GLIBC_2.2.5>
  40643e:	mov    rax,QWORD PTR [rax]
  406441:	mov    rcx,rax
  406444:	mov    edx,0xd
  406449:	mov    esi,0x1
  40644e:	lea    rdi,[rip+0xde96]        # 4142eb <g_data@@Base+0x28b>
  406455:	call   4031d0 <fwrite@plt>
  40645a:	jmp    40658b <test@@Base+0x14e5>
  40645f:	mov    rax,QWORD PTR [rbp-0xb0]
  406466:	movzx  eax,BYTE PTR [rax]
  406469:	cmp    al,0x7d
  40646b:	je     406472 <test@@Base+0x13cc>
  40646d:	jmp    405298 <test@@Base+0x1f2>
  406472:	mov    rax,QWORD PTR [rbp-0xb8]
  406479:	cmp    rax,QWORD PTR [rbp-0xb0]
  406480:	jbe    4064ff <test@@Base+0x1459>
  406482:	mov    rax,QWORD PTR [rbp-0xb0]
  406489:	movzx  eax,BYTE PTR [rax]
  40648c:	cmp    al,0x7d
  40648e:	jne    4064ff <test@@Base+0x1459>
  406490:	inc    QWORD PTR [rbp-0xb0]
  406497:	mov    rax,QWORD PTR [rbp-0xa8]
  40649e:	mov    rdi,rax
  4064a1:	call   409f78 <flatcc_builder_end_table@@Base>
  4064a6:	mov    DWORD PTR [rbp-0x94],eax
  4064ac:	mov    edx,DWORD PTR [rbp-0x94]
  4064b2:	mov    rax,QWORD PTR [rbp-0xa8]
  4064b9:	mov    esi,edx
  4064bb:	mov    rdi,rax
  4064be:	call   4087f1 <flatcc_builder_end_buffer@@Base>
  4064c3:	mov    rdx,QWORD PTR [rbp-0xb8]
  4064ca:	mov    rcx,QWORD PTR [rbp-0xb0]
  4064d1:	mov    rax,QWORD PTR [rbp-0x90]
  4064d8:	mov    rsi,rcx
  4064db:	mov    rdi,rax
  4064de:	call   4032d6 <_start@@Base+0xe6>
  4064e3:	mov    QWORD PTR [rbp-0xb0],rax
  4064ea:	mov    rax,QWORD PTR [rbp-0xb0]
  4064f1:	cmp    rax,QWORD PTR [rbp-0xb8]
  4064f8:	jne    40654d <test@@Base+0x14a7>
  4064fa:	jmp    40658b <test@@Base+0x14e5>
  4064ff:	mov    rax,QWORD PTR [rip+0x13af2]        # 419ff8 <stderr@GLIBC_2.2.5>
  406506:	mov    rax,QWORD PTR [rax]
  406509:	mov    edx,0x7d
  40650e:	lea    rsi,[rip+0xdde4]        # 4142f9 <g_data@@Base+0x299>
  406515:	mov    rdi,rax
  406518:	mov    eax,0x0
  40651d:	call   403190 <fprintf@plt>
  406522:	mov    rdx,QWORD PTR [rbp-0xb8]
  406529:	mov    rsi,QWORD PTR [rbp-0xb0]
  406530:	mov    rax,QWORD PTR [rbp-0x90]
  406537:	mov    ecx,0x11
  40653c:	mov    rdi,rax
  40653f:	call   410986 <flatcc_json_parser_set_error@@Base>
  406544:	mov    QWORD PTR [rbp-0xb0],rax
  40654b:	jmp    40658b <test@@Base+0x14e5>
  40654d:	mov    rax,QWORD PTR [rip+0x13aa4]        # 419ff8 <stderr@GLIBC_2.2.5>
  406554:	mov    rax,QWORD PTR [rax]
  406557:	mov    rcx,rax
  40655a:	mov    edx,0x1a
  40655f:	mov    esi,0x1
  406564:	lea    rdi,[rip+0xdda4]        # 41430f <g_data@@Base+0x2af>
  40656b:	call   4031d0 <fwrite@plt>
  406570:	jmp    40658b <test@@Base+0x14e5>
  406572:	nop
  406573:	jmp    40658b <test@@Base+0x14e5>
  406575:	nop
  406576:	jmp    40658b <test@@Base+0x14e5>
  406578:	nop
  406579:	jmp    40658b <test@@Base+0x14e5>
  40657b:	nop
  40657c:	jmp    40658b <test@@Base+0x14e5>
  40657e:	nop
  40657f:	jmp    40658b <test@@Base+0x14e5>
  406581:	nop
  406582:	jmp    40658b <test@@Base+0x14e5>
  406584:	nop
  406585:	jmp    40658b <test@@Base+0x14e5>
  406587:	nop
  406588:	jmp    40658b <test@@Base+0x14e5>
  40658a:	nop
  40658b:	mov    rax,QWORD PTR [rbp-0x90]
  406592:	mov    eax,DWORD PTR [rax+0x20]
  406595:	test   eax,eax
  406597:	je     406609 <test@@Base+0x1563>
  406599:	mov    rax,QWORD PTR [rbp-0x90]
  4065a0:	mov    eax,DWORD PTR [rax+0x20]
  4065a3:	mov    edi,eax
  4065a5:	call   4107c9 <flatcc_json_parser_error_string@@Base>
  4065aa:	mov    rsi,rax
  4065ad:	mov    rax,QWORD PTR [rbp-0x90]
  4065b4:	mov    rdx,QWORD PTR [rax+0x38]
  4065b8:	mov    rax,QWORD PTR [rbp-0x90]
  4065bf:	mov    rax,QWORD PTR [rax+0x8]
  4065c3:	sub    rdx,rax
  4065c6:	mov    rax,rdx
  4065c9:	inc    eax
  4065cb:	mov    ecx,eax
  4065cd:	mov    rax,QWORD PTR [rbp-0x90]
  4065d4:	mov    edx,DWORD PTR [rax+0x18]
  4065d7:	mov    rax,QWORD PTR [rip+0x13a1a]        # 419ff8 <stderr@GLIBC_2.2.5>
  4065de:	mov    rax,QWORD PTR [rax]
  4065e1:	mov    r8,rsi
  4065e4:	lea    rsi,[rip+0xdd3f]        # 41432a <g_data@@Base+0x2ca>
  4065eb:	mov    rdi,rax
  4065ee:	mov    eax,0x0
  4065f3:	call   403190 <fprintf@plt>
  4065f8:	mov    rax,QWORD PTR [rbp-0xa8]
  4065ff:	mov    rdi,rax
  406602:	call   4073e1 <flatcc_builder_reset@@Base>
  406607:	jmp    40662c <test@@Base+0x1586>
  406609:	mov    rax,QWORD PTR [rip+0x139e8]        # 419ff8 <stderr@GLIBC_2.2.5>
  406610:	mov    rax,QWORD PTR [rax]
  406613:	mov    rcx,rax
  406616:	mov    edx,0xf
  40661b:	mov    esi,0x1
  406620:	lea    rdi,[rip+0xdd0e]        # 414335 <g_data@@Base+0x2d5>
  406627:	call   4031d0 <fwrite@plt>
  40662c:	mov    rax,QWORD PTR [rbp-0x90]
  406633:	mov    edx,DWORD PTR [rax+0x20]
  406636:	mov    rax,QWORD PTR [rbp-0xc0]
  40663d:	mov    DWORD PTR [rax],edx
  40663f:	mov    rax,QWORD PTR [rbp-0xb0]
  406646:	mov    rdi,QWORD PTR [rbp-0x8]
  40664a:	xor    rdi,QWORD PTR fs:0x28
  406653:	je     40665a <test@@Base+0x15b4>
  406655:	call   403140 <__stack_chk_fail@plt>
  40665a:	leave  
  40665b:	ret    

000000000040665c <main@@Base>:
  40665c:	endbr64 
  406660:	push   rbp
  406661:	mov    rbp,rsp
  406664:	sub    rsp,0x1a0
  40666b:	mov    rax,QWORD PTR fs:0x28
  406674:	mov    QWORD PTR [rbp-0x8],rax
  406678:	xor    eax,eax
  40667a:	mov    DWORD PTR [rbp-0x194],0xffffffff
  406684:	lea    rax,[rbp-0x190]
  40668b:	mov    rdi,rax
  40668e:	call   40719a <flatcc_builder_init@@Base>
  406693:	mov    rax,0x414060
  40669a:	lea    rdx,[rax+0x285]
  4066a1:	lea    rcx,[rbp-0x194]
  4066a8:	lea    rax,[rbp-0x190]
  4066af:	mov    rsi,0x414060
  4066b6:	mov    rdi,rax
  4066b9:	call   4050a6 <test@@Base>
  4066be:	lea    rax,[rbp-0x190]
  4066c5:	mov    rdi,rax
  4066c8:	call   407409 <flatcc_builder_clear@@Base>
  4066cd:	mov    eax,DWORD PTR [rbp-0x194]
  4066d3:	mov    rdx,QWORD PTR [rbp-0x8]
  4066d7:	xor    rdx,QWORD PTR fs:0x28
  4066e0:	je     4066e7 <main@@Base+0x8b>
  4066e2:	call   403140 <__stack_chk_fail@plt>
  4066e7:	leave  
  4066e8:	ret    
  4066e9:	push   rbp
  4066ea:	mov    rbp,rsp
  4066ed:	sub    rsp,0x30
  4066f1:	mov    QWORD PTR [rbp-0x28],rdi
  4066f5:	mov    QWORD PTR [rbp-0x30],rsi
  4066f9:	mov    rax,QWORD PTR fs:0x28
  406702:	mov    QWORD PTR [rbp-0x8],rax
  406706:	xor    eax,eax
  406708:	mov    QWORD PTR [rbp-0x10],0x0
  406710:	cmp    QWORD PTR [rbp-0x28],0x7
  406715:	ja     40671f <main@@Base+0xc3>
  406717:	mov    QWORD PTR [rbp-0x28],0x8
  40671f:	mov    rdx,QWORD PTR [rbp-0x30]
  406723:	mov    rcx,QWORD PTR [rbp-0x28]
  406727:	lea    rax,[rbp-0x10]
  40672b:	mov    rsi,rcx
  40672e:	mov    rdi,rax
  406731:	call   4031e0 <posix_memalign@plt>
  406736:	mov    DWORD PTR [rbp-0x14],eax
  406739:	cmp    DWORD PTR [rbp-0x14],0x0
  40673d:	je     40675c <main@@Base+0x100>
  40673f:	mov    rax,QWORD PTR [rbp-0x10]
  406743:	test   rax,rax
  406746:	je     40675c <main@@Base+0x100>
  406748:	mov    rax,QWORD PTR [rbp-0x10]
  40674c:	mov    rdi,rax
  40674f:	call   403110 <free@plt>
  406754:	mov    QWORD PTR [rbp-0x10],0x0
  40675c:	mov    rax,QWORD PTR [rbp-0x10]
  406760:	mov    rcx,QWORD PTR [rbp-0x8]
  406764:	xor    rcx,QWORD PTR fs:0x28
  40676d:	je     406774 <main@@Base+0x118>
  40676f:	call   403140 <__stack_chk_fail@plt>
  406774:	leave  
  406775:	ret    
  406776:	push   rbp
  406777:	mov    rbp,rsp
  40677a:	mov    DWORD PTR [rbp-0x4],edi
  40677d:	mov    eax,DWORD PTR [rbp-0x4]
  406780:	pop    rbp
  406781:	ret    
  406782:	push   rbp
  406783:	mov    rbp,rsp
  406786:	mov    eax,edi
  406788:	mov    BYTE PTR [rbp-0x4],al
  40678b:	movzx  eax,BYTE PTR [rbp-0x4]
  40678f:	pop    rbp
  406790:	ret    
  406791:	push   rbp
  406792:	mov    rbp,rsp
  406795:	mov    DWORD PTR [rbp-0x4],edi
  406798:	mov    eax,DWORD PTR [rbp-0x4]
  40679b:	pop    rbp
  40679c:	ret    
  40679d:	push   rbp
  40679e:	mov    rbp,rsp
  4067a1:	mov    QWORD PTR [rbp-0x8],rdi
  4067a5:	mov    QWORD PTR [rbp-0x10],rsi
  4067a9:	mov    rax,QWORD PTR [rbp-0x8]
  4067ad:	mov    rdx,QWORD PTR [rax]
  4067b0:	mov    rax,QWORD PTR [rbp-0x8]
  4067b4:	mov    rax,QWORD PTR [rax+0x8]
  4067b8:	cmp    rdx,rax
  4067bb:	jne    4067dd <main@@Base+0x181>
  4067bd:	cmp    QWORD PTR [rbp-0x10],0x0
  4067c2:	je     4067d3 <main@@Base+0x177>
  4067c4:	mov    rax,QWORD PTR [rbp-0x8]
  4067c8:	mov    rdx,QWORD PTR [rax+0x30]
  4067cc:	mov    rax,QWORD PTR [rbp-0x10]
  4067d0:	mov    QWORD PTR [rax],rdx
  4067d3:	mov    rax,QWORD PTR [rbp-0x8]
  4067d7:	mov    rax,QWORD PTR [rax+0x10]
  4067db:	jmp    4067f4 <main@@Base+0x198>
  4067dd:	cmp    QWORD PTR [rbp-0x10],0x0
  4067e2:	je     4067ef <main@@Base+0x193>
  4067e4:	mov    rax,QWORD PTR [rbp-0x10]
  4067e8:	mov    QWORD PTR [rax],0x0
  4067ef:	mov    eax,0x0
  4067f4:	pop    rbp
  4067f5:	ret    
  4067f6:	push   rbp
  4067f7:	mov    rbp,rsp
  4067fa:	sub    rsp,0x20
  4067fe:	mov    QWORD PTR [rbp-0x18],rdi
  406802:	mov    QWORD PTR [rbp-0x20],rsi
  406806:	mov    rdx,QWORD PTR [rbp-0x20]
  40680a:	mov    rax,QWORD PTR [rbp-0x18]
  40680e:	mov    esi,0x0
  406813:	mov    rdi,rax
  406816:	call   403170 <memchr@plt>
  40681b:	mov    QWORD PTR [rbp-0x8],rax
  40681f:	cmp    QWORD PTR [rbp-0x8],0x0
  406824:	je     406830 <main@@Base+0x1d4>
  406826:	mov    rax,QWORD PTR [rbp-0x8]
  40682a:	sub    rax,QWORD PTR [rbp-0x18]
  40682e:	jmp    406834 <main@@Base+0x1d8>
  406830:	mov    rax,QWORD PTR [rbp-0x20]
  406834:	leave  
  406835:	ret    

0000000000406836 <flatcc_builder_default_alloc@@Base>:
  406836:	endbr64 
  40683a:	push   rbp
  40683b:	mov    rbp,rsp
  40683e:	sub    rsp,0x30
  406842:	mov    QWORD PTR [rbp-0x18],rdi
  406846:	mov    QWORD PTR [rbp-0x20],rsi
  40684a:	mov    QWORD PTR [rbp-0x28],rdx
  40684e:	mov    DWORD PTR [rbp-0x2c],ecx
  406851:	mov    DWORD PTR [rbp-0x30],r8d
  406855:	cmp    QWORD PTR [rbp-0x28],0x0
  40685a:	jne    406898 <flatcc_builder_default_alloc@@Base+0x62>
  40685c:	mov    rax,QWORD PTR [rbp-0x20]
  406860:	mov    rax,QWORD PTR [rax]
  406863:	test   rax,rax
  406866:	je     40688e <flatcc_builder_default_alloc@@Base+0x58>
  406868:	mov    rax,QWORD PTR [rbp-0x20]
  40686c:	mov    rax,QWORD PTR [rax]
  40686f:	mov    rdi,rax
  406872:	call   403110 <free@plt>
  406877:	mov    rax,QWORD PTR [rbp-0x20]
  40687b:	mov    QWORD PTR [rax],0x0
  406882:	mov    rax,QWORD PTR [rbp-0x20]
  406886:	mov    QWORD PTR [rax+0x8],0x0
  40688e:	mov    eax,0x0
  406893:	jmp    4069a7 <flatcc_builder_default_alloc@@Base+0x171>
  406898:	cmp    DWORD PTR [rbp-0x30],0x4
  40689c:	je     4068ce <flatcc_builder_default_alloc@@Base+0x98>
  40689e:	cmp    DWORD PTR [rbp-0x30],0x4
  4068a2:	jg     4068ac <flatcc_builder_default_alloc@@Base+0x76>
  4068a4:	cmp    DWORD PTR [rbp-0x30],0x1
  4068a8:	je     4068ba <flatcc_builder_default_alloc@@Base+0x84>
  4068aa:	jmp    4068e2 <flatcc_builder_default_alloc@@Base+0xac>
  4068ac:	cmp    DWORD PTR [rbp-0x30],0x5
  4068b0:	je     4068c4 <flatcc_builder_default_alloc@@Base+0x8e>
  4068b2:	cmp    DWORD PTR [rbp-0x30],0x7
  4068b6:	je     4068d8 <flatcc_builder_default_alloc@@Base+0xa2>
  4068b8:	jmp    4068e2 <flatcc_builder_default_alloc@@Base+0xac>
  4068ba:	mov    QWORD PTR [rbp-0x10],0x100
  4068c2:	jmp    4068eb <flatcc_builder_default_alloc@@Base+0xb5>
  4068c4:	mov    rax,QWORD PTR [rbp-0x28]
  4068c8:	mov    QWORD PTR [rbp-0x10],rax
  4068cc:	jmp    4068eb <flatcc_builder_default_alloc@@Base+0xb5>
  4068ce:	mov    QWORD PTR [rbp-0x10],0x120
  4068d6:	jmp    4068eb <flatcc_builder_default_alloc@@Base+0xb5>
  4068d8:	mov    QWORD PTR [rbp-0x10],0x40
  4068e0:	jmp    4068eb <flatcc_builder_default_alloc@@Base+0xb5>
  4068e2:	mov    QWORD PTR [rbp-0x10],0x20
  4068ea:	nop
  4068eb:	jmp    4068f1 <flatcc_builder_default_alloc@@Base+0xbb>
  4068ed:	shl    QWORD PTR [rbp-0x10],1
  4068f1:	mov    rax,QWORD PTR [rbp-0x10]
  4068f5:	cmp    rax,QWORD PTR [rbp-0x28]
  4068f9:	jb     4068ed <flatcc_builder_default_alloc@@Base+0xb7>
  4068fb:	mov    rax,QWORD PTR [rbp-0x20]
  4068ff:	mov    rax,QWORD PTR [rax+0x8]
  406903:	cmp    QWORD PTR [rbp-0x28],rax
  406907:	ja     406924 <flatcc_builder_default_alloc@@Base+0xee>
  406909:	mov    rax,QWORD PTR [rbp-0x20]
  40690d:	mov    rax,QWORD PTR [rax+0x8]
  406911:	shr    rax,1
  406914:	cmp    QWORD PTR [rbp-0x10],rax
  406918:	ja     406924 <flatcc_builder_default_alloc@@Base+0xee>
  40691a:	mov    eax,0x0
  40691f:	jmp    4069a7 <flatcc_builder_default_alloc@@Base+0x171>
  406924:	mov    rax,QWORD PTR [rbp-0x20]
  406928:	mov    rax,QWORD PTR [rax]
  40692b:	mov    rdx,QWORD PTR [rbp-0x10]
  40692f:	mov    rsi,rdx
  406932:	mov    rdi,rax
  406935:	call   4031c0 <realloc@plt>
  40693a:	mov    QWORD PTR [rbp-0x8],rax
  40693e:	cmp    QWORD PTR [rbp-0x8],0x0
  406943:	jne    40694c <flatcc_builder_default_alloc@@Base+0x116>
  406945:	mov    eax,0xffffffff
  40694a:	jmp    4069a7 <flatcc_builder_default_alloc@@Base+0x171>
  40694c:	cmp    DWORD PTR [rbp-0x2c],0x0
  406950:	je     40698b <flatcc_builder_default_alloc@@Base+0x155>
  406952:	mov    rax,QWORD PTR [rbp-0x20]
  406956:	mov    rax,QWORD PTR [rax+0x8]
  40695a:	cmp    QWORD PTR [rbp-0x10],rax
  40695e:	jbe    40698b <flatcc_builder_default_alloc@@Base+0x155>
  406960:	mov    rax,QWORD PTR [rbp-0x20]
  406964:	mov    rax,QWORD PTR [rax+0x8]
  406968:	mov    rdx,QWORD PTR [rbp-0x10]
  40696c:	sub    rdx,rax
  40696f:	mov    rax,QWORD PTR [rbp-0x20]
  406973:	mov    rcx,QWORD PTR [rax+0x8]
  406977:	mov    rax,QWORD PTR [rbp-0x8]
  40697b:	add    rax,rcx
  40697e:	mov    esi,0x0
  406983:	mov    rdi,rax
  406986:	call   403160 <memset@plt>
  40698b:	mov    rax,QWORD PTR [rbp-0x20]
  40698f:	mov    rdx,QWORD PTR [rbp-0x8]
  406993:	mov    QWORD PTR [rax],rdx
  406996:	mov    rax,QWORD PTR [rbp-0x20]
  40699a:	mov    rdx,QWORD PTR [rbp-0x10]
  40699e:	mov    QWORD PTR [rax+0x8],rdx
  4069a2:	mov    eax,0x0
  4069a7:	leave  
  4069a8:	ret    
  4069a9:	push   rbp
  4069aa:	mov    rbp,rsp
  4069ad:	mov    QWORD PTR [rbp-0x18],rdi
  4069b1:	mov    DWORD PTR [rbp-0x1c],esi
  4069b4:	mov    rax,QWORD PTR [rbp-0x18]
  4069b8:	add    rax,0x58
  4069bc:	add    rax,0x10
  4069c0:	mov    QWORD PTR [rbp-0x8],rax
  4069c4:	mov    rax,QWORD PTR [rbp-0x18]
  4069c8:	mov    rdx,QWORD PTR [rax+0x68]
  4069cc:	mov    rax,QWORD PTR [rbp-0x18]
  4069d0:	mov    eax,DWORD PTR [rax+0x28]
  4069d3:	mov    eax,eax
  4069d5:	add    rdx,rax
  4069d8:	mov    rax,QWORD PTR [rbp-0x18]
  4069dc:	mov    QWORD PTR [rax+0x18],rdx
  4069e0:	mov    rax,QWORD PTR [rbp-0x8]
  4069e4:	mov    rax,QWORD PTR [rax+0x8]
  4069e8:	mov    edx,eax
  4069ea:	mov    rax,QWORD PTR [rbp-0x18]
  4069ee:	mov    eax,DWORD PTR [rax+0x28]
  4069f1:	sub    edx,eax
  4069f3:	mov    rax,QWORD PTR [rbp-0x18]
  4069f7:	mov    DWORD PTR [rax+0x24],edx
  4069fa:	mov    rax,QWORD PTR [rbp-0x18]
  4069fe:	mov    eax,DWORD PTR [rax+0x24]
  406a01:	cmp    DWORD PTR [rbp-0x1c],eax
  406a04:	jae    406a10 <flatcc_builder_default_alloc@@Base+0x1da>
  406a06:	mov    rax,QWORD PTR [rbp-0x18]
  406a0a:	mov    edx,DWORD PTR [rbp-0x1c]
  406a0d:	mov    DWORD PTR [rax+0x24],edx
  406a10:	mov    rax,QWORD PTR [rbp-0x18]
  406a14:	mov    rax,QWORD PTR [rax+0x30]
  406a18:	mov    edx,DWORD PTR [rbp-0x1c]
  406a1b:	mov    DWORD PTR [rax+0x4],edx
  406a1e:	nop
  406a1f:	pop    rbp
  406a20:	ret    
  406a21:	endbr64 
  406a25:	push   rbp
  406a26:	mov    rbp,rsp
  406a29:	sub    rsp,0x30
  406a2d:	mov    QWORD PTR [rbp-0x18],rdi
  406a31:	mov    QWORD PTR [rbp-0x20],rsi
  406a35:	mov    DWORD PTR [rbp-0x24],edx
  406a38:	mov    rax,QWORD PTR [rbp-0x18]
  406a3c:	add    rax,0x58
  406a40:	add    rax,0x10
  406a44:	mov    QWORD PTR [rbp-0x8],rax
  406a48:	mov    rax,QWORD PTR [rbp-0x18]
  406a4c:	mov    rax,QWORD PTR [rax+0x50]
  406a50:	mov    rdx,QWORD PTR [rbp-0x18]
  406a54:	mov    edx,DWORD PTR [rdx+0x28]
  406a57:	mov    ecx,edx
  406a59:	mov    rdx,QWORD PTR [rbp-0x20]
  406a5d:	lea    r9,[rcx+rdx*1]
  406a61:	mov    rdx,QWORD PTR [rbp-0x18]
  406a65:	mov    rdi,QWORD PTR [rdx+0x40]
  406a69:	mov    rsi,QWORD PTR [rbp-0x8]
  406a6d:	mov    r8d,0x1
  406a73:	mov    ecx,0x1
  406a78:	mov    rdx,r9
  406a7b:	call   rax
  406a7d:	test   eax,eax
  406a7f:	je     406a88 <flatcc_builder_default_alloc@@Base+0x252>
  406a81:	mov    eax,0xffffffff
  406a86:	jmp    406a9e <flatcc_builder_default_alloc@@Base+0x268>
  406a88:	mov    edx,DWORD PTR [rbp-0x24]
  406a8b:	mov    rax,QWORD PTR [rbp-0x18]
  406a8f:	mov    esi,edx
  406a91:	mov    rdi,rax
  406a94:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  406a99:	mov    eax,0x0
  406a9e:	leave  
  406a9f:	ret    
  406aa0:	push   rbp
  406aa1:	mov    rbp,rsp
  406aa4:	sub    rsp,0x20
  406aa8:	mov    QWORD PTR [rbp-0x18],rdi
  406aac:	mov    DWORD PTR [rbp-0x1c],esi
  406aaf:	mov    rax,QWORD PTR [rbp-0x18]
  406ab3:	mov    eax,DWORD PTR [rax+0x20]
  406ab6:	mov    eax,eax
  406ab8:	mov    QWORD PTR [rbp-0x8],rax
  406abc:	mov    rax,QWORD PTR [rbp-0x18]
  406ac0:	mov    edx,DWORD PTR [rax+0x20]
  406ac3:	mov    eax,DWORD PTR [rbp-0x1c]
  406ac6:	add    edx,eax
  406ac8:	mov    rax,QWORD PTR [rbp-0x18]
  406acc:	mov    DWORD PTR [rax+0x20],edx
  406acf:	mov    rax,QWORD PTR [rbp-0x18]
  406ad3:	mov    edx,DWORD PTR [rax+0x20]
  406ad6:	mov    rax,QWORD PTR [rbp-0x18]
  406ada:	mov    eax,DWORD PTR [rax+0x24]
  406add:	cmp    edx,eax
  406adf:	jb     406b0b <flatcc_builder_default_alloc@@Base+0x2d5>
  406ae1:	mov    rax,QWORD PTR [rbp-0x18]
  406ae5:	mov    eax,DWORD PTR [rax+0x20]
  406ae8:	inc    eax
  406aea:	mov    ecx,eax
  406aec:	mov    rax,QWORD PTR [rbp-0x18]
  406af0:	mov    edx,0xfffffffc
  406af5:	mov    rsi,rcx
  406af8:	mov    rdi,rax
  406afb:	call   406a21 <flatcc_builder_default_alloc@@Base+0x1eb>
  406b00:	test   eax,eax
  406b02:	je     406b0b <flatcc_builder_default_alloc@@Base+0x2d5>
  406b04:	mov    eax,0x0
  406b09:	jmp    406b1a <flatcc_builder_default_alloc@@Base+0x2e4>
  406b0b:	mov    rax,QWORD PTR [rbp-0x18]
  406b0f:	mov    rdx,QWORD PTR [rax+0x18]
  406b13:	mov    rax,QWORD PTR [rbp-0x8]
  406b17:	add    rax,rdx
  406b1a:	leave  
  406b1b:	ret    
  406b1c:	push   rbp
  406b1d:	mov    rbp,rsp
  406b20:	sub    rsp,0x10
  406b24:	mov    QWORD PTR [rbp-0x8],rdi
  406b28:	mov    DWORD PTR [rbp-0xc],esi
  406b2b:	mov    rax,QWORD PTR [rbp-0x8]
  406b2f:	mov    eax,DWORD PTR [rax+0x20]
  406b32:	sub    eax,DWORD PTR [rbp-0xc]
  406b35:	mov    edx,eax
  406b37:	mov    rax,QWORD PTR [rbp-0x8]
  406b3b:	mov    DWORD PTR [rax+0x20],edx
  406b3e:	mov    eax,DWORD PTR [rbp-0xc]
  406b41:	mov    rdx,QWORD PTR [rbp-0x8]
  406b45:	mov    rcx,QWORD PTR [rdx+0x18]
  406b49:	mov    rdx,QWORD PTR [rbp-0x8]
  406b4d:	mov    edx,DWORD PTR [rdx+0x20]
  406b50:	mov    edx,edx
  406b52:	add    rcx,rdx
  406b55:	mov    rdx,rax
  406b58:	mov    esi,0x0
  406b5d:	mov    rdi,rcx
  406b60:	call   403160 <memset@plt>
  406b65:	nop
  406b66:	leave  
  406b67:	ret    
  406b68:	push   rbp
  406b69:	mov    rbp,rsp
  406b6c:	sub    rsp,0x30
  406b70:	mov    QWORD PTR [rbp-0x18],rdi
  406b74:	mov    QWORD PTR [rbp-0x20],rsi
  406b78:	mov    DWORD PTR [rbp-0x24],edx
  406b7b:	mov    edx,DWORD PTR [rbp-0x24]
  406b7e:	mov    rax,QWORD PTR [rbp-0x18]
  406b82:	mov    esi,edx
  406b84:	mov    rdi,rax
  406b87:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  406b8c:	mov    QWORD PTR [rbp-0x8],rax
  406b90:	cmp    QWORD PTR [rbp-0x8],0x0
  406b95:	jne    406b9e <flatcc_builder_default_alloc@@Base+0x368>
  406b97:	mov    eax,0x0
  406b9c:	jmp    406bb8 <flatcc_builder_default_alloc@@Base+0x382>
  406b9e:	mov    edx,DWORD PTR [rbp-0x24]
  406ba1:	mov    rcx,QWORD PTR [rbp-0x20]
  406ba5:	mov    rax,QWORD PTR [rbp-0x8]
  406ba9:	mov    rsi,rcx
  406bac:	mov    rdi,rax
  406baf:	call   4031a0 <memcpy@plt>
  406bb4:	mov    rax,QWORD PTR [rbp-0x8]
  406bb8:	leave  
  406bb9:	ret    
  406bba:	push   rbp
  406bbb:	mov    rbp,rsp
  406bbe:	sub    rsp,0x30
  406bc2:	mov    QWORD PTR [rbp-0x18],rdi
  406bc6:	mov    DWORD PTR [rbp-0x1c],esi
  406bc9:	mov    eax,ecx
  406bcb:	mov    WORD PTR [rbp-0x20],dx
  406bcf:	mov    WORD PTR [rbp-0x24],ax
  406bd3:	mov    rax,QWORD PTR [rbp-0x18]
  406bd7:	mov    edx,DWORD PTR [rax+0x20]
  406bda:	movzx  eax,WORD PTR [rbp-0x20]
  406bde:	add    eax,edx
  406be0:	lea    edx,[rax-0x1]
  406be3:	movzx  eax,WORD PTR [rbp-0x20]
  406be7:	neg    eax
  406be9:	and    eax,edx
  406beb:	mov    DWORD PTR [rbp-0x4],eax
  406bee:	mov    edx,DWORD PTR [rbp-0x4]
  406bf1:	mov    eax,DWORD PTR [rbp-0x1c]
  406bf4:	add    edx,eax
  406bf6:	mov    rax,QWORD PTR [rbp-0x18]
  406bfa:	mov    DWORD PTR [rax+0x20],edx
  406bfd:	mov    rax,QWORD PTR [rbp-0x18]
  406c01:	mov    edx,DWORD PTR [rax+0x20]
  406c04:	mov    rax,QWORD PTR [rbp-0x18]
  406c08:	mov    eax,DWORD PTR [rax+0x24]
  406c0b:	cmp    edx,eax
  406c0d:	jb     406c39 <flatcc_builder_default_alloc@@Base+0x403>
  406c0f:	mov    rax,QWORD PTR [rbp-0x18]
  406c13:	mov    eax,DWORD PTR [rax+0x20]
  406c16:	inc    eax
  406c18:	mov    ecx,eax
  406c1a:	mov    rax,QWORD PTR [rbp-0x18]
  406c1e:	mov    edx,0xfffc
  406c23:	mov    rsi,rcx
  406c26:	mov    rdi,rax
  406c29:	call   406a21 <flatcc_builder_default_alloc@@Base+0x1eb>
  406c2e:	test   eax,eax
  406c30:	je     406c39 <flatcc_builder_default_alloc@@Base+0x403>
  406c32:	mov    eax,0x0
  406c37:	jmp    406c80 <flatcc_builder_default_alloc@@Base+0x44a>
  406c39:	mov    eax,DWORD PTR [rbp-0x4]
  406c3c:	mov    ecx,eax
  406c3e:	mov    rax,QWORD PTR [rbp-0x18]
  406c42:	mov    rax,QWORD PTR [rax+0x8]
  406c46:	movzx  edx,WORD PTR [rbp-0x24]
  406c4a:	add    rdx,rdx
  406c4d:	add    rdx,rax
  406c50:	lea    eax,[rcx+0x4]
  406c53:	mov    WORD PTR [rdx],ax
  406c56:	mov    rax,QWORD PTR [rbp-0x18]
  406c5a:	movzx  eax,WORD PTR [rax+0x10]
  406c5e:	cmp    WORD PTR [rbp-0x24],ax
  406c62:	jb     406c72 <flatcc_builder_default_alloc@@Base+0x43c>
  406c64:	movzx  eax,WORD PTR [rbp-0x24]
  406c68:	inc    eax
  406c6a:	mov    rdx,QWORD PTR [rbp-0x18]
  406c6e:	mov    WORD PTR [rdx+0x10],ax
  406c72:	mov    rax,QWORD PTR [rbp-0x18]
  406c76:	mov    rdx,QWORD PTR [rax+0x18]
  406c7a:	mov    eax,DWORD PTR [rbp-0x4]
  406c7d:	add    rax,rdx
  406c80:	leave  
  406c81:	ret    
  406c82:	push   rbp
  406c83:	mov    rbp,rsp
  406c86:	sub    rsp,0x20
  406c8a:	mov    QWORD PTR [rbp-0x18],rdi
  406c8e:	mov    eax,esi
  406c90:	mov    WORD PTR [rbp-0x1c],ax
  406c94:	mov    rax,QWORD PTR [rbp-0x18]
  406c98:	mov    eax,DWORD PTR [rax+0x20]
  406c9b:	add    eax,0x3
  406c9e:	and    eax,0xfffffffc
  406ca1:	mov    DWORD PTR [rbp-0x4],eax
  406ca4:	mov    eax,DWORD PTR [rbp-0x4]
  406ca7:	lea    edx,[rax+0x4]
  406caa:	mov    rax,QWORD PTR [rbp-0x18]
  406cae:	mov    DWORD PTR [rax+0x20],edx
  406cb1:	mov    rax,QWORD PTR [rbp-0x18]
  406cb5:	mov    edx,DWORD PTR [rax+0x20]
  406cb8:	mov    rax,QWORD PTR [rbp-0x18]
  406cbc:	mov    eax,DWORD PTR [rax+0x24]
  406cbf:	cmp    edx,eax
  406cc1:	jbe    406ceb <flatcc_builder_default_alloc@@Base+0x4b5>
  406cc3:	mov    rax,QWORD PTR [rbp-0x18]
  406cc7:	mov    eax,DWORD PTR [rax+0x20]
  406cca:	mov    ecx,eax
  406ccc:	mov    rax,QWORD PTR [rbp-0x18]
  406cd0:	mov    edx,0xfffc
  406cd5:	mov    rsi,rcx
  406cd8:	mov    rdi,rax
  406cdb:	call   406a21 <flatcc_builder_default_alloc@@Base+0x1eb>
  406ce0:	test   eax,eax
  406ce2:	je     406ceb <flatcc_builder_default_alloc@@Base+0x4b5>
  406ce4:	mov    eax,0x0
  406ce9:	jmp    406d4a <flatcc_builder_default_alloc@@Base+0x514>
  406ceb:	mov    eax,DWORD PTR [rbp-0x4]
  406cee:	mov    ecx,eax
  406cf0:	mov    rax,QWORD PTR [rbp-0x18]
  406cf4:	mov    rax,QWORD PTR [rax+0x8]
  406cf8:	movzx  edx,WORD PTR [rbp-0x1c]
  406cfc:	add    rdx,rdx
  406cff:	add    rdx,rax
  406d02:	lea    eax,[rcx+0x4]
  406d05:	mov    WORD PTR [rdx],ax
  406d08:	mov    rax,QWORD PTR [rbp-0x18]
  406d0c:	movzx  eax,WORD PTR [rax+0x10]
  406d10:	cmp    WORD PTR [rbp-0x1c],ax
  406d14:	jb     406d24 <flatcc_builder_default_alloc@@Base+0x4ee>
  406d16:	movzx  eax,WORD PTR [rbp-0x1c]
  406d1a:	inc    eax
  406d1c:	mov    rdx,QWORD PTR [rbp-0x18]
  406d20:	mov    WORD PTR [rdx+0x10],ax
  406d24:	mov    rax,QWORD PTR [rbp-0x18]
  406d28:	mov    rax,QWORD PTR [rax]
  406d2b:	lea    rcx,[rax+0x2]
  406d2f:	mov    rdx,QWORD PTR [rbp-0x18]
  406d33:	mov    QWORD PTR [rdx],rcx
  406d36:	mov    edx,DWORD PTR [rbp-0x4]
  406d39:	mov    WORD PTR [rax],dx
  406d3c:	mov    rax,QWORD PTR [rbp-0x18]
  406d40:	mov    rdx,QWORD PTR [rax+0x18]
  406d44:	mov    eax,DWORD PTR [rbp-0x4]
  406d47:	add    rax,rdx
  406d4a:	leave  
  406d4b:	ret    
  406d4c:	push   rbp
  406d4d:	mov    rbp,rsp
  406d50:	sub    rsp,0x30
  406d54:	mov    QWORD PTR [rbp-0x18],rdi
  406d58:	mov    DWORD PTR [rbp-0x1c],esi
  406d5b:	mov    QWORD PTR [rbp-0x28],rdx
  406d5f:	mov    QWORD PTR [rbp-0x30],rcx
  406d63:	mov    DWORD PTR [rbp-0x20],r8d
  406d67:	mov    rax,QWORD PTR [rbp-0x18]
  406d6b:	lea    rdx,[rax+0x58]
  406d6f:	mov    eax,DWORD PTR [rbp-0x1c]
  406d72:	cdqe   
  406d74:	shl    rax,0x4
  406d78:	add    rax,rdx
  406d7b:	mov    QWORD PTR [rbp-0x8],rax
  406d7f:	mov    rdx,QWORD PTR [rbp-0x28]
  406d83:	mov    rax,QWORD PTR [rbp-0x30]
  406d87:	add    rdx,rax
  406d8a:	mov    rax,QWORD PTR [rbp-0x8]
  406d8e:	mov    rax,QWORD PTR [rax+0x8]
  406d92:	cmp    rdx,rax
  406d95:	jbe    406dea <flatcc_builder_default_alloc@@Base+0x5b4>
  406d97:	mov    rax,QWORD PTR [rbp-0x18]
  406d9b:	mov    rax,QWORD PTR [rax+0x50]
  406d9f:	mov    rcx,QWORD PTR [rbp-0x28]
  406da3:	mov    rdx,QWORD PTR [rbp-0x30]
  406da7:	lea    r9,[rcx+rdx*1]
  406dab:	mov    rdx,QWORD PTR [rbp-0x18]
  406daf:	mov    rdi,QWORD PTR [rdx+0x40]
  406db3:	mov    ecx,DWORD PTR [rbp-0x1c]
  406db6:	mov    edx,DWORD PTR [rbp-0x20]
  406db9:	mov    rsi,QWORD PTR [rbp-0x8]
  406dbd:	mov    r8d,ecx
  406dc0:	mov    ecx,edx
  406dc2:	mov    rdx,r9
  406dc5:	call   rax
  406dc7:	test   eax,eax
  406dc9:	je     406dea <flatcc_builder_default_alloc@@Base+0x5b4>
  406dcb:	lea    rcx,[rip+0xdc26]        # 4149f8 <flatcc_builder_padding_base@@Base+0x658>
  406dd2:	mov    edx,0x134
  406dd7:	lea    rsi,[rip+0xd7c2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  406dde:	lea    rdi,[rip+0xd81b]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  406de5:	call   403150 <__assert_fail@plt>
  406dea:	mov    rax,QWORD PTR [rbp-0x8]
  406dee:	mov    rax,QWORD PTR [rax]
  406df1:	mov    rdx,rax
  406df4:	mov    rax,QWORD PTR [rbp-0x28]
  406df8:	add    rax,rdx
  406dfb:	leave  
  406dfc:	ret    
  406dfd:	push   rbp
  406dfe:	mov    rbp,rsp
  406e01:	sub    rsp,0x20
  406e05:	mov    QWORD PTR [rbp-0x18],rdi
  406e09:	mov    DWORD PTR [rbp-0x1c],esi
  406e0c:	mov    rax,QWORD PTR [rbp-0x18]
  406e10:	mov    rax,QWORD PTR [rax+0x30]
  406e14:	mov    edx,DWORD PTR [rax+0x10]
  406e17:	mov    rax,QWORD PTR [rbp-0x18]
  406e1b:	mov    rax,QWORD PTR [rax+0x30]
  406e1f:	movzx  eax,WORD PTR [rax+0x1c]
  406e23:	movzx  eax,ax
  406e26:	add    eax,eax
  406e28:	add    eax,edx
  406e2a:	mov    DWORD PTR [rbp-0x8],eax
  406e2d:	mov    eax,DWORD PTR [rbp-0x1c]
  406e30:	add    eax,0x2
  406e33:	cdqe   
  406e35:	add    eax,eax
  406e37:	mov    DWORD PTR [rbp-0x4],eax
  406e3a:	mov    ecx,DWORD PTR [rbp-0x4]
  406e3d:	mov    edx,DWORD PTR [rbp-0x8]
  406e40:	mov    rax,QWORD PTR [rbp-0x18]
  406e44:	mov    r8d,0x1
  406e4a:	mov    esi,0x0
  406e4f:	mov    rdi,rax
  406e52:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  406e57:	mov    rdx,rax
  406e5a:	mov    rax,QWORD PTR [rbp-0x18]
  406e5e:	mov    QWORD PTR [rax+0x8],rdx
  406e62:	mov    rax,QWORD PTR [rbp-0x18]
  406e66:	mov    rax,QWORD PTR [rax+0x8]
  406e6a:	test   rax,rax
  406e6d:	jne    406e76 <flatcc_builder_default_alloc@@Base+0x640>
  406e6f:	mov    eax,0xffffffff
  406e74:	jmp    406ee3 <flatcc_builder_default_alloc@@Base+0x6ad>
  406e76:	mov    rax,QWORD PTR [rbp-0x18]
  406e7a:	mov    rax,QWORD PTR [rax+0x8]
  406e7e:	lea    rdx,[rax+0x4]
  406e82:	mov    rax,QWORD PTR [rbp-0x18]
  406e86:	mov    QWORD PTR [rax+0x8],rdx
  406e8a:	mov    rax,QWORD PTR [rbp-0x18]
  406e8e:	mov    rax,QWORD PTR [rax+0x30]
  406e92:	mov    eax,DWORD PTR [rax+0x14]
  406e95:	mov    DWORD PTR [rbp-0x8],eax
  406e98:	mov    eax,DWORD PTR [rbp-0x1c]
  406e9b:	cdqe   
  406e9d:	add    eax,eax
  406e9f:	inc    eax
  406ea1:	mov    DWORD PTR [rbp-0x4],eax
  406ea4:	mov    ecx,DWORD PTR [rbp-0x4]
  406ea7:	mov    edx,DWORD PTR [rbp-0x8]
  406eaa:	mov    rax,QWORD PTR [rbp-0x18]
  406eae:	mov    r8d,0x0
  406eb4:	mov    esi,0x3
  406eb9:	mov    rdi,rax
  406ebc:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  406ec1:	mov    rdx,rax
  406ec4:	mov    rax,QWORD PTR [rbp-0x18]
  406ec8:	mov    QWORD PTR [rax],rdx
  406ecb:	mov    rax,QWORD PTR [rbp-0x18]
  406ecf:	mov    rax,QWORD PTR [rax]
  406ed2:	test   rax,rax
  406ed5:	jne    406ede <flatcc_builder_default_alloc@@Base+0x6a8>
  406ed7:	mov    eax,0xffffffff
  406edc:	jmp    406ee3 <flatcc_builder_default_alloc@@Base+0x6ad>
  406ede:	mov    eax,0x0
  406ee3:	leave  
  406ee4:	ret    
  406ee5:	endbr64 
  406ee9:	push   rbp
  406eea:	mov    rbp,rsp
  406eed:	sub    rsp,0x30
  406ef1:	mov    QWORD PTR [rbp-0x28],rdi
  406ef5:	mov    rax,QWORD PTR [rbp-0x28]
  406ef9:	add    rax,0x58
  406efd:	add    rax,0x50
  406f01:	mov    QWORD PTR [rbp-0x8],rax
  406f05:	mov    rax,QWORD PTR [rbp-0x28]
  406f09:	mov    eax,DWORD PTR [rax+0xe4]
  406f0f:	test   eax,eax
  406f11:	je     406f32 <flatcc_builder_default_alloc@@Base+0x6fc>
  406f13:	lea    rcx,[rip+0xdace]        # 4149e8 <flatcc_builder_padding_base@@Base+0x648>
  406f1a:	mov    edx,0x156
  406f1f:	lea    rsi,[rip+0xd67a]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  406f26:	lea    rdi,[rip+0xd6d5]        # 414602 <flatcc_builder_padding_base@@Base+0x262>
  406f2d:	call   403150 <__assert_fail@plt>
  406f32:	mov    rax,QWORD PTR [rbp-0x28]
  406f36:	mov    eax,DWORD PTR [rax+0xe4]
  406f3c:	mov    edx,eax
  406f3e:	mov    rax,QWORD PTR [rbp-0x28]
  406f42:	mov    r8d,0x0
  406f48:	mov    ecx,0x10
  406f4d:	mov    esi,0x6
  406f52:	mov    rdi,rax
  406f55:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  406f5a:	test   rax,rax
  406f5d:	jne    406f69 <flatcc_builder_default_alloc@@Base+0x733>
  406f5f:	mov    eax,0xffffffff
  406f64:	jmp    40700a <flatcc_builder_default_alloc@@Base+0x7d4>
  406f69:	mov    rax,QWORD PTR [rbp-0x28]
  406f6d:	mov    DWORD PTR [rax+0xe4],0x10
  406f77:	mov    QWORD PTR [rbp-0x18],0x100
  406f7f:	mov    rax,QWORD PTR [rbp-0x28]
  406f83:	mov    rax,QWORD PTR [rax+0x50]
  406f87:	mov    rdx,QWORD PTR [rbp-0x28]
  406f8b:	mov    rdi,QWORD PTR [rdx+0x40]
  406f8f:	mov    rdx,QWORD PTR [rbp-0x18]
  406f93:	mov    rsi,QWORD PTR [rbp-0x8]
  406f97:	mov    r8d,0x5
  406f9d:	mov    ecx,0x1
  406fa2:	call   rax
  406fa4:	test   eax,eax
  406fa6:	je     406fb3 <flatcc_builder_default_alloc@@Base+0x77d>
  406fa8:	mov    eax,0xffffffff
  406fad:	jmp    40700a <flatcc_builder_default_alloc@@Base+0x7d4>
  406faf:	shl    QWORD PTR [rbp-0x18],1
  406fb3:	mov    rax,QWORD PTR [rbp-0x18]
  406fb7:	lea    rdx,[rax+rax*1]
  406fbb:	mov    rax,QWORD PTR [rbp-0x8]
  406fbf:	mov    rax,QWORD PTR [rax+0x8]
  406fc3:	cmp    rdx,rax
  406fc6:	jbe    406faf <flatcc_builder_default_alloc@@Base+0x779>
  406fc8:	mov    rax,QWORD PTR [rbp-0x18]
  406fcc:	shr    rax,0x2
  406fd0:	mov    QWORD PTR [rbp-0x18],rax
  406fd4:	mov    QWORD PTR [rbp-0x10],0x0
  406fdc:	jmp    406fe2 <flatcc_builder_default_alloc@@Base+0x7ac>
  406fde:	inc    QWORD PTR [rbp-0x10]
  406fe2:	mov    rax,QWORD PTR [rbp-0x10]
  406fe6:	mov    edx,0x1
  406feb:	shlx   rax,rdx,rax
  406ff0:	cmp    QWORD PTR [rbp-0x18],rax
  406ff4:	ja     406fde <flatcc_builder_default_alloc@@Base+0x7a8>
  406ff6:	mov    rax,QWORD PTR [rbp-0x28]
  406ffa:	mov    rdx,QWORD PTR [rbp-0x10]
  406ffe:	mov    QWORD PTR [rax+0xd8],rdx
  407005:	mov    eax,0x0
  40700a:	leave  
  40700b:	ret    
  40700c:	push   rbp
  40700d:	mov    rbp,rsp
  407010:	sub    rsp,0x20
  407014:	mov    QWORD PTR [rbp-0x18],rdi
  407018:	mov    DWORD PTR [rbp-0x1c],esi
  40701b:	mov    rax,QWORD PTR [rbp-0x18]
  40701f:	mov    rax,QWORD PTR [rax+0xd8]
  407026:	test   rax,rax
  407029:	jne    407042 <flatcc_builder_default_alloc@@Base+0x80c>
  40702b:	mov    rax,QWORD PTR [rbp-0x18]
  40702f:	mov    rdi,rax
  407032:	call   406ee5 <flatcc_builder_default_alloc@@Base+0x6af>
  407037:	test   eax,eax
  407039:	je     407042 <flatcc_builder_default_alloc@@Base+0x80c>
  40703b:	mov    eax,0x0
  407040:	jmp    40707e <flatcc_builder_default_alloc@@Base+0x848>
  407042:	mov    rax,QWORD PTR [rbp-0x18]
  407046:	mov    rax,QWORD PTR [rax+0xa8]
  40704d:	mov    QWORD PTR [rbp-0x8],rax
  407051:	mov    rax,QWORD PTR [rbp-0x18]
  407055:	mov    rax,QWORD PTR [rax+0xd8]
  40705c:	mov    edx,0x20
  407061:	sub    edx,eax
  407063:	mov    eax,edx
  407065:	mov    edx,DWORD PTR [rbp-0x1c]
  407068:	shrx   eax,edx,eax
  40706d:	mov    eax,eax
  40706f:	lea    rdx,[rax*4+0x0]
  407077:	mov    rax,QWORD PTR [rbp-0x8]
  40707b:	add    rax,rdx
  40707e:	leave  
  40707f:	ret    

0000000000407080 <flatcc_builder_flush_vtable_cache@@Base>:
  407080:	endbr64 
  407084:	push   rbp
  407085:	mov    rbp,rsp
  407088:	sub    rsp,0x20
  40708c:	mov    QWORD PTR [rbp-0x18],rdi
  407090:	mov    rax,QWORD PTR [rbp-0x18]
  407094:	add    rax,0x58
  407098:	add    rax,0x50
  40709c:	mov    QWORD PTR [rbp-0x8],rax
  4070a0:	mov    rax,QWORD PTR [rbp-0x18]
  4070a4:	mov    rax,QWORD PTR [rax+0xd8]
  4070ab:	test   rax,rax
  4070ae:	je     4070ea <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  4070b0:	mov    rax,QWORD PTR [rbp-0x8]
  4070b4:	mov    rdx,QWORD PTR [rax+0x8]
  4070b8:	mov    rax,QWORD PTR [rbp-0x8]
  4070bc:	mov    rax,QWORD PTR [rax]
  4070bf:	mov    esi,0x0
  4070c4:	mov    rdi,rax
  4070c7:	call   403160 <memset@plt>
  4070cc:	mov    rax,QWORD PTR [rbp-0x18]
  4070d0:	mov    DWORD PTR [rax+0xe4],0x10
  4070da:	mov    rax,QWORD PTR [rbp-0x18]
  4070de:	mov    DWORD PTR [rax+0xe0],0x0
  4070e8:	jmp    4070eb <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  4070ea:	nop
  4070eb:	leave  
  4070ec:	ret    

00000000004070ed <flatcc_builder_custom_init@@Base>:
  4070ed:	endbr64 
  4070f1:	push   rbp
  4070f2:	mov    rbp,rsp
  4070f5:	sub    rsp,0x30
  4070f9:	mov    QWORD PTR [rbp-0x8],rdi
  4070fd:	mov    QWORD PTR [rbp-0x10],rsi
  407101:	mov    QWORD PTR [rbp-0x18],rdx
  407105:	mov    QWORD PTR [rbp-0x20],rcx
  407109:	mov    QWORD PTR [rbp-0x28],r8
  40710d:	mov    rax,QWORD PTR [rbp-0x8]
  407111:	mov    edx,0x188
  407116:	mov    esi,0x0
  40711b:	mov    rdi,rax
  40711e:	call   403160 <memset@plt>
  407123:	cmp    QWORD PTR [rbp-0x10],0x0
  407128:	jne    407151 <flatcc_builder_custom_init@@Base+0x64>
  40712a:	mov    rax,QWORD PTR [rbp-0x8]
  40712e:	mov    DWORD PTR [rax+0x128],0x1
  407138:	mov    rax,0x40c68a
  40713f:	mov    QWORD PTR [rbp-0x10],rax
  407143:	mov    rax,QWORD PTR [rbp-0x8]
  407147:	add    rax,0x130
  40714d:	mov    QWORD PTR [rbp-0x18],rax
  407151:	cmp    QWORD PTR [rbp-0x20],0x0
  407156:	jne    407163 <flatcc_builder_custom_init@@Base+0x76>
  407158:	mov    rax,0x406836
  40715f:	mov    QWORD PTR [rbp-0x20],rax
  407163:	mov    rax,QWORD PTR [rbp-0x8]
  407167:	mov    rdx,QWORD PTR [rbp-0x28]
  40716b:	mov    QWORD PTR [rax+0x40],rdx
  40716f:	mov    rax,QWORD PTR [rbp-0x8]
  407173:	mov    rdx,QWORD PTR [rbp-0x20]
  407177:	mov    QWORD PTR [rax+0x50],rdx
  40717b:	mov    rax,QWORD PTR [rbp-0x8]
  40717f:	mov    rdx,QWORD PTR [rbp-0x18]
  407183:	mov    QWORD PTR [rax+0x38],rdx
  407187:	mov    rax,QWORD PTR [rbp-0x8]
  40718b:	mov    rdx,QWORD PTR [rbp-0x10]
  40718f:	mov    QWORD PTR [rax+0x48],rdx
  407193:	mov    eax,0x0
  407198:	leave  
  407199:	ret    

000000000040719a <flatcc_builder_init@@Base>:
  40719a:	endbr64 
  40719e:	push   rbp
  40719f:	mov    rbp,rsp
  4071a2:	sub    rsp,0x10
  4071a6:	mov    QWORD PTR [rbp-0x8],rdi
  4071aa:	mov    rax,QWORD PTR [rbp-0x8]
  4071ae:	mov    r8d,0x0
  4071b4:	mov    ecx,0x0
  4071b9:	mov    edx,0x0
  4071be:	mov    esi,0x0
  4071c3:	mov    rdi,rax
  4071c6:	call   4070ed <flatcc_builder_custom_init@@Base>
  4071cb:	leave  
  4071cc:	ret    

00000000004071cd <flatcc_builder_custom_reset@@Base>:
  4071cd:	endbr64 
  4071d1:	push   rbp
  4071d2:	mov    rbp,rsp
  4071d5:	sub    rsp,0x20
  4071d9:	mov    QWORD PTR [rbp-0x18],rdi
  4071dd:	mov    DWORD PTR [rbp-0x1c],esi
  4071e0:	mov    DWORD PTR [rbp-0x20],edx
  4071e3:	mov    DWORD PTR [rbp-0xc],0x0
  4071ea:	jmp    4072a0 <flatcc_builder_custom_reset@@Base+0xd3>
  4071ef:	mov    rax,QWORD PTR [rbp-0x18]
  4071f3:	lea    rdx,[rax+0x58]
  4071f7:	mov    eax,DWORD PTR [rbp-0xc]
  4071fa:	cdqe   
  4071fc:	shl    rax,0x4
  407200:	add    rax,rdx
  407203:	mov    QWORD PTR [rbp-0x8],rax
  407207:	mov    rax,QWORD PTR [rbp-0x8]
  40720b:	mov    rax,QWORD PTR [rax]
  40720e:	test   rax,rax
  407211:	je     407271 <flatcc_builder_custom_reset@@Base+0xa4>
  407213:	cmp    DWORD PTR [rbp-0xc],0x5
  407217:	je     407253 <flatcc_builder_custom_reset@@Base+0x86>
  407219:	cmp    DWORD PTR [rbp-0x20],0x0
  40721d:	je     407253 <flatcc_builder_custom_reset@@Base+0x86>
  40721f:	mov    rax,QWORD PTR [rbp-0x18]
  407223:	mov    rax,QWORD PTR [rax+0x50]
  407227:	mov    rdx,QWORD PTR [rbp-0x18]
  40722b:	mov    rdi,QWORD PTR [rdx+0x40]
  40722f:	mov    edx,DWORD PTR [rbp-0xc]
  407232:	mov    rsi,QWORD PTR [rbp-0x8]
  407236:	mov    r8d,edx
  407239:	mov    ecx,0x1
  40723e:	mov    edx,0x1
  407243:	call   rax
  407245:	test   eax,eax
  407247:	je     407253 <flatcc_builder_custom_reset@@Base+0x86>
  407249:	mov    eax,0xffffffff
  40724e:	jmp    4073df <flatcc_builder_custom_reset@@Base+0x212>
  407253:	mov    rax,QWORD PTR [rbp-0x8]
  407257:	mov    rdx,QWORD PTR [rax+0x8]
  40725b:	mov    rax,QWORD PTR [rbp-0x8]
  40725f:	mov    rax,QWORD PTR [rax]
  407262:	mov    esi,0x0
  407267:	mov    rdi,rax
  40726a:	call   403160 <memset@plt>
  40726f:	jmp    40729d <flatcc_builder_custom_reset@@Base+0xd0>
  407271:	mov    rax,QWORD PTR [rbp-0x8]
  407275:	mov    rax,QWORD PTR [rax+0x8]
  407279:	test   rax,rax
  40727c:	je     40729d <flatcc_builder_custom_reset@@Base+0xd0>
  40727e:	lea    rcx,[rip+0xd78b]        # 414a10 <flatcc_builder_padding_base@@Base+0x670>
  407285:	mov    edx,0x1b2
  40728a:	lea    rsi,[rip+0xd30f]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407291:	lea    rdi,[rip+0xd379]        # 414611 <flatcc_builder_padding_base@@Base+0x271>
  407298:	call   403150 <__assert_fail@plt>
  40729d:	inc    DWORD PTR [rbp-0xc]
  4072a0:	cmp    DWORD PTR [rbp-0xc],0x7
  4072a4:	jle    4071ef <flatcc_builder_custom_reset@@Base+0x22>
  4072aa:	mov    rax,QWORD PTR [rbp-0x18]
  4072ae:	mov    DWORD PTR [rax+0xe0],0x0
  4072b8:	mov    rax,QWORD PTR [rbp-0x18]
  4072bc:	mov    eax,DWORD PTR [rax+0xe4]
  4072c2:	test   eax,eax
  4072c4:	je     4072d4 <flatcc_builder_custom_reset@@Base+0x107>
  4072c6:	mov    rax,QWORD PTR [rbp-0x18]
  4072ca:	mov    DWORD PTR [rax+0xe4],0x10
  4072d4:	mov    rax,QWORD PTR [rbp-0x18]
  4072d8:	mov    WORD PTR [rax+0xe8],0x0
  4072e1:	mov    rax,QWORD PTR [rbp-0x18]
  4072e5:	mov    DWORD PTR [rax+0xf0],0x0
  4072ef:	mov    rax,QWORD PTR [rbp-0x18]
  4072f3:	mov    DWORD PTR [rax+0xf4],0x0
  4072fd:	mov    rax,QWORD PTR [rbp-0x18]
  407301:	mov    DWORD PTR [rax+0x104],0x0
  40730b:	mov    rax,QWORD PTR [rbp-0x18]
  40730f:	mov    DWORD PTR [rax+0x108],0x0
  407319:	mov    rax,QWORD PTR [rbp-0x18]
  40731d:	mov    DWORD PTR [rax+0x20],0x0
  407324:	mov    rax,QWORD PTR [rbp-0x18]
  407328:	mov    DWORD PTR [rax+0x24],0x0
  40732f:	mov    rax,QWORD PTR [rbp-0x18]
  407333:	mov    DWORD PTR [rax+0xfc],0x0
  40733d:	mov    rax,QWORD PTR [rbp-0x18]
  407341:	mov    DWORD PTR [rax+0x100],0x0
  40734b:	mov    rax,QWORD PTR [rbp-0x18]
  40734f:	mov    rdx,QWORD PTR [rax+0x68]
  407353:	mov    rax,QWORD PTR [rbp-0x18]
  407357:	mov    QWORD PTR [rax+0x18],rdx
  40735b:	mov    rax,QWORD PTR [rbp-0x18]
  40735f:	mov    rdx,QWORD PTR [rax+0x88]
  407366:	mov    rax,QWORD PTR [rbp-0x18]
  40736a:	mov    QWORD PTR [rax],rdx
  40736d:	mov    rax,QWORD PTR [rbp-0x18]
  407371:	mov    rdx,QWORD PTR [rax+0x58]
  407375:	mov    rax,QWORD PTR [rbp-0x18]
  407379:	mov    QWORD PTR [rax+0x8],rdx
  40737d:	mov    rax,QWORD PTR [rbp-0x18]
  407381:	mov    QWORD PTR [rax+0x30],0x0
  407389:	cmp    DWORD PTR [rbp-0x1c],0x0
  40738d:	je     4073ba <flatcc_builder_custom_reset@@Base+0x1ed>
  40738f:	mov    rax,QWORD PTR [rbp-0x18]
  407393:	mov    QWORD PTR [rax+0x118],0x0
  40739e:	mov    rax,QWORD PTR [rbp-0x18]
  4073a2:	mov    DWORD PTR [rax+0x120],0x0
  4073ac:	mov    rax,QWORD PTR [rbp-0x18]
  4073b0:	mov    DWORD PTR [rax+0x124],0x0
  4073ba:	mov    rax,QWORD PTR [rbp-0x18]
  4073be:	mov    eax,DWORD PTR [rax+0x128]
  4073c4:	test   eax,eax
  4073c6:	je     4073da <flatcc_builder_custom_reset@@Base+0x20d>
  4073c8:	mov    rax,QWORD PTR [rbp-0x18]
  4073cc:	add    rax,0x130
  4073d2:	mov    rdi,rax
  4073d5:	call   40c465 <flatcc_emitter_reset@@Base>
  4073da:	mov    eax,0x0
  4073df:	leave  
  4073e0:	ret    

00000000004073e1 <flatcc_builder_reset@@Base>:
  4073e1:	endbr64 
  4073e5:	push   rbp
  4073e6:	mov    rbp,rsp
  4073e9:	sub    rsp,0x10
  4073ed:	mov    QWORD PTR [rbp-0x8],rdi
  4073f1:	mov    rax,QWORD PTR [rbp-0x8]
  4073f5:	mov    edx,0x0
  4073fa:	mov    esi,0x0
  4073ff:	mov    rdi,rax
  407402:	call   4071cd <flatcc_builder_custom_reset@@Base>
  407407:	leave  
  407408:	ret    

0000000000407409 <flatcc_builder_clear@@Base>:
  407409:	endbr64 
  40740d:	push   rbp
  40740e:	mov    rbp,rsp
  407411:	sub    rsp,0x20
  407415:	mov    QWORD PTR [rbp-0x18],rdi
  407419:	mov    DWORD PTR [rbp-0xc],0x0
  407420:	jmp    407463 <flatcc_builder_clear@@Base+0x5a>
  407422:	mov    rax,QWORD PTR [rbp-0x18]
  407426:	lea    rdx,[rax+0x58]
  40742a:	mov    eax,DWORD PTR [rbp-0xc]
  40742d:	cdqe   
  40742f:	shl    rax,0x4
  407433:	add    rax,rdx
  407436:	mov    QWORD PTR [rbp-0x8],rax
  40743a:	mov    rax,QWORD PTR [rbp-0x18]
  40743e:	mov    rax,QWORD PTR [rax+0x50]
  407442:	mov    rdx,QWORD PTR [rbp-0x18]
  407446:	mov    rdi,QWORD PTR [rdx+0x40]
  40744a:	mov    edx,DWORD PTR [rbp-0xc]
  40744d:	mov    rsi,QWORD PTR [rbp-0x8]
  407451:	mov    r8d,edx
  407454:	mov    ecx,0x0
  407459:	mov    edx,0x0
  40745e:	call   rax
  407460:	inc    DWORD PTR [rbp-0xc]
  407463:	cmp    DWORD PTR [rbp-0xc],0x7
  407467:	jle    407422 <flatcc_builder_clear@@Base+0x19>
  407469:	mov    rax,QWORD PTR [rbp-0x18]
  40746d:	mov    eax,DWORD PTR [rax+0x128]
  407473:	test   eax,eax
  407475:	je     407489 <flatcc_builder_clear@@Base+0x80>
  407477:	mov    rax,QWORD PTR [rbp-0x18]
  40747b:	add    rax,0x130
  407481:	mov    rdi,rax
  407484:	call   40c5f7 <flatcc_emitter_clear@@Base>
  407489:	mov    rax,QWORD PTR [rbp-0x18]
  40748d:	mov    edx,0x188
  407492:	mov    esi,0x0
  407497:	mov    rdi,rax
  40749a:	call   403160 <memset@plt>
  40749f:	nop
  4074a0:	leave  
  4074a1:	ret    
  4074a2:	push   rbp
  4074a3:	mov    rbp,rsp
  4074a6:	mov    QWORD PTR [rbp-0x8],rdi
  4074aa:	mov    eax,esi
  4074ac:	mov    WORD PTR [rbp-0xc],ax
  4074b0:	mov    rax,QWORD PTR [rbp-0x8]
  4074b4:	movzx  eax,WORD PTR [rax+0xe8]
  4074bb:	cmp    WORD PTR [rbp-0xc],ax
  4074bf:	jbe    4074d0 <flatcc_builder_clear@@Base+0xc7>
  4074c1:	mov    rdx,QWORD PTR [rbp-0x8]
  4074c5:	movzx  eax,WORD PTR [rbp-0xc]
  4074c9:	mov    WORD PTR [rdx+0xe8],ax
  4074d0:	nop
  4074d1:	pop    rbp
  4074d2:	ret    
  4074d3:	push   rbp
  4074d4:	mov    rbp,rsp
  4074d7:	mov    QWORD PTR [rbp-0x8],rdi
  4074db:	mov    eax,esi
  4074dd:	mov    WORD PTR [rbp-0xc],ax
  4074e1:	mov    rax,QWORD PTR [rbp-0x8]
  4074e5:	movzx  eax,WORD PTR [rax]
  4074e8:	cmp    WORD PTR [rbp-0xc],ax
  4074ec:	jbe    4074f9 <flatcc_builder_clear@@Base+0xf0>
  4074ee:	mov    rdx,QWORD PTR [rbp-0x8]
  4074f2:	movzx  eax,WORD PTR [rbp-0xc]
  4074f6:	mov    WORD PTR [rdx],ax
  4074f9:	nop
  4074fa:	pop    rbp
  4074fb:	ret    

00000000004074fc <flatcc_builder_enter_user_frame_ptr@@Base>:
  4074fc:	endbr64 
  407500:	push   rbp
  407501:	mov    rbp,rsp
  407504:	sub    rsp,0x20
  407508:	mov    QWORD PTR [rbp-0x18],rdi
  40750c:	mov    QWORD PTR [rbp-0x20],rsi
  407510:	mov    rax,QWORD PTR [rbp-0x20]
  407514:	add    rax,0x7
  407518:	and    rax,0xfffffffffffffff8
  40751c:	add    rax,0x8
  407520:	mov    QWORD PTR [rbp-0x20],rax
  407524:	mov    rax,QWORD PTR [rbp-0x18]
  407528:	mov    rdx,QWORD PTR [rax+0x180]
  40752f:	mov    rcx,QWORD PTR [rbp-0x20]
  407533:	mov    rax,QWORD PTR [rbp-0x18]
  407537:	mov    r8d,0x0
  40753d:	mov    esi,0x7
  407542:	mov    rdi,rax
  407545:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  40754a:	mov    QWORD PTR [rbp-0x8],rax
  40754e:	cmp    QWORD PTR [rbp-0x8],0x0
  407553:	jne    40755c <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  407555:	mov    eax,0x0
  40755a:	jmp    4075c6 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  40755c:	mov    rdx,QWORD PTR [rbp-0x20]
  407560:	mov    rax,QWORD PTR [rbp-0x8]
  407564:	mov    esi,0x0
  407569:	mov    rdi,rax
  40756c:	call   403160 <memset@plt>
  407571:	mov    rax,QWORD PTR [rbp-0x8]
  407575:	lea    rdx,[rax+0x8]
  407579:	mov    QWORD PTR [rbp-0x8],rdx
  40757d:	mov    rdx,QWORD PTR [rbp-0x18]
  407581:	mov    rdx,QWORD PTR [rdx+0x178]
  407588:	mov    QWORD PTR [rax],rdx
  40758b:	mov    rax,QWORD PTR [rbp-0x18]
  40758f:	mov    rax,QWORD PTR [rax+0x180]
  407596:	lea    rdx,[rax+0x8]
  40759a:	mov    rax,QWORD PTR [rbp-0x18]
  40759e:	mov    QWORD PTR [rax+0x178],rdx
  4075a5:	mov    rax,QWORD PTR [rbp-0x18]
  4075a9:	mov    rdx,QWORD PTR [rax+0x180]
  4075b0:	mov    rax,QWORD PTR [rbp-0x20]
  4075b4:	add    rdx,rax
  4075b7:	mov    rax,QWORD PTR [rbp-0x18]
  4075bb:	mov    QWORD PTR [rax+0x180],rdx
  4075c2:	mov    rax,QWORD PTR [rbp-0x8]
  4075c6:	leave  
  4075c7:	ret    

00000000004075c8 <flatcc_builder_enter_user_frame@@Base>:
  4075c8:	endbr64 
  4075cc:	push   rbp
  4075cd:	mov    rbp,rsp
  4075d0:	sub    rsp,0x20
  4075d4:	mov    QWORD PTR [rbp-0x18],rdi
  4075d8:	mov    QWORD PTR [rbp-0x20],rsi
  4075dc:	mov    rax,QWORD PTR [rbp-0x20]
  4075e0:	add    rax,0x7
  4075e4:	and    rax,0xfffffffffffffff8
  4075e8:	add    rax,0x8
  4075ec:	mov    QWORD PTR [rbp-0x20],rax
  4075f0:	mov    rax,QWORD PTR [rbp-0x18]
  4075f4:	mov    rdx,QWORD PTR [rax+0x180]
  4075fb:	mov    rcx,QWORD PTR [rbp-0x20]
  4075ff:	mov    rax,QWORD PTR [rbp-0x18]
  407603:	mov    r8d,0x0
  407609:	mov    esi,0x7
  40760e:	mov    rdi,rax
  407611:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  407616:	mov    QWORD PTR [rbp-0x8],rax
  40761a:	cmp    QWORD PTR [rbp-0x8],0x0
  40761f:	jne    407628 <flatcc_builder_enter_user_frame@@Base+0x60>
  407621:	mov    eax,0x0
  407626:	jmp    407699 <flatcc_builder_enter_user_frame@@Base+0xd1>
  407628:	mov    rdx,QWORD PTR [rbp-0x20]
  40762c:	mov    rax,QWORD PTR [rbp-0x8]
  407630:	mov    esi,0x0
  407635:	mov    rdi,rax
  407638:	call   403160 <memset@plt>
  40763d:	mov    rax,QWORD PTR [rbp-0x8]
  407641:	lea    rdx,[rax+0x8]
  407645:	mov    QWORD PTR [rbp-0x8],rdx
  407649:	mov    rdx,QWORD PTR [rbp-0x18]
  40764d:	mov    rdx,QWORD PTR [rdx+0x178]
  407654:	mov    QWORD PTR [rax],rdx
  407657:	mov    rax,QWORD PTR [rbp-0x18]
  40765b:	mov    rax,QWORD PTR [rax+0x180]
  407662:	lea    rdx,[rax+0x8]
  407666:	mov    rax,QWORD PTR [rbp-0x18]
  40766a:	mov    QWORD PTR [rax+0x178],rdx
  407671:	mov    rax,QWORD PTR [rbp-0x18]
  407675:	mov    rdx,QWORD PTR [rax+0x180]
  40767c:	mov    rax,QWORD PTR [rbp-0x20]
  407680:	add    rdx,rax
  407683:	mov    rax,QWORD PTR [rbp-0x18]
  407687:	mov    QWORD PTR [rax+0x180],rdx
  40768e:	mov    rax,QWORD PTR [rbp-0x18]
  407692:	mov    rax,QWORD PTR [rax+0x178]
  407699:	leave  
  40769a:	ret    

000000000040769b <flatcc_builder_exit_user_frame@@Base>:
  40769b:	endbr64 
  40769f:	push   rbp
  4076a0:	mov    rbp,rsp
  4076a3:	sub    rsp,0x20
  4076a7:	mov    QWORD PTR [rbp-0x18],rdi
  4076ab:	mov    rax,QWORD PTR [rbp-0x18]
  4076af:	mov    rax,QWORD PTR [rax+0x178]
  4076b6:	test   rax,rax
  4076b9:	jne    4076da <flatcc_builder_exit_user_frame@@Base+0x3f>
  4076bb:	lea    rcx,[rip+0xd36e]        # 414a30 <flatcc_builder_padding_base@@Base+0x690>
  4076c2:	mov    edx,0x21e
  4076c7:	lea    rsi,[rip+0xced2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4076ce:	lea    rdi,[rip+0xcf4e]        # 414623 <flatcc_builder_padding_base@@Base+0x283>
  4076d5:	call   403150 <__assert_fail@plt>
  4076da:	mov    rax,QWORD PTR [rbp-0x18]
  4076de:	mov    rdx,QWORD PTR [rax+0xc8]
  4076e5:	mov    rax,QWORD PTR [rbp-0x18]
  4076e9:	mov    rax,QWORD PTR [rax+0x178]
  4076f0:	mov    eax,eax
  4076f2:	add    rax,rdx
  4076f5:	mov    QWORD PTR [rbp-0x8],rax
  4076f9:	mov    rax,QWORD PTR [rbp-0x18]
  4076fd:	mov    rax,QWORD PTR [rax+0x178]
  407704:	lea    rdx,[rax-0x8]
  407708:	mov    rax,QWORD PTR [rbp-0x18]
  40770c:	mov    QWORD PTR [rax+0x180],rdx
  407713:	mov    rax,QWORD PTR [rbp-0x8]
  407717:	mov    rdx,QWORD PTR [rax-0x8]
  40771b:	mov    rax,QWORD PTR [rbp-0x18]
  40771f:	mov    QWORD PTR [rax+0x178],rdx
  407726:	mov    rax,QWORD PTR [rbp-0x18]
  40772a:	mov    rax,QWORD PTR [rax+0x178]
  407731:	leave  
  407732:	ret    

0000000000407733 <flatcc_builder_exit_user_frame_at@@Base>:
  407733:	endbr64 
  407737:	push   rbp
  407738:	mov    rbp,rsp
  40773b:	sub    rsp,0x10
  40773f:	mov    QWORD PTR [rbp-0x8],rdi
  407743:	mov    QWORD PTR [rbp-0x10],rsi
  407747:	mov    rax,QWORD PTR [rbp-0x8]
  40774b:	mov    rax,QWORD PTR [rax+0x178]
  407752:	cmp    QWORD PTR [rbp-0x10],rax
  407756:	jbe    407777 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  407758:	lea    rcx,[rip+0xd301]        # 414a60 <flatcc_builder_padding_base@@Base+0x6c0>
  40775f:	mov    edx,0x227
  407764:	lea    rsi,[rip+0xce35]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40776b:	lea    rdi,[rip+0xcece]        # 414640 <flatcc_builder_padding_base@@Base+0x2a0>
  407772:	call   403150 <__assert_fail@plt>
  407777:	mov    rax,QWORD PTR [rbp-0x8]
  40777b:	mov    rdx,QWORD PTR [rbp-0x10]
  40777f:	mov    QWORD PTR [rax+0x178],rdx
  407786:	mov    rax,QWORD PTR [rbp-0x8]
  40778a:	mov    rdi,rax
  40778d:	call   40769b <flatcc_builder_exit_user_frame@@Base>
  407792:	leave  
  407793:	ret    

0000000000407794 <flatcc_builder_get_current_user_frame@@Base>:
  407794:	endbr64 
  407798:	push   rbp
  407799:	mov    rbp,rsp
  40779c:	mov    QWORD PTR [rbp-0x8],rdi
  4077a0:	mov    rax,QWORD PTR [rbp-0x8]
  4077a4:	mov    rax,QWORD PTR [rax+0x178]
  4077ab:	pop    rbp
  4077ac:	ret    

00000000004077ad <flatcc_builder_get_user_frame_ptr@@Base>:
  4077ad:	endbr64 
  4077b1:	push   rbp
  4077b2:	mov    rbp,rsp
  4077b5:	mov    QWORD PTR [rbp-0x8],rdi
  4077b9:	mov    QWORD PTR [rbp-0x10],rsi
  4077bd:	mov    rax,QWORD PTR [rbp-0x8]
  4077c1:	mov    rax,QWORD PTR [rax+0xc8]
  4077c8:	mov    rdx,QWORD PTR [rbp-0x10]
  4077cc:	mov    edx,edx
  4077ce:	add    rax,rdx
  4077d1:	pop    rbp
  4077d2:	ret    
  4077d3:	endbr64 
  4077d7:	push   rbp
  4077d8:	mov    rbp,rsp
  4077db:	sub    rsp,0x10
  4077df:	mov    QWORD PTR [rbp-0x8],rdi
  4077e3:	mov    eax,esi
  4077e5:	mov    WORD PTR [rbp-0xc],ax
  4077e9:	mov    rax,QWORD PTR [rbp-0x8]
  4077ed:	mov    eax,DWORD PTR [rax+0x104]
  4077f3:	lea    edx,[rax+0x1]
  4077f6:	mov    rax,QWORD PTR [rbp-0x8]
  4077fa:	mov    DWORD PTR [rax+0x104],edx
  407800:	mov    rax,QWORD PTR [rbp-0x8]
  407804:	mov    edx,DWORD PTR [rax+0x104]
  40780a:	mov    rax,QWORD PTR [rbp-0x8]
  40780e:	mov    eax,DWORD PTR [rax+0x108]
  407814:	cmp    edx,eax
  407816:	jle    407911 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  40781c:	mov    rax,QWORD PTR [rbp-0x8]
  407820:	mov    eax,DWORD PTR [rax+0x120]
  407826:	test   eax,eax
  407828:	jle    40784c <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  40782a:	mov    rax,QWORD PTR [rbp-0x8]
  40782e:	mov    edx,DWORD PTR [rax+0x104]
  407834:	mov    rax,QWORD PTR [rbp-0x8]
  407838:	mov    eax,DWORD PTR [rax+0x120]
  40783e:	cmp    edx,eax
  407840:	jle    40784c <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  407842:	mov    eax,0xffffffff
  407847:	jmp    4079ac <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  40784c:	mov    rax,QWORD PTR [rbp-0x8]
  407850:	mov    eax,DWORD PTR [rax+0x104]
  407856:	dec    eax
  407858:	movsxd rdx,eax
  40785b:	mov    rax,rdx
  40785e:	shl    rax,0x3
  407862:	add    rax,rdx
  407865:	shl    rax,0x2
  407869:	mov    rdx,rax
  40786c:	mov    rax,QWORD PTR [rbp-0x8]
  407870:	mov    r8d,0x0
  407876:	mov    ecx,0x24
  40787b:	mov    esi,0x4
  407880:	mov    rdi,rax
  407883:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  407888:	mov    rdx,rax
  40788b:	mov    rax,QWORD PTR [rbp-0x8]
  40788f:	mov    QWORD PTR [rax+0x30],rdx
  407893:	mov    rax,QWORD PTR [rbp-0x8]
  407897:	mov    rax,QWORD PTR [rax+0x30]
  40789b:	test   rax,rax
  40789e:	jne    4078aa <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  4078a0:	mov    eax,0xffffffff
  4078a5:	jmp    4079ac <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  4078aa:	mov    rax,QWORD PTR [rbp-0x8]
  4078ae:	mov    rax,QWORD PTR [rax+0xa0]
  4078b5:	movabs rdx,0xe38e38e38e38e38f
  4078bf:	mul    rdx
  4078c2:	mov    rax,rdx
  4078c5:	shr    rax,0x5
  4078c9:	mov    edx,eax
  4078cb:	mov    rax,QWORD PTR [rbp-0x8]
  4078cf:	mov    DWORD PTR [rax+0x108],edx
  4078d5:	mov    rax,QWORD PTR [rbp-0x8]
  4078d9:	mov    eax,DWORD PTR [rax+0x120]
  4078df:	test   eax,eax
  4078e1:	jle    407925 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4078e3:	mov    rax,QWORD PTR [rbp-0x8]
  4078e7:	mov    edx,DWORD PTR [rax+0x120]
  4078ed:	mov    rax,QWORD PTR [rbp-0x8]
  4078f1:	mov    eax,DWORD PTR [rax+0x108]
  4078f7:	cmp    edx,eax
  4078f9:	jge    407925 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4078fb:	mov    rax,QWORD PTR [rbp-0x8]
  4078ff:	mov    edx,DWORD PTR [rax+0x120]
  407905:	mov    rax,QWORD PTR [rbp-0x8]
  407909:	mov    DWORD PTR [rax+0x108],edx
  40790f:	jmp    407925 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  407911:	mov    rax,QWORD PTR [rbp-0x8]
  407915:	mov    rax,QWORD PTR [rax+0x30]
  407919:	lea    rdx,[rax+0x24]
  40791d:	mov    rax,QWORD PTR [rbp-0x8]
  407921:	mov    QWORD PTR [rax+0x30],rdx
  407925:	mov    rax,QWORD PTR [rbp-0x8]
  407929:	mov    rax,QWORD PTR [rax+0x30]
  40792d:	mov    rdx,QWORD PTR [rbp-0x8]
  407931:	mov    edx,DWORD PTR [rdx+0x20]
  407934:	mov    DWORD PTR [rax+0x8],edx
  407937:	mov    rax,QWORD PTR [rbp-0x8]
  40793b:	mov    rdx,QWORD PTR [rax+0x30]
  40793f:	mov    rax,QWORD PTR [rbp-0x8]
  407943:	movzx  eax,WORD PTR [rax+0xea]
  40794a:	mov    WORD PTR [rdx+0xc],ax
  40794e:	mov    rdx,QWORD PTR [rbp-0x8]
  407952:	movzx  eax,WORD PTR [rbp-0xc]
  407956:	mov    WORD PTR [rdx+0xea],ax
  40795d:	mov    rax,QWORD PTR [rbp-0x8]
  407961:	mov    rax,QWORD PTR [rax+0x30]
  407965:	mov    rdx,QWORD PTR [rbp-0x8]
  407969:	mov    edx,DWORD PTR [rdx+0x28]
  40796c:	mov    DWORD PTR [rax],edx
  40796e:	mov    rax,QWORD PTR [rbp-0x8]
  407972:	mov    rax,QWORD PTR [rax+0x30]
  407976:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40797d:	mov    rax,QWORD PTR [rbp-0x8]
  407981:	mov    edx,DWORD PTR [rax+0x28]
  407984:	mov    rax,QWORD PTR [rbp-0x8]
  407988:	mov    eax,DWORD PTR [rax+0x20]
  40798b:	add    eax,edx
  40798d:	add    eax,0x7
  407990:	and    eax,0xfffffff8
  407993:	mov    edx,eax
  407995:	mov    rax,QWORD PTR [rbp-0x8]
  407999:	mov    DWORD PTR [rax+0x28],edx
  40799c:	mov    rax,QWORD PTR [rbp-0x8]
  4079a0:	mov    DWORD PTR [rax+0x20],0x0
  4079a7:	mov    eax,0x0
  4079ac:	leave  
  4079ad:	ret    
  4079ae:	push   rbp
  4079af:	mov    rbp,rsp
  4079b2:	sub    rsp,0x10
  4079b6:	mov    QWORD PTR [rbp-0x8],rdi
  4079ba:	mov    rax,QWORD PTR [rbp-0x8]
  4079be:	mov    eax,DWORD PTR [rax+0x20]
  4079c1:	mov    edx,eax
  4079c3:	mov    rax,QWORD PTR [rbp-0x8]
  4079c7:	mov    rax,QWORD PTR [rax+0x18]
  4079cb:	mov    esi,0x0
  4079d0:	mov    rdi,rax
  4079d3:	call   403160 <memset@plt>
  4079d8:	mov    rax,QWORD PTR [rbp-0x8]
  4079dc:	mov    rax,QWORD PTR [rax+0x30]
  4079e0:	mov    edx,DWORD PTR [rax+0x8]
  4079e3:	mov    rax,QWORD PTR [rbp-0x8]
  4079e7:	mov    DWORD PTR [rax+0x20],edx
  4079ea:	mov    rax,QWORD PTR [rbp-0x8]
  4079ee:	mov    rax,QWORD PTR [rax+0x30]
  4079f2:	mov    edx,DWORD PTR [rax]
  4079f4:	mov    rax,QWORD PTR [rbp-0x8]
  4079f8:	mov    DWORD PTR [rax+0x28],edx
  4079fb:	mov    rax,QWORD PTR [rbp-0x8]
  4079ff:	mov    rax,QWORD PTR [rax+0x30]
  407a03:	mov    edx,DWORD PTR [rax+0x4]
  407a06:	mov    rax,QWORD PTR [rbp-0x8]
  407a0a:	mov    esi,edx
  407a0c:	mov    rdi,rax
  407a0f:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  407a14:	mov    rax,QWORD PTR [rbp-0x8]
  407a18:	movzx  eax,WORD PTR [rax+0xea]
  407a1f:	movzx  edx,ax
  407a22:	mov    rax,QWORD PTR [rbp-0x8]
  407a26:	mov    esi,edx
  407a28:	mov    rdi,rax
  407a2b:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  407a30:	mov    rax,QWORD PTR [rbp-0x8]
  407a34:	mov    rax,QWORD PTR [rax+0x30]
  407a38:	movzx  eax,WORD PTR [rax+0xc]
  407a3c:	mov    rdx,QWORD PTR [rbp-0x8]
  407a40:	mov    WORD PTR [rdx+0xea],ax
  407a47:	mov    rax,QWORD PTR [rbp-0x8]
  407a4b:	mov    rax,QWORD PTR [rax+0x30]
  407a4f:	lea    rdx,[rax-0x24]
  407a53:	mov    rax,QWORD PTR [rbp-0x8]
  407a57:	mov    QWORD PTR [rax+0x30],rdx
  407a5b:	mov    rax,QWORD PTR [rbp-0x8]
  407a5f:	mov    eax,DWORD PTR [rax+0x104]
  407a65:	lea    edx,[rax-0x1]
  407a68:	mov    rax,QWORD PTR [rbp-0x8]
  407a6c:	mov    DWORD PTR [rax+0x104],edx
  407a72:	nop
  407a73:	leave  
  407a74:	ret    
  407a75:	push   rbp
  407a76:	mov    rbp,rsp
  407a79:	mov    QWORD PTR [rbp-0x8],rdi
  407a7d:	mov    DWORD PTR [rbp-0xc],esi
  407a80:	mov    eax,edx
  407a82:	mov    WORD PTR [rbp-0x10],ax
  407a86:	mov    rax,QWORD PTR [rbp-0x8]
  407a8a:	mov    eax,DWORD PTR [rax+0xf0]
  407a90:	sub    eax,DWORD PTR [rbp-0xc]
  407a93:	movzx  edx,WORD PTR [rbp-0x10]
  407a97:	dec    edx
  407a99:	and    eax,edx
  407a9b:	pop    rbp
  407a9c:	ret    
  407a9d:	push   rbp
  407a9e:	mov    rbp,rsp
  407aa1:	mov    QWORD PTR [rbp-0x8],rdi
  407aa5:	mov    eax,esi
  407aa7:	mov    WORD PTR [rbp-0xc],ax
  407aab:	mov    rax,QWORD PTR [rbp-0x8]
  407aaf:	mov    eax,DWORD PTR [rax+0xf4]
  407ab5:	movzx  edx,WORD PTR [rbp-0xc]
  407ab9:	dec    edx
  407abb:	and    eax,edx
  407abd:	pop    rbp
  407abe:	ret    
  407abf:	push   rbp
  407ac0:	mov    rbp,rsp
  407ac3:	sub    rsp,0x20
  407ac7:	mov    QWORD PTR [rbp-0x18],rdi
  407acb:	mov    QWORD PTR [rbp-0x20],rsi
  407acf:	mov    rax,QWORD PTR [rbp-0x18]
  407ad3:	mov    edx,DWORD PTR [rax+0xf0]
  407ad9:	mov    rax,QWORD PTR [rbp-0x20]
  407add:	mov    rax,QWORD PTR [rax]
  407ae0:	sub    edx,eax
  407ae2:	mov    eax,edx
  407ae4:	mov    DWORD PTR [rbp-0x4],eax
  407ae7:	mov    rax,QWORD PTR [rbp-0x20]
  407aeb:	mov    rax,QWORD PTR [rax]
  407aee:	cmp    rax,0x10
  407af2:	jbe    407b09 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  407af4:	mov    rax,QWORD PTR [rbp-0x20]
  407af8:	mov    rax,QWORD PTR [rax]
  407afb:	lea    rdx,[rax-0x10]
  407aff:	mov    eax,0xffffffff
  407b04:	cmp    rdx,rax
  407b07:	ja     407b18 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  407b09:	mov    rax,QWORD PTR [rbp-0x18]
  407b0d:	mov    eax,DWORD PTR [rax+0xf0]
  407b13:	cmp    DWORD PTR [rbp-0x4],eax
  407b16:	jl     407b37 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  407b18:	lea    rcx,[rip+0xcf89]        # 414aa8 <flatcc_builder_padding_base@@Base+0x708>
  407b1f:	mov    edx,0x287
  407b24:	lea    rsi,[rip+0xca75]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407b2b:	lea    rdi,[rip+0xcace]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407b32:	call   403150 <__assert_fail@plt>
  407b37:	mov    rax,QWORD PTR [rbp-0x18]
  407b3b:	mov    rax,QWORD PTR [rax+0x48]
  407b3f:	mov    rdx,QWORD PTR [rbp-0x20]
  407b43:	mov    r8,QWORD PTR [rdx]
  407b46:	mov    rdx,QWORD PTR [rbp-0x20]
  407b4a:	mov    edx,DWORD PTR [rdx+0x8]
  407b4d:	mov    rcx,QWORD PTR [rbp-0x20]
  407b51:	lea    rsi,[rcx+0x10]
  407b55:	mov    rcx,QWORD PTR [rbp-0x18]
  407b59:	mov    rdi,QWORD PTR [rcx+0x38]
  407b5d:	mov    ecx,DWORD PTR [rbp-0x4]
  407b60:	call   rax
  407b62:	test   eax,eax
  407b64:	je     407b85 <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  407b66:	lea    rcx,[rip+0xcf3b]        # 414aa8 <flatcc_builder_padding_base@@Base+0x708>
  407b6d:	mov    edx,0x28b
  407b72:	lea    rsi,[rip+0xca27]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407b79:	lea    rdi,[rip+0xca80]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407b80:	call   403150 <__assert_fail@plt>
  407b85:	mov    rax,QWORD PTR [rbp-0x18]
  407b89:	mov    edx,DWORD PTR [rbp-0x4]
  407b8c:	mov    DWORD PTR [rax+0xf0],edx
  407b92:	mov    rax,QWORD PTR [rbp-0x18]
  407b96:	mov    eax,DWORD PTR [rax+0xf0]
  407b9c:	leave  
  407b9d:	ret    
  407b9e:	push   rbp
  407b9f:	mov    rbp,rsp
  407ba2:	sub    rsp,0x20
  407ba6:	mov    QWORD PTR [rbp-0x18],rdi
  407baa:	mov    QWORD PTR [rbp-0x20],rsi
  407bae:	mov    rax,QWORD PTR [rbp-0x18]
  407bb2:	mov    eax,DWORD PTR [rax+0xf4]
  407bb8:	mov    DWORD PTR [rbp-0x4],eax
  407bbb:	mov    rax,QWORD PTR [rbp-0x20]
  407bbf:	mov    rax,QWORD PTR [rax]
  407bc2:	mov    edx,eax
  407bc4:	mov    eax,DWORD PTR [rbp-0x4]
  407bc7:	add    edx,eax
  407bc9:	mov    rax,QWORD PTR [rbp-0x18]
  407bcd:	mov    DWORD PTR [rax+0xf4],edx
  407bd3:	mov    rax,QWORD PTR [rbp-0x18]
  407bd7:	mov    eax,DWORD PTR [rax+0xf4]
  407bdd:	cmp    DWORD PTR [rbp-0x4],eax
  407be0:	jle    407c01 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  407be2:	lea    rcx,[rip+0xceaf]        # 414a98 <flatcc_builder_padding_base@@Base+0x6f8>
  407be9:	mov    edx,0x2a1
  407bee:	lea    rsi,[rip+0xc9ab]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407bf5:	lea    rdi,[rip+0xca04]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407bfc:	call   403150 <__assert_fail@plt>
  407c01:	mov    rax,QWORD PTR [rbp-0x18]
  407c05:	mov    rax,QWORD PTR [rax+0x48]
  407c09:	mov    rdx,QWORD PTR [rbp-0x20]
  407c0d:	mov    r8,QWORD PTR [rdx]
  407c10:	mov    rdx,QWORD PTR [rbp-0x20]
  407c14:	mov    edx,DWORD PTR [rdx+0x8]
  407c17:	mov    rcx,QWORD PTR [rbp-0x20]
  407c1b:	lea    rsi,[rcx+0x10]
  407c1f:	mov    rcx,QWORD PTR [rbp-0x18]
  407c23:	mov    rdi,QWORD PTR [rcx+0x38]
  407c27:	mov    ecx,DWORD PTR [rbp-0x4]
  407c2a:	call   rax
  407c2c:	test   eax,eax
  407c2e:	je     407c4f <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  407c30:	lea    rcx,[rip+0xce61]        # 414a98 <flatcc_builder_padding_base@@Base+0x6f8>
  407c37:	mov    edx,0x2a5
  407c3c:	lea    rsi,[rip+0xc95d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407c43:	lea    rdi,[rip+0xc9b6]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407c4a:	call   403150 <__assert_fail@plt>
  407c4f:	mov    eax,DWORD PTR [rbp-0x4]
  407c52:	inc    eax
  407c54:	leave  
  407c55:	ret    
  407c56:	endbr64 
  407c5a:	push   rbp
  407c5b:	mov    rbp,rsp
  407c5e:	sub    rsp,0xd0
  407c65:	mov    QWORD PTR [rbp-0xb8],rdi
  407c6c:	mov    QWORD PTR [rbp-0xc0],rsi
  407c73:	mov    eax,edx
  407c75:	mov    DWORD PTR [rbp-0xc8],ecx
  407c7b:	mov    WORD PTR [rbp-0xc4],ax
  407c82:	mov    rax,QWORD PTR fs:0x28
  407c8b:	mov    QWORD PTR [rbp-0x8],rax
  407c8f:	xor    eax,eax
  407c91:	cmp    WORD PTR [rbp-0xc4],0x0
  407c99:	jne    407cc5 <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  407c9b:	mov    rax,QWORD PTR [rbp-0xb8]
  407ca2:	movzx  eax,WORD PTR [rax+0xec]
  407ca9:	test   ax,ax
  407cac:	je     407cbe <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  407cae:	mov    rax,QWORD PTR [rbp-0xb8]
  407cb5:	movzx  eax,WORD PTR [rax+0xec]
  407cbc:	jmp    407ccc <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  407cbe:	mov    eax,0x1
  407cc3:	jmp    407ccc <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  407cc5:	movzx  eax,WORD PTR [rbp-0xc4]
  407ccc:	mov    WORD PTR [rbp-0xc4],ax
  407cd3:	mov    rax,QWORD PTR [rbp-0xc0]
  407cda:	mov    esi,0x4
  407cdf:	mov    rdi,rax
  407ce2:	call   4074d3 <flatcc_builder_clear@@Base+0xca>
  407ce7:	movzx  edx,WORD PTR [rbp-0xc4]
  407cee:	mov    rax,QWORD PTR [rbp-0xc0]
  407cf5:	mov    esi,edx
  407cf7:	mov    rdi,rax
  407cfa:	call   4074d3 <flatcc_builder_clear@@Base+0xca>
  407cff:	cmp    DWORD PTR [rbp-0xc8],0x0
  407d06:	jne    407dfb <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  407d0c:	movzx  edx,WORD PTR [rbp-0xc4]
  407d13:	mov    rax,QWORD PTR [rbp-0xb8]
  407d1a:	mov    esi,edx
  407d1c:	mov    rdi,rax
  407d1f:	call   407a9d <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  407d24:	mov    eax,eax
  407d26:	mov    QWORD PTR [rbp-0xa8],rax
  407d2d:	cmp    QWORD PTR [rbp-0xa8],0x0
  407d35:	je     407dfb <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  407d3b:	mov    QWORD PTR [rbp-0xa0],0x0
  407d46:	mov    DWORD PTR [rbp-0x98],0x0
  407d50:	cmp    QWORD PTR [rbp-0xa8],0x0
  407d58:	je     407dbf <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  407d5a:	mov    rdx,QWORD PTR [rbp-0xa0]
  407d61:	mov    rax,QWORD PTR [rbp-0xa8]
  407d68:	add    rax,rdx
  407d6b:	mov    QWORD PTR [rbp-0xa0],rax
  407d72:	mov    eax,DWORD PTR [rbp-0x98]
  407d78:	cdqe   
  407d7a:	shl    rax,0x4
  407d7e:	add    rax,rbp
  407d81:	sub    rax,0x90
  407d87:	mov    rdx,0x4143a0
  407d8e:	mov    QWORD PTR [rax],rdx
  407d91:	mov    eax,DWORD PTR [rbp-0x98]
  407d97:	cdqe   
  407d99:	shl    rax,0x4
  407d9d:	add    rax,rbp
  407da0:	lea    rdx,[rax-0x88]
  407da7:	mov    rax,QWORD PTR [rbp-0xa8]
  407dae:	mov    QWORD PTR [rdx],rax
  407db1:	mov    eax,DWORD PTR [rbp-0x98]
  407db7:	inc    eax
  407db9:	mov    DWORD PTR [rbp-0x98],eax
  407dbf:	lea    rdx,[rbp-0xa0]
  407dc6:	mov    rax,QWORD PTR [rbp-0xb8]
  407dcd:	mov    rsi,rdx
  407dd0:	mov    rdi,rax
  407dd3:	call   407b9e <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  407dd8:	test   eax,eax
  407dda:	jne    407dfb <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  407ddc:	lea    rcx,[rip+0xcca5]        # 414a88 <flatcc_builder_padding_base@@Base+0x6e8>
  407de3:	mov    edx,0x2be
  407de8:	lea    rsi,[rip+0xc7b1]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407def:	lea    rdi,[rip+0xc80a]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407df6:	call   403150 <__assert_fail@plt>
  407dfb:	mov    eax,0x0
  407e00:	mov    rcx,QWORD PTR [rbp-0x8]
  407e04:	xor    rcx,QWORD PTR fs:0x28
  407e0d:	je     407e14 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  407e0f:	call   403140 <__stack_chk_fail@plt>
  407e14:	leave  
  407e15:	ret    

0000000000407e16 <flatcc_builder_embed_buffer@@Base>:
  407e16:	endbr64 
  407e1a:	push   rbp
  407e1b:	mov    rbp,rsp
  407e1e:	sub    rsp,0xe0
  407e25:	mov    QWORD PTR [rbp-0xb8],rdi
  407e2c:	mov    eax,esi
  407e2e:	mov    QWORD PTR [rbp-0xc8],rdx
  407e35:	mov    QWORD PTR [rbp-0xd0],rcx
  407e3c:	mov    edx,r8d
  407e3f:	mov    DWORD PTR [rbp-0xd4],r9d
  407e46:	mov    WORD PTR [rbp-0xbc],ax
  407e4d:	mov    eax,edx
  407e4f:	mov    WORD PTR [rbp-0xc0],ax
  407e56:	mov    rax,QWORD PTR fs:0x28
  407e5f:	mov    QWORD PTR [rbp-0x8],rax
  407e63:	xor    eax,eax
  407e65:	mov    eax,DWORD PTR [rbp-0xd4]
  407e6b:	and    eax,0x2
  407e6e:	mov    DWORD PTR [rbp-0xa8],eax
  407e74:	mov    rax,QWORD PTR [rbp-0xb8]
  407e7b:	mov    eax,DWORD PTR [rax+0x100]
  407e81:	test   eax,eax
  407e83:	setne  al
  407e86:	movzx  ecx,al
  407e89:	movzx  edx,WORD PTR [rbp-0xbc]
  407e90:	lea    rsi,[rbp-0xc0]
  407e97:	mov    rax,QWORD PTR [rbp-0xb8]
  407e9e:	mov    rdi,rax
  407ea1:	call   407c56 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  407ea6:	test   eax,eax
  407ea8:	je     407eb4 <flatcc_builder_embed_buffer@@Base+0x9e>
  407eaa:	mov    eax,0x0
  407eaf:	jmp    40808b <flatcc_builder_embed_buffer@@Base+0x275>
  407eb4:	movzx  eax,WORD PTR [rbp-0xc0]
  407ebb:	movzx  edx,ax
  407ebe:	mov    rax,QWORD PTR [rbp-0xd0]
  407ec5:	mov    ecx,eax
  407ec7:	cmp    DWORD PTR [rbp-0xa8],0x0
  407ece:	je     407ed7 <flatcc_builder_embed_buffer@@Base+0xc1>
  407ed0:	mov    eax,0x4
  407ed5:	jmp    407edc <flatcc_builder_embed_buffer@@Base+0xc6>
  407ed7:	mov    eax,0x0
  407edc:	add    ecx,eax
  407ede:	mov    rax,QWORD PTR [rbp-0xb8]
  407ee5:	mov    esi,ecx
  407ee7:	mov    rdi,rax
  407eea:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407eef:	mov    DWORD PTR [rbp-0xa4],eax
  407ef5:	mov    rax,QWORD PTR [rbp-0xd0]
  407efc:	mov    edx,eax
  407efe:	mov    eax,DWORD PTR [rbp-0xa4]
  407f04:	add    eax,edx
  407f06:	mov    edi,eax
  407f08:	call   406776 <main@@Base+0x11a>
  407f0d:	mov    DWORD PTR [rbp-0xac],eax
  407f13:	mov    QWORD PTR [rbp-0xa0],0x0
  407f1e:	mov    DWORD PTR [rbp-0x98],0x0
  407f28:	mov    rax,QWORD PTR [rbp-0xb8]
  407f2f:	mov    eax,DWORD PTR [rax+0x100]
  407f35:	test   eax,eax
  407f37:	je     407f95 <flatcc_builder_embed_buffer@@Base+0x17f>
  407f39:	mov    rax,QWORD PTR [rbp-0xa0]
  407f40:	add    rax,0x4
  407f44:	mov    QWORD PTR [rbp-0xa0],rax
  407f4b:	mov    eax,DWORD PTR [rbp-0x98]
  407f51:	cdqe   
  407f53:	shl    rax,0x4
  407f57:	add    rax,rbp
  407f5a:	lea    rdx,[rax-0x90]
  407f61:	lea    rax,[rbp-0xac]
  407f68:	mov    QWORD PTR [rdx],rax
  407f6b:	mov    eax,DWORD PTR [rbp-0x98]
  407f71:	cdqe   
  407f73:	shl    rax,0x4
  407f77:	add    rax,rbp
  407f7a:	sub    rax,0x88
  407f80:	mov    QWORD PTR [rax],0x4
  407f87:	mov    eax,DWORD PTR [rbp-0x98]
  407f8d:	inc    eax
  407f8f:	mov    DWORD PTR [rbp-0x98],eax
  407f95:	cmp    QWORD PTR [rbp-0xd0],0x0
  407f9d:	je     408005 <flatcc_builder_embed_buffer@@Base+0x1ef>
  407f9f:	mov    rdx,QWORD PTR [rbp-0xa0]
  407fa6:	mov    rax,QWORD PTR [rbp-0xd0]
  407fad:	add    rax,rdx
  407fb0:	mov    QWORD PTR [rbp-0xa0],rax
  407fb7:	mov    eax,DWORD PTR [rbp-0x98]
  407fbd:	cdqe   
  407fbf:	shl    rax,0x4
  407fc3:	add    rax,rbp
  407fc6:	lea    rdx,[rax-0x90]
  407fcd:	mov    rax,QWORD PTR [rbp-0xc8]
  407fd4:	mov    QWORD PTR [rdx],rax
  407fd7:	mov    eax,DWORD PTR [rbp-0x98]
  407fdd:	cdqe   
  407fdf:	shl    rax,0x4
  407fe3:	add    rax,rbp
  407fe6:	lea    rdx,[rax-0x88]
  407fed:	mov    rax,QWORD PTR [rbp-0xd0]
  407ff4:	mov    QWORD PTR [rdx],rax
  407ff7:	mov    eax,DWORD PTR [rbp-0x98]
  407ffd:	inc    eax
  407fff:	mov    DWORD PTR [rbp-0x98],eax
  408005:	cmp    DWORD PTR [rbp-0xa4],0x0
  40800c:	je     408072 <flatcc_builder_embed_buffer@@Base+0x25c>
  40800e:	mov    rdx,QWORD PTR [rbp-0xa0]
  408015:	mov    eax,DWORD PTR [rbp-0xa4]
  40801b:	add    rax,rdx
  40801e:	mov    QWORD PTR [rbp-0xa0],rax
  408025:	mov    eax,DWORD PTR [rbp-0x98]
  40802b:	cdqe   
  40802d:	shl    rax,0x4
  408031:	add    rax,rbp
  408034:	sub    rax,0x90
  40803a:	mov    rdx,0x4143a0
  408041:	mov    QWORD PTR [rax],rdx
  408044:	mov    edx,DWORD PTR [rbp-0x98]
  40804a:	mov    eax,DWORD PTR [rbp-0xa4]
  408050:	movsxd rdx,edx
  408053:	shl    rdx,0x4
  408057:	add    rdx,rbp
  40805a:	sub    rdx,0x88
  408061:	mov    QWORD PTR [rdx],rax
  408064:	mov    eax,DWORD PTR [rbp-0x98]
  40806a:	inc    eax
  40806c:	mov    DWORD PTR [rbp-0x98],eax
  408072:	lea    rdx,[rbp-0xa0]
  408079:	mov    rax,QWORD PTR [rbp-0xb8]
  408080:	mov    rsi,rdx
  408083:	mov    rdi,rax
  408086:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40808b:	mov    rdi,QWORD PTR [rbp-0x8]
  40808f:	xor    rdi,QWORD PTR fs:0x28
  408098:	je     40809f <flatcc_builder_embed_buffer@@Base+0x289>
  40809a:	call   403140 <__stack_chk_fail@plt>
  40809f:	leave  
  4080a0:	ret    

00000000004080a1 <flatcc_builder_create_buffer@@Base>:
  4080a1:	endbr64 
  4080a5:	push   rbp
  4080a6:	mov    rbp,rsp
  4080a9:	sub    rsp,0xf0
  4080b0:	mov    QWORD PTR [rbp-0xd8],rdi
  4080b7:	mov    QWORD PTR [rbp-0xe0],rsi
  4080be:	mov    eax,edx
  4080c0:	mov    DWORD PTR [rbp-0xe8],ecx
  4080c6:	mov    edx,r8d
  4080c9:	mov    DWORD PTR [rbp-0xf0],r9d
  4080d0:	mov    WORD PTR [rbp-0xe4],ax
  4080d7:	mov    eax,edx
  4080d9:	mov    WORD PTR [rbp-0xec],ax
  4080e0:	mov    rax,QWORD PTR fs:0x28
  4080e9:	mov    QWORD PTR [rbp-0x8],rax
  4080ed:	xor    eax,eax
  4080ef:	mov    DWORD PTR [rbp-0xb8],0x0
  4080f9:	mov    DWORD PTR [rbp-0xbc],0x0
  408103:	mov    eax,DWORD PTR [rbp-0xf0]
  408109:	and    eax,0x1
  40810c:	test   eax,eax
  40810e:	setne  al
  408111:	movzx  eax,al
  408114:	mov    DWORD PTR [rbp-0xb4],eax
  40811a:	mov    eax,DWORD PTR [rbp-0xf0]
  408120:	and    eax,0x2
  408123:	test   eax,eax
  408125:	setne  al
  408128:	movzx  eax,al
  40812b:	mov    DWORD PTR [rbp-0xb0],eax
  408131:	movzx  edx,WORD PTR [rbp-0xe4]
  408138:	mov    ecx,DWORD PTR [rbp-0xb4]
  40813e:	lea    rsi,[rbp-0xec]
  408145:	mov    rax,QWORD PTR [rbp-0xd8]
  40814c:	mov    rdi,rax
  40814f:	call   407c56 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  408154:	test   eax,eax
  408156:	je     408162 <flatcc_builder_create_buffer@@Base+0xc1>
  408158:	mov    eax,0x0
  40815d:	jmp    4084c4 <flatcc_builder_create_buffer@@Base+0x423>
  408162:	movzx  eax,WORD PTR [rbp-0xec]
  408169:	movzx  edx,ax
  40816c:	mov    rax,QWORD PTR [rbp-0xd8]
  408173:	mov    esi,edx
  408175:	mov    rdi,rax
  408178:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  40817d:	cmp    QWORD PTR [rbp-0xe0],0x0
  408185:	je     4081bc <flatcc_builder_create_buffer@@Base+0x11b>
  408187:	mov    rax,QWORD PTR [rbp-0xe0]
  40818e:	mov    eax,DWORD PTR [rax]
  408190:	mov    DWORD PTR [rbp-0xbc],eax
  408196:	mov    eax,DWORD PTR [rbp-0xbc]
  40819c:	mov    edi,eax
  40819e:	call   406791 <main@@Base+0x135>
  4081a3:	mov    DWORD PTR [rbp-0xbc],eax
  4081a9:	mov    eax,DWORD PTR [rbp-0xbc]
  4081af:	mov    edi,eax
  4081b1:	call   406776 <main@@Base+0x11a>
  4081b6:	mov    DWORD PTR [rbp-0xbc],eax
  4081bc:	mov    eax,DWORD PTR [rbp-0xbc]
  4081c2:	test   eax,eax
  4081c4:	je     4081cd <flatcc_builder_create_buffer@@Base+0x12c>
  4081c6:	mov    eax,0x4
  4081cb:	jmp    4081d2 <flatcc_builder_create_buffer@@Base+0x131>
  4081cd:	mov    eax,0x0
  4081d2:	mov    DWORD PTR [rbp-0xb8],eax
  4081d8:	movzx  eax,WORD PTR [rbp-0xec]
  4081df:	movzx  edx,ax
  4081e2:	cmp    DWORD PTR [rbp-0xb0],0x0
  4081e9:	je     4081f2 <flatcc_builder_create_buffer@@Base+0x151>
  4081eb:	mov    ecx,0x4
  4081f0:	jmp    4081f7 <flatcc_builder_create_buffer@@Base+0x156>
  4081f2:	mov    ecx,0x0
  4081f7:	mov    eax,DWORD PTR [rbp-0xb8]
  4081fd:	add    eax,ecx
  4081ff:	lea    ecx,[rax+0x4]
  408202:	mov    rax,QWORD PTR [rbp-0xd8]
  408209:	mov    esi,ecx
  40820b:	mov    rdi,rax
  40820e:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408213:	mov    DWORD PTR [rbp-0xac],eax
  408219:	mov    QWORD PTR [rbp-0xa0],0x0
  408224:	mov    DWORD PTR [rbp-0x98],0x0
  40822e:	cmp    DWORD PTR [rbp-0xb4],0x0
  408235:	jne    408240 <flatcc_builder_create_buffer@@Base+0x19f>
  408237:	cmp    DWORD PTR [rbp-0xb0],0x0
  40823e:	je     40829c <flatcc_builder_create_buffer@@Base+0x1fb>
  408240:	mov    rax,QWORD PTR [rbp-0xa0]
  408247:	add    rax,0x4
  40824b:	mov    QWORD PTR [rbp-0xa0],rax
  408252:	mov    eax,DWORD PTR [rbp-0x98]
  408258:	cdqe   
  40825a:	shl    rax,0x4
  40825e:	add    rax,rbp
  408261:	lea    rdx,[rax-0x90]
  408268:	lea    rax,[rbp-0xc0]
  40826f:	mov    QWORD PTR [rdx],rax
  408272:	mov    eax,DWORD PTR [rbp-0x98]
  408278:	cdqe   
  40827a:	shl    rax,0x4
  40827e:	add    rax,rbp
  408281:	sub    rax,0x88
  408287:	mov    QWORD PTR [rax],0x4
  40828e:	mov    eax,DWORD PTR [rbp-0x98]
  408294:	inc    eax
  408296:	mov    DWORD PTR [rbp-0x98],eax
  40829c:	mov    rax,QWORD PTR [rbp-0xa0]
  4082a3:	add    rax,0x4
  4082a7:	mov    QWORD PTR [rbp-0xa0],rax
  4082ae:	mov    eax,DWORD PTR [rbp-0x98]
  4082b4:	cdqe   
  4082b6:	shl    rax,0x4
  4082ba:	add    rax,rbp
  4082bd:	lea    rdx,[rax-0x90]
  4082c4:	lea    rax,[rbp-0xc4]
  4082cb:	mov    QWORD PTR [rdx],rax
  4082ce:	mov    eax,DWORD PTR [rbp-0x98]
  4082d4:	cdqe   
  4082d6:	shl    rax,0x4
  4082da:	add    rax,rbp
  4082dd:	sub    rax,0x88
  4082e3:	mov    QWORD PTR [rax],0x4
  4082ea:	mov    eax,DWORD PTR [rbp-0x98]
  4082f0:	inc    eax
  4082f2:	mov    DWORD PTR [rbp-0x98],eax
  4082f8:	cmp    DWORD PTR [rbp-0xb8],0x0
  4082ff:	je     408366 <flatcc_builder_create_buffer@@Base+0x2c5>
  408301:	mov    rdx,QWORD PTR [rbp-0xa0]
  408308:	mov    eax,DWORD PTR [rbp-0xb8]
  40830e:	add    rax,rdx
  408311:	mov    QWORD PTR [rbp-0xa0],rax
  408318:	mov    eax,DWORD PTR [rbp-0x98]
  40831e:	cdqe   
  408320:	shl    rax,0x4
  408324:	add    rax,rbp
  408327:	lea    rdx,[rax-0x90]
  40832e:	lea    rax,[rbp-0xbc]
  408335:	mov    QWORD PTR [rdx],rax
  408338:	mov    edx,DWORD PTR [rbp-0x98]
  40833e:	mov    eax,DWORD PTR [rbp-0xb8]
  408344:	movsxd rdx,edx
  408347:	shl    rdx,0x4
  40834b:	add    rdx,rbp
  40834e:	sub    rdx,0x88
  408355:	mov    QWORD PTR [rdx],rax
  408358:	mov    eax,DWORD PTR [rbp-0x98]
  40835e:	inc    eax
  408360:	mov    DWORD PTR [rbp-0x98],eax
  408366:	cmp    DWORD PTR [rbp-0xac],0x0
  40836d:	je     4083d3 <flatcc_builder_create_buffer@@Base+0x332>
  40836f:	mov    rdx,QWORD PTR [rbp-0xa0]
  408376:	mov    eax,DWORD PTR [rbp-0xac]
  40837c:	add    rax,rdx
  40837f:	mov    QWORD PTR [rbp-0xa0],rax
  408386:	mov    eax,DWORD PTR [rbp-0x98]
  40838c:	cdqe   
  40838e:	shl    rax,0x4
  408392:	add    rax,rbp
  408395:	sub    rax,0x90
  40839b:	mov    rdx,0x4143a0
  4083a2:	mov    QWORD PTR [rax],rdx
  4083a5:	mov    edx,DWORD PTR [rbp-0x98]
  4083ab:	mov    eax,DWORD PTR [rbp-0xac]
  4083b1:	movsxd rdx,edx
  4083b4:	shl    rdx,0x4
  4083b8:	add    rdx,rbp
  4083bb:	sub    rdx,0x88
  4083c2:	mov    QWORD PTR [rdx],rax
  4083c5:	mov    eax,DWORD PTR [rbp-0x98]
  4083cb:	inc    eax
  4083cd:	mov    DWORD PTR [rbp-0x98],eax
  4083d3:	mov    rax,QWORD PTR [rbp-0xd8]
  4083da:	mov    eax,DWORD PTR [rax+0xf0]
  4083e0:	mov    edx,eax
  4083e2:	mov    rax,QWORD PTR [rbp-0xa0]
  4083e9:	sub    edx,eax
  4083eb:	mov    eax,edx
  4083ed:	cmp    DWORD PTR [rbp-0xb4],0x0
  4083f4:	jne    4083ff <flatcc_builder_create_buffer@@Base+0x35e>
  4083f6:	cmp    DWORD PTR [rbp-0xb0],0x0
  4083fd:	je     408406 <flatcc_builder_create_buffer@@Base+0x365>
  4083ff:	mov    edx,0x4
  408404:	jmp    40840b <flatcc_builder_create_buffer@@Base+0x36a>
  408406:	mov    edx,0x0
  40840b:	add    eax,edx
  40840d:	mov    DWORD PTR [rbp-0xa8],eax
  408413:	cmp    DWORD PTR [rbp-0xb4],0x0
  40841a:	je     40843e <flatcc_builder_create_buffer@@Base+0x39d>
  40841c:	mov    rax,QWORD PTR [rbp-0xd8]
  408423:	mov    eax,DWORD PTR [rax+0xf8]
  408429:	sub    eax,DWORD PTR [rbp-0xa8]
  40842f:	mov    edi,eax
  408431:	call   406776 <main@@Base+0x11a>
  408436:	mov    DWORD PTR [rbp-0xc0],eax
  40843c:	jmp    40845e <flatcc_builder_create_buffer@@Base+0x3bd>
  40843e:	mov    rax,QWORD PTR [rbp-0xd8]
  408445:	mov    eax,DWORD PTR [rax+0xf4]
  40844b:	sub    eax,DWORD PTR [rbp-0xa8]
  408451:	mov    edi,eax
  408453:	call   406776 <main@@Base+0x11a>
  408458:	mov    DWORD PTR [rbp-0xc0],eax
  40845e:	mov    eax,DWORD PTR [rbp-0xe8]
  408464:	sub    eax,DWORD PTR [rbp-0xa8]
  40846a:	mov    edi,eax
  40846c:	call   406776 <main@@Base+0x11a>
  408471:	mov    DWORD PTR [rbp-0xc4],eax
  408477:	lea    rdx,[rbp-0xa0]
  40847e:	mov    rax,QWORD PTR [rbp-0xd8]
  408485:	mov    rsi,rdx
  408488:	mov    rdi,rax
  40848b:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  408490:	mov    DWORD PTR [rbp-0xa4],eax
  408496:	cmp    DWORD PTR [rbp-0xa4],0x0
  40849d:	jne    4084be <flatcc_builder_create_buffer@@Base+0x41d>
  40849f:	lea    rcx,[rip+0xc61a]        # 414ac0 <flatcc_builder_padding_base@@Base+0x720>
  4084a6:	mov    edx,0x304
  4084ab:	lea    rsi,[rip+0xc0ee]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4084b2:	lea    rdi,[rip+0xc147]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  4084b9:	call   403150 <__assert_fail@plt>
  4084be:	mov    eax,DWORD PTR [rbp-0xa4]
  4084c4:	mov    rsi,QWORD PTR [rbp-0x8]
  4084c8:	xor    rsi,QWORD PTR fs:0x28
  4084d1:	je     4084d8 <flatcc_builder_create_buffer@@Base+0x437>
  4084d3:	call   403140 <__stack_chk_fail@plt>
  4084d8:	leave  
  4084d9:	ret    

00000000004084da <flatcc_builder_create_struct@@Base>:
  4084da:	endbr64 
  4084de:	push   rbp
  4084df:	mov    rbp,rsp
  4084e2:	sub    rsp,0xd0
  4084e9:	mov    QWORD PTR [rbp-0xb8],rdi
  4084f0:	mov    QWORD PTR [rbp-0xc0],rsi
  4084f7:	mov    QWORD PTR [rbp-0xc8],rdx
  4084fe:	mov    eax,ecx
  408500:	mov    WORD PTR [rbp-0xcc],ax
  408507:	mov    rax,QWORD PTR fs:0x28
  408510:	mov    QWORD PTR [rbp-0x8],rax
  408514:	xor    eax,eax
  408516:	cmp    WORD PTR [rbp-0xcc],0x0
  40851e:	jne    40853f <flatcc_builder_create_struct@@Base+0x65>
  408520:	lea    rcx,[rip+0xc5b9]        # 414ae0 <flatcc_builder_padding_base@@Base+0x740>
  408527:	mov    edx,0x30f
  40852c:	lea    rsi,[rip+0xc06d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408533:	lea    rdi,[rip+0xc125]        # 41465f <flatcc_builder_padding_base@@Base+0x2bf>
  40853a:	call   403150 <__assert_fail@plt>
  40853f:	movzx  edx,WORD PTR [rbp-0xcc]
  408546:	mov    rax,QWORD PTR [rbp-0xb8]
  40854d:	mov    esi,edx
  40854f:	mov    rdi,rax
  408552:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  408557:	movzx  edx,WORD PTR [rbp-0xcc]
  40855e:	mov    rax,QWORD PTR [rbp-0xc8]
  408565:	mov    ecx,eax
  408567:	mov    rax,QWORD PTR [rbp-0xb8]
  40856e:	mov    esi,ecx
  408570:	mov    rdi,rax
  408573:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408578:	mov    eax,eax
  40857a:	mov    QWORD PTR [rbp-0xa8],rax
  408581:	mov    QWORD PTR [rbp-0xa0],0x0
  40858c:	mov    DWORD PTR [rbp-0x98],0x0
  408596:	cmp    QWORD PTR [rbp-0xc8],0x0
  40859e:	je     408606 <flatcc_builder_create_struct@@Base+0x12c>
  4085a0:	mov    rdx,QWORD PTR [rbp-0xa0]
  4085a7:	mov    rax,QWORD PTR [rbp-0xc8]
  4085ae:	add    rax,rdx
  4085b1:	mov    QWORD PTR [rbp-0xa0],rax
  4085b8:	mov    eax,DWORD PTR [rbp-0x98]
  4085be:	cdqe   
  4085c0:	shl    rax,0x4
  4085c4:	add    rax,rbp
  4085c7:	lea    rdx,[rax-0x90]
  4085ce:	mov    rax,QWORD PTR [rbp-0xc0]
  4085d5:	mov    QWORD PTR [rdx],rax
  4085d8:	mov    eax,DWORD PTR [rbp-0x98]
  4085de:	cdqe   
  4085e0:	shl    rax,0x4
  4085e4:	add    rax,rbp
  4085e7:	lea    rdx,[rax-0x88]
  4085ee:	mov    rax,QWORD PTR [rbp-0xc8]
  4085f5:	mov    QWORD PTR [rdx],rax
  4085f8:	mov    eax,DWORD PTR [rbp-0x98]
  4085fe:	inc    eax
  408600:	mov    DWORD PTR [rbp-0x98],eax
  408606:	cmp    QWORD PTR [rbp-0xa8],0x0
  40860e:	je     408675 <flatcc_builder_create_struct@@Base+0x19b>
  408610:	mov    rdx,QWORD PTR [rbp-0xa0]
  408617:	mov    rax,QWORD PTR [rbp-0xa8]
  40861e:	add    rax,rdx
  408621:	mov    QWORD PTR [rbp-0xa0],rax
  408628:	mov    eax,DWORD PTR [rbp-0x98]
  40862e:	cdqe   
  408630:	shl    rax,0x4
  408634:	add    rax,rbp
  408637:	sub    rax,0x90
  40863d:	mov    rdx,0x4143a0
  408644:	mov    QWORD PTR [rax],rdx
  408647:	mov    eax,DWORD PTR [rbp-0x98]
  40864d:	cdqe   
  40864f:	shl    rax,0x4
  408653:	add    rax,rbp
  408656:	lea    rdx,[rax-0x88]
  40865d:	mov    rax,QWORD PTR [rbp-0xa8]
  408664:	mov    QWORD PTR [rdx],rax
  408667:	mov    eax,DWORD PTR [rbp-0x98]
  40866d:	inc    eax
  40866f:	mov    DWORD PTR [rbp-0x98],eax
  408675:	lea    rdx,[rbp-0xa0]
  40867c:	mov    rax,QWORD PTR [rbp-0xb8]
  408683:	mov    rsi,rdx
  408686:	mov    rdi,rax
  408689:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40868e:	mov    rcx,QWORD PTR [rbp-0x8]
  408692:	xor    rcx,QWORD PTR fs:0x28
  40869b:	je     4086a2 <flatcc_builder_create_struct@@Base+0x1c8>
  40869d:	call   403140 <__stack_chk_fail@plt>
  4086a2:	leave  
  4086a3:	ret    

00000000004086a4 <flatcc_builder_start_buffer@@Base>:
  4086a4:	endbr64 
  4086a8:	push   rbp
  4086a9:	mov    rbp,rsp
  4086ac:	sub    rsp,0x20
  4086b0:	mov    QWORD PTR [rbp-0x8],rdi
  4086b4:	mov    QWORD PTR [rbp-0x10],rsi
  4086b8:	mov    eax,edx
  4086ba:	mov    DWORD PTR [rbp-0x18],ecx
  4086bd:	mov    WORD PTR [rbp-0x14],ax
  4086c1:	mov    rax,QWORD PTR [rbp-0x8]
  4086c5:	movzx  eax,WORD PTR [rax+0xe8]
  4086cc:	movzx  edx,ax
  4086cf:	mov    rax,QWORD PTR [rbp-0x8]
  4086d3:	mov    esi,edx
  4086d5:	mov    rdi,rax
  4086d8:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4086dd:	test   eax,eax
  4086df:	je     4086eb <flatcc_builder_start_buffer@@Base+0x47>
  4086e1:	mov    eax,0xffffffff
  4086e6:	jmp    4087ef <flatcc_builder_start_buffer@@Base+0x14b>
  4086eb:	mov    rax,QWORD PTR [rbp-0x8]
  4086ef:	mov    WORD PTR [rax+0xe8],0x1
  4086f8:	mov    rax,QWORD PTR [rbp-0x8]
  4086fc:	mov    rdx,QWORD PTR [rax+0x30]
  408700:	mov    rax,QWORD PTR [rbp-0x8]
  408704:	movzx  eax,WORD PTR [rax+0xec]
  40870b:	mov    WORD PTR [rdx+0x22],ax
  40870f:	mov    rdx,QWORD PTR [rbp-0x8]
  408713:	movzx  eax,WORD PTR [rbp-0x14]
  408717:	mov    WORD PTR [rdx+0xec],ax
  40871e:	mov    rax,QWORD PTR [rbp-0x8]
  408722:	mov    rdx,QWORD PTR [rax+0x30]
  408726:	mov    rax,QWORD PTR [rbp-0x8]
  40872a:	movzx  eax,WORD PTR [rax+0x10c]
  408731:	mov    WORD PTR [rdx+0x20],ax
  408735:	mov    eax,DWORD PTR [rbp-0x18]
  408738:	mov    edx,eax
  40873a:	mov    rax,QWORD PTR [rbp-0x8]
  40873e:	mov    WORD PTR [rax+0x10c],dx
  408745:	mov    rax,QWORD PTR [rbp-0x8]
  408749:	mov    rax,QWORD PTR [rax+0x30]
  40874d:	mov    rdx,QWORD PTR [rbp-0x8]
  408751:	mov    edx,DWORD PTR [rdx+0xf8]
  408757:	mov    DWORD PTR [rax+0x14],edx
  40875a:	mov    rax,QWORD PTR [rbp-0x8]
  40875e:	mov    rax,QWORD PTR [rax+0x30]
  408762:	mov    rdx,QWORD PTR [rbp-0x8]
  408766:	mov    edx,DWORD PTR [rdx+0x100]
  40876c:	mov    DWORD PTR [rax+0x1c],edx
  40876f:	mov    rax,QWORD PTR [rbp-0x8]
  408773:	mov    edx,DWORD PTR [rax+0xf0]
  408779:	mov    rax,QWORD PTR [rbp-0x8]
  40877d:	mov    DWORD PTR [rax+0xf8],edx
  408783:	mov    rax,QWORD PTR [rbp-0x8]
  408787:	mov    eax,DWORD PTR [rax+0xfc]
  40878d:	lea    ecx,[rax+0x1]
  408790:	mov    rdx,QWORD PTR [rbp-0x8]
  408794:	mov    DWORD PTR [rdx+0xfc],ecx
  40879a:	mov    rdx,QWORD PTR [rbp-0x8]
  40879e:	mov    DWORD PTR [rdx+0x100],eax
  4087a4:	mov    rax,QWORD PTR [rbp-0x8]
  4087a8:	mov    rax,QWORD PTR [rax+0x30]
  4087ac:	mov    rdx,QWORD PTR [rbp-0x8]
  4087b0:	mov    edx,DWORD PTR [rdx+0x110]
  4087b6:	mov    DWORD PTR [rax+0x10],edx
  4087b9:	cmp    QWORD PTR [rbp-0x10],0x0
  4087be:	je     4087c6 <flatcc_builder_start_buffer@@Base+0x122>
  4087c0:	mov    rax,QWORD PTR [rbp-0x10]
  4087c4:	jmp    4087cd <flatcc_builder_start_buffer@@Base+0x129>
  4087c6:	mov    rax,0x4143a0
  4087cd:	mov    rdx,QWORD PTR [rbp-0x8]
  4087d1:	add    rdx,0x110
  4087d8:	mov    eax,DWORD PTR [rax]
  4087da:	mov    DWORD PTR [rdx],eax
  4087dc:	mov    rax,QWORD PTR [rbp-0x8]
  4087e0:	mov    rax,QWORD PTR [rax+0x30]
  4087e4:	mov    WORD PTR [rax+0xe],0x1
  4087ea:	mov    eax,0x0
  4087ef:	leave  
  4087f0:	ret    

00000000004087f1 <flatcc_builder_end_buffer@@Base>:
  4087f1:	endbr64 
  4087f5:	push   rbp
  4087f6:	mov    rbp,rsp
  4087f9:	sub    rsp,0x20
  4087fd:	mov    QWORD PTR [rbp-0x18],rdi
  408801:	mov    DWORD PTR [rbp-0x1c],esi
  408804:	mov    rax,QWORD PTR [rbp-0x18]
  408808:	movzx  eax,WORD PTR [rax+0x10c]
  40880f:	movzx  eax,ax
  408812:	and    eax,0x2
  408815:	mov    DWORD PTR [rbp-0x8],eax
  408818:	mov    rax,QWORD PTR [rbp-0x18]
  40881c:	mov    eax,DWORD PTR [rax+0x100]
  408822:	test   eax,eax
  408824:	setne  al
  408827:	movzx  eax,al
  40882a:	or     DWORD PTR [rbp-0x8],eax
  40882d:	mov    rax,QWORD PTR [rbp-0x18]
  408831:	mov    rax,QWORD PTR [rax+0x30]
  408835:	movzx  eax,WORD PTR [rax+0xe]
  408839:	cmp    ax,0x1
  40883d:	je     40885e <flatcc_builder_end_buffer@@Base+0x6d>
  40883f:	lea    rcx,[rip+0xc2ba]        # 414b00 <flatcc_builder_padding_base@@Base+0x760>
  408846:	mov    edx,0x346
  40884b:	lea    rsi,[rip+0xbd4e]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408852:	lea    rdi,[rip+0xbe17]        # 414670 <flatcc_builder_padding_base@@Base+0x2d0>
  408859:	call   403150 <__assert_fail@plt>
  40885e:	mov    rax,QWORD PTR [rbp-0x18]
  408862:	movzx  eax,WORD PTR [rax+0xec]
  408869:	movzx  edx,ax
  40886c:	mov    rax,QWORD PTR [rbp-0x18]
  408870:	mov    esi,edx
  408872:	mov    rdi,rax
  408875:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  40887a:	mov    rax,QWORD PTR [rbp-0x18]
  40887e:	movzx  eax,WORD PTR [rax+0xe8]
  408885:	movzx  edi,ax
  408888:	mov    rax,QWORD PTR [rbp-0x18]
  40888c:	movzx  eax,WORD PTR [rax+0xec]
  408893:	movzx  edx,ax
  408896:	mov    rax,QWORD PTR [rbp-0x18]
  40889a:	lea    rsi,[rax+0x110]
  4088a1:	mov    r8d,DWORD PTR [rbp-0x8]
  4088a5:	mov    ecx,DWORD PTR [rbp-0x1c]
  4088a8:	mov    rax,QWORD PTR [rbp-0x18]
  4088ac:	mov    r9d,r8d
  4088af:	mov    r8d,edi
  4088b2:	mov    rdi,rax
  4088b5:	call   4080a1 <flatcc_builder_create_buffer@@Base>
  4088ba:	mov    DWORD PTR [rbp-0x4],eax
  4088bd:	cmp    DWORD PTR [rbp-0x4],0x0
  4088c1:	jne    4088ca <flatcc_builder_end_buffer@@Base+0xd9>
  4088c3:	mov    eax,0x0
  4088c8:	jmp    40892f <flatcc_builder_end_buffer@@Base+0x13e>
  4088ca:	mov    rax,QWORD PTR [rbp-0x18]
  4088ce:	mov    rax,QWORD PTR [rax+0x30]
  4088d2:	mov    edx,DWORD PTR [rax+0x14]
  4088d5:	mov    rax,QWORD PTR [rbp-0x18]
  4088d9:	mov    DWORD PTR [rax+0xf8],edx
  4088df:	mov    rax,QWORD PTR [rbp-0x18]
  4088e3:	mov    rax,QWORD PTR [rax+0x30]
  4088e7:	mov    edx,DWORD PTR [rax+0x1c]
  4088ea:	mov    rax,QWORD PTR [rbp-0x18]
  4088ee:	mov    DWORD PTR [rax+0x100],edx
  4088f4:	mov    rax,QWORD PTR [rbp-0x18]
  4088f8:	mov    rax,QWORD PTR [rax+0x30]
  4088fc:	mov    edx,DWORD PTR [rax+0x10]
  4088ff:	mov    rax,QWORD PTR [rbp-0x18]
  408903:	mov    DWORD PTR [rax+0x110],edx
  408909:	mov    rax,QWORD PTR [rbp-0x18]
  40890d:	mov    rax,QWORD PTR [rax+0x30]
  408911:	movzx  eax,WORD PTR [rax+0x20]
  408915:	mov    rdx,QWORD PTR [rbp-0x18]
  408919:	mov    WORD PTR [rdx+0x10c],ax
  408920:	mov    rax,QWORD PTR [rbp-0x18]
  408924:	mov    rdi,rax
  408927:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40892c:	mov    eax,DWORD PTR [rbp-0x4]
  40892f:	leave  
  408930:	ret    

0000000000408931 <flatcc_builder_start_struct@@Base>:
  408931:	endbr64 
  408935:	push   rbp
  408936:	mov    rbp,rsp
  408939:	sub    rsp,0x20
  40893d:	mov    QWORD PTR [rbp-0x8],rdi
  408941:	mov    QWORD PTR [rbp-0x10],rsi
  408945:	mov    eax,edx
  408947:	mov    WORD PTR [rbp-0x14],ax
  40894b:	movzx  edx,WORD PTR [rbp-0x14]
  40894f:	mov    rax,QWORD PTR [rbp-0x8]
  408953:	mov    esi,edx
  408955:	mov    rdi,rax
  408958:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40895d:	test   eax,eax
  40895f:	je     408968 <flatcc_builder_start_struct@@Base+0x37>
  408961:	mov    eax,0x0
  408966:	jmp    40899b <flatcc_builder_start_struct@@Base+0x6a>
  408968:	mov    rax,QWORD PTR [rbp-0x8]
  40896c:	mov    rax,QWORD PTR [rax+0x30]
  408970:	mov    WORD PTR [rax+0xe],0x2
  408976:	mov    rax,QWORD PTR [rbp-0x8]
  40897a:	mov    esi,0xfffffffc
  40897f:	mov    rdi,rax
  408982:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  408987:	mov    rax,QWORD PTR [rbp-0x10]
  40898b:	mov    edx,eax
  40898d:	mov    rax,QWORD PTR [rbp-0x8]
  408991:	mov    esi,edx
  408993:	mov    rdi,rax
  408996:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  40899b:	leave  
  40899c:	ret    

000000000040899d <flatcc_builder_struct_edit@@Base>:
  40899d:	endbr64 
  4089a1:	push   rbp
  4089a2:	mov    rbp,rsp
  4089a5:	mov    QWORD PTR [rbp-0x8],rdi
  4089a9:	mov    rax,QWORD PTR [rbp-0x8]
  4089ad:	mov    rax,QWORD PTR [rax+0x18]
  4089b1:	pop    rbp
  4089b2:	ret    

00000000004089b3 <flatcc_builder_end_struct@@Base>:
  4089b3:	endbr64 
  4089b7:	push   rbp
  4089b8:	mov    rbp,rsp
  4089bb:	sub    rsp,0x20
  4089bf:	mov    QWORD PTR [rbp-0x18],rdi
  4089c3:	mov    rax,QWORD PTR [rbp-0x18]
  4089c7:	mov    rax,QWORD PTR [rax+0x30]
  4089cb:	movzx  eax,WORD PTR [rax+0xe]
  4089cf:	cmp    ax,0x2
  4089d3:	je     4089f4 <flatcc_builder_end_struct@@Base+0x41>
  4089d5:	lea    rcx,[rip+0xc144]        # 414b20 <flatcc_builder_padding_base@@Base+0x780>
  4089dc:	mov    edx,0x368
  4089e1:	lea    rsi,[rip+0xbbb8]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4089e8:	lea    rdi,[rip+0xbcb1]        # 4146a0 <flatcc_builder_padding_base@@Base+0x300>
  4089ef:	call   403150 <__assert_fail@plt>
  4089f4:	mov    rax,QWORD PTR [rbp-0x18]
  4089f8:	movzx  eax,WORD PTR [rax+0xea]
  4089ff:	movzx  edx,ax
  408a02:	mov    rax,QWORD PTR [rbp-0x18]
  408a06:	mov    eax,DWORD PTR [rax+0x20]
  408a09:	mov    edi,eax
  408a0b:	mov    rax,QWORD PTR [rbp-0x18]
  408a0f:	mov    rsi,QWORD PTR [rax+0x18]
  408a13:	mov    rax,QWORD PTR [rbp-0x18]
  408a17:	mov    ecx,edx
  408a19:	mov    rdx,rdi
  408a1c:	mov    rdi,rax
  408a1f:	call   4084da <flatcc_builder_create_struct@@Base>
  408a24:	mov    DWORD PTR [rbp-0x4],eax
  408a27:	cmp    DWORD PTR [rbp-0x4],0x0
  408a2b:	jne    408a34 <flatcc_builder_end_struct@@Base+0x81>
  408a2d:	mov    eax,0x0
  408a32:	jmp    408a43 <flatcc_builder_end_struct@@Base+0x90>
  408a34:	mov    rax,QWORD PTR [rbp-0x18]
  408a38:	mov    rdi,rax
  408a3b:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408a40:	mov    eax,DWORD PTR [rbp-0x4]
  408a43:	leave  
  408a44:	ret    
  408a45:	push   rbp
  408a46:	mov    rbp,rsp
  408a49:	sub    rsp,0x20
  408a4d:	mov    QWORD PTR [rbp-0x18],rdi
  408a51:	mov    DWORD PTR [rbp-0x1c],esi
  408a54:	mov    DWORD PTR [rbp-0x20],edx
  408a57:	mov    rax,QWORD PTR [rbp-0x18]
  408a5b:	mov    rax,QWORD PTR [rax+0x30]
  408a5f:	mov    eax,DWORD PTR [rax+0x14]
  408a62:	mov    DWORD PTR [rbp-0x8],eax
  408a65:	mov    edx,DWORD PTR [rbp-0x8]
  408a68:	mov    eax,DWORD PTR [rbp-0x1c]
  408a6b:	add    eax,edx
  408a6d:	mov    DWORD PTR [rbp-0x4],eax
  408a70:	mov    eax,DWORD PTR [rbp-0x8]
  408a73:	cmp    eax,DWORD PTR [rbp-0x4]
  408a76:	ja     408a80 <flatcc_builder_end_struct@@Base+0xcd>
  408a78:	mov    eax,DWORD PTR [rbp-0x4]
  408a7b:	cmp    eax,DWORD PTR [rbp-0x20]
  408a7e:	jbe    408ab6 <flatcc_builder_end_struct@@Base+0x103>
  408a80:	mov    eax,DWORD PTR [rbp-0x8]
  408a83:	cmp    eax,DWORD PTR [rbp-0x4]
  408a86:	ja     408a90 <flatcc_builder_end_struct@@Base+0xdd>
  408a88:	mov    eax,DWORD PTR [rbp-0x4]
  408a8b:	cmp    eax,DWORD PTR [rbp-0x20]
  408a8e:	jbe    408aaf <flatcc_builder_end_struct@@Base+0xfc>
  408a90:	lea    rcx,[rip+0xc0a9]        # 414b40 <flatcc_builder_padding_base@@Base+0x7a0>
  408a97:	mov    edx,0x37c
  408a9c:	lea    rsi,[rip+0xbafd]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408aa3:	lea    rdi,[rip+0xbc22]        # 4146cc <flatcc_builder_padding_base@@Base+0x32c>
  408aaa:	call   403150 <__assert_fail@plt>
  408aaf:	mov    eax,0xffffffff
  408ab4:	jmp    408ac9 <flatcc_builder_end_struct@@Base+0x116>
  408ab6:	mov    rax,QWORD PTR [rbp-0x18]
  408aba:	mov    rax,QWORD PTR [rax+0x30]
  408abe:	mov    edx,DWORD PTR [rbp-0x4]
  408ac1:	mov    DWORD PTR [rax+0x14],edx
  408ac4:	mov    eax,0x0
  408ac9:	leave  
  408aca:	ret    

0000000000408acb <flatcc_builder_extend_vector@@Base>:
  408acb:	endbr64 
  408acf:	push   rbp
  408ad0:	mov    rbp,rsp
  408ad3:	sub    rsp,0x10
  408ad7:	mov    QWORD PTR [rbp-0x8],rdi
  408adb:	mov    QWORD PTR [rbp-0x10],rsi
  408adf:	mov    rax,QWORD PTR [rbp-0x8]
  408ae3:	mov    rax,QWORD PTR [rax+0x30]
  408ae7:	mov    edx,DWORD PTR [rax+0x18]
  408aea:	mov    rax,QWORD PTR [rbp-0x10]
  408aee:	mov    ecx,eax
  408af0:	mov    rax,QWORD PTR [rbp-0x8]
  408af4:	mov    esi,ecx
  408af6:	mov    rdi,rax
  408af9:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408afe:	test   eax,eax
  408b00:	je     408b09 <flatcc_builder_extend_vector@@Base+0x3e>
  408b02:	mov    eax,0x0
  408b07:	jmp    408b29 <flatcc_builder_extend_vector@@Base+0x5e>
  408b09:	mov    rax,QWORD PTR [rbp-0x8]
  408b0d:	mov    rax,QWORD PTR [rax+0x30]
  408b11:	mov    eax,DWORD PTR [rax+0x10]
  408b14:	mov    rdx,QWORD PTR [rbp-0x10]
  408b18:	imul   edx,eax
  408b1b:	mov    rax,QWORD PTR [rbp-0x8]
  408b1f:	mov    esi,edx
  408b21:	mov    rdi,rax
  408b24:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  408b29:	leave  
  408b2a:	ret    

0000000000408b2b <flatcc_builder_vector_push@@Base>:
  408b2b:	endbr64 
  408b2f:	push   rbp
  408b30:	mov    rbp,rsp
  408b33:	sub    rsp,0x10
  408b37:	mov    QWORD PTR [rbp-0x8],rdi
  408b3b:	mov    QWORD PTR [rbp-0x10],rsi
  408b3f:	mov    rax,QWORD PTR [rbp-0x8]
  408b43:	mov    rax,QWORD PTR [rax+0x30]
  408b47:	movzx  eax,WORD PTR [rax+0xe]
  408b4b:	cmp    ax,0x4
  408b4f:	je     408b70 <flatcc_builder_vector_push@@Base+0x45>
  408b51:	lea    rcx,[rip+0xc008]        # 414b60 <flatcc_builder_padding_base@@Base+0x7c0>
  408b58:	mov    edx,0x38b
  408b5d:	lea    rsi,[rip+0xba3c]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408b64:	lea    rdi,[rip+0xbb7d]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408b6b:	call   403150 <__assert_fail@plt>
  408b70:	mov    rax,QWORD PTR [rbp-0x8]
  408b74:	mov    rax,QWORD PTR [rax+0x30]
  408b78:	mov    edx,DWORD PTR [rax+0x14]
  408b7b:	mov    rax,QWORD PTR [rbp-0x8]
  408b7f:	mov    rax,QWORD PTR [rax+0x30]
  408b83:	mov    eax,DWORD PTR [rax+0x18]
  408b86:	cmp    edx,eax
  408b88:	jbe    408bca <flatcc_builder_vector_push@@Base+0x9f>
  408b8a:	mov    rax,QWORD PTR [rbp-0x8]
  408b8e:	mov    rax,QWORD PTR [rax+0x30]
  408b92:	mov    edx,DWORD PTR [rax+0x14]
  408b95:	mov    rax,QWORD PTR [rbp-0x8]
  408b99:	mov    rax,QWORD PTR [rax+0x30]
  408b9d:	mov    eax,DWORD PTR [rax+0x18]
  408ba0:	cmp    edx,eax
  408ba2:	jbe    408bc3 <flatcc_builder_vector_push@@Base+0x98>
  408ba4:	lea    rcx,[rip+0xbfb5]        # 414b60 <flatcc_builder_padding_base@@Base+0x7c0>
  408bab:	mov    edx,0x38c
  408bb0:	lea    rsi,[rip+0xb9e9]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408bb7:	lea    rdi,[rip+0xbb5a]        # 414718 <flatcc_builder_padding_base@@Base+0x378>
  408bbe:	call   403150 <__assert_fail@plt>
  408bc3:	mov    eax,0x0
  408bc8:	jmp    408c00 <flatcc_builder_vector_push@@Base+0xd5>
  408bca:	mov    rax,QWORD PTR [rbp-0x8]
  408bce:	mov    rax,QWORD PTR [rax+0x30]
  408bd2:	mov    edx,DWORD PTR [rax+0x14]
  408bd5:	mov    rax,QWORD PTR [rbp-0x8]
  408bd9:	mov    rax,QWORD PTR [rax+0x30]
  408bdd:	inc    edx
  408bdf:	mov    DWORD PTR [rax+0x14],edx
  408be2:	mov    rax,QWORD PTR [rbp-0x8]
  408be6:	mov    rax,QWORD PTR [rax+0x30]
  408bea:	mov    edx,DWORD PTR [rax+0x10]
  408bed:	mov    rcx,QWORD PTR [rbp-0x10]
  408bf1:	mov    rax,QWORD PTR [rbp-0x8]
  408bf5:	mov    rsi,rcx
  408bf8:	mov    rdi,rax
  408bfb:	call   406b68 <flatcc_builder_default_alloc@@Base+0x332>
  408c00:	leave  
  408c01:	ret    

0000000000408c02 <flatcc_builder_append_vector@@Base>:
  408c02:	endbr64 
  408c06:	push   rbp
  408c07:	mov    rbp,rsp
  408c0a:	sub    rsp,0x20
  408c0e:	mov    QWORD PTR [rbp-0x8],rdi
  408c12:	mov    QWORD PTR [rbp-0x10],rsi
  408c16:	mov    QWORD PTR [rbp-0x18],rdx
  408c1a:	mov    rax,QWORD PTR [rbp-0x8]
  408c1e:	mov    rax,QWORD PTR [rax+0x30]
  408c22:	movzx  eax,WORD PTR [rax+0xe]
  408c26:	cmp    ax,0x4
  408c2a:	je     408c4b <flatcc_builder_append_vector@@Base+0x49>
  408c2c:	lea    rcx,[rip+0xbf4d]        # 414b80 <flatcc_builder_padding_base@@Base+0x7e0>
  408c33:	mov    edx,0x393
  408c38:	lea    rsi,[rip+0xb961]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408c3f:	lea    rdi,[rip+0xbaa2]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408c46:	call   403150 <__assert_fail@plt>
  408c4b:	mov    rax,QWORD PTR [rbp-0x8]
  408c4f:	mov    rax,QWORD PTR [rax+0x30]
  408c53:	mov    edx,DWORD PTR [rax+0x18]
  408c56:	mov    rax,QWORD PTR [rbp-0x18]
  408c5a:	mov    ecx,eax
  408c5c:	mov    rax,QWORD PTR [rbp-0x8]
  408c60:	mov    esi,ecx
  408c62:	mov    rdi,rax
  408c65:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408c6a:	test   eax,eax
  408c6c:	je     408c75 <flatcc_builder_append_vector@@Base+0x73>
  408c6e:	mov    eax,0x0
  408c73:	jmp    408c9a <flatcc_builder_append_vector@@Base+0x98>
  408c75:	mov    rax,QWORD PTR [rbp-0x8]
  408c79:	mov    rax,QWORD PTR [rax+0x30]
  408c7d:	mov    eax,DWORD PTR [rax+0x10]
  408c80:	mov    rdx,QWORD PTR [rbp-0x18]
  408c84:	imul   edx,eax
  408c87:	mov    rcx,QWORD PTR [rbp-0x10]
  408c8b:	mov    rax,QWORD PTR [rbp-0x8]
  408c8f:	mov    rsi,rcx
  408c92:	mov    rdi,rax
  408c95:	call   406b68 <flatcc_builder_default_alloc@@Base+0x332>
  408c9a:	leave  
  408c9b:	ret    

0000000000408c9c <flatcc_builder_extend_offset_vector@@Base>:
  408c9c:	endbr64 
  408ca0:	push   rbp
  408ca1:	mov    rbp,rsp
  408ca4:	sub    rsp,0x10
  408ca8:	mov    QWORD PTR [rbp-0x8],rdi
  408cac:	mov    QWORD PTR [rbp-0x10],rsi
  408cb0:	mov    rax,QWORD PTR [rbp-0x10]
  408cb4:	mov    ecx,eax
  408cb6:	mov    rax,QWORD PTR [rbp-0x8]
  408cba:	mov    edx,0x3fffffff
  408cbf:	mov    esi,ecx
  408cc1:	mov    rdi,rax
  408cc4:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408cc9:	test   eax,eax
  408ccb:	je     408cd4 <flatcc_builder_extend_offset_vector@@Base+0x38>
  408ccd:	mov    eax,0x0
  408cd2:	jmp    408ced <flatcc_builder_extend_offset_vector@@Base+0x51>
  408cd4:	mov    rax,QWORD PTR [rbp-0x10]
  408cd8:	lea    edx,[rax*4+0x0]
  408cdf:	mov    rax,QWORD PTR [rbp-0x8]
  408ce3:	mov    esi,edx
  408ce5:	mov    rdi,rax
  408ce8:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  408ced:	leave  
  408cee:	ret    

0000000000408cef <flatcc_builder_offset_vector_push@@Base>:
  408cef:	endbr64 
  408cf3:	push   rbp
  408cf4:	mov    rbp,rsp
  408cf7:	sub    rsp,0x20
  408cfb:	mov    QWORD PTR [rbp-0x18],rdi
  408cff:	mov    DWORD PTR [rbp-0x1c],esi
  408d02:	mov    rax,QWORD PTR [rbp-0x18]
  408d06:	mov    rax,QWORD PTR [rax+0x30]
  408d0a:	movzx  eax,WORD PTR [rax+0xe]
  408d0e:	cmp    ax,0x5
  408d12:	je     408d33 <flatcc_builder_offset_vector_push@@Base+0x44>
  408d14:	lea    rcx,[rip+0xbe85]        # 414ba0 <flatcc_builder_padding_base@@Base+0x800>
  408d1b:	mov    edx,0x3a6
  408d20:	lea    rsi,[rip+0xb879]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408d27:	lea    rdi,[rip+0xba2a]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  408d2e:	call   403150 <__assert_fail@plt>
  408d33:	mov    rax,QWORD PTR [rbp-0x18]
  408d37:	mov    rax,QWORD PTR [rax+0x30]
  408d3b:	mov    eax,DWORD PTR [rax+0x14]
  408d3e:	cmp    eax,0x3fffffff
  408d43:	jne    408d4c <flatcc_builder_offset_vector_push@@Base+0x5d>
  408d45:	mov    eax,0x0
  408d4a:	jmp    408d94 <flatcc_builder_offset_vector_push@@Base+0xa5>
  408d4c:	mov    rax,QWORD PTR [rbp-0x18]
  408d50:	mov    rax,QWORD PTR [rax+0x30]
  408d54:	mov    edx,DWORD PTR [rax+0x14]
  408d57:	mov    rax,QWORD PTR [rbp-0x18]
  408d5b:	mov    rax,QWORD PTR [rax+0x30]
  408d5f:	inc    edx
  408d61:	mov    DWORD PTR [rax+0x14],edx
  408d64:	mov    rax,QWORD PTR [rbp-0x18]
  408d68:	mov    esi,0x4
  408d6d:	mov    rdi,rax
  408d70:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  408d75:	mov    QWORD PTR [rbp-0x8],rax
  408d79:	cmp    QWORD PTR [rbp-0x8],0x0
  408d7e:	jne    408d87 <flatcc_builder_offset_vector_push@@Base+0x98>
  408d80:	mov    eax,0x0
  408d85:	jmp    408d94 <flatcc_builder_offset_vector_push@@Base+0xa5>
  408d87:	mov    rax,QWORD PTR [rbp-0x8]
  408d8b:	mov    edx,DWORD PTR [rbp-0x1c]
  408d8e:	mov    DWORD PTR [rax],edx
  408d90:	mov    rax,QWORD PTR [rbp-0x8]
  408d94:	leave  
  408d95:	ret    

0000000000408d96 <flatcc_builder_append_offset_vector@@Base>:
  408d96:	endbr64 
  408d9a:	push   rbp
  408d9b:	mov    rbp,rsp
  408d9e:	sub    rsp,0x20
  408da2:	mov    QWORD PTR [rbp-0x8],rdi
  408da6:	mov    QWORD PTR [rbp-0x10],rsi
  408daa:	mov    QWORD PTR [rbp-0x18],rdx
  408dae:	mov    rax,QWORD PTR [rbp-0x8]
  408db2:	mov    rax,QWORD PTR [rax+0x30]
  408db6:	movzx  eax,WORD PTR [rax+0xe]
  408dba:	cmp    ax,0x5
  408dbe:	je     408ddf <flatcc_builder_append_offset_vector@@Base+0x49>
  408dc0:	lea    rcx,[rip+0xbe19]        # 414be0 <flatcc_builder_padding_base@@Base+0x840>
  408dc7:	mov    edx,0x3b4
  408dcc:	lea    rsi,[rip+0xb7cd]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408dd3:	lea    rdi,[rip+0xb97e]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  408dda:	call   403150 <__assert_fail@plt>
  408ddf:	mov    rax,QWORD PTR [rbp-0x18]
  408de3:	mov    ecx,eax
  408de5:	mov    rax,QWORD PTR [rbp-0x8]
  408de9:	mov    edx,0x3fffffff
  408dee:	mov    esi,ecx
  408df0:	mov    rdi,rax
  408df3:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408df8:	test   eax,eax
  408dfa:	je     408e03 <flatcc_builder_append_offset_vector@@Base+0x6d>
  408dfc:	mov    eax,0x0
  408e01:	jmp    408e21 <flatcc_builder_append_offset_vector@@Base+0x8b>
  408e03:	mov    rax,QWORD PTR [rbp-0x18]
  408e07:	lea    edx,[rax*4+0x0]
  408e0e:	mov    rcx,QWORD PTR [rbp-0x10]
  408e12:	mov    rax,QWORD PTR [rbp-0x8]
  408e16:	mov    rsi,rcx
  408e19:	mov    rdi,rax
  408e1c:	call   406b68 <flatcc_builder_default_alloc@@Base+0x332>
  408e21:	leave  
  408e22:	ret    

0000000000408e23 <flatcc_builder_extend_string@@Base>:
  408e23:	endbr64 
  408e27:	push   rbp
  408e28:	mov    rbp,rsp
  408e2b:	sub    rsp,0x10
  408e2f:	mov    QWORD PTR [rbp-0x8],rdi
  408e33:	mov    QWORD PTR [rbp-0x10],rsi
  408e37:	mov    rax,QWORD PTR [rbp-0x8]
  408e3b:	mov    rax,QWORD PTR [rax+0x30]
  408e3f:	movzx  eax,WORD PTR [rax+0xe]
  408e43:	cmp    ax,0x6
  408e47:	je     408e68 <flatcc_builder_extend_string@@Base+0x45>
  408e49:	lea    rcx,[rip+0xbdc0]        # 414c10 <flatcc_builder_padding_base@@Base+0x870>
  408e50:	mov    edx,0x3bd
  408e55:	lea    rsi,[rip+0xb744]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408e5c:	lea    rdi,[rip+0xb92d]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  408e63:	call   403150 <__assert_fail@plt>
  408e68:	mov    rax,QWORD PTR [rbp-0x10]
  408e6c:	mov    ecx,eax
  408e6e:	mov    rax,QWORD PTR [rbp-0x8]
  408e72:	mov    edx,0xffffffff
  408e77:	mov    esi,ecx
  408e79:	mov    rdi,rax
  408e7c:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408e81:	test   eax,eax
  408e83:	je     408e8c <flatcc_builder_extend_string@@Base+0x69>
  408e85:	mov    eax,0x0
  408e8a:	jmp    408ea0 <flatcc_builder_extend_string@@Base+0x7d>
  408e8c:	mov    rax,QWORD PTR [rbp-0x10]
  408e90:	mov    edx,eax
  408e92:	mov    rax,QWORD PTR [rbp-0x8]
  408e96:	mov    esi,edx
  408e98:	mov    rdi,rax
  408e9b:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  408ea0:	leave  
  408ea1:	ret    

0000000000408ea2 <flatcc_builder_append_string@@Base>:
  408ea2:	endbr64 
  408ea6:	push   rbp
  408ea7:	mov    rbp,rsp
  408eaa:	sub    rsp,0x20
  408eae:	mov    QWORD PTR [rbp-0x8],rdi
  408eb2:	mov    QWORD PTR [rbp-0x10],rsi
  408eb6:	mov    QWORD PTR [rbp-0x18],rdx
  408eba:	mov    rax,QWORD PTR [rbp-0x8]
  408ebe:	mov    rax,QWORD PTR [rax+0x30]
  408ec2:	movzx  eax,WORD PTR [rax+0xe]
  408ec6:	cmp    ax,0x6
  408eca:	je     408eeb <flatcc_builder_append_string@@Base+0x49>
  408ecc:	lea    rcx,[rip+0xbd5d]        # 414c30 <flatcc_builder_padding_base@@Base+0x890>
  408ed3:	mov    edx,0x3c6
  408ed8:	lea    rsi,[rip+0xb6c1]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408edf:	lea    rdi,[rip+0xb8aa]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  408ee6:	call   403150 <__assert_fail@plt>
  408eeb:	mov    rax,QWORD PTR [rbp-0x18]
  408eef:	mov    ecx,eax
  408ef1:	mov    rax,QWORD PTR [rbp-0x8]
  408ef5:	mov    edx,0xffffffff
  408efa:	mov    esi,ecx
  408efc:	mov    rdi,rax
  408eff:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  408f04:	test   eax,eax
  408f06:	je     408f0f <flatcc_builder_append_string@@Base+0x6d>
  408f08:	mov    eax,0x0
  408f0d:	jmp    408f28 <flatcc_builder_append_string@@Base+0x86>
  408f0f:	mov    rax,QWORD PTR [rbp-0x18]
  408f13:	mov    edx,eax
  408f15:	mov    rcx,QWORD PTR [rbp-0x10]
  408f19:	mov    rax,QWORD PTR [rbp-0x8]
  408f1d:	mov    rsi,rcx
  408f20:	mov    rdi,rax
  408f23:	call   406b68 <flatcc_builder_default_alloc@@Base+0x332>
  408f28:	leave  
  408f29:	ret    

0000000000408f2a <flatcc_builder_append_string_str@@Base>:
  408f2a:	endbr64 
  408f2e:	push   rbp
  408f2f:	mov    rbp,rsp
  408f32:	sub    rsp,0x10
  408f36:	mov    QWORD PTR [rbp-0x8],rdi
  408f3a:	mov    QWORD PTR [rbp-0x10],rsi
  408f3e:	mov    rax,QWORD PTR [rbp-0x10]
  408f42:	mov    rdi,rax
  408f45:	call   403130 <strlen@plt>
  408f4a:	mov    rdx,rax
  408f4d:	mov    rcx,QWORD PTR [rbp-0x10]
  408f51:	mov    rax,QWORD PTR [rbp-0x8]
  408f55:	mov    rsi,rcx
  408f58:	mov    rdi,rax
  408f5b:	call   408ea2 <flatcc_builder_append_string@@Base>
  408f60:	leave  
  408f61:	ret    

0000000000408f62 <flatcc_builder_append_string_strn@@Base>:
  408f62:	endbr64 
  408f66:	push   rbp
  408f67:	mov    rbp,rsp
  408f6a:	sub    rsp,0x20
  408f6e:	mov    QWORD PTR [rbp-0x8],rdi
  408f72:	mov    QWORD PTR [rbp-0x10],rsi
  408f76:	mov    QWORD PTR [rbp-0x18],rdx
  408f7a:	mov    rdx,QWORD PTR [rbp-0x18]
  408f7e:	mov    rax,QWORD PTR [rbp-0x10]
  408f82:	mov    rsi,rdx
  408f85:	mov    rdi,rax
  408f88:	call   4067f6 <main@@Base+0x19a>
  408f8d:	mov    rdx,rax
  408f90:	mov    rcx,QWORD PTR [rbp-0x10]
  408f94:	mov    rax,QWORD PTR [rbp-0x8]
  408f98:	mov    rsi,rcx
  408f9b:	mov    rdi,rax
  408f9e:	call   408ea2 <flatcc_builder_append_string@@Base>
  408fa3:	leave  
  408fa4:	ret    

0000000000408fa5 <flatcc_builder_truncate_vector@@Base>:
  408fa5:	endbr64 
  408fa9:	push   rbp
  408faa:	mov    rbp,rsp
  408fad:	sub    rsp,0x10
  408fb1:	mov    QWORD PTR [rbp-0x8],rdi
  408fb5:	mov    QWORD PTR [rbp-0x10],rsi
  408fb9:	mov    rax,QWORD PTR [rbp-0x8]
  408fbd:	mov    rax,QWORD PTR [rax+0x30]
  408fc1:	movzx  eax,WORD PTR [rax+0xe]
  408fc5:	cmp    ax,0x4
  408fc9:	je     408fea <flatcc_builder_truncate_vector@@Base+0x45>
  408fcb:	lea    rcx,[rip+0xbc7e]        # 414c50 <flatcc_builder_padding_base@@Base+0x8b0>
  408fd2:	mov    edx,0x3d9
  408fd7:	lea    rsi,[rip+0xb5c2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408fde:	lea    rdi,[rip+0xb703]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408fe5:	call   403150 <__assert_fail@plt>
  408fea:	mov    rax,QWORD PTR [rbp-0x8]
  408fee:	mov    rax,QWORD PTR [rax+0x30]
  408ff2:	mov    eax,DWORD PTR [rax+0x14]
  408ff5:	mov    eax,eax
  408ff7:	cmp    QWORD PTR [rbp-0x10],rax
  408ffb:	jbe    409036 <flatcc_builder_truncate_vector@@Base+0x91>
  408ffd:	mov    rax,QWORD PTR [rbp-0x8]
  409001:	mov    rax,QWORD PTR [rax+0x30]
  409005:	mov    eax,DWORD PTR [rax+0x14]
  409008:	mov    eax,eax
  40900a:	cmp    QWORD PTR [rbp-0x10],rax
  40900e:	jbe    40902f <flatcc_builder_truncate_vector@@Base+0x8a>
  409010:	lea    rcx,[rip+0xbc39]        # 414c50 <flatcc_builder_padding_base@@Base+0x8b0>
  409017:	mov    edx,0x3da
  40901c:	lea    rsi,[rip+0xb57d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409023:	lea    rdi,[rip+0xb796]        # 4147c0 <flatcc_builder_padding_base@@Base+0x420>
  40902a:	call   403150 <__assert_fail@plt>
  40902f:	mov    eax,0xffffffff
  409034:	jmp    409079 <flatcc_builder_truncate_vector@@Base+0xd4>
  409036:	mov    rax,QWORD PTR [rbp-0x8]
  40903a:	mov    rax,QWORD PTR [rax+0x30]
  40903e:	mov    edx,DWORD PTR [rax+0x14]
  409041:	mov    rax,QWORD PTR [rbp-0x10]
  409045:	mov    ecx,eax
  409047:	mov    rax,QWORD PTR [rbp-0x8]
  40904b:	mov    rax,QWORD PTR [rax+0x30]
  40904f:	sub    edx,ecx
  409051:	mov    DWORD PTR [rax+0x14],edx
  409054:	mov    rax,QWORD PTR [rbp-0x8]
  409058:	mov    rax,QWORD PTR [rax+0x30]
  40905c:	mov    eax,DWORD PTR [rax+0x10]
  40905f:	mov    rdx,QWORD PTR [rbp-0x10]
  409063:	imul   edx,eax
  409066:	mov    rax,QWORD PTR [rbp-0x8]
  40906a:	mov    esi,edx
  40906c:	mov    rdi,rax
  40906f:	call   406b1c <flatcc_builder_default_alloc@@Base+0x2e6>
  409074:	mov    eax,0x0
  409079:	leave  
  40907a:	ret    

000000000040907b <flatcc_builder_truncate_offset_vector@@Base>:
  40907b:	endbr64 
  40907f:	push   rbp
  409080:	mov    rbp,rsp
  409083:	sub    rsp,0x10
  409087:	mov    QWORD PTR [rbp-0x8],rdi
  40908b:	mov    QWORD PTR [rbp-0x10],rsi
  40908f:	mov    rax,QWORD PTR [rbp-0x8]
  409093:	mov    rax,QWORD PTR [rax+0x30]
  409097:	movzx  eax,WORD PTR [rax+0xe]
  40909b:	cmp    ax,0x5
  40909f:	je     4090c0 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  4090a1:	lea    rcx,[rip+0xbbd8]        # 414c80 <flatcc_builder_padding_base@@Base+0x8e0>
  4090a8:	mov    edx,0x3e2
  4090ad:	lea    rsi,[rip+0xb4ec]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4090b4:	lea    rdi,[rip+0xb69d]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  4090bb:	call   403150 <__assert_fail@plt>
  4090c0:	mov    rax,QWORD PTR [rbp-0x8]
  4090c4:	mov    rax,QWORD PTR [rax+0x30]
  4090c8:	mov    eax,DWORD PTR [rax+0x14]
  4090cb:	mov    rdx,QWORD PTR [rbp-0x10]
  4090cf:	cmp    eax,edx
  4090d1:	jae    40910c <flatcc_builder_truncate_offset_vector@@Base+0x91>
  4090d3:	mov    rax,QWORD PTR [rbp-0x8]
  4090d7:	mov    rax,QWORD PTR [rax+0x30]
  4090db:	mov    eax,DWORD PTR [rax+0x14]
  4090de:	mov    rdx,QWORD PTR [rbp-0x10]
  4090e2:	cmp    eax,edx
  4090e4:	jae    409105 <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  4090e6:	lea    rcx,[rip+0xbb93]        # 414c80 <flatcc_builder_padding_base@@Base+0x8e0>
  4090ed:	mov    edx,0x3e3
  4090f2:	lea    rsi,[rip+0xb4a7]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4090f9:	lea    rdi,[rip+0xb6e8]        # 4147e8 <flatcc_builder_padding_base@@Base+0x448>
  409100:	call   403150 <__assert_fail@plt>
  409105:	mov    eax,0xffffffff
  40910a:	jmp    40914f <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  40910c:	mov    rax,QWORD PTR [rbp-0x8]
  409110:	mov    rax,QWORD PTR [rax+0x30]
  409114:	mov    edx,DWORD PTR [rax+0x14]
  409117:	mov    rax,QWORD PTR [rbp-0x10]
  40911b:	mov    ecx,eax
  40911d:	mov    rax,QWORD PTR [rbp-0x8]
  409121:	mov    rax,QWORD PTR [rax+0x30]
  409125:	sub    edx,ecx
  409127:	mov    DWORD PTR [rax+0x14],edx
  40912a:	mov    rax,QWORD PTR [rbp-0x8]
  40912e:	mov    rax,QWORD PTR [rax+0x30]
  409132:	mov    eax,DWORD PTR [rax+0x10]
  409135:	mov    rdx,QWORD PTR [rbp-0x10]
  409139:	imul   edx,eax
  40913c:	mov    rax,QWORD PTR [rbp-0x8]
  409140:	mov    esi,edx
  409142:	mov    rdi,rax
  409145:	call   406b1c <flatcc_builder_default_alloc@@Base+0x2e6>
  40914a:	mov    eax,0x0
  40914f:	leave  
  409150:	ret    

0000000000409151 <flatcc_builder_truncate_string@@Base>:
  409151:	endbr64 
  409155:	push   rbp
  409156:	mov    rbp,rsp
  409159:	sub    rsp,0x10
  40915d:	mov    QWORD PTR [rbp-0x8],rdi
  409161:	mov    QWORD PTR [rbp-0x10],rsi
  409165:	mov    rax,QWORD PTR [rbp-0x8]
  409169:	mov    rax,QWORD PTR [rax+0x30]
  40916d:	movzx  eax,WORD PTR [rax+0xe]
  409171:	cmp    ax,0x6
  409175:	je     409196 <flatcc_builder_truncate_string@@Base+0x45>
  409177:	lea    rcx,[rip+0xbb32]        # 414cb0 <flatcc_builder_padding_base@@Base+0x910>
  40917e:	mov    edx,0x3eb
  409183:	lea    rsi,[rip+0xb416]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40918a:	lea    rdi,[rip+0xb5ff]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  409191:	call   403150 <__assert_fail@plt>
  409196:	mov    rax,QWORD PTR [rbp-0x8]
  40919a:	mov    rax,QWORD PTR [rax+0x30]
  40919e:	mov    eax,DWORD PTR [rax+0x14]
  4091a1:	mov    eax,eax
  4091a3:	cmp    QWORD PTR [rbp-0x10],rax
  4091a7:	jbe    4091e2 <flatcc_builder_truncate_string@@Base+0x91>
  4091a9:	mov    rax,QWORD PTR [rbp-0x8]
  4091ad:	mov    rax,QWORD PTR [rax+0x30]
  4091b1:	mov    eax,DWORD PTR [rax+0x14]
  4091b4:	mov    eax,eax
  4091b6:	cmp    QWORD PTR [rbp-0x10],rax
  4091ba:	jbe    4091db <flatcc_builder_truncate_string@@Base+0x8a>
  4091bc:	lea    rcx,[rip+0xbaed]        # 414cb0 <flatcc_builder_padding_base@@Base+0x910>
  4091c3:	mov    edx,0x3ec
  4091c8:	lea    rsi,[rip+0xb3d1]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4091cf:	lea    rdi,[rip+0xb652]        # 414828 <flatcc_builder_padding_base@@Base+0x488>
  4091d6:	call   403150 <__assert_fail@plt>
  4091db:	mov    eax,0xffffffff
  4091e0:	jmp    409219 <flatcc_builder_truncate_string@@Base+0xc8>
  4091e2:	mov    rax,QWORD PTR [rbp-0x8]
  4091e6:	mov    rax,QWORD PTR [rax+0x30]
  4091ea:	mov    edx,DWORD PTR [rax+0x14]
  4091ed:	mov    rax,QWORD PTR [rbp-0x10]
  4091f1:	mov    ecx,eax
  4091f3:	mov    rax,QWORD PTR [rbp-0x8]
  4091f7:	mov    rax,QWORD PTR [rax+0x30]
  4091fb:	sub    edx,ecx
  4091fd:	mov    DWORD PTR [rax+0x14],edx
  409200:	mov    rax,QWORD PTR [rbp-0x10]
  409204:	mov    edx,eax
  409206:	mov    rax,QWORD PTR [rbp-0x8]
  40920a:	mov    esi,edx
  40920c:	mov    rdi,rax
  40920f:	call   406b1c <flatcc_builder_default_alloc@@Base+0x2e6>
  409214:	mov    eax,0x0
  409219:	leave  
  40921a:	ret    

000000000040921b <flatcc_builder_start_vector@@Base>:
  40921b:	endbr64 
  40921f:	push   rbp
  409220:	mov    rbp,rsp
  409223:	sub    rsp,0x20
  409227:	mov    QWORD PTR [rbp-0x8],rdi
  40922b:	mov    QWORD PTR [rbp-0x10],rsi
  40922f:	mov    eax,edx
  409231:	mov    QWORD PTR [rbp-0x20],rcx
  409235:	mov    WORD PTR [rbp-0x14],ax
  409239:	lea    rax,[rbp-0x14]
  40923d:	mov    esi,0x4
  409242:	mov    rdi,rax
  409245:	call   4074d3 <flatcc_builder_clear@@Base+0xca>
  40924a:	movzx  eax,WORD PTR [rbp-0x14]
  40924e:	movzx  edx,ax
  409251:	mov    rax,QWORD PTR [rbp-0x8]
  409255:	mov    esi,edx
  409257:	mov    rdi,rax
  40925a:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40925f:	test   eax,eax
  409261:	je     40926a <flatcc_builder_start_vector@@Base+0x4f>
  409263:	mov    eax,0xffffffff
  409268:	jmp    4092bb <flatcc_builder_start_vector@@Base+0xa0>
  40926a:	mov    rax,QWORD PTR [rbp-0x8]
  40926e:	mov    rax,QWORD PTR [rax+0x30]
  409272:	mov    rdx,QWORD PTR [rbp-0x10]
  409276:	mov    DWORD PTR [rax+0x10],edx
  409279:	mov    rax,QWORD PTR [rbp-0x8]
  40927d:	mov    rax,QWORD PTR [rax+0x30]
  409281:	mov    DWORD PTR [rax+0x14],0x0
  409288:	mov    rax,QWORD PTR [rbp-0x8]
  40928c:	mov    rax,QWORD PTR [rax+0x30]
  409290:	mov    rdx,QWORD PTR [rbp-0x20]
  409294:	mov    DWORD PTR [rax+0x18],edx
  409297:	mov    rax,QWORD PTR [rbp-0x8]
  40929b:	mov    rax,QWORD PTR [rax+0x30]
  40929f:	mov    WORD PTR [rax+0xe],0x4
  4092a5:	mov    rax,QWORD PTR [rbp-0x8]
  4092a9:	mov    esi,0xfffffffc
  4092ae:	mov    rdi,rax
  4092b1:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  4092b6:	mov    eax,0x0
  4092bb:	leave  
  4092bc:	ret    

00000000004092bd <flatcc_builder_start_offset_vector@@Base>:
  4092bd:	endbr64 
  4092c1:	push   rbp
  4092c2:	mov    rbp,rsp
  4092c5:	sub    rsp,0x10
  4092c9:	mov    QWORD PTR [rbp-0x8],rdi
  4092cd:	mov    rax,QWORD PTR [rbp-0x8]
  4092d1:	mov    esi,0x4
  4092d6:	mov    rdi,rax
  4092d9:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4092de:	test   eax,eax
  4092e0:	je     4092e9 <flatcc_builder_start_offset_vector@@Base+0x2c>
  4092e2:	mov    eax,0xffffffff
  4092e7:	jmp    40932b <flatcc_builder_start_offset_vector@@Base+0x6e>
  4092e9:	mov    rax,QWORD PTR [rbp-0x8]
  4092ed:	mov    rax,QWORD PTR [rax+0x30]
  4092f1:	mov    DWORD PTR [rax+0x10],0x4
  4092f8:	mov    rax,QWORD PTR [rbp-0x8]
  4092fc:	mov    rax,QWORD PTR [rax+0x30]
  409300:	mov    DWORD PTR [rax+0x14],0x0
  409307:	mov    rax,QWORD PTR [rbp-0x8]
  40930b:	mov    rax,QWORD PTR [rax+0x30]
  40930f:	mov    WORD PTR [rax+0xe],0x5
  409315:	mov    rax,QWORD PTR [rbp-0x8]
  409319:	mov    esi,0xfffffffc
  40931e:	mov    rdi,rax
  409321:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  409326:	mov    eax,0x0
  40932b:	leave  
  40932c:	ret    

000000000040932d <flatcc_builder_create_offset_vector@@Base>:
  40932d:	endbr64 
  409331:	push   rbp
  409332:	mov    rbp,rsp
  409335:	sub    rsp,0x30
  409339:	mov    QWORD PTR [rbp-0x18],rdi
  40933d:	mov    QWORD PTR [rbp-0x20],rsi
  409341:	mov    QWORD PTR [rbp-0x28],rdx
  409345:	mov    rax,QWORD PTR [rbp-0x18]
  409349:	mov    rdi,rax
  40934c:	call   4092bd <flatcc_builder_start_offset_vector@@Base>
  409351:	test   eax,eax
  409353:	je     40935c <flatcc_builder_create_offset_vector@@Base+0x2f>
  409355:	mov    eax,0x0
  40935a:	jmp    4093ac <flatcc_builder_create_offset_vector@@Base+0x7f>
  40935c:	mov    rdx,QWORD PTR [rbp-0x28]
  409360:	mov    rax,QWORD PTR [rbp-0x18]
  409364:	mov    rsi,rdx
  409367:	mov    rdi,rax
  40936a:	call   408c9c <flatcc_builder_extend_offset_vector@@Base>
  40936f:	mov    QWORD PTR [rbp-0x8],rax
  409373:	cmp    QWORD PTR [rbp-0x8],0x0
  409378:	jne    409381 <flatcc_builder_create_offset_vector@@Base+0x54>
  40937a:	mov    eax,0x0
  40937f:	jmp    4093ac <flatcc_builder_create_offset_vector@@Base+0x7f>
  409381:	mov    rax,QWORD PTR [rbp-0x28]
  409385:	lea    rdx,[rax*4+0x0]
  40938d:	mov    rcx,QWORD PTR [rbp-0x20]
  409391:	mov    rax,QWORD PTR [rbp-0x8]
  409395:	mov    rsi,rcx
  409398:	mov    rdi,rax
  40939b:	call   4031a0 <memcpy@plt>
  4093a0:	mov    rax,QWORD PTR [rbp-0x18]
  4093a4:	mov    rdi,rax
  4093a7:	call   40a8ba <flatcc_builder_end_offset_vector@@Base>
  4093ac:	leave  
  4093ad:	ret    

00000000004093ae <flatcc_builder_start_string@@Base>:
  4093ae:	endbr64 
  4093b2:	push   rbp
  4093b3:	mov    rbp,rsp
  4093b6:	sub    rsp,0x10
  4093ba:	mov    QWORD PTR [rbp-0x8],rdi
  4093be:	mov    rax,QWORD PTR [rbp-0x8]
  4093c2:	mov    esi,0x1
  4093c7:	mov    rdi,rax
  4093ca:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4093cf:	test   eax,eax
  4093d1:	je     4093da <flatcc_builder_start_string@@Base+0x2c>
  4093d3:	mov    eax,0xffffffff
  4093d8:	jmp    40941c <flatcc_builder_start_string@@Base+0x6e>
  4093da:	mov    rax,QWORD PTR [rbp-0x8]
  4093de:	mov    rax,QWORD PTR [rax+0x30]
  4093e2:	mov    DWORD PTR [rax+0x10],0x1
  4093e9:	mov    rax,QWORD PTR [rbp-0x8]
  4093ed:	mov    rax,QWORD PTR [rax+0x30]
  4093f1:	mov    DWORD PTR [rax+0x14],0x0
  4093f8:	mov    rax,QWORD PTR [rbp-0x8]
  4093fc:	mov    rax,QWORD PTR [rax+0x30]
  409400:	mov    WORD PTR [rax+0xe],0x6
  409406:	mov    rax,QWORD PTR [rbp-0x8]
  40940a:	mov    esi,0xfffffffc
  40940f:	mov    rdi,rax
  409412:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  409417:	mov    eax,0x0
  40941c:	leave  
  40941d:	ret    

000000000040941e <flatcc_builder_reserve_table@@Base>:
  40941e:	endbr64 
  409422:	push   rbp
  409423:	mov    rbp,rsp
  409426:	sub    rsp,0x10
  40942a:	mov    QWORD PTR [rbp-0x8],rdi
  40942e:	mov    DWORD PTR [rbp-0xc],esi
  409431:	cmp    DWORD PTR [rbp-0xc],0x0
  409435:	jns    409456 <flatcc_builder_reserve_table@@Base+0x38>
  409437:	lea    rcx,[rip+0xb892]        # 414cd0 <flatcc_builder_padding_base@@Base+0x930>
  40943e:	mov    edx,0x429
  409443:	lea    rsi,[rip+0xb156]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40944a:	lea    rdi,[rip+0xb3f9]        # 41484a <flatcc_builder_padding_base@@Base+0x4aa>
  409451:	call   403150 <__assert_fail@plt>
  409456:	mov    edx,DWORD PTR [rbp-0xc]
  409459:	mov    rax,QWORD PTR [rbp-0x8]
  40945d:	mov    esi,edx
  40945f:	mov    rdi,rax
  409462:	call   406dfd <flatcc_builder_default_alloc@@Base+0x5c7>
  409467:	leave  
  409468:	ret    

0000000000409469 <flatcc_builder_start_table@@Base>:
  409469:	endbr64 
  40946d:	push   rbp
  40946e:	mov    rbp,rsp
  409471:	sub    rsp,0x10
  409475:	mov    QWORD PTR [rbp-0x8],rdi
  409479:	mov    DWORD PTR [rbp-0xc],esi
  40947c:	mov    rax,QWORD PTR [rbp-0x8]
  409480:	mov    esi,0x4
  409485:	mov    rdi,rax
  409488:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40948d:	test   eax,eax
  40948f:	je     40949b <flatcc_builder_start_table@@Base+0x32>
  409491:	mov    eax,0xffffffff
  409496:	jmp    409565 <flatcc_builder_start_table@@Base+0xfc>
  40949b:	mov    rax,QWORD PTR [rbp-0x8]
  40949f:	mov    rax,QWORD PTR [rax+0x8]
  4094a3:	mov    rdx,rax
  4094a6:	mov    rax,QWORD PTR [rbp-0x8]
  4094aa:	mov    rax,QWORD PTR [rax+0x58]
  4094ae:	sub    rdx,rax
  4094b1:	mov    rax,QWORD PTR [rbp-0x8]
  4094b5:	mov    rax,QWORD PTR [rax+0x30]
  4094b9:	mov    DWORD PTR [rax+0x10],edx
  4094bc:	mov    rax,QWORD PTR [rbp-0x8]
  4094c0:	mov    rax,QWORD PTR [rax]
  4094c3:	mov    rdx,rax
  4094c6:	mov    rax,QWORD PTR [rbp-0x8]
  4094ca:	mov    rax,QWORD PTR [rax+0x88]
  4094d1:	sub    rdx,rax
  4094d4:	mov    rax,QWORD PTR [rbp-0x8]
  4094d8:	mov    rax,QWORD PTR [rax+0x30]
  4094dc:	mov    DWORD PTR [rax+0x14],edx
  4094df:	mov    rax,QWORD PTR [rbp-0x8]
  4094e3:	mov    rax,QWORD PTR [rax+0x30]
  4094e7:	mov    rdx,QWORD PTR [rbp-0x8]
  4094eb:	mov    edx,DWORD PTR [rdx+0x14]
  4094ee:	mov    DWORD PTR [rax+0x18],edx
  4094f1:	mov    rax,QWORD PTR [rbp-0x8]
  4094f5:	mov    rdx,QWORD PTR [rax+0x30]
  4094f9:	mov    rax,QWORD PTR [rbp-0x8]
  4094fd:	movzx  eax,WORD PTR [rax+0x10]
  409501:	mov    WORD PTR [rdx+0x1c],ax
  409505:	mov    rax,QWORD PTR [rbp-0x8]
  409509:	mov    DWORD PTR [rax+0x14],0x0
  409510:	mov    rax,QWORD PTR [rbp-0x8]
  409514:	mov    DWORD PTR [rax+0x14],0x2f693b52
  40951b:	mov    rax,QWORD PTR [rbp-0x8]
  40951f:	mov    WORD PTR [rax+0x10],0x0
  409525:	mov    rax,QWORD PTR [rbp-0x8]
  409529:	mov    rax,QWORD PTR [rax+0x30]
  40952d:	mov    WORD PTR [rax+0xe],0x3
  409533:	mov    edx,DWORD PTR [rbp-0xc]
  409536:	mov    rax,QWORD PTR [rbp-0x8]
  40953a:	mov    esi,edx
  40953c:	mov    rdi,rax
  40953f:	call   406dfd <flatcc_builder_default_alloc@@Base+0x5c7>
  409544:	test   eax,eax
  409546:	je     40954f <flatcc_builder_start_table@@Base+0xe6>
  409548:	mov    eax,0xffffffff
  40954d:	jmp    409565 <flatcc_builder_start_table@@Base+0xfc>
  40954f:	mov    rax,QWORD PTR [rbp-0x8]
  409553:	mov    esi,0xfffc
  409558:	mov    rdi,rax
  40955b:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  409560:	mov    eax,0x0
  409565:	leave  
  409566:	ret    

0000000000409567 <flatcc_builder_create_vtable@@Base>:
  409567:	endbr64 
  40956b:	push   rbp
  40956c:	mov    rbp,rsp
  40956f:	sub    rsp,0xd0
  409576:	mov    QWORD PTR [rbp-0xb8],rdi
  40957d:	mov    QWORD PTR [rbp-0xc0],rsi
  409584:	mov    eax,edx
  409586:	mov    WORD PTR [rbp-0xc4],ax
  40958d:	mov    rax,QWORD PTR fs:0x28
  409596:	mov    QWORD PTR [rbp-0x8],rax
  40959a:	xor    eax,eax
  40959c:	mov    QWORD PTR [rbp-0xa0],0x0
  4095a7:	mov    DWORD PTR [rbp-0x98],0x0
  4095b1:	cmp    WORD PTR [rbp-0xc4],0x0
  4095b9:	je     409622 <flatcc_builder_create_vtable@@Base+0xbb>
  4095bb:	mov    rdx,QWORD PTR [rbp-0xa0]
  4095c2:	movzx  eax,WORD PTR [rbp-0xc4]
  4095c9:	add    rax,rdx
  4095cc:	mov    QWORD PTR [rbp-0xa0],rax
  4095d3:	mov    eax,DWORD PTR [rbp-0x98]
  4095d9:	cdqe   
  4095db:	shl    rax,0x4
  4095df:	add    rax,rbp
  4095e2:	lea    rdx,[rax-0x90]
  4095e9:	mov    rax,QWORD PTR [rbp-0xc0]
  4095f0:	mov    QWORD PTR [rdx],rax
  4095f3:	mov    edx,DWORD PTR [rbp-0x98]
  4095f9:	movzx  eax,WORD PTR [rbp-0xc4]
  409600:	movsxd rdx,edx
  409603:	shl    rdx,0x4
  409607:	add    rdx,rbp
  40960a:	sub    rdx,0x88
  409611:	mov    QWORD PTR [rdx],rax
  409614:	mov    eax,DWORD PTR [rbp-0x98]
  40961a:	inc    eax
  40961c:	mov    DWORD PTR [rbp-0x98],eax
  409622:	mov    rax,QWORD PTR [rbp-0xb8]
  409629:	mov    eax,DWORD PTR [rax+0x100]
  40962f:	test   eax,eax
  409631:	jne    409673 <flatcc_builder_create_vtable@@Base+0x10c>
  409633:	mov    rax,QWORD PTR [rbp-0xb8]
  40963a:	mov    eax,DWORD PTR [rax+0x124]
  409640:	test   eax,eax
  409642:	jne    409673 <flatcc_builder_create_vtable@@Base+0x10c>
  409644:	lea    rdx,[rbp-0xa0]
  40964b:	mov    rax,QWORD PTR [rbp-0xb8]
  409652:	mov    rsi,rdx
  409655:	mov    rdi,rax
  409658:	call   407b9e <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  40965d:	mov    DWORD PTR [rbp-0xa4],eax
  409663:	cmp    DWORD PTR [rbp-0xa4],0x0
  40966a:	jne    4096a8 <flatcc_builder_create_vtable@@Base+0x141>
  40966c:	mov    eax,0x0
  409671:	jmp    4096ae <flatcc_builder_create_vtable@@Base+0x147>
  409673:	lea    rdx,[rbp-0xa0]
  40967a:	mov    rax,QWORD PTR [rbp-0xb8]
  409681:	mov    rsi,rdx
  409684:	mov    rdi,rax
  409687:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40968c:	mov    DWORD PTR [rbp-0xa4],eax
  409692:	cmp    DWORD PTR [rbp-0xa4],0x0
  409699:	jne    4096a2 <flatcc_builder_create_vtable@@Base+0x13b>
  40969b:	mov    eax,0x0
  4096a0:	jmp    4096ae <flatcc_builder_create_vtable@@Base+0x147>
  4096a2:	inc    DWORD PTR [rbp-0xa4]
  4096a8:	mov    eax,DWORD PTR [rbp-0xa4]
  4096ae:	mov    rcx,QWORD PTR [rbp-0x8]
  4096b2:	xor    rcx,QWORD PTR fs:0x28
  4096bb:	je     4096c2 <flatcc_builder_create_vtable@@Base+0x15b>
  4096bd:	call   403140 <__stack_chk_fail@plt>
  4096c2:	leave  
  4096c3:	ret    

00000000004096c4 <flatcc_builder_create_cached_vtable@@Base>:
  4096c4:	endbr64 
  4096c8:	push   rbp
  4096c9:	mov    rbp,rsp
  4096cc:	sub    rsp,0x50
  4096d0:	mov    QWORD PTR [rbp-0x38],rdi
  4096d4:	mov    QWORD PTR [rbp-0x40],rsi
  4096d8:	mov    eax,edx
  4096da:	mov    DWORD PTR [rbp-0x48],ecx
  4096dd:	mov    WORD PTR [rbp-0x44],ax
  4096e1:	mov    edx,DWORD PTR [rbp-0x48]
  4096e4:	mov    rax,QWORD PTR [rbp-0x38]
  4096e8:	mov    esi,edx
  4096ea:	mov    rdi,rax
  4096ed:	call   40700c <flatcc_builder_default_alloc@@Base+0x7d6>
  4096f2:	mov    QWORD PTR [rbp-0x18],rax
  4096f6:	cmp    QWORD PTR [rbp-0x18],0x0
  4096fb:	jne    409707 <flatcc_builder_create_cached_vtable@@Base+0x43>
  4096fd:	mov    eax,0x0
  409702:	jmp    4099a8 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  409707:	mov    rax,QWORD PTR [rbp-0x18]
  40970b:	mov    QWORD PTR [rbp-0x20],rax
  40970f:	mov    rax,QWORD PTR [rbp-0x20]
  409713:	mov    eax,DWORD PTR [rax]
  409715:	mov    DWORD PTR [rbp-0x2c],eax
  409718:	mov    QWORD PTR [rbp-0x28],0x0
  409720:	jmp    4097ff <flatcc_builder_create_cached_vtable@@Base+0x13b>
  409725:	mov    rax,QWORD PTR [rbp-0x38]
  409729:	mov    rdx,QWORD PTR [rax+0xb8]
  409730:	mov    eax,DWORD PTR [rbp-0x2c]
  409733:	add    rax,rdx
  409736:	mov    QWORD PTR [rbp-0x10],rax
  40973a:	mov    rax,QWORD PTR [rbp-0x38]
  40973e:	mov    rdx,QWORD PTR [rax+0x78]
  409742:	mov    rax,QWORD PTR [rbp-0x10]
  409746:	mov    eax,DWORD PTR [rax+0x8]
  409749:	mov    eax,eax
  40974b:	add    rax,rdx
  40974e:	mov    QWORD PTR [rbp-0x8],rax
  409752:	mov    rax,QWORD PTR [rbp-0x8]
  409756:	movzx  eax,WORD PTR [rax]
  409759:	cmp    WORD PTR [rbp-0x44],ax
  40975d:	jne    40977a <flatcc_builder_create_cached_vtable@@Base+0xb6>
  40975f:	movzx  edx,WORD PTR [rbp-0x44]
  409763:	mov    rcx,QWORD PTR [rbp-0x8]
  409767:	mov    rax,QWORD PTR [rbp-0x40]
  40976b:	mov    rsi,rcx
  40976e:	mov    rdi,rax
  409771:	call   403180 <memcmp@plt>
  409776:	test   eax,eax
  409778:	je     409792 <flatcc_builder_create_cached_vtable@@Base+0xce>
  40977a:	mov    rax,QWORD PTR [rbp-0x10]
  40977e:	add    rax,0xc
  409782:	mov    QWORD PTR [rbp-0x20],rax
  409786:	mov    rax,QWORD PTR [rbp-0x10]
  40978a:	mov    eax,DWORD PTR [rax+0xc]
  40978d:	mov    DWORD PTR [rbp-0x2c],eax
  409790:	jmp    4097ff <flatcc_builder_create_cached_vtable@@Base+0x13b>
  409792:	mov    rax,QWORD PTR [rbp-0x10]
  409796:	mov    edx,DWORD PTR [rax+0x4]
  409799:	mov    rax,QWORD PTR [rbp-0x38]
  40979d:	mov    eax,DWORD PTR [rax+0x100]
  4097a3:	cmp    edx,eax
  4097a5:	je     4097c7 <flatcc_builder_create_cached_vtable@@Base+0x103>
  4097a7:	mov    rax,QWORD PTR [rbp-0x10]
  4097ab:	mov    QWORD PTR [rbp-0x28],rax
  4097af:	mov    rax,QWORD PTR [rbp-0x10]
  4097b3:	add    rax,0xc
  4097b7:	mov    QWORD PTR [rbp-0x20],rax
  4097bb:	mov    rax,QWORD PTR [rbp-0x10]
  4097bf:	mov    eax,DWORD PTR [rax+0xc]
  4097c2:	mov    DWORD PTR [rbp-0x2c],eax
  4097c5:	jmp    4097ff <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4097c7:	mov    rax,QWORD PTR [rbp-0x20]
  4097cb:	cmp    rax,QWORD PTR [rbp-0x18]
  4097cf:	je     4097f4 <flatcc_builder_create_cached_vtable@@Base+0x130>
  4097d1:	mov    rax,QWORD PTR [rbp-0x10]
  4097d5:	mov    edx,DWORD PTR [rax+0xc]
  4097d8:	mov    rax,QWORD PTR [rbp-0x20]
  4097dc:	mov    DWORD PTR [rax],edx
  4097de:	mov    rax,QWORD PTR [rbp-0x18]
  4097e2:	mov    edx,DWORD PTR [rax]
  4097e4:	mov    rax,QWORD PTR [rbp-0x10]
  4097e8:	mov    DWORD PTR [rax+0xc],edx
  4097eb:	mov    rax,QWORD PTR [rbp-0x18]
  4097ef:	mov    edx,DWORD PTR [rbp-0x2c]
  4097f2:	mov    DWORD PTR [rax],edx
  4097f4:	mov    rax,QWORD PTR [rbp-0x10]
  4097f8:	mov    eax,DWORD PTR [rax]
  4097fa:	jmp    4099a8 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4097ff:	cmp    DWORD PTR [rbp-0x2c],0x0
  409803:	jne    409725 <flatcc_builder_create_cached_vtable@@Base+0x61>
  409809:	mov    rax,QWORD PTR [rbp-0x38]
  40980d:	mov    eax,DWORD PTR [rax+0xe4]
  409813:	mov    edx,eax
  409815:	mov    rax,QWORD PTR [rbp-0x38]
  409819:	mov    r8d,0x0
  40981f:	mov    ecx,0x10
  409824:	mov    esi,0x6
  409829:	mov    rdi,rax
  40982c:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  409831:	mov    QWORD PTR [rbp-0x10],rax
  409835:	cmp    QWORD PTR [rbp-0x10],0x0
  40983a:	jne    409846 <flatcc_builder_create_cached_vtable@@Base+0x182>
  40983c:	mov    eax,0x0
  409841:	jmp    4099a8 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  409846:	mov    rax,QWORD PTR [rbp-0x38]
  40984a:	mov    eax,DWORD PTR [rax+0xe4]
  409850:	mov    DWORD PTR [rbp-0x2c],eax
  409853:	mov    rax,QWORD PTR [rbp-0x38]
  409857:	mov    eax,DWORD PTR [rax+0xe4]
  40985d:	lea    edx,[rax+0x10]
  409860:	mov    rax,QWORD PTR [rbp-0x38]
  409864:	mov    DWORD PTR [rax+0xe4],edx
  40986a:	mov    rax,QWORD PTR [rbp-0x38]
  40986e:	mov    edx,DWORD PTR [rax+0x100]
  409874:	mov    rax,QWORD PTR [rbp-0x10]
  409878:	mov    DWORD PTR [rax+0x4],edx
  40987b:	mov    rax,QWORD PTR [rbp-0x18]
  40987f:	mov    edx,DWORD PTR [rax]
  409881:	mov    rax,QWORD PTR [rbp-0x10]
  409885:	mov    DWORD PTR [rax+0xc],edx
  409888:	mov    rax,QWORD PTR [rbp-0x18]
  40988c:	mov    edx,DWORD PTR [rbp-0x2c]
  40988f:	mov    DWORD PTR [rax],edx
  409891:	movzx  edx,WORD PTR [rbp-0x44]
  409895:	mov    rcx,QWORD PTR [rbp-0x40]
  409899:	mov    rax,QWORD PTR [rbp-0x38]
  40989d:	mov    rsi,rcx
  4098a0:	mov    rdi,rax
  4098a3:	call   409567 <flatcc_builder_create_vtable@@Base>
  4098a8:	mov    edx,eax
  4098aa:	mov    rax,QWORD PTR [rbp-0x10]
  4098ae:	mov    DWORD PTR [rax],edx
  4098b0:	mov    rax,QWORD PTR [rbp-0x10]
  4098b4:	mov    eax,DWORD PTR [rax]
  4098b6:	test   eax,eax
  4098b8:	jne    4098c4 <flatcc_builder_create_cached_vtable@@Base+0x200>
  4098ba:	mov    eax,0x0
  4098bf:	jmp    4099a8 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4098c4:	cmp    QWORD PTR [rbp-0x28],0x0
  4098c9:	je     4098de <flatcc_builder_create_cached_vtable@@Base+0x21a>
  4098cb:	mov    rax,QWORD PTR [rbp-0x28]
  4098cf:	mov    edx,DWORD PTR [rax+0x8]
  4098d2:	mov    rax,QWORD PTR [rbp-0x10]
  4098d6:	mov    DWORD PTR [rax+0x8],edx
  4098d9:	jmp    4099a2 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4098de:	mov    rax,QWORD PTR [rbp-0x38]
  4098e2:	mov    rax,QWORD PTR [rax+0x118]
  4098e9:	test   rax,rax
  4098ec:	je     409921 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4098ee:	mov    rax,QWORD PTR [rbp-0x38]
  4098f2:	mov    rdx,QWORD PTR [rax+0x118]
  4098f9:	mov    rax,QWORD PTR [rbp-0x38]
  4098fd:	mov    ecx,DWORD PTR [rax+0xe0]
  409903:	movzx  eax,WORD PTR [rbp-0x44]
  409907:	add    eax,ecx
  409909:	mov    eax,eax
  40990b:	cmp    rdx,rax
  40990e:	jae    409921 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  409910:	mov    rax,QWORD PTR [rbp-0x38]
  409914:	mov    rdi,rax
  409917:	call   407080 <flatcc_builder_flush_vtable_cache@@Base>
  40991c:	jmp    4099a2 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  409921:	movzx  edx,WORD PTR [rbp-0x44]
  409925:	mov    rax,QWORD PTR [rbp-0x38]
  409929:	mov    eax,DWORD PTR [rax+0xe0]
  40992f:	mov    esi,eax
  409931:	mov    rax,QWORD PTR [rbp-0x38]
  409935:	mov    r8d,0x0
  40993b:	mov    rcx,rdx
  40993e:	mov    rdx,rsi
  409941:	mov    esi,0x2
  409946:	mov    rdi,rax
  409949:	call   406d4c <flatcc_builder_default_alloc@@Base+0x516>
  40994e:	mov    QWORD PTR [rbp-0x8],rax
  409952:	cmp    QWORD PTR [rbp-0x8],0x0
  409957:	jne    409960 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  409959:	mov    eax,0xffffffff
  40995e:	jmp    4099a8 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  409960:	mov    rax,QWORD PTR [rbp-0x38]
  409964:	mov    edx,DWORD PTR [rax+0xe0]
  40996a:	mov    rax,QWORD PTR [rbp-0x10]
  40996e:	mov    DWORD PTR [rax+0x8],edx
  409971:	mov    rax,QWORD PTR [rbp-0x38]
  409975:	mov    edx,DWORD PTR [rax+0xe0]
  40997b:	movzx  eax,WORD PTR [rbp-0x44]
  40997f:	add    edx,eax
  409981:	mov    rax,QWORD PTR [rbp-0x38]
  409985:	mov    DWORD PTR [rax+0xe0],edx
  40998b:	movzx  edx,WORD PTR [rbp-0x44]
  40998f:	mov    rcx,QWORD PTR [rbp-0x40]
  409993:	mov    rax,QWORD PTR [rbp-0x8]
  409997:	mov    rsi,rcx
  40999a:	mov    rdi,rax
  40999d:	call   4031a0 <memcpy@plt>
  4099a2:	mov    rax,QWORD PTR [rbp-0x10]
  4099a6:	mov    eax,DWORD PTR [rax]
  4099a8:	leave  
  4099a9:	ret    

00000000004099aa <flatcc_builder_create_table@@Base>:
  4099aa:	endbr64 
  4099ae:	push   rbp
  4099af:	mov    rbp,rsp
  4099b2:	sub    rsp,0x100
  4099b9:	mov    QWORD PTR [rbp-0xd8],rdi
  4099c0:	mov    QWORD PTR [rbp-0xe0],rsi
  4099c7:	mov    QWORD PTR [rbp-0xe8],rdx
  4099ce:	mov    eax,ecx
  4099d0:	mov    QWORD PTR [rbp-0xf8],r8
  4099d7:	mov    DWORD PTR [rbp-0xf0],r9d
  4099de:	mov    WORD PTR [rbp-0xec],ax
  4099e5:	mov    rax,QWORD PTR fs:0x28
  4099ee:	mov    QWORD PTR [rbp-0x8],rax
  4099f2:	xor    eax,eax
  4099f4:	cmp    DWORD PTR [rbp-0xf0],0x0
  4099fb:	jns    409a1c <flatcc_builder_create_table@@Base+0x72>
  4099fd:	lea    rcx,[rip+0xb2ec]        # 414cf0 <flatcc_builder_padding_base@@Base+0x950>
  409a04:	mov    edx,0x4d5
  409a09:	lea    rsi,[rip+0xab90]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409a10:	lea    rdi,[rip+0xae3e]        # 414855 <flatcc_builder_padding_base@@Base+0x4b5>
  409a17:	call   403150 <__assert_fail@plt>
  409a1c:	mov    eax,DWORD PTR [rbp+0x10]
  409a1f:	and    eax,0x1
  409a22:	test   eax,eax
  409a24:	jne    409a45 <flatcc_builder_create_table@@Base+0x9b>
  409a26:	lea    rcx,[rip+0xb2c3]        # 414cf0 <flatcc_builder_padding_base@@Base+0x950>
  409a2d:	mov    edx,0x4db
  409a32:	lea    rsi,[rip+0xab67]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409a39:	lea    rdi,[rip+0xae27]        # 414867 <flatcc_builder_padding_base@@Base+0x4c7>
  409a40:	call   403150 <__assert_fail@plt>
  409a45:	lea    rax,[rbp-0xec]
  409a4c:	mov    esi,0x4
  409a51:	mov    rdi,rax
  409a54:	call   4074d3 <flatcc_builder_clear@@Base+0xca>
  409a59:	movzx  eax,WORD PTR [rbp-0xec]
  409a60:	movzx  edx,ax
  409a63:	mov    rax,QWORD PTR [rbp-0xd8]
  409a6a:	mov    esi,edx
  409a6c:	mov    rdi,rax
  409a6f:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  409a74:	movzx  eax,WORD PTR [rbp-0xec]
  409a7b:	movzx  edx,ax
  409a7e:	mov    rax,QWORD PTR [rbp-0xe8]
  409a85:	mov    ecx,eax
  409a87:	mov    rax,QWORD PTR [rbp-0xd8]
  409a8e:	mov    esi,ecx
  409a90:	mov    rdi,rax
  409a93:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  409a98:	mov    DWORD PTR [rbp-0xbc],eax
  409a9e:	mov    rax,QWORD PTR [rbp-0xd8]
  409aa5:	mov    eax,DWORD PTR [rax+0xf0]
  409aab:	mov    edx,eax
  409aad:	mov    rax,QWORD PTR [rbp-0xe8]
  409ab4:	mov    ecx,eax
  409ab6:	mov    eax,DWORD PTR [rbp-0xbc]
  409abc:	add    eax,ecx
  409abe:	sub    edx,eax
  409ac0:	mov    eax,edx
  409ac2:	sub    eax,0x4
  409ac5:	mov    DWORD PTR [rbp-0xb8],eax
  409acb:	mov    eax,DWORD PTR [rbp+0x10]
  409ace:	dec    eax
  409ad0:	mov    DWORD PTR [rbp-0xb4],eax
  409ad6:	mov    eax,DWORD PTR [rbp-0xb8]
  409adc:	sub    eax,DWORD PTR [rbp-0xb4]
  409ae2:	mov    DWORD PTR [rbp-0xb0],eax
  409ae8:	mov    eax,DWORD PTR [rbp-0xb8]
  409aee:	sub    eax,DWORD PTR [rbp-0xb0]
  409af4:	cmp    DWORD PTR [rbp-0xb4],eax
  409afa:	je     409b06 <flatcc_builder_create_table@@Base+0x15c>
  409afc:	mov    eax,0xffffffff
  409b01:	jmp    409d26 <flatcc_builder_create_table@@Base+0x37c>
  409b06:	mov    eax,DWORD PTR [rbp-0xb0]
  409b0c:	mov    edi,eax
  409b0e:	call   406776 <main@@Base+0x11a>
  409b13:	mov    DWORD PTR [rbp-0xc4],eax
  409b19:	mov    DWORD PTR [rbp-0xc0],0x0
  409b23:	jmp    409bad <flatcc_builder_create_table@@Base+0x203>
  409b28:	mov    eax,DWORD PTR [rbp-0xc0]
  409b2e:	cdqe   
  409b30:	lea    rdx,[rax+rax*1]
  409b34:	mov    rax,QWORD PTR [rbp-0xf8]
  409b3b:	add    rax,rdx
  409b3e:	movzx  eax,WORD PTR [rax]
  409b41:	movzx  edx,ax
  409b44:	mov    rax,QWORD PTR [rbp-0xe0]
  409b4b:	add    rax,rdx
  409b4e:	mov    QWORD PTR [rbp-0xa8],rax
  409b55:	mov    rax,QWORD PTR [rbp-0xa8]
  409b5c:	mov    eax,DWORD PTR [rax]
  409b5e:	sub    eax,DWORD PTR [rbp-0xb8]
  409b64:	mov    edx,eax
  409b66:	mov    eax,DWORD PTR [rbp-0xc0]
  409b6c:	cdqe   
  409b6e:	lea    rcx,[rax+rax*1]
  409b72:	mov    rax,QWORD PTR [rbp-0xf8]
  409b79:	add    rax,rcx
  409b7c:	movzx  eax,WORD PTR [rax]
  409b7f:	movzx  eax,ax
  409b82:	sub    edx,eax
  409b84:	mov    eax,edx
  409b86:	sub    eax,0x4
  409b89:	mov    DWORD PTR [rbp-0xac],eax
  409b8f:	mov    eax,DWORD PTR [rbp-0xac]
  409b95:	mov    edi,eax
  409b97:	call   406776 <main@@Base+0x11a>
  409b9c:	mov    edx,eax
  409b9e:	mov    rax,QWORD PTR [rbp-0xa8]
  409ba5:	mov    DWORD PTR [rax],edx
  409ba7:	inc    DWORD PTR [rbp-0xc0]
  409bad:	mov    eax,DWORD PTR [rbp-0xc0]
  409bb3:	cmp    eax,DWORD PTR [rbp-0xf0]
  409bb9:	jl     409b28 <flatcc_builder_create_table@@Base+0x17e>
  409bbf:	mov    QWORD PTR [rbp-0xa0],0x0
  409bca:	mov    DWORD PTR [rbp-0x98],0x0
  409bd4:	mov    rax,QWORD PTR [rbp-0xa0]
  409bdb:	add    rax,0x4
  409bdf:	mov    QWORD PTR [rbp-0xa0],rax
  409be6:	mov    eax,DWORD PTR [rbp-0x98]
  409bec:	cdqe   
  409bee:	shl    rax,0x4
  409bf2:	add    rax,rbp
  409bf5:	lea    rdx,[rax-0x90]
  409bfc:	lea    rax,[rbp-0xc4]
  409c03:	mov    QWORD PTR [rdx],rax
  409c06:	mov    eax,DWORD PTR [rbp-0x98]
  409c0c:	cdqe   
  409c0e:	shl    rax,0x4
  409c12:	add    rax,rbp
  409c15:	sub    rax,0x88
  409c1b:	mov    QWORD PTR [rax],0x4
  409c22:	mov    eax,DWORD PTR [rbp-0x98]
  409c28:	inc    eax
  409c2a:	mov    DWORD PTR [rbp-0x98],eax
  409c30:	cmp    QWORD PTR [rbp-0xe8],0x0
  409c38:	je     409ca0 <flatcc_builder_create_table@@Base+0x2f6>
  409c3a:	mov    rdx,QWORD PTR [rbp-0xa0]
  409c41:	mov    rax,QWORD PTR [rbp-0xe8]
  409c48:	add    rax,rdx
  409c4b:	mov    QWORD PTR [rbp-0xa0],rax
  409c52:	mov    eax,DWORD PTR [rbp-0x98]
  409c58:	cdqe   
  409c5a:	shl    rax,0x4
  409c5e:	add    rax,rbp
  409c61:	lea    rdx,[rax-0x90]
  409c68:	mov    rax,QWORD PTR [rbp-0xe0]
  409c6f:	mov    QWORD PTR [rdx],rax
  409c72:	mov    eax,DWORD PTR [rbp-0x98]
  409c78:	cdqe   
  409c7a:	shl    rax,0x4
  409c7e:	add    rax,rbp
  409c81:	lea    rdx,[rax-0x88]
  409c88:	mov    rax,QWORD PTR [rbp-0xe8]
  409c8f:	mov    QWORD PTR [rdx],rax
  409c92:	mov    eax,DWORD PTR [rbp-0x98]
  409c98:	inc    eax
  409c9a:	mov    DWORD PTR [rbp-0x98],eax
  409ca0:	cmp    DWORD PTR [rbp-0xbc],0x0
  409ca7:	je     409d0d <flatcc_builder_create_table@@Base+0x363>
  409ca9:	mov    rdx,QWORD PTR [rbp-0xa0]
  409cb0:	mov    eax,DWORD PTR [rbp-0xbc]
  409cb6:	add    rax,rdx
  409cb9:	mov    QWORD PTR [rbp-0xa0],rax
  409cc0:	mov    eax,DWORD PTR [rbp-0x98]
  409cc6:	cdqe   
  409cc8:	shl    rax,0x4
  409ccc:	add    rax,rbp
  409ccf:	sub    rax,0x90
  409cd5:	mov    rdx,0x4143a0
  409cdc:	mov    QWORD PTR [rax],rdx
  409cdf:	mov    edx,DWORD PTR [rbp-0x98]
  409ce5:	mov    eax,DWORD PTR [rbp-0xbc]
  409ceb:	movsxd rdx,edx
  409cee:	shl    rdx,0x4
  409cf2:	add    rdx,rbp
  409cf5:	sub    rdx,0x88
  409cfc:	mov    QWORD PTR [rdx],rax
  409cff:	mov    eax,DWORD PTR [rbp-0x98]
  409d05:	inc    eax
  409d07:	mov    DWORD PTR [rbp-0x98],eax
  409d0d:	lea    rdx,[rbp-0xa0]
  409d14:	mov    rax,QWORD PTR [rbp-0xd8]
  409d1b:	mov    rsi,rdx
  409d1e:	mov    rdi,rax
  409d21:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  409d26:	mov    rsi,QWORD PTR [rbp-0x8]
  409d2a:	xor    rsi,QWORD PTR fs:0x28
  409d33:	je     409d3a <flatcc_builder_create_table@@Base+0x390>
  409d35:	call   403140 <__stack_chk_fail@plt>
  409d3a:	leave  
  409d3b:	ret    

0000000000409d3c <flatcc_builder_check_required_field@@Base>:
  409d3c:	endbr64 
  409d40:	push   rbp
  409d41:	mov    rbp,rsp
  409d44:	sub    rsp,0x10
  409d48:	mov    QWORD PTR [rbp-0x8],rdi
  409d4c:	mov    eax,esi
  409d4e:	mov    WORD PTR [rbp-0xc],ax
  409d52:	mov    rax,QWORD PTR [rbp-0x8]
  409d56:	mov    rax,QWORD PTR [rax+0x30]
  409d5a:	movzx  eax,WORD PTR [rax+0xe]
  409d5e:	cmp    ax,0x3
  409d62:	je     409d83 <flatcc_builder_check_required_field@@Base+0x47>
  409d64:	lea    rcx,[rip+0xafb5]        # 414d20 <flatcc_builder_padding_base@@Base+0x980>
  409d6b:	mov    edx,0x4f8
  409d70:	lea    rsi,[rip+0xa829]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409d77:	lea    rdi,[rip+0xaafa]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409d7e:	call   403150 <__assert_fail@plt>
  409d83:	mov    rax,QWORD PTR [rbp-0x8]
  409d87:	movzx  eax,WORD PTR [rax+0x10]
  409d8b:	cmp    WORD PTR [rbp-0xc],ax
  409d8f:	jae    409db2 <flatcc_builder_check_required_field@@Base+0x76>
  409d91:	mov    rax,QWORD PTR [rbp-0x8]
  409d95:	mov    rax,QWORD PTR [rax+0x8]
  409d99:	movzx  edx,WORD PTR [rbp-0xc]
  409d9d:	add    rdx,rdx
  409da0:	add    rax,rdx
  409da3:	movzx  eax,WORD PTR [rax]
  409da6:	test   ax,ax
  409da9:	je     409db2 <flatcc_builder_check_required_field@@Base+0x76>
  409dab:	mov    eax,0x1
  409db0:	jmp    409db7 <flatcc_builder_check_required_field@@Base+0x7b>
  409db2:	mov    eax,0x0
  409db7:	leave  
  409db8:	ret    

0000000000409db9 <flatcc_builder_check_union_field@@Base>:
  409db9:	endbr64 
  409dbd:	push   rbp
  409dbe:	mov    rbp,rsp
  409dc1:	sub    rsp,0x10
  409dc5:	mov    QWORD PTR [rbp-0x8],rdi
  409dc9:	mov    eax,esi
  409dcb:	mov    WORD PTR [rbp-0xc],ax
  409dcf:	mov    rax,QWORD PTR [rbp-0x8]
  409dd3:	mov    rax,QWORD PTR [rax+0x30]
  409dd7:	movzx  eax,WORD PTR [rax+0xe]
  409ddb:	cmp    ax,0x3
  409ddf:	je     409e00 <flatcc_builder_check_union_field@@Base+0x47>
  409de1:	lea    rcx,[rip+0xaf78]        # 414d60 <flatcc_builder_padding_base@@Base+0x9c0>
  409de8:	mov    edx,0x4ff
  409ded:	lea    rsi,[rip+0xa7ac]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409df4:	lea    rdi,[rip+0xaa7d]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409dfb:	call   403150 <__assert_fail@plt>
  409e00:	cmp    WORD PTR [rbp-0xc],0x0
  409e05:	je     409e15 <flatcc_builder_check_union_field@@Base+0x5c>
  409e07:	mov    rax,QWORD PTR [rbp-0x8]
  409e0b:	movzx  eax,WORD PTR [rax+0x10]
  409e0f:	cmp    WORD PTR [rbp-0xc],ax
  409e13:	jb     409e1f <flatcc_builder_check_union_field@@Base+0x66>
  409e15:	mov    eax,0x0
  409e1a:	jmp    409ec9 <flatcc_builder_check_union_field@@Base+0x110>
  409e1f:	mov    rax,QWORD PTR [rbp-0x8]
  409e23:	mov    rax,QWORD PTR [rax+0x8]
  409e27:	movzx  edx,WORD PTR [rbp-0xc]
  409e2b:	add    rdx,rdx
  409e2e:	sub    rdx,0x2
  409e32:	add    rax,rdx
  409e35:	movzx  eax,WORD PTR [rax]
  409e38:	test   ax,ax
  409e3b:	jne    409e5d <flatcc_builder_check_union_field@@Base+0xa4>
  409e3d:	mov    rax,QWORD PTR [rbp-0x8]
  409e41:	mov    rax,QWORD PTR [rax+0x8]
  409e45:	movzx  edx,WORD PTR [rbp-0xc]
  409e49:	add    rdx,rdx
  409e4c:	add    rax,rdx
  409e4f:	movzx  eax,WORD PTR [rax]
  409e52:	test   ax,ax
  409e55:	sete   al
  409e58:	movzx  eax,al
  409e5b:	jmp    409ec9 <flatcc_builder_check_union_field@@Base+0x110>
  409e5d:	mov    rax,QWORD PTR [rbp-0x8]
  409e61:	mov    rdx,QWORD PTR [rax+0x18]
  409e65:	mov    rax,QWORD PTR [rbp-0x8]
  409e69:	mov    rax,QWORD PTR [rax+0x8]
  409e6d:	movzx  ecx,WORD PTR [rbp-0xc]
  409e71:	add    rcx,rcx
  409e74:	sub    rcx,0x2
  409e78:	add    rax,rcx
  409e7b:	movzx  eax,WORD PTR [rax]
  409e7e:	movzx  eax,ax
  409e81:	add    rax,rdx
  409e84:	movzx  eax,BYTE PTR [rax]
  409e87:	test   al,al
  409e89:	je     409eab <flatcc_builder_check_union_field@@Base+0xf2>
  409e8b:	mov    rax,QWORD PTR [rbp-0x8]
  409e8f:	mov    rax,QWORD PTR [rax+0x8]
  409e93:	movzx  edx,WORD PTR [rbp-0xc]
  409e97:	add    rdx,rdx
  409e9a:	add    rax,rdx
  409e9d:	movzx  eax,WORD PTR [rax]
  409ea0:	test   ax,ax
  409ea3:	setne  al
  409ea6:	movzx  eax,al
  409ea9:	jmp    409ec9 <flatcc_builder_check_union_field@@Base+0x110>
  409eab:	mov    rax,QWORD PTR [rbp-0x8]
  409eaf:	mov    rax,QWORD PTR [rax+0x8]
  409eb3:	movzx  edx,WORD PTR [rbp-0xc]
  409eb7:	add    rdx,rdx
  409eba:	add    rax,rdx
  409ebd:	movzx  eax,WORD PTR [rax]
  409ec0:	test   ax,ax
  409ec3:	sete   al
  409ec6:	movzx  eax,al
  409ec9:	leave  
  409eca:	ret    

0000000000409ecb <flatcc_builder_check_required@@Base>:
  409ecb:	endbr64 
  409ecf:	push   rbp
  409ed0:	mov    rbp,rsp
  409ed3:	sub    rsp,0x30
  409ed7:	mov    QWORD PTR [rbp-0x18],rdi
  409edb:	mov    QWORD PTR [rbp-0x20],rsi
  409edf:	mov    DWORD PTR [rbp-0x24],edx
  409ee2:	mov    rax,QWORD PTR [rbp-0x18]
  409ee6:	mov    rax,QWORD PTR [rax+0x30]
  409eea:	movzx  eax,WORD PTR [rax+0xe]
  409eee:	cmp    ax,0x3
  409ef2:	je     409f13 <flatcc_builder_check_required@@Base+0x48>
  409ef4:	lea    rcx,[rip+0xae95]        # 414d90 <flatcc_builder_padding_base@@Base+0x9f0>
  409efb:	mov    edx,0x511
  409f00:	lea    rsi,[rip+0xa699]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409f07:	lea    rdi,[rip+0xa96a]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409f0e:	call   403150 <__assert_fail@plt>
  409f13:	mov    rax,QWORD PTR [rbp-0x18]
  409f17:	movzx  eax,WORD PTR [rax+0x10]
  409f1b:	movzx  eax,ax
  409f1e:	cmp    DWORD PTR [rbp-0x24],eax
  409f21:	jle    409f2a <flatcc_builder_check_required@@Base+0x5f>
  409f23:	mov    eax,0x0
  409f28:	jmp    409f76 <flatcc_builder_check_required@@Base+0xab>
  409f2a:	mov    DWORD PTR [rbp-0x4],0x0
  409f31:	jmp    409f69 <flatcc_builder_check_required@@Base+0x9e>
  409f33:	mov    rax,QWORD PTR [rbp-0x18]
  409f37:	mov    rdx,QWORD PTR [rax+0x8]
  409f3b:	mov    eax,DWORD PTR [rbp-0x4]
  409f3e:	cdqe   
  409f40:	lea    rcx,[rax+rax*1]
  409f44:	mov    rax,QWORD PTR [rbp-0x20]
  409f48:	add    rax,rcx
  409f4b:	movzx  eax,WORD PTR [rax]
  409f4e:	movzx  eax,ax
  409f51:	add    rax,rax
  409f54:	add    rax,rdx
  409f57:	movzx  eax,WORD PTR [rax]
  409f5a:	test   ax,ax
  409f5d:	jne    409f66 <flatcc_builder_check_required@@Base+0x9b>
  409f5f:	mov    eax,0x0
  409f64:	jmp    409f76 <flatcc_builder_check_required@@Base+0xab>
  409f66:	inc    DWORD PTR [rbp-0x4]
  409f69:	mov    eax,DWORD PTR [rbp-0x4]
  409f6c:	cmp    eax,DWORD PTR [rbp-0x24]
  409f6f:	jl     409f33 <flatcc_builder_check_required@@Base+0x68>
  409f71:	mov    eax,0x1
  409f76:	leave  
  409f77:	ret    

0000000000409f78 <flatcc_builder_end_table@@Base>:
  409f78:	endbr64 
  409f7c:	push   rbp
  409f7d:	mov    rbp,rsp
  409f80:	sub    rsp,0x30
  409f84:	mov    QWORD PTR [rbp-0x28],rdi
  409f88:	mov    rax,QWORD PTR [rbp-0x28]
  409f8c:	mov    rax,QWORD PTR [rax+0x30]
  409f90:	movzx  eax,WORD PTR [rax+0xe]
  409f94:	cmp    ax,0x3
  409f98:	je     409fb9 <flatcc_builder_end_table@@Base+0x41>
  409f9a:	lea    rcx,[rip+0xae0f]        # 414db0 <flatcc_builder_padding_base@@Base+0xa10>
  409fa1:	mov    edx,0x525
  409fa6:	lea    rsi,[rip+0xa5f3]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409fad:	lea    rdi,[rip+0xa8c4]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409fb4:	call   403150 <__assert_fail@plt>
  409fb9:	mov    rax,QWORD PTR [rbp-0x28]
  409fbd:	mov    rax,QWORD PTR [rax+0x8]
  409fc1:	sub    rax,0x4
  409fc5:	mov    QWORD PTR [rbp-0x10],rax
  409fc9:	mov    rax,QWORD PTR [rbp-0x28]
  409fcd:	movzx  eax,WORD PTR [rax+0x10]
  409fd1:	movzx  eax,ax
  409fd4:	add    eax,0x2
  409fd7:	cdqe   
  409fd9:	add    eax,eax
  409fdb:	mov    WORD PTR [rbp-0x1e],ax
  409fdf:	mov    rdx,QWORD PTR [rbp-0x10]
  409fe3:	movzx  eax,WORD PTR [rbp-0x1e]
  409fe7:	mov    WORD PTR [rdx],ax
  409fea:	mov    rax,QWORD PTR [rbp-0x28]
  409fee:	mov    eax,DWORD PTR [rax+0x20]
  409ff1:	mov    ecx,eax
  409ff3:	mov    rax,QWORD PTR [rbp-0x10]
  409ff7:	lea    rdx,[rax+0x2]
  409ffb:	lea    eax,[rcx+0x4]
  409ffe:	mov    WORD PTR [rdx],ax
  40a001:	mov    rax,QWORD PTR [rbp-0x10]
  40a005:	movzx  eax,WORD PTR [rax]
  40a008:	movzx  edx,ax
  40a00b:	mov    rax,QWORD PTR [rbp-0x28]
  40a00f:	mov    eax,DWORD PTR [rax+0x14]
  40a012:	xor    eax,edx
  40a014:	imul   edx,eax,0x9e3779b1
  40a01a:	mov    rax,QWORD PTR [rbp-0x10]
  40a01e:	add    rax,0x2
  40a022:	movzx  eax,WORD PTR [rax]
  40a025:	movzx  eax,ax
  40a028:	xor    eax,edx
  40a02a:	imul   edx,eax,0x9e3779b1
  40a030:	mov    rax,QWORD PTR [rbp-0x28]
  40a034:	mov    DWORD PTR [rax+0x14],edx
  40a037:	mov    rax,QWORD PTR [rbp-0x28]
  40a03b:	mov    ecx,DWORD PTR [rax+0x14]
  40a03e:	movzx  edx,WORD PTR [rbp-0x1e]
  40a042:	mov    rsi,QWORD PTR [rbp-0x10]
  40a046:	mov    rax,QWORD PTR [rbp-0x28]
  40a04a:	mov    rdi,rax
  40a04d:	call   4096c4 <flatcc_builder_create_cached_vtable@@Base>
  40a052:	mov    DWORD PTR [rbp-0x1c],eax
  40a055:	cmp    DWORD PTR [rbp-0x1c],0x0
  40a059:	jne    40a065 <flatcc_builder_end_table@@Base+0xed>
  40a05b:	mov    eax,0x0
  40a060:	jmp    40a17c <flatcc_builder_end_table@@Base+0x204>
  40a065:	movzx  edx,WORD PTR [rbp-0x1e]
  40a069:	mov    rax,QWORD PTR [rbp-0x10]
  40a06d:	mov    esi,0x0
  40a072:	mov    rdi,rax
  40a075:	call   403160 <memset@plt>
  40a07a:	mov    rax,QWORD PTR [rbp-0x28]
  40a07e:	mov    rdx,QWORD PTR [rax+0x88]
  40a085:	mov    rax,QWORD PTR [rbp-0x28]
  40a089:	mov    rax,QWORD PTR [rax+0x30]
  40a08d:	mov    eax,DWORD PTR [rax+0x14]
  40a090:	mov    eax,eax
  40a092:	add    rax,rdx
  40a095:	mov    QWORD PTR [rbp-0x8],rax
  40a099:	mov    rax,QWORD PTR [rbp-0x28]
  40a09d:	mov    rax,QWORD PTR [rax]
  40a0a0:	sub    rax,QWORD PTR [rbp-0x8]
  40a0a4:	sar    rax,1
  40a0a7:	mov    DWORD PTR [rbp-0x18],eax
  40a0aa:	mov    rax,QWORD PTR [rbp-0x28]
  40a0ae:	movzx  eax,WORD PTR [rax+0xea]
  40a0b5:	movzx  edx,ax
  40a0b8:	mov    rax,QWORD PTR [rbp-0x28]
  40a0bc:	mov    eax,DWORD PTR [rax+0x20]
  40a0bf:	mov    r10d,eax
  40a0c2:	mov    rax,QWORD PTR [rbp-0x28]
  40a0c6:	mov    rsi,QWORD PTR [rax+0x18]
  40a0ca:	mov    r8d,DWORD PTR [rbp-0x18]
  40a0ce:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0d2:	mov    rax,QWORD PTR [rbp-0x28]
  40a0d6:	sub    rsp,0x8
  40a0da:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a0dd:	push   rcx
  40a0de:	mov    r9d,r8d
  40a0e1:	mov    r8,rdi
  40a0e4:	mov    ecx,edx
  40a0e6:	mov    rdx,r10
  40a0e9:	mov    rdi,rax
  40a0ec:	call   4099aa <flatcc_builder_create_table@@Base>
  40a0f1:	add    rsp,0x10
  40a0f5:	mov    DWORD PTR [rbp-0x14],eax
  40a0f8:	cmp    DWORD PTR [rbp-0x14],0x0
  40a0fc:	jne    40a105 <flatcc_builder_end_table@@Base+0x18d>
  40a0fe:	mov    eax,0x0
  40a103:	jmp    40a17c <flatcc_builder_end_table@@Base+0x204>
  40a105:	mov    rax,QWORD PTR [rbp-0x28]
  40a109:	mov    rax,QWORD PTR [rax+0x30]
  40a10d:	mov    edx,DWORD PTR [rax+0x18]
  40a110:	mov    rax,QWORD PTR [rbp-0x28]
  40a114:	mov    DWORD PTR [rax+0x14],edx
  40a117:	mov    rax,QWORD PTR [rbp-0x28]
  40a11b:	mov    rax,QWORD PTR [rax+0x30]
  40a11f:	movzx  eax,WORD PTR [rax+0x1c]
  40a123:	mov    rdx,QWORD PTR [rbp-0x28]
  40a127:	mov    WORD PTR [rdx+0x10],ax
  40a12b:	mov    rax,QWORD PTR [rbp-0x28]
  40a12f:	mov    rdx,QWORD PTR [rax+0x58]
  40a133:	mov    rax,QWORD PTR [rbp-0x28]
  40a137:	mov    rax,QWORD PTR [rax+0x30]
  40a13b:	mov    eax,DWORD PTR [rax+0x10]
  40a13e:	mov    eax,eax
  40a140:	add    rdx,rax
  40a143:	mov    rax,QWORD PTR [rbp-0x28]
  40a147:	mov    QWORD PTR [rax+0x8],rdx
  40a14b:	mov    rax,QWORD PTR [rbp-0x28]
  40a14f:	mov    rdx,QWORD PTR [rax+0x88]
  40a156:	mov    rax,QWORD PTR [rbp-0x28]
  40a15a:	mov    rax,QWORD PTR [rax+0x30]
  40a15e:	mov    eax,DWORD PTR [rax+0x14]
  40a161:	mov    eax,eax
  40a163:	add    rdx,rax
  40a166:	mov    rax,QWORD PTR [rbp-0x28]
  40a16a:	mov    QWORD PTR [rax],rdx
  40a16d:	mov    rax,QWORD PTR [rbp-0x28]
  40a171:	mov    rdi,rax
  40a174:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a179:	mov    eax,DWORD PTR [rbp-0x14]
  40a17c:	leave  
  40a17d:	ret    

000000000040a17e <flatcc_builder_create_vector@@Base>:
  40a17e:	endbr64 
  40a182:	push   rbp
  40a183:	mov    rbp,rsp
  40a186:	sub    rsp,0xe0
  40a18d:	mov    QWORD PTR [rbp-0xb8],rdi
  40a194:	mov    QWORD PTR [rbp-0xc0],rsi
  40a19b:	mov    QWORD PTR [rbp-0xc8],rdx
  40a1a2:	mov    QWORD PTR [rbp-0xd0],rcx
  40a1a9:	mov    eax,r8d
  40a1ac:	mov    QWORD PTR [rbp-0xe0],r9
  40a1b3:	mov    WORD PTR [rbp-0xd4],ax
  40a1ba:	mov    rax,QWORD PTR fs:0x28
  40a1c3:	mov    QWORD PTR [rbp-0x8],rax
  40a1c7:	xor    eax,eax
  40a1c9:	mov    rax,QWORD PTR [rbp-0xc8]
  40a1d0:	cmp    rax,QWORD PTR [rbp-0xe0]
  40a1d7:	jbe    40a212 <flatcc_builder_create_vector@@Base+0x94>
  40a1d9:	mov    rax,QWORD PTR [rbp-0xc8]
  40a1e0:	cmp    rax,QWORD PTR [rbp-0xe0]
  40a1e7:	jbe    40a208 <flatcc_builder_create_vector@@Base+0x8a>
  40a1e9:	lea    rcx,[rip+0xabe0]        # 414dd0 <flatcc_builder_padding_base@@Base+0xa30>
  40a1f0:	mov    edx,0x555
  40a1f5:	lea    rsi,[rip+0xa3a4]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a1fc:	lea    rdi,[rip+0xa6a0]        # 4148a3 <flatcc_builder_padding_base@@Base+0x503>
  40a203:	call   403150 <__assert_fail@plt>
  40a208:	mov    eax,0x0
  40a20d:	jmp    40a3fa <flatcc_builder_create_vector@@Base+0x27c>
  40a212:	lea    rax,[rbp-0xd4]
  40a219:	mov    esi,0x4
  40a21e:	mov    rdi,rax
  40a221:	call   4074d3 <flatcc_builder_clear@@Base+0xca>
  40a226:	movzx  eax,WORD PTR [rbp-0xd4]
  40a22d:	movzx  edx,ax
  40a230:	mov    rax,QWORD PTR [rbp-0xb8]
  40a237:	mov    esi,edx
  40a239:	mov    rdi,rax
  40a23c:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  40a241:	mov    rax,QWORD PTR [rbp-0xc8]
  40a248:	mov    edx,eax
  40a24a:	mov    rax,QWORD PTR [rbp-0xd0]
  40a251:	imul   eax,edx
  40a254:	mov    DWORD PTR [rbp-0xa8],eax
  40a25a:	mov    rax,QWORD PTR [rbp-0xc8]
  40a261:	mov    edi,eax
  40a263:	call   406776 <main@@Base+0x11a>
  40a268:	mov    DWORD PTR [rbp-0xac],eax
  40a26e:	movzx  eax,WORD PTR [rbp-0xd4]
  40a275:	movzx  edx,ax
  40a278:	mov    ecx,DWORD PTR [rbp-0xa8]
  40a27e:	mov    rax,QWORD PTR [rbp-0xb8]
  40a285:	mov    esi,ecx
  40a287:	mov    rdi,rax
  40a28a:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40a28f:	mov    DWORD PTR [rbp-0xa4],eax
  40a295:	mov    QWORD PTR [rbp-0xa0],0x0
  40a2a0:	mov    DWORD PTR [rbp-0x98],0x0
  40a2aa:	mov    rax,QWORD PTR [rbp-0xa0]
  40a2b1:	add    rax,0x4
  40a2b5:	mov    QWORD PTR [rbp-0xa0],rax
  40a2bc:	mov    eax,DWORD PTR [rbp-0x98]
  40a2c2:	cdqe   
  40a2c4:	shl    rax,0x4
  40a2c8:	add    rax,rbp
  40a2cb:	lea    rdx,[rax-0x90]
  40a2d2:	lea    rax,[rbp-0xac]
  40a2d9:	mov    QWORD PTR [rdx],rax
  40a2dc:	mov    eax,DWORD PTR [rbp-0x98]
  40a2e2:	cdqe   
  40a2e4:	shl    rax,0x4
  40a2e8:	add    rax,rbp
  40a2eb:	sub    rax,0x88
  40a2f1:	mov    QWORD PTR [rax],0x4
  40a2f8:	mov    eax,DWORD PTR [rbp-0x98]
  40a2fe:	inc    eax
  40a300:	mov    DWORD PTR [rbp-0x98],eax
  40a306:	cmp    DWORD PTR [rbp-0xa8],0x0
  40a30d:	je     40a374 <flatcc_builder_create_vector@@Base+0x1f6>
  40a30f:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a316:	mov    eax,DWORD PTR [rbp-0xa8]
  40a31c:	add    rax,rdx
  40a31f:	mov    QWORD PTR [rbp-0xa0],rax
  40a326:	mov    eax,DWORD PTR [rbp-0x98]
  40a32c:	cdqe   
  40a32e:	shl    rax,0x4
  40a332:	add    rax,rbp
  40a335:	lea    rdx,[rax-0x90]
  40a33c:	mov    rax,QWORD PTR [rbp-0xc0]
  40a343:	mov    QWORD PTR [rdx],rax
  40a346:	mov    edx,DWORD PTR [rbp-0x98]
  40a34c:	mov    eax,DWORD PTR [rbp-0xa8]
  40a352:	movsxd rdx,edx
  40a355:	shl    rdx,0x4
  40a359:	add    rdx,rbp
  40a35c:	sub    rdx,0x88
  40a363:	mov    QWORD PTR [rdx],rax
  40a366:	mov    eax,DWORD PTR [rbp-0x98]
  40a36c:	inc    eax
  40a36e:	mov    DWORD PTR [rbp-0x98],eax
  40a374:	cmp    DWORD PTR [rbp-0xa4],0x0
  40a37b:	je     40a3e1 <flatcc_builder_create_vector@@Base+0x263>
  40a37d:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a384:	mov    eax,DWORD PTR [rbp-0xa4]
  40a38a:	add    rax,rdx
  40a38d:	mov    QWORD PTR [rbp-0xa0],rax
  40a394:	mov    eax,DWORD PTR [rbp-0x98]
  40a39a:	cdqe   
  40a39c:	shl    rax,0x4
  40a3a0:	add    rax,rbp
  40a3a3:	sub    rax,0x90
  40a3a9:	mov    rdx,0x4143a0
  40a3b0:	mov    QWORD PTR [rax],rdx
  40a3b3:	mov    edx,DWORD PTR [rbp-0x98]
  40a3b9:	mov    eax,DWORD PTR [rbp-0xa4]
  40a3bf:	movsxd rdx,edx
  40a3c2:	shl    rdx,0x4
  40a3c6:	add    rdx,rbp
  40a3c9:	sub    rdx,0x88
  40a3d0:	mov    QWORD PTR [rdx],rax
  40a3d3:	mov    eax,DWORD PTR [rbp-0x98]
  40a3d9:	inc    eax
  40a3db:	mov    DWORD PTR [rbp-0x98],eax
  40a3e1:	lea    rdx,[rbp-0xa0]
  40a3e8:	mov    rax,QWORD PTR [rbp-0xb8]
  40a3ef:	mov    rsi,rdx
  40a3f2:	mov    rdi,rax
  40a3f5:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40a3fa:	mov    rcx,QWORD PTR [rbp-0x8]
  40a3fe:	xor    rcx,QWORD PTR fs:0x28
  40a407:	je     40a40e <flatcc_builder_create_vector@@Base+0x290>
  40a409:	call   403140 <__stack_chk_fail@plt>
  40a40e:	leave  
  40a40f:	ret    

000000000040a410 <flatcc_builder_end_vector@@Base>:
  40a410:	endbr64 
  40a414:	push   rbp
  40a415:	mov    rbp,rsp
  40a418:	sub    rsp,0x20
  40a41c:	mov    QWORD PTR [rbp-0x18],rdi
  40a420:	mov    rax,QWORD PTR [rbp-0x18]
  40a424:	mov    rax,QWORD PTR [rax+0x30]
  40a428:	movzx  eax,WORD PTR [rax+0xe]
  40a42c:	cmp    ax,0x4
  40a430:	je     40a451 <flatcc_builder_end_vector@@Base+0x41>
  40a432:	lea    rcx,[rip+0xa9b7]        # 414df0 <flatcc_builder_padding_base@@Base+0xa50>
  40a439:	mov    edx,0x578
  40a43e:	lea    rsi,[rip+0xa15b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a445:	lea    rdi,[rip+0xa29c]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  40a44c:	call   403150 <__assert_fail@plt>
  40a451:	mov    rax,QWORD PTR [rbp-0x18]
  40a455:	mov    rax,QWORD PTR [rax+0x30]
  40a459:	mov    eax,DWORD PTR [rax+0x18]
  40a45c:	mov    r8d,eax
  40a45f:	mov    rax,QWORD PTR [rbp-0x18]
  40a463:	movzx  eax,WORD PTR [rax+0xea]
  40a46a:	movzx  edx,ax
  40a46d:	mov    rax,QWORD PTR [rbp-0x18]
  40a471:	mov    rax,QWORD PTR [rax+0x30]
  40a475:	mov    eax,DWORD PTR [rax+0x10]
  40a478:	mov    ecx,eax
  40a47a:	mov    rax,QWORD PTR [rbp-0x18]
  40a47e:	mov    rax,QWORD PTR [rax+0x30]
  40a482:	mov    eax,DWORD PTR [rax+0x14]
  40a485:	mov    edi,eax
  40a487:	mov    rax,QWORD PTR [rbp-0x18]
  40a48b:	mov    rsi,QWORD PTR [rax+0x18]
  40a48f:	mov    rax,QWORD PTR [rbp-0x18]
  40a493:	mov    r9,r8
  40a496:	mov    r8d,edx
  40a499:	mov    rdx,rdi
  40a49c:	mov    rdi,rax
  40a49f:	call   40a17e <flatcc_builder_create_vector@@Base>
  40a4a4:	mov    DWORD PTR [rbp-0x4],eax
  40a4a7:	cmp    DWORD PTR [rbp-0x4],0x0
  40a4ab:	jne    40a4b4 <flatcc_builder_end_vector@@Base+0xa4>
  40a4ad:	mov    eax,0x0
  40a4b2:	jmp    40a4c3 <flatcc_builder_end_vector@@Base+0xb3>
  40a4b4:	mov    rax,QWORD PTR [rbp-0x18]
  40a4b8:	mov    rdi,rax
  40a4bb:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a4c0:	mov    eax,DWORD PTR [rbp-0x4]
  40a4c3:	leave  
  40a4c4:	ret    

000000000040a4c5 <flatcc_builder_vector_count@@Base>:
  40a4c5:	endbr64 
  40a4c9:	push   rbp
  40a4ca:	mov    rbp,rsp
  40a4cd:	mov    QWORD PTR [rbp-0x8],rdi
  40a4d1:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d5:	mov    rax,QWORD PTR [rax+0x30]
  40a4d9:	mov    eax,DWORD PTR [rax+0x14]
  40a4dc:	mov    eax,eax
  40a4de:	pop    rbp
  40a4df:	ret    

000000000040a4e0 <flatcc_builder_vector_edit@@Base>:
  40a4e0:	endbr64 
  40a4e4:	push   rbp
  40a4e5:	mov    rbp,rsp
  40a4e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ec:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f0:	mov    rax,QWORD PTR [rax+0x18]
  40a4f4:	pop    rbp
  40a4f5:	ret    
  40a4f6:	endbr64 
  40a4fa:	push   rbp
  40a4fb:	mov    rbp,rsp
  40a4fe:	sub    rsp,0xe0
  40a505:	mov    QWORD PTR [rbp-0xc8],rdi
  40a50c:	mov    QWORD PTR [rbp-0xd0],rsi
  40a513:	mov    QWORD PTR [rbp-0xd8],rdx
  40a51a:	mov    QWORD PTR [rbp-0xe0],rcx
  40a521:	mov    rax,QWORD PTR fs:0x28
  40a52a:	mov    QWORD PTR [rbp-0x8],rax
  40a52e:	xor    eax,eax
  40a530:	mov    rax,QWORD PTR [rbp-0xd8]
  40a537:	cmp    eax,0x3fffffff
  40a53c:	jbe    40a548 <flatcc_builder_vector_edit@@Base+0x68>
  40a53e:	mov    eax,0x0
  40a543:	jmp    40a871 <flatcc_builder_vector_edit@@Base+0x391>
  40a548:	mov    rax,QWORD PTR [rbp-0xc8]
  40a54f:	mov    esi,0x4
  40a554:	mov    rdi,rax
  40a557:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  40a55c:	mov    rax,QWORD PTR [rbp-0xd8]
  40a563:	shl    eax,0x2
  40a566:	mov    DWORD PTR [rbp-0xb0],eax
  40a56c:	mov    rax,QWORD PTR [rbp-0xd8]
  40a573:	mov    edi,eax
  40a575:	call   406776 <main@@Base+0x11a>
  40a57a:	mov    DWORD PTR [rbp-0xb8],eax
  40a580:	mov    ecx,DWORD PTR [rbp-0xb0]
  40a586:	mov    rax,QWORD PTR [rbp-0xc8]
  40a58d:	mov    edx,0x4
  40a592:	mov    esi,ecx
  40a594:	mov    rdi,rax
  40a597:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40a59c:	mov    DWORD PTR [rbp-0xac],eax
  40a5a2:	mov    QWORD PTR [rbp-0xa0],0x0
  40a5ad:	mov    DWORD PTR [rbp-0x98],0x0
  40a5b7:	mov    rax,QWORD PTR [rbp-0xa0]
  40a5be:	add    rax,0x4
  40a5c2:	mov    QWORD PTR [rbp-0xa0],rax
  40a5c9:	mov    eax,DWORD PTR [rbp-0x98]
  40a5cf:	cdqe   
  40a5d1:	shl    rax,0x4
  40a5d5:	add    rax,rbp
  40a5d8:	lea    rdx,[rax-0x90]
  40a5df:	lea    rax,[rbp-0xb8]
  40a5e6:	mov    QWORD PTR [rdx],rax
  40a5e9:	mov    eax,DWORD PTR [rbp-0x98]
  40a5ef:	cdqe   
  40a5f1:	shl    rax,0x4
  40a5f5:	add    rax,rbp
  40a5f8:	sub    rax,0x88
  40a5fe:	mov    QWORD PTR [rax],0x4
  40a605:	mov    eax,DWORD PTR [rbp-0x98]
  40a60b:	inc    eax
  40a60d:	mov    DWORD PTR [rbp-0x98],eax
  40a613:	cmp    DWORD PTR [rbp-0xb0],0x0
  40a61a:	je     40a681 <flatcc_builder_vector_edit@@Base+0x1a1>
  40a61c:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a623:	mov    eax,DWORD PTR [rbp-0xb0]
  40a629:	add    rax,rdx
  40a62c:	mov    QWORD PTR [rbp-0xa0],rax
  40a633:	mov    eax,DWORD PTR [rbp-0x98]
  40a639:	cdqe   
  40a63b:	shl    rax,0x4
  40a63f:	add    rax,rbp
  40a642:	lea    rdx,[rax-0x90]
  40a649:	mov    rax,QWORD PTR [rbp-0xd0]
  40a650:	mov    QWORD PTR [rdx],rax
  40a653:	mov    edx,DWORD PTR [rbp-0x98]
  40a659:	mov    eax,DWORD PTR [rbp-0xb0]
  40a65f:	movsxd rdx,edx
  40a662:	shl    rdx,0x4
  40a666:	add    rdx,rbp
  40a669:	sub    rdx,0x88
  40a670:	mov    QWORD PTR [rdx],rax
  40a673:	mov    eax,DWORD PTR [rbp-0x98]
  40a679:	inc    eax
  40a67b:	mov    DWORD PTR [rbp-0x98],eax
  40a681:	cmp    DWORD PTR [rbp-0xac],0x0
  40a688:	je     40a6ee <flatcc_builder_vector_edit@@Base+0x20e>
  40a68a:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a691:	mov    eax,DWORD PTR [rbp-0xac]
  40a697:	add    rax,rdx
  40a69a:	mov    QWORD PTR [rbp-0xa0],rax
  40a6a1:	mov    eax,DWORD PTR [rbp-0x98]
  40a6a7:	cdqe   
  40a6a9:	shl    rax,0x4
  40a6ad:	add    rax,rbp
  40a6b0:	sub    rax,0x90
  40a6b6:	mov    rdx,0x4143a0
  40a6bd:	mov    QWORD PTR [rax],rdx
  40a6c0:	mov    edx,DWORD PTR [rbp-0x98]
  40a6c6:	mov    eax,DWORD PTR [rbp-0xac]
  40a6cc:	movsxd rdx,edx
  40a6cf:	shl    rdx,0x4
  40a6d3:	add    rdx,rbp
  40a6d6:	sub    rdx,0x88
  40a6dd:	mov    QWORD PTR [rdx],rax
  40a6e0:	mov    eax,DWORD PTR [rbp-0x98]
  40a6e6:	inc    eax
  40a6e8:	mov    DWORD PTR [rbp-0x98],eax
  40a6ee:	mov    rax,QWORD PTR [rbp-0xc8]
  40a6f5:	mov    eax,DWORD PTR [rax+0xf0]
  40a6fb:	mov    edx,eax
  40a6fd:	mov    rax,QWORD PTR [rbp-0xa0]
  40a704:	sub    edx,eax
  40a706:	mov    eax,edx
  40a708:	mov    DWORD PTR [rbp-0xa8],eax
  40a70e:	mov    DWORD PTR [rbp-0xb4],0x0
  40a718:	jmp    40a845 <flatcc_builder_vector_edit@@Base+0x365>
  40a71d:	mov    eax,DWORD PTR [rbp-0xb4]
  40a723:	lea    rdx,[rax*4+0x0]
  40a72b:	mov    rax,QWORD PTR [rbp-0xd0]
  40a732:	add    rax,rdx
  40a735:	mov    eax,DWORD PTR [rax]
  40a737:	test   eax,eax
  40a739:	je     40a7e0 <flatcc_builder_vector_edit@@Base+0x300>
  40a73f:	mov    eax,DWORD PTR [rbp-0xb4]
  40a745:	lea    rdx,[rax*4+0x0]
  40a74d:	mov    rax,QWORD PTR [rbp-0xd0]
  40a754:	add    rax,rdx
  40a757:	mov    eax,DWORD PTR [rax]
  40a759:	sub    eax,DWORD PTR [rbp-0xa8]
  40a75f:	mov    edx,DWORD PTR [rbp-0xb4]
  40a765:	shl    edx,0x2
  40a768:	sub    eax,edx
  40a76a:	sub    eax,0x4
  40a76d:	mov    DWORD PTR [rbp-0xa4],eax
  40a773:	mov    eax,DWORD PTR [rbp-0xa4]
  40a779:	mov    edi,eax
  40a77b:	call   406776 <main@@Base+0x11a>
  40a780:	mov    edx,eax
  40a782:	mov    eax,DWORD PTR [rbp-0xb4]
  40a788:	lea    rcx,[rax*4+0x0]
  40a790:	mov    rax,QWORD PTR [rbp-0xd0]
  40a797:	add    rax,rcx
  40a79a:	mov    DWORD PTR [rax],edx
  40a79c:	cmp    QWORD PTR [rbp-0xe0],0x0
  40a7a4:	je     40a83f <flatcc_builder_vector_edit@@Base+0x35f>
  40a7aa:	mov    edx,DWORD PTR [rbp-0xb4]
  40a7b0:	mov    rax,QWORD PTR [rbp-0xe0]
  40a7b7:	add    rax,rdx
  40a7ba:	movzx  eax,BYTE PTR [rax]
  40a7bd:	test   al,al
  40a7bf:	jne    40a83f <flatcc_builder_vector_edit@@Base+0x35f>
  40a7c1:	lea    rcx,[rip+0xa648]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a7c8:	mov    edx,0x5b1
  40a7cd:	lea    rsi,[rip+0x9dcc]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a7d4:	lea    rdi,[rip+0xa0db]        # 4148b6 <flatcc_builder_padding_base@@Base+0x516>
  40a7db:	call   403150 <__assert_fail@plt>
  40a7e0:	cmp    QWORD PTR [rbp-0xe0],0x0
  40a7e8:	je     40a820 <flatcc_builder_vector_edit@@Base+0x340>
  40a7ea:	mov    edx,DWORD PTR [rbp-0xb4]
  40a7f0:	mov    rax,QWORD PTR [rbp-0xe0]
  40a7f7:	add    rax,rdx
  40a7fa:	movzx  eax,BYTE PTR [rax]
  40a7fd:	test   al,al
  40a7ff:	je     40a83f <flatcc_builder_vector_edit@@Base+0x35f>
  40a801:	lea    rcx,[rip+0xa608]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a808:	mov    edx,0x5b5
  40a80d:	lea    rsi,[rip+0x9d8c]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a814:	lea    rdi,[rip+0xa0a9]        # 4148c4 <flatcc_builder_padding_base@@Base+0x524>
  40a81b:	call   403150 <__assert_fail@plt>
  40a820:	lea    rcx,[rip+0xa5e9]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a827:	mov    edx,0x5b7
  40a82c:	lea    rsi,[rip+0x9d6d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a833:	lea    rdi,[rip+0x9dc6]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40a83a:	call   403150 <__assert_fail@plt>
  40a83f:	inc    DWORD PTR [rbp-0xb4]
  40a845:	mov    rax,QWORD PTR [rbp-0xd8]
  40a84c:	cmp    DWORD PTR [rbp-0xb4],eax
  40a852:	jb     40a71d <flatcc_builder_vector_edit@@Base+0x23d>
  40a858:	lea    rdx,[rbp-0xa0]
  40a85f:	mov    rax,QWORD PTR [rbp-0xc8]
  40a866:	mov    rsi,rdx
  40a869:	mov    rdi,rax
  40a86c:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40a871:	mov    rsi,QWORD PTR [rbp-0x8]
  40a875:	xor    rsi,QWORD PTR fs:0x28
  40a87e:	je     40a885 <flatcc_builder_vector_edit@@Base+0x3a5>
  40a880:	call   403140 <__stack_chk_fail@plt>
  40a885:	leave  
  40a886:	ret    

000000000040a887 <flatcc_builder_create_offset_vector_direct@@Base>:
  40a887:	endbr64 
  40a88b:	push   rbp
  40a88c:	mov    rbp,rsp
  40a88f:	sub    rsp,0x20
  40a893:	mov    QWORD PTR [rbp-0x8],rdi
  40a897:	mov    QWORD PTR [rbp-0x10],rsi
  40a89b:	mov    QWORD PTR [rbp-0x18],rdx
  40a89f:	mov    rdx,QWORD PTR [rbp-0x18]
  40a8a3:	mov    rsi,QWORD PTR [rbp-0x10]
  40a8a7:	mov    rax,QWORD PTR [rbp-0x8]
  40a8ab:	mov    ecx,0x0
  40a8b0:	mov    rdi,rax
  40a8b3:	call   40a4f6 <flatcc_builder_vector_edit@@Base+0x16>
  40a8b8:	leave  
  40a8b9:	ret    

000000000040a8ba <flatcc_builder_end_offset_vector@@Base>:
  40a8ba:	endbr64 
  40a8be:	push   rbp
  40a8bf:	mov    rbp,rsp
  40a8c2:	sub    rsp,0x20
  40a8c6:	mov    QWORD PTR [rbp-0x18],rdi
  40a8ca:	mov    rax,QWORD PTR [rbp-0x18]
  40a8ce:	mov    rax,QWORD PTR [rax+0x30]
  40a8d2:	movzx  eax,WORD PTR [rax+0xe]
  40a8d6:	cmp    ax,0x5
  40a8da:	je     40a8fb <flatcc_builder_end_offset_vector@@Base+0x41>
  40a8dc:	lea    rcx,[rip+0xa55d]        # 414e40 <flatcc_builder_padding_base@@Base+0xaa0>
  40a8e3:	mov    edx,0x5c8
  40a8e8:	lea    rsi,[rip+0x9cb1]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a8ef:	lea    rdi,[rip+0x9e62]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  40a8f6:	call   403150 <__assert_fail@plt>
  40a8fb:	mov    rax,QWORD PTR [rbp-0x18]
  40a8ff:	mov    rax,QWORD PTR [rax+0x30]
  40a903:	mov    eax,DWORD PTR [rax+0x14]
  40a906:	mov    edx,eax
  40a908:	mov    rax,QWORD PTR [rbp-0x18]
  40a90c:	mov    rcx,QWORD PTR [rax+0x18]
  40a910:	mov    rax,QWORD PTR [rbp-0x18]
  40a914:	mov    rsi,rcx
  40a917:	mov    rdi,rax
  40a91a:	call   40a887 <flatcc_builder_create_offset_vector_direct@@Base>
  40a91f:	mov    DWORD PTR [rbp-0x4],eax
  40a922:	cmp    DWORD PTR [rbp-0x4],0x0
  40a926:	jne    40a92f <flatcc_builder_end_offset_vector@@Base+0x75>
  40a928:	mov    eax,0x0
  40a92d:	jmp    40a93e <flatcc_builder_end_offset_vector@@Base+0x84>
  40a92f:	mov    rax,QWORD PTR [rbp-0x18]
  40a933:	mov    rdi,rax
  40a936:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a93b:	mov    eax,DWORD PTR [rbp-0x4]
  40a93e:	leave  
  40a93f:	ret    

000000000040a940 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  40a940:	endbr64 
  40a944:	push   rbp
  40a945:	mov    rbp,rsp
  40a948:	sub    rsp,0x20
  40a94c:	mov    QWORD PTR [rbp-0x18],rdi
  40a950:	mov    QWORD PTR [rbp-0x20],rsi
  40a954:	mov    rax,QWORD PTR [rbp-0x18]
  40a958:	mov    rax,QWORD PTR [rax+0x30]
  40a95c:	movzx  eax,WORD PTR [rax+0xe]
  40a960:	cmp    ax,0x5
  40a964:	je     40a985 <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  40a966:	lea    rcx,[rip+0xa513]        # 414e80 <flatcc_builder_padding_base@@Base+0xae0>
  40a96d:	mov    edx,0x5d5
  40a972:	lea    rsi,[rip+0x9c27]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a979:	lea    rdi,[rip+0x9dd8]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  40a980:	call   403150 <__assert_fail@plt>
  40a985:	mov    rax,QWORD PTR [rbp-0x18]
  40a989:	mov    rax,QWORD PTR [rax+0x30]
  40a98d:	mov    eax,DWORD PTR [rax+0x14]
  40a990:	mov    edi,eax
  40a992:	mov    rax,QWORD PTR [rbp-0x18]
  40a996:	mov    rsi,QWORD PTR [rax+0x18]
  40a99a:	mov    rdx,QWORD PTR [rbp-0x20]
  40a99e:	mov    rax,QWORD PTR [rbp-0x18]
  40a9a2:	mov    rcx,rdx
  40a9a5:	mov    rdx,rdi
  40a9a8:	mov    rdi,rax
  40a9ab:	call   40a4f6 <flatcc_builder_vector_edit@@Base+0x16>
  40a9b0:	mov    DWORD PTR [rbp-0x4],eax
  40a9b3:	cmp    DWORD PTR [rbp-0x4],0x0
  40a9b7:	jne    40a9c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  40a9b9:	mov    eax,0x0
  40a9be:	jmp    40a9cf <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  40a9c0:	mov    rax,QWORD PTR [rbp-0x18]
  40a9c4:	mov    rdi,rax
  40a9c7:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a9cc:	mov    eax,DWORD PTR [rbp-0x4]
  40a9cf:	leave  
  40a9d0:	ret    

000000000040a9d1 <flatcc_builder_offset_vector_edit@@Base>:
  40a9d1:	endbr64 
  40a9d5:	push   rbp
  40a9d6:	mov    rbp,rsp
  40a9d9:	mov    QWORD PTR [rbp-0x8],rdi
  40a9dd:	mov    rax,QWORD PTR [rbp-0x8]
  40a9e1:	mov    rax,QWORD PTR [rax+0x18]
  40a9e5:	pop    rbp
  40a9e6:	ret    

000000000040a9e7 <flatcc_builder_offset_vector_count@@Base>:
  40a9e7:	endbr64 
  40a9eb:	push   rbp
  40a9ec:	mov    rbp,rsp
  40a9ef:	mov    QWORD PTR [rbp-0x8],rdi
  40a9f3:	mov    rax,QWORD PTR [rbp-0x8]
  40a9f7:	mov    rax,QWORD PTR [rax+0x30]
  40a9fb:	mov    eax,DWORD PTR [rax+0x14]
  40a9fe:	mov    eax,eax
  40aa00:	pop    rbp
  40aa01:	ret    

000000000040aa02 <flatcc_builder_table_add_union@@Base>:
  40aa02:	endbr64 
  40aa06:	push   rbp
  40aa07:	mov    rbp,rsp
  40aa0a:	sub    rsp,0x30
  40aa0e:	mov    QWORD PTR [rbp-0x18],rdi
  40aa12:	mov    DWORD PTR [rbp-0x1c],esi
  40aa15:	mov    QWORD PTR [rbp-0x24],rdx
  40aa19:	mov    rax,QWORD PTR [rbp-0x18]
  40aa1d:	mov    rax,QWORD PTR [rax+0x30]
  40aa21:	movzx  eax,WORD PTR [rax+0xe]
  40aa25:	cmp    ax,0x3
  40aa29:	je     40aa4a <flatcc_builder_table_add_union@@Base+0x48>
  40aa2b:	lea    rcx,[rip+0xa47e]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40aa32:	mov    edx,0x5ee
  40aa37:	lea    rsi,[rip+0x9b62]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40aa3e:	lea    rdi,[rip+0x9e33]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40aa45:	call   403150 <__assert_fail@plt>
  40aa4a:	movzx  eax,BYTE PTR [rbp-0x24]
  40aa4e:	test   al,al
  40aa50:	jne    40aa91 <flatcc_builder_table_add_union@@Base+0x8f>
  40aa52:	mov    eax,DWORD PTR [rbp-0x20]
  40aa55:	test   eax,eax
  40aa57:	je     40aa91 <flatcc_builder_table_add_union@@Base+0x8f>
  40aa59:	movzx  eax,BYTE PTR [rbp-0x24]
  40aa5d:	test   al,al
  40aa5f:	jne    40aa87 <flatcc_builder_table_add_union@@Base+0x85>
  40aa61:	mov    eax,DWORD PTR [rbp-0x20]
  40aa64:	test   eax,eax
  40aa66:	je     40aa87 <flatcc_builder_table_add_union@@Base+0x85>
  40aa68:	lea    rcx,[rip+0xa441]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40aa6f:	mov    edx,0x5ef
  40aa74:	lea    rsi,[rip+0x9b25]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40aa7b:	lea    rdi,[rip+0x9e56]        # 4148d8 <flatcc_builder_padding_base@@Base+0x538>
  40aa82:	call   403150 <__assert_fail@plt>
  40aa87:	mov    eax,0xffffffff
  40aa8c:	jmp    40ab57 <flatcc_builder_table_add_union@@Base+0x155>
  40aa91:	mov    eax,DWORD PTR [rbp-0x20]
  40aa94:	test   eax,eax
  40aa96:	je     40aaea <flatcc_builder_table_add_union@@Base+0xe8>
  40aa98:	mov    edx,DWORD PTR [rbp-0x1c]
  40aa9b:	mov    rax,QWORD PTR [rbp-0x18]
  40aa9f:	mov    esi,edx
  40aaa1:	mov    rdi,rax
  40aaa4:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  40aaa9:	mov    QWORD PTR [rbp-0x10],rax
  40aaad:	cmp    QWORD PTR [rbp-0x10],0x0
  40aab2:	jne    40aae1 <flatcc_builder_table_add_union@@Base+0xdf>
  40aab4:	cmp    QWORD PTR [rbp-0x10],0x0
  40aab9:	jne    40aada <flatcc_builder_table_add_union@@Base+0xd8>
  40aabb:	lea    rcx,[rip+0xa3ee]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40aac2:	mov    edx,0x5f2
  40aac7:	lea    rsi,[rip+0x9ad2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40aace:	lea    rdi,[rip+0x9e25]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40aad5:	call   403150 <__assert_fail@plt>
  40aada:	mov    eax,0xffffffff
  40aadf:	jmp    40ab57 <flatcc_builder_table_add_union@@Base+0x155>
  40aae1:	mov    edx,DWORD PTR [rbp-0x20]
  40aae4:	mov    rax,QWORD PTR [rbp-0x10]
  40aae8:	mov    DWORD PTR [rax],edx
  40aaea:	mov    eax,DWORD PTR [rbp-0x1c]
  40aaed:	lea    esi,[rax-0x1]
  40aaf0:	mov    rax,QWORD PTR [rbp-0x18]
  40aaf4:	mov    ecx,0x1
  40aaf9:	mov    edx,0x1
  40aafe:	mov    rdi,rax
  40ab01:	call   40b619 <flatcc_builder_table_add@@Base>
  40ab06:	mov    QWORD PTR [rbp-0x8],rax
  40ab0a:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab0f:	jne    40ab3e <flatcc_builder_table_add_union@@Base+0x13c>
  40ab11:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab16:	jne    40ab37 <flatcc_builder_table_add_union@@Base+0x135>
  40ab18:	lea    rcx,[rip+0xa391]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40ab1f:	mov    edx,0x5f6
  40ab24:	lea    rsi,[rip+0x9a75]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ab2b:	lea    rdi,[rip+0x9dd2]        # 414904 <flatcc_builder_padding_base@@Base+0x564>
  40ab32:	call   403150 <__assert_fail@plt>
  40ab37:	mov    eax,0xffffffff
  40ab3c:	jmp    40ab57 <flatcc_builder_table_add_union@@Base+0x155>
  40ab3e:	movzx  eax,BYTE PTR [rbp-0x24]
  40ab42:	movzx  eax,al
  40ab45:	mov    edi,eax
  40ab47:	call   406782 <main@@Base+0x126>
  40ab4c:	mov    rdx,QWORD PTR [rbp-0x8]
  40ab50:	mov    BYTE PTR [rdx],al
  40ab52:	mov    eax,0x0
  40ab57:	leave  
  40ab58:	ret    

000000000040ab59 <flatcc_builder_table_add_union_vector@@Base>:
  40ab59:	endbr64 
  40ab5d:	push   rbp
  40ab5e:	mov    rbp,rsp
  40ab61:	sub    rsp,0x30
  40ab65:	mov    QWORD PTR [rbp-0x18],rdi
  40ab69:	mov    DWORD PTR [rbp-0x1c],esi
  40ab6c:	mov    QWORD PTR [rbp-0x24],rdx
  40ab70:	mov    rax,QWORD PTR [rbp-0x18]
  40ab74:	mov    rax,QWORD PTR [rax+0x30]
  40ab78:	movzx  eax,WORD PTR [rax+0xe]
  40ab7c:	cmp    ax,0x3
  40ab80:	je     40aba1 <flatcc_builder_table_add_union_vector@@Base+0x48>
  40ab82:	lea    rcx,[rip+0xa357]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40ab89:	mov    edx,0x600
  40ab8e:	lea    rsi,[rip+0x9a0b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ab95:	lea    rdi,[rip+0x9cdc]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40ab9c:	call   403150 <__assert_fail@plt>
  40aba1:	mov    eax,DWORD PTR [rbp-0x24]
  40aba4:	test   eax,eax
  40aba6:	sete   dl
  40aba9:	mov    eax,DWORD PTR [rbp-0x20]
  40abac:	test   eax,eax
  40abae:	sete   al
  40abb1:	xor    eax,edx
  40abb3:	test   al,al
  40abb5:	je     40abf6 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  40abb7:	mov    eax,DWORD PTR [rbp-0x24]
  40abba:	test   eax,eax
  40abbc:	setne  dl
  40abbf:	mov    eax,DWORD PTR [rbp-0x20]
  40abc2:	test   eax,eax
  40abc4:	sete   al
  40abc7:	xor    eax,edx
  40abc9:	test   al,al
  40abcb:	jne    40abec <flatcc_builder_table_add_union_vector@@Base+0x93>
  40abcd:	lea    rcx,[rip+0xa30c]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40abd4:	mov    edx,0x601
  40abd9:	lea    rsi,[rip+0x99c0]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40abe0:	lea    rdi,[rip+0x9d29]        # 414910 <flatcc_builder_padding_base@@Base+0x570>
  40abe7:	call   403150 <__assert_fail@plt>
  40abec:	mov    eax,0xffffffff
  40abf1:	jmp    40acad <flatcc_builder_table_add_union_vector@@Base+0x154>
  40abf6:	mov    eax,DWORD PTR [rbp-0x24]
  40abf9:	test   eax,eax
  40abfb:	je     40aca8 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  40ac01:	mov    eax,DWORD PTR [rbp-0x1c]
  40ac04:	lea    edx,[rax-0x1]
  40ac07:	mov    rax,QWORD PTR [rbp-0x18]
  40ac0b:	mov    esi,edx
  40ac0d:	mov    rdi,rax
  40ac10:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  40ac15:	mov    QWORD PTR [rbp-0x8],rax
  40ac19:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac1e:	jne    40ac4d <flatcc_builder_table_add_union_vector@@Base+0xf4>
  40ac20:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac25:	jne    40ac46 <flatcc_builder_table_add_union_vector@@Base+0xed>
  40ac27:	lea    rcx,[rip+0xa2b2]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40ac2e:	mov    edx,0x604
  40ac33:	lea    rsi,[rip+0x9966]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ac3a:	lea    rdi,[rip+0x9cb9]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40ac41:	call   403150 <__assert_fail@plt>
  40ac46:	mov    eax,0xffffffff
  40ac4b:	jmp    40acad <flatcc_builder_table_add_union_vector@@Base+0x154>
  40ac4d:	mov    edx,DWORD PTR [rbp-0x24]
  40ac50:	mov    rax,QWORD PTR [rbp-0x8]
  40ac54:	mov    DWORD PTR [rax],edx
  40ac56:	mov    edx,DWORD PTR [rbp-0x1c]
  40ac59:	mov    rax,QWORD PTR [rbp-0x18]
  40ac5d:	mov    esi,edx
  40ac5f:	mov    rdi,rax
  40ac62:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  40ac67:	mov    QWORD PTR [rbp-0x8],rax
  40ac6b:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac70:	jne    40ac9f <flatcc_builder_table_add_union_vector@@Base+0x146>
  40ac72:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac77:	jne    40ac98 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  40ac79:	lea    rcx,[rip+0xa260]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40ac80:	mov    edx,0x608
  40ac85:	lea    rsi,[rip+0x9914]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ac8c:	lea    rdi,[rip+0x9c67]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40ac93:	call   403150 <__assert_fail@plt>
  40ac98:	mov    eax,0xffffffff
  40ac9d:	jmp    40acad <flatcc_builder_table_add_union_vector@@Base+0x154>
  40ac9f:	mov    edx,DWORD PTR [rbp-0x20]
  40aca2:	mov    rax,QWORD PTR [rbp-0x8]
  40aca6:	mov    DWORD PTR [rax],edx
  40aca8:	mov    eax,0x0
  40acad:	leave  
  40acae:	ret    

000000000040acaf <flatcc_builder_create_union_vector@@Base>:
  40acaf:	endbr64 
  40acb3:	push   rbp
  40acb4:	mov    rbp,rsp
  40acb7:	sub    rsp,0x40
  40acbb:	mov    QWORD PTR [rbp-0x28],rdi
  40acbf:	mov    QWORD PTR [rbp-0x30],rsi
  40acc3:	mov    QWORD PTR [rbp-0x38],rdx
  40acc7:	mov    DWORD PTR [rbp-0x8],0x0
  40acce:	mov    DWORD PTR [rbp-0x4],0x0
  40acd5:	mov    rax,QWORD PTR [rbp-0x28]
  40acd9:	mov    rdi,rax
  40acdc:	call   4092bd <flatcc_builder_start_offset_vector@@Base>
  40ace1:	test   eax,eax
  40ace3:	je     40acee <flatcc_builder_create_union_vector@@Base+0x3f>
  40ace5:	mov    rax,QWORD PTR [rbp-0x8]
  40ace9:	jmp    40add9 <flatcc_builder_create_union_vector@@Base+0x12a>
  40acee:	mov    rdx,QWORD PTR [rbp-0x38]
  40acf2:	mov    rax,QWORD PTR [rbp-0x28]
  40acf6:	mov    rsi,rdx
  40acf9:	mov    rdi,rax
  40acfc:	call   408c9c <flatcc_builder_extend_offset_vector@@Base>
  40ad01:	test   rax,rax
  40ad04:	jne    40ad0f <flatcc_builder_create_union_vector@@Base+0x60>
  40ad06:	mov    rax,QWORD PTR [rbp-0x8]
  40ad0a:	jmp    40add9 <flatcc_builder_create_union_vector@@Base+0x12a>
  40ad0f:	mov    rax,QWORD PTR [rbp-0x38]
  40ad13:	mov    edx,eax
  40ad15:	mov    rax,QWORD PTR [rbp-0x28]
  40ad19:	mov    esi,edx
  40ad1b:	mov    rdi,rax
  40ad1e:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  40ad23:	mov    QWORD PTR [rbp-0x18],rax
  40ad27:	cmp    QWORD PTR [rbp-0x18],0x0
  40ad2c:	jne    40ad37 <flatcc_builder_create_union_vector@@Base+0x88>
  40ad2e:	mov    rax,QWORD PTR [rbp-0x8]
  40ad32:	jmp    40add9 <flatcc_builder_create_union_vector@@Base+0x12a>
  40ad37:	mov    rax,QWORD PTR [rbp-0x28]
  40ad3b:	mov    rdi,rax
  40ad3e:	call   40a9d1 <flatcc_builder_offset_vector_edit@@Base>
  40ad43:	mov    QWORD PTR [rbp-0x10],rax
  40ad47:	mov    QWORD PTR [rbp-0x20],0x0
  40ad4f:	jmp    40ada3 <flatcc_builder_create_union_vector@@Base+0xf4>
  40ad51:	mov    rax,QWORD PTR [rbp-0x20]
  40ad55:	lea    rdx,[rax*8+0x0]
  40ad5d:	mov    rax,QWORD PTR [rbp-0x30]
  40ad61:	add    rax,rdx
  40ad64:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad68:	mov    rdx,QWORD PTR [rbp-0x20]
  40ad6c:	add    rdx,rcx
  40ad6f:	movzx  eax,BYTE PTR [rax]
  40ad72:	mov    BYTE PTR [rdx],al
  40ad74:	mov    rax,QWORD PTR [rbp-0x20]
  40ad78:	lea    rdx,[rax*8+0x0]
  40ad80:	mov    rax,QWORD PTR [rbp-0x30]
  40ad84:	add    rax,rdx
  40ad87:	mov    rdx,QWORD PTR [rbp-0x20]
  40ad8b:	lea    rcx,[rdx*4+0x0]
  40ad93:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad97:	add    rdx,rcx
  40ad9a:	mov    eax,DWORD PTR [rax+0x4]
  40ad9d:	mov    DWORD PTR [rdx],eax
  40ad9f:	inc    QWORD PTR [rbp-0x20]
  40ada3:	mov    rax,QWORD PTR [rbp-0x20]
  40ada7:	cmp    rax,QWORD PTR [rbp-0x38]
  40adab:	jb     40ad51 <flatcc_builder_create_union_vector@@Base+0xa2>
  40adad:	mov    rcx,QWORD PTR [rbp-0x38]
  40adb1:	mov    rdx,QWORD PTR [rbp-0x10]
  40adb5:	mov    rsi,QWORD PTR [rbp-0x18]
  40adb9:	mov    rax,QWORD PTR [rbp-0x28]
  40adbd:	mov    rdi,rax
  40adc0:	call   40addb <flatcc_builder_create_union_vector_direct@@Base>
  40adc5:	mov    QWORD PTR [rbp-0x8],rax
  40adc9:	mov    rax,QWORD PTR [rbp-0x28]
  40adcd:	mov    rdi,rax
  40add0:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40add5:	mov    rax,QWORD PTR [rbp-0x8]
  40add9:	leave  
  40adda:	ret    

000000000040addb <flatcc_builder_create_union_vector_direct@@Base>:
  40addb:	endbr64 
  40addf:	push   rbp
  40ade0:	mov    rbp,rsp
  40ade3:	sub    rsp,0x30
  40ade7:	mov    QWORD PTR [rbp-0x18],rdi
  40adeb:	mov    QWORD PTR [rbp-0x20],rsi
  40adef:	mov    QWORD PTR [rbp-0x28],rdx
  40adf3:	mov    QWORD PTR [rbp-0x30],rcx
  40adf7:	mov    DWORD PTR [rbp-0x8],0x0
  40adfe:	mov    DWORD PTR [rbp-0x4],0x0
  40ae05:	mov    rcx,QWORD PTR [rbp-0x20]
  40ae09:	mov    rdx,QWORD PTR [rbp-0x30]
  40ae0d:	mov    rsi,QWORD PTR [rbp-0x28]
  40ae11:	mov    rax,QWORD PTR [rbp-0x18]
  40ae15:	mov    rdi,rax
  40ae18:	call   40a4f6 <flatcc_builder_vector_edit@@Base+0x16>
  40ae1d:	mov    DWORD PTR [rbp-0x4],eax
  40ae20:	mov    eax,DWORD PTR [rbp-0x4]
  40ae23:	test   eax,eax
  40ae25:	jne    40ae2d <flatcc_builder_create_union_vector_direct@@Base+0x52>
  40ae27:	mov    rax,QWORD PTR [rbp-0x8]
  40ae2b:	jmp    40ae66 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  40ae2d:	mov    rdx,QWORD PTR [rbp-0x30]
  40ae31:	mov    rsi,QWORD PTR [rbp-0x20]
  40ae35:	mov    rax,QWORD PTR [rbp-0x18]
  40ae39:	mov    r9d,0xffffffff
  40ae3f:	mov    r8d,0x1
  40ae45:	mov    ecx,0x1
  40ae4a:	mov    rdi,rax
  40ae4d:	call   40a17e <flatcc_builder_create_vector@@Base>
  40ae52:	mov    DWORD PTR [rbp-0x8],eax
  40ae55:	mov    eax,DWORD PTR [rbp-0x8]
  40ae58:	test   eax,eax
  40ae5a:	jne    40ae62 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  40ae5c:	mov    rax,QWORD PTR [rbp-0x8]
  40ae60:	jmp    40ae66 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  40ae62:	mov    rax,QWORD PTR [rbp-0x8]
  40ae66:	leave  
  40ae67:	ret    

000000000040ae68 <flatcc_builder_start_union_vector@@Base>:
  40ae68:	endbr64 
  40ae6c:	push   rbp
  40ae6d:	mov    rbp,rsp
  40ae70:	sub    rsp,0x10
  40ae74:	mov    QWORD PTR [rbp-0x8],rdi
  40ae78:	mov    rax,QWORD PTR [rbp-0x8]
  40ae7c:	mov    esi,0x4
  40ae81:	mov    rdi,rax
  40ae84:	call   4077d3 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40ae89:	test   eax,eax
  40ae8b:	je     40ae94 <flatcc_builder_start_union_vector@@Base+0x2c>
  40ae8d:	mov    eax,0xffffffff
  40ae92:	jmp    40aed6 <flatcc_builder_start_union_vector@@Base+0x6e>
  40ae94:	mov    rax,QWORD PTR [rbp-0x8]
  40ae98:	mov    rax,QWORD PTR [rax+0x30]
  40ae9c:	mov    DWORD PTR [rax+0x10],0x8
  40aea3:	mov    rax,QWORD PTR [rbp-0x8]
  40aea7:	mov    rax,QWORD PTR [rax+0x30]
  40aeab:	mov    DWORD PTR [rax+0x14],0x0
  40aeb2:	mov    rax,QWORD PTR [rbp-0x8]
  40aeb6:	mov    rax,QWORD PTR [rax+0x30]
  40aeba:	mov    WORD PTR [rax+0xe],0x7
  40aec0:	mov    rax,QWORD PTR [rbp-0x8]
  40aec4:	mov    esi,0xfffffffc
  40aec9:	mov    rdi,rax
  40aecc:	call   4069a9 <flatcc_builder_default_alloc@@Base+0x173>
  40aed1:	mov    eax,0x0
  40aed6:	leave  
  40aed7:	ret    

000000000040aed8 <flatcc_builder_end_union_vector@@Base>:
  40aed8:	endbr64 
  40aedc:	push   rbp
  40aedd:	mov    rbp,rsp
  40aee0:	sub    rsp,0x40
  40aee4:	mov    QWORD PTR [rbp-0x38],rdi
  40aee8:	mov    DWORD PTR [rbp-0x8],0x0
  40aeef:	mov    DWORD PTR [rbp-0x4],0x0
  40aef6:	mov    rax,QWORD PTR [rbp-0x38]
  40aefa:	mov    rax,QWORD PTR [rax+0x30]
  40aefe:	movzx  eax,WORD PTR [rax+0xe]
  40af02:	cmp    ax,0x7
  40af06:	je     40af27 <flatcc_builder_end_union_vector@@Base+0x4f>
  40af08:	lea    rcx,[rip+0xa011]        # 414f20 <flatcc_builder_padding_base@@Base+0xb80>
  40af0f:	mov    edx,0x651
  40af14:	lea    rsi,[rip+0x9685]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40af1b:	lea    rdi,[rip+0x9a16]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40af22:	call   403150 <__assert_fail@plt>
  40af27:	mov    rax,QWORD PTR [rbp-0x38]
  40af2b:	mov    rdi,rax
  40af2e:	call   40b037 <flatcc_builder_union_vector_count@@Base>
  40af33:	mov    QWORD PTR [rbp-0x28],rax
  40af37:	mov    rax,QWORD PTR [rbp-0x28]
  40af3b:	mov    edx,eax
  40af3d:	mov    eax,edx
  40af3f:	shl    eax,0x2
  40af42:	add    edx,eax
  40af44:	mov    rax,QWORD PTR [rbp-0x38]
  40af48:	mov    esi,edx
  40af4a:	mov    rdi,rax
  40af4d:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  40af52:	mov    QWORD PTR [rbp-0x20],rax
  40af56:	cmp    QWORD PTR [rbp-0x20],0x0
  40af5b:	jne    40af66 <flatcc_builder_end_union_vector@@Base+0x8e>
  40af5d:	mov    rax,QWORD PTR [rbp-0x8]
  40af61:	jmp    40b01f <flatcc_builder_end_union_vector@@Base+0x147>
  40af66:	mov    rax,QWORD PTR [rbp-0x28]
  40af6a:	lea    rdx,[rax*4+0x0]
  40af72:	mov    rax,QWORD PTR [rbp-0x20]
  40af76:	add    rax,rdx
  40af79:	mov    QWORD PTR [rbp-0x18],rax
  40af7d:	mov    rax,QWORD PTR [rbp-0x38]
  40af81:	mov    rdi,rax
  40af84:	call   40b021 <flatcc_builder_union_vector_edit@@Base>
  40af89:	mov    QWORD PTR [rbp-0x10],rax
  40af8d:	mov    QWORD PTR [rbp-0x30],0x0
  40af95:	jmp    40afe9 <flatcc_builder_end_union_vector@@Base+0x111>
  40af97:	mov    rax,QWORD PTR [rbp-0x30]
  40af9b:	lea    rdx,[rax*8+0x0]
  40afa3:	mov    rax,QWORD PTR [rbp-0x10]
  40afa7:	add    rax,rdx
  40afaa:	mov    rcx,QWORD PTR [rbp-0x18]
  40afae:	mov    rdx,QWORD PTR [rbp-0x30]
  40afb2:	add    rdx,rcx
  40afb5:	movzx  eax,BYTE PTR [rax]
  40afb8:	mov    BYTE PTR [rdx],al
  40afba:	mov    rax,QWORD PTR [rbp-0x30]
  40afbe:	lea    rdx,[rax*8+0x0]
  40afc6:	mov    rax,QWORD PTR [rbp-0x10]
  40afca:	add    rax,rdx
  40afcd:	mov    rdx,QWORD PTR [rbp-0x30]
  40afd1:	lea    rcx,[rdx*4+0x0]
  40afd9:	mov    rdx,QWORD PTR [rbp-0x20]
  40afdd:	add    rdx,rcx
  40afe0:	mov    eax,DWORD PTR [rax+0x4]
  40afe3:	mov    DWORD PTR [rdx],eax
  40afe5:	inc    QWORD PTR [rbp-0x30]
  40afe9:	mov    rax,QWORD PTR [rbp-0x30]
  40afed:	cmp    rax,QWORD PTR [rbp-0x28]
  40aff1:	jb     40af97 <flatcc_builder_end_union_vector@@Base+0xbf>
  40aff3:	mov    rcx,QWORD PTR [rbp-0x28]
  40aff7:	mov    rdx,QWORD PTR [rbp-0x20]
  40affb:	mov    rsi,QWORD PTR [rbp-0x18]
  40afff:	mov    rax,QWORD PTR [rbp-0x38]
  40b003:	mov    rdi,rax
  40b006:	call   40addb <flatcc_builder_create_union_vector_direct@@Base>
  40b00b:	mov    QWORD PTR [rbp-0x8],rax
  40b00f:	mov    rax,QWORD PTR [rbp-0x38]
  40b013:	mov    rdi,rax
  40b016:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40b01b:	mov    rax,QWORD PTR [rbp-0x8]
  40b01f:	leave  
  40b020:	ret    

000000000040b021 <flatcc_builder_union_vector_edit@@Base>:
  40b021:	endbr64 
  40b025:	push   rbp
  40b026:	mov    rbp,rsp
  40b029:	mov    QWORD PTR [rbp-0x8],rdi
  40b02d:	mov    rax,QWORD PTR [rbp-0x8]
  40b031:	mov    rax,QWORD PTR [rax+0x18]
  40b035:	pop    rbp
  40b036:	ret    

000000000040b037 <flatcc_builder_union_vector_count@@Base>:
  40b037:	endbr64 
  40b03b:	push   rbp
  40b03c:	mov    rbp,rsp
  40b03f:	mov    QWORD PTR [rbp-0x8],rdi
  40b043:	mov    rax,QWORD PTR [rbp-0x8]
  40b047:	mov    rax,QWORD PTR [rax+0x30]
  40b04b:	mov    eax,DWORD PTR [rax+0x14]
  40b04e:	mov    eax,eax
  40b050:	pop    rbp
  40b051:	ret    

000000000040b052 <flatcc_builder_extend_union_vector@@Base>:
  40b052:	endbr64 
  40b056:	push   rbp
  40b057:	mov    rbp,rsp
  40b05a:	sub    rsp,0x10
  40b05e:	mov    QWORD PTR [rbp-0x8],rdi
  40b062:	mov    QWORD PTR [rbp-0x10],rsi
  40b066:	mov    rax,QWORD PTR [rbp-0x10]
  40b06a:	mov    ecx,eax
  40b06c:	mov    rax,QWORD PTR [rbp-0x8]
  40b070:	mov    edx,0x1fffffff
  40b075:	mov    esi,ecx
  40b077:	mov    rdi,rax
  40b07a:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  40b07f:	test   eax,eax
  40b081:	je     40b08a <flatcc_builder_extend_union_vector@@Base+0x38>
  40b083:	mov    eax,0x0
  40b088:	jmp    40b0a3 <flatcc_builder_extend_union_vector@@Base+0x51>
  40b08a:	mov    rax,QWORD PTR [rbp-0x10]
  40b08e:	lea    edx,[rax*8+0x0]
  40b095:	mov    rax,QWORD PTR [rbp-0x8]
  40b099:	mov    esi,edx
  40b09b:	mov    rdi,rax
  40b09e:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  40b0a3:	leave  
  40b0a4:	ret    

000000000040b0a5 <flatcc_builder_truncate_union_vector@@Base>:
  40b0a5:	endbr64 
  40b0a9:	push   rbp
  40b0aa:	mov    rbp,rsp
  40b0ad:	sub    rsp,0x10
  40b0b1:	mov    QWORD PTR [rbp-0x8],rdi
  40b0b5:	mov    QWORD PTR [rbp-0x10],rsi
  40b0b9:	mov    rax,QWORD PTR [rbp-0x8]
  40b0bd:	mov    rax,QWORD PTR [rax+0x30]
  40b0c1:	movzx  eax,WORD PTR [rax+0xe]
  40b0c5:	cmp    ax,0x7
  40b0c9:	je     40b0ea <flatcc_builder_truncate_union_vector@@Base+0x45>
  40b0cb:	lea    rcx,[rip+0x9e6e]        # 414f40 <flatcc_builder_padding_base@@Base+0xba0>
  40b0d2:	mov    edx,0x681
  40b0d7:	lea    rsi,[rip+0x94c2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b0de:	lea    rdi,[rip+0x9853]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40b0e5:	call   403150 <__assert_fail@plt>
  40b0ea:	mov    rax,QWORD PTR [rbp-0x8]
  40b0ee:	mov    rax,QWORD PTR [rax+0x30]
  40b0f2:	mov    eax,DWORD PTR [rax+0x14]
  40b0f5:	mov    rdx,QWORD PTR [rbp-0x10]
  40b0f9:	cmp    eax,edx
  40b0fb:	jae    40b136 <flatcc_builder_truncate_union_vector@@Base+0x91>
  40b0fd:	mov    rax,QWORD PTR [rbp-0x8]
  40b101:	mov    rax,QWORD PTR [rax+0x30]
  40b105:	mov    eax,DWORD PTR [rax+0x14]
  40b108:	mov    rdx,QWORD PTR [rbp-0x10]
  40b10c:	cmp    eax,edx
  40b10e:	jae    40b12f <flatcc_builder_truncate_union_vector@@Base+0x8a>
  40b110:	lea    rcx,[rip+0x9e29]        # 414f40 <flatcc_builder_padding_base@@Base+0xba0>
  40b117:	mov    edx,0x682
  40b11c:	lea    rsi,[rip+0x947d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b123:	lea    rdi,[rip+0x96be]        # 4147e8 <flatcc_builder_padding_base@@Base+0x448>
  40b12a:	call   403150 <__assert_fail@plt>
  40b12f:	mov    eax,0xffffffff
  40b134:	jmp    40b179 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  40b136:	mov    rax,QWORD PTR [rbp-0x8]
  40b13a:	mov    rax,QWORD PTR [rax+0x30]
  40b13e:	mov    edx,DWORD PTR [rax+0x14]
  40b141:	mov    rax,QWORD PTR [rbp-0x10]
  40b145:	mov    ecx,eax
  40b147:	mov    rax,QWORD PTR [rbp-0x8]
  40b14b:	mov    rax,QWORD PTR [rax+0x30]
  40b14f:	sub    edx,ecx
  40b151:	mov    DWORD PTR [rax+0x14],edx
  40b154:	mov    rax,QWORD PTR [rbp-0x8]
  40b158:	mov    rax,QWORD PTR [rax+0x30]
  40b15c:	mov    eax,DWORD PTR [rax+0x10]
  40b15f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b163:	imul   edx,eax
  40b166:	mov    rax,QWORD PTR [rbp-0x8]
  40b16a:	mov    esi,edx
  40b16c:	mov    rdi,rax
  40b16f:	call   406b1c <flatcc_builder_default_alloc@@Base+0x2e6>
  40b174:	mov    eax,0x0
  40b179:	leave  
  40b17a:	ret    

000000000040b17b <flatcc_builder_union_vector_push@@Base>:
  40b17b:	endbr64 
  40b17f:	push   rbp
  40b180:	mov    rbp,rsp
  40b183:	sub    rsp,0x20
  40b187:	mov    QWORD PTR [rbp-0x18],rdi
  40b18b:	mov    QWORD PTR [rbp-0x20],rsi
  40b18f:	mov    rax,QWORD PTR [rbp-0x18]
  40b193:	mov    rax,QWORD PTR [rax+0x30]
  40b197:	movzx  eax,WORD PTR [rax+0xe]
  40b19b:	cmp    ax,0x7
  40b19f:	je     40b1c0 <flatcc_builder_union_vector_push@@Base+0x45>
  40b1a1:	lea    rcx,[rip+0x9dd8]        # 414f80 <flatcc_builder_padding_base@@Base+0xbe0>
  40b1a8:	mov    edx,0x68d
  40b1ad:	lea    rsi,[rip+0x93ec]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b1b4:	lea    rdi,[rip+0x977d]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40b1bb:	call   403150 <__assert_fail@plt>
  40b1c0:	mov    rax,QWORD PTR [rbp-0x18]
  40b1c4:	mov    rax,QWORD PTR [rax+0x30]
  40b1c8:	mov    eax,DWORD PTR [rax+0x14]
  40b1cb:	cmp    eax,0x1fffffff
  40b1d0:	jne    40b1d9 <flatcc_builder_union_vector_push@@Base+0x5e>
  40b1d2:	mov    eax,0x0
  40b1d7:	jmp    40b223 <flatcc_builder_union_vector_push@@Base+0xa8>
  40b1d9:	mov    rax,QWORD PTR [rbp-0x18]
  40b1dd:	mov    rax,QWORD PTR [rax+0x30]
  40b1e1:	mov    edx,DWORD PTR [rax+0x14]
  40b1e4:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e8:	mov    rax,QWORD PTR [rax+0x30]
  40b1ec:	inc    edx
  40b1ee:	mov    DWORD PTR [rax+0x14],edx
  40b1f1:	mov    rax,QWORD PTR [rbp-0x18]
  40b1f5:	mov    esi,0x8
  40b1fa:	mov    rdi,rax
  40b1fd:	call   406aa0 <flatcc_builder_default_alloc@@Base+0x26a>
  40b202:	mov    QWORD PTR [rbp-0x8],rax
  40b206:	cmp    QWORD PTR [rbp-0x8],0x0
  40b20b:	jne    40b214 <flatcc_builder_union_vector_push@@Base+0x99>
  40b20d:	mov    eax,0x0
  40b212:	jmp    40b223 <flatcc_builder_union_vector_push@@Base+0xa8>
  40b214:	mov    rax,QWORD PTR [rbp-0x8]
  40b218:	mov    rdx,QWORD PTR [rbp-0x20]
  40b21c:	mov    QWORD PTR [rax],rdx
  40b21f:	mov    rax,QWORD PTR [rbp-0x8]
  40b223:	leave  
  40b224:	ret    

000000000040b225 <flatcc_builder_append_union_vector@@Base>:
  40b225:	endbr64 
  40b229:	push   rbp
  40b22a:	mov    rbp,rsp
  40b22d:	sub    rsp,0x20
  40b231:	mov    QWORD PTR [rbp-0x8],rdi
  40b235:	mov    QWORD PTR [rbp-0x10],rsi
  40b239:	mov    QWORD PTR [rbp-0x18],rdx
  40b23d:	mov    rax,QWORD PTR [rbp-0x8]
  40b241:	mov    rax,QWORD PTR [rax+0x30]
  40b245:	movzx  eax,WORD PTR [rax+0xe]
  40b249:	cmp    ax,0x7
  40b24d:	je     40b26e <flatcc_builder_append_union_vector@@Base+0x49>
  40b24f:	lea    rcx,[rip+0x9d6a]        # 414fc0 <flatcc_builder_padding_base@@Base+0xc20>
  40b256:	mov    edx,0x69c
  40b25b:	lea    rsi,[rip+0x933e]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b262:	lea    rdi,[rip+0x96cf]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40b269:	call   403150 <__assert_fail@plt>
  40b26e:	mov    rax,QWORD PTR [rbp-0x18]
  40b272:	mov    ecx,eax
  40b274:	mov    rax,QWORD PTR [rbp-0x8]
  40b278:	mov    edx,0x1fffffff
  40b27d:	mov    esi,ecx
  40b27f:	mov    rdi,rax
  40b282:	call   408a45 <flatcc_builder_end_struct@@Base+0x92>
  40b287:	test   eax,eax
  40b289:	je     40b292 <flatcc_builder_append_union_vector@@Base+0x6d>
  40b28b:	mov    eax,0x0
  40b290:	jmp    40b2b0 <flatcc_builder_append_union_vector@@Base+0x8b>
  40b292:	mov    rax,QWORD PTR [rbp-0x18]
  40b296:	lea    edx,[rax*8+0x0]
  40b29d:	mov    rcx,QWORD PTR [rbp-0x10]
  40b2a1:	mov    rax,QWORD PTR [rbp-0x8]
  40b2a5:	mov    rsi,rcx
  40b2a8:	mov    rdi,rax
  40b2ab:	call   406b68 <flatcc_builder_default_alloc@@Base+0x332>
  40b2b0:	leave  
  40b2b1:	ret    

000000000040b2b2 <flatcc_builder_create_string@@Base>:
  40b2b2:	endbr64 
  40b2b6:	push   rbp
  40b2b7:	mov    rbp,rsp
  40b2ba:	sub    rsp,0xd0
  40b2c1:	mov    QWORD PTR [rbp-0xb8],rdi
  40b2c8:	mov    QWORD PTR [rbp-0xc0],rsi
  40b2cf:	mov    QWORD PTR [rbp-0xc8],rdx
  40b2d6:	mov    rax,QWORD PTR fs:0x28
  40b2df:	mov    QWORD PTR [rbp-0x8],rax
  40b2e3:	xor    eax,eax
  40b2e5:	mov    eax,0xffffffff
  40b2ea:	cmp    QWORD PTR [rbp-0xc8],rax
  40b2f1:	jbe    40b2fd <flatcc_builder_create_string@@Base+0x4b>
  40b2f3:	mov    eax,0x0
  40b2f8:	jmp    40b4a0 <flatcc_builder_create_string@@Base+0x1ee>
  40b2fd:	mov    rax,QWORD PTR [rbp-0xc8]
  40b304:	mov    edi,eax
  40b306:	call   406776 <main@@Base+0x11a>
  40b30b:	mov    DWORD PTR [rbp-0xa8],eax
  40b311:	mov    rax,QWORD PTR [rbp-0xc8]
  40b318:	lea    ecx,[rax+0x1]
  40b31b:	mov    rax,QWORD PTR [rbp-0xb8]
  40b322:	mov    edx,0x4
  40b327:	mov    esi,ecx
  40b329:	mov    rdi,rax
  40b32c:	call   407a75 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40b331:	inc    eax
  40b333:	mov    DWORD PTR [rbp-0xa4],eax
  40b339:	mov    QWORD PTR [rbp-0xa0],0x0
  40b344:	mov    DWORD PTR [rbp-0x98],0x0
  40b34e:	mov    rax,QWORD PTR [rbp-0xa0]
  40b355:	add    rax,0x4
  40b359:	mov    QWORD PTR [rbp-0xa0],rax
  40b360:	mov    eax,DWORD PTR [rbp-0x98]
  40b366:	cdqe   
  40b368:	shl    rax,0x4
  40b36c:	add    rax,rbp
  40b36f:	lea    rdx,[rax-0x90]
  40b376:	lea    rax,[rbp-0xa8]
  40b37d:	mov    QWORD PTR [rdx],rax
  40b380:	mov    eax,DWORD PTR [rbp-0x98]
  40b386:	cdqe   
  40b388:	shl    rax,0x4
  40b38c:	add    rax,rbp
  40b38f:	sub    rax,0x88
  40b395:	mov    QWORD PTR [rax],0x4
  40b39c:	mov    eax,DWORD PTR [rbp-0x98]
  40b3a2:	inc    eax
  40b3a4:	mov    DWORD PTR [rbp-0x98],eax
  40b3aa:	cmp    QWORD PTR [rbp-0xc8],0x0
  40b3b2:	je     40b41a <flatcc_builder_create_string@@Base+0x168>
  40b3b4:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b3bb:	mov    rax,QWORD PTR [rbp-0xc8]
  40b3c2:	add    rax,rdx
  40b3c5:	mov    QWORD PTR [rbp-0xa0],rax
  40b3cc:	mov    eax,DWORD PTR [rbp-0x98]
  40b3d2:	cdqe   
  40b3d4:	shl    rax,0x4
  40b3d8:	add    rax,rbp
  40b3db:	lea    rdx,[rax-0x90]
  40b3e2:	mov    rax,QWORD PTR [rbp-0xc0]
  40b3e9:	mov    QWORD PTR [rdx],rax
  40b3ec:	mov    eax,DWORD PTR [rbp-0x98]
  40b3f2:	cdqe   
  40b3f4:	shl    rax,0x4
  40b3f8:	add    rax,rbp
  40b3fb:	lea    rdx,[rax-0x88]
  40b402:	mov    rax,QWORD PTR [rbp-0xc8]
  40b409:	mov    QWORD PTR [rdx],rax
  40b40c:	mov    eax,DWORD PTR [rbp-0x98]
  40b412:	inc    eax
  40b414:	mov    DWORD PTR [rbp-0x98],eax
  40b41a:	cmp    DWORD PTR [rbp-0xa4],0x0
  40b421:	je     40b487 <flatcc_builder_create_string@@Base+0x1d5>
  40b423:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b42a:	mov    eax,DWORD PTR [rbp-0xa4]
  40b430:	add    rax,rdx
  40b433:	mov    QWORD PTR [rbp-0xa0],rax
  40b43a:	mov    eax,DWORD PTR [rbp-0x98]
  40b440:	cdqe   
  40b442:	shl    rax,0x4
  40b446:	add    rax,rbp
  40b449:	sub    rax,0x90
  40b44f:	mov    rdx,0x4143a0
  40b456:	mov    QWORD PTR [rax],rdx
  40b459:	mov    edx,DWORD PTR [rbp-0x98]
  40b45f:	mov    eax,DWORD PTR [rbp-0xa4]
  40b465:	movsxd rdx,edx
  40b468:	shl    rdx,0x4
  40b46c:	add    rdx,rbp
  40b46f:	sub    rdx,0x88
  40b476:	mov    QWORD PTR [rdx],rax
  40b479:	mov    eax,DWORD PTR [rbp-0x98]
  40b47f:	inc    eax
  40b481:	mov    DWORD PTR [rbp-0x98],eax
  40b487:	lea    rdx,[rbp-0xa0]
  40b48e:	mov    rax,QWORD PTR [rbp-0xb8]
  40b495:	mov    rsi,rdx
  40b498:	mov    rdi,rax
  40b49b:	call   407abf <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40b4a0:	mov    rcx,QWORD PTR [rbp-0x8]
  40b4a4:	xor    rcx,QWORD PTR fs:0x28
  40b4ad:	je     40b4b4 <flatcc_builder_create_string@@Base+0x202>
  40b4af:	call   403140 <__stack_chk_fail@plt>
  40b4b4:	leave  
  40b4b5:	ret    

000000000040b4b6 <flatcc_builder_create_string_str@@Base>:
  40b4b6:	endbr64 
  40b4ba:	push   rbp
  40b4bb:	mov    rbp,rsp
  40b4be:	sub    rsp,0x10
  40b4c2:	mov    QWORD PTR [rbp-0x8],rdi
  40b4c6:	mov    QWORD PTR [rbp-0x10],rsi
  40b4ca:	mov    rax,QWORD PTR [rbp-0x10]
  40b4ce:	mov    rdi,rax
  40b4d1:	call   403130 <strlen@plt>
  40b4d6:	mov    rdx,rax
  40b4d9:	mov    rcx,QWORD PTR [rbp-0x10]
  40b4dd:	mov    rax,QWORD PTR [rbp-0x8]
  40b4e1:	mov    rsi,rcx
  40b4e4:	mov    rdi,rax
  40b4e7:	call   40b2b2 <flatcc_builder_create_string@@Base>
  40b4ec:	leave  
  40b4ed:	ret    

000000000040b4ee <flatcc_builder_create_string_strn@@Base>:
  40b4ee:	endbr64 
  40b4f2:	push   rbp
  40b4f3:	mov    rbp,rsp
  40b4f6:	sub    rsp,0x20
  40b4fa:	mov    QWORD PTR [rbp-0x8],rdi
  40b4fe:	mov    QWORD PTR [rbp-0x10],rsi
  40b502:	mov    QWORD PTR [rbp-0x18],rdx
  40b506:	mov    rdx,QWORD PTR [rbp-0x18]
  40b50a:	mov    rax,QWORD PTR [rbp-0x10]
  40b50e:	mov    rsi,rdx
  40b511:	mov    rdi,rax
  40b514:	call   4067f6 <main@@Base+0x19a>
  40b519:	mov    rdx,rax
  40b51c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b520:	mov    rax,QWORD PTR [rbp-0x8]
  40b524:	mov    rsi,rcx
  40b527:	mov    rdi,rax
  40b52a:	call   40b2b2 <flatcc_builder_create_string@@Base>
  40b52f:	leave  
  40b530:	ret    

000000000040b531 <flatcc_builder_end_string@@Base>:
  40b531:	endbr64 
  40b535:	push   rbp
  40b536:	mov    rbp,rsp
  40b539:	sub    rsp,0x20
  40b53d:	mov    QWORD PTR [rbp-0x18],rdi
  40b541:	mov    rax,QWORD PTR [rbp-0x18]
  40b545:	mov    rax,QWORD PTR [rax+0x30]
  40b549:	movzx  eax,WORD PTR [rax+0xe]
  40b54d:	cmp    ax,0x6
  40b551:	je     40b572 <flatcc_builder_end_string@@Base+0x41>
  40b553:	lea    rcx,[rip+0x9a96]        # 414ff0 <flatcc_builder_padding_base@@Base+0xc50>
  40b55a:	mov    edx,0x6c4
  40b55f:	lea    rsi,[rip+0x903a]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b566:	lea    rdi,[rip+0x9223]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  40b56d:	call   403150 <__assert_fail@plt>
  40b572:	mov    rax,QWORD PTR [rbp-0x18]
  40b576:	mov    rax,QWORD PTR [rax+0x30]
  40b57a:	mov    edx,DWORD PTR [rax+0x14]
  40b57d:	mov    rax,QWORD PTR [rbp-0x18]
  40b581:	mov    eax,DWORD PTR [rax+0x20]
  40b584:	cmp    edx,eax
  40b586:	je     40b5a7 <flatcc_builder_end_string@@Base+0x76>
  40b588:	lea    rcx,[rip+0x9a61]        # 414ff0 <flatcc_builder_padding_base@@Base+0xc50>
  40b58f:	mov    edx,0x6c5
  40b594:	lea    rsi,[rip+0x9005]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b59b:	lea    rdi,[rip+0x93ce]        # 414970 <flatcc_builder_padding_base@@Base+0x5d0>
  40b5a2:	call   403150 <__assert_fail@plt>
  40b5a7:	mov    rax,QWORD PTR [rbp-0x18]
  40b5ab:	mov    eax,DWORD PTR [rax+0x20]
  40b5ae:	mov    edx,eax
  40b5b0:	mov    rax,QWORD PTR [rbp-0x18]
  40b5b4:	mov    rcx,QWORD PTR [rax+0x18]
  40b5b8:	mov    rax,QWORD PTR [rbp-0x18]
  40b5bc:	mov    rsi,rcx
  40b5bf:	mov    rdi,rax
  40b5c2:	call   40b2b2 <flatcc_builder_create_string@@Base>
  40b5c7:	mov    DWORD PTR [rbp-0x4],eax
  40b5ca:	cmp    DWORD PTR [rbp-0x4],0x0
  40b5ce:	jne    40b5d7 <flatcc_builder_end_string@@Base+0xa6>
  40b5d0:	mov    eax,0x0
  40b5d5:	jmp    40b5e6 <flatcc_builder_end_string@@Base+0xb5>
  40b5d7:	mov    rax,QWORD PTR [rbp-0x18]
  40b5db:	mov    rdi,rax
  40b5de:	call   4079ae <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40b5e3:	mov    eax,DWORD PTR [rbp-0x4]
  40b5e6:	leave  
  40b5e7:	ret    

000000000040b5e8 <flatcc_builder_string_edit@@Base>:
  40b5e8:	endbr64 
  40b5ec:	push   rbp
  40b5ed:	mov    rbp,rsp
  40b5f0:	mov    QWORD PTR [rbp-0x8],rdi
  40b5f4:	mov    rax,QWORD PTR [rbp-0x8]
  40b5f8:	mov    rax,QWORD PTR [rax+0x18]
  40b5fc:	pop    rbp
  40b5fd:	ret    

000000000040b5fe <flatcc_builder_string_len@@Base>:
  40b5fe:	endbr64 
  40b602:	push   rbp
  40b603:	mov    rbp,rsp
  40b606:	mov    QWORD PTR [rbp-0x8],rdi
  40b60a:	mov    rax,QWORD PTR [rbp-0x8]
  40b60e:	mov    rax,QWORD PTR [rax+0x30]
  40b612:	mov    eax,DWORD PTR [rax+0x14]
  40b615:	mov    eax,eax
  40b617:	pop    rbp
  40b618:	ret    

000000000040b619 <flatcc_builder_table_add@@Base>:
  40b619:	endbr64 
  40b61d:	push   rbp
  40b61e:	mov    rbp,rsp
  40b621:	sub    rsp,0x20
  40b625:	mov    QWORD PTR [rbp-0x8],rdi
  40b629:	mov    DWORD PTR [rbp-0xc],esi
  40b62c:	mov    QWORD PTR [rbp-0x18],rdx
  40b630:	mov    eax,ecx
  40b632:	mov    WORD PTR [rbp-0x10],ax
  40b636:	mov    rax,QWORD PTR [rbp-0x8]
  40b63a:	mov    rax,QWORD PTR [rax+0x30]
  40b63e:	movzx  eax,WORD PTR [rax+0xe]
  40b642:	cmp    ax,0x3
  40b646:	je     40b667 <flatcc_builder_table_add@@Base+0x4e>
  40b648:	lea    rcx,[rip+0x99c1]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b64f:	mov    edx,0x6ed
  40b654:	lea    rsi,[rip+0x8f45]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b65b:	lea    rdi,[rip+0x9216]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b662:	call   403150 <__assert_fail@plt>
  40b667:	cmp    DWORD PTR [rbp-0xc],0x0
  40b66b:	js     40b676 <flatcc_builder_table_add@@Base+0x5d>
  40b66d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40b674:	jle    40b695 <flatcc_builder_table_add@@Base+0x7c>
  40b676:	lea    rcx,[rip+0x9993]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b67d:	mov    edx,0x6ee
  40b682:	lea    rsi,[rip+0x8f17]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b689:	lea    rdi,[rip+0x9308]        # 414998 <flatcc_builder_padding_base@@Base+0x5f8>
  40b690:	call   403150 <__assert_fail@plt>
  40b695:	mov    rax,QWORD PTR [rbp-0x8]
  40b699:	movzx  eax,WORD PTR [rax+0xea]
  40b6a0:	cmp    WORD PTR [rbp-0x10],ax
  40b6a4:	jbe    40b6b5 <flatcc_builder_table_add@@Base+0x9c>
  40b6a6:	mov    rdx,QWORD PTR [rbp-0x8]
  40b6aa:	movzx  eax,WORD PTR [rbp-0x10]
  40b6ae:	mov    WORD PTR [rdx+0xea],ax
  40b6b5:	mov    rax,QWORD PTR [rbp-0x8]
  40b6b9:	mov    rax,QWORD PTR [rax+0x8]
  40b6bd:	mov    edx,DWORD PTR [rbp-0xc]
  40b6c0:	movsxd rdx,edx
  40b6c3:	add    rdx,rdx
  40b6c6:	add    rax,rdx
  40b6c9:	movzx  eax,WORD PTR [rax]
  40b6cc:	test   ax,ax
  40b6cf:	je     40b6f0 <flatcc_builder_table_add@@Base+0xd7>
  40b6d1:	lea    rcx,[rip+0x9938]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b6d8:	mov    edx,0x6f8
  40b6dd:	lea    rsi,[rip+0x8ebc]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b6e4:	lea    rdi,[rip+0x8f15]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40b6eb:	call   403150 <__assert_fail@plt>
  40b6f0:	mov    rax,QWORD PTR [rbp-0x8]
  40b6f4:	mov    edx,DWORD PTR [rax+0x14]
  40b6f7:	mov    eax,DWORD PTR [rbp-0xc]
  40b6fa:	xor    eax,edx
  40b6fc:	imul   eax,eax,0x9e3779b1
  40b702:	mov    rdx,QWORD PTR [rbp-0x18]
  40b706:	xor    eax,edx
  40b708:	imul   edx,eax,0x9e3779b1
  40b70e:	mov    rax,QWORD PTR [rbp-0x8]
  40b712:	mov    DWORD PTR [rax+0x14],edx
  40b715:	mov    eax,DWORD PTR [rbp-0xc]
  40b718:	movzx  ecx,ax
  40b71b:	movzx  edx,WORD PTR [rbp-0x10]
  40b71f:	mov    rax,QWORD PTR [rbp-0x18]
  40b723:	mov    esi,eax
  40b725:	mov    rax,QWORD PTR [rbp-0x8]
  40b729:	mov    rdi,rax
  40b72c:	call   406bba <flatcc_builder_default_alloc@@Base+0x384>
  40b731:	leave  
  40b732:	ret    

000000000040b733 <flatcc_builder_table_edit@@Base>:
  40b733:	endbr64 
  40b737:	push   rbp
  40b738:	mov    rbp,rsp
  40b73b:	sub    rsp,0x10
  40b73f:	mov    QWORD PTR [rbp-0x8],rdi
  40b743:	mov    QWORD PTR [rbp-0x10],rsi
  40b747:	mov    rax,QWORD PTR [rbp-0x8]
  40b74b:	mov    rax,QWORD PTR [rax+0x30]
  40b74f:	movzx  eax,WORD PTR [rax+0xe]
  40b753:	cmp    ax,0x3
  40b757:	je     40b778 <flatcc_builder_table_edit@@Base+0x45>
  40b759:	lea    rcx,[rip+0x98d0]        # 415030 <flatcc_builder_padding_base@@Base+0xc90>
  40b760:	mov    edx,0x702
  40b765:	lea    rsi,[rip+0x8e34]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b76c:	lea    rdi,[rip+0x9105]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b773:	call   403150 <__assert_fail@plt>
  40b778:	mov    rax,QWORD PTR [rbp-0x8]
  40b77c:	mov    rdx,QWORD PTR [rax+0x18]
  40b780:	mov    rax,QWORD PTR [rbp-0x8]
  40b784:	mov    eax,DWORD PTR [rax+0x20]
  40b787:	mov    eax,eax
  40b789:	sub    rax,QWORD PTR [rbp-0x10]
  40b78d:	add    rax,rdx
  40b790:	leave  
  40b791:	ret    

000000000040b792 <flatcc_builder_table_add_copy@@Base>:
  40b792:	endbr64 
  40b796:	push   rbp
  40b797:	mov    rbp,rsp
  40b79a:	sub    rsp,0x30
  40b79e:	mov    QWORD PTR [rbp-0x18],rdi
  40b7a2:	mov    DWORD PTR [rbp-0x1c],esi
  40b7a5:	mov    QWORD PTR [rbp-0x28],rdx
  40b7a9:	mov    QWORD PTR [rbp-0x30],rcx
  40b7ad:	mov    eax,r8d
  40b7b0:	mov    WORD PTR [rbp-0x20],ax
  40b7b4:	movzx  ecx,WORD PTR [rbp-0x20]
  40b7b8:	mov    rdx,QWORD PTR [rbp-0x30]
  40b7bc:	mov    esi,DWORD PTR [rbp-0x1c]
  40b7bf:	mov    rax,QWORD PTR [rbp-0x18]
  40b7c3:	mov    rdi,rax
  40b7c6:	call   40b619 <flatcc_builder_table_add@@Base>
  40b7cb:	mov    QWORD PTR [rbp-0x8],rax
  40b7cf:	cmp    QWORD PTR [rbp-0x8],0x0
  40b7d4:	je     40b7ed <flatcc_builder_table_add_copy@@Base+0x5b>
  40b7d6:	mov    rdx,QWORD PTR [rbp-0x30]
  40b7da:	mov    rcx,QWORD PTR [rbp-0x28]
  40b7de:	mov    rax,QWORD PTR [rbp-0x8]
  40b7e2:	mov    rsi,rcx
  40b7e5:	mov    rdi,rax
  40b7e8:	call   4031a0 <memcpy@plt>
  40b7ed:	mov    rax,QWORD PTR [rbp-0x8]
  40b7f1:	leave  
  40b7f2:	ret    

000000000040b7f3 <flatcc_builder_table_add_offset@@Base>:
  40b7f3:	endbr64 
  40b7f7:	push   rbp
  40b7f8:	mov    rbp,rsp
  40b7fb:	sub    rsp,0x10
  40b7ff:	mov    QWORD PTR [rbp-0x8],rdi
  40b803:	mov    DWORD PTR [rbp-0xc],esi
  40b806:	mov    rax,QWORD PTR [rbp-0x8]
  40b80a:	mov    rax,QWORD PTR [rax+0x30]
  40b80e:	movzx  eax,WORD PTR [rax+0xe]
  40b812:	cmp    ax,0x3
  40b816:	je     40b837 <flatcc_builder_table_add_offset@@Base+0x44>
  40b818:	lea    rcx,[rip+0x9841]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b81f:	mov    edx,0x713
  40b824:	lea    rsi,[rip+0x8d75]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b82b:	lea    rdi,[rip+0x9046]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b832:	call   403150 <__assert_fail@plt>
  40b837:	cmp    DWORD PTR [rbp-0xc],0x0
  40b83b:	js     40b846 <flatcc_builder_table_add_offset@@Base+0x53>
  40b83d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40b844:	jle    40b865 <flatcc_builder_table_add_offset@@Base+0x72>
  40b846:	lea    rcx,[rip+0x9813]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b84d:	mov    edx,0x714
  40b852:	lea    rsi,[rip+0x8d47]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b859:	lea    rdi,[rip+0x9138]        # 414998 <flatcc_builder_padding_base@@Base+0x5f8>
  40b860:	call   403150 <__assert_fail@plt>
  40b865:	mov    rax,QWORD PTR [rbp-0x8]
  40b869:	mov    rax,QWORD PTR [rax+0x8]
  40b86d:	mov    edx,DWORD PTR [rbp-0xc]
  40b870:	movsxd rdx,edx
  40b873:	add    rdx,rdx
  40b876:	add    rax,rdx
  40b879:	movzx  eax,WORD PTR [rax]
  40b87c:	test   ax,ax
  40b87f:	je     40b8a0 <flatcc_builder_table_add_offset@@Base+0xad>
  40b881:	lea    rcx,[rip+0x97d8]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b888:	mov    edx,0x71b
  40b88d:	lea    rsi,[rip+0x8d0c]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b894:	lea    rdi,[rip+0x8d65]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40b89b:	call   403150 <__assert_fail@plt>
  40b8a0:	mov    rax,QWORD PTR [rbp-0x8]
  40b8a4:	mov    edx,DWORD PTR [rax+0x14]
  40b8a7:	mov    eax,DWORD PTR [rbp-0xc]
  40b8aa:	xor    eax,edx
  40b8ac:	imul   eax,eax,0x9e3779b1
  40b8b2:	xor    eax,0x4
  40b8b5:	imul   edx,eax,0x9e3779b1
  40b8bb:	mov    rax,QWORD PTR [rbp-0x8]
  40b8bf:	mov    DWORD PTR [rax+0x14],edx
  40b8c2:	mov    eax,DWORD PTR [rbp-0xc]
  40b8c5:	movzx  edx,ax
  40b8c8:	mov    rax,QWORD PTR [rbp-0x8]
  40b8cc:	mov    esi,edx
  40b8ce:	mov    rdi,rax
  40b8d1:	call   406c82 <flatcc_builder_default_alloc@@Base+0x44c>
  40b8d6:	leave  
  40b8d7:	ret    

000000000040b8d8 <flatcc_builder_push_buffer_alignment@@Base>:
  40b8d8:	endbr64 
  40b8dc:	push   rbp
  40b8dd:	mov    rbp,rsp
  40b8e0:	mov    QWORD PTR [rbp-0x18],rdi
  40b8e4:	mov    rax,QWORD PTR [rbp-0x18]
  40b8e8:	movzx  eax,WORD PTR [rax+0xe8]
  40b8ef:	mov    WORD PTR [rbp-0x2],ax
  40b8f3:	mov    rax,QWORD PTR [rbp-0x18]
  40b8f7:	mov    WORD PTR [rax+0xe8],0x4
  40b900:	movzx  eax,WORD PTR [rbp-0x2]
  40b904:	pop    rbp
  40b905:	ret    

000000000040b906 <flatcc_builder_pop_buffer_alignment@@Base>:
  40b906:	endbr64 
  40b90a:	push   rbp
  40b90b:	mov    rbp,rsp
  40b90e:	sub    rsp,0x10
  40b912:	mov    QWORD PTR [rbp-0x8],rdi
  40b916:	mov    eax,esi
  40b918:	mov    WORD PTR [rbp-0xc],ax
  40b91c:	movzx  edx,WORD PTR [rbp-0xc]
  40b920:	mov    rax,QWORD PTR [rbp-0x8]
  40b924:	mov    esi,edx
  40b926:	mov    rdi,rax
  40b929:	call   4074a2 <flatcc_builder_clear@@Base+0x99>
  40b92e:	nop
  40b92f:	leave  
  40b930:	ret    

000000000040b931 <flatcc_builder_get_buffer_alignment@@Base>:
  40b931:	endbr64 
  40b935:	push   rbp
  40b936:	mov    rbp,rsp
  40b939:	mov    QWORD PTR [rbp-0x8],rdi
  40b93d:	mov    rax,QWORD PTR [rbp-0x8]
  40b941:	movzx  eax,WORD PTR [rax+0xe8]
  40b948:	pop    rbp
  40b949:	ret    

000000000040b94a <flatcc_builder_set_vtable_clustering@@Base>:
  40b94a:	endbr64 
  40b94e:	push   rbp
  40b94f:	mov    rbp,rsp
  40b952:	mov    QWORD PTR [rbp-0x8],rdi
  40b956:	mov    DWORD PTR [rbp-0xc],esi
  40b959:	cmp    DWORD PTR [rbp-0xc],0x0
  40b95d:	sete   al
  40b960:	movzx  edx,al
  40b963:	mov    rax,QWORD PTR [rbp-0x8]
  40b967:	mov    DWORD PTR [rax+0x124],edx
  40b96d:	nop
  40b96e:	pop    rbp
  40b96f:	ret    

000000000040b970 <flatcc_builder_set_block_align@@Base>:
  40b970:	endbr64 
  40b974:	push   rbp
  40b975:	mov    rbp,rsp
  40b978:	mov    QWORD PTR [rbp-0x8],rdi
  40b97c:	mov    eax,esi
  40b97e:	mov    WORD PTR [rbp-0xc],ax
  40b982:	mov    rdx,QWORD PTR [rbp-0x8]
  40b986:	movzx  eax,WORD PTR [rbp-0xc]
  40b98a:	mov    WORD PTR [rdx+0xec],ax
  40b991:	nop
  40b992:	pop    rbp
  40b993:	ret    

000000000040b994 <flatcc_builder_get_level@@Base>:
  40b994:	endbr64 
  40b998:	push   rbp
  40b999:	mov    rbp,rsp
  40b99c:	mov    QWORD PTR [rbp-0x8],rdi
  40b9a0:	mov    rax,QWORD PTR [rbp-0x8]
  40b9a4:	mov    eax,DWORD PTR [rax+0x104]
  40b9aa:	pop    rbp
  40b9ab:	ret    

000000000040b9ac <flatcc_builder_set_max_level@@Base>:
  40b9ac:	endbr64 
  40b9b0:	push   rbp
  40b9b1:	mov    rbp,rsp
  40b9b4:	mov    QWORD PTR [rbp-0x8],rdi
  40b9b8:	mov    DWORD PTR [rbp-0xc],esi
  40b9bb:	mov    rax,QWORD PTR [rbp-0x8]
  40b9bf:	mov    edx,DWORD PTR [rbp-0xc]
  40b9c2:	mov    DWORD PTR [rax+0x120],edx
  40b9c8:	mov    rax,QWORD PTR [rbp-0x8]
  40b9cc:	mov    edx,DWORD PTR [rax+0x108]
  40b9d2:	mov    rax,QWORD PTR [rbp-0x8]
  40b9d6:	mov    eax,DWORD PTR [rax+0x120]
  40b9dc:	cmp    edx,eax
  40b9de:	jge    40b9f4 <flatcc_builder_set_max_level@@Base+0x48>
  40b9e0:	mov    rax,QWORD PTR [rbp-0x8]
  40b9e4:	mov    edx,DWORD PTR [rax+0x120]
  40b9ea:	mov    rax,QWORD PTR [rbp-0x8]
  40b9ee:	mov    DWORD PTR [rax+0x108],edx
  40b9f4:	nop
  40b9f5:	pop    rbp
  40b9f6:	ret    

000000000040b9f7 <flatcc_builder_get_buffer_size@@Base>:
  40b9f7:	endbr64 
  40b9fb:	push   rbp
  40b9fc:	mov    rbp,rsp
  40b9ff:	mov    QWORD PTR [rbp-0x8],rdi
  40ba03:	mov    rax,QWORD PTR [rbp-0x8]
  40ba07:	mov    edx,DWORD PTR [rax+0xf4]
  40ba0d:	mov    rax,QWORD PTR [rbp-0x8]
  40ba11:	mov    eax,DWORD PTR [rax+0xf0]
  40ba17:	sub    edx,eax
  40ba19:	mov    eax,edx
  40ba1b:	cdqe   
  40ba1d:	pop    rbp
  40ba1e:	ret    

000000000040ba1f <flatcc_builder_get_buffer_start@@Base>:
  40ba1f:	endbr64 
  40ba23:	push   rbp
  40ba24:	mov    rbp,rsp
  40ba27:	mov    QWORD PTR [rbp-0x8],rdi
  40ba2b:	mov    rax,QWORD PTR [rbp-0x8]
  40ba2f:	mov    eax,DWORD PTR [rax+0xf0]
  40ba35:	pop    rbp
  40ba36:	ret    

000000000040ba37 <flatcc_builder_get_buffer_end@@Base>:
  40ba37:	endbr64 
  40ba3b:	push   rbp
  40ba3c:	mov    rbp,rsp
  40ba3f:	mov    QWORD PTR [rbp-0x8],rdi
  40ba43:	mov    rax,QWORD PTR [rbp-0x8]
  40ba47:	mov    eax,DWORD PTR [rax+0xf4]
  40ba4d:	pop    rbp
  40ba4e:	ret    

000000000040ba4f <flatcc_builder_set_vtable_cache_limit@@Base>:
  40ba4f:	endbr64 
  40ba53:	push   rbp
  40ba54:	mov    rbp,rsp
  40ba57:	mov    QWORD PTR [rbp-0x8],rdi
  40ba5b:	mov    QWORD PTR [rbp-0x10],rsi
  40ba5f:	mov    rax,QWORD PTR [rbp-0x8]
  40ba63:	mov    rdx,QWORD PTR [rbp-0x10]
  40ba67:	mov    QWORD PTR [rax+0x118],rdx
  40ba6e:	nop
  40ba6f:	pop    rbp
  40ba70:	ret    

000000000040ba71 <flatcc_builder_set_identifier@@Base>:
  40ba71:	endbr64 
  40ba75:	push   rbp
  40ba76:	mov    rbp,rsp
  40ba79:	mov    QWORD PTR [rbp-0x8],rdi
  40ba7d:	mov    QWORD PTR [rbp-0x10],rsi
  40ba81:	cmp    QWORD PTR [rbp-0x10],0x0
  40ba86:	je     40ba8e <flatcc_builder_set_identifier@@Base+0x1d>
  40ba88:	mov    rax,QWORD PTR [rbp-0x10]
  40ba8c:	jmp    40ba95 <flatcc_builder_set_identifier@@Base+0x24>
  40ba8e:	mov    rax,0x4143a0
  40ba95:	mov    rdx,QWORD PTR [rbp-0x8]
  40ba99:	add    rdx,0x110
  40baa0:	mov    eax,DWORD PTR [rax]
  40baa2:	mov    DWORD PTR [rdx],eax
  40baa4:	nop
  40baa5:	pop    rbp
  40baa6:	ret    

000000000040baa7 <flatcc_builder_get_type@@Base>:
  40baa7:	endbr64 
  40baab:	push   rbp
  40baac:	mov    rbp,rsp
  40baaf:	mov    QWORD PTR [rbp-0x8],rdi
  40bab3:	mov    rax,QWORD PTR [rbp-0x8]
  40bab7:	mov    rax,QWORD PTR [rax+0x30]
  40babb:	test   rax,rax
  40babe:	je     40bad1 <flatcc_builder_get_type@@Base+0x2a>
  40bac0:	mov    rax,QWORD PTR [rbp-0x8]
  40bac4:	mov    rax,QWORD PTR [rax+0x30]
  40bac8:	movzx  eax,WORD PTR [rax+0xe]
  40bacc:	movzx  eax,ax
  40bacf:	jmp    40bad6 <flatcc_builder_get_type@@Base+0x2f>
  40bad1:	mov    eax,0x0
  40bad6:	pop    rbp
  40bad7:	ret    

000000000040bad8 <flatcc_builder_get_type_at@@Base>:
  40bad8:	endbr64 
  40badc:	push   rbp
  40badd:	mov    rbp,rsp
  40bae0:	mov    QWORD PTR [rbp-0x8],rdi
  40bae4:	mov    DWORD PTR [rbp-0xc],esi
  40bae7:	cmp    DWORD PTR [rbp-0xc],0x0
  40baeb:	jle    40bafc <flatcc_builder_get_type_at@@Base+0x24>
  40baed:	mov    rax,QWORD PTR [rbp-0x8]
  40baf1:	mov    eax,DWORD PTR [rax+0x104]
  40baf7:	cmp    DWORD PTR [rbp-0xc],eax
  40bafa:	jle    40bb03 <flatcc_builder_get_type_at@@Base+0x2b>
  40bafc:	mov    eax,0x0
  40bb01:	jmp    40bb37 <flatcc_builder_get_type_at@@Base+0x5f>
  40bb03:	mov    rax,QWORD PTR [rbp-0x8]
  40bb07:	mov    rcx,QWORD PTR [rax+0x30]
  40bb0b:	mov    rax,QWORD PTR [rbp-0x8]
  40bb0f:	mov    eax,DWORD PTR [rax+0x104]
  40bb15:	mov    edx,DWORD PTR [rbp-0xc]
  40bb18:	sub    edx,eax
  40bb1a:	mov    eax,edx
  40bb1c:	movsxd rdx,eax
  40bb1f:	mov    rax,rdx
  40bb22:	shl    rax,0x3
  40bb26:	add    rax,rdx
  40bb29:	shl    rax,0x2
  40bb2d:	add    rax,rcx
  40bb30:	movzx  eax,WORD PTR [rax+0xe]
  40bb34:	movzx  eax,ax
  40bb37:	pop    rbp
  40bb38:	ret    

000000000040bb39 <flatcc_builder_get_direct_buffer@@Base>:
  40bb39:	endbr64 
  40bb3d:	push   rbp
  40bb3e:	mov    rbp,rsp
  40bb41:	sub    rsp,0x10
  40bb45:	mov    QWORD PTR [rbp-0x8],rdi
  40bb49:	mov    QWORD PTR [rbp-0x10],rsi
  40bb4d:	mov    rax,QWORD PTR [rbp-0x8]
  40bb51:	mov    eax,DWORD PTR [rax+0x128]
  40bb57:	test   eax,eax
  40bb59:	je     40bb77 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  40bb5b:	mov    rax,QWORD PTR [rbp-0x8]
  40bb5f:	lea    rdx,[rax+0x130]
  40bb66:	mov    rax,QWORD PTR [rbp-0x10]
  40bb6a:	mov    rsi,rax
  40bb6d:	mov    rdi,rdx
  40bb70:	call   40679d <main@@Base+0x141>
  40bb75:	jmp    40bb8e <flatcc_builder_get_direct_buffer@@Base+0x55>
  40bb77:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb7c:	je     40bb89 <flatcc_builder_get_direct_buffer@@Base+0x50>
  40bb7e:	mov    rax,QWORD PTR [rbp-0x10]
  40bb82:	mov    QWORD PTR [rax],0x0
  40bb89:	mov    eax,0x0
  40bb8e:	leave  
  40bb8f:	ret    

000000000040bb90 <flatcc_builder_copy_buffer@@Base>:
  40bb90:	endbr64 
  40bb94:	push   rbp
  40bb95:	mov    rbp,rsp
  40bb98:	sub    rsp,0x20
  40bb9c:	mov    QWORD PTR [rbp-0x8],rdi
  40bba0:	mov    QWORD PTR [rbp-0x10],rsi
  40bba4:	mov    QWORD PTR [rbp-0x18],rdx
  40bba8:	mov    rax,QWORD PTR [rbp-0x8]
  40bbac:	mov    eax,DWORD PTR [rax+0x128]
  40bbb2:	test   eax,eax
  40bbb4:	jne    40bbbd <flatcc_builder_copy_buffer@@Base+0x2d>
  40bbb6:	mov    eax,0x0
  40bbbb:	jmp    40bc09 <flatcc_builder_copy_buffer@@Base+0x79>
  40bbbd:	mov    rax,QWORD PTR [rbp-0x8]
  40bbc1:	lea    rcx,[rax+0x130]
  40bbc8:	mov    rdx,QWORD PTR [rbp-0x18]
  40bbcc:	mov    rax,QWORD PTR [rbp-0x10]
  40bbd0:	mov    rsi,rax
  40bbd3:	mov    rdi,rcx
  40bbd6:	call   40c844 <flatcc_emitter_copy_buffer@@Base>
  40bbdb:	mov    QWORD PTR [rbp-0x10],rax
  40bbdf:	cmp    QWORD PTR [rbp-0x10],0x0
  40bbe4:	jne    40bc05 <flatcc_builder_copy_buffer@@Base+0x75>
  40bbe6:	lea    rcx,[rip+0x9493]        # 415080 <flatcc_builder_padding_base@@Base+0xce0>
  40bbed:	mov    edx,0x786
  40bbf2:	lea    rsi,[rip+0x89a7]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40bbf9:	lea    rdi,[rip+0x8ddc]        # 4149dc <flatcc_builder_padding_base@@Base+0x63c>
  40bc00:	call   403150 <__assert_fail@plt>
  40bc05:	mov    rax,QWORD PTR [rbp-0x10]
  40bc09:	leave  
  40bc0a:	ret    

000000000040bc0b <flatcc_builder_finalize_buffer@@Base>:
  40bc0b:	endbr64 
  40bc0f:	push   rbp
  40bc10:	mov    rbp,rsp
  40bc13:	sub    rsp,0x20
  40bc17:	mov    QWORD PTR [rbp-0x18],rdi
  40bc1b:	mov    QWORD PTR [rbp-0x20],rsi
  40bc1f:	mov    rax,QWORD PTR [rbp-0x18]
  40bc23:	mov    rdi,rax
  40bc26:	call   40b9f7 <flatcc_builder_get_buffer_size@@Base>
  40bc2b:	mov    QWORD PTR [rbp-0x10],rax
  40bc2f:	cmp    QWORD PTR [rbp-0x20],0x0
  40bc34:	je     40bc41 <flatcc_builder_finalize_buffer@@Base+0x36>
  40bc36:	mov    rax,QWORD PTR [rbp-0x20]
  40bc3a:	mov    rdx,QWORD PTR [rbp-0x10]
  40bc3e:	mov    QWORD PTR [rax],rdx
  40bc41:	mov    rax,QWORD PTR [rbp-0x10]
  40bc45:	mov    rdi,rax
  40bc48:	call   4031b0 <malloc@plt>
  40bc4d:	mov    QWORD PTR [rbp-0x8],rax
  40bc51:	cmp    QWORD PTR [rbp-0x8],0x0
  40bc56:	jne    40bc77 <flatcc_builder_finalize_buffer@@Base+0x6c>
  40bc58:	lea    rcx,[rip+0x9441]        # 4150a0 <flatcc_builder_padding_base@@Base+0xd00>
  40bc5f:	mov    edx,0x798
  40bc64:	lea    rsi,[rip+0x8935]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40bc6b:	lea    rdi,[rip+0x898e]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40bc72:	call   403150 <__assert_fail@plt>
  40bc77:	mov    rdx,QWORD PTR [rbp-0x10]
  40bc7b:	mov    rcx,QWORD PTR [rbp-0x8]
  40bc7f:	mov    rax,QWORD PTR [rbp-0x18]
  40bc83:	mov    rsi,rcx
  40bc86:	mov    rdi,rax
  40bc89:	call   40bb90 <flatcc_builder_copy_buffer@@Base>
  40bc8e:	test   rax,rax
  40bc91:	jne    40bcb2 <flatcc_builder_finalize_buffer@@Base+0xa7>
  40bc93:	lea    rcx,[rip+0x9406]        # 4150a0 <flatcc_builder_padding_base@@Base+0xd00>
  40bc9a:	mov    edx,0x79c
  40bc9f:	lea    rsi,[rip+0x88fa]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40bca6:	lea    rdi,[rip+0x8953]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40bcad:	call   403150 <__assert_fail@plt>
  40bcb2:	nop
  40bcb3:	endbr64 
  40bcb7:	cmp    QWORD PTR [rbp-0x8],0x0
  40bcbc:	jne    40bcd0 <flatcc_builder_finalize_buffer@@Base+0xc5>
  40bcbe:	cmp    QWORD PTR [rbp-0x20],0x0
  40bcc3:	je     40bcd0 <flatcc_builder_finalize_buffer@@Base+0xc5>
  40bcc5:	mov    rax,QWORD PTR [rbp-0x20]
  40bcc9:	mov    QWORD PTR [rax],0x0
  40bcd0:	mov    rax,QWORD PTR [rbp-0x8]
  40bcd4:	leave  
  40bcd5:	ret    

000000000040bcd6 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40bcd6:	endbr64 
  40bcda:	push   rbp
  40bcdb:	mov    rbp,rsp
  40bcde:	sub    rsp,0x30
  40bce2:	mov    QWORD PTR [rbp-0x28],rdi
  40bce6:	mov    QWORD PTR [rbp-0x30],rsi
  40bcea:	mov    rax,QWORD PTR [rbp-0x28]
  40bcee:	mov    rdi,rax
  40bcf1:	call   40b9f7 <flatcc_builder_get_buffer_size@@Base>
  40bcf6:	mov    QWORD PTR [rbp-0x10],rax
  40bcfa:	cmp    QWORD PTR [rbp-0x30],0x0
  40bcff:	je     40bd0c <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  40bd01:	mov    rax,QWORD PTR [rbp-0x30]
  40bd05:	mov    rdx,QWORD PTR [rbp-0x10]
  40bd09:	mov    QWORD PTR [rax],rdx
  40bd0c:	mov    rax,QWORD PTR [rbp-0x28]
  40bd10:	mov    rdi,rax
  40bd13:	call   40b931 <flatcc_builder_get_buffer_alignment@@Base>
  40bd18:	movzx  eax,ax
  40bd1b:	mov    QWORD PTR [rbp-0x8],rax
  40bd1f:	mov    rdx,QWORD PTR [rbp-0x10]
  40bd23:	mov    rax,QWORD PTR [rbp-0x8]
  40bd27:	add    rax,rdx
  40bd2a:	lea    rdx,[rax-0x1]
  40bd2e:	mov    rax,QWORD PTR [rbp-0x8]
  40bd32:	neg    rax
  40bd35:	and    rax,rdx
  40bd38:	mov    QWORD PTR [rbp-0x10],rax
  40bd3c:	mov    rdx,QWORD PTR [rbp-0x10]
  40bd40:	mov    rax,QWORD PTR [rbp-0x8]
  40bd44:	mov    rsi,rdx
  40bd47:	mov    rdi,rax
  40bd4a:	call   4066e9 <main@@Base+0x8d>
  40bd4f:	mov    QWORD PTR [rbp-0x18],rax
  40bd53:	cmp    QWORD PTR [rbp-0x18],0x0
  40bd58:	je     40bd8c <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40bd5a:	mov    rdx,QWORD PTR [rbp-0x10]
  40bd5e:	mov    rcx,QWORD PTR [rbp-0x18]
  40bd62:	mov    rax,QWORD PTR [rbp-0x28]
  40bd66:	mov    rsi,rcx
  40bd69:	mov    rdi,rax
  40bd6c:	call   40bb90 <flatcc_builder_copy_buffer@@Base>
  40bd71:	test   rax,rax
  40bd74:	jne    40bd8f <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  40bd76:	mov    rax,QWORD PTR [rbp-0x18]
  40bd7a:	mov    rdi,rax
  40bd7d:	call   403110 <free@plt>
  40bd82:	mov    QWORD PTR [rbp-0x18],0x0
  40bd8a:	jmp    40bd90 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  40bd8c:	nop
  40bd8d:	jmp    40bd90 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  40bd8f:	nop
  40bd90:	cmp    QWORD PTR [rbp-0x18],0x0
  40bd95:	jne    40bda9 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  40bd97:	cmp    QWORD PTR [rbp-0x30],0x0
  40bd9c:	je     40bda9 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  40bd9e:	mov    rax,QWORD PTR [rbp-0x30]
  40bda2:	mov    QWORD PTR [rax],0x0
  40bda9:	mov    rax,QWORD PTR [rbp-0x18]
  40bdad:	leave  
  40bdae:	ret    

000000000040bdaf <flatcc_builder_aligned_alloc@@Base>:
  40bdaf:	endbr64 
  40bdb3:	push   rbp
  40bdb4:	mov    rbp,rsp
  40bdb7:	sub    rsp,0x10
  40bdbb:	mov    QWORD PTR [rbp-0x8],rdi
  40bdbf:	mov    QWORD PTR [rbp-0x10],rsi
  40bdc3:	mov    rdx,QWORD PTR [rbp-0x10]
  40bdc7:	mov    rax,QWORD PTR [rbp-0x8]
  40bdcb:	mov    rsi,rdx
  40bdce:	mov    rdi,rax
  40bdd1:	call   4066e9 <main@@Base+0x8d>
  40bdd6:	leave  
  40bdd7:	ret    

000000000040bdd8 <flatcc_builder_aligned_free@@Base>:
  40bdd8:	endbr64 
  40bddc:	push   rbp
  40bddd:	mov    rbp,rsp
  40bde0:	sub    rsp,0x10
  40bde4:	mov    QWORD PTR [rbp-0x8],rdi
  40bde8:	mov    rax,QWORD PTR [rbp-0x8]
  40bdec:	mov    rdi,rax
  40bdef:	call   403110 <free@plt>
  40bdf4:	nop
  40bdf5:	leave  
  40bdf6:	ret    

000000000040bdf7 <flatcc_builder_get_emit_context@@Base>:
  40bdf7:	endbr64 
  40bdfb:	push   rbp
  40bdfc:	mov    rbp,rsp
  40bdff:	mov    QWORD PTR [rbp-0x8],rdi
  40be03:	mov    rax,QWORD PTR [rbp-0x8]
  40be07:	mov    rax,QWORD PTR [rax+0x38]
  40be0b:	pop    rbp
  40be0c:	ret    
  40be0d:	endbr64 
  40be11:	push   rbp
  40be12:	mov    rbp,rsp
  40be15:	sub    rsp,0x20
  40be19:	mov    QWORD PTR [rbp-0x18],rdi
  40be1d:	mov    QWORD PTR [rbp-0x8],0x0
  40be25:	mov    rax,QWORD PTR [rbp-0x18]
  40be29:	mov    rax,QWORD PTR [rax]
  40be2c:	test   rax,rax
  40be2f:	je     40be8d <flatcc_builder_get_emit_context@@Base+0x96>
  40be31:	mov    rax,QWORD PTR [rbp-0x18]
  40be35:	mov    rax,QWORD PTR [rax]
  40be38:	mov    rdx,QWORD PTR [rax+0xb88]
  40be3f:	mov    rax,QWORD PTR [rbp-0x18]
  40be43:	mov    rax,QWORD PTR [rax+0x8]
  40be47:	cmp    rdx,rax
  40be4a:	je     40be8d <flatcc_builder_get_emit_context@@Base+0x96>
  40be4c:	mov    rax,QWORD PTR [rbp-0x18]
  40be50:	mov    rax,QWORD PTR [rax]
  40be53:	mov    edx,DWORD PTR [rax+0xb90]
  40be59:	mov    rax,QWORD PTR [rbp-0x18]
  40be5d:	mov    rax,QWORD PTR [rax]
  40be60:	mov    rax,QWORD PTR [rax+0xb88]
  40be67:	sub    edx,0xb80
  40be6d:	mov    DWORD PTR [rax+0xb90],edx
  40be73:	mov    rax,QWORD PTR [rbp-0x18]
  40be77:	mov    rax,QWORD PTR [rax]
  40be7a:	mov    rdx,QWORD PTR [rax+0xb88]
  40be81:	mov    rax,QWORD PTR [rbp-0x18]
  40be85:	mov    QWORD PTR [rax],rdx
  40be88:	jmp    40bfc5 <flatcc_builder_get_emit_context@@Base+0x1ce>
  40be8d:	mov    edi,0xb98
  40be92:	call   4031b0 <malloc@plt>
  40be97:	mov    QWORD PTR [rbp-0x8],rax
  40be9b:	cmp    QWORD PTR [rbp-0x8],0x0
  40bea0:	jne    40beac <flatcc_builder_get_emit_context@@Base+0xb5>
  40bea2:	mov    eax,0xffffffff
  40bea7:	jmp    40c013 <flatcc_builder_get_emit_context@@Base+0x21c>
  40beac:	mov    rax,QWORD PTR [rbp-0x18]
  40beb0:	mov    rax,QWORD PTR [rax+0x38]
  40beb4:	lea    rdx,[rax+0xb80]
  40bebb:	mov    rax,QWORD PTR [rbp-0x18]
  40bebf:	mov    QWORD PTR [rax+0x38],rdx
  40bec3:	mov    rax,QWORD PTR [rbp-0x18]
  40bec7:	mov    rax,QWORD PTR [rax]
  40beca:	test   rax,rax
  40becd:	je     40bf29 <flatcc_builder_get_emit_context@@Base+0x132>
  40becf:	mov    rax,QWORD PTR [rbp-0x18]
  40bed3:	mov    rdx,QWORD PTR [rax+0x8]
  40bed7:	mov    rax,QWORD PTR [rbp-0x8]
  40bedb:	mov    QWORD PTR [rax+0xb88],rdx
  40bee2:	mov    rax,QWORD PTR [rbp-0x18]
  40bee6:	mov    rdx,QWORD PTR [rax]
  40bee9:	mov    rax,QWORD PTR [rbp-0x8]
  40beed:	mov    QWORD PTR [rax+0xb80],rdx
  40bef4:	mov    rax,QWORD PTR [rbp-0x18]
  40bef8:	mov    rax,QWORD PTR [rax]
  40befb:	mov    rdx,QWORD PTR [rbp-0x8]
  40beff:	mov    QWORD PTR [rax+0xb88],rdx
  40bf06:	mov    rax,QWORD PTR [rbp-0x18]
  40bf0a:	mov    rax,QWORD PTR [rax+0x8]
  40bf0e:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf12:	mov    QWORD PTR [rax+0xb80],rdx
  40bf19:	mov    rax,QWORD PTR [rbp-0x18]
  40bf1d:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf21:	mov    QWORD PTR [rax],rdx
  40bf24:	jmp    40bfc5 <flatcc_builder_get_emit_context@@Base+0x1ce>
  40bf29:	mov    rax,QWORD PTR [rbp-0x18]
  40bf2d:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf31:	mov    QWORD PTR [rax],rdx
  40bf34:	mov    rax,QWORD PTR [rbp-0x18]
  40bf38:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf3c:	mov    QWORD PTR [rax+0x8],rdx
  40bf40:	mov    rax,QWORD PTR [rbp-0x8]
  40bf44:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf48:	mov    QWORD PTR [rax+0xb80],rdx
  40bf4f:	mov    rax,QWORD PTR [rbp-0x8]
  40bf53:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf57:	mov    QWORD PTR [rax+0xb88],rdx
  40bf5e:	mov    rax,QWORD PTR [rbp-0x18]
  40bf62:	mov    rax,QWORD PTR [rax]
  40bf65:	lea    rdx,[rax+0x5c0]
  40bf6c:	mov    rax,QWORD PTR [rbp-0x18]
  40bf70:	mov    QWORD PTR [rax+0x10],rdx
  40bf74:	mov    rax,QWORD PTR [rbp-0x18]
  40bf78:	mov    rdx,QWORD PTR [rax+0x10]
  40bf7c:	mov    rax,QWORD PTR [rbp-0x18]
  40bf80:	mov    QWORD PTR [rax+0x20],rdx
  40bf84:	mov    rax,QWORD PTR [rbp-0x18]
  40bf88:	mov    QWORD PTR [rax+0x18],0x5c0
  40bf90:	mov    rax,QWORD PTR [rbp-0x18]
  40bf94:	mov    rax,QWORD PTR [rax+0x18]
  40bf98:	mov    edx,0xb80
  40bf9d:	sub    rdx,rax
  40bfa0:	mov    rax,QWORD PTR [rbp-0x18]
  40bfa4:	mov    QWORD PTR [rax+0x28],rdx
  40bfa8:	mov    rax,QWORD PTR [rbp-0x18]
  40bfac:	mov    rax,QWORD PTR [rax+0x18]
  40bfb0:	neg    eax
  40bfb2:	mov    edx,eax
  40bfb4:	mov    rax,QWORD PTR [rbp-0x8]
  40bfb8:	mov    DWORD PTR [rax+0xb90],edx
  40bfbe:	mov    eax,0x0
  40bfc3:	jmp    40c013 <flatcc_builder_get_emit_context@@Base+0x21c>
  40bfc5:	mov    rax,QWORD PTR [rbp-0x18]
  40bfc9:	mov    rax,QWORD PTR [rax]
  40bfcc:	lea    rdx,[rax+0xb80]
  40bfd3:	mov    rax,QWORD PTR [rbp-0x18]
  40bfd7:	mov    QWORD PTR [rax+0x10],rdx
  40bfdb:	mov    rax,QWORD PTR [rbp-0x18]
  40bfdf:	mov    QWORD PTR [rax+0x18],0xb80
  40bfe7:	mov    rax,QWORD PTR [rbp-0x18]
  40bfeb:	mov    rax,QWORD PTR [rax]
  40bfee:	mov    rax,QWORD PTR [rax+0xb80]
  40bff5:	mov    edx,DWORD PTR [rax+0xb90]
  40bffb:	mov    rax,QWORD PTR [rbp-0x18]
  40bfff:	mov    rax,QWORD PTR [rax]
  40c002:	sub    edx,0xb80
  40c008:	mov    DWORD PTR [rax+0xb90],edx
  40c00e:	mov    eax,0x0
  40c013:	leave  
  40c014:	ret    
  40c015:	endbr64 
  40c019:	push   rbp
  40c01a:	mov    rbp,rsp
  40c01d:	sub    rsp,0x20
  40c021:	mov    QWORD PTR [rbp-0x18],rdi
  40c025:	mov    QWORD PTR [rbp-0x8],0x0
  40c02d:	mov    rax,QWORD PTR [rbp-0x18]
  40c031:	mov    rax,QWORD PTR [rax+0x8]
  40c035:	test   rax,rax
  40c038:	je     40c071 <flatcc_builder_get_emit_context@@Base+0x27a>
  40c03a:	mov    rax,QWORD PTR [rbp-0x18]
  40c03e:	mov    rax,QWORD PTR [rax+0x8]
  40c042:	mov    rdx,QWORD PTR [rax+0xb80]
  40c049:	mov    rax,QWORD PTR [rbp-0x18]
  40c04d:	mov    rax,QWORD PTR [rax]
  40c050:	cmp    rdx,rax
  40c053:	je     40c071 <flatcc_builder_get_emit_context@@Base+0x27a>
  40c055:	mov    rax,QWORD PTR [rbp-0x18]
  40c059:	mov    rax,QWORD PTR [rax+0x8]
  40c05d:	mov    rdx,QWORD PTR [rax+0xb80]
  40c064:	mov    rax,QWORD PTR [rbp-0x18]
  40c068:	mov    QWORD PTR [rax+0x8],rdx
  40c06c:	jmp    40c1ab <flatcc_builder_get_emit_context@@Base+0x3b4>
  40c071:	mov    edi,0xb98
  40c076:	call   4031b0 <malloc@plt>
  40c07b:	mov    QWORD PTR [rbp-0x8],rax
  40c07f:	cmp    QWORD PTR [rbp-0x8],0x0
  40c084:	jne    40c090 <flatcc_builder_get_emit_context@@Base+0x299>
  40c086:	mov    eax,0xffffffff
  40c08b:	jmp    40c1f8 <flatcc_builder_get_emit_context@@Base+0x401>
  40c090:	mov    rax,QWORD PTR [rbp-0x18]
  40c094:	mov    rax,QWORD PTR [rax+0x38]
  40c098:	lea    rdx,[rax+0xb80]
  40c09f:	mov    rax,QWORD PTR [rbp-0x18]
  40c0a3:	mov    QWORD PTR [rax+0x38],rdx
  40c0a7:	mov    rax,QWORD PTR [rbp-0x18]
  40c0ab:	mov    rax,QWORD PTR [rax+0x8]
  40c0af:	test   rax,rax
  40c0b2:	je     40c10f <flatcc_builder_get_emit_context@@Base+0x318>
  40c0b4:	mov    rax,QWORD PTR [rbp-0x18]
  40c0b8:	mov    rdx,QWORD PTR [rax+0x8]
  40c0bc:	mov    rax,QWORD PTR [rbp-0x8]
  40c0c0:	mov    QWORD PTR [rax+0xb88],rdx
  40c0c7:	mov    rax,QWORD PTR [rbp-0x18]
  40c0cb:	mov    rdx,QWORD PTR [rax]
  40c0ce:	mov    rax,QWORD PTR [rbp-0x8]
  40c0d2:	mov    QWORD PTR [rax+0xb80],rdx
  40c0d9:	mov    rax,QWORD PTR [rbp-0x18]
  40c0dd:	mov    rax,QWORD PTR [rax]
  40c0e0:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0e4:	mov    QWORD PTR [rax+0xb88],rdx
  40c0eb:	mov    rax,QWORD PTR [rbp-0x18]
  40c0ef:	mov    rax,QWORD PTR [rax+0x8]
  40c0f3:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0f7:	mov    QWORD PTR [rax+0xb80],rdx
  40c0fe:	mov    rax,QWORD PTR [rbp-0x18]
  40c102:	mov    rdx,QWORD PTR [rbp-0x8]
  40c106:	mov    QWORD PTR [rax+0x8],rdx
  40c10a:	jmp    40c1ab <flatcc_builder_get_emit_context@@Base+0x3b4>
  40c10f:	mov    rax,QWORD PTR [rbp-0x18]
  40c113:	mov    rdx,QWORD PTR [rbp-0x8]
  40c117:	mov    QWORD PTR [rax],rdx
  40c11a:	mov    rax,QWORD PTR [rbp-0x18]
  40c11e:	mov    rdx,QWORD PTR [rbp-0x8]
  40c122:	mov    QWORD PTR [rax+0x8],rdx
  40c126:	mov    rax,QWORD PTR [rbp-0x8]
  40c12a:	mov    rdx,QWORD PTR [rbp-0x8]
  40c12e:	mov    QWORD PTR [rax+0xb80],rdx
  40c135:	mov    rax,QWORD PTR [rbp-0x8]
  40c139:	mov    rdx,QWORD PTR [rbp-0x8]
  40c13d:	mov    QWORD PTR [rax+0xb88],rdx
  40c144:	mov    rax,QWORD PTR [rbp-0x18]
  40c148:	mov    rax,QWORD PTR [rax]
  40c14b:	lea    rdx,[rax+0x5c0]
  40c152:	mov    rax,QWORD PTR [rbp-0x18]
  40c156:	mov    QWORD PTR [rax+0x10],rdx
  40c15a:	mov    rax,QWORD PTR [rbp-0x18]
  40c15e:	mov    rdx,QWORD PTR [rax+0x10]
  40c162:	mov    rax,QWORD PTR [rbp-0x18]
  40c166:	mov    QWORD PTR [rax+0x20],rdx
  40c16a:	mov    rax,QWORD PTR [rbp-0x18]
  40c16e:	mov    QWORD PTR [rax+0x18],0x5c0
  40c176:	mov    rax,QWORD PTR [rbp-0x18]
  40c17a:	mov    rax,QWORD PTR [rax+0x18]
  40c17e:	mov    edx,0xb80
  40c183:	sub    rdx,rax
  40c186:	mov    rax,QWORD PTR [rbp-0x18]
  40c18a:	mov    QWORD PTR [rax+0x28],rdx
  40c18e:	mov    rax,QWORD PTR [rbp-0x18]
  40c192:	mov    rax,QWORD PTR [rax+0x18]
  40c196:	neg    eax
  40c198:	mov    edx,eax
  40c19a:	mov    rax,QWORD PTR [rbp-0x8]
  40c19e:	mov    DWORD PTR [rax+0xb90],edx
  40c1a4:	mov    eax,0x0
  40c1a9:	jmp    40c1f8 <flatcc_builder_get_emit_context@@Base+0x401>
  40c1ab:	mov    rax,QWORD PTR [rbp-0x18]
  40c1af:	mov    rax,QWORD PTR [rax+0x8]
  40c1b3:	mov    rdx,rax
  40c1b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ba:	mov    QWORD PTR [rax+0x20],rdx
  40c1be:	mov    rax,QWORD PTR [rbp-0x18]
  40c1c2:	mov    QWORD PTR [rax+0x28],0xb80
  40c1ca:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ce:	mov    rax,QWORD PTR [rax+0x8]
  40c1d2:	mov    rax,QWORD PTR [rax+0xb88]
  40c1d9:	mov    edx,DWORD PTR [rax+0xb90]
  40c1df:	mov    rax,QWORD PTR [rbp-0x18]
  40c1e3:	mov    rax,QWORD PTR [rax+0x8]
  40c1e7:	add    edx,0xb80
  40c1ed:	mov    DWORD PTR [rax+0xb90],edx
  40c1f3:	mov    eax,0x0
  40c1f8:	leave  
  40c1f9:	ret    
  40c1fa:	endbr64 
  40c1fe:	push   rbp
  40c1ff:	mov    rbp,rsp
  40c202:	sub    rsp,0x30
  40c206:	mov    QWORD PTR [rbp-0x18],rdi
  40c20a:	mov    QWORD PTR [rbp-0x20],rsi
  40c20e:	mov    QWORD PTR [rbp-0x28],rdx
  40c212:	mov    rax,QWORD PTR [rbp-0x28]
  40c216:	add    QWORD PTR [rbp-0x20],rax
  40c21a:	jmp    40c2be <flatcc_builder_get_emit_context@@Base+0x4c7>
  40c21f:	mov    rax,QWORD PTR [rbp-0x28]
  40c223:	mov    QWORD PTR [rbp-0x8],rax
  40c227:	mov    rax,QWORD PTR [rbp-0x18]
  40c22b:	mov    rax,QWORD PTR [rax+0x18]
  40c22f:	cmp    QWORD PTR [rbp-0x8],rax
  40c233:	jbe    40c25f <flatcc_builder_get_emit_context@@Base+0x468>
  40c235:	mov    rax,QWORD PTR [rbp-0x18]
  40c239:	mov    rax,QWORD PTR [rax+0x18]
  40c23d:	mov    QWORD PTR [rbp-0x8],rax
  40c241:	cmp    QWORD PTR [rbp-0x8],0x0
  40c246:	jne    40c25f <flatcc_builder_get_emit_context@@Base+0x468>
  40c248:	mov    rax,QWORD PTR [rbp-0x18]
  40c24c:	mov    rdi,rax
  40c24f:	call   40be0d <flatcc_builder_get_emit_context@@Base+0x16>
  40c254:	test   eax,eax
  40c256:	je     40c2be <flatcc_builder_get_emit_context@@Base+0x4c7>
  40c258:	mov    eax,0xffffffff
  40c25d:	jmp    40c2ce <flatcc_builder_get_emit_context@@Base+0x4d7>
  40c25f:	mov    rax,QWORD PTR [rbp-0x18]
  40c263:	mov    rax,QWORD PTR [rax+0x10]
  40c267:	mov    rdx,QWORD PTR [rbp-0x8]
  40c26b:	neg    rdx
  40c26e:	add    rdx,rax
  40c271:	mov    rax,QWORD PTR [rbp-0x18]
  40c275:	mov    QWORD PTR [rax+0x10],rdx
  40c279:	mov    rax,QWORD PTR [rbp-0x18]
  40c27d:	mov    rax,QWORD PTR [rax+0x18]
  40c281:	sub    rax,QWORD PTR [rbp-0x8]
  40c285:	mov    rdx,rax
  40c288:	mov    rax,QWORD PTR [rbp-0x18]
  40c28c:	mov    QWORD PTR [rax+0x18],rdx
  40c290:	mov    rax,QWORD PTR [rbp-0x8]
  40c294:	neg    rax
  40c297:	add    QWORD PTR [rbp-0x20],rax
  40c29b:	mov    rax,QWORD PTR [rbp-0x8]
  40c29f:	sub    QWORD PTR [rbp-0x28],rax
  40c2a3:	mov    rax,QWORD PTR [rbp-0x18]
  40c2a7:	mov    rax,QWORD PTR [rax+0x10]
  40c2ab:	mov    rdx,QWORD PTR [rbp-0x8]
  40c2af:	mov    rcx,QWORD PTR [rbp-0x20]
  40c2b3:	mov    rsi,rcx
  40c2b6:	mov    rdi,rax
  40c2b9:	call   4031a0 <memcpy@plt>
  40c2be:	cmp    QWORD PTR [rbp-0x28],0x0
  40c2c3:	jne    40c21f <flatcc_builder_get_emit_context@@Base+0x428>
  40c2c9:	mov    eax,0x0
  40c2ce:	leave  
  40c2cf:	ret    
  40c2d0:	endbr64 
  40c2d4:	push   rbp
  40c2d5:	mov    rbp,rsp
  40c2d8:	sub    rsp,0x30
  40c2dc:	mov    QWORD PTR [rbp-0x18],rdi
  40c2e0:	mov    QWORD PTR [rbp-0x20],rsi
  40c2e4:	mov    QWORD PTR [rbp-0x28],rdx
  40c2e8:	jmp    40c386 <flatcc_builder_get_emit_context@@Base+0x58f>
  40c2ed:	mov    rax,QWORD PTR [rbp-0x28]
  40c2f1:	mov    QWORD PTR [rbp-0x8],rax
  40c2f5:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f9:	mov    rax,QWORD PTR [rax+0x28]
  40c2fd:	cmp    QWORD PTR [rbp-0x8],rax
  40c301:	jbe    40c32d <flatcc_builder_get_emit_context@@Base+0x536>
  40c303:	mov    rax,QWORD PTR [rbp-0x18]
  40c307:	mov    rax,QWORD PTR [rax+0x28]
  40c30b:	mov    QWORD PTR [rbp-0x8],rax
  40c30f:	cmp    QWORD PTR [rbp-0x8],0x0
  40c314:	jne    40c32d <flatcc_builder_get_emit_context@@Base+0x536>
  40c316:	mov    rax,QWORD PTR [rbp-0x18]
  40c31a:	mov    rdi,rax
  40c31d:	call   40c015 <flatcc_builder_get_emit_context@@Base+0x21e>
  40c322:	test   eax,eax
  40c324:	je     40c386 <flatcc_builder_get_emit_context@@Base+0x58f>
  40c326:	mov    eax,0xffffffff
  40c32b:	jmp    40c396 <flatcc_builder_get_emit_context@@Base+0x59f>
  40c32d:	mov    rax,QWORD PTR [rbp-0x18]
  40c331:	mov    rax,QWORD PTR [rax+0x20]
  40c335:	mov    rdx,QWORD PTR [rbp-0x8]
  40c339:	mov    rcx,QWORD PTR [rbp-0x20]
  40c33d:	mov    rsi,rcx
  40c340:	mov    rdi,rax
  40c343:	call   4031a0 <memcpy@plt>
  40c348:	mov    rax,QWORD PTR [rbp-0x8]
  40c34c:	sub    QWORD PTR [rbp-0x28],rax
  40c350:	mov    rax,QWORD PTR [rbp-0x8]
  40c354:	add    QWORD PTR [rbp-0x20],rax
  40c358:	mov    rax,QWORD PTR [rbp-0x18]
  40c35c:	mov    rdx,QWORD PTR [rax+0x20]
  40c360:	mov    rax,QWORD PTR [rbp-0x8]
  40c364:	add    rdx,rax
  40c367:	mov    rax,QWORD PTR [rbp-0x18]
  40c36b:	mov    QWORD PTR [rax+0x20],rdx
  40c36f:	mov    rax,QWORD PTR [rbp-0x18]
  40c373:	mov    rax,QWORD PTR [rax+0x28]
  40c377:	sub    rax,QWORD PTR [rbp-0x8]
  40c37b:	mov    rdx,rax
  40c37e:	mov    rax,QWORD PTR [rbp-0x18]
  40c382:	mov    QWORD PTR [rax+0x28],rdx
  40c386:	cmp    QWORD PTR [rbp-0x28],0x0
  40c38b:	jne    40c2ed <flatcc_builder_get_emit_context@@Base+0x4f6>
  40c391:	mov    eax,0x0
  40c396:	leave  
  40c397:	ret    

000000000040c398 <flatcc_emitter_recycle_page@@Base>:
  40c398:	endbr64 
  40c39c:	push   rbp
  40c39d:	mov    rbp,rsp
  40c3a0:	mov    QWORD PTR [rbp-0x8],rdi
  40c3a4:	mov    QWORD PTR [rbp-0x10],rsi
  40c3a8:	mov    rax,QWORD PTR [rbp-0x8]
  40c3ac:	mov    rax,QWORD PTR [rax]
  40c3af:	cmp    QWORD PTR [rbp-0x10],rax
  40c3b3:	je     40c3c3 <flatcc_emitter_recycle_page@@Base+0x2b>
  40c3b5:	mov    rax,QWORD PTR [rbp-0x8]
  40c3b9:	mov    rax,QWORD PTR [rax+0x8]
  40c3bd:	cmp    QWORD PTR [rbp-0x10],rax
  40c3c1:	jne    40c3cd <flatcc_emitter_recycle_page@@Base+0x35>
  40c3c3:	mov    eax,0xffffffff
  40c3c8:	jmp    40c463 <flatcc_emitter_recycle_page@@Base+0xcb>
  40c3cd:	mov    rax,QWORD PTR [rbp-0x10]
  40c3d1:	mov    rax,QWORD PTR [rax+0xb80]
  40c3d8:	mov    rdx,QWORD PTR [rbp-0x10]
  40c3dc:	mov    rdx,QWORD PTR [rdx+0xb88]
  40c3e3:	mov    QWORD PTR [rax+0xb88],rdx
  40c3ea:	mov    rax,QWORD PTR [rbp-0x10]
  40c3ee:	mov    rax,QWORD PTR [rax+0xb88]
  40c3f5:	mov    rdx,QWORD PTR [rbp-0x10]
  40c3f9:	mov    rdx,QWORD PTR [rdx+0xb80]
  40c400:	mov    QWORD PTR [rax+0xb80],rdx
  40c407:	mov    rax,QWORD PTR [rbp-0x8]
  40c40b:	mov    rax,QWORD PTR [rax]
  40c40e:	mov    rdx,QWORD PTR [rax+0xb88]
  40c415:	mov    rax,QWORD PTR [rbp-0x10]
  40c419:	mov    QWORD PTR [rax+0xb88],rdx
  40c420:	mov    rax,QWORD PTR [rbp-0x8]
  40c424:	mov    rdx,QWORD PTR [rax]
  40c427:	mov    rax,QWORD PTR [rbp-0x10]
  40c42b:	mov    QWORD PTR [rax+0xb80],rdx
  40c432:	mov    rax,QWORD PTR [rbp-0x10]
  40c436:	mov    rax,QWORD PTR [rax+0xb88]
  40c43d:	mov    rdx,QWORD PTR [rbp-0x10]
  40c441:	mov    QWORD PTR [rax+0xb80],rdx
  40c448:	mov    rax,QWORD PTR [rbp-0x10]
  40c44c:	mov    rax,QWORD PTR [rax+0xb80]
  40c453:	mov    rdx,QWORD PTR [rbp-0x10]
  40c457:	mov    QWORD PTR [rax+0xb88],rdx
  40c45e:	mov    eax,0x0
  40c463:	pop    rbp
  40c464:	ret    

000000000040c465 <flatcc_emitter_reset@@Base>:
  40c465:	endbr64 
  40c469:	push   rbp
  40c46a:	mov    rbp,rsp
  40c46d:	sub    rsp,0x20
  40c471:	mov    QWORD PTR [rbp-0x18],rdi
  40c475:	mov    rax,QWORD PTR [rbp-0x18]
  40c479:	mov    rax,QWORD PTR [rax]
  40c47c:	mov    QWORD PTR [rbp-0x8],rax
  40c480:	mov    rax,QWORD PTR [rbp-0x18]
  40c484:	mov    rax,QWORD PTR [rax]
  40c487:	test   rax,rax
  40c48a:	je     40c5f4 <flatcc_emitter_reset@@Base+0x18f>
  40c490:	mov    rax,QWORD PTR [rbp-0x18]
  40c494:	mov    rdx,QWORD PTR [rax]
  40c497:	mov    rax,QWORD PTR [rbp-0x18]
  40c49b:	mov    QWORD PTR [rax+0x8],rdx
  40c49f:	mov    rax,QWORD PTR [rbp-0x18]
  40c4a3:	mov    rax,QWORD PTR [rax]
  40c4a6:	lea    rdx,[rax+0x5c0]
  40c4ad:	mov    rax,QWORD PTR [rbp-0x18]
  40c4b1:	mov    QWORD PTR [rax+0x10],rdx
  40c4b5:	mov    rax,QWORD PTR [rbp-0x18]
  40c4b9:	mov    rdx,QWORD PTR [rax+0x10]
  40c4bd:	mov    rax,QWORD PTR [rbp-0x18]
  40c4c1:	mov    QWORD PTR [rax+0x20],rdx
  40c4c5:	mov    rax,QWORD PTR [rbp-0x18]
  40c4c9:	mov    QWORD PTR [rax+0x18],0x5c0
  40c4d1:	mov    rax,QWORD PTR [rbp-0x18]
  40c4d5:	mov    QWORD PTR [rax+0x28],0x5c0
  40c4dd:	mov    rax,QWORD PTR [rbp-0x18]
  40c4e1:	mov    rax,QWORD PTR [rax+0x18]
  40c4e5:	mov    edx,eax
  40c4e7:	mov    rax,QWORD PTR [rbp-0x18]
  40c4eb:	mov    rax,QWORD PTR [rax]
  40c4ee:	neg    edx
  40c4f0:	mov    DWORD PTR [rax+0xb90],edx
  40c4f6:	mov    rax,QWORD PTR [rbp-0x18]
  40c4fa:	mov    rax,QWORD PTR [rax+0x40]
  40c4fe:	test   rax,rax
  40c501:	jne    40c513 <flatcc_emitter_reset@@Base+0xae>
  40c503:	mov    rax,QWORD PTR [rbp-0x18]
  40c507:	mov    rdx,QWORD PTR [rax+0x30]
  40c50b:	mov    rax,QWORD PTR [rbp-0x18]
  40c50f:	mov    QWORD PTR [rax+0x40],rdx
  40c513:	mov    rax,QWORD PTR [rbp-0x18]
  40c517:	mov    rdx,QWORD PTR [rax+0x40]
  40c51b:	mov    rax,rdx
  40c51e:	add    rax,rax
  40c521:	add    rax,rdx
  40c524:	shr    rax,0x2
  40c528:	mov    rdx,rax
  40c52b:	mov    rax,QWORD PTR [rbp-0x18]
  40c52f:	mov    rax,QWORD PTR [rax+0x30]
  40c533:	shr    rax,0x2
  40c537:	add    rdx,rax
  40c53a:	mov    rax,QWORD PTR [rbp-0x18]
  40c53e:	mov    QWORD PTR [rax+0x40],rdx
  40c542:	mov    rax,QWORD PTR [rbp-0x18]
  40c546:	mov    QWORD PTR [rax+0x30],0x0
  40c54e:	jmp    40c5ba <flatcc_emitter_reset@@Base+0x155>
  40c550:	mov    rax,QWORD PTR [rbp-0x18]
  40c554:	mov    rax,QWORD PTR [rax+0x8]
  40c558:	mov    rax,QWORD PTR [rax+0xb80]
  40c55f:	mov    QWORD PTR [rbp-0x8],rax
  40c563:	mov    rax,QWORD PTR [rbp-0x18]
  40c567:	mov    rax,QWORD PTR [rax+0x8]
  40c56b:	mov    rdx,QWORD PTR [rbp-0x8]
  40c56f:	mov    rdx,QWORD PTR [rdx+0xb80]
  40c576:	mov    QWORD PTR [rax+0xb80],rdx
  40c57d:	mov    rax,QWORD PTR [rbp-0x8]
  40c581:	mov    rax,QWORD PTR [rax+0xb80]
  40c588:	mov    rdx,QWORD PTR [rbp-0x18]
  40c58c:	mov    rdx,QWORD PTR [rdx+0x8]
  40c590:	mov    QWORD PTR [rax+0xb88],rdx
  40c597:	mov    rax,QWORD PTR [rbp-0x8]
  40c59b:	mov    rdi,rax
  40c59e:	call   403110 <free@plt>
  40c5a3:	mov    rax,QWORD PTR [rbp-0x18]
  40c5a7:	mov    rax,QWORD PTR [rax+0x38]
  40c5ab:	lea    rdx,[rax-0xb80]
  40c5b2:	mov    rax,QWORD PTR [rbp-0x18]
  40c5b6:	mov    QWORD PTR [rax+0x38],rdx
  40c5ba:	mov    rax,QWORD PTR [rbp-0x18]
  40c5be:	mov    rax,QWORD PTR [rax+0x40]
  40c5c2:	lea    rdx,[rax+rax*1]
  40c5c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c5ca:	mov    rax,QWORD PTR [rax+0x38]
  40c5ce:	cmp    rdx,rax
  40c5d1:	jae    40c5f5 <flatcc_emitter_reset@@Base+0x190>
  40c5d3:	mov    rax,QWORD PTR [rbp-0x18]
  40c5d7:	mov    rax,QWORD PTR [rax+0x8]
  40c5db:	mov    rdx,QWORD PTR [rax+0xb80]
  40c5e2:	mov    rax,QWORD PTR [rbp-0x18]
  40c5e6:	mov    rax,QWORD PTR [rax]
  40c5e9:	cmp    rdx,rax
  40c5ec:	jne    40c550 <flatcc_emitter_reset@@Base+0xeb>
  40c5f2:	jmp    40c5f5 <flatcc_emitter_reset@@Base+0x190>
  40c5f4:	nop
  40c5f5:	leave  
  40c5f6:	ret    

000000000040c5f7 <flatcc_emitter_clear@@Base>:
  40c5f7:	endbr64 
  40c5fb:	push   rbp
  40c5fc:	mov    rbp,rsp
  40c5ff:	sub    rsp,0x20
  40c603:	mov    QWORD PTR [rbp-0x18],rdi
  40c607:	mov    rax,QWORD PTR [rbp-0x18]
  40c60b:	mov    rax,QWORD PTR [rax]
  40c60e:	mov    QWORD PTR [rbp-0x8],rax
  40c612:	cmp    QWORD PTR [rbp-0x8],0x0
  40c617:	je     40c687 <flatcc_emitter_clear@@Base+0x90>
  40c619:	mov    rax,QWORD PTR [rbp-0x8]
  40c61d:	mov    rax,QWORD PTR [rax+0xb88]
  40c624:	mov    QWORD PTR [rax+0xb80],0x0
  40c62f:	jmp    40c653 <flatcc_emitter_clear@@Base+0x5c>
  40c631:	mov    rax,QWORD PTR [rbp-0x8]
  40c635:	mov    rax,QWORD PTR [rax+0xb80]
  40c63c:	mov    QWORD PTR [rbp-0x8],rax
  40c640:	mov    rax,QWORD PTR [rbp-0x8]
  40c644:	mov    rax,QWORD PTR [rax+0xb88]
  40c64b:	mov    rdi,rax
  40c64e:	call   403110 <free@plt>
  40c653:	mov    rax,QWORD PTR [rbp-0x8]
  40c657:	mov    rax,QWORD PTR [rax+0xb80]
  40c65e:	test   rax,rax
  40c661:	jne    40c631 <flatcc_emitter_clear@@Base+0x3a>
  40c663:	mov    rax,QWORD PTR [rbp-0x8]
  40c667:	mov    rdi,rax
  40c66a:	call   403110 <free@plt>
  40c66f:	mov    rax,QWORD PTR [rbp-0x18]
  40c673:	mov    edx,0x48
  40c678:	mov    esi,0x0
  40c67d:	mov    rdi,rax
  40c680:	call   403160 <memset@plt>
  40c685:	jmp    40c688 <flatcc_emitter_clear@@Base+0x91>
  40c687:	nop
  40c688:	leave  
  40c689:	ret    

000000000040c68a <flatcc_emitter@@Base>:
  40c68a:	endbr64 
  40c68e:	push   rbp
  40c68f:	mov    rbp,rsp
  40c692:	sub    rsp,0x30
  40c696:	mov    QWORD PTR [rbp-0x18],rdi
  40c69a:	mov    QWORD PTR [rbp-0x20],rsi
  40c69e:	mov    DWORD PTR [rbp-0x24],edx
  40c6a1:	mov    DWORD PTR [rbp-0x28],ecx
  40c6a4:	mov    QWORD PTR [rbp-0x30],r8
  40c6a8:	mov    rax,QWORD PTR [rbp-0x18]
  40c6ac:	mov    QWORD PTR [rbp-0x8],rax
  40c6b0:	mov    rax,QWORD PTR [rbp-0x8]
  40c6b4:	mov    rdx,QWORD PTR [rax+0x30]
  40c6b8:	mov    rax,QWORD PTR [rbp-0x30]
  40c6bc:	add    rdx,rax
  40c6bf:	mov    rax,QWORD PTR [rbp-0x8]
  40c6c3:	mov    QWORD PTR [rax+0x30],rdx
  40c6c7:	cmp    DWORD PTR [rbp-0x28],0x0
  40c6cb:	jns    40c773 <flatcc_emitter@@Base+0xe9>
  40c6d1:	mov    rax,QWORD PTR [rbp-0x8]
  40c6d5:	mov    rax,QWORD PTR [rax+0x18]
  40c6d9:	cmp    QWORD PTR [rbp-0x30],rax
  40c6dd:	ja     40c721 <flatcc_emitter@@Base+0x97>
  40c6df:	mov    rax,QWORD PTR [rbp-0x8]
  40c6e3:	mov    rax,QWORD PTR [rax+0x10]
  40c6e7:	mov    rdx,QWORD PTR [rbp-0x30]
  40c6eb:	neg    rdx
  40c6ee:	add    rdx,rax
  40c6f1:	mov    rax,QWORD PTR [rbp-0x8]
  40c6f5:	mov    QWORD PTR [rax+0x10],rdx
  40c6f9:	mov    rax,QWORD PTR [rbp-0x8]
  40c6fd:	mov    rax,QWORD PTR [rax+0x18]
  40c701:	sub    rax,QWORD PTR [rbp-0x30]
  40c705:	mov    rdx,rax
  40c708:	mov    rax,QWORD PTR [rbp-0x8]
  40c70c:	mov    QWORD PTR [rax+0x18],rdx
  40c710:	mov    rax,QWORD PTR [rbp-0x8]
  40c714:	mov    rax,QWORD PTR [rax+0x10]
  40c718:	mov    QWORD PTR [rbp-0x10],rax
  40c71c:	jmp    40c7ff <flatcc_emitter@@Base+0x175>
  40c721:	mov    eax,DWORD PTR [rbp-0x24]
  40c724:	cdqe   
  40c726:	shl    rax,0x4
  40c72a:	add    QWORD PTR [rbp-0x20],rax
  40c72e:	jmp    40c761 <flatcc_emitter@@Base+0xd7>
  40c730:	sub    QWORD PTR [rbp-0x20],0x10
  40c735:	mov    rax,QWORD PTR [rbp-0x20]
  40c739:	mov    rdx,QWORD PTR [rax+0x8]
  40c73d:	mov    rax,QWORD PTR [rbp-0x20]
  40c741:	mov    rcx,QWORD PTR [rax]
  40c744:	mov    rax,QWORD PTR [rbp-0x8]
  40c748:	mov    rsi,rcx
  40c74b:	mov    rdi,rax
  40c74e:	call   40c1fa <flatcc_builder_get_emit_context@@Base+0x403>
  40c753:	test   eax,eax
  40c755:	je     40c761 <flatcc_emitter@@Base+0xd7>
  40c757:	mov    eax,0xffffffff
  40c75c:	jmp    40c842 <flatcc_emitter@@Base+0x1b8>
  40c761:	mov    eax,DWORD PTR [rbp-0x24]
  40c764:	lea    edx,[rax-0x1]
  40c767:	mov    DWORD PTR [rbp-0x24],edx
  40c76a:	test   eax,eax
  40c76c:	jne    40c730 <flatcc_emitter@@Base+0xa6>
  40c76e:	jmp    40c7f8 <flatcc_emitter@@Base+0x16e>
  40c773:	mov    rax,QWORD PTR [rbp-0x8]
  40c777:	mov    rax,QWORD PTR [rax+0x28]
  40c77b:	cmp    QWORD PTR [rbp-0x30],rax
  40c77f:	ja     40c7eb <flatcc_emitter@@Base+0x161>
  40c781:	mov    rax,QWORD PTR [rbp-0x8]
  40c785:	mov    rax,QWORD PTR [rax+0x20]
  40c789:	mov    QWORD PTR [rbp-0x10],rax
  40c78d:	mov    rax,QWORD PTR [rbp-0x8]
  40c791:	mov    rdx,QWORD PTR [rax+0x20]
  40c795:	mov    rax,QWORD PTR [rbp-0x30]
  40c799:	add    rdx,rax
  40c79c:	mov    rax,QWORD PTR [rbp-0x8]
  40c7a0:	mov    QWORD PTR [rax+0x20],rdx
  40c7a4:	mov    rax,QWORD PTR [rbp-0x8]
  40c7a8:	mov    rax,QWORD PTR [rax+0x28]
  40c7ac:	sub    rax,QWORD PTR [rbp-0x30]
  40c7b0:	mov    rdx,rax
  40c7b3:	mov    rax,QWORD PTR [rbp-0x8]
  40c7b7:	mov    QWORD PTR [rax+0x28],rdx
  40c7bb:	jmp    40c7ff <flatcc_emitter@@Base+0x175>
  40c7bd:	mov    rax,QWORD PTR [rbp-0x20]
  40c7c1:	mov    rdx,QWORD PTR [rax+0x8]
  40c7c5:	mov    rax,QWORD PTR [rbp-0x20]
  40c7c9:	mov    rcx,QWORD PTR [rax]
  40c7cc:	mov    rax,QWORD PTR [rbp-0x8]
  40c7d0:	mov    rsi,rcx
  40c7d3:	mov    rdi,rax
  40c7d6:	call   40c2d0 <flatcc_builder_get_emit_context@@Base+0x4d9>
  40c7db:	test   eax,eax
  40c7dd:	je     40c7e6 <flatcc_emitter@@Base+0x15c>
  40c7df:	mov    eax,0xffffffff
  40c7e4:	jmp    40c842 <flatcc_emitter@@Base+0x1b8>
  40c7e6:	add    QWORD PTR [rbp-0x20],0x10
  40c7eb:	mov    eax,DWORD PTR [rbp-0x24]
  40c7ee:	lea    edx,[rax-0x1]
  40c7f1:	mov    DWORD PTR [rbp-0x24],edx
  40c7f4:	test   eax,eax
  40c7f6:	jne    40c7bd <flatcc_emitter@@Base+0x133>
  40c7f8:	mov    eax,0x0
  40c7fd:	jmp    40c842 <flatcc_emitter@@Base+0x1b8>
  40c7ff:	jmp    40c830 <flatcc_emitter@@Base+0x1a6>
  40c801:	mov    rax,QWORD PTR [rbp-0x20]
  40c805:	mov    rdx,QWORD PTR [rax+0x8]
  40c809:	mov    rax,QWORD PTR [rbp-0x20]
  40c80d:	mov    rcx,QWORD PTR [rax]
  40c810:	mov    rax,QWORD PTR [rbp-0x10]
  40c814:	mov    rsi,rcx
  40c817:	mov    rdi,rax
  40c81a:	call   4031a0 <memcpy@plt>
  40c81f:	mov    rax,QWORD PTR [rbp-0x20]
  40c823:	mov    rax,QWORD PTR [rax+0x8]
  40c827:	add    QWORD PTR [rbp-0x10],rax
  40c82b:	add    QWORD PTR [rbp-0x20],0x10
  40c830:	mov    eax,DWORD PTR [rbp-0x24]
  40c833:	lea    edx,[rax-0x1]
  40c836:	mov    DWORD PTR [rbp-0x24],edx
  40c839:	test   eax,eax
  40c83b:	jne    40c801 <flatcc_emitter@@Base+0x177>
  40c83d:	mov    eax,0x0
  40c842:	leave  
  40c843:	ret    

000000000040c844 <flatcc_emitter_copy_buffer@@Base>:
  40c844:	endbr64 
  40c848:	push   rbp
  40c849:	mov    rbp,rsp
  40c84c:	sub    rsp,0x30
  40c850:	mov    QWORD PTR [rbp-0x18],rdi
  40c854:	mov    QWORD PTR [rbp-0x20],rsi
  40c858:	mov    QWORD PTR [rbp-0x28],rdx
  40c85c:	mov    rax,QWORD PTR [rbp-0x18]
  40c860:	mov    rax,QWORD PTR [rax+0x30]
  40c864:	cmp    QWORD PTR [rbp-0x28],rax
  40c868:	jae    40c874 <flatcc_emitter_copy_buffer@@Base+0x30>
  40c86a:	mov    eax,0x0
  40c86f:	jmp    40c978 <flatcc_emitter_copy_buffer@@Base+0x134>
  40c874:	mov    rax,QWORD PTR [rbp-0x18]
  40c878:	mov    rax,QWORD PTR [rax]
  40c87b:	test   rax,rax
  40c87e:	jne    40c88a <flatcc_emitter_copy_buffer@@Base+0x46>
  40c880:	mov    eax,0x0
  40c885:	jmp    40c978 <flatcc_emitter_copy_buffer@@Base+0x134>
  40c88a:	mov    rax,QWORD PTR [rbp-0x18]
  40c88e:	mov    rdx,QWORD PTR [rax]
  40c891:	mov    rax,QWORD PTR [rbp-0x18]
  40c895:	mov    rax,QWORD PTR [rax+0x8]
  40c899:	cmp    rdx,rax
  40c89c:	jne    40c8c6 <flatcc_emitter_copy_buffer@@Base+0x82>
  40c89e:	mov    rax,QWORD PTR [rbp-0x18]
  40c8a2:	mov    rdx,QWORD PTR [rax+0x30]
  40c8a6:	mov    rax,QWORD PTR [rbp-0x18]
  40c8aa:	mov    rcx,QWORD PTR [rax+0x10]
  40c8ae:	mov    rax,QWORD PTR [rbp-0x20]
  40c8b2:	mov    rsi,rcx
  40c8b5:	mov    rdi,rax
  40c8b8:	call   4031a0 <memcpy@plt>
  40c8bd:	mov    rax,QWORD PTR [rbp-0x20]
  40c8c1:	jmp    40c978 <flatcc_emitter_copy_buffer@@Base+0x134>
  40c8c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c8ca:	mov    rax,QWORD PTR [rax+0x18]
  40c8ce:	mov    edx,0xb80
  40c8d3:	sub    rdx,rax
  40c8d6:	mov    rax,rdx
  40c8d9:	mov    QWORD PTR [rbp-0x8],rax
  40c8dd:	mov    rax,QWORD PTR [rbp-0x18]
  40c8e1:	mov    rcx,QWORD PTR [rax+0x10]
  40c8e5:	mov    rdx,QWORD PTR [rbp-0x8]
  40c8e9:	mov    rax,QWORD PTR [rbp-0x20]
  40c8ed:	mov    rsi,rcx
  40c8f0:	mov    rdi,rax
  40c8f3:	call   4031a0 <memcpy@plt>
  40c8f8:	mov    rax,QWORD PTR [rbp-0x8]
  40c8fc:	add    QWORD PTR [rbp-0x20],rax
  40c900:	mov    rax,QWORD PTR [rbp-0x18]
  40c904:	mov    rax,QWORD PTR [rax]
  40c907:	mov    rax,QWORD PTR [rax+0xb80]
  40c90e:	mov    QWORD PTR [rbp-0x10],rax
  40c912:	jmp    40c943 <flatcc_emitter_copy_buffer@@Base+0xff>
  40c914:	mov    rcx,QWORD PTR [rbp-0x10]
  40c918:	mov    rax,QWORD PTR [rbp-0x20]
  40c91c:	mov    edx,0xb80
  40c921:	mov    rsi,rcx
  40c924:	mov    rdi,rax
  40c927:	call   4031a0 <memcpy@plt>
  40c92c:	add    QWORD PTR [rbp-0x20],0xb80
  40c934:	mov    rax,QWORD PTR [rbp-0x10]
  40c938:	mov    rax,QWORD PTR [rax+0xb80]
  40c93f:	mov    QWORD PTR [rbp-0x10],rax
  40c943:	mov    rax,QWORD PTR [rbp-0x18]
  40c947:	mov    rax,QWORD PTR [rax+0x8]
  40c94b:	cmp    QWORD PTR [rbp-0x10],rax
  40c94f:	jne    40c914 <flatcc_emitter_copy_buffer@@Base+0xd0>
  40c951:	mov    rax,QWORD PTR [rbp-0x18]
  40c955:	mov    rax,QWORD PTR [rax+0x28]
  40c959:	mov    edx,0xb80
  40c95e:	sub    rdx,rax
  40c961:	mov    rcx,QWORD PTR [rbp-0x10]
  40c965:	mov    rax,QWORD PTR [rbp-0x20]
  40c969:	mov    rsi,rcx
  40c96c:	mov    rdi,rax
  40c96f:	call   4031a0 <memcpy@plt>
  40c974:	mov    rax,QWORD PTR [rbp-0x20]
  40c978:	leave  
  40c979:	ret    
  40c97a:	push   rbp
  40c97b:	mov    rbp,rsp
  40c97e:	mov    eax,edi
  40c980:	mov    BYTE PTR [rbp-0x4],al
  40c983:	movzx  eax,BYTE PTR [rbp-0x4]
  40c987:	pop    rbp
  40c988:	ret    
  40c989:	push   rbp
  40c98a:	mov    rbp,rsp
  40c98d:	sub    rsp,0x10
  40c991:	mov    QWORD PTR [rbp-0x8],rdi
  40c995:	mov    eax,esi
  40c997:	mov    BYTE PTR [rbp-0xc],al
  40c99a:	movzx  eax,BYTE PTR [rbp-0xc]
  40c99e:	mov    edi,eax
  40c9a0:	call   40c97a <flatcc_emitter_copy_buffer@@Base+0x136>
  40c9a5:	mov    rdx,QWORD PTR [rbp-0x8]
  40c9a9:	mov    BYTE PTR [rdx],al
  40c9ab:	nop
  40c9ac:	leave  
  40c9ad:	ret    
  40c9ae:	push   rbp
  40c9af:	mov    rbp,rsp
  40c9b2:	sub    rsp,0x30
  40c9b6:	mov    QWORD PTR [rbp-0x8],rdi
  40c9ba:	mov    QWORD PTR [rbp-0x10],rsi
  40c9be:	mov    QWORD PTR [rbp-0x18],rdx
  40c9c2:	mov    QWORD PTR [rbp-0x20],rcx
  40c9c6:	mov    DWORD PTR [rbp-0x24],r8d
  40c9ca:	mov    rax,QWORD PTR [rbp-0x8]
  40c9ce:	mov    edx,0x48
  40c9d3:	mov    esi,0x0
  40c9d8:	mov    rdi,rax
  40c9db:	call   403160 <memset@plt>
  40c9e0:	mov    rax,QWORD PTR [rbp-0x8]
  40c9e4:	mov    rdx,QWORD PTR [rbp-0x10]
  40c9e8:	mov    QWORD PTR [rax],rdx
  40c9eb:	mov    rax,QWORD PTR [rbp-0x8]
  40c9ef:	mov    rdx,QWORD PTR [rbp-0x18]
  40c9f3:	mov    QWORD PTR [rax+0x8],rdx
  40c9f7:	mov    rax,QWORD PTR [rbp-0x8]
  40c9fb:	mov    DWORD PTR [rax+0x18],0x1
  40ca02:	mov    rax,QWORD PTR [rbp-0x8]
  40ca06:	mov    edx,DWORD PTR [rbp-0x24]
  40ca09:	mov    DWORD PTR [rax+0x10],edx
  40ca0c:	mov    rax,QWORD PTR [rbp-0x8]
  40ca10:	mov    rdx,QWORD PTR [rbp-0x18]
  40ca14:	mov    QWORD PTR [rax+0x28],rdx
  40ca18:	mov    rax,QWORD PTR [rbp-0x8]
  40ca1c:	mov    rdx,QWORD PTR [rbp-0x20]
  40ca20:	mov    QWORD PTR [rax+0x30],rdx
  40ca24:	mov    rax,QWORD PTR [rbp-0x8]
  40ca28:	mov    rdx,QWORD PTR [rbp-0x18]
  40ca2c:	mov    QWORD PTR [rax+0x38],rdx
  40ca30:	nop
  40ca31:	leave  
  40ca32:	ret    
  40ca33:	push   rbp
  40ca34:	mov    rbp,rsp
  40ca37:	sub    rsp,0x20
  40ca3b:	mov    QWORD PTR [rbp-0x8],rdi
  40ca3f:	mov    QWORD PTR [rbp-0x10],rsi
  40ca43:	mov    QWORD PTR [rbp-0x18],rdx
  40ca47:	mov    rax,QWORD PTR [rbp-0x18]
  40ca4b:	sub    rax,QWORD PTR [rbp-0x10]
  40ca4f:	cmp    rax,0x1
  40ca53:	jle    40ca88 <flatcc_emitter_copy_buffer@@Base+0x244>
  40ca55:	mov    rax,QWORD PTR [rbp-0x10]
  40ca59:	movzx  eax,BYTE PTR [rax]
  40ca5c:	cmp    al,0x20
  40ca5e:	jle    40ca66 <flatcc_emitter_copy_buffer@@Base+0x222>
  40ca60:	mov    rax,QWORD PTR [rbp-0x10]
  40ca64:	jmp    40ca9f <flatcc_emitter_copy_buffer@@Base+0x25b>
  40ca66:	mov    rax,QWORD PTR [rbp-0x10]
  40ca6a:	movzx  eax,BYTE PTR [rax]
  40ca6d:	cmp    al,0x20
  40ca6f:	jne    40ca88 <flatcc_emitter_copy_buffer@@Base+0x244>
  40ca71:	mov    rax,QWORD PTR [rbp-0x10]
  40ca75:	inc    rax
  40ca78:	movzx  eax,BYTE PTR [rax]
  40ca7b:	cmp    al,0x20
  40ca7d:	jle    40ca88 <flatcc_emitter_copy_buffer@@Base+0x244>
  40ca7f:	mov    rax,QWORD PTR [rbp-0x10]
  40ca83:	inc    rax
  40ca86:	jmp    40ca9f <flatcc_emitter_copy_buffer@@Base+0x25b>
  40ca88:	mov    rdx,QWORD PTR [rbp-0x18]
  40ca8c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca90:	mov    rax,QWORD PTR [rbp-0x8]
  40ca94:	mov    rsi,rcx
  40ca97:	mov    rdi,rax
  40ca9a:	call   410a8c <flatcc_json_parser_space_ext@@Base>
  40ca9f:	leave  
  40caa0:	ret    
  40caa1:	push   rbp
  40caa2:	mov    rbp,rsp
  40caa5:	sub    rsp,0x20
  40caa9:	mov    QWORD PTR [rbp-0x8],rdi
  40caad:	mov    QWORD PTR [rbp-0x10],rsi
  40cab1:	mov    QWORD PTR [rbp-0x18],rdx
  40cab5:	mov    rax,QWORD PTR [rbp-0x10]
  40cab9:	cmp    rax,QWORD PTR [rbp-0x18]
  40cabd:	je     40caca <flatcc_emitter_copy_buffer@@Base+0x286>
  40cabf:	mov    rax,QWORD PTR [rbp-0x10]
  40cac3:	movzx  eax,BYTE PTR [rax]
  40cac6:	cmp    al,0x22
  40cac8:	je     40cae5 <flatcc_emitter_copy_buffer@@Base+0x2a1>
  40caca:	mov    rdx,QWORD PTR [rbp-0x18]
  40cace:	mov    rsi,QWORD PTR [rbp-0x10]
  40cad2:	mov    rax,QWORD PTR [rbp-0x8]
  40cad6:	mov    ecx,0x10
  40cadb:	mov    rdi,rax
  40cade:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cae3:	jmp    40caed <flatcc_emitter_copy_buffer@@Base+0x2a9>
  40cae5:	inc    QWORD PTR [rbp-0x10]
  40cae9:	mov    rax,QWORD PTR [rbp-0x10]
  40caed:	leave  
  40caee:	ret    
  40caef:	push   rbp
  40caf0:	mov    rbp,rsp
  40caf3:	sub    rsp,0x20
  40caf7:	mov    QWORD PTR [rbp-0x8],rdi
  40cafb:	mov    QWORD PTR [rbp-0x10],rsi
  40caff:	mov    QWORD PTR [rbp-0x18],rdx
  40cb03:	mov    rax,QWORD PTR [rbp-0x10]
  40cb07:	cmp    rax,QWORD PTR [rbp-0x18]
  40cb0b:	je     40cb18 <flatcc_emitter_copy_buffer@@Base+0x2d4>
  40cb0d:	mov    rax,QWORD PTR [rbp-0x10]
  40cb11:	movzx  eax,BYTE PTR [rax]
  40cb14:	cmp    al,0x22
  40cb16:	je     40cb33 <flatcc_emitter_copy_buffer@@Base+0x2ef>
  40cb18:	mov    rdx,QWORD PTR [rbp-0x18]
  40cb1c:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb20:	mov    rax,QWORD PTR [rbp-0x8]
  40cb24:	mov    ecx,0x14
  40cb29:	mov    rdi,rax
  40cb2c:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cb31:	jmp    40cb3b <flatcc_emitter_copy_buffer@@Base+0x2f7>
  40cb33:	inc    QWORD PTR [rbp-0x10]
  40cb37:	mov    rax,QWORD PTR [rbp-0x10]
  40cb3b:	leave  
  40cb3c:	ret    
  40cb3d:	push   rbp
  40cb3e:	mov    rbp,rsp
  40cb41:	sub    rsp,0x20
  40cb45:	mov    QWORD PTR [rbp-0x8],rdi
  40cb49:	mov    QWORD PTR [rbp-0x10],rsi
  40cb4d:	mov    QWORD PTR [rbp-0x18],rdx
  40cb51:	mov    rax,QWORD PTR [rbp-0x10]
  40cb55:	cmp    rax,QWORD PTR [rbp-0x18]
  40cb59:	jne    40cb61 <flatcc_emitter_copy_buffer@@Base+0x31d>
  40cb5b:	mov    rax,QWORD PTR [rbp-0x10]
  40cb5f:	jmp    40cbb2 <flatcc_emitter_copy_buffer@@Base+0x36e>
  40cb61:	mov    rax,QWORD PTR [rbp-0x10]
  40cb65:	movzx  eax,BYTE PTR [rax]
  40cb68:	cmp    al,0x22
  40cb6a:	jne    40cb7d <flatcc_emitter_copy_buffer@@Base+0x339>
  40cb6c:	inc    QWORD PTR [rbp-0x10]
  40cb70:	mov    rax,QWORD PTR [rbp-0x8]
  40cb74:	mov    DWORD PTR [rax+0x14],0x0
  40cb7b:	jmp    40cbae <flatcc_emitter_copy_buffer@@Base+0x36a>
  40cb7d:	mov    rax,QWORD PTR [rbp-0x10]
  40cb81:	movzx  eax,BYTE PTR [rax]
  40cb84:	cmp    al,0x2e
  40cb86:	jne    40cba3 <flatcc_emitter_copy_buffer@@Base+0x35f>
  40cb88:	mov    rdx,QWORD PTR [rbp-0x18]
  40cb8c:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb90:	mov    rax,QWORD PTR [rbp-0x8]
  40cb94:	mov    ecx,0x5
  40cb99:	mov    rdi,rax
  40cb9c:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cba1:	jmp    40cbb2 <flatcc_emitter_copy_buffer@@Base+0x36e>
  40cba3:	mov    rax,QWORD PTR [rbp-0x8]
  40cba7:	mov    DWORD PTR [rax+0x14],0x1
  40cbae:	mov    rax,QWORD PTR [rbp-0x10]
  40cbb2:	leave  
  40cbb3:	ret    
  40cbb4:	push   rbp
  40cbb5:	mov    rbp,rsp
  40cbb8:	sub    rsp,0x30
  40cbbc:	mov    QWORD PTR [rbp-0x18],rdi
  40cbc0:	mov    QWORD PTR [rbp-0x20],rsi
  40cbc4:	mov    QWORD PTR [rbp-0x28],rdx
  40cbc8:	mov    BYTE PTR [rbp-0x2],0x0
  40cbcc:	mov    rax,QWORD PTR [rbp-0x18]
  40cbd0:	mov    eax,DWORD PTR [rax+0x14]
  40cbd3:	test   eax,eax
  40cbd5:	je     40cc85 <flatcc_emitter_copy_buffer@@Base+0x441>
  40cbdb:	jmp    40cc27 <flatcc_emitter_copy_buffer@@Base+0x3e3>
  40cbdd:	mov    rax,QWORD PTR [rbp-0x20]
  40cbe1:	movzx  eax,BYTE PTR [rax]
  40cbe4:	mov    BYTE PTR [rbp-0x1],al
  40cbe7:	movzx  eax,BYTE PTR [rbp-0x1]
  40cbeb:	mov    BYTE PTR [rbp-0x2],al
  40cbee:	cmp    BYTE PTR [rbp-0x1],0x5f
  40cbf2:	je     40cc0c <flatcc_emitter_copy_buffer@@Base+0x3c8>
  40cbf4:	cmp    BYTE PTR [rbp-0x1],0x2e
  40cbf8:	je     40cc0c <flatcc_emitter_copy_buffer@@Base+0x3c8>
  40cbfa:	cmp    BYTE PTR [rbp-0x1],0x0
  40cbfe:	js     40cc0c <flatcc_emitter_copy_buffer@@Base+0x3c8>
  40cc00:	cmp    BYTE PTR [rbp-0x1],0x2f
  40cc04:	jle    40cc12 <flatcc_emitter_copy_buffer@@Base+0x3ce>
  40cc06:	cmp    BYTE PTR [rbp-0x1],0x39
  40cc0a:	jg     40cc12 <flatcc_emitter_copy_buffer@@Base+0x3ce>
  40cc0c:	inc    QWORD PTR [rbp-0x20]
  40cc10:	jmp    40cc27 <flatcc_emitter_copy_buffer@@Base+0x3e3>
  40cc12:	or     BYTE PTR [rbp-0x1],0x20
  40cc16:	cmp    BYTE PTR [rbp-0x1],0x60
  40cc1a:	jle    40cc3e <flatcc_emitter_copy_buffer@@Base+0x3fa>
  40cc1c:	cmp    BYTE PTR [rbp-0x1],0x7a
  40cc20:	jg     40cc3e <flatcc_emitter_copy_buffer@@Base+0x3fa>
  40cc22:	inc    QWORD PTR [rbp-0x20]
  40cc26:	nop
  40cc27:	mov    rax,QWORD PTR [rbp-0x20]
  40cc2b:	cmp    rax,QWORD PTR [rbp-0x28]
  40cc2f:	je     40cc3f <flatcc_emitter_copy_buffer@@Base+0x3fb>
  40cc31:	mov    rax,QWORD PTR [rbp-0x20]
  40cc35:	movzx  eax,BYTE PTR [rax]
  40cc38:	cmp    al,0x20
  40cc3a:	jg     40cbdd <flatcc_emitter_copy_buffer@@Base+0x399>
  40cc3c:	jmp    40cc3f <flatcc_emitter_copy_buffer@@Base+0x3fb>
  40cc3e:	nop
  40cc3f:	cmp    BYTE PTR [rbp-0x2],0x2e
  40cc43:	jne    40ccd1 <flatcc_emitter_copy_buffer@@Base+0x48d>
  40cc49:	mov    rdx,QWORD PTR [rbp-0x28]
  40cc4d:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc51:	mov    rax,QWORD PTR [rbp-0x18]
  40cc55:	mov    ecx,0x5
  40cc5a:	mov    rdi,rax
  40cc5d:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cc62:	jmp    40ccd5 <flatcc_emitter_copy_buffer@@Base+0x491>
  40cc64:	mov    rax,QWORD PTR [rbp-0x20]
  40cc68:	movzx  eax,BYTE PTR [rax]
  40cc6b:	cmp    al,0x5c
  40cc6d:	jne    40cc81 <flatcc_emitter_copy_buffer@@Base+0x43d>
  40cc6f:	mov    rax,QWORD PTR [rbp-0x28]
  40cc73:	sub    rax,QWORD PTR [rbp-0x20]
  40cc77:	cmp    rax,0x1
  40cc7b:	jle    40cc9c <flatcc_emitter_copy_buffer@@Base+0x458>
  40cc7d:	inc    QWORD PTR [rbp-0x20]
  40cc81:	inc    QWORD PTR [rbp-0x20]
  40cc85:	mov    rax,QWORD PTR [rbp-0x20]
  40cc89:	cmp    rax,QWORD PTR [rbp-0x28]
  40cc8d:	je     40cc9d <flatcc_emitter_copy_buffer@@Base+0x459>
  40cc8f:	mov    rax,QWORD PTR [rbp-0x20]
  40cc93:	movzx  eax,BYTE PTR [rax]
  40cc96:	cmp    al,0x22
  40cc98:	jne    40cc64 <flatcc_emitter_copy_buffer@@Base+0x420>
  40cc9a:	jmp    40cc9d <flatcc_emitter_copy_buffer@@Base+0x459>
  40cc9c:	nop
  40cc9d:	mov    rax,QWORD PTR [rbp-0x20]
  40cca1:	cmp    rax,QWORD PTR [rbp-0x28]
  40cca5:	je     40ccb2 <flatcc_emitter_copy_buffer@@Base+0x46e>
  40cca7:	mov    rax,QWORD PTR [rbp-0x20]
  40ccab:	movzx  eax,BYTE PTR [rax]
  40ccae:	cmp    al,0x22
  40ccb0:	je     40cccd <flatcc_emitter_copy_buffer@@Base+0x489>
  40ccb2:	mov    rdx,QWORD PTR [rbp-0x28]
  40ccb6:	mov    rsi,QWORD PTR [rbp-0x20]
  40ccba:	mov    rax,QWORD PTR [rbp-0x18]
  40ccbe:	mov    ecx,0x14
  40ccc3:	mov    rdi,rax
  40ccc6:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cccb:	jmp    40ccd5 <flatcc_emitter_copy_buffer@@Base+0x491>
  40cccd:	inc    QWORD PTR [rbp-0x20]
  40ccd1:	mov    rax,QWORD PTR [rbp-0x20]
  40ccd5:	leave  
  40ccd6:	ret    
  40ccd7:	push   rbp
  40ccd8:	mov    rbp,rsp
  40ccdb:	sub    rsp,0x20
  40ccdf:	mov    QWORD PTR [rbp-0x8],rdi
  40cce3:	mov    QWORD PTR [rbp-0x10],rsi
  40cce7:	mov    QWORD PTR [rbp-0x18],rdx
  40cceb:	mov    rdx,QWORD PTR [rbp-0x18]
  40ccef:	mov    rcx,QWORD PTR [rbp-0x10]
  40ccf3:	mov    rax,QWORD PTR [rbp-0x8]
  40ccf7:	mov    rsi,rcx
  40ccfa:	mov    rdi,rax
  40ccfd:	call   40cb3d <flatcc_emitter_copy_buffer@@Base+0x2f9>
  40cd02:	mov    QWORD PTR [rbp-0x10],rax
  40cd06:	mov    rax,QWORD PTR [rbp-0x8]
  40cd0a:	mov    eax,DWORD PTR [rax+0x14]
  40cd0d:	test   eax,eax
  40cd0f:	jne    40cd2c <flatcc_emitter_copy_buffer@@Base+0x4e8>
  40cd11:	mov    rdx,QWORD PTR [rbp-0x18]
  40cd15:	mov    rcx,QWORD PTR [rbp-0x10]
  40cd19:	mov    rax,QWORD PTR [rbp-0x8]
  40cd1d:	mov    rsi,rcx
  40cd20:	mov    rdi,rax
  40cd23:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cd28:	mov    QWORD PTR [rbp-0x10],rax
  40cd2c:	mov    rax,QWORD PTR [rbp-0x10]
  40cd30:	leave  
  40cd31:	ret    
  40cd32:	push   rbp
  40cd33:	mov    rbp,rsp
  40cd36:	sub    rsp,0x20
  40cd3a:	mov    QWORD PTR [rbp-0x8],rdi
  40cd3e:	mov    QWORD PTR [rbp-0x10],rsi
  40cd42:	mov    QWORD PTR [rbp-0x18],rdx
  40cd46:	mov    QWORD PTR [rbp-0x20],rcx
  40cd4a:	mov    rdx,QWORD PTR [rbp-0x18]
  40cd4e:	mov    rcx,QWORD PTR [rbp-0x10]
  40cd52:	mov    rax,QWORD PTR [rbp-0x8]
  40cd56:	mov    rsi,rcx
  40cd59:	mov    rdi,rax
  40cd5c:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cd61:	mov    QWORD PTR [rbp-0x10],rax
  40cd65:	mov    rax,QWORD PTR [rbp-0x10]
  40cd69:	cmp    rax,QWORD PTR [rbp-0x18]
  40cd6d:	jne    40cd82 <flatcc_emitter_copy_buffer@@Base+0x53e>
  40cd6f:	mov    rax,QWORD PTR [rbp-0x20]
  40cd73:	mov    DWORD PTR [rax],0x0
  40cd79:	mov    rax,QWORD PTR [rbp-0x10]
  40cd7d:	jmp    40ce6e <flatcc_emitter_copy_buffer@@Base+0x62a>
  40cd82:	mov    rax,QWORD PTR [rbp-0x10]
  40cd86:	movzx  eax,BYTE PTR [rax]
  40cd89:	cmp    al,0x2c
  40cd8b:	je     40cde0 <flatcc_emitter_copy_buffer@@Base+0x59c>
  40cd8d:	mov    rax,QWORD PTR [rbp-0x20]
  40cd91:	mov    DWORD PTR [rax],0x0
  40cd97:	mov    rax,QWORD PTR [rbp-0x10]
  40cd9b:	movzx  eax,BYTE PTR [rax]
  40cd9e:	cmp    al,0x7d
  40cda0:	je     40cdc0 <flatcc_emitter_copy_buffer@@Base+0x57c>
  40cda2:	mov    rdx,QWORD PTR [rbp-0x18]
  40cda6:	mov    rsi,QWORD PTR [rbp-0x10]
  40cdaa:	mov    rax,QWORD PTR [rbp-0x8]
  40cdae:	mov    ecx,0xa
  40cdb3:	mov    rdi,rax
  40cdb6:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cdbb:	jmp    40ce6e <flatcc_emitter_copy_buffer@@Base+0x62a>
  40cdc0:	mov    rax,QWORD PTR [rbp-0x10]
  40cdc4:	lea    rcx,[rax+0x1]
  40cdc8:	mov    rdx,QWORD PTR [rbp-0x18]
  40cdcc:	mov    rax,QWORD PTR [rbp-0x8]
  40cdd0:	mov    rsi,rcx
  40cdd3:	mov    rdi,rax
  40cdd6:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cddb:	jmp    40ce6e <flatcc_emitter_copy_buffer@@Base+0x62a>
  40cde0:	mov    rax,QWORD PTR [rbp-0x10]
  40cde4:	lea    rcx,[rax+0x1]
  40cde8:	mov    rdx,QWORD PTR [rbp-0x18]
  40cdec:	mov    rax,QWORD PTR [rbp-0x8]
  40cdf0:	mov    rsi,rcx
  40cdf3:	mov    rdi,rax
  40cdf6:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cdfb:	mov    QWORD PTR [rbp-0x10],rax
  40cdff:	mov    rax,QWORD PTR [rbp-0x10]
  40ce03:	cmp    rax,QWORD PTR [rbp-0x18]
  40ce07:	jne    40ce2e <flatcc_emitter_copy_buffer@@Base+0x5ea>
  40ce09:	mov    rax,QWORD PTR [rbp-0x20]
  40ce0d:	mov    DWORD PTR [rax],0x0
  40ce13:	mov    rdx,QWORD PTR [rbp-0x18]
  40ce17:	mov    rsi,QWORD PTR [rbp-0x10]
  40ce1b:	mov    rax,QWORD PTR [rbp-0x8]
  40ce1f:	mov    ecx,0xa
  40ce24:	mov    rdi,rax
  40ce27:	call   410986 <flatcc_json_parser_set_error@@Base>
  40ce2c:	jmp    40ce6e <flatcc_emitter_copy_buffer@@Base+0x62a>
  40ce2e:	mov    rax,QWORD PTR [rbp-0x10]
  40ce32:	movzx  eax,BYTE PTR [rax]
  40ce35:	cmp    al,0x7d
  40ce37:	jne    40ce60 <flatcc_emitter_copy_buffer@@Base+0x61c>
  40ce39:	mov    rax,QWORD PTR [rbp-0x20]
  40ce3d:	mov    DWORD PTR [rax],0x0
  40ce43:	mov    rax,QWORD PTR [rbp-0x10]
  40ce47:	lea    rcx,[rax+0x1]
  40ce4b:	mov    rdx,QWORD PTR [rbp-0x18]
  40ce4f:	mov    rax,QWORD PTR [rbp-0x8]
  40ce53:	mov    rsi,rcx
  40ce56:	mov    rdi,rax
  40ce59:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40ce5e:	jmp    40ce6e <flatcc_emitter_copy_buffer@@Base+0x62a>
  40ce60:	mov    rax,QWORD PTR [rbp-0x20]
  40ce64:	mov    DWORD PTR [rax],0x1
  40ce6a:	mov    rax,QWORD PTR [rbp-0x10]
  40ce6e:	leave  
  40ce6f:	ret    
  40ce70:	push   rbp
  40ce71:	mov    rbp,rsp
  40ce74:	sub    rsp,0x20
  40ce78:	mov    QWORD PTR [rbp-0x8],rdi
  40ce7c:	mov    QWORD PTR [rbp-0x10],rsi
  40ce80:	mov    QWORD PTR [rbp-0x18],rdx
  40ce84:	mov    QWORD PTR [rbp-0x20],rcx
  40ce88:	mov    rax,QWORD PTR [rbp-0x10]
  40ce8c:	cmp    rax,QWORD PTR [rbp-0x18]
  40ce90:	je     40ce9d <flatcc_emitter_copy_buffer@@Base+0x659>
  40ce92:	mov    rax,QWORD PTR [rbp-0x10]
  40ce96:	movzx  eax,BYTE PTR [rax]
  40ce99:	cmp    al,0x5b
  40ce9b:	je     40cec2 <flatcc_emitter_copy_buffer@@Base+0x67e>
  40ce9d:	mov    rax,QWORD PTR [rbp-0x20]
  40cea1:	mov    DWORD PTR [rax],0x0
  40cea7:	mov    rdx,QWORD PTR [rbp-0x18]
  40ceab:	mov    rsi,QWORD PTR [rbp-0x10]
  40ceaf:	mov    rax,QWORD PTR [rbp-0x8]
  40ceb3:	mov    ecx,0x16
  40ceb8:	mov    rdi,rax
  40cebb:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cec0:	jmp    40cf2b <flatcc_emitter_copy_buffer@@Base+0x6e7>
  40cec2:	mov    rax,QWORD PTR [rbp-0x10]
  40cec6:	lea    rcx,[rax+0x1]
  40ceca:	mov    rdx,QWORD PTR [rbp-0x18]
  40cece:	mov    rax,QWORD PTR [rbp-0x8]
  40ced2:	mov    rsi,rcx
  40ced5:	mov    rdi,rax
  40ced8:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cedd:	mov    QWORD PTR [rbp-0x10],rax
  40cee1:	mov    rax,QWORD PTR [rbp-0x10]
  40cee5:	cmp    rax,QWORD PTR [rbp-0x18]
  40cee9:	je     40cf1d <flatcc_emitter_copy_buffer@@Base+0x6d9>
  40ceeb:	mov    rax,QWORD PTR [rbp-0x10]
  40ceef:	movzx  eax,BYTE PTR [rax]
  40cef2:	cmp    al,0x5d
  40cef4:	jne    40cf1d <flatcc_emitter_copy_buffer@@Base+0x6d9>
  40cef6:	mov    rax,QWORD PTR [rbp-0x20]
  40cefa:	mov    DWORD PTR [rax],0x0
  40cf00:	mov    rax,QWORD PTR [rbp-0x10]
  40cf04:	lea    rcx,[rax+0x1]
  40cf08:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf0c:	mov    rax,QWORD PTR [rbp-0x8]
  40cf10:	mov    rsi,rcx
  40cf13:	mov    rdi,rax
  40cf16:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cf1b:	jmp    40cf2b <flatcc_emitter_copy_buffer@@Base+0x6e7>
  40cf1d:	mov    rax,QWORD PTR [rbp-0x20]
  40cf21:	mov    DWORD PTR [rax],0x1
  40cf27:	mov    rax,QWORD PTR [rbp-0x10]
  40cf2b:	leave  
  40cf2c:	ret    
  40cf2d:	push   rbp
  40cf2e:	mov    rbp,rsp
  40cf31:	sub    rsp,0x20
  40cf35:	mov    QWORD PTR [rbp-0x8],rdi
  40cf39:	mov    QWORD PTR [rbp-0x10],rsi
  40cf3d:	mov    QWORD PTR [rbp-0x18],rdx
  40cf41:	mov    QWORD PTR [rbp-0x20],rcx
  40cf45:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf49:	mov    rcx,QWORD PTR [rbp-0x10]
  40cf4d:	mov    rax,QWORD PTR [rbp-0x8]
  40cf51:	mov    rsi,rcx
  40cf54:	mov    rdi,rax
  40cf57:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cf5c:	mov    QWORD PTR [rbp-0x10],rax
  40cf60:	mov    rax,QWORD PTR [rbp-0x10]
  40cf64:	cmp    rax,QWORD PTR [rbp-0x18]
  40cf68:	jne    40cf7d <flatcc_emitter_copy_buffer@@Base+0x739>
  40cf6a:	mov    rax,QWORD PTR [rbp-0x20]
  40cf6e:	mov    DWORD PTR [rax],0x0
  40cf74:	mov    rax,QWORD PTR [rbp-0x10]
  40cf78:	jmp    40d069 <flatcc_emitter_copy_buffer@@Base+0x825>
  40cf7d:	mov    rax,QWORD PTR [rbp-0x10]
  40cf81:	movzx  eax,BYTE PTR [rax]
  40cf84:	cmp    al,0x2c
  40cf86:	je     40cfdb <flatcc_emitter_copy_buffer@@Base+0x797>
  40cf88:	mov    rax,QWORD PTR [rbp-0x20]
  40cf8c:	mov    DWORD PTR [rax],0x0
  40cf92:	mov    rax,QWORD PTR [rbp-0x10]
  40cf96:	movzx  eax,BYTE PTR [rax]
  40cf99:	cmp    al,0x5d
  40cf9b:	je     40cfbb <flatcc_emitter_copy_buffer@@Base+0x777>
  40cf9d:	mov    rdx,QWORD PTR [rbp-0x18]
  40cfa1:	mov    rsi,QWORD PTR [rbp-0x10]
  40cfa5:	mov    rax,QWORD PTR [rbp-0x8]
  40cfa9:	mov    ecx,0x9
  40cfae:	mov    rdi,rax
  40cfb1:	call   410986 <flatcc_json_parser_set_error@@Base>
  40cfb6:	jmp    40d069 <flatcc_emitter_copy_buffer@@Base+0x825>
  40cfbb:	mov    rax,QWORD PTR [rbp-0x10]
  40cfbf:	lea    rcx,[rax+0x1]
  40cfc3:	mov    rdx,QWORD PTR [rbp-0x18]
  40cfc7:	mov    rax,QWORD PTR [rbp-0x8]
  40cfcb:	mov    rsi,rcx
  40cfce:	mov    rdi,rax
  40cfd1:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cfd6:	jmp    40d069 <flatcc_emitter_copy_buffer@@Base+0x825>
  40cfdb:	mov    rax,QWORD PTR [rbp-0x10]
  40cfdf:	lea    rcx,[rax+0x1]
  40cfe3:	mov    rdx,QWORD PTR [rbp-0x18]
  40cfe7:	mov    rax,QWORD PTR [rbp-0x8]
  40cfeb:	mov    rsi,rcx
  40cfee:	mov    rdi,rax
  40cff1:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40cff6:	mov    QWORD PTR [rbp-0x10],rax
  40cffa:	mov    rax,QWORD PTR [rbp-0x10]
  40cffe:	cmp    rax,QWORD PTR [rbp-0x18]
  40d002:	jne    40d029 <flatcc_emitter_copy_buffer@@Base+0x7e5>
  40d004:	mov    rax,QWORD PTR [rbp-0x20]
  40d008:	mov    DWORD PTR [rax],0x0
  40d00e:	mov    rdx,QWORD PTR [rbp-0x18]
  40d012:	mov    rsi,QWORD PTR [rbp-0x10]
  40d016:	mov    rax,QWORD PTR [rbp-0x8]
  40d01a:	mov    ecx,0x9
  40d01f:	mov    rdi,rax
  40d022:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d027:	jmp    40d069 <flatcc_emitter_copy_buffer@@Base+0x825>
  40d029:	mov    rax,QWORD PTR [rbp-0x10]
  40d02d:	movzx  eax,BYTE PTR [rax]
  40d030:	cmp    al,0x5d
  40d032:	jne    40d05b <flatcc_emitter_copy_buffer@@Base+0x817>
  40d034:	mov    rax,QWORD PTR [rbp-0x20]
  40d038:	mov    DWORD PTR [rax],0x0
  40d03e:	mov    rax,QWORD PTR [rbp-0x10]
  40d042:	lea    rcx,[rax+0x1]
  40d046:	mov    rdx,QWORD PTR [rbp-0x18]
  40d04a:	mov    rax,QWORD PTR [rbp-0x8]
  40d04e:	mov    rsi,rcx
  40d051:	mov    rdi,rax
  40d054:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  40d059:	jmp    40d069 <flatcc_emitter_copy_buffer@@Base+0x825>
  40d05b:	mov    rax,QWORD PTR [rbp-0x20]
  40d05f:	mov    DWORD PTR [rax],0x1
  40d065:	mov    rax,QWORD PTR [rbp-0x10]
  40d069:	leave  
  40d06a:	ret    
  40d06b:	push   rbp
  40d06c:	mov    rbp,rsp
  40d06f:	sub    rsp,0x30
  40d073:	mov    QWORD PTR [rbp-0x8],rdi
  40d077:	mov    QWORD PTR [rbp-0x10],rsi
  40d07b:	mov    QWORD PTR [rbp-0x18],rdx
  40d07f:	mov    DWORD PTR [rbp-0x1c],ecx
  40d082:	mov    QWORD PTR [rbp-0x28],r8
  40d086:	mov    QWORD PTR [rbp-0x30],r9
  40d08a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d08e:	je     40d0ab <flatcc_emitter_copy_buffer@@Base+0x867>
  40d090:	mov    rdx,QWORD PTR [rbp-0x18]
  40d094:	mov    rsi,QWORD PTR [rbp-0x10]
  40d098:	mov    rax,QWORD PTR [rbp-0x8]
  40d09c:	mov    ecx,0x8
  40d0a1:	mov    rdi,rax
  40d0a4:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d0a9:	jmp    40d0ba <flatcc_emitter_copy_buffer@@Base+0x876>
  40d0ab:	mov    rax,QWORD PTR [rbp-0x30]
  40d0af:	mov    rdx,QWORD PTR [rbp-0x28]
  40d0b3:	mov    QWORD PTR [rax],rdx
  40d0b6:	mov    rax,QWORD PTR [rbp-0x10]
  40d0ba:	leave  
  40d0bb:	ret    
  40d0bc:	push   rbp
  40d0bd:	mov    rbp,rsp
  40d0c0:	sub    rsp,0x30
  40d0c4:	mov    QWORD PTR [rbp-0x8],rdi
  40d0c8:	mov    QWORD PTR [rbp-0x10],rsi
  40d0cc:	mov    QWORD PTR [rbp-0x18],rdx
  40d0d0:	mov    DWORD PTR [rbp-0x1c],ecx
  40d0d3:	mov    QWORD PTR [rbp-0x28],r8
  40d0d7:	mov    QWORD PTR [rbp-0x30],r9
  40d0db:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d0df:	je     40d0fc <flatcc_emitter_copy_buffer@@Base+0x8b8>
  40d0e1:	mov    rdx,QWORD PTR [rbp-0x18]
  40d0e5:	mov    rsi,QWORD PTR [rbp-0x10]
  40d0e9:	mov    rax,QWORD PTR [rbp-0x8]
  40d0ed:	mov    ecx,0x8
  40d0f2:	mov    rdi,rax
  40d0f5:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d0fa:	jmp    40d110 <flatcc_emitter_copy_buffer@@Base+0x8cc>
  40d0fc:	cmp    QWORD PTR [rbp-0x28],0x0
  40d101:	setne  al
  40d104:	mov    edx,eax
  40d106:	mov    rax,QWORD PTR [rbp-0x30]
  40d10a:	mov    BYTE PTR [rax],dl
  40d10c:	mov    rax,QWORD PTR [rbp-0x10]
  40d110:	leave  
  40d111:	ret    
  40d112:	push   rbp
  40d113:	mov    rbp,rsp
  40d116:	sub    rsp,0x30
  40d11a:	mov    QWORD PTR [rbp-0x8],rdi
  40d11e:	mov    QWORD PTR [rbp-0x10],rsi
  40d122:	mov    QWORD PTR [rbp-0x18],rdx
  40d126:	mov    DWORD PTR [rbp-0x1c],ecx
  40d129:	mov    QWORD PTR [rbp-0x28],r8
  40d12d:	mov    QWORD PTR [rbp-0x30],r9
  40d131:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d135:	je     40d152 <flatcc_emitter_copy_buffer@@Base+0x90e>
  40d137:	mov    rdx,QWORD PTR [rbp-0x18]
  40d13b:	mov    rsi,QWORD PTR [rbp-0x10]
  40d13f:	mov    rax,QWORD PTR [rbp-0x8]
  40d143:	mov    ecx,0x8
  40d148:	mov    rdi,rax
  40d14b:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d150:	jmp    40d188 <flatcc_emitter_copy_buffer@@Base+0x944>
  40d152:	mov    eax,0xffffffff
  40d157:	cmp    QWORD PTR [rbp-0x28],rax
  40d15b:	jbe    40d178 <flatcc_emitter_copy_buffer@@Base+0x934>
  40d15d:	mov    rdx,QWORD PTR [rbp-0x18]
  40d161:	mov    rsi,QWORD PTR [rbp-0x10]
  40d165:	mov    rax,QWORD PTR [rbp-0x8]
  40d169:	mov    ecx,0x7
  40d16e:	mov    rdi,rax
  40d171:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d176:	jmp    40d188 <flatcc_emitter_copy_buffer@@Base+0x944>
  40d178:	mov    rax,QWORD PTR [rbp-0x28]
  40d17c:	mov    edx,eax
  40d17e:	mov    rax,QWORD PTR [rbp-0x30]
  40d182:	mov    DWORD PTR [rax],edx
  40d184:	mov    rax,QWORD PTR [rbp-0x10]
  40d188:	leave  
  40d189:	ret    
  40d18a:	push   rbp
  40d18b:	mov    rbp,rsp
  40d18e:	sub    rsp,0x30
  40d192:	mov    QWORD PTR [rbp-0x8],rdi
  40d196:	mov    QWORD PTR [rbp-0x10],rsi
  40d19a:	mov    QWORD PTR [rbp-0x18],rdx
  40d19e:	mov    DWORD PTR [rbp-0x1c],ecx
  40d1a1:	mov    QWORD PTR [rbp-0x28],r8
  40d1a5:	mov    QWORD PTR [rbp-0x30],r9
  40d1a9:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d1ad:	je     40d1ca <flatcc_emitter_copy_buffer@@Base+0x986>
  40d1af:	mov    rdx,QWORD PTR [rbp-0x18]
  40d1b3:	mov    rsi,QWORD PTR [rbp-0x10]
  40d1b7:	mov    rax,QWORD PTR [rbp-0x8]
  40d1bb:	mov    ecx,0x8
  40d1c0:	mov    rdi,rax
  40d1c3:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d1c8:	jmp    40d200 <flatcc_emitter_copy_buffer@@Base+0x9bc>
  40d1ca:	cmp    QWORD PTR [rbp-0x28],0xffff
  40d1d2:	jbe    40d1ef <flatcc_emitter_copy_buffer@@Base+0x9ab>
  40d1d4:	mov    rdx,QWORD PTR [rbp-0x18]
  40d1d8:	mov    rsi,QWORD PTR [rbp-0x10]
  40d1dc:	mov    rax,QWORD PTR [rbp-0x8]
  40d1e0:	mov    ecx,0x7
  40d1e5:	mov    rdi,rax
  40d1e8:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d1ed:	jmp    40d200 <flatcc_emitter_copy_buffer@@Base+0x9bc>
  40d1ef:	mov    rax,QWORD PTR [rbp-0x28]
  40d1f3:	mov    edx,eax
  40d1f5:	mov    rax,QWORD PTR [rbp-0x30]
  40d1f9:	mov    WORD PTR [rax],dx
  40d1fc:	mov    rax,QWORD PTR [rbp-0x10]
  40d200:	leave  
  40d201:	ret    
  40d202:	push   rbp
  40d203:	mov    rbp,rsp
  40d206:	sub    rsp,0x30
  40d20a:	mov    QWORD PTR [rbp-0x8],rdi
  40d20e:	mov    QWORD PTR [rbp-0x10],rsi
  40d212:	mov    QWORD PTR [rbp-0x18],rdx
  40d216:	mov    DWORD PTR [rbp-0x1c],ecx
  40d219:	mov    QWORD PTR [rbp-0x28],r8
  40d21d:	mov    QWORD PTR [rbp-0x30],r9
  40d221:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d225:	je     40d242 <flatcc_emitter_copy_buffer@@Base+0x9fe>
  40d227:	mov    rdx,QWORD PTR [rbp-0x18]
  40d22b:	mov    rsi,QWORD PTR [rbp-0x10]
  40d22f:	mov    rax,QWORD PTR [rbp-0x8]
  40d233:	mov    ecx,0x8
  40d238:	mov    rdi,rax
  40d23b:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d240:	jmp    40d277 <flatcc_emitter_copy_buffer@@Base+0xa33>
  40d242:	cmp    QWORD PTR [rbp-0x28],0xff
  40d24a:	jbe    40d267 <flatcc_emitter_copy_buffer@@Base+0xa23>
  40d24c:	mov    rdx,QWORD PTR [rbp-0x18]
  40d250:	mov    rsi,QWORD PTR [rbp-0x10]
  40d254:	mov    rax,QWORD PTR [rbp-0x8]
  40d258:	mov    ecx,0x7
  40d25d:	mov    rdi,rax
  40d260:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d265:	jmp    40d277 <flatcc_emitter_copy_buffer@@Base+0xa33>
  40d267:	mov    rax,QWORD PTR [rbp-0x28]
  40d26b:	mov    edx,eax
  40d26d:	mov    rax,QWORD PTR [rbp-0x30]
  40d271:	mov    BYTE PTR [rax],dl
  40d273:	mov    rax,QWORD PTR [rbp-0x10]
  40d277:	leave  
  40d278:	ret    
  40d279:	push   rbp
  40d27a:	mov    rbp,rsp
  40d27d:	sub    rsp,0x30
  40d281:	mov    QWORD PTR [rbp-0x8],rdi
  40d285:	mov    QWORD PTR [rbp-0x10],rsi
  40d289:	mov    QWORD PTR [rbp-0x18],rdx
  40d28d:	mov    DWORD PTR [rbp-0x1c],ecx
  40d290:	mov    QWORD PTR [rbp-0x28],r8
  40d294:	mov    QWORD PTR [rbp-0x30],r9
  40d298:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d29c:	je     40d2dc <flatcc_emitter_copy_buffer@@Base+0xa98>
  40d29e:	movabs rax,0x8000000000000000
  40d2a8:	cmp    QWORD PTR [rbp-0x28],rax
  40d2ac:	jbe    40d2c9 <flatcc_emitter_copy_buffer@@Base+0xa85>
  40d2ae:	mov    rdx,QWORD PTR [rbp-0x18]
  40d2b2:	mov    rsi,QWORD PTR [rbp-0x10]
  40d2b6:	mov    rax,QWORD PTR [rbp-0x8]
  40d2ba:	mov    ecx,0x8
  40d2bf:	mov    rdi,rax
  40d2c2:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d2c7:	jmp    40d30f <flatcc_emitter_copy_buffer@@Base+0xacb>
  40d2c9:	mov    rax,QWORD PTR [rbp-0x28]
  40d2cd:	neg    rax
  40d2d0:	mov    rdx,rax
  40d2d3:	mov    rax,QWORD PTR [rbp-0x30]
  40d2d7:	mov    QWORD PTR [rax],rdx
  40d2da:	jmp    40d30b <flatcc_emitter_copy_buffer@@Base+0xac7>
  40d2dc:	mov    rax,QWORD PTR [rbp-0x28]
  40d2e0:	test   rax,rax
  40d2e3:	jns    40d300 <flatcc_emitter_copy_buffer@@Base+0xabc>
  40d2e5:	mov    rdx,QWORD PTR [rbp-0x18]
  40d2e9:	mov    rsi,QWORD PTR [rbp-0x10]
  40d2ed:	mov    rax,QWORD PTR [rbp-0x8]
  40d2f1:	mov    ecx,0x7
  40d2f6:	mov    rdi,rax
  40d2f9:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d2fe:	jmp    40d30f <flatcc_emitter_copy_buffer@@Base+0xacb>
  40d300:	mov    rdx,QWORD PTR [rbp-0x28]
  40d304:	mov    rax,QWORD PTR [rbp-0x30]
  40d308:	mov    QWORD PTR [rax],rdx
  40d30b:	mov    rax,QWORD PTR [rbp-0x10]
  40d30f:	leave  
  40d310:	ret    
  40d311:	push   rbp
  40d312:	mov    rbp,rsp
  40d315:	sub    rsp,0x30
  40d319:	mov    QWORD PTR [rbp-0x8],rdi
  40d31d:	mov    QWORD PTR [rbp-0x10],rsi
  40d321:	mov    QWORD PTR [rbp-0x18],rdx
  40d325:	mov    DWORD PTR [rbp-0x1c],ecx
  40d328:	mov    QWORD PTR [rbp-0x28],r8
  40d32c:	mov    QWORD PTR [rbp-0x30],r9
  40d330:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d334:	je     40d36c <flatcc_emitter_copy_buffer@@Base+0xb28>
  40d336:	mov    eax,0x80000000
  40d33b:	cmp    QWORD PTR [rbp-0x28],rax
  40d33f:	jbe    40d35c <flatcc_emitter_copy_buffer@@Base+0xb18>
  40d341:	mov    rdx,QWORD PTR [rbp-0x18]
  40d345:	mov    rsi,QWORD PTR [rbp-0x10]
  40d349:	mov    rax,QWORD PTR [rbp-0x8]
  40d34d:	mov    ecx,0x8
  40d352:	mov    rdi,rax
  40d355:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d35a:	jmp    40d3a1 <flatcc_emitter_copy_buffer@@Base+0xb5d>
  40d35c:	mov    rax,QWORD PTR [rbp-0x28]
  40d360:	neg    eax
  40d362:	mov    edx,eax
  40d364:	mov    rax,QWORD PTR [rbp-0x30]
  40d368:	mov    DWORD PTR [rax],edx
  40d36a:	jmp    40d39d <flatcc_emitter_copy_buffer@@Base+0xb59>
  40d36c:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  40d374:	jbe    40d391 <flatcc_emitter_copy_buffer@@Base+0xb4d>
  40d376:	mov    rdx,QWORD PTR [rbp-0x18]
  40d37a:	mov    rsi,QWORD PTR [rbp-0x10]
  40d37e:	mov    rax,QWORD PTR [rbp-0x8]
  40d382:	mov    ecx,0x7
  40d387:	mov    rdi,rax
  40d38a:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d38f:	jmp    40d3a1 <flatcc_emitter_copy_buffer@@Base+0xb5d>
  40d391:	mov    rax,QWORD PTR [rbp-0x28]
  40d395:	mov    edx,eax
  40d397:	mov    rax,QWORD PTR [rbp-0x30]
  40d39b:	mov    DWORD PTR [rax],edx
  40d39d:	mov    rax,QWORD PTR [rbp-0x10]
  40d3a1:	leave  
  40d3a2:	ret    
  40d3a3:	push   rbp
  40d3a4:	mov    rbp,rsp
  40d3a7:	sub    rsp,0x30
  40d3ab:	mov    QWORD PTR [rbp-0x8],rdi
  40d3af:	mov    QWORD PTR [rbp-0x10],rsi
  40d3b3:	mov    QWORD PTR [rbp-0x18],rdx
  40d3b7:	mov    DWORD PTR [rbp-0x1c],ecx
  40d3ba:	mov    QWORD PTR [rbp-0x28],r8
  40d3be:	mov    QWORD PTR [rbp-0x30],r9
  40d3c2:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d3c6:	je     40d3fe <flatcc_emitter_copy_buffer@@Base+0xbba>
  40d3c8:	cmp    QWORD PTR [rbp-0x28],0x8000
  40d3d0:	jbe    40d3ed <flatcc_emitter_copy_buffer@@Base+0xba9>
  40d3d2:	mov    rdx,QWORD PTR [rbp-0x18]
  40d3d6:	mov    rsi,QWORD PTR [rbp-0x10]
  40d3da:	mov    rax,QWORD PTR [rbp-0x8]
  40d3de:	mov    ecx,0x8
  40d3e3:	mov    rdi,rax
  40d3e6:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d3eb:	jmp    40d434 <flatcc_emitter_copy_buffer@@Base+0xbf0>
  40d3ed:	mov    rax,QWORD PTR [rbp-0x28]
  40d3f1:	neg    eax
  40d3f3:	mov    edx,eax
  40d3f5:	mov    rax,QWORD PTR [rbp-0x30]
  40d3f9:	mov    WORD PTR [rax],dx
  40d3fc:	jmp    40d430 <flatcc_emitter_copy_buffer@@Base+0xbec>
  40d3fe:	cmp    QWORD PTR [rbp-0x28],0x7fff
  40d406:	jbe    40d423 <flatcc_emitter_copy_buffer@@Base+0xbdf>
  40d408:	mov    rdx,QWORD PTR [rbp-0x18]
  40d40c:	mov    rsi,QWORD PTR [rbp-0x10]
  40d410:	mov    rax,QWORD PTR [rbp-0x8]
  40d414:	mov    ecx,0x7
  40d419:	mov    rdi,rax
  40d41c:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d421:	jmp    40d434 <flatcc_emitter_copy_buffer@@Base+0xbf0>
  40d423:	mov    rax,QWORD PTR [rbp-0x28]
  40d427:	mov    edx,eax
  40d429:	mov    rax,QWORD PTR [rbp-0x30]
  40d42d:	mov    WORD PTR [rax],dx
  40d430:	mov    rax,QWORD PTR [rbp-0x10]
  40d434:	leave  
  40d435:	ret    
  40d436:	push   rbp
  40d437:	mov    rbp,rsp
  40d43a:	sub    rsp,0x30
  40d43e:	mov    QWORD PTR [rbp-0x8],rdi
  40d442:	mov    QWORD PTR [rbp-0x10],rsi
  40d446:	mov    QWORD PTR [rbp-0x18],rdx
  40d44a:	mov    DWORD PTR [rbp-0x1c],ecx
  40d44d:	mov    QWORD PTR [rbp-0x28],r8
  40d451:	mov    QWORD PTR [rbp-0x30],r9
  40d455:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d459:	je     40d490 <flatcc_emitter_copy_buffer@@Base+0xc4c>
  40d45b:	cmp    QWORD PTR [rbp-0x28],0x80
  40d463:	jbe    40d480 <flatcc_emitter_copy_buffer@@Base+0xc3c>
  40d465:	mov    rdx,QWORD PTR [rbp-0x18]
  40d469:	mov    rsi,QWORD PTR [rbp-0x10]
  40d46d:	mov    rax,QWORD PTR [rbp-0x8]
  40d471:	mov    ecx,0x8
  40d476:	mov    rdi,rax
  40d479:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d47e:	jmp    40d4c2 <flatcc_emitter_copy_buffer@@Base+0xc7e>
  40d480:	mov    rax,QWORD PTR [rbp-0x28]
  40d484:	neg    eax
  40d486:	mov    edx,eax
  40d488:	mov    rax,QWORD PTR [rbp-0x30]
  40d48c:	mov    BYTE PTR [rax],dl
  40d48e:	jmp    40d4be <flatcc_emitter_copy_buffer@@Base+0xc7a>
  40d490:	cmp    QWORD PTR [rbp-0x28],0x7f
  40d495:	jbe    40d4b2 <flatcc_emitter_copy_buffer@@Base+0xc6e>
  40d497:	mov    rdx,QWORD PTR [rbp-0x18]
  40d49b:	mov    rsi,QWORD PTR [rbp-0x10]
  40d49f:	mov    rax,QWORD PTR [rbp-0x8]
  40d4a3:	mov    ecx,0x7
  40d4a8:	mov    rdi,rax
  40d4ab:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d4b0:	jmp    40d4c2 <flatcc_emitter_copy_buffer@@Base+0xc7e>
  40d4b2:	mov    rax,QWORD PTR [rbp-0x28]
  40d4b6:	mov    edx,eax
  40d4b8:	mov    rax,QWORD PTR [rbp-0x30]
  40d4bc:	mov    BYTE PTR [rax],dl
  40d4be:	mov    rax,QWORD PTR [rbp-0x10]
  40d4c2:	leave  
  40d4c3:	ret    
  40d4c4:	push   rbp
  40d4c5:	mov    rbp,rsp
  40d4c8:	mov    QWORD PTR [rbp-0x8],rdi
  40d4cc:	mov    QWORD PTR [rbp-0x10],rsi
  40d4d0:	mov    QWORD PTR [rbp-0x18],rdx
  40d4d4:	mov    DWORD PTR [rbp-0x1c],ecx
  40d4d7:	mov    QWORD PTR [rbp-0x28],r8
  40d4db:	mov    QWORD PTR [rbp-0x30],r9
  40d4df:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d4e3:	je     40d518 <flatcc_emitter_copy_buffer@@Base+0xcd4>
  40d4e5:	mov    rax,QWORD PTR [rbp-0x28]
  40d4e9:	test   rax,rax
  40d4ec:	js     40d4f5 <flatcc_emitter_copy_buffer@@Base+0xcb1>
  40d4ee:	vcvtsi2ss xmm0,xmm0,rax
  40d4f3:	jmp    40d50a <flatcc_emitter_copy_buffer@@Base+0xcc6>
  40d4f5:	mov    rdx,rax
  40d4f8:	shr    rdx,1
  40d4fb:	and    eax,0x1
  40d4fe:	or     rdx,rax
  40d501:	vcvtsi2ss xmm0,xmm0,rdx
  40d506:	vaddss xmm0,xmm0,xmm0
  40d50a:	vmovss xmm1,DWORD PTR [rip+0x8efe]        # 416410 <flatcc_builder_padding_base@@Base+0x2070>
  40d512:	vxorps xmm0,xmm0,xmm1
  40d516:	jmp    40d53d <flatcc_emitter_copy_buffer@@Base+0xcf9>
  40d518:	mov    rax,QWORD PTR [rbp-0x28]
  40d51c:	test   rax,rax
  40d51f:	js     40d528 <flatcc_emitter_copy_buffer@@Base+0xce4>
  40d521:	vcvtsi2ss xmm0,xmm0,rax
  40d526:	jmp    40d53d <flatcc_emitter_copy_buffer@@Base+0xcf9>
  40d528:	mov    rdx,rax
  40d52b:	shr    rdx,1
  40d52e:	and    eax,0x1
  40d531:	or     rdx,rax
  40d534:	vcvtsi2ss xmm0,xmm0,rdx
  40d539:	vaddss xmm0,xmm0,xmm0
  40d53d:	mov    rax,QWORD PTR [rbp-0x30]
  40d541:	vmovss DWORD PTR [rax],xmm0
  40d545:	mov    rax,QWORD PTR [rbp-0x10]
  40d549:	pop    rbp
  40d54a:	ret    
  40d54b:	push   rbp
  40d54c:	mov    rbp,rsp
  40d54f:	mov    QWORD PTR [rbp-0x8],rdi
  40d553:	mov    QWORD PTR [rbp-0x10],rsi
  40d557:	mov    QWORD PTR [rbp-0x18],rdx
  40d55b:	mov    DWORD PTR [rbp-0x1c],ecx
  40d55e:	mov    QWORD PTR [rbp-0x28],r8
  40d562:	mov    QWORD PTR [rbp-0x30],r9
  40d566:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d56a:	je     40d59f <flatcc_emitter_copy_buffer@@Base+0xd5b>
  40d56c:	mov    rax,QWORD PTR [rbp-0x28]
  40d570:	test   rax,rax
  40d573:	js     40d57c <flatcc_emitter_copy_buffer@@Base+0xd38>
  40d575:	vcvtsi2sd xmm0,xmm0,rax
  40d57a:	jmp    40d591 <flatcc_emitter_copy_buffer@@Base+0xd4d>
  40d57c:	mov    rdx,rax
  40d57f:	shr    rdx,1
  40d582:	and    eax,0x1
  40d585:	or     rdx,rax
  40d588:	vcvtsi2sd xmm0,xmm0,rdx
  40d58d:	vaddsd xmm0,xmm0,xmm0
  40d591:	vmovq  xmm1,QWORD PTR [rip+0x8e87]        # 416420 <flatcc_builder_padding_base@@Base+0x2080>
  40d599:	vxorpd xmm0,xmm0,xmm1
  40d59d:	jmp    40d5c4 <flatcc_emitter_copy_buffer@@Base+0xd80>
  40d59f:	mov    rax,QWORD PTR [rbp-0x28]
  40d5a3:	test   rax,rax
  40d5a6:	js     40d5af <flatcc_emitter_copy_buffer@@Base+0xd6b>
  40d5a8:	vcvtsi2sd xmm0,xmm0,rax
  40d5ad:	jmp    40d5c4 <flatcc_emitter_copy_buffer@@Base+0xd80>
  40d5af:	mov    rdx,rax
  40d5b2:	shr    rdx,1
  40d5b5:	and    eax,0x1
  40d5b8:	or     rdx,rax
  40d5bb:	vcvtsi2sd xmm0,xmm0,rdx
  40d5c0:	vaddsd xmm0,xmm0,xmm0
  40d5c4:	mov    rax,QWORD PTR [rbp-0x30]
  40d5c8:	vmovsd QWORD PTR [rax],xmm0
  40d5cc:	mov    rax,QWORD PTR [rbp-0x10]
  40d5d0:	pop    rbp
  40d5d1:	ret    
  40d5d2:	push   rbp
  40d5d3:	mov    rbp,rsp
  40d5d6:	sub    rsp,0x40
  40d5da:	mov    QWORD PTR [rbp-0x28],rdi
  40d5de:	mov    QWORD PTR [rbp-0x30],rsi
  40d5e2:	mov    QWORD PTR [rbp-0x38],rdx
  40d5e6:	mov    QWORD PTR [rbp-0x40],rcx
  40d5ea:	mov    rax,QWORD PTR fs:0x28
  40d5f3:	mov    QWORD PTR [rbp-0x8],rax
  40d5f7:	xor    eax,eax
  40d5f9:	mov    QWORD PTR [rbp-0x18],0x0
  40d601:	mov    DWORD PTR [rbp-0x1c],0x0
  40d608:	mov    rax,QWORD PTR [rbp-0x30]
  40d60c:	mov    QWORD PTR [rbp-0x10],rax
  40d610:	mov    rax,QWORD PTR [rbp-0x40]
  40d614:	mov    BYTE PTR [rax],0x0
  40d617:	mov    rax,QWORD PTR [rbp-0x30]
  40d61b:	cmp    rax,QWORD PTR [rbp-0x38]
  40d61f:	jne    40d627 <flatcc_emitter_copy_buffer@@Base+0xde3>
  40d621:	mov    rax,QWORD PTR [rbp-0x30]
  40d625:	jmp    40d67f <flatcc_emitter_copy_buffer@@Base+0xe3b>
  40d627:	lea    rdi,[rbp-0x18]
  40d62b:	lea    rcx,[rbp-0x1c]
  40d62f:	mov    rdx,QWORD PTR [rbp-0x38]
  40d633:	mov    rsi,QWORD PTR [rbp-0x30]
  40d637:	mov    rax,QWORD PTR [rbp-0x28]
  40d63b:	mov    r8,rdi
  40d63e:	mov    rdi,rax
  40d641:	call   41204e <flatcc_json_parser_integer@@Base>
  40d646:	mov    QWORD PTR [rbp-0x30],rax
  40d64a:	mov    rax,QWORD PTR [rbp-0x30]
  40d64e:	cmp    rax,QWORD PTR [rbp-0x10]
  40d652:	je     40d67b <flatcc_emitter_copy_buffer@@Base+0xe37>
  40d654:	mov    rdi,QWORD PTR [rbp-0x18]
  40d658:	mov    ecx,DWORD PTR [rbp-0x1c]
  40d65b:	mov    r8,QWORD PTR [rbp-0x40]
  40d65f:	mov    rdx,QWORD PTR [rbp-0x38]
  40d663:	mov    rsi,QWORD PTR [rbp-0x30]
  40d667:	mov    rax,QWORD PTR [rbp-0x28]
  40d66b:	mov    r9,r8
  40d66e:	mov    r8,rdi
  40d671:	mov    rdi,rax
  40d674:	call   40d202 <flatcc_emitter_copy_buffer@@Base+0x9be>
  40d679:	jmp    40d67f <flatcc_emitter_copy_buffer@@Base+0xe3b>
  40d67b:	mov    rax,QWORD PTR [rbp-0x30]
  40d67f:	mov    rdx,QWORD PTR [rbp-0x8]
  40d683:	xor    rdx,QWORD PTR fs:0x28
  40d68c:	je     40d693 <flatcc_emitter_copy_buffer@@Base+0xe4f>
  40d68e:	call   403140 <__stack_chk_fail@plt>
  40d693:	leave  
  40d694:	ret    
  40d695:	endbr64 
  40d699:	push   rbp
  40d69a:	mov    rbp,rsp
  40d69d:	sub    rsp,0x70
  40d6a1:	mov    QWORD PTR [rbp-0x48],rdi
  40d6a5:	mov    QWORD PTR [rbp-0x50],rsi
  40d6a9:	mov    QWORD PTR [rbp-0x58],rdx
  40d6ad:	mov    QWORD PTR [rbp-0x60],rcx
  40d6b1:	mov    QWORD PTR [rbp-0x68],r8
  40d6b5:	mov    rax,QWORD PTR fs:0x28
  40d6be:	mov    QWORD PTR [rbp-0x8],rax
  40d6c2:	xor    eax,eax
  40d6c4:	mov    QWORD PTR [rbp-0x28],0x0
  40d6cc:	mov    DWORD PTR [rbp-0x2c],0x0
  40d6d3:	mov    rax,QWORD PTR [rbp-0x68]
  40d6d7:	mov    QWORD PTR [rax],0x0
  40d6de:	mov    rdx,QWORD PTR [rbp-0x58]
  40d6e2:	mov    rcx,QWORD PTR [rbp-0x50]
  40d6e6:	mov    rax,QWORD PTR [rbp-0x48]
  40d6ea:	mov    rsi,rcx
  40d6ed:	mov    rdi,rax
  40d6f0:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40d6f5:	mov    QWORD PTR [rbp-0x50],rax
  40d6f9:	mov    rax,QWORD PTR [rbp-0x50]
  40d6fd:	cmp    rax,QWORD PTR [rbp-0x58]
  40d701:	jne    40d70c <flatcc_emitter_copy_buffer@@Base+0xec8>
  40d703:	mov    rax,QWORD PTR [rbp-0x50]
  40d707:	jmp    40d81f <flatcc_emitter_copy_buffer@@Base+0xfdb>
  40d70c:	mov    rax,QWORD PTR [rbp-0x60]
  40d710:	mov    QWORD PTR [rbp-0x18],rax
  40d714:	mov    rax,QWORD PTR [rbp-0x18]
  40d718:	mov    rax,QWORD PTR [rax]
  40d71b:	mov    rdx,QWORD PTR [rbp-0x50]
  40d71f:	mov    QWORD PTR [rbp-0x10],rdx
  40d723:	lea    r9,[rbp-0x30]
  40d727:	lea    r8,[rbp-0x20]
  40d72b:	lea    rcx,[rbp-0x34]
  40d72f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d733:	mov    rsi,QWORD PTR [rbp-0x10]
  40d737:	mov    rdi,QWORD PTR [rbp-0x48]
  40d73b:	call   rax
  40d73d:	mov    QWORD PTR [rbp-0x50],rax
  40d741:	mov    rax,QWORD PTR [rbp-0x50]
  40d745:	cmp    rax,QWORD PTR [rbp-0x58]
  40d749:	jne    40d754 <flatcc_emitter_copy_buffer@@Base+0xf10>
  40d74b:	mov    rax,QWORD PTR [rbp-0x50]
  40d74f:	jmp    40d81f <flatcc_emitter_copy_buffer@@Base+0xfdb>
  40d754:	mov    rax,QWORD PTR [rbp-0x50]
  40d758:	cmp    rax,QWORD PTR [rbp-0x10]
  40d75c:	jne    40d76f <flatcc_emitter_copy_buffer@@Base+0xf2b>
  40d75e:	add    QWORD PTR [rbp-0x18],0x8
  40d763:	mov    rax,QWORD PTR [rbp-0x18]
  40d767:	mov    rax,QWORD PTR [rax]
  40d76a:	test   rax,rax
  40d76d:	jne    40d714 <flatcc_emitter_copy_buffer@@Base+0xed0>
  40d76f:	mov    rax,QWORD PTR [rbp-0x10]
  40d773:	cmp    rax,QWORD PTR [rbp-0x50]
  40d777:	jne    40d797 <flatcc_emitter_copy_buffer@@Base+0xf53>
  40d779:	mov    rdx,QWORD PTR [rbp-0x58]
  40d77d:	mov    rsi,QWORD PTR [rbp-0x50]
  40d781:	mov    rax,QWORD PTR [rbp-0x48]
  40d785:	mov    ecx,0x17
  40d78a:	mov    rdi,rax
  40d78d:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d792:	jmp    40d81f <flatcc_emitter_copy_buffer@@Base+0xfdb>
  40d797:	mov    eax,DWORD PTR [rbp-0x2c]
  40d79a:	lea    edx,[rax+0x1]
  40d79d:	mov    DWORD PTR [rbp-0x2c],edx
  40d7a0:	test   eax,eax
  40d7a2:	je     40d7ca <flatcc_emitter_copy_buffer@@Base+0xf86>
  40d7a4:	mov    rax,QWORD PTR [rbp-0x48]
  40d7a8:	mov    eax,DWORD PTR [rax+0x14]
  40d7ab:	test   eax,eax
  40d7ad:	je     40d7ca <flatcc_emitter_copy_buffer@@Base+0xf86>
  40d7af:	mov    rdx,QWORD PTR [rbp-0x58]
  40d7b3:	mov    rsi,QWORD PTR [rbp-0x50]
  40d7b7:	mov    rax,QWORD PTR [rbp-0x48]
  40d7bb:	mov    ecx,0xe
  40d7c0:	mov    rdi,rax
  40d7c3:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d7c8:	jmp    40d81f <flatcc_emitter_copy_buffer@@Base+0xfdb>
  40d7ca:	mov    rdi,QWORD PTR [rbp-0x20]
  40d7ce:	mov    ecx,DWORD PTR [rbp-0x34]
  40d7d1:	lea    r8,[rbp-0x28]
  40d7d5:	mov    rdx,QWORD PTR [rbp-0x58]
  40d7d9:	mov    rsi,QWORD PTR [rbp-0x50]
  40d7dd:	mov    rax,QWORD PTR [rbp-0x48]
  40d7e1:	mov    r9,r8
  40d7e4:	mov    r8,rdi
  40d7e7:	mov    rdi,rax
  40d7ea:	call   40d06b <flatcc_emitter_copy_buffer@@Base+0x827>
  40d7ef:	cmp    QWORD PTR [rbp-0x58],rax
  40d7f3:	jne    40d7fb <flatcc_emitter_copy_buffer@@Base+0xfb7>
  40d7f5:	mov    rax,QWORD PTR [rbp-0x58]
  40d7f9:	jmp    40d81f <flatcc_emitter_copy_buffer@@Base+0xfdb>
  40d7fb:	mov    rax,QWORD PTR [rbp-0x68]
  40d7ff:	mov    rdx,QWORD PTR [rax]
  40d802:	mov    rax,QWORD PTR [rbp-0x28]
  40d806:	add    rdx,rax
  40d809:	mov    rax,QWORD PTR [rbp-0x68]
  40d80d:	mov    QWORD PTR [rax],rdx
  40d810:	mov    eax,DWORD PTR [rbp-0x30]
  40d813:	test   eax,eax
  40d815:	jne    40d70c <flatcc_emitter_copy_buffer@@Base+0xec8>
  40d81b:	mov    rax,QWORD PTR [rbp-0x50]
  40d81f:	mov    rdi,QWORD PTR [rbp-0x8]
  40d823:	xor    rdi,QWORD PTR fs:0x28
  40d82c:	je     40d833 <flatcc_emitter_copy_buffer@@Base+0xfef>
  40d82e:	call   403140 <__stack_chk_fail@plt>
  40d833:	leave  
  40d834:	ret    
  40d835:	endbr64 
  40d839:	push   rbp
  40d83a:	mov    rbp,rsp
  40d83d:	sub    rsp,0x60
  40d841:	mov    QWORD PTR [rbp-0x38],rdi
  40d845:	mov    QWORD PTR [rbp-0x40],rsi
  40d849:	mov    QWORD PTR [rbp-0x48],rdx
  40d84d:	mov    QWORD PTR [rbp-0x50],rcx
  40d851:	mov    QWORD PTR [rbp-0x58],r8
  40d855:	mov    rax,QWORD PTR fs:0x28
  40d85e:	mov    QWORD PTR [rbp-0x8],rax
  40d862:	xor    eax,eax
  40d864:	mov    DWORD PTR [rbp-0x30],0x0
  40d86b:	mov    DWORD PTR [rbp-0x24],0x0
  40d872:	mov    rax,QWORD PTR [rbp-0x58]
  40d876:	mov    DWORD PTR [rax],0x0
  40d87c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d880:	mov    rcx,QWORD PTR [rbp-0x40]
  40d884:	mov    rax,QWORD PTR [rbp-0x38]
  40d888:	mov    rsi,rcx
  40d88b:	mov    rdi,rax
  40d88e:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40d893:	mov    QWORD PTR [rbp-0x40],rax
  40d897:	mov    rax,QWORD PTR [rbp-0x40]
  40d89b:	cmp    rax,QWORD PTR [rbp-0x48]
  40d89f:	jne    40d8aa <flatcc_emitter_copy_buffer@@Base+0x1066>
  40d8a1:	mov    rax,QWORD PTR [rbp-0x40]
  40d8a5:	jmp    40d9b9 <flatcc_emitter_copy_buffer@@Base+0x1175>
  40d8aa:	mov    rax,QWORD PTR [rbp-0x50]
  40d8ae:	mov    QWORD PTR [rbp-0x18],rax
  40d8b2:	mov    rax,QWORD PTR [rbp-0x18]
  40d8b6:	mov    rax,QWORD PTR [rax]
  40d8b9:	mov    rdx,QWORD PTR [rbp-0x40]
  40d8bd:	mov    QWORD PTR [rbp-0x10],rdx
  40d8c1:	lea    r9,[rbp-0x28]
  40d8c5:	lea    r8,[rbp-0x20]
  40d8c9:	lea    rcx,[rbp-0x2c]
  40d8cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8d1:	mov    rsi,QWORD PTR [rbp-0x10]
  40d8d5:	mov    rdi,QWORD PTR [rbp-0x38]
  40d8d9:	call   rax
  40d8db:	mov    QWORD PTR [rbp-0x40],rax
  40d8df:	mov    rax,QWORD PTR [rbp-0x40]
  40d8e3:	cmp    rax,QWORD PTR [rbp-0x48]
  40d8e7:	jne    40d8f2 <flatcc_emitter_copy_buffer@@Base+0x10ae>
  40d8e9:	mov    rax,QWORD PTR [rbp-0x40]
  40d8ed:	jmp    40d9b9 <flatcc_emitter_copy_buffer@@Base+0x1175>
  40d8f2:	mov    rax,QWORD PTR [rbp-0x40]
  40d8f6:	cmp    rax,QWORD PTR [rbp-0x10]
  40d8fa:	jne    40d90d <flatcc_emitter_copy_buffer@@Base+0x10c9>
  40d8fc:	add    QWORD PTR [rbp-0x18],0x8
  40d901:	mov    rax,QWORD PTR [rbp-0x18]
  40d905:	mov    rax,QWORD PTR [rax]
  40d908:	test   rax,rax
  40d90b:	jne    40d8b2 <flatcc_emitter_copy_buffer@@Base+0x106e>
  40d90d:	mov    rax,QWORD PTR [rbp-0x10]
  40d911:	cmp    rax,QWORD PTR [rbp-0x40]
  40d915:	jne    40d935 <flatcc_emitter_copy_buffer@@Base+0x10f1>
  40d917:	mov    rdx,QWORD PTR [rbp-0x48]
  40d91b:	mov    rsi,QWORD PTR [rbp-0x40]
  40d91f:	mov    rax,QWORD PTR [rbp-0x38]
  40d923:	mov    ecx,0x17
  40d928:	mov    rdi,rax
  40d92b:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d930:	jmp    40d9b9 <flatcc_emitter_copy_buffer@@Base+0x1175>
  40d935:	mov    eax,DWORD PTR [rbp-0x24]
  40d938:	lea    edx,[rax+0x1]
  40d93b:	mov    DWORD PTR [rbp-0x24],edx
  40d93e:	test   eax,eax
  40d940:	je     40d968 <flatcc_emitter_copy_buffer@@Base+0x1124>
  40d942:	mov    rax,QWORD PTR [rbp-0x38]
  40d946:	mov    eax,DWORD PTR [rax+0x14]
  40d949:	test   eax,eax
  40d94b:	je     40d968 <flatcc_emitter_copy_buffer@@Base+0x1124>
  40d94d:	mov    rdx,QWORD PTR [rbp-0x48]
  40d951:	mov    rsi,QWORD PTR [rbp-0x40]
  40d955:	mov    rax,QWORD PTR [rbp-0x38]
  40d959:	mov    ecx,0xe
  40d95e:	mov    rdi,rax
  40d961:	call   410986 <flatcc_json_parser_set_error@@Base>
  40d966:	jmp    40d9b9 <flatcc_emitter_copy_buffer@@Base+0x1175>
  40d968:	mov    rdi,QWORD PTR [rbp-0x20]
  40d96c:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d96f:	lea    r8,[rbp-0x30]
  40d973:	mov    rdx,QWORD PTR [rbp-0x48]
  40d977:	mov    rsi,QWORD PTR [rbp-0x40]
  40d97b:	mov    rax,QWORD PTR [rbp-0x38]
  40d97f:	mov    r9,r8
  40d982:	mov    r8,rdi
  40d985:	mov    rdi,rax
  40d988:	call   40d112 <flatcc_emitter_copy_buffer@@Base+0x8ce>
  40d98d:	cmp    QWORD PTR [rbp-0x48],rax
  40d991:	jne    40d999 <flatcc_emitter_copy_buffer@@Base+0x1155>
  40d993:	mov    rax,QWORD PTR [rbp-0x48]
  40d997:	jmp    40d9b9 <flatcc_emitter_copy_buffer@@Base+0x1175>
  40d999:	mov    rax,QWORD PTR [rbp-0x58]
  40d99d:	mov    edx,DWORD PTR [rax]
  40d99f:	mov    eax,DWORD PTR [rbp-0x30]
  40d9a2:	add    edx,eax
  40d9a4:	mov    rax,QWORD PTR [rbp-0x58]
  40d9a8:	mov    DWORD PTR [rax],edx
  40d9aa:	mov    eax,DWORD PTR [rbp-0x28]
  40d9ad:	test   eax,eax
  40d9af:	jne    40d8aa <flatcc_emitter_copy_buffer@@Base+0x1066>
  40d9b5:	mov    rax,QWORD PTR [rbp-0x40]
  40d9b9:	mov    rdi,QWORD PTR [rbp-0x8]
  40d9bd:	xor    rdi,QWORD PTR fs:0x28
  40d9c6:	je     40d9cd <flatcc_emitter_copy_buffer@@Base+0x1189>
  40d9c8:	call   403140 <__stack_chk_fail@plt>
  40d9cd:	leave  
  40d9ce:	ret    
  40d9cf:	endbr64 
  40d9d3:	push   rbp
  40d9d4:	mov    rbp,rsp
  40d9d7:	sub    rsp,0x60
  40d9db:	mov    QWORD PTR [rbp-0x38],rdi
  40d9df:	mov    QWORD PTR [rbp-0x40],rsi
  40d9e3:	mov    QWORD PTR [rbp-0x48],rdx
  40d9e7:	mov    QWORD PTR [rbp-0x50],rcx
  40d9eb:	mov    QWORD PTR [rbp-0x58],r8
  40d9ef:	mov    rax,QWORD PTR fs:0x28
  40d9f8:	mov    QWORD PTR [rbp-0x8],rax
  40d9fc:	xor    eax,eax
  40d9fe:	mov    WORD PTR [rbp-0x2e],0x0
  40da04:	mov    DWORD PTR [rbp-0x24],0x0
  40da0b:	mov    rax,QWORD PTR [rbp-0x58]
  40da0f:	mov    WORD PTR [rax],0x0
  40da14:	mov    rdx,QWORD PTR [rbp-0x48]
  40da18:	mov    rcx,QWORD PTR [rbp-0x40]
  40da1c:	mov    rax,QWORD PTR [rbp-0x38]
  40da20:	mov    rsi,rcx
  40da23:	mov    rdi,rax
  40da26:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40da2b:	mov    QWORD PTR [rbp-0x40],rax
  40da2f:	mov    rax,QWORD PTR [rbp-0x40]
  40da33:	cmp    rax,QWORD PTR [rbp-0x48]
  40da37:	jne    40da42 <flatcc_emitter_copy_buffer@@Base+0x11fe>
  40da39:	mov    rax,QWORD PTR [rbp-0x40]
  40da3d:	jmp    40db54 <flatcc_emitter_copy_buffer@@Base+0x1310>
  40da42:	mov    rax,QWORD PTR [rbp-0x50]
  40da46:	mov    QWORD PTR [rbp-0x18],rax
  40da4a:	mov    rax,QWORD PTR [rbp-0x18]
  40da4e:	mov    rax,QWORD PTR [rax]
  40da51:	mov    rdx,QWORD PTR [rbp-0x40]
  40da55:	mov    QWORD PTR [rbp-0x10],rdx
  40da59:	lea    r9,[rbp-0x28]
  40da5d:	lea    r8,[rbp-0x20]
  40da61:	lea    rcx,[rbp-0x2c]
  40da65:	mov    rdx,QWORD PTR [rbp-0x48]
  40da69:	mov    rsi,QWORD PTR [rbp-0x10]
  40da6d:	mov    rdi,QWORD PTR [rbp-0x38]
  40da71:	call   rax
  40da73:	mov    QWORD PTR [rbp-0x40],rax
  40da77:	mov    rax,QWORD PTR [rbp-0x40]
  40da7b:	cmp    rax,QWORD PTR [rbp-0x48]
  40da7f:	jne    40da8a <flatcc_emitter_copy_buffer@@Base+0x1246>
  40da81:	mov    rax,QWORD PTR [rbp-0x40]
  40da85:	jmp    40db54 <flatcc_emitter_copy_buffer@@Base+0x1310>
  40da8a:	mov    rax,QWORD PTR [rbp-0x40]
  40da8e:	cmp    rax,QWORD PTR [rbp-0x10]
  40da92:	jne    40daa5 <flatcc_emitter_copy_buffer@@Base+0x1261>
  40da94:	add    QWORD PTR [rbp-0x18],0x8
  40da99:	mov    rax,QWORD PTR [rbp-0x18]
  40da9d:	mov    rax,QWORD PTR [rax]
  40daa0:	test   rax,rax
  40daa3:	jne    40da4a <flatcc_emitter_copy_buffer@@Base+0x1206>
  40daa5:	mov    rax,QWORD PTR [rbp-0x10]
  40daa9:	cmp    rax,QWORD PTR [rbp-0x40]
  40daad:	jne    40dacd <flatcc_emitter_copy_buffer@@Base+0x1289>
  40daaf:	mov    rdx,QWORD PTR [rbp-0x48]
  40dab3:	mov    rsi,QWORD PTR [rbp-0x40]
  40dab7:	mov    rax,QWORD PTR [rbp-0x38]
  40dabb:	mov    ecx,0x17
  40dac0:	mov    rdi,rax
  40dac3:	call   410986 <flatcc_json_parser_set_error@@Base>
  40dac8:	jmp    40db54 <flatcc_emitter_copy_buffer@@Base+0x1310>
  40dacd:	mov    eax,DWORD PTR [rbp-0x24]
  40dad0:	lea    edx,[rax+0x1]
  40dad3:	mov    DWORD PTR [rbp-0x24],edx
  40dad6:	test   eax,eax
  40dad8:	je     40db00 <flatcc_emitter_copy_buffer@@Base+0x12bc>
  40dada:	mov    rax,QWORD PTR [rbp-0x38]
  40dade:	mov    eax,DWORD PTR [rax+0x14]
  40dae1:	test   eax,eax
  40dae3:	je     40db00 <flatcc_emitter_copy_buffer@@Base+0x12bc>
  40dae5:	mov    rdx,QWORD PTR [rbp-0x48]
  40dae9:	mov    rsi,QWORD PTR [rbp-0x40]
  40daed:	mov    rax,QWORD PTR [rbp-0x38]
  40daf1:	mov    ecx,0xe
  40daf6:	mov    rdi,rax
  40daf9:	call   410986 <flatcc_json_parser_set_error@@Base>
  40dafe:	jmp    40db54 <flatcc_emitter_copy_buffer@@Base+0x1310>
  40db00:	mov    rdi,QWORD PTR [rbp-0x20]
  40db04:	mov    ecx,DWORD PTR [rbp-0x2c]
  40db07:	lea    r8,[rbp-0x2e]
  40db0b:	mov    rdx,QWORD PTR [rbp-0x48]
  40db0f:	mov    rsi,QWORD PTR [rbp-0x40]
  40db13:	mov    rax,QWORD PTR [rbp-0x38]
  40db17:	mov    r9,r8
  40db1a:	mov    r8,rdi
  40db1d:	mov    rdi,rax
  40db20:	call   40d18a <flatcc_emitter_copy_buffer@@Base+0x946>
  40db25:	cmp    QWORD PTR [rbp-0x48],rax
  40db29:	jne    40db31 <flatcc_emitter_copy_buffer@@Base+0x12ed>
  40db2b:	mov    rax,QWORD PTR [rbp-0x48]
  40db2f:	jmp    40db54 <flatcc_emitter_copy_buffer@@Base+0x1310>
  40db31:	mov    rax,QWORD PTR [rbp-0x58]
  40db35:	movzx  edx,WORD PTR [rax]
  40db38:	movzx  eax,WORD PTR [rbp-0x2e]
  40db3c:	add    eax,edx
  40db3e:	mov    rdx,QWORD PTR [rbp-0x58]
  40db42:	mov    WORD PTR [rdx],ax
  40db45:	mov    eax,DWORD PTR [rbp-0x28]
  40db48:	test   eax,eax
  40db4a:	jne    40da42 <flatcc_emitter_copy_buffer@@Base+0x11fe>
  40db50:	mov    rax,QWORD PTR [rbp-0x40]
  40db54:	mov    rdi,QWORD PTR [rbp-0x8]
  40db58:	xor    rdi,QWORD PTR fs:0x28
  40db61:	je     40db68 <flatcc_emitter_copy_buffer@@Base+0x1324>
  40db63:	call   403140 <__stack_chk_fail@plt>
  40db68:	leave  
  40db69:	ret    
  40db6a:	endbr64 
  40db6e:	push   rbp
  40db6f:	mov    rbp,rsp
  40db72:	sub    rsp,0x60
  40db76:	mov    QWORD PTR [rbp-0x38],rdi
  40db7a:	mov    QWORD PTR [rbp-0x40],rsi
  40db7e:	mov    QWORD PTR [rbp-0x48],rdx
  40db82:	mov    QWORD PTR [rbp-0x50],rcx
  40db86:	mov    QWORD PTR [rbp-0x58],r8
  40db8a:	mov    rax,QWORD PTR fs:0x28
  40db93:	mov    QWORD PTR [rbp-0x8],rax
  40db97:	xor    eax,eax
  40db99:	mov    BYTE PTR [rbp-0x2d],0x0
  40db9d:	mov    DWORD PTR [rbp-0x24],0x0
  40dba4:	mov    rax,QWORD PTR [rbp-0x58]
  40dba8:	mov    BYTE PTR [rax],0x0
  40dbab:	mov    rdx,QWORD PTR [rbp-0x48]
  40dbaf:	mov    rcx,QWORD PTR [rbp-0x40]
  40dbb3:	mov    rax,QWORD PTR [rbp-0x38]
  40dbb7:	mov    rsi,rcx
  40dbba:	mov    rdi,rax
  40dbbd:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40dbc2:	mov    QWORD PTR [rbp-0x40],rax
  40dbc6:	mov    rax,QWORD PTR [rbp-0x40]
  40dbca:	cmp    rax,QWORD PTR [rbp-0x48]
  40dbce:	jne    40dbd9 <flatcc_emitter_copy_buffer@@Base+0x1395>
  40dbd0:	mov    rax,QWORD PTR [rbp-0x40]
  40dbd4:	jmp    40dcea <flatcc_emitter_copy_buffer@@Base+0x14a6>
  40dbd9:	mov    rax,QWORD PTR [rbp-0x50]
  40dbdd:	mov    QWORD PTR [rbp-0x18],rax
  40dbe1:	mov    rax,QWORD PTR [rbp-0x18]
  40dbe5:	mov    rax,QWORD PTR [rax]
  40dbe8:	mov    rdx,QWORD PTR [rbp-0x40]
  40dbec:	mov    QWORD PTR [rbp-0x10],rdx
  40dbf0:	lea    r9,[rbp-0x28]
  40dbf4:	lea    r8,[rbp-0x20]
  40dbf8:	lea    rcx,[rbp-0x2c]
  40dbfc:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc00:	mov    rsi,QWORD PTR [rbp-0x10]
  40dc04:	mov    rdi,QWORD PTR [rbp-0x38]
  40dc08:	call   rax
  40dc0a:	mov    QWORD PTR [rbp-0x40],rax
  40dc0e:	mov    rax,QWORD PTR [rbp-0x40]
  40dc12:	cmp    rax,QWORD PTR [rbp-0x48]
  40dc16:	jne    40dc21 <flatcc_emitter_copy_buffer@@Base+0x13dd>
  40dc18:	mov    rax,QWORD PTR [rbp-0x40]
  40dc1c:	jmp    40dcea <flatcc_emitter_copy_buffer@@Base+0x14a6>
  40dc21:	mov    rax,QWORD PTR [rbp-0x40]
  40dc25:	cmp    rax,QWORD PTR [rbp-0x10]
  40dc29:	jne    40dc3c <flatcc_emitter_copy_buffer@@Base+0x13f8>
  40dc2b:	add    QWORD PTR [rbp-0x18],0x8
  40dc30:	mov    rax,QWORD PTR [rbp-0x18]
  40dc34:	mov    rax,QWORD PTR [rax]
  40dc37:	test   rax,rax
  40dc3a:	jne    40dbe1 <flatcc_emitter_copy_buffer@@Base+0x139d>
  40dc3c:	mov    rax,QWORD PTR [rbp-0x10]
  40dc40:	cmp    rax,QWORD PTR [rbp-0x40]
  40dc44:	jne    40dc64 <flatcc_emitter_copy_buffer@@Base+0x1420>
  40dc46:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc4a:	mov    rsi,QWORD PTR [rbp-0x40]
  40dc4e:	mov    rax,QWORD PTR [rbp-0x38]
  40dc52:	mov    ecx,0x17
  40dc57:	mov    rdi,rax
  40dc5a:	call   410986 <flatcc_json_parser_set_error@@Base>
  40dc5f:	jmp    40dcea <flatcc_emitter_copy_buffer@@Base+0x14a6>
  40dc64:	mov    eax,DWORD PTR [rbp-0x24]
  40dc67:	lea    edx,[rax+0x1]
  40dc6a:	mov    DWORD PTR [rbp-0x24],edx
  40dc6d:	test   eax,eax
  40dc6f:	je     40dc97 <flatcc_emitter_copy_buffer@@Base+0x1453>
  40dc71:	mov    rax,QWORD PTR [rbp-0x38]
  40dc75:	mov    eax,DWORD PTR [rax+0x14]
  40dc78:	test   eax,eax
  40dc7a:	je     40dc97 <flatcc_emitter_copy_buffer@@Base+0x1453>
  40dc7c:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc80:	mov    rsi,QWORD PTR [rbp-0x40]
  40dc84:	mov    rax,QWORD PTR [rbp-0x38]
  40dc88:	mov    ecx,0xe
  40dc8d:	mov    rdi,rax
  40dc90:	call   410986 <flatcc_json_parser_set_error@@Base>
  40dc95:	jmp    40dcea <flatcc_emitter_copy_buffer@@Base+0x14a6>
  40dc97:	mov    rdi,QWORD PTR [rbp-0x20]
  40dc9b:	mov    ecx,DWORD PTR [rbp-0x2c]
  40dc9e:	lea    r8,[rbp-0x2d]
  40dca2:	mov    rdx,QWORD PTR [rbp-0x48]
  40dca6:	mov    rsi,QWORD PTR [rbp-0x40]
  40dcaa:	mov    rax,QWORD PTR [rbp-0x38]
  40dcae:	mov    r9,r8
  40dcb1:	mov    r8,rdi
  40dcb4:	mov    rdi,rax
  40dcb7:	call   40d202 <flatcc_emitter_copy_buffer@@Base+0x9be>
  40dcbc:	cmp    QWORD PTR [rbp-0x48],rax
  40dcc0:	jne    40dcc8 <flatcc_emitter_copy_buffer@@Base+0x1484>
  40dcc2:	mov    rax,QWORD PTR [rbp-0x48]
  40dcc6:	jmp    40dcea <flatcc_emitter_copy_buffer@@Base+0x14a6>
  40dcc8:	mov    rax,QWORD PTR [rbp-0x58]
  40dccc:	movzx  edx,BYTE PTR [rax]
  40dccf:	movzx  eax,BYTE PTR [rbp-0x2d]
  40dcd3:	add    eax,edx
  40dcd5:	mov    rdx,QWORD PTR [rbp-0x58]
  40dcd9:	mov    BYTE PTR [rdx],al
  40dcdb:	mov    eax,DWORD PTR [rbp-0x28]
  40dcde:	test   eax,eax
  40dce0:	jne    40dbd9 <flatcc_emitter_copy_buffer@@Base+0x1395>
  40dce6:	mov    rax,QWORD PTR [rbp-0x40]
  40dcea:	mov    rdi,QWORD PTR [rbp-0x8]
  40dcee:	xor    rdi,QWORD PTR fs:0x28
  40dcf7:	je     40dcfe <flatcc_emitter_copy_buffer@@Base+0x14ba>
  40dcf9:	call   403140 <__stack_chk_fail@plt>
  40dcfe:	leave  
  40dcff:	ret    
  40dd00:	endbr64 
  40dd04:	push   rbp
  40dd05:	mov    rbp,rsp
  40dd08:	sub    rsp,0x70
  40dd0c:	mov    QWORD PTR [rbp-0x48],rdi
  40dd10:	mov    QWORD PTR [rbp-0x50],rsi
  40dd14:	mov    QWORD PTR [rbp-0x58],rdx
  40dd18:	mov    QWORD PTR [rbp-0x60],rcx
  40dd1c:	mov    QWORD PTR [rbp-0x68],r8
  40dd20:	mov    rax,QWORD PTR fs:0x28
  40dd29:	mov    QWORD PTR [rbp-0x8],rax
  40dd2d:	xor    eax,eax
  40dd2f:	mov    QWORD PTR [rbp-0x28],0x0
  40dd37:	mov    DWORD PTR [rbp-0x2c],0x0
  40dd3e:	mov    rax,QWORD PTR [rbp-0x68]
  40dd42:	mov    QWORD PTR [rax],0x0
  40dd49:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd4d:	mov    rcx,QWORD PTR [rbp-0x50]
  40dd51:	mov    rax,QWORD PTR [rbp-0x48]
  40dd55:	mov    rsi,rcx
  40dd58:	mov    rdi,rax
  40dd5b:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40dd60:	mov    QWORD PTR [rbp-0x50],rax
  40dd64:	mov    rax,QWORD PTR [rbp-0x50]
  40dd68:	cmp    rax,QWORD PTR [rbp-0x58]
  40dd6c:	jne    40dd77 <flatcc_emitter_copy_buffer@@Base+0x1533>
  40dd6e:	mov    rax,QWORD PTR [rbp-0x50]
  40dd72:	jmp    40de8a <flatcc_emitter_copy_buffer@@Base+0x1646>
  40dd77:	mov    rax,QWORD PTR [rbp-0x60]
  40dd7b:	mov    QWORD PTR [rbp-0x18],rax
  40dd7f:	mov    rax,QWORD PTR [rbp-0x18]
  40dd83:	mov    rax,QWORD PTR [rax]
  40dd86:	mov    rdx,QWORD PTR [rbp-0x50]
  40dd8a:	mov    QWORD PTR [rbp-0x10],rdx
  40dd8e:	lea    r9,[rbp-0x30]
  40dd92:	lea    r8,[rbp-0x20]
  40dd96:	lea    rcx,[rbp-0x34]
  40dd9a:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd9e:	mov    rsi,QWORD PTR [rbp-0x10]
  40dda2:	mov    rdi,QWORD PTR [rbp-0x48]
  40dda6:	call   rax
  40dda8:	mov    QWORD PTR [rbp-0x50],rax
  40ddac:	mov    rax,QWORD PTR [rbp-0x50]
  40ddb0:	cmp    rax,QWORD PTR [rbp-0x58]
  40ddb4:	jne    40ddbf <flatcc_emitter_copy_buffer@@Base+0x157b>
  40ddb6:	mov    rax,QWORD PTR [rbp-0x50]
  40ddba:	jmp    40de8a <flatcc_emitter_copy_buffer@@Base+0x1646>
  40ddbf:	mov    rax,QWORD PTR [rbp-0x50]
  40ddc3:	cmp    rax,QWORD PTR [rbp-0x10]
  40ddc7:	jne    40ddda <flatcc_emitter_copy_buffer@@Base+0x1596>
  40ddc9:	add    QWORD PTR [rbp-0x18],0x8
  40ddce:	mov    rax,QWORD PTR [rbp-0x18]
  40ddd2:	mov    rax,QWORD PTR [rax]
  40ddd5:	test   rax,rax
  40ddd8:	jne    40dd7f <flatcc_emitter_copy_buffer@@Base+0x153b>
  40ddda:	mov    rax,QWORD PTR [rbp-0x10]
  40ddde:	cmp    rax,QWORD PTR [rbp-0x50]
  40dde2:	jne    40de02 <flatcc_emitter_copy_buffer@@Base+0x15be>
  40dde4:	mov    rdx,QWORD PTR [rbp-0x58]
  40dde8:	mov    rsi,QWORD PTR [rbp-0x50]
  40ddec:	mov    rax,QWORD PTR [rbp-0x48]
  40ddf0:	mov    ecx,0x17
  40ddf5:	mov    rdi,rax
  40ddf8:	call   410986 <flatcc_json_parser_set_error@@Base>
  40ddfd:	jmp    40de8a <flatcc_emitter_copy_buffer@@Base+0x1646>
  40de02:	mov    eax,DWORD PTR [rbp-0x2c]
  40de05:	lea    edx,[rax+0x1]
  40de08:	mov    DWORD PTR [rbp-0x2c],edx
  40de0b:	test   eax,eax
  40de0d:	je     40de35 <flatcc_emitter_copy_buffer@@Base+0x15f1>
  40de0f:	mov    rax,QWORD PTR [rbp-0x48]
  40de13:	mov    eax,DWORD PTR [rax+0x14]
  40de16:	test   eax,eax
  40de18:	je     40de35 <flatcc_emitter_copy_buffer@@Base+0x15f1>
  40de1a:	mov    rdx,QWORD PTR [rbp-0x58]
  40de1e:	mov    rsi,QWORD PTR [rbp-0x50]
  40de22:	mov    rax,QWORD PTR [rbp-0x48]
  40de26:	mov    ecx,0xe
  40de2b:	mov    rdi,rax
  40de2e:	call   410986 <flatcc_json_parser_set_error@@Base>
  40de33:	jmp    40de8a <flatcc_emitter_copy_buffer@@Base+0x1646>
  40de35:	mov    rdi,QWORD PTR [rbp-0x20]
  40de39:	mov    ecx,DWORD PTR [rbp-0x34]
  40de3c:	lea    r8,[rbp-0x28]
  40de40:	mov    rdx,QWORD PTR [rbp-0x58]
  40de44:	mov    rsi,QWORD PTR [rbp-0x50]
  40de48:	mov    rax,QWORD PTR [rbp-0x48]
  40de4c:	mov    r9,r8
  40de4f:	mov    r8,rdi
  40de52:	mov    rdi,rax
  40de55:	call   40d279 <flatcc_emitter_copy_buffer@@Base+0xa35>
  40de5a:	cmp    QWORD PTR [rbp-0x58],rax
  40de5e:	jne    40de66 <flatcc_emitter_copy_buffer@@Base+0x1622>
  40de60:	mov    rax,QWORD PTR [rbp-0x58]
  40de64:	jmp    40de8a <flatcc_emitter_copy_buffer@@Base+0x1646>
  40de66:	mov    rax,QWORD PTR [rbp-0x68]
  40de6a:	mov    rdx,QWORD PTR [rax]
  40de6d:	mov    rax,QWORD PTR [rbp-0x28]
  40de71:	add    rdx,rax
  40de74:	mov    rax,QWORD PTR [rbp-0x68]
  40de78:	mov    QWORD PTR [rax],rdx
  40de7b:	mov    eax,DWORD PTR [rbp-0x30]
  40de7e:	test   eax,eax
  40de80:	jne    40dd77 <flatcc_emitter_copy_buffer@@Base+0x1533>
  40de86:	mov    rax,QWORD PTR [rbp-0x50]
  40de8a:	mov    rdi,QWORD PTR [rbp-0x8]
  40de8e:	xor    rdi,QWORD PTR fs:0x28
  40de97:	je     40de9e <flatcc_emitter_copy_buffer@@Base+0x165a>
  40de99:	call   403140 <__stack_chk_fail@plt>
  40de9e:	leave  
  40de9f:	ret    
  40dea0:	endbr64 
  40dea4:	push   rbp
  40dea5:	mov    rbp,rsp
  40dea8:	sub    rsp,0x60
  40deac:	mov    QWORD PTR [rbp-0x38],rdi
  40deb0:	mov    QWORD PTR [rbp-0x40],rsi
  40deb4:	mov    QWORD PTR [rbp-0x48],rdx
  40deb8:	mov    QWORD PTR [rbp-0x50],rcx
  40debc:	mov    QWORD PTR [rbp-0x58],r8
  40dec0:	mov    rax,QWORD PTR fs:0x28
  40dec9:	mov    QWORD PTR [rbp-0x8],rax
  40decd:	xor    eax,eax
  40decf:	mov    DWORD PTR [rbp-0x30],0x0
  40ded6:	mov    DWORD PTR [rbp-0x24],0x0
  40dedd:	mov    rax,QWORD PTR [rbp-0x58]
  40dee1:	mov    DWORD PTR [rax],0x0
  40dee7:	mov    rdx,QWORD PTR [rbp-0x48]
  40deeb:	mov    rcx,QWORD PTR [rbp-0x40]
  40deef:	mov    rax,QWORD PTR [rbp-0x38]
  40def3:	mov    rsi,rcx
  40def6:	mov    rdi,rax
  40def9:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40defe:	mov    QWORD PTR [rbp-0x40],rax
  40df02:	mov    rax,QWORD PTR [rbp-0x40]
  40df06:	cmp    rax,QWORD PTR [rbp-0x48]
  40df0a:	jne    40df15 <flatcc_emitter_copy_buffer@@Base+0x16d1>
  40df0c:	mov    rax,QWORD PTR [rbp-0x40]
  40df10:	jmp    40e024 <flatcc_emitter_copy_buffer@@Base+0x17e0>
  40df15:	mov    rax,QWORD PTR [rbp-0x50]
  40df19:	mov    QWORD PTR [rbp-0x18],rax
  40df1d:	mov    rax,QWORD PTR [rbp-0x18]
  40df21:	mov    rax,QWORD PTR [rax]
  40df24:	mov    rdx,QWORD PTR [rbp-0x40]
  40df28:	mov    QWORD PTR [rbp-0x10],rdx
  40df2c:	lea    r9,[rbp-0x28]
  40df30:	lea    r8,[rbp-0x20]
  40df34:	lea    rcx,[rbp-0x2c]
  40df38:	mov    rdx,QWORD PTR [rbp-0x48]
  40df3c:	mov    rsi,QWORD PTR [rbp-0x10]
  40df40:	mov    rdi,QWORD PTR [rbp-0x38]
  40df44:	call   rax
  40df46:	mov    QWORD PTR [rbp-0x40],rax
  40df4a:	mov    rax,QWORD PTR [rbp-0x40]
  40df4e:	cmp    rax,QWORD PTR [rbp-0x48]
  40df52:	jne    40df5d <flatcc_emitter_copy_buffer@@Base+0x1719>
  40df54:	mov    rax,QWORD PTR [rbp-0x40]
  40df58:	jmp    40e024 <flatcc_emitter_copy_buffer@@Base+0x17e0>
  40df5d:	mov    rax,QWORD PTR [rbp-0x40]
  40df61:	cmp    rax,QWORD PTR [rbp-0x10]
  40df65:	jne    40df78 <flatcc_emitter_copy_buffer@@Base+0x1734>
  40df67:	add    QWORD PTR [rbp-0x18],0x8
  40df6c:	mov    rax,QWORD PTR [rbp-0x18]
  40df70:	mov    rax,QWORD PTR [rax]
  40df73:	test   rax,rax
  40df76:	jne    40df1d <flatcc_emitter_copy_buffer@@Base+0x16d9>
  40df78:	mov    rax,QWORD PTR [rbp-0x10]
  40df7c:	cmp    rax,QWORD PTR [rbp-0x40]
  40df80:	jne    40dfa0 <flatcc_emitter_copy_buffer@@Base+0x175c>
  40df82:	mov    rdx,QWORD PTR [rbp-0x48]
  40df86:	mov    rsi,QWORD PTR [rbp-0x40]
  40df8a:	mov    rax,QWORD PTR [rbp-0x38]
  40df8e:	mov    ecx,0x17
  40df93:	mov    rdi,rax
  40df96:	call   410986 <flatcc_json_parser_set_error@@Base>
  40df9b:	jmp    40e024 <flatcc_emitter_copy_buffer@@Base+0x17e0>
  40dfa0:	mov    eax,DWORD PTR [rbp-0x24]
  40dfa3:	lea    edx,[rax+0x1]
  40dfa6:	mov    DWORD PTR [rbp-0x24],edx
  40dfa9:	test   eax,eax
  40dfab:	je     40dfd3 <flatcc_emitter_copy_buffer@@Base+0x178f>
  40dfad:	mov    rax,QWORD PTR [rbp-0x38]
  40dfb1:	mov    eax,DWORD PTR [rax+0x14]
  40dfb4:	test   eax,eax
  40dfb6:	je     40dfd3 <flatcc_emitter_copy_buffer@@Base+0x178f>
  40dfb8:	mov    rdx,QWORD PTR [rbp-0x48]
  40dfbc:	mov    rsi,QWORD PTR [rbp-0x40]
  40dfc0:	mov    rax,QWORD PTR [rbp-0x38]
  40dfc4:	mov    ecx,0xe
  40dfc9:	mov    rdi,rax
  40dfcc:	call   410986 <flatcc_json_parser_set_error@@Base>
  40dfd1:	jmp    40e024 <flatcc_emitter_copy_buffer@@Base+0x17e0>
  40dfd3:	mov    rdi,QWORD PTR [rbp-0x20]
  40dfd7:	mov    ecx,DWORD PTR [rbp-0x2c]
  40dfda:	lea    r8,[rbp-0x30]
  40dfde:	mov    rdx,QWORD PTR [rbp-0x48]
  40dfe2:	mov    rsi,QWORD PTR [rbp-0x40]
  40dfe6:	mov    rax,QWORD PTR [rbp-0x38]
  40dfea:	mov    r9,r8
  40dfed:	mov    r8,rdi
  40dff0:	mov    rdi,rax
  40dff3:	call   40d311 <flatcc_emitter_copy_buffer@@Base+0xacd>
  40dff8:	cmp    QWORD PTR [rbp-0x48],rax
  40dffc:	jne    40e004 <flatcc_emitter_copy_buffer@@Base+0x17c0>
  40dffe:	mov    rax,QWORD PTR [rbp-0x48]
  40e002:	jmp    40e024 <flatcc_emitter_copy_buffer@@Base+0x17e0>
  40e004:	mov    rax,QWORD PTR [rbp-0x58]
  40e008:	mov    edx,DWORD PTR [rax]
  40e00a:	mov    eax,DWORD PTR [rbp-0x30]
  40e00d:	add    edx,eax
  40e00f:	mov    rax,QWORD PTR [rbp-0x58]
  40e013:	mov    DWORD PTR [rax],edx
  40e015:	mov    eax,DWORD PTR [rbp-0x28]
  40e018:	test   eax,eax
  40e01a:	jne    40df15 <flatcc_emitter_copy_buffer@@Base+0x16d1>
  40e020:	mov    rax,QWORD PTR [rbp-0x40]
  40e024:	mov    rdi,QWORD PTR [rbp-0x8]
  40e028:	xor    rdi,QWORD PTR fs:0x28
  40e031:	je     40e038 <flatcc_emitter_copy_buffer@@Base+0x17f4>
  40e033:	call   403140 <__stack_chk_fail@plt>
  40e038:	leave  
  40e039:	ret    
  40e03a:	endbr64 
  40e03e:	push   rbp
  40e03f:	mov    rbp,rsp
  40e042:	sub    rsp,0x60
  40e046:	mov    QWORD PTR [rbp-0x38],rdi
  40e04a:	mov    QWORD PTR [rbp-0x40],rsi
  40e04e:	mov    QWORD PTR [rbp-0x48],rdx
  40e052:	mov    QWORD PTR [rbp-0x50],rcx
  40e056:	mov    QWORD PTR [rbp-0x58],r8
  40e05a:	mov    rax,QWORD PTR fs:0x28
  40e063:	mov    QWORD PTR [rbp-0x8],rax
  40e067:	xor    eax,eax
  40e069:	mov    WORD PTR [rbp-0x2e],0x0
  40e06f:	mov    DWORD PTR [rbp-0x24],0x0
  40e076:	mov    rax,QWORD PTR [rbp-0x58]
  40e07a:	mov    WORD PTR [rax],0x0
  40e07f:	mov    rdx,QWORD PTR [rbp-0x48]
  40e083:	mov    rcx,QWORD PTR [rbp-0x40]
  40e087:	mov    rax,QWORD PTR [rbp-0x38]
  40e08b:	mov    rsi,rcx
  40e08e:	mov    rdi,rax
  40e091:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40e096:	mov    QWORD PTR [rbp-0x40],rax
  40e09a:	mov    rax,QWORD PTR [rbp-0x40]
  40e09e:	cmp    rax,QWORD PTR [rbp-0x48]
  40e0a2:	jne    40e0ad <flatcc_emitter_copy_buffer@@Base+0x1869>
  40e0a4:	mov    rax,QWORD PTR [rbp-0x40]
  40e0a8:	jmp    40e1c3 <flatcc_emitter_copy_buffer@@Base+0x197f>
  40e0ad:	mov    rax,QWORD PTR [rbp-0x50]
  40e0b1:	mov    QWORD PTR [rbp-0x18],rax
  40e0b5:	mov    rax,QWORD PTR [rbp-0x18]
  40e0b9:	mov    rax,QWORD PTR [rax]
  40e0bc:	mov    rdx,QWORD PTR [rbp-0x40]
  40e0c0:	mov    QWORD PTR [rbp-0x10],rdx
  40e0c4:	lea    r9,[rbp-0x28]
  40e0c8:	lea    r8,[rbp-0x20]
  40e0cc:	lea    rcx,[rbp-0x2c]
  40e0d0:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0d4:	mov    rsi,QWORD PTR [rbp-0x10]
  40e0d8:	mov    rdi,QWORD PTR [rbp-0x38]
  40e0dc:	call   rax
  40e0de:	mov    QWORD PTR [rbp-0x40],rax
  40e0e2:	mov    rax,QWORD PTR [rbp-0x40]
  40e0e6:	cmp    rax,QWORD PTR [rbp-0x48]
  40e0ea:	jne    40e0f5 <flatcc_emitter_copy_buffer@@Base+0x18b1>
  40e0ec:	mov    rax,QWORD PTR [rbp-0x40]
  40e0f0:	jmp    40e1c3 <flatcc_emitter_copy_buffer@@Base+0x197f>
  40e0f5:	mov    rax,QWORD PTR [rbp-0x40]
  40e0f9:	cmp    rax,QWORD PTR [rbp-0x10]
  40e0fd:	jne    40e110 <flatcc_emitter_copy_buffer@@Base+0x18cc>
  40e0ff:	add    QWORD PTR [rbp-0x18],0x8
  40e104:	mov    rax,QWORD PTR [rbp-0x18]
  40e108:	mov    rax,QWORD PTR [rax]
  40e10b:	test   rax,rax
  40e10e:	jne    40e0b5 <flatcc_emitter_copy_buffer@@Base+0x1871>
  40e110:	mov    rax,QWORD PTR [rbp-0x10]
  40e114:	cmp    rax,QWORD PTR [rbp-0x40]
  40e118:	jne    40e138 <flatcc_emitter_copy_buffer@@Base+0x18f4>
  40e11a:	mov    rdx,QWORD PTR [rbp-0x48]
  40e11e:	mov    rsi,QWORD PTR [rbp-0x40]
  40e122:	mov    rax,QWORD PTR [rbp-0x38]
  40e126:	mov    ecx,0x17
  40e12b:	mov    rdi,rax
  40e12e:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e133:	jmp    40e1c3 <flatcc_emitter_copy_buffer@@Base+0x197f>
  40e138:	mov    eax,DWORD PTR [rbp-0x24]
  40e13b:	lea    edx,[rax+0x1]
  40e13e:	mov    DWORD PTR [rbp-0x24],edx
  40e141:	test   eax,eax
  40e143:	je     40e16b <flatcc_emitter_copy_buffer@@Base+0x1927>
  40e145:	mov    rax,QWORD PTR [rbp-0x38]
  40e149:	mov    eax,DWORD PTR [rax+0x14]
  40e14c:	test   eax,eax
  40e14e:	je     40e16b <flatcc_emitter_copy_buffer@@Base+0x1927>
  40e150:	mov    rdx,QWORD PTR [rbp-0x48]
  40e154:	mov    rsi,QWORD PTR [rbp-0x40]
  40e158:	mov    rax,QWORD PTR [rbp-0x38]
  40e15c:	mov    ecx,0xe
  40e161:	mov    rdi,rax
  40e164:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e169:	jmp    40e1c3 <flatcc_emitter_copy_buffer@@Base+0x197f>
  40e16b:	mov    rdi,QWORD PTR [rbp-0x20]
  40e16f:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e172:	lea    r8,[rbp-0x2e]
  40e176:	mov    rdx,QWORD PTR [rbp-0x48]
  40e17a:	mov    rsi,QWORD PTR [rbp-0x40]
  40e17e:	mov    rax,QWORD PTR [rbp-0x38]
  40e182:	mov    r9,r8
  40e185:	mov    r8,rdi
  40e188:	mov    rdi,rax
  40e18b:	call   40d3a3 <flatcc_emitter_copy_buffer@@Base+0xb5f>
  40e190:	cmp    QWORD PTR [rbp-0x48],rax
  40e194:	jne    40e19c <flatcc_emitter_copy_buffer@@Base+0x1958>
  40e196:	mov    rax,QWORD PTR [rbp-0x48]
  40e19a:	jmp    40e1c3 <flatcc_emitter_copy_buffer@@Base+0x197f>
  40e19c:	mov    rax,QWORD PTR [rbp-0x58]
  40e1a0:	movzx  eax,WORD PTR [rax]
  40e1a3:	mov    edx,eax
  40e1a5:	movzx  eax,WORD PTR [rbp-0x2e]
  40e1a9:	add    eax,edx
  40e1ab:	mov    edx,eax
  40e1ad:	mov    rax,QWORD PTR [rbp-0x58]
  40e1b1:	mov    WORD PTR [rax],dx
  40e1b4:	mov    eax,DWORD PTR [rbp-0x28]
  40e1b7:	test   eax,eax
  40e1b9:	jne    40e0ad <flatcc_emitter_copy_buffer@@Base+0x1869>
  40e1bf:	mov    rax,QWORD PTR [rbp-0x40]
  40e1c3:	mov    rdi,QWORD PTR [rbp-0x8]
  40e1c7:	xor    rdi,QWORD PTR fs:0x28
  40e1d0:	je     40e1d7 <flatcc_emitter_copy_buffer@@Base+0x1993>
  40e1d2:	call   403140 <__stack_chk_fail@plt>
  40e1d7:	leave  
  40e1d8:	ret    
  40e1d9:	endbr64 
  40e1dd:	push   rbp
  40e1de:	mov    rbp,rsp
  40e1e1:	sub    rsp,0x60
  40e1e5:	mov    QWORD PTR [rbp-0x38],rdi
  40e1e9:	mov    QWORD PTR [rbp-0x40],rsi
  40e1ed:	mov    QWORD PTR [rbp-0x48],rdx
  40e1f1:	mov    QWORD PTR [rbp-0x50],rcx
  40e1f5:	mov    QWORD PTR [rbp-0x58],r8
  40e1f9:	mov    rax,QWORD PTR fs:0x28
  40e202:	mov    QWORD PTR [rbp-0x8],rax
  40e206:	xor    eax,eax
  40e208:	mov    BYTE PTR [rbp-0x2d],0x0
  40e20c:	mov    DWORD PTR [rbp-0x24],0x0
  40e213:	mov    rax,QWORD PTR [rbp-0x58]
  40e217:	mov    BYTE PTR [rax],0x0
  40e21a:	mov    rdx,QWORD PTR [rbp-0x48]
  40e21e:	mov    rcx,QWORD PTR [rbp-0x40]
  40e222:	mov    rax,QWORD PTR [rbp-0x38]
  40e226:	mov    rsi,rcx
  40e229:	mov    rdi,rax
  40e22c:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40e231:	mov    QWORD PTR [rbp-0x40],rax
  40e235:	mov    rax,QWORD PTR [rbp-0x40]
  40e239:	cmp    rax,QWORD PTR [rbp-0x48]
  40e23d:	jne    40e248 <flatcc_emitter_copy_buffer@@Base+0x1a04>
  40e23f:	mov    rax,QWORD PTR [rbp-0x40]
  40e243:	jmp    40e35d <flatcc_emitter_copy_buffer@@Base+0x1b19>
  40e248:	mov    rax,QWORD PTR [rbp-0x50]
  40e24c:	mov    QWORD PTR [rbp-0x18],rax
  40e250:	mov    rax,QWORD PTR [rbp-0x18]
  40e254:	mov    rax,QWORD PTR [rax]
  40e257:	mov    rdx,QWORD PTR [rbp-0x40]
  40e25b:	mov    QWORD PTR [rbp-0x10],rdx
  40e25f:	lea    r9,[rbp-0x28]
  40e263:	lea    r8,[rbp-0x20]
  40e267:	lea    rcx,[rbp-0x2c]
  40e26b:	mov    rdx,QWORD PTR [rbp-0x48]
  40e26f:	mov    rsi,QWORD PTR [rbp-0x10]
  40e273:	mov    rdi,QWORD PTR [rbp-0x38]
  40e277:	call   rax
  40e279:	mov    QWORD PTR [rbp-0x40],rax
  40e27d:	mov    rax,QWORD PTR [rbp-0x40]
  40e281:	cmp    rax,QWORD PTR [rbp-0x48]
  40e285:	jne    40e290 <flatcc_emitter_copy_buffer@@Base+0x1a4c>
  40e287:	mov    rax,QWORD PTR [rbp-0x40]
  40e28b:	jmp    40e35d <flatcc_emitter_copy_buffer@@Base+0x1b19>
  40e290:	mov    rax,QWORD PTR [rbp-0x40]
  40e294:	cmp    rax,QWORD PTR [rbp-0x10]
  40e298:	jne    40e2ab <flatcc_emitter_copy_buffer@@Base+0x1a67>
  40e29a:	add    QWORD PTR [rbp-0x18],0x8
  40e29f:	mov    rax,QWORD PTR [rbp-0x18]
  40e2a3:	mov    rax,QWORD PTR [rax]
  40e2a6:	test   rax,rax
  40e2a9:	jne    40e250 <flatcc_emitter_copy_buffer@@Base+0x1a0c>
  40e2ab:	mov    rax,QWORD PTR [rbp-0x10]
  40e2af:	cmp    rax,QWORD PTR [rbp-0x40]
  40e2b3:	jne    40e2d3 <flatcc_emitter_copy_buffer@@Base+0x1a8f>
  40e2b5:	mov    rdx,QWORD PTR [rbp-0x48]
  40e2b9:	mov    rsi,QWORD PTR [rbp-0x40]
  40e2bd:	mov    rax,QWORD PTR [rbp-0x38]
  40e2c1:	mov    ecx,0x17
  40e2c6:	mov    rdi,rax
  40e2c9:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e2ce:	jmp    40e35d <flatcc_emitter_copy_buffer@@Base+0x1b19>
  40e2d3:	mov    eax,DWORD PTR [rbp-0x24]
  40e2d6:	lea    edx,[rax+0x1]
  40e2d9:	mov    DWORD PTR [rbp-0x24],edx
  40e2dc:	test   eax,eax
  40e2de:	je     40e306 <flatcc_emitter_copy_buffer@@Base+0x1ac2>
  40e2e0:	mov    rax,QWORD PTR [rbp-0x38]
  40e2e4:	mov    eax,DWORD PTR [rax+0x14]
  40e2e7:	test   eax,eax
  40e2e9:	je     40e306 <flatcc_emitter_copy_buffer@@Base+0x1ac2>
  40e2eb:	mov    rdx,QWORD PTR [rbp-0x48]
  40e2ef:	mov    rsi,QWORD PTR [rbp-0x40]
  40e2f3:	mov    rax,QWORD PTR [rbp-0x38]
  40e2f7:	mov    ecx,0xe
  40e2fc:	mov    rdi,rax
  40e2ff:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e304:	jmp    40e35d <flatcc_emitter_copy_buffer@@Base+0x1b19>
  40e306:	mov    rdi,QWORD PTR [rbp-0x20]
  40e30a:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e30d:	lea    r8,[rbp-0x2d]
  40e311:	mov    rdx,QWORD PTR [rbp-0x48]
  40e315:	mov    rsi,QWORD PTR [rbp-0x40]
  40e319:	mov    rax,QWORD PTR [rbp-0x38]
  40e31d:	mov    r9,r8
  40e320:	mov    r8,rdi
  40e323:	mov    rdi,rax
  40e326:	call   40d436 <flatcc_emitter_copy_buffer@@Base+0xbf2>
  40e32b:	cmp    QWORD PTR [rbp-0x48],rax
  40e32f:	jne    40e337 <flatcc_emitter_copy_buffer@@Base+0x1af3>
  40e331:	mov    rax,QWORD PTR [rbp-0x48]
  40e335:	jmp    40e35d <flatcc_emitter_copy_buffer@@Base+0x1b19>
  40e337:	mov    rax,QWORD PTR [rbp-0x58]
  40e33b:	movzx  eax,BYTE PTR [rax]
  40e33e:	mov    edx,eax
  40e340:	movzx  eax,BYTE PTR [rbp-0x2d]
  40e344:	add    eax,edx
  40e346:	mov    edx,eax
  40e348:	mov    rax,QWORD PTR [rbp-0x58]
  40e34c:	mov    BYTE PTR [rax],dl
  40e34e:	mov    eax,DWORD PTR [rbp-0x28]
  40e351:	test   eax,eax
  40e353:	jne    40e248 <flatcc_emitter_copy_buffer@@Base+0x1a04>
  40e359:	mov    rax,QWORD PTR [rbp-0x40]
  40e35d:	mov    rdi,QWORD PTR [rbp-0x8]
  40e361:	xor    rdi,QWORD PTR fs:0x28
  40e36a:	je     40e371 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e36c:	call   403140 <__stack_chk_fail@plt>
  40e371:	leave  
  40e372:	ret    
  40e373:	endbr64 
  40e377:	push   rbp
  40e378:	mov    rbp,rsp
  40e37b:	sub    rsp,0x60
  40e37f:	mov    QWORD PTR [rbp-0x38],rdi
  40e383:	mov    QWORD PTR [rbp-0x40],rsi
  40e387:	mov    QWORD PTR [rbp-0x48],rdx
  40e38b:	mov    QWORD PTR [rbp-0x50],rcx
  40e38f:	mov    QWORD PTR [rbp-0x58],r8
  40e393:	mov    rax,QWORD PTR fs:0x28
  40e39c:	mov    QWORD PTR [rbp-0x8],rax
  40e3a0:	xor    eax,eax
  40e3a2:	mov    BYTE PTR [rbp-0x2d],0x0
  40e3a6:	mov    DWORD PTR [rbp-0x24],0x0
  40e3ad:	mov    rax,QWORD PTR [rbp-0x58]
  40e3b1:	mov    BYTE PTR [rax],0x0
  40e3b4:	mov    rdx,QWORD PTR [rbp-0x48]
  40e3b8:	mov    rcx,QWORD PTR [rbp-0x40]
  40e3bc:	mov    rax,QWORD PTR [rbp-0x38]
  40e3c0:	mov    rsi,rcx
  40e3c3:	mov    rdi,rax
  40e3c6:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40e3cb:	mov    QWORD PTR [rbp-0x40],rax
  40e3cf:	mov    rax,QWORD PTR [rbp-0x40]
  40e3d3:	cmp    rax,QWORD PTR [rbp-0x48]
  40e3d7:	jne    40e3e2 <flatcc_emitter_copy_buffer@@Base+0x1b9e>
  40e3d9:	mov    rax,QWORD PTR [rbp-0x40]
  40e3dd:	jmp    40e4f3 <flatcc_emitter_copy_buffer@@Base+0x1caf>
  40e3e2:	mov    rax,QWORD PTR [rbp-0x50]
  40e3e6:	mov    QWORD PTR [rbp-0x18],rax
  40e3ea:	mov    rax,QWORD PTR [rbp-0x18]
  40e3ee:	mov    rax,QWORD PTR [rax]
  40e3f1:	mov    rdx,QWORD PTR [rbp-0x40]
  40e3f5:	mov    QWORD PTR [rbp-0x10],rdx
  40e3f9:	lea    r9,[rbp-0x28]
  40e3fd:	lea    r8,[rbp-0x20]
  40e401:	lea    rcx,[rbp-0x2c]
  40e405:	mov    rdx,QWORD PTR [rbp-0x48]
  40e409:	mov    rsi,QWORD PTR [rbp-0x10]
  40e40d:	mov    rdi,QWORD PTR [rbp-0x38]
  40e411:	call   rax
  40e413:	mov    QWORD PTR [rbp-0x40],rax
  40e417:	mov    rax,QWORD PTR [rbp-0x40]
  40e41b:	cmp    rax,QWORD PTR [rbp-0x48]
  40e41f:	jne    40e42a <flatcc_emitter_copy_buffer@@Base+0x1be6>
  40e421:	mov    rax,QWORD PTR [rbp-0x40]
  40e425:	jmp    40e4f3 <flatcc_emitter_copy_buffer@@Base+0x1caf>
  40e42a:	mov    rax,QWORD PTR [rbp-0x40]
  40e42e:	cmp    rax,QWORD PTR [rbp-0x10]
  40e432:	jne    40e445 <flatcc_emitter_copy_buffer@@Base+0x1c01>
  40e434:	add    QWORD PTR [rbp-0x18],0x8
  40e439:	mov    rax,QWORD PTR [rbp-0x18]
  40e43d:	mov    rax,QWORD PTR [rax]
  40e440:	test   rax,rax
  40e443:	jne    40e3ea <flatcc_emitter_copy_buffer@@Base+0x1ba6>
  40e445:	mov    rax,QWORD PTR [rbp-0x10]
  40e449:	cmp    rax,QWORD PTR [rbp-0x40]
  40e44d:	jne    40e46d <flatcc_emitter_copy_buffer@@Base+0x1c29>
  40e44f:	mov    rdx,QWORD PTR [rbp-0x48]
  40e453:	mov    rsi,QWORD PTR [rbp-0x40]
  40e457:	mov    rax,QWORD PTR [rbp-0x38]
  40e45b:	mov    ecx,0x17
  40e460:	mov    rdi,rax
  40e463:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e468:	jmp    40e4f3 <flatcc_emitter_copy_buffer@@Base+0x1caf>
  40e46d:	mov    eax,DWORD PTR [rbp-0x24]
  40e470:	lea    edx,[rax+0x1]
  40e473:	mov    DWORD PTR [rbp-0x24],edx
  40e476:	test   eax,eax
  40e478:	je     40e4a0 <flatcc_emitter_copy_buffer@@Base+0x1c5c>
  40e47a:	mov    rax,QWORD PTR [rbp-0x38]
  40e47e:	mov    eax,DWORD PTR [rax+0x14]
  40e481:	test   eax,eax
  40e483:	je     40e4a0 <flatcc_emitter_copy_buffer@@Base+0x1c5c>
  40e485:	mov    rdx,QWORD PTR [rbp-0x48]
  40e489:	mov    rsi,QWORD PTR [rbp-0x40]
  40e48d:	mov    rax,QWORD PTR [rbp-0x38]
  40e491:	mov    ecx,0xe
  40e496:	mov    rdi,rax
  40e499:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e49e:	jmp    40e4f3 <flatcc_emitter_copy_buffer@@Base+0x1caf>
  40e4a0:	mov    rdi,QWORD PTR [rbp-0x20]
  40e4a4:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e4a7:	lea    r8,[rbp-0x2d]
  40e4ab:	mov    rdx,QWORD PTR [rbp-0x48]
  40e4af:	mov    rsi,QWORD PTR [rbp-0x40]
  40e4b3:	mov    rax,QWORD PTR [rbp-0x38]
  40e4b7:	mov    r9,r8
  40e4ba:	mov    r8,rdi
  40e4bd:	mov    rdi,rax
  40e4c0:	call   40d0bc <flatcc_emitter_copy_buffer@@Base+0x878>
  40e4c5:	cmp    QWORD PTR [rbp-0x48],rax
  40e4c9:	jne    40e4d1 <flatcc_emitter_copy_buffer@@Base+0x1c8d>
  40e4cb:	mov    rax,QWORD PTR [rbp-0x48]
  40e4cf:	jmp    40e4f3 <flatcc_emitter_copy_buffer@@Base+0x1caf>
  40e4d1:	mov    rax,QWORD PTR [rbp-0x58]
  40e4d5:	movzx  edx,BYTE PTR [rax]
  40e4d8:	movzx  eax,BYTE PTR [rbp-0x2d]
  40e4dc:	add    eax,edx
  40e4de:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4e2:	mov    BYTE PTR [rdx],al
  40e4e4:	mov    eax,DWORD PTR [rbp-0x28]
  40e4e7:	test   eax,eax
  40e4e9:	jne    40e3e2 <flatcc_emitter_copy_buffer@@Base+0x1b9e>
  40e4ef:	mov    rax,QWORD PTR [rbp-0x40]
  40e4f3:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4f7:	xor    rdi,QWORD PTR fs:0x28
  40e500:	je     40e507 <flatcc_emitter_copy_buffer@@Base+0x1cc3>
  40e502:	call   403140 <__stack_chk_fail@plt>
  40e507:	leave  
  40e508:	ret    
  40e509:	endbr64 
  40e50d:	push   rbp
  40e50e:	mov    rbp,rsp
  40e511:	sub    rsp,0x60
  40e515:	mov    QWORD PTR [rbp-0x38],rdi
  40e519:	mov    QWORD PTR [rbp-0x40],rsi
  40e51d:	mov    QWORD PTR [rbp-0x48],rdx
  40e521:	mov    QWORD PTR [rbp-0x50],rcx
  40e525:	mov    QWORD PTR [rbp-0x58],r8
  40e529:	mov    rax,QWORD PTR fs:0x28
  40e532:	mov    QWORD PTR [rbp-0x8],rax
  40e536:	xor    eax,eax
  40e538:	vxorps xmm0,xmm0,xmm0
  40e53c:	vmovss DWORD PTR [rbp-0x30],xmm0
  40e541:	mov    DWORD PTR [rbp-0x24],0x0
  40e548:	mov    rax,QWORD PTR [rbp-0x58]
  40e54c:	vxorps xmm0,xmm0,xmm0
  40e550:	vmovss DWORD PTR [rax],xmm0
  40e554:	mov    rdx,QWORD PTR [rbp-0x48]
  40e558:	mov    rcx,QWORD PTR [rbp-0x40]
  40e55c:	mov    rax,QWORD PTR [rbp-0x38]
  40e560:	mov    rsi,rcx
  40e563:	mov    rdi,rax
  40e566:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40e56b:	mov    QWORD PTR [rbp-0x40],rax
  40e56f:	mov    rax,QWORD PTR [rbp-0x40]
  40e573:	cmp    rax,QWORD PTR [rbp-0x48]
  40e577:	jne    40e582 <flatcc_emitter_copy_buffer@@Base+0x1d3e>
  40e579:	mov    rax,QWORD PTR [rbp-0x40]
  40e57d:	jmp    40e699 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  40e582:	mov    rax,QWORD PTR [rbp-0x50]
  40e586:	mov    QWORD PTR [rbp-0x18],rax
  40e58a:	mov    rax,QWORD PTR [rbp-0x18]
  40e58e:	mov    rax,QWORD PTR [rax]
  40e591:	mov    rdx,QWORD PTR [rbp-0x40]
  40e595:	mov    QWORD PTR [rbp-0x10],rdx
  40e599:	lea    r9,[rbp-0x28]
  40e59d:	lea    r8,[rbp-0x20]
  40e5a1:	lea    rcx,[rbp-0x2c]
  40e5a5:	mov    rdx,QWORD PTR [rbp-0x48]
  40e5a9:	mov    rsi,QWORD PTR [rbp-0x10]
  40e5ad:	mov    rdi,QWORD PTR [rbp-0x38]
  40e5b1:	call   rax
  40e5b3:	mov    QWORD PTR [rbp-0x40],rax
  40e5b7:	mov    rax,QWORD PTR [rbp-0x40]
  40e5bb:	cmp    rax,QWORD PTR [rbp-0x48]
  40e5bf:	jne    40e5ca <flatcc_emitter_copy_buffer@@Base+0x1d86>
  40e5c1:	mov    rax,QWORD PTR [rbp-0x40]
  40e5c5:	jmp    40e699 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  40e5ca:	mov    rax,QWORD PTR [rbp-0x40]
  40e5ce:	cmp    rax,QWORD PTR [rbp-0x10]
  40e5d2:	jne    40e5e5 <flatcc_emitter_copy_buffer@@Base+0x1da1>
  40e5d4:	add    QWORD PTR [rbp-0x18],0x8
  40e5d9:	mov    rax,QWORD PTR [rbp-0x18]
  40e5dd:	mov    rax,QWORD PTR [rax]
  40e5e0:	test   rax,rax
  40e5e3:	jne    40e58a <flatcc_emitter_copy_buffer@@Base+0x1d46>
  40e5e5:	mov    rax,QWORD PTR [rbp-0x10]
  40e5e9:	cmp    rax,QWORD PTR [rbp-0x40]
  40e5ed:	jne    40e60d <flatcc_emitter_copy_buffer@@Base+0x1dc9>
  40e5ef:	mov    rdx,QWORD PTR [rbp-0x48]
  40e5f3:	mov    rsi,QWORD PTR [rbp-0x40]
  40e5f7:	mov    rax,QWORD PTR [rbp-0x38]
  40e5fb:	mov    ecx,0x17
  40e600:	mov    rdi,rax
  40e603:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e608:	jmp    40e699 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  40e60d:	mov    eax,DWORD PTR [rbp-0x24]
  40e610:	lea    edx,[rax+0x1]
  40e613:	mov    DWORD PTR [rbp-0x24],edx
  40e616:	test   eax,eax
  40e618:	je     40e640 <flatcc_emitter_copy_buffer@@Base+0x1dfc>
  40e61a:	mov    rax,QWORD PTR [rbp-0x38]
  40e61e:	mov    eax,DWORD PTR [rax+0x14]
  40e621:	test   eax,eax
  40e623:	je     40e640 <flatcc_emitter_copy_buffer@@Base+0x1dfc>
  40e625:	mov    rdx,QWORD PTR [rbp-0x48]
  40e629:	mov    rsi,QWORD PTR [rbp-0x40]
  40e62d:	mov    rax,QWORD PTR [rbp-0x38]
  40e631:	mov    ecx,0xe
  40e636:	mov    rdi,rax
  40e639:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e63e:	jmp    40e699 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  40e640:	mov    rdi,QWORD PTR [rbp-0x20]
  40e644:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e647:	lea    r8,[rbp-0x30]
  40e64b:	mov    rdx,QWORD PTR [rbp-0x48]
  40e64f:	mov    rsi,QWORD PTR [rbp-0x40]
  40e653:	mov    rax,QWORD PTR [rbp-0x38]
  40e657:	mov    r9,r8
  40e65a:	mov    r8,rdi
  40e65d:	mov    rdi,rax
  40e660:	call   40d4c4 <flatcc_emitter_copy_buffer@@Base+0xc80>
  40e665:	cmp    QWORD PTR [rbp-0x48],rax
  40e669:	jne    40e671 <flatcc_emitter_copy_buffer@@Base+0x1e2d>
  40e66b:	mov    rax,QWORD PTR [rbp-0x48]
  40e66f:	jmp    40e699 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  40e671:	mov    rax,QWORD PTR [rbp-0x58]
  40e675:	vmovss xmm1,DWORD PTR [rax]
  40e679:	vmovss xmm0,DWORD PTR [rbp-0x30]
  40e67e:	vaddss xmm0,xmm1,xmm0
  40e682:	mov    rax,QWORD PTR [rbp-0x58]
  40e686:	vmovss DWORD PTR [rax],xmm0
  40e68a:	mov    eax,DWORD PTR [rbp-0x28]
  40e68d:	test   eax,eax
  40e68f:	jne    40e582 <flatcc_emitter_copy_buffer@@Base+0x1d3e>
  40e695:	mov    rax,QWORD PTR [rbp-0x40]
  40e699:	mov    rdi,QWORD PTR [rbp-0x8]
  40e69d:	xor    rdi,QWORD PTR fs:0x28
  40e6a6:	je     40e6ad <flatcc_emitter_copy_buffer@@Base+0x1e69>
  40e6a8:	call   403140 <__stack_chk_fail@plt>
  40e6ad:	leave  
  40e6ae:	ret    
  40e6af:	endbr64 
  40e6b3:	push   rbp
  40e6b4:	mov    rbp,rsp
  40e6b7:	sub    rsp,0x70
  40e6bb:	mov    QWORD PTR [rbp-0x48],rdi
  40e6bf:	mov    QWORD PTR [rbp-0x50],rsi
  40e6c3:	mov    QWORD PTR [rbp-0x58],rdx
  40e6c7:	mov    QWORD PTR [rbp-0x60],rcx
  40e6cb:	mov    QWORD PTR [rbp-0x68],r8
  40e6cf:	mov    rax,QWORD PTR fs:0x28
  40e6d8:	mov    QWORD PTR [rbp-0x8],rax
  40e6dc:	xor    eax,eax
  40e6de:	vxorpd xmm0,xmm0,xmm0
  40e6e2:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40e6e7:	mov    DWORD PTR [rbp-0x2c],0x0
  40e6ee:	mov    rax,QWORD PTR [rbp-0x68]
  40e6f2:	vxorpd xmm0,xmm0,xmm0
  40e6f6:	vmovsd QWORD PTR [rax],xmm0
  40e6fa:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6fe:	mov    rcx,QWORD PTR [rbp-0x50]
  40e702:	mov    rax,QWORD PTR [rbp-0x48]
  40e706:	mov    rsi,rcx
  40e709:	mov    rdi,rax
  40e70c:	call   40ccd7 <flatcc_emitter_copy_buffer@@Base+0x493>
  40e711:	mov    QWORD PTR [rbp-0x50],rax
  40e715:	mov    rax,QWORD PTR [rbp-0x50]
  40e719:	cmp    rax,QWORD PTR [rbp-0x58]
  40e71d:	jne    40e728 <flatcc_emitter_copy_buffer@@Base+0x1ee4>
  40e71f:	mov    rax,QWORD PTR [rbp-0x50]
  40e723:	jmp    40e83f <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  40e728:	mov    rax,QWORD PTR [rbp-0x60]
  40e72c:	mov    QWORD PTR [rbp-0x18],rax
  40e730:	mov    rax,QWORD PTR [rbp-0x18]
  40e734:	mov    rax,QWORD PTR [rax]
  40e737:	mov    rdx,QWORD PTR [rbp-0x50]
  40e73b:	mov    QWORD PTR [rbp-0x10],rdx
  40e73f:	lea    r9,[rbp-0x30]
  40e743:	lea    r8,[rbp-0x20]
  40e747:	lea    rcx,[rbp-0x34]
  40e74b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e74f:	mov    rsi,QWORD PTR [rbp-0x10]
  40e753:	mov    rdi,QWORD PTR [rbp-0x48]
  40e757:	call   rax
  40e759:	mov    QWORD PTR [rbp-0x50],rax
  40e75d:	mov    rax,QWORD PTR [rbp-0x50]
  40e761:	cmp    rax,QWORD PTR [rbp-0x58]
  40e765:	jne    40e770 <flatcc_emitter_copy_buffer@@Base+0x1f2c>
  40e767:	mov    rax,QWORD PTR [rbp-0x50]
  40e76b:	jmp    40e83f <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  40e770:	mov    rax,QWORD PTR [rbp-0x50]
  40e774:	cmp    rax,QWORD PTR [rbp-0x10]
  40e778:	jne    40e78b <flatcc_emitter_copy_buffer@@Base+0x1f47>
  40e77a:	add    QWORD PTR [rbp-0x18],0x8
  40e77f:	mov    rax,QWORD PTR [rbp-0x18]
  40e783:	mov    rax,QWORD PTR [rax]
  40e786:	test   rax,rax
  40e789:	jne    40e730 <flatcc_emitter_copy_buffer@@Base+0x1eec>
  40e78b:	mov    rax,QWORD PTR [rbp-0x10]
  40e78f:	cmp    rax,QWORD PTR [rbp-0x50]
  40e793:	jne    40e7b3 <flatcc_emitter_copy_buffer@@Base+0x1f6f>
  40e795:	mov    rdx,QWORD PTR [rbp-0x58]
  40e799:	mov    rsi,QWORD PTR [rbp-0x50]
  40e79d:	mov    rax,QWORD PTR [rbp-0x48]
  40e7a1:	mov    ecx,0x17
  40e7a6:	mov    rdi,rax
  40e7a9:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e7ae:	jmp    40e83f <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  40e7b3:	mov    eax,DWORD PTR [rbp-0x2c]
  40e7b6:	lea    edx,[rax+0x1]
  40e7b9:	mov    DWORD PTR [rbp-0x2c],edx
  40e7bc:	test   eax,eax
  40e7be:	je     40e7e6 <flatcc_emitter_copy_buffer@@Base+0x1fa2>
  40e7c0:	mov    rax,QWORD PTR [rbp-0x48]
  40e7c4:	mov    eax,DWORD PTR [rax+0x14]
  40e7c7:	test   eax,eax
  40e7c9:	je     40e7e6 <flatcc_emitter_copy_buffer@@Base+0x1fa2>
  40e7cb:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7cf:	mov    rsi,QWORD PTR [rbp-0x50]
  40e7d3:	mov    rax,QWORD PTR [rbp-0x48]
  40e7d7:	mov    ecx,0xe
  40e7dc:	mov    rdi,rax
  40e7df:	call   410986 <flatcc_json_parser_set_error@@Base>
  40e7e4:	jmp    40e83f <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  40e7e6:	mov    rdi,QWORD PTR [rbp-0x20]
  40e7ea:	mov    ecx,DWORD PTR [rbp-0x34]
  40e7ed:	lea    r8,[rbp-0x28]
  40e7f1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7f5:	mov    rsi,QWORD PTR [rbp-0x50]
  40e7f9:	mov    rax,QWORD PTR [rbp-0x48]
  40e7fd:	mov    r9,r8
  40e800:	mov    r8,rdi
  40e803:	mov    rdi,rax
  40e806:	call   40d54b <flatcc_emitter_copy_buffer@@Base+0xd07>
  40e80b:	cmp    QWORD PTR [rbp-0x58],rax
  40e80f:	jne    40e817 <flatcc_emitter_copy_buffer@@Base+0x1fd3>
  40e811:	mov    rax,QWORD PTR [rbp-0x58]
  40e815:	jmp    40e83f <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  40e817:	mov    rax,QWORD PTR [rbp-0x68]
  40e81b:	vmovsd xmm1,QWORD PTR [rax]
  40e81f:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  40e824:	vaddsd xmm0,xmm1,xmm0
  40e828:	mov    rax,QWORD PTR [rbp-0x68]
  40e82c:	vmovsd QWORD PTR [rax],xmm0
  40e830:	mov    eax,DWORD PTR [rbp-0x30]
  40e833:	test   eax,eax
  40e835:	jne    40e728 <flatcc_emitter_copy_buffer@@Base+0x1ee4>
  40e83b:	mov    rax,QWORD PTR [rbp-0x50]
  40e83f:	mov    rdi,QWORD PTR [rbp-0x8]
  40e843:	xor    rdi,QWORD PTR fs:0x28
  40e84c:	je     40e853 <flatcc_emitter_copy_buffer@@Base+0x200f>
  40e84e:	call   403140 <__stack_chk_fail@plt>
  40e853:	leave  
  40e854:	ret    
  40e855:	endbr64 
  40e859:	push   rbp
  40e85a:	mov    rbp,rsp
  40e85d:	vmovsd QWORD PTR [rbp-0x18],xmm0
  40e862:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40e867:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40e86c:	mov    rax,QWORD PTR [rbp-0x8]
  40e870:	pop    rbp
  40e871:	ret    
  40e872:	endbr64 
  40e876:	push   rbp
  40e877:	mov    rbp,rsp
  40e87a:	mov    QWORD PTR [rbp-0x18],rdi
  40e87e:	mov    rax,QWORD PTR [rbp-0x18]
  40e882:	mov    QWORD PTR [rbp-0x8],rax
  40e886:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40e88b:	vmovq  rax,xmm0
  40e890:	vmovq  xmm0,rax
  40e895:	pop    rbp
  40e896:	ret    
  40e897:	endbr64 
  40e89b:	push   rbp
  40e89c:	mov    rbp,rsp
  40e89f:	vmovsd QWORD PTR [rbp-0x18],xmm0
  40e8a4:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40e8a9:	vcvttsd2si eax,xmm0
  40e8ad:	mov    DWORD PTR [rbp-0x4],eax
  40e8b0:	vxorpd xmm0,xmm0,xmm0
  40e8b4:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  40e8b9:	jbe    40e8c0 <flatcc_emitter_copy_buffer@@Base+0x207c>
  40e8bb:	mov    eax,DWORD PTR [rbp-0x4]
  40e8be:	jmp    40e8ec <flatcc_emitter_copy_buffer@@Base+0x20a8>
  40e8c0:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  40e8c5:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  40e8ca:	vsubsd xmm0,xmm1,xmm0
  40e8ce:	vxorpd xmm1,xmm1,xmm1
  40e8d2:	vucomisd xmm0,xmm1
  40e8d6:	jp     40e8e2 <flatcc_emitter_copy_buffer@@Base+0x209e>
  40e8d8:	vxorpd xmm1,xmm1,xmm1
  40e8dc:	vucomisd xmm0,xmm1
  40e8e0:	je     40e8e9 <flatcc_emitter_copy_buffer@@Base+0x20a5>
  40e8e2:	mov    eax,DWORD PTR [rbp-0x4]
  40e8e5:	inc    eax
  40e8e7:	jmp    40e8ec <flatcc_emitter_copy_buffer@@Base+0x20a8>
  40e8e9:	mov    eax,DWORD PTR [rbp-0x4]
  40e8ec:	pop    rbp
  40e8ed:	ret    
  40e8ee:	endbr64 
  40e8f2:	push   rbp
  40e8f3:	mov    rbp,rsp
  40e8f6:	sub    rsp,0x20
  40e8fa:	mov    DWORD PTR [rbp-0x14],edi
  40e8fd:	mov    QWORD PTR [rbp-0x20],rsi
  40e901:	mov    eax,DWORD PTR [rbp-0x14]
  40e904:	add    eax,0x3f
  40e907:	vcvtsi2sd xmm0,xmm0,eax
  40e90b:	vmovsd xmm1,QWORD PTR [rip+0x7b25]        # 416438 <flatcc_builder_padding_base@@Base+0x2098>
  40e913:	vmulsd xmm2,xmm0,xmm1
  40e917:	vmovq  rax,xmm2
  40e91c:	vmovq  xmm0,rax
  40e921:	call   40e897 <flatcc_emitter_copy_buffer@@Base+0x2053>
  40e926:	mov    DWORD PTR [rbp-0x8],eax
  40e929:	mov    eax,DWORD PTR [rbp-0x8]
  40e92c:	add    eax,0x15b
  40e931:	lea    edx,[rax+0x7]
  40e934:	test   eax,eax
  40e936:	cmovs  eax,edx
  40e939:	sar    eax,0x3
  40e93c:	inc    eax
  40e93e:	mov    DWORD PTR [rbp-0x4],eax
  40e941:	mov    eax,DWORD PTR [rbp-0x4]
  40e944:	cdqe   
  40e946:	shl    rax,0x4
  40e94a:	mov    rdx,rax
  40e94d:	lea    rax,[rip+0x67ac]        # 415100 <flatcc_builder_padding_base@@Base+0xd60>
  40e954:	mov    rdx,QWORD PTR [rdx+rax*1]
  40e958:	mov    rax,QWORD PTR [rbp-0x20]
  40e95c:	mov    QWORD PTR [rax],rdx
  40e95f:	mov    eax,DWORD PTR [rbp-0x4]
  40e962:	cdqe   
  40e964:	shl    rax,0x4
  40e968:	mov    rdx,rax
  40e96b:	lea    rax,[rip+0x6796]        # 415108 <flatcc_builder_padding_base@@Base+0xd68>
  40e972:	movzx  eax,WORD PTR [rdx+rax*1]
  40e976:	movsx  edx,ax
  40e979:	mov    rax,QWORD PTR [rbp-0x20]
  40e97d:	mov    DWORD PTR [rax+0x8],edx
  40e980:	mov    eax,DWORD PTR [rbp-0x4]
  40e983:	cdqe   
  40e985:	shl    rax,0x4
  40e989:	mov    rdx,rax
  40e98c:	lea    rax,[rip+0x6777]        # 41510a <flatcc_builder_padding_base@@Base+0xd6a>
  40e993:	movzx  eax,WORD PTR [rdx+rax*1]
  40e997:	cwde   
  40e998:	leave  
  40e999:	ret    
  40e99a:	endbr64 
  40e99e:	push   rbp
  40e99f:	mov    rbp,rsp
  40e9a2:	sub    rsp,0x30
  40e9a6:	mov    rax,rdi
  40e9a9:	mov    r8,rsi
  40e9ac:	mov    rsi,rax
  40e9af:	mov    rdi,rdx
  40e9b2:	mov    rdi,r8
  40e9b5:	mov    QWORD PTR [rbp-0x20],rsi
  40e9b9:	mov    QWORD PTR [rbp-0x18],rdi
  40e9bd:	mov    QWORD PTR [rbp-0x30],rdx
  40e9c1:	mov    QWORD PTR [rbp-0x28],rcx
  40e9c5:	mov    rdx,QWORD PTR [rbp-0x20]
  40e9c9:	mov    rax,QWORD PTR [rbp-0x30]
  40e9cd:	sub    rdx,rax
  40e9d0:	mov    rax,rdx
  40e9d3:	mov    QWORD PTR [rbp-0x10],rax
  40e9d7:	mov    eax,DWORD PTR [rbp-0x18]
  40e9da:	mov    DWORD PTR [rbp-0x8],eax
  40e9dd:	mov    edx,DWORD PTR [rbp-0x18]
  40e9e0:	mov    eax,DWORD PTR [rbp-0x28]
  40e9e3:	cmp    edx,eax
  40e9e5:	jne    40e9f4 <flatcc_emitter_copy_buffer@@Base+0x21b0>
  40e9e7:	mov    rdx,QWORD PTR [rbp-0x20]
  40e9eb:	mov    rax,QWORD PTR [rbp-0x30]
  40e9ef:	cmp    rdx,rax
  40e9f2:	jae    40ea13 <flatcc_emitter_copy_buffer@@Base+0x21cf>
  40e9f4:	lea    rcx,[rip+0x7515]        # 415f10 <flatcc_builder_padding_base@@Base+0x1b70>
  40e9fb:	mov    edx,0xef
  40ea00:	lea    rsi,[rip+0x6c69]        # 415670 <flatcc_builder_padding_base@@Base+0x12d0>
  40ea07:	lea    rdi,[rip+0x6cd2]        # 4156e0 <flatcc_builder_padding_base@@Base+0x1340>
  40ea0e:	call   403150 <__assert_fail@plt>
  40ea13:	mov    rax,QWORD PTR [rbp-0x10]
  40ea17:	mov    rdx,QWORD PTR [rbp-0x8]
  40ea1b:	leave  
  40ea1c:	ret    
  40ea1d:	endbr64 
  40ea21:	push   rbp
  40ea22:	mov    rbp,rsp
  40ea25:	sub    rsp,0x8
  40ea29:	mov    rax,rdi
  40ea2c:	mov    r8,rsi
  40ea2f:	mov    rsi,rax
  40ea32:	mov    rdi,rdx
  40ea35:	mov    rdi,r8
  40ea38:	mov    QWORD PTR [rbp-0x70],rsi
  40ea3c:	mov    QWORD PTR [rbp-0x68],rdi
  40ea40:	mov    QWORD PTR [rbp-0x80],rdx
  40ea44:	mov    QWORD PTR [rbp-0x78],rcx
  40ea48:	mov    rax,QWORD PTR [rbp-0x70]
  40ea4c:	shr    rax,0x20
  40ea50:	mov    QWORD PTR [rbp-0x58],rax
  40ea54:	mov    rax,QWORD PTR [rbp-0x70]
  40ea58:	and    eax,0xffffffff
  40ea5b:	mov    QWORD PTR [rbp-0x50],rax
  40ea5f:	mov    rax,QWORD PTR [rbp-0x80]
  40ea63:	shr    rax,0x20
  40ea67:	mov    QWORD PTR [rbp-0x48],rax
  40ea6b:	mov    rax,QWORD PTR [rbp-0x80]
  40ea6f:	and    eax,0xffffffff
  40ea72:	mov    QWORD PTR [rbp-0x40],rax
  40ea76:	mov    rax,QWORD PTR [rbp-0x58]
  40ea7a:	imul   rax,QWORD PTR [rbp-0x48]
  40ea7f:	mov    QWORD PTR [rbp-0x38],rax
  40ea83:	mov    rax,QWORD PTR [rbp-0x50]
  40ea87:	imul   rax,QWORD PTR [rbp-0x48]
  40ea8c:	mov    QWORD PTR [rbp-0x30],rax
  40ea90:	mov    rax,QWORD PTR [rbp-0x58]
  40ea94:	imul   rax,QWORD PTR [rbp-0x40]
  40ea99:	mov    QWORD PTR [rbp-0x28],rax
  40ea9d:	mov    rax,QWORD PTR [rbp-0x50]
  40eaa1:	imul   rax,QWORD PTR [rbp-0x40]
  40eaa6:	mov    QWORD PTR [rbp-0x20],rax
  40eaaa:	mov    rax,QWORD PTR [rbp-0x20]
  40eaae:	shr    rax,0x20
  40eab2:	mov    rdx,QWORD PTR [rbp-0x28]
  40eab6:	mov    edx,edx
  40eab8:	add    rax,rdx
  40eabb:	mov    rdx,QWORD PTR [rbp-0x30]
  40eabf:	mov    edx,edx
  40eac1:	add    rax,rdx
  40eac4:	mov    QWORD PTR [rbp-0x18],rax
  40eac8:	mov    eax,0x80000000
  40eacd:	add    QWORD PTR [rbp-0x18],rax
  40ead1:	mov    rax,QWORD PTR [rbp-0x28]
  40ead5:	shr    rax,0x20
  40ead9:	mov    rdx,rax
  40eadc:	mov    rax,QWORD PTR [rbp-0x38]
  40eae0:	add    rdx,rax
  40eae3:	mov    rax,QWORD PTR [rbp-0x30]
  40eae7:	shr    rax,0x20
  40eaeb:	add    rdx,rax
  40eaee:	mov    rax,QWORD PTR [rbp-0x18]
  40eaf2:	shr    rax,0x20
  40eaf6:	add    rax,rdx
  40eaf9:	mov    QWORD PTR [rbp-0x10],rax
  40eafd:	mov    edx,DWORD PTR [rbp-0x68]
  40eb00:	mov    eax,DWORD PTR [rbp-0x78]
  40eb03:	add    eax,edx
  40eb05:	add    eax,0x40
  40eb08:	mov    DWORD PTR [rbp-0x8],eax
  40eb0b:	mov    rax,QWORD PTR [rbp-0x10]
  40eb0f:	mov    rdx,QWORD PTR [rbp-0x8]
  40eb13:	leave  
  40eb14:	ret    
  40eb15:	endbr64 
  40eb19:	push   rbp
  40eb1a:	mov    rbp,rsp
  40eb1d:	sub    rsp,0x10
  40eb21:	mov    rax,rdi
  40eb24:	mov    rcx,rsi
  40eb27:	mov    rdx,rcx
  40eb2a:	mov    QWORD PTR [rbp-0x10],rax
  40eb2e:	mov    QWORD PTR [rbp-0x8],rdx
  40eb32:	mov    rax,QWORD PTR [rbp-0x10]
  40eb36:	test   rax,rax
  40eb39:	jne    40eb6f <flatcc_emitter_copy_buffer@@Base+0x232b>
  40eb3b:	lea    rcx,[rip+0x73ee]        # 415f30 <flatcc_builder_padding_base@@Base+0x1b90>
  40eb42:	mov    edx,0x104
  40eb47:	lea    rsi,[rip+0x6b22]        # 415670 <flatcc_builder_padding_base@@Base+0x12d0>
  40eb4e:	lea    rdi,[rip+0x6ba4]        # 4156f9 <flatcc_builder_padding_base@@Base+0x1359>
  40eb55:	call   403150 <__assert_fail@plt>
  40eb5a:	mov    rax,QWORD PTR [rbp-0x10]
  40eb5e:	shl    rax,0xa
  40eb62:	mov    QWORD PTR [rbp-0x10],rax
  40eb66:	mov    eax,DWORD PTR [rbp-0x8]
  40eb69:	sub    eax,0xa
  40eb6c:	mov    DWORD PTR [rbp-0x8],eax
  40eb6f:	mov    rdx,QWORD PTR [rbp-0x10]
  40eb73:	movabs rax,0xffc0000000000000
  40eb7d:	and    rax,rdx
  40eb80:	test   rax,rax
  40eb83:	je     40eb5a <flatcc_emitter_copy_buffer@@Base+0x2316>
  40eb85:	jmp    40eb9a <flatcc_emitter_copy_buffer@@Base+0x2356>
  40eb87:	mov    rax,QWORD PTR [rbp-0x10]
  40eb8b:	add    rax,rax
  40eb8e:	mov    QWORD PTR [rbp-0x10],rax
  40eb92:	mov    eax,DWORD PTR [rbp-0x8]
  40eb95:	dec    eax
  40eb97:	mov    DWORD PTR [rbp-0x8],eax
  40eb9a:	mov    rax,QWORD PTR [rbp-0x10]
  40eb9e:	test   rax,rax
  40eba1:	jns    40eb87 <flatcc_emitter_copy_buffer@@Base+0x2343>
  40eba3:	mov    rax,QWORD PTR [rbp-0x10]
  40eba7:	mov    rdx,QWORD PTR [rbp-0x8]
  40ebab:	leave  
  40ebac:	ret    
  40ebad:	endbr64 
  40ebb1:	push   rbp
  40ebb2:	mov    rbp,rsp
  40ebb5:	sub    rsp,0x28
  40ebb9:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40ebbe:	mov    rax,QWORD PTR [rbp-0x28]
  40ebc2:	vmovq  xmm0,rax
  40ebc7:	call   40e855 <flatcc_emitter_copy_buffer@@Base+0x2011>
  40ebcc:	mov    QWORD PTR [rbp-0x18],rax
  40ebd0:	movabs rax,0x7ff0000000000000
  40ebda:	and    rax,QWORD PTR [rbp-0x18]
  40ebde:	test   rax,rax
  40ebe1:	jne    40ebfe <flatcc_emitter_copy_buffer@@Base+0x23ba>
  40ebe3:	movabs rax,0xfffffffffffff
  40ebed:	and    rax,QWORD PTR [rbp-0x18]
  40ebf1:	mov    QWORD PTR [rbp-0x10],rax
  40ebf5:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  40ebfc:	jmp    40ec35 <flatcc_emitter_copy_buffer@@Base+0x23f1>
  40ebfe:	movabs rax,0xfffffffffffff
  40ec08:	and    rax,QWORD PTR [rbp-0x18]
  40ec0c:	mov    rdx,rax
  40ec0f:	movabs rax,0x10000000000000
  40ec19:	add    rax,rdx
  40ec1c:	mov    QWORD PTR [rbp-0x10],rax
  40ec20:	mov    rax,QWORD PTR [rbp-0x18]
  40ec24:	shr    rax,0x34
  40ec28:	and    eax,0x7ff
  40ec2d:	sub    eax,0x433
  40ec32:	mov    DWORD PTR [rbp-0x8],eax
  40ec35:	mov    rax,QWORD PTR [rbp-0x10]
  40ec39:	mov    rdx,QWORD PTR [rbp-0x8]
  40ec3d:	leave  
  40ec3e:	ret    
  40ec3f:	endbr64 
  40ec43:	push   rbp
  40ec44:	mov    rbp,rsp
  40ec47:	sub    rsp,0x50
  40ec4b:	mov    rax,rdi
  40ec4e:	mov    rcx,rsi
  40ec51:	mov    rdx,rcx
  40ec54:	mov    QWORD PTR [rbp-0x50],rax
  40ec58:	mov    QWORD PTR [rbp-0x48],rdx
  40ec5c:	movabs rax,0x10000000000000
  40ec66:	mov    QWORD PTR [rbp-0x20],rax
  40ec6a:	movabs rax,0xfffffffffffff
  40ec74:	mov    QWORD PTR [rbp-0x18],rax
  40ec78:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  40ec7f:	mov    DWORD PTR [rbp-0x30],0x433
  40ec86:	mov    DWORD PTR [rbp-0x2c],0x34
  40ec8d:	mov    rax,QWORD PTR [rbp-0x50]
  40ec91:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec95:	mov    QWORD PTR [rbp-0x10],rax
  40ec99:	mov    QWORD PTR [rbp-0x8],rdx
  40ec9d:	jmp    40ecb2 <flatcc_emitter_copy_buffer@@Base+0x246e>
  40ec9f:	mov    rax,QWORD PTR [rbp-0x10]
  40eca3:	shr    rax,1
  40eca6:	mov    QWORD PTR [rbp-0x10],rax
  40ecaa:	mov    eax,DWORD PTR [rbp-0x8]
  40ecad:	inc    eax
  40ecaf:	mov    DWORD PTR [rbp-0x8],eax
  40ecb2:	mov    rax,QWORD PTR [rbp-0x10]
  40ecb6:	mov    rcx,QWORD PTR [rbp-0x20]
  40ecba:	mov    rdx,QWORD PTR [rbp-0x18]
  40ecbe:	add    rdx,rcx
  40ecc1:	cmp    rax,rdx
  40ecc4:	ja     40ec9f <flatcc_emitter_copy_buffer@@Base+0x245b>
  40ecc6:	mov    eax,DWORD PTR [rbp-0x8]
  40ecc9:	cmp    DWORD PTR [rbp-0x34],eax
  40eccc:	jle    40ecea <flatcc_emitter_copy_buffer@@Base+0x24a6>
  40ecce:	mov    rax,QWORD PTR [rip+0x775b]        # 416430 <flatcc_builder_padding_base@@Base+0x2090>
  40ecd5:	jmp    40ed53 <flatcc_emitter_copy_buffer@@Base+0x250f>
  40ecd7:	mov    rax,QWORD PTR [rbp-0x10]
  40ecdb:	add    rax,rax
  40ecde:	mov    QWORD PTR [rbp-0x10],rax
  40ece2:	mov    eax,DWORD PTR [rbp-0x8]
  40ece5:	dec    eax
  40ece7:	mov    DWORD PTR [rbp-0x8],eax
  40ecea:	mov    eax,DWORD PTR [rbp-0x8]
  40eced:	cmp    DWORD PTR [rbp-0x34],eax
  40ecf0:	jge    40ecff <flatcc_emitter_copy_buffer@@Base+0x24bb>
  40ecf2:	mov    rax,QWORD PTR [rbp-0x10]
  40ecf6:	and    rax,QWORD PTR [rbp-0x20]
  40ecfa:	test   rax,rax
  40ecfd:	je     40ecd7 <flatcc_emitter_copy_buffer@@Base+0x2493>
  40ecff:	mov    eax,DWORD PTR [rbp-0x8]
  40ed02:	cmp    DWORD PTR [rbp-0x34],eax
  40ed05:	jne    40ed1e <flatcc_emitter_copy_buffer@@Base+0x24da>
  40ed07:	mov    rax,QWORD PTR [rbp-0x10]
  40ed0b:	and    rax,QWORD PTR [rbp-0x20]
  40ed0f:	test   rax,rax
  40ed12:	jne    40ed1e <flatcc_emitter_copy_buffer@@Base+0x24da>
  40ed14:	mov    QWORD PTR [rbp-0x28],0x0
  40ed1c:	jmp    40ed2c <flatcc_emitter_copy_buffer@@Base+0x24e8>
  40ed1e:	mov    edx,DWORD PTR [rbp-0x8]
  40ed21:	mov    eax,DWORD PTR [rbp-0x30]
  40ed24:	add    eax,edx
  40ed26:	cdqe   
  40ed28:	mov    QWORD PTR [rbp-0x28],rax
  40ed2c:	mov    rax,QWORD PTR [rbp-0x10]
  40ed30:	and    rax,QWORD PTR [rbp-0x18]
  40ed34:	mov    rdx,rax
  40ed37:	mov    eax,DWORD PTR [rbp-0x2c]
  40ed3a:	mov    rcx,QWORD PTR [rbp-0x28]
  40ed3e:	shlx   rax,rcx,rax
  40ed43:	or     rax,rdx
  40ed46:	mov    rdi,rax
  40ed49:	call   40e872 <flatcc_emitter_copy_buffer@@Base+0x202e>
  40ed4e:	vmovq  rax,xmm0
  40ed53:	vmovq  xmm0,rax
  40ed58:	leave  
  40ed59:	ret    
  40ed5a:	endbr64 
  40ed5e:	push   rbp
  40ed5f:	mov    rbp,rsp
  40ed62:	mov    DWORD PTR [rbp-0x14],edi
  40ed65:	mov    DWORD PTR [rbp-0x18],esi
  40ed68:	mov    QWORD PTR [rbp-0x20],rdx
  40ed6c:	mov    eax,DWORD PTR [rbp-0x18]
  40ed6f:	inc    eax
  40ed71:	imul   eax,eax,0x4d1
  40ed77:	sar    eax,0xc
  40ed7a:	inc    eax
  40ed7c:	mov    DWORD PTR [rbp-0x4],eax
  40ed7f:	mov    eax,DWORD PTR [rbp-0x4]
  40ed82:	cdqe   
  40ed84:	lea    rdx,[rax*4+0x0]
  40ed8c:	lea    rax,[rip+0x698d]        # 415720 <flatcc_builder_padding_base@@Base+0x1380>
  40ed93:	mov    eax,DWORD PTR [rdx+rax*1]
  40ed96:	cmp    DWORD PTR [rbp-0x14],eax
  40ed99:	jae    40ed9e <flatcc_emitter_copy_buffer@@Base+0x255a>
  40ed9b:	dec    DWORD PTR [rbp-0x4]
  40ed9e:	mov    eax,DWORD PTR [rbp-0x4]
  40eda1:	cdqe   
  40eda3:	lea    rdx,[rax*4+0x0]
  40edab:	lea    rax,[rip+0x696e]        # 415720 <flatcc_builder_padding_base@@Base+0x1380>
  40edb2:	mov    edx,DWORD PTR [rdx+rax*1]
  40edb5:	mov    rax,QWORD PTR [rbp-0x20]
  40edb9:	mov    DWORD PTR [rax],edx
  40edbb:	mov    eax,DWORD PTR [rbp-0x4]
  40edbe:	pop    rbp
  40edbf:	ret    
  40edc0:	endbr64 
  40edc4:	push   rbp
  40edc5:	mov    rbp,rsp
  40edc8:	sub    rsp,0x20
  40edcc:	mov    DWORD PTR [rbp-0x14],edi
  40edcf:	mov    QWORD PTR [rbp-0x20],rsi
  40edd3:	mov    DWORD PTR [rbp-0x10],0x15c
  40edda:	mov    DWORD PTR [rbp-0xc],0x8
  40ede1:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  40ede8:	jge    40ee09 <flatcc_emitter_copy_buffer@@Base+0x25c5>
  40edea:	lea    rcx,[rip+0x715f]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40edf1:	mov    edx,0x50
  40edf6:	lea    rsi,[rip+0x6953]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40edfd:	lea    rdi,[rip+0x69c4]        # 4157c8 <flatcc_builder_padding_base@@Base+0x1428>
  40ee04:	call   403150 <__assert_fail@plt>
  40ee09:	mov    eax,DWORD PTR [rbp-0xc]
  40ee0c:	add    eax,0x153
  40ee11:	cmp    DWORD PTR [rbp-0x14],eax
  40ee14:	jle    40ee35 <flatcc_emitter_copy_buffer@@Base+0x25f1>
  40ee16:	lea    rcx,[rip+0x7133]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40ee1d:	mov    edx,0x51
  40ee22:	lea    rsi,[rip+0x6927]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40ee29:	lea    rdi,[rip+0x69b8]        # 4157e8 <flatcc_builder_padding_base@@Base+0x1448>
  40ee30:	call   403150 <__assert_fail@plt>
  40ee35:	mov    edx,DWORD PTR [rbp-0x14]
  40ee38:	mov    eax,DWORD PTR [rbp-0x10]
  40ee3b:	add    eax,edx
  40ee3d:	cdq    
  40ee3e:	idiv   DWORD PTR [rbp-0xc]
  40ee41:	mov    DWORD PTR [rbp-0x8],eax
  40ee44:	mov    eax,DWORD PTR [rbp-0x8]
  40ee47:	cdqe   
  40ee49:	shl    rax,0x4
  40ee4d:	mov    rdx,rax
  40ee50:	lea    rax,[rip+0x62b3]        # 41510a <flatcc_builder_padding_base@@Base+0xd6a>
  40ee57:	movzx  eax,WORD PTR [rdx+rax*1]
  40ee5b:	cwde   
  40ee5c:	mov    DWORD PTR [rbp-0x4],eax
  40ee5f:	mov    eax,DWORD PTR [rbp-0x8]
  40ee62:	cdqe   
  40ee64:	shl    rax,0x4
  40ee68:	mov    rdx,rax
  40ee6b:	lea    rax,[rip+0x628e]        # 415100 <flatcc_builder_padding_base@@Base+0xd60>
  40ee72:	mov    rdx,QWORD PTR [rdx+rax*1]
  40ee76:	mov    rax,QWORD PTR [rbp-0x20]
  40ee7a:	mov    QWORD PTR [rax],rdx
  40ee7d:	mov    eax,DWORD PTR [rbp-0x8]
  40ee80:	cdqe   
  40ee82:	shl    rax,0x4
  40ee86:	mov    rdx,rax
  40ee89:	lea    rax,[rip+0x6278]        # 415108 <flatcc_builder_padding_base@@Base+0xd68>
  40ee90:	movzx  eax,WORD PTR [rdx+rax*1]
  40ee94:	movsx  edx,ax
  40ee97:	mov    rax,QWORD PTR [rbp-0x20]
  40ee9b:	mov    DWORD PTR [rax+0x8],edx
  40ee9e:	mov    eax,DWORD PTR [rbp-0x4]
  40eea1:	cmp    eax,DWORD PTR [rbp-0x14]
  40eea4:	jle    40eec5 <flatcc_emitter_copy_buffer@@Base+0x2681>
  40eea6:	lea    rcx,[rip+0x70a3]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40eead:	mov    edx,0x58
  40eeb2:	lea    rsi,[rip+0x6897]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40eeb9:	lea    rdi,[rip+0x6953]        # 415813 <flatcc_builder_padding_base@@Base+0x1473>
  40eec0:	call   403150 <__assert_fail@plt>
  40eec5:	mov    edx,DWORD PTR [rbp-0x4]
  40eec8:	mov    eax,DWORD PTR [rbp-0xc]
  40eecb:	add    eax,edx
  40eecd:	cmp    DWORD PTR [rbp-0x14],eax
  40eed0:	jl     40eef1 <flatcc_emitter_copy_buffer@@Base+0x26ad>
  40eed2:	lea    rcx,[rip+0x7077]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40eed9:	mov    edx,0x59
  40eede:	lea    rsi,[rip+0x686b]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40eee5:	lea    rdi,[rip+0x6936]        # 415822 <flatcc_builder_padding_base@@Base+0x1482>
  40eeec:	call   403150 <__assert_fail@plt>
  40eef1:	mov    eax,DWORD PTR [rbp-0x4]
  40eef4:	leave  
  40eef5:	ret    

000000000040eef6 <grisu3_diy_fp_encode_double@@Base>:
  40eef6:	endbr64 
  40eefa:	push   rbp
  40eefb:	mov    rbp,rsp
  40eefe:	sub    rsp,0xb0
  40ef05:	mov    QWORD PTR [rbp-0x98],rdi
  40ef0c:	mov    DWORD PTR [rbp-0x9c],esi
  40ef12:	mov    DWORD PTR [rbp-0xa0],edx
  40ef18:	mov    DWORD PTR [rbp-0xa4],ecx
  40ef1e:	mov    QWORD PTR [rbp-0xb0],r8
  40ef25:	mov    rax,QWORD PTR fs:0x28
  40ef2e:	mov    QWORD PTR [rbp-0x8],rax
  40ef32:	xor    eax,eax
  40ef34:	mov    DWORD PTR [rbp-0x7c],0x3
  40ef3b:	mov    eax,DWORD PTR [rbp-0x7c]
  40ef3e:	mov    edx,0x1
  40ef43:	shlx   eax,edx,eax
  40ef48:	mov    DWORD PTR [rbp-0x78],eax
  40ef4b:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  40ef52:	movabs rax,0x10000000000000
  40ef5c:	mov    QWORD PTR [rbp-0x48],rax
  40ef60:	mov    DWORD PTR [rbp-0x70],0x40
  40ef67:	mov    DWORD PTR [rbp-0x6c],0x13
  40ef6e:	cmp    DWORD PTR [rbp-0xa4],0x0
  40ef75:	je     40ef85 <grisu3_diy_fp_encode_double@@Base+0x8f>
  40ef77:	mov    eax,DWORD PTR [rbp-0x78]
  40ef7a:	mov    edx,eax
  40ef7c:	shr    edx,0x1f
  40ef7f:	add    eax,edx
  40ef81:	sar    eax,1
  40ef83:	jmp    40ef8a <grisu3_diy_fp_encode_double@@Base+0x94>
  40ef85:	mov    eax,0x0
  40ef8a:	mov    DWORD PTR [rbp-0x84],eax
  40ef90:	mov    eax,DWORD PTR [rbp-0x9c]
  40ef96:	sub    eax,DWORD PTR [rbp-0xa0]
  40ef9c:	mov    DWORD PTR [rbp-0x68],eax
  40ef9f:	mov    rax,QWORD PTR [rbp-0x98]
  40efa6:	mov    QWORD PTR [rbp-0x40],rax
  40efaa:	mov    DWORD PTR [rbp-0x38],0x0
  40efb1:	mov    rdx,QWORD PTR [rbp-0x40]
  40efb5:	mov    rax,QWORD PTR [rbp-0x38]
  40efb9:	mov    rdi,rdx
  40efbc:	mov    rsi,rax
  40efbf:	call   40eb15 <flatcc_emitter_copy_buffer@@Base+0x22d1>
  40efc4:	mov    QWORD PTR [rbp-0x40],rax
  40efc8:	mov    QWORD PTR [rbp-0x38],rdx
  40efcc:	mov    eax,DWORD PTR [rbp-0x38]
  40efcf:	neg    eax
  40efd1:	mov    ecx,eax
  40efd3:	shl    DWORD PTR [rbp-0x84],cl
  40efd9:	lea    rdx,[rbp-0x30]
  40efdd:	mov    eax,DWORD PTR [rbp-0x68]
  40efe0:	mov    rsi,rdx
  40efe3:	mov    edi,eax
  40efe5:	call   40edc0 <flatcc_emitter_copy_buffer@@Base+0x257c>
  40efea:	mov    DWORD PTR [rbp-0x64],eax
  40efed:	mov    eax,DWORD PTR [rbp-0x64]
  40eff0:	cmp    eax,DWORD PTR [rbp-0x68]
  40eff3:	je     40f08d <grisu3_diy_fp_encode_double@@Base+0x197>
  40eff9:	mov    eax,DWORD PTR [rbp-0x68]
  40effc:	sub    eax,DWORD PTR [rbp-0x64]
  40efff:	dec    eax
  40f001:	mov    DWORD PTR [rbp-0x60],eax
  40f004:	cmp    DWORD PTR [rbp-0x60],0x0
  40f008:	js     40f010 <grisu3_diy_fp_encode_double@@Base+0x11a>
  40f00a:	cmp    DWORD PTR [rbp-0x60],0x6
  40f00e:	jle    40f02f <grisu3_diy_fp_encode_double@@Base+0x139>
  40f010:	lea    rcx,[rip+0x6f59]        # 415f70 <flatcc_builder_padding_base@@Base+0x1bd0>
  40f017:	mov    edx,0xb9
  40f01c:	lea    rsi,[rip+0x672d]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40f023:	lea    rdi,[rip+0x6813]        # 41583d <flatcc_builder_padding_base@@Base+0x149d>
  40f02a:	call   403150 <__assert_fail@plt>
  40f02f:	mov    eax,DWORD PTR [rbp-0x60]
  40f032:	cdqe   
  40f034:	shl    rax,0x4
  40f038:	mov    rdx,rax
  40f03b:	lea    rax,[rip+0xb07e]        # 41a0c0 <__data_start@@Base+0x20>
  40f042:	lea    rdx,[rdx+rax*1]
  40f046:	mov    rax,QWORD PTR [rdx]
  40f049:	mov    rdx,QWORD PTR [rdx+0x8]
  40f04d:	mov    rdi,QWORD PTR [rbp-0x40]
  40f051:	mov    rsi,QWORD PTR [rbp-0x38]
  40f055:	mov    rcx,rdx
  40f058:	mov    rdx,rax
  40f05b:	call   40ea1d <flatcc_emitter_copy_buffer@@Base+0x21d9>
  40f060:	mov    QWORD PTR [rbp-0x40],rax
  40f064:	mov    QWORD PTR [rbp-0x38],rdx
  40f068:	mov    eax,DWORD PTR [rbp-0xa0]
  40f06e:	lea    edx,[rax+0x1]
  40f071:	mov    eax,DWORD PTR [rbp-0x60]
  40f074:	add    eax,edx
  40f076:	cmp    DWORD PTR [rbp-0x6c],eax
  40f079:	jge    40f08d <grisu3_diy_fp_encode_double@@Base+0x197>
  40f07b:	mov    eax,DWORD PTR [rbp-0x78]
  40f07e:	mov    edx,eax
  40f080:	shr    edx,0x1f
  40f083:	add    eax,edx
  40f085:	sar    eax,1
  40f087:	add    DWORD PTR [rbp-0x84],eax
  40f08d:	mov    rax,QWORD PTR [rbp-0x30]
  40f091:	mov    rdx,QWORD PTR [rbp-0x28]
  40f095:	mov    rdi,QWORD PTR [rbp-0x40]
  40f099:	mov    rsi,QWORD PTR [rbp-0x38]
  40f09d:	mov    rcx,rdx
  40f0a0:	mov    rdx,rax
  40f0a3:	call   40ea1d <flatcc_emitter_copy_buffer@@Base+0x21d9>
  40f0a8:	mov    QWORD PTR [rbp-0x40],rax
  40f0ac:	mov    QWORD PTR [rbp-0x38],rdx
  40f0b0:	cmp    DWORD PTR [rbp-0x84],0x0
  40f0b7:	setne  al
  40f0ba:	movzx  edx,al
  40f0bd:	mov    eax,DWORD PTR [rbp-0x78]
  40f0c0:	add    eax,edx
  40f0c2:	add    DWORD PTR [rbp-0x84],eax
  40f0c8:	mov    eax,DWORD PTR [rbp-0x38]
  40f0cb:	mov    DWORD PTR [rbp-0x5c],eax
  40f0ce:	mov    rdx,QWORD PTR [rbp-0x40]
  40f0d2:	mov    rax,QWORD PTR [rbp-0x38]
  40f0d6:	mov    rdi,rdx
  40f0d9:	mov    rsi,rax
  40f0dc:	call   40eb15 <flatcc_emitter_copy_buffer@@Base+0x22d1>
  40f0e1:	mov    QWORD PTR [rbp-0x40],rax
  40f0e5:	mov    QWORD PTR [rbp-0x38],rdx
  40f0e9:	mov    eax,DWORD PTR [rbp-0x38]
  40f0ec:	mov    edx,DWORD PTR [rbp-0x5c]
  40f0ef:	sub    edx,eax
  40f0f1:	mov    eax,edx
  40f0f3:	mov    ecx,eax
  40f0f5:	shl    DWORD PTR [rbp-0x84],cl
  40f0fb:	mov    edx,DWORD PTR [rbp-0x38]
  40f0fe:	mov    eax,DWORD PTR [rbp-0x70]
  40f101:	add    eax,edx
  40f103:	mov    DWORD PTR [rbp-0x58],eax
  40f106:	mov    edx,DWORD PTR [rbp-0x70]
  40f109:	mov    eax,DWORD PTR [rbp-0x74]
  40f10c:	add    eax,edx
  40f10e:	cmp    DWORD PTR [rbp-0x58],eax
  40f111:	jge    40f12a <grisu3_diy_fp_encode_double@@Base+0x234>
  40f113:	mov    eax,DWORD PTR [rbp-0x58]
  40f116:	cmp    eax,DWORD PTR [rbp-0x74]
  40f119:	jle    40f123 <grisu3_diy_fp_encode_double@@Base+0x22d>
  40f11b:	mov    eax,DWORD PTR [rbp-0x58]
  40f11e:	sub    eax,DWORD PTR [rbp-0x74]
  40f121:	jmp    40f12d <grisu3_diy_fp_encode_double@@Base+0x237>
  40f123:	mov    eax,0x0
  40f128:	jmp    40f12d <grisu3_diy_fp_encode_double@@Base+0x237>
  40f12a:	mov    eax,DWORD PTR [rbp-0x70]
  40f12d:	mov    DWORD PTR [rbp-0x58],eax
  40f130:	mov    eax,DWORD PTR [rbp-0x70]
  40f133:	sub    eax,DWORD PTR [rbp-0x58]
  40f136:	mov    DWORD PTR [rbp-0x80],eax
  40f139:	mov    edx,DWORD PTR [rbp-0x80]
  40f13c:	mov    eax,DWORD PTR [rbp-0x7c]
  40f13f:	add    eax,edx
  40f141:	cmp    DWORD PTR [rbp-0x70],eax
  40f144:	jg     40f193 <grisu3_diy_fp_encode_double@@Base+0x29d>
  40f146:	mov    edx,DWORD PTR [rbp-0x80]
  40f149:	mov    eax,DWORD PTR [rbp-0x7c]
  40f14c:	add    eax,edx
  40f14e:	sub    eax,DWORD PTR [rbp-0x70]
  40f151:	dec    eax
  40f153:	mov    DWORD PTR [rbp-0x54],eax
  40f156:	mov    rdx,QWORD PTR [rbp-0x40]
  40f15a:	mov    eax,DWORD PTR [rbp-0x54]
  40f15d:	shrx   rax,rdx,rax
  40f162:	mov    QWORD PTR [rbp-0x40],rax
  40f166:	mov    edx,DWORD PTR [rbp-0x38]
  40f169:	mov    eax,DWORD PTR [rbp-0x54]
  40f16c:	add    eax,edx
  40f16e:	mov    DWORD PTR [rbp-0x38],eax
  40f171:	mov    eax,DWORD PTR [rbp-0x54]
  40f174:	mov    edx,DWORD PTR [rbp-0x84]
  40f17a:	sarx   eax,edx,eax
  40f17f:	lea    edx,[rax+0x1]
  40f182:	mov    eax,DWORD PTR [rbp-0x78]
  40f185:	add    eax,edx
  40f187:	mov    DWORD PTR [rbp-0x84],eax
  40f18d:	mov    eax,DWORD PTR [rbp-0x54]
  40f190:	sub    DWORD PTR [rbp-0x80],eax
  40f193:	mov    rdx,QWORD PTR [rbp-0x40]
  40f197:	mov    eax,DWORD PTR [rbp-0x80]
  40f19a:	shrx   rax,rdx,rax
  40f19f:	mov    QWORD PTR [rbp-0x20],rax
  40f1a3:	mov    edx,DWORD PTR [rbp-0x38]
  40f1a6:	mov    eax,DWORD PTR [rbp-0x80]
  40f1a9:	add    eax,edx
  40f1ab:	mov    DWORD PTR [rbp-0x18],eax
  40f1ae:	mov    rdx,QWORD PTR [rbp-0x40]
  40f1b2:	mov    eax,DWORD PTR [rbp-0x80]
  40f1b5:	dec    eax
  40f1b7:	mov    ecx,0x1
  40f1bc:	shlx   rax,rcx,rax
  40f1c1:	and    rax,rdx
  40f1c4:	mov    edx,eax
  40f1c6:	mov    eax,DWORD PTR [rbp-0x78]
  40f1c9:	cdqe   
  40f1cb:	imul   eax,edx
  40f1ce:	mov    DWORD PTR [rbp-0x50],eax
  40f1d1:	mov    eax,DWORD PTR [rbp-0x78]
  40f1d4:	movsxd rdx,eax
  40f1d7:	mov    eax,DWORD PTR [rbp-0x80]
  40f1da:	dec    eax
  40f1dc:	shlx   rax,rdx,rax
  40f1e1:	mov    DWORD PTR [rbp-0x4c],eax
  40f1e4:	mov    edx,DWORD PTR [rbp-0x4c]
  40f1e7:	mov    eax,DWORD PTR [rbp-0x84]
  40f1ed:	add    eax,edx
  40f1ef:	cmp    DWORD PTR [rbp-0x80],eax
  40f1f2:	jl     40f225 <grisu3_diy_fp_encode_double@@Base+0x32f>
  40f1f4:	mov    rax,QWORD PTR [rbp-0x20]
  40f1f8:	inc    rax
  40f1fb:	mov    QWORD PTR [rbp-0x20],rax
  40f1ff:	mov    rax,QWORD PTR [rbp-0x20]
  40f203:	mov    rdx,QWORD PTR [rbp-0x48]
  40f207:	add    rdx,rdx
  40f20a:	and    rax,rdx
  40f20d:	test   rax,rax
  40f210:	je     40f225 <grisu3_diy_fp_encode_double@@Base+0x32f>
  40f212:	mov    rax,QWORD PTR [rbp-0x20]
  40f216:	shr    rax,1
  40f219:	mov    QWORD PTR [rbp-0x20],rax
  40f21d:	mov    eax,DWORD PTR [rbp-0x18]
  40f220:	inc    eax
  40f222:	mov    DWORD PTR [rbp-0x18],eax
  40f225:	mov    rdx,QWORD PTR [rbp-0x20]
  40f229:	mov    rax,QWORD PTR [rbp-0x18]
  40f22d:	mov    rdi,rdx
  40f230:	mov    rsi,rax
  40f233:	call   40ec3f <flatcc_emitter_copy_buffer@@Base+0x23fb>
  40f238:	vmovq  rax,xmm0
  40f23d:	mov    rdx,QWORD PTR [rbp-0xb0]
  40f244:	mov    QWORD PTR [rdx],rax
  40f247:	mov    eax,DWORD PTR [rbp-0x4c]
  40f24a:	sub    eax,DWORD PTR [rbp-0x84]
  40f250:	cmp    DWORD PTR [rbp-0x50],eax
  40f253:	jle    40f265 <grisu3_diy_fp_encode_double@@Base+0x36f>
  40f255:	mov    edx,DWORD PTR [rbp-0x4c]
  40f258:	mov    eax,DWORD PTR [rbp-0x84]
  40f25e:	add    eax,edx
  40f260:	cmp    DWORD PTR [rbp-0x50],eax
  40f263:	jl     40f26c <grisu3_diy_fp_encode_double@@Base+0x376>
  40f265:	mov    eax,0x1
  40f26a:	jmp    40f271 <grisu3_diy_fp_encode_double@@Base+0x37b>
  40f26c:	mov    eax,0x0
  40f271:	mov    rcx,QWORD PTR [rbp-0x8]
  40f275:	xor    rcx,QWORD PTR fs:0x28
  40f27e:	je     40f285 <grisu3_diy_fp_encode_double@@Base+0x38f>
  40f280:	call   403140 <__stack_chk_fail@plt>
  40f285:	leave  
  40f286:	ret    
  40f287:	endbr64 
  40f28b:	push   rbp
  40f28c:	mov    rbp,rsp
  40f28f:	sub    rsp,0x50
  40f293:	mov    QWORD PTR [rbp-0x28],rdi
  40f297:	mov    QWORD PTR [rbp-0x30],rsi
  40f29b:	mov    DWORD PTR [rbp-0x34],edx
  40f29e:	mov    QWORD PTR [rbp-0x40],rcx
  40f2a2:	mov    DWORD PTR [rbp-0x38],r8d
  40f2a6:	mov    DWORD PTR [rbp-0x44],r9d
  40f2aa:	mov    rax,QWORD PTR [rbp+0x18]
  40f2ae:	mov    QWORD PTR [rbp-0x50],rax
  40f2b2:	mov    rax,QWORD PTR fs:0x28
  40f2bb:	mov    QWORD PTR [rbp-0x8],rax
  40f2bf:	xor    eax,eax
  40f2c1:	mov    DWORD PTR [rbp-0x20],0x135
  40f2c8:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  40f2cf:	cmp    QWORD PTR [rbp-0x40],0x0
  40f2d4:	je     40f2de <grisu3_diy_fp_encode_double@@Base+0x3e8>
  40f2d6:	mov    eax,DWORD PTR [rbp-0x38]
  40f2d9:	cmp    eax,DWORD PTR [rbp-0x1c]
  40f2dc:	jge    40f2ef <grisu3_diy_fp_encode_double@@Base+0x3f9>
  40f2de:	mov    rax,QWORD PTR [rbp-0x50]
  40f2e2:	vxorpd xmm0,xmm0,xmm0
  40f2e6:	vmovsd QWORD PTR [rax],xmm0
  40f2ea:	jmp    40f899 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  40f2ef:	mov    eax,DWORD PTR [rbp-0x38]
  40f2f2:	dec    eax
  40f2f4:	cmp    DWORD PTR [rbp-0x20],eax
  40f2f7:	jge    40f319 <grisu3_diy_fp_encode_double@@Base+0x423>
  40f2f9:	movabs rdi,0x7ff0000000000000
  40f303:	call   40e872 <flatcc_emitter_copy_buffer@@Base+0x202e>
  40f308:	vmovq  rax,xmm0
  40f30d:	mov    rdx,QWORD PTR [rbp-0x50]
  40f311:	mov    QWORD PTR [rdx],rax
  40f314:	jmp    40f899 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  40f319:	movabs rax,0x1fffffffffffff
  40f323:	cmp    QWORD PTR [rbp-0x40],rax
  40f327:	ja     40f843 <grisu3_diy_fp_encode_double@@Base+0x94d>
  40f32d:	cmp    DWORD PTR [rbp-0x38],0x0
  40f331:	js     40f843 <grisu3_diy_fp_encode_double@@Base+0x94d>
  40f337:	cmp    DWORD PTR [rbp-0x38],0x16
  40f33b:	jg     40f843 <grisu3_diy_fp_encode_double@@Base+0x94d>
  40f341:	mov    rax,QWORD PTR [rbp-0x40]
  40f345:	test   rax,rax
  40f348:	js     40f351 <grisu3_diy_fp_encode_double@@Base+0x45b>
  40f34a:	vcvtsi2sd xmm0,xmm0,rax
  40f34f:	jmp    40f366 <grisu3_diy_fp_encode_double@@Base+0x470>
  40f351:	mov    rdx,rax
  40f354:	shr    rdx,1
  40f357:	and    eax,0x1
  40f35a:	or     rdx,rax
  40f35d:	vcvtsi2sd xmm0,xmm0,rdx
  40f362:	vaddsd xmm0,xmm0,xmm0
  40f366:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f36b:	mov    eax,DWORD PTR [rbp-0x38]
  40f36e:	sub    eax,DWORD PTR [rbp-0x44]
  40f371:	add    eax,0x16
  40f374:	cmp    eax,0x2c
  40f377:	ja     40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f37d:	mov    eax,eax
  40f37f:	lea    rdx,[rax*4+0x0]
  40f387:	lea    rax,[rip+0x64ce]        # 41585c <flatcc_builder_padding_base@@Base+0x14bc>
  40f38e:	mov    eax,DWORD PTR [rdx+rax*1]
  40f391:	movsxd rdx,eax
  40f394:	lea    rax,[rip+0x64c1]        # 41585c <flatcc_builder_padding_base@@Base+0x14bc>
  40f39b:	add    rax,rdx
  40f39e:	notrack jmp rax
  40f3a1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3a6:	vmovsd xmm1,QWORD PTR [rip+0x7092]        # 416440 <flatcc_builder_padding_base@@Base+0x20a0>
  40f3ae:	vdivsd xmm0,xmm0,xmm1
  40f3b2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3b7:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f3bc:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3c1:	vmovsd xmm1,QWORD PTR [rip+0x707f]        # 416448 <flatcc_builder_padding_base@@Base+0x20a8>
  40f3c9:	vdivsd xmm0,xmm0,xmm1
  40f3cd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3d2:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f3d7:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3dc:	vmovsd xmm1,QWORD PTR [rip+0x706c]        # 416450 <flatcc_builder_padding_base@@Base+0x20b0>
  40f3e4:	vdivsd xmm0,xmm0,xmm1
  40f3e8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3ed:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f3f2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3f7:	vmovsd xmm1,QWORD PTR [rip+0x7059]        # 416458 <flatcc_builder_padding_base@@Base+0x20b8>
  40f3ff:	vdivsd xmm0,xmm0,xmm1
  40f403:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f408:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f40d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f412:	vmovsd xmm1,QWORD PTR [rip+0x7046]        # 416460 <flatcc_builder_padding_base@@Base+0x20c0>
  40f41a:	vdivsd xmm0,xmm0,xmm1
  40f41e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f423:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f428:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f42d:	vmovsd xmm1,QWORD PTR [rip+0x7033]        # 416468 <flatcc_builder_padding_base@@Base+0x20c8>
  40f435:	vdivsd xmm0,xmm0,xmm1
  40f439:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f43e:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f443:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f448:	vmovsd xmm1,QWORD PTR [rip+0x7020]        # 416470 <flatcc_builder_padding_base@@Base+0x20d0>
  40f450:	vdivsd xmm0,xmm0,xmm1
  40f454:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f459:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f45e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f463:	vmovsd xmm1,QWORD PTR [rip+0x700d]        # 416478 <flatcc_builder_padding_base@@Base+0x20d8>
  40f46b:	vdivsd xmm0,xmm0,xmm1
  40f46f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f474:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f479:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f47e:	vmovsd xmm1,QWORD PTR [rip+0x6ffa]        # 416480 <flatcc_builder_padding_base@@Base+0x20e0>
  40f486:	vdivsd xmm0,xmm0,xmm1
  40f48a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f48f:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f494:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f499:	vmovsd xmm1,QWORD PTR [rip+0x6fe7]        # 416488 <flatcc_builder_padding_base@@Base+0x20e8>
  40f4a1:	vdivsd xmm0,xmm0,xmm1
  40f4a5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4aa:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f4af:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f4b4:	vmovsd xmm1,QWORD PTR [rip+0x6fd4]        # 416490 <flatcc_builder_padding_base@@Base+0x20f0>
  40f4bc:	vdivsd xmm0,xmm0,xmm1
  40f4c0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4c5:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f4ca:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f4cf:	vmovsd xmm1,QWORD PTR [rip+0x6fc1]        # 416498 <flatcc_builder_padding_base@@Base+0x20f8>
  40f4d7:	vdivsd xmm0,xmm0,xmm1
  40f4db:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4e0:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f4e5:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f4ea:	vmovsd xmm1,QWORD PTR [rip+0x6fae]        # 4164a0 <flatcc_builder_padding_base@@Base+0x2100>
  40f4f2:	vdivsd xmm0,xmm0,xmm1
  40f4f6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4fb:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f500:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f505:	vmovsd xmm1,QWORD PTR [rip+0x6f9b]        # 4164a8 <flatcc_builder_padding_base@@Base+0x2108>
  40f50d:	vdivsd xmm0,xmm0,xmm1
  40f511:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f516:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f51b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f520:	vmovsd xmm1,QWORD PTR [rip+0x6f88]        # 4164b0 <flatcc_builder_padding_base@@Base+0x2110>
  40f528:	vdivsd xmm0,xmm0,xmm1
  40f52c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f531:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f536:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f53b:	vmovsd xmm1,QWORD PTR [rip+0x6f75]        # 4164b8 <flatcc_builder_padding_base@@Base+0x2118>
  40f543:	vdivsd xmm0,xmm0,xmm1
  40f547:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f54c:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f551:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f556:	vmovsd xmm1,QWORD PTR [rip+0x6f62]        # 4164c0 <flatcc_builder_padding_base@@Base+0x2120>
  40f55e:	vdivsd xmm0,xmm0,xmm1
  40f562:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f567:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f56c:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f571:	vmovsd xmm1,QWORD PTR [rip+0x6f4f]        # 4164c8 <flatcc_builder_padding_base@@Base+0x2128>
  40f579:	vdivsd xmm0,xmm0,xmm1
  40f57d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f582:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f587:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f58c:	vmovsd xmm1,QWORD PTR [rip+0x6f3c]        # 4164d0 <flatcc_builder_padding_base@@Base+0x2130>
  40f594:	vdivsd xmm0,xmm0,xmm1
  40f598:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f59d:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f5a2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f5a7:	vmovsd xmm1,QWORD PTR [rip+0x6f29]        # 4164d8 <flatcc_builder_padding_base@@Base+0x2138>
  40f5af:	vdivsd xmm0,xmm0,xmm1
  40f5b3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5b8:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f5bd:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f5c2:	vmovsd xmm1,QWORD PTR [rip+0x6f16]        # 4164e0 <flatcc_builder_padding_base@@Base+0x2140>
  40f5ca:	vdivsd xmm0,xmm0,xmm1
  40f5ce:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5d3:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f5d8:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f5dd:	vmovsd xmm1,QWORD PTR [rip+0x6f03]        # 4164e8 <flatcc_builder_padding_base@@Base+0x2148>
  40f5e5:	vdivsd xmm0,xmm0,xmm1
  40f5e9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5ee:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f5f3:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f5f8:	vmovsd xmm0,QWORD PTR [rip+0x6ee8]        # 4164e8 <flatcc_builder_padding_base@@Base+0x2148>
  40f600:	vmulsd xmm0,xmm1,xmm0
  40f604:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f609:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f60e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f613:	vmovsd xmm0,QWORD PTR [rip+0x6ec5]        # 4164e0 <flatcc_builder_padding_base@@Base+0x2140>
  40f61b:	vmulsd xmm0,xmm1,xmm0
  40f61f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f624:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f629:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f62e:	vmovsd xmm0,QWORD PTR [rip+0x6ea2]        # 4164d8 <flatcc_builder_padding_base@@Base+0x2138>
  40f636:	vmulsd xmm0,xmm1,xmm0
  40f63a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f63f:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f644:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f649:	vmovsd xmm0,QWORD PTR [rip+0x6e7f]        # 4164d0 <flatcc_builder_padding_base@@Base+0x2130>
  40f651:	vmulsd xmm0,xmm1,xmm0
  40f655:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f65a:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f65f:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f664:	vmovsd xmm0,QWORD PTR [rip+0x6e5c]        # 4164c8 <flatcc_builder_padding_base@@Base+0x2128>
  40f66c:	vmulsd xmm0,xmm1,xmm0
  40f670:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f675:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f67a:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f67f:	vmovsd xmm0,QWORD PTR [rip+0x6e39]        # 4164c0 <flatcc_builder_padding_base@@Base+0x2120>
  40f687:	vmulsd xmm0,xmm1,xmm0
  40f68b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f690:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f695:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f69a:	vmovsd xmm0,QWORD PTR [rip+0x6e16]        # 4164b8 <flatcc_builder_padding_base@@Base+0x2118>
  40f6a2:	vmulsd xmm0,xmm1,xmm0
  40f6a6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f6ab:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f6b0:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f6b5:	vmovsd xmm0,QWORD PTR [rip+0x6df3]        # 4164b0 <flatcc_builder_padding_base@@Base+0x2110>
  40f6bd:	vmulsd xmm0,xmm1,xmm0
  40f6c1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f6c6:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f6cb:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f6d0:	vmovsd xmm0,QWORD PTR [rip+0x6dd0]        # 4164a8 <flatcc_builder_padding_base@@Base+0x2108>
  40f6d8:	vmulsd xmm0,xmm1,xmm0
  40f6dc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f6e1:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f6e6:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f6eb:	vmovsd xmm0,QWORD PTR [rip+0x6dad]        # 4164a0 <flatcc_builder_padding_base@@Base+0x2100>
  40f6f3:	vmulsd xmm0,xmm1,xmm0
  40f6f7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f6fc:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f701:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f706:	vmovsd xmm0,QWORD PTR [rip+0x6d8a]        # 416498 <flatcc_builder_padding_base@@Base+0x20f8>
  40f70e:	vmulsd xmm0,xmm1,xmm0
  40f712:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f717:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f71c:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f721:	vmovsd xmm0,QWORD PTR [rip+0x6d67]        # 416490 <flatcc_builder_padding_base@@Base+0x20f0>
  40f729:	vmulsd xmm0,xmm1,xmm0
  40f72d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f732:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f737:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f73c:	vmovsd xmm0,QWORD PTR [rip+0x6d44]        # 416488 <flatcc_builder_padding_base@@Base+0x20e8>
  40f744:	vmulsd xmm0,xmm1,xmm0
  40f748:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f74d:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f752:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f757:	vmovsd xmm0,QWORD PTR [rip+0x6d21]        # 416480 <flatcc_builder_padding_base@@Base+0x20e0>
  40f75f:	vmulsd xmm0,xmm1,xmm0
  40f763:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f768:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f76d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f772:	vmovsd xmm0,QWORD PTR [rip+0x6cfe]        # 416478 <flatcc_builder_padding_base@@Base+0x20d8>
  40f77a:	vmulsd xmm0,xmm1,xmm0
  40f77e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f783:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f788:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f78d:	vmovsd xmm0,QWORD PTR [rip+0x6cdb]        # 416470 <flatcc_builder_padding_base@@Base+0x20d0>
  40f795:	vmulsd xmm0,xmm1,xmm0
  40f799:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f79e:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f7a3:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f7a8:	vmovsd xmm0,QWORD PTR [rip+0x6cb8]        # 416468 <flatcc_builder_padding_base@@Base+0x20c8>
  40f7b0:	vmulsd xmm0,xmm1,xmm0
  40f7b4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f7b9:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f7bb:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f7c0:	vmovsd xmm0,QWORD PTR [rip+0x6c98]        # 416460 <flatcc_builder_padding_base@@Base+0x20c0>
  40f7c8:	vmulsd xmm0,xmm1,xmm0
  40f7cc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f7d1:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f7d3:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f7d8:	vmovsd xmm0,QWORD PTR [rip+0x6c78]        # 416458 <flatcc_builder_padding_base@@Base+0x20b8>
  40f7e0:	vmulsd xmm0,xmm1,xmm0
  40f7e4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f7e9:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f7eb:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f7f0:	vmovsd xmm0,QWORD PTR [rip+0x6c58]        # 416450 <flatcc_builder_padding_base@@Base+0x20b0>
  40f7f8:	vmulsd xmm0,xmm1,xmm0
  40f7fc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f801:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f803:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f808:	vmovsd xmm0,QWORD PTR [rip+0x6c38]        # 416448 <flatcc_builder_padding_base@@Base+0x20a8>
  40f810:	vmulsd xmm0,xmm1,xmm0
  40f814:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f819:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f81b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f820:	vmovsd xmm0,QWORD PTR [rip+0x6c18]        # 416440 <flatcc_builder_padding_base@@Base+0x20a0>
  40f828:	vmulsd xmm0,xmm1,xmm0
  40f82c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f831:	jmp    40f834 <grisu3_diy_fp_encode_double@@Base+0x93e>
  40f833:	nop
  40f834:	mov    rax,QWORD PTR [rbp-0x50]
  40f838:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f83d:	vmovsd QWORD PTR [rax],xmm0
  40f841:	jmp    40f899 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  40f843:	mov    rcx,QWORD PTR [rbp-0x50]
  40f847:	mov    edx,DWORD PTR [rbp-0x44]
  40f84a:	mov    esi,DWORD PTR [rbp-0x38]
  40f84d:	mov    rax,QWORD PTR [rbp-0x40]
  40f851:	mov    r8,rcx
  40f854:	mov    ecx,DWORD PTR [rbp+0x10]
  40f857:	mov    rdi,rax
  40f85a:	call   40eef6 <grisu3_diy_fp_encode_double@@Base>
  40f85f:	test   eax,eax
  40f861:	jne    40f898 <grisu3_diy_fp_encode_double@@Base+0x9a2>
  40f863:	lea    rdx,[rbp-0x18]
  40f867:	mov    rax,QWORD PTR [rbp-0x28]
  40f86b:	mov    rsi,rdx
  40f86e:	mov    rdi,rax
  40f871:	call   403120 <strtod@plt>
  40f876:	vmovq  rax,xmm0
  40f87b:	mov    rdx,QWORD PTR [rbp-0x50]
  40f87f:	mov    QWORD PTR [rdx],rax
  40f882:	mov    rax,QWORD PTR [rbp-0x18]
  40f886:	cmp    QWORD PTR [rbp-0x30],rax
  40f88a:	jbe    40f892 <grisu3_diy_fp_encode_double@@Base+0x99c>
  40f88c:	mov    rax,QWORD PTR [rbp-0x18]
  40f890:	jmp    40f8bf <grisu3_diy_fp_encode_double@@Base+0x9c9>
  40f892:	mov    rax,QWORD PTR [rbp-0x30]
  40f896:	jmp    40f8bf <grisu3_diy_fp_encode_double@@Base+0x9c9>
  40f898:	nop
  40f899:	cmp    DWORD PTR [rbp-0x34],0x0
  40f89d:	je     40f8bb <grisu3_diy_fp_encode_double@@Base+0x9c5>
  40f89f:	mov    rax,QWORD PTR [rbp-0x50]
  40f8a3:	vmovsd xmm1,QWORD PTR [rax]
  40f8a7:	vmovq  xmm0,QWORD PTR [rip+0x6b71]        # 416420 <flatcc_builder_padding_base@@Base+0x2080>
  40f8af:	vxorpd xmm0,xmm0,xmm1
  40f8b3:	mov    rax,QWORD PTR [rbp-0x50]
  40f8b7:	vmovsd QWORD PTR [rax],xmm0
  40f8bb:	mov    rax,QWORD PTR [rbp-0x30]
  40f8bf:	mov    rcx,QWORD PTR [rbp-0x8]
  40f8c3:	xor    rcx,QWORD PTR fs:0x28
  40f8cc:	je     40f8d3 <grisu3_diy_fp_encode_double@@Base+0x9dd>
  40f8ce:	call   403140 <__stack_chk_fail@plt>
  40f8d3:	leave  
  40f8d4:	ret    
  40f8d5:	endbr64 
  40f8d9:	push   rbp
  40f8da:	mov    rbp,rsp
  40f8dd:	mov    QWORD PTR [rbp-0x8],rdi
  40f8e1:	mov    QWORD PTR [rbp-0x10],rsi
  40f8e5:	mov    DWORD PTR [rbp-0x14],edx
  40f8e8:	mov    QWORD PTR [rbp-0x20],rcx
  40f8ec:	mov    rax,QWORD PTR [rbp-0x20]
  40f8f0:	vxorpd xmm0,xmm0,xmm0
  40f8f4:	vmovsd QWORD PTR [rax],xmm0
  40f8f8:	mov    rax,QWORD PTR [rbp-0x8]
  40f8fc:	pop    rbp
  40f8fd:	ret    
  40f8fe:	endbr64 
  40f902:	push   rbp
  40f903:	mov    rbp,rsp
  40f906:	sub    rsp,0x60
  40f90a:	mov    QWORD PTR [rbp-0x48],rdi
  40f90e:	mov    DWORD PTR [rbp-0x4c],esi
  40f911:	mov    QWORD PTR [rbp-0x58],rdx
  40f915:	mov    DWORD PTR [rbp-0x38],0x0
  40f91c:	mov    DWORD PTR [rbp-0x34],0x0
  40f923:	mov    QWORD PTR [rbp-0x18],0x0
  40f92b:	mov    DWORD PTR [rbp-0x30],0x0
  40f932:	mov    DWORD PTR [rbp-0x2c],0x0
  40f939:	mov    DWORD PTR [rbp-0x28],0x0
  40f940:	mov    DWORD PTR [rbp-0x24],0x0
  40f947:	mov    rax,QWORD PTR [rbp-0x58]
  40f94b:	vxorpd xmm0,xmm0,xmm0
  40f94f:	vmovsd QWORD PTR [rax],xmm0
  40f953:	mov    eax,DWORD PTR [rbp-0x4c]
  40f956:	cdqe   
  40f958:	lea    rdx,[rax+0x1]
  40f95c:	mov    rax,QWORD PTR [rbp-0x48]
  40f960:	add    rax,rdx
  40f963:	mov    QWORD PTR [rbp-0x20],rax
  40f967:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  40f96e:	jle    40f97e <grisu3_diy_fp_encode_double@@Base+0xa88>
  40f970:	mov    rax,QWORD PTR [rbp-0x48]
  40f974:	add    rax,0x3e9
  40f97a:	mov    QWORD PTR [rbp-0x20],rax
  40f97e:	mov    rax,QWORD PTR [rbp-0x48]
  40f982:	cmp    rax,QWORD PTR [rbp-0x20]
  40f986:	jne    40f991 <grisu3_diy_fp_encode_double@@Base+0xa9b>
  40f988:	mov    rax,QWORD PTR [rbp-0x48]
  40f98c:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40f991:	mov    rax,QWORD PTR [rbp-0x48]
  40f995:	mov    QWORD PTR [rbp-0x10],rax
  40f999:	mov    rax,QWORD PTR [rbp-0x48]
  40f99d:	movzx  eax,BYTE PTR [rax]
  40f9a0:	cmp    al,0x2d
  40f9a2:	jne    40f9c3 <grisu3_diy_fp_encode_double@@Base+0xacd>
  40f9a4:	inc    QWORD PTR [rbp-0x48]
  40f9a8:	mov    DWORD PTR [rbp-0x38],0x1
  40f9af:	mov    rax,QWORD PTR [rbp-0x48]
  40f9b3:	cmp    rax,QWORD PTR [rbp-0x20]
  40f9b7:	jne    40f9c3 <grisu3_diy_fp_encode_double@@Base+0xacd>
  40f9b9:	mov    eax,0x0
  40f9be:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40f9c3:	mov    rax,QWORD PTR [rbp-0x48]
  40f9c7:	movzx  eax,BYTE PTR [rax]
  40f9ca:	cmp    al,0x30
  40f9cc:	jne    40fa3c <grisu3_diy_fp_encode_double@@Base+0xb46>
  40f9ce:	inc    QWORD PTR [rbp-0x48]
  40f9d2:	mov    rax,QWORD PTR [rbp-0x48]
  40f9d6:	cmp    rax,QWORD PTR [rbp-0x20]
  40f9da:	je     40fa25 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  40f9dc:	mov    rax,QWORD PTR [rbp-0x48]
  40f9e0:	movzx  eax,BYTE PTR [rax]
  40f9e3:	or     eax,0x20
  40f9e6:	cmp    al,0x78
  40f9e8:	jne    40fa25 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  40f9ea:	mov    rcx,QWORD PTR [rbp-0x58]
  40f9ee:	mov    edx,DWORD PTR [rbp-0x38]
  40f9f1:	mov    rsi,QWORD PTR [rbp-0x20]
  40f9f5:	mov    rax,QWORD PTR [rbp-0x48]
  40f9f9:	mov    rdi,rax
  40f9fc:	call   40f8d5 <grisu3_diy_fp_encode_double@@Base+0x9df>
  40fa01:	mov    QWORD PTR [rbp-0x8],rax
  40fa05:	mov    rax,QWORD PTR [rbp-0x8]
  40fa09:	cmp    rax,QWORD PTR [rbp-0x48]
  40fa0d:	jne    40fa18 <grisu3_diy_fp_encode_double@@Base+0xb22>
  40fa0f:	mov    rax,QWORD PTR [rbp-0x10]
  40fa13:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fa18:	mov    rax,QWORD PTR [rbp-0x8]
  40fa1c:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fa21:	inc    QWORD PTR [rbp-0x48]
  40fa25:	mov    rax,QWORD PTR [rbp-0x48]
  40fa29:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa2d:	je     40fa86 <grisu3_diy_fp_encode_double@@Base+0xb90>
  40fa2f:	mov    rax,QWORD PTR [rbp-0x48]
  40fa33:	movzx  eax,BYTE PTR [rax]
  40fa36:	cmp    al,0x30
  40fa38:	je     40fa21 <grisu3_diy_fp_encode_double@@Base+0xb2b>
  40fa3a:	jmp    40fa86 <grisu3_diy_fp_encode_double@@Base+0xb90>
  40fa3c:	mov    rax,QWORD PTR [rbp-0x48]
  40fa40:	movzx  eax,BYTE PTR [rax]
  40fa43:	cmp    al,0x30
  40fa45:	jle    40fa52 <grisu3_diy_fp_encode_double@@Base+0xb5c>
  40fa47:	mov    rax,QWORD PTR [rbp-0x48]
  40fa4b:	movzx  eax,BYTE PTR [rax]
  40fa4e:	cmp    al,0x39
  40fa50:	jle    40fa6b <grisu3_diy_fp_encode_double@@Base+0xb75>
  40fa52:	cmp    DWORD PTR [rbp-0x38],0x0
  40fa56:	jne    40fa61 <grisu3_diy_fp_encode_double@@Base+0xb6b>
  40fa58:	mov    rax,QWORD PTR [rbp-0x10]
  40fa5c:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fa61:	mov    eax,0x0
  40fa66:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fa6b:	mov    rax,QWORD PTR [rbp-0x48]
  40fa6f:	lea    rdx,[rax+0x1]
  40fa73:	mov    QWORD PTR [rbp-0x48],rdx
  40fa77:	movzx  eax,BYTE PTR [rax]
  40fa7a:	movsx  eax,al
  40fa7d:	sub    eax,0x30
  40fa80:	cdqe   
  40fa82:	mov    QWORD PTR [rbp-0x18],rax
  40fa86:	mov    rax,QWORD PTR [rbp-0x48]
  40fa8a:	mov    QWORD PTR [rbp-0x8],rax
  40fa8e:	jmp    40faee <grisu3_diy_fp_encode_double@@Base+0xbf8>
  40fa90:	movabs rax,0x1999999999999998
  40fa9a:	cmp    QWORD PTR [rbp-0x18],rax
  40fa9e:	jbe    40fabc <grisu3_diy_fp_encode_double@@Base+0xbc6>
  40faa0:	mov    rax,QWORD PTR [rbp-0x48]
  40faa4:	movzx  eax,BYTE PTR [rax]
  40faa7:	cmp    al,0x34
  40faa9:	setg   al
  40faac:	movzx  eax,al
  40faaf:	add    QWORD PTR [rbp-0x18],rax
  40fab3:	mov    DWORD PTR [rbp-0x24],0x1
  40faba:	jmp    40fb0e <grisu3_diy_fp_encode_double@@Base+0xc18>
  40fabc:	mov    rdx,QWORD PTR [rbp-0x18]
  40fac0:	mov    rax,rdx
  40fac3:	shl    rax,0x2
  40fac7:	add    rax,rdx
  40faca:	add    rax,rax
  40facd:	mov    rcx,rax
  40fad0:	mov    rax,QWORD PTR [rbp-0x48]
  40fad4:	lea    rdx,[rax+0x1]
  40fad8:	mov    QWORD PTR [rbp-0x48],rdx
  40fadc:	movzx  eax,BYTE PTR [rax]
  40fadf:	movsx  rax,al
  40fae3:	add    rax,rcx
  40fae6:	sub    rax,0x30
  40faea:	mov    QWORD PTR [rbp-0x18],rax
  40faee:	mov    rax,QWORD PTR [rbp-0x48]
  40faf2:	cmp    rax,QWORD PTR [rbp-0x20]
  40faf6:	je     40fb0e <grisu3_diy_fp_encode_double@@Base+0xc18>
  40faf8:	mov    rax,QWORD PTR [rbp-0x48]
  40fafc:	movzx  eax,BYTE PTR [rax]
  40faff:	cmp    al,0x2f
  40fb01:	jle    40fb0e <grisu3_diy_fp_encode_double@@Base+0xc18>
  40fb03:	mov    rax,QWORD PTR [rbp-0x48]
  40fb07:	movzx  eax,BYTE PTR [rax]
  40fb0a:	cmp    al,0x39
  40fb0c:	jle    40fa90 <grisu3_diy_fp_encode_double@@Base+0xb9a>
  40fb0e:	mov    rax,QWORD PTR [rbp-0x48]
  40fb12:	sub    rax,QWORD PTR [rbp-0x8]
  40fb16:	mov    DWORD PTR [rbp-0x28],eax
  40fb19:	jmp    40fb22 <grisu3_diy_fp_encode_double@@Base+0xc2c>
  40fb1b:	inc    DWORD PTR [rbp-0x30]
  40fb1e:	inc    QWORD PTR [rbp-0x48]
  40fb22:	mov    rax,QWORD PTR [rbp-0x48]
  40fb26:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb2a:	je     40fb37 <grisu3_diy_fp_encode_double@@Base+0xc41>
  40fb2c:	mov    rax,QWORD PTR [rbp-0x48]
  40fb30:	movzx  eax,BYTE PTR [rax]
  40fb33:	cmp    al,0x30
  40fb35:	je     40fb1b <grisu3_diy_fp_encode_double@@Base+0xc25>
  40fb37:	mov    rax,QWORD PTR [rbp-0x48]
  40fb3b:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb3f:	je     40fb8e <grisu3_diy_fp_encode_double@@Base+0xc98>
  40fb41:	mov    rax,QWORD PTR [rbp-0x48]
  40fb45:	movzx  eax,BYTE PTR [rax]
  40fb48:	cmp    al,0x30
  40fb4a:	jle    40fb8e <grisu3_diy_fp_encode_double@@Base+0xc98>
  40fb4c:	mov    rax,QWORD PTR [rbp-0x48]
  40fb50:	movzx  eax,BYTE PTR [rax]
  40fb53:	cmp    al,0x39
  40fb55:	jg     40fb8e <grisu3_diy_fp_encode_double@@Base+0xc98>
  40fb57:	mov    DWORD PTR [rbp-0x24],0x1
  40fb5e:	inc    DWORD PTR [rbp-0x30]
  40fb61:	inc    QWORD PTR [rbp-0x48]
  40fb65:	jmp    40fb6e <grisu3_diy_fp_encode_double@@Base+0xc78>
  40fb67:	inc    DWORD PTR [rbp-0x30]
  40fb6a:	inc    QWORD PTR [rbp-0x48]
  40fb6e:	mov    rax,QWORD PTR [rbp-0x48]
  40fb72:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb76:	je     40fb8e <grisu3_diy_fp_encode_double@@Base+0xc98>
  40fb78:	mov    rax,QWORD PTR [rbp-0x48]
  40fb7c:	movzx  eax,BYTE PTR [rax]
  40fb7f:	cmp    al,0x2f
  40fb81:	jle    40fb8e <grisu3_diy_fp_encode_double@@Base+0xc98>
  40fb83:	mov    rax,QWORD PTR [rbp-0x48]
  40fb87:	movzx  eax,BYTE PTR [rax]
  40fb8a:	cmp    al,0x39
  40fb8c:	jle    40fb67 <grisu3_diy_fp_encode_double@@Base+0xc71>
  40fb8e:	mov    rax,QWORD PTR [rbp-0x48]
  40fb92:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb96:	je     40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fb9c:	mov    rax,QWORD PTR [rbp-0x48]
  40fba0:	movzx  eax,BYTE PTR [rax]
  40fba3:	cmp    al,0x2e
  40fba5:	jne    40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fbab:	inc    QWORD PTR [rbp-0x48]
  40fbaf:	mov    rax,QWORD PTR [rbp-0x48]
  40fbb3:	mov    QWORD PTR [rbp-0x8],rax
  40fbb7:	mov    rax,QWORD PTR [rbp-0x48]
  40fbbb:	movzx  eax,BYTE PTR [rax]
  40fbbe:	cmp    al,0x2f
  40fbc0:	jle    40fbcd <grisu3_diy_fp_encode_double@@Base+0xcd7>
  40fbc2:	mov    rax,QWORD PTR [rbp-0x48]
  40fbc6:	movzx  eax,BYTE PTR [rax]
  40fbc9:	cmp    al,0x39
  40fbcb:	jle    40fc3e <grisu3_diy_fp_encode_double@@Base+0xd48>
  40fbcd:	mov    eax,0x0
  40fbd2:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fbd7:	movabs rax,0x1999999999999998
  40fbe1:	cmp    QWORD PTR [rbp-0x18],rax
  40fbe5:	jbe    40fc09 <grisu3_diy_fp_encode_double@@Base+0xd13>
  40fbe7:	cmp    DWORD PTR [rbp-0x24],0x0
  40fbeb:	jne    40fc64 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  40fbed:	mov    rax,QWORD PTR [rbp-0x48]
  40fbf1:	movzx  eax,BYTE PTR [rax]
  40fbf4:	cmp    al,0x34
  40fbf6:	setg   al
  40fbf9:	movzx  eax,al
  40fbfc:	add    QWORD PTR [rbp-0x18],rax
  40fc00:	mov    DWORD PTR [rbp-0x24],0x1
  40fc07:	jmp    40fc64 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  40fc09:	mov    rdx,QWORD PTR [rbp-0x18]
  40fc0d:	mov    rax,rdx
  40fc10:	shl    rax,0x2
  40fc14:	add    rax,rdx
  40fc17:	add    rax,rax
  40fc1a:	mov    rcx,rax
  40fc1d:	mov    rax,QWORD PTR [rbp-0x48]
  40fc21:	lea    rdx,[rax+0x1]
  40fc25:	mov    QWORD PTR [rbp-0x48],rdx
  40fc29:	movzx  eax,BYTE PTR [rax]
  40fc2c:	movsx  rax,al
  40fc30:	add    rax,rcx
  40fc33:	sub    rax,0x30
  40fc37:	mov    QWORD PTR [rbp-0x18],rax
  40fc3b:	dec    DWORD PTR [rbp-0x30]
  40fc3e:	mov    rax,QWORD PTR [rbp-0x48]
  40fc42:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc46:	je     40fc65 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  40fc48:	mov    rax,QWORD PTR [rbp-0x48]
  40fc4c:	movzx  eax,BYTE PTR [rax]
  40fc4f:	cmp    al,0x2f
  40fc51:	jle    40fc65 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  40fc53:	mov    rax,QWORD PTR [rbp-0x48]
  40fc57:	movzx  eax,BYTE PTR [rax]
  40fc5a:	cmp    al,0x39
  40fc5c:	jle    40fbd7 <grisu3_diy_fp_encode_double@@Base+0xce1>
  40fc62:	jmp    40fc65 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  40fc64:	nop
  40fc65:	mov    rax,QWORD PTR [rbp-0x48]
  40fc69:	sub    rax,QWORD PTR [rbp-0x8]
  40fc6d:	add    DWORD PTR [rbp-0x28],eax
  40fc70:	jmp    40fc79 <grisu3_diy_fp_encode_double@@Base+0xd83>
  40fc72:	inc    DWORD PTR [rbp-0x30]
  40fc75:	inc    QWORD PTR [rbp-0x48]
  40fc79:	mov    rax,QWORD PTR [rbp-0x48]
  40fc7d:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc81:	je     40fc8e <grisu3_diy_fp_encode_double@@Base+0xd98>
  40fc83:	mov    rax,QWORD PTR [rbp-0x48]
  40fc87:	movzx  eax,BYTE PTR [rax]
  40fc8a:	cmp    al,0x30
  40fc8c:	je     40fc72 <grisu3_diy_fp_encode_double@@Base+0xd7c>
  40fc8e:	mov    rax,QWORD PTR [rbp-0x48]
  40fc92:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc96:	je     40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fc98:	mov    rax,QWORD PTR [rbp-0x48]
  40fc9c:	movzx  eax,BYTE PTR [rax]
  40fc9f:	cmp    al,0x30
  40fca1:	jle    40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fca3:	mov    rax,QWORD PTR [rbp-0x48]
  40fca7:	movzx  eax,BYTE PTR [rax]
  40fcaa:	cmp    al,0x39
  40fcac:	jg     40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fcae:	mov    DWORD PTR [rbp-0x24],0x1
  40fcb5:	inc    QWORD PTR [rbp-0x48]
  40fcb9:	jmp    40fcbf <grisu3_diy_fp_encode_double@@Base+0xdc9>
  40fcbb:	inc    QWORD PTR [rbp-0x48]
  40fcbf:	mov    rax,QWORD PTR [rbp-0x48]
  40fcc3:	cmp    rax,QWORD PTR [rbp-0x20]
  40fcc7:	je     40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fcc9:	mov    rax,QWORD PTR [rbp-0x48]
  40fccd:	movzx  eax,BYTE PTR [rax]
  40fcd0:	cmp    al,0x2f
  40fcd2:	jle    40fcdf <grisu3_diy_fp_encode_double@@Base+0xde9>
  40fcd4:	mov    rax,QWORD PTR [rbp-0x48]
  40fcd8:	movzx  eax,BYTE PTR [rax]
  40fcdb:	cmp    al,0x39
  40fcdd:	jle    40fcbb <grisu3_diy_fp_encode_double@@Base+0xdc5>
  40fcdf:	mov    eax,DWORD PTR [rbp-0x28]
  40fce2:	add    DWORD PTR [rbp-0x30],eax
  40fce5:	mov    rax,QWORD PTR [rbp-0x48]
  40fce9:	cmp    rax,QWORD PTR [rbp-0x20]
  40fced:	je     40fdf5 <grisu3_diy_fp_encode_double@@Base+0xeff>
  40fcf3:	mov    rax,QWORD PTR [rbp-0x48]
  40fcf7:	movzx  eax,BYTE PTR [rax]
  40fcfa:	or     eax,0x20
  40fcfd:	cmp    al,0x65
  40fcff:	jne    40fdf5 <grisu3_diy_fp_encode_double@@Base+0xeff>
  40fd05:	mov    rax,QWORD PTR [rbp-0x20]
  40fd09:	sub    rax,QWORD PTR [rbp-0x48]
  40fd0d:	cmp    rax,0x1
  40fd11:	jg     40fd1d <grisu3_diy_fp_encode_double@@Base+0xe27>
  40fd13:	mov    eax,0x0
  40fd18:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fd1d:	inc    QWORD PTR [rbp-0x48]
  40fd21:	mov    rax,QWORD PTR [rbp-0x48]
  40fd25:	movzx  eax,BYTE PTR [rax]
  40fd28:	cmp    al,0x2b
  40fd2a:	jne    40fd44 <grisu3_diy_fp_encode_double@@Base+0xe4e>
  40fd2c:	inc    QWORD PTR [rbp-0x48]
  40fd30:	mov    rax,QWORD PTR [rbp-0x48]
  40fd34:	cmp    rax,QWORD PTR [rbp-0x20]
  40fd38:	jne    40fd6e <grisu3_diy_fp_encode_double@@Base+0xe78>
  40fd3a:	mov    eax,0x0
  40fd3f:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fd44:	mov    rax,QWORD PTR [rbp-0x48]
  40fd48:	movzx  eax,BYTE PTR [rax]
  40fd4b:	cmp    al,0x2d
  40fd4d:	jne    40fd6e <grisu3_diy_fp_encode_double@@Base+0xe78>
  40fd4f:	mov    DWORD PTR [rbp-0x34],0x1
  40fd56:	inc    QWORD PTR [rbp-0x48]
  40fd5a:	mov    rax,QWORD PTR [rbp-0x48]
  40fd5e:	cmp    rax,QWORD PTR [rbp-0x20]
  40fd62:	jne    40fd6e <grisu3_diy_fp_encode_double@@Base+0xe78>
  40fd64:	mov    eax,0x0
  40fd69:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fd6e:	mov    rax,QWORD PTR [rbp-0x48]
  40fd72:	movzx  eax,BYTE PTR [rax]
  40fd75:	cmp    al,0x2f
  40fd77:	jle    40fd84 <grisu3_diy_fp_encode_double@@Base+0xe8e>
  40fd79:	mov    rax,QWORD PTR [rbp-0x48]
  40fd7d:	movzx  eax,BYTE PTR [rax]
  40fd80:	cmp    al,0x39
  40fd82:	jle    40fd8e <grisu3_diy_fp_encode_double@@Base+0xe98>
  40fd84:	mov    eax,0x0
  40fd89:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fd8e:	mov    rax,QWORD PTR [rbp-0x48]
  40fd92:	lea    rdx,[rax+0x1]
  40fd96:	mov    QWORD PTR [rbp-0x48],rdx
  40fd9a:	movzx  eax,BYTE PTR [rax]
  40fd9d:	movsx  eax,al
  40fda0:	sub    eax,0x30
  40fda3:	mov    DWORD PTR [rbp-0x2c],eax
  40fda6:	jmp    40fdd5 <grisu3_diy_fp_encode_double@@Base+0xedf>
  40fda8:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  40fdaf:	jg     40fdd1 <grisu3_diy_fp_encode_double@@Base+0xedb>
  40fdb1:	mov    edx,DWORD PTR [rbp-0x2c]
  40fdb4:	mov    eax,edx
  40fdb6:	shl    eax,0x2
  40fdb9:	add    eax,edx
  40fdbb:	add    eax,eax
  40fdbd:	mov    edx,eax
  40fdbf:	mov    rax,QWORD PTR [rbp-0x48]
  40fdc3:	movzx  eax,BYTE PTR [rax]
  40fdc6:	movsx  eax,al
  40fdc9:	add    eax,edx
  40fdcb:	sub    eax,0x30
  40fdce:	mov    DWORD PTR [rbp-0x2c],eax
  40fdd1:	inc    QWORD PTR [rbp-0x48]
  40fdd5:	mov    rax,QWORD PTR [rbp-0x48]
  40fdd9:	cmp    rax,QWORD PTR [rbp-0x20]
  40fddd:	je     40fdf5 <grisu3_diy_fp_encode_double@@Base+0xeff>
  40fddf:	mov    rax,QWORD PTR [rbp-0x48]
  40fde3:	movzx  eax,BYTE PTR [rax]
  40fde6:	cmp    al,0x2f
  40fde8:	jle    40fdf5 <grisu3_diy_fp_encode_double@@Base+0xeff>
  40fdea:	mov    rax,QWORD PTR [rbp-0x48]
  40fdee:	movzx  eax,BYTE PTR [rax]
  40fdf1:	cmp    al,0x39
  40fdf3:	jle    40fda8 <grisu3_diy_fp_encode_double@@Base+0xeb2>
  40fdf5:	cmp    DWORD PTR [rbp-0x34],0x0
  40fdf9:	je     40fe02 <grisu3_diy_fp_encode_double@@Base+0xf0c>
  40fdfb:	mov    eax,DWORD PTR [rbp-0x2c]
  40fdfe:	neg    eax
  40fe00:	jmp    40fe05 <grisu3_diy_fp_encode_double@@Base+0xf0f>
  40fe02:	mov    eax,DWORD PTR [rbp-0x2c]
  40fe05:	add    DWORD PTR [rbp-0x30],eax
  40fe08:	mov    rax,QWORD PTR [rbp-0x48]
  40fe0c:	cmp    rax,QWORD PTR [rbp-0x20]
  40fe10:	jne    40fe19 <grisu3_diy_fp_encode_double@@Base+0xf23>
  40fe12:	mov    eax,0x0
  40fe17:	jmp    40fe43 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  40fe19:	mov    r9d,DWORD PTR [rbp-0x28]
  40fe1d:	mov    r8d,DWORD PTR [rbp-0x30]
  40fe21:	mov    rcx,QWORD PTR [rbp-0x18]
  40fe25:	mov    edx,DWORD PTR [rbp-0x38]
  40fe28:	mov    rsi,QWORD PTR [rbp-0x48]
  40fe2c:	mov    rax,QWORD PTR [rbp-0x10]
  40fe30:	push   QWORD PTR [rbp-0x58]
  40fe33:	mov    edi,DWORD PTR [rbp-0x24]
  40fe36:	push   rdi
  40fe37:	mov    rdi,rax
  40fe3a:	call   40f287 <grisu3_diy_fp_encode_double@@Base+0x391>
  40fe3f:	add    rsp,0x10
  40fe43:	leave  
  40fe44:	ret    
  40fe45:	push   rbp
  40fe46:	mov    rbp,rsp
  40fe49:	sub    rsp,0x20
  40fe4d:	mov    QWORD PTR [rbp-0x8],rdi
  40fe51:	mov    DWORD PTR [rbp-0xc],esi
  40fe54:	mov    QWORD PTR [rbp-0x18],rdx
  40fe58:	mov    rdx,QWORD PTR [rbp-0x18]
  40fe5c:	mov    ecx,DWORD PTR [rbp-0xc]
  40fe5f:	mov    rax,QWORD PTR [rbp-0x8]
  40fe63:	mov    esi,ecx
  40fe65:	mov    rdi,rax
  40fe68:	call   40f8fe <grisu3_diy_fp_encode_double@@Base+0xa08>
  40fe6d:	leave  
  40fe6e:	ret    
  40fe6f:	push   rbp
  40fe70:	mov    rbp,rsp
  40fe73:	sub    rsp,0x40
  40fe77:	mov    QWORD PTR [rbp-0x28],rdi
  40fe7b:	mov    DWORD PTR [rbp-0x2c],esi
  40fe7e:	mov    QWORD PTR [rbp-0x38],rdx
  40fe82:	mov    rax,QWORD PTR fs:0x28
  40fe8b:	mov    QWORD PTR [rbp-0x8],rax
  40fe8f:	xor    eax,eax
  40fe91:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  40fe98:	lea    rdx,[rbp-0x18]
  40fe9c:	mov    ecx,DWORD PTR [rbp-0x2c]
  40fe9f:	mov    rax,QWORD PTR [rbp-0x28]
  40fea3:	mov    esi,ecx
  40fea5:	mov    rdi,rax
  40fea8:	call   40fe45 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  40fead:	mov    QWORD PTR [rbp-0x10],rax
  40feb1:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40feb6:	vcvtsd2ss xmm0,xmm0,xmm0
  40feba:	mov    rax,QWORD PTR [rbp-0x38]
  40febe:	vmovss DWORD PTR [rax],xmm0
  40fec2:	mov    rax,QWORD PTR [rbp-0x38]
  40fec6:	vmovss xmm1,DWORD PTR [rax]
  40feca:	vmovss xmm0,DWORD PTR [rip+0x661e]        # 4164f0 <flatcc_builder_padding_base@@Base+0x2150>
  40fed2:	vandps xmm0,xmm0,xmm1
  40fed6:	vucomiss xmm0,DWORD PTR [rip+0x6622]        # 416500 <flatcc_builder_padding_base@@Base+0x2160>
  40fede:	setbe  al
  40fee1:	xor    eax,0x1
  40fee4:	test   al,al
  40fee6:	je     40feef <grisu3_diy_fp_encode_double@@Base+0xff9>
  40fee8:	mov    eax,0x1
  40feed:	jmp    40fef4 <grisu3_diy_fp_encode_double@@Base+0xffe>
  40feef:	mov    eax,0x0
  40fef4:	test   al,al
  40fef6:	je     40ff2d <grisu3_diy_fp_encode_double@@Base+0x1037>
  40fef8:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  40fefd:	vxorpd xmm0,xmm0,xmm0
  40ff01:	vcomisd xmm0,xmm1
  40ff05:	jbe    40ff1a <grisu3_diy_fp_encode_double@@Base+0x1024>
  40ff07:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  40ff0c:	vmovss xmm0,DWORD PTR [rip+0x64fc]        # 416410 <flatcc_builder_padding_base@@Base+0x2070>
  40ff14:	vxorps xmm0,xmm0,xmm1
  40ff18:	jmp    40ff1f <grisu3_diy_fp_encode_double@@Base+0x1029>
  40ff1a:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  40ff1f:	mov    rax,QWORD PTR [rbp-0x38]
  40ff23:	vmovss DWORD PTR [rax],xmm0
  40ff27:	mov    rax,QWORD PTR [rbp-0x28]
  40ff2b:	jmp    40ff31 <grisu3_diy_fp_encode_double@@Base+0x103b>
  40ff2d:	mov    rax,QWORD PTR [rbp-0x10]
  40ff31:	mov    rcx,QWORD PTR [rbp-0x8]
  40ff35:	xor    rcx,QWORD PTR fs:0x28
  40ff3e:	je     40ff45 <grisu3_diy_fp_encode_double@@Base+0x104f>
  40ff40:	call   403140 <__stack_chk_fail@plt>
  40ff45:	leave  
  40ff46:	ret    
  40ff47:	endbr64 
  40ff4b:	push   rbp
  40ff4c:	mov    rbp,rsp
  40ff4f:	mov    DWORD PTR [rbp-0x4],edi
  40ff52:	cmp    DWORD PTR [rbp-0x4],0x5
  40ff56:	ja     40ffb3 <grisu3_diy_fp_encode_double@@Base+0x10bd>
  40ff58:	mov    eax,DWORD PTR [rbp-0x4]
  40ff5b:	lea    rdx,[rax*4+0x0]
  40ff63:	lea    rax,[rip+0x5a12]        # 41597c <flatcc_builder_padding_base@@Base+0x15dc>
  40ff6a:	mov    eax,DWORD PTR [rdx+rax*1]
  40ff6d:	movsxd rdx,eax
  40ff70:	lea    rax,[rip+0x5a05]        # 41597c <flatcc_builder_padding_base@@Base+0x15dc>
  40ff77:	add    rax,rdx
  40ff7a:	notrack jmp rax
  40ff7d:	lea    rax,[rip+0x598c]        # 415910 <flatcc_builder_padding_base@@Base+0x1570>
  40ff84:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ff86:	lea    rax,[rip+0x5986]        # 415913 <flatcc_builder_padding_base@@Base+0x1573>
  40ff8d:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ff8f:	lea    rax,[rip+0x598e]        # 415924 <flatcc_builder_padding_base@@Base+0x1584>
  40ff96:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ff98:	lea    rax,[rip+0x5992]        # 415931 <flatcc_builder_padding_base@@Base+0x1591>
  40ff9f:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ffa1:	lea    rax,[rip+0x599a]        # 415942 <flatcc_builder_padding_base@@Base+0x15a2>
  40ffa8:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ffaa:	lea    rax,[rip+0x59a5]        # 415956 <flatcc_builder_padding_base@@Base+0x15b6>
  40ffb1:	jmp    40ffba <grisu3_diy_fp_encode_double@@Base+0x10c4>
  40ffb3:	lea    rax,[rip+0x59b1]        # 41596b <flatcc_builder_padding_base@@Base+0x15cb>
  40ffba:	pop    rbp
  40ffbb:	ret    
  40ffbc:	endbr64 
  40ffc0:	push   rbp
  40ffc1:	mov    rbp,rsp
  40ffc4:	mov    QWORD PTR [rbp-0x28],rdi
  40ffc8:	mov    DWORD PTR [rbp-0x2c],esi
  40ffcb:	mov    rcx,QWORD PTR [rbp-0x28]
  40ffcf:	movabs rdx,0xaaaaaaaaaaaaaaab
  40ffd9:	mov    rax,rcx
  40ffdc:	mul    rdx
  40ffdf:	shr    rdx,1
  40ffe2:	mov    rax,rdx
  40ffe5:	add    rax,rax
  40ffe8:	add    rax,rdx
  40ffeb:	sub    rcx,rax
  40ffee:	mov    rax,rcx
  40fff1:	mov    QWORD PTR [rbp-0x8],rax
  40fff5:	mov    rax,QWORD PTR [rbp-0x28]
  40fff9:	shl    rax,0x2
  40fffd:	movabs rdx,0xaaaaaaaaaaaaaaab
  410007:	mul    rdx
  41000a:	mov    rax,rdx
  41000d:	shr    rax,1
  410010:	add    rax,0x3
  410014:	and    rax,0xfffffffffffffffc
  410018:	mov    QWORD PTR [rbp-0x10],rax
  41001c:	mov    eax,DWORD PTR [rbp-0x2c]
  41001f:	and    eax,0x80
  410024:	mov    DWORD PTR [rbp-0x14],eax
  410027:	cmp    DWORD PTR [rbp-0x14],0x0
  41002b:	jne    410048 <grisu3_diy_fp_encode_double@@Base+0x1152>
  41002d:	cmp    QWORD PTR [rbp-0x8],0x1
  410032:	je     410041 <grisu3_diy_fp_encode_double@@Base+0x114b>
  410034:	cmp    QWORD PTR [rbp-0x8],0x2
  410039:	jne    41004b <grisu3_diy_fp_encode_double@@Base+0x1155>
  41003b:	dec    QWORD PTR [rbp-0x10]
  41003f:	jmp    41004c <grisu3_diy_fp_encode_double@@Base+0x1156>
  410041:	sub    QWORD PTR [rbp-0x10],0x2
  410046:	jmp    41004c <grisu3_diy_fp_encode_double@@Base+0x1156>
  410048:	nop
  410049:	jmp    41004c <grisu3_diy_fp_encode_double@@Base+0x1156>
  41004b:	nop
  41004c:	mov    rax,QWORD PTR [rbp-0x10]
  410050:	pop    rbp
  410051:	ret    
  410052:	endbr64 
  410056:	push   rbp
  410057:	mov    rbp,rsp
  41005a:	mov    QWORD PTR [rbp-0x18],rdi
  41005e:	mov    rax,QWORD PTR [rbp-0x18]
  410062:	and    eax,0x3
  410065:	mov    QWORD PTR [rbp-0x10],rax
  410069:	mov    rax,QWORD PTR [rbp-0x18]
  41006d:	shr    rax,0x2
  410071:	mov    rdx,rax
  410074:	mov    rax,rdx
  410077:	add    rax,rax
  41007a:	add    rax,rdx
  41007d:	mov    QWORD PTR [rbp-0x8],rax
  410081:	cmp    QWORD PTR [rbp-0x10],0x2
  410086:	je     410099 <grisu3_diy_fp_encode_double@@Base+0x11a3>
  410088:	cmp    QWORD PTR [rbp-0x10],0x3
  41008d:	jne    4100a2 <grisu3_diy_fp_encode_double@@Base+0x11ac>
  41008f:	mov    rax,QWORD PTR [rbp-0x8]
  410093:	add    rax,0x2
  410097:	jmp    4100a6 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  410099:	mov    rax,QWORD PTR [rbp-0x8]
  41009d:	inc    rax
  4100a0:	jmp    4100a6 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  4100a2:	mov    rax,QWORD PTR [rbp-0x8]
  4100a6:	pop    rbp
  4100a7:	ret    
  4100a8:	endbr64 
  4100ac:	push   rbp
  4100ad:	mov    rbp,rsp
  4100b0:	mov    QWORD PTR [rbp-0x38],rdi
  4100b4:	mov    QWORD PTR [rbp-0x40],rsi
  4100b8:	mov    QWORD PTR [rbp-0x48],rdx
  4100bc:	mov    QWORD PTR [rbp-0x50],rcx
  4100c0:	mov    DWORD PTR [rbp-0x54],r8d
  4100c4:	lea    rax,[rip+0x58cd]        # 415998 <flatcc_builder_padding_base@@Base+0x15f8>
  4100cb:	mov    QWORD PTR [rbp-0x18],rax
  4100cf:	lea    rax,[rip+0x590a]        # 4159e0 <flatcc_builder_padding_base@@Base+0x1640>
  4100d6:	mov    QWORD PTR [rbp-0x10],rax
  4100da:	mov    rax,QWORD PTR [rbp-0x38]
  4100de:	mov    QWORD PTR [rbp-0x8],rax
  4100e2:	mov    eax,DWORD PTR [rbp-0x54]
  4100e5:	and    eax,0x80
  4100ea:	mov    DWORD PTR [rbp-0x2c],eax
  4100ed:	mov    QWORD PTR [rbp-0x20],0x0
  4100f5:	mov    DWORD PTR [rbp-0x30],0x3
  4100fc:	cmp    QWORD PTR [rbp-0x50],0x0
  410101:	jne    41010f <grisu3_diy_fp_encode_double@@Base+0x1219>
  410103:	mov    DWORD PTR [rbp-0x30],0x2
  41010a:	jmp    410367 <grisu3_diy_fp_encode_double@@Base+0x1471>
  41010f:	mov    rax,QWORD PTR [rbp-0x50]
  410113:	mov    rax,QWORD PTR [rax]
  410116:	mov    QWORD PTR [rbp-0x20],rax
  41011a:	and    DWORD PTR [rbp-0x54],0xffffff1f
  410121:	cmp    DWORD PTR [rbp-0x54],0x0
  410125:	je     410132 <grisu3_diy_fp_encode_double@@Base+0x123c>
  410127:	cmp    DWORD PTR [rbp-0x54],0x1
  41012b:	je     41013c <grisu3_diy_fp_encode_double@@Base+0x1246>
  41012d:	jmp    410367 <grisu3_diy_fp_encode_double@@Base+0x1471>
  410132:	mov    rax,QWORD PTR [rbp-0x18]
  410136:	mov    QWORD PTR [rbp-0x28],rax
  41013a:	jmp    410145 <grisu3_diy_fp_encode_double@@Base+0x124f>
  41013c:	mov    rax,QWORD PTR [rbp-0x10]
  410140:	mov    QWORD PTR [rbp-0x28],rax
  410144:	nop
  410145:	mov    DWORD PTR [rbp-0x30],0x0
  41014c:	jmp    41021e <grisu3_diy_fp_encode_double@@Base+0x1328>
  410151:	mov    rax,QWORD PTR [rbp-0x40]
  410155:	movzx  eax,BYTE PTR [rax]
  410158:	shr    al,0x2
  41015b:	movzx  edx,al
  41015e:	mov    rax,QWORD PTR [rbp-0x28]
  410162:	add    rax,rdx
  410165:	movzx  eax,BYTE PTR [rax]
  410168:	mov    rdx,QWORD PTR [rbp-0x38]
  41016c:	mov    BYTE PTR [rdx],al
  41016e:	mov    rax,QWORD PTR [rbp-0x40]
  410172:	movzx  eax,BYTE PTR [rax]
  410175:	movzx  eax,al
  410178:	shl    eax,0x4
  41017b:	and    eax,0x30
  41017e:	mov    edx,eax
  410180:	mov    rax,QWORD PTR [rbp-0x40]
  410184:	inc    rax
  410187:	movzx  eax,BYTE PTR [rax]
  41018a:	shr    al,0x4
  41018d:	movzx  eax,al
  410190:	or     eax,edx
  410192:	movsxd rdx,eax
  410195:	mov    rax,QWORD PTR [rbp-0x28]
  410199:	add    rax,rdx
  41019c:	mov    rdx,QWORD PTR [rbp-0x38]
  4101a0:	inc    rdx
  4101a3:	movzx  eax,BYTE PTR [rax]
  4101a6:	mov    BYTE PTR [rdx],al
  4101a8:	mov    rax,QWORD PTR [rbp-0x40]
  4101ac:	inc    rax
  4101af:	movzx  eax,BYTE PTR [rax]
  4101b2:	movzx  eax,al
  4101b5:	shl    eax,0x2
  4101b8:	and    eax,0x3c
  4101bb:	mov    edx,eax
  4101bd:	mov    rax,QWORD PTR [rbp-0x40]
  4101c1:	add    rax,0x2
  4101c5:	movzx  eax,BYTE PTR [rax]
  4101c8:	shr    al,0x6
  4101cb:	movzx  eax,al
  4101ce:	or     eax,edx
  4101d0:	movsxd rdx,eax
  4101d3:	mov    rax,QWORD PTR [rbp-0x28]
  4101d7:	add    rax,rdx
  4101da:	mov    rdx,QWORD PTR [rbp-0x38]
  4101de:	add    rdx,0x2
  4101e2:	movzx  eax,BYTE PTR [rax]
  4101e5:	mov    BYTE PTR [rdx],al
  4101e7:	mov    rax,QWORD PTR [rbp-0x40]
  4101eb:	add    rax,0x2
  4101ef:	movzx  eax,BYTE PTR [rax]
  4101f2:	movzx  eax,al
  4101f5:	and    eax,0x3f
  4101f8:	mov    rdx,rax
  4101fb:	mov    rax,QWORD PTR [rbp-0x28]
  4101ff:	add    rax,rdx
  410202:	mov    rdx,QWORD PTR [rbp-0x38]
  410206:	add    rdx,0x3
  41020a:	movzx  eax,BYTE PTR [rax]
  41020d:	mov    BYTE PTR [rdx],al
  41020f:	sub    QWORD PTR [rbp-0x20],0x3
  410214:	add    QWORD PTR [rbp-0x38],0x4
  410219:	add    QWORD PTR [rbp-0x40],0x3
  41021e:	cmp    QWORD PTR [rbp-0x20],0x2
  410223:	ja     410151 <grisu3_diy_fp_encode_double@@Base+0x125b>
  410229:	cmp    QWORD PTR [rbp-0x20],0x1
  41022e:	je     4102e2 <grisu3_diy_fp_encode_double@@Base+0x13ec>
  410234:	cmp    QWORD PTR [rbp-0x20],0x2
  410239:	jne    410352 <grisu3_diy_fp_encode_double@@Base+0x145c>
  41023f:	mov    rax,QWORD PTR [rbp-0x40]
  410243:	movzx  eax,BYTE PTR [rax]
  410246:	shr    al,0x2
  410249:	movzx  edx,al
  41024c:	mov    rax,QWORD PTR [rbp-0x28]
  410250:	add    rax,rdx
  410253:	movzx  eax,BYTE PTR [rax]
  410256:	mov    rdx,QWORD PTR [rbp-0x38]
  41025a:	mov    BYTE PTR [rdx],al
  41025c:	mov    rax,QWORD PTR [rbp-0x40]
  410260:	movzx  eax,BYTE PTR [rax]
  410263:	movzx  eax,al
  410266:	shl    eax,0x4
  410269:	and    eax,0x30
  41026c:	mov    edx,eax
  41026e:	mov    rax,QWORD PTR [rbp-0x40]
  410272:	inc    rax
  410275:	movzx  eax,BYTE PTR [rax]
  410278:	shr    al,0x4
  41027b:	movzx  eax,al
  41027e:	or     eax,edx
  410280:	movsxd rdx,eax
  410283:	mov    rax,QWORD PTR [rbp-0x28]
  410287:	add    rax,rdx
  41028a:	mov    rdx,QWORD PTR [rbp-0x38]
  41028e:	inc    rdx
  410291:	movzx  eax,BYTE PTR [rax]
  410294:	mov    BYTE PTR [rdx],al
  410296:	mov    rax,QWORD PTR [rbp-0x40]
  41029a:	inc    rax
  41029d:	movzx  eax,BYTE PTR [rax]
  4102a0:	movzx  eax,al
  4102a3:	shl    eax,0x2
  4102a6:	cdqe   
  4102a8:	and    eax,0x3c
  4102ab:	mov    rdx,rax
  4102ae:	mov    rax,QWORD PTR [rbp-0x28]
  4102b2:	add    rax,rdx
  4102b5:	mov    rdx,QWORD PTR [rbp-0x38]
  4102b9:	add    rdx,0x2
  4102bd:	movzx  eax,BYTE PTR [rax]
  4102c0:	mov    BYTE PTR [rdx],al
  4102c2:	add    QWORD PTR [rbp-0x38],0x3
  4102c7:	cmp    DWORD PTR [rbp-0x2c],0x0
  4102cb:	je     41035b <grisu3_diy_fp_encode_double@@Base+0x1465>
  4102d1:	mov    rax,QWORD PTR [rbp-0x38]
  4102d5:	lea    rdx,[rax+0x1]
  4102d9:	mov    QWORD PTR [rbp-0x38],rdx
  4102dd:	mov    BYTE PTR [rax],0x3d
  4102e0:	jmp    41035b <grisu3_diy_fp_encode_double@@Base+0x1465>
  4102e2:	mov    rax,QWORD PTR [rbp-0x40]
  4102e6:	movzx  eax,BYTE PTR [rax]
  4102e9:	shr    al,0x2
  4102ec:	movzx  edx,al
  4102ef:	mov    rax,QWORD PTR [rbp-0x28]
  4102f3:	add    rax,rdx
  4102f6:	movzx  eax,BYTE PTR [rax]
  4102f9:	mov    rdx,QWORD PTR [rbp-0x38]
  4102fd:	mov    BYTE PTR [rdx],al
  4102ff:	mov    rax,QWORD PTR [rbp-0x40]
  410303:	movzx  eax,BYTE PTR [rax]
  410306:	movzx  eax,al
  410309:	shl    eax,0x4
  41030c:	cdqe   
  41030e:	and    eax,0x30
  410311:	mov    rdx,rax
  410314:	mov    rax,QWORD PTR [rbp-0x28]
  410318:	add    rax,rdx
  41031b:	mov    rdx,QWORD PTR [rbp-0x38]
  41031f:	inc    rdx
  410322:	movzx  eax,BYTE PTR [rax]
  410325:	mov    BYTE PTR [rdx],al
  410327:	add    QWORD PTR [rbp-0x38],0x2
  41032c:	cmp    DWORD PTR [rbp-0x2c],0x0
  410330:	je     41035e <grisu3_diy_fp_encode_double@@Base+0x1468>
  410332:	mov    rax,QWORD PTR [rbp-0x38]
  410336:	lea    rdx,[rax+0x1]
  41033a:	mov    QWORD PTR [rbp-0x38],rdx
  41033e:	mov    BYTE PTR [rax],0x3d
  410341:	mov    rax,QWORD PTR [rbp-0x38]
  410345:	lea    rdx,[rax+0x1]
  410349:	mov    QWORD PTR [rbp-0x38],rdx
  41034d:	mov    BYTE PTR [rax],0x3d
  410350:	jmp    41035e <grisu3_diy_fp_encode_double@@Base+0x1468>
  410352:	mov    DWORD PTR [rbp-0x2c],0x0
  410359:	jmp    41035f <grisu3_diy_fp_encode_double@@Base+0x1469>
  41035b:	nop
  41035c:	jmp    41035f <grisu3_diy_fp_encode_double@@Base+0x1469>
  41035e:	nop
  41035f:	mov    QWORD PTR [rbp-0x20],0x0
  410367:	cmp    QWORD PTR [rbp-0x48],0x0
  41036c:	je     410380 <grisu3_diy_fp_encode_double@@Base+0x148a>
  41036e:	mov    rax,QWORD PTR [rbp-0x38]
  410372:	sub    rax,QWORD PTR [rbp-0x8]
  410376:	mov    rdx,rax
  410379:	mov    rax,QWORD PTR [rbp-0x48]
  41037d:	mov    QWORD PTR [rax],rdx
  410380:	cmp    QWORD PTR [rbp-0x50],0x0
  410385:	je     41039c <grisu3_diy_fp_encode_double@@Base+0x14a6>
  410387:	mov    rax,QWORD PTR [rbp-0x50]
  41038b:	mov    rax,QWORD PTR [rax]
  41038e:	sub    rax,QWORD PTR [rbp-0x20]
  410392:	mov    rdx,rax
  410395:	mov    rax,QWORD PTR [rbp-0x50]
  410399:	mov    QWORD PTR [rax],rdx
  41039c:	mov    eax,DWORD PTR [rbp-0x30]
  41039f:	pop    rbp
  4103a0:	ret    
  4103a1:	endbr64 
  4103a5:	push   rbp
  4103a6:	mov    rbp,rsp
  4103a9:	add    rsp,0xffffffffffffff80
  4103ad:	mov    QWORD PTR [rbp-0x58],rdi
  4103b1:	mov    QWORD PTR [rbp-0x60],rsi
  4103b5:	mov    QWORD PTR [rbp-0x68],rdx
  4103b9:	mov    QWORD PTR [rbp-0x70],rcx
  4103bd:	mov    DWORD PTR [rbp-0x74],r8d
  4103c1:	mov    rax,QWORD PTR fs:0x28
  4103ca:	mov    QWORD PTR [rbp-0x8],rax
  4103ce:	xor    eax,eax
  4103d0:	mov    DWORD PTR [rbp-0x50],0x0
  4103d7:	mov    rax,QWORD PTR [rbp-0x58]
  4103db:	mov    QWORD PTR [rbp-0x18],rax
  4103df:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  4103e7:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  4103ef:	lea    rax,[rip+0x5baa]        # 415fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  4103f6:	mov    QWORD PTR [rbp-0x20],rax
  4103fa:	mov    eax,DWORD PTR [rbp-0x74]
  4103fd:	and    eax,0x20
  410400:	mov    DWORD PTR [rbp-0x4c],eax
  410403:	cmp    QWORD PTR [rbp-0x70],0x0
  410408:	je     410415 <grisu3_diy_fp_encode_double@@Base+0x151f>
  41040a:	mov    rax,QWORD PTR [rbp-0x70]
  41040e:	mov    rax,QWORD PTR [rax]
  410411:	mov    QWORD PTR [rbp-0x30],rax
  410415:	mov    rax,QWORD PTR [rbp-0x30]
  410419:	mov    QWORD PTR [rbp-0x28],rax
  41041d:	and    DWORD PTR [rbp-0x74],0xffffff1f
  410424:	cmp    DWORD PTR [rbp-0x74],0x0
  410428:	je     410432 <grisu3_diy_fp_encode_double@@Base+0x153c>
  41042a:	cmp    DWORD PTR [rbp-0x74],0x1
  41042e:	je     41044e <grisu3_diy_fp_encode_double@@Base+0x1558>
  410430:	jmp    41046a <grisu3_diy_fp_encode_double@@Base+0x1574>
  410432:	cmp    DWORD PTR [rbp-0x4c],0x0
  410436:	je     410441 <grisu3_diy_fp_encode_double@@Base+0x154b>
  410438:	lea    rax,[rip+0x5c61]        # 4160a0 <flatcc_builder_padding_base@@Base+0x1d00>
  41043f:	jmp    410448 <grisu3_diy_fp_encode_double@@Base+0x1552>
  410441:	lea    rax,[rip+0x5b58]        # 415fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  410448:	mov    QWORD PTR [rbp-0x20],rax
  41044c:	jmp    410476 <grisu3_diy_fp_encode_double@@Base+0x1580>
  41044e:	cmp    DWORD PTR [rbp-0x4c],0x0
  410452:	je     41045d <grisu3_diy_fp_encode_double@@Base+0x1567>
  410454:	lea    rax,[rip+0x5d45]        # 4161a0 <flatcc_builder_padding_base@@Base+0x1e00>
  41045b:	jmp    410464 <grisu3_diy_fp_encode_double@@Base+0x156e>
  41045d:	lea    rax,[rip+0x5e3c]        # 4162a0 <flatcc_builder_padding_base@@Base+0x1f00>
  410464:	mov    QWORD PTR [rbp-0x20],rax
  410468:	jmp    410476 <grisu3_diy_fp_encode_double@@Base+0x1580>
  41046a:	mov    DWORD PTR [rbp-0x50],0x3
  410471:	jmp    410676 <grisu3_diy_fp_encode_double@@Base+0x1780>
  410476:	cmp    QWORD PTR [rbp-0x68],0x0
  41047b:	je     41066a <grisu3_diy_fp_encode_double@@Base+0x1774>
  410481:	mov    rax,QWORD PTR [rbp-0x68]
  410485:	mov    rax,QWORD PTR [rax]
  410488:	test   rax,rax
  41048b:	je     41066a <grisu3_diy_fp_encode_double@@Base+0x1774>
  410491:	mov    rax,QWORD PTR [rbp-0x68]
  410495:	mov    rax,QWORD PTR [rax]
  410498:	mov    QWORD PTR [rbp-0x38],rax
  41049c:	jmp    41066a <grisu3_diy_fp_encode_double@@Base+0x1774>
  4104a1:	mov    QWORD PTR [rbp-0x48],0x0
  4104a9:	jmp    4105d8 <grisu3_diy_fp_encode_double@@Base+0x16e2>
  4104ae:	mov    rax,QWORD PTR [rbp-0x30]
  4104b2:	cmp    rax,QWORD PTR [rbp-0x48]
  4104b6:	jne    4104cd <grisu3_diy_fp_encode_double@@Base+0x15d7>
  4104b8:	mov    rax,QWORD PTR [rbp-0x48]
  4104bc:	mov    QWORD PTR [rbp-0x40],rax
  4104c0:	mov    rax,QWORD PTR [rbp-0x48]
  4104c4:	sub    QWORD PTR [rbp-0x30],rax
  4104c8:	jmp    4106c6 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  4104cd:	mov    rdx,QWORD PTR [rbp-0x60]
  4104d1:	mov    rax,QWORD PTR [rbp-0x48]
  4104d5:	add    rax,rdx
  4104d8:	movzx  eax,BYTE PTR [rax]
  4104db:	movzx  edx,al
  4104de:	mov    rax,QWORD PTR [rbp-0x20]
  4104e2:	add    rax,rdx
  4104e5:	movzx  eax,BYTE PTR [rax]
  4104e8:	lea    rcx,[rbp-0xc]
  4104ec:	mov    rdx,QWORD PTR [rbp-0x48]
  4104f0:	add    rdx,rcx
  4104f3:	mov    BYTE PTR [rdx],al
  4104f5:	lea    rdx,[rbp-0xc]
  4104f9:	mov    rax,QWORD PTR [rbp-0x48]
  4104fd:	add    rax,rdx
  410500:	movzx  edx,BYTE PTR [rax]
  410503:	movzx  eax,BYTE PTR [rip+0x5e96]        # 4163a0 <flatcc_builder_padding_base@@Base+0x2000>
  41050a:	cmp    dl,al
  41050c:	jb     4105d4 <grisu3_diy_fp_encode_double@@Base+0x16de>
  410512:	lea    rdx,[rbp-0xc]
  410516:	mov    rax,QWORD PTR [rbp-0x48]
  41051a:	add    rax,rdx
  41051d:	movzx  edx,BYTE PTR [rax]
  410520:	movzx  eax,BYTE PTR [rip+0x5e7a]        # 4163a1 <flatcc_builder_padding_base@@Base+0x2001>
  410527:	cmp    dl,al
  410529:	jne    41053c <grisu3_diy_fp_encode_double@@Base+0x1646>
  41052b:	inc    QWORD PTR [rbp-0x60]
  41052f:	dec    QWORD PTR [rbp-0x30]
  410533:	dec    QWORD PTR [rbp-0x48]
  410537:	jmp    4105d4 <grisu3_diy_fp_encode_double@@Base+0x16de>
  41053c:	mov    rax,QWORD PTR [rbp-0x48]
  410540:	mov    QWORD PTR [rbp-0x40],rax
  410544:	lea    rdx,[rbp-0xc]
  410548:	mov    rax,QWORD PTR [rbp-0x48]
  41054c:	add    rax,rdx
  41054f:	movzx  edx,BYTE PTR [rax]
  410552:	movzx  eax,BYTE PTR [rip+0x5e49]        # 4163a2 <flatcc_builder_padding_base@@Base+0x2002>
  410559:	cmp    dl,al
  41055b:	jne    4105c7 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  41055d:	inc    QWORD PTR [rbp-0x48]
  410561:	jmp    4105b3 <grisu3_diy_fp_encode_double@@Base+0x16bd>
  410563:	mov    rdx,QWORD PTR [rbp-0x60]
  410567:	mov    rax,QWORD PTR [rbp-0x48]
  41056b:	add    rax,rdx
  41056e:	movzx  eax,BYTE PTR [rax]
  410571:	movzx  edx,al
  410574:	mov    rax,QWORD PTR [rbp-0x20]
  410578:	add    rax,rdx
  41057b:	movzx  edx,BYTE PTR [rax]
  41057e:	movzx  eax,BYTE PTR [rip+0x5e1d]        # 4163a2 <flatcc_builder_padding_base@@Base+0x2002>
  410585:	cmp    dl,al
  410587:	je     4105af <grisu3_diy_fp_encode_double@@Base+0x16b9>
  410589:	mov    rdx,QWORD PTR [rbp-0x60]
  41058d:	mov    rax,QWORD PTR [rbp-0x48]
  410591:	add    rax,rdx
  410594:	movzx  eax,BYTE PTR [rax]
  410597:	movzx  edx,al
  41059a:	mov    rax,QWORD PTR [rbp-0x20]
  41059e:	add    rax,rdx
  4105a1:	movzx  edx,BYTE PTR [rax]
  4105a4:	movzx  eax,BYTE PTR [rip+0x5df6]        # 4163a1 <flatcc_builder_padding_base@@Base+0x2001>
  4105ab:	cmp    dl,al
  4105ad:	jne    4105c6 <grisu3_diy_fp_encode_double@@Base+0x16d0>
  4105af:	inc    QWORD PTR [rbp-0x48]
  4105b3:	mov    rax,QWORD PTR [rbp-0x48]
  4105b7:	cmp    rax,QWORD PTR [rbp-0x30]
  4105bb:	jae    4105c7 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  4105bd:	cmp    QWORD PTR [rbp-0x48],0x7
  4105c2:	jbe    410563 <grisu3_diy_fp_encode_double@@Base+0x166d>
  4105c4:	jmp    4105c7 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  4105c6:	nop
  4105c7:	mov    rax,QWORD PTR [rbp-0x48]
  4105cb:	sub    QWORD PTR [rbp-0x30],rax
  4105cf:	jmp    4106c6 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  4105d4:	inc    QWORD PTR [rbp-0x48]
  4105d8:	cmp    QWORD PTR [rbp-0x48],0x3
  4105dd:	jbe    4104ae <grisu3_diy_fp_encode_double@@Base+0x15b8>
  4105e3:	cmp    QWORD PTR [rbp-0x38],0x2
  4105e8:	jbe    4107af <grisu3_diy_fp_encode_double@@Base+0x18b9>
  4105ee:	movzx  eax,BYTE PTR [rbp-0xc]
  4105f2:	movzx  eax,al
  4105f5:	shl    eax,0x2
  4105f8:	mov    edx,eax
  4105fa:	movzx  eax,BYTE PTR [rbp-0xb]
  4105fe:	shr    al,0x4
  410601:	or     eax,edx
  410603:	mov    edx,eax
  410605:	mov    rax,QWORD PTR [rbp-0x58]
  410609:	mov    BYTE PTR [rax],dl
  41060b:	movzx  eax,BYTE PTR [rbp-0xb]
  41060f:	movzx  eax,al
  410612:	shl    eax,0x4
  410615:	mov    edx,eax
  410617:	movzx  eax,BYTE PTR [rbp-0xa]
  41061b:	shr    al,0x2
  41061e:	mov    ecx,edx
  410620:	or     ecx,eax
  410622:	mov    rax,QWORD PTR [rbp-0x58]
  410626:	lea    rdx,[rax+0x1]
  41062a:	mov    eax,ecx
  41062c:	mov    BYTE PTR [rdx],al
  41062e:	movzx  eax,BYTE PTR [rbp-0xa]
  410632:	movzx  eax,al
  410635:	shl    eax,0x6
  410638:	mov    edx,eax
  41063a:	movzx  eax,BYTE PTR [rbp-0x9]
  41063e:	mov    ecx,edx
  410640:	or     ecx,eax
  410642:	mov    rax,QWORD PTR [rbp-0x58]
  410646:	lea    rdx,[rax+0x2]
  41064a:	mov    eax,ecx
  41064c:	mov    BYTE PTR [rdx],al
  41064e:	add    QWORD PTR [rbp-0x58],0x3
  410653:	add    QWORD PTR [rbp-0x60],0x4
  410658:	sub    QWORD PTR [rbp-0x38],0x3
  41065d:	sub    QWORD PTR [rbp-0x30],0x4
  410662:	mov    rax,QWORD PTR [rbp-0x30]
  410666:	mov    QWORD PTR [rbp-0x28],rax
  41066a:	cmp    QWORD PTR [rbp-0x38],0x0
  41066f:	jne    4104a1 <grisu3_diy_fp_encode_double@@Base+0x15ab>
  410675:	nop
  410676:	cmp    QWORD PTR [rbp-0x68],0x0
  41067b:	je     41068f <grisu3_diy_fp_encode_double@@Base+0x1799>
  41067d:	mov    rax,QWORD PTR [rbp-0x58]
  410681:	sub    rax,QWORD PTR [rbp-0x18]
  410685:	mov    rdx,rax
  410688:	mov    rax,QWORD PTR [rbp-0x68]
  41068c:	mov    QWORD PTR [rax],rdx
  41068f:	cmp    QWORD PTR [rbp-0x70],0x0
  410694:	je     4106ab <grisu3_diy_fp_encode_double@@Base+0x17b5>
  410696:	mov    rax,QWORD PTR [rbp-0x70]
  41069a:	mov    rax,QWORD PTR [rax]
  41069d:	sub    rax,QWORD PTR [rbp-0x28]
  4106a1:	mov    rdx,rax
  4106a4:	mov    rax,QWORD PTR [rbp-0x70]
  4106a8:	mov    QWORD PTR [rax],rdx
  4106ab:	mov    eax,DWORD PTR [rbp-0x50]
  4106ae:	mov    rsi,QWORD PTR [rbp-0x8]
  4106b2:	xor    rsi,QWORD PTR fs:0x28
  4106bb:	je     4107c7 <grisu3_diy_fp_encode_double@@Base+0x18d1>
  4106c1:	jmp    4107c2 <grisu3_diy_fp_encode_double@@Base+0x18cc>
  4106c6:	cmp    QWORD PTR [rbp-0x40],0x2
  4106cb:	je     4106e4 <grisu3_diy_fp_encode_double@@Base+0x17ee>
  4106cd:	cmp    QWORD PTR [rbp-0x40],0x3
  4106d2:	je     410727 <grisu3_diy_fp_encode_double@@Base+0x1831>
  4106d4:	cmp    QWORD PTR [rbp-0x40],0x0
  4106d9:	jne    410786 <grisu3_diy_fp_encode_double@@Base+0x1890>
  4106df:	jmp    410792 <grisu3_diy_fp_encode_double@@Base+0x189c>
  4106e4:	movzx  eax,BYTE PTR [rbp-0xb]
  4106e8:	movzx  eax,al
  4106eb:	shl    eax,0x4
  4106ee:	movzx  eax,al
  4106f1:	test   eax,eax
  4106f3:	jne    41079f <grisu3_diy_fp_encode_double@@Base+0x18a9>
  4106f9:	cmp    QWORD PTR [rbp-0x38],0x0
  4106fe:	je     4107b2 <grisu3_diy_fp_encode_double@@Base+0x18bc>
  410704:	movzx  eax,BYTE PTR [rbp-0xc]
  410708:	movzx  eax,al
  41070b:	shl    eax,0x2
  41070e:	mov    edx,eax
  410710:	movzx  eax,BYTE PTR [rbp-0xb]
  410714:	shr    al,0x4
  410717:	or     eax,edx
  410719:	mov    edx,eax
  41071b:	mov    rax,QWORD PTR [rbp-0x58]
  41071f:	mov    BYTE PTR [rax],dl
  410721:	inc    QWORD PTR [rbp-0x58]
  410725:	jmp    410792 <grisu3_diy_fp_encode_double@@Base+0x189c>
  410727:	movzx  eax,BYTE PTR [rbp-0xa]
  41072b:	movzx  eax,al
  41072e:	shl    eax,0x6
  410731:	movzx  eax,al
  410734:	test   eax,eax
  410736:	jne    4107a2 <grisu3_diy_fp_encode_double@@Base+0x18ac>
  410738:	cmp    QWORD PTR [rbp-0x38],0x1
  41073d:	jbe    4107b5 <grisu3_diy_fp_encode_double@@Base+0x18bf>
  41073f:	movzx  eax,BYTE PTR [rbp-0xc]
  410743:	movzx  eax,al
  410746:	shl    eax,0x2
  410749:	mov    edx,eax
  41074b:	movzx  eax,BYTE PTR [rbp-0xb]
  41074f:	shr    al,0x4
  410752:	or     eax,edx
  410754:	mov    edx,eax
  410756:	mov    rax,QWORD PTR [rbp-0x58]
  41075a:	mov    BYTE PTR [rax],dl
  41075c:	movzx  eax,BYTE PTR [rbp-0xb]
  410760:	movzx  eax,al
  410763:	shl    eax,0x4
  410766:	mov    edx,eax
  410768:	movzx  eax,BYTE PTR [rbp-0xa]
  41076c:	shr    al,0x2
  41076f:	mov    ecx,edx
  410771:	or     ecx,eax
  410773:	mov    rax,QWORD PTR [rbp-0x58]
  410777:	lea    rdx,[rax+0x1]
  41077b:	mov    eax,ecx
  41077d:	mov    BYTE PTR [rdx],al
  41077f:	add    QWORD PTR [rbp-0x58],0x2
  410784:	jmp    410792 <grisu3_diy_fp_encode_double@@Base+0x189c>
  410786:	mov    DWORD PTR [rbp-0x50],0x4
  41078d:	jmp    410676 <grisu3_diy_fp_encode_double@@Base+0x1780>
  410792:	mov    rax,QWORD PTR [rbp-0x30]
  410796:	mov    QWORD PTR [rbp-0x28],rax
  41079a:	jmp    410676 <grisu3_diy_fp_encode_double@@Base+0x1780>
  41079f:	nop
  4107a0:	jmp    4107a3 <grisu3_diy_fp_encode_double@@Base+0x18ad>
  4107a2:	nop
  4107a3:	mov    DWORD PTR [rbp-0x50],0x5
  4107aa:	jmp    410676 <grisu3_diy_fp_encode_double@@Base+0x1780>
  4107af:	nop
  4107b0:	jmp    4107b6 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  4107b2:	nop
  4107b3:	jmp    4107b6 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  4107b5:	nop
  4107b6:	mov    DWORD PTR [rbp-0x50],0x1
  4107bd:	jmp    410676 <grisu3_diy_fp_encode_double@@Base+0x1780>
  4107c2:	call   403140 <__stack_chk_fail@plt>
  4107c7:	leave  
  4107c8:	ret    

00000000004107c9 <flatcc_json_parser_error_string@@Base>:
  4107c9:	endbr64 
  4107cd:	push   rbp
  4107ce:	mov    rbp,rsp
  4107d1:	mov    DWORD PTR [rbp-0x4],edi
  4107d4:	cmp    DWORD PTR [rbp-0x4],0x22
  4107d8:	ja     41097d <flatcc_json_parser_error_string@@Base+0x1b4>
  4107de:	mov    eax,DWORD PTR [rbp-0x4]
  4107e1:	lea    rdx,[rax*4+0x0]
  4107e9:	lea    rax,[rip+0x54c0]        # 415cb0 <flatcc_builder_padding_base@@Base+0x1910>
  4107f0:	mov    eax,DWORD PTR [rdx+rax*1]
  4107f3:	movsxd rdx,eax
  4107f6:	lea    rax,[rip+0x54b3]        # 415cb0 <flatcc_builder_padding_base@@Base+0x1910>
  4107fd:	add    rax,rdx
  410800:	notrack jmp rax
  410803:	lea    rax,[rip+0x5106]        # 415910 <flatcc_builder_padding_base@@Base+0x1570>
  41080a:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41080f:	lea    rax,[rip+0x520b]        # 415a21 <flatcc_builder_padding_base@@Base+0x1681>
  410816:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41081b:	lea    rax,[rip+0x5203]        # 415a25 <flatcc_builder_padding_base@@Base+0x1685>
  410822:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410827:	lea    rax,[rip+0x5204]        # 415a32 <flatcc_builder_padding_base@@Base+0x1692>
  41082e:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410833:	lea    rax,[rip+0x5207]        # 415a41 <flatcc_builder_padding_base@@Base+0x16a1>
  41083a:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41083f:	lea    rax,[rip+0x520a]        # 415a50 <flatcc_builder_padding_base@@Base+0x16b0>
  410846:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41084b:	lea    rax,[rip+0x5213]        # 415a65 <flatcc_builder_padding_base@@Base+0x16c5>
  410852:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410857:	lea    rax,[rip+0x5217]        # 415a75 <flatcc_builder_padding_base@@Base+0x16d5>
  41085e:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410863:	lea    rax,[rip+0x5214]        # 415a7e <flatcc_builder_padding_base@@Base+0x16de>
  41086a:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41086f:	lea    rax,[rip+0x5212]        # 415a88 <flatcc_builder_padding_base@@Base+0x16e8>
  410876:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41087b:	lea    rax,[rip+0x5217]        # 415a99 <flatcc_builder_padding_base@@Base+0x16f9>
  410882:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410887:	lea    rax,[rip+0x521d]        # 415aab <flatcc_builder_padding_base@@Base+0x170b>
  41088e:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410893:	lea    rax,[rip+0x5220]        # 415aba <flatcc_builder_padding_base@@Base+0x171a>
  41089a:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41089f:	lea    rax,[rip+0x5225]        # 415acb <flatcc_builder_padding_base@@Base+0x172b>
  4108a6:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108ab:	lea    rax,[rip+0x5228]        # 415ada <flatcc_builder_padding_base@@Base+0x173a>
  4108b2:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108b7:	lea    rax,[rip+0x5235]        # 415af3 <flatcc_builder_padding_base@@Base+0x1753>
  4108be:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108c3:	lea    rax,[rip+0x523c]        # 415b06 <flatcc_builder_padding_base@@Base+0x1766>
  4108ca:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108cf:	lea    rax,[rip+0x5240]        # 415b16 <flatcc_builder_padding_base@@Base+0x1776>
  4108d6:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108db:	lea    rax,[rip+0x5246]        # 415b28 <flatcc_builder_padding_base@@Base+0x1788>
  4108e2:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108e7:	lea    rax,[rip+0x5249]        # 415b37 <flatcc_builder_padding_base@@Base+0x1797>
  4108ee:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108f3:	lea    rax,[rip+0x524a]        # 415b44 <flatcc_builder_padding_base@@Base+0x17a4>
  4108fa:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  4108ff:	lea    rax,[rip+0x5252]        # 415b58 <flatcc_builder_padding_base@@Base+0x17b8>
  410906:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410908:	lea    rax,[rip+0x5259]        # 415b68 <flatcc_builder_padding_base@@Base+0x17c8>
  41090f:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410911:	lea    rax,[rip+0x5260]        # 415b78 <flatcc_builder_padding_base@@Base+0x17d8>
  410918:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41091a:	lea    rax,[rip+0x527b]        # 415b9c <flatcc_builder_padding_base@@Base+0x17fc>
  410921:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410923:	lea    rax,[rip+0x5286]        # 415bb0 <flatcc_builder_padding_base@@Base+0x1810>
  41092a:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41092c:	lea    rax,[rip+0x529d]        # 415bd0 <flatcc_builder_padding_base@@Base+0x1830>
  410933:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410935:	lea    rax,[rip+0x52b3]        # 415bef <flatcc_builder_padding_base@@Base+0x184f>
  41093c:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41093e:	lea    rax,[rip+0x52c5]        # 415c0a <flatcc_builder_padding_base@@Base+0x186a>
  410945:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410947:	lea    rax,[rip+0x52d6]        # 415c24 <flatcc_builder_padding_base@@Base+0x1884>
  41094e:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410950:	lea    rax,[rip+0x52e4]        # 415c3b <flatcc_builder_padding_base@@Base+0x189b>
  410957:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410959:	lea    rax,[rip+0x52f8]        # 415c58 <flatcc_builder_padding_base@@Base+0x18b8>
  410960:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410962:	lea    rax,[rip+0x5306]        # 415c6f <flatcc_builder_padding_base@@Base+0x18cf>
  410969:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41096b:	lea    rax,[rip+0x5317]        # 415c89 <flatcc_builder_padding_base@@Base+0x18e9>
  410972:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  410974:	lea    rax,[rip+0x531c]        # 415c97 <flatcc_builder_padding_base@@Base+0x18f7>
  41097b:	jmp    410984 <flatcc_json_parser_error_string@@Base+0x1bb>
  41097d:	lea    rax,[rip+0x5321]        # 415ca5 <flatcc_builder_padding_base@@Base+0x1905>
  410984:	pop    rbp
  410985:	ret    

0000000000410986 <flatcc_json_parser_set_error@@Base>:
  410986:	endbr64 
  41098a:	push   rbp
  41098b:	mov    rbp,rsp
  41098e:	mov    QWORD PTR [rbp-0x8],rdi
  410992:	mov    QWORD PTR [rbp-0x10],rsi
  410996:	mov    QWORD PTR [rbp-0x18],rdx
  41099a:	mov    DWORD PTR [rbp-0x1c],ecx
  41099d:	mov    rax,QWORD PTR [rbp-0x8]
  4109a1:	mov    eax,DWORD PTR [rax+0x20]
  4109a4:	test   eax,eax
  4109a6:	jne    4109db <flatcc_json_parser_set_error@@Base+0x55>
  4109a8:	mov    rax,QWORD PTR [rbp-0x8]
  4109ac:	mov    edx,DWORD PTR [rbp-0x1c]
  4109af:	mov    DWORD PTR [rax+0x20],edx
  4109b2:	mov    rax,QWORD PTR [rbp-0x8]
  4109b6:	mov    rax,QWORD PTR [rax+0x8]
  4109ba:	mov    rdx,QWORD PTR [rbp-0x10]
  4109be:	sub    rdx,rax
  4109c1:	mov    rax,rdx
  4109c4:	inc    eax
  4109c6:	mov    edx,eax
  4109c8:	mov    rax,QWORD PTR [rbp-0x8]
  4109cc:	mov    DWORD PTR [rax+0x1c],edx
  4109cf:	mov    rax,QWORD PTR [rbp-0x8]
  4109d3:	mov    rdx,QWORD PTR [rbp-0x10]
  4109d7:	mov    QWORD PTR [rax+0x38],rdx
  4109db:	mov    rax,QWORD PTR [rbp-0x18]
  4109df:	pop    rbp
  4109e0:	ret    

00000000004109e1 <flatcc_json_parser_string_part@@Base>:
  4109e1:	endbr64 
  4109e5:	push   rbp
  4109e6:	mov    rbp,rsp
  4109e9:	sub    rsp,0x20
  4109ed:	mov    QWORD PTR [rbp-0x8],rdi
  4109f1:	mov    QWORD PTR [rbp-0x10],rsi
  4109f5:	mov    QWORD PTR [rbp-0x18],rdx
  4109f9:	jmp    4109ff <flatcc_json_parser_string_part@@Base+0x1e>
  4109fb:	inc    QWORD PTR [rbp-0x10]
  4109ff:	mov    rax,QWORD PTR [rbp-0x10]
  410a03:	cmp    rax,QWORD PTR [rbp-0x18]
  410a07:	je     410a2a <flatcc_json_parser_string_part@@Base+0x49>
  410a09:	mov    rax,QWORD PTR [rbp-0x10]
  410a0d:	movzx  eax,BYTE PTR [rax]
  410a10:	cmp    al,0x22
  410a12:	je     410a2a <flatcc_json_parser_string_part@@Base+0x49>
  410a14:	mov    rax,QWORD PTR [rbp-0x10]
  410a18:	movzx  eax,BYTE PTR [rax]
  410a1b:	cmp    al,0x1f
  410a1d:	jbe    410a2a <flatcc_json_parser_string_part@@Base+0x49>
  410a1f:	mov    rax,QWORD PTR [rbp-0x10]
  410a23:	movzx  eax,BYTE PTR [rax]
  410a26:	cmp    al,0x5c
  410a28:	jne    4109fb <flatcc_json_parser_string_part@@Base+0x1a>
  410a2a:	mov    rax,QWORD PTR [rbp-0x10]
  410a2e:	cmp    rax,QWORD PTR [rbp-0x18]
  410a32:	jne    410a4f <flatcc_json_parser_string_part@@Base+0x6e>
  410a34:	mov    rdx,QWORD PTR [rbp-0x18]
  410a38:	mov    rsi,QWORD PTR [rbp-0x10]
  410a3c:	mov    rax,QWORD PTR [rbp-0x8]
  410a40:	mov    ecx,0x14
  410a45:	mov    rdi,rax
  410a48:	call   410986 <flatcc_json_parser_set_error@@Base>
  410a4d:	jmp    410a8a <flatcc_json_parser_string_part@@Base+0xa9>
  410a4f:	mov    rax,QWORD PTR [rbp-0x10]
  410a53:	movzx  eax,BYTE PTR [rax]
  410a56:	cmp    al,0x22
  410a58:	jne    410a60 <flatcc_json_parser_string_part@@Base+0x7f>
  410a5a:	mov    rax,QWORD PTR [rbp-0x10]
  410a5e:	jmp    410a8a <flatcc_json_parser_string_part@@Base+0xa9>
  410a60:	mov    rax,QWORD PTR [rbp-0x10]
  410a64:	movzx  eax,BYTE PTR [rax]
  410a67:	cmp    al,0x1f
  410a69:	jg     410a86 <flatcc_json_parser_string_part@@Base+0xa5>
  410a6b:	mov    rdx,QWORD PTR [rbp-0x18]
  410a6f:	mov    rsi,QWORD PTR [rbp-0x10]
  410a73:	mov    rax,QWORD PTR [rbp-0x8]
  410a77:	mov    ecx,0x11
  410a7c:	mov    rdi,rax
  410a7f:	call   410986 <flatcc_json_parser_set_error@@Base>
  410a84:	jmp    410a8a <flatcc_json_parser_string_part@@Base+0xa9>
  410a86:	mov    rax,QWORD PTR [rbp-0x10]
  410a8a:	leave  
  410a8b:	ret    

0000000000410a8c <flatcc_json_parser_space_ext@@Base>:
  410a8c:	endbr64 
  410a90:	push   rbp
  410a91:	mov    rbp,rsp
  410a94:	sub    rsp,0x20
  410a98:	mov    QWORD PTR [rbp-0x8],rdi
  410a9c:	mov    QWORD PTR [rbp-0x10],rsi
  410aa0:	mov    QWORD PTR [rbp-0x18],rdx
  410aa4:	nop
  410aa5:	mov    rax,QWORD PTR [rbp-0x18]
  410aa9:	sub    rax,QWORD PTR [rbp-0x10]
  410aad:	cmp    rax,0xf
  410ab1:	jle    410b03 <flatcc_json_parser_space_ext@@Base+0x77>
  410ab3:	mov    rax,QWORD PTR [rbp-0x10]
  410ab7:	movzx  eax,BYTE PTR [rax]
  410aba:	cmp    al,0x20
  410abc:	jle    410ac7 <flatcc_json_parser_space_ext@@Base+0x3b>
  410abe:	mov    rax,QWORD PTR [rbp-0x10]
  410ac2:	jmp    410bdb <flatcc_json_parser_space_ext@@Base+0x14f>
  410ac7:	mov    rax,QWORD PTR [rbp-0x10]
  410acb:	movzx  eax,WORD PTR [rax]
  410ace:	cmp    ax,0x2020
  410ad2:	jne    410ad9 <flatcc_json_parser_space_ext@@Base+0x4d>
  410ad4:	add    QWORD PTR [rbp-0x10],0x2
  410ad9:	mov    rax,QWORD PTR [rbp-0x10]
  410add:	movzx  eax,BYTE PTR [rax]
  410ae0:	cmp    al,0x20
  410ae2:	jne    410ae8 <flatcc_json_parser_space_ext@@Base+0x5c>
  410ae4:	inc    QWORD PTR [rbp-0x10]
  410ae8:	mov    rax,QWORD PTR [rbp-0x10]
  410aec:	movzx  eax,BYTE PTR [rax]
  410aef:	cmp    al,0x20
  410af1:	jle    410afc <flatcc_json_parser_space_ext@@Base+0x70>
  410af3:	mov    rax,QWORD PTR [rbp-0x10]
  410af7:	jmp    410bdb <flatcc_json_parser_space_ext@@Base+0x14f>
  410afc:	nop
  410afd:	jmp    410b03 <flatcc_json_parser_space_ext@@Base+0x77>
  410aff:	inc    QWORD PTR [rbp-0x10]
  410b03:	mov    rax,QWORD PTR [rbp-0x10]
  410b07:	cmp    rax,QWORD PTR [rbp-0x18]
  410b0b:	je     410bbe <flatcc_json_parser_space_ext@@Base+0x132>
  410b11:	mov    rax,QWORD PTR [rbp-0x10]
  410b15:	movzx  eax,BYTE PTR [rax]
  410b18:	cmp    al,0x20
  410b1a:	je     410aff <flatcc_json_parser_space_ext@@Base+0x73>
  410b1c:	jmp    410bbe <flatcc_json_parser_space_ext@@Base+0x132>
  410b21:	mov    rax,QWORD PTR [rbp-0x10]
  410b25:	movzx  eax,BYTE PTR [rax]
  410b28:	movsx  eax,al
  410b2b:	cmp    eax,0xa
  410b2e:	je     410b7a <flatcc_json_parser_space_ext@@Base+0xee>
  410b30:	cmp    eax,0xa
  410b33:	jg     410b3c <flatcc_json_parser_space_ext@@Base+0xb0>
  410b35:	cmp    eax,0x9
  410b38:	je     410b9d <flatcc_json_parser_space_ext@@Base+0x111>
  410b3a:	jmp    410ba3 <flatcc_json_parser_space_ext@@Base+0x117>
  410b3c:	cmp    eax,0xd
  410b3f:	je     410b4c <flatcc_json_parser_space_ext@@Base+0xc0>
  410b41:	cmp    eax,0x20
  410b44:	je     410aa4 <flatcc_json_parser_space_ext@@Base+0x18>
  410b4a:	jmp    410ba3 <flatcc_json_parser_space_ext@@Base+0x117>
  410b4c:	mov    rax,QWORD PTR [rbp-0x18]
  410b50:	sub    rax,QWORD PTR [rbp-0x10]
  410b54:	cmp    rax,0x1
  410b58:	jle    410b6f <flatcc_json_parser_space_ext@@Base+0xe3>
  410b5a:	mov    rax,QWORD PTR [rbp-0x10]
  410b5e:	inc    rax
  410b61:	movzx  eax,BYTE PTR [rax]
  410b64:	cmp    al,0xa
  410b66:	jne    410b6f <flatcc_json_parser_space_ext@@Base+0xe3>
  410b68:	mov    eax,0x1
  410b6d:	jmp    410b74 <flatcc_json_parser_space_ext@@Base+0xe8>
  410b6f:	mov    eax,0x0
  410b74:	cdqe   
  410b76:	add    QWORD PTR [rbp-0x10],rax
  410b7a:	mov    rax,QWORD PTR [rbp-0x8]
  410b7e:	mov    eax,DWORD PTR [rax+0x18]
  410b81:	lea    edx,[rax+0x1]
  410b84:	mov    rax,QWORD PTR [rbp-0x8]
  410b88:	mov    DWORD PTR [rax+0x18],edx
  410b8b:	inc    QWORD PTR [rbp-0x10]
  410b8f:	mov    rax,QWORD PTR [rbp-0x8]
  410b93:	mov    rdx,QWORD PTR [rbp-0x10]
  410b97:	mov    QWORD PTR [rax+0x8],rdx
  410b9b:	jmp    410bbe <flatcc_json_parser_space_ext@@Base+0x132>
  410b9d:	inc    QWORD PTR [rbp-0x10]
  410ba1:	jmp    410bbe <flatcc_json_parser_space_ext@@Base+0x132>
  410ba3:	mov    rdx,QWORD PTR [rbp-0x18]
  410ba7:	mov    rsi,QWORD PTR [rbp-0x10]
  410bab:	mov    rax,QWORD PTR [rbp-0x8]
  410baf:	mov    ecx,0x5
  410bb4:	mov    rdi,rax
  410bb7:	call   410986 <flatcc_json_parser_set_error@@Base>
  410bbc:	jmp    410bdb <flatcc_json_parser_space_ext@@Base+0x14f>
  410bbe:	mov    rax,QWORD PTR [rbp-0x10]
  410bc2:	cmp    rax,QWORD PTR [rbp-0x18]
  410bc6:	je     410bd7 <flatcc_json_parser_space_ext@@Base+0x14b>
  410bc8:	mov    rax,QWORD PTR [rbp-0x10]
  410bcc:	movzx  eax,BYTE PTR [rax]
  410bcf:	cmp    al,0x20
  410bd1:	jle    410b21 <flatcc_json_parser_space_ext@@Base+0x95>
  410bd7:	mov    rax,QWORD PTR [rbp-0x10]
  410bdb:	leave  
  410bdc:	ret    

0000000000410bdd <flatcc_json_parser_string_escape@@Base>:
  410bdd:	endbr64 
  410be1:	push   rbp
  410be2:	mov    rbp,rsp
  410be5:	sub    rsp,0x30
  410be9:	mov    QWORD PTR [rbp-0x18],rdi
  410bed:	mov    QWORD PTR [rbp-0x20],rsi
  410bf1:	mov    QWORD PTR [rbp-0x28],rdx
  410bf5:	mov    QWORD PTR [rbp-0x30],rcx
  410bf9:	mov    rax,QWORD PTR [rbp-0x28]
  410bfd:	sub    rax,QWORD PTR [rbp-0x20]
  410c01:	cmp    rax,0x1
  410c05:	jle    410c12 <flatcc_json_parser_string_escape@@Base+0x35>
  410c07:	mov    rax,QWORD PTR [rbp-0x20]
  410c0b:	movzx  eax,BYTE PTR [rax]
  410c0e:	cmp    al,0x5c
  410c10:	je     410c37 <flatcc_json_parser_string_escape@@Base+0x5a>
  410c12:	mov    rax,QWORD PTR [rbp-0x30]
  410c16:	mov    BYTE PTR [rax],0x0
  410c19:	mov    rdx,QWORD PTR [rbp-0x28]
  410c1d:	mov    rsi,QWORD PTR [rbp-0x20]
  410c21:	mov    rax,QWORD PTR [rbp-0x18]
  410c25:	mov    ecx,0x12
  410c2a:	mov    rdi,rax
  410c2d:	call   410986 <flatcc_json_parser_set_error@@Base>
  410c32:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410c37:	mov    rax,QWORD PTR [rbp-0x20]
  410c3b:	inc    rax
  410c3e:	movzx  eax,BYTE PTR [rax]
  410c41:	movsx  eax,al
  410c44:	sub    eax,0x22
  410c47:	cmp    eax,0x56
  410c4a:	ja     41118a <flatcc_json_parser_string_escape@@Base+0x5ad>
  410c50:	mov    eax,eax
  410c52:	lea    rdx,[rax*4+0x0]
  410c5a:	lea    rax,[rip+0x50db]        # 415d3c <flatcc_builder_padding_base@@Base+0x199c>
  410c61:	mov    eax,DWORD PTR [rdx+rax*1]
  410c64:	movsxd rdx,eax
  410c67:	lea    rax,[rip+0x50ce]        # 415d3c <flatcc_builder_padding_base@@Base+0x199c>
  410c6e:	add    rax,rdx
  410c71:	notrack jmp rax
  410c74:	mov    BYTE PTR [rbp-0x6],0x0
  410c78:	mov    rax,QWORD PTR [rbp-0x30]
  410c7c:	mov    BYTE PTR [rax],0x1
  410c7f:	mov    rax,QWORD PTR [rbp-0x28]
  410c83:	sub    rax,QWORD PTR [rbp-0x20]
  410c87:	cmp    rax,0x3
  410c8b:	jg     410cb2 <flatcc_json_parser_string_escape@@Base+0xd5>
  410c8d:	mov    rax,QWORD PTR [rbp-0x30]
  410c91:	mov    BYTE PTR [rax],0x0
  410c94:	mov    rdx,QWORD PTR [rbp-0x28]
  410c98:	mov    rsi,QWORD PTR [rbp-0x20]
  410c9c:	mov    rax,QWORD PTR [rbp-0x18]
  410ca0:	mov    ecx,0x12
  410ca5:	mov    rdi,rax
  410ca8:	call   410986 <flatcc_json_parser_set_error@@Base>
  410cad:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410cb2:	mov    rax,QWORD PTR [rbp-0x20]
  410cb6:	movzx  eax,BYTE PTR [rax+0x2]
  410cba:	mov    BYTE PTR [rbp-0x5],al
  410cbd:	cmp    BYTE PTR [rbp-0x5],0x2f
  410cc1:	jle    410cd8 <flatcc_json_parser_string_escape@@Base+0xfb>
  410cc3:	cmp    BYTE PTR [rbp-0x5],0x39
  410cc7:	jg     410cd8 <flatcc_json_parser_string_escape@@Base+0xfb>
  410cc9:	movsx  eax,BYTE PTR [rbp-0x5]
  410ccd:	sub    eax,0x30
  410cd0:	shl    eax,0x4
  410cd3:	or     BYTE PTR [rbp-0x6],al
  410cd6:	jmp    410d1c <flatcc_json_parser_string_escape@@Base+0x13f>
  410cd8:	or     BYTE PTR [rbp-0x5],0x20
  410cdc:	cmp    BYTE PTR [rbp-0x5],0x60
  410ce0:	jle    410cf7 <flatcc_json_parser_string_escape@@Base+0x11a>
  410ce2:	cmp    BYTE PTR [rbp-0x5],0x66
  410ce6:	jg     410cf7 <flatcc_json_parser_string_escape@@Base+0x11a>
  410ce8:	movsx  eax,BYTE PTR [rbp-0x5]
  410cec:	sub    eax,0x57
  410cef:	shl    eax,0x4
  410cf2:	or     BYTE PTR [rbp-0x6],al
  410cf5:	jmp    410d1c <flatcc_json_parser_string_escape@@Base+0x13f>
  410cf7:	mov    rax,QWORD PTR [rbp-0x30]
  410cfb:	mov    BYTE PTR [rax],0x0
  410cfe:	mov    rdx,QWORD PTR [rbp-0x28]
  410d02:	mov    rsi,QWORD PTR [rbp-0x20]
  410d06:	mov    rax,QWORD PTR [rbp-0x18]
  410d0a:	mov    ecx,0x12
  410d0f:	mov    rdi,rax
  410d12:	call   410986 <flatcc_json_parser_set_error@@Base>
  410d17:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410d1c:	mov    rax,QWORD PTR [rbp-0x20]
  410d20:	movzx  eax,BYTE PTR [rax+0x3]
  410d24:	mov    BYTE PTR [rbp-0x5],al
  410d27:	cmp    BYTE PTR [rbp-0x5],0x2f
  410d2b:	jle    410d3f <flatcc_json_parser_string_escape@@Base+0x162>
  410d2d:	cmp    BYTE PTR [rbp-0x5],0x39
  410d31:	jg     410d3f <flatcc_json_parser_string_escape@@Base+0x162>
  410d33:	movzx  eax,BYTE PTR [rbp-0x5]
  410d37:	sub    eax,0x30
  410d3a:	or     BYTE PTR [rbp-0x6],al
  410d3d:	jmp    410d80 <flatcc_json_parser_string_escape@@Base+0x1a3>
  410d3f:	or     BYTE PTR [rbp-0x5],0x20
  410d43:	cmp    BYTE PTR [rbp-0x5],0x60
  410d47:	jle    410d5b <flatcc_json_parser_string_escape@@Base+0x17e>
  410d49:	cmp    BYTE PTR [rbp-0x5],0x66
  410d4d:	jg     410d5b <flatcc_json_parser_string_escape@@Base+0x17e>
  410d4f:	movzx  eax,BYTE PTR [rbp-0x5]
  410d53:	sub    eax,0x57
  410d56:	or     BYTE PTR [rbp-0x6],al
  410d59:	jmp    410d80 <flatcc_json_parser_string_escape@@Base+0x1a3>
  410d5b:	mov    rax,QWORD PTR [rbp-0x30]
  410d5f:	mov    BYTE PTR [rax],0x0
  410d62:	mov    rdx,QWORD PTR [rbp-0x28]
  410d66:	mov    rsi,QWORD PTR [rbp-0x20]
  410d6a:	mov    rax,QWORD PTR [rbp-0x18]
  410d6e:	mov    ecx,0x12
  410d73:	mov    rdi,rax
  410d76:	call   410986 <flatcc_json_parser_set_error@@Base>
  410d7b:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410d80:	mov    rax,QWORD PTR [rbp-0x30]
  410d84:	lea    rdx,[rax+0x1]
  410d88:	movzx  eax,BYTE PTR [rbp-0x6]
  410d8c:	mov    BYTE PTR [rdx],al
  410d8e:	mov    rax,QWORD PTR [rbp-0x20]
  410d92:	add    rax,0x4
  410d96:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410d9b:	mov    rax,QWORD PTR [rbp-0x28]
  410d9f:	sub    rax,QWORD PTR [rbp-0x20]
  410da3:	cmp    rax,0x5
  410da7:	jg     410dce <flatcc_json_parser_string_escape@@Base+0x1f1>
  410da9:	mov    rax,QWORD PTR [rbp-0x30]
  410dad:	mov    BYTE PTR [rax],0x0
  410db0:	mov    rdx,QWORD PTR [rbp-0x28]
  410db4:	mov    rsi,QWORD PTR [rbp-0x20]
  410db8:	mov    rax,QWORD PTR [rbp-0x18]
  410dbc:	mov    ecx,0x12
  410dc1:	mov    rdi,rax
  410dc4:	call   410986 <flatcc_json_parser_set_error@@Base>
  410dc9:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410dce:	mov    WORD PTR [rbp-0x4],0x0
  410dd4:	mov    rax,QWORD PTR [rbp-0x20]
  410dd8:	movzx  eax,BYTE PTR [rax+0x2]
  410ddc:	mov    BYTE PTR [rbp-0x5],al
  410ddf:	cmp    BYTE PTR [rbp-0x5],0x2f
  410de3:	jle    410e04 <flatcc_json_parser_string_escape@@Base+0x227>
  410de5:	cmp    BYTE PTR [rbp-0x5],0x39
  410de9:	jg     410e04 <flatcc_json_parser_string_escape@@Base+0x227>
  410deb:	movsx  ax,BYTE PTR [rbp-0x5]
  410df0:	sub    eax,0x30
  410df3:	mov    WORD PTR [rbp-0x2],ax
  410df7:	movzx  eax,WORD PTR [rbp-0x2]
  410dfb:	shl    eax,0xc
  410dfe:	mov    WORD PTR [rbp-0x4],ax
  410e02:	jmp    410e5a <flatcc_json_parser_string_escape@@Base+0x27d>
  410e04:	or     BYTE PTR [rbp-0x5],0x20
  410e08:	cmp    BYTE PTR [rbp-0x5],0x60
  410e0c:	jle    410e35 <flatcc_json_parser_string_escape@@Base+0x258>
  410e0e:	cmp    BYTE PTR [rbp-0x5],0x66
  410e12:	jg     410e35 <flatcc_json_parser_string_escape@@Base+0x258>
  410e14:	movsx  ax,BYTE PTR [rbp-0x5]
  410e19:	sub    eax,0x57
  410e1c:	mov    WORD PTR [rbp-0x2],ax
  410e20:	movzx  eax,WORD PTR [rbp-0x2]
  410e24:	shl    eax,0xc
  410e27:	mov    edx,eax
  410e29:	movzx  eax,WORD PTR [rbp-0x4]
  410e2d:	or     eax,edx
  410e2f:	mov    WORD PTR [rbp-0x4],ax
  410e33:	jmp    410e5a <flatcc_json_parser_string_escape@@Base+0x27d>
  410e35:	mov    rax,QWORD PTR [rbp-0x30]
  410e39:	mov    BYTE PTR [rax],0x0
  410e3c:	mov    rdx,QWORD PTR [rbp-0x28]
  410e40:	mov    rsi,QWORD PTR [rbp-0x20]
  410e44:	mov    rax,QWORD PTR [rbp-0x18]
  410e48:	mov    ecx,0x12
  410e4d:	mov    rdi,rax
  410e50:	call   410986 <flatcc_json_parser_set_error@@Base>
  410e55:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410e5a:	mov    rax,QWORD PTR [rbp-0x20]
  410e5e:	movzx  eax,BYTE PTR [rax+0x3]
  410e62:	mov    BYTE PTR [rbp-0x5],al
  410e65:	cmp    BYTE PTR [rbp-0x5],0x2f
  410e69:	jle    410e92 <flatcc_json_parser_string_escape@@Base+0x2b5>
  410e6b:	cmp    BYTE PTR [rbp-0x5],0x39
  410e6f:	jg     410e92 <flatcc_json_parser_string_escape@@Base+0x2b5>
  410e71:	movsx  ax,BYTE PTR [rbp-0x5]
  410e76:	sub    eax,0x30
  410e79:	mov    WORD PTR [rbp-0x2],ax
  410e7d:	movzx  eax,WORD PTR [rbp-0x2]
  410e81:	shl    eax,0x8
  410e84:	mov    edx,eax
  410e86:	movzx  eax,WORD PTR [rbp-0x4]
  410e8a:	or     eax,edx
  410e8c:	mov    WORD PTR [rbp-0x4],ax
  410e90:	jmp    410ee8 <flatcc_json_parser_string_escape@@Base+0x30b>
  410e92:	or     BYTE PTR [rbp-0x5],0x20
  410e96:	cmp    BYTE PTR [rbp-0x5],0x60
  410e9a:	jle    410ec3 <flatcc_json_parser_string_escape@@Base+0x2e6>
  410e9c:	cmp    BYTE PTR [rbp-0x5],0x66
  410ea0:	jg     410ec3 <flatcc_json_parser_string_escape@@Base+0x2e6>
  410ea2:	movsx  ax,BYTE PTR [rbp-0x5]
  410ea7:	sub    eax,0x57
  410eaa:	mov    WORD PTR [rbp-0x2],ax
  410eae:	movzx  eax,WORD PTR [rbp-0x2]
  410eb2:	shl    eax,0x8
  410eb5:	mov    edx,eax
  410eb7:	movzx  eax,WORD PTR [rbp-0x4]
  410ebb:	or     eax,edx
  410ebd:	mov    WORD PTR [rbp-0x4],ax
  410ec1:	jmp    410ee8 <flatcc_json_parser_string_escape@@Base+0x30b>
  410ec3:	mov    rax,QWORD PTR [rbp-0x30]
  410ec7:	mov    BYTE PTR [rax],0x0
  410eca:	mov    rdx,QWORD PTR [rbp-0x28]
  410ece:	mov    rsi,QWORD PTR [rbp-0x20]
  410ed2:	mov    rax,QWORD PTR [rbp-0x18]
  410ed6:	mov    ecx,0x12
  410edb:	mov    rdi,rax
  410ede:	call   410986 <flatcc_json_parser_set_error@@Base>
  410ee3:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410ee8:	mov    rax,QWORD PTR [rbp-0x20]
  410eec:	movzx  eax,BYTE PTR [rax+0x4]
  410ef0:	mov    BYTE PTR [rbp-0x5],al
  410ef3:	cmp    BYTE PTR [rbp-0x5],0x2f
  410ef7:	jle    410f20 <flatcc_json_parser_string_escape@@Base+0x343>
  410ef9:	cmp    BYTE PTR [rbp-0x5],0x39
  410efd:	jg     410f20 <flatcc_json_parser_string_escape@@Base+0x343>
  410eff:	movsx  ax,BYTE PTR [rbp-0x5]
  410f04:	sub    eax,0x30
  410f07:	mov    WORD PTR [rbp-0x2],ax
  410f0b:	movzx  eax,WORD PTR [rbp-0x2]
  410f0f:	shl    eax,0x4
  410f12:	mov    edx,eax
  410f14:	movzx  eax,WORD PTR [rbp-0x4]
  410f18:	or     eax,edx
  410f1a:	mov    WORD PTR [rbp-0x4],ax
  410f1e:	jmp    410f76 <flatcc_json_parser_string_escape@@Base+0x399>
  410f20:	or     BYTE PTR [rbp-0x5],0x20
  410f24:	cmp    BYTE PTR [rbp-0x5],0x60
  410f28:	jle    410f51 <flatcc_json_parser_string_escape@@Base+0x374>
  410f2a:	cmp    BYTE PTR [rbp-0x5],0x66
  410f2e:	jg     410f51 <flatcc_json_parser_string_escape@@Base+0x374>
  410f30:	movsx  ax,BYTE PTR [rbp-0x5]
  410f35:	sub    eax,0x57
  410f38:	mov    WORD PTR [rbp-0x2],ax
  410f3c:	movzx  eax,WORD PTR [rbp-0x2]
  410f40:	shl    eax,0x4
  410f43:	mov    edx,eax
  410f45:	movzx  eax,WORD PTR [rbp-0x4]
  410f49:	or     eax,edx
  410f4b:	mov    WORD PTR [rbp-0x4],ax
  410f4f:	jmp    410f76 <flatcc_json_parser_string_escape@@Base+0x399>
  410f51:	mov    rax,QWORD PTR [rbp-0x30]
  410f55:	mov    BYTE PTR [rax],0x0
  410f58:	mov    rdx,QWORD PTR [rbp-0x28]
  410f5c:	mov    rsi,QWORD PTR [rbp-0x20]
  410f60:	mov    rax,QWORD PTR [rbp-0x18]
  410f64:	mov    ecx,0x12
  410f69:	mov    rdi,rax
  410f6c:	call   410986 <flatcc_json_parser_set_error@@Base>
  410f71:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410f76:	mov    rax,QWORD PTR [rbp-0x20]
  410f7a:	movzx  eax,BYTE PTR [rax+0x5]
  410f7e:	mov    BYTE PTR [rbp-0x5],al
  410f81:	cmp    BYTE PTR [rbp-0x5],0x2f
  410f85:	jle    410fa3 <flatcc_json_parser_string_escape@@Base+0x3c6>
  410f87:	cmp    BYTE PTR [rbp-0x5],0x39
  410f8b:	jg     410fa3 <flatcc_json_parser_string_escape@@Base+0x3c6>
  410f8d:	movsx  ax,BYTE PTR [rbp-0x5]
  410f92:	sub    eax,0x30
  410f95:	mov    WORD PTR [rbp-0x2],ax
  410f99:	movzx  eax,WORD PTR [rbp-0x2]
  410f9d:	or     WORD PTR [rbp-0x4],ax
  410fa1:	jmp    410fee <flatcc_json_parser_string_escape@@Base+0x411>
  410fa3:	or     BYTE PTR [rbp-0x5],0x20
  410fa7:	cmp    BYTE PTR [rbp-0x5],0x60
  410fab:	jle    410fc9 <flatcc_json_parser_string_escape@@Base+0x3ec>
  410fad:	cmp    BYTE PTR [rbp-0x5],0x66
  410fb1:	jg     410fc9 <flatcc_json_parser_string_escape@@Base+0x3ec>
  410fb3:	movsx  ax,BYTE PTR [rbp-0x5]
  410fb8:	sub    eax,0x57
  410fbb:	mov    WORD PTR [rbp-0x2],ax
  410fbf:	movzx  eax,WORD PTR [rbp-0x2]
  410fc3:	or     WORD PTR [rbp-0x4],ax
  410fc7:	jmp    410fee <flatcc_json_parser_string_escape@@Base+0x411>
  410fc9:	mov    rax,QWORD PTR [rbp-0x30]
  410fcd:	mov    BYTE PTR [rax],0x0
  410fd0:	mov    rdx,QWORD PTR [rbp-0x28]
  410fd4:	mov    rsi,QWORD PTR [rbp-0x20]
  410fd8:	mov    rax,QWORD PTR [rbp-0x18]
  410fdc:	mov    ecx,0x12
  410fe1:	mov    rdi,rax
  410fe4:	call   410986 <flatcc_json_parser_set_error@@Base>
  410fe9:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  410fee:	cmp    WORD PTR [rbp-0x4],0x7f
  410ff3:	ja     41100f <flatcc_json_parser_string_escape@@Base+0x432>
  410ff5:	mov    rax,QWORD PTR [rbp-0x30]
  410ff9:	mov    BYTE PTR [rax],0x1
  410ffc:	mov    rax,QWORD PTR [rbp-0x30]
  411000:	lea    rdx,[rax+0x1]
  411004:	movzx  eax,WORD PTR [rbp-0x4]
  411008:	mov    BYTE PTR [rdx],al
  41100a:	jmp    411099 <flatcc_json_parser_string_escape@@Base+0x4bc>
  41100f:	cmp    WORD PTR [rbp-0x4],0x7ff
  411015:	ja     41104d <flatcc_json_parser_string_escape@@Base+0x470>
  411017:	mov    rax,QWORD PTR [rbp-0x30]
  41101b:	mov    BYTE PTR [rax],0x2
  41101e:	movzx  eax,WORD PTR [rbp-0x4]
  411022:	shr    ax,0x6
  411026:	or     eax,0xffffffc0
  411029:	mov    ecx,eax
  41102b:	mov    rax,QWORD PTR [rbp-0x30]
  41102f:	lea    rdx,[rax+0x1]
  411033:	mov    eax,ecx
  411035:	mov    BYTE PTR [rdx],al
  411037:	movzx  eax,WORD PTR [rbp-0x4]
  41103b:	and    eax,0x3f
  41103e:	mov    rdx,QWORD PTR [rbp-0x30]
  411042:	add    rdx,0x2
  411046:	or     eax,0xffffff80
  411049:	mov    BYTE PTR [rdx],al
  41104b:	jmp    411099 <flatcc_json_parser_string_escape@@Base+0x4bc>
  41104d:	mov    rax,QWORD PTR [rbp-0x30]
  411051:	mov    BYTE PTR [rax],0x3
  411054:	movzx  eax,WORD PTR [rbp-0x4]
  411058:	shr    ax,0xc
  41105c:	or     eax,0xffffffe0
  41105f:	mov    ecx,eax
  411061:	mov    rax,QWORD PTR [rbp-0x30]
  411065:	lea    rdx,[rax+0x1]
  411069:	mov    eax,ecx
  41106b:	mov    BYTE PTR [rdx],al
  41106d:	movzx  eax,WORD PTR [rbp-0x4]
  411071:	shr    ax,0x6
  411075:	and    eax,0x3f
  411078:	mov    rdx,QWORD PTR [rbp-0x30]
  41107c:	add    rdx,0x2
  411080:	or     eax,0xffffff80
  411083:	mov    BYTE PTR [rdx],al
  411085:	movzx  eax,WORD PTR [rbp-0x4]
  411089:	and    eax,0x3f
  41108c:	mov    rdx,QWORD PTR [rbp-0x30]
  411090:	add    rdx,0x3
  411094:	or     eax,0xffffff80
  411097:	mov    BYTE PTR [rdx],al
  411099:	mov    rax,QWORD PTR [rbp-0x20]
  41109d:	add    rax,0x6
  4110a1:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  4110a6:	mov    rax,QWORD PTR [rbp-0x30]
  4110aa:	mov    BYTE PTR [rax],0x1
  4110ad:	mov    rax,QWORD PTR [rbp-0x30]
  4110b1:	inc    rax
  4110b4:	mov    BYTE PTR [rax],0x9
  4110b7:	mov    rax,QWORD PTR [rbp-0x20]
  4110bb:	add    rax,0x2
  4110bf:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  4110c4:	mov    rax,QWORD PTR [rbp-0x30]
  4110c8:	mov    BYTE PTR [rax],0x1
  4110cb:	mov    rax,QWORD PTR [rbp-0x30]
  4110cf:	inc    rax
  4110d2:	mov    BYTE PTR [rax],0xa
  4110d5:	mov    rax,QWORD PTR [rbp-0x20]
  4110d9:	add    rax,0x2
  4110dd:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  4110e2:	mov    rax,QWORD PTR [rbp-0x30]
  4110e6:	mov    BYTE PTR [rax],0x1
  4110e9:	mov    rax,QWORD PTR [rbp-0x30]
  4110ed:	inc    rax
  4110f0:	mov    BYTE PTR [rax],0xd
  4110f3:	mov    rax,QWORD PTR [rbp-0x20]
  4110f7:	add    rax,0x2
  4110fb:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  411100:	mov    rax,QWORD PTR [rbp-0x30]
  411104:	mov    BYTE PTR [rax],0x1
  411107:	mov    rax,QWORD PTR [rbp-0x30]
  41110b:	inc    rax
  41110e:	mov    BYTE PTR [rax],0x8
  411111:	mov    rax,QWORD PTR [rbp-0x20]
  411115:	add    rax,0x2
  411119:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  41111e:	mov    rax,QWORD PTR [rbp-0x30]
  411122:	mov    BYTE PTR [rax],0x1
  411125:	mov    rax,QWORD PTR [rbp-0x30]
  411129:	inc    rax
  41112c:	mov    BYTE PTR [rax],0xc
  41112f:	mov    rax,QWORD PTR [rbp-0x20]
  411133:	add    rax,0x2
  411137:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  411139:	mov    rax,QWORD PTR [rbp-0x30]
  41113d:	mov    BYTE PTR [rax],0x1
  411140:	mov    rax,QWORD PTR [rbp-0x30]
  411144:	inc    rax
  411147:	mov    BYTE PTR [rax],0x22
  41114a:	mov    rax,QWORD PTR [rbp-0x20]
  41114e:	add    rax,0x2
  411152:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  411154:	mov    rax,QWORD PTR [rbp-0x30]
  411158:	mov    BYTE PTR [rax],0x1
  41115b:	mov    rax,QWORD PTR [rbp-0x30]
  41115f:	inc    rax
  411162:	mov    BYTE PTR [rax],0x5c
  411165:	mov    rax,QWORD PTR [rbp-0x20]
  411169:	add    rax,0x2
  41116d:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  41116f:	mov    rax,QWORD PTR [rbp-0x30]
  411173:	mov    BYTE PTR [rax],0x1
  411176:	mov    rax,QWORD PTR [rbp-0x30]
  41117a:	inc    rax
  41117d:	mov    BYTE PTR [rax],0x2f
  411180:	mov    rax,QWORD PTR [rbp-0x20]
  411184:	add    rax,0x2
  411188:	jmp    4111aa <flatcc_json_parser_string_escape@@Base+0x5cd>
  41118a:	mov    rax,QWORD PTR [rbp-0x30]
  41118e:	mov    BYTE PTR [rax],0x0
  411191:	mov    rdx,QWORD PTR [rbp-0x28]
  411195:	mov    rsi,QWORD PTR [rbp-0x20]
  411199:	mov    rax,QWORD PTR [rbp-0x18]
  41119d:	mov    ecx,0x12
  4111a2:	mov    rdi,rax
  4111a5:	call   410986 <flatcc_json_parser_set_error@@Base>
  4111aa:	leave  
  4111ab:	ret    

00000000004111ac <flatcc_json_parser_skip_constant@@Base>:
  4111ac:	endbr64 
  4111b0:	push   rbp
  4111b1:	mov    rbp,rsp
  4111b4:	sub    rsp,0x30
  4111b8:	mov    QWORD PTR [rbp-0x18],rdi
  4111bc:	mov    QWORD PTR [rbp-0x20],rsi
  4111c0:	mov    QWORD PTR [rbp-0x28],rdx
  4111c4:	jmp    41123d <flatcc_json_parser_skip_constant@@Base+0x91>
  4111c6:	mov    rax,QWORD PTR [rbp-0x20]
  4111ca:	movzx  eax,BYTE PTR [rax]
  4111cd:	mov    BYTE PTR [rbp-0x9],al
  4111d0:	cmp    BYTE PTR [rbp-0x9],0x0
  4111d4:	js     4111ee <flatcc_json_parser_skip_constant@@Base+0x42>
  4111d6:	cmp    BYTE PTR [rbp-0x9],0x5f
  4111da:	je     4111ee <flatcc_json_parser_skip_constant@@Base+0x42>
  4111dc:	cmp    BYTE PTR [rbp-0x9],0x2f
  4111e0:	jle    4111e8 <flatcc_json_parser_skip_constant@@Base+0x3c>
  4111e2:	cmp    BYTE PTR [rbp-0x9],0x39
  4111e6:	jle    4111ee <flatcc_json_parser_skip_constant@@Base+0x42>
  4111e8:	cmp    BYTE PTR [rbp-0x9],0x2e
  4111ec:	jne    4111f4 <flatcc_json_parser_skip_constant@@Base+0x48>
  4111ee:	inc    QWORD PTR [rbp-0x20]
  4111f2:	jmp    41123d <flatcc_json_parser_skip_constant@@Base+0x91>
  4111f4:	or     BYTE PTR [rbp-0x9],0x20
  4111f8:	cmp    BYTE PTR [rbp-0x9],0x60
  4111fc:	jle    41120a <flatcc_json_parser_skip_constant@@Base+0x5e>
  4111fe:	cmp    BYTE PTR [rbp-0x9],0x7a
  411202:	jg     41120a <flatcc_json_parser_skip_constant@@Base+0x5e>
  411204:	inc    QWORD PTR [rbp-0x20]
  411208:	jmp    41123d <flatcc_json_parser_skip_constant@@Base+0x91>
  41120a:	mov    rax,QWORD PTR [rbp-0x20]
  41120e:	mov    QWORD PTR [rbp-0x8],rax
  411212:	mov    rdx,QWORD PTR [rbp-0x28]
  411216:	mov    rcx,QWORD PTR [rbp-0x8]
  41121a:	mov    rax,QWORD PTR [rbp-0x18]
  41121e:	mov    rsi,rcx
  411221:	mov    rdi,rax
  411224:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  411229:	mov    QWORD PTR [rbp-0x20],rax
  41122d:	mov    rax,QWORD PTR [rbp-0x20]
  411231:	cmp    rax,QWORD PTR [rbp-0x8]
  411235:	jne    41123d <flatcc_json_parser_skip_constant@@Base+0x91>
  411237:	mov    rax,QWORD PTR [rbp-0x20]
  41123b:	jmp    41124f <flatcc_json_parser_skip_constant@@Base+0xa3>
  41123d:	mov    rax,QWORD PTR [rbp-0x20]
  411241:	cmp    rax,QWORD PTR [rbp-0x28]
  411245:	jne    4111c6 <flatcc_json_parser_skip_constant@@Base+0x1a>
  41124b:	mov    rax,QWORD PTR [rbp-0x20]
  41124f:	leave  
  411250:	ret    

0000000000411251 <flatcc_json_parser_match_constant@@Base>:
  411251:	endbr64 
  411255:	push   rbp
  411256:	mov    rbp,rsp
  411259:	sub    rsp,0x50
  41125d:	mov    QWORD PTR [rbp-0x28],rdi
  411261:	mov    QWORD PTR [rbp-0x30],rsi
  411265:	mov    QWORD PTR [rbp-0x38],rdx
  411269:	mov    DWORD PTR [rbp-0x3c],ecx
  41126c:	mov    QWORD PTR [rbp-0x48],r8
  411270:	mov    rax,QWORD PTR [rbp-0x30]
  411274:	mov    QWORD PTR [rbp-0x10],rax
  411278:	mov    eax,DWORD PTR [rbp-0x3c]
  41127b:	movsxd rdx,eax
  41127e:	mov    rax,QWORD PTR [rbp-0x30]
  411282:	add    rax,rdx
  411285:	mov    QWORD PTR [rbp-0x8],rax
  411289:	mov    rax,QWORD PTR [rbp-0x38]
  41128d:	sub    rax,QWORD PTR [rbp-0x30]
  411291:	mov    rdx,rax
  411294:	mov    eax,DWORD PTR [rbp-0x3c]
  411297:	cdqe   
  411299:	cmp    rdx,rax
  41129c:	jg     4112b1 <flatcc_json_parser_match_constant@@Base+0x60>
  41129e:	mov    rax,QWORD PTR [rbp-0x48]
  4112a2:	mov    DWORD PTR [rax],0x0
  4112a8:	mov    rax,QWORD PTR [rbp-0x30]
  4112ac:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  4112b1:	mov    rax,QWORD PTR [rbp-0x28]
  4112b5:	mov    eax,DWORD PTR [rax+0x14]
  4112b8:	test   eax,eax
  4112ba:	je     41138b <flatcc_json_parser_match_constant@@Base+0x13a>
  4112c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4112c4:	mov    rcx,QWORD PTR [rbp-0x8]
  4112c8:	mov    rax,QWORD PTR [rbp-0x28]
  4112cc:	mov    rsi,rcx
  4112cf:	mov    rdi,rax
  4112d2:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  4112d7:	mov    QWORD PTR [rbp-0x30],rax
  4112db:	mov    rax,QWORD PTR [rbp-0x30]
  4112df:	cmp    rax,QWORD PTR [rbp-0x38]
  4112e3:	jne    4112f8 <flatcc_json_parser_match_constant@@Base+0xa7>
  4112e5:	mov    rax,QWORD PTR [rbp-0x48]
  4112e9:	mov    DWORD PTR [rax],0x0
  4112ef:	mov    rax,QWORD PTR [rbp-0x30]
  4112f3:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  4112f8:	mov    rax,QWORD PTR [rbp-0x30]
  4112fc:	cmp    rax,QWORD PTR [rbp-0x8]
  411300:	je     41134e <flatcc_json_parser_match_constant@@Base+0xfd>
  411302:	mov    rax,QWORD PTR [rbp-0x30]
  411306:	movzx  eax,BYTE PTR [rax]
  411309:	mov    BYTE PTR [rbp-0x11],al
  41130c:	cmp    BYTE PTR [rbp-0x11],0x5f
  411310:	je     411318 <flatcc_json_parser_match_constant@@Base+0xc7>
  411312:	cmp    BYTE PTR [rbp-0x11],0x0
  411316:	jns    41132b <flatcc_json_parser_match_constant@@Base+0xda>
  411318:	mov    rax,QWORD PTR [rbp-0x48]
  41131c:	mov    DWORD PTR [rax],0x1
  411322:	mov    rax,QWORD PTR [rbp-0x30]
  411326:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  41132b:	or     BYTE PTR [rbp-0x11],0x20
  41132f:	cmp    BYTE PTR [rbp-0x11],0x60
  411333:	jle    41134e <flatcc_json_parser_match_constant@@Base+0xfd>
  411335:	cmp    BYTE PTR [rbp-0x11],0x7a
  411339:	jg     41134e <flatcc_json_parser_match_constant@@Base+0xfd>
  41133b:	mov    rax,QWORD PTR [rbp-0x48]
  41133f:	mov    DWORD PTR [rax],0x1
  411345:	mov    rax,QWORD PTR [rbp-0x30]
  411349:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  41134e:	mov    rax,QWORD PTR [rbp-0x48]
  411352:	mov    DWORD PTR [rax],0x0
  411358:	mov    rax,QWORD PTR [rbp-0x30]
  41135c:	movzx  eax,BYTE PTR [rax]
  41135f:	cmp    al,0x2c
  411361:	je     411379 <flatcc_json_parser_match_constant@@Base+0x128>
  411363:	mov    rax,QWORD PTR [rbp-0x30]
  411367:	movzx  eax,BYTE PTR [rax]
  41136a:	cmp    al,0x7d
  41136c:	je     411379 <flatcc_json_parser_match_constant@@Base+0x128>
  41136e:	mov    rax,QWORD PTR [rbp-0x30]
  411372:	movzx  eax,BYTE PTR [rax]
  411375:	cmp    al,0x5d
  411377:	jne    411382 <flatcc_json_parser_match_constant@@Base+0x131>
  411379:	mov    rax,QWORD PTR [rbp-0x30]
  41137d:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  411382:	mov    rax,QWORD PTR [rbp-0x10]
  411386:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  41138b:	mov    rax,QWORD PTR [rbp-0x8]
  41138f:	mov    QWORD PTR [rbp-0x30],rax
  411393:	mov    rax,QWORD PTR [rbp-0x30]
  411397:	movzx  eax,BYTE PTR [rax]
  41139a:	cmp    al,0x20
  41139c:	jne    4113f5 <flatcc_json_parser_match_constant@@Base+0x1a4>
  41139e:	inc    QWORD PTR [rbp-0x30]
  4113a2:	jmp    4113a8 <flatcc_json_parser_match_constant@@Base+0x157>
  4113a4:	inc    QWORD PTR [rbp-0x30]
  4113a8:	mov    rax,QWORD PTR [rbp-0x30]
  4113ac:	cmp    rax,QWORD PTR [rbp-0x38]
  4113b0:	je     4113bd <flatcc_json_parser_match_constant@@Base+0x16c>
  4113b2:	mov    rax,QWORD PTR [rbp-0x30]
  4113b6:	movzx  eax,BYTE PTR [rax]
  4113b9:	cmp    al,0x20
  4113bb:	je     4113a4 <flatcc_json_parser_match_constant@@Base+0x153>
  4113bd:	mov    rax,QWORD PTR [rbp-0x30]
  4113c1:	cmp    rax,QWORD PTR [rbp-0x38]
  4113c5:	jne    4113da <flatcc_json_parser_match_constant@@Base+0x189>
  4113c7:	mov    rax,QWORD PTR [rbp-0x48]
  4113cb:	mov    DWORD PTR [rax],0x0
  4113d1:	mov    rax,QWORD PTR [rbp-0x30]
  4113d5:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  4113da:	mov    rax,QWORD PTR [rbp-0x30]
  4113de:	movzx  eax,BYTE PTR [rax]
  4113e1:	cmp    al,0x22
  4113e3:	je     4113f5 <flatcc_json_parser_match_constant@@Base+0x1a4>
  4113e5:	mov    rax,QWORD PTR [rbp-0x48]
  4113e9:	mov    DWORD PTR [rax],0x1
  4113ef:	mov    rax,QWORD PTR [rbp-0x30]
  4113f3:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  4113f5:	mov    rax,QWORD PTR [rbp-0x30]
  4113f9:	movzx  eax,BYTE PTR [rax]
  4113fc:	movsx  eax,al
  4113ff:	cmp    eax,0x22
  411402:	je     41142e <flatcc_json_parser_match_constant@@Base+0x1dd>
  411404:	cmp    eax,0x5c
  411407:	jne    41145e <flatcc_json_parser_match_constant@@Base+0x20d>
  411409:	mov    rax,QWORD PTR [rbp-0x48]
  41140d:	mov    DWORD PTR [rax],0x0
  411413:	mov    rdx,QWORD PTR [rbp-0x38]
  411417:	mov    rsi,QWORD PTR [rbp-0x30]
  41141b:	mov    rax,QWORD PTR [rbp-0x28]
  41141f:	mov    ecx,0x12
  411424:	mov    rdi,rax
  411427:	call   410986 <flatcc_json_parser_set_error@@Base>
  41142c:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  41142e:	mov    rax,QWORD PTR [rbp-0x30]
  411432:	lea    rcx,[rax+0x1]
  411436:	mov    rax,QWORD PTR [rbp-0x28]
  41143a:	mov    edx,0x0
  41143f:	mov    rsi,rcx
  411442:	mov    rdi,rax
  411445:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41144a:	mov    QWORD PTR [rbp-0x30],rax
  41144e:	mov    rax,QWORD PTR [rbp-0x48]
  411452:	mov    DWORD PTR [rax],0x0
  411458:	mov    rax,QWORD PTR [rbp-0x30]
  41145c:	jmp    41146c <flatcc_json_parser_match_constant@@Base+0x21b>
  41145e:	mov    rax,QWORD PTR [rbp-0x48]
  411462:	mov    DWORD PTR [rax],0x0
  411468:	mov    rax,QWORD PTR [rbp-0x10]
  41146c:	leave  
  41146d:	ret    

000000000041146e <flatcc_json_parser_unmatched_symbol@@Base>:
  41146e:	endbr64 
  411472:	push   rbp
  411473:	mov    rbp,rsp
  411476:	sub    rsp,0x20
  41147a:	mov    QWORD PTR [rbp-0x8],rdi
  41147e:	mov    QWORD PTR [rbp-0x10],rsi
  411482:	mov    QWORD PTR [rbp-0x18],rdx
  411486:	mov    rax,QWORD PTR [rbp-0x8]
  41148a:	mov    eax,DWORD PTR [rax+0x10]
  41148d:	and    eax,0x1
  411490:	test   eax,eax
  411492:	je     411537 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  411498:	mov    rdx,QWORD PTR [rbp-0x18]
  41149c:	mov    rcx,QWORD PTR [rbp-0x10]
  4114a0:	mov    rax,QWORD PTR [rbp-0x8]
  4114a4:	mov    rsi,rcx
  4114a7:	mov    rdi,rax
  4114aa:	call   40cbb4 <flatcc_emitter_copy_buffer@@Base+0x370>
  4114af:	mov    QWORD PTR [rbp-0x10],rax
  4114b3:	mov    rdx,QWORD PTR [rbp-0x18]
  4114b7:	mov    rcx,QWORD PTR [rbp-0x10]
  4114bb:	mov    rax,QWORD PTR [rbp-0x8]
  4114bf:	mov    rsi,rcx
  4114c2:	mov    rdi,rax
  4114c5:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  4114ca:	mov    QWORD PTR [rbp-0x10],rax
  4114ce:	mov    rax,QWORD PTR [rbp-0x10]
  4114d2:	cmp    rax,QWORD PTR [rbp-0x18]
  4114d6:	je     41151c <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  4114d8:	mov    rax,QWORD PTR [rbp-0x10]
  4114dc:	movzx  eax,BYTE PTR [rax]
  4114df:	cmp    al,0x3a
  4114e1:	jne    41151c <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  4114e3:	inc    QWORD PTR [rbp-0x10]
  4114e7:	mov    rdx,QWORD PTR [rbp-0x18]
  4114eb:	mov    rcx,QWORD PTR [rbp-0x10]
  4114ef:	mov    rax,QWORD PTR [rbp-0x8]
  4114f3:	mov    rsi,rcx
  4114f6:	mov    rdi,rax
  4114f9:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  4114fe:	mov    QWORD PTR [rbp-0x10],rax
  411502:	nop
  411503:	mov    rdx,QWORD PTR [rbp-0x18]
  411507:	mov    rcx,QWORD PTR [rbp-0x10]
  41150b:	mov    rax,QWORD PTR [rbp-0x8]
  41150f:	mov    rsi,rcx
  411512:	mov    rdi,rax
  411515:	call   411a65 <flatcc_json_parser_generic_json@@Base>
  41151a:	jmp    411550 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  41151c:	mov    rdx,QWORD PTR [rbp-0x18]
  411520:	mov    rsi,QWORD PTR [rbp-0x10]
  411524:	mov    rax,QWORD PTR [rbp-0x8]
  411528:	mov    ecx,0x4
  41152d:	mov    rdi,rax
  411530:	call   410986 <flatcc_json_parser_set_error@@Base>
  411535:	jmp    411550 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  411537:	mov    rdx,QWORD PTR [rbp-0x18]
  41153b:	mov    rsi,QWORD PTR [rbp-0x10]
  41153f:	mov    rax,QWORD PTR [rbp-0x8]
  411543:	mov    ecx,0xd
  411548:	mov    rdi,rax
  41154b:	call   410986 <flatcc_json_parser_set_error@@Base>
  411550:	leave  
  411551:	ret    
  411552:	endbr64 
  411556:	push   rbp
  411557:	mov    rbp,rsp
  41155a:	sub    rsp,0x20
  41155e:	mov    QWORD PTR [rbp-0x8],rdi
  411562:	mov    QWORD PTR [rbp-0x10],rsi
  411566:	mov    QWORD PTR [rbp-0x18],rdx
  41156a:	mov    rax,QWORD PTR [rbp-0x10]
  41156e:	cmp    rax,QWORD PTR [rbp-0x18]
  411572:	jne    41157d <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  411574:	mov    rax,QWORD PTR [rbp-0x10]
  411578:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41157d:	mov    rax,QWORD PTR [rbp-0x10]
  411581:	movzx  eax,BYTE PTR [rax]
  411584:	cmp    al,0x2d
  411586:	jne    4115b4 <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  411588:	inc    QWORD PTR [rbp-0x10]
  41158c:	mov    rax,QWORD PTR [rbp-0x10]
  411590:	cmp    rax,QWORD PTR [rbp-0x18]
  411594:	jne    4115b4 <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  411596:	mov    rdx,QWORD PTR [rbp-0x18]
  41159a:	mov    rsi,QWORD PTR [rbp-0x10]
  41159e:	mov    rax,QWORD PTR [rbp-0x8]
  4115a2:	mov    ecx,0x6
  4115a7:	mov    rdi,rax
  4115aa:	call   410986 <flatcc_json_parser_set_error@@Base>
  4115af:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4115b4:	mov    rax,QWORD PTR [rbp-0x10]
  4115b8:	movzx  eax,BYTE PTR [rax]
  4115bb:	cmp    al,0x30
  4115bd:	jne    4115c5 <flatcc_json_parser_unmatched_symbol@@Base+0x157>
  4115bf:	inc    QWORD PTR [rbp-0x10]
  4115c3:	jmp    411623 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  4115c5:	mov    rax,QWORD PTR [rbp-0x10]
  4115c9:	movzx  eax,BYTE PTR [rax]
  4115cc:	cmp    al,0x30
  4115ce:	jle    4115db <flatcc_json_parser_unmatched_symbol@@Base+0x16d>
  4115d0:	mov    rax,QWORD PTR [rbp-0x10]
  4115d4:	movzx  eax,BYTE PTR [rax]
  4115d7:	cmp    al,0x39
  4115d9:	jle    4115f9 <flatcc_json_parser_unmatched_symbol@@Base+0x18b>
  4115db:	mov    rdx,QWORD PTR [rbp-0x18]
  4115df:	mov    rsi,QWORD PTR [rbp-0x10]
  4115e3:	mov    rax,QWORD PTR [rbp-0x8]
  4115e7:	mov    ecx,0x6
  4115ec:	mov    rdi,rax
  4115ef:	call   410986 <flatcc_json_parser_set_error@@Base>
  4115f4:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4115f9:	inc    QWORD PTR [rbp-0x10]
  4115fd:	jmp    411603 <flatcc_json_parser_unmatched_symbol@@Base+0x195>
  4115ff:	inc    QWORD PTR [rbp-0x10]
  411603:	mov    rax,QWORD PTR [rbp-0x10]
  411607:	cmp    rax,QWORD PTR [rbp-0x18]
  41160b:	je     411623 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  41160d:	mov    rax,QWORD PTR [rbp-0x10]
  411611:	movzx  eax,BYTE PTR [rax]
  411614:	cmp    al,0x2f
  411616:	jle    411623 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  411618:	mov    rax,QWORD PTR [rbp-0x10]
  41161c:	movzx  eax,BYTE PTR [rax]
  41161f:	cmp    al,0x39
  411621:	jle    4115ff <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  411623:	mov    rax,QWORD PTR [rbp-0x10]
  411627:	cmp    rax,QWORD PTR [rbp-0x18]
  41162b:	je     41169a <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41162d:	mov    rax,QWORD PTR [rbp-0x10]
  411631:	movzx  eax,BYTE PTR [rax]
  411634:	cmp    al,0x2e
  411636:	jne    41169a <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  411638:	inc    QWORD PTR [rbp-0x10]
  41163c:	mov    rax,QWORD PTR [rbp-0x10]
  411640:	movzx  eax,BYTE PTR [rax]
  411643:	cmp    al,0x2f
  411645:	jle    411652 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
  411647:	mov    rax,QWORD PTR [rbp-0x10]
  41164b:	movzx  eax,BYTE PTR [rax]
  41164e:	cmp    al,0x39
  411650:	jle    411670 <flatcc_json_parser_unmatched_symbol@@Base+0x202>
  411652:	mov    rdx,QWORD PTR [rbp-0x18]
  411656:	mov    rsi,QWORD PTR [rbp-0x10]
  41165a:	mov    rax,QWORD PTR [rbp-0x8]
  41165e:	mov    ecx,0x6
  411663:	mov    rdi,rax
  411666:	call   410986 <flatcc_json_parser_set_error@@Base>
  41166b:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  411670:	inc    QWORD PTR [rbp-0x10]
  411674:	jmp    41167a <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
  411676:	inc    QWORD PTR [rbp-0x10]
  41167a:	mov    rax,QWORD PTR [rbp-0x10]
  41167e:	cmp    rax,QWORD PTR [rbp-0x18]
  411682:	je     41169a <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  411684:	mov    rax,QWORD PTR [rbp-0x10]
  411688:	movzx  eax,BYTE PTR [rax]
  41168b:	cmp    al,0x2f
  41168d:	jle    41169a <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41168f:	mov    rax,QWORD PTR [rbp-0x10]
  411693:	movzx  eax,BYTE PTR [rax]
  411696:	cmp    al,0x39
  411698:	jle    411676 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
  41169a:	mov    rax,QWORD PTR [rbp-0x10]
  41169e:	cmp    rax,QWORD PTR [rbp-0x18]
  4116a2:	je     411770 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  4116a8:	mov    rax,QWORD PTR [rbp-0x10]
  4116ac:	movzx  eax,BYTE PTR [rax]
  4116af:	cmp    al,0x65
  4116b1:	je     4116c2 <flatcc_json_parser_unmatched_symbol@@Base+0x254>
  4116b3:	mov    rax,QWORD PTR [rbp-0x10]
  4116b7:	movzx  eax,BYTE PTR [rax]
  4116ba:	cmp    al,0x45
  4116bc:	jne    411770 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  4116c2:	inc    QWORD PTR [rbp-0x10]
  4116c6:	mov    rax,QWORD PTR [rbp-0x10]
  4116ca:	cmp    rax,QWORD PTR [rbp-0x18]
  4116ce:	jne    4116ee <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  4116d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4116d4:	mov    rsi,QWORD PTR [rbp-0x10]
  4116d8:	mov    rax,QWORD PTR [rbp-0x8]
  4116dc:	mov    ecx,0x6
  4116e1:	mov    rdi,rax
  4116e4:	call   410986 <flatcc_json_parser_set_error@@Base>
  4116e9:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4116ee:	mov    rax,QWORD PTR [rbp-0x10]
  4116f2:	movzx  eax,BYTE PTR [rax]
  4116f5:	cmp    al,0x2b
  4116f7:	je     411704 <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  4116f9:	mov    rax,QWORD PTR [rbp-0x10]
  4116fd:	movzx  eax,BYTE PTR [rax]
  411700:	cmp    al,0x2d
  411702:	jne    411708 <flatcc_json_parser_unmatched_symbol@@Base+0x29a>
  411704:	inc    QWORD PTR [rbp-0x10]
  411708:	mov    rax,QWORD PTR [rbp-0x10]
  41170c:	cmp    rax,QWORD PTR [rbp-0x18]
  411710:	je     411728 <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  411712:	mov    rax,QWORD PTR [rbp-0x10]
  411716:	movzx  eax,BYTE PTR [rax]
  411719:	cmp    al,0x2f
  41171b:	jle    411728 <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  41171d:	mov    rax,QWORD PTR [rbp-0x10]
  411721:	movzx  eax,BYTE PTR [rax]
  411724:	cmp    al,0x39
  411726:	jle    411746 <flatcc_json_parser_unmatched_symbol@@Base+0x2d8>
  411728:	mov    rdx,QWORD PTR [rbp-0x18]
  41172c:	mov    rsi,QWORD PTR [rbp-0x10]
  411730:	mov    rax,QWORD PTR [rbp-0x8]
  411734:	mov    ecx,0x6
  411739:	mov    rdi,rax
  41173c:	call   410986 <flatcc_json_parser_set_error@@Base>
  411741:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  411746:	inc    QWORD PTR [rbp-0x10]
  41174a:	jmp    411750 <flatcc_json_parser_unmatched_symbol@@Base+0x2e2>
  41174c:	inc    QWORD PTR [rbp-0x10]
  411750:	mov    rax,QWORD PTR [rbp-0x10]
  411754:	cmp    rax,QWORD PTR [rbp-0x18]
  411758:	je     411770 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  41175a:	mov    rax,QWORD PTR [rbp-0x10]
  41175e:	movzx  eax,BYTE PTR [rax]
  411761:	cmp    al,0x2f
  411763:	jle    411770 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  411765:	mov    rax,QWORD PTR [rbp-0x10]
  411769:	movzx  eax,BYTE PTR [rax]
  41176c:	cmp    al,0x39
  41176e:	jle    41174c <flatcc_json_parser_unmatched_symbol@@Base+0x2de>
  411770:	mov    rax,QWORD PTR [rbp-0x10]
  411774:	cmp    rax,QWORD PTR [rbp-0x18]
  411778:	je     4117c0 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41177a:	mov    rax,QWORD PTR [rbp-0x10]
  41177e:	movzx  eax,BYTE PTR [rax]
  411781:	movsx  eax,al
  411784:	cmp    eax,0x20
  411787:	je     4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  411789:	cmp    eax,0x20
  41178c:	jg     41179f <flatcc_json_parser_unmatched_symbol@@Base+0x331>
  41178e:	cmp    eax,0x9
  411791:	jl     4117c0 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  411793:	cmp    eax,0xb
  411796:	jle    4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  411798:	cmp    eax,0xd
  41179b:	je     4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41179d:	jmp    4117c0 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41179f:	cmp    eax,0x3a
  4117a2:	je     4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  4117a4:	cmp    eax,0x3a
  4117a7:	jg     4117b0 <flatcc_json_parser_unmatched_symbol@@Base+0x342>
  4117a9:	cmp    eax,0x2c
  4117ac:	je     4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  4117ae:	jmp    4117c0 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  4117b0:	cmp    eax,0x5d
  4117b3:	je     4117ba <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  4117b5:	cmp    eax,0x7d
  4117b8:	jne    4117c0 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  4117ba:	mov    rax,QWORD PTR [rbp-0x10]
  4117be:	jmp    4117d9 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4117c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4117c4:	mov    rsi,QWORD PTR [rbp-0x10]
  4117c8:	mov    rax,QWORD PTR [rbp-0x8]
  4117cc:	mov    ecx,0x6
  4117d1:	mov    rdi,rax
  4117d4:	call   410986 <flatcc_json_parser_set_error@@Base>
  4117d9:	leave  
  4117da:	ret    

00000000004117db <flatcc_json_parser_double@@Base>:
  4117db:	endbr64 
  4117df:	push   rbp
  4117e0:	mov    rbp,rsp
  4117e3:	sub    rsp,0x30
  4117e7:	mov    QWORD PTR [rbp-0x18],rdi
  4117eb:	mov    QWORD PTR [rbp-0x20],rsi
  4117ef:	mov    QWORD PTR [rbp-0x28],rdx
  4117f3:	mov    QWORD PTR [rbp-0x30],rcx
  4117f7:	mov    rax,QWORD PTR [rbp-0x30]
  4117fb:	vxorpd xmm0,xmm0,xmm0
  4117ff:	vmovsd QWORD PTR [rax],xmm0
  411803:	mov    rax,QWORD PTR [rbp-0x20]
  411807:	cmp    rax,QWORD PTR [rbp-0x28]
  41180b:	jne    411816 <flatcc_json_parser_double@@Base+0x3b>
  41180d:	mov    rax,QWORD PTR [rbp-0x20]
  411811:	jmp    41191e <flatcc_json_parser_double@@Base+0x143>
  411816:	mov    rax,QWORD PTR [rbp-0x20]
  41181a:	mov    QWORD PTR [rbp-0x10],rax
  41181e:	mov    rax,QWORD PTR [rbp-0x20]
  411822:	movzx  eax,BYTE PTR [rax]
  411825:	cmp    al,0x2d
  411827:	jne    41182d <flatcc_json_parser_double@@Base+0x52>
  411829:	inc    QWORD PTR [rbp-0x10]
  41182d:	mov    rax,QWORD PTR [rbp-0x28]
  411831:	sub    rax,QWORD PTR [rbp-0x10]
  411835:	cmp    rax,0x1
  411839:	jle    41187d <flatcc_json_parser_double@@Base+0xa2>
  41183b:	mov    rax,QWORD PTR [rbp-0x10]
  41183f:	movzx  eax,BYTE PTR [rax]
  411842:	cmp    al,0x2e
  411844:	je     41185f <flatcc_json_parser_double@@Base+0x84>
  411846:	mov    rax,QWORD PTR [rbp-0x10]
  41184a:	movzx  eax,BYTE PTR [rax]
  41184d:	cmp    al,0x30
  41184f:	jne    41187d <flatcc_json_parser_double@@Base+0xa2>
  411851:	mov    rax,QWORD PTR [rbp-0x10]
  411855:	inc    rax
  411858:	movzx  eax,BYTE PTR [rax]
  41185b:	cmp    al,0x30
  41185d:	jne    41187d <flatcc_json_parser_double@@Base+0xa2>
  41185f:	mov    rdx,QWORD PTR [rbp-0x28]
  411863:	mov    rsi,QWORD PTR [rbp-0x20]
  411867:	mov    rax,QWORD PTR [rbp-0x18]
  41186b:	mov    ecx,0x6
  411870:	mov    rdi,rax
  411873:	call   410986 <flatcc_json_parser_set_error@@Base>
  411878:	jmp    41191e <flatcc_json_parser_double@@Base+0x143>
  41187d:	mov    rax,QWORD PTR [rbp-0x28]
  411881:	sub    rax,QWORD PTR [rbp-0x20]
  411885:	mov    ecx,eax
  411887:	mov    rdx,QWORD PTR [rbp-0x30]
  41188b:	mov    rax,QWORD PTR [rbp-0x20]
  41188f:	mov    esi,ecx
  411891:	mov    rdi,rax
  411894:	call   40fe45 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  411899:	mov    QWORD PTR [rbp-0x8],rax
  41189d:	cmp    QWORD PTR [rbp-0x8],0x0
  4118a2:	je     4118ae <flatcc_json_parser_double@@Base+0xd3>
  4118a4:	mov    rax,QWORD PTR [rbp-0x8]
  4118a8:	cmp    rax,QWORD PTR [rbp-0x20]
  4118ac:	jne    41191a <flatcc_json_parser_double@@Base+0x13f>
  4118ae:	mov    rax,QWORD PTR [rbp-0x30]
  4118b2:	vmovsd xmm1,QWORD PTR [rax]
  4118b6:	vmovq  xmm0,QWORD PTR [rip+0x4c52]        # 416510 <flatcc_builder_padding_base@@Base+0x2170>
  4118be:	vandpd xmm0,xmm0,xmm1
  4118c2:	vucomisd xmm0,QWORD PTR [rip+0x4c56]        # 416520 <flatcc_builder_padding_base@@Base+0x2180>
  4118ca:	setbe  al
  4118cd:	xor    eax,0x1
  4118d0:	test   al,al
  4118d2:	je     4118db <flatcc_json_parser_double@@Base+0x100>
  4118d4:	mov    eax,0x1
  4118d9:	jmp    4118e0 <flatcc_json_parser_double@@Base+0x105>
  4118db:	mov    eax,0x0
  4118e0:	test   al,al
  4118e2:	je     4118ff <flatcc_json_parser_double@@Base+0x124>
  4118e4:	mov    rdx,QWORD PTR [rbp-0x28]
  4118e8:	mov    rsi,QWORD PTR [rbp-0x20]
  4118ec:	mov    rax,QWORD PTR [rbp-0x18]
  4118f0:	mov    ecx,0x7
  4118f5:	mov    rdi,rax
  4118f8:	call   410986 <flatcc_json_parser_set_error@@Base>
  4118fd:	jmp    41191e <flatcc_json_parser_double@@Base+0x143>
  4118ff:	mov    rdx,QWORD PTR [rbp-0x28]
  411903:	mov    rsi,QWORD PTR [rbp-0x20]
  411907:	mov    rax,QWORD PTR [rbp-0x18]
  41190b:	mov    ecx,0x6
  411910:	mov    rdi,rax
  411913:	call   410986 <flatcc_json_parser_set_error@@Base>
  411918:	jmp    41191e <flatcc_json_parser_double@@Base+0x143>
  41191a:	mov    rax,QWORD PTR [rbp-0x8]
  41191e:	leave  
  41191f:	ret    

0000000000411920 <flatcc_json_parser_float@@Base>:
  411920:	endbr64 
  411924:	push   rbp
  411925:	mov    rbp,rsp
  411928:	sub    rsp,0x30
  41192c:	mov    QWORD PTR [rbp-0x18],rdi
  411930:	mov    QWORD PTR [rbp-0x20],rsi
  411934:	mov    QWORD PTR [rbp-0x28],rdx
  411938:	mov    QWORD PTR [rbp-0x30],rcx
  41193c:	mov    rax,QWORD PTR [rbp-0x30]
  411940:	vxorps xmm0,xmm0,xmm0
  411944:	vmovss DWORD PTR [rax],xmm0
  411948:	mov    rax,QWORD PTR [rbp-0x20]
  41194c:	cmp    rax,QWORD PTR [rbp-0x28]
  411950:	jne    41195b <flatcc_json_parser_float@@Base+0x3b>
  411952:	mov    rax,QWORD PTR [rbp-0x20]
  411956:	jmp    411a63 <flatcc_json_parser_float@@Base+0x143>
  41195b:	mov    rax,QWORD PTR [rbp-0x20]
  41195f:	mov    QWORD PTR [rbp-0x10],rax
  411963:	mov    rax,QWORD PTR [rbp-0x20]
  411967:	movzx  eax,BYTE PTR [rax]
  41196a:	cmp    al,0x2d
  41196c:	jne    411972 <flatcc_json_parser_float@@Base+0x52>
  41196e:	inc    QWORD PTR [rbp-0x10]
  411972:	mov    rax,QWORD PTR [rbp-0x28]
  411976:	sub    rax,QWORD PTR [rbp-0x10]
  41197a:	cmp    rax,0x1
  41197e:	jle    4119c2 <flatcc_json_parser_float@@Base+0xa2>
  411980:	mov    rax,QWORD PTR [rbp-0x10]
  411984:	movzx  eax,BYTE PTR [rax]
  411987:	cmp    al,0x2e
  411989:	je     4119a4 <flatcc_json_parser_float@@Base+0x84>
  41198b:	mov    rax,QWORD PTR [rbp-0x10]
  41198f:	movzx  eax,BYTE PTR [rax]
  411992:	cmp    al,0x30
  411994:	jne    4119c2 <flatcc_json_parser_float@@Base+0xa2>
  411996:	mov    rax,QWORD PTR [rbp-0x10]
  41199a:	inc    rax
  41199d:	movzx  eax,BYTE PTR [rax]
  4119a0:	cmp    al,0x30
  4119a2:	jne    4119c2 <flatcc_json_parser_float@@Base+0xa2>
  4119a4:	mov    rdx,QWORD PTR [rbp-0x28]
  4119a8:	mov    rsi,QWORD PTR [rbp-0x20]
  4119ac:	mov    rax,QWORD PTR [rbp-0x18]
  4119b0:	mov    ecx,0x6
  4119b5:	mov    rdi,rax
  4119b8:	call   410986 <flatcc_json_parser_set_error@@Base>
  4119bd:	jmp    411a63 <flatcc_json_parser_float@@Base+0x143>
  4119c2:	mov    rax,QWORD PTR [rbp-0x28]
  4119c6:	sub    rax,QWORD PTR [rbp-0x20]
  4119ca:	mov    ecx,eax
  4119cc:	mov    rdx,QWORD PTR [rbp-0x30]
  4119d0:	mov    rax,QWORD PTR [rbp-0x20]
  4119d4:	mov    esi,ecx
  4119d6:	mov    rdi,rax
  4119d9:	call   40fe6f <grisu3_diy_fp_encode_double@@Base+0xf79>
  4119de:	mov    QWORD PTR [rbp-0x8],rax
  4119e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4119e7:	je     4119f3 <flatcc_json_parser_float@@Base+0xd3>
  4119e9:	mov    rax,QWORD PTR [rbp-0x8]
  4119ed:	cmp    rax,QWORD PTR [rbp-0x20]
  4119f1:	jne    411a5f <flatcc_json_parser_float@@Base+0x13f>
  4119f3:	mov    rax,QWORD PTR [rbp-0x30]
  4119f7:	vmovss xmm1,DWORD PTR [rax]
  4119fb:	vmovss xmm0,DWORD PTR [rip+0x4aed]        # 4164f0 <flatcc_builder_padding_base@@Base+0x2150>
  411a03:	vandps xmm0,xmm0,xmm1
  411a07:	vucomiss xmm0,DWORD PTR [rip+0x4af1]        # 416500 <flatcc_builder_padding_base@@Base+0x2160>
  411a0f:	setbe  al
  411a12:	xor    eax,0x1
  411a15:	test   al,al
  411a17:	je     411a20 <flatcc_json_parser_float@@Base+0x100>
  411a19:	mov    eax,0x1
  411a1e:	jmp    411a25 <flatcc_json_parser_float@@Base+0x105>
  411a20:	mov    eax,0x0
  411a25:	test   al,al
  411a27:	je     411a44 <flatcc_json_parser_float@@Base+0x124>
  411a29:	mov    rdx,QWORD PTR [rbp-0x28]
  411a2d:	mov    rsi,QWORD PTR [rbp-0x20]
  411a31:	mov    rax,QWORD PTR [rbp-0x18]
  411a35:	mov    ecx,0x7
  411a3a:	mov    rdi,rax
  411a3d:	call   410986 <flatcc_json_parser_set_error@@Base>
  411a42:	jmp    411a63 <flatcc_json_parser_float@@Base+0x143>
  411a44:	mov    rdx,QWORD PTR [rbp-0x28]
  411a48:	mov    rsi,QWORD PTR [rbp-0x20]
  411a4c:	mov    rax,QWORD PTR [rbp-0x18]
  411a50:	mov    ecx,0x6
  411a55:	mov    rdi,rax
  411a58:	call   410986 <flatcc_json_parser_set_error@@Base>
  411a5d:	jmp    411a63 <flatcc_json_parser_float@@Base+0x143>
  411a5f:	mov    rax,QWORD PTR [rbp-0x8]
  411a63:	leave  
  411a64:	ret    

0000000000411a65 <flatcc_json_parser_generic_json@@Base>:
  411a65:	endbr64 
  411a69:	push   rbp
  411a6a:	mov    rbp,rsp
  411a6d:	sub    rsp,0x260
  411a74:	mov    QWORD PTR [rbp-0x248],rdi
  411a7b:	mov    QWORD PTR [rbp-0x250],rsi
  411a82:	mov    QWORD PTR [rbp-0x258],rdx
  411a89:	mov    rax,QWORD PTR fs:0x28
  411a92:	mov    QWORD PTR [rbp-0x8],rax
  411a96:	xor    eax,eax
  411a98:	mov    DWORD PTR [rbp-0x234],0x0
  411aa2:	lea    rax,[rbp-0x210]
  411aa9:	mov    QWORD PTR [rbp-0x230],rax
  411ab0:	mov    rax,QWORD PTR [rbp-0x230]
  411ab7:	add    rax,0x200
  411abd:	mov    QWORD PTR [rbp-0x228],rax
  411ac4:	mov    rax,QWORD PTR [rbp-0x250]
  411acb:	cmp    rax,QWORD PTR [rbp-0x258]
  411ad2:	jne    411ae0 <flatcc_json_parser_generic_json@@Base+0x7b>
  411ad4:	mov    rax,QWORD PTR [rbp-0x250]
  411adb:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411ae0:	lea    rax,[rbp-0x210]
  411ae7:	cmp    QWORD PTR [rbp-0x230],rax
  411aee:	je     411c15 <flatcc_json_parser_generic_json@@Base+0x1b0>
  411af4:	mov    rax,QWORD PTR [rbp-0x230]
  411afb:	dec    rax
  411afe:	movzx  eax,BYTE PTR [rax]
  411b01:	cmp    al,0x7d
  411b03:	jne    411c15 <flatcc_json_parser_generic_json@@Base+0x1b0>
  411b09:	mov    rdx,QWORD PTR [rbp-0x258]
  411b10:	mov    rcx,QWORD PTR [rbp-0x250]
  411b17:	mov    rax,QWORD PTR [rbp-0x248]
  411b1e:	mov    rsi,rcx
  411b21:	mov    rdi,rax
  411b24:	call   40cb3d <flatcc_emitter_copy_buffer@@Base+0x2f9>
  411b29:	mov    QWORD PTR [rbp-0x250],rax
  411b30:	mov    rdx,QWORD PTR [rbp-0x258]
  411b37:	mov    rcx,QWORD PTR [rbp-0x250]
  411b3e:	mov    rax,QWORD PTR [rbp-0x248]
  411b45:	mov    rsi,rcx
  411b48:	mov    rdi,rax
  411b4b:	call   40cbb4 <flatcc_emitter_copy_buffer@@Base+0x370>
  411b50:	mov    QWORD PTR [rbp-0x250],rax
  411b57:	mov    rdx,QWORD PTR [rbp-0x258]
  411b5e:	mov    rcx,QWORD PTR [rbp-0x250]
  411b65:	mov    rax,QWORD PTR [rbp-0x248]
  411b6c:	mov    rsi,rcx
  411b6f:	mov    rdi,rax
  411b72:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  411b77:	mov    QWORD PTR [rbp-0x250],rax
  411b7e:	mov    rax,QWORD PTR [rbp-0x250]
  411b85:	cmp    rax,QWORD PTR [rbp-0x258]
  411b8c:	jne    411bb5 <flatcc_json_parser_generic_json@@Base+0x150>
  411b8e:	mov    rdx,QWORD PTR [rbp-0x258]
  411b95:	mov    rsi,QWORD PTR [rbp-0x250]
  411b9c:	mov    rax,QWORD PTR [rbp-0x248]
  411ba3:	mov    ecx,0xa
  411ba8:	mov    rdi,rax
  411bab:	call   410986 <flatcc_json_parser_set_error@@Base>
  411bb0:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411bb5:	mov    rax,QWORD PTR [rbp-0x250]
  411bbc:	movzx  eax,BYTE PTR [rax]
  411bbf:	cmp    al,0x3a
  411bc1:	je     411bea <flatcc_json_parser_generic_json@@Base+0x185>
  411bc3:	mov    rdx,QWORD PTR [rbp-0x258]
  411bca:	mov    rsi,QWORD PTR [rbp-0x250]
  411bd1:	mov    rax,QWORD PTR [rbp-0x248]
  411bd8:	mov    ecx,0x4
  411bdd:	mov    rdi,rax
  411be0:	call   410986 <flatcc_json_parser_set_error@@Base>
  411be5:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411bea:	mov    rax,QWORD PTR [rbp-0x250]
  411bf1:	lea    rcx,[rax+0x1]
  411bf5:	mov    rdx,QWORD PTR [rbp-0x258]
  411bfc:	mov    rax,QWORD PTR [rbp-0x248]
  411c03:	mov    rsi,rcx
  411c06:	mov    rdi,rax
  411c09:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  411c0e:	mov    QWORD PTR [rbp-0x250],rax
  411c15:	mov    rax,QWORD PTR [rbp-0x250]
  411c1c:	movzx  eax,BYTE PTR [rax]
  411c1f:	movsx  eax,al
  411c22:	cmp    eax,0x39
  411c25:	jg     411c43 <flatcc_json_parser_generic_json@@Base+0x1de>
  411c27:	cmp    eax,0x30
  411c2a:	jge    411d44 <flatcc_json_parser_generic_json@@Base+0x2df>
  411c30:	cmp    eax,0x22
  411c33:	je     411c5a <flatcc_json_parser_generic_json@@Base+0x1f5>
  411c35:	cmp    eax,0x2d
  411c38:	je     411d44 <flatcc_json_parser_generic_json@@Base+0x2df>
  411c3e:	jmp    411eb0 <flatcc_json_parser_generic_json@@Base+0x44b>
  411c43:	cmp    eax,0x5b
  411c46:	je     411d70 <flatcc_json_parser_generic_json@@Base+0x30b>
  411c4c:	cmp    eax,0x7b
  411c4f:	je     411e12 <flatcc_json_parser_generic_json@@Base+0x3ad>
  411c55:	jmp    411eb0 <flatcc_json_parser_generic_json@@Base+0x44b>
  411c5a:	mov    rdx,QWORD PTR [rbp-0x258]
  411c61:	mov    rcx,QWORD PTR [rbp-0x250]
  411c68:	mov    rax,QWORD PTR [rbp-0x248]
  411c6f:	mov    rsi,rcx
  411c72:	mov    rdi,rax
  411c75:	call   40caa1 <flatcc_emitter_copy_buffer@@Base+0x25d>
  411c7a:	mov    QWORD PTR [rbp-0x250],rax
  411c81:	jmp    411cf3 <flatcc_json_parser_generic_json@@Base+0x28e>
  411c83:	mov    rdx,QWORD PTR [rbp-0x258]
  411c8a:	mov    rcx,QWORD PTR [rbp-0x250]
  411c91:	mov    rax,QWORD PTR [rbp-0x248]
  411c98:	mov    rsi,rcx
  411c9b:	mov    rdi,rax
  411c9e:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  411ca3:	mov    QWORD PTR [rbp-0x250],rax
  411caa:	mov    rax,QWORD PTR [rbp-0x250]
  411cb1:	cmp    rax,QWORD PTR [rbp-0x258]
  411cb8:	je     411cc8 <flatcc_json_parser_generic_json@@Base+0x263>
  411cba:	mov    rax,QWORD PTR [rbp-0x250]
  411cc1:	movzx  eax,BYTE PTR [rax]
  411cc4:	cmp    al,0x22
  411cc6:	je     411d17 <flatcc_json_parser_generic_json@@Base+0x2b2>
  411cc8:	lea    rcx,[rbp-0x214]
  411ccf:	mov    rdx,QWORD PTR [rbp-0x258]
  411cd6:	mov    rsi,QWORD PTR [rbp-0x250]
  411cdd:	mov    rax,QWORD PTR [rbp-0x248]
  411ce4:	mov    rdi,rax
  411ce7:	call   410bdd <flatcc_json_parser_string_escape@@Base>
  411cec:	mov    QWORD PTR [rbp-0x250],rax
  411cf3:	mov    rax,QWORD PTR [rbp-0x250]
  411cfa:	cmp    rax,QWORD PTR [rbp-0x258]
  411d01:	je     411d18 <flatcc_json_parser_generic_json@@Base+0x2b3>
  411d03:	mov    rax,QWORD PTR [rbp-0x250]
  411d0a:	movzx  eax,BYTE PTR [rax]
  411d0d:	cmp    al,0x22
  411d0f:	jne    411c83 <flatcc_json_parser_generic_json@@Base+0x21e>
  411d15:	jmp    411d18 <flatcc_json_parser_generic_json@@Base+0x2b3>
  411d17:	nop
  411d18:	mov    rdx,QWORD PTR [rbp-0x258]
  411d1f:	mov    rcx,QWORD PTR [rbp-0x250]
  411d26:	mov    rax,QWORD PTR [rbp-0x248]
  411d2d:	mov    rsi,rcx
  411d30:	mov    rdi,rax
  411d33:	call   40caef <flatcc_emitter_copy_buffer@@Base+0x2ab>
  411d38:	mov    QWORD PTR [rbp-0x250],rax
  411d3f:	jmp    411f29 <flatcc_json_parser_generic_json@@Base+0x4c4>
  411d44:	mov    rdx,QWORD PTR [rbp-0x258]
  411d4b:	mov    rcx,QWORD PTR [rbp-0x250]
  411d52:	mov    rax,QWORD PTR [rbp-0x248]
  411d59:	mov    rsi,rcx
  411d5c:	mov    rdi,rax
  411d5f:	call   411552 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  411d64:	mov    QWORD PTR [rbp-0x250],rax
  411d6b:	jmp    411f29 <flatcc_json_parser_generic_json@@Base+0x4c4>
  411d70:	mov    rax,QWORD PTR [rbp-0x230]
  411d77:	cmp    rax,QWORD PTR [rbp-0x228]
  411d7e:	jne    411da7 <flatcc_json_parser_generic_json@@Base+0x342>
  411d80:	mov    rdx,QWORD PTR [rbp-0x258]
  411d87:	mov    rsi,QWORD PTR [rbp-0x250]
  411d8e:	mov    rax,QWORD PTR [rbp-0x248]
  411d95:	mov    ecx,0x2
  411d9a:	mov    rdi,rax
  411d9d:	call   410986 <flatcc_json_parser_set_error@@Base>
  411da2:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411da7:	mov    rax,QWORD PTR [rbp-0x230]
  411dae:	lea    rdx,[rax+0x1]
  411db2:	mov    QWORD PTR [rbp-0x230],rdx
  411db9:	mov    BYTE PTR [rax],0x5d
  411dbc:	mov    rax,QWORD PTR [rbp-0x250]
  411dc3:	lea    rcx,[rax+0x1]
  411dc7:	mov    rdx,QWORD PTR [rbp-0x258]
  411dce:	mov    rax,QWORD PTR [rbp-0x248]
  411dd5:	mov    rsi,rcx
  411dd8:	mov    rdi,rax
  411ddb:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  411de0:	mov    QWORD PTR [rbp-0x250],rax
  411de7:	mov    rax,QWORD PTR [rbp-0x250]
  411dee:	cmp    rax,QWORD PTR [rbp-0x258]
  411df5:	je     411ac4 <flatcc_json_parser_generic_json@@Base+0x5f>
  411dfb:	mov    rax,QWORD PTR [rbp-0x250]
  411e02:	movzx  eax,BYTE PTR [rax]
  411e05:	cmp    al,0x5d
  411e07:	je     411f1c <flatcc_json_parser_generic_json@@Base+0x4b7>
  411e0d:	jmp    411ac4 <flatcc_json_parser_generic_json@@Base+0x5f>
  411e12:	mov    rax,QWORD PTR [rbp-0x230]
  411e19:	cmp    rax,QWORD PTR [rbp-0x228]
  411e20:	jne    411e49 <flatcc_json_parser_generic_json@@Base+0x3e4>
  411e22:	mov    rdx,QWORD PTR [rbp-0x258]
  411e29:	mov    rsi,QWORD PTR [rbp-0x250]
  411e30:	mov    rax,QWORD PTR [rbp-0x248]
  411e37:	mov    ecx,0x2
  411e3c:	mov    rdi,rax
  411e3f:	call   410986 <flatcc_json_parser_set_error@@Base>
  411e44:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411e49:	mov    rax,QWORD PTR [rbp-0x230]
  411e50:	lea    rdx,[rax+0x1]
  411e54:	mov    QWORD PTR [rbp-0x230],rdx
  411e5b:	mov    BYTE PTR [rax],0x7d
  411e5e:	mov    rax,QWORD PTR [rbp-0x250]
  411e65:	lea    rcx,[rax+0x1]
  411e69:	mov    rdx,QWORD PTR [rbp-0x258]
  411e70:	mov    rax,QWORD PTR [rbp-0x248]
  411e77:	mov    rsi,rcx
  411e7a:	mov    rdi,rax
  411e7d:	call   40ca33 <flatcc_emitter_copy_buffer@@Base+0x1ef>
  411e82:	mov    QWORD PTR [rbp-0x250],rax
  411e89:	mov    rax,QWORD PTR [rbp-0x250]
  411e90:	cmp    rax,QWORD PTR [rbp-0x258]
  411e97:	je     411ac4 <flatcc_json_parser_generic_json@@Base+0x5f>
  411e9d:	mov    rax,QWORD PTR [rbp-0x250]
  411ea4:	movzx  eax,BYTE PTR [rax]
  411ea7:	cmp    al,0x7d
  411ea9:	je     411f22 <flatcc_json_parser_generic_json@@Base+0x4bd>
  411eab:	jmp    411ac4 <flatcc_json_parser_generic_json@@Base+0x5f>
  411eb0:	mov    rax,QWORD PTR [rbp-0x250]
  411eb7:	mov    QWORD PTR [rbp-0x220],rax
  411ebe:	mov    rdx,QWORD PTR [rbp-0x258]
  411ec5:	mov    rcx,QWORD PTR [rbp-0x220]
  411ecc:	mov    rax,QWORD PTR [rbp-0x248]
  411ed3:	mov    rsi,rcx
  411ed6:	mov    rdi,rax
  411ed9:	call   4111ac <flatcc_json_parser_skip_constant@@Base>
  411ede:	mov    QWORD PTR [rbp-0x250],rax
  411ee5:	mov    rax,QWORD PTR [rbp-0x220]
  411eec:	cmp    rax,QWORD PTR [rbp-0x250]
  411ef3:	jne    411f28 <flatcc_json_parser_generic_json@@Base+0x4c3>
  411ef5:	mov    rdx,QWORD PTR [rbp-0x258]
  411efc:	mov    rsi,QWORD PTR [rbp-0x250]
  411f03:	mov    rax,QWORD PTR [rbp-0x248]
  411f0a:	mov    ecx,0x5
  411f0f:	mov    rdi,rax
  411f12:	call   410986 <flatcc_json_parser_set_error@@Base>
  411f17:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411f1c:	nop
  411f1d:	jmp    411fb1 <flatcc_json_parser_generic_json@@Base+0x54c>
  411f22:	nop
  411f23:	jmp    411fb1 <flatcc_json_parser_generic_json@@Base+0x54c>
  411f28:	nop
  411f29:	jmp    411fb1 <flatcc_json_parser_generic_json@@Base+0x54c>
  411f2e:	dec    QWORD PTR [rbp-0x230]
  411f35:	mov    rax,QWORD PTR [rbp-0x230]
  411f3c:	movzx  eax,BYTE PTR [rax]
  411f3f:	cmp    al,0x5d
  411f41:	jne    411f70 <flatcc_json_parser_generic_json@@Base+0x50b>
  411f43:	lea    rcx,[rbp-0x234]
  411f4a:	mov    rdx,QWORD PTR [rbp-0x258]
  411f51:	mov    rsi,QWORD PTR [rbp-0x250]
  411f58:	mov    rax,QWORD PTR [rbp-0x248]
  411f5f:	mov    rdi,rax
  411f62:	call   40cf2d <flatcc_emitter_copy_buffer@@Base+0x6e9>
  411f67:	mov    QWORD PTR [rbp-0x250],rax
  411f6e:	jmp    411f9b <flatcc_json_parser_generic_json@@Base+0x536>
  411f70:	lea    rcx,[rbp-0x234]
  411f77:	mov    rdx,QWORD PTR [rbp-0x258]
  411f7e:	mov    rsi,QWORD PTR [rbp-0x250]
  411f85:	mov    rax,QWORD PTR [rbp-0x248]
  411f8c:	mov    rdi,rax
  411f8f:	call   40cd32 <flatcc_emitter_copy_buffer@@Base+0x4ee>
  411f94:	mov    QWORD PTR [rbp-0x250],rax
  411f9b:	mov    eax,DWORD PTR [rbp-0x234]
  411fa1:	test   eax,eax
  411fa3:	je     411fb1 <flatcc_json_parser_generic_json@@Base+0x54c>
  411fa5:	inc    QWORD PTR [rbp-0x230]
  411fac:	jmp    411ac4 <flatcc_json_parser_generic_json@@Base+0x5f>
  411fb1:	mov    rax,QWORD PTR [rbp-0x250]
  411fb8:	cmp    rax,QWORD PTR [rbp-0x258]
  411fbf:	je     411fd5 <flatcc_json_parser_generic_json@@Base+0x570>
  411fc1:	lea    rax,[rbp-0x210]
  411fc8:	cmp    QWORD PTR [rbp-0x230],rax
  411fcf:	jne    411f2e <flatcc_json_parser_generic_json@@Base+0x4c9>
  411fd5:	mov    rax,QWORD PTR [rbp-0x250]
  411fdc:	cmp    rax,QWORD PTR [rbp-0x258]
  411fe3:	jne    412031 <flatcc_json_parser_generic_json@@Base+0x5cc>
  411fe5:	lea    rax,[rbp-0x210]
  411fec:	cmp    QWORD PTR [rbp-0x230],rax
  411ff3:	je     412031 <flatcc_json_parser_generic_json@@Base+0x5cc>
  411ff5:	mov    rax,QWORD PTR [rbp-0x230]
  411ffc:	dec    rax
  411fff:	movzx  eax,BYTE PTR [rax]
  412002:	cmp    al,0x5d
  412004:	jne    41200d <flatcc_json_parser_generic_json@@Base+0x5a8>
  412006:	mov    ecx,0x9
  41200b:	jmp    412012 <flatcc_json_parser_generic_json@@Base+0x5ad>
  41200d:	mov    ecx,0xa
  412012:	mov    rdx,QWORD PTR [rbp-0x258]
  412019:	mov    rsi,QWORD PTR [rbp-0x250]
  412020:	mov    rax,QWORD PTR [rbp-0x248]
  412027:	mov    rdi,rax
  41202a:	call   410986 <flatcc_json_parser_set_error@@Base>
  41202f:	jmp    412038 <flatcc_json_parser_generic_json@@Base+0x5d3>
  412031:	mov    rax,QWORD PTR [rbp-0x250]
  412038:	mov    rdi,QWORD PTR [rbp-0x8]
  41203c:	xor    rdi,QWORD PTR fs:0x28
  412045:	je     41204c <flatcc_json_parser_generic_json@@Base+0x5e7>
  412047:	call   403140 <__stack_chk_fail@plt>
  41204c:	leave  
  41204d:	ret    

000000000041204e <flatcc_json_parser_integer@@Base>:
  41204e:	endbr64 
  412052:	push   rbp
  412053:	mov    rbp,rsp
  412056:	sub    rsp,0x50
  41205a:	mov    QWORD PTR [rbp-0x28],rdi
  41205e:	mov    QWORD PTR [rbp-0x30],rsi
  412062:	mov    QWORD PTR [rbp-0x38],rdx
  412066:	mov    QWORD PTR [rbp-0x40],rcx
  41206a:	mov    QWORD PTR [rbp-0x48],r8
  41206e:	mov    QWORD PTR [rbp-0x18],0x0
  412076:	mov    rax,QWORD PTR [rbp-0x30]
  41207a:	cmp    rax,QWORD PTR [rbp-0x38]
  41207e:	jne    412089 <flatcc_json_parser_integer@@Base+0x3b>
  412080:	mov    rax,QWORD PTR [rbp-0x30]
  412084:	jmp    4121a9 <flatcc_json_parser_integer@@Base+0x15b>
  412089:	mov    rax,QWORD PTR [rbp-0x30]
  41208d:	mov    QWORD PTR [rbp-0x10],rax
  412091:	mov    rax,QWORD PTR [rbp-0x30]
  412095:	movzx  eax,BYTE PTR [rax]
  412098:	cmp    al,0x2d
  41209a:	sete   al
  41209d:	movzx  edx,al
  4120a0:	mov    rax,QWORD PTR [rbp-0x40]
  4120a4:	mov    DWORD PTR [rax],edx
  4120a6:	mov    rax,QWORD PTR [rbp-0x40]
  4120aa:	mov    eax,DWORD PTR [rax]
  4120ac:	cdqe   
  4120ae:	add    QWORD PTR [rbp-0x30],rax
  4120b2:	jmp    412120 <flatcc_json_parser_integer@@Base+0xd2>
  4120b4:	mov    rax,QWORD PTR [rbp-0x18]
  4120b8:	mov    QWORD PTR [rbp-0x8],rax
  4120bc:	mov    rdx,QWORD PTR [rbp-0x18]
  4120c0:	mov    rax,rdx
  4120c3:	shl    rax,0x2
  4120c7:	add    rax,rdx
  4120ca:	add    rax,rax
  4120cd:	mov    rdx,rax
  4120d0:	mov    rax,QWORD PTR [rbp-0x30]
  4120d4:	movzx  eax,BYTE PTR [rax]
  4120d7:	movsx  rax,al
  4120db:	add    rax,rdx
  4120de:	sub    rax,0x30
  4120e2:	mov    QWORD PTR [rbp-0x18],rax
  4120e6:	mov    rax,QWORD PTR [rbp-0x8]
  4120ea:	cmp    rax,QWORD PTR [rbp-0x18]
  4120ee:	jbe    41211c <flatcc_json_parser_integer@@Base+0xce>
  4120f0:	cmp    QWORD PTR [rbp-0x40],0x0
  4120f5:	je     4120fe <flatcc_json_parser_integer@@Base+0xb0>
  4120f7:	mov    ecx,0x8
  4120fc:	jmp    412103 <flatcc_json_parser_integer@@Base+0xb5>
  4120fe:	mov    ecx,0x7
  412103:	mov    rdx,QWORD PTR [rbp-0x38]
  412107:	mov    rsi,QWORD PTR [rbp-0x30]
  41210b:	mov    rax,QWORD PTR [rbp-0x28]
  41210f:	mov    rdi,rax
  412112:	call   410986 <flatcc_json_parser_set_error@@Base>
  412117:	jmp    4121a9 <flatcc_json_parser_integer@@Base+0x15b>
  41211c:	inc    QWORD PTR [rbp-0x30]
  412120:	mov    rax,QWORD PTR [rbp-0x30]
  412124:	cmp    rax,QWORD PTR [rbp-0x38]
  412128:	je     412144 <flatcc_json_parser_integer@@Base+0xf6>
  41212a:	mov    rax,QWORD PTR [rbp-0x30]
  41212e:	movzx  eax,BYTE PTR [rax]
  412131:	cmp    al,0x2f
  412133:	jle    412144 <flatcc_json_parser_integer@@Base+0xf6>
  412135:	mov    rax,QWORD PTR [rbp-0x30]
  412139:	movzx  eax,BYTE PTR [rax]
  41213c:	cmp    al,0x39
  41213e:	jle    4120b4 <flatcc_json_parser_integer@@Base+0x66>
  412144:	mov    rax,QWORD PTR [rbp-0x30]
  412148:	cmp    rax,QWORD PTR [rbp-0x10]
  41214c:	jne    412154 <flatcc_json_parser_integer@@Base+0x106>
  41214e:	mov    rax,QWORD PTR [rbp-0x30]
  412152:	jmp    4121a9 <flatcc_json_parser_integer@@Base+0x15b>
  412154:	mov    rax,QWORD PTR [rbp-0x30]
  412158:	cmp    rax,QWORD PTR [rbp-0x38]
  41215c:	je     41219a <flatcc_json_parser_integer@@Base+0x14c>
  41215e:	mov    rax,QWORD PTR [rbp-0x30]
  412162:	movzx  eax,BYTE PTR [rax]
  412165:	cmp    al,0x65
  412167:	je     41217f <flatcc_json_parser_integer@@Base+0x131>
  412169:	mov    rax,QWORD PTR [rbp-0x30]
  41216d:	movzx  eax,BYTE PTR [rax]
  412170:	cmp    al,0x45
  412172:	je     41217f <flatcc_json_parser_integer@@Base+0x131>
  412174:	mov    rax,QWORD PTR [rbp-0x30]
  412178:	movzx  eax,BYTE PTR [rax]
  41217b:	cmp    al,0x2e
  41217d:	jne    41219a <flatcc_json_parser_integer@@Base+0x14c>
  41217f:	mov    rdx,QWORD PTR [rbp-0x38]
  412183:	mov    rsi,QWORD PTR [rbp-0x30]
  412187:	mov    rax,QWORD PTR [rbp-0x28]
  41218b:	mov    ecx,0xc
  412190:	mov    rdi,rax
  412193:	call   410986 <flatcc_json_parser_set_error@@Base>
  412198:	jmp    4121a9 <flatcc_json_parser_integer@@Base+0x15b>
  41219a:	mov    rax,QWORD PTR [rbp-0x48]
  41219e:	mov    rdx,QWORD PTR [rbp-0x18]
  4121a2:	mov    QWORD PTR [rax],rdx
  4121a5:	mov    rax,QWORD PTR [rbp-0x30]
  4121a9:	leave  
  4121aa:	ret    

00000000004121ab <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  4121ab:	endbr64 
  4121af:	push   rbp
  4121b0:	mov    rbp,rsp
  4121b3:	sub    rsp,0x70
  4121b7:	mov    QWORD PTR [rbp-0x48],rdi
  4121bb:	mov    QWORD PTR [rbp-0x50],rsi
  4121bf:	mov    QWORD PTR [rbp-0x58],rdx
  4121c3:	mov    QWORD PTR [rbp-0x60],rcx
  4121c7:	mov    DWORD PTR [rbp-0x64],r8d
  4121cb:	mov    rax,QWORD PTR fs:0x28
  4121d4:	mov    QWORD PTR [rbp-0x8],rax
  4121d8:	xor    eax,eax
  4121da:	cmp    DWORD PTR [rbp-0x64],0x0
  4121de:	setne  al
  4121e1:	movzx  eax,al
  4121e4:	mov    DWORD PTR [rbp-0x38],eax
  4121e7:	mov    rdx,QWORD PTR [rbp-0x58]
  4121eb:	mov    rcx,QWORD PTR [rbp-0x50]
  4121ef:	mov    rax,QWORD PTR [rbp-0x48]
  4121f3:	mov    rsi,rcx
  4121f6:	mov    rdi,rax
  4121f9:	call   40caa1 <flatcc_emitter_copy_buffer@@Base+0x25d>
  4121fe:	mov    QWORD PTR [rbp-0x50],rax
  412202:	mov    rax,QWORD PTR [rbp-0x50]
  412206:	mov    QWORD PTR [rbp-0x20],rax
  41220a:	mov    rdx,QWORD PTR [rbp-0x58]
  41220e:	mov    rcx,QWORD PTR [rbp-0x20]
  412212:	mov    rax,QWORD PTR [rbp-0x48]
  412216:	mov    rsi,rcx
  412219:	mov    rdi,rax
  41221c:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  412221:	mov    QWORD PTR [rbp-0x50],rax
  412225:	mov    rax,QWORD PTR [rbp-0x50]
  412229:	cmp    rax,QWORD PTR [rbp-0x58]
  41222d:	je     4123a9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  412233:	mov    rax,QWORD PTR [rbp-0x50]
  412237:	movzx  eax,BYTE PTR [rax]
  41223a:	cmp    al,0x22
  41223c:	jne    4123a9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  412242:	mov    rax,QWORD PTR [rbp-0x50]
  412246:	sub    rax,QWORD PTR [rbp-0x20]
  41224a:	mov    rdi,rax
  41224d:	call   410052 <grisu3_diy_fp_encode_double@@Base+0x115c>
  412252:	mov    QWORD PTR [rbp-0x18],rax
  412256:	mov    rax,QWORD PTR [rbp-0x48]
  41225a:	mov    rax,QWORD PTR [rax]
  41225d:	mov    ecx,0xffffffff
  412262:	mov    edx,0x1
  412267:	mov    esi,0x1
  41226c:	mov    rdi,rax
  41226f:	call   40921b <flatcc_builder_start_vector@@Base>
  412274:	test   eax,eax
  412276:	jne    41237a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1cf>
  41227c:	mov    rax,QWORD PTR [rbp-0x48]
  412280:	mov    rax,QWORD PTR [rax]
  412283:	mov    rdx,QWORD PTR [rbp-0x18]
  412287:	mov    rsi,rdx
  41228a:	mov    rdi,rax
  41228d:	call   408acb <flatcc_builder_extend_vector@@Base>
  412292:	mov    QWORD PTR [rbp-0x10],rax
  412296:	cmp    QWORD PTR [rbp-0x10],0x0
  41229b:	je     41237d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  4122a1:	mov    rax,QWORD PTR [rbp-0x50]
  4122a5:	sub    rax,QWORD PTR [rbp-0x20]
  4122a9:	mov    QWORD PTR [rbp-0x28],rax
  4122ad:	mov    rax,QWORD PTR [rbp-0x18]
  4122b1:	mov    QWORD PTR [rbp-0x30],rax
  4122b5:	mov    edi,DWORD PTR [rbp-0x38]
  4122b8:	lea    rcx,[rbp-0x28]
  4122bc:	lea    rdx,[rbp-0x30]
  4122c0:	mov    rsi,QWORD PTR [rbp-0x20]
  4122c4:	mov    rax,QWORD PTR [rbp-0x10]
  4122c8:	mov    r8d,edi
  4122cb:	mov    rdi,rax
  4122ce:	call   4103a1 <grisu3_diy_fp_encode_double@@Base+0x14ab>
  4122d3:	mov    DWORD PTR [rbp-0x34],eax
  4122d6:	cmp    DWORD PTR [rbp-0x34],0x0
  4122da:	je     4122f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  4122dc:	mov    rdx,QWORD PTR [rbp-0x28]
  4122e0:	mov    rax,QWORD PTR [rbp-0x20]
  4122e4:	add    rax,rdx
  4122e7:	mov    QWORD PTR [rbp-0x50],rax
  4122eb:	jmp    4123aa <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  4122f0:	mov    rax,QWORD PTR [rbp-0x50]
  4122f4:	sub    rax,QWORD PTR [rbp-0x20]
  4122f8:	mov    rdx,QWORD PTR [rbp-0x28]
  4122fc:	cmp    rax,rdx
  4122ff:	je     412315 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16a>
  412301:	mov    rdx,QWORD PTR [rbp-0x28]
  412305:	mov    rax,QWORD PTR [rbp-0x20]
  412309:	add    rax,rdx
  41230c:	mov    QWORD PTR [rbp-0x50],rax
  412310:	jmp    4123aa <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  412315:	mov    rax,QWORD PTR [rbp-0x30]
  412319:	cmp    QWORD PTR [rbp-0x18],rax
  41231d:	jbe    412340 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  41231f:	mov    rax,QWORD PTR [rbp-0x30]
  412323:	mov    rdx,QWORD PTR [rbp-0x18]
  412327:	sub    rdx,rax
  41232a:	mov    rax,QWORD PTR [rbp-0x48]
  41232e:	mov    rax,QWORD PTR [rax]
  412331:	mov    rsi,rdx
  412334:	mov    rdi,rax
  412337:	call   408fa5 <flatcc_builder_truncate_vector@@Base>
  41233c:	test   eax,eax
  41233e:	jne    412380 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d5>
  412340:	mov    rax,QWORD PTR [rbp-0x48]
  412344:	mov    rax,QWORD PTR [rax]
  412347:	mov    rdi,rax
  41234a:	call   40a410 <flatcc_builder_end_vector@@Base>
  41234f:	mov    edx,eax
  412351:	mov    rax,QWORD PTR [rbp-0x60]
  412355:	mov    DWORD PTR [rax],edx
  412357:	mov    rax,QWORD PTR [rbp-0x60]
  41235b:	mov    eax,DWORD PTR [rax]
  41235d:	test   eax,eax
  41235f:	je     412383 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
  412361:	mov    rdx,QWORD PTR [rbp-0x58]
  412365:	mov    rcx,QWORD PTR [rbp-0x50]
  412369:	mov    rax,QWORD PTR [rbp-0x48]
  41236d:	mov    rsi,rcx
  412370:	mov    rdi,rax
  412373:	call   40caef <flatcc_emitter_copy_buffer@@Base+0x2ab>
  412378:	jmp    4123da <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  41237a:	nop
  41237b:	jmp    412384 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  41237d:	nop
  41237e:	jmp    412384 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  412380:	nop
  412381:	jmp    412384 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  412383:	nop
  412384:	mov    rax,QWORD PTR [rbp-0x60]
  412388:	mov    DWORD PTR [rax],0x0
  41238e:	mov    rdx,QWORD PTR [rbp-0x58]
  412392:	mov    rsi,QWORD PTR [rbp-0x50]
  412396:	mov    rax,QWORD PTR [rbp-0x48]
  41239a:	mov    ecx,0x21
  41239f:	mov    rdi,rax
  4123a2:	call   410986 <flatcc_json_parser_set_error@@Base>
  4123a7:	jmp    4123da <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  4123a9:	nop
  4123aa:	mov    rax,QWORD PTR [rbp-0x60]
  4123ae:	mov    DWORD PTR [rax],0x0
  4123b4:	cmp    DWORD PTR [rbp-0x64],0x0
  4123b8:	je     4123c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x216>
  4123ba:	mov    ecx,0x20
  4123bf:	jmp    4123c6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  4123c1:	mov    ecx,0x1f
  4123c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4123ca:	mov    rsi,QWORD PTR [rbp-0x50]
  4123ce:	mov    rax,QWORD PTR [rbp-0x48]
  4123d2:	mov    rdi,rax
  4123d5:	call   410986 <flatcc_json_parser_set_error@@Base>
  4123da:	mov    rdi,QWORD PTR [rbp-0x8]
  4123de:	xor    rdi,QWORD PTR fs:0x28
  4123e7:	je     4123ee <flatcc_json_parser_build_uint8_vector_base64@@Base+0x243>
  4123e9:	call   403140 <__stack_chk_fail@plt>
  4123ee:	leave  
  4123ef:	ret    

00000000004123f0 <flatcc_json_parser_build_string@@Base>:
  4123f0:	endbr64 
  4123f4:	push   rbp
  4123f5:	mov    rbp,rsp
  4123f8:	sub    rsp,0x40
  4123fc:	mov    QWORD PTR [rbp-0x28],rdi
  412400:	mov    QWORD PTR [rbp-0x30],rsi
  412404:	mov    QWORD PTR [rbp-0x38],rdx
  412408:	mov    QWORD PTR [rbp-0x40],rcx
  41240c:	mov    rax,QWORD PTR fs:0x28
  412415:	mov    QWORD PTR [rbp-0x8],rax
  412419:	xor    eax,eax
  41241b:	mov    rdx,QWORD PTR [rbp-0x38]
  41241f:	mov    rcx,QWORD PTR [rbp-0x30]
  412423:	mov    rax,QWORD PTR [rbp-0x28]
  412427:	mov    rsi,rcx
  41242a:	mov    rdi,rax
  41242d:	call   40caa1 <flatcc_emitter_copy_buffer@@Base+0x25d>
  412432:	mov    QWORD PTR [rbp-0x30],rax
  412436:	mov    rax,QWORD PTR [rbp-0x30]
  41243a:	mov    QWORD PTR [rbp-0x18],rax
  41243e:	mov    rdx,QWORD PTR [rbp-0x38]
  412442:	mov    rcx,QWORD PTR [rbp-0x18]
  412446:	mov    rax,QWORD PTR [rbp-0x28]
  41244a:	mov    rsi,rcx
  41244d:	mov    rdi,rax
  412450:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  412455:	mov    QWORD PTR [rbp-0x30],rax
  412459:	mov    rax,QWORD PTR [rbp-0x30]
  41245d:	cmp    rax,QWORD PTR [rbp-0x38]
  412461:	je     41249c <flatcc_json_parser_build_string@@Base+0xac>
  412463:	mov    rax,QWORD PTR [rbp-0x30]
  412467:	movzx  eax,BYTE PTR [rax]
  41246a:	cmp    al,0x22
  41246c:	jne    41249c <flatcc_json_parser_build_string@@Base+0xac>
  41246e:	mov    rax,QWORD PTR [rbp-0x30]
  412472:	sub    rax,QWORD PTR [rbp-0x18]
  412476:	mov    rdx,rax
  412479:	mov    rax,QWORD PTR [rbp-0x28]
  41247d:	mov    rax,QWORD PTR [rax]
  412480:	mov    rcx,QWORD PTR [rbp-0x18]
  412484:	mov    rsi,rcx
  412487:	mov    rdi,rax
  41248a:	call   40b2b2 <flatcc_builder_create_string@@Base>
  41248f:	mov    edx,eax
  412491:	mov    rax,QWORD PTR [rbp-0x40]
  412495:	mov    DWORD PTR [rax],edx
  412497:	jmp    4125ab <flatcc_json_parser_build_string@@Base+0x1bb>
  41249c:	mov    rax,QWORD PTR [rbp-0x28]
  4124a0:	mov    rax,QWORD PTR [rax]
  4124a3:	mov    rdi,rax
  4124a6:	call   4093ae <flatcc_builder_start_string@@Base>
  4124ab:	test   eax,eax
  4124ad:	jne    4125c4 <flatcc_json_parser_build_string@@Base+0x1d4>
  4124b3:	mov    rax,QWORD PTR [rbp-0x30]
  4124b7:	sub    rax,QWORD PTR [rbp-0x18]
  4124bb:	mov    rdx,rax
  4124be:	mov    rax,QWORD PTR [rbp-0x28]
  4124c2:	mov    rax,QWORD PTR [rax]
  4124c5:	mov    rcx,QWORD PTR [rbp-0x18]
  4124c9:	mov    rsi,rcx
  4124cc:	mov    rdi,rax
  4124cf:	call   408ea2 <flatcc_builder_append_string@@Base>
  4124d4:	test   rax,rax
  4124d7:	je     4125c4 <flatcc_json_parser_build_string@@Base+0x1d4>
  4124dd:	jmp    41257b <flatcc_json_parser_build_string@@Base+0x18b>
  4124e2:	lea    rcx,[rbp-0xc]
  4124e6:	mov    rdx,QWORD PTR [rbp-0x38]
  4124ea:	mov    rsi,QWORD PTR [rbp-0x30]
  4124ee:	mov    rax,QWORD PTR [rbp-0x28]
  4124f2:	mov    rdi,rax
  4124f5:	call   410bdd <flatcc_json_parser_string_escape@@Base>
  4124fa:	mov    QWORD PTR [rbp-0x30],rax
  4124fe:	movzx  eax,BYTE PTR [rbp-0xc]
  412502:	movsx  rdx,al
  412506:	lea    rax,[rbp-0xc]
  41250a:	inc    rax
  41250d:	mov    rcx,QWORD PTR [rbp-0x28]
  412511:	mov    rcx,QWORD PTR [rcx]
  412514:	mov    rsi,rax
  412517:	mov    rdi,rcx
  41251a:	call   408ea2 <flatcc_builder_append_string@@Base>
  41251f:	test   rax,rax
  412522:	je     4125c7 <flatcc_json_parser_build_string@@Base+0x1d7>
  412528:	mov    rax,QWORD PTR [rbp-0x30]
  41252c:	mov    QWORD PTR [rbp-0x18],rax
  412530:	mov    rdx,QWORD PTR [rbp-0x38]
  412534:	mov    rcx,QWORD PTR [rbp-0x18]
  412538:	mov    rax,QWORD PTR [rbp-0x28]
  41253c:	mov    rsi,rcx
  41253f:	mov    rdi,rax
  412542:	call   4109e1 <flatcc_json_parser_string_part@@Base>
  412547:	mov    QWORD PTR [rbp-0x30],rax
  41254b:	mov    rax,QWORD PTR [rbp-0x30]
  41254f:	cmp    rax,QWORD PTR [rbp-0x38]
  412553:	je     41257b <flatcc_json_parser_build_string@@Base+0x18b>
  412555:	mov    rax,QWORD PTR [rbp-0x30]
  412559:	sub    rax,QWORD PTR [rbp-0x18]
  41255d:	mov    rdx,rax
  412560:	mov    rax,QWORD PTR [rbp-0x28]
  412564:	mov    rax,QWORD PTR [rax]
  412567:	mov    rcx,QWORD PTR [rbp-0x18]
  41256b:	mov    rsi,rcx
  41256e:	mov    rdi,rax
  412571:	call   408ea2 <flatcc_builder_append_string@@Base>
  412576:	test   rax,rax
  412579:	je     4125ca <flatcc_json_parser_build_string@@Base+0x1da>
  41257b:	mov    rax,QWORD PTR [rbp-0x30]
  41257f:	cmp    rax,QWORD PTR [rbp-0x38]
  412583:	je     412594 <flatcc_json_parser_build_string@@Base+0x1a4>
  412585:	mov    rax,QWORD PTR [rbp-0x30]
  412589:	movzx  eax,BYTE PTR [rax]
  41258c:	cmp    al,0x22
  41258e:	jne    4124e2 <flatcc_json_parser_build_string@@Base+0xf2>
  412594:	mov    rax,QWORD PTR [rbp-0x28]
  412598:	mov    rax,QWORD PTR [rax]
  41259b:	mov    rdi,rax
  41259e:	call   40b531 <flatcc_builder_end_string@@Base>
  4125a3:	mov    edx,eax
  4125a5:	mov    rax,QWORD PTR [rbp-0x40]
  4125a9:	mov    DWORD PTR [rax],edx
  4125ab:	mov    rdx,QWORD PTR [rbp-0x38]
  4125af:	mov    rcx,QWORD PTR [rbp-0x30]
  4125b3:	mov    rax,QWORD PTR [rbp-0x28]
  4125b7:	mov    rsi,rcx
  4125ba:	mov    rdi,rax
  4125bd:	call   40caef <flatcc_emitter_copy_buffer@@Base+0x2ab>
  4125c2:	jmp    4125d9 <flatcc_json_parser_build_string@@Base+0x1e9>
  4125c4:	nop
  4125c5:	jmp    4125cb <flatcc_json_parser_build_string@@Base+0x1db>
  4125c7:	nop
  4125c8:	jmp    4125cb <flatcc_json_parser_build_string@@Base+0x1db>
  4125ca:	nop
  4125cb:	mov    rax,QWORD PTR [rbp-0x40]
  4125cf:	mov    DWORD PTR [rax],0x0
  4125d5:	mov    rax,QWORD PTR [rbp-0x30]
  4125d9:	mov    rsi,QWORD PTR [rbp-0x8]
  4125dd:	xor    rsi,QWORD PTR fs:0x28
  4125e6:	je     4125ed <flatcc_json_parser_build_string@@Base+0x1fd>
  4125e8:	call   403140 <__stack_chk_fail@plt>
  4125ed:	leave  
  4125ee:	ret    

00000000004125ef <flatcc_json_parser_prepare_unions@@Base>:
  4125ef:	endbr64 
  4125f3:	push   rbp
  4125f4:	mov    rbp,rsp
  4125f7:	sub    rsp,0x40
  4125fb:	mov    QWORD PTR [rbp-0x18],rdi
  4125ff:	mov    QWORD PTR [rbp-0x20],rsi
  412603:	mov    QWORD PTR [rbp-0x28],rdx
  412607:	mov    QWORD PTR [rbp-0x30],rcx
  41260b:	mov    QWORD PTR [rbp-0x38],r8
  41260f:	mov    rdx,QWORD PTR [rbp-0x30]
  412613:	mov    rax,rdx
  412616:	shl    rax,0x2
  41261a:	add    rax,rdx
  41261d:	shl    rax,0x3
  412621:	lea    rdx,[rax+0x10]
  412625:	mov    rax,QWORD PTR [rbp-0x18]
  412629:	mov    rax,QWORD PTR [rax]
  41262c:	mov    rsi,rdx
  41262f:	mov    rdi,rax
  412632:	call   4075c8 <flatcc_builder_enter_user_frame@@Base>
  412637:	mov    rdx,rax
  41263a:	mov    rax,QWORD PTR [rbp-0x38]
  41263e:	mov    QWORD PTR [rax],rdx
  412641:	mov    rax,QWORD PTR [rbp-0x38]
  412645:	mov    rax,QWORD PTR [rax]
  412648:	test   rax,rax
  41264b:	jne    412668 <flatcc_json_parser_prepare_unions@@Base+0x79>
  41264d:	mov    rdx,QWORD PTR [rbp-0x28]
  412651:	mov    rsi,QWORD PTR [rbp-0x20]
  412655:	mov    rax,QWORD PTR [rbp-0x18]
  412659:	mov    ecx,0x21
  41265e:	mov    rdi,rax
  412661:	call   410986 <flatcc_json_parser_set_error@@Base>
  412666:	jmp    412694 <flatcc_json_parser_prepare_unions@@Base+0xa5>
  412668:	mov    rax,QWORD PTR [rbp-0x38]
  41266c:	mov    rdx,QWORD PTR [rax]
  41266f:	mov    rax,QWORD PTR [rbp-0x18]
  412673:	mov    rax,QWORD PTR [rax]
  412676:	mov    rsi,rdx
  412679:	mov    rdi,rax
  41267c:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412681:	mov    QWORD PTR [rbp-0x8],rax
  412685:	mov    rax,QWORD PTR [rbp-0x8]
  412689:	mov    rdx,QWORD PTR [rbp-0x30]
  41268d:	mov    QWORD PTR [rax],rdx
  412690:	mov    rax,QWORD PTR [rbp-0x20]
  412694:	leave  
  412695:	ret    

0000000000412696 <flatcc_json_parser_finalize_unions@@Base>:
  412696:	endbr64 
  41269a:	push   rbp
  41269b:	mov    rbp,rsp
  41269e:	sub    rsp,0x30
  4126a2:	mov    QWORD PTR [rbp-0x18],rdi
  4126a6:	mov    QWORD PTR [rbp-0x20],rsi
  4126aa:	mov    QWORD PTR [rbp-0x28],rdx
  4126ae:	mov    QWORD PTR [rbp-0x30],rcx
  4126b2:	mov    rax,QWORD PTR [rbp-0x18]
  4126b6:	mov    rax,QWORD PTR [rax]
  4126b9:	mov    rdx,QWORD PTR [rbp-0x30]
  4126bd:	mov    rsi,rdx
  4126c0:	mov    rdi,rax
  4126c3:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  4126c8:	mov    QWORD PTR [rbp-0x8],rax
  4126cc:	mov    rax,QWORD PTR [rbp-0x8]
  4126d0:	mov    rax,QWORD PTR [rax+0x8]
  4126d4:	test   rax,rax
  4126d7:	je     4126f6 <flatcc_json_parser_finalize_unions@@Base+0x60>
  4126d9:	mov    rdx,QWORD PTR [rbp-0x28]
  4126dd:	mov    rsi,QWORD PTR [rbp-0x20]
  4126e1:	mov    rax,QWORD PTR [rbp-0x18]
  4126e5:	mov    ecx,0x1b
  4126ea:	mov    rdi,rax
  4126ed:	call   410986 <flatcc_json_parser_set_error@@Base>
  4126f2:	mov    QWORD PTR [rbp-0x20],rax
  4126f6:	mov    rax,QWORD PTR [rbp-0x18]
  4126fa:	mov    rax,QWORD PTR [rax]
  4126fd:	mov    rdx,QWORD PTR [rbp-0x30]
  412701:	mov    rsi,rdx
  412704:	mov    rdi,rax
  412707:	call   407733 <flatcc_builder_exit_user_frame_at@@Base>
  41270c:	mov    rax,QWORD PTR [rbp-0x20]
  412710:	leave  
  412711:	ret    

0000000000412712 <flatcc_json_parser_union@@Base>:
  412712:	endbr64 
  412716:	push   rbp
  412717:	mov    rbp,rsp
  41271a:	sub    rsp,0x60
  41271e:	mov    QWORD PTR [rbp-0x28],rdi
  412722:	mov    QWORD PTR [rbp-0x30],rsi
  412726:	mov    QWORD PTR [rbp-0x38],rdx
  41272a:	mov    QWORD PTR [rbp-0x40],rcx
  41272e:	mov    eax,r8d
  412731:	mov    QWORD PTR [rbp-0x50],r9
  412735:	mov    WORD PTR [rbp-0x44],ax
  412739:	mov    rax,QWORD PTR [rbp+0x10]
  41273d:	mov    QWORD PTR [rbp-0x58],rax
  412741:	mov    rax,QWORD PTR fs:0x28
  41274a:	mov    QWORD PTR [rbp-0x8],rax
  41274e:	xor    eax,eax
  412750:	mov    rax,QWORD PTR [rbp-0x28]
  412754:	mov    rax,QWORD PTR [rax]
  412757:	mov    rdx,QWORD PTR [rbp-0x50]
  41275b:	mov    rsi,rdx
  41275e:	mov    rdi,rax
  412761:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412766:	mov    QWORD PTR [rbp-0x20],rax
  41276a:	mov    rdx,QWORD PTR [rbp-0x40]
  41276e:	mov    rax,rdx
  412771:	shl    rax,0x2
  412775:	add    rax,rdx
  412778:	shl    rax,0x3
  41277c:	mov    rdx,QWORD PTR [rbp-0x20]
  412780:	add    rax,rdx
  412783:	add    rax,0x10
  412787:	mov    QWORD PTR [rbp-0x18],rax
  41278b:	mov    rax,QWORD PTR [rbp-0x18]
  41278f:	mov    rax,QWORD PTR [rax]
  412792:	test   rax,rax
  412795:	je     4127b5 <flatcc_json_parser_union@@Base+0xa3>
  412797:	mov    rdx,QWORD PTR [rbp-0x38]
  41279b:	mov    rsi,QWORD PTR [rbp-0x30]
  41279f:	mov    rax,QWORD PTR [rbp-0x28]
  4127a3:	mov    ecx,0x1c
  4127a8:	mov    rdi,rax
  4127ab:	call   410986 <flatcc_json_parser_set_error@@Base>
  4127b0:	jmp    4128d9 <flatcc_json_parser_union@@Base+0x1c7>
  4127b5:	mov    rax,QWORD PTR [rbp-0x18]
  4127b9:	movzx  eax,BYTE PTR [rax+0x14]
  4127bd:	test   al,al
  4127bf:	jne    412821 <flatcc_json_parser_union@@Base+0x10f>
  4127c1:	mov    rax,QWORD PTR [rbp-0x20]
  4127c5:	mov    rax,QWORD PTR [rax+0x8]
  4127c9:	lea    rdx,[rax+0x1]
  4127cd:	mov    rax,QWORD PTR [rbp-0x20]
  4127d1:	mov    QWORD PTR [rax+0x8],rdx
  4127d5:	mov    rax,QWORD PTR [rbp-0x28]
  4127d9:	mov    edx,DWORD PTR [rax+0x18]
  4127dc:	mov    rax,QWORD PTR [rbp-0x18]
  4127e0:	mov    DWORD PTR [rax+0x10],edx
  4127e3:	mov    rax,QWORD PTR [rbp-0x28]
  4127e7:	mov    rdx,QWORD PTR [rax+0x8]
  4127eb:	mov    rax,QWORD PTR [rbp-0x18]
  4127ef:	mov    QWORD PTR [rax+0x8],rdx
  4127f3:	mov    rax,QWORD PTR [rbp-0x18]
  4127f7:	mov    rdx,QWORD PTR [rbp-0x30]
  4127fb:	mov    QWORD PTR [rax],rdx
  4127fe:	mov    rax,QWORD PTR [rbp-0x18]
  412802:	mov    rcx,QWORD PTR [rax]
  412805:	mov    rdx,QWORD PTR [rbp-0x38]
  412809:	mov    rax,QWORD PTR [rbp-0x28]
  41280d:	mov    rsi,rcx
  412810:	mov    rdi,rax
  412813:	call   411a65 <flatcc_json_parser_generic_json@@Base>
  412818:	mov    QWORD PTR [rbp-0x30],rax
  41281c:	jmp    4128d5 <flatcc_json_parser_union@@Base+0x1c3>
  412821:	mov    rax,QWORD PTR [rbp-0x18]
  412825:	movzx  eax,BYTE PTR [rax+0x15]
  412829:	mov    BYTE PTR [rbp-0x10],al
  41282c:	mov    rax,QWORD PTR [rbp-0x18]
  412830:	movzx  eax,BYTE PTR [rax+0x15]
  412834:	test   al,al
  412836:	jne    412856 <flatcc_json_parser_union@@Base+0x144>
  412838:	mov    rdx,QWORD PTR [rbp-0x38]
  41283c:	mov    rsi,QWORD PTR [rbp-0x30]
  412840:	mov    rax,QWORD PTR [rbp-0x28]
  412844:	mov    ecx,0x19
  412849:	mov    rdi,rax
  41284c:	call   410986 <flatcc_json_parser_set_error@@Base>
  412851:	jmp    4128d9 <flatcc_json_parser_union@@Base+0x1c7>
  412856:	mov    rax,QWORD PTR [rbp-0x20]
  41285a:	mov    rax,QWORD PTR [rax+0x8]
  41285e:	lea    rdx,[rax-0x1]
  412862:	mov    rax,QWORD PTR [rbp-0x20]
  412866:	mov    QWORD PTR [rax+0x8],rdx
  41286a:	mov    rax,QWORD PTR [rbp-0x18]
  41286e:	movzx  eax,BYTE PTR [rax+0x15]
  412872:	movzx  ecx,al
  412875:	lea    rax,[rbp-0x10]
  412879:	lea    r8,[rax+0x4]
  41287d:	mov    rdx,QWORD PTR [rbp-0x38]
  412881:	mov    rsi,QWORD PTR [rbp-0x30]
  412885:	mov    rdi,QWORD PTR [rbp-0x28]
  412889:	mov    rax,QWORD PTR [rbp-0x58]
  41288d:	call   rax
  41288f:	mov    QWORD PTR [rbp-0x30],rax
  412893:	mov    rax,QWORD PTR [rbp-0x30]
  412897:	cmp    rax,QWORD PTR [rbp-0x38]
  41289b:	je     4128d5 <flatcc_json_parser_union@@Base+0x1c3>
  41289d:	movzx  ecx,WORD PTR [rbp-0x44]
  4128a1:	mov    rax,QWORD PTR [rbp-0x28]
  4128a5:	mov    rax,QWORD PTR [rax]
  4128a8:	mov    rdx,QWORD PTR [rbp-0x10]
  4128ac:	mov    esi,ecx
  4128ae:	mov    rdi,rax
  4128b1:	call   40aa02 <flatcc_builder_table_add_union@@Base>
  4128b6:	test   eax,eax
  4128b8:	je     4128d5 <flatcc_json_parser_union@@Base+0x1c3>
  4128ba:	mov    rdx,QWORD PTR [rbp-0x38]
  4128be:	mov    rsi,QWORD PTR [rbp-0x30]
  4128c2:	mov    rax,QWORD PTR [rbp-0x28]
  4128c6:	mov    ecx,0x1c
  4128cb:	mov    rdi,rax
  4128ce:	call   410986 <flatcc_json_parser_set_error@@Base>
  4128d3:	jmp    4128d9 <flatcc_json_parser_union@@Base+0x1c7>
  4128d5:	mov    rax,QWORD PTR [rbp-0x30]
  4128d9:	mov    rdi,QWORD PTR [rbp-0x8]
  4128dd:	xor    rdi,QWORD PTR fs:0x28
  4128e6:	je     4128ed <flatcc_json_parser_union@@Base+0x1db>
  4128e8:	call   403140 <__stack_chk_fail@plt>
  4128ed:	leave  
  4128ee:	ret    

00000000004128ef <flatcc_json_parser_union_type@@Base>:
  4128ef:	endbr64 
  4128f3:	push   rbp
  4128f4:	mov    rbp,rsp
  4128f7:	add    rsp,0xffffffffffffff80
  4128fb:	mov    QWORD PTR [rbp-0x48],rdi
  4128ff:	mov    QWORD PTR [rbp-0x50],rsi
  412903:	mov    QWORD PTR [rbp-0x58],rdx
  412907:	mov    QWORD PTR [rbp-0x60],rcx
  41290b:	mov    eax,r8d
  41290e:	mov    QWORD PTR [rbp-0x70],r9
  412912:	mov    WORD PTR [rbp-0x64],ax
  412916:	mov    rax,QWORD PTR [rbp+0x10]
  41291a:	mov    QWORD PTR [rbp-0x78],rax
  41291e:	mov    rax,QWORD PTR [rbp+0x18]
  412922:	mov    QWORD PTR [rbp-0x80],rax
  412926:	mov    rax,QWORD PTR fs:0x28
  41292f:	mov    QWORD PTR [rbp-0x8],rax
  412933:	xor    eax,eax
  412935:	mov    rax,QWORD PTR [rbp-0x48]
  412939:	mov    rax,QWORD PTR [rax]
  41293c:	mov    rdx,QWORD PTR [rbp-0x70]
  412940:	mov    rsi,rdx
  412943:	mov    rdi,rax
  412946:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  41294b:	mov    QWORD PTR [rbp-0x30],rax
  41294f:	mov    rax,QWORD PTR [rbp-0x30]
  412953:	lea    rcx,[rax+0x10]
  412957:	mov    rdx,QWORD PTR [rbp-0x60]
  41295b:	mov    rax,rdx
  41295e:	shl    rax,0x2
  412962:	add    rax,rdx
  412965:	shl    rax,0x3
  412969:	add    rax,rcx
  41296c:	mov    QWORD PTR [rbp-0x28],rax
  412970:	mov    rax,QWORD PTR [rbp-0x28]
  412974:	movzx  eax,BYTE PTR [rax+0x14]
  412978:	test   al,al
  41297a:	je     41299a <flatcc_json_parser_union_type@@Base+0xab>
  41297c:	mov    rdx,QWORD PTR [rbp-0x58]
  412980:	mov    rsi,QWORD PTR [rbp-0x50]
  412984:	mov    rax,QWORD PTR [rbp-0x48]
  412988:	mov    ecx,0x1c
  41298d:	mov    rdi,rax
  412990:	call   410986 <flatcc_json_parser_set_error@@Base>
  412995:	jmp    412b38 <flatcc_json_parser_union_type@@Base+0x249>
  41299a:	mov    rax,QWORD PTR [rbp-0x28]
  41299e:	mov    BYTE PTR [rax+0x14],0x1
  4129a2:	mov    rax,QWORD PTR [rbp-0x28]
  4129a6:	lea    rcx,[rax+0x15]
  4129aa:	mov    rax,QWORD PTR [rbp-0x50]
  4129ae:	mov    QWORD PTR [rbp-0x20],rax
  4129b2:	mov    rdx,QWORD PTR [rbp-0x58]
  4129b6:	mov    rsi,QWORD PTR [rbp-0x20]
  4129ba:	mov    rax,QWORD PTR [rbp-0x48]
  4129be:	mov    rdi,rax
  4129c1:	call   40d5d2 <flatcc_emitter_copy_buffer@@Base+0xd8e>
  4129c6:	mov    QWORD PTR [rbp-0x50],rax
  4129ca:	mov    rax,QWORD PTR [rbp-0x20]
  4129ce:	cmp    rax,QWORD PTR [rbp-0x50]
  4129d2:	jne    4129fb <flatcc_json_parser_union_type@@Base+0x10c>
  4129d4:	mov    rax,QWORD PTR [rbp-0x28]
  4129d8:	lea    rdi,[rax+0x15]
  4129dc:	mov    rcx,QWORD PTR [rbp-0x78]
  4129e0:	mov    rdx,QWORD PTR [rbp-0x58]
  4129e4:	mov    rsi,QWORD PTR [rbp-0x50]
  4129e8:	mov    rax,QWORD PTR [rbp-0x48]
  4129ec:	mov    r8,rdi
  4129ef:	mov    rdi,rax
  4129f2:	call   40db6a <flatcc_emitter_copy_buffer@@Base+0x1326>
  4129f7:	mov    QWORD PTR [rbp-0x50],rax
  4129fb:	mov    rax,QWORD PTR [rbp-0x28]
  4129ff:	mov    rax,QWORD PTR [rax]
  412a02:	test   rax,rax
  412a05:	jne    412a33 <flatcc_json_parser_union_type@@Base+0x144>
  412a07:	mov    rax,QWORD PTR [rbp-0x30]
  412a0b:	mov    rdx,QWORD PTR [rax+0x8]
  412a0f:	mov    rax,QWORD PTR [rbp-0x28]
  412a13:	movzx  eax,BYTE PTR [rax+0x15]
  412a17:	test   al,al
  412a19:	setne  al
  412a1c:	movzx  eax,al
  412a1f:	add    rdx,rax
  412a22:	mov    rax,QWORD PTR [rbp-0x30]
  412a26:	mov    QWORD PTR [rax+0x8],rdx
  412a2a:	mov    rax,QWORD PTR [rbp-0x50]
  412a2e:	jmp    412b38 <flatcc_json_parser_union_type@@Base+0x249>
  412a33:	mov    rax,QWORD PTR [rbp-0x30]
  412a37:	mov    rax,QWORD PTR [rax+0x8]
  412a3b:	test   rax,rax
  412a3e:	jne    412a5f <flatcc_json_parser_union_type@@Base+0x170>
  412a40:	lea    rcx,[rip+0x3969]        # 4163b0 <flatcc_builder_padding_base@@Base+0x2010>
  412a47:	mov    edx,0x3c5
  412a4c:	lea    rsi,[rip+0x3445]        # 415e98 <flatcc_builder_padding_base@@Base+0x1af8>
  412a53:	lea    rdi,[rip+0x34a2]        # 415efc <flatcc_builder_padding_base@@Base+0x1b5c>
  412a5a:	call   403150 <__assert_fail@plt>
  412a5f:	mov    rax,QWORD PTR [rbp-0x30]
  412a63:	mov    rax,QWORD PTR [rax+0x8]
  412a67:	lea    rdx,[rax-0x1]
  412a6b:	mov    rax,QWORD PTR [rbp-0x30]
  412a6f:	mov    QWORD PTR [rax+0x8],rdx
  412a73:	mov    rax,QWORD PTR [rbp-0x48]
  412a77:	mov    eax,DWORD PTR [rax+0x18]
  412a7a:	mov    DWORD PTR [rbp-0x34],eax
  412a7d:	mov    rax,QWORD PTR [rbp-0x48]
  412a81:	mov    rax,QWORD PTR [rax+0x8]
  412a85:	mov    QWORD PTR [rbp-0x18],rax
  412a89:	mov    rax,QWORD PTR [rbp-0x28]
  412a8d:	mov    edx,DWORD PTR [rax+0x10]
  412a90:	mov    rax,QWORD PTR [rbp-0x48]
  412a94:	mov    DWORD PTR [rax+0x18],edx
  412a97:	mov    rax,QWORD PTR [rbp-0x28]
  412a9b:	mov    rdx,QWORD PTR [rax+0x8]
  412a9f:	mov    rax,QWORD PTR [rbp-0x48]
  412aa3:	mov    QWORD PTR [rax+0x8],rdx
  412aa7:	mov    rax,QWORD PTR [rbp-0x28]
  412aab:	movzx  eax,BYTE PTR [rax+0x15]
  412aaf:	mov    BYTE PTR [rbp-0x10],al
  412ab2:	mov    rax,QWORD PTR [rbp-0x28]
  412ab6:	movzx  eax,BYTE PTR [rax+0x15]
  412aba:	movzx  ecx,al
  412abd:	mov    rax,QWORD PTR [rbp-0x28]
  412ac1:	mov    rsi,QWORD PTR [rax]
  412ac4:	lea    rax,[rbp-0x10]
  412ac8:	lea    r8,[rax+0x4]
  412acc:	mov    rdx,QWORD PTR [rbp-0x58]
  412ad0:	mov    rdi,QWORD PTR [rbp-0x48]
  412ad4:	mov    rax,QWORD PTR [rbp-0x80]
  412ad8:	call   rax
  412ada:	cmp    QWORD PTR [rbp-0x58],rax
  412ade:	jne    412ae6 <flatcc_json_parser_union_type@@Base+0x1f7>
  412ae0:	mov    rax,QWORD PTR [rbp-0x58]
  412ae4:	jmp    412b38 <flatcc_json_parser_union_type@@Base+0x249>
  412ae6:	movzx  ecx,WORD PTR [rbp-0x64]
  412aea:	mov    rax,QWORD PTR [rbp-0x48]
  412aee:	mov    rax,QWORD PTR [rax]
  412af1:	mov    rdx,QWORD PTR [rbp-0x10]
  412af5:	mov    esi,ecx
  412af7:	mov    rdi,rax
  412afa:	call   40aa02 <flatcc_builder_table_add_union@@Base>
  412aff:	test   eax,eax
  412b01:	je     412b1e <flatcc_json_parser_union_type@@Base+0x22f>
  412b03:	mov    rdx,QWORD PTR [rbp-0x58]
  412b07:	mov    rsi,QWORD PTR [rbp-0x50]
  412b0b:	mov    rax,QWORD PTR [rbp-0x48]
  412b0f:	mov    ecx,0x1c
  412b14:	mov    rdi,rax
  412b17:	call   410986 <flatcc_json_parser_set_error@@Base>
  412b1c:	jmp    412b38 <flatcc_json_parser_union_type@@Base+0x249>
  412b1e:	mov    rax,QWORD PTR [rbp-0x48]
  412b22:	mov    edx,DWORD PTR [rbp-0x34]
  412b25:	mov    DWORD PTR [rax+0x18],edx
  412b28:	mov    rax,QWORD PTR [rbp-0x48]
  412b2c:	mov    rdx,QWORD PTR [rbp-0x18]
  412b30:	mov    QWORD PTR [rax+0x8],rdx
  412b34:	mov    rax,QWORD PTR [rbp-0x50]
  412b38:	mov    rdi,QWORD PTR [rbp-0x8]
  412b3c:	xor    rdi,QWORD PTR fs:0x28
  412b45:	je     412b4c <flatcc_json_parser_union_type@@Base+0x25d>
  412b47:	call   403140 <__stack_chk_fail@plt>
  412b4c:	leave  
  412b4d:	ret    
  412b4e:	endbr64 
  412b52:	push   rbp
  412b53:	mov    rbp,rsp
  412b56:	sub    rsp,0x60
  412b5a:	mov    QWORD PTR [rbp-0x38],rdi
  412b5e:	mov    QWORD PTR [rbp-0x40],rsi
  412b62:	mov    QWORD PTR [rbp-0x48],rdx
  412b66:	mov    QWORD PTR [rbp-0x50],rcx
  412b6a:	mov    DWORD PTR [rbp-0x54],r8d
  412b6e:	mov    eax,r9d
  412b71:	mov    WORD PTR [rbp-0x58],ax
  412b75:	mov    rax,QWORD PTR [rbp+0x10]
  412b79:	mov    QWORD PTR [rbp-0x60],rax
  412b7d:	mov    rax,QWORD PTR fs:0x28
  412b86:	mov    QWORD PTR [rbp-0x8],rax
  412b8a:	xor    eax,eax
  412b8c:	mov    DWORD PTR [rbp-0x28],0x0
  412b93:	mov    rax,QWORD PTR [rbp-0x38]
  412b97:	mov    rax,QWORD PTR [rax]
  412b9a:	mov    rdi,rax
  412b9d:	call   4092bd <flatcc_builder_start_offset_vector@@Base>
  412ba2:	test   eax,eax
  412ba4:	jne    412d39 <flatcc_json_parser_union_type@@Base+0x44a>
  412baa:	lea    rcx,[rbp-0x24]
  412bae:	mov    rdx,QWORD PTR [rbp-0x48]
  412bb2:	mov    rsi,QWORD PTR [rbp-0x40]
  412bb6:	mov    rax,QWORD PTR [rbp-0x38]
  412bba:	mov    rdi,rax
  412bbd:	call   40ce70 <flatcc_emitter_copy_buffer@@Base+0x62c>
  412bc2:	mov    QWORD PTR [rbp-0x40],rax
  412bc6:	mov    QWORD PTR [rbp-0x20],0x0
  412bce:	jmp    412c9e <flatcc_json_parser_union_type@@Base+0x3af>
  412bd3:	mov    eax,DWORD PTR [rbp-0x54]
  412bd6:	cmp    QWORD PTR [rbp-0x20],rax
  412bda:	jne    412bfa <flatcc_json_parser_union_type@@Base+0x30b>
  412bdc:	mov    rdx,QWORD PTR [rbp-0x48]
  412be0:	mov    rsi,QWORD PTR [rbp-0x40]
  412be4:	mov    rax,QWORD PTR [rbp-0x38]
  412be8:	mov    ecx,0x1e
  412bed:	mov    rdi,rax
  412bf0:	call   410986 <flatcc_json_parser_set_error@@Base>
  412bf5:	jmp    412d5c <flatcc_json_parser_union_type@@Base+0x46d>
  412bfa:	mov    rax,QWORD PTR [rbp-0x38]
  412bfe:	mov    rax,QWORD PTR [rax]
  412c01:	mov    rdx,QWORD PTR [rbp-0x50]
  412c05:	mov    rsi,rdx
  412c08:	mov    rdi,rax
  412c0b:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412c10:	mov    QWORD PTR [rbp-0x18],rax
  412c14:	mov    rdx,QWORD PTR [rbp-0x18]
  412c18:	mov    rax,QWORD PTR [rbp-0x20]
  412c1c:	add    rax,rdx
  412c1f:	movzx  eax,BYTE PTR [rax]
  412c22:	movzx  ecx,al
  412c25:	lea    r8,[rbp-0x28]
  412c29:	mov    rdx,QWORD PTR [rbp-0x48]
  412c2d:	mov    rsi,QWORD PTR [rbp-0x40]
  412c31:	mov    rdi,QWORD PTR [rbp-0x38]
  412c35:	mov    rax,QWORD PTR [rbp-0x60]
  412c39:	call   rax
  412c3b:	mov    QWORD PTR [rbp-0x40],rax
  412c3f:	mov    rax,QWORD PTR [rbp-0x40]
  412c43:	cmp    rax,QWORD PTR [rbp-0x48]
  412c47:	jne    412c52 <flatcc_json_parser_union_type@@Base+0x363>
  412c49:	mov    rax,QWORD PTR [rbp-0x40]
  412c4d:	jmp    412d5c <flatcc_json_parser_union_type@@Base+0x46d>
  412c52:	mov    rax,QWORD PTR [rbp-0x38]
  412c56:	mov    rax,QWORD PTR [rax]
  412c59:	mov    esi,0x1
  412c5e:	mov    rdi,rax
  412c61:	call   408c9c <flatcc_builder_extend_offset_vector@@Base>
  412c66:	mov    QWORD PTR [rbp-0x10],rax
  412c6a:	cmp    QWORD PTR [rbp-0x10],0x0
  412c6f:	je     412d3c <flatcc_json_parser_union_type@@Base+0x44d>
  412c75:	mov    edx,DWORD PTR [rbp-0x28]
  412c78:	mov    rax,QWORD PTR [rbp-0x10]
  412c7c:	mov    DWORD PTR [rax],edx
  412c7e:	lea    rcx,[rbp-0x24]
  412c82:	mov    rdx,QWORD PTR [rbp-0x48]
  412c86:	mov    rsi,QWORD PTR [rbp-0x40]
  412c8a:	mov    rax,QWORD PTR [rbp-0x38]
  412c8e:	mov    rdi,rax
  412c91:	call   40cf2d <flatcc_emitter_copy_buffer@@Base+0x6e9>
  412c96:	mov    QWORD PTR [rbp-0x40],rax
  412c9a:	inc    QWORD PTR [rbp-0x20]
  412c9e:	mov    eax,DWORD PTR [rbp-0x24]
  412ca1:	test   eax,eax
  412ca3:	jne    412bd3 <flatcc_json_parser_union_type@@Base+0x2e4>
  412ca9:	mov    eax,DWORD PTR [rbp-0x54]
  412cac:	cmp    QWORD PTR [rbp-0x20],rax
  412cb0:	je     412cd0 <flatcc_json_parser_union_type@@Base+0x3e1>
  412cb2:	mov    rdx,QWORD PTR [rbp-0x48]
  412cb6:	mov    rsi,QWORD PTR [rbp-0x40]
  412cba:	mov    rax,QWORD PTR [rbp-0x38]
  412cbe:	mov    ecx,0x1e
  412cc3:	mov    rdi,rax
  412cc6:	call   410986 <flatcc_json_parser_set_error@@Base>
  412ccb:	jmp    412d5c <flatcc_json_parser_union_type@@Base+0x46d>
  412cd0:	mov    rax,QWORD PTR [rbp-0x38]
  412cd4:	mov    rax,QWORD PTR [rax]
  412cd7:	mov    rdx,QWORD PTR [rbp-0x50]
  412cdb:	mov    rsi,rdx
  412cde:	mov    rdi,rax
  412ce1:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412ce6:	mov    QWORD PTR [rbp-0x18],rax
  412cea:	mov    rax,QWORD PTR [rbp-0x38]
  412cee:	mov    rax,QWORD PTR [rax]
  412cf1:	mov    rdx,QWORD PTR [rbp-0x18]
  412cf5:	mov    rsi,rdx
  412cf8:	mov    rdi,rax
  412cfb:	call   40a940 <flatcc_builder_end_offset_vector_for_unions@@Base>
  412d00:	mov    DWORD PTR [rbp-0x28],eax
  412d03:	mov    eax,DWORD PTR [rbp-0x28]
  412d06:	test   eax,eax
  412d08:	je     412d3f <flatcc_json_parser_union_type@@Base+0x450>
  412d0a:	movzx  edx,WORD PTR [rbp-0x58]
  412d0e:	mov    rax,QWORD PTR [rbp-0x38]
  412d12:	mov    rax,QWORD PTR [rax]
  412d15:	mov    esi,edx
  412d17:	mov    rdi,rax
  412d1a:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  412d1f:	mov    QWORD PTR [rbp-0x10],rax
  412d23:	cmp    QWORD PTR [rbp-0x10],0x0
  412d28:	je     412d42 <flatcc_json_parser_union_type@@Base+0x453>
  412d2a:	mov    edx,DWORD PTR [rbp-0x28]
  412d2d:	mov    rax,QWORD PTR [rbp-0x10]
  412d31:	mov    DWORD PTR [rax],edx
  412d33:	mov    rax,QWORD PTR [rbp-0x40]
  412d37:	jmp    412d5c <flatcc_json_parser_union_type@@Base+0x46d>
  412d39:	nop
  412d3a:	jmp    412d43 <flatcc_json_parser_union_type@@Base+0x454>
  412d3c:	nop
  412d3d:	jmp    412d43 <flatcc_json_parser_union_type@@Base+0x454>
  412d3f:	nop
  412d40:	jmp    412d43 <flatcc_json_parser_union_type@@Base+0x454>
  412d42:	nop
  412d43:	mov    rdx,QWORD PTR [rbp-0x48]
  412d47:	mov    rsi,QWORD PTR [rbp-0x40]
  412d4b:	mov    rax,QWORD PTR [rbp-0x38]
  412d4f:	mov    ecx,0x21
  412d54:	mov    rdi,rax
  412d57:	call   410986 <flatcc_json_parser_set_error@@Base>
  412d5c:	mov    rcx,QWORD PTR [rbp-0x8]
  412d60:	xor    rcx,QWORD PTR fs:0x28
  412d69:	je     412d70 <flatcc_json_parser_union_type@@Base+0x481>
  412d6b:	call   403140 <__stack_chk_fail@plt>
  412d70:	leave  
  412d71:	ret    

0000000000412d72 <flatcc_json_parser_union_vector@@Base>:
  412d72:	endbr64 
  412d76:	push   rbp
  412d77:	mov    rbp,rsp
  412d7a:	sub    rsp,0x40
  412d7e:	mov    QWORD PTR [rbp-0x18],rdi
  412d82:	mov    QWORD PTR [rbp-0x20],rsi
  412d86:	mov    QWORD PTR [rbp-0x28],rdx
  412d8a:	mov    QWORD PTR [rbp-0x30],rcx
  412d8e:	mov    eax,r8d
  412d91:	mov    QWORD PTR [rbp-0x40],r9
  412d95:	mov    WORD PTR [rbp-0x34],ax
  412d99:	mov    rax,QWORD PTR [rbp-0x18]
  412d9d:	mov    rax,QWORD PTR [rax]
  412da0:	mov    rdx,QWORD PTR [rbp-0x40]
  412da4:	mov    rsi,rdx
  412da7:	mov    rdi,rax
  412daa:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412daf:	mov    QWORD PTR [rbp-0x10],rax
  412db3:	mov    rax,QWORD PTR [rbp-0x10]
  412db7:	lea    rcx,[rax+0x10]
  412dbb:	mov    rdx,QWORD PTR [rbp-0x30]
  412dbf:	mov    rax,rdx
  412dc2:	shl    rax,0x2
  412dc6:	add    rax,rdx
  412dc9:	shl    rax,0x3
  412dcd:	add    rax,rcx
  412dd0:	mov    QWORD PTR [rbp-0x8],rax
  412dd4:	mov    rax,QWORD PTR [rbp-0x8]
  412dd8:	mov    rax,QWORD PTR [rax]
  412ddb:	test   rax,rax
  412dde:	je     412dfe <flatcc_json_parser_union_vector@@Base+0x8c>
  412de0:	mov    rdx,QWORD PTR [rbp-0x28]
  412de4:	mov    rsi,QWORD PTR [rbp-0x20]
  412de8:	mov    rax,QWORD PTR [rbp-0x18]
  412dec:	mov    ecx,0x1c
  412df1:	mov    rdi,rax
  412df4:	call   410986 <flatcc_json_parser_set_error@@Base>
  412df9:	jmp    412ebc <flatcc_json_parser_union_vector@@Base+0x14a>
  412dfe:	mov    rax,QWORD PTR [rbp-0x8]
  412e02:	movzx  eax,BYTE PTR [rax+0x14]
  412e06:	test   al,al
  412e08:	jne    412e67 <flatcc_json_parser_union_vector@@Base+0xf5>
  412e0a:	mov    rax,QWORD PTR [rbp-0x10]
  412e0e:	mov    rax,QWORD PTR [rax+0x8]
  412e12:	lea    rdx,[rax+0x1]
  412e16:	mov    rax,QWORD PTR [rbp-0x10]
  412e1a:	mov    QWORD PTR [rax+0x8],rdx
  412e1e:	mov    rax,QWORD PTR [rbp-0x18]
  412e22:	mov    edx,DWORD PTR [rax+0x18]
  412e25:	mov    rax,QWORD PTR [rbp-0x8]
  412e29:	mov    DWORD PTR [rax+0x10],edx
  412e2c:	mov    rax,QWORD PTR [rbp-0x18]
  412e30:	mov    rdx,QWORD PTR [rax+0x8]
  412e34:	mov    rax,QWORD PTR [rbp-0x8]
  412e38:	mov    QWORD PTR [rax+0x8],rdx
  412e3c:	mov    rax,QWORD PTR [rbp-0x8]
  412e40:	mov    rdx,QWORD PTR [rbp-0x20]
  412e44:	mov    QWORD PTR [rax],rdx
  412e47:	mov    rax,QWORD PTR [rbp-0x8]
  412e4b:	mov    rcx,QWORD PTR [rax]
  412e4e:	mov    rdx,QWORD PTR [rbp-0x28]
  412e52:	mov    rax,QWORD PTR [rbp-0x18]
  412e56:	mov    rsi,rcx
  412e59:	mov    rdi,rax
  412e5c:	call   411a65 <flatcc_json_parser_generic_json@@Base>
  412e61:	mov    QWORD PTR [rbp-0x20],rax
  412e65:	jmp    412eb8 <flatcc_json_parser_union_vector@@Base+0x146>
  412e67:	mov    rax,QWORD PTR [rbp-0x10]
  412e6b:	mov    rax,QWORD PTR [rax+0x8]
  412e6f:	lea    rdx,[rax-0x1]
  412e73:	mov    rax,QWORD PTR [rbp-0x10]
  412e77:	mov    QWORD PTR [rax+0x8],rdx
  412e7b:	movzx  r8d,WORD PTR [rbp-0x34]
  412e80:	mov    rax,QWORD PTR [rbp-0x8]
  412e84:	mov    edi,DWORD PTR [rax+0x18]
  412e87:	mov    rax,QWORD PTR [rbp-0x8]
  412e8b:	mov    rcx,QWORD PTR [rax+0x20]
  412e8f:	mov    rdx,QWORD PTR [rbp-0x28]
  412e93:	mov    rsi,QWORD PTR [rbp-0x20]
  412e97:	mov    rax,QWORD PTR [rbp-0x18]
  412e9b:	sub    rsp,0x8
  412e9f:	push   QWORD PTR [rbp+0x10]
  412ea2:	mov    r9d,r8d
  412ea5:	mov    r8d,edi
  412ea8:	mov    rdi,rax
  412eab:	call   412b4e <flatcc_json_parser_union_type@@Base+0x25f>
  412eb0:	add    rsp,0x10
  412eb4:	mov    QWORD PTR [rbp-0x20],rax
  412eb8:	mov    rax,QWORD PTR [rbp-0x20]
  412ebc:	leave  
  412ebd:	ret    

0000000000412ebe <flatcc_json_parser_union_type_vector@@Base>:
  412ebe:	endbr64 
  412ec2:	push   rbp
  412ec3:	mov    rbp,rsp
  412ec6:	sub    rsp,0xc0
  412ecd:	mov    QWORD PTR [rbp-0x78],rdi
  412ed1:	mov    QWORD PTR [rbp-0x80],rsi
  412ed5:	mov    QWORD PTR [rbp-0x88],rdx
  412edc:	mov    QWORD PTR [rbp-0x90],rcx
  412ee3:	mov    eax,r8d
  412ee6:	mov    QWORD PTR [rbp-0xa0],r9
  412eed:	mov    WORD PTR [rbp-0x94],ax
  412ef4:	mov    rax,QWORD PTR [rbp+0x10]
  412ef8:	mov    QWORD PTR [rbp-0xa8],rax
  412eff:	mov    rax,QWORD PTR [rbp+0x18]
  412f03:	mov    QWORD PTR [rbp-0xb0],rax
  412f0a:	mov    rax,QWORD PTR [rbp+0x20]
  412f0e:	mov    QWORD PTR [rbp-0xb8],rax
  412f15:	mov    rax,QWORD PTR fs:0x28
  412f1e:	mov    QWORD PTR [rbp-0x8],rax
  412f22:	xor    eax,eax
  412f24:	mov    rax,QWORD PTR [rbp-0x78]
  412f28:	mov    rax,QWORD PTR [rax]
  412f2b:	mov    rdx,QWORD PTR [rbp-0xa0]
  412f32:	mov    rsi,rdx
  412f35:	mov    rdi,rax
  412f38:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  412f3d:	mov    QWORD PTR [rbp-0x50],rax
  412f41:	mov    rax,QWORD PTR [rbp-0x50]
  412f45:	lea    rcx,[rax+0x10]
  412f49:	mov    rdx,QWORD PTR [rbp-0x90]
  412f50:	mov    rax,rdx
  412f53:	shl    rax,0x2
  412f57:	add    rax,rdx
  412f5a:	shl    rax,0x3
  412f5e:	add    rax,rcx
  412f61:	mov    QWORD PTR [rbp-0x48],rax
  412f65:	mov    rax,QWORD PTR [rbp-0x48]
  412f69:	movzx  eax,BYTE PTR [rax+0x14]
  412f6d:	test   al,al
  412f6f:	je     412f92 <flatcc_json_parser_union_type_vector@@Base+0xd4>
  412f71:	mov    rdx,QWORD PTR [rbp-0x88]
  412f78:	mov    rsi,QWORD PTR [rbp-0x80]
  412f7c:	mov    rax,QWORD PTR [rbp-0x78]
  412f80:	mov    ecx,0x1c
  412f85:	mov    rdi,rax
  412f88:	call   410986 <flatcc_json_parser_set_error@@Base>
  412f8d:	jmp    413359 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  412f92:	mov    rax,QWORD PTR [rbp-0x48]
  412f96:	mov    BYTE PTR [rax+0x14],0x1
  412f9a:	mov    rax,QWORD PTR [rbp-0x78]
  412f9e:	mov    rax,QWORD PTR [rax]
  412fa1:	mov    ecx,0xffffffff
  412fa6:	mov    edx,0x1
  412fab:	mov    esi,0x1
  412fb0:	mov    rdi,rax
  412fb3:	call   40921b <flatcc_builder_start_vector@@Base>
  412fb8:	test   eax,eax
  412fba:	jne    413330 <flatcc_json_parser_union_type_vector@@Base+0x472>
  412fc0:	lea    rcx,[rbp-0x60]
  412fc4:	mov    rdx,QWORD PTR [rbp-0x88]
  412fcb:	mov    rsi,QWORD PTR [rbp-0x80]
  412fcf:	mov    rax,QWORD PTR [rbp-0x78]
  412fd3:	mov    rdi,rax
  412fd6:	call   40ce70 <flatcc_emitter_copy_buffer@@Base+0x62c>
  412fdb:	mov    QWORD PTR [rbp-0x80],rax
  412fdf:	jmp    413105 <flatcc_json_parser_union_type_vector@@Base+0x247>
  412fe4:	mov    rax,QWORD PTR [rbp-0x78]
  412fe8:	mov    rax,QWORD PTR [rax]
  412feb:	mov    esi,0x1
  412ff0:	mov    rdi,rax
  412ff3:	call   408acb <flatcc_builder_extend_vector@@Base>
  412ff8:	mov    QWORD PTR [rbp-0x40],rax
  412ffc:	cmp    QWORD PTR [rbp-0x40],0x0
  413001:	je     413333 <flatcc_json_parser_union_type_vector@@Base+0x475>
  413007:	mov    rax,QWORD PTR [rbp-0x80]
  41300b:	mov    QWORD PTR [rbp-0x38],rax
  41300f:	lea    rcx,[rbp-0x61]
  413013:	mov    rdx,QWORD PTR [rbp-0x88]
  41301a:	mov    rsi,QWORD PTR [rbp-0x38]
  41301e:	mov    rax,QWORD PTR [rbp-0x78]
  413022:	mov    rdi,rax
  413025:	call   40d5d2 <flatcc_emitter_copy_buffer@@Base+0xd8e>
  41302a:	mov    QWORD PTR [rbp-0x80],rax
  41302e:	mov    rax,QWORD PTR [rbp-0x38]
  413032:	cmp    rax,QWORD PTR [rbp-0x80]
  413036:	jne    413088 <flatcc_json_parser_union_type_vector@@Base+0x1ca>
  413038:	mov    rax,QWORD PTR [rbp-0x80]
  41303c:	mov    QWORD PTR [rbp-0x38],rax
  413040:	lea    rdi,[rbp-0x61]
  413044:	mov    rcx,QWORD PTR [rbp-0xa8]
  41304b:	mov    rdx,QWORD PTR [rbp-0x88]
  413052:	mov    rsi,QWORD PTR [rbp-0x38]
  413056:	mov    rax,QWORD PTR [rbp-0x78]
  41305a:	mov    r8,rdi
  41305d:	mov    rdi,rax
  413060:	call   40db6a <flatcc_emitter_copy_buffer@@Base+0x1326>
  413065:	mov    QWORD PTR [rbp-0x80],rax
  413069:	mov    rax,QWORD PTR [rbp-0x80]
  41306d:	cmp    rax,QWORD PTR [rbp-0x38]
  413071:	je     413336 <flatcc_json_parser_union_type_vector@@Base+0x478>
  413077:	mov    rax,QWORD PTR [rbp-0x80]
  41307b:	cmp    rax,QWORD PTR [rbp-0x88]
  413082:	je     413336 <flatcc_json_parser_union_type_vector@@Base+0x478>
  413088:	movzx  eax,BYTE PTR [rbp-0x61]
  41308c:	movzx  edx,al
  41308f:	mov    rax,QWORD PTR [rbp-0xb8]
  413096:	mov    edi,edx
  413098:	call   rax
  41309a:	test   eax,eax
  41309c:	jne    4130d1 <flatcc_json_parser_union_type_vector@@Base+0x213>
  41309e:	mov    rax,QWORD PTR [rbp-0x78]
  4130a2:	mov    eax,DWORD PTR [rax+0x10]
  4130a5:	and    eax,0x1
  4130a8:	test   eax,eax
  4130aa:	jne    4130cd <flatcc_json_parser_union_type_vector@@Base+0x20f>
  4130ac:	mov    rdx,QWORD PTR [rbp-0x88]
  4130b3:	mov    rsi,QWORD PTR [rbp-0x80]
  4130b7:	mov    rax,QWORD PTR [rbp-0x78]
  4130bb:	mov    ecx,0xf
  4130c0:	mov    rdi,rax
  4130c3:	call   410986 <flatcc_json_parser_set_error@@Base>
  4130c8:	jmp    413359 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  4130cd:	mov    BYTE PTR [rbp-0x61],0x0
  4130d1:	movzx  eax,BYTE PTR [rbp-0x61]
  4130d5:	movzx  edx,al
  4130d8:	mov    rax,QWORD PTR [rbp-0x40]
  4130dc:	mov    esi,edx
  4130de:	mov    rdi,rax
  4130e1:	call   40c989 <flatcc_emitter_copy_buffer@@Base+0x145>
  4130e6:	lea    rcx,[rbp-0x60]
  4130ea:	mov    rdx,QWORD PTR [rbp-0x88]
  4130f1:	mov    rsi,QWORD PTR [rbp-0x80]
  4130f5:	mov    rax,QWORD PTR [rbp-0x78]
  4130f9:	mov    rdi,rax
  4130fc:	call   40cf2d <flatcc_emitter_copy_buffer@@Base+0x6e9>
  413101:	mov    QWORD PTR [rbp-0x80],rax
  413105:	mov    eax,DWORD PTR [rbp-0x60]
  413108:	test   eax,eax
  41310a:	jne    412fe4 <flatcc_json_parser_union_type_vector@@Base+0x126>
  413110:	mov    rax,QWORD PTR [rbp-0x78]
  413114:	mov    rax,QWORD PTR [rax]
  413117:	mov    rdi,rax
  41311a:	call   40a4c5 <flatcc_builder_vector_count@@Base>
  41311f:	mov    DWORD PTR [rbp-0x5c],eax
  413122:	mov    rax,QWORD PTR [rbp-0x48]
  413126:	mov    edx,DWORD PTR [rbp-0x5c]
  413129:	mov    DWORD PTR [rax+0x18],edx
  41312c:	mov    eax,DWORD PTR [rbp-0x5c]
  41312f:	mov    QWORD PTR [rbp-0x30],rax
  413133:	mov    rax,QWORD PTR [rbp-0x78]
  413137:	mov    rax,QWORD PTR [rax]
  41313a:	mov    rdx,QWORD PTR [rbp-0x30]
  41313e:	mov    rsi,rdx
  413141:	mov    rdi,rax
  413144:	call   4075c8 <flatcc_builder_enter_user_frame@@Base>
  413149:	mov    QWORD PTR [rbp-0x28],rax
  41314d:	mov    rax,QWORD PTR [rbp-0x78]
  413151:	mov    rax,QWORD PTR [rax]
  413154:	mov    rdx,QWORD PTR [rbp-0x28]
  413158:	mov    rsi,rdx
  41315b:	mov    rdi,rax
  41315e:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  413163:	mov    QWORD PTR [rbp-0x20],rax
  413167:	mov    rax,QWORD PTR [rbp-0x78]
  41316b:	mov    rax,QWORD PTR [rax]
  41316e:	mov    rdi,rax
  413171:	call   40a4e0 <flatcc_builder_vector_edit@@Base>
  413176:	mov    rcx,rax
  413179:	mov    rdx,QWORD PTR [rbp-0x30]
  41317d:	mov    rax,QWORD PTR [rbp-0x20]
  413181:	mov    rsi,rcx
  413184:	mov    rdi,rax
  413187:	call   4031a0 <memcpy@plt>
  41318c:	mov    rax,QWORD PTR [rbp-0x78]
  413190:	mov    rax,QWORD PTR [rax]
  413193:	mov    rdi,rax
  413196:	call   40a410 <flatcc_builder_end_vector@@Base>
  41319b:	mov    DWORD PTR [rbp-0x58],eax
  41319e:	cmp    DWORD PTR [rbp-0x58],0x0
  4131a2:	je     413339 <flatcc_json_parser_union_type_vector@@Base+0x47b>
  4131a8:	movzx  eax,WORD PTR [rbp-0x94]
  4131af:	lea    edx,[rax-0x1]
  4131b2:	mov    rax,QWORD PTR [rbp-0x78]
  4131b6:	mov    rax,QWORD PTR [rax]
  4131b9:	mov    esi,edx
  4131bb:	mov    rdi,rax
  4131be:	call   40b7f3 <flatcc_builder_table_add_offset@@Base>
  4131c3:	mov    QWORD PTR [rbp-0x18],rax
  4131c7:	cmp    QWORD PTR [rbp-0x18],0x0
  4131cc:	je     41333c <flatcc_json_parser_union_type_vector@@Base+0x47e>
  4131d2:	mov    rax,QWORD PTR [rbp-0x18]
  4131d6:	mov    edx,DWORD PTR [rbp-0x58]
  4131d9:	mov    DWORD PTR [rax],edx
  4131db:	mov    rax,QWORD PTR [rbp-0x78]
  4131df:	mov    rax,QWORD PTR [rax]
  4131e2:	mov    rdx,QWORD PTR [rbp-0xa0]
  4131e9:	mov    rsi,rdx
  4131ec:	mov    rdi,rax
  4131ef:	call   4077ad <flatcc_builder_get_user_frame_ptr@@Base>
  4131f4:	mov    QWORD PTR [rbp-0x50],rax
  4131f8:	mov    rax,QWORD PTR [rbp-0x50]
  4131fc:	lea    rcx,[rax+0x10]
  413200:	mov    rdx,QWORD PTR [rbp-0x90]
  413207:	mov    rax,rdx
  41320a:	shl    rax,0x2
  41320e:	add    rax,rdx
  413211:	shl    rax,0x3
  413215:	add    rax,rcx
  413218:	mov    QWORD PTR [rbp-0x48],rax
  41321c:	mov    rax,QWORD PTR [rbp-0x48]
  413220:	mov    rdx,QWORD PTR [rbp-0x28]
  413224:	mov    QWORD PTR [rax+0x20],rdx
  413228:	mov    rax,QWORD PTR [rbp-0x48]
  41322c:	mov    rax,QWORD PTR [rax]
  41322f:	test   rax,rax
  413232:	jne    413251 <flatcc_json_parser_union_type_vector@@Base+0x393>
  413234:	mov    rax,QWORD PTR [rbp-0x50]
  413238:	mov    rax,QWORD PTR [rax+0x8]
  41323c:	lea    rdx,[rax+0x1]
  413240:	mov    rax,QWORD PTR [rbp-0x50]
  413244:	mov    QWORD PTR [rax+0x8],rdx
  413248:	mov    rax,QWORD PTR [rbp-0x80]
  41324c:	jmp    413359 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  413251:	mov    rax,QWORD PTR [rbp-0x50]
  413255:	mov    rax,QWORD PTR [rax+0x8]
  413259:	test   rax,rax
  41325c:	jne    41327d <flatcc_json_parser_union_type_vector@@Base+0x3bf>
  41325e:	lea    rcx,[rip+0x317b]        # 4163e0 <flatcc_builder_padding_base@@Base+0x2040>
  413265:	mov    edx,0x462
  41326a:	lea    rsi,[rip+0x2c27]        # 415e98 <flatcc_builder_padding_base@@Base+0x1af8>
  413271:	lea    rdi,[rip+0x2c84]        # 415efc <flatcc_builder_padding_base@@Base+0x1b5c>
  413278:	call   403150 <__assert_fail@plt>
  41327d:	mov    rax,QWORD PTR [rbp-0x50]
  413281:	mov    rax,QWORD PTR [rax+0x8]
  413285:	lea    rdx,[rax-0x1]
  413289:	mov    rax,QWORD PTR [rbp-0x50]
  41328d:	mov    QWORD PTR [rax+0x8],rdx
  413291:	mov    rax,QWORD PTR [rbp-0x78]
  413295:	mov    eax,DWORD PTR [rax+0x18]
  413298:	mov    DWORD PTR [rbp-0x54],eax
  41329b:	mov    rax,QWORD PTR [rbp-0x78]
  41329f:	mov    rax,QWORD PTR [rax+0x8]
  4132a3:	mov    QWORD PTR [rbp-0x10],rax
  4132a7:	mov    rax,QWORD PTR [rbp-0x48]
  4132ab:	mov    edx,DWORD PTR [rax+0x10]
  4132ae:	mov    rax,QWORD PTR [rbp-0x78]
  4132b2:	mov    DWORD PTR [rax+0x18],edx
  4132b5:	mov    rax,QWORD PTR [rbp-0x48]
  4132b9:	mov    rdx,QWORD PTR [rax+0x8]
  4132bd:	mov    rax,QWORD PTR [rbp-0x78]
  4132c1:	mov    QWORD PTR [rax+0x8],rdx
  4132c5:	movzx  r8d,WORD PTR [rbp-0x94]
  4132cd:	mov    rax,QWORD PTR [rbp-0x48]
  4132d1:	mov    rsi,QWORD PTR [rax]
  4132d4:	mov    edi,DWORD PTR [rbp-0x5c]
  4132d7:	mov    rcx,QWORD PTR [rbp-0x28]
  4132db:	mov    rdx,QWORD PTR [rbp-0x88]
  4132e2:	mov    rax,QWORD PTR [rbp-0x78]
  4132e6:	sub    rsp,0x8
  4132ea:	push   QWORD PTR [rbp-0xb0]
  4132f0:	mov    r9d,r8d
  4132f3:	mov    r8d,edi
  4132f6:	mov    rdi,rax
  4132f9:	call   412b4e <flatcc_json_parser_union_type@@Base+0x25f>
  4132fe:	add    rsp,0x10
  413302:	cmp    QWORD PTR [rbp-0x88],rax
  413309:	jne    413314 <flatcc_json_parser_union_type_vector@@Base+0x456>
  41330b:	mov    rax,QWORD PTR [rbp-0x88]
  413312:	jmp    413359 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  413314:	mov    rax,QWORD PTR [rbp-0x78]
  413318:	mov    edx,DWORD PTR [rbp-0x54]
  41331b:	mov    DWORD PTR [rax+0x18],edx
  41331e:	mov    rax,QWORD PTR [rbp-0x78]
  413322:	mov    rdx,QWORD PTR [rbp-0x10]
  413326:	mov    QWORD PTR [rax+0x8],rdx
  41332a:	mov    rax,QWORD PTR [rbp-0x80]
  41332e:	jmp    413359 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  413330:	nop
  413331:	jmp    41333d <flatcc_json_parser_union_type_vector@@Base+0x47f>
  413333:	nop
  413334:	jmp    41333d <flatcc_json_parser_union_type_vector@@Base+0x47f>
  413336:	nop
  413337:	jmp    41333d <flatcc_json_parser_union_type_vector@@Base+0x47f>
  413339:	nop
  41333a:	jmp    41333d <flatcc_json_parser_union_type_vector@@Base+0x47f>
  41333c:	nop
  41333d:	mov    rdx,QWORD PTR [rbp-0x88]
  413344:	mov    rsi,QWORD PTR [rbp-0x80]
  413348:	mov    rax,QWORD PTR [rbp-0x78]
  41334c:	mov    ecx,0x21
  413351:	mov    rdi,rax
  413354:	call   410986 <flatcc_json_parser_set_error@@Base>
  413359:	mov    rcx,QWORD PTR [rbp-0x8]
  41335d:	xor    rcx,QWORD PTR fs:0x28
  413366:	je     41336d <flatcc_json_parser_union_type_vector@@Base+0x4af>
  413368:	call   403140 <__stack_chk_fail@plt>
  41336d:	leave  
  41336e:	ret    

000000000041336f <flatcc_json_parser_table_as_root@@Base>:
  41336f:	endbr64 
  413373:	push   rbp
  413374:	mov    rbp,rsp
  413377:	sub    rsp,0xa0
  41337e:	mov    QWORD PTR [rbp-0x68],rdi
  413382:	mov    QWORD PTR [rbp-0x70],rsi
  413386:	mov    QWORD PTR [rbp-0x78],rdx
  41338a:	mov    QWORD PTR [rbp-0x80],rcx
  41338e:	mov    DWORD PTR [rbp-0x84],r8d
  413395:	mov    QWORD PTR [rbp-0x90],r9
  41339c:	mov    rax,QWORD PTR [rbp+0x10]
  4133a0:	mov    QWORD PTR [rbp-0x98],rax
  4133a7:	mov    rax,QWORD PTR fs:0x28
  4133b0:	mov    QWORD PTR [rbp-0x8],rax
  4133b4:	xor    eax,eax
  4133b6:	mov    eax,DWORD PTR [rbp-0x84]
  4133bc:	sar    eax,1
  4133be:	and    eax,0x2
  4133c1:	mov    DWORD PTR [rbp-0x54],eax
  4133c4:	cmp    QWORD PTR [rbp-0x70],0x0
  4133c9:	jne    4133d1 <flatcc_json_parser_table_as_root@@Base+0x62>
  4133cb:	lea    rax,[rbp-0x50]
  4133cf:	jmp    4133d5 <flatcc_json_parser_table_as_root@@Base+0x66>
  4133d1:	mov    rax,QWORD PTR [rbp-0x70]
  4133d5:	mov    QWORD PTR [rbp-0x70],rax
  4133d9:	mov    rdx,QWORD PTR [rbp-0x78]
  4133dd:	mov    rax,QWORD PTR [rbp-0x80]
  4133e1:	lea    rcx,[rdx+rax*1]
  4133e5:	mov    edi,DWORD PTR [rbp-0x84]
  4133eb:	mov    rdx,QWORD PTR [rbp-0x78]
  4133ef:	mov    rsi,QWORD PTR [rbp-0x68]
  4133f3:	mov    rax,QWORD PTR [rbp-0x70]
  4133f7:	mov    r8d,edi
  4133fa:	mov    rdi,rax
  4133fd:	call   40c9ae <flatcc_emitter_copy_buffer@@Base+0x16a>
  413402:	mov    edx,DWORD PTR [rbp-0x54]
  413405:	mov    rsi,QWORD PTR [rbp-0x90]
  41340c:	mov    rax,QWORD PTR [rbp-0x68]
  413410:	mov    ecx,edx
  413412:	mov    edx,0x0
  413417:	mov    rdi,rax
  41341a:	call   4086a4 <flatcc_builder_start_buffer@@Base>
  41341f:	test   eax,eax
  413421:	je     41342a <flatcc_json_parser_table_as_root@@Base+0xbb>
  413423:	mov    eax,0xffffffff
  413428:	jmp    413492 <flatcc_json_parser_table_as_root@@Base+0x123>
  41342a:	mov    rdx,QWORD PTR [rbp-0x78]
  41342e:	mov    rax,QWORD PTR [rbp-0x80]
  413432:	lea    r8,[rdx+rax*1]
  413436:	lea    rdx,[rbp-0x58]
  41343a:	mov    rsi,QWORD PTR [rbp-0x78]
  41343e:	mov    rdi,QWORD PTR [rbp-0x70]
  413442:	mov    rax,QWORD PTR [rbp-0x98]
  413449:	mov    rcx,rdx
  41344c:	mov    rdx,r8
  41344f:	call   rax
  413451:	mov    rax,QWORD PTR [rbp-0x70]
  413455:	mov    eax,DWORD PTR [rax+0x20]
  413458:	test   eax,eax
  41345a:	je     413465 <flatcc_json_parser_table_as_root@@Base+0xf6>
  41345c:	mov    rax,QWORD PTR [rbp-0x70]
  413460:	mov    eax,DWORD PTR [rax+0x20]
  413463:	jmp    413492 <flatcc_json_parser_table_as_root@@Base+0x123>
  413465:	mov    edx,DWORD PTR [rbp-0x58]
  413468:	mov    rax,QWORD PTR [rbp-0x68]
  41346c:	mov    esi,edx
  41346e:	mov    rdi,rax
  413471:	call   4087f1 <flatcc_builder_end_buffer@@Base>
  413476:	test   eax,eax
  413478:	jne    413481 <flatcc_json_parser_table_as_root@@Base+0x112>
  41347a:	mov    eax,0xffffffff
  41347f:	jmp    413492 <flatcc_json_parser_table_as_root@@Base+0x123>
  413481:	mov    rax,QWORD PTR [rbp-0x70]
  413485:	mov    rdx,QWORD PTR [rbp-0x78]
  413489:	mov    QWORD PTR [rax+0x40],rdx
  41348d:	mov    eax,0x0
  413492:	mov    rcx,QWORD PTR [rbp-0x8]
  413496:	xor    rcx,QWORD PTR fs:0x28
  41349f:	je     4134a6 <flatcc_json_parser_table_as_root@@Base+0x137>
  4134a1:	call   403140 <__stack_chk_fail@plt>
  4134a6:	leave  
  4134a7:	ret    

00000000004134a8 <flatcc_json_parser_struct_as_root@@Base>:
  4134a8:	endbr64 
  4134ac:	push   rbp
  4134ad:	mov    rbp,rsp
  4134b0:	sub    rsp,0xa0
  4134b7:	mov    QWORD PTR [rbp-0x68],rdi
  4134bb:	mov    QWORD PTR [rbp-0x70],rsi
  4134bf:	mov    QWORD PTR [rbp-0x78],rdx
  4134c3:	mov    QWORD PTR [rbp-0x80],rcx
  4134c7:	mov    DWORD PTR [rbp-0x84],r8d
  4134ce:	mov    QWORD PTR [rbp-0x90],r9
  4134d5:	mov    rax,QWORD PTR [rbp+0x10]
  4134d9:	mov    QWORD PTR [rbp-0x98],rax
  4134e0:	mov    rax,QWORD PTR fs:0x28
  4134e9:	mov    QWORD PTR [rbp-0x8],rax
  4134ed:	xor    eax,eax
  4134ef:	mov    eax,DWORD PTR [rbp-0x84]
  4134f5:	sar    eax,1
  4134f7:	and    eax,0x2
  4134fa:	mov    DWORD PTR [rbp-0x54],eax
  4134fd:	cmp    QWORD PTR [rbp-0x70],0x0
  413502:	jne    41350a <flatcc_json_parser_struct_as_root@@Base+0x62>
  413504:	lea    rax,[rbp-0x50]
  413508:	jmp    41350e <flatcc_json_parser_struct_as_root@@Base+0x66>
  41350a:	mov    rax,QWORD PTR [rbp-0x70]
  41350e:	mov    QWORD PTR [rbp-0x70],rax
  413512:	mov    rdx,QWORD PTR [rbp-0x78]
  413516:	mov    rax,QWORD PTR [rbp-0x80]
  41351a:	lea    rcx,[rdx+rax*1]
  41351e:	mov    edi,DWORD PTR [rbp-0x84]
  413524:	mov    rdx,QWORD PTR [rbp-0x78]
  413528:	mov    rsi,QWORD PTR [rbp-0x68]
  41352c:	mov    rax,QWORD PTR [rbp-0x70]
  413530:	mov    r8d,edi
  413533:	mov    rdi,rax
  413536:	call   40c9ae <flatcc_emitter_copy_buffer@@Base+0x16a>
  41353b:	mov    edx,DWORD PTR [rbp-0x54]
  41353e:	mov    rsi,QWORD PTR [rbp-0x90]
  413545:	mov    rax,QWORD PTR [rbp-0x68]
  413549:	mov    ecx,edx
  41354b:	mov    edx,0x0
  413550:	mov    rdi,rax
  413553:	call   4086a4 <flatcc_builder_start_buffer@@Base>
  413558:	test   eax,eax
  41355a:	je     413563 <flatcc_json_parser_struct_as_root@@Base+0xbb>
  41355c:	mov    eax,0xffffffff
  413561:	jmp    4135cb <flatcc_json_parser_struct_as_root@@Base+0x123>
  413563:	mov    rdx,QWORD PTR [rbp-0x78]
  413567:	mov    rax,QWORD PTR [rbp-0x80]
  41356b:	lea    r8,[rdx+rax*1]
  41356f:	lea    rdx,[rbp-0x58]
  413573:	mov    rsi,QWORD PTR [rbp-0x78]
  413577:	mov    rdi,QWORD PTR [rbp-0x70]
  41357b:	mov    rax,QWORD PTR [rbp-0x98]
  413582:	mov    rcx,rdx
  413585:	mov    rdx,r8
  413588:	call   rax
  41358a:	mov    rax,QWORD PTR [rbp-0x70]
  41358e:	mov    eax,DWORD PTR [rax+0x20]
  413591:	test   eax,eax
  413593:	je     41359e <flatcc_json_parser_struct_as_root@@Base+0xf6>
  413595:	mov    rax,QWORD PTR [rbp-0x70]
  413599:	mov    eax,DWORD PTR [rax+0x20]
  41359c:	jmp    4135cb <flatcc_json_parser_struct_as_root@@Base+0x123>
  41359e:	mov    edx,DWORD PTR [rbp-0x58]
  4135a1:	mov    rax,QWORD PTR [rbp-0x68]
  4135a5:	mov    esi,edx
  4135a7:	mov    rdi,rax
  4135aa:	call   4087f1 <flatcc_builder_end_buffer@@Base>
  4135af:	test   eax,eax
  4135b1:	jne    4135ba <flatcc_json_parser_struct_as_root@@Base+0x112>
  4135b3:	mov    eax,0xffffffff
  4135b8:	jmp    4135cb <flatcc_json_parser_struct_as_root@@Base+0x123>
  4135ba:	mov    rax,QWORD PTR [rbp-0x70]
  4135be:	mov    rdx,QWORD PTR [rbp-0x78]
  4135c2:	mov    QWORD PTR [rax+0x40],rdx
  4135c6:	mov    eax,0x0
  4135cb:	mov    rcx,QWORD PTR [rbp-0x8]
  4135cf:	xor    rcx,QWORD PTR fs:0x28
  4135d8:	je     4135df <flatcc_json_parser_struct_as_root@@Base+0x137>
  4135da:	call   403140 <__stack_chk_fail@plt>
  4135df:	leave  
  4135e0:	ret    
  4135e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004135f0 <__libc_csu_init@@Base>:
  4135f0:	endbr64 
  4135f4:	push   r15
  4135f6:	lea    r15,[rip+0x680b]        # 419e08 <flatcc_builder_padding_base@@Base+0x5a68>
  4135fd:	push   r14
  4135ff:	mov    r14,rdx
  413602:	push   r13
  413604:	mov    r13,rsi
  413607:	push   r12
  413609:	mov    r12d,edi
  41360c:	push   rbp
  41360d:	lea    rbp,[rip+0x67fc]        # 419e10 <flatcc_builder_padding_base@@Base+0x5a70>
  413614:	push   rbx
  413615:	sub    rbp,r15
  413618:	sub    rsp,0x8
  41361c:	call   403000 <free@plt-0x110>
  413621:	sar    rbp,0x3
  413625:	je     413646 <__libc_csu_init@@Base+0x56>
  413627:	xor    ebx,ebx
  413629:	nop    DWORD PTR [rax+0x0]
  413630:	mov    rdx,r14
  413633:	mov    rsi,r13
  413636:	mov    edi,r12d
  413639:	call   QWORD PTR [r15+rbx*8]
  41363d:	add    rbx,0x1
  413641:	cmp    rbp,rbx
  413644:	jne    413630 <__libc_csu_init@@Base+0x40>
  413646:	add    rsp,0x8
  41364a:	pop    rbx
  41364b:	pop    rbp
  41364c:	pop    r12
  41364e:	pop    r13
  413650:	pop    r14
  413652:	pop    r15
  413654:	ret    
  413655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000413660 <__libc_csu_fini@@Base>:
  413660:	endbr64 
  413664:	ret    

Disassembly of section .fini:

0000000000413668 <.fini>:
  413668:	endbr64 
  41366c:	sub    rsp,0x8
  413670:	add    rsp,0x8
  413674:	ret    
