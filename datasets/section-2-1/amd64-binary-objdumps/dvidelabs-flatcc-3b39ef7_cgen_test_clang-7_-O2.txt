
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x4afe1]        # 450ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <__ctype_toupper_loc@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <__ctype_toupper_loc@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x4afe2]        # 451008 <fb_value_set_deleted@@Base+0x65a8>
  406026:	jmp    QWORD PTR [rip+0x4afe4]        # 451010 <fb_value_set_deleted@@Base+0x65b0>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <__ctype_toupper_loc@plt>:
  406030:	jmp    QWORD PTR [rip+0x4afe2]        # 451018 <__ctype_toupper_loc@GLIBC_2.3>
  406036:	push   0x0
  40603b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406040 <free@plt>:
  406040:	jmp    QWORD PTR [rip+0x4afda]        # 451020 <free@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406050 <strncpy@plt>:
  406050:	jmp    QWORD PTR [rip+0x4afd2]        # 451028 <strncpy@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406060 <strncmp@plt>:
  406060:	jmp    QWORD PTR [rip+0x4afca]        # 451030 <strncmp@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406070 <puts@plt>:
  406070:	jmp    QWORD PTR [rip+0x4afc2]        # 451038 <puts@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406080 <qsort@plt>:
  406080:	jmp    QWORD PTR [rip+0x4afba]        # 451040 <qsort@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406090 <strtod@plt>:
  406090:	jmp    QWORD PTR [rip+0x4afb2]        # 451048 <strtod@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060a0 <vsnprintf@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x4afaa]        # 451050 <vsnprintf@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060b0 <fread_unlocked@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x4afa2]        # 451058 <fread_unlocked@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060c0 <fclose@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x4af9a]        # 451060 <fclose@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060d0 <strlen@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x4af92]        # 451068 <strlen@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060e0 <rewind@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x4af8a]        # 451070 <rewind@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060f0 <__assert_fail@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x4af82]        # 451078 <__assert_fail@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406100 <memset@plt>:
  406100:	jmp    QWORD PTR [rip+0x4af7a]        # 451080 <memset@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406110 <fputc@plt>:
  406110:	jmp    QWORD PTR [rip+0x4af72]        # 451088 <fputc@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406120 <memchr@plt>:
  406120:	jmp    QWORD PTR [rip+0x4af6a]        # 451090 <memchr@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406130 <memcmp@plt>:
  406130:	jmp    QWORD PTR [rip+0x4af62]        # 451098 <memcmp@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406140 <calloc@plt>:
  406140:	jmp    QWORD PTR [rip+0x4af5a]        # 4510a0 <calloc@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406150 <strcmp@plt>:
  406150:	jmp    QWORD PTR [rip+0x4af52]        # 4510a8 <strcmp@GLIBC_2.2.5>
  406156:	push   0x12
  40615b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406160 <fputc_unlocked@plt>:
  406160:	jmp    QWORD PTR [rip+0x4af4a]        # 4510b0 <fputc_unlocked@GLIBC_2.2.5>
  406166:	push   0x13
  40616b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406170 <fprintf@plt>:
  406170:	jmp    QWORD PTR [rip+0x4af42]        # 4510b8 <fprintf@GLIBC_2.2.5>
  406176:	push   0x14
  40617b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406180 <ftell@plt>:
  406180:	jmp    QWORD PTR [rip+0x4af3a]        # 4510c0 <ftell@GLIBC_2.2.5>
  406186:	push   0x15
  40618b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406190 <memcpy@plt>:
  406190:	jmp    QWORD PTR [rip+0x4af32]        # 4510c8 <memcpy@GLIBC_2.14>
  406196:	push   0x16
  40619b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061a0 <malloc@plt>:
  4061a0:	jmp    QWORD PTR [rip+0x4af2a]        # 4510d0 <malloc@GLIBC_2.2.5>
  4061a6:	push   0x17
  4061ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061b0 <fseek@plt>:
  4061b0:	jmp    QWORD PTR [rip+0x4af22]        # 4510d8 <fseek@GLIBC_2.2.5>
  4061b6:	push   0x18
  4061bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061c0 <realloc@plt>:
  4061c0:	jmp    QWORD PTR [rip+0x4af1a]        # 4510e0 <realloc@GLIBC_2.2.5>
  4061c6:	push   0x19
  4061cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061d0 <fopen@plt>:
  4061d0:	jmp    QWORD PTR [rip+0x4af12]        # 4510e8 <fopen@GLIBC_2.2.5>
  4061d6:	push   0x1a
  4061db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061e0 <vfprintf@plt>:
  4061e0:	jmp    QWORD PTR [rip+0x4af0a]        # 4510f0 <vfprintf@GLIBC_2.2.5>
  4061e6:	push   0x1b
  4061eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061f0 <sprintf@plt>:
  4061f0:	jmp    QWORD PTR [rip+0x4af02]        # 4510f8 <sprintf@GLIBC_2.2.5>
  4061f6:	push   0x1c
  4061fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406200 <exit@plt>:
  406200:	jmp    QWORD PTR [rip+0x4aefa]        # 451100 <exit@GLIBC_2.2.5>
  406206:	push   0x1d
  40620b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406210 <fwrite@plt>:
  406210:	jmp    QWORD PTR [rip+0x4aef2]        # 451108 <fwrite@GLIBC_2.2.5>
  406216:	push   0x1e
  40621b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406220 <posix_memalign@plt>:
  406220:	jmp    QWORD PTR [rip+0x4aeea]        # 451110 <posix_memalign@GLIBC_2.2.5>
  406226:	push   0x1f
  40622b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000406230 <_start@@Base>:
  406230:	endbr64 
  406234:	xor    ebp,ebp
  406236:	mov    r9,rdx
  406239:	pop    rsi
  40623a:	mov    rdx,rsp
  40623d:	and    rsp,0xfffffffffffffff0
  406241:	push   rax
  406242:	push   rsp
  406243:	mov    r8,0x42d520
  40624a:	mov    rcx,0x42d4b0
  406251:	mov    rdi,0x406320
  406258:	call   QWORD PTR [rip+0x4ad8a]        # 450fe8 <__libc_start_main@GLIBC_2.2.5>
  40625e:	hlt    
  40625f:	nop
  406260:	endbr64 
  406264:	ret    
  406265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40626f:	nop
  406270:	mov    eax,0x451128
  406275:	cmp    rax,0x451128
  40627b:	je     406290 <_start@@Base+0x60>
  40627d:	mov    eax,0x0
  406282:	test   rax,rax
  406285:	je     406290 <_start@@Base+0x60>
  406287:	mov    edi,0x451128
  40628c:	jmp    rax
  40628e:	xchg   ax,ax
  406290:	ret    
  406291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40629c:	nop    DWORD PTR [rax+0x0]
  4062a0:	mov    esi,0x451128
  4062a5:	sub    rsi,0x451128
  4062ac:	mov    rax,rsi
  4062af:	shr    rsi,0x3f
  4062b3:	sar    rax,0x3
  4062b7:	add    rsi,rax
  4062ba:	sar    rsi,1
  4062bd:	je     4062d0 <_start@@Base+0xa0>
  4062bf:	mov    eax,0x0
  4062c4:	test   rax,rax
  4062c7:	je     4062d0 <_start@@Base+0xa0>
  4062c9:	mov    edi,0x451128
  4062ce:	jmp    rax
  4062d0:	ret    
  4062d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062dc:	nop    DWORD PTR [rax+0x0]
  4062e0:	endbr64 
  4062e4:	cmp    BYTE PTR [rip+0x4ae45],0x0        # 451130 <__bss_start@@Base+0x8>
  4062eb:	jne    406300 <_start@@Base+0xd0>
  4062ed:	push   rbp
  4062ee:	mov    rbp,rsp
  4062f1:	call   406270 <_start@@Base+0x40>
  4062f6:	mov    BYTE PTR [rip+0x4ae33],0x1        # 451130 <__bss_start@@Base+0x8>
  4062fd:	pop    rbp
  4062fe:	ret    
  4062ff:	nop
  406300:	ret    
  406301:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40630c:	nop    DWORD PTR [rax+0x0]
  406310:	endbr64 
  406314:	jmp    4062a0 <_start@@Base+0x70>
  406316:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406320 <main@@Base>:
  406320:	push   rbp
  406321:	push   r14
  406323:	push   rbx
  406324:	sub    rsp,0xfb0
  40632b:	lea    rsi,[rip+0x27dce]        # 42e100 <_IO_stdin_used@@Base+0x100>
  406332:	lea    rdi,[rsp+0x110]
  40633a:	mov    edx,0xe97
  40633f:	call   406190 <memcpy@plt>
  406344:	mov    rbx,rsp
  406347:	mov    rdi,rbx
  40634a:	call   406470 <flatcc_init_options@@Base>
  40634f:	vbroadcastss xmm0,DWORD PTR [rip+0x27cac]        # 42e004 <_IO_stdin_used@@Base+0x4>
  406358:	vmovups XMMWORD PTR [rsp+0xb0],xmm0
  406361:	mov    DWORD PTR [rsp+0x80],0x1
  40636c:	lea    rsi,[rip+0x27c95]        # 42e008 <_IO_stdin_used@@Base+0x8>
  406373:	xor    edx,edx
  406375:	xor    ecx,ecx
  406377:	mov    rdi,rbx
  40637a:	call   406590 <flatcc_create_context@@Base>
  40637f:	test   rax,rax
  406382:	jne    4063ae <main@@Base+0x8e>
  406384:	mov    rax,QWORD PTR [rip+0x4ac6d]        # 450ff8 <stderr@GLIBC_2.2.5>
  40638b:	mov    rcx,QWORD PTR [rax]
  40638e:	lea    rdi,[rip+0x27c80]        # 42e015 <_IO_stdin_used@@Base+0x15>
  406395:	mov    esi,0x29
  40639a:	mov    edx,0x1
  40639f:	call   406210 <fwrite@plt>
  4063a4:	mov    ebp,0xffffffff
  4063a9:	jmp    406451 <main@@Base+0x131>
  4063ae:	mov    rbx,rax
  4063b1:	lea    rsi,[rsp+0x110]
  4063b9:	mov    edx,0xe97
  4063be:	mov    rdi,rax
  4063c1:	call   4065f0 <flatcc_parse_buffer@@Base>
  4063c6:	mov    ebp,eax
  4063c8:	mov    r14,QWORD PTR [rip+0x4ac29]        # 450ff8 <stderr@GLIBC_2.2.5>
  4063cf:	mov    rcx,QWORD PTR [r14]
  4063d2:	test   eax,eax
  4063d4:	jne    406433 <main@@Base+0x113>
  4063d6:	lea    rdi,[rip+0x27c77]        # 42e054 <_IO_stdin_used@@Base+0x54>
  4063dd:	mov    esi,0x11
  4063e2:	mov    edx,0x1
  4063e7:	call   406210 <fwrite@plt>
  4063ec:	mov    rcx,QWORD PTR [r14]
  4063ef:	lea    rdi,[rip+0x27c70]        # 42e066 <_IO_stdin_used@@Base+0x66>
  4063f6:	mov    esi,0x1f
  4063fb:	mov    edx,0x1
  406400:	call   406210 <fwrite@plt>
  406405:	mov    rdi,rbx
  406408:	call   406d00 <flatcc_generate_files@@Base>
  40640d:	test   eax,eax
  40640f:	jne    40645f <main@@Base+0x13f>
  406411:	mov    rax,QWORD PTR [rip+0x4abc8]        # 450fe0 <stdout@GLIBC_2.2.5>
  406418:	mov    rdi,QWORD PTR [rax]
  40641b:	lea    rsi,[rip+0x27c85]        # 42e0a7 <_IO_stdin_used@@Base+0xa7>
  406422:	lea    rdx,[rsp+0x110]
  40642a:	xor    eax,eax
  40642c:	call   406170 <fprintf@plt>
  406431:	jmp    406449 <main@@Base+0x129>
  406433:	lea    rdi,[rip+0x27c05]        # 42e03f <_IO_stdin_used@@Base+0x3f>
  40643a:	mov    esi,0x14
  40643f:	mov    edx,0x1
  406444:	call   406210 <fwrite@plt>
  406449:	mov    rdi,rbx
  40644c:	call   406e20 <flatcc_destroy_context@@Base>
  406451:	mov    eax,ebp
  406453:	add    rsp,0xfb0
  40645a:	pop    rbx
  40645b:	pop    r14
  40645d:	pop    rbp
  40645e:	ret    
  40645f:	mov    rcx,QWORD PTR [r14]
  406462:	lea    rdi,[rip+0x27c1d]        # 42e086 <_IO_stdin_used@@Base+0x86>
  406469:	mov    esi,0x20
  40646e:	jmp    40643f <main@@Base+0x11f>

0000000000406470 <flatcc_init_options@@Base>:
  406470:	vxorps xmm0,xmm0,xmm0
  406474:	vmovups YMMWORD PTR [rdi+0x30],ymm0
  406479:	vmovups YMMWORD PTR [rdi+0x10],ymm0
  40647e:	vmovups YMMWORD PTR [rdi+0x50],ymm0
  406483:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  406488:	vmovups YMMWORD PTR [rdi+0xf0],ymm0
  406490:	vmovups YMMWORD PTR [rdi+0xd0],ymm0
  406498:	vmovups YMMWORD PTR [rdi+0xb0],ymm0
  4064a0:	vmovups YMMWORD PTR [rdi+0x90],ymm0
  4064a8:	mov    QWORD PTR [rdi],0x10000
  4064af:	movabs rax,0x6400000064
  4064b9:	mov    QWORD PTR [rdi+0x8],rax
  4064bd:	vbroadcastss ymm0,DWORD PTR [rip+0x27b3e]        # 42e004 <_IO_stdin_used@@Base+0x4>
  4064c6:	vmovups YMMWORD PTR [rdi+0x14],ymm0
  4064cb:	vmovaps xmm0,XMMWORD PTR [rip+0x28acd]        # 42efa0 <_IO_stdin_used@@Base+0xfa0>
  4064d3:	vmovups XMMWORD PTR [rdi+0x34],xmm0
  4064d8:	mov    DWORD PTR [rdi+0x44],0x4
  4064df:	vmovaps xmm0,XMMWORD PTR [rip+0x28ac9]        # 42efb0 <_IO_stdin_used@@Base+0xfb0>
  4064e7:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  4064ec:	mov    DWORD PTR [rdi+0x58],0x1
  4064f3:	mov    QWORD PTR [rdi+0x60],0xfffe
  4064fb:	lea    rax,[rip+0x28abe]        # 42efc0 <_IO_stdin_used@@Base+0xfc0>
  406502:	vmovq  xmm0,rax
  406507:	lea    rax,[rip+0x27b02]        # 42e010 <_IO_stdin_used@@Base+0x10>
  40650e:	vmovq  xmm1,rax
  406513:	vpunpcklqdq xmm0,xmm1,xmm0
  406517:	vmovdqu XMMWORD PTR [rdi+0x68],xmm0
  40651c:	lea    rax,[rip+0x28aa3]        # 42efc6 <_IO_stdin_used@@Base+0xfc6>
  406523:	mov    QWORD PTR [rdi+0x78],rax
  406527:	mov    DWORD PTR [rdi+0xa4],0x0
  406531:	mov    DWORD PTR [rdi+0xa8],0x1
  40653b:	mov    DWORD PTR [rdi+0xac],0x1
  406545:	mov    DWORD PTR [rdi+0xc4],0x0
  40654f:	vpxor  xmm0,xmm0,xmm0
  406553:	vmovdqu XMMWORD PTR [rdi+0xb0],xmm0
  40655b:	mov    DWORD PTR [rdi+0xd0],0x4
  406565:	mov    DWORD PTR [rdi+0xd4],0x0
  40656f:	mov    DWORD PTR [rdi+0xd8],0x1
  406579:	mov    DWORD PTR [rdi+0xdc],0x0
  406583:	vzeroupper 
  406586:	ret    
  406587:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406590 <flatcc_create_context@@Base>:
  406590:	push   r15
  406592:	push   r14
  406594:	push   r13
  406596:	push   r12
  406598:	push   rbx
  406599:	mov    r14,rcx
  40659c:	mov    r15,rdx
  40659f:	mov    r12,rsi
  4065a2:	mov    r13,rdi
  4065a5:	mov    edi,0x358
  4065aa:	call   4061a0 <malloc@plt>
  4065af:	test   rax,rax
  4065b2:	je     4065da <flatcc_create_context@@Base+0x4a>
  4065b4:	mov    rbx,rax
  4065b7:	xor    r9d,r9d
  4065ba:	mov    rdi,rax
  4065bd:	mov    rsi,r13
  4065c0:	mov    rdx,r12
  4065c3:	mov    rcx,r15
  4065c6:	mov    r8,r14
  4065c9:	call   41bd70 <__flatcc_fb_init_parser@@Base>
  4065ce:	test   eax,eax
  4065d0:	je     4065dc <flatcc_create_context@@Base+0x4c>
  4065d2:	mov    rdi,rbx
  4065d5:	call   406040 <free@plt>
  4065da:	xor    ebx,ebx
  4065dc:	mov    rax,rbx
  4065df:	pop    rbx
  4065e0:	pop    r12
  4065e2:	pop    r13
  4065e4:	pop    r14
  4065e6:	pop    r15
  4065e8:	ret    
  4065e9:	nop    DWORD PTR [rax+0x0]

00000000004065f0 <flatcc_parse_buffer@@Base>:
  4065f0:	push   r15
  4065f2:	push   r14
  4065f4:	push   rbx
  4065f5:	mov    r14,rdx
  4065f8:	mov    r15,rsi
  4065fb:	mov    rbx,rdi
  4065fe:	mov    DWORD PTR [rdi+0xf8],0x1
  406608:	mov    rax,QWORD PTR [rdi+0xe8]
  40660f:	cmp    rax,rdx
  406612:	jae    406631 <flatcc_parse_buffer@@Base+0x41>
  406614:	test   rax,rax
  406617:	je     406631 <flatcc_parse_buffer@@Base+0x41>
  406619:	lea    rsi,[rip+0x289ab]        # 42efcb <_IO_stdin_used@@Base+0xfcb>
  406620:	xor    eax,eax
  406622:	mov    rdi,rbx
  406625:	call   41b940 <__flatcc_fb_print_error@@Base>
  40662a:	mov    eax,0xffffffff
  40662f:	jmp    406670 <flatcc_parse_buffer@@Base+0x80>
  406631:	lea    rsi,[rbx+0x1f8]
  406638:	lea    rdi,[rbx+0x320]
  40663f:	mov    edx,0x1
  406644:	call   419060 <ptr_set_insert_item@@Base>
  406649:	xor    ecx,ecx
  40664b:	mov    rdi,rbx
  40664e:	mov    rsi,r15
  406651:	mov    rdx,r14
  406654:	call   41c070 <__flatcc_fb_parse@@Base>
  406659:	mov    ecx,eax
  40665b:	mov    eax,0xffffffff
  406660:	test   ecx,ecx
  406662:	jne    406670 <flatcc_parse_buffer@@Base+0x80>
  406664:	mov    rdi,rbx
  406667:	call   423d70 <__flatcc_fb_build_schema@@Base>
  40666c:	neg    eax
  40666e:	sbb    eax,eax
  406670:	pop    rbx
  406671:	pop    r14
  406673:	pop    r15
  406675:	ret    
  406676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406680 <flatcc_parse_file@@Base>:
  406680:	push   rbp
  406681:	push   r15
  406683:	push   r14
  406685:	push   r13
  406687:	push   r12
  406689:	push   rbx
  40668a:	sub    rsp,0x28
  40668e:	mov    r13,rsi
  406691:	mov    rbx,rdi
  406694:	mov    rdi,rsi
  406697:	call   4060d0 <strlen@plt>
  40669c:	mov    r12,rax
  40669f:	lea    rbp,[rbx+0x1f8]
  4066a6:	mov    rdi,QWORD PTR [rbx+0x260]
  4066ad:	add    rdi,0x40
  4066b1:	mov    edx,0x1
  4066b6:	mov    rsi,rbp
  4066b9:	call   41ad60 <fb_schema_table_insert_item@@Base>
  4066be:	xor    r15d,r15d
  4066c1:	test   rax,rax
  4066c4:	je     4066d8 <flatcc_parse_file@@Base+0x58>
  4066c6:	mov    eax,r15d
  4066c9:	add    rsp,0x28
  4066cd:	pop    rbx
  4066ce:	pop    r12
  4066d0:	pop    r13
  4066d2:	pop    r14
  4066d4:	pop    r15
  4066d6:	pop    rbp
  4066d7:	ret    
  4066d8:	mov    rax,QWORD PTR [rbx+0x350]
  4066df:	mov    QWORD PTR [rsp+0x10],rax
  4066e4:	test   rax,rax
  4066e7:	mov    QWORD PTR [rsp+0x18],rbp
  4066ec:	je     406815 <flatcc_parse_file@@Base+0x195>
  4066f2:	cmp    DWORD PTR [rbx+0x1e8],0x0
  4066f9:	jle    40679d <flatcc_parse_file@@Base+0x11d>
  4066ff:	xor    r15d,r15d
  406702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40670c:	nop    DWORD PTR [rax+0x0]
  406710:	mov    rax,QWORD PTR [rbx+0x1d8]
  406717:	mov    rbp,QWORD PTR [rax+r15*8]
  40671b:	mov    rdi,rbp
  40671e:	call   4060d0 <strlen@plt>
  406723:	mov    r9d,0x1
  406729:	mov    rdi,rbp
  40672c:	mov    rsi,rax
  40672f:	mov    rdx,r13
  406732:	mov    rcx,r12
  406735:	lea    r8,[rip+0x28e03]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40673c:	call   41b190 <__flatcc_fb_create_join_path_n@@Base>
  406741:	test   rax,rax
  406744:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  40674a:	mov    rbp,rax
  40674d:	mov    rsi,QWORD PTR [rbx+0xe8]
  406754:	mov    rdi,rax
  406757:	lea    rdx,[rsp+0x8]
  40675c:	call   41b840 <__flatcc_fb_read_file@@Base>
  406761:	test   rax,rax
  406764:	jne    40684b <flatcc_parse_file@@Base+0x1cb>
  40676a:	mov    rdi,rbp
  40676d:	call   406040 <free@plt>
  406772:	mov    rax,QWORD PTR [rbx+0xe8]
  406779:	cmp    QWORD PTR [rsp+0x8],rax
  40677e:	jbe    406789 <flatcc_parse_file@@Base+0x109>
  406780:	test   rax,rax
  406783:	jne    406bc2 <flatcc_parse_file@@Base+0x542>
  406789:	add    r15,0x1
  40678d:	movsxd rax,DWORD PTR [rbx+0x1e8]
  406794:	cmp    r15,rax
  406797:	jl     406710 <flatcc_parse_file@@Base+0x90>
  40679d:	cmp    QWORD PTR [rsp+0x10],0x0
  4067a3:	je     406bde <flatcc_parse_file@@Base+0x55e>
  4067a9:	mov    rbp,QWORD PTR [rbx+0x350]
  4067b0:	mov    rdi,rbp
  4067b3:	call   4060d0 <strlen@plt>
  4067b8:	mov    rdi,rbp
  4067bb:	mov    rsi,rax
  4067be:	call   41b740 <__flatcc_fb_find_basename@@Base>
  4067c3:	lea    r8,[rip+0x28d75]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4067ca:	mov    r9d,0x1
  4067d0:	mov    rdi,rbp
  4067d3:	mov    rsi,rax
  4067d6:	mov    rdx,r13
  4067d9:	mov    rcx,r12
  4067dc:	call   41b190 <__flatcc_fb_create_join_path_n@@Base>
  4067e1:	test   rax,rax
  4067e4:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  4067ea:	mov    rbp,rax
  4067ed:	mov    rsi,QWORD PTR [rbx+0xe8]
  4067f4:	lea    rdx,[rsp+0x8]
  4067f9:	mov    rdi,rax
  4067fc:	call   41b840 <__flatcc_fb_read_file@@Base>
  406801:	test   rax,rax
  406804:	mov    r15d,0x0
  40680a:	je     406ba7 <flatcc_parse_file@@Base+0x527>
  406810:	mov    r14,rax
  406813:	jmp    406851 <flatcc_parse_file@@Base+0x1d1>
  406815:	mov    rsi,QWORD PTR [rbx+0xe8]
  40681c:	lea    rdx,[rsp+0x8]
  406821:	mov    rdi,r13
  406824:	call   41b840 <__flatcc_fb_read_file@@Base>
  406829:	test   rax,rax
  40682c:	je     406b7d <flatcc_parse_file@@Base+0x4fd>
  406832:	mov    r14,rax
  406835:	mov    rdi,r13
  406838:	call   41b0f0 <__flatcc_fb_copy_path@@Base>
  40683d:	test   rax,rax
  406840:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  406846:	mov    rbp,rax
  406849:	jmp    406851 <flatcc_parse_file@@Base+0x1d1>
  40684b:	mov    r14,rax
  40684e:	xor    r15d,r15d
  406851:	mov    rdx,QWORD PTR [rsp+0x8]
  406856:	mov    rax,QWORD PTR [rbx+0x260]
  40685d:	add    QWORD PTR [rax+0x68],rdx
  406861:	mov    QWORD PTR [rbx+0x348],rbp
  406868:	mov    ecx,0x1
  40686d:	mov    rdi,rbx
  406870:	mov    rsi,r14
  406873:	call   41c070 <__flatcc_fb_parse@@Base>
  406878:	test   eax,eax
  40687a:	jne    4066c6 <flatcc_parse_file@@Base+0x46>
  406880:	mov    rbp,QWORD PTR [rsp+0x18]
  406885:	mov    r15,QWORD PTR [rbp+0x0]
  406889:	test   r15,r15
  40688c:	je     4069e7 <flatcc_parse_file@@Base+0x367>
  406892:	lea    rax,[rbx+0xe8]
  406899:	mov    QWORD PTR [rsp+0x20],rax
  40689e:	xchg   ax,ax
  4068a0:	mov    rdi,QWORD PTR [r15+0x8]
  4068a4:	movsxd rsi,DWORD PTR [r15+0x10]
  4068a8:	call   41b0a0 <__flatcc_fb_copy_path_n@@Base>
  4068ad:	test   rax,rax
  4068b0:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  4068b6:	mov    r14,rax
  4068b9:	mov    r12,QWORD PTR [rbx+0x260]
  4068c0:	mov    eax,DWORD PTR [rbx+0xf0]
  4068c6:	cmp    DWORD PTR [r12+0x64],eax
  4068cb:	jl     4068d5 <flatcc_parse_file@@Base+0x255>
  4068cd:	test   eax,eax
  4068cf:	jg     406bfd <flatcc_parse_file@@Base+0x57d>
  4068d5:	mov    eax,DWORD PTR [rbx+0xf4]
  4068db:	cmp    DWORD PTR [r12+0x60],eax
  4068e0:	jl     4068ea <flatcc_parse_file@@Base+0x26a>
  4068e2:	test   eax,eax
  4068e4:	jg     406c06 <flatcc_parse_file@@Base+0x586>
  4068ea:	mov    edi,0x358
  4068ef:	call   4061a0 <malloc@plt>
  4068f4:	test   rax,rax
  4068f7:	je     406c21 <flatcc_parse_file@@Base+0x5a1>
  4068fd:	mov    r13,rax
  406900:	mov    rcx,QWORD PTR [rbx+0x10]
  406904:	mov    r8,QWORD PTR [rbx+0x18]
  406908:	mov    rdi,rax
  40690b:	mov    rsi,QWORD PTR [rsp+0x20]
  406910:	mov    rdx,r14
  406913:	mov    r9,r12
  406916:	call   41bd70 <__flatcc_fb_init_parser@@Base>
  40691b:	test   eax,eax
  40691d:	jne    406c19 <flatcc_parse_file@@Base+0x599>
  406923:	lea    rdi,[r12+0x40]
  406928:	lea    rsi,[r13+0x1f8]
  40692f:	call   41ae20 <fb_schema_table_find_item@@Base>
  406934:	test   rax,rax
  406937:	je     40697e <flatcc_parse_file@@Base+0x2fe>
  406939:	add    rax,0x128
  40693f:	mov    rdi,rax
  406942:	lea    rsi,[rip+0x517]        # 406e60 <flatcc_destroy_context@@Base+0x40>
  406949:	mov    rdx,rbp
  40694c:	call   419270 <ptr_set_visit@@Base>
  406951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40695b:	nop    DWORD PTR [rax+rax*1+0x0]
  406960:	mov    rbp,QWORD PTR [r13+0x0]
  406964:	mov    rdi,r13
  406967:	call   422460 <__flatcc_fb_clear_parser@@Base>
  40696c:	mov    rdi,r13
  40696f:	call   406040 <free@plt>
  406974:	mov    r13,rbp
  406977:	test   rbp,rbp
  40697a:	jne    406960 <flatcc_parse_file@@Base+0x2e0>
  40697c:	jmp    4069ce <flatcc_parse_file@@Base+0x34e>
  40697e:	mov    rax,QWORD PTR [rbx]
  406981:	mov    QWORD PTR [r13+0x0],rax
  406985:	mov    QWORD PTR [rbx],r13
  406988:	mov    rax,QWORD PTR [rbx+0x348]
  40698f:	mov    QWORD PTR [r13+0x350],rax
  406996:	add    DWORD PTR [r12+0x64],0x1
  40699c:	add    DWORD PTR [r12+0x60],0x1
  4069a2:	mov    rdi,r13
  4069a5:	mov    rsi,r14
  4069a8:	call   406680 <flatcc_parse_file@@Base>
  4069ad:	test   eax,eax
  4069af:	jne    406c21 <flatcc_parse_file@@Base+0x5a1>
  4069b5:	add    r13,0x320
  4069bc:	mov    rdi,r13
  4069bf:	lea    rsi,[rip+0x49a]        # 406e60 <flatcc_destroy_context@@Base+0x40>
  4069c6:	mov    rdx,rbp
  4069c9:	call   419270 <ptr_set_visit@@Base>
  4069ce:	mov    rdi,r14
  4069d1:	call   406040 <free@plt>
  4069d6:	mov    r15,QWORD PTR [r15]
  4069d9:	test   r15,r15
  4069dc:	mov    rbp,QWORD PTR [rsp+0x18]
  4069e1:	jne    4068a0 <flatcc_parse_file@@Base+0x220>
  4069e7:	lea    rdi,[rbx+0x320]
  4069ee:	mov    edx,0x1
  4069f3:	mov    rsi,rbp
  4069f6:	call   419060 <ptr_set_insert_item@@Base>
  4069fb:	mov    rdi,rbx
  4069fe:	call   423d70 <__flatcc_fb_build_schema@@Base>
  406a03:	test   eax,eax
  406a05:	jne    406c29 <flatcc_parse_file@@Base+0x5a9>
  406a0b:	cmp    QWORD PTR [rsp+0x10],0x0
  406a11:	mov    r15d,0x0
  406a17:	jne    4066c6 <flatcc_parse_file@@Base+0x46>
  406a1d:	mov    eax,DWORD PTR [rbx+0x16c]
  406a23:	test   eax,eax
  406a25:	je     4066c6 <flatcc_parse_file@@Base+0x46>
  406a2b:	cmp    QWORD PTR [rbx+0x350],0x0
  406a33:	jne    406c8e <flatcc_parse_file@@Base+0x60e>
  406a39:	mov    rax,QWORD PTR [rbx+0x1f0]
  406a40:	test   rax,rax
  406a43:	lea    rbp,[rip+0x28af5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  406a4a:	cmove  rax,rbp
  406a4e:	mov    rcx,QWORD PTR [rbx+0x308]
  406a55:	mov    rsi,QWORD PTR [rbx+0x170]
  406a5c:	mov    r14,QWORD PTR [rbx+0x178]
  406a63:	test   rsi,rsi
  406a66:	cmove  rsi,rcx
  406a6a:	mov    rdi,rbp
  406a6d:	cmove  rdi,rax
  406a71:	lea    rdx,[rip+0x286a2]        # 42f11a <_IO_stdin_used@@Base+0x111a>
  406a78:	cmovne rdx,rbp
  406a7c:	mov    r15,rbp
  406a7f:	test   r14,r14
  406a82:	jne    406aa3 <flatcc_parse_file@@Base+0x423>
  406a84:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406a8b:	lea    r8,[rip+0x3f8fa]        # 44638c <_IO_stdin_used@@Base+0x1838c>
  406a92:	lea    rbp,[rip+0x28527]        # 42efc0 <_IO_stdin_used@@Base+0xfc0>
  406a99:	cmove  rbp,r8
  406a9d:	mov    r14,rcx
  406aa0:	mov    r15,rax
  406aa3:	mov    ecx,0x1
  406aa8:	call   41b2b0 <__flatcc_fb_create_join_path@@Base>
  406aad:	test   rax,rax
  406ab0:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  406ab6:	mov    r12,rax
  406ab9:	mov    ecx,0x1
  406abe:	mov    rdi,r15
  406ac1:	mov    rsi,r14
  406ac4:	mov    rdx,rbp
  406ac7:	call   41b2b0 <__flatcc_fb_create_join_path@@Base>
  406acc:	test   rax,rax
  406acf:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  406ad5:	mov    rbp,rax
  406ad8:	mov    rdi,rax
  406adb:	call   41b720 <__flatcc_fb_create_make_path@@Base>
  406ae0:	test   rax,rax
  406ae3:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  406ae9:	mov    r15,rax
  406aec:	mov    rdi,rbp
  406aef:	call   406040 <free@plt>
  406af4:	lea    rsi,[rip+0x28626]        # 42f121 <_IO_stdin_used@@Base+0x1121>
  406afb:	mov    rdi,r12
  406afe:	call   4061d0 <fopen@plt>
  406b03:	mov    r13,rax
  406b06:	test   rax,rax
  406b09:	je     406c31 <flatcc_parse_file@@Base+0x5b1>
  406b0f:	lea    rsi,[rip+0x2863d]        # 42f153 <_IO_stdin_used@@Base+0x1153>
  406b16:	xor    eax,eax
  406b18:	mov    rdi,r13
  406b1b:	mov    rdx,r15
  406b1e:	call   406170 <fprintf@plt>
  406b23:	mov    rbp,QWORD PTR [rbx]
  406b26:	test   rbp,rbp
  406b29:	je     406b6b <flatcc_parse_file@@Base+0x4eb>
  406b2b:	lea    r14,[rip+0x28625]        # 42f157 <_IO_stdin_used@@Base+0x1157>
  406b32:	mov    rdi,QWORD PTR [rbp+0x348]
  406b39:	call   41b720 <__flatcc_fb_create_make_path@@Base>
  406b3e:	test   rax,rax
  406b41:	je     406c64 <flatcc_parse_file@@Base+0x5e4>
  406b47:	mov    rbx,rax
  406b4a:	xor    eax,eax
  406b4c:	mov    rdi,r13
  406b4f:	mov    rsi,r14
  406b52:	mov    rdx,rbx
  406b55:	call   406170 <fprintf@plt>
  406b5a:	mov    rbp,QWORD PTR [rbp+0x0]
  406b5e:	mov    rdi,rbx
  406b61:	call   406040 <free@plt>
  406b66:	test   rbp,rbp
  406b69:	jne    406b32 <flatcc_parse_file@@Base+0x4b2>
  406b6b:	mov    edi,0xa
  406b70:	mov    rsi,r13
  406b73:	call   406160 <fputc_unlocked@plt>
  406b78:	jmp    406c45 <flatcc_parse_file@@Base+0x5c5>
  406b7d:	mov    rax,QWORD PTR [rbx+0xe8]
  406b84:	mov    rcx,QWORD PTR [rbx+0x260]
  406b8b:	mov    rcx,QWORD PTR [rcx+0x68]
  406b8f:	add    rcx,QWORD PTR [rsp+0x8]
  406b94:	cmp    rcx,rax
  406b97:	jbe    4066f2 <flatcc_parse_file@@Base+0x72>
  406b9d:	test   rax,rax
  406ba0:	jne    406bc2 <flatcc_parse_file@@Base+0x542>
  406ba2:	jmp    4066f2 <flatcc_parse_file@@Base+0x72>
  406ba7:	mov    rdi,rbp
  406baa:	call   406040 <free@plt>
  406baf:	mov    rax,QWORD PTR [rbx+0xe8]
  406bb6:	cmp    QWORD PTR [rsp+0x8],rax
  406bbb:	jbe    406bde <flatcc_parse_file@@Base+0x55e>
  406bbd:	test   rax,rax
  406bc0:	je     406bde <flatcc_parse_file@@Base+0x55e>
  406bc2:	lea    rsi,[rip+0x28402]        # 42efcb <_IO_stdin_used@@Base+0xfcb>
  406bc9:	xor    eax,eax
  406bcb:	mov    rdi,rbx
  406bce:	call   41b940 <__flatcc_fb_print_error@@Base>
  406bd3:	mov    r15d,0xffffffff
  406bd9:	jmp    4066c6 <flatcc_parse_file@@Base+0x46>
  406bde:	lea    rsi,[rip+0x2840a]        # 42efef <_IO_stdin_used@@Base+0xfef>
  406be5:	xor    eax,eax
  406be7:	mov    rdi,rbx
  406bea:	mov    rdx,r13
  406bed:	call   41b940 <__flatcc_fb_print_error@@Base>
  406bf2:	mov    r15d,0xffffffff
  406bf8:	jmp    4066c6 <flatcc_parse_file@@Base+0x46>
  406bfd:	lea    rsi,[rip+0x28436]        # 42f03a <_IO_stdin_used@@Base+0x103a>
  406c04:	jmp    406c0d <flatcc_parse_file@@Base+0x58d>
  406c06:	lea    rsi,[rip+0x2844d]        # 42f05a <_IO_stdin_used@@Base+0x105a>
  406c0d:	xor    eax,eax
  406c0f:	mov    rdi,rbx
  406c12:	call   41b940 <__flatcc_fb_print_error@@Base>
  406c17:	jmp    406c21 <flatcc_parse_file@@Base+0x5a1>
  406c19:	mov    rdi,r13
  406c1c:	call   406040 <free@plt>
  406c21:	mov    rdi,r14
  406c24:	call   406040 <free@plt>
  406c29:	xor    r15d,r15d
  406c2c:	jmp    4066c6 <flatcc_parse_file@@Base+0x46>
  406c31:	lea    rsi,[rip+0x284ec]        # 42f124 <_IO_stdin_used@@Base+0x1124>
  406c38:	xor    eax,eax
  406c3a:	mov    rdi,rbx
  406c3d:	mov    rdx,r12
  406c40:	call   41b940 <__flatcc_fb_print_error@@Base>
  406c45:	mov    rdi,r12
  406c48:	call   406040 <free@plt>
  406c4d:	mov    rdi,r15
  406c50:	call   406040 <free@plt>
  406c55:	test   r13,r13
  406c58:	je     406c29 <flatcc_parse_file@@Base+0x5a9>
  406c5a:	mov    rdi,r13
  406c5d:	call   4060c0 <fclose@plt>
  406c62:	jmp    406c29 <flatcc_parse_file@@Base+0x5a9>
  406c64:	mov    rax,QWORD PTR [rip+0x4a38d]        # 450ff8 <stderr@GLIBC_2.2.5>
  406c6b:	mov    rcx,QWORD PTR [rax]
  406c6e:	lea    rdi,[rip+0x283a2]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  406c75:	mov    esi,0x22
  406c7a:	mov    edx,0x1
  406c7f:	call   406210 <fwrite@plt>
  406c84:	mov    edi,0x1
  406c89:	call   406200 <exit@plt>
  406c8e:	lea    rdi,[rip+0x283e3]        # 42f078 <_IO_stdin_used@@Base+0x1078>
  406c95:	lea    rsi,[rip+0x283f1]        # 42f08d <_IO_stdin_used@@Base+0x108d>
  406c9c:	lea    rcx,[rip+0x2844a]        # 42f0ed <_IO_stdin_used@@Base+0x10ed>
  406ca3:	mov    edx,0xdc
  406ca8:	call   4060f0 <__assert_fail@plt>
  406cad:	nop    DWORD PTR [rax]

0000000000406cb0 <flatcc_generate_binary_schema_to_buffer@@Base>:
  406cb0:	push   rax
  406cb1:	mov    rax,rsi
  406cb4:	mov    QWORD PTR [rsp],rdx
  406cb8:	lea    rdx,[rdi+0xe8]
  406cbf:	lea    rsi,[rdi+0x1f8]
  406cc6:	mov    rcx,rsp
  406cc9:	mov    rdi,rdx
  406ccc:	mov    rdx,rax
  406ccf:	call   416a50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  406cd4:	cmp    rax,0x1
  406cd8:	sbb    eax,eax
  406cda:	or     eax,DWORD PTR [rsp]
  406cdd:	pop    rcx
  406cde:	ret    
  406cdf:	nop

0000000000406ce0 <flatcc_generate_binary_schema@@Base>:
  406ce0:	mov    rax,rsi
  406ce3:	lea    rcx,[rdi+0xe8]
  406cea:	lea    rsi,[rdi+0x1f8]
  406cf1:	mov    rdi,rcx
  406cf4:	mov    rdx,rax
  406cf7:	jmp    417c60 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  406cfc:	nop    DWORD PTR [rax+0x0]

0000000000406d00 <flatcc_generate_files@@Base>:
  406d00:	push   rbp
  406d01:	push   r15
  406d03:	push   r14
  406d05:	push   rbx
  406d06:	sub    rsp,0x108
  406d0d:	mov    r15d,0xffffffff
  406d13:	test   rdi,rdi
  406d16:	je     406d24 <flatcc_generate_files@@Base+0x24>
  406d18:	mov    rbx,rdi
  406d1b:	cmp    DWORD PTR [rdi+0xd0],0x0
  406d22:	je     406d35 <flatcc_generate_files@@Base+0x35>
  406d24:	mov    eax,r15d
  406d27:	add    rsp,0x108
  406d2e:	pop    rbx
  406d2f:	pop    r14
  406d31:	pop    r15
  406d33:	pop    rbp
  406d34:	ret    
  406d35:	xor    eax,eax
  406d37:	mov    rcx,rbx
  406d3a:	nop    WORD PTR [rax+rax*1+0x0]
  406d40:	mov    rbp,rcx
  406d43:	mov    QWORD PTR [rcx+0x8],rax
  406d47:	mov    rcx,QWORD PTR [rcx]
  406d4a:	mov    rax,rbp
  406d4d:	test   rcx,rcx
  406d50:	jne    406d40 <flatcc_generate_files@@Base+0x40>
  406d52:	lea    r14,[rbx+0xe8]
  406d59:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406d60:	je     406d75 <flatcc_generate_files@@Base+0x75>
  406d62:	lea    rsi,[rbx+0x1f8]
  406d69:	mov    rdi,r14
  406d6c:	call   417cd0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  406d71:	test   eax,eax
  406d73:	jne    406d24 <flatcc_generate_files@@Base+0x24>
  406d75:	lea    rdi,[rsp+0x8]
  406d7a:	mov    rsi,r14
  406d7d:	call   406fe0 <__flatcc_fb_init_output_c@@Base>
  406d82:	test   eax,eax
  406d84:	jne    406d24 <flatcc_generate_files@@Base+0x24>
  406d86:	cmp    DWORD PTR [rbx+0x188],0x0
  406d8d:	je     406dda <flatcc_generate_files@@Base+0xda>
  406d8f:	xor    r15d,r15d
  406d92:	cmp    DWORD PTR [rbx+0xe4],0x0
  406d99:	je     406e0c <flatcc_generate_files@@Base+0x10c>
  406d9b:	cmp    DWORD PTR [rbx+0x1b4],0x0
  406da2:	je     406ded <flatcc_generate_files@@Base+0xed>
  406da4:	test   rbp,rbp
  406da7:	je     406e0c <flatcc_generate_files@@Base+0x10c>
  406da9:	lea    rbx,[rsp+0x8]
  406dae:	cmp    DWORD PTR [rbp+0xd0],0x0
  406db5:	jne    406e06 <flatcc_generate_files@@Base+0x106>
  406db7:	lea    rsi,[rbp+0x1f8]
  406dbe:	mov    rdi,rbx
  406dc1:	call   407700 <__flatcc_fb_codegen_c@@Base>
  406dc6:	test   eax,eax
  406dc8:	setne  cl
  406dcb:	mov    rbp,QWORD PTR [rbp+0x8]
  406dcf:	test   rbp,rbp
  406dd2:	je     406e08 <flatcc_generate_files@@Base+0x108>
  406dd4:	test   eax,eax
  406dd6:	je     406dae <flatcc_generate_files@@Base+0xae>
  406dd8:	jmp    406e08 <flatcc_generate_files@@Base+0x108>
  406dda:	lea    rdi,[rsp+0x8]
  406ddf:	call   407600 <__flatcc_fb_codegen_common_c@@Base>
  406de4:	mov    r15d,eax
  406de7:	test   eax,eax
  406de9:	jne    406e0c <flatcc_generate_files@@Base+0x10c>
  406deb:	jmp    406d8f <flatcc_generate_files@@Base+0x8f>
  406ded:	add    rbx,0x1f8
  406df4:	lea    rdi,[rsp+0x8]
  406df9:	mov    rsi,rbx
  406dfc:	call   407700 <__flatcc_fb_codegen_c@@Base>
  406e01:	mov    r15d,eax
  406e04:	jmp    406e0c <flatcc_generate_files@@Base+0x10c>
  406e06:	mov    cl,0x1
  406e08:	movzx  r15d,cl
  406e0c:	lea    rdi,[rsp+0x8]
  406e11:	call   406fb0 <__flatcc_fb_end_output_c@@Base>
  406e16:	jmp    406d24 <flatcc_generate_files@@Base+0x24>
  406e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e20 <flatcc_destroy_context@@Base>:
  406e20:	push   r14
  406e22:	push   rbx
  406e23:	push   rax
  406e24:	test   rdi,rdi
  406e27:	je     406e4b <flatcc_destroy_context@@Base+0x2b>
  406e29:	mov    rbx,rdi
  406e2c:	nop    DWORD PTR [rax+0x0]
  406e30:	mov    r14,QWORD PTR [rbx]
  406e33:	mov    rdi,rbx
  406e36:	call   422460 <__flatcc_fb_clear_parser@@Base>
  406e3b:	mov    rdi,rbx
  406e3e:	call   406040 <free@plt>
  406e43:	mov    rbx,r14
  406e46:	test   r14,r14
  406e49:	jne    406e30 <flatcc_destroy_context@@Base+0x10>
  406e4b:	add    rsp,0x8
  406e4f:	pop    rbx
  406e50:	pop    r14
  406e52:	ret    
  406e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e5d:	nop    DWORD PTR [rax]
  406e60:	add    rdi,0x128
  406e67:	mov    edx,0x1
  406e6c:	jmp    419060 <ptr_set_insert_item@@Base>
  406e71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e80 <__flatcc_fb_open_output_file@@Base>:
  406e80:	push   rbp
  406e81:	push   r15
  406e83:	push   r14
  406e85:	push   r13
  406e87:	push   r12
  406e89:	push   rbx
  406e8a:	push   rax
  406e8b:	mov    rax,QWORD PTR [rdi+0xe0]
  406e92:	mov    rax,QWORD PTR [rax+0x108]
  406e99:	test   rax,rax
  406e9c:	lea    rbx,[rip+0x2869c]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  406ea3:	cmovne rbx,rax
  406ea7:	xor    ebp,ebp
  406ea9:	cmp    QWORD PTR [rdi+0xd0],0x0
  406eb1:	jne    406f0e <__flatcc_fb_open_output_file@@Base+0x8e>
  406eb3:	mov    r14,rcx
  406eb6:	mov    r15,rdx
  406eb9:	mov    r12,rsi
  406ebc:	mov    r13,rdi
  406ebf:	mov    rdi,rbx
  406ec2:	call   4060d0 <strlen@plt>
  406ec7:	mov    r9d,0x1
  406ecd:	mov    rdi,rbx
  406ed0:	mov    rsi,rax
  406ed3:	mov    rdx,r12
  406ed6:	mov    rcx,r15
  406ed9:	mov    r8,r14
  406edc:	call   41b190 <__flatcc_fb_create_join_path_n@@Base>
  406ee1:	test   rax,rax
  406ee4:	je     406f41 <__flatcc_fb_open_output_file@@Base+0xc1>
  406ee6:	mov    r14,rax
  406ee9:	lea    rsi,[rip+0x28231]        # 42f121 <_IO_stdin_used@@Base+0x1121>
  406ef0:	mov    rdi,rax
  406ef3:	call   4061d0 <fopen@plt>
  406ef8:	mov    QWORD PTR [r13+0xd0],rax
  406eff:	xor    ebp,ebp
  406f01:	test   rax,rax
  406f04:	je     406f1f <__flatcc_fb_open_output_file@@Base+0x9f>
  406f06:	mov    rdi,r14
  406f09:	call   406040 <free@plt>
  406f0e:	mov    eax,ebp
  406f10:	add    rsp,0x8
  406f14:	pop    rbx
  406f15:	pop    r12
  406f17:	pop    r13
  406f19:	pop    r14
  406f1b:	pop    r15
  406f1d:	pop    rbp
  406f1e:	ret    
  406f1f:	mov    rax,QWORD PTR [rip+0x4a0d2]        # 450ff8 <stderr@GLIBC_2.2.5>
  406f26:	mov    rdi,QWORD PTR [rax]
  406f29:	lea    rsi,[rip+0x2822b]        # 42f15b <_IO_stdin_used@@Base+0x115b>
  406f30:	xor    eax,eax
  406f32:	mov    rdx,r14
  406f35:	call   406170 <fprintf@plt>
  406f3a:	mov    ebp,0xffffffff
  406f3f:	jmp    406f06 <__flatcc_fb_open_output_file@@Base+0x86>
  406f41:	mov    rax,QWORD PTR [rip+0x4a0b0]        # 450ff8 <stderr@GLIBC_2.2.5>
  406f48:	mov    rcx,QWORD PTR [rax]
  406f4b:	lea    rdi,[rip+0x280c5]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  406f52:	mov    esi,0x22
  406f57:	mov    edx,0x1
  406f5c:	call   406210 <fwrite@plt>
  406f61:	mov    edi,0x1
  406f66:	call   406200 <exit@plt>
  406f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406f70 <__flatcc_fb_close_output_file@@Base>:
  406f70:	push   rbx
  406f71:	mov    rax,QWORD PTR [rdi+0xe0]
  406f78:	cmp    QWORD PTR [rax+0x98],0x0
  406f80:	jne    406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f82:	cmp    DWORD PTR [rax+0x80],0x0
  406f89:	jne    406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f8b:	mov    rbx,rdi
  406f8e:	mov    rdi,QWORD PTR [rdi+0xd0]
  406f95:	test   rdi,rdi
  406f98:	je     406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f9a:	call   4060c0 <fclose@plt>
  406f9f:	mov    QWORD PTR [rbx+0xd0],0x0
  406faa:	pop    rbx
  406fab:	ret    
  406fac:	nop    DWORD PTR [rax+0x0]

0000000000406fb0 <__flatcc_fb_end_output_c@@Base>:
  406fb0:	push   rbx
  406fb1:	mov    rbx,rdi
  406fb4:	mov    rdi,QWORD PTR [rdi+0xd0]
  406fbb:	test   rdi,rdi
  406fbe:	je     406fd1 <__flatcc_fb_end_output_c@@Base+0x21>
  406fc0:	mov    rax,QWORD PTR [rip+0x4a019]        # 450fe0 <stdout@GLIBC_2.2.5>
  406fc7:	cmp    rdi,QWORD PTR [rax]
  406fca:	je     406fd1 <__flatcc_fb_end_output_c@@Base+0x21>
  406fcc:	call   4060c0 <fclose@plt>
  406fd1:	mov    QWORD PTR [rbx+0xd0],0x0
  406fdc:	pop    rbx
  406fdd:	ret    
  406fde:	xchg   ax,ax

0000000000406fe0 <__flatcc_fb_init_output_c@@Base>:
  406fe0:	push   rbp
  406fe1:	push   r15
  406fe3:	push   r14
  406fe5:	push   r13
  406fe7:	push   r12
  406fe9:	push   rbx
  406fea:	push   rax
  406feb:	mov    r12,rsi
  406fee:	mov    rbx,rdi
  406ff1:	cmp    DWORD PTR [rsi+0xa0],0x0
  406ff8:	lea    rax,[rip+0x28122]        # 42f121 <_IO_stdin_used@@Base+0x1121>
  406fff:	lea    r14,[rip+0x28177]        # 42f17d <_IO_stdin_used@@Base+0x117d>
  407006:	cmove  r14,rax
  40700a:	mov    rax,QWORD PTR [rsi+0x108]
  407011:	test   rax,rax
  407014:	lea    r15,[rip+0x28524]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40701b:	vxorps xmm0,xmm0,xmm0
  40701f:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  407027:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  40702f:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  407037:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  40703f:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  407044:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  407049:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  40704e:	cmovne r15,rax
  407052:	vmovups YMMWORD PTR [rdi],ymm0
  407056:	mov    QWORD PTR [rdi+0xe0],rsi
  40705d:	mov    rbp,QWORD PTR [rsi+0xe8]
  407064:	test   rbp,rbp
  407067:	je     4070a4 <__flatcc_fb_init_output_c@@Base+0xc4>
  407069:	mov    rdi,rbp
  40706c:	vzeroupper 
  40706f:	call   4060d0 <strlen@plt>
  407074:	mov    r13,rax
  407077:	cmp    rax,0x65
  40707b:	jb     4070b1 <__flatcc_fb_init_output_c@@Base+0xd1>
  40707d:	mov    rax,QWORD PTR [rip+0x49f74]        # 450ff8 <stderr@GLIBC_2.2.5>
  407084:	mov    rdi,QWORD PTR [rax]
  407087:	lea    rsi,[rip+0x280f2]        # 42f180 <_IO_stdin_used@@Base+0x1180>
  40708e:	mov    edx,0x64
  407093:	xor    eax,eax
  407095:	call   406170 <fprintf@plt>
  40709a:	mov    ebx,0xffffffff
  40709f:	jmp    407195 <__flatcc_fb_init_output_c@@Base+0x1b5>
  4070a4:	lea    rbp,[rip+0x2810c]        # 42f1b7 <_IO_stdin_used@@Base+0x11b7>
  4070ab:	mov    r13d,0xb
  4070b1:	mov    QWORD PTR [rsp],r14
  4070b5:	mov    edx,0x64
  4070ba:	mov    rdi,rbx
  4070bd:	mov    rsi,rbp
  4070c0:	vzeroupper 
  4070c3:	call   406050 <strncpy@plt>
  4070c8:	mov    BYTE PTR [rbx+0x64],0x0
  4070cc:	test   r13,r13
  4070cf:	je     4070d8 <__flatcc_fb_init_output_c@@Base+0xf8>
  4070d1:	mov    WORD PTR [rbx+r13*1],0x5f
  4070d8:	lea    rbp,[rbx+0x66]
  4070dc:	mov    r14b,BYTE PTR [rbx]
  4070df:	test   r14b,r14b
  4070e2:	je     40710c <__flatcc_fb_init_output_c@@Base+0x12c>
  4070e4:	call   406030 <__ctype_toupper_loc@plt>
  4070e9:	nop    DWORD PTR [rax+0x0]
  4070f0:	mov    rcx,QWORD PTR [rax]
  4070f3:	movsx  rdx,r14b
  4070f7:	movzx  ecx,BYTE PTR [rcx+rdx*4]
  4070fb:	mov    BYTE PTR [rbp+0x0],cl
  4070fe:	movzx  r14d,BYTE PTR [rbp-0x65]
  407103:	lea    rbp,[rbp+0x1]
  407107:	test   r14b,r14b
  40710a:	jne    4070f0 <__flatcc_fb_init_output_c@@Base+0x110>
  40710c:	mov    BYTE PTR [rbp+0x0],0x0
  407110:	mov    BYTE PTR [rbx+r13*1+0x66],0x0
  407116:	mov    eax,DWORD PTR [r12+0xd0]
  40711e:	mov    DWORD PTR [rbx+0xf4],eax
  407124:	cmp    DWORD PTR [r12+0x80],0x0
  40712d:	je     407144 <__flatcc_fb_init_output_c@@Base+0x164>
  40712f:	mov    rax,QWORD PTR [rip+0x49eaa]        # 450fe0 <stdout@GLIBC_2.2.5>
  407136:	mov    rax,QWORD PTR [rax]
  407139:	mov    QWORD PTR [rbx+0xd0],rax
  407140:	xor    ebx,ebx
  407142:	jmp    407195 <__flatcc_fb_init_output_c@@Base+0x1b5>
  407144:	mov    rax,QWORD PTR [rbx+0xe0]
  40714b:	mov    rsi,QWORD PTR [rax+0x98]
  407152:	test   rsi,rsi
  407155:	je     407140 <__flatcc_fb_init_output_c@@Base+0x160>
  407157:	lea    rdx,[rip+0x283e1]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40715e:	mov    ecx,0x1
  407163:	mov    rdi,r15
  407166:	call   41b2b0 <__flatcc_fb_create_join_path@@Base>
  40716b:	test   rax,rax
  40716e:	je     4071c8 <__flatcc_fb_init_output_c@@Base+0x1e8>
  407170:	mov    r15,rax
  407173:	mov    rdi,rax
  407176:	mov    rsi,QWORD PTR [rsp]
  40717a:	call   4061d0 <fopen@plt>
  40717f:	mov    QWORD PTR [rbx+0xd0],rax
  407186:	xor    ebx,ebx
  407188:	test   rax,rax
  40718b:	je     4071a6 <__flatcc_fb_init_output_c@@Base+0x1c6>
  40718d:	mov    rdi,r15
  407190:	call   406040 <free@plt>
  407195:	mov    eax,ebx
  407197:	add    rsp,0x8
  40719b:	pop    rbx
  40719c:	pop    r12
  40719e:	pop    r13
  4071a0:	pop    r14
  4071a2:	pop    r15
  4071a4:	pop    rbp
  4071a5:	ret    
  4071a6:	mov    rax,QWORD PTR [rip+0x49e4b]        # 450ff8 <stderr@GLIBC_2.2.5>
  4071ad:	mov    rdi,QWORD PTR [rax]
  4071b0:	lea    rsi,[rip+0x27fa4]        # 42f15b <_IO_stdin_used@@Base+0x115b>
  4071b7:	xor    eax,eax
  4071b9:	mov    rdx,r15
  4071bc:	call   406170 <fprintf@plt>
  4071c1:	mov    ebx,0xffffffff
  4071c6:	jmp    40718d <__flatcc_fb_init_output_c@@Base+0x1ad>
  4071c8:	mov    rax,QWORD PTR [rip+0x49e29]        # 450ff8 <stderr@GLIBC_2.2.5>
  4071cf:	mov    rcx,QWORD PTR [rax]
  4071d2:	lea    rdi,[rip+0x27e3e]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  4071d9:	mov    esi,0x22
  4071de:	mov    edx,0x1
  4071e3:	call   406210 <fwrite@plt>
  4071e8:	mov    edi,0x1
  4071ed:	call   406200 <exit@plt>
  4071f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071fc:	nop    DWORD PTR [rax+0x0]

0000000000407200 <__flatcc_fb_gen_c_includes@@Base>:
  407200:	push   rbp
  407201:	mov    rbp,rsp
  407204:	push   r15
  407206:	push   r14
  407208:	push   r13
  40720a:	push   r12
  40720c:	push   rbx
  40720d:	and    rsp,0xffffffffffffffe0
  407211:	sub    rsp,0x60
  407215:	mov    QWORD PTR [rsp+0x18],rdx
  40721a:	mov    QWORD PTR [rsp+0x10],rsi
  40721f:	mov    rbx,rdi
  407222:	mov    rax,QWORD PTR [rdi+0xd8]
  407229:	mov    r15,QWORD PTR [rax]
  40722c:	vxorps xmm0,xmm0,xmm0
  407230:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407236:	mov    rdi,QWORD PTR [rax+0x118]
  40723d:	vzeroupper 
  407240:	call   41b0f0 <__flatcc_fb_copy_path@@Base>
  407245:	lea    rdi,[rsp+0x20]
  40724a:	mov    edx,0x1
  40724f:	mov    rsi,rax
  407252:	call   418960 <str_set_insert_item@@Base>
  407257:	test   r15,r15
  40725a:	jne    407281 <__flatcc_fb_gen_c_includes@@Base+0x81>
  40725c:	jmp    40733a <__flatcc_fb_gen_c_includes@@Base+0x13a>
  407261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40726b:	nop    DWORD PTR [rax+rax*1+0x0]
  407270:	mov    rdi,r13
  407273:	call   406040 <free@plt>
  407278:	test   r15,r15
  40727b:	je     40733a <__flatcc_fb_gen_c_includes@@Base+0x13a>
  407281:	mov    rdi,QWORD PTR [r15+0x8]
  407285:	movsxd rsi,DWORD PTR [r15+0x10]
  407289:	mov    rax,QWORD PTR [rbx+0xe0]
  407290:	mov    rdx,QWORD PTR [rax+0x68]
  407294:	call   41b780 <__flatcc_fb_create_basename@@Base>
  407299:	test   rax,rax
  40729c:	je     40735c <__flatcc_fb_gen_c_includes@@Base+0x15c>
  4072a2:	mov    r13,rax
  4072a5:	mov    r15,QWORD PTR [r15]
  4072a8:	mov    rdi,rax
  4072ab:	call   41b0f0 <__flatcc_fb_copy_path@@Base>
  4072b0:	test   rax,rax
  4072b3:	je     40735c <__flatcc_fb_gen_c_includes@@Base+0x15c>
  4072b9:	mov    r14,rax
  4072bc:	mov    r12b,BYTE PTR [rax]
  4072bf:	test   r12b,r12b
  4072c2:	je     4072eb <__flatcc_fb_gen_c_includes@@Base+0xeb>
  4072c4:	call   406030 <__ctype_toupper_loc@plt>
  4072c9:	mov    rcx,r14
  4072cc:	add    rcx,0x1
  4072d0:	mov    rdx,QWORD PTR [rax]
  4072d3:	movsx  rsi,r12b
  4072d7:	movzx  edx,BYTE PTR [rdx+rsi*4]
  4072db:	mov    BYTE PTR [rcx-0x1],dl
  4072de:	movzx  r12d,BYTE PTR [rcx]
  4072e2:	add    rcx,0x1
  4072e6:	test   r12b,r12b
  4072e9:	jne    4072d0 <__flatcc_fb_gen_c_includes@@Base+0xd0>
  4072eb:	mov    edx,0x1
  4072f0:	lea    rdi,[rsp+0x20]
  4072f5:	mov    rsi,r14
  4072f8:	call   418960 <str_set_insert_item@@Base>
  4072fd:	test   rax,rax
  407300:	je     407310 <__flatcc_fb_gen_c_includes@@Base+0x110>
  407302:	mov    rdi,r14
  407305:	call   406040 <free@plt>
  40730a:	jmp    407270 <__flatcc_fb_gen_c_includes@@Base+0x70>
  40730f:	nop
  407310:	mov    rdi,QWORD PTR [rbx+0xd0]
  407317:	xor    eax,eax
  407319:	lea    rsi,[rip+0x27ea3]        # 42f1c3 <_IO_stdin_used@@Base+0x11c3>
  407320:	mov    rdx,r14
  407323:	mov    rcx,QWORD PTR [rsp+0x18]
  407328:	mov    r8,r13
  40732b:	mov    r9,QWORD PTR [rsp+0x10]
  407330:	call   406170 <fprintf@plt>
  407335:	jmp    407270 <__flatcc_fb_gen_c_includes@@Base+0x70>
  40733a:	lea    rsi,[rip+0x4f]        # 407390 <__flatcc_fb_gen_c_includes@@Base+0x190>
  407341:	lea    rdi,[rsp+0x20]
  407346:	xor    edx,edx
  407348:	call   418560 <str_set_destroy@@Base>
  40734d:	lea    rsp,[rbp-0x28]
  407351:	pop    rbx
  407352:	pop    r12
  407354:	pop    r13
  407356:	pop    r14
  407358:	pop    r15
  40735a:	pop    rbp
  40735b:	ret    
  40735c:	mov    rax,QWORD PTR [rip+0x49c95]        # 450ff8 <stderr@GLIBC_2.2.5>
  407363:	mov    rcx,QWORD PTR [rax]
  407366:	lea    rdi,[rip+0x27caa]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  40736d:	mov    esi,0x22
  407372:	mov    edx,0x1
  407377:	call   406210 <fwrite@plt>
  40737c:	mov    edi,0x1
  407381:	call   406200 <exit@plt>
  407386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407390:	mov    rdi,rsi
  407393:	jmp    406040 <free@plt>
  407398:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004073a0 <__flatcc_fb_copy_scope@@Base>:
  4073a0:	push   r15
  4073a2:	push   r14
  4073a4:	push   r12
  4073a6:	push   rbx
  4073a7:	push   rax
  4073a8:	mov    r14,rsi
  4073ab:	mov    r15,rdi
  4073ae:	movsxd r12,DWORD PTR [rdi+0x30]
  4073b2:	mov    rcx,QWORD PTR [rdi]
  4073b5:	mov    rax,r12
  4073b8:	test   rcx,rcx
  4073bb:	je     4073da <__flatcc_fb_copy_scope@@Base+0x3a>
  4073bd:	mov    rax,r12
  4073c0:	mov    rdx,QWORD PTR [rcx+0x8]
  4073c4:	mov    rsi,QWORD PTR [rcx]
  4073c7:	mov    rcx,QWORD PTR [rdx+0x8]
  4073cb:	add    rax,rcx
  4073ce:	add    rax,0x1
  4073d2:	mov    rcx,rsi
  4073d5:	test   rsi,rsi
  4073d8:	jne    4073c0 <__flatcc_fb_copy_scope@@Base+0x20>
  4073da:	cmp    rax,0x66
  4073de:	jb     4073ec <__flatcc_fb_copy_scope@@Base+0x4c>
  4073e0:	mov    BYTE PTR [r14],0x0
  4073e4:	mov    r12d,0xffffffff
  4073ea:	jmp    407444 <__flatcc_fb_copy_scope@@Base+0xa4>
  4073ec:	mov    rsi,QWORD PTR [r15+0x28]
  4073f0:	mov    rdi,r14
  4073f3:	mov    rdx,r12
  4073f6:	call   406190 <memcpy@plt>
  4073fb:	mov    rbx,QWORD PTR [r15]
  4073fe:	test   rbx,rbx
  407401:	je     40743f <__flatcc_fb_copy_scope@@Base+0x9f>
  407403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40740d:	nop    DWORD PTR [rax]
  407410:	mov    rax,QWORD PTR [rbx+0x8]
  407414:	mov    rsi,QWORD PTR [rax]
  407417:	mov    r15,QWORD PTR [rax+0x8]
  40741b:	lea    rdi,[r14+r12*1]
  40741f:	mov    rdx,r15
  407422:	call   406190 <memcpy@plt>
  407427:	lea    rax,[r15+r12*1]
  40742b:	add    r12,r15
  40742e:	add    r12,0x1
  407432:	mov    BYTE PTR [r14+rax*1],0x5f
  407437:	mov    rbx,QWORD PTR [rbx]
  40743a:	test   rbx,rbx
  40743d:	jne    407410 <__flatcc_fb_copy_scope@@Base+0x70>
  40743f:	mov    BYTE PTR [r14+r12*1],0x0
  407444:	mov    eax,r12d
  407447:	add    rsp,0x8
  40744b:	pop    rbx
  40744c:	pop    r12
  40744e:	pop    r14
  407450:	pop    r15
  407452:	ret    
  407453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40745d:	nop    DWORD PTR [rax]

0000000000407460 <__flatcc_fb_scoped_symbol_name@@Base>:
  407460:	push   r15
  407462:	push   r14
  407464:	push   r13
  407466:	push   r12
  407468:	push   rbx
  407469:	mov    r14,rdx
  40746c:	mov    r13,QWORD PTR [rsi+0x8]
  407470:	cmp    QWORD PTR [rdx+0xd0],rdi
  407477:	je     407524 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  40747d:	mov    r15,rdi
  407480:	movsxd r12,DWORD PTR [rdi+0x30]
  407484:	mov    rcx,QWORD PTR [rdi]
  407487:	mov    rax,r12
  40748a:	test   rcx,rcx
  40748d:	je     4074ba <__flatcc_fb_scoped_symbol_name@@Base+0x5a>
  40748f:	mov    rax,r12
  407492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40749c:	nop    DWORD PTR [rax+0x0]
  4074a0:	mov    rdx,QWORD PTR [rcx+0x8]
  4074a4:	mov    rsi,QWORD PTR [rcx]
  4074a7:	mov    rcx,QWORD PTR [rdx+0x8]
  4074ab:	add    rax,rcx
  4074ae:	add    rax,0x1
  4074b2:	mov    rcx,rsi
  4074b5:	test   rsi,rsi
  4074b8:	jne    4074a0 <__flatcc_fb_scoped_symbol_name@@Base+0x40>
  4074ba:	cmp    rax,0x66
  4074be:	jae    4075ae <__flatcc_fb_scoped_symbol_name@@Base+0x14e>
  4074c4:	mov    rsi,QWORD PTR [r15+0x28]
  4074c8:	mov    rdi,r14
  4074cb:	mov    rdx,r12
  4074ce:	call   406190 <memcpy@plt>
  4074d3:	mov    rbx,QWORD PTR [r15]
  4074d6:	test   rbx,rbx
  4074d9:	je     40750f <__flatcc_fb_scoped_symbol_name@@Base+0xaf>
  4074db:	nop    DWORD PTR [rax+rax*1+0x0]
  4074e0:	mov    rax,QWORD PTR [rbx+0x8]
  4074e4:	mov    rsi,QWORD PTR [rax]
  4074e7:	mov    r15,QWORD PTR [rax+0x8]
  4074eb:	lea    rdi,[r14+r12*1]
  4074ef:	mov    rdx,r15
  4074f2:	call   406190 <memcpy@plt>
  4074f7:	lea    rax,[r15+r12*1]
  4074fb:	add    r12,r15
  4074fe:	add    r12,0x1
  407502:	mov    BYTE PTR [r14+rax*1],0x5f
  407507:	mov    rbx,QWORD PTR [rbx]
  40750a:	test   rbx,rbx
  40750d:	jne    4074e0 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
  40750f:	mov    BYTE PTR [r14+r12*1],0x0
  407514:	mov    DWORD PTR [r14+0xd8],r12d
  40751b:	test   r12d,r12d
  40751e:	js     4075c6 <__flatcc_fb_scoped_symbol_name@@Base+0x166>
  407524:	mov    edx,DWORD PTR [r13+0x8]
  407528:	mov    DWORD PTR [r14+0xdc],edx
  40752f:	mov    eax,DWORD PTR [r14+0xd8]
  407536:	lea    ecx,[rax+rdx*1]
  407539:	mov    DWORD PTR [r14+0xe0],ecx
  407540:	cmp    ecx,0xcb
  407546:	jg     407570 <__flatcc_fb_scoped_symbol_name@@Base+0x110>
  407548:	movsxd rdi,eax
  40754b:	add    rdi,r14
  40754e:	mov    rsi,QWORD PTR [r13+0x0]
  407552:	movsxd rdx,edx
  407555:	call   406190 <memcpy@plt>
  40755a:	movsxd rax,DWORD PTR [r14+0xe0]
  407561:	mov    BYTE PTR [r14+rax*1],0x0
  407566:	pop    rbx
  407567:	pop    r12
  407569:	pop    r13
  40756b:	pop    r14
  40756d:	pop    r15
  40756f:	ret    
  407570:	mov    rax,QWORD PTR [rip+0x49a81]        # 450ff8 <stderr@GLIBC_2.2.5>
  407577:	mov    rdi,QWORD PTR [rax]
  40757a:	mov    rcx,QWORD PTR [r13+0x0]
  40757e:	lea    rsi,[rip+0x27c80]        # 42f205 <_IO_stdin_used@@Base+0x1205>
  407585:	xor    eax,eax
  407587:	call   406170 <fprintf@plt>
  40758c:	mov    eax,DWORD PTR [r14+0xd8]
  407593:	mov    edx,0xcb
  407598:	sub    edx,eax
  40759a:	mov    DWORD PTR [r14+0xdc],edx
  4075a1:	mov    DWORD PTR [r14+0xe0],0xcb
  4075ac:	jmp    407548 <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
  4075ae:	mov    BYTE PTR [r14],0x0
  4075b2:	lea    rax,[r14+0xd8]
  4075b9:	mov    DWORD PTR [r14+0xd8],0xffffffff
  4075c4:	jmp    4075cd <__flatcc_fb_scoped_symbol_name@@Base+0x16d>
  4075c6:	lea    rax,[r14+0xd8]
  4075cd:	mov    DWORD PTR [rax],0x0
  4075d3:	mov    rax,QWORD PTR [rip+0x49a1e]        # 450ff8 <stderr@GLIBC_2.2.5>
  4075da:	mov    rcx,QWORD PTR [rax]
  4075dd:	lea    rdi,[rip+0x27c04]        # 42f1e8 <_IO_stdin_used@@Base+0x11e8>
  4075e4:	mov    esi,0x1c
  4075e9:	mov    edx,0x1
  4075ee:	call   406210 <fwrite@plt>
  4075f3:	jmp    407524 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  4075f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407600 <__flatcc_fb_codegen_common_c@@Base>:
  407600:	push   rbp
  407601:	push   r14
  407603:	push   rbx
  407604:	mov    rbx,rdi
  407607:	call   4060d0 <strlen@plt>
  40760c:	mov    r14,rax
  40760f:	add    r14,0xffffffffffffffff
  407613:	mov    rax,QWORD PTR [rbx+0xe0]
  40761a:	cmp    DWORD PTR [rax+0xb0],0x0
  407621:	je     407690 <__flatcc_fb_codegen_common_c@@Base+0x90>
  407623:	lea    rcx,[rip+0x27c01]        # 42f22b <_IO_stdin_used@@Base+0x122b>
  40762a:	mov    rdi,rbx
  40762d:	mov    rsi,rbx
  407630:	mov    rdx,r14
  407633:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407638:	mov    ebp,0xffffffff
  40763d:	test   eax,eax
  40763f:	jne    4076f7 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  407645:	mov    rdi,rbx
  407648:	call   4079d0 <__flatcc_fb_gen_common_c_header@@Base>
  40764d:	mov    ebp,eax
  40764f:	mov    rax,QWORD PTR [rbx+0xe0]
  407656:	cmp    QWORD PTR [rax+0x98],0x0
  40765e:	jne    407685 <__flatcc_fb_codegen_common_c@@Base+0x85>
  407660:	cmp    DWORD PTR [rax+0x80],0x0
  407667:	jne    407685 <__flatcc_fb_codegen_common_c@@Base+0x85>
  407669:	mov    rdi,QWORD PTR [rbx+0xd0]
  407670:	test   rdi,rdi
  407673:	je     407685 <__flatcc_fb_codegen_common_c@@Base+0x85>
  407675:	call   4060c0 <fclose@plt>
  40767a:	mov    QWORD PTR [rbx+0xd0],0x0
  407685:	test   ebp,ebp
  407687:	jne    4076f7 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  407689:	mov    rax,QWORD PTR [rbx+0xe0]
  407690:	cmp    DWORD PTR [rax+0xb4],0x0
  407697:	je     4076f5 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  407699:	lea    rcx,[rip+0x27b9c]        # 42f23c <_IO_stdin_used@@Base+0x123c>
  4076a0:	mov    rdi,rbx
  4076a3:	mov    rsi,rbx
  4076a6:	mov    rdx,r14
  4076a9:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4076ae:	mov    ebp,0xffffffff
  4076b3:	test   eax,eax
  4076b5:	jne    4076f7 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  4076b7:	mov    rdi,rbx
  4076ba:	call   40b290 <__flatcc_fb_gen_common_c_builder_header@@Base>
  4076bf:	mov    rax,QWORD PTR [rbx+0xe0]
  4076c6:	cmp    QWORD PTR [rax+0x98],0x0
  4076ce:	jne    4076f5 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  4076d0:	cmp    DWORD PTR [rax+0x80],0x0
  4076d7:	jne    4076f5 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  4076d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4076e0:	test   rdi,rdi
  4076e3:	je     4076f5 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  4076e5:	call   4060c0 <fclose@plt>
  4076ea:	mov    QWORD PTR [rbx+0xd0],0x0
  4076f5:	xor    ebp,ebp
  4076f7:	mov    eax,ebp
  4076f9:	pop    rbx
  4076fa:	pop    r14
  4076fc:	pop    rbp
  4076fd:	ret    
  4076fe:	xchg   ax,ax

0000000000407700 <__flatcc_fb_codegen_c@@Base>:
  407700:	push   r15
  407702:	push   r14
  407704:	push   rbx
  407705:	mov    r15,rdi
  407708:	mov    QWORD PTR [rdi+0xd8],rsi
  40770f:	mov    rdi,QWORD PTR [rsi+0x68]
  407713:	xor    esi,esi
  407715:	xor    edx,edx
  407717:	call   41a0d0 <fb_scope_table_find@@Base>
  40771c:	mov    QWORD PTR [r15+0xe8],rax
  407723:	mov    rax,QWORD PTR [r15+0xd8]
  40772a:	mov    rbx,QWORD PTR [rax+0x110]
  407731:	mov    rdi,rbx
  407734:	call   4060d0 <strlen@plt>
  407739:	mov    r14,rax
  40773c:	mov    rax,QWORD PTR [r15+0xe0]
  407743:	cmp    DWORD PTR [rax+0xb8],0x0
  40774a:	je     4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  40774c:	lea    rcx,[rip+0x3ec39]        # 44638c <_IO_stdin_used@@Base+0x1838c>
  407753:	mov    rdi,r15
  407756:	mov    rsi,rbx
  407759:	mov    rdx,r14
  40775c:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407761:	mov    ecx,eax
  407763:	mov    eax,0xffffffff
  407768:	test   ecx,ecx
  40776a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407770:	mov    rdi,r15
  407773:	call   4085b0 <__flatcc_fb_gen_c_reader@@Base>
  407778:	test   eax,eax
  40777a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407780:	mov    rax,QWORD PTR [r15+0xe0]
  407787:	cmp    QWORD PTR [rax+0x98],0x0
  40778f:	jne    4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  407791:	cmp    DWORD PTR [rax+0x80],0x0
  407798:	jne    4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  40779a:	mov    rdi,QWORD PTR [r15+0xd0]
  4077a1:	test   rdi,rdi
  4077a4:	je     4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  4077a6:	call   4060c0 <fclose@plt>
  4077ab:	mov    QWORD PTR [r15+0xd0],0x0
  4077b6:	mov    rax,QWORD PTR [r15+0xe0]
  4077bd:	cmp    DWORD PTR [rax+0xbc],0x0
  4077c4:	je     407842 <__flatcc_fb_codegen_c@@Base+0x142>
  4077c6:	mov    rax,QWORD PTR [r15+0xd8]
  4077cd:	mov    rsi,QWORD PTR [rax+0x110]
  4077d4:	lea    rcx,[rip+0x3e697]        # 445e72 <_IO_stdin_used@@Base+0x17e72>
  4077db:	mov    rdi,r15
  4077de:	mov    rdx,r14
  4077e1:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4077e6:	mov    ecx,eax
  4077e8:	mov    eax,0xffffffff
  4077ed:	test   ecx,ecx
  4077ef:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4077f5:	mov    rdi,r15
  4077f8:	call   40bc80 <__flatcc_fb_gen_c_builder@@Base>
  4077fd:	test   eax,eax
  4077ff:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407805:	mov    rax,QWORD PTR [r15+0xe0]
  40780c:	cmp    QWORD PTR [rax+0x98],0x0
  407814:	jne    407842 <__flatcc_fb_codegen_c@@Base+0x142>
  407816:	cmp    DWORD PTR [rax+0x80],0x0
  40781d:	jne    407842 <__flatcc_fb_codegen_c@@Base+0x142>
  40781f:	mov    rdi,QWORD PTR [r15+0xd0]
  407826:	test   rdi,rdi
  407829:	je     407842 <__flatcc_fb_codegen_c@@Base+0x142>
  40782b:	call   4060c0 <fclose@plt>
  407830:	mov    QWORD PTR [r15+0xd0],0x0
  40783b:	mov    rax,QWORD PTR [r15+0xe0]
  407842:	cmp    DWORD PTR [rax+0xc0],0x0
  407849:	je     4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40784b:	mov    rax,QWORD PTR [r15+0xd8]
  407852:	mov    rsi,QWORD PTR [rax+0x110]
  407859:	lea    rcx,[rip+0x279ee]        # 42f24e <_IO_stdin_used@@Base+0x124e>
  407860:	mov    rdi,r15
  407863:	mov    rdx,r14
  407866:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  40786b:	mov    ecx,eax
  40786d:	mov    eax,0xffffffff
  407872:	test   ecx,ecx
  407874:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40787a:	mov    rdi,r15
  40787d:	call   40e9b0 <__flatcc_fb_gen_c_verifier@@Base>
  407882:	test   eax,eax
  407884:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40788a:	mov    rax,QWORD PTR [r15+0xe0]
  407891:	cmp    QWORD PTR [rax+0x98],0x0
  407899:	jne    4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40789b:	cmp    DWORD PTR [rax+0x80],0x0
  4078a2:	jne    4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  4078a4:	mov    rdi,QWORD PTR [r15+0xd0]
  4078ab:	test   rdi,rdi
  4078ae:	je     4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  4078b0:	call   4060c0 <fclose@plt>
  4078b5:	mov    QWORD PTR [r15+0xd0],0x0
  4078c0:	mov    rax,QWORD PTR [r15+0xe0]
  4078c7:	cmp    DWORD PTR [rax+0xc4],0x0
  4078ce:	je     40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  4078d0:	mov    rax,QWORD PTR [r15+0xd8]
  4078d7:	mov    rsi,QWORD PTR [rax+0x110]
  4078de:	lea    rcx,[rip+0x27975]        # 42f25a <_IO_stdin_used@@Base+0x125a>
  4078e5:	mov    rdi,r15
  4078e8:	mov    rdx,r14
  4078eb:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4078f0:	mov    ecx,eax
  4078f2:	mov    eax,0xffffffff
  4078f7:	test   ecx,ecx
  4078f9:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4078ff:	mov    rdi,r15
  407902:	call   40f580 <__flatcc_fb_gen_c_json_parser@@Base>
  407907:	test   eax,eax
  407909:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40790f:	mov    rax,QWORD PTR [r15+0xe0]
  407916:	cmp    QWORD PTR [rax+0x98],0x0
  40791e:	jne    40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407920:	cmp    DWORD PTR [rax+0x80],0x0
  407927:	jne    40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407929:	mov    rdi,QWORD PTR [r15+0xd0]
  407930:	test   rdi,rdi
  407933:	je     40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407935:	call   4060c0 <fclose@plt>
  40793a:	mov    QWORD PTR [r15+0xd0],0x0
  407945:	mov    rax,QWORD PTR [r15+0xe0]
  40794c:	cmp    DWORD PTR [rax+0xc8],0x0
  407953:	je     4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  407955:	mov    rax,QWORD PTR [r15+0xd8]
  40795c:	mov    rsi,QWORD PTR [rax+0x110]
  407963:	lea    rcx,[rip+0x278ff]        # 42f269 <_IO_stdin_used@@Base+0x1269>
  40796a:	mov    rdi,r15
  40796d:	mov    rdx,r14
  407970:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407975:	mov    ecx,eax
  407977:	mov    eax,0xffffffff
  40797c:	test   ecx,ecx
  40797e:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407980:	mov    rdi,r15
  407983:	call   415350 <__flatcc_fb_gen_c_json_printer@@Base>
  407988:	test   eax,eax
  40798a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40798c:	mov    rax,QWORD PTR [r15+0xe0]
  407993:	cmp    QWORD PTR [rax+0x98],0x0
  40799b:	jne    4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  40799d:	cmp    DWORD PTR [rax+0x80],0x0
  4079a4:	jne    4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  4079a6:	mov    rdi,QWORD PTR [r15+0xd0]
  4079ad:	test   rdi,rdi
  4079b0:	je     4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  4079b2:	call   4060c0 <fclose@plt>
  4079b7:	mov    QWORD PTR [r15+0xd0],0x0
  4079c2:	xor    eax,eax
  4079c4:	pop    rbx
  4079c5:	pop    r14
  4079c7:	pop    r15
  4079c9:	ret    
  4079ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004079d0 <__flatcc_fb_gen_common_c_header@@Base>:
  4079d0:	push   r14
  4079d2:	push   rbx
  4079d3:	push   rax
  4079d4:	mov    rbx,rdi
  4079d7:	lea    r14,[rdi+0x66]
  4079db:	mov    rdi,QWORD PTR [rdi+0xd0]
  4079e2:	lea    rsi,[rip+0x278db]        # 42f2c4 <_IO_stdin_used@@Base+0x12c4>
  4079e9:	xor    eax,eax
  4079eb:	mov    rdx,r14
  4079ee:	mov    rcx,r14
  4079f1:	call   406170 <fprintf@plt>
  4079f6:	mov    rcx,QWORD PTR [rbx+0xd0]
  4079fd:	lea    rdi,[rip+0x278f7]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  407a04:	mov    esi,0x51
  407a09:	mov    edx,0x1
  407a0e:	call   406210 <fwrite@plt>
  407a13:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a1a:	lea    rdi,[rip+0x2792c]        # 42f34d <_IO_stdin_used@@Base+0x134d>
  407a21:	mov    esi,0x34
  407a26:	mov    edx,0x1
  407a2b:	call   406210 <fwrite@plt>
  407a30:	mov    rax,QWORD PTR [rbx+0xe0]
  407a37:	cmp    DWORD PTR [rax+0xa8],0x0
  407a3e:	je     407be2 <__flatcc_fb_gen_common_c_header@@Base+0x212>
  407a44:	cmp    DWORD PTR [rax+0xac],0x0
  407a4b:	je     407a6a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  407a4d:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a54:	lea    rdi,[rip+0x27a96]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  407a5b:	mov    esi,0x24
  407a60:	mov    edx,0x1
  407a65:	call   406210 <fwrite@plt>
  407a6a:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a71:	lea    rdi,[rip+0x27a9e]        # 42f516 <_IO_stdin_used@@Base+0x1516>
  407a78:	mov    esi,0x29
  407a7d:	mov    edx,0x1
  407a82:	call   406210 <fwrite@plt>
  407a87:	lea    rsi,[rip+0x27ab2]        # 42f540 <_IO_stdin_used@@Base+0x1540>
  407a8e:	mov    rdi,rbx
  407a91:	call   406150 <strcmp@plt>
  407a96:	test   eax,eax
  407a98:	je     407b32 <__flatcc_fb_gen_common_c_header@@Base+0x162>
  407a9e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407aa5:	sub    rsp,0x8
  407aa9:	lea    rsi,[rip+0x27a9d]        # 42f54d <_IO_stdin_used@@Base+0x154d>
  407ab0:	xor    eax,eax
  407ab2:	mov    rdx,rbx
  407ab5:	mov    rcx,rbx
  407ab8:	mov    r8,rbx
  407abb:	mov    r9,rbx
  407abe:	push   rbx
  407abf:	call   406170 <fprintf@plt>
  407ac4:	add    rsp,0x10
  407ac8:	mov    rdi,QWORD PTR [rbx+0xd0]
  407acf:	lea    rsi,[rip+0x27b46]        # 42f61c <_IO_stdin_used@@Base+0x161c>
  407ad6:	lea    rdx,[rip+0x27a61]        # 42f53e <_IO_stdin_used@@Base+0x153e>
  407add:	xor    eax,eax
  407adf:	mov    rcx,rbx
  407ae2:	mov    r8,rbx
  407ae5:	mov    r9,rbx
  407ae8:	call   406170 <fprintf@plt>
  407aed:	mov    rdi,QWORD PTR [rbx+0xd0]
  407af4:	sub    rsp,0x8
  407af8:	lea    rsi,[rip+0x27c74]        # 42f773 <_IO_stdin_used@@Base+0x1773>
  407aff:	xor    eax,eax
  407b01:	mov    rdx,rbx
  407b04:	mov    rcx,rbx
  407b07:	mov    r8,rbx
  407b0a:	mov    r9,rbx
  407b0d:	push   rbx
  407b0e:	call   406170 <fprintf@plt>
  407b13:	add    rsp,0x10
  407b17:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b1e:	lea    rsi,[rip+0x27eb4]        # 42f9d9 <_IO_stdin_used@@Base+0x19d9>
  407b25:	xor    eax,eax
  407b27:	mov    rdx,r14
  407b2a:	mov    rcx,r14
  407b2d:	call   406170 <fprintf@plt>
  407b32:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b39:	lea    rsi,[rip+0x27ee9]        # 42fa29 <_IO_stdin_used@@Base+0x1a29>
  407b40:	xor    eax,eax
  407b42:	mov    rdx,rbx
  407b45:	mov    rcx,rbx
  407b48:	call   406170 <fprintf@plt>
  407b4d:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b54:	sub    rsp,0x8
  407b58:	lea    rsi,[rip+0x27f57]        # 42fab6 <_IO_stdin_used@@Base+0x1ab6>
  407b5f:	mov    eax,0x0
  407b64:	mov    rdx,rbx
  407b67:	mov    rcx,rbx
  407b6a:	mov    r8,rbx
  407b6d:	mov    r9,rbx
  407b70:	push   rbx
  407b71:	push   rbx
  407b72:	push   rbx
  407b73:	call   406170 <fprintf@plt>
  407b78:	add    rsp,0x20
  407b7c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b83:	lea    rsi,[rip+0x2809f]        # 42fc29 <_IO_stdin_used@@Base+0x1c29>
  407b8a:	xor    eax,eax
  407b8c:	mov    rdx,rbx
  407b8f:	mov    rcx,rbx
  407b92:	call   406170 <fprintf@plt>
  407b97:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b9e:	lea    rsi,[rip+0x280d9]        # 42fc7e <_IO_stdin_used@@Base+0x1c7e>
  407ba5:	xor    eax,eax
  407ba7:	mov    rdx,rbx
  407baa:	mov    rcx,rbx
  407bad:	mov    r8,rbx
  407bb0:	mov    r9,rbx
  407bb3:	call   406170 <fprintf@plt>
  407bb8:	mov    rcx,QWORD PTR [rbx+0xd0]
  407bbf:	mov    rax,QWORD PTR [rbx+0xe0]
  407bc6:	cmp    DWORD PTR [rax+0x24],0x0
  407bca:	je     407c18 <__flatcc_fb_gen_common_c_header@@Base+0x248>
  407bcc:	lea    rsi,[rip+0x281d0]        # 42fda3 <_IO_stdin_used@@Base+0x1da3>
  407bd3:	xor    eax,eax
  407bd5:	mov    rdi,rcx
  407bd8:	mov    rdx,rbx
  407bdb:	call   406170 <fprintf@plt>
  407be0:	jmp    407c25 <__flatcc_fb_gen_common_c_header@@Base+0x255>
  407be2:	mov    rcx,QWORD PTR [rbx+0xd0]
  407be9:	lea    rdi,[rip+0x27792]        # 42f382 <_IO_stdin_used@@Base+0x1382>
  407bf0:	mov    esi,0x87
  407bf5:	mov    edx,0x1
  407bfa:	call   406210 <fwrite@plt>
  407bff:	mov    rax,QWORD PTR [rbx+0xe0]
  407c06:	cmp    DWORD PTR [rax+0xac],0x0
  407c0d:	jne    407a4d <__flatcc_fb_gen_common_c_header@@Base+0x7d>
  407c13:	jmp    407a6a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  407c18:	mov    edi,0xa
  407c1d:	mov    rsi,rcx
  407c20:	call   406110 <fputc@plt>
  407c25:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c2c:	lea    rsi,[rip+0x2819d]        # 42fdd0 <_IO_stdin_used@@Base+0x1dd0>
  407c33:	xor    eax,eax
  407c35:	mov    rdx,rbx
  407c38:	mov    rcx,rbx
  407c3b:	call   406170 <fprintf@plt>
  407c40:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c47:	sub    rsp,0x8
  407c4b:	lea    rsi,[rip+0x28251]        # 42fea3 <_IO_stdin_used@@Base+0x1ea3>
  407c52:	xor    eax,eax
  407c54:	mov    rdx,rbx
  407c57:	mov    rcx,rbx
  407c5a:	mov    r8,rbx
  407c5d:	mov    r9,rbx
  407c60:	push   rbx
  407c61:	call   406170 <fprintf@plt>
  407c66:	add    rsp,0x10
  407c6a:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c71:	sub    rsp,0x8
  407c75:	lea    rsi,[rip+0x283d1]        # 43004d <_IO_stdin_used@@Base+0x204d>
  407c7c:	xor    eax,eax
  407c7e:	mov    rdx,rbx
  407c81:	mov    rcx,rbx
  407c84:	mov    r8,rbx
  407c87:	mov    r9,rbx
  407c8a:	push   rbx
  407c8b:	call   406170 <fprintf@plt>
  407c90:	add    rsp,0x10
  407c94:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c9b:	lea    rsi,[rip+0x2844b]        # 4300ed <_IO_stdin_used@@Base+0x20ed>
  407ca2:	xor    eax,eax
  407ca4:	mov    rdx,rbx
  407ca7:	mov    rcx,rbx
  407caa:	mov    r8,rbx
  407cad:	call   406170 <fprintf@plt>
  407cb2:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cb9:	lea    rsi,[rip+0x28507]        # 4301c7 <_IO_stdin_used@@Base+0x21c7>
  407cc0:	xor    eax,eax
  407cc2:	mov    rdx,rbx
  407cc5:	mov    rcx,rbx
  407cc8:	mov    r8,rbx
  407ccb:	call   406170 <fprintf@plt>
  407cd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cd7:	lea    rsi,[rip+0x285c3]        # 4302a1 <_IO_stdin_used@@Base+0x22a1>
  407cde:	xor    eax,eax
  407ce0:	mov    rdx,rbx
  407ce3:	mov    rcx,rbx
  407ce6:	mov    r8,rbx
  407ce9:	call   406170 <fprintf@plt>
  407cee:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cf5:	sub    rsp,0x8
  407cf9:	lea    rsi,[rip+0x28679]        # 430379 <_IO_stdin_used@@Base+0x2379>
  407d00:	xor    eax,eax
  407d02:	mov    rdx,rbx
  407d05:	mov    rcx,rbx
  407d08:	mov    r8,rbx
  407d0b:	mov    r9,rbx
  407d0e:	push   rbx
  407d0f:	call   406170 <fprintf@plt>
  407d14:	add    rsp,0x10
  407d18:	mov    rcx,QWORD PTR [rbx+0xd0]
  407d1f:	mov    rax,QWORD PTR [rbx+0xe0]
  407d26:	cmp    DWORD PTR [rax+0x24],0x0
  407d2a:	je     407d42 <__flatcc_fb_gen_common_c_header@@Base+0x372>
  407d2c:	lea    rsi,[rip+0x2872e]        # 430461 <_IO_stdin_used@@Base+0x2461>
  407d33:	xor    eax,eax
  407d35:	mov    rdi,rcx
  407d38:	mov    rdx,rbx
  407d3b:	call   406170 <fprintf@plt>
  407d40:	jmp    407d4f <__flatcc_fb_gen_common_c_header@@Base+0x37f>
  407d42:	mov    edi,0xa
  407d47:	mov    rsi,rcx
  407d4a:	call   406110 <fputc@plt>
  407d4f:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d56:	lea    rsi,[rip+0x2872e]        # 43048b <_IO_stdin_used@@Base+0x248b>
  407d5d:	xor    eax,eax
  407d5f:	mov    rdx,rbx
  407d62:	mov    rcx,rbx
  407d65:	mov    r8,rbx
  407d68:	mov    r9,rbx
  407d6b:	call   406170 <fprintf@plt>
  407d70:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d77:	lea    rsi,[rip+0x287ac]        # 43052a <_IO_stdin_used@@Base+0x252a>
  407d7e:	xor    eax,eax
  407d80:	mov    rdx,rbx
  407d83:	mov    rcx,rbx
  407d86:	call   406170 <fprintf@plt>
  407d8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d92:	lea    rsi,[rip+0x287d3]        # 43056c <_IO_stdin_used@@Base+0x256c>
  407d99:	xor    eax,eax
  407d9b:	mov    rdx,rbx
  407d9e:	mov    rcx,rbx
  407da1:	mov    r8,rbx
  407da4:	call   406170 <fprintf@plt>
  407da9:	mov    rdi,QWORD PTR [rbx+0xd0]
  407db0:	lea    rsi,[rip+0x2883f]        # 4305f6 <_IO_stdin_used@@Base+0x25f6>
  407db7:	xor    eax,eax
  407db9:	mov    rdx,rbx
  407dbc:	mov    rcx,rbx
  407dbf:	call   406170 <fprintf@plt>
  407dc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  407dcb:	lea    rsi,[rip+0x28896]        # 430668 <_IO_stdin_used@@Base+0x2668>
  407dd2:	xor    eax,eax
  407dd4:	mov    rdx,rbx
  407dd7:	mov    rcx,rbx
  407dda:	mov    r8,rbx
  407ddd:	mov    r9,rbx
  407de0:	call   406170 <fprintf@plt>
  407de5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407dec:	lea    rsi,[rip+0x28995]        # 430788 <_IO_stdin_used@@Base+0x2788>
  407df3:	xor    eax,eax
  407df5:	mov    rdx,rbx
  407df8:	mov    rcx,rbx
  407dfb:	call   406170 <fprintf@plt>
  407e00:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e07:	lea    rsi,[rip+0x289f1]        # 4307ff <_IO_stdin_used@@Base+0x27ff>
  407e0e:	xor    eax,eax
  407e10:	mov    rdx,rbx
  407e13:	mov    rcx,rbx
  407e16:	call   406170 <fprintf@plt>
  407e1b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e22:	lea    rsi,[rip+0x28a56]        # 43087f <_IO_stdin_used@@Base+0x287f>
  407e29:	xor    eax,eax
  407e2b:	mov    rdx,rbx
  407e2e:	mov    rcx,rbx
  407e31:	mov    r8,rbx
  407e34:	mov    r9,rbx
  407e37:	call   406170 <fprintf@plt>
  407e3c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e43:	lea    rsi,[rip+0x28a98]        # 4308e2 <_IO_stdin_used@@Base+0x28e2>
  407e4a:	mov    eax,0x0
  407e4f:	mov    rdx,rbx
  407e52:	mov    rcx,rbx
  407e55:	mov    r8,rbx
  407e58:	mov    r9,rbx
  407e5b:	push   rbx
  407e5c:	push   rbx
  407e5d:	push   rbx
  407e5e:	push   rbx
  407e5f:	push   rbx
  407e60:	push   rbx
  407e61:	push   rbx
  407e62:	push   rbx
  407e63:	call   406170 <fprintf@plt>
  407e68:	add    rsp,0x40
  407e6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e73:	lea    rsi,[rip+0x28b89]        # 430a03 <_IO_stdin_used@@Base+0x2a03>
  407e7a:	xor    eax,eax
  407e7c:	mov    rdx,rbx
  407e7f:	call   406170 <fprintf@plt>
  407e84:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e8b:	lea    rsi,[rip+0x28b93]        # 430a25 <_IO_stdin_used@@Base+0x2a25>
  407e92:	xor    eax,eax
  407e94:	mov    rdx,rbx
  407e97:	mov    rcx,rbx
  407e9a:	mov    r8,rbx
  407e9d:	mov    r9,rbx
  407ea0:	call   406170 <fprintf@plt>
  407ea5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407eac:	sub    rsp,0x8
  407eb0:	lea    rsi,[rip+0x28bf5]        # 430aac <_IO_stdin_used@@Base+0x2aac>
  407eb7:	mov    eax,0x0
  407ebc:	mov    rdx,rbx
  407ebf:	mov    rcx,rbx
  407ec2:	mov    r8,rbx
  407ec5:	mov    r9,rbx
  407ec8:	push   rbx
  407ec9:	push   rbx
  407eca:	push   rbx
  407ecb:	push   rbx
  407ecc:	push   rbx
  407ecd:	push   rbx
  407ece:	push   rbx
  407ecf:	push   rbx
  407ed0:	push   rbx
  407ed1:	push   rbx
  407ed2:	push   rbx
  407ed3:	push   rbx
  407ed4:	push   rbx
  407ed5:	call   406170 <fprintf@plt>
  407eda:	add    rsp,0x70
  407ede:	mov    rdi,QWORD PTR [rbx+0xd0]
  407ee5:	lea    rsi,[rip+0x2a572]        # 43245e <_IO_stdin_used@@Base+0x445e>
  407eec:	mov    eax,0x0
  407ef1:	mov    rdx,rbx
  407ef4:	mov    rcx,rbx
  407ef7:	mov    r8,rbx
  407efa:	mov    r9,rbx
  407efd:	push   rbx
  407efe:	push   rbx
  407eff:	push   rbx
  407f00:	push   rbx
  407f01:	call   406170 <fprintf@plt>
  407f06:	add    rsp,0x20
  407f0a:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f11:	lea    rsi,[rip+0x2a609]        # 432521 <_IO_stdin_used@@Base+0x4521>
  407f18:	xor    eax,eax
  407f1a:	mov    rdx,rbx
  407f1d:	mov    rcx,rbx
  407f20:	mov    r8,rbx
  407f23:	mov    r9,rbx
  407f26:	call   406170 <fprintf@plt>
  407f2b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f32:	lea    rsi,[rip+0x2a681]        # 4325ba <_IO_stdin_used@@Base+0x45ba>
  407f39:	xor    eax,eax
  407f3b:	mov    rdx,rbx
  407f3e:	mov    rcx,rbx
  407f41:	mov    r8,rbx
  407f44:	mov    r9,rbx
  407f47:	call   406170 <fprintf@plt>
  407f4c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f53:	lea    rsi,[rip+0x2a6d7]        # 432631 <_IO_stdin_used@@Base+0x4631>
  407f5a:	xor    eax,eax
  407f5c:	mov    rdx,rbx
  407f5f:	call   406170 <fprintf@plt>
  407f64:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f6b:	lea    rsi,[rip+0x2a990]        # 432902 <_IO_stdin_used@@Base+0x4902>
  407f72:	xor    eax,eax
  407f74:	mov    rdx,rbx
  407f77:	call   406170 <fprintf@plt>
  407f7c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f83:	lea    rsi,[rip+0x2ac0a]        # 432b94 <_IO_stdin_used@@Base+0x4b94>
  407f8a:	xor    eax,eax
  407f8c:	mov    rdx,rbx
  407f8f:	call   406170 <fprintf@plt>
  407f94:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f9b:	lea    rsi,[rip+0x2ac73]        # 432c15 <_IO_stdin_used@@Base+0x4c15>
  407fa2:	xor    eax,eax
  407fa4:	mov    rdx,rbx
  407fa7:	call   406170 <fprintf@plt>
  407fac:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fb3:	lea    rsi,[rip+0x2acc9]        # 432c83 <_IO_stdin_used@@Base+0x4c83>
  407fba:	xor    eax,eax
  407fbc:	mov    rdx,rbx
  407fbf:	call   406170 <fprintf@plt>
  407fc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fcb:	lea    rsi,[rip+0x2ae95]        # 432e67 <_IO_stdin_used@@Base+0x4e67>
  407fd2:	xor    eax,eax
  407fd4:	mov    rdx,rbx
  407fd7:	mov    rcx,rbx
  407fda:	mov    r8,rbx
  407fdd:	mov    r9,rbx
  407fe0:	call   406170 <fprintf@plt>
  407fe5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fec:	lea    rsi,[rip+0x2af1d]        # 432f10 <_IO_stdin_used@@Base+0x4f10>
  407ff3:	mov    eax,0x0
  407ff8:	mov    rdx,rbx
  407ffb:	mov    rcx,rbx
  407ffe:	mov    r8,rbx
  408001:	mov    r9,rbx
  408004:	push   rbx
  408005:	push   rbx
  408006:	call   406170 <fprintf@plt>
  40800b:	add    rsp,0x10
  40800f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408016:	lea    rsi,[rip+0x2b0ce]        # 4330eb <_IO_stdin_used@@Base+0x50eb>
  40801d:	xor    eax,eax
  40801f:	mov    rdx,rbx
  408022:	mov    rcx,rbx
  408025:	mov    r8,rbx
  408028:	call   406170 <fprintf@plt>
  40802d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408034:	sub    rsp,0x8
  408038:	lea    rsi,[rip+0x2b2c6]        # 433305 <_IO_stdin_used@@Base+0x5305>
  40803f:	mov    eax,0x0
  408044:	mov    rdx,rbx
  408047:	mov    rcx,rbx
  40804a:	mov    r8,rbx
  40804d:	mov    r9,rbx
  408050:	push   rbx
  408051:	push   rbx
  408052:	push   rbx
  408053:	push   rbx
  408054:	push   rbx
  408055:	push   rbx
  408056:	push   rbx
  408057:	call   406170 <fprintf@plt>
  40805c:	add    rsp,0x40
  408060:	mov    rdi,QWORD PTR [rbx+0xd0]
  408067:	lea    rsi,[rip+0x2b3ee]        # 43345c <_IO_stdin_used@@Base+0x545c>
  40806e:	xor    eax,eax
  408070:	mov    rdx,rbx
  408073:	mov    rcx,rbx
  408076:	call   406170 <fprintf@plt>
  40807b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408082:	lea    rsi,[rip+0x2b4a2]        # 43352b <_IO_stdin_used@@Base+0x552b>
  408089:	xor    eax,eax
  40808b:	mov    rdx,rbx
  40808e:	mov    rcx,rbx
  408091:	mov    r8,rbx
  408094:	call   406170 <fprintf@plt>
  408099:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080a0:	lea    rsi,[rip+0x2b539]        # 4335e0 <_IO_stdin_used@@Base+0x55e0>
  4080a7:	xor    eax,eax
  4080a9:	mov    rdx,rbx
  4080ac:	mov    rcx,rbx
  4080af:	mov    r8,rbx
  4080b2:	call   406170 <fprintf@plt>
  4080b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080be:	lea    rsi,[rip+0x2b6d0]        # 433795 <_IO_stdin_used@@Base+0x5795>
  4080c5:	xor    eax,eax
  4080c7:	mov    rdx,rbx
  4080ca:	call   406170 <fprintf@plt>
  4080cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080d6:	lea    rsi,[rip+0x2b762]        # 43383f <_IO_stdin_used@@Base+0x583f>
  4080dd:	xor    eax,eax
  4080df:	mov    rdx,rbx
  4080e2:	call   406170 <fprintf@plt>
  4080e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080ee:	lea    rsi,[rip+0x2b877]        # 43396c <_IO_stdin_used@@Base+0x596c>
  4080f5:	xor    eax,eax
  4080f7:	mov    rdx,rbx
  4080fa:	mov    rcx,rbx
  4080fd:	call   406170 <fprintf@plt>
  408102:	mov    rdi,QWORD PTR [rbx+0xd0]
  408109:	lea    rsi,[rip+0x2b9ac]        # 433abc <_IO_stdin_used@@Base+0x5abc>
  408110:	xor    eax,eax
  408112:	mov    rdx,rbx
  408115:	mov    rcx,rbx
  408118:	call   406170 <fprintf@plt>
  40811d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408124:	sub    rsp,0x8
  408128:	lea    rsi,[rip+0x2ba61]        # 433b90 <_IO_stdin_used@@Base+0x5b90>
  40812f:	mov    eax,0x0
  408134:	mov    rdx,rbx
  408137:	mov    rcx,rbx
  40813a:	mov    r8,rbx
  40813d:	mov    r9,rbx
  408140:	push   rbx
  408141:	push   rbx
  408142:	push   rbx
  408143:	push   rbx
  408144:	push   rbx
  408145:	push   rbx
  408146:	push   rbx
  408147:	call   406170 <fprintf@plt>
  40814c:	add    rsp,0x40
  408150:	mov    rdi,QWORD PTR [rbx+0xd0]
  408157:	sub    rsp,0x8
  40815b:	lea    rsi,[rip+0x2bba9]        # 433d0b <_IO_stdin_used@@Base+0x5d0b>
  408162:	mov    eax,0x0
  408167:	mov    rdx,rbx
  40816a:	mov    rcx,rbx
  40816d:	mov    r8,rbx
  408170:	mov    r9,rbx
  408173:	push   rbx
  408174:	push   rbx
  408175:	push   rbx
  408176:	push   rbx
  408177:	push   rbx
  408178:	push   rbx
  408179:	push   rbx
  40817a:	call   406170 <fprintf@plt>
  40817f:	add    rsp,0x40
  408183:	mov    rdi,QWORD PTR [rbx+0xd0]
  40818a:	sub    rsp,0x8
  40818e:	lea    rsi,[rip+0x2bcf7]        # 433e8c <_IO_stdin_used@@Base+0x5e8c>
  408195:	mov    eax,0x0
  40819a:	mov    rdx,rbx
  40819d:	mov    rcx,rbx
  4081a0:	mov    r8,rbx
  4081a3:	mov    r9,rbx
  4081a6:	push   rbx
  4081a7:	push   rbx
  4081a8:	push   rbx
  4081a9:	call   406170 <fprintf@plt>
  4081ae:	add    rsp,0x20
  4081b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4081b9:	sub    rsp,0x8
  4081bd:	lea    rsi,[rip+0x2c01d]        # 4341e1 <_IO_stdin_used@@Base+0x61e1>
  4081c4:	mov    eax,0x0
  4081c9:	mov    rdx,rbx
  4081cc:	mov    rcx,rbx
  4081cf:	mov    r8,rbx
  4081d2:	mov    r9,rbx
  4081d5:	push   rbx
  4081d6:	push   rbx
  4081d7:	push   rbx
  4081d8:	push   rbx
  4081d9:	push   rbx
  4081da:	push   rbx
  4081db:	push   rbx
  4081dc:	call   406170 <fprintf@plt>
  4081e1:	add    rsp,0x40
  4081e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4081ec:	sub    rsp,0x8
  4081f0:	lea    rsi,[rip+0x2c30a]        # 434501 <_IO_stdin_used@@Base+0x6501>
  4081f7:	mov    eax,0x0
  4081fc:	mov    rdx,rbx
  4081ff:	mov    rcx,rbx
  408202:	mov    r8,rbx
  408205:	mov    r9,rbx
  408208:	push   rbx
  408209:	push   rbx
  40820a:	push   rbx
  40820b:	push   rbx
  40820c:	push   rbx
  40820d:	push   rbx
  40820e:	push   rbx
  40820f:	push   rbx
  408210:	push   rbx
  408211:	call   406170 <fprintf@plt>
  408216:	add    rsp,0x50
  40821a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408221:	lea    rsi,[rip+0x2c9a2]        # 434bca <_IO_stdin_used@@Base+0x6bca>
  408228:	xor    eax,eax
  40822a:	mov    rdx,rbx
  40822d:	call   406170 <fprintf@plt>
  408232:	mov    rdi,QWORD PTR [rbx+0xd0]
  408239:	lea    rsi,[rip+0x2cbda]        # 434e1a <_IO_stdin_used@@Base+0x6e1a>
  408240:	xor    eax,eax
  408242:	mov    rdx,rbx
  408245:	call   406170 <fprintf@plt>
  40824a:	mov    rax,QWORD PTR [rbx+0xe0]
  408251:	cmp    DWORD PTR [rax+0xa8],0x0
  408258:	je     408264 <__flatcc_fb_gen_common_c_header@@Base+0x894>
  40825a:	mov    rdi,rbx
  40825d:	call   40b160 <__flatcc_gen_sort@@Base>
  408262:	jmp    408281 <__flatcc_fb_gen_common_c_header@@Base+0x8b1>
  408264:	mov    rcx,QWORD PTR [rbx+0xd0]
  40826b:	lea    rdi,[rip+0x289e9]        # 430c5b <_IO_stdin_used@@Base+0x2c5b>
  408272:	mov    esi,0x14
  408277:	mov    edx,0x1
  40827c:	call   406210 <fwrite@plt>
  408281:	mov    rdi,QWORD PTR [rbx+0xd0]
  408288:	sub    rsp,0x8
  40828c:	lea    rsi,[rip+0x289dd]        # 430c70 <_IO_stdin_used@@Base+0x2c70>
  408293:	xor    eax,eax
  408295:	mov    rdx,rbx
  408298:	mov    rcx,rbx
  40829b:	mov    r8,rbx
  40829e:	mov    r9,rbx
  4082a1:	push   rbx
  4082a2:	call   406170 <fprintf@plt>
  4082a7:	add    rsp,0x10
  4082ab:	mov    rcx,QWORD PTR [rbx+0xd0]
  4082b2:	mov    rax,QWORD PTR [rbx+0xe0]
  4082b9:	cmp    DWORD PTR [rax+0xa8],0x0
  4082c0:	je     4082d8 <__flatcc_fb_gen_common_c_header@@Base+0x908>
  4082c2:	lea    rsi,[rip+0x28a88]        # 430d51 <_IO_stdin_used@@Base+0x2d51>
  4082c9:	xor    eax,eax
  4082cb:	mov    rdi,rcx
  4082ce:	mov    rdx,rbx
  4082d1:	call   406170 <fprintf@plt>
  4082d6:	jmp    4082e5 <__flatcc_fb_gen_common_c_header@@Base+0x915>
  4082d8:	mov    edi,0xa
  4082dd:	mov    rsi,rcx
  4082e0:	call   406110 <fputc@plt>
  4082e5:	mov    rsi,QWORD PTR [rbx+0xd0]
  4082ec:	mov    edi,0xa
  4082f1:	call   406110 <fputc@plt>
  4082f6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4082fd:	lea    rsi,[rip+0x28a6d]        # 430d71 <_IO_stdin_used@@Base+0x2d71>
  408304:	xor    eax,eax
  408306:	mov    rdx,rbx
  408309:	mov    rcx,rbx
  40830c:	mov    r8,rbx
  40830f:	call   406170 <fprintf@plt>
  408314:	mov    rdi,QWORD PTR [rbx+0xd0]
  40831b:	lea    rsi,[rip+0x28acf]        # 430df1 <_IO_stdin_used@@Base+0x2df1>
  408322:	mov    eax,0x0
  408327:	mov    rdx,rbx
  40832a:	mov    rcx,rbx
  40832d:	mov    r8,rbx
  408330:	mov    r9,rbx
  408333:	push   rbx
  408334:	push   rbx
  408335:	push   rbx
  408336:	push   rbx
  408337:	push   rbx
  408338:	push   rbx
  408339:	push   rbx
  40833a:	push   rbx
  40833b:	push   rbx
  40833c:	push   rbx
  40833d:	push   rbx
  40833e:	push   rbx
  40833f:	push   rbx
  408340:	push   rbx
  408341:	push   rbx
  408342:	push   rbx
  408343:	push   rbx
  408344:	push   rbx
  408345:	push   rbx
  408346:	push   rbx
  408347:	push   rbx
  408348:	push   rbx
  408349:	call   406170 <fprintf@plt>
  40834e:	add    rsp,0xb0
  408355:	mov    rdi,QWORD PTR [rbx+0xd0]
  40835c:	lea    rsi,[rip+0x28ca1]        # 431004 <_IO_stdin_used@@Base+0x3004>
  408363:	mov    eax,0x0
  408368:	mov    rdx,rbx
  40836b:	mov    rcx,rbx
  40836e:	mov    r8,rbx
  408371:	mov    r9,rbx
  408374:	push   rbx
  408375:	push   rbx
  408376:	push   rbx
  408377:	push   rbx
  408378:	push   rbx
  408379:	push   rbx
  40837a:	push   rbx
  40837b:	push   rbx
  40837c:	call   406170 <fprintf@plt>
  408381:	add    rsp,0x40
  408385:	mov    rdi,QWORD PTR [rbx+0xd0]
  40838c:	lea    rsi,[rip+0x28dbb]        # 43114e <_IO_stdin_used@@Base+0x314e>
  408393:	mov    eax,0x0
  408398:	mov    rdx,rbx
  40839b:	mov    rcx,rbx
  40839e:	mov    r8,rbx
  4083a1:	mov    r9,rbx
  4083a4:	push   rbx
  4083a5:	push   rbx
  4083a6:	push   rbx
  4083a7:	push   rbx
  4083a8:	push   rbx
  4083a9:	push   rbx
  4083aa:	push   rbx
  4083ab:	push   rbx
  4083ac:	push   rbx
  4083ad:	push   rbx
  4083ae:	push   rbx
  4083af:	push   rbx
  4083b0:	push   rbx
  4083b1:	push   rbx
  4083b2:	push   rbx
  4083b3:	push   rbx
  4083b4:	push   rbx
  4083b5:	push   rbx
  4083b6:	push   rbx
  4083b7:	push   rbx
  4083b8:	push   rbx
  4083b9:	push   rbx
  4083ba:	push   rbx
  4083bb:	push   rbx
  4083bc:	push   rbx
  4083bd:	push   rbx
  4083be:	push   rbx
  4083bf:	push   rbx
  4083c0:	push   rbx
  4083c1:	push   rbx
  4083c2:	push   rbx
  4083c3:	push   rbx
  4083c4:	push   rbx
  4083c5:	push   rbx
  4083c6:	push   rbx
  4083c7:	push   rbx
  4083c8:	push   rbx
  4083c9:	push   rbx
  4083ca:	push   rbx
  4083cb:	push   rbx
  4083cc:	push   rbx
  4083cd:	push   rbx
  4083ce:	push   rbx
  4083cf:	push   rbx
  4083d0:	push   rbx
  4083d1:	push   rbx
  4083d2:	push   rbx
  4083d3:	push   rbx
  4083d4:	push   rbx
  4083d5:	push   rbx
  4083d6:	push   rbx
  4083d7:	push   rbx
  4083d8:	push   rbx
  4083d9:	push   rbx
  4083da:	push   rbx
  4083db:	push   rbx
  4083dc:	call   406170 <fprintf@plt>
  4083e1:	add    rsp,0x1c0
  4083e8:	mov    rax,QWORD PTR [rbx+0xe0]
  4083ef:	cmp    DWORD PTR [rax+0xa8],0x0
  4083f6:	je     408410 <__flatcc_fb_gen_common_c_header@@Base+0xa40>
  4083f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4083ff:	lea    rsi,[rip+0x29401]        # 431807 <_IO_stdin_used@@Base+0x3807>
  408406:	xor    eax,eax
  408408:	mov    rdx,rbx
  40840b:	call   406170 <fprintf@plt>
  408410:	mov    rdi,QWORD PTR [rbx+0xd0]
  408417:	lea    rsi,[rip+0x29403]        # 431821 <_IO_stdin_used@@Base+0x3821>
  40841e:	xor    eax,eax
  408420:	mov    rdx,rbx
  408423:	mov    rcx,rbx
  408426:	call   406170 <fprintf@plt>
  40842b:	mov    rcx,QWORD PTR [rbx+0xd0]
  408432:	mov    rax,QWORD PTR [rbx+0xe0]
  408439:	cmp    DWORD PTR [rax+0x24],0x0
  40843d:	je     408455 <__flatcc_fb_gen_common_c_header@@Base+0xa85>
  40843f:	lea    rsi,[rip+0x2795d]        # 42fda3 <_IO_stdin_used@@Base+0x1da3>
  408446:	xor    eax,eax
  408448:	mov    rdi,rcx
  40844b:	mov    rdx,rbx
  40844e:	call   406170 <fprintf@plt>
  408453:	jmp    408462 <__flatcc_fb_gen_common_c_header@@Base+0xa92>
  408455:	mov    edi,0xa
  40845a:	mov    rsi,rcx
  40845d:	call   406110 <fputc@plt>
  408462:	mov    rdi,QWORD PTR [rbx+0xd0]
  408469:	lea    rsi,[rip+0x2944a]        # 4318ba <_IO_stdin_used@@Base+0x38ba>
  408470:	xor    eax,eax
  408472:	mov    rdx,rbx
  408475:	call   406170 <fprintf@plt>
  40847a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408481:	lea    rsi,[rip+0x294b1]        # 431939 <_IO_stdin_used@@Base+0x3939>
  408488:	mov    eax,0x0
  40848d:	mov    rdx,rbx
  408490:	mov    rcx,rbx
  408493:	mov    r8,rbx
  408496:	mov    r9,rbx
  408499:	push   rbx
  40849a:	push   rbx
  40849b:	push   rbx
  40849c:	push   rbx
  40849d:	push   rbx
  40849e:	push   rbx
  40849f:	push   rbx
  4084a0:	push   rbx
  4084a1:	push   rbx
  4084a2:	push   rbx
  4084a3:	call   406170 <fprintf@plt>
  4084a8:	add    rsp,0x50
  4084ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084b3:	lea    rsi,[rip+0x297c8]        # 431c82 <_IO_stdin_used@@Base+0x3c82>
  4084ba:	xor    eax,eax
  4084bc:	mov    rdx,rbx
  4084bf:	mov    rcx,rbx
  4084c2:	mov    r8,rbx
  4084c5:	call   406170 <fprintf@plt>
  4084ca:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084d1:	lea    rsi,[rip+0x29861]        # 431d39 <_IO_stdin_used@@Base+0x3d39>
  4084d8:	mov    eax,0x0
  4084dd:	mov    rdx,rbx
  4084e0:	mov    rcx,rbx
  4084e3:	mov    r8,rbx
  4084e6:	mov    r9,rbx
  4084e9:	push   rbx
  4084ea:	push   rbx
  4084eb:	call   406170 <fprintf@plt>
  4084f0:	add    rsp,0x10
  4084f4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084fb:	lea    rsi,[rip+0x299fe]        # 431f00 <_IO_stdin_used@@Base+0x3f00>
  408502:	xor    eax,eax
  408504:	mov    rdx,rbx
  408507:	mov    rcx,rbx
  40850a:	mov    r8,rbx
  40850d:	mov    r9,rbx
  408510:	call   406170 <fprintf@plt>
  408515:	mov    rdi,QWORD PTR [rbx+0xd0]
  40851c:	lea    rsi,[rip+0x29c59]        # 43217c <_IO_stdin_used@@Base+0x417c>
  408523:	mov    eax,0x0
  408528:	mov    rdx,rbx
  40852b:	mov    rcx,rbx
  40852e:	mov    r8,rbx
  408531:	mov    r9,rbx
  408534:	push   rbx
  408535:	push   rbx
  408536:	push   rbx
  408537:	push   rbx
  408538:	push   rbx
  408539:	push   rbx
  40853a:	call   406170 <fprintf@plt>
  40853f:	add    rsp,0x30
  408543:	mov    rsi,QWORD PTR [rbx+0xd0]
  40854a:	mov    edi,0xa
  40854f:	call   406110 <fputc@plt>
  408554:	mov    rax,QWORD PTR [rbx+0xe0]
  40855b:	cmp    DWORD PTR [rax+0xac],0x0
  408562:	je     408581 <__flatcc_fb_gen_common_c_header@@Base+0xbb1>
  408564:	mov    rcx,QWORD PTR [rbx+0xd0]
  40856b:	lea    rdi,[rip+0x2cd69]        # 4352db <_IO_stdin_used@@Base+0x72db>
  408572:	mov    esi,0x24
  408577:	mov    edx,0x1
  40857c:	call   406210 <fwrite@plt>
  408581:	mov    rdi,QWORD PTR [rbx+0xd0]
  408588:	lea    rsi,[rip+0x26e7b]        # 42f40a <_IO_stdin_used@@Base+0x140a>
  40858f:	xor    eax,eax
  408591:	mov    rdx,r14
  408594:	call   406170 <fprintf@plt>
  408599:	xor    eax,eax
  40859b:	add    rsp,0x8
  40859f:	pop    rbx
  4085a0:	pop    r14
  4085a2:	ret    
  4085a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085ad:	nop    DWORD PTR [rax]

00000000004085b0 <__flatcc_fb_gen_c_reader@@Base>:
  4085b0:	push   rbp
  4085b1:	mov    rbp,rsp
  4085b4:	push   r15
  4085b6:	push   r14
  4085b8:	push   r13
  4085ba:	push   r12
  4085bc:	push   rbx
  4085bd:	and    rsp,0xffffffffffffffe0
  4085c1:	sub    rsp,0x4c0
  4085c8:	mov    r12,rdi
  4085cb:	lea    r14,[rdi+0x66]
  4085cf:	mov    rax,QWORD PTR [rdi+0xe0]
  4085d6:	mov    rdi,QWORD PTR [rdi+0xd0]
  4085dd:	mov    rcx,QWORD PTR [r12+0xd8]
  4085e5:	mov    rdx,QWORD PTR [rcx+0x118]
  4085ec:	mov    ebx,DWORD PTR [rax+0xa4]
  4085f2:	lea    rsi,[rip+0x2cd07]        # 435300 <_IO_stdin_used@@Base+0x7300>
  4085f9:	xor    eax,eax
  4085fb:	mov    rcx,rdx
  4085fe:	call   406170 <fprintf@plt>
  408603:	mov    rcx,QWORD PTR [r12+0xd0]
  40860b:	lea    rdi,[rip+0x26ce9]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  408612:	mov    esi,0x51
  408617:	mov    edx,0x1
  40861c:	call   406210 <fwrite@plt>
  408621:	mov    rcx,QWORD PTR [r12+0xd0]
  408629:	test   ebx,ebx
  40862b:	je     40868b <__flatcc_fb_gen_c_reader@@Base+0xdb>
  40862d:	lea    rdi,[rip+0x2ccf5]        # 435329 <_IO_stdin_used@@Base+0x7329>
  408634:	mov    esi,0x1bb
  408639:	mov    edx,0x1
  40863e:	call   406210 <fwrite@plt>
  408643:	mov    rdi,QWORD PTR [r12+0xd0]
  40864b:	lea    rsi,[rip+0x2ce93]        # 4354e5 <_IO_stdin_used@@Base+0x74e5>
  408652:	xor    eax,eax
  408654:	mov    rdx,r14
  408657:	mov    rcx,r12
  40865a:	call   406170 <fprintf@plt>
  40865f:	lea    rsi,[rip+0x3dd26]        # 44638c <_IO_stdin_used@@Base+0x1838c>
  408666:	lea    rdx,[rip+0x2ceb8]        # 435525 <_IO_stdin_used@@Base+0x7525>
  40866d:	mov    rdi,r12
  408670:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  408675:	mov    rcx,QWORD PTR [r12+0xd0]
  40867d:	lea    rdi,[rip+0x2ceab]        # 43552f <_IO_stdin_used@@Base+0x752f>
  408684:	mov    esi,0x27
  408689:	jmp    4086ea <__flatcc_fb_gen_c_reader@@Base+0x13a>
  40868b:	lea    rsi,[rip+0x2ce53]        # 4354e5 <_IO_stdin_used@@Base+0x74e5>
  408692:	xor    eax,eax
  408694:	mov    rdi,rcx
  408697:	mov    rdx,r14
  40869a:	mov    rcx,r12
  40869d:	call   406170 <fprintf@plt>
  4086a2:	lea    rsi,[rip+0x3dce3]        # 44638c <_IO_stdin_used@@Base+0x1838c>
  4086a9:	lea    rdx,[rip+0x2ce75]        # 435525 <_IO_stdin_used@@Base+0x7525>
  4086b0:	mov    rdi,r12
  4086b3:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  4086b8:	mov    rcx,QWORD PTR [r12+0xd0]
  4086c0:	lea    rdi,[rip+0x2ce68]        # 43552f <_IO_stdin_used@@Base+0x752f>
  4086c7:	mov    esi,0x27
  4086cc:	mov    edx,0x1
  4086d1:	call   406210 <fwrite@plt>
  4086d6:	mov    rcx,QWORD PTR [r12+0xd0]
  4086de:	lea    rdi,[rip+0x2ce72]        # 435557 <_IO_stdin_used@@Base+0x7557>
  4086e5:	mov    esi,0x3a
  4086ea:	mov    edx,0x1
  4086ef:	call   406210 <fwrite@plt>
  4086f4:	lea    r13,[r12+0xd0]
  4086fc:	mov    rax,QWORD PTR [r12+0xe0]
  408704:	cmp    DWORD PTR [rax+0xac],0x0
  40870b:	je     408727 <__flatcc_fb_gen_c_reader@@Base+0x177>
  40870d:	mov    rcx,QWORD PTR [r13+0x0]
  408711:	lea    rdi,[rip+0x26dd9]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  408718:	mov    esi,0x24
  40871d:	mov    edx,0x1
  408722:	call   406210 <fwrite@plt>
  408727:	mov    rdi,QWORD PTR [r12+0xd0]
  40872f:	mov    rax,QWORD PTR [r12+0xd8]
  408737:	movzx  ecx,WORD PTR [rax+0x20]
  40873b:	cmp    ecx,0x2
  40873e:	jne    40875e <__flatcc_fb_gen_c_reader@@Base+0x1ae>
  408740:	mov    r8d,DWORD PTR [rax+0x18]
  408744:	mov    r9,QWORD PTR [rax+0x10]
  408748:	lea    rsi,[rip+0x2ce43]        # 435592 <_IO_stdin_used@@Base+0x7592>
  40874f:	xor    eax,eax
  408751:	mov    rdx,r12
  408754:	mov    rcx,r12
  408757:	call   406170 <fprintf@plt>
  40875c:	jmp    408772 <__flatcc_fb_gen_c_reader@@Base+0x1c2>
  40875e:	lea    rsi,[rip+0x2ce5e]        # 4355c3 <_IO_stdin_used@@Base+0x75c3>
  408765:	xor    eax,eax
  408767:	mov    rdx,r12
  40876a:	mov    rcx,r12
  40876d:	call   406170 <fprintf@plt>
  408772:	mov    rdi,QWORD PTR [r12+0xd0]
  40877a:	mov    rax,QWORD PTR [r12+0xd8]
  408782:	movzx  ecx,WORD PTR [rax+0x38]
  408786:	cmp    ecx,0x2
  408789:	jne    4087a9 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  40878b:	mov    r8d,DWORD PTR [rax+0x30]
  40878f:	mov    r9,QWORD PTR [rax+0x28]
  408793:	lea    rsi,[rip+0x2ce5d]        # 4355f7 <_IO_stdin_used@@Base+0x75f7>
  40879a:	xor    eax,eax
  40879c:	mov    rdx,r12
  40879f:	mov    rcx,r12
  4087a2:	call   406170 <fprintf@plt>
  4087a7:	jmp    4087c9 <__flatcc_fb_gen_c_reader@@Base+0x219>
  4087a9:	mov    rax,QWORD PTR [r12+0xe0]
  4087b1:	mov    r8,QWORD PTR [rax+0x78]
  4087b5:	lea    rsi,[rip+0x2ce6b]        # 435627 <_IO_stdin_used@@Base+0x7627>
  4087bc:	xor    eax,eax
  4087be:	mov    rdx,r12
  4087c1:	mov    rcx,r12
  4087c4:	call   406170 <fprintf@plt>
  4087c9:	mov    rsi,QWORD PTR [r12+0xd0]
  4087d1:	mov    edi,0xa
  4087d6:	call   406110 <fputc@plt>
  4087db:	mov    rax,QWORD PTR [r12+0xd8]
  4087e3:	mov    rbx,QWORD PTR [rax+0x48]
  4087e7:	test   rbx,rbx
  4087ea:	je     408807 <__flatcc_fb_gen_c_reader@@Base+0x257>
  4087ec:	nop    DWORD PTR [rax+0x0]
  4087f0:	mov    rdi,r12
  4087f3:	mov    rsi,rbx
  4087f6:	call   40a800 <__flatcc_fb_gen_c_reader@@Base+0x2250>
  4087fb:	mov    rbx,QWORD PTR [rbx+0xc0]
  408802:	test   rbx,rbx
  408805:	jne    4087f0 <__flatcc_fb_gen_c_reader@@Base+0x240>
  408807:	mov    rsi,QWORD PTR [r12+0xd0]
  40880f:	mov    edi,0xa
  408814:	call   406110 <fputc@plt>
  408819:	mov    rax,QWORD PTR [r12+0xd8]
  408821:	mov    rbx,QWORD PTR [rax+0x40]
  408825:	test   rbx,rbx
  408828:	mov    QWORD PTR [rsp],r12
  40882c:	je     408a9b <__flatcc_fb_gen_c_reader@@Base+0x4eb>
  408832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40883c:	nop    DWORD PTR [rax+0x0]
  408840:	cmp    WORD PTR [rbx+0x10],0x0
  408845:	jne    408852 <__flatcc_fb_gen_c_reader@@Base+0x2a2>
  408847:	mov    rdi,r12
  40884a:	mov    rsi,rbx
  40884d:	call   40a800 <__flatcc_fb_gen_c_reader@@Base+0x2250>
  408852:	mov    rbx,QWORD PTR [rbx]
  408855:	test   rbx,rbx
  408858:	jne    408840 <__flatcc_fb_gen_c_reader@@Base+0x290>
  40885a:	mov    rax,QWORD PTR [r12+0xd8]
  408862:	mov    rbx,QWORD PTR [rax+0x40]
  408866:	test   rbx,rbx
  408869:	je     408a9b <__flatcc_fb_gen_c_reader@@Base+0x4eb>
  40886f:	nop
  408870:	movzx  eax,WORD PTR [rbx+0x10]
  408874:	cmp    eax,0x1
  408877:	ja     408a8f <__flatcc_fb_gen_c_reader@@Base+0x4df>
  40887d:	vxorps xmm0,xmm0,xmm0
  408881:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  40888a:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  408893:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  40889c:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  4088a5:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  4088ae:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  4088b7:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  4088c0:	mov    QWORD PTR [rsp+0x320],0x0
  4088cc:	mov    rdi,QWORD PTR [rbx+0x18]
  4088d0:	mov    rsi,rbx
  4088d3:	lea    r15,[rsp+0x240]
  4088db:	mov    rdx,r15
  4088de:	vzeroupper 
  4088e1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4088e6:	mov    r12d,DWORD PTR [rbx+0xa0]
  4088ed:	mov    r14,r12
  4088f0:	shr    r14,0x1d
  4088f4:	mov    rax,QWORD PTR [rsp]
  4088f8:	mov    rdi,QWORD PTR [rax+0xd0]
  4088ff:	xor    eax,eax
  408901:	lea    rsi,[rip+0x2cf11]        # 435819 <_IO_stdin_used@@Base+0x7819>
  408908:	mov    rdx,r15
  40890b:	mov    rcx,r15
  40890e:	mov    r8,QWORD PTR [rsp]
  408912:	call   406170 <fprintf@plt>
  408917:	mov    rax,QWORD PTR [rsp]
  40891b:	mov    rdi,QWORD PTR [rax+0xd0]
  408922:	xor    eax,eax
  408924:	lea    rsi,[rip+0x2cf2f]        # 43585a <_IO_stdin_used@@Base+0x785a>
  40892b:	mov    rdx,r15
  40892e:	mov    rcx,QWORD PTR [rsp]
  408932:	mov    r8,r12
  408935:	call   406170 <fprintf@plt>
  40893a:	mov    ecx,r12d
  40893d:	and    ecx,0xf
  408940:	cmp    ecx,0x9
  408943:	mov    r8d,0x30
  408949:	mov    r11d,0x57
  40894f:	cmova  r8d,r11d
  408953:	add    r8d,ecx
  408956:	mov    eax,0x404
  40895b:	bextr  edx,r12d,eax
  408960:	cmp    edx,0x9
  408963:	mov    r9d,0x30
  408969:	cmova  r9d,r11d
  40896d:	add    r9d,edx
  408970:	mov    eax,0x408
  408975:	bextr  esi,r12d,eax
  40897a:	cmp    esi,0x9
  40897d:	mov    r10d,0x30
  408983:	cmova  r10d,r11d
  408987:	mov    eax,0x40c
  40898c:	bextr  edi,r12d,eax
  408991:	add    r10d,esi
  408994:	cmp    edi,0x9
  408997:	mov    esi,0x30
  40899c:	cmova  esi,r11d
  4089a0:	add    esi,edi
  4089a2:	mov    eax,0x410
  4089a7:	bextr  edi,r12d,eax
  4089ac:	cmp    edi,0x9
  4089af:	mov    eax,0x30
  4089b4:	cmova  eax,r11d
  4089b8:	add    eax,edi
  4089ba:	mov    ecx,0x414
  4089bf:	bextr  edi,r12d,ecx
  4089c4:	cmp    edi,0x9
  4089c7:	mov    ecx,0x30
  4089cc:	cmova  ecx,r11d
  4089d0:	add    ecx,edi
  4089d2:	mov    edx,0x418
  4089d7:	bextr  edi,r12d,edx
  4089dc:	cmp    edi,0x9
  4089df:	mov    edx,0x30
  4089e4:	cmova  edx,r11d
  4089e8:	add    edx,edi
  4089ea:	shr    r12d,0x1c
  4089ee:	cmp    r14,0x4
  4089f2:	mov    WORD PTR [rsp+0x140],0x785c
  4089fc:	mov    BYTE PTR [rsp+0x143],r8b
  408a04:	mov    BYTE PTR [rsp+0x142],r9b
  408a0c:	mov    WORD PTR [rsp+0x144],0x785c
  408a16:	mov    BYTE PTR [rsp+0x147],r10b
  408a1e:	mov    BYTE PTR [rsp+0x146],sil
  408a26:	mov    WORD PTR [rsp+0x148],0x785c
  408a30:	mov    BYTE PTR [rsp+0x14b],al
  408a37:	mov    BYTE PTR [rsp+0x14a],cl
  408a3e:	mov    WORD PTR [rsp+0x14c],0x785c
  408a48:	mov    BYTE PTR [rsp+0x14f],dl
  408a4f:	mov    eax,0x30
  408a54:	cmova  eax,r11d
  408a58:	add    eax,r12d
  408a5b:	mov    r12,QWORD PTR [rsp]
  408a5f:	mov    BYTE PTR [rsp+0x14e],al
  408a66:	mov    BYTE PTR [rsp+0x150],0x0
  408a6e:	mov    rdi,QWORD PTR [r12+0xd0]
  408a76:	xor    eax,eax
  408a78:	lea    rsi,[rip+0x2ce04]        # 435883 <_IO_stdin_used@@Base+0x7883>
  408a7f:	mov    rdx,r15
  408a82:	lea    rcx,[rsp+0x140]
  408a8a:	call   406170 <fprintf@plt>
  408a8f:	mov    rbx,QWORD PTR [rbx]
  408a92:	test   rbx,rbx
  408a95:	jne    408870 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  408a9b:	mov    rsi,QWORD PTR [r12+0xd0]
  408aa3:	mov    edi,0xa
  408aa8:	call   406110 <fputc@plt>
  408aad:	mov    rax,QWORD PTR [r12+0xd8]
  408ab5:	mov    rbx,QWORD PTR [rax+0x40]
  408ab9:	test   rbx,rbx
  408abc:	je     408adc <__flatcc_fb_gen_c_reader@@Base+0x52c>
  408abe:	xchg   ax,ax
  408ac0:	movzx  eax,WORD PTR [rbx+0x10]
  408ac4:	cmp    eax,0x3
  408ac7:	jne    408ad4 <__flatcc_fb_gen_c_reader@@Base+0x524>
  408ac9:	mov    rdi,r12
  408acc:	mov    rsi,rbx
  408acf:	call   40a9b0 <__flatcc_fb_gen_c_reader@@Base+0x2400>
  408ad4:	mov    rbx,QWORD PTR [rbx]
  408ad7:	test   rbx,rbx
  408ada:	jne    408ac0 <__flatcc_fb_gen_c_reader@@Base+0x510>
  408adc:	mov    rsi,QWORD PTR [r12+0xd0]
  408ae4:	mov    edi,0xa
  408ae9:	call   406110 <fputc@plt>
  408aee:	mov    rax,QWORD PTR [r12+0xd8]
  408af6:	mov    r15,QWORD PTR [rax+0x48]
  408afa:	test   r15,r15
  408afd:	je     409695 <__flatcc_fb_gen_c_reader@@Base+0x10e5>
  408b03:	lea    r14,[rsp+0x240]
  408b0b:	mov    QWORD PTR [rsp+0x28],r13
  408b10:	mov    rax,QWORD PTR [r12+0xe0]
  408b18:	mov    eax,DWORD PTR [rax+0xa4]
  408b1e:	mov    DWORD PTR [rsp+0x8],eax
  408b22:	vxorps xmm0,xmm0,xmm0
  408b26:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  408b2f:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  408b38:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  408b41:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  408b4a:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  408b53:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  408b5c:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  408b65:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  408b6e:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  408b77:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  408b80:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  408b89:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  408b92:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  408b9b:	mov    QWORD PTR [rsp+0x320],0x0
  408ba7:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  408bb0:	mov    QWORD PTR [rsp+0x220],0x0
  408bbc:	movzx  eax,WORD PTR [r15+0x10]
  408bc1:	cmp    eax,0x1
  408bc4:	jne    40a5ff <__flatcc_fb_gen_c_reader@@Base+0x204f>
  408bca:	cmp    WORD PTR [r15+0xb0],0x0
  408bd3:	jne    408be3 <__flatcc_fb_gen_c_reader@@Base+0x633>
  408bd5:	cmp    QWORD PTR [r15+0xa8],0x0
  408bdd:	jne    40a6fc <__flatcc_fb_gen_c_reader@@Base+0x214c>
  408be3:	cmp    QWORD PTR [r15+0xb8],0x0
  408beb:	jne    408bfb <__flatcc_fb_gen_c_reader@@Base+0x64b>
  408bed:	cmp    QWORD PTR [r15+0xa8],0x0
  408bf5:	jne    40a71e <__flatcc_fb_gen_c_reader@@Base+0x216e>
  408bfb:	mov    rdi,QWORD PTR [r15+0x18]
  408bff:	mov    rsi,r15
  408c02:	mov    rdx,r14
  408c05:	vzeroupper 
  408c08:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  408c0d:	mov    r14,QWORD PTR [r15+0x40]
  408c11:	test   r14,r14
  408c14:	je     408cdc <__flatcc_fb_gen_c_reader@@Base+0x72c>
  408c1a:	mov    rax,QWORD PTR [r14+0x8]
  408c1e:	cmp    QWORD PTR [rax+0x10],0x0
  408c23:	je     408c3e <__flatcc_fb_gen_c_reader@@Base+0x68e>
  408c25:	mov    rdi,QWORD PTR [r13+0x0]
  408c29:	xor    eax,eax
  408c2b:	lea    rsi,[rip+0x2d06d]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  408c32:	lea    rdx,[rip+0x26906]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  408c39:	call   406170 <fprintf@plt>
  408c3e:	mov    rdi,QWORD PTR [r13+0x0]
  408c42:	mov    rax,QWORD PTR [r14+0x8]
  408c46:	mov    edx,DWORD PTR [rax+0x8]
  408c49:	mov    rcx,QWORD PTR [rax]
  408c4c:	xor    eax,eax
  408c4e:	lea    rsi,[rip+0x37746]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  408c55:	call   406170 <fprintf@plt>
  408c5a:	mov    rbx,QWORD PTR [r14]
  408c5d:	test   rbx,rbx
  408c60:	je     408cc2 <__flatcc_fb_gen_c_reader@@Base+0x712>
  408c62:	mov    rax,QWORD PTR [r14+0x8]
  408c66:	mov    rax,QWORD PTR [rax+0x10]
  408c6a:	nop    WORD PTR [rax+rax*1+0x0]
  408c70:	mov    rcx,QWORD PTR [rbx+0x8]
  408c74:	cmp    rax,QWORD PTR [rcx+0x10]
  408c78:	je     408c93 <__flatcc_fb_gen_c_reader@@Base+0x6e3>
  408c7a:	mov    rdi,QWORD PTR [r13+0x0]
  408c7e:	xor    eax,eax
  408c80:	lea    rsi,[rip+0x2d01f]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  408c87:	lea    rdx,[rip+0x268b1]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  408c8e:	call   406170 <fprintf@plt>
  408c93:	mov    rdi,QWORD PTR [r13+0x0]
  408c97:	mov    rax,QWORD PTR [rbx+0x8]
  408c9b:	mov    edx,DWORD PTR [rax+0x8]
  408c9e:	mov    rcx,QWORD PTR [rax]
  408ca1:	xor    eax,eax
  408ca3:	lea    rsi,[rip+0x376f1]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  408caa:	call   406170 <fprintf@plt>
  408caf:	mov    rax,QWORD PTR [rbx+0x8]
  408cb3:	mov    rcx,QWORD PTR [rbx]
  408cb6:	mov    rax,QWORD PTR [rax+0x10]
  408cba:	mov    rbx,rcx
  408cbd:	test   rcx,rcx
  408cc0:	jne    408c70 <__flatcc_fb_gen_c_reader@@Base+0x6c0>
  408cc2:	mov    rcx,QWORD PTR [r13+0x0]
  408cc6:	mov    esi,0x4
  408ccb:	mov    edx,0x1
  408cd0:	lea    rdi,[rip+0x3bb95]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  408cd7:	call   406210 <fwrite@plt>
  408cdc:	cmp    QWORD PTR [r15+0xb8],0x0
  408ce4:	mov    QWORD PTR [rsp+0x38],r15
  408ce9:	je     4090f0 <__flatcc_fb_gen_c_reader@@Base+0xb40>
  408cef:	cmp    DWORD PTR [rsp+0x8],0x0
  408cf4:	lea    rbx,[rsp+0x240]
  408cfc:	je     408d18 <__flatcc_fb_gen_c_reader@@Base+0x768>
  408cfe:	mov    rcx,QWORD PTR [r13+0x0]
  408d02:	mov    esi,0x10
  408d07:	mov    edx,0x1
  408d0c:	lea    rdi,[rip+0x2d223]        # 435f36 <_IO_stdin_used@@Base+0x7f36>
  408d13:	call   406210 <fwrite@plt>
  408d18:	mov    rdi,QWORD PTR [r13+0x0]
  408d1c:	xor    eax,eax
  408d1e:	lea    rsi,[rip+0x2d222]        # 435f47 <_IO_stdin_used@@Base+0x7f47>
  408d25:	mov    rdx,rbx
  408d28:	call   406170 <fprintf@plt>
  408d2d:	mov    r14,QWORD PTR [r15+0x28]
  408d31:	test   r14,r14
  408d34:	je     409170 <__flatcc_fb_gen_c_reader@@Base+0xbc0>
  408d3a:	lea    rax,[r15+0xb0]
  408d41:	mov    QWORD PTR [rsp+0x18],rax
  408d46:	xor    r15d,r15d
  408d49:	mov    DWORD PTR [rsp+0x14],0x0
  408d51:	xor    eax,eax
  408d53:	mov    QWORD PTR [rsp+0x20],rax
  408d58:	nop    DWORD PTR [rax+rax*1+0x0]
  408d60:	mov    r12,QWORD PTR [r14+0x68]
  408d64:	test   r12,r12
  408d67:	je     408e3c <__flatcc_fb_gen_c_reader@@Base+0x88c>
  408d6d:	mov    rax,QWORD PTR [r12+0x8]
  408d72:	cmp    QWORD PTR [rax+0x10],0x0
  408d77:	je     408d92 <__flatcc_fb_gen_c_reader@@Base+0x7e2>
  408d79:	mov    rdi,QWORD PTR [r13+0x0]
  408d7d:	xor    eax,eax
  408d7f:	lea    rsi,[rip+0x2cf19]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  408d86:	lea    rdx,[rip+0x3c688]        # 445415 <_IO_stdin_used@@Base+0x17415>
  408d8d:	call   406170 <fprintf@plt>
  408d92:	mov    rdi,QWORD PTR [r13+0x0]
  408d96:	mov    rax,QWORD PTR [r12+0x8]
  408d9b:	mov    edx,DWORD PTR [rax+0x8]
  408d9e:	mov    rcx,QWORD PTR [rax]
  408da1:	xor    eax,eax
  408da3:	lea    rsi,[rip+0x375f1]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  408daa:	call   406170 <fprintf@plt>
  408daf:	mov    rbx,QWORD PTR [r12]
  408db3:	test   rbx,rbx
  408db6:	je     408e22 <__flatcc_fb_gen_c_reader@@Base+0x872>
  408db8:	mov    rax,QWORD PTR [r12+0x8]
  408dbd:	mov    rax,QWORD PTR [rax+0x10]
  408dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dd0:	mov    rcx,QWORD PTR [rbx+0x8]
  408dd4:	cmp    rax,QWORD PTR [rcx+0x10]
  408dd8:	je     408df3 <__flatcc_fb_gen_c_reader@@Base+0x843>
  408dda:	mov    rdi,QWORD PTR [r13+0x0]
  408dde:	xor    eax,eax
  408de0:	lea    rsi,[rip+0x2cebf]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  408de7:	lea    rdx,[rip+0x3c627]        # 445415 <_IO_stdin_used@@Base+0x17415>
  408dee:	call   406170 <fprintf@plt>
  408df3:	mov    rdi,QWORD PTR [r13+0x0]
  408df7:	mov    rax,QWORD PTR [rbx+0x8]
  408dfb:	mov    edx,DWORD PTR [rax+0x8]
  408dfe:	mov    rcx,QWORD PTR [rax]
  408e01:	xor    eax,eax
  408e03:	lea    rsi,[rip+0x37591]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  408e0a:	call   406170 <fprintf@plt>
  408e0f:	mov    rax,QWORD PTR [rbx+0x8]
  408e13:	mov    rcx,QWORD PTR [rbx]
  408e16:	mov    rax,QWORD PTR [rax+0x10]
  408e1a:	mov    rbx,rcx
  408e1d:	test   rcx,rcx
  408e20:	jne    408dd0 <__flatcc_fb_gen_c_reader@@Base+0x820>
  408e22:	mov    rcx,QWORD PTR [r13+0x0]
  408e26:	mov    esi,0x4
  408e2b:	mov    edx,0x1
  408e30:	lea    rdi,[rip+0x3ba35]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  408e37:	call   406210 <fwrite@plt>
  408e3c:	lea    rax,[r14+0x72]
  408e40:	test   r15,r15
  408e43:	cmove  rax,QWORD PTR [rsp+0x18]
  408e49:	mov    rcx,QWORD PTR [r14+0x8]
  408e4d:	mov    r11d,DWORD PTR [rcx+0x8]
  408e51:	mov    r10,QWORD PTR [rcx]
  408e54:	movzx  r9d,WORD PTR [rax]
  408e58:	cmp    DWORD PTR [rsp+0x8],0x0
  408e5d:	je     408ef0 <__flatcc_fb_gen_c_reader@@Base+0x940>
  408e63:	mov    ecx,DWORD PTR [r14+0x78]
  408e67:	sub    ecx,r15d
  408e6a:	je     408ef0 <__flatcc_fb_gen_c_reader@@Base+0x940>
  408e70:	mov    r12,r13
  408e73:	mov    rdi,QWORD PTR [r13+0x0]
  408e77:	mov    rdx,QWORD PTR [rsp+0x20]
  408e7c:	lea    eax,[rdx+0x1]
  408e7f:	mov    DWORD PTR [rsp+0x30],eax
  408e83:	xor    eax,eax
  408e85:	lea    rsi,[rip+0x2d0c8]        # 435f54 <_IO_stdin_used@@Base+0x7f54>
  408e8c:	mov    rbx,r10
  408e8f:	mov    r13d,r9d
  408e92:	mov    r15d,r11d
  408e95:	call   406170 <fprintf@plt>
  408e9a:	mov    r11d,r15d
  408e9d:	mov    r9d,r13d
  408ea0:	mov    r10,rbx
  408ea3:	mov    eax,DWORD PTR [rsp+0x30]
  408ea7:	mov    QWORD PTR [rsp+0x20],rax
  408eac:	test   BYTE PTR [r14+0x70],0x4
  408eb1:	je     408efa <__flatcc_fb_gen_c_reader@@Base+0x94a>
  408eb3:	mov    r8d,DWORD PTR [r14+0x80]
  408eba:	mov    r13,r12
  408ebd:	mov    rdi,QWORD PTR [r12]
  408ec1:	cmp    DWORD PTR [rsp+0x8],0x0
  408ec6:	je     408fe4 <__flatcc_fb_gen_c_reader@@Base+0xa34>
  408ecc:	xor    eax,eax
  408ece:	lea    rsi,[rip+0x2d09d]        # 435f72 <_IO_stdin_used@@Base+0x7f72>
  408ed5:	mov    ebx,DWORD PTR [rsp+0x14]
  408ed9:	mov    edx,ebx
  408edb:	mov    ecx,r8d
  408ede:	mov    r8d,r11d
  408ee1:	mov    r9,r10
  408ee4:	call   406170 <fprintf@plt>
  408ee9:	jmp    409008 <__flatcc_fb_gen_c_reader@@Base+0xa58>
  408eee:	xchg   ax,ax
  408ef0:	mov    r12,r13
  408ef3:	test   BYTE PTR [r14+0x70],0x4
  408ef8:	jne    408eb3 <__flatcc_fb_gen_c_reader@@Base+0x903>
  408efa:	movzx  eax,WORD PTR [r14+0x28]
  408eff:	cmp    eax,0xe
  408f02:	je     408f70 <__flatcc_fb_gen_c_reader@@Base+0x9c0>
  408f04:	movzx  eax,ax
  408f07:	cmp    eax,0x8
  408f0a:	jne    40a4e8 <__flatcc_fb_gen_c_reader@@Base+0x1f38>
  408f10:	mov    eax,DWORD PTR [r14+0x18]
  408f14:	cmp    eax,0x5
  408f17:	lea    rcx,[rip+0x26621]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  408f1e:	cmove  rcx,QWORD PTR [rsp]
  408f23:	add    eax,0xffffffff
  408f26:	cmp    eax,0xb
  408f29:	jae    40a49f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  408f2f:	mov    r13d,r11d
  408f32:	mov    r12,r10
  408f35:	cdqe   
  408f37:	lea    rdx,[rip+0x47ba2]        # 450ae0 <fb_value_set_deleted@@Base+0x6080>
  408f3e:	mov    rbx,QWORD PTR [rdx+rax*8]
  408f42:	mov    rax,QWORD PTR [rsp+0x28]
  408f47:	mov    rdi,QWORD PTR [rax]
  408f4a:	cmp    DWORD PTR [rsp+0x8],0x0
  408f4f:	je     409011 <__flatcc_fb_gen_c_reader@@Base+0xa61>
  408f55:	xor    eax,eax
  408f57:	lea    rsi,[rip+0x2d086]        # 435fe4 <_IO_stdin_used@@Base+0x7fe4>
  408f5e:	mov    rdx,rcx
  408f61:	jmp    408fda <__flatcc_fb_gen_c_reader@@Base+0xa2a>
  408f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f6d:	nop    DWORD PTR [rax]
  408f70:	mov    DWORD PTR [rsp+0x30],r9d
  408f75:	mov    rsi,QWORD PTR [r14+0x18]
  408f79:	mov    eax,DWORD PTR [rsi+0x10]
  408f7c:	mov    ecx,eax
  408f7e:	or     ecx,0x2
  408f81:	movzx  ecx,cx
  408f84:	cmp    ecx,0x3
  408f87:	jne    40a597 <__flatcc_fb_gen_c_reader@@Base+0x1fe7>
  408f8d:	mov    r13d,r11d
  408f90:	mov    r12,r10
  408f93:	movzx  eax,ax
  408f96:	cmp    eax,0x1
  408f99:	lea    rbx,[rip+0x2d0bf]        # 43605f <_IO_stdin_used@@Base+0x805f>
  408fa0:	lea    rax,[rip+0x26598]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  408fa7:	cmove  rbx,rax
  408fab:	mov    rdi,QWORD PTR [rsi+0x18]
  408faf:	lea    r15,[rsp+0x140]
  408fb7:	mov    rdx,r15
  408fba:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  408fbf:	mov    rax,QWORD PTR [rsp+0x28]
  408fc4:	mov    rdi,QWORD PTR [rax]
  408fc7:	cmp    DWORD PTR [rsp+0x8],0x0
  408fcc:	je     40901f <__flatcc_fb_gen_c_reader@@Base+0xa6f>
  408fce:	xor    eax,eax
  408fd0:	lea    rsi,[rip+0x2d08e]        # 436065 <_IO_stdin_used@@Base+0x8065>
  408fd7:	mov    rdx,r15
  408fda:	mov    rcx,rbx
  408fdd:	call   406170 <fprintf@plt>
  408fe2:	jmp    409037 <__flatcc_fb_gen_c_reader@@Base+0xa87>
  408fe4:	sub    rsp,0x8
  408fe8:	xor    eax,eax
  408fea:	lea    rsi,[rip+0x2cfb4]        # 435fa5 <_IO_stdin_used@@Base+0x7fa5>
  408ff1:	mov    edx,r9d
  408ff4:	mov    ebx,DWORD PTR [rsp+0x1c]
  408ff8:	mov    ecx,ebx
  408ffa:	mov    r9d,r11d
  408ffd:	push   r10
  408fff:	call   406170 <fprintf@plt>
  409004:	add    rsp,0x10
  409008:	add    ebx,0x1
  40900b:	mov    DWORD PTR [rsp+0x14],ebx
  40900f:	jmp    409056 <__flatcc_fb_gen_c_reader@@Base+0xaa6>
  409011:	xor    eax,eax
  409013:	lea    rsi,[rip+0x2cfd4]        # 435fee <_IO_stdin_used@@Base+0x7fee>
  40901a:	mov    edx,r9d
  40901d:	jmp    40902f <__flatcc_fb_gen_c_reader@@Base+0xa7f>
  40901f:	xor    eax,eax
  409021:	lea    rsi,[rip+0x2d049]        # 436071 <_IO_stdin_used@@Base+0x8071>
  409028:	mov    edx,DWORD PTR [rsp+0x30]
  40902c:	mov    rcx,r15
  40902f:	mov    r8,rbx
  409032:	call   406170 <fprintf@plt>
  409037:	mov    rcx,QWORD PTR [rsp+0x28]
  40903c:	mov    rdi,QWORD PTR [rcx]
  40903f:	xor    eax,eax
  409041:	lea    rsi,[rip+0x2d068]        # 4360b0 <_IO_stdin_used@@Base+0x80b0>
  409048:	mov    edx,r13d
  40904b:	mov    r13,rcx
  40904e:	mov    rcx,r12
  409051:	call   406170 <fprintf@plt>
  409056:	mov    r15d,DWORD PTR [r14+0x80]
  40905d:	add    r15d,DWORD PTR [r14+0x78]
  409061:	mov    r14,QWORD PTR [r14]
  409064:	test   r14,r14
  409067:	jne    408d60 <__flatcc_fb_gen_c_reader@@Base+0x7b0>
  40906d:	cmp    DWORD PTR [rsp+0x8],0x0
  409072:	je     409185 <__flatcc_fb_gen_c_reader@@Base+0xbd5>
  409078:	mov    rax,QWORD PTR [rsp+0x38]
  40907d:	mov    ecx,DWORD PTR [rax+0xb8]
  409083:	sub    ecx,r15d
  409086:	mov    r12,QWORD PTR [rsp]
  40908a:	lea    r14,[rsp+0x240]
  409092:	je     4090ab <__flatcc_fb_gen_c_reader@@Base+0xafb>
  409094:	mov    rdi,QWORD PTR [r13+0x0]
  409098:	xor    eax,eax
  40909a:	lea    rsi,[rip+0x2ceb3]        # 435f54 <_IO_stdin_used@@Base+0x7f54>
  4090a1:	mov    rdx,QWORD PTR [rsp+0x20]
  4090a6:	call   406170 <fprintf@plt>
  4090ab:	mov    rcx,QWORD PTR [r13+0x0]
  4090af:	mov    esi,0x3
  4090b4:	mov    edx,0x1
  4090b9:	lea    rdi,[rip+0x3747f]        # 44053f <_IO_stdin_used@@Base+0x1253f>
  4090c0:	call   406210 <fwrite@plt>
  4090c5:	mov    rcx,QWORD PTR [r13+0x0]
  4090c9:	mov    esi,0xf
  4090ce:	mov    edx,0x1
  4090d3:	lea    rdi,[rip+0x2cfdd]        # 4360b7 <_IO_stdin_used@@Base+0x80b7>
  4090da:	call   406210 <fwrite@plt>
  4090df:	jmp    4091ab <__flatcc_fb_gen_c_reader@@Base+0xbfb>
  4090e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090ee:	xchg   ax,ax
  4090f0:	mov    rdi,QWORD PTR [r13+0x0]
  4090f4:	xor    eax,eax
  4090f6:	lea    rsi,[rip+0x2ccf5]        # 435df2 <_IO_stdin_used@@Base+0x7df2>
  4090fd:	lea    r14,[rsp+0x240]
  409105:	mov    rdx,r14
  409108:	call   406170 <fprintf@plt>
  40910d:	mov    rdi,QWORD PTR [r13+0x0]
  409111:	xor    eax,eax
  409113:	lea    rsi,[rip+0x2cd39]        # 435e53 <_IO_stdin_used@@Base+0x7e53>
  40911a:	mov    rdx,r14
  40911d:	mov    rcx,r14
  409120:	mov    r8,r14
  409123:	call   406170 <fprintf@plt>
  409128:	mov    rdi,QWORD PTR [r13+0x0]
  40912c:	xor    eax,eax
  40912e:	lea    rsi,[rip+0x2cd72]        # 435ea7 <_IO_stdin_used@@Base+0x7ea7>
  409135:	mov    rdx,r14
  409138:	mov    rcx,r14
  40913b:	mov    r8,r14
  40913e:	call   406170 <fprintf@plt>
  409143:	mov    rdi,QWORD PTR [r13+0x0]
  409147:	xor    eax,eax
  409149:	lea    rsi,[rip+0x2cd99]        # 435ee9 <_IO_stdin_used@@Base+0x7ee9>
  409150:	mov    rdx,r14
  409153:	mov    rcx,r14
  409156:	mov    r8,r14
  409159:	call   406170 <fprintf@plt>
  40915e:	jmp    409230 <__flatcc_fb_gen_c_reader@@Base+0xc80>
  409163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40916d:	nop    DWORD PTR [rax]
  409170:	xor    eax,eax
  409172:	mov    QWORD PTR [rsp+0x20],rax
  409177:	xor    r15d,r15d
  40917a:	cmp    DWORD PTR [rsp+0x8],0x0
  40917f:	jne    409078 <__flatcc_fb_gen_c_reader@@Base+0xac8>
  409185:	mov    rcx,QWORD PTR [r13+0x0]
  409189:	mov    esi,0x3
  40918e:	mov    edx,0x1
  409193:	lea    rdi,[rip+0x373a5]        # 44053f <_IO_stdin_used@@Base+0x1253f>
  40919a:	call   406210 <fwrite@plt>
  40919f:	mov    r12,QWORD PTR [rsp]
  4091a3:	lea    r14,[rsp+0x240]
  4091ab:	mov    rdi,QWORD PTR [r12+0xd0]
  4091b3:	mov    r15,QWORD PTR [rsp+0x38]
  4091b8:	mov    rcx,QWORD PTR [r15+0xb8]
  4091bf:	xor    eax,eax
  4091c1:	lea    rsi,[rip+0x2ceff]        # 4360c7 <_IO_stdin_used@@Base+0x80c7>
  4091c8:	mov    rdx,r14
  4091cb:	call   406170 <fprintf@plt>
  4091d0:	mov    rdi,QWORD PTR [r12+0xd0]
  4091d8:	xor    eax,eax
  4091da:	lea    rsi,[rip+0x2cf25]        # 436106 <_IO_stdin_used@@Base+0x8106>
  4091e1:	mov    rdx,r14
  4091e4:	mov    rcx,r14
  4091e7:	mov    r8,r14
  4091ea:	call   406170 <fprintf@plt>
  4091ef:	mov    rdi,QWORD PTR [r12+0xd0]
  4091f7:	xor    eax,eax
  4091f9:	lea    rsi,[rip+0x2cf5e]        # 43615e <_IO_stdin_used@@Base+0x815e>
  409200:	mov    rdx,r14
  409203:	mov    rcx,r14
  409206:	mov    r8,r14
  409209:	call   406170 <fprintf@plt>
  40920e:	mov    rdi,QWORD PTR [r12+0xd0]
  409216:	xor    eax,eax
  409218:	lea    rsi,[rip+0x2cf85]        # 4361a4 <_IO_stdin_used@@Base+0x81a4>
  40921f:	mov    rdx,r14
  409222:	mov    rcx,r14
  409225:	mov    r8,r14
  409228:	mov    r9,r12
  40922b:	call   406170 <fprintf@plt>
  409230:	mov    rdi,QWORD PTR [r12+0xd0]
  409238:	mov    rcx,QWORD PTR [r15+0xb8]
  40923f:	xor    eax,eax
  409241:	lea    rsi,[rip+0x2cfb3]        # 4361fb <_IO_stdin_used@@Base+0x81fb>
  409248:	mov    rdx,r14
  40924b:	call   406170 <fprintf@plt>
  409250:	mov    rdi,QWORD PTR [r12+0xd0]
  409258:	xor    eax,eax
  40925a:	lea    rsi,[rip+0x2cfcc]        # 43622d <_IO_stdin_used@@Base+0x822d>
  409261:	mov    rdx,r14
  409264:	mov    rcx,r14
  409267:	mov    r8,r12
  40926a:	call   406170 <fprintf@plt>
  40926f:	mov    rdi,QWORD PTR [r12+0xd0]
  409277:	xor    eax,eax
  409279:	lea    rsi,[rip+0x2cfed]        # 43626d <_IO_stdin_used@@Base+0x826d>
  409280:	mov    rdx,r12
  409283:	mov    rcx,r14
  409286:	call   406170 <fprintf@plt>
  40928b:	mov    rsi,QWORD PTR [r12+0xd0]
  409293:	mov    edi,0xa
  409298:	call   406110 <fputc@plt>
  40929d:	mov    r12,QWORD PTR [r15+0x28]
  4092a1:	test   r12,r12
  4092a4:	je     409666 <__flatcc_fb_gen_c_reader@@Base+0x10b6>
  4092aa:	xor    r15d,r15d
  4092ad:	mov    DWORD PTR [rsp+0x8],0x0
  4092b5:	jmp    4092d0 <__flatcc_fb_gen_c_reader@@Base+0xd20>
  4092b7:	mov    r15d,0x1
  4092bd:	lea    r14,[rsp+0x240]
  4092c5:	jmp    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  4092ca:	nop    WORD PTR [rax+rax*1+0x0]
  4092d0:	test   BYTE PTR [r12+0x70],0x4
  4092d6:	jne    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  4092dc:	mov    rax,QWORD PTR [r12+0x8]
  4092e1:	mov    r8d,DWORD PTR [rax+0x8]
  4092e5:	mov    rbx,QWORD PTR [rax]
  4092e8:	movzx  eax,WORD PTR [r12+0x28]
  4092ee:	cmp    eax,0xe
  4092f1:	je     409370 <__flatcc_fb_gen_c_reader@@Base+0xdc0>
  4092f3:	movzx  eax,ax
  4092f6:	cmp    eax,0x8
  4092f9:	jne    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  4092ff:	mov    ecx,DWORD PTR [r12+0x18]
  409304:	lea    eax,[rcx-0x1]
  409307:	cmp    eax,0xb
  40930a:	jae    40a49f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  409310:	cmp    ecx,0x5
  409313:	lea    r10,[rip+0x26225]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40931a:	mov    rdx,QWORD PTR [rsp]
  40931e:	cmove  r10,rdx
  409322:	movsxd r11,eax
  409325:	mov    rdi,QWORD PTR [rdx+0xd0]
  40932c:	mov    eax,0x0
  409331:	lea    rsi,[rip+0x2cf4d]        # 436285 <_IO_stdin_used@@Base+0x8285>
  409338:	mov    rcx,r14
  40933b:	mov    r9,rbx
  40933e:	lea    rbx,[rip+0x4779b]        # 450ae0 <fb_value_set_deleted@@Base+0x6080>
  409345:	push   QWORD PTR [rbx+r11*8]
  409349:	push   r10
  40934b:	lea    rbx,[rip+0x476ce]        # 450a20 <fb_value_set_deleted@@Base+0x5fc0>
  409352:	push   QWORD PTR [rbx+r11*8]
  409356:	push   rdx
  409357:	call   406170 <fprintf@plt>
  40935c:	add    rsp,0x20
  409360:	cmp    DWORD PTR [rsp+0x8],0x0
  409365:	je     409627 <__flatcc_fb_gen_c_reader@@Base+0x1077>
  40936b:	jmp    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  409370:	mov    DWORD PTR [rsp+0x18],r8d
  409375:	mov    rsi,QWORD PTR [r12+0x18]
  40937a:	mov    rdi,QWORD PTR [rsi+0x18]
  40937e:	lea    rdx,[rsp+0x140]
  409386:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40938b:	mov    rax,QWORD PTR [r12+0x18]
  409390:	movzx  ecx,WORD PTR [rax+0x10]
  409394:	cmp    ecx,0x1
  409397:	je     4095e6 <__flatcc_fb_gen_c_reader@@Base+0x1036>
  40939d:	movzx  ecx,cx
  4093a0:	cmp    ecx,0x3
  4093a3:	mov    r8d,DWORD PTR [rsp+0x18]
  4093a8:	jne    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  4093ae:	mov    DWORD PTR [rsp+0x14],r15d
  4093b3:	mov    eax,DWORD PTR [rax+0x48]
  4093b6:	add    eax,0xffffffff
  4093b9:	cmp    eax,0xb
  4093bc:	jae    40a5b6 <__flatcc_fb_gen_c_reader@@Base+0x2006>
  4093c2:	mov    r14,QWORD PTR [rsp]
  4093c6:	mov    rdi,QWORD PTR [r14+0xd0]
  4093cd:	xor    eax,eax
  4093cf:	lea    rsi,[rip+0x2cee5]        # 4362bb <_IO_stdin_used@@Base+0x82bb>
  4093d6:	mov    rdx,r14
  4093d9:	lea    r15,[rsp+0x240]
  4093e1:	mov    rcx,r15
  4093e4:	mov    QWORD PTR [rsp+0x20],rbx
  4093e9:	mov    r9,rbx
  4093ec:	lea    rbx,[rsp+0x140]
  4093f4:	push   rbx
  4093f5:	push   rbx
  4093f6:	call   406170 <fprintf@plt>
  4093fb:	add    rsp,0x10
  4093ff:	mov    rax,QWORD PTR [r14+0xe0]
  409406:	mov    r14,r15
  409409:	cmp    DWORD PTR [rax+0x24],0x0
  40940d:	jne    40944e <__flatcc_fb_gen_c_reader@@Base+0xe9e>
  40940f:	cmp    BYTE PTR [r12+0x70],0x0
  409415:	jns    40944e <__flatcc_fb_gen_c_reader@@Base+0xe9e>
  409417:	mov    rdx,QWORD PTR [rsp]
  40941b:	mov    rdi,QWORD PTR [rdx+0xd0]
  409422:	sub    rsp,0x8
  409426:	xor    eax,eax
  409428:	lea    rsi,[rip+0x2cec5]        # 4362f4 <_IO_stdin_used@@Base+0x82f4>
  40942f:	mov    rcx,r14
  409432:	mov    r8d,DWORD PTR [rsp+0x20]
  409437:	mov    r9,QWORD PTR [rsp+0x28]
  40943c:	lea    rbx,[rsp+0x148]
  409444:	push   rbx
  409445:	call   406170 <fprintf@plt>
  40944a:	add    rsp,0x10
  40944e:	cmp    BYTE PTR [r12+0x70],0x0
  409454:	mov    r15d,DWORD PTR [rsp+0x14]
  409459:	jns    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40945f:	test   r15d,r15d
  409462:	je     40947e <__flatcc_fb_gen_c_reader@@Base+0xece>
  409464:	mov    rcx,QWORD PTR [r13+0x0]
  409468:	mov    esi,0x42
  40946d:	mov    edx,0x1
  409472:	lea    rdi,[rip+0x2ceb1]        # 43632a <_IO_stdin_used@@Base+0x832a>
  409479:	call   406210 <fwrite@plt>
  40947e:	mov    rbx,QWORD PTR [rsp]
  409482:	mov    rcx,QWORD PTR [rbx+0xd0]
  409489:	mov    esi,0x3d
  40948e:	mov    edx,0x1
  409493:	lea    rdi,[rip+0x2ced3]        # 43636d <_IO_stdin_used@@Base+0x836d>
  40949a:	call   406210 <fwrite@plt>
  40949f:	mov    rdi,QWORD PTR [rbx+0xd0]
  4094a6:	sub    rsp,0x8
  4094aa:	xor    eax,eax
  4094ac:	lea    rsi,[rip+0x2cef8]        # 4363ab <_IO_stdin_used@@Base+0x83ab>
  4094b3:	mov    rdx,rbx
  4094b6:	mov    rcx,r14
  4094b9:	mov    r8d,DWORD PTR [rsp+0x20]
  4094be:	mov    r9,QWORD PTR [rsp+0x28]
  4094c3:	lea    r15,[rsp+0x148]
  4094cb:	push   r15
  4094cd:	call   406170 <fprintf@plt>
  4094d2:	add    rsp,0x10
  4094d6:	mov    rax,QWORD PTR [rbx+0xe0]
  4094dd:	cmp    DWORD PTR [rax+0xa8],0x0
  4094e4:	je     409513 <__flatcc_fb_gen_c_reader@@Base+0xf63>
  4094e6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4094ed:	xor    eax,eax
  4094ef:	lea    rsi,[rip+0x2ceeb]        # 4363e1 <_IO_stdin_used@@Base+0x83e1>
  4094f6:	mov    rdx,rbx
  4094f9:	mov    rcx,r14
  4094fc:	mov    r8d,DWORD PTR [rsp+0x18]
  409501:	mov    r9,QWORD PTR [rsp+0x20]
  409506:	push   r14
  409508:	push   r15
  40950a:	call   406170 <fprintf@plt>
  40950f:	add    rsp,0x10
  409513:	mov    DWORD PTR [rsp+0x8],0x1
  40951b:	mov    r15d,DWORD PTR [rsp+0x14]
  409520:	test   r15d,r15d
  409523:	jne    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  409529:	mov    rcx,r14
  40952c:	mov    r14,QWORD PTR [rsp]
  409530:	mov    rdi,QWORD PTR [r14+0xd0]
  409537:	sub    rsp,0x8
  40953b:	xor    eax,eax
  40953d:	lea    rsi,[rip+0x2ced9]        # 43641d <_IO_stdin_used@@Base+0x841d>
  409544:	mov    rdx,r14
  409547:	mov    r15d,DWORD PTR [rsp+0x20]
  40954c:	mov    r8d,r15d
  40954f:	mov    r9,QWORD PTR [rsp+0x28]
  409554:	lea    rbx,[rsp+0x148]
  40955c:	push   rbx
  40955d:	call   406170 <fprintf@plt>
  409562:	add    rsp,0x10
  409566:	mov    rdi,QWORD PTR [r14+0xd0]
  40956d:	sub    rsp,0x8
  409571:	xor    eax,eax
  409573:	lea    rsi,[rip+0x2cee1]        # 43645b <_IO_stdin_used@@Base+0x845b>
  40957a:	mov    rdx,r14
  40957d:	lea    rcx,[rsp+0x248]
  409585:	mov    r8d,r15d
  409588:	mov    r15,QWORD PTR [rsp+0x28]
  40958d:	mov    r9,r15
  409590:	push   rbx
  409591:	call   406170 <fprintf@plt>
  409596:	add    rsp,0x10
  40959a:	mov    rax,QWORD PTR [r14+0xe0]
  4095a1:	mov    DWORD PTR [rsp+0x8],0x1
  4095a9:	cmp    DWORD PTR [rax+0xa8],0x0
  4095b0:	je     4092b7 <__flatcc_fb_gen_c_reader@@Base+0xd07>
  4095b6:	mov    rdi,QWORD PTR [r13+0x0]
  4095ba:	xor    eax,eax
  4095bc:	lea    rsi,[rip+0x2ced6]        # 436499 <_IO_stdin_used@@Base+0x8499>
  4095c3:	lea    r14,[rsp+0x240]
  4095cb:	mov    rdx,r14
  4095ce:	mov    rcx,r14
  4095d1:	mov    r8d,DWORD PTR [rsp+0x18]
  4095d6:	mov    r9,r15
  4095d9:	call   406170 <fprintf@plt>
  4095de:	mov    r15d,0x1
  4095e4:	jmp    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  4095e6:	mov    rdx,QWORD PTR [rsp]
  4095ea:	mov    rdi,QWORD PTR [rdx+0xd0]
  4095f1:	sub    rsp,0x8
  4095f5:	xor    eax,eax
  4095f7:	lea    rsi,[rip+0x2cec4]        # 4364c2 <_IO_stdin_used@@Base+0x84c2>
  4095fe:	mov    rcx,r14
  409601:	mov    r8d,DWORD PTR [rsp+0x20]
  409606:	mov    r9,rbx
  409609:	lea    rbx,[rsp+0x148]
  409611:	push   rbx
  409612:	call   406170 <fprintf@plt>
  409617:	add    rsp,0x10
  40961b:	nop    DWORD PTR [rax+rax*1+0x0]
  409620:	cmp    DWORD PTR [rsp+0x8],0x0
  409625:	jne    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  409627:	movzx  eax,BYTE PTR [r12+0x70]
  40962d:	test   al,al
  40962f:	jns    409659 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  409631:	mov    rcx,QWORD PTR [r13+0x0]
  409635:	mov    esi,0x54
  40963a:	mov    edx,0x1
  40963f:	lea    rdi,[rip+0x2ceb3]        # 4364f9 <_IO_stdin_used@@Base+0x84f9>
  409646:	call   406210 <fwrite@plt>
  40964b:	mov    r15d,0x1
  409651:	mov    DWORD PTR [rsp+0x8],0x0
  409659:	mov    r12,QWORD PTR [r12]
  40965d:	test   r12,r12
  409660:	jne    4092d0 <__flatcc_fb_gen_c_reader@@Base+0xd20>
  409666:	mov    rsi,QWORD PTR [r13+0x0]
  40966a:	mov    edi,0xa
  40966f:	call   406110 <fputc@plt>
  409674:	mov    r15,QWORD PTR [rsp+0x38]
  409679:	mov    r15,QWORD PTR [r15+0xc0]
  409680:	test   r15,r15
  409683:	mov    r12,QWORD PTR [rsp]
  409687:	jne    408b10 <__flatcc_fb_gen_c_reader@@Base+0x560>
  40968d:	mov    rax,QWORD PTR [r12+0xd8]
  409695:	mov    rbx,QWORD PTR [rax+0x40]
  409699:	test   rbx,rbx
  40969c:	je     40a42c <__flatcc_fb_gen_c_reader@@Base+0x1e7c>
  4096a2:	lea    r14,[rsp+0x40]
  4096a7:	lea    r12,[rip+0x36ced]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  4096ae:	xchg   ax,ax
  4096b0:	mov    eax,DWORD PTR [rbx+0x10]
  4096b3:	lea    ecx,[rax-0x1]
  4096b6:	movzx  ecx,cx
  4096b9:	cmp    ecx,0x3
  4096bc:	jb     40a420 <__flatcc_fb_gen_c_reader@@Base+0x1e70>
  4096c2:	test   ax,ax
  4096c5:	je     4096e4 <__flatcc_fb_gen_c_reader@@Base+0x1134>
  4096c7:	movzx  eax,ax
  4096ca:	cmp    eax,0x4
  4096cd:	jne    40a621 <__flatcc_fb_gen_c_reader@@Base+0x2071>
  4096d3:	mov    rdi,QWORD PTR [rsp]
  4096d7:	mov    rsi,rbx
  4096da:	call   40a9b0 <__flatcc_fb_gen_c_reader@@Base+0x2400>
  4096df:	jmp    40a420 <__flatcc_fb_gen_c_reader@@Base+0x1e70>
  4096e4:	vxorps xmm0,xmm0,xmm0
  4096e8:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  4096f1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4096fa:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  409703:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40970c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  409715:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40971b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  409721:	mov    QWORD PTR [rsp+0x120],0x0
  40972d:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  409736:	vmovaps YMMWORD PTR [rsp+0x3e0],ymm0
  40973f:	vmovaps YMMWORD PTR [rsp+0x3c0],ymm0
  409748:	vmovaps YMMWORD PTR [rsp+0x3a0],ymm0
  409751:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  40975a:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  409763:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  40976c:	mov    QWORD PTR [rsp+0x420],0x0
  409778:	mov    rsi,QWORD PTR [r13+0x0]
  40977c:	mov    edi,0xa
  409781:	vzeroupper 
  409784:	call   406110 <fputc@plt>
  409789:	mov    rdi,QWORD PTR [rbx+0x18]
  40978d:	mov    rsi,rbx
  409790:	mov    rdx,r14
  409793:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409798:	mov    QWORD PTR [rsp+0x20],rbx
  40979d:	mov    r14,QWORD PTR [rbx+0x40]
  4097a1:	test   r14,r14
  4097a4:	je     409868 <__flatcc_fb_gen_c_reader@@Base+0x12b8>
  4097aa:	mov    rax,QWORD PTR [r14+0x8]
  4097ae:	cmp    QWORD PTR [rax+0x10],0x0
  4097b3:	je     4097ce <__flatcc_fb_gen_c_reader@@Base+0x121e>
  4097b5:	mov    rdi,QWORD PTR [r13+0x0]
  4097b9:	xor    eax,eax
  4097bb:	lea    rsi,[rip+0x2c4dd]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  4097c2:	lea    rdx,[rip+0x25d76]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4097c9:	call   406170 <fprintf@plt>
  4097ce:	mov    rdi,QWORD PTR [r13+0x0]
  4097d2:	mov    rax,QWORD PTR [r14+0x8]
  4097d6:	mov    edx,DWORD PTR [rax+0x8]
  4097d9:	mov    rcx,QWORD PTR [rax]
  4097dc:	xor    eax,eax
  4097de:	mov    rsi,r12
  4097e1:	call   406170 <fprintf@plt>
  4097e6:	mov    rbx,QWORD PTR [r14]
  4097e9:	test   rbx,rbx
  4097ec:	je     40984e <__flatcc_fb_gen_c_reader@@Base+0x129e>
  4097ee:	mov    rax,QWORD PTR [r14+0x8]
  4097f2:	mov    rax,QWORD PTR [rax+0x10]
  4097f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409800:	mov    rcx,QWORD PTR [rbx+0x8]
  409804:	cmp    rax,QWORD PTR [rcx+0x10]
  409808:	je     409823 <__flatcc_fb_gen_c_reader@@Base+0x1273>
  40980a:	mov    rdi,QWORD PTR [r13+0x0]
  40980e:	xor    eax,eax
  409810:	lea    rsi,[rip+0x2c48f]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  409817:	lea    rdx,[rip+0x25d21]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40981e:	call   406170 <fprintf@plt>
  409823:	mov    rdi,QWORD PTR [r13+0x0]
  409827:	mov    rax,QWORD PTR [rbx+0x8]
  40982b:	mov    edx,DWORD PTR [rax+0x8]
  40982e:	mov    rcx,QWORD PTR [rax]
  409831:	xor    eax,eax
  409833:	mov    rsi,r12
  409836:	call   406170 <fprintf@plt>
  40983b:	mov    rax,QWORD PTR [rbx+0x8]
  40983f:	mov    rcx,QWORD PTR [rbx]
  409842:	mov    rax,QWORD PTR [rax+0x10]
  409846:	mov    rbx,rcx
  409849:	test   rcx,rcx
  40984c:	jne    409800 <__flatcc_fb_gen_c_reader@@Base+0x1250>
  40984e:	mov    rcx,QWORD PTR [r13+0x0]
  409852:	mov    esi,0x4
  409857:	mov    edx,0x1
  40985c:	lea    rdi,[rip+0x3b009]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  409863:	call   406210 <fwrite@plt>
  409868:	mov    r14,QWORD PTR [rsp]
  40986c:	mov    rdi,QWORD PTR [r14+0xd0]
  409873:	xor    eax,eax
  409875:	lea    rsi,[rip+0x2cd52]        # 4365ce <_IO_stdin_used@@Base+0x85ce>
  40987c:	lea    rbx,[rsp+0x40]
  409881:	mov    rdx,rbx
  409884:	call   406170 <fprintf@plt>
  409889:	mov    rdi,QWORD PTR [r14+0xd0]
  409890:	xor    eax,eax
  409892:	lea    rsi,[rip+0x2c994]        # 43622d <_IO_stdin_used@@Base+0x822d>
  409899:	mov    rdx,rbx
  40989c:	mov    rcx,rbx
  40989f:	mov    r8,r14
  4098a2:	call   406170 <fprintf@plt>
  4098a7:	mov    rdi,QWORD PTR [r14+0xd0]
  4098ae:	sub    rsp,0x8
  4098b2:	xor    eax,eax
  4098b4:	lea    rsi,[rip+0x2cd3c]        # 4365f7 <_IO_stdin_used@@Base+0x85f7>
  4098bb:	mov    rdx,rbx
  4098be:	mov    rcx,rbx
  4098c1:	mov    r8,rbx
  4098c4:	mov    r9,r14
  4098c7:	push   rbx
  4098c8:	call   406170 <fprintf@plt>
  4098cd:	add    rsp,0x10
  4098d1:	mov    rdi,QWORD PTR [r14+0xd0]
  4098d8:	xor    eax,eax
  4098da:	lea    rsi,[rip+0x2cd7b]        # 43665c <_IO_stdin_used@@Base+0x865c>
  4098e1:	mov    rdx,r14
  4098e4:	mov    rcx,rbx
  4098e7:	call   406170 <fprintf@plt>
  4098ec:	mov    rsi,QWORD PTR [r14+0xd0]
  4098f3:	mov    edi,0xa
  4098f8:	call   406110 <fputc@plt>
  4098fd:	mov    rax,QWORD PTR [rsp+0x20]
  409902:	mov    r14,QWORD PTR [rax+0x28]
  409906:	test   r14,r14
  409909:	je     40a40c <__flatcc_fb_gen_c_reader@@Base+0x1e5c>
  40990f:	mov    DWORD PTR [rsp+0x14],0x0
  409917:	jmp    409b80 <__flatcc_fb_gen_c_reader@@Base+0x15d0>
  40991c:	mov    edi,DWORD PTR [rax+0x48]
  40991f:	lea    rsi,[r14+0x48]
  409923:	lea    r15,[rsp+0x440]
  40992b:	mov    rdx,r15
  40992e:	call   40afe0 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  409933:	mov    r10,rbx
  409936:	mov    rbx,QWORD PTR [rsp]
  40993a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409941:	mov    rcx,QWORD PTR [r14+0x88]
  409948:	mov    eax,0x0
  40994d:	lea    rsi,[rip+0x2d08d]        # 4369e1 <_IO_stdin_used@@Base+0x89e1>
  409954:	mov    rdx,rbx
  409957:	lea    r8,[rsp+0x40]
  40995c:	mov    r9,QWORD PTR [rsp+0x8]
  409961:	push   r15
  409963:	push   r10
  409965:	push   r10
  409967:	push   QWORD PTR [rsp+0x30]
  40996b:	call   406170 <fprintf@plt>
  409970:	add    rsp,0x20
  409974:	mov    rax,QWORD PTR [rbx+0xe0]
  40997b:	cmp    DWORD PTR [rax+0x24],0x0
  40997f:	jne    40998c <__flatcc_fb_gen_c_reader@@Base+0x13dc>
  409981:	cmp    BYTE PTR [r14+0x70],0x0
  409986:	js     409b2c <__flatcc_fb_gen_c_reader@@Base+0x157c>
  40998c:	cmp    BYTE PTR [r14+0x70],0x0
  409991:	jns    40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  409997:	cmp    DWORD PTR [rsp+0x14],0x0
  40999c:	je     4099b8 <__flatcc_fb_gen_c_reader@@Base+0x1408>
  40999e:	mov    rcx,QWORD PTR [r13+0x0]
  4099a2:	mov    esi,0x42
  4099a7:	mov    edx,0x1
  4099ac:	lea    rdi,[rip+0x2c977]        # 43632a <_IO_stdin_used@@Base+0x832a>
  4099b3:	call   406210 <fwrite@plt>
  4099b8:	mov    rax,QWORD PTR [rsp]
  4099bc:	mov    rcx,QWORD PTR [rax+0xd0]
  4099c3:	mov    rbx,rax
  4099c6:	mov    esi,0x3d
  4099cb:	mov    edx,0x1
  4099d0:	lea    rdi,[rip+0x2c996]        # 43636d <_IO_stdin_used@@Base+0x836d>
  4099d7:	call   406210 <fwrite@plt>
  4099dc:	mov    rdx,rbx
  4099df:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099e6:	sub    rsp,0x8
  4099ea:	xor    eax,eax
  4099ec:	lea    rsi,[rip+0x2c9b8]        # 4363ab <_IO_stdin_used@@Base+0x83ab>
  4099f3:	lea    r15,[rsp+0x48]
  4099f8:	mov    rcx,r15
  4099fb:	mov    r8,QWORD PTR [rsp+0x10]
  409a00:	mov    r15,QWORD PTR [rsp+0x20]
  409a05:	mov    r9,r15
  409a08:	lea    rbx,[rsp+0x348]
  409a10:	push   rbx
  409a11:	call   406170 <fprintf@plt>
  409a16:	mov    rdx,QWORD PTR [rsp+0x10]
  409a1b:	add    rsp,0x10
  409a1f:	mov    rax,QWORD PTR [rdx+0xe0]
  409a26:	cmp    DWORD PTR [rax+0xa8],0x0
  409a2d:	je     409a57 <__flatcc_fb_gen_c_reader@@Base+0x14a7>
  409a2f:	mov    rdi,QWORD PTR [rdx+0xd0]
  409a36:	xor    eax,eax
  409a38:	lea    rsi,[rip+0x2cfde]        # 436a1d <_IO_stdin_used@@Base+0x8a1d>
  409a3f:	lea    rcx,[rsp+0x40]
  409a44:	mov    r8,QWORD PTR [rsp+0x8]
  409a49:	mov    r9,r15
  409a4c:	push   rdx
  409a4d:	push   rbx
  409a4e:	call   406170 <fprintf@plt>
  409a53:	add    rsp,0x10
  409a57:	cmp    DWORD PTR [rsp+0x14],0x0
  409a5c:	jne    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  409a62:	mov    rax,QWORD PTR [rsp]
  409a66:	mov    rdi,QWORD PTR [rax+0xd0]
  409a6d:	mov    rdx,rax
  409a70:	sub    rsp,0x8
  409a74:	xor    eax,eax
  409a76:	lea    rsi,[rip+0x2c9a0]        # 43641d <_IO_stdin_used@@Base+0x841d>
  409a7d:	lea    r15,[rsp+0x48]
  409a82:	mov    rcx,r15
  409a85:	mov    r8,QWORD PTR [rsp+0x10]
  409a8a:	mov    r15,QWORD PTR [rsp+0x20]
  409a8f:	mov    r9,r15
  409a92:	lea    rbx,[rsp+0x348]
  409a9a:	push   rbx
  409a9b:	call   406170 <fprintf@plt>
  409aa0:	add    rsp,0x10
  409aa4:	mov    rdx,QWORD PTR [rsp]
  409aa8:	mov    rdi,QWORD PTR [rdx+0xd0]
  409aaf:	sub    rsp,0x8
  409ab3:	xor    eax,eax
  409ab5:	lea    rsi,[rip+0x2c99f]        # 43645b <_IO_stdin_used@@Base+0x845b>
  409abc:	lea    rcx,[rsp+0x48]
  409ac1:	mov    r8,QWORD PTR [rsp+0x10]
  409ac6:	mov    r9,r15
  409ac9:	lea    rbx,[rsp+0x348]
  409ad1:	push   rbx
  409ad2:	call   406170 <fprintf@plt>
  409ad7:	add    rsp,0x10
  409adb:	mov    rax,QWORD PTR [rsp]
  409adf:	mov    rax,QWORD PTR [rax+0xe0]
  409ae6:	jmp    40a1ce <__flatcc_fb_gen_c_reader@@Base+0x1c1e>
  409aeb:	mov    rdx,QWORD PTR [rsp]
  409aef:	mov    rdi,QWORD PTR [rdx+0xd0]
  409af6:	xor    eax,eax
  409af8:	lea    rsi,[rip+0x2cbda]        # 4366d9 <_IO_stdin_used@@Base+0x86d9>
  409aff:	lea    rcx,[rsp+0x40]
  409b04:	mov    r8,QWORD PTR [rsp+0x8]
  409b09:	mov    r9,QWORD PTR [rsp+0x18]
  409b0e:	push   QWORD PTR [rsp+0x28]
  409b12:	push   rbx
  409b13:	call   406170 <fprintf@plt>
  409b18:	add    rsp,0x10
  409b1c:	cmp    BYTE PTR [r14+0x70],0x0
  409b21:	jns    40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  409b27:	jmp    40a0a0 <__flatcc_fb_gen_c_reader@@Base+0x1af0>
  409b2c:	mov    rdx,QWORD PTR [rsp]
  409b30:	mov    rdi,QWORD PTR [rdx+0xd0]
  409b37:	sub    rsp,0x8
  409b3b:	xor    eax,eax
  409b3d:	lea    rsi,[rip+0x2c7b0]        # 4362f4 <_IO_stdin_used@@Base+0x82f4>
  409b44:	lea    rcx,[rsp+0x48]
  409b49:	mov    r8,QWORD PTR [rsp+0x10]
  409b4e:	mov    r9,QWORD PTR [rsp+0x20]
  409b53:	lea    rbx,[rsp+0x348]
  409b5b:	push   rbx
  409b5c:	call   406170 <fprintf@plt>
  409b61:	add    rsp,0x10
  409b65:	cmp    BYTE PTR [r14+0x70],0x0
  409b6a:	jns    40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  409b70:	jmp    409997 <__flatcc_fb_gen_c_reader@@Base+0x13e7>
  409b75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b7f:	nop
  409b80:	mov    r15,QWORD PTR [r14+0x68]
  409b84:	test   r15,r15
  409b87:	je     409c48 <__flatcc_fb_gen_c_reader@@Base+0x1698>
  409b8d:	mov    rax,QWORD PTR [r15+0x8]
  409b91:	cmp    QWORD PTR [rax+0x10],0x0
  409b96:	je     409bb1 <__flatcc_fb_gen_c_reader@@Base+0x1601>
  409b98:	mov    rdi,QWORD PTR [r13+0x0]
  409b9c:	xor    eax,eax
  409b9e:	lea    rsi,[rip+0x2c0fa]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  409ba5:	lea    rdx,[rip+0x25993]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  409bac:	call   406170 <fprintf@plt>
  409bb1:	mov    rdi,QWORD PTR [r13+0x0]
  409bb5:	mov    rax,QWORD PTR [r15+0x8]
  409bb9:	mov    edx,DWORD PTR [rax+0x8]
  409bbc:	mov    rcx,QWORD PTR [rax]
  409bbf:	xor    eax,eax
  409bc1:	mov    rsi,r12
  409bc4:	call   406170 <fprintf@plt>
  409bc9:	mov    rbx,QWORD PTR [r15]
  409bcc:	test   rbx,rbx
  409bcf:	je     409c2e <__flatcc_fb_gen_c_reader@@Base+0x167e>
  409bd1:	mov    rax,QWORD PTR [r15+0x8]
  409bd5:	mov    rax,QWORD PTR [rax+0x10]
  409bd9:	nop    DWORD PTR [rax+0x0]
  409be0:	mov    rcx,QWORD PTR [rbx+0x8]
  409be4:	cmp    rax,QWORD PTR [rcx+0x10]
  409be8:	je     409c03 <__flatcc_fb_gen_c_reader@@Base+0x1653>
  409bea:	mov    rdi,QWORD PTR [r13+0x0]
  409bee:	xor    eax,eax
  409bf0:	lea    rsi,[rip+0x2c0af]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  409bf7:	lea    rdx,[rip+0x25941]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  409bfe:	call   406170 <fprintf@plt>
  409c03:	mov    rdi,QWORD PTR [r13+0x0]
  409c07:	mov    rax,QWORD PTR [rbx+0x8]
  409c0b:	mov    edx,DWORD PTR [rax+0x8]
  409c0e:	mov    rcx,QWORD PTR [rax]
  409c11:	xor    eax,eax
  409c13:	mov    rsi,r12
  409c16:	call   406170 <fprintf@plt>
  409c1b:	mov    rax,QWORD PTR [rbx+0x8]
  409c1f:	mov    rcx,QWORD PTR [rbx]
  409c22:	mov    rax,QWORD PTR [rax+0x10]
  409c26:	mov    rbx,rcx
  409c29:	test   rcx,rcx
  409c2c:	jne    409be0 <__flatcc_fb_gen_c_reader@@Base+0x1630>
  409c2e:	mov    rcx,QWORD PTR [r13+0x0]
  409c32:	mov    esi,0x4
  409c37:	mov    edx,0x1
  409c3c:	lea    rdi,[rip+0x3ac29]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  409c43:	call   406210 <fwrite@plt>
  409c48:	mov    rax,QWORD PTR [r14+0x8]
  409c4c:	mov    ebx,DWORD PTR [rax+0x8]
  409c4f:	mov    r11,QWORD PTR [rax]
  409c52:	movzx  eax,WORD PTR [r14+0x70]
  409c57:	test   al,0x4
  409c59:	jne    409e30 <__flatcc_fb_gen_c_reader@@Base+0x1880>
  409c5f:	mov    ecx,DWORD PTR [r14+0x28]
  409c63:	add    ecx,0xfffffff9
  409c66:	movzx  edx,cx
  409c69:	cmp    edx,0x8
  409c6c:	ja     40a54e <__flatcc_fb_gen_c_reader@@Base+0x1f9e>
  409c72:	mov    edx,0x108
  409c77:	bextr  r15d,eax,edx
  409c7c:	movzx  eax,cx
  409c7f:	lea    rcx,[rip+0x255f6]        # 42f27c <_IO_stdin_used@@Base+0x127c>
  409c86:	movsxd rax,DWORD PTR [rcx+rax*4]
  409c8a:	add    rax,rcx
  409c8d:	jmp    rax
  409c8f:	mov    eax,DWORD PTR [r14+0x18]
  409c93:	add    eax,0xffffffff
  409c96:	cmp    eax,0xb
  409c99:	jae    40a740 <__flatcc_fb_gen_c_reader@@Base+0x2190>
  409c9f:	movsxd r10,eax
  409ca2:	mov    rdx,QWORD PTR [rsp]
  409ca6:	mov    rdi,QWORD PTR [rdx+0xd0]
  409cad:	mov    rcx,QWORD PTR [r14+0x88]
  409cb4:	mov    eax,0x0
  409cb9:	lea    rsi,[rip+0x2cb2b]        # 4367eb <_IO_stdin_used@@Base+0x87eb>
  409cc0:	lea    r8,[rsp+0x40]
  409cc5:	mov    r9d,ebx
  409cc8:	push   r15
  409cca:	lea    rbx,[rip+0x46daf]        # 450a80 <fb_value_set_deleted@@Base+0x6020>
  409cd1:	push   QWORD PTR [rbx+r10*8]
  409cd5:	push   rdx
  409cd6:	push   r11
  409cd8:	call   406170 <fprintf@plt>
  409cdd:	add    rsp,0x20
  409ce1:	mov    rsi,QWORD PTR [r14+0x90]
  409ce8:	test   rsi,rsi
  409ceb:	je     40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  409cf1:	vxorps xmm0,xmm0,xmm0
  409cf5:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  409cfe:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  409d07:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  409d10:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  409d19:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  409d22:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  409d2b:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  409d34:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  409d3d:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  409d46:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  409d4f:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  409d58:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  409d61:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  409d6a:	mov    QWORD PTR [rsp+0x320],0x0
  409d76:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  409d7f:	mov    QWORD PTR [rsp+0x220],0x0
  409d8b:	movzx  eax,WORD PTR [rsi+0x10]
  409d8f:	lea    rbx,[rip+0x2ceda]        # 436c70 <_IO_stdin_used@@Base+0x8c70>
  409d96:	test   ax,ax
  409d99:	lea    rdx,[rsp+0x240]
  409da1:	je     409db6 <__flatcc_fb_gen_c_reader@@Base+0x1806>
  409da3:	movzx  eax,ax
  409da6:	cmp    eax,0x1
  409da9:	jne    40a789 <__flatcc_fb_gen_c_reader@@Base+0x21d9>
  409daf:	lea    rbx,[rip+0x2cec1]        # 436c77 <_IO_stdin_used@@Base+0x8c77>
  409db6:	mov    rdi,QWORD PTR [rsi+0x18]
  409dba:	mov    r15,rdx
  409dbd:	vzeroupper 
  409dc0:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409dc5:	mov    rsi,QWORD PTR [rsp+0x20]
  409dca:	cmp    WORD PTR [rsi+0x10],0x0
  409dcf:	jne    40a7d5 <__flatcc_fb_gen_c_reader@@Base+0x2225>
  409dd5:	mov    rdi,QWORD PTR [rsi+0x18]
  409dd9:	lea    rax,[rsp+0x140]
  409de1:	mov    rdx,rax
  409de4:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409de9:	mov    rax,QWORD PTR [r14+0x8]
  409ded:	mov    r8d,DWORD PTR [rax+0x8]
  409df1:	mov    r9,QWORD PTR [rax]
  409df4:	mov    rdx,QWORD PTR [rsp]
  409df8:	mov    rdi,QWORD PTR [rdx+0xd0]
  409dff:	xor    eax,eax
  409e01:	lea    rsi,[rip+0x2cf1b]        # 436d23 <_IO_stdin_used@@Base+0x8d23>
  409e08:	lea    rcx,[rsp+0x140]
  409e10:	push   rbx
  409e11:	push   r15
  409e13:	call   406170 <fprintf@plt>
  409e18:	add    rsp,0x10
  409e1c:	cmp    BYTE PTR [r14+0x70],0x0
  409e21:	jns    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  409e27:	jmp    40a3d1 <__flatcc_fb_gen_c_reader@@Base+0x1e21>
  409e2c:	nop    DWORD PTR [rax+0x0]
  409e30:	mov    rdi,QWORD PTR [r13+0x0]
  409e34:	xor    eax,eax
  409e36:	lea    rsi,[rip+0x2c836]        # 436673 <_IO_stdin_used@@Base+0x8673>
  409e3d:	lea    rdx,[rsp+0x40]
  409e42:	mov    ecx,ebx
  409e44:	mov    r8,r11
  409e47:	call   406170 <fprintf@plt>
  409e4c:	jmp    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  409e51:	mov    r12,QWORD PTR [rsp]
  409e55:	mov    rdi,QWORD PTR [r12+0xd0]
  409e5d:	mov    rcx,QWORD PTR [r14+0x88]
  409e64:	xor    eax,eax
  409e66:	lea    rsi,[rip+0x2c9b1]        # 43681e <_IO_stdin_used@@Base+0x881e>
  409e6d:	mov    rdx,r12
  409e70:	lea    r8,[rsp+0x40]
  409e75:	mov    QWORD PTR [rsp+0x8],rbx
  409e7a:	mov    r9d,ebx
  409e7d:	push   r15
  409e7f:	mov    QWORD PTR [rsp+0x20],r11
  409e84:	push   r11
  409e86:	call   406170 <fprintf@plt>
  409e8b:	add    rsp,0x10
  409e8f:	mov    rax,QWORD PTR [r12+0xe0]
  409e97:	cmp    DWORD PTR [rax+0x24],0x0
  409e9b:	jne    409ecc <__flatcc_fb_gen_c_reader@@Base+0x191c>
  409e9d:	cmp    BYTE PTR [r14+0x70],0x0
  409ea2:	jns    409ecc <__flatcc_fb_gen_c_reader@@Base+0x191c>
  409ea4:	mov    rdx,QWORD PTR [rsp]
  409ea8:	mov    rdi,QWORD PTR [rdx+0xd0]
  409eaf:	xor    eax,eax
  409eb1:	lea    rsi,[rip+0x2c993]        # 43684b <_IO_stdin_used@@Base+0x884b>
  409eb8:	lea    rcx,[rsp+0x40]
  409ebd:	mov    r8,QWORD PTR [rsp+0x8]
  409ec2:	mov    r9,QWORD PTR [rsp+0x18]
  409ec7:	call   406170 <fprintf@plt>
  409ecc:	cmp    BYTE PTR [r14+0x70],0x0
  409ed1:	lea    r12,[rip+0x364c3]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  409ed8:	jns    40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  409ede:	cmp    DWORD PTR [rsp+0x14],0x0
  409ee3:	je     409eff <__flatcc_fb_gen_c_reader@@Base+0x194f>
  409ee5:	mov    rcx,QWORD PTR [r13+0x0]
  409ee9:	mov    esi,0x42
  409eee:	mov    edx,0x1
  409ef3:	lea    rdi,[rip+0x2c430]        # 43632a <_IO_stdin_used@@Base+0x832a>
  409efa:	call   406210 <fwrite@plt>
  409eff:	mov    rbx,QWORD PTR [rsp]
  409f03:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f0a:	xor    eax,eax
  409f0c:	lea    rsi,[rip+0x2c963]        # 436876 <_IO_stdin_used@@Base+0x8876>
  409f13:	mov    rdx,rbx
  409f16:	lea    r15,[rsp+0x40]
  409f1b:	mov    rcx,r15
  409f1e:	mov    r8,QWORD PTR [rsp+0x8]
  409f23:	mov    r15,QWORD PTR [rsp+0x18]
  409f28:	mov    r9,r15
  409f2b:	call   406170 <fprintf@plt>
  409f30:	mov    rax,QWORD PTR [rbx+0xe0]
  409f37:	cmp    DWORD PTR [rax+0xa8],0x0
  409f3e:	je     409f65 <__flatcc_fb_gen_c_reader@@Base+0x19b5>
  409f40:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f47:	xor    eax,eax
  409f49:	lea    rsi,[rip+0x2c951]        # 4368a1 <_IO_stdin_used@@Base+0x88a1>
  409f50:	mov    rdx,rbx
  409f53:	lea    rcx,[rsp+0x40]
  409f58:	mov    r8,QWORD PTR [rsp+0x8]
  409f5d:	mov    r9,r15
  409f60:	call   406170 <fprintf@plt>
  409f65:	cmp    DWORD PTR [rsp+0x14],0x0
  409f6a:	jne    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  409f70:	mov    rbx,QWORD PTR [rsp]
  409f74:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f7b:	xor    eax,eax
  409f7d:	lea    rsi,[rip+0x2c948]        # 4368cc <_IO_stdin_used@@Base+0x88cc>
  409f84:	mov    rdx,rbx
  409f87:	lea    r15,[rsp+0x40]
  409f8c:	mov    rcx,r15
  409f8f:	mov    r8,QWORD PTR [rsp+0x8]
  409f94:	mov    r15,QWORD PTR [rsp+0x18]
  409f99:	mov    r9,r15
  409f9c:	call   406170 <fprintf@plt>
  409fa1:	mov    rdi,QWORD PTR [rbx+0xd0]
  409fa8:	xor    eax,eax
  409faa:	lea    rsi,[rip+0x2c94e]        # 4368ff <_IO_stdin_used@@Base+0x88ff>
  409fb1:	mov    rdx,rbx
  409fb4:	lea    rcx,[rsp+0x40]
  409fb9:	mov    r8,QWORD PTR [rsp+0x8]
  409fbe:	mov    r9,r15
  409fc1:	call   406170 <fprintf@plt>
  409fc6:	mov    rax,QWORD PTR [rbx+0xe0]
  409fcd:	jmp    40a1ce <__flatcc_fb_gen_c_reader@@Base+0x1c1e>
  409fd2:	mov    QWORD PTR [rsp+0x8],rbx
  409fd7:	mov    QWORD PTR [rsp+0x18],r11
  409fdc:	mov    edi,DWORD PTR [r14+0x18]
  409fe0:	cmp    edi,0x5
  409fe3:	lea    rbx,[rip+0x25555]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  409fea:	mov    r15,QWORD PTR [rsp]
  409fee:	cmove  rbx,r15
  409ff2:	lea    eax,[rdi-0x1]
  409ff5:	cmp    eax,0xb
  409ff8:	jae    40a49f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  409ffe:	cdqe   
  40a000:	lea    rcx,[rip+0x46ad9]        # 450ae0 <fb_value_set_deleted@@Base+0x6080>
  40a007:	mov    rcx,QWORD PTR [rcx+rax*8]
  40a00b:	mov    QWORD PTR [rsp+0x28],rcx
  40a010:	lea    rcx,[rip+0x46a09]        # 450a20 <fb_value_set_deleted@@Base+0x5fc0>
  40a017:	mov    rax,QWORD PTR [rcx+rax*8]
  40a01b:	mov    QWORD PTR [rsp+0x30],rax
  40a020:	lea    rsi,[r14+0x48]
  40a024:	lea    rax,[rsp+0x440]
  40a02c:	mov    rdx,rax
  40a02f:	call   40afe0 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  40a034:	mov    rdi,QWORD PTR [r15+0xd0]
  40a03b:	mov    rcx,QWORD PTR [r14+0x88]
  40a042:	mov    eax,0x0
  40a047:	lea    rsi,[rip+0x2c652]        # 4366a0 <_IO_stdin_used@@Base+0x86a0>
  40a04e:	mov    rdx,r15
  40a051:	lea    r8,[rsp+0x40]
  40a056:	mov    r9,QWORD PTR [rsp+0x8]
  40a05b:	lea    r10,[rsp+0x440]
  40a063:	push   r10
  40a065:	push   QWORD PTR [rsp+0x30]
  40a069:	push   rbx
  40a06a:	push   QWORD PTR [rsp+0x48]
  40a06e:	push   r15
  40a070:	push   QWORD PTR [rsp+0x40]
  40a074:	call   406170 <fprintf@plt>
  40a079:	add    rsp,0x30
  40a07d:	mov    rax,QWORD PTR [r15+0xe0]
  40a084:	cmp    DWORD PTR [rax+0x24],0x0
  40a088:	jne    40a095 <__flatcc_fb_gen_c_reader@@Base+0x1ae5>
  40a08a:	cmp    BYTE PTR [r14+0x70],0x0
  40a08f:	js     409aeb <__flatcc_fb_gen_c_reader@@Base+0x153b>
  40a095:	cmp    BYTE PTR [r14+0x70],0x0
  40a09a:	jns    40a3ca <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40a0a0:	cmp    DWORD PTR [rsp+0x14],0x0
  40a0a5:	je     40a0c1 <__flatcc_fb_gen_c_reader@@Base+0x1b11>
  40a0a7:	mov    rcx,QWORD PTR [r13+0x0]
  40a0ab:	mov    esi,0x42
  40a0b0:	mov    edx,0x1
  40a0b5:	lea    rdi,[rip+0x2c26e]        # 43632a <_IO_stdin_used@@Base+0x832a>
  40a0bc:	call   406210 <fwrite@plt>
  40a0c1:	mov    r15,QWORD PTR [rsp]
  40a0c5:	mov    rcx,QWORD PTR [r15+0xd0]
  40a0cc:	mov    esi,0x3d
  40a0d1:	mov    edx,0x1
  40a0d6:	lea    rdi,[rip+0x2c290]        # 43636d <_IO_stdin_used@@Base+0x836d>
  40a0dd:	call   406210 <fwrite@plt>
  40a0e2:	mov    rdi,QWORD PTR [r15+0xd0]
  40a0e9:	xor    eax,eax
  40a0eb:	lea    rsi,[rip+0x2c618]        # 43670a <_IO_stdin_used@@Base+0x870a>
  40a0f2:	mov    rdx,r15
  40a0f5:	lea    rcx,[rsp+0x40]
  40a0fa:	mov    r8,QWORD PTR [rsp+0x8]
  40a0ff:	mov    r9,QWORD PTR [rsp+0x18]
  40a104:	push   QWORD PTR [rsp+0x28]
  40a108:	push   rbx
  40a109:	call   406170 <fprintf@plt>
  40a10e:	add    rsp,0x10
  40a112:	mov    rax,QWORD PTR [r15+0xe0]
  40a119:	cmp    DWORD PTR [rax+0xa8],0x0
  40a120:	je     40a158 <__flatcc_fb_gen_c_reader@@Base+0x1ba8>
  40a122:	mov    rdi,QWORD PTR [r15+0xd0]
  40a129:	sub    rsp,0x8
  40a12d:	xor    eax,eax
  40a12f:	lea    rsi,[rip+0x2c605]        # 43673b <_IO_stdin_used@@Base+0x873b>
  40a136:	mov    rdx,r15
  40a139:	lea    rcx,[rsp+0x48]
  40a13e:	mov    r8,QWORD PTR [rsp+0x10]
  40a143:	mov    r9,QWORD PTR [rsp+0x20]
  40a148:	push   r15
  40a14a:	push   QWORD PTR [rsp+0x38]
  40a14e:	push   rbx
  40a14f:	call   406170 <fprintf@plt>
  40a154:	add    rsp,0x20
  40a158:	cmp    DWORD PTR [rsp+0x14],0x0
  40a15d:	jne    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a163:	mov    r15,QWORD PTR [rsp]
  40a167:	mov    rdi,QWORD PTR [r15+0xd0]
  40a16e:	xor    eax,eax
  40a170:	lea    rsi,[rip+0x2c602]        # 436779 <_IO_stdin_used@@Base+0x8779>
  40a177:	mov    rdx,r15
  40a17a:	lea    rcx,[rsp+0x40]
  40a17f:	mov    r8,QWORD PTR [rsp+0x8]
  40a184:	mov    r9,QWORD PTR [rsp+0x18]
  40a189:	push   QWORD PTR [rsp+0x28]
  40a18d:	push   rbx
  40a18e:	call   406170 <fprintf@plt>
  40a193:	add    rsp,0x10
  40a197:	mov    rdi,QWORD PTR [r15+0xd0]
  40a19e:	xor    eax,eax
  40a1a0:	lea    rsi,[rip+0x2c60b]        # 4367b2 <_IO_stdin_used@@Base+0x87b2>
  40a1a7:	mov    rdx,r15
  40a1aa:	lea    rcx,[rsp+0x40]
  40a1af:	mov    r8,QWORD PTR [rsp+0x8]
  40a1b4:	mov    r9,QWORD PTR [rsp+0x18]
  40a1b9:	push   QWORD PTR [rsp+0x28]
  40a1bd:	push   rbx
  40a1be:	call   406170 <fprintf@plt>
  40a1c3:	add    rsp,0x10
  40a1c7:	mov    rax,QWORD PTR [r15+0xe0]
  40a1ce:	mov    DWORD PTR [rsp+0x14],0x1
  40a1d6:	cmp    DWORD PTR [rax+0xa8],0x0
  40a1dd:	je     40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a1e3:	mov    rdi,QWORD PTR [r13+0x0]
  40a1e7:	xor    eax,eax
  40a1e9:	lea    rsi,[rip+0x2c2a9]        # 436499 <_IO_stdin_used@@Base+0x8499>
  40a1f0:	lea    rdx,[rsp+0x40]
  40a1f5:	mov    rcx,rdx
  40a1f8:	mov    r8,QWORD PTR [rsp+0x8]
  40a1fd:	mov    r9,QWORD PTR [rsp+0x18]
  40a202:	call   406170 <fprintf@plt>
  40a207:	jmp    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a20c:	mov    rdx,QWORD PTR [rsp]
  40a210:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a217:	mov    rcx,QWORD PTR [r14+0x88]
  40a21e:	sub    rsp,0x8
  40a222:	xor    eax,eax
  40a224:	lea    rsi,[rip+0x2c707]        # 436932 <_IO_stdin_used@@Base+0x8932>
  40a22b:	lea    r8,[rsp+0x48]
  40a230:	mov    r9d,ebx
  40a233:	push   r15
  40a235:	push   rdx
  40a236:	push   r11
  40a238:	jmp    40a3c1 <__flatcc_fb_gen_c_reader@@Base+0x1e11>
  40a23d:	mov    QWORD PTR [rsp+0x8],rbx
  40a242:	mov    rbx,r11
  40a245:	mov    rsi,QWORD PTR [r14+0x18]
  40a249:	mov    rdi,QWORD PTR [rsi+0x18]
  40a24d:	lea    rdx,[rsp+0x340]
  40a255:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a25a:	mov    rax,QWORD PTR [r14+0x18]
  40a25e:	movzx  eax,WORD PTR [rax+0x10]
  40a262:	cmp    eax,0x4
  40a265:	ja     40a66a <__flatcc_fb_gen_c_reader@@Base+0x20ba>
  40a26b:	movzx  eax,ax
  40a26e:	cmp    eax,0x2
  40a271:	je     40a66a <__flatcc_fb_gen_c_reader@@Base+0x20ba>
  40a277:	mov    rdi,QWORD PTR [r13+0x0]
  40a27b:	mov    r8,QWORD PTR [r14+0x88]
  40a282:	cmp    eax,0x4
  40a285:	mov    r10,rbx
  40a288:	jne    40a320 <__flatcc_fb_gen_c_reader@@Base+0x1d70>
  40a28e:	mov    eax,0x0
  40a293:	lea    rsi,[rip+0x2c893]        # 436b2d <_IO_stdin_used@@Base+0x8b2d>
  40a29a:	mov    rdx,QWORD PTR [rsp]
  40a29e:	mov    rcx,rdx
  40a2a1:	lea    r9,[rsp+0x40]
  40a2a6:	push   r15
  40a2a8:	lea    rbx,[rsp+0x348]
  40a2b0:	push   rbx
  40a2b1:	push   r10
  40a2b3:	jmp    40a37b <__flatcc_fb_gen_c_reader@@Base+0x1dcb>
  40a2b8:	mov    QWORD PTR [rsp+0x8],rbx
  40a2bd:	mov    QWORD PTR [rsp+0x18],r11
  40a2c2:	mov    rsi,QWORD PTR [r14+0x18]
  40a2c6:	mov    rdi,QWORD PTR [rsi+0x18]
  40a2ca:	lea    rbx,[rsp+0x340]
  40a2d2:	mov    rdx,rbx
  40a2d5:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a2da:	mov    rax,QWORD PTR [r14+0x18]
  40a2de:	movzx  ecx,WORD PTR [rax+0x10]
  40a2e2:	cmp    rcx,0x4
  40a2e6:	ja     40a6b3 <__flatcc_fb_gen_c_reader@@Base+0x2103>
  40a2ec:	lea    rdx,[rip+0x24fad]        # 42f2a0 <_IO_stdin_used@@Base+0x12a0>
  40a2f3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40a2f7:	add    rcx,rdx
  40a2fa:	jmp    rcx
  40a2fc:	mov    rdx,QWORD PTR [rsp]
  40a300:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a307:	mov    rcx,QWORD PTR [r14+0x88]
  40a30e:	sub    rsp,0x8
  40a312:	xor    eax,eax
  40a314:	lea    rsi,[rip+0x2c68e]        # 4369a9 <_IO_stdin_used@@Base+0x89a9>
  40a31b:	jmp    40a3b0 <__flatcc_fb_gen_c_reader@@Base+0x1e00>
  40a320:	sub    rsp,0x8
  40a324:	xor    eax,eax
  40a326:	lea    rsi,[rip+0x2c83b]        # 436b68 <_IO_stdin_used@@Base+0x8b68>
  40a32d:	mov    rdx,QWORD PTR [rsp+0x8]
  40a332:	mov    rcx,r8
  40a335:	lea    r8,[rsp+0x48]
  40a33a:	mov    r9,QWORD PTR [rsp+0x10]
  40a33f:	push   r15
  40a341:	lea    rbx,[rsp+0x350]
  40a349:	push   rbx
  40a34a:	push   r10
  40a34c:	jmp    40a3c1 <__flatcc_fb_gen_c_reader@@Base+0x1e11>
  40a34e:	mov    rdx,QWORD PTR [rsp]
  40a352:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a359:	mov    r8,QWORD PTR [r14+0x88]
  40a360:	mov    eax,0x0
  40a365:	lea    rsi,[rip+0x2c6f4]        # 436a60 <_IO_stdin_used@@Base+0x8a60>
  40a36c:	mov    rcx,rdx
  40a36f:	lea    r9,[rsp+0x40]
  40a374:	push   r15
  40a376:	push   rbx
  40a377:	push   QWORD PTR [rsp+0x28]
  40a37b:	push   QWORD PTR [rsp+0x20]
  40a37f:	call   406170 <fprintf@plt>
  40a384:	add    rsp,0x20
  40a388:	cmp    BYTE PTR [r14+0x70],0x0
  40a38d:	jns    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a38f:	jmp    40a3d1 <__flatcc_fb_gen_c_reader@@Base+0x1e21>
  40a391:	mov    rdx,QWORD PTR [rsp]
  40a395:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a39c:	mov    rcx,QWORD PTR [r14+0x88]
  40a3a3:	sub    rsp,0x8
  40a3a7:	xor    eax,eax
  40a3a9:	lea    rsi,[rip+0x2c5bf]        # 43696f <_IO_stdin_used@@Base+0x896f>
  40a3b0:	lea    r8,[rsp+0x48]
  40a3b5:	mov    r9,QWORD PTR [rsp+0x10]
  40a3ba:	push   r15
  40a3bc:	push   rbx
  40a3bd:	push   QWORD PTR [rsp+0x30]
  40a3c1:	call   406170 <fprintf@plt>
  40a3c6:	add    rsp,0x20
  40a3ca:	cmp    BYTE PTR [r14+0x70],0x0
  40a3cf:	jns    40a400 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a3d1:	mov    rcx,QWORD PTR [r13+0x0]
  40a3d5:	mov    esi,0x54
  40a3da:	mov    edx,0x1
  40a3df:	lea    rdi,[rip+0x2c113]        # 4364f9 <_IO_stdin_used@@Base+0x84f9>
  40a3e6:	call   406210 <fwrite@plt>
  40a3eb:	mov    DWORD PTR [rsp+0x14],0x1
  40a3f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3fd:	nop    DWORD PTR [rax]
  40a400:	mov    r14,QWORD PTR [r14]
  40a403:	test   r14,r14
  40a406:	jne    409b80 <__flatcc_fb_gen_c_reader@@Base+0x15d0>
  40a40c:	mov    rbx,QWORD PTR [rsp+0x20]
  40a411:	lea    r14,[rsp+0x40]
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	mov    rbx,QWORD PTR [rbx]
  40a423:	test   rbx,rbx
  40a426:	jne    4096b0 <__flatcc_fb_gen_c_reader@@Base+0x1100>
  40a42c:	mov    rbx,QWORD PTR [rsp]
  40a430:	mov    rsi,QWORD PTR [rbx+0xd0]
  40a437:	mov    edi,0xa
  40a43c:	call   406110 <fputc@plt>
  40a441:	mov    rax,QWORD PTR [rbx+0xe0]
  40a448:	cmp    DWORD PTR [rax+0xac],0x0
  40a44f:	je     40a46b <__flatcc_fb_gen_c_reader@@Base+0x1ebb>
  40a451:	mov    rcx,QWORD PTR [r13+0x0]
  40a455:	lea    rdi,[rip+0x2ae7f]        # 4352db <_IO_stdin_used@@Base+0x72db>
  40a45c:	mov    esi,0x24
  40a461:	mov    edx,0x1
  40a466:	call   406210 <fwrite@plt>
  40a46b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a472:	mov    rax,QWORD PTR [rbx+0xd8]
  40a479:	mov    rdx,QWORD PTR [rax+0x118]
  40a480:	lea    rsi,[rip+0x2c8c9]        # 436d50 <_IO_stdin_used@@Base+0x8d50>
  40a487:	xor    eax,eax
  40a489:	call   406170 <fprintf@plt>
  40a48e:	xor    eax,eax
  40a490:	lea    rsp,[rbp-0x28]
  40a494:	pop    rbx
  40a495:	pop    r12
  40a497:	pop    r13
  40a499:	pop    r14
  40a49b:	pop    r15
  40a49d:	pop    rbp
  40a49e:	ret    
  40a49f:	mov    rax,QWORD PTR [rip+0x46b52]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a4a6:	mov    rdi,QWORD PTR [rax]
  40a4a9:	lea    rsi,[rip+0x24f74]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a4b0:	lea    rbx,[rip+0x2b71f]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40a4b7:	lea    r8,[rip+0x2b77b]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40a4be:	mov    ecx,0x8d
  40a4c3:	xor    eax,eax
  40a4c5:	mov    rdx,rbx
  40a4c8:	call   406170 <fprintf@plt>
  40a4cd:	lea    rdi,[rip+0x35eb7]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a4d4:	lea    rcx,[rip+0x2b795]        # 435c70 <_IO_stdin_used@@Base+0x7c70>
  40a4db:	mov    edx,0x8d
  40a4e0:	mov    rsi,rbx
  40a4e3:	call   4060f0 <__assert_fail@plt>
  40a4e8:	mov    rax,QWORD PTR [rsp+0x28]
  40a4ed:	mov    rdi,QWORD PTR [rax]
  40a4f0:	lea    rsi,[rip+0x2bb92]        # 436089 <_IO_stdin_used@@Base+0x8089>
  40a4f7:	lea    rdx,[rip+0x2bb93]        # 436091 <_IO_stdin_used@@Base+0x8091>
  40a4fe:	xor    eax,eax
  40a500:	call   406170 <fprintf@plt>
  40a505:	mov    rax,QWORD PTR [rip+0x46aec]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a50c:	mov    rdi,QWORD PTR [rax]
  40a50f:	lea    rsi,[rip+0x24f0e]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a516:	lea    rbx,[rip+0x24f12]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a51d:	lea    r8,[rip+0x2b715]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40a524:	mov    ecx,0x405
  40a529:	xor    eax,eax
  40a52b:	mov    rdx,rbx
  40a52e:	call   406170 <fprintf@plt>
  40a533:	lea    rdi,[rip+0x35e51]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a53a:	lea    rcx,[rip+0x2b83d]        # 435d7e <_IO_stdin_used@@Base+0x7d7e>
  40a541:	mov    edx,0x405
  40a546:	mov    rsi,rbx
  40a549:	call   4060f0 <__assert_fail@plt>
  40a54e:	mov    rax,QWORD PTR [rip+0x46aa3]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a555:	mov    rdi,QWORD PTR [rax]
  40a558:	lea    rsi,[rip+0x24ec5]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a55f:	lea    rbx,[rip+0x24ec9]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a566:	lea    r8,[rip+0x2c632]        # 436b9f <_IO_stdin_used@@Base+0x8b9f>
  40a56d:	mov    ecx,0x63f
  40a572:	xor    eax,eax
  40a574:	mov    rdx,rbx
  40a577:	call   406170 <fprintf@plt>
  40a57c:	lea    rdi,[rip+0x35e08]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a583:	lea    rcx,[rip+0x2c010]        # 43659a <_IO_stdin_used@@Base+0x859a>
  40a58a:	mov    edx,0x63f
  40a58f:	mov    rsi,rbx
  40a592:	call   4060f0 <__assert_fail@plt>
  40a597:	lea    rdi,[rip+0x2ba66]        # 436004 <_IO_stdin_used@@Base+0x8004>
  40a59e:	lea    rsi,[rip+0x24e8a]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a5a5:	lea    rcx,[rip+0x2b7d2]        # 435d7e <_IO_stdin_used@@Base+0x7d7e>
  40a5ac:	mov    edx,0x3fa
  40a5b1:	call   4060f0 <__assert_fail@plt>
  40a5b6:	mov    rax,QWORD PTR [rip+0x46a3b]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a5bd:	mov    rdi,QWORD PTR [rax]
  40a5c0:	lea    rsi,[rip+0x24e5d]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a5c7:	lea    rbx,[rip+0x2b608]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40a5ce:	lea    r8,[rip+0x2b664]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40a5d5:	mov    ecx,0x60
  40a5da:	xor    eax,eax
  40a5dc:	mov    rdx,rbx
  40a5df:	call   406170 <fprintf@plt>
  40a5e4:	lea    rdi,[rip+0x35da0]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a5eb:	lea    rcx,[rip+0x2bf77]        # 436569 <_IO_stdin_used@@Base+0x8569>
  40a5f2:	mov    edx,0x60
  40a5f7:	mov    rsi,rbx
  40a5fa:	call   4060f0 <__assert_fail@plt>
  40a5ff:	lea    rdi,[rip+0x2b758]        # 435d5e <_IO_stdin_used@@Base+0x7d5e>
  40a606:	lea    rsi,[rip+0x24e22]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a60d:	lea    rcx,[rip+0x2b76a]        # 435d7e <_IO_stdin_used@@Base+0x7d7e>
  40a614:	mov    edx,0x3a8
  40a619:	vzeroupper 
  40a61c:	call   4060f0 <__assert_fail@plt>
  40a621:	mov    rax,QWORD PTR [rip+0x469d0]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a628:	mov    rdi,QWORD PTR [rax]
  40a62b:	lea    rsi,[rip+0x24df2]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a632:	lea    rbx,[rip+0x24df6]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a639:	lea    r8,[rip+0x24e59]        # 42f499 <_IO_stdin_used@@Base+0x1499>
  40a640:	mov    ecx,0x688
  40a645:	xor    eax,eax
  40a647:	mov    rdx,rbx
  40a64a:	call   406170 <fprintf@plt>
  40a64f:	lea    rdi,[rip+0x35d35]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a656:	lea    rcx,[rip+0x24e68]        # 42f4c5 <_IO_stdin_used@@Base+0x14c5>
  40a65d:	mov    edx,0x688
  40a662:	mov    rsi,rbx
  40a665:	call   4060f0 <__assert_fail@plt>
  40a66a:	mov    rax,QWORD PTR [rip+0x46987]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a671:	mov    rdi,QWORD PTR [rax]
  40a674:	lea    rsi,[rip+0x24da9]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a67b:	lea    rbx,[rip+0x24dad]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a682:	lea    r8,[rip+0x2c454]        # 436add <_IO_stdin_used@@Base+0x8add>
  40a689:	mov    ecx,0x630
  40a68e:	xor    eax,eax
  40a690:	mov    rdx,rbx
  40a693:	call   406170 <fprintf@plt>
  40a698:	lea    rdi,[rip+0x35cec]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a69f:	lea    rcx,[rip+0x2bef4]        # 43659a <_IO_stdin_used@@Base+0x859a>
  40a6a6:	mov    edx,0x630
  40a6ab:	mov    rsi,rbx
  40a6ae:	call   4060f0 <__assert_fail@plt>
  40a6b3:	mov    rax,QWORD PTR [rip+0x4693e]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a6ba:	mov    rdi,QWORD PTR [rax]
  40a6bd:	lea    rsi,[rip+0x24d60]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a6c4:	lea    rbx,[rip+0x24d64]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a6cb:	lea    r8,[rip+0x2c3c2]        # 436a94 <_IO_stdin_used@@Base+0x8a94>
  40a6d2:	mov    ecx,0x620
  40a6d7:	xor    eax,eax
  40a6d9:	mov    rdx,rbx
  40a6dc:	call   406170 <fprintf@plt>
  40a6e1:	lea    rdi,[rip+0x35ca3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a6e8:	lea    rcx,[rip+0x2beab]        # 43659a <_IO_stdin_used@@Base+0x859a>
  40a6ef:	mov    edx,0x620
  40a6f4:	mov    rsi,rbx
  40a6f7:	call   4060f0 <__assert_fail@plt>
  40a6fc:	lea    rdi,[rip+0x2b6b0]        # 435db3 <_IO_stdin_used@@Base+0x7db3>
  40a703:	lea    rsi,[rip+0x24d25]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a70a:	lea    rcx,[rip+0x2b66d]        # 435d7e <_IO_stdin_used@@Base+0x7d7e>
  40a711:	mov    edx,0x3a9
  40a716:	vzeroupper 
  40a719:	call   4060f0 <__assert_fail@plt>
  40a71e:	lea    rdi,[rip+0x2b6ae]        # 435dd3 <_IO_stdin_used@@Base+0x7dd3>
  40a725:	lea    rsi,[rip+0x24d03]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a72c:	lea    rcx,[rip+0x2b64b]        # 435d7e <_IO_stdin_used@@Base+0x7d7e>
  40a733:	mov    edx,0x3aa
  40a738:	vzeroupper 
  40a73b:	call   4060f0 <__assert_fail@plt>
  40a740:	mov    rax,QWORD PTR [rip+0x468b1]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a747:	mov    rdi,QWORD PTR [rax]
  40a74a:	lea    rsi,[rip+0x24cd3]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a751:	lea    rbx,[rip+0x2b47e]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40a758:	lea    r8,[rip+0x2b4da]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40a75f:	mov    ecx,0xba
  40a764:	xor    eax,eax
  40a766:	mov    rdx,rbx
  40a769:	call   406170 <fprintf@plt>
  40a76e:	lea    rdi,[rip+0x35c16]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a775:	lea    rcx,[rip+0x2c4be]        # 436c3a <_IO_stdin_used@@Base+0x8c3a>
  40a77c:	mov    edx,0xba
  40a781:	mov    rsi,rbx
  40a784:	call   4060f0 <__assert_fail@plt>
  40a789:	mov    rax,QWORD PTR [rip+0x46868]        # 450ff8 <stderr@GLIBC_2.2.5>
  40a790:	mov    rdi,QWORD PTR [rax]
  40a793:	lea    rsi,[rip+0x24c8a]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40a79a:	lea    rbx,[rip+0x24c8e]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a7a1:	lea    r8,[rip+0x2c4d7]        # 436c7f <_IO_stdin_used@@Base+0x8c7f>
  40a7a8:	mov    ecx,0x53b
  40a7ad:	xor    eax,eax
  40a7af:	mov    rdx,rbx
  40a7b2:	vzeroupper 
  40a7b5:	call   406170 <fprintf@plt>
  40a7ba:	lea    rdi,[rip+0x35bca]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40a7c1:	lea    rcx,[rip+0x2c4eb]        # 436cb3 <_IO_stdin_used@@Base+0x8cb3>
  40a7c8:	mov    edx,0x53b
  40a7cd:	mov    rsi,rbx
  40a7d0:	call   4060f0 <__assert_fail@plt>
  40a7d5:	lea    rdi,[rip+0x2c528]        # 436d04 <_IO_stdin_used@@Base+0x8d04>
  40a7dc:	lea    rsi,[rip+0x24c4c]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a7e3:	lea    rcx,[rip+0x2c4c9]        # 436cb3 <_IO_stdin_used@@Base+0x8cb3>
  40a7ea:	mov    edx,0x53f
  40a7ef:	call   4060f0 <__assert_fail@plt>
  40a7f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7fe:	xchg   ax,ax
  40a800:	push   rbp
  40a801:	mov    rbp,rsp
  40a804:	push   r15
  40a806:	push   r14
  40a808:	push   rbx
  40a809:	and    rsp,0xffffffffffffffe0
  40a80d:	sub    rsp,0x100
  40a814:	vxorps xmm0,xmm0,xmm0
  40a818:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40a821:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40a82a:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40a833:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40a839:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40a83f:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40a845:	vmovaps YMMWORD PTR [rsp],ymm0
  40a84a:	mov    QWORD PTR [rsp+0xe0],0x0
  40a856:	movzx  eax,WORD PTR [rsi+0x10]
  40a85a:	cmp    eax,0x2
  40a85d:	jae    40a984 <__flatcc_fb_gen_c_reader@@Base+0x23d4>
  40a863:	mov    rbx,rsi
  40a866:	mov    r15,rdi
  40a869:	mov    rdi,QWORD PTR [rsi+0x18]
  40a86d:	mov    rdx,rsp
  40a870:	vzeroupper 
  40a873:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a878:	movzx  eax,WORD PTR [rbx+0x10]
  40a87c:	cmp    eax,0x1
  40a87f:	jne    40a8a8 <__flatcc_fb_gen_c_reader@@Base+0x22f8>
  40a881:	cmp    QWORD PTR [rbx+0xb8],0x0
  40a889:	mov    rdi,QWORD PTR [r15+0xd0]
  40a890:	je     40a8f9 <__flatcc_fb_gen_c_reader@@Base+0x2349>
  40a892:	lea    rsi,[rip+0x2ae67]        # 435700 <_IO_stdin_used@@Base+0x7700>
  40a899:	mov    rdx,rsp
  40a89c:	xor    eax,eax
  40a89e:	mov    rcx,rdx
  40a8a1:	call   406170 <fprintf@plt>
  40a8a6:	jmp    40a90a <__flatcc_fb_gen_c_reader@@Base+0x235a>
  40a8a8:	mov    rdi,QWORD PTR [r15+0xd0]
  40a8af:	lea    rsi,[rip+0x2aee9]        # 43579f <_IO_stdin_used@@Base+0x779f>
  40a8b6:	mov    rbx,rsp
  40a8b9:	xor    eax,eax
  40a8bb:	mov    rdx,rbx
  40a8be:	mov    rcx,rbx
  40a8c1:	call   406170 <fprintf@plt>
  40a8c6:	mov    rdi,QWORD PTR [r15+0xd0]
  40a8cd:	lea    rsi,[rip+0x2aef7]        # 4357cb <_IO_stdin_used@@Base+0x77cb>
  40a8d4:	xor    eax,eax
  40a8d6:	mov    rdx,r15
  40a8d9:	mov    rcx,rbx
  40a8dc:	call   406170 <fprintf@plt>
  40a8e1:	mov    rdi,QWORD PTR [r15+0xd0]
  40a8e8:	lea    rsi,[rip+0x2af02]        # 4357f1 <_IO_stdin_used@@Base+0x77f1>
  40a8ef:	xor    eax,eax
  40a8f1:	mov    rdx,r15
  40a8f4:	mov    rcx,rbx
  40a8f7:	jmp    40a974 <__flatcc_fb_gen_c_reader@@Base+0x23c4>
  40a8f9:	lea    rsi,[rip+0x2add9]        # 4356d9 <_IO_stdin_used@@Base+0x76d9>
  40a900:	mov    rdx,rsp
  40a903:	xor    eax,eax
  40a905:	call   406170 <fprintf@plt>
  40a90a:	mov    rdi,QWORD PTR [r15+0xd0]
  40a911:	lea    rsi,[rip+0x2ae01]        # 435719 <_IO_stdin_used@@Base+0x7719>
  40a918:	mov    r14,rsp
  40a91b:	xor    eax,eax
  40a91d:	mov    rdx,r14
  40a920:	mov    rcx,r14
  40a923:	call   406170 <fprintf@plt>
  40a928:	mov    rdi,QWORD PTR [r15+0xd0]
  40a92f:	lea    rsi,[rip+0x2ae05]        # 43573b <_IO_stdin_used@@Base+0x773b>
  40a936:	xor    eax,eax
  40a938:	mov    rdx,r14
  40a93b:	mov    rcx,r14
  40a93e:	call   406170 <fprintf@plt>
  40a943:	mov    rdi,QWORD PTR [r15+0xd0]
  40a94a:	lea    rsi,[rip+0x2ae0e]        # 43575f <_IO_stdin_used@@Base+0x775f>
  40a951:	xor    eax,eax
  40a953:	mov    rdx,r14
  40a956:	mov    rcx,r14
  40a959:	call   406170 <fprintf@plt>
  40a95e:	mov    rdi,QWORD PTR [r15+0xd0]
  40a965:	lea    rsi,[rip+0x2ae12]        # 43577e <_IO_stdin_used@@Base+0x777e>
  40a96c:	xor    eax,eax
  40a96e:	mov    rdx,r14
  40a971:	mov    rcx,r14
  40a974:	call   406170 <fprintf@plt>
  40a979:	lea    rsp,[rbp-0x18]
  40a97d:	pop    rbx
  40a97e:	pop    r14
  40a980:	pop    r15
  40a982:	pop    rbp
  40a983:	ret    
  40a984:	lea    rdi,[rip+0x2acd1]        # 43565c <_IO_stdin_used@@Base+0x765c>
  40a98b:	lea    rsi,[rip+0x24a9d]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40a992:	lea    rcx,[rip+0x2ad05]        # 43569e <_IO_stdin_used@@Base+0x769e>
  40a999:	mov    edx,0x35f
  40a99e:	vzeroupper 
  40a9a1:	call   4060f0 <__assert_fail@plt>
  40a9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9b0:	push   rbp
  40a9b1:	mov    rbp,rsp
  40a9b4:	push   r15
  40a9b6:	push   r14
  40a9b8:	push   r13
  40a9ba:	push   r12
  40a9bc:	push   rbx
  40a9bd:	and    rsp,0xffffffffffffffe0
  40a9c1:	sub    rsp,0x1c0
  40a9c8:	vxorps xmm0,xmm0,xmm0
  40a9cc:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40a9d5:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40a9de:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40a9e7:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40a9f0:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40a9f9:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40a9ff:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40aa05:	mov    QWORD PTR [rsp+0x120],0x0
  40aa11:	mov    eax,DWORD PTR [rsi+0x10]
  40aa14:	lea    ecx,[rax-0x3]
  40aa17:	movzx  ecx,cx
  40aa1a:	cmp    ecx,0x2
  40aa1d:	jae    40af4a <__flatcc_fb_gen_c_reader@@Base+0x299a>
  40aa23:	mov    rbx,rsi
  40aa26:	movzx  ecx,WORD PTR [rsi+0x58]
  40aa2a:	cmp    ecx,0x8
  40aa2d:	jne    40af6c <__flatcc_fb_gen_c_reader@@Base+0x29bc>
  40aa33:	mov    r13,rdi
  40aa36:	mov    ecx,DWORD PTR [rbx+0x48]
  40aa39:	cmp    ecx,0x5
  40aa3c:	lea    r12,[rip+0x24afc]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40aa43:	cmove  r12,rdi
  40aa47:	add    ecx,0xffffffff
  40aa4a:	cmp    ecx,0xb
  40aa4d:	jae    40af8e <__flatcc_fb_gen_c_reader@@Base+0x29de>
  40aa53:	movsxd rcx,ecx
  40aa56:	lea    rdx,[rip+0x46083]        # 450ae0 <fb_value_set_deleted@@Base+0x6080>
  40aa5d:	mov    rcx,QWORD PTR [rdx+rcx*8]
  40aa61:	mov    QWORD PTR [rsp+0x38],rcx
  40aa66:	mov    ecx,DWORD PTR [rbx+0xb8]
  40aa6c:	shl    ecx,0x3
  40aa6f:	mov    DWORD PTR [rsp+0x14],ecx
  40aa73:	movzx  eax,ax
  40aa76:	mov    DWORD PTR [rsp+0x10],eax
  40aa7a:	cmp    eax,0x3
  40aa7d:	lea    rax,[rip+0x2aeb3]        # 435937 <_IO_stdin_used@@Base+0x7937>
  40aa84:	lea    rcx,[rip+0x2b5cf]        # 43605a <_IO_stdin_used@@Base+0x805a>
  40aa8b:	cmovne rcx,rax
  40aa8f:	mov    QWORD PTR [rsp+0x20],rcx
  40aa94:	mov    rdi,QWORD PTR [rbx+0x18]
  40aa98:	lea    rdx,[rsp+0x40]
  40aa9d:	mov    rsi,rbx
  40aaa0:	vzeroupper 
  40aaa3:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40aaa8:	mov    r14,QWORD PTR [rbx+0x40]
  40aaac:	lea    r15,[r13+0xd0]
  40aab3:	test   r14,r14
  40aab6:	mov    QWORD PTR [rsp+0x18],rbx
  40aabb:	je     40aba0 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40aac1:	mov    QWORD PTR [rsp+0x28],r12
  40aac6:	mov    QWORD PTR [rsp+0x30],r13
  40aacb:	mov    rax,QWORD PTR [r14+0x8]
  40aacf:	cmp    QWORD PTR [rax+0x10],0x0
  40aad4:	je     40aaee <__flatcc_fb_gen_c_reader@@Base+0x253e>
  40aad6:	mov    rdi,QWORD PTR [r15]
  40aad9:	lea    rsi,[rip+0x2b1bf]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  40aae0:	lea    rdx,[rip+0x24a58]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40aae7:	xor    eax,eax
  40aae9:	call   406170 <fprintf@plt>
  40aaee:	mov    rdi,QWORD PTR [r15]
  40aaf1:	mov    rax,QWORD PTR [r14+0x8]
  40aaf5:	mov    edx,DWORD PTR [rax+0x8]
  40aaf8:	mov    rcx,QWORD PTR [rax]
  40aafb:	lea    rsi,[rip+0x35899]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  40ab02:	xor    eax,eax
  40ab04:	call   406170 <fprintf@plt>
  40ab09:	mov    r12,QWORD PTR [r14]
  40ab0c:	test   r12,r12
  40ab0f:	je     40ab78 <__flatcc_fb_gen_c_reader@@Base+0x25c8>
  40ab11:	mov    rax,QWORD PTR [r14+0x8]
  40ab15:	mov    rax,QWORD PTR [rax+0x10]
  40ab19:	lea    rbx,[rip+0x3587b]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  40ab20:	lea    r13,[rip+0x2b17f]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  40ab27:	lea    r14,[rip+0x24a11]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40ab2e:	xchg   ax,ax
  40ab30:	mov    rcx,QWORD PTR [r12+0x8]
  40ab35:	cmp    rax,QWORD PTR [rcx+0x10]
  40ab39:	je     40ab4b <__flatcc_fb_gen_c_reader@@Base+0x259b>
  40ab3b:	mov    rdi,QWORD PTR [r15]
  40ab3e:	xor    eax,eax
  40ab40:	mov    rsi,r13
  40ab43:	mov    rdx,r14
  40ab46:	call   406170 <fprintf@plt>
  40ab4b:	mov    rdi,QWORD PTR [r15]
  40ab4e:	mov    rax,QWORD PTR [r12+0x8]
  40ab53:	mov    edx,DWORD PTR [rax+0x8]
  40ab56:	mov    rcx,QWORD PTR [rax]
  40ab59:	xor    eax,eax
  40ab5b:	mov    rsi,rbx
  40ab5e:	call   406170 <fprintf@plt>
  40ab63:	mov    rax,QWORD PTR [r12+0x8]
  40ab68:	mov    rcx,QWORD PTR [r12]
  40ab6c:	mov    rax,QWORD PTR [rax+0x10]
  40ab70:	mov    r12,rcx
  40ab73:	test   rcx,rcx
  40ab76:	jne    40ab30 <__flatcc_fb_gen_c_reader@@Base+0x2580>
  40ab78:	mov    rcx,QWORD PTR [r15]
  40ab7b:	lea    rdi,[rip+0x39cea]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  40ab82:	mov    esi,0x4
  40ab87:	mov    edx,0x1
  40ab8c:	call   406210 <fwrite@plt>
  40ab91:	mov    rbx,QWORD PTR [rsp+0x18]
  40ab96:	mov    r13,QWORD PTR [rsp+0x30]
  40ab9b:	mov    r12,QWORD PTR [rsp+0x28]
  40aba0:	mov    rdi,QWORD PTR [r13+0xd0]
  40aba7:	lea    rsi,[rip+0x2ad94]        # 435942 <_IO_stdin_used@@Base+0x7942>
  40abae:	lea    r14,[rsp+0x40]
  40abb3:	xor    eax,eax
  40abb5:	mov    rdx,r12
  40abb8:	mov    rcx,QWORD PTR [rsp+0x38]
  40abbd:	mov    r8,r14
  40abc0:	mov    r12,QWORD PTR [rsp+0x20]
  40abc5:	mov    r9,r12
  40abc8:	call   406170 <fprintf@plt>
  40abcd:	mov    rdi,QWORD PTR [r13+0xd0]
  40abd4:	mov    eax,DWORD PTR [rsp+0x14]
  40abd8:	mov    DWORD PTR [rsp],eax
  40abdb:	lea    rsi,[rip+0x2ad77]        # 435959 <_IO_stdin_used@@Base+0x7959>
  40abe2:	xor    eax,eax
  40abe4:	mov    rdx,r13
  40abe7:	mov    rcx,r14
  40abea:	mov    r8,r14
  40abed:	mov    r9,r12
  40abf0:	call   406170 <fprintf@plt>
  40abf5:	cmp    DWORD PTR [rsp+0x10],0x3
  40abfa:	je     40ac1c <__flatcc_fb_gen_c_reader@@Base+0x266c>
  40abfc:	mov    rdi,QWORD PTR [r13+0xd0]
  40ac03:	lea    rsi,[rip+0x2ad79]        # 435983 <_IO_stdin_used@@Base+0x7983>
  40ac0a:	lea    r8,[rsp+0x40]
  40ac0f:	xor    eax,eax
  40ac11:	mov    rdx,r13
  40ac14:	mov    rcx,r13
  40ac17:	call   406170 <fprintf@plt>
  40ac1c:	mov    r13,QWORD PTR [rbx+0x28]
  40ac20:	test   r13,r13
  40ac23:	je     40ad5a <__flatcc_fb_gen_c_reader@@Base+0x27aa>
  40ac29:	lea    r14,[rip+0x3576b]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  40ac30:	mov    r12,QWORD PTR [r13+0x68]
  40ac34:	test   r12,r12
  40ac37:	je     40acf5 <__flatcc_fb_gen_c_reader@@Base+0x2745>
  40ac3d:	mov    rax,QWORD PTR [r12+0x8]
  40ac42:	cmp    QWORD PTR [rax+0x10],0x0
  40ac47:	je     40ac61 <__flatcc_fb_gen_c_reader@@Base+0x26b1>
  40ac49:	mov    rdi,QWORD PTR [r15]
  40ac4c:	xor    eax,eax
  40ac4e:	lea    rsi,[rip+0x2b04a]        # 435c9f <_IO_stdin_used@@Base+0x7c9f>
  40ac55:	lea    rdx,[rip+0x248e3]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40ac5c:	call   406170 <fprintf@plt>
  40ac61:	mov    rdi,QWORD PTR [r15]
  40ac64:	mov    rax,QWORD PTR [r12+0x8]
  40ac69:	mov    edx,DWORD PTR [rax+0x8]
  40ac6c:	mov    rcx,QWORD PTR [rax]
  40ac6f:	xor    eax,eax
  40ac71:	mov    rsi,r14
  40ac74:	call   406170 <fprintf@plt>
  40ac79:	mov    rbx,QWORD PTR [r12]
  40ac7d:	test   rbx,rbx
  40ac80:	je     40acdc <__flatcc_fb_gen_c_reader@@Base+0x272c>
  40ac82:	mov    rax,QWORD PTR [r12+0x8]
  40ac87:	mov    rax,QWORD PTR [rax+0x10]
  40ac8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac90:	mov    rcx,QWORD PTR [rbx+0x8]
  40ac94:	cmp    rax,QWORD PTR [rcx+0x10]
  40ac98:	je     40acb2 <__flatcc_fb_gen_c_reader@@Base+0x2702>
  40ac9a:	mov    rdi,QWORD PTR [r15]
  40ac9d:	xor    eax,eax
  40ac9f:	lea    rsi,[rip+0x2b000]        # 435ca6 <_IO_stdin_used@@Base+0x7ca6>
  40aca6:	lea    rdx,[rip+0x24892]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40acad:	call   406170 <fprintf@plt>
  40acb2:	mov    rdi,QWORD PTR [r15]
  40acb5:	mov    rax,QWORD PTR [rbx+0x8]
  40acb9:	mov    edx,DWORD PTR [rax+0x8]
  40acbc:	mov    rcx,QWORD PTR [rax]
  40acbf:	xor    eax,eax
  40acc1:	mov    rsi,r14
  40acc4:	call   406170 <fprintf@plt>
  40acc9:	mov    rax,QWORD PTR [rbx+0x8]
  40accd:	mov    rcx,QWORD PTR [rbx]
  40acd0:	mov    rax,QWORD PTR [rax+0x10]
  40acd4:	mov    rbx,rcx
  40acd7:	test   rcx,rcx
  40acda:	jne    40ac90 <__flatcc_fb_gen_c_reader@@Base+0x26e0>
  40acdc:	mov    rcx,QWORD PTR [r15]
  40acdf:	mov    esi,0x4
  40ace4:	mov    edx,0x1
  40ace9:	lea    rdi,[rip+0x39b7c]        # 44486c <_IO_stdin_used@@Base+0x1686c>
  40acf0:	call   406210 <fwrite@plt>
  40acf5:	mov    rax,QWORD PTR [r13+0x8]
  40acf9:	mov    ecx,DWORD PTR [rax+0x8]
  40acfc:	mov    DWORD PTR [rsp+0x14],ecx
  40ad00:	mov    rbx,QWORD PTR [rax]
  40ad03:	mov    rax,QWORD PTR [rsp+0x18]
  40ad08:	mov    edi,DWORD PTR [rax+0x48]
  40ad0b:	lea    rsi,[r13+0x48]
  40ad0f:	lea    r12,[rsp+0x140]
  40ad17:	mov    rdx,r12
  40ad1a:	call   40afe0 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  40ad1f:	mov    rdi,QWORD PTR [r15]
  40ad22:	mov    QWORD PTR [rsp+0x8],r12
  40ad27:	mov    rax,QWORD PTR [rsp+0x20]
  40ad2c:	mov    QWORD PTR [rsp],rax
  40ad30:	xor    eax,eax
  40ad32:	lea    rsi,[rip+0x2ac64]        # 43599d <_IO_stdin_used@@Base+0x799d>
  40ad39:	lea    rdx,[rsp+0x40]
  40ad3e:	mov    ecx,DWORD PTR [rsp+0x14]
  40ad42:	mov    r8,rbx
  40ad45:	mov    r9,rdx
  40ad48:	call   406170 <fprintf@plt>
  40ad4d:	mov    r13,QWORD PTR [r13+0x0]
  40ad51:	test   r13,r13
  40ad54:	jne    40ac30 <__flatcc_fb_gen_c_reader@@Base+0x2680>
  40ad5a:	mov    rsi,QWORD PTR [r15]
  40ad5d:	mov    edi,0xa
  40ad62:	call   406110 <fputc@plt>
  40ad67:	mov    rdi,QWORD PTR [r15]
  40ad6a:	cmp    DWORD PTR [rsp+0x10],0x3
  40ad6f:	je     40ad98 <__flatcc_fb_gen_c_reader@@Base+0x27e8>
  40ad71:	lea    rsi,[rip+0x2ac44]        # 4359bc <_IO_stdin_used@@Base+0x79bc>
  40ad78:	lea    rdx,[rsp+0x40]
  40ad7d:	xor    eax,eax
  40ad7f:	mov    rcx,rdx
  40ad82:	call   406170 <fprintf@plt>
  40ad87:	mov    rcx,QWORD PTR [r15]
  40ad8a:	lea    rdi,[rip+0x3a09f]        # 444e30 <_IO_stdin_used@@Base+0x16e30>
  40ad91:	mov    esi,0x14
  40ad96:	jmp    40adbd <__flatcc_fb_gen_c_reader@@Base+0x280d>
  40ad98:	lea    rsi,[rip+0x2ac5d]        # 4359fc <_IO_stdin_used@@Base+0x79fc>
  40ad9f:	lea    rdx,[rsp+0x40]
  40ada4:	xor    eax,eax
  40ada6:	mov    rcx,rdx
  40ada9:	call   406170 <fprintf@plt>
  40adae:	mov    rcx,QWORD PTR [r15]
  40adb1:	lea    rdi,[rip+0x2ac7a]        # 435a32 <_IO_stdin_used@@Base+0x7a32>
  40adb8:	mov    esi,0x15
  40adbd:	mov    edx,0x1
  40adc2:	call   406210 <fwrite@plt>
  40adc7:	mov    rax,QWORD PTR [rsp+0x18]
  40adcc:	mov    rbx,QWORD PTR [rax+0x28]
  40add0:	test   rbx,rbx
  40add3:	je     40ae2c <__flatcc_fb_gen_c_reader@@Base+0x287c>
  40add5:	lea    r14,[rip+0x2aca0]        # 435a7c <_IO_stdin_used@@Base+0x7a7c>
  40addc:	lea    r13,[rsp+0x40]
  40ade1:	lea    r12,[rip+0x2ac60]        # 435a48 <_IO_stdin_used@@Base+0x7a48>
  40ade8:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	mov    rax,QWORD PTR [rbx+0x8]
  40adf4:	mov    ecx,DWORD PTR [rax+0x8]
  40adf7:	mov    r8,QWORD PTR [rax]
  40adfa:	test   BYTE PTR [rbx+0x12],0x4
  40adfe:	mov    rdi,QWORD PTR [r15]
  40ae01:	jne    40ae10 <__flatcc_fb_gen_c_reader@@Base+0x2860>
  40ae03:	mov    QWORD PTR [rsp],r8
  40ae07:	xor    eax,eax
  40ae09:	mov    rsi,r14
  40ae0c:	jmp    40ae19 <__flatcc_fb_gen_c_reader@@Base+0x2869>
  40ae0e:	xchg   ax,ax
  40ae10:	mov    QWORD PTR [rsp],r8
  40ae14:	xor    eax,eax
  40ae16:	mov    rsi,r12
  40ae19:	mov    rdx,r13
  40ae1c:	mov    r9d,ecx
  40ae1f:	call   406170 <fprintf@plt>
  40ae24:	mov    rbx,QWORD PTR [rbx]
  40ae27:	test   rbx,rbx
  40ae2a:	jne    40adf0 <__flatcc_fb_gen_c_reader@@Base+0x2840>
  40ae2c:	mov    rcx,QWORD PTR [r15]
  40ae2f:	lea    rdi,[rip+0x2ac68]        # 435a9e <_IO_stdin_used@@Base+0x7a9e>
  40ae36:	mov    esi,0x20
  40ae3b:	mov    edx,0x1
  40ae40:	call   406210 <fwrite@plt>
  40ae45:	mov    rsi,QWORD PTR [r15]
  40ae48:	mov    edi,0xa
  40ae4d:	call   406110 <fputc@plt>
  40ae52:	mov    rdi,QWORD PTR [r15]
  40ae55:	cmp    DWORD PTR [rsp+0x10],0x3
  40ae5a:	je     40ae83 <__flatcc_fb_gen_c_reader@@Base+0x28d3>
  40ae5c:	lea    rsi,[rip+0x2ac5c]        # 435abf <_IO_stdin_used@@Base+0x7abf>
  40ae63:	lea    rdx,[rsp+0x40]
  40ae68:	xor    eax,eax
  40ae6a:	mov    rcx,rdx
  40ae6d:	call   406170 <fprintf@plt>
  40ae72:	mov    rcx,QWORD PTR [r15]
  40ae75:	lea    rdi,[rip+0x39fb4]        # 444e30 <_IO_stdin_used@@Base+0x16e30>
  40ae7c:	mov    esi,0x14
  40ae81:	jmp    40aea8 <__flatcc_fb_gen_c_reader@@Base+0x28f8>
  40ae83:	lea    rsi,[rip+0x2ac71]        # 435afb <_IO_stdin_used@@Base+0x7afb>
  40ae8a:	lea    rdx,[rsp+0x40]
  40ae8f:	xor    eax,eax
  40ae91:	mov    rcx,rdx
  40ae94:	call   406170 <fprintf@plt>
  40ae99:	mov    rcx,QWORD PTR [r15]
  40ae9c:	lea    rdi,[rip+0x2ab8f]        # 435a32 <_IO_stdin_used@@Base+0x7a32>
  40aea3:	mov    esi,0x15
  40aea8:	mov    edx,0x1
  40aead:	call   406210 <fwrite@plt>
  40aeb2:	mov    rax,QWORD PTR [rsp+0x18]
  40aeb7:	mov    rbx,QWORD PTR [rax+0x28]
  40aebb:	test   rbx,rbx
  40aebe:	je     40af15 <__flatcc_fb_gen_c_reader@@Base+0x2965>
  40aec0:	lea    r14,[rip+0x2ac9b]        # 435b62 <_IO_stdin_used@@Base+0x7b62>
  40aec7:	lea    r13,[rsp+0x40]
  40aecc:	lea    r12,[rip+0x2ac60]        # 435b33 <_IO_stdin_used@@Base+0x7b33>
  40aed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aedd:	nop    DWORD PTR [rax]
  40aee0:	mov    rax,QWORD PTR [rbx+0x8]
  40aee4:	mov    ecx,DWORD PTR [rax+0x8]
  40aee7:	mov    r8,QWORD PTR [rax]
  40aeea:	test   BYTE PTR [rbx+0x12],0x4
  40aeee:	mov    rdi,QWORD PTR [r15]
  40aef1:	jne    40af00 <__flatcc_fb_gen_c_reader@@Base+0x2950>
  40aef3:	xor    eax,eax
  40aef5:	mov    rsi,r14
  40aef8:	jmp    40af05 <__flatcc_fb_gen_c_reader@@Base+0x2955>
  40aefa:	nop    WORD PTR [rax+rax*1+0x0]
  40af00:	xor    eax,eax
  40af02:	mov    rsi,r12
  40af05:	mov    rdx,r13
  40af08:	call   406170 <fprintf@plt>
  40af0d:	mov    rbx,QWORD PTR [rbx]
  40af10:	test   rbx,rbx
  40af13:	jne    40aee0 <__flatcc_fb_gen_c_reader@@Base+0x2930>
  40af15:	mov    rcx,QWORD PTR [r15]
  40af18:	lea    rdi,[rip+0x2ac60]        # 435b7f <_IO_stdin_used@@Base+0x7b7f>
  40af1f:	mov    esi,0x1f
  40af24:	mov    edx,0x1
  40af29:	call   406210 <fwrite@plt>
  40af2e:	mov    rsi,QWORD PTR [r15]
  40af31:	mov    edi,0xa
  40af36:	call   406110 <fputc@plt>
  40af3b:	lea    rsp,[rbp-0x28]
  40af3f:	pop    rbx
  40af40:	pop    r12
  40af42:	pop    r13
  40af44:	pop    r14
  40af46:	pop    r15
  40af48:	pop    rbp
  40af49:	ret    
  40af4a:	lea    rdi,[rip+0x2a953]        # 4358a4 <_IO_stdin_used@@Base+0x78a4>
  40af51:	lea    rsi,[rip+0x244d7]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40af58:	lea    rcx,[rip+0x2a985]        # 4358e4 <_IO_stdin_used@@Base+0x78e4>
  40af5f:	mov    edx,0x4b4
  40af64:	vzeroupper 
  40af67:	call   4060f0 <__assert_fail@plt>
  40af6c:	lea    rdi,[rip+0x2a9a4]        # 435917 <_IO_stdin_used@@Base+0x7917>
  40af73:	lea    rsi,[rip+0x244b5]        # 42f42f <_IO_stdin_used@@Base+0x142f>
  40af7a:	lea    rcx,[rip+0x2a963]        # 4358e4 <_IO_stdin_used@@Base+0x78e4>
  40af81:	mov    edx,0x4b5
  40af86:	vzeroupper 
  40af89:	call   4060f0 <__assert_fail@plt>
  40af8e:	mov    rax,QWORD PTR [rip+0x46063]        # 450ff8 <stderr@GLIBC_2.2.5>
  40af95:	mov    rdi,QWORD PTR [rax]
  40af98:	lea    rsi,[rip+0x24485]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40af9f:	lea    rbx,[rip+0x2ac30]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40afa6:	lea    r8,[rip+0x2ac8c]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40afad:	mov    ecx,0x8d
  40afb2:	xor    eax,eax
  40afb4:	mov    rdx,rbx
  40afb7:	vzeroupper 
  40afba:	call   406170 <fprintf@plt>
  40afbf:	lea    rdi,[rip+0x353c5]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40afc6:	lea    rcx,[rip+0x2aca3]        # 435c70 <_IO_stdin_used@@Base+0x7c70>
  40afcd:	mov    edx,0x8d
  40afd2:	mov    rsi,rbx
  40afd5:	call   4060f0 <__assert_fail@plt>
  40afda:	nop    WORD PTR [rax+rax*1+0x0]
  40afe0:	push   rbx
  40afe1:	mov    eax,DWORD PTR [rsi+0x10]
  40afe4:	add    eax,0xfffffffd
  40afe7:	movzx  ecx,ax
  40afea:	cmp    ecx,0x3
  40afed:	ja     40b0c3 <__flatcc_fb_gen_c_reader@@Base+0x2b13>
  40aff3:	movzx  eax,ax
  40aff6:	lea    rcx,[rip+0x242b7]        # 42f2b4 <_IO_stdin_used@@Base+0x12b4>
  40affd:	movsxd rax,DWORD PTR [rcx+rax*4]
  40b001:	add    rax,rcx
  40b004:	jmp    rax
  40b006:	vmovsd xmm0,QWORD PTR [rsi]
  40b00a:	cmp    edi,0xb
  40b00d:	jne    40b0b1 <__flatcc_fb_gen_c_reader@@Base+0x2b01>
  40b013:	vcvtsd2ss xmm0,xmm0,xmm0
  40b017:	vcvtss2sd xmm0,xmm0,xmm0
  40b01b:	lea    rsi,[rip+0x2aca4]        # 435cc6 <_IO_stdin_used@@Base+0x7cc6>
  40b022:	jmp    40b0b8 <__flatcc_fb_gen_c_reader@@Base+0x2b08>
  40b027:	add    edi,0xffffffff
  40b02a:	cmp    edi,0x9
  40b02d:	jae    40b10c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40b033:	movsxd rax,edi
  40b036:	lea    rcx,[rip+0x45b03]        # 450b40 <fb_value_set_deleted@@Base+0x60e0>
  40b03d:	mov    rbx,QWORD PTR [rcx+rax*8]
  40b041:	mov    rcx,QWORD PTR [rsi]
  40b044:	lea    rsi,[rip+0x2ac62]        # 435cad <_IO_stdin_used@@Base+0x7cad>
  40b04b:	jmp    40b0a3 <__flatcc_fb_gen_c_reader@@Base+0x2af3>
  40b04d:	add    edi,0xffffffff
  40b050:	cmp    edi,0x9
  40b053:	jae    40b10c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40b059:	movsxd rax,edi
  40b05c:	lea    rcx,[rip+0x45add]        # 450b40 <fb_value_set_deleted@@Base+0x60e0>
  40b063:	mov    rbx,QWORD PTR [rcx+rax*8]
  40b067:	movzx  ecx,BYTE PTR [rsi]
  40b06a:	lea    rsi,[rip+0x2ac4e]        # 435cbf <_IO_stdin_used@@Base+0x7cbf>
  40b071:	xor    eax,eax
  40b073:	mov    rdi,rdx
  40b076:	mov    rdx,rbx
  40b079:	pop    rbx
  40b07a:	jmp    4061f0 <sprintf@plt>
  40b07f:	add    edi,0xffffffff
  40b082:	cmp    edi,0x9
  40b085:	jae    40b10c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40b08b:	movsxd rax,edi
  40b08e:	lea    rcx,[rip+0x45aab]        # 450b40 <fb_value_set_deleted@@Base+0x60e0>
  40b095:	mov    rbx,QWORD PTR [rcx+rax*8]
  40b099:	mov    rcx,QWORD PTR [rsi]
  40b09c:	lea    rsi,[rip+0x2ac13]        # 435cb6 <_IO_stdin_used@@Base+0x7cb6>
  40b0a3:	xor    eax,eax
  40b0a5:	mov    rdi,rdx
  40b0a8:	mov    rdx,rbx
  40b0ab:	pop    rbx
  40b0ac:	jmp    4061f0 <sprintf@plt>
  40b0b1:	lea    rsi,[rip+0x2ac12]        # 435cca <_IO_stdin_used@@Base+0x7cca>
  40b0b8:	mov    al,0x1
  40b0ba:	mov    rdi,rdx
  40b0bd:	pop    rbx
  40b0be:	jmp    4061f0 <sprintf@plt>
  40b0c3:	mov    rax,QWORD PTR [rip+0x45f2e]        # 450ff8 <stderr@GLIBC_2.2.5>
  40b0ca:	mov    rdi,QWORD PTR [rax]
  40b0cd:	lea    rsi,[rip+0x24350]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40b0d4:	lea    rbx,[rip+0x2aafb]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40b0db:	lea    r8,[rip+0x2ab57]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40b0e2:	mov    ecx,0x104
  40b0e7:	xor    eax,eax
  40b0e9:	mov    rdx,rbx
  40b0ec:	call   406170 <fprintf@plt>
  40b0f1:	lea    rdi,[rip+0x35293]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40b0f8:	lea    rcx,[rip+0x2abcf]        # 435cce <_IO_stdin_used@@Base+0x7cce>
  40b0ff:	mov    edx,0x104
  40b104:	mov    rsi,rbx
  40b107:	call   4060f0 <__assert_fail@plt>
  40b10c:	mov    rax,QWORD PTR [rip+0x45ee5]        # 450ff8 <stderr@GLIBC_2.2.5>
  40b113:	mov    rdi,QWORD PTR [rax]
  40b116:	lea    rsi,[rip+0x24307]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40b11d:	lea    rbx,[rip+0x2aab2]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40b124:	lea    r8,[rip+0x2ab0e]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40b12b:	mov    ecx,0xe2
  40b130:	xor    eax,eax
  40b132:	mov    rdx,rbx
  40b135:	call   406170 <fprintf@plt>
  40b13a:	lea    rdi,[rip+0x3524a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40b141:	lea    rcx,[rip+0x2abec]        # 435d34 <_IO_stdin_used@@Base+0x7d34>
  40b148:	mov    edx,0xe2
  40b14d:	mov    rsi,rbx
  40b150:	call   4060f0 <__assert_fail@plt>
  40b155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b15f:	nop

000000000040b160 <__flatcc_gen_sort@@Base>:
  40b160:	push   rbx
  40b161:	mov    rbx,rdi
  40b164:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b16b:	lea    rsi,[rip+0x2bbf8]        # 436d6a <_IO_stdin_used@@Base+0x8d6a>
  40b172:	xor    eax,eax
  40b174:	mov    rdx,rbx
  40b177:	call   406170 <fprintf@plt>
  40b17c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b183:	lea    rsi,[rip+0x2bfae]        # 437138 <_IO_stdin_used@@Base+0x9138>
  40b18a:	xor    eax,eax
  40b18c:	mov    rdx,rbx
  40b18f:	mov    rcx,rbx
  40b192:	call   406170 <fprintf@plt>
  40b197:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b19e:	lea    rsi,[rip+0x2c0a3]        # 437248 <_IO_stdin_used@@Base+0x9248>
  40b1a5:	xor    eax,eax
  40b1a7:	mov    rdx,rbx
  40b1aa:	mov    rcx,rbx
  40b1ad:	mov    r8,rbx
  40b1b0:	call   406170 <fprintf@plt>
  40b1b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1bc:	lea    rsi,[rip+0x2c159]        # 43731c <_IO_stdin_used@@Base+0x931c>
  40b1c3:	xor    eax,eax
  40b1c5:	mov    rdx,rbx
  40b1c8:	mov    rcx,rbx
  40b1cb:	mov    r8,rbx
  40b1ce:	mov    r9,rbx
  40b1d1:	call   406170 <fprintf@plt>
  40b1d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1dd:	lea    rsi,[rip+0x2c1cc]        # 4373b0 <_IO_stdin_used@@Base+0x93b0>
  40b1e4:	xor    eax,eax
  40b1e6:	mov    rdx,rbx
  40b1e9:	mov    rcx,rbx
  40b1ec:	call   406170 <fprintf@plt>
  40b1f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1f8:	lea    rsi,[rip+0x2c348]        # 437547 <_IO_stdin_used@@Base+0x9547>
  40b1ff:	xor    eax,eax
  40b201:	mov    rdx,rbx
  40b204:	mov    rcx,rbx
  40b207:	mov    r8,rbx
  40b20a:	mov    r9,rbx
  40b20d:	call   406170 <fprintf@plt>
  40b212:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b219:	lea    rsi,[rip+0x2c3ac]        # 4375cc <_IO_stdin_used@@Base+0x95cc>
  40b220:	mov    eax,0x0
  40b225:	mov    rdx,rbx
  40b228:	mov    rcx,rbx
  40b22b:	mov    r8,rbx
  40b22e:	mov    r9,rbx
  40b231:	push   rbx
  40b232:	push   rbx
  40b233:	call   406170 <fprintf@plt>
  40b238:	add    rsp,0x10
  40b23c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b243:	lea    rsi,[rip+0x2c410]        # 43765a <_IO_stdin_used@@Base+0x965a>
  40b24a:	xor    eax,eax
  40b24c:	mov    rdx,rbx
  40b24f:	mov    rcx,rbx
  40b252:	mov    r8,rbx
  40b255:	mov    r9,rbx
  40b258:	call   406170 <fprintf@plt>
  40b25d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b264:	sub    rsp,0x8
  40b268:	lea    rsi,[rip+0x2c44c]        # 4376bb <_IO_stdin_used@@Base+0x96bb>
  40b26f:	mov    eax,0x0
  40b274:	mov    rdx,rbx
  40b277:	mov    rcx,rbx
  40b27a:	mov    r8,rbx
  40b27d:	mov    r9,rbx
  40b280:	push   rbx
  40b281:	push   rbx
  40b282:	push   rbx
  40b283:	call   406170 <fprintf@plt>
  40b288:	add    rsp,0x20
  40b28c:	xor    eax,eax
  40b28e:	pop    rbx
  40b28f:	ret    

000000000040b290 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40b290:	push   r14
  40b292:	push   rbx
  40b293:	push   rax
  40b294:	mov    rbx,rdi
  40b297:	lea    r14,[rdi+0x66]
  40b29b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b2a2:	lea    rsi,[rip+0x2c51f]        # 4377c8 <_IO_stdin_used@@Base+0x97c8>
  40b2a9:	xor    eax,eax
  40b2ab:	mov    rdx,r14
  40b2ae:	call   406170 <fprintf@plt>
  40b2b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2ba:	lea    rsi,[rip+0x2c524]        # 4377e5 <_IO_stdin_used@@Base+0x97e5>
  40b2c1:	xor    eax,eax
  40b2c3:	mov    rdx,r14
  40b2c6:	call   406170 <fprintf@plt>
  40b2cb:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b2d2:	lea    rdi,[rip+0x24022]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  40b2d9:	mov    esi,0x51
  40b2de:	mov    edx,0x1
  40b2e3:	call   406210 <fwrite@plt>
  40b2e8:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b2ef:	lea    rdi,[rip+0x2c50c]        # 437802 <_IO_stdin_used@@Base+0x9802>
  40b2f6:	mov    esi,0x35
  40b2fb:	mov    edx,0x1
  40b300:	call   406210 <fwrite@plt>
  40b305:	mov    rax,QWORD PTR [rbx+0xe0]
  40b30c:	cmp    DWORD PTR [rax+0xac],0x0
  40b313:	je     40b332 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2>
  40b315:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b31c:	lea    rdi,[rip+0x241ce]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  40b323:	mov    esi,0x24
  40b328:	mov    edx,0x1
  40b32d:	call   406210 <fwrite@plt>
  40b332:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b339:	lea    rdi,[rip+0x2c4f8]        # 437838 <_IO_stdin_used@@Base+0x9838>
  40b340:	mov    esi,0x16
  40b345:	mov    edx,0x1
  40b34a:	call   406210 <fwrite@plt>
  40b34f:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b356:	lea    rdi,[rip+0x2c4f2]        # 43784f <_IO_stdin_used@@Base+0x984f>
  40b35d:	mov    esi,0x23
  40b362:	mov    edx,0x1
  40b367:	call   406210 <fwrite@plt>
  40b36c:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b373:	lea    rdi,[rip+0x2a1a3]        # 43551d <_IO_stdin_used@@Base+0x751d>
  40b37a:	mov    esi,0x7
  40b37f:	mov    edx,0x1
  40b384:	call   406210 <fwrite@plt>
  40b389:	lea    rsi,[rip+0x2c4e3]        # 437873 <_IO_stdin_used@@Base+0x9873>
  40b390:	mov    rdi,rbx
  40b393:	call   406150 <strcmp@plt>
  40b398:	test   eax,eax
  40b39a:	je     40b430 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1a0>
  40b3a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3a7:	lea    rsi,[rip+0x2c4d5]        # 437883 <_IO_stdin_used@@Base+0x9883>
  40b3ae:	xor    eax,eax
  40b3b0:	mov    rdx,rbx
  40b3b3:	call   406170 <fprintf@plt>
  40b3b8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3bf:	lea    rsi,[rip+0x2c4e4]        # 4378aa <_IO_stdin_used@@Base+0x98aa>
  40b3c6:	xor    eax,eax
  40b3c8:	mov    rdx,rbx
  40b3cb:	call   406170 <fprintf@plt>
  40b3d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3d7:	lea    rsi,[rip+0x2c4f3]        # 4378d1 <_IO_stdin_used@@Base+0x98d1>
  40b3de:	xor    eax,eax
  40b3e0:	mov    rdx,rbx
  40b3e3:	call   406170 <fprintf@plt>
  40b3e8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3ef:	lea    rsi,[rip+0x2c506]        # 4378fc <_IO_stdin_used@@Base+0x98fc>
  40b3f6:	xor    eax,eax
  40b3f8:	mov    rdx,rbx
  40b3fb:	call   406170 <fprintf@plt>
  40b400:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b407:	lea    rsi,[rip+0x2c521]        # 43792f <_IO_stdin_used@@Base+0x992f>
  40b40e:	xor    eax,eax
  40b410:	mov    rdx,rbx
  40b413:	call   406170 <fprintf@plt>
  40b418:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b41f:	lea    rsi,[rip+0x2c544]        # 43796a <_IO_stdin_used@@Base+0x996a>
  40b426:	xor    eax,eax
  40b428:	mov    rdx,rbx
  40b42b:	call   406170 <fprintf@plt>
  40b430:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b437:	lea    rsi,[rip+0x2c584]        # 4379c2 <_IO_stdin_used@@Base+0x99c2>
  40b43e:	xor    eax,eax
  40b440:	mov    rdx,rbx
  40b443:	mov    rcx,rbx
  40b446:	call   406170 <fprintf@plt>
  40b44b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b452:	lea    rsi,[rip+0x2c584]        # 4379dd <_IO_stdin_used@@Base+0x99dd>
  40b459:	xor    eax,eax
  40b45b:	mov    rdx,rbx
  40b45e:	mov    rcx,rbx
  40b461:	call   406170 <fprintf@plt>
  40b466:	lea    rsi,[rip+0x240d3]        # 42f540 <_IO_stdin_used@@Base+0x1540>
  40b46d:	mov    rdi,rbx
  40b470:	call   406150 <strcmp@plt>
  40b475:	test   eax,eax
  40b477:	je     40b4a9 <__flatcc_fb_gen_common_c_builder_header@@Base+0x219>
  40b479:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b480:	lea    rsi,[rip+0x2c57d]        # 437a04 <_IO_stdin_used@@Base+0x9a04>
  40b487:	xor    eax,eax
  40b489:	mov    rdx,rbx
  40b48c:	call   406170 <fprintf@plt>
  40b491:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b498:	lea    rsi,[rip+0x2c596]        # 437a35 <_IO_stdin_used@@Base+0x9a35>
  40b49f:	xor    eax,eax
  40b4a1:	mov    rdx,rbx
  40b4a4:	call   406170 <fprintf@plt>
  40b4a9:	mov    rsi,QWORD PTR [rbx+0xd0]
  40b4b0:	mov    edi,0xa
  40b4b5:	call   406110 <fputc@plt>
  40b4ba:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4c1:	lea    rsi,[rip+0x2c591]        # 437a59 <_IO_stdin_used@@Base+0x9a59>
  40b4c8:	xor    eax,eax
  40b4ca:	mov    rdx,rbx
  40b4cd:	call   406170 <fprintf@plt>
  40b4d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4d9:	lea    rsi,[rip+0x2c8ec]        # 437dcc <_IO_stdin_used@@Base+0x9dcc>
  40b4e0:	xor    eax,eax
  40b4e2:	mov    rdx,rbx
  40b4e5:	call   406170 <fprintf@plt>
  40b4ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4f1:	lea    rsi,[rip+0x2cf9d]        # 438495 <_IO_stdin_used@@Base+0xa495>
  40b4f8:	xor    eax,eax
  40b4fa:	mov    rdx,rbx
  40b4fd:	mov    rcx,rbx
  40b500:	mov    r8,rbx
  40b503:	call   406170 <fprintf@plt>
  40b508:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b50f:	lea    rsi,[rip+0x2d008]        # 43851e <_IO_stdin_used@@Base+0xa51e>
  40b516:	xor    eax,eax
  40b518:	mov    rdx,rbx
  40b51b:	call   406170 <fprintf@plt>
  40b520:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b527:	lea    rsi,[rip+0x2daab]        # 438fd9 <_IO_stdin_used@@Base+0xafd9>
  40b52e:	xor    eax,eax
  40b530:	mov    rdx,rbx
  40b533:	call   406170 <fprintf@plt>
  40b538:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b53f:	lea    rsi,[rip+0x2de6e]        # 4393b4 <_IO_stdin_used@@Base+0xb3b4>
  40b546:	xor    eax,eax
  40b548:	mov    rdx,rbx
  40b54b:	call   406170 <fprintf@plt>
  40b550:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b557:	lea    rsi,[rip+0x2e48c]        # 4399ea <_IO_stdin_used@@Base+0xb9ea>
  40b55e:	xor    eax,eax
  40b560:	mov    rdx,rbx
  40b563:	call   406170 <fprintf@plt>
  40b568:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b56f:	lea    rsi,[rip+0x2e8f0]        # 439e66 <_IO_stdin_used@@Base+0xbe66>
  40b576:	xor    eax,eax
  40b578:	mov    rdx,rbx
  40b57b:	mov    rcx,rbx
  40b57e:	call   406170 <fprintf@plt>
  40b583:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b58a:	lea    rsi,[rip+0x2f048]        # 43a5d9 <_IO_stdin_used@@Base+0xc5d9>
  40b591:	xor    eax,eax
  40b593:	mov    rdx,rbx
  40b596:	mov    rcx,rbx
  40b599:	mov    r8,rbx
  40b59c:	call   406170 <fprintf@plt>
  40b5a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5a8:	lea    rsi,[rip+0x2f572]        # 43ab21 <_IO_stdin_used@@Base+0xcb21>
  40b5af:	xor    eax,eax
  40b5b1:	mov    rdx,rbx
  40b5b4:	call   406170 <fprintf@plt>
  40b5b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5c0:	lea    rsi,[rip+0x2f9d8]        # 43af9f <_IO_stdin_used@@Base+0xcf9f>
  40b5c7:	xor    eax,eax
  40b5c9:	mov    rdx,rbx
  40b5cc:	call   406170 <fprintf@plt>
  40b5d1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5d8:	lea    rsi,[rip+0x2fb4e]        # 43b12d <_IO_stdin_used@@Base+0xd12d>
  40b5df:	xor    eax,eax
  40b5e1:	mov    rdx,rbx
  40b5e4:	call   406170 <fprintf@plt>
  40b5e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5f0:	lea    rsi,[rip+0x2fe90]        # 43b487 <_IO_stdin_used@@Base+0xd487>
  40b5f7:	xor    eax,eax
  40b5f9:	mov    rdx,rbx
  40b5fc:	mov    rcx,rbx
  40b5ff:	call   406170 <fprintf@plt>
  40b604:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b60b:	lea    rsi,[rip+0x3007a]        # 43b68c <_IO_stdin_used@@Base+0xd68c>
  40b612:	xor    eax,eax
  40b614:	mov    rdx,rbx
  40b617:	call   406170 <fprintf@plt>
  40b61c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b623:	lea    rsi,[rip+0x303cb]        # 43b9f5 <_IO_stdin_used@@Base+0xd9f5>
  40b62a:	xor    eax,eax
  40b62c:	mov    rdx,rbx
  40b62f:	mov    rcx,rbx
  40b632:	mov    r8,rbx
  40b635:	call   406170 <fprintf@plt>
  40b63a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b641:	lea    rsi,[rip+0x308a9]        # 43bef1 <_IO_stdin_used@@Base+0xdef1>
  40b648:	xor    eax,eax
  40b64a:	mov    rdx,rbx
  40b64d:	mov    rcx,rbx
  40b650:	mov    r8,rbx
  40b653:	mov    r9,rbx
  40b656:	call   406170 <fprintf@plt>
  40b65b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b662:	lea    rsi,[rip+0x30991]        # 43bffa <_IO_stdin_used@@Base+0xdffa>
  40b669:	xor    eax,eax
  40b66b:	mov    rdx,rbx
  40b66e:	mov    rcx,rbx
  40b671:	call   406170 <fprintf@plt>
  40b676:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b67d:	lea    rsi,[rip+0x30cde]        # 43c362 <_IO_stdin_used@@Base+0xe362>
  40b684:	xor    eax,eax
  40b686:	mov    rdx,rbx
  40b689:	mov    rcx,rbx
  40b68c:	mov    r8,rbx
  40b68f:	mov    r9,rbx
  40b692:	call   406170 <fprintf@plt>
  40b697:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b69e:	lea    rsi,[rip+0x312bb]        # 43c960 <_IO_stdin_used@@Base+0xe960>
  40b6a5:	xor    eax,eax
  40b6a7:	mov    rdx,rbx
  40b6aa:	mov    rcx,rbx
  40b6ad:	call   406170 <fprintf@plt>
  40b6b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6b9:	lea    rsi,[rip+0x31453]        # 43cb13 <_IO_stdin_used@@Base+0xeb13>
  40b6c0:	xor    eax,eax
  40b6c2:	mov    rdx,rbx
  40b6c5:	call   406170 <fprintf@plt>
  40b6ca:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6d1:	lea    rsi,[rip+0x31660]        # 43cd38 <_IO_stdin_used@@Base+0xed38>
  40b6d8:	xor    eax,eax
  40b6da:	mov    rdx,rbx
  40b6dd:	call   406170 <fprintf@plt>
  40b6e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6e9:	lea    rsi,[rip+0x31a08]        # 43d0f8 <_IO_stdin_used@@Base+0xf0f8>
  40b6f0:	xor    eax,eax
  40b6f2:	mov    rdx,rbx
  40b6f5:	call   406170 <fprintf@plt>
  40b6fa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b701:	lea    rsi,[rip+0x31cad]        # 43d3b5 <_IO_stdin_used@@Base+0xf3b5>
  40b708:	xor    eax,eax
  40b70a:	mov    rdx,rbx
  40b70d:	call   406170 <fprintf@plt>
  40b712:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b719:	lea    rsi,[rip+0x320a9]        # 43d7c9 <_IO_stdin_used@@Base+0xf7c9>
  40b720:	xor    eax,eax
  40b722:	mov    rdx,rbx
  40b725:	mov    rcx,rbx
  40b728:	call   406170 <fprintf@plt>
  40b72d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b734:	lea    rsi,[rip+0x3217a]        # 43d8b5 <_IO_stdin_used@@Base+0xf8b5>
  40b73b:	xor    eax,eax
  40b73d:	mov    rdx,rbx
  40b740:	call   406170 <fprintf@plt>
  40b745:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b74c:	lea    rsi,[rip+0x323c3]        # 43db16 <_IO_stdin_used@@Base+0xfb16>
  40b753:	xor    eax,eax
  40b755:	mov    rdx,rbx
  40b758:	call   406170 <fprintf@plt>
  40b75d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b764:	lea    rsi,[rip+0x32722]        # 43de8d <_IO_stdin_used@@Base+0xfe8d>
  40b76b:	xor    eax,eax
  40b76d:	mov    rdx,rbx
  40b770:	mov    rcx,rbx
  40b773:	call   406170 <fprintf@plt>
  40b778:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b77f:	lea    rsi,[rip+0x32b56]        # 43e2dc <_IO_stdin_used@@Base+0x102dc>
  40b786:	xor    eax,eax
  40b788:	mov    rdx,rbx
  40b78b:	mov    rcx,rbx
  40b78e:	call   406170 <fprintf@plt>
  40b793:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b79a:	lea    rsi,[rip+0x32dd3]        # 43e574 <_IO_stdin_used@@Base+0x10574>
  40b7a1:	xor    eax,eax
  40b7a3:	mov    rdx,rbx
  40b7a6:	mov    rcx,rbx
  40b7a9:	call   406170 <fprintf@plt>
  40b7ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7b5:	lea    rsi,[rip+0x331b4]        # 43e970 <_IO_stdin_used@@Base+0x10970>
  40b7bc:	xor    eax,eax
  40b7be:	mov    rdx,rbx
  40b7c1:	mov    rcx,rbx
  40b7c4:	call   406170 <fprintf@plt>
  40b7c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7d0:	lea    rsi,[rip+0x332a5]        # 43ea7c <_IO_stdin_used@@Base+0x10a7c>
  40b7d7:	xor    eax,eax
  40b7d9:	mov    rdx,rbx
  40b7dc:	mov    rcx,rbx
  40b7df:	mov    r8,rbx
  40b7e2:	call   406170 <fprintf@plt>
  40b7e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7ee:	lea    rsi,[rip+0x33312]        # 43eb07 <_IO_stdin_used@@Base+0x10b07>
  40b7f5:	xor    eax,eax
  40b7f7:	mov    rdx,rbx
  40b7fa:	mov    rcx,rbx
  40b7fd:	call   406170 <fprintf@plt>
  40b802:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b809:	lea    rsi,[rip+0x33643]        # 43ee53 <_IO_stdin_used@@Base+0x10e53>
  40b810:	xor    eax,eax
  40b812:	mov    rdx,rbx
  40b815:	call   406170 <fprintf@plt>
  40b81a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b821:	lea    rsi,[rip+0x338b3]        # 43f0db <_IO_stdin_used@@Base+0x110db>
  40b828:	xor    eax,eax
  40b82a:	mov    rdx,rbx
  40b82d:	call   406170 <fprintf@plt>
  40b832:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b839:	lea    rsi,[rip+0x33b29]        # 43f369 <_IO_stdin_used@@Base+0x11369>
  40b840:	xor    eax,eax
  40b842:	mov    rdx,rbx
  40b845:	call   406170 <fprintf@plt>
  40b84a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b851:	lea    rsi,[rip+0x340c7]        # 43f91f <_IO_stdin_used@@Base+0x1191f>
  40b858:	xor    eax,eax
  40b85a:	mov    rdx,rbx
  40b85d:	mov    rcx,rbx
  40b860:	mov    r8,rbx
  40b863:	call   406170 <fprintf@plt>
  40b868:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b86f:	lea    rsi,[rip+0x34138]        # 43f9ae <_IO_stdin_used@@Base+0x119ae>
  40b876:	xor    eax,eax
  40b878:	mov    rdx,rbx
  40b87b:	call   406170 <fprintf@plt>
  40b880:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b887:	lea    rsi,[rip+0x3414c]        # 43f9da <_IO_stdin_used@@Base+0x119da>
  40b88e:	xor    eax,eax
  40b890:	mov    rdx,rbx
  40b893:	call   406170 <fprintf@plt>
  40b898:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b89f:	lea    rsi,[rip+0x34156]        # 43f9fc <_IO_stdin_used@@Base+0x119fc>
  40b8a6:	xor    eax,eax
  40b8a8:	mov    rdx,rbx
  40b8ab:	call   406170 <fprintf@plt>
  40b8b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8b7:	lea    rsi,[rip+0x34168]        # 43fa26 <_IO_stdin_used@@Base+0x11a26>
  40b8be:	xor    eax,eax
  40b8c0:	mov    rdx,rbx
  40b8c3:	call   406170 <fprintf@plt>
  40b8c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8cf:	lea    rsi,[rip+0x34171]        # 43fa47 <_IO_stdin_used@@Base+0x11a47>
  40b8d6:	xor    eax,eax
  40b8d8:	mov    rdx,rbx
  40b8db:	mov    rcx,rbx
  40b8de:	call   406170 <fprintf@plt>
  40b8e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8ea:	lea    rsi,[rip+0x34182]        # 43fa73 <_IO_stdin_used@@Base+0x11a73>
  40b8f1:	xor    eax,eax
  40b8f3:	mov    rdx,rbx
  40b8f6:	call   406170 <fprintf@plt>
  40b8fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b902:	lea    rsi,[rip+0x3418b]        # 43fa94 <_IO_stdin_used@@Base+0x11a94>
  40b909:	xor    eax,eax
  40b90b:	mov    rdx,rbx
  40b90e:	call   406170 <fprintf@plt>
  40b913:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b91a:	lea    rsi,[rip+0x341a1]        # 43fac2 <_IO_stdin_used@@Base+0x11ac2>
  40b921:	xor    eax,eax
  40b923:	mov    rdx,rbx
  40b926:	call   406170 <fprintf@plt>
  40b92b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b932:	lea    rsi,[rip+0x341ac]        # 43fae5 <_IO_stdin_used@@Base+0x11ae5>
  40b939:	xor    eax,eax
  40b93b:	mov    rdx,rbx
  40b93e:	call   406170 <fprintf@plt>
  40b943:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b94a:	lea    rsi,[rip+0x341c2]        # 43fb13 <_IO_stdin_used@@Base+0x11b13>
  40b951:	xor    eax,eax
  40b953:	mov    rdx,rbx
  40b956:	call   406170 <fprintf@plt>
  40b95b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b962:	lea    rsi,[rip+0x341cd]        # 43fb36 <_IO_stdin_used@@Base+0x11b36>
  40b969:	xor    eax,eax
  40b96b:	mov    rdx,rbx
  40b96e:	call   406170 <fprintf@plt>
  40b973:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b97a:	lea    rsi,[rip+0x341e3]        # 43fb64 <_IO_stdin_used@@Base+0x11b64>
  40b981:	xor    eax,eax
  40b983:	mov    rdx,rbx
  40b986:	call   406170 <fprintf@plt>
  40b98b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b992:	lea    rsi,[rip+0x341ee]        # 43fb87 <_IO_stdin_used@@Base+0x11b87>
  40b999:	xor    eax,eax
  40b99b:	mov    rdx,rbx
  40b99e:	call   406170 <fprintf@plt>
  40b9a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9aa:	lea    rsi,[rip+0x34202]        # 43fbb3 <_IO_stdin_used@@Base+0x11bb3>
  40b9b1:	xor    eax,eax
  40b9b3:	mov    rdx,rbx
  40b9b6:	call   406170 <fprintf@plt>
  40b9bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9c2:	lea    rsi,[rip+0x3420c]        # 43fbd5 <_IO_stdin_used@@Base+0x11bd5>
  40b9c9:	xor    eax,eax
  40b9cb:	mov    rdx,rbx
  40b9ce:	call   406170 <fprintf@plt>
  40b9d3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9da:	lea    rsi,[rip+0x34220]        # 43fc01 <_IO_stdin_used@@Base+0x11c01>
  40b9e1:	xor    eax,eax
  40b9e3:	mov    rdx,rbx
  40b9e6:	call   406170 <fprintf@plt>
  40b9eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9f2:	lea    rsi,[rip+0x3422a]        # 43fc23 <_IO_stdin_used@@Base+0x11c23>
  40b9f9:	xor    eax,eax
  40b9fb:	mov    rdx,rbx
  40b9fe:	call   406170 <fprintf@plt>
  40ba03:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba0a:	lea    rsi,[rip+0x3423e]        # 43fc4f <_IO_stdin_used@@Base+0x11c4f>
  40ba11:	xor    eax,eax
  40ba13:	mov    rdx,rbx
  40ba16:	call   406170 <fprintf@plt>
  40ba1b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba22:	lea    rsi,[rip+0x34248]        # 43fc71 <_IO_stdin_used@@Base+0x11c71>
  40ba29:	xor    eax,eax
  40ba2b:	mov    rdx,rbx
  40ba2e:	call   406170 <fprintf@plt>
  40ba33:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba3a:	lea    rsi,[rip+0x3425a]        # 43fc9b <_IO_stdin_used@@Base+0x11c9b>
  40ba41:	xor    eax,eax
  40ba43:	mov    rdx,rbx
  40ba46:	call   406170 <fprintf@plt>
  40ba4b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba52:	lea    rsi,[rip+0x34264]        # 43fcbd <_IO_stdin_used@@Base+0x11cbd>
  40ba59:	xor    eax,eax
  40ba5b:	mov    rdx,rbx
  40ba5e:	call   406170 <fprintf@plt>
  40ba63:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba6a:	lea    rsi,[rip+0x34278]        # 43fce9 <_IO_stdin_used@@Base+0x11ce9>
  40ba71:	xor    eax,eax
  40ba73:	mov    rdx,rbx
  40ba76:	call   406170 <fprintf@plt>
  40ba7b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40ba82:	mov    edi,0xa
  40ba87:	call   406110 <fputc@plt>
  40ba8c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba93:	lea    rsi,[rip+0x34272]        # 43fd0c <_IO_stdin_used@@Base+0x11d0c>
  40ba9a:	xor    eax,eax
  40ba9c:	mov    rdx,rbx
  40ba9f:	mov    rcx,rbx
  40baa2:	mov    r8,rbx
  40baa5:	call   406170 <fprintf@plt>
  40baaa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bab1:	lea    rsi,[rip+0x3427c]        # 43fd34 <_IO_stdin_used@@Base+0x11d34>
  40bab8:	xor    eax,eax
  40baba:	mov    rdx,rbx
  40babd:	mov    rcx,rbx
  40bac0:	mov    r8,rbx
  40bac3:	call   406170 <fprintf@plt>
  40bac8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bacf:	lea    rsi,[rip+0x34284]        # 43fd5a <_IO_stdin_used@@Base+0x11d5a>
  40bad6:	xor    eax,eax
  40bad8:	mov    rdx,rbx
  40badb:	mov    rcx,rbx
  40bade:	mov    r8,rbx
  40bae1:	mov    r9,rbx
  40bae4:	call   406170 <fprintf@plt>
  40bae9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40baf0:	lea    rsi,[rip+0x3428b]        # 43fd82 <_IO_stdin_used@@Base+0x11d82>
  40baf7:	xor    eax,eax
  40baf9:	mov    rdx,rbx
  40bafc:	mov    rcx,rbx
  40baff:	mov    r8,rbx
  40bb02:	call   406170 <fprintf@plt>
  40bb07:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb0e:	lea    rsi,[rip+0x34297]        # 43fdac <_IO_stdin_used@@Base+0x11dac>
  40bb15:	xor    eax,eax
  40bb17:	mov    rdx,rbx
  40bb1a:	mov    rcx,rbx
  40bb1d:	mov    r8,rbx
  40bb20:	call   406170 <fprintf@plt>
  40bb25:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb2c:	lea    rsi,[rip+0x342a3]        # 43fdd6 <_IO_stdin_used@@Base+0x11dd6>
  40bb33:	xor    eax,eax
  40bb35:	mov    rdx,rbx
  40bb38:	mov    rcx,rbx
  40bb3b:	mov    r8,rbx
  40bb3e:	call   406170 <fprintf@plt>
  40bb43:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb4a:	lea    rsi,[rip+0x342af]        # 43fe00 <_IO_stdin_used@@Base+0x11e00>
  40bb51:	xor    eax,eax
  40bb53:	mov    rdx,rbx
  40bb56:	mov    rcx,rbx
  40bb59:	mov    r8,rbx
  40bb5c:	call   406170 <fprintf@plt>
  40bb61:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb68:	lea    rsi,[rip+0x342b9]        # 43fe28 <_IO_stdin_used@@Base+0x11e28>
  40bb6f:	xor    eax,eax
  40bb71:	mov    rdx,rbx
  40bb74:	mov    rcx,rbx
  40bb77:	mov    r8,rbx
  40bb7a:	call   406170 <fprintf@plt>
  40bb7f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb86:	lea    rsi,[rip+0x342c3]        # 43fe50 <_IO_stdin_used@@Base+0x11e50>
  40bb8d:	xor    eax,eax
  40bb8f:	mov    rdx,rbx
  40bb92:	mov    rcx,rbx
  40bb95:	mov    r8,rbx
  40bb98:	call   406170 <fprintf@plt>
  40bb9d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bba4:	lea    rsi,[rip+0x342cd]        # 43fe78 <_IO_stdin_used@@Base+0x11e78>
  40bbab:	xor    eax,eax
  40bbad:	mov    rdx,rbx
  40bbb0:	mov    rcx,rbx
  40bbb3:	mov    r8,rbx
  40bbb6:	call   406170 <fprintf@plt>
  40bbbb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbc2:	lea    rsi,[rip+0x342d5]        # 43fe9e <_IO_stdin_used@@Base+0x11e9e>
  40bbc9:	xor    eax,eax
  40bbcb:	mov    rdx,rbx
  40bbce:	mov    rcx,rbx
  40bbd1:	mov    r8,rbx
  40bbd4:	call   406170 <fprintf@plt>
  40bbd9:	mov    rsi,QWORD PTR [rbx+0xd0]
  40bbe0:	mov    edi,0xa
  40bbe5:	call   406110 <fputc@plt>
  40bbea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbf1:	lea    rsi,[rip+0x342ce]        # 43fec6 <_IO_stdin_used@@Base+0x11ec6>
  40bbf8:	xor    eax,eax
  40bbfa:	mov    rdx,rbx
  40bbfd:	mov    rcx,rbx
  40bc00:	call   406170 <fprintf@plt>
  40bc05:	mov    rsi,QWORD PTR [rbx+0xd0]
  40bc0c:	mov    edi,0xa
  40bc11:	call   406110 <fputc@plt>
  40bc16:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc1d:	lea    rsi,[rip+0x342b8]        # 43fedc <_IO_stdin_used@@Base+0x11edc>
  40bc24:	xor    eax,eax
  40bc26:	mov    rdx,rbx
  40bc29:	mov    rcx,rbx
  40bc2c:	call   406170 <fprintf@plt>
  40bc31:	mov    rax,QWORD PTR [rbx+0xe0]
  40bc38:	cmp    DWORD PTR [rax+0xac],0x0
  40bc3f:	je     40bc5e <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ce>
  40bc41:	mov    rcx,QWORD PTR [rbx+0xd0]
  40bc48:	lea    rdi,[rip+0x2968c]        # 4352db <_IO_stdin_used@@Base+0x72db>
  40bc4f:	mov    esi,0x24
  40bc54:	mov    edx,0x1
  40bc59:	call   406210 <fwrite@plt>
  40bc5e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc65:	lea    rsi,[rip+0x34286]        # 43fef2 <_IO_stdin_used@@Base+0x11ef2>
  40bc6c:	xor    eax,eax
  40bc6e:	mov    rdx,r14
  40bc71:	call   406170 <fprintf@plt>
  40bc76:	xor    eax,eax
  40bc78:	add    rsp,0x8
  40bc7c:	pop    rbx
  40bc7d:	pop    r14
  40bc7f:	ret    

000000000040bc80 <__flatcc_fb_gen_c_builder@@Base>:
  40bc80:	push   rbp
  40bc81:	mov    rbp,rsp
  40bc84:	push   r15
  40bc86:	push   r14
  40bc88:	push   r13
  40bc8a:	push   r12
  40bc8c:	push   rbx
  40bc8d:	and    rsp,0xffffffffffffffe0
  40bc91:	sub    rsp,0x2a0
  40bc98:	mov    r15,rdi
  40bc9b:	lea    r14,[rdi+0x66]
  40bc9f:	lea    r12,[rdi+0xd0]
  40bca6:	mov    rdi,QWORD PTR [rdi+0xd0]
  40bcad:	mov    rax,QWORD PTR [r15+0xd8]
  40bcb4:	mov    rdx,QWORD PTR [rax+0x118]
  40bcbb:	lea    rsi,[rip+0x34252]        # 43ff14 <_IO_stdin_used@@Base+0x11f14>
  40bcc2:	xor    eax,eax
  40bcc4:	mov    rcx,rdx
  40bcc7:	call   406170 <fprintf@plt>
  40bccc:	mov    rcx,QWORD PTR [r15+0xd0]
  40bcd3:	lea    rdi,[rip+0x23621]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  40bcda:	mov    esi,0x51
  40bcdf:	mov    edx,0x1
  40bce4:	call   406210 <fwrite@plt>
  40bce9:	mov    rdi,QWORD PTR [r15+0xd0]
  40bcf0:	mov    rax,QWORD PTR [r15+0xd8]
  40bcf7:	mov    rdx,QWORD PTR [rax+0x118]
  40bcfe:	lea    rsi,[rip+0x3423a]        # 43ff3f <_IO_stdin_used@@Base+0x11f3f>
  40bd05:	xor    eax,eax
  40bd07:	call   406170 <fprintf@plt>
  40bd0c:	mov    rdi,QWORD PTR [r15+0xd0]
  40bd13:	mov    rax,QWORD PTR [r15+0xd8]
  40bd1a:	mov    rdx,QWORD PTR [rax+0x110]
  40bd21:	lea    rsi,[rip+0x3422c]        # 43ff54 <_IO_stdin_used@@Base+0x11f54>
  40bd28:	xor    eax,eax
  40bd2a:	call   406170 <fprintf@plt>
  40bd2f:	mov    rcx,QWORD PTR [r15+0xd0]
  40bd36:	lea    rbx,[rip+0x297e0]        # 43551d <_IO_stdin_used@@Base+0x751d>
  40bd3d:	mov    esi,0x7
  40bd42:	mov    edx,0x1
  40bd47:	mov    rdi,rbx
  40bd4a:	call   406210 <fwrite@plt>
  40bd4f:	mov    rdi,QWORD PTR [r15+0xd0]
  40bd56:	lea    rsi,[rip+0x2ba6b]        # 4377c8 <_IO_stdin_used@@Base+0x97c8>
  40bd5d:	xor    eax,eax
  40bd5f:	mov    rdx,r14
  40bd62:	call   406170 <fprintf@plt>
  40bd67:	mov    rdi,QWORD PTR [r15+0xd0]
  40bd6e:	lea    rsi,[rip+0x341f7]        # 43ff6c <_IO_stdin_used@@Base+0x11f6c>
  40bd75:	xor    eax,eax
  40bd77:	mov    rdx,r15
  40bd7a:	call   406170 <fprintf@plt>
  40bd7f:	mov    rcx,QWORD PTR [r15+0xd0]
  40bd86:	mov    esi,0x7
  40bd8b:	mov    edx,0x1
  40bd90:	mov    rdi,rbx
  40bd93:	call   406210 <fwrite@plt>
  40bd98:	lea    rsi,[rip+0x3a0d3]        # 445e72 <_IO_stdin_used@@Base+0x17e72>
  40bd9f:	lea    rdx,[rip+0x341e5]        # 43ff8b <_IO_stdin_used@@Base+0x11f8b>
  40bda6:	mov    rdi,r15
  40bda9:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40bdae:	mov    rax,QWORD PTR [r15+0xe0]
  40bdb5:	cmp    DWORD PTR [rax+0xac],0x0
  40bdbc:	je     40bdd8 <__flatcc_fb_gen_c_builder@@Base+0x158>
  40bdbe:	mov    rcx,QWORD PTR [r12]
  40bdc2:	lea    rdi,[rip+0x23728]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  40bdc9:	mov    esi,0x24
  40bdce:	mov    edx,0x1
  40bdd3:	call   406210 <fwrite@plt>
  40bdd8:	mov    rdi,QWORD PTR [r15+0xd0]
  40bddf:	mov    rax,QWORD PTR [r15+0xd8]
  40bde6:	movzx  ecx,WORD PTR [rax+0x20]
  40bdea:	cmp    ecx,0x2
  40bded:	jne    40be0d <__flatcc_fb_gen_c_builder@@Base+0x18d>
  40bdef:	mov    r8d,DWORD PTR [rax+0x18]
  40bdf3:	mov    r9,QWORD PTR [rax+0x10]
  40bdf7:	lea    rsi,[rip+0x29794]        # 435592 <_IO_stdin_used@@Base+0x7592>
  40bdfe:	xor    eax,eax
  40be00:	mov    rdx,r15
  40be03:	mov    rcx,r15
  40be06:	call   406170 <fprintf@plt>
  40be0b:	jmp    40be21 <__flatcc_fb_gen_c_builder@@Base+0x1a1>
  40be0d:	lea    rsi,[rip+0x297af]        # 4355c3 <_IO_stdin_used@@Base+0x75c3>
  40be14:	xor    eax,eax
  40be16:	mov    rdx,r15
  40be19:	mov    rcx,r15
  40be1c:	call   406170 <fprintf@plt>
  40be21:	mov    rdi,QWORD PTR [r15+0xd0]
  40be28:	mov    rax,QWORD PTR [r15+0xd8]
  40be2f:	movzx  ecx,WORD PTR [rax+0x38]
  40be33:	cmp    ecx,0x2
  40be36:	mov    QWORD PTR [rsp],r12
  40be3a:	jne    40be5a <__flatcc_fb_gen_c_builder@@Base+0x1da>
  40be3c:	mov    r8d,DWORD PTR [rax+0x30]
  40be40:	mov    r9,QWORD PTR [rax+0x28]
  40be44:	lea    rsi,[rip+0x297ac]        # 4355f7 <_IO_stdin_used@@Base+0x75f7>
  40be4b:	xor    eax,eax
  40be4d:	mov    rdx,r15
  40be50:	mov    rcx,r15
  40be53:	call   406170 <fprintf@plt>
  40be58:	jmp    40be79 <__flatcc_fb_gen_c_builder@@Base+0x1f9>
  40be5a:	mov    rax,QWORD PTR [r15+0xe0]
  40be61:	mov    r8,QWORD PTR [rax+0x78]
  40be65:	lea    rsi,[rip+0x297bb]        # 435627 <_IO_stdin_used@@Base+0x7627>
  40be6c:	xor    eax,eax
  40be6e:	mov    rdx,r15
  40be71:	mov    rcx,r15
  40be74:	call   406170 <fprintf@plt>
  40be79:	mov    rsi,QWORD PTR [r15+0xd0]
  40be80:	mov    edi,0xa
  40be85:	call   406110 <fputc@plt>
  40be8a:	vxorps xmm0,xmm0,xmm0
  40be8e:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40be97:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40bea0:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40bea9:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40beb2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40beb8:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40bebe:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40bec4:	mov    QWORD PTR [rsp+0x100],0x0
  40bed0:	mov    rax,QWORD PTR [r15+0xd8]
  40bed7:	mov    rbx,QWORD PTR [rax+0x40]
  40bedb:	test   rbx,rbx
  40bede:	mov    QWORD PTR [rsp+0x8],r15
  40bee3:	je     40bf81 <__flatcc_fb_gen_c_builder@@Base+0x301>
  40bee9:	lea    r14,[rsp+0x20]
  40beee:	lea    r15,[rip+0x340a1]        # 43ff96 <_IO_stdin_used@@Base+0x11f96>
  40bef5:	lea    r12,[rip+0x340df]        # 43ffdb <_IO_stdin_used@@Base+0x11fdb>
  40befc:	xor    eax,eax
  40befe:	xchg   ax,ax
  40bf00:	movzx  ecx,WORD PTR [rbx+0x10]
  40bf04:	cmp    ecx,0x3
  40bf07:	jne    40bf5c <__flatcc_fb_gen_c_builder@@Base+0x2dc>
  40bf09:	mov    rdi,QWORD PTR [rbx+0x18]
  40bf0d:	mov    rsi,rbx
  40bf10:	mov    rdx,r14
  40bf13:	vzeroupper 
  40bf16:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40bf1b:	mov    r13,QWORD PTR [rsp+0x8]
  40bf20:	mov    rdi,QWORD PTR [r13+0xd0]
  40bf27:	xor    eax,eax
  40bf29:	mov    rsi,r15
  40bf2c:	mov    rdx,r14
  40bf2f:	mov    rcx,r14
  40bf32:	mov    r8,r14
  40bf35:	call   406170 <fprintf@plt>
  40bf3a:	mov    rdi,QWORD PTR [r13+0xd0]
  40bf41:	xor    eax,eax
  40bf43:	mov    rsi,r12
  40bf46:	mov    rdx,r13
  40bf49:	mov    rcx,r13
  40bf4c:	mov    r8,r14
  40bf4f:	mov    r9,r14
  40bf52:	call   406170 <fprintf@plt>
  40bf57:	mov    eax,0x1
  40bf5c:	mov    rbx,QWORD PTR [rbx]
  40bf5f:	test   rbx,rbx
  40bf62:	jne    40bf00 <__flatcc_fb_gen_c_builder@@Base+0x280>
  40bf64:	test   eax,eax
  40bf66:	mov    r15,QWORD PTR [rsp+0x8]
  40bf6b:	je     40bf81 <__flatcc_fb_gen_c_builder@@Base+0x301>
  40bf6d:	mov    rax,QWORD PTR [rsp]
  40bf71:	mov    rsi,QWORD PTR [rax]
  40bf74:	mov    edi,0xa
  40bf79:	vzeroupper 
  40bf7c:	call   406110 <fputc@plt>
  40bf81:	mov    rax,QWORD PTR [r15+0xd8]
  40bf88:	mov    r12,QWORD PTR [rax+0x48]
  40bf8c:	test   r12,r12
  40bf8f:	je     40c459 <__flatcc_fb_gen_c_builder@@Base+0x7d9>
  40bf95:	lea    rbx,[rsp+0x20]
  40bf9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bfa0:	vxorps xmm0,xmm0,xmm0
  40bfa4:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40bfad:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40bfb6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40bfbf:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40bfc8:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40bfce:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40bfd4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40bfda:	mov    QWORD PTR [rsp+0x100],0x0
  40bfe6:	movzx  eax,WORD PTR [r12+0x10]
  40bfec:	cmp    eax,0x1
  40bfef:	jne    40d795 <__flatcc_fb_gen_c_builder@@Base+0x1b15>
  40bff5:	mov    rdi,QWORD PTR [r12+0x18]
  40bffa:	mov    rsi,r12
  40bffd:	mov    rdx,rbx
  40c000:	vzeroupper 
  40c003:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c008:	mov    rdi,r12
  40c00b:	call   40d9c0 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40c010:	mov    r14d,eax
  40c013:	mov    rdi,QWORD PTR [r15+0xd0]
  40c01a:	xor    eax,eax
  40c01c:	lea    rsi,[rip+0x34085]        # 4400a8 <_IO_stdin_used@@Base+0x120a8>
  40c023:	mov    rdx,rbx
  40c026:	call   406170 <fprintf@plt>
  40c02b:	xor    edx,edx
  40c02d:	mov    r8d,0x1
  40c033:	mov    rdi,r15
  40c036:	mov    rsi,r12
  40c039:	mov    ecx,r14d
  40c03c:	call   40da20 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40c041:	mov    rdi,QWORD PTR [r15+0xd0]
  40c048:	xor    eax,eax
  40c04a:	lea    rsi,[rip+0x34071]        # 4400c2 <_IO_stdin_used@@Base+0x120c2>
  40c051:	mov    rdx,rbx
  40c054:	call   406170 <fprintf@plt>
  40c059:	mov    QWORD PTR [rsp+0x10],r12
  40c05e:	mov    rdi,r12
  40c061:	call   40d9c0 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40c066:	test   eax,eax
  40c068:	jle    40c107 <__flatcc_fb_gen_c_builder@@Base+0x487>
  40c06e:	mov    r12d,eax
  40c071:	xor    r15d,r15d
  40c074:	mov    r13d,r14d
  40c077:	nop    WORD PTR [rax+rax*1+0x0]
  40c080:	test   r14d,r14d
  40c083:	mov    rbx,QWORD PTR [rsp]
  40c087:	je     40c0df <__flatcc_fb_gen_c_builder@@Base+0x45f>
  40c089:	test   r15d,r15d
  40c08c:	je     40c0c0 <__flatcc_fb_gen_c_builder@@Base+0x440>
  40c08e:	mov    rcx,QWORD PTR [rbx]
  40c091:	test   r15b,0x3
  40c095:	jne    40c0c9 <__flatcc_fb_gen_c_builder@@Base+0x449>
  40c097:	cmp    r13d,0x2
  40c09b:	jle    40c0c9 <__flatcc_fb_gen_c_builder@@Base+0x449>
  40c09d:	xor    eax,eax
  40c09f:	mov    rdi,rcx
  40c0a2:	lea    rsi,[rip+0x34243]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40c0a9:	lea    rdx,[rip+0x24ba8]        # 430c58 <_IO_stdin_used@@Base+0x2c58>
  40c0b0:	call   406170 <fprintf@plt>
  40c0b5:	jmp    40c0df <__flatcc_fb_gen_c_builder@@Base+0x45f>
  40c0b7:	nop    WORD PTR [rax+rax*1+0x0]
  40c0c0:	mov    rcx,QWORD PTR [rbx]
  40c0c3:	cmp    r14d,0x5
  40c0c7:	jge    40c09d <__flatcc_fb_gen_c_builder@@Base+0x41d>
  40c0c9:	mov    esi,0x2
  40c0ce:	mov    edx,0x1
  40c0d3:	lea    rdi,[rip+0x39ba2]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40c0da:	call   406210 <fwrite@plt>
  40c0df:	mov    rdi,QWORD PTR [rbx]
  40c0e2:	lea    ebx,[r15+0x1]
  40c0e6:	xor    eax,eax
  40c0e8:	lea    rsi,[rip+0x342bb]        # 4403aa <_IO_stdin_used@@Base+0x123aa>
  40c0ef:	mov    edx,r15d
  40c0f2:	call   406170 <fprintf@plt>
  40c0f7:	add    r13d,0xffffffff
  40c0fb:	mov    r15d,ebx
  40c0fe:	cmp    r12d,ebx
  40c101:	jne    40c080 <__flatcc_fb_gen_c_builder@@Base+0x400>
  40c107:	mov    r15,QWORD PTR [rsp+0x8]
  40c10c:	mov    rsi,QWORD PTR [r15+0xd0]
  40c113:	mov    edi,0xa
  40c118:	call   406110 <fputc@plt>
  40c11d:	mov    rdi,QWORD PTR [r15+0xd0]
  40c124:	xor    eax,eax
  40c126:	lea    rsi,[rip+0x33fae]        # 4400db <_IO_stdin_used@@Base+0x120db>
  40c12d:	lea    rbx,[rsp+0x20]
  40c132:	mov    rdx,rbx
  40c135:	mov    rcx,rbx
  40c138:	mov    r8,rbx
  40c13b:	call   406170 <fprintf@plt>
  40c140:	xor    edx,edx
  40c142:	xor    r8d,r8d
  40c145:	mov    rdi,r15
  40c148:	mov    r12,QWORD PTR [rsp+0x10]
  40c14d:	mov    rsi,r12
  40c150:	mov    ecx,r14d
  40c153:	call   40da20 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40c158:	mov    rcx,QWORD PTR [r15+0xd0]
  40c15f:	mov    esi,0x4
  40c164:	mov    edx,0x1
  40c169:	lea    r13,[rip+0x33f91]        # 440101 <_IO_stdin_used@@Base+0x12101>
  40c170:	mov    rdi,r13
  40c173:	call   406210 <fwrite@plt>
  40c178:	xor    ecx,ecx
  40c17a:	xor    r8d,r8d
  40c17d:	mov    rdi,r15
  40c180:	mov    rsi,r12
  40c183:	mov    edx,r14d
  40c186:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c18b:	mov    rcx,QWORD PTR [r15+0xd0]
  40c192:	mov    esi,0xc
  40c197:	mov    edx,0x1
  40c19c:	lea    r13,[rip+0x29cf7]        # 435e9a <_IO_stdin_used@@Base+0x7e9a>
  40c1a3:	mov    rdi,r13
  40c1a6:	call   406210 <fwrite@plt>
  40c1ab:	mov    rdi,QWORD PTR [r15+0xd0]
  40c1b2:	xor    eax,eax
  40c1b4:	lea    rsi,[rip+0x33f4b]        # 440106 <_IO_stdin_used@@Base+0x12106>
  40c1bb:	mov    rdx,rbx
  40c1be:	mov    rcx,rbx
  40c1c1:	mov    r8,rbx
  40c1c4:	mov    r9,rbx
  40c1c7:	call   406170 <fprintf@plt>
  40c1cc:	mov    rcx,QWORD PTR [r15+0xd0]
  40c1d3:	mov    esi,0x2
  40c1d8:	mov    edx,0x1
  40c1dd:	lea    rax,[rip+0x33f1f]        # 440103 <_IO_stdin_used@@Base+0x12103>
  40c1e4:	mov    rdi,rax
  40c1e7:	call   406210 <fwrite@plt>
  40c1ec:	xor    ecx,ecx
  40c1ee:	mov    r8d,0x1
  40c1f4:	mov    rdi,r15
  40c1f7:	mov    rsi,r12
  40c1fa:	mov    edx,r14d
  40c1fd:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c202:	mov    rcx,QWORD PTR [r15+0xd0]
  40c209:	mov    esi,0xc
  40c20e:	mov    edx,0x1
  40c213:	mov    rdi,r13
  40c216:	call   406210 <fwrite@plt>
  40c21b:	mov    rdi,QWORD PTR [r15+0xd0]
  40c222:	xor    eax,eax
  40c224:	lea    rsi,[rip+0x33f11]        # 44013c <_IO_stdin_used@@Base+0x1213c>
  40c22b:	mov    rdx,rbx
  40c22e:	mov    rcx,rbx
  40c231:	mov    r8,rbx
  40c234:	call   406170 <fprintf@plt>
  40c239:	xor    edx,edx
  40c23b:	xor    r8d,r8d
  40c23e:	mov    rdi,r15
  40c241:	mov    rsi,r12
  40c244:	mov    ecx,r14d
  40c247:	call   40da20 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40c24c:	mov    rcx,QWORD PTR [r15+0xd0]
  40c253:	mov    esi,0x4
  40c258:	mov    edx,0x1
  40c25d:	lea    rdi,[rip+0x33e9d]        # 440101 <_IO_stdin_used@@Base+0x12101>
  40c264:	call   406210 <fwrite@plt>
  40c269:	mov    ecx,0x2
  40c26e:	xor    r8d,r8d
  40c271:	mov    rdi,r15
  40c274:	mov    rsi,r12
  40c277:	mov    edx,r14d
  40c27a:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c27f:	mov    rcx,QWORD PTR [r15+0xd0]
  40c286:	mov    esi,0xc
  40c28b:	mov    edx,0x1
  40c290:	mov    rdi,r13
  40c293:	call   406210 <fwrite@plt>
  40c298:	mov    rdi,QWORD PTR [r15+0xd0]
  40c29f:	xor    eax,eax
  40c2a1:	lea    rsi,[rip+0x33ec0]        # 440168 <_IO_stdin_used@@Base+0x12168>
  40c2a8:	mov    rdx,rbx
  40c2ab:	mov    rcx,rbx
  40c2ae:	mov    r8,rbx
  40c2b1:	mov    r9,rbx
  40c2b4:	call   406170 <fprintf@plt>
  40c2b9:	mov    rcx,QWORD PTR [r15+0xd0]
  40c2c0:	mov    esi,0x2
  40c2c5:	mov    edx,0x1
  40c2ca:	lea    rdi,[rip+0x33e32]        # 440103 <_IO_stdin_used@@Base+0x12103>
  40c2d1:	call   406210 <fwrite@plt>
  40c2d6:	mov    ecx,0x2
  40c2db:	mov    r8d,0x1
  40c2e1:	mov    rdi,r15
  40c2e4:	mov    rsi,r12
  40c2e7:	mov    edx,r14d
  40c2ea:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c2ef:	mov    rcx,QWORD PTR [r15+0xd0]
  40c2f6:	mov    esi,0xc
  40c2fb:	mov    edx,0x1
  40c300:	mov    rdi,r13
  40c303:	call   406210 <fwrite@plt>
  40c308:	mov    rdi,QWORD PTR [r15+0xd0]
  40c30f:	xor    eax,eax
  40c311:	lea    rsi,[rip+0x33e8c]        # 4401a4 <_IO_stdin_used@@Base+0x121a4>
  40c318:	mov    rdx,rbx
  40c31b:	mov    rcx,rbx
  40c31e:	mov    r8,rbx
  40c321:	call   406170 <fprintf@plt>
  40c326:	xor    edx,edx
  40c328:	xor    r8d,r8d
  40c32b:	mov    rdi,r15
  40c32e:	mov    rsi,r12
  40c331:	mov    ecx,r14d
  40c334:	call   40da20 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40c339:	mov    rcx,QWORD PTR [r15+0xd0]
  40c340:	mov    esi,0x4
  40c345:	mov    edx,0x1
  40c34a:	lea    rdi,[rip+0x33db0]        # 440101 <_IO_stdin_used@@Base+0x12101>
  40c351:	call   406210 <fwrite@plt>
  40c356:	mov    ecx,0x1
  40c35b:	xor    r8d,r8d
  40c35e:	mov    rdi,r15
  40c361:	mov    rsi,r12
  40c364:	mov    edx,r14d
  40c367:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c36c:	mov    rcx,QWORD PTR [r15+0xd0]
  40c373:	mov    esi,0xc
  40c378:	mov    edx,0x1
  40c37d:	mov    rdi,r13
  40c380:	call   406210 <fwrite@plt>
  40c385:	mov    rdi,QWORD PTR [r15+0xd0]
  40c38c:	xor    eax,eax
  40c38e:	lea    rsi,[rip+0x33e3d]        # 4401d2 <_IO_stdin_used@@Base+0x121d2>
  40c395:	mov    rdx,rbx
  40c398:	mov    rcx,rbx
  40c39b:	mov    r8,rbx
  40c39e:	mov    r9,rbx
  40c3a1:	call   406170 <fprintf@plt>
  40c3a6:	mov    rcx,QWORD PTR [r15+0xd0]
  40c3ad:	mov    esi,0x2
  40c3b2:	mov    edx,0x1
  40c3b7:	lea    rdi,[rip+0x33d45]        # 440103 <_IO_stdin_used@@Base+0x12103>
  40c3be:	call   406210 <fwrite@plt>
  40c3c3:	mov    ecx,0x1
  40c3c8:	mov    r8d,0x1
  40c3ce:	mov    rdi,r15
  40c3d1:	mov    rsi,r12
  40c3d4:	mov    edx,r14d
  40c3d7:	call   40dd60 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40c3dc:	mov    rcx,QWORD PTR [r15+0xd0]
  40c3e3:	mov    esi,0xc
  40c3e8:	mov    edx,0x1
  40c3ed:	mov    rdi,r13
  40c3f0:	call   406210 <fwrite@plt>
  40c3f5:	mov    rdi,QWORD PTR [r15+0xd0]
  40c3fc:	mov    r9,QWORD PTR [r12+0xb8]
  40c404:	movzx  r10d,WORD PTR [r12+0xb0]
  40c40d:	sub    rsp,0x8
  40c411:	xor    eax,eax
  40c413:	lea    rsi,[rip+0x33df6]        # 440210 <_IO_stdin_used@@Base+0x12210>
  40c41a:	mov    rdx,r15
  40c41d:	mov    rcx,r15
  40c420:	mov    r8,rbx
  40c423:	push   rbx
  40c424:	push   rbx
  40c425:	push   r10
  40c427:	call   406170 <fprintf@plt>
  40c42c:	add    rsp,0x20
  40c430:	mov    rsi,QWORD PTR [r15+0xd0]
  40c437:	mov    edi,0xa
  40c43c:	call   406110 <fputc@plt>
  40c441:	mov    r12,QWORD PTR [r12+0xc0]
  40c449:	test   r12,r12
  40c44c:	jne    40bfa0 <__flatcc_fb_gen_c_builder@@Base+0x320>
  40c452:	mov    rax,QWORD PTR [r15+0xd8]
  40c459:	vxorps xmm0,xmm0,xmm0
  40c45d:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c466:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c46f:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c478:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c481:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c487:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c48d:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c493:	mov    QWORD PTR [rsp+0x100],0x0
  40c49f:	mov    rbx,QWORD PTR [rax+0x40]
  40c4a3:	test   rbx,rbx
  40c4a6:	je     40c524 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
  40c4a8:	lea    r14,[rsp+0x20]
  40c4ad:	lea    r15,[rip+0x34002]        # 4404b6 <_IO_stdin_used@@Base+0x124b6>
  40c4b4:	xor    eax,eax
  40c4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4c0:	movzx  ecx,WORD PTR [rbx+0x10]
  40c4c4:	cmp    ecx,0x4
  40c4c7:	jne    40c4ff <__flatcc_fb_gen_c_builder@@Base+0x87f>
  40c4c9:	mov    rdi,QWORD PTR [rbx+0x18]
  40c4cd:	mov    rsi,rbx
  40c4d0:	mov    rdx,r14
  40c4d3:	vzeroupper 
  40c4d6:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c4db:	mov    rdx,QWORD PTR [rsp+0x8]
  40c4e0:	mov    rdi,QWORD PTR [rdx+0xd0]
  40c4e7:	xor    eax,eax
  40c4e9:	mov    rsi,r15
  40c4ec:	mov    rcx,r14
  40c4ef:	mov    r8,rdx
  40c4f2:	mov    r9,r14
  40c4f5:	call   406170 <fprintf@plt>
  40c4fa:	mov    eax,0x1
  40c4ff:	mov    rbx,QWORD PTR [rbx]
  40c502:	test   rbx,rbx
  40c505:	jne    40c4c0 <__flatcc_fb_gen_c_builder@@Base+0x840>
  40c507:	test   eax,eax
  40c509:	mov    r15,QWORD PTR [rsp+0x8]
  40c50e:	je     40c524 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
  40c510:	mov    rax,QWORD PTR [rsp]
  40c514:	mov    rsi,QWORD PTR [rax]
  40c517:	mov    edi,0xa
  40c51c:	vzeroupper 
  40c51f:	call   406110 <fputc@plt>
  40c524:	mov    rax,QWORD PTR [r15+0xd8]
  40c52b:	mov    r14,QWORD PTR [rax+0x40]
  40c52f:	test   r14,r14
  40c532:	je     40d694 <__flatcc_fb_gen_c_builder@@Base+0x1a14>
  40c538:	lea    r13,[rip+0x33ff9]        # 440538 <_IO_stdin_used@@Base+0x12538>
  40c53f:	mov    DWORD PTR [rsp+0x18],0x0
  40c547:	nop    WORD PTR [rax+rax*1+0x0]
  40c550:	cmp    WORD PTR [r14+0x10],0x0
  40c556:	jne    40c78e <__flatcc_fb_gen_c_builder@@Base+0xb0e>
  40c55c:	vxorps xmm0,xmm0,xmm0
  40c560:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c569:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c572:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c57b:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c584:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c58a:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c590:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c596:	mov    QWORD PTR [rsp+0x100],0x0
  40c5a2:	mov    rax,QWORD PTR [r14+0x28]
  40c5a6:	xor    r12d,r12d
  40c5a9:	test   rax,rax
  40c5ac:	je     40c5c6 <__flatcc_fb_gen_c_builder@@Base+0x946>
  40c5ae:	xchg   ax,ax
  40c5b0:	mov    ecx,DWORD PTR [rax+0x70]
  40c5b3:	shr    ecx,0x2
  40c5b6:	not    ecx
  40c5b8:	and    ecx,0x1
  40c5bb:	add    r12d,ecx
  40c5be:	mov    rax,QWORD PTR [rax]
  40c5c1:	test   rax,rax
  40c5c4:	jne    40c5b0 <__flatcc_fb_gen_c_builder@@Base+0x930>
  40c5c6:	mov    rdi,QWORD PTR [r14+0x18]
  40c5ca:	mov    rsi,r14
  40c5cd:	lea    rbx,[rsp+0x20]
  40c5d2:	mov    rdx,rbx
  40c5d5:	vzeroupper 
  40c5d8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c5dd:	mov    rdi,QWORD PTR [r15+0xd0]
  40c5e4:	xor    eax,eax
  40c5e6:	lea    rsi,[rip+0x33f1e]        # 44050b <_IO_stdin_used@@Base+0x1250b>
  40c5ed:	mov    rdx,r15
  40c5f0:	mov    rcx,rbx
  40c5f3:	call   406170 <fprintf@plt>
  40c5f8:	mov    rbx,QWORD PTR [r14+0x28]
  40c5fc:	test   rbx,rbx
  40c5ff:	je     40c6e0 <__flatcc_fb_gen_c_builder@@Base+0xa60>
  40c605:	xor    r15d,r15d
  40c608:	nop    DWORD PTR [rax+rax*1+0x0]
  40c610:	movzx  eax,WORD PTR [rbx+0x70]
  40c614:	and    eax,0x104
  40c619:	cmp    eax,0x100
  40c61e:	jne    40c6ab <__flatcc_fb_gen_c_builder@@Base+0xa2b>
  40c624:	test   r15d,r15d
  40c627:	jle    40c660 <__flatcc_fb_gen_c_builder@@Base+0x9e0>
  40c629:	test   r12d,r12d
  40c62c:	je     40c690 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40c62e:	mov    rax,QWORD PTR [rsp]
  40c632:	mov    rcx,QWORD PTR [rax]
  40c635:	test   r15b,0x3
  40c639:	jne    40c673 <__flatcc_fb_gen_c_builder@@Base+0x9f3>
  40c63b:	mov    eax,r12d
  40c63e:	sub    eax,r15d
  40c641:	cmp    eax,0x2
  40c644:	jle    40c673 <__flatcc_fb_gen_c_builder@@Base+0x9f3>
  40c646:	xor    eax,eax
  40c648:	mov    rdi,rcx
  40c64b:	lea    rsi,[rip+0x33c9a]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40c652:	lea    rdx,[rip+0x22ee5]        # 42f53e <_IO_stdin_used@@Base+0x153e>
  40c659:	call   406170 <fprintf@plt>
  40c65e:	jmp    40c690 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40c660:	mov    rax,QWORD PTR [rsp]
  40c664:	mov    rsi,QWORD PTR [rax]
  40c667:	mov    edi,0x20
  40c66c:	call   406110 <fputc@plt>
  40c671:	jmp    40c690 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40c673:	mov    esi,0x2
  40c678:	mov    edx,0x1
  40c67d:	lea    rdi,[rip+0x395f8]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40c684:	call   406210 <fwrite@plt>
  40c689:	nop    DWORD PTR [rax+0x0]
  40c690:	mov    rax,QWORD PTR [rsp]
  40c694:	mov    rdi,QWORD PTR [rax]
  40c697:	mov    edx,DWORD PTR [rbx+0x88]
  40c69d:	xor    eax,eax
  40c69f:	mov    rsi,r13
  40c6a2:	call   406170 <fprintf@plt>
  40c6a7:	add    r15d,0x1
  40c6ab:	mov    rbx,QWORD PTR [rbx]
  40c6ae:	test   rbx,rbx
  40c6b1:	jne    40c610 <__flatcc_fb_gen_c_builder@@Base+0x990>
  40c6b7:	mov    rax,QWORD PTR [rsp]
  40c6bb:	mov    rcx,QWORD PTR [rax]
  40c6be:	test   r15d,r15d
  40c6c1:	jle    40c6e9 <__flatcc_fb_gen_c_builder@@Base+0xa69>
  40c6c3:	mov    esi,0x7
  40c6c8:	mov    edx,0x1
  40c6cd:	lea    rdi,[rip+0x33e67]        # 44053b <_IO_stdin_used@@Base+0x1253b>
  40c6d4:	call   406210 <fwrite@plt>
  40c6d9:	mov    r15,QWORD PTR [rsp+0x8]
  40c6de:	jmp    40c704 <__flatcc_fb_gen_c_builder@@Base+0xa84>
  40c6e0:	mov    rax,QWORD PTR [rsp]
  40c6e4:	mov    rcx,QWORD PTR [rax]
  40c6e7:	jmp    40c6ee <__flatcc_fb_gen_c_builder@@Base+0xa6e>
  40c6e9:	mov    r15,QWORD PTR [rsp+0x8]
  40c6ee:	mov    esi,0x6
  40c6f3:	mov    edx,0x1
  40c6f8:	lea    rdi,[rip+0x33e3d]        # 44053c <_IO_stdin_used@@Base+0x1253c>
  40c6ff:	call   406210 <fwrite@plt>
  40c704:	vxorps xmm0,xmm0,xmm0
  40c708:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c711:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c71a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c723:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c72c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c732:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c738:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c73e:	mov    QWORD PTR [rsp+0x100],0x0
  40c74a:	mov    rdi,QWORD PTR [r14+0x18]
  40c74e:	mov    rsi,r14
  40c751:	lea    rbx,[rsp+0x20]
  40c756:	mov    rdx,rbx
  40c759:	vzeroupper 
  40c75c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c761:	mov    rdi,QWORD PTR [r15+0xd0]
  40c768:	mov    r9,QWORD PTR [r14+0xa8]
  40c76f:	xor    eax,eax
  40c771:	lea    rsi,[rip+0x33dcb]        # 440543 <_IO_stdin_used@@Base+0x12543>
  40c778:	mov    rdx,r15
  40c77b:	mov    rcx,r15
  40c77e:	mov    r8,rbx
  40c781:	call   406170 <fprintf@plt>
  40c786:	mov    DWORD PTR [rsp+0x18],0x1
  40c78e:	mov    r14,QWORD PTR [r14]
  40c791:	test   r14,r14
  40c794:	jne    40c550 <__flatcc_fb_gen_c_builder@@Base+0x8d0>
  40c79a:	mov    rax,QWORD PTR [r15+0xd8]
  40c7a1:	mov    r15,QWORD PTR [rax+0x40]
  40c7a5:	test   r15,r15
  40c7a8:	je     40cc94 <__flatcc_fb_gen_c_builder@@Base+0x1014>
  40c7ae:	lea    r13,[rsp+0x120]
  40c7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7c0:	cmp    WORD PTR [r15+0x10],0x0
  40c7c6:	jne    40cc88 <__flatcc_fb_gen_c_builder@@Base+0x1008>
  40c7cc:	vxorps xmm0,xmm0,xmm0
  40c7d0:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40c7d9:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40c7e2:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40c7eb:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40c7f4:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40c7fd:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40c806:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40c80f:	mov    QWORD PTR [rsp+0x200],0x0
  40c81b:	mov    rdi,QWORD PTR [r15+0x18]
  40c81f:	mov    rsi,r15
  40c822:	mov    rdx,r13
  40c825:	vzeroupper 
  40c828:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c82d:	mov    rax,QWORD PTR [r15+0x28]
  40c831:	xor    r12d,r12d
  40c834:	test   rax,rax
  40c837:	je     40c858 <__flatcc_fb_gen_c_builder@@Base+0xbd8>
  40c839:	mov    rbx,QWORD PTR [rsp]
  40c83d:	nop    DWORD PTR [rax]
  40c840:	mov    ecx,DWORD PTR [rax+0x70]
  40c843:	shr    ecx,0x2
  40c846:	not    ecx
  40c848:	and    ecx,0x1
  40c84b:	add    r12d,ecx
  40c84e:	mov    rax,QWORD PTR [rax]
  40c851:	test   rax,rax
  40c854:	jne    40c840 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
  40c856:	jmp    40c85c <__flatcc_fb_gen_c_builder@@Base+0xbdc>
  40c858:	mov    rbx,QWORD PTR [rsp]
  40c85c:	mov    rdi,QWORD PTR [rbx]
  40c85f:	xor    eax,eax
  40c861:	lea    rsi,[rip+0x33840]        # 4400a8 <_IO_stdin_used@@Base+0x120a8>
  40c868:	mov    rdx,r13
  40c86b:	call   406170 <fprintf@plt>
  40c870:	vxorps xmm0,xmm0,xmm0
  40c874:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c87d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c886:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c88f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c898:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c89e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c8a4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c8aa:	mov    QWORD PTR [rsp+0x100],0x0
  40c8b6:	mov    r13,QWORD PTR [r15+0x28]
  40c8ba:	test   r13,r13
  40c8bd:	je     40cb8d <__flatcc_fb_gen_c_builder@@Base+0xf0d>
  40c8c3:	xor    r14d,r14d
  40c8c6:	mov    QWORD PTR [rsp+0x10],r15
  40c8cb:	jmp    40c930 <__flatcc_fb_gen_c_builder@@Base+0xcb0>
  40c8cd:	mov    rdi,QWORD PTR [rbx]
  40c8d0:	mov    rcx,QWORD PTR [r13+0x88]
  40c8d7:	xor    eax,eax
  40c8d9:	lea    rsi,[rip+0x33cf1]        # 4405d1 <_IO_stdin_used@@Base+0x125d1>
  40c8e0:	lea    rdx,[rsp+0x20]
  40c8e5:	jmp    40ca96 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40c8ea:	mov    rdi,QWORD PTR [rbx]
  40c8ed:	mov    rcx,QWORD PTR [r13+0x88]
  40c8f4:	xor    eax,eax
  40c8f6:	lea    rsi,[rip+0x33ca9]        # 4405a6 <_IO_stdin_used@@Base+0x125a6>
  40c8fd:	lea    rdx,[rsp+0x20]
  40c902:	jmp    40ca96 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40c907:	mov    rdi,QWORD PTR [rbx]
  40c90a:	mov    rcx,QWORD PTR [r13+0x88]
  40c911:	xor    eax,eax
  40c913:	lea    rsi,[rip+0x33c98]        # 4405b2 <_IO_stdin_used@@Base+0x125b2>
  40c91a:	lea    rdx,[rsp+0x20]
  40c91f:	jmp    40ca96 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40c924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c92e:	xchg   ax,ax
  40c930:	test   BYTE PTR [r13+0x70],0x4
  40c935:	jne    40cb80 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40c93b:	test   r12d,r12d
  40c93e:	je     40c998 <__flatcc_fb_gen_c_builder@@Base+0xd18>
  40c940:	test   r14d,r14d
  40c943:	je     40c976 <__flatcc_fb_gen_c_builder@@Base+0xcf6>
  40c945:	mov    rcx,QWORD PTR [rbx]
  40c948:	test   r14b,0x3
  40c94c:	jne    40c97f <__flatcc_fb_gen_c_builder@@Base+0xcff>
  40c94e:	mov    eax,r12d
  40c951:	sub    eax,r14d
  40c954:	cmp    eax,0x2
  40c957:	jle    40c97f <__flatcc_fb_gen_c_builder@@Base+0xcff>
  40c959:	xor    eax,eax
  40c95b:	mov    rdi,rcx
  40c95e:	lea    rsi,[rip+0x33987]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40c965:	lea    rdx,[rip+0x242ec]        # 430c58 <_IO_stdin_used@@Base+0x2c58>
  40c96c:	vzeroupper 
  40c96f:	call   406170 <fprintf@plt>
  40c974:	jmp    40c998 <__flatcc_fb_gen_c_builder@@Base+0xd18>
  40c976:	mov    rcx,QWORD PTR [rbx]
  40c979:	cmp    r12d,0x5
  40c97d:	jge    40c959 <__flatcc_fb_gen_c_builder@@Base+0xcd9>
  40c97f:	mov    esi,0x2
  40c984:	mov    edx,0x1
  40c989:	lea    rdi,[rip+0x392ec]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40c990:	vzeroupper 
  40c993:	call   406210 <fwrite@plt>
  40c998:	mov    eax,DWORD PTR [r13+0x28]
  40c99c:	add    eax,0xfffffff9
  40c99f:	movzx  ecx,ax
  40c9a2:	cmp    ecx,0x8
  40c9a5:	ja     40d700 <__flatcc_fb_gen_c_builder@@Base+0x1a80>
  40c9ab:	add    r14d,0x1
  40c9af:	movzx  eax,ax
  40c9b2:	lea    rcx,[rip+0x2ad7b]        # 437734 <_IO_stdin_used@@Base+0x9734>
  40c9b9:	movsxd rax,DWORD PTR [rcx+rax*4]
  40c9bd:	add    rax,rcx
  40c9c0:	jmp    rax
  40c9c2:	mov    eax,DWORD PTR [r13+0x18]
  40c9c6:	add    eax,0xffffffff
  40c9c9:	cmp    eax,0xb
  40c9cc:	jae    40d8de <__flatcc_fb_gen_c_builder@@Base+0x1c5e>
  40c9d2:	cdqe   
  40c9d4:	lea    rcx,[rip+0x44215]        # 450bf0 <fb_value_set_deleted@@Base+0x6190>
  40c9db:	mov    rcx,QWORD PTR [rcx+rax*8]
  40c9df:	mov    rdx,QWORD PTR [rsp+0x8]
  40c9e4:	mov    rdi,QWORD PTR [rdx+0xd0]
  40c9eb:	mov    r8,QWORD PTR [r13+0x88]
  40c9f2:	xor    eax,eax
  40c9f4:	lea    rsi,[rip+0x33cb1]        # 4406ac <_IO_stdin_used@@Base+0x126ac>
  40c9fb:	vzeroupper 
  40c9fe:	call   406170 <fprintf@plt>
  40ca03:	jmp    40cb80 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40ca08:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca0d:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ca14:	mov    rcx,QWORD PTR [r13+0x88]
  40ca1b:	xor    eax,eax
  40ca1d:	lea    rsi,[rip+0x33c9d]        # 4406c1 <_IO_stdin_used@@Base+0x126c1>
  40ca24:	jmp    40ca96 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40ca26:	mov    ecx,DWORD PTR [r13+0x18]
  40ca2a:	lea    eax,[rcx-0x1]
  40ca2d:	cmp    eax,0xb
  40ca30:	jae    40d800 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40ca36:	cmp    ecx,0x5
  40ca39:	lea    rdx,[rip+0x22aff]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40ca40:	mov    rsi,QWORD PTR [rsp+0x8]
  40ca45:	cmove  rdx,rsi
  40ca49:	cdqe   
  40ca4b:	lea    rcx,[rip+0x4413e]        # 450b90 <fb_value_set_deleted@@Base+0x6130>
  40ca52:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ca56:	mov    rdi,QWORD PTR [rsi+0xd0]
  40ca5d:	mov    r8,QWORD PTR [r13+0x88]
  40ca64:	xor    eax,eax
  40ca66:	lea    rsi,[rip+0x33c34]        # 4406a1 <_IO_stdin_used@@Base+0x126a1>
  40ca6d:	vzeroupper 
  40ca70:	call   406170 <fprintf@plt>
  40ca75:	jmp    40cb80 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40ca7a:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca7f:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ca86:	mov    rcx,QWORD PTR [r13+0x88]
  40ca8d:	xor    eax,eax
  40ca8f:	lea    rsi,[rip+0x33c40]        # 4406d6 <_IO_stdin_used@@Base+0x126d6>
  40ca96:	vzeroupper 
  40ca99:	call   406170 <fprintf@plt>
  40ca9e:	jmp    40cb80 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40caa3:	mov    r15,rbx
  40caa6:	mov    rsi,QWORD PTR [r13+0x18]
  40caaa:	mov    rdi,QWORD PTR [rsi+0x18]
  40caae:	lea    rbx,[rsp+0x20]
  40cab3:	mov    rdx,rbx
  40cab6:	vzeroupper 
  40cab9:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cabe:	mov    rax,QWORD PTR [r13+0x18]
  40cac2:	movzx  eax,WORD PTR [rax+0x10]
  40cac6:	cmp    eax,0x2
  40cac9:	jb     40cae1 <__flatcc_fb_gen_c_builder@@Base+0xe61>
  40cacb:	movzx  eax,ax
  40cace:	cmp    eax,0x4
  40cad1:	je     40cb50 <__flatcc_fb_gen_c_builder@@Base+0xed0>
  40cad3:	cmp    eax,0x3
  40cad6:	lea    rbx,[rsp+0x20]
  40cadb:	jne    40d92a <__flatcc_fb_gen_c_builder@@Base+0x1caa>
  40cae1:	mov    rdi,QWORD PTR [r15]
  40cae4:	mov    rcx,QWORD PTR [r13+0x88]
  40caeb:	xor    eax,eax
  40caed:	lea    rsi,[rip+0x33bba]        # 4406ae <_IO_stdin_used@@Base+0x126ae>
  40caf4:	mov    rdx,rbx
  40caf7:	mov    rbx,r15
  40cafa:	jmp    40cb6b <__flatcc_fb_gen_c_builder@@Base+0xeeb>
  40cafc:	mov    rsi,QWORD PTR [r13+0x18]
  40cb00:	mov    rdi,QWORD PTR [rsi+0x18]
  40cb04:	lea    rdx,[rsp+0x20]
  40cb09:	vzeroupper 
  40cb0c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cb11:	mov    rax,QWORD PTR [r13+0x18]
  40cb15:	movzx  eax,WORD PTR [rax+0x10]
  40cb19:	cmp    rax,0x4
  40cb1d:	ja     40d7b7 <__flatcc_fb_gen_c_builder@@Base+0x1b37>
  40cb23:	lea    rcx,[rip+0x2ac2e]        # 437758 <_IO_stdin_used@@Base+0x9758>
  40cb2a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cb2e:	add    rax,rcx
  40cb31:	jmp    rax
  40cb33:	mov    rdi,QWORD PTR [rbx]
  40cb36:	mov    rcx,QWORD PTR [r13+0x88]
  40cb3d:	xor    eax,eax
  40cb3f:	lea    rsi,[rip+0x33a7c]        # 4405c2 <_IO_stdin_used@@Base+0x125c2>
  40cb46:	lea    rdx,[rsp+0x20]
  40cb4b:	jmp    40ca96 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40cb50:	mov    rbx,r15
  40cb53:	mov    rdi,QWORD PTR [r15]
  40cb56:	mov    rcx,QWORD PTR [r13+0x88]
  40cb5d:	xor    eax,eax
  40cb5f:	lea    rsi,[rip+0x33af6]        # 44065c <_IO_stdin_used@@Base+0x1265c>
  40cb66:	lea    rdx,[rsp+0x20]
  40cb6b:	call   406170 <fprintf@plt>
  40cb70:	mov    r15,QWORD PTR [rsp+0x10]
  40cb75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb7f:	nop
  40cb80:	mov    r13,QWORD PTR [r13+0x0]
  40cb84:	test   r13,r13
  40cb87:	jne    40c930 <__flatcc_fb_gen_c_builder@@Base+0xcb0>
  40cb8d:	mov    rdi,QWORD PTR [rbx]
  40cb90:	xor    eax,eax
  40cb92:	lea    rsi,[rip+0x33529]        # 4400c2 <_IO_stdin_used@@Base+0x120c2>
  40cb99:	lea    r13,[rsp+0x120]
  40cba1:	mov    rdx,r13
  40cba4:	vzeroupper 
  40cba7:	call   406170 <fprintf@plt>
  40cbac:	mov    rbx,QWORD PTR [r15+0x28]
  40cbb0:	test   rbx,rbx
  40cbb3:	je     40cc51 <__flatcc_fb_gen_c_builder@@Base+0xfd1>
  40cbb9:	xor    r14d,r14d
  40cbbc:	nop    DWORD PTR [rax+0x0]
  40cbc0:	test   BYTE PTR [rbx+0x70],0x4
  40cbc4:	jne    40cc45 <__flatcc_fb_gen_c_builder@@Base+0xfc5>
  40cbc6:	test   r12d,r12d
  40cbc9:	je     40cc25 <__flatcc_fb_gen_c_builder@@Base+0xfa5>
  40cbcb:	test   r14d,r14d
  40cbce:	je     40cc02 <__flatcc_fb_gen_c_builder@@Base+0xf82>
  40cbd0:	mov    rax,QWORD PTR [rsp]
  40cbd4:	mov    rcx,QWORD PTR [rax]
  40cbd7:	test   r14b,0x3
  40cbdb:	jne    40cc0f <__flatcc_fb_gen_c_builder@@Base+0xf8f>
  40cbdd:	mov    eax,r12d
  40cbe0:	sub    eax,r14d
  40cbe3:	cmp    eax,0x2
  40cbe6:	jle    40cc0f <__flatcc_fb_gen_c_builder@@Base+0xf8f>
  40cbe8:	xor    eax,eax
  40cbea:	mov    rdi,rcx
  40cbed:	lea    rsi,[rip+0x336f8]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40cbf4:	lea    rdx,[rip+0x2405d]        # 430c58 <_IO_stdin_used@@Base+0x2c58>
  40cbfb:	call   406170 <fprintf@plt>
  40cc00:	jmp    40cc25 <__flatcc_fb_gen_c_builder@@Base+0xfa5>
  40cc02:	mov    rax,QWORD PTR [rsp]
  40cc06:	mov    rcx,QWORD PTR [rax]
  40cc09:	cmp    r12d,0x5
  40cc0d:	jge    40cbe8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
  40cc0f:	mov    esi,0x2
  40cc14:	mov    edx,0x1
  40cc19:	lea    rdi,[rip+0x3905c]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40cc20:	call   406210 <fwrite@plt>
  40cc25:	mov    rax,QWORD PTR [rsp]
  40cc29:	mov    rdi,QWORD PTR [rax]
  40cc2c:	mov    rdx,QWORD PTR [rbx+0x88]
  40cc33:	xor    eax,eax
  40cc35:	lea    rsi,[rip+0x33a6a]        # 4406a6 <_IO_stdin_used@@Base+0x126a6>
  40cc3c:	call   406170 <fprintf@plt>
  40cc41:	add    r14d,0x1
  40cc45:	mov    rbx,QWORD PTR [rbx]
  40cc48:	test   rbx,rbx
  40cc4b:	jne    40cbc0 <__flatcc_fb_gen_c_builder@@Base+0xf40>
  40cc51:	mov    rbx,QWORD PTR [rsp+0x8]
  40cc56:	mov    rsi,QWORD PTR [rbx+0xd0]
  40cc5d:	mov    edi,0xa
  40cc62:	call   406110 <fputc@plt>
  40cc67:	mov    rdi,QWORD PTR [rbx+0xd0]
  40cc6e:	xor    eax,eax
  40cc70:	lea    rsi,[rip+0x338eb]        # 440562 <_IO_stdin_used@@Base+0x12562>
  40cc77:	mov    rdx,r13
  40cc7a:	mov    rcx,r13
  40cc7d:	mov    r8,rbx
  40cc80:	mov    r9,r13
  40cc83:	call   406170 <fprintf@plt>
  40cc88:	mov    r15,QWORD PTR [r15]
  40cc8b:	test   r15,r15
  40cc8e:	jne    40c7c0 <__flatcc_fb_gen_c_builder@@Base+0xb40>
  40cc94:	cmp    DWORD PTR [rsp+0x18],0x0
  40cc99:	mov    r15,QWORD PTR [rsp+0x8]
  40cc9e:	je     40d694 <__flatcc_fb_gen_c_builder@@Base+0x1a14>
  40cca4:	mov    rsi,QWORD PTR [r15+0xd0]
  40ccab:	mov    edi,0xa
  40ccb0:	vzeroupper 
  40ccb3:	call   406110 <fputc@plt>
  40ccb8:	mov    rdi,r15
  40ccbb:	call   40e310 <__flatcc_fb_gen_c_builder@@Base+0x2690>
  40ccc0:	mov    rax,QWORD PTR [r15+0xd8]
  40ccc7:	mov    r12,QWORD PTR [rax+0x40]
  40cccb:	test   r12,r12
  40ccce:	mov    rbx,QWORD PTR [rsp]
  40ccd2:	je     40d6a3 <__flatcc_fb_gen_c_builder@@Base+0x1a23>
  40ccd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cce0:	cmp    WORD PTR [r12+0x10],0x0
  40cce7:	jne    40d685 <__flatcc_fb_gen_c_builder@@Base+0x1a05>
  40cced:	vxorps xmm0,xmm0,xmm0
  40ccf1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40ccfa:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40cd03:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40cd0c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40cd15:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40cd1b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40cd21:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40cd27:	mov    QWORD PTR [rsp+0x100],0x0
  40cd33:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40cd3c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40cd45:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40cd4e:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40cd57:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40cd60:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40cd69:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40cd72:	mov    QWORD PTR [rsp+0x200],0x0
  40cd7e:	mov    rdi,QWORD PTR [r12+0x18]
  40cd83:	mov    rsi,r12
  40cd86:	lea    rdx,[rsp+0x20]
  40cd8b:	vzeroupper 
  40cd8e:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cd93:	mov    QWORD PTR [rsp+0x118],r12
  40cd9b:	mov    r12,QWORD PTR [r12+0x28]
  40cda0:	test   r12,r12
  40cda3:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40cda5:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40cdaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cdb0:	mov    rdi,QWORD PTR [rbx]
  40cdb3:	xor    eax,eax
  40cdb5:	lea    rsi,[rip+0x33b36]        # 4408f2 <_IO_stdin_used@@Base+0x128f2>
  40cdbc:	lea    rdx,[rsp+0x20]
  40cdc1:	mov    ecx,r13d
  40cdc4:	mov    r8,r14
  40cdc7:	call   406170 <fprintf@plt>
  40cdcc:	mov    r12,QWORD PTR [r12]
  40cdd0:	test   r12,r12
  40cdd3:	je     40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40cdd9:	mov    rax,QWORD PTR [r12+0x8]
  40cdde:	mov    r13d,DWORD PTR [rax+0x8]
  40cde2:	mov    r14,QWORD PTR [rax]
  40cde5:	test   BYTE PTR [r12+0x70],0x4
  40cdeb:	jne    40cdb0 <__flatcc_fb_gen_c_builder@@Base+0x1130>
  40cded:	mov    eax,DWORD PTR [r12+0x28]
  40cdf2:	add    eax,0xfffffff9
  40cdf5:	movzx  ecx,ax
  40cdf8:	cmp    ecx,0x8
  40cdfb:	ja     40d74c <__flatcc_fb_gen_c_builder@@Base+0x1acc>
  40ce01:	movzx  eax,ax
  40ce04:	lea    rcx,[rip+0x2a961]        # 43776c <_IO_stdin_used@@Base+0x976c>
  40ce0b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40ce0f:	add    rax,rcx
  40ce12:	jmp    rax
  40ce14:	mov    ecx,DWORD PTR [r12+0x18]
  40ce19:	lea    eax,[rcx-0x1]
  40ce1c:	cmp    eax,0xb
  40ce1f:	jae    40d800 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40ce25:	cmp    ecx,0x5
  40ce28:	lea    rbx,[rip+0x22710]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40ce2f:	mov    r11,rbx
  40ce32:	cmove  r11,r15
  40ce36:	movsxd r10,eax
  40ce39:	mov    rdi,QWORD PTR [r15+0xd0]
  40ce40:	mov    rcx,QWORD PTR [r12+0x88]
  40ce48:	mov    eax,0x0
  40ce4d:	lea    rsi,[rip+0x33b19]        # 44096d <_IO_stdin_used@@Base+0x1296d>
  40ce54:	mov    rdx,r15
  40ce57:	mov    r8,r15
  40ce5a:	lea    r9,[rsp+0x20]
  40ce5f:	lea    rbx,[rip+0x43d2a]        # 450b90 <fb_value_set_deleted@@Base+0x6130>
  40ce66:	push   QWORD PTR [rbx+r10*8]
  40ce6a:	push   r11
  40ce6c:	lea    rbx,[rip+0x43d7d]        # 450bf0 <fb_value_set_deleted@@Base+0x6190>
  40ce73:	push   QWORD PTR [rbx+r10*8]
  40ce77:	push   r15
  40ce79:	push   r14
  40ce7b:	push   r13
  40ce7d:	call   406170 <fprintf@plt>
  40ce82:	add    rsp,0x30
  40ce86:	mov    rsi,QWORD PTR [r12+0x90]
  40ce8e:	test   rsi,rsi
  40ce91:	mov    rbx,QWORD PTR [rsp]
  40ce95:	je     40d2e4 <__flatcc_fb_gen_c_builder@@Base+0x1664>
  40ce9b:	movzx  eax,WORD PTR [rsi+0x10]
  40ce9f:	cmp    eax,0x1
  40cea2:	je     40d125 <__flatcc_fb_gen_c_builder@@Base+0x14a5>
  40cea8:	test   ax,ax
  40ceab:	jne    40d973 <__flatcc_fb_gen_c_builder@@Base+0x1cf3>
  40ceb1:	mov    rdi,QWORD PTR [rsi+0x18]
  40ceb5:	lea    rbx,[rsp+0x120]
  40cebd:	mov    rdx,rbx
  40cec0:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cec5:	mov    rdi,QWORD PTR [r15+0xd0]
  40cecc:	mov    eax,0x0
  40ced1:	lea    rsi,[rip+0x33acc]        # 4409a4 <_IO_stdin_used@@Base+0x129a4>
  40ced8:	mov    rdx,r15
  40cedb:	mov    rcx,r15
  40cede:	lea    r8,[rsp+0x20]
  40cee3:	mov    r9d,r13d
  40cee6:	push   rbx
  40cee7:	push   rbx
  40cee8:	push   rbx
  40cee9:	push   r14
  40ceeb:	call   406170 <fprintf@plt>
  40cef0:	add    rsp,0x20
  40cef4:	mov    rbx,QWORD PTR [rsp]
  40cef8:	mov    r12,QWORD PTR [r12]
  40cefc:	test   r12,r12
  40ceff:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40cf05:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40cf0a:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf11:	mov    rcx,QWORD PTR [r12+0x88]
  40cf19:	xor    eax,eax
  40cf1b:	lea    rsi,[rip+0x33b92]        # 440ab4 <_IO_stdin_used@@Base+0x12ab4>
  40cf22:	jmp    40d015 <__flatcc_fb_gen_c_builder@@Base+0x1395>
  40cf27:	mov    QWORD PTR [rsp+0x18],r13
  40cf2c:	mov    edi,DWORD PTR [r12+0x18]
  40cf31:	lea    eax,[rdi-0x1]
  40cf34:	cmp    eax,0xb
  40cf37:	jae    40d800 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40cf3d:	cmp    edi,0x5
  40cf40:	lea    r13,[rip+0x225f8]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40cf47:	cmove  r13,r15
  40cf4b:	cdqe   
  40cf4d:	lea    rcx,[rip+0x43c3c]        # 450b90 <fb_value_set_deleted@@Base+0x6130>
  40cf54:	mov    r15,QWORD PTR [rcx+rax*8]
  40cf58:	lea    rcx,[rip+0x43c91]        # 450bf0 <fb_value_set_deleted@@Base+0x6190>
  40cf5f:	mov    rax,QWORD PTR [rcx+rax*8]
  40cf63:	mov    QWORD PTR [rsp+0x10],rax
  40cf68:	lea    rsi,[r12+0x48]
  40cf6d:	lea    rax,[rsp+0x220]
  40cf75:	mov    rdx,rax
  40cf78:	call   40e5a0 <__flatcc_fb_gen_c_builder@@Base+0x2920>
  40cf7d:	mov    rax,QWORD PTR [rsp+0x8]
  40cf82:	mov    rdi,QWORD PTR [rax+0xd0]
  40cf89:	mov    rcx,QWORD PTR [r12+0x88]
  40cf91:	movzx  r10d,WORD PTR [r12+0x72]
  40cf97:	sub    rsp,0x8
  40cf9b:	mov    eax,0x0
  40cfa0:	lea    rsi,[rip+0x33981]        # 440928 <_IO_stdin_used@@Base+0x12928>
  40cfa7:	mov    rdx,QWORD PTR [rsp+0x10]
  40cfac:	mov    r8,QWORD PTR [rsp+0x10]
  40cfb1:	lea    r9,[rsp+0x28]
  40cfb6:	lea    rbx,[rsp+0x228]
  40cfbe:	push   rbx
  40cfbf:	push   r10
  40cfc1:	push   QWORD PTR [r12+0x80]
  40cfc9:	push   r15
  40cfcb:	mov    r15,QWORD PTR [rsp+0x30]
  40cfd0:	push   r13
  40cfd2:	push   QWORD PTR [rsp+0x40]
  40cfd6:	push   r15
  40cfd8:	push   r14
  40cfda:	push   QWORD PTR [rsp+0x60]
  40cfde:	call   406170 <fprintf@plt>
  40cfe3:	add    rsp,0x50
  40cfe7:	mov    rbx,QWORD PTR [rsp]
  40cfeb:	mov    r12,QWORD PTR [r12]
  40cfef:	test   r12,r12
  40cff2:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40cff8:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40cffd:	mov    rdi,QWORD PTR [r15+0xd0]
  40d004:	mov    rcx,QWORD PTR [r12+0x88]
  40d00c:	xor    eax,eax
  40d00e:	lea    rsi,[rip+0x33aca]        # 440adf <_IO_stdin_used@@Base+0x12adf>
  40d015:	mov    rdx,r15
  40d018:	mov    r8,r15
  40d01b:	lea    r9,[rsp+0x20]
  40d020:	push   r14
  40d022:	push   r13
  40d024:	call   406170 <fprintf@plt>
  40d029:	add    rsp,0x10
  40d02d:	mov    r12,QWORD PTR [r12]
  40d031:	test   r12,r12
  40d034:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40d03a:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40d03f:	mov    rsi,QWORD PTR [r12+0x18]
  40d044:	mov    rdi,QWORD PTR [rsi+0x18]
  40d048:	lea    rdx,[rsp+0x120]
  40d050:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d055:	mov    rax,QWORD PTR [r12+0x18]
  40d05a:	movzx  ecx,WORD PTR [rax+0x10]
  40d05e:	cmp    rcx,0x4
  40d062:	ja     40d84c <__flatcc_fb_gen_c_builder@@Base+0x1bcc>
  40d068:	lea    rdx,[rip+0x2a721]        # 437790 <_IO_stdin_used@@Base+0x9790>
  40d06f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40d073:	add    rcx,rdx
  40d076:	jmp    rcx
  40d078:	test   BYTE PTR [rax+0x12],0x8
  40d07c:	je     40d097 <__flatcc_fb_gen_c_builder@@Base+0x1417>
  40d07e:	mov    rcx,QWORD PTR [rbx]
  40d081:	mov    esi,0x20
  40d086:	mov    edx,0x1
  40d08b:	lea    rdi,[rip+0x33b5c]        # 440bee <_IO_stdin_used@@Base+0x12bee>
  40d092:	call   406210 <fwrite@plt>
  40d097:	mov    rdi,QWORD PTR [r15+0xd0]
  40d09e:	mov    rcx,QWORD PTR [r12+0x88]
  40d0a6:	sub    rsp,0x8
  40d0aa:	xor    eax,eax
  40d0ac:	lea    rsi,[rip+0x33b91]        # 440c44 <_IO_stdin_used@@Base+0x12c44>
  40d0b3:	jmp    40d10a <__flatcc_fb_gen_c_builder@@Base+0x148a>
  40d0b5:	mov    rsi,QWORD PTR [r12+0x18]
  40d0ba:	mov    rdi,QWORD PTR [rsi+0x18]
  40d0be:	lea    rdx,[rsp+0x120]
  40d0c6:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d0cb:	mov    rax,QWORD PTR [r12+0x18]
  40d0d0:	movzx  ecx,WORD PTR [rax+0x10]
  40d0d4:	cmp    rcx,0x4
  40d0d8:	ja     40d895 <__flatcc_fb_gen_c_builder@@Base+0x1c15>
  40d0de:	lea    rdx,[rip+0x2a6bf]        # 4377a4 <_IO_stdin_used@@Base+0x97a4>
  40d0e5:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40d0e9:	add    rcx,rdx
  40d0ec:	jmp    rcx
  40d0ee:	mov    rdi,QWORD PTR [r15+0xd0]
  40d0f5:	mov    rcx,QWORD PTR [r12+0x88]
  40d0fd:	sub    rsp,0x8
  40d101:	xor    eax,eax
  40d103:	lea    rsi,[rip+0x33a40]        # 440b4a <_IO_stdin_used@@Base+0x12b4a>
  40d10a:	mov    rdx,r15
  40d10d:	mov    r8,r15
  40d110:	lea    r9,[rsp+0x28]
  40d115:	mov    r10,rbx
  40d118:	lea    rbx,[rsp+0x128]
  40d120:	jmp    40d328 <__flatcc_fb_gen_c_builder@@Base+0x16a8>
  40d125:	mov    rdi,QWORD PTR [rsi+0x18]
  40d129:	lea    rbx,[rsp+0x120]
  40d131:	mov    rdx,rbx
  40d134:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d139:	mov    rdi,QWORD PTR [r15+0xd0]
  40d140:	mov    rax,QWORD PTR [r12+0x90]
  40d148:	movzx  r10d,WORD PTR [rax+0xb0]
  40d150:	sub    rsp,0x8
  40d154:	mov    eax,0x0
  40d159:	lea    rsi,[rip+0x33895]        # 4409f5 <_IO_stdin_used@@Base+0x129f5>
  40d160:	mov    rdx,r15
  40d163:	mov    rcx,r15
  40d166:	lea    r8,[rsp+0x28]
  40d16b:	mov    r9d,r13d
  40d16e:	push   rbx
  40d16f:	push   rbx
  40d170:	mov    r11,rbx
  40d173:	push   r10
  40d175:	mov    rbx,QWORD PTR [rsp+0x20]
  40d17a:	push   r11
  40d17c:	push   r14
  40d17e:	call   406170 <fprintf@plt>
  40d183:	jmp    40d2e0 <__flatcc_fb_gen_c_builder@@Base+0x1660>
  40d188:	mov    rdi,QWORD PTR [r15+0xd0]
  40d18f:	mov    rcx,QWORD PTR [r12+0x88]
  40d197:	sub    rsp,0x8
  40d19b:	xor    eax,eax
  40d19d:	lea    rsi,[rip+0x33b0f]        # 440cb3 <_IO_stdin_used@@Base+0x12cb3>
  40d1a4:	mov    rdx,r15
  40d1a7:	mov    r8,r15
  40d1aa:	mov    r10,rbx
  40d1ad:	lea    rbx,[rsp+0x28]
  40d1b2:	mov    r9,rbx
  40d1b5:	lea    rbx,[rsp+0x128]
  40d1bd:	push   rbx
  40d1be:	mov    rbx,r10
  40d1c1:	push   r14
  40d1c3:	push   r13
  40d1c5:	call   406170 <fprintf@plt>
  40d1ca:	add    rsp,0x20
  40d1ce:	mov    r8,QWORD PTR [r12+0x18]
  40d1d3:	mov    r9d,0x1
  40d1d9:	jmp    40d229 <__flatcc_fb_gen_c_builder@@Base+0x15a9>
  40d1db:	mov    rdi,QWORD PTR [r15+0xd0]
  40d1e2:	mov    rcx,QWORD PTR [r12+0x88]
  40d1ea:	sub    rsp,0x8
  40d1ee:	xor    eax,eax
  40d1f0:	lea    rsi,[rip+0x339c9]        # 440bc0 <_IO_stdin_used@@Base+0x12bc0>
  40d1f7:	mov    rdx,r15
  40d1fa:	mov    r8,r15
  40d1fd:	mov    r10,rbx
  40d200:	lea    rbx,[rsp+0x28]
  40d205:	mov    r9,rbx
  40d208:	lea    rbx,[rsp+0x128]
  40d210:	push   rbx
  40d211:	mov    rbx,r10
  40d214:	push   r14
  40d216:	push   r13
  40d218:	call   406170 <fprintf@plt>
  40d21d:	add    rsp,0x20
  40d221:	mov    r8,QWORD PTR [r12+0x18]
  40d226:	xor    r9d,r9d
  40d229:	mov    rdi,r15
  40d22c:	lea    rsi,[rsp+0x20]
  40d231:	mov    edx,r13d
  40d234:	mov    rcx,r14
  40d237:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x2aa0>
  40d23c:	mov    r12,QWORD PTR [r12]
  40d240:	test   r12,r12
  40d243:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40d249:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40d24e:	test   BYTE PTR [rax+0x12],0x8
  40d252:	je     40d26d <__flatcc_fb_gen_c_builder@@Base+0x15ed>
  40d254:	mov    rcx,QWORD PTR [rbx]
  40d257:	mov    esi,0x20
  40d25c:	mov    edx,0x1
  40d261:	lea    rdi,[rip+0x33986]        # 440bee <_IO_stdin_used@@Base+0x12bee>
  40d268:	call   406210 <fwrite@plt>
  40d26d:	mov    rdi,QWORD PTR [r15+0xd0]
  40d274:	mov    rcx,QWORD PTR [r12+0x88]
  40d27c:	mov    eax,0x0
  40d281:	lea    rsi,[rip+0x33987]        # 440c0f <_IO_stdin_used@@Base+0x12c0f>
  40d288:	jmp    40d311 <__flatcc_fb_gen_c_builder@@Base+0x1691>
  40d28d:	mov    rdi,QWORD PTR [r15+0xd0]
  40d294:	mov    rcx,QWORD PTR [r12+0x88]
  40d29c:	movzx  ebx,WORD PTR [r12+0x72]
  40d2a2:	sub    rsp,0x8
  40d2a6:	mov    eax,0x0
  40d2ab:	lea    rsi,[rip+0x3385f]        # 440b11 <_IO_stdin_used@@Base+0x12b11>
  40d2b2:	mov    rdx,r15
  40d2b5:	mov    r8,r15
  40d2b8:	lea    r9,[rsp+0x28]
  40d2bd:	push   rbx
  40d2be:	mov    r10,QWORD PTR [rsp+0x10]
  40d2c3:	push   QWORD PTR [r12+0x80]
  40d2cb:	lea    rbx,[rsp+0x138]
  40d2d3:	push   rbx
  40d2d4:	mov    rbx,r10
  40d2d7:	push   r14
  40d2d9:	push   r13
  40d2db:	call   406170 <fprintf@plt>
  40d2e0:	add    rsp,0x30
  40d2e4:	mov    r12,QWORD PTR [r12]
  40d2e8:	test   r12,r12
  40d2eb:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40d2f1:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40d2f6:	mov    rdi,QWORD PTR [r15+0xd0]
  40d2fd:	mov    rcx,QWORD PTR [r12+0x88]
  40d305:	mov    eax,0x0
  40d30a:	lea    rsi,[rip+0x33968]        # 440c79 <_IO_stdin_used@@Base+0x12c79>
  40d311:	mov    rdx,r15
  40d314:	mov    r8,r15
  40d317:	lea    r9,[rsp+0x20]
  40d31c:	mov    r10,rbx
  40d31f:	lea    rbx,[rsp+0x120]
  40d327:	push   rbx
  40d328:	push   rbx
  40d329:	mov    rbx,r10
  40d32c:	push   r14
  40d32e:	push   r13
  40d330:	call   406170 <fprintf@plt>
  40d335:	add    rsp,0x20
  40d339:	mov    r12,QWORD PTR [r12]
  40d33d:	test   r12,r12
  40d340:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40d346:	jmp    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40d34b:	mov    edi,DWORD PTR [rax+0x48]
  40d34e:	lea    rsi,[r12+0x48]
  40d353:	lea    rax,[rsp+0x220]
  40d35b:	mov    rdx,rax
  40d35e:	call   40e5a0 <__flatcc_fb_gen_c_builder@@Base+0x2920>
  40d363:	mov    rdi,QWORD PTR [r15+0xd0]
  40d36a:	mov    rcx,QWORD PTR [r12+0x88]
  40d372:	movzx  r10d,WORD PTR [r12+0x72]
  40d378:	sub    rsp,0x8
  40d37c:	mov    eax,0x0
  40d381:	lea    rsi,[rip+0x337f0]        # 440b78 <_IO_stdin_used@@Base+0x12b78>
  40d388:	mov    rdx,r15
  40d38b:	mov    r8,r15
  40d38e:	lea    r9,[rsp+0x28]
  40d393:	lea    rbx,[rsp+0x228]
  40d39b:	push   rbx
  40d39c:	push   r10
  40d39e:	mov    r10,QWORD PTR [rsp+0x18]
  40d3a3:	push   QWORD PTR [r12+0x80]
  40d3ab:	lea    rbx,[rsp+0x140]
  40d3b3:	push   rbx
  40d3b4:	push   rbx
  40d3b5:	mov    rbx,r10
  40d3b8:	push   r14
  40d3ba:	push   r13
  40d3bc:	call   406170 <fprintf@plt>
  40d3c1:	add    rsp,0x40
  40d3c5:	mov    r12,QWORD PTR [r12]
  40d3c9:	test   r12,r12
  40d3cc:	jne    40cdd9 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40d3d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3dc:	nop    DWORD PTR [rax+0x0]
  40d3e0:	mov    rsi,QWORD PTR [r15+0xd0]
  40d3e7:	mov    edi,0xa
  40d3ec:	call   406110 <fputc@plt>
  40d3f1:	mov    r12,QWORD PTR [rsp+0x118]
  40d3f9:	movzx  r14d,WORD PTR [r12+0xa4]
  40d402:	vxorps xmm0,xmm0,xmm0
  40d406:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d40f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d418:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d421:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d42a:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d430:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d436:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d43c:	mov    QWORD PTR [rsp+0x100],0x0
  40d448:	mov    rdi,QWORD PTR [r12+0x18]
  40d44d:	mov    rsi,r12
  40d450:	lea    rbx,[rsp+0x20]
  40d455:	mov    rdx,rbx
  40d458:	vzeroupper 
  40d45b:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d460:	mov    rdi,QWORD PTR [r15+0xd0]
  40d467:	xor    eax,eax
  40d469:	lea    rsi,[rip+0x339f7]        # 440e67 <_IO_stdin_used@@Base+0x12e67>
  40d470:	mov    rdx,rbx
  40d473:	mov    rcx,rbx
  40d476:	mov    r8,r15
  40d479:	mov    r9,rbx
  40d47c:	call   406170 <fprintf@plt>
  40d481:	mov    rdi,QWORD PTR [r15+0xd0]
  40d488:	xor    eax,eax
  40d48a:	lea    rsi,[rip+0x33a19]        # 440eaa <_IO_stdin_used@@Base+0x12eaa>
  40d491:	mov    rdx,rbx
  40d494:	call   406170 <fprintf@plt>
  40d499:	mov    rbx,QWORD PTR [r12+0x30]
  40d49e:	test   rbx,rbx
  40d4a1:	je     40d5d0 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40d4a7:	mov    r12d,r14d
  40d4aa:	and    r12d,0x8
  40d4ae:	shr    r12d,0x3
  40d4b2:	xor    r13d,r13d
  40d4b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4bf:	nop
  40d4c0:	test   BYTE PTR [rbx+0x70],0x4
  40d4c4:	jne    40d540 <__flatcc_fb_gen_c_builder@@Base+0x18c0>
  40d4c6:	mov    rax,QWORD PTR [rbx+0x8]
  40d4ca:	mov    ecx,DWORD PTR [rax+0x8]
  40d4cd:	mov    r8,QWORD PTR [rax]
  40d4d0:	movzx  eax,WORD PTR [rbx+0x28]
  40d4d4:	cmp    eax,0xe
  40d4d7:	jne    40d4f5 <__flatcc_fb_gen_c_builder@@Base+0x1875>
  40d4d9:	mov    rax,QWORD PTR [rbx+0x18]
  40d4dd:	movzx  eax,WORD PTR [rax+0x10]
  40d4e1:	cmp    eax,0x4
  40d4e4:	setne  al
  40d4e7:	mov    edx,0x1
  40d4ec:	cmove  r13d,edx
  40d4f0:	or     al,r12b
  40d4f3:	je     40d518 <__flatcc_fb_gen_c_builder@@Base+0x1898>
  40d4f5:	mov    rax,QWORD PTR [rsp]
  40d4f9:	mov    rdi,QWORD PTR [rax]
  40d4fc:	mov    r9,QWORD PTR [rbx+0x88]
  40d503:	xor    eax,eax
  40d505:	lea    rsi,[rip+0x339dc]        # 440ee8 <_IO_stdin_used@@Base+0x12ee8>
  40d50c:	lea    rdx,[rsp+0x20]
  40d511:	call   406170 <fprintf@plt>
  40d516:	jmp    40d540 <__flatcc_fb_gen_c_builder@@Base+0x18c0>
  40d518:	mov    rax,QWORD PTR [rsp]
  40d51c:	mov    rdi,QWORD PTR [rax]
  40d51f:	mov    r9,QWORD PTR [rbx+0x88]
  40d526:	xor    eax,eax
  40d528:	lea    rsi,[rip+0x33991]        # 440ec0 <_IO_stdin_used@@Base+0x12ec0>
  40d52f:	lea    rdx,[rsp+0x20]
  40d534:	call   406170 <fprintf@plt>
  40d539:	mov    r13d,0x1
  40d53f:	nop
  40d540:	mov    rbx,QWORD PTR [rbx+0x98]
  40d547:	test   rbx,rbx
  40d54a:	jne    40d4c0 <__flatcc_fb_gen_c_builder@@Base+0x1840>
  40d550:	test   r14b,0x8
  40d554:	mov    r12,QWORD PTR [rsp+0x118]
  40d55c:	jne    40d5d0 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40d55e:	test   r13d,r13d
  40d561:	je     40d5d0 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40d563:	mov    rbx,QWORD PTR [r12+0x30]
  40d568:	test   rbx,rbx
  40d56b:	jne    40d57c <__flatcc_fb_gen_c_builder@@Base+0x18fc>
  40d56d:	jmp    40d5d0 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40d56f:	nop
  40d570:	mov    rbx,QWORD PTR [rbx+0x98]
  40d577:	test   rbx,rbx
  40d57a:	je     40d5d0 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40d57c:	test   BYTE PTR [rbx+0x70],0x4
  40d580:	jne    40d570 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40d582:	movzx  eax,WORD PTR [rbx+0x28]
  40d586:	cmp    eax,0xe
  40d589:	jne    40d570 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40d58b:	mov    rax,QWORD PTR [rbx+0x18]
  40d58f:	movzx  eax,WORD PTR [rax+0x10]
  40d593:	cmp    eax,0x4
  40d596:	jne    40d570 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40d598:	mov    rax,QWORD PTR [rbx+0x8]
  40d59c:	mov    r9,QWORD PTR [rbx+0x88]
  40d5a3:	mov    ecx,DWORD PTR [rax+0x8]
  40d5a6:	mov    r8,QWORD PTR [rax]
  40d5a9:	mov    rax,QWORD PTR [rsp]
  40d5ad:	mov    rdi,QWORD PTR [rax]
  40d5b0:	xor    eax,eax
  40d5b2:	lea    rsi,[rip+0x33951]        # 440f0a <_IO_stdin_used@@Base+0x12f0a>
  40d5b9:	lea    rdx,[rsp+0x20]
  40d5be:	call   406170 <fprintf@plt>
  40d5c3:	jmp    40d570 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40d5c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5cf:	nop
  40d5d0:	mov    rdi,QWORD PTR [r15+0xd0]
  40d5d7:	xor    eax,eax
  40d5d9:	lea    rsi,[rip+0x33956]        # 440f36 <_IO_stdin_used@@Base+0x12f36>
  40d5e0:	lea    rbx,[rsp+0x20]
  40d5e5:	mov    rdx,rbx
  40d5e8:	call   406170 <fprintf@plt>
  40d5ed:	vxorps xmm0,xmm0,xmm0
  40d5f1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d5fa:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d603:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d60c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d615:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d61b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d621:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d627:	mov    QWORD PTR [rsp+0x100],0x0
  40d633:	mov    rdi,QWORD PTR [r12+0x18]
  40d638:	mov    rsi,r12
  40d63b:	mov    rdx,rbx
  40d63e:	vzeroupper 
  40d641:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d646:	mov    rdi,QWORD PTR [r15+0xd0]
  40d64d:	sub    rsp,0x8
  40d651:	xor    eax,eax
  40d653:	lea    rsi,[rip+0x33911]        # 440f6b <_IO_stdin_used@@Base+0x12f6b>
  40d65a:	mov    rdx,r15
  40d65d:	mov    rcx,r15
  40d660:	mov    r8,rbx
  40d663:	mov    r9,rbx
  40d666:	push   rbx
  40d667:	call   406170 <fprintf@plt>
  40d66c:	add    rsp,0x10
  40d670:	mov    rsi,QWORD PTR [r15+0xd0]
  40d677:	mov    edi,0xa
  40d67c:	call   406110 <fputc@plt>
  40d681:	mov    rbx,QWORD PTR [rsp]
  40d685:	mov    r12,QWORD PTR [r12]
  40d689:	test   r12,r12
  40d68c:	jne    40cce0 <__flatcc_fb_gen_c_builder@@Base+0x1060>
  40d692:	jmp    40d6a3 <__flatcc_fb_gen_c_builder@@Base+0x1a23>
  40d694:	mov    rdi,r15
  40d697:	vzeroupper 
  40d69a:	call   40e310 <__flatcc_fb_gen_c_builder@@Base+0x2690>
  40d69f:	mov    rbx,QWORD PTR [rsp]
  40d6a3:	mov    rax,QWORD PTR [r15+0xe0]
  40d6aa:	cmp    DWORD PTR [rax+0xac],0x0
  40d6b1:	je     40d6cc <__flatcc_fb_gen_c_builder@@Base+0x1a4c>
  40d6b3:	mov    rcx,QWORD PTR [rbx]
  40d6b6:	lea    rdi,[rip+0x27c1e]        # 4352db <_IO_stdin_used@@Base+0x72db>
  40d6bd:	mov    esi,0x24
  40d6c2:	mov    edx,0x1
  40d6c7:	call   406210 <fwrite@plt>
  40d6cc:	mov    rdi,QWORD PTR [r15+0xd0]
  40d6d3:	mov    rax,QWORD PTR [r15+0xd8]
  40d6da:	mov    rdx,QWORD PTR [rax+0x118]
  40d6e1:	lea    rsi,[rip+0x338c6]        # 440fae <_IO_stdin_used@@Base+0x12fae>
  40d6e8:	xor    eax,eax
  40d6ea:	call   406170 <fprintf@plt>
  40d6ef:	xor    eax,eax
  40d6f1:	lea    rsp,[rbp-0x28]
  40d6f5:	pop    rbx
  40d6f6:	pop    r12
  40d6f8:	pop    r13
  40d6fa:	pop    r14
  40d6fc:	pop    r15
  40d6fe:	pop    rbp
  40d6ff:	ret    
  40d700:	mov    rax,QWORD PTR [rip+0x438f1]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d707:	mov    rdi,QWORD PTR [rax]
  40d70a:	lea    rsi,[rip+0x21d13]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d711:	lea    rbx,[rip+0x328e8]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d718:	lea    r8,[rip+0x32b4f]        # 44026e <_IO_stdin_used@@Base+0x1226e>
  40d71f:	mov    ecx,0x4b9
  40d724:	xor    eax,eax
  40d726:	mov    rdx,rbx
  40d729:	vzeroupper 
  40d72c:	call   406170 <fprintf@plt>
  40d731:	lea    rdi,[rip+0x32c53]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d738:	lea    rcx,[rip+0x32ed3]        # 440612 <_IO_stdin_used@@Base+0x12612>
  40d73f:	mov    edx,0x4b9
  40d744:	mov    rsi,rbx
  40d747:	call   4060f0 <__assert_fail@plt>
  40d74c:	mov    rax,QWORD PTR [rip+0x438a5]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d753:	mov    rdi,QWORD PTR [rax]
  40d756:	lea    rsi,[rip+0x21cc7]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d75d:	lea    rbx,[rip+0x3289c]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d764:	lea    r8,[rip+0x29434]        # 436b9f <_IO_stdin_used@@Base+0x8b9f>
  40d76b:	mov    ecx,0x5e8
  40d770:	xor    eax,eax
  40d772:	mov    rdx,rbx
  40d775:	call   406170 <fprintf@plt>
  40d77a:	lea    rdi,[rip+0x32c0a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d781:	lea    rcx,[rip+0x332ea]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40d788:	mov    edx,0x5e8
  40d78d:	mov    rsi,rbx
  40d790:	call   4060f0 <__assert_fail@plt>
  40d795:	lea    rdi,[rip+0x285c2]        # 435d5e <_IO_stdin_used@@Base+0x7d5e>
  40d79c:	lea    rsi,[rip+0x3285d]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d7a3:	lea    rcx,[rip+0x328c1]        # 44006b <_IO_stdin_used@@Base+0x1206b>
  40d7aa:	mov    edx,0x3f2
  40d7af:	vzeroupper 
  40d7b2:	call   4060f0 <__assert_fail@plt>
  40d7b7:	mov    rax,QWORD PTR [rip+0x4383a]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d7be:	mov    rdi,QWORD PTR [rax]
  40d7c1:	lea    rsi,[rip+0x21c5c]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d7c8:	lea    rbx,[rip+0x32831]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d7cf:	lea    r8,[rip+0x32e10]        # 4405e6 <_IO_stdin_used@@Base+0x125e6>
  40d7d6:	mov    ecx,0x495
  40d7db:	xor    eax,eax
  40d7dd:	mov    rdx,rbx
  40d7e0:	call   406170 <fprintf@plt>
  40d7e5:	lea    rdi,[rip+0x32b9f]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d7ec:	lea    rcx,[rip+0x32e1f]        # 440612 <_IO_stdin_used@@Base+0x12612>
  40d7f3:	mov    edx,0x495
  40d7f8:	mov    rsi,rbx
  40d7fb:	call   4060f0 <__assert_fail@plt>
  40d800:	mov    rax,QWORD PTR [rip+0x437f1]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d807:	mov    rdi,QWORD PTR [rax]
  40d80a:	lea    rsi,[rip+0x21c13]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d811:	lea    rbx,[rip+0x283be]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40d818:	lea    r8,[rip+0x2841a]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40d81f:	mov    ecx,0x8d
  40d824:	xor    eax,eax
  40d826:	mov    rdx,rbx
  40d829:	vzeroupper 
  40d82c:	call   406170 <fprintf@plt>
  40d831:	lea    rdi,[rip+0x32b53]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d838:	lea    rcx,[rip+0x28431]        # 435c70 <_IO_stdin_used@@Base+0x7c70>
  40d83f:	mov    edx,0x8d
  40d844:	mov    rsi,rbx
  40d847:	call   4060f0 <__assert_fail@plt>
  40d84c:	mov    rax,QWORD PTR [rip+0x437a5]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d853:	mov    rdi,QWORD PTR [rax]
  40d856:	lea    rsi,[rip+0x21bc7]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d85d:	lea    rbx,[rip+0x3279c]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d864:	lea    r8,[rip+0x29272]        # 436add <_IO_stdin_used@@Base+0x8add>
  40d86b:	mov    ecx,0x5e3
  40d870:	xor    eax,eax
  40d872:	mov    rdx,rbx
  40d875:	call   406170 <fprintf@plt>
  40d87a:	lea    rdi,[rip+0x32b0a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d881:	lea    rcx,[rip+0x331ea]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40d888:	mov    edx,0x5e3
  40d88d:	mov    rsi,rbx
  40d890:	call   4060f0 <__assert_fail@plt>
  40d895:	mov    rax,QWORD PTR [rip+0x4375c]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d89c:	mov    rdi,QWORD PTR [rax]
  40d89f:	lea    rsi,[rip+0x21b7e]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d8a6:	lea    rbx,[rip+0x32753]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d8ad:	lea    r8,[rip+0x291e0]        # 436a94 <_IO_stdin_used@@Base+0x8a94>
  40d8b4:	mov    ecx,0x5c0
  40d8b9:	xor    eax,eax
  40d8bb:	mov    rdx,rbx
  40d8be:	call   406170 <fprintf@plt>
  40d8c3:	lea    rdi,[rip+0x32ac1]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d8ca:	lea    rcx,[rip+0x331a1]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40d8d1:	mov    edx,0x5c0
  40d8d6:	mov    rsi,rbx
  40d8d9:	call   4060f0 <__assert_fail@plt>
  40d8de:	mov    rax,QWORD PTR [rip+0x43713]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d8e5:	mov    rdi,QWORD PTR [rax]
  40d8e8:	lea    rsi,[rip+0x21b35]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d8ef:	lea    rbx,[rip+0x282e0]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40d8f6:	lea    r8,[rip+0x2833c]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40d8fd:	mov    ecx,0x60
  40d902:	xor    eax,eax
  40d904:	mov    rdx,rbx
  40d907:	vzeroupper 
  40d90a:	call   406170 <fprintf@plt>
  40d90f:	lea    rdi,[rip+0x32a75]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d916:	lea    rcx,[rip+0x28c4c]        # 436569 <_IO_stdin_used@@Base+0x8569>
  40d91d:	mov    edx,0x60
  40d922:	mov    rsi,rbx
  40d925:	call   4060f0 <__assert_fail@plt>
  40d92a:	mov    rax,QWORD PTR [rip+0x436c7]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d931:	mov    rdi,QWORD PTR [rax]
  40d934:	lea    rsi,[rip+0x21ae9]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d93b:	lea    rbx,[rip+0x326be]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d942:	lea    r8,[rip+0x32d2c]        # 440675 <_IO_stdin_used@@Base+0x12675>
  40d949:	mov    ecx,0x4a5
  40d94e:	xor    eax,eax
  40d950:	mov    rdx,rbx
  40d953:	call   406170 <fprintf@plt>
  40d958:	lea    rdi,[rip+0x32a2c]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d95f:	lea    rcx,[rip+0x32cac]        # 440612 <_IO_stdin_used@@Base+0x12612>
  40d966:	mov    edx,0x4a5
  40d96b:	mov    rsi,rbx
  40d96e:	call   4060f0 <__assert_fail@plt>
  40d973:	mov    rax,QWORD PTR [rip+0x4367e]        # 450ff8 <stderr@GLIBC_2.2.5>
  40d97a:	mov    rdi,QWORD PTR [rax]
  40d97d:	lea    rsi,[rip+0x21aa0]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40d984:	lea    rbx,[rip+0x32675]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40d98b:	lea    r8,[rip+0x330b9]        # 440a4b <_IO_stdin_used@@Base+0x12a4b>
  40d992:	mov    ecx,0x596
  40d997:	xor    eax,eax
  40d999:	mov    rdx,rbx
  40d99c:	call   406170 <fprintf@plt>
  40d9a1:	lea    rdi,[rip+0x329e3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40d9a8:	lea    rcx,[rip+0x330c3]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40d9af:	mov    edx,0x596
  40d9b4:	mov    rsi,rbx
  40d9b7:	call   4060f0 <__assert_fail@plt>
  40d9bc:	nop    DWORD PTR [rax+0x0]
  40d9c0:	push   rbp
  40d9c1:	push   rbx
  40d9c2:	push   rax
  40d9c3:	mov    rbx,QWORD PTR [rdi+0x28]
  40d9c7:	xor    ebp,ebp
  40d9c9:	test   rbx,rbx
  40d9cc:	jne    40d9d8 <__flatcc_fb_gen_c_builder@@Base+0x1d58>
  40d9ce:	jmp    40da15 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40d9d0:	mov    rbx,QWORD PTR [rbx]
  40d9d3:	test   rbx,rbx
  40d9d6:	je     40da15 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40d9d8:	test   BYTE PTR [rbx+0x70],0x4
  40d9dc:	jne    40d9d0 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40d9de:	movzx  eax,WORD PTR [rbx+0x28]
  40d9e2:	cmp    eax,0xe
  40d9e5:	jne    40da10 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40d9e7:	mov    rdi,QWORD PTR [rbx+0x18]
  40d9eb:	movzx  eax,WORD PTR [rdi+0x10]
  40d9ef:	cmp    eax,0x1
  40d9f2:	jne    40da10 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40d9f4:	call   40d9c0 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40d9f9:	add    ebp,eax
  40d9fb:	mov    rbx,QWORD PTR [rbx]
  40d9fe:	test   rbx,rbx
  40da01:	jne    40d9d8 <__flatcc_fb_gen_c_builder@@Base+0x1d58>
  40da03:	jmp    40da15 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40da05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da0f:	nop
  40da10:	add    ebp,0x1
  40da13:	jmp    40d9d0 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40da15:	mov    eax,ebp
  40da17:	add    rsp,0x8
  40da1b:	pop    rbx
  40da1c:	pop    rbp
  40da1d:	ret    
  40da1e:	xchg   ax,ax
  40da20:	push   rbp
  40da21:	mov    rbp,rsp
  40da24:	push   r15
  40da26:	push   r14
  40da28:	push   r13
  40da2a:	push   r12
  40da2c:	push   rbx
  40da2d:	and    rsp,0xffffffffffffffe0
  40da31:	sub    rsp,0x120
  40da38:	vxorps xmm0,xmm0,xmm0
  40da3c:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40da45:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40da4e:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40da57:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40da60:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40da66:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40da6c:	mov    DWORD PTR [rsp+0xc],ecx
  40da70:	mov    r15d,edx
  40da73:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40da79:	mov    QWORD PTR [rsp+0x100],0x0
  40da85:	mov    r14,QWORD PTR [rsi+0x28]
  40da89:	test   r14,r14
  40da8c:	je     40dcac <__flatcc_fb_gen_c_builder@@Base+0x202c>
  40da92:	mov    r13d,r8d
  40da95:	mov    r12,rdi
  40da98:	test   r8d,r8d
  40da9b:	lea    rax,[rip+0x21a9c]        # 42f53e <_IO_stdin_used@@Base+0x153e>
  40daa2:	lea    rcx,[rip+0x231af]        # 430c58 <_IO_stdin_used@@Base+0x2c58>
  40daa9:	cmove  rcx,rax
  40daad:	mov    QWORD PTR [rsp+0x10],rcx
  40dab2:	mov    DWORD PTR [rsp+0x1c],r8d
  40dab7:	nop    WORD PTR [rax+rax*1+0x0]
  40dac0:	test   BYTE PTR [r14+0x70],0x4
  40dac5:	jne    40dca0 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40dacb:	movzx  eax,WORD PTR [r14+0x28]
  40dad0:	cmp    eax,0x8
  40dad3:	je     40db10 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40dad5:	movzx  eax,ax
  40dad8:	cmp    eax,0xe
  40dadb:	jne    40dcc1 <__flatcc_fb_gen_c_builder@@Base+0x2041>
  40dae1:	mov    rsi,QWORD PTR [r14+0x18]
  40dae5:	movzx  eax,WORD PTR [rsi+0x10]
  40dae9:	cmp    eax,0x1
  40daec:	jne    40db5d <__flatcc_fb_gen_c_builder@@Base+0x1edd>
  40daee:	mov    rdi,r12
  40daf1:	mov    edx,r15d
  40daf4:	mov    ecx,DWORD PTR [rsp+0xc]
  40daf8:	mov    r8d,r13d
  40dafb:	vzeroupper 
  40dafe:	call   40da20 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40db03:	mov    r15d,eax
  40db06:	jmp    40dca0 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40db0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40db10:	cmp    DWORD PTR [rsp+0xc],0x0
  40db15:	je     40dbd9 <__flatcc_fb_gen_c_builder@@Base+0x1f59>
  40db1b:	test   r15d,r15d
  40db1e:	je     40dbb1 <__flatcc_fb_gen_c_builder@@Base+0x1f31>
  40db24:	mov    rcx,QWORD PTR [r12+0xd0]
  40db2c:	test   r15b,0x3
  40db30:	jne    40dbc0 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
  40db36:	mov    eax,DWORD PTR [rsp+0xc]
  40db3a:	sub    eax,r15d
  40db3d:	cmp    eax,0x2
  40db40:	jle    40dbc0 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
  40db42:	xor    eax,eax
  40db44:	mov    rdi,rcx
  40db47:	lea    rsi,[rip+0x3279e]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40db4e:	mov    rdx,QWORD PTR [rsp+0x10]
  40db53:	vzeroupper 
  40db56:	call   406170 <fprintf@plt>
  40db5b:	jmp    40dbd9 <__flatcc_fb_gen_c_builder@@Base+0x1f59>
  40db5d:	cmp    DWORD PTR [rsp+0xc],0x0
  40db62:	je     40dc55 <__flatcc_fb_gen_c_builder@@Base+0x1fd5>
  40db68:	test   r15d,r15d
  40db6b:	je     40dc29 <__flatcc_fb_gen_c_builder@@Base+0x1fa9>
  40db71:	mov    rcx,QWORD PTR [r12+0xd0]
  40db79:	test   r15b,0x3
  40db7d:	jne    40dc3c <__flatcc_fb_gen_c_builder@@Base+0x1fbc>
  40db83:	mov    eax,DWORD PTR [rsp+0xc]
  40db87:	sub    eax,r15d
  40db8a:	cmp    eax,0x2
  40db8d:	jle    40dc3c <__flatcc_fb_gen_c_builder@@Base+0x1fbc>
  40db93:	xor    eax,eax
  40db95:	mov    rdi,rcx
  40db98:	lea    rsi,[rip+0x3274d]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40db9f:	mov    rdx,QWORD PTR [rsp+0x10]
  40dba4:	vzeroupper 
  40dba7:	call   406170 <fprintf@plt>
  40dbac:	jmp    40dc55 <__flatcc_fb_gen_c_builder@@Base+0x1fd5>
  40dbb1:	mov    rcx,QWORD PTR [r12+0xd0]
  40dbb9:	cmp    DWORD PTR [rsp+0xc],0x5
  40dbbe:	jge    40db42 <__flatcc_fb_gen_c_builder@@Base+0x1ec2>
  40dbc0:	mov    esi,0x2
  40dbc5:	mov    edx,0x1
  40dbca:	lea    rdi,[rip+0x380ab]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40dbd1:	vzeroupper 
  40dbd4:	call   406210 <fwrite@plt>
  40dbd9:	mov    ecx,DWORD PTR [r14+0x18]
  40dbdd:	lea    eax,[rcx-0x1]
  40dbe0:	cmp    eax,0xb
  40dbe3:	jae    40dd0d <__flatcc_fb_gen_c_builder@@Base+0x208d>
  40dbe9:	cmp    ecx,0x5
  40dbec:	lea    rdx,[rip+0x2194c]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40dbf3:	cmove  rdx,r12
  40dbf7:	cdqe   
  40dbf9:	lea    rcx,[rip+0x42f90]        # 450b90 <fb_value_set_deleted@@Base+0x6130>
  40dc00:	mov    rcx,QWORD PTR [rcx+rax*8]
  40dc04:	mov    rdi,QWORD PTR [r12+0xd0]
  40dc0c:	lea    ebx,[r15+0x1]
  40dc10:	xor    eax,eax
  40dc12:	lea    rsi,[rip+0x3264c]        # 440265 <_IO_stdin_used@@Base+0x12265>
  40dc19:	mov    r8d,r15d
  40dc1c:	vzeroupper 
  40dc1f:	call   406170 <fprintf@plt>
  40dc24:	mov    r15d,ebx
  40dc27:	jmp    40dca0 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40dc29:	mov    rcx,QWORD PTR [r12+0xd0]
  40dc31:	cmp    DWORD PTR [rsp+0xc],0x5
  40dc36:	jge    40db93 <__flatcc_fb_gen_c_builder@@Base+0x1f13>
  40dc3c:	mov    esi,0x2
  40dc41:	mov    edx,0x1
  40dc46:	lea    rdi,[rip+0x3802f]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40dc4d:	vzeroupper 
  40dc50:	call   406210 <fwrite@plt>
  40dc55:	mov    rsi,QWORD PTR [r14+0x18]
  40dc59:	mov    rdi,QWORD PTR [rsi+0x18]
  40dc5d:	lea    rbx,[rsp+0x20]
  40dc62:	mov    rdx,rbx
  40dc65:	vzeroupper 
  40dc68:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40dc6d:	mov    rdi,QWORD PTR [r12+0xd0]
  40dc75:	lea    r13d,[r15+0x1]
  40dc79:	xor    eax,eax
  40dc7b:	lea    rsi,[rip+0x325d5]        # 440257 <_IO_stdin_used@@Base+0x12257>
  40dc82:	mov    rdx,rbx
  40dc85:	mov    ecx,r15d
  40dc88:	call   406170 <fprintf@plt>
  40dc8d:	mov    r15d,r13d
  40dc90:	mov    r13d,DWORD PTR [rsp+0x1c]
  40dc95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc9f:	nop
  40dca0:	mov    r14,QWORD PTR [r14]
  40dca3:	test   r14,r14
  40dca6:	jne    40dac0 <__flatcc_fb_gen_c_builder@@Base+0x1e40>
  40dcac:	mov    eax,r15d
  40dcaf:	lea    rsp,[rbp-0x28]
  40dcb3:	pop    rbx
  40dcb4:	pop    r12
  40dcb6:	pop    r13
  40dcb8:	pop    r14
  40dcba:	pop    r15
  40dcbc:	pop    rbp
  40dcbd:	vzeroupper 
  40dcc0:	ret    
  40dcc1:	mov    rax,QWORD PTR [rip+0x43330]        # 450ff8 <stderr@GLIBC_2.2.5>
  40dcc8:	mov    rdi,QWORD PTR [rax]
  40dccb:	lea    rsi,[rip+0x21752]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40dcd2:	lea    rbx,[rip+0x32327]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40dcd9:	lea    r8,[rip+0x3258e]        # 44026e <_IO_stdin_used@@Base+0x1226e>
  40dce0:	mov    ecx,0x352
  40dce5:	xor    eax,eax
  40dce7:	mov    rdx,rbx
  40dcea:	vzeroupper 
  40dced:	call   406170 <fprintf@plt>
  40dcf2:	lea    rdi,[rip+0x32692]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40dcf9:	lea    rcx,[rip+0x3259c]        # 44029c <_IO_stdin_used@@Base+0x1229c>
  40dd00:	mov    edx,0x352
  40dd05:	mov    rsi,rbx
  40dd08:	call   4060f0 <__assert_fail@plt>
  40dd0d:	mov    rax,QWORD PTR [rip+0x432e4]        # 450ff8 <stderr@GLIBC_2.2.5>
  40dd14:	mov    rdi,QWORD PTR [rax]
  40dd17:	lea    rsi,[rip+0x21706]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40dd1e:	lea    rbx,[rip+0x27eb1]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40dd25:	lea    r8,[rip+0x27f0d]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40dd2c:	mov    ecx,0x8d
  40dd31:	xor    eax,eax
  40dd33:	mov    rdx,rbx
  40dd36:	vzeroupper 
  40dd39:	call   406170 <fprintf@plt>
  40dd3e:	lea    rdi,[rip+0x32646]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40dd45:	lea    rcx,[rip+0x27f24]        # 435c70 <_IO_stdin_used@@Base+0x7c70>
  40dd4c:	mov    edx,0x8d
  40dd51:	mov    rsi,rbx
  40dd54:	call   4060f0 <__assert_fail@plt>
  40dd59:	nop    DWORD PTR [rax+0x0]
  40dd60:	push   rbp
  40dd61:	mov    rbp,rsp
  40dd64:	push   r15
  40dd66:	push   r14
  40dd68:	push   r13
  40dd6a:	push   r12
  40dd6c:	push   rbx
  40dd6d:	and    rsp,0xffffffffffffffe0
  40dd71:	sub    rsp,0x140
  40dd78:	mov    DWORD PTR [rsp+0x18],r8d
  40dd7d:	mov    DWORD PTR [rsp+0x1c],edx
  40dd81:	mov    rbx,rdi
  40dd84:	vxorps xmm0,xmm0,xmm0
  40dd88:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40dd91:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40dd9a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40dda3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ddac:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ddb5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40ddbb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40ddc1:	mov    QWORD PTR [rsp+0x120],0x0
  40ddcd:	cmp    ecx,0x1
  40ddd0:	lea    rax,[rip+0x32522]        # 4402f9 <_IO_stdin_used@@Base+0x122f9>
  40ddd7:	lea    rdx,[rip+0x21761]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40ddde:	cmove  rdx,rax
  40dde2:	mov    DWORD PTR [rsp+0x28],ecx
  40dde6:	cmp    ecx,0x2
  40dde9:	lea    rax,[rip+0x32502]        # 4402f2 <_IO_stdin_used@@Base+0x122f2>
  40ddf0:	cmovne rax,rdx
  40ddf4:	mov    QWORD PTR [rsp+0x30],rax
  40ddf9:	mov    r12,QWORD PTR [rsi+0x28]
  40ddfd:	test   r12,r12
  40de00:	je     40e23f <__flatcc_fb_gen_c_builder@@Base+0x25bf>
  40de06:	xor    r13d,r13d
  40de09:	xor    eax,eax
  40de0b:	mov    QWORD PTR [rsp+0x20],rax
  40de10:	jmp    40de40 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
  40de12:	xor    eax,eax
  40de14:	lea    rsi,[rip+0x325bc]        # 4403d7 <_IO_stdin_used@@Base+0x123d7>
  40de1b:	jmp    40de26 <__flatcc_fb_gen_c_builder@@Base+0x21a6>
  40de1d:	xor    eax,eax
  40de1f:	lea    rsi,[rip+0x325f9]        # 44041f <_IO_stdin_used@@Base+0x1241f>
  40de26:	lea    rdx,[rsp+0x40]
  40de2b:	mov    ecx,r15d
  40de2e:	mov    r8,r14
  40de31:	mov    r9d,r13d
  40de34:	call   406170 <fprintf@plt>
  40de39:	jmp    40e22e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40de3e:	xchg   ax,ax
  40de40:	mov    rax,QWORD PTR [r12+0x8]
  40de45:	mov    r15d,DWORD PTR [rax+0x8]
  40de49:	mov    r14,QWORD PTR [rax]
  40de4c:	test   r13d,r13d
  40de4f:	jle    40de99 <__flatcc_fb_gen_c_builder@@Base+0x2219>
  40de51:	mov    rcx,QWORD PTR [rbx+0xd0]
  40de58:	test   r13b,0x3
  40de5c:	je     40de80 <__flatcc_fb_gen_c_builder@@Base+0x2200>
  40de5e:	mov    esi,0x2
  40de63:	mov    edx,0x1
  40de68:	lea    rdi,[rip+0x32498]        # 440307 <_IO_stdin_used@@Base+0x12307>
  40de6f:	jmp    40de91 <__flatcc_fb_gen_c_builder@@Base+0x2211>
  40de71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40de80:	mov    esi,0x4
  40de85:	mov    edx,0x1
  40de8a:	lea    rdi,[rip+0x32471]        # 440302 <_IO_stdin_used@@Base+0x12302>
  40de91:	vzeroupper 
  40de94:	call   406210 <fwrite@plt>
  40de99:	movzx  eax,WORD PTR [r12+0x28]
  40de9f:	cmp    eax,0x8
  40dea2:	je     40df30 <__flatcc_fb_gen_c_builder@@Base+0x22b0>
  40dea8:	movzx  eax,ax
  40deab:	cmp    eax,0xe
  40deae:	jne    40e278 <__flatcc_fb_gen_c_builder@@Base+0x25f8>
  40deb4:	mov    rsi,QWORD PTR [r12+0x18]
  40deb9:	mov    rdi,QWORD PTR [rsi+0x18]
  40debd:	lea    rdx,[rsp+0x40]
  40dec2:	vzeroupper 
  40dec5:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40deca:	mov    rax,QWORD PTR [r12+0x18]
  40decf:	movzx  ecx,WORD PTR [rax+0x10]
  40ded3:	movzx  eax,WORD PTR [r12+0x70]
  40ded9:	cmp    ecx,0x1
  40dedc:	jne    40dfb0 <__flatcc_fb_gen_c_builder@@Base+0x2330>
  40dee2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dee9:	test   al,0x4
  40deeb:	je     40dfe6 <__flatcc_fb_gen_c_builder@@Base+0x2366>
  40def1:	xor    eax,eax
  40def3:	lea    rsi,[rip+0x32410]        # 44030a <_IO_stdin_used@@Base+0x1230a>
  40defa:	mov    r14,rbx
  40defd:	mov    rbx,QWORD PTR [rsp+0x20]
  40df02:	mov    edx,ebx
  40df04:	mov    ecx,ebx
  40df06:	call   406170 <fprintf@plt>
  40df0b:	add    ebx,0x1
  40df0e:	mov    QWORD PTR [rsp+0x20],rbx
  40df13:	mov    rbx,r14
  40df16:	mov    rdi,QWORD PTR [r12+0x18]
  40df1b:	call   40d9c0 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40df20:	add    eax,r13d
  40df23:	mov    r13d,eax
  40df26:	jmp    40e232 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40df2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df30:	mov    eax,DWORD PTR [r12+0x18]
  40df35:	add    eax,0xffffffff
  40df38:	cmp    eax,0xb
  40df3b:	jae    40e2c4 <__flatcc_fb_gen_c_builder@@Base+0x2644>
  40df41:	test   BYTE PTR [r12+0x70],0x4
  40df47:	jne    40dfb4 <__flatcc_fb_gen_c_builder@@Base+0x2334>
  40df49:	cdqe   
  40df4b:	lea    rcx,[rip+0x42c9e]        # 450bf0 <fb_value_set_deleted@@Base+0x6190>
  40df52:	mov    rcx,QWORD PTR [rcx+rax*8]
  40df56:	cmp    QWORD PTR [r12+0x80],0x1
  40df5f:	mov    eax,DWORD PTR [rsp+0x28]
  40df63:	mov    edx,0x0
  40df68:	cmove  eax,edx
  40df6b:	cmp    eax,0x2
  40df6e:	je     40e090 <__flatcc_fb_gen_c_builder@@Base+0x2410>
  40df74:	cmp    eax,0x1
  40df77:	jne    40e05c <__flatcc_fb_gen_c_builder@@Base+0x23dc>
  40df7d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40df84:	cmp    DWORD PTR [rsp+0x18],0x0
  40df89:	je     40e201 <__flatcc_fb_gen_c_builder@@Base+0x2581>
  40df8f:	mov    QWORD PTR [rsp+0x8],r14
  40df94:	mov    DWORD PTR [rsp],r15d
  40df98:	xor    eax,eax
  40df9a:	lea    rsi,[rip+0x3240d]        # 4403ae <_IO_stdin_used@@Base+0x123ae>
  40dfa1:	jmp    40e21d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40dfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dfb0:	test   al,0x4
  40dfb2:	je     40e015 <__flatcc_fb_gen_c_builder@@Base+0x2395>
  40dfb4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dfbb:	mov    rdx,QWORD PTR [rsp+0x20]
  40dfc0:	lea    r14d,[rdx+0x1]
  40dfc4:	xor    eax,eax
  40dfc6:	lea    rsi,[rip+0x323aa]        # 440377 <_IO_stdin_used@@Base+0x12377>
  40dfcd:	vzeroupper 
  40dfd0:	call   406170 <fprintf@plt>
  40dfd5:	add    r13d,0x1
  40dfd9:	mov    eax,r14d
  40dfdc:	mov    QWORD PTR [rsp+0x20],rax
  40dfe1:	jmp    40e232 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40dfe6:	cmp    DWORD PTR [rsp+0x18],0x0
  40dfeb:	je     40e0b9 <__flatcc_fb_gen_c_builder@@Base+0x2439>
  40dff1:	mov    QWORD PTR [rsp+0x8],r14
  40dff6:	mov    DWORD PTR [rsp],r15d
  40dffa:	xor    eax,eax
  40dffc:	lea    rsi,[rip+0x32340]        # 440343 <_IO_stdin_used@@Base+0x12343>
  40e003:	lea    rdx,[rsp+0x40]
  40e008:	mov    r8d,r15d
  40e00b:	mov    rcx,QWORD PTR [rsp+0x30]
  40e010:	jmp    40e223 <__flatcc_fb_gen_c_builder@@Base+0x25a3>
  40e015:	cmp    QWORD PTR [r12+0x80],0x1
  40e01e:	mov    eax,DWORD PTR [rsp+0x28]
  40e022:	mov    ecx,0x0
  40e027:	cmove  eax,ecx
  40e02a:	cmp    eax,0x2
  40e02d:	je     40e1cd <__flatcc_fb_gen_c_builder@@Base+0x254d>
  40e033:	cmp    eax,0x1
  40e036:	jne    40e05c <__flatcc_fb_gen_c_builder@@Base+0x23dc>
  40e038:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e03f:	cmp    DWORD PTR [rsp+0x18],0x0
  40e044:	je     40de12 <__flatcc_fb_gen_c_builder@@Base+0x2192>
  40e04a:	mov    QWORD PTR [rsp],r14
  40e04e:	xor    eax,eax
  40e050:	lea    rsi,[rip+0x32359]        # 4403b0 <_IO_stdin_used@@Base+0x123b0>
  40e057:	jmp    40e1ec <__flatcc_fb_gen_c_builder@@Base+0x256c>
  40e05c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e063:	cmp    DWORD PTR [rsp+0x18],0x0
  40e068:	je     40e1b1 <__flatcc_fb_gen_c_builder@@Base+0x2531>
  40e06e:	xor    eax,eax
  40e070:	lea    rsi,[rip+0x32316]        # 44038d <_IO_stdin_used@@Base+0x1238d>
  40e077:	mov    edx,r15d
  40e07a:	mov    rcx,r14
  40e07d:	mov    r8d,r15d
  40e080:	mov    r9,r14
  40e083:	vzeroupper 
  40e086:	call   406170 <fprintf@plt>
  40e08b:	jmp    40e22e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40e090:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e097:	cmp    DWORD PTR [rsp+0x18],0x0
  40e09c:	je     40e210 <__flatcc_fb_gen_c_builder@@Base+0x2590>
  40e0a2:	mov    QWORD PTR [rsp+0x8],r14
  40e0a7:	mov    DWORD PTR [rsp],r15d
  40e0ab:	xor    eax,eax
  40e0ad:	lea    rsi,[rip+0x32344]        # 4403f8 <_IO_stdin_used@@Base+0x123f8>
  40e0b4:	jmp    40e21d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40e0b9:	xor    eax,eax
  40e0bb:	lea    rsi,[rip+0x322a0]        # 440362 <_IO_stdin_used@@Base+0x12362>
  40e0c2:	lea    rdx,[rsp+0x40]
  40e0c7:	mov    rcx,QWORD PTR [rsp+0x30]
  40e0cc:	mov    r8d,r15d
  40e0cf:	mov    r9,r14
  40e0d2:	call   406170 <fprintf@plt>
  40e0d7:	mov    rdi,QWORD PTR [r12+0x18]
  40e0dc:	call   40d9c0 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40e0e1:	mov    DWORD PTR [rsp+0x2c],eax
  40e0e5:	test   eax,eax
  40e0e7:	jle    40e19b <__flatcc_fb_gen_c_builder@@Base+0x251b>
  40e0ed:	mov    QWORD PTR [rsp+0x38],r13
  40e0f2:	mov    r14,rbx
  40e0f5:	xor    ebx,ebx
  40e0f7:	mov    r13d,DWORD PTR [rsp+0x1c]
  40e0fc:	nop    DWORD PTR [rax+0x0]
  40e100:	mov    rax,QWORD PTR [rsp+0x38]
  40e105:	lea    r15d,[rax+rbx*1]
  40e109:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e10e:	je     40e164 <__flatcc_fb_gen_c_builder@@Base+0x24e4>
  40e110:	test   ebx,ebx
  40e112:	je     40e140 <__flatcc_fb_gen_c_builder@@Base+0x24c0>
  40e114:	mov    rcx,QWORD PTR [r14+0xd0]
  40e11b:	test   bl,0x3
  40e11e:	jne    40e14e <__flatcc_fb_gen_c_builder@@Base+0x24ce>
  40e120:	cmp    r13d,0x2
  40e124:	jle    40e14e <__flatcc_fb_gen_c_builder@@Base+0x24ce>
  40e126:	xor    eax,eax
  40e128:	mov    rdi,rcx
  40e12b:	lea    rsi,[rip+0x321ba]        # 4402ec <_IO_stdin_used@@Base+0x122ec>
  40e132:	lea    rdx,[rip+0x21405]        # 42f53e <_IO_stdin_used@@Base+0x153e>
  40e139:	call   406170 <fprintf@plt>
  40e13e:	jmp    40e164 <__flatcc_fb_gen_c_builder@@Base+0x24e4>
  40e140:	mov    rcx,QWORD PTR [r14+0xd0]
  40e147:	cmp    DWORD PTR [rsp+0x1c],0x5
  40e14c:	jge    40e126 <__flatcc_fb_gen_c_builder@@Base+0x24a6>
  40e14e:	mov    esi,0x2
  40e153:	mov    edx,0x1
  40e158:	lea    rdi,[rip+0x37b1d]        # 445c7c <_IO_stdin_used@@Base+0x17c7c>
  40e15f:	call   406210 <fwrite@plt>
  40e164:	mov    rdi,QWORD PTR [r14+0xd0]
  40e16b:	xor    eax,eax
  40e16d:	lea    rsi,[rip+0x32236]        # 4403aa <_IO_stdin_used@@Base+0x123aa>
  40e174:	mov    edx,r15d
  40e177:	call   406170 <fprintf@plt>
  40e17c:	add    ebx,0x1
  40e17f:	add    r13d,0xffffffff
  40e183:	cmp    DWORD PTR [rsp+0x2c],ebx
  40e187:	jne    40e100 <__flatcc_fb_gen_c_builder@@Base+0x2480>
  40e18d:	mov    eax,DWORD PTR [rsp+0x2c]
  40e191:	add    eax,DWORD PTR [rsp+0x38]
  40e195:	mov    r13d,eax
  40e198:	mov    rbx,r14
  40e19b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40e1a2:	mov    edi,0x29
  40e1a7:	call   406110 <fputc@plt>
  40e1ac:	jmp    40e232 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40e1b1:	xor    eax,eax
  40e1b3:	lea    rsi,[rip+0x321e6]        # 4403a0 <_IO_stdin_used@@Base+0x123a0>
  40e1ba:	mov    edx,r15d
  40e1bd:	mov    rcx,r14
  40e1c0:	mov    r8d,r13d
  40e1c3:	vzeroupper 
  40e1c6:	call   406170 <fprintf@plt>
  40e1cb:	jmp    40e22e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40e1cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e1d4:	cmp    DWORD PTR [rsp+0x18],0x0
  40e1d9:	je     40de1d <__flatcc_fb_gen_c_builder@@Base+0x219d>
  40e1df:	mov    QWORD PTR [rsp],r14
  40e1e3:	xor    eax,eax
  40e1e5:	lea    rsi,[rip+0x3220e]        # 4403fa <_IO_stdin_used@@Base+0x123fa>
  40e1ec:	lea    rdx,[rsp+0x40]
  40e1f1:	mov    r8,r14
  40e1f4:	mov    ecx,r15d
  40e1f7:	mov    r9d,r15d
  40e1fa:	call   406170 <fprintf@plt>
  40e1ff:	jmp    40e22e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40e201:	mov    DWORD PTR [rsp],r13d
  40e205:	xor    eax,eax
  40e207:	lea    rsi,[rip+0x321c7]        # 4403d5 <_IO_stdin_used@@Base+0x123d5>
  40e20e:	jmp    40e21d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40e210:	mov    DWORD PTR [rsp],r13d
  40e214:	xor    eax,eax
  40e216:	lea    rsi,[rip+0x32200]        # 44041d <_IO_stdin_used@@Base+0x1241d>
  40e21d:	mov    r8d,r15d
  40e220:	mov    rdx,rbx
  40e223:	mov    r9,r14
  40e226:	vzeroupper 
  40e229:	call   406170 <fprintf@plt>
  40e22e:	add    r13d,0x1
  40e232:	mov    r12,QWORD PTR [r12]
  40e236:	test   r12,r12
  40e239:	jne    40de40 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
  40e23f:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e244:	jle    40e266 <__flatcc_fb_gen_c_builder@@Base+0x25e6>
  40e246:	mov    rcx,QWORD PTR [rbx+0xd0]
  40e24d:	lea    rdi,[rip+0x320ae]        # 440302 <_IO_stdin_used@@Base+0x12302>
  40e254:	mov    esi,0x4
  40e259:	mov    edx,0x1
  40e25e:	vzeroupper 
  40e261:	call   406210 <fwrite@plt>
  40e266:	lea    rsp,[rbp-0x28]
  40e26a:	pop    rbx
  40e26b:	pop    r12
  40e26d:	pop    r13
  40e26f:	pop    r14
  40e271:	pop    r15
  40e273:	pop    rbp
  40e274:	vzeroupper 
  40e277:	ret    
  40e278:	mov    rax,QWORD PTR [rip+0x42d79]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e27f:	mov    rdi,QWORD PTR [rax]
  40e282:	lea    rsi,[rip+0x2119b]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e289:	lea    rbx,[rip+0x31d70]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40e290:	lea    r8,[rip+0x321a7]        # 44043e <_IO_stdin_used@@Base+0x1243e>
  40e297:	mov    ecx,0x3e1
  40e29c:	xor    eax,eax
  40e29e:	mov    rdx,rbx
  40e2a1:	vzeroupper 
  40e2a4:	call   406170 <fprintf@plt>
  40e2a9:	lea    rdi,[rip+0x320db]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e2b0:	lea    rcx,[rip+0x321a2]        # 440459 <_IO_stdin_used@@Base+0x12459>
  40e2b7:	mov    edx,0x3e1
  40e2bc:	mov    rsi,rbx
  40e2bf:	call   4060f0 <__assert_fail@plt>
  40e2c4:	mov    rax,QWORD PTR [rip+0x42d2d]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e2cb:	mov    rdi,QWORD PTR [rax]
  40e2ce:	lea    rsi,[rip+0x2114f]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e2d5:	lea    rbx,[rip+0x278fa]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40e2dc:	lea    r8,[rip+0x27956]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40e2e3:	mov    ecx,0x60
  40e2e8:	xor    eax,eax
  40e2ea:	mov    rdx,rbx
  40e2ed:	vzeroupper 
  40e2f0:	call   406170 <fprintf@plt>
  40e2f5:	lea    rdi,[rip+0x3208f]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e2fc:	lea    rcx,[rip+0x28266]        # 436569 <_IO_stdin_used@@Base+0x8569>
  40e303:	mov    edx,0x60
  40e308:	mov    rsi,rbx
  40e30b:	call   4060f0 <__assert_fail@plt>
  40e310:	push   rbp
  40e311:	mov    rbp,rsp
  40e314:	push   r15
  40e316:	push   r14
  40e318:	push   r13
  40e31a:	push   r12
  40e31c:	push   rbx
  40e31d:	and    rsp,0xffffffffffffffe0
  40e321:	sub    rsp,0x200
  40e328:	mov    rax,QWORD PTR [rdi+0xd8]
  40e32f:	mov    r14,QWORD PTR [rax+0x40]
  40e333:	test   r14,r14
  40e336:	je     40e542 <__flatcc_fb_gen_c_builder@@Base+0x28c2>
  40e33c:	mov    r15,rdi
  40e33f:	lea    rbx,[rsp+0x100]
  40e347:	mov    r13,rsp
  40e34a:	xor    eax,eax
  40e34c:	nop    DWORD PTR [rax+0x0]
  40e350:	movzx  ecx,WORD PTR [r14+0x10]
  40e355:	cmp    ecx,0x4
  40e358:	jne    40e521 <__flatcc_fb_gen_c_builder@@Base+0x28a1>
  40e35e:	vxorps xmm0,xmm0,xmm0
  40e362:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40e36b:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40e374:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40e37d:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40e386:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40e38f:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40e398:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40e3a1:	mov    QWORD PTR [rsp+0x1e0],0x0
  40e3ad:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e3b6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e3bf:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e3c8:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e3ce:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e3d4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e3da:	vmovaps YMMWORD PTR [rsp],ymm0
  40e3df:	mov    QWORD PTR [rsp+0xe0],0x0
  40e3eb:	mov    rdi,QWORD PTR [r14+0x18]
  40e3ef:	mov    rsi,r14
  40e3f2:	mov    rdx,rbx
  40e3f5:	vzeroupper 
  40e3f8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e3fd:	mov    r12,QWORD PTR [r14+0x28]
  40e401:	test   r12,r12
  40e404:	jne    40e426 <__flatcc_fb_gen_c_builder@@Base+0x27a6>
  40e406:	jmp    40e4fe <__flatcc_fb_gen_c_builder@@Base+0x287e>
  40e40b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e410:	call   406170 <fprintf@plt>
  40e415:	add    rsp,0x30
  40e419:	mov    r12,QWORD PTR [r12]
  40e41d:	test   r12,r12
  40e420:	je     40e4fe <__flatcc_fb_gen_c_builder@@Base+0x287e>
  40e426:	movzx  eax,WORD PTR [r12+0x28]
  40e42c:	test   ax,ax
  40e42f:	je     40e4d0 <__flatcc_fb_gen_c_builder@@Base+0x2850>
  40e435:	movzx  eax,ax
  40e438:	cmp    eax,0xa
  40e43b:	je     40e490 <__flatcc_fb_gen_c_builder@@Base+0x2810>
  40e43d:	cmp    eax,0xe
  40e440:	jne    40e551 <__flatcc_fb_gen_c_builder@@Base+0x28d1>
  40e446:	mov    rsi,QWORD PTR [r12+0x18]
  40e44b:	mov    rdi,QWORD PTR [rsi+0x18]
  40e44f:	mov    rdx,r13
  40e452:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e457:	mov    rax,QWORD PTR [r12+0x8]
  40e45c:	mov    r8d,DWORD PTR [rax+0x8]
  40e460:	mov    r9,QWORD PTR [rax]
  40e463:	mov    rdi,QWORD PTR [r15+0xd0]
  40e46a:	sub    rsp,0x8
  40e46e:	mov    eax,0x0
  40e473:	lea    rsi,[rip+0x32275]        # 4406ef <_IO_stdin_used@@Base+0x126ef>
  40e47a:	mov    rdx,rbx
  40e47d:	mov    rcx,rbx
  40e480:	push   r9
  40e482:	push   r8
  40e484:	push   rbx
  40e485:	push   rbx
  40e486:	push   r13
  40e488:	jmp    40e410 <__flatcc_fb_gen_c_builder@@Base+0x2790>
  40e48a:	nop    WORD PTR [rax+rax*1+0x0]
  40e490:	mov    rax,QWORD PTR [r12+0x8]
  40e495:	mov    r8d,DWORD PTR [rax+0x8]
  40e499:	mov    r9,QWORD PTR [rax]
  40e49c:	mov    rdi,QWORD PTR [r15+0xd0]
  40e4a3:	sub    rsp,0x8
  40e4a7:	mov    eax,0x0
  40e4ac:	lea    rsi,[rip+0x322c0]        # 440773 <_IO_stdin_used@@Base+0x12773>
  40e4b3:	mov    rdx,rbx
  40e4b6:	mov    rcx,rbx
  40e4b9:	push   r9
  40e4bb:	push   r8
  40e4bd:	push   rbx
  40e4be:	push   rbx
  40e4bf:	push   r15
  40e4c1:	jmp    40e410 <__flatcc_fb_gen_c_builder@@Base+0x2790>
  40e4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e4d0:	mov    rdi,QWORD PTR [r15+0xd0]
  40e4d7:	xor    eax,eax
  40e4d9:	lea    rsi,[rip+0x3231d]        # 4407fd <_IO_stdin_used@@Base+0x127fd>
  40e4e0:	mov    rdx,rbx
  40e4e3:	mov    rcx,rbx
  40e4e6:	mov    r8,rbx
  40e4e9:	mov    r9,rbx
  40e4ec:	call   406170 <fprintf@plt>
  40e4f1:	mov    r12,QWORD PTR [r12]
  40e4f5:	test   r12,r12
  40e4f8:	jne    40e426 <__flatcc_fb_gen_c_builder@@Base+0x27a6>
  40e4fe:	mov    rdi,QWORD PTR [r15+0xd0]
  40e505:	xor    eax,eax
  40e507:	lea    rsi,[rip+0x323c4]        # 4408d2 <_IO_stdin_used@@Base+0x128d2>
  40e50e:	mov    rdx,r15
  40e511:	mov    rcx,r15
  40e514:	mov    r8,rbx
  40e517:	call   406170 <fprintf@plt>
  40e51c:	mov    eax,0x1
  40e521:	mov    r14,QWORD PTR [r14]
  40e524:	test   r14,r14
  40e527:	jne    40e350 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40e52d:	test   eax,eax
  40e52f:	je     40e542 <__flatcc_fb_gen_c_builder@@Base+0x28c2>
  40e531:	mov    rsi,QWORD PTR [r15+0xd0]
  40e538:	mov    edi,0xa
  40e53d:	call   406110 <fputc@plt>
  40e542:	lea    rsp,[rbp-0x28]
  40e546:	pop    rbx
  40e547:	pop    r12
  40e549:	pop    r13
  40e54b:	pop    r14
  40e54d:	pop    r15
  40e54f:	pop    rbp
  40e550:	ret    
  40e551:	mov    rax,QWORD PTR [rip+0x42aa0]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e558:	mov    rdi,QWORD PTR [rax]
  40e55b:	lea    rsi,[rip+0x20ec2]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e562:	lea    rbx,[rip+0x31a97]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40e569:	lea    r8,[rip+0x32303]        # 440873 <_IO_stdin_used@@Base+0x12873>
  40e570:	mov    ecx,0x648
  40e575:	xor    eax,eax
  40e577:	mov    rdx,rbx
  40e57a:	call   406170 <fprintf@plt>
  40e57f:	lea    rdi,[rip+0x31e05]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e586:	lea    rcx,[rip+0x32312]        # 44089f <_IO_stdin_used@@Base+0x1289f>
  40e58d:	mov    edx,0x648
  40e592:	mov    rsi,rbx
  40e595:	call   4060f0 <__assert_fail@plt>
  40e59a:	nop    WORD PTR [rax+rax*1+0x0]
  40e5a0:	push   rbx
  40e5a1:	mov    eax,DWORD PTR [rsi+0x10]
  40e5a4:	add    eax,0xfffffffd
  40e5a7:	movzx  ecx,ax
  40e5aa:	cmp    ecx,0x3
  40e5ad:	ja     40e683 <__flatcc_fb_gen_c_builder@@Base+0x2a03>
  40e5b3:	movzx  eax,ax
  40e5b6:	lea    rcx,[rip+0x291fb]        # 4377b8 <_IO_stdin_used@@Base+0x97b8>
  40e5bd:	movsxd rax,DWORD PTR [rcx+rax*4]
  40e5c1:	add    rax,rcx
  40e5c4:	jmp    rax
  40e5c6:	vmovsd xmm0,QWORD PTR [rsi]
  40e5ca:	cmp    edi,0xb
  40e5cd:	jne    40e671 <__flatcc_fb_gen_c_builder@@Base+0x29f1>
  40e5d3:	vcvtsd2ss xmm0,xmm0,xmm0
  40e5d7:	vcvtss2sd xmm0,xmm0,xmm0
  40e5db:	lea    rsi,[rip+0x276e4]        # 435cc6 <_IO_stdin_used@@Base+0x7cc6>
  40e5e2:	jmp    40e678 <__flatcc_fb_gen_c_builder@@Base+0x29f8>
  40e5e7:	add    edi,0xffffffff
  40e5ea:	cmp    edi,0x9
  40e5ed:	jae    40e6cc <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40e5f3:	movsxd rax,edi
  40e5f6:	lea    rcx,[rip+0x42653]        # 450c50 <fb_value_set_deleted@@Base+0x61f0>
  40e5fd:	mov    rbx,QWORD PTR [rcx+rax*8]
  40e601:	mov    rcx,QWORD PTR [rsi]
  40e604:	lea    rsi,[rip+0x276a2]        # 435cad <_IO_stdin_used@@Base+0x7cad>
  40e60b:	jmp    40e663 <__flatcc_fb_gen_c_builder@@Base+0x29e3>
  40e60d:	add    edi,0xffffffff
  40e610:	cmp    edi,0x9
  40e613:	jae    40e6cc <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40e619:	movsxd rax,edi
  40e61c:	lea    rcx,[rip+0x4262d]        # 450c50 <fb_value_set_deleted@@Base+0x61f0>
  40e623:	mov    rbx,QWORD PTR [rcx+rax*8]
  40e627:	movzx  ecx,BYTE PTR [rsi]
  40e62a:	lea    rsi,[rip+0x2768e]        # 435cbf <_IO_stdin_used@@Base+0x7cbf>
  40e631:	xor    eax,eax
  40e633:	mov    rdi,rdx
  40e636:	mov    rdx,rbx
  40e639:	pop    rbx
  40e63a:	jmp    4061f0 <sprintf@plt>
  40e63f:	add    edi,0xffffffff
  40e642:	cmp    edi,0x9
  40e645:	jae    40e6cc <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40e64b:	movsxd rax,edi
  40e64e:	lea    rcx,[rip+0x425fb]        # 450c50 <fb_value_set_deleted@@Base+0x61f0>
  40e655:	mov    rbx,QWORD PTR [rcx+rax*8]
  40e659:	mov    rcx,QWORD PTR [rsi]
  40e65c:	lea    rsi,[rip+0x27653]        # 435cb6 <_IO_stdin_used@@Base+0x7cb6>
  40e663:	xor    eax,eax
  40e665:	mov    rdi,rdx
  40e668:	mov    rdx,rbx
  40e66b:	pop    rbx
  40e66c:	jmp    4061f0 <sprintf@plt>
  40e671:	lea    rsi,[rip+0x27652]        # 435cca <_IO_stdin_used@@Base+0x7cca>
  40e678:	mov    al,0x1
  40e67a:	mov    rdi,rdx
  40e67d:	pop    rbx
  40e67e:	jmp    4061f0 <sprintf@plt>
  40e683:	mov    rax,QWORD PTR [rip+0x4296e]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e68a:	mov    rdi,QWORD PTR [rax]
  40e68d:	lea    rsi,[rip+0x20d90]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e694:	lea    rbx,[rip+0x2753b]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40e69b:	lea    r8,[rip+0x27597]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40e6a2:	mov    ecx,0x104
  40e6a7:	xor    eax,eax
  40e6a9:	mov    rdx,rbx
  40e6ac:	call   406170 <fprintf@plt>
  40e6b1:	lea    rdi,[rip+0x31cd3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e6b8:	lea    rcx,[rip+0x2760f]        # 435cce <_IO_stdin_used@@Base+0x7cce>
  40e6bf:	mov    edx,0x104
  40e6c4:	mov    rsi,rbx
  40e6c7:	call   4060f0 <__assert_fail@plt>
  40e6cc:	mov    rax,QWORD PTR [rip+0x42925]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e6d3:	mov    rdi,QWORD PTR [rax]
  40e6d6:	lea    rsi,[rip+0x20d47]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e6dd:	lea    rbx,[rip+0x274f2]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  40e6e4:	lea    r8,[rip+0x2754e]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  40e6eb:	mov    ecx,0xe2
  40e6f0:	xor    eax,eax
  40e6f2:	mov    rdx,rbx
  40e6f5:	call   406170 <fprintf@plt>
  40e6fa:	lea    rdi,[rip+0x31c8a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e701:	lea    rcx,[rip+0x2762c]        # 435d34 <_IO_stdin_used@@Base+0x7d34>
  40e708:	mov    edx,0xe2
  40e70d:	mov    rsi,rbx
  40e710:	call   4060f0 <__assert_fail@plt>
  40e715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e71f:	nop
  40e720:	push   rbp
  40e721:	mov    rbp,rsp
  40e724:	push   r15
  40e726:	push   r14
  40e728:	push   r13
  40e72a:	push   r12
  40e72c:	push   rbx
  40e72d:	and    rsp,0xffffffffffffffe0
  40e731:	sub    rsp,0x220
  40e738:	mov    rbx,r8
  40e73b:	mov    QWORD PTR [rsp+0x18],rcx
  40e740:	mov    QWORD PTR [rsp+0x10],rdx
  40e745:	mov    QWORD PTR [rsp+0x8],rsi
  40e74a:	mov    r13,rdi
  40e74d:	test   r9d,r9d
  40e750:	lea    rax,[rip+0x3a153]        # 4488aa <fb_schema_table_deleted@@Base+0x217a>
  40e757:	lea    rcx,[rip+0x3258a]        # 440ce8 <_IO_stdin_used@@Base+0x12ce8>
  40e75e:	vxorps xmm0,xmm0,xmm0
  40e762:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40e76b:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40e774:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40e77d:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40e786:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40e78f:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40e798:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40e7a1:	cmove  rcx,rax
  40e7a5:	mov    QWORD PTR [rsp],rcx
  40e7a9:	mov    QWORD PTR [rsp+0x200],0x0
  40e7b5:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e7be:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e7c7:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e7d0:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e7d9:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e7df:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e7e5:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e7eb:	mov    QWORD PTR [rsp+0x100],0x0
  40e7f7:	mov    rdi,QWORD PTR [r8+0x18]
  40e7fb:	lea    rdx,[rsp+0x120]
  40e803:	mov    rsi,r8
  40e806:	vzeroupper 
  40e809:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e80e:	mov    r14,QWORD PTR [rbx+0x28]
  40e812:	test   r14,r14
  40e815:	je     40e90b <__flatcc_fb_gen_c_builder@@Base+0x2c8b>
  40e81b:	lea    rbx,[rsp+0x20]
  40e820:	movzx  eax,WORD PTR [r14+0x28]
  40e825:	test   ax,ax
  40e828:	je     40e8ff <__flatcc_fb_gen_c_builder@@Base+0x2c7f>
  40e82e:	mov    rcx,QWORD PTR [r14+0x8]
  40e832:	mov    r15d,DWORD PTR [rcx+0x8]
  40e836:	mov    r12,QWORD PTR [rcx]
  40e839:	movzx  eax,ax
  40e83c:	cmp    eax,0xa
  40e83f:	je     40e890 <__flatcc_fb_gen_c_builder@@Base+0x2c10>
  40e841:	cmp    eax,0xe
  40e844:	jne    40e91a <__flatcc_fb_gen_c_builder@@Base+0x2c9a>
  40e84a:	mov    rsi,QWORD PTR [r14+0x18]
  40e84e:	mov    rdi,QWORD PTR [rsi+0x18]
  40e852:	mov    rdx,rbx
  40e855:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e85a:	mov    rax,QWORD PTR [r14+0x18]
  40e85e:	movzx  eax,WORD PTR [rax+0x10]
  40e862:	cmp    eax,0x1
  40e865:	je     40e8b9 <__flatcc_fb_gen_c_builder@@Base+0x2c39>
  40e867:	test   ax,ax
  40e86a:	jne    40e963 <__flatcc_fb_gen_c_builder@@Base+0x2ce3>
  40e870:	mov    rdi,QWORD PTR [r13+0xd0]
  40e877:	mov    eax,0x0
  40e87c:	lea    rsi,[rip+0x32472]        # 440cf5 <_IO_stdin_used@@Base+0x12cf5>
  40e883:	jmp    40e8cc <__flatcc_fb_gen_c_builder@@Base+0x2c4c>
  40e885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e88f:	nop
  40e890:	mov    rdi,QWORD PTR [r13+0xd0]
  40e897:	sub    rsp,0x8
  40e89b:	mov    eax,0x0
  40e8a0:	lea    rsi,[rip+0x3255b]        # 440e02 <_IO_stdin_used@@Base+0x12e02>
  40e8a7:	mov    rdx,r13
  40e8aa:	mov    rcx,QWORD PTR [rsp+0x8]
  40e8af:	mov    r8,r13
  40e8b2:	mov    r9,QWORD PTR [rsp+0x10]
  40e8b7:	jmp    40e8dc <__flatcc_fb_gen_c_builder@@Base+0x2c5c>
  40e8b9:	mov    rdi,QWORD PTR [r13+0xd0]
  40e8c0:	mov    eax,0x0
  40e8c5:	lea    rsi,[rip+0x32464]        # 440d30 <_IO_stdin_used@@Base+0x12d30>
  40e8cc:	mov    rdx,r13
  40e8cf:	mov    rcx,QWORD PTR [rsp]
  40e8d3:	mov    r8,r13
  40e8d6:	mov    r9,QWORD PTR [rsp+0x8]
  40e8db:	push   rbx
  40e8dc:	push   r12
  40e8de:	push   r15
  40e8e0:	lea    rbx,[rsp+0x138]
  40e8e8:	push   rbx
  40e8e9:	lea    rbx,[rsp+0x40]
  40e8ee:	push   QWORD PTR [rsp+0x38]
  40e8f2:	push   QWORD PTR [rsp+0x38]
  40e8f6:	call   406170 <fprintf@plt>
  40e8fb:	add    rsp,0x30
  40e8ff:	mov    r14,QWORD PTR [r14]
  40e902:	test   r14,r14
  40e905:	jne    40e820 <__flatcc_fb_gen_c_builder@@Base+0x2ba0>
  40e90b:	lea    rsp,[rbp-0x28]
  40e90f:	pop    rbx
  40e910:	pop    r12
  40e912:	pop    r13
  40e914:	pop    r14
  40e916:	pop    r15
  40e918:	pop    rbp
  40e919:	ret    
  40e91a:	mov    rax,QWORD PTR [rip+0x426d7]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e921:	mov    rdi,QWORD PTR [rax]
  40e924:	lea    rsi,[rip+0x20af9]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e92b:	lea    rbx,[rip+0x316ce]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40e932:	lea    r8,[rip+0x32501]        # 440e3a <_IO_stdin_used@@Base+0x12e3a>
  40e939:	mov    ecx,0x558
  40e93e:	xor    eax,eax
  40e940:	mov    rdx,rbx
  40e943:	call   406170 <fprintf@plt>
  40e948:	lea    rdi,[rip+0x31a3c]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e94f:	lea    rcx,[rip+0x3244c]        # 440da2 <_IO_stdin_used@@Base+0x12da2>
  40e956:	mov    edx,0x558
  40e95b:	mov    rsi,rbx
  40e95e:	call   4060f0 <__assert_fail@plt>
  40e963:	mov    rax,QWORD PTR [rip+0x4268e]        # 450ff8 <stderr@GLIBC_2.2.5>
  40e96a:	mov    rdi,QWORD PTR [rax]
  40e96d:	lea    rsi,[rip+0x20ab0]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40e974:	lea    rbx,[rip+0x31685]        # 440000 <_IO_stdin_used@@Base+0x12000>
  40e97b:	lea    r8,[rip+0x323ea]        # 440d6c <_IO_stdin_used@@Base+0x12d6c>
  40e982:	mov    ecx,0x54e
  40e987:	xor    eax,eax
  40e989:	mov    rdx,rbx
  40e98c:	call   406170 <fprintf@plt>
  40e991:	lea    rdi,[rip+0x319f3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40e998:	lea    rcx,[rip+0x32403]        # 440da2 <_IO_stdin_used@@Base+0x12da2>
  40e99f:	mov    edx,0x54e
  40e9a4:	mov    rsi,rbx
  40e9a7:	call   4060f0 <__assert_fail@plt>
  40e9ac:	nop    DWORD PTR [rax+0x0]

000000000040e9b0 <__flatcc_fb_gen_c_verifier@@Base>:
  40e9b0:	push   rbp
  40e9b1:	mov    rbp,rsp
  40e9b4:	push   r15
  40e9b6:	push   r14
  40e9b8:	push   r13
  40e9ba:	push   r12
  40e9bc:	push   rbx
  40e9bd:	and    rsp,0xffffffffffffffe0
  40e9c1:	sub    rsp,0x220
  40e9c8:	mov    rbx,rdi
  40e9cb:	lea    r13,[rdi+0xd0]
  40e9d2:	mov    rdi,QWORD PTR [rdi+0xd0]
  40e9d9:	mov    rax,QWORD PTR [rbx+0xd8]
  40e9e0:	mov    rdx,QWORD PTR [rax+0x118]
  40e9e7:	lea    rsi,[rip+0x3262a]        # 441018 <_IO_stdin_used@@Base+0x13018>
  40e9ee:	xor    eax,eax
  40e9f0:	mov    rcx,rdx
  40e9f3:	call   406170 <fprintf@plt>
  40e9f8:	mov    rcx,QWORD PTR [rbx+0xd0]
  40e9ff:	lea    rdi,[rip+0x208f5]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  40ea06:	mov    esi,0x51
  40ea0b:	mov    edx,0x1
  40ea10:	call   406210 <fwrite@plt>
  40ea15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea1c:	mov    rax,QWORD PTR [rbx+0xd8]
  40ea23:	mov    rdx,QWORD PTR [rax+0x118]
  40ea2a:	lea    rsi,[rip+0x3150e]        # 43ff3f <_IO_stdin_used@@Base+0x11f3f>
  40ea31:	xor    eax,eax
  40ea33:	call   406170 <fprintf@plt>
  40ea38:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea3f:	mov    rax,QWORD PTR [rbx+0xd8]
  40ea46:	mov    rdx,QWORD PTR [rax+0x110]
  40ea4d:	lea    rsi,[rip+0x31500]        # 43ff54 <_IO_stdin_used@@Base+0x11f54>
  40ea54:	xor    eax,eax
  40ea56:	call   406170 <fprintf@plt>
  40ea5b:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ea62:	lea    rdi,[rip+0x26ab4]        # 43551d <_IO_stdin_used@@Base+0x751d>
  40ea69:	mov    esi,0x7
  40ea6e:	mov    edx,0x1
  40ea73:	call   406210 <fwrite@plt>
  40ea78:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ea7f:	lea    rdi,[rip+0x325bf]        # 441045 <_IO_stdin_used@@Base+0x13045>
  40ea86:	mov    esi,0x24
  40ea8b:	mov    edx,0x1
  40ea90:	call   406210 <fwrite@plt>
  40ea95:	lea    rsi,[rip+0x207b2]        # 42f24e <_IO_stdin_used@@Base+0x124e>
  40ea9c:	lea    rdx,[rip+0x325c7]        # 44106a <_IO_stdin_used@@Base+0x1306a>
  40eaa3:	mov    rdi,rbx
  40eaa6:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40eaab:	mov    QWORD PTR [rsp+0x18],rbx
  40eab0:	mov    rax,QWORD PTR [rbx+0xe0]
  40eab7:	cmp    DWORD PTR [rax+0xac],0x0
  40eabe:	je     40eada <__flatcc_fb_gen_c_verifier@@Base+0x12a>
  40eac0:	mov    rcx,QWORD PTR [r13+0x0]
  40eac4:	lea    rdi,[rip+0x20a26]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  40eacb:	mov    esi,0x24
  40ead0:	mov    edx,0x1
  40ead5:	call   406210 <fwrite@plt>
  40eada:	mov    rbx,QWORD PTR [rsp+0x18]
  40eadf:	mov    rsi,QWORD PTR [rbx+0xd0]
  40eae6:	mov    edi,0xa
  40eaeb:	call   406110 <fputc@plt>
  40eaf0:	vxorps xmm0,xmm0,xmm0
  40eaf4:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eafd:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40eb06:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40eb0f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40eb18:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eb1e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eb24:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40eb2a:	mov    QWORD PTR [rsp+0x100],0x0
  40eb36:	mov    rax,QWORD PTR [rbx+0xd8]
  40eb3d:	mov    rbx,QWORD PTR [rax+0x40]
  40eb41:	test   rbx,rbx
  40eb44:	je     40eb92 <__flatcc_fb_gen_c_verifier@@Base+0x1e2>
  40eb46:	lea    r14,[rsp+0x20]
  40eb4b:	lea    r15,[rip+0x32524]        # 441076 <_IO_stdin_used@@Base+0x13076>
  40eb52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb5c:	nop    DWORD PTR [rax+0x0]
  40eb60:	cmp    WORD PTR [rbx+0x10],0x0
  40eb65:	jne    40eb8a <__flatcc_fb_gen_c_verifier@@Base+0x1da>
  40eb67:	mov    rdi,QWORD PTR [rbx+0x18]
  40eb6b:	mov    rsi,rbx
  40eb6e:	mov    rdx,r14
  40eb71:	vzeroupper 
  40eb74:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40eb79:	mov    rdi,QWORD PTR [r13+0x0]
  40eb7d:	xor    eax,eax
  40eb7f:	mov    rsi,r15
  40eb82:	mov    rdx,r14
  40eb85:	call   406170 <fprintf@plt>
  40eb8a:	mov    rbx,QWORD PTR [rbx]
  40eb8d:	test   rbx,rbx
  40eb90:	jne    40eb60 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40eb92:	mov    rbx,QWORD PTR [rsp+0x18]
  40eb97:	mov    rsi,QWORD PTR [rbx+0xd0]
  40eb9e:	mov    edi,0xa
  40eba3:	vzeroupper 
  40eba6:	call   406110 <fputc@plt>
  40ebab:	mov    rax,QWORD PTR [rbx+0xd8]
  40ebb2:	mov    rbx,QWORD PTR [rax+0x40]
  40ebb6:	test   rbx,rbx
  40ebb9:	je     40f3f3 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40ebbf:	mov    QWORD PTR [rsp+0x10],r13
  40ebc4:	lea    r13,[rsp+0x120]
  40ebcc:	nop    DWORD PTR [rax+0x0]
  40ebd0:	movzx  eax,WORD PTR [rbx+0x10]
  40ebd4:	cmp    eax,0x4
  40ebd7:	jne    40edcc <__flatcc_fb_gen_c_verifier@@Base+0x41c>
  40ebdd:	vxorps xmm0,xmm0,xmm0
  40ebe1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40ebea:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40ebf3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ebfc:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ec05:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40ec0b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40ec11:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40ec17:	mov    QWORD PTR [rsp+0x100],0x0
  40ec23:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40ec2c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40ec35:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40ec3e:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40ec47:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40ec50:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40ec59:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40ec62:	mov    QWORD PTR [rsp+0x200],0x0
  40ec6e:	mov    rdi,QWORD PTR [rbx+0x18]
  40ec72:	mov    rsi,rbx
  40ec75:	lea    r14,[rsp+0x20]
  40ec7a:	mov    rdx,r14
  40ec7d:	vzeroupper 
  40ec80:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ec85:	mov    rax,QWORD PTR [rsp+0x10]
  40ec8a:	mov    rdi,QWORD PTR [rax]
  40ec8d:	xor    eax,eax
  40ec8f:	lea    rsi,[rip+0x32425]        # 4410bb <_IO_stdin_used@@Base+0x130bb>
  40ec96:	mov    rdx,r14
  40ec99:	call   406170 <fprintf@plt>
  40ec9e:	mov    r12,QWORD PTR [rbx+0x28]
  40eca2:	test   r12,r12
  40eca5:	je     40edae <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40ecab:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecb0:	movzx  eax,WORD PTR [r12+0x28]
  40ecb6:	test   ax,ax
  40ecb9:	je     40eda1 <__flatcc_fb_gen_c_verifier@@Base+0x3f1>
  40ecbf:	mov    rcx,QWORD PTR [r12+0x8]
  40ecc4:	mov    r15d,DWORD PTR [rcx+0x8]
  40ecc8:	mov    r14,QWORD PTR [rcx]
  40eccb:	movzx  eax,ax
  40ecce:	cmp    eax,0xa
  40ecd1:	je     40ed40 <__flatcc_fb_gen_c_verifier@@Base+0x390>
  40ecd3:	cmp    eax,0xe
  40ecd6:	jne    40f45b <__flatcc_fb_gen_c_verifier@@Base+0xaab>
  40ecdc:	mov    rsi,QWORD PTR [r12+0x18]
  40ece1:	mov    rdi,QWORD PTR [rsi+0x18]
  40ece5:	mov    rdx,r13
  40ece8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40eced:	mov    rax,QWORD PTR [r12+0x18]
  40ecf2:	movzx  ecx,WORD PTR [rax+0x10]
  40ecf6:	cmp    ecx,0x1
  40ecf9:	je     40ed70 <__flatcc_fb_gen_c_verifier@@Base+0x3c0>
  40ecfb:	test   cx,cx
  40ecfe:	jne    40f4a4 <__flatcc_fb_gen_c_verifier@@Base+0xaf4>
  40ed04:	mov    rax,QWORD PTR [rsp+0x10]
  40ed09:	mov    rdi,QWORD PTR [rax]
  40ed0c:	mov    edx,DWORD PTR [r12+0x48]
  40ed11:	xor    eax,eax
  40ed13:	lea    rsi,[rip+0x32401]        # 44111b <_IO_stdin_used@@Base+0x1311b>
  40ed1a:	mov    rcx,r13
  40ed1d:	mov    r8d,r15d
  40ed20:	mov    r9,r14
  40ed23:	call   406170 <fprintf@plt>
  40ed28:	mov    r12,QWORD PTR [r12]
  40ed2c:	test   r12,r12
  40ed2f:	jne    40ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40ed35:	jmp    40edae <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40ed37:	nop    WORD PTR [rax+rax*1+0x0]
  40ed40:	mov    rax,QWORD PTR [rsp+0x10]
  40ed45:	mov    rdi,QWORD PTR [rax]
  40ed48:	mov    edx,DWORD PTR [r12+0x48]
  40ed4d:	xor    eax,eax
  40ed4f:	lea    rsi,[rip+0x32542]        # 441298 <_IO_stdin_used@@Base+0x13298>
  40ed56:	mov    ecx,r15d
  40ed59:	mov    r8,r14
  40ed5c:	call   406170 <fprintf@plt>
  40ed61:	mov    r12,QWORD PTR [r12]
  40ed65:	test   r12,r12
  40ed68:	jne    40ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40ed6e:	jmp    40edae <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40ed70:	mov    rcx,QWORD PTR [rsp+0x10]
  40ed75:	mov    rdi,QWORD PTR [rcx]
  40ed78:	mov    edx,DWORD PTR [r12+0x48]
  40ed7d:	mov    rcx,QWORD PTR [rax+0xb8]
  40ed84:	movzx  r8d,WORD PTR [rax+0xb0]
  40ed8c:	mov    QWORD PTR [rsp],r14
  40ed90:	xor    eax,eax
  40ed92:	lea    rsi,[rip+0x323d2]        # 44116b <_IO_stdin_used@@Base+0x1316b>
  40ed99:	mov    r9d,r15d
  40ed9c:	call   406170 <fprintf@plt>
  40eda1:	mov    r12,QWORD PTR [r12]
  40eda5:	test   r12,r12
  40eda8:	jne    40ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40edae:	mov    rax,QWORD PTR [rsp+0x10]
  40edb3:	mov    rcx,QWORD PTR [rax]
  40edb6:	mov    esi,0x2f
  40edbb:	mov    edx,0x1
  40edc0:	lea    rdi,[rip+0x32544]        # 44130b <_IO_stdin_used@@Base+0x1330b>
  40edc7:	call   406210 <fwrite@plt>
  40edcc:	mov    rbx,QWORD PTR [rbx]
  40edcf:	test   rbx,rbx
  40edd2:	jne    40ebd0 <__flatcc_fb_gen_c_verifier@@Base+0x220>
  40edd8:	mov    rax,QWORD PTR [rsp+0x18]
  40eddd:	mov    rax,QWORD PTR [rax+0xd8]
  40ede4:	mov    rbx,QWORD PTR [rax+0x40]
  40ede8:	test   rbx,rbx
  40edeb:	mov    r13,QWORD PTR [rsp+0x10]
  40edf0:	je     40f3f3 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40edf6:	lea    r14,[rsp+0x20]
  40edfb:	lea    r13,[rip+0x32674]        # 441476 <_IO_stdin_used@@Base+0x13476>
  40ee02:	lea    r15,[rip+0x32723]        # 44152c <_IO_stdin_used@@Base+0x1352c>
  40ee09:	nop    DWORD PTR [rax+0x0]
  40ee10:	movzx  eax,WORD PTR [rbx+0x10]
  40ee14:	cmp    eax,0x1
  40ee17:	jne    40ef1b <__flatcc_fb_gen_c_verifier@@Base+0x56b>
  40ee1d:	vxorps xmm0,xmm0,xmm0
  40ee21:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40ee2a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40ee33:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ee3c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ee45:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40ee4b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40ee51:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40ee57:	mov    QWORD PTR [rsp+0x100],0x0
  40ee63:	mov    rdi,QWORD PTR [rbx+0x18]
  40ee67:	mov    rsi,rbx
  40ee6a:	mov    rdx,r14
  40ee6d:	vzeroupper 
  40ee70:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ee75:	mov    r12,QWORD PTR [rsp+0x18]
  40ee7a:	mov    rdi,QWORD PTR [r12+0xd0]
  40ee82:	mov    r8,QWORD PTR [rbx+0xb8]
  40ee89:	movzx  r9d,WORD PTR [rbx+0xb0]
  40ee91:	xor    eax,eax
  40ee93:	lea    rsi,[rip+0x324a1]        # 44133b <_IO_stdin_used@@Base+0x1333b>
  40ee9a:	mov    rdx,r14
  40ee9d:	mov    rcx,r14
  40eea0:	call   406170 <fprintf@plt>
  40eea5:	mov    rdi,QWORD PTR [r12+0xd0]
  40eead:	mov    r8,QWORD PTR [rbx+0xb8]
  40eeb4:	movzx  r9d,WORD PTR [rbx+0xb0]
  40eebc:	xor    eax,eax
  40eebe:	lea    rsi,[rip+0x3250e]        # 4413d3 <_IO_stdin_used@@Base+0x133d3>
  40eec5:	mov    rdx,r14
  40eec8:	mov    rcx,r14
  40eecb:	call   406170 <fprintf@plt>
  40eed0:	mov    rdi,QWORD PTR [r12+0xd0]
  40eed8:	mov    r8,QWORD PTR [rbx+0xb8]
  40eedf:	movzx  r9d,WORD PTR [rbx+0xb0]
  40eee7:	xor    eax,eax
  40eee9:	mov    rsi,r13
  40eeec:	mov    rdx,r14
  40eeef:	mov    rcx,r12
  40eef2:	call   406170 <fprintf@plt>
  40eef7:	mov    rdi,QWORD PTR [r12+0xd0]
  40eeff:	mov    rcx,QWORD PTR [rbx+0xb8]
  40ef06:	movzx  r8d,WORD PTR [rbx+0xb0]
  40ef0e:	xor    eax,eax
  40ef10:	mov    rsi,r15
  40ef13:	mov    rdx,r14
  40ef16:	call   406170 <fprintf@plt>
  40ef1b:	mov    rbx,QWORD PTR [rbx]
  40ef1e:	test   rbx,rbx
  40ef21:	jne    40ee10 <__flatcc_fb_gen_c_verifier@@Base+0x460>
  40ef27:	mov    rax,QWORD PTR [rsp+0x18]
  40ef2c:	mov    rax,QWORD PTR [rax+0xd8]
  40ef33:	mov    r12,QWORD PTR [rax+0x40]
  40ef37:	test   r12,r12
  40ef3a:	mov    r13,QWORD PTR [rsp+0x10]
  40ef3f:	je     40f3f3 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40ef45:	lea    rbx,[rsp+0x20]
  40ef4a:	lea    r14,[rip+0x3207b]        # 440fcc <_IO_stdin_used@@Base+0x12fcc>
  40ef51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef60:	cmp    WORD PTR [r12+0x10],0x0
  40ef67:	jne    40f3e6 <__flatcc_fb_gen_c_verifier@@Base+0xa36>
  40ef6d:	vxorps xmm0,xmm0,xmm0
  40ef71:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40ef7a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40ef83:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ef8c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ef95:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40ef9b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40efa1:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40efa7:	mov    QWORD PTR [rsp+0x100],0x0
  40efb3:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40efbc:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40efc5:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40efce:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40efd7:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40efe0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40efe9:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40eff2:	mov    QWORD PTR [rsp+0x200],0x0
  40effe:	mov    rdi,QWORD PTR [r12+0x18]
  40f003:	mov    rsi,r12
  40f006:	mov    rdx,rbx
  40f009:	vzeroupper 
  40f00c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f011:	mov    rdi,QWORD PTR [r13+0x0]
  40f015:	xor    eax,eax
  40f017:	lea    rsi,[rip+0x325bd]        # 4415db <_IO_stdin_used@@Base+0x135db>
  40f01e:	mov    rdx,rbx
  40f021:	call   406170 <fprintf@plt>
  40f026:	mov    r15,QWORD PTR [r12+0x28]
  40f02b:	test   r15,r15
  40f02e:	je     40f32d <__flatcc_fb_gen_c_verifier@@Base+0x97d>
  40f034:	mov    ebx,0x1
  40f039:	jmp    40f060 <__flatcc_fb_gen_c_verifier@@Base+0x6b0>
  40f03b:	movzx  r8d,WORD PTR [r15+0x72]
  40f040:	xor    eax,eax
  40f042:	lea    rsi,[rip+0x3263a]        # 441683 <_IO_stdin_used@@Base+0x13683>
  40f049:	mov    ecx,r13d
  40f04c:	mov    r9,rbx
  40f04f:	call   406170 <fprintf@plt>
  40f054:	jmp    40f2e0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40f059:	nop    DWORD PTR [rax+0x0]
  40f060:	test   BYTE PTR [r15+0x70],0x4
  40f065:	jne    40f303 <__flatcc_fb_gen_c_verifier@@Base+0x953>
  40f06b:	mov    rcx,QWORD PTR [r13+0x0]
  40f06f:	test   ebx,ebx
  40f071:	je     40f086 <__flatcc_fb_gen_c_verifier@@Base+0x6d6>
  40f073:	mov    esi,0x1c
  40f078:	mov    edx,0x1
  40f07d:	lea    rdi,[rip+0x3259d]        # 441621 <_IO_stdin_used@@Base+0x13621>
  40f084:	jmp    40f097 <__flatcc_fb_gen_c_verifier@@Base+0x6e7>
  40f086:	mov    esi,0x1e
  40f08b:	mov    edx,0x1
  40f090:	lea    rdi,[rip+0x325a7]        # 44163e <_IO_stdin_used@@Base+0x1363e>
  40f097:	call   406210 <fwrite@plt>
  40f09c:	mov    eax,DWORD PTR [r15+0x28]
  40f0a0:	add    eax,0xfffffff9
  40f0a3:	movzx  ecx,ax
  40f0a6:	cmp    ecx,0x8
  40f0a9:	ja     40f2e0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40f0af:	mov    ecx,0x108
  40f0b4:	bextr  r13d,DWORD PTR [r15+0x70],ecx
  40f0ba:	movzx  eax,ax
  40f0bd:	movsxd rax,DWORD PTR [r14+rax*4]
  40f0c1:	add    rax,r14
  40f0c4:	jmp    rax
  40f0c6:	mov    rsi,QWORD PTR [r15+0x90]
  40f0cd:	test   rsi,rsi
  40f0d0:	je     40f179 <__flatcc_fb_gen_c_verifier@@Base+0x7c9>
  40f0d6:	mov    rdi,QWORD PTR [rsi+0x18]
  40f0da:	lea    rbx,[rsp+0x120]
  40f0e2:	mov    rdx,rbx
  40f0e5:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f0ea:	mov    rdx,QWORD PTR [r15+0x88]
  40f0f1:	mov    rax,QWORD PTR [r15+0x90]
  40f0f8:	cmp    WORD PTR [rax+0x10],0x0
  40f0fd:	mov    rax,QWORD PTR [rsp+0x10]
  40f102:	mov    rdi,QWORD PTR [rax]
  40f105:	je     40f03b <__flatcc_fb_gen_c_verifier@@Base+0x68b>
  40f10b:	mov    r8,QWORD PTR [r15+0x80]
  40f112:	movzx  r9d,WORD PTR [r15+0x72]
  40f117:	xor    eax,eax
  40f119:	lea    rsi,[rip+0x325ab]        # 4416cb <_IO_stdin_used@@Base+0x136cb>
  40f120:	jmp    40f258 <__flatcc_fb_gen_c_verifier@@Base+0x8a8>
  40f125:	mov    rax,QWORD PTR [rsp+0x10]
  40f12a:	mov    rdi,QWORD PTR [rax]
  40f12d:	mov    rdx,QWORD PTR [r15+0x88]
  40f134:	xor    eax,eax
  40f136:	lea    rsi,[rip+0x32633]        # 441770 <_IO_stdin_used@@Base+0x13770>
  40f13d:	jmp    40f1d4 <__flatcc_fb_gen_c_verifier@@Base+0x824>
  40f142:	mov    rsi,QWORD PTR [r15+0x18]
  40f146:	mov    rdi,QWORD PTR [rsi+0x18]
  40f14a:	lea    rdx,[rsp+0x120]
  40f152:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f157:	mov    rax,QWORD PTR [r15+0x18]
  40f15b:	movzx  eax,WORD PTR [rax+0x10]
  40f15f:	cmp    rax,0x4
  40f163:	ja     40f4ed <__flatcc_fb_gen_c_verifier@@Base+0xb3d>
  40f169:	lea    rcx,[rip+0x31e80]        # 440ff0 <_IO_stdin_used@@Base+0x12ff0>
  40f170:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f174:	add    rax,rcx
  40f177:	jmp    rax
  40f179:	mov    rax,QWORD PTR [rsp+0x10]
  40f17e:	mov    rdi,QWORD PTR [rax]
  40f181:	mov    r8,QWORD PTR [r15+0x80]
  40f188:	mov    rcx,QWORD PTR [r15+0x88]
  40f18f:	movzx  r9d,WORD PTR [r15+0x72]
  40f194:	test   r8,r8
  40f197:	mov    esi,0x1
  40f19c:	cmovne rsi,r8
  40f1a0:	mov    eax,0xffffffff
  40f1a5:	cmp    rax,rsi
  40f1a8:	jb     40f246 <__flatcc_fb_gen_c_verifier@@Base+0x896>
  40f1ae:	mov    eax,0xffffffff
  40f1b3:	xor    edx,edx
  40f1b5:	div    esi
  40f1b7:	jmp    40f248 <__flatcc_fb_gen_c_verifier@@Base+0x898>
  40f1bc:	mov    rax,QWORD PTR [rsp+0x10]
  40f1c1:	mov    rdi,QWORD PTR [rax]
  40f1c4:	mov    rdx,QWORD PTR [r15+0x88]
  40f1cb:	xor    eax,eax
  40f1cd:	lea    rsi,[rip+0x32574]        # 441748 <_IO_stdin_used@@Base+0x13748>
  40f1d4:	mov    ecx,r13d
  40f1d7:	call   406170 <fprintf@plt>
  40f1dc:	jmp    40f2e0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40f1e1:	mov    rsi,QWORD PTR [r15+0x18]
  40f1e5:	mov    rdi,QWORD PTR [rsi+0x18]
  40f1e9:	lea    rdx,[rsp+0x120]
  40f1f1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f1f6:	mov    rax,QWORD PTR [r15+0x18]
  40f1fa:	movzx  eax,WORD PTR [rax+0x10]
  40f1fe:	cmp    rax,0x4
  40f202:	ja     40f536 <__flatcc_fb_gen_c_verifier@@Base+0xb86>
  40f208:	lea    rcx,[rip+0x31df5]        # 441004 <_IO_stdin_used@@Base+0x13004>
  40f20f:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f213:	add    rax,rcx
  40f216:	jmp    rax
  40f218:	mov    rax,QWORD PTR [rsp+0x10]
  40f21d:	mov    rdi,QWORD PTR [rax]
  40f220:	mov    rcx,QWORD PTR [r15+0x80]
  40f227:	mov    rdx,QWORD PTR [r15+0x88]
  40f22e:	movzx  r8d,WORD PTR [r15+0x72]
  40f233:	xor    eax,eax
  40f235:	lea    rsi,[rip+0x32421]        # 44165d <_IO_stdin_used@@Base+0x1365d>
  40f23c:	call   406170 <fprintf@plt>
  40f241:	jmp    40f2e0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40f246:	xor    eax,eax
  40f248:	mov    QWORD PTR [rsp],rax
  40f24c:	xor    eax,eax
  40f24e:	lea    rsi,[rip+0x324b4]        # 441709 <_IO_stdin_used@@Base+0x13709>
  40f255:	mov    rdx,rcx
  40f258:	mov    ecx,r13d
  40f25b:	call   406170 <fprintf@plt>
  40f260:	jmp    40f2e0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40f262:	mov    rax,QWORD PTR [rsp+0x10]
  40f267:	mov    rdi,QWORD PTR [rax]
  40f26a:	mov    rdx,QWORD PTR [r15+0x88]
  40f271:	xor    eax,eax
  40f273:	lea    rsi,[rip+0x32611]        # 44188b <_IO_stdin_used@@Base+0x1388b>
  40f27a:	jmp    40f2c8 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  40f27c:	mov    rax,QWORD PTR [rsp+0x10]
  40f281:	mov    rdi,QWORD PTR [rax]
  40f284:	mov    rdx,QWORD PTR [r15+0x88]
  40f28b:	xor    eax,eax
  40f28d:	lea    rsi,[rip+0x32637]        # 4418cb <_IO_stdin_used@@Base+0x138cb>
  40f294:	jmp    40f2c8 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  40f296:	mov    rax,QWORD PTR [rsp+0x10]
  40f29b:	mov    rdi,QWORD PTR [rax]
  40f29e:	mov    rdx,QWORD PTR [r15+0x88]
  40f2a5:	xor    eax,eax
  40f2a7:	lea    rsi,[rip+0x324f1]        # 44179f <_IO_stdin_used@@Base+0x1379f>
  40f2ae:	jmp    40f2c8 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  40f2b0:	mov    rax,QWORD PTR [rsp+0x10]
  40f2b5:	mov    rdi,QWORD PTR [rax]
  40f2b8:	mov    rdx,QWORD PTR [r15+0x88]
  40f2bf:	xor    eax,eax
  40f2c1:	lea    rsi,[rip+0x32510]        # 4417d8 <_IO_stdin_used@@Base+0x137d8>
  40f2c8:	mov    ecx,r13d
  40f2cb:	lea    r8,[rsp+0x120]
  40f2d3:	call   406170 <fprintf@plt>
  40f2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f2e0:	mov    r13,QWORD PTR [rsp+0x10]
  40f2e5:	mov    rdi,QWORD PTR [r13+0x0]
  40f2e9:	mov    rax,QWORD PTR [r15+0x8]
  40f2ed:	mov    edx,DWORD PTR [rax+0x8]
  40f2f0:	mov    rcx,QWORD PTR [rax]
  40f2f3:	xor    ebx,ebx
  40f2f5:	xor    eax,eax
  40f2f7:	lea    rsi,[rip+0x33304]        # 442602 <_IO_stdin_used@@Base+0x14602>
  40f2fe:	call   406170 <fprintf@plt>
  40f303:	mov    r15,QWORD PTR [r15]
  40f306:	test   r15,r15
  40f309:	jne    40f060 <__flatcc_fb_gen_c_verifier@@Base+0x6b0>
  40f30f:	test   ebx,ebx
  40f311:	jne    40f32d <__flatcc_fb_gen_c_verifier@@Base+0x97d>
  40f313:	mov    rcx,QWORD PTR [r13+0x0]
  40f317:	mov    esi,0xf
  40f31c:	mov    edx,0x1
  40f321:	lea    rdi,[rip+0x32628]        # 441950 <_IO_stdin_used@@Base+0x13950>
  40f328:	call   406210 <fwrite@plt>
  40f32d:	mov    r15,QWORD PTR [rsp+0x18]
  40f332:	mov    rcx,QWORD PTR [r15+0xd0]
  40f339:	mov    esi,0x1d
  40f33e:	mov    edx,0x1
  40f343:	lea    rdi,[rip+0x32616]        # 441960 <_IO_stdin_used@@Base+0x13960>
  40f34a:	call   406210 <fwrite@plt>
  40f34f:	mov    rcx,QWORD PTR [r15+0xd0]
  40f356:	mov    esi,0x3
  40f35b:	mov    edx,0x1
  40f360:	lea    rdi,[rip+0x36808]        # 445b6f <_IO_stdin_used@@Base+0x17b6f>
  40f367:	call   406210 <fwrite@plt>
  40f36c:	mov    rdi,QWORD PTR [r15+0xd0]
  40f373:	xor    eax,eax
  40f375:	lea    rsi,[rip+0x32602]        # 44197e <_IO_stdin_used@@Base+0x1397e>
  40f37c:	lea    rbx,[rsp+0x20]
  40f381:	mov    rdx,rbx
  40f384:	mov    rcx,rbx
  40f387:	mov    r8,rbx
  40f38a:	call   406170 <fprintf@plt>
  40f38f:	mov    rdi,QWORD PTR [r15+0xd0]
  40f396:	xor    eax,eax
  40f398:	lea    rsi,[rip+0x3267f]        # 441a1e <_IO_stdin_used@@Base+0x13a1e>
  40f39f:	mov    rdx,rbx
  40f3a2:	mov    rcx,rbx
  40f3a5:	mov    r8,rbx
  40f3a8:	call   406170 <fprintf@plt>
  40f3ad:	mov    rdi,QWORD PTR [r15+0xd0]
  40f3b4:	xor    eax,eax
  40f3b6:	lea    rsi,[rip+0x3270c]        # 441ac9 <_IO_stdin_used@@Base+0x13ac9>
  40f3bd:	mov    rdx,rbx
  40f3c0:	mov    rcx,rbx
  40f3c3:	call   406170 <fprintf@plt>
  40f3c8:	mov    rdi,QWORD PTR [r15+0xd0]
  40f3cf:	xor    eax,eax
  40f3d1:	lea    rsi,[rip+0x327a8]        # 441b80 <_IO_stdin_used@@Base+0x13b80>
  40f3d8:	mov    rdx,rbx
  40f3db:	mov    rcx,r15
  40f3de:	mov    r8,rbx
  40f3e1:	call   406170 <fprintf@plt>
  40f3e6:	mov    r12,QWORD PTR [r12]
  40f3ea:	test   r12,r12
  40f3ed:	jne    40ef60 <__flatcc_fb_gen_c_verifier@@Base+0x5b0>
  40f3f3:	mov    rax,QWORD PTR [rsp+0x18]
  40f3f8:	mov    rax,QWORD PTR [rax+0xe0]
  40f3ff:	cmp    DWORD PTR [rax+0xac],0x0
  40f406:	je     40f422 <__flatcc_fb_gen_c_verifier@@Base+0xa72>
  40f408:	mov    rcx,QWORD PTR [r13+0x0]
  40f40c:	lea    rdi,[rip+0x25ec8]        # 4352db <_IO_stdin_used@@Base+0x72db>
  40f413:	mov    esi,0x24
  40f418:	mov    edx,0x1
  40f41d:	call   406210 <fwrite@plt>
  40f422:	mov    rax,QWORD PTR [rsp+0x18]
  40f427:	mov    rdi,QWORD PTR [rax+0xd0]
  40f42e:	mov    rax,QWORD PTR [rax+0xd8]
  40f435:	mov    rdx,QWORD PTR [rax+0x118]
  40f43c:	lea    rsi,[rip+0x327fb]        # 441c3e <_IO_stdin_used@@Base+0x13c3e>
  40f443:	xor    eax,eax
  40f445:	call   406170 <fprintf@plt>
  40f44a:	xor    eax,eax
  40f44c:	lea    rsp,[rbp-0x28]
  40f450:	pop    rbx
  40f451:	pop    r12
  40f453:	pop    r13
  40f455:	pop    r14
  40f457:	pop    r15
  40f459:	pop    rbp
  40f45a:	ret    
  40f45b:	mov    rax,QWORD PTR [rip+0x41b96]        # 450ff8 <stderr@GLIBC_2.2.5>
  40f462:	mov    rdi,QWORD PTR [rax]
  40f465:	lea    rsi,[rip+0x1ffb8]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40f46c:	lea    rbx,[rip+0x31d41]        # 4411b4 <_IO_stdin_used@@Base+0x131b4>
  40f473:	lea    r8,[rip+0x31e5e]        # 4412d8 <_IO_stdin_used@@Base+0x132d8>
  40f47a:	mov    ecx,0x53
  40f47f:	xor    eax,eax
  40f481:	mov    rdx,rbx
  40f484:	call   406170 <fprintf@plt>
  40f489:	lea    rdi,[rip+0x30efb]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40f490:	lea    rcx,[rip+0x31dc5]        # 44125c <_IO_stdin_used@@Base+0x1325c>
  40f497:	mov    edx,0x53
  40f49c:	mov    rsi,rbx
  40f49f:	call   4060f0 <__assert_fail@plt>
  40f4a4:	mov    rax,QWORD PTR [rip+0x41b4d]        # 450ff8 <stderr@GLIBC_2.2.5>
  40f4ab:	mov    rdi,QWORD PTR [rax]
  40f4ae:	lea    rsi,[rip+0x1ff6f]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40f4b5:	lea    rbx,[rip+0x31cf8]        # 4411b4 <_IO_stdin_used@@Base+0x131b4>
  40f4bc:	lea    r8,[rip+0x31d5d]        # 441220 <_IO_stdin_used@@Base+0x13220>
  40f4c3:	mov    ecx,0x4a
  40f4c8:	xor    eax,eax
  40f4ca:	mov    rdx,rbx
  40f4cd:	call   406170 <fprintf@plt>
  40f4d2:	lea    rdi,[rip+0x30eb2]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40f4d9:	lea    rcx,[rip+0x31d7c]        # 44125c <_IO_stdin_used@@Base+0x1325c>
  40f4e0:	mov    edx,0x4a
  40f4e5:	mov    rsi,rbx
  40f4e8:	call   4060f0 <__assert_fail@plt>
  40f4ed:	mov    rax,QWORD PTR [rip+0x41b04]        # 450ff8 <stderr@GLIBC_2.2.5>
  40f4f4:	mov    rdi,QWORD PTR [rax]
  40f4f7:	lea    rsi,[rip+0x1ff26]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40f4fe:	lea    rbx,[rip+0x31caf]        # 4411b4 <_IO_stdin_used@@Base+0x131b4>
  40f505:	lea    r8,[rip+0x32401]        # 44190d <_IO_stdin_used@@Base+0x1390d>
  40f50c:	mov    ecx,0xca
  40f511:	xor    eax,eax
  40f513:	mov    rdx,rbx
  40f516:	call   406170 <fprintf@plt>
  40f51b:	lea    rdi,[rip+0x30e69]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40f522:	lea    rcx,[rip+0x32326]        # 44184f <_IO_stdin_used@@Base+0x1384f>
  40f529:	mov    edx,0xca
  40f52e:	mov    rsi,rbx
  40f531:	call   4060f0 <__assert_fail@plt>
  40f536:	mov    rax,QWORD PTR [rip+0x41abb]        # 450ff8 <stderr@GLIBC_2.2.5>
  40f53d:	mov    rdi,QWORD PTR [rax]
  40f540:	lea    rsi,[rip+0x1fedd]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  40f547:	lea    rbx,[rip+0x31c66]        # 4411b4 <_IO_stdin_used@@Base+0x131b4>
  40f54e:	lea    r8,[rip+0x322be]        # 441813 <_IO_stdin_used@@Base+0x13813>
  40f555:	mov    ecx,0xb2
  40f55a:	xor    eax,eax
  40f55c:	mov    rdx,rbx
  40f55f:	call   406170 <fprintf@plt>
  40f564:	lea    rdi,[rip+0x30e20]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40f56b:	lea    rcx,[rip+0x322dd]        # 44184f <_IO_stdin_used@@Base+0x1384f>
  40f572:	mov    edx,0xb2
  40f577:	mov    rsi,rbx
  40f57a:	call   4060f0 <__assert_fail@plt>
  40f57f:	nop

000000000040f580 <__flatcc_fb_gen_c_json_parser@@Base>:
  40f580:	push   rbp
  40f581:	mov    rbp,rsp
  40f584:	push   r15
  40f586:	push   r14
  40f588:	push   r13
  40f58a:	push   r12
  40f58c:	push   rbx
  40f58d:	and    rsp,0xffffffffffffffe0
  40f591:	sub    rsp,0x2a0
  40f598:	mov    r15,rdi
  40f59b:	mov    rax,QWORD PTR [rdi+0xd8]
  40f5a2:	mov    rdx,QWORD PTR [rax+0x118]
  40f5a9:	lea    rsi,[rip+0x32820]        # 441dd0 <_IO_stdin_used@@Base+0x13dd0>
  40f5b0:	xor    eax,eax
  40f5b2:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f5b7:	mov    rax,QWORD PTR [r15+0xd8]
  40f5be:	mov    rdx,QWORD PTR [rax+0x118]
  40f5c5:	lea    rsi,[rip+0x3281d]        # 441de9 <_IO_stdin_used@@Base+0x13de9>
  40f5cc:	xor    eax,eax
  40f5ce:	mov    rdi,r15
  40f5d1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f5d6:	lea    rbx,[rip+0x1ff62]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40f5dd:	xor    eax,eax
  40f5df:	mov    rdi,r15
  40f5e2:	mov    rsi,rbx
  40f5e5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f5ea:	lea    rsi,[rip+0x32811]        # 441e02 <_IO_stdin_used@@Base+0x13e02>
  40f5f1:	xor    eax,eax
  40f5f3:	mov    rdi,r15
  40f5f6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f5fb:	xor    eax,eax
  40f5fd:	mov    rdi,r15
  40f600:	mov    rsi,rbx
  40f603:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f608:	lea    rsi,[rip+0x32842]        # 441e51 <_IO_stdin_used@@Base+0x13e51>
  40f60f:	xor    eax,eax
  40f611:	mov    rdi,r15
  40f614:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f619:	lea    rsi,[rip+0x1fc3a]        # 42f25a <_IO_stdin_used@@Base+0x125a>
  40f620:	lea    rdx,[rip+0x327cc]        # 441df3 <_IO_stdin_used@@Base+0x13df3>
  40f627:	mov    rdi,r15
  40f62a:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40f62f:	mov    rax,QWORD PTR [r15+0xe0]
  40f636:	cmp    DWORD PTR [rax+0xac],0x0
  40f63d:	je     40f65c <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
  40f63f:	mov    rcx,QWORD PTR [r15+0xd0]
  40f646:	lea    rdi,[rip+0x1fea4]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  40f64d:	mov    esi,0x24
  40f652:	mov    edx,0x1
  40f657:	call   406210 <fwrite@plt>
  40f65c:	lea    rsi,[rip+0x1fedc]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40f663:	xor    eax,eax
  40f665:	mov    rdi,r15
  40f668:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f66d:	mov    rax,QWORD PTR [r15+0xd8]
  40f674:	mov    rcx,QWORD PTR [rax+0x58]
  40f678:	vpxor  xmm0,xmm0,xmm0
  40f67c:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40f685:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40f68e:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40f697:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40f6a0:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40f6a6:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40f6ac:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40f6b2:	mov    QWORD PTR [rsp+0x100],0x0
  40f6be:	test   rcx,rcx
  40f6c1:	je     40f7eb <__flatcc_fb_gen_c_json_parser@@Base+0x26b>
  40f6c7:	movzx  ecx,WORD PTR [rcx+0x10]
  40f6cb:	cmp    ecx,0x1
  40f6ce:	ja     40f7eb <__flatcc_fb_gen_c_json_parser@@Base+0x26b>
  40f6d4:	lea    rsi,[rip+0x3279d]        # 441e78 <_IO_stdin_used@@Base+0x13e78>
  40f6db:	xor    eax,eax
  40f6dd:	mov    rdi,r15
  40f6e0:	vzeroupper 
  40f6e3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f6e8:	lea    rsi,[rip+0x3278c]        # 441e7b <_IO_stdin_used@@Base+0x13e7b>
  40f6ef:	xor    eax,eax
  40f6f1:	mov    rdi,r15
  40f6f4:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f6f9:	lea    rsi,[rip+0x327d1]        # 441ed1 <_IO_stdin_used@@Base+0x13ed1>
  40f700:	xor    eax,eax
  40f702:	mov    rdi,r15
  40f705:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f70a:	lea    rsi,[rip+0x327c3]        # 441ed4 <_IO_stdin_used@@Base+0x13ed4>
  40f711:	xor    eax,eax
  40f713:	mov    rdi,r15
  40f716:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f71b:	lea    rsi,[rip+0x327f6]        # 441f18 <_IO_stdin_used@@Base+0x13f18>
  40f722:	xor    eax,eax
  40f724:	mov    rdi,r15
  40f727:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f72c:	lea    rsi,[rip+0x3281b]        # 441f4e <_IO_stdin_used@@Base+0x13f4e>
  40f733:	xor    eax,eax
  40f735:	mov    rdi,r15
  40f738:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f73d:	lea    rsi,[rip+0x32832]        # 441f76 <_IO_stdin_used@@Base+0x13f76>
  40f744:	xor    eax,eax
  40f746:	mov    rdi,r15
  40f749:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f74e:	lea    rsi,[rip+0x32869]        # 441fbe <_IO_stdin_used@@Base+0x13fbe>
  40f755:	xor    eax,eax
  40f757:	mov    rdi,r15
  40f75a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f75f:	lea    rsi,[rip+0x3366c]        # 442dd2 <_IO_stdin_used@@Base+0x14dd2>
  40f766:	xor    eax,eax
  40f768:	mov    rdi,r15
  40f76b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f770:	mov    rax,QWORD PTR [r15+0xd8]
  40f777:	mov    rdx,QWORD PTR [rax+0x110]
  40f77e:	lea    rsi,[rip+0x32877]        # 441ffc <_IO_stdin_used@@Base+0x13ffc>
  40f785:	xor    eax,eax
  40f787:	mov    rdi,r15
  40f78a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f78f:	add    DWORD PTR [r15+0xf0],0x2
  40f797:	lea    rsi,[rip+0x328a7]        # 442045 <_IO_stdin_used@@Base+0x14045>
  40f79e:	xor    eax,eax
  40f7a0:	mov    rdi,r15
  40f7a3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f7a8:	mov    eax,DWORD PTR [r15+0xf0]
  40f7af:	test   eax,eax
  40f7b1:	je     411c2c <__flatcc_fb_gen_c_json_parser@@Base+0x26ac>
  40f7b7:	mov    ecx,eax
  40f7b9:	add    ecx,0xffffffff
  40f7bc:	mov    DWORD PTR [r15+0xf0],ecx
  40f7c3:	je     411c2c <__flatcc_fb_gen_c_json_parser@@Base+0x26ac>
  40f7c9:	add    eax,0xfffffffe
  40f7cc:	mov    DWORD PTR [r15+0xf0],eax
  40f7d3:	lea    rsi,[rip+0x1fd65]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40f7da:	xor    eax,eax
  40f7dc:	mov    rdi,r15
  40f7df:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f7e4:	mov    rax,QWORD PTR [r15+0xd8]
  40f7eb:	mov    rbx,QWORD PTR [rax+0x40]
  40f7ef:	test   rbx,rbx
  40f7f2:	je     40f994 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
  40f7f8:	lea    r13,[rip+0x32549]        # 441d48 <_IO_stdin_used@@Base+0x13d48>
  40f7ff:	lea    r14,[rsp+0x20]
  40f804:	lea    r12,[rip+0x32a35]        # 442240 <_IO_stdin_used@@Base+0x14240>
  40f80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f810:	movzx  eax,WORD PTR [rbx+0x10]
  40f814:	cmp    rax,0x4
  40f818:	ja     40f981 <__flatcc_fb_gen_c_json_parser@@Base+0x401>
  40f81e:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40f823:	add    rax,r13
  40f826:	jmp    rax
  40f828:	mov    rdi,QWORD PTR [rbx+0x18]
  40f82c:	mov    rsi,rbx
  40f82f:	mov    rdx,r14
  40f832:	vzeroupper 
  40f835:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f83a:	xor    eax,eax
  40f83c:	mov    rdi,r15
  40f83f:	lea    rsi,[rip+0x32b31]        # 442377 <_IO_stdin_used@@Base+0x14377>
  40f846:	jmp    40f8e6 <__flatcc_fb_gen_c_json_parser@@Base+0x366>
  40f84b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f850:	mov    rdi,QWORD PTR [rbx+0x18]
  40f854:	mov    rsi,rbx
  40f857:	mov    rdx,r14
  40f85a:	vzeroupper 
  40f85d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f862:	xor    eax,eax
  40f864:	mov    rdi,r15
  40f867:	lea    rsi,[rip+0x3296f]        # 4421dd <_IO_stdin_used@@Base+0x141dd>
  40f86e:	mov    rdx,r14
  40f871:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f876:	add    DWORD PTR [r15+0xf0],0x2
  40f87e:	xor    eax,eax
  40f880:	mov    rdi,r15
  40f883:	mov    rsi,r12
  40f886:	mov    rdx,r14
  40f889:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f88e:	mov    eax,DWORD PTR [r15+0xf0]
  40f895:	test   eax,eax
  40f897:	je     4118cb <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  40f89d:	mov    ecx,eax
  40f89f:	add    ecx,0xffffffff
  40f8a2:	mov    DWORD PTR [r15+0xf0],ecx
  40f8a9:	jne    40f977 <__flatcc_fb_gen_c_json_parser@@Base+0x3f7>
  40f8af:	jmp    4118cb <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  40f8b4:	mov    rdi,QWORD PTR [rbx+0x18]
  40f8b8:	mov    rsi,rbx
  40f8bb:	mov    rdx,r14
  40f8be:	vzeroupper 
  40f8c1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f8c6:	xor    eax,eax
  40f8c8:	mov    rdi,r15
  40f8cb:	lea    rsi,[rip+0x329a1]        # 442273 <_IO_stdin_used@@Base+0x14273>
  40f8d2:	mov    rdx,r14
  40f8d5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f8da:	xor    eax,eax
  40f8dc:	mov    rdi,r15
  40f8df:	lea    rsi,[rip+0x32a0d]        # 4422f3 <_IO_stdin_used@@Base+0x142f3>
  40f8e6:	mov    rdx,r14
  40f8e9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f8ee:	jmp    40f981 <__flatcc_fb_gen_c_json_parser@@Base+0x401>
  40f8f3:	mov    rdi,QWORD PTR [rbx+0x18]
  40f8f7:	mov    rsi,rbx
  40f8fa:	mov    rdx,r14
  40f8fd:	vzeroupper 
  40f900:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f905:	xor    eax,eax
  40f907:	mov    rdi,r15
  40f90a:	lea    rsi,[rip+0x32809]        # 44211a <_IO_stdin_used@@Base+0x1411a>
  40f911:	mov    rdx,r14
  40f914:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f919:	xor    eax,eax
  40f91b:	mov    rdi,r15
  40f91e:	lea    rsi,[rip+0x32884]        # 4421a9 <_IO_stdin_used@@Base+0x141a9>
  40f925:	mov    rdx,r14
  40f928:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f92d:	xor    eax,eax
  40f92f:	mov    rdi,r15
  40f932:	lea    rsi,[rip+0x328a4]        # 4421dd <_IO_stdin_used@@Base+0x141dd>
  40f939:	mov    rdx,r14
  40f93c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f941:	add    DWORD PTR [r15+0xf0],0x2
  40f949:	xor    eax,eax
  40f94b:	mov    rdi,r15
  40f94e:	mov    rsi,r12
  40f951:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f956:	mov    eax,DWORD PTR [r15+0xf0]
  40f95d:	test   eax,eax
  40f95f:	je     4118ea <__flatcc_fb_gen_c_json_parser@@Base+0x236a>
  40f965:	mov    ecx,eax
  40f967:	add    ecx,0xffffffff
  40f96a:	mov    DWORD PTR [r15+0xf0],ecx
  40f971:	je     4118ea <__flatcc_fb_gen_c_json_parser@@Base+0x236a>
  40f977:	add    eax,0xfffffffe
  40f97a:	mov    DWORD PTR [r15+0xf0],eax
  40f981:	mov    rbx,QWORD PTR [rbx]
  40f984:	test   rbx,rbx
  40f987:	jne    40f810 <__flatcc_fb_gen_c_json_parser@@Base+0x290>
  40f98d:	mov    rax,QWORD PTR [r15+0xd8]
  40f994:	mov    rdi,QWORD PTR [rax+0x68]
  40f998:	lea    rsi,[rip+0x25a1]        # 411f40 <__flatcc_fb_gen_c_json_parser@@Base+0x29c0>
  40f99f:	mov    rdx,r15
  40f9a2:	vzeroupper 
  40f9a5:	call   41a8e0 <fb_scope_table_visit@@Base>
  40f9aa:	mov    rax,QWORD PTR [r15+0xd8]
  40f9b1:	mov    rdx,QWORD PTR [rax+0x110]
  40f9b8:	lea    rsi,[rip+0x32a3b]        # 4423fa <_IO_stdin_used@@Base+0x143fa>
  40f9bf:	xor    eax,eax
  40f9c1:	mov    rdi,r15
  40f9c4:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f9c9:	add    DWORD PTR [r15+0xf0],0x2
  40f9d1:	lea    rsi,[rip+0x32868]        # 442240 <_IO_stdin_used@@Base+0x14240>
  40f9d8:	xor    eax,eax
  40f9da:	mov    rdi,r15
  40f9dd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40f9e2:	mov    eax,DWORD PTR [r15+0xf0]
  40f9e9:	test   eax,eax
  40f9eb:	je     411bcf <__flatcc_fb_gen_c_json_parser@@Base+0x264f>
  40f9f1:	mov    ecx,eax
  40f9f3:	add    ecx,0xffffffff
  40f9f6:	mov    DWORD PTR [r15+0xf0],ecx
  40f9fd:	je     411bcf <__flatcc_fb_gen_c_json_parser@@Base+0x264f>
  40fa03:	add    eax,0xfffffffe
  40fa06:	mov    DWORD PTR [r15+0xf0],eax
  40fa0d:	lea    rsi,[rip+0x1fb2b]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40fa14:	xor    eax,eax
  40fa16:	mov    rdi,r15
  40fa19:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fa1e:	mov    rax,QWORD PTR [r15+0xd8]
  40fa25:	mov    r14,QWORD PTR [rax+0x40]
  40fa29:	test   r14,r14
  40fa2c:	je     410cd2 <__flatcc_fb_gen_c_json_parser@@Base+0x1752>
  40fa32:	lea    r13,[rip+0x32323]        # 441d5c <_IO_stdin_used@@Base+0x13d5c>
  40fa39:	vpxor  xmm0,xmm0,xmm0
  40fa3d:	vbroadcastsd ymm1,QWORD PTR [rip+0x322ba]        # 441d00 <_IO_stdin_used@@Base+0x13d00>
  40fa46:	vmovaps YMMWORD PTR [rsp+0x220],ymm1
  40fa4f:	vbroadcastsd ymm1,QWORD PTR [rip+0x322b0]        # 441d08 <_IO_stdin_used@@Base+0x13d08>
  40fa58:	vmovaps YMMWORD PTR [rsp+0x260],ymm1
  40fa61:	vpbroadcastq ymm1,QWORD PTR [rip+0x322a6]        # 441d10 <_IO_stdin_used@@Base+0x13d10>
  40fa6a:	vmovdqa YMMWORD PTR [rsp+0x240],ymm1
  40fa73:	lea    rcx,[rsp+0x20]
  40fa78:	lea    rdx,[rip+0x35993]        # 445412 <_IO_stdin_used@@Base+0x17412>
  40fa7f:	lea    rsi,[rip+0x1fab9]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40fa86:	lea    r12,[rsp+0x120]
  40fa8e:	jmp    40fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x5b0>
  40fa93:	mov    eax,DWORD PTR [r15+0xf0]
  40fa9a:	test   eax,eax
  40fa9c:	je     411bee <__flatcc_fb_gen_c_json_parser@@Base+0x266e>
  40faa2:	add    eax,0xffffffff
  40faa5:	mov    DWORD PTR [r15+0xf0],eax
  40faac:	xor    eax,eax
  40faae:	mov    rdi,r15
  40fab1:	lea    rsi,[rip+0x33ad3]        # 44358b <_IO_stdin_used@@Base+0x1558b>
  40fab8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fabd:	add    DWORD PTR [r15+0xf0],0x1
  40fac5:	xor    eax,eax
  40fac7:	mov    rdi,r15
  40faca:	lea    rsi,[rip+0x344d0]        # 443fa1 <_IO_stdin_used@@Base+0x15fa1>
  40fad1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fad6:	xor    eax,eax
  40fad8:	mov    rdi,r15
  40fadb:	lea    rsi,[rip+0x338d1]        # 4433b3 <_IO_stdin_used@@Base+0x153b3>
  40fae2:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fae7:	mov    eax,DWORD PTR [r15+0xf0]
  40faee:	test   eax,eax
  40faf0:	lea    rsi,[rip+0x21dc1]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  40faf7:	je     411c0d <__flatcc_fb_gen_c_json_parser@@Base+0x268d>
  40fafd:	add    eax,0xffffffff
  40fb00:	mov    DWORD PTR [r15+0xf0],eax
  40fb07:	xor    eax,eax
  40fb09:	mov    rdi,r15
  40fb0c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fb11:	cmp    DWORD PTR [rsp+0x144],0x0
  40fb19:	jne    410b51 <__flatcc_fb_gen_c_json_parser@@Base+0x15d1>
  40fb1f:	jmp    410b62 <__flatcc_fb_gen_c_json_parser@@Base+0x15e2>
  40fb24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb2e:	xchg   ax,ax
  40fb30:	movzx  eax,WORD PTR [r14+0x10]
  40fb35:	cmp    rax,0x4
  40fb39:	ja     410cbf <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  40fb3f:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40fb44:	add    rax,r13
  40fb47:	jmp    rax
  40fb49:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  40fb52:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  40fb5b:	cmp    WORD PTR [r14+0x10],0x0
  40fb61:	jne    411909 <__flatcc_fb_gen_c_json_parser@@Base+0x2389>
  40fb67:	mov    rdi,r14
  40fb6a:	lea    rsi,[rsp+0x1c]
  40fb6f:	vzeroupper 
  40fb72:	call   412620 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  40fb77:	mov    QWORD PTR [rsp+0x120],rax
  40fb7f:	mov    r12d,DWORD PTR [rsp+0x1c]
  40fb84:	test   rax,rax
  40fb87:	jne    40fb92 <__flatcc_fb_gen_c_json_parser@@Base+0x612>
  40fb89:	test   r12d,r12d
  40fb8c:	jg     41192b <__flatcc_fb_gen_c_json_parser@@Base+0x23ab>
  40fb92:	mov    QWORD PTR [rsp+0x138],r14
  40fb9a:	mov    QWORD PTR [rsp+0x140],0x0
  40fba6:	lea    rcx,[rip+0x4503]        # 4140b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b30>
  40fbad:	mov    QWORD PTR [rsp+0x128],rcx
  40fbb5:	lea    rcx,[rip+0x5344]        # 414f00 <__flatcc_fb_gen_c_json_parser@@Base+0x5980>
  40fbbc:	mov    QWORD PTR [rsp+0x130],rcx
  40fbc4:	test   r12d,r12d
  40fbc7:	vpxor  xmm11,xmm11,xmm11
  40fbcc:	vmovdqa ymm12,YMMWORD PTR [rsp+0x220]
  40fbd5:	vmovdqa ymm13,YMMWORD PTR [rsp+0x260]
  40fbde:	vpcmpeqd ymm14,ymm14,ymm14
  40fbe3:	vmovdqa ymm15,YMMWORD PTR [rsp+0x240]
  40fbec:	jle    4103e8 <__flatcc_fb_gen_c_json_parser@@Base+0xe68>
  40fbf2:	cmp    r12d,0x11
  40fbf6:	jae    410728 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
  40fbfc:	xor    ecx,ecx
  40fbfe:	xor    ebx,ebx
  40fc00:	jmp    410824 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  40fc05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc0f:	nop
  40fc10:	mov    rdi,r15
  40fc13:	mov    rsi,r14
  40fc16:	vzeroupper 
  40fc19:	call   411fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a20>
  40fc1e:	lea    rsi,[rip+0x1f91a]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40fc25:	lea    rdx,[rip+0x357e6]        # 445412 <_IO_stdin_used@@Base+0x17412>
  40fc2c:	lea    rcx,[rsp+0x20]
  40fc31:	vpxor  xmm0,xmm0,xmm0
  40fc35:	jmp    410cbf <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  40fc3a:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  40fc43:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  40fc4c:	movzx  eax,WORD PTR [r14+0x10]
  40fc51:	cmp    eax,0x1
  40fc54:	jne    411974 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
  40fc5a:	mov    rdi,r14
  40fc5d:	lea    rsi,[rsp+0x1c]
  40fc62:	vzeroupper 
  40fc65:	call   412620 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  40fc6a:	mov    QWORD PTR [rsp+0x120],rax
  40fc72:	mov    r13d,DWORD PTR [rsp+0x1c]
  40fc77:	test   rax,rax
  40fc7a:	jne    40fc85 <__flatcc_fb_gen_c_json_parser@@Base+0x705>
  40fc7c:	test   r13d,r13d
  40fc7f:	jg     411996 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  40fc85:	mov    QWORD PTR [rsp+0x138],r14
  40fc8d:	mov    DWORD PTR [rsp+0x140],0x1
  40fc98:	lea    rax,[rip+0x4411]        # 4140b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b30>
  40fc9f:	mov    QWORD PTR [rsp+0x128],rax
  40fca7:	lea    rax,[rip+0x5252]        # 414f00 <__flatcc_fb_gen_c_json_parser@@Base+0x5980>
  40fcae:	mov    QWORD PTR [rsp+0x130],rax
  40fcb6:	vpxor  xmm0,xmm0,xmm0
  40fcba:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40fcc3:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40fccc:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40fcd5:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40fcde:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40fce4:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40fcea:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40fcf0:	mov    QWORD PTR [rsp+0x100],0x0
  40fcfc:	mov    rdi,QWORD PTR [r14+0x18]
  40fd00:	mov    rsi,r14
  40fd03:	lea    rbx,[rsp+0x20]
  40fd08:	mov    rdx,rbx
  40fd0b:	vzeroupper 
  40fd0e:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40fd13:	xor    eax,eax
  40fd15:	mov    rdi,r15
  40fd18:	lea    rsi,[rip+0x33170]        # 442e8f <_IO_stdin_used@@Base+0x14e8f>
  40fd1f:	mov    rdx,rbx
  40fd22:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd27:	xor    eax,eax
  40fd29:	mov    rdi,r15
  40fd2c:	lea    rsi,[rip+0x356df]        # 445412 <_IO_stdin_used@@Base+0x17412>
  40fd33:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd38:	add    DWORD PTR [r15+0xf0],0x1
  40fd40:	xor    eax,eax
  40fd42:	mov    rdi,r15
  40fd45:	lea    rsi,[rip+0x331c2]        # 442f0e <_IO_stdin_used@@Base+0x14f0e>
  40fd4c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd51:	test   r13d,r13d
  40fd54:	jle    40fd9a <__flatcc_fb_gen_c_json_parser@@Base+0x81a>
  40fd56:	xor    eax,eax
  40fd58:	mov    rdi,r15
  40fd5b:	lea    rsi,[rip+0x331b6]        # 442f18 <_IO_stdin_used@@Base+0x14f18>
  40fd62:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd67:	xor    eax,eax
  40fd69:	mov    rdi,r15
  40fd6c:	lea    rsi,[rip+0x331bf]        # 442f32 <_IO_stdin_used@@Base+0x14f32>
  40fd73:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd78:	xor    eax,eax
  40fd7a:	mov    rdi,r15
  40fd7d:	lea    rsi,[rip+0x32cc4]        # 442a48 <_IO_stdin_used@@Base+0x14a48>
  40fd84:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd89:	xor    eax,eax
  40fd8b:	mov    rdi,r15
  40fd8e:	lea    rsi,[rip+0x32cc5]        # 442a5a <_IO_stdin_used@@Base+0x14a5a>
  40fd95:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fd9a:	xor    eax,eax
  40fd9c:	mov    rdi,r15
  40fd9f:	lea    rsi,[rip+0x1f799]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  40fda6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fdab:	xor    eax,eax
  40fdad:	mov    rdi,r15
  40fdb0:	lea    rsi,[rip+0x33187]        # 442f3e <_IO_stdin_used@@Base+0x14f3e>
  40fdb7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fdbc:	xor    eax,eax
  40fdbe:	mov    rdi,r15
  40fdc1:	lea    rsi,[rip+0x331b3]        # 442f7b <_IO_stdin_used@@Base+0x14f7b>
  40fdc8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fdcd:	add    DWORD PTR [r15+0xf0],0x1
  40fdd5:	xor    eax,eax
  40fdd7:	mov    rdi,r15
  40fdda:	test   r13d,r13d
  40fddd:	je     4103ef <__flatcc_fb_gen_c_json_parser@@Base+0xe6f>
  40fde3:	lea    rsi,[rip+0x331ee]        # 442fd8 <_IO_stdin_used@@Base+0x14fd8>
  40fdea:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fdef:	xor    eax,eax
  40fdf1:	mov    rdi,r15
  40fdf4:	lea    rsi,[rip+0x32c6b]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  40fdfb:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fe00:	lea    ecx,[r13-0x1]
  40fe04:	xor    edx,edx
  40fe06:	xor    r8d,r8d
  40fe09:	mov    rdi,r15
  40fe0c:	mov    rsi,r12
  40fe0f:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  40fe14:	jmp    41040c <__flatcc_fb_gen_c_json_parser@@Base+0xe8c>
  40fe19:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40fe22:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40fe2b:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40fe34:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40fe3d:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40fe43:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40fe49:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40fe4f:	mov    QWORD PTR [rsp+0x100],0x0
  40fe5b:	vmovdqa YMMWORD PTR [rsp+0x1e0],ymm0
  40fe64:	vmovdqa YMMWORD PTR [rsp+0x1c0],ymm0
  40fe6d:	vmovdqa YMMWORD PTR [rsp+0x1a0],ymm0
  40fe76:	vmovdqa YMMWORD PTR [rsp+0x180],ymm0
  40fe7f:	vmovdqa YMMWORD PTR [rsp+0x160],ymm0
  40fe88:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  40fe91:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  40fe9a:	mov    QWORD PTR [rsp+0x200],0x0
  40fea6:	mov    rdi,QWORD PTR [r14+0x18]
  40feaa:	mov    rbx,rcx
  40fead:	mov    r12,rdx
  40feb0:	mov    r13,rsi
  40feb3:	mov    rsi,r14
  40feb6:	mov    rdx,rcx
  40feb9:	vzeroupper 
  40febc:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40fec1:	xor    eax,eax
  40fec3:	mov    rdi,r15
  40fec6:	lea    rsi,[rip+0x32604]        # 4424d1 <_IO_stdin_used@@Base+0x144d1>
  40fecd:	mov    rdx,rbx
  40fed0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fed5:	xor    eax,eax
  40fed7:	mov    rdi,r15
  40feda:	mov    rsi,r12
  40fedd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fee2:	add    DWORD PTR [r15+0xf0],0x1
  40feea:	xor    eax,eax
  40feec:	mov    rdi,r15
  40feef:	mov    rsi,r13
  40fef2:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40fef7:	xor    eax,eax
  40fef9:	mov    rdi,r15
  40fefc:	lea    rsi,[rip+0x3265e]        # 442561 <_IO_stdin_used@@Base+0x14561>
  40ff03:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40ff08:	xor    eax,eax
  40ff0a:	mov    rdi,r15
  40ff0d:	lea    rsi,[rip+0x3265a]        # 44256e <_IO_stdin_used@@Base+0x1456e>
  40ff14:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40ff19:	xor    eax,eax
  40ff1b:	mov    rdi,r15
  40ff1e:	lea    rsi,[rip+0x32659]        # 44257e <_IO_stdin_used@@Base+0x1457e>
  40ff25:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40ff2a:	add    DWORD PTR [r15+0xf0],0x1
  40ff32:	xor    eax,eax
  40ff34:	mov    rdi,r15
  40ff37:	lea    rsi,[rip+0x32653]        # 442591 <_IO_stdin_used@@Base+0x14591>
  40ff3e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40ff43:	mov    eax,DWORD PTR [r15+0xf0]
  40ff4a:	test   eax,eax
  40ff4c:	je     4119df <__flatcc_fb_gen_c_json_parser@@Base+0x245f>
  40ff52:	add    eax,0xffffffff
  40ff55:	mov    DWORD PTR [r15+0xf0],eax
  40ff5c:	mov    r12,QWORD PTR [r14+0x28]
  40ff60:	test   r12,r12
  40ff63:	je     4100c0 <__flatcc_fb_gen_c_json_parser@@Base+0xb40>
  40ff69:	mov    QWORD PTR [rsp+0x10],r14
  40ff6e:	xchg   ax,ax
  40ff70:	movzx  eax,WORD PTR [r12+0x28]
  40ff76:	test   ax,ax
  40ff79:	je     4100b3 <__flatcc_fb_gen_c_json_parser@@Base+0xb33>
  40ff7f:	mov    rcx,QWORD PTR [r12+0x8]
  40ff84:	mov    ebx,DWORD PTR [rcx+0x8]
  40ff87:	mov    r13,QWORD PTR [rcx]
  40ff8a:	movzx  eax,ax
  40ff8d:	cmp    eax,0xa
  40ff90:	je     410010 <__flatcc_fb_gen_c_json_parser@@Base+0xa90>
  40ff92:	cmp    eax,0xe
  40ff95:	jne    4117fb <__flatcc_fb_gen_c_json_parser@@Base+0x227b>
  40ff9b:	mov    rsi,QWORD PTR [r12+0x18]
  40ffa0:	mov    rdi,QWORD PTR [rsi+0x18]
  40ffa4:	lea    r14,[rsp+0x120]
  40ffac:	mov    rdx,r14
  40ffaf:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ffb4:	mov    edx,DWORD PTR [r12+0x48]
  40ffb9:	xor    eax,eax
  40ffbb:	mov    r14,r15
  40ffbe:	mov    rdi,r15
  40ffc1:	lea    rsi,[rip+0x32632]        # 4425fa <_IO_stdin_used@@Base+0x145fa>
  40ffc8:	mov    ecx,ebx
  40ffca:	mov    r8,r13
  40ffcd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  40ffd2:	add    DWORD PTR [r15+0xf0],0x1
  40ffda:	mov    rax,QWORD PTR [r12+0x18]
  40ffdf:	movzx  eax,WORD PTR [rax+0x10]
  40ffe3:	cmp    eax,0x1
  40ffe6:	je     410065 <__flatcc_fb_gen_c_json_parser@@Base+0xae5>
  40ffe8:	test   ax,ax
  40ffeb:	jne    411844 <__flatcc_fb_gen_c_json_parser@@Base+0x22c4>
  40fff1:	xor    eax,eax
  40fff3:	mov    r14,r15
  40fff6:	mov    rdi,r15
  40fff9:	lea    rsi,[rip+0x3260e]        # 44260e <_IO_stdin_used@@Base+0x1460e>
  410000:	jmp    410071 <__flatcc_fb_gen_c_json_parser@@Base+0xaf1>
  410002:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41000c:	nop    DWORD PTR [rax+0x0]
  410010:	mov    edx,DWORD PTR [r12+0x48]
  410015:	xor    eax,eax
  410017:	mov    rdi,r15
  41001a:	lea    rsi,[rip+0x325d9]        # 4425fa <_IO_stdin_used@@Base+0x145fa>
  410021:	mov    ecx,ebx
  410023:	mov    r8,r13
  410026:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41002b:	add    DWORD PTR [r15+0xf0],0x1
  410033:	xor    eax,eax
  410035:	mov    rdi,r15
  410038:	lea    rsi,[rip+0x32672]        # 4426b1 <_IO_stdin_used@@Base+0x146b1>
  41003f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410044:	xor    eax,eax
  410046:	mov    rdi,r15
  410049:	lea    rsi,[rip+0x3265a]        # 4426aa <_IO_stdin_used@@Base+0x146aa>
  410050:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410055:	mov    eax,DWORD PTR [r15+0xf0]
  41005c:	test   eax,eax
  41005e:	jne    4100a9 <__flatcc_fb_gen_c_json_parser@@Base+0xb29>
  410060:	jmp    41188d <__flatcc_fb_gen_c_json_parser@@Base+0x230d>
  410065:	xor    eax,eax
  410067:	mov    rdi,r14
  41006a:	lea    rsi,[rip+0x325cf]        # 442640 <_IO_stdin_used@@Base+0x14640>
  410071:	lea    rdx,[rsp+0x120]
  410079:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41007e:	mov    rbx,QWORD PTR [rsp+0x10]
  410083:	xor    eax,eax
  410085:	mov    rdi,r14
  410088:	lea    rsi,[rip+0x3261b]        # 4426aa <_IO_stdin_used@@Base+0x146aa>
  41008f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410094:	mov    eax,DWORD PTR [r14+0xf0]
  41009b:	test   eax,eax
  41009d:	mov    r15,r14
  4100a0:	mov    r14,rbx
  4100a3:	je     4118ac <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
  4100a9:	add    eax,0xffffffff
  4100ac:	mov    DWORD PTR [r15+0xf0],eax
  4100b3:	mov    r12,QWORD PTR [r12]
  4100b7:	test   r12,r12
  4100ba:	jne    40ff70 <__flatcc_fb_gen_c_json_parser@@Base+0x9f0>
  4100c0:	xor    eax,eax
  4100c2:	mov    rdi,r15
  4100c5:	lea    rsi,[rip+0x32651]        # 44271d <_IO_stdin_used@@Base+0x1471d>
  4100cc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4100d1:	add    DWORD PTR [r15+0xf0],0x1
  4100d9:	xor    eax,eax
  4100db:	mov    rdi,r15
  4100de:	lea    rsi,[rip+0x32641]        # 442726 <_IO_stdin_used@@Base+0x14726>
  4100e5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4100ea:	add    DWORD PTR [r15+0xf0],0x1
  4100f2:	xor    eax,eax
  4100f4:	mov    rdi,r15
  4100f7:	lea    rsi,[rip+0x32661]        # 44275f <_IO_stdin_used@@Base+0x1475f>
  4100fe:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410103:	mov    eax,DWORD PTR [r15+0xf0]
  41010a:	test   eax,eax
  41010c:	je     4119fe <__flatcc_fb_gen_c_json_parser@@Base+0x247e>
  410112:	add    eax,0xffffffff
  410115:	mov    DWORD PTR [r15+0xf0],eax
  41011c:	xor    eax,eax
  41011e:	mov    rdi,r15
  410121:	lea    rsi,[rip+0x32693]        # 4427bb <_IO_stdin_used@@Base+0x147bb>
  410128:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41012d:	add    DWORD PTR [r15+0xf0],0x1
  410135:	xor    eax,eax
  410137:	mov    rdi,r15
  41013a:	lea    rsi,[rip+0x32683]        # 4427c4 <_IO_stdin_used@@Base+0x147c4>
  410141:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410146:	mov    eax,DWORD PTR [r15+0xf0]
  41014d:	test   eax,eax
  41014f:	lea    r12,[rip+0x31c06]        # 441d5c <_IO_stdin_used@@Base+0x13d5c>
  410156:	je     411a1d <__flatcc_fb_gen_c_json_parser@@Base+0x249d>
  41015c:	mov    r13,r12
  41015f:	add    eax,0xffffffff
  410162:	mov    DWORD PTR [r15+0xf0],eax
  410169:	xor    eax,eax
  41016b:	mov    rdi,r15
  41016e:	lea    rbx,[rip+0x21743]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410175:	mov    rsi,rbx
  410178:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41017d:	mov    eax,DWORD PTR [r15+0xf0]
  410184:	test   eax,eax
  410186:	lea    r12,[rsp+0x120]
  41018e:	je     411a3c <__flatcc_fb_gen_c_json_parser@@Base+0x24bc>
  410194:	add    eax,0xffffffff
  410197:	mov    DWORD PTR [r15+0xf0],eax
  41019e:	xor    eax,eax
  4101a0:	mov    rdi,r15
  4101a3:	mov    rsi,rbx
  4101a6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4101ab:	xor    eax,eax
  4101ad:	mov    rdi,r15
  4101b0:	lea    rsi,[rip+0x32644]        # 4427fb <_IO_stdin_used@@Base+0x147fb>
  4101b7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4101bc:	xor    eax,eax
  4101be:	mov    rdi,r15
  4101c1:	lea    rsi,[rip+0x3264f]        # 442817 <_IO_stdin_used@@Base+0x14817>
  4101c8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4101cd:	add    DWORD PTR [r15+0xf0],0x1
  4101d5:	xor    eax,eax
  4101d7:	mov    rdi,r15
  4101da:	lea    rsi,[rip+0x32646]        # 442827 <_IO_stdin_used@@Base+0x14827>
  4101e1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4101e6:	mov    eax,DWORD PTR [r15+0xf0]
  4101ed:	test   eax,eax
  4101ef:	je     411a5b <__flatcc_fb_gen_c_json_parser@@Base+0x24db>
  4101f5:	add    eax,0xffffffff
  4101f8:	mov    DWORD PTR [r15+0xf0],eax
  4101ff:	xor    eax,eax
  410201:	mov    rdi,r15
  410204:	mov    rsi,rbx
  410207:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41020c:	xor    eax,eax
  41020e:	mov    rdi,r15
  410211:	lea    rsi,[rip+0x325f3]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  410218:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41021d:	mov    eax,DWORD PTR [r15+0xf0]
  410224:	test   eax,eax
  410226:	je     411a7a <__flatcc_fb_gen_c_json_parser@@Base+0x24fa>
  41022c:	add    eax,0xffffffff
  41022f:	mov    DWORD PTR [r15+0xf0],eax
  410236:	xor    eax,eax
  410238:	mov    rdi,r15
  41023b:	mov    rsi,rbx
  41023e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410243:	xor    eax,eax
  410245:	mov    rdi,r15
  410248:	lea    rsi,[rip+0x1f2f0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41024f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410254:	vpxor  xmm0,xmm0,xmm0
  410258:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410261:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  41026a:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410273:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  41027c:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410282:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410288:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  41028e:	mov    QWORD PTR [rsp+0x100],0x0
  41029a:	mov    rdi,QWORD PTR [r14+0x18]
  41029e:	mov    rsi,r14
  4102a1:	lea    rbx,[rsp+0x20]
  4102a6:	mov    rdx,rbx
  4102a9:	vzeroupper 
  4102ac:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4102b1:	xor    eax,eax
  4102b3:	mov    rdi,r15
  4102b6:	lea    rsi,[rip+0x325c0]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4102bd:	mov    rdx,rbx
  4102c0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4102c5:	xor    eax,eax
  4102c7:	mov    rdi,r15
  4102ca:	lea    rsi,[rip+0x35141]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4102d1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4102d6:	add    DWORD PTR [r15+0xf0],0x1
  4102de:	xor    eax,eax
  4102e0:	mov    rdi,r15
  4102e3:	lea    rsi,[rip+0x32284]        # 44256e <_IO_stdin_used@@Base+0x1456e>
  4102ea:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4102ef:	mov    rbx,QWORD PTR [r14+0x28]
  4102f3:	test   rbx,rbx
  4102f6:	jne    410326 <__flatcc_fb_gen_c_json_parser@@Base+0xda6>
  4102f8:	jmp    410346 <__flatcc_fb_gen_c_json_parser@@Base+0xdc6>
  4102fa:	nop    WORD PTR [rax+rax*1+0x0]
  410300:	mov    rax,QWORD PTR [rbx+0x8]
  410304:	mov    r8,QWORD PTR [rax]
  410307:	mov    ecx,DWORD PTR [rax+0x8]
  41030a:	mov    edx,DWORD PTR [rbx+0x48]
  41030d:	xor    eax,eax
  41030f:	mov    rdi,r15
  410312:	lea    rsi,[rip+0x325b4]        # 4428cd <_IO_stdin_used@@Base+0x148cd>
  410319:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41031e:	mov    rbx,QWORD PTR [rbx]
  410321:	test   rbx,rbx
  410324:	je     410346 <__flatcc_fb_gen_c_json_parser@@Base+0xdc6>
  410326:	cmp    WORD PTR [rbx+0x28],0x0
  41032b:	jne    410300 <__flatcc_fb_gen_c_json_parser@@Base+0xd80>
  41032d:	xor    eax,eax
  41032f:	mov    rdi,r15
  410332:	lea    rsi,[rip+0x32577]        # 4428b0 <_IO_stdin_used@@Base+0x148b0>
  410339:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41033e:	mov    rbx,QWORD PTR [rbx]
  410341:	test   rbx,rbx
  410344:	jne    410326 <__flatcc_fb_gen_c_json_parser@@Base+0xda6>
  410346:	xor    eax,eax
  410348:	mov    rdi,r15
  41034b:	lea    rsi,[rip+0x32599]        # 4428eb <_IO_stdin_used@@Base+0x148eb>
  410352:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410357:	mov    eax,DWORD PTR [r15+0xf0]
  41035e:	mov    ecx,eax
  410360:	add    ecx,0x1
  410363:	mov    DWORD PTR [r15+0xf0],ecx
  41036a:	je     411a99 <__flatcc_fb_gen_c_json_parser@@Base+0x2519>
  410370:	mov    DWORD PTR [r15+0xf0],eax
  410377:	xor    eax,eax
  410379:	mov    rdi,r15
  41037c:	lea    rbx,[rip+0x21535]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410383:	mov    rsi,rbx
  410386:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41038b:	mov    eax,DWORD PTR [r15+0xf0]
  410392:	test   eax,eax
  410394:	je     411ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
  41039a:	add    eax,0xffffffff
  41039d:	mov    DWORD PTR [r15+0xf0],eax
  4103a4:	xor    eax,eax
  4103a6:	mov    rdi,r15
  4103a9:	mov    rsi,rbx
  4103ac:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4103b1:	xor    eax,eax
  4103b3:	mov    rdi,r15
  4103b6:	lea    rbx,[rip+0x1f182]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4103bd:	mov    rsi,rbx
  4103c0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4103c5:	mov    rdi,r15
  4103c8:	mov    rsi,r14
  4103cb:	call   411fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a20>
  4103d0:	mov    rsi,rbx
  4103d3:	vpxor  xmm0,xmm0,xmm0
  4103d7:	lea    rcx,[rsp+0x20]
  4103dc:	lea    rdx,[rip+0x3502f]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4103e3:	jmp    410cbf <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  4103e8:	xor    ebx,ebx
  4103ea:	jmp    410857 <__flatcc_fb_gen_c_json_parser@@Base+0x12d7>
  4103ef:	lea    rsi,[rip+0x32b94]        # 442f8a <_IO_stdin_used@@Base+0x14f8a>
  4103f6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4103fb:	xor    eax,eax
  4103fd:	mov    rdi,r15
  410400:	lea    rsi,[rip+0x32b97]        # 442f9e <_IO_stdin_used@@Base+0x14f9e>
  410407:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41040c:	lea    rbx,[rip+0x214a5]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410413:	xor    eax,eax
  410415:	mov    rdi,r15
  410418:	lea    rsi,[rip+0x32bef]        # 44300e <_IO_stdin_used@@Base+0x1500e>
  41041f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410424:	mov    eax,DWORD PTR [r15+0xf0]
  41042b:	test   eax,eax
  41042d:	je     411ad7 <__flatcc_fb_gen_c_json_parser@@Base+0x2557>
  410433:	add    eax,0xffffffff
  410436:	mov    DWORD PTR [r15+0xf0],eax
  41043d:	xor    eax,eax
  41043f:	mov    rdi,r15
  410442:	mov    rsi,rbx
  410445:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41044a:	xor    eax,eax
  41044c:	mov    rdi,r15
  41044f:	lea    rsi,[rip+0x323b5]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  410456:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41045b:	test   r13d,r13d
  41045e:	jle    4104a9 <__flatcc_fb_gen_c_json_parser@@Base+0xf29>
  410460:	mov    eax,DWORD PTR [r15+0xf0]
  410467:	mov    DWORD PTR [r15+0xf8],eax
  41046e:	mov    DWORD PTR [r15+0xf0],0x0
  410479:	xor    eax,eax
  41047b:	mov    rdi,r15
  41047e:	lea    rsi,[rip+0x32bc5]        # 44304a <_IO_stdin_used@@Base+0x1504a>
  410485:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41048a:	mov    eax,DWORD PTR [r15+0xf8]
  410491:	mov    DWORD PTR [r15+0xf0],eax
  410498:	xor    eax,eax
  41049a:	mov    rdi,r15
  41049d:	lea    rsi,[rip+0x32383]        # 442827 <_IO_stdin_used@@Base+0x14827>
  4104a4:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104a9:	mov    eax,DWORD PTR [r15+0xf0]
  4104b0:	test   eax,eax
  4104b2:	je     411af6 <__flatcc_fb_gen_c_json_parser@@Base+0x2576>
  4104b8:	add    eax,0xffffffff
  4104bb:	mov    DWORD PTR [r15+0xf0],eax
  4104c2:	xor    eax,eax
  4104c4:	mov    rdi,r15
  4104c7:	mov    rsi,rbx
  4104ca:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104cf:	xor    eax,eax
  4104d1:	mov    rdi,r15
  4104d4:	lea    rsi,[rip+0x1f064]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4104db:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104e0:	mov    rdi,QWORD PTR [rsp+0x120]
  4104e8:	test   rdi,rdi
  4104eb:	je     4104f2 <__flatcc_fb_gen_c_json_parser@@Base+0xf72>
  4104ed:	call   406040 <free@plt>
  4104f2:	movzx  eax,WORD PTR [r14+0x10]
  4104f7:	cmp    eax,0x1
  4104fa:	jne    411b15 <__flatcc_fb_gen_c_json_parser@@Base+0x2595>
  410500:	vpxor  xmm0,xmm0,xmm0
  410504:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  41050d:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410516:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  41051f:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410528:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  41052e:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410534:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  41053a:	mov    QWORD PTR [rsp+0x100],0x0
  410546:	mov    rdi,QWORD PTR [r14+0x18]
  41054a:	mov    rsi,r14
  41054d:	lea    rbx,[rsp+0x20]
  410552:	mov    rdx,rbx
  410555:	vzeroupper 
  410558:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  41055d:	xor    eax,eax
  41055f:	mov    rdi,r15
  410562:	lea    rsi,[rip+0x335bd]        # 443b26 <_IO_stdin_used@@Base+0x15b26>
  410569:	mov    rdx,rbx
  41056c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410571:	xor    eax,eax
  410573:	mov    rdi,r15
  410576:	lea    r13,[rip+0x34e95]        # 445412 <_IO_stdin_used@@Base+0x17412>
  41057d:	mov    rsi,r13
  410580:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410585:	add    DWORD PTR [r15+0xf0],0x1
  41058d:	xor    eax,eax
  41058f:	mov    rdi,r15
  410592:	lea    rsi,[rip+0x32999]        # 442f32 <_IO_stdin_used@@Base+0x14f32>
  410599:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41059e:	xor    eax,eax
  4105a0:	mov    rdi,r15
  4105a3:	lea    r12,[rip+0x1ef95]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4105aa:	mov    rsi,r12
  4105ad:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105b2:	xor    eax,eax
  4105b4:	mov    rdi,r15
  4105b7:	lea    rsi,[rip+0x31fa3]        # 442561 <_IO_stdin_used@@Base+0x14561>
  4105be:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105c3:	mov    rdx,QWORD PTR [r14+0xb8]
  4105ca:	movzx  ecx,WORD PTR [r14+0xb0]
  4105d2:	xor    eax,eax
  4105d4:	mov    rdi,r15
  4105d7:	lea    rsi,[rip+0x335cb]        # 443ba9 <_IO_stdin_used@@Base+0x15ba9>
  4105de:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105e3:	xor    eax,eax
  4105e5:	mov    rdi,r15
  4105e8:	lea    rsi,[rip+0x3307d]        # 44366c <_IO_stdin_used@@Base+0x1566c>
  4105ef:	mov    rdx,rbx
  4105f2:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105f7:	xor    eax,eax
  4105f9:	mov    rdi,r15
  4105fc:	lea    rsi,[rip+0x335f1]        # 443bf4 <_IO_stdin_used@@Base+0x15bf4>
  410603:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410608:	xor    eax,eax
  41060a:	mov    rdi,r15
  41060d:	lea    rsi,[rip+0x321f7]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  410614:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410619:	mov    eax,DWORD PTR [r15+0xf0]
  410620:	mov    DWORD PTR [r15+0xf8],eax
  410627:	mov    DWORD PTR [r15+0xf0],0x0
  410632:	xor    eax,eax
  410634:	mov    rdi,r15
  410637:	lea    rsi,[rip+0x32a0c]        # 44304a <_IO_stdin_used@@Base+0x1504a>
  41063e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410643:	mov    eax,DWORD PTR [r15+0xf8]
  41064a:	mov    DWORD PTR [r15+0xf0],eax
  410651:	xor    eax,eax
  410653:	mov    rdi,r15
  410656:	lea    rsi,[rip+0x321ca]        # 442827 <_IO_stdin_used@@Base+0x14827>
  41065d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410662:	mov    eax,DWORD PTR [r15+0xf0]
  410669:	test   eax,eax
  41066b:	je     411b34 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
  410671:	add    eax,0xffffffff
  410674:	mov    DWORD PTR [r15+0xf0],eax
  41067b:	xor    eax,eax
  41067d:	mov    rdi,r15
  410680:	lea    r13,[rip+0x21231]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410687:	mov    rsi,r13
  41068a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41068f:	xor    eax,eax
  410691:	mov    rdi,r15
  410694:	mov    rsi,r12
  410697:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41069c:	xor    eax,eax
  41069e:	mov    rdi,r15
  4106a1:	lea    rsi,[rip+0x3359d]        # 443c45 <_IO_stdin_used@@Base+0x15c45>
  4106a8:	mov    rdx,rbx
  4106ab:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4106b0:	xor    eax,eax
  4106b2:	mov    rdi,r15
  4106b5:	lea    rsi,[rip+0x34d56]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4106bc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4106c1:	add    DWORD PTR [r15+0xf0],0x1
  4106c9:	xor    eax,eax
  4106cb:	mov    rdi,r15
  4106ce:	lea    rsi,[rip+0x33604]        # 443cd9 <_IO_stdin_used@@Base+0x15cd9>
  4106d5:	mov    rdx,rbx
  4106d8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4106dd:	mov    eax,DWORD PTR [r15+0xf0]
  4106e4:	test   eax,eax
  4106e6:	je     411b53 <__flatcc_fb_gen_c_json_parser@@Base+0x25d3>
  4106ec:	add    eax,0xffffffff
  4106ef:	mov    DWORD PTR [r15+0xf0],eax
  4106f6:	xor    eax,eax
  4106f8:	mov    rdi,r15
  4106fb:	mov    rsi,r13
  4106fe:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410703:	xor    eax,eax
  410705:	mov    rdi,r15
  410708:	mov    rsi,r12
  41070b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410710:	vpxor  xmm0,xmm0,xmm0
  410714:	lea    rcx,[rsp+0x20]
  410719:	lea    rdx,[rip+0x34cf2]        # 445412 <_IO_stdin_used@@Base+0x17412>
  410720:	mov    rsi,r12
  410723:	jmp    410cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1730>
  410728:	mov    edx,r12d
  41072b:	and    edx,0xf
  41072e:	test   rdx,rdx
  410731:	mov    ecx,0x10
  410736:	cmove  rdx,rcx
  41073a:	mov    rcx,r12
  41073d:	sub    rcx,rdx
  410740:	vpxor  xmm0,xmm0,xmm0
  410744:	mov    rdx,rcx
  410747:	vmovdqa ymm1,YMMWORD PTR [rip+0x31531]        # 441c80 <_IO_stdin_used@@Base+0x13c80>
  41074f:	vmovdqa ymm2,YMMWORD PTR [rip+0x31509]        # 441c60 <_IO_stdin_used@@Base+0x13c60>
  410757:	vpxor  xmm3,xmm3,xmm3
  41075b:	nop    DWORD PTR [rax+rax*1+0x0]
  410760:	vpsllq ymm4,ymm1,0x5
  410765:	vmovq  xmm5,rax
  41076a:	vpbroadcastq ymm5,xmm5
  41076f:	vpaddq ymm4,ymm5,ymm4
  410773:	vpaddq ymm9,ymm4,ymm12
  410778:	vpsllq ymm7,ymm2,0x5
  41077d:	vpaddq ymm5,ymm5,ymm7
  410781:	vpaddq ymm7,ymm5,ymm12
  410786:	vpaddq ymm8,ymm4,ymm13
  41078b:	vpaddq ymm5,ymm5,ymm13
  410790:	vpcmpeqd xmm4,xmm4,xmm4
  410794:	vpgatherqd xmm10,DWORD PTR [ymm7*1+0x0],xmm4
  41079e:	vpcmpeqd xmm4,xmm4,xmm4
  4107a2:	vpgatherqd xmm7,DWORD PTR [ymm9*1+0x0],xmm4
  4107ac:	vpcmpeqd xmm4,xmm4,xmm4
  4107b0:	vpgatherqd xmm6,DWORD PTR [ymm5*1+0x0],xmm4
  4107ba:	vpcmpeqd xmm4,xmm4,xmm4
  4107be:	vpgatherqd xmm5,DWORD PTR [ymm8*1+0x0],xmm4
  4107c8:	vinserti128 ymm4,ymm7,xmm10,0x1
  4107ce:	vinserti128 ymm5,ymm5,xmm6,0x1
  4107d4:	vpcmpeqd ymm4,ymm4,ymm11
  4107d9:	vpxor  ymm4,ymm4,ymm14
  4107de:	vpsubd ymm0,ymm0,ymm4
  4107e2:	vpcmpeqd ymm4,ymm5,ymm11
  4107e7:	vpxor  ymm4,ymm4,ymm14
  4107ec:	vpsubd ymm3,ymm3,ymm4
  4107f0:	vpaddq ymm1,ymm1,ymm15
  4107f5:	vpaddq ymm2,ymm2,ymm15
  4107fa:	add    rdx,0xfffffffffffffff0
  4107fe:	jne    410760 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
  410804:	vpaddd ymm0,ymm3,ymm0
  410808:	vextracti128 xmm1,ymm0,0x1
  41080e:	vpaddd ymm0,ymm0,ymm1
  410812:	vpshufd xmm1,xmm0,0x4e
  410817:	vpaddd ymm0,ymm0,ymm1
  41081b:	vphaddd ymm0,ymm0,ymm0
  410820:	vmovd  ebx,xmm0
  410824:	mov    rdx,r12
  410827:	sub    rdx,rcx
  41082a:	shl    rcx,0x5
  41082e:	add    rax,rcx
  410831:	add    rax,0x18
  410835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41083f:	nop
  410840:	cmp    DWORD PTR [rax],0x1
  410843:	sbb    ebx,0xffffffff
  410846:	add    rax,0x20
  41084a:	add    rdx,0xffffffffffffffff
  41084e:	jne    410840 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
  410850:	mov    DWORD PTR [rsp+0x144],ebx
  410857:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm11
  410860:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm11
  410869:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm11
  410872:	vmovdqa YMMWORD PTR [rsp+0x80],ymm11
  41087b:	vmovdqa YMMWORD PTR [rsp+0x60],ymm11
  410881:	vmovdqa YMMWORD PTR [rsp+0x40],ymm11
  410887:	vmovdqa YMMWORD PTR [rsp+0x20],ymm11
  41088d:	mov    QWORD PTR [rsp+0x100],0x0
  410899:	mov    rdi,QWORD PTR [r14+0x18]
  41089d:	mov    rsi,r14
  4108a0:	lea    r13,[rsp+0x20]
  4108a5:	mov    rdx,r13
  4108a8:	vzeroupper 
  4108ab:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4108b0:	xor    eax,eax
  4108b2:	mov    rdi,r15
  4108b5:	lea    rsi,[rip+0x334b8]        # 443d74 <_IO_stdin_used@@Base+0x15d74>
  4108bc:	mov    rdx,r13
  4108bf:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4108c4:	xor    eax,eax
  4108c6:	mov    rdi,r15
  4108c9:	lea    rsi,[rip+0x34b42]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4108d0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4108d5:	add    DWORD PTR [r15+0xf0],0x1
  4108dd:	xor    eax,eax
  4108df:	mov    rdi,r15
  4108e2:	lea    rsi,[rip+0x32625]        # 442f0e <_IO_stdin_used@@Base+0x14f0e>
  4108e9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4108ee:	test   r12d,r12d
  4108f1:	jle    41093e <__flatcc_fb_gen_c_json_parser@@Base+0x13be>
  4108f3:	xor    eax,eax
  4108f5:	mov    rdi,r15
  4108f8:	lea    rsi,[rip+0x32633]        # 442f32 <_IO_stdin_used@@Base+0x14f32>
  4108ff:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410904:	xor    eax,eax
  410906:	mov    rdi,r15
  410909:	lea    rsi,[rip+0x334e6]        # 443df6 <_IO_stdin_used@@Base+0x15df6>
  410910:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410915:	xor    eax,eax
  410917:	mov    rdi,r15
  41091a:	lea    rsi,[rip+0x32127]        # 442a48 <_IO_stdin_used@@Base+0x14a48>
  410921:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410926:	xor    eax,eax
  410928:	mov    rdi,r15
  41092b:	lea    rsi,[rip+0x32128]        # 442a5a <_IO_stdin_used@@Base+0x14a5a>
  410932:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410937:	mov    ebx,DWORD PTR [rsp+0x144]
  41093e:	test   ebx,ebx
  410940:	je     41095c <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
  410942:	xor    eax,eax
  410944:	mov    rdi,r15
  410947:	lea    rsi,[rip+0x334c9]        # 443e17 <_IO_stdin_used@@Base+0x15e17>
  41094e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410953:	mov    ebx,DWORD PTR [rsp+0x144]
  41095a:	jmp    41095e <__flatcc_fb_gen_c_json_parser@@Base+0x13de>
  41095c:	xor    ebx,ebx
  41095e:	xor    eax,eax
  410960:	mov    rdi,r15
  410963:	lea    rsi,[rip+0x1ebd5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41096a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41096f:	xor    eax,eax
  410971:	mov    rdi,r15
  410974:	lea    rsi,[rip+0x31be6]        # 442561 <_IO_stdin_used@@Base+0x14561>
  41097b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410980:	mov    rdx,QWORD PTR [r14+0xa8]
  410987:	xor    eax,eax
  410989:	mov    rdi,r15
  41098c:	lea    rsi,[rip+0x33495]        # 443e28 <_IO_stdin_used@@Base+0x15e28>
  410993:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410998:	test   ebx,ebx
  41099a:	je     4109b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1430>
  41099c:	movsxd rdx,ebx
  41099f:	xor    eax,eax
  4109a1:	mov    rdi,r15
  4109a4:	lea    rsi,[rip+0x334b9]        # 443e64 <_IO_stdin_used@@Base+0x15e64>
  4109ab:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4109b0:	xor    eax,eax
  4109b2:	mov    rdi,r15
  4109b5:	lea    rsi,[rip+0x32582]        # 442f3e <_IO_stdin_used@@Base+0x14f3e>
  4109bc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4109c1:	xor    eax,eax
  4109c3:	mov    rdi,r15
  4109c6:	lea    rsi,[rip+0x325ae]        # 442f7b <_IO_stdin_used@@Base+0x14f7b>
  4109cd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4109d2:	add    DWORD PTR [r15+0xf0],0x1
  4109da:	xor    eax,eax
  4109dc:	mov    rdi,r15
  4109df:	lea    rsi,[rip+0x325f2]        # 442fd8 <_IO_stdin_used@@Base+0x14fd8>
  4109e6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4109eb:	xor    eax,eax
  4109ed:	mov    rdi,r15
  4109f0:	test   r12d,r12d
  4109f3:	jle    410a1d <__flatcc_fb_gen_c_json_parser@@Base+0x149d>
  4109f5:	lea    rsi,[rip+0x3206a]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  4109fc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a01:	lea    ecx,[r12-0x1]
  410a06:	xor    edx,edx
  410a08:	xor    r8d,r8d
  410a0b:	mov    rdi,r15
  410a0e:	lea    rsi,[rsp+0x120]
  410a16:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  410a1b:	jmp    410a3a <__flatcc_fb_gen_c_json_parser@@Base+0x14ba>
  410a1d:	lea    rsi,[rip+0x3349a]        # 443ebe <_IO_stdin_used@@Base+0x15ebe>
  410a24:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a29:	xor    eax,eax
  410a2b:	mov    rdi,r15
  410a2e:	lea    rsi,[rip+0x32569]        # 442f9e <_IO_stdin_used@@Base+0x14f9e>
  410a35:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a3a:	xor    eax,eax
  410a3c:	mov    rdi,r15
  410a3f:	lea    rsi,[rip+0x33493]        # 443ed9 <_IO_stdin_used@@Base+0x15ed9>
  410a46:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a4b:	mov    eax,DWORD PTR [r15+0xf0]
  410a52:	test   eax,eax
  410a54:	je     411b72 <__flatcc_fb_gen_c_json_parser@@Base+0x25f2>
  410a5a:	add    eax,0xffffffff
  410a5d:	mov    DWORD PTR [r15+0xf0],eax
  410a64:	xor    eax,eax
  410a66:	mov    rdi,r15
  410a69:	lea    rsi,[rip+0x20e48]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410a70:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a75:	xor    eax,eax
  410a77:	mov    rdi,r15
  410a7a:	lea    rsi,[rip+0x33493]        # 443f14 <_IO_stdin_used@@Base+0x15f14>
  410a81:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a86:	test   r12d,r12d
  410a89:	jle    410b47 <__flatcc_fb_gen_c_json_parser@@Base+0x15c7>
  410a8f:	mov    r13d,0x1
  410a95:	mov    ebx,0x10
  410a9a:	nop    WORD PTR [rax+rax*1+0x0]
  410aa0:	mov    rax,QWORD PTR [rsp+0x120]
  410aa8:	mov    rax,QWORD PTR [rax+rbx*1]
  410aac:	movzx  ecx,WORD PTR [rax+0x70]
  410ab0:	test   cl,0x4
  410ab3:	jne    410b30 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  410ab5:	movzx  edx,WORD PTR [rax+0x28]
  410ab9:	and    edx,0xfffffffe
  410abc:	cmp    edx,0xe
  410abf:	jne    410ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  410ac1:	mov    rdx,QWORD PTR [rax+0x18]
  410ac5:	movzx  edx,WORD PTR [rdx+0x10]
  410ac9:	xor    esi,esi
  410acb:	cmp    edx,0x4
  410ace:	sete   sil
  410ad2:	test   ecx,0x100
  410ad8:	jne    410aea <__flatcc_fb_gen_c_json_parser@@Base+0x156a>
  410ada:	jmp    410b30 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  410adc:	nop    DWORD PTR [rax+0x0]
  410ae0:	xor    esi,esi
  410ae2:	test   ecx,0x100
  410ae8:	je     410b30 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  410aea:	mov    rdx,QWORD PTR [rax+0x88]
  410af1:	sub    rdx,rsi
  410af4:	test   r13d,r13d
  410af7:	jne    410b0f <__flatcc_fb_gen_c_json_parser@@Base+0x158f>
  410af9:	xor    r13d,r13d
  410afc:	xor    eax,eax
  410afe:	mov    rdi,r15
  410b01:	lea    rsi,[rip+0x33461]        # 443f69 <_IO_stdin_used@@Base+0x15f69>
  410b08:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b0d:	jmp    410b30 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  410b0f:	xor    r13d,r13d
  410b12:	xor    eax,eax
  410b14:	mov    rdi,r15
  410b17:	lea    rsi,[rip+0x33413]        # 443f31 <_IO_stdin_used@@Base+0x15f31>
  410b1e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b23:	add    DWORD PTR [r15+0xf0],0x1
  410b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  410b30:	add    rbx,0x20
  410b34:	add    r12,0xffffffffffffffff
  410b38:	jne    410aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
  410b3e:	test   r13d,r13d
  410b41:	je     40fa93 <__flatcc_fb_gen_c_json_parser@@Base+0x513>
  410b47:	cmp    DWORD PTR [rsp+0x144],0x0
  410b4f:	je     410b62 <__flatcc_fb_gen_c_json_parser@@Base+0x15e2>
  410b51:	xor    eax,eax
  410b53:	mov    rdi,r15
  410b56:	lea    rsi,[rip+0x3349a]        # 443ff7 <_IO_stdin_used@@Base+0x15ff7>
  410b5d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b62:	xor    eax,eax
  410b64:	mov    rdi,r15
  410b67:	lea    rsi,[rip+0x334cc]        # 44403a <_IO_stdin_used@@Base+0x1603a>
  410b6e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b73:	xor    eax,eax
  410b75:	mov    rdi,r15
  410b78:	lea    rsi,[rip+0x31c8c]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  410b7f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b84:	mov    eax,DWORD PTR [r15+0xf0]
  410b8b:	mov    DWORD PTR [r15+0xf8],eax
  410b92:	mov    DWORD PTR [r15+0xf0],0x0
  410b9d:	xor    eax,eax
  410b9f:	mov    rdi,r15
  410ba2:	lea    rsi,[rip+0x324a1]        # 44304a <_IO_stdin_used@@Base+0x1504a>
  410ba9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410bae:	mov    eax,DWORD PTR [r15+0xf8]
  410bb5:	mov    DWORD PTR [r15+0xf0],eax
  410bbc:	xor    eax,eax
  410bbe:	mov    rdi,r15
  410bc1:	lea    rsi,[rip+0x31c5f]        # 442827 <_IO_stdin_used@@Base+0x14827>
  410bc8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410bcd:	mov    eax,DWORD PTR [r15+0xf0]
  410bd4:	test   eax,eax
  410bd6:	je     411b91 <__flatcc_fb_gen_c_json_parser@@Base+0x2611>
  410bdc:	add    eax,0xffffffff
  410bdf:	mov    DWORD PTR [r15+0xf0],eax
  410be6:	xor    eax,eax
  410be8:	mov    rdi,r15
  410beb:	lea    r13,[rip+0x20cc6]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  410bf2:	mov    rsi,r13
  410bf5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410bfa:	xor    eax,eax
  410bfc:	mov    rdi,r15
  410bff:	lea    r12,[rip+0x1e939]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  410c06:	mov    rsi,r12
  410c09:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c0e:	xor    eax,eax
  410c10:	mov    rdi,r15
  410c13:	lea    rsi,[rip+0x3302b]        # 443c45 <_IO_stdin_used@@Base+0x15c45>
  410c1a:	lea    rbx,[rsp+0x20]
  410c1f:	mov    rdx,rbx
  410c22:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c27:	xor    eax,eax
  410c29:	mov    rdi,r15
  410c2c:	lea    rsi,[rip+0x347df]        # 445412 <_IO_stdin_used@@Base+0x17412>
  410c33:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c38:	add    DWORD PTR [r15+0xf0],0x1
  410c40:	xor    eax,eax
  410c42:	mov    rdi,r15
  410c45:	lea    rsi,[rip+0x33430]        # 44407c <_IO_stdin_used@@Base+0x1607c>
  410c4c:	mov    rdx,rbx
  410c4f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c54:	mov    eax,DWORD PTR [r15+0xf0]
  410c5b:	test   eax,eax
  410c5d:	je     411bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
  410c63:	add    eax,0xffffffff
  410c66:	mov    DWORD PTR [r15+0xf0],eax
  410c6d:	xor    eax,eax
  410c6f:	mov    rdi,r15
  410c72:	mov    rsi,r13
  410c75:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c7a:	xor    eax,eax
  410c7c:	mov    rdi,r15
  410c7f:	mov    rsi,r12
  410c82:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c87:	mov    rdi,QWORD PTR [rsp+0x120]
  410c8f:	test   rdi,rdi
  410c92:	je     410c99 <__flatcc_fb_gen_c_json_parser@@Base+0x1719>
  410c94:	call   406040 <free@plt>
  410c99:	vpxor  xmm0,xmm0,xmm0
  410c9d:	lea    rcx,[rsp+0x20]
  410ca2:	lea    rdx,[rip+0x34769]        # 445412 <_IO_stdin_used@@Base+0x17412>
  410ca9:	lea    rsi,[rip+0x1e88f]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  410cb0:	lea    r12,[rsp+0x120]
  410cb8:	lea    r13,[rip+0x3109d]        # 441d5c <_IO_stdin_used@@Base+0x13d5c>
  410cbf:	mov    r14,QWORD PTR [r14]
  410cc2:	test   r14,r14
  410cc5:	jne    40fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x5b0>
  410ccb:	mov    rax,QWORD PTR [r15+0xd8]
  410cd2:	mov    rdi,QWORD PTR [rax+0x68]
  410cd6:	lea    rsi,[rip+0x1613]        # 4122f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
  410cdd:	mov    rdx,r15
  410ce0:	vzeroupper 
  410ce3:	call   41a8e0 <fb_scope_table_visit@@Base>
  410ce8:	vpxor  xmm0,xmm0,xmm0
  410cec:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  410cf5:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  410cfe:	mov    rax,QWORD PTR [r15+0xd8]
  410d05:	mov    rdi,QWORD PTR [rax+0x68]
  410d09:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410d0f:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410d15:	mov    QWORD PTR [rsp+0x60],0x0
  410d1e:	mov    DWORD PTR [rsp+0x20],0x1
  410d26:	mov    QWORD PTR [rsp+0x68],rax
  410d2b:	lea    rsi,[rip+0x440e]        # 415140 <__flatcc_fb_gen_c_json_parser@@Base+0x5bc0>
  410d32:	lea    rdx,[rsp+0x20]
  410d37:	mov    QWORD PTR [rsp+0x220],rdi
  410d3f:	vzeroupper 
  410d42:	call   41a8e0 <fb_scope_table_visit@@Base>
  410d47:	movsxd r14,DWORD PTR [rsp+0x24]
  410d4c:	mov    esi,0x10
  410d51:	mov    rdi,r14
  410d54:	call   406140 <calloc@plt>
  410d59:	mov    r12,rax
  410d5c:	mov    QWORD PTR [rsp+0x38],rax
  410d61:	mov    r13d,DWORD PTR [rsp+0x28]
  410d66:	movsxd rdi,r13d
  410d69:	mov    esi,0x10
  410d6e:	call   406140 <calloc@plt>
  410d73:	mov    rbx,rax
  410d76:	mov    QWORD PTR [rsp+0x40],rax
  410d7b:	mov    rdi,QWORD PTR [rsp+0x30]
  410d80:	mov    QWORD PTR [rsp+0x10],rdi
  410d85:	call   4061a0 <malloc@plt>
  410d8a:	mov    QWORD PTR [rsp+0x48],rax
  410d8f:	mov    QWORD PTR [rsp+0x50],r12
  410d94:	mov    QWORD PTR [rsp+0x58],rbx
  410d99:	mov    QWORD PTR [rsp+0x60],rax
  410d9e:	test   r14,r14
  410da1:	jle    410da8 <__flatcc_fb_gen_c_json_parser@@Base+0x1828>
  410da3:	test   r12,r12
  410da6:	je     410dd9 <__flatcc_fb_gen_c_json_parser@@Base+0x1859>
  410da8:	test   r13d,r13d
  410dab:	jle    410db2 <__flatcc_fb_gen_c_json_parser@@Base+0x1832>
  410dad:	test   rbx,rbx
  410db0:	je     410dc7 <__flatcc_fb_gen_c_json_parser@@Base+0x1847>
  410db2:	cmp    QWORD PTR [rsp+0x10],0x0
  410db8:	je     4110e7 <__flatcc_fb_gen_c_json_parser@@Base+0x1b67>
  410dbe:	test   rax,rax
  410dc1:	jne    4110e7 <__flatcc_fb_gen_c_json_parser@@Base+0x1b67>
  410dc7:	test   r12,r12
  410dca:	je     410dd9 <__flatcc_fb_gen_c_json_parser@@Base+0x1859>
  410dcc:	mov    rdi,r12
  410dcf:	call   406040 <free@plt>
  410dd4:	mov    rbx,QWORD PTR [rsp+0x40]
  410dd9:	test   rbx,rbx
  410ddc:	je     410de6 <__flatcc_fb_gen_c_json_parser@@Base+0x1866>
  410dde:	mov    rdi,rbx
  410de1:	call   406040 <free@plt>
  410de6:	mov    rdi,QWORD PTR [rsp+0x48]
  410deb:	test   rdi,rdi
  410dee:	je     410df5 <__flatcc_fb_gen_c_json_parser@@Base+0x1875>
  410df0:	call   406040 <free@plt>
  410df5:	vpxor  xmm0,xmm0,xmm0
  410df9:	vmovdqu YMMWORD PTR [rsp+0x50],ymm0
  410dff:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410e05:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410e0b:	mov    rax,QWORD PTR [r15+0xd8]
  410e12:	mov    rsi,QWORD PTR [rax+0x58]
  410e16:	test   rsi,rsi
  410e19:	je     411316 <__flatcc_fb_gen_c_json_parser@@Base+0x1d96>
  410e1f:	movzx  eax,WORD PTR [rsi+0x10]
  410e23:	cmp    eax,0x1
  410e26:	je     410f8e <__flatcc_fb_gen_c_json_parser@@Base+0x1a0e>
  410e2c:	test   ax,ax
  410e2f:	jne    411316 <__flatcc_fb_gen_c_json_parser@@Base+0x1d96>
  410e35:	vpxor  xmm0,xmm0,xmm0
  410e39:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410e42:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410e4b:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410e54:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410e5d:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410e63:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410e69:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410e6f:	mov    QWORD PTR [rsp+0x100],0x0
  410e7b:	mov    rdi,QWORD PTR [rsi+0x18]
  410e7f:	lea    rdx,[rsp+0x20]
  410e84:	vzeroupper 
  410e87:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  410e8c:	mov    rax,QWORD PTR [r15+0xd8]
  410e93:	mov    rdx,QWORD PTR [rax+0x110]
  410e9a:	lea    rsi,[rip+0x3115b]        # 441ffc <_IO_stdin_used@@Base+0x13ffc>
  410ea1:	xor    eax,eax
  410ea3:	mov    rdi,r15
  410ea6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410eab:	add    DWORD PTR [r15+0xf0],0x2
  410eb3:	lea    rsi,[rip+0x3343f]        # 4442f9 <_IO_stdin_used@@Base+0x162f9>
  410eba:	xor    eax,eax
  410ebc:	mov    rdi,r15
  410ebf:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410ec4:	mov    eax,DWORD PTR [r15+0xf0]
  410ecb:	test   eax,eax
  410ecd:	je     411c4b <__flatcc_fb_gen_c_json_parser@@Base+0x26cb>
  410ed3:	mov    ecx,eax
  410ed5:	add    ecx,0xffffffff
  410ed8:	mov    DWORD PTR [r15+0xf0],ecx
  410edf:	je     411c4b <__flatcc_fb_gen_c_json_parser@@Base+0x26cb>
  410ee5:	add    eax,0xfffffffe
  410ee8:	mov    DWORD PTR [r15+0xf0],eax
  410eef:	lea    rsi,[rip+0x3451c]        # 445412 <_IO_stdin_used@@Base+0x17412>
  410ef6:	xor    eax,eax
  410ef8:	mov    rdi,r15
  410efb:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f00:	add    DWORD PTR [r15+0xf0],0x1
  410f08:	lea    rsi,[rip+0x33454]        # 444363 <_IO_stdin_used@@Base+0x16363>
  410f0f:	xor    eax,eax
  410f11:	mov    rdi,r15
  410f14:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f19:	lea    rsi,[rip+0x33460]        # 444380 <_IO_stdin_used@@Base+0x16380>
  410f20:	xor    eax,eax
  410f22:	mov    rdi,r15
  410f25:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f2a:	lea    rsi,[rip+0x1e60e]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  410f31:	xor    eax,eax
  410f33:	mov    rdi,r15
  410f36:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f3b:	lea    rsi,[rip+0x33459]        # 44439b <_IO_stdin_used@@Base+0x1639b>
  410f42:	xor    eax,eax
  410f44:	mov    rdi,r15
  410f47:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f4c:	lea    rsi,[rip+0x33463]        # 4443b6 <_IO_stdin_used@@Base+0x163b6>
  410f53:	xor    eax,eax
  410f55:	mov    rdi,r15
  410f58:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f5d:	mov    rax,QWORD PTR [r15+0xd8]
  410f64:	movzx  ecx,WORD PTR [rax+0x20]
  410f68:	cmp    ecx,0x2
  410f6b:	jne    411151 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd1>
  410f71:	mov    edx,DWORD PTR [rax+0x18]
  410f74:	mov    rcx,QWORD PTR [rax+0x10]
  410f78:	lea    rsi,[rip+0x33472]        # 4443f1 <_IO_stdin_used@@Base+0x163f1>
  410f7f:	xor    eax,eax
  410f81:	mov    rdi,r15
  410f84:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f89:	jmp    411162 <__flatcc_fb_gen_c_json_parser@@Base+0x1be2>
  410f8e:	vpxor  xmm0,xmm0,xmm0
  410f92:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410f9b:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410fa4:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410fad:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410fb6:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410fbc:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410fc2:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410fc8:	mov    QWORD PTR [rsp+0x100],0x0
  410fd4:	mov    rdi,QWORD PTR [rsi+0x18]
  410fd8:	lea    rdx,[rsp+0x20]
  410fdd:	vzeroupper 
  410fe0:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  410fe5:	mov    rax,QWORD PTR [r15+0xd8]
  410fec:	mov    rdx,QWORD PTR [rax+0x110]
  410ff3:	lea    rsi,[rip+0x31002]        # 441ffc <_IO_stdin_used@@Base+0x13ffc>
  410ffa:	xor    eax,eax
  410ffc:	mov    rdi,r15
  410fff:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411004:	add    DWORD PTR [r15+0xf0],0x2
  41100c:	lea    rsi,[rip+0x332e6]        # 4442f9 <_IO_stdin_used@@Base+0x162f9>
  411013:	xor    eax,eax
  411015:	mov    rdi,r15
  411018:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41101d:	mov    eax,DWORD PTR [r15+0xf0]
  411024:	test   eax,eax
  411026:	je     411c6a <__flatcc_fb_gen_c_json_parser@@Base+0x26ea>
  41102c:	mov    ecx,eax
  41102e:	add    ecx,0xffffffff
  411031:	mov    DWORD PTR [r15+0xf0],ecx
  411038:	je     411c6a <__flatcc_fb_gen_c_json_parser@@Base+0x26ea>
  41103e:	add    eax,0xfffffffe
  411041:	mov    DWORD PTR [r15+0xf0],eax
  411048:	lea    rsi,[rip+0x343c3]        # 445412 <_IO_stdin_used@@Base+0x17412>
  41104f:	xor    eax,eax
  411051:	mov    rdi,r15
  411054:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411059:	add    DWORD PTR [r15+0xf0],0x1
  411061:	lea    rsi,[rip+0x334df]        # 444547 <_IO_stdin_used@@Base+0x16547>
  411068:	xor    eax,eax
  41106a:	mov    rdi,r15
  41106d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411072:	lea    rsi,[rip+0x33307]        # 444380 <_IO_stdin_used@@Base+0x16380>
  411079:	xor    eax,eax
  41107b:	mov    rdi,r15
  41107e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411083:	lea    rsi,[rip+0x1e4b5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41108a:	xor    eax,eax
  41108c:	mov    rdi,r15
  41108f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411094:	lea    rsi,[rip+0x334c7]        # 444562 <_IO_stdin_used@@Base+0x16562>
  41109b:	xor    eax,eax
  41109d:	mov    rdi,r15
  4110a0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110a5:	lea    rsi,[rip+0x3330a]        # 4443b6 <_IO_stdin_used@@Base+0x163b6>
  4110ac:	xor    eax,eax
  4110ae:	mov    rdi,r15
  4110b1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110b6:	mov    rax,QWORD PTR [r15+0xd8]
  4110bd:	movzx  ecx,WORD PTR [rax+0x20]
  4110c1:	cmp    ecx,0x2
  4110c4:	jne    41122d <__flatcc_fb_gen_c_json_parser@@Base+0x1cad>
  4110ca:	mov    edx,DWORD PTR [rax+0x18]
  4110cd:	mov    rcx,QWORD PTR [rax+0x10]
  4110d1:	lea    rsi,[rip+0x33319]        # 4443f1 <_IO_stdin_used@@Base+0x163f1>
  4110d8:	xor    eax,eax
  4110da:	mov    rdi,r15
  4110dd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110e2:	jmp    41123e <__flatcc_fb_gen_c_json_parser@@Base+0x1cbe>
  4110e7:	lea    rsi,[rip+0x4072]        # 415160 <__flatcc_fb_gen_c_json_parser@@Base+0x5be0>
  4110ee:	lea    rdx,[rsp+0x20]
  4110f3:	mov    rdi,QWORD PTR [rsp+0x220]
  4110fb:	call   41a8e0 <fb_scope_table_visit@@Base>
  411100:	mov    rbx,QWORD PTR [rsp+0x38]
  411105:	movsxd r14,DWORD PTR [rsp+0x24]
  41110a:	lea    rcx,[rip+0x422f]        # 415340 <__flatcc_fb_gen_c_json_parser@@Base+0x5dc0>
  411111:	mov    edx,0x10
  411116:	mov    rdi,rbx
  411119:	mov    rsi,r14
  41111c:	call   406080 <qsort@plt>
  411121:	test   r14,r14
  411124:	jle    411448 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  41112a:	mov    r8d,r14d
  41112d:	lea    rcx,[r8-0x1]
  411131:	mov    eax,r8d
  411134:	and    eax,0x7
  411137:	cmp    rcx,0x7
  41113b:	jae    411379 <__flatcc_fb_gen_c_json_parser@@Base+0x1df9>
  411141:	xor    ecx,ecx
  411143:	test   rax,rax
  411146:	jne    411415 <__flatcc_fb_gen_c_json_parser@@Base+0x1e95>
  41114c:	jmp    411448 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  411151:	lea    rsi,[rip+0x332d6]        # 44442e <_IO_stdin_used@@Base+0x1642e>
  411158:	xor    eax,eax
  41115a:	mov    rdi,r15
  41115d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411162:	lea    rsi,[rip+0x332fd]        # 444466 <_IO_stdin_used@@Base+0x16466>
  411169:	lea    rdx,[rsp+0x20]
  41116e:	xor    eax,eax
  411170:	mov    rdi,r15
  411173:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411178:	lea    rsi,[rip+0x3331b]        # 44449a <_IO_stdin_used@@Base+0x1649a>
  41117f:	xor    eax,eax
  411181:	mov    rdi,r15
  411184:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411189:	add    DWORD PTR [r15+0xf0],0x1
  411191:	lea    rsi,[rip+0x33314]        # 4444ac <_IO_stdin_used@@Base+0x164ac>
  411198:	xor    eax,eax
  41119a:	mov    rdi,r15
  41119d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111a2:	mov    eax,DWORD PTR [r15+0xf0]
  4111a9:	test   eax,eax
  4111ab:	je     411ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x2728>
  4111b1:	add    eax,0xffffffff
  4111b4:	mov    DWORD PTR [r15+0xf0],eax
  4111bb:	lea    rsi,[rip+0x206f6]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  4111c2:	xor    eax,eax
  4111c4:	mov    rdi,r15
  4111c7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111cc:	lea    rsi,[rip+0x332ec]        # 4444bf <_IO_stdin_used@@Base+0x164bf>
  4111d3:	xor    eax,eax
  4111d5:	mov    rdi,r15
  4111d8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111dd:	lea    rsi,[rip+0x3330f]        # 4444f3 <_IO_stdin_used@@Base+0x164f3>
  4111e4:	xor    eax,eax
  4111e6:	mov    rdi,r15
  4111e9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111ee:	lea    rsi,[rip+0x316ff]        # 4428f4 <_IO_stdin_used@@Base+0x148f4>
  4111f5:	xor    eax,eax
  4111f7:	mov    rdi,r15
  4111fa:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111ff:	mov    eax,DWORD PTR [r15+0xf0]
  411206:	test   eax,eax
  411208:	jne    4112ea <__flatcc_fb_gen_c_json_parser@@Base+0x1d6a>
  41120e:	lea    rdi,[rip+0x30e5c]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411215:	lea    rsi,[rip+0x30e61]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41121c:	lea    rcx,[rip+0x33101]        # 444324 <_IO_stdin_used@@Base+0x16324>
  411223:	mov    edx,0x65e
  411228:	call   4060f0 <__assert_fail@plt>
  41122d:	lea    rsi,[rip+0x331fa]        # 44442e <_IO_stdin_used@@Base+0x1642e>
  411234:	xor    eax,eax
  411236:	mov    rdi,r15
  411239:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41123e:	lea    rsi,[rip+0x33336]        # 44457b <_IO_stdin_used@@Base+0x1657b>
  411245:	lea    rdx,[rsp+0x20]
  41124a:	xor    eax,eax
  41124c:	mov    rdi,r15
  41124f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411254:	lea    rsi,[rip+0x3323f]        # 44449a <_IO_stdin_used@@Base+0x1649a>
  41125b:	xor    eax,eax
  41125d:	mov    rdi,r15
  411260:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411265:	add    DWORD PTR [r15+0xf0],0x1
  41126d:	lea    rsi,[rip+0x33238]        # 4444ac <_IO_stdin_used@@Base+0x164ac>
  411274:	xor    eax,eax
  411276:	mov    rdi,r15
  411279:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41127e:	mov    eax,DWORD PTR [r15+0xf0]
  411285:	test   eax,eax
  411287:	je     411cc7 <__flatcc_fb_gen_c_json_parser@@Base+0x2747>
  41128d:	add    eax,0xffffffff
  411290:	mov    DWORD PTR [r15+0xf0],eax
  411297:	lea    rsi,[rip+0x2061a]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  41129e:	xor    eax,eax
  4112a0:	mov    rdi,r15
  4112a3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112a8:	lea    rsi,[rip+0x33210]        # 4444bf <_IO_stdin_used@@Base+0x164bf>
  4112af:	xor    eax,eax
  4112b1:	mov    rdi,r15
  4112b4:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112b9:	lea    rsi,[rip+0x33233]        # 4444f3 <_IO_stdin_used@@Base+0x164f3>
  4112c0:	xor    eax,eax
  4112c2:	mov    rdi,r15
  4112c5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112ca:	lea    rsi,[rip+0x31623]        # 4428f4 <_IO_stdin_used@@Base+0x148f4>
  4112d1:	xor    eax,eax
  4112d3:	mov    rdi,r15
  4112d6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112db:	mov    eax,DWORD PTR [r15+0xf0]
  4112e2:	test   eax,eax
  4112e4:	je     411ce6 <__flatcc_fb_gen_c_json_parser@@Base+0x2766>
  4112ea:	add    eax,0xffffffff
  4112ed:	mov    DWORD PTR [r15+0xf0],eax
  4112f4:	lea    rsi,[rip+0x205bd]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  4112fb:	xor    eax,eax
  4112fd:	mov    rdi,r15
  411300:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411305:	lea    rsi,[rip+0x1e233]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41130c:	xor    eax,eax
  41130e:	mov    rdi,r15
  411311:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411316:	mov    rax,QWORD PTR [r15+0xe0]
  41131d:	cmp    DWORD PTR [rax+0xac],0x0
  411324:	je     411346 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc6>
  411326:	mov    rcx,QWORD PTR [r15+0xd0]
  41132d:	lea    rdi,[rip+0x23fa7]        # 4352db <_IO_stdin_used@@Base+0x72db>
  411334:	mov    esi,0x24
  411339:	mov    edx,0x1
  41133e:	vzeroupper 
  411341:	call   406210 <fwrite@plt>
  411346:	mov    rax,QWORD PTR [r15+0xd8]
  41134d:	mov    rdx,QWORD PTR [rax+0x118]
  411354:	lea    rsi,[rip+0x3325b]        # 4445b6 <_IO_stdin_used@@Base+0x165b6>
  41135b:	xor    eax,eax
  41135d:	mov    rdi,r15
  411360:	vzeroupper 
  411363:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411368:	xor    eax,eax
  41136a:	lea    rsp,[rbp-0x28]
  41136e:	pop    rbx
  41136f:	pop    r12
  411371:	pop    r13
  411373:	pop    r14
  411375:	pop    r15
  411377:	pop    rbp
  411378:	ret    
  411379:	lea    rsi,[rbx+0x70]
  41137d:	sub    r8,rax
  411380:	xor    ecx,ecx
  411382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41138c:	nop    DWORD PTR [rax+0x0]
  411390:	mov    rdi,QWORD PTR [rsi-0x70]
  411394:	mov    QWORD PTR [rdi+0xc8],rcx
  41139b:	mov    rdi,QWORD PTR [rsi-0x60]
  41139f:	lea    rdx,[rcx+0x1]
  4113a3:	mov    QWORD PTR [rdi+0xc8],rdx
  4113aa:	mov    rdx,QWORD PTR [rsi-0x50]
  4113ae:	lea    rdi,[rcx+0x2]
  4113b2:	mov    QWORD PTR [rdx+0xc8],rdi
  4113b9:	mov    rdx,QWORD PTR [rsi-0x40]
  4113bd:	lea    rdi,[rcx+0x3]
  4113c1:	mov    QWORD PTR [rdx+0xc8],rdi
  4113c8:	mov    rdx,QWORD PTR [rsi-0x30]
  4113cc:	lea    rdi,[rcx+0x4]
  4113d0:	mov    QWORD PTR [rdx+0xc8],rdi
  4113d7:	mov    rdx,QWORD PTR [rsi-0x20]
  4113db:	lea    rdi,[rcx+0x5]
  4113df:	mov    QWORD PTR [rdx+0xc8],rdi
  4113e6:	mov    rdx,QWORD PTR [rsi-0x10]
  4113ea:	lea    rdi,[rcx+0x6]
  4113ee:	mov    QWORD PTR [rdx+0xc8],rdi
  4113f5:	mov    rdx,QWORD PTR [rsi]
  4113f8:	lea    rdi,[rcx+0x7]
  4113fc:	mov    QWORD PTR [rdx+0xc8],rdi
  411403:	add    rcx,0x8
  411407:	sub    rsi,0xffffffffffffff80
  41140b:	cmp    r8,rcx
  41140e:	jne    411390 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
  411410:	test   rax,rax
  411413:	je     411448 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  411415:	mov    rdx,rcx
  411418:	shl    rdx,0x4
  41141c:	add    rbx,rdx
  41141f:	neg    rax
  411422:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41142c:	nop    DWORD PTR [rax+0x0]
  411430:	mov    rdx,QWORD PTR [rbx]
  411433:	mov    QWORD PTR [rdx+0xc8],rcx
  41143a:	add    rcx,0x1
  41143e:	add    rbx,0x10
  411442:	add    rax,0x1
  411446:	jne    411430 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb0>
  411448:	mov    rbx,QWORD PTR [rsp+0x40]
  41144d:	movsxd r14,DWORD PTR [rsp+0x28]
  411452:	lea    rcx,[rip+0x3ee7]        # 415340 <__flatcc_fb_gen_c_json_parser@@Base+0x5dc0>
  411459:	mov    edx,0x10
  41145e:	mov    rdi,rbx
  411461:	mov    rsi,r14
  411464:	call   406080 <qsort@plt>
  411469:	test   r14,r14
  41146c:	jle    411558 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  411472:	mov    r8d,r14d
  411475:	lea    rcx,[r8-0x1]
  411479:	mov    eax,r8d
  41147c:	and    eax,0x7
  41147f:	cmp    rcx,0x7
  411483:	jae    411495 <__flatcc_fb_gen_c_json_parser@@Base+0x1f15>
  411485:	xor    ecx,ecx
  411487:	test   rax,rax
  41148a:	jne    411525 <__flatcc_fb_gen_c_json_parser@@Base+0x1fa5>
  411490:	jmp    411558 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  411495:	lea    rsi,[rbx+0x70]
  411499:	sub    r8,rax
  41149c:	xor    ecx,ecx
  41149e:	xchg   ax,ax
  4114a0:	mov    rdi,QWORD PTR [rsi-0x70]
  4114a4:	mov    QWORD PTR [rdi+0xc8],rcx
  4114ab:	mov    rdi,QWORD PTR [rsi-0x60]
  4114af:	lea    rdx,[rcx+0x1]
  4114b3:	mov    QWORD PTR [rdi+0xc8],rdx
  4114ba:	mov    rdx,QWORD PTR [rsi-0x50]
  4114be:	lea    rdi,[rcx+0x2]
  4114c2:	mov    QWORD PTR [rdx+0xc8],rdi
  4114c9:	mov    rdx,QWORD PTR [rsi-0x40]
  4114cd:	lea    rdi,[rcx+0x3]
  4114d1:	mov    QWORD PTR [rdx+0xc8],rdi
  4114d8:	mov    rdx,QWORD PTR [rsi-0x30]
  4114dc:	lea    rdi,[rcx+0x4]
  4114e0:	mov    QWORD PTR [rdx+0xc8],rdi
  4114e7:	mov    rdx,QWORD PTR [rsi-0x20]
  4114eb:	lea    rdi,[rcx+0x5]
  4114ef:	mov    QWORD PTR [rdx+0xc8],rdi
  4114f6:	mov    rdx,QWORD PTR [rsi-0x10]
  4114fa:	lea    rdi,[rcx+0x6]
  4114fe:	mov    QWORD PTR [rdx+0xc8],rdi
  411505:	mov    rdx,QWORD PTR [rsi]
  411508:	lea    rdi,[rcx+0x7]
  41150c:	mov    QWORD PTR [rdx+0xc8],rdi
  411513:	add    rcx,0x8
  411517:	sub    rsi,0xffffffffffffff80
  41151b:	cmp    r8,rcx
  41151e:	jne    4114a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
  411520:	test   rax,rax
  411523:	je     411558 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  411525:	mov    rdx,rcx
  411528:	shl    rdx,0x4
  41152c:	add    rbx,rdx
  41152f:	neg    rax
  411532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41153c:	nop    DWORD PTR [rax+0x0]
  411540:	mov    rdx,QWORD PTR [rbx]
  411543:	mov    QWORD PTR [rdx+0xc8],rcx
  41154a:	add    rcx,0x1
  41154e:	add    rbx,0x10
  411552:	add    rax,0x1
  411556:	jne    411540 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc0>
  411558:	movsxd rbx,DWORD PTR [rsp+0x28]
  41155d:	test   rbx,rbx
  411560:	je     4115df <__flatcc_fb_gen_c_json_parser@@Base+0x205f>
  411562:	mov    rdi,rbx
  411565:	shl    rdi,0x5
  411569:	call   4061a0 <malloc@plt>
  41156e:	test   rax,rax
  411571:	je     4115ef <__flatcc_fb_gen_c_json_parser@@Base+0x206f>
  411573:	mov    r13,rax
  411576:	mov    QWORD PTR [rsp+0x10],rbx
  41157b:	test   ebx,ebx
  41157d:	jle    4115c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2040>
  41157f:	mov    r12,QWORD PTR [rsp+0x40]
  411584:	mov    ebx,0x8
  411589:	mov    r14,QWORD PTR [rsp+0x10]
  41158e:	xchg   ax,ax
  411590:	mov    rdi,QWORD PTR [r12+rbx*1]
  411594:	mov    QWORD PTR [r13+rbx*2-0x10],rdi
  411599:	call   4060d0 <strlen@plt>
  41159e:	mov    DWORD PTR [r13+rbx*2-0x8],eax
  4115a3:	mov    rax,QWORD PTR [r12+rbx*1-0x8]
  4115a8:	mov    QWORD PTR [r13+rbx*2+0x0],rax
  4115ad:	mov    DWORD PTR [r13+rbx*2+0x8],0x0
  4115b6:	add    rbx,0x10
  4115ba:	add    r14,0xffffffffffffffff
  4115be:	jne    411590 <__flatcc_fb_gen_c_json_parser@@Base+0x2010>
  4115c0:	lea    rcx,[rip+0x2519]        # 413ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  4115c7:	mov    edx,0x20
  4115cc:	mov    rdi,r13
  4115cf:	mov    rsi,QWORD PTR [rsp+0x10]
  4115d4:	call   406080 <qsort@plt>
  4115d9:	mov    ebx,DWORD PTR [rsp+0x28]
  4115dd:	jmp    4115f2 <__flatcc_fb_gen_c_json_parser@@Base+0x2072>
  4115df:	mov    QWORD PTR [rsp+0x120],0x0
  4115eb:	xor    ebx,ebx
  4115ed:	jmp    411607 <__flatcc_fb_gen_c_json_parser@@Base+0x2087>
  4115ef:	xor    r13d,r13d
  4115f2:	mov    QWORD PTR [rsp+0x120],r13
  4115fa:	test   ebx,ebx
  4115fc:	jle    411607 <__flatcc_fb_gen_c_json_parser@@Base+0x2087>
  4115fe:	test   r13,r13
  411601:	je     411d05 <__flatcc_fb_gen_c_json_parser@@Base+0x2785>
  411607:	mov    QWORD PTR [rsp+0x138],0x0
  411613:	mov    DWORD PTR [rsp+0x140],0x4
  41161e:	lea    rax,[rip+0x38eb]        # 414f10 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  411625:	mov    QWORD PTR [rsp+0x128],rax
  41162d:	lea    rax,[rip+0x3a1c]        # 415050 <__flatcc_fb_gen_c_json_parser@@Base+0x5ad0>
  411634:	mov    QWORD PTR [rsp+0x130],rax
  41163c:	mov    rax,QWORD PTR [r15+0xd8]
  411643:	mov    rdx,QWORD PTR [rax+0x110]
  41164a:	lea    rsi,[rip+0x30da9]        # 4423fa <_IO_stdin_used@@Base+0x143fa>
  411651:	xor    eax,eax
  411653:	mov    rdi,r15
  411656:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41165b:	add    DWORD PTR [r15+0xf0],0x2
  411663:	lea    rsi,[rip+0x32aa3]        # 44410d <_IO_stdin_used@@Base+0x1610d>
  41166a:	xor    eax,eax
  41166c:	mov    rdi,r15
  41166f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411674:	mov    eax,DWORD PTR [r15+0xf0]
  41167b:	test   eax,eax
  41167d:	je     411c89 <__flatcc_fb_gen_c_json_parser@@Base+0x2709>
  411683:	mov    ecx,eax
  411685:	add    ecx,0xffffffff
  411688:	mov    DWORD PTR [r15+0xf0],ecx
  41168f:	je     411c89 <__flatcc_fb_gen_c_json_parser@@Base+0x2709>
  411695:	add    eax,0xfffffffe
  411698:	mov    DWORD PTR [r15+0xf0],eax
  41169f:	lea    rsi,[rip+0x33d6c]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4116a6:	xor    eax,eax
  4116a8:	mov    rdi,r15
  4116ab:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116b0:	add    DWORD PTR [r15+0xf0],0x1
  4116b8:	test   ebx,ebx
  4116ba:	je     41176a <__flatcc_fb_gen_c_json_parser@@Base+0x21ea>
  4116c0:	lea    rsi,[rip+0x31364]        # 442a2b <_IO_stdin_used@@Base+0x14a2b>
  4116c7:	xor    eax,eax
  4116c9:	mov    rdi,r15
  4116cc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116d1:	lea    rsi,[rip+0x31370]        # 442a48 <_IO_stdin_used@@Base+0x14a48>
  4116d8:	xor    eax,eax
  4116da:	mov    rdi,r15
  4116dd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116e2:	lea    rsi,[rip+0x31371]        # 442a5a <_IO_stdin_used@@Base+0x14a5a>
  4116e9:	xor    eax,eax
  4116eb:	mov    rdi,r15
  4116ee:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116f3:	lea    rsi,[rip+0x1de45]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4116fa:	xor    eax,eax
  4116fc:	mov    rdi,r15
  4116ff:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411704:	lea    rsi,[rip+0x3135b]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  41170b:	xor    eax,eax
  41170d:	mov    rdi,r15
  411710:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411715:	add    ebx,0xffffffff
  411718:	lea    rsi,[rsp+0x120]
  411720:	xor    edx,edx
  411722:	xor    r8d,r8d
  411725:	mov    rdi,r15
  411728:	mov    ecx,ebx
  41172a:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41172f:	lea    rsi,[rip+0x310d5]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  411736:	xor    eax,eax
  411738:	mov    rdi,r15
  41173b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411740:	mov    eax,DWORD PTR [r15+0xf0]
  411747:	test   eax,eax
  411749:	jne    41179b <__flatcc_fb_gen_c_json_parser@@Base+0x221b>
  41174b:	lea    rdi,[rip+0x3091f]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411752:	lea    rsi,[rip+0x30924]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411759:	lea    rcx,[rip+0x32b35]        # 444295 <_IO_stdin_used@@Base+0x16295>
  411760:	mov    edx,0x4c3
  411765:	call   4060f0 <__assert_fail@plt>
  41176a:	lea    rsi,[rip+0x32b4f]        # 4442c0 <_IO_stdin_used@@Base+0x162c0>
  411771:	xor    eax,eax
  411773:	mov    rdi,r15
  411776:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41177b:	lea    rsi,[rip+0x3128c]        # 442a0e <_IO_stdin_used@@Base+0x14a0e>
  411782:	xor    eax,eax
  411784:	mov    rdi,r15
  411787:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41178c:	mov    eax,DWORD PTR [r15+0xf0]
  411793:	test   eax,eax
  411795:	je     411d58 <__flatcc_fb_gen_c_json_parser@@Base+0x27d8>
  41179b:	add    eax,0xffffffff
  41179e:	mov    DWORD PTR [r15+0xf0],eax
  4117a5:	lea    rsi,[rip+0x2010c]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  4117ac:	xor    eax,eax
  4117ae:	mov    rdi,r15
  4117b1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117b6:	lea    rsi,[rip+0x1dd82]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4117bd:	xor    eax,eax
  4117bf:	mov    rdi,r15
  4117c2:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117c7:	mov    rdi,QWORD PTR [rsp+0x120]
  4117cf:	test   rdi,rdi
  4117d2:	je     4117d9 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  4117d4:	call   406040 <free@plt>
  4117d9:	mov    rdi,QWORD PTR [rsp+0x38]
  4117de:	test   rdi,rdi
  4117e1:	je     4117e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2268>
  4117e3:	call   406040 <free@plt>
  4117e8:	mov    rdi,QWORD PTR [rsp+0x40]
  4117ed:	test   rdi,rdi
  4117f0:	jne    410de1 <__flatcc_fb_gen_c_json_parser@@Base+0x1861>
  4117f6:	jmp    410de6 <__flatcc_fb_gen_c_json_parser@@Base+0x1866>
  4117fb:	mov    rax,QWORD PTR [rip+0x3f7f6]        # 450ff8 <stderr@GLIBC_2.2.5>
  411802:	mov    rdi,QWORD PTR [rax]
  411805:	lea    rsi,[rip+0x1dc18]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41180c:	lea    rbx,[rip+0x3086a]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411813:	lea    r8,[rip+0x30ed5]        # 4426ef <_IO_stdin_used@@Base+0x146ef>
  41181a:	mov    ecx,0x5ff
  41181f:	xor    eax,eax
  411821:	mov    rdx,rbx
  411824:	call   406170 <fprintf@plt>
  411829:	lea    rdi,[rip+0x2eb5b]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  411830:	lea    rcx,[rip+0x30d89]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411837:	mov    edx,0x5ff
  41183c:	mov    rsi,rbx
  41183f:	call   4060f0 <__assert_fail@plt>
  411844:	mov    rax,QWORD PTR [rip+0x3f7ad]        # 450ff8 <stderr@GLIBC_2.2.5>
  41184b:	mov    rdi,QWORD PTR [rax]
  41184e:	lea    rsi,[rip+0x1dbcf]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  411855:	lea    rbx,[rip+0x30821]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41185c:	lea    r8,[rip+0x30e10]        # 442673 <_IO_stdin_used@@Base+0x14673>
  411863:	mov    ecx,0x5f2
  411868:	xor    eax,eax
  41186a:	mov    rdx,rbx
  41186d:	call   406170 <fprintf@plt>
  411872:	lea    rdi,[rip+0x2eb12]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  411879:	lea    rcx,[rip+0x30d40]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411880:	mov    edx,0x5f2
  411885:	mov    rsi,rbx
  411888:	call   4060f0 <__assert_fail@plt>
  41188d:	lea    rdi,[rip+0x307dd]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411894:	lea    rsi,[rip+0x307e2]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41189b:	lea    rcx,[rip+0x30d1e]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  4118a2:	mov    edx,0x5fc
  4118a7:	call   4060f0 <__assert_fail@plt>
  4118ac:	lea    rdi,[rip+0x307be]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4118b3:	lea    rsi,[rip+0x307c3]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4118ba:	lea    rcx,[rip+0x30cff]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  4118c1:	mov    edx,0x5f6
  4118c6:	call   4060f0 <__assert_fail@plt>
  4118cb:	lea    rdi,[rip+0x3079f]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4118d2:	lea    rsi,[rip+0x307a4]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4118d9:	lea    rcx,[rip+0x3080c]        # 4420ec <_IO_stdin_used@@Base+0x140ec>
  4118e0:	mov    edx,0x6d3
  4118e5:	call   4060f0 <__assert_fail@plt>
  4118ea:	lea    rdi,[rip+0x30780]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4118f1:	lea    rsi,[rip+0x30785]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4118f8:	lea    rcx,[rip+0x307ed]        # 4420ec <_IO_stdin_used@@Base+0x140ec>
  4118ff:	mov    edx,0x6c3
  411904:	call   4060f0 <__assert_fail@plt>
  411909:	lea    rdi,[rip+0x23d6f]        # 43567f <_IO_stdin_used@@Base+0x767f>
  411910:	lea    rsi,[rip+0x30766]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411917:	lea    rcx,[rip+0x3241c]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  41191e:	mov    edx,0x56e
  411923:	vzeroupper 
  411926:	call   4060f0 <__assert_fail@plt>
  41192b:	mov    rax,QWORD PTR [rip+0x3f6c6]        # 450ff8 <stderr@GLIBC_2.2.5>
  411932:	mov    rdi,QWORD PTR [rax]
  411935:	lea    rsi,[rip+0x1dae8]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41193c:	lea    rbx,[rip+0x3073a]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411943:	lea    r8,[rip+0x3102c]        # 442976 <_IO_stdin_used@@Base+0x14976>
  41194a:	mov    ecx,0x570
  41194f:	xor    eax,eax
  411951:	mov    rdx,rbx
  411954:	call   406170 <fprintf@plt>
  411959:	lea    rdi,[rip+0x2ea2b]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  411960:	lea    rcx,[rip+0x323d3]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411967:	mov    edx,0x570
  41196c:	mov    rsi,rbx
  41196f:	call   4060f0 <__assert_fail@plt>
  411974:	lea    rdi,[rip+0x243e3]        # 435d5e <_IO_stdin_used@@Base+0x7d5e>
  41197b:	lea    rsi,[rip+0x306fb]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411982:	lea    rcx,[rip+0x314c4]        # 442e4d <_IO_stdin_used@@Base+0x14e4d>
  411989:	mov    edx,0x515
  41198e:	vzeroupper 
  411991:	call   4060f0 <__assert_fail@plt>
  411996:	mov    rax,QWORD PTR [rip+0x3f65b]        # 450ff8 <stderr@GLIBC_2.2.5>
  41199d:	mov    rdi,QWORD PTR [rax]
  4119a0:	lea    rsi,[rip+0x1da7d]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4119a7:	lea    rbx,[rip+0x306cf]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4119ae:	lea    r8,[rip+0x30fc1]        # 442976 <_IO_stdin_used@@Base+0x14976>
  4119b5:	mov    ecx,0x517
  4119ba:	xor    eax,eax
  4119bc:	mov    rdx,rbx
  4119bf:	call   406170 <fprintf@plt>
  4119c4:	lea    rdi,[rip+0x2e9c0]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4119cb:	lea    rcx,[rip+0x3147b]        # 442e4d <_IO_stdin_used@@Base+0x14e4d>
  4119d2:	mov    edx,0x517
  4119d7:	mov    rsi,rbx
  4119da:	call   4060f0 <__assert_fail@plt>
  4119df:	lea    rdi,[rip+0x3068b]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4119e6:	lea    rsi,[rip+0x30690]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4119ed:	lea    rcx,[rip+0x30bcc]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  4119f4:	mov    edx,0x5df
  4119f9:	call   4060f0 <__assert_fail@plt>
  4119fe:	lea    rdi,[rip+0x3066c]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411a05:	lea    rsi,[rip+0x30671]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411a0c:	lea    rcx,[rip+0x30bad]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411a13:	mov    edx,0x607
  411a18:	call   4060f0 <__assert_fail@plt>
  411a1d:	lea    rdi,[rip+0x3064d]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411a24:	lea    rsi,[rip+0x30652]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411a2b:	lea    rcx,[rip+0x30b8e]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411a32:	mov    edx,0x609
  411a37:	call   4060f0 <__assert_fail@plt>
  411a3c:	lea    rdi,[rip+0x3062e]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411a43:	lea    rsi,[rip+0x30633]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411a4a:	lea    rcx,[rip+0x30b6f]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411a51:	mov    edx,0x60a
  411a56:	call   4060f0 <__assert_fail@plt>
  411a5b:	lea    rdi,[rip+0x3060f]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411a62:	lea    rsi,[rip+0x30614]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411a69:	lea    rcx,[rip+0x30b50]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411a70:	mov    edx,0x60e
  411a75:	call   4060f0 <__assert_fail@plt>
  411a7a:	lea    rdi,[rip+0x305f0]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411a81:	lea    rsi,[rip+0x305f5]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411a88:	lea    rcx,[rip+0x30b31]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  411a8f:	mov    edx,0x610
  411a94:	call   4060f0 <__assert_fail@plt>
  411a99:	lea    rdi,[rip+0x305d1]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411aa0:	lea    rsi,[rip+0x305d6]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411aa7:	lea    rcx,[rip+0x30e50]        # 4428fe <_IO_stdin_used@@Base+0x148fe>
  411aae:	mov    edx,0x62e
  411ab3:	call   4060f0 <__assert_fail@plt>
  411ab8:	lea    rdi,[rip+0x305b2]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411abf:	lea    rsi,[rip+0x305b7]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411ac6:	lea    rcx,[rip+0x30e31]        # 4428fe <_IO_stdin_used@@Base+0x148fe>
  411acd:	mov    edx,0x62f
  411ad2:	call   4060f0 <__assert_fail@plt>
  411ad7:	lea    rdi,[rip+0x30593]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411ade:	lea    rsi,[rip+0x30598]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411ae5:	lea    rcx,[rip+0x31361]        # 442e4d <_IO_stdin_used@@Base+0x14e4d>
  411aec:	mov    edx,0x536
  411af1:	call   4060f0 <__assert_fail@plt>
  411af6:	lea    rdi,[rip+0x30574]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411afd:	lea    rsi,[rip+0x30579]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b04:	lea    rcx,[rip+0x31342]        # 442e4d <_IO_stdin_used@@Base+0x14e4d>
  411b0b:	mov    edx,0x53f
  411b10:	call   4060f0 <__assert_fail@plt>
  411b15:	lea    rdi,[rip+0x24242]        # 435d5e <_IO_stdin_used@@Base+0x7d5e>
  411b1c:	lea    rsi,[rip+0x3055a]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b23:	lea    rcx,[rip+0x31fc1]        # 443aeb <_IO_stdin_used@@Base+0x15aeb>
  411b2a:	mov    edx,0x549
  411b2f:	call   4060f0 <__assert_fail@plt>
  411b34:	lea    rdi,[rip+0x30536]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411b3b:	lea    rsi,[rip+0x3053b]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b42:	lea    rcx,[rip+0x31fa2]        # 443aeb <_IO_stdin_used@@Base+0x15aeb>
  411b49:	mov    edx,0x55a
  411b4e:	call   4060f0 <__assert_fail@plt>
  411b53:	lea    rdi,[rip+0x30517]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411b5a:	lea    rsi,[rip+0x3051c]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b61:	lea    rcx,[rip+0x31f83]        # 443aeb <_IO_stdin_used@@Base+0x15aeb>
  411b68:	mov    edx,0x560
  411b6d:	call   4060f0 <__assert_fail@plt>
  411b72:	lea    rdi,[rip+0x304f8]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411b79:	lea    rsi,[rip+0x304fd]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b80:	lea    rcx,[rip+0x321b3]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411b87:	mov    edx,0x59e
  411b8c:	call   4060f0 <__assert_fail@plt>
  411b91:	lea    rdi,[rip+0x304d9]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411b98:	lea    rsi,[rip+0x304de]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411b9f:	lea    rcx,[rip+0x32194]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411ba6:	mov    edx,0x5c1
  411bab:	call   4060f0 <__assert_fail@plt>
  411bb0:	lea    rdi,[rip+0x304ba]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411bb7:	lea    rsi,[rip+0x304bf]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411bbe:	lea    rcx,[rip+0x32175]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411bc5:	mov    edx,0x5c7
  411bca:	call   4060f0 <__assert_fail@plt>
  411bcf:	lea    rdi,[rip+0x3049b]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411bd6:	lea    rsi,[rip+0x304a0]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411bdd:	lea    rcx,[rip+0x30508]        # 4420ec <_IO_stdin_used@@Base+0x140ec>
  411be4:	mov    edx,0x6db
  411be9:	call   4060f0 <__assert_fail@plt>
  411bee:	lea    rdi,[rip+0x3047c]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411bf5:	lea    rsi,[rip+0x30481]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411bfc:	lea    rcx,[rip+0x32137]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411c03:	mov    edx,0x5b2
  411c08:	call   4060f0 <__assert_fail@plt>
  411c0d:	lea    rdi,[rip+0x3045d]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411c14:	lea    rsi,[rip+0x30462]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411c1b:	lea    rcx,[rip+0x32118]        # 443d3a <_IO_stdin_used@@Base+0x15d3a>
  411c22:	mov    edx,0x5b5
  411c27:	call   4060f0 <__assert_fail@plt>
  411c2c:	lea    rdi,[rip+0x3043e]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411c33:	lea    rsi,[rip+0x30443]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411c3a:	lea    rcx,[rip+0x304ab]        # 4420ec <_IO_stdin_used@@Base+0x140ec>
  411c41:	mov    edx,0x6b4
  411c46:	call   4060f0 <__assert_fail@plt>
  411c4b:	lea    rdi,[rip+0x3041f]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411c52:	lea    rsi,[rip+0x30424]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411c59:	lea    rcx,[rip+0x326c4]        # 444324 <_IO_stdin_used@@Base+0x16324>
  411c60:	mov    edx,0x64a
  411c65:	call   4060f0 <__assert_fail@plt>
  411c6a:	lea    rdi,[rip+0x30400]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411c71:	lea    rsi,[rip+0x30405]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411c78:	lea    rcx,[rip+0x32888]        # 444507 <_IO_stdin_used@@Base+0x16507>
  411c7f:	mov    edx,0x66d
  411c84:	call   4060f0 <__assert_fail@plt>
  411c89:	lea    rdi,[rip+0x303e1]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411c90:	lea    rsi,[rip+0x303e6]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411c97:	lea    rcx,[rip+0x325f7]        # 444295 <_IO_stdin_used@@Base+0x16295>
  411c9e:	mov    edx,0x4b5
  411ca3:	call   4060f0 <__assert_fail@plt>
  411ca8:	lea    rdi,[rip+0x303c2]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411caf:	lea    rsi,[rip+0x303c7]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411cb6:	lea    rcx,[rip+0x32667]        # 444324 <_IO_stdin_used@@Base+0x16324>
  411cbd:	mov    edx,0x65a
  411cc2:	call   4060f0 <__assert_fail@plt>
  411cc7:	lea    rdi,[rip+0x303a3]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411cce:	lea    rsi,[rip+0x303a8]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411cd5:	lea    rcx,[rip+0x3282b]        # 444507 <_IO_stdin_used@@Base+0x16507>
  411cdc:	mov    edx,0x67d
  411ce1:	call   4060f0 <__assert_fail@plt>
  411ce6:	lea    rdi,[rip+0x30384]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411ced:	lea    rsi,[rip+0x30389]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411cf4:	lea    rcx,[rip+0x3280c]        # 444507 <_IO_stdin_used@@Base+0x16507>
  411cfb:	mov    edx,0x681
  411d00:	call   4060f0 <__assert_fail@plt>
  411d05:	lea    rdi,[rsp+0x20]
  411d0a:	call   4150f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5b70>
  411d0f:	mov    rax,QWORD PTR [rip+0x3f2e2]        # 450ff8 <stderr@GLIBC_2.2.5>
  411d16:	mov    rdi,QWORD PTR [rax]
  411d19:	lea    rsi,[rip+0x1d704]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  411d20:	lea    rbx,[rip+0x30356]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411d27:	lea    r8,[rip+0x30c48]        # 442976 <_IO_stdin_used@@Base+0x14976>
  411d2e:	mov    ecx,0x4aa
  411d33:	xor    eax,eax
  411d35:	mov    rdx,rbx
  411d38:	call   406170 <fprintf@plt>
  411d3d:	lea    rdi,[rip+0x2e647]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  411d44:	lea    rcx,[rip+0x3254a]        # 444295 <_IO_stdin_used@@Base+0x16295>
  411d4b:	mov    edx,0x4aa
  411d50:	mov    rsi,rbx
  411d53:	call   4060f0 <__assert_fail@plt>
  411d58:	lea    rdi,[rip+0x30312]        # 442071 <_IO_stdin_used@@Base+0x14071>
  411d5f:	lea    rsi,[rip+0x30317]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  411d66:	lea    rcx,[rip+0x32528]        # 444295 <_IO_stdin_used@@Base+0x16295>
  411d6d:	mov    edx,0x4ba
  411d72:	call   4060f0 <__assert_fail@plt>
  411d77:	nop    WORD PTR [rax+rax*1+0x0]
  411d80:	push   rbp
  411d81:	push   r15
  411d83:	push   r14
  411d85:	push   r13
  411d87:	push   r12
  411d89:	push   rbx
  411d8a:	sub    rsp,0xe8
  411d91:	mov    rbp,rsi
  411d94:	mov    rbx,rdi
  411d97:	test   al,al
  411d99:	je     411ddd <__flatcc_fb_gen_c_json_parser@@Base+0x285d>
  411d9b:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  411da1:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  411da7:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  411db0:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  411db9:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  411dc2:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  411dcb:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  411dd4:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  411ddd:	mov    QWORD PTR [rsp+0x58],r9
  411de2:	mov    QWORD PTR [rsp+0x50],r8
  411de7:	mov    QWORD PTR [rsp+0x48],rcx
  411dec:	mov    QWORD PTR [rsp+0x40],rdx
  411df1:	mov    rax,QWORD PTR [rbx+0xe0]
  411df8:	mov    r15d,DWORD PTR [rax+0xd0]
  411dff:	imul   r15d,DWORD PTR [rbx+0xf0]
  411e07:	cmp    BYTE PTR [rip+0x3f332],0x0        # 451140 <__bss_start@@Base+0x18>
  411e0e:	je     411ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
  411e14:	cmp    BYTE PTR [rbp+0x0],0x0
  411e18:	je     411f16 <__flatcc_fb_gen_c_json_parser@@Base+0x2996>
  411e1e:	mov    rdi,QWORD PTR [rbx+0xd0]
  411e25:	lea    rbx,[rbx+0xd0]
  411e2c:	cmp    r15d,0x41
  411e30:	jl     411ea1 <__flatcc_fb_gen_c_json_parser@@Base+0x2921>
  411e32:	mov    QWORD PTR [rsp+0x8],rbp
  411e37:	mov    eax,r15d
  411e3a:	not    eax
  411e3c:	cmp    eax,0xffffff7e
  411e41:	mov    ecx,0xffffff7f
  411e46:	cmovg  ecx,eax
  411e49:	lea    ebp,[rcx+r15*1]
  411e4d:	add    ebp,0x40
  411e50:	and    ebp,0xffffffc0
  411e53:	lea    r14d,[r15+0x40]
  411e57:	lea    r12,[rip+0x2e53d]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  411e5e:	lea    r13,[rip+0x3f2db]        # 451140 <__bss_start@@Base+0x18>
  411e65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e6f:	nop
  411e70:	mov    edx,0x40
  411e75:	xor    eax,eax
  411e77:	mov    rsi,r12
  411e7a:	mov    rcx,r13
  411e7d:	vzeroupper 
  411e80:	call   406170 <fprintf@plt>
  411e85:	mov    rdi,QWORD PTR [rbx]
  411e88:	add    r14d,0xffffffc0
  411e8c:	cmp    r14d,0x80
  411e93:	jg     411e70 <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
  411e95:	add    r15d,0xffffffc0
  411e99:	sub    r15d,ebp
  411e9c:	mov    rbp,QWORD PTR [rsp+0x8]
  411ea1:	lea    rsi,[rip+0x2e4f3]        # 44039b <_IO_stdin_used@@Base+0x1239b>
  411ea8:	lea    rcx,[rip+0x3f291]        # 451140 <__bss_start@@Base+0x18>
  411eaf:	xor    eax,eax
  411eb1:	mov    edx,r15d
  411eb4:	vzeroupper 
  411eb7:	call   406170 <fprintf@plt>
  411ebc:	lea    rax,[rsp+0x30]
  411ec1:	mov    QWORD PTR [rsp+0x20],rax
  411ec6:	lea    rax,[rsp+0x120]
  411ece:	mov    QWORD PTR [rsp+0x18],rax
  411ed3:	movabs rax,0x3000000010
  411edd:	mov    QWORD PTR [rsp+0x10],rax
  411ee2:	mov    rdi,QWORD PTR [rbx]
  411ee5:	lea    rdx,[rsp+0x10]
  411eea:	mov    rsi,rbp
  411eed:	call   4061e0 <vfprintf@plt>
  411ef2:	jmp    411f1d <__flatcc_fb_gen_c_json_parser@@Base+0x299d>
  411ef4:	vmovaps ymm0,YMMWORD PTR [rip+0x2fda4]        # 441ca0 <_IO_stdin_used@@Base+0x13ca0>
  411efc:	vmovups YMMWORD PTR [rip+0x3f25c],ymm0        # 451160 <__bss_start@@Base+0x38>
  411f04:	vmovups YMMWORD PTR [rip+0x3f234],ymm0        # 451140 <__bss_start@@Base+0x18>
  411f0c:	cmp    BYTE PTR [rbp+0x0],0x0
  411f10:	jne    411e1e <__flatcc_fb_gen_c_json_parser@@Base+0x289e>
  411f16:	add    rbx,0xd0
  411f1d:	mov    rsi,QWORD PTR [rbx]
  411f20:	mov    edi,0xa
  411f25:	vzeroupper 
  411f28:	call   406110 <fputc@plt>
  411f2d:	add    rsp,0xe8
  411f34:	pop    rbx
  411f35:	pop    r12
  411f37:	pop    r13
  411f39:	pop    r14
  411f3b:	pop    r15
  411f3d:	pop    rbp
  411f3e:	ret    
  411f3f:	nop
  411f40:	push   r14
  411f42:	push   rbx
  411f43:	sub    rsp,0xd8
  411f4a:	mov    rbx,rdi
  411f4d:	mov    r14,rsp
  411f50:	mov    rdi,rsi
  411f53:	mov    rsi,r14
  411f56:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  411f5b:	mov    rax,QWORD PTR [rbx+0xd8]
  411f62:	mov    rdx,QWORD PTR [rax+0x110]
  411f69:	lea    rsi,[rip+0x304f5]        # 442465 <_IO_stdin_used@@Base+0x14465>
  411f70:	xor    eax,eax
  411f72:	mov    rdi,rbx
  411f75:	mov    rcx,r14
  411f78:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f7d:	lea    rsi,[rip+0x302bc]        # 442240 <_IO_stdin_used@@Base+0x14240>
  411f84:	xor    eax,eax
  411f86:	mov    rdi,rbx
  411f89:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f8e:	add    rsp,0xd8
  411f95:	pop    rbx
  411f96:	pop    r14
  411f98:	ret    
  411f99:	nop    DWORD PTR [rax+0x0]
  411fa0:	push   rbp
  411fa1:	mov    rbp,rsp
  411fa4:	push   r15
  411fa6:	push   r14
  411fa8:	push   r12
  411faa:	push   rbx
  411fab:	and    rsp,0xffffffffffffffe0
  411faf:	sub    rsp,0x160
  411fb6:	mov    DWORD PTR [rsp+0x1c],0x0
  411fbe:	vxorps xmm0,xmm0,xmm0
  411fc2:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  411fc8:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  411fce:	mov    eax,DWORD PTR [rsi+0x10]
  411fd1:	add    eax,0xfffffffd
  411fd4:	movzx  eax,ax
  411fd7:	cmp    eax,0x2
  411fda:	jae    412262 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce2>
  411fe0:	mov    rbx,rsi
  411fe3:	mov    r15,rdi
  411fe6:	lea    rsi,[rsp+0x1c]
  411feb:	mov    rdi,rbx
  411fee:	vzeroupper 
  411ff1:	call   412620 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  411ff6:	mov    QWORD PTR [rsp+0x20],rax
  411ffb:	mov    r14d,DWORD PTR [rsp+0x1c]
  412000:	test   rax,rax
  412003:	jne    41200e <__flatcc_fb_gen_c_json_parser@@Base+0x2a8e>
  412005:	test   r14d,r14d
  412008:	jg     412284 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
  41200e:	mov    QWORD PTR [rsp+0x38],rbx
  412013:	mov    DWORD PTR [rsp+0x40],0x2
  41201b:	lea    rax,[rip+0x78e]        # 4127b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  412022:	mov    QWORD PTR [rsp+0x28],rax
  412027:	lea    rax,[rip+0x892]        # 4128c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3340>
  41202e:	mov    QWORD PTR [rsp+0x30],rax
  412033:	vxorps xmm0,xmm0,xmm0
  412037:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  412040:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  412049:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  412052:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41205b:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  412064:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41206d:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412073:	mov    QWORD PTR [rsp+0x140],0x0
  41207f:	mov    rdi,QWORD PTR [rbx+0x18]
  412083:	lea    r12,[rsp+0x60]
  412088:	mov    rsi,rbx
  41208b:	mov    rdx,r12
  41208e:	vzeroupper 
  412091:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  412096:	lea    rsi,[rip+0x30140]        # 4421dd <_IO_stdin_used@@Base+0x141dd>
  41209d:	xor    eax,eax
  41209f:	mov    rdi,r15
  4120a2:	mov    rdx,r12
  4120a5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4120aa:	add    DWORD PTR [r15+0xf0],0x2
  4120b2:	lea    rsi,[rip+0x308f9]        # 4429b2 <_IO_stdin_used@@Base+0x149b2>
  4120b9:	xor    eax,eax
  4120bb:	mov    rdi,r15
  4120be:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4120c3:	mov    eax,DWORD PTR [r15+0xf0]
  4120ca:	test   eax,eax
  4120cc:	je     412243 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc3>
  4120d2:	mov    ecx,eax
  4120d4:	add    ecx,0xffffffff
  4120d7:	mov    DWORD PTR [r15+0xf0],ecx
  4120de:	je     412243 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc3>
  4120e4:	add    eax,0xfffffffe
  4120e7:	mov    DWORD PTR [r15+0xf0],eax
  4120ee:	lea    rsi,[rip+0x3331d]        # 445412 <_IO_stdin_used@@Base+0x17412>
  4120f5:	xor    eax,eax
  4120f7:	mov    rdi,r15
  4120fa:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4120ff:	add    DWORD PTR [r15+0xf0],0x1
  412107:	test   r14d,r14d
  41210a:	je     4121b9 <__flatcc_fb_gen_c_json_parser@@Base+0x2c39>
  412110:	lea    rsi,[rip+0x30914]        # 442a2b <_IO_stdin_used@@Base+0x14a2b>
  412117:	xor    eax,eax
  412119:	mov    rdi,r15
  41211c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412121:	lea    rsi,[rip+0x30920]        # 442a48 <_IO_stdin_used@@Base+0x14a48>
  412128:	xor    eax,eax
  41212a:	mov    rdi,r15
  41212d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412132:	lea    rsi,[rip+0x30921]        # 442a5a <_IO_stdin_used@@Base+0x14a5a>
  412139:	xor    eax,eax
  41213b:	mov    rdi,r15
  41213e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412143:	lea    rsi,[rip+0x1d3f5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41214a:	xor    eax,eax
  41214c:	mov    rdi,r15
  41214f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412154:	lea    rsi,[rip+0x3090b]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  41215b:	xor    eax,eax
  41215d:	mov    rdi,r15
  412160:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412165:	add    r14d,0xffffffff
  412169:	lea    rsi,[rsp+0x20]
  41216e:	xor    edx,edx
  412170:	xor    r8d,r8d
  412173:	mov    rdi,r15
  412176:	mov    ecx,r14d
  412179:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41217e:	lea    rsi,[rip+0x30686]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  412185:	xor    eax,eax
  412187:	mov    rdi,r15
  41218a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41218f:	mov    eax,DWORD PTR [r15+0xf0]
  412196:	test   eax,eax
  412198:	jne    4121fb <__flatcc_fb_gen_c_json_parser@@Base+0x2c7b>
  41219a:	lea    rdi,[rip+0x2fed0]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4121a1:	lea    rsi,[rip+0x2fed5]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4121a8:	lea    rcx,[rip+0x3078e]        # 44293d <_IO_stdin_used@@Base+0x1493d>
  4121af:	mov    edx,0x4fe
  4121b4:	call   4060f0 <__assert_fail@plt>
  4121b9:	lea    rsi,[rip+0x30824]        # 4429e4 <_IO_stdin_used@@Base+0x149e4>
  4121c0:	xor    eax,eax
  4121c2:	mov    rdi,r15
  4121c5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4121ca:	lea    rsi,[rip+0x3082d]        # 4429fe <_IO_stdin_used@@Base+0x149fe>
  4121d1:	xor    eax,eax
  4121d3:	mov    rdi,r15
  4121d6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4121db:	lea    rsi,[rip+0x3082c]        # 442a0e <_IO_stdin_used@@Base+0x14a0e>
  4121e2:	xor    eax,eax
  4121e4:	mov    rdi,r15
  4121e7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4121ec:	mov    eax,DWORD PTR [r15+0xf0]
  4121f3:	test   eax,eax
  4121f5:	je     4122cd <__flatcc_fb_gen_c_json_parser@@Base+0x2d4d>
  4121fb:	add    eax,0xffffffff
  4121fe:	mov    DWORD PTR [r15+0xf0],eax
  412205:	lea    rsi,[rip+0x1f6ac]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  41220c:	xor    eax,eax
  41220e:	mov    rdi,r15
  412211:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412216:	lea    rsi,[rip+0x1d322]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41221d:	xor    eax,eax
  41221f:	mov    rdi,r15
  412222:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412227:	mov    rdi,QWORD PTR [rsp+0x20]
  41222c:	test   rdi,rdi
  41222f:	je     412236 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb6>
  412231:	call   406040 <free@plt>
  412236:	lea    rsp,[rbp-0x20]
  41223a:	pop    rbx
  41223b:	pop    r12
  41223d:	pop    r14
  41223f:	pop    r15
  412241:	pop    rbp
  412242:	ret    
  412243:	lea    rdi,[rip+0x2fe27]        # 442071 <_IO_stdin_used@@Base+0x14071>
  41224a:	lea    rsi,[rip+0x2fe2c]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  412251:	lea    rcx,[rip+0x306e5]        # 44293d <_IO_stdin_used@@Base+0x1493d>
  412258:	mov    edx,0x4ef
  41225d:	call   4060f0 <__assert_fail@plt>
  412262:	lea    rdi,[rip+0x2363b]        # 4358a4 <_IO_stdin_used@@Base+0x78a4>
  412269:	lea    rsi,[rip+0x2fe0d]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  412270:	lea    rcx,[rip+0x306c6]        # 44293d <_IO_stdin_used@@Base+0x1493d>
  412277:	mov    edx,0x4de
  41227c:	vzeroupper 
  41227f:	call   4060f0 <__assert_fail@plt>
  412284:	mov    rax,QWORD PTR [rip+0x3ed6d]        # 450ff8 <stderr@GLIBC_2.2.5>
  41228b:	mov    rdi,QWORD PTR [rax]
  41228e:	lea    rsi,[rip+0x1d18f]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  412295:	lea    rbx,[rip+0x2fde1]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41229c:	lea    r8,[rip+0x306d3]        # 442976 <_IO_stdin_used@@Base+0x14976>
  4122a3:	mov    ecx,0x4e1
  4122a8:	xor    eax,eax
  4122aa:	mov    rdx,rbx
  4122ad:	call   406170 <fprintf@plt>
  4122b2:	lea    rdi,[rip+0x2e0d2]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4122b9:	lea    rcx,[rip+0x3067d]        # 44293d <_IO_stdin_used@@Base+0x1493d>
  4122c0:	mov    edx,0x4e1
  4122c5:	mov    rsi,rbx
  4122c8:	call   4060f0 <__assert_fail@plt>
  4122cd:	lea    rdi,[rip+0x2fd9d]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4122d4:	lea    rsi,[rip+0x2fda2]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4122db:	lea    rcx,[rip+0x3065b]        # 44293d <_IO_stdin_used@@Base+0x1493d>
  4122e2:	mov    edx,0x4f5
  4122e7:	call   4060f0 <__assert_fail@plt>
  4122ec:	nop    DWORD PTR [rax+0x0]
  4122f0:	push   rbp
  4122f1:	mov    rbp,rsp
  4122f4:	push   r15
  4122f6:	push   r14
  4122f8:	push   r12
  4122fa:	push   rbx
  4122fb:	and    rsp,0xffffffffffffffe0
  4122ff:	sub    rsp,0x140
  412306:	mov    rbx,rsi
  412309:	mov    r15,rdi
  41230c:	vxorps xmm0,xmm0,xmm0
  412310:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  412316:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41231c:	lea    rsi,[rsp+0x60]
  412321:	mov    rdi,rbx
  412324:	vzeroupper 
  412327:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  41232c:	mov    rax,QWORD PTR [r15+0xd8]
  412333:	vxorps xmm0,xmm0,xmm0
  412337:	vmovaps XMMWORD PTR [rsp],xmm0
  41233c:	mov    QWORD PTR [rsp+0x10],0x0
  412345:	mov    QWORD PTR [rsp+0x8],rax
  41234a:	add    rbx,0x8
  41234e:	lea    rsi,[rip+0x2d0b]        # 415060 <__flatcc_fb_gen_c_json_parser@@Base+0x5ae0>
  412355:	mov    rdx,rsp
  412358:	mov    rdi,rbx
  41235b:	call   419990 <fb_symbol_table_visit@@Base>
  412360:	movsxd r14,DWORD PTR [rsp]
  412364:	test   r14,r14
  412367:	je     4123ae <__flatcc_fb_gen_c_json_parser@@Base+0x2e2e>
  412369:	mov    rdi,r14
  41236c:	shl    rdi,0x5
  412370:	call   4061a0 <malloc@plt>
  412375:	test   rax,rax
  412378:	je     4123ae <__flatcc_fb_gen_c_json_parser@@Base+0x2e2e>
  41237a:	mov    r12,rax
  41237d:	mov    QWORD PTR [rsp+0x10],rax
  412382:	lea    rsi,[rip+0x2d07]        # 415090 <__flatcc_fb_gen_c_json_parser@@Base+0x5b10>
  412389:	mov    rdx,rsp
  41238c:	mov    rdi,rbx
  41238f:	call   419990 <fb_symbol_table_visit@@Base>
  412394:	movsxd rsi,DWORD PTR [rsp]
  412398:	lea    rcx,[rip+0x1741]        # 413ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  41239f:	mov    edx,0x20
  4123a4:	mov    rdi,r12
  4123a7:	call   406080 <qsort@plt>
  4123ac:	jmp    4123b1 <__flatcc_fb_gen_c_json_parser@@Base+0x2e31>
  4123ae:	xor    r12d,r12d
  4123b1:	mov    QWORD PTR [rsp+0x20],r12
  4123b6:	test   r14d,r14d
  4123b9:	jle    4123c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
  4123bb:	test   r12,r12
  4123be:	je     4125b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3038>
  4123c4:	mov    QWORD PTR [rsp+0x38],0x0
  4123cd:	mov    DWORD PTR [rsp+0x40],0x3
  4123d5:	lea    rax,[rip+0x2b34]        # 414f10 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  4123dc:	mov    QWORD PTR [rsp+0x28],rax
  4123e1:	lea    rax,[rip+0x2c68]        # 415050 <__flatcc_fb_gen_c_json_parser@@Base+0x5ad0>
  4123e8:	mov    QWORD PTR [rsp+0x30],rax
  4123ed:	mov    rax,QWORD PTR [r15+0xd8]
  4123f4:	mov    rdx,QWORD PTR [rax+0x110]
  4123fb:	lea    rsi,[rip+0x30063]        # 442465 <_IO_stdin_used@@Base+0x14465>
  412402:	lea    rcx,[rsp+0x60]
  412407:	xor    eax,eax
  412409:	mov    rdi,r15
  41240c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412411:	add    DWORD PTR [r15+0xf0],0x2
  412419:	lea    rsi,[rip+0x31ced]        # 44410d <_IO_stdin_used@@Base+0x1610d>
  412420:	xor    eax,eax
  412422:	mov    rdi,r15
  412425:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41242a:	mov    eax,DWORD PTR [r15+0xf0]
  412431:	test   eax,eax
  412433:	je     412599 <__flatcc_fb_gen_c_json_parser@@Base+0x3019>
  412439:	mov    ecx,eax
  41243b:	add    ecx,0xffffffff
  41243e:	mov    DWORD PTR [r15+0xf0],ecx
  412445:	je     412599 <__flatcc_fb_gen_c_json_parser@@Base+0x3019>
  41244b:	add    eax,0xfffffffe
  41244e:	mov    DWORD PTR [r15+0xf0],eax
  412455:	lea    rsi,[rip+0x32fb6]        # 445412 <_IO_stdin_used@@Base+0x17412>
  41245c:	xor    eax,eax
  41245e:	mov    rdi,r15
  412461:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412466:	add    DWORD PTR [r15+0xf0],0x1
  41246e:	test   r14d,r14d
  412471:	je     412520 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  412477:	lea    rsi,[rip+0x305ad]        # 442a2b <_IO_stdin_used@@Base+0x14a2b>
  41247e:	xor    eax,eax
  412480:	mov    rdi,r15
  412483:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412488:	lea    rsi,[rip+0x305b9]        # 442a48 <_IO_stdin_used@@Base+0x14a48>
  41248f:	xor    eax,eax
  412491:	mov    rdi,r15
  412494:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412499:	lea    rsi,[rip+0x305ba]        # 442a5a <_IO_stdin_used@@Base+0x14a5a>
  4124a0:	xor    eax,eax
  4124a2:	mov    rdi,r15
  4124a5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124aa:	lea    rsi,[rip+0x1d08e]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4124b1:	xor    eax,eax
  4124b3:	mov    rdi,r15
  4124b6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124bb:	lea    rsi,[rip+0x305a4]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  4124c2:	xor    eax,eax
  4124c4:	mov    rdi,r15
  4124c7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124cc:	add    r14d,0xffffffff
  4124d0:	lea    rsi,[rsp+0x20]
  4124d5:	xor    edx,edx
  4124d7:	xor    r8d,r8d
  4124da:	mov    rdi,r15
  4124dd:	mov    ecx,r14d
  4124e0:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4124e5:	lea    rsi,[rip+0x3031f]        # 44280b <_IO_stdin_used@@Base+0x1480b>
  4124ec:	xor    eax,eax
  4124ee:	mov    rdi,r15
  4124f1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124f6:	mov    eax,DWORD PTR [r15+0xf0]
  4124fd:	test   eax,eax
  4124ff:	jne    412551 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd1>
  412501:	lea    rdi,[rip+0x2fb69]        # 442071 <_IO_stdin_used@@Base+0x14071>
  412508:	lea    rsi,[rip+0x2fb6e]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41250f:	lea    rcx,[rip+0x31bc5]        # 4440db <_IO_stdin_used@@Base+0x160db>
  412516:	mov    edx,0x48e
  41251b:	call   4060f0 <__assert_fail@plt>
  412520:	lea    rsi,[rip+0x31c18]        # 44413f <_IO_stdin_used@@Base+0x1613f>
  412527:	xor    eax,eax
  412529:	mov    rdi,r15
  41252c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412531:	lea    rsi,[rip+0x304d6]        # 442a0e <_IO_stdin_used@@Base+0x14a0e>
  412538:	xor    eax,eax
  41253a:	mov    rdi,r15
  41253d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412542:	mov    eax,DWORD PTR [r15+0xf0]
  412549:	test   eax,eax
  41254b:	je     412601 <__flatcc_fb_gen_c_json_parser@@Base+0x3081>
  412551:	add    eax,0xffffffff
  412554:	mov    DWORD PTR [r15+0xf0],eax
  41255b:	lea    rsi,[rip+0x1f356]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  412562:	xor    eax,eax
  412564:	mov    rdi,r15
  412567:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41256c:	lea    rsi,[rip+0x1cfcc]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  412573:	xor    eax,eax
  412575:	mov    rdi,r15
  412578:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41257d:	mov    rdi,QWORD PTR [rsp+0x20]
  412582:	test   rdi,rdi
  412585:	je     41258c <__flatcc_fb_gen_c_json_parser@@Base+0x300c>
  412587:	call   406040 <free@plt>
  41258c:	lea    rsp,[rbp-0x20]
  412590:	pop    rbx
  412591:	pop    r12
  412593:	pop    r14
  412595:	pop    r15
  412597:	pop    rbp
  412598:	ret    
  412599:	lea    rdi,[rip+0x2fad1]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4125a0:	lea    rsi,[rip+0x2fad6]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4125a7:	lea    rcx,[rip+0x31b2d]        # 4440db <_IO_stdin_used@@Base+0x160db>
  4125ae:	mov    edx,0x480
  4125b3:	call   4060f0 <__assert_fail@plt>
  4125b8:	mov    rax,QWORD PTR [rip+0x3ea39]        # 450ff8 <stderr@GLIBC_2.2.5>
  4125bf:	mov    rdi,QWORD PTR [rax]
  4125c2:	lea    rsi,[rip+0x1ce5b]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4125c9:	lea    rbx,[rip+0x2faad]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4125d0:	lea    r8,[rip+0x3039f]        # 442976 <_IO_stdin_used@@Base+0x14976>
  4125d7:	mov    ecx,0x474
  4125dc:	xor    eax,eax
  4125de:	mov    rdx,rbx
  4125e1:	call   406170 <fprintf@plt>
  4125e6:	lea    rdi,[rip+0x2dd9e]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4125ed:	lea    rcx,[rip+0x31ae7]        # 4440db <_IO_stdin_used@@Base+0x160db>
  4125f4:	mov    edx,0x474
  4125f9:	mov    rsi,rbx
  4125fc:	call   4060f0 <__assert_fail@plt>
  412601:	lea    rdi,[rip+0x2fa69]        # 442071 <_IO_stdin_used@@Base+0x14071>
  412608:	lea    rsi,[rip+0x2fa6e]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41260f:	lea    rcx,[rip+0x31ac5]        # 4440db <_IO_stdin_used@@Base+0x160db>
  412616:	mov    edx,0x485
  41261b:	call   4060f0 <__assert_fail@plt>
  412620:	push   rbp
  412621:	push   r15
  412623:	push   r14
  412625:	push   r13
  412627:	push   r12
  412629:	push   rbx
  41262a:	push   rax
  41262b:	mov    rbx,QWORD PTR [rdi+0x28]
  41262f:	test   rbx,rbx
  412632:	je     412788 <__flatcc_fb_gen_c_json_parser@@Base+0x3208>
  412638:	xor    eax,eax
  41263a:	mov    rdx,rbx
  41263d:	xor    ecx,ecx
  41263f:	nop
  412640:	test   BYTE PTR [rdx+0x70],0x4
  412644:	jne    412672 <__flatcc_fb_gen_c_json_parser@@Base+0x30f2>
  412646:	movzx  edi,WORD PTR [rdx+0x28]
  41264a:	and    edi,0xfffffffe
  41264d:	cmp    edi,0xe
  412650:	jne    41266f <__flatcc_fb_gen_c_json_parser@@Base+0x30ef>
  412652:	mov    rdi,QWORD PTR [rdx+0x18]
  412656:	movzx  edi,WORD PTR [rdi+0x10]
  41265a:	cmp    edi,0x4
  41265d:	jne    41266f <__flatcc_fb_gen_c_json_parser@@Base+0x30ef>
  41265f:	add    ecx,0x1
  412662:	mov    rdi,QWORD PTR [rdx+0x8]
  412666:	mov    edi,DWORD PTR [rdi+0x8]
  412669:	lea    eax,[rax+rdi*1]
  41266c:	add    eax,0x6
  41266f:	add    ecx,0x1
  412672:	mov    rdx,QWORD PTR [rdx]
  412675:	test   rdx,rdx
  412678:	jne    412640 <__flatcc_fb_gen_c_json_parser@@Base+0x30c0>
  41267a:	mov    DWORD PTR [rsi],ecx
  41267c:	test   ecx,ecx
  41267e:	je     41278e <__flatcc_fb_gen_c_json_parser@@Base+0x320e>
  412684:	movsxd r14,ecx
  412687:	mov    rbp,r14
  41268a:	shl    rbp,0x5
  41268e:	movsxd rdi,eax
  412691:	add    rdi,rbp
  412694:	call   4061a0 <malloc@plt>
  412699:	test   rax,rax
  41269c:	je     41278e <__flatcc_fb_gen_c_json_parser@@Base+0x320e>
  4126a2:	mov    r15,rax
  4126a5:	test   rbx,rbx
  4126a8:	je     41276f <__flatcc_fb_gen_c_json_parser@@Base+0x31ef>
  4126ae:	mov    r12,r15
  4126b1:	add    r12,rbp
  4126b4:	xor    r13d,r13d
  4126b7:	mov    rbp,r15
  4126ba:	nop    WORD PTR [rax+rax*1+0x0]
  4126c0:	test   BYTE PTR [rbx+0x70],0x4
  4126c4:	jne    412763 <__flatcc_fb_gen_c_json_parser@@Base+0x31e3>
  4126ca:	mov    rax,QWORD PTR [rbx+0x8]
  4126ce:	mov    rsi,QWORD PTR [rax]
  4126d1:	mov    QWORD PTR [rbp+0x0],rsi
  4126d5:	mov    rdx,QWORD PTR [rax+0x8]
  4126d9:	mov    DWORD PTR [rbp+0x8],edx
  4126dc:	mov    QWORD PTR [rbp+0x10],rbx
  4126e0:	mov    DWORD PTR [rbp+0x18],0x0
  4126e7:	lea    rax,[rbp+0x20]
  4126eb:	movzx  ecx,WORD PTR [rbx+0x28]
  4126ef:	and    ecx,0xfffffffe
  4126f2:	cmp    ecx,0xe
  4126f5:	jne    412760 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
  4126f7:	mov    rcx,QWORD PTR [rbx+0x18]
  4126fb:	movzx  ecx,WORD PTR [rcx+0x10]
  4126ff:	cmp    ecx,0x4
  412702:	jne    412760 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
  412704:	movsxd rax,r13d
  412707:	add    r13d,0x1
  41270b:	mov    QWORD PTR [rbx+0xa0],rax
  412712:	lea    eax,[rdx+0x5]
  412715:	mov    DWORD PTR [rbp+0x28],eax
  412718:	mov    QWORD PTR [rbp+0x20],r12
  41271c:	mov    rdi,r12
  41271f:	call   406190 <memcpy@plt>
  412724:	mov    rax,QWORD PTR [rbx+0x8]
  412728:	mov    rax,QWORD PTR [rax+0x8]
  41272c:	mov    WORD PTR [r12+rax*1+0x4],0x65
  412734:	mov    DWORD PTR [r12+rax*1],0x7079745f
  41273c:	add    r12,rax
  41273f:	add    r12,0x6
  412743:	mov    QWORD PTR [rbp+0x30],rbx
  412747:	mov    DWORD PTR [rbp+0x38],0x1
  41274e:	add    rbp,0x40
  412752:	jmp    412763 <__flatcc_fb_gen_c_json_parser@@Base+0x31e3>
  412754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41275e:	xchg   ax,ax
  412760:	mov    rbp,rax
  412763:	mov    rbx,QWORD PTR [rbx]
  412766:	test   rbx,rbx
  412769:	jne    4126c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3140>
  41276f:	lea    rcx,[rip+0x136a]        # 413ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  412776:	mov    edx,0x20
  41277b:	mov    rdi,r15
  41277e:	mov    rsi,r14
  412781:	call   406080 <qsort@plt>
  412786:	jmp    412791 <__flatcc_fb_gen_c_json_parser@@Base+0x3211>
  412788:	mov    DWORD PTR [rsi],0x0
  41278e:	xor    r15d,r15d
  412791:	mov    rax,r15
  412794:	add    rsp,0x8
  412798:	pop    rbx
  412799:	pop    r12
  41279b:	pop    r13
  41279d:	pop    r14
  41279f:	pop    r15
  4127a1:	pop    rbp
  4127a2:	ret    
  4127a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4127ad:	nop    DWORD PTR [rax]
  4127b0:	push   r15
  4127b2:	push   r14
  4127b4:	push   rbx
  4127b5:	mov    r14,rdx
  4127b8:	mov    r15,rsi
  4127bb:	mov    rbx,rdi
  4127be:	lea    rsi,[rip+0x302cf]        # 442a94 <_IO_stdin_used@@Base+0x14a94>
  4127c5:	xor    eax,eax
  4127c7:	mov    edx,r8d
  4127ca:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4127cf:	lea    rsi,[rip+0x3030e]        # 442ae4 <_IO_stdin_used@@Base+0x14ae4>
  4127d6:	xor    eax,eax
  4127d8:	mov    rdi,rbx
  4127db:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4127e0:	add    DWORD PTR [rbx+0xf0],0x1
  4127e7:	mov    eax,DWORD PTR [r15+0x48]
  4127eb:	lea    ecx,[rax-0x1]
  4127ee:	cmp    ecx,0x5
  4127f1:	jae    4127f9 <__flatcc_fb_gen_c_json_parser@@Base+0x3279>
  4127f3:	mov    rdx,QWORD PTR [r14+0x48]
  4127f7:	jmp    41280a <__flatcc_fb_gen_c_json_parser@@Base+0x328a>
  4127f9:	add    eax,0xfffffffa
  4127fc:	cmp    eax,0x4
  4127ff:	jae    412855 <__flatcc_fb_gen_c_json_parser@@Base+0x32d5>
  412801:	mov    rdx,QWORD PTR [r14+0x48]
  412805:	test   rdx,rdx
  412808:	js     41284c <__flatcc_fb_gen_c_json_parser@@Base+0x32cc>
  41280a:	lea    rsi,[rip+0x30331]        # 442b42 <_IO_stdin_used@@Base+0x14b42>
  412811:	xor    eax,eax
  412813:	mov    rdi,rbx
  412816:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41281b:	mov    eax,DWORD PTR [rbx+0xf0]
  412821:	test   eax,eax
  412823:	je     41289e <__flatcc_fb_gen_c_json_parser@@Base+0x331e>
  412825:	add    eax,0xffffffff
  412828:	mov    DWORD PTR [rbx+0xf0],eax
  41282e:	lea    rsi,[rip+0x2ff86]        # 4427bb <_IO_stdin_used@@Base+0x147bb>
  412835:	xor    eax,eax
  412837:	mov    rdi,rbx
  41283a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41283f:	add    DWORD PTR [rbx+0xf0],0x1
  412846:	pop    rbx
  412847:	pop    r14
  412849:	pop    r15
  41284b:	ret    
  41284c:	lea    rsi,[rip+0x30318]        # 442b6b <_IO_stdin_used@@Base+0x14b6b>
  412853:	jmp    412811 <__flatcc_fb_gen_c_json_parser@@Base+0x3291>
  412855:	mov    rax,QWORD PTR [rip+0x3e79c]        # 450ff8 <stderr@GLIBC_2.2.5>
  41285c:	mov    rdi,QWORD PTR [rax]
  41285f:	lea    rsi,[rip+0x1cbbe]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  412866:	lea    rbx,[rip+0x2f810]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41286d:	lea    r8,[rip+0x30320]        # 442b94 <_IO_stdin_used@@Base+0x14b94>
  412874:	mov    ecx,0x2c6
  412879:	xor    eax,eax
  41287b:	mov    rdx,rbx
  41287e:	call   406170 <fprintf@plt>
  412883:	lea    rdi,[rip+0x2db01]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  41288a:	lea    rcx,[rip+0x30326]        # 442bb7 <_IO_stdin_used@@Base+0x14bb7>
  412891:	mov    edx,0x2c6
  412896:	mov    rsi,rbx
  412899:	call   4060f0 <__assert_fail@plt>
  41289e:	lea    rdi,[rip+0x2f7cc]        # 442071 <_IO_stdin_used@@Base+0x14071>
  4128a5:	lea    rsi,[rip+0x2f7d1]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  4128ac:	lea    rcx,[rip+0x30244]        # 442af7 <_IO_stdin_used@@Base+0x14af7>
  4128b3:	mov    edx,0x2cf
  4128b8:	call   4060f0 <__assert_fail@plt>
  4128bd:	nop    DWORD PTR [rax]
  4128c0:	lea    rsi,[rip+0x3033e]        # 442c05 <_IO_stdin_used@@Base+0x14c05>
  4128c7:	xor    eax,eax
  4128c9:	jmp    411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4128ce:	xchg   ax,ax
  4128d0:	push   rbp
  4128d1:	push   r15
  4128d3:	push   r14
  4128d5:	push   r13
  4128d7:	push   r12
  4128d9:	push   rbx
  4128da:	sub    rsp,0x58
  4128de:	mov    r13d,r8d
  4128e1:	mov    QWORD PTR [rsp+0x40],rdi
  4128e6:	mov    QWORD PTR [rsp+0x20],rsi
  4128eb:	mov    r14,QWORD PTR [rsi]
  4128ee:	movsxd rbx,edx
  4128f1:	mov    rbp,rbx
  4128f4:	shl    rbp,0x5
  4128f8:	mov    esi,DWORD PTR [r14+rbp*1+0x8]
  4128fd:	lea    r8d,[r13+0x8]
  412901:	mov    edi,0xfffffff8
  412906:	sub    edi,r13d
  412909:	cmp    r8d,esi
  41290c:	jg     412e19 <__flatcc_fb_gen_c_json_parser@@Base+0x3899>
  412912:	mov    eax,esi
  412914:	neg    eax
  412916:	cmp    edi,eax
  412918:	je     412e19 <__flatcc_fb_gen_c_json_parser@@Base+0x3899>
  41291e:	mov    DWORD PTR [rsp+0x48],esi
  412922:	mov    QWORD PTR [rsp+0x50],rbp
  412927:	mov    DWORD PTR [rsp+0x38],edi
  41292b:	mov    DWORD PTR [rsp+0x2c],r8d
  412930:	mov    DWORD PTR [rsp+0x4],ecx
  412934:	mov    eax,ecx
  412936:	sub    eax,edx
  412938:	mov    ecx,eax
  41293a:	shr    ecx,0x1f
  41293d:	add    ecx,eax
  41293f:	sar    ecx,1
  412941:	movsxd rsi,r13d
  412944:	mov    QWORD PTR [rsp+0x30],rdx
  412949:	add    ecx,edx
  41294b:	movsxd r15,ecx
  41294e:	mov    rax,rsi
  412951:	mov    QWORD PTR [rsp+0x8],rsi
  412956:	lea    rax,[rsi-0x1]
  41295a:	mov    QWORD PTR [rsp+0x10],rax
  41295f:	xor    r9d,r9d
  412962:	vpcmpeqd ymm14,ymm14,ymm14
  412967:	vmovdqa xmm0,XMMWORD PTR [rip+0x2f451]        # 441dc0 <_IO_stdin_used@@Base+0x13dc0>
  41296f:	vpbroadcastq ymm15,QWORD PTR [rip+0x2f3a0]        # 441d18 <_IO_stdin_used@@Base+0x13d18>
  412978:	vpbroadcastq ymm8,QWORD PTR [rip+0x2f39f]        # 441d20 <_IO_stdin_used@@Base+0x13d20>
  412981:	vpbroadcastq ymm3,QWORD PTR [rip+0x2f39e]        # 441d28 <_IO_stdin_used@@Base+0x13d28>
  41298a:	vpbroadcastq ymm4,QWORD PTR [rip+0x2f39d]        # 441d30 <_IO_stdin_used@@Base+0x13d30>
  412993:	vpbroadcastq ymm5,QWORD PTR [rip+0x2f39c]        # 441d38 <_IO_stdin_used@@Base+0x13d38>
  41299c:	vpbroadcastq ymm6,QWORD PTR [rip+0x2f39b]        # 441d40 <_IO_stdin_used@@Base+0x13d40>
  4129a5:	mov    r8,r15
  4129a8:	xor    edi,edi
  4129aa:	xor    r10d,r10d
  4129ad:	mov    QWORD PTR [rsp+0x18],rbx
  4129b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129bc:	nop    DWORD PTR [rax+0x0]
  4129c0:	mov    r12,r8
  4129c3:	cmp    r8,rbx
  4129c6:	jle    412d8d <__flatcc_fb_gen_c_json_parser@@Base+0x380d>
  4129cc:	lea    r8,[r12-0x1]
  4129d1:	mov    rcx,r8
  4129d4:	shl    rcx,0x5
  4129d8:	mov    eax,DWORD PTR [r14+rcx*1+0x8]
  4129dd:	mov    r11d,eax
  4129e0:	sub    r11d,r13d
  4129e3:	jl     412bc6 <__flatcc_fb_gen_c_json_parser@@Base+0x3646>
  4129e9:	cmp    r11d,0x9
  4129ed:	mov    edx,0x8
  4129f2:	cmovge r11d,edx
  4129f6:	test   r11d,r11d
  4129f9:	je     412a3b <__flatcc_fb_gen_c_json_parser@@Base+0x34bb>
  4129fb:	mov    rdx,QWORD PTR [r14+rcx*1]
  4129ff:	lea    ecx,[r11+0x1]
  412a03:	movsxd rcx,ecx
  412a06:	add    rcx,0xffffffffffffffff
  412a0a:	not    eax
  412a0c:	add    eax,r13d
  412a0f:	cmp    eax,0xfffffff6
  412a12:	mov    esi,0xfffffff7
  412a17:	cmovle eax,esi
  412a1a:	mov    ebp,0xfffffffe
  412a1f:	sub    ebp,eax
  412a21:	lea    rbx,[rbp+0x1]
  412a25:	cmp    rbx,0x10
  412a29:	jae    412a43 <__flatcc_fb_gen_c_json_parser@@Base+0x34c3>
  412a2b:	mov    rax,rcx
  412a2e:	xor    r9d,r9d
  412a31:	mov    rbx,QWORD PTR [rsp+0x18]
  412a36:	jmp    412b6e <__flatcc_fb_gen_c_json_parser@@Base+0x35ee>
  412a3b:	xor    r9d,r9d
  412a3e:	jmp    412bae <__flatcc_fb_gen_c_json_parser@@Base+0x362e>
  412a43:	mov    rax,QWORD PTR [rsp+0x8]
  412a48:	lea    rsi,[rdx+rax*1]
  412a4c:	add    ebp,0x1
  412a4f:	and    ebp,0xf
  412a52:	mov    rax,rbp
  412a55:	sub    rax,rbx
  412a58:	add    rax,rcx
  412a5b:	vmovq  xmm7,rcx
  412a60:	vpbroadcastq ymm7,xmm7
  412a65:	vpaddq ymm9,ymm7,YMMWORD PTR [rip+0x2f253]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  412a6d:	sub    rbx,rbp
  412a70:	vpxor  xmm10,xmm10,xmm10
  412a75:	vpxor  xmm11,xmm11,xmm11
  412a7a:	vpxor  xmm12,xmm12,xmm12
  412a7f:	vpxor  xmm13,xmm13,xmm13
  412a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a8e:	xchg   ax,ax
  412a90:	vpaddq ymm7,ymm9,ymm14
  412a95:	vmovq  rcx,xmm7
  412a9a:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0x3]
  412aa0:	vmovd  xmm14,DWORD PTR [rsi+rcx*1-0x7]
  412aa6:	vpshufb xmm1,xmm1,xmm0
  412aab:	vpmovsxbq ymm1,xmm1
  412ab0:	vpshufb xmm2,xmm14,xmm0
  412ab5:	vpcmpeqd ymm14,ymm14,ymm14
  412aba:	vpmovsxbq ymm2,xmm2
  412abf:	vpsllq ymm7,ymm7,0x3
  412ac4:	vpsubq ymm7,ymm15,ymm7
  412ac8:	vpand  ymm7,ymm7,ymm5
  412acc:	vpsllvq ymm1,ymm1,ymm7
  412ad1:	vpsllq ymm7,ymm9,0x3
  412ad7:	vpor   ymm10,ymm1,ymm10
  412adc:	vpsubq ymm1,ymm8,ymm7
  412ae0:	vpand  ymm1,ymm1,ymm5
  412ae4:	vpsllvq ymm1,ymm2,ymm1
  412ae9:	vmovd  xmm2,DWORD PTR [rsi+rcx*1-0xb]
  412aef:	vpshufb xmm2,xmm2,xmm0
  412af4:	vpmovsxbq ymm2,xmm2
  412af9:	vpor   ymm11,ymm1,ymm11
  412afe:	vpsubq ymm1,ymm3,ymm7
  412b02:	vpand  ymm1,ymm1,ymm5
  412b06:	vpsllvq ymm1,ymm2,ymm1
  412b0b:	vpor   ymm12,ymm1,ymm12
  412b10:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0xf]
  412b16:	vpshufb xmm1,xmm1,xmm0
  412b1b:	vpmovsxbq ymm1,xmm1
  412b20:	vpsubq ymm2,ymm4,ymm7
  412b24:	vpand  ymm2,ymm2,ymm5
  412b28:	vpsllvq ymm1,ymm1,ymm2
  412b2d:	vpor   ymm13,ymm1,ymm13
  412b32:	vpaddq ymm9,ymm9,ymm6
  412b36:	add    rbx,0xfffffffffffffff0
  412b3a:	jne    412a90 <__flatcc_fb_gen_c_json_parser@@Base+0x3510>
  412b40:	vpor   ymm1,ymm11,ymm10
  412b45:	vpor   ymm1,ymm12,ymm1
  412b49:	vpor   ymm1,ymm13,ymm1
  412b4d:	vextracti128 xmm2,ymm1,0x1
  412b53:	vpor   ymm1,ymm1,ymm2
  412b57:	vpshufd xmm2,xmm1,0x4e
  412b5c:	vpor   ymm1,ymm1,ymm2
  412b60:	vmovq  r9,xmm1
  412b65:	test   ebp,ebp
  412b67:	mov    rbx,QWORD PTR [rsp+0x18]
  412b6c:	je     412bae <__flatcc_fb_gen_c_json_parser@@Base+0x362e>
  412b6e:	lea    rsi,[rax*8+0x0]
  412b76:	mov    ebp,0x40
  412b7b:	sub    rbp,rsi
  412b7e:	add    rdx,QWORD PTR [rsp+0x10]
  412b83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b8d:	nop    DWORD PTR [rax]
  412b90:	movsx  rsi,BYTE PTR [rdx+rax*1]
  412b95:	add    rax,0xffffffffffffffff
  412b99:	mov    ecx,ebp
  412b9b:	and    cl,0xf8
  412b9e:	shlx   rcx,rsi,rcx
  412ba3:	or     r9,rcx
  412ba6:	add    rbp,0x8
  412baa:	test   eax,eax
  412bac:	jne    412b90 <__flatcc_fb_gen_c_json_parser@@Base+0x3610>
  412bae:	shl    r11d,0x3
  412bb2:	mov    eax,0x40
  412bb7:	sub    eax,r11d
  412bba:	mov    rcx,0xffffffffffffffff
  412bc1:	shlx   r10,rcx,rax
  412bc6:	mov    rdx,r12
  412bc9:	shl    rdx,0x5
  412bcd:	mov    eax,DWORD PTR [r14+rdx*1+0x8]
  412bd2:	mov    ecx,eax
  412bd4:	sub    ecx,r13d
  412bd7:	jl     412d7e <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  412bdd:	cmp    ecx,0x9
  412be0:	mov    esi,0x8
  412be5:	cmovge ecx,esi
  412be8:	test   ecx,ecx
  412bea:	je     412c25 <__flatcc_fb_gen_c_json_parser@@Base+0x36a5>
  412bec:	mov    rdx,QWORD PTR [r14+rdx*1]
  412bf0:	add    ecx,0x1
  412bf3:	movsxd rcx,ecx
  412bf6:	add    rcx,0xffffffffffffffff
  412bfa:	not    eax
  412bfc:	add    eax,r13d
  412bff:	cmp    eax,0xfffffff6
  412c02:	mov    esi,0xfffffff7
  412c07:	cmovle eax,esi
  412c0a:	mov    ebp,0xfffffffe
  412c0f:	sub    ebp,eax
  412c11:	lea    rdi,[rbp+0x1]
  412c15:	cmp    rdi,0x10
  412c19:	jae    412c2c <__flatcc_fb_gen_c_json_parser@@Base+0x36ac>
  412c1b:	mov    rax,rcx
  412c1e:	xor    edi,edi
  412c20:	jmp    412d44 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
  412c25:	xor    edi,edi
  412c27:	jmp    412d7e <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  412c2c:	mov    rax,QWORD PTR [rsp+0x8]
  412c31:	lea    rsi,[rdx+rax*1]
  412c35:	add    ebp,0x1
  412c38:	and    ebp,0xf
  412c3b:	mov    rax,rbp
  412c3e:	sub    rax,rdi
  412c41:	add    rax,rcx
  412c44:	vmovq  xmm1,rcx
  412c49:	vpbroadcastq ymm1,xmm1
  412c4e:	vpaddq ymm9,ymm1,YMMWORD PTR [rip+0x2f06a]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  412c56:	sub    rdi,rbp
  412c59:	vpxor  xmm10,xmm10,xmm10
  412c5e:	vpxor  xmm11,xmm11,xmm11
  412c63:	vpxor  xmm12,xmm12,xmm12
  412c68:	vpxor  xmm13,xmm13,xmm13
  412c6d:	nop    DWORD PTR [rax]
  412c70:	vpaddq ymm1,ymm9,ymm14
  412c75:	vmovq  rcx,xmm1
  412c7a:	vmovd  xmm2,DWORD PTR [rsi+rcx*1-0x3]
  412c80:	vmovd  xmm7,DWORD PTR [rsi+rcx*1-0x7]
  412c86:	vpshufb xmm2,xmm2,xmm0
  412c8b:	vpmovsxbq ymm2,xmm2
  412c90:	vpshufb xmm7,xmm7,xmm0
  412c95:	vpmovsxbq ymm7,xmm7
  412c9a:	vpsllq ymm1,ymm1,0x3
  412c9f:	vpsubq ymm1,ymm15,ymm1
  412ca3:	vpand  ymm1,ymm1,ymm5
  412ca7:	vpsllvq ymm1,ymm2,ymm1
  412cac:	vpsllq ymm2,ymm9,0x3
  412cb2:	vpor   ymm10,ymm1,ymm10
  412cb7:	vpsubq ymm1,ymm8,ymm2
  412cbb:	vpand  ymm1,ymm1,ymm5
  412cbf:	vpsllvq ymm1,ymm7,ymm1
  412cc4:	vmovd  xmm7,DWORD PTR [rsi+rcx*1-0xb]
  412cca:	vpshufb xmm7,xmm7,xmm0
  412ccf:	vpmovsxbq ymm7,xmm7
  412cd4:	vpor   ymm11,ymm1,ymm11
  412cd9:	vpsubq ymm1,ymm3,ymm2
  412cdd:	vpand  ymm1,ymm1,ymm5
  412ce1:	vpsllvq ymm1,ymm7,ymm1
  412ce6:	vpor   ymm12,ymm1,ymm12
  412ceb:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0xf]
  412cf1:	vpshufb xmm1,xmm1,xmm0
  412cf6:	vpmovsxbq ymm1,xmm1
  412cfb:	vpsubq ymm2,ymm4,ymm2
  412cff:	vpand  ymm2,ymm2,ymm5
  412d03:	vpsllvq ymm1,ymm1,ymm2
  412d08:	vpor   ymm13,ymm1,ymm13
  412d0d:	vpaddq ymm9,ymm9,ymm6
  412d11:	add    rdi,0xfffffffffffffff0
  412d15:	jne    412c70 <__flatcc_fb_gen_c_json_parser@@Base+0x36f0>
  412d1b:	vpor   ymm1,ymm11,ymm10
  412d20:	vpor   ymm1,ymm12,ymm1
  412d24:	vpor   ymm1,ymm13,ymm1
  412d28:	vextracti128 xmm2,ymm1,0x1
  412d2e:	vpor   ymm1,ymm1,ymm2
  412d32:	vpshufd xmm2,xmm1,0x4e
  412d37:	vpor   ymm1,ymm1,ymm2
  412d3b:	vmovq  rdi,xmm1
  412d40:	test   ebp,ebp
  412d42:	je     412d7e <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  412d44:	lea    rsi,[rax*8+0x0]
  412d4c:	mov    ebp,0x40
  412d51:	sub    rbp,rsi
  412d54:	add    rdx,QWORD PTR [rsp+0x10]
  412d59:	nop    DWORD PTR [rax+0x0]
  412d60:	movsx  rsi,BYTE PTR [rdx+rax*1]
  412d65:	add    rax,0xffffffffffffffff
  412d69:	mov    ecx,ebp
  412d6b:	and    cl,0xf8
  412d6e:	shlx   rcx,rsi,rcx
  412d73:	or     rdi,rcx
  412d76:	add    rbp,0x8
  412d7a:	test   eax,eax
  412d7c:	jne    412d60 <__flatcc_fb_gen_c_json_parser@@Base+0x37e0>
  412d7e:	mov    rax,rdi
  412d81:	xor    rax,r9
  412d84:	test   rax,r10
  412d87:	je     4129c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3440>
  412d8d:	cmp    r12d,DWORD PTR [rsp+0x30]
  412d92:	jle    412e44 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
  412d98:	movsxd rax,r12d
  412d9b:	shl    rax,0x5
  412d9f:	mov    ecx,DWORD PTR [r14+rax*1+0x8]
  412da4:	xor    edx,edx
  412da6:	mov    esi,ecx
  412da8:	mov    r15d,0x0
  412dae:	mov    ebp,0x0
  412db3:	sub    esi,r13d
  412db6:	jl     41342f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  412dbc:	mov    rax,QWORD PTR [r14+rax*1]
  412dc0:	mov    rdx,QWORD PTR [rsp+0x8]
  412dc5:	lea    rbp,[rax+rdx*1]
  412dc9:	cmp    esi,0x9
  412dcc:	mov    r15d,0x8
  412dd2:	cmovl  r15d,esi
  412dd6:	test   r15d,r15d
  412dd9:	je     4132c3 <__flatcc_fb_gen_c_json_parser@@Base+0x3d43>
  412ddf:	lea    edx,[r15+0x1]
  412de3:	movsxd rdi,edx
  412de6:	add    rdi,0xffffffffffffffff
  412dea:	not    ecx
  412dec:	add    ecx,r13d
  412def:	cmp    ecx,0xfffffff6
  412df2:	mov    edx,0xfffffff7
  412df7:	cmovg  edx,ecx
  412dfa:	mov    esi,0xfffffffe
  412dff:	sub    esi,edx
  412e01:	lea    rdx,[rsi+0x1]
  412e05:	cmp    rdx,0x10
  412e09:	jae    4132cd <__flatcc_fb_gen_c_json_parser@@Base+0x3d4d>
  412e0f:	xor    edx,edx
  412e11:	mov    rcx,rdi
  412e14:	jmp    4133e9 <__flatcc_fb_gen_c_json_parser@@Base+0x3e69>
  412e19:	cmp    ecx,edx
  412e1b:	jne    413224 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca4>
  412e21:	xor    r9d,r9d
  412e24:	mov    rdi,QWORD PTR [rsp+0x40]
  412e29:	mov    rsi,QWORD PTR [rsp+0x20]
  412e2e:	mov    r8d,r13d
  412e31:	add    rsp,0x58
  412e35:	pop    rbx
  412e36:	pop    r12
  412e38:	pop    r13
  412e3a:	pop    r14
  412e3c:	pop    r15
  412e3e:	pop    rbp
  412e3f:	jmp    413b10 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  412e44:	movsxd r9,DWORD PTR [rsp+0x4]
  412e49:	xor    esi,esi
  412e4b:	mov    r8d,0x8
  412e51:	mov    r10d,0xfffffff7
  412e57:	vpcmpeqd ymm14,ymm14,ymm14
  412e5c:	xor    edi,edi
  412e5e:	xor    r11d,r11d
  412e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e70:	cmp    r15,r9
  412e73:	jge    413253 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd3>
  412e79:	mov    rax,r15
  412e7c:	shl    rax,0x5
  412e80:	mov    ecx,DWORD PTR [r14+rax*1+0x8]
  412e85:	mov    r12d,ecx
  412e88:	sub    r12d,r13d
  412e8b:	jl     413056 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad6>
  412e91:	cmp    r12d,0x9
  412e95:	cmovge r12d,r8d
  412e99:	test   r12d,r12d
  412e9c:	je     412ed7 <__flatcc_fb_gen_c_json_parser@@Base+0x3957>
  412e9e:	mov    rax,QWORD PTR [r14+rax*1]
  412ea2:	lea    esi,[r12+0x1]
  412ea7:	movsxd rbx,esi
  412eaa:	add    rbx,0xffffffffffffffff
  412eae:	not    ecx
  412eb0:	add    ecx,r13d
  412eb3:	cmp    ecx,0xfffffff6
  412eb6:	cmovle ecx,r10d
  412eba:	mov    r11d,0xfffffffe
  412ec0:	sub    r11d,ecx
  412ec3:	lea    rsi,[r11+0x1]
  412ec7:	cmp    rsi,0x10
  412ecb:	jae    412ede <__flatcc_fb_gen_c_json_parser@@Base+0x395e>
  412ecd:	mov    rbp,rbx
  412ed0:	xor    esi,esi
  412ed2:	jmp    413005 <__flatcc_fb_gen_c_json_parser@@Base+0x3a85>
  412ed7:	xor    esi,esi
  412ed9:	jmp    41303e <__flatcc_fb_gen_c_json_parser@@Base+0x3abe>
  412ede:	mov    rcx,QWORD PTR [rsp+0x8]
  412ee3:	lea    rcx,[rax+rcx*1]
  412ee7:	add    r11d,0x1
  412eeb:	and    r11d,0xf
  412eef:	mov    rbp,r11
  412ef2:	sub    rbp,rsi
  412ef5:	add    rbp,rbx
  412ef8:	vmovq  xmm2,rbx
  412efd:	vpbroadcastq ymm2,xmm2
  412f02:	vpaddq ymm9,ymm2,YMMWORD PTR [rip+0x2edb6]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  412f0a:	sub    rsi,r11
  412f0d:	vpxor  xmm10,xmm10,xmm10
  412f12:	vpxor  xmm11,xmm11,xmm11
  412f17:	vpxor  xmm12,xmm12,xmm12
  412f1c:	vpxor  xmm13,xmm13,xmm13
  412f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  412f30:	vpaddq ymm2,ymm9,ymm14
  412f35:	vmovq  rbx,xmm2
  412f3a:	vmovd  xmm7,DWORD PTR [rcx+rbx*1-0x3]
  412f40:	vmovd  xmm1,DWORD PTR [rcx+rbx*1-0x7]
  412f46:	vpshufb xmm7,xmm7,xmm0
  412f4b:	vpmovsxbq ymm7,xmm7
  412f50:	vpshufb xmm1,xmm1,xmm0
  412f55:	vpmovsxbq ymm1,xmm1
  412f5a:	vpsllq ymm2,ymm2,0x3
  412f5f:	vpsubq ymm2,ymm15,ymm2
  412f63:	vpand  ymm2,ymm2,ymm5
  412f67:	vpsllvq ymm2,ymm7,ymm2
  412f6c:	vpsllq ymm7,ymm9,0x3
  412f72:	vpor   ymm10,ymm2,ymm10
  412f77:	vpsubq ymm2,ymm8,ymm7
  412f7b:	vpand  ymm2,ymm2,ymm5
  412f7f:	vpsllvq ymm1,ymm1,ymm2
  412f84:	vmovd  xmm2,DWORD PTR [rcx+rbx*1-0xb]
  412f8a:	vpshufb xmm2,xmm2,xmm0
  412f8f:	vpmovsxbq ymm2,xmm2
  412f94:	vpor   ymm11,ymm1,ymm11
  412f99:	vpsubq ymm1,ymm3,ymm7
  412f9d:	vpand  ymm1,ymm1,ymm5
  412fa1:	vpsllvq ymm1,ymm2,ymm1
  412fa6:	vpor   ymm12,ymm1,ymm12
  412fab:	vmovd  xmm1,DWORD PTR [rcx+rbx*1-0xf]
  412fb1:	vpshufb xmm1,xmm1,xmm0
  412fb6:	vpmovsxbq ymm1,xmm1
  412fbb:	vpsubq ymm2,ymm4,ymm7
  412fbf:	vpand  ymm2,ymm2,ymm5
  412fc3:	vpsllvq ymm1,ymm1,ymm2
  412fc8:	vpor   ymm13,ymm1,ymm13
  412fcd:	vpaddq ymm9,ymm9,ymm6
  412fd1:	add    rsi,0xfffffffffffffff0
  412fd5:	jne    412f30 <__flatcc_fb_gen_c_json_parser@@Base+0x39b0>
  412fdb:	vpor   ymm1,ymm11,ymm10
  412fe0:	vpor   ymm1,ymm12,ymm1
  412fe4:	vpor   ymm1,ymm13,ymm1
  412fe8:	vextracti128 xmm2,ymm1,0x1
  412fee:	vpor   ymm1,ymm1,ymm2
  412ff2:	vpshufd xmm2,xmm1,0x4e
  412ff7:	vpor   ymm1,ymm1,ymm2
  412ffb:	vmovq  rsi,xmm1
  413000:	test   r11d,r11d
  413003:	je     41303e <__flatcc_fb_gen_c_json_parser@@Base+0x3abe>
  413005:	lea    rbx,[rbp*8+0x0]
  41300d:	mov    edx,0x40
  413012:	sub    rdx,rbx
  413015:	add    rax,QWORD PTR [rsp+0x10]
  41301a:	nop    WORD PTR [rax+rax*1+0x0]
  413020:	movsx  rbx,BYTE PTR [rax+rbp*1]
  413025:	add    rbp,0xffffffffffffffff
  413029:	mov    ecx,edx
  41302b:	and    cl,0xf8
  41302e:	shlx   rcx,rbx,rcx
  413033:	or     rsi,rcx
  413036:	add    rdx,0x8
  41303a:	test   ebp,ebp
  41303c:	jne    413020 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
  41303e:	shl    r12d,0x3
  413042:	mov    eax,0x40
  413047:	sub    eax,r12d
  41304a:	mov    rcx,0xffffffffffffffff
  413051:	shlx   r11,rcx,rax
  413056:	add    r15,0x1
  41305a:	mov    rdx,r15
  41305d:	shl    rdx,0x5
  413061:	mov    ecx,DWORD PTR [r14+rdx*1+0x8]
  413066:	mov    eax,ecx
  413068:	sub    eax,r13d
  41306b:	jl     41320e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  413071:	cmp    eax,0x9
  413074:	cmovge eax,r8d
  413078:	test   eax,eax
  41307a:	je     4130b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3b30>
  41307c:	mov    rdx,QWORD PTR [r14+rdx*1]
  413080:	add    eax,0x1
  413083:	cdqe   
  413085:	add    rax,0xffffffffffffffff
  413089:	not    ecx
  41308b:	add    ecx,r13d
  41308e:	cmp    ecx,0xfffffff6
  413091:	cmovle ecx,r10d
  413095:	mov    ebx,0xfffffffe
  41309a:	sub    ebx,ecx
  41309c:	lea    rdi,[rbx+0x1]
  4130a0:	cmp    rdi,0x10
  4130a4:	jae    4130b7 <__flatcc_fb_gen_c_json_parser@@Base+0x3b37>
  4130a6:	mov    rbp,rax
  4130a9:	xor    edi,edi
  4130ab:	jmp    4131d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c54>
  4130b0:	xor    edi,edi
  4130b2:	jmp    41320e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  4130b7:	mov    rcx,QWORD PTR [rsp+0x8]
  4130bc:	lea    rcx,[rdx+rcx*1]
  4130c0:	add    ebx,0x1
  4130c3:	and    ebx,0xf
  4130c6:	mov    rbp,rbx
  4130c9:	sub    rbp,rdi
  4130cc:	add    rbp,rax
  4130cf:	vmovq  xmm1,rax
  4130d4:	vpbroadcastq ymm1,xmm1
  4130d9:	vpaddq ymm9,ymm1,YMMWORD PTR [rip+0x2ebdf]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  4130e1:	sub    rdi,rbx
  4130e4:	vpxor  xmm10,xmm10,xmm10
  4130e9:	vpxor  xmm11,xmm11,xmm11
  4130ee:	vpxor  xmm12,xmm12,xmm12
  4130f3:	vpxor  xmm13,xmm13,xmm13
  4130f8:	nop    DWORD PTR [rax+rax*1+0x0]
  413100:	vpaddq ymm1,ymm9,ymm14
  413105:	vmovq  rax,xmm1
  41310a:	vmovd  xmm2,DWORD PTR [rcx+rax*1-0x3]
  413110:	vmovd  xmm7,DWORD PTR [rcx+rax*1-0x7]
  413116:	vpshufb xmm2,xmm2,xmm0
  41311b:	vpmovsxbq ymm2,xmm2
  413120:	vpshufb xmm7,xmm7,xmm0
  413125:	vpmovsxbq ymm7,xmm7
  41312a:	vpsllq ymm1,ymm1,0x3
  41312f:	vpsubq ymm1,ymm15,ymm1
  413133:	vpand  ymm1,ymm1,ymm5
  413137:	vpsllvq ymm1,ymm2,ymm1
  41313c:	vpsllq ymm2,ymm9,0x3
  413142:	vpor   ymm10,ymm1,ymm10
  413147:	vpsubq ymm1,ymm8,ymm2
  41314b:	vpand  ymm1,ymm1,ymm5
  41314f:	vpsllvq ymm1,ymm7,ymm1
  413154:	vmovd  xmm7,DWORD PTR [rcx+rax*1-0xb]
  41315a:	vpshufb xmm7,xmm7,xmm0
  41315f:	vpmovsxbq ymm7,xmm7
  413164:	vpor   ymm11,ymm1,ymm11
  413169:	vpsubq ymm1,ymm3,ymm2
  41316d:	vpand  ymm1,ymm1,ymm5
  413171:	vpsllvq ymm1,ymm7,ymm1
  413176:	vpor   ymm12,ymm1,ymm12
  41317b:	vmovd  xmm1,DWORD PTR [rcx+rax*1-0xf]
  413181:	vpshufb xmm1,xmm1,xmm0
  413186:	vpmovsxbq ymm1,xmm1
  41318b:	vpsubq ymm2,ymm4,ymm2
  41318f:	vpand  ymm2,ymm2,ymm5
  413193:	vpsllvq ymm1,ymm1,ymm2
  413198:	vpor   ymm13,ymm1,ymm13
  41319d:	vpaddq ymm9,ymm9,ymm6
  4131a1:	add    rdi,0xfffffffffffffff0
  4131a5:	jne    413100 <__flatcc_fb_gen_c_json_parser@@Base+0x3b80>
  4131ab:	vpor   ymm1,ymm11,ymm10
  4131b0:	vpor   ymm1,ymm12,ymm1
  4131b4:	vpor   ymm1,ymm13,ymm1
  4131b8:	vextracti128 xmm2,ymm1,0x1
  4131be:	vpor   ymm1,ymm1,ymm2
  4131c2:	vpshufd xmm2,xmm1,0x4e
  4131c7:	vpor   ymm1,ymm1,ymm2
  4131cb:	vmovq  rdi,xmm1
  4131d0:	test   ebx,ebx
  4131d2:	je     41320e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  4131d4:	lea    rax,[rbp*8+0x0]
  4131dc:	mov    ecx,0x40
  4131e1:	sub    rcx,rax
  4131e4:	add    rdx,QWORD PTR [rsp+0x10]
  4131e9:	nop    DWORD PTR [rax+0x0]
  4131f0:	movsx  rax,BYTE PTR [rdx+rbp*1]
  4131f5:	add    rbp,0xffffffffffffffff
  4131f9:	mov    ebx,ecx
  4131fb:	and    bl,0xf8
  4131fe:	shlx   rax,rax,rbx
  413203:	or     rdi,rax
  413206:	add    rcx,0x8
  41320a:	test   ebp,ebp
  41320c:	jne    4131f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c70>
  41320e:	mov    rax,rdi
  413211:	xor    rax,rsi
  413214:	test   rax,r11
  413217:	mov    rbx,QWORD PTR [rsp+0x18]
  41321c:	je     412e70 <__flatcc_fb_gen_c_json_parser@@Base+0x38f0>
  413222:	jmp    413257 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd7>
  413224:	lea    eax,[rdx+0x1]
  413227:	cmp    eax,ecx
  413229:	jne    41291e <__flatcc_fb_gen_c_json_parser@@Base+0x339e>
  41322f:	movsxd rax,ecx
  413232:	shl    rax,0x5
  413236:	mov    eax,DWORD PTR [r14+rax*1+0x8]
  41323b:	cmp    r8d,eax
  41323e:	jg     412e21 <__flatcc_fb_gen_c_json_parser@@Base+0x38a1>
  413244:	neg    eax
  413246:	cmp    edi,eax
  413248:	jne    41291e <__flatcc_fb_gen_c_json_parser@@Base+0x339e>
  41324e:	jmp    412e21 <__flatcc_fb_gen_c_json_parser@@Base+0x38a1>
  413253:	add    r15d,0x1
  413257:	lea    r9d,[r15-0x1]
  41325b:	mov    rdx,QWORD PTR [rsp+0x30]
  413260:	mov    esi,edx
  413262:	cmp    r15d,edx
  413265:	mov    ecx,DWORD PTR [rsp+0x4]
  413269:	mov    ebp,DWORD PTR [rsp+0x2c]
  41326d:	mov    r8d,DWORD PTR [rsp+0x38]
  413272:	mov    eax,DWORD PTR [rsp+0x48]
  413276:	jle    4134ef <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  41327c:	cmp    ebp,eax
  41327e:	jg     41328b <__flatcc_fb_gen_c_json_parser@@Base+0x3d0b>
  413280:	add    eax,r8d
  413283:	test   eax,eax
  413285:	jg     4134ed <__flatcc_fb_gen_c_json_parser@@Base+0x3f6d>
  41328b:	movsxd rax,r9d
  41328e:	mov    rsi,QWORD PTR [rsp+0x50]
  413293:	add    rsi,r14
  413296:	add    rsi,0x28
  41329a:	nop    WORD PTR [rax+rax*1+0x0]
  4132a0:	cmp    rbx,rax
  4132a3:	jge    4134ea <__flatcc_fb_gen_c_json_parser@@Base+0x3f6a>
  4132a9:	add    rbx,0x1
  4132ad:	mov    edi,DWORD PTR [rsi]
  4132af:	add    rsi,0x20
  4132b3:	cmp    ebp,edi
  4132b5:	jg     4132a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
  4132b7:	add    edi,r8d
  4132ba:	test   edi,edi
  4132bc:	jle    4132a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
  4132be:	jmp    4134ed <__flatcc_fb_gen_c_json_parser@@Base+0x3f6d>
  4132c3:	xor    edx,edx
  4132c5:	xor    r15d,r15d
  4132c8:	jmp    41342f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  4132cd:	add    esi,0x1
  4132d0:	and    esi,0xf
  4132d3:	mov    rcx,rsi
  4132d6:	sub    rcx,rdx
  4132d9:	add    rcx,rdi
  4132dc:	vmovq  xmm1,rdi
  4132e1:	vpbroadcastq ymm1,xmm1
  4132e6:	vpaddq ymm7,ymm1,YMMWORD PTR [rip+0x2e9d2]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  4132ee:	sub    rdx,rsi
  4132f1:	vpxor  xmm9,xmm9,xmm9
  4132f6:	vpxor  xmm10,xmm10,xmm10
  4132fb:	vpxor  xmm11,xmm11,xmm11
  413300:	vpxor  xmm12,xmm12,xmm12
  413305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41330f:	nop
  413310:	vpaddq ymm2,ymm7,YMMWORD PTR [rip+0x2e9c8]        # 441ce0 <_IO_stdin_used@@Base+0x13ce0>
  413318:	vmovq  rdi,xmm2
  41331d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  413323:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  413329:	vpshufb xmm1,xmm13,xmm0
  41332e:	vpmovsxbq ymm13,xmm1
  413333:	vpshufb xmm1,xmm14,xmm0
  413338:	vpmovsxbq ymm1,xmm1
  41333d:	vpsllq ymm2,ymm2,0x3
  413342:	vpsubq ymm2,ymm15,ymm2
  413346:	vpand  ymm2,ymm2,ymm5
  41334a:	vpsllvq ymm2,ymm13,ymm2
  41334f:	vpsllq ymm13,ymm7,0x3
  413354:	vpor   ymm9,ymm2,ymm9
  413359:	vpsubq ymm2,ymm8,ymm13
  41335e:	vpand  ymm2,ymm2,ymm5
  413362:	vpsllvq ymm1,ymm1,ymm2
  413367:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xb]
  41336d:	vpshufb xmm2,xmm2,xmm0
  413372:	vpmovsxbq ymm2,xmm2
  413377:	vpor   ymm10,ymm1,ymm10
  41337c:	vpsubq ymm1,ymm3,ymm13
  413381:	vpand  ymm1,ymm1,ymm5
  413385:	vpsllvq ymm1,ymm2,ymm1
  41338a:	vpor   ymm11,ymm1,ymm11
  41338f:	vmovd  xmm1,DWORD PTR [rbp+rdi*1-0xf]
  413395:	vpshufb xmm1,xmm1,xmm0
  41339a:	vpmovsxbq ymm1,xmm1
  41339f:	vpsubq ymm2,ymm4,ymm13
  4133a4:	vpand  ymm2,ymm2,ymm5
  4133a8:	vpsllvq ymm1,ymm1,ymm2
  4133ad:	vpor   ymm12,ymm1,ymm12
  4133b2:	vpaddq ymm7,ymm7,ymm6
  4133b6:	add    rdx,0xfffffffffffffff0
  4133ba:	jne    413310 <__flatcc_fb_gen_c_json_parser@@Base+0x3d90>
  4133c0:	vpor   ymm0,ymm10,ymm9
  4133c5:	vpor   ymm0,ymm11,ymm0
  4133c9:	vpor   ymm0,ymm12,ymm0
  4133cd:	vextracti128 xmm1,ymm0,0x1
  4133d3:	vpor   ymm0,ymm0,ymm1
  4133d7:	vpshufd xmm1,xmm0,0x4e
  4133dc:	vpor   ymm0,ymm0,ymm1
  4133e0:	vmovq  rdx,xmm0
  4133e5:	test   esi,esi
  4133e7:	je     41342f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  4133e9:	lea    rdi,[rcx*8+0x0]
  4133f1:	mov    ebx,0x40
  4133f6:	sub    rbx,rdi
  4133f9:	mov    rsi,QWORD PTR [rsp+0x8]
  4133fe:	add    rax,rsi
  413401:	add    rax,0xffffffffffffffff
  413405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41340f:	nop
  413410:	movsx  rdi,BYTE PTR [rax+rcx*1]
  413415:	add    rcx,0xffffffffffffffff
  413419:	mov    esi,ebx
  41341b:	and    sil,0xf8
  41341f:	shlx   rsi,rdi,rsi
  413424:	or     rdx,rsi
  413427:	add    rbx,0x8
  41342b:	test   ecx,ecx
  41342d:	jne    413410 <__flatcc_fb_gen_c_json_parser@@Base+0x3e90>
  41342f:	lea    rsi,[rip+0x2f7e1]        # 442c17 <_IO_stdin_used@@Base+0x14c17>
  413436:	xor    eax,eax
  413438:	mov    rbx,QWORD PTR [rsp+0x40]
  41343d:	mov    rdi,rbx
  413440:	mov    ecx,r15d
  413443:	mov    r8,rbp
  413446:	vzeroupper 
  413449:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41344e:	add    DWORD PTR [rbx+0xf0],0x1
  413455:	lea    ecx,[r12-0x1]
  41345a:	mov    rdi,rbx
  41345d:	mov    r14,QWORD PTR [rsp+0x20]
  413462:	mov    rsi,r14
  413465:	mov    rdx,QWORD PTR [rsp+0x30]
  41346a:	mov    r8d,r13d
  41346d:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  413472:	mov    eax,DWORD PTR [rbx+0xf0]
  413478:	test   eax,eax
  41347a:	je     413a39 <__flatcc_fb_gen_c_json_parser@@Base+0x44b9>
  413480:	add    eax,0xffffffff
  413483:	mov    DWORD PTR [rbx+0xf0],eax
  413489:	lea    rsi,[rip+0x2f7e2]        # 442c72 <_IO_stdin_used@@Base+0x14c72>
  413490:	xor    eax,eax
  413492:	mov    rdi,rbx
  413495:	mov    edx,r15d
  413498:	mov    rcx,rbp
  41349b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4134a0:	add    DWORD PTR [rbx+0xf0],0x1
  4134a7:	mov    rdi,rbx
  4134aa:	mov    rsi,r14
  4134ad:	mov    edx,r12d
  4134b0:	mov    ecx,DWORD PTR [rsp+0x4]
  4134b4:	mov    r8d,r13d
  4134b7:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4134bc:	mov    eax,DWORD PTR [rbx+0xf0]
  4134c2:	test   eax,eax
  4134c4:	je     413a58 <__flatcc_fb_gen_c_json_parser@@Base+0x44d8>
  4134ca:	add    eax,0xffffffff
  4134cd:	mov    DWORD PTR [rbx+0xf0],eax
  4134d3:	lea    rsi,[rip+0x2f7b5]        # 442c8f <_IO_stdin_used@@Base+0x14c8f>
  4134da:	xor    eax,eax
  4134dc:	mov    rdi,rbx
  4134df:	mov    edx,r15d
  4134e2:	mov    rcx,rbp
  4134e5:	jmp    413a11 <__flatcc_fb_gen_c_json_parser@@Base+0x4491>
  4134ea:	add    ebx,0x1
  4134ed:	mov    esi,ebx
  4134ef:	mov    DWORD PTR [rsp+0x18],0x0
  4134f7:	cmp    esi,r15d
  4134fa:	mov    QWORD PTR [rsp+0x38],rsi
  4134ff:	jge    4135a4 <__flatcc_fb_gen_c_json_parser@@Base+0x4024>
  413505:	xor    ecx,ecx
  413507:	mov    eax,0x0
  41350c:	cmp    esi,edx
  41350e:	jle    41352c <__flatcc_fb_gen_c_json_parser@@Base+0x3fac>
  413510:	movsxd rax,esi
  413513:	shl    rax,0x5
  413517:	mov    eax,DWORD PTR [r14+rax*1-0x18]
  41351c:	cmp    ebp,eax
  41351e:	setge  dl
  413521:	sub    eax,r13d
  413524:	cmp    eax,0x8
  413527:	sete   al
  41352a:	and    al,dl
  41352c:	mov    QWORD PTR [rsp+0x48],rax
  413531:	movsxd r8,esi
  413534:	shl    r8,0x5
  413538:	mov    ebp,DWORD PTR [r14+r8*1+0x8]
  41353d:	mov    esi,ebp
  41353f:	mov    edx,0x0
  413544:	mov    r12d,0x0
  41354a:	sub    esi,r13d
  41354d:	jl     41371f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  413553:	mov    rax,QWORD PTR [r14+r8*1]
  413557:	mov    rdx,QWORD PTR [rsp+0x8]
  41355c:	lea    r12,[rax+rdx*1]
  413560:	cmp    esi,0x9
  413563:	mov    ecx,0x8
  413568:	cmovl  ecx,esi
  41356b:	test   ecx,ecx
  41356d:	je     4135bf <__flatcc_fb_gen_c_json_parser@@Base+0x403f>
  41356f:	lea    edx,[rcx+0x1]
  413572:	movsxd rdi,edx
  413575:	add    rdi,0xffffffffffffffff
  413579:	not    ebp
  41357b:	add    ebp,r13d
  41357e:	cmp    ebp,0xfffffff6
  413581:	mov    edx,0xfffffff7
  413586:	cmovg  edx,ebp
  413589:	mov    esi,0xfffffffe
  41358e:	sub    esi,edx
  413590:	lea    rdx,[rsi+0x1]
  413594:	cmp    rdx,0x10
  413598:	jae    4135c8 <__flatcc_fb_gen_c_json_parser@@Base+0x4048>
  41359a:	xor    edx,edx
  41359c:	mov    rbx,rdi
  41359f:	jmp    4136dd <__flatcc_fb_gen_c_json_parser@@Base+0x415d>
  4135a4:	lea    r12,[rip+0x1bf94]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4135ab:	xor    eax,eax
  4135ad:	mov    QWORD PTR [rsp+0x10],rax
  4135b2:	mov    r14d,esi
  4135b5:	mov    rbp,QWORD PTR [rsp+0x40]
  4135ba:	jmp    4138a7 <__flatcc_fb_gen_c_json_parser@@Base+0x4327>
  4135bf:	xor    edx,edx
  4135c1:	xor    ecx,ecx
  4135c3:	jmp    41371f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  4135c8:	add    esi,0x1
  4135cb:	and    esi,0xf
  4135ce:	mov    rbx,rsi
  4135d1:	sub    rbx,rdx
  4135d4:	add    rbx,rdi
  4135d7:	vmovq  xmm1,rdi
  4135dc:	vpbroadcastq ymm1,xmm1
  4135e1:	vpaddq ymm7,ymm1,YMMWORD PTR [rip+0x2e6d7]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  4135e9:	sub    rdx,rsi
  4135ec:	vpxor  xmm9,xmm9,xmm9
  4135f1:	vpxor  xmm10,xmm10,xmm10
  4135f6:	vpxor  xmm11,xmm11,xmm11
  4135fb:	vpxor  xmm12,xmm12,xmm12
  413600:	vpaddq ymm2,ymm7,YMMWORD PTR [rip+0x2e6d8]        # 441ce0 <_IO_stdin_used@@Base+0x13ce0>
  413608:	vmovq  rdi,xmm2
  41360d:	vmovd  xmm13,DWORD PTR [r12+rdi*1-0x3]
  413614:	vmovd  xmm14,DWORD PTR [r12+rdi*1-0x7]
  41361b:	vpshufb xmm1,xmm13,xmm0
  413620:	vpmovsxbq ymm13,xmm1
  413625:	vpshufb xmm1,xmm14,xmm0
  41362a:	vpmovsxbq ymm1,xmm1
  41362f:	vpsllq ymm2,ymm2,0x3
  413634:	vpsubq ymm2,ymm15,ymm2
  413638:	vpand  ymm2,ymm2,ymm5
  41363c:	vpsllvq ymm2,ymm13,ymm2
  413641:	vpsllq ymm13,ymm7,0x3
  413646:	vpor   ymm9,ymm2,ymm9
  41364b:	vpsubq ymm2,ymm8,ymm13
  413650:	vpand  ymm2,ymm2,ymm5
  413654:	vpsllvq ymm1,ymm1,ymm2
  413659:	vmovd  xmm2,DWORD PTR [r12+rdi*1-0xb]
  413660:	vpshufb xmm2,xmm2,xmm0
  413665:	vpmovsxbq ymm2,xmm2
  41366a:	vpor   ymm10,ymm1,ymm10
  41366f:	vpsubq ymm1,ymm3,ymm13
  413674:	vpand  ymm1,ymm1,ymm5
  413678:	vpsllvq ymm1,ymm2,ymm1
  41367d:	vpor   ymm11,ymm1,ymm11
  413682:	vmovd  xmm1,DWORD PTR [r12+rdi*1-0xf]
  413689:	vpshufb xmm1,xmm1,xmm0
  41368e:	vpmovsxbq ymm1,xmm1
  413693:	vpsubq ymm2,ymm4,ymm13
  413698:	vpand  ymm2,ymm2,ymm5
  41369c:	vpsllvq ymm1,ymm1,ymm2
  4136a1:	vpor   ymm12,ymm1,ymm12
  4136a6:	vpaddq ymm7,ymm7,ymm6
  4136aa:	add    rdx,0xfffffffffffffff0
  4136ae:	jne    413600 <__flatcc_fb_gen_c_json_parser@@Base+0x4080>
  4136b4:	vpor   ymm0,ymm10,ymm9
  4136b9:	vpor   ymm0,ymm11,ymm0
  4136bd:	vpor   ymm0,ymm12,ymm0
  4136c1:	vextracti128 xmm1,ymm0,0x1
  4136c7:	vpor   ymm0,ymm0,ymm1
  4136cb:	vpshufd xmm1,xmm0,0x4e
  4136d0:	vpor   ymm0,ymm0,ymm1
  4136d4:	vmovq  rdx,xmm0
  4136d9:	test   esi,esi
  4136db:	je     41371f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  4136dd:	lea    rdi,[rbx*8+0x0]
  4136e5:	mov    ebp,0x40
  4136ea:	sub    rbp,rdi
  4136ed:	mov    rsi,QWORD PTR [rsp+0x8]
  4136f2:	add    rax,rsi
  4136f5:	add    rax,0xffffffffffffffff
  4136f9:	nop    DWORD PTR [rax+0x0]
  413700:	movsx  rdi,BYTE PTR [rax+rbx*1]
  413705:	add    rbx,0xffffffffffffffff
  413709:	mov    esi,ebp
  41370b:	and    sil,0xf8
  41370f:	shlx   rsi,rdi,rsi
  413714:	or     rdx,rsi
  413717:	add    rbp,0x8
  41371b:	test   ebx,ebx
  41371d:	jne    413700 <__flatcc_fb_gen_c_json_parser@@Base+0x4180>
  41371f:	mov    r14,r8
  413722:	mov    DWORD PTR [rsp+0x8],r9d
  413727:	lea    rsi,[rip+0x2f577]        # 442ca5 <_IO_stdin_used@@Base+0x14ca5>
  41372e:	xor    eax,eax
  413730:	mov    rbp,QWORD PTR [rsp+0x40]
  413735:	mov    rdi,rbp
  413738:	mov    rbx,rcx
  41373b:	mov    r8,r12
  41373e:	vzeroupper 
  413741:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413746:	add    DWORD PTR [rbp+0xf0],0x1
  41374d:	cmp    BYTE PTR [rsp+0x48],0x0
  413752:	mov    QWORD PTR [rsp+0x10],rbx
  413757:	je     413823 <__flatcc_fb_gen_c_json_parser@@Base+0x42a3>
  41375d:	lea    rsi,[rip+0x2f568]        # 442ccc <_IO_stdin_used@@Base+0x14ccc>
  413764:	xor    eax,eax
  413766:	mov    rdi,rbp
  413769:	mov    edx,ebx
  41376b:	mov    rcx,r12
  41376e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413773:	mov    rbx,QWORD PTR [rsp+0x20]
  413778:	mov    rax,QWORD PTR [rbx]
  41377b:	mov    rsi,QWORD PTR [rbx+0x18]
  41377f:	mov    rdx,QWORD PTR [rax+r14*1-0x10]
  413784:	mov    ecx,DWORD PTR [rax+r14*1-0x8]
  413789:	mov    r8d,0x8
  41378f:	mov    rdi,rbp
  413792:	call   QWORD PTR [rbx+0x8]
  413795:	lea    rsi,[rip+0x2f550]        # 442cec <_IO_stdin_used@@Base+0x14cec>
  41379c:	xor    eax,eax
  41379e:	mov    rdi,rbp
  4137a1:	mov    rdx,QWORD PTR [rsp+0x10]
  4137a6:	mov    rcx,r12
  4137a9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4137ae:	lea    rsi,[rip+0x2f553]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  4137b5:	xor    eax,eax
  4137b7:	mov    rdi,rbp
  4137ba:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4137bf:	lea    rsi,[rip+0x2f2a0]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  4137c6:	xor    eax,eax
  4137c8:	mov    rdi,rbp
  4137cb:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4137d0:	mov    rdi,rbp
  4137d3:	mov    rsi,rbx
  4137d6:	mov    rbx,QWORD PTR [rsp+0x38]
  4137db:	mov    edx,ebx
  4137dd:	mov    ecx,DWORD PTR [rsp+0x8]
  4137e1:	mov    r8d,DWORD PTR [rsp+0x2c]
  4137e6:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4137eb:	mov    eax,DWORD PTR [rbp+0xf0]
  4137f1:	test   eax,eax
  4137f3:	je     413ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
  4137f9:	lea    r14d,[rbx-0x1]
  4137fd:	add    eax,0xffffffff
  413800:	mov    DWORD PTR [rbp+0xf0],eax
  413806:	lea    rsi,[rip+0x2f505]        # 442d12 <_IO_stdin_used@@Base+0x14d12>
  41380d:	xor    eax,eax
  41380f:	mov    rdi,rbp
  413812:	mov    rbx,QWORD PTR [rsp+0x10]
  413817:	mov    edx,ebx
  413819:	mov    rcx,r12
  41381c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413821:	jmp    41386a <__flatcc_fb_gen_c_json_parser@@Base+0x42ea>
  413823:	lea    rsi,[rip+0x2f4de]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  41382a:	xor    eax,eax
  41382c:	mov    rdi,rbp
  41382f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413834:	lea    rsi,[rip+0x2f22b]        # 442a66 <_IO_stdin_used@@Base+0x14a66>
  41383b:	xor    eax,eax
  41383d:	mov    rdi,rbp
  413840:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413845:	mov    rdi,rbp
  413848:	mov    rsi,QWORD PTR [rsp+0x20]
  41384d:	mov    rbx,QWORD PTR [rsp+0x38]
  413852:	mov    edx,ebx
  413854:	mov    ecx,DWORD PTR [rsp+0x8]
  413858:	mov    r8d,DWORD PTR [rsp+0x2c]
  41385d:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  413862:	mov    r14d,ebx
  413865:	mov    rbx,QWORD PTR [rsp+0x10]
  41386a:	mov    eax,DWORD PTR [rbp+0xf0]
  413870:	test   eax,eax
  413872:	je     413a77 <__flatcc_fb_gen_c_json_parser@@Base+0x44f7>
  413878:	add    eax,0xffffffff
  41387b:	mov    DWORD PTR [rbp+0xf0],eax
  413881:	lea    rsi,[rip+0x2f4a7]        # 442d2f <_IO_stdin_used@@Base+0x14d2f>
  413888:	xor    eax,eax
  41388a:	mov    rdi,rbp
  41388d:	mov    edx,ebx
  41388f:	mov    rcx,r12
  413892:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413897:	add    DWORD PTR [rbp+0xf0],0x1
  41389e:	mov    ecx,DWORD PTR [rsp+0x4]
  4138a2:	mov    rdx,QWORD PTR [rsp+0x30]
  4138a7:	cmp    r14d,edx
  4138aa:	setg   al
  4138ad:	cmp    r15d,ecx
  4138b0:	setle  bl
  4138b3:	and    bl,al
  4138b5:	cmp    bl,0x1
  4138b8:	jne    4138cc <__flatcc_fb_gen_c_json_parser@@Base+0x434c>
  4138ba:	mov    rax,QWORD PTR [rsp+0x20]
  4138bf:	mov    esi,DWORD PTR [rax+0x28]
  4138c2:	add    esi,0x1
  4138c5:	mov    DWORD PTR [rsp+0x18],esi
  4138c9:	mov    DWORD PTR [rax+0x28],esi
  4138cc:	cmp    r14d,edx
  4138cf:	jle    41394f <__flatcc_fb_gen_c_json_parser@@Base+0x43cf>
  4138d1:	lea    ecx,[r14-0x1]
  4138d5:	mov    rdi,rbp
  4138d8:	mov    rsi,QWORD PTR [rsp+0x20]
  4138dd:	mov    r8d,r13d
  4138e0:	mov    r9d,DWORD PTR [rsp+0x18]
  4138e5:	vzeroupper 
  4138e8:	call   413b10 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  4138ed:	mov    rdx,QWORD PTR [rsp+0x30]
  4138f2:	mov    ecx,DWORD PTR [rsp+0x4]
  4138f6:	test   bl,bl
  4138f8:	je     41394f <__flatcc_fb_gen_c_json_parser@@Base+0x43cf>
  4138fa:	lea    rsi,[rip+0x2f44c]        # 442d4d <_IO_stdin_used@@Base+0x14d4d>
  413901:	xor    eax,eax
  413903:	mov    rdi,rbp
  413906:	mov    edx,DWORD PTR [rsp+0x18]
  41390a:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41390f:	mov    eax,DWORD PTR [rbp+0xf0]
  413915:	mov    DWORD PTR [rbp+0xf8],eax
  41391b:	mov    DWORD PTR [rbp+0xf0],0x0
  413925:	lea    rsi,[rip+0x2f437]        # 442d63 <_IO_stdin_used@@Base+0x14d63>
  41392c:	xor    eax,eax
  41392e:	mov    rdi,rbp
  413931:	mov    edx,DWORD PTR [rsp+0x18]
  413935:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41393a:	mov    rdx,QWORD PTR [rsp+0x30]
  41393f:	mov    ecx,DWORD PTR [rsp+0x4]
  413943:	mov    eax,DWORD PTR [rbp+0xf8]
  413949:	mov    DWORD PTR [rbp+0xf0],eax
  41394f:	cmp    r15d,ecx
  413952:	jle    413978 <__flatcc_fb_gen_c_json_parser@@Base+0x43f8>
  413954:	cmp    r14d,edx
  413957:	jg     41398e <__flatcc_fb_gen_c_json_parser@@Base+0x440e>
  413959:	mov    rdi,rbp
  41395c:	mov    rax,QWORD PTR [rsp+0x20]
  413961:	vzeroupper 
  413964:	call   QWORD PTR [rax+0x10]
  413967:	mov    rbx,QWORD PTR [rsp+0x10]
  41396c:	cmp    DWORD PTR [rsp+0x38],r15d
  413971:	jl     4139e9 <__flatcc_fb_gen_c_json_parser@@Base+0x4469>
  413973:	jmp    413a27 <__flatcc_fb_gen_c_json_parser@@Base+0x44a7>
  413978:	mov    rdi,rbp
  41397b:	mov    rsi,QWORD PTR [rsp+0x20]
  413980:	mov    edx,r15d
  413983:	mov    r8d,r13d
  413986:	vzeroupper 
  413989:	call   4128d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41398e:	test   bl,bl
  413990:	mov    rbx,QWORD PTR [rsp+0x10]
  413995:	je     4139e2 <__flatcc_fb_gen_c_json_parser@@Base+0x4462>
  413997:	mov    eax,DWORD PTR [rbp+0xf0]
  41399d:	mov    DWORD PTR [rbp+0xf8],eax
  4139a3:	mov    DWORD PTR [rbp+0xf0],0x0
  4139ad:	lea    rsi,[rip+0x2f3ac]        # 442d60 <_IO_stdin_used@@Base+0x14d60>
  4139b4:	xor    eax,eax
  4139b6:	mov    rdi,rbp
  4139b9:	mov    edx,DWORD PTR [rsp+0x18]
  4139bd:	vzeroupper 
  4139c0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4139c5:	mov    eax,DWORD PTR [rbp+0xf8]
  4139cb:	mov    DWORD PTR [rbp+0xf0],eax
  4139d1:	lea    rsi,[rip+0x2f396]        # 442d6e <_IO_stdin_used@@Base+0x14d6e>
  4139d8:	xor    eax,eax
  4139da:	mov    rdi,rbp
  4139dd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4139e2:	cmp    DWORD PTR [rsp+0x38],r15d
  4139e7:	jge    413a27 <__flatcc_fb_gen_c_json_parser@@Base+0x44a7>
  4139e9:	mov    eax,DWORD PTR [rbp+0xf0]
  4139ef:	test   eax,eax
  4139f1:	je     413a96 <__flatcc_fb_gen_c_json_parser@@Base+0x4516>
  4139f7:	add    eax,0xffffffff
  4139fa:	mov    DWORD PTR [rbp+0xf0],eax
  413a00:	lea    rsi,[rip+0x2f370]        # 442d77 <_IO_stdin_used@@Base+0x14d77>
  413a07:	xor    eax,eax
  413a09:	mov    rdi,rbp
  413a0c:	mov    edx,ebx
  413a0e:	mov    rcx,r12
  413a11:	add    rsp,0x58
  413a15:	pop    rbx
  413a16:	pop    r12
  413a18:	pop    r13
  413a1a:	pop    r14
  413a1c:	pop    r15
  413a1e:	pop    rbp
  413a1f:	vzeroupper 
  413a22:	jmp    411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413a27:	add    rsp,0x58
  413a2b:	pop    rbx
  413a2c:	pop    r12
  413a2e:	pop    r13
  413a30:	pop    r14
  413a32:	pop    r15
  413a34:	pop    rbp
  413a35:	vzeroupper 
  413a38:	ret    
  413a39:	lea    rdi,[rip+0x2e631]        # 442071 <_IO_stdin_used@@Base+0x14071>
  413a40:	lea    rsi,[rip+0x2e636]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  413a47:	lea    rcx,[rip+0x2f1ee]        # 442c3c <_IO_stdin_used@@Base+0x14c3c>
  413a4e:	mov    edx,0x3cd
  413a53:	call   4060f0 <__assert_fail@plt>
  413a58:	lea    rdi,[rip+0x2e612]        # 442071 <_IO_stdin_used@@Base+0x14071>
  413a5f:	lea    rsi,[rip+0x2e617]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  413a66:	lea    rcx,[rip+0x2f1cf]        # 442c3c <_IO_stdin_used@@Base+0x14c3c>
  413a6d:	mov    edx,0x3cf
  413a72:	call   4060f0 <__assert_fail@plt>
  413a77:	lea    rdi,[rip+0x2e5f3]        # 442071 <_IO_stdin_used@@Base+0x14071>
  413a7e:	lea    rsi,[rip+0x2e5f8]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  413a85:	lea    rcx,[rip+0x2f1b0]        # 442c3c <_IO_stdin_used@@Base+0x14c3c>
  413a8c:	mov    edx,0x414
  413a91:	call   4060f0 <__assert_fail@plt>
  413a96:	lea    rdi,[rip+0x2e5d4]        # 442071 <_IO_stdin_used@@Base+0x14071>
  413a9d:	lea    rsi,[rip+0x2e5d9]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  413aa4:	lea    rcx,[rip+0x2f191]        # 442c3c <_IO_stdin_used@@Base+0x14c3c>
  413aab:	mov    edx,0x430
  413ab0:	vzeroupper 
  413ab3:	call   4060f0 <__assert_fail@plt>
  413ab8:	lea    rdi,[rip+0x2e5b2]        # 442071 <_IO_stdin_used@@Base+0x14071>
  413abf:	lea    rsi,[rip+0x2e5b7]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  413ac6:	lea    rcx,[rip+0x2f16f]        # 442c3c <_IO_stdin_used@@Base+0x14c3c>
  413acd:	mov    edx,0x410
  413ad2:	call   4060f0 <__assert_fail@plt>
  413ad7:	nop    WORD PTR [rax+rax*1+0x0]
  413ae0:	push   rbx
  413ae1:	mov    eax,DWORD PTR [rdi+0x8]
  413ae4:	mov    ecx,DWORD PTR [rsi+0x8]
  413ae7:	mov    ebx,eax
  413ae9:	sub    ebx,ecx
  413aeb:	cmovg  eax,ecx
  413aee:	mov    rdi,QWORD PTR [rdi]
  413af1:	mov    rsi,QWORD PTR [rsi]
  413af4:	movsxd rdx,eax
  413af7:	call   406130 <memcmp@plt>
  413afc:	test   eax,eax
  413afe:	cmove  eax,ebx
  413b01:	pop    rbx
  413b02:	ret    
  413b03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b0d:	nop    DWORD PTR [rax]
  413b10:	push   rbp
  413b11:	push   r15
  413b13:	push   r14
  413b15:	push   r13
  413b17:	push   r12
  413b19:	push   rbx
  413b1a:	sub    rsp,0x28
  413b1e:	mov    DWORD PTR [rsp],r9d
  413b22:	mov    r13d,ecx
  413b25:	mov    r14,rdi
  413b28:	sub    ecx,edx
  413b2a:	lea    eax,[rcx+0x1]
  413b2d:	shr    eax,0x1f
  413b30:	mov    QWORD PTR [rsp+0x20],rcx
  413b35:	lea    eax,[rcx+rax*1]
  413b38:	add    eax,0x1
  413b3b:	sar    eax,1
  413b3d:	mov    DWORD PTR [rsp+0x1c],edx
  413b41:	add    eax,edx
  413b43:	mov    QWORD PTR [rsp+0x10],rsi
  413b48:	mov    rcx,QWORD PTR [rsi]
  413b4b:	mov    DWORD PTR [rsp+0xc],eax
  413b4f:	movsxd r15,eax
  413b52:	shl    r15,0x5
  413b56:	mov    edi,DWORD PTR [rcx+r15*1+0x8]
  413b5b:	xor    r12d,r12d
  413b5e:	mov    r10d,edi
  413b61:	mov    ebx,0x0
  413b66:	mov    ebp,0x0
  413b6b:	mov    edx,0x0
  413b70:	sub    r10d,r8d
  413b73:	mov    DWORD PTR [rsp+0x8],r8d
  413b78:	jl     413dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x4848>
  413b7e:	mov    rax,QWORD PTR [rcx+r15*1]
  413b82:	movsxd r9,r8d
  413b85:	lea    r12,[rax+r9*1]
  413b89:	cmp    r10d,0x9
  413b8d:	mov    ecx,0x8
  413b92:	cmovl  ecx,r10d
  413b96:	test   ecx,ecx
  413b98:	je     413bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x4654>
  413b9a:	lea    edx,[rcx+0x1]
  413b9d:	movsxd rsi,edx
  413ba0:	add    rsi,0xffffffffffffffff
  413ba4:	not    edi
  413ba6:	add    edi,r8d
  413ba9:	cmp    edi,0xfffffff6
  413bac:	mov    ebp,0xfffffff7
  413bb1:	cmovg  ebp,edi
  413bb4:	mov    edx,0xfffffffe
  413bb9:	sub    edx,ebp
  413bbb:	lea    rbp,[rdx+0x1]
  413bbf:	cmp    rbp,0x10
  413bc3:	mov    DWORD PTR [rsp+0x4],r13d
  413bc8:	jae    413bdd <__flatcc_fb_gen_c_json_parser@@Base+0x465d>
  413bca:	xor    ebp,ebp
  413bcc:	mov    rdi,rsi
  413bcf:	jmp    413d3f <__flatcc_fb_gen_c_json_parser@@Base+0x47bf>
  413bd4:	xor    ebx,ebx
  413bd6:	xor    ebp,ebp
  413bd8:	jmp    413dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x4848>
  413bdd:	add    edx,0x1
  413be0:	and    edx,0xf
  413be3:	mov    rdi,rdx
  413be6:	sub    rdi,rbp
  413be9:	add    rdi,rsi
  413bec:	vmovq  xmm0,rsi
  413bf1:	vpbroadcastq ymm0,xmm0
  413bf6:	vpaddq ymm0,ymm0,YMMWORD PTR [rip+0x2e0c2]        # 441cc0 <_IO_stdin_used@@Base+0x13cc0>
  413bfe:	sub    rbp,rdx
  413c01:	vpxor  xmm1,xmm1,xmm1
  413c05:	vpcmpeqd ymm14,ymm14,ymm14
  413c0a:	vmovdqa xmm3,XMMWORD PTR [rip+0x2e1ae]        # 441dc0 <_IO_stdin_used@@Base+0x13dc0>
  413c12:	vpbroadcastq ymm15,QWORD PTR [rip+0x2e0fd]        # 441d18 <_IO_stdin_used@@Base+0x13d18>
  413c1b:	vpbroadcastq ymm5,QWORD PTR [rip+0x2e0fc]        # 441d20 <_IO_stdin_used@@Base+0x13d20>
  413c24:	vpbroadcastq ymm6,QWORD PTR [rip+0x2e0fb]        # 441d28 <_IO_stdin_used@@Base+0x13d28>
  413c2d:	vpbroadcastq ymm7,QWORD PTR [rip+0x2e0fa]        # 441d30 <_IO_stdin_used@@Base+0x13d30>
  413c36:	vpbroadcastq ymm8,QWORD PTR [rip+0x2e0f9]        # 441d38 <_IO_stdin_used@@Base+0x13d38>
  413c3f:	vpbroadcastq ymm9,QWORD PTR [rip+0x2e0f8]        # 441d40 <_IO_stdin_used@@Base+0x13d40>
  413c48:	vpxor  xmm10,xmm10,xmm10
  413c4d:	vpxor  xmm11,xmm11,xmm11
  413c52:	vpxor  xmm12,xmm12,xmm12
  413c57:	nop    WORD PTR [rax+rax*1+0x0]
  413c60:	vpaddq ymm13,ymm0,ymm14
  413c65:	vmovq  rsi,xmm13
  413c6a:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0x3]
  413c71:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0x7]
  413c78:	vpshufb xmm2,xmm2,xmm3
  413c7d:	vpmovsxbq ymm2,xmm2
  413c82:	vpshufb xmm4,xmm4,xmm3
  413c87:	vpmovsxbq ymm4,xmm4
  413c8c:	vpsllq ymm13,ymm13,0x3
  413c92:	vpsubq ymm13,ymm15,ymm13
  413c97:	vpand  ymm13,ymm13,ymm8
  413c9c:	vpsllvq ymm2,ymm2,ymm13
  413ca1:	vpsllq ymm13,ymm0,0x3
  413ca6:	vpor   ymm1,ymm2,ymm1
  413caa:	vpsubq ymm2,ymm5,ymm13
  413caf:	vpand  ymm2,ymm2,ymm8
  413cb4:	vpsllvq ymm2,ymm4,ymm2
  413cb9:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0xb]
  413cc0:	vpshufb xmm4,xmm4,xmm3
  413cc5:	vpmovsxbq ymm4,xmm4
  413cca:	vpor   ymm10,ymm2,ymm10
  413ccf:	vpsubq ymm2,ymm6,ymm13
  413cd4:	vpand  ymm2,ymm2,ymm8
  413cd9:	vpsllvq ymm2,ymm4,ymm2
  413cde:	vpor   ymm11,ymm2,ymm11
  413ce3:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0xf]
  413cea:	vpshufb xmm2,xmm2,xmm3
  413cef:	vpmovsxbq ymm2,xmm2
  413cf4:	vpsubq ymm4,ymm7,ymm13
  413cf9:	vpand  ymm4,ymm4,ymm8
  413cfe:	vpsllvq ymm2,ymm2,ymm4
  413d03:	vpor   ymm12,ymm2,ymm12
  413d08:	vpaddq ymm0,ymm0,ymm9
  413d0d:	add    rbp,0xfffffffffffffff0
  413d11:	jne    413c60 <__flatcc_fb_gen_c_json_parser@@Base+0x46e0>
  413d17:	vpor   ymm0,ymm10,ymm1
  413d1b:	vpor   ymm0,ymm11,ymm0
  413d1f:	vpor   ymm0,ymm12,ymm0
  413d23:	vextracti128 xmm1,ymm0,0x1
  413d29:	vpor   ymm0,ymm0,ymm1
  413d2d:	vpshufd xmm1,xmm0,0x4e
  413d32:	vpor   ymm0,ymm0,ymm1
  413d36:	vmovq  rbp,xmm0
  413d3b:	test   edx,edx
  413d3d:	je     413d7e <__flatcc_fb_gen_c_json_parser@@Base+0x47fe>
  413d3f:	lea    rsi,[rdi*8+0x0]
  413d47:	mov    ebx,0x40
  413d4c:	sub    rbx,rsi
  413d4f:	lea    rsi,[rax+r9*1]
  413d53:	add    rsi,0xffffffffffffffff
  413d57:	nop    WORD PTR [rax+rax*1+0x0]
  413d60:	movsx  rax,BYTE PTR [rsi+rdi*1]
  413d65:	add    rdi,0xffffffffffffffff
  413d69:	mov    edx,ebx
  413d6b:	and    dl,0xf8
  413d6e:	shlx   rax,rax,rdx
  413d73:	or     rbp,rax
  413d76:	add    rbx,0x8
  413d7a:	test   edi,edi
  413d7c:	jne    413d60 <__flatcc_fb_gen_c_json_parser@@Base+0x47e0>
  413d7e:	cmp    r10d,0x8
  413d82:	jl     413daa <__flatcc_fb_gen_c_json_parser@@Base+0x482a>
  413d84:	lea    rsi,[rip+0x2f003]        # 442d8e <_IO_stdin_used@@Base+0x14d8e>
  413d8b:	xor    eax,eax
  413d8d:	mov    rdi,r14
  413d90:	mov    rdx,rbp
  413d93:	mov    r8,r12
  413d96:	vzeroupper 
  413d99:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413d9e:	mov    ebp,0x8
  413da3:	mov    r13d,DWORD PTR [rsp+0x4]
  413da8:	jmp    413de8 <__flatcc_fb_gen_c_json_parser@@Base+0x4868>
  413daa:	shl    ecx,0x3
  413dad:	mov    eax,0x40
  413db2:	sub    eax,ecx
  413db4:	mov    rcx,0xffffffffffffffff
  413dbb:	shlx   rdx,rcx,rax
  413dc0:	mov    ebx,r10d
  413dc3:	mov    r13d,DWORD PTR [rsp+0x4]
  413dc8:	lea    rsi,[rip+0x2efde]        # 442dad <_IO_stdin_used@@Base+0x14dad>
  413dcf:	xor    eax,eax
  413dd1:	mov    rdi,r14
  413dd4:	mov    rcx,rbp
  413dd7:	mov    rbp,rbx
  413dda:	mov    r8d,ebx
  413ddd:	mov    r9,r12
  413de0:	vzeroupper 
  413de3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413de8:	add    DWORD PTR [r14+0xf0],0x1
  413df0:	mov    rax,QWORD PTR [rsp+0x20]
  413df5:	add    eax,0x2
  413df8:	cmp    eax,0x2
  413dfb:	ja     413e3f <__flatcc_fb_gen_c_json_parser@@Base+0x48bf>
  413dfd:	mov    rbx,QWORD PTR [rsp+0x10]
  413e02:	mov    rax,QWORD PTR [rbx]
  413e05:	mov    rsi,QWORD PTR [rbx+0x18]
  413e09:	mov    rdx,QWORD PTR [rax+r15*1+0x10]
  413e0e:	mov    ecx,DWORD PTR [rax+r15*1+0x18]
  413e13:	mov    rdi,r14
  413e16:	mov    r15,rbp
  413e19:	mov    r8d,r15d
  413e1c:	call   QWORD PTR [rbx+0x8]
  413e1f:	mov    ebp,DWORD PTR [rsp]
  413e22:	test   ebp,ebp
  413e24:	jle    413eb5 <__flatcc_fb_gen_c_json_parser@@Base+0x4935>
  413e2a:	lea    rsi,[rip+0x2efa5]        # 442dd6 <_IO_stdin_used@@Base+0x14dd6>
  413e31:	xor    eax,eax
  413e33:	mov    rdi,r14
  413e36:	mov    edx,ebp
  413e38:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413e3d:	jmp    413ebb <__flatcc_fb_gen_c_json_parser@@Base+0x493b>
  413e3f:	mov    edx,DWORD PTR [rsp+0xc]
  413e43:	cmp    edx,r13d
  413e46:	mov    ecx,r13d
  413e49:	mov    rbx,QWORD PTR [rsp+0x10]
  413e4e:	mov    r13d,DWORD PTR [rsp]
  413e52:	jne    413e93 <__flatcc_fb_gen_c_json_parser@@Base+0x4913>
  413e54:	mov    rax,QWORD PTR [rbx]
  413e57:	mov    rsi,QWORD PTR [rbx+0x18]
  413e5b:	mov    rdx,QWORD PTR [rax+r15*1+0x10]
  413e60:	mov    ecx,DWORD PTR [rax+r15*1+0x18]
  413e65:	mov    rdi,r14
  413e68:	mov    r15,rbp
  413e6b:	mov    r8d,r15d
  413e6e:	call   QWORD PTR [rbx+0x8]
  413e71:	test   r13d,r13d
  413e74:	jle    413f4b <__flatcc_fb_gen_c_json_parser@@Base+0x49cb>
  413e7a:	lea    rsi,[rip+0x2ef55]        # 442dd6 <_IO_stdin_used@@Base+0x14dd6>
  413e81:	xor    eax,eax
  413e83:	mov    rdi,r14
  413e86:	mov    edx,r13d
  413e89:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413e8e:	jmp    413f51 <__flatcc_fb_gen_c_json_parser@@Base+0x49d1>
  413e93:	mov    rdi,r14
  413e96:	mov    rsi,rbx
  413e99:	mov    r8d,DWORD PTR [rsp+0x8]
  413e9e:	mov    r9d,r13d
  413ea1:	call   413b10 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  413ea6:	lea    r13,[r14+0xf0]
  413ead:	mov    r15,rbp
  413eb0:	jmp    413f82 <__flatcc_fb_gen_c_json_parser@@Base+0x4a02>
  413eb5:	mov    rdi,r14
  413eb8:	call   QWORD PTR [rbx+0x10]
  413ebb:	mov    eax,DWORD PTR [r14+0xf0]
  413ec2:	test   eax,eax
  413ec4:	je     41402e <__flatcc_fb_gen_c_json_parser@@Base+0x4aae>
  413eca:	add    eax,0xffffffff
  413ecd:	mov    DWORD PTR [r14+0xf0],eax
  413ed4:	lea    rsi,[rip+0x1d9dd]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  413edb:	xor    eax,eax
  413edd:	mov    rdi,r14
  413ee0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413ee5:	mov    eax,DWORD PTR [r14+0xf0]
  413eec:	test   eax,eax
  413eee:	je     41404d <__flatcc_fb_gen_c_json_parser@@Base+0x4acd>
  413ef4:	lea    r13,[r14+0xf0]
  413efb:	add    eax,0xffffffff
  413efe:	mov    DWORD PTR [r14+0xf0],eax
  413f05:	lea    rsi,[rip+0x2ef1c]        # 442e28 <_IO_stdin_used@@Base+0x14e28>
  413f0c:	xor    eax,eax
  413f0e:	mov    rdi,r14
  413f11:	mov    edx,r15d
  413f14:	mov    rcx,r12
  413f17:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413f1c:	add    DWORD PTR [r14+0xf0],0x1
  413f24:	test   ebp,ebp
  413f26:	jle    413f40 <__flatcc_fb_gen_c_json_parser@@Base+0x49c0>
  413f28:	lea    rsi,[rip+0x2eea7]        # 442dd6 <_IO_stdin_used@@Base+0x14dd6>
  413f2f:	xor    eax,eax
  413f31:	mov    rdi,r14
  413f34:	mov    edx,ebp
  413f36:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413f3b:	jmp    413fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x4a58>
  413f40:	mov    rdi,r14
  413f43:	call   QWORD PTR [rbx+0x10]
  413f46:	jmp    413fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x4a58>
  413f4b:	mov    rdi,r14
  413f4e:	call   QWORD PTR [rbx+0x10]
  413f51:	mov    eax,DWORD PTR [r14+0xf0]
  413f58:	test   eax,eax
  413f5a:	je     41408b <__flatcc_fb_gen_c_json_parser@@Base+0x4b0b>
  413f60:	lea    r13,[r14+0xf0]
  413f67:	add    eax,0xffffffff
  413f6a:	mov    DWORD PTR [r14+0xf0],eax
  413f71:	lea    rsi,[rip+0x1d940]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  413f78:	xor    eax,eax
  413f7a:	mov    rdi,r14
  413f7d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413f82:	mov    eax,DWORD PTR [r13+0x0]
  413f86:	test   eax,eax
  413f88:	je     41406c <__flatcc_fb_gen_c_json_parser@@Base+0x4aec>
  413f8e:	add    eax,0xffffffff
  413f91:	mov    DWORD PTR [r14+0xf0],eax
  413f98:	lea    rsi,[rip+0x2ee89]        # 442e28 <_IO_stdin_used@@Base+0x14e28>
  413f9f:	xor    eax,eax
  413fa1:	mov    rdi,r14
  413fa4:	mov    edx,r15d
  413fa7:	mov    rcx,r12
  413faa:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413faf:	add    DWORD PTR [r14+0xf0],0x1
  413fb7:	mov    ecx,DWORD PTR [rsp+0xc]
  413fbb:	add    ecx,0xffffffff
  413fbe:	mov    rdi,r14
  413fc1:	mov    rsi,QWORD PTR [rsp+0x10]
  413fc6:	mov    edx,DWORD PTR [rsp+0x1c]
  413fca:	mov    r8d,DWORD PTR [rsp+0x8]
  413fcf:	mov    r9d,DWORD PTR [rsp]
  413fd3:	call   413b10 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  413fd8:	mov    eax,DWORD PTR [r13+0x0]
  413fdc:	test   eax,eax
  413fde:	je     41400f <__flatcc_fb_gen_c_json_parser@@Base+0x4a8f>
  413fe0:	add    eax,0xffffffff
  413fe3:	mov    DWORD PTR [r14+0xf0],eax
  413fea:	lea    rsi,[rip+0x2ee4d]        # 442e3e <_IO_stdin_used@@Base+0x14e3e>
  413ff1:	xor    eax,eax
  413ff3:	mov    rdi,r14
  413ff6:	mov    edx,r15d
  413ff9:	mov    rcx,r12
  413ffc:	add    rsp,0x28
  414000:	pop    rbx
  414001:	pop    r12
  414003:	pop    r13
  414005:	pop    r14
  414007:	pop    r15
  414009:	pop    rbp
  41400a:	jmp    411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41400f:	lea    rdi,[rip+0x2e05b]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414016:	lea    rsi,[rip+0x2e060]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41401d:	lea    rcx,[rip+0x2edc2]        # 442de6 <_IO_stdin_used@@Base+0x14de6>
  414024:	mov    edx,0x38e
  414029:	call   4060f0 <__assert_fail@plt>
  41402e:	lea    rdi,[rip+0x2e03c]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414035:	lea    rsi,[rip+0x2e041]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41403c:	lea    rcx,[rip+0x2eda3]        # 442de6 <_IO_stdin_used@@Base+0x14de6>
  414043:	mov    edx,0x378
  414048:	call   4060f0 <__assert_fail@plt>
  41404d:	lea    rdi,[rip+0x2e01d]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414054:	lea    rsi,[rip+0x2e022]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41405b:	lea    rcx,[rip+0x2ed84]        # 442de6 <_IO_stdin_used@@Base+0x14de6>
  414062:	mov    edx,0x379
  414067:	call   4060f0 <__assert_fail@plt>
  41406c:	lea    rdi,[rip+0x2dffe]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414073:	lea    rsi,[rip+0x2e003]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  41407a:	lea    rcx,[rip+0x2ed65]        # 442de6 <_IO_stdin_used@@Base+0x14de6>
  414081:	mov    edx,0x38b
  414086:	call   4060f0 <__assert_fail@plt>
  41408b:	lea    rdi,[rip+0x2dfdf]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414092:	lea    rsi,[rip+0x2dfe4]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414099:	lea    rcx,[rip+0x2ed46]        # 442de6 <_IO_stdin_used@@Base+0x14de6>
  4140a0:	mov    edx,0x387
  4140a5:	call   4060f0 <__assert_fail@plt>
  4140aa:	nop    WORD PTR [rax+rax*1+0x0]
  4140b0:	push   rbp
  4140b1:	mov    rbp,rsp
  4140b4:	push   r15
  4140b6:	push   r14
  4140b8:	push   r13
  4140ba:	push   r12
  4140bc:	push   rbx
  4140bd:	and    rsp,0xffffffffffffffe0
  4140c1:	sub    rsp,0x240
  4140c8:	mov    DWORD PTR [rsp+0x24],ecx
  4140cc:	mov    r13,rdx
  4140cf:	mov    r15,rsi
  4140d2:	mov    r12,rdi
  4140d5:	lea    rsi,[rip+0x2ef76]        # 443052 <_IO_stdin_used@@Base+0x15052>
  4140dc:	xor    ebx,ebx
  4140de:	xor    eax,eax
  4140e0:	mov    edx,r8d
  4140e3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4140e8:	lea    rsi,[rip+0x2efa6]        # 443095 <_IO_stdin_used@@Base+0x15095>
  4140ef:	xor    eax,eax
  4140f1:	mov    rdi,r12
  4140f4:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4140f9:	add    DWORD PTR [r12+0xf0],0x1
  414102:	vxorps xmm0,xmm0,xmm0
  414106:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  41410f:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  414118:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  414121:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41412a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  414133:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41413c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  414142:	mov    QWORD PTR [rsp+0x140],0x0
  41414e:	mov    rdi,QWORD PTR [r15+0x18]
  414152:	lea    rsi,[rsp+0x150]
  41415a:	vzeroupper 
  41415d:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  414162:	movzx  eax,WORD PTR [r15+0x10]
  414167:	mov    WORD PTR [rsp+0x3a],ax
  41416c:	movzx  eax,WORD PTR [r13+0x28]
  414171:	mov    r15d,0x0
  414177:	cmp    eax,0xf
  41417a:	ja     414192 <__flatcc_fb_gen_c_json_parser@@Base+0x4c12>
  41417c:	mov    ecx,0x8280
  414181:	bt     ecx,eax
  414184:	mov    r15d,0x0
  41418a:	jae    414192 <__flatcc_fb_gen_c_json_parser@@Base+0x4c12>
  41418c:	mov    r15d,0x1
  414192:	lea    eax,[rax-0x7]
  414195:	movzx  ecx,ax
  414198:	cmp    ecx,0x8
  41419b:	ja     414d20 <__flatcc_fb_gen_c_json_parser@@Base+0x57a0>
  4141a1:	movzx  eax,ax
  4141a4:	lea    rcx,[rip+0x2dbc5]        # 441d70 <_IO_stdin_used@@Base+0x13d70>
  4141ab:	movsxd rsi,DWORD PTR [rcx+rax*4]
  4141af:	add    rsi,rcx
  4141b2:	xor    edx,edx
  4141b4:	xor    ecx,ecx
  4141b6:	xor    r8d,r8d
  4141b9:	mov    DWORD PTR [rsp+0xc],0x0
  4141c1:	mov    DWORD PTR [rsp+0x1c],0x0
  4141c9:	xor    r9d,r9d
  4141cc:	mov    DWORD PTR [rsp+0x8],0x0
  4141d4:	mov    DWORD PTR [rsp+0x10],0x0
  4141dc:	mov    DWORD PTR [rsp+0x18],0x0
  4141e4:	xor    edi,edi
  4141e6:	xor    r14d,r14d
  4141e9:	xor    eax,eax
  4141eb:	mov    QWORD PTR [rsp+0x28],rax
  4141f0:	jmp    rsi
  4141f2:	mov    DWORD PTR [rsp+0xc],0x1
  4141fa:	mov    DWORD PTR [rsp+0x1c],0x0
  414202:	xor    r9d,r9d
  414205:	mov    DWORD PTR [rsp+0x8],0x0
  41420d:	mov    DWORD PTR [rsp+0x10],0x0
  414215:	mov    DWORD PTR [rsp+0x18],0x0
  41421d:	xor    edi,edi
  41421f:	xor    r14d,r14d
  414222:	xor    eax,eax
  414224:	mov    QWORD PTR [rsp+0x28],rax
  414229:	jmp    414329 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  41422e:	mov    rsi,QWORD PTR [r13+0x18]
  414232:	mov    rdi,QWORD PTR [rsi+0x18]
  414236:	lea    rdx,[rsp+0x60]
  41423b:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  414240:	mov    rax,QWORD PTR [r13+0x18]
  414244:	movzx  ecx,WORD PTR [rax+0x10]
  414248:	xor    edx,edx
  41424a:	cmp    ecx,0x1
  41424d:	sete   dl
  414250:	mov    DWORD PTR [rsp+0x10],edx
  414254:	xor    edx,edx
  414256:	test   cx,cx
  414259:	sete   dl
  41425c:	mov    DWORD PTR [rsp+0x8],edx
  414260:	cmp    ecx,0x4
  414263:	sete   dl
  414266:	cmp    DWORD PTR [rsp+0x24],0x0
  41426b:	sete   bl
  41426e:	and    bl,dl
  414270:	movzx  edx,bl
  414273:	mov    DWORD PTR [rsp+0x18],edx
  414277:	cmp    ecx,0x3
  41427a:	jne    4142a6 <__flatcc_fb_gen_c_json_parser@@Base+0x4d26>
  41427c:	mov    eax,DWORD PTR [rax+0x48]
  41427f:	mov    QWORD PTR [rsp+0x28],rax
  414284:	mov    DWORD PTR [rsp+0x1c],0x1
  41428c:	mov    DWORD PTR [rsp+0xc],0x0
  414294:	mov    r9d,0x1
  41429a:	xor    edi,edi
  41429c:	xor    r14d,r14d
  41429f:	xor    ebx,ebx
  4142a1:	jmp    414329 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  4142a6:	mov    DWORD PTR [rsp+0xc],0x0
  4142ae:	mov    DWORD PTR [rsp+0x1c],0x0
  4142b6:	xor    r9d,r9d
  4142b9:	xor    edi,edi
  4142bb:	xor    r14d,r14d
  4142be:	xor    eax,eax
  4142c0:	mov    QWORD PTR [rsp+0x28],rax
  4142c5:	xor    ebx,ebx
  4142c7:	jmp    414329 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  4142c9:	xor    r8d,r8d
  4142cc:	cmp    QWORD PTR [r13+0x90],0x0
  4142d4:	setne  r8b
  4142d8:	movzx  ecx,WORD PTR [r13+0x70]
  4142dd:	mov    edx,ecx
  4142df:	and    edx,0x400
  4142e5:	and    ecx,0x800
  4142eb:	mov    esi,DWORD PTR [r13+0x18]
  4142ef:	mov    QWORD PTR [rsp+0x28],rsi
  4142f4:	mov    r9d,0x1
  4142fa:	mov    DWORD PTR [rsp+0xc],0x0
  414302:	mov    DWORD PTR [rsp+0x1c],0x0
  41430a:	mov    DWORD PTR [rsp+0x8],0x0
  414312:	mov    DWORD PTR [rsp+0x10],0x0
  41431a:	mov    DWORD PTR [rsp+0x18],0x0
  414322:	mov    ebx,edx
  414324:	mov    edi,ecx
  414326:	mov    r14d,r8d
  414329:	or     edi,ebx
  41432b:	mov    DWORD PTR [rsp+0x34],edi
  41432f:	je     414393 <__flatcc_fb_gen_c_json_parser@@Base+0x4e13>
  414331:	test   r15d,r15d
  414334:	je     41434a <__flatcc_fb_gen_c_json_parser@@Base+0x4dca>
  414336:	xor    edx,edx
  414338:	mov    esi,0x0
  41433d:	mov    r14d,0x0
  414343:	cmp    DWORD PTR [rsp+0x28],0x4
  414348:	je     414399 <__flatcc_fb_gen_c_json_parser@@Base+0x4e19>
  41434a:	mov    rax,QWORD PTR [rip+0x3cca7]        # 450ff8 <stderr@GLIBC_2.2.5>
  414351:	mov    rdi,QWORD PTR [rax]
  414354:	lea    rsi,[rip+0x1b0c9]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41435b:	lea    rbx,[rip+0x2dd1b]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414362:	lea    r8,[rip+0x2ed8f]        # 4430f8 <_IO_stdin_used@@Base+0x150f8>
  414369:	mov    ecx,0x1d2
  41436e:	xor    eax,eax
  414370:	mov    rdx,rbx
  414373:	call   406170 <fprintf@plt>
  414378:	lea    rdi,[rip+0x2c00c]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  41437f:	lea    rcx,[rip+0x2edad]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414386:	mov    edx,0x1d2
  41438b:	mov    rsi,rbx
  41438e:	call   4060f0 <__assert_fail@plt>
  414393:	mov    edx,r15d
  414396:	mov    esi,r9d
  414399:	xor    edi,edi
  41439b:	cmp    DWORD PTR [rsp+0x24],0x0
  4143a0:	setne  cl
  4143a3:	cmovne esi,edi
  4143a6:	mov    DWORD PTR [rsp+0x3c],esi
  4143aa:	test   edx,edx
  4143ac:	setne  al
  4143af:	and    al,cl
  4143b1:	mov    BYTE PTR [rsp+0x16],al
  4143b5:	cmovne edx,edi
  4143b8:	test   edx,edx
  4143ba:	setne  cl
  4143bd:	cmp    DWORD PTR [rsp+0x18],0x0
  4143c2:	setne  al
  4143c5:	and    al,cl
  4143c7:	mov    BYTE PTR [rsp+0x17],al
  4143cb:	cmovne edx,edi
  4143ce:	mov    DWORD PTR [rsp+0x20],edx
  4143d2:	test   r14d,r14d
  4143d5:	je     4143f1 <__flatcc_fb_gen_c_json_parser@@Base+0x4e71>
  4143d7:	lea    rsi,[rip+0x2eda3]        # 443181 <_IO_stdin_used@@Base+0x15181>
  4143de:	xor    eax,eax
  4143e0:	mov    rdi,r12
  4143e3:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4143e8:	add    DWORD PTR [r12+0xf0],0x1
  4143f1:	cmp    DWORD PTR [rsp+0x24],0x0
  4143f6:	sete   BYTE PTR [rsp+0x7]
  4143fb:	xor    eax,eax
  4143fd:	test   ebx,ebx
  4143ff:	sete   al
  414402:	mov    DWORD PTR [rsp+0x58],eax
  414406:	lea    rax,[rip+0x2ece7]        # 4430f4 <_IO_stdin_used@@Base+0x150f4>
  41440d:	mov    QWORD PTR [rsp+0x40],rax
  414412:	mov    QWORD PTR [rsp+0x50],rax
  414417:	mov    QWORD PTR [rsp+0x48],r13
  41441c:	jmp    4145a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5020>
  414421:	cmp    DWORD PTR [rsp+0x8],0x0
  414426:	je     414439 <__flatcc_fb_gen_c_json_parser@@Base+0x4eb9>
  414428:	xor    eax,eax
  41442a:	mov    rdi,r12
  41442d:	lea    rsi,[rip+0x2f2f9]        # 44372d <_IO_stdin_used@@Base+0x1572d>
  414434:	jmp    414abc <__flatcc_fb_gen_c_json_parser@@Base+0x553c>
  414439:	cmp    DWORD PTR [rsp+0x18],0x0
  41443e:	je     41446a <__flatcc_fb_gen_c_json_parser@@Base+0x4eea>
  414440:	mov    rcx,QWORD PTR [r13+0x88]
  414447:	mov    rdx,QWORD PTR [r13+0xa0]
  41444e:	cmp    BYTE PTR [rsp+0x17],0x0
  414453:	je     414558 <__flatcc_fb_gen_c_json_parser@@Base+0x4fd8>
  414459:	xor    eax,eax
  41445b:	mov    rdi,r12
  41445e:	lea    rsi,[rip+0x2f2f8]        # 44375d <_IO_stdin_used@@Base+0x1575d>
  414465:	jmp    414581 <__flatcc_fb_gen_c_json_parser@@Base+0x5001>
  41446a:	cmp    DWORD PTR [rsp+0x24],0x0
  41446f:	je     414566 <__flatcc_fb_gen_c_json_parser@@Base+0x4fe6>
  414475:	xor    eax,eax
  414477:	mov    rdi,r12
  41447a:	lea    rsi,[rip+0x2ee63]        # 4432e4 <_IO_stdin_used@@Base+0x152e4>
  414481:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414486:	add    DWORD PTR [r12+0xf0],0x2
  41448f:	xor    eax,eax
  414491:	mov    rdi,r12
  414494:	lea    rsi,[rip+0x2ee8d]        # 443328 <_IO_stdin_used@@Base+0x15328>
  41449b:	lea    rdx,[rsp+0x60]
  4144a0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4144a5:	mov    rax,QWORD PTR [r12+0xd8]
  4144ad:	mov    rdx,QWORD PTR [rax+0x110]
  4144b4:	xor    eax,eax
  4144b6:	mov    rdi,r12
  4144b9:	lea    rsi,[rip+0x2ee7c]        # 44333c <_IO_stdin_used@@Base+0x1533c>
  4144c0:	lea    rcx,[rsp+0x150]
  4144c8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4144cd:	mov    rax,QWORD PTR [r12+0xd8]
  4144d5:	mov    rdx,QWORD PTR [rax+0x110]
  4144dc:	xor    eax,eax
  4144de:	mov    rdi,r12
  4144e1:	lea    rsi,[rip+0x2ee71]        # 443359 <_IO_stdin_used@@Base+0x15359>
  4144e8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4144ed:	mov    eax,DWORD PTR [r12+0xf0]
  4144f5:	test   eax,eax
  4144f7:	je     414e5a <__flatcc_fb_gen_c_json_parser@@Base+0x58da>
  4144fd:	mov    ecx,eax
  4144ff:	add    ecx,0xffffffff
  414502:	mov    DWORD PTR [r12+0xf0],ecx
  41450a:	je     414e5a <__flatcc_fb_gen_c_json_parser@@Base+0x58da>
  414510:	add    eax,0xfffffffe
  414513:	mov    DWORD PTR [r12+0xf0],eax
  41451b:	mov    rcx,QWORD PTR [r13+0x88]
  414522:	mov    rdx,QWORD PTR [r13+0xa0]
  414529:	cmp    BYTE PTR [rsp+0x16],0x0
  41452e:	je     414575 <__flatcc_fb_gen_c_json_parser@@Base+0x4ff5>
  414530:	xor    eax,eax
  414532:	mov    rdi,r12
  414535:	lea    rsi,[rip+0x2f2d8]        # 443814 <_IO_stdin_used@@Base+0x15814>
  41453c:	lea    r8,[rsp+0x60]
  414541:	mov    r9,r8
  414544:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414549:	cmp    BYTE PTR [rsp],0x0
  41454d:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414553:	jmp    414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  414558:	xor    eax,eax
  41455a:	mov    rdi,r12
  41455d:	lea    rsi,[rip+0x2f258]        # 4437bc <_IO_stdin_used@@Base+0x157bc>
  414564:	jmp    414581 <__flatcc_fb_gen_c_json_parser@@Base+0x5001>
  414566:	cmp    BYTE PTR [rsp],0x0
  41456a:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414570:	jmp    414e79 <__flatcc_fb_gen_c_json_parser@@Base+0x58f9>
  414575:	xor    eax,eax
  414577:	mov    rdi,r12
  41457a:	lea    rsi,[rip+0x2f324]        # 4438a5 <_IO_stdin_used@@Base+0x158a5>
  414581:	lea    r8,[rsp+0x60]
  414586:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41458b:	cmp    BYTE PTR [rsp],0x0
  41458f:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414595:	jmp    414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  41459a:	nop    WORD PTR [rax+rax*1+0x0]
  4145a0:	cmp    r14d,0x2
  4145a4:	mov    DWORD PTR [rsp+0x5c],r14d
  4145a9:	jne    414660 <__flatcc_fb_gen_c_json_parser@@Base+0x50e0>
  4145af:	mov    eax,DWORD PTR [r12+0xf0]
  4145b7:	test   eax,eax
  4145b9:	je     414d2d <__flatcc_fb_gen_c_json_parser@@Base+0x57ad>
  4145bf:	add    eax,0xffffffff
  4145c2:	mov    DWORD PTR [r12+0xf0],eax
  4145ca:	mov    DWORD PTR [rsp],0x0
  4145d1:	xor    eax,eax
  4145d3:	mov    rdi,r12
  4145d6:	lea    rsi,[rip+0x2ebd8]        # 4431b5 <_IO_stdin_used@@Base+0x151b5>
  4145dd:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4145e2:	add    DWORD PTR [r12+0xf0],0x1
  4145eb:	mov    rsi,QWORD PTR [r13+0x90]
  4145f2:	mov    rdi,QWORD PTR [rsi+0x18]
  4145f6:	lea    rdx,[rsp+0x60]
  4145fb:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  414600:	mov    rax,QWORD PTR [r13+0x90]
  414607:	cmp    WORD PTR [rax+0x10],0x0
  41460c:	mov    eax,DWORD PTR [rsp+0x8]
  414610:	mov    ecx,0x1
  414615:	cmove  eax,ecx
  414618:	mov    DWORD PTR [rsp+0x8],eax
  41461c:	mov    ebx,DWORD PTR [rsp+0x10]
  414620:	cmovne ebx,ecx
  414623:	xor    eax,eax
  414625:	mov    rdi,r12
  414628:	lea    rsi,[rip+0x2eb9c]        # 4431cb <_IO_stdin_used@@Base+0x151cb>
  41462f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414634:	mov    DWORD PTR [rsp+0x10],ebx
  414638:	test   ebx,ebx
  41463a:	sete   bl
  41463d:	mov    r14d,ebx
  414640:	and    r14b,BYTE PTR [rsp+0x7]
  414645:	mov    DWORD PTR [rsp+0x20],0x0
  41464d:	mov    DWORD PTR [rsp+0x3c],0x0
  414655:	xor    r13d,r13d
  414658:	jmp    414927 <__flatcc_fb_gen_c_json_parser@@Base+0x53a7>
  41465d:	nop    DWORD PTR [rax]
  414660:	mov    eax,DWORD PTR [rsp+0x10]
  414664:	test   eax,eax
  414666:	sete   r15b
  41466a:	mov    ecx,DWORD PTR [rsp+0x3c]
  41466e:	or     eax,ecx
  414670:	sete   bl
  414673:	test   ecx,ecx
  414675:	je     4146d4 <__flatcc_fb_gen_c_json_parser@@Base+0x5154>
  414677:	mov    rax,QWORD PTR [rsp+0x28]
  41467c:	lea    eax,[rax-0x1]
  41467f:	cmp    eax,0xa
  414682:	ja     414da9 <__flatcc_fb_gen_c_json_parser@@Base+0x5829>
  414688:	mov    r14b,0x1
  41468b:	lea    rcx,[rip+0x2d702]        # 441d94 <_IO_stdin_used@@Base+0x13d94>
  414692:	movsxd rdx,DWORD PTR [rcx+rax*4]
  414696:	add    rdx,rcx
  414699:	lea    rax,[rip+0x21eb5]        # 436555 <_IO_stdin_used@@Base+0x8555>
  4146a0:	lea    rcx,[rip+0x21501]        # 435ba8 <_IO_stdin_used@@Base+0x7ba8>
  4146a7:	lea    rsi,[rip+0x3355a]        # 447c08 <fb_schema_table_deleted@@Base+0x14d8>
  4146ae:	mov    QWORD PTR [rsp+0x40],rsi
  4146b3:	lea    rsi,[rip+0x21500]        # 435bba <_IO_stdin_used@@Base+0x7bba>
  4146ba:	mov    QWORD PTR [rsp+0x50],rsi
  4146bf:	jmp    rdx
  4146c1:	lea    rax,[rip+0x21e86]        # 43654e <_IO_stdin_used@@Base+0x854e>
  4146c8:	lea    rcx,[rip+0x214d0]        # 435b9f <_IO_stdin_used@@Base+0x7b9f>
  4146cf:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  4146d4:	xor    r14d,r14d
  4146d7:	jmp    41475a <__flatcc_fb_gen_c_json_parser@@Base+0x51da>
  4146dc:	lea    rax,[rip+0x21e80]        # 436563 <_IO_stdin_used@@Base+0x8563>
  4146e3:	lea    rcx,[rip+0x214d0]        # 435bba <_IO_stdin_used@@Base+0x7bba>
  4146ea:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  4146ec:	lea    rax,[rip+0x214dc]        # 435bcf <_IO_stdin_used@@Base+0x7bcf>
  4146f3:	jmp    41474c <__flatcc_fb_gen_c_json_parser@@Base+0x51cc>
  4146f5:	lea    rax,[rip+0x21e60]        # 43655c <_IO_stdin_used@@Base+0x855c>
  4146fc:	lea    rcx,[rip+0x214ae]        # 435bb1 <_IO_stdin_used@@Base+0x7bb1>
  414703:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  414705:	lea    rax,[rip+0x21e51]        # 43655d <_IO_stdin_used@@Base+0x855d>
  41470c:	lea    rcx,[rip+0x2149f]        # 435bb2 <_IO_stdin_used@@Base+0x7bb2>
  414713:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  414715:	lea    rax,[rip+0x21e33]        # 43654f <_IO_stdin_used@@Base+0x854f>
  41471c:	lea    rcx,[rip+0x2147d]        # 435ba0 <_IO_stdin_used@@Base+0x7ba0>
  414723:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  414725:	lea    rax,[rip+0x21e2a]        # 436556 <_IO_stdin_used@@Base+0x8556>
  41472c:	lea    rcx,[rip+0x21476]        # 435ba9 <_IO_stdin_used@@Base+0x7ba9>
  414733:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  414735:	lea    rax,[rip+0x21e28]        # 436564 <_IO_stdin_used@@Base+0x8564>
  41473c:	lea    rcx,[rip+0x21478]        # 435bbb <_IO_stdin_used@@Base+0x7bbb>
  414743:	jmp    414750 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  414745:	lea    rax,[rip+0x2147d]        # 435bc9 <_IO_stdin_used@@Base+0x7bc9>
  41474c:	mov    rcx,rax
  41474f:	nop
  414750:	mov    QWORD PTR [rsp+0x40],rax
  414755:	mov    QWORD PTR [rsp+0x50],rcx
  41475a:	and    bl,BYTE PTR [rsp+0x7]
  41475e:	cmp    DWORD PTR [rsp+0x20],0x0
  414763:	je     41477c <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  414765:	test   bl,bl
  414767:	je     4147ab <__flatcc_fb_gen_c_json_parser@@Base+0x522b>
  414769:	xor    eax,eax
  41476b:	mov    rdi,r12
  41476e:	lea    rsi,[rip+0x2ea97]        # 44320c <_IO_stdin_used@@Base+0x1520c>
  414775:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41477a:	jmp    4147f4 <__flatcc_fb_gen_c_json_parser@@Base+0x5274>
  41477c:	mov    DWORD PTR [rsp],0x0
  414783:	test   r14b,r14b
  414786:	mov    r14d,DWORD PTR [rsp+0x20]
  41478b:	jne    414835 <__flatcc_fb_gen_c_json_parser@@Base+0x52b5>
  414791:	mov    r14d,ebx
  414794:	mov    DWORD PTR [rsp],0x0
  41479b:	mov    DWORD PTR [rsp+0x20],0x0
  4147a3:	xor    r13d,r13d
  4147a6:	jmp    414924 <__flatcc_fb_gen_c_json_parser@@Base+0x53a4>
  4147ab:	mov    r9,QWORD PTR [r13+0x80]
  4147b2:	movsx  ecx,WORD PTR [r13+0x72]
  4147b7:	test   r9,r9
  4147ba:	mov    rsi,r9
  4147bd:	mov    eax,0x1
  4147c2:	cmove  rsi,rax
  4147c6:	mov    rax,rsi
  4147c9:	shr    rax,0x20
  4147cd:	jne    4147dd <__flatcc_fb_gen_c_json_parser@@Base+0x525d>
  4147cf:	mov    eax,0xffffffff
  4147d4:	xor    edx,edx
  4147d6:	div    esi
  4147d8:	mov    r8d,eax
  4147db:	jmp    4147e0 <__flatcc_fb_gen_c_json_parser@@Base+0x5260>
  4147dd:	xor    r8d,r8d
  4147e0:	xor    eax,eax
  4147e2:	mov    rdi,r12
  4147e5:	lea    rsi,[rip+0x2ea5f]        # 44324b <_IO_stdin_used@@Base+0x1524b>
  4147ec:	mov    rdx,r9
  4147ef:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4147f4:	xor    r13d,r13d
  4147f7:	xor    eax,eax
  4147f9:	mov    rdi,r12
  4147fc:	lea    rsi,[rip+0x2ea99]        # 44329c <_IO_stdin_used@@Base+0x1529c>
  414803:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414808:	xor    eax,eax
  41480a:	mov    rdi,r12
  41480d:	lea    rsi,[rip+0x2e767]        # 442f7b <_IO_stdin_used@@Base+0x14f7b>
  414814:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414819:	add    DWORD PTR [r12+0xf0],0x1
  414822:	mov    al,0x1
  414824:	mov    DWORD PTR [rsp],eax
  414827:	test   r14b,r14b
  41482a:	mov    r14d,DWORD PTR [rsp+0x20]
  41482f:	je     4148fb <__flatcc_fb_gen_c_json_parser@@Base+0x537b>
  414835:	xor    eax,eax
  414837:	mov    rdi,r12
  41483a:	lea    rsi,[rip+0x2ea97]        # 4432d8 <_IO_stdin_used@@Base+0x152d8>
  414841:	mov    rdx,QWORD PTR [rsp+0x50]
  414846:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41484b:	xor    eax,eax
  41484d:	mov    rdi,r12
  414850:	lea    rsi,[rip+0x2ea8d]        # 4432e4 <_IO_stdin_used@@Base+0x152e4>
  414857:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41485c:	add    DWORD PTR [r12+0xf0],0x2
  414865:	cmp    DWORD PTR [rsp+0x1c],0x0
  41486a:	je     414882 <__flatcc_fb_gen_c_json_parser@@Base+0x5302>
  41486c:	xor    eax,eax
  41486e:	mov    rdi,r12
  414871:	lea    rsi,[rip+0x2eab0]        # 443328 <_IO_stdin_used@@Base+0x15328>
  414878:	lea    rdx,[rsp+0x60]
  41487d:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414882:	mov    rax,QWORD PTR [r12+0xd8]
  41488a:	mov    rdx,QWORD PTR [rax+0x110]
  414891:	xor    eax,eax
  414893:	mov    rdi,r12
  414896:	lea    rsi,[rip+0x2ea9f]        # 44333c <_IO_stdin_used@@Base+0x1533c>
  41489d:	lea    rcx,[rsp+0x150]
  4148a5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4148aa:	mov    rax,QWORD PTR [r12+0xd8]
  4148b2:	mov    rdx,QWORD PTR [rax+0x110]
  4148b9:	xor    eax,eax
  4148bb:	mov    rdi,r12
  4148be:	lea    rsi,[rip+0x2ea94]        # 443359 <_IO_stdin_used@@Base+0x15359>
  4148c5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4148ca:	mov    eax,DWORD PTR [r12+0xf0]
  4148d2:	test   eax,eax
  4148d4:	je     414d4c <__flatcc_fb_gen_c_json_parser@@Base+0x57cc>
  4148da:	mov    ecx,eax
  4148dc:	add    ecx,0xffffffff
  4148df:	mov    DWORD PTR [r12+0xf0],ecx
  4148e7:	je     414d4c <__flatcc_fb_gen_c_json_parser@@Base+0x57cc>
  4148ed:	add    eax,0xfffffffe
  4148f0:	mov    DWORD PTR [r12+0xf0],eax
  4148f8:	mov    r13b,0x1
  4148fb:	test   r14d,r14d
  4148fe:	sete   al
  414901:	or     al,bl
  414903:	je     414910 <__flatcc_fb_gen_c_json_parser@@Base+0x5390>
  414905:	mov    r14d,ebx
  414908:	jmp    414924 <__flatcc_fb_gen_c_json_parser@@Base+0x53a4>
  41490a:	nop    WORD PTR [rax+rax*1+0x0]
  414910:	xor    r14d,r14d
  414913:	xor    eax,eax
  414915:	mov    rdi,r12
  414918:	lea    rsi,[rip+0x2ea5b]        # 44337a <_IO_stdin_used@@Base+0x1537a>
  41491f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414924:	mov    ebx,r15d
  414927:	movzx  r15d,WORD PTR [rsp+0x3a]
  41492d:	cmp    r15d,0x1
  414931:	jne    414960 <__flatcc_fb_gen_c_json_parser@@Base+0x53e0>
  414933:	mov    rax,QWORD PTR [rsp+0x48]
  414938:	mov    rdx,QWORD PTR [rax+0x78]
  41493c:	xor    eax,eax
  41493e:	mov    rdi,r12
  414941:	lea    rsi,[rip+0x2ea78]        # 4433c0 <_IO_stdin_used@@Base+0x153c0>
  414948:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41494d:	test   r13b,r13b
  414950:	jne    414999 <__flatcc_fb_gen_c_json_parser@@Base+0x5419>
  414952:	jmp    414a80 <__flatcc_fb_gen_c_json_parser@@Base+0x5500>
  414957:	nop    WORD PTR [rax+rax*1+0x0]
  414960:	mov    eax,DWORD PTR [rsp]
  414963:	or     al,bl
  414965:	jne    414990 <__flatcc_fb_gen_c_json_parser@@Base+0x5410>
  414967:	mov    rax,QWORD PTR [rsp+0x48]
  41496c:	mov    rcx,QWORD PTR [rax+0x80]
  414973:	mov    rdx,QWORD PTR [rax+0x88]
  41497a:	movzx  r8d,WORD PTR [rax+0x72]
  41497f:	xor    eax,eax
  414981:	mov    rdi,r12
  414984:	lea    rsi,[rip+0x2ea61]        # 4433ec <_IO_stdin_used@@Base+0x153ec>
  41498b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414990:	test   r13b,r13b
  414993:	je     414a80 <__flatcc_fb_gen_c_json_parser@@Base+0x5500>
  414999:	xor    eax,eax
  41499b:	mov    rdi,r12
  41499e:	lea    rsi,[rip+0x2ea94]        # 443439 <_IO_stdin_used@@Base+0x15439>
  4149a5:	mov    rbx,QWORD PTR [rsp+0x40]
  4149aa:	mov    rdx,rbx
  4149ad:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4149b2:	xor    eax,eax
  4149b4:	mov    rdi,r12
  4149b7:	lea    rsi,[rip+0x2eab6]        # 443474 <_IO_stdin_used@@Base+0x15474>
  4149be:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4149c3:	add    DWORD PTR [r12+0xf0],0x1
  4149cc:	xor    eax,eax
  4149ce:	mov    rdi,r12
  4149d1:	lea    rsi,[rip+0x2eaaf]        # 443487 <_IO_stdin_used@@Base+0x15487>
  4149d8:	mov    rdx,rbx
  4149db:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4149e0:	xor    eax,eax
  4149e2:	mov    rdi,r12
  4149e5:	lea    rsi,[rip+0x2eaf1]        # 4434dd <_IO_stdin_used@@Base+0x154dd>
  4149ec:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4149f1:	mov    eax,DWORD PTR [r12+0xf0]
  4149f9:	test   eax,eax
  4149fb:	mov    r13,QWORD PTR [rsp+0x48]
  414a00:	je     414d6b <__flatcc_fb_gen_c_json_parser@@Base+0x57eb>
  414a06:	cmp    r15d,0x1
  414a0a:	sete   bl
  414a0d:	add    eax,0xffffffff
  414a10:	mov    DWORD PTR [r12+0xf0],eax
  414a18:	xor    eax,eax
  414a1a:	mov    rdi,r12
  414a1d:	lea    rsi,[rip+0x1ce94]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  414a24:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414a29:	or     bl,BYTE PTR [rsp]
  414a2c:	cmp    DWORD PTR [rsp+0x34],0x0
  414a31:	jne    414b5b <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  414a37:	test   bl,bl
  414a39:	jne    414b5b <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  414a3f:	mov    eax,DWORD PTR [r13+0x58]
  414a43:	lea    ecx,[rax-0x5]
  414a46:	movzx  ecx,cx
  414a49:	cmp    ecx,0x2
  414a4c:	jb     414ad5 <__flatcc_fb_gen_c_json_parser@@Base+0x5555>
  414a52:	movzx  eax,ax
  414a55:	cmp    eax,0x3
  414a58:	je     414b17 <__flatcc_fb_gen_c_json_parser@@Base+0x5597>
  414a5e:	cmp    eax,0x4
  414a61:	jne    414df2 <__flatcc_fb_gen_c_json_parser@@Base+0x5872>
  414a67:	mov    rdx,QWORD PTR [r13+0x48]
  414a6b:	xor    eax,eax
  414a6d:	mov    rdi,r12
  414a70:	lea    rsi,[rip+0x2ead5]        # 44354c <_IO_stdin_used@@Base+0x1554c>
  414a77:	jmp    414ae5 <__flatcc_fb_gen_c_json_parser@@Base+0x5565>
  414a79:	nop    DWORD PTR [rax+0x0]
  414a80:	test   bl,bl
  414a82:	mov    r13,QWORD PTR [rsp+0x48]
  414a87:	je     414ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x5530>
  414a89:	cmp    DWORD PTR [rsp+0xc],0x0
  414a8e:	je     414aec <__flatcc_fb_gen_c_json_parser@@Base+0x556c>
  414a90:	xor    eax,eax
  414a92:	mov    rdi,r12
  414a95:	lea    rsi,[rip+0x2ec08]        # 4436a4 <_IO_stdin_used@@Base+0x156a4>
  414a9c:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414aa1:	cmp    BYTE PTR [rsp],0x0
  414aa5:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414aab:	jmp    414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  414ab0:	xor    eax,eax
  414ab2:	mov    rdi,r12
  414ab5:	lea    rsi,[rip+0x2ebb0]        # 44366c <_IO_stdin_used@@Base+0x1566c>
  414abc:	lea    rdx,[rsp+0x60]
  414ac1:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414ac6:	cmp    BYTE PTR [rsp],0x0
  414aca:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414ad0:	jmp    414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  414ad5:	mov    rdx,QWORD PTR [r13+0x48]
  414ad9:	xor    eax,eax
  414adb:	mov    rdi,r12
  414ade:	lea    rsi,[rip+0x2ea24]        # 443509 <_IO_stdin_used@@Base+0x15509>
  414ae5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414aea:	jmp    414b2e <__flatcc_fb_gen_c_json_parser@@Base+0x55ae>
  414aec:	cmp    DWORD PTR [rsp+0x34],0x0
  414af1:	je     414421 <__flatcc_fb_gen_c_json_parser@@Base+0x4ea1>
  414af7:	xor    eax,eax
  414af9:	mov    rdi,r12
  414afc:	lea    rsi,[rip+0x2ebdd]        # 4436e0 <_IO_stdin_used@@Base+0x156e0>
  414b03:	mov    edx,DWORD PTR [rsp+0x58]
  414b07:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b0c:	cmp    BYTE PTR [rsp],0x0
  414b10:	jne    414b86 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  414b12:	jmp    414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  414b17:	vmovsd xmm0,QWORD PTR [r13+0x48]
  414b1d:	mov    al,0x1
  414b1f:	mov    rdi,r12
  414b22:	lea    rsi,[rip+0x2ea66]        # 44358f <_IO_stdin_used@@Base+0x1558f>
  414b29:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b2e:	add    DWORD PTR [r12+0xf0],0x1
  414b37:	mov    rcx,QWORD PTR [r13+0x80]
  414b3e:	mov    rdx,QWORD PTR [r13+0x88]
  414b45:	movsx  r8d,WORD PTR [r13+0x72]
  414b4a:	xor    eax,eax
  414b4c:	mov    rdi,r12
  414b4f:	lea    rsi,[rip+0x2eaab]        # 443601 <_IO_stdin_used@@Base+0x15601>
  414b56:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b5b:	xor    eax,eax
  414b5d:	mov    rdi,r12
  414b60:	lea    rsi,[rip+0x2eae8]        # 44364f <_IO_stdin_used@@Base+0x1564f>
  414b67:	mov    rdx,r12
  414b6a:	mov    rcx,QWORD PTR [rsp+0x40]
  414b6f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b74:	test   bl,bl
  414b76:	je     414c00 <__flatcc_fb_gen_c_json_parser@@Base+0x5680>
  414b7c:	cmp    BYTE PTR [rsp],0x0
  414b80:	je     414c35 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  414b86:	test   r14b,r14b
  414b89:	je     414bad <__flatcc_fb_gen_c_json_parser@@Base+0x562d>
  414b8b:	xor    eax,eax
  414b8d:	mov    rdi,r12
  414b90:	lea    rsi,[rip+0x2edae]        # 443945 <_IO_stdin_used@@Base+0x15945>
  414b97:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b9c:	xor    eax,eax
  414b9e:	mov    rdi,r12
  414ba1:	lea    rsi,[rip+0x2edf2]        # 44399a <_IO_stdin_used@@Base+0x1599a>
  414ba8:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414bad:	xor    eax,eax
  414baf:	mov    rdi,r12
  414bb2:	lea    rsi,[rip+0x2edee]        # 4439a7 <_IO_stdin_used@@Base+0x159a7>
  414bb9:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414bbe:	mov    eax,DWORD PTR [r12+0xf0]
  414bc6:	test   eax,eax
  414bc8:	je     414d8a <__flatcc_fb_gen_c_json_parser@@Base+0x580a>
  414bce:	add    eax,0xffffffff
  414bd1:	mov    DWORD PTR [r12+0xf0],eax
  414bd9:	xor    eax,eax
  414bdb:	mov    rdi,r12
  414bde:	lea    rsi,[rip+0x1ccd3]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  414be5:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414bea:	xor    eax,eax
  414bec:	mov    rdi,r12
  414bef:	test   r14b,r14b
  414bf2:	je     414c29 <__flatcc_fb_gen_c_json_parser@@Base+0x56a9>
  414bf4:	lea    rsi,[rip+0x2ede6]        # 4439e1 <_IO_stdin_used@@Base+0x159e1>
  414bfb:	jmp    414c30 <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
  414bfd:	nop    DWORD PTR [rax]
  414c00:	mov    eax,DWORD PTR [r12+0xf0]
  414c08:	test   eax,eax
  414c0a:	je     414e3b <__flatcc_fb_gen_c_json_parser@@Base+0x58bb>
  414c10:	add    eax,0xffffffff
  414c13:	mov    DWORD PTR [r12+0xf0],eax
  414c1b:	xor    eax,eax
  414c1d:	mov    rdi,r12
  414c20:	lea    rsi,[rip+0x1cc91]        # 4318b8 <_IO_stdin_used@@Base+0x38b8>
  414c27:	jmp    414c30 <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
  414c29:	lea    rsi,[rip+0x2ede3]        # 443a13 <_IO_stdin_used@@Base+0x15a13>
  414c30:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414c35:	mov    r14d,0x2
  414c3b:	mov    ebx,DWORD PTR [rsp+0x5c]
  414c3f:	cmp    ebx,0x1
  414c42:	je     4145a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5020>
  414c48:	cmp    ebx,0x2
  414c4b:	mov    r14d,DWORD PTR [rsp+0x20]
  414c50:	jne    414ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x5720>
  414c52:	lea    rsi,[rip+0x2ede5]        # 443a3e <_IO_stdin_used@@Base+0x15a3e>
  414c59:	xor    eax,eax
  414c5b:	mov    rdi,r12
  414c5e:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414c63:	lea    rsi,[rip+0x2edeb]        # 443a55 <_IO_stdin_used@@Base+0x15a55>
  414c6a:	xor    eax,eax
  414c6c:	mov    rdi,r12
  414c6f:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414c74:	mov    eax,DWORD PTR [r12+0xf0]
  414c7c:	test   eax,eax
  414c7e:	je     414ee1 <__flatcc_fb_gen_c_json_parser@@Base+0x5961>
  414c84:	add    eax,0xffffffff
  414c87:	mov    DWORD PTR [r12+0xf0],eax
  414c8f:	lea    rsi,[rip+0x2edef]        # 443a85 <_IO_stdin_used@@Base+0x15a85>
  414c96:	xor    eax,eax
  414c98:	mov    rdi,r12
  414c9b:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414ca0:	mov    eax,DWORD PTR [rsp+0x34]
  414ca4:	or     eax,DWORD PTR [rsp+0xc]
  414ca8:	or     eax,ebx
  414caa:	or     eax,r14d
  414cad:	or     eax,DWORD PTR [rsp+0x8]
  414cb1:	je     414cdc <__flatcc_fb_gen_c_json_parser@@Base+0x575c>
  414cb3:	mov    rdx,QWORD PTR [r13+0x88]
  414cba:	lea    rsi,[rip+0x2edd7]        # 443a98 <_IO_stdin_used@@Base+0x15a98>
  414cc1:	xor    eax,eax
  414cc3:	mov    rdi,r12
  414cc6:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414ccb:	lea    rsi,[rip+0x2ecc8]        # 44399a <_IO_stdin_used@@Base+0x1599a>
  414cd2:	xor    eax,eax
  414cd4:	mov    rdi,r12
  414cd7:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414cdc:	mov    eax,DWORD PTR [r12+0xf0]
  414ce4:	test   eax,eax
  414ce6:	je     414ec2 <__flatcc_fb_gen_c_json_parser@@Base+0x5942>
  414cec:	add    eax,0xffffffff
  414cef:	mov    DWORD PTR [r12+0xf0],eax
  414cf7:	lea    rsi,[rip+0x2dabd]        # 4427bb <_IO_stdin_used@@Base+0x147bb>
  414cfe:	xor    eax,eax
  414d00:	mov    rdi,r12
  414d03:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414d08:	add    DWORD PTR [r12+0xf0],0x1
  414d11:	lea    rsp,[rbp-0x28]
  414d15:	pop    rbx
  414d16:	pop    r12
  414d18:	pop    r13
  414d1a:	pop    r14
  414d1c:	pop    r15
  414d1e:	pop    rbp
  414d1f:	ret    
  414d20:	mov    DWORD PTR [rsp+0xc],0x0
  414d28:	jmp    4141fa <__flatcc_fb_gen_c_json_parser@@Base+0x4c7a>
  414d2d:	lea    rdi,[rip+0x2d33d]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414d34:	lea    rsi,[rip+0x2d342]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414d3b:	lea    rcx,[rip+0x2e3f1]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414d42:	mov    edx,0x1ea
  414d47:	call   4060f0 <__assert_fail@plt>
  414d4c:	lea    rdi,[rip+0x2d31e]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414d53:	lea    rsi,[rip+0x2d323]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414d5a:	lea    rcx,[rip+0x2e3d2]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414d61:	mov    edx,0x21b
  414d66:	call   4060f0 <__assert_fail@plt>
  414d6b:	lea    rdi,[rip+0x2d2ff]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414d72:	lea    rsi,[rip+0x2d304]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414d79:	lea    rcx,[rip+0x2e3b3]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414d80:	mov    edx,0x22f
  414d85:	call   4060f0 <__assert_fail@plt>
  414d8a:	lea    rdi,[rip+0x2d2e0]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414d91:	lea    rsi,[rip+0x2d2e5]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414d98:	lea    rcx,[rip+0x2e394]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414d9f:	mov    edx,0x287
  414da4:	call   4060f0 <__assert_fail@plt>
  414da9:	mov    rax,QWORD PTR [rip+0x3c248]        # 450ff8 <stderr@GLIBC_2.2.5>
  414db0:	mov    rdi,QWORD PTR [rax]
  414db3:	lea    rsi,[rip+0x1a66a]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  414dba:	lea    rbx,[rip+0x20e15]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  414dc1:	lea    r8,[rip+0x20e71]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  414dc8:	mov    ecx,0x60
  414dcd:	xor    eax,eax
  414dcf:	mov    rdx,rbx
  414dd2:	call   406170 <fprintf@plt>
  414dd7:	lea    rdi,[rip+0x2b5ad]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  414dde:	lea    rcx,[rip+0x21784]        # 436569 <_IO_stdin_used@@Base+0x8569>
  414de5:	mov    edx,0x60
  414dea:	mov    rsi,rbx
  414ded:	call   4060f0 <__assert_fail@plt>
  414df2:	mov    rax,QWORD PTR [rip+0x3c1ff]        # 450ff8 <stderr@GLIBC_2.2.5>
  414df9:	mov    rdi,QWORD PTR [rax]
  414dfc:	lea    rsi,[rip+0x1a621]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  414e03:	lea    rbx,[rip+0x2d273]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414e0a:	lea    r8,[rip+0x2e7c1]        # 4435d2 <_IO_stdin_used@@Base+0x155d2>
  414e11:	mov    ecx,0x24e
  414e16:	xor    eax,eax
  414e18:	mov    rdx,rbx
  414e1b:	call   406170 <fprintf@plt>
  414e20:	lea    rdi,[rip+0x2b564]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  414e27:	lea    rcx,[rip+0x2e305]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414e2e:	mov    edx,0x24e
  414e33:	mov    rsi,rbx
  414e36:	call   4060f0 <__assert_fail@plt>
  414e3b:	lea    rdi,[rip+0x2d22f]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414e42:	lea    rsi,[rip+0x2d234]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414e49:	lea    rcx,[rip+0x2e2e3]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414e50:	mov    edx,0x25a
  414e55:	call   4060f0 <__assert_fail@plt>
  414e5a:	lea    rdi,[rip+0x2d210]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414e61:	lea    rsi,[rip+0x2d215]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414e68:	lea    rcx,[rip+0x2e2c4]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414e6f:	mov    edx,0x273
  414e74:	call   4060f0 <__assert_fail@plt>
  414e79:	mov    rax,QWORD PTR [rip+0x3c178]        # 450ff8 <stderr@GLIBC_2.2.5>
  414e80:	mov    rdi,QWORD PTR [rax]
  414e83:	lea    rsi,[rip+0x1a59a]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  414e8a:	lea    rbx,[rip+0x2d1ec]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414e91:	lea    r8,[rip+0x2ea7c]        # 443914 <_IO_stdin_used@@Base+0x15914>
  414e98:	mov    ecx,0x27c
  414e9d:	xor    eax,eax
  414e9f:	mov    rdx,rbx
  414ea2:	call   406170 <fprintf@plt>
  414ea7:	lea    rdi,[rip+0x2b4dd]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  414eae:	lea    rcx,[rip+0x2e27e]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414eb5:	mov    edx,0x27c
  414eba:	mov    rsi,rbx
  414ebd:	call   4060f0 <__assert_fail@plt>
  414ec2:	lea    rdi,[rip+0x2d1a8]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414ec9:	lea    rsi,[rip+0x2d1ad]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414ed0:	lea    rcx,[rip+0x2e1d1]        # 4430a8 <_IO_stdin_used@@Base+0x150a8>
  414ed7:	mov    edx,0x2a3
  414edc:	call   4060f0 <__assert_fail@plt>
  414ee1:	lea    rdi,[rip+0x2d189]        # 442071 <_IO_stdin_used@@Base+0x14071>
  414ee8:	lea    rsi,[rip+0x2d18e]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  414eef:	lea    rcx,[rip+0x2e23d]        # 443133 <_IO_stdin_used@@Base+0x15133>
  414ef6:	mov    edx,0x295
  414efb:	call   4060f0 <__assert_fail@plt>
  414f00:	lea    rsi,[rip+0x2e097]        # 442f9e <_IO_stdin_used@@Base+0x14f9e>
  414f07:	xor    eax,eax
  414f09:	jmp    411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414f0e:	xchg   ax,ax
  414f10:	push   rbp
  414f11:	mov    rbp,rsp
  414f14:	push   r15
  414f16:	push   r14
  414f18:	push   rbx
  414f19:	and    rsp,0xffffffffffffffe0
  414f1d:	sub    rsp,0x100
  414f24:	mov    r14,rdx
  414f27:	mov    rbx,rdi
  414f2a:	lea    rsi,[rip+0x2f240]        # 444171 <_IO_stdin_used@@Base+0x16171>
  414f31:	xor    eax,eax
  414f33:	mov    edx,r8d
  414f36:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414f3b:	lea    rsi,[rip+0x2dba2]        # 442ae4 <_IO_stdin_used@@Base+0x14ae4>
  414f42:	xor    eax,eax
  414f44:	mov    rdi,rbx
  414f47:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414f4c:	add    DWORD PTR [rbx+0xf0],0x1
  414f53:	mov    eax,DWORD PTR [r14+0x10]
  414f57:	add    eax,0xfffffffd
  414f5a:	movzx  eax,ax
  414f5d:	cmp    eax,0x2
  414f60:	jae    415007 <__flatcc_fb_gen_c_json_parser@@Base+0x5a87>
  414f66:	vxorps xmm0,xmm0,xmm0
  414f6a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  414f73:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  414f7c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  414f85:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  414f8b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  414f91:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  414f97:	vmovaps YMMWORD PTR [rsp],ymm0
  414f9c:	mov    QWORD PTR [rsp+0xe0],0x0
  414fa8:	mov    rdi,QWORD PTR [r14+0x18]
  414fac:	mov    r15,rsp
  414faf:	mov    rsi,r14
  414fb2:	mov    rdx,r15
  414fb5:	vzeroupper 
  414fb8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  414fbd:	lea    rsi,[rip+0x2f28a]        # 44424e <_IO_stdin_used@@Base+0x1624e>
  414fc4:	xor    eax,eax
  414fc6:	mov    rdi,rbx
  414fc9:	mov    rdx,r15
  414fcc:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414fd1:	mov    eax,DWORD PTR [rbx+0xf0]
  414fd7:	test   eax,eax
  414fd9:	je     415026 <__flatcc_fb_gen_c_json_parser@@Base+0x5aa6>
  414fdb:	add    eax,0xffffffff
  414fde:	mov    DWORD PTR [rbx+0xf0],eax
  414fe4:	lea    rsi,[rip+0x2d7d0]        # 4427bb <_IO_stdin_used@@Base+0x147bb>
  414feb:	xor    eax,eax
  414fed:	mov    rdi,rbx
  414ff0:	call   411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414ff5:	add    DWORD PTR [rbx+0xf0],0x1
  414ffc:	lea    rsp,[rbp-0x18]
  415000:	pop    rbx
  415001:	pop    r14
  415003:	pop    r15
  415005:	pop    rbp
  415006:	ret    
  415007:	lea    rdi,[rip+0x20896]        # 4358a4 <_IO_stdin_used@@Base+0x78a4>
  41500e:	lea    rsi,[rip+0x2d068]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  415015:	lea    rcx,[rip+0x2f1e3]        # 4441ff <_IO_stdin_used@@Base+0x161ff>
  41501c:	mov    edx,0x2d9
  415021:	call   4060f0 <__assert_fail@plt>
  415026:	lea    rdi,[rip+0x2d044]        # 442071 <_IO_stdin_used@@Base+0x14071>
  41502d:	lea    rsi,[rip+0x2d049]        # 44207d <_IO_stdin_used@@Base+0x1407d>
  415034:	lea    rcx,[rip+0x2f178]        # 4441b3 <_IO_stdin_used@@Base+0x161b3>
  41503b:	mov    edx,0x2e6
  415040:	call   4060f0 <__assert_fail@plt>
  415045:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41504f:	nop
  415050:	lea    rsi,[rip+0x2dbae]        # 442c05 <_IO_stdin_used@@Base+0x14c05>
  415057:	xor    eax,eax
  415059:	jmp    411d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41505e:	xchg   ax,ax
  415060:	push   rbx
  415061:	movzx  eax,WORD PTR [rsi+0x10]
  415065:	add    eax,0xfffffffd
  415068:	cmp    eax,0x1
  41506b:	ja     41508a <__flatcc_fb_gen_c_json_parser@@Base+0x5b0a>
  41506d:	mov    rbx,rdi
  415070:	mov    edi,0x128
  415075:	add    rdi,QWORD PTR [rbx+0x8]
  415079:	mov    rsi,QWORD PTR [rsi+0x20]
  41507d:	call   4190e0 <ptr_set_find_item@@Base>
  415082:	test   rax,rax
  415085:	je     41508a <__flatcc_fb_gen_c_json_parser@@Base+0x5b0a>
  415087:	add    DWORD PTR [rbx],0x1
  41508a:	pop    rbx
  41508b:	ret    
  41508c:	nop    DWORD PTR [rax+0x0]
  415090:	push   r14
  415092:	push   rbx
  415093:	push   rax
  415094:	movzx  eax,WORD PTR [rsi+0x10]
  415098:	add    eax,0xfffffffd
  41509b:	cmp    eax,0x1
  41509e:	ja     4150dd <__flatcc_fb_gen_c_json_parser@@Base+0x5b5d>
  4150a0:	mov    rbx,rsi
  4150a3:	mov    r14,rdi
  4150a6:	mov    edi,0x128
  4150ab:	add    rdi,QWORD PTR [r14+0x8]
  4150af:	mov    rsi,QWORD PTR [rsi+0x20]
  4150b3:	call   4190e0 <ptr_set_find_item@@Base>
  4150b8:	test   rax,rax
  4150bb:	je     4150dd <__flatcc_fb_gen_c_json_parser@@Base+0x5b5d>
  4150bd:	mov    rax,QWORD PTR [rbx+0x8]
  4150c1:	mov    rcx,QWORD PTR [rax]
  4150c4:	mov    rdx,QWORD PTR [r14+0x10]
  4150c8:	mov    QWORD PTR [rdx],rcx
  4150cb:	mov    eax,DWORD PTR [rax+0x8]
  4150ce:	mov    DWORD PTR [rdx+0x8],eax
  4150d1:	mov    QWORD PTR [rdx+0x10],rbx
  4150d5:	add    rdx,0x20
  4150d9:	mov    QWORD PTR [r14+0x10],rdx
  4150dd:	add    rsp,0x8
  4150e1:	pop    rbx
  4150e2:	pop    r14
  4150e4:	ret    
  4150e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4150ef:	nop
  4150f0:	push   rbx
  4150f1:	mov    rbx,rdi
  4150f4:	mov    rdi,QWORD PTR [rdi+0x18]
  4150f8:	test   rdi,rdi
  4150fb:	je     415102 <__flatcc_fb_gen_c_json_parser@@Base+0x5b82>
  4150fd:	call   406040 <free@plt>
  415102:	mov    rdi,QWORD PTR [rbx+0x20]
  415106:	test   rdi,rdi
  415109:	je     415110 <__flatcc_fb_gen_c_json_parser@@Base+0x5b90>
  41510b:	call   406040 <free@plt>
  415110:	mov    rdi,QWORD PTR [rbx+0x28]
  415114:	test   rdi,rdi
  415117:	je     41511e <__flatcc_fb_gen_c_json_parser@@Base+0x5b9e>
  415119:	call   406040 <free@plt>
  41511e:	vxorps xmm0,xmm0,xmm0
  415122:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  415127:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41512c:	vmovups YMMWORD PTR [rbx],ymm0
  415130:	pop    rbx
  415131:	vzeroupper 
  415134:	ret    
  415135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41513f:	nop
  415140:	mov    rax,rdi
  415143:	lea    rdi,[rsi+0x8]
  415147:	lea    rsi,[rip+0x32]        # 415180 <__flatcc_fb_gen_c_json_parser@@Base+0x5c00>
  41514e:	mov    rdx,rax
  415151:	jmp    419990 <fb_symbol_table_visit@@Base>
  415156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415160:	mov    rax,rdi
  415163:	lea    rdi,[rsi+0x8]
  415167:	lea    rsi,[rip+0xc2]        # 415230 <__flatcc_fb_gen_c_json_parser@@Base+0x5cb0>
  41516e:	mov    rdx,rax
  415171:	jmp    419990 <fb_symbol_table_visit@@Base>
  415176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415180:	push   r14
  415182:	push   rbx
  415183:	push   rax
  415184:	movzx  eax,WORD PTR [rsi+0x10]
  415188:	cmp    eax,0x4
  41518b:	ja     415223 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415191:	mov    rbx,rsi
  415194:	mov    r14,rdi
  415197:	mov    edi,0x128
  41519c:	add    rdi,QWORD PTR [r14+0x48]
  4151a0:	mov    rsi,QWORD PTR [rsi+0x20]
  4151a4:	call   4190e0 <ptr_set_find_item@@Base>
  4151a9:	test   rax,rax
  4151ac:	je     415223 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  4151ae:	cmp    DWORD PTR [r14],0x0
  4151b2:	je     4151f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5c70>
  4151b4:	mov    rax,QWORD PTR [rbx+0x18]
  4151b8:	mov    rcx,QWORD PTR [rax]
  4151bb:	test   rcx,rcx
  4151be:	je     4151f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5c70>
  4151c0:	xor    eax,eax
  4151c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4151cc:	nop    DWORD PTR [rax+0x0]
  4151d0:	mov    rdx,QWORD PTR [rcx+0x8]
  4151d4:	mov    rsi,QWORD PTR [rcx]
  4151d7:	mov    rcx,QWORD PTR [rdx+0x8]
  4151db:	add    rax,rcx
  4151de:	add    rax,0x1
  4151e2:	mov    rcx,rsi
  4151e5:	test   rsi,rsi
  4151e8:	jne    4151d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5c50>
  4151ea:	add    rax,0x1
  4151ee:	jmp    4151f5 <__flatcc_fb_gen_c_json_parser@@Base+0x5c75>
  4151f0:	mov    eax,0x1
  4151f5:	mov    rcx,QWORD PTR [rbx+0x8]
  4151f9:	add    rax,QWORD PTR [rcx+0x8]
  4151fd:	add    QWORD PTR [r14+0x10],rax
  415201:	mov    eax,DWORD PTR [rbx+0x10]
  415204:	lea    ecx,[rax-0x3]
  415207:	movzx  ecx,cx
  41520a:	cmp    ecx,0x2
  41520d:	jb     41521e <__flatcc_fb_gen_c_json_parser@@Base+0x5c9e>
  41520f:	movzx  eax,ax
  415212:	cmp    eax,0x1
  415215:	ja     415223 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415217:	add    DWORD PTR [r14+0x4],0x1
  41521c:	jmp    415223 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  41521e:	add    DWORD PTR [r14+0x8],0x1
  415223:	add    rsp,0x8
  415227:	pop    rbx
  415228:	pop    r14
  41522a:	ret    
  41522b:	nop    DWORD PTR [rax+rax*1+0x0]
  415230:	push   rbp
  415231:	push   r15
  415233:	push   r14
  415235:	push   r13
  415237:	push   r12
  415239:	push   rbx
  41523a:	push   rax
  41523b:	movzx  eax,WORD PTR [rsi+0x10]
  41523f:	cmp    eax,0x4
  415242:	ja     41532d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  415248:	mov    r15,rsi
  41524b:	mov    r14,rdi
  41524e:	mov    edi,0x128
  415253:	add    rdi,QWORD PTR [r14+0x48]
  415257:	mov    rsi,QWORD PTR [rsi+0x20]
  41525b:	call   4190e0 <ptr_set_find_item@@Base>
  415260:	test   rax,rax
  415263:	je     41532d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  415269:	mov    r12,QWORD PTR [r14+0x40]
  41526d:	cmp    DWORD PTR [r14],0x0
  415271:	mov    QWORD PTR [rsp],r12
  415275:	je     4152bf <__flatcc_fb_gen_c_json_parser@@Base+0x5d3f>
  415277:	mov    rax,QWORD PTR [r15+0x18]
  41527b:	mov    rbp,QWORD PTR [rax]
  41527e:	mov    r12,QWORD PTR [rsp]
  415282:	test   rbp,rbp
  415285:	je     4152bf <__flatcc_fb_gen_c_json_parser@@Base+0x5d3f>
  415287:	mov    rbx,QWORD PTR [rsp]
  41528b:	nop    DWORD PTR [rax+rax*1+0x0]
  415290:	mov    rax,QWORD PTR [rbp+0x8]
  415294:	movsxd r13,DWORD PTR [rax+0x8]
  415298:	mov    rsi,QWORD PTR [rax]
  41529b:	mov    rdi,rbx
  41529e:	mov    rdx,r13
  4152a1:	call   406190 <memcpy@plt>
  4152a6:	lea    r12,[rbx+r13*1]
  4152aa:	add    r12,0x1
  4152ae:	mov    BYTE PTR [rbx+r13*1],0x2e
  4152b3:	mov    rbp,QWORD PTR [rbp+0x0]
  4152b7:	mov    rbx,r12
  4152ba:	test   rbp,rbp
  4152bd:	jne    415290 <__flatcc_fb_gen_c_json_parser@@Base+0x5d10>
  4152bf:	mov    rax,QWORD PTR [r15+0x8]
  4152c3:	movsxd rbx,DWORD PTR [rax+0x8]
  4152c7:	mov    rsi,QWORD PTR [rax]
  4152ca:	mov    rdi,r12
  4152cd:	mov    rdx,rbx
  4152d0:	call   406190 <memcpy@plt>
  4152d5:	lea    rax,[r12+rbx*1]
  4152d9:	add    rax,0x1
  4152dd:	mov    BYTE PTR [r12+rbx*1],0x0
  4152e2:	mov    QWORD PTR [r14+0x40],rax
  4152e6:	mov    eax,DWORD PTR [r15+0x10]
  4152ea:	lea    ecx,[rax-0x3]
  4152ed:	movzx  ecx,cx
  4152f0:	cmp    ecx,0x2
  4152f3:	jb     415316 <__flatcc_fb_gen_c_json_parser@@Base+0x5d96>
  4152f5:	movzx  eax,ax
  4152f8:	cmp    eax,0x1
  4152fb:	ja     41532d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  4152fd:	mov    rax,QWORD PTR [r14+0x30]
  415301:	mov    QWORD PTR [rax],r15
  415304:	mov    rcx,QWORD PTR [rsp]
  415308:	mov    QWORD PTR [rax+0x8],rcx
  41530c:	add    rax,0x10
  415310:	mov    QWORD PTR [r14+0x30],rax
  415314:	jmp    41532d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  415316:	mov    rax,QWORD PTR [r14+0x38]
  41531a:	mov    QWORD PTR [rax],r15
  41531d:	mov    rcx,QWORD PTR [rsp]
  415321:	mov    QWORD PTR [rax+0x8],rcx
  415325:	add    rax,0x10
  415329:	mov    QWORD PTR [r14+0x38],rax
  41532d:	add    rsp,0x8
  415331:	pop    rbx
  415332:	pop    r12
  415334:	pop    r13
  415336:	pop    r14
  415338:	pop    r15
  41533a:	pop    rbp
  41533b:	ret    
  41533c:	nop    DWORD PTR [rax+0x0]
  415340:	mov    rdi,QWORD PTR [rdi+0x8]
  415344:	mov    rsi,QWORD PTR [rsi+0x8]
  415348:	jmp    406150 <strcmp@plt>
  41534d:	nop    DWORD PTR [rax]

0000000000415350 <__flatcc_fb_gen_c_json_printer@@Base>:
  415350:	push   rbp
  415351:	mov    rbp,rsp
  415354:	push   r15
  415356:	push   r14
  415358:	push   r13
  41535a:	push   r12
  41535c:	push   rbx
  41535d:	and    rsp,0xffffffffffffffe0
  415361:	sub    rsp,0x220
  415368:	mov    rbx,rdi
  41536b:	lea    r15,[rdi+0xd0]
  415372:	mov    rdi,QWORD PTR [rdi+0xd0]
  415379:	mov    rax,QWORD PTR [rbx+0xd8]
  415380:	mov    rdx,QWORD PTR [rax+0x118]
  415387:	lea    rsi,[rip+0x2f292]        # 444620 <_IO_stdin_used@@Base+0x16620>
  41538e:	xor    eax,eax
  415390:	mov    rcx,rdx
  415393:	call   406170 <fprintf@plt>
  415398:	mov    rcx,QWORD PTR [rbx+0xd0]
  41539f:	lea    rdi,[rip+0x19f55]        # 42f2fb <_IO_stdin_used@@Base+0x12fb>
  4153a6:	mov    esi,0x51
  4153ab:	mov    edx,0x1
  4153b0:	call   406210 <fwrite@plt>
  4153b5:	mov    rcx,QWORD PTR [rbx+0xd0]
  4153bc:	lea    rdi,[rip+0x2f292]        # 444655 <_IO_stdin_used@@Base+0x16655>
  4153c3:	mov    esi,0x28
  4153c8:	mov    edx,0x1
  4153cd:	call   406210 <fwrite@plt>
  4153d2:	lea    rsi,[rip+0x19e90]        # 42f269 <_IO_stdin_used@@Base+0x1269>
  4153d9:	lea    rdx,[rip+0x2f29e]        # 44467e <_IO_stdin_used@@Base+0x1667e>
  4153e0:	mov    rdi,rbx
  4153e3:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  4153e8:	mov    QWORD PTR [rsp+0x18],rbx
  4153ed:	mov    rax,QWORD PTR [rbx+0xe0]
  4153f4:	cmp    DWORD PTR [rax+0xac],0x0
  4153fb:	je     415416 <__flatcc_fb_gen_c_json_printer@@Base+0xc6>
  4153fd:	mov    rcx,QWORD PTR [r15]
  415400:	lea    rdi,[rip+0x1a0ea]        # 42f4f1 <_IO_stdin_used@@Base+0x14f1>
  415407:	mov    esi,0x24
  41540c:	mov    edx,0x1
  415411:	call   406210 <fwrite@plt>
  415416:	mov    rbx,QWORD PTR [rsp+0x18]
  41541b:	mov    rsi,QWORD PTR [rbx+0xd0]
  415422:	mov    edi,0xa
  415427:	call   406110 <fputc@plt>
  41542c:	mov    rax,QWORD PTR [rbx+0xd8]
  415433:	mov    rcx,QWORD PTR [rax+0x58]
  415437:	vxorps xmm0,xmm0,xmm0
  41543b:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415444:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41544d:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415456:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41545f:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415465:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41546b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415471:	mov    QWORD PTR [rsp+0x100],0x0
  41547d:	test   rcx,rcx
  415480:	je     4154da <__flatcc_fb_gen_c_json_printer@@Base+0x18a>
  415482:	movzx  ecx,WORD PTR [rcx+0x10]
  415486:	cmp    ecx,0x1
  415489:	ja     4154da <__flatcc_fb_gen_c_json_printer@@Base+0x18a>
  41548b:	mov    rbx,QWORD PTR [rsp+0x18]
  415490:	mov    rcx,QWORD PTR [rbx+0xd0]
  415497:	lea    rdi,[rip+0x2f1f0]        # 44468e <_IO_stdin_used@@Base+0x1668e>
  41549e:	mov    esi,0x1e2
  4154a3:	mov    edx,0x1
  4154a8:	vzeroupper 
  4154ab:	call   406210 <fwrite@plt>
  4154b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4154b7:	mov    rax,QWORD PTR [rbx+0xd8]
  4154be:	mov    rdx,QWORD PTR [rax+0x110]
  4154c5:	lea    rsi,[rip+0x2f3a5]        # 444871 <_IO_stdin_used@@Base+0x16871>
  4154cc:	xor    eax,eax
  4154ce:	call   406170 <fprintf@plt>
  4154d3:	mov    rax,QWORD PTR [rbx+0xd8]
  4154da:	mov    rbx,QWORD PTR [rax+0x40]
  4154de:	test   rbx,rbx
  4154e1:	je     415592 <__flatcc_fb_gen_c_json_printer@@Base+0x242>
  4154e7:	lea    r14,[rsp+0x20]
  4154ec:	lea    r12,[rip+0x2f506]        # 4449f9 <_IO_stdin_used@@Base+0x169f9>
  4154f3:	lea    r13,[rip+0x2f3cf]        # 4448c9 <_IO_stdin_used@@Base+0x168c9>
  4154fa:	nop    WORD PTR [rax+rax*1+0x0]
  415500:	movzx  eax,WORD PTR [rbx+0x10]
  415504:	test   ax,ax
  415507:	je     415560 <__flatcc_fb_gen_c_json_printer@@Base+0x210>
  415509:	movzx  eax,ax
  41550c:	cmp    eax,0x1
  41550f:	je     415540 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0>
  415511:	cmp    eax,0x4
  415514:	jne    415586 <__flatcc_fb_gen_c_json_printer@@Base+0x236>
  415516:	mov    rdi,QWORD PTR [rbx+0x18]
  41551a:	mov    rsi,rbx
  41551d:	mov    rdx,r14
  415520:	vzeroupper 
  415523:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415528:	mov    rdi,QWORD PTR [r15]
  41552b:	xor    eax,eax
  41552d:	mov    rsi,r13
  415530:	mov    rdx,r14
  415533:	mov    rcx,r14
  415536:	call   406170 <fprintf@plt>
  41553b:	jmp    415586 <__flatcc_fb_gen_c_json_printer@@Base+0x236>
  41553d:	nop    DWORD PTR [rax]
  415540:	mov    rdi,QWORD PTR [rbx+0x18]
  415544:	mov    rsi,rbx
  415547:	mov    rdx,r14
  41554a:	vzeroupper 
  41554d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415552:	mov    rdi,QWORD PTR [r15]
  415555:	xor    eax,eax
  415557:	mov    rsi,r12
  41555a:	jmp    41557e <__flatcc_fb_gen_c_json_printer@@Base+0x22e>
  41555c:	nop    DWORD PTR [rax+0x0]
  415560:	mov    rdi,QWORD PTR [rbx+0x18]
  415564:	mov    rsi,rbx
  415567:	mov    rdx,r14
  41556a:	vzeroupper 
  41556d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415572:	mov    rdi,QWORD PTR [r15]
  415575:	xor    eax,eax
  415577:	lea    rsi,[rip+0x2f411]        # 44498f <_IO_stdin_used@@Base+0x1698f>
  41557e:	mov    rdx,r14
  415581:	call   406170 <fprintf@plt>
  415586:	mov    rbx,QWORD PTR [rbx]
  415589:	test   rbx,rbx
  41558c:	jne    415500 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
  415592:	mov    rbx,QWORD PTR [rsp+0x18]
  415597:	mov    rsi,QWORD PTR [rbx+0xd0]
  41559e:	mov    edi,0xa
  4155a3:	vzeroupper 
  4155a6:	call   406110 <fputc@plt>
  4155ab:	mov    rax,QWORD PTR [rbx+0xd8]
  4155b2:	mov    r13,QWORD PTR [rax+0x40]
  4155b6:	test   r13,r13
  4155b9:	je     4165ed <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  4155bf:	lea    r14,[rsp+0x20]
  4155c4:	lea    r12,[rip+0x3b6d5]        # 450ca0 <fb_value_set_deleted@@Base+0x6240>
  4155cb:	mov    QWORD PTR [rsp+0x118],r15
  4155d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4155dd:	nop    DWORD PTR [rax]
  4155e0:	movzx  eax,WORD PTR [r13+0x10]
  4155e5:	cmp    eax,0x3
  4155e8:	jne    41598f <__flatcc_fb_gen_c_json_printer@@Base+0x63f>
  4155ee:	vxorps xmm0,xmm0,xmm0
  4155f2:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4155fb:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415604:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41560d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415616:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41561c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415622:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415628:	mov    QWORD PTR [rsp+0x100],0x0
  415634:	mov    rdi,QWORD PTR [r13+0x18]
  415638:	mov    rsi,r13
  41563b:	mov    rdx,r14
  41563e:	vzeroupper 
  415641:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415646:	mov    eax,DWORD PTR [r13+0x48]
  41564a:	lea    ecx,[rax-0x1]
  41564d:	cmp    ecx,0xb
  415650:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  415656:	movsxd rcx,ecx
  415659:	lea    rdx,[rip+0x3b6e0]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  415660:	mov    rdi,QWORD PTR [rdx+rcx*8]
  415664:	mov    r8,QWORD PTR [r12+rcx*8]
  415668:	cmp    eax,0x5
  41566b:	lea    rcx,[rip+0x19ecd]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  415672:	cmove  rcx,QWORD PTR [rsp+0x18]
  415678:	test   BYTE PTR [r13+0xa4],0x20
  415680:	mov    QWORD PTR [rsp+0x8],rdi
  415685:	jne    415790 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  41568b:	mov    rdi,QWORD PTR [r15]
  41568e:	xor    eax,eax
  415690:	lea    rsi,[rip+0x2f3b9]        # 444a50 <_IO_stdin_used@@Base+0x16a50>
  415697:	mov    rdx,r14
  41569a:	call   406170 <fprintf@plt>
  41569f:	mov    rcx,QWORD PTR [r15]
  4156a2:	mov    esi,0x12
  4156a7:	mov    edx,0x1
  4156ac:	lea    rdi,[rip+0x2f60d]        # 444cc0 <_IO_stdin_used@@Base+0x16cc0>
  4156b3:	call   406210 <fwrite@plt>
  4156b8:	mov    rbx,QWORD PTR [r13+0x28]
  4156bc:	test   rbx,rbx
  4156bf:	je     41576f <__flatcc_fb_gen_c_json_printer@@Base+0x41f>
  4156c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4156cf:	nop
  4156d0:	movzx  eax,WORD PTR [rbx+0x58]
  4156d4:	cmp    eax,0x4
  4156d7:	je     415740 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
  4156d9:	movzx  eax,ax
  4156dc:	cmp    eax,0x6
  4156df:	je     415710 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
  4156e1:	cmp    eax,0x5
  4156e4:	jne    4167b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1464>
  4156ea:	mov    rdi,QWORD PTR [r15]
  4156ed:	mov    rax,QWORD PTR [rbx+0x8]
  4156f1:	mov    rdx,QWORD PTR [rbx+0x48]
  4156f5:	mov    r8,QWORD PTR [rax]
  4156f8:	mov    r9,QWORD PTR [rax+0x8]
  4156fc:	xor    eax,eax
  4156fe:	lea    rsi,[rip+0x2f5ce]        # 444cd3 <_IO_stdin_used@@Base+0x16cd3>
  415705:	jmp    41575b <__flatcc_fb_gen_c_json_printer@@Base+0x40b>
  415707:	nop    WORD PTR [rax+rax*1+0x0]
  415710:	mov    rdi,QWORD PTR [r15]
  415713:	movzx  edx,BYTE PTR [rbx+0x48]
  415717:	mov    rax,QWORD PTR [rbx+0x8]
  41571b:	mov    r8,QWORD PTR [rax]
  41571e:	mov    r9,QWORD PTR [rax+0x8]
  415722:	xor    eax,eax
  415724:	lea    rsi,[rip+0x2f62c]        # 444d57 <_IO_stdin_used@@Base+0x16d57>
  41572b:	mov    ecx,r9d
  41572e:	call   406170 <fprintf@plt>
  415733:	mov    rbx,QWORD PTR [rbx]
  415736:	test   rbx,rbx
  415739:	jne    4156d0 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  41573b:	jmp    41576f <__flatcc_fb_gen_c_json_printer@@Base+0x41f>
  41573d:	nop    DWORD PTR [rax]
  415740:	mov    rdi,QWORD PTR [r15]
  415743:	mov    rax,QWORD PTR [rbx+0x8]
  415747:	mov    rdx,QWORD PTR [rbx+0x48]
  41574b:	mov    r8,QWORD PTR [rax]
  41574e:	mov    r9,QWORD PTR [rax+0x8]
  415752:	xor    eax,eax
  415754:	lea    rsi,[rip+0x2f5ba]        # 444d15 <_IO_stdin_used@@Base+0x16d15>
  41575b:	mov    ecx,r9d
  41575e:	call   406170 <fprintf@plt>
  415763:	mov    rbx,QWORD PTR [rbx]
  415766:	test   rbx,rbx
  415769:	jne    4156d0 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  41576f:	mov    rdi,QWORD PTR [r15]
  415772:	xor    eax,eax
  415774:	lea    rsi,[rip+0x2f61d]        # 444d98 <_IO_stdin_used@@Base+0x16d98>
  41577b:	mov    rdx,QWORD PTR [rsp+0x8]
  415780:	call   406170 <fprintf@plt>
  415785:	jmp    415976 <__flatcc_fb_gen_c_json_printer@@Base+0x626>
  41578a:	nop    WORD PTR [rax+rax*1+0x0]
  415790:	mov    rax,QWORD PTR [r13+0xb8]
  415797:	lea    rdx,[rax-0x1]
  41579b:	mov    r14,0xffffffffffffffff
  4157a2:	lea    r12,[rip+0x2f2a3]        # 444a4c <_IO_stdin_used@@Base+0x16a4c>
  4157a9:	lea    rbx,[rip+0x203ef]        # 435b9f <_IO_stdin_used@@Base+0x7b9f>
  4157b0:	cmp    rdx,0x3
  4157b4:	ja     4157da <__flatcc_fb_gen_c_json_printer@@Base+0x48a>
  4157b6:	lea    rdx,[rip+0x304f3]        # 445cb0 <_IO_stdin_used@@Base+0x17cb0>
  4157bd:	mov    r14,QWORD PTR [rdx+rax*8-0x8]
  4157c2:	lea    rdx,[rip+0x3b537]        # 450d00 <fb_value_set_deleted@@Base+0x62a0>
  4157c9:	mov    r12,QWORD PTR [rdx+rax*8-0x8]
  4157ce:	lea    rdx,[rip+0x3b54b]        # 450d20 <fb_value_set_deleted@@Base+0x62c0>
  4157d5:	mov    rbx,QWORD PTR [rdx+rax*8-0x8]
  4157da:	mov    rax,QWORD PTR [r13+0x28]
  4157de:	test   rax,rax
  4157e1:	je     415821 <__flatcc_fb_gen_c_json_printer@@Base+0x4d1>
  4157e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157ed:	nop    DWORD PTR [rax]
  4157f0:	movzx  edx,WORD PTR [rax+0x58]
  4157f4:	cmp    edx,0x4
  4157f7:	je     415806 <__flatcc_fb_gen_c_json_printer@@Base+0x4b6>
  4157f9:	movzx  edx,dx
  4157fc:	cmp    edx,0x6
  4157ff:	je     415810 <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
  415801:	cmp    edx,0x5
  415804:	jne    415819 <__flatcc_fb_gen_c_json_printer@@Base+0x4c9>
  415806:	mov    rdx,QWORD PTR [rax+0x48]
  41580a:	jmp    415814 <__flatcc_fb_gen_c_json_printer@@Base+0x4c4>
  41580c:	nop    DWORD PTR [rax+0x0]
  415810:	movzx  edx,BYTE PTR [rax+0x48]
  415814:	andn   r14,rdx,r14
  415819:	mov    rax,QWORD PTR [rax]
  41581c:	test   rax,rax
  41581f:	jne    4157f0 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
  415821:	mov    rdi,QWORD PTR [r15]
  415824:	xor    eax,eax
  415826:	lea    rsi,[rip+0x2f223]        # 444a50 <_IO_stdin_used@@Base+0x16a50>
  41582d:	lea    rdx,[rsp+0x20]
  415832:	mov    r15,r8
  415835:	call   406170 <fprintf@plt>
  41583a:	mov    rdi,rbx
  41583d:	mov    rsi,r15
  415840:	mov    r15,QWORD PTR [rsp+0x118]
  415848:	call   406150 <strcmp@plt>
  41584d:	mov    rdi,QWORD PTR [r15]
  415850:	test   eax,eax
  415852:	je     41586a <__flatcc_fb_gen_c_json_printer@@Base+0x51a>
  415854:	xor    eax,eax
  415856:	lea    rsi,[rip+0x2f239]        # 444a96 <_IO_stdin_used@@Base+0x16a96>
  41585d:	mov    rdx,rbx
  415860:	mov    rcx,rbx
  415863:	call   406170 <fprintf@plt>
  415868:	jmp    41587b <__flatcc_fb_gen_c_json_printer@@Base+0x52b>
  41586a:	xor    eax,eax
  41586c:	lea    rsi,[rip+0x2f236]        # 444aa9 <_IO_stdin_used@@Base+0x16aa9>
  415873:	mov    rdx,rbx
  415876:	call   406170 <fprintf@plt>
  41587b:	mov    rcx,QWORD PTR [r15]
  41587e:	mov    esi,0x36
  415883:	mov    edx,0x1
  415888:	lea    rdi,[rip+0x2f229]        # 444ab8 <_IO_stdin_used@@Base+0x16ab8>
  41588f:	call   406210 <fwrite@plt>
  415894:	mov    rsi,QWORD PTR [r15]
  415897:	mov    edi,0xa
  41589c:	call   406110 <fputc@plt>
  4158a1:	test   r14,r14
  4158a4:	je     4158bf <__flatcc_fb_gen_c_json_printer@@Base+0x56f>
  4158a6:	mov    rdi,QWORD PTR [r15]
  4158a9:	xor    eax,eax
  4158ab:	lea    rsi,[rip+0x2f23d]        # 444aef <_IO_stdin_used@@Base+0x16aef>
  4158b2:	mov    rdx,r14
  4158b5:	mov    rcx,QWORD PTR [rsp+0x8]
  4158ba:	call   406170 <fprintf@plt>
  4158bf:	mov    rcx,QWORD PTR [r15]
  4158c2:	mov    esi,0x3b
  4158c7:	mov    edx,0x1
  4158cc:	lea    rdi,[rip+0x2f27c]        # 444b4f <_IO_stdin_used@@Base+0x16b4f>
  4158d3:	call   406210 <fwrite@plt>
  4158d8:	mov    rbx,QWORD PTR [r13+0x28]
  4158dc:	test   rbx,rbx
  4158df:	lea    r14,[rip+0x2f2a5]        # 444b8b <_IO_stdin_used@@Base+0x16b8b>
  4158e6:	je     415951 <__flatcc_fb_gen_c_json_printer@@Base+0x601>
  4158e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4158f0:	movzx  eax,WORD PTR [rbx+0x58]
  4158f4:	cmp    eax,0x4
  4158f7:	je     41590a <__flatcc_fb_gen_c_json_printer@@Base+0x5ba>
  4158f9:	movzx  eax,ax
  4158fc:	cmp    eax,0x6
  4158ff:	je     415920 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
  415901:	cmp    eax,0x5
  415904:	jne    4167fd <__flatcc_fb_gen_c_json_printer@@Base+0x14ad>
  41590a:	mov    rdi,QWORD PTR [r15]
  41590d:	mov    rax,QWORD PTR [rbx+0x8]
  415911:	mov    rdx,QWORD PTR [rbx+0x48]
  415915:	jmp    41592b <__flatcc_fb_gen_c_json_printer@@Base+0x5db>
  415917:	nop    WORD PTR [rax+rax*1+0x0]
  415920:	mov    rdi,QWORD PTR [r15]
  415923:	movzx  edx,BYTE PTR [rbx+0x48]
  415927:	mov    rax,QWORD PTR [rbx+0x8]
  41592b:	mov    r9,QWORD PTR [rax]
  41592e:	mov    r8,QWORD PTR [rax+0x8]
  415932:	sub    rsp,0x8
  415936:	xor    eax,eax
  415938:	mov    rsi,r14
  41593b:	mov    rcx,r12
  41593e:	push   r8
  415940:	call   406170 <fprintf@plt>
  415945:	add    rsp,0x10
  415949:	mov    rbx,QWORD PTR [rbx]
  41594c:	test   rbx,rbx
  41594f:	jne    4158f0 <__flatcc_fb_gen_c_json_printer@@Base+0x5a0>
  415951:	mov    rcx,QWORD PTR [r15]
  415954:	mov    esi,0x3b
  415959:	mov    edx,0x1
  41595e:	lea    rdi,[rip+0x2f1ea]        # 444b4f <_IO_stdin_used@@Base+0x16b4f>
  415965:	call   406210 <fwrite@plt>
  41596a:	lea    r14,[rsp+0x20]
  41596f:	lea    r12,[rip+0x3b32a]        # 450ca0 <fb_value_set_deleted@@Base+0x6240>
  415976:	mov    rcx,QWORD PTR [r15]
  415979:	mov    esi,0x3
  41597e:	mov    edx,0x1
  415983:	lea    rdi,[rip+0x301e5]        # 445b6f <_IO_stdin_used@@Base+0x17b6f>
  41598a:	call   406210 <fwrite@plt>
  41598f:	mov    r13,QWORD PTR [r13+0x0]
  415993:	test   r13,r13
  415996:	jne    4155e0 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  41599c:	mov    rax,QWORD PTR [rsp+0x18]
  4159a1:	mov    rax,QWORD PTR [rax+0xd8]
  4159a8:	mov    r13,QWORD PTR [rax+0x40]
  4159ac:	test   r13,r13
  4159af:	je     4165ed <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  4159b5:	lea    r14,[rsp+0x20]
  4159ba:	lea    rbx,[rsp+0x120]
  4159c2:	lea    r12,[rip+0x2f47c]        # 444e45 <_IO_stdin_used@@Base+0x16e45>
  4159c9:	nop    DWORD PTR [rax+0x0]
  4159d0:	movzx  eax,WORD PTR [r13+0x10]
  4159d5:	cmp    eax,0x4
  4159d8:	jne    415c62 <__flatcc_fb_gen_c_json_printer@@Base+0x912>
  4159de:	vxorps xmm0,xmm0,xmm0
  4159e2:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4159eb:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4159f4:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  4159fd:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415a06:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415a0c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415a12:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415a18:	mov    QWORD PTR [rsp+0x100],0x0
  415a24:	mov    rdi,QWORD PTR [r13+0x18]
  415a28:	mov    rsi,r13
  415a2b:	mov    rdx,r14
  415a2e:	vzeroupper 
  415a31:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415a36:	mov    rdi,QWORD PTR [r15]
  415a39:	xor    eax,eax
  415a3b:	lea    rsi,[rip+0x2f391]        # 444dd3 <_IO_stdin_used@@Base+0x16dd3>
  415a42:	mov    rdx,r14
  415a45:	call   406170 <fprintf@plt>
  415a4a:	mov    rbx,QWORD PTR [r13+0x28]
  415a4e:	test   rbx,rbx
  415a51:	je     415a8d <__flatcc_fb_gen_c_json_printer@@Base+0x73d>
  415a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a5d:	nop    DWORD PTR [rax]
  415a60:	cmp    WORD PTR [rbx+0x28],0x0
  415a65:	je     415a85 <__flatcc_fb_gen_c_json_printer@@Base+0x735>
  415a67:	mov    rdi,QWORD PTR [r15]
  415a6a:	mov    edx,DWORD PTR [rbx+0x48]
  415a6d:	mov    rax,QWORD PTR [rbx+0x8]
  415a71:	mov    r8,QWORD PTR [rax]
  415a74:	mov    r9,QWORD PTR [rax+0x8]
  415a78:	xor    eax,eax
  415a7a:	mov    rsi,r12
  415a7d:	mov    ecx,r9d
  415a80:	call   406170 <fprintf@plt>
  415a85:	mov    rbx,QWORD PTR [rbx]
  415a88:	test   rbx,rbx
  415a8b:	jne    415a60 <__flatcc_fb_gen_c_json_printer@@Base+0x710>
  415a8d:	mov    rcx,QWORD PTR [r15]
  415a90:	mov    esi,0x4e
  415a95:	mov    edx,0x1
  415a9a:	lea    rdi,[rip+0x2f3f5]        # 444e96 <_IO_stdin_used@@Base+0x16e96>
  415aa1:	call   406210 <fwrite@plt>
  415aa6:	mov    rcx,QWORD PTR [r15]
  415aa9:	mov    esi,0x9
  415aae:	mov    edx,0x1
  415ab3:	lea    rdi,[rip+0x2b877]        # 441331 <_IO_stdin_used@@Base+0x13331>
  415aba:	call   406210 <fwrite@plt>
  415abf:	vxorps xmm0,xmm0,xmm0
  415ac3:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415acc:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415ad5:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415ade:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415ae7:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415aed:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415af3:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415af9:	mov    QWORD PTR [rsp+0x100],0x0
  415b05:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  415b0e:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  415b17:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415b20:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  415b29:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415b32:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  415b3b:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415b44:	mov    QWORD PTR [rsp+0x200],0x0
  415b50:	mov    rdi,QWORD PTR [r13+0x18]
  415b54:	mov    rsi,r13
  415b57:	mov    rdx,r14
  415b5a:	vzeroupper 
  415b5d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415b62:	mov    rdi,QWORD PTR [r15]
  415b65:	xor    eax,eax
  415b67:	lea    rsi,[rip+0x2f377]        # 444ee5 <_IO_stdin_used@@Base+0x16ee5>
  415b6e:	mov    rdx,r14
  415b71:	call   406170 <fprintf@plt>
  415b76:	mov    r14,QWORD PTR [r13+0x28]
  415b7a:	test   r14,r14
  415b7d:	lea    rbx,[rsp+0x120]
  415b85:	je     415c2b <__flatcc_fb_gen_c_json_printer@@Base+0x8db>
  415b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b90:	movzx  eax,WORD PTR [r14+0x28]
  415b95:	test   ax,ax
  415b98:	je     415c1f <__flatcc_fb_gen_c_json_printer@@Base+0x8cf>
  415b9e:	movzx  eax,ax
  415ba1:	cmp    eax,0xa
  415ba4:	je     415bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x8a0>
  415ba6:	cmp    eax,0xe
  415ba9:	jne    41676b <__flatcc_fb_gen_c_json_printer@@Base+0x141b>
  415baf:	mov    rsi,QWORD PTR [r14+0x18]
  415bb3:	mov    rdi,QWORD PTR [rsi+0x18]
  415bb7:	mov    rdx,rbx
  415bba:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415bbf:	mov    rax,QWORD PTR [r14+0x18]
  415bc3:	movzx  eax,WORD PTR [rax+0x10]
  415bc7:	cmp    eax,0x1
  415bca:	je     415c07 <__flatcc_fb_gen_c_json_printer@@Base+0x8b7>
  415bcc:	test   ax,ax
  415bcf:	jne    416846 <__flatcc_fb_gen_c_json_printer@@Base+0x14f6>
  415bd5:	mov    rdi,QWORD PTR [r15]
  415bd8:	mov    edx,DWORD PTR [r14+0x48]
  415bdc:	xor    eax,eax
  415bde:	lea    rsi,[rip+0x2f383]        # 444f68 <_IO_stdin_used@@Base+0x16f68>
  415be5:	jmp    415c17 <__flatcc_fb_gen_c_json_printer@@Base+0x8c7>
  415be7:	nop    WORD PTR [rax+rax*1+0x0]
  415bf0:	mov    rdi,QWORD PTR [r15]
  415bf3:	mov    edx,DWORD PTR [r14+0x48]
  415bf7:	xor    eax,eax
  415bf9:	lea    rsi,[rip+0x2f4a0]        # 4450a0 <_IO_stdin_used@@Base+0x170a0>
  415c00:	call   406170 <fprintf@plt>
  415c05:	jmp    415c1f <__flatcc_fb_gen_c_json_printer@@Base+0x8cf>
  415c07:	mov    rdi,QWORD PTR [r15]
  415c0a:	mov    edx,DWORD PTR [r14+0x48]
  415c0e:	xor    eax,eax
  415c10:	lea    rsi,[rip+0x2f3b5]        # 444fcc <_IO_stdin_used@@Base+0x16fcc>
  415c17:	mov    rcx,rbx
  415c1a:	call   406170 <fprintf@plt>
  415c1f:	mov    r14,QWORD PTR [r14]
  415c22:	test   r14,r14
  415c25:	jne    415b90 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
  415c2b:	mov    rcx,QWORD PTR [r15]
  415c2e:	mov    esi,0x1c
  415c33:	mov    edx,0x1
  415c38:	lea    rdi,[rip+0x2f4b1]        # 4450f0 <_IO_stdin_used@@Base+0x170f0>
  415c3f:	call   406210 <fwrite@plt>
  415c44:	mov    rcx,QWORD PTR [r15]
  415c47:	mov    esi,0x9
  415c4c:	mov    edx,0x1
  415c51:	lea    rdi,[rip+0x2b6d9]        # 441331 <_IO_stdin_used@@Base+0x13331>
  415c58:	call   406210 <fwrite@plt>
  415c5d:	lea    r14,[rsp+0x20]
  415c62:	mov    r13,QWORD PTR [r13+0x0]
  415c66:	test   r13,r13
  415c69:	jne    4159d0 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  415c6f:	mov    rax,QWORD PTR [rsp+0x18]
  415c74:	mov    rax,QWORD PTR [rax+0xd8]
  415c7b:	mov    r14,QWORD PTR [rax+0x40]
  415c7f:	test   r14,r14
  415c82:	je     4165ed <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  415c88:	lea    r12,[rsp+0x20]
  415c8d:	nop    DWORD PTR [rax]
  415c90:	movzx  eax,WORD PTR [r14+0x10]
  415c95:	cmp    eax,0x1
  415c98:	jne    415ed6 <__flatcc_fb_gen_c_json_printer@@Base+0xb86>
  415c9e:	vxorps xmm0,xmm0,xmm0
  415ca2:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415cab:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415cb4:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415cbd:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415cc6:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415ccc:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415cd2:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415cd8:	mov    QWORD PTR [rsp+0x100],0x0
  415ce4:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  415ced:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  415cf6:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415cff:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  415d08:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415d11:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  415d1a:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415d23:	mov    QWORD PTR [rsp+0x200],0x0
  415d2f:	mov    rdi,QWORD PTR [r14+0x18]
  415d33:	mov    rsi,r14
  415d36:	mov    rdx,r12
  415d39:	vzeroupper 
  415d3c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415d41:	mov    rdi,QWORD PTR [r15]
  415d44:	xor    eax,eax
  415d46:	lea    rsi,[rip+0x2f3c0]        # 44510d <_IO_stdin_used@@Base+0x1710d>
  415d4d:	mov    rdx,r12
  415d50:	call   406170 <fprintf@plt>
  415d55:	mov    r13,QWORD PTR [r14+0x28]
  415d59:	test   r13,r13
  415d5c:	je     415ea1 <__flatcc_fb_gen_c_json_printer@@Base+0xb51>
  415d62:	xor    r12d,r12d
  415d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d6f:	nop
  415d70:	test   BYTE PTR [r13+0x70],0x4
  415d75:	jne    415e90 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  415d7b:	movzx  eax,WORD PTR [r13+0x28]
  415d80:	cmp    eax,0xe
  415d83:	je     415de3 <__flatcc_fb_gen_c_json_printer@@Base+0xa93>
  415d85:	movzx  eax,ax
  415d88:	cmp    eax,0x8
  415d8b:	jne    415e90 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  415d91:	mov    eax,DWORD PTR [r13+0x18]
  415d95:	add    eax,0xffffffff
  415d98:	cmp    eax,0xb
  415d9b:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  415da1:	cdqe   
  415da3:	lea    rcx,[rip+0x3af96]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  415daa:	mov    rdx,QWORD PTR [rcx+rax*8]
  415dae:	mov    rdi,QWORD PTR [r15]
  415db1:	mov    rbx,QWORD PTR [r13+0x8]
  415db5:	mov    r8,QWORD PTR [r13+0x78]
  415db9:	mov    r9,QWORD PTR [rbx+0x8]
  415dbd:	xor    eax,eax
  415dbf:	lea    rsi,[rip+0x2f396]        # 44515c <_IO_stdin_used@@Base+0x1715c>
  415dc6:	mov    ecx,r12d
  415dc9:	push   r9
  415dcb:	push   QWORD PTR [rbx]
  415dcd:	call   406170 <fprintf@plt>
  415dd2:	add    rsp,0x10
  415dd6:	lea    rbx,[rsp+0x120]
  415dde:	jmp    415e90 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  415de3:	mov    rsi,QWORD PTR [r13+0x18]
  415de7:	mov    rdi,QWORD PTR [rsi+0x18]
  415deb:	mov    rdx,rbx
  415dee:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415df3:	mov    rax,QWORD PTR [r13+0x18]
  415df7:	movzx  ecx,WORD PTR [rax+0x10]
  415dfb:	cmp    ecx,0x1
  415dfe:	je     415e60 <__flatcc_fb_gen_c_json_printer@@Base+0xb10>
  415e00:	movzx  ecx,cx
  415e03:	cmp    ecx,0x3
  415e06:	jne    415e90 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  415e0c:	mov    eax,DWORD PTR [rax+0x48]
  415e0f:	add    eax,0xffffffff
  415e12:	cmp    eax,0xb
  415e15:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  415e1b:	cdqe   
  415e1d:	lea    rcx,[rip+0x3af1c]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  415e24:	mov    rdx,QWORD PTR [rcx+rax*8]
  415e28:	mov    rdi,QWORD PTR [r15]
  415e2b:	mov    r10,QWORD PTR [r13+0x8]
  415e2f:	mov    r8,QWORD PTR [r13+0x78]
  415e33:	mov    r9,QWORD PTR [r10+0x8]
  415e37:	sub    rsp,0x8
  415e3b:	xor    eax,eax
  415e3d:	lea    rsi,[rip+0x2f360]        # 4451a4 <_IO_stdin_used@@Base+0x171a4>
  415e44:	mov    ecx,r12d
  415e47:	lea    rbx,[rsp+0x128]
  415e4f:	push   rbx
  415e50:	push   r9
  415e52:	push   QWORD PTR [r10]
  415e55:	call   406170 <fprintf@plt>
  415e5a:	add    rsp,0x20
  415e5e:	jmp    415e90 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  415e60:	mov    rdi,QWORD PTR [r15]
  415e63:	mov    rax,QWORD PTR [r13+0x8]
  415e67:	mov    rcx,QWORD PTR [r13+0x78]
  415e6b:	mov    r9,QWORD PTR [rax]
  415e6e:	mov    r8,QWORD PTR [rax+0x8]
  415e72:	xor    eax,eax
  415e74:	lea    rsi,[rip+0x2f38a]        # 445205 <_IO_stdin_used@@Base+0x17205>
  415e7b:	mov    edx,r12d
  415e7e:	push   rbx
  415e7f:	push   r8
  415e81:	call   406170 <fprintf@plt>
  415e86:	add    rsp,0x10
  415e8a:	nop    WORD PTR [rax+rax*1+0x0]
  415e90:	add    r12d,0x1
  415e94:	mov    r13,QWORD PTR [r13+0x0]
  415e98:	test   r13,r13
  415e9b:	jne    415d70 <__flatcc_fb_gen_c_json_printer@@Base+0xa20>
  415ea1:	mov    rcx,QWORD PTR [r15]
  415ea4:	mov    esi,0x3
  415ea9:	mov    edx,0x1
  415eae:	lea    rdi,[rip+0x2fcba]        # 445b6f <_IO_stdin_used@@Base+0x17b6f>
  415eb5:	call   406210 <fwrite@plt>
  415eba:	mov    rdi,QWORD PTR [r15]
  415ebd:	xor    eax,eax
  415ebf:	lea    rsi,[rip+0x2f3a3]        # 445269 <_IO_stdin_used@@Base+0x17269>
  415ec6:	lea    r12,[rsp+0x20]
  415ecb:	mov    rdx,r12
  415ece:	mov    rcx,r12
  415ed1:	call   406170 <fprintf@plt>
  415ed6:	mov    r14,QWORD PTR [r14]
  415ed9:	test   r14,r14
  415edc:	jne    415c90 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  415ee2:	mov    rax,QWORD PTR [rsp+0x18]
  415ee7:	mov    rax,QWORD PTR [rax+0xd8]
  415eee:	mov    r12,QWORD PTR [rax+0x40]
  415ef2:	test   r12,r12
  415ef5:	je     4165ed <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  415efb:	lea    r14,[rsp+0x20]
  415f00:	cmp    WORD PTR [r12+0x10],0x0
  415f07:	jne    4165d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
  415f0d:	vxorps xmm0,xmm0,xmm0
  415f11:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415f1a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415f23:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415f2c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415f35:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415f3b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415f41:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415f47:	mov    QWORD PTR [rsp+0x100],0x0
  415f53:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  415f5c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  415f65:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415f6e:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  415f77:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415f80:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  415f89:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415f92:	mov    QWORD PTR [rsp+0x200],0x0
  415f9e:	mov    rdi,QWORD PTR [r12+0x18]
  415fa3:	mov    rsi,r12
  415fa6:	mov    rdx,r14
  415fa9:	vzeroupper 
  415fac:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415fb1:	mov    QWORD PTR [rsp+0x8],r12
  415fb6:	mov    rbx,QWORD PTR [r12+0xa8]
  415fbe:	mov    esi,0x8
  415fc3:	mov    rdi,rbx
  415fc6:	call   406140 <calloc@plt>
  415fcb:	test   rbx,rbx
  415fce:	mov    rbx,rax
  415fd1:	je     415fdc <__flatcc_fb_gen_c_json_printer@@Base+0xc8c>
  415fd3:	test   rbx,rbx
  415fd6:	je     4169fc <__flatcc_fb_gen_c_json_printer@@Base+0x16ac>
  415fdc:	mov    r12,QWORD PTR [rsp+0x8]
  415fe1:	mov    rax,QWORD PTR [r12+0x28]
  415fe6:	test   rax,rax
  415fe9:	je     416003 <__flatcc_fb_gen_c_json_printer@@Base+0xcb3>
  415feb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ff0:	mov    rcx,QWORD PTR [rax+0x88]
  415ff7:	mov    QWORD PTR [rbx+rcx*8],rax
  415ffb:	mov    rax,QWORD PTR [rax]
  415ffe:	test   rax,rax
  416001:	jne    415ff0 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
  416003:	mov    rdi,QWORD PTR [r15]
  416006:	xor    eax,eax
  416008:	lea    rsi,[rip+0x2f39b]        # 4453aa <_IO_stdin_used@@Base+0x173aa>
  41600f:	mov    rdx,r14
  416012:	call   406170 <fprintf@plt>
  416017:	cmp    QWORD PTR [r12+0xa8],0x0
  416020:	je     416592 <__flatcc_fb_gen_c_json_printer@@Base+0x1242>
  416026:	xor    r14d,r14d
  416029:	mov    QWORD PTR [rsp+0x10],rbx
  41602e:	jmp    416170 <__flatcc_fb_gen_c_json_printer@@Base+0xe20>
  416033:	mov    eax,DWORD PTR [rax+0x48]
  416036:	add    eax,0xffffffff
  416039:	cmp    eax,0xb
  41603c:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  416042:	cdqe   
  416044:	lea    rcx,[rip+0x3acf5]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  41604b:	mov    rdx,QWORD PTR [rcx+rax*8]
  41604f:	mov    eax,DWORD PTR [r13+0x58]
  416053:	lea    ecx,[rax-0x5]
  416056:	movzx  ecx,cx
  416059:	cmp    ecx,0x2
  41605c:	jae    41611b <__flatcc_fb_gen_c_json_printer@@Base+0xdcb>
  416062:	mov    rdi,QWORD PTR [r15]
  416065:	mov    rcx,QWORD PTR [r13+0x88]
  41606c:	mov    rax,QWORD PTR [r13+0x8]
  416070:	mov    r9,QWORD PTR [rax]
  416073:	mov    r8,QWORD PTR [rax+0x8]
  416077:	sub    rsp,0x8
  41607b:	xor    eax,eax
  41607d:	lea    rsi,[rip+0x2f61b]        # 44569f <_IO_stdin_used@@Base+0x1769f>
  416084:	lea    rbx,[rsp+0x128]
  41608c:	push   rbx
  41608d:	mov    rbx,QWORD PTR [rsp+0x20]
  416092:	mov    r12,QWORD PTR [rsp+0x18]
  416097:	push   QWORD PTR [r13+0x48]
  41609b:	push   r8
  41609d:	call   406170 <fprintf@plt>
  4160a2:	add    rsp,0x20
  4160a6:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  4160ab:	mov    eax,DWORD PTR [r13+0x18]
  4160af:	add    eax,0xffffffff
  4160b2:	cmp    eax,0xb
  4160b5:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  4160bb:	cdqe   
  4160bd:	lea    rcx,[rip+0x3ac7c]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  4160c4:	mov    rdx,QWORD PTR [rcx+rax*8]
  4160c8:	mov    rdi,QWORD PTR [r15]
  4160cb:	mov    rax,QWORD PTR [r13+0x8]
  4160cf:	mov    rcx,QWORD PTR [r13+0x88]
  4160d6:	mov    r9,QWORD PTR [rax]
  4160d9:	mov    r8,QWORD PTR [rax+0x8]
  4160dd:	sub    rsp,0x8
  4160e1:	xor    eax,eax
  4160e3:	lea    rsi,[rip+0x2f4f4]        # 4455de <_IO_stdin_used@@Base+0x175de>
  4160ea:	jmp    4163a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1054>
  4160ef:	sub    rsp,0x8
  4160f3:	xor    eax,eax
  4160f5:	lea    rsi,[rip+0x2f426]        # 445522 <_IO_stdin_used@@Base+0x17522>
  4160fc:	mov    ecx,r9d
  4160ff:	lea    rbx,[rsp+0x128]
  416107:	push   rbx
  416108:	call   406170 <fprintf@plt>
  41610d:	add    rsp,0x10
  416111:	mov    rbx,QWORD PTR [rsp+0x10]
  416116:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  41611b:	movzx  eax,ax
  41611e:	cmp    eax,0x4
  416121:	jne    4168d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
  416127:	mov    rdi,QWORD PTR [r15]
  41612a:	mov    rcx,QWORD PTR [r13+0x88]
  416131:	mov    rax,QWORD PTR [r13+0x8]
  416135:	mov    r9,QWORD PTR [rax]
  416138:	mov    r8,QWORD PTR [rax+0x8]
  41613c:	sub    rsp,0x8
  416140:	xor    eax,eax
  416142:	lea    rsi,[rip+0x2f5ad]        # 4456f6 <_IO_stdin_used@@Base+0x176f6>
  416149:	lea    rbx,[rsp+0x128]
  416151:	push   rbx
  416152:	push   QWORD PTR [r13+0x48]
  416156:	push   r8
  416158:	call   406170 <fprintf@plt>
  41615d:	add    rsp,0x20
  416161:	mov    r12,QWORD PTR [rsp+0x8]
  416166:	mov    rbx,QWORD PTR [rsp+0x10]
  41616b:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416170:	mov    r13,QWORD PTR [rbx+r14*8]
  416174:	test   r13,r13
  416177:	je     416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  41617d:	test   BYTE PTR [r13+0x70],0x4
  416182:	jne    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416188:	mov    rcx,QWORD PTR [r15]
  41618b:	mov    esi,0x5
  416190:	mov    edx,0x1
  416195:	lea    rdi,[rip+0x2f278]        # 445414 <_IO_stdin_used@@Base+0x17414>
  41619c:	call   406210 <fwrite@plt>
  4161a1:	mov    eax,DWORD PTR [r13+0x28]
  4161a5:	add    eax,0xfffffff9
  4161a8:	movzx  ecx,ax
  4161ab:	cmp    ecx,0x8
  4161ae:	ja     416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  4161b4:	movzx  eax,ax
  4161b7:	lea    rcx,[rip+0x2e416]        # 4445d4 <_IO_stdin_used@@Base+0x165d4>
  4161be:	movsxd rax,DWORD PTR [rcx+rax*4]
  4161c2:	add    rax,rcx
  4161c5:	jmp    rax
  4161c7:	movzx  r10d,WORD PTR [r13+0x70]
  4161cc:	test   r10d,0xc00
  4161d3:	je     4163b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1060>
  4161d9:	mov    rdi,QWORD PTR [r15]
  4161dc:	mov    rax,QWORD PTR [r13+0x8]
  4161e0:	mov    rdx,QWORD PTR [r13+0x88]
  4161e7:	mov    r8,QWORD PTR [rax]
  4161ea:	mov    r9,QWORD PTR [rax+0x8]
  4161ee:	shr    r10d,0xa
  4161f2:	not    r10d
  4161f5:	and    r10d,0x1
  4161f9:	sub    rsp,0x8
  4161fd:	xor    eax,eax
  4161ff:	lea    rsi,[rip+0x2f2ce]        # 4454d4 <_IO_stdin_used@@Base+0x174d4>
  416206:	mov    ecx,r9d
  416209:	push   r10
  41620b:	jmp    41656b <__flatcc_fb_gen_c_json_printer@@Base+0x121b>
  416210:	mov    rdi,QWORD PTR [r15]
  416213:	mov    rax,QWORD PTR [r13+0x8]
  416217:	mov    rdx,QWORD PTR [r13+0x88]
  41621e:	mov    r8,QWORD PTR [rax]
  416221:	mov    r9,QWORD PTR [rax+0x8]
  416225:	xor    eax,eax
  416227:	lea    rsi,[rip+0x2f42d]        # 44565b <_IO_stdin_used@@Base+0x1765b>
  41622e:	jmp    416317 <__flatcc_fb_gen_c_json_printer@@Base+0xfc7>
  416233:	mov    rsi,QWORD PTR [r13+0x18]
  416237:	mov    rdi,QWORD PTR [rsi+0x18]
  41623b:	lea    rdx,[rsp+0x120]
  416243:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  416248:	mov    rax,QWORD PTR [r13+0x18]
  41624c:	movzx  ecx,WORD PTR [rax+0x10]
  416250:	cmp    rcx,0x4
  416254:	ja     416921 <__flatcc_fb_gen_c_json_printer@@Base+0x15d1>
  41625a:	lea    rdx,[rip+0x2e397]        # 4445f8 <_IO_stdin_used@@Base+0x165f8>
  416261:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416265:	add    rcx,rdx
  416268:	jmp    rcx
  41626a:	mov    rdi,QWORD PTR [r15]
  41626d:	mov    rax,QWORD PTR [r13+0x8]
  416271:	mov    rdx,QWORD PTR [r13+0x88]
  416278:	mov    r8,QWORD PTR [rax]
  41627b:	mov    r9,QWORD PTR [rax+0x8]
  41627f:	sub    rsp,0x8
  416283:	xor    eax,eax
  416285:	lea    rsi,[rip+0x2f646]        # 4458d2 <_IO_stdin_used@@Base+0x178d2>
  41628c:	jmp    416555 <__flatcc_fb_gen_c_json_printer@@Base+0x1205>
  416291:	mov    eax,DWORD PTR [r13+0x18]
  416295:	add    eax,0xffffffff
  416298:	cmp    eax,0xb
  41629b:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  4162a1:	cdqe   
  4162a3:	lea    rcx,[rip+0x3aa96]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  4162aa:	mov    rdx,QWORD PTR [rcx+rax*8]
  4162ae:	mov    eax,DWORD PTR [r13+0x58]
  4162b2:	lea    ecx,[rax-0x5]
  4162b5:	movzx  ecx,cx
  4162b8:	cmp    ecx,0x2
  4162bb:	jb     416382 <__flatcc_fb_gen_c_json_printer@@Base+0x1032>
  4162c1:	movzx  eax,ax
  4162c4:	cmp    eax,0x3
  4162c7:	je     4164d6 <__flatcc_fb_gen_c_json_printer@@Base+0x1186>
  4162cd:	cmp    eax,0x4
  4162d0:	jne    41696a <__flatcc_fb_gen_c_json_printer@@Base+0x161a>
  4162d6:	mov    rdi,QWORD PTR [r15]
  4162d9:	mov    rcx,QWORD PTR [r13+0x88]
  4162e0:	mov    rax,QWORD PTR [r13+0x8]
  4162e4:	mov    r9,QWORD PTR [rax]
  4162e7:	mov    r8,QWORD PTR [rax+0x8]
  4162eb:	xor    eax,eax
  4162ed:	lea    rsi,[rip+0x2f164]        # 445458 <_IO_stdin_used@@Base+0x17458>
  4162f4:	jmp    4163a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1050>
  4162f9:	mov    rdi,QWORD PTR [r15]
  4162fc:	mov    rax,QWORD PTR [r13+0x8]
  416300:	mov    rdx,QWORD PTR [r13+0x88]
  416307:	mov    r8,QWORD PTR [rax]
  41630a:	mov    r9,QWORD PTR [rax+0x8]
  41630e:	xor    eax,eax
  416310:	lea    rsi,[rip+0x2f307]        # 44561e <_IO_stdin_used@@Base+0x1761e>
  416317:	mov    ecx,r9d
  41631a:	call   406170 <fprintf@plt>
  41631f:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416324:	mov    rsi,QWORD PTR [r13+0x18]
  416328:	mov    rdi,QWORD PTR [rsi+0x18]
  41632c:	lea    rdx,[rsp+0x120]
  416334:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  416339:	mov    rax,QWORD PTR [r13+0x18]
  41633d:	movzx  ecx,WORD PTR [rax+0x10]
  416341:	cmp    rcx,0x4
  416345:	ja     4169b3 <__flatcc_fb_gen_c_json_printer@@Base+0x1663>
  41634b:	lea    rdx,[rip+0x2e2ba]        # 44460c <_IO_stdin_used@@Base+0x1660c>
  416352:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416356:	add    rcx,rdx
  416359:	jmp    rcx
  41635b:	mov    rdi,QWORD PTR [r15]
  41635e:	mov    rax,QWORD PTR [r13+0x8]
  416362:	mov    rdx,QWORD PTR [r13+0x88]
  416369:	mov    r8,QWORD PTR [rax]
  41636c:	mov    r9,QWORD PTR [rax+0x8]
  416370:	sub    rsp,0x8
  416374:	xor    eax,eax
  416376:	lea    rsi,[rip+0x2f45b]        # 4457d8 <_IO_stdin_used@@Base+0x177d8>
  41637d:	jmp    416555 <__flatcc_fb_gen_c_json_printer@@Base+0x1205>
  416382:	mov    rdi,QWORD PTR [r15]
  416385:	mov    rcx,QWORD PTR [r13+0x88]
  41638c:	mov    rax,QWORD PTR [r13+0x8]
  416390:	mov    r9,QWORD PTR [rax]
  416393:	mov    r8,QWORD PTR [rax+0x8]
  416397:	xor    eax,eax
  416399:	lea    rsi,[rip+0x2f07a]        # 44541a <_IO_stdin_used@@Base+0x1741a>
  4163a0:	push   QWORD PTR [r13+0x48]
  4163a4:	push   r8
  4163a6:	call   406170 <fprintf@plt>
  4163ab:	jmp    416570 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
  4163b0:	mov    rsi,QWORD PTR [r13+0x90]
  4163b7:	test   rsi,rsi
  4163ba:	je     4160ab <__flatcc_fb_gen_c_json_printer@@Base+0xd5b>
  4163c0:	mov    rdi,QWORD PTR [rsi+0x18]
  4163c4:	lea    rax,[rsp+0x120]
  4163cc:	mov    rdx,rax
  4163cf:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4163d4:	mov    rax,QWORD PTR [r13+0x90]
  4163db:	cmp    WORD PTR [rax+0x10],0x0
  4163e0:	mov    rdi,QWORD PTR [r15]
  4163e3:	mov    rax,QWORD PTR [r13+0x8]
  4163e7:	mov    rdx,QWORD PTR [r13+0x88]
  4163ee:	mov    r8,QWORD PTR [rax]
  4163f1:	mov    r9,QWORD PTR [rax+0x8]
  4163f5:	je     4160ef <__flatcc_fb_gen_c_json_printer@@Base+0xd9f>
  4163fb:	sub    rsp,0x8
  4163ff:	xor    eax,eax
  416401:	lea    rsi,[rip+0x2f177]        # 44557f <_IO_stdin_used@@Base+0x1757f>
  416408:	jmp    4160fc <__flatcc_fb_gen_c_json_printer@@Base+0xdac>
  41640d:	mov    rdi,QWORD PTR [r15]
  416410:	mov    rax,QWORD PTR [r13+0x8]
  416414:	mov    rdx,QWORD PTR [r13+0x88]
  41641b:	mov    r8,QWORD PTR [rax]
  41641e:	mov    r9,QWORD PTR [rax+0x8]
  416422:	xor    eax,eax
  416424:	lea    rsi,[rip+0x2f5bc]        # 4459e7 <_IO_stdin_used@@Base+0x179e7>
  41642b:	jmp    416525 <__flatcc_fb_gen_c_json_printer@@Base+0x11d5>
  416430:	mov    rdi,QWORD PTR [r15]
  416433:	mov    rdx,QWORD PTR [r13+0x88]
  41643a:	mov    rax,QWORD PTR [r13+0x8]
  41643e:	mov    r8,QWORD PTR [rax]
  416441:	mov    r9,QWORD PTR [rax+0x8]
  416445:	xor    eax,eax
  416447:	lea    rsi,[rip+0x2f53a]        # 445988 <_IO_stdin_used@@Base+0x17988>
  41644e:	mov    ecx,r9d
  416451:	lea    rbx,[rsp+0x120]
  416459:	push   rbx
  41645a:	mov    rbx,QWORD PTR [rsp+0x18]
  41645f:	mov    r12,QWORD PTR [rsp+0x10]
  416464:	push   QWORD PTR [r13+0x80]
  41646b:	jmp    41656b <__flatcc_fb_gen_c_json_printer@@Base+0x121b>
  416470:	add    eax,0xffffffff
  416473:	cmp    eax,0xb
  416476:	jae    41688f <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  41647c:	cdqe   
  41647e:	lea    rcx,[rip+0x3a8bb]        # 450d40 <fb_value_set_deleted@@Base+0x62e0>
  416485:	mov    rdx,QWORD PTR [rcx+rax*8]
  416489:	mov    rdi,QWORD PTR [r15]
  41648c:	mov    rax,QWORD PTR [r13+0x8]
  416490:	mov    rcx,QWORD PTR [r13+0x88]
  416497:	mov    r9,QWORD PTR [rax]
  41649a:	mov    r8,QWORD PTR [rax+0x8]
  41649e:	sub    rsp,0x8
  4164a2:	xor    eax,eax
  4164a4:	lea    rsi,[rip+0x2f47f]        # 44592a <_IO_stdin_used@@Base+0x1792a>
  4164ab:	lea    rbx,[rsp+0x128]
  4164b3:	push   rbx
  4164b4:	mov    r12,QWORD PTR [rsp+0x18]
  4164b9:	push   QWORD PTR [r12+0xb8]
  4164c1:	push   r8
  4164c3:	call   406170 <fprintf@plt>
  4164c8:	add    rsp,0x20
  4164cc:	mov    rbx,QWORD PTR [rsp+0x10]
  4164d1:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  4164d6:	mov    rdi,QWORD PTR [r15]
  4164d9:	mov    rcx,QWORD PTR [r13+0x88]
  4164e0:	mov    rax,QWORD PTR [r13+0x8]
  4164e4:	mov    r9,QWORD PTR [rax]
  4164e7:	mov    r8,QWORD PTR [rax+0x8]
  4164eb:	vmovsd xmm0,QWORD PTR [r13+0x48]
  4164f1:	sub    rsp,0x8
  4164f5:	mov    al,0x1
  4164f7:	lea    rsi,[rip+0x2ef98]        # 445496 <_IO_stdin_used@@Base+0x17496>
  4164fe:	push   r8
  416500:	call   406170 <fprintf@plt>
  416505:	jmp    416570 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
  416507:	mov    rdi,QWORD PTR [r15]
  41650a:	mov    rax,QWORD PTR [r13+0x8]
  41650e:	mov    rdx,QWORD PTR [r13+0x88]
  416515:	mov    r8,QWORD PTR [rax]
  416518:	mov    r9,QWORD PTR [rax+0x8]
  41651c:	xor    eax,eax
  41651e:	lea    rsi,[rip+0x2f304]        # 445829 <_IO_stdin_used@@Base+0x17829>
  416525:	mov    ecx,r9d
  416528:	lea    rbx,[rsp+0x120]
  416530:	push   rbx
  416531:	jmp    416560 <__flatcc_fb_gen_c_json_printer@@Base+0x1210>
  416533:	mov    rdi,QWORD PTR [r15]
  416536:	mov    rax,QWORD PTR [r13+0x8]
  41653a:	mov    rdx,QWORD PTR [r13+0x88]
  416541:	mov    r8,QWORD PTR [rax]
  416544:	mov    r9,QWORD PTR [rax+0x8]
  416548:	sub    rsp,0x8
  41654c:	xor    eax,eax
  41654e:	lea    rsi,[rip+0x2f230]        # 445785 <_IO_stdin_used@@Base+0x17785>
  416555:	mov    ecx,r9d
  416558:	lea    rbx,[rsp+0x128]
  416560:	push   rbx
  416561:	mov    rbx,QWORD PTR [rsp+0x20]
  416566:	mov    r12,QWORD PTR [rsp+0x18]
  41656b:	call   406170 <fprintf@plt>
  416570:	add    rsp,0x10
  416574:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41657e:	xchg   ax,ax
  416580:	add    r14,0x1
  416584:	cmp    r14,QWORD PTR [r12+0xa8]
  41658c:	jb     416170 <__flatcc_fb_gen_c_json_printer@@Base+0xe20>
  416592:	mov    rcx,QWORD PTR [r15]
  416595:	mov    esi,0x4
  41659a:	mov    edx,0x1
  41659f:	lea    rdi,[rip+0x2f5c8]        # 445b6e <_IO_stdin_used@@Base+0x17b6e>
  4165a6:	call   406210 <fwrite@plt>
  4165ab:	mov    rdi,QWORD PTR [r15]
  4165ae:	xor    eax,eax
  4165b0:	lea    rsi,[rip+0x2f4e7]        # 445a9e <_IO_stdin_used@@Base+0x17a9e>
  4165b7:	lea    r14,[rsp+0x20]
  4165bc:	mov    rdx,r14
  4165bf:	mov    rcx,r14
  4165c2:	call   406170 <fprintf@plt>
  4165c7:	test   rbx,rbx
  4165ca:	je     4165d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
  4165cc:	mov    rdi,rbx
  4165cf:	call   406040 <free@plt>
  4165d4:	mov    r12,QWORD PTR [r12]
  4165d8:	test   r12,r12
  4165db:	jne    415f00 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4165e1:	mov    rax,QWORD PTR [rsp+0x18]
  4165e6:	mov    rax,QWORD PTR [rax+0xd8]
  4165ed:	mov    rsi,QWORD PTR [rax+0x58]
  4165f1:	test   rsi,rsi
  4165f4:	je     416704 <__flatcc_fb_gen_c_json_printer@@Base+0x13b4>
  4165fa:	movzx  eax,WORD PTR [rsi+0x10]
  4165fe:	cmp    eax,0x1
  416601:	ja     416704 <__flatcc_fb_gen_c_json_printer@@Base+0x13b4>
  416607:	vxorps xmm0,xmm0,xmm0
  41660b:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416614:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41661d:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  416626:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41662f:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416635:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41663b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416641:	mov    QWORD PTR [rsp+0x100],0x0
  41664d:	mov    rdi,QWORD PTR [rsi+0x18]
  416651:	lea    r14,[rsp+0x20]
  416656:	mov    rdx,r14
  416659:	vzeroupper 
  41665c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  416661:	mov    rbx,QWORD PTR [rsp+0x18]
  416666:	mov    rdi,QWORD PTR [rbx+0xd0]
  41666d:	mov    rax,QWORD PTR [rbx+0xd8]
  416674:	mov    rdx,QWORD PTR [rax+0x110]
  41667b:	lea    rsi,[rip+0x2f4f1]        # 445b73 <_IO_stdin_used@@Base+0x17b73>
  416682:	xor    eax,eax
  416684:	call   406170 <fprintf@plt>
  416689:	mov    rdi,QWORD PTR [rbx+0xd0]
  416690:	lea    rsi,[rip+0x2f532]        # 445bc9 <_IO_stdin_used@@Base+0x17bc9>
  416697:	xor    eax,eax
  416699:	mov    rdx,r14
  41669c:	call   406170 <fprintf@plt>
  4166a1:	mov    rcx,QWORD PTR [rbx+0xd0]
  4166a8:	mov    rax,QWORD PTR [rbx+0xd8]
  4166af:	movzx  edx,WORD PTR [rax+0x20]
  4166b3:	cmp    edx,0x2
  4166b6:	jne    4166d5 <__flatcc_fb_gen_c_json_printer@@Base+0x1385>
  4166b8:	mov    edx,DWORD PTR [rax+0x18]
  4166bb:	mov    rbx,QWORD PTR [rax+0x10]
  4166bf:	lea    rsi,[rip+0x2f5b9]        # 445c7f <_IO_stdin_used@@Base+0x17c7f>
  4166c6:	xor    eax,eax
  4166c8:	mov    rdi,rcx
  4166cb:	mov    rcx,rbx
  4166ce:	call   406170 <fprintf@plt>
  4166d3:	jmp    4166eb <__flatcc_fb_gen_c_json_printer@@Base+0x139b>
  4166d5:	lea    rdi,[rip+0x2f5ad]        # 445c89 <_IO_stdin_used@@Base+0x17c89>
  4166dc:	mov    esi,0x3
  4166e1:	mov    edx,0x1
  4166e6:	call   406210 <fwrite@plt>
  4166eb:	mov    rcx,QWORD PTR [r15]
  4166ee:	lea    rdi,[rip+0x2f47a]        # 445b6f <_IO_stdin_used@@Base+0x17b6f>
  4166f5:	mov    esi,0x3
  4166fa:	mov    edx,0x1
  4166ff:	call   406210 <fwrite@plt>
  416704:	mov    rax,QWORD PTR [rsp+0x18]
  416709:	mov    rax,QWORD PTR [rax+0xe0]
  416710:	cmp    DWORD PTR [rax+0xac],0x0
  416717:	je     416732 <__flatcc_fb_gen_c_json_printer@@Base+0x13e2>
  416719:	mov    rcx,QWORD PTR [r15]
  41671c:	lea    rdi,[rip+0x1ebb8]        # 4352db <_IO_stdin_used@@Base+0x72db>
  416723:	mov    esi,0x24
  416728:	mov    edx,0x1
  41672d:	call   406210 <fwrite@plt>
  416732:	mov    rax,QWORD PTR [rsp+0x18]
  416737:	mov    rdi,QWORD PTR [rax+0xd0]
  41673e:	mov    rax,QWORD PTR [rax+0xd8]
  416745:	mov    rdx,QWORD PTR [rax+0x118]
  41674c:	lea    rsi,[rip+0x2f53a]        # 445c8d <_IO_stdin_used@@Base+0x17c8d>
  416753:	xor    eax,eax
  416755:	call   406170 <fprintf@plt>
  41675a:	xor    eax,eax
  41675c:	lea    rsp,[rbp-0x28]
  416760:	pop    rbx
  416761:	pop    r12
  416763:	pop    r13
  416765:	pop    r14
  416767:	pop    r15
  416769:	pop    rbp
  41676a:	ret    
  41676b:	mov    rax,QWORD PTR [rip+0x3a886]        # 450ff8 <stderr@GLIBC_2.2.5>
  416772:	mov    rdi,QWORD PTR [rax]
  416775:	lea    rsi,[rip+0x18ca8]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41677c:	lea    rbx,[rip+0x2e454]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  416783:	lea    r8,[rip+0x2e8a8]        # 445032 <_IO_stdin_used@@Base+0x17032>
  41678a:	mov    ecx,0xfb
  41678f:	xor    eax,eax
  416791:	mov    rdx,rbx
  416794:	call   406170 <fprintf@plt>
  416799:	lea    rdi,[rip+0x29beb]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4167a0:	lea    rcx,[rip+0x2e8b2]        # 445059 <_IO_stdin_used@@Base+0x17059>
  4167a7:	mov    edx,0xfb
  4167ac:	mov    rsi,rbx
  4167af:	call   4060f0 <__assert_fail@plt>
  4167b4:	mov    rax,QWORD PTR [rip+0x3a83d]        # 450ff8 <stderr@GLIBC_2.2.5>
  4167bb:	mov    rdi,QWORD PTR [rax]
  4167be:	lea    rsi,[rip+0x18c5f]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4167c5:	lea    rbx,[rip+0x2e40b]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  4167cc:	lea    r8,[rip+0x2e474]        # 444c47 <_IO_stdin_used@@Base+0x16c47>
  4167d3:	mov    ecx,0x9d
  4167d8:	xor    eax,eax
  4167da:	mov    rdx,rbx
  4167dd:	call   406170 <fprintf@plt>
  4167e2:	lea    rdi,[rip+0x29ba2]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4167e9:	lea    rcx,[rip+0x2e491]        # 444c81 <_IO_stdin_used@@Base+0x16c81>
  4167f0:	mov    edx,0x9d
  4167f5:	mov    rsi,rbx
  4167f8:	call   4060f0 <__assert_fail@plt>
  4167fd:	mov    rax,QWORD PTR [rip+0x3a7f4]        # 450ff8 <stderr@GLIBC_2.2.5>
  416804:	mov    rdi,QWORD PTR [rax]
  416807:	lea    rsi,[rip+0x18c16]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41680e:	lea    rbx,[rip+0x2e3c2]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  416815:	lea    r8,[rip+0x2e42b]        # 444c47 <_IO_stdin_used@@Base+0x16c47>
  41681c:	mov    ecx,0x86
  416821:	xor    eax,eax
  416823:	mov    rdx,rbx
  416826:	call   406170 <fprintf@plt>
  41682b:	lea    rdi,[rip+0x29b59]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  416832:	lea    rcx,[rip+0x2e448]        # 444c81 <_IO_stdin_used@@Base+0x16c81>
  416839:	mov    edx,0x86
  41683e:	mov    rsi,rbx
  416841:	call   4060f0 <__assert_fail@plt>
  416846:	mov    rax,QWORD PTR [rip+0x3a7ab]        # 450ff8 <stderr@GLIBC_2.2.5>
  41684d:	mov    rdi,QWORD PTR [rax]
  416850:	lea    rsi,[rip+0x18bcd]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  416857:	lea    rbx,[rip+0x2e379]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  41685e:	lea    r8,[rip+0x2e7cd]        # 445032 <_IO_stdin_used@@Base+0x17032>
  416865:	mov    ecx,0xf0
  41686a:	xor    eax,eax
  41686c:	mov    rdx,rbx
  41686f:	call   406170 <fprintf@plt>
  416874:	lea    rdi,[rip+0x29b10]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  41687b:	lea    rcx,[rip+0x2e7d7]        # 445059 <_IO_stdin_used@@Base+0x17059>
  416882:	mov    edx,0xf0
  416887:	mov    rsi,rbx
  41688a:	call   4060f0 <__assert_fail@plt>
  41688f:	mov    rax,QWORD PTR [rip+0x3a762]        # 450ff8 <stderr@GLIBC_2.2.5>
  416896:	mov    rdi,QWORD PTR [rax]
  416899:	lea    rsi,[rip+0x18b84]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4168a0:	lea    rbx,[rip+0x1f32f]        # 435bd6 <_IO_stdin_used@@Base+0x7bd6>
  4168a7:	lea    r8,[rip+0x1f38b]        # 435c39 <_IO_stdin_used@@Base+0x7c39>
  4168ae:	mov    ecx,0x60
  4168b3:	xor    eax,eax
  4168b5:	mov    rdx,rbx
  4168b8:	call   406170 <fprintf@plt>
  4168bd:	lea    rdi,[rip+0x29ac7]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4168c4:	lea    rcx,[rip+0x1fc9e]        # 436569 <_IO_stdin_used@@Base+0x8569>
  4168cb:	mov    edx,0x60
  4168d0:	mov    rsi,rbx
  4168d3:	call   4060f0 <__assert_fail@plt>
  4168d8:	mov    rax,QWORD PTR [rip+0x3a719]        # 450ff8 <stderr@GLIBC_2.2.5>
  4168df:	mov    rdi,QWORD PTR [rax]
  4168e2:	lea    rsi,[rip+0x18b3b]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4168e9:	lea    rbx,[rip+0x2e2e7]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  4168f0:	lea    r8,[rip+0x2ee56]        # 44574d <_IO_stdin_used@@Base+0x1774d>
  4168f7:	mov    ecx,0x1e3
  4168fc:	xor    eax,eax
  4168fe:	mov    rdx,rbx
  416901:	call   406170 <fprintf@plt>
  416906:	lea    rdi,[rip+0x29a7e]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  41690d:	lea    rcx,[rip+0x2ea56]        # 44536a <_IO_stdin_used@@Base+0x1736a>
  416914:	mov    edx,0x1e3
  416919:	mov    rsi,rbx
  41691c:	call   4060f0 <__assert_fail@plt>
  416921:	mov    rax,QWORD PTR [rip+0x3a6d0]        # 450ff8 <stderr@GLIBC_2.2.5>
  416928:	mov    rdi,QWORD PTR [rax]
  41692b:	lea    rsi,[rip+0x18af2]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  416932:	lea    rbx,[rip+0x2e29e]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  416939:	lea    r8,[rip+0x2f119]        # 445a59 <_IO_stdin_used@@Base+0x17a59>
  416940:	mov    ecx,0x21f
  416945:	xor    eax,eax
  416947:	mov    rdx,rbx
  41694a:	call   406170 <fprintf@plt>
  41694f:	lea    rdi,[rip+0x29a35]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  416956:	lea    rcx,[rip+0x2ea0d]        # 44536a <_IO_stdin_used@@Base+0x1736a>
  41695d:	mov    edx,0x21f
  416962:	mov    rsi,rbx
  416965:	call   4060f0 <__assert_fail@plt>
  41696a:	mov    rax,QWORD PTR [rip+0x3a687]        # 450ff8 <stderr@GLIBC_2.2.5>
  416971:	mov    rdi,QWORD PTR [rax]
  416974:	lea    rsi,[rip+0x18aa9]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  41697b:	lea    rbx,[rip+0x2e255]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  416982:	lea    r8,[rip+0x2cc49]        # 4435d2 <_IO_stdin_used@@Base+0x155d2>
  416989:	mov    ecx,0x196
  41698e:	xor    eax,eax
  416990:	mov    rdx,rbx
  416993:	call   406170 <fprintf@plt>
  416998:	lea    rdi,[rip+0x299ec]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  41699f:	lea    rcx,[rip+0x2e9c4]        # 44536a <_IO_stdin_used@@Base+0x1736a>
  4169a6:	mov    edx,0x196
  4169ab:	mov    rsi,rbx
  4169ae:	call   4060f0 <__assert_fail@plt>
  4169b3:	mov    rax,QWORD PTR [rip+0x3a63e]        # 450ff8 <stderr@GLIBC_2.2.5>
  4169ba:	mov    rdi,QWORD PTR [rax]
  4169bd:	lea    rsi,[rip+0x18a60]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  4169c4:	lea    rbx,[rip+0x2e20c]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  4169cb:	lea    r8,[rip+0x2eec2]        # 445894 <_IO_stdin_used@@Base+0x17894>
  4169d2:	mov    ecx,0x1f8
  4169d7:	xor    eax,eax
  4169d9:	mov    rdx,rbx
  4169dc:	call   406170 <fprintf@plt>
  4169e1:	lea    rdi,[rip+0x299a3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4169e8:	lea    rcx,[rip+0x2e97b]        # 44536a <_IO_stdin_used@@Base+0x1736a>
  4169ef:	mov    edx,0x1f8
  4169f4:	mov    rsi,rbx
  4169f7:	call   4060f0 <__assert_fail@plt>
  4169fc:	mov    rax,QWORD PTR [rip+0x3a5f5]        # 450ff8 <stderr@GLIBC_2.2.5>
  416a03:	mov    rdi,QWORD PTR [rax]
  416a06:	lea    rsi,[rip+0x18a17]        # 42f424 <_IO_stdin_used@@Base+0x1424>
  416a0d:	lea    rbx,[rip+0x2e1c3]        # 444bd7 <_IO_stdin_used@@Base+0x16bd7>
  416a14:	lea    r8,[rip+0x2e925]        # 445340 <_IO_stdin_used@@Base+0x17340>
  416a1b:	mov    ecx,0x169
  416a20:	xor    eax,eax
  416a22:	mov    rdx,rbx
  416a25:	call   406170 <fprintf@plt>
  416a2a:	lea    rdi,[rip+0x2995a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  416a31:	lea    rcx,[rip+0x2e932]        # 44536a <_IO_stdin_used@@Base+0x1736a>
  416a38:	mov    edx,0x169
  416a3d:	mov    rsi,rbx
  416a40:	call   4060f0 <__assert_fail@plt>
  416a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a4f:	nop

0000000000416a50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  416a50:	push   r15
  416a52:	push   r14
  416a54:	push   r13
  416a56:	push   r12
  416a58:	push   rbx
  416a59:	sub    rsp,0x190
  416a60:	mov    r14,rcx
  416a63:	mov    r15,rdx
  416a66:	mov    r12,rsi
  416a69:	mov    rbx,rdi
  416a6c:	lea    r13,[rsp+0x8]
  416a71:	mov    rdi,r13
  416a74:	call   427110 <flatcc_builder_init@@Base>
  416a79:	mov    rdi,r13
  416a7c:	mov    rsi,rbx
  416a7f:	mov    rdx,r12
  416a82:	call   416ad0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  416a87:	mov    rdx,QWORD PTR [r14]
  416a8a:	mov    rdi,r13
  416a8d:	mov    rsi,r15
  416a90:	call   42b790 <flatcc_builder_copy_buffer@@Base>
  416a95:	test   rax,rax
  416a98:	je     416aa2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x52>
  416a9a:	mov    rdi,r15
  416a9d:	call   417a50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  416aa2:	lea    rbx,[rsp+0x8]
  416aa7:	mov    rdi,rbx
  416aaa:	call   42b690 <flatcc_builder_get_buffer_size@@Base>
  416aaf:	mov    QWORD PTR [r14],rax
  416ab2:	mov    rdi,rbx
  416ab5:	call   4274d0 <flatcc_builder_clear@@Base>
  416aba:	mov    rax,r15
  416abd:	add    rsp,0x190
  416ac4:	pop    rbx
  416ac5:	pop    r12
  416ac7:	pop    r13
  416ac9:	pop    r14
  416acb:	pop    r15
  416acd:	ret    
  416ace:	xchg   ax,ax
  416ad0:	push   rbp
  416ad1:	mov    rbp,rsp
  416ad4:	push   r15
  416ad6:	push   r14
  416ad8:	push   r13
  416ada:	push   r12
  416adc:	push   rbx
  416add:	and    rsp,0xffffffffffffffe0
  416ae1:	sub    rsp,0x100
  416ae8:	mov    QWORD PTR [rsp+0x30],rsi
  416aed:	mov    eax,DWORD PTR [rsi+0xd8]
  416af3:	mov    rcx,QWORD PTR [rdx+0x68]
  416af7:	vxorps xmm0,xmm0,xmm0
  416afb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416b01:	mov    QWORD PTR [rsp+0x28],rdi
  416b06:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416b0c:	mov    QWORD PTR [rsp+0x80],0x0
  416b18:	mov    DWORD PTR [rsp+0x40],eax
  416b1c:	mov    QWORD PTR [rsp+0xc0],rdx
  416b24:	mov    QWORD PTR [rsp+0x88],rdx
  416b2c:	lea    rsi,[rip+0x138d]        # 417ec0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  416b33:	lea    rdx,[rsp+0x40]
  416b38:	mov    QWORD PTR [rsp+0x38],rcx
  416b3d:	mov    rdi,rcx
  416b40:	vzeroupper 
  416b43:	call   41a8e0 <fb_scope_table_visit@@Base>
  416b48:	movsxd r15,DWORD PTR [rsp+0x44]
  416b4d:	mov    esi,0x10
  416b52:	mov    rdi,r15
  416b55:	call   406140 <calloc@plt>
  416b5a:	mov    r13,rax
  416b5d:	mov    QWORD PTR [rsp+0x58],rax
  416b62:	mov    ebx,DWORD PTR [rsp+0x48]
  416b66:	movsxd rdi,ebx
  416b69:	mov    esi,0x10
  416b6e:	call   406140 <calloc@plt>
  416b73:	mov    r12,rax
  416b76:	mov    QWORD PTR [rsp+0x60],rax
  416b7b:	mov    r14,QWORD PTR [rsp+0x50]
  416b80:	mov    rdi,r14
  416b83:	call   4061a0 <malloc@plt>
  416b88:	mov    QWORD PTR [rsp+0x68],rax
  416b8d:	mov    QWORD PTR [rsp+0x70],r13
  416b92:	mov    QWORD PTR [rsp+0x78],r12
  416b97:	mov    QWORD PTR [rsp+0x80],rax
  416b9f:	test   r15,r15
  416ba2:	jle    416ba9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x159>
  416ba4:	test   r13,r13
  416ba7:	je     416bce <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17e>
  416ba9:	test   ebx,ebx
  416bab:	jle    416bb2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x162>
  416bad:	test   r12,r12
  416bb0:	je     416bbc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
  416bb2:	test   r14,r14
  416bb5:	je     416c19 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1c9>
  416bb7:	test   rax,rax
  416bba:	jne    416c19 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1c9>
  416bbc:	test   r13,r13
  416bbf:	je     416bce <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17e>
  416bc1:	mov    rdi,r13
  416bc4:	call   406040 <free@plt>
  416bc9:	mov    r12,QWORD PTR [rsp+0x60]
  416bce:	test   r12,r12
  416bd1:	je     416bdb <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18b>
  416bd3:	mov    rdi,r12
  416bd6:	call   406040 <free@plt>
  416bdb:	mov    rdi,QWORD PTR [rsp+0x68]
  416be0:	test   rdi,rdi
  416be3:	je     416bea <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  416be5:	call   406040 <free@plt>
  416bea:	vxorps xmm0,xmm0,xmm0
  416bee:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  416bf4:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416bfa:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416c00:	mov    ebx,0xffffffff
  416c05:	mov    eax,ebx
  416c07:	lea    rsp,[rbp-0x28]
  416c0b:	pop    rbx
  416c0c:	pop    r12
  416c0e:	pop    r13
  416c10:	pop    r14
  416c12:	pop    r15
  416c14:	pop    rbp
  416c15:	vzeroupper 
  416c18:	ret    
  416c19:	lea    rsi,[rip+0x12c0]        # 417ee0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
  416c20:	lea    rdx,[rsp+0x40]
  416c25:	mov    rdi,QWORD PTR [rsp+0x38]
  416c2a:	call   41a8e0 <fb_scope_table_visit@@Base>
  416c2f:	mov    r15,QWORD PTR [rsp+0x58]
  416c34:	movsxd rbx,DWORD PTR [rsp+0x44]
  416c39:	lea    rcx,[rip+0x1480]        # 4180c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  416c40:	mov    edx,0x10
  416c45:	mov    rdi,r15
  416c48:	mov    rsi,rbx
  416c4b:	call   406080 <qsort@plt>
  416c50:	test   rbx,rbx
  416c53:	mov    r14,QWORD PTR [rsp+0xc0]
  416c5b:	jle    416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  416c61:	mov    edx,ebx
  416c63:	lea    rcx,[rdx-0x1]
  416c67:	mov    eax,edx
  416c69:	and    eax,0x7
  416c6c:	cmp    rcx,0x7
  416c70:	jae    416c82 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x232>
  416c72:	xor    ecx,ecx
  416c74:	test   rax,rax
  416c77:	jne    416d15 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2c5>
  416c7d:	jmp    416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  416c82:	lea    rsi,[r15+0x70]
  416c86:	sub    rdx,rax
  416c89:	xor    ecx,ecx
  416c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  416c90:	mov    rdi,QWORD PTR [rsi-0x70]
  416c94:	mov    QWORD PTR [rdi+0xc8],rcx
  416c9b:	mov    rdi,QWORD PTR [rsi-0x60]
  416c9f:	lea    rbx,[rcx+0x1]
  416ca3:	mov    QWORD PTR [rdi+0xc8],rbx
  416caa:	mov    rdi,QWORD PTR [rsi-0x50]
  416cae:	lea    rbx,[rcx+0x2]
  416cb2:	mov    QWORD PTR [rdi+0xc8],rbx
  416cb9:	mov    rdi,QWORD PTR [rsi-0x40]
  416cbd:	lea    rbx,[rcx+0x3]
  416cc1:	mov    QWORD PTR [rdi+0xc8],rbx
  416cc8:	mov    rdi,QWORD PTR [rsi-0x30]
  416ccc:	lea    rbx,[rcx+0x4]
  416cd0:	mov    QWORD PTR [rdi+0xc8],rbx
  416cd7:	mov    rdi,QWORD PTR [rsi-0x20]
  416cdb:	lea    rbx,[rcx+0x5]
  416cdf:	mov    QWORD PTR [rdi+0xc8],rbx
  416ce6:	mov    rdi,QWORD PTR [rsi-0x10]
  416cea:	lea    rbx,[rcx+0x6]
  416cee:	mov    QWORD PTR [rdi+0xc8],rbx
  416cf5:	mov    rdi,QWORD PTR [rsi]
  416cf8:	lea    rbx,[rcx+0x7]
  416cfc:	mov    QWORD PTR [rdi+0xc8],rbx
  416d03:	add    rcx,0x8
  416d07:	sub    rsi,0xffffffffffffff80
  416d0b:	cmp    rdx,rcx
  416d0e:	jne    416c90 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x240>
  416d10:	test   rax,rax
  416d13:	je     416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  416d15:	mov    rdx,rcx
  416d18:	shl    rdx,0x4
  416d1c:	add    r15,rdx
  416d1f:	neg    rax
  416d22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d2c:	nop    DWORD PTR [rax+0x0]
  416d30:	mov    rdx,QWORD PTR [r15]
  416d33:	mov    QWORD PTR [rdx+0xc8],rcx
  416d3a:	add    rcx,0x1
  416d3e:	add    r15,0x10
  416d42:	add    rax,0x1
  416d46:	jne    416d30 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2e0>
  416d48:	mov    r15,QWORD PTR [rsp+0x60]
  416d4d:	movsxd rbx,DWORD PTR [rsp+0x48]
  416d52:	lea    rcx,[rip+0x1367]        # 4180c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  416d59:	mov    edx,0x10
  416d5e:	mov    rdi,r15
  416d61:	mov    rsi,rbx
  416d64:	call   406080 <qsort@plt>
  416d69:	test   rbx,rbx
  416d6c:	jle    416e58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  416d72:	mov    edx,ebx
  416d74:	lea    rcx,[rdx-0x1]
  416d78:	mov    eax,edx
  416d7a:	and    eax,0x7
  416d7d:	cmp    rcx,0x7
  416d81:	jae    416d93 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x343>
  416d83:	xor    ecx,ecx
  416d85:	test   rax,rax
  416d88:	jne    416e25 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d5>
  416d8e:	jmp    416e58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  416d93:	lea    rsi,[r15+0x70]
  416d97:	sub    rdx,rax
  416d9a:	xor    ecx,ecx
  416d9c:	nop    DWORD PTR [rax+0x0]
  416da0:	mov    rdi,QWORD PTR [rsi-0x70]
  416da4:	mov    QWORD PTR [rdi+0xc8],rcx
  416dab:	mov    rdi,QWORD PTR [rsi-0x60]
  416daf:	lea    rbx,[rcx+0x1]
  416db3:	mov    QWORD PTR [rdi+0xc8],rbx
  416dba:	mov    rdi,QWORD PTR [rsi-0x50]
  416dbe:	lea    rbx,[rcx+0x2]
  416dc2:	mov    QWORD PTR [rdi+0xc8],rbx
  416dc9:	mov    rdi,QWORD PTR [rsi-0x40]
  416dcd:	lea    rbx,[rcx+0x3]
  416dd1:	mov    QWORD PTR [rdi+0xc8],rbx
  416dd8:	mov    rdi,QWORD PTR [rsi-0x30]
  416ddc:	lea    rbx,[rcx+0x4]
  416de0:	mov    QWORD PTR [rdi+0xc8],rbx
  416de7:	mov    rdi,QWORD PTR [rsi-0x20]
  416deb:	lea    rbx,[rcx+0x5]
  416def:	mov    QWORD PTR [rdi+0xc8],rbx
  416df6:	mov    rdi,QWORD PTR [rsi-0x10]
  416dfa:	lea    rbx,[rcx+0x6]
  416dfe:	mov    QWORD PTR [rdi+0xc8],rbx
  416e05:	mov    rdi,QWORD PTR [rsi]
  416e08:	lea    rbx,[rcx+0x7]
  416e0c:	mov    QWORD PTR [rdi+0xc8],rbx
  416e13:	add    rcx,0x8
  416e17:	sub    rsi,0xffffffffffffff80
  416e1b:	cmp    rdx,rcx
  416e1e:	jne    416da0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
  416e20:	test   rax,rax
  416e23:	je     416e58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  416e25:	mov    rdx,rcx
  416e28:	shl    rdx,0x4
  416e2c:	add    r15,rdx
  416e2f:	neg    rax
  416e32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e3c:	nop    DWORD PTR [rax+0x0]
  416e40:	mov    rdx,QWORD PTR [r15]
  416e43:	mov    QWORD PTR [rdx+0xc8],rcx
  416e4a:	add    rcx,0x1
  416e4e:	add    r15,0x10
  416e52:	add    rax,0x1
  416e56:	jne    416e40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f0>
  416e58:	movsxd rdi,DWORD PTR [rsp+0x44]
  416e5d:	test   rdi,rdi
  416e60:	jle    416e7e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x42e>
  416e62:	shl    rdi,0x2
  416e66:	call   4061a0 <malloc@plt>
  416e6b:	test   rax,rax
  416e6e:	mov    rbx,QWORD PTR [rsp+0x28]
  416e73:	je     41793c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeec>
  416e79:	mov    r15,rax
  416e7c:	jmp    416e86 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x436>
  416e7e:	xor    r15d,r15d
  416e81:	mov    rbx,QWORD PTR [rsp+0x28]
  416e86:	mov    rax,QWORD PTR [rsp+0x30]
  416e8b:	cmp    DWORD PTR [rax+0xdc],0x0
  416e92:	je     416ea4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x454>
  416e94:	lea    rsi,[rip+0x2eed7]        # 445d72 <_IO_stdin_used@@Base+0x17d72>
  416e9b:	xor    edx,edx
  416e9d:	mov    ecx,0x2
  416ea2:	jmp    416eaf <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x45f>
  416ea4:	lea    rsi,[rip+0x2eec7]        # 445d72 <_IO_stdin_used@@Base+0x17d72>
  416eab:	xor    edx,edx
  416ead:	xor    ecx,ecx
  416eaf:	mov    rdi,rbx
  416eb2:	call   427eb0 <flatcc_builder_start_buffer@@Base>
  416eb7:	test   eax,eax
  416eb9:	jne    416ec8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x478>
  416ebb:	mov    esi,0x5
  416ec0:	mov    rdi,rbx
  416ec3:	call   429180 <flatcc_builder_start_table@@Base>
  416ec8:	movzx  eax,WORD PTR [r14+0x20]
  416ecd:	cmp    eax,0x2
  416ed0:	jne    416f00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416ed2:	mov    rsi,QWORD PTR [r14+0x10]
  416ed6:	movsxd rdx,DWORD PTR [r14+0x18]
  416eda:	mov    rdi,QWORD PTR [rsp+0x28]
  416edf:	call   42b2b0 <flatcc_builder_create_string@@Base>
  416ee4:	test   eax,eax
  416ee6:	je     416f00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416ee8:	mov    ebx,eax
  416eea:	mov    esi,0x2
  416eef:	mov    rdi,QWORD PTR [rsp+0x28]
  416ef4:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  416ef9:	test   rax,rax
  416efc:	je     416f00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416efe:	mov    DWORD PTR [rax],ebx
  416f00:	movzx  eax,WORD PTR [r14+0x38]
  416f05:	cmp    eax,0x2
  416f08:	jne    416f38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416f0a:	mov    rsi,QWORD PTR [r14+0x28]
  416f0e:	movsxd rdx,DWORD PTR [r14+0x30]
  416f12:	mov    rdi,QWORD PTR [rsp+0x28]
  416f17:	call   42b2b0 <flatcc_builder_create_string@@Base>
  416f1c:	test   eax,eax
  416f1e:	je     416f38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416f20:	mov    ebx,eax
  416f22:	mov    esi,0x3
  416f27:	mov    rdi,QWORD PTR [rsp+0x28]
  416f2c:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  416f31:	test   rax,rax
  416f34:	je     416f38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416f36:	mov    DWORD PTR [rax],ebx
  416f38:	movsxd rax,DWORD PTR [rsp+0x44]
  416f3d:	mov    QWORD PTR [rsp+0xc8],rax
  416f45:	test   rax,rax
  416f48:	mov    r14,QWORD PTR [rsp+0x28]
  416f4d:	mov    QWORD PTR [rsp+0xa0],r15
  416f55:	jle    4175ad <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb5d>
  416f5b:	mov    rax,QWORD PTR [rsp+0x58]
  416f60:	mov    QWORD PTR [rsp+0xd0],rax
  416f68:	xor    eax,eax
  416f6a:	nop    WORD PTR [rax+rax*1+0x0]
  416f70:	mov    QWORD PTR [rsp+0xd8],rax
  416f78:	mov    rbx,rax
  416f7b:	shl    rbx,0x4
  416f7f:	mov    r15,QWORD PTR [rsp+0xd0]
  416f87:	mov    r12,QWORD PTR [r15+rbx*1]
  416f8b:	mov    esi,0x5
  416f90:	mov    rdi,r14
  416f93:	call   429180 <flatcc_builder_start_table@@Base>
  416f98:	mov    rsi,QWORD PTR [r15+rbx*1+0x8]
  416f9d:	mov    rdi,r14
  416fa0:	call   42b3f0 <flatcc_builder_create_string_str@@Base>
  416fa5:	test   eax,eax
  416fa7:	mov    rbx,r14
  416faa:	je     416fc1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x571>
  416fac:	mov    r15d,eax
  416faf:	xor    esi,esi
  416fb1:	mov    rdi,rbx
  416fb4:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  416fb9:	test   rax,rax
  416fbc:	je     416fc1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x571>
  416fbe:	mov    DWORD PTR [rax],r15d
  416fc1:	mov    rdi,rbx
  416fc4:	call   428d90 <flatcc_builder_start_offset_vector@@Base>
  416fc9:	mov    r15,QWORD PTR [r12+0x28]
  416fce:	test   r15,r15
  416fd1:	je     4174b2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa62>
  416fd7:	xor    eax,eax
  416fd9:	mov    QWORD PTR [rsp+0xe0],r12
  416fe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416feb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ff0:	mov    DWORD PTR [rsp+0xb0],eax
  416ff7:	test   al,al
  416ff9:	sete   BYTE PTR [rsp+0x38]
  416ffe:	mov    r14d,DWORD PTR [r15+0x70]
  417002:	test   r14b,r14b
  417005:	sets   BYTE PTR [rsp+0xa8]
  41700d:	mov    r13d,r14d
  417010:	shr    r13b,0x2
  417014:	and    r13b,0x1
  417018:	lea    rax,[r15+0x18]
  41701c:	mov    QWORD PTR [rsp+0x30],rax
  417021:	movzx  eax,WORD PTR [r15+0x28]
  417026:	cmp    eax,0xe
  417029:	jne    417180 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  41702f:	mov    rax,QWORD PTR [rsp+0x30]
  417034:	mov    rax,QWORD PTR [rax]
  417037:	movzx  eax,WORD PTR [rax+0x10]
  41703b:	cmp    eax,0x4
  41703e:	jne    417180 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  417044:	mov    esi,0x9
  417049:	mov    rdi,rbx
  41704c:	call   429180 <flatcc_builder_start_table@@Base>
  417051:	mov    rdi,rbx
  417054:	call   429010 <flatcc_builder_start_string@@Base>
  417059:	mov    rax,QWORD PTR [r15+0x8]
  41705d:	mov    rsi,QWORD PTR [rax]
  417060:	mov    rdx,QWORD PTR [rax+0x8]
  417064:	mov    rdi,rbx
  417067:	call   428a10 <flatcc_builder_append_string@@Base>
  41706c:	mov    edx,0x5
  417071:	mov    rdi,rbx
  417074:	lea    rsi,[rip+0x1e8c1]        # 43593c <_IO_stdin_used@@Base+0x793c>
  41707b:	call   428a10 <flatcc_builder_append_string@@Base>
  417080:	mov    rdi,rbx
  417083:	call   42b460 <flatcc_builder_end_string@@Base>
  417088:	mov    rdi,rbx
  41708b:	test   eax,eax
  41708d:	je     4170ad <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x65d>
  41708f:	mov    ebx,eax
  417091:	xor    esi,esi
  417093:	mov    r12,rdi
  417096:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  41709b:	mov    rdi,r12
  41709e:	mov    r12,QWORD PTR [rsp+0xe0]
  4170a6:	test   rax,rax
  4170a9:	je     4170ad <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x65d>
  4170ab:	mov    DWORD PTR [rax],ebx
  4170ad:	mov    esi,0x3
  4170b2:	mov    rbx,rdi
  4170b5:	call   429180 <flatcc_builder_start_table@@Base>
  4170ba:	test   eax,eax
  4170bc:	je     4172a8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x858>
  4170c2:	mov    ebx,DWORD PTR [r15+0x88]
  4170c9:	add    ebx,ebx
  4170cb:	add    bx,0x2
  4170cf:	je     4170f2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6a2>
  4170d1:	mov    esi,0x3
  4170d6:	mov    edx,0x2
  4170db:	mov    ecx,0x2
  4170e0:	mov    rdi,QWORD PTR [rsp+0x28]
  4170e5:	call   42a500 <flatcc_builder_table_add@@Base>
  4170ea:	test   rax,rax
  4170ed:	je     4170f2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6a2>
  4170ef:	mov    WORD PTR [rax],bx
  4170f2:	movzx  ebx,WORD PTR [r15+0x88]
  4170fa:	add    bx,0xffff
  4170fe:	je     417121 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6d1>
  417100:	mov    esi,0x2
  417105:	mov    edx,0x2
  41710a:	mov    ecx,0x2
  41710f:	mov    rdi,QWORD PTR [rsp+0x28]
  417114:	call   42a500 <flatcc_builder_table_add@@Base>
  417119:	test   rax,rax
  41711c:	je     417121 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6d1>
  41711e:	mov    WORD PTR [rax],bx
  417121:	test   r13b,r13b
  417124:	mov    rbx,QWORD PTR [rsp+0x28]
  417129:	je     41714a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6fa>
  41712b:	mov    esi,0x6
  417130:	mov    edx,0x1
  417135:	mov    ecx,0x1
  41713a:	mov    rdi,rbx
  41713d:	call   42a500 <flatcc_builder_table_add@@Base>
  417142:	test   rax,rax
  417145:	je     41714a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6fa>
  417147:	mov    BYTE PTR [rax],r13b
  41714a:	mov    edx,0x2
  41714f:	mov    rdi,rbx
  417152:	lea    rsi,[rip+0x2ebc9]        # 445d22 <_IO_stdin_used@@Base+0x17d22>
  417159:	call   429b20 <flatcc_builder_check_required@@Base>
  41715e:	test   eax,eax
  417160:	je     417990 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf40>
  417166:	mov    rdi,rbx
  417169:	call   429b90 <flatcc_builder_end_table@@Base>
  41716e:	test   eax,eax
  417170:	je     417180 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  417172:	mov    rdi,rbx
  417175:	mov    esi,eax
  417177:	call   428750 <flatcc_builder_offset_vector_push@@Base>
  41717c:	nop    DWORD PTR [rax+0x0]
  417180:	mov    DWORD PTR [rsp+0xbc],r14d
  417188:	mov    r14,r12
  41718b:	mov    esi,0x9
  417190:	mov    rdi,rbx
  417193:	call   429180 <flatcc_builder_start_table@@Base>
  417198:	mov    rax,QWORD PTR [r15+0x8]
  41719c:	mov    rsi,QWORD PTR [rax]
  41719f:	mov    rdx,QWORD PTR [rax+0x8]
  4171a3:	mov    rdi,rbx
  4171a6:	call   42b2b0 <flatcc_builder_create_string@@Base>
  4171ab:	mov    r12,rbx
  4171ae:	test   eax,eax
  4171b0:	je     4171c5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x775>
  4171b2:	mov    ebx,eax
  4171b4:	xor    esi,esi
  4171b6:	mov    rdi,r12
  4171b9:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4171be:	test   rax,rax
  4171c1:	je     4171c5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x775>
  4171c3:	mov    DWORD PTR [rax],ebx
  4171c5:	mov    rcx,QWORD PTR [rsp+0x30]
  4171ca:	mov    rax,QWORD PTR [rcx+0x10]
  4171ce:	mov    QWORD PTR [rsp+0x10],rax
  4171d3:	vmovups xmm0,XMMWORD PTR [rcx]
  4171d7:	vmovups XMMWORD PTR [rsp],xmm0
  4171dc:	mov    rdi,r12
  4171df:	call   4180d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
  4171e4:	test   eax,eax
  4171e6:	je     417200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7b0>
  4171e8:	mov    ebx,eax
  4171ea:	mov    esi,0x1
  4171ef:	mov    rdi,QWORD PTR [rsp+0x28]
  4171f4:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4171f9:	test   rax,rax
  4171fc:	je     417200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7b0>
  4171fe:	mov    DWORD PTR [rax],ebx
  417200:	movzx  eax,BYTE PTR [rsp+0xa8]
  417208:	and    BYTE PTR [rsp+0x38],al
  41720c:	mov    r12,r14
  41720f:	movzx  eax,WORD PTR [r14+0x10]
  417214:	cmp    eax,0x1
  417217:	je     417270 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x820>
  417219:	test   ax,ax
  41721c:	mov    r14d,DWORD PTR [rsp+0xbc]
  417224:	jne    417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  41722a:	mov    eax,DWORD PTR [r15+0x58]
  41722e:	add    eax,0xfffffffd
  417231:	movzx  ecx,ax
  417234:	cmp    ecx,0x3
  417237:	ja     41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  41723d:	movzx  eax,ax
  417240:	lea    rcx,[rip+0x2ea91]        # 445cd8 <_IO_stdin_used@@Base+0x17cd8>
  417247:	movsxd rax,DWORD PTR [rcx+rax*4]
  41724b:	add    rax,rcx
  41724e:	jmp    rax
  417250:	mov    rbx,QWORD PTR [r15+0x48]
  417254:	test   rbx,rbx
  417257:	jne    41735c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x90c>
  41725d:	jmp    41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  417262:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41726c:	nop    DWORD PTR [rax+0x0]
  417270:	movzx  ebx,WORD PTR [r15+0x78]
  417275:	test   bx,bx
  417278:	je     417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  41727e:	mov    esi,0x3
  417283:	mov    edx,0x2
  417288:	mov    ecx,0x2
  41728d:	mov    rdi,QWORD PTR [rsp+0x28]
  417292:	call   42a500 <flatcc_builder_table_add@@Base>
  417297:	test   rax,rax
  41729a:	je     417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  4172a0:	mov    WORD PTR [rax],bx
  4172a3:	jmp    417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  4172a8:	xor    esi,esi
  4172aa:	mov    edx,0x1
  4172af:	mov    ecx,0x1
  4172b4:	mov    rdi,rbx
  4172b7:	call   42a500 <flatcc_builder_table_add@@Base>
  4172bc:	test   rax,rax
  4172bf:	je     4170c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  4172c5:	mov    BYTE PTR [rax],0x1
  4172c8:	xor    edx,edx
  4172ca:	mov    rdi,rbx
  4172cd:	lea    rsi,[rip+0x2ea4c]        # 445d20 <_IO_stdin_used@@Base+0x17d20>
  4172d4:	call   429b20 <flatcc_builder_check_required@@Base>
  4172d9:	test   eax,eax
  4172db:	je     4179ce <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf7e>
  4172e1:	mov    rdi,rbx
  4172e4:	call   429b90 <flatcc_builder_end_table@@Base>
  4172e9:	test   eax,eax
  4172eb:	je     4170c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  4172f1:	mov    rdi,rbx
  4172f4:	mov    ebx,eax
  4172f6:	mov    esi,0x1
  4172fb:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  417300:	test   rax,rax
  417303:	je     4170c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  417309:	mov    DWORD PTR [rax],ebx
  41730b:	jmp    4170c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  417310:	vmovsd xmm0,QWORD PTR [r15+0x48]
  417316:	vucomisd xmm0,QWORD PTR [rip+0x2e9b2]        # 445cd0 <_IO_stdin_used@@Base+0x17cd0>
  41731e:	jne    417322 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8d2>
  417320:	jnp    41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  417322:	mov    esi,0x5
  417327:	mov    edx,0x8
  41732c:	mov    ecx,0x8
  417331:	mov    rdi,QWORD PTR [rsp+0x28]
  417336:	vmovsd QWORD PTR [rsp+0x30],xmm0
  41733c:	call   42a500 <flatcc_builder_table_add@@Base>
  417341:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  417347:	test   rax,rax
  41734a:	je     41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  41734c:	vmovsd QWORD PTR [rax],xmm0
  417350:	jmp    41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  417352:	movzx  ebx,BYTE PTR [r15+0x48]
  417357:	test   rbx,rbx
  41735a:	je     41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  41735c:	mov    esi,0x4
  417361:	mov    edx,0x8
  417366:	mov    ecx,0x8
  41736b:	mov    rdi,QWORD PTR [rsp+0x28]
  417370:	call   42a500 <flatcc_builder_table_add@@Base>
  417375:	test   rax,rax
  417378:	je     41737d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  41737a:	mov    QWORD PTR [rax],rbx
  41737d:	shr    r14d,0x8
  417381:	movzx  ebx,WORD PTR [r15+0x88]
  417389:	test   bx,bx
  41738c:	je     4173af <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95f>
  41738e:	mov    esi,0x2
  417393:	mov    edx,0x2
  417398:	mov    ecx,0x2
  41739d:	mov    rdi,QWORD PTR [rsp+0x28]
  4173a2:	call   42a500 <flatcc_builder_table_add@@Base>
  4173a7:	test   rax,rax
  4173aa:	je     4173af <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95f>
  4173ac:	mov    WORD PTR [rax],bx
  4173af:	mov    ebx,DWORD PTR [r15+0x88]
  4173b6:	add    ebx,ebx
  4173b8:	add    bx,0x4
  4173bc:	je     4173df <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x98f>
  4173be:	mov    esi,0x3
  4173c3:	mov    edx,0x2
  4173c8:	mov    ecx,0x2
  4173cd:	mov    rdi,QWORD PTR [rsp+0x28]
  4173d2:	call   42a500 <flatcc_builder_table_add@@Base>
  4173d7:	test   rax,rax
  4173da:	je     4173df <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x98f>
  4173dc:	mov    WORD PTR [rax],bx
  4173df:	and    r14b,0x1
  4173e3:	cmp    BYTE PTR [rsp+0x38],0x0
  4173e8:	je     41740f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9bf>
  4173ea:	mov    esi,0x8
  4173ef:	mov    edx,0x1
  4173f4:	mov    ecx,0x1
  4173f9:	mov    rdi,QWORD PTR [rsp+0x28]
  4173fe:	call   42a500 <flatcc_builder_table_add@@Base>
  417403:	test   rax,rax
  417406:	je     41740f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9bf>
  417408:	movzx  ecx,BYTE PTR [rsp+0x38]
  41740d:	mov    BYTE PTR [rax],cl
  41740f:	test   r14b,r14b
  417412:	je     417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417414:	mov    esi,0x7
  417419:	mov    edx,0x1
  41741e:	mov    ecx,0x1
  417423:	mov    rdi,QWORD PTR [rsp+0x28]
  417428:	call   42a500 <flatcc_builder_table_add@@Base>
  41742d:	test   rax,rax
  417430:	je     417440 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417432:	mov    BYTE PTR [rax],r14b
  417435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41743f:	nop
  417440:	test   r13b,r13b
  417443:	mov    rbx,QWORD PTR [rsp+0x28]
  417448:	je     417469 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  41744a:	mov    esi,0x6
  41744f:	mov    edx,0x1
  417454:	mov    ecx,0x1
  417459:	mov    rdi,rbx
  41745c:	call   42a500 <flatcc_builder_table_add@@Base>
  417461:	test   rax,rax
  417464:	je     417469 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  417466:	mov    BYTE PTR [rax],r13b
  417469:	mov    edx,0x2
  41746e:	mov    rdi,rbx
  417471:	lea    rsi,[rip+0x2e8aa]        # 445d22 <_IO_stdin_used@@Base+0x17d22>
  417478:	call   429b20 <flatcc_builder_check_required@@Base>
  41747d:	test   eax,eax
  41747f:	je     417990 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf40>
  417485:	mov    rdi,rbx
  417488:	call   429b90 <flatcc_builder_end_table@@Base>
  41748d:	test   eax,eax
  41748f:	je     41749b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa4b>
  417491:	mov    rdi,rbx
  417494:	mov    esi,eax
  417496:	call   428750 <flatcc_builder_offset_vector_push@@Base>
  41749b:	mov    eax,DWORD PTR [rsp+0xb0]
  4174a2:	or     al,BYTE PTR [rsp+0x38]
  4174a6:	mov    r15,QWORD PTR [r15]
  4174a9:	test   r15,r15
  4174ac:	jne    416ff0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  4174b2:	mov    rdi,rbx
  4174b5:	call   428f50 <flatcc_builder_end_offset_vector@@Base>
  4174ba:	test   eax,eax
  4174bc:	je     4174d6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa86>
  4174be:	mov    ebx,eax
  4174c0:	mov    esi,0x1
  4174c5:	mov    rdi,QWORD PTR [rsp+0x28]
  4174ca:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4174cf:	test   rax,rax
  4174d2:	je     4174d6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa86>
  4174d4:	mov    DWORD PTR [rax],ebx
  4174d6:	movzx  eax,WORD PTR [r12+0x10]
  4174dc:	cmp    eax,0x1
  4174df:	mov    r15,QWORD PTR [rsp+0xa0]
  4174e7:	jne    417536 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae6>
  4174e9:	mov    ebx,DWORD PTR [r12+0xb8]
  4174f1:	test   ebx,ebx
  4174f3:	je     417515 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac5>
  4174f5:	mov    esi,0x4
  4174fa:	mov    edx,0x4
  4174ff:	mov    ecx,0x4
  417504:	mov    rdi,QWORD PTR [rsp+0x28]
  417509:	call   42a500 <flatcc_builder_table_add@@Base>
  41750e:	test   rax,rax
  417511:	je     417515 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac5>
  417513:	mov    DWORD PTR [rax],ebx
  417515:	mov    esi,0x2
  41751a:	mov    edx,0x1
  41751f:	mov    ecx,0x1
  417524:	mov    rdi,QWORD PTR [rsp+0x28]
  417529:	call   42a500 <flatcc_builder_table_add@@Base>
  41752e:	test   rax,rax
  417531:	je     417536 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae6>
  417533:	mov    BYTE PTR [rax],0x1
  417536:	movzx  ebx,WORD PTR [r12+0xb0]
  41753f:	test   ebx,ebx
  417541:	je     417563 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb13>
  417543:	mov    esi,0x3
  417548:	mov    edx,0x4
  41754d:	mov    ecx,0x4
  417552:	mov    rdi,QWORD PTR [rsp+0x28]
  417557:	call   42a500 <flatcc_builder_table_add@@Base>
  41755c:	test   rax,rax
  41755f:	je     417563 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb13>
  417561:	mov    DWORD PTR [rax],ebx
  417563:	mov    edx,0x2
  417568:	mov    r14,QWORD PTR [rsp+0x28]
  41756d:	mov    rdi,r14
  417570:	lea    rsi,[rip+0x2e7b1]        # 445d28 <_IO_stdin_used@@Base+0x17d28>
  417577:	call   429b20 <flatcc_builder_check_required@@Base>
  41757c:	test   eax,eax
  41757e:	je     4179ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf9d>
  417584:	mov    rdi,r14
  417587:	call   429b90 <flatcc_builder_end_table@@Base>
  41758c:	mov    rcx,QWORD PTR [rsp+0xd8]
  417594:	mov    DWORD PTR [r15+rcx*4],eax
  417598:	mov    rax,rcx
  41759b:	add    rax,0x1
  41759f:	cmp    rax,QWORD PTR [rsp+0xc8]
  4175a7:	jl     416f70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x520>
  4175ad:	mov    rdi,r14
  4175b0:	mov    rsi,r15
  4175b3:	mov    rdx,QWORD PTR [rsp+0xc8]
  4175bb:	call   428e00 <flatcc_builder_create_offset_vector@@Base>
  4175c0:	test   eax,eax
  4175c2:	je     4175d7 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb87>
  4175c4:	mov    ebx,eax
  4175c6:	xor    esi,esi
  4175c8:	mov    rdi,r14
  4175cb:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4175d0:	test   rax,rax
  4175d3:	je     4175d7 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb87>
  4175d5:	mov    DWORD PTR [rax],ebx
  4175d7:	mov    rax,QWORD PTR [rsp+0x60]
  4175dc:	mov    QWORD PTR [rsp+0xb0],rax
  4175e4:	movsxd rbx,DWORD PTR [rsp+0x48]
  4175e9:	mov    rdi,r14
  4175ec:	call   428d90 <flatcc_builder_start_offset_vector@@Base>
  4175f1:	mov    QWORD PTR [rsp+0xa8],rbx
  4175f9:	test   rbx,rbx
  4175fc:	jle    417863 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe13>
  417602:	xor    r15d,r15d
  417605:	lea    r12,[rip+0x2e722]        # 445d2e <_IO_stdin_used@@Base+0x17d2e>
  41760c:	nop    DWORD PTR [rax+0x0]
  417610:	mov    rbx,r15
  417613:	shl    rbx,0x4
  417617:	mov    r13,QWORD PTR [rsp+0xb0]
  41761f:	mov    rax,QWORD PTR [r13+rbx*1+0x0]
  417624:	mov    QWORD PTR [rsp+0x38],rax
  417629:	movzx  eax,WORD PTR [rax+0x10]
  41762d:	mov    WORD PTR [rsp+0x30],ax
  417632:	mov    esi,0x4
  417637:	mov    rdi,r14
  41763a:	call   429180 <flatcc_builder_start_table@@Base>
  41763f:	mov    rsi,QWORD PTR [r13+rbx*1+0x8]
  417644:	mov    rdi,r14
  417647:	call   42b3f0 <flatcc_builder_create_string_str@@Base>
  41764c:	test   eax,eax
  41764e:	je     417663 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc13>
  417650:	mov    ebx,eax
  417652:	xor    esi,esi
  417654:	mov    rdi,r14
  417657:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  41765c:	test   rax,rax
  41765f:	je     417663 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc13>
  417661:	mov    DWORD PTR [rax],ebx
  417663:	mov    rdi,r14
  417666:	call   428d90 <flatcc_builder_start_offset_vector@@Base>
  41766b:	mov    rax,QWORD PTR [rsp+0x38]
  417670:	mov    r13,QWORD PTR [rax+0x28]
  417674:	test   r13,r13
  417677:	mov    rbx,r14
  41767a:	je     41778a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd3a>
  417680:	movzx  eax,WORD PTR [rsp+0x30]
  417685:	cmp    eax,0x4
  417688:	mov    r14d,0x0
  41768e:	cmove  r14,QWORD PTR [rsp+0xa0]
  417697:	nop    WORD PTR [rax+rax*1+0x0]
  4176a0:	mov    esi,0x3
  4176a5:	mov    rdi,rbx
  4176a8:	call   429180 <flatcc_builder_start_table@@Base>
  4176ad:	mov    rax,QWORD PTR [r13+0x8]
  4176b1:	mov    rsi,QWORD PTR [rax]
  4176b4:	mov    rdx,QWORD PTR [rax+0x8]
  4176b8:	mov    rdi,rbx
  4176bb:	call   42b2b0 <flatcc_builder_create_string@@Base>
  4176c0:	test   eax,eax
  4176c2:	je     4176d9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc89>
  4176c4:	mov    ebx,eax
  4176c6:	xor    esi,esi
  4176c8:	mov    rdi,QWORD PTR [rsp+0x28]
  4176cd:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4176d2:	test   rax,rax
  4176d5:	je     4176d9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc89>
  4176d7:	mov    DWORD PTR [rax],ebx
  4176d9:	test   r14,r14
  4176dc:	je     417720 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  4176de:	movzx  eax,WORD PTR [r13+0x28]
  4176e3:	cmp    eax,0xe
  4176e6:	jne    417720 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  4176e8:	mov    rax,QWORD PTR [r13+0x18]
  4176ec:	mov    rax,QWORD PTR [rax+0xc8]
  4176f3:	mov    ebx,DWORD PTR [r14+rax*4]
  4176f7:	test   ebx,ebx
  4176f9:	je     417720 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  4176fb:	mov    esi,0x2
  417700:	mov    rdi,QWORD PTR [rsp+0x28]
  417705:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  41770a:	test   rax,rax
  41770d:	je     417720 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  41770f:	mov    DWORD PTR [rax],ebx
  417711:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41771b:	nop    DWORD PTR [rax+rax*1+0x0]
  417720:	mov    rbx,QWORD PTR [r13+0x48]
  417724:	test   rbx,rbx
  417727:	je     41774a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcfa>
  417729:	mov    esi,0x1
  41772e:	mov    edx,0x8
  417733:	mov    ecx,0x8
  417738:	mov    rdi,QWORD PTR [rsp+0x28]
  41773d:	call   42a500 <flatcc_builder_table_add@@Base>
  417742:	test   rax,rax
  417745:	je     41774a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcfa>
  417747:	mov    QWORD PTR [rax],rbx
  41774a:	mov    edx,0x1
  41774f:	mov    rbx,QWORD PTR [rsp+0x28]
  417754:	mov    rdi,rbx
  417757:	mov    rsi,r12
  41775a:	call   429b20 <flatcc_builder_check_required@@Base>
  41775f:	test   eax,eax
  417761:	je     4179af <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf5f>
  417767:	mov    rdi,rbx
  41776a:	call   429b90 <flatcc_builder_end_table@@Base>
  41776f:	test   eax,eax
  417771:	je     41777d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd2d>
  417773:	mov    rdi,rbx
  417776:	mov    esi,eax
  417778:	call   428750 <flatcc_builder_offset_vector_push@@Base>
  41777d:	mov    r13,QWORD PTR [r13+0x0]
  417781:	test   r13,r13
  417784:	jne    4176a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc50>
  41778a:	mov    rdi,rbx
  41778d:	call   428f50 <flatcc_builder_end_offset_vector@@Base>
  417792:	test   eax,eax
  417794:	je     4177ae <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd5e>
  417796:	mov    ebx,eax
  417798:	mov    esi,0x1
  41779d:	mov    rdi,QWORD PTR [rsp+0x28]
  4177a2:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  4177a7:	test   rax,rax
  4177aa:	je     4177ae <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd5e>
  4177ac:	mov    DWORD PTR [rax],ebx
  4177ae:	movzx  eax,WORD PTR [rsp+0x30]
  4177b3:	cmp    eax,0x4
  4177b6:	sete   bl
  4177b9:	jne    4177db <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8b>
  4177bb:	mov    esi,0x2
  4177c0:	mov    edx,0x1
  4177c5:	mov    ecx,0x1
  4177ca:	mov    rdi,QWORD PTR [rsp+0x28]
  4177cf:	call   42a500 <flatcc_builder_table_add@@Base>
  4177d4:	test   rax,rax
  4177d7:	je     4177db <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8b>
  4177d9:	mov    BYTE PTR [rax],bl
  4177db:	mov    rcx,QWORD PTR [rsp+0x38]
  4177e0:	mov    rax,QWORD PTR [rcx+0x58]
  4177e4:	mov    QWORD PTR [rsp+0x10],rax
  4177e9:	vmovups xmm0,XMMWORD PTR [rcx+0x48]
  4177ee:	vmovups XMMWORD PTR [rsp],xmm0
  4177f3:	mov    rbx,QWORD PTR [rsp+0x28]
  4177f8:	mov    rdi,rbx
  4177fb:	call   4180d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
  417800:	test   eax,eax
  417802:	je     41781c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdcc>
  417804:	mov    r14d,eax
  417807:	mov    esi,0x3
  41780c:	mov    rdi,rbx
  41780f:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  417814:	test   rax,rax
  417817:	je     41781c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdcc>
  417819:	mov    DWORD PTR [rax],r14d
  41781c:	mov    edx,0x3
  417821:	mov    rdi,rbx
  417824:	lea    rsi,[rip+0x2e507]        # 445d32 <_IO_stdin_used@@Base+0x17d32>
  41782b:	call   429b20 <flatcc_builder_check_required@@Base>
  417830:	test   eax,eax
  417832:	je     417a0c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfbc>
  417838:	mov    r14,rbx
  41783b:	mov    rdi,rbx
  41783e:	call   429b90 <flatcc_builder_end_table@@Base>
  417843:	test   eax,eax
  417845:	je     417851 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe01>
  417847:	mov    rdi,r14
  41784a:	mov    esi,eax
  41784c:	call   428750 <flatcc_builder_offset_vector_push@@Base>
  417851:	add    r15,0x1
  417855:	cmp    r15,QWORD PTR [rsp+0xa8]
  41785d:	jl     417610 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  417863:	mov    rdi,r14
  417866:	call   428f50 <flatcc_builder_end_offset_vector@@Base>
  41786b:	test   eax,eax
  41786d:	mov    r14,QWORD PTR [rsp+0xc0]
  417875:	je     41788f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  417877:	mov    ebx,eax
  417879:	mov    esi,0x1
  41787e:	mov    rdi,QWORD PTR [rsp+0x28]
  417883:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  417888:	test   rax,rax
  41788b:	je     41788f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  41788d:	mov    DWORD PTR [rax],ebx
  41788f:	mov    rax,QWORD PTR [r14+0x58]
  417893:	test   rax,rax
  417896:	mov    r14,QWORD PTR [rsp+0xa0]
  41789e:	je     4178ab <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  4178a0:	cmp    WORD PTR [rax+0x10],0x0
  4178a5:	je     41795e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0e>
  4178ab:	lea    rsi,[rip+0x2e488]        # 445d3a <_IO_stdin_used@@Base+0x17d3a>
  4178b2:	mov    edx,0x2
  4178b7:	mov    rbx,QWORD PTR [rsp+0x28]
  4178bc:	mov    rdi,rbx
  4178bf:	call   429b20 <flatcc_builder_check_required@@Base>
  4178c4:	test   eax,eax
  4178c6:	je     417a2b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfdb>
  4178cc:	mov    rdi,rbx
  4178cf:	call   429b90 <flatcc_builder_end_table@@Base>
  4178d4:	mov    rdi,rbx
  4178d7:	mov    esi,eax
  4178d9:	call   4280d0 <flatcc_builder_end_buffer@@Base>
  4178de:	mov    rdi,QWORD PTR [rsp+0x58]
  4178e3:	test   rdi,rdi
  4178e6:	je     4178ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe9d>
  4178e8:	call   406040 <free@plt>
  4178ed:	mov    rdi,QWORD PTR [rsp+0x60]
  4178f2:	test   rdi,rdi
  4178f5:	je     4178fc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeac>
  4178f7:	call   406040 <free@plt>
  4178fc:	mov    rdi,QWORD PTR [rsp+0x68]
  417901:	test   rdi,rdi
  417904:	je     41790b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xebb>
  417906:	call   406040 <free@plt>
  41790b:	vxorps xmm0,xmm0,xmm0
  41790f:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  417915:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41791b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  417921:	xor    ebx,ebx
  417923:	test   r14,r14
  417926:	je     416c05 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1b5>
  41792c:	mov    rdi,r14
  41792f:	vzeroupper 
  417932:	call   406040 <free@plt>
  417937:	jmp    416c05 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1b5>
  41793c:	mov    rdi,QWORD PTR [rsp+0x58]
  417941:	test   rdi,rdi
  417944:	je     41794b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xefb>
  417946:	call   406040 <free@plt>
  41794b:	mov    rdi,QWORD PTR [rsp+0x60]
  417950:	test   rdi,rdi
  417953:	jne    416bd6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x186>
  417959:	jmp    416bdb <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18b>
  41795e:	mov    rax,QWORD PTR [rax+0xc8]
  417965:	mov    ebx,DWORD PTR [r14+rax*4]
  417969:	test   ebx,ebx
  41796b:	je     4178ab <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  417971:	mov    esi,0x4
  417976:	mov    rdi,QWORD PTR [rsp+0x28]
  41797b:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  417980:	test   rax,rax
  417983:	je     4178ab <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  417989:	mov    DWORD PTR [rax],ebx
  41798b:	jmp    4178ab <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  417990:	lea    rdi,[rip+0x2e529]        # 445ec0 <_IO_stdin_used@@Base+0x17ec0>
  417997:	lea    rsi,[rip+0x2e466]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  41799e:	lea    rcx,[rip+0x2e5ab]        # 445f50 <_IO_stdin_used@@Base+0x17f50>
  4179a5:	mov    edx,0x1d
  4179aa:	call   4060f0 <__assert_fail@plt>
  4179af:	lea    rdi,[rip+0x2e6b9]        # 44606f <_IO_stdin_used@@Base+0x1806f>
  4179b6:	lea    rsi,[rip+0x2e447]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  4179bd:	lea    rcx,[rip+0x2e741]        # 446105 <_IO_stdin_used@@Base+0x18105>
  4179c4:	mov    edx,0x19
  4179c9:	call   4060f0 <__assert_fail@plt>
  4179ce:	lea    rdi,[rip+0x2e3a2]        # 445d77 <_IO_stdin_used@@Base+0x17d77>
  4179d5:	lea    rsi,[rip+0x2e428]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  4179dc:	lea    rcx,[rip+0x2e49a]        # 445e7d <_IO_stdin_used@@Base+0x17e7d>
  4179e3:	mov    edx,0x17
  4179e8:	call   4060f0 <__assert_fail@plt>
  4179ed:	lea    rdi,[rip+0x2e5a1]        # 445f95 <_IO_stdin_used@@Base+0x17f95>
  4179f4:	lea    rsi,[rip+0x2e409]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  4179fb:	lea    rcx,[rip+0x2e626]        # 446028 <_IO_stdin_used@@Base+0x18028>
  417a02:	mov    edx,0x1f
  417a07:	call   4060f0 <__assert_fail@plt>
  417a0c:	lea    rdi,[rip+0x2e73b]        # 44614e <_IO_stdin_used@@Base+0x1814e>
  417a13:	lea    rsi,[rip+0x2e3ea]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  417a1a:	lea    rcx,[rip+0x2e7ba]        # 4461db <_IO_stdin_used@@Base+0x181db>
  417a21:	mov    edx,0x1b
  417a26:	call   4060f0 <__assert_fail@plt>
  417a2b:	lea    rdi,[rip+0x2e7ec]        # 44621e <_IO_stdin_used@@Base+0x1821e>
  417a32:	lea    rsi,[rip+0x2e3cb]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  417a39:	lea    rcx,[rip+0x2e871]        # 4462b1 <_IO_stdin_used@@Base+0x182b1>
  417a40:	mov    edx,0x21
  417a45:	call   4060f0 <__assert_fail@plt>
  417a4a:	nop    WORD PTR [rax+rax*1+0x0]
  417a50:	push   rbp
  417a51:	push   r15
  417a53:	push   r14
  417a55:	push   r13
  417a57:	push   r12
  417a59:	push   rbx
  417a5a:	sub    rsp,0x28
  417a5e:	test   rdi,rdi
  417a61:	je     417c2a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11da>
  417a67:	cmp    DWORD PTR [rdi+0x4],0x53424642
  417a6e:	jne    417c2a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11da>
  417a74:	mov    ecx,DWORD PTR [rdi]
  417a76:	lea    rax,[rdi+rcx*1]
  417a7a:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  417a7e:	mov    rdx,rax
  417a81:	sub    rdx,rcx
  417a84:	movzx  edx,WORD PTR [rdx]
  417a87:	cmp    edx,0x5
  417a8a:	jbe    417c33 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e3>
  417a90:	neg    rcx
  417a93:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  417a98:	test   rcx,rcx
  417a9b:	je     417c33 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e3>
  417aa1:	lea    rdx,[rax+rcx*1]
  417aa5:	mov    eax,DWORD PTR [rax+rcx*1]
  417aa8:	cmp    DWORD PTR [rax+rdx*1],0x0
  417aac:	je     417bf3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a3>
  417ab2:	lea    rcx,[rax+rdx*1]
  417ab6:	add    rcx,0x4
  417aba:	xor    edx,edx
  417abc:	mov    QWORD PTR [rsp+0x8],rcx
  417ac1:	mov    QWORD PTR [rsp+0x10],rcx
  417ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ad0:	lea    rax,[rcx+rdx*4]
  417ad4:	mov    esi,DWORD PTR [rcx+rdx*4]
  417ad7:	add    rax,rsi
  417ada:	je     417c0b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11bb>
  417ae0:	mov    QWORD PTR [rsp+0x20],rdx
  417ae5:	movsxd rcx,DWORD PTR [rax]
  417ae8:	mov    rdx,rax
  417aeb:	sub    rdx,rcx
  417aee:	movzx  edx,WORD PTR [rdx]
  417af1:	cmp    edx,0x8
  417af4:	jb     417c02 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b2>
  417afa:	neg    rcx
  417afd:	movzx  r12d,WORD PTR [rax+rcx*1+0x6]
  417b03:	test   r12,r12
  417b06:	je     417c02 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b2>
  417b0c:	mov    ebp,DWORD PTR [rax+r12*1]
  417b10:	add    rax,r12
  417b13:	mov    r13d,DWORD PTR [rbp+rax*1+0x0]
  417b18:	test   r13,r13
  417b1b:	je     417bd3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1183>
  417b21:	mov    QWORD PTR [rsp+0x18],rsi
  417b26:	lea    r14,[rax+rbp*1]
  417b2a:	add    r14,0x4
  417b2e:	lea    r15,[r13-0x1]
  417b32:	mov    rbx,r13
  417b35:	shr    rbx,1
  417b38:	nop    DWORD PTR [rax+rax*1+0x0]
  417b40:	mov    rdi,r14
  417b43:	mov    rsi,rbx
  417b46:	mov    rdx,r15
  417b49:	call   418290 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
  417b4e:	add    rbx,0xffffffffffffffff
  417b52:	cmp    rbx,0xffffffffffffffff
  417b56:	jne    417b40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10f0>
  417b58:	test   r15,r15
  417b5b:	mov    rax,QWORD PTR [rsp+0x18]
  417b60:	je     417bd3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1183>
  417b62:	lea    r15,[r13*4+0x0]
  417b6a:	add    r15,rbp
  417b6d:	mov    rbx,r13
  417b70:	add    rbx,0xfffffffffffffffe
  417b74:	add    r15,r12
  417b77:	add    r15,rax
  417b7a:	add    r15,QWORD PTR [rsp+0x8]
  417b7f:	lea    eax,[r13*4+0x0]
  417b87:	mov    r12d,0x4
  417b8d:	sub    r12d,eax
  417b90:	lea    ebp,[r13*4-0x4]
  417b98:	nop    DWORD PTR [rax+rax*1+0x0]
  417ba0:	mov    eax,DWORD PTR [r15]
  417ba3:	add    eax,ebp
  417ba5:	mov    ecx,DWORD PTR [r14]
  417ba8:	add    ecx,r12d
  417bab:	mov    DWORD PTR [r14],eax
  417bae:	mov    DWORD PTR [r15],ecx
  417bb1:	xor    esi,esi
  417bb3:	mov    rdi,r14
  417bb6:	mov    rdx,rbx
  417bb9:	call   418290 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
  417bbe:	add    rbx,0xffffffffffffffff
  417bc2:	add    r15,0xfffffffffffffffc
  417bc6:	add    ebp,0xfffffffc
  417bc9:	add    r12d,0x4
  417bcd:	cmp    rbx,0xffffffffffffffff
  417bd1:	jne    417ba0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1150>
  417bd3:	mov    rdx,QWORD PTR [rsp+0x20]
  417bd8:	add    rdx,0x1
  417bdc:	mov    rcx,QWORD PTR [rsp+0x10]
  417be1:	mov    eax,DWORD PTR [rcx-0x4]
  417be4:	add    QWORD PTR [rsp+0x8],0x4
  417bea:	cmp    rdx,rax
  417bed:	jb     417ad0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1080>
  417bf3:	add    rsp,0x28
  417bf7:	pop    rbx
  417bf8:	pop    r12
  417bfa:	pop    r13
  417bfc:	pop    r14
  417bfe:	pop    r15
  417c00:	pop    rbp
  417c01:	ret    
  417c02:	lea    rdi,[rip+0x2e7da]        # 4463e3 <_IO_stdin_used@@Base+0x183e3>
  417c09:	jmp    417c12 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11c2>
  417c0b:	lea    rdi,[rip+0x2e6e6]        # 4462f8 <_IO_stdin_used@@Base+0x182f8>
  417c12:	lea    rsi,[rip+0x2e705]        # 44631e <_IO_stdin_used@@Base+0x1831e>
  417c19:	lea    rcx,[rip+0x2e81b]        # 44643b <_IO_stdin_used@@Base+0x1843b>
  417c20:	mov    edx,0xe0
  417c25:	call   4060f0 <__assert_fail@plt>
  417c2a:	lea    rdi,[rip+0x2e6c7]        # 4462f8 <_IO_stdin_used@@Base+0x182f8>
  417c31:	jmp    417c3a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11ea>
  417c33:	lea    rdi,[rip+0x2e7a9]        # 4463e3 <_IO_stdin_used@@Base+0x183e3>
  417c3a:	lea    rsi,[rip+0x2e6dd]        # 44631e <_IO_stdin_used@@Base+0x1831e>
  417c41:	lea    rcx,[rip+0x2e74e]        # 446396 <_IO_stdin_used@@Base+0x18396>
  417c48:	mov    edx,0xed
  417c4d:	call   4060f0 <__assert_fail@plt>
  417c52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c5c:	nop    DWORD PTR [rax+0x0]

0000000000417c60 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  417c60:	push   r15
  417c62:	push   r14
  417c64:	push   r12
  417c66:	push   rbx
  417c67:	sub    rsp,0x188
  417c6e:	mov    r14,rdx
  417c71:	mov    r15,rsi
  417c74:	mov    rbx,rdi
  417c77:	mov    r12,rsp
  417c7a:	mov    rdi,r12
  417c7d:	call   427110 <flatcc_builder_init@@Base>
  417c82:	mov    rdi,r12
  417c85:	mov    rsi,rbx
  417c88:	mov    rdx,r15
  417c8b:	call   416ad0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  417c90:	test   eax,eax
  417c92:	je     417c98 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x38>
  417c94:	xor    ebx,ebx
  417c96:	jmp    417cb3 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x53>
  417c98:	mov    rdi,rsp
  417c9b:	mov    rsi,r14
  417c9e:	call   42b7d0 <flatcc_builder_finalize_buffer@@Base>
  417ca3:	test   rax,rax
  417ca6:	je     417c94 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x34>
  417ca8:	mov    rbx,rax
  417cab:	mov    rdi,rax
  417cae:	call   417a50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  417cb3:	mov    rdi,rsp
  417cb6:	call   4274d0 <flatcc_builder_clear@@Base>
  417cbb:	mov    rax,rbx
  417cbe:	add    rsp,0x188
  417cc5:	pop    rbx
  417cc6:	pop    r12
  417cc8:	pop    r14
  417cca:	pop    r15
  417ccc:	ret    
  417ccd:	nop    DWORD PTR [rax]

0000000000417cd0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  417cd0:	push   rbp
  417cd1:	push   r15
  417cd3:	push   r14
  417cd5:	push   r12
  417cd7:	push   rbx
  417cd8:	sub    rsp,0x190
  417cdf:	mov    r14,rsi
  417ce2:	mov    rbx,rdi
  417ce5:	mov    rax,QWORD PTR [rdi+0x108]
  417cec:	test   rax,rax
  417cef:	lea    rbp,[rip+0x17849]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  417cf6:	cmovne rbp,rax
  417cfa:	cmp    DWORD PTR [rdi+0x80],0x0
  417d01:	je     417d3d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d>
  417d03:	mov    rax,QWORD PTR [rip+0x392d6]        # 450fe0 <stdout@GLIBC_2.2.5>
  417d0a:	mov    r15,QWORD PTR [rax]
  417d0d:	test   r15,r15
  417d10:	je     417dad <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdd>
  417d16:	lea    rbp,[rsp+0x8]
  417d1b:	mov    rdi,rbp
  417d1e:	call   427110 <flatcc_builder_init@@Base>
  417d23:	mov    rdi,rbp
  417d26:	mov    rsi,rbx
  417d29:	mov    rdx,r14
  417d2c:	call   416ad0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  417d31:	test   eax,eax
  417d33:	je     417db4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe4>
  417d35:	xor    r14d,r14d
  417d38:	jmp    417dd5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x105>
  417d3d:	mov    r15,QWORD PTR [r14+0x110]
  417d44:	mov    rdi,r15
  417d47:	call   4060d0 <strlen@plt>
  417d4c:	mov    r12,rax
  417d4f:	mov    rdi,rbp
  417d52:	call   4060d0 <strlen@plt>
  417d57:	lea    r8,[rip+0x17262]        # 42efc0 <_IO_stdin_used@@Base+0xfc0>
  417d5e:	mov    r9d,0x1
  417d64:	mov    rdi,rbp
  417d67:	mov    rsi,rax
  417d6a:	mov    rdx,r15
  417d6d:	mov    rcx,r12
  417d70:	call   41b190 <__flatcc_fb_create_join_path_n@@Base>
  417d75:	test   rax,rax
  417d78:	je     417e8a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ba>
  417d7e:	mov    rbp,rax
  417d81:	lea    rsi,[rip+0x17399]        # 42f121 <_IO_stdin_used@@Base+0x1121>
  417d88:	mov    rdi,rax
  417d8b:	call   4061d0 <fopen@plt>
  417d90:	mov    r15,rax
  417d93:	test   rax,rax
  417d96:	je     417e6a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a>
  417d9c:	mov    rdi,rbp
  417d9f:	call   406040 <free@plt>
  417da4:	test   r15,r15
  417da7:	jne    417d16 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46>
  417dad:	mov    ebp,0xffffffff
  417db2:	jmp    417e31 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  417db4:	lea    rdi,[rsp+0x8]
  417db9:	mov    rsi,rsp
  417dbc:	call   42b7d0 <flatcc_builder_finalize_buffer@@Base>
  417dc1:	test   rax,rax
  417dc4:	je     417d35 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65>
  417dca:	mov    r14,rax
  417dcd:	mov    rdi,rax
  417dd0:	call   417a50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  417dd5:	lea    rdi,[rsp+0x8]
  417dda:	call   4274d0 <flatcc_builder_clear@@Base>
  417ddf:	test   r14,r14
  417de2:	je     417e0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c>
  417de4:	mov    rbx,QWORD PTR [rsp]
  417de8:	mov    esi,0x1
  417ded:	mov    rdi,r14
  417df0:	mov    rdx,rbx
  417df3:	mov    rcx,r15
  417df6:	call   406210 <fwrite@plt>
  417dfb:	xor    ebp,ebp
  417dfd:	cmp    rbx,rax
  417e00:	jne    417e43 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x173>
  417e02:	mov    rdi,r14
  417e05:	call   406040 <free@plt>
  417e0a:	jmp    417e1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14d>
  417e0c:	lea    rdi,[rip+0x2e73d]        # 446550 <_IO_stdin_used@@Base+0x18550>
  417e13:	call   406070 <puts@plt>
  417e18:	mov    ebp,0xffffffff
  417e1d:	mov    rax,QWORD PTR [rip+0x391bc]        # 450fe0 <stdout@GLIBC_2.2.5>
  417e24:	cmp    QWORD PTR [rax],r15
  417e27:	je     417e31 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  417e29:	mov    rdi,r15
  417e2c:	call   4060c0 <fclose@plt>
  417e31:	mov    eax,ebp
  417e33:	add    rsp,0x190
  417e3a:	pop    rbx
  417e3b:	pop    r12
  417e3d:	pop    r14
  417e3f:	pop    r15
  417e41:	pop    rbp
  417e42:	ret    
  417e43:	mov    rax,QWORD PTR [rip+0x391ae]        # 450ff8 <stderr@GLIBC_2.2.5>
  417e4a:	mov    rcx,QWORD PTR [rax]
  417e4d:	lea    rdi,[rip+0x2def7]        # 445d4b <_IO_stdin_used@@Base+0x17d4b>
  417e54:	mov    esi,0x26
  417e59:	mov    edx,0x1
  417e5e:	call   406210 <fwrite@plt>
  417e63:	mov    ebp,0xffffffff
  417e68:	jmp    417e02 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132>
  417e6a:	mov    rax,QWORD PTR [rip+0x39187]        # 450ff8 <stderr@GLIBC_2.2.5>
  417e71:	mov    rdi,QWORD PTR [rax]
  417e74:	lea    rsi,[rip+0x2e6a1]        # 44651c <_IO_stdin_used@@Base+0x1851c>
  417e7b:	xor    eax,eax
  417e7d:	mov    rdx,rbp
  417e80:	call   406170 <fprintf@plt>
  417e85:	jmp    417d9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
  417e8a:	mov    rax,QWORD PTR [rip+0x39167]        # 450ff8 <stderr@GLIBC_2.2.5>
  417e91:	mov    rcx,QWORD PTR [rax]
  417e94:	lea    rdi,[rip+0x1717c]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  417e9b:	mov    esi,0x22
  417ea0:	mov    edx,0x1
  417ea5:	call   406210 <fwrite@plt>
  417eaa:	mov    edi,0x1
  417eaf:	call   406200 <exit@plt>
  417eb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ebe:	xchg   ax,ax
  417ec0:	mov    rax,rdi
  417ec3:	lea    rdi,[rsi+0x8]
  417ec7:	lea    rsi,[rip+0x32]        # 417f00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  417ece:	mov    rdx,rax
  417ed1:	jmp    419990 <fb_symbol_table_visit@@Base>
  417ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ee0:	mov    rax,rdi
  417ee3:	lea    rdi,[rsi+0x8]
  417ee7:	lea    rsi,[rip+0xc2]        # 417fb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  417eee:	mov    rdx,rax
  417ef1:	jmp    419990 <fb_symbol_table_visit@@Base>
  417ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f00:	push   r14
  417f02:	push   rbx
  417f03:	push   rax
  417f04:	movzx  eax,WORD PTR [rsi+0x10]
  417f08:	cmp    eax,0x4
  417f0b:	ja     417fa3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  417f11:	mov    rbx,rsi
  417f14:	mov    r14,rdi
  417f17:	mov    edi,0x128
  417f1c:	add    rdi,QWORD PTR [r14+0x48]
  417f20:	mov    rsi,QWORD PTR [rsi+0x20]
  417f24:	call   4190e0 <ptr_set_find_item@@Base>
  417f29:	test   rax,rax
  417f2c:	je     417fa3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  417f2e:	cmp    DWORD PTR [r14],0x0
  417f32:	je     417f70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a0>
  417f34:	mov    rax,QWORD PTR [rbx+0x18]
  417f38:	mov    rcx,QWORD PTR [rax]
  417f3b:	test   rcx,rcx
  417f3e:	je     417f70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a0>
  417f40:	xor    eax,eax
  417f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f4c:	nop    DWORD PTR [rax+0x0]
  417f50:	mov    rdx,QWORD PTR [rcx+0x8]
  417f54:	mov    rsi,QWORD PTR [rcx]
  417f57:	mov    rcx,QWORD PTR [rdx+0x8]
  417f5b:	add    rax,rcx
  417f5e:	add    rax,0x1
  417f62:	mov    rcx,rsi
  417f65:	test   rsi,rsi
  417f68:	jne    417f50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x280>
  417f6a:	add    rax,0x1
  417f6e:	jmp    417f75 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a5>
  417f70:	mov    eax,0x1
  417f75:	mov    rcx,QWORD PTR [rbx+0x8]
  417f79:	add    rax,QWORD PTR [rcx+0x8]
  417f7d:	add    QWORD PTR [r14+0x10],rax
  417f81:	mov    eax,DWORD PTR [rbx+0x10]
  417f84:	lea    ecx,[rax-0x3]
  417f87:	movzx  ecx,cx
  417f8a:	cmp    ecx,0x2
  417f8d:	jb     417f9e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ce>
  417f8f:	movzx  eax,ax
  417f92:	cmp    eax,0x1
  417f95:	ja     417fa3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  417f97:	add    DWORD PTR [r14+0x4],0x1
  417f9c:	jmp    417fa3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  417f9e:	add    DWORD PTR [r14+0x8],0x1
  417fa3:	add    rsp,0x8
  417fa7:	pop    rbx
  417fa8:	pop    r14
  417faa:	ret    
  417fab:	nop    DWORD PTR [rax+rax*1+0x0]
  417fb0:	push   rbp
  417fb1:	push   r15
  417fb3:	push   r14
  417fb5:	push   r13
  417fb7:	push   r12
  417fb9:	push   rbx
  417fba:	push   rax
  417fbb:	movzx  eax,WORD PTR [rsi+0x10]
  417fbf:	cmp    eax,0x4
  417fc2:	ja     4180ad <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  417fc8:	mov    r15,rsi
  417fcb:	mov    r14,rdi
  417fce:	mov    edi,0x128
  417fd3:	add    rdi,QWORD PTR [r14+0x48]
  417fd7:	mov    rsi,QWORD PTR [rsi+0x20]
  417fdb:	call   4190e0 <ptr_set_find_item@@Base>
  417fe0:	test   rax,rax
  417fe3:	je     4180ad <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  417fe9:	mov    r12,QWORD PTR [r14+0x40]
  417fed:	cmp    DWORD PTR [r14],0x0
  417ff1:	mov    QWORD PTR [rsp],r12
  417ff5:	je     41803f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36f>
  417ff7:	mov    rax,QWORD PTR [r15+0x18]
  417ffb:	mov    rbp,QWORD PTR [rax]
  417ffe:	mov    r12,QWORD PTR [rsp]
  418002:	test   rbp,rbp
  418005:	je     41803f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36f>
  418007:	mov    rbx,QWORD PTR [rsp]
  41800b:	nop    DWORD PTR [rax+rax*1+0x0]
  418010:	mov    rax,QWORD PTR [rbp+0x8]
  418014:	movsxd r13,DWORD PTR [rax+0x8]
  418018:	mov    rsi,QWORD PTR [rax]
  41801b:	mov    rdi,rbx
  41801e:	mov    rdx,r13
  418021:	call   406190 <memcpy@plt>
  418026:	lea    r12,[rbx+r13*1]
  41802a:	add    r12,0x1
  41802e:	mov    BYTE PTR [rbx+r13*1],0x2e
  418033:	mov    rbp,QWORD PTR [rbp+0x0]
  418037:	mov    rbx,r12
  41803a:	test   rbp,rbp
  41803d:	jne    418010 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
  41803f:	mov    rax,QWORD PTR [r15+0x8]
  418043:	movsxd rbx,DWORD PTR [rax+0x8]
  418047:	mov    rsi,QWORD PTR [rax]
  41804a:	mov    rdi,r12
  41804d:	mov    rdx,rbx
  418050:	call   406190 <memcpy@plt>
  418055:	lea    rax,[r12+rbx*1]
  418059:	add    rax,0x1
  41805d:	mov    BYTE PTR [r12+rbx*1],0x0
  418062:	mov    QWORD PTR [r14+0x40],rax
  418066:	mov    eax,DWORD PTR [r15+0x10]
  41806a:	lea    ecx,[rax-0x3]
  41806d:	movzx  ecx,cx
  418070:	cmp    ecx,0x2
  418073:	jb     418096 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c6>
  418075:	movzx  eax,ax
  418078:	cmp    eax,0x1
  41807b:	ja     4180ad <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  41807d:	mov    rax,QWORD PTR [r14+0x30]
  418081:	mov    QWORD PTR [rax],r15
  418084:	mov    rcx,QWORD PTR [rsp]
  418088:	mov    QWORD PTR [rax+0x8],rcx
  41808c:	add    rax,0x10
  418090:	mov    QWORD PTR [r14+0x30],rax
  418094:	jmp    4180ad <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  418096:	mov    rax,QWORD PTR [r14+0x38]
  41809a:	mov    QWORD PTR [rax],r15
  41809d:	mov    rcx,QWORD PTR [rsp]
  4180a1:	mov    QWORD PTR [rax+0x8],rcx
  4180a5:	add    rax,0x10
  4180a9:	mov    QWORD PTR [r14+0x38],rax
  4180ad:	add    rsp,0x8
  4180b1:	pop    rbx
  4180b2:	pop    r12
  4180b4:	pop    r13
  4180b6:	pop    r14
  4180b8:	pop    r15
  4180ba:	pop    rbp
  4180bb:	ret    
  4180bc:	nop    DWORD PTR [rax+0x0]
  4180c0:	mov    rdi,QWORD PTR [rdi+0x8]
  4180c4:	mov    rsi,QWORD PTR [rsi+0x8]
  4180c8:	jmp    406150 <strcmp@plt>
  4180cd:	nop    DWORD PTR [rax]
  4180d0:	push   rbp
  4180d1:	push   r15
  4180d3:	push   r14
  4180d5:	push   rbx
  4180d6:	push   rax
  4180d7:	mov    r15,rdi
  4180da:	mov    r14d,0xffffffff
  4180e0:	xor    ebp,ebp
  4180e2:	mov    ecx,DWORD PTR [rsp+0x40]
  4180e6:	add    ecx,0xfffffffe
  4180e9:	movzx  eax,cx
  4180ec:	cmp    eax,0xd
  4180ef:	ja     4181a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d8>
  4180f5:	lea    rax,[rsp+0x30]
  4180fa:	mov    dl,0xd
  4180fc:	movzx  ecx,cx
  4180ff:	lea    rsi,[rip+0x2dbe2]        # 445ce8 <_IO_stdin_used@@Base+0x17ce8>
  418106:	movsxd rdi,DWORD PTR [rsi+rcx*4]
  41810a:	add    rdi,rsi
  41810d:	mov    cl,0xd
  41810f:	xor    ebx,ebx
  418111:	jmp    rdi
  418113:	mov    cl,0xe
  418115:	mov    r14d,0xffffffff
  41811b:	jmp    41814a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  41811d:	mov    rax,QWORD PTR [rax]
  418120:	mov    r14d,DWORD PTR [rax+0xc8]
  418127:	movzx  ecx,WORD PTR [rax+0x10]
  41812b:	mov    dl,0xf
  41812d:	cmp    ecx,0x2
  418130:	jb     418169 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x499>
  418132:	movzx  ecx,cx
  418135:	cmp    ecx,0x3
  418138:	jne    4181ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
  41813a:	add    rax,0x48
  41813e:	mov    cl,0xe
  418140:	jmp    41814a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  418142:	mov    r14d,0xffffffff
  418148:	xor    ecx,ecx
  41814a:	mov    eax,DWORD PTR [rax]
  41814c:	add    eax,0xffffffff
  41814f:	cmp    eax,0xa
  418152:	ja     418170 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a0>
  418154:	cdqe   
  418156:	lea    rdx,[rip+0x2dbe3]        # 445d40 <_IO_stdin_used@@Base+0x17d40>
  41815d:	mov    dl,BYTE PTR [rax+rdx*1]
  418160:	test   cl,cl
  418162:	je     418176 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a6>
  418164:	cmp    cl,0xe
  418167:	jne    4181b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e7>
  418169:	mov    bpl,0xe
  41816c:	mov    ebx,edx
  41816e:	jmp    4181bb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  418170:	xor    edx,edx
  418172:	test   cl,cl
  418174:	jne    418164 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x494>
  418176:	xor    ebx,ebx
  418178:	mov    ebp,edx
  41817a:	jmp    4181bb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  41817c:	mov    rax,QWORD PTR [rax]
  41817f:	mov    edx,DWORD PTR [rax+0xc8]
  418185:	movzx  esi,WORD PTR [rax+0x10]
  418189:	mov    cl,0xf
  41818b:	cmp    esi,0x2
  41818e:	jb     4181b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e4>
  418190:	movzx  ecx,si
  418193:	cmp    ecx,0x4
  418196:	je     4181b2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e2>
  418198:	cmp    ecx,0x3
  41819b:	jne    4181ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
  41819d:	add    rax,0x48
  4181a1:	xor    ecx,ecx
  4181a3:	mov    r14d,edx
  4181a6:	jmp    41814a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  4181a8:	xor    ebx,ebx
  4181aa:	jmp    4181bb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  4181ac:	xor    ebp,ebp
  4181ae:	xor    ebx,ebx
  4181b0:	jmp    4181bb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  4181b2:	mov    cl,0x10
  4181b4:	mov    r14d,edx
  4181b7:	xor    ebx,ebx
  4181b9:	mov    ebp,ecx
  4181bb:	mov    esi,0x3
  4181c0:	mov    rdi,r15
  4181c3:	call   429180 <flatcc_builder_start_table@@Base>
  4181c8:	test   eax,eax
  4181ca:	je     4181d9 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x509>
  4181cc:	xor    eax,eax
  4181ce:	add    rsp,0x8
  4181d2:	pop    rbx
  4181d3:	pop    r14
  4181d5:	pop    r15
  4181d7:	pop    rbp
  4181d8:	ret    
  4181d9:	cmp    r14d,0xffffffff
  4181dd:	je     4181fe <__flatcc_fb_codegen_bfbs_to_file@@Base+0x52e>
  4181df:	mov    esi,0x2
  4181e4:	mov    edx,0x4
  4181e9:	mov    ecx,0x4
  4181ee:	mov    rdi,r15
  4181f1:	call   42a500 <flatcc_builder_table_add@@Base>
  4181f6:	test   rax,rax
  4181f9:	je     4181cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  4181fb:	mov    DWORD PTR [rax],r14d
  4181fe:	test   bpl,bpl
  418201:	je     41821f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54f>
  418203:	xor    esi,esi
  418205:	mov    edx,0x1
  41820a:	mov    ecx,0x1
  41820f:	mov    rdi,r15
  418212:	call   42a500 <flatcc_builder_table_add@@Base>
  418217:	test   rax,rax
  41821a:	je     4181cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  41821c:	mov    BYTE PTR [rax],bpl
  41821f:	test   bl,bl
  418221:	je     418241 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x571>
  418223:	mov    esi,0x1
  418228:	mov    edx,0x1
  41822d:	mov    ecx,0x1
  418232:	mov    rdi,r15
  418235:	call   42a500 <flatcc_builder_table_add@@Base>
  41823a:	test   rax,rax
  41823d:	je     4181cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  41823f:	mov    BYTE PTR [rax],bl
  418241:	lea    rsi,[rip+0x2dad8]        # 445d20 <_IO_stdin_used@@Base+0x17d20>
  418248:	xor    edx,edx
  41824a:	mov    rdi,r15
  41824d:	call   429b20 <flatcc_builder_check_required@@Base>
  418252:	test   eax,eax
  418254:	je     418268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x598>
  418256:	mov    rdi,r15
  418259:	add    rsp,0x8
  41825d:	pop    rbx
  41825e:	pop    r14
  418260:	pop    r15
  418262:	pop    rbp
  418263:	jmp    429b90 <flatcc_builder_end_table@@Base>
  418268:	lea    rdi,[rip+0x2db08]        # 445d77 <_IO_stdin_used@@Base+0x17d77>
  41826f:	lea    rsi,[rip+0x2db8e]        # 445e04 <_IO_stdin_used@@Base+0x17e04>
  418276:	lea    rcx,[rip+0x2dc00]        # 445e7d <_IO_stdin_used@@Base+0x17e7d>
  41827d:	mov    edx,0x17
  418282:	call   4060f0 <__assert_fail@plt>
  418287:	nop    WORD PTR [rax+rax*1+0x0]
  418290:	push   rbp
  418291:	push   r15
  418293:	push   r14
  418295:	push   r13
  418297:	push   r12
  418299:	push   rbx
  41829a:	sub    rsp,0x18
  41829e:	lea    rbp,[rsi+rsi*1]
  4182a2:	mov    QWORD PTR [rsp+0x10],rdx
  4182a7:	cmp    rbp,rdx
  4182aa:	ja     4184de <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  4182b0:	mov    r13,rsi
  4182b3:	mov    QWORD PTR [rsp+0x8],rdi
  4182b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4182c0:	cmp    rbp,QWORD PTR [rsp+0x10]
  4182c5:	jae    4183d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x700>
  4182cb:	test   rdi,rdi
  4182ce:	je     4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  4182d4:	mov    esi,DWORD PTR [rdi-0x4]
  4182d7:	cmp    rbp,rsi
  4182da:	jae    4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  4182e0:	lea    rcx,[rdi+rbp*4]
  4182e4:	mov    eax,DWORD PTR [rdi+rbp*4]
  4182e7:	add    rax,rcx
  4182ea:	je     418515 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  4182f0:	movsxd rcx,DWORD PTR [rax]
  4182f3:	mov    rdx,rax
  4182f6:	sub    rdx,rcx
  4182f9:	movzx  edx,WORD PTR [rdx]
  4182fc:	cmp    edx,0x6
  4182ff:	jb     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418305:	neg    rcx
  418308:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  41830d:	test   rcx,rcx
  418310:	je     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418316:	mov    rbx,rbp
  418319:	or     rbx,0x1
  41831d:	cmp    rbx,rsi
  418320:	jae    4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  418326:	lea    r8,[rdi+rbx*4]
  41832a:	mov    edx,DWORD PTR [rdi+rbx*4]
  41832d:	add    rdx,r8
  418330:	je     418515 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  418336:	mov    QWORD PTR [rsp],rsi
  41833a:	movsxd rsi,DWORD PTR [rdx]
  41833d:	mov    rdi,rdx
  418340:	sub    rdi,rsi
  418343:	movzx  edi,WORD PTR [rdi]
  418346:	cmp    edi,0x6
  418349:	jb     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  41834f:	neg    rsi
  418352:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  418357:	test   rsi,rsi
  41835a:	je     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418360:	lea    rdi,[rax+rcx*1]
  418364:	mov    eax,DWORD PTR [rax+rcx*1]
  418367:	add    rdi,rax
  41836a:	add    rdi,0x4
  41836e:	lea    rax,[rdx+rsi*1]
  418372:	mov    ecx,DWORD PTR [rdx+rsi*1]
  418375:	lea    rsi,[rcx+rax*1]
  418379:	add    rsi,0x4
  41837d:	mov    r14d,DWORD PTR [rcx+rax*1]
  418381:	mov    r15d,DWORD PTR [rdi-0x4]
  418385:	cmp    r15d,r14d
  418388:	mov    edx,r14d
  41838b:	cmovb  edx,r15d
  41838f:	call   406060 <strncmp@plt>
  418394:	test   eax,eax
  418396:	mov    rax,rbx
  418399:	cmovne rax,rbp
  41839d:	cmovs  rax,rbx
  4183a1:	cmovne rbp,rax
  4183a5:	cmp    r15d,r14d
  4183a8:	cmovb  rbp,rax
  4183ac:	mov    r12,rbp
  4183af:	mov    rdi,QWORD PTR [rsp+0x8]
  4183b4:	mov    rbx,QWORD PTR [rsp]
  4183b8:	cmp    r13,rbx
  4183bb:	jb     4183e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
  4183bd:	jmp    4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  4183c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4183cc:	nop    DWORD PTR [rax+0x0]
  4183d0:	test   rdi,rdi
  4183d3:	je     4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  4183d9:	mov    ebx,DWORD PTR [rdi-0x4]
  4183dc:	mov    r12,rbp
  4183df:	cmp    r13,rbx
  4183e2:	jae    4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  4183e8:	lea    rsi,[rdi+r13*4]
  4183ec:	mov    r14d,DWORD PTR [rdi+r13*4]
  4183f0:	mov    rax,rsi
  4183f3:	add    rax,r14
  4183f6:	je     418515 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  4183fc:	movsxd rcx,DWORD PTR [rax]
  4183ff:	mov    rdx,rax
  418402:	sub    rdx,rcx
  418405:	movzx  edx,WORD PTR [rdx]
  418408:	cmp    edx,0x6
  41840b:	jb     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418411:	neg    rcx
  418414:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  418419:	test   rcx,rcx
  41841c:	je     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418422:	cmp    r12,rbx
  418425:	jae    4184f6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  41842b:	lea    rbx,[rdi+r12*4]
  41842f:	mov    ebp,DWORD PTR [rdi+r12*4]
  418433:	mov    rdx,rbx
  418436:	add    rdx,rbp
  418439:	je     418515 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  41843f:	mov    QWORD PTR [rsp],rsi
  418443:	movsxd rsi,DWORD PTR [rdx]
  418446:	mov    rdi,rdx
  418449:	sub    rdi,rsi
  41844c:	movzx  edi,WORD PTR [rdi]
  41844f:	cmp    edi,0x6
  418452:	jb     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418458:	neg    rsi
  41845b:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  418460:	test   rsi,rsi
  418463:	je     4184ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  418469:	lea    rdi,[rax+rcx*1]
  41846d:	mov    eax,DWORD PTR [rax+rcx*1]
  418470:	add    rdi,rax
  418473:	add    rdi,0x4
  418477:	lea    rax,[rdx+rsi*1]
  41847b:	mov    ecx,DWORD PTR [rdx+rsi*1]
  41847e:	lea    rsi,[rcx+rax*1]
  418482:	add    rsi,0x4
  418486:	mov    edx,DWORD PTR [rcx+rax*1]
  418489:	mov    eax,DWORD PTR [rdi-0x4]
  41848c:	cmp    eax,edx
  41848e:	setb   r15b
  418492:	cmovb  edx,eax
  418495:	call   406060 <strncmp@plt>
  41849a:	test   eax,eax
  41849c:	setne  cl
  41849f:	setle  al
  4184a2:	or     cl,r15b
  4184a5:	cmp    cl,0x1
  4184a8:	mov    rdi,QWORD PTR [rsp+0x8]
  4184ad:	jne    4184de <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  4184af:	test   al,al
  4184b1:	je     4184de <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  4184b3:	sub    r13d,r12d
  4184b6:	lea    eax,[r13*4+0x0]
  4184be:	sub    ebp,eax
  4184c0:	lea    eax,[r14+r13*4]
  4184c4:	mov    rcx,QWORD PTR [rsp]
  4184c8:	mov    DWORD PTR [rcx],ebp
  4184ca:	mov    DWORD PTR [rbx],eax
  4184cc:	lea    rbp,[r12+r12*1]
  4184d0:	mov    r13,r12
  4184d3:	cmp    rbp,QWORD PTR [rsp+0x10]
  4184d8:	jbe    4182c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
  4184de:	add    rsp,0x18
  4184e2:	pop    rbx
  4184e3:	pop    r12
  4184e5:	pop    r13
  4184e7:	pop    r14
  4184e9:	pop    r15
  4184eb:	pop    rbp
  4184ec:	ret    
  4184ed:	lea    rdi,[rip+0x2deef]        # 4463e3 <_IO_stdin_used@@Base+0x183e3>
  4184f4:	jmp    41851c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84c>
  4184f6:	lea    rdi,[rip+0x2df07]        # 446404 <_IO_stdin_used@@Base+0x18404>
  4184fd:	lea    rsi,[rip+0x2de1a]        # 44631e <_IO_stdin_used@@Base+0x1831e>
  418504:	lea    rcx,[rip+0x2dfc0]        # 4464cb <_IO_stdin_used@@Base+0x184cb>
  41850b:	mov    edx,0xc0
  418510:	call   4060f0 <__assert_fail@plt>
  418515:	lea    rdi,[rip+0x2dddc]        # 4462f8 <_IO_stdin_used@@Base+0x182f8>
  41851c:	lea    rsi,[rip+0x2ddfb]        # 44631e <_IO_stdin_used@@Base+0x1831e>
  418523:	lea    rcx,[rip+0x2df5c]        # 446486 <_IO_stdin_used@@Base+0x18486>
  41852a:	mov    edx,0xc3
  41852f:	call   4060f0 <__assert_fail@plt>
  418534:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41853e:	xchg   ax,ax

0000000000418540 <str_set_clear@@Base>:
  418540:	push   rbx
  418541:	mov    rbx,rdi
  418544:	mov    rdi,QWORD PTR [rdi]
  418547:	test   rdi,rdi
  41854a:	je     418551 <str_set_clear@@Base+0x11>
  41854c:	call   406040 <free@plt>
  418551:	vxorps xmm0,xmm0,xmm0
  418555:	vmovups YMMWORD PTR [rbx],ymm0
  418559:	pop    rbx
  41855a:	vzeroupper 
  41855d:	ret    
  41855e:	xchg   ax,ax

0000000000418560 <str_set_destroy@@Base>:
  418560:	push   r15
  418562:	push   r14
  418564:	push   r13
  418566:	push   r12
  418568:	push   rbx
  418569:	mov    r12,rdi
  41856c:	test   rsi,rsi
  41856f:	je     4185b6 <str_set_destroy@@Base+0x56>
  418571:	mov    rax,QWORD PTR [r12+0x18]
  418576:	test   rax,rax
  418579:	je     4185b6 <str_set_destroy@@Base+0x56>
  41857b:	mov    r14,rdx
  41857e:	mov    r15,rsi
  418581:	mov    r13,QWORD PTR [r12]
  418585:	xor    ebx,ebx
  418587:	nop    WORD PTR [rax+rax*1+0x0]
  418590:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  418595:	mov    rcx,rsi
  418598:	or     rcx,0x2
  41859c:	cmp    rcx,0x2
  4185a0:	je     4185ad <str_set_destroy@@Base+0x4d>
  4185a2:	mov    rdi,r14
  4185a5:	call   r15
  4185a8:	mov    rax,QWORD PTR [r12+0x18]
  4185ad:	add    rbx,0x1
  4185b1:	cmp    rbx,rax
  4185b4:	jb     418590 <str_set_destroy@@Base+0x30>
  4185b6:	mov    rdi,QWORD PTR [r12]
  4185ba:	test   rdi,rdi
  4185bd:	je     4185c4 <str_set_destroy@@Base+0x64>
  4185bf:	call   406040 <free@plt>
  4185c4:	vxorps xmm0,xmm0,xmm0
  4185c8:	vmovups YMMWORD PTR [r12],ymm0
  4185ce:	pop    rbx
  4185cf:	pop    r12
  4185d1:	pop    r13
  4185d3:	pop    r14
  4185d5:	pop    r15
  4185d7:	vzeroupper 
  4185da:	ret    
  4185db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004185e0 <str_set_init@@Base>:
  4185e0:	push   r14
  4185e2:	push   rbx
  4185e3:	push   rax
  4185e4:	mov    r14,rdi
  4185e7:	mov    eax,0x4
  4185ec:	nop    DWORD PTR [rax+0x0]
  4185f0:	mov    rbx,rax
  4185f3:	imul   rcx,rax,0xb3
  4185fa:	shr    rcx,0x8
  4185fe:	lea    rax,[rax+rax*1]
  418602:	cmp    rcx,rsi
  418605:	jb     4185f0 <str_set_init@@Base+0x10>
  418607:	mov    esi,0x8
  41860c:	mov    rdi,rbx
  41860f:	call   406140 <calloc@plt>
  418614:	mov    QWORD PTR [r14],rax
  418617:	test   rax,rax
  41861a:	je     41862e <str_set_init@@Base+0x4e>
  41861c:	vxorps xmm0,xmm0,xmm0
  418620:	vmovups XMMWORD PTR [r14+0x8],xmm0
  418626:	mov    QWORD PTR [r14+0x18],rbx
  41862a:	xor    eax,eax
  41862c:	jmp    418633 <str_set_init@@Base+0x53>
  41862e:	mov    eax,0xffffffff
  418633:	add    rsp,0x8
  418637:	pop    rbx
  418638:	pop    r14
  41863a:	ret    
  41863b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418640 <str_set_resize@@Base>:
  418640:	jmp    418650 <str_set_resize@@Base+0x10>
  418642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41864c:	nop    DWORD PTR [rax+0x0]
  418650:	push   r15
  418652:	push   r14
  418654:	push   r13
  418656:	push   r12
  418658:	push   rbx
  418659:	sub    rsp,0x20
  41865d:	mov    r14,rdi
  418660:	mov    r12,QWORD PTR [rdi]
  418663:	mov    rax,QWORD PTR [rdi+0x10]
  418667:	cmp    rax,rsi
  41866a:	cmova  rsi,rax
  41866e:	mov    eax,0x4
  418673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41867d:	nop    DWORD PTR [rax]
  418680:	mov    rbx,rax
  418683:	imul   rcx,rax,0xb3
  41868a:	shr    rcx,0x8
  41868e:	lea    rax,[rax+rax*1]
  418692:	cmp    rcx,rsi
  418695:	jb     418680 <str_set_resize@@Base+0x40>
  418697:	mov    esi,0x8
  41869c:	mov    rdi,rbx
  41869f:	call   406140 <calloc@plt>
  4186a4:	mov    QWORD PTR [rsp],rax
  4186a8:	test   rax,rax
  4186ab:	je     41872b <str_set_resize@@Base+0xeb>
  4186ad:	vxorps xmm0,xmm0,xmm0
  4186b1:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  4186b7:	mov    QWORD PTR [rsp+0x18],rbx
  4186bc:	mov    rax,QWORD PTR [r14+0x18]
  4186c0:	test   rax,rax
  4186c3:	je     418710 <str_set_resize@@Base+0xd0>
  4186c5:	xor    ebx,ebx
  4186c7:	mov    r15,rsp
  4186ca:	nop    WORD PTR [rax+rax*1+0x0]
  4186d0:	mov    r13,QWORD PTR [r12+rbx*8]
  4186d4:	mov    rcx,r13
  4186d7:	or     rcx,0x2
  4186db:	cmp    rcx,0x2
  4186df:	je     418704 <str_set_resize@@Base+0xc4>
  4186e1:	mov    rdi,r13
  4186e4:	call   4060d0 <strlen@plt>
  4186e9:	mov    r8d,0x3
  4186ef:	mov    rdi,r15
  4186f2:	mov    rsi,r13
  4186f5:	mov    rdx,rax
  4186f8:	mov    rcx,r13
  4186fb:	call   418760 <str_set_insert@@Base+0x10>
  418700:	mov    rax,QWORD PTR [r14+0x18]
  418704:	add    rbx,0x1
  418708:	cmp    rbx,rax
  41870b:	jb     4186d0 <str_set_resize@@Base+0x90>
  41870d:	mov    r12,QWORD PTR [r14]
  418710:	test   r12,r12
  418713:	je     41871d <str_set_resize@@Base+0xdd>
  418715:	mov    rdi,r12
  418718:	call   406040 <free@plt>
  41871d:	vmovups ymm0,YMMWORD PTR [rsp]
  418722:	vmovups YMMWORD PTR [r14],ymm0
  418727:	xor    eax,eax
  418729:	jmp    418730 <str_set_resize@@Base+0xf0>
  41872b:	mov    eax,0xffffffff
  418730:	add    rsp,0x20
  418734:	pop    rbx
  418735:	pop    r12
  418737:	pop    r13
  418739:	pop    r14
  41873b:	pop    r15
  41873d:	vzeroupper 
  418740:	ret    
  418741:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41874b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418750 <str_set_insert@@Base>:
  418750:	jmp    418760 <str_set_insert@@Base+0x10>
  418752:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41875c:	nop    DWORD PTR [rax+0x0]
  418760:	push   rbp
  418761:	push   r15
  418763:	push   r14
  418765:	push   r13
  418767:	push   r12
  418769:	push   rbx
  41876a:	sub    rsp,0x38
  41876e:	mov    QWORD PTR [rsp+0x20],rdx
  418773:	mov    QWORD PTR [rsp+0x18],rsi
  418778:	cmp    rcx,0x2
  41877c:	je     4188d4 <str_set_insert@@Base+0x184>
  418782:	mov    r13,rcx
  418785:	cmp    rcx,0x1
  418789:	je     4188f3 <str_set_insert@@Base+0x1a3>
  41878f:	test   r13,r13
  418792:	je     418912 <str_set_insert@@Base+0x1c2>
  418798:	mov    ebp,r8d
  41879b:	mov    rbx,rdi
  41879e:	mov    rsi,QWORD PTR [rdi+0x10]
  4187a2:	mov    r15,QWORD PTR [rdi+0x18]
  4187a6:	imul   rax,r15,0xb3
  4187ad:	shr    rax,0x8
  4187b1:	cmp    rsi,rax
  4187b4:	jb     4187cd <str_set_insert@@Base+0x7d>
  4187b6:	add    rsi,rsi
  4187b9:	mov    rdi,rbx
  4187bc:	call   418650 <str_set_resize@@Base+0x10>
  4187c1:	test   eax,eax
  4187c3:	jne    418931 <str_set_insert@@Base+0x1e1>
  4187c9:	mov    r15,QWORD PTR [rbx+0x18]
  4187cd:	mov    r14,QWORD PTR [rbx]
  4187d0:	add    r15,0xffffffffffffffff
  4187d4:	lea    rcx,[rsp+0x30]
  4187d9:	mov    edx,0x2f693b52
  4187de:	mov    rdi,QWORD PTR [rsp+0x18]
  4187e3:	mov    rsi,QWORD PTR [rsp+0x20]
  4187e8:	call   42c170 <cmetrohash64_1@@Base>
  4187ed:	mov    rcx,QWORD PTR [rsp+0x30]
  4187f2:	mov    r12d,ecx
  4187f5:	mov    eax,r15d
  4187f8:	and    eax,ecx
  4187fa:	mov    ecx,ebp
  4187fc:	or     ecx,0x1
  4187ff:	cmp    ecx,0x3
  418802:	jne    418833 <str_set_insert@@Base+0xe3>
  418804:	add    QWORD PTR [rbx+0x10],0x1
  418809:	jmp    418816 <str_set_insert@@Base+0xc6>
  41880b:	nop    DWORD PTR [rax+rax*1+0x0]
  418810:	mov    rax,r12
  418813:	and    rax,r15
  418816:	add    r12,0x1
  41881a:	mov    rcx,QWORD PTR [r14+rax*8]
  41881e:	or     rcx,0x2
  418822:	cmp    rcx,0x2
  418826:	jne    418810 <str_set_insert@@Base+0xc0>
  418828:	lea    rbx,[r14+rax*8]
  41882c:	xor    ebp,ebp
  41882e:	jmp    4188b1 <str_set_insert@@Base+0x161>
  418833:	mov    DWORD PTR [rsp+0xc],ebp
  418837:	mov    QWORD PTR [rsp+0x28],rbx
  41883c:	mov    QWORD PTR [rsp+0x10],r13
  418841:	add    r12,0x1
  418845:	xor    r13d,r13d
  418848:	jmp    41885a <str_set_insert@@Base+0x10a>
  41884a:	nop    WORD PTR [rax+rax*1+0x0]
  418850:	mov    rax,r12
  418853:	and    rax,r15
  418856:	add    r12,0x1
  41885a:	lea    rbx,[r14+rax*8]
  41885e:	mov    rbp,QWORD PTR [r14+rax*8]
  418862:	cmp    rbp,0x2
  418866:	je     418890 <str_set_insert@@Base+0x140>
  418868:	test   rbp,rbp
  41886b:	je     418899 <str_set_insert@@Base+0x149>
  41886d:	mov    rdi,QWORD PTR [rsp+0x18]
  418872:	mov    rsi,rbp
  418875:	mov    rdx,QWORD PTR [rsp+0x20]
  41887a:	call   406060 <strncmp@plt>
  41887f:	test   eax,eax
  418881:	jne    418850 <str_set_insert@@Base+0x100>
  418883:	jmp    4188c6 <str_set_insert@@Base+0x176>
  418885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41888f:	nop
  418890:	test   r13,r13
  418893:	cmove  r13,rbx
  418897:	jmp    418850 <str_set_insert@@Base+0x100>
  418899:	test   r13,r13
  41889c:	cmovne rbx,r13
  4188a0:	mov    rax,QWORD PTR [rsp+0x28]
  4188a5:	add    QWORD PTR [rax+0x10],0x1
  4188aa:	xor    ebp,ebp
  4188ac:	mov    r13,QWORD PTR [rsp+0x10]
  4188b1:	mov    QWORD PTR [rbx],r13
  4188b4:	mov    rax,rbp
  4188b7:	add    rsp,0x38
  4188bb:	pop    rbx
  4188bc:	pop    r12
  4188be:	pop    r13
  4188c0:	pop    r14
  4188c2:	pop    r15
  4188c4:	pop    rbp
  4188c5:	ret    
  4188c6:	cmp    DWORD PTR [rsp+0xc],0x0
  4188cb:	mov    r13,QWORD PTR [rsp+0x10]
  4188d0:	jne    4188b4 <str_set_insert@@Base+0x164>
  4188d2:	jmp    4188b1 <str_set_insert@@Base+0x161>
  4188d4:	lea    rdi,[rip+0x2dd80]        # 44665b <str_set_deleted@@Base+0xd3>
  4188db:	lea    rsi,[rip+0x2dcc5]        # 4465a7 <str_set_deleted@@Base+0x1f>
  4188e2:	lea    rcx,[rip+0x2dd28]        # 446611 <str_set_deleted@@Base+0x89>
  4188e9:	mov    edx,0x73
  4188ee:	call   4060f0 <__assert_fail@plt>
  4188f3:	lea    rdi,[rip+0x2dd78]        # 446672 <str_set_deleted@@Base+0xea>
  4188fa:	lea    rsi,[rip+0x2dca6]        # 4465a7 <str_set_deleted@@Base+0x1f>
  418901:	lea    rcx,[rip+0x2dd09]        # 446611 <str_set_deleted@@Base+0x89>
  418908:	mov    edx,0x74
  41890d:	call   4060f0 <__assert_fail@plt>
  418912:	lea    rdi,[rip+0x2dc77]        # 446590 <str_set_deleted@@Base+0x8>
  418919:	lea    rsi,[rip+0x2dc87]        # 4465a7 <str_set_deleted@@Base+0x1f>
  418920:	lea    rcx,[rip+0x2dcea]        # 446611 <str_set_deleted@@Base+0x89>
  418927:	mov    edx,0x72
  41892c:	call   4060f0 <__assert_fail@plt>
  418931:	mov    rax,QWORD PTR [rip+0x386c0]        # 450ff8 <stderr@GLIBC_2.2.5>
  418938:	mov    rdi,QWORD PTR [rax]
  41893b:	lea    rsi,[rip+0x2dd45]        # 446687 <str_set_deleted@@Base+0xff>
  418942:	lea    rdx,[rip+0x2dd55]        # 44669e <str_set_deleted@@Base+0x116>
  418949:	xor    eax,eax
  41894b:	call   406170 <fprintf@plt>
  418950:	mov    edi,0x1
  418955:	call   406200 <exit@plt>
  41895a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418960 <str_set_insert_item@@Base>:
  418960:	push   rbp
  418961:	push   r14
  418963:	push   rbx
  418964:	mov    r14d,edx
  418967:	mov    rbx,rsi
  41896a:	mov    rbp,rdi
  41896d:	mov    rdi,rsi
  418970:	call   4060d0 <strlen@plt>
  418975:	mov    rdi,rbp
  418978:	mov    rsi,rbx
  41897b:	mov    rdx,rax
  41897e:	mov    rcx,rbx
  418981:	mov    r8d,r14d
  418984:	pop    rbx
  418985:	pop    r14
  418987:	pop    rbp
  418988:	jmp    418760 <str_set_insert@@Base+0x10>
  41898d:	nop    DWORD PTR [rax]

0000000000418990 <str_set_find@@Base>:
  418990:	push   rbp
  418991:	push   r15
  418993:	push   r14
  418995:	push   r13
  418997:	push   r12
  418999:	push   rbx
  41899a:	push   rax
  41899b:	mov    r12,QWORD PTR [rdi]
  41899e:	test   r12,r12
  4189a1:	je     4189fd <str_set_find@@Base+0x6d>
  4189a3:	mov    r14,rdx
  4189a6:	mov    r15,rsi
  4189a9:	mov    r13,QWORD PTR [rdi+0x18]
  4189ad:	add    r13,0xffffffffffffffff
  4189b1:	mov    rcx,rsp
  4189b4:	mov    edx,0x2f693b52
  4189b9:	mov    rdi,rsi
  4189bc:	mov    rsi,r14
  4189bf:	call   42c170 <cmetrohash64_1@@Base>
  4189c4:	mov    ebp,DWORD PTR [rsp]
  4189c7:	jmp    4189d4 <str_set_find@@Base+0x44>
  4189c9:	nop    DWORD PTR [rax+0x0]
  4189d0:	add    rbp,0x1
  4189d4:	mov    rax,rbp
  4189d7:	and    rax,r13
  4189da:	mov    rbx,QWORD PTR [r12+rax*8]
  4189de:	cmp    rbx,0x2
  4189e2:	je     4189d0 <str_set_find@@Base+0x40>
  4189e4:	test   rbx,rbx
  4189e7:	je     4189fd <str_set_find@@Base+0x6d>
  4189e9:	mov    rdi,r15
  4189ec:	mov    rsi,rbx
  4189ef:	mov    rdx,r14
  4189f2:	call   406060 <strncmp@plt>
  4189f7:	test   eax,eax
  4189f9:	jne    4189d0 <str_set_find@@Base+0x40>
  4189fb:	jmp    4189ff <str_set_find@@Base+0x6f>
  4189fd:	xor    ebx,ebx
  4189ff:	mov    rax,rbx
  418a02:	add    rsp,0x8
  418a06:	pop    rbx
  418a07:	pop    r12
  418a09:	pop    r13
  418a0b:	pop    r14
  418a0d:	pop    r15
  418a0f:	pop    rbp
  418a10:	ret    
  418a11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418a20 <str_set_find_item@@Base>:
  418a20:	push   rbp
  418a21:	push   r15
  418a23:	push   r14
  418a25:	push   r13
  418a27:	push   r12
  418a29:	push   rbx
  418a2a:	push   rax
  418a2b:	mov    r15,rsi
  418a2e:	mov    rbx,rdi
  418a31:	mov    rdi,rsi
  418a34:	call   4060d0 <strlen@plt>
  418a39:	mov    r12,QWORD PTR [rbx]
  418a3c:	test   r12,r12
  418a3f:	je     418a9d <str_set_find_item@@Base+0x7d>
  418a41:	mov    r14,rax
  418a44:	mov    r13,QWORD PTR [rbx+0x18]
  418a48:	add    r13,0xffffffffffffffff
  418a4c:	mov    rcx,rsp
  418a4f:	mov    edx,0x2f693b52
  418a54:	mov    rdi,r15
  418a57:	mov    rsi,rax
  418a5a:	call   42c170 <cmetrohash64_1@@Base>
  418a5f:	mov    ebp,DWORD PTR [rsp]
  418a62:	jmp    418a74 <str_set_find_item@@Base+0x54>
  418a64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a6e:	xchg   ax,ax
  418a70:	add    rbp,0x1
  418a74:	mov    rax,rbp
  418a77:	and    rax,r13
  418a7a:	mov    rbx,QWORD PTR [r12+rax*8]
  418a7e:	cmp    rbx,0x2
  418a82:	je     418a70 <str_set_find_item@@Base+0x50>
  418a84:	test   rbx,rbx
  418a87:	je     418a9d <str_set_find_item@@Base+0x7d>
  418a89:	mov    rdi,r15
  418a8c:	mov    rsi,rbx
  418a8f:	mov    rdx,r14
  418a92:	call   406060 <strncmp@plt>
  418a97:	test   eax,eax
  418a99:	jne    418a70 <str_set_find_item@@Base+0x50>
  418a9b:	jmp    418a9f <str_set_find_item@@Base+0x7f>
  418a9d:	xor    ebx,ebx
  418a9f:	mov    rax,rbx
  418aa2:	add    rsp,0x8
  418aa6:	pop    rbx
  418aa7:	pop    r12
  418aa9:	pop    r13
  418aab:	pop    r14
  418aad:	pop    r15
  418aaf:	pop    rbp
  418ab0:	ret    
  418ab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418ac0 <str_set_remove@@Base>:
  418ac0:	push   rbp
  418ac1:	push   r15
  418ac3:	push   r14
  418ac5:	push   r13
  418ac7:	push   r12
  418ac9:	push   rbx
  418aca:	sub    rsp,0x18
  418ace:	mov    r13,QWORD PTR [rdi]
  418ad1:	test   r13,r13
  418ad4:	je     418b52 <str_set_remove@@Base+0x92>
  418ad6:	mov    rax,rdx
  418ad9:	mov    QWORD PTR [rsp],rdi
  418add:	mov    rbp,QWORD PTR [rdi+0x18]
  418ae1:	add    rbp,0xffffffffffffffff
  418ae5:	lea    rcx,[rsp+0x10]
  418aea:	mov    edx,0x2f693b52
  418aef:	mov    QWORD PTR [rsp+0x8],rsi
  418af4:	mov    rdi,rsi
  418af7:	mov    r12,rax
  418afa:	mov    rsi,rax
  418afd:	call   42c170 <cmetrohash64_1@@Base>
  418b02:	mov    r15d,DWORD PTR [rsp+0x10]
  418b07:	jmp    418b14 <str_set_remove@@Base+0x54>
  418b09:	nop    DWORD PTR [rax+0x0]
  418b10:	add    r15,0x1
  418b14:	mov    r14,r15
  418b17:	and    r14,rbp
  418b1a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  418b1f:	cmp    rbx,0x2
  418b23:	je     418b10 <str_set_remove@@Base+0x50>
  418b25:	test   rbx,rbx
  418b28:	je     418b52 <str_set_remove@@Base+0x92>
  418b2a:	mov    rdi,QWORD PTR [rsp+0x8]
  418b2f:	mov    rsi,rbx
  418b32:	mov    rdx,r12
  418b35:	call   406060 <strncmp@plt>
  418b3a:	test   eax,eax
  418b3c:	jne    418b10 <str_set_remove@@Base+0x50>
  418b3e:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  418b47:	mov    rax,QWORD PTR [rsp]
  418b4b:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  418b50:	jmp    418b54 <str_set_remove@@Base+0x94>
  418b52:	xor    ebx,ebx
  418b54:	mov    rax,rbx
  418b57:	add    rsp,0x18
  418b5b:	pop    rbx
  418b5c:	pop    r12
  418b5e:	pop    r13
  418b60:	pop    r14
  418b62:	pop    r15
  418b64:	pop    rbp
  418b65:	ret    
  418b66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418b70 <str_set_remove_item@@Base>:
  418b70:	push   rbp
  418b71:	push   r15
  418b73:	push   r14
  418b75:	push   r13
  418b77:	push   r12
  418b79:	push   rbx
  418b7a:	sub    rsp,0x18
  418b7e:	mov    r14,rsi
  418b81:	mov    rbx,rdi
  418b84:	mov    rdi,rsi
  418b87:	call   4060d0 <strlen@plt>
  418b8c:	mov    r13,QWORD PTR [rbx]
  418b8f:	test   r13,r13
  418b92:	je     418c12 <str_set_remove_item@@Base+0xa2>
  418b94:	mov    QWORD PTR [rsp],rbx
  418b98:	mov    rbp,QWORD PTR [rbx+0x18]
  418b9c:	add    rbp,0xffffffffffffffff
  418ba0:	lea    rcx,[rsp+0x10]
  418ba5:	mov    edx,0x2f693b52
  418baa:	mov    QWORD PTR [rsp+0x8],r14
  418baf:	mov    rdi,r14
  418bb2:	mov    r12,rax
  418bb5:	mov    rsi,rax
  418bb8:	call   42c170 <cmetrohash64_1@@Base>
  418bbd:	mov    r15d,DWORD PTR [rsp+0x10]
  418bc2:	jmp    418bd4 <str_set_remove_item@@Base+0x64>
  418bc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418bce:	xchg   ax,ax
  418bd0:	add    r15,0x1
  418bd4:	mov    r14,r15
  418bd7:	and    r14,rbp
  418bda:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  418bdf:	cmp    rbx,0x2
  418be3:	je     418bd0 <str_set_remove_item@@Base+0x60>
  418be5:	test   rbx,rbx
  418be8:	je     418c12 <str_set_remove_item@@Base+0xa2>
  418bea:	mov    rdi,QWORD PTR [rsp+0x8]
  418bef:	mov    rsi,rbx
  418bf2:	mov    rdx,r12
  418bf5:	call   406060 <strncmp@plt>
  418bfa:	test   eax,eax
  418bfc:	jne    418bd0 <str_set_remove_item@@Base+0x60>
  418bfe:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  418c07:	mov    rax,QWORD PTR [rsp]
  418c0b:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  418c10:	jmp    418c14 <str_set_remove_item@@Base+0xa4>
  418c12:	xor    ebx,ebx
  418c14:	mov    rax,rbx
  418c17:	add    rsp,0x18
  418c1b:	pop    rbx
  418c1c:	pop    r12
  418c1e:	pop    r13
  418c20:	pop    r14
  418c22:	pop    r15
  418c24:	pop    rbp
  418c25:	ret    
  418c26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418c30 <str_set_visit@@Base>:
  418c30:	push   r15
  418c32:	push   r14
  418c34:	push   r13
  418c36:	push   r12
  418c38:	push   rbx
  418c39:	mov    rax,QWORD PTR [rdi+0x18]
  418c3d:	test   rax,rax
  418c40:	je     418c76 <str_set_visit@@Base+0x46>
  418c42:	mov    r14,rdx
  418c45:	mov    r15,rsi
  418c48:	mov    r12,rdi
  418c4b:	mov    r13,QWORD PTR [rdi]
  418c4e:	xor    ebx,ebx
  418c50:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  418c55:	mov    rcx,rsi
  418c58:	or     rcx,0x2
  418c5c:	cmp    rcx,0x2
  418c60:	je     418c6d <str_set_visit@@Base+0x3d>
  418c62:	mov    rdi,r14
  418c65:	call   r15
  418c68:	mov    rax,QWORD PTR [r12+0x18]
  418c6d:	add    rbx,0x1
  418c71:	cmp    rbx,rax
  418c74:	jb     418c50 <str_set_visit@@Base+0x20>
  418c76:	pop    rbx
  418c77:	pop    r12
  418c79:	pop    r13
  418c7b:	pop    r14
  418c7d:	pop    r15
  418c7f:	ret    

0000000000418c80 <ptr_set_clear@@Base>:
  418c80:	push   rbx
  418c81:	mov    rbx,rdi
  418c84:	mov    rdi,QWORD PTR [rdi]
  418c87:	test   rdi,rdi
  418c8a:	je     418c91 <ptr_set_clear@@Base+0x11>
  418c8c:	call   406040 <free@plt>
  418c91:	vxorps xmm0,xmm0,xmm0
  418c95:	vmovups YMMWORD PTR [rbx],ymm0
  418c99:	pop    rbx
  418c9a:	vzeroupper 
  418c9d:	ret    
  418c9e:	xchg   ax,ax

0000000000418ca0 <ptr_set_destroy@@Base>:
  418ca0:	push   r15
  418ca2:	push   r14
  418ca4:	push   r13
  418ca6:	push   r12
  418ca8:	push   rbx
  418ca9:	mov    r12,rdi
  418cac:	test   rsi,rsi
  418caf:	je     418cf6 <ptr_set_destroy@@Base+0x56>
  418cb1:	mov    rax,QWORD PTR [r12+0x18]
  418cb6:	test   rax,rax
  418cb9:	je     418cf6 <ptr_set_destroy@@Base+0x56>
  418cbb:	mov    r14,rdx
  418cbe:	mov    r15,rsi
  418cc1:	mov    r13,QWORD PTR [r12]
  418cc5:	xor    ebx,ebx
  418cc7:	nop    WORD PTR [rax+rax*1+0x0]
  418cd0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  418cd5:	mov    rcx,rsi
  418cd8:	or     rcx,0x2
  418cdc:	cmp    rcx,0x2
  418ce0:	je     418ced <ptr_set_destroy@@Base+0x4d>
  418ce2:	mov    rdi,r14
  418ce5:	call   r15
  418ce8:	mov    rax,QWORD PTR [r12+0x18]
  418ced:	add    rbx,0x1
  418cf1:	cmp    rbx,rax
  418cf4:	jb     418cd0 <ptr_set_destroy@@Base+0x30>
  418cf6:	mov    rdi,QWORD PTR [r12]
  418cfa:	test   rdi,rdi
  418cfd:	je     418d04 <ptr_set_destroy@@Base+0x64>
  418cff:	call   406040 <free@plt>
  418d04:	vxorps xmm0,xmm0,xmm0
  418d08:	vmovups YMMWORD PTR [r12],ymm0
  418d0e:	pop    rbx
  418d0f:	pop    r12
  418d11:	pop    r13
  418d13:	pop    r14
  418d15:	pop    r15
  418d17:	vzeroupper 
  418d1a:	ret    
  418d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418d20 <ptr_set_init@@Base>:
  418d20:	push   r14
  418d22:	push   rbx
  418d23:	push   rax
  418d24:	mov    r14,rdi
  418d27:	mov    eax,0x4
  418d2c:	nop    DWORD PTR [rax+0x0]
  418d30:	mov    rbx,rax
  418d33:	imul   rcx,rax,0xb3
  418d3a:	shr    rcx,0x8
  418d3e:	lea    rax,[rax+rax*1]
  418d42:	cmp    rcx,rsi
  418d45:	jb     418d30 <ptr_set_init@@Base+0x10>
  418d47:	mov    esi,0x8
  418d4c:	mov    rdi,rbx
  418d4f:	call   406140 <calloc@plt>
  418d54:	mov    QWORD PTR [r14],rax
  418d57:	test   rax,rax
  418d5a:	je     418d6e <ptr_set_init@@Base+0x4e>
  418d5c:	vxorps xmm0,xmm0,xmm0
  418d60:	vmovups XMMWORD PTR [r14+0x8],xmm0
  418d66:	mov    QWORD PTR [r14+0x18],rbx
  418d6a:	xor    eax,eax
  418d6c:	jmp    418d73 <ptr_set_init@@Base+0x53>
  418d6e:	mov    eax,0xffffffff
  418d73:	add    rsp,0x8
  418d77:	pop    rbx
  418d78:	pop    r14
  418d7a:	ret    
  418d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418d80 <ptr_set_resize@@Base>:
  418d80:	jmp    418d90 <ptr_set_resize@@Base+0x10>
  418d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d8c:	nop    DWORD PTR [rax+0x0]
  418d90:	push   r15
  418d92:	push   r14
  418d94:	push   r12
  418d96:	push   rbx
  418d97:	sub    rsp,0x28
  418d9b:	mov    r14,rdi
  418d9e:	mov    r12,QWORD PTR [rdi]
  418da1:	mov    rax,QWORD PTR [rdi+0x10]
  418da5:	cmp    rax,rsi
  418da8:	cmova  rsi,rax
  418dac:	mov    eax,0x4
  418db1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  418dc0:	mov    rbx,rax
  418dc3:	imul   rcx,rax,0xb3
  418dca:	shr    rcx,0x8
  418dce:	lea    rax,[rax+rax*1]
  418dd2:	cmp    rcx,rsi
  418dd5:	jb     418dc0 <ptr_set_resize@@Base+0x40>
  418dd7:	mov    esi,0x8
  418ddc:	mov    rdi,rbx
  418ddf:	call   406140 <calloc@plt>
  418de4:	mov    QWORD PTR [rsp+0x8],rax
  418de9:	test   rax,rax
  418dec:	je     418e5d <ptr_set_resize@@Base+0xdd>
  418dee:	vxorps xmm0,xmm0,xmm0
  418df2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  418df8:	mov    QWORD PTR [rsp+0x20],rbx
  418dfd:	mov    rax,QWORD PTR [r14+0x18]
  418e01:	test   rax,rax
  418e04:	je     418e41 <ptr_set_resize@@Base+0xc1>
  418e06:	xor    ebx,ebx
  418e08:	lea    r15,[rsp+0x8]
  418e0d:	nop    DWORD PTR [rax]
  418e10:	mov    rsi,QWORD PTR [r12+rbx*8]
  418e14:	mov    rcx,rsi
  418e17:	or     rcx,0x2
  418e1b:	cmp    rcx,0x2
  418e1f:	je     418e35 <ptr_set_resize@@Base+0xb5>
  418e21:	mov    ecx,0x3
  418e26:	mov    rdi,r15
  418e29:	mov    rdx,rsi
  418e2c:	call   418e90 <ptr_set_insert@@Base+0x10>
  418e31:	mov    rax,QWORD PTR [r14+0x18]
  418e35:	add    rbx,0x1
  418e39:	cmp    rbx,rax
  418e3c:	jb     418e10 <ptr_set_resize@@Base+0x90>
  418e3e:	mov    r12,QWORD PTR [r14]
  418e41:	test   r12,r12
  418e44:	je     418e4e <ptr_set_resize@@Base+0xce>
  418e46:	mov    rdi,r12
  418e49:	call   406040 <free@plt>
  418e4e:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  418e54:	vmovups YMMWORD PTR [r14],ymm0
  418e59:	xor    eax,eax
  418e5b:	jmp    418e62 <ptr_set_resize@@Base+0xe2>
  418e5d:	mov    eax,0xffffffff
  418e62:	add    rsp,0x28
  418e66:	pop    rbx
  418e67:	pop    r12
  418e69:	pop    r14
  418e6b:	pop    r15
  418e6d:	vzeroupper 
  418e70:	ret    
  418e71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418e80 <ptr_set_insert@@Base>:
  418e80:	mov    rdx,rcx
  418e83:	mov    ecx,r8d
  418e86:	jmp    418e90 <ptr_set_insert@@Base+0x10>
  418e88:	nop    DWORD PTR [rax+rax*1+0x0]
  418e90:	push   rbp
  418e91:	push   r15
  418e93:	push   r14
  418e95:	push   r13
  418e97:	push   r12
  418e99:	push   rbx
  418e9a:	sub    rsp,0x18
  418e9e:	cmp    rdx,0x2
  418ea2:	je     418fd4 <ptr_set_insert@@Base+0x154>
  418ea8:	mov    r14,rdx
  418eab:	cmp    rdx,0x1
  418eaf:	je     418ff3 <ptr_set_insert@@Base+0x173>
  418eb5:	test   r14,r14
  418eb8:	je     419012 <ptr_set_insert@@Base+0x192>
  418ebe:	mov    r12d,ecx
  418ec1:	mov    r13,rsi
  418ec4:	mov    r15,rdi
  418ec7:	mov    rsi,QWORD PTR [rdi+0x10]
  418ecb:	mov    rbp,QWORD PTR [rdi+0x18]
  418ecf:	imul   rax,rbp,0xb3
  418ed6:	shr    rax,0x8
  418eda:	cmp    rsi,rax
  418edd:	jb     418ef6 <ptr_set_insert@@Base+0x76>
  418edf:	add    rsi,rsi
  418ee2:	mov    rdi,r15
  418ee5:	call   418d90 <ptr_set_resize@@Base+0x10>
  418eea:	test   eax,eax
  418eec:	jne    419031 <ptr_set_insert@@Base+0x1b1>
  418ef2:	mov    rbp,QWORD PTR [r15+0x18]
  418ef6:	mov    rbx,QWORD PTR [r15]
  418ef9:	add    rbp,0xffffffffffffffff
  418efd:	mov    QWORD PTR [rsp+0x8],r13
  418f02:	lea    rdi,[rsp+0x8]
  418f07:	lea    rcx,[rsp+0x10]
  418f0c:	mov    esi,0x8
  418f11:	mov    edx,0x2f693b52
  418f16:	call   42c170 <cmetrohash64_1@@Base>
  418f1b:	mov    rdx,QWORD PTR [rsp+0x10]
  418f20:	mov    eax,edx
  418f22:	mov    ecx,ebp
  418f24:	and    ecx,edx
  418f26:	mov    edx,r12d
  418f29:	or     edx,0x1
  418f2c:	cmp    edx,0x3
  418f2f:	jne    418f5e <ptr_set_insert@@Base+0xde>
  418f31:	add    QWORD PTR [r15+0x10],0x1
  418f36:	jmp    418f46 <ptr_set_insert@@Base+0xc6>
  418f38:	nop    DWORD PTR [rax+rax*1+0x0]
  418f40:	mov    rcx,rax
  418f43:	and    rcx,rbp
  418f46:	add    rax,0x1
  418f4a:	mov    rdx,QWORD PTR [rbx+rcx*8]
  418f4e:	or     rdx,0x2
  418f52:	cmp    rdx,0x2
  418f56:	jne    418f40 <ptr_set_insert@@Base+0xc0>
  418f58:	lea    rsi,[rbx+rcx*8]
  418f5c:	jmp    418fb5 <ptr_set_insert@@Base+0x135>
  418f5e:	add    rax,0x1
  418f62:	xor    edx,edx
  418f64:	jmp    418f7a <ptr_set_insert@@Base+0xfa>
  418f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f70:	mov    rcx,rax
  418f73:	and    rcx,rbp
  418f76:	add    rax,0x1
  418f7a:	lea    rsi,[rbx+rcx*8]
  418f7e:	mov    rcx,QWORD PTR [rbx+rcx*8]
  418f82:	cmp    rcx,0x2
  418f86:	je     418fa0 <ptr_set_insert@@Base+0x120>
  418f88:	test   rcx,rcx
  418f8b:	je     418fa9 <ptr_set_insert@@Base+0x129>
  418f8d:	cmp    rcx,r13
  418f90:	jne    418f70 <ptr_set_insert@@Base+0xf0>
  418f92:	jmp    418fcd <ptr_set_insert@@Base+0x14d>
  418f94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f9e:	xchg   ax,ax
  418fa0:	test   rdx,rdx
  418fa3:	cmove  rdx,rsi
  418fa7:	jmp    418f70 <ptr_set_insert@@Base+0xf0>
  418fa9:	test   rdx,rdx
  418fac:	cmovne rsi,rdx
  418fb0:	add    QWORD PTR [r15+0x10],0x1
  418fb5:	xor    r13d,r13d
  418fb8:	mov    QWORD PTR [rsi],r14
  418fbb:	mov    rax,r13
  418fbe:	add    rsp,0x18
  418fc2:	pop    rbx
  418fc3:	pop    r12
  418fc5:	pop    r13
  418fc7:	pop    r14
  418fc9:	pop    r15
  418fcb:	pop    rbp
  418fcc:	ret    
  418fcd:	test   r12d,r12d
  418fd0:	jne    418fbb <ptr_set_insert@@Base+0x13b>
  418fd2:	jmp    418fb8 <ptr_set_insert@@Base+0x138>
  418fd4:	lea    rdi,[rip+0x2d680]        # 44665b <str_set_deleted@@Base+0xd3>
  418fdb:	lea    rsi,[rip+0x2d5c5]        # 4465a7 <str_set_deleted@@Base+0x1f>
  418fe2:	lea    rcx,[rip+0x2d628]        # 446611 <str_set_deleted@@Base+0x89>
  418fe9:	mov    edx,0x73
  418fee:	call   4060f0 <__assert_fail@plt>
  418ff3:	lea    rdi,[rip+0x2d678]        # 446672 <str_set_deleted@@Base+0xea>
  418ffa:	lea    rsi,[rip+0x2d5a6]        # 4465a7 <str_set_deleted@@Base+0x1f>
  419001:	lea    rcx,[rip+0x2d609]        # 446611 <str_set_deleted@@Base+0x89>
  419008:	mov    edx,0x74
  41900d:	call   4060f0 <__assert_fail@plt>
  419012:	lea    rdi,[rip+0x2d577]        # 446590 <str_set_deleted@@Base+0x8>
  419019:	lea    rsi,[rip+0x2d587]        # 4465a7 <str_set_deleted@@Base+0x1f>
  419020:	lea    rcx,[rip+0x2d5ea]        # 446611 <str_set_deleted@@Base+0x89>
  419027:	mov    edx,0x72
  41902c:	call   4060f0 <__assert_fail@plt>
  419031:	mov    rax,QWORD PTR [rip+0x37fc0]        # 450ff8 <stderr@GLIBC_2.2.5>
  419038:	mov    rdi,QWORD PTR [rax]
  41903b:	lea    rsi,[rip+0x2d645]        # 446687 <str_set_deleted@@Base+0xff>
  419042:	lea    rdx,[rip+0x2d655]        # 44669e <str_set_deleted@@Base+0x116>
  419049:	xor    eax,eax
  41904b:	call   406170 <fprintf@plt>
  419050:	mov    edi,0x1
  419055:	call   406200 <exit@plt>
  41905a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419060 <ptr_set_insert_item@@Base>:
  419060:	mov    eax,edx
  419062:	mov    rdx,rsi
  419065:	mov    ecx,eax
  419067:	jmp    418e90 <ptr_set_insert@@Base+0x10>
  41906c:	nop    DWORD PTR [rax+0x0]

0000000000419070 <ptr_set_find@@Base>:
  419070:	push   r15
  419072:	push   r14
  419074:	push   rbx
  419075:	sub    rsp,0x10
  419079:	mov    r15,QWORD PTR [rdi]
  41907c:	test   r15,r15
  41907f:	je     4190d0 <ptr_set_find@@Base+0x60>
  419081:	mov    r14,rsi
  419084:	mov    rbx,QWORD PTR [rdi+0x18]
  419088:	add    rbx,0xffffffffffffffff
  41908c:	mov    QWORD PTR [rsp],rsi
  419090:	mov    rdi,rsp
  419093:	lea    rcx,[rsp+0x8]
  419098:	mov    esi,0x8
  41909d:	mov    edx,0x2f693b52
  4190a2:	call   42c170 <cmetrohash64_1@@Base>
  4190a7:	mov    eax,DWORD PTR [rsp+0x8]
  4190ab:	jmp    4190b4 <ptr_set_find@@Base+0x44>
  4190ad:	nop    DWORD PTR [rax]
  4190b0:	add    rax,0x1
  4190b4:	mov    rcx,rax
  4190b7:	and    rcx,rbx
  4190ba:	mov    rcx,QWORD PTR [r15+rcx*8]
  4190be:	cmp    rcx,0x2
  4190c2:	je     4190b0 <ptr_set_find@@Base+0x40>
  4190c4:	test   rcx,rcx
  4190c7:	je     4190d0 <ptr_set_find@@Base+0x60>
  4190c9:	cmp    rcx,r14
  4190cc:	jne    4190b0 <ptr_set_find@@Base+0x40>
  4190ce:	jmp    4190d3 <ptr_set_find@@Base+0x63>
  4190d0:	xor    r14d,r14d
  4190d3:	mov    rax,r14
  4190d6:	add    rsp,0x10
  4190da:	pop    rbx
  4190db:	pop    r14
  4190dd:	pop    r15
  4190df:	ret    

00000000004190e0 <ptr_set_find_item@@Base>:
  4190e0:	push   r15
  4190e2:	push   r14
  4190e4:	push   rbx
  4190e5:	sub    rsp,0x10
  4190e9:	mov    r15,QWORD PTR [rdi]
  4190ec:	test   r15,r15
  4190ef:	je     419140 <ptr_set_find_item@@Base+0x60>
  4190f1:	mov    r14,rsi
  4190f4:	mov    rbx,QWORD PTR [rdi+0x18]
  4190f8:	add    rbx,0xffffffffffffffff
  4190fc:	mov    QWORD PTR [rsp],rsi
  419100:	mov    rdi,rsp
  419103:	lea    rcx,[rsp+0x8]
  419108:	mov    esi,0x8
  41910d:	mov    edx,0x2f693b52
  419112:	call   42c170 <cmetrohash64_1@@Base>
  419117:	mov    eax,DWORD PTR [rsp+0x8]
  41911b:	jmp    419124 <ptr_set_find_item@@Base+0x44>
  41911d:	nop    DWORD PTR [rax]
  419120:	add    rax,0x1
  419124:	mov    rcx,rax
  419127:	and    rcx,rbx
  41912a:	mov    rcx,QWORD PTR [r15+rcx*8]
  41912e:	cmp    rcx,0x2
  419132:	je     419120 <ptr_set_find_item@@Base+0x40>
  419134:	test   rcx,rcx
  419137:	je     419140 <ptr_set_find_item@@Base+0x60>
  419139:	cmp    rcx,r14
  41913c:	jne    419120 <ptr_set_find_item@@Base+0x40>
  41913e:	jmp    419143 <ptr_set_find_item@@Base+0x63>
  419140:	xor    r14d,r14d
  419143:	mov    rax,r14
  419146:	add    rsp,0x10
  41914a:	pop    rbx
  41914b:	pop    r14
  41914d:	pop    r15
  41914f:	ret    

0000000000419150 <ptr_set_remove@@Base>:
  419150:	push   r15
  419152:	push   r14
  419154:	push   r12
  419156:	push   rbx
  419157:	sub    rsp,0x18
  41915b:	mov    r12,QWORD PTR [rdi]
  41915e:	test   r12,r12
  419161:	je     4191cd <ptr_set_remove@@Base+0x7d>
  419163:	mov    r15,rsi
  419166:	mov    r14,rdi
  419169:	mov    rbx,QWORD PTR [rdi+0x18]
  41916d:	add    rbx,0xffffffffffffffff
  419171:	mov    QWORD PTR [rsp+0x8],rsi
  419176:	lea    rdi,[rsp+0x8]
  41917b:	lea    rcx,[rsp+0x10]
  419180:	mov    esi,0x8
  419185:	mov    edx,0x2f693b52
  41918a:	call   42c170 <cmetrohash64_1@@Base>
  41918f:	mov    eax,DWORD PTR [rsp+0x10]
  419193:	jmp    4191a4 <ptr_set_remove@@Base+0x54>
  419195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41919f:	nop
  4191a0:	add    rax,0x1
  4191a4:	mov    rcx,rax
  4191a7:	and    rcx,rbx
  4191aa:	mov    rdx,QWORD PTR [r12+rcx*8]
  4191ae:	cmp    rdx,0x2
  4191b2:	je     4191a0 <ptr_set_remove@@Base+0x50>
  4191b4:	test   rdx,rdx
  4191b7:	je     4191cd <ptr_set_remove@@Base+0x7d>
  4191b9:	cmp    rdx,r15
  4191bc:	jne    4191a0 <ptr_set_remove@@Base+0x50>
  4191be:	mov    QWORD PTR [r12+rcx*8],0x2
  4191c6:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  4191cb:	jmp    4191d0 <ptr_set_remove@@Base+0x80>
  4191cd:	xor    r15d,r15d
  4191d0:	mov    rax,r15
  4191d3:	add    rsp,0x18
  4191d7:	pop    rbx
  4191d8:	pop    r12
  4191da:	pop    r14
  4191dc:	pop    r15
  4191de:	ret    
  4191df:	nop

00000000004191e0 <ptr_set_remove_item@@Base>:
  4191e0:	push   r15
  4191e2:	push   r14
  4191e4:	push   r12
  4191e6:	push   rbx
  4191e7:	sub    rsp,0x18
  4191eb:	mov    r12,QWORD PTR [rdi]
  4191ee:	test   r12,r12
  4191f1:	je     41925d <ptr_set_remove_item@@Base+0x7d>
  4191f3:	mov    r15,rsi
  4191f6:	mov    r14,rdi
  4191f9:	mov    rbx,QWORD PTR [rdi+0x18]
  4191fd:	add    rbx,0xffffffffffffffff
  419201:	mov    QWORD PTR [rsp+0x8],rsi
  419206:	lea    rdi,[rsp+0x8]
  41920b:	lea    rcx,[rsp+0x10]
  419210:	mov    esi,0x8
  419215:	mov    edx,0x2f693b52
  41921a:	call   42c170 <cmetrohash64_1@@Base>
  41921f:	mov    eax,DWORD PTR [rsp+0x10]
  419223:	jmp    419234 <ptr_set_remove_item@@Base+0x54>
  419225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41922f:	nop
  419230:	add    rax,0x1
  419234:	mov    rcx,rax
  419237:	and    rcx,rbx
  41923a:	mov    rdx,QWORD PTR [r12+rcx*8]
  41923e:	cmp    rdx,0x2
  419242:	je     419230 <ptr_set_remove_item@@Base+0x50>
  419244:	test   rdx,rdx
  419247:	je     41925d <ptr_set_remove_item@@Base+0x7d>
  419249:	cmp    rdx,r15
  41924c:	jne    419230 <ptr_set_remove_item@@Base+0x50>
  41924e:	mov    QWORD PTR [r12+rcx*8],0x2
  419256:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  41925b:	jmp    419260 <ptr_set_remove_item@@Base+0x80>
  41925d:	xor    r15d,r15d
  419260:	mov    rax,r15
  419263:	add    rsp,0x18
  419267:	pop    rbx
  419268:	pop    r12
  41926a:	pop    r14
  41926c:	pop    r15
  41926e:	ret    
  41926f:	nop

0000000000419270 <ptr_set_visit@@Base>:
  419270:	push   r15
  419272:	push   r14
  419274:	push   r13
  419276:	push   r12
  419278:	push   rbx
  419279:	mov    rax,QWORD PTR [rdi+0x18]
  41927d:	test   rax,rax
  419280:	je     4192b6 <ptr_set_visit@@Base+0x46>
  419282:	mov    r14,rdx
  419285:	mov    r15,rsi
  419288:	mov    r12,rdi
  41928b:	mov    r13,QWORD PTR [rdi]
  41928e:	xor    ebx,ebx
  419290:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419295:	mov    rcx,rsi
  419298:	or     rcx,0x2
  41929c:	cmp    rcx,0x2
  4192a0:	je     4192ad <ptr_set_visit@@Base+0x3d>
  4192a2:	mov    rdi,r14
  4192a5:	call   r15
  4192a8:	mov    rax,QWORD PTR [r12+0x18]
  4192ad:	add    rbx,0x1
  4192b1:	cmp    rbx,rax
  4192b4:	jb     419290 <ptr_set_visit@@Base+0x20>
  4192b6:	pop    rbx
  4192b7:	pop    r12
  4192b9:	pop    r13
  4192bb:	pop    r14
  4192bd:	pop    r15
  4192bf:	ret    

00000000004192c0 <fb_symbol_table_clear@@Base>:
  4192c0:	push   rbx
  4192c1:	mov    rbx,rdi
  4192c4:	mov    rdi,QWORD PTR [rdi]
  4192c7:	test   rdi,rdi
  4192ca:	je     4192d1 <fb_symbol_table_clear@@Base+0x11>
  4192cc:	call   406040 <free@plt>
  4192d1:	vxorps xmm0,xmm0,xmm0
  4192d5:	vmovups YMMWORD PTR [rbx],ymm0
  4192d9:	pop    rbx
  4192da:	vzeroupper 
  4192dd:	ret    
  4192de:	xchg   ax,ax

00000000004192e0 <fb_symbol_table_destroy@@Base>:
  4192e0:	push   r15
  4192e2:	push   r14
  4192e4:	push   r13
  4192e6:	push   r12
  4192e8:	push   rbx
  4192e9:	mov    r12,rdi
  4192ec:	test   rsi,rsi
  4192ef:	je     419336 <fb_symbol_table_destroy@@Base+0x56>
  4192f1:	mov    rax,QWORD PTR [r12+0x18]
  4192f6:	test   rax,rax
  4192f9:	je     419336 <fb_symbol_table_destroy@@Base+0x56>
  4192fb:	mov    r14,rdx
  4192fe:	mov    r15,rsi
  419301:	mov    r13,QWORD PTR [r12]
  419305:	xor    ebx,ebx
  419307:	nop    WORD PTR [rax+rax*1+0x0]
  419310:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419315:	mov    rcx,rsi
  419318:	or     rcx,0x2
  41931c:	cmp    rcx,0x2
  419320:	je     41932d <fb_symbol_table_destroy@@Base+0x4d>
  419322:	mov    rdi,r14
  419325:	call   r15
  419328:	mov    rax,QWORD PTR [r12+0x18]
  41932d:	add    rbx,0x1
  419331:	cmp    rbx,rax
  419334:	jb     419310 <fb_symbol_table_destroy@@Base+0x30>
  419336:	mov    rdi,QWORD PTR [r12]
  41933a:	test   rdi,rdi
  41933d:	je     419344 <fb_symbol_table_destroy@@Base+0x64>
  41933f:	call   406040 <free@plt>
  419344:	vxorps xmm0,xmm0,xmm0
  419348:	vmovups YMMWORD PTR [r12],ymm0
  41934e:	pop    rbx
  41934f:	pop    r12
  419351:	pop    r13
  419353:	pop    r14
  419355:	pop    r15
  419357:	vzeroupper 
  41935a:	ret    
  41935b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419360 <fb_symbol_table_init@@Base>:
  419360:	push   r14
  419362:	push   rbx
  419363:	push   rax
  419364:	mov    r14,rdi
  419367:	mov    eax,0x4
  41936c:	nop    DWORD PTR [rax+0x0]
  419370:	mov    rbx,rax
  419373:	imul   rcx,rax,0xb3
  41937a:	shr    rcx,0x8
  41937e:	lea    rax,[rax+rax*1]
  419382:	cmp    rcx,rsi
  419385:	jb     419370 <fb_symbol_table_init@@Base+0x10>
  419387:	mov    esi,0x8
  41938c:	mov    rdi,rbx
  41938f:	call   406140 <calloc@plt>
  419394:	mov    QWORD PTR [r14],rax
  419397:	test   rax,rax
  41939a:	je     4193ae <fb_symbol_table_init@@Base+0x4e>
  41939c:	vxorps xmm0,xmm0,xmm0
  4193a0:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4193a6:	mov    QWORD PTR [r14+0x18],rbx
  4193aa:	xor    eax,eax
  4193ac:	jmp    4193b3 <fb_symbol_table_init@@Base+0x53>
  4193ae:	mov    eax,0xffffffff
  4193b3:	add    rsp,0x8
  4193b7:	pop    rbx
  4193b8:	pop    r14
  4193ba:	ret    
  4193bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004193c0 <fb_symbol_table_resize@@Base>:
  4193c0:	jmp    4193d0 <fb_symbol_table_resize@@Base+0x10>
  4193c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193cc:	nop    DWORD PTR [rax+0x0]
  4193d0:	push   r15
  4193d2:	push   r14
  4193d4:	push   r12
  4193d6:	push   rbx
  4193d7:	sub    rsp,0x28
  4193db:	mov    r14,rdi
  4193de:	mov    r12,QWORD PTR [rdi]
  4193e1:	mov    rax,QWORD PTR [rdi+0x10]
  4193e5:	cmp    rax,rsi
  4193e8:	cmova  rsi,rax
  4193ec:	mov    eax,0x4
  4193f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193fb:	nop    DWORD PTR [rax+rax*1+0x0]
  419400:	mov    rbx,rax
  419403:	imul   rcx,rax,0xb3
  41940a:	shr    rcx,0x8
  41940e:	lea    rax,[rax+rax*1]
  419412:	cmp    rcx,rsi
  419415:	jb     419400 <fb_symbol_table_resize@@Base+0x40>
  419417:	mov    esi,0x8
  41941c:	mov    rdi,rbx
  41941f:	call   406140 <calloc@plt>
  419424:	mov    QWORD PTR [rsp+0x8],rax
  419429:	test   rax,rax
  41942c:	je     4194a6 <fb_symbol_table_resize@@Base+0xe6>
  41942e:	vxorps xmm0,xmm0,xmm0
  419432:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419438:	mov    QWORD PTR [rsp+0x20],rbx
  41943d:	mov    rax,QWORD PTR [r14+0x18]
  419441:	test   rax,rax
  419444:	je     41948a <fb_symbol_table_resize@@Base+0xca>
  419446:	xor    ebx,ebx
  419448:	lea    r15,[rsp+0x8]
  41944d:	nop    DWORD PTR [rax]
  419450:	mov    rcx,QWORD PTR [r12+rbx*8]
  419454:	mov    rdx,rcx
  419457:	or     rdx,0x2
  41945b:	cmp    rdx,0x2
  41945f:	je     41947e <fb_symbol_table_resize@@Base+0xbe>
  419461:	mov    rax,QWORD PTR [rcx+0x8]
  419465:	mov    rsi,QWORD PTR [rax]
  419468:	mov    rdx,QWORD PTR [rax+0x8]
  41946c:	mov    r8d,0x3
  419472:	mov    rdi,r15
  419475:	call   4194d0 <fb_symbol_table_insert@@Base+0x10>
  41947a:	mov    rax,QWORD PTR [r14+0x18]
  41947e:	add    rbx,0x1
  419482:	cmp    rbx,rax
  419485:	jb     419450 <fb_symbol_table_resize@@Base+0x90>
  419487:	mov    r12,QWORD PTR [r14]
  41948a:	test   r12,r12
  41948d:	je     419497 <fb_symbol_table_resize@@Base+0xd7>
  41948f:	mov    rdi,r12
  419492:	call   406040 <free@plt>
  419497:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41949d:	vmovups YMMWORD PTR [r14],ymm0
  4194a2:	xor    eax,eax
  4194a4:	jmp    4194ab <fb_symbol_table_resize@@Base+0xeb>
  4194a6:	mov    eax,0xffffffff
  4194ab:	add    rsp,0x28
  4194af:	pop    rbx
  4194b0:	pop    r12
  4194b2:	pop    r14
  4194b4:	pop    r15
  4194b6:	vzeroupper 
  4194b9:	ret    
  4194ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004194c0 <fb_symbol_table_insert@@Base>:
  4194c0:	jmp    4194d0 <fb_symbol_table_insert@@Base+0x10>
  4194c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194cc:	nop    DWORD PTR [rax+0x0]
  4194d0:	push   rbp
  4194d1:	push   r15
  4194d3:	push   r14
  4194d5:	push   r13
  4194d7:	push   r12
  4194d9:	push   rbx
  4194da:	sub    rsp,0x38
  4194de:	mov    QWORD PTR [rsp+0x20],rsi
  4194e3:	cmp    rcx,0x2
  4194e7:	je     419655 <fb_symbol_table_insert@@Base+0x195>
  4194ed:	mov    r13,rcx
  4194f0:	cmp    rcx,0x1
  4194f4:	je     419674 <fb_symbol_table_insert@@Base+0x1b4>
  4194fa:	test   r13,r13
  4194fd:	je     419693 <fb_symbol_table_insert@@Base+0x1d3>
  419503:	mov    rbp,rdx
  419506:	mov    rbx,rdi
  419509:	mov    DWORD PTR [rsp+0xc],r8d
  41950e:	mov    rsi,QWORD PTR [rdi+0x10]
  419512:	mov    r15,QWORD PTR [rdi+0x18]
  419516:	imul   rax,r15,0xb3
  41951d:	shr    rax,0x8
  419521:	cmp    rsi,rax
  419524:	mov    QWORD PTR [rsp+0x10],rdx
  419529:	jb     419547 <fb_symbol_table_insert@@Base+0x87>
  41952b:	add    rsi,rsi
  41952e:	mov    rdi,rbx
  419531:	call   4193d0 <fb_symbol_table_resize@@Base+0x10>
  419536:	test   eax,eax
  419538:	jne    4196b2 <fb_symbol_table_insert@@Base+0x1f2>
  41953e:	mov    r15,QWORD PTR [rbx+0x18]
  419542:	mov    rbp,QWORD PTR [rsp+0x10]
  419547:	mov    r14,QWORD PTR [rbx]
  41954a:	add    r15,0xffffffffffffffff
  41954e:	lea    rcx,[rsp+0x30]
  419553:	mov    edx,0x2f693b52
  419558:	mov    rdi,QWORD PTR [rsp+0x20]
  41955d:	mov    rsi,rbp
  419560:	call   42c170 <cmetrohash64_1@@Base>
  419565:	mov    rcx,QWORD PTR [rsp+0x30]
  41956a:	mov    r12d,ecx
  41956d:	mov    eax,r15d
  419570:	and    eax,ecx
  419572:	mov    ecx,DWORD PTR [rsp+0xc]
  419576:	or     ecx,0x1
  419579:	cmp    ecx,0x3
  41957c:	jne    4195b3 <fb_symbol_table_insert@@Base+0xf3>
  41957e:	add    QWORD PTR [rbx+0x10],0x1
  419583:	jmp    419596 <fb_symbol_table_insert@@Base+0xd6>
  419585:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41958f:	nop
  419590:	mov    rax,r12
  419593:	and    rax,r15
  419596:	add    r12,0x1
  41959a:	mov    rcx,QWORD PTR [r14+rax*8]
  41959e:	or     rcx,0x2
  4195a2:	cmp    rcx,0x2
  4195a6:	jne    419590 <fb_symbol_table_insert@@Base+0xd0>
  4195a8:	lea    rbp,[r14+rax*8]
  4195ac:	xor    ebx,ebx
  4195ae:	jmp    419631 <fb_symbol_table_insert@@Base+0x171>
  4195b3:	mov    QWORD PTR [rsp+0x28],rbx
  4195b8:	mov    QWORD PTR [rsp+0x18],r13
  4195bd:	add    r12,0x1
  4195c1:	xor    r13d,r13d
  4195c4:	mov    rdx,QWORD PTR [rsp+0x10]
  4195c9:	jmp    4195da <fb_symbol_table_insert@@Base+0x11a>
  4195cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4195d0:	mov    rax,r12
  4195d3:	and    rax,r15
  4195d6:	add    r12,0x1
  4195da:	lea    rbp,[r14+rax*8]
  4195de:	mov    rbx,QWORD PTR [r14+rax*8]
  4195e2:	cmp    rbx,0x2
  4195e6:	je     419610 <fb_symbol_table_insert@@Base+0x150>
  4195e8:	test   rbx,rbx
  4195eb:	je     419619 <fb_symbol_table_insert@@Base+0x159>
  4195ed:	mov    rax,QWORD PTR [rbx+0x8]
  4195f1:	cmp    QWORD PTR [rax+0x8],rdx
  4195f5:	jne    4195d0 <fb_symbol_table_insert@@Base+0x110>
  4195f7:	mov    rsi,QWORD PTR [rax]
  4195fa:	mov    rdi,QWORD PTR [rsp+0x20]
  4195ff:	call   406130 <memcmp@plt>
  419604:	mov    rdx,QWORD PTR [rsp+0x10]
  419609:	test   eax,eax
  41960b:	jne    4195d0 <fb_symbol_table_insert@@Base+0x110>
  41960d:	jmp    419647 <fb_symbol_table_insert@@Base+0x187>
  41960f:	nop
  419610:	test   r13,r13
  419613:	cmove  r13,rbp
  419617:	jmp    4195d0 <fb_symbol_table_insert@@Base+0x110>
  419619:	test   r13,r13
  41961c:	cmovne rbp,r13
  419620:	mov    rax,QWORD PTR [rsp+0x28]
  419625:	add    QWORD PTR [rax+0x10],0x1
  41962a:	xor    ebx,ebx
  41962c:	mov    r13,QWORD PTR [rsp+0x18]
  419631:	mov    QWORD PTR [rbp+0x0],r13
  419635:	mov    rax,rbx
  419638:	add    rsp,0x38
  41963c:	pop    rbx
  41963d:	pop    r12
  41963f:	pop    r13
  419641:	pop    r14
  419643:	pop    r15
  419645:	pop    rbp
  419646:	ret    
  419647:	cmp    DWORD PTR [rsp+0xc],0x0
  41964c:	mov    r13,QWORD PTR [rsp+0x18]
  419651:	jne    419635 <fb_symbol_table_insert@@Base+0x175>
  419653:	jmp    419631 <fb_symbol_table_insert@@Base+0x171>
  419655:	lea    rdi,[rip+0x2cfff]        # 44665b <str_set_deleted@@Base+0xd3>
  41965c:	lea    rsi,[rip+0x2cf44]        # 4465a7 <str_set_deleted@@Base+0x1f>
  419663:	lea    rcx,[rip+0x2cfa7]        # 446611 <str_set_deleted@@Base+0x89>
  41966a:	mov    edx,0x73
  41966f:	call   4060f0 <__assert_fail@plt>
  419674:	lea    rdi,[rip+0x2cff7]        # 446672 <str_set_deleted@@Base+0xea>
  41967b:	lea    rsi,[rip+0x2cf25]        # 4465a7 <str_set_deleted@@Base+0x1f>
  419682:	lea    rcx,[rip+0x2cf88]        # 446611 <str_set_deleted@@Base+0x89>
  419689:	mov    edx,0x74
  41968e:	call   4060f0 <__assert_fail@plt>
  419693:	lea    rdi,[rip+0x2cef6]        # 446590 <str_set_deleted@@Base+0x8>
  41969a:	lea    rsi,[rip+0x2cf06]        # 4465a7 <str_set_deleted@@Base+0x1f>
  4196a1:	lea    rcx,[rip+0x2cf69]        # 446611 <str_set_deleted@@Base+0x89>
  4196a8:	mov    edx,0x72
  4196ad:	call   4060f0 <__assert_fail@plt>
  4196b2:	mov    rax,QWORD PTR [rip+0x3793f]        # 450ff8 <stderr@GLIBC_2.2.5>
  4196b9:	mov    rdi,QWORD PTR [rax]
  4196bc:	lea    rsi,[rip+0x2cfc4]        # 446687 <str_set_deleted@@Base+0xff>
  4196c3:	lea    rdx,[rip+0x2cfd4]        # 44669e <str_set_deleted@@Base+0x116>
  4196ca:	xor    eax,eax
  4196cc:	call   406170 <fprintf@plt>
  4196d1:	mov    edi,0x1
  4196d6:	call   406200 <exit@plt>
  4196db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004196e0 <fb_symbol_table_insert_item@@Base>:
  4196e0:	mov    eax,edx
  4196e2:	mov    rcx,rsi
  4196e5:	mov    rdx,QWORD PTR [rsi+0x8]
  4196e9:	mov    rsi,QWORD PTR [rdx]
  4196ec:	mov    rdx,QWORD PTR [rdx+0x8]
  4196f0:	mov    r8d,eax
  4196f3:	jmp    4194d0 <fb_symbol_table_insert@@Base+0x10>
  4196f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419700 <fb_symbol_table_find@@Base>:
  419700:	push   rbp
  419701:	push   r15
  419703:	push   r14
  419705:	push   r13
  419707:	push   r12
  419709:	push   rbx
  41970a:	push   rax
  41970b:	mov    r12,QWORD PTR [rdi]
  41970e:	test   r12,r12
  419711:	je     419777 <fb_symbol_table_find@@Base+0x77>
  419713:	mov    r15,rdx
  419716:	mov    r14,rsi
  419719:	mov    r13,QWORD PTR [rdi+0x18]
  41971d:	add    r13,0xffffffffffffffff
  419721:	mov    rcx,rsp
  419724:	mov    edx,0x2f693b52
  419729:	mov    rdi,rsi
  41972c:	mov    rsi,r15
  41972f:	call   42c170 <cmetrohash64_1@@Base>
  419734:	mov    ebp,DWORD PTR [rsp]
  419737:	jmp    419744 <fb_symbol_table_find@@Base+0x44>
  419739:	nop    DWORD PTR [rax+0x0]
  419740:	add    rbp,0x1
  419744:	mov    rax,rbp
  419747:	and    rax,r13
  41974a:	mov    rbx,QWORD PTR [r12+rax*8]
  41974e:	cmp    rbx,0x2
  419752:	je     419740 <fb_symbol_table_find@@Base+0x40>
  419754:	test   rbx,rbx
  419757:	je     419777 <fb_symbol_table_find@@Base+0x77>
  419759:	mov    rax,QWORD PTR [rbx+0x8]
  41975d:	cmp    QWORD PTR [rax+0x8],r15
  419761:	jne    419740 <fb_symbol_table_find@@Base+0x40>
  419763:	mov    rsi,QWORD PTR [rax]
  419766:	mov    rdi,r14
  419769:	mov    rdx,r15
  41976c:	call   406130 <memcmp@plt>
  419771:	test   eax,eax
  419773:	jne    419740 <fb_symbol_table_find@@Base+0x40>
  419775:	jmp    419779 <fb_symbol_table_find@@Base+0x79>
  419777:	xor    ebx,ebx
  419779:	mov    rax,rbx
  41977c:	add    rsp,0x8
  419780:	pop    rbx
  419781:	pop    r12
  419783:	pop    r13
  419785:	pop    r14
  419787:	pop    r15
  419789:	pop    rbp
  41978a:	ret    
  41978b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419790 <fb_symbol_table_find_item@@Base>:
  419790:	push   rbp
  419791:	push   r15
  419793:	push   r14
  419795:	push   r13
  419797:	push   r12
  419799:	push   rbx
  41979a:	push   rax
  41979b:	mov    r12,QWORD PTR [rdi]
  41979e:	test   r12,r12
  4197a1:	je     419807 <fb_symbol_table_find_item@@Base+0x77>
  4197a3:	mov    rax,QWORD PTR [rsi+0x8]
  4197a7:	mov    r14,QWORD PTR [rax]
  4197aa:	mov    r15,QWORD PTR [rax+0x8]
  4197ae:	mov    r13,QWORD PTR [rdi+0x18]
  4197b2:	add    r13,0xffffffffffffffff
  4197b6:	mov    rcx,rsp
  4197b9:	mov    edx,0x2f693b52
  4197be:	mov    rdi,r14
  4197c1:	mov    rsi,r15
  4197c4:	call   42c170 <cmetrohash64_1@@Base>
  4197c9:	mov    ebp,DWORD PTR [rsp]
  4197cc:	jmp    4197d4 <fb_symbol_table_find_item@@Base+0x44>
  4197ce:	xchg   ax,ax
  4197d0:	add    rbp,0x1
  4197d4:	mov    rax,rbp
  4197d7:	and    rax,r13
  4197da:	mov    rbx,QWORD PTR [r12+rax*8]
  4197de:	cmp    rbx,0x2
  4197e2:	je     4197d0 <fb_symbol_table_find_item@@Base+0x40>
  4197e4:	test   rbx,rbx
  4197e7:	je     419807 <fb_symbol_table_find_item@@Base+0x77>
  4197e9:	mov    rax,QWORD PTR [rbx+0x8]
  4197ed:	cmp    QWORD PTR [rax+0x8],r15
  4197f1:	jne    4197d0 <fb_symbol_table_find_item@@Base+0x40>
  4197f3:	mov    rsi,QWORD PTR [rax]
  4197f6:	mov    rdi,r14
  4197f9:	mov    rdx,r15
  4197fc:	call   406130 <memcmp@plt>
  419801:	test   eax,eax
  419803:	jne    4197d0 <fb_symbol_table_find_item@@Base+0x40>
  419805:	jmp    419809 <fb_symbol_table_find_item@@Base+0x79>
  419807:	xor    ebx,ebx
  419809:	mov    rax,rbx
  41980c:	add    rsp,0x8
  419810:	pop    rbx
  419811:	pop    r12
  419813:	pop    r13
  419815:	pop    r14
  419817:	pop    r15
  419819:	pop    rbp
  41981a:	ret    
  41981b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419820 <fb_symbol_table_remove@@Base>:
  419820:	push   rbp
  419821:	push   r15
  419823:	push   r14
  419825:	push   r13
  419827:	push   r12
  419829:	push   rbx
  41982a:	sub    rsp,0x18
  41982e:	mov    r13,QWORD PTR [rdi]
  419831:	test   r13,r13
  419834:	je     4198bc <fb_symbol_table_remove@@Base+0x9c>
  41983a:	mov    r12,rdx
  41983d:	mov    QWORD PTR [rsp],rdi
  419841:	mov    rbp,QWORD PTR [rdi+0x18]
  419845:	add    rbp,0xffffffffffffffff
  419849:	lea    rcx,[rsp+0x10]
  41984e:	mov    edx,0x2f693b52
  419853:	mov    QWORD PTR [rsp+0x8],rsi
  419858:	mov    rdi,rsi
  41985b:	mov    rsi,r12
  41985e:	call   42c170 <cmetrohash64_1@@Base>
  419863:	mov    r15d,DWORD PTR [rsp+0x10]
  419868:	jmp    419874 <fb_symbol_table_remove@@Base+0x54>
  41986a:	nop    WORD PTR [rax+rax*1+0x0]
  419870:	add    r15,0x1
  419874:	mov    r14,r15
  419877:	and    r14,rbp
  41987a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41987f:	cmp    rbx,0x2
  419883:	je     419870 <fb_symbol_table_remove@@Base+0x50>
  419885:	test   rbx,rbx
  419888:	je     4198bc <fb_symbol_table_remove@@Base+0x9c>
  41988a:	mov    rax,QWORD PTR [rbx+0x8]
  41988e:	cmp    QWORD PTR [rax+0x8],r12
  419892:	jne    419870 <fb_symbol_table_remove@@Base+0x50>
  419894:	mov    rsi,QWORD PTR [rax]
  419897:	mov    rdi,QWORD PTR [rsp+0x8]
  41989c:	mov    rdx,r12
  41989f:	call   406130 <memcmp@plt>
  4198a4:	test   eax,eax
  4198a6:	jne    419870 <fb_symbol_table_remove@@Base+0x50>
  4198a8:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  4198b1:	mov    rax,QWORD PTR [rsp]
  4198b5:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  4198ba:	jmp    4198be <fb_symbol_table_remove@@Base+0x9e>
  4198bc:	xor    ebx,ebx
  4198be:	mov    rax,rbx
  4198c1:	add    rsp,0x18
  4198c5:	pop    rbx
  4198c6:	pop    r12
  4198c8:	pop    r13
  4198ca:	pop    r14
  4198cc:	pop    r15
  4198ce:	pop    rbp
  4198cf:	ret    

00000000004198d0 <fb_symbol_table_remove_item@@Base>:
  4198d0:	push   rbp
  4198d1:	push   r15
  4198d3:	push   r14
  4198d5:	push   r13
  4198d7:	push   r12
  4198d9:	push   rbx
  4198da:	sub    rsp,0x18
  4198de:	mov    r13,QWORD PTR [rdi]
  4198e1:	test   r13,r13
  4198e4:	je     41997c <fb_symbol_table_remove_item@@Base+0xac>
  4198ea:	mov    rax,QWORD PTR [rsi+0x8]
  4198ee:	mov    rsi,QWORD PTR [rax]
  4198f1:	mov    r12,QWORD PTR [rax+0x8]
  4198f5:	mov    QWORD PTR [rsp],rdi
  4198f9:	mov    rbp,QWORD PTR [rdi+0x18]
  4198fd:	add    rbp,0xffffffffffffffff
  419901:	lea    rcx,[rsp+0x10]
  419906:	mov    edx,0x2f693b52
  41990b:	mov    QWORD PTR [rsp+0x8],rsi
  419910:	mov    rdi,rsi
  419913:	mov    rsi,r12
  419916:	call   42c170 <cmetrohash64_1@@Base>
  41991b:	mov    r15d,DWORD PTR [rsp+0x10]
  419920:	jmp    419934 <fb_symbol_table_remove_item@@Base+0x64>
  419922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41992c:	nop    DWORD PTR [rax+0x0]
  419930:	add    r15,0x1
  419934:	mov    r14,r15
  419937:	and    r14,rbp
  41993a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41993f:	cmp    rbx,0x2
  419943:	je     419930 <fb_symbol_table_remove_item@@Base+0x60>
  419945:	test   rbx,rbx
  419948:	je     41997c <fb_symbol_table_remove_item@@Base+0xac>
  41994a:	mov    rax,QWORD PTR [rbx+0x8]
  41994e:	cmp    QWORD PTR [rax+0x8],r12
  419952:	jne    419930 <fb_symbol_table_remove_item@@Base+0x60>
  419954:	mov    rsi,QWORD PTR [rax]
  419957:	mov    rdi,QWORD PTR [rsp+0x8]
  41995c:	mov    rdx,r12
  41995f:	call   406130 <memcmp@plt>
  419964:	test   eax,eax
  419966:	jne    419930 <fb_symbol_table_remove_item@@Base+0x60>
  419968:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419971:	mov    rax,QWORD PTR [rsp]
  419975:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41997a:	jmp    41997e <fb_symbol_table_remove_item@@Base+0xae>
  41997c:	xor    ebx,ebx
  41997e:	mov    rax,rbx
  419981:	add    rsp,0x18
  419985:	pop    rbx
  419986:	pop    r12
  419988:	pop    r13
  41998a:	pop    r14
  41998c:	pop    r15
  41998e:	pop    rbp
  41998f:	ret    

0000000000419990 <fb_symbol_table_visit@@Base>:
  419990:	push   r15
  419992:	push   r14
  419994:	push   r13
  419996:	push   r12
  419998:	push   rbx
  419999:	mov    rax,QWORD PTR [rdi+0x18]
  41999d:	test   rax,rax
  4199a0:	je     4199d6 <fb_symbol_table_visit@@Base+0x46>
  4199a2:	mov    r14,rdx
  4199a5:	mov    r15,rsi
  4199a8:	mov    r12,rdi
  4199ab:	mov    r13,QWORD PTR [rdi]
  4199ae:	xor    ebx,ebx
  4199b0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  4199b5:	mov    rcx,rsi
  4199b8:	or     rcx,0x2
  4199bc:	cmp    rcx,0x2
  4199c0:	je     4199cd <fb_symbol_table_visit@@Base+0x3d>
  4199c2:	mov    rdi,r14
  4199c5:	call   r15
  4199c8:	mov    rax,QWORD PTR [r12+0x18]
  4199cd:	add    rbx,0x1
  4199d1:	cmp    rbx,rax
  4199d4:	jb     4199b0 <fb_symbol_table_visit@@Base+0x20>
  4199d6:	pop    rbx
  4199d7:	pop    r12
  4199d9:	pop    r13
  4199db:	pop    r14
  4199dd:	pop    r15
  4199df:	ret    

00000000004199e0 <fb_scope_table_clear@@Base>:
  4199e0:	push   rbx
  4199e1:	mov    rbx,rdi
  4199e4:	mov    rdi,QWORD PTR [rdi]
  4199e7:	test   rdi,rdi
  4199ea:	je     4199f1 <fb_scope_table_clear@@Base+0x11>
  4199ec:	call   406040 <free@plt>
  4199f1:	vxorps xmm0,xmm0,xmm0
  4199f5:	vmovups YMMWORD PTR [rbx],ymm0
  4199f9:	pop    rbx
  4199fa:	vzeroupper 
  4199fd:	ret    
  4199fe:	xchg   ax,ax

0000000000419a00 <fb_scope_table_destroy@@Base>:
  419a00:	push   r15
  419a02:	push   r14
  419a04:	push   r13
  419a06:	push   r12
  419a08:	push   rbx
  419a09:	mov    r12,rdi
  419a0c:	test   rsi,rsi
  419a0f:	je     419a56 <fb_scope_table_destroy@@Base+0x56>
  419a11:	mov    rax,QWORD PTR [r12+0x18]
  419a16:	test   rax,rax
  419a19:	je     419a56 <fb_scope_table_destroy@@Base+0x56>
  419a1b:	mov    r14,rdx
  419a1e:	mov    r15,rsi
  419a21:	mov    r13,QWORD PTR [r12]
  419a25:	xor    ebx,ebx
  419a27:	nop    WORD PTR [rax+rax*1+0x0]
  419a30:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419a35:	mov    rcx,rsi
  419a38:	or     rcx,0x2
  419a3c:	cmp    rcx,0x2
  419a40:	je     419a4d <fb_scope_table_destroy@@Base+0x4d>
  419a42:	mov    rdi,r14
  419a45:	call   r15
  419a48:	mov    rax,QWORD PTR [r12+0x18]
  419a4d:	add    rbx,0x1
  419a51:	cmp    rbx,rax
  419a54:	jb     419a30 <fb_scope_table_destroy@@Base+0x30>
  419a56:	mov    rdi,QWORD PTR [r12]
  419a5a:	test   rdi,rdi
  419a5d:	je     419a64 <fb_scope_table_destroy@@Base+0x64>
  419a5f:	call   406040 <free@plt>
  419a64:	vxorps xmm0,xmm0,xmm0
  419a68:	vmovups YMMWORD PTR [r12],ymm0
  419a6e:	pop    rbx
  419a6f:	pop    r12
  419a71:	pop    r13
  419a73:	pop    r14
  419a75:	pop    r15
  419a77:	vzeroupper 
  419a7a:	ret    
  419a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419a80 <fb_scope_table_init@@Base>:
  419a80:	push   r14
  419a82:	push   rbx
  419a83:	push   rax
  419a84:	mov    r14,rdi
  419a87:	mov    eax,0x4
  419a8c:	nop    DWORD PTR [rax+0x0]
  419a90:	mov    rbx,rax
  419a93:	imul   rcx,rax,0xb3
  419a9a:	shr    rcx,0x8
  419a9e:	lea    rax,[rax+rax*1]
  419aa2:	cmp    rcx,rsi
  419aa5:	jb     419a90 <fb_scope_table_init@@Base+0x10>
  419aa7:	mov    esi,0x8
  419aac:	mov    rdi,rbx
  419aaf:	call   406140 <calloc@plt>
  419ab4:	mov    QWORD PTR [r14],rax
  419ab7:	test   rax,rax
  419aba:	je     419ace <fb_scope_table_init@@Base+0x4e>
  419abc:	vxorps xmm0,xmm0,xmm0
  419ac0:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419ac6:	mov    QWORD PTR [r14+0x18],rbx
  419aca:	xor    eax,eax
  419acc:	jmp    419ad3 <fb_scope_table_init@@Base+0x53>
  419ace:	mov    eax,0xffffffff
  419ad3:	add    rsp,0x8
  419ad7:	pop    rbx
  419ad8:	pop    r14
  419ada:	ret    
  419adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419ae0 <fb_scope_table_resize@@Base>:
  419ae0:	jmp    419af0 <fb_scope_table_resize@@Base+0x10>
  419ae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419aec:	nop    DWORD PTR [rax+0x0]
  419af0:	push   r15
  419af2:	push   r14
  419af4:	push   r12
  419af6:	push   rbx
  419af7:	sub    rsp,0x28
  419afb:	mov    r14,rdi
  419afe:	mov    r12,QWORD PTR [rdi]
  419b01:	mov    rax,QWORD PTR [rdi+0x10]
  419b05:	cmp    rax,rsi
  419b08:	cmova  rsi,rax
  419b0c:	mov    eax,0x4
  419b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b20:	mov    rbx,rax
  419b23:	imul   rcx,rax,0xb3
  419b2a:	shr    rcx,0x8
  419b2e:	lea    rax,[rax+rax*1]
  419b32:	cmp    rcx,rsi
  419b35:	jb     419b20 <fb_scope_table_resize@@Base+0x40>
  419b37:	mov    esi,0x8
  419b3c:	mov    rdi,rbx
  419b3f:	call   406140 <calloc@plt>
  419b44:	mov    QWORD PTR [rsp+0x8],rax
  419b49:	test   rax,rax
  419b4c:	je     419bc0 <fb_scope_table_resize@@Base+0xe0>
  419b4e:	vxorps xmm0,xmm0,xmm0
  419b52:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419b58:	mov    QWORD PTR [rsp+0x20],rbx
  419b5d:	mov    rax,QWORD PTR [r14+0x18]
  419b61:	test   rax,rax
  419b64:	je     419ba4 <fb_scope_table_resize@@Base+0xc4>
  419b66:	xor    ebx,ebx
  419b68:	lea    r15,[rsp+0x8]
  419b6d:	nop    DWORD PTR [rax]
  419b70:	mov    rcx,QWORD PTR [r12+rbx*8]
  419b74:	mov    rdx,rcx
  419b77:	or     rdx,0x2
  419b7b:	cmp    rdx,0x2
  419b7f:	je     419b98 <fb_scope_table_resize@@Base+0xb8>
  419b81:	mov    rsi,QWORD PTR [rcx]
  419b84:	xor    edx,edx
  419b86:	mov    r8d,0x3
  419b8c:	mov    rdi,r15
  419b8f:	call   419bf0 <fb_scope_table_insert@@Base+0x10>
  419b94:	mov    rax,QWORD PTR [r14+0x18]
  419b98:	add    rbx,0x1
  419b9c:	cmp    rbx,rax
  419b9f:	jb     419b70 <fb_scope_table_resize@@Base+0x90>
  419ba1:	mov    r12,QWORD PTR [r14]
  419ba4:	test   r12,r12
  419ba7:	je     419bb1 <fb_scope_table_resize@@Base+0xd1>
  419ba9:	mov    rdi,r12
  419bac:	call   406040 <free@plt>
  419bb1:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  419bb7:	vmovups YMMWORD PTR [r14],ymm0
  419bbc:	xor    eax,eax
  419bbe:	jmp    419bc5 <fb_scope_table_resize@@Base+0xe5>
  419bc0:	mov    eax,0xffffffff
  419bc5:	add    rsp,0x28
  419bc9:	pop    rbx
  419bca:	pop    r12
  419bcc:	pop    r14
  419bce:	pop    r15
  419bd0:	vzeroupper 
  419bd3:	ret    
  419bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bde:	xchg   ax,ax

0000000000419be0 <fb_scope_table_insert@@Base>:
  419be0:	jmp    419bf0 <fb_scope_table_insert@@Base+0x10>
  419be2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bec:	nop    DWORD PTR [rax+0x0]
  419bf0:	push   rbp
  419bf1:	push   r15
  419bf3:	push   r14
  419bf5:	push   r13
  419bf7:	push   r12
  419bf9:	push   rbx
  419bfa:	sub    rsp,0x48
  419bfe:	mov    QWORD PTR [rsp+0x8],rdx
  419c03:	mov    QWORD PTR [rsp],rsi
  419c07:	cmp    rcx,0x2
  419c0b:	je     41a024 <fb_scope_table_insert@@Base+0x444>
  419c11:	mov    rbx,rcx
  419c14:	cmp    rcx,0x1
  419c18:	je     41a043 <fb_scope_table_insert@@Base+0x463>
  419c1e:	test   rbx,rbx
  419c21:	je     41a062 <fb_scope_table_insert@@Base+0x482>
  419c27:	mov    r15d,r8d
  419c2a:	mov    r14,rdi
  419c2d:	mov    rsi,QWORD PTR [rdi+0x10]
  419c31:	mov    rcx,QWORD PTR [rdi+0x18]
  419c35:	imul   rax,rcx,0xb3
  419c3c:	shr    rax,0x8
  419c40:	cmp    rsi,rax
  419c43:	jb     419c5c <fb_scope_table_insert@@Base+0x7c>
  419c45:	add    rsi,rsi
  419c48:	mov    rdi,r14
  419c4b:	call   419af0 <fb_scope_table_resize@@Base+0x10>
  419c50:	test   eax,eax
  419c52:	jne    41a081 <fb_scope_table_insert@@Base+0x4a1>
  419c58:	mov    rcx,QWORD PTR [r14+0x18]
  419c5c:	mov    rax,QWORD PTR [r14]
  419c5f:	mov    QWORD PTR [rsp+0x18],rax
  419c64:	add    rcx,0xffffffffffffffff
  419c68:	mov    QWORD PTR [rsp+0x10],rcx
  419c6d:	mov    rax,QWORD PTR [rsp+0x8]
  419c72:	test   eax,eax
  419c74:	mov    QWORD PTR [rsp+0x38],rbx
  419c79:	jle    419f6d <fb_scope_table_insert@@Base+0x38d>
  419c7f:	xor    r12d,r12d
  419c82:	mov    r8d,0x9e3779b1
  419c88:	mov    r9,rax
  419c8b:	mov    rdx,QWORD PTR [rsp]
  419c8f:	test   r9,r9
  419c92:	jne    419cb3 <fb_scope_table_insert@@Base+0xd3>
  419c94:	jmp    419cf0 <fb_scope_table_insert@@Base+0x110>
  419c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ca0:	lea    rax,[rsi+0x1]
  419ca4:	sub    r9,rax
  419ca7:	add    rdx,rsi
  419caa:	add    rdx,0x1
  419cae:	test   r9,r9
  419cb1:	je     419cf0 <fb_scope_table_insert@@Base+0x110>
  419cb3:	xor    esi,esi
  419cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419cbf:	nop
  419cc0:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  419cc4:	je     419ccf <fb_scope_table_insert@@Base+0xef>
  419cc6:	add    rsi,0x1
  419cca:	cmp    rsi,r9
  419ccd:	jb     419cc0 <fb_scope_table_insert@@Base+0xe0>
  419ccf:	mov    rdi,rsi
  419cd2:	add    rdi,0xffffffffffffffff
  419cd6:	jne    419cf9 <fb_scope_table_insert@@Base+0x119>
  419cd8:	mov    esi,0x1
  419cdd:	mov    ecx,0x2f692e57
  419ce2:	jmp    419d1f <fb_scope_table_insert@@Base+0x13f>
  419ce4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419cee:	xchg   ax,ax
  419cf0:	mov    rdi,0xffffffffffffffff
  419cf7:	xor    esi,esi
  419cf9:	xor    ebx,ebx
  419cfb:	mov    ecx,0x2f692e57
  419d00:	movzx  eax,BYTE PTR [rdx+rbx*1]
  419d04:	test   rax,rax
  419d07:	je     419d1f <fb_scope_table_insert@@Base+0x13f>
  419d09:	mov    rbp,rcx
  419d0c:	shl    rbp,0x5
  419d10:	add    rcx,rbp
  419d13:	xor    rcx,rax
  419d16:	add    rbx,0x1
  419d1a:	cmp    rdi,rbx
  419d1d:	jne    419d00 <fb_scope_table_insert@@Base+0x120>
  419d1f:	xor    r12,rcx
  419d22:	xor    r12,0x2f693b52
  419d29:	imul   r12,r8
  419d2d:	cmp    rsi,r9
  419d30:	jne    419ca0 <fb_scope_table_insert@@Base+0xc0>
  419d36:	mov    rax,r12
  419d39:	and    rax,QWORD PTR [rsp+0x10]
  419d3e:	mov    ecx,r15d
  419d41:	or     ecx,0x1
  419d44:	cmp    ecx,0x3
  419d47:	jne    419d81 <fb_scope_table_insert@@Base+0x1a1>
  419d49:	add    QWORD PTR [r14+0x10],0x1
  419d4e:	add    r12,0x1
  419d52:	mov    rdx,QWORD PTR [rsp+0x10]
  419d57:	mov    rsi,QWORD PTR [rsp+0x18]
  419d5c:	jmp    419d6a <fb_scope_table_insert@@Base+0x18a>
  419d5e:	xchg   ax,ax
  419d60:	mov    rax,r12
  419d63:	and    rax,rdx
  419d66:	add    r12,0x1
  419d6a:	mov    rcx,QWORD PTR [rsi+rax*8]
  419d6e:	or     rcx,0x2
  419d72:	cmp    rcx,0x2
  419d76:	jne    419d60 <fb_scope_table_insert@@Base+0x180>
  419d78:	lea    rcx,[rsi+rax*8]
  419d7c:	jmp    419f50 <fb_scope_table_insert@@Base+0x370>
  419d81:	mov    DWORD PTR [rsp+0x28],r15d
  419d86:	mov    QWORD PTR [rsp+0x30],r14
  419d8b:	mov    r9,QWORD PTR [rsp+0x8]
  419d90:	mov    ecx,r9d
  419d93:	neg    ecx
  419d95:	mov    DWORD PTR [rsp+0x2c],ecx
  419d99:	xor    ebp,ebp
  419d9b:	xor    r15d,r15d
  419d9e:	mov    r8,QWORD PTR [rsp]
  419da2:	mov    r10,QWORD PTR [rsp+0x10]
  419da7:	mov    r11,QWORD PTR [rsp+0x18]
  419dac:	jmp    419dbf <fb_scope_table_insert@@Base+0x1df>
  419dae:	xchg   ax,ax
  419db0:	lea    rax,[r12+rbp*1]
  419db4:	add    rax,0x1
  419db8:	add    rbp,0x1
  419dbc:	and    rax,r10
  419dbf:	lea    rcx,[r11+rax*8]
  419dc3:	mov    r13,QWORD PTR [r11+rax*8]
  419dc7:	cmp    r13,0x2
  419dcb:	je     419e00 <fb_scope_table_insert@@Base+0x220>
  419dcd:	test   r13,r13
  419dd0:	je     419f3f <fb_scope_table_insert@@Base+0x35f>
  419dd6:	mov    QWORD PTR [rsp+0x40],rcx
  419ddb:	mov    r14,QWORD PTR [r13+0x0]
  419ddf:	test   r9d,r9d
  419de2:	jle    419e96 <fb_scope_table_insert@@Base+0x2b6>
  419de8:	mov    rax,r8
  419deb:	mov    rcx,r9
  419dee:	test   r14,r14
  419df1:	jne    419e26 <fb_scope_table_insert@@Base+0x246>
  419df3:	jmp    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419df5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419dff:	nop
  419e00:	test   r15,r15
  419e03:	cmove  r15,rcx
  419e07:	jmp    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e09:	nop    DWORD PTR [rax+0x0]
  419e10:	lea    rsi,[rdx+0x1]
  419e14:	sub    rcx,rsi
  419e17:	add    rax,rdx
  419e1a:	add    rax,0x1
  419e1e:	mov    r14,QWORD PTR [r14]
  419e21:	test   r14,r14
  419e24:	je     419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e26:	mov    rsi,QWORD PTR [r14+0x8]
  419e2a:	mov    rdx,QWORD PTR [rsi+0x8]
  419e2e:	cmp    rdx,rcx
  419e31:	ja     419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e37:	test   rdx,rdx
  419e3a:	je     419e80 <fb_scope_table_insert@@Base+0x2a0>
  419e3c:	mov    rdi,QWORD PTR [rsi]
  419e3f:	xor    esi,esi
  419e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  419e50:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  419e54:	cmp    bl,BYTE PTR [rax+rsi*1]
  419e57:	jne    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e5d:	add    rsi,0x1
  419e61:	cmp    rsi,rdx
  419e64:	jb     419e50 <fb_scope_table_insert@@Base+0x270>
  419e66:	cmp    rdx,rcx
  419e69:	je     419e87 <fb_scope_table_insert@@Base+0x2a7>
  419e6b:	cmp    BYTE PTR [rax+rsi*1],0x2e
  419e6f:	je     419e10 <fb_scope_table_insert@@Base+0x230>
  419e71:	jmp    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e80:	xor    esi,esi
  419e82:	cmp    rdx,rcx
  419e85:	jne    419e6b <fb_scope_table_insert@@Base+0x28b>
  419e87:	cmp    QWORD PTR [r14],0x0
  419e8b:	jne    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419e91:	jmp    419f31 <fb_scope_table_insert@@Base+0x351>
  419e96:	mov    QWORD PTR [rsp+0x20],r15
  419e9b:	mov    rbx,rbp
  419e9e:	mov    rbp,r8
  419ea1:	mov    r15d,DWORD PTR [rsp+0x2c]
  419ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419eb0:	test   r14,r14
  419eb3:	je     419f0d <fb_scope_table_insert@@Base+0x32d>
  419eb5:	test   rbp,rbp
  419eb8:	je     419f0d <fb_scope_table_insert@@Base+0x32d>
  419eba:	mov    rax,QWORD PTR [r14+0x8]
  419ebe:	mov    rdx,QWORD PTR [rax+0x8]
  419ec2:	mov    rcx,QWORD PTR [rbp+0x8]
  419ec6:	cmp    rdx,QWORD PTR [rcx+0x8]
  419eca:	jne    419eed <fb_scope_table_insert@@Base+0x30d>
  419ecc:	mov    rdi,QWORD PTR [rax]
  419ecf:	mov    rsi,QWORD PTR [rcx]
  419ed2:	call   406060 <strncmp@plt>
  419ed7:	test   eax,eax
  419ed9:	jne    419eed <fb_scope_table_insert@@Base+0x30d>
  419edb:	mov    r14,QWORD PTR [r14]
  419ede:	mov    rbp,QWORD PTR [rbp+0x0]
  419ee2:	add    r15d,0xffffffff
  419ee6:	jne    419eb0 <fb_scope_table_insert@@Base+0x2d0>
  419ee8:	test   r14,r14
  419eeb:	jmp    419f10 <fb_scope_table_insert@@Base+0x330>
  419eed:	mov    r9,QWORD PTR [rsp+0x8]
  419ef2:	mov    r8,QWORD PTR [rsp]
  419ef6:	mov    r10,QWORD PTR [rsp+0x10]
  419efb:	mov    r11,QWORD PTR [rsp+0x18]
  419f00:	mov    rbp,rbx
  419f03:	mov    r15,QWORD PTR [rsp+0x20]
  419f08:	jmp    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419f0d:	or     r14,rbp
  419f10:	mov    r9,QWORD PTR [rsp+0x8]
  419f15:	mov    r8,QWORD PTR [rsp]
  419f19:	mov    r10,QWORD PTR [rsp+0x10]
  419f1e:	mov    r11,QWORD PTR [rsp+0x18]
  419f23:	mov    rbp,rbx
  419f26:	mov    r15,QWORD PTR [rsp+0x20]
  419f2b:	jne    419db0 <fb_scope_table_insert@@Base+0x1d0>
  419f31:	cmp    DWORD PTR [rsp+0x28],0x0
  419f36:	mov    rcx,QWORD PTR [rsp+0x40]
  419f3b:	jne    419f5b <fb_scope_table_insert@@Base+0x37b>
  419f3d:	jmp    419f53 <fb_scope_table_insert@@Base+0x373>
  419f3f:	test   r15,r15
  419f42:	cmovne rcx,r15
  419f46:	mov    rax,QWORD PTR [rsp+0x30]
  419f4b:	add    QWORD PTR [rax+0x10],0x1
  419f50:	xor    r13d,r13d
  419f53:	mov    rax,QWORD PTR [rsp+0x38]
  419f58:	mov    QWORD PTR [rcx],rax
  419f5b:	mov    rax,r13
  419f5e:	add    rsp,0x48
  419f62:	pop    rbx
  419f63:	pop    r12
  419f65:	pop    r13
  419f67:	pop    r14
  419f69:	pop    r15
  419f6b:	pop    rbp
  419f6c:	ret    
  419f6d:	mov    rcx,QWORD PTR [rsp]
  419f71:	test   rcx,rcx
  419f74:	je     41a01c <fb_scope_table_insert@@Base+0x43c>
  419f7a:	mov    r8d,0x9e3779b1
  419f80:	xor    r12d,r12d
  419f83:	mov    rax,QWORD PTR [rsp+0x8]
  419f88:	mov    r9d,eax
  419f8b:	mov    rdx,rcx
  419f8e:	xchg   ax,ax
  419f90:	mov    rax,QWORD PTR [rdx+0x8]
  419f94:	mov    rsi,QWORD PTR [rax+0x8]
  419f98:	add    rsi,0xffffffffffffffff
  419f9c:	je     419fe0 <fb_scope_table_insert@@Base+0x400>
  419f9e:	mov    rdi,QWORD PTR [rax]
  419fa1:	xor    ebp,ebp
  419fa3:	mov    eax,0x2f692e57
  419fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  419fb0:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  419fb4:	test   rcx,rcx
  419fb7:	je     419ff0 <fb_scope_table_insert@@Base+0x410>
  419fb9:	mov    rbx,rax
  419fbc:	shl    rbx,0x5
  419fc0:	add    rbx,rax
  419fc3:	xor    rbx,rcx
  419fc6:	add    rbp,0x1
  419fca:	mov    rax,rbx
  419fcd:	cmp    rsi,rbp
  419fd0:	jne    419fb0 <fb_scope_table_insert@@Base+0x3d0>
  419fd2:	jmp    419ff3 <fb_scope_table_insert@@Base+0x413>
  419fd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419fde:	xchg   ax,ax
  419fe0:	mov    ebx,0x2f692e57
  419fe5:	jmp    419ff3 <fb_scope_table_insert@@Base+0x413>
  419fe7:	nop    WORD PTR [rax+rax*1+0x0]
  419ff0:	mov    rbx,rax
  419ff3:	xor    r12,rbx
  419ff6:	xor    r12,0x2f693b52
  419ffd:	imul   r12,r8
  41a001:	add    r9d,0x1
  41a005:	je     419d36 <fb_scope_table_insert@@Base+0x156>
  41a00b:	mov    rdx,QWORD PTR [rdx]
  41a00e:	test   rdx,rdx
  41a011:	jne    419f90 <fb_scope_table_insert@@Base+0x3b0>
  41a017:	jmp    419d36 <fb_scope_table_insert@@Base+0x156>
  41a01c:	xor    r12d,r12d
  41a01f:	jmp    419d36 <fb_scope_table_insert@@Base+0x156>
  41a024:	lea    rdi,[rip+0x2c630]        # 44665b <str_set_deleted@@Base+0xd3>
  41a02b:	lea    rsi,[rip+0x2c575]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41a032:	lea    rcx,[rip+0x2c5d8]        # 446611 <str_set_deleted@@Base+0x89>
  41a039:	mov    edx,0x73
  41a03e:	call   4060f0 <__assert_fail@plt>
  41a043:	lea    rdi,[rip+0x2c628]        # 446672 <str_set_deleted@@Base+0xea>
  41a04a:	lea    rsi,[rip+0x2c556]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41a051:	lea    rcx,[rip+0x2c5b9]        # 446611 <str_set_deleted@@Base+0x89>
  41a058:	mov    edx,0x74
  41a05d:	call   4060f0 <__assert_fail@plt>
  41a062:	lea    rdi,[rip+0x2c527]        # 446590 <str_set_deleted@@Base+0x8>
  41a069:	lea    rsi,[rip+0x2c537]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41a070:	lea    rcx,[rip+0x2c59a]        # 446611 <str_set_deleted@@Base+0x89>
  41a077:	mov    edx,0x72
  41a07c:	call   4060f0 <__assert_fail@plt>
  41a081:	mov    rax,QWORD PTR [rip+0x36f70]        # 450ff8 <stderr@GLIBC_2.2.5>
  41a088:	mov    rdi,QWORD PTR [rax]
  41a08b:	lea    rsi,[rip+0x2c5f5]        # 446687 <str_set_deleted@@Base+0xff>
  41a092:	lea    rdx,[rip+0x2c605]        # 44669e <str_set_deleted@@Base+0x116>
  41a099:	xor    eax,eax
  41a09b:	call   406170 <fprintf@plt>
  41a0a0:	mov    edi,0x1
  41a0a5:	call   406200 <exit@plt>
  41a0aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a0b0 <fb_scope_table_insert_item@@Base>:
  41a0b0:	mov    eax,edx
  41a0b2:	mov    rcx,rsi
  41a0b5:	mov    rsi,QWORD PTR [rsi]
  41a0b8:	xor    edx,edx
  41a0ba:	mov    r8d,eax
  41a0bd:	jmp    419bf0 <fb_scope_table_insert@@Base+0x10>
  41a0c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a0cc:	nop    DWORD PTR [rax+0x0]

000000000041a0d0 <fb_scope_table_find@@Base>:
  41a0d0:	push   rbp
  41a0d1:	push   r15
  41a0d3:	push   r14
  41a0d5:	push   r13
  41a0d7:	push   r12
  41a0d9:	push   rbx
  41a0da:	sub    rsp,0x38
  41a0de:	mov    rax,QWORD PTR [rdi]
  41a0e1:	mov    QWORD PTR [rsp+0x30],rax
  41a0e6:	test   rax,rax
  41a0e9:	je     41a313 <fb_scope_table_find@@Base+0x243>
  41a0ef:	mov    rax,QWORD PTR [rdi+0x18]
  41a0f3:	mov    QWORD PTR [rsp+0x18],rax
  41a0f8:	test   edx,edx
  41a0fa:	jle    41a327 <fb_scope_table_find@@Base+0x257>
  41a100:	xor    r14d,r14d
  41a103:	mov    r8d,0x9e3779b1
  41a109:	mov    r9,rdx
  41a10c:	mov    r10,rsi
  41a10f:	test   r9,r9
  41a112:	jne    41a133 <fb_scope_table_find@@Base+0x63>
  41a114:	jmp    41a170 <fb_scope_table_find@@Base+0xa0>
  41a116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a120:	lea    rax,[rdi+0x1]
  41a124:	sub    r9,rax
  41a127:	add    r10,rdi
  41a12a:	add    r10,0x1
  41a12e:	test   r9,r9
  41a131:	je     41a170 <fb_scope_table_find@@Base+0xa0>
  41a133:	xor    edi,edi
  41a135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a13f:	nop
  41a140:	cmp    BYTE PTR [r10+rdi*1],0x2e
  41a145:	je     41a150 <fb_scope_table_find@@Base+0x80>
  41a147:	add    rdi,0x1
  41a14b:	cmp    rdi,r9
  41a14e:	jb     41a140 <fb_scope_table_find@@Base+0x70>
  41a150:	mov    r11,rdi
  41a153:	add    r11,0xffffffffffffffff
  41a157:	jne    41a179 <fb_scope_table_find@@Base+0xa9>
  41a159:	mov    edi,0x1
  41a15e:	mov    ecx,0x2f692e57
  41a163:	jmp    41a1a0 <fb_scope_table_find@@Base+0xd0>
  41a165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a16f:	nop
  41a170:	mov    r11,0xffffffffffffffff
  41a177:	xor    edi,edi
  41a179:	xor    eax,eax
  41a17b:	mov    ecx,0x2f692e57
  41a180:	movzx  ebp,BYTE PTR [r10+rax*1]
  41a185:	test   rbp,rbp
  41a188:	je     41a1a0 <fb_scope_table_find@@Base+0xd0>
  41a18a:	mov    rbx,rcx
  41a18d:	shl    rbx,0x5
  41a191:	add    rcx,rbx
  41a194:	xor    rcx,rbp
  41a197:	add    rax,0x1
  41a19b:	cmp    r11,rax
  41a19e:	jne    41a180 <fb_scope_table_find@@Base+0xb0>
  41a1a0:	xor    r14,rcx
  41a1a3:	xor    r14,0x2f693b52
  41a1aa:	imul   r14,r8
  41a1ae:	cmp    rdi,r9
  41a1b1:	jne    41a120 <fb_scope_table_find@@Base+0x50>
  41a1b7:	mov    QWORD PTR [rsp+0x10],rsi
  41a1bc:	add    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41a1c2:	mov    QWORD PTR [rsp+0x28],rdx
  41a1c7:	mov    eax,edx
  41a1c9:	neg    eax
  41a1cb:	mov    DWORD PTR [rsp+0xc],eax
  41a1cf:	mov    rax,r14
  41a1d2:	xor    ecx,ecx
  41a1d4:	jmp    41a1f3 <fb_scope_table_find@@Base+0x123>
  41a1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1e0:	mov    rax,QWORD PTR [rsp+0x20]
  41a1e5:	mov    rcx,rax
  41a1e8:	add    rax,r14
  41a1eb:	add    rax,0x1
  41a1ef:	add    rcx,0x1
  41a1f3:	mov    QWORD PTR [rsp+0x20],rcx
  41a1f8:	and    rax,QWORD PTR [rsp+0x18]
  41a1fd:	mov    rcx,QWORD PTR [rsp+0x30]
  41a202:	mov    rbp,QWORD PTR [rcx+rax*8]
  41a206:	cmp    rbp,0x2
  41a20a:	je     41a1e0 <fb_scope_table_find@@Base+0x110>
  41a20c:	test   rbp,rbp
  41a20f:	je     41a313 <fb_scope_table_find@@Base+0x243>
  41a215:	mov    r15,QWORD PTR [rbp+0x0]
  41a219:	mov    rcx,QWORD PTR [rsp+0x28]
  41a21e:	test   ecx,ecx
  41a220:	jle    41a2a0 <fb_scope_table_find@@Base+0x1d0>
  41a222:	mov    rax,QWORD PTR [rsp+0x10]
  41a227:	test   r15,r15
  41a22a:	je     41a1e0 <fb_scope_table_find@@Base+0x110>
  41a22c:	mov    rsi,QWORD PTR [r15+0x8]
  41a230:	mov    rdx,QWORD PTR [rsi+0x8]
  41a234:	cmp    rdx,rcx
  41a237:	ja     41a1e0 <fb_scope_table_find@@Base+0x110>
  41a239:	test   rdx,rdx
  41a23c:	je     41a270 <fb_scope_table_find@@Base+0x1a0>
  41a23e:	mov    rdi,QWORD PTR [rsi]
  41a241:	xor    esi,esi
  41a243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a24d:	nop    DWORD PTR [rax]
  41a250:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  41a254:	cmp    bl,BYTE PTR [rax+rsi*1]
  41a257:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a259:	add    rsi,0x1
  41a25d:	cmp    rsi,rdx
  41a260:	jb     41a250 <fb_scope_table_find@@Base+0x180>
  41a262:	cmp    rdx,rcx
  41a265:	jne    41a27b <fb_scope_table_find@@Base+0x1ab>
  41a267:	jmp    41a307 <fb_scope_table_find@@Base+0x237>
  41a26c:	nop    DWORD PTR [rax+0x0]
  41a270:	xor    esi,esi
  41a272:	cmp    rdx,rcx
  41a275:	je     41a307 <fb_scope_table_find@@Base+0x237>
  41a27b:	cmp    BYTE PTR [rax+rsi*1],0x2e
  41a27f:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a285:	lea    rsi,[rdx+0x1]
  41a289:	sub    rcx,rsi
  41a28c:	add    rax,rdx
  41a28f:	add    rax,0x1
  41a293:	mov    r15,QWORD PTR [r15]
  41a296:	test   r15,r15
  41a299:	jne    41a22c <fb_scope_table_find@@Base+0x15c>
  41a29b:	jmp    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a2a0:	mov    r13d,DWORD PTR [rsp+0xc]
  41a2a5:	mov    r12,QWORD PTR [rsp+0x10]
  41a2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41a2b0:	test   r15,r15
  41a2b3:	je     41a2fc <fb_scope_table_find@@Base+0x22c>
  41a2b5:	test   r12,r12
  41a2b8:	je     41a2fc <fb_scope_table_find@@Base+0x22c>
  41a2ba:	mov    rax,QWORD PTR [r15+0x8]
  41a2be:	mov    rdx,QWORD PTR [rax+0x8]
  41a2c2:	mov    rcx,QWORD PTR [r12+0x8]
  41a2c7:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a2cb:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a2d1:	mov    rdi,QWORD PTR [rax]
  41a2d4:	mov    rsi,QWORD PTR [rcx]
  41a2d7:	call   406060 <strncmp@plt>
  41a2dc:	test   eax,eax
  41a2de:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a2e4:	mov    r15,QWORD PTR [r15]
  41a2e7:	mov    r12,QWORD PTR [r12]
  41a2eb:	add    r13d,0xffffffff
  41a2ef:	jne    41a2b0 <fb_scope_table_find@@Base+0x1e0>
  41a2f1:	test   r15,r15
  41a2f4:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a2fa:	jmp    41a315 <fb_scope_table_find@@Base+0x245>
  41a2fc:	or     r15,r12
  41a2ff:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a305:	jmp    41a315 <fb_scope_table_find@@Base+0x245>
  41a307:	cmp    QWORD PTR [r15],0x0
  41a30b:	jne    41a1e0 <fb_scope_table_find@@Base+0x110>
  41a311:	jmp    41a315 <fb_scope_table_find@@Base+0x245>
  41a313:	xor    ebp,ebp
  41a315:	mov    rax,rbp
  41a318:	add    rsp,0x38
  41a31c:	pop    rbx
  41a31d:	pop    r12
  41a31f:	pop    r13
  41a321:	pop    r14
  41a323:	pop    r15
  41a325:	pop    rbp
  41a326:	ret    
  41a327:	test   rsi,rsi
  41a32a:	je     41a3cc <fb_scope_table_find@@Base+0x2fc>
  41a330:	mov    r8d,0x9e3779b1
  41a336:	xor    r14d,r14d
  41a339:	mov    r9d,edx
  41a33c:	mov    r10,rsi
  41a33f:	nop
  41a340:	mov    rax,QWORD PTR [r10+0x8]
  41a344:	mov    rdi,QWORD PTR [rax+0x8]
  41a348:	add    rdi,0xffffffffffffffff
  41a34c:	je     41a390 <fb_scope_table_find@@Base+0x2c0>
  41a34e:	mov    r11,QWORD PTR [rax]
  41a351:	xor    ebx,ebx
  41a353:	mov    ecx,0x2f692e57
  41a358:	nop    DWORD PTR [rax+rax*1+0x0]
  41a360:	movzx  ebp,BYTE PTR [r11+rbx*1]
  41a365:	test   rbp,rbp
  41a368:	je     41a3a0 <fb_scope_table_find@@Base+0x2d0>
  41a36a:	mov    rax,rcx
  41a36d:	shl    rax,0x5
  41a371:	add    rax,rcx
  41a374:	xor    rax,rbp
  41a377:	add    rbx,0x1
  41a37b:	mov    rcx,rax
  41a37e:	cmp    rdi,rbx
  41a381:	jne    41a360 <fb_scope_table_find@@Base+0x290>
  41a383:	jmp    41a3a3 <fb_scope_table_find@@Base+0x2d3>
  41a385:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a38f:	nop
  41a390:	mov    eax,0x2f692e57
  41a395:	jmp    41a3a3 <fb_scope_table_find@@Base+0x2d3>
  41a397:	nop    WORD PTR [rax+rax*1+0x0]
  41a3a0:	mov    rax,rcx
  41a3a3:	xor    r14,rax
  41a3a6:	xor    r14,0x2f693b52
  41a3ad:	imul   r14,r8
  41a3b1:	add    r9d,0x1
  41a3b5:	je     41a1b7 <fb_scope_table_find@@Base+0xe7>
  41a3bb:	mov    r10,QWORD PTR [r10]
  41a3be:	test   r10,r10
  41a3c1:	jne    41a340 <fb_scope_table_find@@Base+0x270>
  41a3c7:	jmp    41a1b7 <fb_scope_table_find@@Base+0xe7>
  41a3cc:	xor    r14d,r14d
  41a3cf:	jmp    41a1b7 <fb_scope_table_find@@Base+0xe7>
  41a3d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3de:	xchg   ax,ax

000000000041a3e0 <fb_scope_table_find_item@@Base>:
  41a3e0:	push   rbp
  41a3e1:	push   r15
  41a3e3:	push   r14
  41a3e5:	push   r13
  41a3e7:	push   r12
  41a3e9:	push   rbx
  41a3ea:	sub    rsp,0x18
  41a3ee:	mov    rax,QWORD PTR [rdi]
  41a3f1:	mov    QWORD PTR [rsp+0x10],rax
  41a3f6:	test   rax,rax
  41a3f9:	je     41a562 <fb_scope_table_find_item@@Base+0x182>
  41a3ff:	mov    r10,QWORD PTR [rsi]
  41a402:	mov    rax,QWORD PTR [rdi+0x18]
  41a406:	mov    QWORD PTR [rsp+0x8],rax
  41a40b:	xor    ebx,ebx
  41a40d:	test   r10,r10
  41a410:	je     41a499 <fb_scope_table_find_item@@Base+0xb9>
  41a416:	mov    r8d,0x9e3779b1
  41a41c:	mov    r9,r10
  41a41f:	nop
  41a420:	mov    rax,QWORD PTR [r9+0x8]
  41a424:	mov    rdx,QWORD PTR [rax+0x8]
  41a428:	add    rdx,0xffffffffffffffff
  41a42c:	je     41a470 <fb_scope_table_find_item@@Base+0x90>
  41a42e:	mov    rsi,QWORD PTR [rax]
  41a431:	xor    edi,edi
  41a433:	mov    eax,0x2f692e57
  41a438:	nop    DWORD PTR [rax+rax*1+0x0]
  41a440:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  41a444:	test   rcx,rcx
  41a447:	je     41a480 <fb_scope_table_find_item@@Base+0xa0>
  41a449:	mov    rbp,rax
  41a44c:	shl    rbp,0x5
  41a450:	add    rbp,rax
  41a453:	xor    rbp,rcx
  41a456:	add    rdi,0x1
  41a45a:	mov    rax,rbp
  41a45d:	cmp    rdx,rdi
  41a460:	jne    41a440 <fb_scope_table_find_item@@Base+0x60>
  41a462:	jmp    41a483 <fb_scope_table_find_item@@Base+0xa3>
  41a464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a46e:	xchg   ax,ax
  41a470:	mov    ebp,0x2f692e57
  41a475:	jmp    41a483 <fb_scope_table_find_item@@Base+0xa3>
  41a477:	nop    WORD PTR [rax+rax*1+0x0]
  41a480:	mov    rbp,rax
  41a483:	xor    rbx,rbp
  41a486:	xor    rbx,0x2f693b52
  41a48d:	imul   rbx,r8
  41a491:	mov    r9,QWORD PTR [r9]
  41a494:	test   r9,r9
  41a497:	jne    41a420 <fb_scope_table_find_item@@Base+0x40>
  41a499:	add    QWORD PTR [rsp+0x8],0xffffffffffffffff
  41a49f:	mov    r12,r10
  41a4a2:	test   r10,r10
  41a4a5:	setne  BYTE PTR [rsp+0x7]
  41a4aa:	mov    rax,rbx
  41a4ad:	xor    ebp,ebp
  41a4af:	jmp    41a4cc <fb_scope_table_find_item@@Base+0xec>
  41a4b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4c0:	lea    rax,[rbx+rbp*1]
  41a4c4:	add    rax,0x1
  41a4c8:	add    rbp,0x1
  41a4cc:	and    rax,QWORD PTR [rsp+0x8]
  41a4d1:	mov    rcx,QWORD PTR [rsp+0x10]
  41a4d6:	mov    r13,QWORD PTR [rcx+rax*8]
  41a4da:	cmp    r13,0x2
  41a4de:	je     41a4c0 <fb_scope_table_find_item@@Base+0xe0>
  41a4e0:	test   r13,r13
  41a4e3:	je     41a562 <fb_scope_table_find_item@@Base+0x182>
  41a4e5:	mov    r15,QWORD PTR [r13+0x0]
  41a4e9:	test   r15,r15
  41a4ec:	setne  al
  41a4ef:	mov    rcx,r12
  41a4f2:	test   r12,r12
  41a4f5:	je     41a54c <fb_scope_table_find_item@@Base+0x16c>
  41a4f7:	mov    cl,BYTE PTR [rsp+0x7]
  41a4fb:	test   r15,r15
  41a4fe:	je     41a550 <fb_scope_table_find_item@@Base+0x170>
  41a500:	mov    r14,r12
  41a503:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a50d:	nop    DWORD PTR [rax]
  41a510:	mov    rax,QWORD PTR [r15+0x8]
  41a514:	mov    rdx,QWORD PTR [rax+0x8]
  41a518:	mov    rcx,QWORD PTR [r14+0x8]
  41a51c:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a520:	jne    41a4c0 <fb_scope_table_find_item@@Base+0xe0>
  41a522:	mov    rdi,QWORD PTR [rax]
  41a525:	mov    rsi,QWORD PTR [rcx]
  41a528:	call   406060 <strncmp@plt>
  41a52d:	test   eax,eax
  41a52f:	jne    41a4c0 <fb_scope_table_find_item@@Base+0xe0>
  41a531:	mov    r14,QWORD PTR [r14]
  41a534:	mov    r15,QWORD PTR [r15]
  41a537:	test   r15,r15
  41a53a:	setne  al
  41a53d:	test   r14,r14
  41a540:	setne  cl
  41a543:	je     41a550 <fb_scope_table_find_item@@Base+0x170>
  41a545:	test   r15,r15
  41a548:	jne    41a510 <fb_scope_table_find_item@@Base+0x130>
  41a54a:	jmp    41a550 <fb_scope_table_find_item@@Base+0x170>
  41a54c:	mov    cl,BYTE PTR [rsp+0x7]
  41a550:	test   cl,cl
  41a552:	jne    41a4c0 <fb_scope_table_find_item@@Base+0xe0>
  41a558:	test   al,al
  41a55a:	jne    41a4c0 <fb_scope_table_find_item@@Base+0xe0>
  41a560:	jmp    41a565 <fb_scope_table_find_item@@Base+0x185>
  41a562:	xor    r13d,r13d
  41a565:	mov    rax,r13
  41a568:	add    rsp,0x18
  41a56c:	pop    rbx
  41a56d:	pop    r12
  41a56f:	pop    r13
  41a571:	pop    r14
  41a573:	pop    r15
  41a575:	pop    rbp
  41a576:	ret    
  41a577:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a580 <fb_scope_table_remove@@Base>:
  41a580:	jmp    41a590 <fb_scope_table_remove@@Base+0x10>
  41a582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a58c:	nop    DWORD PTR [rax+0x0]
  41a590:	push   rbp
  41a591:	push   r15
  41a593:	push   r14
  41a595:	push   r13
  41a597:	push   r12
  41a599:	push   rbx
  41a59a:	sub    rsp,0x48
  41a59e:	mov    rax,QWORD PTR [rdi]
  41a5a1:	mov    QWORD PTR [rsp+0x18],rax
  41a5a6:	test   rax,rax
  41a5a9:	je     41a803 <fb_scope_table_remove@@Base+0x283>
  41a5af:	mov    rax,QWORD PTR [rdi+0x18]
  41a5b3:	mov    QWORD PTR [rsp+0x20],rax
  41a5b8:	test   edx,edx
  41a5ba:	mov    QWORD PTR [rsp+0x38],rdi
  41a5bf:	mov    QWORD PTR [rsp+0x10],rsi
  41a5c4:	jle    41a814 <fb_scope_table_remove@@Base+0x294>
  41a5ca:	xor    r14d,r14d
  41a5cd:	mov    r8d,0x9e3779b1
  41a5d3:	mov    r9,rdx
  41a5d6:	mov    r10,rsi
  41a5d9:	test   r9,r9
  41a5dc:	jne    41a5f3 <fb_scope_table_remove@@Base+0x73>
  41a5de:	jmp    41a630 <fb_scope_table_remove@@Base+0xb0>
  41a5e0:	lea    rax,[rsi+0x1]
  41a5e4:	sub    r9,rax
  41a5e7:	add    r10,rsi
  41a5ea:	add    r10,0x1
  41a5ee:	test   r9,r9
  41a5f1:	je     41a630 <fb_scope_table_remove@@Base+0xb0>
  41a5f3:	xor    esi,esi
  41a5f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5ff:	nop
  41a600:	cmp    BYTE PTR [r10+rsi*1],0x2e
  41a605:	je     41a610 <fb_scope_table_remove@@Base+0x90>
  41a607:	add    rsi,0x1
  41a60b:	cmp    rsi,r9
  41a60e:	jb     41a600 <fb_scope_table_remove@@Base+0x80>
  41a610:	mov    rdi,rsi
  41a613:	add    rdi,0xffffffffffffffff
  41a617:	jne    41a639 <fb_scope_table_remove@@Base+0xb9>
  41a619:	mov    esi,0x1
  41a61e:	mov    ecx,0x2f692e57
  41a623:	jmp    41a660 <fb_scope_table_remove@@Base+0xe0>
  41a625:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a62f:	nop
  41a630:	mov    rdi,0xffffffffffffffff
  41a637:	xor    esi,esi
  41a639:	xor    ebx,ebx
  41a63b:	mov    ecx,0x2f692e57
  41a640:	movzx  eax,BYTE PTR [r10+rbx*1]
  41a645:	test   rax,rax
  41a648:	je     41a660 <fb_scope_table_remove@@Base+0xe0>
  41a64a:	mov    rbp,rcx
  41a64d:	shl    rbp,0x5
  41a651:	add    rcx,rbp
  41a654:	xor    rcx,rax
  41a657:	add    rbx,0x1
  41a65b:	cmp    rdi,rbx
  41a65e:	jne    41a640 <fb_scope_table_remove@@Base+0xc0>
  41a660:	xor    r14,rcx
  41a663:	xor    r14,0x2f693b52
  41a66a:	imul   r14,r8
  41a66e:	cmp    rsi,r9
  41a671:	jne    41a5e0 <fb_scope_table_remove@@Base+0x60>
  41a677:	add    QWORD PTR [rsp+0x20],0xffffffffffffffff
  41a67d:	mov    QWORD PTR [rsp+0x40],rdx
  41a682:	mov    eax,edx
  41a684:	neg    eax
  41a686:	mov    DWORD PTR [rsp+0xc],eax
  41a68a:	xor    eax,eax
  41a68c:	mov    QWORD PTR [rsp+0x30],rax
  41a691:	mov    r12,r14
  41a694:	jmp    41a6b6 <fb_scope_table_remove@@Base+0x136>
  41a696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a6a0:	mov    rax,QWORD PTR [rsp+0x30]
  41a6a5:	lea    r12,[rax+r14*1]
  41a6a9:	add    r12,0x1
  41a6ad:	add    rax,0x1
  41a6b1:	mov    QWORD PTR [rsp+0x30],rax
  41a6b6:	and    r12,QWORD PTR [rsp+0x20]
  41a6bb:	mov    rax,QWORD PTR [rsp+0x18]
  41a6c0:	mov    rax,QWORD PTR [rax+r12*8]
  41a6c4:	mov    QWORD PTR [rsp+0x28],rax
  41a6c9:	cmp    rax,0x2
  41a6cd:	je     41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a6cf:	mov    rax,QWORD PTR [rsp+0x28]
  41a6d4:	test   rax,rax
  41a6d7:	je     41a803 <fb_scope_table_remove@@Base+0x283>
  41a6dd:	mov    r13,QWORD PTR [rax]
  41a6e0:	mov    rcx,QWORD PTR [rsp+0x40]
  41a6e5:	test   ecx,ecx
  41a6e7:	jle    41a784 <fb_scope_table_remove@@Base+0x204>
  41a6ed:	mov    rax,QWORD PTR [rsp+0x10]
  41a6f2:	test   r13,r13
  41a6f5:	jne    41a717 <fb_scope_table_remove@@Base+0x197>
  41a6f7:	jmp    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a6f9:	nop    DWORD PTR [rax+0x0]
  41a700:	lea    rsi,[rdx+0x1]
  41a704:	sub    rcx,rsi
  41a707:	add    rax,rdx
  41a70a:	add    rax,0x1
  41a70e:	mov    r13,QWORD PTR [r13+0x0]
  41a712:	test   r13,r13
  41a715:	je     41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a717:	mov    rsi,QWORD PTR [r13+0x8]
  41a71b:	mov    rdx,QWORD PTR [rsi+0x8]
  41a71f:	cmp    rdx,rcx
  41a722:	ja     41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a728:	test   rdx,rdx
  41a72b:	je     41a770 <fb_scope_table_remove@@Base+0x1f0>
  41a72d:	mov    rdi,QWORD PTR [rsi]
  41a730:	xor    esi,esi
  41a732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a73c:	nop    DWORD PTR [rax+0x0]
  41a740:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  41a744:	cmp    bl,BYTE PTR [rax+rsi*1]
  41a747:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a74d:	add    rsi,0x1
  41a751:	cmp    rsi,rdx
  41a754:	jb     41a740 <fb_scope_table_remove@@Base+0x1c0>
  41a756:	cmp    rdx,rcx
  41a759:	je     41a777 <fb_scope_table_remove@@Base+0x1f7>
  41a75b:	cmp    BYTE PTR [rax+rsi*1],0x2e
  41a75f:	je     41a700 <fb_scope_table_remove@@Base+0x180>
  41a761:	jmp    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a770:	xor    esi,esi
  41a772:	cmp    rdx,rcx
  41a775:	jne    41a75b <fb_scope_table_remove@@Base+0x1db>
  41a777:	cmp    QWORD PTR [r13+0x0],0x0
  41a77c:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a782:	jmp    41a7e5 <fb_scope_table_remove@@Base+0x265>
  41a784:	mov    r15d,DWORD PTR [rsp+0xc]
  41a789:	mov    rbp,QWORD PTR [rsp+0x10]
  41a78e:	xchg   ax,ax
  41a790:	test   r13,r13
  41a793:	je     41a7dc <fb_scope_table_remove@@Base+0x25c>
  41a795:	test   rbp,rbp
  41a798:	je     41a7dc <fb_scope_table_remove@@Base+0x25c>
  41a79a:	mov    rax,QWORD PTR [r13+0x8]
  41a79e:	mov    rdx,QWORD PTR [rax+0x8]
  41a7a2:	mov    rcx,QWORD PTR [rbp+0x8]
  41a7a6:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a7aa:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a7b0:	mov    rdi,QWORD PTR [rax]
  41a7b3:	mov    rsi,QWORD PTR [rcx]
  41a7b6:	call   406060 <strncmp@plt>
  41a7bb:	test   eax,eax
  41a7bd:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a7c3:	mov    r13,QWORD PTR [r13+0x0]
  41a7c7:	mov    rbp,QWORD PTR [rbp+0x0]
  41a7cb:	add    r15d,0xffffffff
  41a7cf:	jne    41a790 <fb_scope_table_remove@@Base+0x210>
  41a7d1:	test   r13,r13
  41a7d4:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a7da:	jmp    41a7e5 <fb_scope_table_remove@@Base+0x265>
  41a7dc:	or     r13,rbp
  41a7df:	jne    41a6a0 <fb_scope_table_remove@@Base+0x120>
  41a7e5:	mov    rax,QWORD PTR [rsp+0x18]
  41a7ea:	mov    QWORD PTR [rax+r12*8],0x2
  41a7f2:	mov    rax,QWORD PTR [rsp+0x38]
  41a7f7:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41a7fc:	mov    rax,QWORD PTR [rsp+0x28]
  41a801:	jmp    41a805 <fb_scope_table_remove@@Base+0x285>
  41a803:	xor    eax,eax
  41a805:	add    rsp,0x48
  41a809:	pop    rbx
  41a80a:	pop    r12
  41a80c:	pop    r13
  41a80e:	pop    r14
  41a810:	pop    r15
  41a812:	pop    rbp
  41a813:	ret    
  41a814:	test   rsi,rsi
  41a817:	je     41a8bc <fb_scope_table_remove@@Base+0x33c>
  41a81d:	mov    r8d,0x9e3779b1
  41a823:	xor    r14d,r14d
  41a826:	mov    r9d,edx
  41a829:	mov    r10,rsi
  41a82c:	nop    DWORD PTR [rax+0x0]
  41a830:	mov    rax,QWORD PTR [r10+0x8]
  41a834:	mov    rsi,QWORD PTR [rax+0x8]
  41a838:	add    rsi,0xffffffffffffffff
  41a83c:	je     41a880 <fb_scope_table_remove@@Base+0x300>
  41a83e:	mov    rdi,QWORD PTR [rax]
  41a841:	xor    ebp,ebp
  41a843:	mov    eax,0x2f692e57
  41a848:	nop    DWORD PTR [rax+rax*1+0x0]
  41a850:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41a854:	test   rcx,rcx
  41a857:	je     41a890 <fb_scope_table_remove@@Base+0x310>
  41a859:	mov    rbx,rax
  41a85c:	shl    rbx,0x5
  41a860:	add    rbx,rax
  41a863:	xor    rbx,rcx
  41a866:	add    rbp,0x1
  41a86a:	mov    rax,rbx
  41a86d:	cmp    rsi,rbp
  41a870:	jne    41a850 <fb_scope_table_remove@@Base+0x2d0>
  41a872:	jmp    41a893 <fb_scope_table_remove@@Base+0x313>
  41a874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a87e:	xchg   ax,ax
  41a880:	mov    ebx,0x2f692e57
  41a885:	jmp    41a893 <fb_scope_table_remove@@Base+0x313>
  41a887:	nop    WORD PTR [rax+rax*1+0x0]
  41a890:	mov    rbx,rax
  41a893:	xor    r14,rbx
  41a896:	xor    r14,0x2f693b52
  41a89d:	imul   r14,r8
  41a8a1:	add    r9d,0x1
  41a8a5:	je     41a677 <fb_scope_table_remove@@Base+0xf7>
  41a8ab:	mov    r10,QWORD PTR [r10]
  41a8ae:	test   r10,r10
  41a8b1:	jne    41a830 <fb_scope_table_remove@@Base+0x2b0>
  41a8b7:	jmp    41a677 <fb_scope_table_remove@@Base+0xf7>
  41a8bc:	xor    r14d,r14d
  41a8bf:	jmp    41a677 <fb_scope_table_remove@@Base+0xf7>
  41a8c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8ce:	xchg   ax,ax

000000000041a8d0 <fb_scope_table_remove_item@@Base>:
  41a8d0:	mov    rsi,QWORD PTR [rsi]
  41a8d3:	xor    edx,edx
  41a8d5:	jmp    41a590 <fb_scope_table_remove@@Base+0x10>
  41a8da:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a8e0 <fb_scope_table_visit@@Base>:
  41a8e0:	push   r15
  41a8e2:	push   r14
  41a8e4:	push   r13
  41a8e6:	push   r12
  41a8e8:	push   rbx
  41a8e9:	mov    rax,QWORD PTR [rdi+0x18]
  41a8ed:	test   rax,rax
  41a8f0:	je     41a926 <fb_scope_table_visit@@Base+0x46>
  41a8f2:	mov    r14,rdx
  41a8f5:	mov    r15,rsi
  41a8f8:	mov    r12,rdi
  41a8fb:	mov    r13,QWORD PTR [rdi]
  41a8fe:	xor    ebx,ebx
  41a900:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a905:	mov    rcx,rsi
  41a908:	or     rcx,0x2
  41a90c:	cmp    rcx,0x2
  41a910:	je     41a91d <fb_scope_table_visit@@Base+0x3d>
  41a912:	mov    rdi,r14
  41a915:	call   r15
  41a918:	mov    rax,QWORD PTR [r12+0x18]
  41a91d:	add    rbx,0x1
  41a921:	cmp    rbx,rax
  41a924:	jb     41a900 <fb_scope_table_visit@@Base+0x20>
  41a926:	pop    rbx
  41a927:	pop    r12
  41a929:	pop    r13
  41a92b:	pop    r14
  41a92d:	pop    r15
  41a92f:	ret    

000000000041a930 <fb_schema_table_clear@@Base>:
  41a930:	push   rbx
  41a931:	mov    rbx,rdi
  41a934:	mov    rdi,QWORD PTR [rdi]
  41a937:	test   rdi,rdi
  41a93a:	je     41a941 <fb_schema_table_clear@@Base+0x11>
  41a93c:	call   406040 <free@plt>
  41a941:	vxorps xmm0,xmm0,xmm0
  41a945:	vmovups YMMWORD PTR [rbx],ymm0
  41a949:	pop    rbx
  41a94a:	vzeroupper 
  41a94d:	ret    
  41a94e:	xchg   ax,ax

000000000041a950 <fb_schema_table_destroy@@Base>:
  41a950:	push   r15
  41a952:	push   r14
  41a954:	push   r13
  41a956:	push   r12
  41a958:	push   rbx
  41a959:	mov    r12,rdi
  41a95c:	test   rsi,rsi
  41a95f:	je     41a9a6 <fb_schema_table_destroy@@Base+0x56>
  41a961:	mov    rax,QWORD PTR [r12+0x18]
  41a966:	test   rax,rax
  41a969:	je     41a9a6 <fb_schema_table_destroy@@Base+0x56>
  41a96b:	mov    r14,rdx
  41a96e:	mov    r15,rsi
  41a971:	mov    r13,QWORD PTR [r12]
  41a975:	xor    ebx,ebx
  41a977:	nop    WORD PTR [rax+rax*1+0x0]
  41a980:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a985:	mov    rcx,rsi
  41a988:	or     rcx,0x2
  41a98c:	cmp    rcx,0x2
  41a990:	je     41a99d <fb_schema_table_destroy@@Base+0x4d>
  41a992:	mov    rdi,r14
  41a995:	call   r15
  41a998:	mov    rax,QWORD PTR [r12+0x18]
  41a99d:	add    rbx,0x1
  41a9a1:	cmp    rbx,rax
  41a9a4:	jb     41a980 <fb_schema_table_destroy@@Base+0x30>
  41a9a6:	mov    rdi,QWORD PTR [r12]
  41a9aa:	test   rdi,rdi
  41a9ad:	je     41a9b4 <fb_schema_table_destroy@@Base+0x64>
  41a9af:	call   406040 <free@plt>
  41a9b4:	vxorps xmm0,xmm0,xmm0
  41a9b8:	vmovups YMMWORD PTR [r12],ymm0
  41a9be:	pop    rbx
  41a9bf:	pop    r12
  41a9c1:	pop    r13
  41a9c3:	pop    r14
  41a9c5:	pop    r15
  41a9c7:	vzeroupper 
  41a9ca:	ret    
  41a9cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a9d0 <fb_schema_table_init@@Base>:
  41a9d0:	push   r14
  41a9d2:	push   rbx
  41a9d3:	push   rax
  41a9d4:	mov    r14,rdi
  41a9d7:	mov    eax,0x4
  41a9dc:	nop    DWORD PTR [rax+0x0]
  41a9e0:	mov    rbx,rax
  41a9e3:	imul   rcx,rax,0xb3
  41a9ea:	shr    rcx,0x8
  41a9ee:	lea    rax,[rax+rax*1]
  41a9f2:	cmp    rcx,rsi
  41a9f5:	jb     41a9e0 <fb_schema_table_init@@Base+0x10>
  41a9f7:	mov    esi,0x8
  41a9fc:	mov    rdi,rbx
  41a9ff:	call   406140 <calloc@plt>
  41aa04:	mov    QWORD PTR [r14],rax
  41aa07:	test   rax,rax
  41aa0a:	je     41aa1e <fb_schema_table_init@@Base+0x4e>
  41aa0c:	vxorps xmm0,xmm0,xmm0
  41aa10:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41aa16:	mov    QWORD PTR [r14+0x18],rbx
  41aa1a:	xor    eax,eax
  41aa1c:	jmp    41aa23 <fb_schema_table_init@@Base+0x53>
  41aa1e:	mov    eax,0xffffffff
  41aa23:	add    rsp,0x8
  41aa27:	pop    rbx
  41aa28:	pop    r14
  41aa2a:	ret    
  41aa2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041aa30 <fb_schema_table_resize@@Base>:
  41aa30:	jmp    41aa40 <fb_schema_table_resize@@Base+0x10>
  41aa32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa3c:	nop    DWORD PTR [rax+0x0]
  41aa40:	push   r15
  41aa42:	push   r14
  41aa44:	push   r12
  41aa46:	push   rbx
  41aa47:	sub    rsp,0x28
  41aa4b:	mov    r14,rdi
  41aa4e:	mov    r12,QWORD PTR [rdi]
  41aa51:	mov    rax,QWORD PTR [rdi+0x10]
  41aa55:	cmp    rax,rsi
  41aa58:	cmova  rsi,rax
  41aa5c:	mov    eax,0x4
  41aa61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa70:	mov    rbx,rax
  41aa73:	imul   rcx,rax,0xb3
  41aa7a:	shr    rcx,0x8
  41aa7e:	lea    rax,[rax+rax*1]
  41aa82:	cmp    rcx,rsi
  41aa85:	jb     41aa70 <fb_schema_table_resize@@Base+0x40>
  41aa87:	mov    esi,0x8
  41aa8c:	mov    rdi,rbx
  41aa8f:	call   406140 <calloc@plt>
  41aa94:	mov    QWORD PTR [rsp+0x8],rax
  41aa99:	test   rax,rax
  41aa9c:	je     41ab19 <fb_schema_table_resize@@Base+0xe9>
  41aa9e:	vxorps xmm0,xmm0,xmm0
  41aaa2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41aaa8:	mov    QWORD PTR [rsp+0x20],rbx
  41aaad:	mov    rax,QWORD PTR [r14+0x18]
  41aab1:	test   rax,rax
  41aab4:	je     41aafd <fb_schema_table_resize@@Base+0xcd>
  41aab6:	xor    ebx,ebx
  41aab8:	lea    r15,[rsp+0x8]
  41aabd:	nop    DWORD PTR [rax]
  41aac0:	mov    rcx,QWORD PTR [r12+rbx*8]
  41aac4:	mov    rdx,rcx
  41aac7:	or     rdx,0x2
  41aacb:	cmp    rdx,0x2
  41aacf:	je     41aaf1 <fb_schema_table_resize@@Base+0xc1>
  41aad1:	mov    rsi,QWORD PTR [rcx+0xf8]
  41aad8:	movsxd rdx,DWORD PTR [rcx+0x100]
  41aadf:	mov    r8d,0x3
  41aae5:	mov    rdi,r15
  41aae8:	call   41ab40 <fb_schema_table_insert@@Base+0x10>
  41aaed:	mov    rax,QWORD PTR [r14+0x18]
  41aaf1:	add    rbx,0x1
  41aaf5:	cmp    rbx,rax
  41aaf8:	jb     41aac0 <fb_schema_table_resize@@Base+0x90>
  41aafa:	mov    r12,QWORD PTR [r14]
  41aafd:	test   r12,r12
  41ab00:	je     41ab0a <fb_schema_table_resize@@Base+0xda>
  41ab02:	mov    rdi,r12
  41ab05:	call   406040 <free@plt>
  41ab0a:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41ab10:	vmovups YMMWORD PTR [r14],ymm0
  41ab15:	xor    eax,eax
  41ab17:	jmp    41ab1e <fb_schema_table_resize@@Base+0xee>
  41ab19:	mov    eax,0xffffffff
  41ab1e:	add    rsp,0x28
  41ab22:	pop    rbx
  41ab23:	pop    r12
  41ab25:	pop    r14
  41ab27:	pop    r15
  41ab29:	vzeroupper 
  41ab2c:	ret    
  41ab2d:	nop    DWORD PTR [rax]

000000000041ab30 <fb_schema_table_insert@@Base>:
  41ab30:	jmp    41ab40 <fb_schema_table_insert@@Base+0x10>
  41ab32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab3c:	nop    DWORD PTR [rax+0x0]
  41ab40:	push   rbp
  41ab41:	push   r15
  41ab43:	push   r14
  41ab45:	push   r13
  41ab47:	push   r12
  41ab49:	push   rbx
  41ab4a:	sub    rsp,0x38
  41ab4e:	mov    QWORD PTR [rsp+0x20],rsi
  41ab53:	cmp    rcx,0x2
  41ab57:	je     41acd5 <fb_schema_table_insert@@Base+0x1a5>
  41ab5d:	mov    r13,rcx
  41ab60:	cmp    rcx,0x1
  41ab64:	je     41acf4 <fb_schema_table_insert@@Base+0x1c4>
  41ab6a:	test   r13,r13
  41ab6d:	je     41ad13 <fb_schema_table_insert@@Base+0x1e3>
  41ab73:	mov    rbp,rdx
  41ab76:	mov    rbx,rdi
  41ab79:	mov    DWORD PTR [rsp+0xc],r8d
  41ab7e:	mov    rsi,QWORD PTR [rdi+0x10]
  41ab82:	mov    r15,QWORD PTR [rdi+0x18]
  41ab86:	imul   rax,r15,0xb3
  41ab8d:	shr    rax,0x8
  41ab91:	cmp    rsi,rax
  41ab94:	mov    QWORD PTR [rsp+0x10],rdx
  41ab99:	jb     41abb7 <fb_schema_table_insert@@Base+0x87>
  41ab9b:	add    rsi,rsi
  41ab9e:	mov    rdi,rbx
  41aba1:	call   41aa40 <fb_schema_table_resize@@Base+0x10>
  41aba6:	test   eax,eax
  41aba8:	jne    41ad32 <fb_schema_table_insert@@Base+0x202>
  41abae:	mov    r15,QWORD PTR [rbx+0x18]
  41abb2:	mov    rbp,QWORD PTR [rsp+0x10]
  41abb7:	mov    r14,QWORD PTR [rbx]
  41abba:	add    r15,0xffffffffffffffff
  41abbe:	lea    rcx,[rsp+0x30]
  41abc3:	mov    edx,0x2f693b52
  41abc8:	mov    rdi,QWORD PTR [rsp+0x20]
  41abcd:	mov    rsi,rbp
  41abd0:	call   42c170 <cmetrohash64_1@@Base>
  41abd5:	mov    rcx,QWORD PTR [rsp+0x30]
  41abda:	mov    r12d,ecx
  41abdd:	mov    eax,r15d
  41abe0:	and    eax,ecx
  41abe2:	mov    ecx,DWORD PTR [rsp+0xc]
  41abe6:	or     ecx,0x1
  41abe9:	cmp    ecx,0x3
  41abec:	jne    41ac23 <fb_schema_table_insert@@Base+0xf3>
  41abee:	add    QWORD PTR [rbx+0x10],0x1
  41abf3:	jmp    41ac06 <fb_schema_table_insert@@Base+0xd6>
  41abf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abff:	nop
  41ac00:	mov    rax,r12
  41ac03:	and    rax,r15
  41ac06:	add    r12,0x1
  41ac0a:	mov    rcx,QWORD PTR [r14+rax*8]
  41ac0e:	or     rcx,0x2
  41ac12:	cmp    rcx,0x2
  41ac16:	jne    41ac00 <fb_schema_table_insert@@Base+0xd0>
  41ac18:	lea    rbp,[r14+rax*8]
  41ac1c:	xor    ebx,ebx
  41ac1e:	jmp    41acb1 <fb_schema_table_insert@@Base+0x181>
  41ac23:	mov    QWORD PTR [rsp+0x28],rbx
  41ac28:	mov    QWORD PTR [rsp+0x18],r13
  41ac2d:	add    r12,0x1
  41ac31:	xor    r13d,r13d
  41ac34:	mov    rdx,QWORD PTR [rsp+0x10]
  41ac39:	jmp    41ac4a <fb_schema_table_insert@@Base+0x11a>
  41ac3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac40:	mov    rax,r12
  41ac43:	and    rax,r15
  41ac46:	add    r12,0x1
  41ac4a:	lea    rbp,[r14+rax*8]
  41ac4e:	mov    rbx,QWORD PTR [r14+rax*8]
  41ac52:	cmp    rbx,0x2
  41ac56:	je     41ac90 <fb_schema_table_insert@@Base+0x160>
  41ac58:	test   rbx,rbx
  41ac5b:	je     41ac99 <fb_schema_table_insert@@Base+0x169>
  41ac5d:	movsxd rax,DWORD PTR [rbx+0x100]
  41ac64:	cmp    rax,rdx
  41ac67:	jne    41ac40 <fb_schema_table_insert@@Base+0x110>
  41ac69:	mov    rsi,QWORD PTR [rbx+0xf8]
  41ac70:	mov    rdi,QWORD PTR [rsp+0x20]
  41ac75:	call   406130 <memcmp@plt>
  41ac7a:	mov    rdx,QWORD PTR [rsp+0x10]
  41ac7f:	test   eax,eax
  41ac81:	jne    41ac40 <fb_schema_table_insert@@Base+0x110>
  41ac83:	jmp    41acc7 <fb_schema_table_insert@@Base+0x197>
  41ac85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac8f:	nop
  41ac90:	test   r13,r13
  41ac93:	cmove  r13,rbp
  41ac97:	jmp    41ac40 <fb_schema_table_insert@@Base+0x110>
  41ac99:	test   r13,r13
  41ac9c:	cmovne rbp,r13
  41aca0:	mov    rax,QWORD PTR [rsp+0x28]
  41aca5:	add    QWORD PTR [rax+0x10],0x1
  41acaa:	xor    ebx,ebx
  41acac:	mov    r13,QWORD PTR [rsp+0x18]
  41acb1:	mov    QWORD PTR [rbp+0x0],r13
  41acb5:	mov    rax,rbx
  41acb8:	add    rsp,0x38
  41acbc:	pop    rbx
  41acbd:	pop    r12
  41acbf:	pop    r13
  41acc1:	pop    r14
  41acc3:	pop    r15
  41acc5:	pop    rbp
  41acc6:	ret    
  41acc7:	cmp    DWORD PTR [rsp+0xc],0x0
  41accc:	mov    r13,QWORD PTR [rsp+0x18]
  41acd1:	jne    41acb5 <fb_schema_table_insert@@Base+0x185>
  41acd3:	jmp    41acb1 <fb_schema_table_insert@@Base+0x181>
  41acd5:	lea    rdi,[rip+0x2b97f]        # 44665b <str_set_deleted@@Base+0xd3>
  41acdc:	lea    rsi,[rip+0x2b8c4]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41ace3:	lea    rcx,[rip+0x2b927]        # 446611 <str_set_deleted@@Base+0x89>
  41acea:	mov    edx,0x73
  41acef:	call   4060f0 <__assert_fail@plt>
  41acf4:	lea    rdi,[rip+0x2b977]        # 446672 <str_set_deleted@@Base+0xea>
  41acfb:	lea    rsi,[rip+0x2b8a5]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41ad02:	lea    rcx,[rip+0x2b908]        # 446611 <str_set_deleted@@Base+0x89>
  41ad09:	mov    edx,0x74
  41ad0e:	call   4060f0 <__assert_fail@plt>
  41ad13:	lea    rdi,[rip+0x2b876]        # 446590 <str_set_deleted@@Base+0x8>
  41ad1a:	lea    rsi,[rip+0x2b886]        # 4465a7 <str_set_deleted@@Base+0x1f>
  41ad21:	lea    rcx,[rip+0x2b8e9]        # 446611 <str_set_deleted@@Base+0x89>
  41ad28:	mov    edx,0x72
  41ad2d:	call   4060f0 <__assert_fail@plt>
  41ad32:	mov    rax,QWORD PTR [rip+0x362bf]        # 450ff8 <stderr@GLIBC_2.2.5>
  41ad39:	mov    rdi,QWORD PTR [rax]
  41ad3c:	lea    rsi,[rip+0x2b944]        # 446687 <str_set_deleted@@Base+0xff>
  41ad43:	lea    rdx,[rip+0x2b954]        # 44669e <str_set_deleted@@Base+0x116>
  41ad4a:	xor    eax,eax
  41ad4c:	call   406170 <fprintf@plt>
  41ad51:	mov    edi,0x1
  41ad56:	call   406200 <exit@plt>
  41ad5b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ad60 <fb_schema_table_insert_item@@Base>:
  41ad60:	mov    eax,edx
  41ad62:	mov    rcx,rsi
  41ad65:	mov    rsi,QWORD PTR [rsi+0xf8]
  41ad6c:	movsxd rdx,DWORD PTR [rcx+0x100]
  41ad73:	mov    r8d,eax
  41ad76:	jmp    41ab40 <fb_schema_table_insert@@Base+0x10>
  41ad7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ad80 <fb_schema_table_find@@Base>:
  41ad80:	push   rbp
  41ad81:	push   r15
  41ad83:	push   r14
  41ad85:	push   r13
  41ad87:	push   r12
  41ad89:	push   rbx
  41ad8a:	push   rax
  41ad8b:	mov    r12,QWORD PTR [rdi]
  41ad8e:	test   r12,r12
  41ad91:	je     41adfd <fb_schema_table_find@@Base+0x7d>
  41ad93:	mov    r15,rdx
  41ad96:	mov    r14,rsi
  41ad99:	mov    r13,QWORD PTR [rdi+0x18]
  41ad9d:	add    r13,0xffffffffffffffff
  41ada1:	mov    rcx,rsp
  41ada4:	mov    edx,0x2f693b52
  41ada9:	mov    rdi,rsi
  41adac:	mov    rsi,r15
  41adaf:	call   42c170 <cmetrohash64_1@@Base>
  41adb4:	mov    ebp,DWORD PTR [rsp]
  41adb7:	jmp    41adc4 <fb_schema_table_find@@Base+0x44>
  41adb9:	nop    DWORD PTR [rax+0x0]
  41adc0:	add    rbp,0x1
  41adc4:	mov    rax,rbp
  41adc7:	and    rax,r13
  41adca:	mov    rbx,QWORD PTR [r12+rax*8]
  41adce:	cmp    rbx,0x2
  41add2:	je     41adc0 <fb_schema_table_find@@Base+0x40>
  41add4:	test   rbx,rbx
  41add7:	je     41adfd <fb_schema_table_find@@Base+0x7d>
  41add9:	movsxd rax,DWORD PTR [rbx+0x100]
  41ade0:	cmp    rax,r15
  41ade3:	jne    41adc0 <fb_schema_table_find@@Base+0x40>
  41ade5:	mov    rsi,QWORD PTR [rbx+0xf8]
  41adec:	mov    rdi,r14
  41adef:	mov    rdx,r15
  41adf2:	call   406130 <memcmp@plt>
  41adf7:	test   eax,eax
  41adf9:	jne    41adc0 <fb_schema_table_find@@Base+0x40>
  41adfb:	jmp    41adff <fb_schema_table_find@@Base+0x7f>
  41adfd:	xor    ebx,ebx
  41adff:	mov    rax,rbx
  41ae02:	add    rsp,0x8
  41ae06:	pop    rbx
  41ae07:	pop    r12
  41ae09:	pop    r13
  41ae0b:	pop    r14
  41ae0d:	pop    r15
  41ae0f:	pop    rbp
  41ae10:	ret    
  41ae11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ae20 <fb_schema_table_find_item@@Base>:
  41ae20:	push   rbp
  41ae21:	push   r15
  41ae23:	push   r14
  41ae25:	push   r13
  41ae27:	push   r12
  41ae29:	push   rbx
  41ae2a:	push   rax
  41ae2b:	mov    r12,QWORD PTR [rdi]
  41ae2e:	test   r12,r12
  41ae31:	je     41aeaa <fb_schema_table_find_item@@Base+0x8a>
  41ae33:	mov    r14,QWORD PTR [rsi+0xf8]
  41ae3a:	movsxd r15,DWORD PTR [rsi+0x100]
  41ae41:	mov    r13,QWORD PTR [rdi+0x18]
  41ae45:	add    r13,0xffffffffffffffff
  41ae49:	mov    rcx,rsp
  41ae4c:	mov    edx,0x2f693b52
  41ae51:	mov    rdi,r14
  41ae54:	mov    rsi,r15
  41ae57:	call   42c170 <cmetrohash64_1@@Base>
  41ae5c:	mov    ebp,DWORD PTR [rsp]
  41ae5f:	jmp    41ae74 <fb_schema_table_find_item@@Base+0x54>
  41ae61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae70:	add    rbp,0x1
  41ae74:	mov    rax,rbp
  41ae77:	and    rax,r13
  41ae7a:	mov    rbx,QWORD PTR [r12+rax*8]
  41ae7e:	cmp    rbx,0x2
  41ae82:	je     41ae70 <fb_schema_table_find_item@@Base+0x50>
  41ae84:	test   rbx,rbx
  41ae87:	je     41aeaa <fb_schema_table_find_item@@Base+0x8a>
  41ae89:	cmp    DWORD PTR [rbx+0x100],r15d
  41ae90:	jne    41ae70 <fb_schema_table_find_item@@Base+0x50>
  41ae92:	mov    rsi,QWORD PTR [rbx+0xf8]
  41ae99:	mov    rdi,r14
  41ae9c:	mov    rdx,r15
  41ae9f:	call   406130 <memcmp@plt>
  41aea4:	test   eax,eax
  41aea6:	jne    41ae70 <fb_schema_table_find_item@@Base+0x50>
  41aea8:	jmp    41aeac <fb_schema_table_find_item@@Base+0x8c>
  41aeaa:	xor    ebx,ebx
  41aeac:	mov    rax,rbx
  41aeaf:	add    rsp,0x8
  41aeb3:	pop    rbx
  41aeb4:	pop    r12
  41aeb6:	pop    r13
  41aeb8:	pop    r14
  41aeba:	pop    r15
  41aebc:	pop    rbp
  41aebd:	ret    
  41aebe:	xchg   ax,ax

000000000041aec0 <fb_schema_table_remove@@Base>:
  41aec0:	push   rbp
  41aec1:	push   r15
  41aec3:	push   r14
  41aec5:	push   r13
  41aec7:	push   r12
  41aec9:	push   rbx
  41aeca:	sub    rsp,0x18
  41aece:	mov    r13,QWORD PTR [rdi]
  41aed1:	test   r13,r13
  41aed4:	je     41af62 <fb_schema_table_remove@@Base+0xa2>
  41aeda:	mov    r12,rdx
  41aedd:	mov    QWORD PTR [rsp],rdi
  41aee1:	mov    rbp,QWORD PTR [rdi+0x18]
  41aee5:	add    rbp,0xffffffffffffffff
  41aee9:	lea    rcx,[rsp+0x10]
  41aeee:	mov    edx,0x2f693b52
  41aef3:	mov    QWORD PTR [rsp+0x8],rsi
  41aef8:	mov    rdi,rsi
  41aefb:	mov    rsi,r12
  41aefe:	call   42c170 <cmetrohash64_1@@Base>
  41af03:	mov    r15d,DWORD PTR [rsp+0x10]
  41af08:	jmp    41af14 <fb_schema_table_remove@@Base+0x54>
  41af0a:	nop    WORD PTR [rax+rax*1+0x0]
  41af10:	add    r15,0x1
  41af14:	mov    r14,r15
  41af17:	and    r14,rbp
  41af1a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41af1f:	cmp    rbx,0x2
  41af23:	je     41af10 <fb_schema_table_remove@@Base+0x50>
  41af25:	test   rbx,rbx
  41af28:	je     41af62 <fb_schema_table_remove@@Base+0xa2>
  41af2a:	movsxd rax,DWORD PTR [rbx+0x100]
  41af31:	cmp    rax,r12
  41af34:	jne    41af10 <fb_schema_table_remove@@Base+0x50>
  41af36:	mov    rsi,QWORD PTR [rbx+0xf8]
  41af3d:	mov    rdi,QWORD PTR [rsp+0x8]
  41af42:	mov    rdx,r12
  41af45:	call   406130 <memcmp@plt>
  41af4a:	test   eax,eax
  41af4c:	jne    41af10 <fb_schema_table_remove@@Base+0x50>
  41af4e:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41af57:	mov    rax,QWORD PTR [rsp]
  41af5b:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41af60:	jmp    41af64 <fb_schema_table_remove@@Base+0xa4>
  41af62:	xor    ebx,ebx
  41af64:	mov    rax,rbx
  41af67:	add    rsp,0x18
  41af6b:	pop    rbx
  41af6c:	pop    r12
  41af6e:	pop    r13
  41af70:	pop    r14
  41af72:	pop    r15
  41af74:	pop    rbp
  41af75:	ret    
  41af76:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041af80 <fb_schema_table_remove_item@@Base>:
  41af80:	push   rbp
  41af81:	push   r15
  41af83:	push   r14
  41af85:	push   r13
  41af87:	push   r12
  41af89:	push   rbx
  41af8a:	sub    rsp,0x18
  41af8e:	mov    r13,QWORD PTR [rdi]
  41af91:	test   r13,r13
  41af94:	je     41b02f <fb_schema_table_remove_item@@Base+0xaf>
  41af9a:	mov    rax,QWORD PTR [rsi+0xf8]
  41afa1:	movsxd r12,DWORD PTR [rsi+0x100]
  41afa8:	mov    QWORD PTR [rsp],rdi
  41afac:	mov    rbp,QWORD PTR [rdi+0x18]
  41afb0:	add    rbp,0xffffffffffffffff
  41afb4:	lea    rcx,[rsp+0x10]
  41afb9:	mov    edx,0x2f693b52
  41afbe:	mov    QWORD PTR [rsp+0x8],rax
  41afc3:	mov    rdi,rax
  41afc6:	mov    rsi,r12
  41afc9:	call   42c170 <cmetrohash64_1@@Base>
  41afce:	mov    r15d,DWORD PTR [rsp+0x10]
  41afd3:	jmp    41afe4 <fb_schema_table_remove_item@@Base+0x64>
  41afd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afdf:	nop
  41afe0:	add    r15,0x1
  41afe4:	mov    r14,r15
  41afe7:	and    r14,rbp
  41afea:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41afef:	cmp    rbx,0x2
  41aff3:	je     41afe0 <fb_schema_table_remove_item@@Base+0x60>
  41aff5:	test   rbx,rbx
  41aff8:	je     41b02f <fb_schema_table_remove_item@@Base+0xaf>
  41affa:	cmp    DWORD PTR [rbx+0x100],r12d
  41b001:	jne    41afe0 <fb_schema_table_remove_item@@Base+0x60>
  41b003:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b00a:	mov    rdi,QWORD PTR [rsp+0x8]
  41b00f:	mov    rdx,r12
  41b012:	call   406130 <memcmp@plt>
  41b017:	test   eax,eax
  41b019:	jne    41afe0 <fb_schema_table_remove_item@@Base+0x60>
  41b01b:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41b024:	mov    rax,QWORD PTR [rsp]
  41b028:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41b02d:	jmp    41b031 <fb_schema_table_remove_item@@Base+0xb1>
  41b02f:	xor    ebx,ebx
  41b031:	mov    rax,rbx
  41b034:	add    rsp,0x18
  41b038:	pop    rbx
  41b039:	pop    r12
  41b03b:	pop    r13
  41b03d:	pop    r14
  41b03f:	pop    r15
  41b041:	pop    rbp
  41b042:	ret    
  41b043:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b04d:	nop    DWORD PTR [rax]

000000000041b050 <fb_schema_table_visit@@Base>:
  41b050:	push   r15
  41b052:	push   r14
  41b054:	push   r13
  41b056:	push   r12
  41b058:	push   rbx
  41b059:	mov    rax,QWORD PTR [rdi+0x18]
  41b05d:	test   rax,rax
  41b060:	je     41b096 <fb_schema_table_visit@@Base+0x46>
  41b062:	mov    r14,rdx
  41b065:	mov    r15,rsi
  41b068:	mov    r12,rdi
  41b06b:	mov    r13,QWORD PTR [rdi]
  41b06e:	xor    ebx,ebx
  41b070:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b075:	mov    rcx,rsi
  41b078:	or     rcx,0x2
  41b07c:	cmp    rcx,0x2
  41b080:	je     41b08d <fb_schema_table_visit@@Base+0x3d>
  41b082:	mov    rdi,r14
  41b085:	call   r15
  41b088:	mov    rax,QWORD PTR [r12+0x18]
  41b08d:	add    rbx,0x1
  41b091:	cmp    rbx,rax
  41b094:	jb     41b070 <fb_schema_table_visit@@Base+0x20>
  41b096:	pop    rbx
  41b097:	pop    r12
  41b099:	pop    r13
  41b09b:	pop    r14
  41b09d:	pop    r15
  41b09f:	ret    

000000000041b0a0 <__flatcc_fb_copy_path_n@@Base>:
  41b0a0:	push   r15
  41b0a2:	push   r14
  41b0a4:	push   rbx
  41b0a5:	mov    r15,rsi
  41b0a8:	mov    r14,rdi
  41b0ab:	xor    esi,esi
  41b0ad:	mov    rdx,r15
  41b0b0:	call   406120 <memchr@plt>
  41b0b5:	mov    rbx,rax
  41b0b8:	sub    rbx,r14
  41b0bb:	test   rax,rax
  41b0be:	cmove  rbx,r15
  41b0c2:	lea    rdi,[rbx+0x1]
  41b0c6:	call   4061a0 <malloc@plt>
  41b0cb:	mov    r15,rax
  41b0ce:	test   rax,rax
  41b0d1:	je     41b0e6 <__flatcc_fb_copy_path_n@@Base+0x46>
  41b0d3:	mov    rdi,r15
  41b0d6:	mov    rsi,r14
  41b0d9:	mov    rdx,rbx
  41b0dc:	call   406190 <memcpy@plt>
  41b0e1:	mov    BYTE PTR [r15+rbx*1],0x0
  41b0e6:	mov    rax,r15
  41b0e9:	pop    rbx
  41b0ea:	pop    r14
  41b0ec:	pop    r15
  41b0ee:	ret    
  41b0ef:	nop

000000000041b0f0 <__flatcc_fb_copy_path@@Base>:
  41b0f0:	push   r15
  41b0f2:	push   r14
  41b0f4:	push   rbx
  41b0f5:	mov    r14,rdi
  41b0f8:	call   4060d0 <strlen@plt>
  41b0fd:	mov    r15,rax
  41b100:	lea    rdi,[rax+0x1]
  41b104:	call   4061a0 <malloc@plt>
  41b109:	mov    rbx,rax
  41b10c:	test   rax,rax
  41b10f:	je     41b124 <__flatcc_fb_copy_path@@Base+0x34>
  41b111:	mov    rdi,rbx
  41b114:	mov    rsi,r14
  41b117:	mov    rdx,r15
  41b11a:	call   406190 <memcpy@plt>
  41b11f:	mov    BYTE PTR [rbx+r15*1],0x0
  41b124:	mov    rax,rbx
  41b127:	pop    rbx
  41b128:	pop    r14
  41b12a:	pop    r15
  41b12c:	ret    
  41b12d:	nop    DWORD PTR [rax]

000000000041b130 <__flatcc_fb_chomp@@Base>:
  41b130:	push   r15
  41b132:	push   r14
  41b134:	push   r12
  41b136:	push   rbx
  41b137:	push   rax
  41b138:	mov    r14,rdx
  41b13b:	mov    rbx,rsi
  41b13e:	mov    r12,rdi
  41b141:	test   rdx,rdx
  41b144:	je     41b184 <__flatcc_fb_chomp@@Base+0x54>
  41b146:	mov    rdi,r14
  41b149:	call   4060d0 <strlen@plt>
  41b14e:	mov    r15,rax
  41b151:	cmp    r15,rbx
  41b154:	jae    41b175 <__flatcc_fb_chomp@@Base+0x45>
  41b156:	add    r12,rbx
  41b159:	sub    r12,r15
  41b15c:	mov    rdi,r12
  41b15f:	mov    rsi,r14
  41b162:	mov    rdx,r15
  41b165:	call   406060 <strncmp@plt>
  41b16a:	xor    ecx,ecx
  41b16c:	test   eax,eax
  41b16e:	cmove  rcx,r15
  41b172:	sub    rbx,rcx
  41b175:	mov    rax,rbx
  41b178:	add    rsp,0x8
  41b17c:	pop    rbx
  41b17d:	pop    r12
  41b17f:	pop    r14
  41b181:	pop    r15
  41b183:	ret    
  41b184:	xor    r15d,r15d
  41b187:	cmp    r15,rbx
  41b18a:	jb     41b156 <__flatcc_fb_chomp@@Base+0x26>
  41b18c:	jmp    41b175 <__flatcc_fb_chomp@@Base+0x45>
  41b18e:	xchg   ax,ax

000000000041b190 <__flatcc_fb_create_join_path_n@@Base>:
  41b190:	push   rbp
  41b191:	push   r15
  41b193:	push   r14
  41b195:	push   r13
  41b197:	push   r12
  41b199:	push   rbx
  41b19a:	sub    rsp,0x28
  41b19e:	mov    ebp,r9d
  41b1a1:	mov    r14,rcx
  41b1a4:	mov    r15,rdx
  41b1a7:	mov    rbx,rsi
  41b1aa:	mov    r12,rdi
  41b1ad:	test   r8,r8
  41b1b0:	mov    QWORD PTR [rsp+0x20],r8
  41b1b5:	je     41b1e5 <__flatcc_fb_create_join_path_n@@Base+0x55>
  41b1b7:	mov    rdi,r8
  41b1ba:	call   4060d0 <strlen@plt>
  41b1bf:	test   r12,r12
  41b1c2:	je     41b1ec <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41b1c4:	test   r14,r14
  41b1c7:	je     41b1ee <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41b1c9:	mov    cl,BYTE PTR [r15]
  41b1cc:	cmp    cl,0x2f
  41b1cf:	je     41b1ec <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41b1d1:	cmp    cl,0x5c
  41b1d4:	je     41b1ec <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41b1d6:	cmp    r14,0x2
  41b1da:	jb     41b1ee <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41b1dc:	cmp    BYTE PTR [r15+0x1],0x3a
  41b1e1:	je     41b1ec <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41b1e3:	jmp    41b1ee <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41b1e5:	xor    eax,eax
  41b1e7:	test   r12,r12
  41b1ea:	jne    41b1c4 <__flatcc_fb_create_join_path_n@@Base+0x34>
  41b1ec:	xor    ebx,ebx
  41b1ee:	test   ebp,ebp
  41b1f0:	mov    QWORD PTR [rsp+0x18],r15
  41b1f5:	je     41b20b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41b1f7:	test   rbx,rbx
  41b1fa:	je     41b20b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41b1fc:	mov    cl,BYTE PTR [r12+rbx*1-0x1]
  41b201:	cmp    cl,0x5c
  41b204:	je     41b20b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41b206:	cmp    cl,0x2f
  41b209:	jne    41b20d <__flatcc_fb_create_join_path_n@@Base+0x7d>
  41b20b:	xor    ebp,ebp
  41b20d:	mov    r15,r12
  41b210:	movsxd rdi,ebp
  41b213:	mov    QWORD PTR [rsp+0x8],r14
  41b218:	add    r14,rbx
  41b21b:	add    r14,0x1
  41b21f:	mov    QWORD PTR [rsp+0x10],rax
  41b224:	lea    r13,[r14+rax*1]
  41b228:	add    rdi,r13
  41b22b:	call   4061a0 <malloc@plt>
  41b230:	mov    r12,rax
  41b233:	test   rax,rax
  41b236:	je     41b299 <__flatcc_fb_create_join_path_n@@Base+0x109>
  41b238:	mov    rdi,r12
  41b23b:	mov    rsi,r15
  41b23e:	mov    rdx,rbx
  41b241:	call   406190 <memcpy@plt>
  41b246:	test   ebp,ebp
  41b248:	je     41b25f <__flatcc_fb_create_join_path_n@@Base+0xcf>
  41b24a:	mov    BYTE PTR [r12+rbx*1],0x2f
  41b24f:	add    rbx,0x1
  41b253:	mov    rdx,QWORD PTR [rsp+0x8]
  41b258:	mov    rbp,QWORD PTR [rsp+0x10]
  41b25d:	jmp    41b271 <__flatcc_fb_create_join_path_n@@Base+0xe1>
  41b25f:	mov    rdx,QWORD PTR [rsp+0x8]
  41b264:	lea    r14,[rbx+rdx*1]
  41b268:	mov    rbp,QWORD PTR [rsp+0x10]
  41b26d:	lea    r13,[r14+rbp*1]
  41b271:	add    rbx,r12
  41b274:	mov    rdi,rbx
  41b277:	mov    rsi,QWORD PTR [rsp+0x18]
  41b27c:	call   406190 <memcpy@plt>
  41b281:	add    r14,r12
  41b284:	mov    rdi,r14
  41b287:	mov    rsi,QWORD PTR [rsp+0x20]
  41b28c:	mov    rdx,rbp
  41b28f:	call   406190 <memcpy@plt>
  41b294:	mov    BYTE PTR [r12+r13*1],0x0
  41b299:	mov    rax,r12
  41b29c:	add    rsp,0x28
  41b2a0:	pop    rbx
  41b2a1:	pop    r12
  41b2a3:	pop    r13
  41b2a5:	pop    r14
  41b2a7:	pop    r15
  41b2a9:	pop    rbp
  41b2aa:	ret    
  41b2ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b2b0 <__flatcc_fb_create_join_path@@Base>:
  41b2b0:	push   rbp
  41b2b1:	push   r15
  41b2b3:	push   r14
  41b2b5:	push   r12
  41b2b7:	push   rbx
  41b2b8:	mov    r14d,ecx
  41b2bb:	mov    r15,rdx
  41b2be:	mov    rbp,rsi
  41b2c1:	mov    rbx,rdi
  41b2c4:	test   rdi,rdi
  41b2c7:	je     41b2e6 <__flatcc_fb_create_join_path@@Base+0x36>
  41b2c9:	mov    rdi,rbx
  41b2cc:	call   4060d0 <strlen@plt>
  41b2d1:	mov    r12,rax
  41b2d4:	test   rbp,rbp
  41b2d7:	je     41b2ee <__flatcc_fb_create_join_path@@Base+0x3e>
  41b2d9:	mov    rdi,rbp
  41b2dc:	call   4060d0 <strlen@plt>
  41b2e1:	mov    rcx,rax
  41b2e4:	jmp    41b2f0 <__flatcc_fb_create_join_path@@Base+0x40>
  41b2e6:	xor    r12d,r12d
  41b2e9:	test   rbp,rbp
  41b2ec:	jne    41b2d9 <__flatcc_fb_create_join_path@@Base+0x29>
  41b2ee:	xor    ecx,ecx
  41b2f0:	mov    rdi,rbx
  41b2f3:	mov    rsi,r12
  41b2f6:	mov    rdx,rbp
  41b2f9:	mov    r8,r15
  41b2fc:	mov    r9d,r14d
  41b2ff:	pop    rbx
  41b300:	pop    r12
  41b302:	pop    r14
  41b304:	pop    r15
  41b306:	pop    rbp
  41b307:	jmp    41b190 <__flatcc_fb_create_join_path_n@@Base>
  41b30c:	nop    DWORD PTR [rax+0x0]

000000000041b310 <__flatcc_fb_create_path_ext_n@@Base>:
  41b310:	push   rbp
  41b311:	push   r15
  41b313:	push   r14
  41b315:	push   r13
  41b317:	push   r12
  41b319:	push   rbx
  41b31a:	push   rax
  41b31b:	mov    r14,rdx
  41b31e:	mov    r13,rsi
  41b321:	mov    r15,rdi
  41b324:	test   rdx,rdx
  41b327:	je     41b336 <__flatcc_fb_create_path_ext_n@@Base+0x26>
  41b329:	mov    rdi,r14
  41b32c:	call   4060d0 <strlen@plt>
  41b331:	mov    r12,rax
  41b334:	jmp    41b339 <__flatcc_fb_create_path_ext_n@@Base+0x29>
  41b336:	xor    r12d,r12d
  41b339:	lea    rdi,[r12+r13*1]
  41b33d:	add    rdi,0x1
  41b341:	call   4061a0 <malloc@plt>
  41b346:	mov    rbx,rax
  41b349:	test   rax,rax
  41b34c:	je     41b375 <__flatcc_fb_create_path_ext_n@@Base+0x65>
  41b34e:	lea    rbp,[r12+r13*1]
  41b352:	mov    rdi,rbx
  41b355:	mov    rsi,r15
  41b358:	mov    rdx,r13
  41b35b:	call   406190 <memcpy@plt>
  41b360:	mov    rdi,rbx
  41b363:	add    rdi,r13
  41b366:	mov    rsi,r14
  41b369:	mov    rdx,r12
  41b36c:	call   406190 <memcpy@plt>
  41b371:	mov    BYTE PTR [rbx+rbp*1],0x0
  41b375:	mov    rax,rbx
  41b378:	add    rsp,0x8
  41b37c:	pop    rbx
  41b37d:	pop    r12
  41b37f:	pop    r13
  41b381:	pop    r14
  41b383:	pop    r15
  41b385:	pop    rbp
  41b386:	ret    
  41b387:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b390 <__flatcc_fb_create_path_ext@@Base>:
  41b390:	push   rbp
  41b391:	push   r15
  41b393:	push   r14
  41b395:	push   r13
  41b397:	push   r12
  41b399:	push   rbx
  41b39a:	push   rax
  41b39b:	mov    r14,rsi
  41b39e:	mov    r15,rdi
  41b3a1:	test   rdi,rdi
  41b3a4:	je     41b3c3 <__flatcc_fb_create_path_ext@@Base+0x33>
  41b3a6:	mov    rdi,r15
  41b3a9:	call   4060d0 <strlen@plt>
  41b3ae:	mov    r12,rax
  41b3b1:	test   r14,r14
  41b3b4:	je     41b3cb <__flatcc_fb_create_path_ext@@Base+0x3b>
  41b3b6:	mov    rdi,r14
  41b3b9:	call   4060d0 <strlen@plt>
  41b3be:	mov    r13,rax
  41b3c1:	jmp    41b3ce <__flatcc_fb_create_path_ext@@Base+0x3e>
  41b3c3:	xor    r12d,r12d
  41b3c6:	test   r14,r14
  41b3c9:	jne    41b3b6 <__flatcc_fb_create_path_ext@@Base+0x26>
  41b3cb:	xor    r13d,r13d
  41b3ce:	lea    rdi,[r12+r13*1]
  41b3d2:	add    rdi,0x1
  41b3d6:	call   4061a0 <malloc@plt>
  41b3db:	mov    rbx,rax
  41b3de:	test   rax,rax
  41b3e1:	je     41b40a <__flatcc_fb_create_path_ext@@Base+0x7a>
  41b3e3:	lea    rbp,[r12+r13*1]
  41b3e7:	mov    rdi,rbx
  41b3ea:	mov    rsi,r15
  41b3ed:	mov    rdx,r12
  41b3f0:	call   406190 <memcpy@plt>
  41b3f5:	mov    rdi,rbx
  41b3f8:	add    rdi,r12
  41b3fb:	mov    rsi,r14
  41b3fe:	mov    rdx,r13
  41b401:	call   406190 <memcpy@plt>
  41b406:	mov    BYTE PTR [rbx+rbp*1],0x0
  41b40a:	mov    rax,rbx
  41b40d:	add    rsp,0x8
  41b411:	pop    rbx
  41b412:	pop    r12
  41b414:	pop    r13
  41b416:	pop    r14
  41b418:	pop    r15
  41b41a:	pop    rbp
  41b41b:	ret    
  41b41c:	nop    DWORD PTR [rax+0x0]

000000000041b420 <__flatcc_fb_create_make_path_n@@Base>:
  41b420:	push   rbp
  41b421:	push   r15
  41b423:	push   r14
  41b425:	push   r13
  41b427:	push   r12
  41b429:	push   rbx
  41b42a:	push   rax
  41b42b:	mov    rcx,rsi
  41b42e:	mov    r14,rdi
  41b431:	test   rsi,rsi
  41b434:	je     41b472 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41b436:	cmp    rcx,0x1
  41b43a:	jne    41b4c3 <__flatcc_fb_create_make_path_n@@Base+0xa3>
  41b440:	mov    bl,BYTE PTR [r14]
  41b443:	cmp    bl,0x5c
  41b446:	je     41b44d <__flatcc_fb_create_make_path_n@@Base+0x2d>
  41b448:	cmp    bl,0x20
  41b44b:	jne    41b472 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41b44d:	mov    edi,0x3
  41b452:	call   4061a0 <malloc@plt>
  41b457:	test   rax,rax
  41b45a:	je     41b653 <__flatcc_fb_create_make_path_n@@Base+0x233>
  41b460:	mov    r15,rax
  41b463:	mov    BYTE PTR [rax],0x5c
  41b466:	mov    BYTE PTR [rax+0x1],bl
  41b469:	mov    BYTE PTR [rax+0x2],0x0
  41b46d:	jmp    41b6f4 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41b472:	xor    r15d,r15d
  41b475:	xor    esi,esi
  41b477:	mov    rdi,r14
  41b47a:	mov    rdx,rcx
  41b47d:	mov    rbx,rcx
  41b480:	call   406120 <memchr@plt>
  41b485:	mov    r12,rax
  41b488:	sub    r12,r14
  41b48b:	test   rax,rax
  41b48e:	cmove  r12,rbx
  41b492:	lea    rdi,[r12+0x1]
  41b497:	call   4061a0 <malloc@plt>
  41b49c:	test   rax,rax
  41b49f:	je     41b6f4 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41b4a5:	mov    rbx,rax
  41b4a8:	mov    rdi,rax
  41b4ab:	mov    rsi,r14
  41b4ae:	mov    rdx,r12
  41b4b1:	call   406190 <memcpy@plt>
  41b4b6:	mov    BYTE PTR [rbx+r12*1],0x0
  41b4bb:	mov    r15,rbx
  41b4be:	jmp    41b6f4 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41b4c3:	lea    r12,[rcx-0x1]
  41b4c7:	mov    r13b,BYTE PTR [r14]
  41b4ca:	lea    rax,[rcx-0x2]
  41b4ce:	mov    r8d,r12d
  41b4d1:	and    r8d,0x3
  41b4d5:	cmp    rax,0x3
  41b4d9:	mov    QWORD PTR [rsp],rcx
  41b4dd:	jae    41b4e9 <__flatcc_fb_create_make_path_n@@Base+0xc9>
  41b4df:	xor    ebp,ebp
  41b4e1:	mov    r11d,r13d
  41b4e4:	jmp    41b598 <__flatcc_fb_create_make_path_n@@Base+0x178>
  41b4e9:	mov    r9,r12
  41b4ec:	sub    r9,r8
  41b4ef:	xor    ebp,ebp
  41b4f1:	mov    r11d,r13d
  41b4f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4fe:	xchg   ax,ax
  41b500:	cmp    r11b,0x5c
  41b504:	sete   al
  41b507:	movzx  esi,BYTE PTR [r14+rbp*1+0x1]
  41b50d:	movzx  r10d,BYTE PTR [r14+rbp*1+0x2]
  41b513:	xor    edi,edi
  41b515:	cmp    sil,0x20
  41b519:	sete   dil
  41b51d:	and    al,dil
  41b520:	movzx  eax,al
  41b523:	add    rax,rcx
  41b526:	xor    ecx,ecx
  41b528:	cmp    r11b,0x20
  41b52c:	sete   cl
  41b52f:	add    rcx,rax
  41b532:	cmp    sil,0x5c
  41b536:	sete   al
  41b539:	xor    esi,esi
  41b53b:	cmp    r10b,0x20
  41b53f:	sete   sil
  41b543:	and    al,sil
  41b546:	movzx  eax,al
  41b549:	add    rax,rcx
  41b54c:	add    rdi,rax
  41b54f:	cmp    r10b,0x5c
  41b553:	sete   al
  41b556:	movzx  edx,BYTE PTR [r14+rbp*1+0x3]
  41b55c:	xor    ecx,ecx
  41b55e:	cmp    dl,0x20
  41b561:	sete   cl
  41b564:	and    al,cl
  41b566:	movzx  eax,al
  41b569:	add    rax,rdi
  41b56c:	add    rsi,rax
  41b56f:	xor    dl,0x5c
  41b572:	movzx  r11d,BYTE PTR [r14+rbp*1+0x4]
  41b578:	add    rbp,0x4
  41b57c:	mov    eax,r11d
  41b57f:	xor    al,0x20
  41b581:	xor    edi,edi
  41b583:	or     al,dl
  41b585:	sete   dil
  41b589:	add    rdi,rsi
  41b58c:	add    rcx,rdi
  41b58f:	cmp    r9,rbp
  41b592:	jne    41b500 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41b598:	mov    edx,r11d
  41b59b:	test   r8,r8
  41b59e:	je     41b5e1 <__flatcc_fb_create_make_path_n@@Base+0x1c1>
  41b5a0:	lea    rdi,[r14+rbp*1]
  41b5a4:	add    rdi,0x1
  41b5a8:	xor    esi,esi
  41b5aa:	nop    WORD PTR [rax+rax*1+0x0]
  41b5b0:	mov    ebx,r11d
  41b5b3:	xor    bl,0x5c
  41b5b6:	movzx  edx,BYTE PTR [rdi+rsi*1]
  41b5ba:	mov    eax,edx
  41b5bc:	xor    al,0x20
  41b5be:	xor    ebp,ebp
  41b5c0:	or     al,bl
  41b5c2:	sete   bpl
  41b5c6:	add    rbp,rcx
  41b5c9:	xor    ecx,ecx
  41b5cb:	cmp    r11b,0x20
  41b5cf:	sete   cl
  41b5d2:	add    rcx,rbp
  41b5d5:	add    rsi,0x1
  41b5d9:	mov    r11d,edx
  41b5dc:	cmp    r8,rsi
  41b5df:	jne    41b5b0 <__flatcc_fb_create_make_path_n@@Base+0x190>
  41b5e1:	xor    eax,eax
  41b5e3:	cmp    dl,0x20
  41b5e6:	sete   al
  41b5e9:	lea    rdi,[rcx+rax*1]
  41b5ed:	add    rdi,0x1
  41b5f1:	call   4061a0 <malloc@plt>
  41b5f6:	test   rax,rax
  41b5f9:	je     41b653 <__flatcc_fb_create_make_path_n@@Base+0x233>
  41b5fb:	mov    r15,rax
  41b5fe:	and    r12d,0x1
  41b602:	mov    rsi,QWORD PTR [rsp]
  41b606:	cmp    rsi,0x2
  41b60a:	jne    41b65b <__flatcc_fb_create_make_path_n@@Base+0x23b>
  41b60c:	mov    ecx,0x1
  41b611:	xor    eax,eax
  41b613:	test   r12,r12
  41b616:	je     41b6d8 <__flatcc_fb_create_make_path_n@@Base+0x2b8>
  41b61c:	cmp    r13b,0x5c
  41b620:	je     41b706 <__flatcc_fb_create_make_path_n@@Base+0x2e6>
  41b626:	cmp    r13b,0x20
  41b62a:	jne    41b635 <__flatcc_fb_create_make_path_n@@Base+0x215>
  41b62c:	mov    BYTE PTR [r15+rax*1],0x5c
  41b631:	add    rax,0x1
  41b635:	mov    BYTE PTR [r15+rax*1],r13b
  41b639:	mov    r13b,BYTE PTR [r14+rcx*1]
  41b63d:	mov    rdx,rax
  41b640:	lea    rax,[rax+0x1]
  41b644:	cmp    r13b,0x20
  41b648:	jne    41b6ea <__flatcc_fb_create_make_path_n@@Base+0x2ca>
  41b64e:	jmp    41b6de <__flatcc_fb_create_make_path_n@@Base+0x2be>
  41b653:	xor    r15d,r15d
  41b656:	jmp    41b6f4 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41b65b:	sub    rsi,r12
  41b65e:	xor    eax,eax
  41b660:	mov    ecx,0x1
  41b665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b66f:	nop
  41b670:	cmp    r13b,0x20
  41b674:	je     41b683 <__flatcc_fb_create_make_path_n@@Base+0x263>
  41b676:	cmp    r13b,0x5c
  41b67a:	jne    41b68c <__flatcc_fb_create_make_path_n@@Base+0x26c>
  41b67c:	cmp    BYTE PTR [r14+rcx*1],0x20
  41b681:	jne    41b68c <__flatcc_fb_create_make_path_n@@Base+0x26c>
  41b683:	mov    BYTE PTR [r15+rax*1],0x5c
  41b688:	add    rax,0x1
  41b68c:	mov    BYTE PTR [r15+rax*1],r13b
  41b690:	movzx  ebx,BYTE PTR [r14+rcx*1]
  41b695:	cmp    bl,0x20
  41b698:	je     41b6ab <__flatcc_fb_create_make_path_n@@Base+0x28b>
  41b69a:	lea    rdx,[rax+0x1]
  41b69e:	cmp    bl,0x5c
  41b6a1:	jne    41b6b8 <__flatcc_fb_create_make_path_n@@Base+0x298>
  41b6a3:	cmp    BYTE PTR [r14+rcx*1+0x1],0x20
  41b6a9:	jne    41b6b8 <__flatcc_fb_create_make_path_n@@Base+0x298>
  41b6ab:	mov    BYTE PTR [r15+rax*1+0x1],0x5c
  41b6b1:	add    rax,0x2
  41b6b5:	mov    rdx,rax
  41b6b8:	mov    BYTE PTR [r15+rdx*1],bl
  41b6bc:	lea    rax,[rdx+0x1]
  41b6c0:	movzx  r13d,BYTE PTR [r14+rcx*1+0x1]
  41b6c6:	add    rcx,0x2
  41b6ca:	cmp    rsi,rcx
  41b6cd:	jne    41b670 <__flatcc_fb_create_make_path_n@@Base+0x250>
  41b6cf:	test   r12,r12
  41b6d2:	jne    41b61c <__flatcc_fb_create_make_path_n@@Base+0x1fc>
  41b6d8:	cmp    r13b,0x20
  41b6dc:	jne    41b6ea <__flatcc_fb_create_make_path_n@@Base+0x2ca>
  41b6de:	add    rdx,0x2
  41b6e2:	mov    BYTE PTR [r15+rax*1],0x5c
  41b6e7:	mov    rax,rdx
  41b6ea:	mov    BYTE PTR [r15+rax*1],r13b
  41b6ee:	mov    BYTE PTR [r15+rax*1+0x1],0x0
  41b6f4:	mov    rax,r15
  41b6f7:	add    rsp,0x8
  41b6fb:	pop    rbx
  41b6fc:	pop    r12
  41b6fe:	pop    r13
  41b700:	pop    r14
  41b702:	pop    r15
  41b704:	pop    rbp
  41b705:	ret    
  41b706:	cmp    BYTE PTR [r14+rcx*1],0x20
  41b70b:	je     41b62c <__flatcc_fb_create_make_path_n@@Base+0x20c>
  41b711:	jmp    41b635 <__flatcc_fb_create_make_path_n@@Base+0x215>
  41b716:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b720 <__flatcc_fb_create_make_path@@Base>:
  41b720:	push   rbx
  41b721:	mov    rbx,rdi
  41b724:	call   4060d0 <strlen@plt>
  41b729:	mov    rdi,rbx
  41b72c:	mov    rsi,rax
  41b72f:	pop    rbx
  41b730:	jmp    41b420 <__flatcc_fb_create_make_path_n@@Base>
  41b735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b73f:	nop

000000000041b740 <__flatcc_fb_find_basename@@Base>:
  41b740:	lea    rax,[rdi+rsi*1]
  41b744:	add    rax,0x1
  41b748:	nop    DWORD PTR [rax+rax*1+0x0]
  41b750:	test   rsi,rsi
  41b753:	je     41b76f <__flatcc_fb_find_basename@@Base+0x2f>
  41b755:	movzx  ecx,BYTE PTR [rax-0x2]
  41b759:	add    rax,0xffffffffffffffff
  41b75d:	cmp    cl,0x5c
  41b760:	je     41b76b <__flatcc_fb_find_basename@@Base+0x2b>
  41b762:	add    rsi,0xffffffffffffffff
  41b766:	cmp    cl,0x2f
  41b769:	jne    41b750 <__flatcc_fb_find_basename@@Base+0x10>
  41b76b:	sub    rax,rdi
  41b76e:	ret    
  41b76f:	mov    rax,rdi
  41b772:	sub    rax,rdi
  41b775:	ret    
  41b776:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b780 <__flatcc_fb_create_basename@@Base>:
  41b780:	push   r15
  41b782:	push   r14
  41b784:	push   r12
  41b786:	push   rbx
  41b787:	push   rax
  41b788:	mov    r15,rdx
  41b78b:	mov    r14,rdi
  41b78e:	lea    rbx,[rdi+rsi*1]
  41b792:	add    rbx,0x1
  41b796:	mov    rax,rsi
  41b799:	nop    DWORD PTR [rax+0x0]
  41b7a0:	test   rax,rax
  41b7a3:	je     41b7bd <__flatcc_fb_create_basename@@Base+0x3d>
  41b7a5:	movzx  ecx,BYTE PTR [rbx-0x2]
  41b7a9:	add    rbx,0xffffffffffffffff
  41b7ad:	cmp    cl,0x5c
  41b7b0:	je     41b7c0 <__flatcc_fb_create_basename@@Base+0x40>
  41b7b2:	add    rax,0xffffffffffffffff
  41b7b6:	cmp    cl,0x2f
  41b7b9:	jne    41b7a0 <__flatcc_fb_create_basename@@Base+0x20>
  41b7bb:	jmp    41b7c0 <__flatcc_fb_create_basename@@Base+0x40>
  41b7bd:	mov    rbx,r14
  41b7c0:	sub    r14,rbx
  41b7c3:	add    r14,rsi
  41b7c6:	test   r15,r15
  41b7c9:	je     41b82b <__flatcc_fb_create_basename@@Base+0xab>
  41b7cb:	mov    rdi,r15
  41b7ce:	call   4060d0 <strlen@plt>
  41b7d3:	mov    r12,rax
  41b7d6:	cmp    r12,r14
  41b7d9:	jae    41b7f8 <__flatcc_fb_create_basename@@Base+0x78>
  41b7db:	lea    rdi,[rbx+r14*1]
  41b7df:	sub    rdi,r12
  41b7e2:	mov    rsi,r15
  41b7e5:	mov    rdx,r12
  41b7e8:	call   406060 <strncmp@plt>
  41b7ed:	xor    ecx,ecx
  41b7ef:	test   eax,eax
  41b7f1:	cmove  rcx,r12
  41b7f5:	sub    r14,rcx
  41b7f8:	lea    rdi,[r14+0x1]
  41b7fc:	call   4061a0 <malloc@plt>
  41b801:	mov    r15,rax
  41b804:	test   rax,rax
  41b807:	je     41b81c <__flatcc_fb_create_basename@@Base+0x9c>
  41b809:	mov    rdi,r15
  41b80c:	mov    rsi,rbx
  41b80f:	mov    rdx,r14
  41b812:	call   406190 <memcpy@plt>
  41b817:	mov    BYTE PTR [r15+r14*1],0x0
  41b81c:	mov    rax,r15
  41b81f:	add    rsp,0x8
  41b823:	pop    rbx
  41b824:	pop    r12
  41b826:	pop    r14
  41b828:	pop    r15
  41b82a:	ret    
  41b82b:	xor    r12d,r12d
  41b82e:	cmp    r12,r14
  41b831:	jb     41b7db <__flatcc_fb_create_basename@@Base+0x5b>
  41b833:	jmp    41b7f8 <__flatcc_fb_create_basename@@Base+0x78>
  41b835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b83f:	nop

000000000041b840 <__flatcc_fb_read_file@@Base>:
  41b840:	push   r15
  41b842:	push   r14
  41b844:	push   r13
  41b846:	push   r12
  41b848:	push   rbx
  41b849:	sub    rsp,0x10
  41b84d:	mov    rbx,rsi
  41b850:	test   rdx,rdx
  41b853:	lea    r12,[rsp+0x8]
  41b858:	cmovne r12,rdx
  41b85c:	lea    rsi,[rip+0x2aed5]        # 446738 <fb_schema_table_deleted@@Base+0x8>
  41b863:	call   4061d0 <fopen@plt>
  41b868:	test   rax,rax
  41b86b:	je     41b904 <__flatcc_fb_read_file@@Base+0xc4>
  41b871:	mov    r15,rax
  41b874:	xor    esi,esi
  41b876:	mov    edx,0x2
  41b87b:	mov    rdi,rax
  41b87e:	call   4061b0 <fseek@plt>
  41b883:	mov    rdi,r15
  41b886:	call   406180 <ftell@plt>
  41b88b:	mov    r14,rax
  41b88e:	mov    QWORD PTR [r12],rax
  41b892:	test   rbx,rbx
  41b895:	je     41b89c <__flatcc_fb_read_file@@Base+0x5c>
  41b897:	cmp    r14,rbx
  41b89a:	ja     41b8fa <__flatcc_fb_read_file@@Base+0xba>
  41b89c:	mov    rdi,r15
  41b89f:	call   4060e0 <rewind@plt>
  41b8a4:	test   r14,r14
  41b8a7:	mov    edi,0x1
  41b8ac:	cmovne rdi,r14
  41b8b0:	call   4061a0 <malloc@plt>
  41b8b5:	test   rax,rax
  41b8b8:	je     41b8fa <__flatcc_fb_read_file@@Base+0xba>
  41b8ba:	mov    r13,rax
  41b8bd:	xor    ecx,ecx
  41b8bf:	nop
  41b8c0:	mov    rbx,rcx
  41b8c3:	lea    rdi,[rcx+r13*1]
  41b8c7:	mov    rdx,r14
  41b8ca:	sub    rdx,rcx
  41b8cd:	mov    esi,0x1
  41b8d2:	mov    rcx,r15
  41b8d5:	call   4060b0 <fread_unlocked@plt>
  41b8da:	lea    rcx,[rax+rbx*1]
  41b8de:	test   rax,rax
  41b8e1:	jne    41b8c0 <__flatcc_fb_read_file@@Base+0x80>
  41b8e3:	mov    rdi,r15
  41b8e6:	call   4060c0 <fclose@plt>
  41b8eb:	cmp    r14,rbx
  41b8ee:	je     41b90a <__flatcc_fb_read_file@@Base+0xca>
  41b8f0:	mov    rdi,r13
  41b8f3:	call   406040 <free@plt>
  41b8f8:	jmp    41b907 <__flatcc_fb_read_file@@Base+0xc7>
  41b8fa:	mov    rdi,r15
  41b8fd:	call   4060c0 <fclose@plt>
  41b902:	jmp    41b907 <__flatcc_fb_read_file@@Base+0xc7>
  41b904:	xor    r14d,r14d
  41b907:	xor    r13d,r13d
  41b90a:	mov    QWORD PTR [r12],r14
  41b90e:	mov    rax,r13
  41b911:	add    rsp,0x10
  41b915:	pop    rbx
  41b916:	pop    r12
  41b918:	pop    r13
  41b91a:	pop    r14
  41b91c:	pop    r15
  41b91e:	ret    
  41b91f:	nop

000000000041b920 <__flatcc_fb_default_error_out@@Base>:
  41b920:	mov    rax,rsi
  41b923:	movsxd rdx,edx
  41b926:	mov    rcx,QWORD PTR [rip+0x356cb]        # 450ff8 <stderr@GLIBC_2.2.5>
  41b92d:	mov    rcx,QWORD PTR [rcx]
  41b930:	mov    esi,0x1
  41b935:	mov    rdi,rax
  41b938:	jmp    406210 <fwrite@plt>
  41b93d:	nop    DWORD PTR [rax]

000000000041b940 <__flatcc_fb_print_error@@Base>:
  41b940:	push   rbp
  41b941:	push   rbx
  41b942:	sub    rsp,0x198
  41b949:	mov    rbp,rsi
  41b94c:	mov    rbx,rdi
  41b94f:	test   al,al
  41b951:	je     41b992 <__flatcc_fb_print_error@@Base+0x52>
  41b953:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41b959:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  41b95f:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41b965:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  41b96e:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41b977:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41b980:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  41b989:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41b992:	mov    QWORD PTR [rsp+0x48],r9
  41b997:	mov    QWORD PTR [rsp+0x40],r8
  41b99c:	mov    QWORD PTR [rsp+0x38],rcx
  41b9a1:	mov    QWORD PTR [rsp+0x30],rdx
  41b9a6:	lea    rax,[rsp+0x20]
  41b9ab:	mov    QWORD PTR [rsp+0x10],rax
  41b9b0:	lea    rax,[rsp+0x1b0]
  41b9b8:	mov    QWORD PTR [rsp+0x8],rax
  41b9bd:	movabs rax,0x3000000010
  41b9c7:	mov    QWORD PTR [rsp],rax
  41b9cb:	lea    rdi,[rsp+0xd0]
  41b9d3:	mov    rcx,rsp
  41b9d6:	mov    esi,0xc8
  41b9db:	mov    rdx,rbp
  41b9de:	call   4060a0 <vsnprintf@plt>
  41b9e3:	mov    ebp,eax
  41b9e5:	cmp    eax,0xc8
  41b9ea:	jl     41ba04 <__flatcc_fb_print_error@@Base+0xc4>
  41b9ec:	mov    BYTE PTR [rsp+0x197],0x0
  41b9f4:	mov    DWORD PTR [rsp+0x193],0xa2e2e2e
  41b9ff:	mov    ebp,0xc7
  41ba04:	mov    rdi,QWORD PTR [rbx+0x18]
  41ba08:	lea    rsi,[rsp+0xd0]
  41ba10:	mov    edx,ebp
  41ba12:	call   QWORD PTR [rbx+0x10]
  41ba15:	mov    eax,ebp
  41ba17:	add    rsp,0x198
  41ba1e:	pop    rbx
  41ba1f:	pop    rbp
  41ba20:	ret    
  41ba21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ba30 <__flatcc_error_find_file_of_token@@Base>:
  41ba30:	lea    rax,[rip+0x13b08]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ba37:	test   rdi,rdi
  41ba3a:	jne    41ba48 <__flatcc_error_find_file_of_token@@Base+0x18>
  41ba3c:	ret    
  41ba3d:	nop    DWORD PTR [rax]
  41ba40:	mov    rdi,QWORD PTR [rdi]
  41ba43:	test   rdi,rdi
  41ba46:	je     41ba3c <__flatcc_error_find_file_of_token@@Base+0xc>
  41ba48:	cmp    QWORD PTR [rdi+0x28],rsi
  41ba4c:	ja     41ba40 <__flatcc_error_find_file_of_token@@Base+0x10>
  41ba4e:	cmp    QWORD PTR [rdi+0x30],rsi
  41ba52:	jbe    41ba40 <__flatcc_error_find_file_of_token@@Base+0x10>
  41ba54:	mov    rax,QWORD PTR [rdi+0x318]
  41ba5b:	ret    
  41ba5c:	nop    DWORD PTR [rax+0x0]

000000000041ba60 <__flatcc_error_report@@Base>:
  41ba60:	push   r14
  41ba62:	push   rbx
  41ba63:	push   rax
  41ba64:	mov    eax,r9d
  41ba67:	mov    r11,r8
  41ba6a:	mov    rbx,rcx
  41ba6d:	mov    r10,rdx
  41ba70:	mov    r14,rdi
  41ba73:	test   rsi,rsi
  41ba76:	je     41ba83 <__flatcc_error_report@@Base+0x23>
  41ba78:	test   r11,r11
  41ba7b:	jne    41ba83 <__flatcc_error_report@@Base+0x23>
  41ba7d:	mov    r11,QWORD PTR [rsi]
  41ba80:	mov    eax,DWORD PTR [rsi+0x8]
  41ba83:	test   r10,r10
  41ba86:	lea    rdx,[rip+0x13ab2]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ba8d:	cmove  r10,rdx
  41ba91:	xor    r9d,r9d
  41ba94:	test   r11,r11
  41ba97:	cmove  r11,rdx
  41ba9b:	cmovne r9d,eax
  41ba9f:	test   rsi,rsi
  41baa2:	je     41badd <__flatcc_error_report@@Base+0x7d>
  41baa4:	test   rbx,rbx
  41baa7:	jne    41badd <__flatcc_error_report@@Base+0x7d>
  41baa9:	test   r14,r14
  41baac:	je     41bb8d <__flatcc_error_report@@Base+0x12d>
  41bab2:	mov    rax,r14
  41bab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41babf:	nop
  41bac0:	cmp    QWORD PTR [rax+0x28],rsi
  41bac4:	ja     41bad0 <__flatcc_error_report@@Base+0x70>
  41bac6:	cmp    QWORD PTR [rax+0x30],rsi
  41baca:	ja     41bb86 <__flatcc_error_report@@Base+0x126>
  41bad0:	mov    rax,QWORD PTR [rax]
  41bad3:	test   rax,rax
  41bad6:	jne    41bac0 <__flatcc_error_report@@Base+0x60>
  41bad8:	jmp    41bb8d <__flatcc_error_report@@Base+0x12d>
  41badd:	test   rsi,rsi
  41bae0:	je     41bb20 <__flatcc_error_report@@Base+0xc0>
  41bae2:	test   rbx,rbx
  41bae5:	je     41bb20 <__flatcc_error_report@@Base+0xc0>
  41bae7:	test   r14,r14
  41baea:	je     41bbb6 <__flatcc_error_report@@Base+0x156>
  41baf0:	lea    rax,[rip+0x13a48]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41baf7:	mov    rcx,r14
  41bafa:	nop    WORD PTR [rax+rax*1+0x0]
  41bb00:	cmp    QWORD PTR [rcx+0x28],rsi
  41bb04:	ja     41bb10 <__flatcc_error_report@@Base+0xb0>
  41bb06:	cmp    QWORD PTR [rcx+0x30],rsi
  41bb0a:	ja     41bbc2 <__flatcc_error_report@@Base+0x162>
  41bb10:	mov    rcx,QWORD PTR [rcx]
  41bb13:	test   rcx,rcx
  41bb16:	jne    41bb00 <__flatcc_error_report@@Base+0xa0>
  41bb18:	mov    rdx,rax
  41bb1b:	jmp    41bbc9 <__flatcc_error_report@@Base+0x169>
  41bb20:	or     rsi,rbx
  41bb23:	je     41bb6d <__flatcc_error_report@@Base+0x10d>
  41bb25:	test   rbx,rbx
  41bb28:	je     41bc46 <__flatcc_error_report@@Base+0x1e6>
  41bb2e:	lea    rcx,[rip+0x13a0a]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41bb35:	test   r14,r14
  41bb38:	je     41bc60 <__flatcc_error_report@@Base+0x200>
  41bb3e:	mov    rax,r14
  41bb41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb50:	cmp    QWORD PTR [rax+0x28],rbx
  41bb54:	ja     41bb60 <__flatcc_error_report@@Base+0x100>
  41bb56:	cmp    QWORD PTR [rax+0x30],rbx
  41bb5a:	ja     41bc59 <__flatcc_error_report@@Base+0x1f9>
  41bb60:	mov    rax,QWORD PTR [rax]
  41bb63:	test   rax,rax
  41bb66:	jne    41bb50 <__flatcc_error_report@@Base+0xf0>
  41bb68:	jmp    41bc60 <__flatcc_error_report@@Base+0x200>
  41bb6d:	lea    rsi,[rip+0x2b0ae]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41bb74:	xor    eax,eax
  41bb76:	mov    rdi,r14
  41bb79:	mov    rdx,r10
  41bb7c:	call   41b940 <__flatcc_fb_print_error@@Base>
  41bb81:	jmp    41bc36 <__flatcc_error_report@@Base+0x1d6>
  41bb86:	mov    rdx,QWORD PTR [rax+0x318]
  41bb8d:	mov    rcx,QWORD PTR [rsi+0x10]
  41bb91:	mov    r8,QWORD PTR [rsi+0x18]
  41bb95:	lea    rsi,[rip+0x2b034]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41bb9c:	mov    eax,0x0
  41bba1:	mov    rdi,r14
  41bba4:	push   r10
  41bba6:	push   r11
  41bba8:	call   41b940 <__flatcc_fb_print_error@@Base>
  41bbad:	add    rsp,0x10
  41bbb1:	jmp    41bc36 <__flatcc_error_report@@Base+0x1d6>
  41bbb6:	lea    rdx,[rip+0x13982]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41bbbd:	mov    rax,rdx
  41bbc0:	jmp    41bbed <__flatcc_error_report@@Base+0x18d>
  41bbc2:	mov    rdx,QWORD PTR [rcx+0x318]
  41bbc9:	mov    rcx,r14
  41bbcc:	nop    DWORD PTR [rax+0x0]
  41bbd0:	cmp    QWORD PTR [rcx+0x28],rbx
  41bbd4:	ja     41bbdc <__flatcc_error_report@@Base+0x17c>
  41bbd6:	cmp    QWORD PTR [rcx+0x30],rbx
  41bbda:	ja     41bbe6 <__flatcc_error_report@@Base+0x186>
  41bbdc:	mov    rcx,QWORD PTR [rcx]
  41bbdf:	test   rcx,rcx
  41bbe2:	jne    41bbd0 <__flatcc_error_report@@Base+0x170>
  41bbe4:	jmp    41bbed <__flatcc_error_report@@Base+0x18d>
  41bbe6:	mov    rax,QWORD PTR [rcx+0x318]
  41bbed:	mov    rcx,QWORD PTR [rsi+0x10]
  41bbf1:	mov    r8,QWORD PTR [rsi+0x18]
  41bbf5:	vmovups xmm0,XMMWORD PTR [rbx+0x10]
  41bbfa:	mov    esi,DWORD PTR [rbx+0x8]
  41bbfd:	mov    rdi,QWORD PTR [rbx]
  41bc00:	sub    rsp,0x40
  41bc04:	mov    QWORD PTR [rsp+0x30],rdi
  41bc09:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  41bc0f:	mov    DWORD PTR [rsp+0x28],esi
  41bc13:	mov    QWORD PTR [rsp+0x10],rax
  41bc18:	mov    QWORD PTR [rsp+0x8],r10
  41bc1d:	mov    QWORD PTR [rsp],r11
  41bc21:	lea    rsi,[rip+0x2afc7]        # 446bef <fb_schema_table_deleted@@Base+0x4bf>
  41bc28:	xor    eax,eax
  41bc2a:	mov    rdi,r14
  41bc2d:	call   41b940 <__flatcc_fb_print_error@@Base>
  41bc32:	add    rsp,0x40
  41bc36:	add    DWORD PTR [r14+0xd0],0x1
  41bc3e:	add    rsp,0x8
  41bc42:	pop    rbx
  41bc43:	pop    r14
  41bc45:	ret    
  41bc46:	lea    rsi,[rip+0x2afff]        # 446c4c <fb_schema_table_deleted@@Base+0x51c>
  41bc4d:	xor    eax,eax
  41bc4f:	mov    rdi,r14
  41bc52:	call   41b940 <__flatcc_fb_print_error@@Base>
  41bc57:	jmp    41bc36 <__flatcc_error_report@@Base+0x1d6>
  41bc59:	mov    rcx,QWORD PTR [rax+0x318]
  41bc60:	mov    r8,QWORD PTR [rbx+0x10]
  41bc64:	mov    r9,QWORD PTR [rbx+0x18]
  41bc68:	mov    r11d,DWORD PTR [rbx+0x8]
  41bc6c:	lea    rsi,[rip+0x2afba]        # 446c2d <fb_schema_table_deleted@@Base+0x4fd>
  41bc73:	mov    eax,0x0
  41bc78:	mov    rdi,r14
  41bc7b:	mov    rdx,r10
  41bc7e:	push   QWORD PTR [rbx]
  41bc80:	push   r11
  41bc82:	call   41b940 <__flatcc_fb_print_error@@Base>
  41bc87:	jmp    41bbad <__flatcc_error_report@@Base+0x14d>
  41bc8c:	nop    DWORD PTR [rax+0x0]

000000000041bc90 <error_ref_sym@@Base>:
  41bc90:	push   rbp
  41bc91:	push   r15
  41bc93:	push   r14
  41bc95:	push   r13
  41bc97:	push   r12
  41bc99:	push   rbx
  41bc9a:	sub    rsp,0x48
  41bc9e:	mov    r12,rcx
  41bca1:	mov    r14,rsi
  41bca4:	test   rsi,rsi
  41bca7:	je     41bd17 <error_ref_sym@@Base+0x87>
  41bca9:	mov    QWORD PTR [rsp],rdi
  41bcad:	mov    QWORD PTR [rsp+0x8],rdx
  41bcb2:	mov    ebp,0x32
  41bcb7:	xor    eax,eax
  41bcb9:	mov    r13,r14
  41bcbc:	nop    DWORD PTR [rax+0x0]
  41bcc0:	mov    r15d,ebp
  41bcc3:	mov    rcx,QWORD PTR [r13+0x8]
  41bcc7:	mov    edx,DWORD PTR [rcx+0x8]
  41bcca:	cmp    ebp,edx
  41bccc:	cmovle edx,ebp
  41bccf:	movsxd rbx,eax
  41bcd2:	lea    rdi,[rsp+rbx*1+0x10]
  41bcd7:	mov    rsi,QWORD PTR [rcx]
  41bcda:	movsxd rbp,edx
  41bcdd:	mov    rdx,rbp
  41bce0:	call   406190 <memcpy@plt>
  41bce5:	add    ebx,ebp
  41bce7:	movsxd rax,ebx
  41bcea:	mov    BYTE PTR [rsp+rax*1+0x10],0x2e
  41bcef:	not    ebp
  41bcf1:	add    ebp,r15d
  41bcf4:	add    rax,0x1
  41bcf8:	mov    r13,QWORD PTR [r13+0x0]
  41bcfc:	test   r13,r13
  41bcff:	je     41bd05 <error_ref_sym@@Base+0x75>
  41bd01:	test   ebp,ebp
  41bd03:	jg     41bcc0 <error_ref_sym@@Base+0x30>
  41bd05:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41bd0a:	test   ebp,ebp
  41bd0c:	jle    41bd20 <error_ref_sym@@Base+0x90>
  41bd0e:	mov    eax,ebx
  41bd10:	sar    eax,0x1f
  41bd13:	sub    ebx,eax
  41bd15:	jmp    41bd2d <error_ref_sym@@Base+0x9d>
  41bd17:	mov    BYTE PTR [rsp+0x10],0x0
  41bd1c:	xor    ebx,ebx
  41bd1e:	jmp    41bd36 <error_ref_sym@@Base+0xa6>
  41bd20:	mov    DWORD PTR [rsp+0x3f],0x2e2e2e
  41bd28:	mov    ebx,0x32
  41bd2d:	mov    rdx,QWORD PTR [rsp+0x8]
  41bd32:	mov    rdi,QWORD PTR [rsp]
  41bd36:	mov    rsi,QWORD PTR [r14+0x8]
  41bd3a:	test   r12,r12
  41bd3d:	je     41bd46 <error_ref_sym@@Base+0xb6>
  41bd3f:	mov    rcx,QWORD PTR [r12+0x8]
  41bd44:	jmp    41bd48 <error_ref_sym@@Base+0xb8>
  41bd46:	xor    ecx,ecx
  41bd48:	lea    r8,[rsp+0x10]
  41bd4d:	mov    r9d,ebx
  41bd50:	call   41ba60 <__flatcc_error_report@@Base>
  41bd55:	add    rsp,0x48
  41bd59:	pop    rbx
  41bd5a:	pop    r12
  41bd5c:	pop    r13
  41bd5e:	pop    r14
  41bd60:	pop    r15
  41bd62:	pop    rbp
  41bd63:	ret    
  41bd64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd6e:	xchg   ax,ax

000000000041bd70 <__flatcc_fb_init_parser@@Base>:
  41bd70:	push   rbp
  41bd71:	push   r15
  41bd73:	push   r14
  41bd75:	push   r13
  41bd77:	push   r12
  41bd79:	push   rbx
  41bd7a:	sub    rsp,0x18
  41bd7e:	mov    r15,r9
  41bd81:	mov    rbx,r8
  41bd84:	mov    rbp,rcx
  41bd87:	mov    r12,rdx
  41bd8a:	mov    r14,rsi
  41bd8d:	mov    r13,rdi
  41bd90:	xor    esi,esi
  41bd92:	mov    edx,0x358
  41bd97:	call   406100 <memset@plt>
  41bd9c:	test   rbp,rbp
  41bd9f:	je     41bdab <__flatcc_fb_init_parser@@Base+0x3b>
  41bda1:	mov    QWORD PTR [r13+0x10],rbp
  41bda5:	mov    QWORD PTR [r13+0x18],rbx
  41bda9:	jmp    41bdb6 <__flatcc_fb_init_parser@@Base+0x46>
  41bdab:	lea    rax,[rip+0xfffffffffffffb6e]        # 41b920 <__flatcc_fb_default_error_out@@Base>
  41bdb2:	mov    QWORD PTR [r13+0x10],rax
  41bdb6:	lea    rdi,[r13+0xe8]
  41bdbd:	test   r14,r14
  41bdc0:	je     41bdd1 <__flatcc_fb_init_parser@@Base+0x61>
  41bdc2:	mov    edx,0x110
  41bdc7:	mov    rsi,r14
  41bdca:	call   406190 <memcpy@plt>
  41bdcf:	jmp    41bdd6 <__flatcc_fb_init_parser@@Base+0x66>
  41bdd1:	call   406470 <flatcc_init_options@@Base>
  41bdd6:	lea    rax,[r13+0x268]
  41bddd:	test   r15,r15
  41bde0:	cmovne rax,r15
  41bde4:	mov    QWORD PTR [r13+0x260],rax
  41bdeb:	mov    eax,DWORD PTR [r13+0x12c]
  41bdf2:	cmp    eax,0x8
  41bdf5:	ja     41bfef <__flatcc_fb_init_parser@@Base+0x27f>
  41bdfb:	mov    ecx,0x114
  41be00:	bt     ecx,eax
  41be03:	jae    41bfef <__flatcc_fb_init_parser@@Base+0x27f>
  41be09:	mov    eax,DWORD PTR [r13+0x130]
  41be10:	cmp    eax,0x8
  41be13:	ja     41bfff <__flatcc_fb_init_parser@@Base+0x28f>
  41be19:	mov    ecx,0x114
  41be1e:	bt     ecx,eax
  41be21:	jae    41bfff <__flatcc_fb_init_parser@@Base+0x28f>
  41be27:	test   r12,r12
  41be2a:	lea    r15,[rip+0x2aeae]        # 446cdf <fb_schema_table_deleted@@Base+0x5af>
  41be31:	cmovne r15,r12
  41be35:	mov    rdi,r15
  41be38:	call   4060d0 <strlen@plt>
  41be3d:	mov    rbx,rax
  41be40:	mov    rdx,QWORD PTR [r14+0x68]
  41be44:	mov    rdi,r15
  41be47:	mov    rsi,rax
  41be4a:	call   41b780 <__flatcc_fb_create_basename@@Base>
  41be4f:	mov    QWORD PTR [r13+0x308],rax
  41be56:	test   rax,rax
  41be59:	je     41c037 <__flatcc_fb_init_parser@@Base+0x2c7>
  41be5f:	mov    rbp,rax
  41be62:	mov    QWORD PTR [rsp+0x8],rbx
  41be67:	mov    QWORD PTR [rsp+0x10],r14
  41be6c:	mov    rdi,rax
  41be6f:	call   4060d0 <strlen@plt>
  41be74:	mov    rbx,rax
  41be77:	mov    rdi,rbp
  41be7a:	mov    rsi,rax
  41be7d:	call   41b0a0 <__flatcc_fb_copy_path_n@@Base>
  41be82:	test   rax,rax
  41be85:	je     41c037 <__flatcc_fb_init_parser@@Base+0x2c7>
  41be8b:	mov    rbp,rax
  41be8e:	test   rbx,rbx
  41be91:	je     41bec6 <__flatcc_fb_init_parser@@Base+0x156>
  41be93:	xor    r12d,r12d
  41be96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bea0:	movsx  r14,BYTE PTR [rbp+r12*1+0x0]
  41bea6:	test   r14,r14
  41bea9:	je     41bec6 <__flatcc_fb_init_parser@@Base+0x156>
  41beab:	call   406030 <__ctype_toupper_loc@plt>
  41beb0:	mov    rax,QWORD PTR [rax]
  41beb3:	movzx  eax,BYTE PTR [rax+r14*4]
  41beb8:	mov    BYTE PTR [rbp+r12*1+0x0],al
  41bebd:	add    r12,0x1
  41bec1:	cmp    r12,rbx
  41bec4:	jb     41bea0 <__flatcc_fb_init_parser@@Base+0x130>
  41bec6:	mov    QWORD PTR [r13+0x310],rbp
  41becd:	mov    QWORD PTR [r13+0x2f0],rbp
  41bed4:	mov    DWORD PTR [r13+0x2f8],ebx
  41bedb:	lea    rdx,[rip+0x1365d]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41bee2:	mov    rdi,r15
  41bee5:	mov    rsi,QWORD PTR [rsp+0x8]
  41beea:	call   41b780 <__flatcc_fb_create_basename@@Base>
  41beef:	mov    QWORD PTR [r13+0x318],rax
  41bef6:	test   rax,rax
  41bef9:	je     41c037 <__flatcc_fb_init_parser@@Base+0x2c7>
  41beff:	mov    rax,QWORD PTR [rsp+0x10]
  41bf04:	mov    rdi,QWORD PTR [rax+0xe0]
  41bf0b:	test   rdi,rdi
  41bf0e:	je     41bf23 <__flatcc_fb_init_parser@@Base+0x1b3>
  41bf10:	mov    QWORD PTR [r13+0x2d8],rdi
  41bf17:	call   4060d0 <strlen@plt>
  41bf1c:	mov    DWORD PTR [r13+0x2e0],eax
  41bf23:	mov    rdi,QWORD PTR [r13+0x260]
  41bf2a:	xor    r14d,r14d
  41bf2d:	xor    esi,esi
  41bf2f:	xor    edx,edx
  41bf31:	call   41a0d0 <fb_scope_table_find@@Base>
  41bf36:	mov    r15,rax
  41bf39:	test   rax,rax
  41bf3c:	jne    41bfb4 <__flatcc_fb_init_parser@@Base+0x244>
  41bf3e:	mov    r15,QWORD PTR [r13+0x60]
  41bf42:	lea    rax,[r15+0x40]
  41bf46:	cmp    rax,QWORD PTR [r13+0x50]
  41bf4a:	jbe    41bf86 <__flatcc_fb_init_parser@@Base+0x216>
  41bf4c:	mov    edi,0x10000
  41bf51:	mov    esi,0x1
  41bf56:	call   406140 <calloc@plt>
  41bf5b:	test   rax,rax
  41bf5e:	je     41c037 <__flatcc_fb_init_parser@@Base+0x2c7>
  41bf64:	mov    rcx,QWORD PTR [r13+0x58]
  41bf68:	mov    QWORD PTR [rax],rcx
  41bf6b:	mov    QWORD PTR [r13+0x58],rax
  41bf6f:	lea    r15,[rax+0x10]
  41bf73:	mov    QWORD PTR [r13+0x60],r15
  41bf77:	lea    rcx,[rax+0x10000]
  41bf7e:	mov    QWORD PTR [r13+0x50],rcx
  41bf82:	add    rax,0x50
  41bf86:	mov    QWORD PTR [r13+0x60],rax
  41bf8a:	mov    QWORD PTR [r15],0x0
  41bf91:	vmovups xmm0,XMMWORD PTR [r13+0x2d8]
  41bf9a:	vmovups XMMWORD PTR [r15+0x28],xmm0
  41bfa0:	mov    rdi,QWORD PTR [r13+0x260]
  41bfa7:	mov    edx,0x1
  41bfac:	mov    rsi,r15
  41bfaf:	call   41a0b0 <fb_scope_table_insert_item@@Base>
  41bfb4:	mov    QWORD PTR [r13+0x340],r15
  41bfbb:	mov    rdi,QWORD PTR [r13+0x260]
  41bfc2:	xor    esi,esi
  41bfc4:	xor    edx,edx
  41bfc6:	call   41a0d0 <fb_scope_table_find@@Base>
  41bfcb:	cmp    r15,rax
  41bfce:	je     41c025 <__flatcc_fb_init_parser@@Base+0x2b5>
  41bfd0:	lea    rdi,[rip+0x2ad0d]        # 446ce4 <fb_schema_table_deleted@@Base+0x5b4>
  41bfd7:	lea    rsi,[rip+0x2ad59]        # 446d37 <fb_schema_table_deleted@@Base+0x607>
  41bfde:	lea    rcx,[rip+0x2adb2]        # 446d97 <fb_schema_table_deleted@@Base+0x667>
  41bfe5:	mov    edx,0x533
  41bfea:	call   4060f0 <__assert_fail@plt>
  41bfef:	lea    rsi,[rip+0x2ac2c]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41bff6:	lea    rdx,[rip+0x2ac71]        # 446c6e <fb_schema_table_deleted@@Base+0x53e>
  41bffd:	jmp    41c00d <__flatcc_fb_init_parser@@Base+0x29d>
  41bfff:	lea    rsi,[rip+0x2ac1c]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41c006:	lea    rdx,[rip+0x2ac99]        # 446ca6 <fb_schema_table_deleted@@Base+0x576>
  41c00d:	xor    eax,eax
  41c00f:	mov    rdi,r13
  41c012:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c017:	add    DWORD PTR [r13+0xd0],0x1
  41c01f:	mov    r14d,0xffffffff
  41c025:	mov    eax,r14d
  41c028:	add    rsp,0x18
  41c02c:	pop    rbx
  41c02d:	pop    r12
  41c02f:	pop    r13
  41c031:	pop    r14
  41c033:	pop    r15
  41c035:	pop    rbp
  41c036:	ret    
  41c037:	mov    rax,QWORD PTR [rip+0x34fba]        # 450ff8 <stderr@GLIBC_2.2.5>
  41c03e:	mov    rcx,QWORD PTR [rax]
  41c041:	lea    rdi,[rip+0x12fcf]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  41c048:	mov    esi,0x22
  41c04d:	mov    edx,0x1
  41c052:	call   406210 <fwrite@plt>
  41c057:	mov    edi,0x1
  41c05c:	call   406200 <exit@plt>
  41c061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c06b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c070 <__flatcc_fb_parse@@Base>:
  41c070:	push   rbp
  41c071:	push   r15
  41c073:	push   r14
  41c075:	push   r13
  41c077:	push   r12
  41c079:	push   rbx
  41c07a:	sub    rsp,0x78
  41c07e:	mov    r12,rdi
  41c081:	mov    QWORD PTR [rdi+0x70],rsi
  41c085:	mov    QWORD PTR [rdi+0x78],0x1
  41c08d:	mov    QWORD PTR [rdi+0xa0],0x9
  41c098:	lea    rax,[rip+0x2ad6b]        # 446e0a <fb_schema_table_deleted@@Base+0x6da>
  41c09f:	mov    QWORD PTR [rdi+0x80],rax
  41c0a6:	mov    QWORD PTR [rdi+0x88],0x4
  41c0b1:	vxorps xmm0,xmm0,xmm0
  41c0b5:	vmovups XMMWORD PTR [rdi+0x90],xmm0
  41c0bd:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41c0c8:	lea    rax,[rip+0x2c516]        # 4485e5 <fb_schema_table_deleted@@Base+0x1eb5>
  41c0cf:	mov    QWORD PTR [rdi+0xa8],rax
  41c0d6:	mov    QWORD PTR [rdi+0xb0],0x5
  41c0e1:	vmovups XMMWORD PTR [rdi+0xb8],xmm0
  41c0e9:	test   ecx,ecx
  41c0eb:	je     41c0f2 <__flatcc_fb_parse@@Base+0x82>
  41c0ed:	mov    QWORD PTR [r12+0x20],rsi
  41c0f2:	mov    rdi,rsi
  41c0f5:	mov    rsi,rdx
  41c0f8:	mov    rdx,r12
  41c0fb:	call   41e580 <__flatcc_fb_parse@@Base+0x2510>
  41c100:	mov    r13,QWORD PTR [r12+0x28]
  41c105:	mov    rax,QWORD PTR [r12+0x48]
  41c10a:	mov    QWORD PTR [r12+0x30],rax
  41c10f:	mov    QWORD PTR [r12+0x48],r13
  41c114:	mov    rdi,QWORD PTR [r12+0x148]
  41c11c:	call   4061a0 <malloc@plt>
  41c121:	mov    QWORD PTR [r12+0xd8],rax
  41c129:	test   rax,rax
  41c12c:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41c132:	mov    rax,QWORD PTR [r13+0x20]
  41c136:	cmp    rax,0xfffffffffffffc3c
  41c13c:	jne    41c14f <__flatcc_fb_parse@@Base+0xdf>
  41c13e:	mov    rdi,r12
  41c141:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c146:	mov    r13,QWORD PTR [r12+0x48]
  41c14b:	mov    rax,QWORD PTR [r13+0x20]
  41c14f:	lea    rcx,[r12+0x48]
  41c154:	mov    QWORD PTR [rsp+0x10],rcx
  41c159:	cmp    rax,0xfffffffffffffc35
  41c15f:	jne    41c4ef <__flatcc_fb_parse@@Base+0x47f>
  41c165:	lea    rax,[r12+0xd0]
  41c16d:	mov    QWORD PTR [rsp+0x8],rax
  41c172:	lea    rax,[r12+0x60]
  41c177:	mov    QWORD PTR [rsp+0x20],rax
  41c17c:	lea    rax,[r12+0x50]
  41c181:	mov    QWORD PTR [rsp+0x28],rax
  41c186:	lea    rax,[r12+0x58]
  41c18b:	mov    QWORD PTR [rsp+0x30],rax
  41c190:	lea    rax,[r12+0x40]
  41c195:	mov    QWORD PTR [rsp+0x18],rax
  41c19a:	mov    rbp,r13
  41c19d:	mov    r15,QWORD PTR [rsp+0x10]
  41c1a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1ac:	nop    DWORD PTR [rax+0x0]
  41c1b0:	mov    rdi,r12
  41c1b3:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c1b8:	test   rbp,rbp
  41c1bb:	je     41c4e5 <__flatcc_fb_parse@@Base+0x475>
  41c1c1:	cmp    DWORD PTR [r12+0xf8],0x0
  41c1ca:	je     41c210 <__flatcc_fb_parse@@Base+0x1a0>
  41c1cc:	test   r13,r13
  41c1cf:	je     41c230 <__flatcc_fb_parse@@Base+0x1c0>
  41c1d1:	mov    rax,QWORD PTR [r13+0x0]
  41c1d5:	xor    r9d,r9d
  41c1d8:	lea    rbp,[rip+0x13360]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c1df:	test   rax,rax
  41c1e2:	je     41c1eb <__flatcc_fb_parse@@Base+0x17b>
  41c1e4:	mov    r9d,DWORD PTR [r13+0x8]
  41c1e8:	mov    rbp,rax
  41c1eb:	mov    rax,r12
  41c1ee:	xchg   ax,ax
  41c1f0:	cmp    QWORD PTR [rax+0x28],r13
  41c1f4:	ja     41c1fc <__flatcc_fb_parse@@Base+0x18c>
  41c1f6:	cmp    QWORD PTR [rax+0x30],r13
  41c1fa:	ja     41c24a <__flatcc_fb_parse@@Base+0x1da>
  41c1fc:	mov    rax,QWORD PTR [rax]
  41c1ff:	test   rax,rax
  41c202:	jne    41c1f0 <__flatcc_fb_parse@@Base+0x180>
  41c204:	lea    rdx,[rip+0x13334]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c20b:	jmp    41c251 <__flatcc_fb_parse@@Base+0x1e1>
  41c20d:	nop    DWORD PTR [rax]
  41c210:	mov    rax,QWORD PTR [rsp+0x8]
  41c215:	mov    eax,DWORD PTR [rax]
  41c217:	cmp    eax,0x9
  41c21a:	jle    41c28f <__flatcc_fb_parse@@Base+0x21f>
  41c21c:	jmp    41c4e5 <__flatcc_fb_parse@@Base+0x475>
  41c221:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c22b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c230:	xor    eax,eax
  41c232:	mov    rdi,r12
  41c235:	lea    rsi,[rip+0x2a9e6]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41c23c:	lea    rdx,[rip+0x2ac7b]        # 446ebe <fb_schema_table_deleted@@Base+0x78e>
  41c243:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c248:	jmp    41c27a <__flatcc_fb_parse@@Base+0x20a>
  41c24a:	mov    rdx,QWORD PTR [rax+0x318]
  41c251:	mov    rcx,QWORD PTR [r13+0x10]
  41c255:	mov    r8,QWORD PTR [r13+0x18]
  41c259:	mov    eax,0x0
  41c25e:	mov    rdi,r12
  41c261:	lea    rsi,[rip+0x2a968]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41c268:	lea    rbx,[rip+0x2ac4f]        # 446ebe <fb_schema_table_deleted@@Base+0x78e>
  41c26f:	push   rbx
  41c270:	push   rbp
  41c271:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c276:	add    rsp,0x10
  41c27a:	mov    rcx,QWORD PTR [rsp+0x8]
  41c27f:	mov    eax,DWORD PTR [rcx]
  41c281:	add    eax,0x1
  41c284:	mov    DWORD PTR [rcx],eax
  41c286:	cmp    eax,0x9
  41c289:	jg     41c4e5 <__flatcc_fb_parse@@Base+0x475>
  41c28f:	mov    rax,QWORD PTR [rsp+0x10]
  41c294:	mov    r14,QWORD PTR [rax]
  41c297:	cmp    QWORD PTR [r14+0x20],0x13
  41c29c:	jne    41c2c0 <__flatcc_fb_parse@@Base+0x250>
  41c29e:	mov    rdi,r12
  41c2a1:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c2a6:	test   r14,r14
  41c2a9:	mov    rbx,QWORD PTR [rsp+0x20]
  41c2ae:	jne    41c396 <__flatcc_fb_parse@@Base+0x326>
  41c2b4:	jmp    41c370 <__flatcc_fb_parse@@Base+0x300>
  41c2b9:	nop    DWORD PTR [rax+0x0]
  41c2c0:	test   r14,r14
  41c2c3:	je     41c30d <__flatcc_fb_parse@@Base+0x29d>
  41c2c5:	mov    rax,QWORD PTR [r14]
  41c2c8:	xor    r9d,r9d
  41c2cb:	lea    rbp,[rip+0x1326d]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c2d2:	test   rax,rax
  41c2d5:	je     41c2de <__flatcc_fb_parse@@Base+0x26e>
  41c2d7:	mov    r9d,DWORD PTR [r14+0x8]
  41c2db:	mov    rbp,rax
  41c2de:	mov    rax,r12
  41c2e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2f0:	cmp    QWORD PTR [rax+0x28],r14
  41c2f4:	ja     41c2fc <__flatcc_fb_parse@@Base+0x28c>
  41c2f6:	cmp    QWORD PTR [rax+0x30],r14
  41c2fa:	ja     41c327 <__flatcc_fb_parse@@Base+0x2b7>
  41c2fc:	mov    rax,QWORD PTR [rax]
  41c2ff:	test   rax,rax
  41c302:	jne    41c2f0 <__flatcc_fb_parse@@Base+0x280>
  41c304:	lea    rdx,[rip+0x13234]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c30b:	jmp    41c32e <__flatcc_fb_parse@@Base+0x2be>
  41c30d:	xor    eax,eax
  41c30f:	mov    rdi,r12
  41c312:	lea    rsi,[rip+0x2a909]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41c319:	lea    rdx,[rip+0x2abd6]        # 446ef6 <fb_schema_table_deleted@@Base+0x7c6>
  41c320:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c325:	jmp    41c357 <__flatcc_fb_parse@@Base+0x2e7>
  41c327:	mov    rdx,QWORD PTR [rax+0x318]
  41c32e:	mov    rcx,QWORD PTR [r14+0x10]
  41c332:	mov    r8,QWORD PTR [r14+0x18]
  41c336:	mov    eax,0x0
  41c33b:	mov    rdi,r12
  41c33e:	lea    rsi,[rip+0x2a88b]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41c345:	lea    rbx,[rip+0x2abaa]        # 446ef6 <fb_schema_table_deleted@@Base+0x7c6>
  41c34c:	push   rbx
  41c34d:	push   rbp
  41c34e:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c353:	add    rsp,0x10
  41c357:	mov    rax,QWORD PTR [rsp+0x8]
  41c35c:	add    DWORD PTR [rax],0x1
  41c35f:	mov    rbx,QWORD PTR [rsp+0x20]
  41c364:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c36e:	xchg   ax,ax
  41c370:	mov    rax,QWORD PTR [r15]
  41c373:	mov    rbp,QWORD PTR [rax+0x20]
  41c377:	test   rbp,rbp
  41c37a:	je     41c396 <__flatcc_fb_parse@@Base+0x326>
  41c37c:	mov    rdi,r12
  41c37f:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c384:	cmp    rbp,0x3b
  41c388:	jne    41c370 <__flatcc_fb_parse@@Base+0x300>
  41c38a:	mov    rax,QWORD PTR [rsp+0x18]
  41c38f:	mov    QWORD PTR [rax],0x0
  41c396:	mov    rsi,QWORD PTR [rbx]
  41c399:	lea    rax,[rsi+0x20]
  41c39d:	mov    rcx,QWORD PTR [rsp+0x28]
  41c3a2:	cmp    rax,QWORD PTR [rcx]
  41c3a5:	jbe    41c3e7 <__flatcc_fb_parse@@Base+0x377>
  41c3a7:	mov    edi,0x10000
  41c3ac:	mov    esi,0x1
  41c3b1:	call   406140 <calloc@plt>
  41c3b6:	test   rax,rax
  41c3b9:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41c3bf:	mov    rdx,QWORD PTR [rsp+0x30]
  41c3c4:	mov    rcx,QWORD PTR [rdx]
  41c3c7:	mov    QWORD PTR [rax],rcx
  41c3ca:	mov    QWORD PTR [rdx],rax
  41c3cd:	lea    rsi,[rax+0x10]
  41c3d1:	mov    QWORD PTR [rbx],rsi
  41c3d4:	lea    rcx,[rax+0x10000]
  41c3db:	mov    rdx,QWORD PTR [rsp+0x28]
  41c3e0:	mov    QWORD PTR [rdx],rcx
  41c3e3:	add    rax,0x30
  41c3e7:	mov    QWORD PTR [r12+0x60],rax
  41c3ec:	mov    rax,QWORD PTR [r12+0x1f8]
  41c3f4:	mov    QWORD PTR [rsi],rax
  41c3f7:	mov    QWORD PTR [r12+0x1f8],rsi
  41c3ff:	add    rsi,0x8
  41c403:	mov    rdi,r12
  41c406:	call   4225a0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c40b:	mov    rax,QWORD PTR [r12+0x48]
  41c410:	cmp    QWORD PTR [rax+0x20],0x3b
  41c415:	jne    41c430 <__flatcc_fb_parse@@Base+0x3c0>
  41c417:	mov    rdi,r12
  41c41a:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c41f:	jmp    41c4cf <__flatcc_fb_parse@@Base+0x45f>
  41c424:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c42e:	xchg   ax,ax
  41c430:	test   rax,rax
  41c433:	je     41c47d <__flatcc_fb_parse@@Base+0x40d>
  41c435:	mov    rcx,QWORD PTR [rax]
  41c438:	xor    r9d,r9d
  41c43b:	lea    rbp,[rip+0x130fd]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c442:	test   rcx,rcx
  41c445:	je     41c44e <__flatcc_fb_parse@@Base+0x3de>
  41c447:	mov    r9d,DWORD PTR [rax+0x8]
  41c44b:	mov    rbp,rcx
  41c44e:	mov    rcx,r12
  41c451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c45b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c460:	cmp    QWORD PTR [rcx+0x28],rax
  41c464:	ja     41c46c <__flatcc_fb_parse@@Base+0x3fc>
  41c466:	cmp    QWORD PTR [rcx+0x30],rax
  41c46a:	ja     41c497 <__flatcc_fb_parse@@Base+0x427>
  41c46c:	mov    rcx,QWORD PTR [rcx]
  41c46f:	test   rcx,rcx
  41c472:	jne    41c460 <__flatcc_fb_parse@@Base+0x3f0>
  41c474:	lea    rdx,[rip+0x130c4]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c47b:	jmp    41c49e <__flatcc_fb_parse@@Base+0x42e>
  41c47d:	xor    eax,eax
  41c47f:	mov    rdi,r12
  41c482:	lea    rsi,[rip+0x2a799]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41c489:	lea    rdx,[rip+0x2aa94]        # 446f24 <fb_schema_table_deleted@@Base+0x7f4>
  41c490:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c495:	jmp    41c4c7 <__flatcc_fb_parse@@Base+0x457>
  41c497:	mov    rdx,QWORD PTR [rcx+0x318]
  41c49e:	mov    rcx,QWORD PTR [rax+0x10]
  41c4a2:	mov    r8,QWORD PTR [rax+0x18]
  41c4a6:	mov    eax,0x0
  41c4ab:	mov    rdi,r12
  41c4ae:	lea    rsi,[rip+0x2a71b]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41c4b5:	lea    rbx,[rip+0x2aa68]        # 446f24 <fb_schema_table_deleted@@Base+0x7f4>
  41c4bc:	push   rbx
  41c4bd:	push   rbp
  41c4be:	call   41b940 <__flatcc_fb_print_error@@Base>
  41c4c3:	add    rsp,0x10
  41c4c7:	mov    rax,QWORD PTR [rsp+0x8]
  41c4cc:	add    DWORD PTR [rax],0x1
  41c4cf:	mov    rax,QWORD PTR [rsp+0x10]
  41c4d4:	mov    rbp,QWORD PTR [rax]
  41c4d7:	cmp    QWORD PTR [rbp+0x20],0xfffffffffffffc35
  41c4df:	je     41c1b0 <__flatcc_fb_parse@@Base+0x140>
  41c4e5:	mov    rax,QWORD PTR [rsp+0x10]
  41c4ea:	mov    r13,QWORD PTR [rax]
  41c4ed:	jmp    41c524 <__flatcc_fb_parse@@Base+0x4b4>
  41c4ef:	lea    rax,[r12+0xd0]
  41c4f7:	mov    QWORD PTR [rsp+0x8],rax
  41c4fc:	lea    rax,[r12+0x60]
  41c501:	mov    QWORD PTR [rsp+0x20],rax
  41c506:	lea    rax,[r12+0x50]
  41c50b:	mov    QWORD PTR [rsp+0x28],rax
  41c510:	lea    rax,[r12+0x40]
  41c515:	mov    QWORD PTR [rsp+0x18],rax
  41c51a:	lea    rax,[r12+0x58]
  41c51f:	mov    QWORD PTR [rsp+0x30],rax
  41c524:	mov    rax,r12
  41c527:	sub    rax,0xffffffffffffff80
  41c52b:	mov    QWORD PTR [rsp+0x50],rax
  41c530:	lea    rax,[r12+0x220]
  41c538:	mov    QWORD PTR [rsp+0x68],rax
  41c53d:	lea    rax,[r12+0x208]
  41c545:	mov    QWORD PTR [rsp+0x60],rax
  41c54a:	lea    rax,[r12+0x248]
  41c552:	mov    QWORD PTR [rsp+0x70],rax
  41c557:	lea    rax,[r12+0x2d8]
  41c55f:	mov    QWORD PTR [rsp+0x58],rax
  41c564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c56e:	xchg   ax,ax
  41c570:	mov    rcx,QWORD PTR [r13+0x20]
  41c574:	test   rcx,rcx
  41c577:	je     41e425 <__flatcc_fb_parse@@Base+0x23b5>
  41c57d:	mov    rax,QWORD PTR [rsp+0x8]
  41c582:	mov    eax,DWORD PTR [rax]
  41c584:	cmp    eax,0x9
  41c587:	jg     41e545 <__flatcc_fb_parse@@Base+0x24d5>
  41c58d:	mov    r14,r13
  41c590:	cmp    rcx,0x4
  41c594:	jg     41c680 <__flatcc_fb_parse@@Base+0x610>
  41c59a:	add    rcx,0x3e5
  41c5a1:	cmp    rcx,0x20
  41c5a5:	ja     41ce44 <__flatcc_fb_parse@@Base+0xdd4>
  41c5ab:	lea    rax,[rip+0x2a18e]        # 446740 <fb_schema_table_deleted@@Base+0x10>
  41c5b2:	mov    rdx,rax
  41c5b5:	movsxd rax,DWORD PTR [rax+rcx*4]
  41c5b9:	add    rax,rdx
  41c5bc:	jmp    rax
  41c5be:	mov    rdi,r12
  41c5c1:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c5c6:	mov    r13,QWORD PTR [r12+0x60]
  41c5cb:	lea    rax,[r13+0xd0]
  41c5d2:	cmp    rax,QWORD PTR [r12+0x50]
  41c5d7:	jbe    41c620 <__flatcc_fb_parse@@Base+0x5b0>
  41c5d9:	mov    edi,0x10000
  41c5de:	mov    esi,0x1
  41c5e3:	call   406140 <calloc@plt>
  41c5e8:	test   rax,rax
  41c5eb:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41c5f1:	mov    rdx,QWORD PTR [rsp+0x30]
  41c5f6:	mov    rcx,QWORD PTR [rdx]
  41c5f9:	mov    QWORD PTR [rax],rcx
  41c5fc:	mov    QWORD PTR [rdx],rax
  41c5ff:	lea    r13,[rax+0x10]
  41c603:	mov    rcx,QWORD PTR [rsp+0x20]
  41c608:	mov    QWORD PTR [rcx],r13
  41c60b:	lea    rcx,[rax+0x10000]
  41c612:	mov    rdx,QWORD PTR [rsp+0x28]
  41c617:	mov    QWORD PTR [rdx],rcx
  41c61a:	add    rax,0xe0
  41c620:	mov    QWORD PTR [r12+0x60],rax
  41c625:	mov    rax,QWORD PTR [r12+0x238]
  41c62d:	mov    QWORD PTR [r13+0x0],rax
  41c631:	mov    WORD PTR [r13+0x10],0x3
  41c638:	mov    QWORD PTR [r12+0x238],r13
  41c640:	mov    rax,QWORD PTR [r12+0x340]
  41c648:	mov    QWORD PTR [r13+0x18],rax
  41c64c:	mov    rax,QWORD PTR [r12+0x40]
  41c651:	test   rax,rax
  41c654:	je     41cf84 <__flatcc_fb_parse@@Base+0xf14>
  41c65a:	xor    edx,edx
  41c65c:	nop    DWORD PTR [rax+0x0]
  41c660:	mov    rcx,rax
  41c663:	mov    rax,QWORD PTR [rax]
  41c666:	mov    QWORD PTR [rcx],rdx
  41c669:	mov    rdx,rcx
  41c66c:	test   rax,rax
  41c66f:	jne    41c660 <__flatcc_fb_parse@@Base+0x5f0>
  41c671:	jmp    41cf86 <__flatcc_fb_parse@@Base+0xf16>
  41c676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c680:	cmp    rcx,0x1a
  41c684:	jg     41c6d4 <__flatcc_fb_parse@@Base+0x664>
  41c686:	cmp    rcx,0x5
  41c68a:	je     41cde4 <__flatcc_fb_parse@@Base+0xd74>
  41c690:	cmp    rcx,0x7
  41c694:	jne    41ce44 <__flatcc_fb_parse@@Base+0xdd4>
  41c69a:	test   r14,r14
  41c69d:	je     41d4dc <__flatcc_fb_parse@@Base+0x146c>
  41c6a3:	mov    rax,r12
  41c6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c6b0:	cmp    QWORD PTR [rax+0x28],r14
  41c6b4:	ja     41c6c0 <__flatcc_fb_parse@@Base+0x650>
  41c6b6:	cmp    QWORD PTR [rax+0x30],r14
  41c6ba:	ja     41d59b <__flatcc_fb_parse@@Base+0x152b>
  41c6c0:	mov    rax,QWORD PTR [rax]
  41c6c3:	test   rax,rax
  41c6c6:	jne    41c6b0 <__flatcc_fb_parse@@Base+0x640>
  41c6c8:	lea    rdx,[rip+0x12e70]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c6cf:	jmp    41d5a2 <__flatcc_fb_parse@@Base+0x1532>
  41c6d4:	cmp    rcx,0x1b
  41c6d8:	je     41ce14 <__flatcc_fb_parse@@Base+0xda4>
  41c6de:	cmp    rcx,0x7b
  41c6e2:	jne    41ce44 <__flatcc_fb_parse@@Base+0xdd4>
  41c6e8:	test   r14,r14
  41c6eb:	je     41d4f4 <__flatcc_fb_parse@@Base+0x1484>
  41c6f1:	mov    rax,QWORD PTR [r14]
  41c6f4:	xor    r9d,r9d
  41c6f7:	lea    rbp,[rip+0x12e41]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c6fe:	mov    r10,rbp
  41c701:	test   rax,rax
  41c704:	je     41c70d <__flatcc_fb_parse@@Base+0x69d>
  41c706:	mov    r9d,DWORD PTR [r14+0x8]
  41c70a:	mov    r10,rax
  41c70d:	mov    rax,r12
  41c710:	cmp    QWORD PTR [rax+0x28],r14
  41c714:	ja     41c720 <__flatcc_fb_parse@@Base+0x6b0>
  41c716:	cmp    QWORD PTR [rax+0x30],r14
  41c71a:	ja     41d5c8 <__flatcc_fb_parse@@Base+0x1558>
  41c720:	mov    rax,QWORD PTR [rax]
  41c723:	test   rax,rax
  41c726:	jne    41c710 <__flatcc_fb_parse@@Base+0x6a0>
  41c728:	lea    rdx,[rip+0x12e10]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c72f:	jmp    41d5cf <__flatcc_fb_parse@@Base+0x155f>
  41c734:	mov    rdi,r12
  41c737:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c73c:	cmp    WORD PTR [r12+0x218],0x0
  41c746:	je     41c76e <__flatcc_fb_parse@@Base+0x6fe>
  41c748:	mov    rsi,QWORD PTR [r12+0x48]
  41c74d:	mov    r8,QWORD PTR [r12+0x208]
  41c755:	mov    r9d,DWORD PTR [r12+0x210]
  41c75d:	xor    ecx,ecx
  41c75f:	mov    rdi,r12
  41c762:	lea    rdx,[rip+0x2aa7d]        # 4471e6 <fb_schema_table_deleted@@Base+0xab6>
  41c769:	call   41ba60 <__flatcc_error_report@@Base>
  41c76e:	mov    rax,QWORD PTR [rsp+0x10]
  41c773:	mov    rbp,QWORD PTR [rax]
  41c776:	cmp    QWORD PTR [rbp+0x20],0x13
  41c77b:	jne    41ce94 <__flatcc_fb_parse@@Base+0xe24>
  41c781:	mov    rdi,r12
  41c784:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c789:	test   rbp,rbp
  41c78c:	je     41d9c0 <__flatcc_fb_parse@@Base+0x1950>
  41c792:	mov    rbp,QWORD PTR [r12+0x48]
  41c797:	mov    rdi,r12
  41c79a:	mov    rsi,QWORD PTR [rsp+0x60]
  41c79f:	call   4225a0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c7a4:	cmp    QWORD PTR [r12+0x208],0x0
  41c7ad:	je     41dd8d <__flatcc_fb_parse@@Base+0x1d1d>
  41c7b3:	cmp    DWORD PTR [r12+0x210],0x4
  41c7bc:	je     41dd8d <__flatcc_fb_parse@@Base+0x1d1d>
  41c7c2:	mov    WORD PTR [r12+0x218],0x1
  41c7cd:	test   rbp,rbp
  41c7d0:	je     41dce3 <__flatcc_fb_parse@@Base+0x1c73>
  41c7d6:	mov    rax,QWORD PTR [rbp+0x0]
  41c7da:	xor    r9d,r9d
  41c7dd:	lea    r10,[rip+0x12d5b]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c7e4:	test   rax,rax
  41c7e7:	je     41c7f0 <__flatcc_fb_parse@@Base+0x780>
  41c7e9:	mov    r9d,DWORD PTR [rbp+0x8]
  41c7ed:	mov    r10,rax
  41c7f0:	mov    rax,r12
  41c7f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7fd:	nop    DWORD PTR [rax]
  41c800:	cmp    QWORD PTR [rax+0x28],rbp
  41c804:	ja     41c810 <__flatcc_fb_parse@@Base+0x7a0>
  41c806:	cmp    QWORD PTR [rax+0x30],rbp
  41c80a:	ja     41dd54 <__flatcc_fb_parse@@Base+0x1ce4>
  41c810:	mov    rax,QWORD PTR [rax]
  41c813:	test   rax,rax
  41c816:	jne    41c800 <__flatcc_fb_parse@@Base+0x790>
  41c818:	lea    rdx,[rip+0x12d20]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41c81f:	jmp    41dd5b <__flatcc_fb_parse@@Base+0x1ceb>
  41c824:	mov    rdi,r12
  41c827:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c82c:	mov    QWORD PTR [rsp+0x38],0x0
  41c835:	mov    rbp,QWORD PTR [r12+0x48]
  41c83a:	mov    rcx,QWORD PTR [rbp+0x20]
  41c83e:	mov    rax,rbp
  41c841:	cmp    rcx,0x3b
  41c845:	jne    41d696 <__flatcc_fb_parse@@Base+0x1626>
  41c84b:	mov    rdi,r12
  41c84e:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c853:	test   rbp,rbp
  41c856:	je     41d68a <__flatcc_fb_parse@@Base+0x161a>
  41c85c:	mov    QWORD PTR [r12+0x340],0x0
  41c868:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41c86d:	mov    rdi,r12
  41c870:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c875:	mov    rsi,QWORD PTR [r12+0x60]
  41c87a:	lea    rax,[rsi+0xd0]
  41c881:	cmp    rax,QWORD PTR [r12+0x50]
  41c886:	jbe    41c8cf <__flatcc_fb_parse@@Base+0x85f>
  41c888:	mov    edi,0x10000
  41c88d:	mov    esi,0x1
  41c892:	call   406140 <calloc@plt>
  41c897:	test   rax,rax
  41c89a:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41c8a0:	mov    rdx,QWORD PTR [rsp+0x30]
  41c8a5:	mov    rcx,QWORD PTR [rdx]
  41c8a8:	mov    QWORD PTR [rax],rcx
  41c8ab:	mov    QWORD PTR [rdx],rax
  41c8ae:	lea    rsi,[rax+0x10]
  41c8b2:	mov    rcx,QWORD PTR [rsp+0x20]
  41c8b7:	mov    QWORD PTR [rcx],rsi
  41c8ba:	lea    rcx,[rax+0x10000]
  41c8c1:	mov    rdx,QWORD PTR [rsp+0x28]
  41c8c6:	mov    QWORD PTR [rdx],rcx
  41c8c9:	add    rax,0xe0
  41c8cf:	mov    QWORD PTR [r12+0x60],rax
  41c8d4:	mov    rax,QWORD PTR [r12+0x238]
  41c8dc:	mov    QWORD PTR [rsi],rax
  41c8df:	mov    WORD PTR [rsi+0x10],0x2
  41c8e5:	mov    QWORD PTR [r12+0x238],rsi
  41c8ed:	mov    rax,QWORD PTR [r12+0x340]
  41c8f5:	mov    QWORD PTR [rsi+0x18],rax
  41c8f9:	mov    rax,QWORD PTR [r12+0x40]
  41c8fe:	test   rax,rax
  41c901:	je     41d0c4 <__flatcc_fb_parse@@Base+0x1054>
  41c907:	xor    edx,edx
  41c909:	nop    DWORD PTR [rax+0x0]
  41c910:	mov    rcx,rax
  41c913:	mov    rax,QWORD PTR [rax]
  41c916:	mov    QWORD PTR [rcx],rdx
  41c919:	mov    rdx,rcx
  41c91c:	test   rax,rax
  41c91f:	jne    41c910 <__flatcc_fb_parse@@Base+0x8a0>
  41c921:	jmp    41d0c6 <__flatcc_fb_parse@@Base+0x1056>
  41c926:	mov    rdi,r12
  41c929:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c92e:	mov    rsi,QWORD PTR [r12+0x60]
  41c933:	lea    rax,[rsi+0xd0]
  41c93a:	cmp    rax,QWORD PTR [r12+0x50]
  41c93f:	jbe    41c988 <__flatcc_fb_parse@@Base+0x918>
  41c941:	mov    edi,0x10000
  41c946:	mov    esi,0x1
  41c94b:	call   406140 <calloc@plt>
  41c950:	test   rax,rax
  41c953:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41c959:	mov    rdx,QWORD PTR [rsp+0x30]
  41c95e:	mov    rcx,QWORD PTR [rdx]
  41c961:	mov    QWORD PTR [rax],rcx
  41c964:	mov    QWORD PTR [rdx],rax
  41c967:	lea    rsi,[rax+0x10]
  41c96b:	mov    rcx,QWORD PTR [rsp+0x20]
  41c970:	mov    QWORD PTR [rcx],rsi
  41c973:	lea    rcx,[rax+0x10000]
  41c97a:	mov    rdx,QWORD PTR [rsp+0x28]
  41c97f:	mov    QWORD PTR [rdx],rcx
  41c982:	add    rax,0xe0
  41c988:	mov    QWORD PTR [r12+0x60],rax
  41c98d:	mov    rax,QWORD PTR [r12+0x238]
  41c995:	mov    QWORD PTR [rsi],rax
  41c998:	mov    WORD PTR [rsi+0x10],0x0
  41c99e:	mov    QWORD PTR [r12+0x238],rsi
  41c9a6:	mov    rax,QWORD PTR [r12+0x340]
  41c9ae:	mov    QWORD PTR [rsi+0x18],rax
  41c9b2:	mov    rax,QWORD PTR [r12+0x40]
  41c9b7:	test   rax,rax
  41c9ba:	je     41d0dc <__flatcc_fb_parse@@Base+0x106c>
  41c9c0:	xor    edx,edx
  41c9c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9cc:	nop    DWORD PTR [rax+0x0]
  41c9d0:	mov    rcx,rax
  41c9d3:	mov    rax,QWORD PTR [rax]
  41c9d6:	mov    QWORD PTR [rcx],rdx
  41c9d9:	mov    rdx,rcx
  41c9dc:	test   rax,rax
  41c9df:	jne    41c9d0 <__flatcc_fb_parse@@Base+0x960>
  41c9e1:	jmp    41d0de <__flatcc_fb_parse@@Base+0x106e>
  41c9e6:	mov    rdi,r12
  41c9e9:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41c9ee:	mov    rsi,QWORD PTR [r12+0x60]
  41c9f3:	lea    rax,[rsi+0xd0]
  41c9fa:	cmp    rax,QWORD PTR [r12+0x50]
  41c9ff:	jbe    41ca48 <__flatcc_fb_parse@@Base+0x9d8>
  41ca01:	mov    edi,0x10000
  41ca06:	mov    esi,0x1
  41ca0b:	call   406140 <calloc@plt>
  41ca10:	test   rax,rax
  41ca13:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41ca19:	mov    rdx,QWORD PTR [rsp+0x30]
  41ca1e:	mov    rcx,QWORD PTR [rdx]
  41ca21:	mov    QWORD PTR [rax],rcx
  41ca24:	mov    QWORD PTR [rdx],rax
  41ca27:	lea    rsi,[rax+0x10]
  41ca2b:	mov    rcx,QWORD PTR [rsp+0x20]
  41ca30:	mov    QWORD PTR [rcx],rsi
  41ca33:	lea    rcx,[rax+0x10000]
  41ca3a:	mov    rdx,QWORD PTR [rsp+0x28]
  41ca3f:	mov    QWORD PTR [rdx],rcx
  41ca42:	add    rax,0xe0
  41ca48:	mov    QWORD PTR [r12+0x60],rax
  41ca4d:	mov    rax,QWORD PTR [r12+0x238]
  41ca55:	mov    QWORD PTR [rsi],rax
  41ca58:	mov    WORD PTR [rsi+0x10],0x1
  41ca5e:	mov    QWORD PTR [r12+0x238],rsi
  41ca66:	mov    rax,QWORD PTR [r12+0x340]
  41ca6e:	mov    QWORD PTR [rsi+0x18],rax
  41ca72:	mov    rax,QWORD PTR [r12+0x40]
  41ca77:	test   rax,rax
  41ca7a:	je     41d0f4 <__flatcc_fb_parse@@Base+0x1084>
  41ca80:	xor    edx,edx
  41ca82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca8c:	nop    DWORD PTR [rax+0x0]
  41ca90:	mov    rcx,rax
  41ca93:	mov    rax,QWORD PTR [rax]
  41ca96:	mov    QWORD PTR [rcx],rdx
  41ca99:	mov    rdx,rcx
  41ca9c:	test   rax,rax
  41ca9f:	jne    41ca90 <__flatcc_fb_parse@@Base+0xa20>
  41caa1:	jmp    41d0f6 <__flatcc_fb_parse@@Base+0x1086>
  41caa6:	mov    rdi,r12
  41caa9:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41caae:	movzx  eax,WORD PTR [r12+0x230]
  41cab7:	cmp    eax,0x2
  41caba:	jne    41cae2 <__flatcc_fb_parse@@Base+0xa72>
  41cabc:	mov    rsi,QWORD PTR [r12+0x48]
  41cac1:	mov    r8,QWORD PTR [r12+0x220]
  41cac9:	mov    r9d,DWORD PTR [r12+0x228]
  41cad1:	xor    ecx,ecx
  41cad3:	mov    rdi,r12
  41cad6:	lea    rdx,[rip+0x2a6ab]        # 447188 <fb_schema_table_deleted@@Base+0xa58>
  41cadd:	call   41ba60 <__flatcc_error_report@@Base>
  41cae2:	mov    rax,QWORD PTR [rsp+0x10]
  41cae7:	mov    rbp,QWORD PTR [rax]
  41caea:	cmp    QWORD PTR [rbp+0x20],0x13
  41caef:	jne    41cee4 <__flatcc_fb_parse@@Base+0xe74>
  41caf5:	mov    rdi,r12
  41caf8:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cafd:	test   rbp,rbp
  41cb00:	je     41da30 <__flatcc_fb_parse@@Base+0x19c0>
  41cb06:	mov    rdi,r12
  41cb09:	mov    rsi,QWORD PTR [rsp+0x68]
  41cb0e:	call   4225a0 <__flatcc_fb_clear_parser@@Base+0x140>
  41cb13:	mov    rax,QWORD PTR [r12+0x48]
  41cb18:	cmp    QWORD PTR [rax+0x20],0x3b
  41cb1d:	je     41dd9c <__flatcc_fb_parse@@Base+0x1d2c>
  41cb23:	test   rax,rax
  41cb26:	je     41dc28 <__flatcc_fb_parse@@Base+0x1bb8>
  41cb2c:	mov    rcx,QWORD PTR [rax]
  41cb2f:	xor    r9d,r9d
  41cb32:	lea    rbp,[rip+0x12a06]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cb39:	mov    r10,rbp
  41cb3c:	test   rcx,rcx
  41cb3f:	je     41cb48 <__flatcc_fb_parse@@Base+0xad8>
  41cb41:	mov    r9d,DWORD PTR [rax+0x8]
  41cb45:	mov    r10,rcx
  41cb48:	mov    rcx,r12
  41cb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb50:	cmp    QWORD PTR [rcx+0x28],rax
  41cb54:	ja     41cb60 <__flatcc_fb_parse@@Base+0xaf0>
  41cb56:	cmp    QWORD PTR [rcx+0x30],rax
  41cb5a:	ja     41dd00 <__flatcc_fb_parse@@Base+0x1c90>
  41cb60:	mov    rcx,QWORD PTR [rcx]
  41cb63:	test   rcx,rcx
  41cb66:	jne    41cb50 <__flatcc_fb_parse@@Base+0xae0>
  41cb68:	lea    rdx,[rip+0x129d0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cb6f:	jmp    41dd07 <__flatcc_fb_parse@@Base+0x1c97>
  41cb74:	mov    rdi,r12
  41cb77:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cb7c:	mov    r13,QWORD PTR [r12+0x60]
  41cb81:	lea    rax,[r13+0xd0]
  41cb88:	cmp    rax,QWORD PTR [r12+0x50]
  41cb8d:	jbe    41cbd6 <__flatcc_fb_parse@@Base+0xb66>
  41cb8f:	mov    edi,0x10000
  41cb94:	mov    esi,0x1
  41cb99:	call   406140 <calloc@plt>
  41cb9e:	test   rax,rax
  41cba1:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41cba7:	mov    rdx,QWORD PTR [rsp+0x30]
  41cbac:	mov    rcx,QWORD PTR [rdx]
  41cbaf:	mov    QWORD PTR [rax],rcx
  41cbb2:	mov    QWORD PTR [rdx],rax
  41cbb5:	lea    r13,[rax+0x10]
  41cbb9:	mov    rcx,QWORD PTR [rsp+0x20]
  41cbbe:	mov    QWORD PTR [rcx],r13
  41cbc1:	lea    rcx,[rax+0x10000]
  41cbc8:	mov    rdx,QWORD PTR [rsp+0x28]
  41cbcd:	mov    QWORD PTR [rdx],rcx
  41cbd0:	add    rax,0xe0
  41cbd6:	mov    QWORD PTR [r12+0x60],rax
  41cbdb:	mov    rax,QWORD PTR [r12+0x238]
  41cbe3:	mov    QWORD PTR [r13+0x0],rax
  41cbe7:	mov    WORD PTR [r13+0x10],0x4
  41cbee:	mov    QWORD PTR [r12+0x238],r13
  41cbf6:	mov    rax,QWORD PTR [r12+0x340]
  41cbfe:	mov    QWORD PTR [r13+0x18],rax
  41cc02:	mov    rax,QWORD PTR [r12+0x40]
  41cc07:	test   rax,rax
  41cc0a:	je     41d117 <__flatcc_fb_parse@@Base+0x10a7>
  41cc10:	xor    edx,edx
  41cc12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc1c:	nop    DWORD PTR [rax+0x0]
  41cc20:	mov    rcx,rax
  41cc23:	mov    rax,QWORD PTR [rax]
  41cc26:	mov    QWORD PTR [rcx],rdx
  41cc29:	mov    rdx,rcx
  41cc2c:	test   rax,rax
  41cc2f:	jne    41cc20 <__flatcc_fb_parse@@Base+0xbb0>
  41cc31:	jmp    41d119 <__flatcc_fb_parse@@Base+0x10a9>
  41cc36:	mov    rdi,r12
  41cc39:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cc3e:	mov    rbp,QWORD PTR [r12+0x48]
  41cc43:	cmp    QWORD PTR [r12+0x248],0x0
  41cc4c:	je     41d90d <__flatcc_fb_parse@@Base+0x189d>
  41cc52:	test   rbp,rbp
  41cc55:	je     41d554 <__flatcc_fb_parse@@Base+0x14e4>
  41cc5b:	mov    rax,QWORD PTR [rbp+0x0]
  41cc5f:	xor    r9d,r9d
  41cc62:	lea    r10,[rip+0x128d6]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cc69:	test   rax,rax
  41cc6c:	je     41cc75 <__flatcc_fb_parse@@Base+0xc05>
  41cc6e:	mov    r9d,DWORD PTR [rbp+0x8]
  41cc72:	mov    r10,rax
  41cc75:	mov    rax,r12
  41cc78:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc80:	cmp    QWORD PTR [rax+0x28],rbp
  41cc84:	ja     41cc90 <__flatcc_fb_parse@@Base+0xc20>
  41cc86:	cmp    QWORD PTR [rax+0x30],rbp
  41cc8a:	ja     41d8d4 <__flatcc_fb_parse@@Base+0x1864>
  41cc90:	mov    rax,QWORD PTR [rax]
  41cc93:	test   rax,rax
  41cc96:	jne    41cc80 <__flatcc_fb_parse@@Base+0xc10>
  41cc98:	lea    rdx,[rip+0x128a0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cc9f:	jmp    41d8db <__flatcc_fb_parse@@Base+0x186b>
  41cca4:	test   r14,r14
  41cca7:	je     41d4c4 <__flatcc_fb_parse@@Base+0x1454>
  41ccad:	mov    rax,QWORD PTR [r14]
  41ccb0:	xor    r9d,r9d
  41ccb3:	lea    rbp,[rip+0x12885]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ccba:	mov    r10,rbp
  41ccbd:	test   rax,rax
  41ccc0:	je     41ccc9 <__flatcc_fb_parse@@Base+0xc59>
  41ccc2:	mov    r9d,DWORD PTR [r14+0x8]
  41ccc6:	mov    r10,rax
  41ccc9:	mov    rax,r12
  41cccc:	nop    DWORD PTR [rax+0x0]
  41ccd0:	cmp    QWORD PTR [rax+0x28],r14
  41ccd4:	ja     41cce0 <__flatcc_fb_parse@@Base+0xc70>
  41ccd6:	cmp    QWORD PTR [rax+0x30],r14
  41ccda:	ja     41d571 <__flatcc_fb_parse@@Base+0x1501>
  41cce0:	mov    rax,QWORD PTR [rax]
  41cce3:	test   rax,rax
  41cce6:	jne    41ccd0 <__flatcc_fb_parse@@Base+0xc60>
  41cce8:	lea    rdx,[rip+0x12850]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ccef:	jmp    41d578 <__flatcc_fb_parse@@Base+0x1508>
  41ccf4:	mov    rdi,r12
  41ccf7:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41ccfc:	mov    r15,QWORD PTR [r12+0x60]
  41cd01:	lea    rax,[r15+0x30]
  41cd05:	cmp    rax,QWORD PTR [r12+0x50]
  41cd0a:	jbe    41cd51 <__flatcc_fb_parse@@Base+0xce1>
  41cd0c:	mov    edi,0x10000
  41cd11:	mov    esi,0x1
  41cd16:	call   406140 <calloc@plt>
  41cd1b:	test   rax,rax
  41cd1e:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41cd24:	mov    rdx,QWORD PTR [rsp+0x30]
  41cd29:	mov    rcx,QWORD PTR [rdx]
  41cd2c:	mov    QWORD PTR [rax],rcx
  41cd2f:	mov    QWORD PTR [rdx],rax
  41cd32:	lea    r15,[rax+0x10]
  41cd36:	mov    rcx,QWORD PTR [rsp+0x20]
  41cd3b:	mov    QWORD PTR [rcx],r15
  41cd3e:	lea    rcx,[rax+0x10000]
  41cd45:	mov    rdx,QWORD PTR [rsp+0x28]
  41cd4a:	mov    QWORD PTR [rdx],rcx
  41cd4d:	add    rax,0x40
  41cd51:	mov    QWORD PTR [r12+0x60],rax
  41cd56:	mov    rax,QWORD PTR [r12+0x200]
  41cd5e:	mov    QWORD PTR [r15],rax
  41cd61:	mov    QWORD PTR [r12+0x200],r15
  41cd69:	mov    rbp,QWORD PTR [r12+0x48]
  41cd6e:	cmp    QWORD PTR [rbp+0x20],0x13
  41cd73:	jne    41cf34 <__flatcc_fb_parse@@Base+0xec4>
  41cd79:	mov    rdi,r12
  41cd7c:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cd81:	test   rbp,rbp
  41cd84:	je     41da91 <__flatcc_fb_parse@@Base+0x1a21>
  41cd8a:	lea    rsi,[r15+0x8]
  41cd8e:	mov    rdi,r12
  41cd91:	call   4225a0 <__flatcc_fb_clear_parser@@Base+0x140>
  41cd96:	cmp    DWORD PTR [r15+0x10],0x0
  41cd9b:	jne    41da91 <__flatcc_fb_parse@@Base+0x1a21>
  41cda1:	mov    rax,QWORD PTR [rbp+0x0]
  41cda5:	xor    r9d,r9d
  41cda8:	lea    r10,[rip+0x12790]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cdaf:	test   rax,rax
  41cdb2:	je     41cdbb <__flatcc_fb_parse@@Base+0xd4b>
  41cdb4:	mov    r9d,DWORD PTR [rbp+0x8]
  41cdb8:	mov    r10,rax
  41cdbb:	mov    rax,r12
  41cdbe:	xchg   ax,ax
  41cdc0:	cmp    QWORD PTR [rax+0x28],rbp
  41cdc4:	ja     41cdd0 <__flatcc_fb_parse@@Base+0xd60>
  41cdc6:	cmp    QWORD PTR [rax+0x30],rbp
  41cdca:	ja     41dca4 <__flatcc_fb_parse@@Base+0x1c34>
  41cdd0:	mov    rax,QWORD PTR [rax]
  41cdd3:	test   rax,rax
  41cdd6:	jne    41cdc0 <__flatcc_fb_parse@@Base+0xd50>
  41cdd8:	lea    rdx,[rip+0x12760]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cddf:	jmp    41dcab <__flatcc_fb_parse@@Base+0x1c3b>
  41cde4:	test   r14,r14
  41cde7:	je     41d50c <__flatcc_fb_parse@@Base+0x149c>
  41cded:	mov    rax,r12
  41cdf0:	cmp    QWORD PTR [rax+0x28],r14
  41cdf4:	ja     41ce00 <__flatcc_fb_parse@@Base+0xd90>
  41cdf6:	cmp    QWORD PTR [rax+0x30],r14
  41cdfa:	ja     41d5f2 <__flatcc_fb_parse@@Base+0x1582>
  41ce00:	mov    rax,QWORD PTR [rax]
  41ce03:	test   rax,rax
  41ce06:	jne    41cdf0 <__flatcc_fb_parse@@Base+0xd80>
  41ce08:	lea    rdx,[rip+0x12730]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ce0f:	jmp    41d5f9 <__flatcc_fb_parse@@Base+0x1589>
  41ce14:	test   r14,r14
  41ce17:	je     41d524 <__flatcc_fb_parse@@Base+0x14b4>
  41ce1d:	mov    rax,r12
  41ce20:	cmp    QWORD PTR [rax+0x28],r14
  41ce24:	ja     41ce30 <__flatcc_fb_parse@@Base+0xdc0>
  41ce26:	cmp    QWORD PTR [rax+0x30],r14
  41ce2a:	ja     41d627 <__flatcc_fb_parse@@Base+0x15b7>
  41ce30:	mov    rax,QWORD PTR [rax]
  41ce33:	test   rax,rax
  41ce36:	jne    41ce20 <__flatcc_fb_parse@@Base+0xdb0>
  41ce38:	lea    rdx,[rip+0x12700]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ce3f:	jmp    41d62e <__flatcc_fb_parse@@Base+0x15be>
  41ce44:	test   r14,r14
  41ce47:	je     41d53c <__flatcc_fb_parse@@Base+0x14cc>
  41ce4d:	mov    rax,QWORD PTR [r14]
  41ce50:	xor    r9d,r9d
  41ce53:	lea    rbp,[rip+0x126e5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ce5a:	mov    r10,rbp
  41ce5d:	test   rax,rax
  41ce60:	je     41ce69 <__flatcc_fb_parse@@Base+0xdf9>
  41ce62:	mov    r9d,DWORD PTR [r14+0x8]
  41ce66:	mov    r10,rax
  41ce69:	mov    rax,r12
  41ce6c:	nop    DWORD PTR [rax+0x0]
  41ce70:	cmp    QWORD PTR [rax+0x28],r14
  41ce74:	ja     41ce80 <__flatcc_fb_parse@@Base+0xe10>
  41ce76:	cmp    QWORD PTR [rax+0x30],r14
  41ce7a:	ja     41d660 <__flatcc_fb_parse@@Base+0x15f0>
  41ce80:	mov    rax,QWORD PTR [rax]
  41ce83:	test   rax,rax
  41ce86:	jne    41ce70 <__flatcc_fb_parse@@Base+0xe00>
  41ce88:	lea    rdx,[rip+0x126b0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ce8f:	jmp    41d667 <__flatcc_fb_parse@@Base+0x15f7>
  41ce94:	test   rbp,rbp
  41ce97:	je     41d724 <__flatcc_fb_parse@@Base+0x16b4>
  41ce9d:	mov    rax,QWORD PTR [rbp+0x0]
  41cea1:	xor    r9d,r9d
  41cea4:	lea    r10,[rip+0x12694]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ceab:	test   rax,rax
  41ceae:	je     41ceb7 <__flatcc_fb_parse@@Base+0xe47>
  41ceb0:	mov    r9d,DWORD PTR [rbp+0x8]
  41ceb4:	mov    r10,rax
  41ceb7:	mov    rax,r12
  41ceba:	nop    WORD PTR [rax+rax*1+0x0]
  41cec0:	cmp    QWORD PTR [rax+0x28],rbp
  41cec4:	ja     41ced0 <__flatcc_fb_parse@@Base+0xe60>
  41cec6:	cmp    QWORD PTR [rax+0x30],rbp
  41ceca:	ja     41d97d <__flatcc_fb_parse@@Base+0x190d>
  41ced0:	mov    rax,QWORD PTR [rax]
  41ced3:	test   rax,rax
  41ced6:	jne    41cec0 <__flatcc_fb_parse@@Base+0xe50>
  41ced8:	lea    rdx,[rip+0x12660]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cedf:	jmp    41d984 <__flatcc_fb_parse@@Base+0x1914>
  41cee4:	test   rbp,rbp
  41cee7:	je     41d741 <__flatcc_fb_parse@@Base+0x16d1>
  41ceed:	mov    rax,QWORD PTR [rbp+0x0]
  41cef1:	xor    r9d,r9d
  41cef4:	lea    r10,[rip+0x12644]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cefb:	test   rax,rax
  41cefe:	je     41cf07 <__flatcc_fb_parse@@Base+0xe97>
  41cf00:	mov    r9d,DWORD PTR [rbp+0x8]
  41cf04:	mov    r10,rax
  41cf07:	mov    rax,r12
  41cf0a:	nop    WORD PTR [rax+rax*1+0x0]
  41cf10:	cmp    QWORD PTR [rax+0x28],rbp
  41cf14:	ja     41cf20 <__flatcc_fb_parse@@Base+0xeb0>
  41cf16:	cmp    QWORD PTR [rax+0x30],rbp
  41cf1a:	ja     41d9e8 <__flatcc_fb_parse@@Base+0x1978>
  41cf20:	mov    rax,QWORD PTR [rax]
  41cf23:	test   rax,rax
  41cf26:	jne    41cf10 <__flatcc_fb_parse@@Base+0xea0>
  41cf28:	lea    rdx,[rip+0x12610]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cf2f:	jmp    41d9ef <__flatcc_fb_parse@@Base+0x197f>
  41cf34:	test   rbp,rbp
  41cf37:	je     41d798 <__flatcc_fb_parse@@Base+0x1728>
  41cf3d:	mov    rax,QWORD PTR [rbp+0x0]
  41cf41:	xor    r9d,r9d
  41cf44:	lea    r10,[rip+0x125f4]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cf4b:	test   rax,rax
  41cf4e:	je     41cf57 <__flatcc_fb_parse@@Base+0xee7>
  41cf50:	mov    r9d,DWORD PTR [rbp+0x8]
  41cf54:	mov    r10,rax
  41cf57:	mov    rax,r12
  41cf5a:	nop    WORD PTR [rax+rax*1+0x0]
  41cf60:	cmp    QWORD PTR [rax+0x28],rbp
  41cf64:	ja     41cf70 <__flatcc_fb_parse@@Base+0xf00>
  41cf66:	cmp    QWORD PTR [rax+0x30],rbp
  41cf6a:	ja     41da58 <__flatcc_fb_parse@@Base+0x19e8>
  41cf70:	mov    rax,QWORD PTR [rax]
  41cf73:	test   rax,rax
  41cf76:	jne    41cf60 <__flatcc_fb_parse@@Base+0xef0>
  41cf78:	lea    rdx,[rip+0x125c0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41cf7f:	jmp    41da5f <__flatcc_fb_parse@@Base+0x19ef>
  41cf84:	xor    ecx,ecx
  41cf86:	mov    QWORD PTR [r13+0x40],rcx
  41cf8a:	mov    rax,QWORD PTR [rsp+0x18]
  41cf8f:	mov    QWORD PTR [rax],0x0
  41cf96:	mov    rax,QWORD PTR [rsp+0x10]
  41cf9b:	mov    rbp,QWORD PTR [rax]
  41cf9e:	cmp    QWORD PTR [rbp+0x20],0x9
  41cfa3:	jne    41d074 <__flatcc_fb_parse@@Base+0x1004>
  41cfa9:	mov    rdi,r12
  41cfac:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cfb1:	mov    QWORD PTR [r13+0x8],rbp
  41cfb5:	test   rbp,rbp
  41cfb8:	je     41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41cfbe:	mov    rax,QWORD PTR [rsp+0x10]
  41cfc3:	mov    rbp,QWORD PTR [rax]
  41cfc6:	cmp    QWORD PTR [rbp+0x20],0x3a
  41cfcb:	jne    41e0ac <__flatcc_fb_parse@@Base+0x203c>
  41cfd1:	mov    rdi,r12
  41cfd4:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41cfd9:	test   rbp,rbp
  41cfdc:	je     41e0ac <__flatcc_fb_parse@@Base+0x203c>
  41cfe2:	lea    rsi,[r13+0x48]
  41cfe6:	mov    rdi,r12
  41cfe9:	call   423ba0 <__flatcc_fb_clear_parser@@Base+0x1740>
  41cfee:	movzx  ecx,WORD PTR [r13+0x58]
  41cff3:	mov    rax,QWORD PTR [r13+0x48]
  41cff7:	cmp    ecx,0x8
  41cffa:	jne    41dc58 <__flatcc_fb_parse@@Base+0x1be8>
  41d000:	mov    rcx,QWORD PTR [rax+0x20]
  41d004:	mov    edx,0x3e4
  41d009:	add    rcx,rdx
  41d00c:	cmp    rcx,0x15
  41d010:	ja     41e0ac <__flatcc_fb_parse@@Base+0x203c>
  41d016:	mov    edx,0x200803
  41d01b:	bt     rdx,rcx
  41d01f:	jae    41e0ac <__flatcc_fb_parse@@Base+0x203c>
  41d025:	mov    rcx,QWORD PTR [rax]
  41d028:	xor    r9d,r9d
  41d02b:	lea    rbp,[rip+0x1250d]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d032:	mov    r10,rbp
  41d035:	test   rcx,rcx
  41d038:	je     41d041 <__flatcc_fb_parse@@Base+0xfd1>
  41d03a:	mov    r9d,DWORD PTR [rax+0x8]
  41d03e:	mov    r10,rcx
  41d041:	mov    rcx,r12
  41d044:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d04e:	xchg   ax,ax
  41d050:	cmp    QWORD PTR [rcx+0x28],rax
  41d054:	ja     41d060 <__flatcc_fb_parse@@Base+0xff0>
  41d056:	cmp    QWORD PTR [rcx+0x30],rax
  41d05a:	ja     41de90 <__flatcc_fb_parse@@Base+0x1e20>
  41d060:	mov    rcx,QWORD PTR [rcx]
  41d063:	test   rcx,rcx
  41d066:	jne    41d050 <__flatcc_fb_parse@@Base+0xfe0>
  41d068:	lea    rdx,[rip+0x124d0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d06f:	jmp    41de97 <__flatcc_fb_parse@@Base+0x1e27>
  41d074:	test   rbp,rbp
  41d077:	je     41d75e <__flatcc_fb_parse@@Base+0x16ee>
  41d07d:	mov    rax,QWORD PTR [rbp+0x0]
  41d081:	xor    r9d,r9d
  41d084:	lea    r10,[rip+0x124b4]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d08b:	test   rax,rax
  41d08e:	je     41d097 <__flatcc_fb_parse@@Base+0x1027>
  41d090:	mov    r9d,DWORD PTR [rbp+0x8]
  41d094:	mov    r10,rax
  41d097:	mov    rax,r12
  41d09a:	nop    WORD PTR [rax+rax*1+0x0]
  41d0a0:	cmp    QWORD PTR [rax+0x28],rbp
  41d0a4:	ja     41d0b0 <__flatcc_fb_parse@@Base+0x1040>
  41d0a6:	cmp    QWORD PTR [rax+0x30],rbp
  41d0aa:	ja     41db0c <__flatcc_fb_parse@@Base+0x1a9c>
  41d0b0:	mov    rax,QWORD PTR [rax]
  41d0b3:	test   rax,rax
  41d0b6:	jne    41d0a0 <__flatcc_fb_parse@@Base+0x1030>
  41d0b8:	lea    rdx,[rip+0x12480]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d0bf:	jmp    41db13 <__flatcc_fb_parse@@Base+0x1aa3>
  41d0c4:	xor    ecx,ecx
  41d0c6:	mov    QWORD PTR [rsi+0x40],rcx
  41d0ca:	mov    QWORD PTR [r12+0x40],0x0
  41d0d3:	mov    rdx,0xfffffffffffffc39
  41d0da:	jmp    41d10a <__flatcc_fb_parse@@Base+0x109a>
  41d0dc:	xor    ecx,ecx
  41d0de:	mov    QWORD PTR [rsi+0x40],rcx
  41d0e2:	mov    QWORD PTR [r12+0x40],0x0
  41d0eb:	mov    rdx,0xfffffffffffffc29
  41d0f2:	jmp    41d10a <__flatcc_fb_parse@@Base+0x109a>
  41d0f4:	xor    ecx,ecx
  41d0f6:	mov    QWORD PTR [rsi+0x40],rcx
  41d0fa:	mov    QWORD PTR [r12+0x40],0x0
  41d103:	mov    rdx,0xfffffffffffffc33
  41d10a:	mov    rdi,r12
  41d10d:	call   422810 <__flatcc_fb_clear_parser@@Base+0x3b0>
  41d112:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41d117:	xor    ecx,ecx
  41d119:	mov    QWORD PTR [r13+0x40],rcx
  41d11d:	mov    rax,QWORD PTR [rsp+0x18]
  41d122:	mov    QWORD PTR [rax],0x0
  41d129:	mov    rax,QWORD PTR [rsp+0x10]
  41d12e:	mov    rbp,QWORD PTR [rax]
  41d131:	cmp    QWORD PTR [rbp+0x20],0x9
  41d136:	jne    41d474 <__flatcc_fb_parse@@Base+0x1404>
  41d13c:	mov    rdi,r12
  41d13f:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d144:	mov    QWORD PTR [r13+0x8],rbp
  41d148:	test   rbp,rbp
  41d14b:	je     41df75 <__flatcc_fb_parse@@Base+0x1f05>
  41d151:	mov    rdi,r12
  41d154:	call   423430 <__flatcc_fb_clear_parser@@Base+0xfd0>
  41d159:	mov    QWORD PTR [r13+0x38],rax
  41d15d:	mov    rbx,QWORD PTR [r12+0x48]
  41d162:	cmp    QWORD PTR [rbx+0x20],0x7b
  41d167:	jne    41d884 <__flatcc_fb_parse@@Base+0x1814>
  41d16d:	mov    rdi,r12
  41d170:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d175:	test   rbx,rbx
  41d178:	je     41df75 <__flatcc_fb_parse@@Base+0x1f05>
  41d17e:	mov    rax,QWORD PTR [rsp+0x10]
  41d183:	mov    r15,QWORD PTR [rax]
  41d186:	cmp    QWORD PTR [r15+0x20],0x9
  41d18b:	mov    QWORD PTR [rsp+0x40],r13
  41d190:	jne    41d425 <__flatcc_fb_parse@@Base+0x13b5>
  41d196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1a0:	mov    rax,QWORD PTR [rsp+0x8]
  41d1a5:	cmp    DWORD PTR [rax],0x9
  41d1a8:	jg     41df75 <__flatcc_fb_parse@@Base+0x1f05>
  41d1ae:	mov    rdx,QWORD PTR [rsp+0x20]
  41d1b3:	mov    rbp,QWORD PTR [rdx]
  41d1b6:	lea    rax,[rbp+0xb0]
  41d1bd:	mov    rcx,QWORD PTR [rsp+0x28]
  41d1c2:	cmp    rax,QWORD PTR [rcx]
  41d1c5:	jbe    41d20e <__flatcc_fb_parse@@Base+0x119e>
  41d1c7:	mov    edi,0x10000
  41d1cc:	mov    esi,0x1
  41d1d1:	call   406140 <calloc@plt>
  41d1d6:	test   rax,rax
  41d1d9:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41d1df:	mov    rdx,QWORD PTR [rsp+0x30]
  41d1e4:	mov    rcx,QWORD PTR [rdx]
  41d1e7:	mov    QWORD PTR [rax],rcx
  41d1ea:	mov    QWORD PTR [rdx],rax
  41d1ed:	lea    rbp,[rax+0x10]
  41d1f1:	mov    rdx,QWORD PTR [rsp+0x20]
  41d1f6:	mov    QWORD PTR [rdx],rbp
  41d1f9:	lea    rcx,[rax+0x10000]
  41d200:	mov    rsi,QWORD PTR [rsp+0x28]
  41d205:	mov    QWORD PTR [rsi],rcx
  41d208:	add    rax,0xc0
  41d20e:	mov    QWORD PTR [rdx],rax
  41d211:	mov    rax,QWORD PTR [r13+0x28]
  41d215:	mov    QWORD PTR [rbp+0x0],rax
  41d219:	mov    WORD PTR [rbp+0x10],0x5
  41d21f:	mov    QWORD PTR [r13+0x28],rbp
  41d223:	mov    rax,QWORD PTR [rsp+0x18]
  41d228:	mov    rax,QWORD PTR [rax]
  41d22b:	test   rax,rax
  41d22e:	je     41d253 <__flatcc_fb_parse@@Base+0x11e3>
  41d230:	xor    edx,edx
  41d232:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d23c:	nop    DWORD PTR [rax+0x0]
  41d240:	mov    rcx,rax
  41d243:	mov    rax,QWORD PTR [rax]
  41d246:	mov    QWORD PTR [rcx],rdx
  41d249:	mov    rdx,rcx
  41d24c:	test   rax,rax
  41d24f:	jne    41d240 <__flatcc_fb_parse@@Base+0x11d0>
  41d251:	jmp    41d255 <__flatcc_fb_parse@@Base+0x11e5>
  41d253:	xor    ecx,ecx
  41d255:	mov    QWORD PTR [rbp+0x68],rcx
  41d259:	mov    QWORD PTR [r12+0x40],0x0
  41d262:	mov    rdi,r12
  41d265:	lea    rsi,[rsp+0x38]
  41d26a:	call   4232b0 <__flatcc_fb_clear_parser@@Base+0xe50>
  41d26f:	mov    rax,QWORD PTR [rsp+0x38]
  41d274:	mov    QWORD PTR [rbp+0x18],rax
  41d278:	mov    WORD PTR [rbp+0x28],0xc
  41d27e:	mov    rcx,QWORD PTR [rax]
  41d281:	test   rcx,rcx
  41d284:	je     41d2a0 <__flatcc_fb_parse@@Base+0x1230>
  41d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d290:	mov    rax,rcx
  41d293:	mov    rcx,QWORD PTR [rcx]
  41d296:	test   rcx,rcx
  41d299:	jne    41d290 <__flatcc_fb_parse@@Base+0x1220>
  41d29b:	mov    QWORD PTR [rsp+0x38],rax
  41d2a0:	mov    rax,QWORD PTR [rax+0x8]
  41d2a4:	mov    QWORD PTR [rbp+0x8],rax
  41d2a8:	mov    rax,QWORD PTR [rsp+0x10]
  41d2ad:	mov    r13,QWORD PTR [rax]
  41d2b0:	mov    rax,QWORD PTR [r13+0x20]
  41d2b4:	cmp    rax,0x3a
  41d2b8:	jne    41d3a5 <__flatcc_fb_parse@@Base+0x1335>
  41d2be:	mov    rdi,r12
  41d2c1:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d2c6:	test   r13,r13
  41d2c9:	je     41d399 <__flatcc_fb_parse@@Base+0x1329>
  41d2cf:	lea    r13,[rbp+0x18]
  41d2d3:	mov    rax,QWORD PTR [r13+0x0]
  41d2d7:	cmp    QWORD PTR [rax],0x0
  41d2db:	je     41d38e <__flatcc_fb_parse@@Base+0x131e>
  41d2e1:	test   r15,r15
  41d2e4:	je     41d330 <__flatcc_fb_parse@@Base+0x12c0>
  41d2e6:	mov    rax,QWORD PTR [r15]
  41d2e9:	xor    r9d,r9d
  41d2ec:	lea    r10,[rip+0x1224c]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d2f3:	test   rax,rax
  41d2f6:	je     41d2ff <__flatcc_fb_parse@@Base+0x128f>
  41d2f8:	mov    r9d,DWORD PTR [r15+0x8]
  41d2fc:	mov    r10,rax
  41d2ff:	mov    rax,r12
  41d302:	mov    QWORD PTR [rsp+0x48],r13
  41d307:	nop    WORD PTR [rax+rax*1+0x0]
  41d310:	cmp    QWORD PTR [rax+0x28],r15
  41d314:	ja     41d31c <__flatcc_fb_parse@@Base+0x12ac>
  41d316:	cmp    QWORD PTR [rax+0x30],r15
  41d31a:	ja     41d34a <__flatcc_fb_parse@@Base+0x12da>
  41d31c:	mov    rax,QWORD PTR [rax]
  41d31f:	test   rax,rax
  41d322:	jne    41d310 <__flatcc_fb_parse@@Base+0x12a0>
  41d324:	mov    r13,rbp
  41d327:	lea    rdx,[rip+0x12211]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d32e:	jmp    41d354 <__flatcc_fb_parse@@Base+0x12e4>
  41d330:	xor    eax,eax
  41d332:	mov    rdi,r12
  41d335:	lea    rsi,[rip+0x298e6]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d33c:	lea    rdx,[rip+0x2a46f]        # 4477b2 <fb_schema_table_deleted@@Base+0x1082>
  41d343:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d348:	jmp    41d386 <__flatcc_fb_parse@@Base+0x1316>
  41d34a:	mov    r13,rbp
  41d34d:	mov    rdx,QWORD PTR [rax+0x318]
  41d354:	mov    rcx,QWORD PTR [r15+0x10]
  41d358:	mov    r8,QWORD PTR [r15+0x18]
  41d35c:	mov    eax,0x0
  41d361:	mov    rdi,r12
  41d364:	lea    rsi,[rip+0x29865]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d36b:	lea    rbp,[rip+0x2a440]        # 4477b2 <fb_schema_table_deleted@@Base+0x1082>
  41d372:	push   rbp
  41d373:	push   r10
  41d375:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d37a:	add    rsp,0x10
  41d37e:	mov    rbp,r13
  41d381:	mov    r13,QWORD PTR [rsp+0x48]
  41d386:	mov    rax,QWORD PTR [rsp+0x8]
  41d38b:	add    DWORD PTR [rax],0x1
  41d38e:	mov    rdi,r12
  41d391:	mov    rsi,r13
  41d394:	call   423ba0 <__flatcc_fb_clear_parser@@Base+0x1740>
  41d399:	mov    rax,QWORD PTR [rsp+0x10]
  41d39e:	mov    r13,QWORD PTR [rax]
  41d3a1:	mov    rax,QWORD PTR [r13+0x20]
  41d3a5:	cmp    rax,0x3d
  41d3a9:	jne    41d3d0 <__flatcc_fb_parse@@Base+0x1360>
  41d3ab:	mov    rdi,r12
  41d3ae:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d3b3:	test   r13,r13
  41d3b6:	je     41d3d0 <__flatcc_fb_parse@@Base+0x1360>
  41d3b8:	add    rbp,0x48
  41d3bc:	xor    edx,edx
  41d3be:	mov    rdi,r12
  41d3c1:	mov    rsi,rbp
  41d3c4:	lea    rcx,[rip+0x2a349]        # 447714 <fb_schema_table_deleted@@Base+0xfe4>
  41d3cb:	call   4236b0 <__flatcc_fb_clear_parser@@Base+0x1250>
  41d3d0:	mov    rax,QWORD PTR [rsp+0x10]
  41d3d5:	mov    r15,QWORD PTR [rax]
  41d3d8:	mov    rax,QWORD PTR [r15+0x20]
  41d3dc:	cmp    rax,0x2c
  41d3e0:	jne    41decf <__flatcc_fb_parse@@Base+0x1e5f>
  41d3e6:	mov    rdi,r12
  41d3e9:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d3ee:	test   r15,r15
  41d3f1:	mov    r15,QWORD PTR [r12+0x48]
  41d3f6:	mov    rax,QWORD PTR [r15+0x20]
  41d3fa:	mov    r13,QWORD PTR [rsp+0x40]
  41d3ff:	je     41ded4 <__flatcc_fb_parse@@Base+0x1e64>
  41d405:	mov    rcx,QWORD PTR [rsp+0x18]
  41d40a:	mov    QWORD PTR [rcx],0x0
  41d411:	cmp    rax,0x9
  41d415:	je     41d1a0 <__flatcc_fb_parse@@Base+0x1130>
  41d41b:	cmp    rax,0x7d
  41d41f:	je     41dee6 <__flatcc_fb_parse@@Base+0x1e76>
  41d425:	test   r15,r15
  41d428:	je     41de56 <__flatcc_fb_parse@@Base+0x1de6>
  41d42e:	mov    rax,QWORD PTR [r15]
  41d431:	xor    r9d,r9d
  41d434:	lea    rbp,[rip+0x12104]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d43b:	mov    r10,rbp
  41d43e:	test   rax,rax
  41d441:	je     41d44a <__flatcc_fb_parse@@Base+0x13da>
  41d443:	mov    r9d,DWORD PTR [r15+0x8]
  41d447:	mov    r10,rax
  41d44a:	mov    rax,r12
  41d44d:	nop    DWORD PTR [rax]
  41d450:	cmp    QWORD PTR [rax+0x28],r15
  41d454:	ja     41d460 <__flatcc_fb_parse@@Base+0x13f0>
  41d456:	cmp    QWORD PTR [rax+0x30],r15
  41d45a:	ja     41df33 <__flatcc_fb_parse@@Base+0x1ec3>
  41d460:	mov    rax,QWORD PTR [rax]
  41d463:	test   rax,rax
  41d466:	jne    41d450 <__flatcc_fb_parse@@Base+0x13e0>
  41d468:	lea    rdx,[rip+0x120d0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d46f:	jmp    41df3a <__flatcc_fb_parse@@Base+0x1eca>
  41d474:	test   rbp,rbp
  41d477:	je     41d77b <__flatcc_fb_parse@@Base+0x170b>
  41d47d:	mov    rax,QWORD PTR [rbp+0x0]
  41d481:	xor    r9d,r9d
  41d484:	lea    r10,[rip+0x120b4]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d48b:	test   rax,rax
  41d48e:	je     41d497 <__flatcc_fb_parse@@Base+0x1427>
  41d490:	mov    r9d,DWORD PTR [rbp+0x8]
  41d494:	mov    r10,rax
  41d497:	mov    rax,r12
  41d49a:	nop    WORD PTR [rax+rax*1+0x0]
  41d4a0:	cmp    QWORD PTR [rax+0x28],rbp
  41d4a4:	ja     41d4b0 <__flatcc_fb_parse@@Base+0x1440>
  41d4a6:	cmp    QWORD PTR [rax+0x30],rbp
  41d4aa:	ja     41db52 <__flatcc_fb_parse@@Base+0x1ae2>
  41d4b0:	mov    rax,QWORD PTR [rax]
  41d4b3:	test   rax,rax
  41d4b6:	jne    41d4a0 <__flatcc_fb_parse@@Base+0x1430>
  41d4b8:	lea    rdx,[rip+0x12080]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d4bf:	jmp    41db59 <__flatcc_fb_parse@@Base+0x1ae9>
  41d4c4:	xor    eax,eax
  41d4c6:	mov    rdi,r12
  41d4c9:	lea    rsi,[rip+0x29752]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d4d0:	lea    rdx,[rip+0x29b14]        # 446feb <fb_schema_table_deleted@@Base+0x8bb>
  41d4d7:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d4dc:	xor    eax,eax
  41d4de:	mov    rdi,r12
  41d4e1:	lea    rsi,[rip+0x2973a]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d4e8:	lea    rdx,[rip+0x29bc6]        # 4470b5 <fb_schema_table_deleted@@Base+0x985>
  41d4ef:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d4f4:	xor    eax,eax
  41d4f6:	mov    rdi,r12
  41d4f9:	lea    rsi,[rip+0x29722]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d500:	lea    rdx,[rip+0x29b1a]        # 447021 <fb_schema_table_deleted@@Base+0x8f1>
  41d507:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d50c:	xor    eax,eax
  41d50e:	mov    rdi,r12
  41d511:	lea    rsi,[rip+0x2970a]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d518:	lea    rdx,[rip+0x29b64]        # 447083 <fb_schema_table_deleted@@Base+0x953>
  41d51f:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d524:	xor    eax,eax
  41d526:	mov    rdi,r12
  41d529:	lea    rsi,[rip+0x296f2]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d530:	lea    rdx,[rip+0x29ba6]        # 4470dd <fb_schema_table_deleted@@Base+0x9ad>
  41d537:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d53c:	xor    eax,eax
  41d53e:	mov    rdi,r12
  41d541:	lea    rsi,[rip+0x296da]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d548:	lea    rdx,[rip+0x29ba9]        # 4470f8 <fb_schema_table_deleted@@Base+0x9c8>
  41d54f:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41d554:	xor    eax,eax
  41d556:	mov    rdi,r12
  41d559:	lea    rsi,[rip+0x296c2]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d560:	lea    rdx,[rip+0x29d05]        # 44726c <fb_schema_table_deleted@@Base+0xb3c>
  41d567:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d56c:	jmp    41d905 <__flatcc_fb_parse@@Base+0x1895>
  41d571:	mov    rdx,QWORD PTR [rax+0x318]
  41d578:	mov    rcx,QWORD PTR [r14+0x10]
  41d57c:	mov    r8,QWORD PTR [r14+0x18]
  41d580:	mov    eax,0x0
  41d585:	mov    rdi,r12
  41d588:	lea    rsi,[rip+0x29641]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d58f:	lea    rbp,[rip+0x29a55]        # 446feb <fb_schema_table_deleted@@Base+0x8bb>
  41d596:	jmp    41de2c <__flatcc_fb_parse@@Base+0x1dbc>
  41d59b:	mov    rdx,QWORD PTR [rax+0x318]
  41d5a2:	mov    rcx,QWORD PTR [r14+0x10]
  41d5a6:	mov    r8,QWORD PTR [r14+0x18]
  41d5aa:	mov    r9d,0x1
  41d5b0:	mov    eax,0x0
  41d5b5:	mov    rdi,r12
  41d5b8:	lea    rsi,[rip+0x29611]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d5bf:	lea    rbp,[rip+0x29aef]        # 4470b5 <fb_schema_table_deleted@@Base+0x985>
  41d5c6:	jmp    41d61d <__flatcc_fb_parse@@Base+0x15ad>
  41d5c8:	mov    rdx,QWORD PTR [rax+0x318]
  41d5cf:	mov    rcx,QWORD PTR [r14+0x10]
  41d5d3:	mov    r8,QWORD PTR [r14+0x18]
  41d5d7:	mov    eax,0x0
  41d5dc:	mov    rdi,r12
  41d5df:	lea    rsi,[rip+0x295ea]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d5e6:	lea    rbp,[rip+0x29a34]        # 447021 <fb_schema_table_deleted@@Base+0x8f1>
  41d5ed:	jmp    41de2c <__flatcc_fb_parse@@Base+0x1dbc>
  41d5f2:	mov    rdx,QWORD PTR [rax+0x318]
  41d5f9:	mov    rcx,QWORD PTR [r14+0x10]
  41d5fd:	mov    r8,QWORD PTR [r14+0x18]
  41d601:	mov    r9d,0x1
  41d607:	mov    eax,0x0
  41d60c:	mov    rdi,r12
  41d60f:	lea    rsi,[rip+0x295ba]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d616:	lea    rbp,[rip+0x29a66]        # 447083 <fb_schema_table_deleted@@Base+0x953>
  41d61d:	push   rbp
  41d61e:	lea    rbp,[rip+0x29966]        # 446f8b <fb_schema_table_deleted@@Base+0x85b>
  41d625:	jmp    41d65a <__flatcc_fb_parse@@Base+0x15ea>
  41d627:	mov    rdx,QWORD PTR [rax+0x318]
  41d62e:	mov    rcx,QWORD PTR [r14+0x10]
  41d632:	mov    r8,QWORD PTR [r14+0x18]
  41d636:	mov    r9d,0x5
  41d63c:	mov    eax,0x0
  41d641:	mov    rdi,r12
  41d644:	lea    rsi,[rip+0x29585]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d64b:	lea    rbp,[rip+0x29a8b]        # 4470dd <fb_schema_table_deleted@@Base+0x9ad>
  41d652:	push   rbp
  41d653:	lea    rbp,[rip+0x29a98]        # 4470f2 <fb_schema_table_deleted@@Base+0x9c2>
  41d65a:	push   rbp
  41d65b:	jmp    41de2f <__flatcc_fb_parse@@Base+0x1dbf>
  41d660:	mov    rdx,QWORD PTR [rax+0x318]
  41d667:	mov    rcx,QWORD PTR [r14+0x10]
  41d66b:	mov    r8,QWORD PTR [r14+0x18]
  41d66f:	mov    eax,0x0
  41d674:	mov    rdi,r12
  41d677:	lea    rsi,[rip+0x29552]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d67e:	lea    rbp,[rip+0x29a73]        # 4470f8 <fb_schema_table_deleted@@Base+0x9c8>
  41d685:	jmp    41de2c <__flatcc_fb_parse@@Base+0x1dbc>
  41d68a:	mov    rax,QWORD PTR [rsp+0x10]
  41d68f:	mov    rax,QWORD PTR [rax]
  41d692:	mov    rcx,QWORD PTR [rax+0x20]
  41d696:	cmp    rcx,0x9
  41d69a:	jne    41d6cf <__flatcc_fb_parse@@Base+0x165f>
  41d69c:	mov    rdi,r12
  41d69f:	lea    rsi,[rsp+0x38]
  41d6a4:	call   4232b0 <__flatcc_fb_clear_parser@@Base+0xe50>
  41d6a9:	mov    QWORD PTR [r12+0x40],0x0
  41d6b2:	mov    rsi,QWORD PTR [r12+0x48]
  41d6b7:	cmp    QWORD PTR [rsi+0x20],0x3b
  41d6bc:	jne    41d7b5 <__flatcc_fb_parse@@Base+0x1745>
  41d6c2:	mov    rdi,r12
  41d6c5:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d6ca:	jmp    41d7cd <__flatcc_fb_parse@@Base+0x175d>
  41d6cf:	test   rax,rax
  41d6d2:	je     41d960 <__flatcc_fb_parse@@Base+0x18f0>
  41d6d8:	mov    rcx,QWORD PTR [rax]
  41d6db:	xor    r9d,r9d
  41d6de:	lea    rbp,[rip+0x11e5a]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d6e5:	mov    r10,rbp
  41d6e8:	test   rcx,rcx
  41d6eb:	je     41d6f4 <__flatcc_fb_parse@@Base+0x1684>
  41d6ed:	mov    r9d,DWORD PTR [rax+0x8]
  41d6f1:	mov    r10,rcx
  41d6f4:	mov    rcx,r12
  41d6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41d700:	cmp    QWORD PTR [rcx+0x28],rax
  41d704:	ja     41d710 <__flatcc_fb_parse@@Base+0x16a0>
  41d706:	cmp    QWORD PTR [rcx+0x30],rax
  41d70a:	ja     41dbc2 <__flatcc_fb_parse@@Base+0x1b52>
  41d710:	mov    rcx,QWORD PTR [rcx]
  41d713:	test   rcx,rcx
  41d716:	jne    41d700 <__flatcc_fb_parse@@Base+0x1690>
  41d718:	lea    rdx,[rip+0x11e20]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d71f:	jmp    41dbc9 <__flatcc_fb_parse@@Base+0x1b59>
  41d724:	xor    eax,eax
  41d726:	mov    rdi,r12
  41d729:	lea    rsi,[rip+0x294f2]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d730:	lea    rdx,[rip+0x29acb]        # 447202 <fb_schema_table_deleted@@Base+0xad2>
  41d737:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d73c:	jmp    41d9ae <__flatcc_fb_parse@@Base+0x193e>
  41d741:	xor    eax,eax
  41d743:	mov    rdi,r12
  41d746:	lea    rsi,[rip+0x294d5]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d74d:	lea    rdx,[rip+0x29a4f]        # 4471a3 <fb_schema_table_deleted@@Base+0xa73>
  41d754:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d759:	jmp    41da19 <__flatcc_fb_parse@@Base+0x19a9>
  41d75e:	xor    eax,eax
  41d760:	mov    rdi,r12
  41d763:	lea    rsi,[rip+0x294b8]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d76a:	lea    rdx,[rip+0x29f2e]        # 44769f <fb_schema_table_deleted@@Base+0xf6f>
  41d771:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d776:	jmp    41db3d <__flatcc_fb_parse@@Base+0x1acd>
  41d77b:	xor    eax,eax
  41d77d:	mov    rdi,r12
  41d780:	lea    rsi,[rip+0x2949b]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d787:	lea    rdx,[rip+0x29fc3]        # 447751 <fb_schema_table_deleted@@Base+0x1021>
  41d78e:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d793:	jmp    41db83 <__flatcc_fb_parse@@Base+0x1b13>
  41d798:	xor    eax,eax
  41d79a:	mov    rdi,r12
  41d79d:	lea    rsi,[rip+0x2947e]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d7a4:	lea    rdx,[rip+0x29afc]        # 4472a7 <fb_schema_table_deleted@@Base+0xb77>
  41d7ab:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d7b0:	jmp    41da89 <__flatcc_fb_parse@@Base+0x1a19>
  41d7b5:	xor    r8d,r8d
  41d7b8:	xor    r9d,r9d
  41d7bb:	mov    rdi,r12
  41d7be:	lea    rdx,[rip+0x29979]        # 44713e <fb_schema_table_deleted@@Base+0xa0e>
  41d7c5:	mov    rcx,rbp
  41d7c8:	call   41ba60 <__flatcc_error_report@@Base>
  41d7cd:	mov    r15,QWORD PTR [rsp+0x38]
  41d7d2:	mov    rdi,QWORD PTR [r12+0x260]
  41d7da:	xor    edx,edx
  41d7dc:	mov    rsi,r15
  41d7df:	call   41a0d0 <fb_scope_table_find@@Base>
  41d7e4:	mov    rbp,rax
  41d7e7:	test   rax,rax
  41d7ea:	jne    41d877 <__flatcc_fb_parse@@Base+0x1807>
  41d7f0:	mov    rax,QWORD PTR [rsp+0x20]
  41d7f5:	mov    rbp,QWORD PTR [rax]
  41d7f8:	lea    rax,[rbp+0x40]
  41d7fc:	mov    rcx,QWORD PTR [rsp+0x28]
  41d801:	cmp    rax,QWORD PTR [rcx]
  41d804:	jbe    41d84b <__flatcc_fb_parse@@Base+0x17db>
  41d806:	mov    edi,0x10000
  41d80b:	mov    esi,0x1
  41d810:	call   406140 <calloc@plt>
  41d815:	test   rax,rax
  41d818:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41d81e:	mov    rdx,QWORD PTR [rsp+0x30]
  41d823:	mov    rcx,QWORD PTR [rdx]
  41d826:	mov    QWORD PTR [rax],rcx
  41d829:	mov    QWORD PTR [rdx],rax
  41d82c:	lea    rbp,[rax+0x10]
  41d830:	mov    rcx,QWORD PTR [rsp+0x20]
  41d835:	mov    QWORD PTR [rcx],rbp
  41d838:	lea    rcx,[rax+0x10000]
  41d83f:	mov    rdx,QWORD PTR [rsp+0x28]
  41d844:	mov    QWORD PTR [rdx],rcx
  41d847:	add    rax,0x50
  41d84b:	mov    QWORD PTR [r12+0x60],rax
  41d850:	mov    QWORD PTR [rbp+0x0],r15
  41d854:	mov    rax,QWORD PTR [rsp+0x58]
  41d859:	vmovups xmm0,XMMWORD PTR [rax]
  41d85d:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41d862:	mov    rdi,QWORD PTR [r12+0x260]
  41d86a:	mov    edx,0x1
  41d86f:	mov    rsi,rbp
  41d872:	call   41a0b0 <fb_scope_table_insert_item@@Base>
  41d877:	mov    QWORD PTR [r12+0x340],rbp
  41d87f:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41d884:	test   rbx,rbx
  41d887:	je     41dc40 <__flatcc_fb_parse@@Base+0x1bd0>
  41d88d:	mov    rax,QWORD PTR [rbx]
  41d890:	xor    r9d,r9d
  41d893:	lea    rbp,[rip+0x11ca5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d89a:	mov    r10,rbp
  41d89d:	test   rax,rax
  41d8a0:	je     41d8a9 <__flatcc_fb_parse@@Base+0x1839>
  41d8a2:	mov    r9d,DWORD PTR [rbx+0x8]
  41d8a6:	mov    r10,rax
  41d8a9:	mov    rax,r12
  41d8ac:	nop    DWORD PTR [rax+0x0]
  41d8b0:	cmp    QWORD PTR [rax+0x28],rbx
  41d8b4:	ja     41d8c0 <__flatcc_fb_parse@@Base+0x1850>
  41d8b6:	cmp    QWORD PTR [rax+0x30],rbx
  41d8ba:	ja     41dd2a <__flatcc_fb_parse@@Base+0x1cba>
  41d8c0:	mov    rax,QWORD PTR [rax]
  41d8c3:	test   rax,rax
  41d8c6:	jne    41d8b0 <__flatcc_fb_parse@@Base+0x1840>
  41d8c8:	lea    rdx,[rip+0x11c70]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41d8cf:	jmp    41dd31 <__flatcc_fb_parse@@Base+0x1cc1>
  41d8d4:	mov    rdx,QWORD PTR [rax+0x318]
  41d8db:	mov    rcx,QWORD PTR [rbp+0x10]
  41d8df:	mov    r8,QWORD PTR [rbp+0x18]
  41d8e3:	mov    eax,0x0
  41d8e8:	mov    rdi,r12
  41d8eb:	lea    rsi,[rip+0x292de]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d8f2:	lea    rbx,[rip+0x29973]        # 44726c <fb_schema_table_deleted@@Base+0xb3c>
  41d8f9:	push   rbx
  41d8fa:	push   r10
  41d8fc:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d901:	add    rsp,0x10
  41d905:	mov    rax,QWORD PTR [rsp+0x8]
  41d90a:	add    DWORD PTR [rax],0x1
  41d90d:	mov    rdi,r12
  41d910:	mov    rsi,QWORD PTR [rsp+0x70]
  41d915:	call   4232b0 <__flatcc_fb_clear_parser@@Base+0xe50>
  41d91a:	mov    rax,QWORD PTR [r12+0x340]
  41d922:	mov    QWORD PTR [r12+0x258],rax
  41d92a:	mov    QWORD PTR [r12+0x40],0x0
  41d933:	mov    rsi,QWORD PTR [r12+0x48]
  41d938:	cmp    QWORD PTR [rsi+0x20],0x3b
  41d93d:	je     41dd9c <__flatcc_fb_parse@@Base+0x1d2c>
  41d943:	xor    r8d,r8d
  41d946:	xor    r9d,r9d
  41d949:	mov    rdi,r12
  41d94c:	lea    rdx,[rip+0x2992f]        # 447282 <fb_schema_table_deleted@@Base+0xb52>
  41d953:	mov    rcx,rbp
  41d956:	call   41ba60 <__flatcc_error_report@@Base>
  41d95b:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41d960:	xor    eax,eax
  41d962:	mov    rdi,r12
  41d965:	lea    rsi,[rip+0x292b6]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41d96c:	lea    rdx,[rip+0x297ab]        # 44711e <fb_schema_table_deleted@@Base+0x9ee>
  41d973:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d978:	jmp    41dbf3 <__flatcc_fb_parse@@Base+0x1b83>
  41d97d:	mov    rdx,QWORD PTR [rax+0x318]
  41d984:	mov    rcx,QWORD PTR [rbp+0x10]
  41d988:	mov    r8,QWORD PTR [rbp+0x18]
  41d98c:	mov    eax,0x0
  41d991:	mov    rdi,r12
  41d994:	lea    rsi,[rip+0x29235]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41d99b:	lea    rbp,[rip+0x29860]        # 447202 <fb_schema_table_deleted@@Base+0xad2>
  41d9a2:	push   rbp
  41d9a3:	push   r10
  41d9a5:	call   41b940 <__flatcc_fb_print_error@@Base>
  41d9aa:	add    rsp,0x10
  41d9ae:	mov    rax,QWORD PTR [rsp+0x8]
  41d9b3:	add    DWORD PTR [rax],0x1
  41d9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d9c0:	mov    rax,QWORD PTR [rsp+0x10]
  41d9c5:	mov    rax,QWORD PTR [rax]
  41d9c8:	mov    rbp,QWORD PTR [rax+0x20]
  41d9cc:	test   rbp,rbp
  41d9cf:	je     41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41d9d5:	mov    rdi,r12
  41d9d8:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41d9dd:	cmp    rbp,0x3b
  41d9e1:	jne    41d9c0 <__flatcc_fb_parse@@Base+0x1950>
  41d9e3:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0x2353>
  41d9e8:	mov    rdx,QWORD PTR [rax+0x318]
  41d9ef:	mov    rcx,QWORD PTR [rbp+0x10]
  41d9f3:	mov    r8,QWORD PTR [rbp+0x18]
  41d9f7:	mov    eax,0x0
  41d9fc:	mov    rdi,r12
  41d9ff:	lea    rsi,[rip+0x291ca]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41da06:	lea    rbp,[rip+0x29796]        # 4471a3 <fb_schema_table_deleted@@Base+0xa73>
  41da0d:	push   rbp
  41da0e:	push   r10
  41da10:	call   41b940 <__flatcc_fb_print_error@@Base>
  41da15:	add    rsp,0x10
  41da19:	mov    rax,QWORD PTR [rsp+0x8]
  41da1e:	add    DWORD PTR [rax],0x1
  41da21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41da30:	mov    rax,QWORD PTR [rsp+0x10]
  41da35:	mov    rax,QWORD PTR [rax]
  41da38:	mov    rbp,QWORD PTR [rax+0x20]
  41da3c:	test   rbp,rbp
  41da3f:	je     41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41da45:	mov    rdi,r12
  41da48:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41da4d:	cmp    rbp,0x3b
  41da51:	jne    41da30 <__flatcc_fb_parse@@Base+0x19c0>
  41da53:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0x2353>
  41da58:	mov    rdx,QWORD PTR [rax+0x318]
  41da5f:	mov    rcx,QWORD PTR [rbp+0x10]
  41da63:	mov    r8,QWORD PTR [rbp+0x18]
  41da67:	mov    eax,0x0
  41da6c:	mov    rdi,r12
  41da6f:	lea    rsi,[rip+0x2915a]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41da76:	lea    rbp,[rip+0x2982a]        # 4472a7 <fb_schema_table_deleted@@Base+0xb77>
  41da7d:	push   rbp
  41da7e:	push   r10
  41da80:	call   41b940 <__flatcc_fb_print_error@@Base>
  41da85:	add    rsp,0x10
  41da89:	mov    rax,QWORD PTR [rsp+0x8]
  41da8e:	add    DWORD PTR [rax],0x1
  41da91:	mov    rax,QWORD PTR [rsp+0x10]
  41da96:	mov    rax,QWORD PTR [rax]
  41da99:	cmp    QWORD PTR [rax+0x20],0x3b
  41da9e:	je     41dd9c <__flatcc_fb_parse@@Base+0x1d2c>
  41daa4:	test   rax,rax
  41daa7:	je     41daf4 <__flatcc_fb_parse@@Base+0x1a84>
  41daa9:	mov    rcx,QWORD PTR [rax]
  41daac:	xor    r9d,r9d
  41daaf:	lea    rbp,[rip+0x11a89]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41dab6:	mov    r10,rbp
  41dab9:	test   rcx,rcx
  41dabc:	je     41dac5 <__flatcc_fb_parse@@Base+0x1a55>
  41dabe:	mov    r9d,DWORD PTR [rax+0x8]
  41dac2:	mov    r10,rcx
  41dac5:	mov    rcx,r12
  41dac8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dad0:	cmp    QWORD PTR [rcx+0x28],rax
  41dad4:	ja     41dae0 <__flatcc_fb_parse@@Base+0x1a70>
  41dad6:	cmp    QWORD PTR [rcx+0x30],rax
  41dada:	ja     41db98 <__flatcc_fb_parse@@Base+0x1b28>
  41dae0:	mov    rcx,QWORD PTR [rcx]
  41dae3:	test   rcx,rcx
  41dae6:	jne    41dad0 <__flatcc_fb_parse@@Base+0x1a60>
  41dae8:	lea    rdx,[rip+0x11a50]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41daef:	jmp    41db9f <__flatcc_fb_parse@@Base+0x1b2f>
  41daf4:	xor    eax,eax
  41daf6:	mov    rdi,r12
  41daf9:	lea    rsi,[rip+0x29122]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41db00:	lea    rdx,[rip+0x297e1]        # 4472e8 <fb_schema_table_deleted@@Base+0xbb8>
  41db07:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41db0c:	mov    rdx,QWORD PTR [rax+0x318]
  41db13:	mov    rcx,QWORD PTR [rbp+0x10]
  41db17:	mov    r8,QWORD PTR [rbp+0x18]
  41db1b:	mov    eax,0x0
  41db20:	mov    rdi,r12
  41db23:	lea    rsi,[rip+0x290a6]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41db2a:	lea    rbp,[rip+0x29b6e]        # 44769f <fb_schema_table_deleted@@Base+0xf6f>
  41db31:	push   rbp
  41db32:	push   r10
  41db34:	call   41b940 <__flatcc_fb_print_error@@Base>
  41db39:	add    rsp,0x10
  41db3d:	mov    rax,QWORD PTR [rsp+0x8]
  41db42:	add    DWORD PTR [rax],0x1
  41db45:	mov    QWORD PTR [r13+0x8],0x0
  41db4d:	jmp    41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41db52:	mov    rdx,QWORD PTR [rax+0x318]
  41db59:	mov    rcx,QWORD PTR [rbp+0x10]
  41db5d:	mov    r8,QWORD PTR [rbp+0x18]
  41db61:	mov    eax,0x0
  41db66:	mov    rdi,r12
  41db69:	lea    rsi,[rip+0x29060]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41db70:	lea    rbp,[rip+0x29bda]        # 447751 <fb_schema_table_deleted@@Base+0x1021>
  41db77:	push   rbp
  41db78:	push   r10
  41db7a:	call   41b940 <__flatcc_fb_print_error@@Base>
  41db7f:	add    rsp,0x10
  41db83:	mov    rax,QWORD PTR [rsp+0x8]
  41db88:	add    DWORD PTR [rax],0x1
  41db8b:	mov    QWORD PTR [r13+0x8],0x0
  41db93:	jmp    41df75 <__flatcc_fb_parse@@Base+0x1f05>
  41db98:	mov    rdx,QWORD PTR [rcx+0x318]
  41db9f:	mov    rcx,QWORD PTR [rax+0x10]
  41dba3:	mov    r8,QWORD PTR [rax+0x18]
  41dba7:	mov    eax,0x0
  41dbac:	mov    rdi,r12
  41dbaf:	lea    rsi,[rip+0x2901a]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dbb6:	lea    rbp,[rip+0x2972b]        # 4472e8 <fb_schema_table_deleted@@Base+0xbb8>
  41dbbd:	jmp    41de2c <__flatcc_fb_parse@@Base+0x1dbc>
  41dbc2:	mov    rdx,QWORD PTR [rcx+0x318]
  41dbc9:	mov    rcx,QWORD PTR [rax+0x10]
  41dbcd:	mov    r8,QWORD PTR [rax+0x18]
  41dbd1:	mov    eax,0x0
  41dbd6:	mov    rdi,r12
  41dbd9:	lea    rsi,[rip+0x28ff0]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dbe0:	lea    rbp,[rip+0x29537]        # 44711e <fb_schema_table_deleted@@Base+0x9ee>
  41dbe7:	push   rbp
  41dbe8:	push   r10
  41dbea:	call   41b940 <__flatcc_fb_print_error@@Base>
  41dbef:	add    rsp,0x10
  41dbf3:	mov    rax,QWORD PTR [rsp+0x8]
  41dbf8:	add    DWORD PTR [rax],0x1
  41dbfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc00:	mov    rax,QWORD PTR [rsp+0x10]
  41dc05:	mov    rax,QWORD PTR [rax]
  41dc08:	mov    rbp,QWORD PTR [rax+0x20]
  41dc0c:	test   rbp,rbp
  41dc0f:	je     41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41dc15:	mov    rdi,r12
  41dc18:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41dc1d:	cmp    rbp,0x3b
  41dc21:	jne    41dc00 <__flatcc_fb_parse@@Base+0x1b90>
  41dc23:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0x2353>
  41dc28:	xor    eax,eax
  41dc2a:	mov    rdi,r12
  41dc2d:	lea    rsi,[rip+0x28fee]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41dc34:	lea    rdx,[rip+0x2958f]        # 4471ca <fb_schema_table_deleted@@Base+0xa9a>
  41dc3b:	jmp    41de00 <__flatcc_fb_parse@@Base+0x1d90>
  41dc40:	xor    eax,eax
  41dc42:	mov    rdi,r12
  41dc45:	lea    rsi,[rip+0x28fd6]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41dc4c:	lea    rdx,[rip+0x29b24]        # 447777 <fb_schema_table_deleted@@Base+0x1047>
  41dc53:	jmp    41de69 <__flatcc_fb_parse@@Base+0x1df9>
  41dc58:	test   rax,rax
  41dc5b:	je     41de73 <__flatcc_fb_parse@@Base+0x1e03>
  41dc61:	mov    rcx,QWORD PTR [rax]
  41dc64:	xor    r9d,r9d
  41dc67:	lea    rbp,[rip+0x118d1]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41dc6e:	mov    r10,rbp
  41dc71:	test   rcx,rcx
  41dc74:	je     41dc7d <__flatcc_fb_parse@@Base+0x1c0d>
  41dc76:	mov    r9d,DWORD PTR [rax+0x8]
  41dc7a:	mov    r10,rcx
  41dc7d:	mov    rcx,r12
  41dc80:	cmp    QWORD PTR [rcx+0x28],rax
  41dc84:	ja     41dc90 <__flatcc_fb_parse@@Base+0x1c20>
  41dc86:	cmp    QWORD PTR [rcx+0x30],rax
  41dc8a:	ja     41e073 <__flatcc_fb_parse@@Base+0x2003>
  41dc90:	mov    rcx,QWORD PTR [rcx]
  41dc93:	test   rcx,rcx
  41dc96:	jne    41dc80 <__flatcc_fb_parse@@Base+0x1c10>
  41dc98:	lea    rdx,[rip+0x118a0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41dc9f:	jmp    41e07a <__flatcc_fb_parse@@Base+0x200a>
  41dca4:	mov    rdx,QWORD PTR [rax+0x318]
  41dcab:	mov    rcx,QWORD PTR [rbp+0x10]
  41dcaf:	mov    r8,QWORD PTR [rbp+0x18]
  41dcb3:	mov    eax,0x0
  41dcb8:	mov    rdi,r12
  41dcbb:	lea    rsi,[rip+0x28f0e]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dcc2:	lea    rbp,[rip+0x29600]        # 4472c9 <fb_schema_table_deleted@@Base+0xb99>
  41dcc9:	push   rbp
  41dcca:	push   r10
  41dccc:	call   41b940 <__flatcc_fb_print_error@@Base>
  41dcd1:	add    rsp,0x10
  41dcd5:	add    DWORD PTR [r12+0xd0],0x1
  41dcde:	jmp    41da91 <__flatcc_fb_parse@@Base+0x1a21>
  41dce3:	xor    eax,eax
  41dce5:	mov    rdi,r12
  41dce8:	lea    rsi,[rip+0x28f33]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41dcef:	lea    rdx,[rip+0x29534]        # 44722a <fb_schema_table_deleted@@Base+0xafa>
  41dcf6:	call   41b940 <__flatcc_fb_print_error@@Base>
  41dcfb:	jmp    41dd85 <__flatcc_fb_parse@@Base+0x1d15>
  41dd00:	mov    rdx,QWORD PTR [rcx+0x318]
  41dd07:	mov    rcx,QWORD PTR [rax+0x10]
  41dd0b:	mov    r8,QWORD PTR [rax+0x18]
  41dd0f:	mov    eax,0x0
  41dd14:	mov    rdi,r12
  41dd17:	lea    rsi,[rip+0x28eb2]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dd1e:	lea    rbp,[rip+0x294a5]        # 4471ca <fb_schema_table_deleted@@Base+0xa9a>
  41dd25:	jmp    41de2c <__flatcc_fb_parse@@Base+0x1dbc>
  41dd2a:	mov    rdx,QWORD PTR [rax+0x318]
  41dd31:	mov    rcx,QWORD PTR [rbx+0x10]
  41dd35:	mov    r8,QWORD PTR [rbx+0x18]
  41dd39:	mov    eax,0x0
  41dd3e:	mov    rdi,r12
  41dd41:	lea    rsi,[rip+0x28e88]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dd48:	lea    rbp,[rip+0x29a28]        # 447777 <fb_schema_table_deleted@@Base+0x1047>
  41dd4f:	jmp    41df58 <__flatcc_fb_parse@@Base+0x1ee8>
  41dd54:	mov    rdx,QWORD PTR [rax+0x318]
  41dd5b:	mov    rcx,QWORD PTR [rbp+0x10]
  41dd5f:	mov    r8,QWORD PTR [rbp+0x18]
  41dd63:	mov    eax,0x0
  41dd68:	mov    rdi,r12
  41dd6b:	lea    rsi,[rip+0x28e5e]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41dd72:	lea    rbp,[rip+0x294b1]        # 44722a <fb_schema_table_deleted@@Base+0xafa>
  41dd79:	push   rbp
  41dd7a:	push   r10
  41dd7c:	call   41b940 <__flatcc_fb_print_error@@Base>
  41dd81:	add    rsp,0x10
  41dd85:	mov    rax,QWORD PTR [rsp+0x8]
  41dd8a:	add    DWORD PTR [rax],0x1
  41dd8d:	mov    rax,QWORD PTR [rsp+0x10]
  41dd92:	mov    rax,QWORD PTR [rax]
  41dd95:	cmp    QWORD PTR [rax+0x20],0x3b
  41dd9a:	jne    41dda9 <__flatcc_fb_parse@@Base+0x1d39>
  41dd9c:	mov    rdi,r12
  41dd9f:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41dda4:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41dda9:	test   rax,rax
  41ddac:	je     41dded <__flatcc_fb_parse@@Base+0x1d7d>
  41ddae:	mov    rcx,QWORD PTR [rax]
  41ddb1:	xor    r9d,r9d
  41ddb4:	lea    rbp,[rip+0x11784]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ddbb:	mov    r10,rbp
  41ddbe:	test   rcx,rcx
  41ddc1:	je     41ddca <__flatcc_fb_parse@@Base+0x1d5a>
  41ddc3:	mov    r9d,DWORD PTR [rax+0x8]
  41ddc7:	mov    r10,rcx
  41ddca:	mov    rcx,r12
  41ddcd:	nop    DWORD PTR [rax]
  41ddd0:	cmp    QWORD PTR [rcx+0x28],rax
  41ddd4:	ja     41dddc <__flatcc_fb_parse@@Base+0x1d6c>
  41ddd6:	cmp    QWORD PTR [rcx+0x30],rax
  41ddda:	ja     41de07 <__flatcc_fb_parse@@Base+0x1d97>
  41dddc:	mov    rcx,QWORD PTR [rcx]
  41dddf:	test   rcx,rcx
  41dde2:	jne    41ddd0 <__flatcc_fb_parse@@Base+0x1d60>
  41dde4:	lea    rdx,[rip+0x11754]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41ddeb:	jmp    41de0e <__flatcc_fb_parse@@Base+0x1d9e>
  41dded:	xor    eax,eax
  41ddef:	mov    rdi,r12
  41ddf2:	lea    rsi,[rip+0x28e29]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41ddf9:	lea    rdx,[rip+0x2944f]        # 44724f <fb_schema_table_deleted@@Base+0xb1f>
  41de00:	call   41b940 <__flatcc_fb_print_error@@Base>
  41de05:	jmp    41de38 <__flatcc_fb_parse@@Base+0x1dc8>
  41de07:	mov    rdx,QWORD PTR [rcx+0x318]
  41de0e:	mov    rcx,QWORD PTR [rax+0x10]
  41de12:	mov    r8,QWORD PTR [rax+0x18]
  41de16:	mov    eax,0x0
  41de1b:	mov    rdi,r12
  41de1e:	lea    rsi,[rip+0x28dab]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41de25:	lea    rbp,[rip+0x29423]        # 44724f <fb_schema_table_deleted@@Base+0xb1f>
  41de2c:	push   rbp
  41de2d:	push   r10
  41de2f:	call   41b940 <__flatcc_fb_print_error@@Base>
  41de34:	add    rsp,0x10
  41de38:	mov    rax,QWORD PTR [rsp+0x8]
  41de3d:	add    DWORD PTR [rax],0x1
  41de40:	mov    rax,QWORD PTR [rsp+0x10]
  41de45:	mov    r13,QWORD PTR [rax]
  41de48:	cmp    r13,r14
  41de4b:	jne    41c570 <__flatcc_fb_parse@@Base+0x500>
  41de51:	jmp    41e453 <__flatcc_fb_parse@@Base+0x23e3>
  41de56:	xor    eax,eax
  41de58:	mov    rdi,r12
  41de5b:	lea    rsi,[rip+0x28dc0]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41de62:	lea    rdx,[rip+0x2992d]        # 447796 <fb_schema_table_deleted@@Base+0x1066>
  41de69:	call   41b940 <__flatcc_fb_print_error@@Base>
  41de6e:	jmp    41df64 <__flatcc_fb_parse@@Base+0x1ef4>
  41de73:	xor    eax,eax
  41de75:	mov    rdi,r12
  41de78:	lea    rsi,[rip+0x28da3]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41de7f:	lea    rdx,[rip+0x2983e]        # 4476c4 <fb_schema_table_deleted@@Base+0xf94>
  41de86:	call   41b940 <__flatcc_fb_print_error@@Base>
  41de8b:	jmp    41e0a4 <__flatcc_fb_parse@@Base+0x2034>
  41de90:	mov    rdx,QWORD PTR [rcx+0x318]
  41de97:	mov    rcx,QWORD PTR [rax+0x10]
  41de9b:	mov    r8,QWORD PTR [rax+0x18]
  41de9f:	mov    eax,0x0
  41dea4:	mov    rdi,r12
  41dea7:	lea    rsi,[rip+0x28d22]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41deae:	lea    rbp,[rip+0x2980f]        # 4476c4 <fb_schema_table_deleted@@Base+0xf94>
  41deb5:	push   rbp
  41deb6:	push   r10
  41deb8:	call   41b940 <__flatcc_fb_print_error@@Base>
  41debd:	add    rsp,0x10
  41dec1:	add    DWORD PTR [r12+0xd0],0x1
  41deca:	jmp    41e0ac <__flatcc_fb_parse@@Base+0x203c>
  41decf:	mov    r13,QWORD PTR [rsp+0x40]
  41ded4:	mov    rcx,QWORD PTR [rsp+0x18]
  41ded9:	mov    QWORD PTR [rcx],0x0
  41dee0:	cmp    rax,0x7d
  41dee4:	jne    41def0 <__flatcc_fb_parse@@Base+0x1e80>
  41dee6:	mov    rdi,r12
  41dee9:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41deee:	jmp    41df0b <__flatcc_fb_parse@@Base+0x1e9b>
  41def0:	xor    r8d,r8d
  41def3:	xor    r9d,r9d
  41def6:	mov    rdi,r12
  41def9:	mov    rsi,r15
  41defc:	lea    rdx,[rip+0x298e8]        # 4477eb <fb_schema_table_deleted@@Base+0x10bb>
  41df03:	mov    rcx,rbx
  41df06:	call   41ba60 <__flatcc_error_report@@Base>
  41df0b:	mov    rax,QWORD PTR [r13+0x28]
  41df0f:	test   rax,rax
  41df12:	je     41dfb0 <__flatcc_fb_parse@@Base+0x1f40>
  41df18:	xor    ecx,ecx
  41df1a:	nop    WORD PTR [rax+rax*1+0x0]
  41df20:	mov    rdx,rax
  41df23:	mov    rax,QWORD PTR [rax]
  41df26:	mov    QWORD PTR [rdx],rcx
  41df29:	mov    rcx,rdx
  41df2c:	test   rax,rax
  41df2f:	jne    41df20 <__flatcc_fb_parse@@Base+0x1eb0>
  41df31:	jmp    41dfb2 <__flatcc_fb_parse@@Base+0x1f42>
  41df33:	mov    rdx,QWORD PTR [rax+0x318]
  41df3a:	mov    rcx,QWORD PTR [r15+0x10]
  41df3e:	mov    r8,QWORD PTR [r15+0x18]
  41df42:	mov    eax,0x0
  41df47:	mov    rdi,r12
  41df4a:	lea    rsi,[rip+0x28c7f]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41df51:	lea    rbp,[rip+0x2983e]        # 447796 <fb_schema_table_deleted@@Base+0x1066>
  41df58:	push   rbp
  41df59:	push   r10
  41df5b:	call   41b940 <__flatcc_fb_print_error@@Base>
  41df60:	add    rsp,0x10
  41df64:	mov    rax,QWORD PTR [rsp+0x8]
  41df69:	add    DWORD PTR [rax],0x1
  41df6c:	jmp    41df75 <__flatcc_fb_parse@@Base+0x1f05>
  41df6e:	xchg   ax,ax
  41df70:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41df75:	mov    rax,QWORD PTR [rsp+0x10]
  41df7a:	mov    rax,QWORD PTR [rax]
  41df7d:	mov    rax,QWORD PTR [rax+0x20]
  41df81:	test   rax,rax
  41df84:	je     41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41df8a:	cmp    rax,0x7d
  41df8e:	je     41e3c3 <__flatcc_fb_parse@@Base+0x2353>
  41df94:	mov    rdi,r12
  41df97:	cmp    rax,0x3b
  41df9b:	jne    41df70 <__flatcc_fb_parse@@Base+0x1f00>
  41df9d:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41dfa2:	mov    QWORD PTR [r12+0x40],0x0
  41dfab:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41dfb0:	xor    edx,edx
  41dfb2:	mov    QWORD PTR [r13+0x28],rdx
  41dfb6:	mov    rsi,QWORD PTR [rsp+0x20]
  41dfbb:	mov    rcx,QWORD PTR [rsi]
  41dfbe:	lea    rax,[rcx+0xb0]
  41dfc5:	mov    rdi,QWORD PTR [rsp+0x28]
  41dfca:	cmp    rax,QWORD PTR [rdi]
  41dfcd:	jbe    41e01a <__flatcc_fb_parse@@Base+0x1faa>
  41dfcf:	mov    edi,0x10000
  41dfd4:	mov    esi,0x1
  41dfd9:	call   406140 <calloc@plt>
  41dfde:	test   rax,rax
  41dfe1:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41dfe7:	mov    rdx,QWORD PTR [rsp+0x30]
  41dfec:	mov    rcx,QWORD PTR [rdx]
  41dfef:	mov    QWORD PTR [rax],rcx
  41dff2:	mov    QWORD PTR [rdx],rax
  41dff5:	lea    rcx,[rax+0x10]
  41dff9:	mov    rsi,QWORD PTR [rsp+0x20]
  41dffe:	mov    QWORD PTR [rsi],rcx
  41e001:	lea    rdx,[rax+0x10000]
  41e008:	mov    rdi,QWORD PTR [rsp+0x28]
  41e00d:	mov    QWORD PTR [rdi],rdx
  41e010:	add    rax,0xc0
  41e016:	mov    rdx,QWORD PTR [r13+0x28]
  41e01a:	mov    QWORD PTR [rsi],rax
  41e01d:	mov    QWORD PTR [rcx],rdx
  41e020:	mov    WORD PTR [rcx+0x10],0x5
  41e026:	mov    QWORD PTR [r13+0x28],rcx
  41e02a:	mov    rax,QWORD PTR [rsp+0x18]
  41e02f:	mov    rax,QWORD PTR [rax]
  41e032:	test   rax,rax
  41e035:	je     41e053 <__flatcc_fb_parse@@Base+0x1fe3>
  41e037:	xor    esi,esi
  41e039:	nop    DWORD PTR [rax+0x0]
  41e040:	mov    rdx,rax
  41e043:	mov    rax,QWORD PTR [rax]
  41e046:	mov    QWORD PTR [rdx],rsi
  41e049:	mov    rsi,rdx
  41e04c:	test   rax,rax
  41e04f:	jne    41e040 <__flatcc_fb_parse@@Base+0x1fd0>
  41e051:	jmp    41e055 <__flatcc_fb_parse@@Base+0x1fe5>
  41e053:	xor    edx,edx
  41e055:	mov    QWORD PTR [rcx+0x68],rdx
  41e059:	mov    rax,QWORD PTR [rsp+0x18]
  41e05e:	mov    QWORD PTR [rax],0x0
  41e065:	mov    rax,QWORD PTR [rsp+0x50]
  41e06a:	mov    QWORD PTR [rcx+0x8],rax
  41e06e:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41e073:	mov    rdx,QWORD PTR [rcx+0x318]
  41e07a:	mov    rcx,QWORD PTR [rax+0x10]
  41e07e:	mov    r8,QWORD PTR [rax+0x18]
  41e082:	mov    eax,0x0
  41e087:	mov    rdi,r12
  41e08a:	lea    rsi,[rip+0x28b3f]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41e091:	lea    rbp,[rip+0x2962c]        # 4476c4 <fb_schema_table_deleted@@Base+0xf94>
  41e098:	push   rbp
  41e099:	push   r10
  41e09b:	call   41b940 <__flatcc_fb_print_error@@Base>
  41e0a0:	add    rsp,0x10
  41e0a4:	mov    rax,QWORD PTR [rsp+0x8]
  41e0a9:	add    DWORD PTR [rax],0x1
  41e0ac:	mov    rdi,r12
  41e0af:	call   423430 <__flatcc_fb_clear_parser@@Base+0xfd0>
  41e0b4:	mov    QWORD PTR [r13+0x38],rax
  41e0b8:	mov    rbx,QWORD PTR [r12+0x48]
  41e0bd:	cmp    QWORD PTR [rbx+0x20],0x7b
  41e0c2:	jne    41e2a4 <__flatcc_fb_parse@@Base+0x2234>
  41e0c8:	mov    rdi,r12
  41e0cb:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e0d0:	test   rbx,rbx
  41e0d3:	je     41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41e0d9:	mov    rax,QWORD PTR [rsp+0x10]
  41e0de:	mov    r15,QWORD PTR [rax]
  41e0e1:	cmp    QWORD PTR [r15+0x20],0x9
  41e0e6:	jne    41e250 <__flatcc_fb_parse@@Base+0x21e0>
  41e0ec:	nop    DWORD PTR [rax+0x0]
  41e0f0:	mov    rdi,r12
  41e0f3:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e0f8:	test   r15,r15
  41e0fb:	je     41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41e101:	mov    rax,QWORD PTR [rsp+0x8]
  41e106:	cmp    DWORD PTR [rax],0x9
  41e109:	jg     41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41e10f:	mov    rdx,QWORD PTR [rsp+0x20]
  41e114:	mov    rbp,QWORD PTR [rdx]
  41e117:	lea    rax,[rbp+0xb0]
  41e11e:	mov    rcx,QWORD PTR [rsp+0x28]
  41e123:	cmp    rax,QWORD PTR [rcx]
  41e126:	jbe    41e16f <__flatcc_fb_parse@@Base+0x20ff>
  41e128:	mov    edi,0x10000
  41e12d:	mov    esi,0x1
  41e132:	call   406140 <calloc@plt>
  41e137:	test   rax,rax
  41e13a:	je     41e554 <__flatcc_fb_parse@@Base+0x24e4>
  41e140:	mov    rdx,QWORD PTR [rsp+0x30]
  41e145:	mov    rcx,QWORD PTR [rdx]
  41e148:	mov    QWORD PTR [rax],rcx
  41e14b:	mov    QWORD PTR [rdx],rax
  41e14e:	lea    rbp,[rax+0x10]
  41e152:	mov    rdx,QWORD PTR [rsp+0x20]
  41e157:	mov    QWORD PTR [rdx],rbp
  41e15a:	lea    rcx,[rax+0x10000]
  41e161:	mov    rsi,QWORD PTR [rsp+0x28]
  41e166:	mov    QWORD PTR [rsi],rcx
  41e169:	add    rax,0xc0
  41e16f:	mov    QWORD PTR [rdx],rax
  41e172:	mov    rax,QWORD PTR [r13+0x28]
  41e176:	mov    QWORD PTR [rbp+0x0],rax
  41e17a:	mov    WORD PTR [rbp+0x10],0x5
  41e180:	mov    QWORD PTR [r13+0x28],rbp
  41e184:	mov    rax,QWORD PTR [rsp+0x18]
  41e189:	mov    rax,QWORD PTR [rax]
  41e18c:	test   rax,rax
  41e18f:	je     41e1b3 <__flatcc_fb_parse@@Base+0x2143>
  41e191:	xor    edx,edx
  41e193:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e19d:	nop    DWORD PTR [rax]
  41e1a0:	mov    rcx,rax
  41e1a3:	mov    rax,QWORD PTR [rax]
  41e1a6:	mov    QWORD PTR [rcx],rdx
  41e1a9:	mov    rdx,rcx
  41e1ac:	test   rax,rax
  41e1af:	jne    41e1a0 <__flatcc_fb_parse@@Base+0x2130>
  41e1b1:	jmp    41e1b5 <__flatcc_fb_parse@@Base+0x2145>
  41e1b3:	xor    ecx,ecx
  41e1b5:	mov    QWORD PTR [rbp+0x68],rcx
  41e1b9:	mov    rax,QWORD PTR [rsp+0x18]
  41e1be:	mov    QWORD PTR [rax],0x0
  41e1c5:	mov    QWORD PTR [rbp+0x8],r15
  41e1c9:	mov    rax,QWORD PTR [rsp+0x10]
  41e1ce:	mov    r15,QWORD PTR [rax]
  41e1d1:	mov    rax,QWORD PTR [r15+0x20]
  41e1d5:	cmp    rax,0x3d
  41e1d9:	jne    41e20c <__flatcc_fb_parse@@Base+0x219c>
  41e1db:	mov    rdi,r12
  41e1de:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e1e3:	test   r15,r15
  41e1e6:	je     41e200 <__flatcc_fb_parse@@Base+0x2190>
  41e1e8:	add    rbp,0x48
  41e1ec:	xor    edx,edx
  41e1ee:	mov    rdi,r12
  41e1f1:	mov    rsi,rbp
  41e1f4:	lea    rcx,[rip+0x29519]        # 447714 <fb_schema_table_deleted@@Base+0xfe4>
  41e1fb:	call   4236b0 <__flatcc_fb_clear_parser@@Base+0x1250>
  41e200:	mov    rax,QWORD PTR [rsp+0x10]
  41e205:	mov    r15,QWORD PTR [rax]
  41e208:	mov    rax,QWORD PTR [r15+0x20]
  41e20c:	cmp    rax,0x2c
  41e210:	jne    41e343 <__flatcc_fb_parse@@Base+0x22d3>
  41e216:	mov    rdi,r12
  41e219:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e21e:	test   r15,r15
  41e221:	mov    r15,QWORD PTR [r12+0x48]
  41e226:	mov    rax,QWORD PTR [r15+0x20]
  41e22a:	je     41e343 <__flatcc_fb_parse@@Base+0x22d3>
  41e230:	mov    rcx,QWORD PTR [rsp+0x18]
  41e235:	mov    QWORD PTR [rcx],0x0
  41e23c:	cmp    rax,0x9
  41e240:	je     41e0f0 <__flatcc_fb_parse@@Base+0x2080>
  41e246:	cmp    rax,0x7d
  41e24a:	je     41e355 <__flatcc_fb_parse@@Base+0x22e5>
  41e250:	test   r15,r15
  41e253:	je     41e329 <__flatcc_fb_parse@@Base+0x22b9>
  41e259:	mov    rax,QWORD PTR [r15]
  41e25c:	xor    r9d,r9d
  41e25f:	lea    rbp,[rip+0x112d9]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41e266:	mov    r10,rbp
  41e269:	test   rax,rax
  41e26c:	je     41e275 <__flatcc_fb_parse@@Base+0x2205>
  41e26e:	mov    r9d,DWORD PTR [r15+0x8]
  41e272:	mov    r10,rax
  41e275:	mov    rax,r12
  41e278:	nop    DWORD PTR [rax+rax*1+0x0]
  41e280:	cmp    QWORD PTR [rax+0x28],r15
  41e284:	ja     41e290 <__flatcc_fb_parse@@Base+0x2220>
  41e286:	cmp    QWORD PTR [rax+0x30],r15
  41e28a:	ja     41e362 <__flatcc_fb_parse@@Base+0x22f2>
  41e290:	mov    rax,QWORD PTR [rax]
  41e293:	test   rax,rax
  41e296:	jne    41e280 <__flatcc_fb_parse@@Base+0x2210>
  41e298:	lea    rdx,[rip+0x112a0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41e29f:	jmp    41e369 <__flatcc_fb_parse@@Base+0x22f9>
  41e2a4:	test   rbx,rbx
  41e2a7:	je     41e2ed <__flatcc_fb_parse@@Base+0x227d>
  41e2a9:	mov    rax,QWORD PTR [rbx]
  41e2ac:	xor    r9d,r9d
  41e2af:	lea    rbp,[rip+0x11289]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41e2b6:	mov    r10,rbp
  41e2b9:	test   rax,rax
  41e2bc:	je     41e2c5 <__flatcc_fb_parse@@Base+0x2255>
  41e2be:	mov    r9d,DWORD PTR [rbx+0x8]
  41e2c2:	mov    r10,rax
  41e2c5:	mov    rax,r12
  41e2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2d0:	cmp    QWORD PTR [rax+0x28],rbx
  41e2d4:	ja     41e2dc <__flatcc_fb_parse@@Base+0x226c>
  41e2d6:	cmp    QWORD PTR [rax+0x30],rbx
  41e2da:	ja     41e302 <__flatcc_fb_parse@@Base+0x2292>
  41e2dc:	mov    rax,QWORD PTR [rax]
  41e2df:	test   rax,rax
  41e2e2:	jne    41e2d0 <__flatcc_fb_parse@@Base+0x2260>
  41e2e4:	lea    rdx,[rip+0x11254]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41e2eb:	jmp    41e309 <__flatcc_fb_parse@@Base+0x2299>
  41e2ed:	xor    eax,eax
  41e2ef:	mov    rdi,r12
  41e2f2:	lea    rsi,[rip+0x28929]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41e2f9:	lea    rdx,[rip+0x293db]        # 4476db <fb_schema_table_deleted@@Base+0xfab>
  41e300:	jmp    41e33c <__flatcc_fb_parse@@Base+0x22cc>
  41e302:	mov    rdx,QWORD PTR [rax+0x318]
  41e309:	mov    rcx,QWORD PTR [rbx+0x10]
  41e30d:	mov    r8,QWORD PTR [rbx+0x18]
  41e311:	mov    eax,0x0
  41e316:	mov    rdi,r12
  41e319:	lea    rsi,[rip+0x288b0]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41e320:	lea    rbp,[rip+0x293b4]        # 4476db <fb_schema_table_deleted@@Base+0xfab>
  41e327:	jmp    41e387 <__flatcc_fb_parse@@Base+0x2317>
  41e329:	xor    eax,eax
  41e32b:	mov    rdi,r12
  41e32e:	lea    rsi,[rip+0x288ed]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41e335:	lea    rdx,[rip+0x293bd]        # 4476f9 <fb_schema_table_deleted@@Base+0xfc9>
  41e33c:	call   41b940 <__flatcc_fb_print_error@@Base>
  41e341:	jmp    41e393 <__flatcc_fb_parse@@Base+0x2323>
  41e343:	mov    rcx,QWORD PTR [rsp+0x18]
  41e348:	mov    QWORD PTR [rcx],0x0
  41e34f:	cmp    rax,0x7d
  41e353:	jne    41e3d4 <__flatcc_fb_parse@@Base+0x2364>
  41e355:	mov    rdi,r12
  41e358:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e35d:	jmp    41e3ef <__flatcc_fb_parse@@Base+0x237f>
  41e362:	mov    rdx,QWORD PTR [rax+0x318]
  41e369:	mov    rcx,QWORD PTR [r15+0x10]
  41e36d:	mov    r8,QWORD PTR [r15+0x18]
  41e371:	mov    eax,0x0
  41e376:	mov    rdi,r12
  41e379:	lea    rsi,[rip+0x28850]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41e380:	lea    rbp,[rip+0x29372]        # 4476f9 <fb_schema_table_deleted@@Base+0xfc9>
  41e387:	push   rbp
  41e388:	push   r10
  41e38a:	call   41b940 <__flatcc_fb_print_error@@Base>
  41e38f:	add    rsp,0x10
  41e393:	mov    rax,QWORD PTR [rsp+0x8]
  41e398:	add    DWORD PTR [rax],0x1
  41e39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3a0:	mov    rax,QWORD PTR [rsp+0x10]
  41e3a5:	mov    rax,QWORD PTR [rax]
  41e3a8:	mov    rbp,QWORD PTR [rax+0x20]
  41e3ac:	test   rbp,rbp
  41e3af:	je     41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41e3b5:	mov    rdi,r12
  41e3b8:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  41e3bd:	cmp    rbp,0x7d
  41e3c1:	jne    41e3a0 <__flatcc_fb_parse@@Base+0x2330>
  41e3c3:	mov    rax,QWORD PTR [rsp+0x18]
  41e3c8:	mov    QWORD PTR [rax],0x0
  41e3cf:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41e3d4:	xor    r8d,r8d
  41e3d7:	xor    r9d,r9d
  41e3da:	mov    rdi,r12
  41e3dd:	mov    rsi,r15
  41e3e0:	lea    rdx,[rip+0x29348]        # 44772f <fb_schema_table_deleted@@Base+0xfff>
  41e3e7:	mov    rcx,rbx
  41e3ea:	call   41ba60 <__flatcc_error_report@@Base>
  41e3ef:	mov    rax,QWORD PTR [r13+0x28]
  41e3f3:	test   rax,rax
  41e3f6:	je     41e41a <__flatcc_fb_parse@@Base+0x23aa>
  41e3f8:	xor    edx,edx
  41e3fa:	nop    WORD PTR [rax+rax*1+0x0]
  41e400:	mov    rcx,rax
  41e403:	mov    rax,QWORD PTR [rax]
  41e406:	mov    QWORD PTR [rcx],rdx
  41e409:	mov    rdx,rcx
  41e40c:	test   rax,rax
  41e40f:	jne    41e400 <__flatcc_fb_parse@@Base+0x2390>
  41e411:	mov    QWORD PTR [r13+0x28],rcx
  41e415:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41e41a:	xor    ecx,ecx
  41e41c:	mov    QWORD PTR [r13+0x28],rcx
  41e420:	jmp    41de40 <__flatcc_fb_parse@@Base+0x1dd0>
  41e425:	mov    rax,QWORD PTR [r12+0x200]
  41e42d:	test   rax,rax
  41e430:	je     41e4a6 <__flatcc_fb_parse@@Base+0x2436>
  41e432:	xor    edx,edx
  41e434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e43e:	xchg   ax,ax
  41e440:	mov    rcx,rax
  41e443:	mov    rax,QWORD PTR [rax]
  41e446:	mov    QWORD PTR [rcx],rdx
  41e449:	mov    rdx,rcx
  41e44c:	test   rax,rax
  41e44f:	jne    41e440 <__flatcc_fb_parse@@Base+0x23d0>
  41e451:	jmp    41e4a8 <__flatcc_fb_parse@@Base+0x2438>
  41e453:	mov    rax,QWORD PTR [rsp+0x8]
  41e458:	mov    eax,DWORD PTR [rax]
  41e45a:	test   eax,eax
  41e45c:	jne    41e545 <__flatcc_fb_parse@@Base+0x24d5>
  41e462:	test   r14,r14
  41e465:	je     41e4e7 <__flatcc_fb_parse@@Base+0x2477>
  41e46b:	mov    rax,QWORD PTR [r14]
  41e46e:	xor    r9d,r9d
  41e471:	lea    rdx,[rip+0x110c7]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  41e478:	mov    rbp,rdx
  41e47b:	test   rax,rax
  41e47e:	je     41e487 <__flatcc_fb_parse@@Base+0x2417>
  41e480:	mov    r9d,DWORD PTR [r14+0x8]
  41e484:	mov    rbp,rax
  41e487:	mov    rax,r12
  41e48a:	nop    WORD PTR [rax+rax*1+0x0]
  41e490:	cmp    QWORD PTR [rax+0x28],r14
  41e494:	ja     41e49c <__flatcc_fb_parse@@Base+0x242c>
  41e496:	cmp    QWORD PTR [rax+0x30],r14
  41e49a:	ja     41e501 <__flatcc_fb_parse@@Base+0x2491>
  41e49c:	mov    rax,QWORD PTR [rax]
  41e49f:	test   rax,rax
  41e4a2:	jne    41e490 <__flatcc_fb_parse@@Base+0x2420>
  41e4a4:	jmp    41e508 <__flatcc_fb_parse@@Base+0x2498>
  41e4a6:	xor    ecx,ecx
  41e4a8:	mov    QWORD PTR [r12+0x200],rcx
  41e4b0:	mov    rax,QWORD PTR [r12+0x238]
  41e4b8:	test   rax,rax
  41e4bb:	je     41e4d3 <__flatcc_fb_parse@@Base+0x2463>
  41e4bd:	xor    edx,edx
  41e4bf:	nop
  41e4c0:	mov    rcx,rax
  41e4c3:	mov    rax,QWORD PTR [rax]
  41e4c6:	mov    QWORD PTR [rcx],rdx
  41e4c9:	mov    rdx,rcx
  41e4cc:	test   rax,rax
  41e4cf:	jne    41e4c0 <__flatcc_fb_parse@@Base+0x2450>
  41e4d1:	jmp    41e4d5 <__flatcc_fb_parse@@Base+0x2465>
  41e4d3:	xor    ecx,ecx
  41e4d5:	mov    QWORD PTR [r12+0x238],rcx
  41e4dd:	mov    eax,DWORD PTR [r12+0xd0]
  41e4e5:	jmp    41e545 <__flatcc_fb_parse@@Base+0x24d5>
  41e4e7:	lea    rsi,[rip+0x28734]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  41e4ee:	lea    rdx,[rip+0x289b3]        # 446ea8 <fb_schema_table_deleted@@Base+0x778>
  41e4f5:	xor    eax,eax
  41e4f7:	mov    rdi,r12
  41e4fa:	call   41b940 <__flatcc_fb_print_error@@Base>
  41e4ff:	jmp    41e532 <__flatcc_fb_parse@@Base+0x24c2>
  41e501:	mov    rdx,QWORD PTR [rax+0x318]
  41e508:	mov    rcx,QWORD PTR [r14+0x10]
  41e50c:	mov    r8,QWORD PTR [r14+0x18]
  41e510:	lea    r10,[rip+0x28991]        # 446ea8 <fb_schema_table_deleted@@Base+0x778>
  41e517:	lea    rsi,[rip+0x286b2]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  41e51e:	mov    eax,0x0
  41e523:	mov    rdi,r12
  41e526:	push   r10
  41e528:	push   rbp
  41e529:	call   41b940 <__flatcc_fb_print_error@@Base>
  41e52e:	add    rsp,0x10
  41e532:	mov    eax,DWORD PTR [r12+0xd0]
  41e53a:	add    eax,0x1
  41e53d:	mov    DWORD PTR [r12+0xd0],eax
  41e545:	add    rsp,0x78
  41e549:	pop    rbx
  41e54a:	pop    r12
  41e54c:	pop    r13
  41e54e:	pop    r14
  41e550:	pop    r15
  41e552:	pop    rbp
  41e553:	ret    
  41e554:	mov    rax,QWORD PTR [rip+0x32a9d]        # 450ff8 <stderr@GLIBC_2.2.5>
  41e55b:	mov    rcx,QWORD PTR [rax]
  41e55e:	lea    rdi,[rip+0x10ab2]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  41e565:	mov    esi,0x22
  41e56a:	mov    edx,0x1
  41e56f:	call   406210 <fwrite@plt>
  41e574:	mov    edi,0x1
  41e579:	call   406200 <exit@plt>
  41e57e:	xchg   ax,ax
  41e580:	push   rbp
  41e581:	push   r15
  41e583:	push   r14
  41e585:	push   r13
  41e587:	push   r12
  41e589:	push   rbx
  41e58a:	sub    rsp,0x58
  41e58e:	mov    r14,rdi
  41e591:	lea    r13,[rdi+rsi*1]
  41e595:	test   rsi,rsi
  41e598:	mov    QWORD PTR [rsp+0x38],rdx
  41e59d:	je     4220a2 <__flatcc_fb_parse@@Base+0x6032>
  41e5a3:	lea    rbp,[rdx+0x28]
  41e5a7:	lea    r10,[rdx+0x38]
  41e5ab:	lea    r9,[rdx+0x30]
  41e5af:	lea    rsi,[rdx+0x48]
  41e5b3:	lea    r8,[rdx+0x78]
  41e5b7:	lea    r11,[rdx+0x70]
  41e5bb:	lea    r12,[r13-0x1]
  41e5bf:	lea    rax,[r13-0x2]
  41e5c3:	mov    QWORD PTR [rsp+0x50],rax
  41e5c8:	lea    rdx,[rip+0x284f1]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  41e5cf:	mov    QWORD PTR [rsp+0x20],rsi
  41e5d4:	mov    QWORD PTR [rsp+0x18],r11
  41e5d9:	mov    QWORD PTR [rsp+0x8],r8
  41e5de:	mov    QWORD PTR [rsp],r9
  41e5e2:	mov    QWORD PTR [rsp+0x30],r10
  41e5e7:	mov    QWORD PTR [rsp+0x40],r13
  41e5ec:	mov    QWORD PTR [rsp+0x10],rbp
  41e5f1:	mov    QWORD PTR [rsp+0x28],r12
  41e5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e600:	movsx  eax,BYTE PTR [r14]
  41e604:	movsxd rbx,eax
  41e607:	cmp    ebx,0x7e
  41e60a:	ja     420004 <__flatcc_fb_parse@@Base+0x3f94>
  41e610:	lea    rcx,[rip+0x281ad]        # 4467c4 <fb_schema_table_deleted@@Base+0x94>
  41e617:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e61b:	add    rax,rcx
  41e61e:	jmp    rax
  41e620:	shl    rbx,0x8
  41e624:	lea    r15,[r14+0x1]
  41e628:	cmp    r15,r13
  41e62b:	je     41e670 <__flatcc_fb_parse@@Base+0x2600>
  41e62d:	movzx  eax,BYTE PTR [r15]
  41e631:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e635:	je     41e673 <__flatcc_fb_parse@@Base+0x2603>
  41e637:	movsx  rcx,al
  41e63b:	shl    rcx,0x10
  41e63f:	or     rcx,rbx
  41e642:	lea    r15,[r14+0x2]
  41e646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e650:	cmp    r13,r15
  41e653:	je     41e678 <__flatcc_fb_parse@@Base+0x2608>
  41e655:	movzx  eax,BYTE PTR [r15]
  41e659:	add    r15,0x1
  41e65d:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e661:	jne    41e650 <__flatcc_fb_parse@@Base+0x25e0>
  41e663:	add    r15,0xffffffffffffffff
  41e667:	jmp    41e680 <__flatcc_fb_parse@@Base+0x2610>
  41e669:	nop    DWORD PTR [rax+0x0]
  41e670:	mov    r15,r13
  41e673:	mov    rcx,rbx
  41e676:	jmp    41e680 <__flatcc_fb_parse@@Base+0x2610>
  41e678:	mov    r15,r13
  41e67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e680:	movsx  rdx,BYTE PTR [r15-0x1]
  41e685:	shl    rdx,0x18
  41e689:	mov    rbx,r15
  41e68c:	sub    rbx,r14
  41e68f:	movzx  eax,bl
  41e692:	add    rax,0x30
  41e696:	or     rax,rcx
  41e699:	or     rax,rdx
  41e69c:	cmp    rax,0x6570723a
  41e6a2:	mov    QWORD PTR [rsp+0x48],r14
  41e6a7:	jle    41e710 <__flatcc_fb_parse@@Base+0x26a0>
  41e6a9:	cmp    rax,0x6e69663d
  41e6af:	jg     41e789 <__flatcc_fb_parse@@Base+0x2719>
  41e6b5:	cmp    rax,0x676c7534
  41e6bb:	jle    41e98d <__flatcc_fb_parse@@Base+0x291d>
  41e6c1:	cmp    rax,0x67747335
  41e6c7:	jle    41ec1d <__flatcc_fb_parse@@Base+0x2bad>
  41e6cd:	cmp    rax,0x67747336
  41e6d3:	je     41ee3e <__flatcc_fb_parse@@Base+0x2dce>
  41e6d9:	cmp    rax,0x6c6f6234
  41e6df:	je     41ee6a <__flatcc_fb_parse@@Base+0x2dfa>
  41e6e5:	cmp    rax,0x6d6e6534
  41e6eb:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e6f1:	cmp    DWORD PTR [r14],0x6d756e65
  41e6f8:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e6fe:	mov    r14,rbx
  41e701:	mov    r13,0xfffffffffffffc1b
  41e708:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41e70d:	nop    DWORD PTR [rax]
  41e710:	cmp    rax,0x38697534
  41e716:	jle    41e7ee <__flatcc_fb_parse@@Base+0x277e>
  41e71c:	cmp    rax,0x65617434
  41e722:	jle    41e9cd <__flatcc_fb_parse@@Base+0x295d>
  41e728:	cmp    rax,0x656e6936
  41e72e:	jle    41ec51 <__flatcc_fb_parse@@Base+0x2be1>
  41e734:	cmp    rax,0x656e6937
  41e73a:	je     41ee86 <__flatcc_fb_parse@@Base+0x2e16>
  41e740:	cmp    rax,0x656f6436
  41e746:	je     41eec9 <__flatcc_fb_parse@@Base+0x2e59>
  41e74c:	cmp    rax,0x656f7239
  41e752:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e758:	mov    rax,QWORD PTR [r14]
  41e75b:	movabs rcx,0x7079745f746f6f72
  41e765:	xor    rax,rcx
  41e768:	movzx  ecx,BYTE PTR [r14+0x8]
  41e76d:	xor    rcx,0x65
  41e771:	or     rcx,rax
  41e774:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e77a:	mov    r14,rbx
  41e77d:	mov    r13,0xfffffffffffffc38
  41e784:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41e789:	cmp    rax,0x74697533
  41e78f:	jle    41ea0d <__flatcc_fb_parse@@Base+0x299d>
  41e795:	cmp    rax,0x746e6932
  41e79b:	jle    41ec92 <__flatcc_fb_parse@@Base+0x2c22>
  41e7a1:	cmp    rax,0x74747336
  41e7a7:	je     41eef5 <__flatcc_fb_parse@@Base+0x2e85>
  41e7ad:	cmp    rax,0x74737536
  41e7b3:	je     41ef21 <__flatcc_fb_parse@@Base+0x2eb1>
  41e7b9:	cmp    rax,0x746e6933
  41e7bf:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e7c5:	movzx  eax,WORD PTR [r14]
  41e7c9:	xor    eax,0x6e69
  41e7ce:	movzx  ecx,BYTE PTR [r14+0x2]
  41e7d3:	xor    ecx,0x74
  41e7d6:	or     cx,ax
  41e7d9:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e7df:	mov    r14,rbx
  41e7e2:	mov    r13,0xfffffffffffffc1e
  41e7e9:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41e7ee:	cmp    rax,0x346c6636
  41e7f4:	jg     41ea5a <__flatcc_fb_parse@@Base+0x29ea>
  41e7fa:	cmp    rax,0x326e6934
  41e800:	jg     41ecd3 <__flatcc_fb_parse@@Base+0x2c63>
  41e806:	cmp    rax,0x32697536
  41e80c:	je     41ef4d <__flatcc_fb_parse@@Base+0x2edd>
  41e812:	cmp    rax,0x326c6637
  41e818:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e81e:	mov    edx,0x7
  41e823:	lea    rdi,[rip+0x285fd]        # 446e27 <fb_schema_table_deleted@@Base+0x6f7>
  41e82a:	mov    rsi,r14
  41e82d:	call   406130 <memcmp@plt>
  41e832:	mov    r10,QWORD PTR [rsp+0x30]
  41e837:	mov    r9,QWORD PTR [rsp]
  41e83b:	mov    r8,QWORD PTR [rsp+0x8]
  41e840:	mov    r11,QWORD PTR [rsp+0x18]
  41e845:	mov    rsi,QWORD PTR [rsp+0x20]
  41e84a:	test   eax,eax
  41e84c:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e852:	mov    r14,rbx
  41e855:	mov    r13,0xfffffffffffffc1c
  41e85c:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41e861:	mov    rdi,QWORD PTR [rbp+0x0]
  41e865:	movsxd rcx,DWORD PTR [r10]
  41e868:	lea    r15,[rcx+rcx*4]
  41e86c:	lea    rdx,[rdi+r15*8]
  41e870:	mov    QWORD PTR [r9],rdx
  41e873:	mov    rax,QWORD PTR [rsi]
  41e876:	cmp    rax,rdx
  41e879:	jne    41e8e3 <__flatcc_fb_parse@@Base+0x2873>
  41e87b:	lea    eax,[rcx+rcx*1]
  41e87e:	test   ecx,ecx
  41e880:	mov    ecx,0x400
  41e885:	cmove  eax,ecx
  41e888:	mov    DWORD PTR [r10],eax
  41e88b:	cdqe   
  41e88d:	shl    rax,0x3
  41e891:	lea    rsi,[rax+rax*4]
  41e895:	mov    r12,rbp
  41e898:	mov    rbp,r10
  41e89b:	call   4061c0 <realloc@plt>
  41e8a0:	mov    QWORD PTR [r12],rax
  41e8a4:	test   rax,rax
  41e8a7:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41e8ad:	movsxd rcx,DWORD PTR [rbp+0x0]
  41e8b1:	lea    rcx,[rcx+rcx*4]
  41e8b5:	lea    rcx,[rax+rcx*8]
  41e8b9:	mov    r9,QWORD PTR [rsp]
  41e8bd:	mov    QWORD PTR [r9],rcx
  41e8c0:	lea    rax,[rax+r15*8]
  41e8c4:	mov    rsi,QWORD PTR [rsp+0x20]
  41e8c9:	mov    QWORD PTR [rsi],rax
  41e8cc:	mov    r11,QWORD PTR [rsp+0x18]
  41e8d1:	mov    r8,QWORD PTR [rsp+0x8]
  41e8d6:	mov    r10,rbp
  41e8d9:	mov    rbp,QWORD PTR [rsp+0x10]
  41e8de:	mov    r12,QWORD PTR [rsp+0x28]
  41e8e3:	lea    r15,[r14+0x1]
  41e8e7:	mov    QWORD PTR [rax+0x20],rbx
  41e8eb:	mov    QWORD PTR [rax],r14
  41e8ee:	mov    QWORD PTR [rax+0x8],0x1
  41e8f6:	jmp    421200 <__flatcc_fb_parse@@Base+0x5190>
  41e8fb:	mov    r15,r14
  41e8fe:	xchg   ax,ax
  41e900:	movzx  eax,BYTE PTR [r15+0x1]
  41e905:	add    r15,0x1
  41e909:	mov    ecx,eax
  41e90b:	add    cl,0xd0
  41e90e:	cmp    cl,0xa
  41e911:	jb     41e900 <__flatcc_fb_parse@@Base+0x2890>
  41e913:	mov    rbx,r15
  41e916:	cmp    al,0x2e
  41e918:	jne    41e937 <__flatcc_fb_parse@@Base+0x28c7>
  41e91a:	nop    WORD PTR [rax+rax*1+0x0]
  41e920:	cmp    r12,r15
  41e923:	je     41fcba <__flatcc_fb_parse@@Base+0x3c4a>
  41e929:	mov    al,BYTE PTR [r15+0x1]
  41e92d:	add    r15,0x1
  41e931:	add    al,0xd0
  41e933:	cmp    al,0xa
  41e935:	jb     41e920 <__flatcc_fb_parse@@Base+0x28b0>
  41e937:	cmp    r15,r13
  41e93a:	je     41fcba <__flatcc_fb_parse@@Base+0x3c4a>
  41e940:	mov    al,BYTE PTR [r15]
  41e943:	or     al,0x20
  41e945:	cmp    al,0x65
  41e947:	jne    41fcbd <__flatcc_fb_parse@@Base+0x3c4d>
  41e94d:	lea    rax,[r15+0x1]
  41e951:	mov    rcx,r13
  41e954:	cmp    rax,r13
  41e957:	je     41e96b <__flatcc_fb_parse@@Base+0x28fb>
  41e959:	mov    dl,BYTE PTR [rax]
  41e95b:	mov    rcx,rax
  41e95e:	cmp    dl,0x2b
  41e961:	je     41e96b <__flatcc_fb_parse@@Base+0x28fb>
  41e963:	cmp    dl,0x2d
  41e966:	je     41e96b <__flatcc_fb_parse@@Base+0x28fb>
  41e968:	mov    rcx,r15
  41e96b:	mov    r15,rcx
  41e96e:	xchg   ax,ax
  41e970:	cmp    r12,r15
  41e973:	je     41fcba <__flatcc_fb_parse@@Base+0x3c4a>
  41e979:	movzx  eax,BYTE PTR [r15+0x1]
  41e97e:	add    r15,0x1
  41e982:	add    al,0xd0
  41e984:	cmp    al,0xa
  41e986:	jb     41e970 <__flatcc_fb_parse@@Base+0x2900>
  41e988:	jmp    41fcbd <__flatcc_fb_parse@@Base+0x3c4d>
  41e98d:	cmp    rax,0x65746138
  41e993:	jg     41eb5f <__flatcc_fb_parse@@Base+0x2aef>
  41e999:	cmp    rax,0x6570723b
  41e99f:	je     41ef79 <__flatcc_fb_parse@@Base+0x2f09>
  41e9a5:	cmp    rax,0x65727434
  41e9ab:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e9b1:	cmp    DWORD PTR [r14],0x65757274
  41e9b8:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e9be:	mov    r14,rbx
  41e9c1:	mov    r13,0xfffffffffffffc24
  41e9c8:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41e9cd:	cmp    rax,0x65616634
  41e9d3:	jg     41eb93 <__flatcc_fb_parse@@Base+0x2b23>
  41e9d9:	cmp    rax,0x38697535
  41e9df:	je     41efbc <__flatcc_fb_parse@@Base+0x2f4c>
  41e9e5:	cmp    rax,0x386e6934
  41e9eb:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e9f1:	cmp    DWORD PTR [r14],0x38746e69
  41e9f8:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41e9fe:	mov    r14,rbx
  41ea01:	mov    r13,0xfffffffffffffc1f
  41ea08:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ea0d:	cmp    rax,0x7269663e
  41ea13:	jg     41ebdc <__flatcc_fb_parse@@Base+0x2b6c>
  41ea19:	cmp    rax,0x6e69663e
  41ea1f:	je     41efe5 <__flatcc_fb_parse@@Base+0x2f75>
  41ea25:	cmp    rax,0x6e6e7535
  41ea2b:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ea31:	mov    eax,DWORD PTR [r14]
  41ea34:	mov    ecx,0x6f696e75
  41ea39:	xor    eax,ecx
  41ea3b:	movzx  ecx,BYTE PTR [r14+0x4]
  41ea40:	xor    ecx,0x6e
  41ea43:	or     ecx,eax
  41ea45:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ea4b:	mov    r14,rbx
  41ea4e:	mov    r13,0xfffffffffffffc30
  41ea55:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ea5a:	cmp    rax,0x36697535
  41ea60:	jg     41ed17 <__flatcc_fb_parse@@Base+0x2ca7>
  41ea66:	cmp    rax,0x346c6637
  41ea6c:	je     41f028 <__flatcc_fb_parse@@Base+0x2fb8>
  41ea72:	cmp    rax,0x346e6935
  41ea78:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ea7e:	mov    eax,DWORD PTR [r14]
  41ea81:	mov    ecx,0x36746e69
  41ea86:	xor    eax,ecx
  41ea88:	movzx  ecx,BYTE PTR [r14+0x4]
  41ea8d:	xor    ecx,0x34
  41ea90:	or     ecx,eax
  41ea92:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ea98:	mov    r14,rbx
  41ea9b:	mov    r13,0xfffffffffffffc22
  41eaa2:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41eaa7:	lea    r15,[r14+0x1]
  41eaab:	cmp    r15,r13
  41eaae:	je     41ed58 <__flatcc_fb_parse@@Base+0x2ce8>
  41eab4:	cmp    BYTE PTR [r15],0x3d
  41eab8:	jne    41ed58 <__flatcc_fb_parse@@Base+0x2ce8>
  41eabe:	mov    rdi,QWORD PTR [rbp+0x0]
  41eac2:	movsxd rcx,DWORD PTR [r10]
  41eac5:	lea    r15,[rcx+rcx*4]
  41eac9:	lea    rdx,[rdi+r15*8]
  41eacd:	mov    QWORD PTR [r9],rdx
  41ead0:	mov    rax,QWORD PTR [rsi]
  41ead3:	cmp    rax,rdx
  41ead6:	jne    41eb40 <__flatcc_fb_parse@@Base+0x2ad0>
  41ead8:	lea    eax,[rcx+rcx*1]
  41eadb:	test   ecx,ecx
  41eadd:	mov    ecx,0x400
  41eae2:	cmove  eax,ecx
  41eae5:	mov    DWORD PTR [r10],eax
  41eae8:	cdqe   
  41eaea:	shl    rax,0x3
  41eaee:	lea    rsi,[rax+rax*4]
  41eaf2:	mov    r12,rbp
  41eaf5:	mov    rbp,r10
  41eaf8:	call   4061c0 <realloc@plt>
  41eafd:	mov    QWORD PTR [r12],rax
  41eb01:	test   rax,rax
  41eb04:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41eb0a:	movsxd rcx,DWORD PTR [rbp+0x0]
  41eb0e:	lea    rcx,[rcx+rcx*4]
  41eb12:	lea    rcx,[rax+rcx*8]
  41eb16:	mov    r9,QWORD PTR [rsp]
  41eb1a:	mov    QWORD PTR [r9],rcx
  41eb1d:	lea    rax,[rax+r15*8]
  41eb21:	mov    rsi,QWORD PTR [rsp+0x20]
  41eb26:	mov    QWORD PTR [rsi],rax
  41eb29:	mov    r11,QWORD PTR [rsp+0x18]
  41eb2e:	mov    r8,QWORD PTR [rsp+0x8]
  41eb33:	mov    r10,rbp
  41eb36:	mov    rbp,QWORD PTR [rsp+0x10]
  41eb3b:	mov    r12,QWORD PTR [rsp+0x28]
  41eb40:	lea    r15,[r14+0x2]
  41eb44:	or     rbx,0x3d00
  41eb4b:	mov    QWORD PTR [rax+0x20],rbx
  41eb4f:	mov    QWORD PTR [rax],r14
  41eb52:	mov    QWORD PTR [rax+0x8],0x2
  41eb5a:	jmp    421200 <__flatcc_fb_parse@@Base+0x5190>
  41eb5f:	cmp    rax,0x65746139
  41eb65:	je     41f06b <__flatcc_fb_parse@@Base+0x2ffb>
  41eb6b:	cmp    rax,0x65796234
  41eb71:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41eb77:	cmp    DWORD PTR [r14],0x65747962
  41eb7e:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41eb84:	mov    r14,rbx
  41eb87:	mov    r13,0xfffffffffffffc1a
  41eb8e:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41eb93:	cmp    rax,0x65616635
  41eb99:	je     41f09c <__flatcc_fb_parse@@Base+0x302c>
  41eb9f:	cmp    rax,0x65616e39
  41eba5:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ebab:	mov    rax,QWORD PTR [r14]
  41ebae:	movabs rcx,0x63617073656d616e
  41ebb8:	xor    rax,rcx
  41ebbb:	movzx  ecx,BYTE PTR [r14+0x8]
  41ebc0:	xor    rcx,0x65
  41ebc4:	or     rcx,rax
  41ebc7:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ebcd:	mov    r14,rbx
  41ebd0:	mov    r13,0xfffffffffffffc37
  41ebd7:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ebdc:	cmp    rax,0x7269663f
  41ebe2:	je     41f0c5 <__flatcc_fb_parse@@Base+0x3055>
  41ebe8:	cmp    rax,0x74687335
  41ebee:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ebf4:	mov    eax,DWORD PTR [r14]
  41ebf7:	mov    ecx,0x726f6873
  41ebfc:	xor    eax,ecx
  41ebfe:	movzx  ecx,BYTE PTR [r14+0x4]
  41ec03:	xor    ecx,0x74
  41ec06:	or     ecx,eax
  41ec08:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ec0e:	mov    r14,rbx
  41ec11:	mov    r13,0xfffffffffffffc28
  41ec18:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ec1d:	cmp    rax,0x676c7535
  41ec23:	je     41f108 <__flatcc_fb_parse@@Base+0x3098>
  41ec29:	cmp    rax,0x676f6c34
  41ec2f:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ec35:	cmp    DWORD PTR [r14],0x676e6f6c
  41ec3c:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ec42:	mov    r14,rbx
  41ec45:	mov    r13,0xfffffffffffffc23
  41ec4c:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ec51:	cmp    rax,0x65617435
  41ec57:	je     41f131 <__flatcc_fb_parse@@Base+0x30c1>
  41ec5d:	cmp    rax,0x65627535
  41ec63:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ec69:	mov    eax,DWORD PTR [r14]
  41ec6c:	mov    ecx,0x74796275
  41ec71:	xor    eax,ecx
  41ec73:	movzx  ecx,BYTE PTR [r14+0x4]
  41ec78:	xor    ecx,0x65
  41ec7b:	or     ecx,eax
  41ec7d:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ec83:	mov    r14,rbx
  41ec86:	mov    r13,0xfffffffffffffc2a
  41ec8d:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ec92:	cmp    rax,0x74697534
  41ec98:	je     41f153 <__flatcc_fb_parse@@Base+0x30e3>
  41ec9e:	cmp    rax,0x746c6635
  41eca4:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ecaa:	mov    eax,DWORD PTR [r14]
  41ecad:	mov    ecx,0x616f6c66
  41ecb2:	xor    eax,ecx
  41ecb4:	movzx  ecx,BYTE PTR [r14+0x4]
  41ecb9:	xor    ecx,0x74
  41ecbc:	or     ecx,eax
  41ecbe:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ecc4:	mov    r14,rbx
  41ecc7:	mov    r13,0xfffffffffffffc27
  41ecce:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ecd3:	cmp    rax,0x326e6935
  41ecd9:	je     41f168 <__flatcc_fb_parse@@Base+0x30f8>
  41ecdf:	cmp    rax,0x34697536
  41ece5:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41eceb:	mov    eax,DWORD PTR [r14]
  41ecee:	mov    ecx,0x746e6975
  41ecf3:	xor    eax,ecx
  41ecf5:	movzx  ecx,WORD PTR [r14+0x4]
  41ecfa:	xor    ecx,0x3436
  41ed00:	or     ecx,eax
  41ed02:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ed08:	mov    r14,rbx
  41ed0b:	mov    r13,0xfffffffffffffc2e
  41ed12:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ed17:	cmp    rax,0x36697536
  41ed1d:	je     41f18a <__flatcc_fb_parse@@Base+0x311a>
  41ed23:	cmp    rax,0x366e6935
  41ed29:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ed2f:	mov    eax,DWORD PTR [r14]
  41ed32:	mov    ecx,0x31746e69
  41ed37:	xor    eax,ecx
  41ed39:	movzx  ecx,BYTE PTR [r14+0x4]
  41ed3e:	xor    ecx,0x36
  41ed41:	or     ecx,eax
  41ed43:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ed49:	mov    r14,rbx
  41ed4c:	mov    r13,0xfffffffffffffc20
  41ed53:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ed58:	mov    rdi,QWORD PTR [rbp+0x0]
  41ed5c:	movsxd rcx,DWORD PTR [r10]
  41ed5f:	lea    r12,[rcx+rcx*4]
  41ed63:	lea    rdx,[rdi+r12*8]
  41ed67:	mov    QWORD PTR [r9],rdx
  41ed6a:	mov    rax,QWORD PTR [rsi]
  41ed6d:	cmp    rax,rdx
  41ed70:	jne    41edd6 <__flatcc_fb_parse@@Base+0x2d66>
  41ed72:	lea    eax,[rcx+rcx*1]
  41ed75:	test   ecx,ecx
  41ed77:	mov    ecx,0x400
  41ed7c:	cmove  eax,ecx
  41ed7f:	mov    DWORD PTR [r10],eax
  41ed82:	cdqe   
  41ed84:	shl    rax,0x3
  41ed88:	lea    rsi,[rax+rax*4]
  41ed8c:	mov    rbp,r10
  41ed8f:	call   4061c0 <realloc@plt>
  41ed94:	mov    rcx,QWORD PTR [rsp+0x10]
  41ed99:	mov    QWORD PTR [rcx],rax
  41ed9c:	test   rax,rax
  41ed9f:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41eda5:	movsxd rcx,DWORD PTR [rbp+0x0]
  41eda9:	lea    rcx,[rcx+rcx*4]
  41edad:	lea    rcx,[rax+rcx*8]
  41edb1:	mov    r9,QWORD PTR [rsp]
  41edb5:	mov    QWORD PTR [r9],rcx
  41edb8:	lea    rax,[rax+r12*8]
  41edbc:	mov    rsi,QWORD PTR [rsp+0x20]
  41edc1:	mov    QWORD PTR [rsi],rax
  41edc4:	mov    r11,QWORD PTR [rsp+0x18]
  41edc9:	mov    r8,QWORD PTR [rsp+0x8]
  41edce:	mov    r10,rbp
  41edd1:	mov    rbp,QWORD PTR [rsp+0x10]
  41edd6:	mov    QWORD PTR [rax+0x20],rbx
  41edda:	mov    QWORD PTR [rax],r14
  41eddd:	mov    QWORD PTR [rax+0x8],0x1
  41ede5:	mov    rcx,QWORD PTR [r8]
  41ede8:	mov    QWORD PTR [rax+0x10],rcx
  41edec:	add    r14,0x1
  41edf0:	sub    r14,QWORD PTR [r11]
  41edf3:	mov    QWORD PTR [rax+0x18],r14
  41edf7:	add    rax,0x28
  41edfb:	mov    QWORD PTR [rsi],rax
  41edfe:	mov    r12,QWORD PTR [rsp+0x28]
  41ee03:	jmp    421219 <__flatcc_fb_parse@@Base+0x51a9>
  41ee08:	add    r14,0x1
  41ee0c:	cmp    r14,r13
  41ee0f:	je     4220b7 <__flatcc_fb_parse@@Base+0x6047>
  41ee15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee1f:	nop
  41ee20:	movzx  eax,BYTE PTR [r14]
  41ee24:	cmp    al,0x20
  41ee26:	je     41ee30 <__flatcc_fb_parse@@Base+0x2dc0>
  41ee28:	cmp    al,0x9
  41ee2a:	jne    4200af <__flatcc_fb_parse@@Base+0x403f>
  41ee30:	add    r14,0x1
  41ee34:	cmp    r13,r14
  41ee37:	jne    41ee20 <__flatcc_fb_parse@@Base+0x2db0>
  41ee39:	jmp    4220b7 <__flatcc_fb_parse@@Base+0x6047>
  41ee3e:	mov    eax,DWORD PTR [r14]
  41ee41:	mov    ecx,0x69727473
  41ee46:	xor    eax,ecx
  41ee48:	movzx  ecx,WORD PTR [r14+0x4]
  41ee4d:	xor    ecx,0x676e
  41ee53:	or     ecx,eax
  41ee55:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ee5b:	mov    r14,rbx
  41ee5e:	mov    r13,0xfffffffffffffc32
  41ee65:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ee6a:	cmp    DWORD PTR [r14],0x6c6f6f62
  41ee71:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ee77:	mov    r14,rbx
  41ee7a:	mov    r13,0xfffffffffffffc19
  41ee81:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ee86:	mov    edx,0x7
  41ee8b:	lea    rdi,[rip+0x27fa5]        # 446e37 <fb_schema_table_deleted@@Base+0x707>
  41ee92:	mov    rsi,r14
  41ee95:	call   406130 <memcmp@plt>
  41ee9a:	mov    r10,QWORD PTR [rsp+0x30]
  41ee9f:	mov    r9,QWORD PTR [rsp]
  41eea3:	mov    r8,QWORD PTR [rsp+0x8]
  41eea8:	mov    r11,QWORD PTR [rsp+0x18]
  41eead:	mov    rsi,QWORD PTR [rsp+0x20]
  41eeb2:	test   eax,eax
  41eeb4:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41eeba:	mov    r14,rbx
  41eebd:	mov    r13,0xfffffffffffffc35
  41eec4:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41eec9:	mov    eax,DWORD PTR [r14]
  41eecc:	mov    ecx,0x62756f64
  41eed1:	xor    eax,ecx
  41eed3:	movzx  ecx,WORD PTR [r14+0x4]
  41eed8:	xor    ecx,0x656c
  41eede:	or     ecx,eax
  41eee0:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41eee6:	mov    r14,rbx
  41eee9:	mov    r13,0xfffffffffffffc31
  41eef0:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41eef5:	mov    eax,DWORD PTR [r14]
  41eef8:	mov    ecx,0x75727473
  41eefd:	xor    eax,ecx
  41eeff:	movzx  ecx,WORD PTR [r14+0x4]
  41ef04:	xor    ecx,0x7463
  41ef0a:	or     ecx,eax
  41ef0c:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ef12:	mov    r14,rbx
  41ef15:	mov    r13,0xfffffffffffffc33
  41ef1c:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ef21:	mov    eax,DWORD PTR [r14]
  41ef24:	mov    ecx,0x6f687375
  41ef29:	xor    eax,ecx
  41ef2b:	movzx  ecx,WORD PTR [r14+0x4]
  41ef30:	xor    ecx,0x7472
  41ef36:	or     ecx,eax
  41ef38:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ef3e:	mov    r14,rbx
  41ef41:	mov    r13,0xfffffffffffffc34
  41ef48:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ef4d:	mov    eax,DWORD PTR [r14]
  41ef50:	mov    ecx,0x746e6975
  41ef55:	xor    eax,ecx
  41ef57:	movzx  ecx,WORD PTR [r14+0x4]
  41ef5c:	xor    ecx,0x3233
  41ef62:	or     ecx,eax
  41ef64:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41ef6a:	mov    r14,rbx
  41ef6d:	mov    r13,0xfffffffffffffc2d
  41ef74:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41ef79:	mov    edx,0xb
  41ef7e:	lea    rdi,[rip+0x27ed8]        # 446e5d <fb_schema_table_deleted@@Base+0x72d>
  41ef85:	mov    rsi,r14
  41ef88:	call   406130 <memcmp@plt>
  41ef8d:	mov    r10,QWORD PTR [rsp+0x30]
  41ef92:	mov    r9,QWORD PTR [rsp]
  41ef96:	mov    r8,QWORD PTR [rsp+0x8]
  41ef9b:	mov    r11,QWORD PTR [rsp+0x18]
  41efa0:	mov    rsi,QWORD PTR [rsp+0x20]
  41efa5:	test   eax,eax
  41efa7:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41efad:	mov    r14,rbx
  41efb0:	mov    r13,0xfffffffffffffc39
  41efb7:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41efbc:	mov    eax,DWORD PTR [r14]
  41efbf:	mov    ecx,0x746e6975
  41efc4:	xor    eax,ecx
  41efc6:	movzx  ecx,BYTE PTR [r14+0x4]
  41efcb:	xor    ecx,0x38
  41efce:	or     ecx,eax
  41efd0:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41efd6:	mov    r14,rbx
  41efd9:	mov    r13,0xfffffffffffffc2b
  41efe0:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41efe5:	mov    edx,0xe
  41efea:	lea    rdi,[rip+0x27e78]        # 446e69 <fb_schema_table_deleted@@Base+0x739>
  41eff1:	mov    rsi,r14
  41eff4:	call   406130 <memcmp@plt>
  41eff9:	mov    r10,QWORD PTR [rsp+0x30]
  41effe:	mov    r9,QWORD PTR [rsp]
  41f002:	mov    r8,QWORD PTR [rsp+0x8]
  41f007:	mov    r11,QWORD PTR [rsp+0x18]
  41f00c:	mov    rsi,QWORD PTR [rsp+0x20]
  41f011:	test   eax,eax
  41f013:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f019:	mov    r14,rbx
  41f01c:	mov    r13,0xfffffffffffffc3a
  41f023:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f028:	mov    edx,0x7
  41f02d:	lea    rdi,[rip+0x27dfb]        # 446e2f <fb_schema_table_deleted@@Base+0x6ff>
  41f034:	mov    rsi,r14
  41f037:	call   406130 <memcmp@plt>
  41f03c:	mov    r10,QWORD PTR [rsp+0x30]
  41f041:	mov    r9,QWORD PTR [rsp]
  41f045:	mov    r8,QWORD PTR [rsp+0x8]
  41f04a:	mov    r11,QWORD PTR [rsp+0x18]
  41f04f:	mov    rsi,QWORD PTR [rsp+0x20]
  41f054:	test   eax,eax
  41f056:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f05c:	mov    r14,rbx
  41f05f:	mov    r13,0xfffffffffffffc1d
  41f066:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f06b:	mov    rax,QWORD PTR [r14]
  41f06e:	movabs rcx,0x7475626972747461
  41f078:	xor    rax,rcx
  41f07b:	movzx  ecx,BYTE PTR [r14+0x8]
  41f080:	xor    rcx,0x65
  41f084:	or     rcx,rax
  41f087:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f08d:	mov    r14,rbx
  41f090:	mov    r13,0xfffffffffffffc36
  41f097:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f09c:	mov    eax,DWORD PTR [r14]
  41f09f:	mov    ecx,0x736c6166
  41f0a4:	xor    eax,ecx
  41f0a6:	movzx  ecx,BYTE PTR [r14+0x4]
  41f0ab:	xor    ecx,0x65
  41f0ae:	or     ecx,eax
  41f0b0:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f0b6:	mov    r14,rbx
  41f0b9:	mov    r13,0xfffffffffffffc26
  41f0c0:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f0c5:	mov    edx,0xf
  41f0ca:	lea    rdi,[rip+0x27da7]        # 446e78 <fb_schema_table_deleted@@Base+0x748>
  41f0d1:	mov    rsi,r14
  41f0d4:	call   406130 <memcmp@plt>
  41f0d9:	mov    r10,QWORD PTR [rsp+0x30]
  41f0de:	mov    r9,QWORD PTR [rsp]
  41f0e2:	mov    r8,QWORD PTR [rsp+0x8]
  41f0e7:	mov    r11,QWORD PTR [rsp+0x18]
  41f0ec:	mov    rsi,QWORD PTR [rsp+0x20]
  41f0f1:	test   eax,eax
  41f0f3:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f0f9:	mov    r14,rbx
  41f0fc:	mov    r13,0xfffffffffffffc3b
  41f103:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f108:	mov    eax,DWORD PTR [r14]
  41f10b:	mov    ecx,0x6e6f6c75
  41f110:	xor    eax,ecx
  41f112:	movzx  ecx,BYTE PTR [r14+0x4]
  41f117:	xor    ecx,0x67
  41f11a:	or     ecx,eax
  41f11c:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f122:	mov    r14,rbx
  41f125:	mov    r13,0xfffffffffffffc2f
  41f12c:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f131:	mov    eax,DWORD PTR [r14]
  41f134:	mov    ecx,0x6c626174
  41f139:	xor    eax,ecx
  41f13b:	movzx  ecx,BYTE PTR [r14+0x4]
  41f140:	xor    ecx,0x65
  41f143:	or     ecx,eax
  41f145:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f147:	mov    r14,rbx
  41f14a:	mov    r13,0xfffffffffffffc29
  41f151:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f153:	cmp    DWORD PTR [r14],0x746e6975
  41f15a:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f15c:	mov    r14,rbx
  41f15f:	mov    r13,0xfffffffffffffc25
  41f166:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f168:	mov    eax,DWORD PTR [r14]
  41f16b:	mov    ecx,0x33746e69
  41f170:	xor    eax,ecx
  41f172:	movzx  ecx,BYTE PTR [r14+0x4]
  41f177:	xor    ecx,0x32
  41f17a:	or     ecx,eax
  41f17c:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x3140>
  41f17e:	mov    r14,rbx
  41f181:	mov    r13,0xfffffffffffffc21
  41f188:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  41f18a:	mov    eax,DWORD PTR [r14]
  41f18d:	mov    ecx,0x746e6975
  41f192:	xor    eax,ecx
  41f194:	movzx  ecx,WORD PTR [r14+0x4]
  41f199:	xor    ecx,0x3631
  41f19f:	or     ecx,eax
  41f1a1:	je     4202f3 <__flatcc_fb_parse@@Base+0x4283>
  41f1a7:	nop    WORD PTR [rax+rax*1+0x0]
  41f1b0:	mov    r14,rbx
  41f1b3:	mov    r13d,0x9
  41f1b9:	mov    rdi,QWORD PTR [rbp+0x0]
  41f1bd:	movsxd rcx,DWORD PTR [r10]
  41f1c0:	lea    rbx,[rcx+rcx*4]
  41f1c4:	lea    rdx,[rdi+rbx*8]
  41f1c8:	mov    QWORD PTR [r9],rdx
  41f1cb:	mov    rax,QWORD PTR [rsi]
  41f1ce:	cmp    rax,rdx
  41f1d1:	jne    41f23b <__flatcc_fb_parse@@Base+0x31cb>
  41f1d3:	lea    eax,[rcx+rcx*1]
  41f1d6:	test   ecx,ecx
  41f1d8:	mov    ecx,0x400
  41f1dd:	cmove  eax,ecx
  41f1e0:	mov    DWORD PTR [r10],eax
  41f1e3:	cdqe   
  41f1e5:	shl    rax,0x3
  41f1e9:	lea    rsi,[rax+rax*4]
  41f1ed:	mov    r12,rbp
  41f1f0:	mov    rbp,r10
  41f1f3:	call   4061c0 <realloc@plt>
  41f1f8:	mov    QWORD PTR [r12],rax
  41f1fc:	test   rax,rax
  41f1ff:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f205:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f209:	lea    rcx,[rcx+rcx*4]
  41f20d:	lea    rcx,[rax+rcx*8]
  41f211:	mov    r9,QWORD PTR [rsp]
  41f215:	mov    QWORD PTR [r9],rcx
  41f218:	lea    rax,[rax+rbx*8]
  41f21c:	mov    rsi,QWORD PTR [rsp+0x20]
  41f221:	mov    QWORD PTR [rsi],rax
  41f224:	mov    r11,QWORD PTR [rsp+0x18]
  41f229:	mov    r8,QWORD PTR [rsp+0x8]
  41f22e:	mov    r10,rbp
  41f231:	mov    rbp,QWORD PTR [rsp+0x10]
  41f236:	mov    r12,QWORD PTR [rsp+0x28]
  41f23b:	mov    QWORD PTR [rax+0x20],r13
  41f23f:	mov    rdx,QWORD PTR [rsp+0x48]
  41f244:	mov    QWORD PTR [rax],rdx
  41f247:	mov    QWORD PTR [rax+0x8],r14
  41f24b:	mov    rcx,QWORD PTR [r8]
  41f24e:	mov    QWORD PTR [rax+0x10],rcx
  41f252:	add    rdx,0x1
  41f256:	sub    rdx,QWORD PTR [r11]
  41f259:	mov    QWORD PTR [rax+0x18],rdx
  41f25d:	add    rax,0x28
  41f261:	mov    QWORD PTR [rsi],rax
  41f264:	mov    r13,QWORD PTR [rsp+0x40]
  41f269:	jmp    421219 <__flatcc_fb_parse@@Base+0x51a9>
  41f26e:	lea    r15,[r14+0x1]
  41f272:	cmp    r15,r13
  41f275:	je     420302 <__flatcc_fb_parse@@Base+0x4292>
  41f27b:	movsx  eax,BYTE PTR [r15]
  41f27f:	cmp    eax,0x3d
  41f282:	je     420d19 <__flatcc_fb_parse@@Base+0x4ca9>
  41f288:	cmp    eax,0x3c
  41f28b:	je     420da6 <__flatcc_fb_parse@@Base+0x4d36>
  41f291:	cmp    eax,0x2d
  41f294:	jne    420302 <__flatcc_fb_parse@@Base+0x4292>
  41f29a:	mov    rdi,QWORD PTR [rbp+0x0]
  41f29e:	movsxd rcx,DWORD PTR [r10]
  41f2a1:	lea    rbx,[rcx+rcx*4]
  41f2a5:	lea    rdx,[rdi+rbx*8]
  41f2a9:	mov    QWORD PTR [r9],rdx
  41f2ac:	mov    rax,QWORD PTR [rsi]
  41f2af:	cmp    rax,rdx
  41f2b2:	jne    41f316 <__flatcc_fb_parse@@Base+0x32a6>
  41f2b4:	lea    eax,[rcx+rcx*1]
  41f2b7:	test   ecx,ecx
  41f2b9:	mov    ecx,0x400
  41f2be:	cmove  eax,ecx
  41f2c1:	mov    DWORD PTR [r10],eax
  41f2c4:	cdqe   
  41f2c6:	shl    rax,0x3
  41f2ca:	lea    rsi,[rax+rax*4]
  41f2ce:	mov    r15,rbp
  41f2d1:	mov    rbp,r10
  41f2d4:	call   4061c0 <realloc@plt>
  41f2d9:	mov    QWORD PTR [r15],rax
  41f2dc:	test   rax,rax
  41f2df:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f2e5:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f2e9:	lea    rcx,[rcx+rcx*4]
  41f2ed:	lea    rcx,[rax+rcx*8]
  41f2f1:	mov    r9,QWORD PTR [rsp]
  41f2f5:	mov    QWORD PTR [r9],rcx
  41f2f8:	lea    rax,[rax+rbx*8]
  41f2fc:	mov    rsi,QWORD PTR [rsp+0x20]
  41f301:	mov    QWORD PTR [rsi],rax
  41f304:	mov    r11,QWORD PTR [rsp+0x18]
  41f309:	mov    r8,QWORD PTR [rsp+0x8]
  41f30e:	mov    r10,rbp
  41f311:	mov    rbp,QWORD PTR [rsp+0x10]
  41f316:	lea    r15,[r14+0x2]
  41f31a:	mov    QWORD PTR [rax+0x20],0x2d3c
  41f322:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41f327:	lea    r15,[r14+0x1]
  41f32b:	cmp    r15,r13
  41f32e:	je     4200b7 <__flatcc_fb_parse@@Base+0x4047>
  41f334:	movsx  eax,BYTE PTR [r15]
  41f338:	cmp    eax,0x3a
  41f33b:	je     420636 <__flatcc_fb_parse@@Base+0x45c6>
  41f341:	cmp    eax,0x3d
  41f344:	jne    4200b7 <__flatcc_fb_parse@@Base+0x4047>
  41f34a:	mov    rdi,QWORD PTR [rbp+0x0]
  41f34e:	movsxd rcx,DWORD PTR [r10]
  41f351:	lea    rbx,[rcx+rcx*4]
  41f355:	lea    rdx,[rdi+rbx*8]
  41f359:	mov    QWORD PTR [r9],rdx
  41f35c:	mov    rax,QWORD PTR [rsi]
  41f35f:	cmp    rax,rdx
  41f362:	jne    41f3c6 <__flatcc_fb_parse@@Base+0x3356>
  41f364:	lea    eax,[rcx+rcx*1]
  41f367:	test   ecx,ecx
  41f369:	mov    ecx,0x400
  41f36e:	cmove  eax,ecx
  41f371:	mov    DWORD PTR [r10],eax
  41f374:	cdqe   
  41f376:	shl    rax,0x3
  41f37a:	lea    rsi,[rax+rax*4]
  41f37e:	mov    r15,rbp
  41f381:	mov    rbp,r10
  41f384:	call   4061c0 <realloc@plt>
  41f389:	mov    QWORD PTR [r15],rax
  41f38c:	test   rax,rax
  41f38f:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f395:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f399:	lea    rcx,[rcx+rcx*4]
  41f39d:	lea    rcx,[rax+rcx*8]
  41f3a1:	mov    r9,QWORD PTR [rsp]
  41f3a5:	mov    QWORD PTR [r9],rcx
  41f3a8:	lea    rax,[rax+rbx*8]
  41f3ac:	mov    rsi,QWORD PTR [rsp+0x20]
  41f3b1:	mov    QWORD PTR [rsi],rax
  41f3b4:	mov    r11,QWORD PTR [rsp+0x18]
  41f3b9:	mov    r8,QWORD PTR [rsp+0x8]
  41f3be:	mov    r10,rbp
  41f3c1:	mov    rbp,QWORD PTR [rsp+0x10]
  41f3c6:	lea    r15,[r14+0x2]
  41f3ca:	mov    QWORD PTR [rax+0x20],0x3d3a
  41f3d2:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41f3d7:	lea    r15,[r14+0x1]
  41f3db:	cmp    r15,r13
  41f3de:	je     420146 <__flatcc_fb_parse@@Base+0x40d6>
  41f3e4:	movsx  eax,BYTE PTR [r15]
  41f3e8:	cmp    eax,0x2b
  41f3eb:	je     4206da <__flatcc_fb_parse@@Base+0x466a>
  41f3f1:	cmp    eax,0x3d
  41f3f4:	jne    420146 <__flatcc_fb_parse@@Base+0x40d6>
  41f3fa:	mov    rdi,QWORD PTR [rbp+0x0]
  41f3fe:	movsxd rcx,DWORD PTR [r10]
  41f401:	lea    rbx,[rcx+rcx*4]
  41f405:	lea    rdx,[rdi+rbx*8]
  41f409:	mov    QWORD PTR [r9],rdx
  41f40c:	mov    rax,QWORD PTR [rsi]
  41f40f:	cmp    rax,rdx
  41f412:	jne    41f476 <__flatcc_fb_parse@@Base+0x3406>
  41f414:	lea    eax,[rcx+rcx*1]
  41f417:	test   ecx,ecx
  41f419:	mov    ecx,0x400
  41f41e:	cmove  eax,ecx
  41f421:	mov    DWORD PTR [r10],eax
  41f424:	cdqe   
  41f426:	shl    rax,0x3
  41f42a:	lea    rsi,[rax+rax*4]
  41f42e:	mov    r15,rbp
  41f431:	mov    rbp,r10
  41f434:	call   4061c0 <realloc@plt>
  41f439:	mov    QWORD PTR [r15],rax
  41f43c:	test   rax,rax
  41f43f:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f445:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f449:	lea    rcx,[rcx+rcx*4]
  41f44d:	lea    rcx,[rax+rcx*8]
  41f451:	mov    r9,QWORD PTR [rsp]
  41f455:	mov    QWORD PTR [r9],rcx
  41f458:	lea    rax,[rax+rbx*8]
  41f45c:	mov    rsi,QWORD PTR [rsp+0x20]
  41f461:	mov    QWORD PTR [rsi],rax
  41f464:	mov    r11,QWORD PTR [rsp+0x18]
  41f469:	mov    r8,QWORD PTR [rsp+0x8]
  41f46e:	mov    r10,rbp
  41f471:	mov    rbp,QWORD PTR [rsp+0x10]
  41f476:	lea    r15,[r14+0x2]
  41f47a:	mov    QWORD PTR [rax+0x20],0x3d2b
  41f482:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41f487:	lea    r15,[r14+0x1]
  41f48b:	cmp    r15,r13
  41f48e:	je     420391 <__flatcc_fb_parse@@Base+0x4321>
  41f494:	movsx  eax,BYTE PTR [r15]
  41f498:	cmp    eax,0x2a
  41f49b:	je     420e56 <__flatcc_fb_parse@@Base+0x4de6>
  41f4a1:	cmp    eax,0x3d
  41f4a4:	je     420e77 <__flatcc_fb_parse@@Base+0x4e07>
  41f4aa:	cmp    eax,0x2f
  41f4ad:	jne    420391 <__flatcc_fb_parse@@Base+0x4321>
  41f4b3:	lea    rbp,[r14+0x2]
  41f4b7:	cmp    rbp,r13
  41f4ba:	je     42161a <__flatcc_fb_parse@@Base+0x55aa>
  41f4c0:	mov    al,BYTE PTR [rbp+0x0]
  41f4c3:	cmp    al,0x2f
  41f4c5:	sete   cl
  41f4c8:	cmp    al,0x21
  41f4ca:	sete   al
  41f4cd:	or     al,cl
  41f4cf:	jmp    42161c <__flatcc_fb_parse@@Base+0x55ac>
  41f4d4:	lea    rbx,[r14+0x1]
  41f4d8:	mov    r15,r14
  41f4db:	cmp    rbx,r13
  41f4de:	je     41e900 <__flatcc_fb_parse@@Base+0x2890>
  41f4e4:	movsx  eax,BYTE PTR [rbx]
  41f4e7:	or     eax,0x20
  41f4ea:	mov    r15,r14
  41f4ed:	cmp    eax,0x78
  41f4f0:	jne    41e900 <__flatcc_fb_parse@@Base+0x2890>
  41f4f6:	lea    rax,[r14+0x2]
  41f4fa:	mov    r15,r13
  41f4fd:	cmp    rax,r13
  41f500:	je     421574 <__flatcc_fb_parse@@Base+0x5504>
  41f506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f510:	movzx  ecx,BYTE PTR [rax]
  41f513:	mov    edx,ecx
  41f515:	add    dl,0xd0
  41f518:	cmp    dl,0xa
  41f51b:	jb     41f52c <__flatcc_fb_parse@@Base+0x34bc>
  41f51d:	or     cl,0x20
  41f520:	add    cl,0x9f
  41f523:	cmp    cl,0x5
  41f526:	ja     421571 <__flatcc_fb_parse@@Base+0x5501>
  41f52c:	add    rax,0x1
  41f530:	cmp    r13,rax
  41f533:	jne    41f510 <__flatcc_fb_parse@@Base+0x34a0>
  41f535:	mov    r15,r13
  41f538:	jmp    421574 <__flatcc_fb_parse@@Base+0x5504>
  41f53d:	lea    r15,[r14+0x1]
  41f541:	cmp    r15,r13
  41f544:	je     4201d5 <__flatcc_fb_parse@@Base+0x4165>
  41f54a:	movsx  eax,BYTE PTR [r15]
  41f54e:	cmp    eax,0x3e
  41f551:	je     420767 <__flatcc_fb_parse@@Base+0x46f7>
  41f557:	cmp    eax,0x3d
  41f55a:	jne    4201d5 <__flatcc_fb_parse@@Base+0x4165>
  41f560:	mov    rdi,QWORD PTR [rbp+0x0]
  41f564:	movsxd rcx,DWORD PTR [r10]
  41f567:	lea    rbx,[rcx+rcx*4]
  41f56b:	lea    rdx,[rdi+rbx*8]
  41f56f:	mov    QWORD PTR [r9],rdx
  41f572:	mov    rax,QWORD PTR [rsi]
  41f575:	cmp    rax,rdx
  41f578:	jne    41f5dc <__flatcc_fb_parse@@Base+0x356c>
  41f57a:	lea    eax,[rcx+rcx*1]
  41f57d:	test   ecx,ecx
  41f57f:	mov    ecx,0x400
  41f584:	cmove  eax,ecx
  41f587:	mov    DWORD PTR [r10],eax
  41f58a:	cdqe   
  41f58c:	shl    rax,0x3
  41f590:	lea    rsi,[rax+rax*4]
  41f594:	mov    r15,rbp
  41f597:	mov    rbp,r10
  41f59a:	call   4061c0 <realloc@plt>
  41f59f:	mov    QWORD PTR [r15],rax
  41f5a2:	test   rax,rax
  41f5a5:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f5ab:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f5af:	lea    rcx,[rcx+rcx*4]
  41f5b3:	lea    rcx,[rax+rcx*8]
  41f5b7:	mov    r9,QWORD PTR [rsp]
  41f5bb:	mov    QWORD PTR [r9],rcx
  41f5be:	lea    rax,[rax+rbx*8]
  41f5c2:	mov    rsi,QWORD PTR [rsp+0x20]
  41f5c7:	mov    QWORD PTR [rsi],rax
  41f5ca:	mov    r11,QWORD PTR [rsp+0x18]
  41f5cf:	mov    r8,QWORD PTR [rsp+0x8]
  41f5d4:	mov    r10,rbp
  41f5d7:	mov    rbp,QWORD PTR [rsp+0x10]
  41f5dc:	lea    r15,[r14+0x2]
  41f5e0:	mov    QWORD PTR [rax+0x20],0x3d3e
  41f5e8:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41f5ed:	lea    rax,[r14+0x1]
  41f5f1:	mov    r15,r13
  41f5f4:	cmp    rax,r13
  41f5f7:	je     41fbcc <__flatcc_fb_parse@@Base+0x3b5c>
  41f5fd:	lea    rcx,[r14+0x2]
  41f601:	cmp    BYTE PTR [r14+0x1],0xa
  41f606:	jmp    41fbc5 <__flatcc_fb_parse@@Base+0x3b55>
  41f60b:	mov    rax,QWORD PTR [rbp+0x0]
  41f60f:	mov    r15,rbp
  41f612:	mov    rbp,r10
  41f615:	mov    r10d,DWORD PTR [r10]
  41f618:	movsxd rcx,r10d
  41f61b:	lea    rbx,[rcx+rcx*4]
  41f61f:	lea    rdx,[rax+rbx*8]
  41f623:	mov    QWORD PTR [r9],rdx
  41f626:	mov    rcx,QWORD PTR [rsi]
  41f629:	cmp    rcx,rdx
  41f62c:	jne    41f688 <__flatcc_fb_parse@@Base+0x3618>
  41f62e:	lea    ecx,[r10+r10*1]
  41f632:	test   r10d,r10d
  41f635:	mov    edx,0x400
  41f63a:	cmove  ecx,edx
  41f63d:	mov    DWORD PTR [rbp+0x0],ecx
  41f640:	movsxd rcx,ecx
  41f643:	shl    rcx,0x3
  41f647:	lea    rsi,[rcx+rcx*4]
  41f64b:	mov    rdi,rax
  41f64e:	call   4061c0 <realloc@plt>
  41f653:	mov    QWORD PTR [r15],rax
  41f656:	test   rax,rax
  41f659:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f65f:	movsxd r10,DWORD PTR [rbp+0x0]
  41f663:	lea    rcx,[r10+r10*4]
  41f667:	lea    rcx,[rax+rcx*8]
  41f66b:	mov    rdx,QWORD PTR [rsp]
  41f66f:	mov    QWORD PTR [rdx],rcx
  41f672:	lea    rcx,[rax+rbx*8]
  41f676:	mov    rsi,QWORD PTR [rsp+0x20]
  41f67b:	mov    QWORD PTR [rsi],rcx
  41f67e:	mov    r11,QWORD PTR [rsp+0x18]
  41f683:	mov    r8,QWORD PTR [rsp+0x8]
  41f688:	lea    rbx,[r14+0x1]
  41f68c:	mov    QWORD PTR [rcx+0x20],0x13
  41f694:	mov    QWORD PTR [rcx],r14
  41f697:	mov    QWORD PTR [rcx+0x8],0x1
  41f69f:	mov    r9,QWORD PTR [r8]
  41f6a2:	mov    QWORD PTR [rcx+0x10],r9
  41f6a6:	mov    r8,QWORD PTR [r11]
  41f6a9:	add    r14,0x1
  41f6ad:	sub    r14,r8
  41f6b0:	mov    QWORD PTR [rcx+0x18],r14
  41f6b4:	jmp    41f6da <__flatcc_fb_parse@@Base+0x366a>
  41f6b6:	mov    QWORD PTR [rcx+0x20],0x12
  41f6be:	mov    QWORD PTR [rcx],r15
  41f6c1:	mov    rdx,rbx
  41f6c4:	sub    rdx,r15
  41f6c7:	mov    QWORD PTR [rcx+0x8],rdx
  41f6cb:	mov    QWORD PTR [rcx+0x10],r9
  41f6cf:	add    r15,0x1
  41f6d3:	sub    r15,r8
  41f6d6:	mov    QWORD PTR [rcx+0x18],r15
  41f6da:	add    rcx,0x28
  41f6de:	mov    QWORD PTR [rsi],rcx
  41f6e1:	mov    r15,rbx
  41f6e4:	jmp    41f730 <__flatcc_fb_parse@@Base+0x36c0>
  41f6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6f0:	add    r15,0x1
  41f6f4:	mov    QWORD PTR [rcx+0x20],0x6
  41f6fc:	mov    QWORD PTR [rcx],r13
  41f6ff:	mov    QWORD PTR [rcx+0x8],0x1
  41f707:	mov    QWORD PTR [rcx+0x10],r9
  41f70b:	add    r13,0x1
  41f70f:	sub    r13,r8
  41f712:	mov    QWORD PTR [rcx+0x18],r13
  41f716:	add    rcx,0x28
  41f71a:	mov    QWORD PTR [rsi],rcx
  41f71d:	mov    rbx,r15
  41f720:	mov    r13,QWORD PTR [rsp+0x40]
  41f725:	jmp    41f730 <__flatcc_fb_parse@@Base+0x36c0>
  41f727:	add    rbp,0x2
  41f72b:	mov    rbx,rbp
  41f72e:	xchg   ax,ax
  41f730:	lea    r14,[rbx-0x1]
  41f734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f73e:	xchg   ax,ax
  41f740:	mov    rbp,rbx
  41f743:	cmp    r13,rbx
  41f746:	je     41f840 <__flatcc_fb_parse@@Base+0x37d0>
  41f74c:	movzx  edx,BYTE PTR [rbp+0x0]
  41f750:	cmp    dl,0x22
  41f753:	je     41fa00 <__flatcc_fb_parse@@Base+0x3990>
  41f759:	cmp    dl,0x5c
  41f75c:	je     41fa00 <__flatcc_fb_parse@@Base+0x3990>
  41f762:	add    r14,0x1
  41f766:	xor    r12d,r12d
  41f769:	cmp    dl,0x20
  41f76c:	jl     41f780 <__flatcc_fb_parse@@Base+0x3710>
  41f76e:	lea    rbx,[rbp+0x1]
  41f772:	cmp    dl,0x7f
  41f775:	jne    41f740 <__flatcc_fb_parse@@Base+0x36d0>
  41f777:	nop    WORD PTR [rax+rax*1+0x0]
  41f780:	cmp    r15,r14
  41f783:	je     41f84f <__flatcc_fb_parse@@Base+0x37df>
  41f789:	movsxd rdx,r10d
  41f78c:	lea    rbx,[rdx+rdx*4]
  41f790:	lea    rdx,[rax+rbx*8]
  41f794:	mov    rdi,QWORD PTR [rsp]
  41f798:	mov    QWORD PTR [rdi],rdx
  41f79b:	cmp    rcx,rdx
  41f79e:	jne    41f80b <__flatcc_fb_parse@@Base+0x379b>
  41f7a0:	lea    ecx,[r10+r10*1]
  41f7a4:	test   r10d,r10d
  41f7a7:	mov    edx,0x400
  41f7ac:	cmove  ecx,edx
  41f7af:	mov    r13,QWORD PTR [rsp+0x30]
  41f7b4:	mov    DWORD PTR [r13+0x0],ecx
  41f7b8:	movsxd rcx,ecx
  41f7bb:	shl    rcx,0x3
  41f7bf:	lea    rsi,[rcx+rcx*4]
  41f7c3:	mov    rdi,rax
  41f7c6:	call   4061c0 <realloc@plt>
  41f7cb:	mov    rcx,QWORD PTR [rsp+0x10]
  41f7d0:	mov    QWORD PTR [rcx],rax
  41f7d3:	test   rax,rax
  41f7d6:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f7dc:	movsxd r10,DWORD PTR [r13+0x0]
  41f7e0:	lea    rcx,[r10+r10*4]
  41f7e4:	lea    rcx,[rax+rcx*8]
  41f7e8:	mov    rdx,QWORD PTR [rsp]
  41f7ec:	mov    QWORD PTR [rdx],rcx
  41f7ef:	lea    rcx,[rax+rbx*8]
  41f7f3:	mov    rsi,QWORD PTR [rsp+0x20]
  41f7f8:	mov    QWORD PTR [rsi],rcx
  41f7fb:	mov    rdx,QWORD PTR [rsp+0x8]
  41f800:	mov    r9,QWORD PTR [rdx]
  41f803:	mov    r11,QWORD PTR [rsp+0x18]
  41f808:	mov    r8,QWORD PTR [r11]
  41f80b:	mov    QWORD PTR [rcx+0x20],0x14
  41f813:	mov    QWORD PTR [rcx],r15
  41f816:	mov    rdx,r14
  41f819:	sub    rdx,r15
  41f81c:	mov    QWORD PTR [rcx+0x8],rdx
  41f820:	mov    QWORD PTR [rcx+0x10],r9
  41f824:	add    r15,0x1
  41f828:	sub    r15,r8
  41f82b:	mov    QWORD PTR [rcx+0x18],r15
  41f82f:	add    rcx,0x28
  41f833:	mov    QWORD PTR [rsi],rcx
  41f836:	mov    r13,r14
  41f839:	jmp    41f852 <__flatcc_fb_parse@@Base+0x37e2>
  41f83b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f840:	mov    r12b,0x1
  41f843:	mov    r14,r13
  41f846:	cmp    r15,r14
  41f849:	jne    41f789 <__flatcc_fb_parse@@Base+0x3719>
  41f84f:	mov    r13,r15
  41f852:	mov    dil,BYTE PTR [r14]
  41f855:	cmp    dil,0x22
  41f859:	je     4204af <__flatcc_fb_parse@@Base+0x443f>
  41f85f:	test   dil,dil
  41f862:	setne  dl
  41f865:	not    r12b
  41f868:	test   r12b,dl
  41f86b:	je     42057d <__flatcc_fb_parse@@Base+0x450d>
  41f871:	cmp    dil,0x5c
  41f875:	mov    r12,QWORD PTR [rsp+0x28]
  41f87a:	jne    41f960 <__flatcc_fb_parse@@Base+0x38f0>
  41f880:	movsxd rdx,r10d
  41f883:	lea    r14,[rdx+rdx*4]
  41f887:	lea    rdx,[rax+r14*8]
  41f88b:	mov    rdi,QWORD PTR [rsp]
  41f88f:	mov    QWORD PTR [rdi],rdx
  41f892:	cmp    rcx,rdx
  41f895:	jne    41f900 <__flatcc_fb_parse@@Base+0x3890>
  41f897:	lea    ecx,[r10+r10*1]
  41f89b:	test   r10d,r10d
  41f89e:	mov    edx,0x400
  41f8a3:	cmove  ecx,edx
  41f8a6:	mov    r15,QWORD PTR [rsp+0x30]
  41f8ab:	mov    DWORD PTR [r15],ecx
  41f8ae:	movsxd rcx,ecx
  41f8b1:	shl    rcx,0x3
  41f8b5:	lea    rsi,[rcx+rcx*4]
  41f8b9:	mov    rdi,rax
  41f8bc:	call   4061c0 <realloc@plt>
  41f8c1:	mov    rcx,QWORD PTR [rsp+0x10]
  41f8c6:	mov    QWORD PTR [rcx],rax
  41f8c9:	test   rax,rax
  41f8cc:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f8d2:	movsxd r10,DWORD PTR [r15]
  41f8d5:	lea    rcx,[r10+r10*4]
  41f8d9:	lea    rcx,[rax+rcx*8]
  41f8dd:	mov    rdx,QWORD PTR [rsp]
  41f8e1:	mov    QWORD PTR [rdx],rcx
  41f8e4:	lea    rcx,[rax+r14*8]
  41f8e8:	mov    rsi,QWORD PTR [rsp+0x20]
  41f8ed:	mov    QWORD PTR [rsi],rcx
  41f8f0:	mov    rdx,QWORD PTR [rsp+0x8]
  41f8f5:	mov    r9,QWORD PTR [rdx]
  41f8f8:	mov    r11,QWORD PTR [rsp+0x18]
  41f8fd:	mov    r8,QWORD PTR [r11]
  41f900:	lea    r15,[rbp+0x1]
  41f904:	mov    QWORD PTR [rcx+0x20],0x15
  41f90c:	mov    QWORD PTR [rcx],r13
  41f90f:	mov    rdx,r15
  41f912:	sub    rdx,r13
  41f915:	mov    QWORD PTR [rcx+0x8],rdx
  41f919:	mov    QWORD PTR [rcx+0x10],r9
  41f91d:	add    r13,0x1
  41f921:	sub    r13,r8
  41f924:	mov    QWORD PTR [rcx+0x18],r13
  41f928:	add    rcx,0x28
  41f92c:	mov    QWORD PTR [rsi],rcx
  41f92f:	cmp    r12,rbp
  41f932:	je     421231 <__flatcc_fb_parse@@Base+0x51c1>
  41f938:	movzx  edi,BYTE PTR [r15]
  41f93c:	cmp    rdi,0x22
  41f940:	mov    r13,QWORD PTR [rsp+0x40]
  41f945:	ja     41fa14 <__flatcc_fb_parse@@Base+0x39a4>
  41f94b:	lea    rdx,[rip+0x2706e]        # 4469c0 <fb_schema_table_deleted@@Base+0x290>
  41f952:	mov    rbx,rdx
  41f955:	movsxd rdx,DWORD PTR [rdx+rdi*4]
  41f959:	add    rdx,rbx
  41f95c:	jmp    rdx
  41f95e:	xchg   ax,ax
  41f960:	mov    r15,r14
  41f963:	cmp    dil,0xd
  41f967:	je     420c4f <__flatcc_fb_parse@@Base+0x4bdf>
  41f96d:	cmp    dil,0xa
  41f971:	je     420c4f <__flatcc_fb_parse@@Base+0x4bdf>
  41f977:	movsxd rdx,r10d
  41f97a:	lea    rbp,[rdx+rdx*4]
  41f97e:	lea    rdx,[rax+rbp*8]
  41f982:	mov    rdi,QWORD PTR [rsp]
  41f986:	mov    QWORD PTR [rdi],rdx
  41f989:	cmp    rcx,rdx
  41f98c:	jne    41f6f0 <__flatcc_fb_parse@@Base+0x3680>
  41f992:	lea    ecx,[r10+r10*1]
  41f996:	test   r10d,r10d
  41f999:	mov    edx,0x400
  41f99e:	cmove  ecx,edx
  41f9a1:	mov    rbx,QWORD PTR [rsp+0x30]
  41f9a6:	mov    DWORD PTR [rbx],ecx
  41f9a8:	movsxd rcx,ecx
  41f9ab:	shl    rcx,0x3
  41f9af:	lea    rsi,[rcx+rcx*4]
  41f9b3:	mov    rdi,rax
  41f9b6:	call   4061c0 <realloc@plt>
  41f9bb:	mov    rcx,QWORD PTR [rsp+0x10]
  41f9c0:	mov    QWORD PTR [rcx],rax
  41f9c3:	test   rax,rax
  41f9c6:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41f9cc:	movsxd r10,DWORD PTR [rbx]
  41f9cf:	lea    rcx,[r10+r10*4]
  41f9d3:	lea    rcx,[rax+rcx*8]
  41f9d7:	mov    rdx,QWORD PTR [rsp]
  41f9db:	mov    QWORD PTR [rdx],rcx
  41f9de:	lea    rcx,[rax+rbp*8]
  41f9e2:	mov    rsi,QWORD PTR [rsp+0x20]
  41f9e7:	mov    QWORD PTR [rsi],rcx
  41f9ea:	mov    rdx,QWORD PTR [rsp+0x8]
  41f9ef:	mov    r9,QWORD PTR [rdx]
  41f9f2:	mov    r11,QWORD PTR [rsp+0x18]
  41f9f7:	mov    r8,QWORD PTR [r11]
  41f9fa:	jmp    41f6f0 <__flatcc_fb_parse@@Base+0x3680>
  41f9ff:	nop
  41fa00:	xor    r12d,r12d
  41fa03:	mov    r14,rbp
  41fa06:	cmp    r15,r14
  41fa09:	jne    41f789 <__flatcc_fb_parse@@Base+0x3719>
  41fa0f:	jmp    41f84f <__flatcc_fb_parse@@Base+0x37df>
  41fa14:	cmp    dil,0x5c
  41fa18:	je     41f727 <__flatcc_fb_parse@@Base+0x36b7>
  41fa1e:	mov    r13,r15
  41fa21:	cmp    dil,0xd
  41fa25:	jne    41f96d <__flatcc_fb_parse@@Base+0x38fd>
  41fa2b:	jmp    420c4f <__flatcc_fb_parse@@Base+0x4bdf>
  41fa30:	mov    rbx,r13
  41fa33:	cmp    QWORD PTR [rsp+0x50],rbp
  41fa38:	je     41fa5e <__flatcc_fb_parse@@Base+0x39ee>
  41fa3a:	lea    rdx,[rbp+0x3]
  41fa3e:	cmp    BYTE PTR [rbp+0x2],0xd
  41fa42:	jmp    41fa56 <__flatcc_fb_parse@@Base+0x39e6>
  41fa44:	mov    rbx,r13
  41fa47:	cmp    QWORD PTR [rsp+0x50],rbp
  41fa4c:	je     41fa5e <__flatcc_fb_parse@@Base+0x39ee>
  41fa4e:	lea    rdx,[rbp+0x3]
  41fa52:	cmp    BYTE PTR [rbp+0x2],0xa
  41fa56:	lea    rbx,[rbp+0x2]
  41fa5a:	cmove  rbx,rdx
  41fa5e:	add    r9,0x1
  41fa62:	mov    rdx,QWORD PTR [rsp+0x8]
  41fa67:	mov    QWORD PTR [rdx],r9
  41fa6a:	mov    QWORD PTR [r11],rbx
  41fa6d:	movsxd rdx,r10d
  41fa70:	lea    r14,[rdx+rdx*4]
  41fa74:	lea    rdx,[rax+r14*8]
  41fa78:	mov    rdi,QWORD PTR [rsp]
  41fa7c:	mov    QWORD PTR [rdi],rdx
  41fa7f:	cmp    rcx,rdx
  41fa82:	je     41fa8c <__flatcc_fb_parse@@Base+0x3a1c>
  41fa84:	mov    r8,rbx
  41fa87:	jmp    41f6b6 <__flatcc_fb_parse@@Base+0x3646>
  41fa8c:	lea    ecx,[r10+r10*1]
  41fa90:	test   r10d,r10d
  41fa93:	mov    edx,0x400
  41fa98:	cmove  ecx,edx
  41fa9b:	mov    rbp,QWORD PTR [rsp+0x30]
  41faa0:	mov    DWORD PTR [rbp+0x0],ecx
  41faa3:	movsxd rcx,ecx
  41faa6:	shl    rcx,0x3
  41faaa:	lea    rsi,[rcx+rcx*4]
  41faae:	mov    rdi,rax
  41fab1:	call   4061c0 <realloc@plt>
  41fab6:	mov    rcx,QWORD PTR [rsp+0x10]
  41fabb:	mov    QWORD PTR [rcx],rax
  41fabe:	test   rax,rax
  41fac1:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fac7:	movsxd r10,DWORD PTR [rbp+0x0]
  41facb:	lea    rcx,[r10+r10*4]
  41facf:	lea    rcx,[rax+rcx*8]
  41fad3:	mov    rdx,QWORD PTR [rsp]
  41fad7:	mov    QWORD PTR [rdx],rcx
  41fada:	lea    rcx,[rax+r14*8]
  41fade:	mov    rsi,QWORD PTR [rsp+0x20]
  41fae3:	mov    QWORD PTR [rsi],rcx
  41fae6:	mov    rdx,QWORD PTR [rsp+0x8]
  41faeb:	mov    r9,QWORD PTR [rdx]
  41faee:	mov    r11,QWORD PTR [rsp+0x18]
  41faf3:	mov    r8,QWORD PTR [r11]
  41faf6:	jmp    41f6b6 <__flatcc_fb_parse@@Base+0x3646>
  41fafb:	lea    rax,[r14+0x1]
  41faff:	mov    r15,r13
  41fb02:	cmp    rax,r13
  41fb05:	je     4208c3 <__flatcc_fb_parse@@Base+0x4853>
  41fb0b:	movsx  ecx,BYTE PTR [rax]
  41fb0e:	cmp    ecx,0x26
  41fb11:	je     420817 <__flatcc_fb_parse@@Base+0x47a7>
  41fb17:	mov    r15,rax
  41fb1a:	cmp    ecx,0x3d
  41fb1d:	jne    4208c3 <__flatcc_fb_parse@@Base+0x4853>
  41fb23:	mov    rdi,QWORD PTR [rbp+0x0]
  41fb27:	movsxd rcx,DWORD PTR [r10]
  41fb2a:	lea    rbx,[rcx+rcx*4]
  41fb2e:	lea    rdx,[rdi+rbx*8]
  41fb32:	mov    QWORD PTR [r9],rdx
  41fb35:	mov    rax,QWORD PTR [rsi]
  41fb38:	cmp    rax,rdx
  41fb3b:	jne    41fb9f <__flatcc_fb_parse@@Base+0x3b2f>
  41fb3d:	lea    eax,[rcx+rcx*1]
  41fb40:	test   ecx,ecx
  41fb42:	mov    ecx,0x400
  41fb47:	cmove  eax,ecx
  41fb4a:	mov    DWORD PTR [r10],eax
  41fb4d:	cdqe   
  41fb4f:	shl    rax,0x3
  41fb53:	lea    rsi,[rax+rax*4]
  41fb57:	mov    r15,rbp
  41fb5a:	mov    rbp,r10
  41fb5d:	call   4061c0 <realloc@plt>
  41fb62:	mov    QWORD PTR [r15],rax
  41fb65:	test   rax,rax
  41fb68:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fb6e:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fb72:	lea    rcx,[rcx+rcx*4]
  41fb76:	lea    rcx,[rax+rcx*8]
  41fb7a:	mov    r9,QWORD PTR [rsp]
  41fb7e:	mov    QWORD PTR [r9],rcx
  41fb81:	lea    rax,[rax+rbx*8]
  41fb85:	mov    rsi,QWORD PTR [rsp+0x20]
  41fb8a:	mov    QWORD PTR [rsi],rax
  41fb8d:	mov    r11,QWORD PTR [rsp+0x18]
  41fb92:	mov    r8,QWORD PTR [rsp+0x8]
  41fb97:	mov    r10,rbp
  41fb9a:	mov    rbp,QWORD PTR [rsp+0x10]
  41fb9f:	lea    r15,[r14+0x2]
  41fba3:	mov    QWORD PTR [rax+0x20],0x3d26
  41fbab:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41fbb0:	lea    rax,[r14+0x1]
  41fbb4:	mov    r15,r13
  41fbb7:	cmp    rax,r13
  41fbba:	je     41fbcc <__flatcc_fb_parse@@Base+0x3b5c>
  41fbbc:	lea    rcx,[r14+0x2]
  41fbc0:	cmp    BYTE PTR [r14+0x1],0xd
  41fbc5:	cmove  rax,rcx
  41fbc9:	mov    r15,rax
  41fbcc:	add    QWORD PTR [r8],0x1
  41fbd0:	mov    QWORD PTR [r11],r15
  41fbd3:	jmp    421220 <__flatcc_fb_parse@@Base+0x51b0>
  41fbd8:	lea    r15,[r14+0x1]
  41fbdc:	cmp    r15,r13
  41fbdf:	je     420420 <__flatcc_fb_parse@@Base+0x43b0>
  41fbe5:	movsx  eax,BYTE PTR [r15]
  41fbe9:	cmp    eax,0x2d
  41fbec:	je     420f04 <__flatcc_fb_parse@@Base+0x4e94>
  41fbf2:	cmp    eax,0x3e
  41fbf5:	je     420f91 <__flatcc_fb_parse@@Base+0x4f21>
  41fbfb:	cmp    eax,0x3d
  41fbfe:	jne    420420 <__flatcc_fb_parse@@Base+0x43b0>
  41fc04:	mov    rdi,QWORD PTR [rbp+0x0]
  41fc08:	movsxd rcx,DWORD PTR [r10]
  41fc0b:	lea    rbx,[rcx+rcx*4]
  41fc0f:	lea    rdx,[rdi+rbx*8]
  41fc13:	mov    QWORD PTR [r9],rdx
  41fc16:	mov    rax,QWORD PTR [rsi]
  41fc19:	cmp    rax,rdx
  41fc1c:	jne    41fc80 <__flatcc_fb_parse@@Base+0x3c10>
  41fc1e:	lea    eax,[rcx+rcx*1]
  41fc21:	test   ecx,ecx
  41fc23:	mov    ecx,0x400
  41fc28:	cmove  eax,ecx
  41fc2b:	mov    DWORD PTR [r10],eax
  41fc2e:	cdqe   
  41fc30:	shl    rax,0x3
  41fc34:	lea    rsi,[rax+rax*4]
  41fc38:	mov    r15,rbp
  41fc3b:	mov    rbp,r10
  41fc3e:	call   4061c0 <realloc@plt>
  41fc43:	mov    QWORD PTR [r15],rax
  41fc46:	test   rax,rax
  41fc49:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fc4f:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fc53:	lea    rcx,[rcx+rcx*4]
  41fc57:	lea    rcx,[rax+rcx*8]
  41fc5b:	mov    r9,QWORD PTR [rsp]
  41fc5f:	mov    QWORD PTR [r9],rcx
  41fc62:	lea    rax,[rax+rbx*8]
  41fc66:	mov    rsi,QWORD PTR [rsp+0x20]
  41fc6b:	mov    QWORD PTR [rsi],rax
  41fc6e:	mov    r11,QWORD PTR [rsp+0x18]
  41fc73:	mov    r8,QWORD PTR [rsp+0x8]
  41fc78:	mov    r10,rbp
  41fc7b:	mov    rbp,QWORD PTR [rsp+0x10]
  41fc80:	lea    r15,[r14+0x2]
  41fc84:	mov    QWORD PTR [rax+0x20],0x3d2d
  41fc8c:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41fc91:	lea    r15,[r14+0x1]
  41fc95:	cmp    r15,r13
  41fc98:	je     421453 <__flatcc_fb_parse@@Base+0x53e3>
  41fc9e:	movsx  eax,BYTE PTR [r15]
  41fca2:	lea    ecx,[rax-0x30]
  41fca5:	cmp    ecx,0xa
  41fca8:	jae    4213a6 <__flatcc_fb_parse@@Base+0x5336>
  41fcae:	mov    rbx,r14
  41fcb1:	cmp    r12,r15
  41fcb4:	jne    41e929 <__flatcc_fb_parse@@Base+0x28b9>
  41fcba:	mov    r15,r13
  41fcbd:	mov    rdi,QWORD PTR [rbp+0x0]
  41fcc1:	movsxd rcx,DWORD PTR [r10]
  41fcc4:	lea    rbp,[rcx+rcx*4]
  41fcc8:	lea    rdx,[rdi+rbp*8]
  41fccc:	mov    QWORD PTR [r9],rdx
  41fccf:	mov    rax,QWORD PTR [rsi]
  41fcd2:	cmp    rbx,r15
  41fcd5:	je     41fd4a <__flatcc_fb_parse@@Base+0x3cda>
  41fcd7:	cmp    rax,rdx
  41fcda:	jne    41fd3a <__flatcc_fb_parse@@Base+0x3cca>
  41fcdc:	lea    eax,[rcx+rcx*1]
  41fcdf:	test   ecx,ecx
  41fce1:	mov    ecx,0x400
  41fce6:	cmove  eax,ecx
  41fce9:	mov    DWORD PTR [r10],eax
  41fcec:	cdqe   
  41fcee:	shl    rax,0x3
  41fcf2:	lea    rsi,[rax+rax*4]
  41fcf6:	mov    rbx,r10
  41fcf9:	call   4061c0 <realloc@plt>
  41fcfe:	mov    rcx,QWORD PTR [rsp+0x10]
  41fd03:	mov    QWORD PTR [rcx],rax
  41fd06:	test   rax,rax
  41fd09:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fd0f:	movsxd rcx,DWORD PTR [rbx]
  41fd12:	lea    rcx,[rcx+rcx*4]
  41fd16:	lea    rcx,[rax+rcx*8]
  41fd1a:	mov    r9,QWORD PTR [rsp]
  41fd1e:	mov    QWORD PTR [r9],rcx
  41fd21:	lea    rax,[rax+rbp*8]
  41fd25:	mov    rsi,QWORD PTR [rsp+0x20]
  41fd2a:	mov    QWORD PTR [rsi],rax
  41fd2d:	mov    r11,QWORD PTR [rsp+0x18]
  41fd32:	mov    r8,QWORD PTR [rsp+0x8]
  41fd37:	mov    r10,rbx
  41fd3a:	mov    QWORD PTR [rax+0x20],0xb
  41fd42:	mov    QWORD PTR [rax],r14
  41fd45:	mov    rbx,r15
  41fd48:	jmp    41fdbe <__flatcc_fb_parse@@Base+0x3d4e>
  41fd4a:	cmp    rax,rdx
  41fd4d:	jne    41fdb3 <__flatcc_fb_parse@@Base+0x3d43>
  41fd4f:	lea    eax,[rcx+rcx*1]
  41fd52:	test   ecx,ecx
  41fd54:	mov    ecx,0x400
  41fd59:	cmove  eax,ecx
  41fd5c:	mov    DWORD PTR [r10],eax
  41fd5f:	cdqe   
  41fd61:	shl    rax,0x3
  41fd65:	lea    rsi,[rax+rax*4]
  41fd69:	mov    r12,r10
  41fd6c:	call   4061c0 <realloc@plt>
  41fd71:	mov    rcx,QWORD PTR [rsp+0x10]
  41fd76:	mov    QWORD PTR [rcx],rax
  41fd79:	test   rax,rax
  41fd7c:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fd82:	movsxd rcx,DWORD PTR [r12]
  41fd86:	lea    rcx,[rcx+rcx*4]
  41fd8a:	lea    rcx,[rax+rcx*8]
  41fd8e:	mov    r9,QWORD PTR [rsp]
  41fd92:	mov    QWORD PTR [r9],rcx
  41fd95:	lea    rax,[rax+rbp*8]
  41fd99:	mov    rsi,QWORD PTR [rsp+0x20]
  41fd9e:	mov    QWORD PTR [rsi],rax
  41fda1:	mov    r11,QWORD PTR [rsp+0x18]
  41fda6:	mov    r8,QWORD PTR [rsp+0x8]
  41fdab:	mov    r10,r12
  41fdae:	mov    r12,QWORD PTR [rsp+0x28]
  41fdb3:	mov    QWORD PTR [rax+0x20],0xa
  41fdbb:	mov    QWORD PTR [rax],r14
  41fdbe:	sub    rbx,r14
  41fdc1:	mov    QWORD PTR [rax+0x8],rbx
  41fdc5:	mov    rcx,QWORD PTR [r8]
  41fdc8:	mov    QWORD PTR [rax+0x10],rcx
  41fdcc:	add    r14,0x1
  41fdd0:	sub    r14,QWORD PTR [r11]
  41fdd3:	mov    QWORD PTR [rax+0x18],r14
  41fdd7:	add    rax,0x28
  41fddb:	mov    QWORD PTR [rsi],rax
  41fdde:	mov    rbp,QWORD PTR [rsp+0x10]
  41fde3:	jmp    421219 <__flatcc_fb_parse@@Base+0x51a9>
  41fde8:	lea    rax,[r14+0x1]
  41fdec:	mov    r15,r13
  41fdef:	cmp    rax,r13
  41fdf2:	je     4209fe <__flatcc_fb_parse@@Base+0x498e>
  41fdf8:	movsx  ecx,BYTE PTR [rax]
  41fdfb:	cmp    ecx,0x7c
  41fdfe:	je     420952 <__flatcc_fb_parse@@Base+0x48e2>
  41fe04:	mov    r15,rax
  41fe07:	cmp    ecx,0x3d
  41fe0a:	jne    4209fe <__flatcc_fb_parse@@Base+0x498e>
  41fe10:	mov    rdi,QWORD PTR [rbp+0x0]
  41fe14:	movsxd rcx,DWORD PTR [r10]
  41fe17:	lea    rbx,[rcx+rcx*4]
  41fe1b:	lea    rdx,[rdi+rbx*8]
  41fe1f:	mov    QWORD PTR [r9],rdx
  41fe22:	mov    rax,QWORD PTR [rsi]
  41fe25:	cmp    rax,rdx
  41fe28:	jne    41fe8c <__flatcc_fb_parse@@Base+0x3e1c>
  41fe2a:	lea    eax,[rcx+rcx*1]
  41fe2d:	test   ecx,ecx
  41fe2f:	mov    ecx,0x400
  41fe34:	cmove  eax,ecx
  41fe37:	mov    DWORD PTR [r10],eax
  41fe3a:	cdqe   
  41fe3c:	shl    rax,0x3
  41fe40:	lea    rsi,[rax+rax*4]
  41fe44:	mov    r15,rbp
  41fe47:	mov    rbp,r10
  41fe4a:	call   4061c0 <realloc@plt>
  41fe4f:	mov    QWORD PTR [r15],rax
  41fe52:	test   rax,rax
  41fe55:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41fe5b:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fe5f:	lea    rcx,[rcx+rcx*4]
  41fe63:	lea    rcx,[rax+rcx*8]
  41fe67:	mov    r9,QWORD PTR [rsp]
  41fe6b:	mov    QWORD PTR [r9],rcx
  41fe6e:	lea    rax,[rax+rbx*8]
  41fe72:	mov    rsi,QWORD PTR [rsp+0x20]
  41fe77:	mov    QWORD PTR [rsi],rax
  41fe7a:	mov    r11,QWORD PTR [rsp+0x18]
  41fe7f:	mov    r8,QWORD PTR [rsp+0x8]
  41fe84:	mov    r10,rbp
  41fe87:	mov    rbp,QWORD PTR [rsp+0x10]
  41fe8c:	lea    r15,[r14+0x2]
  41fe90:	mov    QWORD PTR [rax+0x20],0x3d7c
  41fe98:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  41fe9d:	lea    r15,[r14+0x1]
  41fea1:	cmp    r15,r13
  41fea4:	je     420264 <__flatcc_fb_parse@@Base+0x41f4>
  41feaa:	movsx  eax,BYTE PTR [r15]
  41feae:	cmp    eax,0x2a
  41feb1:	je     420a8d <__flatcc_fb_parse@@Base+0x4a1d>
  41feb7:	cmp    eax,0x3d
  41feba:	jne    420264 <__flatcc_fb_parse@@Base+0x41f4>
  41fec0:	mov    rdi,QWORD PTR [rbp+0x0]
  41fec4:	movsxd rcx,DWORD PTR [r10]
  41fec7:	lea    rbx,[rcx+rcx*4]
  41fecb:	lea    rdx,[rdi+rbx*8]
  41fecf:	mov    QWORD PTR [r9],rdx
  41fed2:	mov    rax,QWORD PTR [rsi]
  41fed5:	cmp    rax,rdx
  41fed8:	jne    41ff42 <__flatcc_fb_parse@@Base+0x3ed2>
  41feda:	lea    eax,[rcx+rcx*1]
  41fedd:	test   ecx,ecx
  41fedf:	mov    ecx,0x400
  41fee4:	cmove  eax,ecx
  41fee7:	mov    DWORD PTR [r10],eax
  41feea:	cdqe   
  41feec:	shl    rax,0x3
  41fef0:	lea    rsi,[rax+rax*4]
  41fef4:	mov    r12,rbp
  41fef7:	mov    rbp,r10
  41fefa:	call   4061c0 <realloc@plt>
  41feff:	mov    QWORD PTR [r12],rax
  41ff03:	test   rax,rax
  41ff06:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41ff0c:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ff10:	lea    rcx,[rcx+rcx*4]
  41ff14:	lea    rcx,[rax+rcx*8]
  41ff18:	mov    r9,QWORD PTR [rsp]
  41ff1c:	mov    QWORD PTR [r9],rcx
  41ff1f:	lea    rax,[rax+rbx*8]
  41ff23:	mov    rsi,QWORD PTR [rsp+0x20]
  41ff28:	mov    QWORD PTR [rsi],rax
  41ff2b:	mov    r11,QWORD PTR [rsp+0x18]
  41ff30:	mov    r8,QWORD PTR [rsp+0x8]
  41ff35:	mov    r10,rbp
  41ff38:	mov    rbp,QWORD PTR [rsp+0x10]
  41ff3d:	mov    r12,QWORD PTR [rsp+0x28]
  41ff42:	mov    QWORD PTR [rax+0x20],0x3d2a
  41ff4a:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  41ff4f:	lea    rax,[r14+0x1]
  41ff53:	mov    r15,r13
  41ff56:	cmp    rax,r13
  41ff59:	je     42115b <__flatcc_fb_parse@@Base+0x50eb>
  41ff5f:	movsx  ecx,BYTE PTR [rax]
  41ff62:	cmp    ecx,0x3d
  41ff65:	je     420b1c <__flatcc_fb_parse@@Base+0x4aac>
  41ff6b:	mov    r15,rax
  41ff6e:	cmp    ecx,0x3e
  41ff71:	jne    42115b <__flatcc_fb_parse@@Base+0x50eb>
  41ff77:	mov    rdi,QWORD PTR [rbp+0x0]
  41ff7b:	movsxd rcx,DWORD PTR [r10]
  41ff7e:	lea    rbx,[rcx+rcx*4]
  41ff82:	lea    rdx,[rdi+rbx*8]
  41ff86:	mov    QWORD PTR [r9],rdx
  41ff89:	mov    rax,QWORD PTR [rsi]
  41ff8c:	cmp    rax,rdx
  41ff8f:	jne    41fff3 <__flatcc_fb_parse@@Base+0x3f83>
  41ff91:	lea    eax,[rcx+rcx*1]
  41ff94:	test   ecx,ecx
  41ff96:	mov    ecx,0x400
  41ff9b:	cmove  eax,ecx
  41ff9e:	mov    DWORD PTR [r10],eax
  41ffa1:	cdqe   
  41ffa3:	shl    rax,0x3
  41ffa7:	lea    rsi,[rax+rax*4]
  41ffab:	mov    r15,rbp
  41ffae:	mov    rbp,r10
  41ffb1:	call   4061c0 <realloc@plt>
  41ffb6:	mov    QWORD PTR [r15],rax
  41ffb9:	test   rax,rax
  41ffbc:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  41ffc2:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ffc6:	lea    rcx,[rcx+rcx*4]
  41ffca:	lea    rcx,[rax+rcx*8]
  41ffce:	mov    r9,QWORD PTR [rsp]
  41ffd2:	mov    QWORD PTR [r9],rcx
  41ffd5:	lea    rax,[rax+rbx*8]
  41ffd9:	mov    rsi,QWORD PTR [rsp+0x20]
  41ffde:	mov    QWORD PTR [rsi],rax
  41ffe1:	mov    r11,QWORD PTR [rsp+0x18]
  41ffe6:	mov    r8,QWORD PTR [rsp+0x8]
  41ffeb:	mov    r10,rbp
  41ffee:	mov    rbp,QWORD PTR [rsp+0x10]
  41fff3:	lea    r15,[r14+0x2]
  41fff7:	mov    QWORD PTR [rax+0x20],0x3e3d
  41ffff:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  420004:	lea    r15,[r14+0x1]
  420008:	cmp    bl,0x20
  42000b:	jl     420012 <__flatcc_fb_parse@@Base+0x3fa2>
  42000d:	cmp    bl,0x7f
  420010:	jne    420020 <__flatcc_fb_parse@@Base+0x3fb0>
  420012:	cmp    bl,0x9
  420015:	je     420020 <__flatcc_fb_parse@@Base+0x3fb0>
  420017:	cmp    bl,0x20
  42001a:	jne    420bc0 <__flatcc_fb_parse@@Base+0x4b50>
  420020:	mov    rdi,QWORD PTR [rbp+0x0]
  420024:	movsxd rcx,DWORD PTR [r10]
  420027:	lea    rbx,[rcx+rcx*4]
  42002b:	lea    rdx,[rdi+rbx*8]
  42002f:	mov    QWORD PTR [r9],rdx
  420032:	mov    rax,QWORD PTR [rsi]
  420035:	cmp    rax,rdx
  420038:	jne    4200a2 <__flatcc_fb_parse@@Base+0x4032>
  42003a:	lea    eax,[rcx+rcx*1]
  42003d:	test   ecx,ecx
  42003f:	mov    ecx,0x400
  420044:	cmove  eax,ecx
  420047:	mov    DWORD PTR [r10],eax
  42004a:	cdqe   
  42004c:	shl    rax,0x3
  420050:	lea    rsi,[rax+rax*4]
  420054:	mov    r12,rbp
  420057:	mov    rbp,r10
  42005a:	call   4061c0 <realloc@plt>
  42005f:	mov    QWORD PTR [r12],rax
  420063:	test   rax,rax
  420066:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42006c:	movsxd rcx,DWORD PTR [rbp+0x0]
  420070:	lea    rcx,[rcx+rcx*4]
  420074:	lea    rcx,[rax+rcx*8]
  420078:	mov    r9,QWORD PTR [rsp]
  42007c:	mov    QWORD PTR [r9],rcx
  42007f:	lea    rax,[rax+rbx*8]
  420083:	mov    rsi,QWORD PTR [rsp+0x20]
  420088:	mov    QWORD PTR [rsi],rax
  42008b:	mov    r11,QWORD PTR [rsp+0x18]
  420090:	mov    r8,QWORD PTR [rsp+0x8]
  420095:	mov    r10,rbp
  420098:	mov    rbp,QWORD PTR [rsp+0x10]
  42009d:	mov    r12,QWORD PTR [rsp+0x28]
  4200a2:	mov    QWORD PTR [rax+0x20],0x8
  4200aa:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  4200af:	mov    r15,r14
  4200b2:	jmp    421220 <__flatcc_fb_parse@@Base+0x51b0>
  4200b7:	mov    rdi,QWORD PTR [rbp+0x0]
  4200bb:	movsxd rcx,DWORD PTR [r10]
  4200be:	lea    rbx,[rcx+rcx*4]
  4200c2:	lea    rdx,[rdi+rbx*8]
  4200c6:	mov    QWORD PTR [r9],rdx
  4200c9:	mov    rax,QWORD PTR [rsi]
  4200cc:	cmp    rax,rdx
  4200cf:	jne    420139 <__flatcc_fb_parse@@Base+0x40c9>
  4200d1:	lea    eax,[rcx+rcx*1]
  4200d4:	test   ecx,ecx
  4200d6:	mov    ecx,0x400
  4200db:	cmove  eax,ecx
  4200de:	mov    DWORD PTR [r10],eax
  4200e1:	cdqe   
  4200e3:	shl    rax,0x3
  4200e7:	lea    rsi,[rax+rax*4]
  4200eb:	mov    r12,rbp
  4200ee:	mov    rbp,r10
  4200f1:	call   4061c0 <realloc@plt>
  4200f6:	mov    QWORD PTR [r12],rax
  4200fa:	test   rax,rax
  4200fd:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420103:	movsxd rcx,DWORD PTR [rbp+0x0]
  420107:	lea    rcx,[rcx+rcx*4]
  42010b:	lea    rcx,[rax+rcx*8]
  42010f:	mov    r9,QWORD PTR [rsp]
  420113:	mov    QWORD PTR [r9],rcx
  420116:	lea    rax,[rax+rbx*8]
  42011a:	mov    rsi,QWORD PTR [rsp+0x20]
  42011f:	mov    QWORD PTR [rsi],rax
  420122:	mov    r11,QWORD PTR [rsp+0x18]
  420127:	mov    r8,QWORD PTR [rsp+0x8]
  42012c:	mov    r10,rbp
  42012f:	mov    rbp,QWORD PTR [rsp+0x10]
  420134:	mov    r12,QWORD PTR [rsp+0x28]
  420139:	mov    QWORD PTR [rax+0x20],0x3a
  420141:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420146:	mov    rdi,QWORD PTR [rbp+0x0]
  42014a:	movsxd rcx,DWORD PTR [r10]
  42014d:	lea    rbx,[rcx+rcx*4]
  420151:	lea    rdx,[rdi+rbx*8]
  420155:	mov    QWORD PTR [r9],rdx
  420158:	mov    rax,QWORD PTR [rsi]
  42015b:	cmp    rax,rdx
  42015e:	jne    4201c8 <__flatcc_fb_parse@@Base+0x4158>
  420160:	lea    eax,[rcx+rcx*1]
  420163:	test   ecx,ecx
  420165:	mov    ecx,0x400
  42016a:	cmove  eax,ecx
  42016d:	mov    DWORD PTR [r10],eax
  420170:	cdqe   
  420172:	shl    rax,0x3
  420176:	lea    rsi,[rax+rax*4]
  42017a:	mov    r12,rbp
  42017d:	mov    rbp,r10
  420180:	call   4061c0 <realloc@plt>
  420185:	mov    QWORD PTR [r12],rax
  420189:	test   rax,rax
  42018c:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420192:	movsxd rcx,DWORD PTR [rbp+0x0]
  420196:	lea    rcx,[rcx+rcx*4]
  42019a:	lea    rcx,[rax+rcx*8]
  42019e:	mov    r9,QWORD PTR [rsp]
  4201a2:	mov    QWORD PTR [r9],rcx
  4201a5:	lea    rax,[rax+rbx*8]
  4201a9:	mov    rsi,QWORD PTR [rsp+0x20]
  4201ae:	mov    QWORD PTR [rsi],rax
  4201b1:	mov    r11,QWORD PTR [rsp+0x18]
  4201b6:	mov    r8,QWORD PTR [rsp+0x8]
  4201bb:	mov    r10,rbp
  4201be:	mov    rbp,QWORD PTR [rsp+0x10]
  4201c3:	mov    r12,QWORD PTR [rsp+0x28]
  4201c8:	mov    QWORD PTR [rax+0x20],0x2b
  4201d0:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  4201d5:	mov    rdi,QWORD PTR [rbp+0x0]
  4201d9:	movsxd rcx,DWORD PTR [r10]
  4201dc:	lea    rbx,[rcx+rcx*4]
  4201e0:	lea    rdx,[rdi+rbx*8]
  4201e4:	mov    QWORD PTR [r9],rdx
  4201e7:	mov    rax,QWORD PTR [rsi]
  4201ea:	cmp    rax,rdx
  4201ed:	jne    420257 <__flatcc_fb_parse@@Base+0x41e7>
  4201ef:	lea    eax,[rcx+rcx*1]
  4201f2:	test   ecx,ecx
  4201f4:	mov    ecx,0x400
  4201f9:	cmove  eax,ecx
  4201fc:	mov    DWORD PTR [r10],eax
  4201ff:	cdqe   
  420201:	shl    rax,0x3
  420205:	lea    rsi,[rax+rax*4]
  420209:	mov    r12,rbp
  42020c:	mov    rbp,r10
  42020f:	call   4061c0 <realloc@plt>
  420214:	mov    QWORD PTR [r12],rax
  420218:	test   rax,rax
  42021b:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420221:	movsxd rcx,DWORD PTR [rbp+0x0]
  420225:	lea    rcx,[rcx+rcx*4]
  420229:	lea    rcx,[rax+rcx*8]
  42022d:	mov    r9,QWORD PTR [rsp]
  420231:	mov    QWORD PTR [r9],rcx
  420234:	lea    rax,[rax+rbx*8]
  420238:	mov    rsi,QWORD PTR [rsp+0x20]
  42023d:	mov    QWORD PTR [rsi],rax
  420240:	mov    r11,QWORD PTR [rsp+0x18]
  420245:	mov    r8,QWORD PTR [rsp+0x8]
  42024a:	mov    r10,rbp
  42024d:	mov    rbp,QWORD PTR [rsp+0x10]
  420252:	mov    r12,QWORD PTR [rsp+0x28]
  420257:	mov    QWORD PTR [rax+0x20],0x3e
  42025f:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420264:	mov    rdi,QWORD PTR [rbp+0x0]
  420268:	movsxd rcx,DWORD PTR [r10]
  42026b:	lea    rbx,[rcx+rcx*4]
  42026f:	lea    rdx,[rdi+rbx*8]
  420273:	mov    QWORD PTR [r9],rdx
  420276:	mov    rax,QWORD PTR [rsi]
  420279:	cmp    rax,rdx
  42027c:	jne    4202e6 <__flatcc_fb_parse@@Base+0x4276>
  42027e:	lea    eax,[rcx+rcx*1]
  420281:	test   ecx,ecx
  420283:	mov    ecx,0x400
  420288:	cmove  eax,ecx
  42028b:	mov    DWORD PTR [r10],eax
  42028e:	cdqe   
  420290:	shl    rax,0x3
  420294:	lea    rsi,[rax+rax*4]
  420298:	mov    r12,rbp
  42029b:	mov    rbp,r10
  42029e:	call   4061c0 <realloc@plt>
  4202a3:	mov    QWORD PTR [r12],rax
  4202a7:	test   rax,rax
  4202aa:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4202b0:	movsxd rcx,DWORD PTR [rbp+0x0]
  4202b4:	lea    rcx,[rcx+rcx*4]
  4202b8:	lea    rcx,[rax+rcx*8]
  4202bc:	mov    r9,QWORD PTR [rsp]
  4202c0:	mov    QWORD PTR [r9],rcx
  4202c3:	lea    rax,[rax+rbx*8]
  4202c7:	mov    rsi,QWORD PTR [rsp+0x20]
  4202cc:	mov    QWORD PTR [rsi],rax
  4202cf:	mov    r11,QWORD PTR [rsp+0x18]
  4202d4:	mov    r8,QWORD PTR [rsp+0x8]
  4202d9:	mov    r10,rbp
  4202dc:	mov    rbp,QWORD PTR [rsp+0x10]
  4202e1:	mov    r12,QWORD PTR [rsp+0x28]
  4202e6:	mov    QWORD PTR [rax+0x20],0x2a
  4202ee:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  4202f3:	mov    r14,rbx
  4202f6:	mov    r13,0xfffffffffffffc2c
  4202fd:	jmp    41f1b9 <__flatcc_fb_parse@@Base+0x3149>
  420302:	mov    rdi,QWORD PTR [rbp+0x0]
  420306:	movsxd rcx,DWORD PTR [r10]
  420309:	lea    rbx,[rcx+rcx*4]
  42030d:	lea    rdx,[rdi+rbx*8]
  420311:	mov    QWORD PTR [r9],rdx
  420314:	mov    rax,QWORD PTR [rsi]
  420317:	cmp    rax,rdx
  42031a:	jne    420384 <__flatcc_fb_parse@@Base+0x4314>
  42031c:	lea    eax,[rcx+rcx*1]
  42031f:	test   ecx,ecx
  420321:	mov    ecx,0x400
  420326:	cmove  eax,ecx
  420329:	mov    DWORD PTR [r10],eax
  42032c:	cdqe   
  42032e:	shl    rax,0x3
  420332:	lea    rsi,[rax+rax*4]
  420336:	mov    r12,rbp
  420339:	mov    rbp,r10
  42033c:	call   4061c0 <realloc@plt>
  420341:	mov    QWORD PTR [r12],rax
  420345:	test   rax,rax
  420348:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42034e:	movsxd rcx,DWORD PTR [rbp+0x0]
  420352:	lea    rcx,[rcx+rcx*4]
  420356:	lea    rcx,[rax+rcx*8]
  42035a:	mov    r9,QWORD PTR [rsp]
  42035e:	mov    QWORD PTR [r9],rcx
  420361:	lea    rax,[rax+rbx*8]
  420365:	mov    rsi,QWORD PTR [rsp+0x20]
  42036a:	mov    QWORD PTR [rsi],rax
  42036d:	mov    r11,QWORD PTR [rsp+0x18]
  420372:	mov    r8,QWORD PTR [rsp+0x8]
  420377:	mov    r10,rbp
  42037a:	mov    rbp,QWORD PTR [rsp+0x10]
  42037f:	mov    r12,QWORD PTR [rsp+0x28]
  420384:	mov    QWORD PTR [rax+0x20],0x3c
  42038c:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420391:	mov    rdi,QWORD PTR [rbp+0x0]
  420395:	movsxd rcx,DWORD PTR [r10]
  420398:	lea    rbx,[rcx+rcx*4]
  42039c:	lea    rdx,[rdi+rbx*8]
  4203a0:	mov    QWORD PTR [r9],rdx
  4203a3:	mov    rax,QWORD PTR [rsi]
  4203a6:	cmp    rax,rdx
  4203a9:	jne    420413 <__flatcc_fb_parse@@Base+0x43a3>
  4203ab:	lea    eax,[rcx+rcx*1]
  4203ae:	test   ecx,ecx
  4203b0:	mov    ecx,0x400
  4203b5:	cmove  eax,ecx
  4203b8:	mov    DWORD PTR [r10],eax
  4203bb:	cdqe   
  4203bd:	shl    rax,0x3
  4203c1:	lea    rsi,[rax+rax*4]
  4203c5:	mov    r12,rbp
  4203c8:	mov    rbp,r10
  4203cb:	call   4061c0 <realloc@plt>
  4203d0:	mov    QWORD PTR [r12],rax
  4203d4:	test   rax,rax
  4203d7:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4203dd:	movsxd rcx,DWORD PTR [rbp+0x0]
  4203e1:	lea    rcx,[rcx+rcx*4]
  4203e5:	lea    rcx,[rax+rcx*8]
  4203e9:	mov    r9,QWORD PTR [rsp]
  4203ed:	mov    QWORD PTR [r9],rcx
  4203f0:	lea    rax,[rax+rbx*8]
  4203f4:	mov    rsi,QWORD PTR [rsp+0x20]
  4203f9:	mov    QWORD PTR [rsi],rax
  4203fc:	mov    r11,QWORD PTR [rsp+0x18]
  420401:	mov    r8,QWORD PTR [rsp+0x8]
  420406:	mov    r10,rbp
  420409:	mov    rbp,QWORD PTR [rsp+0x10]
  42040e:	mov    r12,QWORD PTR [rsp+0x28]
  420413:	mov    QWORD PTR [rax+0x20],0x2f
  42041b:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420420:	mov    rdi,QWORD PTR [rbp+0x0]
  420424:	movsxd rcx,DWORD PTR [r10]
  420427:	lea    rbx,[rcx+rcx*4]
  42042b:	lea    rdx,[rdi+rbx*8]
  42042f:	mov    QWORD PTR [r9],rdx
  420432:	mov    rax,QWORD PTR [rsi]
  420435:	cmp    rax,rdx
  420438:	jne    4204a2 <__flatcc_fb_parse@@Base+0x4432>
  42043a:	lea    eax,[rcx+rcx*1]
  42043d:	test   ecx,ecx
  42043f:	mov    ecx,0x400
  420444:	cmove  eax,ecx
  420447:	mov    DWORD PTR [r10],eax
  42044a:	cdqe   
  42044c:	shl    rax,0x3
  420450:	lea    rsi,[rax+rax*4]
  420454:	mov    r12,rbp
  420457:	mov    rbp,r10
  42045a:	call   4061c0 <realloc@plt>
  42045f:	mov    QWORD PTR [r12],rax
  420463:	test   rax,rax
  420466:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42046c:	movsxd rcx,DWORD PTR [rbp+0x0]
  420470:	lea    rcx,[rcx+rcx*4]
  420474:	lea    rcx,[rax+rcx*8]
  420478:	mov    r9,QWORD PTR [rsp]
  42047c:	mov    QWORD PTR [r9],rcx
  42047f:	lea    rax,[rax+rbx*8]
  420483:	mov    rsi,QWORD PTR [rsp+0x20]
  420488:	mov    QWORD PTR [rsi],rax
  42048b:	mov    r11,QWORD PTR [rsp+0x18]
  420490:	mov    r8,QWORD PTR [rsp+0x8]
  420495:	mov    r10,rbp
  420498:	mov    rbp,QWORD PTR [rsp+0x10]
  42049d:	mov    r12,QWORD PTR [rsp+0x28]
  4204a2:	mov    QWORD PTR [rax+0x20],0x2d
  4204aa:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  4204af:	movsxd rdx,r10d
  4204b2:	lea    r14,[rdx+rdx*4]
  4204b6:	lea    rdx,[rax+r14*8]
  4204ba:	mov    rdi,QWORD PTR [rsp]
  4204be:	mov    QWORD PTR [rdi],rdx
  4204c1:	cmp    rcx,rdx
  4204c4:	mov    r12,QWORD PTR [rsp+0x28]
  4204c9:	jne    420533 <__flatcc_fb_parse@@Base+0x44c3>
  4204cb:	lea    ecx,[r10+r10*1]
  4204cf:	test   r10d,r10d
  4204d2:	mov    edx,0x400
  4204d7:	cmove  ecx,edx
  4204da:	mov    rbx,QWORD PTR [rsp+0x30]
  4204df:	mov    DWORD PTR [rbx],ecx
  4204e1:	movsxd rcx,ecx
  4204e4:	shl    rcx,0x3
  4204e8:	lea    rsi,[rcx+rcx*4]
  4204ec:	mov    rdi,rax
  4204ef:	call   4061c0 <realloc@plt>
  4204f4:	mov    rcx,QWORD PTR [rsp+0x10]
  4204f9:	mov    QWORD PTR [rcx],rax
  4204fc:	test   rax,rax
  4204ff:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420505:	movsxd rcx,DWORD PTR [rbx]
  420508:	lea    rcx,[rcx+rcx*4]
  42050c:	lea    rcx,[rax+rcx*8]
  420510:	mov    rdx,QWORD PTR [rsp]
  420514:	mov    QWORD PTR [rdx],rcx
  420517:	lea    rcx,[rax+r14*8]
  42051b:	mov    rsi,QWORD PTR [rsp+0x20]
  420520:	mov    QWORD PTR [rsi],rcx
  420523:	mov    rax,QWORD PTR [rsp+0x8]
  420528:	mov    r9,QWORD PTR [rax]
  42052b:	mov    r11,QWORD PTR [rsp+0x18]
  420530:	mov    r8,QWORD PTR [r11]
  420533:	add    rbp,0x1
  420537:	mov    QWORD PTR [rcx+0x20],0x16
  42053f:	mov    QWORD PTR [rcx],r13
  420542:	mov    rax,rbp
  420545:	sub    rax,r13
  420548:	mov    QWORD PTR [rcx+0x8],rax
  42054c:	mov    QWORD PTR [rcx+0x10],r9
  420550:	add    r13,0x1
  420554:	sub    r13,r8
  420557:	mov    QWORD PTR [rcx+0x18],r13
  42055b:	add    rcx,0x28
  42055f:	mov    QWORD PTR [rsi],rcx
  420562:	mov    r14,rbp
  420565:	mov    r8,QWORD PTR [rsp+0x8]
  42056a:	mov    r9,QWORD PTR [rsp]
  42056e:	mov    r10,QWORD PTR [rsp+0x30]
  420573:	mov    r13,QWORD PTR [rsp+0x40]
  420578:	jmp    420d0f <__flatcc_fb_parse@@Base+0x4c9f>
  42057d:	movsxd rdx,r10d
  420580:	lea    rbx,[rdx+rdx*4]
  420584:	lea    rdx,[rax+rbx*8]
  420588:	mov    rdi,QWORD PTR [rsp]
  42058c:	mov    QWORD PTR [rdi],rdx
  42058f:	cmp    rcx,rdx
  420592:	mov    r13,QWORD PTR [rsp+0x40]
  420597:	mov    r12,QWORD PTR [rsp+0x28]
  42059c:	jne    420608 <__flatcc_fb_parse@@Base+0x4598>
  42059e:	lea    ecx,[r10+r10*1]
  4205a2:	test   r10d,r10d
  4205a5:	mov    edx,0x400
  4205aa:	cmove  ecx,edx
  4205ad:	mov    rbp,QWORD PTR [rsp+0x30]
  4205b2:	mov    DWORD PTR [rbp+0x0],ecx
  4205b5:	movsxd rcx,ecx
  4205b8:	shl    rcx,0x3
  4205bc:	lea    rsi,[rcx+rcx*4]
  4205c0:	mov    rdi,rax
  4205c3:	call   4061c0 <realloc@plt>
  4205c8:	mov    rcx,QWORD PTR [rsp+0x10]
  4205cd:	mov    QWORD PTR [rcx],rax
  4205d0:	test   rax,rax
  4205d3:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4205d9:	movsxd rcx,DWORD PTR [rbp+0x0]
  4205dd:	lea    rcx,[rcx+rcx*4]
  4205e1:	lea    rcx,[rax+rcx*8]
  4205e5:	mov    rdx,QWORD PTR [rsp]
  4205e9:	mov    QWORD PTR [rdx],rcx
  4205ec:	lea    rcx,[rax+rbx*8]
  4205f0:	mov    rsi,QWORD PTR [rsp+0x20]
  4205f5:	mov    QWORD PTR [rsi],rcx
  4205f8:	mov    rax,QWORD PTR [rsp+0x8]
  4205fd:	mov    r9,QWORD PTR [rax]
  420600:	mov    r11,QWORD PTR [rsp+0x18]
  420605:	mov    r8,QWORD PTR [r11]
  420608:	mov    QWORD PTR [rcx+0x20],0x17
  420610:	mov    QWORD PTR [rcx],r14
  420613:	mov    QWORD PTR [rcx+0x8],0x0
  42061b:	mov    QWORD PTR [rcx+0x10],r9
  42061f:	lea    rax,[r14+0x1]
  420623:	sub    rax,r8
  420626:	mov    QWORD PTR [rcx+0x18],rax
  42062a:	add    rcx,0x28
  42062e:	mov    QWORD PTR [rsi],rcx
  420631:	jmp    420d01 <__flatcc_fb_parse@@Base+0x4c91>
  420636:	lea    r15,[r14+0x2]
  42063a:	cmp    r15,r13
  42063d:	je     42101e <__flatcc_fb_parse@@Base+0x4fae>
  420643:	cmp    BYTE PTR [r15],0x3d
  420647:	jne    42101e <__flatcc_fb_parse@@Base+0x4fae>
  42064d:	mov    rdi,QWORD PTR [rbp+0x0]
  420651:	movsxd rcx,DWORD PTR [r10]
  420654:	lea    rbx,[rcx+rcx*4]
  420658:	lea    rdx,[rdi+rbx*8]
  42065c:	mov    QWORD PTR [r9],rdx
  42065f:	mov    rax,QWORD PTR [rsi]
  420662:	cmp    rax,rdx
  420665:	jne    4206c9 <__flatcc_fb_parse@@Base+0x4659>
  420667:	lea    eax,[rcx+rcx*1]
  42066a:	test   ecx,ecx
  42066c:	mov    ecx,0x400
  420671:	cmove  eax,ecx
  420674:	mov    DWORD PTR [r10],eax
  420677:	cdqe   
  420679:	shl    rax,0x3
  42067d:	lea    rsi,[rax+rax*4]
  420681:	mov    r15,rbp
  420684:	mov    rbp,r10
  420687:	call   4061c0 <realloc@plt>
  42068c:	mov    QWORD PTR [r15],rax
  42068f:	test   rax,rax
  420692:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420698:	movsxd rcx,DWORD PTR [rbp+0x0]
  42069c:	lea    rcx,[rcx+rcx*4]
  4206a0:	lea    rcx,[rax+rcx*8]
  4206a4:	mov    r9,QWORD PTR [rsp]
  4206a8:	mov    QWORD PTR [r9],rcx
  4206ab:	lea    rax,[rax+rbx*8]
  4206af:	mov    rsi,QWORD PTR [rsp+0x20]
  4206b4:	mov    QWORD PTR [rsi],rax
  4206b7:	mov    r11,QWORD PTR [rsp+0x18]
  4206bc:	mov    r8,QWORD PTR [rsp+0x8]
  4206c1:	mov    r10,rbp
  4206c4:	mov    rbp,QWORD PTR [rsp+0x10]
  4206c9:	lea    r15,[r14+0x3]
  4206cd:	mov    QWORD PTR [rax+0x20],0x3d3a3a
  4206d5:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  4206da:	mov    rdi,QWORD PTR [rbp+0x0]
  4206de:	movsxd rcx,DWORD PTR [r10]
  4206e1:	lea    rbx,[rcx+rcx*4]
  4206e5:	lea    rdx,[rdi+rbx*8]
  4206e9:	mov    QWORD PTR [r9],rdx
  4206ec:	mov    rax,QWORD PTR [rsi]
  4206ef:	cmp    rax,rdx
  4206f2:	jne    420756 <__flatcc_fb_parse@@Base+0x46e6>
  4206f4:	lea    eax,[rcx+rcx*1]
  4206f7:	test   ecx,ecx
  4206f9:	mov    ecx,0x400
  4206fe:	cmove  eax,ecx
  420701:	mov    DWORD PTR [r10],eax
  420704:	cdqe   
  420706:	shl    rax,0x3
  42070a:	lea    rsi,[rax+rax*4]
  42070e:	mov    r15,rbp
  420711:	mov    rbp,r10
  420714:	call   4061c0 <realloc@plt>
  420719:	mov    QWORD PTR [r15],rax
  42071c:	test   rax,rax
  42071f:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420725:	movsxd rcx,DWORD PTR [rbp+0x0]
  420729:	lea    rcx,[rcx+rcx*4]
  42072d:	lea    rcx,[rax+rcx*8]
  420731:	mov    r9,QWORD PTR [rsp]
  420735:	mov    QWORD PTR [r9],rcx
  420738:	lea    rax,[rax+rbx*8]
  42073c:	mov    rsi,QWORD PTR [rsp+0x20]
  420741:	mov    QWORD PTR [rsi],rax
  420744:	mov    r11,QWORD PTR [rsp+0x18]
  420749:	mov    r8,QWORD PTR [rsp+0x8]
  42074e:	mov    r10,rbp
  420751:	mov    rbp,QWORD PTR [rsp+0x10]
  420756:	lea    r15,[r14+0x2]
  42075a:	mov    QWORD PTR [rax+0x20],0x2b2b
  420762:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  420767:	lea    r15,[r14+0x2]
  42076b:	cmp    r15,r13
  42076e:	je     421317 <__flatcc_fb_parse@@Base+0x52a7>
  420774:	movsx  eax,BYTE PTR [r15]
  420778:	cmp    eax,0x3e
  42077b:	je     421d82 <__flatcc_fb_parse@@Base+0x5d12>
  420781:	cmp    eax,0x3d
  420784:	jne    421317 <__flatcc_fb_parse@@Base+0x52a7>
  42078a:	mov    rdi,QWORD PTR [rbp+0x0]
  42078e:	movsxd rcx,DWORD PTR [r10]
  420791:	lea    rbx,[rcx+rcx*4]
  420795:	lea    rdx,[rdi+rbx*8]
  420799:	mov    QWORD PTR [r9],rdx
  42079c:	mov    rax,QWORD PTR [rsi]
  42079f:	cmp    rax,rdx
  4207a2:	jne    420806 <__flatcc_fb_parse@@Base+0x4796>
  4207a4:	lea    eax,[rcx+rcx*1]
  4207a7:	test   ecx,ecx
  4207a9:	mov    ecx,0x400
  4207ae:	cmove  eax,ecx
  4207b1:	mov    DWORD PTR [r10],eax
  4207b4:	cdqe   
  4207b6:	shl    rax,0x3
  4207ba:	lea    rsi,[rax+rax*4]
  4207be:	mov    r15,rbp
  4207c1:	mov    rbp,r10
  4207c4:	call   4061c0 <realloc@plt>
  4207c9:	mov    QWORD PTR [r15],rax
  4207cc:	test   rax,rax
  4207cf:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4207d5:	movsxd rcx,DWORD PTR [rbp+0x0]
  4207d9:	lea    rcx,[rcx+rcx*4]
  4207dd:	lea    rcx,[rax+rcx*8]
  4207e1:	mov    r9,QWORD PTR [rsp]
  4207e5:	mov    QWORD PTR [r9],rcx
  4207e8:	lea    rax,[rax+rbx*8]
  4207ec:	mov    rsi,QWORD PTR [rsp+0x20]
  4207f1:	mov    QWORD PTR [rsi],rax
  4207f4:	mov    r11,QWORD PTR [rsp+0x18]
  4207f9:	mov    r8,QWORD PTR [rsp+0x8]
  4207fe:	mov    r10,rbp
  420801:	mov    rbp,QWORD PTR [rsp+0x10]
  420806:	lea    r15,[r14+0x3]
  42080a:	mov    QWORD PTR [rax+0x20],0x3d3e3e
  420812:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  420817:	mov    rdi,QWORD PTR [rbp+0x0]
  42081b:	movsxd rcx,DWORD PTR [r10]
  42081e:	lea    rbx,[rcx+rcx*4]
  420822:	lea    rdx,[rdi+rbx*8]
  420826:	mov    QWORD PTR [r9],rdx
  420829:	mov    rax,QWORD PTR [rsi]
  42082c:	cmp    rax,rdx
  42082f:	jne    420893 <__flatcc_fb_parse@@Base+0x4823>
  420831:	lea    eax,[rcx+rcx*1]
  420834:	test   ecx,ecx
  420836:	mov    ecx,0x400
  42083b:	cmove  eax,ecx
  42083e:	mov    DWORD PTR [r10],eax
  420841:	cdqe   
  420843:	shl    rax,0x3
  420847:	lea    rsi,[rax+rax*4]
  42084b:	mov    r15,rbp
  42084e:	mov    rbp,r10
  420851:	call   4061c0 <realloc@plt>
  420856:	mov    QWORD PTR [r15],rax
  420859:	test   rax,rax
  42085c:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420862:	movsxd rcx,DWORD PTR [rbp+0x0]
  420866:	lea    rcx,[rcx+rcx*4]
  42086a:	lea    rcx,[rax+rcx*8]
  42086e:	mov    r9,QWORD PTR [rsp]
  420872:	mov    QWORD PTR [r9],rcx
  420875:	lea    rax,[rax+rbx*8]
  420879:	mov    rsi,QWORD PTR [rsp+0x20]
  42087e:	mov    QWORD PTR [rsi],rax
  420881:	mov    r11,QWORD PTR [rsp+0x18]
  420886:	mov    r8,QWORD PTR [rsp+0x8]
  42088b:	mov    r10,rbp
  42088e:	mov    rbp,QWORD PTR [rsp+0x10]
  420893:	lea    r15,[r14+0x2]
  420897:	mov    QWORD PTR [rax+0x20],0x2626
  42089f:	mov    QWORD PTR [rax],r14
  4208a2:	mov    QWORD PTR [rax+0x8],0x2
  4208aa:	mov    rcx,QWORD PTR [r8]
  4208ad:	mov    QWORD PTR [rax+0x10],rcx
  4208b1:	lea    rcx,[r14+0x1]
  4208b5:	sub    rcx,QWORD PTR [r11]
  4208b8:	mov    QWORD PTR [rax+0x18],rcx
  4208bc:	add    rax,0x28
  4208c0:	mov    QWORD PTR [rsi],rax
  4208c3:	mov    rdi,QWORD PTR [rbp+0x0]
  4208c7:	movsxd rcx,DWORD PTR [r10]
  4208ca:	lea    rbx,[rcx+rcx*4]
  4208ce:	lea    rdx,[rdi+rbx*8]
  4208d2:	mov    QWORD PTR [r9],rdx
  4208d5:	mov    rax,QWORD PTR [rsi]
  4208d8:	cmp    rax,rdx
  4208db:	jne    420945 <__flatcc_fb_parse@@Base+0x48d5>
  4208dd:	lea    eax,[rcx+rcx*1]
  4208e0:	test   ecx,ecx
  4208e2:	mov    ecx,0x400
  4208e7:	cmove  eax,ecx
  4208ea:	mov    DWORD PTR [r10],eax
  4208ed:	cdqe   
  4208ef:	shl    rax,0x3
  4208f3:	lea    rsi,[rax+rax*4]
  4208f7:	mov    r12,rbp
  4208fa:	mov    rbp,r10
  4208fd:	call   4061c0 <realloc@plt>
  420902:	mov    QWORD PTR [r12],rax
  420906:	test   rax,rax
  420909:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42090f:	movsxd rcx,DWORD PTR [rbp+0x0]
  420913:	lea    rcx,[rcx+rcx*4]
  420917:	lea    rcx,[rax+rcx*8]
  42091b:	mov    r9,QWORD PTR [rsp]
  42091f:	mov    QWORD PTR [r9],rcx
  420922:	lea    rax,[rax+rbx*8]
  420926:	mov    rsi,QWORD PTR [rsp+0x20]
  42092b:	mov    QWORD PTR [rsi],rax
  42092e:	mov    r11,QWORD PTR [rsp+0x18]
  420933:	mov    r8,QWORD PTR [rsp+0x8]
  420938:	mov    r10,rbp
  42093b:	mov    rbp,QWORD PTR [rsp+0x10]
  420940:	mov    r12,QWORD PTR [rsp+0x28]
  420945:	mov    QWORD PTR [rax+0x20],0x26
  42094d:	jmp    4211e5 <__flatcc_fb_parse@@Base+0x5175>
  420952:	mov    rdi,QWORD PTR [rbp+0x0]
  420956:	movsxd rcx,DWORD PTR [r10]
  420959:	lea    rbx,[rcx+rcx*4]
  42095d:	lea    rdx,[rdi+rbx*8]
  420961:	mov    QWORD PTR [r9],rdx
  420964:	mov    rax,QWORD PTR [rsi]
  420967:	cmp    rax,rdx
  42096a:	jne    4209ce <__flatcc_fb_parse@@Base+0x495e>
  42096c:	lea    eax,[rcx+rcx*1]
  42096f:	test   ecx,ecx
  420971:	mov    ecx,0x400
  420976:	cmove  eax,ecx
  420979:	mov    DWORD PTR [r10],eax
  42097c:	cdqe   
  42097e:	shl    rax,0x3
  420982:	lea    rsi,[rax+rax*4]
  420986:	mov    r15,rbp
  420989:	mov    rbp,r10
  42098c:	call   4061c0 <realloc@plt>
  420991:	mov    QWORD PTR [r15],rax
  420994:	test   rax,rax
  420997:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42099d:	movsxd rcx,DWORD PTR [rbp+0x0]
  4209a1:	lea    rcx,[rcx+rcx*4]
  4209a5:	lea    rcx,[rax+rcx*8]
  4209a9:	mov    r9,QWORD PTR [rsp]
  4209ad:	mov    QWORD PTR [r9],rcx
  4209b0:	lea    rax,[rax+rbx*8]
  4209b4:	mov    rsi,QWORD PTR [rsp+0x20]
  4209b9:	mov    QWORD PTR [rsi],rax
  4209bc:	mov    r11,QWORD PTR [rsp+0x18]
  4209c1:	mov    r8,QWORD PTR [rsp+0x8]
  4209c6:	mov    r10,rbp
  4209c9:	mov    rbp,QWORD PTR [rsp+0x10]
  4209ce:	lea    r15,[r14+0x2]
  4209d2:	mov    QWORD PTR [rax+0x20],0x7c7c
  4209da:	mov    QWORD PTR [rax],r14
  4209dd:	mov    QWORD PTR [rax+0x8],0x2
  4209e5:	mov    rcx,QWORD PTR [r8]
  4209e8:	mov    QWORD PTR [rax+0x10],rcx
  4209ec:	lea    rcx,[r14+0x1]
  4209f0:	sub    rcx,QWORD PTR [r11]
  4209f3:	mov    QWORD PTR [rax+0x18],rcx
  4209f7:	add    rax,0x28
  4209fb:	mov    QWORD PTR [rsi],rax
  4209fe:	mov    rdi,QWORD PTR [rbp+0x0]
  420a02:	movsxd rcx,DWORD PTR [r10]
  420a05:	lea    rbx,[rcx+rcx*4]
  420a09:	lea    rdx,[rdi+rbx*8]
  420a0d:	mov    QWORD PTR [r9],rdx
  420a10:	mov    rax,QWORD PTR [rsi]
  420a13:	cmp    rax,rdx
  420a16:	jne    420a80 <__flatcc_fb_parse@@Base+0x4a10>
  420a18:	lea    eax,[rcx+rcx*1]
  420a1b:	test   ecx,ecx
  420a1d:	mov    ecx,0x400
  420a22:	cmove  eax,ecx
  420a25:	mov    DWORD PTR [r10],eax
  420a28:	cdqe   
  420a2a:	shl    rax,0x3
  420a2e:	lea    rsi,[rax+rax*4]
  420a32:	mov    r12,rbp
  420a35:	mov    rbp,r10
  420a38:	call   4061c0 <realloc@plt>
  420a3d:	mov    QWORD PTR [r12],rax
  420a41:	test   rax,rax
  420a44:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420a4a:	movsxd rcx,DWORD PTR [rbp+0x0]
  420a4e:	lea    rcx,[rcx+rcx*4]
  420a52:	lea    rcx,[rax+rcx*8]
  420a56:	mov    r9,QWORD PTR [rsp]
  420a5a:	mov    QWORD PTR [r9],rcx
  420a5d:	lea    rax,[rax+rbx*8]
  420a61:	mov    rsi,QWORD PTR [rsp+0x20]
  420a66:	mov    QWORD PTR [rsi],rax
  420a69:	mov    r11,QWORD PTR [rsp+0x18]
  420a6e:	mov    r8,QWORD PTR [rsp+0x8]
  420a73:	mov    r10,rbp
  420a76:	mov    rbp,QWORD PTR [rsp+0x10]
  420a7b:	mov    r12,QWORD PTR [rsp+0x28]
  420a80:	mov    QWORD PTR [rax+0x20],0x7c
  420a88:	jmp    4211e5 <__flatcc_fb_parse@@Base+0x5175>
  420a8d:	mov    rdi,QWORD PTR [rbp+0x0]
  420a91:	movsxd rcx,DWORD PTR [r10]
  420a94:	lea    rbx,[rcx+rcx*4]
  420a98:	lea    rdx,[rdi+rbx*8]
  420a9c:	mov    QWORD PTR [r9],rdx
  420a9f:	mov    rax,QWORD PTR [rsi]
  420aa2:	cmp    rax,rdx
  420aa5:	jne    420b0f <__flatcc_fb_parse@@Base+0x4a9f>
  420aa7:	lea    eax,[rcx+rcx*1]
  420aaa:	test   ecx,ecx
  420aac:	mov    ecx,0x400
  420ab1:	cmove  eax,ecx
  420ab4:	mov    DWORD PTR [r10],eax
  420ab7:	cdqe   
  420ab9:	shl    rax,0x3
  420abd:	lea    rsi,[rax+rax*4]
  420ac1:	mov    r12,rbp
  420ac4:	mov    rbp,r10
  420ac7:	call   4061c0 <realloc@plt>
  420acc:	mov    QWORD PTR [r12],rax
  420ad0:	test   rax,rax
  420ad3:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420ad9:	movsxd rcx,DWORD PTR [rbp+0x0]
  420add:	lea    rcx,[rcx+rcx*4]
  420ae1:	lea    rcx,[rax+rcx*8]
  420ae5:	mov    r9,QWORD PTR [rsp]
  420ae9:	mov    QWORD PTR [r9],rcx
  420aec:	lea    rax,[rax+rbx*8]
  420af0:	mov    rsi,QWORD PTR [rsp+0x20]
  420af5:	mov    QWORD PTR [rsi],rax
  420af8:	mov    r11,QWORD PTR [rsp+0x18]
  420afd:	mov    r8,QWORD PTR [rsp+0x8]
  420b02:	mov    r10,rbp
  420b05:	mov    rbp,QWORD PTR [rsp+0x10]
  420b0a:	mov    r12,QWORD PTR [rsp+0x28]
  420b0f:	mov    QWORD PTR [rax+0x20],0x2a2a
  420b17:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420b1c:	lea    r15,[r14+0x2]
  420b20:	cmp    r15,r13
  420b23:	je     4210ad <__flatcc_fb_parse@@Base+0x503d>
  420b29:	cmp    BYTE PTR [r15],0x3d
  420b2d:	jne    4210ad <__flatcc_fb_parse@@Base+0x503d>
  420b33:	mov    rdi,QWORD PTR [rbp+0x0]
  420b37:	movsxd rcx,DWORD PTR [r10]
  420b3a:	lea    rbx,[rcx+rcx*4]
  420b3e:	lea    rdx,[rdi+rbx*8]
  420b42:	mov    QWORD PTR [r9],rdx
  420b45:	mov    rax,QWORD PTR [rsi]
  420b48:	cmp    rax,rdx
  420b4b:	jne    420baf <__flatcc_fb_parse@@Base+0x4b3f>
  420b4d:	lea    eax,[rcx+rcx*1]
  420b50:	test   ecx,ecx
  420b52:	mov    ecx,0x400
  420b57:	cmove  eax,ecx
  420b5a:	mov    DWORD PTR [r10],eax
  420b5d:	cdqe   
  420b5f:	shl    rax,0x3
  420b63:	lea    rsi,[rax+rax*4]
  420b67:	mov    r15,rbp
  420b6a:	mov    rbp,r10
  420b6d:	call   4061c0 <realloc@plt>
  420b72:	mov    QWORD PTR [r15],rax
  420b75:	test   rax,rax
  420b78:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420b7e:	movsxd rcx,DWORD PTR [rbp+0x0]
  420b82:	lea    rcx,[rcx+rcx*4]
  420b86:	lea    rcx,[rax+rcx*8]
  420b8a:	mov    r9,QWORD PTR [rsp]
  420b8e:	mov    QWORD PTR [r9],rcx
  420b91:	lea    rax,[rax+rbx*8]
  420b95:	mov    rsi,QWORD PTR [rsp+0x20]
  420b9a:	mov    QWORD PTR [rsi],rax
  420b9d:	mov    r11,QWORD PTR [rsp+0x18]
  420ba2:	mov    r8,QWORD PTR [rsp+0x8]
  420ba7:	mov    r10,rbp
  420baa:	mov    rbp,QWORD PTR [rsp+0x10]
  420baf:	lea    r15,[r14+0x3]
  420bb3:	mov    QWORD PTR [rax+0x20],0x3d3d3d
  420bbb:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  420bc0:	mov    rdi,QWORD PTR [rbp+0x0]
  420bc4:	movsxd rcx,DWORD PTR [r10]
  420bc7:	lea    rbx,[rcx+rcx*4]
  420bcb:	lea    rdx,[rdi+rbx*8]
  420bcf:	mov    QWORD PTR [r9],rdx
  420bd2:	mov    rax,QWORD PTR [rsi]
  420bd5:	cmp    rax,rdx
  420bd8:	jne    420c42 <__flatcc_fb_parse@@Base+0x4bd2>
  420bda:	lea    eax,[rcx+rcx*1]
  420bdd:	test   ecx,ecx
  420bdf:	mov    ecx,0x400
  420be4:	cmove  eax,ecx
  420be7:	mov    DWORD PTR [r10],eax
  420bea:	cdqe   
  420bec:	shl    rax,0x3
  420bf0:	lea    rsi,[rax+rax*4]
  420bf4:	mov    r12,rbp
  420bf7:	mov    rbp,r10
  420bfa:	call   4061c0 <realloc@plt>
  420bff:	mov    QWORD PTR [r12],rax
  420c03:	test   rax,rax
  420c06:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420c0c:	movsxd rcx,DWORD PTR [rbp+0x0]
  420c10:	lea    rcx,[rcx+rcx*4]
  420c14:	lea    rcx,[rax+rcx*8]
  420c18:	mov    r9,QWORD PTR [rsp]
  420c1c:	mov    QWORD PTR [r9],rcx
  420c1f:	lea    rax,[rax+rbx*8]
  420c23:	mov    rsi,QWORD PTR [rsp+0x20]
  420c28:	mov    QWORD PTR [rsi],rax
  420c2b:	mov    r11,QWORD PTR [rsp+0x18]
  420c30:	mov    r8,QWORD PTR [rsp+0x8]
  420c35:	mov    r10,rbp
  420c38:	mov    rbp,QWORD PTR [rsp+0x10]
  420c3d:	mov    r12,QWORD PTR [rsp+0x28]
  420c42:	mov    QWORD PTR [rax+0x20],0x5
  420c4a:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  420c4f:	movsxd rdx,r10d
  420c52:	lea    rbx,[rdx+rdx*4]
  420c56:	lea    rdx,[rax+rbx*8]
  420c5a:	mov    rdi,QWORD PTR [rsp]
  420c5e:	mov    QWORD PTR [rdi],rdx
  420c61:	cmp    rcx,rdx
  420c64:	mov    r13,QWORD PTR [rsp+0x40]
  420c69:	jne    420cd5 <__flatcc_fb_parse@@Base+0x4c65>
  420c6b:	lea    ecx,[r10+r10*1]
  420c6f:	test   r10d,r10d
  420c72:	mov    edx,0x400
  420c77:	cmove  ecx,edx
  420c7a:	mov    rbp,QWORD PTR [rsp+0x30]
  420c7f:	mov    DWORD PTR [rbp+0x0],ecx
  420c82:	movsxd rcx,ecx
  420c85:	shl    rcx,0x3
  420c89:	lea    rsi,[rcx+rcx*4]
  420c8d:	mov    rdi,rax
  420c90:	call   4061c0 <realloc@plt>
  420c95:	mov    rcx,QWORD PTR [rsp+0x10]
  420c9a:	mov    QWORD PTR [rcx],rax
  420c9d:	test   rax,rax
  420ca0:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420ca6:	movsxd rcx,DWORD PTR [rbp+0x0]
  420caa:	lea    rcx,[rcx+rcx*4]
  420cae:	lea    rcx,[rax+rcx*8]
  420cb2:	mov    rdx,QWORD PTR [rsp]
  420cb6:	mov    QWORD PTR [rdx],rcx
  420cb9:	lea    rcx,[rax+rbx*8]
  420cbd:	mov    rsi,QWORD PTR [rsp+0x20]
  420cc2:	mov    QWORD PTR [rsi],rcx
  420cc5:	mov    rax,QWORD PTR [rsp+0x8]
  420cca:	mov    r9,QWORD PTR [rax]
  420ccd:	mov    r11,QWORD PTR [rsp+0x18]
  420cd2:	mov    r8,QWORD PTR [r11]
  420cd5:	mov    QWORD PTR [rcx+0x20],0x17
  420cdd:	mov    QWORD PTR [rcx],r15
  420ce0:	mov    QWORD PTR [rcx+0x8],0x0
  420ce8:	mov    QWORD PTR [rcx+0x10],r9
  420cec:	lea    rax,[r15+0x1]
  420cf0:	sub    rax,r8
  420cf3:	mov    QWORD PTR [rcx+0x18],rax
  420cf7:	add    rcx,0x28
  420cfb:	mov    QWORD PTR [rsi],rcx
  420cfe:	mov    r14,r15
  420d01:	mov    r8,QWORD PTR [rsp+0x8]
  420d06:	mov    r9,QWORD PTR [rsp]
  420d0a:	mov    r10,QWORD PTR [rsp+0x30]
  420d0f:	mov    rbp,QWORD PTR [rsp+0x10]
  420d14:	jmp    421302 <__flatcc_fb_parse@@Base+0x5292>
  420d19:	mov    rdi,QWORD PTR [rbp+0x0]
  420d1d:	movsxd rcx,DWORD PTR [r10]
  420d20:	lea    rbx,[rcx+rcx*4]
  420d24:	lea    rdx,[rdi+rbx*8]
  420d28:	mov    QWORD PTR [r9],rdx
  420d2b:	mov    rax,QWORD PTR [rsi]
  420d2e:	cmp    rax,rdx
  420d31:	jne    420d95 <__flatcc_fb_parse@@Base+0x4d25>
  420d33:	lea    eax,[rcx+rcx*1]
  420d36:	test   ecx,ecx
  420d38:	mov    ecx,0x400
  420d3d:	cmove  eax,ecx
  420d40:	mov    DWORD PTR [r10],eax
  420d43:	cdqe   
  420d45:	shl    rax,0x3
  420d49:	lea    rsi,[rax+rax*4]
  420d4d:	mov    r15,rbp
  420d50:	mov    rbp,r10
  420d53:	call   4061c0 <realloc@plt>
  420d58:	mov    QWORD PTR [r15],rax
  420d5b:	test   rax,rax
  420d5e:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420d64:	movsxd rcx,DWORD PTR [rbp+0x0]
  420d68:	lea    rcx,[rcx+rcx*4]
  420d6c:	lea    rcx,[rax+rcx*8]
  420d70:	mov    r9,QWORD PTR [rsp]
  420d74:	mov    QWORD PTR [r9],rcx
  420d77:	lea    rax,[rax+rbx*8]
  420d7b:	mov    rsi,QWORD PTR [rsp+0x20]
  420d80:	mov    QWORD PTR [rsi],rax
  420d83:	mov    r11,QWORD PTR [rsp+0x18]
  420d88:	mov    r8,QWORD PTR [rsp+0x8]
  420d8d:	mov    r10,rbp
  420d90:	mov    rbp,QWORD PTR [rsp+0x10]
  420d95:	lea    r15,[r14+0x2]
  420d99:	mov    QWORD PTR [rax+0x20],0x3d3c
  420da1:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  420da6:	lea    r15,[r14+0x2]
  420daa:	cmp    r15,r13
  420dad:	je     4214e2 <__flatcc_fb_parse@@Base+0x5472>
  420db3:	movsx  eax,BYTE PTR [r15]
  420db7:	cmp    eax,0x3c
  420dba:	je     421eb5 <__flatcc_fb_parse@@Base+0x5e45>
  420dc0:	cmp    eax,0x3d
  420dc3:	jne    4214e2 <__flatcc_fb_parse@@Base+0x5472>
  420dc9:	mov    rdi,QWORD PTR [rbp+0x0]
  420dcd:	movsxd rcx,DWORD PTR [r10]
  420dd0:	lea    rbx,[rcx+rcx*4]
  420dd4:	lea    rdx,[rdi+rbx*8]
  420dd8:	mov    QWORD PTR [r9],rdx
  420ddb:	mov    rax,QWORD PTR [rsi]
  420dde:	cmp    rax,rdx
  420de1:	jne    420e45 <__flatcc_fb_parse@@Base+0x4dd5>
  420de3:	lea    eax,[rcx+rcx*1]
  420de6:	test   ecx,ecx
  420de8:	mov    ecx,0x400
  420ded:	cmove  eax,ecx
  420df0:	mov    DWORD PTR [r10],eax
  420df3:	cdqe   
  420df5:	shl    rax,0x3
  420df9:	lea    rsi,[rax+rax*4]
  420dfd:	mov    r15,rbp
  420e00:	mov    rbp,r10
  420e03:	call   4061c0 <realloc@plt>
  420e08:	mov    QWORD PTR [r15],rax
  420e0b:	test   rax,rax
  420e0e:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420e14:	movsxd rcx,DWORD PTR [rbp+0x0]
  420e18:	lea    rcx,[rcx+rcx*4]
  420e1c:	lea    rcx,[rax+rcx*8]
  420e20:	mov    r9,QWORD PTR [rsp]
  420e24:	mov    QWORD PTR [r9],rcx
  420e27:	lea    rax,[rax+rbx*8]
  420e2b:	mov    rsi,QWORD PTR [rsp+0x20]
  420e30:	mov    QWORD PTR [rsi],rax
  420e33:	mov    r11,QWORD PTR [rsp+0x18]
  420e38:	mov    r8,QWORD PTR [rsp+0x8]
  420e3d:	mov    r10,rbp
  420e40:	mov    rbp,QWORD PTR [rsp+0x10]
  420e45:	lea    r15,[r14+0x3]
  420e49:	mov    QWORD PTR [rax+0x20],0x3d3c3c
  420e51:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  420e56:	lea    rbp,[r14+0x2]
  420e5a:	cmp    rbp,r13
  420e5d:	je     421999 <__flatcc_fb_parse@@Base+0x5929>
  420e63:	mov    al,BYTE PTR [rbp+0x0]
  420e66:	cmp    al,0x2a
  420e68:	sete   cl
  420e6b:	cmp    al,0x21
  420e6d:	sete   al
  420e70:	or     al,cl
  420e72:	jmp    42199b <__flatcc_fb_parse@@Base+0x592b>
  420e77:	mov    rdi,QWORD PTR [rbp+0x0]
  420e7b:	movsxd rcx,DWORD PTR [r10]
  420e7e:	lea    rbx,[rcx+rcx*4]
  420e82:	lea    rdx,[rdi+rbx*8]
  420e86:	mov    QWORD PTR [r9],rdx
  420e89:	mov    rax,QWORD PTR [rsi]
  420e8c:	cmp    rax,rdx
  420e8f:	jne    420ef3 <__flatcc_fb_parse@@Base+0x4e83>
  420e91:	lea    eax,[rcx+rcx*1]
  420e94:	test   ecx,ecx
  420e96:	mov    ecx,0x400
  420e9b:	cmove  eax,ecx
  420e9e:	mov    DWORD PTR [r10],eax
  420ea1:	cdqe   
  420ea3:	shl    rax,0x3
  420ea7:	lea    rsi,[rax+rax*4]
  420eab:	mov    r15,rbp
  420eae:	mov    rbp,r10
  420eb1:	call   4061c0 <realloc@plt>
  420eb6:	mov    QWORD PTR [r15],rax
  420eb9:	test   rax,rax
  420ebc:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420ec2:	movsxd rcx,DWORD PTR [rbp+0x0]
  420ec6:	lea    rcx,[rcx+rcx*4]
  420eca:	lea    rcx,[rax+rcx*8]
  420ece:	mov    r9,QWORD PTR [rsp]
  420ed2:	mov    QWORD PTR [r9],rcx
  420ed5:	lea    rax,[rax+rbx*8]
  420ed9:	mov    rsi,QWORD PTR [rsp+0x20]
  420ede:	mov    QWORD PTR [rsi],rax
  420ee1:	mov    r11,QWORD PTR [rsp+0x18]
  420ee6:	mov    r8,QWORD PTR [rsp+0x8]
  420eeb:	mov    r10,rbp
  420eee:	mov    rbp,QWORD PTR [rsp+0x10]
  420ef3:	lea    r15,[r14+0x2]
  420ef7:	mov    QWORD PTR [rax+0x20],0x3d2f
  420eff:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  420f04:	mov    rdi,QWORD PTR [rbp+0x0]
  420f08:	movsxd rcx,DWORD PTR [r10]
  420f0b:	lea    rbx,[rcx+rcx*4]
  420f0f:	lea    rdx,[rdi+rbx*8]
  420f13:	mov    QWORD PTR [r9],rdx
  420f16:	mov    rax,QWORD PTR [rsi]
  420f19:	cmp    rax,rdx
  420f1c:	jne    420f80 <__flatcc_fb_parse@@Base+0x4f10>
  420f1e:	lea    eax,[rcx+rcx*1]
  420f21:	test   ecx,ecx
  420f23:	mov    ecx,0x400
  420f28:	cmove  eax,ecx
  420f2b:	mov    DWORD PTR [r10],eax
  420f2e:	cdqe   
  420f30:	shl    rax,0x3
  420f34:	lea    rsi,[rax+rax*4]
  420f38:	mov    r15,rbp
  420f3b:	mov    rbp,r10
  420f3e:	call   4061c0 <realloc@plt>
  420f43:	mov    QWORD PTR [r15],rax
  420f46:	test   rax,rax
  420f49:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420f4f:	movsxd rcx,DWORD PTR [rbp+0x0]
  420f53:	lea    rcx,[rcx+rcx*4]
  420f57:	lea    rcx,[rax+rcx*8]
  420f5b:	mov    r9,QWORD PTR [rsp]
  420f5f:	mov    QWORD PTR [r9],rcx
  420f62:	lea    rax,[rax+rbx*8]
  420f66:	mov    rsi,QWORD PTR [rsp+0x20]
  420f6b:	mov    QWORD PTR [rsi],rax
  420f6e:	mov    r11,QWORD PTR [rsp+0x18]
  420f73:	mov    r8,QWORD PTR [rsp+0x8]
  420f78:	mov    r10,rbp
  420f7b:	mov    rbp,QWORD PTR [rsp+0x10]
  420f80:	lea    r15,[r14+0x2]
  420f84:	mov    QWORD PTR [rax+0x20],0x2d2d
  420f8c:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  420f91:	mov    rdi,QWORD PTR [rbp+0x0]
  420f95:	movsxd rcx,DWORD PTR [r10]
  420f98:	lea    rbx,[rcx+rcx*4]
  420f9c:	lea    rdx,[rdi+rbx*8]
  420fa0:	mov    QWORD PTR [r9],rdx
  420fa3:	mov    rax,QWORD PTR [rsi]
  420fa6:	cmp    rax,rdx
  420fa9:	jne    42100d <__flatcc_fb_parse@@Base+0x4f9d>
  420fab:	lea    eax,[rcx+rcx*1]
  420fae:	test   ecx,ecx
  420fb0:	mov    ecx,0x400
  420fb5:	cmove  eax,ecx
  420fb8:	mov    DWORD PTR [r10],eax
  420fbb:	cdqe   
  420fbd:	shl    rax,0x3
  420fc1:	lea    rsi,[rax+rax*4]
  420fc5:	mov    r15,rbp
  420fc8:	mov    rbp,r10
  420fcb:	call   4061c0 <realloc@plt>
  420fd0:	mov    QWORD PTR [r15],rax
  420fd3:	test   rax,rax
  420fd6:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  420fdc:	movsxd rcx,DWORD PTR [rbp+0x0]
  420fe0:	lea    rcx,[rcx+rcx*4]
  420fe4:	lea    rcx,[rax+rcx*8]
  420fe8:	mov    r9,QWORD PTR [rsp]
  420fec:	mov    QWORD PTR [r9],rcx
  420fef:	lea    rax,[rax+rbx*8]
  420ff3:	mov    rsi,QWORD PTR [rsp+0x20]
  420ff8:	mov    QWORD PTR [rsi],rax
  420ffb:	mov    r11,QWORD PTR [rsp+0x18]
  421000:	mov    r8,QWORD PTR [rsp+0x8]
  421005:	mov    r10,rbp
  421008:	mov    rbp,QWORD PTR [rsp+0x10]
  42100d:	lea    r15,[r14+0x2]
  421011:	mov    QWORD PTR [rax+0x20],0x3e2d
  421019:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  42101e:	mov    rdi,QWORD PTR [rbp+0x0]
  421022:	movsxd rcx,DWORD PTR [r10]
  421025:	lea    rbx,[rcx+rcx*4]
  421029:	lea    rdx,[rdi+rbx*8]
  42102d:	mov    QWORD PTR [r9],rdx
  421030:	mov    rax,QWORD PTR [rsi]
  421033:	cmp    rax,rdx
  421036:	jne    4210a0 <__flatcc_fb_parse@@Base+0x5030>
  421038:	lea    eax,[rcx+rcx*1]
  42103b:	test   ecx,ecx
  42103d:	mov    ecx,0x400
  421042:	cmove  eax,ecx
  421045:	mov    DWORD PTR [r10],eax
  421048:	cdqe   
  42104a:	shl    rax,0x3
  42104e:	lea    rsi,[rax+rax*4]
  421052:	mov    r12,rbp
  421055:	mov    rbp,r10
  421058:	call   4061c0 <realloc@plt>
  42105d:	mov    QWORD PTR [r12],rax
  421061:	test   rax,rax
  421064:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42106a:	movsxd rcx,DWORD PTR [rbp+0x0]
  42106e:	lea    rcx,[rcx+rcx*4]
  421072:	lea    rcx,[rax+rcx*8]
  421076:	mov    r9,QWORD PTR [rsp]
  42107a:	mov    QWORD PTR [r9],rcx
  42107d:	lea    rax,[rax+rbx*8]
  421081:	mov    rsi,QWORD PTR [rsp+0x20]
  421086:	mov    QWORD PTR [rsi],rax
  421089:	mov    r11,QWORD PTR [rsp+0x18]
  42108e:	mov    r8,QWORD PTR [rsp+0x8]
  421093:	mov    r10,rbp
  421096:	mov    rbp,QWORD PTR [rsp+0x10]
  42109b:	mov    r12,QWORD PTR [rsp+0x28]
  4210a0:	mov    QWORD PTR [rax+0x20],0x3a3a
  4210a8:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  4210ad:	mov    rdi,QWORD PTR [rbp+0x0]
  4210b1:	movsxd rcx,DWORD PTR [r10]
  4210b4:	lea    rbx,[rcx+rcx*4]
  4210b8:	lea    rdx,[rdi+rbx*8]
  4210bc:	mov    QWORD PTR [r9],rdx
  4210bf:	mov    rax,QWORD PTR [rsi]
  4210c2:	cmp    rax,rdx
  4210c5:	jne    42112f <__flatcc_fb_parse@@Base+0x50bf>
  4210c7:	lea    eax,[rcx+rcx*1]
  4210ca:	test   ecx,ecx
  4210cc:	mov    ecx,0x400
  4210d1:	cmove  eax,ecx
  4210d4:	mov    DWORD PTR [r10],eax
  4210d7:	cdqe   
  4210d9:	shl    rax,0x3
  4210dd:	lea    rsi,[rax+rax*4]
  4210e1:	mov    r12,rbp
  4210e4:	mov    rbp,r10
  4210e7:	call   4061c0 <realloc@plt>
  4210ec:	mov    QWORD PTR [r12],rax
  4210f0:	test   rax,rax
  4210f3:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4210f9:	movsxd rcx,DWORD PTR [rbp+0x0]
  4210fd:	lea    rcx,[rcx+rcx*4]
  421101:	lea    rcx,[rax+rcx*8]
  421105:	mov    r9,QWORD PTR [rsp]
  421109:	mov    QWORD PTR [r9],rcx
  42110c:	lea    rax,[rax+rbx*8]
  421110:	mov    rsi,QWORD PTR [rsp+0x20]
  421115:	mov    QWORD PTR [rsi],rax
  421118:	mov    r11,QWORD PTR [rsp+0x18]
  42111d:	mov    r8,QWORD PTR [rsp+0x8]
  421122:	mov    r10,rbp
  421125:	mov    rbp,QWORD PTR [rsp+0x10]
  42112a:	mov    r12,QWORD PTR [rsp+0x28]
  42112f:	mov    QWORD PTR [rax+0x20],0x3d3d
  421137:	mov    QWORD PTR [rax],r14
  42113a:	mov    QWORD PTR [rax+0x8],0x2
  421142:	mov    rcx,QWORD PTR [r8]
  421145:	mov    QWORD PTR [rax+0x10],rcx
  421149:	lea    rcx,[r14+0x1]
  42114d:	sub    rcx,QWORD PTR [r11]
  421150:	mov    QWORD PTR [rax+0x18],rcx
  421154:	add    rax,0x28
  421158:	mov    QWORD PTR [rsi],rax
  42115b:	mov    rdi,QWORD PTR [rbp+0x0]
  42115f:	movsxd rcx,DWORD PTR [r10]
  421162:	lea    rbx,[rcx+rcx*4]
  421166:	lea    rdx,[rdi+rbx*8]
  42116a:	mov    QWORD PTR [r9],rdx
  42116d:	mov    rax,QWORD PTR [rsi]
  421170:	cmp    rax,rdx
  421173:	jne    4211dd <__flatcc_fb_parse@@Base+0x516d>
  421175:	lea    eax,[rcx+rcx*1]
  421178:	test   ecx,ecx
  42117a:	mov    ecx,0x400
  42117f:	cmove  eax,ecx
  421182:	mov    DWORD PTR [r10],eax
  421185:	cdqe   
  421187:	shl    rax,0x3
  42118b:	lea    rsi,[rax+rax*4]
  42118f:	mov    r12,rbp
  421192:	mov    rbp,r10
  421195:	call   4061c0 <realloc@plt>
  42119a:	mov    QWORD PTR [r12],rax
  42119e:	test   rax,rax
  4211a1:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4211a7:	movsxd rcx,DWORD PTR [rbp+0x0]
  4211ab:	lea    rcx,[rcx+rcx*4]
  4211af:	lea    rcx,[rax+rcx*8]
  4211b3:	mov    r9,QWORD PTR [rsp]
  4211b7:	mov    QWORD PTR [r9],rcx
  4211ba:	lea    rax,[rax+rbx*8]
  4211be:	mov    rsi,QWORD PTR [rsp+0x20]
  4211c3:	mov    QWORD PTR [rsi],rax
  4211c6:	mov    r11,QWORD PTR [rsp+0x18]
  4211cb:	mov    r8,QWORD PTR [rsp+0x8]
  4211d0:	mov    r10,rbp
  4211d3:	mov    rbp,QWORD PTR [rsp+0x10]
  4211d8:	mov    r12,QWORD PTR [rsp+0x28]
  4211dd:	mov    QWORD PTR [rax+0x20],0x3d
  4211e5:	mov    QWORD PTR [rax],r14
  4211e8:	mov    rcx,r15
  4211eb:	sub    rcx,r14
  4211ee:	mov    QWORD PTR [rax+0x8],rcx
  4211f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4211fc:	nop    DWORD PTR [rax+0x0]
  421200:	mov    rcx,QWORD PTR [r8]
  421203:	mov    QWORD PTR [rax+0x10],rcx
  421207:	add    r14,0x1
  42120b:	sub    r14,QWORD PTR [r11]
  42120e:	mov    QWORD PTR [rax+0x18],r14
  421212:	add    rax,0x28
  421216:	mov    QWORD PTR [rsi],rax
  421219:	lea    rdx,[rip+0x258a0]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421220:	mov    r14,r15
  421223:	cmp    r15,r13
  421226:	jne    41e600 <__flatcc_fb_parse@@Base+0x2590>
  42122c:	jmp    4220b7 <__flatcc_fb_parse@@Base+0x6047>
  421231:	mov    r13,QWORD PTR [rsp+0x40]
  421236:	mov    r14,r13
  421239:	jmp    421242 <__flatcc_fb_parse@@Base+0x51d2>
  42123b:	add    rbp,0x1
  42123f:	mov    r14,rbp
  421242:	movsxd rdx,r10d
  421245:	lea    rbx,[rdx+rdx*4]
  421249:	lea    rdx,[rax+rbx*8]
  42124d:	mov    rdi,QWORD PTR [rsp]
  421251:	mov    QWORD PTR [rdi],rdx
  421254:	cmp    rcx,rdx
  421257:	mov    rbp,QWORD PTR [rsp+0x10]
  42125c:	jne    4212cb <__flatcc_fb_parse@@Base+0x525b>
  42125e:	lea    ecx,[r10+r10*1]
  421262:	test   r10d,r10d
  421265:	mov    edx,0x400
  42126a:	cmove  ecx,edx
  42126d:	mov    r15,rbp
  421270:	mov    rbp,QWORD PTR [rsp+0x30]
  421275:	mov    DWORD PTR [rbp+0x0],ecx
  421278:	movsxd rcx,ecx
  42127b:	shl    rcx,0x3
  42127f:	lea    rsi,[rcx+rcx*4]
  421283:	mov    rdi,rax
  421286:	call   4061c0 <realloc@plt>
  42128b:	mov    QWORD PTR [r15],rax
  42128e:	test   rax,rax
  421291:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421297:	movsxd rcx,DWORD PTR [rbp+0x0]
  42129b:	lea    rcx,[rcx+rcx*4]
  42129f:	lea    rcx,[rax+rcx*8]
  4212a3:	mov    rdx,QWORD PTR [rsp]
  4212a7:	mov    QWORD PTR [rdx],rcx
  4212aa:	lea    rcx,[rax+rbx*8]
  4212ae:	mov    rsi,QWORD PTR [rsp+0x20]
  4212b3:	mov    QWORD PTR [rsi],rcx
  4212b6:	mov    rax,QWORD PTR [rsp+0x8]
  4212bb:	mov    r9,QWORD PTR [rax]
  4212be:	mov    r11,QWORD PTR [rsp+0x18]
  4212c3:	mov    r8,QWORD PTR [r11]
  4212c6:	mov    rbp,QWORD PTR [rsp+0x10]
  4212cb:	mov    QWORD PTR [rcx+0x20],0x17
  4212d3:	mov    QWORD PTR [rcx],r14
  4212d6:	mov    QWORD PTR [rcx+0x8],0x0
  4212de:	mov    QWORD PTR [rcx+0x10],r9
  4212e2:	lea    rax,[r14+0x1]
  4212e6:	sub    rax,r8
  4212e9:	mov    QWORD PTR [rcx+0x18],rax
  4212ed:	add    rcx,0x28
  4212f1:	mov    QWORD PTR [rsi],rcx
  4212f4:	mov    r8,QWORD PTR [rsp+0x8]
  4212f9:	mov    r9,QWORD PTR [rsp]
  4212fd:	mov    r10,QWORD PTR [rsp+0x30]
  421302:	lea    rdx,[rip+0x257b7]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421309:	cmp    r14,r13
  42130c:	jne    41e600 <__flatcc_fb_parse@@Base+0x2590>
  421312:	jmp    4220b7 <__flatcc_fb_parse@@Base+0x6047>
  421317:	mov    rdi,QWORD PTR [rbp+0x0]
  42131b:	movsxd rcx,DWORD PTR [r10]
  42131e:	lea    rbx,[rcx+rcx*4]
  421322:	lea    rdx,[rdi+rbx*8]
  421326:	mov    QWORD PTR [r9],rdx
  421329:	mov    rax,QWORD PTR [rsi]
  42132c:	cmp    rax,rdx
  42132f:	jne    421399 <__flatcc_fb_parse@@Base+0x5329>
  421331:	lea    eax,[rcx+rcx*1]
  421334:	test   ecx,ecx
  421336:	mov    ecx,0x400
  42133b:	cmove  eax,ecx
  42133e:	mov    DWORD PTR [r10],eax
  421341:	cdqe   
  421343:	shl    rax,0x3
  421347:	lea    rsi,[rax+rax*4]
  42134b:	mov    r12,rbp
  42134e:	mov    rbp,r10
  421351:	call   4061c0 <realloc@plt>
  421356:	mov    QWORD PTR [r12],rax
  42135a:	test   rax,rax
  42135d:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421363:	movsxd rcx,DWORD PTR [rbp+0x0]
  421367:	lea    rcx,[rcx+rcx*4]
  42136b:	lea    rcx,[rax+rcx*8]
  42136f:	mov    r9,QWORD PTR [rsp]
  421373:	mov    QWORD PTR [r9],rcx
  421376:	lea    rax,[rax+rbx*8]
  42137a:	mov    rsi,QWORD PTR [rsp+0x20]
  42137f:	mov    QWORD PTR [rsi],rax
  421382:	mov    r11,QWORD PTR [rsp+0x18]
  421387:	mov    r8,QWORD PTR [rsp+0x8]
  42138c:	mov    r10,rbp
  42138f:	mov    rbp,QWORD PTR [rsp+0x10]
  421394:	mov    r12,QWORD PTR [rsp+0x28]
  421399:	mov    QWORD PTR [rax+0x20],0x3e3e
  4213a1:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  4213a6:	cmp    eax,0x2e
  4213a9:	jne    421453 <__flatcc_fb_parse@@Base+0x53e3>
  4213af:	lea    r15,[r14+0x2]
  4213b3:	cmp    r15,r13
  4213b6:	je     421e26 <__flatcc_fb_parse@@Base+0x5db6>
  4213bc:	cmp    BYTE PTR [r15],0x2e
  4213c0:	jne    421e26 <__flatcc_fb_parse@@Base+0x5db6>
  4213c6:	mov    rdi,QWORD PTR [rbp+0x0]
  4213ca:	movsxd rcx,DWORD PTR [r10]
  4213cd:	lea    rbx,[rcx+rcx*4]
  4213d1:	lea    rdx,[rdi+rbx*8]
  4213d5:	mov    QWORD PTR [r9],rdx
  4213d8:	mov    rax,QWORD PTR [rsi]
  4213db:	cmp    rax,rdx
  4213de:	jne    421442 <__flatcc_fb_parse@@Base+0x53d2>
  4213e0:	lea    eax,[rcx+rcx*1]
  4213e3:	test   ecx,ecx
  4213e5:	mov    ecx,0x400
  4213ea:	cmove  eax,ecx
  4213ed:	mov    DWORD PTR [r10],eax
  4213f0:	cdqe   
  4213f2:	shl    rax,0x3
  4213f6:	lea    rsi,[rax+rax*4]
  4213fa:	mov    r15,rbp
  4213fd:	mov    rbp,r10
  421400:	call   4061c0 <realloc@plt>
  421405:	mov    QWORD PTR [r15],rax
  421408:	test   rax,rax
  42140b:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421411:	movsxd rcx,DWORD PTR [rbp+0x0]
  421415:	lea    rcx,[rcx+rcx*4]
  421419:	lea    rcx,[rax+rcx*8]
  42141d:	mov    r9,QWORD PTR [rsp]
  421421:	mov    QWORD PTR [r9],rcx
  421424:	lea    rax,[rax+rbx*8]
  421428:	mov    rsi,QWORD PTR [rsp+0x20]
  42142d:	mov    QWORD PTR [rsi],rax
  421430:	mov    r11,QWORD PTR [rsp+0x18]
  421435:	mov    r8,QWORD PTR [rsp+0x8]
  42143a:	mov    r10,rbp
  42143d:	mov    rbp,QWORD PTR [rsp+0x10]
  421442:	lea    r15,[r14+0x3]
  421446:	mov    QWORD PTR [rax+0x20],0x2e2e2e
  42144e:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  421453:	mov    rdi,QWORD PTR [rbp+0x0]
  421457:	movsxd rcx,DWORD PTR [r10]
  42145a:	lea    rbx,[rcx+rcx*4]
  42145e:	lea    rdx,[rdi+rbx*8]
  421462:	mov    QWORD PTR [r9],rdx
  421465:	mov    rax,QWORD PTR [rsi]
  421468:	cmp    rax,rdx
  42146b:	jne    4214d5 <__flatcc_fb_parse@@Base+0x5465>
  42146d:	lea    eax,[rcx+rcx*1]
  421470:	test   ecx,ecx
  421472:	mov    ecx,0x400
  421477:	cmove  eax,ecx
  42147a:	mov    DWORD PTR [r10],eax
  42147d:	cdqe   
  42147f:	shl    rax,0x3
  421483:	lea    rsi,[rax+rax*4]
  421487:	mov    r12,rbp
  42148a:	mov    rbp,r10
  42148d:	call   4061c0 <realloc@plt>
  421492:	mov    QWORD PTR [r12],rax
  421496:	test   rax,rax
  421499:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42149f:	movsxd rcx,DWORD PTR [rbp+0x0]
  4214a3:	lea    rcx,[rcx+rcx*4]
  4214a7:	lea    rcx,[rax+rcx*8]
  4214ab:	mov    r9,QWORD PTR [rsp]
  4214af:	mov    QWORD PTR [r9],rcx
  4214b2:	lea    rax,[rax+rbx*8]
  4214b6:	mov    rsi,QWORD PTR [rsp+0x20]
  4214bb:	mov    QWORD PTR [rsi],rax
  4214be:	mov    r11,QWORD PTR [rsp+0x18]
  4214c3:	mov    r8,QWORD PTR [rsp+0x8]
  4214c8:	mov    r10,rbp
  4214cb:	mov    rbp,QWORD PTR [rsp+0x10]
  4214d0:	mov    r12,QWORD PTR [rsp+0x28]
  4214d5:	mov    QWORD PTR [rax+0x20],0x2e
  4214dd:	jmp    41e8eb <__flatcc_fb_parse@@Base+0x287b>
  4214e2:	mov    rdi,QWORD PTR [rbp+0x0]
  4214e6:	movsxd rcx,DWORD PTR [r10]
  4214e9:	lea    rbx,[rcx+rcx*4]
  4214ed:	lea    rdx,[rdi+rbx*8]
  4214f1:	mov    QWORD PTR [r9],rdx
  4214f4:	mov    rax,QWORD PTR [rsi]
  4214f7:	cmp    rax,rdx
  4214fa:	jne    421564 <__flatcc_fb_parse@@Base+0x54f4>
  4214fc:	lea    eax,[rcx+rcx*1]
  4214ff:	test   ecx,ecx
  421501:	mov    ecx,0x400
  421506:	cmove  eax,ecx
  421509:	mov    DWORD PTR [r10],eax
  42150c:	cdqe   
  42150e:	shl    rax,0x3
  421512:	lea    rsi,[rax+rax*4]
  421516:	mov    r12,rbp
  421519:	mov    rbp,r10
  42151c:	call   4061c0 <realloc@plt>
  421521:	mov    QWORD PTR [r12],rax
  421525:	test   rax,rax
  421528:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42152e:	movsxd rcx,DWORD PTR [rbp+0x0]
  421532:	lea    rcx,[rcx+rcx*4]
  421536:	lea    rcx,[rax+rcx*8]
  42153a:	mov    r9,QWORD PTR [rsp]
  42153e:	mov    QWORD PTR [r9],rcx
  421541:	lea    rax,[rax+rbx*8]
  421545:	mov    rsi,QWORD PTR [rsp+0x20]
  42154a:	mov    QWORD PTR [rsi],rax
  42154d:	mov    r11,QWORD PTR [rsp+0x18]
  421552:	mov    r8,QWORD PTR [rsp+0x8]
  421557:	mov    r10,rbp
  42155a:	mov    rbp,QWORD PTR [rsp+0x10]
  42155f:	mov    r12,QWORD PTR [rsp+0x28]
  421564:	mov    QWORD PTR [rax+0x20],0x3c3c
  42156c:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  421571:	mov    r15,rax
  421574:	mov    rdi,QWORD PTR [rbp+0x0]
  421578:	movsxd rcx,DWORD PTR [r10]
  42157b:	lea    r12,[rcx+rcx*4]
  42157f:	lea    rdx,[rdi+r12*8]
  421583:	mov    QWORD PTR [r9],rdx
  421586:	mov    rax,QWORD PTR [rsi]
  421589:	cmp    rax,rdx
  42158c:	jne    4215f2 <__flatcc_fb_parse@@Base+0x5582>
  42158e:	lea    eax,[rcx+rcx*1]
  421591:	test   ecx,ecx
  421593:	mov    ecx,0x400
  421598:	cmove  eax,ecx
  42159b:	mov    DWORD PTR [r10],eax
  42159e:	cdqe   
  4215a0:	shl    rax,0x3
  4215a4:	lea    rsi,[rax+rax*4]
  4215a8:	mov    rbp,r10
  4215ab:	call   4061c0 <realloc@plt>
  4215b0:	mov    rcx,QWORD PTR [rsp+0x10]
  4215b5:	mov    QWORD PTR [rcx],rax
  4215b8:	test   rax,rax
  4215bb:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4215c1:	movsxd rcx,DWORD PTR [rbp+0x0]
  4215c5:	lea    rcx,[rcx+rcx*4]
  4215c9:	lea    rcx,[rax+rcx*8]
  4215cd:	mov    r9,QWORD PTR [rsp]
  4215d1:	mov    QWORD PTR [r9],rcx
  4215d4:	lea    rax,[rax+r12*8]
  4215d8:	mov    rsi,QWORD PTR [rsp+0x20]
  4215dd:	mov    QWORD PTR [rsi],rax
  4215e0:	mov    r11,QWORD PTR [rsp+0x18]
  4215e5:	mov    r8,QWORD PTR [rsp+0x8]
  4215ea:	mov    r10,rbp
  4215ed:	mov    rbp,QWORD PTR [rsp+0x10]
  4215f2:	mov    QWORD PTR [rax+0x20],0xe
  4215fa:	mov    QWORD PTR [rax],r14
  4215fd:	mov    rcx,r15
  421600:	sub    rcx,r14
  421603:	mov    QWORD PTR [rax+0x8],rcx
  421607:	mov    rcx,QWORD PTR [r8]
  42160a:	mov    QWORD PTR [rax+0x10],rcx
  42160e:	sub    rbx,QWORD PTR [r11]
  421611:	mov    QWORD PTR [rax+0x18],rbx
  421615:	jmp    41edf7 <__flatcc_fb_parse@@Base+0x2d87>
  42161a:	xor    eax,eax
  42161c:	movzx  eax,al
  42161f:	add    rbp,rax
  421622:	mov    rax,rbp
  421625:	sub    rax,r14
  421628:	xor    ecx,ecx
  42162a:	cmp    rax,0x3
  42162e:	sete   cl
  421631:	mov    rax,QWORD PTR [rsp+0x38]
  421636:	mov    DWORD PTR [rax+0x3c],ecx
  421639:	jne    42171f <__flatcc_fb_parse@@Base+0x56af>
  42163f:	mov    rax,QWORD PTR [rsp+0x10]
  421644:	mov    rdi,QWORD PTR [rax]
  421647:	movsxd rcx,DWORD PTR [r10]
  42164a:	lea    r14,[rcx+rcx*4]
  42164e:	lea    rdx,[rdi+r14*8]
  421652:	mov    QWORD PTR [r9],rdx
  421655:	mov    rax,QWORD PTR [rsi]
  421658:	cmp    rax,rdx
  42165b:	jne    4216bb <__flatcc_fb_parse@@Base+0x564b>
  42165d:	lea    eax,[rcx+rcx*1]
  421660:	test   ecx,ecx
  421662:	mov    ecx,0x400
  421667:	cmove  eax,ecx
  42166a:	mov    DWORD PTR [r10],eax
  42166d:	cdqe   
  42166f:	shl    rax,0x3
  421673:	lea    rsi,[rax+rax*4]
  421677:	mov    rbx,r10
  42167a:	call   4061c0 <realloc@plt>
  42167f:	mov    rcx,QWORD PTR [rsp+0x10]
  421684:	mov    QWORD PTR [rcx],rax
  421687:	test   rax,rax
  42168a:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421690:	movsxd rcx,DWORD PTR [rbx]
  421693:	lea    rcx,[rcx+rcx*4]
  421697:	lea    rcx,[rax+rcx*8]
  42169b:	mov    r9,QWORD PTR [rsp]
  42169f:	mov    QWORD PTR [r9],rcx
  4216a2:	lea    rax,[rax+r14*8]
  4216a6:	mov    rsi,QWORD PTR [rsp+0x20]
  4216ab:	mov    QWORD PTR [rsi],rax
  4216ae:	mov    r11,QWORD PTR [rsp+0x18]
  4216b3:	mov    r8,QWORD PTR [rsp+0x8]
  4216b8:	mov    r10,rbx
  4216bb:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4216c3:	mov    QWORD PTR [rax],rbp
  4216c6:	mov    QWORD PTR [rax+0x8],0x0
  4216ce:	mov    rcx,QWORD PTR [r8]
  4216d1:	mov    QWORD PTR [rax+0x10],rcx
  4216d5:	lea    rcx,[rbp+0x1]
  4216d9:	sub    rcx,QWORD PTR [r11]
  4216dc:	mov    QWORD PTR [rax+0x18],rcx
  4216e0:	add    rax,0x28
  4216e4:	mov    QWORD PTR [rsi],rax
  4216e7:	lea    rdx,[rip+0x253d2]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  4216ee:	jmp    42171f <__flatcc_fb_parse@@Base+0x56af>
  4216f0:	lea    rdx,[rip+0x253c9]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  4216f7:	mov    QWORD PTR [rax+0x20],r14
  4216fb:	mov    QWORD PTR [rax],r15
  4216fe:	mov    QWORD PTR [rax+0x8],0x1
  421706:	mov    rcx,QWORD PTR [r8]
  421709:	mov    QWORD PTR [rax+0x10],rcx
  42170d:	add    r15,0x1
  421711:	sub    r15,QWORD PTR [r11]
  421714:	mov    QWORD PTR [rax+0x18],r15
  421718:	add    rax,0x28
  42171c:	mov    QWORD PTR [rsi],rax
  42171f:	mov    r14,rbp
  421722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42172c:	nop    DWORD PTR [rax+0x0]
  421730:	mov    rbx,r14
  421733:	cmp    r13,r14
  421736:	je     42175b <__flatcc_fb_parse@@Base+0x56eb>
  421738:	movzx  eax,BYTE PTR [rbx]
  42173b:	lea    r14,[rbx+0x1]
  42173f:	cmp    al,0x20
  421741:	jl     421747 <__flatcc_fb_parse@@Base+0x56d7>
  421743:	cmp    al,0x7f
  421745:	jne    421730 <__flatcc_fb_parse@@Base+0x56c0>
  421747:	add    r14,0xffffffffffffffff
  42174b:	xor    r12d,r12d
  42174e:	cmp    rbp,r14
  421751:	jne    421766 <__flatcc_fb_parse@@Base+0x56f6>
  421753:	mov    r15,rbp
  421756:	jmp    421832 <__flatcc_fb_parse@@Base+0x57c2>
  42175b:	mov    r12b,0x1
  42175e:	mov    r14,r13
  421761:	cmp    rbp,r14
  421764:	je     421753 <__flatcc_fb_parse@@Base+0x56e3>
  421766:	mov    rax,QWORD PTR [rsp+0x38]
  42176b:	cmp    DWORD PTR [rax+0x3c],0x0
  42176f:	mov    r15,r14
  421772:	je     421832 <__flatcc_fb_parse@@Base+0x57c2>
  421778:	mov    rax,QWORD PTR [rsp+0x10]
  42177d:	mov    rdi,QWORD PTR [rax]
  421780:	movsxd rcx,DWORD PTR [r10]
  421783:	lea    r15,[rcx+rcx*4]
  421787:	lea    rdx,[rdi+r15*8]
  42178b:	mov    QWORD PTR [r9],rdx
  42178e:	mov    rax,QWORD PTR [rsi]
  421791:	cmp    rax,rdx
  421794:	jne    4217fa <__flatcc_fb_parse@@Base+0x578a>
  421796:	lea    eax,[rcx+rcx*1]
  421799:	test   ecx,ecx
  42179b:	mov    ecx,0x400
  4217a0:	cmove  eax,ecx
  4217a3:	mov    DWORD PTR [r10],eax
  4217a6:	cdqe   
  4217a8:	shl    rax,0x3
  4217ac:	lea    rsi,[rax+rax*4]
  4217b0:	mov    r13,r10
  4217b3:	call   4061c0 <realloc@plt>
  4217b8:	mov    rcx,QWORD PTR [rsp+0x10]
  4217bd:	mov    QWORD PTR [rcx],rax
  4217c0:	test   rax,rax
  4217c3:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4217c9:	movsxd rcx,DWORD PTR [r13+0x0]
  4217cd:	lea    rcx,[rcx+rcx*4]
  4217d1:	lea    rcx,[rax+rcx*8]
  4217d5:	mov    r9,QWORD PTR [rsp]
  4217d9:	mov    QWORD PTR [r9],rcx
  4217dc:	lea    rax,[rax+r15*8]
  4217e0:	mov    rsi,QWORD PTR [rsp+0x20]
  4217e5:	mov    QWORD PTR [rsi],rax
  4217e8:	mov    r11,QWORD PTR [rsp+0x18]
  4217ed:	mov    r8,QWORD PTR [rsp+0x8]
  4217f2:	mov    r10,r13
  4217f5:	mov    r13,QWORD PTR [rsp+0x40]
  4217fa:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421802:	mov    QWORD PTR [rax],rbp
  421805:	mov    rcx,r14
  421808:	sub    rcx,rbp
  42180b:	mov    QWORD PTR [rax+0x8],rcx
  42180f:	mov    rcx,QWORD PTR [r8]
  421812:	mov    QWORD PTR [rax+0x10],rcx
  421816:	add    rbp,0x1
  42181a:	sub    rbp,QWORD PTR [r11]
  42181d:	mov    QWORD PTR [rax+0x18],rbp
  421821:	add    rax,0x28
  421825:	mov    QWORD PTR [rsi],rax
  421828:	mov    r15,r14
  42182b:	lea    rdx,[rip+0x2528e]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421832:	test   r12b,r12b
  421835:	mov    rbp,QWORD PTR [rsp+0x10]
  42183a:	mov    r12,QWORD PTR [rsp+0x28]
  42183f:	jne    422295 <__flatcc_fb_parse@@Base+0x6225>
  421845:	mov    al,BYTE PTR [r14]
  421848:	cmp    al,0xd
  42184a:	je     422091 <__flatcc_fb_parse@@Base+0x6021>
  421850:	cmp    al,0xa
  421852:	je     422091 <__flatcc_fb_parse@@Base+0x6021>
  421858:	test   al,al
  42185a:	je     422295 <__flatcc_fb_parse@@Base+0x6225>
  421860:	mov    rbp,rbx
  421863:	add    rbp,0x1
  421867:	mov    al,BYTE PTR [r15]
  42186a:	cmp    al,0x20
  42186c:	je     421876 <__flatcc_fb_parse@@Base+0x5806>
  42186e:	cmp    al,0x9
  421870:	jne    42190b <__flatcc_fb_parse@@Base+0x589b>
  421876:	mov    rax,QWORD PTR [rsp+0x38]
  42187b:	cmp    DWORD PTR [rax+0x3c],0x0
  42187f:	je     42171f <__flatcc_fb_parse@@Base+0x56af>
  421885:	mov    r12,QWORD PTR [rsp+0x10]
  42188a:	mov    rdi,QWORD PTR [r12]
  42188e:	movsxd rcx,DWORD PTR [r10]
  421891:	lea    rbx,[rcx+rcx*4]
  421895:	lea    rdx,[rdi+rbx*8]
  421899:	mov    QWORD PTR [r9],rdx
  42189c:	mov    rax,QWORD PTR [rsi]
  42189f:	mov    r14,0xfffffffffffffc3c
  4218a6:	cmp    rax,rdx
  4218a9:	jne    4216f0 <__flatcc_fb_parse@@Base+0x5680>
  4218af:	mov    QWORD PTR [rsp+0x48],rbx
  4218b4:	lea    eax,[rcx+rcx*1]
  4218b7:	test   ecx,ecx
  4218b9:	mov    ecx,0x400
  4218be:	cmove  eax,ecx
  4218c1:	mov    DWORD PTR [r10],eax
  4218c4:	cdqe   
  4218c6:	shl    rax,0x3
  4218ca:	lea    rsi,[rax+rax*4]
  4218ce:	mov    rbx,r12
  4218d1:	mov    r12,r10
  4218d4:	call   4061c0 <realloc@plt>
  4218d9:	mov    QWORD PTR [rbx],rax
  4218dc:	test   rax,rax
  4218df:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4218e5:	movsxd rcx,DWORD PTR [r12]
  4218e9:	lea    rcx,[rcx+rcx*4]
  4218ed:	lea    rcx,[rax+rcx*8]
  4218f1:	mov    r9,QWORD PTR [rsp]
  4218f5:	mov    QWORD PTR [r9],rcx
  4218f8:	mov    rcx,QWORD PTR [rsp+0x48]
  4218fd:	lea    rax,[rax+rcx*8]
  421901:	mov    rsi,QWORD PTR [rsp+0x20]
  421906:	mov    QWORD PTR [rsi],rax
  421909:	jmp    421987 <__flatcc_fb_parse@@Base+0x5917>
  42190b:	mov    rbx,QWORD PTR [rsp+0x10]
  421910:	mov    rdi,QWORD PTR [rbx]
  421913:	movsxd rcx,DWORD PTR [r10]
  421916:	lea    r14,[rcx+rcx*4]
  42191a:	lea    rdx,[rdi+r14*8]
  42191e:	mov    QWORD PTR [r9],rdx
  421921:	mov    rax,QWORD PTR [rsi]
  421924:	cmp    rax,rdx
  421927:	je     421934 <__flatcc_fb_parse@@Base+0x58c4>
  421929:	mov    r14d,0x7
  42192f:	jmp    4216f0 <__flatcc_fb_parse@@Base+0x5680>
  421934:	lea    eax,[rcx+rcx*1]
  421937:	test   ecx,ecx
  421939:	mov    ecx,0x400
  42193e:	cmove  eax,ecx
  421941:	mov    DWORD PTR [r10],eax
  421944:	cdqe   
  421946:	shl    rax,0x3
  42194a:	lea    rsi,[rax+rax*4]
  42194e:	mov    r12,r10
  421951:	call   4061c0 <realloc@plt>
  421956:	mov    QWORD PTR [rbx],rax
  421959:	test   rax,rax
  42195c:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421962:	movsxd rcx,DWORD PTR [r12]
  421966:	lea    rcx,[rcx+rcx*4]
  42196a:	lea    rcx,[rax+rcx*8]
  42196e:	mov    r9,QWORD PTR [rsp]
  421972:	mov    QWORD PTR [r9],rcx
  421975:	lea    rax,[rax+r14*8]
  421979:	mov    rsi,QWORD PTR [rsp+0x20]
  42197e:	mov    QWORD PTR [rsi],rax
  421981:	mov    r14d,0x7
  421987:	mov    r11,QWORD PTR [rsp+0x18]
  42198c:	mov    r8,QWORD PTR [rsp+0x8]
  421991:	mov    r10,r12
  421994:	jmp    4216f0 <__flatcc_fb_parse@@Base+0x5680>
  421999:	xor    eax,eax
  42199b:	movzx  eax,al
  42199e:	add    rbp,rax
  4219a1:	mov    rax,rbp
  4219a4:	sub    rax,r14
  4219a7:	xor    ecx,ecx
  4219a9:	cmp    rax,0x3
  4219ad:	sete   cl
  4219b0:	mov    rax,QWORD PTR [rsp+0x38]
  4219b5:	mov    DWORD PTR [rax+0x3c],ecx
  4219b8:	jne    421a76 <__flatcc_fb_parse@@Base+0x5a06>
  4219be:	mov    rax,QWORD PTR [rsp+0x10]
  4219c3:	mov    rdi,QWORD PTR [rax]
  4219c6:	movsxd rcx,DWORD PTR [r10]
  4219c9:	lea    r14,[rcx+rcx*4]
  4219cd:	lea    rdx,[rdi+r14*8]
  4219d1:	mov    QWORD PTR [r9],rdx
  4219d4:	mov    rax,QWORD PTR [rsi]
  4219d7:	cmp    rax,rdx
  4219da:	jne    421a3a <__flatcc_fb_parse@@Base+0x59ca>
  4219dc:	lea    eax,[rcx+rcx*1]
  4219df:	test   ecx,ecx
  4219e1:	mov    ecx,0x400
  4219e6:	cmove  eax,ecx
  4219e9:	mov    DWORD PTR [r10],eax
  4219ec:	cdqe   
  4219ee:	shl    rax,0x3
  4219f2:	lea    rsi,[rax+rax*4]
  4219f6:	mov    rbx,r10
  4219f9:	call   4061c0 <realloc@plt>
  4219fe:	mov    rcx,QWORD PTR [rsp+0x10]
  421a03:	mov    QWORD PTR [rcx],rax
  421a06:	test   rax,rax
  421a09:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421a0f:	movsxd rcx,DWORD PTR [rbx]
  421a12:	lea    rcx,[rcx+rcx*4]
  421a16:	lea    rcx,[rax+rcx*8]
  421a1a:	mov    r9,QWORD PTR [rsp]
  421a1e:	mov    QWORD PTR [r9],rcx
  421a21:	lea    rax,[rax+r14*8]
  421a25:	mov    rsi,QWORD PTR [rsp+0x20]
  421a2a:	mov    QWORD PTR [rsi],rax
  421a2d:	mov    r11,QWORD PTR [rsp+0x18]
  421a32:	mov    r8,QWORD PTR [rsp+0x8]
  421a37:	mov    r10,rbx
  421a3a:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421a42:	mov    QWORD PTR [rax],rbp
  421a45:	mov    QWORD PTR [rax+0x8],0x0
  421a4d:	mov    rcx,QWORD PTR [r8]
  421a50:	mov    QWORD PTR [rax+0x10],rcx
  421a54:	lea    rcx,[rbp+0x1]
  421a58:	sub    rcx,QWORD PTR [r11]
  421a5b:	mov    QWORD PTR [rax+0x18],rcx
  421a5f:	add    rax,0x28
  421a63:	mov    QWORD PTR [rsi],rax
  421a66:	lea    rdx,[rip+0x25053]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421a6d:	jmp    421a76 <__flatcc_fb_parse@@Base+0x5a06>
  421a6f:	add    QWORD PTR [r8],0x1
  421a73:	mov    QWORD PTR [r11],rbp
  421a76:	mov    r14,r13
  421a79:	cmp    rbp,r13
  421a7c:	je     421ac2 <__flatcc_fb_parse@@Base+0x5a52>
  421a7e:	lea    r14,[rbp-0x1]
  421a82:	mov    rcx,rbp
  421a85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a8f:	nop
  421a90:	mov    rax,rcx
  421a93:	movzx  ecx,BYTE PTR [rcx]
  421a96:	cmp    cl,0x20
  421a99:	jl     421b9b <__flatcc_fb_parse@@Base+0x5b2b>
  421a9f:	cmp    cl,0x7f
  421aa2:	je     421b9b <__flatcc_fb_parse@@Base+0x5b2b>
  421aa8:	cmp    cl,0x2f
  421aab:	jne    421ab3 <__flatcc_fb_parse@@Base+0x5a43>
  421aad:	cmp    BYTE PTR [rax-0x1],0x2a
  421ab1:	je     421ac2 <__flatcc_fb_parse@@Base+0x5a52>
  421ab3:	lea    rcx,[rax+0x1]
  421ab7:	mov    r14,rax
  421aba:	cmp    r13,rcx
  421abd:	jne    421a90 <__flatcc_fb_parse@@Base+0x5a20>
  421abf:	mov    r14,r13
  421ac2:	cmp    rbp,r14
  421ac5:	je     421ba7 <__flatcc_fb_parse@@Base+0x5b37>
  421acb:	mov    rax,QWORD PTR [rsp+0x38]
  421ad0:	cmp    DWORD PTR [rax+0x3c],0x0
  421ad4:	mov    r15,r14
  421ad7:	je     421baa <__flatcc_fb_parse@@Base+0x5b3a>
  421add:	mov    rax,QWORD PTR [rsp+0x10]
  421ae2:	mov    rdi,QWORD PTR [rax]
  421ae5:	movsxd rcx,DWORD PTR [r10]
  421ae8:	lea    r15,[rcx+rcx*4]
  421aec:	lea    rdx,[rdi+r15*8]
  421af0:	mov    QWORD PTR [r9],rdx
  421af3:	mov    rax,QWORD PTR [rsi]
  421af6:	cmp    rax,rdx
  421af9:	jne    421b59 <__flatcc_fb_parse@@Base+0x5ae9>
  421afb:	lea    eax,[rcx+rcx*1]
  421afe:	test   ecx,ecx
  421b00:	mov    ecx,0x400
  421b05:	cmove  eax,ecx
  421b08:	mov    DWORD PTR [r10],eax
  421b0b:	cdqe   
  421b0d:	shl    rax,0x3
  421b11:	lea    rsi,[rax+rax*4]
  421b15:	mov    rbx,r10
  421b18:	call   4061c0 <realloc@plt>
  421b1d:	mov    rcx,QWORD PTR [rsp+0x10]
  421b22:	mov    QWORD PTR [rcx],rax
  421b25:	test   rax,rax
  421b28:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421b2e:	movsxd rcx,DWORD PTR [rbx]
  421b31:	lea    rcx,[rcx+rcx*4]
  421b35:	lea    rcx,[rax+rcx*8]
  421b39:	mov    r9,QWORD PTR [rsp]
  421b3d:	mov    QWORD PTR [r9],rcx
  421b40:	lea    rax,[rax+r15*8]
  421b44:	mov    rsi,QWORD PTR [rsp+0x20]
  421b49:	mov    QWORD PTR [rsi],rax
  421b4c:	mov    r11,QWORD PTR [rsp+0x18]
  421b51:	mov    r8,QWORD PTR [rsp+0x8]
  421b56:	mov    r10,rbx
  421b59:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421b61:	mov    QWORD PTR [rax],rbp
  421b64:	mov    rcx,r14
  421b67:	sub    rcx,rbp
  421b6a:	mov    QWORD PTR [rax+0x8],rcx
  421b6e:	mov    rcx,QWORD PTR [r8]
  421b71:	mov    QWORD PTR [rax+0x10],rcx
  421b75:	add    rbp,0x1
  421b79:	sub    rbp,QWORD PTR [r11]
  421b7c:	mov    QWORD PTR [rax+0x18],rbp
  421b80:	add    rax,0x28
  421b84:	mov    QWORD PTR [rsi],rax
  421b87:	mov    r15,r14
  421b8a:	lea    rdx,[rip+0x24f2f]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421b91:	cmp    r14,r13
  421b94:	jne    421bb3 <__flatcc_fb_parse@@Base+0x5b43>
  421b96:	jmp    42228d <__flatcc_fb_parse@@Base+0x621d>
  421b9b:	mov    r14,rax
  421b9e:	cmp    rbp,r14
  421ba1:	jne    421acb <__flatcc_fb_parse@@Base+0x5a5b>
  421ba7:	mov    r15,rbp
  421baa:	cmp    r14,r13
  421bad:	je     42228d <__flatcc_fb_parse@@Base+0x621d>
  421bb3:	mov    al,BYTE PTR [r14]
  421bb6:	cmp    al,0xa
  421bb8:	mov    rbp,QWORD PTR [rsp+0x10]
  421bbd:	je     421ca9 <__flatcc_fb_parse@@Base+0x5c39>
  421bc3:	cmp    al,0xd
  421bc5:	je     421c8e <__flatcc_fb_parse@@Base+0x5c1e>
  421bcb:	test   al,al
  421bcd:	je     422295 <__flatcc_fb_parse@@Base+0x6225>
  421bd3:	cmp    al,0x20
  421bd5:	jl     421bdf <__flatcc_fb_parse@@Base+0x5b6f>
  421bd7:	cmp    al,0x7f
  421bd9:	jne    42208d <__flatcc_fb_parse@@Base+0x601d>
  421bdf:	add    r14,0x1
  421be3:	mov    al,BYTE PTR [r15]
  421be6:	cmp    al,0x20
  421be8:	je     421bf2 <__flatcc_fb_parse@@Base+0x5b82>
  421bea:	cmp    al,0x9
  421bec:	jne    421cce <__flatcc_fb_parse@@Base+0x5c5e>
  421bf2:	mov    rax,QWORD PTR [rsp+0x38]
  421bf7:	cmp    DWORD PTR [rax+0x3c],0x0
  421bfb:	mov    rbp,r14
  421bfe:	je     421a76 <__flatcc_fb_parse@@Base+0x5a06>
  421c04:	mov    rax,QWORD PTR [rsp+0x10]
  421c09:	mov    rdi,QWORD PTR [rax]
  421c0c:	movsxd rcx,DWORD PTR [r10]
  421c0f:	lea    rbx,[rcx+rcx*4]
  421c13:	lea    rdx,[rdi+rbx*8]
  421c17:	mov    QWORD PTR [r9],rdx
  421c1a:	mov    rax,QWORD PTR [rsi]
  421c1d:	cmp    rax,rdx
  421c20:	jne    421c81 <__flatcc_fb_parse@@Base+0x5c11>
  421c22:	lea    eax,[rcx+rcx*1]
  421c25:	test   ecx,ecx
  421c27:	mov    ecx,0x400
  421c2c:	cmove  eax,ecx
  421c2f:	mov    DWORD PTR [r10],eax
  421c32:	cdqe   
  421c34:	shl    rax,0x3
  421c38:	lea    rsi,[rax+rax*4]
  421c3c:	mov    rbp,r10
  421c3f:	call   4061c0 <realloc@plt>
  421c44:	mov    rcx,QWORD PTR [rsp+0x10]
  421c49:	mov    QWORD PTR [rcx],rax
  421c4c:	test   rax,rax
  421c4f:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421c55:	movsxd rcx,DWORD PTR [rbp+0x0]
  421c59:	lea    rcx,[rcx+rcx*4]
  421c5d:	lea    rcx,[rax+rcx*8]
  421c61:	mov    r9,QWORD PTR [rsp]
  421c65:	mov    QWORD PTR [r9],rcx
  421c68:	lea    rax,[rax+rbx*8]
  421c6c:	mov    rsi,QWORD PTR [rsp+0x20]
  421c71:	mov    QWORD PTR [rsi],rax
  421c74:	mov    r11,QWORD PTR [rsp+0x18]
  421c79:	mov    r8,QWORD PTR [rsp+0x8]
  421c7e:	mov    r10,rbp
  421c81:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421c89:	jmp    421d4f <__flatcc_fb_parse@@Base+0x5cdf>
  421c8e:	lea    rax,[r14+0x1]
  421c92:	mov    rbp,r13
  421c95:	cmp    rax,r13
  421c98:	je     421a6f <__flatcc_fb_parse@@Base+0x59ff>
  421c9e:	lea    rcx,[r14+0x2]
  421ca2:	cmp    BYTE PTR [r14+0x1],0xa
  421ca7:	jmp    421cc2 <__flatcc_fb_parse@@Base+0x5c52>
  421ca9:	lea    rax,[r14+0x1]
  421cad:	mov    rbp,r13
  421cb0:	cmp    rax,r13
  421cb3:	je     421a6f <__flatcc_fb_parse@@Base+0x59ff>
  421cb9:	lea    rcx,[r14+0x2]
  421cbd:	cmp    BYTE PTR [r14+0x1],0xd
  421cc2:	cmove  rax,rcx
  421cc6:	mov    rbp,rax
  421cc9:	jmp    421a6f <__flatcc_fb_parse@@Base+0x59ff>
  421cce:	mov    rdi,QWORD PTR [rbp+0x0]
  421cd2:	movsxd rcx,DWORD PTR [r10]
  421cd5:	lea    rbx,[rcx+rcx*4]
  421cd9:	lea    rdx,[rdi+rbx*8]
  421cdd:	mov    QWORD PTR [r9],rdx
  421ce0:	mov    rax,QWORD PTR [rsi]
  421ce3:	cmp    rax,rdx
  421ce6:	jne    421d47 <__flatcc_fb_parse@@Base+0x5cd7>
  421ce8:	lea    eax,[rcx+rcx*1]
  421ceb:	test   ecx,ecx
  421ced:	mov    ecx,0x400
  421cf2:	cmove  eax,ecx
  421cf5:	mov    DWORD PTR [r10],eax
  421cf8:	cdqe   
  421cfa:	shl    rax,0x3
  421cfe:	lea    rsi,[rax+rax*4]
  421d02:	mov    rbp,r10
  421d05:	call   4061c0 <realloc@plt>
  421d0a:	mov    rcx,QWORD PTR [rsp+0x10]
  421d0f:	mov    QWORD PTR [rcx],rax
  421d12:	test   rax,rax
  421d15:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421d1b:	movsxd rcx,DWORD PTR [rbp+0x0]
  421d1f:	lea    rcx,[rcx+rcx*4]
  421d23:	lea    rcx,[rax+rcx*8]
  421d27:	mov    r9,QWORD PTR [rsp]
  421d2b:	mov    QWORD PTR [r9],rcx
  421d2e:	lea    rax,[rax+rbx*8]
  421d32:	mov    rsi,QWORD PTR [rsp+0x20]
  421d37:	mov    QWORD PTR [rsi],rax
  421d3a:	mov    r11,QWORD PTR [rsp+0x18]
  421d3f:	mov    r8,QWORD PTR [rsp+0x8]
  421d44:	mov    r10,rbp
  421d47:	mov    QWORD PTR [rax+0x20],0x7
  421d4f:	mov    QWORD PTR [rax],r15
  421d52:	mov    QWORD PTR [rax+0x8],0x1
  421d5a:	mov    rcx,QWORD PTR [r8]
  421d5d:	mov    QWORD PTR [rax+0x10],rcx
  421d61:	add    r15,0x1
  421d65:	sub    r15,QWORD PTR [r11]
  421d68:	mov    QWORD PTR [rax+0x18],r15
  421d6c:	add    rax,0x28
  421d70:	mov    QWORD PTR [rsi],rax
  421d73:	mov    rbp,r14
  421d76:	lea    rdx,[rip+0x24d43]        # 446ac0 <fb_schema_table_deleted@@Base+0x390>
  421d7d:	jmp    421a76 <__flatcc_fb_parse@@Base+0x5a06>
  421d82:	lea    r15,[r14+0x3]
  421d86:	cmp    r15,r13
  421d89:	je     421f64 <__flatcc_fb_parse@@Base+0x5ef4>
  421d8f:	cmp    BYTE PTR [r15],0x3d
  421d93:	jne    421f64 <__flatcc_fb_parse@@Base+0x5ef4>
  421d99:	mov    rdi,QWORD PTR [rbp+0x0]
  421d9d:	movsxd rcx,DWORD PTR [r10]
  421da0:	lea    rbx,[rcx+rcx*4]
  421da4:	lea    rdx,[rdi+rbx*8]
  421da8:	mov    QWORD PTR [r9],rdx
  421dab:	mov    rax,QWORD PTR [rsi]
  421dae:	cmp    rax,rdx
  421db1:	jne    421e15 <__flatcc_fb_parse@@Base+0x5da5>
  421db3:	lea    eax,[rcx+rcx*1]
  421db6:	test   ecx,ecx
  421db8:	mov    ecx,0x400
  421dbd:	cmove  eax,ecx
  421dc0:	mov    DWORD PTR [r10],eax
  421dc3:	cdqe   
  421dc5:	shl    rax,0x3
  421dc9:	lea    rsi,[rax+rax*4]
  421dcd:	mov    r15,rbp
  421dd0:	mov    rbp,r10
  421dd3:	call   4061c0 <realloc@plt>
  421dd8:	mov    QWORD PTR [r15],rax
  421ddb:	test   rax,rax
  421dde:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421de4:	movsxd rcx,DWORD PTR [rbp+0x0]
  421de8:	lea    rcx,[rcx+rcx*4]
  421dec:	lea    rcx,[rax+rcx*8]
  421df0:	mov    r9,QWORD PTR [rsp]
  421df4:	mov    QWORD PTR [r9],rcx
  421df7:	lea    rax,[rax+rbx*8]
  421dfb:	mov    rsi,QWORD PTR [rsp+0x20]
  421e00:	mov    QWORD PTR [rsi],rax
  421e03:	mov    r11,QWORD PTR [rsp+0x18]
  421e08:	mov    r8,QWORD PTR [rsp+0x8]
  421e0d:	mov    r10,rbp
  421e10:	mov    rbp,QWORD PTR [rsp+0x10]
  421e15:	lea    r15,[r14+0x4]
  421e19:	mov    QWORD PTR [rax+0x20],0x3d3e3e3e
  421e21:	jmp    421f54 <__flatcc_fb_parse@@Base+0x5ee4>
  421e26:	mov    rdi,QWORD PTR [rbp+0x0]
  421e2a:	movsxd rcx,DWORD PTR [r10]
  421e2d:	lea    rbx,[rcx+rcx*4]
  421e31:	lea    rdx,[rdi+rbx*8]
  421e35:	mov    QWORD PTR [r9],rdx
  421e38:	mov    rax,QWORD PTR [rsi]
  421e3b:	cmp    rax,rdx
  421e3e:	jne    421ea8 <__flatcc_fb_parse@@Base+0x5e38>
  421e40:	lea    eax,[rcx+rcx*1]
  421e43:	test   ecx,ecx
  421e45:	mov    ecx,0x400
  421e4a:	cmove  eax,ecx
  421e4d:	mov    DWORD PTR [r10],eax
  421e50:	cdqe   
  421e52:	shl    rax,0x3
  421e56:	lea    rsi,[rax+rax*4]
  421e5a:	mov    r12,rbp
  421e5d:	mov    rbp,r10
  421e60:	call   4061c0 <realloc@plt>
  421e65:	mov    QWORD PTR [r12],rax
  421e69:	test   rax,rax
  421e6c:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421e72:	movsxd rcx,DWORD PTR [rbp+0x0]
  421e76:	lea    rcx,[rcx+rcx*4]
  421e7a:	lea    rcx,[rax+rcx*8]
  421e7e:	mov    r9,QWORD PTR [rsp]
  421e82:	mov    QWORD PTR [r9],rcx
  421e85:	lea    rax,[rax+rbx*8]
  421e89:	mov    rsi,QWORD PTR [rsp+0x20]
  421e8e:	mov    QWORD PTR [rsi],rax
  421e91:	mov    r11,QWORD PTR [rsp+0x18]
  421e96:	mov    r8,QWORD PTR [rsp+0x8]
  421e9b:	mov    r10,rbp
  421e9e:	mov    rbp,QWORD PTR [rsp+0x10]
  421ea3:	mov    r12,QWORD PTR [rsp+0x28]
  421ea8:	mov    QWORD PTR [rax+0x20],0x2e2e
  421eb0:	jmp    41eb4f <__flatcc_fb_parse@@Base+0x2adf>
  421eb5:	lea    r15,[r14+0x3]
  421eb9:	cmp    r15,r13
  421ebc:	je     421ff3 <__flatcc_fb_parse@@Base+0x5f83>
  421ec2:	cmp    BYTE PTR [r15],0x3d
  421ec6:	jne    421ff3 <__flatcc_fb_parse@@Base+0x5f83>
  421ecc:	mov    rdi,QWORD PTR [rbp+0x0]
  421ed0:	movsxd rcx,DWORD PTR [r10]
  421ed3:	lea    rbx,[rcx+rcx*4]
  421ed7:	lea    rdx,[rdi+rbx*8]
  421edb:	mov    QWORD PTR [r9],rdx
  421ede:	mov    rax,QWORD PTR [rsi]
  421ee1:	cmp    rax,rdx
  421ee4:	jne    421f48 <__flatcc_fb_parse@@Base+0x5ed8>
  421ee6:	lea    eax,[rcx+rcx*1]
  421ee9:	test   ecx,ecx
  421eeb:	mov    ecx,0x400
  421ef0:	cmove  eax,ecx
  421ef3:	mov    DWORD PTR [r10],eax
  421ef6:	cdqe   
  421ef8:	shl    rax,0x3
  421efc:	lea    rsi,[rax+rax*4]
  421f00:	mov    r15,rbp
  421f03:	mov    rbp,r10
  421f06:	call   4061c0 <realloc@plt>
  421f0b:	mov    QWORD PTR [r15],rax
  421f0e:	test   rax,rax
  421f11:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421f17:	movsxd rcx,DWORD PTR [rbp+0x0]
  421f1b:	lea    rcx,[rcx+rcx*4]
  421f1f:	lea    rcx,[rax+rcx*8]
  421f23:	mov    r9,QWORD PTR [rsp]
  421f27:	mov    QWORD PTR [r9],rcx
  421f2a:	lea    rax,[rax+rbx*8]
  421f2e:	mov    rsi,QWORD PTR [rsp+0x20]
  421f33:	mov    QWORD PTR [rsi],rax
  421f36:	mov    r11,QWORD PTR [rsp+0x18]
  421f3b:	mov    r8,QWORD PTR [rsp+0x8]
  421f40:	mov    r10,rbp
  421f43:	mov    rbp,QWORD PTR [rsp+0x10]
  421f48:	lea    r15,[r14+0x4]
  421f4c:	mov    QWORD PTR [rax+0x20],0x3d3c3c3c
  421f54:	mov    QWORD PTR [rax],r14
  421f57:	mov    QWORD PTR [rax+0x8],0x4
  421f5f:	jmp    421200 <__flatcc_fb_parse@@Base+0x5190>
  421f64:	mov    rdi,QWORD PTR [rbp+0x0]
  421f68:	movsxd rcx,DWORD PTR [r10]
  421f6b:	lea    rbx,[rcx+rcx*4]
  421f6f:	lea    rdx,[rdi+rbx*8]
  421f73:	mov    QWORD PTR [r9],rdx
  421f76:	mov    rax,QWORD PTR [rsi]
  421f79:	cmp    rax,rdx
  421f7c:	jne    421fe6 <__flatcc_fb_parse@@Base+0x5f76>
  421f7e:	lea    eax,[rcx+rcx*1]
  421f81:	test   ecx,ecx
  421f83:	mov    ecx,0x400
  421f88:	cmove  eax,ecx
  421f8b:	mov    DWORD PTR [r10],eax
  421f8e:	cdqe   
  421f90:	shl    rax,0x3
  421f94:	lea    rsi,[rax+rax*4]
  421f98:	mov    r12,rbp
  421f9b:	mov    rbp,r10
  421f9e:	call   4061c0 <realloc@plt>
  421fa3:	mov    QWORD PTR [r12],rax
  421fa7:	test   rax,rax
  421faa:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  421fb0:	movsxd rcx,DWORD PTR [rbp+0x0]
  421fb4:	lea    rcx,[rcx+rcx*4]
  421fb8:	lea    rcx,[rax+rcx*8]
  421fbc:	mov    r9,QWORD PTR [rsp]
  421fc0:	mov    QWORD PTR [r9],rcx
  421fc3:	lea    rax,[rax+rbx*8]
  421fc7:	mov    rsi,QWORD PTR [rsp+0x20]
  421fcc:	mov    QWORD PTR [rsi],rax
  421fcf:	mov    r11,QWORD PTR [rsp+0x18]
  421fd4:	mov    r8,QWORD PTR [rsp+0x8]
  421fd9:	mov    r10,rbp
  421fdc:	mov    rbp,QWORD PTR [rsp+0x10]
  421fe1:	mov    r12,QWORD PTR [rsp+0x28]
  421fe6:	mov    QWORD PTR [rax+0x20],0x3e3e3e
  421fee:	jmp    42207d <__flatcc_fb_parse@@Base+0x600d>
  421ff3:	mov    rdi,QWORD PTR [rbp+0x0]
  421ff7:	movsxd rcx,DWORD PTR [r10]
  421ffa:	lea    rbx,[rcx+rcx*4]
  421ffe:	lea    rdx,[rdi+rbx*8]
  422002:	mov    QWORD PTR [r9],rdx
  422005:	mov    rax,QWORD PTR [rsi]
  422008:	cmp    rax,rdx
  42200b:	jne    422075 <__flatcc_fb_parse@@Base+0x6005>
  42200d:	lea    eax,[rcx+rcx*1]
  422010:	test   ecx,ecx
  422012:	mov    ecx,0x400
  422017:	cmove  eax,ecx
  42201a:	mov    DWORD PTR [r10],eax
  42201d:	cdqe   
  42201f:	shl    rax,0x3
  422023:	lea    rsi,[rax+rax*4]
  422027:	mov    r12,rbp
  42202a:	mov    rbp,r10
  42202d:	call   4061c0 <realloc@plt>
  422032:	mov    QWORD PTR [r12],rax
  422036:	test   rax,rax
  422039:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42203f:	movsxd rcx,DWORD PTR [rbp+0x0]
  422043:	lea    rcx,[rcx+rcx*4]
  422047:	lea    rcx,[rax+rcx*8]
  42204b:	mov    r9,QWORD PTR [rsp]
  42204f:	mov    QWORD PTR [r9],rcx
  422052:	lea    rax,[rax+rbx*8]
  422056:	mov    rsi,QWORD PTR [rsp+0x20]
  42205b:	mov    QWORD PTR [rsi],rax
  42205e:	mov    r11,QWORD PTR [rsp+0x18]
  422063:	mov    r8,QWORD PTR [rsp+0x8]
  422068:	mov    r10,rbp
  42206b:	mov    rbp,QWORD PTR [rsp+0x10]
  422070:	mov    r12,QWORD PTR [rsp+0x28]
  422075:	mov    QWORD PTR [rax+0x20],0x3c3c3c
  42207d:	mov    QWORD PTR [rax],r14
  422080:	mov    QWORD PTR [rax+0x8],0x3
  422088:	jmp    421200 <__flatcc_fb_parse@@Base+0x5190>
  42208d:	add    r14,0x2
  422091:	mov    rax,QWORD PTR [rsp+0x38]
  422096:	mov    DWORD PTR [rax+0x3c],0x0
  42209d:	jmp    421309 <__flatcc_fb_parse@@Base+0x5299>
  4220a2:	mov    r15,r14
  4220a5:	cmp    r14,r13
  4220a8:	je     4220b4 <__flatcc_fb_parse@@Base+0x6044>
  4220aa:	cmp    BYTE PTR [r14],0x0
  4220ae:	je     4221dd <__flatcc_fb_parse@@Base+0x616d>
  4220b4:	mov    r13,r14
  4220b7:	mov    rbp,QWORD PTR [rsp+0x38]
  4220bc:	mov    rdi,QWORD PTR [rbp+0x28]
  4220c0:	mov    rax,QWORD PTR [rbp+0x48]
  4220c4:	movsxd rcx,DWORD PTR [rbp+0x38]
  4220c8:	lea    rbx,[rcx+rcx*4]
  4220cc:	lea    rdx,[rdi+rbx*8]
  4220d0:	mov    QWORD PTR [rbp+0x30],rdx
  4220d4:	cmp    rax,rdx
  4220d7:	jne    42211e <__flatcc_fb_parse@@Base+0x60ae>
  4220d9:	lea    eax,[rcx+rcx*1]
  4220dc:	test   ecx,ecx
  4220de:	mov    ecx,0x400
  4220e3:	cmovne ecx,eax
  4220e6:	mov    DWORD PTR [rbp+0x38],ecx
  4220e9:	movsxd rax,ecx
  4220ec:	shl    rax,0x3
  4220f0:	lea    rsi,[rax+rax*4]
  4220f4:	call   4061c0 <realloc@plt>
  4220f9:	mov    QWORD PTR [rbp+0x28],rax
  4220fd:	test   rax,rax
  422100:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  422106:	movsxd rcx,DWORD PTR [rbp+0x38]
  42210a:	lea    rcx,[rcx+rcx*4]
  42210e:	lea    rcx,[rax+rcx*8]
  422112:	mov    QWORD PTR [rbp+0x30],rcx
  422116:	lea    rax,[rax+rbx*8]
  42211a:	mov    QWORD PTR [rbp+0x48],rax
  42211e:	lea    rsi,[rbp+0x48]
  422122:	mov    QWORD PTR [rax+0x20],0x0
  42212a:	mov    QWORD PTR [rax],r13
  42212d:	mov    QWORD PTR [rax+0x8],0x0
  422135:	mov    rcx,QWORD PTR [rbp+0x78]
  422139:	mov    QWORD PTR [rax+0x10],rcx
  42213d:	add    rbp,0x70
  422141:	mov    r11,rbp
  422144:	mov    r14,r13
  422147:	jmp    42226c <__flatcc_fb_parse@@Base+0x61fc>
  42214c:	mov    rdi,QWORD PTR [rbp+0x0]
  422150:	movsxd rcx,DWORD PTR [r10]
  422153:	lea    rbx,[rcx+rcx*4]
  422157:	lea    rdx,[rdi+rbx*8]
  42215b:	mov    QWORD PTR [r9],rdx
  42215e:	mov    rax,QWORD PTR [rsi]
  422161:	cmp    rax,rdx
  422164:	jne    4221be <__flatcc_fb_parse@@Base+0x614e>
  422166:	lea    eax,[rcx+rcx*1]
  422169:	test   ecx,ecx
  42216b:	mov    ecx,0x400
  422170:	cmovne ecx,eax
  422173:	mov    DWORD PTR [r10],ecx
  422176:	movsxd rax,ecx
  422179:	shl    rax,0x3
  42217d:	lea    rsi,[rax+rax*4]
  422181:	mov    r15,r10
  422184:	call   4061c0 <realloc@plt>
  422189:	mov    QWORD PTR [rbp+0x0],rax
  42218d:	test   rax,rax
  422190:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  422196:	movsxd rcx,DWORD PTR [r15]
  422199:	lea    rcx,[rcx+rcx*4]
  42219d:	lea    rcx,[rax+rcx*8]
  4221a1:	mov    rdx,QWORD PTR [rsp]
  4221a5:	mov    QWORD PTR [rdx],rcx
  4221a8:	lea    rax,[rax+rbx*8]
  4221ac:	mov    rsi,QWORD PTR [rsp+0x20]
  4221b1:	mov    QWORD PTR [rsi],rax
  4221b4:	mov    r11,QWORD PTR [rsp+0x18]
  4221b9:	mov    r8,QWORD PTR [rsp+0x8]
  4221be:	mov    QWORD PTR [rax+0x20],0x0
  4221c6:	mov    QWORD PTR [rax],r14
  4221c9:	mov    QWORD PTR [rax+0x8],0x0
  4221d1:	mov    rcx,QWORD PTR [r8]
  4221d4:	mov    QWORD PTR [rax+0x10],rcx
  4221d8:	jmp    42226c <__flatcc_fb_parse@@Base+0x61fc>
  4221dd:	mov    rbp,QWORD PTR [rsp+0x38]
  4221e2:	mov    rdi,QWORD PTR [rbp+0x28]
  4221e6:	mov    rax,QWORD PTR [rbp+0x48]
  4221ea:	movsxd rcx,DWORD PTR [rbp+0x38]
  4221ee:	lea    rbx,[rcx+rcx*4]
  4221f2:	lea    rdx,[rdi+rbx*8]
  4221f6:	mov    QWORD PTR [rbp+0x30],rdx
  4221fa:	cmp    rax,rdx
  4221fd:	jne    422244 <__flatcc_fb_parse@@Base+0x61d4>
  4221ff:	lea    eax,[rcx+rcx*1]
  422202:	test   ecx,ecx
  422204:	mov    ecx,0x400
  422209:	cmovne ecx,eax
  42220c:	mov    DWORD PTR [rbp+0x38],ecx
  42220f:	movsxd rax,ecx
  422212:	shl    rax,0x3
  422216:	lea    rsi,[rax+rax*4]
  42221a:	call   4061c0 <realloc@plt>
  42221f:	mov    QWORD PTR [rbp+0x28],rax
  422223:	test   rax,rax
  422226:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  42222c:	movsxd rcx,DWORD PTR [rbp+0x38]
  422230:	lea    rcx,[rcx+rcx*4]
  422234:	lea    rcx,[rax+rcx*8]
  422238:	mov    QWORD PTR [rbp+0x30],rcx
  42223c:	lea    rax,[rax+rbx*8]
  422240:	mov    QWORD PTR [rbp+0x48],rax
  422244:	lea    rsi,[rbp+0x48]
  422248:	mov    QWORD PTR [rax+0x20],0x0
  422250:	mov    QWORD PTR [rax],r15
  422253:	sub    r14,r15
  422256:	mov    QWORD PTR [rax+0x8],r14
  42225a:	mov    rcx,QWORD PTR [rbp+0x78]
  42225e:	mov    QWORD PTR [rax+0x10],rcx
  422262:	add    rbp,0x70
  422266:	mov    r11,rbp
  422269:	mov    r14,r15
  42226c:	add    r14,0x1
  422270:	sub    r14,QWORD PTR [r11]
  422273:	mov    QWORD PTR [rax+0x18],r14
  422277:	add    rax,0x28
  42227b:	mov    QWORD PTR [rsi],rax
  42227e:	add    rsp,0x58
  422282:	pop    rbx
  422283:	pop    r12
  422285:	pop    r13
  422287:	pop    r14
  422289:	pop    r15
  42228b:	pop    rbp
  42228c:	ret    
  42228d:	mov    r14,r13
  422290:	mov    rbp,QWORD PTR [rsp+0x10]
  422295:	mov    rdi,QWORD PTR [rbp+0x0]
  422299:	movsxd rcx,DWORD PTR [r10]
  42229c:	lea    rbx,[rcx+rcx*4]
  4222a0:	lea    rdx,[rdi+rbx*8]
  4222a4:	mov    QWORD PTR [r9],rdx
  4222a7:	mov    rax,QWORD PTR [rsi]
  4222aa:	cmp    rax,rdx
  4222ad:	jne    422304 <__flatcc_fb_parse@@Base+0x6294>
  4222af:	lea    eax,[rcx+rcx*1]
  4222b2:	test   ecx,ecx
  4222b4:	mov    ecx,0x400
  4222b9:	cmovne ecx,eax
  4222bc:	mov    DWORD PTR [r10],ecx
  4222bf:	movsxd rax,ecx
  4222c2:	shl    rax,0x3
  4222c6:	lea    rsi,[rax+rax*4]
  4222ca:	mov    r12,r10
  4222cd:	call   4061c0 <realloc@plt>
  4222d2:	mov    QWORD PTR [rbp+0x0],rax
  4222d6:	test   rax,rax
  4222d9:	je     42233e <__flatcc_fb_parse@@Base+0x62ce>
  4222db:	movsxd rcx,DWORD PTR [r12]
  4222df:	lea    rcx,[rcx+rcx*4]
  4222e3:	lea    rcx,[rax+rcx*8]
  4222e7:	mov    rdx,QWORD PTR [rsp]
  4222eb:	mov    QWORD PTR [rdx],rcx
  4222ee:	lea    rax,[rax+rbx*8]
  4222f2:	mov    rsi,QWORD PTR [rsp+0x20]
  4222f7:	mov    QWORD PTR [rsi],rax
  4222fa:	mov    r11,QWORD PTR [rsp+0x18]
  4222ff:	mov    r8,QWORD PTR [rsp+0x8]
  422304:	mov    QWORD PTR [rax+0x20],0x1b
  42230c:	mov    QWORD PTR [rax],r14
  42230f:	mov    QWORD PTR [rax+0x8],0x0
  422317:	mov    rcx,QWORD PTR [r8]
  42231a:	mov    QWORD PTR [rax+0x10],rcx
  42231e:	lea    rcx,[r14+0x1]
  422322:	sub    rcx,QWORD PTR [r11]
  422325:	mov    QWORD PTR [rax+0x18],rcx
  422329:	add    rax,0x28
  42232d:	mov    QWORD PTR [rsi],rax
  422330:	cmp    r14,r13
  422333:	jne    4220aa <__flatcc_fb_parse@@Base+0x603a>
  422339:	jmp    4220b4 <__flatcc_fb_parse@@Base+0x6044>
  42233e:	mov    rax,QWORD PTR [rip+0x2ecb3]        # 450ff8 <stderr@GLIBC_2.2.5>
  422345:	mov    rcx,QWORD PTR [rax]
  422348:	lea    rdi,[rip+0xccc8]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  42234f:	mov    esi,0x22
  422354:	mov    edx,0x1
  422359:	call   406210 <fwrite@plt>
  42235e:	mov    edi,0x1
  422363:	call   406200 <exit@plt>
  422368:	nop    DWORD PTR [rax+rax*1+0x0]
  422370:	push   r15
  422372:	push   r14
  422374:	push   rbx
  422375:	mov    r14,rdi
  422378:	mov    r15,QWORD PTR [rdi+0x30]
  42237c:	mov    rax,QWORD PTR [rdi+0x48]
  422380:	lea    rbx,[rax+0x28]
  422384:	mov    QWORD PTR [rdi+0x48],rbx
  422388:	cmp    rbx,r15
  42238b:	je     422409 <__flatcc_fb_parse@@Base+0x6399>
  42238d:	nop    DWORD PTR [rax]
  422390:	cmp    QWORD PTR [rbx+0x20],0xfffffffffffffc3c
  422398:	jne    42242c <__flatcc_fb_parse@@Base+0x63bc>
  42239e:	mov    rcx,QWORD PTR [r14+0x60]
  4223a2:	lea    rax,[rcx+0x20]
  4223a6:	cmp    rax,QWORD PTR [r14+0x50]
  4223aa:	jbe    4223e2 <__flatcc_fb_parse@@Base+0x6372>
  4223ac:	mov    edi,0x10000
  4223b1:	mov    esi,0x1
  4223b6:	call   406140 <calloc@plt>
  4223bb:	test   rax,rax
  4223be:	je     422435 <__flatcc_fb_parse@@Base+0x63c5>
  4223c0:	mov    rcx,QWORD PTR [r14+0x58]
  4223c4:	mov    QWORD PTR [rax],rcx
  4223c7:	mov    QWORD PTR [r14+0x58],rax
  4223cb:	lea    rcx,[rax+0x10]
  4223cf:	mov    QWORD PTR [r14+0x60],rcx
  4223d3:	lea    rdx,[rax+0x10000]
  4223da:	mov    QWORD PTR [r14+0x50],rdx
  4223de:	add    rax,0x30
  4223e2:	mov    QWORD PTR [r14+0x60],rax
  4223e6:	mov    QWORD PTR [rcx+0x8],rbx
  4223ea:	mov    rax,QWORD PTR [r14+0x40]
  4223ee:	mov    QWORD PTR [rcx],rax
  4223f1:	mov    QWORD PTR [r14+0x40],rcx
  4223f5:	add    rbx,0x28
  4223f9:	mov    QWORD PTR [r14+0x48],rbx
  4223fd:	cmp    r15,rbx
  422400:	jne    422390 <__flatcc_fb_parse@@Base+0x6320>
  422402:	add    rbx,0xffffffffffffffd8
  422406:	mov    rax,rbx
  422409:	mov    QWORD PTR [r14+0x48],rax
  42240d:	lea    rdi,[rip+0x1df77]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  422414:	lea    rsi,[rip+0x2491c]        # 446d37 <fb_schema_table_deleted@@Base+0x607>
  42241b:	lea    rcx,[rip+0x24a66]        # 446e88 <fb_schema_table_deleted@@Base+0x758>
  422422:	mov    edx,0x155
  422427:	call   4060f0 <__assert_fail@plt>
  42242c:	mov    rax,rbx
  42242f:	pop    rbx
  422430:	pop    r14
  422432:	pop    r15
  422434:	ret    
  422435:	mov    rax,QWORD PTR [rip+0x2ebbc]        # 450ff8 <stderr@GLIBC_2.2.5>
  42243c:	mov    rcx,QWORD PTR [rax]
  42243f:	lea    rdi,[rip+0xcbd1]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  422446:	mov    esi,0x22
  42244b:	mov    edx,0x1
  422450:	call   406210 <fwrite@plt>
  422455:	mov    edi,0x1
  42245a:	call   406200 <exit@plt>
  42245f:	nop

0000000000422460 <__flatcc_fb_clear_parser@@Base>:
  422460:	push   r14
  422462:	push   rbx
  422463:	push   rax
  422464:	mov    r14,rdi
  422467:	mov    rbx,QWORD PTR [rdi+0x238]
  42246e:	test   rbx,rbx
  422471:	jne    422488 <__flatcc_fb_clear_parser@@Base+0x28>
  422473:	jmp    4224a8 <__flatcc_fb_clear_parser@@Base+0x48>
  422475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42247f:	nop
  422480:	mov    rbx,QWORD PTR [rbx]
  422483:	test   rbx,rbx
  422486:	je     4224a8 <__flatcc_fb_clear_parser@@Base+0x48>
  422488:	movzx  eax,WORD PTR [rbx+0x10]
  42248c:	cmp    eax,0x4
  42248f:	ja     422480 <__flatcc_fb_clear_parser@@Base+0x20>
  422491:	lea    rdi,[rbx+0x60]
  422495:	call   4192c0 <fb_symbol_table_clear@@Base>
  42249a:	mov    rdi,rbx
  42249d:	sub    rdi,0xffffffffffffff80
  4224a1:	call   42cde0 <fb_value_set_clear@@Base>
  4224a6:	jmp    422480 <__flatcc_fb_clear_parser@@Base+0x20>
  4224a8:	lea    rdi,[r14+0x2a8]
  4224af:	call   41a930 <fb_schema_table_clear@@Base>
  4224b4:	lea    rdi,[r14+0x288]
  4224bb:	call   42c6d0 <fb_name_table_clear@@Base>
  4224c0:	lea    rdi,[r14+0x320]
  4224c7:	call   418c80 <ptr_set_clear@@Base>
  4224cc:	mov    rdi,QWORD PTR [r14+0xd8]
  4224d3:	test   rdi,rdi
  4224d6:	je     4224dd <__flatcc_fb_clear_parser@@Base+0x7d>
  4224d8:	call   406040 <free@plt>
  4224dd:	mov    rdi,QWORD PTR [r14+0x28]
  4224e1:	test   rdi,rdi
  4224e4:	je     4224eb <__flatcc_fb_clear_parser@@Base+0x8b>
  4224e6:	call   406040 <free@plt>
  4224eb:	mov    rdi,QWORD PTR [r14+0x308]
  4224f2:	test   rdi,rdi
  4224f5:	je     4224fc <__flatcc_fb_clear_parser@@Base+0x9c>
  4224f7:	call   406040 <free@plt>
  4224fc:	mov    rdi,QWORD PTR [r14+0x310]
  422503:	test   rdi,rdi
  422506:	je     42250d <__flatcc_fb_clear_parser@@Base+0xad>
  422508:	call   406040 <free@plt>
  42250d:	mov    rdi,QWORD PTR [r14+0x318]
  422514:	test   rdi,rdi
  422517:	je     42251e <__flatcc_fb_clear_parser@@Base+0xbe>
  422519:	call   406040 <free@plt>
  42251e:	mov    rdi,QWORD PTR [r14+0x348]
  422525:	test   rdi,rdi
  422528:	je     42252f <__flatcc_fb_clear_parser@@Base+0xcf>
  42252a:	call   406040 <free@plt>
  42252f:	lea    rdi,[r14+0x268]
  422536:	lea    rsi,[rip+0x53]        # 422590 <__flatcc_fb_clear_parser@@Base+0x130>
  42253d:	xor    edx,edx
  42253f:	call   419a00 <fb_scope_table_destroy@@Base>
  422544:	mov    rdi,QWORD PTR [r14+0x58]
  422548:	test   rdi,rdi
  42254b:	je     422560 <__flatcc_fb_clear_parser@@Base+0x100>
  42254d:	nop    DWORD PTR [rax]
  422550:	mov    rbx,QWORD PTR [rdi]
  422553:	call   406040 <free@plt>
  422558:	mov    rdi,rbx
  42255b:	test   rbx,rbx
  42255e:	jne    422550 <__flatcc_fb_clear_parser@@Base+0xf0>
  422560:	mov    rdi,QWORD PTR [r14+0x20]
  422564:	test   rdi,rdi
  422567:	je     42256e <__flatcc_fb_clear_parser@@Base+0x10e>
  422569:	call   406040 <free@plt>
  42256e:	xor    esi,esi
  422570:	mov    edx,0x358
  422575:	mov    rdi,r14
  422578:	add    rsp,0x8
  42257c:	pop    rbx
  42257d:	pop    r14
  42257f:	jmp    406100 <memset@plt>
  422584:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42258e:	xchg   ax,ax
  422590:	lea    rdi,[rsi+0x8]
  422594:	jmp    4192c0 <fb_symbol_table_clear@@Base>
  422599:	nop    DWORD PTR [rax+0x0]
  4225a0:	push   rbp
  4225a1:	push   r15
  4225a3:	push   r14
  4225a5:	push   r13
  4225a7:	push   r12
  4225a9:	push   rbx
  4225aa:	push   rax
  4225ab:	mov    r14,rsi
  4225ae:	mov    rbx,rdi
  4225b1:	mov    WORD PTR [rsi+0x10],0x2
  4225b7:	mov    QWORD PTR [rsi],0x0
  4225be:	mov    DWORD PTR [rsi+0x8],0x0
  4225c5:	lea    r13,[rip+0x24480]        # 446a4c <fb_schema_table_deleted@@Base+0x31c>
  4225cc:	lea    r12,[rip+0x249ba]        # 446f8d <fb_schema_table_deleted@@Base+0x85d>
  4225d3:	lea    r15,[rip+0x24969]        # 446f43 <fb_schema_table_deleted@@Base+0x813>
  4225da:	jmp    4225e8 <__flatcc_fb_clear_parser@@Base+0x188>
  4225dc:	nop    DWORD PTR [rax+0x0]
  4225e0:	mov    rdi,rbx
  4225e3:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4225e8:	mov    rsi,QWORD PTR [rbx+0x48]
  4225ec:	mov    rax,QWORD PTR [rsi+0x20]
  4225f0:	add    rax,0xfffffffffffffffa
  4225f4:	cmp    rax,0x11
  4225f8:	ja     422712 <__flatcc_fb_clear_parser@@Base+0x2b2>
  4225fe:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  422603:	add    rax,r13
  422606:	jmp    rax
  422608:	mov    WORD PTR [r14+0x10],0x1
  42260f:	test   rsi,rsi
  422612:	je     4226af <__flatcc_fb_clear_parser@@Base+0x24f>
  422618:	mov    rax,rbx
  42261b:	nop    DWORD PTR [rax+rax*1+0x0]
  422620:	cmp    QWORD PTR [rax+0x28],rsi
  422624:	ja     422630 <__flatcc_fb_clear_parser@@Base+0x1d0>
  422626:	cmp    QWORD PTR [rax+0x30],rsi
  42262a:	ja     4226c9 <__flatcc_fb_clear_parser@@Base+0x269>
  422630:	mov    rax,QWORD PTR [rax]
  422633:	test   rax,rax
  422636:	jne    422620 <__flatcc_fb_clear_parser@@Base+0x1c0>
  422638:	lea    rdx,[rip+0xcf00]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  42263f:	jmp    4226d0 <__flatcc_fb_clear_parser@@Base+0x270>
  422644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42264e:	xchg   ax,ax
  422650:	mov    WORD PTR [r14+0x10],0x1
  422657:	xor    ecx,ecx
  422659:	xor    r8d,r8d
  42265c:	xor    r9d,r9d
  42265f:	mov    rdi,rbx
  422662:	mov    rdx,r12
  422665:	jmp    4226a5 <__flatcc_fb_clear_parser@@Base+0x245>
  422667:	nop    WORD PTR [rax+rax*1+0x0]
  422670:	cmp    QWORD PTR [r14],0x0
  422674:	jne    4225e0 <__flatcc_fb_clear_parser@@Base+0x180>
  42267a:	mov    rax,QWORD PTR [rsi]
  42267d:	mov    QWORD PTR [r14],rax
  422680:	jmp    4225e0 <__flatcc_fb_clear_parser@@Base+0x180>
  422685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42268f:	nop
  422690:	mov    WORD PTR [r14+0x10],0x1
  422697:	xor    ecx,ecx
  422699:	xor    r8d,r8d
  42269c:	xor    r9d,r9d
  42269f:	mov    rdi,rbx
  4226a2:	mov    rdx,r15
  4226a5:	call   41ba60 <__flatcc_error_report@@Base>
  4226aa:	jmp    4225e0 <__flatcc_fb_clear_parser@@Base+0x180>
  4226af:	xor    eax,eax
  4226b1:	mov    rdi,rbx
  4226b4:	lea    rsi,[rip+0x24567]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  4226bb:	lea    rdx,[rip+0x2489f]        # 446f61 <fb_schema_table_deleted@@Base+0x831>
  4226c2:	call   41b940 <__flatcc_fb_print_error@@Base>
  4226c7:	jmp    422706 <__flatcc_fb_clear_parser@@Base+0x2a6>
  4226c9:	mov    rdx,QWORD PTR [rax+0x318]
  4226d0:	mov    rcx,QWORD PTR [rsi+0x10]
  4226d4:	mov    r8,QWORD PTR [rsi+0x18]
  4226d8:	mov    r9d,0x1
  4226de:	mov    eax,0x0
  4226e3:	mov    rdi,rbx
  4226e6:	lea    rsi,[rip+0x244e3]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  4226ed:	lea    rbp,[rip+0x2486d]        # 446f61 <fb_schema_table_deleted@@Base+0x831>
  4226f4:	push   rbp
  4226f5:	lea    rbp,[rip+0x2488f]        # 446f8b <fb_schema_table_deleted@@Base+0x85b>
  4226fc:	push   rbp
  4226fd:	call   41b940 <__flatcc_fb_print_error@@Base>
  422702:	add    rsp,0x10
  422706:	add    DWORD PTR [rbx+0xd0],0x1
  42270d:	jmp    4225e0 <__flatcc_fb_clear_parser@@Base+0x180>
  422712:	lea    rdx,[rip+0x24893]        # 446fac <fb_schema_table_deleted@@Base+0x87c>
  422719:	xor    ecx,ecx
  42271b:	xor    r8d,r8d
  42271e:	xor    r9d,r9d
  422721:	mov    rdi,rbx
  422724:	call   41ba60 <__flatcc_error_report@@Base>
  422729:	mov    WORD PTR [r14+0x10],0x1
  422730:	mov    rax,QWORD PTR [r14]
  422733:	test   rax,rax
  422736:	je     422744 <__flatcc_fb_clear_parser@@Base+0x2e4>
  422738:	mov    rcx,QWORD PTR [rbx+0x48]
  42273c:	mov    ecx,DWORD PTR [rcx]
  42273e:	sub    ecx,eax
  422740:	mov    DWORD PTR [r14+0x8],ecx
  422744:	mov    rbp,QWORD PTR [rbx+0x48]
  422748:	cmp    QWORD PTR [rbp+0x20],0x16
  42274d:	jne    422765 <__flatcc_fb_clear_parser@@Base+0x305>
  42274f:	mov    rdi,rbx
  422752:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422757:	test   rbp,rbp
  42275a:	jne    4227ff <__flatcc_fb_clear_parser@@Base+0x39f>
  422760:	jmp    4227f8 <__flatcc_fb_clear_parser@@Base+0x398>
  422765:	test   rbp,rbp
  422768:	je     4227a6 <__flatcc_fb_clear_parser@@Base+0x346>
  42276a:	mov    rax,QWORD PTR [rbp+0x0]
  42276e:	xor    r9d,r9d
  422771:	lea    rdx,[rip+0xcdc7]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422778:	mov    r10,rdx
  42277b:	test   rax,rax
  42277e:	je     422787 <__flatcc_fb_clear_parser@@Base+0x327>
  422780:	mov    r9d,DWORD PTR [rbp+0x8]
  422784:	mov    r10,rax
  422787:	mov    rax,rbx
  42278a:	nop    WORD PTR [rax+rax*1+0x0]
  422790:	cmp    QWORD PTR [rax+0x28],rbp
  422794:	ja     42279c <__flatcc_fb_clear_parser@@Base+0x33c>
  422796:	cmp    QWORD PTR [rax+0x30],rbp
  42279a:	ja     4227c0 <__flatcc_fb_clear_parser@@Base+0x360>
  42279c:	mov    rax,QWORD PTR [rax]
  42279f:	test   rax,rax
  4227a2:	jne    422790 <__flatcc_fb_clear_parser@@Base+0x330>
  4227a4:	jmp    4227c7 <__flatcc_fb_clear_parser@@Base+0x367>
  4227a6:	lea    rsi,[rip+0x24475]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  4227ad:	lea    rdx,[rip+0x24823]        # 446fd7 <fb_schema_table_deleted@@Base+0x8a7>
  4227b4:	xor    eax,eax
  4227b6:	mov    rdi,rbx
  4227b9:	call   41b940 <__flatcc_fb_print_error@@Base>
  4227be:	jmp    4227f1 <__flatcc_fb_clear_parser@@Base+0x391>
  4227c0:	mov    rdx,QWORD PTR [rax+0x318]
  4227c7:	mov    rcx,QWORD PTR [rbp+0x10]
  4227cb:	mov    r8,QWORD PTR [rbp+0x18]
  4227cf:	lea    rbp,[rip+0x24801]        # 446fd7 <fb_schema_table_deleted@@Base+0x8a7>
  4227d6:	lea    rsi,[rip+0x243f3]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  4227dd:	mov    eax,0x0
  4227e2:	mov    rdi,rbx
  4227e5:	push   rbp
  4227e6:	push   r10
  4227e8:	call   41b940 <__flatcc_fb_print_error@@Base>
  4227ed:	add    rsp,0x10
  4227f1:	add    DWORD PTR [rbx+0xd0],0x1
  4227f8:	mov    WORD PTR [r14+0x10],0x1
  4227ff:	add    rsp,0x8
  422803:	pop    rbx
  422804:	pop    r12
  422806:	pop    r13
  422808:	pop    r14
  42280a:	pop    r15
  42280c:	pop    rbp
  42280d:	ret    
  42280e:	xchg   ax,ax
  422810:	push   rbp
  422811:	push   r15
  422813:	push   r14
  422815:	push   r13
  422817:	push   r12
  422819:	push   rbx
  42281a:	push   rax
  42281b:	mov    rbx,rdi
  42281e:	mov    rbp,QWORD PTR [rdi+0x48]
  422822:	cmp    QWORD PTR [rbp+0x20],0x9
  422827:	jne    4230be <__flatcc_fb_clear_parser@@Base+0xc5e>
  42282d:	mov    r15,rdx
  422830:	mov    r14,rsi
  422833:	mov    rdi,rbx
  422836:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  42283b:	test   rbp,rbp
  42283e:	je     423240 <__flatcc_fb_clear_parser@@Base+0xde0>
  422844:	mov    QWORD PTR [r14+0x8],rbp
  422848:	mov    rdi,rbx
  42284b:	call   423430 <__flatcc_fb_clear_parser@@Base+0xfd0>
  422850:	mov    QWORD PTR [r14+0x38],rax
  422854:	mov    rbp,QWORD PTR [rbx+0x48]
  422858:	cmp    QWORD PTR [rbp+0x20],0x7b
  42285d:	jne    423119 <__flatcc_fb_clear_parser@@Base+0xcb9>
  422863:	mov    rdi,rbx
  422866:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  42286b:	test   rbp,rbp
  42286e:	je     423240 <__flatcc_fb_clear_parser@@Base+0xde0>
  422874:	mov    r12,QWORD PTR [rbx+0x48]
  422878:	cmp    QWORD PTR [r12+0x20],0x7d
  42287e:	mov    rbp,r12
  422881:	je     423188 <__flatcc_fb_clear_parser@@Base+0xd28>
  422887:	nop    WORD PTR [rax+rax*1+0x0]
  422890:	mov    r13,QWORD PTR [rbx+0x60]
  422894:	lea    rax,[r13+0xb0]
  42289b:	cmp    rax,QWORD PTR [rbx+0x50]
  42289f:	jbe    4228dd <__flatcc_fb_clear_parser@@Base+0x47d>
  4228a1:	mov    edi,0x10000
  4228a6:	mov    esi,0x1
  4228ab:	call   406140 <calloc@plt>
  4228b0:	test   rax,rax
  4228b3:	je     42327a <__flatcc_fb_clear_parser@@Base+0xe1a>
  4228b9:	mov    rcx,QWORD PTR [rbx+0x58]
  4228bd:	mov    QWORD PTR [rax],rcx
  4228c0:	mov    QWORD PTR [rbx+0x58],rax
  4228c4:	lea    r13,[rax+0x10]
  4228c8:	mov    QWORD PTR [rbx+0x60],r13
  4228cc:	lea    rcx,[rax+0x10000]
  4228d3:	mov    QWORD PTR [rbx+0x50],rcx
  4228d7:	add    rax,0xc0
  4228dd:	mov    QWORD PTR [rbx+0x60],rax
  4228e1:	mov    rax,QWORD PTR [r14+0x28]
  4228e5:	mov    QWORD PTR [r13+0x0],rax
  4228e9:	mov    WORD PTR [r13+0x10],0x5
  4228f0:	mov    QWORD PTR [r14+0x28],r13
  4228f4:	mov    rax,QWORD PTR [rbx+0x40]
  4228f8:	test   rax,rax
  4228fb:	je     422920 <__flatcc_fb_clear_parser@@Base+0x4c0>
  4228fd:	xor    edx,edx
  4228ff:	nop
  422900:	mov    rcx,rax
  422903:	mov    rax,QWORD PTR [rax]
  422906:	mov    QWORD PTR [rcx],rdx
  422909:	mov    rdx,rcx
  42290c:	test   rax,rax
  42290f:	jne    422900 <__flatcc_fb_clear_parser@@Base+0x4a0>
  422911:	jmp    422922 <__flatcc_fb_clear_parser@@Base+0x4c2>
  422913:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42291d:	nop    DWORD PTR [rax]
  422920:	xor    ecx,ecx
  422922:	mov    QWORD PTR [r13+0x68],rcx
  422926:	mov    QWORD PTR [rbx+0x40],0x0
  42292e:	mov    rbp,QWORD PTR [rbx+0x48]
  422932:	mov    rax,QWORD PTR [rbp+0x20]
  422936:	cmp    r15,0xfffffffffffffc39
  42293d:	jne    422a40 <__flatcc_fb_clear_parser@@Base+0x5e0>
  422943:	cmp    rax,0x9
  422947:	jne    422aeb <__flatcc_fb_clear_parser@@Base+0x68b>
  42294d:	mov    rdi,rbx
  422950:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422955:	test   rbp,rbp
  422958:	je     423048 <__flatcc_fb_clear_parser@@Base+0xbe8>
  42295e:	mov    QWORD PTR [r13+0x8],rbp
  422962:	mov    rbp,QWORD PTR [rbx+0x48]
  422966:	cmp    QWORD PTR [rbp+0x20],0x28
  42296b:	jne    422bce <__flatcc_fb_clear_parser@@Base+0x76e>
  422971:	mov    rdi,rbx
  422974:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422979:	test   rbp,rbp
  42297c:	je     423048 <__flatcc_fb_clear_parser@@Base+0xbe8>
  422982:	lea    rsi,[r13+0x30]
  422986:	mov    rdi,rbx
  422989:	call   423ba0 <__flatcc_fb_clear_parser@@Base+0x1740>
  42298e:	mov    rbp,QWORD PTR [rbx+0x48]
  422992:	cmp    QWORD PTR [rbp+0x20],0x29
  422997:	jne    422d02 <__flatcc_fb_clear_parser@@Base+0x8a2>
  42299d:	mov    rdi,rbx
  4229a0:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4229a5:	test   rbp,rbp
  4229a8:	je     423048 <__flatcc_fb_clear_parser@@Base+0xbe8>
  4229ae:	mov    rbp,QWORD PTR [rbx+0x48]
  4229b2:	cmp    QWORD PTR [rbp+0x20],0x3a
  4229b7:	jne    422e78 <__flatcc_fb_clear_parser@@Base+0xa18>
  4229bd:	mov    rdi,rbx
  4229c0:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4229c5:	test   rbp,rbp
  4229c8:	je     423048 <__flatcc_fb_clear_parser@@Base+0xbe8>
  4229ce:	lea    rsi,[r13+0x18]
  4229d2:	mov    rdi,rbx
  4229d5:	call   423ba0 <__flatcc_fb_clear_parser@@Base+0x1740>
  4229da:	mov    rbp,QWORD PTR [rbx+0x48]
  4229de:	cmp    QWORD PTR [rbp+0x20],0x3d
  4229e3:	jne    422f3a <__flatcc_fb_clear_parser@@Base+0xada>
  4229e9:	mov    rdi,rbx
  4229ec:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4229f1:	test   rbp,rbp
  4229f4:	je     422f3a <__flatcc_fb_clear_parser@@Base+0xada>
  4229fa:	mov    rax,QWORD PTR [rbp+0x0]
  4229fe:	xor    r9d,r9d
  422a01:	lea    r10,[rip+0xcb37]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422a08:	test   rax,rax
  422a0b:	je     422a14 <__flatcc_fb_clear_parser@@Base+0x5b4>
  422a0d:	mov    r9d,DWORD PTR [rbp+0x8]
  422a11:	mov    r10,rax
  422a14:	mov    rax,rbx
  422a17:	cmp    QWORD PTR [rax+0x28],rbp
  422a1b:	ja     422a27 <__flatcc_fb_clear_parser@@Base+0x5c7>
  422a1d:	cmp    QWORD PTR [rax+0x30],rbp
  422a21:	ja     423002 <__flatcc_fb_clear_parser@@Base+0xba2>
  422a27:	mov    rax,QWORD PTR [rax]
  422a2a:	test   rax,rax
  422a2d:	jne    422a17 <__flatcc_fb_clear_parser@@Base+0x5b7>
  422a2f:	lea    rdx,[rip+0xcb09]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422a36:	jmp    423009 <__flatcc_fb_clear_parser@@Base+0xba9>
  422a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  422a40:	cmp    rax,0x9
  422a44:	jne    422b44 <__flatcc_fb_clear_parser@@Base+0x6e4>
  422a4a:	mov    rdi,rbx
  422a4d:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422a52:	test   rbp,rbp
  422a55:	je     422e18 <__flatcc_fb_clear_parser@@Base+0x9b8>
  422a5b:	mov    QWORD PTR [r13+0x8],rbp
  422a5f:	mov    rbp,QWORD PTR [rbx+0x48]
  422a63:	cmp    QWORD PTR [rbp+0x20],0x3a
  422a68:	jne    422c24 <__flatcc_fb_clear_parser@@Base+0x7c4>
  422a6e:	mov    rdi,rbx
  422a71:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422a76:	test   rbp,rbp
  422a79:	je     422e18 <__flatcc_fb_clear_parser@@Base+0x9b8>
  422a7f:	lea    rsi,[r13+0x18]
  422a83:	mov    rdi,rbx
  422a86:	call   423ba0 <__flatcc_fb_clear_parser@@Base+0x1740>
  422a8b:	mov    rbp,QWORD PTR [rbx+0x48]
  422a8f:	cmp    QWORD PTR [rbp+0x20],0x3d
  422a94:	jne    422abb <__flatcc_fb_clear_parser@@Base+0x65b>
  422a96:	mov    rdi,rbx
  422a99:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422a9e:	test   rbp,rbp
  422aa1:	je     422abb <__flatcc_fb_clear_parser@@Base+0x65b>
  422aa3:	lea    rsi,[r13+0x48]
  422aa7:	mov    edx,0x2
  422aac:	mov    rdi,rbx
  422aaf:	lea    rcx,[rip+0x24ba4]        # 44765a <fb_schema_table_deleted@@Base+0xf2a>
  422ab6:	call   4236b0 <__flatcc_fb_clear_parser@@Base+0x1250>
  422abb:	mov    rdi,rbx
  422abe:	call   423430 <__flatcc_fb_clear_parser@@Base+0xfd0>
  422ac3:	mov    QWORD PTR [r13+0x60],rax
  422ac7:	mov    QWORD PTR [rbx+0x40],0x0
  422acf:	mov    rax,QWORD PTR [rbx+0x48]
  422ad3:	cmp    QWORD PTR [rax+0x20],0x3b
  422ad8:	jne    422d54 <__flatcc_fb_clear_parser@@Base+0x8f4>
  422ade:	mov    rdi,rbx
  422ae1:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422ae6:	jmp    423071 <__flatcc_fb_clear_parser@@Base+0xc11>
  422aeb:	test   rbp,rbp
  422aee:	je     422b94 <__flatcc_fb_clear_parser@@Base+0x734>
  422af4:	mov    rax,QWORD PTR [rbp+0x0]
  422af8:	xor    r9d,r9d
  422afb:	lea    r10,[rip+0xca3d]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422b02:	test   rax,rax
  422b05:	je     422b0e <__flatcc_fb_clear_parser@@Base+0x6ae>
  422b07:	mov    r9d,DWORD PTR [rbp+0x8]
  422b0b:	mov    r10,rax
  422b0e:	mov    rax,rbx
  422b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  422b20:	cmp    QWORD PTR [rax+0x28],rbp
  422b24:	ja     422b30 <__flatcc_fb_clear_parser@@Base+0x6d0>
  422b26:	cmp    QWORD PTR [rax+0x30],rbp
  422b2a:	ja     422c74 <__flatcc_fb_clear_parser@@Base+0x814>
  422b30:	mov    rax,QWORD PTR [rax]
  422b33:	test   rax,rax
  422b36:	jne    422b20 <__flatcc_fb_clear_parser@@Base+0x6c0>
  422b38:	lea    rdx,[rip+0xca00]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422b3f:	jmp    422c7b <__flatcc_fb_clear_parser@@Base+0x81b>
  422b44:	test   rbp,rbp
  422b47:	je     422bb1 <__flatcc_fb_clear_parser@@Base+0x751>
  422b49:	mov    rax,QWORD PTR [rbp+0x0]
  422b4d:	xor    r9d,r9d
  422b50:	lea    r10,[rip+0xc9e8]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422b57:	test   rax,rax
  422b5a:	je     422b63 <__flatcc_fb_clear_parser@@Base+0x703>
  422b5c:	mov    r9d,DWORD PTR [rbp+0x8]
  422b60:	mov    r10,rax
  422b63:	mov    rax,rbx
  422b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b70:	cmp    QWORD PTR [rax+0x28],rbp
  422b74:	ja     422b80 <__flatcc_fb_clear_parser@@Base+0x720>
  422b76:	cmp    QWORD PTR [rax+0x30],rbp
  422b7a:	ja     422c9e <__flatcc_fb_clear_parser@@Base+0x83e>
  422b80:	mov    rax,QWORD PTR [rax]
  422b83:	test   rax,rax
  422b86:	jne    422b70 <__flatcc_fb_clear_parser@@Base+0x710>
  422b88:	lea    rdx,[rip+0xc9b0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422b8f:	jmp    422ca5 <__flatcc_fb_clear_parser@@Base+0x845>
  422b94:	xor    eax,eax
  422b96:	mov    rdi,rbx
  422b99:	lea    rsi,[rip+0x24082]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422ba0:	lea    rdx,[rip+0x248fa]        # 4474a1 <fb_schema_table_deleted@@Base+0xd71>
  422ba7:	call   41b940 <__flatcc_fb_print_error@@Base>
  422bac:	jmp    423033 <__flatcc_fb_clear_parser@@Base+0xbd3>
  422bb1:	xor    eax,eax
  422bb3:	mov    rdi,rbx
  422bb6:	lea    rsi,[rip+0x24065]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422bbd:	lea    rdx,[rip+0x24a53]        # 447617 <fb_schema_table_deleted@@Base+0xee7>
  422bc4:	call   41b940 <__flatcc_fb_print_error@@Base>
  422bc9:	jmp    422dff <__flatcc_fb_clear_parser@@Base+0x99f>
  422bce:	test   rbp,rbp
  422bd1:	je     422cc8 <__flatcc_fb_clear_parser@@Base+0x868>
  422bd7:	mov    rax,QWORD PTR [rbp+0x0]
  422bdb:	xor    r9d,r9d
  422bde:	lea    r10,[rip+0xc95a]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422be5:	test   rax,rax
  422be8:	je     422bf1 <__flatcc_fb_clear_parser@@Base+0x791>
  422bea:	mov    r9d,DWORD PTR [rbp+0x8]
  422bee:	mov    r10,rax
  422bf1:	mov    rax,rbx
  422bf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422bfe:	xchg   ax,ax
  422c00:	cmp    QWORD PTR [rax+0x28],rbp
  422c04:	ja     422c10 <__flatcc_fb_clear_parser@@Base+0x7b0>
  422c06:	cmp    QWORD PTR [rax+0x30],rbp
  422c0a:	ja     422da4 <__flatcc_fb_clear_parser@@Base+0x944>
  422c10:	mov    rax,QWORD PTR [rax]
  422c13:	test   rax,rax
  422c16:	jne    422c00 <__flatcc_fb_clear_parser@@Base+0x7a0>
  422c18:	lea    rdx,[rip+0xc920]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422c1f:	jmp    422dab <__flatcc_fb_clear_parser@@Base+0x94b>
  422c24:	test   rbp,rbp
  422c27:	je     422ce5 <__flatcc_fb_clear_parser@@Base+0x885>
  422c2d:	mov    rax,QWORD PTR [rbp+0x0]
  422c31:	xor    r9d,r9d
  422c34:	lea    r10,[rip+0xc904]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422c3b:	test   rax,rax
  422c3e:	je     422c47 <__flatcc_fb_clear_parser@@Base+0x7e7>
  422c40:	mov    r9d,DWORD PTR [rbp+0x8]
  422c44:	mov    r10,rax
  422c47:	mov    rax,rbx
  422c4a:	nop    WORD PTR [rax+rax*1+0x0]
  422c50:	cmp    QWORD PTR [rax+0x28],rbp
  422c54:	ja     422c60 <__flatcc_fb_clear_parser@@Base+0x800>
  422c56:	cmp    QWORD PTR [rax+0x30],rbp
  422c5a:	ja     422dce <__flatcc_fb_clear_parser@@Base+0x96e>
  422c60:	mov    rax,QWORD PTR [rax]
  422c63:	test   rax,rax
  422c66:	jne    422c50 <__flatcc_fb_clear_parser@@Base+0x7f0>
  422c68:	lea    rdx,[rip+0xc8d0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422c6f:	jmp    422dd5 <__flatcc_fb_clear_parser@@Base+0x975>
  422c74:	mov    rdx,QWORD PTR [rax+0x318]
  422c7b:	mov    rcx,QWORD PTR [rbp+0x10]
  422c7f:	mov    r8,QWORD PTR [rbp+0x18]
  422c83:	mov    eax,0x0
  422c88:	mov    rdi,rbx
  422c8b:	lea    rsi,[rip+0x23f3e]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422c92:	lea    rbp,[rip+0x24808]        # 4474a1 <fb_schema_table_deleted@@Base+0xd71>
  422c99:	jmp    423027 <__flatcc_fb_clear_parser@@Base+0xbc7>
  422c9e:	mov    rdx,QWORD PTR [rax+0x318]
  422ca5:	mov    rcx,QWORD PTR [rbp+0x10]
  422ca9:	mov    r8,QWORD PTR [rbp+0x18]
  422cad:	mov    eax,0x0
  422cb2:	mov    rdi,rbx
  422cb5:	lea    rsi,[rip+0x23f14]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422cbc:	lea    rbp,[rip+0x24954]        # 447617 <fb_schema_table_deleted@@Base+0xee7>
  422cc3:	jmp    422df3 <__flatcc_fb_clear_parser@@Base+0x993>
  422cc8:	xor    eax,eax
  422cca:	mov    rdi,rbx
  422ccd:	lea    rsi,[rip+0x23f4e]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422cd4:	lea    rdx,[rip+0x247e1]        # 4474bc <fb_schema_table_deleted@@Base+0xd8c>
  422cdb:	call   41b940 <__flatcc_fb_print_error@@Base>
  422ce0:	jmp    423033 <__flatcc_fb_clear_parser@@Base+0xbd3>
  422ce5:	xor    eax,eax
  422ce7:	mov    rdi,rbx
  422cea:	lea    rsi,[rip+0x23f31]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422cf1:	lea    rdx,[rip+0x24939]        # 447631 <fb_schema_table_deleted@@Base+0xf01>
  422cf8:	call   41b940 <__flatcc_fb_print_error@@Base>
  422cfd:	jmp    422dff <__flatcc_fb_clear_parser@@Base+0x99f>
  422d02:	test   rbp,rbp
  422d05:	je     422e3e <__flatcc_fb_clear_parser@@Base+0x9de>
  422d0b:	mov    rax,QWORD PTR [rbp+0x0]
  422d0f:	xor    r9d,r9d
  422d12:	lea    r10,[rip+0xc826]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422d19:	test   rax,rax
  422d1c:	je     422d25 <__flatcc_fb_clear_parser@@Base+0x8c5>
  422d1e:	mov    r9d,DWORD PTR [rbp+0x8]
  422d22:	mov    r10,rax
  422d25:	mov    rax,rbx
  422d28:	nop    DWORD PTR [rax+rax*1+0x0]
  422d30:	cmp    QWORD PTR [rax+0x28],rbp
  422d34:	ja     422d40 <__flatcc_fb_clear_parser@@Base+0x8e0>
  422d36:	cmp    QWORD PTR [rax+0x30],rbp
  422d3a:	ja     422ec2 <__flatcc_fb_clear_parser@@Base+0xa62>
  422d40:	mov    rax,QWORD PTR [rax]
  422d43:	test   rax,rax
  422d46:	jne    422d30 <__flatcc_fb_clear_parser@@Base+0x8d0>
  422d48:	lea    rdx,[rip+0xc7f0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422d4f:	jmp    422ec9 <__flatcc_fb_clear_parser@@Base+0xa69>
  422d54:	test   rax,rax
  422d57:	je     422e5b <__flatcc_fb_clear_parser@@Base+0x9fb>
  422d5d:	mov    rcx,QWORD PTR [rax]
  422d60:	xor    r9d,r9d
  422d63:	lea    rbp,[rip+0xc7d5]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422d6a:	mov    r10,rbp
  422d6d:	test   rcx,rcx
  422d70:	je     422d79 <__flatcc_fb_clear_parser@@Base+0x919>
  422d72:	mov    r9d,DWORD PTR [rax+0x8]
  422d76:	mov    r10,rcx
  422d79:	mov    rcx,rbx
  422d7c:	nop    DWORD PTR [rax+0x0]
  422d80:	cmp    QWORD PTR [rcx+0x28],rax
  422d84:	ja     422d90 <__flatcc_fb_clear_parser@@Base+0x930>
  422d86:	cmp    QWORD PTR [rcx+0x30],rax
  422d8a:	ja     422eec <__flatcc_fb_clear_parser@@Base+0xa8c>
  422d90:	mov    rcx,QWORD PTR [rcx]
  422d93:	test   rcx,rcx
  422d96:	jne    422d80 <__flatcc_fb_clear_parser@@Base+0x920>
  422d98:	lea    rdx,[rip+0xc7a0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422d9f:	jmp    422ef3 <__flatcc_fb_clear_parser@@Base+0xa93>
  422da4:	mov    rdx,QWORD PTR [rax+0x318]
  422dab:	mov    rcx,QWORD PTR [rbp+0x10]
  422daf:	mov    r8,QWORD PTR [rbp+0x18]
  422db3:	mov    eax,0x0
  422db8:	mov    rdi,rbx
  422dbb:	lea    rsi,[rip+0x23e0e]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422dc2:	lea    rbp,[rip+0x246f3]        # 4474bc <fb_schema_table_deleted@@Base+0xd8c>
  422dc9:	jmp    423027 <__flatcc_fb_clear_parser@@Base+0xbc7>
  422dce:	mov    rdx,QWORD PTR [rax+0x318]
  422dd5:	mov    rcx,QWORD PTR [rbp+0x10]
  422dd9:	mov    r8,QWORD PTR [rbp+0x18]
  422ddd:	mov    eax,0x0
  422de2:	mov    rdi,rbx
  422de5:	lea    rsi,[rip+0x23de4]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422dec:	lea    rbp,[rip+0x2483e]        # 447631 <fb_schema_table_deleted@@Base+0xf01>
  422df3:	push   rbp
  422df4:	push   r10
  422df6:	call   41b940 <__flatcc_fb_print_error@@Base>
  422dfb:	add    rsp,0x10
  422dff:	add    DWORD PTR [rbx+0xd0],0x1
  422e06:	jmp    422e18 <__flatcc_fb_clear_parser@@Base+0x9b8>
  422e08:	nop    DWORD PTR [rax+rax*1+0x0]
  422e10:	mov    rdi,rbx
  422e13:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  422e18:	mov    rax,QWORD PTR [rbx+0x48]
  422e1c:	mov    rax,QWORD PTR [rax+0x20]
  422e20:	test   rax,rax
  422e23:	je     423071 <__flatcc_fb_clear_parser@@Base+0xc11>
  422e29:	cmp    rax,0x7d
  422e2d:	je     423069 <__flatcc_fb_clear_parser@@Base+0xc09>
  422e33:	cmp    rax,0x3b
  422e37:	jne    422e10 <__flatcc_fb_clear_parser@@Base+0x9b0>
  422e39:	jmp    423061 <__flatcc_fb_clear_parser@@Base+0xc01>
  422e3e:	xor    eax,eax
  422e40:	mov    rdi,rbx
  422e43:	lea    rsi,[rip+0x23dd8]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422e4a:	lea    rdx,[rip+0x24690]        # 4474e1 <fb_schema_table_deleted@@Base+0xdb1>
  422e51:	call   41b940 <__flatcc_fb_print_error@@Base>
  422e56:	jmp    423033 <__flatcc_fb_clear_parser@@Base+0xbd3>
  422e5b:	xor    eax,eax
  422e5d:	mov    rdi,rbx
  422e60:	lea    rsi,[rip+0x23dbb]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422e67:	lea    rdx,[rip+0x2480f]        # 44767d <fb_schema_table_deleted@@Base+0xf4d>
  422e6e:	call   41b940 <__flatcc_fb_print_error@@Base>
  422e73:	jmp    422f1d <__flatcc_fb_clear_parser@@Base+0xabd>
  422e78:	test   rbp,rbp
  422e7b:	je     422fa9 <__flatcc_fb_clear_parser@@Base+0xb49>
  422e81:	mov    rax,QWORD PTR [rbp+0x0]
  422e85:	xor    r9d,r9d
  422e88:	lea    r10,[rip+0xc6b0]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422e8f:	test   rax,rax
  422e92:	je     422e9b <__flatcc_fb_clear_parser@@Base+0xa3b>
  422e94:	mov    r9d,DWORD PTR [rbp+0x8]
  422e98:	mov    r10,rax
  422e9b:	mov    rax,rbx
  422e9e:	cmp    QWORD PTR [rax+0x28],rbp
  422ea2:	ja     422eae <__flatcc_fb_clear_parser@@Base+0xa4e>
  422ea4:	cmp    QWORD PTR [rax+0x30],rbp
  422ea8:	ja     422fc3 <__flatcc_fb_clear_parser@@Base+0xb63>
  422eae:	mov    rax,QWORD PTR [rax]
  422eb1:	test   rax,rax
  422eb4:	jne    422e9e <__flatcc_fb_clear_parser@@Base+0xa3e>
  422eb6:	lea    rdx,[rip+0xc682]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422ebd:	jmp    422fca <__flatcc_fb_clear_parser@@Base+0xb6a>
  422ec2:	mov    rdx,QWORD PTR [rax+0x318]
  422ec9:	mov    rcx,QWORD PTR [rbp+0x10]
  422ecd:	mov    r8,QWORD PTR [rbp+0x18]
  422ed1:	mov    eax,0x0
  422ed6:	mov    rdi,rbx
  422ed9:	lea    rsi,[rip+0x23cf0]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422ee0:	lea    rbp,[rip+0x245fa]        # 4474e1 <fb_schema_table_deleted@@Base+0xdb1>
  422ee7:	jmp    423027 <__flatcc_fb_clear_parser@@Base+0xbc7>
  422eec:	mov    rdx,QWORD PTR [rcx+0x318]
  422ef3:	mov    rcx,QWORD PTR [rax+0x10]
  422ef7:	mov    r8,QWORD PTR [rax+0x18]
  422efb:	mov    eax,0x0
  422f00:	mov    rdi,rbx
  422f03:	lea    rsi,[rip+0x23cc6]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422f0a:	lea    rbp,[rip+0x2476c]        # 44767d <fb_schema_table_deleted@@Base+0xf4d>
  422f11:	push   rbp
  422f12:	push   r10
  422f14:	call   41b940 <__flatcc_fb_print_error@@Base>
  422f19:	add    rsp,0x10
  422f1d:	mov    eax,DWORD PTR [rbx+0xd0]
  422f23:	add    eax,0x1
  422f26:	mov    DWORD PTR [rbx+0xd0],eax
  422f2c:	cmp    eax,0x9
  422f2f:	jle    423080 <__flatcc_fb_clear_parser@@Base+0xc20>
  422f35:	jmp    423240 <__flatcc_fb_clear_parser@@Base+0xde0>
  422f3a:	mov    rdi,rbx
  422f3d:	call   423430 <__flatcc_fb_clear_parser@@Base+0xfd0>
  422f42:	mov    QWORD PTR [r13+0x60],rax
  422f46:	mov    QWORD PTR [rbx+0x40],0x0
  422f4e:	mov    rax,QWORD PTR [rbx+0x48]
  422f52:	cmp    QWORD PTR [rax+0x20],0x3b
  422f57:	je     422ade <__flatcc_fb_clear_parser@@Base+0x67e>
  422f5d:	test   rax,rax
  422f60:	je     422fea <__flatcc_fb_clear_parser@@Base+0xb8a>
  422f66:	mov    rcx,QWORD PTR [rax]
  422f69:	xor    r9d,r9d
  422f6c:	lea    rbp,[rip+0xc5cc]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422f73:	mov    r10,rbp
  422f76:	test   rcx,rcx
  422f79:	je     422f82 <__flatcc_fb_clear_parser@@Base+0xb22>
  422f7b:	mov    r9d,DWORD PTR [rax+0x8]
  422f7f:	mov    r10,rcx
  422f82:	mov    rcx,rbx
  422f85:	cmp    QWORD PTR [rcx+0x28],rax
  422f89:	ja     422f95 <__flatcc_fb_clear_parser@@Base+0xb35>
  422f8b:	cmp    QWORD PTR [rcx+0x30],rax
  422f8f:	ja     423094 <__flatcc_fb_clear_parser@@Base+0xc34>
  422f95:	mov    rcx,QWORD PTR [rcx]
  422f98:	test   rcx,rcx
  422f9b:	jne    422f85 <__flatcc_fb_clear_parser@@Base+0xb25>
  422f9d:	lea    rdx,[rip+0xc59b]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  422fa4:	jmp    42309b <__flatcc_fb_clear_parser@@Base+0xc3b>
  422fa9:	xor    eax,eax
  422fab:	mov    rdi,rbx
  422fae:	lea    rsi,[rip+0x23c6d]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422fb5:	lea    rdx,[rip+0x2454c]        # 447508 <fb_schema_table_deleted@@Base+0xdd8>
  422fbc:	call   41b940 <__flatcc_fb_print_error@@Base>
  422fc1:	jmp    423033 <__flatcc_fb_clear_parser@@Base+0xbd3>
  422fc3:	mov    rdx,QWORD PTR [rax+0x318]
  422fca:	mov    rcx,QWORD PTR [rbp+0x10]
  422fce:	mov    r8,QWORD PTR [rbp+0x18]
  422fd2:	mov    eax,0x0
  422fd7:	mov    rdi,rbx
  422fda:	lea    rsi,[rip+0x23bef]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  422fe1:	lea    rbp,[rip+0x24520]        # 447508 <fb_schema_table_deleted@@Base+0xdd8>
  422fe8:	jmp    423027 <__flatcc_fb_clear_parser@@Base+0xbc7>
  422fea:	xor    eax,eax
  422fec:	mov    rdi,rbx
  422fef:	lea    rsi,[rip+0x23c2c]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  422ff6:	lea    rdx,[rip+0x24564]        # 447561 <fb_schema_table_deleted@@Base+0xe31>
  422ffd:	jmp    422e6e <__flatcc_fb_clear_parser@@Base+0xa0e>
  423002:	mov    rdx,QWORD PTR [rax+0x318]
  423009:	mov    rcx,QWORD PTR [rbp+0x10]
  42300d:	mov    r8,QWORD PTR [rbp+0x18]
  423011:	mov    eax,0x0
  423016:	mov    rdi,rbx
  423019:	lea    rsi,[rip+0x23bb0]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  423020:	lea    rbp,[rip+0x24514]        # 44753b <fb_schema_table_deleted@@Base+0xe0b>
  423027:	push   rbp
  423028:	push   r10
  42302a:	call   41b940 <__flatcc_fb_print_error@@Base>
  42302f:	add    rsp,0x10
  423033:	add    DWORD PTR [rbx+0xd0],0x1
  42303a:	jmp    423048 <__flatcc_fb_clear_parser@@Base+0xbe8>
  42303c:	nop    DWORD PTR [rax+0x0]
  423040:	mov    rdi,rbx
  423043:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423048:	mov    rax,QWORD PTR [rbx+0x48]
  42304c:	mov    rax,QWORD PTR [rax+0x20]
  423050:	test   rax,rax
  423053:	je     423071 <__flatcc_fb_clear_parser@@Base+0xc11>
  423055:	cmp    rax,0x7d
  423059:	je     423069 <__flatcc_fb_clear_parser@@Base+0xc09>
  42305b:	cmp    rax,0x3b
  42305f:	jne    423040 <__flatcc_fb_clear_parser@@Base+0xbe0>
  423061:	mov    rdi,rbx
  423064:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423069:	mov    QWORD PTR [rbx+0x40],0x0
  423071:	mov    eax,DWORD PTR [rbx+0xd0]
  423077:	cmp    eax,0x9
  42307a:	jg     423240 <__flatcc_fb_clear_parser@@Base+0xde0>
  423080:	mov    rbp,QWORD PTR [rbx+0x48]
  423084:	cmp    QWORD PTR [rbp+0x20],0x7d
  423089:	jne    422890 <__flatcc_fb_clear_parser@@Base+0x430>
  42308f:	jmp    423188 <__flatcc_fb_clear_parser@@Base+0xd28>
  423094:	mov    rdx,QWORD PTR [rcx+0x318]
  42309b:	mov    rcx,QWORD PTR [rax+0x10]
  42309f:	mov    r8,QWORD PTR [rax+0x18]
  4230a3:	mov    eax,0x0
  4230a8:	mov    rdi,rbx
  4230ab:	lea    rsi,[rip+0x23b1e]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  4230b2:	lea    rbp,[rip+0x244a8]        # 447561 <fb_schema_table_deleted@@Base+0xe31>
  4230b9:	jmp    422f11 <__flatcc_fb_clear_parser@@Base+0xab1>
  4230be:	test   rbp,rbp
  4230c1:	je     423106 <__flatcc_fb_clear_parser@@Base+0xca6>
  4230c3:	mov    rax,QWORD PTR [rbp+0x0]
  4230c7:	xor    r9d,r9d
  4230ca:	lea    rdx,[rip+0xc46e]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4230d1:	mov    r10,rdx
  4230d4:	test   rax,rax
  4230d7:	je     4230e0 <__flatcc_fb_clear_parser@@Base+0xc80>
  4230d9:	mov    r9d,DWORD PTR [rbp+0x8]
  4230dd:	mov    r10,rax
  4230e0:	mov    rax,rbx
  4230e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230ed:	nop    DWORD PTR [rax]
  4230f0:	cmp    QWORD PTR [rax+0x28],rbp
  4230f4:	ja     4230fc <__flatcc_fb_clear_parser@@Base+0xc9c>
  4230f6:	cmp    QWORD PTR [rax+0x30],rbp
  4230fa:	ja     42316d <__flatcc_fb_clear_parser@@Base+0xd0d>
  4230fc:	mov    rax,QWORD PTR [rax]
  4230ff:	test   rax,rax
  423102:	jne    4230f0 <__flatcc_fb_clear_parser@@Base+0xc90>
  423104:	jmp    423174 <__flatcc_fb_clear_parser@@Base+0xd14>
  423106:	lea    rsi,[rip+0x23b15]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  42310d:	lea    rdx,[rip+0x241eb]        # 4472ff <fb_schema_table_deleted@@Base+0xbcf>
  423114:	jmp    4231f4 <__flatcc_fb_clear_parser@@Base+0xd94>
  423119:	test   rbp,rbp
  42311c:	je     4231e6 <__flatcc_fb_clear_parser@@Base+0xd86>
  423122:	mov    rax,QWORD PTR [rbp+0x0]
  423126:	xor    r9d,r9d
  423129:	lea    rdx,[rip+0xc40f]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  423130:	mov    r10,rdx
  423133:	test   rax,rax
  423136:	je     42313f <__flatcc_fb_clear_parser@@Base+0xcdf>
  423138:	mov    r9d,DWORD PTR [rbp+0x8]
  42313c:	mov    r10,rax
  42313f:	mov    rax,rbx
  423142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42314c:	nop    DWORD PTR [rax+0x0]
  423150:	cmp    QWORD PTR [rax+0x28],rbp
  423154:	ja     423160 <__flatcc_fb_clear_parser@@Base+0xd00>
  423156:	cmp    QWORD PTR [rax+0x30],rbp
  42315a:	ja     423200 <__flatcc_fb_clear_parser@@Base+0xda0>
  423160:	mov    rax,QWORD PTR [rax]
  423163:	test   rax,rax
  423166:	jne    423150 <__flatcc_fb_clear_parser@@Base+0xcf0>
  423168:	jmp    423207 <__flatcc_fb_clear_parser@@Base+0xda7>
  42316d:	mov    rdx,QWORD PTR [rax+0x318]
  423174:	mov    rcx,QWORD PTR [rbp+0x10]
  423178:	mov    r8,QWORD PTR [rbp+0x18]
  42317c:	lea    rbp,[rip+0x2417c]        # 4472ff <fb_schema_table_deleted@@Base+0xbcf>
  423183:	jmp    423216 <__flatcc_fb_clear_parser@@Base+0xdb6>
  423188:	mov    rdi,rbx
  42318b:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423190:	test   r12,r12
  423193:	je     4231b6 <__flatcc_fb_clear_parser@@Base+0xd56>
  423195:	test   rbp,rbp
  423198:	jne    4231b6 <__flatcc_fb_clear_parser@@Base+0xd56>
  42319a:	mov    rsi,QWORD PTR [rbx+0x48]
  42319e:	lea    rdx,[rip+0x24196]        # 44733b <fb_schema_table_deleted@@Base+0xc0b>
  4231a5:	xor    r8d,r8d
  4231a8:	xor    r9d,r9d
  4231ab:	mov    rdi,rbx
  4231ae:	mov    rcx,r12
  4231b1:	call   41ba60 <__flatcc_error_report@@Base>
  4231b6:	mov    rax,QWORD PTR [r14+0x28]
  4231ba:	test   rax,rax
  4231bd:	je     423272 <__flatcc_fb_clear_parser@@Base+0xe12>
  4231c3:	xor    edx,edx
  4231c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231cf:	nop
  4231d0:	mov    rcx,rax
  4231d3:	mov    rax,QWORD PTR [rax]
  4231d6:	mov    QWORD PTR [rcx],rdx
  4231d9:	mov    rdx,rcx
  4231dc:	test   rax,rax
  4231df:	jne    4231d0 <__flatcc_fb_clear_parser@@Base+0xd70>
  4231e1:	jmp    423274 <__flatcc_fb_clear_parser@@Base+0xe14>
  4231e6:	lea    rsi,[rip+0x23a35]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  4231ed:	lea    rdx,[rip+0x2412e]        # 447322 <fb_schema_table_deleted@@Base+0xbf2>
  4231f4:	xor    eax,eax
  4231f6:	mov    rdi,rbx
  4231f9:	call   41b940 <__flatcc_fb_print_error@@Base>
  4231fe:	jmp    423231 <__flatcc_fb_clear_parser@@Base+0xdd1>
  423200:	mov    rdx,QWORD PTR [rax+0x318]
  423207:	mov    rcx,QWORD PTR [rbp+0x10]
  42320b:	mov    r8,QWORD PTR [rbp+0x18]
  42320f:	lea    rbp,[rip+0x2410c]        # 447322 <fb_schema_table_deleted@@Base+0xbf2>
  423216:	lea    rsi,[rip+0x239b3]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  42321d:	mov    eax,0x0
  423222:	mov    rdi,rbx
  423225:	push   rbp
  423226:	push   r10
  423228:	call   41b940 <__flatcc_fb_print_error@@Base>
  42322d:	add    rsp,0x10
  423231:	add    DWORD PTR [rbx+0xd0],0x1
  423238:	nop    DWORD PTR [rax+rax*1+0x0]
  423240:	mov    rax,QWORD PTR [rbx+0x48]
  423244:	mov    rbp,QWORD PTR [rax+0x20]
  423248:	test   rbp,rbp
  42324b:	je     423263 <__flatcc_fb_clear_parser@@Base+0xe03>
  42324d:	mov    rdi,rbx
  423250:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423255:	cmp    rbp,0x7d
  423259:	jne    423240 <__flatcc_fb_clear_parser@@Base+0xde0>
  42325b:	mov    QWORD PTR [rbx+0x40],0x0
  423263:	add    rsp,0x8
  423267:	pop    rbx
  423268:	pop    r12
  42326a:	pop    r13
  42326c:	pop    r14
  42326e:	pop    r15
  423270:	pop    rbp
  423271:	ret    
  423272:	xor    ecx,ecx
  423274:	mov    QWORD PTR [r14+0x28],rcx
  423278:	jmp    423263 <__flatcc_fb_clear_parser@@Base+0xe03>
  42327a:	mov    rax,QWORD PTR [rip+0x2dd77]        # 450ff8 <stderr@GLIBC_2.2.5>
  423281:	mov    rcx,QWORD PTR [rax]
  423284:	lea    rdi,[rip+0xbd8c]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  42328b:	mov    esi,0x22
  423290:	mov    edx,0x1
  423295:	call   406210 <fwrite@plt>
  42329a:	mov    edi,0x1
  42329f:	call   406200 <exit@plt>
  4232a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232ae:	xchg   ax,ax
  4232b0:	push   r15
  4232b2:	push   r14
  4232b4:	push   r13
  4232b6:	push   r12
  4232b8:	push   rbx
  4232b9:	mov    r14,rsi
  4232bc:	mov    r12,rdi
  4232bf:	mov    r15,QWORD PTR [rdi+0x48]
  4232c3:	mov    rcx,QWORD PTR [rdi+0x60]
  4232c7:	lea    rax,[rcx+0x20]
  4232cb:	cmp    rax,QWORD PTR [rdi+0x50]
  4232cf:	jbe    42330f <__flatcc_fb_clear_parser@@Base+0xeaf>
  4232d1:	mov    edi,0x10000
  4232d6:	mov    esi,0x1
  4232db:	call   406140 <calloc@plt>
  4232e0:	test   rax,rax
  4232e3:	je     4233f7 <__flatcc_fb_clear_parser@@Base+0xf97>
  4232e9:	mov    rcx,QWORD PTR [r12+0x58]
  4232ee:	mov    QWORD PTR [rax],rcx
  4232f1:	mov    QWORD PTR [r12+0x58],rax
  4232f6:	lea    rcx,[rax+0x10]
  4232fa:	mov    QWORD PTR [r12+0x60],rcx
  4232ff:	lea    rdx,[rax+0x10000]
  423306:	mov    QWORD PTR [r12+0x50],rdx
  42330b:	add    rax,0x30
  42330f:	mov    QWORD PTR [r12+0x60],rax
  423314:	mov    QWORD PTR [rcx+0x8],r15
  423318:	mov    QWORD PTR [r14],rcx
  42331b:	mov    rdi,r12
  42331e:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423323:	mov    r13,QWORD PTR [r12+0x48]
  423328:	cmp    QWORD PTR [r13+0x20],0x2e
  42332d:	jne    4233ca <__flatcc_fb_clear_parser@@Base+0xf6a>
  423333:	mov    r15,QWORD PTR [r14]
  423336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423340:	mov    rdi,r12
  423343:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423348:	test   r13,r13
  42334b:	je     4233ca <__flatcc_fb_clear_parser@@Base+0xf6a>
  42334d:	mov    r14,QWORD PTR [r12+0x48]
  423352:	cmp    QWORD PTR [r14+0x20],0x9
  423357:	jne    4233d4 <__flatcc_fb_clear_parser@@Base+0xf74>
  423359:	mov    rbx,QWORD PTR [r12+0x60]
  42335e:	lea    rax,[rbx+0x20]
  423362:	cmp    rax,QWORD PTR [r12+0x50]
  423367:	jbe    4233a3 <__flatcc_fb_clear_parser@@Base+0xf43>
  423369:	mov    edi,0x10000
  42336e:	mov    esi,0x1
  423373:	call   406140 <calloc@plt>
  423378:	test   rax,rax
  42337b:	je     4233f7 <__flatcc_fb_clear_parser@@Base+0xf97>
  42337d:	mov    rcx,QWORD PTR [r12+0x58]
  423382:	mov    QWORD PTR [rax],rcx
  423385:	mov    QWORD PTR [r12+0x58],rax
  42338a:	lea    rbx,[rax+0x10]
  42338e:	mov    QWORD PTR [r12+0x60],rbx
  423393:	lea    rcx,[rax+0x10000]
  42339a:	mov    QWORD PTR [r12+0x50],rcx
  42339f:	add    rax,0x30
  4233a3:	mov    QWORD PTR [r12+0x60],rax
  4233a8:	mov    QWORD PTR [rbx+0x8],r14
  4233ac:	mov    QWORD PTR [r15],rbx
  4233af:	mov    rdi,r12
  4233b2:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4233b7:	mov    r13,QWORD PTR [r12+0x48]
  4233bc:	cmp    QWORD PTR [r13+0x20],0x2e
  4233c1:	mov    r15,rbx
  4233c4:	je     423340 <__flatcc_fb_clear_parser@@Base+0xee0>
  4233ca:	pop    rbx
  4233cb:	pop    r12
  4233cd:	pop    r13
  4233cf:	pop    r14
  4233d1:	pop    r15
  4233d3:	ret    
  4233d4:	lea    rdx,[rip+0x23d88]        # 447163 <fb_schema_table_deleted@@Base+0xa33>
  4233db:	xor    ecx,ecx
  4233dd:	xor    r8d,r8d
  4233e0:	xor    r9d,r9d
  4233e3:	mov    rdi,r12
  4233e6:	mov    rsi,r14
  4233e9:	pop    rbx
  4233ea:	pop    r12
  4233ec:	pop    r13
  4233ee:	pop    r14
  4233f0:	pop    r15
  4233f2:	jmp    41ba60 <__flatcc_error_report@@Base>
  4233f7:	mov    rax,QWORD PTR [rip+0x2dbfa]        # 450ff8 <stderr@GLIBC_2.2.5>
  4233fe:	mov    rcx,QWORD PTR [rax]
  423401:	lea    rdi,[rip+0xbc0f]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  423408:	mov    esi,0x22
  42340d:	mov    edx,0x1
  423412:	call   406210 <fwrite@plt>
  423417:	mov    edi,0x1
  42341c:	call   406200 <exit@plt>
  423421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42342b:	nop    DWORD PTR [rax+rax*1+0x0]
  423430:	push   rbp
  423431:	push   r15
  423433:	push   r14
  423435:	push   r13
  423437:	push   r12
  423439:	push   rbx
  42343a:	push   rax
  42343b:	mov    r14,QWORD PTR [rdi+0x48]
  42343f:	cmp    QWORD PTR [r14+0x20],0x28
  423444:	jne    4235c0 <__flatcc_fb_clear_parser@@Base+0x1160>
  42344a:	mov    r12,rdi
  42344d:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423452:	test   r14,r14
  423455:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0x1160>
  42345b:	mov    r13,QWORD PTR [r12+0x48]
  423460:	cmp    QWORD PTR [r13+0x20],0x9
  423465:	jne    423565 <__flatcc_fb_clear_parser@@Base+0x1105>
  42346b:	mov    rdi,r12
  42346e:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423473:	test   r13,r13
  423476:	je     423565 <__flatcc_fb_clear_parser@@Base+0x1105>
  42347c:	xor    ebp,ebp
  42347e:	lea    r15,[rip+0x23edf]        # 447364 <fb_schema_table_deleted@@Base+0xc34>
  423485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42348f:	nop
  423490:	mov    rbx,QWORD PTR [r12+0x60]
  423495:	lea    rax,[rbx+0x30]
  423499:	cmp    rax,QWORD PTR [r12+0x50]
  42349e:	jbe    4234de <__flatcc_fb_clear_parser@@Base+0x107e>
  4234a0:	mov    edi,0x10000
  4234a5:	mov    esi,0x1
  4234aa:	call   406140 <calloc@plt>
  4234af:	test   rax,rax
  4234b2:	je     42367b <__flatcc_fb_clear_parser@@Base+0x121b>
  4234b8:	mov    rcx,QWORD PTR [r12+0x58]
  4234bd:	mov    QWORD PTR [rax],rcx
  4234c0:	mov    QWORD PTR [r12+0x58],rax
  4234c5:	lea    rbx,[rax+0x10]
  4234c9:	mov    QWORD PTR [r12+0x60],rbx
  4234ce:	lea    rcx,[rax+0x10000]
  4234d5:	mov    QWORD PTR [r12+0x50],rcx
  4234da:	add    rax,0x40
  4234de:	mov    QWORD PTR [r12+0x60],rax
  4234e3:	mov    QWORD PTR [rbx],rbp
  4234e6:	mov    QWORD PTR [rbx+0x8],r13
  4234ea:	mov    rbp,QWORD PTR [r12+0x48]
  4234ef:	cmp    QWORD PTR [rbp+0x20],0x3a
  4234f4:	jne    423517 <__flatcc_fb_clear_parser@@Base+0x10b7>
  4234f6:	mov    rdi,r12
  4234f9:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4234fe:	test   rbp,rbp
  423501:	je     423517 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423503:	lea    rsi,[rbx+0x10]
  423507:	mov    edx,0x1
  42350c:	mov    rdi,r12
  42350f:	mov    rcx,r15
  423512:	call   4236b0 <__flatcc_fb_clear_parser@@Base+0x1250>
  423517:	cmp    DWORD PTR [r12+0xd0],0x9
  423520:	jg     4235d1 <__flatcc_fb_clear_parser@@Base+0x1171>
  423526:	mov    rbp,QWORD PTR [r12+0x48]
  42352b:	cmp    QWORD PTR [rbp+0x20],0x2c
  423530:	jne    423567 <__flatcc_fb_clear_parser@@Base+0x1107>
  423532:	mov    rdi,r12
  423535:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  42353a:	test   rbp,rbp
  42353d:	je     423567 <__flatcc_fb_clear_parser@@Base+0x1107>
  42353f:	mov    r13,QWORD PTR [r12+0x48]
  423544:	cmp    QWORD PTR [r13+0x20],0x9
  423549:	jne    4235d6 <__flatcc_fb_clear_parser@@Base+0x1176>
  42354f:	mov    rdi,r12
  423552:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423557:	mov    rbp,rbx
  42355a:	test   r13,r13
  42355d:	jne    423490 <__flatcc_fb_clear_parser@@Base+0x1030>
  423563:	jmp    423567 <__flatcc_fb_clear_parser@@Base+0x1107>
  423565:	xor    ebx,ebx
  423567:	mov    QWORD PTR [r12+0x40],0x0
  423570:	mov    rsi,QWORD PTR [r12+0x48]
  423575:	cmp    QWORD PTR [rsi+0x20],0x29
  42357a:	jne    4235a3 <__flatcc_fb_clear_parser@@Base+0x1143>
  42357c:	mov    rdi,r12
  42357f:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423584:	test   rbx,rbx
  423587:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0x1160>
  423589:	xor    ecx,ecx
  42358b:	nop    DWORD PTR [rax+rax*1+0x0]
  423590:	mov    rax,rbx
  423593:	mov    rbx,QWORD PTR [rbx]
  423596:	mov    QWORD PTR [rax],rcx
  423599:	mov    rcx,rax
  42359c:	test   rbx,rbx
  42359f:	jne    423590 <__flatcc_fb_clear_parser@@Base+0x1130>
  4235a1:	jmp    4235c2 <__flatcc_fb_clear_parser@@Base+0x1162>
  4235a3:	lea    rdx,[rip+0x23e07]        # 4473b1 <fb_schema_table_deleted@@Base+0xc81>
  4235aa:	xor    r8d,r8d
  4235ad:	xor    r9d,r9d
  4235b0:	mov    rdi,r12
  4235b3:	mov    rcx,r14
  4235b6:	call   41ba60 <__flatcc_error_report@@Base>
  4235bb:	test   rbx,rbx
  4235be:	jne    423589 <__flatcc_fb_clear_parser@@Base+0x1129>
  4235c0:	xor    eax,eax
  4235c2:	add    rsp,0x8
  4235c6:	pop    rbx
  4235c7:	pop    r12
  4235c9:	pop    r13
  4235cb:	pop    r14
  4235cd:	pop    r15
  4235cf:	pop    rbp
  4235d0:	ret    
  4235d1:	mov    rax,rbx
  4235d4:	jmp    4235c2 <__flatcc_fb_clear_parser@@Base+0x1162>
  4235d6:	test   r13,r13
  4235d9:	je     423616 <__flatcc_fb_clear_parser@@Base+0x11b6>
  4235db:	mov    rax,QWORD PTR [r13+0x0]
  4235df:	xor    r9d,r9d
  4235e2:	lea    rdx,[rip+0xbf56]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4235e9:	mov    rbp,rdx
  4235ec:	test   rax,rax
  4235ef:	je     4235f8 <__flatcc_fb_clear_parser@@Base+0x1198>
  4235f1:	mov    r9d,DWORD PTR [r13+0x8]
  4235f5:	mov    rbp,rax
  4235f8:	mov    rax,r12
  4235fb:	nop    DWORD PTR [rax+rax*1+0x0]
  423600:	cmp    QWORD PTR [rax+0x28],r13
  423604:	ja     42360c <__flatcc_fb_clear_parser@@Base+0x11ac>
  423606:	cmp    QWORD PTR [rax+0x30],r13
  42360a:	ja     42363c <__flatcc_fb_clear_parser@@Base+0x11dc>
  42360c:	mov    rax,QWORD PTR [rax]
  42360f:	test   rax,rax
  423612:	jne    423600 <__flatcc_fb_clear_parser@@Base+0x11a0>
  423614:	jmp    423643 <__flatcc_fb_clear_parser@@Base+0x11e3>
  423616:	lea    rsi,[rip+0x23605]        # 446c22 <fb_schema_table_deleted@@Base+0x4f2>
  42361d:	lea    rdx,[rip+0x23d60]        # 447384 <fb_schema_table_deleted@@Base+0xc54>
  423624:	xor    eax,eax
  423626:	mov    rdi,r12
  423629:	call   41b940 <__flatcc_fb_print_error@@Base>
  42362e:	add    DWORD PTR [r12+0xd0],0x1
  423637:	jmp    423567 <__flatcc_fb_clear_parser@@Base+0x1107>
  42363c:	mov    rdx,QWORD PTR [rax+0x318]
  423643:	mov    rcx,QWORD PTR [r13+0x10]
  423647:	mov    r8,QWORD PTR [r13+0x18]
  42364b:	lea    r10,[rip+0x23d32]        # 447384 <fb_schema_table_deleted@@Base+0xc54>
  423652:	lea    rsi,[rip+0x23577]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  423659:	mov    eax,0x0
  42365e:	mov    rdi,r12
  423661:	push   r10
  423663:	push   rbp
  423664:	call   41b940 <__flatcc_fb_print_error@@Base>
  423669:	add    rsp,0x10
  42366d:	add    DWORD PTR [r12+0xd0],0x1
  423676:	jmp    423567 <__flatcc_fb_clear_parser@@Base+0x1107>
  42367b:	mov    rax,QWORD PTR [rip+0x2d976]        # 450ff8 <stderr@GLIBC_2.2.5>
  423682:	mov    rcx,QWORD PTR [rax]
  423685:	lea    rdi,[rip+0xb98b]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  42368c:	mov    esi,0x22
  423691:	mov    edx,0x1
  423696:	call   406210 <fwrite@plt>
  42369b:	mov    edi,0x1
  4236a0:	call   406200 <exit@plt>
  4236a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4236af:	nop
  4236b0:	push   rbp
  4236b1:	push   r15
  4236b3:	push   r14
  4236b5:	push   r13
  4236b7:	push   r12
  4236b9:	push   rbx
  4236ba:	push   rax
  4236bb:	mov    rbx,rcx
  4236be:	mov    ebp,edx
  4236c0:	mov    r15,rsi
  4236c3:	mov    r14,rdi
  4236c6:	mov    r13,QWORD PTR [rdi+0x48]
  4236ca:	mov    rax,QWORD PTR [r13+0x20]
  4236ce:	cmp    rax,0x2d
  4236d2:	jne    4236e7 <__flatcc_fb_clear_parser@@Base+0x1287>
  4236d4:	mov    rdi,r14
  4236d7:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  4236dc:	mov    r12,QWORD PTR [r14+0x48]
  4236e0:	mov    rax,QWORD PTR [r12+0x20]
  4236e5:	jmp    4236ed <__flatcc_fb_clear_parser@@Base+0x128d>
  4236e7:	mov    r12,r13
  4236ea:	xor    r13d,r13d
  4236ed:	lea    rcx,[rax-0x9]
  4236f1:	cmp    rcx,0xa
  4236f5:	ja     423735 <__flatcc_fb_clear_parser@@Base+0x12d5>
  4236f7:	lea    rax,[rip+0x23396]        # 446a94 <fb_schema_table_deleted@@Base+0x364>
  4236fe:	movsxd rcx,DWORD PTR [rax+rcx*4]
  423702:	add    rcx,rax
  423705:	jmp    rcx
  423707:	mov    rdi,r14
  42370a:	mov    rsi,r15
  42370d:	call   4232b0 <__flatcc_fb_clear_parser@@Base+0xe50>
  423712:	mov    WORD PTR [r15+0x10],0xd
  423719:	test   r13,r13
  42371c:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x1544>
  423722:	mov    WORD PTR [r15+0x10],0x1
  423729:	lea    rdx,[rip+0x23cc2]        # 4473f2 <fb_schema_table_deleted@@Base+0xcc2>
  423730:	jmp    423983 <__flatcc_fb_clear_parser@@Base+0x1523>
  423735:	cmp    rax,0xfffffffffffffc24
  42373b:	je     423957 <__flatcc_fb_clear_parser@@Base+0x14f7>
  423741:	cmp    rax,0xfffffffffffffc26
  423747:	jne    423944 <__flatcc_fb_clear_parser@@Base+0x14e4>
  42374d:	mov    BYTE PTR [r15],0x0
  423751:	jmp    42395b <__flatcc_fb_clear_parser@@Base+0x14fb>
  423756:	mov    WORD PTR [r15+0x10],0x5
  42375d:	mov    rax,QWORD PTR [r12+0x8]
  423762:	test   eax,eax
  423764:	je     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  42376a:	mov    rcx,QWORD PTR [r12]
  42376e:	movsxd rbx,eax
  423771:	mov    r9b,BYTE PTR [rcx]
  423774:	xor    esi,esi
  423776:	cmp    r9b,0x2d
  42377a:	sete   sil
  42377e:	cmp    rbx,rsi
  423781:	je     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  423787:	lea    rbp,[rcx+rbx*1]
  42378b:	lea    r8,[rcx+rsi*1]
  42378f:	xor    edx,edx
  423791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42379b:	nop    DWORD PTR [rax+rax*1+0x0]
  4237a0:	movsx  rdi,BYTE PTR [rcx+rsi*1]
  4237a5:	mov    eax,edi
  4237a7:	add    al,0xd0
  4237a9:	cmp    al,0x9
  4237ab:	ja     423a42 <__flatcc_fb_clear_parser@@Base+0x15e2>
  4237b1:	lea    rax,[rdx+rdx*4]
  4237b5:	lea    rdi,[rdi+rax*2]
  4237b9:	add    rdi,0xffffffffffffffd0
  4237bd:	cmp    rdx,rdi
  4237c0:	ja     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  4237c6:	add    rsi,0x1
  4237ca:	mov    rdx,rdi
  4237cd:	cmp    rbx,rsi
  4237d0:	jne    4237a0 <__flatcc_fb_clear_parser@@Base+0x1340>
  4237d2:	xor    ebx,ebx
  4237d4:	cmp    rbp,rcx
  4237d7:	jne    423a52 <__flatcc_fb_clear_parser@@Base+0x15f2>
  4237dd:	jmp    423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  4237e2:	mov    WORD PTR [r15+0x10],0x3
  4237e9:	mov    rdi,QWORD PTR [r12]
  4237ed:	mov    rsi,rsp
  4237f0:	call   406090 <strtod@plt>
  4237f5:	vmovsd QWORD PTR [r15],xmm0
  4237fa:	mov    rbx,QWORD PTR [r12]
  4237fe:	mov    r9,QWORD PTR [r12+0x8]
  423803:	lea    rax,[rbx+r9*1]
  423807:	cmp    QWORD PTR [rsp],rax
  42380b:	je     4239b3 <__flatcc_fb_clear_parser@@Base+0x1553>
  423811:	mov    WORD PTR [r15+0x10],0x1
  423818:	xor    ebp,ebp
  42381a:	test   rbx,rbx
  42381d:	lea    rdx,[rip+0xbd1b]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  423824:	cmove  rbx,rdx
  423828:	cmovne ebp,r9d
  42382c:	mov    rax,r14
  42382f:	nop
  423830:	cmp    QWORD PTR [rax+0x28],r12
  423834:	ja     423840 <__flatcc_fb_clear_parser@@Base+0x13e0>
  423836:	cmp    QWORD PTR [rax+0x30],r12
  42383a:	ja     4239ed <__flatcc_fb_clear_parser@@Base+0x158d>
  423840:	mov    rax,QWORD PTR [rax]
  423843:	test   rax,rax
  423846:	jne    423830 <__flatcc_fb_clear_parser@@Base+0x13d0>
  423848:	jmp    4239f4 <__flatcc_fb_clear_parser@@Base+0x1594>
  42384d:	mov    WORD PTR [r15+0x10],0x5
  423854:	mov    rax,QWORD PTR [r12+0x8]
  423859:	test   eax,eax
  42385b:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423861:	mov    rdx,QWORD PTR [r12]
  423865:	movsxd r10,eax
  423868:	add    r10,rdx
  42386b:	mov    r8b,BYTE PTR [rdx]
  42386e:	xor    edi,edi
  423870:	cmp    r8b,0x2d
  423874:	sete   dil
  423878:	lea    rsi,[rdx+rdi*1]
  42387c:	mov    rax,r10
  42387f:	sub    rax,rsi
  423882:	cmp    rax,0x2
  423886:	jl     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  42388c:	cmp    BYTE PTR [rsi],0x30
  42388f:	jne    423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423895:	mov    al,BYTE PTR [rsi+0x1]
  423898:	or     al,0x20
  42389a:	cmp    al,0x78
  42389c:	jne    423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  4238a2:	lea    rax,[rsi+0x2]
  4238a6:	mov    rbp,r10
  4238a9:	sub    rbp,rax
  4238ac:	lea    r9,[rsi+0x12]
  4238b0:	cmp    rbp,0x10
  4238b4:	cmovle r9,r10
  4238b8:	cmp    rax,r9
  4238bb:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  4238c1:	neg    rdi
  4238c4:	sub    rdi,rdx
  4238c7:	add    rdi,r9
  4238ca:	xor    edx,edx
  4238cc:	mov    ebx,0x2
  4238d1:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  4238d5:	mov    eax,ecx
  4238d7:	add    al,0xd0
  4238d9:	mov    rbp,0xffffffffffffffd0
  4238e0:	cmp    al,0xa
  4238e2:	jb     4238fa <__flatcc_fb_clear_parser@@Base+0x149a>
  4238e4:	or     cl,0x20
  4238e7:	mov    eax,ecx
  4238e9:	add    al,0x9f
  4238eb:	mov    rbp,0xffffffffffffffa9
  4238f2:	cmp    al,0x5
  4238f4:	ja     423ae0 <__flatcc_fb_clear_parser@@Base+0x1680>
  4238fa:	shl    rdx,0x4
  4238fe:	mov    rax,rdx
  423901:	add    rax,rbp
  423904:	movzx  edx,cl
  423907:	add    rdx,rax
  42390a:	add    rbx,0x1
  42390e:	cmp    rdi,rbx
  423911:	jne    4238d1 <__flatcc_fb_clear_parser@@Base+0x1471>
  423913:	mov    al,0x1
  423915:	cmp    rbx,0x2
  423919:	jne    423aee <__flatcc_fb_clear_parser@@Base+0x168e>
  42391f:	jmp    423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423924:	mov    rdi,r14
  423927:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  42392c:	mov    rdi,r14
  42392f:	mov    rsi,r15
  423932:	call   4225a0 <__flatcc_fb_clear_parser@@Base+0x140>
  423937:	test   bpl,0x1
  42393b:	jne    423970 <__flatcc_fb_clear_parser@@Base+0x1510>
  42393d:	mov    WORD PTR [r15+0x10],0x1
  423944:	xor    ecx,ecx
  423946:	xor    r8d,r8d
  423949:	xor    r9d,r9d
  42394c:	mov    rdi,r14
  42394f:	mov    rsi,r12
  423952:	mov    rdx,rbx
  423955:	jmp    423991 <__flatcc_fb_clear_parser@@Base+0x1531>
  423957:	mov    BYTE PTR [r15],0x1
  42395b:	mov    WORD PTR [r15+0x10],0x6
  423962:	test   r13,r13
  423965:	jne    423b55 <__flatcc_fb_clear_parser@@Base+0x16f5>
  42396b:	jmp    423b80 <__flatcc_fb_clear_parser@@Base+0x1720>
  423970:	test   r13,r13
  423973:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x1544>
  423975:	mov    WORD PTR [r15+0x10],0x1
  42397c:	lea    rdx,[rip+0x23a4d]        # 4473d0 <fb_schema_table_deleted@@Base+0xca0>
  423983:	xor    ecx,ecx
  423985:	xor    r8d,r8d
  423988:	xor    r9d,r9d
  42398b:	mov    rdi,r14
  42398e:	mov    rsi,r12
  423991:	add    rsp,0x8
  423995:	pop    rbx
  423996:	pop    r12
  423998:	pop    r13
  42399a:	pop    r14
  42399c:	pop    r15
  42399e:	pop    rbp
  42399f:	jmp    41ba60 <__flatcc_error_report@@Base>
  4239a4:	add    rsp,0x8
  4239a8:	pop    rbx
  4239a9:	pop    r12
  4239ab:	pop    r13
  4239ad:	pop    r14
  4239af:	pop    r15
  4239b1:	pop    rbp
  4239b2:	ret    
  4239b3:	cmp    BYTE PTR [rbx],0x2e
  4239b6:	jne    423a1e <__flatcc_fb_clear_parser@@Base+0x15be>
  4239b8:	mov    WORD PTR [r15+0x10],0x1
  4239bf:	lea    rdx,[rip+0xbb79]        # 42f53f <_IO_stdin_used@@Base+0x153f>
  4239c6:	mov    rax,r14
  4239c9:	nop    DWORD PTR [rax+0x0]
  4239d0:	cmp    QWORD PTR [rax+0x28],r12
  4239d4:	ja     4239e0 <__flatcc_fb_clear_parser@@Base+0x1580>
  4239d6:	cmp    QWORD PTR [rax+0x30],r12
  4239da:	ja     423a9c <__flatcc_fb_clear_parser@@Base+0x163c>
  4239e0:	mov    rax,QWORD PTR [rax]
  4239e3:	test   rax,rax
  4239e6:	jne    4239d0 <__flatcc_fb_clear_parser@@Base+0x1570>
  4239e8:	jmp    423aa3 <__flatcc_fb_clear_parser@@Base+0x1643>
  4239ed:	mov    rdx,QWORD PTR [rax+0x318]
  4239f4:	mov    rcx,QWORD PTR [r12+0x10]
  4239f9:	mov    r8,QWORD PTR [r12+0x18]
  4239fe:	lea    r10,[rip+0x23a60]        # 447465 <fb_schema_table_deleted@@Base+0xd35>
  423a05:	lea    rsi,[rip+0x231c4]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  423a0c:	mov    eax,0x0
  423a11:	mov    rdi,r14
  423a14:	mov    r9d,ebp
  423a17:	push   r10
  423a19:	jmp    423ac4 <__flatcc_fb_clear_parser@@Base+0x1664>
  423a1e:	test   r13,r13
  423a21:	je     423ad6 <__flatcc_fb_clear_parser@@Base+0x1676>
  423a27:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x23191]        # 446bc0 <fb_schema_table_deleted@@Base+0x490>
  423a2f:	vmovlps QWORD PTR [r15],xmm0
  423a34:	test   r13,r13
  423a37:	jne    423b55 <__flatcc_fb_clear_parser@@Base+0x16f5>
  423a3d:	jmp    423b80 <__flatcc_fb_clear_parser@@Base+0x1720>
  423a42:	add    rsi,rcx
  423a45:	mov    bl,0x1
  423a47:	mov    rdi,rdx
  423a4a:	mov    rbp,rsi
  423a4d:	cmp    rbp,rcx
  423a50:	je     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  423a52:	cmp    rbp,r8
  423a55:	je     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  423a57:	test   bl,bl
  423a59:	je     423a7c <__flatcc_fb_clear_parser@@Base+0x161c>
  423a5b:	movsx  ecx,BYTE PTR [rbp+0x0]
  423a5f:	lea    edx,[rcx-0x45]
  423a62:	cmp    edx,0x2b
  423a65:	ja     423a77 <__flatcc_fb_clear_parser@@Base+0x1617>
  423a67:	movabs rax,0x80100000801
  423a71:	bt     rax,rdx
  423a75:	jb     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  423a77:	cmp    ecx,0x2e
  423a7a:	je     423a89 <__flatcc_fb_clear_parser@@Base+0x1629>
  423a7c:	mov    QWORD PTR [r15],rdi
  423a7f:	cmp    r9b,0x2d
  423a83:	jne    423b46 <__flatcc_fb_clear_parser@@Base+0x16e6>
  423a89:	mov    WORD PTR [r15+0x10],0x1
  423a90:	lea    rdx,[rip+0x239b7]        # 44744e <fb_schema_table_deleted@@Base+0xd1e>
  423a97:	jmp    423b33 <__flatcc_fb_clear_parser@@Base+0x16d3>
  423a9c:	mov    rdx,QWORD PTR [rax+0x318]
  423aa3:	mov    rcx,QWORD PTR [r12+0x10]
  423aa8:	mov    r8,QWORD PTR [r12+0x18]
  423aad:	lea    rbp,[rip+0x239c6]        # 44747a <fb_schema_table_deleted@@Base+0xd4a>
  423ab4:	lea    rsi,[rip+0x23115]        # 446bd0 <fb_schema_table_deleted@@Base+0x4a0>
  423abb:	mov    eax,0x0
  423ac0:	mov    rdi,r14
  423ac3:	push   rbp
  423ac4:	push   rbx
  423ac5:	call   41b940 <__flatcc_fb_print_error@@Base>
  423aca:	add    rsp,0x10
  423ace:	add    DWORD PTR [r14+0xd0],0x1
  423ad6:	test   r13,r13
  423ad9:	jne    423b55 <__flatcc_fb_clear_parser@@Base+0x16f5>
  423adb:	jmp    423b80 <__flatcc_fb_clear_parser@@Base+0x1720>
  423ae0:	add    rsi,rbx
  423ae3:	xor    eax,eax
  423ae5:	mov    r9,rsi
  423ae8:	cmp    rbx,0x2
  423aec:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423aee:	cmp    r9,r10
  423af1:	je     423b1c <__flatcc_fb_clear_parser@@Base+0x16bc>
  423af3:	mov    cl,BYTE PTR [r9]
  423af6:	test   al,al
  423af8:	je     423b0d <__flatcc_fb_clear_parser@@Base+0x16ad>
  423afa:	mov    eax,ecx
  423afc:	add    al,0xd0
  423afe:	cmp    al,0xa
  423b00:	jb     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423b02:	or     cl,0x20
  423b05:	mov    eax,ecx
  423b07:	add    al,0x9f
  423b09:	cmp    al,0x6
  423b0b:	jb     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423b0d:	cmp    cl,0x2e
  423b10:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423b12:	cmp    cl,0x50
  423b15:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423b17:	cmp    cl,0x70
  423b1a:	je     423b25 <__flatcc_fb_clear_parser@@Base+0x16c5>
  423b1c:	mov    QWORD PTR [r15],rdx
  423b1f:	cmp    r8b,0x2d
  423b23:	jne    423b46 <__flatcc_fb_clear_parser@@Base+0x16e6>
  423b25:	mov    WORD PTR [r15+0x10],0x1
  423b2c:	lea    rdx,[rip+0x23900]        # 447433 <fb_schema_table_deleted@@Base+0xd03>
  423b33:	xor    ecx,ecx
  423b35:	xor    r8d,r8d
  423b38:	xor    r9d,r9d
  423b3b:	mov    rdi,r14
  423b3e:	mov    rsi,r12
  423b41:	call   41ba60 <__flatcc_error_report@@Base>
  423b46:	test   r13,r13
  423b49:	je     423b80 <__flatcc_fb_clear_parser@@Base+0x1720>
  423b4b:	neg    QWORD PTR [r15]
  423b4e:	mov    WORD PTR [r15+0x10],0x4
  423b55:	movzx  eax,WORD PTR [r15+0x10]
  423b5a:	cmp    eax,0x6
  423b5d:	jne    423b80 <__flatcc_fb_clear_parser@@Base+0x1720>
  423b5f:	mov    WORD PTR [r15+0x10],0x1
  423b66:	lea    rdx,[rip+0x238a3]        # 447410 <fb_schema_table_deleted@@Base+0xce0>
  423b6d:	xor    ecx,ecx
  423b6f:	xor    r8d,r8d
  423b72:	xor    r9d,r9d
  423b75:	mov    rdi,r14
  423b78:	mov    rsi,r12
  423b7b:	call   41ba60 <__flatcc_error_report@@Base>
  423b80:	mov    rdi,r14
  423b83:	add    rsp,0x8
  423b87:	pop    rbx
  423b88:	pop    r12
  423b8a:	pop    r13
  423b8c:	pop    r14
  423b8e:	pop    r15
  423b90:	pop    rbp
  423b91:	jmp    422370 <__flatcc_fb_parse@@Base+0x6300>
  423b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ba0:	push   rbp
  423ba1:	push   r15
  423ba3:	push   r14
  423ba5:	push   r12
  423ba7:	push   rbx
  423ba8:	mov    r15,rsi
  423bab:	mov    r12,rdi
  423bae:	mov    r14,QWORD PTR [rdi+0x48]
  423bb2:	mov    WORD PTR [rsi+0x10],0x1
  423bb8:	xor    ebp,ebp
  423bba:	cmp    QWORD PTR [r14+0x20],0x5b
  423bbf:	jne    423c0b <__flatcc_fb_clear_parser@@Base+0x17ab>
  423bc1:	xor    ebp,ebp
  423bc3:	mov    rbx,r14
  423bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423bd0:	mov    rdi,r12
  423bd3:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423bd8:	test   rbx,rbx
  423bdb:	je     423bec <__flatcc_fb_clear_parser@@Base+0x178c>
  423bdd:	add    ebp,0x1
  423be0:	mov    rbx,QWORD PTR [r12+0x48]
  423be5:	cmp    QWORD PTR [rbx+0x20],0x5b
  423bea:	je     423bd0 <__flatcc_fb_clear_parser@@Base+0x1770>
  423bec:	cmp    ebp,0x2
  423bef:	jb     423c0b <__flatcc_fb_clear_parser@@Base+0x17ab>
  423bf1:	lea    rdx,[rip+0x2398c]        # 447584 <fb_schema_table_deleted@@Base+0xe54>
  423bf8:	xor    ecx,ecx
  423bfa:	xor    r8d,r8d
  423bfd:	xor    r9d,r9d
  423c00:	mov    rdi,r12
  423c03:	mov    rsi,r14
  423c06:	call   41ba60 <__flatcc_error_report@@Base>
  423c0b:	mov    rcx,QWORD PTR [r12+0x48]
  423c10:	mov    rax,QWORD PTR [rcx+0x20]
  423c14:	lea    rdx,[rax+0x3e7]
  423c1b:	cmp    rdx,0x1b
  423c1f:	ja     423d17 <__flatcc_fb_clear_parser@@Base+0x18b7>
  423c25:	mov    esi,0x97ed7fb
  423c2a:	bt     rsi,rdx
  423c2e:	jae    423d02 <__flatcc_fb_clear_parser@@Base+0x18a2>
  423c34:	mov    QWORD PTR [r15],rcx
  423c37:	cmp    ebp,0x1
  423c3a:	mov    ax,0x7
  423c3e:	adc    ax,0x0
  423c42:	mov    WORD PTR [r15+0x10],ax
  423c47:	mov    rdi,r12
  423c4a:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423c4f:	neg    ebp
  423c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c60:	mov    rbx,QWORD PTR [r12+0x48]
  423c65:	cmp    QWORD PTR [rbx+0x20],0x5d
  423c6a:	jne    423c83 <__flatcc_fb_clear_parser@@Base+0x1823>
  423c6c:	mov    rdi,r12
  423c6f:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423c74:	test   rbx,rbx
  423c77:	je     423c83 <__flatcc_fb_clear_parser@@Base+0x1823>
  423c79:	add    ebp,0x1
  423c7c:	cmp    ebp,0x1
  423c7f:	jne    423c60 <__flatcc_fb_clear_parser@@Base+0x1800>
  423c81:	jmp    423c87 <__flatcc_fb_clear_parser@@Base+0x1827>
  423c83:	test   ebp,ebp
  423c85:	je     423ca1 <__flatcc_fb_clear_parser@@Base+0x1841>
  423c87:	lea    rdx,[rip+0x23951]        # 4475df <fb_schema_table_deleted@@Base+0xeaf>
  423c8e:	xor    esi,esi
  423c90:	xor    r8d,r8d
  423c93:	xor    r9d,r9d
  423c96:	mov    rdi,r12
  423c99:	mov    rcx,r14
  423c9c:	call   41ba60 <__flatcc_error_report@@Base>
  423ca1:	mov    r15,QWORD PTR [r12+0x48]
  423ca6:	cmp    QWORD PTR [r15+0x20],0x5d
  423cab:	jne    423cf9 <__flatcc_fb_clear_parser@@Base+0x1899>
  423cad:	mov    rdi,r12
  423cb0:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423cb5:	test   r15,r15
  423cb8:	je     423cf9 <__flatcc_fb_clear_parser@@Base+0x1899>
  423cba:	lea    rdx,[rip+0x2393f]        # 447600 <fb_schema_table_deleted@@Base+0xed0>
  423cc1:	xor    r8d,r8d
  423cc4:	xor    r9d,r9d
  423cc7:	mov    rdi,r12
  423cca:	mov    rsi,r15
  423ccd:	mov    rcx,r14
  423cd0:	call   41ba60 <__flatcc_error_report@@Base>
  423cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cdf:	nop
  423ce0:	mov    rbx,QWORD PTR [r12+0x48]
  423ce5:	cmp    QWORD PTR [rbx+0x20],0x5d
  423cea:	jne    423cf9 <__flatcc_fb_clear_parser@@Base+0x1899>
  423cec:	mov    rdi,r12
  423cef:	call   422370 <__flatcc_fb_parse@@Base+0x6300>
  423cf4:	test   rbx,rbx
  423cf7:	jne    423ce0 <__flatcc_fb_clear_parser@@Base+0x1880>
  423cf9:	pop    rbx
  423cfa:	pop    r12
  423cfc:	pop    r14
  423cfe:	pop    r15
  423d00:	pop    rbp
  423d01:	ret    
  423d02:	cmp    rdx,0x19
  423d06:	jne    423d17 <__flatcc_fb_clear_parser@@Base+0x18b7>
  423d08:	mov    QWORD PTR [r15],rcx
  423d0b:	cmp    ebp,0x1
  423d0e:	mov    ax,0x9
  423d12:	jmp    423c3e <__flatcc_fb_clear_parser@@Base+0x17de>
  423d17:	cmp    rax,0x9
  423d1b:	je     423d2c <__flatcc_fb_clear_parser@@Base+0x18cc>
  423d1d:	cmp    rax,0x5d
  423d21:	jne    423d4c <__flatcc_fb_clear_parser@@Base+0x18ec>
  423d23:	lea    rdx,[rip+0x23882]        # 4475ac <fb_schema_table_deleted@@Base+0xe7c>
  423d2a:	jmp    423d53 <__flatcc_fb_clear_parser@@Base+0x18f3>
  423d2c:	mov    rdi,r12
  423d2f:	mov    rsi,r15
  423d32:	call   4232b0 <__flatcc_fb_clear_parser@@Base+0xe50>
  423d37:	cmp    ebp,0x1
  423d3a:	mov    ax,0xb
  423d3e:	adc    ax,0x0
  423d42:	mov    WORD PTR [r15+0x10],ax
  423d47:	jmp    423c4f <__flatcc_fb_clear_parser@@Base+0x17ef>
  423d4c:	lea    rdx,[rip+0x23875]        # 4475c8 <fb_schema_table_deleted@@Base+0xe98>
  423d53:	xor    esi,esi
  423d55:	xor    ecx,ecx
  423d57:	xor    r8d,r8d
  423d5a:	xor    r9d,r9d
  423d5d:	mov    rdi,r12
  423d60:	call   41ba60 <__flatcc_error_report@@Base>
  423d65:	jmp    423c4f <__flatcc_fb_clear_parser@@Base+0x17ef>
  423d6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000423d70 <__flatcc_fb_build_schema@@Base>:
  423d70:	push   rbp
  423d71:	mov    rbp,rsp
  423d74:	push   r15
  423d76:	push   r14
  423d78:	push   r13
  423d7a:	push   r12
  423d7c:	push   rbx
  423d7d:	and    rsp,0xffffffffffffffe0
  423d81:	sub    rsp,0x140
  423d88:	mov    r12,rdi
  423d8b:	lea    r14,[rdi+0x1f8]
  423d92:	lea    rdi,[rdi+0x320]
  423d99:	mov    QWORD PTR [rsp+0x58],rdi
  423d9e:	mov    rsi,r14
  423da1:	call   4190e0 <ptr_set_find_item@@Base>
  423da6:	test   rax,rax
  423da9:	je     425b56 <__flatcc_fb_build_schema@@Base+0x1de6>
  423daf:	mov    r15,QWORD PTR [r12+0x238]
  423db7:	test   r15,r15
  423dba:	je     42401c <__flatcc_fb_build_schema@@Base+0x2ac>
  423dc0:	mov    r13d,0x811c9dc5
  423dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423dd0:	movzx  eax,WORD PTR [r15+0x10]
  423dd5:	cmp    eax,0x4
  423dd8:	ja     424010 <__flatcc_fb_build_schema@@Base+0x2a0>
  423dde:	mov    rdi,QWORD PTR [r15+0x18]
  423de2:	mov    eax,0x811c9dc5
  423de7:	test   rdi,rdi
  423dea:	je     423ef5 <__flatcc_fb_build_schema@@Base+0x185>
  423df0:	mov    r8,QWORD PTR [rdi]
  423df3:	test   r8,r8
  423df6:	je     423ef5 <__flatcc_fb_build_schema@@Base+0x185>
  423dfc:	mov    eax,0x811c9dc5
  423e01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  423e10:	mov    rdx,QWORD PTR [r8+0x8]
  423e14:	mov    r10,QWORD PTR [rdx+0x8]
  423e18:	test   r10,r10
  423e1b:	je     423ee0 <__flatcc_fb_build_schema@@Base+0x170>
  423e21:	mov    rsi,QWORD PTR [rdx]
  423e24:	lea    r9,[r10-0x1]
  423e28:	mov    rdx,r10
  423e2b:	and    rdx,0x7
  423e2f:	je     423e5b <__flatcc_fb_build_schema@@Base+0xeb>
  423e31:	xor    ebx,ebx
  423e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e3d:	nop    DWORD PTR [rax]
  423e40:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  423e44:	xor    ecx,eax
  423e46:	imul   eax,ecx,0x1000193
  423e4c:	add    rbx,0x1
  423e50:	cmp    rdx,rbx
  423e53:	jne    423e40 <__flatcc_fb_build_schema@@Base+0xd0>
  423e55:	sub    r10,rbx
  423e58:	add    rsi,rbx
  423e5b:	cmp    r9,0x7
  423e5f:	jb     423ee0 <__flatcc_fb_build_schema@@Base+0x170>
  423e61:	xor    ebx,ebx
  423e63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e6d:	nop    DWORD PTR [rax]
  423e70:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  423e74:	xor    ecx,eax
  423e76:	imul   eax,ecx,0x1000193
  423e7c:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  423e81:	xor    ecx,eax
  423e83:	imul   eax,ecx,0x1000193
  423e89:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x2]
  423e8e:	xor    ecx,eax
  423e90:	imul   eax,ecx,0x1000193
  423e96:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x3]
  423e9b:	xor    ecx,eax
  423e9d:	imul   eax,ecx,0x1000193
  423ea3:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x4]
  423ea8:	xor    ecx,eax
  423eaa:	imul   eax,ecx,0x1000193
  423eb0:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x5]
  423eb5:	xor    ecx,eax
  423eb7:	imul   eax,ecx,0x1000193
  423ebd:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x6]
  423ec2:	xor    ecx,eax
  423ec4:	imul   eax,ecx,0x1000193
  423eca:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x7]
  423ecf:	xor    ecx,eax
  423ed1:	imul   eax,ecx,0x1000193
  423ed7:	add    rbx,0x8
  423edb:	cmp    r10,rbx
  423ede:	jne    423e70 <__flatcc_fb_build_schema@@Base+0x100>
  423ee0:	xor    eax,0x2e
  423ee3:	imul   eax,eax,0x1000193
  423ee9:	mov    r8,QWORD PTR [r8]
  423eec:	test   r8,r8
  423eef:	jne    423e10 <__flatcc_fb_build_schema@@Base+0xa0>
  423ef5:	mov    rcx,QWORD PTR [r15+0x8]
  423ef9:	mov    r9,QWORD PTR [rcx+0x8]
  423efd:	test   r9,r9
  423f00:	je     423fc0 <__flatcc_fb_build_schema@@Base+0x250>
  423f06:	mov    rdx,QWORD PTR [rcx]
  423f09:	lea    r8,[r9-0x1]
  423f0d:	mov    rcx,r9
  423f10:	and    rcx,0x7
  423f14:	je     423f3b <__flatcc_fb_build_schema@@Base+0x1cb>
  423f16:	xor    esi,esi
  423f18:	nop    DWORD PTR [rax+rax*1+0x0]
  423f20:	movzx  ebx,BYTE PTR [rdx+rsi*1]
  423f24:	xor    ebx,eax
  423f26:	imul   eax,ebx,0x1000193
  423f2c:	add    rsi,0x1
  423f30:	cmp    rcx,rsi
  423f33:	jne    423f20 <__flatcc_fb_build_schema@@Base+0x1b0>
  423f35:	sub    r9,rsi
  423f38:	add    rdx,rsi
  423f3b:	cmp    r8,0x7
  423f3f:	jb     423fc0 <__flatcc_fb_build_schema@@Base+0x250>
  423f41:	xor    esi,esi
  423f43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f4d:	nop    DWORD PTR [rax]
  423f50:	movzx  ecx,BYTE PTR [rdx+rsi*1]
  423f54:	xor    ecx,eax
  423f56:	imul   eax,ecx,0x1000193
  423f5c:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x1]
  423f61:	xor    ecx,eax
  423f63:	imul   eax,ecx,0x1000193
  423f69:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x2]
  423f6e:	xor    ecx,eax
  423f70:	imul   eax,ecx,0x1000193
  423f76:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x3]
  423f7b:	xor    ecx,eax
  423f7d:	imul   eax,ecx,0x1000193
  423f83:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x4]
  423f88:	xor    ecx,eax
  423f8a:	imul   eax,ecx,0x1000193
  423f90:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x5]
  423f95:	xor    ecx,eax
  423f97:	imul   eax,ecx,0x1000193
  423f9d:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x6]
  423fa2:	xor    ecx,eax
  423fa4:	imul   eax,ecx,0x1000193
  423faa:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x7]
  423faf:	xor    ecx,eax
  423fb1:	imul   eax,ecx,0x1000193
  423fb7:	add    rsi,0x8
  423fbb:	cmp    r9,rsi
  423fbe:	jne    423f50 <__flatcc_fb_build_schema@@Base+0x1e0>
  423fc0:	test   eax,eax
  423fc2:	cmove  eax,r13d
  423fc6:	mov    DWORD PTR [r15+0xa0],eax
  423fcd:	mov    QWORD PTR [r15+0x20],r14
  423fd1:	test   rdi,rdi
  423fd4:	je     424010 <__flatcc_fb_build_schema@@Base+0x2a0>
  423fd6:	add    rdi,0x8
  423fda:	mov    edx,0x1
  423fdf:	mov    rsi,r15
  423fe2:	call   4196e0 <fb_symbol_table_insert_item@@Base>
  423fe7:	test   rax,rax
  423fea:	je     424010 <__flatcc_fb_build_schema@@Base+0x2a0>
  423fec:	mov    rsi,QWORD PTR [r15+0x8]
  423ff0:	mov    rcx,QWORD PTR [rax+0x8]
  423ff4:	xor    r8d,r8d
  423ff7:	xor    r9d,r9d
  423ffa:	mov    rdi,r12
  423ffd:	lea    rdx,[rip+0x23a51]        # 447a55 <fb_schema_table_deleted@@Base+0x1325>
  424004:	call   41ba60 <__flatcc_error_report@@Base>
  424009:	nop    DWORD PTR [rax+0x0]
  424010:	mov    r15,QWORD PTR [r15]
  424013:	test   r15,r15
  424016:	jne    423dd0 <__flatcc_fb_build_schema@@Base+0x60>
  42401c:	mov    rbx,QWORD PTR [r12+0x200]
  424024:	test   rbx,rbx
  424027:	je     42406d <__flatcc_fb_build_schema@@Base+0x2fd>
  424029:	lea    r14,[rip+0x23a41]        # 447a71 <fb_schema_table_deleted@@Base+0x1341>
  424030:	mov    rdi,QWORD PTR [r12+0x260]
  424038:	add    rdi,0x20
  42403c:	mov    edx,0x1
  424041:	mov    rsi,rbx
  424044:	call   42caf0 <fb_name_table_insert_item@@Base>
  424049:	test   rax,rax
  42404c:	je     424065 <__flatcc_fb_build_schema@@Base+0x2f5>
  42404e:	mov    r8,QWORD PTR [rbx+0x8]
  424052:	mov    r9d,DWORD PTR [rbx+0x10]
  424056:	xor    esi,esi
  424058:	xor    ecx,ecx
  42405a:	mov    rdi,r12
  42405d:	mov    rdx,r14
  424060:	call   41ba60 <__flatcc_error_report@@Base>
  424065:	mov    rbx,QWORD PTR [rbx]
  424068:	test   rbx,rbx
  42406b:	jne    424030 <__flatcc_fb_build_schema@@Base+0x2c0>
  42406d:	lea    r14,[rip+0x2cd2c]        # 450da0 <fb_value_set_deleted@@Base+0x6340>
  424074:	xor    r15d,r15d
  424077:	nop    WORD PTR [rax+rax*1+0x0]
  424080:	mov    rbx,QWORD PTR [r12+0x60]
  424085:	lea    rax,[rbx+0x30]
  424089:	cmp    rax,QWORD PTR [r12+0x50]
  42408e:	jbe    4240ce <__flatcc_fb_build_schema@@Base+0x35e>
  424090:	mov    edi,0x10000
  424095:	mov    esi,0x1
  42409a:	call   406140 <calloc@plt>
  42409f:	test   rax,rax
  4240a2:	je     425b2c <__flatcc_fb_build_schema@@Base+0x1dbc>
  4240a8:	mov    rcx,QWORD PTR [r12+0x58]
  4240ad:	mov    QWORD PTR [rax],rcx
  4240b0:	mov    QWORD PTR [r12+0x58],rax
  4240b5:	lea    rbx,[rax+0x10]
  4240b9:	mov    QWORD PTR [r12+0x60],rbx
  4240be:	lea    rcx,[rax+0x10000]
  4240c5:	mov    QWORD PTR [r12+0x50],rcx
  4240ca:	add    rax,0x40
  4240ce:	mov    QWORD PTR [r12+0x60],rax
  4240d3:	mov    DWORD PTR [rbx+0x20],r15d
  4240d7:	mov    rdi,QWORD PTR [r14]
  4240da:	mov    QWORD PTR [rbx+0x8],rdi
  4240de:	call   4060d0 <strlen@plt>
  4240e3:	mov    DWORD PTR [rbx+0x10],eax
  4240e6:	mov    WORD PTR [rbx+0x18],0x2
  4240ec:	mov    QWORD PTR [rbx],0x0
  4240f3:	mov    rdi,QWORD PTR [r12+0x260]
  4240fb:	add    rdi,0x20
  4240ff:	mov    edx,0x1
  424104:	mov    rsi,rbx
  424107:	call   42caf0 <fb_name_table_insert_item@@Base>
  42410c:	test   rax,rax
  42410f:	je     424115 <__flatcc_fb_build_schema@@Base+0x3a5>
  424111:	mov    DWORD PTR [rax+0x20],r15d
  424115:	add    r15,0x1
  424119:	add    r14,0x8
  42411d:	cmp    r15,0xc
  424121:	jb     424080 <__flatcc_fb_build_schema@@Base+0x310>
  424127:	cmp    DWORD PTR [r12+0x124],0x0
  424130:	jne    424176 <__flatcc_fb_build_schema@@Base+0x406>
  424132:	mov    rbx,QWORD PTR [r12+0x238]
  42413a:	test   rbx,rbx
  42413d:	je     42573d <__flatcc_fb_build_schema@@Base+0x19cd>
  424143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42414d:	nop    DWORD PTR [rax]
  424150:	movzx  eax,WORD PTR [rbx+0x10]
  424154:	cmp    eax,0x3
  424157:	jne    42416e <__flatcc_fb_build_schema@@Base+0x3fe>
  424159:	mov    rdi,r12
  42415c:	mov    rsi,rbx
  42415f:	call   425be0 <__flatcc_fb_build_schema@@Base+0x1e70>
  424164:	test   eax,eax
  424166:	je     42416e <__flatcc_fb_build_schema@@Base+0x3fe>
  424168:	mov    WORD PTR [rbx+0x58],0x1
  42416e:	mov    rbx,QWORD PTR [rbx]
  424171:	test   rbx,rbx
  424174:	jne    424150 <__flatcc_fb_build_schema@@Base+0x3e0>
  424176:	mov    rbx,QWORD PTR [r12+0x238]
  42417e:	test   rbx,rbx
  424181:	je     42573d <__flatcc_fb_build_schema@@Base+0x19cd>
  424187:	lea    r13,[rip+0x23682]        # 447810 <fb_schema_table_deleted@@Base+0x10e0>
  42418e:	lea    r14,[rip+0x23f34]        # 4480c9 <fb_schema_table_deleted@@Base+0x1999>
  424195:	lea    r15,[rip+0x23f03]        # 44809f <fb_schema_table_deleted@@Base+0x196f>
  42419c:	nop    DWORD PTR [rax+0x0]
  4241a0:	movzx  eax,WORD PTR [rbx+0x10]
  4241a4:	cmp    rax,0x4
  4241a8:	ja     42451a <__flatcc_fb_build_schema@@Base+0x7aa>
  4241ae:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4241b3:	add    rax,r13
  4241b6:	jmp    rax
  4241b8:	cmp    WORD PTR [rbx+0x58],0x0
  4241bd:	je     424205 <__flatcc_fb_build_schema@@Base+0x495>
  4241bf:	mov    rsi,QWORD PTR [rbx+0x8]
  4241c3:	xor    ecx,ecx
  4241c5:	xor    r8d,r8d
  4241c8:	xor    r9d,r9d
  4241cb:	mov    rdi,r12
  4241ce:	mov    rdx,r15
  4241d1:	call   41ba60 <__flatcc_error_report@@Base>
  4241d6:	jmp    4241f2 <__flatcc_fb_build_schema@@Base+0x482>
  4241d8:	cmp    DWORD PTR [r12+0x124],0x0
  4241e1:	je     4241f8 <__flatcc_fb_build_schema@@Base+0x488>
  4241e3:	mov    rdi,r12
  4241e6:	mov    rsi,rbx
  4241e9:	call   425be0 <__flatcc_fb_build_schema@@Base+0x1e70>
  4241ee:	test   eax,eax
  4241f0:	je     4241f8 <__flatcc_fb_build_schema@@Base+0x488>
  4241f2:	mov    WORD PTR [rbx+0x58],0x1
  4241f8:	mov    rbx,QWORD PTR [rbx]
  4241fb:	test   rbx,rbx
  4241fe:	jne    4241a0 <__flatcc_fb_build_schema@@Base+0x430>
  424200:	jmp    42453f <__flatcc_fb_build_schema@@Base+0x7cf>
  424205:	mov    rsi,QWORD PTR [rbx+0x38]
  424209:	mov    edx,0x10
  42420e:	mov    rdi,r12
  424211:	lea    rcx,[rsp+0x60]
  424216:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  42421b:	mov    WORD PTR [rbx+0xa4],ax
  424222:	mov    rax,QWORD PTR [rsp+0x80]
  42422a:	test   rax,rax
  42422d:	je     42427d <__flatcc_fb_build_schema@@Base+0x50d>
  42422f:	mov    rax,QWORD PTR [rax+0x10]
  424233:	test   rax,rax
  424236:	je     42425d <__flatcc_fb_build_schema@@Base+0x4ed>
  424238:	lea    rcx,[rax-0x1]
  42423c:	cmp    rcx,0xff
  424243:	ja     42425d <__flatcc_fb_build_schema@@Base+0x4ed>
  424245:	mov    ecx,0x1
  42424a:	nop    WORD PTR [rax+rax*1+0x0]
  424250:	cmp    rcx,rax
  424253:	je     424276 <__flatcc_fb_build_schema@@Base+0x506>
  424255:	add    rcx,rcx
  424258:	cmp    rcx,rax
  42425b:	jbe    424250 <__flatcc_fb_build_schema@@Base+0x4e0>
  42425d:	mov    rsi,QWORD PTR [rbx+0x8]
  424261:	xor    ecx,ecx
  424263:	xor    r8d,r8d
  424266:	xor    r9d,r9d
  424269:	mov    rdi,r12
  42426c:	mov    rdx,r14
  42426f:	call   41ba60 <__flatcc_error_report@@Base>
  424274:	jmp    42427d <__flatcc_fb_build_schema@@Base+0x50d>
  424276:	mov    WORD PTR [rbx+0xb0],ax
  42427d:	mov    r15,QWORD PTR [rbx+0x28]
  424281:	test   r15,r15
  424284:	je     42446a <__flatcc_fb_build_schema@@Base+0x6fa>
  42428a:	lea    r14,[rbx+0x60]
  42428e:	mov    DWORD PTR [rsp+0x4],0x0
  424296:	jmp    424310 <__flatcc_fb_build_schema@@Base+0x5a0>
  424298:	mov    rsi,QWORD PTR [r15+0x18]
  42429c:	mov    rdi,r12
  42429f:	lea    rdx,[rip+0x23eb2]        # 448158 <fb_schema_table_deleted@@Base+0x1a28>
  4242a6:	mov    rcx,r15
  4242a9:	call   41bc90 <error_ref_sym@@Base>
  4242ae:	mov    WORD PTR [r15+0x28],0x1
  4242b5:	jmp    42441a <__flatcc_fb_build_schema@@Base+0x6aa>
  4242ba:	cmp    DWORD PTR [r12+0x104],0x0
  4242c3:	je     4244da <__flatcc_fb_build_schema@@Base+0x76a>
  4242c9:	movzx  ecx,cx
  4242cc:	cmp    ecx,0x3
  4242cf:	jne    4244f4 <__flatcc_fb_build_schema@@Base+0x784>
  4242d5:	cmp    BYTE PTR [r15+0x70],0x0
  4242da:	jns    4243f7 <__flatcc_fb_build_schema@@Base+0x687>
  4242e0:	cmp    DWORD PTR [r12+0x100],0x0
  4242e9:	je     4244c2 <__flatcc_fb_build_schema@@Base+0x752>
  4242ef:	add    DWORD PTR [rsp+0x4],0x1
  4242f4:	cmp    WORD PTR [r15+0x58],0x0
  4242fa:	jne    4243ff <__flatcc_fb_build_schema@@Base+0x68f>
  424300:	jmp    42441a <__flatcc_fb_build_schema@@Base+0x6aa>
  424305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42430f:	nop
  424310:	mov    edx,0x1
  424315:	mov    rdi,r14
  424318:	mov    rsi,r15
  42431b:	call   4196e0 <fb_symbol_table_insert_item@@Base>
  424320:	test   rax,rax
  424323:	je     424350 <__flatcc_fb_build_schema@@Base+0x5e0>
  424325:	mov    rsi,QWORD PTR [r15+0x8]
  424329:	mov    rcx,QWORD PTR [rax+0x8]
  42432d:	xor    r8d,r8d
  424330:	xor    r9d,r9d
  424333:	mov    rdi,r12
  424336:	lea    rdx,[rip+0x23dd5]        # 448112 <fb_schema_table_deleted@@Base+0x19e2>
  42433d:	jmp    424415 <__flatcc_fb_build_schema@@Base+0x6a5>
  424342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42434c:	nop    DWORD PTR [rax+0x0]
  424350:	movzx  eax,WORD PTR [r15+0x10]
  424355:	cmp    eax,0x5
  424358:	jne    424476 <__flatcc_fb_build_schema@@Base+0x706>
  42435e:	xor    eax,eax
  424360:	cmp    DWORD PTR [r12+0x118],0x0
  424369:	setne  al
  42436c:	shl    eax,0x7
  42436f:	lea    edx,[rax+0x4]
  424372:	cmp    DWORD PTR [r12+0x114],0x0
  42437b:	cmove  edx,eax
  42437e:	mov    rsi,QWORD PTR [r15+0x60]
  424382:	mov    rdi,r12
  424385:	lea    rcx,[rsp+0x60]
  42438a:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  42438f:	mov    WORD PTR [r15+0x70],ax
  424394:	movzx  ecx,WORD PTR [r15+0x28]
  424399:	cmp    ecx,0x8
  42439c:	je     4243e9 <__flatcc_fb_build_schema@@Base+0x679>
  42439e:	movzx  eax,cx
  4243a1:	cmp    eax,0xc
  4243a4:	jne    42448e <__flatcc_fb_build_schema@@Base+0x71e>
  4243aa:	mov    rsi,QWORD PTR [rbx+0x18]
  4243ae:	mov    rdx,QWORD PTR [r15+0x18]
  4243b2:	xor    ecx,ecx
  4243b4:	mov    rdi,r12
  4243b7:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  4243bc:	test   rax,rax
  4243bf:	je     424298 <__flatcc_fb_build_schema@@Base+0x528>
  4243c5:	mov    QWORD PTR [r15+0x18],rax
  4243c9:	mov    WORD PTR [r15+0x28],0xe
  4243d0:	movzx  ecx,WORD PTR [rax+0x10]
  4243d4:	cmp    ecx,0x1
  4243d7:	jne    4242ba <__flatcc_fb_build_schema@@Base+0x54a>
  4243dd:	cmp    BYTE PTR [r15+0x70],0x0
  4243e2:	jns    4243f7 <__flatcc_fb_build_schema@@Base+0x687>
  4243e4:	jmp    4244c2 <__flatcc_fb_build_schema@@Base+0x752>
  4243e9:	mov    ecx,0x107
  4243ee:	bextr  eax,eax,ecx
  4243f3:	add    DWORD PTR [rsp+0x4],eax
  4243f7:	cmp    WORD PTR [r15+0x58],0x0
  4243fd:	je     42441a <__flatcc_fb_build_schema@@Base+0x6aa>
  4243ff:	mov    rsi,QWORD PTR [r15+0x8]
  424403:	xor    ecx,ecx
  424405:	xor    r8d,r8d
  424408:	xor    r9d,r9d
  42440b:	mov    rdi,r12
  42440e:	lea    rdx,[rip+0x23e5c]        # 448271 <fb_schema_table_deleted@@Base+0x1b41>
  424415:	call   41ba60 <__flatcc_error_report@@Base>
  42441a:	mov    r15,QWORD PTR [r15]
  42441d:	test   r15,r15
  424420:	jne    424310 <__flatcc_fb_build_schema@@Base+0x5a0>
  424426:	mov    eax,DWORD PTR [rsp+0x4]
  42442a:	test   eax,eax
  42442c:	lea    r14,[rip+0x23c96]        # 4480c9 <fb_schema_table_deleted@@Base+0x1999>
  424433:	je     42446a <__flatcc_fb_build_schema@@Base+0x6fa>
  424435:	or     BYTE PTR [rbx+0x12],0x8
  424439:	cmp    eax,0x2
  42443c:	jl     42446a <__flatcc_fb_build_schema@@Base+0x6fa>
  42443e:	cmp    DWORD PTR [r12+0x108],0x0
  424447:	jne    42446a <__flatcc_fb_build_schema@@Base+0x6fa>
  424449:	mov    rsi,QWORD PTR [rbx+0x8]
  42444d:	xor    ecx,ecx
  42444f:	xor    r8d,r8d
  424452:	xor    r9d,r9d
  424455:	mov    rdi,r12
  424458:	lea    rdx,[rip+0x23e43]        # 4482a2 <fb_schema_table_deleted@@Base+0x1b72>
  42445f:	call   41ba60 <__flatcc_error_report@@Base>
  424464:	mov    WORD PTR [rbx+0x58],0x1
  42446a:	lea    r15,[rip+0x23c2e]        # 44809f <fb_schema_table_deleted@@Base+0x196f>
  424471:	jmp    4241f8 <__flatcc_fb_build_schema@@Base+0x488>
  424476:	mov    rsi,QWORD PTR [r15+0x8]
  42447a:	xor    ecx,ecx
  42447c:	xor    r8d,r8d
  42447f:	xor    r9d,r9d
  424482:	mov    rdi,r12
  424485:	lea    rdx,[rip+0x23ca8]        # 448134 <fb_schema_table_deleted@@Base+0x1a04>
  42448c:	jmp    4244a4 <__flatcc_fb_build_schema@@Base+0x734>
  42448e:	mov    rsi,QWORD PTR [r15+0x8]
  424492:	xor    ecx,ecx
  424494:	xor    r8d,r8d
  424497:	xor    r9d,r9d
  42449a:	mov    rdi,r12
  42449d:	lea    rdx,[rip+0x23d93]        # 448237 <fb_schema_table_deleted@@Base+0x1b07>
  4244a4:	call   41ba60 <__flatcc_error_report@@Base>
  4244a9:	mov    WORD PTR [rbx+0x58],0x1
  4244af:	lea    r14,[rip+0x23c13]        # 4480c9 <fb_schema_table_deleted@@Base+0x1999>
  4244b6:	lea    r15,[rip+0x23be2]        # 44809f <fb_schema_table_deleted@@Base+0x196f>
  4244bd:	jmp    4241f8 <__flatcc_fb_build_schema@@Base+0x488>
  4244c2:	mov    rsi,QWORD PTR [r15+0x8]
  4244c6:	xor    ecx,ecx
  4244c8:	xor    r8d,r8d
  4244cb:	xor    r9d,r9d
  4244ce:	mov    rdi,r12
  4244d1:	lea    rdx,[rip+0x23cf2]        # 4481ca <fb_schema_table_deleted@@Base+0x1a9a>
  4244d8:	jmp    42450c <__flatcc_fb_build_schema@@Base+0x79c>
  4244da:	mov    rsi,QWORD PTR [r15+0x8]
  4244de:	mov    rcx,QWORD PTR [rax+0x8]
  4244e2:	xor    r8d,r8d
  4244e5:	xor    r9d,r9d
  4244e8:	mov    rdi,r12
  4244eb:	lea    rdx,[rip+0x23d09]        # 4481fb <fb_schema_table_deleted@@Base+0x1acb>
  4244f2:	jmp    42450c <__flatcc_fb_build_schema@@Base+0x79c>
  4244f4:	mov    rsi,QWORD PTR [r15+0x8]
  4244f8:	mov    rcx,QWORD PTR [rax+0x8]
  4244fc:	xor    r8d,r8d
  4244ff:	xor    r9d,r9d
  424502:	mov    rdi,r12
  424505:	lea    rdx,[rip+0x23c7a]        # 448186 <fb_schema_table_deleted@@Base+0x1a56>
  42450c:	call   41ba60 <__flatcc_error_report@@Base>
  424511:	mov    WORD PTR [r15+0x28],0x1
  424518:	jmp    4244a9 <__flatcc_fb_build_schema@@Base+0x739>
  42451a:	mov    rsi,QWORD PTR [rbx+0x8]
  42451e:	lea    rdx,[rip+0x23566]        # 447a8b <fb_schema_table_deleted@@Base+0x135b>
  424525:	xor    ecx,ecx
  424527:	xor    r8d,r8d
  42452a:	xor    r9d,r9d
  42452d:	mov    rdi,r12
  424530:	call   41ba60 <__flatcc_error_report@@Base>
  424535:	mov    eax,0xffffffff
  42453a:	jmp    425af8 <__flatcc_fb_build_schema@@Base+0x1d88>
  42453f:	mov    rbx,QWORD PTR [r12+0x238]
  424547:	test   rbx,rbx
  42454a:	je     42573d <__flatcc_fb_build_schema@@Base+0x19cd>
  424550:	movzx  eax,WORD PTR [rbx+0x10]
  424554:	cmp    eax,0x1
  424557:	jne    424580 <__flatcc_fb_build_schema@@Base+0x810>
  424559:	movzx  eax,WORD PTR [rbx+0x58]
  42455d:	cmp    eax,0x1
  424560:	je     424580 <__flatcc_fb_build_schema@@Base+0x810>
  424562:	mov    rdi,r12
  424565:	mov    rsi,rbx
  424568:	call   426290 <__flatcc_fb_build_schema@@Base+0x2520>
  42456d:	test   eax,eax
  42456f:	je     424580 <__flatcc_fb_build_schema@@Base+0x810>
  424571:	mov    WORD PTR [rbx+0x58],0x1
  424577:	nop    WORD PTR [rax+rax*1+0x0]
  424580:	mov    rbx,QWORD PTR [rbx]
  424583:	test   rbx,rbx
  424586:	jne    424550 <__flatcc_fb_build_schema@@Base+0x7e0>
  424588:	mov    r13,QWORD PTR [r12+0x238]
  424590:	test   r13,r13
  424593:	je     42573d <__flatcc_fb_build_schema@@Base+0x19cd>
  424599:	lea    r15,[rip+0x23f90]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  4245a0:	movzx  eax,WORD PTR [r13+0x10]
  4245a5:	cmp    eax,0x2
  4245a8:	je     4253b0 <__flatcc_fb_build_schema@@Base+0x1640>
  4245ae:	test   ax,ax
  4245b1:	jne    425730 <__flatcc_fb_build_schema@@Base+0x19c0>
  4245b7:	movzx  eax,WORD PTR [r13+0x58]
  4245bc:	cmp    eax,0x1
  4245bf:	je     425730 <__flatcc_fb_build_schema@@Base+0x19c0>
  4245c5:	test   ax,ax
  4245c8:	jne    425b75 <__flatcc_fb_build_schema@@Base+0x1e05>
  4245ce:	mov    rsi,QWORD PTR [r13+0x38]
  4245d2:	mov    edx,0x8
  4245d7:	mov    rdi,r12
  4245da:	lea    rcx,[rsp+0x60]
  4245df:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  4245e4:	mov    WORD PTR [r13+0xa4],ax
  4245ec:	mov    r14,QWORD PTR [r13+0x28]
  4245f0:	test   r14,r14
  4245f3:	je     42559c <__flatcc_fb_build_schema@@Base+0x182c>
  4245f9:	lea    rbx,[r13+0x60]
  4245fd:	xor    eax,eax
  4245ff:	mov    QWORD PTR [rsp+0x30],rax
  424604:	mov    DWORD PTR [rsp+0x1c],0x0
  42460c:	xor    eax,eax
  42460e:	mov    QWORD PTR [rsp+0x40],rax
  424613:	mov    DWORD PTR [rsp+0x4],0x0
  42461b:	mov    DWORD PTR [rsp+0x18],0x0
  424623:	xor    eax,eax
  424625:	mov    QWORD PTR [rsp+0x20],rax
  42462a:	mov    QWORD PTR [rsp+0x10],rbx
  42462f:	jmp    425340 <__flatcc_fb_build_schema@@Base+0x15d0>
  424634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42463e:	xchg   ax,ax
  424640:	movzx  eax,WORD PTR [r14+0x10]
  424645:	cmp    eax,0x5
  424648:	jne    4255b8 <__flatcc_fb_build_schema@@Base+0x1848>
  42464e:	mov    eax,DWORD PTR [r14+0x28]
  424652:	lea    ecx,[rax-0x7]
  424655:	movzx  ecx,cx
  424658:	cmp    ecx,0x2
  42465b:	jae    424688 <__flatcc_fb_build_schema@@Base+0x918>
  42465d:	mov    rax,QWORD PTR [r14+0x18]
  424661:	mov    rcx,QWORD PTR [rax+0x20]
  424665:	lea    rdx,[rcx+0x3e7]
  42466c:	xor    eax,eax
  42466e:	cmp    rdx,0x1b
  424672:	ja     424682 <__flatcc_fb_build_schema@@Base+0x912>
  424674:	lea    rax,[rip+0x23235]        # 4478b0 <fb_schema_table_deleted@@Base+0x1180>
  42467b:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  424682:	mov    DWORD PTR [r14+0x18],eax
  424686:	jmp    424694 <__flatcc_fb_build_schema@@Base+0x924>
  424688:	movzx  eax,ax
  42468b:	cmp    eax,0x1
  42468e:	je     425372 <__flatcc_fb_build_schema@@Base+0x1602>
  424694:	mov    rsi,QWORD PTR [r14+0x60]
  424698:	mov    edx,0xfc6
  42469d:	mov    rdi,r12
  4246a0:	lea    rcx,[rsp+0x60]
  4246a5:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  4246aa:	mov    WORD PTR [r14+0x70],ax
  4246af:	mov    rcx,QWORD PTR [rsp+0x90]
  4246b7:	test   rcx,rcx
  4246ba:	mov    ebx,DWORD PTR [rsp+0x4]
  4246be:	je     424745 <__flatcc_fb_build_schema@@Base+0x9d5>
  4246c4:	movzx  eax,WORD PTR [r14+0x28]
  4246c9:	cmp    eax,0x7
  4246cc:	jne    42472a <__flatcc_fb_build_schema@@Base+0x9ba>
  4246ce:	cmp    DWORD PTR [r14+0x18],0x4
  4246d3:	jne    42472a <__flatcc_fb_build_schema@@Base+0x9ba>
  4246d5:	movzx  eax,WORD PTR [rcx+0x20]
  4246d9:	cmp    eax,0x2
  4246dc:	jne    424745 <__flatcc_fb_build_schema@@Base+0x9d5>
  4246de:	mov    QWORD PTR [rsp+0x48],r13
  4246e3:	mov    r13,QWORD PTR [r13+0x18]
  4246e7:	mov    rsi,QWORD PTR [rcx+0x10]
  4246eb:	mov    QWORD PTR [rsp+0x50],rcx
  4246f0:	mov    r15d,DWORD PTR [rcx+0x18]
  4246f4:	movsxd rax,r15d
  4246f7:	nop    WORD PTR [rax+rax*1+0x0]
  424700:	test   rax,rax
  424703:	jle    424c91 <__flatcc_fb_build_schema@@Base+0xf21>
  424709:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2e
  42470e:	lea    rax,[rax-0x1]
  424712:	jne    424700 <__flatcc_fb_build_schema@@Base+0x990>
  424714:	lea    rcx,[rsi+rax*1]
  424718:	add    rcx,0x1
  42471c:	mov    QWORD PTR [rsp+0x8],rcx
  424721:	add    r15d,0xffffffff
  424725:	jmp    424c96 <__flatcc_fb_build_schema@@Base+0xf26>
  42472a:	mov    rsi,QWORD PTR [rcx+0x8]
  42472e:	xor    ecx,ecx
  424730:	xor    r8d,r8d
  424733:	xor    r9d,r9d
  424736:	mov    rdi,r12
  424739:	lea    rdx,[rip+0x245bd]        # 448cfd <fb_schema_table_deleted@@Base+0x25cd>
  424740:	call   41ba60 <__flatcc_error_report@@Base>
  424745:	movzx  eax,WORD PTR [r14+0x70]
  42474a:	test   eax,0x100
  42474f:	je     42477b <__flatcc_fb_build_schema@@Base+0xa0b>
  424751:	movzx  ecx,WORD PTR [r14+0x28]
  424756:	cmp    ecx,0x8
  424759:	jne    42477b <__flatcc_fb_build_schema@@Base+0xa0b>
  42475b:	mov    rsi,QWORD PTR [r14+0x8]
  42475f:	xor    ecx,ecx
  424761:	xor    r8d,r8d
  424764:	xor    r9d,r9d
  424767:	mov    rdi,r12
  42476a:	lea    rdx,[rip+0x23e06]        # 448577 <fb_schema_table_deleted@@Base+0x1e47>
  424771:	call   41ba60 <__flatcc_error_report@@Base>
  424776:	movzx  eax,WORD PTR [r14+0x70]
  42477b:	test   eax,0x400
  424780:	je     4247b3 <__flatcc_fb_build_schema@@Base+0xa43>
  424782:	movzx  ecx,WORD PTR [r14+0x28]
  424787:	cmp    ecx,0x7
  42478a:	jne    424793 <__flatcc_fb_build_schema@@Base+0xa23>
  42478c:	cmp    DWORD PTR [r14+0x18],0x4
  424791:	je     4247b3 <__flatcc_fb_build_schema@@Base+0xa43>
  424793:	mov    rsi,QWORD PTR [r14+0x8]
  424797:	xor    ecx,ecx
  424799:	xor    r8d,r8d
  42479c:	xor    r9d,r9d
  42479f:	mov    rdi,r12
  4247a2:	lea    rdx,[rip+0x23e06]        # 4485af <fb_schema_table_deleted@@Base+0x1e7f>
  4247a9:	call   41ba60 <__flatcc_error_report@@Base>
  4247ae:	movzx  eax,WORD PTR [r14+0x70]
  4247b3:	test   eax,0x800
  4247b8:	je     4247eb <__flatcc_fb_build_schema@@Base+0xa7b>
  4247ba:	movzx  ecx,WORD PTR [r14+0x28]
  4247bf:	cmp    ecx,0x7
  4247c2:	jne    4247cb <__flatcc_fb_build_schema@@Base+0xa5b>
  4247c4:	cmp    DWORD PTR [r14+0x18],0x4
  4247c9:	je     4247eb <__flatcc_fb_build_schema@@Base+0xa7b>
  4247cb:	mov    rsi,QWORD PTR [r14+0x8]
  4247cf:	xor    ecx,ecx
  4247d1:	xor    r8d,r8d
  4247d4:	xor    r9d,r9d
  4247d7:	mov    rdi,r12
  4247da:	lea    rdx,[rip+0x23e0a]        # 4485eb <fb_schema_table_deleted@@Base+0x1ebb>
  4247e1:	call   41ba60 <__flatcc_error_report@@Base>
  4247e6:	movzx  eax,WORD PTR [r14+0x70]
  4247eb:	and    eax,0xc00
  4247f0:	cmp    eax,0xc00
  4247f5:	jne    424812 <__flatcc_fb_build_schema@@Base+0xaa2>
  4247f7:	mov    rsi,QWORD PTR [r14+0x8]
  4247fb:	xor    ecx,ecx
  4247fd:	xor    r8d,r8d
  424800:	xor    r9d,r9d
  424803:	mov    rdi,r12
  424806:	lea    rdx,[rip+0x23e1d]        # 44862a <fb_schema_table_deleted@@Base+0x1efa>
  42480d:	call   41ba60 <__flatcc_error_report@@Base>
  424812:	mov    r15,QWORD PTR [rsp+0x68]
  424817:	cmp    QWORD PTR [rsp+0x20],0x0
  42481d:	jne    424848 <__flatcc_fb_build_schema@@Base+0xad8>
  42481f:	test   r15,r15
  424822:	je     424848 <__flatcc_fb_build_schema@@Base+0xad8>
  424824:	mov    rdi,QWORD PTR [r12+0xd8]
  42482c:	mov    rdx,QWORD PTR [r12+0x148]
  424834:	xor    esi,esi
  424836:	mov    QWORD PTR [rsp+0x30],rdi
  42483b:	call   406100 <memset@plt>
  424840:	mov    DWORD PTR [rsp+0x18],0x1
  424848:	test   ebx,ebx
  42484a:	jne    424898 <__flatcc_fb_build_schema@@Base+0xb28>
  42484c:	mov    rax,QWORD PTR [rsp+0x20]
  424851:	cmp    rax,QWORD PTR [r12+0x148]
  424859:	jae    424872 <__flatcc_fb_build_schema@@Base+0xb02>
  42485b:	xor    ebx,ebx
  42485d:	cmp    DWORD PTR [rsp+0x18],0x0
  424862:	jne    424892 <__flatcc_fb_build_schema@@Base+0xb22>
  424864:	movzx  eax,WORD PTR [rsp+0x20]
  424869:	mov    QWORD PTR [r14+0x88],rax
  424870:	jmp    424892 <__flatcc_fb_build_schema@@Base+0xb22>
  424872:	mov    rsi,QWORD PTR [r14+0x8]
  424876:	xor    ecx,ecx
  424878:	xor    r8d,r8d
  42487b:	xor    r9d,r9d
  42487e:	mov    rdi,r12
  424881:	lea    rdx,[rip+0x23dd9]        # 448661 <fb_schema_table_deleted@@Base+0x1f31>
  424888:	call   41ba60 <__flatcc_error_report@@Base>
  42488d:	mov    ebx,0x1
  424892:	add    QWORD PTR [rsp+0x20],0x1
  424898:	mov    eax,DWORD PTR [r14+0x28]
  42489c:	add    eax,0xfffffff9
  42489f:	movzx  ecx,ax
  4248a2:	cmp    ecx,0x5
  4248a5:	mov    DWORD PTR [rsp+0x4],ebx
  4248a9:	ja     424b60 <__flatcc_fb_build_schema@@Base+0xdf0>
  4248af:	movzx  eax,ax
  4248b2:	lea    rcx,[rip+0x22f6b]        # 447824 <fb_schema_table_deleted@@Base+0x10f4>
  4248b9:	movsxd rax,DWORD PTR [rcx+rax*4]
  4248bd:	add    rax,rcx
  4248c0:	jmp    rax
  4248c2:	mov    eax,DWORD PTR [r14+0x18]
  4248c6:	lea    rcx,[rip+0x22fb3]        # 447880 <fb_schema_table_deleted@@Base+0x1150>
  4248cd:	movsxd rax,DWORD PTR [rcx+rax*4]
  4248d1:	mov    QWORD PTR [r14+0x80],rax
  4248d8:	mov    WORD PTR [r14+0x72],ax
  4248dd:	cmp    WORD PTR [r14+0x58],0x0
  4248e3:	je     424b93 <__flatcc_fb_build_schema@@Base+0xe23>
  4248e9:	mov    rsi,QWORD PTR [r14+0x8]
  4248ed:	xor    ecx,ecx
  4248ef:	xor    r8d,r8d
  4248f2:	xor    r9d,r9d
  4248f5:	mov    rdi,r12
  4248f8:	lea    rdx,[rip+0x23db4]        # 4486b3 <fb_schema_table_deleted@@Base+0x1f83>
  4248ff:	jmp    424b76 <__flatcc_fb_build_schema@@Base+0xe06>
  424904:	mov    rsi,QWORD PTR [r13+0x18]
  424908:	mov    rdx,QWORD PTR [r14+0x18]
  42490c:	xor    ecx,ecx
  42490e:	mov    rdi,r12
  424911:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  424916:	test   rax,rax
  424919:	je     424bf8 <__flatcc_fb_build_schema@@Base+0xe88>
  42491f:	mov    rbx,rax
  424922:	movzx  eax,WORD PTR [rax+0x10]
  424926:	cmp    eax,0x4
  424929:	ja     424f01 <__flatcc_fb_build_schema@@Base+0x1191>
  42492f:	movzx  eax,ax
  424932:	cmp    eax,0x2
  424935:	je     424f01 <__flatcc_fb_build_schema@@Base+0x1191>
  42493b:	cmp    WORD PTR [r14+0x58],0x0
  424941:	jne    42505a <__flatcc_fb_build_schema@@Base+0x12ea>
  424947:	mov    WORD PTR [r14+0x28],0xf
  42494e:	mov    QWORD PTR [r14+0x18],rbx
  424952:	mov    rax,QWORD PTR [rbx+0xb8]
  424959:	mov    QWORD PTR [r14+0x80],rax
  424960:	movzx  eax,WORD PTR [rbx+0xb0]
  424967:	mov    WORD PTR [r14+0x72],ax
  42496c:	xor    edx,edx
  42496e:	cmp    DWORD PTR [rsp+0x4],0x0
  424973:	jne    424c1d <__flatcc_fb_build_schema@@Base+0xead>
  424979:	movzx  eax,WORD PTR [rbx+0x10]
  42497d:	cmp    eax,0x4
  424980:	jne    424c1d <__flatcc_fb_build_schema@@Base+0xead>
  424986:	cmp    DWORD PTR [rsp+0x18],0x0
  42498b:	jne    424999 <__flatcc_fb_build_schema@@Base+0xc29>
  42498d:	movzx  eax,WORD PTR [rsp+0x20]
  424992:	mov    QWORD PTR [r14+0x88],rax
  424999:	add    QWORD PTR [rsp+0x20],0x1
  42499f:	xor    edx,edx
  4249a1:	test   r15,r15
  4249a4:	je     424bab <__flatcc_fb_build_schema@@Base+0xe3b>
  4249aa:	cmp    DWORD PTR [rsp+0x18],0x0
  4249af:	jne    424bab <__flatcc_fb_build_schema@@Base+0xe3b>
  4249b5:	mov    rsi,QWORD PTR [r15+0x8]
  4249b9:	xor    ecx,ecx
  4249bb:	xor    r8d,r8d
  4249be:	xor    r9d,r9d
  4249c1:	mov    rdi,r12
  4249c4:	mov    ebx,edx
  4249c6:	lea    rdx,[rip+0x23f8a]        # 448957 <fb_schema_table_deleted@@Base+0x2227>
  4249cd:	jmp    424bd7 <__flatcc_fb_build_schema@@Base+0xe67>
  4249d2:	cmp    WORD PTR [r14+0x58],0x0
  4249d8:	je     424b93 <__flatcc_fb_build_schema@@Base+0xe23>
  4249de:	mov    rsi,QWORD PTR [r14+0x8]
  4249e2:	xor    ecx,ecx
  4249e4:	xor    r8d,r8d
  4249e7:	xor    r9d,r9d
  4249ea:	mov    rdi,r12
  4249ed:	lea    rdx,[rip+0x23d0c]        # 448700 <fb_schema_table_deleted@@Base+0x1fd0>
  4249f4:	jmp    424b76 <__flatcc_fb_build_schema@@Base+0xe06>
  4249f9:	cmp    WORD PTR [r14+0x58],0x0
  4249ff:	je     424c13 <__flatcc_fb_build_schema@@Base+0xea3>
  424a05:	mov    rsi,QWORD PTR [r14+0x8]
  424a09:	xor    ecx,ecx
  424a0b:	xor    r8d,r8d
  424a0e:	xor    r9d,r9d
  424a11:	mov    rdi,r12
  424a14:	lea    rdx,[rip+0x23cc2]        # 4486dd <fb_schema_table_deleted@@Base+0x1fad>
  424a1b:	jmp    424b76 <__flatcc_fb_build_schema@@Base+0xe06>
  424a20:	lea    rbx,[r14+0x48]
  424a24:	movzx  eax,WORD PTR [r14+0x58]
  424a29:	cmp    eax,0xd
  424a2c:	jne    424aa5 <__flatcc_fb_build_schema@@Base+0xd35>
  424a2e:	mov    rsi,QWORD PTR [r13+0x18]
  424a32:	mov    rdx,QWORD PTR [rbx]
  424a35:	mov    QWORD PTR [rsp+0x28],0x0
  424a3e:	test   rdx,rdx
  424a41:	je     425bb3 <__flatcc_fb_build_schema@@Base+0x1e43>
  424a47:	mov    rdi,r12
  424a4a:	lea    rcx,[rsp+0x28]
  424a4f:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  424a54:	test   rax,rax
  424a57:	je     424be8 <__flatcc_fb_build_schema@@Base+0xe78>
  424a5d:	movzx  ecx,WORD PTR [rax+0x10]
  424a61:	cmp    ecx,0x3
  424a64:	jne    424be8 <__flatcc_fb_build_schema@@Base+0xe78>
  424a6a:	add    rax,0x60
  424a6e:	mov    rcx,QWORD PTR [rsp+0x28]
  424a73:	mov    rcx,QWORD PTR [rcx+0x8]
  424a77:	mov    rsi,QWORD PTR [rcx]
  424a7a:	mov    rdx,QWORD PTR [rcx+0x8]
  424a7e:	mov    rdi,rax
  424a81:	call   419700 <fb_symbol_table_find@@Base>
  424a86:	test   rax,rax
  424a89:	je     424be8 <__flatcc_fb_build_schema@@Base+0xe78>
  424a8f:	mov    rcx,QWORD PTR [rax+0x58]
  424a93:	mov    QWORD PTR [rbx+0x10],rcx
  424a97:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  424a9c:	vmovups XMMWORD PTR [rbx],xmm0
  424aa0:	movzx  eax,WORD PTR [r14+0x58]
  424aa5:	test   ax,ax
  424aa8:	jne    424ab9 <__flatcc_fb_build_schema@@Base+0xd49>
  424aaa:	mov    WORD PTR [r14+0x58],0x5
  424ab1:	mov    QWORD PTR [r14+0x48],0x0
  424ab9:	mov    edx,DWORD PTR [r14+0x18]
  424abd:	mov    rdi,r12
  424ac0:	mov    rsi,r14
  424ac3:	mov    rcx,rbx
  424ac6:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  424acb:	test   eax,eax
  424acd:	jne    425075 <__flatcc_fb_build_schema@@Base+0x1305>
  424ad3:	mov    eax,DWORD PTR [r14+0x18]
  424ad7:	lea    rcx,[rip+0x22da2]        # 447880 <fb_schema_table_deleted@@Base+0x1150>
  424ade:	movsxd rax,DWORD PTR [rcx+rax*4]
  424ae2:	mov    QWORD PTR [r14+0x80],rax
  424ae9:	mov    WORD PTR [r14+0x72],ax
  424aee:	mov    edx,0x1
  424af3:	xor    ebx,ebx
  424af5:	cmp    DWORD PTR [rsp+0x4],0x0
  424afa:	jne    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  424b00:	jmp    424ba2 <__flatcc_fb_build_schema@@Base+0xe32>
  424b05:	mov    rsi,QWORD PTR [r13+0x18]
  424b09:	mov    rdx,QWORD PTR [r14+0x18]
  424b0d:	xor    ecx,ecx
  424b0f:	mov    rdi,r12
  424b12:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  424b17:	test   rax,rax
  424b1a:	je     424c67 <__flatcc_fb_build_schema@@Base+0xef7>
  424b20:	mov    rbx,rax
  424b23:	movzx  eax,WORD PTR [rax+0x10]
  424b27:	cmp    rax,0x4
  424b2b:	ja     425107 <__flatcc_fb_build_schema@@Base+0x1397>
  424b31:	xor    edx,edx
  424b33:	lea    rcx,[rip+0x22d02]        # 44783c <fb_schema_table_deleted@@Base+0x110c>
  424b3a:	movsxd rax,DWORD PTR [rcx+rax*4]
  424b3e:	add    rax,rcx
  424b41:	jmp    rax
  424b43:	mov    rsi,QWORD PTR [r14+0x8]
  424b47:	mov    rcx,QWORD PTR [rbx+0x8]
  424b4b:	xor    r8d,r8d
  424b4e:	xor    r9d,r9d
  424b51:	mov    rdi,r12
  424b54:	lea    rdx,[rip+0x23c32]        # 44878d <fb_schema_table_deleted@@Base+0x205d>
  424b5b:	jmp    425070 <__flatcc_fb_build_schema@@Base+0x1300>
  424b60:	mov    rsi,QWORD PTR [r14+0x8]
  424b64:	xor    ecx,ecx
  424b66:	xor    r8d,r8d
  424b69:	xor    r9d,r9d
  424b6c:	mov    rdi,r12
  424b6f:	lea    rdx,[rip+0x23db9]        # 44892f <fb_schema_table_deleted@@Base+0x21ff>
  424b76:	call   41ba60 <__flatcc_error_report@@Base>
  424b7b:	mov    WORD PTR [r14+0x28],0x1
  424b82:	mov    rbx,QWORD PTR [rsp+0x10]
  424b87:	lea    r15,[rip+0x239a2]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  424b8e:	jmp    425372 <__flatcc_fb_build_schema@@Base+0x1602>
  424b93:	xor    ebx,ebx
  424b95:	xor    edx,edx
  424b97:	cmp    DWORD PTR [rsp+0x4],0x0
  424b9c:	jne    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  424ba2:	test   r15,r15
  424ba5:	jne    4249aa <__flatcc_fb_build_schema@@Base+0xc3a>
  424bab:	test   r15,r15
  424bae:	jne    424e5b <__flatcc_fb_build_schema@@Base+0x10eb>
  424bb4:	cmp    DWORD PTR [rsp+0x18],0x0
  424bb9:	je     424e5b <__flatcc_fb_build_schema@@Base+0x10eb>
  424bbf:	mov    rsi,QWORD PTR [r14+0x8]
  424bc3:	xor    ecx,ecx
  424bc5:	xor    r8d,r8d
  424bc8:	xor    r9d,r9d
  424bcb:	mov    rdi,r12
  424bce:	mov    ebx,edx
  424bd0:	lea    rdx,[rip+0x23dbd]        # 448994 <fb_schema_table_deleted@@Base+0x2264>
  424bd7:	call   41ba60 <__flatcc_error_report@@Base>
  424bdc:	mov    edx,ebx
  424bde:	mov    DWORD PTR [rsp+0x4],0x1
  424be6:	jmp    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  424be8:	mov    rsi,QWORD PTR [r14+0x48]
  424bec:	mov    rdi,r12
  424bef:	lea    rdx,[rip+0x23a8b]        # 448681 <fb_schema_table_deleted@@Base+0x1f51>
  424bf6:	jmp    424c06 <__flatcc_fb_build_schema@@Base+0xe96>
  424bf8:	mov    rsi,QWORD PTR [r14+0x18]
  424bfc:	mov    rdi,r12
  424bff:	lea    rdx,[rip+0x23caa]        # 4488b0 <fb_schema_table_deleted@@Base+0x2180>
  424c06:	mov    rcx,r14
  424c09:	call   41bc90 <error_ref_sym@@Base>
  424c0e:	jmp    425075 <__flatcc_fb_build_schema@@Base+0x1305>
  424c13:	mov    edx,DWORD PTR [r12+0x110]
  424c1b:	xor    ebx,ebx
  424c1d:	cmp    DWORD PTR [rsp+0x4],0x0
  424c22:	je     424ba2 <__flatcc_fb_build_schema@@Base+0xe32>
  424c28:	lea    r15,[rip+0x23901]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  424c2f:	cmp    BYTE PTR [r14+0x70],0x0
  424c34:	mov    rbx,QWORD PTR [rsp+0x10]
  424c39:	jns    425372 <__flatcc_fb_build_schema@@Base+0x1602>
  424c3f:	add    DWORD PTR [rsp+0x1c],0x1
  424c44:	test   edx,edx
  424c46:	jne    425372 <__flatcc_fb_build_schema@@Base+0x1602>
  424c4c:	mov    rsi,QWORD PTR [r14+0x8]
  424c50:	xor    ecx,ecx
  424c52:	xor    r8d,r8d
  424c55:	xor    r9d,r9d
  424c58:	mov    rdi,r12
  424c5b:	lea    rdx,[rip+0x24023]        # 448c85 <fb_schema_table_deleted@@Base+0x2555>
  424c62:	jmp    42536d <__flatcc_fb_build_schema@@Base+0x15fd>
  424c67:	mov    rsi,QWORD PTR [r14+0x18]
  424c6b:	mov    rdi,r12
  424c6e:	lea    rdx,[rip+0x23ab5]        # 44872a <fb_schema_table_deleted@@Base+0x1ffa>
  424c75:	mov    rcx,r14
  424c78:	call   41bc90 <error_ref_sym@@Base>
  424c7d:	mov    WORD PTR [r14+0x28],0x1
  424c84:	mov    DWORD PTR [rsp+0x4],0x1
  424c8c:	jmp    42507c <__flatcc_fb_build_schema@@Base+0x130c>
  424c91:	mov    QWORD PTR [rsp+0x8],rsi
  424c96:	sub    r15d,eax
  424c99:	test   r13,r13
  424c9c:	je     424db0 <__flatcc_fb_build_schema@@Base+0x1040>
  424ca2:	test   eax,eax
  424ca4:	jne    424db0 <__flatcc_fb_build_schema@@Base+0x1040>
  424caa:	movsxd rax,r15d
  424cad:	mov    QWORD PTR [rsp+0x38],rax
  424cb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424cbc:	nop    DWORD PTR [rax+0x0]
  424cc0:	lea    rdi,[r13+0x8]
  424cc4:	mov    rsi,QWORD PTR [rsp+0x8]
  424cc9:	mov    rdx,QWORD PTR [rsp+0x38]
  424cce:	call   419700 <fb_symbol_table_find@@Base>
  424cd3:	test   rax,rax
  424cd6:	je     424cfb <__flatcc_fb_build_schema@@Base+0xf8b>
  424cd8:	mov    r15,rax
  424cdb:	movzx  eax,WORD PTR [rax+0x10]
  424cdf:	cmp    eax,0x4
  424ce2:	ja     424cfb <__flatcc_fb_build_schema@@Base+0xf8b>
  424ce4:	mov    rsi,QWORD PTR [r15+0x20]
  424ce8:	mov    rdi,QWORD PTR [rsp+0x58]
  424ced:	call   4190e0 <ptr_set_find_item@@Base>
  424cf2:	test   rax,rax
  424cf5:	jne    424df1 <__flatcc_fb_build_schema@@Base+0x1081>
  424cfb:	mov    rax,QWORD PTR [r13+0x0]
  424cff:	test   rax,rax
  424d02:	je     424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424d08:	mov    edx,0x2
  424d0d:	xor    esi,esi
  424d0f:	xor    ecx,ecx
  424d11:	movabs rdi,0xffffffff00000000
  424d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  424d20:	mov    r15,rsi
  424d23:	mov    rbx,rdx
  424d26:	mov    rax,QWORD PTR [rax]
  424d29:	add    rcx,0x1
  424d2d:	lea    rsi,[rsi+rdi*1]
  424d31:	lea    rdx,[rdx+0x1]
  424d35:	test   rax,rax
  424d38:	jne    424d20 <__flatcc_fb_build_schema@@Base+0xfb0>
  424d3a:	nop    WORD PTR [rax+rax*1+0x0]
  424d40:	mov    rdi,QWORD PTR [r12+0x260]
  424d48:	add    rbx,0xffffffffffffffff
  424d4c:	cmp    rbx,0x2
  424d50:	jl     424d90 <__flatcc_fb_build_schema@@Base+0x1020>
  424d52:	test   rdi,rdi
  424d55:	je     424d70 <__flatcc_fb_build_schema@@Base+0x1000>
  424d57:	mov    rsi,QWORD PTR [r13+0x0]
  424d5b:	mov    rdx,r15
  424d5e:	sar    rdx,0x20
  424d62:	call   41a0d0 <fb_scope_table_find@@Base>
  424d67:	jmp    424d72 <__flatcc_fb_build_schema@@Base+0x1002>
  424d69:	nop    DWORD PTR [rax+0x0]
  424d70:	xor    eax,eax
  424d72:	movabs rcx,0x100000000
  424d7c:	add    r15,rcx
  424d7f:	test   rax,rax
  424d82:	je     424d40 <__flatcc_fb_build_schema@@Base+0xfd0>
  424d84:	jmp    424da2 <__flatcc_fb_build_schema@@Base+0x1032>
  424d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d90:	test   rdi,rdi
  424d93:	je     424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424d99:	xor    esi,esi
  424d9b:	xor    edx,edx
  424d9d:	call   41a0d0 <fb_scope_table_find@@Base>
  424da2:	mov    r13,rax
  424da5:	test   rax,rax
  424da8:	jne    424cc0 <__flatcc_fb_build_schema@@Base+0xf50>
  424dae:	jmp    424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424db0:	mov    rdi,QWORD PTR [r12+0x260]
  424db8:	test   rdi,rdi
  424dbb:	je     424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424dbd:	test   eax,eax
  424dbf:	mov    ecx,0x0
  424dc4:	cmove  rsi,rcx
  424dc8:	movsxd rdx,eax
  424dcb:	call   41a0d0 <fb_scope_table_find@@Base>
  424dd0:	test   rax,rax
  424dd3:	je     424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424dd5:	add    rax,0x8
  424dd9:	movsxd rdx,r15d
  424ddc:	mov    rdi,rax
  424ddf:	mov    rsi,QWORD PTR [rsp+0x8]
  424de4:	call   419700 <fb_symbol_table_find@@Base>
  424de9:	mov    r15,rax
  424dec:	test   rax,rax
  424def:	je     424e2b <__flatcc_fb_build_schema@@Base+0x10bb>
  424df1:	movzx  eax,WORD PTR [r15+0x10]
  424df6:	test   ax,ax
  424df9:	mov    r13,QWORD PTR [rsp+0x48]
  424dfe:	mov    ebx,DWORD PTR [rsp+0x4]
  424e02:	je     424e1f <__flatcc_fb_build_schema@@Base+0x10af>
  424e04:	cmp    DWORD PTR [r12+0x11c],0x0
  424e0d:	je     4251ed <__flatcc_fb_build_schema@@Base+0x147d>
  424e13:	movzx  eax,ax
  424e16:	cmp    eax,0x1
  424e19:	jne    42520f <__flatcc_fb_build_schema@@Base+0x149f>
  424e1f:	mov    QWORD PTR [r14+0x90],r15
  424e26:	jmp    424745 <__flatcc_fb_build_schema@@Base+0x9d5>
  424e2b:	mov    rax,QWORD PTR [rsp+0x50]
  424e30:	mov    rsi,QWORD PTR [rax+0x8]
  424e34:	mov    r8,QWORD PTR [rax+0x10]
  424e38:	mov    r9d,DWORD PTR [rax+0x18]
  424e3c:	xor    ecx,ecx
  424e3e:	mov    rdi,r12
  424e41:	lea    rdx,[rip+0x23ef2]        # 448d3a <fb_schema_table_deleted@@Base+0x260a>
  424e48:	call   41ba60 <__flatcc_error_report@@Base>
  424e4d:	mov    r13,QWORD PTR [rsp+0x48]
  424e52:	mov    ebx,DWORD PTR [rsp+0x4]
  424e56:	jmp    424745 <__flatcc_fb_build_schema@@Base+0x9d5>
  424e5b:	test   r15,r15
  424e5e:	je     424e9b <__flatcc_fb_build_schema@@Base+0x112b>
  424e60:	movzx  eax,WORD PTR [r15+0x20]
  424e65:	cmp    eax,0x5
  424e68:	jne    425178 <__flatcc_fb_build_schema@@Base+0x1408>
  424e6e:	mov    rax,QWORD PTR [r15+0x10]
  424e72:	cmp    rax,QWORD PTR [r12+0x148]
  424e7a:	jae    4251b9 <__flatcc_fb_build_schema@@Base+0x1449>
  424e80:	movzx  eax,ax
  424e83:	mov    QWORD PTR [r14+0x88],rax
  424e8a:	mov    rcx,QWORD PTR [rsp+0x40]
  424e8f:	cmp    rax,rcx
  424e92:	cmova  rcx,rax
  424e96:	mov    QWORD PTR [rsp+0x40],rcx
  424e9b:	mov    DWORD PTR [rsp+0x4],0x0
  424ea3:	cmp    DWORD PTR [rsp+0x18],0x0
  424ea8:	je     424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  424eae:	mov    rax,QWORD PTR [r14+0x88]
  424eb5:	mov    rcx,QWORD PTR [rsp+0x30]
  424eba:	mov    cl,BYTE PTR [rcx+rax*1]
  424ebd:	test   cl,cl
  424ebf:	je     425231 <__flatcc_fb_build_schema@@Base+0x14c1>
  424ec5:	mov    DWORD PTR [rsp+0x8],edx
  424ec9:	cmp    cl,0x2
  424ecc:	jne    425244 <__flatcc_fb_build_schema@@Base+0x14d4>
  424ed2:	mov    rsi,QWORD PTR [r15+0x8]
  424ed6:	xor    ecx,ecx
  424ed8:	xor    r8d,r8d
  424edb:	xor    r9d,r9d
  424ede:	mov    rdi,r12
  424ee1:	lea    rdx,[rip+0x23b40]        # 448a28 <fb_schema_table_deleted@@Base+0x22f8>
  424ee8:	call   41ba60 <__flatcc_error_report@@Base>
  424eed:	mov    DWORD PTR [rsp+0x4],0x1
  424ef5:	lea    r15,[rip+0x23634]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  424efc:	jmp    425337 <__flatcc_fb_build_schema@@Base+0x15c7>
  424f01:	mov    rsi,QWORD PTR [r14+0x8]
  424f05:	mov    rcx,QWORD PTR [r14+0x18]
  424f09:	xor    r8d,r8d
  424f0c:	xor    r9d,r9d
  424f0f:	mov    rdi,r12
  424f12:	lea    rdx,[rip+0x239cb]        # 4488e4 <fb_schema_table_deleted@@Base+0x21b4>
  424f19:	jmp    425070 <__flatcc_fb_build_schema@@Base+0x1300>
  424f1e:	test   BYTE PTR [r14+0x71],0x1
  424f23:	je     424f40 <__flatcc_fb_build_schema@@Base+0x11d0>
  424f25:	mov    rsi,QWORD PTR [r14+0x8]
  424f29:	xor    ecx,ecx
  424f2b:	xor    r8d,r8d
  424f2e:	xor    r9d,r9d
  424f31:	mov    rdi,r12
  424f34:	lea    rdx,[rip+0x2381c]        # 448757 <fb_schema_table_deleted@@Base+0x2027>
  424f3b:	call   41ba60 <__flatcc_error_report@@Base>
  424f40:	mov    edx,DWORD PTR [r12+0x100]
  424f48:	mov    WORD PTR [r14+0x28],0xe
  424f4f:	mov    QWORD PTR [r14+0x18],rbx
  424f53:	mov    rax,QWORD PTR [rbx+0xb8]
  424f5a:	mov    QWORD PTR [r14+0x80],rax
  424f61:	movzx  eax,WORD PTR [rbx+0xb0]
  424f68:	mov    WORD PTR [r14+0x72],ax
  424f6d:	movzx  eax,WORD PTR [rbx+0x10]
  424f71:	cmp    DWORD PTR [rsp+0x4],0x0
  424f76:	jne    424f99 <__flatcc_fb_build_schema@@Base+0x1229>
  424f78:	movzx  ecx,ax
  424f7b:	cmp    ecx,0x4
  424f7e:	jne    424f99 <__flatcc_fb_build_schema@@Base+0x1229>
  424f80:	cmp    DWORD PTR [rsp+0x18],0x0
  424f85:	jne    424f93 <__flatcc_fb_build_schema@@Base+0x1223>
  424f87:	movzx  ecx,WORD PTR [rsp+0x20]
  424f8c:	mov    QWORD PTR [r14+0x88],rcx
  424f93:	add    QWORD PTR [rsp+0x20],0x1
  424f99:	lea    rcx,[r14+0x48]
  424f9d:	movzx  esi,WORD PTR [r14+0x58]
  424fa2:	movzx  eax,ax
  424fa5:	test   si,si
  424fa8:	je     42508d <__flatcc_fb_build_schema@@Base+0x131d>
  424fae:	cmp    eax,0x3
  424fb1:	jne    42505a <__flatcc_fb_build_schema@@Base+0x12ea>
  424fb7:	movzx  eax,si
  424fba:	cmp    eax,0xd
  424fbd:	mov    DWORD PTR [rsp+0x8],edx
  424fc1:	mov    QWORD PTR [rsp+0x38],rcx
  424fc6:	jne    425124 <__flatcc_fb_build_schema@@Base+0x13b4>
  424fcc:	mov    rsi,QWORD PTR [r13+0x18]
  424fd0:	mov    rax,QWORD PTR [rcx]
  424fd3:	mov    QWORD PTR [rsp+0x28],0x0
  424fdc:	test   rax,rax
  424fdf:	je     425bb3 <__flatcc_fb_build_schema@@Base+0x1e43>
  424fe5:	mov    rdi,r12
  424fe8:	mov    QWORD PTR [rsp+0x48],rax
  424fed:	mov    rdx,rax
  424ff0:	lea    rcx,[rsp+0x28]
  424ff5:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  424ffa:	test   rax,rax
  424ffd:	je     425008 <__flatcc_fb_build_schema@@Base+0x1298>
  424fff:	movzx  ecx,WORD PTR [rax+0x10]
  425003:	cmp    ecx,0x3
  425006:	je     42501a <__flatcc_fb_build_schema@@Base+0x12aa>
  425008:	mov    rax,QWORD PTR [rsp+0x48]
  42500d:	cmp    QWORD PTR [rax],0x0
  425011:	mov    rax,rbx
  425014:	jne    4251a6 <__flatcc_fb_build_schema@@Base+0x1436>
  42501a:	add    rax,0x60
  42501e:	mov    rcx,QWORD PTR [rsp+0x28]
  425023:	mov    rcx,QWORD PTR [rcx+0x8]
  425027:	mov    rsi,QWORD PTR [rcx]
  42502a:	mov    rdx,QWORD PTR [rcx+0x8]
  42502e:	mov    rdi,rax
  425031:	call   419700 <fb_symbol_table_find@@Base>
  425036:	test   rax,rax
  425039:	je     4251a6 <__flatcc_fb_build_schema@@Base+0x1436>
  42503f:	mov    rcx,QWORD PTR [rax+0x58]
  425043:	mov    rdx,QWORD PTR [rsp+0x38]
  425048:	mov    QWORD PTR [rdx+0x10],rcx
  42504c:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  425051:	vmovups XMMWORD PTR [rdx],xmm0
  425055:	jmp    425164 <__flatcc_fb_build_schema@@Base+0x13f4>
  42505a:	mov    rsi,QWORD PTR [r14+0x8]
  42505e:	xor    ecx,ecx
  425060:	xor    r8d,r8d
  425063:	xor    r9d,r9d
  425066:	mov    rdi,r12
  425069:	lea    rdx,[rip+0x2376f]        # 4487df <fb_schema_table_deleted@@Base+0x20af>
  425070:	call   41ba60 <__flatcc_error_report@@Base>
  425075:	mov    WORD PTR [r14+0x28],0x1
  42507c:	lea    r15,[rip+0x234ad]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  425083:	mov    rbx,QWORD PTR [rsp+0x10]
  425088:	jmp    425372 <__flatcc_fb_build_schema@@Base+0x1602>
  42508d:	cmp    eax,0x3
  425090:	jne    424c1d <__flatcc_fb_build_schema@@Base+0xead>
  425096:	mov    DWORD PTR [rsp+0x8],edx
  42509a:	mov    WORD PTR [r14+0x58],0x5
  4250a1:	mov    QWORD PTR [r14+0x48],0x0
  4250a9:	mov    edx,DWORD PTR [rbx+0x48]
  4250ac:	mov    rdi,r12
  4250af:	mov    rsi,rbx
  4250b2:	mov    QWORD PTR [rsp+0x38],rcx
  4250b7:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  4250bc:	test   eax,eax
  4250be:	jne    425075 <__flatcc_fb_build_schema@@Base+0x1305>
  4250c0:	mov    rsi,QWORD PTR [rsp+0x38]
  4250c5:	cmp    DWORD PTR [r12+0x140],0x0
  4250ce:	je     425164 <__flatcc_fb_build_schema@@Base+0x13f4>
  4250d4:	mov    rdi,QWORD PTR [r14+0x18]
  4250d8:	mov    eax,0x80
  4250dd:	add    rdi,rax
  4250e0:	call   42d2d0 <fb_value_set_find_item@@Base>
  4250e5:	test   rax,rax
  4250e8:	jne    425164 <__flatcc_fb_build_schema@@Base+0x13f4>
  4250ea:	mov    rsi,QWORD PTR [r14+0x8]
  4250ee:	mov    rcx,QWORD PTR [rbx+0x8]
  4250f2:	xor    r8d,r8d
  4250f5:	xor    r9d,r9d
  4250f8:	mov    rdi,r12
  4250fb:	lea    rdx,[rip+0x23769]        # 44886b <fb_schema_table_deleted@@Base+0x213b>
  425102:	jmp    425070 <__flatcc_fb_build_schema@@Base+0x1300>
  425107:	mov    rsi,QWORD PTR [r14+0x8]
  42510b:	mov    rcx,QWORD PTR [rbx+0x8]
  42510f:	xor    r8d,r8d
  425112:	xor    r9d,r9d
  425115:	mov    rdi,r12
  425118:	lea    rdx,[rip+0x2369a]        # 4487b9 <fb_schema_table_deleted@@Base+0x2089>
  42511f:	jmp    425070 <__flatcc_fb_build_schema@@Base+0x1300>
  425124:	mov    edx,DWORD PTR [rbx+0x48]
  425127:	mov    rdi,r12
  42512a:	mov    rsi,r14
  42512d:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  425132:	test   eax,eax
  425134:	jne    425075 <__flatcc_fb_build_schema@@Base+0x1305>
  42513a:	mov    rsi,QWORD PTR [rsp+0x38]
  42513f:	cmp    DWORD PTR [r12+0x140],0x0
  425148:	je     425164 <__flatcc_fb_build_schema@@Base+0x13f4>
  42514a:	mov    rdi,QWORD PTR [r14+0x18]
  42514e:	mov    eax,0x80
  425153:	add    rdi,rax
  425156:	call   42d2d0 <fb_value_set_find_item@@Base>
  42515b:	test   rax,rax
  42515e:	je     4252dc <__flatcc_fb_build_schema@@Base+0x156c>
  425164:	mov    edx,DWORD PTR [rsp+0x8]
  425168:	cmp    DWORD PTR [rsp+0x4],0x0
  42516d:	jne    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  425173:	jmp    424ba2 <__flatcc_fb_build_schema@@Base+0xe32>
  425178:	mov    DWORD PTR [rsp+0x8],edx
  42517c:	movzx  eax,ax
  42517f:	mov    rsi,QWORD PTR [r15+0x8]
  425183:	cmp    eax,0x4
  425186:	lea    rbx,[rip+0x233a3]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  42518d:	jne    4251d6 <__flatcc_fb_build_schema@@Base+0x1466>
  42518f:	xor    ecx,ecx
  425191:	xor    r8d,r8d
  425194:	xor    r9d,r9d
  425197:	mov    rdi,r12
  42519a:	lea    rdx,[rip+0x2384b]        # 4489ec <fb_schema_table_deleted@@Base+0x22bc>
  4251a1:	jmp    425327 <__flatcc_fb_build_schema@@Base+0x15b7>
  4251a6:	mov    rsi,QWORD PTR [r14+0x48]
  4251aa:	mov    rdi,r12
  4251ad:	lea    rdx,[rip+0x23657]        # 44880b <fb_schema_table_deleted@@Base+0x20db>
  4251b4:	jmp    424c06 <__flatcc_fb_build_schema@@Base+0xe96>
  4251b9:	mov    rsi,QWORD PTR [r14+0x8]
  4251bd:	xor    ecx,ecx
  4251bf:	xor    r8d,r8d
  4251c2:	xor    r9d,r9d
  4251c5:	mov    rdi,r12
  4251c8:	mov    ebx,edx
  4251ca:	lea    rdx,[rip+0x237fd]        # 4489ce <fb_schema_table_deleted@@Base+0x229e>
  4251d1:	jmp    424bd7 <__flatcc_fb_build_schema@@Base+0xe67>
  4251d6:	xor    ecx,ecx
  4251d8:	xor    r8d,r8d
  4251db:	xor    r9d,r9d
  4251de:	mov    rdi,r12
  4251e1:	lea    rdx,[rip+0x23824]        # 448a0c <fb_schema_table_deleted@@Base+0x22dc>
  4251e8:	jmp    425327 <__flatcc_fb_build_schema@@Base+0x15b7>
  4251ed:	mov    rax,QWORD PTR [rsp+0x50]
  4251f2:	mov    rsi,QWORD PTR [rax+0x8]
  4251f6:	mov    rcx,QWORD PTR [r15+0x8]
  4251fa:	xor    r8d,r8d
  4251fd:	xor    r9d,r9d
  425200:	mov    rdi,r12
  425203:	lea    rdx,[rip+0x23b4b]        # 448d55 <fb_schema_table_deleted@@Base+0x2625>
  42520a:	jmp    424740 <__flatcc_fb_build_schema@@Base+0x9d0>
  42520f:	mov    rax,QWORD PTR [rsp+0x50]
  425214:	mov    rsi,QWORD PTR [rax+0x8]
  425218:	mov    rcx,QWORD PTR [r15+0x8]
  42521c:	xor    r8d,r8d
  42521f:	xor    r9d,r9d
  425222:	mov    rdi,r12
  425225:	lea    rdx,[rip+0x23b54]        # 448d80 <fb_schema_table_deleted@@Base+0x2650>
  42522c:	jmp    424740 <__flatcc_fb_build_schema@@Base+0x9d0>
  425231:	mov    rcx,QWORD PTR [rsp+0x30]
  425236:	mov    BYTE PTR [rcx+rax*1],0x1
  42523a:	test   rbx,rbx
  42523d:	jne    42526c <__flatcc_fb_build_schema@@Base+0x14fc>
  42523f:	jmp    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  425244:	mov    rsi,QWORD PTR [r15+0x8]
  425248:	xor    ecx,ecx
  42524a:	xor    r8d,r8d
  42524d:	xor    r9d,r9d
  425250:	mov    rdi,r12
  425253:	lea    rdx,[rip+0x23804]        # 448a5e <fb_schema_table_deleted@@Base+0x232e>
  42525a:	call   41ba60 <__flatcc_error_report@@Base>
  42525f:	mov    edx,DWORD PTR [rsp+0x8]
  425263:	test   rbx,rbx
  425266:	je     424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  42526c:	movzx  eax,WORD PTR [rbx+0x10]
  425270:	cmp    eax,0x4
  425273:	jne    424c28 <__flatcc_fb_build_schema@@Base+0xeb8>
  425279:	mov    DWORD PTR [rsp+0x8],edx
  42527d:	movzx  eax,WORD PTR [r14+0x28]
  425282:	mov    rcx,QWORD PTR [r14+0x88]
  425289:	cmp    rcx,0x1
  42528d:	lea    rbx,[rip+0x2329c]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  425294:	ja     4252b0 <__flatcc_fb_build_schema@@Base+0x1540>
  425296:	movzx  eax,ax
  425299:	cmp    eax,0xb
  42529c:	mov    rsi,QWORD PTR [r15+0x8]
  4252a0:	lea    rdx,[rip+0x23837]        # 448ade <fb_schema_table_deleted@@Base+0x23ae>
  4252a7:	lea    rax,[rip+0x237e0]        # 448a8e <fb_schema_table_deleted@@Base+0x235e>
  4252ae:	jmp    425318 <__flatcc_fb_build_schema@@Base+0x15a8>
  4252b0:	mov    rdx,QWORD PTR [rsp+0x30]
  4252b5:	mov    dl,BYTE PTR [rdx+rcx*1-0x1]
  4252b9:	test   dl,dl
  4252bb:	je     4252f7 <__flatcc_fb_build_schema@@Base+0x1587>
  4252bd:	movzx  eax,ax
  4252c0:	cmp    dl,0x2
  4252c3:	jne    425303 <__flatcc_fb_build_schema@@Base+0x1593>
  4252c5:	cmp    eax,0xb
  4252c8:	mov    rsi,QWORD PTR [r15+0x8]
  4252cc:	lea    rdx,[rip+0x238b5]        # 448b88 <fb_schema_table_deleted@@Base+0x2458>
  4252d3:	lea    rax,[rip+0x2384d]        # 448b27 <fb_schema_table_deleted@@Base+0x23f7>
  4252da:	jmp    425318 <__flatcc_fb_build_schema@@Base+0x15a8>
  4252dc:	mov    rsi,QWORD PTR [r14+0x8]
  4252e0:	xor    ecx,ecx
  4252e2:	xor    r8d,r8d
  4252e5:	xor    r9d,r9d
  4252e8:	mov    rdi,r12
  4252eb:	lea    rdx,[rip+0x23549]        # 44883b <fb_schema_table_deleted@@Base+0x210b>
  4252f2:	jmp    425070 <__flatcc_fb_build_schema@@Base+0x1300>
  4252f7:	mov    rax,QWORD PTR [rsp+0x30]
  4252fc:	mov    BYTE PTR [rax+rcx*1-0x1],0x2
  425301:	jmp    425334 <__flatcc_fb_build_schema@@Base+0x15c4>
  425303:	cmp    eax,0xb
  425306:	mov    rsi,QWORD PTR [r15+0x8]
  42530a:	lea    rdx,[rip+0x23926]        # 448c37 <fb_schema_table_deleted@@Base+0x2507>
  425311:	lea    rax,[rip+0x238ca]        # 448be2 <fb_schema_table_deleted@@Base+0x24b2>
  425318:	cmove  rdx,rax
  42531c:	xor    ecx,ecx
  42531e:	xor    r8d,r8d
  425321:	xor    r9d,r9d
  425324:	mov    rdi,r12
  425327:	call   41ba60 <__flatcc_error_report@@Base>
  42532c:	mov    DWORD PTR [rsp+0x4],0x1
  425334:	mov    r15,rbx
  425337:	mov    edx,DWORD PTR [rsp+0x8]
  42533b:	jmp    424c2f <__flatcc_fb_build_schema@@Base+0xebf>
  425340:	mov    edx,0x1
  425345:	mov    rdi,rbx
  425348:	mov    rsi,r14
  42534b:	call   4196e0 <fb_symbol_table_insert_item@@Base>
  425350:	test   rax,rax
  425353:	je     424640 <__flatcc_fb_build_schema@@Base+0x8d0>
  425359:	mov    rsi,QWORD PTR [r14+0x8]
  42535d:	mov    rcx,QWORD PTR [rax+0x8]
  425361:	xor    r8d,r8d
  425364:	xor    r9d,r9d
  425367:	mov    rdi,r12
  42536a:	mov    rdx,r15
  42536d:	call   41ba60 <__flatcc_error_report@@Base>
  425372:	mov    r14,QWORD PTR [r14]
  425375:	test   r14,r14
  425378:	jne    425340 <__flatcc_fb_build_schema@@Base+0x15d0>
  42537a:	mov    ecx,DWORD PTR [rsp+0x4]
  42537e:	test   ecx,ecx
  425380:	je     425606 <__flatcc_fb_build_schema@@Base+0x1896>
  425386:	xor    eax,eax
  425388:	mov    rdx,QWORD PTR [rsp+0x20]
  42538d:	mov    ebx,ecx
  42538f:	mov    ecx,DWORD PTR [rsp+0x1c]
  425393:	cmp    QWORD PTR [rsp+0x40],rdx
  425398:	jae    425625 <__flatcc_fb_build_schema@@Base+0x18b5>
  42539e:	jmp    4256df <__flatcc_fb_build_schema@@Base+0x196f>
  4253a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253ad:	nop    DWORD PTR [rax]
  4253b0:	movzx  eax,WORD PTR [r13+0x58]
  4253b5:	cmp    eax,0x1
  4253b8:	je     425730 <__flatcc_fb_build_schema@@Base+0x19c0>
  4253be:	test   ax,ax
  4253c1:	jne    425b94 <__flatcc_fb_build_schema@@Base+0x1e24>
  4253c7:	cmp    QWORD PTR [r13+0x38],0x0
  4253cc:	lea    r15,[rip+0x23aab]        # 448e7e <fb_schema_table_deleted@@Base+0x274e>
  4253d3:	je     4253f0 <__flatcc_fb_build_schema@@Base+0x1680>
  4253d5:	mov    rsi,QWORD PTR [r13+0x8]
  4253d9:	xor    ecx,ecx
  4253db:	xor    r8d,r8d
  4253de:	xor    r9d,r9d
  4253e1:	mov    rdi,r12
  4253e4:	lea    rdx,[rip+0x23a6f]        # 448e5a <fb_schema_table_deleted@@Base+0x272a>
  4253eb:	call   41ba60 <__flatcc_error_report@@Base>
  4253f0:	mov    rbx,QWORD PTR [r13+0x28]
  4253f4:	test   rbx,rbx
  4253f7:	je     4255fa <__flatcc_fb_build_schema@@Base+0x188a>
  4253fd:	lea    r14,[r13+0x60]
  425401:	jmp    425560 <__flatcc_fb_build_schema@@Base+0x17f0>
  425406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425410:	movzx  eax,WORD PTR [rbx+0x10]
  425414:	cmp    eax,0x5
  425417:	jne    4255d8 <__flatcc_fb_build_schema@@Base+0x1868>
  42541d:	cmp    WORD PTR [rbx+0x58],0x0
  425422:	je     42543f <__flatcc_fb_build_schema@@Base+0x16cf>
  425424:	mov    rsi,QWORD PTR [rbx+0x8]
  425428:	xor    ecx,ecx
  42542a:	xor    r8d,r8d
  42542d:	xor    r9d,r9d
  425430:	mov    rdi,r12
  425433:	lea    rdx,[rip+0x23a64]        # 448e9e <fb_schema_table_deleted@@Base+0x276e>
  42543a:	call   41ba60 <__flatcc_error_report@@Base>
  42543f:	movzx  eax,WORD PTR [rbx+0x28]
  425443:	cmp    eax,0x1
  425446:	je     425592 <__flatcc_fb_build_schema@@Base+0x1822>
  42544c:	movzx  eax,ax
  42544f:	cmp    eax,0xc
  425452:	je     42546f <__flatcc_fb_build_schema@@Base+0x16ff>
  425454:	mov    rsi,QWORD PTR [rbx+0x8]
  425458:	xor    ecx,ecx
  42545a:	xor    r8d,r8d
  42545d:	xor    r9d,r9d
  425460:	mov    rdi,r12
  425463:	lea    rdx,[rip+0x23a74]        # 448ede <fb_schema_table_deleted@@Base+0x27ae>
  42546a:	call   41ba60 <__flatcc_error_report@@Base>
  42546f:	mov    rsi,QWORD PTR [r13+0x18]
  425473:	mov    rdx,QWORD PTR [rbx+0x30]
  425477:	xor    ecx,ecx
  425479:	mov    rdi,r12
  42547c:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  425481:	test   rax,rax
  425484:	je     4254b5 <__flatcc_fb_build_schema@@Base+0x1745>
  425486:	cmp    WORD PTR [rax+0x10],0x0
  42548b:	je     4254d6 <__flatcc_fb_build_schema@@Base+0x1766>
  42548d:	mov    rsi,QWORD PTR [rbx+0x8]
  425491:	mov    rcx,QWORD PTR [rax+0x8]
  425495:	xor    r8d,r8d
  425498:	xor    r9d,r9d
  42549b:	mov    rdi,r12
  42549e:	lea    rdx,[rip+0x23aa8]        # 448f4d <fb_schema_table_deleted@@Base+0x281d>
  4254a5:	call   41ba60 <__flatcc_error_report@@Base>
  4254aa:	mov    WORD PTR [rbx+0x28],0x1
  4254b0:	jmp    425592 <__flatcc_fb_build_schema@@Base+0x1822>
  4254b5:	mov    rsi,QWORD PTR [rbx+0x30]
  4254b9:	mov    rdi,r12
  4254bc:	lea    rdx,[rip+0x23a58]        # 448f1b <fb_schema_table_deleted@@Base+0x27eb>
  4254c3:	mov    rcx,rbx
  4254c6:	call   41bc90 <error_ref_sym@@Base>
  4254cb:	mov    WORD PTR [rbx+0x28],0x1
  4254d1:	jmp    425592 <__flatcc_fb_build_schema@@Base+0x1822>
  4254d6:	mov    WORD PTR [rbx+0x40],0xe
  4254dc:	mov    QWORD PTR [rbx+0x30],rax
  4254e0:	mov    rsi,QWORD PTR [r13+0x18]
  4254e4:	mov    rdx,QWORD PTR [rbx+0x18]
  4254e8:	xor    ecx,ecx
  4254ea:	mov    rdi,r12
  4254ed:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  4254f2:	test   rax,rax
  4254f5:	je     425518 <__flatcc_fb_build_schema@@Base+0x17a8>
  4254f7:	cmp    WORD PTR [rax+0x10],0x0
  4254fc:	je     425528 <__flatcc_fb_build_schema@@Base+0x17b8>
  4254fe:	mov    rsi,QWORD PTR [rbx+0x8]
  425502:	mov    rcx,QWORD PTR [rax+0x8]
  425506:	xor    r8d,r8d
  425509:	xor    r9d,r9d
  42550c:	mov    rdi,r12
  42550f:	lea    rdx,[rip+0x23aa0]        # 448fb6 <fb_schema_table_deleted@@Base+0x2886>
  425516:	jmp    4254a5 <__flatcc_fb_build_schema@@Base+0x1735>
  425518:	mov    rsi,QWORD PTR [rbx+0x18]
  42551c:	mov    rdi,r12
  42551f:	lea    rdx,[rip+0x23a5d]        # 448f83 <fb_schema_table_deleted@@Base+0x2853>
  425526:	jmp    4254c3 <__flatcc_fb_build_schema@@Base+0x1753>
  425528:	mov    WORD PTR [rbx+0x28],0xe
  42552e:	mov    QWORD PTR [rbx+0x18],rax
  425532:	mov    QWORD PTR [rbx+0x80],0x0
  42553d:	mov    rsi,QWORD PTR [rbx+0x60]
  425541:	mov    edx,0x4
  425546:	mov    rdi,r12
  425549:	lea    rcx,[rsp+0x60]
  42554e:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  425553:	mov    WORD PTR [rbx+0x70],ax
  425557:	jmp    425592 <__flatcc_fb_build_schema@@Base+0x1822>
  425559:	nop    DWORD PTR [rax+0x0]
  425560:	mov    edx,0x1
  425565:	mov    rdi,r14
  425568:	mov    rsi,rbx
  42556b:	call   4196e0 <fb_symbol_table_insert_item@@Base>
  425570:	test   rax,rax
  425573:	je     425410 <__flatcc_fb_build_schema@@Base+0x16a0>
  425579:	mov    rsi,QWORD PTR [rbx+0x8]
  42557d:	mov    rcx,QWORD PTR [rax+0x8]
  425581:	xor    r8d,r8d
  425584:	xor    r9d,r9d
  425587:	mov    rdi,r12
  42558a:	mov    rdx,r15
  42558d:	call   41ba60 <__flatcc_error_report@@Base>
  425592:	mov    rbx,QWORD PTR [rbx]
  425595:	test   rbx,rbx
  425598:	jne    425560 <__flatcc_fb_build_schema@@Base+0x17f0>
  42559a:	jmp    4255fa <__flatcc_fb_build_schema@@Base+0x188a>
  42559c:	xor    eax,eax
  42559e:	mov    QWORD PTR [rsp+0x30],rax
  4255a3:	xor    ecx,ecx
  4255a5:	xor    eax,eax
  4255a7:	mov    QWORD PTR [rsp+0x40],rax
  4255ac:	mov    DWORD PTR [rsp+0x18],0x0
  4255b4:	xor    edx,edx
  4255b6:	jmp    42560f <__flatcc_fb_build_schema@@Base+0x189f>
  4255b8:	mov    rsi,QWORD PTR [r14+0x8]
  4255bc:	xor    ecx,ecx
  4255be:	xor    r8d,r8d
  4255c1:	xor    r9d,r9d
  4255c4:	mov    rdi,r12
  4255c7:	lea    rdx,[rip+0x22f84]        # 448552 <fb_schema_table_deleted@@Base+0x1e22>
  4255ce:	call   41ba60 <__flatcc_error_report@@Base>
  4255d3:	jmp    425728 <__flatcc_fb_build_schema@@Base+0x19b8>
  4255d8:	mov    rsi,QWORD PTR [rbx+0x8]
  4255dc:	xor    ecx,ecx
  4255de:	xor    r8d,r8d
  4255e1:	xor    r9d,r9d
  4255e4:	mov    rdi,r12
  4255e7:	lea    rdx,[rip+0x22f64]        # 448552 <fb_schema_table_deleted@@Base+0x1e22>
  4255ee:	call   41ba60 <__flatcc_error_report@@Base>
  4255f3:	mov    WORD PTR [r13+0x58],0x1
  4255fa:	lea    r15,[rip+0x22f2f]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  425601:	jmp    425730 <__flatcc_fb_build_schema@@Base+0x19c0>
  425606:	mov    ecx,DWORD PTR [rsp+0x1c]
  42560a:	mov    rdx,QWORD PTR [rsp+0x20]
  42560f:	mov    QWORD PTR [r13+0xa8],rdx
  425616:	mov    al,0x1
  425618:	xor    ebx,ebx
  42561a:	cmp    QWORD PTR [rsp+0x40],rdx
  42561f:	jb     4256df <__flatcc_fb_build_schema@@Base+0x196f>
  425625:	test   rdx,rdx
  425628:	je     4256df <__flatcc_fb_build_schema@@Base+0x196f>
  42562e:	test   al,al
  425630:	je     4256df <__flatcc_fb_build_schema@@Base+0x196f>
  425636:	cmp    DWORD PTR [rsp+0x18],0x0
  42563b:	je     4256df <__flatcc_fb_build_schema@@Base+0x196f>
  425641:	mov    ebx,0x1
  425646:	cmp    QWORD PTR [rsp+0x40],0x0
  42564c:	je     4256df <__flatcc_fb_build_schema@@Base+0x196f>
  425652:	mov    DWORD PTR [rsp+0x1c],ecx
  425656:	mov    r14d,0xa
  42565c:	xor    ebx,ebx
  42565e:	xchg   ax,ax
  425660:	mov    rax,QWORD PTR [rsp+0x30]
  425665:	cmp    BYTE PTR [rax+rbx*1],0x0
  425669:	jne    4256a7 <__flatcc_fb_build_schema@@Base+0x1937>
  42566b:	test   r14d,r14d
  42566e:	je     4256b4 <__flatcc_fb_build_schema@@Base+0x1944>
  425670:	add    r14d,0xffffffff
  425674:	xor    eax,eax
  425676:	lea    r15,[rsp+0xc0]
  42567e:	mov    rdi,r15
  425681:	lea    rsi,[rip+0x23644]        # 448ccc <fb_schema_table_deleted@@Base+0x259c>
  425688:	mov    rdx,rbx
  42568b:	call   4061f0 <sprintf@plt>
  425690:	mov    rsi,QWORD PTR [r13+0x8]
  425694:	xor    ecx,ecx
  425696:	xor    r8d,r8d
  425699:	xor    r9d,r9d
  42569c:	mov    rdi,r12
  42569f:	mov    rdx,r15
  4256a2:	call   41ba60 <__flatcc_error_report@@Base>
  4256a7:	add    rbx,0x1
  4256ab:	cmp    rbx,QWORD PTR [rsp+0x40]
  4256b0:	jb     425660 <__flatcc_fb_build_schema@@Base+0x18f0>
  4256b2:	jmp    4256cf <__flatcc_fb_build_schema@@Base+0x195f>
  4256b4:	mov    rsi,QWORD PTR [r13+0x8]
  4256b8:	xor    ecx,ecx
  4256ba:	xor    r8d,r8d
  4256bd:	xor    r9d,r9d
  4256c0:	mov    rdi,r12
  4256c3:	lea    rdx,[rip+0x235ec]        # 448cb6 <fb_schema_table_deleted@@Base+0x2586>
  4256ca:	call   41ba60 <__flatcc_error_report@@Base>
  4256cf:	lea    r15,[rip+0x22e5a]        # 448530 <fb_schema_table_deleted@@Base+0x1e00>
  4256d6:	mov    ebx,0x1
  4256db:	mov    ecx,DWORD PTR [rsp+0x1c]
  4256df:	xor    eax,eax
  4256e1:	test   ecx,ecx
  4256e3:	je     4256fa <__flatcc_fb_build_schema@@Base+0x198a>
  4256e5:	or     BYTE PTR [r13+0x12],0x8
  4256ea:	cmp    ecx,0x2
  4256ed:	jl     4256fa <__flatcc_fb_build_schema@@Base+0x198a>
  4256ef:	cmp    DWORD PTR [r12+0x108],0x0
  4256f8:	je     425704 <__flatcc_fb_build_schema@@Base+0x1994>
  4256fa:	test   ebx,ebx
  4256fc:	jne    425728 <__flatcc_fb_build_schema@@Base+0x19b8>
  4256fe:	test   eax,eax
  425700:	jne    425728 <__flatcc_fb_build_schema@@Base+0x19b8>
  425702:	jmp    425730 <__flatcc_fb_build_schema@@Base+0x19c0>
  425704:	mov    rsi,QWORD PTR [r13+0x8]
  425708:	xor    ecx,ecx
  42570a:	xor    r8d,r8d
  42570d:	xor    r9d,r9d
  425710:	mov    rdi,r12
  425713:	lea    rdx,[rip+0x22b88]        # 4482a2 <fb_schema_table_deleted@@Base+0x1b72>
  42571a:	call   41ba60 <__flatcc_error_report@@Base>
  42571f:	mov    eax,0xffffffff
  425724:	test   ebx,ebx
  425726:	je     4256fe <__flatcc_fb_build_schema@@Base+0x198e>
  425728:	mov    WORD PTR [r13+0x58],0x1
  42572f:	nop
  425730:	mov    r13,QWORD PTR [r13+0x0]
  425734:	test   r13,r13
  425737:	jne    4245a0 <__flatcc_fb_build_schema@@Base+0x830>
  42573d:	mov    rax,QWORD PTR [r12+0x240]
  425745:	test   rax,rax
  425748:	je     42576b <__flatcc_fb_build_schema@@Base+0x19fb>
  42574a:	xor    edx,edx
  42574c:	nop    DWORD PTR [rax+0x0]
  425750:	mov    rcx,rax
  425753:	mov    rax,QWORD PTR [rax+0xc0]
  42575a:	mov    QWORD PTR [rcx+0xc0],rdx
  425761:	mov    rdx,rcx
  425764:	test   rax,rax
  425767:	jne    425750 <__flatcc_fb_build_schema@@Base+0x19e0>
  425769:	jmp    42576d <__flatcc_fb_build_schema@@Base+0x19fd>
  42576b:	xor    ecx,ecx
  42576d:	mov    QWORD PTR [r12+0x240],rcx
  425775:	mov    rax,QWORD PTR [r12+0x238]
  42577d:	test   rax,rax
  425780:	je     425a1c <__flatcc_fb_build_schema@@Base+0x1cac>
  425786:	lea    r9,[rsp+0x100]
  42578e:	vxorps xmm0,xmm0,xmm0
  425792:	mov    edx,0x8680
  425797:	lea    r8,[rsp+0x28]
  42579c:	lea    r10,[rsp+0xc0]
  4257a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4257ae:	xchg   ax,ax
  4257b0:	cmp    WORD PTR [rax+0x10],0x0
  4257b5:	jne    425a10 <__flatcc_fb_build_schema@@Base+0x1ca0>
  4257bb:	test   BYTE PTR [rax+0xa4],0x8
  4257c2:	mov    rbx,QWORD PTR [rax+0x28]
  4257c6:	jne    42591a <__flatcc_fb_build_schema@@Base+0x1baa>
  4257cc:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4257d5:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4257de:	mov    QWORD PTR [rsp+0x100],0x0
  4257ea:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4257f3:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4257f9:	mov    QWORD PTR [rsp+0xa0],0x0
  425805:	test   rbx,rbx
  425808:	je     425970 <__flatcc_fb_build_schema@@Base+0x1c00>
  42580e:	mov    rsi,rbx
  425811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42581b:	nop    DWORD PTR [rax+rax*1+0x0]
  425820:	movzx  ecx,WORD PTR [rsi+0x28]
  425824:	cmp    ecx,0xf
  425827:	ja     425908 <__flatcc_fb_build_schema@@Base+0x1b98>
  42582d:	bt     edx,ecx
  425830:	jae    4258c0 <__flatcc_fb_build_schema@@Base+0x1b50>
  425836:	movzx  ecx,WORD PTR [r12+0x12c]
  42583f:	test   cx,cx
  425842:	je     425b0a <__flatcc_fb_build_schema@@Base+0x1d9a>
  425848:	movzx  ecx,cx
  42584b:	shr    ecx,1
  42584d:	lzcnt  di,cx
  425852:	mov    ecx,0x10
  425857:	sub    ecx,edi
  425859:	movzx  edi,cx
  42585c:	cmp    edi,0x7
  42585f:	jb     425866 <__flatcc_fb_build_schema@@Base+0x1af6>
  425861:	mov    ecx,0x7
  425866:	movzx  edi,cx
  425869:	cmp    QWORD PTR [rsp+rdi*8+0xc0],0x0
  425872:	je     425890 <__flatcc_fb_build_schema@@Base+0x1b20>
  425874:	lea    rcx,[rsp+rdi*8]
  425878:	add    rcx,0x60
  42587c:	mov    rdi,QWORD PTR [rsp+rdi*8+0x60]
  425881:	mov    QWORD PTR [rdi],rsi
  425884:	jmp    4258a0 <__flatcc_fb_build_schema@@Base+0x1b30>
  425886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425890:	mov    QWORD PTR [rsp+rdi*8+0xc0],rsi
  425898:	lea    rcx,[rsp+rdi*8]
  42589c:	add    rcx,0x60
  4258a0:	lea    rdi,[rsi+0x98]
  4258a7:	mov    QWORD PTR [rcx],rdi
  4258aa:	mov    rsi,QWORD PTR [rsi]
  4258ad:	test   rsi,rsi
  4258b0:	jne    425820 <__flatcc_fb_build_schema@@Base+0x1ab0>
  4258b6:	jmp    425970 <__flatcc_fb_build_schema@@Base+0x1c00>
  4258bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4258c0:	movzx  ecx,cx
  4258c3:	cmp    ecx,0xe
  4258c6:	jne    4258ff <__flatcc_fb_build_schema@@Base+0x1b8f>
  4258c8:	mov    rcx,QWORD PTR [rsi+0x18]
  4258cc:	movzx  edi,WORD PTR [rcx+0x10]
  4258d0:	cmp    edi,0x1
  4258d3:	je     4258ea <__flatcc_fb_build_schema@@Base+0x1b7a>
  4258d5:	movzx  edi,di
  4258d8:	cmp    edi,0x4
  4258db:	je     425836 <__flatcc_fb_build_schema@@Base+0x1ac6>
  4258e1:	cmp    edi,0x3
  4258e4:	jne    425836 <__flatcc_fb_build_schema@@Base+0x1ac6>
  4258ea:	movzx  ecx,WORD PTR [rcx+0xb0]
  4258f1:	test   cx,cx
  4258f4:	jne    425848 <__flatcc_fb_build_schema@@Base+0x1ad8>
  4258fa:	jmp    425b0a <__flatcc_fb_build_schema@@Base+0x1d9a>
  4258ff:	cmp    ecx,0x1
  425902:	je     4259d4 <__flatcc_fb_build_schema@@Base+0x1c64>
  425908:	movzx  ecx,WORD PTR [rsi+0x72]
  42590c:	test   cx,cx
  42590f:	jne    425848 <__flatcc_fb_build_schema@@Base+0x1ad8>
  425915:	jmp    425b0a <__flatcc_fb_build_schema@@Base+0x1d9a>
  42591a:	mov    QWORD PTR [rsp+0xc0],0x0
  425926:	mov    rcx,r10
  425929:	test   rbx,rbx
  42592c:	je     425958 <__flatcc_fb_build_schema@@Base+0x1be8>
  42592e:	mov    rcx,r10
  425931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42593b:	nop    DWORD PTR [rax+rax*1+0x0]
  425940:	mov    QWORD PTR [rcx],rbx
  425943:	mov    rcx,rbx
  425946:	mov    rsi,QWORD PTR [rbx]
  425949:	add    rcx,0x98
  425950:	mov    rbx,rsi
  425953:	test   rsi,rsi
  425956:	jne    425940 <__flatcc_fb_build_schema@@Base+0x1bd0>
  425958:	mov    QWORD PTR [rcx],0x0
  42595f:	mov    rcx,QWORD PTR [rsp+0xc0]
  425967:	mov    QWORD PTR [rax+0x30],rcx
  42596b:	jmp    425a10 <__flatcc_fb_build_schema@@Base+0x1ca0>
  425970:	mov    QWORD PTR [rsp+0xa0],r9
  425978:	mov    si,0x8
  42597c:	nop    DWORD PTR [rax+0x0]
  425980:	movzx  ebx,si
  425983:	mov    rsi,rbx
  425986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425990:	test   rsi,rsi
  425993:	je     4259b0 <__flatcc_fb_build_schema@@Base+0x1c40>
  425995:	lea    ecx,[rsi-0x1]
  425998:	movzx  ecx,cx
  42599b:	add    rsi,0xffffffffffffffff
  42599f:	cmp    QWORD PTR [rsp+rcx*8+0xc0],0x0
  4259a8:	je     425990 <__flatcc_fb_build_schema@@Base+0x1c20>
  4259aa:	jmp    4259b2 <__flatcc_fb_build_schema@@Base+0x1c42>
  4259ac:	nop    DWORD PTR [rax+0x0]
  4259b0:	xor    esi,esi
  4259b2:	movzx  ecx,si
  4259b5:	mov    rdi,QWORD PTR [rsp+rcx*8+0xc0]
  4259bd:	mov    rbx,QWORD PTR [rsp+rbx*8+0x60]
  4259c2:	mov    QWORD PTR [rbx],rdi
  4259c5:	test   cx,cx
  4259c8:	jne    425980 <__flatcc_fb_build_schema@@Base+0x1c10>
  4259ca:	mov    rsi,QWORD PTR [rsp+0x100]
  4259d2:	jmp    425a04 <__flatcc_fb_build_schema@@Base+0x1c94>
  4259d4:	mov    QWORD PTR [rsp+0x28],0x0
  4259dd:	mov    rcx,r8
  4259e0:	mov    QWORD PTR [rcx],rbx
  4259e3:	mov    rcx,rbx
  4259e6:	mov    rsi,QWORD PTR [rbx]
  4259e9:	add    rcx,0x98
  4259f0:	mov    rbx,rsi
  4259f3:	test   rsi,rsi
  4259f6:	jne    4259e0 <__flatcc_fb_build_schema@@Base+0x1c70>
  4259f8:	mov    rsi,QWORD PTR [rsp+0x28]
  4259fd:	mov    QWORD PTR [rcx],0x0
  425a04:	mov    QWORD PTR [rax+0x30],rsi
  425a08:	nop    DWORD PTR [rax+rax*1+0x0]
  425a10:	mov    rax,QWORD PTR [rax]
  425a13:	test   rax,rax
  425a16:	jne    4257b0 <__flatcc_fb_build_schema@@Base+0x1a40>
  425a1c:	mov    rdx,QWORD PTR [r12+0x248]
  425a24:	test   rdx,rdx
  425a27:	je     425a73 <__flatcc_fb_build_schema@@Base+0x1d03>
  425a29:	mov    rsi,QWORD PTR [r12+0x258]
  425a31:	xor    ecx,ecx
  425a33:	mov    rdi,r12
  425a36:	vzeroupper 
  425a39:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  425a3e:	mov    QWORD PTR [r12+0x250],rax
  425a46:	test   rax,rax
  425a49:	je     425a9c <__flatcc_fb_build_schema@@Base+0x1d2c>
  425a4b:	cmp    DWORD PTR [r12+0x11c],0x0
  425a54:	movzx  ecx,WORD PTR [rax+0x10]
  425a58:	je     425aad <__flatcc_fb_build_schema@@Base+0x1d3d>
  425a5a:	movzx  ecx,cx
  425a5d:	cmp    ecx,0x2
  425a60:	jb     425acd <__flatcc_fb_build_schema@@Base+0x1d5d>
  425a62:	mov    rsi,QWORD PTR [r12+0x248]
  425a6a:	lea    rdx,[rip+0x22077]        # 447ae8 <fb_schema_table_deleted@@Base+0x13b8>
  425a71:	jmp    425ac1 <__flatcc_fb_build_schema@@Base+0x1d51>
  425a73:	cmp    DWORD PTR [r12+0x13c],0x0
  425a7c:	je     425ae1 <__flatcc_fb_build_schema@@Base+0x1d71>
  425a7e:	lea    rdx,[rip+0x22038]        # 447abd <fb_schema_table_deleted@@Base+0x138d>
  425a85:	xor    esi,esi
  425a87:	xor    ecx,ecx
  425a89:	xor    r8d,r8d
  425a8c:	xor    r9d,r9d
  425a8f:	mov    rdi,r12
  425a92:	vzeroupper 
  425a95:	call   41ba60 <__flatcc_error_report@@Base>
  425a9a:	jmp    425ae1 <__flatcc_fb_build_schema@@Base+0x1d71>
  425a9c:	mov    rsi,QWORD PTR [r12+0x248]
  425aa4:	lea    rdx,[rip+0x22029]        # 447ad4 <fb_schema_table_deleted@@Base+0x13a4>
  425aab:	jmp    425ac1 <__flatcc_fb_build_schema@@Base+0x1d51>
  425aad:	test   cx,cx
  425ab0:	je     425acd <__flatcc_fb_build_schema@@Base+0x1d5d>
  425ab2:	mov    rsi,QWORD PTR [r12+0x248]
  425aba:	lea    rdx,[rip+0x2204d]        # 447b0e <fb_schema_table_deleted@@Base+0x13de>
  425ac1:	xor    ecx,ecx
  425ac3:	mov    rdi,r12
  425ac6:	call   41bc90 <error_ref_sym@@Base>
  425acb:	jmp    425ad5 <__flatcc_fb_build_schema@@Base+0x1d65>
  425acd:	mov    QWORD PTR [r12+0x250],rax
  425ad5:	mov    QWORD PTR [r12+0x248],0x0
  425ae1:	mov    eax,DWORD PTR [r12+0xd0]
  425ae9:	xor    ecx,ecx
  425aeb:	test   eax,eax
  425aed:	sete   cl
  425af0:	mov    DWORD PTR [r12+0xe4],ecx
  425af8:	lea    rsp,[rbp-0x28]
  425afc:	pop    rbx
  425afd:	pop    r12
  425aff:	pop    r13
  425b01:	pop    r14
  425b03:	pop    r15
  425b05:	pop    rbp
  425b06:	vzeroupper 
  425b09:	ret    
  425b0a:	lea    rdi,[rip+0x234dc]        # 448fed <fb_schema_table_deleted@@Base+0x28bd>
  425b11:	lea    rsi,[rip+0x21eae]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  425b18:	lea    rcx,[rip+0x234d4]        # 448ff3 <fb_schema_table_deleted@@Base+0x28c3>
  425b1f:	mov    edx,0x5f1
  425b24:	vzeroupper 
  425b27:	call   4060f0 <__assert_fail@plt>
  425b2c:	mov    rax,QWORD PTR [rip+0x2b4c5]        # 450ff8 <stderr@GLIBC_2.2.5>
  425b33:	mov    rcx,QWORD PTR [rax]
  425b36:	lea    rdi,[rip+0x94da]        # 42f017 <_IO_stdin_used@@Base+0x1017>
  425b3d:	mov    esi,0x22
  425b42:	mov    edx,0x1
  425b47:	call   406210 <fwrite@plt>
  425b4c:	mov    edi,0x1
  425b51:	call   406200 <exit@plt>
  425b56:	lea    rdi,[rip+0x21e33]        # 447990 <fb_schema_table_deleted@@Base+0x1260>
  425b5d:	lea    rsi,[rip+0x21e62]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  425b64:	lea    rcx,[rip+0x21ebe]        # 447a29 <fb_schema_table_deleted@@Base+0x12f9>
  425b6b:	mov    edx,0x616
  425b70:	call   4060f0 <__assert_fail@plt>
  425b75:	lea    rdi,[rip+0x229a5]        # 448521 <fb_schema_table_deleted@@Base+0x1df1>
  425b7c:	lea    rsi,[rip+0x21e43]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  425b83:	lea    rcx,[rip+0x22960]        # 4484ea <fb_schema_table_deleted@@Base+0x1dba>
  425b8a:	mov    edx,0x302
  425b8f:	call   4060f0 <__assert_fail@plt>
  425b94:	lea    rdi,[rip+0x22986]        # 448521 <fb_schema_table_deleted@@Base+0x1df1>
  425b9b:	lea    rsi,[rip+0x21e24]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  425ba2:	lea    rcx,[rip+0x23274]        # 448e1d <fb_schema_table_deleted@@Base+0x26ed>
  425ba9:	mov    edx,0x469
  425bae:	call   4060f0 <__assert_fail@plt>
  425bb3:	lea    rdi,[rip+0x231fd]        # 448db7 <fb_schema_table_deleted@@Base+0x2687>
  425bba:	lea    rsi,[rip+0x21e05]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  425bc1:	lea    rcx,[rip+0x231f3]        # 448dbb <fb_schema_table_deleted@@Base+0x268b>
  425bc8:	mov    edx,0x15b
  425bcd:	call   4060f0 <__assert_fail@plt>
  425bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bdc:	nop    DWORD PTR [rax+0x0]
  425be0:	push   rbp
  425be1:	push   r15
  425be3:	push   r14
  425be5:	push   r13
  425be7:	push   r12
  425be9:	push   rbx
  425bea:	sub    rsp,0xb8
  425bf1:	mov    r15,rsi
  425bf4:	mov    r14,rdi
  425bf7:	movzx  r13d,WORD PTR [rsi+0x10]
  425bfc:	cmp    r13d,0x4
  425c00:	jne    425c1a <__flatcc_fb_build_schema@@Base+0x1eaa>
  425c02:	cmp    WORD PTR [r15+0x58],0x0
  425c08:	je     425c51 <__flatcc_fb_build_schema@@Base+0x1ee1>
  425c0a:	mov    rsi,QWORD PTR [r15+0x8]
  425c0e:	lea    rdx,[rip+0x21ff8]        # 447c0d <fb_schema_table_deleted@@Base+0x14dd>
  425c15:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  425c1a:	movzx  eax,r13w
  425c1e:	cmp    eax,0x3
  425c21:	jne    42626d <__flatcc_fb_build_schema@@Base+0x24fd>
  425c27:	movzx  eax,WORD PTR [r15+0x58]
  425c2c:	cmp    eax,0x8
  425c2f:	je     425c71 <__flatcc_fb_build_schema@@Base+0x1f01>
  425c31:	test   ax,ax
  425c34:	jne    425d86 <__flatcc_fb_build_schema@@Base+0x2016>
  425c3a:	mov    WORD PTR [r15+0x58],0x1
  425c41:	mov    rsi,QWORD PTR [r15+0x8]
  425c45:	lea    rdx,[rip+0x21f7a]        # 447bc6 <fb_schema_table_deleted@@Base+0x1496>
  425c4c:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  425c51:	mov    WORD PTR [r15+0x58],0x8
  425c58:	mov    DWORD PTR [r15+0x48],0x4
  425c60:	mov    QWORD PTR [r15+0xb8],0x1
  425c6b:	mov    ax,0x1
  425c6f:	jmp    425cae <__flatcc_fb_build_schema@@Base+0x1f3e>
  425c71:	mov    rax,QWORD PTR [r15+0x48]
  425c75:	mov    rcx,QWORD PTR [rax+0x20]
  425c79:	lea    rdx,[rcx+0x3e7]
  425c80:	xor    eax,eax
  425c82:	cmp    rdx,0x1b
  425c86:	ja     425c96 <__flatcc_fb_build_schema@@Base+0x1f26>
  425c88:	lea    rax,[rip+0x21c21]        # 4478b0 <fb_schema_table_deleted@@Base+0x1180>
  425c8f:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  425c96:	mov    DWORD PTR [r15+0x48],eax
  425c9a:	mov    eax,eax
  425c9c:	lea    rcx,[rip+0x21bdd]        # 447880 <fb_schema_table_deleted@@Base+0x1150>
  425ca3:	movsxd rax,DWORD PTR [rcx+rax*4]
  425ca7:	mov    QWORD PTR [r15+0xb8],rax
  425cae:	mov    WORD PTR [r15+0xb0],ax
  425cb6:	mov    rsi,QWORD PTR [r15+0x38]
  425cba:	lea    rcx,[rsp+0x50]
  425cbf:	mov    edx,0x20
  425cc4:	mov    rdi,r14
  425cc7:	call   426690 <__flatcc_fb_build_schema@@Base+0x2920>
  425ccc:	mov    WORD PTR [r15+0xa4],ax
  425cd4:	mov    DWORD PTR [rsp+0x28],0x0
  425cdc:	test   al,0x20
  425cde:	je     425cf7 <__flatcc_fb_build_schema@@Base+0x1f87>
  425ce0:	mov    WORD PTR [rsp+0x10],0x5
  425ce7:	mov    QWORD PTR [rsp],0x0
  425cef:	mov    DWORD PTR [rsp+0x28],0x1
  425cf7:	mov    edx,DWORD PTR [r15+0x48]
  425cfb:	cmp    edx,0x5
  425cfe:	jne    425d0d <__flatcc_fb_build_schema@@Base+0x1f9d>
  425d00:	mov    BYTE PTR [rsp],0x0
  425d04:	mov    WORD PTR [rsp+0x10],0x6
  425d0b:	jmp    425d39 <__flatcc_fb_build_schema@@Base+0x1fc9>
  425d0d:	mov    QWORD PTR [rsp],0x0
  425d15:	mov    WORD PTR [rsp+0x10],0x4
  425d1c:	mov    rcx,rsp
  425d1f:	mov    rdi,r14
  425d22:	mov    rsi,r15
  425d25:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  425d2a:	test   eax,eax
  425d2c:	je     425d39 <__flatcc_fb_build_schema@@Base+0x1fc9>
  425d2e:	lea    rdx,[rip+0x21f17]        # 447c4c <fb_schema_table_deleted@@Base+0x151c>
  425d35:	xor    esi,esi
  425d37:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  425d39:	mov    rbx,QWORD PTR [r15+0x28]
  425d3d:	test   rbx,rbx
  425d40:	je     4261b0 <__flatcc_fb_build_schema@@Base+0x2440>
  425d46:	mov    rcx,QWORD PTR [rsp]
  425d4a:	mov    rax,rcx
  425d4d:	mov    QWORD PTR [rsp+0x20],rcx
  425d52:	shr    rcx,0x8
  425d56:	mov    QWORD PTR [rsp+0x30],rcx
  425d5b:	lea    r12,[r15+0x60]
  425d5f:	mov    rax,r14
  425d62:	sub    rax,0xffffffffffffff80
  425d66:	mov    QWORD PTR [rsp+0x38],rax
  425d6b:	mov    rax,r15
  425d6e:	sub    rax,0xffffffffffffff80
  425d72:	mov    QWORD PTR [rsp+0x40],rax
  425d77:	mov    ebp,0x1
  425d7c:	mov    QWORD PTR [rsp+0x48],r12
  425d81:	jmp    4260d0 <__flatcc_fb_build_schema@@Base+0x2360>
  425d86:	mov    rsi,QWORD PTR [r15+0x8]
  425d8a:	lea    rdx,[rip+0x21e4b]        # 447bdc <fb_schema_table_deleted@@Base+0x14ac>
  425d91:	xor    ecx,ecx
  425d93:	xor    r8d,r8d
  425d96:	xor    r9d,r9d
  425d99:	mov    rdi,r14
  425d9c:	call   41ba60 <__flatcc_error_report@@Base>
  425da1:	mov    ebp,0xffffffff
  425da6:	mov    eax,ebp
  425da8:	add    rsp,0xb8
  425daf:	pop    rbx
  425db0:	pop    r12
  425db2:	pop    r13
  425db4:	pop    r14
  425db6:	pop    r15
  425db8:	pop    rbp
  425db9:	ret    
  425dba:	mov    WORD PTR [rbx+0x28],0x0
  425dc0:	jmp    425e00 <__flatcc_fb_build_schema@@Base+0x2090>
  425dc2:	mov    rsi,QWORD PTR [r15+0x18]
  425dc6:	mov    rdx,QWORD PTR [rbx+0x18]
  425dca:	xor    ecx,ecx
  425dcc:	mov    rdi,r14
  425dcf:	call   426870 <__flatcc_fb_build_schema@@Base+0x2b00>
  425dd4:	test   rax,rax
  425dd7:	je     42608b <__flatcc_fb_build_schema@@Base+0x231b>
  425ddd:	movzx  ecx,WORD PTR [rax+0x10]
  425de1:	cmp    ecx,0x2
  425de4:	jae    4260a6 <__flatcc_fb_build_schema@@Base+0x2336>
  425dea:	mov    WORD PTR [rbx+0x28],0xe
  425df0:	mov    QWORD PTR [rbx+0x18],rax
  425df4:	mov    QWORD PTR [rbx+0x80],0x0
  425dff:	nop
  425e00:	movzx  eax,WORD PTR [rbx+0x58]
  425e04:	test   ebp,ebp
  425e06:	jne    425ec5 <__flatcc_fb_build_schema@@Base+0x2155>
  425e0c:	test   ax,ax
  425e0f:	jne    425ec5 <__flatcc_fb_build_schema@@Base+0x2155>
  425e15:	movzx  eax,WORD PTR [rsp+0x10]
  425e1a:	cmp    eax,0x4
  425e1d:	je     425e80 <__flatcc_fb_build_schema@@Base+0x2110>
  425e1f:	movzx  eax,ax
  425e22:	cmp    eax,0x6
  425e25:	je     425e59 <__flatcc_fb_build_schema@@Base+0x20e9>
  425e27:	cmp    eax,0x5
  425e2a:	jne    425ec1 <__flatcc_fb_build_schema@@Base+0x2151>
  425e30:	cmp    DWORD PTR [r15+0x48],0x6
  425e35:	mov    rax,QWORD PTR [rsp]
  425e39:	jne    425eb9 <__flatcc_fb_build_schema@@Base+0x2149>
  425e3b:	cmp    rax,0xffffffffffffffff
  425e3f:	jne    425eb9 <__flatcc_fb_build_schema@@Base+0x2149>
  425e41:	mov    rsi,QWORD PTR [rbx+0x8]
  425e45:	xor    ecx,ecx
  425e47:	xor    r8d,r8d
  425e4a:	xor    r9d,r9d
  425e4d:	mov    rdi,r14
  425e50:	lea    rdx,[rip+0x21f65]        # 447dbc <fb_schema_table_deleted@@Base+0x168c>
  425e57:	jmp    425eb0 <__flatcc_fb_build_schema@@Base+0x2140>
  425e59:	cmp    BYTE PTR [rsp],0x1
  425e5d:	jne    425e7a <__flatcc_fb_build_schema@@Base+0x210a>
  425e5f:	mov    rsi,QWORD PTR [rbx+0x8]
  425e63:	xor    ecx,ecx
  425e65:	xor    r8d,r8d
  425e68:	xor    r9d,r9d
  425e6b:	mov    rdi,r14
  425e6e:	lea    rdx,[rip+0x21f7f]        # 447df4 <fb_schema_table_deleted@@Base+0x16c4>
  425e75:	call   41ba60 <__flatcc_error_report@@Base>
  425e7a:	mov    BYTE PTR [rsp],0x1
  425e7e:	jmp    425ec1 <__flatcc_fb_build_schema@@Base+0x2151>
  425e80:	cmp    DWORD PTR [r15+0x48],0x6
  425e85:	mov    rax,QWORD PTR [rsp]
  425e89:	jne    425eb9 <__flatcc_fb_build_schema@@Base+0x2149>
  425e8b:	movabs rcx,0x7fffffffffffffff
  425e95:	cmp    rax,rcx
  425e98:	jne    425eb9 <__flatcc_fb_build_schema@@Base+0x2149>
  425e9a:	mov    rsi,QWORD PTR [rbx+0x8]
  425e9e:	xor    ecx,ecx
  425ea0:	xor    r8d,r8d
  425ea3:	xor    r9d,r9d
  425ea6:	mov    rdi,r14
  425ea9:	lea    rdx,[rip+0x21f29]        # 447dd9 <fb_schema_table_deleted@@Base+0x16a9>
  425eb0:	call   41ba60 <__flatcc_error_report@@Base>
  425eb5:	mov    rax,QWORD PTR [rsp]
  425eb9:	add    rax,0x1
  425ebd:	mov    QWORD PTR [rsp],rax
  425ec1:	movzx  eax,WORD PTR [rbx+0x58]
  425ec5:	mov    r12d,r13d
  425ec8:	lea    r13,[rbx+0x48]
  425ecc:	cmp    DWORD PTR [rsp+0x28],0x0
  425ed1:	je     425f9b <__flatcc_fb_build_schema@@Base+0x222b>
  425ed7:	test   ax,ax
  425eda:	je     425efc <__flatcc_fb_build_schema@@Base+0x218c>
  425edc:	movzx  eax,ax
  425edf:	cmp    eax,0x5
  425ee2:	jne    4261fd <__flatcc_fb_build_schema@@Base+0x248d>
  425ee8:	mov    rax,QWORD PTR [r13+0x10]
  425eec:	mov    QWORD PTR [rsp+0x10],rax
  425ef1:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  425ef7:	vmovaps XMMWORD PTR [rsp],xmm0
  425efc:	mov    rax,QWORD PTR [rsp]
  425f00:	mov    ecx,DWORD PTR [r15+0x48]
  425f04:	lea    rdx,[rip+0x21975]        # 447880 <fb_schema_table_deleted@@Base+0x1150>
  425f0b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  425f0f:	shl    rcx,0x3
  425f13:	cmp    rax,rcx
  425f16:	jae    4261c7 <__flatcc_fb_build_schema@@Base+0x2457>
  425f1c:	mov    ecx,0x1
  425f21:	shlx   rax,rcx,rax
  425f26:	mov    QWORD PTR [rbx+0x48],rax
  425f2a:	mov    WORD PTR [rbx+0x58],0x5
  425f30:	mov    edx,DWORD PTR [r15+0x48]
  425f34:	mov    rdi,r14
  425f37:	mov    rsi,rbx
  425f3a:	mov    rcx,r13
  425f3d:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  425f42:	test   eax,eax
  425f44:	jne    4261c7 <__flatcc_fb_build_schema@@Base+0x2457>
  425f4a:	test   ebp,ebp
  425f4c:	jne    425fea <__flatcc_fb_build_schema@@Base+0x227a>
  425f52:	cmp    DWORD PTR [r14+0x120],0x0
  425f5a:	je     425fea <__flatcc_fb_build_schema@@Base+0x227a>
  425f60:	movzx  eax,WORD PTR [rsp+0x10]
  425f65:	cmp    eax,0x4
  425f68:	je     426058 <__flatcc_fb_build_schema@@Base+0x22e8>
  425f6e:	movzx  eax,ax
  425f71:	cmp    eax,0x6
  425f74:	je     426078 <__flatcc_fb_build_schema@@Base+0x2308>
  425f7a:	cmp    eax,0x5
  425f7d:	jne    425fea <__flatcc_fb_build_schema@@Base+0x227a>
  425f7f:	mov    rax,QWORD PTR [rsp+0x30]
  425f84:	shl    rax,0x8
  425f88:	movzx  ecx,BYTE PTR [rsp+0x20]
  425f8d:	or     rcx,rax
  425f90:	cmp    QWORD PTR [rsp],rcx
  425f94:	ja     425fea <__flatcc_fb_build_schema@@Base+0x227a>
  425f96:	jmp    42620d <__flatcc_fb_build_schema@@Base+0x249d>
  425f9b:	test   ax,ax
  425f9e:	je     425fce <__flatcc_fb_build_schema@@Base+0x225e>
  425fa0:	mov    rax,QWORD PTR [r13+0x10]
  425fa4:	mov    QWORD PTR [rsp+0x10],rax
  425fa9:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  425faf:	vmovaps XMMWORD PTR [rsp],xmm0
  425fb4:	mov    edx,DWORD PTR [r15+0x48]
  425fb8:	mov    rdi,r14
  425fbb:	mov    rsi,rbx
  425fbe:	mov    rcx,rsp
  425fc1:	call   426a90 <__flatcc_fb_coerce_scalar_type@@Base>
  425fc6:	test   eax,eax
  425fc8:	jne    425da1 <__flatcc_fb_build_schema@@Base+0x2031>
  425fce:	mov    rax,QWORD PTR [rsp+0x10]
  425fd3:	mov    QWORD PTR [r13+0x10],rax
  425fd7:	vmovaps xmm0,XMMWORD PTR [rsp]
  425fdc:	vmovups XMMWORD PTR [r13+0x0],xmm0
  425fe2:	test   ebp,ebp
  425fe4:	je     425f52 <__flatcc_fb_build_schema@@Base+0x21e2>
  425fea:	mov    rbp,QWORD PTR [rsp]
  425fee:	mov    edx,0x1
  425ff3:	mov    rdi,QWORD PTR [rsp+0x40]
  425ff8:	mov    rsi,r13
  425ffb:	call   42d210 <fb_value_set_insert_item@@Base>
  426000:	test   rax,rax
  426003:	mov    r13d,r12d
  426006:	mov    r12,QWORD PTR [rsp+0x48]
  42600b:	je     42601c <__flatcc_fb_build_schema@@Base+0x22ac>
  42600d:	cmp    DWORD PTR [rsp+0x2c],0x4
  426012:	je     4261d7 <__flatcc_fb_build_schema@@Base+0x2467>
  426018:	or     BYTE PTR [rbx+0x12],0x4
  42601c:	mov    rax,rbp
  42601f:	shr    rax,0x8
  426023:	mov    QWORD PTR [rsp+0x30],rax
  426028:	cmp    QWORD PTR [rbx+0x60],0x0
  42602d:	mov    QWORD PTR [rsp+0x20],rbp
  426032:	je     42619d <__flatcc_fb_build_schema@@Base+0x242d>
  426038:	mov    rsi,QWORD PTR [rbx+0x8]
  42603c:	xor    ecx,ecx
  42603e:	xor    r8d,r8d
  426041:	xor    r9d,r9d
  426044:	mov    rdi,r14
  426047:	lea    rdx,[rip+0x21f33]        # 447f81 <fb_schema_table_deleted@@Base+0x1851>
  42604e:	call   41ba60 <__flatcc_error_report@@Base>
  426053:	jmp    42619d <__flatcc_fb_build_schema@@Base+0x242d>
  426058:	mov    rax,QWORD PTR [rsp+0x30]
  42605d:	shl    rax,0x8
  426061:	movzx  ecx,BYTE PTR [rsp+0x20]
  426066:	or     rcx,rax
  426069:	cmp    QWORD PTR [rsp],rcx
  42606d:	jg     425fea <__flatcc_fb_build_schema@@Base+0x227a>
  426073:	jmp    42620d <__flatcc_fb_build_schema@@Base+0x249d>
  426078:	mov    rax,QWORD PTR [rsp+0x20]
  42607d:	cmp    BYTE PTR [rsp],al
  426080:	ja     425fea <__flatcc_fb_build_schema@@Base+0x227a>
  426086:	jmp    426234 <__flatcc_fb_build_schema@@Base+0x24c4>
  42608b:	mov    rsi,QWORD PTR [rbx+0x18]
  42608f:	mov    rdi,r14
  426092:	lea    rdx,[rip+0x21caf]        # 447d48 <fb_schema_table_deleted@@Base+0x1618>
  426099:	mov    rcx,rbx
  42609c:	call   41bc90 <error_ref_sym@@Base>
  4260a1:	jmp    426197 <__flatcc_fb_build_schema@@Base+0x2427>
  4260a6:	mov    rsi,QWORD PTR [rbx+0x8]
  4260aa:	mov    rcx,QWORD PTR [rax+0x8]
  4260ae:	xor    r8d,r8d
  4260b1:	xor    r9d,r9d
  4260b4:	mov    rdi,r14
  4260b7:	lea    rdx,[rip+0x21cb8]        # 447d76 <fb_schema_table_deleted@@Base+0x1646>
  4260be:	jmp    426192 <__flatcc_fb_build_schema@@Base+0x2422>
  4260c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4260cd:	nop    DWORD PTR [rax]
  4260d0:	mov    edx,0x1
  4260d5:	mov    rdi,r12
  4260d8:	mov    rsi,rbx
  4260db:	call   4196e0 <fb_symbol_table_insert_item@@Base>
  4260e0:	test   rax,rax
  4260e3:	je     426110 <__flatcc_fb_build_schema@@Base+0x23a0>
  4260e5:	mov    rcx,QWORD PTR [rax+0x8]
  4260e9:	mov    rsi,QWORD PTR [rbx+0x8]
  4260ed:	cmp    rcx,QWORD PTR [rsp+0x38]
  4260f2:	je     426180 <__flatcc_fb_build_schema@@Base+0x2410>
  4260f8:	xor    r8d,r8d
  4260fb:	xor    r9d,r9d
  4260fe:	mov    rdi,r14
  426101:	lea    rdx,[rip+0x21b9f]        # 447ca7 <fb_schema_table_deleted@@Base+0x1577>
  426108:	jmp    426192 <__flatcc_fb_build_schema@@Base+0x2422>
  42610d:	nop    DWORD PTR [rax]
  426110:	movzx  eax,WORD PTR [rbx+0x10]
  426114:	cmp    eax,0x5
  426117:	jne    4261b7 <__flatcc_fb_build_schema@@Base+0x2447>
  42611d:	cmp    QWORD PTR [rbx+0x60],0x0
  426122:	jne    42624e <__flatcc_fb_build_schema@@Base+0x24de>
  426128:	movzx  eax,r13w
  42612c:	mov    DWORD PTR [rsp+0x2c],eax
  426130:	cmp    eax,0x4
  426133:	jne    425e00 <__flatcc_fb_build_schema@@Base+0x2090>
  426139:	mov    rsi,QWORD PTR [rbx+0x8]
  42613d:	cmp    rsi,QWORD PTR [rsp+0x38]
  426142:	je     425dba <__flatcc_fb_build_schema@@Base+0x204a>
  426148:	movzx  eax,WORD PTR [rbx+0x28]
  42614c:	cmp    eax,0x1
  42614f:	je     42619d <__flatcc_fb_build_schema@@Base+0x242d>
  426151:	movzx  eax,ax
  426154:	cmp    eax,0xc
  426157:	je     425dc2 <__flatcc_fb_build_schema@@Base+0x2052>
  42615d:	cmp    eax,0xa
  426160:	je     425df4 <__flatcc_fb_build_schema@@Base+0x2084>
  426166:	xor    ecx,ecx
  426168:	xor    r8d,r8d
  42616b:	xor    r9d,r9d
  42616e:	mov    rdi,r14
  426171:	lea    rdx,[rip+0x21b89]        # 447d01 <fb_schema_table_deleted@@Base+0x15d1>
  426178:	jmp    426192 <__flatcc_fb_build_schema@@Base+0x2422>
  42617a:	nop    WORD PTR [rax+rax*1+0x0]
  426180:	xor    ecx,ecx
  426182:	xor    r8d,r8d
  426185:	xor    r9d,r9d
  426188:	mov    rdi,r14
  42618b:	lea    rdx,[rip+0x21af8]        # 447c8a <fb_schema_table_deleted@@Base+0x155a>
  426192:	call   41ba60 <__flatcc_error_report@@Base>
  426197:	mov    WORD PTR [rbx+0x28],0x1
  42619d:	mov    rbx,QWORD PTR [rbx]
  4261a0:	xor    ebp,ebp
  4261a2:	test   rbx,rbx
  4261a5:	jne    4260d0 <__flatcc_fb_build_schema@@Base+0x2360>
  4261ab:	jmp    425da6 <__flatcc_fb_build_schema@@Base+0x2036>
  4261b0:	xor    ebp,ebp
  4261b2:	jmp    425da6 <__flatcc_fb_build_schema@@Base+0x2036>
  4261b7:	mov    rsi,QWORD PTR [rbx+0x8]
  4261bb:	lea    rdx,[rip+0x21b00]        # 447cc2 <fb_schema_table_deleted@@Base+0x1592>
  4261c2:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  4261c7:	mov    rsi,QWORD PTR [rbx+0x8]
  4261cb:	lea    rdx,[rip+0x21c8a]        # 447e5c <fb_schema_table_deleted@@Base+0x172c>
  4261d2:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  4261d7:	mov    rsi,QWORD PTR [rbx+0x8]
  4261db:	lea    rdx,[rip+0x21d55]        # 447f37 <fb_schema_table_deleted@@Base+0x1807>
  4261e2:	xor    ecx,ecx
  4261e4:	xor    r8d,r8d
  4261e7:	xor    r9d,r9d
  4261ea:	mov    rdi,r14
  4261ed:	call   41ba60 <__flatcc_error_report@@Base>
  4261f2:	mov    WORD PTR [rbx+0x58],0x1
  4261f8:	jmp    425da1 <__flatcc_fb_build_schema@@Base+0x2031>
  4261fd:	mov    rsi,QWORD PTR [rbx+0x8]
  426201:	lea    rdx,[rip+0x21c19]        # 447e21 <fb_schema_table_deleted@@Base+0x16f1>
  426208:	jmp    425d91 <__flatcc_fb_build_schema@@Base+0x2021>
  42620d:	cmp    DWORD PTR [rsp+0x2c],0x4
  426212:	jne    426227 <__flatcc_fb_build_schema@@Base+0x24b7>
  426214:	mov    rcx,QWORD PTR [rsp+0x30]
  426219:	shl    rcx,0x8
  42621d:	movzx  eax,BYTE PTR [rsp+0x20]
  426222:	or     rax,rcx
  426225:	je     426241 <__flatcc_fb_build_schema@@Base+0x24d1>
  426227:	mov    rsi,QWORD PTR [rbx+0x8]
  42622b:	lea    rdx,[rip+0x21c9e]        # 447ed0 <fb_schema_table_deleted@@Base+0x17a0>
  426232:	jmp    4261e2 <__flatcc_fb_build_schema@@Base+0x2472>
  426234:	mov    rsi,QWORD PTR [rbx+0x8]
  426238:	lea    rdx,[rip+0x21cb8]        # 447ef7 <fb_schema_table_deleted@@Base+0x17c7>
  42623f:	jmp    4261e2 <__flatcc_fb_build_schema@@Base+0x2472>
  426241:	mov    rsi,QWORD PTR [rbx+0x8]
  426245:	lea    rdx,[rip+0x21c43]        # 447e8f <fb_schema_table_deleted@@Base+0x175f>
  42624c:	jmp    4261e2 <__flatcc_fb_build_schema@@Base+0x2472>
  42624e:	lea    rdi,[rip+0x21a96]        # 447ceb <fb_schema_table_deleted@@Base+0x15bb>
  426255:	lea    rsi,[rip+0x2176a]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  42625c:	lea    rcx,[rip+0x2192d]        # 447b90 <fb_schema_table_deleted@@Base+0x1460>
  426263:	mov    edx,0x523
  426268:	call   4060f0 <__assert_fail@plt>
  42626d:	lea    rdi,[rip+0xfdcd]        # 436041 <_IO_stdin_used@@Base+0x8041>
  426274:	lea    rsi,[rip+0x2174b]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  42627b:	lea    rcx,[rip+0x2190e]        # 447b90 <fb_schema_table_deleted@@Base+0x1460>
  426282:	mov    edx,0x4cd
  426287:	call   4060f0 <__assert_fail@plt>
  42628c:	nop    DWORD PTR [rax+0x0]
  426290:	push   rbp
  426291:	push   r15
  426293:	push   r14
  426295:	push   r13
  426297:	push   r12
  426299:	push   rbx
  42629a:	push   rax
  42629b:	movzx  eax,WORD PTR [rsi+0x10]
  42629f:	cmp    eax,0x1
  4262a2:	jne    42662c <__flatcc_fb_build_schema@@Base+0x28bc>
  4262a8:	mov    rbx,rsi
  4262ab:	movzx  eax,WORD PTR [rsi+0x12]
  4262af:	test   al,0x1
  4262b1:	jne    42664b <__flatcc_fb_build_schema@@Base+0x28db>
  4262b7:	xor    r13d,r13d
  4262ba:	test   al,0x2
  4262bc:	jne    426604 <__flatcc_fb_build_schema@@Base+0x2894>
  4262c2:	cmp    QWORD PTR [rbx+0xc0],0x0
  4262ca:	jne    42666a <__flatcc_fb_build_schema@@Base+0x28fa>
  4262d0:	mov    r14,rdi
  4262d3:	or     eax,0x1
  4262d6:	mov    WORD PTR [rbx+0x12],ax
  4262da:	mov    r15,QWORD PTR [rbx+0x28]
  4262de:	mov    r12w,0x1
  4262e3:	test   r15,r15
  4262e6:	jne    42630b <__flatcc_fb_build_schema@@Base+0x259b>
  4262e8:	jmp    4264d6 <__flatcc_fb_build_schema@@Base+0x2766>
  4262ed:	nop    DWORD PTR [rax]
  4262f0:	mov    QWORD PTR [rbx+0xb8],rbp
  4262f7:	cmp    r12w,ax
  4262fb:	cmovb  r12d,eax
  4262ff:	mov    r15,QWORD PTR [r15]
  426302:	test   r15,r15
  426305:	je     4264d6 <__flatcc_fb_build_schema@@Base+0x2766>
  42630b:	mov    eax,DWORD PTR [r14+0xe0]
  426312:	cmp    eax,0x64
  426315:	jge    4265a1 <__flatcc_fb_build_schema@@Base+0x2831>
  42631b:	movzx  ecx,WORD PTR [r15+0x28]
  426320:	mov    r13d,0xffffffff
  426326:	cmp    ecx,0x8
  426329:	je     426360 <__flatcc_fb_build_schema@@Base+0x25f0>
  42632b:	movzx  ecx,cx
  42632e:	cmp    ecx,0xe
  426331:	jne    4265c2 <__flatcc_fb_build_schema@@Base+0x2852>
  426337:	mov    rbp,QWORD PTR [r15+0x18]
  42633b:	movzx  ecx,WORD PTR [rbp+0x10]
  42633f:	cmp    ecx,0x1
  426342:	je     4263b0 <__flatcc_fb_build_schema@@Base+0x2640>
  426344:	movzx  eax,cx
  426347:	cmp    eax,0x3
  42634a:	jne    4265e9 <__flatcc_fb_build_schema@@Base+0x2879>
  426350:	mov    rbp,QWORD PTR [rbp+0xb8]
  426357:	jmp    4263a4 <__flatcc_fb_build_schema@@Base+0x2634>
  426359:	nop    DWORD PTR [rax+0x0]
  426360:	mov    rcx,QWORD PTR [r15+0x18]
  426364:	mov    rax,QWORD PTR [rcx+0x20]
  426368:	lea    rdx,[rax+0x3e7]
  42636f:	cmp    rdx,0x1c
  426373:	jae    4265d4 <__flatcc_fb_build_schema@@Base+0x2864>
  426379:	mov    esi,0x97ed7fb
  42637e:	bt     esi,edx
  426381:	jae    4265d4 <__flatcc_fb_build_schema@@Base+0x2864>
  426387:	lea    rcx,[rip+0x21592]        # 447920 <fb_schema_table_deleted@@Base+0x11f0>
  42638e:	mov    eax,DWORD PTR [rcx+rax*4+0xf9c]
  426395:	mov    DWORD PTR [r15+0x18],eax
  426399:	lea    rcx,[rip+0x214e0]        # 447880 <fb_schema_table_deleted@@Base+0x1150>
  4263a0:	movsxd rbp,DWORD PTR [rcx+rax*4]
  4263a4:	mov    WORD PTR [r15+0x72],bp
  4263a9:	mov    eax,ebp
  4263ab:	jmp    426428 <__flatcc_fb_build_schema@@Base+0x26b8>
  4263ad:	nop    DWORD PTR [rax]
  4263b0:	movzx  ecx,WORD PTR [rbp+0x12]
  4263b4:	test   cl,0x1
  4263b7:	jne    426616 <__flatcc_fb_build_schema@@Base+0x28a6>
  4263bd:	test   cl,0x2
  4263c0:	jne    426415 <__flatcc_fb_build_schema@@Base+0x26a5>
  4263c2:	cmp    DWORD PTR [r14+0x128],0x0
  4263ca:	je     4263f0 <__flatcc_fb_build_schema@@Base+0x2680>
  4263cc:	mov    rsi,QWORD PTR [r15+0x8]
  4263d0:	mov    rcx,QWORD PTR [rbp+0x8]
  4263d4:	xor    r8d,r8d
  4263d7:	xor    r9d,r9d
  4263da:	mov    rdi,r14
  4263dd:	lea    rdx,[rip+0x21fdd]        # 4483c1 <fb_schema_table_deleted@@Base+0x1c91>
  4263e4:	call   41ba60 <__flatcc_error_report@@Base>
  4263e9:	mov    eax,DWORD PTR [r14+0xe0]
  4263f0:	add    eax,0x1
  4263f3:	mov    DWORD PTR [r14+0xe0],eax
  4263fa:	mov    rdi,r14
  4263fd:	mov    rsi,rbp
  426400:	call   426290 <__flatcc_fb_build_schema@@Base+0x2520>
  426405:	add    DWORD PTR [r14+0xe0],0xffffffff
  42640d:	test   eax,eax
  42640f:	jne    426627 <__flatcc_fb_build_schema@@Base+0x28b7>
  426415:	movzx  eax,WORD PTR [rbp+0xb0]
  42641c:	mov    WORD PTR [r15+0x72],ax
  426421:	mov    rbp,QWORD PTR [rbp+0xb8]
  426428:	mov    QWORD PTR [r15+0x80],rbp
  42642f:	test   ax,ax
  426432:	je     42653d <__flatcc_fb_build_schema@@Base+0x27cd>
  426438:	movzx  ecx,ax
  42643b:	lea    rsi,[rcx-0x1]
  42643f:	cmp    rsi,0xff
  426446:	ja     42653d <__flatcc_fb_build_schema@@Base+0x27cd>
  42644c:	mov    rdx,QWORD PTR [rbx+0xb8]
  426453:	mov    edi,0x1
  426458:	nop    DWORD PTR [rax+rax*1+0x0]
  426460:	cmp    rdi,rcx
  426463:	je     426480 <__flatcc_fb_build_schema@@Base+0x2710>
  426465:	add    rdi,rdi
  426468:	cmp    rdi,rcx
  42646b:	jbe    426460 <__flatcc_fb_build_schema@@Base+0x26f0>
  42646d:	jmp    42653d <__flatcc_fb_build_schema@@Base+0x27cd>
  426472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42647c:	nop    DWORD PTR [rax+0x0]
  426480:	add    rsi,rdx
  426483:	neg    rcx
  426486:	and    rcx,rsi
  426489:	mov    QWORD PTR [r15+0x78],rcx
  42648d:	cmp    rcx,rdx
  426490:	jb     426594 <__flatcc_fb_build_schema@@Base+0x2824>
  426496:	add    rbp,rcx
  426499:	jb     426594 <__flatcc_fb_build_schema@@Base+0x2824>
  42649f:	cmp    rbp,rdx
  4264a2:	jb     4264b1 <__flatcc_fb_build_schema@@Base+0x2741>
  4264a4:	cmp    rbp,0x10000
  4264ab:	jb     4262f0 <__flatcc_fb_build_schema@@Base+0x2580>
  4264b1:	mov    rsi,QWORD PTR [r15+0x8]
  4264b5:	xor    ecx,ecx
  4264b7:	xor    r8d,r8d
  4264ba:	xor    r9d,r9d
  4264bd:	mov    rdi,r14
  4264c0:	lea    rdx,[rip+0x21f79]        # 448440 <fb_schema_table_deleted@@Base+0x1d10>
  4264c7:	call   41ba60 <__flatcc_error_report@@Base>
  4264cc:	movzx  eax,WORD PTR [r15+0x72]
  4264d1:	jmp    4262f0 <__flatcc_fb_build_schema@@Base+0x2580>
  4264d6:	movzx  eax,WORD PTR [rbx+0xb0]
  4264dd:	test   ax,ax
  4264e0:	je     426503 <__flatcc_fb_build_schema@@Base+0x2793>
  4264e2:	cmp    r12w,ax
  4264e6:	jbe    42650e <__flatcc_fb_build_schema@@Base+0x279e>
  4264e8:	mov    rsi,QWORD PTR [rbx+0x8]
  4264ec:	lea    rdx,[rip+0x21f80]        # 448473 <fb_schema_table_deleted@@Base+0x1d43>
  4264f3:	xor    ecx,ecx
  4264f5:	xor    r8d,r8d
  4264f8:	xor    r9d,r9d
  4264fb:	mov    rdi,r14
  4264fe:	call   41ba60 <__flatcc_error_report@@Base>
  426503:	mov    WORD PTR [rbx+0xb0],r12w
  42650b:	mov    eax,r12d
  42650e:	test   ax,ax
  426511:	je     42653d <__flatcc_fb_build_schema@@Base+0x27cd>
  426513:	movzx  eax,ax
  426516:	lea    rcx,[rax-0x1]
  42651a:	cmp    rcx,0xff
  426521:	ja     42653d <__flatcc_fb_build_schema@@Base+0x27cd>
  426523:	mov    rdx,QWORD PTR [rbx+0xb8]
  42652a:	mov    esi,0x1
  42652f:	nop
  426530:	cmp    rsi,rax
  426533:	je     42655c <__flatcc_fb_build_schema@@Base+0x27ec>
  426535:	add    rsi,rsi
  426538:	cmp    rsi,rax
  42653b:	jbe    426530 <__flatcc_fb_build_schema@@Base+0x27c0>
  42653d:	lea    rdi,[rip+0x21f6a]        # 4484ae <fb_schema_table_deleted@@Base+0x1d7e>
  426544:	lea    rsi,[rip+0x2147b]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  42654b:	lea    rcx,[rip+0x21f72]        # 4484c4 <fb_schema_table_deleted@@Base+0x1d94>
  426552:	mov    edx,0x6c
  426557:	call   4060f0 <__assert_fail@plt>
  42655c:	add    rcx,rdx
  42655f:	neg    rax
  426562:	and    rax,rcx
  426565:	mov    QWORD PTR [rbx+0xb8],rax
  42656c:	movzx  eax,WORD PTR [rbx+0x12]
  426570:	and    eax,0xfffffffc
  426573:	or     eax,0x2
  426576:	mov    WORD PTR [rbx+0x12],ax
  42657a:	mov    rax,QWORD PTR [r14+0x240]
  426581:	mov    QWORD PTR [rbx+0xc0],rax
  426588:	mov    QWORD PTR [r14+0x240],rbx
  42658f:	xor    r13d,r13d
  426592:	jmp    426604 <__flatcc_fb_build_schema@@Base+0x2894>
  426594:	mov    rsi,QWORD PTR [r15+0x8]
  426598:	lea    rdx,[rip+0x21e8c]        # 44842b <fb_schema_table_deleted@@Base+0x1cfb>
  42659f:	jmp    4265f4 <__flatcc_fb_build_schema@@Base+0x2884>
  4265a1:	lea    rdx,[rip+0x21da0]        # 448348 <fb_schema_table_deleted@@Base+0x1c18>
  4265a8:	xor    esi,esi
  4265aa:	xor    ecx,ecx
  4265ac:	xor    r8d,r8d
  4265af:	xor    r9d,r9d
  4265b2:	mov    rdi,r14
  4265b5:	call   41ba60 <__flatcc_error_report@@Base>
  4265ba:	mov    r13d,0xffffffff
  4265c0:	jmp    426604 <__flatcc_fb_build_schema@@Base+0x2894>
  4265c2:	cmp    ecx,0x1
  4265c5:	je     426604 <__flatcc_fb_build_schema@@Base+0x2894>
  4265c7:	mov    rsi,QWORD PTR [r15+0x8]
  4265cb:	lea    rdx,[rip+0x21dbf]        # 448391 <fb_schema_table_deleted@@Base+0x1c61>
  4265d2:	jmp    4265f4 <__flatcc_fb_build_schema@@Base+0x2884>
  4265d4:	mov    DWORD PTR [r15+0x18],0x0
  4265dc:	mov    rsi,QWORD PTR [r15+0x8]
  4265e0:	lea    rdx,[rip+0x21daa]        # 448391 <fb_schema_table_deleted@@Base+0x1c61>
  4265e7:	jmp    4265f6 <__flatcc_fb_build_schema@@Base+0x2886>
  4265e9:	mov    rsi,QWORD PTR [r15+0x8]
  4265ed:	lea    rdx,[rip+0x21e14]        # 448408 <fb_schema_table_deleted@@Base+0x1cd8>
  4265f4:	xor    ecx,ecx
  4265f6:	xor    r8d,r8d
  4265f9:	xor    r9d,r9d
  4265fc:	mov    rdi,r14
  4265ff:	call   41ba60 <__flatcc_error_report@@Base>
  426604:	mov    eax,r13d
  426607:	add    rsp,0x8
  42660b:	pop    rbx
  42660c:	pop    r12
  42660e:	pop    r13
  426610:	pop    r14
  426612:	pop    r15
  426614:	pop    rbp
  426615:	ret    
  426616:	mov    rsi,QWORD PTR [r15+0x8]
  42661a:	mov    rcx,QWORD PTR [rbp+0x8]
  42661e:	lea    rdx,[rip+0x21d7c]        # 4483a1 <fb_schema_table_deleted@@Base+0x1c71>
  426625:	jmp    4265f6 <__flatcc_fb_build_schema@@Base+0x2886>
  426627:	mov    r13d,eax
  42662a:	jmp    426604 <__flatcc_fb_build_schema@@Base+0x2894>
  42662c:	lea    rdi,[rip+0xf72b]        # 435d5e <_IO_stdin_used@@Base+0x7d5e>
  426633:	lea    rsi,[rip+0x2138c]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  42663a:	lea    rcx,[rip+0x21c9d]        # 4482de <fb_schema_table_deleted@@Base+0x1bae>
  426641:	mov    edx,0x1f6
  426646:	call   4060f0 <__assert_fail@plt>
  42664b:	lea    rdi,[rip+0x21cc4]        # 448316 <fb_schema_table_deleted@@Base+0x1be6>
  426652:	lea    rsi,[rip+0x2136d]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  426659:	lea    rcx,[rip+0x21c7e]        # 4482de <fb_schema_table_deleted@@Base+0x1bae>
  426660:	mov    edx,0x1f8
  426665:	call   4060f0 <__assert_fail@plt>
  42666a:	lea    rdi,[rip+0x21ccc]        # 44833d <fb_schema_table_deleted@@Base+0x1c0d>
  426671:	lea    rsi,[rip+0x2134e]        # 4479c6 <fb_schema_table_deleted@@Base+0x1296>
  426678:	lea    rcx,[rip+0x21c5f]        # 4482de <fb_schema_table_deleted@@Base+0x1bae>
  42667f:	mov    edx,0x1fc
  426684:	call   4060f0 <__assert_fail@plt>
  426689:	nop    DWORD PTR [rax+0x0]
  426690:	push   rbp
  426691:	push   r15
  426693:	push   r14
  426695:	push   r13
  426697:	push   r12
  426699:	push   rbx
  42669a:	push   rax
  42669b:	vxorps xmm0,xmm0,xmm0
  42669f:	vmovups YMMWORD PTR [rcx+0x40],ymm0
  4266a4:	vmovups YMMWORD PTR [rcx+0x20],ymm0
  4266a9:	vmovups YMMWORD PTR [rcx],ymm0
  4266ad:	test   rsi,rsi
  4266b0:	je     42684a <__flatcc_fb_build_schema@@Base+0x2ada>
  4266b6:	mov    r15,rcx
  4266b9:	mov    rbx,rsi
  4266bc:	mov    r12,rdi
  4266bf:	movzx  ebp,dx
  4266c2:	mov    r13d,0xffffff9d
  4266c8:	xor    r14d,r14d
  4266cb:	jmp    426770 <__flatcc_fb_build_schema@@Base+0x2a00>
  4266d0:	mov    QWORD PTR [r15+rax*8],rbx
  4266d4:	mov    ecx,0xdac
  4266d9:	bt     rcx,rax
  4266dd:	jae    426701 <__flatcc_fb_build_schema@@Base+0x2991>
  4266df:	cmp    WORD PTR [rbx+0x20],0x0
  4266e4:	je     426701 <__flatcc_fb_build_schema@@Base+0x2991>
  4266e6:	mov    rsi,QWORD PTR [rbx+0x8]
  4266ea:	xor    ecx,ecx
  4266ec:	xor    r8d,r8d
  4266ef:	xor    r9d,r9d
  4266f2:	mov    rdi,r12
  4266f5:	lea    rdx,[rip+0x2191a]        # 448016 <fb_schema_table_deleted@@Base+0x18e6>
  4266fc:	jmp    42680e <__flatcc_fb_build_schema@@Base+0x2a9e>
  426701:	add    eax,0xffffffff
  426704:	cmp    eax,0x8
  426707:	ja     426813 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42670d:	lea    rcx,[rip+0x2113c]        # 447850 <fb_schema_table_deleted@@Base+0x1120>
  426714:	movsxd rax,DWORD PTR [rcx+rax*4]
  426718:	add    rax,rcx
  42671b:	jmp    rax
  42671d:	movzx  eax,WORD PTR [rbx+0x20]
  426721:	cmp    eax,0x5
  426724:	je     426813 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42672a:	mov    rsi,QWORD PTR [rbx+0x8]
  42672e:	xor    ecx,ecx
  426730:	xor    r8d,r8d
  426733:	xor    r9d,r9d
  426736:	mov    rdi,r12
  426739:	lea    rdx,[rip+0x2191f]        # 44805f <fb_schema_table_deleted@@Base+0x192f>
  426740:	jmp    42680e <__flatcc_fb_build_schema@@Base+0x2a9e>
  426745:	movzx  eax,WORD PTR [rbx+0x20]
  426749:	cmp    eax,0x2
  42674c:	je     426813 <__flatcc_fb_build_schema@@Base+0x2aa3>
  426752:	mov    rsi,QWORD PTR [rbx+0x8]
  426756:	xor    ecx,ecx
  426758:	xor    r8d,r8d
  42675b:	xor    r9d,r9d
  42675e:	mov    rdi,r12
  426761:	lea    rdx,[rip+0x218d6]        # 44803e <fb_schema_table_deleted@@Base+0x190e>
  426768:	jmp    42680e <__flatcc_fb_build_schema@@Base+0x2a9e>
  42676d:	nop    DWORD PTR [rax]
  426770:	mov    rdi,QWORD PTR [r12+0x260]
  426778:	add    rdi,0x20
  42677c:	mov    rax,QWORD PTR [rbx+0x8]
  426780:	mov    rsi,QWORD PTR [rax]
  426783:	mov    rdx,QWORD PTR [rax+0x8]
  426787:	vzeroupper 
  42678a:	call   42cb10 <fb_name_table_find@@Base>
  42678f:	test   rax,rax
  426792:	je     4267e0 <__flatcc_fb_build_schema@@Base+0x2a70>
  426794:	movsxd rax,DWORD PTR [rax+0x20]
  426798:	test   rax,rax
  42679b:	je     426813 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42679d:	bt     ebp,eax
  4267a0:	jae    4267f8 <__flatcc_fb_build_schema@@Base+0x2a88>
  4267a2:	mov    ecx,0x1
  4267a7:	shlx   ecx,ecx,eax
  4267ac:	or     r14d,ecx
  4267af:	cmp    QWORD PTR [r15+rax*8],0x0
  4267b4:	je     4266d0 <__flatcc_fb_build_schema@@Base+0x2960>
  4267ba:	mov    rsi,QWORD PTR [rbx+0x8]
  4267be:	xor    ecx,ecx
  4267c0:	xor    r8d,r8d
  4267c3:	xor    r9d,r9d
  4267c6:	mov    rdi,r12
  4267c9:	lea    rdx,[rip+0x21820]        # 447ff0 <fb_schema_table_deleted@@Base+0x18c0>
  4267d0:	jmp    42680e <__flatcc_fb_build_schema@@Base+0x2a9e>
  4267d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4267dc:	nop    DWORD PTR [rax+0x0]
  4267e0:	mov    rsi,QWORD PTR [rbx+0x8]
  4267e4:	xor    ecx,ecx
  4267e6:	xor    r8d,r8d
  4267e9:	xor    r9d,r9d
  4267ec:	mov    rdi,r12
  4267ef:	lea    rdx,[rip+0x217ae]        # 447fa4 <fb_schema_table_deleted@@Base+0x1874>
  4267f6:	jmp    42680e <__flatcc_fb_build_schema@@Base+0x2a9e>
  4267f8:	mov    rsi,QWORD PTR [rbx+0x8]
  4267fc:	xor    ecx,ecx
  4267fe:	xor    r8d,r8d
  426801:	xor    r9d,r9d
  426804:	mov    rdi,r12
  426807:	lea    rdx,[rip+0x217b5]        # 447fc3 <fb_schema_table_deleted@@Base+0x1893>
  42680e:	call   41ba60 <__flatcc_error_report@@Base>
  426813:	mov    rbx,QWORD PTR [rbx]
  426816:	test   r13d,r13d
  426819:	je     426828 <__flatcc_fb_build_schema@@Base+0x2ab8>
  42681b:	add    r13d,0x1
  42681f:	test   rbx,rbx
  426822:	jne    426770 <__flatcc_fb_build_schema@@Base+0x2a00>
  426828:	test   rbx,rbx
  42682b:	je     42684d <__flatcc_fb_build_schema@@Base+0x2add>
  42682d:	mov    rsi,QWORD PTR [rbx+0x8]
  426831:	lea    rdx,[rip+0x21853]        # 44808b <fb_schema_table_deleted@@Base+0x195b>
  426838:	xor    ecx,ecx
  42683a:	xor    r8d,r8d
  42683d:	xor    r9d,r9d
  426840:	mov    rdi,r12
  426843:	call   41ba60 <__flatcc_error_report@@Base>
  426848:	jmp    42684d <__flatcc_fb_build_schema@@Base+0x2add>
  42684a:	xor    r14d,r14d
  42684d:	mov    eax,r14d
  426850:	add    rsp,0x8
  426854:	pop    rbx
  426855:	pop    r12
  426857:	pop    r13
  426859:	pop    r14
  42685b:	pop    r15
  42685d:	pop    rbp
  42685e:	vzeroupper 
  426861:	ret    
  426862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42686c:	nop    DWORD PTR [rax+0x0]
  426870:	push   rbp
  426871:	push   r15
  426873:	push   r14
  426875:	push   r13
  426877:	push   r12
  426879:	push   rbx
  42687a:	push   rax
  42687b:	mov    r13,rsi
  42687e:	mov    r14,rdi
  426881:	test   rdx,rdx
  426884:	je     4269e3 <__flatcc_fb_build_schema@@Base+0x2c73>
  42688a:	xor    eax,eax
  42688c:	mov    rdi,rdx
  42688f:	xor    esi,esi
  426891:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42689b:	nop    DWORD PTR [rax+rax*1+0x0]
  4268a0:	mov    r12,rsi
  4268a3:	mov    rsi,rdi
  4268a6:	mov    rdi,QWORD PTR [rdi]
  4268a9:	add    eax,0x1
  4268ac:	test   rdi,rdi
  4268af:	jne    4268a0 <__flatcc_fb_build_schema@@Base+0x2b30>
  4268b1:	test   rcx,rcx
  4268b4:	je     4269f3 <__flatcc_fb_build_schema@@Base+0x2c83>
  4268ba:	add    eax,0xffffffff
  4268bd:	mov    QWORD PTR [rcx],rsi
  4268c0:	test   r12,r12
  4268c3:	je     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  4268c9:	test   r13,r13
  4268cc:	je     426a01 <__flatcc_fb_build_schema@@Base+0x2c91>
  4268d2:	cmp    eax,0x1
  4268d5:	jne    426a01 <__flatcc_fb_build_schema@@Base+0x2c91>
  4268db:	lea    rax,[r14+0x320]
  4268e2:	mov    QWORD PTR [rsp],rax
  4268e6:	movabs rbp,0xffffffff00000000
  4268f0:	lea    rdi,[r13+0x8]
  4268f4:	mov    rax,QWORD PTR [r12+0x8]
  4268f9:	mov    rsi,QWORD PTR [rax]
  4268fc:	mov    rdx,QWORD PTR [rax+0x8]
  426900:	call   419700 <fb_symbol_table_find@@Base>
  426905:	test   rax,rax
  426908:	je     42692c <__flatcc_fb_build_schema@@Base+0x2bbc>
  42690a:	mov    rbx,rax
  42690d:	movzx  eax,WORD PTR [rax+0x10]
  426911:	cmp    eax,0x4
  426914:	ja     42692c <__flatcc_fb_build_schema@@Base+0x2bbc>
  426916:	mov    rsi,QWORD PTR [rbx+0x20]
  42691a:	mov    rdi,QWORD PTR [rsp]
  42691e:	call   4190e0 <ptr_set_find_item@@Base>
  426923:	test   rax,rax
  426926:	jne    426a73 <__flatcc_fb_build_schema@@Base+0x2d03>
  42692c:	mov    rax,QWORD PTR [r13+0x0]
  426930:	test   rax,rax
  426933:	je     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  426939:	mov    edx,0x2
  42693e:	xor    esi,esi
  426940:	xor    ecx,ecx
  426942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42694c:	nop    DWORD PTR [rax+0x0]
  426950:	mov    rbx,rsi
  426953:	mov    r15,rdx
  426956:	mov    rax,QWORD PTR [rax]
  426959:	add    rcx,0x1
  42695d:	lea    rsi,[rsi+rbp*1]
  426961:	lea    rdx,[rdx+0x1]
  426965:	test   rax,rax
  426968:	jne    426950 <__flatcc_fb_build_schema@@Base+0x2be0>
  42696a:	nop    WORD PTR [rax+rax*1+0x0]
  426970:	mov    rdi,QWORD PTR [r14+0x260]
  426977:	add    r15,0xffffffffffffffff
  42697b:	cmp    r15,0x2
  42697f:	jl     4269c0 <__flatcc_fb_build_schema@@Base+0x2c50>
  426981:	test   rdi,rdi
  426984:	je     4269a0 <__flatcc_fb_build_schema@@Base+0x2c30>
  426986:	mov    rsi,QWORD PTR [r13+0x0]
  42698a:	mov    rdx,rbx
  42698d:	sar    rdx,0x20
  426991:	call   41a0d0 <fb_scope_table_find@@Base>
  426996:	jmp    4269a2 <__flatcc_fb_build_schema@@Base+0x2c32>
  426998:	nop    DWORD PTR [rax+rax*1+0x0]
  4269a0:	xor    eax,eax
  4269a2:	movabs rcx,0x100000000
  4269ac:	add    rbx,rcx
  4269af:	test   rax,rax
  4269b2:	je     426970 <__flatcc_fb_build_schema@@Base+0x2c00>
  4269b4:	jmp    4269d2 <__flatcc_fb_build_schema@@Base+0x2c62>
  4269b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269c0:	test   rdi,rdi
  4269c3:	je     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  4269c9:	xor    esi,esi
  4269cb:	xor    edx,edx
  4269cd:	call   41a0d0 <fb_scope_table_find@@Base>
  4269d2:	mov    r13,rax
  4269d5:	test   rax,rax
  4269d8:	jne    4268f0 <__flatcc_fb_build_schema@@Base+0x2b80>
  4269de:	jmp    426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  4269e3:	xor    r12d,r12d
  4269e6:	xor    esi,esi
  4269e8:	xor    eax,eax
  4269ea:	test   rcx,rcx
  4269ed:	jne    4268ba <__flatcc_fb_build_schema@@Base+0x2b4a>
  4269f3:	mov    r12,rsi
  4269f6:	test   r12,r12
  4269f9:	jne    4268c9 <__flatcc_fb_build_schema@@Base+0x2b59>
  4269ff:	jmp    426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  426a01:	mov    rdi,QWORD PTR [r14+0x260]
  426a08:	test   rdi,rdi
  426a0b:	je     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  426a0d:	xor    ebx,ebx
  426a0f:	cmp    eax,0x1
  426a12:	cmove  rdx,rbx
  426a16:	mov    ecx,0x1
  426a1b:	sub    ecx,eax
  426a1d:	movsxd rax,ecx
  426a20:	mov    rsi,rdx
  426a23:	mov    rdx,rax
  426a26:	call   41a0d0 <fb_scope_table_find@@Base>
  426a2b:	test   rax,rax
  426a2e:	je     426a73 <__flatcc_fb_build_schema@@Base+0x2d03>
  426a30:	add    rax,0x8
  426a34:	mov    rcx,QWORD PTR [r12+0x8]
  426a39:	mov    rsi,QWORD PTR [rcx]
  426a3c:	mov    rdx,QWORD PTR [rcx+0x8]
  426a40:	mov    rdi,rax
  426a43:	call   419700 <fb_symbol_table_find@@Base>
  426a48:	test   rax,rax
  426a4b:	je     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  426a4d:	mov    rbx,rax
  426a50:	movzx  eax,WORD PTR [rax+0x10]
  426a54:	cmp    eax,0x4
  426a57:	ja     426a71 <__flatcc_fb_build_schema@@Base+0x2d01>
  426a59:	add    r14,0x320
  426a60:	mov    rsi,QWORD PTR [rbx+0x20]
  426a64:	mov    rdi,r14
  426a67:	call   4190e0 <ptr_set_find_item@@Base>
  426a6c:	test   rax,rax
  426a6f:	jne    426a73 <__flatcc_fb_build_schema@@Base+0x2d03>
  426a71:	xor    ebx,ebx
  426a73:	mov    rax,rbx
  426a76:	add    rsp,0x8
  426a7a:	pop    rbx
  426a7b:	pop    r12
  426a7d:	pop    r13
  426a7f:	pop    r14
  426a81:	pop    r15
  426a83:	pop    rbp
  426a84:	ret    
  426a85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a8f:	nop

0000000000426a90 <__flatcc_fb_coerce_scalar_type@@Base>:
  426a90:	push   r14
  426a92:	push   rbx
  426a93:	push   rax
  426a94:	movzx  ebx,WORD PTR [rcx+0x10]
  426a98:	xor    eax,eax
  426a9a:	cmp    ebx,0x2
  426a9d:	jb     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426aa3:	lea    r14,[rcx+0x10]
  426aa7:	movzx  r8d,bx
  426aab:	cmp    r8d,0x4
  426aaf:	jne    426ac3 <__flatcc_fb_coerce_scalar_type@@Base+0x33>
  426ab1:	cmp    QWORD PTR [rcx],0x0
  426ab5:	js     426b0d <__flatcc_fb_coerce_scalar_type@@Base+0x7d>
  426ab7:	mov    WORD PTR [r14],0x5
  426abd:	mov    bx,0x5
  426ac1:	jmp    426b17 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  426ac3:	cmp    edx,0x5
  426ac6:	je     426b17 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  426ac8:	cmp    r8d,0x6
  426acc:	jne    426b17 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  426ace:	cmp    DWORD PTR [rdi+0xfc],0x0
  426ad5:	je     426b13 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  426ad7:	mov    WORD PTR [rcx+0x10],0x5
  426add:	movzx  r8d,BYTE PTR [rcx]
  426ae1:	mov    QWORD PTR [rcx],r8
  426ae4:	mov    bx,0x5
  426ae8:	cmp    r8,0x2
  426aec:	jb     426b17 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  426aee:	lea    rdi,[rip+0x2259f]        # 449094 <fb_schema_table_deleted@@Base+0x2964>
  426af5:	lea    rsi,[rip+0x225b7]        # 4490b3 <fb_schema_table_deleted@@Base+0x2983>
  426afc:	lea    rcx,[rip+0x22610]        # 449113 <fb_schema_table_deleted@@Base+0x29e3>
  426b03:	mov    edx,0x34
  426b08:	call   4060f0 <__assert_fail@plt>
  426b0d:	mov    bx,0x4
  426b11:	jmp    426b17 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  426b13:	mov    bx,0x6
  426b17:	add    edx,0xffffffff
  426b1a:	cmp    edx,0xa
  426b1d:	ja     426d4b <__flatcc_fb_coerce_scalar_type@@Base+0x2bb>
  426b23:	lea    r8,[rip+0x2253e]        # 449068 <fb_schema_table_deleted@@Base+0x2938>
  426b2a:	movsxd rdx,DWORD PTR [r8+rdx*4]
  426b2e:	add    rdx,r8
  426b31:	jmp    rdx
  426b33:	movzx  ecx,bx
  426b36:	cmp    ecx,0x5
  426b39:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426b3f:	mov    rsi,QWORD PTR [rsi+0x8]
  426b43:	lea    rdx,[rip+0x2262a]        # 449174 <fb_schema_table_deleted@@Base+0x2a44>
  426b4a:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426b4f:	movzx  edx,bx
  426b52:	cmp    edx,0x6
  426b55:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426b5b:	cmp    edx,0x5
  426b5e:	jne    426d8b <__flatcc_fb_coerce_scalar_type@@Base+0x2fb>
  426b64:	cmp    DWORD PTR [rdi+0xfc],0x0
  426b6b:	je     426d8b <__flatcc_fb_coerce_scalar_type@@Base+0x2fb>
  426b71:	cmp    QWORD PTR [rcx],0x2
  426b75:	jb     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426b7b:	mov    rsi,QWORD PTR [rsi+0x8]
  426b7f:	lea    rdx,[rip+0x228a0]        # 449426 <fb_schema_table_deleted@@Base+0x2cf6>
  426b86:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426b8b:	movzx  edx,bx
  426b8e:	cmp    edx,0x3
  426b91:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426b97:	cmp    edx,0x5
  426b9a:	je     426e32 <__flatcc_fb_coerce_scalar_type@@Base+0x3a2>
  426ba0:	cmp    edx,0x4
  426ba3:	jne    426e8f <__flatcc_fb_coerce_scalar_type@@Base+0x3ff>
  426ba9:	mov    rdx,QWORD PTR [rcx]
  426bac:	vcvtsi2sd xmm0,xmm0,rdx
  426bb1:	vcvttsd2si rbx,xmm0
  426bb6:	cmp    rdx,rbx
  426bb9:	jne    426e82 <__flatcc_fb_coerce_scalar_type@@Base+0x3f2>
  426bbf:	jmp    426f26 <__flatcc_fb_coerce_scalar_type@@Base+0x496>
  426bc4:	movzx  edx,bx
  426bc7:	cmp    edx,0x5
  426bca:	jne    426d5b <__flatcc_fb_coerce_scalar_type@@Base+0x2cb>
  426bd0:	cmp    QWORD PTR [rcx],0x10000
  426bd7:	jb     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426bdd:	mov    rsi,QWORD PTR [rsi+0x8]
  426be1:	lea    rdx,[rip+0x2264f]        # 449237 <fb_schema_table_deleted@@Base+0x2b07>
  426be8:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426bed:	movzx  edx,bx
  426bf0:	cmp    edx,0x5
  426bf3:	jne    426d6b <__flatcc_fb_coerce_scalar_type@@Base+0x2db>
  426bf9:	cmp    QWORD PTR [rcx],0x100
  426c00:	jb     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426c06:	mov    rsi,QWORD PTR [rsi+0x8]
  426c0a:	lea    rdx,[rip+0x2267d]        # 44928e <fb_schema_table_deleted@@Base+0x2b5e>
  426c11:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426c16:	movzx  edx,bx
  426c19:	cmp    edx,0x5
  426c1c:	je     426d9b <__flatcc_fb_coerce_scalar_type@@Base+0x30b>
  426c22:	cmp    edx,0x4
  426c25:	jne    426df2 <__flatcc_fb_coerce_scalar_type@@Base+0x362>
  426c2b:	cmp    QWORD PTR [rcx],0xffffffffffff7fff
  426c32:	jg     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426c38:	mov    rsi,QWORD PTR [rsi+0x8]
  426c3c:	lea    rdx,[rip+0x22715]        # 449358 <fb_schema_table_deleted@@Base+0x2c28>
  426c43:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426c48:	movzx  edx,bx
  426c4b:	cmp    edx,0x5
  426c4e:	jne    426d7b <__flatcc_fb_coerce_scalar_type@@Base+0x2eb>
  426c54:	cmp    DWORD PTR [rcx+0x4],0x0
  426c58:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426c5e:	mov    rsi,QWORD PTR [rsi+0x8]
  426c62:	lea    rdx,[rip+0x22577]        # 4491e0 <fb_schema_table_deleted@@Base+0x2ab0>
  426c69:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426c6e:	movzx  edx,bx
  426c71:	cmp    edx,0x4
  426c74:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426c7a:	cmp    edx,0x5
  426c7d:	jne    426e02 <__flatcc_fb_coerce_scalar_type@@Base+0x372>
  426c83:	cmp    QWORD PTR [rcx],0x0
  426c87:	jns    426de7 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  426c8d:	mov    rsi,QWORD PTR [rsi+0x8]
  426c91:	lea    rdx,[rip+0x22613]        # 4492ab <fb_schema_table_deleted@@Base+0x2b7b>
  426c98:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426c9d:	movzx  edx,bx
  426ca0:	cmp    edx,0x5
  426ca3:	je     426db4 <__flatcc_fb_coerce_scalar_type@@Base+0x324>
  426ca9:	cmp    edx,0x4
  426cac:	jne    426e12 <__flatcc_fb_coerce_scalar_type@@Base+0x382>
  426cb2:	movabs rdx,0xffffffff7fffffff
  426cbc:	cmp    QWORD PTR [rcx],rdx
  426cbf:	jg     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426cc5:	mov    rsi,QWORD PTR [rsi+0x8]
  426cc9:	lea    rdx,[rip+0x22624]        # 4492f4 <fb_schema_table_deleted@@Base+0x2bc4>
  426cd0:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426cd5:	movzx  edx,bx
  426cd8:	cmp    edx,0x5
  426cdb:	je     426dce <__flatcc_fb_coerce_scalar_type@@Base+0x33e>
  426ce1:	cmp    edx,0x4
  426ce4:	jne    426e22 <__flatcc_fb_coerce_scalar_type@@Base+0x392>
  426cea:	cmp    QWORD PTR [rcx],0xffffffffffffff7f
  426cf1:	jg     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426cf7:	mov    rsi,QWORD PTR [rsi+0x8]
  426cfb:	lea    rdx,[rip+0x226c0]        # 4493c2 <fb_schema_table_deleted@@Base+0x2c92>
  426d02:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d07:	movzx  edx,bx
  426d0a:	cmp    edx,0x3
  426d0d:	je     426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426d13:	cmp    edx,0x5
  426d16:	je     426e9c <__flatcc_fb_coerce_scalar_type@@Base+0x40c>
  426d1c:	cmp    edx,0x4
  426d1f:	jne    426eab <__flatcc_fb_coerce_scalar_type@@Base+0x41b>
  426d25:	mov    rdx,QWORD PTR [rcx]
  426d28:	vcvtsi2ss xmm0,xmm0,rdx
  426d2d:	vcvttss2si rbx,xmm0
  426d32:	cmp    rdx,rbx
  426d35:	je     426f22 <__flatcc_fb_coerce_scalar_type@@Base+0x492>
  426d3b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d3f:	lea    rdx,[rip+0x227bd]        # 449503 <fb_schema_table_deleted@@Base+0x2dd3>
  426d46:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d4b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d4f:	lea    rdx,[rip+0x22814]        # 44956a <fb_schema_table_deleted@@Base+0x2e3a>
  426d56:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d5b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d5f:	lea    rdx,[rip+0x22497]        # 4491fd <fb_schema_table_deleted@@Base+0x2acd>
  426d66:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d6b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d6f:	lea    rdx,[rip+0x224e0]        # 449256 <fb_schema_table_deleted@@Base+0x2b26>
  426d76:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d7b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d7f:	lea    rdx,[rip+0x22422]        # 4491a8 <fb_schema_table_deleted@@Base+0x2a78>
  426d86:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d8b:	mov    rsi,QWORD PTR [rsi+0x8]
  426d8f:	lea    rdx,[rip+0x226ce]        # 449464 <fb_schema_table_deleted@@Base+0x2d34>
  426d96:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426d9b:	cmp    QWORD PTR [rcx],0x8000
  426da2:	jl     426de7 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  426da4:	mov    rsi,QWORD PTR [rsi+0x8]
  426da8:	lea    rdx,[rip+0x225c7]        # 449376 <fb_schema_table_deleted@@Base+0x2c46>
  426daf:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426db4:	mov    edx,0x80000000
  426db9:	cmp    QWORD PTR [rcx],rdx
  426dbc:	jl     426de7 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  426dbe:	mov    rsi,QWORD PTR [rsi+0x8]
  426dc2:	lea    rdx,[rip+0x22547]        # 449310 <fb_schema_table_deleted@@Base+0x2be0>
  426dc9:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426dce:	cmp    QWORD PTR [rcx],0x80
  426dd5:	jl     426de7 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  426dd7:	mov    rsi,QWORD PTR [rsi+0x8]
  426ddb:	lea    rdx,[rip+0x225fc]        # 4493de <fb_schema_table_deleted@@Base+0x2cae>
  426de2:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426de7:	mov    WORD PTR [r14],0x4
  426ded:	jmp    426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426df2:	mov    rsi,QWORD PTR [rsi+0x8]
  426df6:	lea    rdx,[rip+0x22596]        # 449393 <fb_schema_table_deleted@@Base+0x2c63>
  426dfd:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e02:	mov    rsi,QWORD PTR [rsi+0x8]
  426e06:	lea    rdx,[rip+0x224bd]        # 4492ca <fb_schema_table_deleted@@Base+0x2b9a>
  426e0d:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e12:	mov    rsi,QWORD PTR [rsi+0x8]
  426e16:	lea    rdx,[rip+0x2250e]        # 44932b <fb_schema_table_deleted@@Base+0x2bfb>
  426e1d:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e22:	mov    rsi,QWORD PTR [rsi+0x8]
  426e26:	lea    rdx,[rip+0x225cc]        # 4493f9 <fb_schema_table_deleted@@Base+0x2cc9>
  426e2d:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e32:	mov    r9,QWORD PTR [rcx]
  426e35:	vmovq  xmm0,r9
  426e3a:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x221fe]        # 449040 <fb_schema_table_deleted@@Base+0x2910>
  426e42:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x22206]        # 449050 <fb_schema_table_deleted@@Base+0x2920>
  426e4a:	vhaddpd xmm0,xmm0,xmm0
  426e4e:	vmovsd xmm1,QWORD PTR [rip+0x2220a]        # 449060 <fb_schema_table_deleted@@Base+0x2930>
  426e56:	vsubsd xmm2,xmm0,xmm1
  426e5a:	vcvttsd2si r8,xmm2
  426e5f:	movabs rbx,0x8000000000000000
  426e69:	xor    rbx,r8
  426e6c:	vcvttsd2si rdx,xmm0
  426e71:	vucomisd xmm0,xmm1
  426e75:	cmovae rdx,rbx
  426e79:	cmp    r9,rdx
  426e7c:	je     426f26 <__flatcc_fb_coerce_scalar_type@@Base+0x496>
  426e82:	mov    rsi,QWORD PTR [rsi+0x8]
  426e86:	lea    rdx,[rip+0x2260d]        # 44949a <fb_schema_table_deleted@@Base+0x2d6a>
  426e8d:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e8f:	mov    rsi,QWORD PTR [rsi+0x8]
  426e93:	lea    rdx,[rip+0x22630]        # 4494ca <fb_schema_table_deleted@@Base+0x2d9a>
  426e9a:	jmp    426eb6 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  426e9c:	mov    r9,QWORD PTR [rcx]
  426e9f:	test   r9,r9
  426ea2:	js     426ed6 <__flatcc_fb_coerce_scalar_type@@Base+0x446>
  426ea4:	vcvtsi2ss xmm0,xmm0,r9
  426ea9:	jmp    426eee <__flatcc_fb_coerce_scalar_type@@Base+0x45e>
  426eab:	mov    rsi,QWORD PTR [rsi+0x8]
  426eaf:	lea    rdx,[rip+0x2267c]        # 449532 <fb_schema_table_deleted@@Base+0x2e02>
  426eb6:	xor    ecx,ecx
  426eb8:	xor    r8d,r8d
  426ebb:	xor    r9d,r9d
  426ebe:	call   41ba60 <__flatcc_error_report@@Base>
  426ec3:	mov    WORD PTR [r14],0x1
  426ec9:	mov    eax,0xffffffff
  426ece:	add    rsp,0x8
  426ed2:	pop    rbx
  426ed3:	pop    r14
  426ed5:	ret    
  426ed6:	mov    r8,r9
  426ed9:	shr    r8,1
  426edc:	mov    edx,r9d
  426edf:	and    edx,0x1
  426ee2:	or     rdx,r8
  426ee5:	vcvtsi2ss xmm0,xmm0,rdx
  426eea:	vaddss xmm0,xmm0,xmm0
  426eee:	vmovss xmm1,DWORD PTR [rip+0x2213e]        # 449034 <fb_schema_table_deleted@@Base+0x2904>
  426ef6:	vsubss xmm2,xmm0,xmm1
  426efa:	vcvttss2si r8,xmm2
  426eff:	movabs rdx,0x8000000000000000
  426f09:	xor    rdx,r8
  426f0c:	vcvttss2si rbx,xmm0
  426f11:	vucomiss xmm0,xmm1
  426f15:	cmovae rbx,rdx
  426f19:	cmp    r9,rbx
  426f1c:	jne    426d3b <__flatcc_fb_coerce_scalar_type@@Base+0x2ab>
  426f22:	vcvtss2sd xmm0,xmm0,xmm0
  426f26:	vmovsd QWORD PTR [rcx],xmm0
  426f2a:	mov    WORD PTR [rcx+0x10],0x3
  426f30:	jmp    426ece <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  426f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f3c:	nop    DWORD PTR [rax+0x0]

0000000000426f40 <flatcc_builder_default_alloc@@Base>:
  426f40:	push   rbp
  426f41:	push   r15
  426f43:	push   r14
  426f45:	push   r12
  426f47:	push   rbx
  426f48:	mov    rbx,rsi
  426f4b:	test   rdx,rdx
  426f4e:	je     426f79 <flatcc_builder_default_alloc@@Base+0x39>
  426f50:	mov    r14d,ecx
  426f53:	add    r8d,0xffffffff
  426f57:	cmp    r8d,0x6
  426f5b:	ja     426f97 <flatcc_builder_default_alloc@@Base+0x57>
  426f5d:	mov    eax,0x100
  426f62:	lea    rcx,[rip+0x22617]        # 449580 <fb_schema_table_deleted@@Base+0x2e50>
  426f69:	movsxd rsi,DWORD PTR [rcx+r8*4]
  426f6d:	add    rsi,rcx
  426f70:	jmp    rsi
  426f72:	mov    eax,0x120
  426f77:	jmp    426fb0 <flatcc_builder_default_alloc@@Base+0x70>
  426f79:	mov    rdi,QWORD PTR [rbx]
  426f7c:	xor    r15d,r15d
  426f7f:	test   rdi,rdi
  426f82:	je     427010 <flatcc_builder_default_alloc@@Base+0xd0>
  426f88:	call   406040 <free@plt>
  426f8d:	vxorps xmm0,xmm0,xmm0
  426f91:	vmovups XMMWORD PTR [rbx],xmm0
  426f95:	jmp    427010 <flatcc_builder_default_alloc@@Base+0xd0>
  426f97:	mov    eax,0x20
  426f9c:	jmp    426fb0 <flatcc_builder_default_alloc@@Base+0x70>
  426f9e:	mov    rax,rdx
  426fa1:	jmp    426fb0 <flatcc_builder_default_alloc@@Base+0x70>
  426fa3:	mov    eax,0x40
  426fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  426fb0:	mov    rbp,rax
  426fb3:	lea    rax,[rax+rax*1]
  426fb7:	cmp    rbp,rdx
  426fba:	jb     426fb0 <flatcc_builder_default_alloc@@Base+0x70>
  426fbc:	mov    rax,QWORD PTR [rbx+0x8]
  426fc0:	xor    r15d,r15d
  426fc3:	cmp    rax,rdx
  426fc6:	jb     426fd0 <flatcc_builder_default_alloc@@Base+0x90>
  426fc8:	shr    rax,1
  426fcb:	cmp    rax,rbp
  426fce:	jae    427010 <flatcc_builder_default_alloc@@Base+0xd0>
  426fd0:	mov    rdi,QWORD PTR [rbx]
  426fd3:	mov    rsi,rbp
  426fd6:	call   4061c0 <realloc@plt>
  426fdb:	test   rax,rax
  426fde:	je     42700a <flatcc_builder_default_alloc@@Base+0xca>
  426fe0:	mov    r12,rax
  426fe3:	test   r14d,r14d
  426fe6:	je     427001 <flatcc_builder_default_alloc@@Base+0xc1>
  426fe8:	mov    rax,QWORD PTR [rbx+0x8]
  426fec:	mov    rdx,rbp
  426fef:	sub    rdx,rax
  426ff2:	jbe    427001 <flatcc_builder_default_alloc@@Base+0xc1>
  426ff4:	mov    rdi,r12
  426ff7:	add    rdi,rax
  426ffa:	xor    esi,esi
  426ffc:	call   406100 <memset@plt>
  427001:	mov    QWORD PTR [rbx],r12
  427004:	mov    QWORD PTR [rbx+0x8],rbp
  427008:	jmp    427010 <flatcc_builder_default_alloc@@Base+0xd0>
  42700a:	mov    r15d,0xffffffff
  427010:	mov    eax,r15d
  427013:	pop    rbx
  427014:	pop    r12
  427016:	pop    r14
  427018:	pop    r15
  42701a:	pop    rbp
  42701b:	ret    
  42701c:	nop    DWORD PTR [rax+0x0]

0000000000427020 <flatcc_builder_flush_vtable_cache@@Base>:
  427020:	cmp    QWORD PTR [rdi+0xd8],0x0
  427028:	je     427055 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  42702a:	push   rbx
  42702b:	mov    rbx,rdi
  42702e:	mov    rdi,QWORD PTR [rdi+0xa8]
  427035:	mov    rdx,QWORD PTR [rbx+0xb0]
  42703c:	xor    esi,esi
  42703e:	call   406100 <memset@plt>
  427043:	movabs rax,0x1000000000
  42704d:	mov    QWORD PTR [rbx+0xe0],rax
  427054:	pop    rbx
  427055:	ret    
  427056:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427060 <flatcc_builder_custom_init@@Base>:
  427060:	vxorps xmm0,xmm0,xmm0
  427064:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  42706c:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427074:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  42707c:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  427084:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  42708c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  427094:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  42709c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  4270a4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  4270a9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  4270ae:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  4270b3:	vmovups YMMWORD PTR [rdi],ymm0
  4270b7:	mov    QWORD PTR [rdi+0x180],0x0
  4270c2:	test   rsi,rsi
  4270c5:	je     4270e9 <flatcc_builder_custom_init@@Base+0x89>
  4270c7:	test   rcx,rcx
  4270ca:	jne    4270d3 <flatcc_builder_custom_init@@Base+0x73>
  4270cc:	lea    rcx,[rip+0xfffffffffffffe6d]        # 426f40 <flatcc_builder_default_alloc@@Base>
  4270d3:	mov    QWORD PTR [rdi+0x40],r8
  4270d7:	mov    QWORD PTR [rdi+0x50],rcx
  4270db:	mov    QWORD PTR [rdi+0x38],rdx
  4270df:	mov    QWORD PTR [rdi+0x48],rsi
  4270e3:	xor    eax,eax
  4270e5:	vzeroupper 
  4270e8:	ret    
  4270e9:	mov    DWORD PTR [rdi+0x128],0x1
  4270f3:	lea    rdx,[rdi+0x130]
  4270fa:	lea    rsi,[rip+0x4acf]        # 42bbd0 <flatcc_emitter@@Base>
  427101:	test   rcx,rcx
  427104:	je     4270cc <flatcc_builder_custom_init@@Base+0x6c>
  427106:	jmp    4270d3 <flatcc_builder_custom_init@@Base+0x73>
  427108:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427110 <flatcc_builder_init@@Base>:
  427110:	vxorps xmm0,xmm0,xmm0
  427114:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  42711c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  427121:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  427126:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  42712e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427136:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  42713e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  427146:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  42714e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  427156:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  42715e:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  427163:	vmovups YMMWORD PTR [rdi],ymm0
  427167:	mov    QWORD PTR [rdi+0x180],0x0
  427172:	mov    DWORD PTR [rdi+0x128],0x1
  42717c:	lea    rax,[rdi+0x130]
  427183:	mov    QWORD PTR [rdi+0x40],0x0
  42718b:	lea    rcx,[rip+0xfffffffffffffdae]        # 426f40 <flatcc_builder_default_alloc@@Base>
  427192:	mov    QWORD PTR [rdi+0x50],rcx
  427196:	mov    QWORD PTR [rdi+0x38],rax
  42719a:	lea    rax,[rip+0x4a2f]        # 42bbd0 <flatcc_emitter@@Base>
  4271a1:	mov    QWORD PTR [rdi+0x48],rax
  4271a5:	xor    eax,eax
  4271a7:	vzeroupper 
  4271aa:	ret    
  4271ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004271b0 <flatcc_builder_custom_reset@@Base>:
  4271b0:	push   rbp
  4271b1:	push   r15
  4271b3:	push   r14
  4271b5:	push   r12
  4271b7:	push   rbx
  4271b8:	mov    r15d,edx
  4271bb:	mov    r14d,esi
  4271be:	mov    r12,rdi
  4271c1:	lea    rbp,[rdi+0x58]
  4271c5:	xor    ebx,ebx
  4271c7:	nop    WORD PTR [rax+rax*1+0x0]
  4271d0:	mov    rdi,QWORD PTR [rbp+0x0]
  4271d4:	test   rdi,rdi
  4271d7:	je     427220 <flatcc_builder_custom_reset@@Base+0x70>
  4271d9:	test   r15d,r15d
  4271dc:	je     42720a <flatcc_builder_custom_reset@@Base+0x5a>
  4271de:	cmp    rbx,0x5
  4271e2:	je     42720a <flatcc_builder_custom_reset@@Base+0x5a>
  4271e4:	mov    rdi,QWORD PTR [r12+0x40]
  4271e9:	mov    edx,0x1
  4271ee:	mov    ecx,0x1
  4271f3:	mov    rsi,rbp
  4271f6:	mov    r8d,ebx
  4271f9:	call   QWORD PTR [r12+0x50]
  4271fe:	test   eax,eax
  427200:	jne    4272e0 <flatcc_builder_custom_reset@@Base+0x130>
  427206:	mov    rdi,QWORD PTR [rbp+0x0]
  42720a:	mov    rdx,QWORD PTR [rbp+0x8]
  42720e:	xor    esi,esi
  427210:	call   406100 <memset@plt>
  427215:	jmp    42722b <flatcc_builder_custom_reset@@Base+0x7b>
  427217:	nop    WORD PTR [rax+rax*1+0x0]
  427220:	cmp    QWORD PTR [rbp+0x8],0x0
  427225:	jne    4272f0 <flatcc_builder_custom_reset@@Base+0x140>
  42722b:	add    rbx,0x1
  42722f:	add    rbp,0x10
  427233:	cmp    rbx,0x8
  427237:	jb     4271d0 <flatcc_builder_custom_reset@@Base+0x20>
  427239:	mov    DWORD PTR [r12+0xe0],0x0
  427245:	cmp    DWORD PTR [r12+0xe4],0x0
  42724e:	je     42725c <flatcc_builder_custom_reset@@Base+0xac>
  427250:	mov    DWORD PTR [r12+0xe4],0x10
  42725c:	mov    WORD PTR [r12+0xe8],0x0
  427267:	mov    QWORD PTR [r12+0xf0],0x0
  427273:	mov    QWORD PTR [r12+0x20],0x0
  42727c:	vxorps xmm0,xmm0,xmm0
  427280:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  42728a:	mov    rax,QWORD PTR [r12+0x58]
  42728f:	mov    rcx,QWORD PTR [r12+0x68]
  427294:	mov    QWORD PTR [r12+0x18],rcx
  427299:	mov    rcx,QWORD PTR [r12+0x88]
  4272a1:	mov    QWORD PTR [r12],rcx
  4272a5:	mov    QWORD PTR [r12+0x8],rax
  4272aa:	mov    QWORD PTR [r12+0x30],0x0
  4272b3:	test   r14d,r14d
  4272b6:	je     4272c2 <flatcc_builder_custom_reset@@Base+0x112>
  4272b8:	vmovups XMMWORD PTR [r12+0x118],xmm0
  4272c2:	xor    ebx,ebx
  4272c4:	cmp    DWORD PTR [r12+0x128],0x0
  4272cd:	je     4272e5 <flatcc_builder_custom_reset@@Base+0x135>
  4272cf:	add    r12,0x130
  4272d6:	mov    rdi,r12
  4272d9:	call   42ba50 <flatcc_emitter_reset@@Base>
  4272de:	jmp    4272e5 <flatcc_builder_custom_reset@@Base+0x135>
  4272e0:	mov    ebx,0xffffffff
  4272e5:	mov    eax,ebx
  4272e7:	pop    rbx
  4272e8:	pop    r12
  4272ea:	pop    r14
  4272ec:	pop    r15
  4272ee:	pop    rbp
  4272ef:	ret    
  4272f0:	lea    rdi,[rip+0x224d9]        # 4497d0 <flatcc_builder_padding_base@@Base+0x230>
  4272f7:	lea    rsi,[rip+0x224e4]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4272fe:	lea    rcx,[rip+0x2253d]        # 449842 <flatcc_builder_padding_base@@Base+0x2a2>
  427305:	mov    edx,0x1b2
  42730a:	call   4060f0 <__assert_fail@plt>
  42730f:	nop

0000000000427310 <flatcc_builder_reset@@Base>:
  427310:	push   rbx
  427311:	mov    rbx,rdi
  427314:	mov    rdi,QWORD PTR [rdi+0x58]
  427318:	mov    rdx,QWORD PTR [rbx+0x60]
  42731c:	test   rdi,rdi
  42731f:	je     42732a <flatcc_builder_reset@@Base+0x1a>
  427321:	xor    esi,esi
  427323:	call   406100 <memset@plt>
  427328:	jmp    427333 <flatcc_builder_reset@@Base+0x23>
  42732a:	test   rdx,rdx
  42732d:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  427333:	mov    rdi,QWORD PTR [rbx+0x68]
  427337:	mov    rdx,QWORD PTR [rbx+0x70]
  42733b:	test   rdi,rdi
  42733e:	je     427349 <flatcc_builder_reset@@Base+0x39>
  427340:	xor    esi,esi
  427342:	call   406100 <memset@plt>
  427347:	jmp    427352 <flatcc_builder_reset@@Base+0x42>
  427349:	test   rdx,rdx
  42734c:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  427352:	mov    rdi,QWORD PTR [rbx+0x78]
  427356:	mov    rdx,QWORD PTR [rbx+0x80]
  42735d:	test   rdi,rdi
  427360:	je     42736b <flatcc_builder_reset@@Base+0x5b>
  427362:	xor    esi,esi
  427364:	call   406100 <memset@plt>
  427369:	jmp    427374 <flatcc_builder_reset@@Base+0x64>
  42736b:	test   rdx,rdx
  42736e:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  427374:	mov    rdi,QWORD PTR [rbx+0x88]
  42737b:	mov    rdx,QWORD PTR [rbx+0x90]
  427382:	test   rdi,rdi
  427385:	je     427390 <flatcc_builder_reset@@Base+0x80>
  427387:	xor    esi,esi
  427389:	call   406100 <memset@plt>
  42738e:	jmp    427399 <flatcc_builder_reset@@Base+0x89>
  427390:	test   rdx,rdx
  427393:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  427399:	mov    rdi,QWORD PTR [rbx+0x98]
  4273a0:	mov    rdx,QWORD PTR [rbx+0xa0]
  4273a7:	test   rdi,rdi
  4273aa:	je     4273b5 <flatcc_builder_reset@@Base+0xa5>
  4273ac:	xor    esi,esi
  4273ae:	call   406100 <memset@plt>
  4273b3:	jmp    4273be <flatcc_builder_reset@@Base+0xae>
  4273b5:	test   rdx,rdx
  4273b8:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  4273be:	mov    rdi,QWORD PTR [rbx+0xa8]
  4273c5:	mov    rdx,QWORD PTR [rbx+0xb0]
  4273cc:	test   rdi,rdi
  4273cf:	je     4273da <flatcc_builder_reset@@Base+0xca>
  4273d1:	xor    esi,esi
  4273d3:	call   406100 <memset@plt>
  4273d8:	jmp    4273e3 <flatcc_builder_reset@@Base+0xd3>
  4273da:	test   rdx,rdx
  4273dd:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  4273e3:	mov    rdi,QWORD PTR [rbx+0xb8]
  4273ea:	mov    rdx,QWORD PTR [rbx+0xc0]
  4273f1:	test   rdi,rdi
  4273f4:	je     4273ff <flatcc_builder_reset@@Base+0xef>
  4273f6:	xor    esi,esi
  4273f8:	call   406100 <memset@plt>
  4273fd:	jmp    427408 <flatcc_builder_reset@@Base+0xf8>
  4273ff:	test   rdx,rdx
  427402:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  427408:	mov    rdi,QWORD PTR [rbx+0xc8]
  42740f:	mov    rdx,QWORD PTR [rbx+0xd0]
  427416:	test   rdi,rdi
  427419:	je     427424 <flatcc_builder_reset@@Base+0x114>
  42741b:	xor    esi,esi
  42741d:	call   406100 <memset@plt>
  427422:	jmp    42742d <flatcc_builder_reset@@Base+0x11d>
  427424:	test   rdx,rdx
  427427:	jne    4274b0 <flatcc_builder_reset@@Base+0x1a0>
  42742d:	mov    DWORD PTR [rbx+0xe0],0x0
  427437:	cmp    DWORD PTR [rbx+0xe4],0x0
  42743e:	je     42744a <flatcc_builder_reset@@Base+0x13a>
  427440:	mov    DWORD PTR [rbx+0xe4],0x10
  42744a:	mov    WORD PTR [rbx+0xe8],0x0
  427453:	mov    QWORD PTR [rbx+0xf0],0x0
  42745e:	mov    QWORD PTR [rbx+0x20],0x0
  427466:	vxorps xmm0,xmm0,xmm0
  42746a:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  427472:	mov    rax,QWORD PTR [rbx+0x58]
  427476:	mov    rcx,QWORD PTR [rbx+0x68]
  42747a:	mov    QWORD PTR [rbx+0x18],rcx
  42747e:	mov    rcx,QWORD PTR [rbx+0x88]
  427485:	mov    QWORD PTR [rbx],rcx
  427488:	mov    QWORD PTR [rbx+0x8],rax
  42748c:	mov    QWORD PTR [rbx+0x30],0x0
  427494:	cmp    DWORD PTR [rbx+0x128],0x0
  42749b:	je     4274ac <flatcc_builder_reset@@Base+0x19c>
  42749d:	add    rbx,0x130
  4274a4:	mov    rdi,rbx
  4274a7:	call   42ba50 <flatcc_emitter_reset@@Base>
  4274ac:	xor    eax,eax
  4274ae:	pop    rbx
  4274af:	ret    
  4274b0:	lea    rdi,[rip+0x22319]        # 4497d0 <flatcc_builder_padding_base@@Base+0x230>
  4274b7:	lea    rsi,[rip+0x22324]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4274be:	lea    rcx,[rip+0x2237d]        # 449842 <flatcc_builder_padding_base@@Base+0x2a2>
  4274c5:	mov    edx,0x1b2
  4274ca:	call   4060f0 <__assert_fail@plt>
  4274cf:	nop

00000000004274d0 <flatcc_builder_clear@@Base>:
  4274d0:	push   rbx
  4274d1:	mov    rbx,rdi
  4274d4:	lea    rsi,[rdi+0x58]
  4274d8:	mov    rdi,QWORD PTR [rdi+0x40]
  4274dc:	xor    edx,edx
  4274de:	xor    ecx,ecx
  4274e0:	xor    r8d,r8d
  4274e3:	call   QWORD PTR [rbx+0x50]
  4274e6:	lea    rsi,[rbx+0x68]
  4274ea:	mov    rdi,QWORD PTR [rbx+0x40]
  4274ee:	xor    edx,edx
  4274f0:	xor    ecx,ecx
  4274f2:	mov    r8d,0x1
  4274f8:	call   QWORD PTR [rbx+0x50]
  4274fb:	lea    rsi,[rbx+0x78]
  4274ff:	mov    rdi,QWORD PTR [rbx+0x40]
  427503:	xor    edx,edx
  427505:	xor    ecx,ecx
  427507:	mov    r8d,0x2
  42750d:	call   QWORD PTR [rbx+0x50]
  427510:	lea    rsi,[rbx+0x88]
  427517:	mov    rdi,QWORD PTR [rbx+0x40]
  42751b:	xor    edx,edx
  42751d:	xor    ecx,ecx
  42751f:	mov    r8d,0x3
  427525:	call   QWORD PTR [rbx+0x50]
  427528:	lea    rsi,[rbx+0x98]
  42752f:	mov    rdi,QWORD PTR [rbx+0x40]
  427533:	xor    edx,edx
  427535:	xor    ecx,ecx
  427537:	mov    r8d,0x4
  42753d:	call   QWORD PTR [rbx+0x50]
  427540:	lea    rsi,[rbx+0xa8]
  427547:	mov    rdi,QWORD PTR [rbx+0x40]
  42754b:	xor    edx,edx
  42754d:	xor    ecx,ecx
  42754f:	mov    r8d,0x5
  427555:	call   QWORD PTR [rbx+0x50]
  427558:	lea    rsi,[rbx+0xb8]
  42755f:	mov    rdi,QWORD PTR [rbx+0x40]
  427563:	xor    edx,edx
  427565:	xor    ecx,ecx
  427567:	mov    r8d,0x6
  42756d:	call   QWORD PTR [rbx+0x50]
  427570:	lea    rsi,[rbx+0xc8]
  427577:	mov    rdi,QWORD PTR [rbx+0x40]
  42757b:	xor    edx,edx
  42757d:	xor    ecx,ecx
  42757f:	mov    r8d,0x7
  427585:	call   QWORD PTR [rbx+0x50]
  427588:	cmp    DWORD PTR [rbx+0x128],0x0
  42758f:	je     42759d <flatcc_builder_clear@@Base+0xcd>
  427591:	lea    rdi,[rbx+0x130]
  427598:	call   42bb50 <flatcc_emitter_clear@@Base>
  42759d:	vxorps xmm0,xmm0,xmm0
  4275a1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  4275a9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  4275b1:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  4275b9:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  4275c1:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  4275c9:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  4275d1:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  4275d9:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  4275e1:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  4275e6:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  4275eb:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4275f0:	vmovups YMMWORD PTR [rbx],ymm0
  4275f4:	mov    QWORD PTR [rbx+0x180],0x0
  4275ff:	pop    rbx
  427600:	vzeroupper 
  427603:	ret    
  427604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42760e:	xchg   ax,ax

0000000000427610 <flatcc_builder_enter_user_frame_ptr@@Base>:
  427610:	push   r15
  427612:	push   r14
  427614:	push   r12
  427616:	push   rbx
  427617:	push   rax
  427618:	mov    r14,rsi
  42761b:	mov    r15,rdi
  42761e:	add    r14,0xf
  427622:	and    r14,0xfffffffffffffff8
  427626:	mov    rbx,QWORD PTR [rdi+0x180]
  42762d:	lea    r12,[rdi+0xc8]
  427634:	lea    rdx,[rbx+r14*1]
  427638:	cmp    rdx,QWORD PTR [rdi+0xd0]
  42763f:	jbe    427658 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  427641:	mov    rdi,QWORD PTR [r15+0x40]
  427645:	xor    ecx,ecx
  427647:	mov    r8d,0x7
  42764d:	mov    rsi,r12
  427650:	call   QWORD PTR [r15+0x50]
  427654:	test   eax,eax
  427656:	jne    4276a8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  427658:	add    rbx,QWORD PTR [r12]
  42765c:	je     427697 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  42765e:	xor    esi,esi
  427660:	mov    rdi,rbx
  427663:	mov    rdx,r14
  427666:	call   406100 <memset@plt>
  42766b:	mov    rax,QWORD PTR [r15+0x178]
  427672:	mov    QWORD PTR [rbx],rax
  427675:	add    rbx,0x8
  427679:	mov    rax,QWORD PTR [r15+0x180]
  427680:	lea    rcx,[rax+0x8]
  427684:	mov    QWORD PTR [r15+0x178],rcx
  42768b:	add    rax,r14
  42768e:	mov    QWORD PTR [r15+0x180],rax
  427695:	jmp    427699 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  427697:	xor    ebx,ebx
  427699:	mov    rax,rbx
  42769c:	add    rsp,0x8
  4276a0:	pop    rbx
  4276a1:	pop    r12
  4276a3:	pop    r14
  4276a5:	pop    r15
  4276a7:	ret    
  4276a8:	lea    rdi,[rip+0x18cdc]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4276af:	lea    rsi,[rip+0x2212c]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4276b6:	lea    rcx,[rip+0x2311f]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  4276bd:	mov    edx,0x134
  4276c2:	call   4060f0 <__assert_fail@plt>
  4276c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004276d0 <flatcc_builder_enter_user_frame@@Base>:
  4276d0:	push   r15
  4276d2:	push   r14
  4276d4:	push   r12
  4276d6:	push   rbx
  4276d7:	push   rax
  4276d8:	mov    r14,rsi
  4276db:	mov    rbx,rdi
  4276de:	add    r14,0xf
  4276e2:	and    r14,0xfffffffffffffff8
  4276e6:	mov    r15,QWORD PTR [rdi+0x180]
  4276ed:	lea    r12,[rdi+0xc8]
  4276f4:	lea    rdx,[r15+r14*1]
  4276f8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  4276ff:	jbe    427717 <flatcc_builder_enter_user_frame@@Base+0x47>
  427701:	mov    rdi,QWORD PTR [rbx+0x40]
  427705:	xor    ecx,ecx
  427707:	mov    r8d,0x7
  42770d:	mov    rsi,r12
  427710:	call   QWORD PTR [rbx+0x50]
  427713:	test   eax,eax
  427715:	jne    427760 <flatcc_builder_enter_user_frame@@Base+0x90>
  427717:	add    r15,QWORD PTR [r12]
  42771b:	je     427752 <flatcc_builder_enter_user_frame@@Base+0x82>
  42771d:	xor    esi,esi
  42771f:	mov    rdi,r15
  427722:	mov    rdx,r14
  427725:	call   406100 <memset@plt>
  42772a:	mov    rax,QWORD PTR [rbx+0x178]
  427731:	mov    QWORD PTR [r15],rax
  427734:	mov    rcx,QWORD PTR [rbx+0x180]
  42773b:	lea    rax,[rcx+0x8]
  42773f:	mov    QWORD PTR [rbx+0x178],rax
  427746:	add    rcx,r14
  427749:	mov    QWORD PTR [rbx+0x180],rcx
  427750:	jmp    427754 <flatcc_builder_enter_user_frame@@Base+0x84>
  427752:	xor    eax,eax
  427754:	add    rsp,0x8
  427758:	pop    rbx
  427759:	pop    r12
  42775b:	pop    r14
  42775d:	pop    r15
  42775f:	ret    
  427760:	lea    rdi,[rip+0x18c24]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427767:	lea    rsi,[rip+0x22074]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42776e:	lea    rcx,[rip+0x23067]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  427775:	mov    edx,0x134
  42777a:	call   4060f0 <__assert_fail@plt>
  42777f:	nop

0000000000427780 <flatcc_builder_exit_user_frame@@Base>:
  427780:	mov    rax,QWORD PTR [rdi+0x178]
  427787:	test   rax,rax
  42778a:	je     4277ad <flatcc_builder_exit_user_frame@@Base+0x2d>
  42778c:	mov    rcx,QWORD PTR [rdi+0xc8]
  427793:	mov    edx,eax
  427795:	add    rax,0xfffffffffffffff8
  427799:	mov    QWORD PTR [rdi+0x180],rax
  4277a0:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  4277a5:	mov    QWORD PTR [rdi+0x178],rax
  4277ac:	ret    
  4277ad:	push   rax
  4277ae:	lea    rdi,[rip+0x220cb]        # 449880 <flatcc_builder_padding_base@@Base+0x2e0>
  4277b5:	lea    rsi,[rip+0x22026]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4277bc:	lea    rcx,[rip+0x220d6]        # 449899 <flatcc_builder_padding_base@@Base+0x2f9>
  4277c3:	mov    edx,0x21e
  4277c8:	call   4060f0 <__assert_fail@plt>
  4277cd:	nop    DWORD PTR [rax]

00000000004277d0 <flatcc_builder_exit_user_frame_at@@Base>:
  4277d0:	push   rax
  4277d1:	cmp    QWORD PTR [rdi+0x178],rsi
  4277d8:	jb     427808 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  4277da:	mov    QWORD PTR [rdi+0x178],rsi
  4277e1:	test   rsi,rsi
  4277e4:	je     427827 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  4277e6:	mov    rax,QWORD PTR [rdi+0xc8]
  4277ed:	mov    ecx,esi
  4277ef:	add    rsi,0xfffffffffffffff8
  4277f3:	mov    QWORD PTR [rdi+0x180],rsi
  4277fa:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  4277ff:	mov    QWORD PTR [rdi+0x178],rax
  427806:	pop    rcx
  427807:	ret    
  427808:	lea    rdi,[rip+0x220c4]        # 4498d3 <flatcc_builder_padding_base@@Base+0x333>
  42780f:	lea    rsi,[rip+0x21fcc]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427816:	lea    rcx,[rip+0x220d5]        # 4498f2 <flatcc_builder_padding_base@@Base+0x352>
  42781d:	mov    edx,0x227
  427822:	call   4060f0 <__assert_fail@plt>
  427827:	lea    rdi,[rip+0x22052]        # 449880 <flatcc_builder_padding_base@@Base+0x2e0>
  42782e:	lea    rsi,[rip+0x21fad]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427835:	lea    rcx,[rip+0x2205d]        # 449899 <flatcc_builder_padding_base@@Base+0x2f9>
  42783c:	mov    edx,0x21e
  427841:	call   4060f0 <__assert_fail@plt>
  427846:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427850 <flatcc_builder_get_current_user_frame@@Base>:
  427850:	mov    rax,QWORD PTR [rdi+0x178]
  427857:	ret    
  427858:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427860 <flatcc_builder_get_user_frame_ptr@@Base>:
  427860:	mov    eax,esi
  427862:	add    rax,QWORD PTR [rdi+0xc8]
  427869:	ret    
  42786a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427870 <flatcc_builder_embed_buffer@@Base>:
  427870:	push   rbp
  427871:	push   r15
  427873:	push   r14
  427875:	push   r12
  427877:	push   rbx
  427878:	sub    rsp,0xa0
  42787f:	mov    ebx,r9d
  427882:	mov    rbp,rcx
  427885:	mov    r15,rdx
  427888:	mov    eax,esi
  42788a:	mov    r12,rdi
  42788d:	mov    WORD PTR [rsp+0xa],r8w
  427893:	xor    ecx,ecx
  427895:	cmp    DWORD PTR [rdi+0x100],0x0
  42789c:	setne  cl
  42789f:	lea    rsi,[rsp+0xa]
  4278a4:	mov    edx,eax
  4278a6:	call   427a10 <flatcc_builder_embed_buffer@@Base+0x1a0>
  4278ab:	and    ebx,0x2
  4278ae:	movzx  eax,WORD PTR [rsp+0xa]
  4278b3:	mov    r14d,DWORD PTR [r12+0xf0]
  4278bb:	lea    ecx,[rbp+rbx*2+0x0]
  4278bf:	mov    edx,r14d
  4278c2:	sub    edx,ecx
  4278c4:	add    eax,0xffffffff
  4278c7:	and    eax,edx
  4278c9:	lea    ecx,[rax+rbp*1]
  4278cc:	mov    DWORD PTR [rsp+0xc],ecx
  4278d0:	mov    QWORD PTR [rsp+0x10],0x0
  4278d9:	mov    DWORD PTR [rsp+0x18],0x0
  4278e1:	cmp    DWORD PTR [r12+0x100],0x0
  4278ea:	je     4279be <flatcc_builder_embed_buffer@@Base+0x14e>
  4278f0:	mov    QWORD PTR [rsp+0x10],0x4
  4278f9:	lea    rcx,[rsp+0xc]
  4278fe:	mov    QWORD PTR [rsp+0x20],rcx
  427903:	mov    QWORD PTR [rsp+0x28],0x4
  42790c:	mov    DWORD PTR [rsp+0x18],0x1
  427914:	mov    edx,0x1
  427919:	mov    r8d,0x4
  42791f:	test   rbp,rbp
  427922:	je     427943 <flatcc_builder_embed_buffer@@Base+0xd3>
  427924:	add    r8,rbp
  427927:	mov    QWORD PTR [rsp+0x10],r8
  42792c:	mov    ecx,edx
  42792e:	shl    rcx,0x4
  427932:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  427937:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  42793c:	add    edx,0x1
  42793f:	mov    DWORD PTR [rsp+0x18],edx
  427943:	test   eax,eax
  427945:	je     42796f <flatcc_builder_embed_buffer@@Base+0xff>
  427947:	mov    eax,eax
  427949:	add    r8,rax
  42794c:	mov    QWORD PTR [rsp+0x10],r8
  427951:	mov    ecx,edx
  427953:	shl    rcx,0x4
  427957:	lea    rsi,[rip+0x21c42]        # 4495a0 <flatcc_builder_padding_base@@Base>
  42795e:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  427963:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  427968:	add    edx,0x1
  42796b:	mov    DWORD PTR [rsp+0x18],edx
  42796f:	cmp    r8,0x11
  427973:	setb   al
  427976:	lea    rcx,[r8-0x10]
  42797a:	shr    rcx,0x20
  42797e:	sete   cl
  427981:	test   r8d,r8d
  427984:	jle    4279d1 <flatcc_builder_embed_buffer@@Base+0x161>
  427986:	or     al,cl
  427988:	je     4279d1 <flatcc_builder_embed_buffer@@Base+0x161>
  42798a:	sub    r14d,r8d
  42798d:	mov    rdi,QWORD PTR [r12+0x38]
  427992:	lea    rsi,[rsp+0x20]
  427997:	mov    ecx,r14d
  42799a:	call   QWORD PTR [r12+0x48]
  42799f:	test   eax,eax
  4279a1:	jne    4279f0 <flatcc_builder_embed_buffer@@Base+0x180>
  4279a3:	mov    DWORD PTR [r12+0xf0],r14d
  4279ab:	mov    eax,r14d
  4279ae:	add    rsp,0xa0
  4279b5:	pop    rbx
  4279b6:	pop    r12
  4279b8:	pop    r14
  4279ba:	pop    r15
  4279bc:	pop    rbp
  4279bd:	ret    
  4279be:	xor    edx,edx
  4279c0:	xor    r8d,r8d
  4279c3:	test   rbp,rbp
  4279c6:	jne    427924 <flatcc_builder_embed_buffer@@Base+0xb4>
  4279cc:	jmp    427943 <flatcc_builder_embed_buffer@@Base+0xd3>
  4279d1:	lea    rdi,[rip+0x189b3]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4279d8:	lea    rsi,[rip+0x21e03]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4279df:	lea    rcx,[rip+0x22e7b]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  4279e6:	mov    edx,0x287
  4279eb:	call   4060f0 <__assert_fail@plt>
  4279f0:	lea    rdi,[rip+0x18994]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4279f7:	lea    rsi,[rip+0x21de4]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4279fe:	lea    rcx,[rip+0x22e5c]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  427a05:	mov    edx,0x28b
  427a0a:	call   4060f0 <__assert_fail@plt>
  427a0f:	nop
  427a10:	push   rbx
  427a11:	sub    rsp,0x90
  427a18:	mov    rax,rdi
  427a1b:	test   dx,dx
  427a1e:	jne    427a31 <flatcc_builder_embed_buffer@@Base+0x1c1>
  427a20:	mov    edi,DWORD PTR [rax+0xec]
  427a26:	test   di,di
  427a29:	mov    edx,0x1
  427a2e:	cmovne edx,edi
  427a31:	movzx  ebx,WORD PTR [rsi]
  427a34:	mov    edi,0x4
  427a39:	cmp    ebx,0x4
  427a3c:	cmovae edi,ebx
  427a3f:	jb     427a4c <flatcc_builder_embed_buffer@@Base+0x1dc>
  427a41:	cmp    di,dx
  427a44:	jb     427a4c <flatcc_builder_embed_buffer@@Base+0x1dc>
  427a46:	test   ecx,ecx
  427a48:	jne    427ab4 <flatcc_builder_embed_buffer@@Base+0x244>
  427a4a:	jmp    427a59 <flatcc_builder_embed_buffer@@Base+0x1e9>
  427a4c:	cmp    di,dx
  427a4f:	cmovb  edi,edx
  427a52:	mov    WORD PTR [rsi],di
  427a55:	test   ecx,ecx
  427a57:	jne    427ab4 <flatcc_builder_embed_buffer@@Base+0x244>
  427a59:	mov    ebx,DWORD PTR [rax+0xf4]
  427a5f:	movzx  r8d,dx
  427a63:	add    r8d,0xffffffff
  427a67:	and    r8d,ebx
  427a6a:	je     427ab4 <flatcc_builder_embed_buffer@@Base+0x244>
  427a6c:	mov    QWORD PTR [rsp],r8
  427a70:	lea    rcx,[rip+0x21b29]        # 4495a0 <flatcc_builder_padding_base@@Base>
  427a77:	mov    QWORD PTR [rsp+0x10],rcx
  427a7c:	mov    QWORD PTR [rsp+0x18],r8
  427a81:	mov    DWORD PTR [rsp+0x8],0x1
  427a89:	lea    ecx,[r8+rbx*1]
  427a8d:	mov    DWORD PTR [rax+0xf4],ecx
  427a93:	test   r8d,r8d
  427a96:	js     427abd <flatcc_builder_embed_buffer@@Base+0x24d>
  427a98:	mov    rdi,QWORD PTR [rax+0x38]
  427a9c:	lea    rsi,[rsp+0x10]
  427aa1:	mov    edx,0x1
  427aa6:	mov    ecx,ebx
  427aa8:	call   QWORD PTR [rax+0x48]
  427aab:	test   eax,eax
  427aad:	jne    427adc <flatcc_builder_embed_buffer@@Base+0x26c>
  427aaf:	cmp    ebx,0xffffffff
  427ab2:	je     427afb <flatcc_builder_embed_buffer@@Base+0x28b>
  427ab4:	add    rsp,0x90
  427abb:	pop    rbx
  427abc:	ret    
  427abd:	lea    rdi,[rip+0x188c7]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427ac4:	lea    rsi,[rip+0x21d17]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427acb:	lea    rcx,[rip+0x22e4b]        # 44a91d <flatcc_builder_padding_base@@Base+0x137d>
  427ad2:	mov    edx,0x2a1
  427ad7:	call   4060f0 <__assert_fail@plt>
  427adc:	lea    rdi,[rip+0x188a8]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427ae3:	lea    rsi,[rip+0x21cf8]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427aea:	lea    rcx,[rip+0x22e2c]        # 44a91d <flatcc_builder_padding_base@@Base+0x137d>
  427af1:	mov    edx,0x2a5
  427af6:	call   4060f0 <__assert_fail@plt>
  427afb:	lea    rdi,[rip+0x18889]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427b02:	lea    rsi,[rip+0x21cd9]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427b09:	lea    rcx,[rip+0x22d0f]        # 44a81f <flatcc_builder_padding_base@@Base+0x127f>
  427b10:	mov    edx,0x2be
  427b15:	call   4060f0 <__assert_fail@plt>
  427b1a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427b20 <flatcc_builder_create_buffer@@Base>:
  427b20:	push   rbp
  427b21:	push   r15
  427b23:	push   r14
  427b25:	push   r13
  427b27:	push   r12
  427b29:	push   rbx
  427b2a:	sub    rsp,0xa8
  427b31:	mov    r12d,r9d
  427b34:	mov    r14d,ecx
  427b37:	mov    rbp,rsi
  427b3a:	mov    r13,rdi
  427b3d:	mov    WORD PTR [rsp+0xa],r8w
  427b43:	mov    DWORD PTR [rsp+0xc],0x0
  427b4b:	mov    r15d,r9d
  427b4e:	and    r15d,0x1
  427b52:	lea    rsi,[rsp+0xa]
  427b57:	mov    ecx,r15d
  427b5a:	call   427a10 <flatcc_builder_embed_buffer@@Base+0x1a0>
  427b5f:	movzx  eax,WORD PTR [rsp+0xa]
  427b64:	cmp    WORD PTR [r13+0xe8],ax
  427b6c:	jae    427b76 <flatcc_builder_create_buffer@@Base+0x56>
  427b6e:	mov    WORD PTR [r13+0xe8],ax
  427b76:	movzx  edx,ax
  427b79:	xor    eax,eax
  427b7b:	test   rbp,rbp
  427b7e:	je     427b98 <flatcc_builder_create_buffer@@Base+0x78>
  427b80:	mov    ecx,DWORD PTR [rbp+0x0]
  427b83:	mov    DWORD PTR [rsp+0xc],ecx
  427b87:	xor    edi,edi
  427b89:	test   ecx,ecx
  427b8b:	setne  dil
  427b8f:	mov    rsi,rdi
  427b92:	shl    rsi,0x2
  427b96:	jmp    427b9c <flatcc_builder_create_buffer@@Base+0x7c>
  427b98:	xor    edi,edi
  427b9a:	xor    esi,esi
  427b9c:	lea    ecx,[r12+r12*1]
  427ba0:	and    ecx,0x4
  427ba3:	mov    ebp,DWORD PTR [r13+0xf0]
  427baa:	xor    ecx,0xfffffffc
  427bad:	add    ecx,ebp
  427baf:	sub    ecx,esi
  427bb1:	add    edx,0xffffffff
  427bb4:	mov    QWORD PTR [rsp+0x18],0x0
  427bbd:	mov    DWORD PTR [rsp+0x20],0x0
  427bc5:	test   r12b,0x3
  427bc9:	je     427bfc <flatcc_builder_create_buffer@@Base+0xdc>
  427bcb:	mov    QWORD PTR [rsp+0x18],0x4
  427bd4:	lea    rax,[rsp+0x10]
  427bd9:	mov    QWORD PTR [rsp+0x28],rax
  427bde:	mov    QWORD PTR [rsp+0x30],0x4
  427be7:	mov    DWORD PTR [rsp+0x20],0x1
  427bef:	mov    eax,0x1
  427bf4:	mov    r8d,0x8
  427bfa:	jmp    427c02 <flatcc_builder_create_buffer@@Base+0xe2>
  427bfc:	mov    r8d,0x4
  427c02:	and    ecx,edx
  427c04:	mov    QWORD PTR [rsp+0x18],r8
  427c09:	mov    edx,eax
  427c0b:	shl    rdx,0x4
  427c0f:	lea    rbx,[rsp+0x14]
  427c14:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  427c19:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  427c22:	lea    edx,[rax+0x1]
  427c25:	mov    DWORD PTR [rsp+0x20],edx
  427c29:	test   dil,dil
  427c2c:	je     427c54 <flatcc_builder_create_buffer@@Base+0x134>
  427c2e:	add    r8,rsi
  427c31:	mov    QWORD PTR [rsp+0x18],r8
  427c36:	mov    edx,edx
  427c38:	shl    rdx,0x4
  427c3c:	lea    rdi,[rsp+0xc]
  427c41:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  427c46:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  427c4b:	or     eax,0x2
  427c4e:	mov    DWORD PTR [rsp+0x20],eax
  427c52:	mov    edx,eax
  427c54:	test   ecx,ecx
  427c56:	je     427c80 <flatcc_builder_create_buffer@@Base+0x160>
  427c58:	mov    eax,ecx
  427c5a:	add    r8,rax
  427c5d:	mov    QWORD PTR [rsp+0x18],r8
  427c62:	mov    ecx,edx
  427c64:	shl    rcx,0x4
  427c68:	lea    rsi,[rip+0x21931]        # 4495a0 <flatcc_builder_padding_base@@Base>
  427c6f:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  427c74:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  427c79:	add    edx,0x1
  427c7c:	mov    DWORD PTR [rsp+0x20],edx
  427c80:	xor    eax,eax
  427c82:	test   r12b,0x3
  427c86:	setne  al
  427c89:	sub    ebp,r8d
  427c8c:	lea    eax,[rbp+rax*4+0x0]
  427c90:	mov    ecx,r15d
  427c93:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  427c9b:	sub    ecx,eax
  427c9d:	mov    DWORD PTR [rsp+0x10],ecx
  427ca1:	sub    r14d,eax
  427ca4:	mov    DWORD PTR [rsp+0x14],r14d
  427ca9:	cmp    r8,0x11
  427cad:	setb   al
  427cb0:	lea    rcx,[r8-0x10]
  427cb4:	shr    rcx,0x20
  427cb8:	sete   cl
  427cbb:	test   r8d,r8d
  427cbe:	jle    427cf6 <flatcc_builder_create_buffer@@Base+0x1d6>
  427cc0:	or     al,cl
  427cc2:	je     427cf6 <flatcc_builder_create_buffer@@Base+0x1d6>
  427cc4:	mov    rdi,QWORD PTR [r13+0x38]
  427cc8:	lea    rsi,[rsp+0x28]
  427ccd:	mov    ecx,ebp
  427ccf:	call   QWORD PTR [r13+0x48]
  427cd3:	test   eax,eax
  427cd5:	jne    427d15 <flatcc_builder_create_buffer@@Base+0x1f5>
  427cd7:	mov    DWORD PTR [r13+0xf0],ebp
  427cde:	test   ebp,ebp
  427ce0:	je     427d34 <flatcc_builder_create_buffer@@Base+0x214>
  427ce2:	mov    eax,ebp
  427ce4:	add    rsp,0xa8
  427ceb:	pop    rbx
  427cec:	pop    r12
  427cee:	pop    r13
  427cf0:	pop    r14
  427cf2:	pop    r15
  427cf4:	pop    rbp
  427cf5:	ret    
  427cf6:	lea    rdi,[rip+0x1868e]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427cfd:	lea    rsi,[rip+0x21ade]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427d04:	lea    rcx,[rip+0x22b56]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  427d0b:	mov    edx,0x287
  427d10:	call   4060f0 <__assert_fail@plt>
  427d15:	lea    rdi,[rip+0x1866f]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427d1c:	lea    rsi,[rip+0x21abf]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427d23:	lea    rcx,[rip+0x22b37]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  427d2a:	mov    edx,0x28b
  427d2f:	call   4060f0 <__assert_fail@plt>
  427d34:	lea    rdi,[rip+0x18650]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427d3b:	lea    rsi,[rip+0x21aa0]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427d42:	lea    rcx,[rip+0x21bee]        # 449937 <flatcc_builder_padding_base@@Base+0x397>
  427d49:	mov    edx,0x304
  427d4e:	call   4060f0 <__assert_fail@plt>
  427d53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d5d:	nop    DWORD PTR [rax]

0000000000427d60 <flatcc_builder_create_struct@@Base>:
  427d60:	push   rbp
  427d61:	push   r14
  427d63:	push   rbx
  427d64:	sub    rsp,0x90
  427d6b:	test   cx,cx
  427d6e:	je     427e69 <flatcc_builder_create_struct@@Base+0x109>
  427d74:	mov    rax,rdx
  427d77:	mov    r14,rdi
  427d7a:	cmp    WORD PTR [rdi+0xe8],cx
  427d81:	jae    427d8b <flatcc_builder_create_struct@@Base+0x2b>
  427d83:	mov    WORD PTR [r14+0xe8],cx
  427d8b:	mov    ebp,DWORD PTR [r14+0xf0]
  427d92:	mov    edx,ebp
  427d94:	sub    edx,eax
  427d96:	movzx  ecx,cx
  427d99:	add    ecx,0xffffffff
  427d9c:	and    ecx,edx
  427d9e:	mov    QWORD PTR [rsp],0x0
  427da6:	mov    DWORD PTR [rsp+0x8],0x0
  427dae:	test   rax,rax
  427db1:	je     427e42 <flatcc_builder_create_struct@@Base+0xe2>
  427db7:	mov    QWORD PTR [rsp],rax
  427dbb:	mov    QWORD PTR [rsp+0x10],rsi
  427dc0:	mov    QWORD PTR [rsp+0x18],rax
  427dc5:	mov    DWORD PTR [rsp+0x8],0x1
  427dcd:	mov    edx,0x1
  427dd2:	test   ecx,ecx
  427dd4:	je     427dfb <flatcc_builder_create_struct@@Base+0x9b>
  427dd6:	add    rax,rcx
  427dd9:	mov    QWORD PTR [rsp],rax
  427ddd:	mov    esi,edx
  427ddf:	shl    rsi,0x4
  427de3:	lea    rdi,[rip+0x217b6]        # 4495a0 <flatcc_builder_padding_base@@Base>
  427dea:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  427def:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  427df4:	add    edx,0x1
  427df7:	mov    DWORD PTR [rsp+0x8],edx
  427dfb:	cmp    rax,0x11
  427dff:	setb   cl
  427e02:	lea    rsi,[rax-0x10]
  427e06:	shr    rsi,0x20
  427e0a:	sete   bl
  427e0d:	test   eax,eax
  427e0f:	jle    427e4a <flatcc_builder_create_struct@@Base+0xea>
  427e11:	or     cl,bl
  427e13:	je     427e4a <flatcc_builder_create_struct@@Base+0xea>
  427e15:	sub    ebp,eax
  427e17:	mov    rdi,QWORD PTR [r14+0x38]
  427e1b:	lea    rsi,[rsp+0x10]
  427e20:	mov    ecx,ebp
  427e22:	mov    r8,rax
  427e25:	call   QWORD PTR [r14+0x48]
  427e29:	test   eax,eax
  427e2b:	jne    427e88 <flatcc_builder_create_struct@@Base+0x128>
  427e2d:	mov    DWORD PTR [r14+0xf0],ebp
  427e34:	mov    eax,ebp
  427e36:	add    rsp,0x90
  427e3d:	pop    rbx
  427e3e:	pop    r14
  427e40:	pop    rbp
  427e41:	ret    
  427e42:	xor    edx,edx
  427e44:	test   ecx,ecx
  427e46:	jne    427dd6 <flatcc_builder_create_struct@@Base+0x76>
  427e48:	jmp    427dfb <flatcc_builder_create_struct@@Base+0x9b>
  427e4a:	lea    rdi,[rip+0x1853a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427e51:	lea    rsi,[rip+0x2198a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427e58:	lea    rcx,[rip+0x22a02]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  427e5f:	mov    edx,0x287
  427e64:	call   4060f0 <__assert_fail@plt>
  427e69:	lea    rdi,[rip+0x21b4a]        # 4499ba <flatcc_builder_padding_base@@Base+0x41a>
  427e70:	lea    rsi,[rip+0x2196b]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427e77:	lea    rcx,[rip+0x21b47]        # 4499c5 <flatcc_builder_padding_base@@Base+0x425>
  427e7e:	mov    edx,0x30f
  427e83:	call   4060f0 <__assert_fail@plt>
  427e88:	lea    rdi,[rip+0x184fc]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  427e8f:	lea    rsi,[rip+0x2194c]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  427e96:	lea    rcx,[rip+0x229c4]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  427e9d:	mov    edx,0x28b
  427ea2:	call   4060f0 <__assert_fail@plt>
  427ea7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427eb0 <flatcc_builder_start_buffer@@Base>:
  427eb0:	push   rbp
  427eb1:	push   r15
  427eb3:	push   r14
  427eb5:	push   rbx
  427eb6:	push   rax
  427eb7:	mov    r15d,ecx
  427eba:	mov    ebp,edx
  427ebc:	mov    r14,rsi
  427ebf:	mov    rbx,rdi
  427ec2:	movzx  esi,WORD PTR [rdi+0xe8]
  427ec9:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  427ece:	mov    ecx,eax
  427ed0:	mov    eax,0xffffffff
  427ed5:	test   ecx,ecx
  427ed7:	jne    427f7c <flatcc_builder_start_buffer@@Base+0xcc>
  427edd:	mov    WORD PTR [rbx+0xe8],0x1
  427ee6:	movzx  eax,WORD PTR [rbx+0xec]
  427eed:	mov    rcx,QWORD PTR [rbx+0x30]
  427ef1:	mov    WORD PTR [rcx+0x22],ax
  427ef5:	mov    WORD PTR [rbx+0xec],bp
  427efc:	movzx  eax,WORD PTR [rbx+0x10c]
  427f03:	mov    rcx,QWORD PTR [rbx+0x30]
  427f07:	mov    WORD PTR [rcx+0x20],ax
  427f0b:	mov    WORD PTR [rbx+0x10c],r15w
  427f13:	mov    eax,DWORD PTR [rbx+0xf8]
  427f19:	mov    rcx,QWORD PTR [rbx+0x30]
  427f1d:	mov    DWORD PTR [rcx+0x14],eax
  427f20:	mov    eax,DWORD PTR [rbx+0x100]
  427f26:	mov    rcx,QWORD PTR [rbx+0x30]
  427f2a:	mov    DWORD PTR [rcx+0x1c],eax
  427f2d:	mov    eax,DWORD PTR [rbx+0xf0]
  427f33:	mov    DWORD PTR [rbx+0xf8],eax
  427f39:	mov    eax,DWORD PTR [rbx+0xfc]
  427f3f:	lea    ecx,[rax+0x1]
  427f42:	mov    DWORD PTR [rbx+0xfc],ecx
  427f48:	mov    DWORD PTR [rbx+0x100],eax
  427f4e:	mov    eax,DWORD PTR [rbx+0x110]
  427f54:	mov    rcx,QWORD PTR [rbx+0x30]
  427f58:	mov    DWORD PTR [rcx+0x10],eax
  427f5b:	test   r14,r14
  427f5e:	jne    427f67 <flatcc_builder_start_buffer@@Base+0xb7>
  427f60:	lea    r14,[rip+0x21639]        # 4495a0 <flatcc_builder_padding_base@@Base>
  427f67:	mov    eax,DWORD PTR [r14]
  427f6a:	mov    DWORD PTR [rbx+0x110],eax
  427f70:	mov    rax,QWORD PTR [rbx+0x30]
  427f74:	mov    WORD PTR [rax+0xe],0x1
  427f7a:	xor    eax,eax
  427f7c:	add    rsp,0x8
  427f80:	pop    rbx
  427f81:	pop    r14
  427f83:	pop    r15
  427f85:	pop    rbp
  427f86:	ret    
  427f87:	nop    WORD PTR [rax+rax*1+0x0]
  427f90:	push   rbp
  427f91:	push   r15
  427f93:	push   r14
  427f95:	push   rbx
  427f96:	push   rax
  427f97:	mov    r14d,esi
  427f9a:	mov    rbx,rdi
  427f9d:	movsxd rbp,DWORD PTR [rdi+0x104]
  427fa4:	lea    eax,[rbp+0x1]
  427fa7:	mov    DWORD PTR [rdi+0x104],eax
  427fad:	cmp    ebp,DWORD PTR [rdi+0x108]
  427fb3:	jge    427fc6 <flatcc_builder_start_buffer@@Base+0x116>
  427fb5:	mov    rax,QWORD PTR [rbx+0x30]
  427fb9:	add    rax,0x24
  427fbd:	mov    QWORD PTR [rbx+0x30],rax
  427fc1:	jmp    42805b <flatcc_builder_start_buffer@@Base+0x1ab>
  427fc6:	mov    eax,DWORD PTR [rbx+0x120]
  427fcc:	mov    r15d,0xffffffff
  427fd2:	test   eax,eax
  427fd4:	jle    427fde <flatcc_builder_start_buffer@@Base+0x12e>
  427fd6:	cmp    ebp,eax
  427fd8:	jge    428096 <flatcc_builder_start_buffer@@Base+0x1e6>
  427fde:	shl    rbp,0x2
  427fe2:	lea    rdx,[rbp*8+0x24]
  427fea:	add    rdx,rbp
  427fed:	cmp    rdx,QWORD PTR [rbx+0xa0]
  427ff4:	jbe    428014 <flatcc_builder_start_buffer@@Base+0x164>
  427ff6:	lea    rsi,[rbx+0x98]
  427ffd:	mov    rdi,QWORD PTR [rbx+0x40]
  428001:	xor    ecx,ecx
  428003:	mov    r8d,0x4
  428009:	call   QWORD PTR [rbx+0x50]
  42800c:	test   eax,eax
  42800e:	jne    4280a4 <flatcc_builder_start_buffer@@Base+0x1f4>
  428014:	lea    rax,[rbp*8+0x0]
  42801c:	add    rax,rbp
  42801f:	add    rax,QWORD PTR [rbx+0x98]
  428026:	mov    QWORD PTR [rbx+0x30],rax
  42802a:	je     428096 <flatcc_builder_start_buffer@@Base+0x1e6>
  42802c:	movabs rdx,0xe38e38e38e38e38f
  428036:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  42803f:	shr    rdx,0x5
  428043:	mov    ecx,DWORD PTR [rbx+0x120]
  428049:	cmp    ecx,edx
  42804b:	mov    esi,edx
  42804d:	cmovle esi,ecx
  428050:	test   ecx,ecx
  428052:	cmovle esi,edx
  428055:	mov    DWORD PTR [rbx+0x108],esi
  42805b:	mov    ecx,DWORD PTR [rbx+0x20]
  42805e:	mov    DWORD PTR [rax+0x8],ecx
  428061:	movzx  edx,WORD PTR [rbx+0xea]
  428068:	mov    WORD PTR [rax+0xc],dx
  42806c:	mov    WORD PTR [rbx+0xea],r14w
  428074:	mov    edx,DWORD PTR [rbx+0x28]
  428077:	mov    DWORD PTR [rax],edx
  428079:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428080:	lea    eax,[rcx+rdx*1]
  428083:	add    eax,0x7
  428086:	and    eax,0xfffffff8
  428089:	mov    DWORD PTR [rbx+0x28],eax
  42808c:	mov    DWORD PTR [rbx+0x20],0x0
  428093:	xor    r15d,r15d
  428096:	mov    eax,r15d
  428099:	add    rsp,0x8
  42809d:	pop    rbx
  42809e:	pop    r14
  4280a0:	pop    r15
  4280a2:	pop    rbp
  4280a3:	ret    
  4280a4:	lea    rdi,[rip+0x182e0]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4280ab:	lea    rsi,[rip+0x21730]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4280b2:	lea    rcx,[rip+0x22723]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  4280b9:	mov    edx,0x134
  4280be:	call   4060f0 <__assert_fail@plt>
  4280c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280cd:	nop    DWORD PTR [rax]

00000000004280d0 <flatcc_builder_end_buffer@@Base>:
  4280d0:	push   rbp
  4280d1:	push   rbx
  4280d2:	push   rax
  4280d3:	mov    rcx,QWORD PTR [rdi+0x30]
  4280d7:	movzx  ecx,WORD PTR [rcx+0xe]
  4280db:	cmp    ecx,0x1
  4280de:	jne    4281de <flatcc_builder_end_buffer@@Base+0x10e>
  4280e4:	mov    eax,esi
  4280e6:	mov    rbx,rdi
  4280e9:	movzx  ecx,WORD PTR [rdi+0x10c]
  4280f0:	and    ecx,0x2
  4280f3:	xor    r9d,r9d
  4280f6:	cmp    DWORD PTR [rdi+0x100],0x0
  4280fd:	setne  r9b
  428101:	or     r9d,ecx
  428104:	movzx  edi,WORD PTR [rdi+0xe8]
  42810b:	movzx  ecx,WORD PTR [rbx+0xec]
  428112:	cmp    di,cx
  428115:	jae    428120 <flatcc_builder_end_buffer@@Base+0x50>
  428117:	mov    WORD PTR [rbx+0xe8],cx
  42811e:	mov    edi,ecx
  428120:	lea    rsi,[rbx+0x110]
  428127:	movzx  edx,cx
  42812a:	movzx  r8d,di
  42812e:	mov    rdi,rbx
  428131:	mov    ecx,eax
  428133:	call   427b20 <flatcc_builder_create_buffer@@Base>
  428138:	mov    ebp,eax
  42813a:	test   eax,eax
  42813c:	je     4281d5 <flatcc_builder_end_buffer@@Base+0x105>
  428142:	mov    rax,QWORD PTR [rbx+0x30]
  428146:	mov    ecx,DWORD PTR [rax+0x14]
  428149:	mov    DWORD PTR [rbx+0xf8],ecx
  42814f:	mov    ecx,DWORD PTR [rax+0x1c]
  428152:	mov    DWORD PTR [rbx+0x100],ecx
  428158:	mov    ecx,DWORD PTR [rax+0x10]
  42815b:	mov    DWORD PTR [rbx+0x110],ecx
  428161:	movzx  eax,WORD PTR [rax+0x20]
  428165:	mov    WORD PTR [rbx+0x10c],ax
  42816c:	mov    rdi,QWORD PTR [rbx+0x18]
  428170:	mov    edx,DWORD PTR [rbx+0x20]
  428173:	xor    esi,esi
  428175:	call   406100 <memset@plt>
  42817a:	mov    rax,QWORD PTR [rbx+0x30]
  42817e:	mov    ecx,DWORD PTR [rax+0x8]
  428181:	mov    DWORD PTR [rbx+0x20],ecx
  428184:	mov    ecx,DWORD PTR [rax]
  428186:	mov    DWORD PTR [rbx+0x28],ecx
  428189:	mov    edx,DWORD PTR [rax+0x4]
  42818c:	mov    rsi,rcx
  42818f:	add    rsi,QWORD PTR [rbx+0x68]
  428193:	mov    QWORD PTR [rbx+0x18],rsi
  428197:	mov    esi,DWORD PTR [rbx+0x70]
  42819a:	sub    esi,ecx
  42819c:	cmp    esi,edx
  42819e:	cmova  esi,edx
  4281a1:	mov    DWORD PTR [rbx+0x24],esi
  4281a4:	movzx  ecx,WORD PTR [rbx+0xea]
  4281ab:	cmp    WORD PTR [rbx+0xe8],cx
  4281b2:	jae    4281bb <flatcc_builder_end_buffer@@Base+0xeb>
  4281b4:	mov    WORD PTR [rbx+0xe8],cx
  4281bb:	movzx  ecx,WORD PTR [rax+0xc]
  4281bf:	mov    WORD PTR [rbx+0xea],cx
  4281c6:	add    rax,0xffffffffffffffdc
  4281ca:	mov    QWORD PTR [rbx+0x30],rax
  4281ce:	add    DWORD PTR [rbx+0x104],0xffffffff
  4281d5:	mov    eax,ebp
  4281d7:	add    rsp,0x8
  4281db:	pop    rbx
  4281dc:	pop    rbp
  4281dd:	ret    
  4281de:	lea    rdi,[rip+0x21846]        # 449a2b <flatcc_builder_padding_base@@Base+0x48b>
  4281e5:	lea    rsi,[rip+0x215f6]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4281ec:	lea    rcx,[rip+0x21864]        # 449a57 <flatcc_builder_padding_base@@Base+0x4b7>
  4281f3:	mov    edx,0x346
  4281f8:	call   4060f0 <__assert_fail@plt>
  4281fd:	nop    DWORD PTR [rax]

0000000000428200 <flatcc_builder_start_struct@@Base>:
  428200:	push   r15
  428202:	push   r14
  428204:	push   rbx
  428205:	mov    r14,rsi
  428208:	mov    rbx,rdi
  42820b:	mov    esi,edx
  42820d:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  428212:	test   eax,eax
  428214:	je     42821d <flatcc_builder_start_struct@@Base+0x1d>
  428216:	xor    eax,eax
  428218:	jmp    4282b2 <flatcc_builder_start_struct@@Base+0xb2>
  42821d:	mov    rdx,QWORD PTR [rbx+0x30]
  428221:	mov    WORD PTR [rdx+0xe],0x2
  428227:	mov    ecx,DWORD PTR [rbx+0x28]
  42822a:	mov    esi,DWORD PTR [rbx+0x70]
  42822d:	mov    rax,QWORD PTR [rbx+0x68]
  428231:	add    rax,rcx
  428234:	mov    QWORD PTR [rbx+0x18],rax
  428238:	sub    esi,ecx
  42823a:	cmp    esi,0xfffffffc
  42823d:	mov    edi,0xfffffffc
  428242:	cmovb  edi,esi
  428245:	mov    DWORD PTR [rbx+0x24],edi
  428248:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  42824f:	mov    r15d,DWORD PTR [rbx+0x20]
  428253:	add    r14d,r15d
  428256:	mov    DWORD PTR [rbx+0x20],r14d
  42825a:	cmp    r14d,edi
  42825d:	jb     4282af <flatcc_builder_start_struct@@Base+0xaf>
  42825f:	add    r14d,0x1
  428263:	lea    rsi,[rbx+0x68]
  428267:	mov    rdi,QWORD PTR [rbx+0x40]
  42826b:	add    r14,rcx
  42826e:	mov    ecx,0x1
  428273:	mov    r8d,0x1
  428279:	mov    rdx,r14
  42827c:	call   QWORD PTR [rbx+0x50]
  42827f:	test   eax,eax
  428281:	jne    428216 <flatcc_builder_start_struct@@Base+0x16>
  428283:	mov    ecx,DWORD PTR [rbx+0x28]
  428286:	mov    rax,rcx
  428289:	add    rax,QWORD PTR [rbx+0x68]
  42828d:	mov    QWORD PTR [rbx+0x18],rax
  428291:	mov    edx,DWORD PTR [rbx+0x70]
  428294:	sub    edx,ecx
  428296:	cmp    edx,0xfffffffc
  428299:	mov    ecx,0xfffffffc
  42829e:	cmovb  ecx,edx
  4282a1:	mov    DWORD PTR [rbx+0x24],ecx
  4282a4:	mov    rcx,QWORD PTR [rbx+0x30]
  4282a8:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4282af:	add    rax,r15
  4282b2:	pop    rbx
  4282b3:	pop    r14
  4282b5:	pop    r15
  4282b7:	ret    
  4282b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004282c0 <flatcc_builder_struct_edit@@Base>:
  4282c0:	mov    rax,QWORD PTR [rdi+0x18]
  4282c4:	ret    
  4282c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4282cf:	nop

00000000004282d0 <flatcc_builder_end_struct@@Base>:
  4282d0:	push   rbp
  4282d1:	push   rbx
  4282d2:	push   rax
  4282d3:	mov    rax,QWORD PTR [rdi+0x30]
  4282d7:	movzx  eax,WORD PTR [rax+0xe]
  4282db:	cmp    eax,0x2
  4282de:	jne    428372 <flatcc_builder_end_struct@@Base+0xa2>
  4282e4:	mov    rbx,rdi
  4282e7:	mov    rsi,QWORD PTR [rdi+0x18]
  4282eb:	mov    edx,DWORD PTR [rdi+0x20]
  4282ee:	movzx  ecx,WORD PTR [rdi+0xea]
  4282f5:	call   427d60 <flatcc_builder_create_struct@@Base>
  4282fa:	mov    ebp,eax
  4282fc:	test   eax,eax
  4282fe:	je     428369 <flatcc_builder_end_struct@@Base+0x99>
  428300:	mov    rdi,QWORD PTR [rbx+0x18]
  428304:	mov    edx,DWORD PTR [rbx+0x20]
  428307:	xor    esi,esi
  428309:	call   406100 <memset@plt>
  42830e:	mov    rax,QWORD PTR [rbx+0x30]
  428312:	mov    ecx,DWORD PTR [rax+0x8]
  428315:	mov    DWORD PTR [rbx+0x20],ecx
  428318:	mov    ecx,DWORD PTR [rax]
  42831a:	mov    DWORD PTR [rbx+0x28],ecx
  42831d:	mov    edx,DWORD PTR [rax+0x4]
  428320:	mov    rsi,rcx
  428323:	add    rsi,QWORD PTR [rbx+0x68]
  428327:	mov    QWORD PTR [rbx+0x18],rsi
  42832b:	mov    esi,DWORD PTR [rbx+0x70]
  42832e:	sub    esi,ecx
  428330:	cmp    esi,edx
  428332:	cmova  esi,edx
  428335:	mov    DWORD PTR [rbx+0x24],esi
  428338:	movzx  ecx,WORD PTR [rbx+0xea]
  42833f:	cmp    WORD PTR [rbx+0xe8],cx
  428346:	jae    42834f <flatcc_builder_end_struct@@Base+0x7f>
  428348:	mov    WORD PTR [rbx+0xe8],cx
  42834f:	movzx  ecx,WORD PTR [rax+0xc]
  428353:	mov    WORD PTR [rbx+0xea],cx
  42835a:	add    rax,0xffffffffffffffdc
  42835e:	mov    QWORD PTR [rbx+0x30],rax
  428362:	add    DWORD PTR [rbx+0x104],0xffffffff
  428369:	mov    eax,ebp
  42836b:	add    rsp,0x8
  42836f:	pop    rbx
  428370:	pop    rbp
  428371:	ret    
  428372:	lea    rdi,[rip+0x21737]        # 449ab0 <flatcc_builder_padding_base@@Base+0x510>
  428379:	lea    rsi,[rip+0x21462]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428380:	lea    rcx,[rip+0x21755]        # 449adc <flatcc_builder_padding_base@@Base+0x53c>
  428387:	mov    edx,0x368
  42838c:	call   4060f0 <__assert_fail@plt>
  428391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42839b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004283a0 <flatcc_builder_extend_vector@@Base>:
  4283a0:	push   r14
  4283a2:	push   rbx
  4283a3:	push   rax
  4283a4:	mov    rax,QWORD PTR [rdi+0x30]
  4283a8:	mov    ecx,DWORD PTR [rax+0x14]
  4283ab:	add    ecx,esi
  4283ad:	jb     428440 <flatcc_builder_extend_vector@@Base+0xa0>
  4283b3:	cmp    ecx,DWORD PTR [rax+0x18]
  4283b6:	ja     428440 <flatcc_builder_extend_vector@@Base+0xa0>
  4283bc:	mov    rbx,rdi
  4283bf:	mov    DWORD PTR [rax+0x14],ecx
  4283c2:	mov    rax,QWORD PTR [rdi+0x30]
  4283c6:	imul   esi,DWORD PTR [rax+0x10]
  4283ca:	mov    r14d,DWORD PTR [rdi+0x20]
  4283ce:	add    esi,r14d
  4283d1:	mov    DWORD PTR [rdi+0x20],esi
  4283d4:	cmp    esi,DWORD PTR [rdi+0x24]
  4283d7:	jae    4283df <flatcc_builder_extend_vector@@Base+0x3f>
  4283d9:	mov    rax,QWORD PTR [rbx+0x18]
  4283dd:	jmp    428435 <flatcc_builder_extend_vector@@Base+0x95>
  4283df:	add    esi,0x1
  4283e2:	lea    rax,[rbx+0x68]
  4283e6:	mov    rdi,QWORD PTR [rbx+0x40]
  4283ea:	mov    edx,DWORD PTR [rbx+0x28]
  4283ed:	add    rdx,rsi
  4283f0:	mov    ecx,0x1
  4283f5:	mov    r8d,0x1
  4283fb:	mov    rsi,rax
  4283fe:	call   QWORD PTR [rbx+0x50]
  428401:	test   eax,eax
  428403:	je     428409 <flatcc_builder_extend_vector@@Base+0x69>
  428405:	xor    eax,eax
  428407:	jmp    428438 <flatcc_builder_extend_vector@@Base+0x98>
  428409:	mov    ecx,DWORD PTR [rbx+0x28]
  42840c:	mov    rax,rcx
  42840f:	add    rax,QWORD PTR [rbx+0x68]
  428413:	mov    QWORD PTR [rbx+0x18],rax
  428417:	mov    edx,DWORD PTR [rbx+0x70]
  42841a:	sub    edx,ecx
  42841c:	cmp    edx,0xfffffffc
  42841f:	mov    ecx,0xfffffffc
  428424:	cmovb  ecx,edx
  428427:	mov    DWORD PTR [rbx+0x24],ecx
  42842a:	mov    rcx,QWORD PTR [rbx+0x30]
  42842e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428435:	add    rax,r14
  428438:	add    rsp,0x8
  42843c:	pop    rbx
  42843d:	pop    r14
  42843f:	ret    
  428440:	lea    rdi,[rip+0x22464]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  428447:	lea    rsi,[rip+0x21394]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42844e:	lea    rcx,[rip+0x22471]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428455:	mov    edx,0x37c
  42845a:	call   4060f0 <__assert_fail@plt>
  42845f:	nop

0000000000428460 <flatcc_builder_vector_push@@Base>:
  428460:	push   r15
  428462:	push   r14
  428464:	push   r13
  428466:	push   r12
  428468:	push   rbx
  428469:	mov    rax,QWORD PTR [rdi+0x30]
  42846d:	movzx  ecx,WORD PTR [rax+0xe]
  428471:	cmp    ecx,0x4
  428474:	jne    428529 <flatcc_builder_vector_push@@Base+0xc9>
  42847a:	mov    ecx,DWORD PTR [rax+0x14]
  42847d:	cmp    ecx,DWORD PTR [rax+0x18]
  428480:	ja     428548 <flatcc_builder_vector_push@@Base+0xe8>
  428486:	mov    r14,rsi
  428489:	mov    rbx,rdi
  42848c:	add    ecx,0x1
  42848f:	mov    DWORD PTR [rax+0x14],ecx
  428492:	mov    rax,QWORD PTR [rdi+0x30]
  428496:	mov    r15d,DWORD PTR [rax+0x10]
  42849a:	mov    r13d,DWORD PTR [rdi+0x20]
  42849e:	lea    eax,[r15+r13*1]
  4284a2:	mov    DWORD PTR [rdi+0x20],eax
  4284a5:	cmp    eax,DWORD PTR [rdi+0x24]
  4284a8:	jae    4284b5 <flatcc_builder_vector_push@@Base+0x55>
  4284aa:	mov    r12,QWORD PTR [rbx+0x18]
  4284ae:	add    r12,r13
  4284b1:	jne    42850e <flatcc_builder_vector_push@@Base+0xae>
  4284b3:	jmp    4284d8 <flatcc_builder_vector_push@@Base+0x78>
  4284b5:	add    eax,0x1
  4284b8:	lea    rsi,[rbx+0x68]
  4284bc:	mov    rdi,QWORD PTR [rbx+0x40]
  4284c0:	mov    edx,DWORD PTR [rbx+0x28]
  4284c3:	add    rdx,rax
  4284c6:	mov    ecx,0x1
  4284cb:	mov    r8d,0x1
  4284d1:	call   QWORD PTR [rbx+0x50]
  4284d4:	test   eax,eax
  4284d6:	je     4284dd <flatcc_builder_vector_push@@Base+0x7d>
  4284d8:	xor    r12d,r12d
  4284db:	jmp    42851c <flatcc_builder_vector_push@@Base+0xbc>
  4284dd:	mov    eax,DWORD PTR [rbx+0x28]
  4284e0:	mov    r12,rax
  4284e3:	add    r12,QWORD PTR [rbx+0x68]
  4284e7:	mov    QWORD PTR [rbx+0x18],r12
  4284eb:	mov    ecx,DWORD PTR [rbx+0x70]
  4284ee:	sub    ecx,eax
  4284f0:	cmp    ecx,0xfffffffc
  4284f3:	mov    eax,0xfffffffc
  4284f8:	cmovb  eax,ecx
  4284fb:	mov    DWORD PTR [rbx+0x24],eax
  4284fe:	mov    rax,QWORD PTR [rbx+0x30]
  428502:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428509:	add    r12,r13
  42850c:	je     4284d8 <flatcc_builder_vector_push@@Base+0x78>
  42850e:	mov    rdi,r12
  428511:	mov    rsi,r14
  428514:	mov    rdx,r15
  428517:	call   406190 <memcpy@plt>
  42851c:	mov    rax,r12
  42851f:	pop    rbx
  428520:	pop    r12
  428522:	pop    r13
  428524:	pop    r14
  428526:	pop    r15
  428528:	ret    
  428529:	lea    rdi,[rip+0x215ef]        # 449b1f <flatcc_builder_padding_base@@Base+0x57f>
  428530:	lea    rsi,[rip+0x212ab]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428537:	lea    rcx,[rip+0x2160d]        # 449b4b <flatcc_builder_padding_base@@Base+0x5ab>
  42853e:	mov    edx,0x38b
  428543:	call   4060f0 <__assert_fail@plt>
  428548:	lea    rdi,[rip+0x2163f]        # 449b8e <flatcc_builder_padding_base@@Base+0x5ee>
  42854f:	lea    rsi,[rip+0x2128c]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428556:	lea    rcx,[rip+0x215ee]        # 449b4b <flatcc_builder_padding_base@@Base+0x5ab>
  42855d:	mov    edx,0x38c
  428562:	call   4060f0 <__assert_fail@plt>
  428567:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428570 <flatcc_builder_append_vector@@Base>:
  428570:	push   r15
  428572:	push   r14
  428574:	push   r13
  428576:	push   r12
  428578:	push   rbx
  428579:	mov    rax,QWORD PTR [rdi+0x30]
  42857d:	movzx  ecx,WORD PTR [rax+0xe]
  428581:	cmp    ecx,0x4
  428584:	jne    428662 <flatcc_builder_append_vector@@Base+0xf2>
  42858a:	mov    r15,rdx
  42858d:	mov    ecx,DWORD PTR [rax+0x14]
  428590:	add    ecx,r15d
  428593:	jb     428643 <flatcc_builder_append_vector@@Base+0xd3>
  428599:	cmp    ecx,DWORD PTR [rax+0x18]
  42859c:	ja     428643 <flatcc_builder_append_vector@@Base+0xd3>
  4285a2:	mov    r14,rsi
  4285a5:	mov    rbx,rdi
  4285a8:	mov    DWORD PTR [rax+0x14],ecx
  4285ab:	mov    rax,QWORD PTR [rdi+0x30]
  4285af:	imul   r15d,DWORD PTR [rax+0x10]
  4285b4:	mov    r13d,DWORD PTR [rdi+0x20]
  4285b8:	lea    eax,[r15+r13*1]
  4285bc:	mov    DWORD PTR [rdi+0x20],eax
  4285bf:	cmp    eax,DWORD PTR [rdi+0x24]
  4285c2:	jae    4285cf <flatcc_builder_append_vector@@Base+0x5f>
  4285c4:	mov    r12,QWORD PTR [rbx+0x18]
  4285c8:	add    r12,r13
  4285cb:	jne    428628 <flatcc_builder_append_vector@@Base+0xb8>
  4285cd:	jmp    4285f2 <flatcc_builder_append_vector@@Base+0x82>
  4285cf:	add    eax,0x1
  4285d2:	lea    rsi,[rbx+0x68]
  4285d6:	mov    rdi,QWORD PTR [rbx+0x40]
  4285da:	mov    edx,DWORD PTR [rbx+0x28]
  4285dd:	add    rdx,rax
  4285e0:	mov    ecx,0x1
  4285e5:	mov    r8d,0x1
  4285eb:	call   QWORD PTR [rbx+0x50]
  4285ee:	test   eax,eax
  4285f0:	je     4285f7 <flatcc_builder_append_vector@@Base+0x87>
  4285f2:	xor    r12d,r12d
  4285f5:	jmp    428636 <flatcc_builder_append_vector@@Base+0xc6>
  4285f7:	mov    eax,DWORD PTR [rbx+0x28]
  4285fa:	mov    r12,rax
  4285fd:	add    r12,QWORD PTR [rbx+0x68]
  428601:	mov    QWORD PTR [rbx+0x18],r12
  428605:	mov    ecx,DWORD PTR [rbx+0x70]
  428608:	sub    ecx,eax
  42860a:	cmp    ecx,0xfffffffc
  42860d:	mov    eax,0xfffffffc
  428612:	cmovb  eax,ecx
  428615:	mov    DWORD PTR [rbx+0x24],eax
  428618:	mov    rax,QWORD PTR [rbx+0x30]
  42861c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428623:	add    r12,r13
  428626:	je     4285f2 <flatcc_builder_append_vector@@Base+0x82>
  428628:	mov    edx,r15d
  42862b:	mov    rdi,r12
  42862e:	mov    rsi,r14
  428631:	call   406190 <memcpy@plt>
  428636:	mov    rax,r12
  428639:	pop    rbx
  42863a:	pop    r12
  42863c:	pop    r13
  42863e:	pop    r14
  428640:	pop    r15
  428642:	ret    
  428643:	lea    rdi,[rip+0x22261]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  42864a:	lea    rsi,[rip+0x21191]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428651:	lea    rcx,[rip+0x2226e]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428658:	mov    edx,0x37c
  42865d:	call   4060f0 <__assert_fail@plt>
  428662:	lea    rdi,[rip+0x214b6]        # 449b1f <flatcc_builder_padding_base@@Base+0x57f>
  428669:	lea    rsi,[rip+0x21172]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428670:	lea    rcx,[rip+0x21554]        # 449bcb <flatcc_builder_padding_base@@Base+0x62b>
  428677:	mov    edx,0x393
  42867c:	call   4060f0 <__assert_fail@plt>
  428681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42868b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428690 <flatcc_builder_extend_offset_vector@@Base>:
  428690:	push   r14
  428692:	push   rbx
  428693:	push   rax
  428694:	mov    rax,QWORD PTR [rdi+0x30]
  428698:	mov    ecx,DWORD PTR [rax+0x14]
  42869b:	add    ecx,esi
  42869d:	jb     428725 <flatcc_builder_extend_offset_vector@@Base+0x95>
  4286a3:	cmp    ecx,0x40000000
  4286a9:	jae    428725 <flatcc_builder_extend_offset_vector@@Base+0x95>
  4286ab:	mov    rbx,rdi
  4286ae:	mov    DWORD PTR [rax+0x14],ecx
  4286b1:	mov    r14d,DWORD PTR [rdi+0x20]
  4286b5:	lea    eax,[r14+rsi*4]
  4286b9:	mov    DWORD PTR [rdi+0x20],eax
  4286bc:	cmp    eax,DWORD PTR [rdi+0x24]
  4286bf:	jae    4286c7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  4286c1:	mov    rax,QWORD PTR [rbx+0x18]
  4286c5:	jmp    42871a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  4286c7:	add    eax,0x1
  4286ca:	lea    rsi,[rbx+0x68]
  4286ce:	mov    rdi,QWORD PTR [rbx+0x40]
  4286d2:	mov    edx,DWORD PTR [rbx+0x28]
  4286d5:	add    rdx,rax
  4286d8:	mov    ecx,0x1
  4286dd:	mov    r8d,0x1
  4286e3:	call   QWORD PTR [rbx+0x50]
  4286e6:	test   eax,eax
  4286e8:	je     4286ee <flatcc_builder_extend_offset_vector@@Base+0x5e>
  4286ea:	xor    eax,eax
  4286ec:	jmp    42871d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  4286ee:	mov    ecx,DWORD PTR [rbx+0x28]
  4286f1:	mov    rax,rcx
  4286f4:	add    rax,QWORD PTR [rbx+0x68]
  4286f8:	mov    QWORD PTR [rbx+0x18],rax
  4286fc:	mov    edx,DWORD PTR [rbx+0x70]
  4286ff:	sub    edx,ecx
  428701:	cmp    edx,0xfffffffc
  428704:	mov    ecx,0xfffffffc
  428709:	cmovb  ecx,edx
  42870c:	mov    DWORD PTR [rbx+0x24],ecx
  42870f:	mov    rcx,QWORD PTR [rbx+0x30]
  428713:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42871a:	add    rax,r14
  42871d:	add    rsp,0x8
  428721:	pop    rbx
  428722:	pop    r14
  428724:	ret    
  428725:	lea    rdi,[rip+0x2217f]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  42872c:	lea    rsi,[rip+0x210af]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428733:	lea    rcx,[rip+0x2218c]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  42873a:	mov    edx,0x37c
  42873f:	call   4060f0 <__assert_fail@plt>
  428744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42874e:	xchg   ax,ax

0000000000428750 <flatcc_builder_offset_vector_push@@Base>:
  428750:	push   rbp
  428751:	push   r14
  428753:	push   rbx
  428754:	mov    rax,QWORD PTR [rdi+0x30]
  428758:	movzx  ecx,WORD PTR [rax+0xe]
  42875c:	cmp    ecx,0x5
  42875f:	jne    4287f5 <flatcc_builder_offset_vector_push@@Base+0xa5>
  428765:	mov    ecx,DWORD PTR [rax+0x14]
  428768:	cmp    ecx,0x3fffffff
  42876e:	je     4287b8 <flatcc_builder_offset_vector_push@@Base+0x68>
  428770:	mov    r14d,esi
  428773:	mov    rbx,rdi
  428776:	add    ecx,0x1
  428779:	mov    DWORD PTR [rax+0x14],ecx
  42877c:	mov    ebp,DWORD PTR [rdi+0x20]
  42877f:	lea    eax,[rbp+0x4]
  428782:	mov    DWORD PTR [rdi+0x20],eax
  428785:	cmp    eax,DWORD PTR [rdi+0x24]
  428788:	jae    428795 <flatcc_builder_offset_vector_push@@Base+0x45>
  42878a:	mov    rax,QWORD PTR [rbx+0x18]
  42878e:	add    rax,rbp
  428791:	jne    4287ed <flatcc_builder_offset_vector_push@@Base+0x9d>
  428793:	jmp    4287b8 <flatcc_builder_offset_vector_push@@Base+0x68>
  428795:	lea    eax,[rbp+0x5]
  428798:	lea    rsi,[rbx+0x68]
  42879c:	mov    rdi,QWORD PTR [rbx+0x40]
  4287a0:	mov    edx,DWORD PTR [rbx+0x28]
  4287a3:	add    rdx,rax
  4287a6:	mov    ecx,0x1
  4287ab:	mov    r8d,0x1
  4287b1:	call   QWORD PTR [rbx+0x50]
  4287b4:	test   eax,eax
  4287b6:	je     4287bc <flatcc_builder_offset_vector_push@@Base+0x6c>
  4287b8:	xor    eax,eax
  4287ba:	jmp    4287f0 <flatcc_builder_offset_vector_push@@Base+0xa0>
  4287bc:	mov    ecx,DWORD PTR [rbx+0x28]
  4287bf:	mov    rax,rcx
  4287c2:	add    rax,QWORD PTR [rbx+0x68]
  4287c6:	mov    QWORD PTR [rbx+0x18],rax
  4287ca:	mov    edx,DWORD PTR [rbx+0x70]
  4287cd:	sub    edx,ecx
  4287cf:	cmp    edx,0xfffffffc
  4287d2:	mov    ecx,0xfffffffc
  4287d7:	cmovb  ecx,edx
  4287da:	mov    DWORD PTR [rbx+0x24],ecx
  4287dd:	mov    rcx,QWORD PTR [rbx+0x30]
  4287e1:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4287e8:	add    rax,rbp
  4287eb:	je     4287b8 <flatcc_builder_offset_vector_push@@Base+0x68>
  4287ed:	mov    DWORD PTR [rax],r14d
  4287f0:	pop    rbx
  4287f1:	pop    r14
  4287f3:	pop    rbp
  4287f4:	ret    
  4287f5:	lea    rdi,[rip+0x2141c]        # 449c18 <flatcc_builder_padding_base@@Base+0x678>
  4287fc:	lea    rsi,[rip+0x20fdf]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428803:	lea    rcx,[rip+0x21441]        # 449c4b <flatcc_builder_padding_base@@Base+0x6ab>
  42880a:	mov    edx,0x3a6
  42880f:	call   4060f0 <__assert_fail@plt>
  428814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42881e:	xchg   ax,ax

0000000000428820 <flatcc_builder_append_offset_vector@@Base>:
  428820:	push   r15
  428822:	push   r14
  428824:	push   r13
  428826:	push   r12
  428828:	push   rbx
  428829:	mov    rax,QWORD PTR [rdi+0x30]
  42882d:	movzx  ecx,WORD PTR [rax+0xe]
  428831:	cmp    ecx,0x5
  428834:	jne    428911 <flatcc_builder_append_offset_vector@@Base+0xf1>
  42883a:	mov    r15,rdx
  42883d:	mov    ecx,DWORD PTR [rax+0x14]
  428840:	add    ecx,r15d
  428843:	jb     4288f2 <flatcc_builder_append_offset_vector@@Base+0xd2>
  428849:	cmp    ecx,0x40000000
  42884f:	jae    4288f2 <flatcc_builder_append_offset_vector@@Base+0xd2>
  428855:	mov    r14,rsi
  428858:	mov    rbx,rdi
  42885b:	mov    DWORD PTR [rax+0x14],ecx
  42885e:	mov    r13d,DWORD PTR [rdi+0x20]
  428862:	lea    eax,[r13+r15*4+0x0]
  428867:	mov    DWORD PTR [rdi+0x20],eax
  42886a:	cmp    eax,DWORD PTR [rdi+0x24]
  42886d:	jae    42887a <flatcc_builder_append_offset_vector@@Base+0x5a>
  42886f:	mov    r12,QWORD PTR [rbx+0x18]
  428873:	add    r12,r13
  428876:	jne    4288d3 <flatcc_builder_append_offset_vector@@Base+0xb3>
  428878:	jmp    42889d <flatcc_builder_append_offset_vector@@Base+0x7d>
  42887a:	add    eax,0x1
  42887d:	lea    rsi,[rbx+0x68]
  428881:	mov    rdi,QWORD PTR [rbx+0x40]
  428885:	mov    edx,DWORD PTR [rbx+0x28]
  428888:	add    rdx,rax
  42888b:	mov    ecx,0x1
  428890:	mov    r8d,0x1
  428896:	call   QWORD PTR [rbx+0x50]
  428899:	test   eax,eax
  42889b:	je     4288a2 <flatcc_builder_append_offset_vector@@Base+0x82>
  42889d:	xor    r12d,r12d
  4288a0:	jmp    4288e5 <flatcc_builder_append_offset_vector@@Base+0xc5>
  4288a2:	mov    eax,DWORD PTR [rbx+0x28]
  4288a5:	mov    r12,rax
  4288a8:	add    r12,QWORD PTR [rbx+0x68]
  4288ac:	mov    QWORD PTR [rbx+0x18],r12
  4288b0:	mov    ecx,DWORD PTR [rbx+0x70]
  4288b3:	sub    ecx,eax
  4288b5:	cmp    ecx,0xfffffffc
  4288b8:	mov    eax,0xfffffffc
  4288bd:	cmovb  eax,ecx
  4288c0:	mov    DWORD PTR [rbx+0x24],eax
  4288c3:	mov    rax,QWORD PTR [rbx+0x30]
  4288c7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4288ce:	add    r12,r13
  4288d1:	je     42889d <flatcc_builder_append_offset_vector@@Base+0x7d>
  4288d3:	shl    r15d,0x2
  4288d7:	mov    edx,r15d
  4288da:	mov    rdi,r12
  4288dd:	mov    rsi,r14
  4288e0:	call   406190 <memcpy@plt>
  4288e5:	mov    rax,r12
  4288e8:	pop    rbx
  4288e9:	pop    r12
  4288eb:	pop    r13
  4288ed:	pop    r14
  4288ef:	pop    r15
  4288f1:	ret    
  4288f2:	lea    rdi,[rip+0x21fb2]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  4288f9:	lea    rsi,[rip+0x20ee2]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428900:	lea    rcx,[rip+0x21fbf]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428907:	mov    edx,0x37c
  42890c:	call   4060f0 <__assert_fail@plt>
  428911:	lea    rdi,[rip+0x21300]        # 449c18 <flatcc_builder_padding_base@@Base+0x678>
  428918:	lea    rsi,[rip+0x20ec3]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42891f:	lea    rcx,[rip+0x21387]        # 449cad <flatcc_builder_padding_base@@Base+0x70d>
  428926:	mov    edx,0x3b4
  42892b:	call   4060f0 <__assert_fail@plt>

0000000000428930 <flatcc_builder_extend_string@@Base>:
  428930:	push   r14
  428932:	push   rbx
  428933:	push   rax
  428934:	mov    rax,QWORD PTR [rdi+0x30]
  428938:	movzx  ecx,WORD PTR [rax+0xe]
  42893c:	cmp    ecx,0x6
  42893f:	jne    4289cc <flatcc_builder_extend_string@@Base+0x9c>
  428945:	mov    ecx,DWORD PTR [rax+0x14]
  428948:	add    ecx,esi
  42894a:	jb     4289eb <flatcc_builder_extend_string@@Base+0xbb>
  428950:	mov    rbx,rdi
  428953:	mov    DWORD PTR [rax+0x14],ecx
  428956:	mov    r14d,DWORD PTR [rdi+0x20]
  42895a:	add    esi,r14d
  42895d:	mov    DWORD PTR [rdi+0x20],esi
  428960:	cmp    esi,DWORD PTR [rdi+0x24]
  428963:	jae    42896b <flatcc_builder_extend_string@@Base+0x3b>
  428965:	mov    rax,QWORD PTR [rbx+0x18]
  428969:	jmp    4289c1 <flatcc_builder_extend_string@@Base+0x91>
  42896b:	add    esi,0x1
  42896e:	lea    rax,[rbx+0x68]
  428972:	mov    rdi,QWORD PTR [rbx+0x40]
  428976:	mov    edx,DWORD PTR [rbx+0x28]
  428979:	add    rdx,rsi
  42897c:	mov    ecx,0x1
  428981:	mov    r8d,0x1
  428987:	mov    rsi,rax
  42898a:	call   QWORD PTR [rbx+0x50]
  42898d:	test   eax,eax
  42898f:	je     428995 <flatcc_builder_extend_string@@Base+0x65>
  428991:	xor    eax,eax
  428993:	jmp    4289c4 <flatcc_builder_extend_string@@Base+0x94>
  428995:	mov    ecx,DWORD PTR [rbx+0x28]
  428998:	mov    rax,rcx
  42899b:	add    rax,QWORD PTR [rbx+0x68]
  42899f:	mov    QWORD PTR [rbx+0x18],rax
  4289a3:	mov    edx,DWORD PTR [rbx+0x70]
  4289a6:	sub    edx,ecx
  4289a8:	cmp    edx,0xfffffffc
  4289ab:	mov    ecx,0xfffffffc
  4289b0:	cmovb  ecx,edx
  4289b3:	mov    DWORD PTR [rbx+0x24],ecx
  4289b6:	mov    rcx,QWORD PTR [rbx+0x30]
  4289ba:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4289c1:	add    rax,r14
  4289c4:	add    rsp,0x8
  4289c8:	pop    rbx
  4289c9:	pop    r14
  4289cb:	ret    
  4289cc:	lea    rdi,[rip+0x2134e]        # 449d21 <flatcc_builder_padding_base@@Base+0x781>
  4289d3:	lea    rsi,[rip+0x20e08]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4289da:	lea    rcx,[rip+0x2136c]        # 449d4d <flatcc_builder_padding_base@@Base+0x7ad>
  4289e1:	mov    edx,0x3bd
  4289e6:	call   4060f0 <__assert_fail@plt>
  4289eb:	lea    rdi,[rip+0x21eb9]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  4289f2:	lea    rsi,[rip+0x20de9]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4289f9:	lea    rcx,[rip+0x21ec6]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428a00:	mov    edx,0x37c
  428a05:	call   4060f0 <__assert_fail@plt>
  428a0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428a10 <flatcc_builder_append_string@@Base>:
  428a10:	push   r15
  428a12:	push   r14
  428a14:	push   r13
  428a16:	push   r12
  428a18:	push   rbx
  428a19:	mov    rax,QWORD PTR [rdi+0x30]
  428a1d:	movzx  ecx,WORD PTR [rax+0xe]
  428a21:	cmp    ecx,0x6
  428a24:	jne    428ad1 <flatcc_builder_append_string@@Base+0xc1>
  428a2a:	mov    r15,rdx
  428a2d:	mov    ecx,DWORD PTR [rax+0x14]
  428a30:	add    ecx,r15d
  428a33:	jb     428af0 <flatcc_builder_append_string@@Base+0xe0>
  428a39:	mov    r14,rsi
  428a3c:	mov    rbx,rdi
  428a3f:	mov    DWORD PTR [rax+0x14],ecx
  428a42:	mov    r13d,DWORD PTR [rdi+0x20]
  428a46:	lea    eax,[r15+r13*1]
  428a4a:	mov    DWORD PTR [rdi+0x20],eax
  428a4d:	cmp    eax,DWORD PTR [rdi+0x24]
  428a50:	jae    428a5d <flatcc_builder_append_string@@Base+0x4d>
  428a52:	mov    r12,QWORD PTR [rbx+0x18]
  428a56:	add    r12,r13
  428a59:	jne    428ab6 <flatcc_builder_append_string@@Base+0xa6>
  428a5b:	jmp    428a80 <flatcc_builder_append_string@@Base+0x70>
  428a5d:	add    eax,0x1
  428a60:	lea    rsi,[rbx+0x68]
  428a64:	mov    rdi,QWORD PTR [rbx+0x40]
  428a68:	mov    edx,DWORD PTR [rbx+0x28]
  428a6b:	add    rdx,rax
  428a6e:	mov    ecx,0x1
  428a73:	mov    r8d,0x1
  428a79:	call   QWORD PTR [rbx+0x50]
  428a7c:	test   eax,eax
  428a7e:	je     428a85 <flatcc_builder_append_string@@Base+0x75>
  428a80:	xor    r12d,r12d
  428a83:	jmp    428ac4 <flatcc_builder_append_string@@Base+0xb4>
  428a85:	mov    eax,DWORD PTR [rbx+0x28]
  428a88:	mov    r12,rax
  428a8b:	add    r12,QWORD PTR [rbx+0x68]
  428a8f:	mov    QWORD PTR [rbx+0x18],r12
  428a93:	mov    ecx,DWORD PTR [rbx+0x70]
  428a96:	sub    ecx,eax
  428a98:	cmp    ecx,0xfffffffc
  428a9b:	mov    eax,0xfffffffc
  428aa0:	cmovb  eax,ecx
  428aa3:	mov    DWORD PTR [rbx+0x24],eax
  428aa6:	mov    rax,QWORD PTR [rbx+0x30]
  428aaa:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428ab1:	add    r12,r13
  428ab4:	je     428a80 <flatcc_builder_append_string@@Base+0x70>
  428ab6:	mov    edx,r15d
  428ab9:	mov    rdi,r12
  428abc:	mov    rsi,r14
  428abf:	call   406190 <memcpy@plt>
  428ac4:	mov    rax,r12
  428ac7:	pop    rbx
  428ac8:	pop    r12
  428aca:	pop    r13
  428acc:	pop    r14
  428ace:	pop    r15
  428ad0:	ret    
  428ad1:	lea    rdi,[rip+0x21249]        # 449d21 <flatcc_builder_padding_base@@Base+0x781>
  428ad8:	lea    rsi,[rip+0x20d03]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428adf:	lea    rcx,[rip+0x212a6]        # 449d8c <flatcc_builder_padding_base@@Base+0x7ec>
  428ae6:	mov    edx,0x3c6
  428aeb:	call   4060f0 <__assert_fail@plt>
  428af0:	lea    rdi,[rip+0x21db4]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  428af7:	lea    rsi,[rip+0x20ce4]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428afe:	lea    rcx,[rip+0x21dc1]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428b05:	mov    edx,0x37c
  428b0a:	call   4060f0 <__assert_fail@plt>
  428b0f:	nop

0000000000428b10 <flatcc_builder_append_string_str@@Base>:
  428b10:	push   r14
  428b12:	push   rbx
  428b13:	push   rax
  428b14:	mov    rbx,rsi
  428b17:	mov    r14,rdi
  428b1a:	mov    rdi,rsi
  428b1d:	call   4060d0 <strlen@plt>
  428b22:	mov    rdi,r14
  428b25:	mov    rsi,rbx
  428b28:	mov    rdx,rax
  428b2b:	add    rsp,0x8
  428b2f:	pop    rbx
  428b30:	pop    r14
  428b32:	jmp    428a10 <flatcc_builder_append_string@@Base>
  428b37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428b40 <flatcc_builder_append_string_strn@@Base>:
  428b40:	push   r15
  428b42:	push   r14
  428b44:	push   rbx
  428b45:	mov    rbx,rdx
  428b48:	mov    r14,rsi
  428b4b:	mov    r15,rdi
  428b4e:	xor    esi,esi
  428b50:	mov    rdi,r14
  428b53:	call   406120 <memchr@plt>
  428b58:	mov    rcx,rax
  428b5b:	sub    rcx,r14
  428b5e:	test   rax,rax
  428b61:	cmovne rbx,rcx
  428b65:	mov    rdi,r15
  428b68:	mov    rsi,r14
  428b6b:	mov    rdx,rbx
  428b6e:	pop    rbx
  428b6f:	pop    r14
  428b71:	pop    r15
  428b73:	jmp    428a10 <flatcc_builder_append_string@@Base>
  428b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428b80 <flatcc_builder_truncate_vector@@Base>:
  428b80:	push   rax
  428b81:	mov    rcx,QWORD PTR [rdi+0x30]
  428b85:	movzx  edx,WORD PTR [rcx+0xe]
  428b89:	cmp    edx,0x4
  428b8c:	jne    428bc3 <flatcc_builder_truncate_vector@@Base+0x43>
  428b8e:	mov    rax,rsi
  428b91:	mov    edx,DWORD PTR [rcx+0x14]
  428b94:	cmp    rdx,rsi
  428b97:	jb     428be2 <flatcc_builder_truncate_vector@@Base+0x62>
  428b99:	sub    edx,eax
  428b9b:	mov    DWORD PTR [rcx+0x14],edx
  428b9e:	mov    rcx,QWORD PTR [rdi+0x30]
  428ba2:	imul   eax,DWORD PTR [rcx+0x10]
  428ba6:	mov    ecx,DWORD PTR [rdi+0x20]
  428ba9:	sub    ecx,eax
  428bab:	mov    DWORD PTR [rdi+0x20],ecx
  428bae:	add    rcx,QWORD PTR [rdi+0x18]
  428bb2:	xor    esi,esi
  428bb4:	mov    rdi,rcx
  428bb7:	mov    rdx,rax
  428bba:	call   406100 <memset@plt>
  428bbf:	xor    eax,eax
  428bc1:	pop    rcx
  428bc2:	ret    
  428bc3:	lea    rdi,[rip+0x20f55]        # 449b1f <flatcc_builder_padding_base@@Base+0x57f>
  428bca:	lea    rsi,[rip+0x20c11]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428bd1:	lea    rcx,[rip+0x21201]        # 449dd9 <flatcc_builder_padding_base@@Base+0x839>
  428bd8:	mov    edx,0x3d9
  428bdd:	call   4060f0 <__assert_fail@plt>
  428be2:	lea    rdi,[rip+0x2122f]        # 449e18 <flatcc_builder_padding_base@@Base+0x878>
  428be9:	lea    rsi,[rip+0x20bf2]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428bf0:	lea    rcx,[rip+0x211e2]        # 449dd9 <flatcc_builder_padding_base@@Base+0x839>
  428bf7:	mov    edx,0x3da
  428bfc:	call   4060f0 <__assert_fail@plt>
  428c01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428c10 <flatcc_builder_truncate_offset_vector@@Base>:
  428c10:	push   rax
  428c11:	mov    rcx,QWORD PTR [rdi+0x30]
  428c15:	movzx  edx,WORD PTR [rcx+0xe]
  428c19:	cmp    edx,0x5
  428c1c:	jne    428c50 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  428c1e:	mov    rax,rsi
  428c21:	mov    edx,DWORD PTR [rcx+0x14]
  428c24:	sub    edx,eax
  428c26:	jb     428c6f <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  428c28:	mov    DWORD PTR [rcx+0x14],edx
  428c2b:	mov    rcx,QWORD PTR [rdi+0x30]
  428c2f:	imul   eax,DWORD PTR [rcx+0x10]
  428c33:	mov    ecx,DWORD PTR [rdi+0x20]
  428c36:	sub    ecx,eax
  428c38:	mov    DWORD PTR [rdi+0x20],ecx
  428c3b:	add    rcx,QWORD PTR [rdi+0x18]
  428c3f:	xor    esi,esi
  428c41:	mov    rdi,rcx
  428c44:	mov    rdx,rax
  428c47:	call   406100 <memset@plt>
  428c4c:	xor    eax,eax
  428c4e:	pop    rcx
  428c4f:	ret    
  428c50:	lea    rdi,[rip+0x20fc1]        # 449c18 <flatcc_builder_padding_base@@Base+0x678>
  428c57:	lea    rsi,[rip+0x20b84]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428c5e:	lea    rcx,[rip+0x211d7]        # 449e3c <flatcc_builder_padding_base@@Base+0x89c>
  428c65:	mov    edx,0x3e2
  428c6a:	call   4060f0 <__assert_fail@plt>
  428c6f:	lea    rdi,[rip+0x2120c]        # 449e82 <flatcc_builder_padding_base@@Base+0x8e2>
  428c76:	lea    rsi,[rip+0x20b65]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428c7d:	lea    rcx,[rip+0x211b8]        # 449e3c <flatcc_builder_padding_base@@Base+0x89c>
  428c84:	mov    edx,0x3e3
  428c89:	call   4060f0 <__assert_fail@plt>
  428c8e:	xchg   ax,ax

0000000000428c90 <flatcc_builder_truncate_string@@Base>:
  428c90:	push   rax
  428c91:	mov    rax,QWORD PTR [rdi+0x30]
  428c95:	movzx  ecx,WORD PTR [rax+0xe]
  428c99:	cmp    ecx,0x6
  428c9c:	jne    428cc7 <flatcc_builder_truncate_string@@Base+0x37>
  428c9e:	mov    ecx,DWORD PTR [rax+0x14]
  428ca1:	cmp    rcx,rsi
  428ca4:	jb     428ce6 <flatcc_builder_truncate_string@@Base+0x56>
  428ca6:	sub    ecx,esi
  428ca8:	mov    DWORD PTR [rax+0x14],ecx
  428cab:	mov    eax,DWORD PTR [rdi+0x20]
  428cae:	sub    eax,esi
  428cb0:	mov    DWORD PTR [rdi+0x20],eax
  428cb3:	add    rax,QWORD PTR [rdi+0x18]
  428cb7:	mov    edx,esi
  428cb9:	xor    esi,esi
  428cbb:	mov    rdi,rax
  428cbe:	call   406100 <memset@plt>
  428cc3:	xor    eax,eax
  428cc5:	pop    rcx
  428cc6:	ret    
  428cc7:	lea    rdi,[rip+0x21053]        # 449d21 <flatcc_builder_padding_base@@Base+0x781>
  428cce:	lea    rsi,[rip+0x20b0d]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428cd5:	lea    rcx,[rip+0x211e1]        # 449ebd <flatcc_builder_padding_base@@Base+0x91d>
  428cdc:	mov    edx,0x3eb
  428ce1:	call   4060f0 <__assert_fail@plt>
  428ce6:	lea    rdi,[rip+0x2120f]        # 449efc <flatcc_builder_padding_base@@Base+0x95c>
  428ced:	lea    rsi,[rip+0x20aee]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428cf4:	lea    rcx,[rip+0x211c2]        # 449ebd <flatcc_builder_padding_base@@Base+0x91d>
  428cfb:	mov    edx,0x3ec
  428d00:	call   4060f0 <__assert_fail@plt>
  428d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428d0f:	nop

0000000000428d10 <flatcc_builder_start_vector@@Base>:
  428d10:	push   r15
  428d12:	push   r14
  428d14:	push   rbx
  428d15:	mov    r14,rcx
  428d18:	mov    r15,rsi
  428d1b:	mov    rbx,rdi
  428d1e:	cmp    edx,0x4
  428d21:	mov    esi,0x4
  428d26:	cmova  esi,edx
  428d29:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  428d2e:	mov    ecx,eax
  428d30:	mov    eax,0xffffffff
  428d35:	test   ecx,ecx
  428d37:	jne    428d85 <flatcc_builder_start_vector@@Base+0x75>
  428d39:	mov    rax,QWORD PTR [rbx+0x30]
  428d3d:	mov    DWORD PTR [rax+0x10],r15d
  428d41:	mov    rax,QWORD PTR [rbx+0x30]
  428d45:	mov    DWORD PTR [rax+0x14],0x0
  428d4c:	mov    rax,QWORD PTR [rbx+0x30]
  428d50:	mov    DWORD PTR [rax+0x18],r14d
  428d54:	mov    rax,QWORD PTR [rbx+0x30]
  428d58:	mov    WORD PTR [rax+0xe],0x4
  428d5e:	mov    ecx,DWORD PTR [rbx+0x28]
  428d61:	mov    edx,DWORD PTR [rbx+0x70]
  428d64:	sub    edx,ecx
  428d66:	add    rcx,QWORD PTR [rbx+0x68]
  428d6a:	mov    QWORD PTR [rbx+0x18],rcx
  428d6e:	cmp    edx,0xfffffffc
  428d71:	mov    ecx,0xfffffffc
  428d76:	cmovb  ecx,edx
  428d79:	mov    DWORD PTR [rbx+0x24],ecx
  428d7c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428d83:	xor    eax,eax
  428d85:	pop    rbx
  428d86:	pop    r14
  428d88:	pop    r15
  428d8a:	ret    
  428d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428d90 <flatcc_builder_start_offset_vector@@Base>:
  428d90:	push   rbx
  428d91:	mov    rbx,rdi
  428d94:	mov    esi,0x4
  428d99:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  428d9e:	mov    ecx,eax
  428da0:	mov    eax,0xffffffff
  428da5:	test   ecx,ecx
  428da7:	je     428dab <flatcc_builder_start_offset_vector@@Base+0x1b>
  428da9:	pop    rbx
  428daa:	ret    
  428dab:	mov    rax,QWORD PTR [rbx+0x30]
  428daf:	mov    DWORD PTR [rax+0x10],0x4
  428db6:	mov    rax,QWORD PTR [rbx+0x30]
  428dba:	mov    DWORD PTR [rax+0x14],0x0
  428dc1:	mov    rax,QWORD PTR [rbx+0x30]
  428dc5:	mov    WORD PTR [rax+0xe],0x5
  428dcb:	mov    ecx,DWORD PTR [rbx+0x28]
  428dce:	mov    edx,DWORD PTR [rbx+0x70]
  428dd1:	sub    edx,ecx
  428dd3:	add    rcx,QWORD PTR [rbx+0x68]
  428dd7:	mov    QWORD PTR [rbx+0x18],rcx
  428ddb:	cmp    edx,0xfffffffc
  428dde:	mov    ecx,0xfffffffc
  428de3:	cmovb  ecx,edx
  428de6:	mov    DWORD PTR [rbx+0x24],ecx
  428de9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428df0:	xor    eax,eax
  428df2:	pop    rbx
  428df3:	ret    
  428df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428dfe:	xchg   ax,ax

0000000000428e00 <flatcc_builder_create_offset_vector@@Base>:
  428e00:	push   r15
  428e02:	push   r14
  428e04:	push   r12
  428e06:	push   rbx
  428e07:	push   rax
  428e08:	mov    r14,rdx
  428e0b:	mov    r15,rsi
  428e0e:	mov    rbx,rdi
  428e11:	mov    esi,0x4
  428e16:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  428e1b:	test   eax,eax
  428e1d:	je     428e2d <flatcc_builder_create_offset_vector@@Base+0x2d>
  428e1f:	xor    eax,eax
  428e21:	add    rsp,0x8
  428e25:	pop    rbx
  428e26:	pop    r12
  428e28:	pop    r14
  428e2a:	pop    r15
  428e2c:	ret    
  428e2d:	mov    rax,QWORD PTR [rbx+0x30]
  428e31:	mov    DWORD PTR [rax+0x10],0x4
  428e38:	mov    rax,QWORD PTR [rbx+0x30]
  428e3c:	mov    DWORD PTR [rax+0x14],0x0
  428e43:	mov    rax,QWORD PTR [rbx+0x30]
  428e47:	mov    WORD PTR [rax+0xe],0x5
  428e4d:	mov    ecx,DWORD PTR [rbx+0x28]
  428e50:	mov    edx,DWORD PTR [rbx+0x70]
  428e53:	sub    edx,ecx
  428e55:	add    rcx,QWORD PTR [rbx+0x68]
  428e59:	mov    QWORD PTR [rbx+0x18],rcx
  428e5d:	cmp    edx,0xfffffffc
  428e60:	mov    ecx,0xfffffffc
  428e65:	cmovb  ecx,edx
  428e68:	mov    DWORD PTR [rbx+0x24],ecx
  428e6b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428e72:	mov    ecx,DWORD PTR [rax+0x14]
  428e75:	add    ecx,r14d
  428e78:	jb     428f29 <flatcc_builder_create_offset_vector@@Base+0x129>
  428e7e:	cmp    ecx,0x40000000
  428e84:	jae    428f29 <flatcc_builder_create_offset_vector@@Base+0x129>
  428e8a:	mov    DWORD PTR [rax+0x14],ecx
  428e8d:	mov    r12d,DWORD PTR [rbx+0x20]
  428e91:	lea    eax,[r12+r14*4]
  428e95:	mov    DWORD PTR [rbx+0x20],eax
  428e98:	cmp    eax,DWORD PTR [rbx+0x24]
  428e9b:	jae    428eab <flatcc_builder_create_offset_vector@@Base+0xab>
  428e9d:	mov    rdi,QWORD PTR [rbx+0x18]
  428ea1:	add    rdi,r12
  428ea4:	jne    428f07 <flatcc_builder_create_offset_vector@@Base+0x107>
  428ea6:	jmp    428e1f <flatcc_builder_create_offset_vector@@Base+0x1f>
  428eab:	add    eax,0x1
  428eae:	lea    rsi,[rbx+0x68]
  428eb2:	mov    rdi,QWORD PTR [rbx+0x40]
  428eb6:	mov    edx,DWORD PTR [rbx+0x28]
  428eb9:	add    rdx,rax
  428ebc:	mov    ecx,0x1
  428ec1:	mov    r8d,0x1
  428ec7:	call   QWORD PTR [rbx+0x50]
  428eca:	test   eax,eax
  428ecc:	jne    428e1f <flatcc_builder_create_offset_vector@@Base+0x1f>
  428ed2:	mov    eax,DWORD PTR [rbx+0x28]
  428ed5:	mov    rdi,rax
  428ed8:	add    rdi,QWORD PTR [rbx+0x68]
  428edc:	mov    QWORD PTR [rbx+0x18],rdi
  428ee0:	mov    ecx,DWORD PTR [rbx+0x70]
  428ee3:	sub    ecx,eax
  428ee5:	cmp    ecx,0xfffffffc
  428ee8:	mov    eax,0xfffffffc
  428eed:	cmovb  eax,ecx
  428ef0:	mov    DWORD PTR [rbx+0x24],eax
  428ef3:	mov    rax,QWORD PTR [rbx+0x30]
  428ef7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428efe:	add    rdi,r12
  428f01:	je     428e1f <flatcc_builder_create_offset_vector@@Base+0x1f>
  428f07:	shl    r14,0x2
  428f0b:	mov    rsi,r15
  428f0e:	mov    rdx,r14
  428f11:	call   406190 <memcpy@plt>
  428f16:	mov    rdi,rbx
  428f19:	add    rsp,0x8
  428f1d:	pop    rbx
  428f1e:	pop    r12
  428f20:	pop    r14
  428f22:	pop    r15
  428f24:	jmp    428f50 <flatcc_builder_end_offset_vector@@Base>
  428f29:	lea    rdi,[rip+0x2197b]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  428f30:	lea    rsi,[rip+0x208ab]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428f37:	lea    rcx,[rip+0x21988]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  428f3e:	mov    edx,0x37c
  428f43:	call   4060f0 <__assert_fail@plt>
  428f48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428f50 <flatcc_builder_end_offset_vector@@Base>:
  428f50:	push   rbp
  428f51:	push   rbx
  428f52:	push   rax
  428f53:	mov    rax,QWORD PTR [rdi+0x30]
  428f57:	movzx  ecx,WORD PTR [rax+0xe]
  428f5b:	cmp    ecx,0x5
  428f5e:	jne    428fed <flatcc_builder_end_offset_vector@@Base+0x9d>
  428f64:	mov    rbx,rdi
  428f67:	mov    rsi,QWORD PTR [rdi+0x18]
  428f6b:	mov    edx,DWORD PTR [rax+0x14]
  428f6e:	xor    ecx,ecx
  428f70:	call   429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  428f75:	mov    ebp,eax
  428f77:	test   eax,eax
  428f79:	je     428fe4 <flatcc_builder_end_offset_vector@@Base+0x94>
  428f7b:	mov    rdi,QWORD PTR [rbx+0x18]
  428f7f:	mov    edx,DWORD PTR [rbx+0x20]
  428f82:	xor    esi,esi
  428f84:	call   406100 <memset@plt>
  428f89:	mov    rax,QWORD PTR [rbx+0x30]
  428f8d:	mov    ecx,DWORD PTR [rax+0x8]
  428f90:	mov    DWORD PTR [rbx+0x20],ecx
  428f93:	mov    ecx,DWORD PTR [rax]
  428f95:	mov    DWORD PTR [rbx+0x28],ecx
  428f98:	mov    edx,DWORD PTR [rax+0x4]
  428f9b:	mov    rsi,rcx
  428f9e:	add    rsi,QWORD PTR [rbx+0x68]
  428fa2:	mov    QWORD PTR [rbx+0x18],rsi
  428fa6:	mov    esi,DWORD PTR [rbx+0x70]
  428fa9:	sub    esi,ecx
  428fab:	cmp    esi,edx
  428fad:	cmova  esi,edx
  428fb0:	mov    DWORD PTR [rbx+0x24],esi
  428fb3:	movzx  ecx,WORD PTR [rbx+0xea]
  428fba:	cmp    WORD PTR [rbx+0xe8],cx
  428fc1:	jae    428fca <flatcc_builder_end_offset_vector@@Base+0x7a>
  428fc3:	mov    WORD PTR [rbx+0xe8],cx
  428fca:	movzx  ecx,WORD PTR [rax+0xc]
  428fce:	mov    WORD PTR [rbx+0xea],cx
  428fd5:	add    rax,0xffffffffffffffdc
  428fd9:	mov    QWORD PTR [rbx+0x30],rax
  428fdd:	add    DWORD PTR [rbx+0x104],0xffffffff
  428fe4:	mov    eax,ebp
  428fe6:	add    rsp,0x8
  428fea:	pop    rbx
  428feb:	pop    rbp
  428fec:	ret    
  428fed:	lea    rdi,[rip+0x20c24]        # 449c18 <flatcc_builder_padding_base@@Base+0x678>
  428ff4:	lea    rsi,[rip+0x207e7]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  428ffb:	lea    rcx,[rip+0x21245]        # 44a247 <flatcc_builder_padding_base@@Base+0xca7>
  429002:	mov    edx,0x5c8
  429007:	call   4060f0 <__assert_fail@plt>
  42900c:	nop    DWORD PTR [rax+0x0]

0000000000429010 <flatcc_builder_start_string@@Base>:
  429010:	push   rbx
  429011:	mov    rbx,rdi
  429014:	mov    esi,0x1
  429019:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  42901e:	mov    ecx,eax
  429020:	mov    eax,0xffffffff
  429025:	test   ecx,ecx
  429027:	je     42902b <flatcc_builder_start_string@@Base+0x1b>
  429029:	pop    rbx
  42902a:	ret    
  42902b:	mov    rax,QWORD PTR [rbx+0x30]
  42902f:	mov    DWORD PTR [rax+0x10],0x1
  429036:	mov    rax,QWORD PTR [rbx+0x30]
  42903a:	mov    DWORD PTR [rax+0x14],0x0
  429041:	mov    rax,QWORD PTR [rbx+0x30]
  429045:	mov    WORD PTR [rax+0xe],0x6
  42904b:	mov    ecx,DWORD PTR [rbx+0x28]
  42904e:	mov    edx,DWORD PTR [rbx+0x70]
  429051:	sub    edx,ecx
  429053:	add    rcx,QWORD PTR [rbx+0x68]
  429057:	mov    QWORD PTR [rbx+0x18],rcx
  42905b:	cmp    edx,0xfffffffc
  42905e:	mov    ecx,0xfffffffc
  429063:	cmovb  ecx,edx
  429066:	mov    DWORD PTR [rbx+0x24],ecx
  429069:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429070:	xor    eax,eax
  429072:	pop    rbx
  429073:	ret    
  429074:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42907e:	xchg   ax,ax

0000000000429080 <flatcc_builder_reserve_table@@Base>:
  429080:	push   r15
  429082:	push   r14
  429084:	push   rbx
  429085:	test   esi,esi
  429087:	js     429134 <flatcc_builder_reserve_table@@Base+0xb4>
  42908d:	mov    r14d,esi
  429090:	mov    r15,rdi
  429093:	mov    rax,QWORD PTR [rdi+0x30]
  429097:	movzx  ebx,WORD PTR [rax+0x1c]
  42909b:	add    ebx,ebx
  42909d:	add    ebx,DWORD PTR [rax+0x10]
  4290a0:	lea    edx,[r14+r14*1]
  4290a4:	add    edx,0x4
  4290a7:	add    rdx,rbx
  4290aa:	cmp    rdx,QWORD PTR [rdi+0x60]
  4290ae:	jbe    4290cc <flatcc_builder_reserve_table@@Base+0x4c>
  4290b0:	lea    rsi,[r15+0x58]
  4290b4:	mov    rdi,QWORD PTR [r15+0x40]
  4290b8:	mov    ecx,0x1
  4290bd:	xor    r8d,r8d
  4290c0:	call   QWORD PTR [r15+0x50]
  4290c4:	test   eax,eax
  4290c6:	jne    429153 <flatcc_builder_reserve_table@@Base+0xd3>
  4290cc:	add    rbx,QWORD PTR [r15+0x58]
  4290d0:	mov    QWORD PTR [r15+0x8],rbx
  4290d4:	je     429129 <flatcc_builder_reserve_table@@Base+0xa9>
  4290d6:	add    r14d,r14d
  4290d9:	add    rbx,0x4
  4290dd:	mov    QWORD PTR [r15+0x8],rbx
  4290e1:	mov    rax,QWORD PTR [r15+0x30]
  4290e5:	mov    ebx,DWORD PTR [rax+0x14]
  4290e8:	or     r14d,0x1
  4290ec:	add    r14,rbx
  4290ef:	cmp    r14,QWORD PTR [r15+0x90]
  4290f6:	jbe    429116 <flatcc_builder_reserve_table@@Base+0x96>
  4290f8:	lea    rsi,[r15+0x88]
  4290ff:	mov    rdi,QWORD PTR [r15+0x40]
  429103:	xor    ecx,ecx
  429105:	mov    r8d,0x3
  42910b:	mov    rdx,r14
  42910e:	call   QWORD PTR [r15+0x50]
  429112:	test   eax,eax
  429114:	jne    429153 <flatcc_builder_reserve_table@@Base+0xd3>
  429116:	xor    eax,eax
  429118:	add    rbx,QWORD PTR [r15+0x88]
  42911f:	mov    QWORD PTR [r15],rbx
  429122:	sete   al
  429125:	neg    eax
  429127:	jmp    42912e <flatcc_builder_reserve_table@@Base+0xae>
  429129:	mov    eax,0xffffffff
  42912e:	pop    rbx
  42912f:	pop    r14
  429131:	pop    r15
  429133:	ret    
  429134:	lea    rdi,[rip+0x20e24]        # 449f5f <flatcc_builder_padding_base@@Base+0x9bf>
  42913b:	lea    rsi,[rip+0x206a0]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429142:	lea    rcx,[rip+0x20dd5]        # 449f1e <flatcc_builder_padding_base@@Base+0x97e>
  429149:	mov    edx,0x429
  42914e:	call   4060f0 <__assert_fail@plt>
  429153:	lea    rdi,[rip+0x17231]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42915a:	lea    rsi,[rip+0x20681]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429161:	lea    rcx,[rip+0x21674]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  429168:	mov    edx,0x134
  42916d:	call   4060f0 <__assert_fail@plt>
  429172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42917c:	nop    DWORD PTR [rax+0x0]

0000000000429180 <flatcc_builder_start_table@@Base>:
  429180:	push   rbp
  429181:	push   r15
  429183:	push   r14
  429185:	push   rbx
  429186:	push   rax
  429187:	mov    r15d,esi
  42918a:	mov    rbx,rdi
  42918d:	mov    esi,0x4
  429192:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  429197:	mov    r14d,0xffffffff
  42919d:	test   eax,eax
  42919f:	je     4291af <flatcc_builder_start_table@@Base+0x2f>
  4291a1:	mov    eax,r14d
  4291a4:	add    rsp,0x8
  4291a8:	pop    rbx
  4291a9:	pop    r14
  4291ab:	pop    r15
  4291ad:	pop    rbp
  4291ae:	ret    
  4291af:	mov    eax,DWORD PTR [rbx+0x8]
  4291b2:	sub    eax,DWORD PTR [rbx+0x58]
  4291b5:	mov    rcx,QWORD PTR [rbx+0x30]
  4291b9:	mov    DWORD PTR [rcx+0x10],eax
  4291bc:	mov    eax,DWORD PTR [rbx]
  4291be:	sub    eax,DWORD PTR [rbx+0x88]
  4291c4:	mov    rcx,QWORD PTR [rbx+0x30]
  4291c8:	mov    DWORD PTR [rcx+0x14],eax
  4291cb:	mov    eax,DWORD PTR [rbx+0x14]
  4291ce:	mov    rcx,QWORD PTR [rbx+0x30]
  4291d2:	mov    DWORD PTR [rcx+0x18],eax
  4291d5:	movzx  eax,WORD PTR [rbx+0x10]
  4291d9:	mov    rcx,QWORD PTR [rbx+0x30]
  4291dd:	mov    WORD PTR [rcx+0x1c],ax
  4291e1:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  4291e8:	mov    WORD PTR [rbx+0x10],0x0
  4291ee:	mov    rax,QWORD PTR [rbx+0x30]
  4291f2:	mov    WORD PTR [rax+0xe],0x3
  4291f8:	movzx  ebp,WORD PTR [rax+0x1c]
  4291fc:	add    ebp,ebp
  4291fe:	add    ebp,DWORD PTR [rax+0x10]
  429201:	lea    edx,[r15+r15*1]
  429205:	add    edx,0x4
  429208:	add    rdx,rbp
  42920b:	cmp    rdx,QWORD PTR [rbx+0x60]
  42920f:	jbe    42922c <flatcc_builder_start_table@@Base+0xac>
  429211:	lea    rsi,[rbx+0x58]
  429215:	mov    rdi,QWORD PTR [rbx+0x40]
  429219:	mov    ecx,0x1
  42921e:	xor    r8d,r8d
  429221:	call   QWORD PTR [rbx+0x50]
  429224:	test   eax,eax
  429226:	jne    4292c0 <flatcc_builder_start_table@@Base+0x140>
  42922c:	add    rbp,QWORD PTR [rbx+0x58]
  429230:	mov    QWORD PTR [rbx+0x8],rbp
  429234:	je     4291a1 <flatcc_builder_start_table@@Base+0x21>
  42923a:	add    r15d,r15d
  42923d:	add    rbp,0x4
  429241:	mov    QWORD PTR [rbx+0x8],rbp
  429245:	mov    rax,QWORD PTR [rbx+0x30]
  429249:	mov    ebp,DWORD PTR [rax+0x14]
  42924c:	or     r15d,0x1
  429250:	add    r15,rbp
  429253:	cmp    r15,QWORD PTR [rbx+0x90]
  42925a:	jbe    429279 <flatcc_builder_start_table@@Base+0xf9>
  42925c:	lea    rsi,[rbx+0x88]
  429263:	mov    rdi,QWORD PTR [rbx+0x40]
  429267:	xor    ecx,ecx
  429269:	mov    r8d,0x3
  42926f:	mov    rdx,r15
  429272:	call   QWORD PTR [rbx+0x50]
  429275:	test   eax,eax
  429277:	jne    4292c0 <flatcc_builder_start_table@@Base+0x140>
  429279:	add    rbp,QWORD PTR [rbx+0x88]
  429280:	mov    QWORD PTR [rbx],rbp
  429283:	je     4291a1 <flatcc_builder_start_table@@Base+0x21>
  429289:	mov    eax,DWORD PTR [rbx+0x28]
  42928c:	mov    rcx,rax
  42928f:	add    rcx,QWORD PTR [rbx+0x68]
  429293:	mov    QWORD PTR [rbx+0x18],rcx
  429297:	mov    ecx,DWORD PTR [rbx+0x70]
  42929a:	sub    ecx,eax
  42929c:	cmp    ecx,0xfffc
  4292a2:	mov    eax,0xfffc
  4292a7:	cmovb  eax,ecx
  4292aa:	mov    DWORD PTR [rbx+0x24],eax
  4292ad:	mov    rax,QWORD PTR [rbx+0x30]
  4292b1:	mov    DWORD PTR [rax+0x4],0xfffc
  4292b8:	xor    r14d,r14d
  4292bb:	jmp    4291a1 <flatcc_builder_start_table@@Base+0x21>
  4292c0:	lea    rdi,[rip+0x170c4]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4292c7:	lea    rsi,[rip+0x20514]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4292ce:	lea    rcx,[rip+0x21507]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  4292d5:	mov    edx,0x134
  4292da:	call   4060f0 <__assert_fail@plt>
  4292df:	nop

00000000004292e0 <flatcc_builder_create_vtable@@Base>:
  4292e0:	push   r14
  4292e2:	push   rbx
  4292e3:	sub    rsp,0x98
  4292ea:	mov    r14,rdi
  4292ed:	mov    QWORD PTR [rsp+0x8],0x0
  4292f6:	mov    DWORD PTR [rsp+0x10],0x0
  4292fe:	test   dx,dx
  429301:	je     429367 <flatcc_builder_create_vtable@@Base+0x87>
  429303:	movzx  r8d,dx
  429307:	mov    QWORD PTR [rsp+0x8],r8
  42930c:	mov    QWORD PTR [rsp+0x18],rsi
  429311:	mov    QWORD PTR [rsp+0x20],r8
  429316:	mov    DWORD PTR [rsp+0x10],0x1
  42931e:	mov    edx,0x1
  429323:	cmp    DWORD PTR [r14+0x100],0x0
  42932b:	jne    429376 <flatcc_builder_create_vtable@@Base+0x96>
  42932d:	cmp    DWORD PTR [r14+0x124],0x0
  429335:	jne    429376 <flatcc_builder_create_vtable@@Base+0x96>
  429337:	mov    ebx,DWORD PTR [r14+0xf4]
  42933e:	lea    eax,[r8+rbx*1]
  429342:	mov    DWORD PTR [r14+0xf4],eax
  429349:	mov    rdi,QWORD PTR [r14+0x38]
  42934d:	lea    rsi,[rsp+0x18]
  429352:	mov    ecx,ebx
  429354:	call   QWORD PTR [r14+0x48]
  429358:	test   eax,eax
  42935a:	jne    42940b <flatcc_builder_create_vtable@@Base+0x12b>
  429360:	add    ebx,0x1
  429363:	jne    4293c0 <flatcc_builder_create_vtable@@Base+0xe0>
  429365:	jmp    4293be <flatcc_builder_create_vtable@@Base+0xde>
  429367:	xor    edx,edx
  429369:	xor    r8d,r8d
  42936c:	cmp    DWORD PTR [r14+0x100],0x0
  429374:	je     42932d <flatcc_builder_create_vtable@@Base+0x4d>
  429376:	cmp    r8,0x11
  42937a:	setb   al
  42937d:	lea    rcx,[r8-0x10]
  429381:	shr    rcx,0x20
  429385:	sete   cl
  429388:	test   r8d,r8d
  42938b:	je     4293cd <flatcc_builder_create_vtable@@Base+0xed>
  42938d:	or     al,cl
  42938f:	je     4293cd <flatcc_builder_create_vtable@@Base+0xed>
  429391:	mov    ebx,DWORD PTR [r14+0xf0]
  429398:	sub    ebx,r8d
  42939b:	mov    rdi,QWORD PTR [r14+0x38]
  42939f:	lea    rsi,[rsp+0x18]
  4293a4:	mov    ecx,ebx
  4293a6:	call   QWORD PTR [r14+0x48]
  4293aa:	test   eax,eax
  4293ac:	jne    4293ec <flatcc_builder_create_vtable@@Base+0x10c>
  4293ae:	mov    DWORD PTR [r14+0xf0],ebx
  4293b5:	test   ebx,ebx
  4293b7:	je     4293be <flatcc_builder_create_vtable@@Base+0xde>
  4293b9:	add    ebx,0x1
  4293bc:	jmp    4293c0 <flatcc_builder_create_vtable@@Base+0xe0>
  4293be:	xor    ebx,ebx
  4293c0:	mov    eax,ebx
  4293c2:	add    rsp,0x98
  4293c9:	pop    rbx
  4293ca:	pop    r14
  4293cc:	ret    
  4293cd:	lea    rdi,[rip+0x16fb7]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4293d4:	lea    rsi,[rip+0x20407]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4293db:	lea    rcx,[rip+0x2147f]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  4293e2:	mov    edx,0x287
  4293e7:	call   4060f0 <__assert_fail@plt>
  4293ec:	lea    rdi,[rip+0x16f98]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4293f3:	lea    rsi,[rip+0x203e8]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4293fa:	lea    rcx,[rip+0x21460]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  429401:	mov    edx,0x28b
  429406:	call   4060f0 <__assert_fail@plt>
  42940b:	lea    rdi,[rip+0x16f79]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  429412:	lea    rsi,[rip+0x203c9]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429419:	lea    rcx,[rip+0x214fd]        # 44a91d <flatcc_builder_padding_base@@Base+0x137d>
  429420:	mov    edx,0x2a5
  429425:	call   4060f0 <__assert_fail@plt>
  42942a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429430 <flatcc_builder_create_cached_vtable@@Base>:
  429430:	push   rbp
  429431:	push   r15
  429433:	push   r14
  429435:	push   r13
  429437:	push   r12
  429439:	push   rbx
  42943a:	sub    rsp,0x28
  42943e:	mov    r15d,ecx
  429441:	mov    r8d,edx
  429444:	mov    QWORD PTR [rsp+0x18],rsi
  429449:	mov    r13,rdi
  42944c:	mov    rax,QWORD PTR [rdi+0xd8]
  429453:	test   rax,rax
  429456:	je     42952a <flatcc_builder_create_cached_vtable@@Base+0xfa>
  42945c:	mov    ecx,0x20
  429461:	sub    ecx,eax
  429463:	shrx   r15d,r15d,ecx
  429468:	shl    r15,0x2
  42946c:	add    r15,QWORD PTR [r13+0xa8]
  429473:	je     4295fa <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  429479:	mov    ebp,DWORD PTR [r15]
  42947c:	test   ebp,ebp
  42947e:	je     429602 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  429484:	mov    rbx,QWORD PTR [r13+0x78]
  429488:	mov    QWORD PTR [rsp+0x10],r13
  42948d:	mov    r13,QWORD PTR [r13+0xb8]
  429494:	movzx  eax,r8w
  429498:	mov    QWORD PTR [rsp+0x20],rax
  42949d:	xor    eax,eax
  42949f:	mov    QWORD PTR [rsp],rax
  4294a3:	mov    QWORD PTR [rsp+0x8],r15
  4294a8:	mov    r14,r15
  4294ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4294b0:	mov    eax,ebp
  4294b2:	lea    r15,[rax+r13*1]
  4294b6:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  4294bb:	cmp    WORD PTR [rbx+rsi*1],r8w
  4294c0:	jne    4294de <flatcc_builder_create_cached_vtable@@Base+0xae>
  4294c2:	add    rsi,rbx
  4294c5:	mov    rdi,QWORD PTR [rsp+0x18]
  4294ca:	mov    rdx,QWORD PTR [rsp+0x20]
  4294cf:	mov    r12d,r8d
  4294d2:	call   406130 <memcmp@plt>
  4294d7:	mov    r8d,r12d
  4294da:	test   eax,eax
  4294dc:	je     4294ef <flatcc_builder_create_cached_vtable@@Base+0xbf>
  4294de:	mov    ebp,DWORD PTR [r15+0xc]
  4294e2:	add    r15,0xc
  4294e6:	mov    r14,r15
  4294e9:	test   ebp,ebp
  4294eb:	jne    4294b0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4294ed:	jmp    42951b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  4294ef:	mov    eax,DWORD PTR [r15+0x4]
  4294f3:	mov    rcx,QWORD PTR [rsp+0x10]
  4294f8:	cmp    eax,DWORD PTR [rcx+0x100]
  4294fe:	je     429764 <flatcc_builder_create_cached_vtable@@Base+0x334>
  429504:	lea    r14,[r15+0xc]
  429508:	mov    ebp,DWORD PTR [r15+0xc]
  42950c:	mov    rax,r15
  42950f:	mov    QWORD PTR [rsp],r15
  429513:	test   ebp,ebp
  429515:	jne    4294b0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  429517:	mov    QWORD PTR [rsp],r15
  42951b:	mov    r13,QWORD PTR [rsp+0x10]
  429520:	mov    r15,QWORD PTR [rsp+0x8]
  429525:	jmp    429608 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  42952a:	cmp    DWORD PTR [r13+0xe4],0x0
  429532:	jne    4297a1 <flatcc_builder_create_cached_vtable@@Base+0x371>
  429538:	lea    rbx,[r13+0xb8]
  42953f:	cmp    QWORD PTR [r13+0xc0],0xf
  429547:	ja     42956f <flatcc_builder_create_cached_vtable@@Base+0x13f>
  429549:	mov    rdi,QWORD PTR [r13+0x40]
  42954d:	mov    edx,0x10
  429552:	xor    ecx,ecx
  429554:	mov    ebp,r8d
  429557:	mov    r8d,0x6
  42955d:	mov    rsi,rbx
  429560:	call   QWORD PTR [r13+0x50]
  429564:	mov    r8d,ebp
  429567:	test   eax,eax
  429569:	jne    429782 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42956f:	xor    r12d,r12d
  429572:	cmp    QWORD PTR [rbx],0x0
  429576:	je     42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42957c:	mov    ebx,r8d
  42957f:	lea    rsi,[r13+0xa8]
  429586:	mov    DWORD PTR [r13+0xe4],0x10
  429591:	mov    rdi,QWORD PTR [r13+0x40]
  429595:	mov    edx,0x100
  42959a:	mov    ecx,0x1
  42959f:	mov    r8d,0x5
  4295a5:	call   QWORD PTR [r13+0x50]
  4295a9:	test   eax,eax
  4295ab:	jne    42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  4295b1:	mov    rax,QWORD PTR [r13+0xb0]
  4295b8:	mov    edx,0x100
  4295bd:	nop    DWORD PTR [rax]
  4295c0:	mov    rcx,rdx
  4295c3:	lea    rdx,[rdx+rdx*1]
  4295c7:	cmp    rdx,rax
  4295ca:	jbe    4295c0 <flatcc_builder_create_cached_vtable@@Base+0x190>
  4295cc:	shr    rcx,0x2
  4295d0:	mov    rax,0xffffffffffffffff
  4295d7:	mov    edx,0x1
  4295dc:	mov    r8d,ebx
  4295df:	nop
  4295e0:	add    rax,0x1
  4295e4:	shlx   rsi,rdx,rax
  4295e9:	cmp    rsi,rcx
  4295ec:	jb     4295e0 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4295ee:	mov    QWORD PTR [r13+0xd8],rax
  4295f5:	jmp    42945c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  4295fa:	xor    r12d,r12d
  4295fd:	jmp    42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  429602:	xor    eax,eax
  429604:	mov    QWORD PTR [rsp],rax
  429608:	mov    ebp,DWORD PTR [r13+0xe4]
  42960f:	lea    rbx,[r13+0xb8]
  429616:	lea    rdx,[rbp+0x10]
  42961a:	cmp    rdx,QWORD PTR [r13+0xc0]
  429621:	jbe    429644 <flatcc_builder_create_cached_vtable@@Base+0x214>
  429623:	mov    rdi,QWORD PTR [r13+0x40]
  429627:	xor    ecx,ecx
  429629:	mov    r14d,r8d
  42962c:	mov    r8d,0x6
  429632:	mov    rsi,rbx
  429635:	call   QWORD PTR [r13+0x50]
  429639:	mov    r8d,r14d
  42963c:	test   eax,eax
  42963e:	jne    429782 <flatcc_builder_create_cached_vtable@@Base+0x352>
  429644:	xor    r12d,r12d
  429647:	add    rbp,QWORD PTR [rbx]
  42964a:	je     42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  429650:	mov    eax,DWORD PTR [r13+0xe4]
  429657:	mov    ecx,DWORD PTR [r13+0x100]
  42965e:	lea    edx,[rax+0x10]
  429661:	mov    DWORD PTR [r13+0xe4],edx
  429668:	mov    DWORD PTR [rbp+0x4],ecx
  42966b:	mov    ecx,DWORD PTR [r15]
  42966e:	mov    DWORD PTR [rbp+0xc],ecx
  429671:	mov    DWORD PTR [r15],eax
  429674:	movzx  ebx,r8w
  429678:	mov    rdi,r13
  42967b:	mov    rsi,QWORD PTR [rsp+0x18]
  429680:	mov    edx,ebx
  429682:	call   4292e0 <flatcc_builder_create_vtable@@Base>
  429687:	mov    DWORD PTR [rbp+0x0],eax
  42968a:	test   eax,eax
  42968c:	je     42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  429692:	mov    rax,QWORD PTR [rsp]
  429696:	test   rax,rax
  429699:	je     4296a6 <flatcc_builder_create_cached_vtable@@Base+0x276>
  42969b:	mov    eax,DWORD PTR [rax+0x8]
  42969e:	mov    DWORD PTR [rbp+0x8],eax
  4296a1:	jmp    429746 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4296a6:	mov    rax,QWORD PTR [r13+0x118]
  4296ad:	mov    r14d,DWORD PTR [r13+0xe0]
  4296b4:	test   rax,rax
  4296b7:	je     4296f4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4296b9:	lea    ecx,[r14+rbx*1]
  4296bd:	cmp    rax,rcx
  4296c0:	jae    4296f4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4296c2:	cmp    QWORD PTR [r13+0xd8],0x0
  4296ca:	je     429746 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4296cc:	mov    rdi,QWORD PTR [r13+0xa8]
  4296d3:	mov    rdx,QWORD PTR [r13+0xb0]
  4296da:	xor    esi,esi
  4296dc:	call   406100 <memset@plt>
  4296e1:	movabs rax,0x1000000000
  4296eb:	mov    QWORD PTR [r13+0xe0],rax
  4296f2:	jmp    429746 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4296f4:	lea    r15,[r13+0x78]
  4296f8:	lea    rdx,[r14+rbx*1]
  4296fc:	cmp    rdx,QWORD PTR [r13+0x80]
  429703:	jbe    42971c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  429705:	mov    rdi,QWORD PTR [r13+0x40]
  429709:	xor    ecx,ecx
  42970b:	mov    r8d,0x2
  429711:	mov    rsi,r15
  429714:	call   QWORD PTR [r13+0x50]
  429718:	test   eax,eax
  42971a:	jne    429782 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42971c:	add    r14,QWORD PTR [r15]
  42971f:	je     42975c <flatcc_builder_create_cached_vtable@@Base+0x32c>
  429721:	mov    eax,DWORD PTR [r13+0xe0]
  429728:	mov    DWORD PTR [rbp+0x8],eax
  42972b:	mov    ecx,ebx
  42972d:	add    ecx,eax
  42972f:	mov    DWORD PTR [r13+0xe0],ecx
  429736:	mov    rdi,r14
  429739:	mov    rsi,QWORD PTR [rsp+0x18]
  42973e:	mov    rdx,rbx
  429741:	call   406190 <memcpy@plt>
  429746:	mov    r12d,DWORD PTR [rbp+0x0]
  42974a:	mov    eax,r12d
  42974d:	add    rsp,0x28
  429751:	pop    rbx
  429752:	pop    r12
  429754:	pop    r13
  429756:	pop    r14
  429758:	pop    r15
  42975a:	pop    rbp
  42975b:	ret    
  42975c:	mov    r12d,0xffffffff
  429762:	jmp    42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  429764:	mov    rcx,QWORD PTR [rsp+0x8]
  429769:	cmp    r14,rcx
  42976c:	je     42977d <flatcc_builder_create_cached_vtable@@Base+0x34d>
  42976e:	mov    eax,DWORD PTR [r15+0xc]
  429772:	mov    DWORD PTR [r14],eax
  429775:	mov    eax,DWORD PTR [rcx]
  429777:	mov    DWORD PTR [r15+0xc],eax
  42977b:	mov    DWORD PTR [rcx],ebp
  42977d:	mov    r12d,DWORD PTR [r15]
  429780:	jmp    42974a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  429782:	lea    rdi,[rip+0x16c02]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  429789:	lea    rsi,[rip+0x20052]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429790:	lea    rcx,[rip+0x21045]        # 44a7dc <flatcc_builder_padding_base@@Base+0x123c>
  429797:	mov    edx,0x134
  42979c:	call   4060f0 <__assert_fail@plt>
  4297a1:	lea    rdi,[rip+0x211be]        # 44a966 <flatcc_builder_padding_base@@Base+0x13c6>
  4297a8:	lea    rsi,[rip+0x20033]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4297af:	lea    rcx,[rip+0x211bf]        # 44a975 <flatcc_builder_padding_base@@Base+0x13d5>
  4297b6:	mov    edx,0x156
  4297bb:	call   4060f0 <__assert_fail@plt>

00000000004297c0 <flatcc_builder_create_table@@Base>:
  4297c0:	push   rbp
  4297c1:	push   r14
  4297c3:	push   rbx
  4297c4:	sub    rsp,0xa0
  4297cb:	test   r9d,r9d
  4297ce:	js     4299e5 <flatcc_builder_create_table@@Base+0x225>
  4297d4:	mov    r14,rdi
  4297d7:	mov    edi,DWORD PTR [rsp+0xc0]
  4297de:	test   dil,0x1
  4297e2:	je     429a04 <flatcc_builder_create_table@@Base+0x244>
  4297e8:	movzx  ecx,cx
  4297eb:	cmp    ecx,0x4
  4297ee:	mov    eax,0x4
  4297f3:	cmova  eax,ecx
  4297f6:	cmp    WORD PTR [r14+0xe8],ax
  4297fe:	jae    429808 <flatcc_builder_create_table@@Base+0x48>
  429800:	mov    WORD PTR [r14+0xe8],ax
  429808:	mov    ebp,DWORD PTR [r14+0xf0]
  42980f:	mov    ecx,ebp
  429811:	sub    ecx,edx
  429813:	movzx  r10d,ax
  429817:	add    r10d,0xffffffff
  42981b:	and    r10d,ecx
  42981e:	mov    ecx,0xfffffffc
  429823:	mov    ebx,0xfffffffc
  429828:	sub    ebx,edx
  42982a:	add    edi,r10d
  42982d:	lea    eax,[rbx+rbp*1]
  429830:	add    eax,0x1
  429833:	sub    eax,edi
  429835:	mov    DWORD PTR [rsp+0xc],eax
  429839:	test   r9d,r9d
  42983c:	jle    4298e7 <flatcc_builder_create_table@@Base+0x127>
  429842:	add    ebx,ebp
  429844:	sub    ebx,r10d
  429847:	sub    ecx,ebx
  429849:	mov    edi,r9d
  42984c:	lea    rax,[rdi-0x1]
  429850:	mov    r9d,edi
  429853:	and    r9d,0x3
  429857:	cmp    rax,0x3
  42985b:	jae    429869 <flatcc_builder_create_table@@Base+0xa9>
  42985d:	xor    ebx,ebx
  42985f:	test   r9,r9
  429862:	jne    4298bd <flatcc_builder_create_table@@Base+0xfd>
  429864:	jmp    4298e7 <flatcc_builder_create_table@@Base+0x127>
  429869:	sub    rdi,r9
  42986c:	xor    ebx,ebx
  42986e:	xchg   ax,ax
  429870:	movzx  eax,WORD PTR [r8+rbx*2]
  429875:	mov    ebp,DWORD PTR [rax+rsi*1]
  429878:	add    ebp,ecx
  42987a:	sub    ebp,eax
  42987c:	mov    DWORD PTR [rax+rsi*1],ebp
  42987f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  429885:	mov    ebp,DWORD PTR [rax+rsi*1]
  429888:	add    ebp,ecx
  42988a:	sub    ebp,eax
  42988c:	mov    DWORD PTR [rax+rsi*1],ebp
  42988f:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  429895:	mov    ebp,DWORD PTR [rax+rsi*1]
  429898:	add    ebp,ecx
  42989a:	sub    ebp,eax
  42989c:	mov    DWORD PTR [rax+rsi*1],ebp
  42989f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  4298a5:	mov    ebp,DWORD PTR [rax+rsi*1]
  4298a8:	add    ebp,ecx
  4298aa:	sub    ebp,eax
  4298ac:	mov    DWORD PTR [rax+rsi*1],ebp
  4298af:	add    rbx,0x4
  4298b3:	cmp    rdi,rbx
  4298b6:	jne    429870 <flatcc_builder_create_table@@Base+0xb0>
  4298b8:	test   r9,r9
  4298bb:	je     4298e7 <flatcc_builder_create_table@@Base+0x127>
  4298bd:	lea    rdi,[r8+rbx*2]
  4298c1:	xor    ebx,ebx
  4298c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298cd:	nop    DWORD PTR [rax]
  4298d0:	movzx  eax,WORD PTR [rdi+rbx*2]
  4298d4:	mov    ebp,DWORD PTR [rax+rsi*1]
  4298d7:	add    ebp,ecx
  4298d9:	sub    ebp,eax
  4298db:	mov    DWORD PTR [rax+rsi*1],ebp
  4298de:	add    rbx,0x1
  4298e2:	cmp    r9,rbx
  4298e5:	jne    4298d0 <flatcc_builder_create_table@@Base+0x110>
  4298e7:	mov    QWORD PTR [rsp+0x10],0x4
  4298f0:	lea    rax,[rsp+0xc]
  4298f5:	mov    QWORD PTR [rsp+0x20],rax
  4298fa:	mov    QWORD PTR [rsp+0x28],0x4
  429903:	mov    DWORD PTR [rsp+0x18],0x1
  42990b:	test   rdx,rdx
  42990e:	je     4299b0 <flatcc_builder_create_table@@Base+0x1f0>
  429914:	lea    r8,[rdx+0x4]
  429918:	mov    QWORD PTR [rsp+0x10],r8
  42991d:	mov    QWORD PTR [rsp+0x30],rsi
  429922:	mov    QWORD PTR [rsp+0x38],rdx
  429927:	mov    DWORD PTR [rsp+0x18],0x2
  42992f:	mov    edx,0x2
  429934:	test   r10d,r10d
  429937:	je     42995f <flatcc_builder_create_table@@Base+0x19f>
  429939:	add    r8,r10
  42993c:	mov    QWORD PTR [rsp+0x10],r8
  429941:	mov    eax,edx
  429943:	shl    rax,0x4
  429947:	lea    rcx,[rip+0x1fc52]        # 4495a0 <flatcc_builder_padding_base@@Base>
  42994e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  429953:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  429958:	add    edx,0x1
  42995b:	mov    DWORD PTR [rsp+0x18],edx
  42995f:	cmp    r8,0x11
  429963:	setb   al
  429966:	lea    rcx,[r8-0x10]
  42996a:	shr    rcx,0x20
  42996e:	sete   cl
  429971:	test   r8d,r8d
  429974:	jle    4299c6 <flatcc_builder_create_table@@Base+0x206>
  429976:	or     al,cl
  429978:	je     4299c6 <flatcc_builder_create_table@@Base+0x206>
  42997a:	mov    ebp,DWORD PTR [r14+0xf0]
  429981:	sub    ebp,r8d
  429984:	mov    rdi,QWORD PTR [r14+0x38]
  429988:	lea    rsi,[rsp+0x20]
  42998d:	mov    ecx,ebp
  42998f:	call   QWORD PTR [r14+0x48]
  429993:	test   eax,eax
  429995:	jne    429a23 <flatcc_builder_create_table@@Base+0x263>
  42999b:	mov    DWORD PTR [r14+0xf0],ebp
  4299a2:	mov    eax,ebp
  4299a4:	add    rsp,0xa0
  4299ab:	pop    rbx
  4299ac:	pop    r14
  4299ae:	pop    rbp
  4299af:	ret    
  4299b0:	mov    edx,0x1
  4299b5:	mov    r8d,0x4
  4299bb:	test   r10d,r10d
  4299be:	jne    429939 <flatcc_builder_create_table@@Base+0x179>
  4299c4:	jmp    42995f <flatcc_builder_create_table@@Base+0x19f>
  4299c6:	lea    rdi,[rip+0x169be]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  4299cd:	lea    rsi,[rip+0x1fe0e]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4299d4:	lea    rcx,[rip+0x20e86]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  4299db:	mov    edx,0x287
  4299e0:	call   4060f0 <__assert_fail@plt>
  4299e5:	lea    rdi,[rip+0x2056c]        # 449f58 <flatcc_builder_padding_base@@Base+0x9b8>
  4299ec:	lea    rsi,[rip+0x1fdef]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  4299f3:	lea    rcx,[rip+0x20570]        # 449f6a <flatcc_builder_padding_base@@Base+0x9ca>
  4299fa:	mov    edx,0x4d5
  4299ff:	call   4060f0 <__assert_fail@plt>
  429a04:	lea    rdi,[rip+0x205fb]        # 44a006 <flatcc_builder_padding_base@@Base+0xa66>
  429a0b:	lea    rsi,[rip+0x1fdd0]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429a12:	lea    rcx,[rip+0x20551]        # 449f6a <flatcc_builder_padding_base@@Base+0x9ca>
  429a19:	mov    edx,0x4db
  429a1e:	call   4060f0 <__assert_fail@plt>
  429a23:	lea    rdi,[rip+0x16961]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  429a2a:	lea    rsi,[rip+0x1fdb1]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429a31:	lea    rcx,[rip+0x20e29]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  429a38:	mov    edx,0x28b
  429a3d:	call   4060f0 <__assert_fail@plt>
  429a42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429a4c:	nop    DWORD PTR [rax+0x0]

0000000000429a50 <flatcc_builder_check_required_field@@Base>:
  429a50:	mov    rax,QWORD PTR [rdi+0x30]
  429a54:	movzx  eax,WORD PTR [rax+0xe]
  429a58:	cmp    eax,0x3
  429a5b:	jne    429a77 <flatcc_builder_check_required_field@@Base+0x27>
  429a5d:	xor    eax,eax
  429a5f:	cmp    WORD PTR [rdi+0x10],si
  429a63:	jbe    429a76 <flatcc_builder_check_required_field@@Base+0x26>
  429a65:	mov    rcx,QWORD PTR [rdi+0x8]
  429a69:	movzx  edx,si
  429a6c:	xor    eax,eax
  429a6e:	cmp    WORD PTR [rcx+rdx*2],0x0
  429a73:	setne  al
  429a76:	ret    
  429a77:	push   rax
  429a78:	lea    rdi,[rip+0x20592]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  429a7f:	lea    rsi,[rip+0x1fd5c]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429a86:	lea    rcx,[rip+0x205af]        # 44a03c <flatcc_builder_padding_base@@Base+0xa9c>
  429a8d:	mov    edx,0x4f8
  429a92:	call   4060f0 <__assert_fail@plt>
  429a97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429aa0 <flatcc_builder_check_union_field@@Base>:
  429aa0:	mov    rax,QWORD PTR [rdi+0x30]
  429aa4:	movzx  eax,WORD PTR [rax+0xe]
  429aa8:	cmp    eax,0x3
  429aab:	jne    429afe <flatcc_builder_check_union_field@@Base+0x5e>
  429aad:	test   si,si
  429ab0:	je     429ae1 <flatcc_builder_check_union_field@@Base+0x41>
  429ab2:	cmp    WORD PTR [rdi+0x10],si
  429ab6:	jbe    429ae7 <flatcc_builder_check_union_field@@Base+0x47>
  429ab8:	movzx  eax,si
  429abb:	mov    rcx,QWORD PTR [rdi+0x8]
  429abf:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  429ac4:	test   rdx,rdx
  429ac7:	je     429aed <flatcc_builder_check_union_field@@Base+0x4d>
  429ac9:	mov    rsi,QWORD PTR [rdi+0x18]
  429acd:	cmp    BYTE PTR [rsi+rdx*1],0x0
  429ad1:	movzx  eax,WORD PTR [rcx+rax*2]
  429ad5:	je     429af4 <flatcc_builder_check_union_field@@Base+0x54>
  429ad7:	test   ax,ax
  429ada:	setne  al
  429add:	movzx  eax,al
  429ae0:	ret    
  429ae1:	xor    eax,eax
  429ae3:	movzx  eax,al
  429ae6:	ret    
  429ae7:	xor    eax,eax
  429ae9:	movzx  eax,al
  429aec:	ret    
  429aed:	cmp    WORD PTR [rcx+rax*2],0x0
  429af2:	jmp    429af7 <flatcc_builder_check_union_field@@Base+0x57>
  429af4:	test   ax,ax
  429af7:	sete   al
  429afa:	movzx  eax,al
  429afd:	ret    
  429afe:	push   rax
  429aff:	lea    rdi,[rip+0x2050b]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  429b06:	lea    rsi,[rip+0x1fcd5]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429b0d:	lea    rcx,[rip+0x2057b]        # 44a08f <flatcc_builder_padding_base@@Base+0xaef>
  429b14:	mov    edx,0x4ff
  429b19:	call   4060f0 <__assert_fail@plt>
  429b1e:	xchg   ax,ax

0000000000429b20 <flatcc_builder_check_required@@Base>:
  429b20:	mov    rax,QWORD PTR [rdi+0x30]
  429b24:	movzx  eax,WORD PTR [rax+0xe]
  429b28:	cmp    eax,0x3
  429b2b:	jne    429b68 <flatcc_builder_check_required@@Base+0x48>
  429b2d:	movzx  ecx,WORD PTR [rdi+0x10]
  429b31:	xor    eax,eax
  429b33:	cmp    ecx,edx
  429b35:	jl     429b64 <flatcc_builder_check_required@@Base+0x44>
  429b37:	mov    eax,0x1
  429b3c:	test   edx,edx
  429b3e:	jle    429b64 <flatcc_builder_check_required@@Base+0x44>
  429b40:	mov    rcx,QWORD PTR [rdi+0x8]
  429b44:	movsxd r8,edx
  429b47:	xor    edi,edi
  429b49:	nop    DWORD PTR [rax+0x0]
  429b50:	movzx  edx,WORD PTR [rsi+rdi*2]
  429b54:	cmp    WORD PTR [rcx+rdx*2],0x0
  429b59:	je     429b65 <flatcc_builder_check_required@@Base+0x45>
  429b5b:	add    rdi,0x1
  429b5f:	cmp    rdi,r8
  429b62:	jl     429b50 <flatcc_builder_check_required@@Base+0x30>
  429b64:	ret    
  429b65:	xor    eax,eax
  429b67:	ret    
  429b68:	push   rax
  429b69:	lea    rdi,[rip+0x204a1]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  429b70:	lea    rsi,[rip+0x1fc6b]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429b77:	lea    rcx,[rip+0x20561]        # 44a0df <flatcc_builder_padding_base@@Base+0xb3f>
  429b7e:	mov    edx,0x511
  429b83:	call   4060f0 <__assert_fail@plt>
  429b88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429b90 <flatcc_builder_end_table@@Base>:
  429b90:	push   rbp
  429b91:	push   r15
  429b93:	push   r14
  429b95:	push   r12
  429b97:	push   rbx
  429b98:	sub    rsp,0x10
  429b9c:	mov    rax,QWORD PTR [rdi+0x30]
  429ba0:	movzx  eax,WORD PTR [rax+0xe]
  429ba4:	cmp    eax,0x3
  429ba7:	jne    429cf8 <flatcc_builder_end_table@@Base+0x168>
  429bad:	mov    rbx,rdi
  429bb0:	mov    rax,QWORD PTR [rdi+0x8]
  429bb4:	mov    ecx,DWORD PTR [rdi+0x10]
  429bb7:	lea    ecx,[rcx+rcx*1]
  429bba:	add    ecx,0x4
  429bbd:	mov    WORD PTR [rax-0x4],cx
  429bc1:	mov    edx,DWORD PTR [rdi+0x20]
  429bc4:	add    edx,0x4
  429bc7:	mov    WORD PTR [rax-0x2],dx
  429bcb:	lea    r12,[rax-0x4]
  429bcf:	movzx  ebp,cx
  429bd2:	mov    eax,DWORD PTR [rdi+0x14]
  429bd5:	xor    eax,ebp
  429bd7:	imul   eax,eax,0x9e3779b1
  429bdd:	movzx  ecx,dx
  429be0:	xor    ecx,eax
  429be2:	imul   ecx,ecx,0x9e3779b1
  429be8:	mov    DWORD PTR [rdi+0x14],ecx
  429beb:	mov    rsi,r12
  429bee:	mov    edx,ebp
  429bf0:	call   429430 <flatcc_builder_create_cached_vtable@@Base>
  429bf5:	test   eax,eax
  429bf7:	je     429ce5 <flatcc_builder_end_table@@Base+0x155>
  429bfd:	mov    r14d,eax
  429c00:	xor    r15d,r15d
  429c03:	xor    esi,esi
  429c05:	mov    rdi,r12
  429c08:	mov    rdx,rbp
  429c0b:	call   406100 <memset@plt>
  429c10:	mov    rax,QWORD PTR [rbx+0x30]
  429c14:	mov    r8d,DWORD PTR [rax+0x14]
  429c18:	add    r8,QWORD PTR [rbx+0x88]
  429c1f:	mov    r9,QWORD PTR [rbx]
  429c22:	mov    rsi,QWORD PTR [rbx+0x18]
  429c26:	sub    r9,r8
  429c29:	shr    r9,1
  429c2c:	mov    edx,DWORD PTR [rbx+0x20]
  429c2f:	movzx  ecx,WORD PTR [rbx+0xea]
  429c36:	mov    DWORD PTR [rsp],r14d
  429c3a:	mov    rdi,rbx
  429c3d:	call   4297c0 <flatcc_builder_create_table@@Base>
  429c42:	test   eax,eax
  429c44:	je     429ce8 <flatcc_builder_end_table@@Base+0x158>
  429c4a:	mov    r14d,eax
  429c4d:	mov    rax,QWORD PTR [rbx+0x30]
  429c51:	mov    ecx,DWORD PTR [rax+0x18]
  429c54:	mov    DWORD PTR [rbx+0x14],ecx
  429c57:	movzx  ecx,WORD PTR [rax+0x1c]
  429c5b:	mov    WORD PTR [rbx+0x10],cx
  429c5f:	mov    ecx,DWORD PTR [rax+0x10]
  429c62:	add    rcx,QWORD PTR [rbx+0x58]
  429c66:	mov    QWORD PTR [rbx+0x8],rcx
  429c6a:	mov    eax,DWORD PTR [rax+0x14]
  429c6d:	add    rax,QWORD PTR [rbx+0x88]
  429c74:	mov    QWORD PTR [rbx],rax
  429c77:	mov    rdi,QWORD PTR [rbx+0x18]
  429c7b:	mov    edx,DWORD PTR [rbx+0x20]
  429c7e:	xor    esi,esi
  429c80:	call   406100 <memset@plt>
  429c85:	mov    rax,QWORD PTR [rbx+0x30]
  429c89:	mov    ecx,DWORD PTR [rax+0x8]
  429c8c:	mov    DWORD PTR [rbx+0x20],ecx
  429c8f:	mov    ecx,DWORD PTR [rax]
  429c91:	mov    DWORD PTR [rbx+0x28],ecx
  429c94:	mov    edx,DWORD PTR [rax+0x4]
  429c97:	mov    rsi,rcx
  429c9a:	add    rsi,QWORD PTR [rbx+0x68]
  429c9e:	mov    QWORD PTR [rbx+0x18],rsi
  429ca2:	mov    esi,DWORD PTR [rbx+0x70]
  429ca5:	sub    esi,ecx
  429ca7:	cmp    esi,edx
  429ca9:	cmova  esi,edx
  429cac:	mov    DWORD PTR [rbx+0x24],esi
  429caf:	movzx  ecx,WORD PTR [rbx+0xea]
  429cb6:	cmp    WORD PTR [rbx+0xe8],cx
  429cbd:	jae    429cc6 <flatcc_builder_end_table@@Base+0x136>
  429cbf:	mov    WORD PTR [rbx+0xe8],cx
  429cc6:	movzx  ecx,WORD PTR [rax+0xc]
  429cca:	mov    WORD PTR [rbx+0xea],cx
  429cd1:	add    rax,0xffffffffffffffdc
  429cd5:	mov    QWORD PTR [rbx+0x30],rax
  429cd9:	add    DWORD PTR [rbx+0x104],0xffffffff
  429ce0:	mov    r15d,r14d
  429ce3:	jmp    429ce8 <flatcc_builder_end_table@@Base+0x158>
  429ce5:	xor    r15d,r15d
  429ce8:	mov    eax,r15d
  429ceb:	add    rsp,0x10
  429cef:	pop    rbx
  429cf0:	pop    r12
  429cf2:	pop    r14
  429cf4:	pop    r15
  429cf6:	pop    rbp
  429cf7:	ret    
  429cf8:	lea    rdi,[rip+0x20312]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  429cff:	lea    rsi,[rip+0x1fadc]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429d06:	lea    rcx,[rip+0x2042c]        # 44a139 <flatcc_builder_padding_base@@Base+0xb99>
  429d0d:	mov    edx,0x525
  429d12:	call   4060f0 <__assert_fail@plt>
  429d17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429d20 <flatcc_builder_create_vector@@Base>:
  429d20:	push   rbp
  429d21:	push   rbx
  429d22:	sub    rsp,0x98
  429d29:	cmp    rdx,r9
  429d2c:	ja     429e59 <flatcc_builder_create_vector@@Base+0x139>
  429d32:	mov    rbx,rdi
  429d35:	movzx  edi,r8w
  429d39:	cmp    edi,0x4
  429d3c:	mov    eax,0x4
  429d41:	cmova  eax,edi
  429d44:	cmp    WORD PTR [rbx+0xe8],ax
  429d4b:	jae    429d54 <flatcc_builder_create_vector@@Base+0x34>
  429d4d:	mov    WORD PTR [rbx+0xe8],ax
  429d54:	imul   ecx,edx
  429d57:	mov    DWORD PTR [rsp+0x4],edx
  429d5b:	mov    ebp,DWORD PTR [rbx+0xf0]
  429d61:	mov    edx,ebp
  429d63:	sub    edx,ecx
  429d65:	movzx  eax,ax
  429d68:	add    eax,0xffffffff
  429d6b:	and    eax,edx
  429d6d:	mov    QWORD PTR [rsp+0x8],0x4
  429d76:	lea    rdx,[rsp+0x4]
  429d7b:	mov    QWORD PTR [rsp+0x18],rdx
  429d80:	mov    QWORD PTR [rsp+0x20],0x4
  429d89:	mov    DWORD PTR [rsp+0x10],0x1
  429d91:	test   ecx,ecx
  429d93:	je     429e29 <flatcc_builder_create_vector@@Base+0x109>
  429d99:	mov    ecx,ecx
  429d9b:	lea    r8,[rcx+0x4]
  429d9f:	mov    QWORD PTR [rsp+0x8],r8
  429da4:	mov    QWORD PTR [rsp+0x28],rsi
  429da9:	mov    QWORD PTR [rsp+0x30],rcx
  429dae:	mov    DWORD PTR [rsp+0x10],0x2
  429db6:	mov    edx,0x2
  429dbb:	test   eax,eax
  429dbd:	je     429de7 <flatcc_builder_create_vector@@Base+0xc7>
  429dbf:	mov    eax,eax
  429dc1:	add    r8,rax
  429dc4:	mov    QWORD PTR [rsp+0x8],r8
  429dc9:	mov    ecx,edx
  429dcb:	shl    rcx,0x4
  429dcf:	lea    rsi,[rip+0x1f7ca]        # 4495a0 <flatcc_builder_padding_base@@Base>
  429dd6:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  429ddb:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  429de0:	add    edx,0x1
  429de3:	mov    DWORD PTR [rsp+0x10],edx
  429de7:	cmp    r8,0x11
  429deb:	setb   al
  429dee:	lea    rcx,[r8-0x10]
  429df2:	shr    rcx,0x20
  429df6:	sete   cl
  429df9:	test   r8d,r8d
  429dfc:	jle    429e3a <flatcc_builder_create_vector@@Base+0x11a>
  429dfe:	or     al,cl
  429e00:	je     429e3a <flatcc_builder_create_vector@@Base+0x11a>
  429e02:	sub    ebp,r8d
  429e05:	mov    rdi,QWORD PTR [rbx+0x38]
  429e09:	lea    rsi,[rsp+0x18]
  429e0e:	mov    ecx,ebp
  429e10:	call   QWORD PTR [rbx+0x48]
  429e13:	test   eax,eax
  429e15:	jne    429e78 <flatcc_builder_create_vector@@Base+0x158>
  429e17:	mov    DWORD PTR [rbx+0xf0],ebp
  429e1d:	mov    eax,ebp
  429e1f:	add    rsp,0x98
  429e26:	pop    rbx
  429e27:	pop    rbp
  429e28:	ret    
  429e29:	mov    edx,0x1
  429e2e:	mov    r8d,0x4
  429e34:	test   eax,eax
  429e36:	jne    429dbf <flatcc_builder_create_vector@@Base+0x9f>
  429e38:	jmp    429de7 <flatcc_builder_create_vector@@Base+0xc7>
  429e3a:	lea    rdi,[rip+0x1654a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  429e41:	lea    rsi,[rip+0x1f99a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429e48:	lea    rcx,[rip+0x20a12]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  429e4f:	mov    edx,0x287
  429e54:	call   4060f0 <__assert_fail@plt>
  429e59:	lea    rdi,[rip+0x2031b]        # 44a17b <flatcc_builder_padding_base@@Base+0xbdb>
  429e60:	lea    rsi,[rip+0x1f97b]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429e67:	lea    rcx,[rip+0x20320]        # 44a18e <flatcc_builder_padding_base@@Base+0xbee>
  429e6e:	mov    edx,0x555
  429e73:	call   4060f0 <__assert_fail@plt>
  429e78:	lea    rdi,[rip+0x1650c]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  429e7f:	lea    rsi,[rip+0x1f95c]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429e86:	lea    rcx,[rip+0x209d4]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  429e8d:	mov    edx,0x28b
  429e92:	call   4060f0 <__assert_fail@plt>
  429e97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429ea0 <flatcc_builder_end_vector@@Base>:
  429ea0:	push   rbp
  429ea1:	push   rbx
  429ea2:	push   rax
  429ea3:	mov    rax,QWORD PTR [rdi+0x30]
  429ea7:	movzx  ecx,WORD PTR [rax+0xe]
  429eab:	cmp    ecx,0x4
  429eae:	jne    429f4a <flatcc_builder_end_vector@@Base+0xaa>
  429eb4:	mov    rbx,rdi
  429eb7:	mov    rsi,QWORD PTR [rdi+0x18]
  429ebb:	mov    ecx,DWORD PTR [rax+0x10]
  429ebe:	mov    edx,DWORD PTR [rax+0x14]
  429ec1:	movzx  r8d,WORD PTR [rdi+0xea]
  429ec9:	mov    r9d,DWORD PTR [rax+0x18]
  429ecd:	call   429d20 <flatcc_builder_create_vector@@Base>
  429ed2:	mov    ebp,eax
  429ed4:	test   eax,eax
  429ed6:	je     429f41 <flatcc_builder_end_vector@@Base+0xa1>
  429ed8:	mov    rdi,QWORD PTR [rbx+0x18]
  429edc:	mov    edx,DWORD PTR [rbx+0x20]
  429edf:	xor    esi,esi
  429ee1:	call   406100 <memset@plt>
  429ee6:	mov    rax,QWORD PTR [rbx+0x30]
  429eea:	mov    ecx,DWORD PTR [rax+0x8]
  429eed:	mov    DWORD PTR [rbx+0x20],ecx
  429ef0:	mov    ecx,DWORD PTR [rax]
  429ef2:	mov    DWORD PTR [rbx+0x28],ecx
  429ef5:	mov    edx,DWORD PTR [rax+0x4]
  429ef8:	mov    rsi,rcx
  429efb:	add    rsi,QWORD PTR [rbx+0x68]
  429eff:	mov    QWORD PTR [rbx+0x18],rsi
  429f03:	mov    esi,DWORD PTR [rbx+0x70]
  429f06:	sub    esi,ecx
  429f08:	cmp    esi,edx
  429f0a:	cmova  esi,edx
  429f0d:	mov    DWORD PTR [rbx+0x24],esi
  429f10:	movzx  ecx,WORD PTR [rbx+0xea]
  429f17:	cmp    WORD PTR [rbx+0xe8],cx
  429f1e:	jae    429f27 <flatcc_builder_end_vector@@Base+0x87>
  429f20:	mov    WORD PTR [rbx+0xe8],cx
  429f27:	movzx  ecx,WORD PTR [rax+0xc]
  429f2b:	mov    WORD PTR [rbx+0xea],cx
  429f32:	add    rax,0xffffffffffffffdc
  429f36:	mov    QWORD PTR [rbx+0x30],rax
  429f3a:	add    DWORD PTR [rbx+0x104],0xffffffff
  429f41:	mov    eax,ebp
  429f43:	add    rsp,0x8
  429f47:	pop    rbx
  429f48:	pop    rbp
  429f49:	ret    
  429f4a:	lea    rdi,[rip+0x1fbce]        # 449b1f <flatcc_builder_padding_base@@Base+0x57f>
  429f51:	lea    rsi,[rip+0x1f88a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  429f58:	lea    rcx,[rip+0x202a5]        # 44a204 <flatcc_builder_padding_base@@Base+0xc64>
  429f5f:	mov    edx,0x578
  429f64:	call   4060f0 <__assert_fail@plt>
  429f69:	nop    DWORD PTR [rax+0x0]

0000000000429f70 <flatcc_builder_vector_count@@Base>:
  429f70:	mov    rax,QWORD PTR [rdi+0x30]
  429f74:	mov    eax,DWORD PTR [rax+0x14]
  429f77:	ret    
  429f78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429f80 <flatcc_builder_vector_edit@@Base>:
  429f80:	mov    rax,QWORD PTR [rdi+0x18]
  429f84:	ret    
  429f85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f8f:	nop

0000000000429f90 <flatcc_builder_create_offset_vector_direct@@Base>:
  429f90:	xor    ecx,ecx
  429f92:	jmp    429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  429f94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f9e:	xchg   ax,ax
  429fa0:	push   r14
  429fa2:	push   rbx
  429fa3:	sub    rsp,0x98
  429faa:	mov    r10,rdx
  429fad:	xor    ebx,ebx
  429faf:	test   r10d,0xc0000000
  429fb6:	jne    42a10a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  429fbc:	mov    r14,rdi
  429fbf:	movzx  edx,WORD PTR [rdi+0xe8]
  429fc6:	cmp    edx,0x3
  429fc9:	ja     429fd5 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  429fcb:	mov    WORD PTR [r14+0xe8],0x4
  429fd5:	lea    r8d,[r10*4+0x0]
  429fdd:	mov    DWORD PTR [rsp+0x4],r10d
  429fe2:	mov    ebx,DWORD PTR [r14+0xf0]
  429fe9:	mov    r9d,ebx
  429fec:	and    r9d,0x3
  429ff0:	mov    QWORD PTR [rsp+0x8],0x4
  429ff9:	lea    rdx,[rsp+0x4]
  429ffe:	mov    QWORD PTR [rsp+0x18],rdx
  42a003:	mov    QWORD PTR [rsp+0x20],0x4
  42a00c:	mov    DWORD PTR [rsp+0x10],0x1
  42a014:	test   r8d,r8d
  42a017:	je     42a117 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  42a01d:	mov    edx,r8d
  42a020:	lea    r8,[rdx+0x4]
  42a024:	mov    QWORD PTR [rsp+0x8],r8
  42a029:	mov    QWORD PTR [rsp+0x28],rsi
  42a02e:	mov    QWORD PTR [rsp+0x30],rdx
  42a033:	mov    DWORD PTR [rsp+0x10],0x2
  42a03b:	mov    edx,0x2
  42a040:	test   r9d,r9d
  42a043:	je     42a06b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  42a045:	add    r8,r9
  42a048:	mov    QWORD PTR [rsp+0x8],r8
  42a04d:	mov    edi,edx
  42a04f:	shl    rdi,0x4
  42a053:	lea    rax,[rip+0x1f546]        # 4495a0 <flatcc_builder_padding_base@@Base>
  42a05a:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  42a05f:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  42a064:	add    edx,0x1
  42a067:	mov    DWORD PTR [rsp+0x10],edx
  42a06b:	test   r10d,r10d
  42a06e:	je     42a0c6 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  42a070:	mov    edi,0xfffffffc
  42a075:	sub    edi,ebx
  42a077:	add    edi,r8d
  42a07a:	mov    r9d,r10d
  42a07d:	xor    ebx,ebx
  42a07f:	nop
  42a080:	mov    eax,DWORD PTR [rsi+rbx*4]
  42a083:	test   eax,eax
  42a085:	je     42a0a0 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  42a087:	add    eax,edi
  42a089:	mov    DWORD PTR [rsi+rbx*4],eax
  42a08c:	test   rcx,rcx
  42a08f:	je     42a0b3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  42a091:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42a095:	jne    42a0b3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  42a097:	jmp    42a130 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  42a09c:	nop    DWORD PTR [rax+0x0]
  42a0a0:	test   rcx,rcx
  42a0a3:	je     42a14f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  42a0a9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42a0ad:	jne    42a16e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  42a0b3:	add    rbx,0x1
  42a0b7:	add    edi,0xfffffffc
  42a0ba:	cmp    rbx,r9
  42a0bd:	jb     42a080 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  42a0bf:	mov    ebx,DWORD PTR [r14+0xf0]
  42a0c6:	cmp    r8,0x11
  42a0ca:	setb   al
  42a0cd:	lea    rcx,[r8-0x10]
  42a0d1:	shr    rcx,0x20
  42a0d5:	sete   cl
  42a0d8:	test   r8d,r8d
  42a0db:	jle    42a18d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42a0e1:	or     al,cl
  42a0e3:	je     42a18d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42a0e9:	sub    ebx,r8d
  42a0ec:	mov    rdi,QWORD PTR [r14+0x38]
  42a0f0:	lea    rsi,[rsp+0x18]
  42a0f5:	mov    ecx,ebx
  42a0f7:	call   QWORD PTR [r14+0x48]
  42a0fb:	test   eax,eax
  42a0fd:	jne    42a1ac <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  42a103:	mov    DWORD PTR [r14+0xf0],ebx
  42a10a:	mov    eax,ebx
  42a10c:	add    rsp,0x98
  42a113:	pop    rbx
  42a114:	pop    r14
  42a116:	ret    
  42a117:	mov    edx,0x1
  42a11c:	mov    r8d,0x4
  42a122:	test   r9d,r9d
  42a125:	jne    42a045 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  42a12b:	jmp    42a06b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  42a130:	lea    rdi,[rip+0x2085f]        # 44a996 <flatcc_builder_padding_base@@Base+0x13f6>
  42a137:	lea    rsi,[rip+0x1f6a4]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a13e:	lea    rcx,[rip+0x2085f]        # 44a9a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a145:	mov    edx,0x5b1
  42a14a:	call   4060f0 <__assert_fail@plt>
  42a14f:	lea    rdi,[rip+0x16235]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42a156:	lea    rsi,[rip+0x1f685]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a15d:	lea    rcx,[rip+0x20840]        # 44a9a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a164:	mov    edx,0x5b7
  42a169:	call   4060f0 <__assert_fail@plt>
  42a16e:	lea    rdi,[rip+0x208b2]        # 44aa27 <flatcc_builder_padding_base@@Base+0x1487>
  42a175:	lea    rsi,[rip+0x1f666]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a17c:	lea    rcx,[rip+0x20821]        # 44a9a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a183:	mov    edx,0x5b5
  42a188:	call   4060f0 <__assert_fail@plt>
  42a18d:	lea    rdi,[rip+0x161f7]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42a194:	lea    rsi,[rip+0x1f647]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a19b:	lea    rcx,[rip+0x206bf]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  42a1a2:	mov    edx,0x287
  42a1a7:	call   4060f0 <__assert_fail@plt>
  42a1ac:	lea    rdi,[rip+0x161d8]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42a1b3:	lea    rsi,[rip+0x1f628]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a1ba:	lea    rcx,[rip+0x206a0]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  42a1c1:	mov    edx,0x28b
  42a1c6:	call   4060f0 <__assert_fail@plt>
  42a1cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a1d0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  42a1d0:	push   rbp
  42a1d1:	push   rbx
  42a1d2:	push   rax
  42a1d3:	mov    rcx,QWORD PTR [rdi+0x30]
  42a1d7:	movzx  edx,WORD PTR [rcx+0xe]
  42a1db:	cmp    edx,0x5
  42a1de:	jne    42a271 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  42a1e4:	mov    rax,rsi
  42a1e7:	mov    rbx,rdi
  42a1ea:	mov    rsi,QWORD PTR [rdi+0x18]
  42a1ee:	mov    edx,DWORD PTR [rcx+0x14]
  42a1f1:	mov    rcx,rax
  42a1f4:	call   429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a1f9:	mov    ebp,eax
  42a1fb:	test   eax,eax
  42a1fd:	je     42a268 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  42a1ff:	mov    rdi,QWORD PTR [rbx+0x18]
  42a203:	mov    edx,DWORD PTR [rbx+0x20]
  42a206:	xor    esi,esi
  42a208:	call   406100 <memset@plt>
  42a20d:	mov    rax,QWORD PTR [rbx+0x30]
  42a211:	mov    ecx,DWORD PTR [rax+0x8]
  42a214:	mov    DWORD PTR [rbx+0x20],ecx
  42a217:	mov    ecx,DWORD PTR [rax]
  42a219:	mov    DWORD PTR [rbx+0x28],ecx
  42a21c:	mov    edx,DWORD PTR [rax+0x4]
  42a21f:	mov    rsi,rcx
  42a222:	add    rsi,QWORD PTR [rbx+0x68]
  42a226:	mov    QWORD PTR [rbx+0x18],rsi
  42a22a:	mov    esi,DWORD PTR [rbx+0x70]
  42a22d:	sub    esi,ecx
  42a22f:	cmp    esi,edx
  42a231:	cmova  esi,edx
  42a234:	mov    DWORD PTR [rbx+0x24],esi
  42a237:	movzx  ecx,WORD PTR [rbx+0xea]
  42a23e:	cmp    WORD PTR [rbx+0xe8],cx
  42a245:	jae    42a24e <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  42a247:	mov    WORD PTR [rbx+0xe8],cx
  42a24e:	movzx  ecx,WORD PTR [rax+0xc]
  42a252:	mov    WORD PTR [rbx+0xea],cx
  42a259:	add    rax,0xffffffffffffffdc
  42a25d:	mov    QWORD PTR [rbx+0x30],rax
  42a261:	add    DWORD PTR [rbx+0x104],0xffffffff
  42a268:	mov    eax,ebp
  42a26a:	add    rsp,0x8
  42a26e:	pop    rbx
  42a26f:	pop    rbp
  42a270:	ret    
  42a271:	lea    rdi,[rip+0x1f9a0]        # 449c18 <flatcc_builder_padding_base@@Base+0x678>
  42a278:	lea    rsi,[rip+0x1f563]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a27f:	lea    rcx,[rip+0x2000b]        # 44a291 <flatcc_builder_padding_base@@Base+0xcf1>
  42a286:	mov    edx,0x5d5
  42a28b:	call   4060f0 <__assert_fail@plt>

000000000042a290 <flatcc_builder_offset_vector_edit@@Base>:
  42a290:	mov    rax,QWORD PTR [rdi+0x18]
  42a294:	ret    
  42a295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a29f:	nop

000000000042a2a0 <flatcc_builder_offset_vector_count@@Base>:
  42a2a0:	mov    rax,QWORD PTR [rdi+0x30]
  42a2a4:	mov    eax,DWORD PTR [rax+0x14]
  42a2a7:	ret    
  42a2a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a2b0 <flatcc_builder_table_add_union@@Base>:
  42a2b0:	push   rbp
  42a2b1:	push   r15
  42a2b3:	push   r14
  42a2b5:	push   rbx
  42a2b6:	push   rax
  42a2b7:	mov    rax,QWORD PTR [rdi+0x30]
  42a2bb:	movzx  eax,WORD PTR [rax+0xe]
  42a2bf:	cmp    eax,0x3
  42a2c2:	jne    42a321 <flatcc_builder_table_add_union@@Base+0x71>
  42a2c4:	mov    r14,rdx
  42a2c7:	mov    ebp,esi
  42a2c9:	mov    r15,rdi
  42a2cc:	mov    rbx,rdx
  42a2cf:	shr    rbx,0x20
  42a2d3:	test   r14b,r14b
  42a2d6:	jne    42a2dc <flatcc_builder_table_add_union@@Base+0x2c>
  42a2d8:	test   ebx,ebx
  42a2da:	jne    42a340 <flatcc_builder_table_add_union@@Base+0x90>
  42a2dc:	test   ebx,ebx
  42a2de:	je     42a2f5 <flatcc_builder_table_add_union@@Base+0x45>
  42a2e0:	mov    rdi,r15
  42a2e3:	mov    esi,ebp
  42a2e5:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  42a2ea:	test   rax,rax
  42a2ed:	je     42a37e <flatcc_builder_table_add_union@@Base+0xce>
  42a2f3:	mov    DWORD PTR [rax],ebx
  42a2f5:	add    ebp,0xffffffff
  42a2f8:	mov    edx,0x1
  42a2fd:	mov    ecx,0x1
  42a302:	mov    rdi,r15
  42a305:	mov    esi,ebp
  42a307:	call   42a500 <flatcc_builder_table_add@@Base>
  42a30c:	test   rax,rax
  42a30f:	je     42a35f <flatcc_builder_table_add_union@@Base+0xaf>
  42a311:	mov    BYTE PTR [rax],r14b
  42a314:	xor    eax,eax
  42a316:	add    rsp,0x8
  42a31a:	pop    rbx
  42a31b:	pop    r14
  42a31d:	pop    r15
  42a31f:	pop    rbp
  42a320:	ret    
  42a321:	lea    rdi,[rip+0x1fce9]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  42a328:	lea    rsi,[rip+0x1f4b3]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a32f:	lea    rcx,[rip+0x1ffcd]        # 44a303 <flatcc_builder_padding_base@@Base+0xd63>
  42a336:	mov    edx,0x5ee
  42a33b:	call   4060f0 <__assert_fail@plt>
  42a340:	lea    rdi,[rip+0x20014]        # 44a35b <flatcc_builder_padding_base@@Base+0xdbb>
  42a347:	lea    rsi,[rip+0x1f494]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a34e:	lea    rcx,[rip+0x1ffae]        # 44a303 <flatcc_builder_padding_base@@Base+0xd63>
  42a355:	mov    edx,0x5ef
  42a35a:	call   4060f0 <__assert_fail@plt>
  42a35f:	lea    rdi,[rip+0x20021]        # 44a387 <flatcc_builder_padding_base@@Base+0xde7>
  42a366:	lea    rsi,[rip+0x1f475]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a36d:	lea    rcx,[rip+0x1ff8f]        # 44a303 <flatcc_builder_padding_base@@Base+0xd63>
  42a374:	mov    edx,0x5f6
  42a379:	call   4060f0 <__assert_fail@plt>
  42a37e:	lea    rdi,[rip+0x1fff8]        # 44a37d <flatcc_builder_padding_base@@Base+0xddd>
  42a385:	lea    rsi,[rip+0x1f456]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a38c:	lea    rcx,[rip+0x1ff70]        # 44a303 <flatcc_builder_padding_base@@Base+0xd63>
  42a393:	mov    edx,0x5f2
  42a398:	call   4060f0 <__assert_fail@plt>
  42a39d:	nop    DWORD PTR [rax]

000000000042a3a0 <flatcc_builder_table_add_offset@@Base>:
  42a3a0:	push   rbp
  42a3a1:	push   r15
  42a3a3:	push   r14
  42a3a5:	push   rbx
  42a3a6:	push   rax
  42a3a7:	mov    rax,QWORD PTR [rdi+0x30]
  42a3ab:	movzx  eax,WORD PTR [rax+0xe]
  42a3af:	cmp    eax,0x3
  42a3b2:	jne    42a49e <flatcc_builder_table_add_offset@@Base+0xfe>
  42a3b8:	mov    r14d,esi
  42a3bb:	cmp    esi,0x7ffd
  42a3c1:	jae    42a4bd <flatcc_builder_table_add_offset@@Base+0x11d>
  42a3c7:	mov    rbx,rdi
  42a3ca:	mov    rax,QWORD PTR [rdi+0x8]
  42a3ce:	movsxd rcx,r14d
  42a3d1:	cmp    WORD PTR [rax+rcx*2],0x0
  42a3d6:	jne    42a4dc <flatcc_builder_table_add_offset@@Base+0x13c>
  42a3dc:	mov    ecx,DWORD PTR [rbx+0x14]
  42a3df:	xor    ecx,r14d
  42a3e2:	imul   ecx,ecx,0x9e3779b1
  42a3e8:	xor    ecx,0x4
  42a3eb:	imul   ecx,ecx,0x9e3779b1
  42a3f1:	mov    DWORD PTR [rbx+0x14],ecx
  42a3f4:	mov    ebp,DWORD PTR [rbx+0x20]
  42a3f7:	mov    ecx,DWORD PTR [rbx+0x24]
  42a3fa:	add    ebp,0x3
  42a3fd:	and    ebp,0xfffffffc
  42a400:	lea    r15,[rbp+0x4]
  42a404:	mov    DWORD PTR [rbx+0x20],r15d
  42a408:	cmp    ecx,r15d
  42a40b:	jae    42a467 <flatcc_builder_table_add_offset@@Base+0xc7>
  42a40d:	lea    eax,[rbp+0x4]
  42a410:	lea    rsi,[rbx+0x68]
  42a414:	mov    rdi,QWORD PTR [rbx+0x40]
  42a418:	mov    edx,DWORD PTR [rbx+0x28]
  42a41b:	add    rdx,rax
  42a41e:	mov    ecx,0x1
  42a423:	mov    r8d,0x1
  42a429:	call   QWORD PTR [rbx+0x50]
  42a42c:	test   eax,eax
  42a42e:	je     42a434 <flatcc_builder_table_add_offset@@Base+0x94>
  42a430:	xor    ebp,ebp
  42a432:	jmp    42a490 <flatcc_builder_table_add_offset@@Base+0xf0>
  42a434:	mov    eax,DWORD PTR [rbx+0x28]
  42a437:	mov    rcx,rax
  42a43a:	add    rcx,QWORD PTR [rbx+0x68]
  42a43e:	mov    QWORD PTR [rbx+0x18],rcx
  42a442:	mov    ecx,DWORD PTR [rbx+0x70]
  42a445:	sub    ecx,eax
  42a447:	cmp    ecx,0xfffc
  42a44d:	mov    eax,0xfffc
  42a452:	cmovb  eax,ecx
  42a455:	mov    DWORD PTR [rbx+0x24],eax
  42a458:	mov    rax,QWORD PTR [rbx+0x30]
  42a45c:	mov    DWORD PTR [rax+0x4],0xfffc
  42a463:	mov    rax,QWORD PTR [rbx+0x8]
  42a467:	movzx  ecx,r14w
  42a46b:	mov    WORD PTR [rax+rcx*2],r15w
  42a470:	cmp    WORD PTR [rbx+0x10],cx
  42a474:	ja     42a47f <flatcc_builder_table_add_offset@@Base+0xdf>
  42a476:	add    r14d,0x1
  42a47a:	mov    WORD PTR [rbx+0x10],r14w
  42a47f:	mov    rax,QWORD PTR [rbx]
  42a482:	lea    rcx,[rax+0x2]
  42a486:	mov    QWORD PTR [rbx],rcx
  42a489:	mov    WORD PTR [rax],bp
  42a48c:	add    rbp,QWORD PTR [rbx+0x18]
  42a490:	mov    rax,rbp
  42a493:	add    rsp,0x8
  42a497:	pop    rbx
  42a498:	pop    r14
  42a49a:	pop    r15
  42a49c:	pop    rbp
  42a49d:	ret    
  42a49e:	lea    rdi,[rip+0x1fb6c]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  42a4a5:	lea    rsi,[rip+0x1f336]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a4ac:	lea    rcx,[rip+0x20252]        # 44a705 <flatcc_builder_padding_base@@Base+0x1165>
  42a4b3:	mov    edx,0x713
  42a4b8:	call   4060f0 <__assert_fail@plt>
  42a4bd:	lea    rdi,[rip+0x201c1]        # 44a685 <flatcc_builder_padding_base@@Base+0x10e5>
  42a4c4:	lea    rsi,[rip+0x1f317]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a4cb:	lea    rcx,[rip+0x20233]        # 44a705 <flatcc_builder_padding_base@@Base+0x1165>
  42a4d2:	mov    edx,0x714
  42a4d7:	call   4060f0 <__assert_fail@plt>
  42a4dc:	lea    rdi,[rip+0x15ea8]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42a4e3:	lea    rsi,[rip+0x1f2f8]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a4ea:	lea    rcx,[rip+0x20214]        # 44a705 <flatcc_builder_padding_base@@Base+0x1165>
  42a4f1:	mov    edx,0x71b
  42a4f6:	call   4060f0 <__assert_fail@plt>
  42a4fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a500 <flatcc_builder_table_add@@Base>:
  42a500:	push   rbp
  42a501:	push   r14
  42a503:	push   rbx
  42a504:	mov    rax,QWORD PTR [rdi+0x30]
  42a508:	movzx  eax,WORD PTR [rax+0xe]
  42a50c:	cmp    eax,0x3
  42a50f:	jne    42a5fc <flatcc_builder_table_add@@Base+0xfc>
  42a515:	mov    r14d,esi
  42a518:	cmp    esi,0x7ffd
  42a51e:	jae    42a61b <flatcc_builder_table_add@@Base+0x11b>
  42a524:	mov    rbx,rdi
  42a527:	cmp    WORD PTR [rdi+0xea],cx
  42a52e:	jae    42a537 <flatcc_builder_table_add@@Base+0x37>
  42a530:	mov    WORD PTR [rbx+0xea],cx
  42a537:	mov    rsi,QWORD PTR [rbx+0x8]
  42a53b:	movsxd rax,r14d
  42a53e:	cmp    WORD PTR [rsi+rax*2],0x0
  42a543:	jne    42a63a <flatcc_builder_table_add@@Base+0x13a>
  42a549:	mov    eax,DWORD PTR [rbx+0x14]
  42a54c:	xor    eax,r14d
  42a54f:	imul   eax,eax,0x9e3779b1
  42a555:	xor    eax,edx
  42a557:	imul   eax,eax,0x9e3779b1
  42a55d:	mov    DWORD PTR [rbx+0x14],eax
  42a560:	mov    eax,DWORD PTR [rbx+0x20]
  42a563:	movzx  ebp,cx
  42a566:	lea    eax,[rax+rbp*1]
  42a569:	add    eax,0xffffffff
  42a56c:	neg    ebp
  42a56e:	and    ebp,eax
  42a570:	add    edx,ebp
  42a572:	mov    DWORD PTR [rbx+0x20],edx
  42a575:	cmp    edx,DWORD PTR [rbx+0x24]
  42a578:	jb     42a5d7 <flatcc_builder_table_add@@Base+0xd7>
  42a57a:	add    edx,0x1
  42a57d:	lea    rsi,[rbx+0x68]
  42a581:	mov    rdi,QWORD PTR [rbx+0x40]
  42a585:	mov    eax,DWORD PTR [rbx+0x28]
  42a588:	add    rax,rdx
  42a58b:	mov    ecx,0x1
  42a590:	mov    r8d,0x1
  42a596:	mov    rdx,rax
  42a599:	call   QWORD PTR [rbx+0x50]
  42a59c:	test   eax,eax
  42a59e:	je     42a5a4 <flatcc_builder_table_add@@Base+0xa4>
  42a5a0:	xor    eax,eax
  42a5a2:	jmp    42a5f7 <flatcc_builder_table_add@@Base+0xf7>
  42a5a4:	mov    eax,DWORD PTR [rbx+0x28]
  42a5a7:	mov    rcx,rax
  42a5aa:	add    rcx,QWORD PTR [rbx+0x68]
  42a5ae:	mov    QWORD PTR [rbx+0x18],rcx
  42a5b2:	mov    ecx,DWORD PTR [rbx+0x70]
  42a5b5:	sub    ecx,eax
  42a5b7:	cmp    ecx,0xfffc
  42a5bd:	mov    eax,0xfffc
  42a5c2:	cmovb  eax,ecx
  42a5c5:	mov    DWORD PTR [rbx+0x24],eax
  42a5c8:	mov    rax,QWORD PTR [rbx+0x30]
  42a5cc:	mov    DWORD PTR [rax+0x4],0xfffc
  42a5d3:	mov    rsi,QWORD PTR [rbx+0x8]
  42a5d7:	mov    eax,ebp
  42a5d9:	add    ebp,0x4
  42a5dc:	movzx  ecx,r14w
  42a5e0:	mov    WORD PTR [rsi+rcx*2],bp
  42a5e4:	cmp    WORD PTR [rbx+0x10],cx
  42a5e8:	ja     42a5f3 <flatcc_builder_table_add@@Base+0xf3>
  42a5ea:	add    r14d,0x1
  42a5ee:	mov    WORD PTR [rbx+0x10],r14w
  42a5f3:	add    rax,QWORD PTR [rbx+0x18]
  42a5f7:	pop    rbx
  42a5f8:	pop    r14
  42a5fa:	pop    rbp
  42a5fb:	ret    
  42a5fc:	lea    rdi,[rip+0x1fa0e]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  42a603:	lea    rsi,[rip+0x1f1d8]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a60a:	lea    rcx,[rip+0x2002a]        # 44a63b <flatcc_builder_padding_base@@Base+0x109b>
  42a611:	mov    edx,0x6ed
  42a616:	call   4060f0 <__assert_fail@plt>
  42a61b:	lea    rdi,[rip+0x20063]        # 44a685 <flatcc_builder_padding_base@@Base+0x10e5>
  42a622:	lea    rsi,[rip+0x1f1b9]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a629:	lea    rcx,[rip+0x2000b]        # 44a63b <flatcc_builder_padding_base@@Base+0x109b>
  42a630:	mov    edx,0x6ee
  42a635:	call   4060f0 <__assert_fail@plt>
  42a63a:	lea    rdi,[rip+0x15d4a]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42a641:	lea    rsi,[rip+0x1f19a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a648:	lea    rcx,[rip+0x1ffec]        # 44a63b <flatcc_builder_padding_base@@Base+0x109b>
  42a64f:	mov    edx,0x6f8
  42a654:	call   4060f0 <__assert_fail@plt>
  42a659:	nop    DWORD PTR [rax+0x0]

000000000042a660 <flatcc_builder_table_add_union_vector@@Base>:
  42a660:	push   r15
  42a662:	push   r14
  42a664:	push   r12
  42a666:	push   rbx
  42a667:	push   rax
  42a668:	mov    rax,QWORD PTR [rdi+0x30]
  42a66c:	movzx  eax,WORD PTR [rax+0xe]
  42a670:	cmp    eax,0x3
  42a673:	jne    42a6c9 <flatcc_builder_table_add_union_vector@@Base+0x69>
  42a675:	mov    rbx,rdx
  42a678:	mov    r12,rdx
  42a67b:	shr    r12,0x20
  42a67f:	test   ebx,ebx
  42a681:	sete   al
  42a684:	test   r12d,r12d
  42a687:	sete   cl
  42a68a:	cmp    al,cl
  42a68c:	jne    42a6e8 <flatcc_builder_table_add_union_vector@@Base+0x88>
  42a68e:	test   ebx,ebx
  42a690:	je     42a6bb <flatcc_builder_table_add_union_vector@@Base+0x5b>
  42a692:	mov    r14d,esi
  42a695:	mov    r15,rdi
  42a698:	lea    esi,[r14-0x1]
  42a69c:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  42a6a1:	test   rax,rax
  42a6a4:	je     42a707 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  42a6a6:	mov    DWORD PTR [rax],ebx
  42a6a8:	mov    rdi,r15
  42a6ab:	mov    esi,r14d
  42a6ae:	call   42a3a0 <flatcc_builder_table_add_offset@@Base>
  42a6b3:	test   rax,rax
  42a6b6:	je     42a726 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  42a6b8:	mov    DWORD PTR [rax],r12d
  42a6bb:	xor    eax,eax
  42a6bd:	add    rsp,0x8
  42a6c1:	pop    rbx
  42a6c2:	pop    r12
  42a6c4:	pop    r14
  42a6c6:	pop    r15
  42a6c8:	ret    
  42a6c9:	lea    rdi,[rip+0x1f941]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  42a6d0:	lea    rsi,[rip+0x1f10b]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a6d7:	lea    rcx,[rip+0x1fcb5]        # 44a393 <flatcc_builder_padding_base@@Base+0xdf3>
  42a6de:	mov    edx,0x600
  42a6e3:	call   4060f0 <__assert_fail@plt>
  42a6e8:	lea    rdi,[rip+0x1fd07]        # 44a3f6 <flatcc_builder_padding_base@@Base+0xe56>
  42a6ef:	lea    rsi,[rip+0x1f0ec]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a6f6:	lea    rcx,[rip+0x1fc96]        # 44a393 <flatcc_builder_padding_base@@Base+0xdf3>
  42a6fd:	mov    edx,0x601
  42a702:	call   4060f0 <__assert_fail@plt>
  42a707:	lea    rdi,[rip+0x1fc6f]        # 44a37d <flatcc_builder_padding_base@@Base+0xddd>
  42a70e:	lea    rsi,[rip+0x1f0cd]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a715:	lea    rcx,[rip+0x1fc77]        # 44a393 <flatcc_builder_padding_base@@Base+0xdf3>
  42a71c:	mov    edx,0x604
  42a721:	call   4060f0 <__assert_fail@plt>
  42a726:	lea    rdi,[rip+0x1fc50]        # 44a37d <flatcc_builder_padding_base@@Base+0xddd>
  42a72d:	lea    rsi,[rip+0x1f0ae]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42a734:	lea    rcx,[rip+0x1fc58]        # 44a393 <flatcc_builder_padding_base@@Base+0xdf3>
  42a73b:	mov    edx,0x608
  42a740:	call   4060f0 <__assert_fail@plt>
  42a745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a74f:	nop

000000000042a750 <flatcc_builder_create_union_vector@@Base>:
  42a750:	push   r15
  42a752:	push   r14
  42a754:	push   r13
  42a756:	push   r12
  42a758:	push   rbx
  42a759:	mov    r14,rdx
  42a75c:	mov    r15,rsi
  42a75f:	mov    rbx,rdi
  42a762:	mov    esi,0x4
  42a767:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  42a76c:	test   eax,eax
  42a76e:	je     42a780 <flatcc_builder_create_union_vector@@Base+0x30>
  42a770:	xor    r14d,r14d
  42a773:	mov    rax,r14
  42a776:	pop    rbx
  42a777:	pop    r12
  42a779:	pop    r13
  42a77b:	pop    r14
  42a77d:	pop    r15
  42a77f:	ret    
  42a780:	mov    rax,QWORD PTR [rbx+0x30]
  42a784:	mov    DWORD PTR [rax+0x10],0x4
  42a78b:	mov    rax,QWORD PTR [rbx+0x30]
  42a78f:	mov    DWORD PTR [rax+0x14],0x0
  42a796:	mov    rax,QWORD PTR [rbx+0x30]
  42a79a:	mov    WORD PTR [rax+0xe],0x5
  42a7a0:	mov    ecx,DWORD PTR [rbx+0x28]
  42a7a3:	mov    edx,DWORD PTR [rbx+0x70]
  42a7a6:	sub    edx,ecx
  42a7a8:	add    rcx,QWORD PTR [rbx+0x68]
  42a7ac:	mov    QWORD PTR [rbx+0x18],rcx
  42a7b0:	cmp    edx,0xfffffffc
  42a7b3:	mov    ecx,0xfffffffc
  42a7b8:	cmovb  ecx,edx
  42a7bb:	mov    DWORD PTR [rbx+0x24],ecx
  42a7be:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42a7c5:	mov    ecx,DWORD PTR [rax+0x14]
  42a7c8:	add    ecx,r14d
  42a7cb:	jb     42aa3a <flatcc_builder_create_union_vector@@Base+0x2ea>
  42a7d1:	cmp    ecx,0x40000000
  42a7d7:	jae    42aa3a <flatcc_builder_create_union_vector@@Base+0x2ea>
  42a7dd:	mov    DWORD PTR [rax+0x14],ecx
  42a7e0:	mov    r12d,DWORD PTR [rbx+0x20]
  42a7e4:	mov    eax,DWORD PTR [rbx+0x24]
  42a7e7:	lea    ecx,[r12+r14*4]
  42a7eb:	mov    DWORD PTR [rbx+0x20],ecx
  42a7ee:	cmp    ecx,eax
  42a7f0:	jae    42a800 <flatcc_builder_create_union_vector@@Base+0xb0>
  42a7f2:	mov    rsi,QWORD PTR [rbx+0x18]
  42a7f6:	add    r12,rsi
  42a7f9:	jne    42a85c <flatcc_builder_create_union_vector@@Base+0x10c>
  42a7fb:	jmp    42a770 <flatcc_builder_create_union_vector@@Base+0x20>
  42a800:	add    ecx,0x1
  42a803:	lea    rsi,[rbx+0x68]
  42a807:	mov    rdi,QWORD PTR [rbx+0x40]
  42a80b:	mov    edx,DWORD PTR [rbx+0x28]
  42a80e:	add    rdx,rcx
  42a811:	mov    ecx,0x1
  42a816:	mov    r8d,0x1
  42a81c:	call   QWORD PTR [rbx+0x50]
  42a81f:	test   eax,eax
  42a821:	jne    42a770 <flatcc_builder_create_union_vector@@Base+0x20>
  42a827:	mov    eax,DWORD PTR [rbx+0x28]
  42a82a:	mov    rsi,rax
  42a82d:	add    rsi,QWORD PTR [rbx+0x68]
  42a831:	mov    QWORD PTR [rbx+0x18],rsi
  42a835:	mov    ecx,DWORD PTR [rbx+0x70]
  42a838:	sub    ecx,eax
  42a83a:	cmp    ecx,0xfffffffc
  42a83d:	mov    eax,0xfffffffc
  42a842:	cmovb  eax,ecx
  42a845:	mov    DWORD PTR [rbx+0x24],eax
  42a848:	mov    rcx,QWORD PTR [rbx+0x30]
  42a84c:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42a853:	add    r12,rsi
  42a856:	je     42a770 <flatcc_builder_create_union_vector@@Base+0x20>
  42a85c:	mov    r13d,DWORD PTR [rbx+0x20]
  42a860:	lea    ecx,[r14+r13*1]
  42a864:	mov    DWORD PTR [rbx+0x20],ecx
  42a867:	cmp    ecx,eax
  42a869:	jb     42a8be <flatcc_builder_create_union_vector@@Base+0x16e>
  42a86b:	add    ecx,0x1
  42a86e:	lea    rsi,[rbx+0x68]
  42a872:	mov    rdi,QWORD PTR [rbx+0x40]
  42a876:	mov    edx,DWORD PTR [rbx+0x28]
  42a879:	add    rdx,rcx
  42a87c:	mov    ecx,0x1
  42a881:	mov    r8d,0x1
  42a887:	call   QWORD PTR [rbx+0x50]
  42a88a:	test   eax,eax
  42a88c:	jne    42a770 <flatcc_builder_create_union_vector@@Base+0x20>
  42a892:	mov    eax,DWORD PTR [rbx+0x28]
  42a895:	mov    rsi,rax
  42a898:	add    rsi,QWORD PTR [rbx+0x68]
  42a89c:	mov    QWORD PTR [rbx+0x18],rsi
  42a8a0:	mov    ecx,DWORD PTR [rbx+0x70]
  42a8a3:	sub    ecx,eax
  42a8a5:	cmp    ecx,0xfffffffc
  42a8a8:	mov    eax,0xfffffffc
  42a8ad:	cmovb  eax,ecx
  42a8b0:	mov    DWORD PTR [rbx+0x24],eax
  42a8b3:	mov    rax,QWORD PTR [rbx+0x30]
  42a8b7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42a8be:	mov    r12,rsi
  42a8c1:	add    r12,r13
  42a8c4:	je     42a770 <flatcc_builder_create_union_vector@@Base+0x20>
  42a8ca:	test   r14,r14
  42a8cd:	je     42a989 <flatcc_builder_create_union_vector@@Base+0x239>
  42a8d3:	lea    rcx,[r14-0x1]
  42a8d7:	mov    r8d,r14d
  42a8da:	and    r8d,0x3
  42a8de:	cmp    rcx,0x3
  42a8e2:	jae    42a8f0 <flatcc_builder_create_union_vector@@Base+0x1a0>
  42a8e4:	xor    ecx,ecx
  42a8e6:	test   r8,r8
  42a8e9:	jne    42a957 <flatcc_builder_create_union_vector@@Base+0x207>
  42a8eb:	jmp    42a989 <flatcc_builder_create_union_vector@@Base+0x239>
  42a8f0:	mov    rdx,r14
  42a8f3:	sub    rdx,r8
  42a8f6:	lea    rdi,[rsi+r13*1]
  42a8fa:	add    rdi,0x3
  42a8fe:	xor    ecx,ecx
  42a900:	movzx  eax,BYTE PTR [r15+rcx*8]
  42a905:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  42a909:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42a90e:	mov    DWORD PTR [rsi+rcx*4],eax
  42a911:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  42a917:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42a91b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  42a920:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  42a924:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  42a92a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  42a92e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  42a933:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  42a937:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  42a93d:	mov    BYTE PTR [rdi+rcx*1],al
  42a940:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  42a945:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  42a949:	add    rcx,0x4
  42a94d:	cmp    rdx,rcx
  42a950:	jne    42a900 <flatcc_builder_create_union_vector@@Base+0x1b0>
  42a952:	test   r8,r8
  42a955:	je     42a989 <flatcc_builder_create_union_vector@@Base+0x239>
  42a957:	lea    rdx,[rsi+rcx*4]
  42a95b:	lea    rdi,[r15+rcx*8]
  42a95f:	add    rdi,0x4
  42a963:	add    r13,rcx
  42a966:	add    r13,rsi
  42a969:	xor    ecx,ecx
  42a96b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a970:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  42a975:	mov    BYTE PTR [r13+rcx*1+0x0],al
  42a97a:	mov    eax,DWORD PTR [rdi+rcx*8]
  42a97d:	mov    DWORD PTR [rdx+rcx*4],eax
  42a980:	add    rcx,0x1
  42a984:	cmp    r8,rcx
  42a987:	jne    42a970 <flatcc_builder_create_union_vector@@Base+0x220>
  42a989:	mov    rdi,rbx
  42a98c:	mov    rdx,r14
  42a98f:	mov    rcx,r12
  42a992:	call   429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a997:	mov    r15d,eax
  42a99a:	test   eax,eax
  42a99c:	je     42a9c2 <flatcc_builder_create_union_vector@@Base+0x272>
  42a99e:	mov    ecx,0x1
  42a9a3:	mov    r8d,0x1
  42a9a9:	mov    r9d,0xffffffff
  42a9af:	mov    rdi,rbx
  42a9b2:	mov    rsi,r12
  42a9b5:	mov    rdx,r14
  42a9b8:	call   429d20 <flatcc_builder_create_vector@@Base>
  42a9bd:	mov    r14d,eax
  42a9c0:	jmp    42a9c5 <flatcc_builder_create_union_vector@@Base+0x275>
  42a9c2:	xor    r14d,r14d
  42a9c5:	shl    r15,0x20
  42a9c9:	mov    rdi,QWORD PTR [rbx+0x18]
  42a9cd:	mov    edx,DWORD PTR [rbx+0x20]
  42a9d0:	xor    esi,esi
  42a9d2:	call   406100 <memset@plt>
  42a9d7:	mov    rax,QWORD PTR [rbx+0x30]
  42a9db:	mov    ecx,DWORD PTR [rax+0x8]
  42a9de:	mov    DWORD PTR [rbx+0x20],ecx
  42a9e1:	mov    ecx,DWORD PTR [rax]
  42a9e3:	mov    DWORD PTR [rbx+0x28],ecx
  42a9e6:	mov    edx,DWORD PTR [rax+0x4]
  42a9e9:	mov    rsi,rcx
  42a9ec:	add    rsi,QWORD PTR [rbx+0x68]
  42a9f0:	mov    QWORD PTR [rbx+0x18],rsi
  42a9f4:	mov    esi,DWORD PTR [rbx+0x70]
  42a9f7:	sub    esi,ecx
  42a9f9:	cmp    esi,edx
  42a9fb:	cmova  esi,edx
  42a9fe:	mov    DWORD PTR [rbx+0x24],esi
  42aa01:	movzx  ecx,WORD PTR [rbx+0xea]
  42aa08:	cmp    WORD PTR [rbx+0xe8],cx
  42aa0f:	jae    42aa18 <flatcc_builder_create_union_vector@@Base+0x2c8>
  42aa11:	mov    WORD PTR [rbx+0xe8],cx
  42aa18:	or     r14,r15
  42aa1b:	movzx  ecx,WORD PTR [rax+0xc]
  42aa1f:	mov    WORD PTR [rbx+0xea],cx
  42aa26:	add    rax,0xffffffffffffffdc
  42aa2a:	mov    QWORD PTR [rbx+0x30],rax
  42aa2e:	add    DWORD PTR [rbx+0x104],0xffffffff
  42aa35:	jmp    42a773 <flatcc_builder_create_union_vector@@Base+0x23>
  42aa3a:	lea    rdi,[rip+0x1fe6a]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  42aa41:	lea    rsi,[rip+0x1ed9a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42aa48:	lea    rcx,[rip+0x1fe77]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  42aa4f:	mov    edx,0x37c
  42aa54:	call   4060f0 <__assert_fail@plt>
  42aa59:	nop    DWORD PTR [rax+0x0]

000000000042aa60 <flatcc_builder_create_union_vector_direct@@Base>:
  42aa60:	push   r15
  42aa62:	push   r14
  42aa64:	push   r12
  42aa66:	push   rbx
  42aa67:	push   rax
  42aa68:	mov    r14,rcx
  42aa6b:	mov    r15,rsi
  42aa6e:	mov    r12,rdi
  42aa71:	mov    rsi,rdx
  42aa74:	mov    rdx,rcx
  42aa77:	mov    rcx,r15
  42aa7a:	call   429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42aa7f:	mov    ebx,eax
  42aa81:	test   eax,eax
  42aa83:	je     42aaa8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  42aa85:	mov    ecx,0x1
  42aa8a:	mov    r8d,0x1
  42aa90:	mov    r9d,0xffffffff
  42aa96:	mov    rdi,r12
  42aa99:	mov    rsi,r15
  42aa9c:	mov    rdx,r14
  42aa9f:	call   429d20 <flatcc_builder_create_vector@@Base>
  42aaa4:	mov    eax,eax
  42aaa6:	jmp    42aaaa <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  42aaa8:	xor    eax,eax
  42aaaa:	shl    rbx,0x20
  42aaae:	or     rbx,rax
  42aab1:	mov    rax,rbx
  42aab4:	add    rsp,0x8
  42aab8:	pop    rbx
  42aab9:	pop    r12
  42aabb:	pop    r14
  42aabd:	pop    r15
  42aabf:	ret    

000000000042aac0 <flatcc_builder_start_union_vector@@Base>:
  42aac0:	push   rbx
  42aac1:	mov    rbx,rdi
  42aac4:	mov    esi,0x4
  42aac9:	call   427f90 <flatcc_builder_start_buffer@@Base+0xe0>
  42aace:	mov    ecx,eax
  42aad0:	mov    eax,0xffffffff
  42aad5:	test   ecx,ecx
  42aad7:	je     42aadb <flatcc_builder_start_union_vector@@Base+0x1b>
  42aad9:	pop    rbx
  42aada:	ret    
  42aadb:	mov    rax,QWORD PTR [rbx+0x30]
  42aadf:	mov    DWORD PTR [rax+0x10],0x8
  42aae6:	mov    rax,QWORD PTR [rbx+0x30]
  42aaea:	mov    DWORD PTR [rax+0x14],0x0
  42aaf1:	mov    rax,QWORD PTR [rbx+0x30]
  42aaf5:	mov    WORD PTR [rax+0xe],0x7
  42aafb:	mov    ecx,DWORD PTR [rbx+0x28]
  42aafe:	mov    edx,DWORD PTR [rbx+0x70]
  42ab01:	sub    edx,ecx
  42ab03:	add    rcx,QWORD PTR [rbx+0x68]
  42ab07:	mov    QWORD PTR [rbx+0x18],rcx
  42ab0b:	cmp    edx,0xfffffffc
  42ab0e:	mov    ecx,0xfffffffc
  42ab13:	cmovb  ecx,edx
  42ab16:	mov    DWORD PTR [rbx+0x24],ecx
  42ab19:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42ab20:	xor    eax,eax
  42ab22:	pop    rbx
  42ab23:	ret    
  42ab24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab2e:	xchg   ax,ax

000000000042ab30 <flatcc_builder_end_union_vector@@Base>:
  42ab30:	push   rbp
  42ab31:	push   r15
  42ab33:	push   r14
  42ab35:	push   r13
  42ab37:	push   r12
  42ab39:	push   rbx
  42ab3a:	push   rax
  42ab3b:	mov    rax,QWORD PTR [rdi+0x30]
  42ab3f:	movzx  ecx,WORD PTR [rax+0xe]
  42ab43:	cmp    ecx,0x7
  42ab46:	jne    42af46 <flatcc_builder_end_union_vector@@Base+0x416>
  42ab4c:	mov    r13,rdi
  42ab4f:	mov    r14d,DWORD PTR [rax+0x14]
  42ab53:	lea    eax,[r14+r14*4]
  42ab57:	mov    r12d,DWORD PTR [rdi+0x20]
  42ab5b:	add    eax,r12d
  42ab5e:	mov    DWORD PTR [rdi+0x20],eax
  42ab61:	cmp    eax,DWORD PTR [rdi+0x24]
  42ab64:	jae    42ab6c <flatcc_builder_end_union_vector@@Base+0x3c>
  42ab66:	mov    r8,QWORD PTR [r13+0x18]
  42ab6a:	jmp    42abc4 <flatcc_builder_end_union_vector@@Base+0x94>
  42ab6c:	add    eax,0x1
  42ab6f:	lea    rsi,[r13+0x68]
  42ab73:	mov    rdi,QWORD PTR [r13+0x40]
  42ab77:	mov    edx,DWORD PTR [r13+0x28]
  42ab7b:	add    rdx,rax
  42ab7e:	mov    ecx,0x1
  42ab83:	mov    r8d,0x1
  42ab89:	call   QWORD PTR [r13+0x50]
  42ab8d:	test   eax,eax
  42ab8f:	jne    42ad06 <flatcc_builder_end_union_vector@@Base+0x1d6>
  42ab95:	mov    eax,DWORD PTR [r13+0x28]
  42ab99:	mov    r8,rax
  42ab9c:	add    r8,QWORD PTR [r13+0x68]
  42aba0:	mov    QWORD PTR [r13+0x18],r8
  42aba4:	mov    ecx,DWORD PTR [r13+0x70]
  42aba8:	sub    ecx,eax
  42abaa:	cmp    ecx,0xfffffffc
  42abad:	mov    eax,0xfffffffc
  42abb2:	cmovb  eax,ecx
  42abb5:	mov    DWORD PTR [r13+0x24],eax
  42abb9:	mov    rax,QWORD PTR [r13+0x30]
  42abbd:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42abc4:	mov    rsi,r8
  42abc7:	add    rsi,r12
  42abca:	je     42ad06 <flatcc_builder_end_union_vector@@Base+0x1d6>
  42abd0:	lea    r15,[rsi+r14*4]
  42abd4:	test   r14d,r14d
  42abd7:	je     42acca <flatcc_builder_end_union_vector@@Base+0x19a>
  42abdd:	cmp    r14d,0x9
  42abe1:	jae    42ad9a <flatcc_builder_end_union_vector@@Base+0x26a>
  42abe7:	xor    r9d,r9d
  42abea:	mov    r11d,r14d
  42abed:	sub    r11d,r9d
  42abf0:	mov    r10,r9
  42abf3:	not    r10
  42abf6:	add    r10,r14
  42abf9:	and    r11,0x3
  42abfd:	je     42ac42 <flatcc_builder_end_union_vector@@Base+0x112>
  42abff:	mov    rdx,r9
  42ac02:	neg    rdx
  42ac05:	lea    rbp,[r12+r9*4]
  42ac09:	add    rbp,r8
  42ac0c:	lea    rbx,[r8+r9*8]
  42ac10:	add    rbx,0x4
  42ac14:	lea    rax,[r9+r14*4]
  42ac18:	add    rax,r12
  42ac1b:	add    rax,r8
  42ac1e:	xor    edi,edi
  42ac20:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  42ac25:	mov    BYTE PTR [rax+rdi*1],cl
  42ac28:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42ac2b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42ac2f:	add    rdx,0xffffffffffffffff
  42ac33:	add    rdi,0x1
  42ac37:	cmp    r11,rdi
  42ac3a:	jne    42ac20 <flatcc_builder_end_union_vector@@Base+0xf0>
  42ac3c:	neg    rdx
  42ac3f:	mov    r9,rdx
  42ac42:	cmp    r10,0x3
  42ac46:	jb     42acca <flatcc_builder_end_union_vector@@Base+0x19a>
  42ac4c:	mov    rbp,r14
  42ac4f:	sub    rbp,r9
  42ac52:	lea    rcx,[r12+r9*4]
  42ac56:	lea    rdx,[r8+rcx*1]
  42ac5a:	add    rdx,0xc
  42ac5e:	lea    rdi,[r8+r9*8]
  42ac62:	add    rdi,0x1c
  42ac66:	lea    rcx,[r9+r14*4]
  42ac6a:	add    rcx,r12
  42ac6d:	add    rcx,r8
  42ac70:	add    rcx,0x3
  42ac74:	xor    ebx,ebx
  42ac76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac80:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  42ac85:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  42ac89:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  42ac8d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  42ac91:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  42ac96:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  42ac9a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  42ac9e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  42aca2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  42aca7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  42acab:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  42acaf:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  42acb3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  42acb8:	mov    BYTE PTR [rcx+rbx*1],al
  42acbb:	mov    eax,DWORD PTR [rdi+rbx*8]
  42acbe:	mov    DWORD PTR [rdx+rbx*4],eax
  42acc1:	add    rbx,0x4
  42acc5:	cmp    rbp,rbx
  42acc8:	jne    42ac80 <flatcc_builder_end_union_vector@@Base+0x150>
  42acca:	mov    rdi,r13
  42accd:	mov    rdx,r14
  42acd0:	mov    rcx,r15
  42acd3:	vzeroupper 
  42acd6:	call   429fa0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42acdb:	mov    r12d,eax
  42acde:	test   eax,eax
  42ace0:	je     42ad0b <flatcc_builder_end_union_vector@@Base+0x1db>
  42ace2:	mov    ecx,0x1
  42ace7:	mov    r8d,0x1
  42aced:	mov    r9d,0xffffffff
  42acf3:	mov    rdi,r13
  42acf6:	mov    rsi,r15
  42acf9:	mov    rdx,r14
  42acfc:	call   429d20 <flatcc_builder_create_vector@@Base>
  42ad01:	mov    r14d,eax
  42ad04:	jmp    42ad0e <flatcc_builder_end_union_vector@@Base+0x1de>
  42ad06:	xor    r14d,r14d
  42ad09:	jmp    42ad88 <flatcc_builder_end_union_vector@@Base+0x258>
  42ad0b:	xor    r14d,r14d
  42ad0e:	shl    r12,0x20
  42ad12:	mov    rdi,QWORD PTR [r13+0x18]
  42ad16:	mov    edx,DWORD PTR [r13+0x20]
  42ad1a:	xor    esi,esi
  42ad1c:	call   406100 <memset@plt>
  42ad21:	mov    rax,QWORD PTR [r13+0x30]
  42ad25:	mov    ecx,DWORD PTR [rax+0x8]
  42ad28:	mov    DWORD PTR [r13+0x20],ecx
  42ad2c:	mov    ecx,DWORD PTR [rax]
  42ad2e:	mov    DWORD PTR [r13+0x28],ecx
  42ad32:	mov    edx,DWORD PTR [rax+0x4]
  42ad35:	mov    rsi,rcx
  42ad38:	add    rsi,QWORD PTR [r13+0x68]
  42ad3c:	mov    QWORD PTR [r13+0x18],rsi
  42ad40:	mov    esi,DWORD PTR [r13+0x70]
  42ad44:	sub    esi,ecx
  42ad46:	cmp    esi,edx
  42ad48:	cmova  esi,edx
  42ad4b:	mov    DWORD PTR [r13+0x24],esi
  42ad4f:	movzx  ecx,WORD PTR [r13+0xea]
  42ad57:	cmp    WORD PTR [r13+0xe8],cx
  42ad5f:	jae    42ad69 <flatcc_builder_end_union_vector@@Base+0x239>
  42ad61:	mov    WORD PTR [r13+0xe8],cx
  42ad69:	or     r14,r12
  42ad6c:	movzx  ecx,WORD PTR [rax+0xc]
  42ad70:	mov    WORD PTR [r13+0xea],cx
  42ad78:	add    rax,0xffffffffffffffdc
  42ad7c:	mov    QWORD PTR [r13+0x30],rax
  42ad80:	add    DWORD PTR [r13+0x104],0xffffffff
  42ad88:	mov    rax,r14
  42ad8b:	add    rsp,0x8
  42ad8f:	pop    rbx
  42ad90:	pop    r12
  42ad92:	pop    r13
  42ad94:	pop    r14
  42ad96:	pop    r15
  42ad98:	pop    rbp
  42ad99:	ret    
  42ad9a:	lea    rax,[r14-0x1]
  42ad9e:	mov    ecx,0x8
  42ada3:	mul    rcx
  42ada6:	seto   cl
  42ada9:	lea    rdi,[r8+0x4]
  42adad:	mov    rdx,rax
  42adb0:	add    rdx,rdi
  42adb3:	setb   dl
  42adb6:	xor    r9d,r9d
  42adb9:	add    rax,r8
  42adbc:	jb     42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42adc2:	test   cl,cl
  42adc4:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42adca:	test   dl,dl
  42adcc:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42add2:	test   cl,cl
  42add4:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42adda:	lea    rcx,[r14+r14*4]
  42adde:	add    rcx,r12
  42ade1:	add    rcx,r8
  42ade4:	lea    rdx,[r8+r14*8]
  42ade8:	add    rdx,0xfffffffffffffff9
  42adec:	cmp    rdx,r15
  42adef:	seta   r11b
  42adf3:	lea    rbx,[r8+r14*8]
  42adf7:	cmp    r8,rcx
  42adfa:	setb   r10b
  42adfe:	cmp    rbx,r15
  42ae01:	seta   al
  42ae04:	cmp    rdi,rcx
  42ae07:	setb   bpl
  42ae0b:	cmp    rsi,rdx
  42ae0e:	setb   cl
  42ae11:	cmp    r8,r15
  42ae14:	setb   BYTE PTR [rsp+0x7]
  42ae19:	cmp    rsi,rbx
  42ae1c:	setb   dl
  42ae1f:	cmp    rdi,r15
  42ae22:	setb   dil
  42ae26:	xor    r9d,r9d
  42ae29:	test   r11b,r10b
  42ae2c:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42ae32:	and    al,bpl
  42ae35:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42ae3b:	and    cl,BYTE PTR [rsp+0x7]
  42ae3f:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42ae45:	and    dl,dil
  42ae48:	jne    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42ae4e:	mov    eax,r14d
  42ae51:	and    eax,0x7
  42ae54:	test   rax,rax
  42ae57:	mov    ecx,0x8
  42ae5c:	cmovne rcx,rax
  42ae60:	mov    r9,r14
  42ae63:	sub    r9,rcx
  42ae66:	vmovdqa ymm0,YMMWORD PTR [rip+0x16df2]        # 441c60 <_IO_stdin_used@@Base+0x13c60>
  42ae6e:	vmovdqa ymm1,YMMWORD PTR [rip+0x16e0a]        # 441c80 <_IO_stdin_used@@Base+0x13c80>
  42ae76:	xor    eax,eax
  42ae78:	vmovdqa xmm8,XMMWORD PTR [rip+0x1e920]        # 4497a0 <flatcc_builder_padding_base@@Base+0x200>
  42ae80:	vmovdqa xmm9,XMMWORD PTR [rip+0x1e928]        # 4497b0 <flatcc_builder_padding_base@@Base+0x210>
  42ae88:	vpbroadcastq ymm4,QWORD PTR [rip+0x1e92f]        # 4497c0 <flatcc_builder_padding_base@@Base+0x220>
  42ae91:	vpbroadcastq ymm5,QWORD PTR [rip+0x1e92e]        # 4497c8 <flatcc_builder_padding_base@@Base+0x228>
  42ae9a:	mov    rdi,r8
  42ae9d:	nop    DWORD PTR [rax]
  42aea0:	vmovdqu ymm6,YMMWORD PTR [rdi]
  42aea4:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  42aea9:	vextracti128 xmm2,ymm7,0x1
  42aeaf:	vpshufb xmm2,xmm2,xmm8
  42aeb4:	vpshufb xmm7,xmm7,xmm8
  42aeb9:	vpunpcklwd xmm2,xmm7,xmm2
  42aebd:	vextracti128 xmm7,ymm6,0x1
  42aec3:	vpshufb xmm7,xmm7,xmm9
  42aec8:	vpshufb xmm6,xmm6,xmm9
  42aecd:	vpunpcklwd xmm6,xmm6,xmm7
  42aed1:	vpblendd xmm2,xmm6,xmm2,0x2
  42aed7:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42aedd:	vpsllq ymm2,ymm1,0x3
  42aee2:	vmovq  xmm6,r8
  42aee7:	vpbroadcastq ymm6,xmm6
  42aeec:	vpaddq ymm2,ymm6,ymm2
  42aef0:	vpaddq ymm2,ymm2,ymm4
  42aef4:	vpsllq ymm7,ymm0,0x3
  42aef9:	vpaddq ymm6,ymm6,ymm7
  42aefd:	vpaddq ymm6,ymm6,ymm4
  42af01:	vpcmpeqd xmm7,xmm7,xmm7
  42af05:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  42af0f:	vpcmpeqd xmm6,xmm6,xmm6
  42af13:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  42af1d:	vinserti128 ymm2,ymm7,xmm3,0x1
  42af23:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  42af28:	add    rax,0x8
  42af2c:	vpaddq ymm1,ymm1,ymm5
  42af30:	vpaddq ymm0,ymm0,ymm5
  42af34:	add    rdi,0x40
  42af38:	cmp    r9,rax
  42af3b:	jne    42aea0 <flatcc_builder_end_union_vector@@Base+0x370>
  42af41:	jmp    42abea <flatcc_builder_end_union_vector@@Base+0xba>
  42af46:	lea    rdi,[rip+0x1f4d1]        # 44a41e <flatcc_builder_padding_base@@Base+0xe7e>
  42af4d:	lea    rsi,[rip+0x1e88e]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42af54:	lea    rcx,[rip+0x1f4f5]        # 44a450 <flatcc_builder_padding_base@@Base+0xeb0>
  42af5b:	mov    edx,0x651
  42af60:	call   4060f0 <__assert_fail@plt>
  42af65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af6f:	nop

000000000042af70 <flatcc_builder_union_vector_count@@Base>:
  42af70:	mov    rax,QWORD PTR [rdi+0x30]
  42af74:	mov    eax,DWORD PTR [rax+0x14]
  42af77:	ret    
  42af78:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042af80 <flatcc_builder_union_vector_edit@@Base>:
  42af80:	mov    rax,QWORD PTR [rdi+0x18]
  42af84:	ret    
  42af85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af8f:	nop

000000000042af90 <flatcc_builder_extend_union_vector@@Base>:
  42af90:	push   r14
  42af92:	push   rbx
  42af93:	push   rax
  42af94:	mov    rax,QWORD PTR [rdi+0x30]
  42af98:	mov    ecx,DWORD PTR [rax+0x14]
  42af9b:	add    ecx,esi
  42af9d:	jb     42b025 <flatcc_builder_extend_union_vector@@Base+0x95>
  42afa3:	cmp    ecx,0x20000000
  42afa9:	jae    42b025 <flatcc_builder_extend_union_vector@@Base+0x95>
  42afab:	mov    rbx,rdi
  42afae:	mov    DWORD PTR [rax+0x14],ecx
  42afb1:	mov    r14d,DWORD PTR [rdi+0x20]
  42afb5:	lea    eax,[r14+rsi*8]
  42afb9:	mov    DWORD PTR [rdi+0x20],eax
  42afbc:	cmp    eax,DWORD PTR [rdi+0x24]
  42afbf:	jae    42afc7 <flatcc_builder_extend_union_vector@@Base+0x37>
  42afc1:	mov    rax,QWORD PTR [rbx+0x18]
  42afc5:	jmp    42b01a <flatcc_builder_extend_union_vector@@Base+0x8a>
  42afc7:	add    eax,0x1
  42afca:	lea    rsi,[rbx+0x68]
  42afce:	mov    rdi,QWORD PTR [rbx+0x40]
  42afd2:	mov    edx,DWORD PTR [rbx+0x28]
  42afd5:	add    rdx,rax
  42afd8:	mov    ecx,0x1
  42afdd:	mov    r8d,0x1
  42afe3:	call   QWORD PTR [rbx+0x50]
  42afe6:	test   eax,eax
  42afe8:	je     42afee <flatcc_builder_extend_union_vector@@Base+0x5e>
  42afea:	xor    eax,eax
  42afec:	jmp    42b01d <flatcc_builder_extend_union_vector@@Base+0x8d>
  42afee:	mov    ecx,DWORD PTR [rbx+0x28]
  42aff1:	mov    rax,rcx
  42aff4:	add    rax,QWORD PTR [rbx+0x68]
  42aff8:	mov    QWORD PTR [rbx+0x18],rax
  42affc:	mov    edx,DWORD PTR [rbx+0x70]
  42afff:	sub    edx,ecx
  42b001:	cmp    edx,0xfffffffc
  42b004:	mov    ecx,0xfffffffc
  42b009:	cmovb  ecx,edx
  42b00c:	mov    DWORD PTR [rbx+0x24],ecx
  42b00f:	mov    rcx,QWORD PTR [rbx+0x30]
  42b013:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42b01a:	add    rax,r14
  42b01d:	add    rsp,0x8
  42b021:	pop    rbx
  42b022:	pop    r14
  42b024:	ret    
  42b025:	lea    rdi,[rip+0x1f87f]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  42b02c:	lea    rsi,[rip+0x1e7af]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b033:	lea    rcx,[rip+0x1f88c]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  42b03a:	mov    edx,0x37c
  42b03f:	call   4060f0 <__assert_fail@plt>
  42b044:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b04e:	xchg   ax,ax

000000000042b050 <flatcc_builder_truncate_union_vector@@Base>:
  42b050:	push   rax
  42b051:	mov    rcx,QWORD PTR [rdi+0x30]
  42b055:	movzx  edx,WORD PTR [rcx+0xe]
  42b059:	cmp    edx,0x7
  42b05c:	jne    42b090 <flatcc_builder_truncate_union_vector@@Base+0x40>
  42b05e:	mov    rax,rsi
  42b061:	mov    edx,DWORD PTR [rcx+0x14]
  42b064:	sub    edx,eax
  42b066:	jb     42b0af <flatcc_builder_truncate_union_vector@@Base+0x5f>
  42b068:	mov    DWORD PTR [rcx+0x14],edx
  42b06b:	mov    rcx,QWORD PTR [rdi+0x30]
  42b06f:	imul   eax,DWORD PTR [rcx+0x10]
  42b073:	mov    ecx,DWORD PTR [rdi+0x20]
  42b076:	sub    ecx,eax
  42b078:	mov    DWORD PTR [rdi+0x20],ecx
  42b07b:	add    rcx,QWORD PTR [rdi+0x18]
  42b07f:	xor    esi,esi
  42b081:	mov    rdi,rcx
  42b084:	mov    rdx,rax
  42b087:	call   406100 <memset@plt>
  42b08c:	xor    eax,eax
  42b08e:	pop    rcx
  42b08f:	ret    
  42b090:	lea    rdi,[rip+0x1f387]        # 44a41e <flatcc_builder_padding_base@@Base+0xe7e>
  42b097:	lea    rsi,[rip+0x1e744]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b09e:	lea    rcx,[rip+0x1f3fe]        # 44a4a3 <flatcc_builder_padding_base@@Base+0xf03>
  42b0a5:	mov    edx,0x681
  42b0aa:	call   4060f0 <__assert_fail@plt>
  42b0af:	lea    rdi,[rip+0x1edcc]        # 449e82 <flatcc_builder_padding_base@@Base+0x8e2>
  42b0b6:	lea    rsi,[rip+0x1e725]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b0bd:	lea    rcx,[rip+0x1f3df]        # 44a4a3 <flatcc_builder_padding_base@@Base+0xf03>
  42b0c4:	mov    edx,0x682
  42b0c9:	call   4060f0 <__assert_fail@plt>
  42b0ce:	xchg   ax,ax

000000000042b0d0 <flatcc_builder_union_vector_push@@Base>:
  42b0d0:	push   r15
  42b0d2:	push   r14
  42b0d4:	push   rbx
  42b0d5:	mov    rax,QWORD PTR [rdi+0x30]
  42b0d9:	movzx  ecx,WORD PTR [rax+0xe]
  42b0dd:	cmp    ecx,0x7
  42b0e0:	jne    42b17a <flatcc_builder_union_vector_push@@Base+0xaa>
  42b0e6:	mov    ecx,DWORD PTR [rax+0x14]
  42b0e9:	cmp    ecx,0x1fffffff
  42b0ef:	je     42b13c <flatcc_builder_union_vector_push@@Base+0x6c>
  42b0f1:	mov    r14,rsi
  42b0f4:	mov    rbx,rdi
  42b0f7:	add    ecx,0x1
  42b0fa:	mov    DWORD PTR [rax+0x14],ecx
  42b0fd:	mov    r15d,DWORD PTR [rdi+0x20]
  42b101:	lea    eax,[r15+0x8]
  42b105:	mov    DWORD PTR [rdi+0x20],eax
  42b108:	cmp    eax,DWORD PTR [rdi+0x24]
  42b10b:	jae    42b118 <flatcc_builder_union_vector_push@@Base+0x48>
  42b10d:	mov    rax,QWORD PTR [rbx+0x18]
  42b111:	add    rax,r15
  42b114:	jne    42b171 <flatcc_builder_union_vector_push@@Base+0xa1>
  42b116:	jmp    42b13c <flatcc_builder_union_vector_push@@Base+0x6c>
  42b118:	lea    eax,[r15+0x9]
  42b11c:	lea    rsi,[rbx+0x68]
  42b120:	mov    rdi,QWORD PTR [rbx+0x40]
  42b124:	mov    edx,DWORD PTR [rbx+0x28]
  42b127:	add    rdx,rax
  42b12a:	mov    ecx,0x1
  42b12f:	mov    r8d,0x1
  42b135:	call   QWORD PTR [rbx+0x50]
  42b138:	test   eax,eax
  42b13a:	je     42b140 <flatcc_builder_union_vector_push@@Base+0x70>
  42b13c:	xor    eax,eax
  42b13e:	jmp    42b174 <flatcc_builder_union_vector_push@@Base+0xa4>
  42b140:	mov    ecx,DWORD PTR [rbx+0x28]
  42b143:	mov    rax,rcx
  42b146:	add    rax,QWORD PTR [rbx+0x68]
  42b14a:	mov    QWORD PTR [rbx+0x18],rax
  42b14e:	mov    edx,DWORD PTR [rbx+0x70]
  42b151:	sub    edx,ecx
  42b153:	cmp    edx,0xfffffffc
  42b156:	mov    ecx,0xfffffffc
  42b15b:	cmovb  ecx,edx
  42b15e:	mov    DWORD PTR [rbx+0x24],ecx
  42b161:	mov    rcx,QWORD PTR [rbx+0x30]
  42b165:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42b16c:	add    rax,r15
  42b16f:	je     42b13c <flatcc_builder_union_vector_push@@Base+0x6c>
  42b171:	mov    QWORD PTR [rax],r14
  42b174:	pop    rbx
  42b175:	pop    r14
  42b177:	pop    r15
  42b179:	ret    
  42b17a:	lea    rdi,[rip+0x1f29d]        # 44a41e <flatcc_builder_padding_base@@Base+0xe7e>
  42b181:	lea    rsi,[rip+0x1e65a]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b188:	lea    rcx,[rip+0x1f359]        # 44a4e8 <flatcc_builder_padding_base@@Base+0xf48>
  42b18f:	mov    edx,0x68d
  42b194:	call   4060f0 <__assert_fail@plt>
  42b199:	nop    DWORD PTR [rax+0x0]

000000000042b1a0 <flatcc_builder_append_union_vector@@Base>:
  42b1a0:	push   r15
  42b1a2:	push   r14
  42b1a4:	push   r13
  42b1a6:	push   r12
  42b1a8:	push   rbx
  42b1a9:	mov    rax,QWORD PTR [rdi+0x30]
  42b1ad:	movzx  ecx,WORD PTR [rax+0xe]
  42b1b1:	cmp    ecx,0x7
  42b1b4:	jne    42b291 <flatcc_builder_append_union_vector@@Base+0xf1>
  42b1ba:	mov    r15,rdx
  42b1bd:	mov    ecx,DWORD PTR [rax+0x14]
  42b1c0:	add    ecx,r15d
  42b1c3:	jb     42b272 <flatcc_builder_append_union_vector@@Base+0xd2>
  42b1c9:	cmp    ecx,0x20000000
  42b1cf:	jae    42b272 <flatcc_builder_append_union_vector@@Base+0xd2>
  42b1d5:	mov    r14,rsi
  42b1d8:	mov    rbx,rdi
  42b1db:	mov    DWORD PTR [rax+0x14],ecx
  42b1de:	mov    r13d,DWORD PTR [rdi+0x20]
  42b1e2:	lea    eax,[r13+r15*8+0x0]
  42b1e7:	mov    DWORD PTR [rdi+0x20],eax
  42b1ea:	cmp    eax,DWORD PTR [rdi+0x24]
  42b1ed:	jae    42b1fa <flatcc_builder_append_union_vector@@Base+0x5a>
  42b1ef:	mov    r12,QWORD PTR [rbx+0x18]
  42b1f3:	add    r12,r13
  42b1f6:	jne    42b253 <flatcc_builder_append_union_vector@@Base+0xb3>
  42b1f8:	jmp    42b21d <flatcc_builder_append_union_vector@@Base+0x7d>
  42b1fa:	add    eax,0x1
  42b1fd:	lea    rsi,[rbx+0x68]
  42b201:	mov    rdi,QWORD PTR [rbx+0x40]
  42b205:	mov    edx,DWORD PTR [rbx+0x28]
  42b208:	add    rdx,rax
  42b20b:	mov    ecx,0x1
  42b210:	mov    r8d,0x1
  42b216:	call   QWORD PTR [rbx+0x50]
  42b219:	test   eax,eax
  42b21b:	je     42b222 <flatcc_builder_append_union_vector@@Base+0x82>
  42b21d:	xor    r12d,r12d
  42b220:	jmp    42b265 <flatcc_builder_append_union_vector@@Base+0xc5>
  42b222:	mov    eax,DWORD PTR [rbx+0x28]
  42b225:	mov    r12,rax
  42b228:	add    r12,QWORD PTR [rbx+0x68]
  42b22c:	mov    QWORD PTR [rbx+0x18],r12
  42b230:	mov    ecx,DWORD PTR [rbx+0x70]
  42b233:	sub    ecx,eax
  42b235:	cmp    ecx,0xfffffffc
  42b238:	mov    eax,0xfffffffc
  42b23d:	cmovb  eax,ecx
  42b240:	mov    DWORD PTR [rbx+0x24],eax
  42b243:	mov    rax,QWORD PTR [rbx+0x30]
  42b247:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b24e:	add    r12,r13
  42b251:	je     42b21d <flatcc_builder_append_union_vector@@Base+0x7d>
  42b253:	shl    r15d,0x3
  42b257:	mov    edx,r15d
  42b25a:	mov    rdi,r12
  42b25d:	mov    rsi,r14
  42b260:	call   406190 <memcpy@plt>
  42b265:	mov    rax,r12
  42b268:	pop    rbx
  42b269:	pop    r12
  42b26b:	pop    r13
  42b26d:	pop    r14
  42b26f:	pop    r15
  42b271:	ret    
  42b272:	lea    rdi,[rip+0x1f632]        # 44a8ab <flatcc_builder_padding_base@@Base+0x130b>
  42b279:	lea    rsi,[rip+0x1e562]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b280:	lea    rcx,[rip+0x1f63f]        # 44a8c6 <flatcc_builder_padding_base@@Base+0x1326>
  42b287:	mov    edx,0x37c
  42b28c:	call   4060f0 <__assert_fail@plt>
  42b291:	lea    rdi,[rip+0x1f186]        # 44a41e <flatcc_builder_padding_base@@Base+0xe7e>
  42b298:	lea    rsi,[rip+0x1e543]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b29f:	lea    rcx,[rip+0x1f2af]        # 44a555 <flatcc_builder_padding_base@@Base+0xfb5>
  42b2a6:	mov    edx,0x69c
  42b2ab:	call   4060f0 <__assert_fail@plt>

000000000042b2b0 <flatcc_builder_create_string@@Base>:
  42b2b0:	push   rbp
  42b2b1:	push   rbx
  42b2b2:	sub    rsp,0x98
  42b2b9:	xor    ebp,ebp
  42b2bb:	mov    rax,rdx
  42b2be:	shr    rax,0x20
  42b2c2:	jne    42b398 <flatcc_builder_create_string@@Base+0xe8>
  42b2c8:	mov    rbx,rdi
  42b2cb:	mov    DWORD PTR [rsp+0x4],edx
  42b2cf:	mov    ebp,DWORD PTR [rdi+0xf0]
  42b2d5:	mov    eax,edx
  42b2d7:	not    eax
  42b2d9:	add    eax,ebp
  42b2db:	and    eax,0x3
  42b2de:	add    eax,0x1
  42b2e1:	mov    QWORD PTR [rsp+0x8],0x4
  42b2ea:	lea    rcx,[rsp+0x4]
  42b2ef:	mov    QWORD PTR [rsp+0x18],rcx
  42b2f4:	mov    QWORD PTR [rsp+0x20],0x4
  42b2fd:	mov    DWORD PTR [rsp+0x10],0x1
  42b305:	test   rdx,rdx
  42b308:	je     42b32c <flatcc_builder_create_string@@Base+0x7c>
  42b30a:	lea    rcx,[rdx+0x4]
  42b30e:	mov    QWORD PTR [rsp+0x8],rcx
  42b313:	mov    QWORD PTR [rsp+0x28],rsi
  42b318:	mov    QWORD PTR [rsp+0x30],rdx
  42b31d:	mov    DWORD PTR [rsp+0x10],0x2
  42b325:	mov    edx,0x2
  42b32a:	jmp    42b336 <flatcc_builder_create_string@@Base+0x86>
  42b32c:	mov    edx,0x1
  42b331:	mov    ecx,0x4
  42b336:	mov    esi,eax
  42b338:	lea    r8,[rcx+rsi*1]
  42b33c:	mov    QWORD PTR [rsp+0x8],r8
  42b341:	mov    eax,edx
  42b343:	shl    rax,0x4
  42b347:	lea    rdi,[rip+0x1e252]        # 4495a0 <flatcc_builder_padding_base@@Base>
  42b34e:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  42b353:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  42b358:	add    edx,0x1
  42b35b:	mov    DWORD PTR [rsp+0x10],edx
  42b35f:	cmp    r8,0x11
  42b363:	setb   al
  42b366:	add    rcx,rsi
  42b369:	add    rcx,0xfffffffffffffff0
  42b36d:	shr    rcx,0x20
  42b371:	sete   cl
  42b374:	test   r8d,r8d
  42b377:	jle    42b3a4 <flatcc_builder_create_string@@Base+0xf4>
  42b379:	or     al,cl
  42b37b:	je     42b3a4 <flatcc_builder_create_string@@Base+0xf4>
  42b37d:	sub    ebp,r8d
  42b380:	mov    rdi,QWORD PTR [rbx+0x38]
  42b384:	lea    rsi,[rsp+0x18]
  42b389:	mov    ecx,ebp
  42b38b:	call   QWORD PTR [rbx+0x48]
  42b38e:	test   eax,eax
  42b390:	jne    42b3c3 <flatcc_builder_create_string@@Base+0x113>
  42b392:	mov    DWORD PTR [rbx+0xf0],ebp
  42b398:	mov    eax,ebp
  42b39a:	add    rsp,0x98
  42b3a1:	pop    rbx
  42b3a2:	pop    rbp
  42b3a3:	ret    
  42b3a4:	lea    rdi,[rip+0x14fe0]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42b3ab:	lea    rsi,[rip+0x1e430]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b3b2:	lea    rcx,[rip+0x1f4a8]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  42b3b9:	mov    edx,0x287
  42b3be:	call   4060f0 <__assert_fail@plt>
  42b3c3:	lea    rdi,[rip+0x14fc1]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42b3ca:	lea    rsi,[rip+0x1e411]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b3d1:	lea    rcx,[rip+0x1f489]        # 44a861 <flatcc_builder_padding_base@@Base+0x12c1>
  42b3d8:	mov    edx,0x28b
  42b3dd:	call   4060f0 <__assert_fail@plt>
  42b3e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3ec:	nop    DWORD PTR [rax+0x0]

000000000042b3f0 <flatcc_builder_create_string_str@@Base>:
  42b3f0:	push   r14
  42b3f2:	push   rbx
  42b3f3:	push   rax
  42b3f4:	mov    rbx,rsi
  42b3f7:	mov    r14,rdi
  42b3fa:	mov    rdi,rsi
  42b3fd:	call   4060d0 <strlen@plt>
  42b402:	mov    rdi,r14
  42b405:	mov    rsi,rbx
  42b408:	mov    rdx,rax
  42b40b:	add    rsp,0x8
  42b40f:	pop    rbx
  42b410:	pop    r14
  42b412:	jmp    42b2b0 <flatcc_builder_create_string@@Base>
  42b417:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b420 <flatcc_builder_create_string_strn@@Base>:
  42b420:	push   r15
  42b422:	push   r14
  42b424:	push   rbx
  42b425:	mov    rbx,rdx
  42b428:	mov    r14,rsi
  42b42b:	mov    r15,rdi
  42b42e:	xor    esi,esi
  42b430:	mov    rdi,r14
  42b433:	call   406120 <memchr@plt>
  42b438:	mov    rcx,rax
  42b43b:	sub    rcx,r14
  42b43e:	test   rax,rax
  42b441:	cmovne rbx,rcx
  42b445:	mov    rdi,r15
  42b448:	mov    rsi,r14
  42b44b:	mov    rdx,rbx
  42b44e:	pop    rbx
  42b44f:	pop    r14
  42b451:	pop    r15
  42b453:	jmp    42b2b0 <flatcc_builder_create_string@@Base>
  42b458:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b460 <flatcc_builder_end_string@@Base>:
  42b460:	push   rbp
  42b461:	push   rbx
  42b462:	push   rax
  42b463:	mov    rax,QWORD PTR [rdi+0x30]
  42b467:	movzx  ecx,WORD PTR [rax+0xe]
  42b46b:	cmp    ecx,0x6
  42b46e:	jne    42b507 <flatcc_builder_end_string@@Base+0xa7>
  42b474:	mov    rbx,rdi
  42b477:	mov    edx,DWORD PTR [rax+0x14]
  42b47a:	cmp    edx,DWORD PTR [rdi+0x20]
  42b47d:	jne    42b526 <flatcc_builder_end_string@@Base+0xc6>
  42b483:	mov    rsi,QWORD PTR [rbx+0x18]
  42b487:	mov    rdi,rbx
  42b48a:	call   42b2b0 <flatcc_builder_create_string@@Base>
  42b48f:	mov    ebp,eax
  42b491:	test   eax,eax
  42b493:	je     42b4fe <flatcc_builder_end_string@@Base+0x9e>
  42b495:	mov    rdi,QWORD PTR [rbx+0x18]
  42b499:	mov    edx,DWORD PTR [rbx+0x20]
  42b49c:	xor    esi,esi
  42b49e:	call   406100 <memset@plt>
  42b4a3:	mov    rax,QWORD PTR [rbx+0x30]
  42b4a7:	mov    ecx,DWORD PTR [rax+0x8]
  42b4aa:	mov    DWORD PTR [rbx+0x20],ecx
  42b4ad:	mov    ecx,DWORD PTR [rax]
  42b4af:	mov    DWORD PTR [rbx+0x28],ecx
  42b4b2:	mov    edx,DWORD PTR [rax+0x4]
  42b4b5:	mov    rsi,rcx
  42b4b8:	add    rsi,QWORD PTR [rbx+0x68]
  42b4bc:	mov    QWORD PTR [rbx+0x18],rsi
  42b4c0:	mov    esi,DWORD PTR [rbx+0x70]
  42b4c3:	sub    esi,ecx
  42b4c5:	cmp    esi,edx
  42b4c7:	cmova  esi,edx
  42b4ca:	mov    DWORD PTR [rbx+0x24],esi
  42b4cd:	movzx  ecx,WORD PTR [rbx+0xea]
  42b4d4:	cmp    WORD PTR [rbx+0xe8],cx
  42b4db:	jae    42b4e4 <flatcc_builder_end_string@@Base+0x84>
  42b4dd:	mov    WORD PTR [rbx+0xe8],cx
  42b4e4:	movzx  ecx,WORD PTR [rax+0xc]
  42b4e8:	mov    WORD PTR [rbx+0xea],cx
  42b4ef:	add    rax,0xffffffffffffffdc
  42b4f3:	mov    QWORD PTR [rbx+0x30],rax
  42b4f7:	add    DWORD PTR [rbx+0x104],0xffffffff
  42b4fe:	mov    eax,ebp
  42b500:	add    rsp,0x8
  42b504:	pop    rbx
  42b505:	pop    rbp
  42b506:	ret    
  42b507:	lea    rdi,[rip+0x1e813]        # 449d21 <flatcc_builder_padding_base@@Base+0x781>
  42b50e:	lea    rsi,[rip+0x1e2cd]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b515:	lea    rcx,[rip+0x1f0b8]        # 44a5d4 <flatcc_builder_padding_base@@Base+0x1034>
  42b51c:	mov    edx,0x6c4
  42b521:	call   4060f0 <__assert_fail@plt>
  42b526:	lea    rdi,[rip+0x1f0ea]        # 44a617 <flatcc_builder_padding_base@@Base+0x1077>
  42b52d:	lea    rsi,[rip+0x1e2ae]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b534:	lea    rcx,[rip+0x1f099]        # 44a5d4 <flatcc_builder_padding_base@@Base+0x1034>
  42b53b:	mov    edx,0x6c5
  42b540:	call   4060f0 <__assert_fail@plt>
  42b545:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b54f:	nop

000000000042b550 <flatcc_builder_string_edit@@Base>:
  42b550:	mov    rax,QWORD PTR [rdi+0x18]
  42b554:	ret    
  42b555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b55f:	nop

000000000042b560 <flatcc_builder_string_len@@Base>:
  42b560:	mov    rax,QWORD PTR [rdi+0x30]
  42b564:	mov    eax,DWORD PTR [rax+0x14]
  42b567:	ret    
  42b568:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b570 <flatcc_builder_table_edit@@Base>:
  42b570:	mov    rax,QWORD PTR [rdi+0x30]
  42b574:	movzx  eax,WORD PTR [rax+0xe]
  42b578:	cmp    eax,0x3
  42b57b:	jne    42b588 <flatcc_builder_table_edit@@Base+0x18>
  42b57d:	mov    eax,DWORD PTR [rdi+0x20]
  42b580:	add    rax,QWORD PTR [rdi+0x18]
  42b584:	sub    rax,rsi
  42b587:	ret    
  42b588:	push   rax
  42b589:	lea    rdi,[rip+0x1ea81]        # 44a011 <flatcc_builder_padding_base@@Base+0xa71>
  42b590:	lea    rsi,[rip+0x1e24b]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b597:	lea    rcx,[rip+0x1f12b]        # 44a6c9 <flatcc_builder_padding_base@@Base+0x1129>
  42b59e:	mov    edx,0x702
  42b5a3:	call   4060f0 <__assert_fail@plt>
  42b5a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b5b0 <flatcc_builder_table_add_copy@@Base>:
  42b5b0:	push   r15
  42b5b2:	push   r14
  42b5b4:	push   rbx
  42b5b5:	mov    r15,rcx
  42b5b8:	mov    r14,rdx
  42b5bb:	mov    rdx,rcx
  42b5be:	mov    ecx,r8d
  42b5c1:	call   42a500 <flatcc_builder_table_add@@Base>
  42b5c6:	mov    rbx,rax
  42b5c9:	test   rax,rax
  42b5cc:	je     42b5dc <flatcc_builder_table_add_copy@@Base+0x2c>
  42b5ce:	mov    rdi,rbx
  42b5d1:	mov    rsi,r14
  42b5d4:	mov    rdx,r15
  42b5d7:	call   406190 <memcpy@plt>
  42b5dc:	mov    rax,rbx
  42b5df:	pop    rbx
  42b5e0:	pop    r14
  42b5e2:	pop    r15
  42b5e4:	ret    
  42b5e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b5ef:	nop

000000000042b5f0 <flatcc_builder_push_buffer_alignment@@Base>:
  42b5f0:	movzx  eax,WORD PTR [rdi+0xe8]
  42b5f7:	mov    WORD PTR [rdi+0xe8],0x4
  42b600:	ret    
  42b601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b60b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b610 <flatcc_builder_pop_buffer_alignment@@Base>:
  42b610:	cmp    WORD PTR [rdi+0xe8],si
  42b617:	jae    42b620 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  42b619:	mov    WORD PTR [rdi+0xe8],si
  42b620:	ret    
  42b621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b62b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b630 <flatcc_builder_get_buffer_alignment@@Base>:
  42b630:	movzx  eax,WORD PTR [rdi+0xe8]
  42b637:	ret    
  42b638:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b640 <flatcc_builder_set_vtable_clustering@@Base>:
  42b640:	xor    eax,eax
  42b642:	test   esi,esi
  42b644:	sete   al
  42b647:	mov    DWORD PTR [rdi+0x124],eax
  42b64d:	ret    
  42b64e:	xchg   ax,ax

000000000042b650 <flatcc_builder_set_block_align@@Base>:
  42b650:	mov    WORD PTR [rdi+0xec],si
  42b657:	ret    
  42b658:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b660 <flatcc_builder_get_level@@Base>:
  42b660:	mov    eax,DWORD PTR [rdi+0x104]
  42b666:	ret    
  42b667:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b670 <flatcc_builder_set_max_level@@Base>:
  42b670:	mov    DWORD PTR [rdi+0x120],esi
  42b676:	cmp    DWORD PTR [rdi+0x108],esi
  42b67c:	jge    42b684 <flatcc_builder_set_max_level@@Base+0x14>
  42b67e:	mov    DWORD PTR [rdi+0x108],esi
  42b684:	ret    
  42b685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b68f:	nop

000000000042b690 <flatcc_builder_get_buffer_size@@Base>:
  42b690:	movsxd rax,DWORD PTR [rdi+0xf4]
  42b697:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42b69e:	sub    rax,rcx
  42b6a1:	ret    
  42b6a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6ac:	nop    DWORD PTR [rax+0x0]

000000000042b6b0 <flatcc_builder_get_buffer_start@@Base>:
  42b6b0:	mov    eax,DWORD PTR [rdi+0xf0]
  42b6b6:	ret    
  42b6b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b6c0 <flatcc_builder_get_buffer_end@@Base>:
  42b6c0:	mov    eax,DWORD PTR [rdi+0xf4]
  42b6c6:	ret    
  42b6c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b6d0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42b6d0:	mov    QWORD PTR [rdi+0x118],rsi
  42b6d7:	ret    
  42b6d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b6e0 <flatcc_builder_set_identifier@@Base>:
  42b6e0:	test   rsi,rsi
  42b6e3:	jne    42b6ec <flatcc_builder_set_identifier@@Base+0xc>
  42b6e5:	lea    rsi,[rip+0x1deb4]        # 4495a0 <flatcc_builder_padding_base@@Base>
  42b6ec:	mov    eax,DWORD PTR [rsi]
  42b6ee:	mov    DWORD PTR [rdi+0x110],eax
  42b6f4:	ret    
  42b6f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6ff:	nop

000000000042b700 <flatcc_builder_get_type@@Base>:
  42b700:	mov    rax,QWORD PTR [rdi+0x30]
  42b704:	test   rax,rax
  42b707:	je     42b70e <flatcc_builder_get_type@@Base+0xe>
  42b709:	movzx  eax,WORD PTR [rax+0xe]
  42b70d:	ret    
  42b70e:	xor    eax,eax
  42b710:	ret    
  42b711:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b71b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b720 <flatcc_builder_get_type_at@@Base>:
  42b720:	xor    eax,eax
  42b722:	test   esi,esi
  42b724:	jle    42b742 <flatcc_builder_get_type_at@@Base+0x22>
  42b726:	mov    ecx,DWORD PTR [rdi+0x104]
  42b72c:	cmp    ecx,esi
  42b72e:	jl     42b742 <flatcc_builder_get_type_at@@Base+0x22>
  42b730:	mov    rax,QWORD PTR [rdi+0x30]
  42b734:	sub    esi,ecx
  42b736:	movsxd rcx,esi
  42b739:	lea    rcx,[rcx+rcx*8]
  42b73d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  42b742:	ret    
  42b743:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b74d:	nop    DWORD PTR [rax]

000000000042b750 <flatcc_builder_get_direct_buffer@@Base>:
  42b750:	cmp    DWORD PTR [rdi+0x128],0x0
  42b757:	je     42b769 <flatcc_builder_get_direct_buffer@@Base+0x19>
  42b759:	mov    rax,QWORD PTR [rdi+0x130]
  42b760:	cmp    rax,QWORD PTR [rdi+0x138]
  42b767:	je     42b778 <flatcc_builder_get_direct_buffer@@Base+0x28>
  42b769:	test   rsi,rsi
  42b76c:	je     42b775 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42b76e:	mov    QWORD PTR [rsi],0x0
  42b775:	xor    eax,eax
  42b777:	ret    
  42b778:	test   rsi,rsi
  42b77b:	je     42b787 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42b77d:	mov    rax,QWORD PTR [rdi+0x160]
  42b784:	mov    QWORD PTR [rsi],rax
  42b787:	mov    rax,QWORD PTR [rdi+0x140]
  42b78e:	ret    
  42b78f:	nop

000000000042b790 <flatcc_builder_copy_buffer@@Base>:
  42b790:	push   rax
  42b791:	cmp    DWORD PTR [rdi+0x128],0x0
  42b798:	je     42b7ad <flatcc_builder_copy_buffer@@Base+0x1d>
  42b79a:	add    rdi,0x130
  42b7a1:	call   42c0b0 <flatcc_emitter_copy_buffer@@Base>
  42b7a6:	test   rax,rax
  42b7a9:	je     42b7b1 <flatcc_builder_copy_buffer@@Base+0x21>
  42b7ab:	pop    rcx
  42b7ac:	ret    
  42b7ad:	xor    eax,eax
  42b7af:	pop    rcx
  42b7b0:	ret    
  42b7b1:	lea    rdi,[rip+0x1e298]        # 449a50 <flatcc_builder_padding_base@@Base+0x4b0>
  42b7b8:	lea    rsi,[rip+0x1e023]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b7bf:	lea    rcx,[rip+0x1ef8e]        # 44a754 <flatcc_builder_padding_base@@Base+0x11b4>
  42b7c6:	mov    edx,0x786
  42b7cb:	call   4060f0 <__assert_fail@plt>

000000000042b7d0 <flatcc_builder_finalize_buffer@@Base>:
  42b7d0:	push   r15
  42b7d2:	push   r14
  42b7d4:	push   rbx
  42b7d5:	mov    rbx,rdi
  42b7d8:	movsxd r14,DWORD PTR [rdi+0xf4]
  42b7df:	movsxd rax,DWORD PTR [rdi+0xf0]
  42b7e6:	sub    r14,rax
  42b7e9:	test   rsi,rsi
  42b7ec:	je     42b7f1 <flatcc_builder_finalize_buffer@@Base+0x21>
  42b7ee:	mov    QWORD PTR [rsi],r14
  42b7f1:	mov    rdi,r14
  42b7f4:	call   4061a0 <malloc@plt>
  42b7f9:	test   rax,rax
  42b7fc:	je     42b82d <flatcc_builder_finalize_buffer@@Base+0x5d>
  42b7fe:	cmp    DWORD PTR [rbx+0x128],0x0
  42b805:	je     42b84c <flatcc_builder_finalize_buffer@@Base+0x7c>
  42b807:	mov    r15,rax
  42b80a:	add    rbx,0x130
  42b811:	mov    rdi,rbx
  42b814:	mov    rsi,rax
  42b817:	mov    rdx,r14
  42b81a:	call   42c0b0 <flatcc_emitter_copy_buffer@@Base>
  42b81f:	test   rax,rax
  42b822:	je     42b86b <flatcc_builder_finalize_buffer@@Base+0x9b>
  42b824:	mov    rax,r15
  42b827:	pop    rbx
  42b828:	pop    r14
  42b82a:	pop    r15
  42b82c:	ret    
  42b82d:	lea    rdi,[rip+0x14b57]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42b834:	lea    rsi,[rip+0x1dfa7]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b83b:	lea    rcx,[rip+0x1ef57]        # 44a799 <flatcc_builder_padding_base@@Base+0x11f9>
  42b842:	mov    edx,0x798
  42b847:	call   4060f0 <__assert_fail@plt>
  42b84c:	lea    rdi,[rip+0x14b38]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  42b853:	lea    rsi,[rip+0x1df88]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b85a:	lea    rcx,[rip+0x1ef38]        # 44a799 <flatcc_builder_padding_base@@Base+0x11f9>
  42b861:	mov    edx,0x79c
  42b866:	call   4060f0 <__assert_fail@plt>
  42b86b:	lea    rdi,[rip+0x1e1de]        # 449a50 <flatcc_builder_padding_base@@Base+0x4b0>
  42b872:	lea    rsi,[rip+0x1df69]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b879:	lea    rcx,[rip+0x1eed4]        # 44a754 <flatcc_builder_padding_base@@Base+0x11b4>
  42b880:	mov    edx,0x786
  42b885:	call   4060f0 <__assert_fail@plt>
  42b88a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b890 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42b890:	push   r15
  42b892:	push   r14
  42b894:	push   r12
  42b896:	push   rbx
  42b897:	push   rax
  42b898:	mov    r14,rsi
  42b89b:	mov    r15,rdi
  42b89e:	movsxd rax,DWORD PTR [rdi+0xf4]
  42b8a5:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42b8ac:	sub    rax,rcx
  42b8af:	test   rsi,rsi
  42b8b2:	je     42b8b7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  42b8b4:	mov    QWORD PTR [r14],rax
  42b8b7:	movzx  ecx,WORD PTR [r15+0xe8]
  42b8bf:	add    rax,rcx
  42b8c2:	add    rax,0xffffffffffffffff
  42b8c6:	mov    rbx,rcx
  42b8c9:	neg    rbx
  42b8cc:	and    rbx,rax
  42b8cf:	cmp    rcx,0x8
  42b8d3:	mov    QWORD PTR [rsp],0x0
  42b8db:	mov    esi,0x8
  42b8e0:	cmova  rsi,rcx
  42b8e4:	mov    rdi,rsp
  42b8e7:	mov    rdx,rbx
  42b8ea:	call   406220 <posix_memalign@plt>
  42b8ef:	mov    r12,QWORD PTR [rsp]
  42b8f3:	test   eax,eax
  42b8f5:	je     42b906 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42b8f7:	test   r12,r12
  42b8fa:	je     42b906 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42b8fc:	mov    rdi,r12
  42b8ff:	call   406040 <free@plt>
  42b904:	jmp    42b94e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42b906:	test   r12,r12
  42b909:	je     42b94e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42b90b:	cmp    DWORD PTR [r15+0x128],0x0
  42b913:	je     42b8fc <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  42b915:	add    r15,0x130
  42b91c:	mov    rdi,r15
  42b91f:	mov    rsi,r12
  42b922:	mov    rdx,rbx
  42b925:	call   42c0b0 <flatcc_emitter_copy_buffer@@Base>
  42b92a:	test   rax,rax
  42b92d:	jne    42b95d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42b92f:	lea    rdi,[rip+0x1e11a]        # 449a50 <flatcc_builder_padding_base@@Base+0x4b0>
  42b936:	lea    rsi,[rip+0x1dea5]        # 4497e2 <flatcc_builder_padding_base@@Base+0x242>
  42b93d:	lea    rcx,[rip+0x1ee10]        # 44a754 <flatcc_builder_padding_base@@Base+0x11b4>
  42b944:	mov    edx,0x786
  42b949:	call   4060f0 <__assert_fail@plt>
  42b94e:	test   r14,r14
  42b951:	je     42b95a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  42b953:	mov    QWORD PTR [r14],0x0
  42b95a:	xor    r12d,r12d
  42b95d:	mov    rax,r12
  42b960:	add    rsp,0x8
  42b964:	pop    rbx
  42b965:	pop    r12
  42b967:	pop    r14
  42b969:	pop    r15
  42b96b:	ret    
  42b96c:	nop    DWORD PTR [rax+0x0]

000000000042b970 <flatcc_builder_aligned_alloc@@Base>:
  42b970:	push   rax
  42b971:	mov    rax,rsi
  42b974:	mov    QWORD PTR [rsp],0x0
  42b97c:	cmp    rdi,0x8
  42b980:	mov    esi,0x8
  42b985:	cmova  rsi,rdi
  42b989:	mov    rdi,rsp
  42b98c:	mov    rdx,rax
  42b98f:	call   406220 <posix_memalign@plt>
  42b994:	mov    ecx,eax
  42b996:	mov    rax,QWORD PTR [rsp]
  42b99a:	test   ecx,ecx
  42b99c:	je     42b9b5 <flatcc_builder_aligned_alloc@@Base+0x45>
  42b99e:	test   rax,rax
  42b9a1:	je     42b9b5 <flatcc_builder_aligned_alloc@@Base+0x45>
  42b9a3:	mov    rdi,rax
  42b9a6:	call   406040 <free@plt>
  42b9ab:	mov    QWORD PTR [rsp],0x0
  42b9b3:	xor    eax,eax
  42b9b5:	pop    rcx
  42b9b6:	ret    
  42b9b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b9c0 <flatcc_builder_aligned_free@@Base>:
  42b9c0:	jmp    406040 <free@plt>
  42b9c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9cf:	nop

000000000042b9d0 <flatcc_builder_get_emit_context@@Base>:
  42b9d0:	mov    rax,QWORD PTR [rdi+0x38]
  42b9d4:	ret    
  42b9d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9df:	nop

000000000042b9e0 <flatcc_emitter_recycle_page@@Base>:
  42b9e0:	mov    rcx,QWORD PTR [rdi]
  42b9e3:	mov    eax,0xffffffff
  42b9e8:	cmp    rcx,rsi
  42b9eb:	je     42ba42 <flatcc_emitter_recycle_page@@Base+0x62>
  42b9ed:	cmp    QWORD PTR [rdi+0x8],rsi
  42b9f1:	je     42ba42 <flatcc_emitter_recycle_page@@Base+0x62>
  42b9f3:	mov    rax,QWORD PTR [rsi+0xb80]
  42b9fa:	mov    rdx,QWORD PTR [rsi+0xb88]
  42ba01:	mov    QWORD PTR [rax+0xb88],rdx
  42ba08:	mov    rdx,QWORD PTR [rsi+0xb88]
  42ba0f:	mov    QWORD PTR [rdx+0xb80],rax
  42ba16:	mov    rax,QWORD PTR [rcx+0xb88]
  42ba1d:	mov    QWORD PTR [rsi+0xb88],rax
  42ba24:	mov    QWORD PTR [rsi+0xb80],rcx
  42ba2b:	mov    QWORD PTR [rax+0xb80],rsi
  42ba32:	mov    rax,QWORD PTR [rsi+0xb80]
  42ba39:	mov    QWORD PTR [rax+0xb88],rsi
  42ba40:	xor    eax,eax
  42ba42:	ret    
  42ba43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba4d:	nop    DWORD PTR [rax]

000000000042ba50 <flatcc_emitter_reset@@Base>:
  42ba50:	push   r14
  42ba52:	push   rbx
  42ba53:	push   rax
  42ba54:	mov    rax,QWORD PTR [rdi]
  42ba57:	test   rax,rax
  42ba5a:	je     42bb3b <flatcc_emitter_reset@@Base+0xeb>
  42ba60:	mov    rbx,rdi
  42ba63:	mov    QWORD PTR [rdi+0x8],rax
  42ba67:	lea    rcx,[rax+0x5c0]
  42ba6e:	mov    QWORD PTR [rdi+0x10],rcx
  42ba72:	mov    QWORD PTR [rdi+0x20],rcx
  42ba76:	mov    QWORD PTR [rdi+0x18],0x5c0
  42ba7e:	mov    QWORD PTR [rdi+0x28],0x5c0
  42ba86:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42ba90:	mov    rcx,QWORD PTR [rdi+0x30]
  42ba94:	mov    rdx,QWORD PTR [rdi+0x40]
  42ba98:	test   rdx,rdx
  42ba9b:	jne    42baa4 <flatcc_emitter_reset@@Base+0x54>
  42ba9d:	mov    QWORD PTR [rbx+0x40],rcx
  42baa1:	mov    rdx,rcx
  42baa4:	lea    rdx,[rdx+rdx*2]
  42baa8:	shr    rdx,0x2
  42baac:	shr    rcx,0x2
  42bab0:	add    rcx,rdx
  42bab3:	mov    QWORD PTR [rbx+0x40],rcx
  42bab7:	mov    QWORD PTR [rbx+0x30],0x0
  42babf:	add    rcx,rcx
  42bac2:	cmp    rcx,QWORD PTR [rbx+0x38]
  42bac6:	jae    42bb3b <flatcc_emitter_reset@@Base+0xeb>
  42bac8:	mov    rdi,QWORD PTR [rax+0xb80]
  42bacf:	cmp    rdi,rax
  42bad2:	je     42bb3b <flatcc_emitter_reset@@Base+0xeb>
  42bad4:	lea    rcx,[rax+0xb80]
  42badb:	mov    r14,0xfffffffffffff480
  42bae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42baec:	nop    DWORD PTR [rax+0x0]
  42baf0:	mov    rdx,QWORD PTR [rdi+0xb80]
  42baf7:	mov    QWORD PTR [rcx],rdx
  42bafa:	mov    rcx,QWORD PTR [rdi+0xb80]
  42bb01:	mov    QWORD PTR [rcx+0xb88],rax
  42bb08:	call   406040 <free@plt>
  42bb0d:	mov    rax,QWORD PTR [rbx+0x38]
  42bb11:	add    rax,r14
  42bb14:	mov    QWORD PTR [rbx+0x38],rax
  42bb18:	mov    rcx,QWORD PTR [rbx+0x40]
  42bb1c:	add    rcx,rcx
  42bb1f:	cmp    rcx,rax
  42bb22:	jae    42bb3b <flatcc_emitter_reset@@Base+0xeb>
  42bb24:	mov    rax,QWORD PTR [rbx+0x8]
  42bb28:	lea    rcx,[rax+0xb80]
  42bb2f:	mov    rdi,QWORD PTR [rax+0xb80]
  42bb36:	cmp    rdi,QWORD PTR [rbx]
  42bb39:	jne    42baf0 <flatcc_emitter_reset@@Base+0xa0>
  42bb3b:	add    rsp,0x8
  42bb3f:	pop    rbx
  42bb40:	pop    r14
  42bb42:	ret    
  42bb43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb4d:	nop    DWORD PTR [rax]

000000000042bb50 <flatcc_emitter_clear@@Base>:
  42bb50:	push   r14
  42bb52:	push   rbx
  42bb53:	push   rax
  42bb54:	mov    rbx,QWORD PTR [rdi]
  42bb57:	test   rbx,rbx
  42bb5a:	je     42bbba <flatcc_emitter_clear@@Base+0x6a>
  42bb5c:	mov    r14,rdi
  42bb5f:	mov    rax,QWORD PTR [rbx+0xb88]
  42bb66:	mov    QWORD PTR [rax+0xb80],0x0
  42bb71:	jmp    42bb8f <flatcc_emitter_clear@@Base+0x3f>
  42bb73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb7d:	nop    DWORD PTR [rax]
  42bb80:	mov    rbx,rax
  42bb83:	mov    rdi,QWORD PTR [rax+0xb88]
  42bb8a:	call   406040 <free@plt>
  42bb8f:	mov    rax,QWORD PTR [rbx+0xb80]
  42bb96:	test   rax,rax
  42bb99:	jne    42bb80 <flatcc_emitter_clear@@Base+0x30>
  42bb9b:	mov    rdi,rbx
  42bb9e:	call   406040 <free@plt>
  42bba3:	vxorps xmm0,xmm0,xmm0
  42bba7:	vmovups YMMWORD PTR [r14+0x20],ymm0
  42bbad:	vmovups YMMWORD PTR [r14],ymm0
  42bbb2:	mov    QWORD PTR [r14+0x40],0x0
  42bbba:	add    rsp,0x8
  42bbbe:	pop    rbx
  42bbbf:	pop    r14
  42bbc1:	vzeroupper 
  42bbc4:	ret    
  42bbc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbcf:	nop

000000000042bbd0 <flatcc_emitter@@Base>:
  42bbd0:	push   rbp
  42bbd1:	push   r15
  42bbd3:	push   r14
  42bbd5:	push   r13
  42bbd7:	push   r12
  42bbd9:	push   rbx
  42bbda:	sub    rsp,0x18
  42bbde:	mov    r13d,edx
  42bbe1:	mov    r14,rsi
  42bbe4:	mov    r12,rdi
  42bbe7:	add    QWORD PTR [rdi+0x30],r8
  42bbeb:	test   ecx,ecx
  42bbed:	js     42bd81 <flatcc_emitter@@Base+0x1b1>
  42bbf3:	mov    rdx,QWORD PTR [r12+0x28]
  42bbf8:	cmp    rdx,r8
  42bbfb:	jae    42bf68 <flatcc_emitter@@Base+0x398>
  42bc01:	xor    eax,eax
  42bc03:	test   r13d,r13d
  42bc06:	je     42c09f <flatcc_emitter@@Base+0x4cf>
  42bc0c:	mov    QWORD PTR [rsp+0x8],r13
  42bc11:	mov    r15,QWORD PTR [r14+0x8]
  42bc15:	test   r15,r15
  42bc18:	je     42bd66 <flatcc_emitter@@Base+0x196>
  42bc1e:	mov    r13,QWORD PTR [r14]
  42bc21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc30:	mov    rbp,r15
  42bc33:	cmp    r15,rdx
  42bc36:	jbe    42bd38 <flatcc_emitter@@Base+0x168>
  42bc3c:	mov    rbp,rdx
  42bc3f:	nop
  42bc40:	test   rbp,rbp
  42bc43:	jne    42bd38 <flatcc_emitter@@Base+0x168>
  42bc49:	mov    rbx,QWORD PTR [r12+0x8]
  42bc4e:	test   rbx,rbx
  42bc51:	je     42bc60 <flatcc_emitter@@Base+0x90>
  42bc53:	mov    rax,QWORD PTR [rbx+0xb80]
  42bc5a:	cmp    rax,QWORD PTR [r12]
  42bc5e:	jne    42bca1 <flatcc_emitter@@Base+0xd1>
  42bc60:	mov    edi,0xb98
  42bc65:	call   4061a0 <malloc@plt>
  42bc6a:	test   rax,rax
  42bc6d:	je     42bf7d <flatcc_emitter@@Base+0x3ad>
  42bc73:	add    QWORD PTR [r12+0x38],0xb80
  42bc7c:	test   rbx,rbx
  42bc7f:	je     42bce0 <flatcc_emitter@@Base+0x110>
  42bc81:	mov    QWORD PTR [rax+0xb88],rbx
  42bc88:	mov    rcx,QWORD PTR [r12]
  42bc8c:	mov    QWORD PTR [rax+0xb80],rcx
  42bc93:	mov    QWORD PTR [rcx+0xb88],rax
  42bc9a:	mov    QWORD PTR [rbx+0xb80],rax
  42bca1:	mov    QWORD PTR [r12+0x8],rax
  42bca6:	mov    QWORD PTR [r12+0x20],rax
  42bcab:	mov    QWORD PTR [r12+0x28],0xb80
  42bcb4:	mov    rcx,QWORD PTR [rax+0xb88]
  42bcbb:	mov    ecx,DWORD PTR [rcx+0xb90]
  42bcc1:	mov    edx,0xb80
  42bcc6:	add    ecx,edx
  42bcc8:	mov    DWORD PTR [rax+0xb90],ecx
  42bcce:	mov    ebp,0xb80
  42bcd3:	cmp    r15,rbp
  42bcd6:	ja     42bc40 <flatcc_emitter@@Base+0x70>
  42bcdc:	jmp    42bd35 <flatcc_emitter@@Base+0x165>
  42bcde:	xchg   ax,ax
  42bce0:	mov    QWORD PTR [r12],rax
  42bce4:	mov    QWORD PTR [r12+0x8],rax
  42bce9:	mov    QWORD PTR [rax+0xb80],rax
  42bcf0:	mov    QWORD PTR [rax+0xb88],rax
  42bcf7:	mov    rcx,rax
  42bcfa:	add    rcx,0x5c0
  42bd01:	mov    QWORD PTR [r12+0x10],rcx
  42bd06:	mov    QWORD PTR [r12+0x20],rcx
  42bd0b:	mov    QWORD PTR [r12+0x18],0x5c0
  42bd14:	mov    QWORD PTR [r12+0x28],0x5c0
  42bd1d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42bd27:	mov    ebp,0x5c0
  42bd2c:	cmp    r15,rbp
  42bd2f:	ja     42bc40 <flatcc_emitter@@Base+0x70>
  42bd35:	mov    rbp,r15
  42bd38:	mov    rdi,QWORD PTR [r12+0x20]
  42bd3d:	mov    rsi,r13
  42bd40:	mov    rdx,rbp
  42bd43:	call   406190 <memcpy@plt>
  42bd48:	add    QWORD PTR [r12+0x20],rbp
  42bd4d:	add    r13,rbp
  42bd50:	mov    rdx,QWORD PTR [r12+0x28]
  42bd55:	sub    rdx,rbp
  42bd58:	mov    QWORD PTR [r12+0x28],rdx
  42bd5d:	sub    r15,rbp
  42bd60:	jne    42bc30 <flatcc_emitter@@Base+0x60>
  42bd66:	mov    r13,QWORD PTR [rsp+0x8]
  42bd6b:	add    r13d,0xffffffff
  42bd6f:	add    r14,0x10
  42bd73:	test   r13d,r13d
  42bd76:	jne    42bc0c <flatcc_emitter@@Base+0x3c>
  42bd7c:	jmp    42c09d <flatcc_emitter@@Base+0x4cd>
  42bd81:	lea    rsi,[r12+0x18]
  42bd86:	mov    rdx,QWORD PTR [r12+0x18]
  42bd8b:	cmp    rdx,r8
  42bd8e:	jae    42bf87 <flatcc_emitter@@Base+0x3b7>
  42bd94:	xor    eax,eax
  42bd96:	test   r13d,r13d
  42bd99:	je     42c09f <flatcc_emitter@@Base+0x4cf>
  42bd9f:	mov    QWORD PTR [rsp+0x10],rsi
  42bda4:	movsxd rax,r13d
  42bda7:	shl    rax,0x4
  42bdab:	add    r14,rax
  42bdae:	mov    esi,0xfffff480
  42bdb3:	mov    QWORD PTR [rsp+0x8],r13
  42bdb8:	mov    r15,QWORD PTR [r14-0x8]
  42bdbc:	add    r14,0xfffffffffffffff0
  42bdc0:	test   r15,r15
  42bdc3:	je     42bf54 <flatcc_emitter@@Base+0x384>
  42bdc9:	mov    r13,QWORD PTR [r14]
  42bdcc:	add    r13,r15
  42bdcf:	nop
  42bdd0:	mov    rax,QWORD PTR [rsp+0x10]
  42bdd5:	mov    rax,QWORD PTR [rax]
  42bdd8:	cmp    r15,rax
  42bddb:	jbe    42bf20 <flatcc_emitter@@Base+0x350>
  42bde1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bdeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bdf0:	mov    rbp,rax
  42bdf3:	test   rax,rax
  42bdf6:	jne    42bf23 <flatcc_emitter@@Base+0x353>
  42bdfc:	mov    rbx,QWORD PTR [r12]
  42be00:	test   rbx,rbx
  42be03:	je     42be30 <flatcc_emitter@@Base+0x260>
  42be05:	mov    rax,QWORD PTR [rbx+0xb88]
  42be0c:	cmp    rax,QWORD PTR [r12+0x8]
  42be11:	je     42be30 <flatcc_emitter@@Base+0x260>
  42be13:	mov    edx,DWORD PTR [rbx+0xb90]
  42be19:	add    edx,esi
  42be1b:	lea    rcx,[rax+0xb90]
  42be22:	mov    DWORD PTR [rax+0xb90],edx
  42be28:	mov    QWORD PTR [r12],rax
  42be2c:	jmp    42be85 <flatcc_emitter@@Base+0x2b5>
  42be2e:	xchg   ax,ax
  42be30:	mov    edi,0xb98
  42be35:	call   4061a0 <malloc@plt>
  42be3a:	test   rax,rax
  42be3d:	je     42bf7d <flatcc_emitter@@Base+0x3ad>
  42be43:	add    QWORD PTR [r12+0x38],0xb80
  42be4c:	test   rbx,rbx
  42be4f:	je     42bec0 <flatcc_emitter@@Base+0x2f0>
  42be51:	mov    rcx,QWORD PTR [r12+0x8]
  42be56:	mov    QWORD PTR [rax+0xb88],rcx
  42be5d:	mov    QWORD PTR [rax+0xb80],rbx
  42be64:	mov    QWORD PTR [rbx+0xb88],rax
  42be6b:	mov    QWORD PTR [rcx+0xb80],rax
  42be72:	mov    QWORD PTR [r12],rax
  42be76:	mov    rcx,rax
  42be79:	add    rcx,0xb90
  42be80:	mov    esi,0xfffff480
  42be85:	lea    rdx,[rax+0xb80]
  42be8c:	mov    QWORD PTR [r12+0x10],rdx
  42be91:	mov    QWORD PTR [r12+0x18],0xb80
  42be9a:	mov    rax,QWORD PTR [rax+0xb80]
  42bea1:	mov    eax,DWORD PTR [rax+0xb90]
  42bea7:	add    eax,esi
  42bea9:	mov    DWORD PTR [rcx],eax
  42beab:	mov    eax,0xb80
  42beb0:	cmp    r15,rax
  42beb3:	ja     42bdf0 <flatcc_emitter@@Base+0x220>
  42beb9:	jmp    42bf20 <flatcc_emitter@@Base+0x350>
  42bebb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bec0:	mov    QWORD PTR [r12],rax
  42bec4:	mov    QWORD PTR [r12+0x8],rax
  42bec9:	mov    QWORD PTR [rax+0xb80],rax
  42bed0:	mov    QWORD PTR [rax+0xb88],rax
  42bed7:	mov    rcx,rax
  42beda:	add    rcx,0x5c0
  42bee1:	mov    QWORD PTR [r12+0x10],rcx
  42bee6:	mov    QWORD PTR [r12+0x20],rcx
  42beeb:	mov    QWORD PTR [r12+0x18],0x5c0
  42bef4:	mov    QWORD PTR [r12+0x28],0x5c0
  42befd:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42bf07:	mov    eax,0x5c0
  42bf0c:	mov    esi,0xfffff480
  42bf11:	cmp    r15,rax
  42bf14:	ja     42bdf0 <flatcc_emitter@@Base+0x220>
  42bf1a:	nop    WORD PTR [rax+rax*1+0x0]
  42bf20:	mov    rbp,r15
  42bf23:	mov    rdi,QWORD PTR [r12+0x10]
  42bf28:	sub    rdi,rbp
  42bf2b:	mov    QWORD PTR [r12+0x10],rdi
  42bf30:	sub    rax,rbp
  42bf33:	mov    QWORD PTR [r12+0x18],rax
  42bf38:	sub    r13,rbp
  42bf3b:	mov    rsi,r13
  42bf3e:	mov    rdx,rbp
  42bf41:	call   406190 <memcpy@plt>
  42bf46:	mov    esi,0xfffff480
  42bf4b:	sub    r15,rbp
  42bf4e:	jne    42bdd0 <flatcc_emitter@@Base+0x200>
  42bf54:	mov    r13,QWORD PTR [rsp+0x8]
  42bf59:	add    r13d,0xffffffff
  42bf5d:	jne    42bdb3 <flatcc_emitter@@Base+0x1e3>
  42bf63:	jmp    42c09d <flatcc_emitter@@Base+0x4cd>
  42bf68:	lea    rsi,[r12+0x28]
  42bf6d:	mov    rbp,QWORD PTR [r12+0x20]
  42bf72:	lea    rcx,[r8+rbp*1]
  42bf76:	mov    QWORD PTR [r12+0x20],rcx
  42bf7b:	jmp    42bf94 <flatcc_emitter@@Base+0x3c4>
  42bf7d:	mov    eax,0xffffffff
  42bf82:	jmp    42c09f <flatcc_emitter@@Base+0x4cf>
  42bf87:	mov    rbp,QWORD PTR [r12+0x10]
  42bf8c:	sub    rbp,r8
  42bf8f:	mov    QWORD PTR [r12+0x10],rbp
  42bf94:	sub    rdx,r8
  42bf97:	mov    QWORD PTR [rsi],rdx
  42bf9a:	xor    eax,eax
  42bf9c:	test   r13d,r13d
  42bf9f:	je     42c09f <flatcc_emitter@@Base+0x4cf>
  42bfa5:	lea    r15d,[r13-0x1]
  42bfa9:	mov    r12d,r13d
  42bfac:	and    r12d,0x7
  42bfb0:	je     42bfe2 <flatcc_emitter@@Base+0x412>
  42bfb2:	xor    ebx,ebx
  42bfb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bfbe:	xchg   ax,ax
  42bfc0:	mov    rsi,QWORD PTR [r14]
  42bfc3:	mov    rdx,QWORD PTR [r14+0x8]
  42bfc7:	mov    rdi,rbp
  42bfca:	call   406190 <memcpy@plt>
  42bfcf:	add    rbp,QWORD PTR [r14+0x8]
  42bfd3:	add    r14,0x10
  42bfd7:	add    ebx,0x1
  42bfda:	cmp    r12d,ebx
  42bfdd:	jne    42bfc0 <flatcc_emitter@@Base+0x3f0>
  42bfdf:	sub    r13d,ebx
  42bfe2:	cmp    r15d,0x7
  42bfe6:	jb     42c09d <flatcc_emitter@@Base+0x4cd>
  42bfec:	nop    DWORD PTR [rax+0x0]
  42bff0:	mov    rsi,QWORD PTR [r14]
  42bff3:	mov    rdx,QWORD PTR [r14+0x8]
  42bff7:	mov    rdi,rbp
  42bffa:	call   406190 <memcpy@plt>
  42bfff:	add    rbp,QWORD PTR [r14+0x8]
  42c003:	mov    rsi,QWORD PTR [r14+0x10]
  42c007:	mov    rdx,QWORD PTR [r14+0x18]
  42c00b:	mov    rdi,rbp
  42c00e:	call   406190 <memcpy@plt>
  42c013:	add    rbp,QWORD PTR [r14+0x18]
  42c017:	mov    rsi,QWORD PTR [r14+0x20]
  42c01b:	mov    rdx,QWORD PTR [r14+0x28]
  42c01f:	mov    rdi,rbp
  42c022:	call   406190 <memcpy@plt>
  42c027:	add    rbp,QWORD PTR [r14+0x28]
  42c02b:	mov    rsi,QWORD PTR [r14+0x30]
  42c02f:	mov    rdx,QWORD PTR [r14+0x38]
  42c033:	mov    rdi,rbp
  42c036:	call   406190 <memcpy@plt>
  42c03b:	add    rbp,QWORD PTR [r14+0x38]
  42c03f:	mov    rsi,QWORD PTR [r14+0x40]
  42c043:	mov    rdx,QWORD PTR [r14+0x48]
  42c047:	mov    rdi,rbp
  42c04a:	call   406190 <memcpy@plt>
  42c04f:	add    rbp,QWORD PTR [r14+0x48]
  42c053:	mov    rsi,QWORD PTR [r14+0x50]
  42c057:	mov    rdx,QWORD PTR [r14+0x58]
  42c05b:	mov    rdi,rbp
  42c05e:	call   406190 <memcpy@plt>
  42c063:	add    rbp,QWORD PTR [r14+0x58]
  42c067:	mov    rsi,QWORD PTR [r14+0x60]
  42c06b:	mov    rdx,QWORD PTR [r14+0x68]
  42c06f:	mov    rdi,rbp
  42c072:	call   406190 <memcpy@plt>
  42c077:	add    rbp,QWORD PTR [r14+0x68]
  42c07b:	mov    rsi,QWORD PTR [r14+0x70]
  42c07f:	mov    rdx,QWORD PTR [r14+0x78]
  42c083:	mov    rdi,rbp
  42c086:	call   406190 <memcpy@plt>
  42c08b:	add    rbp,QWORD PTR [r14+0x78]
  42c08f:	sub    r14,0xffffffffffffff80
  42c093:	add    r13d,0xfffffff8
  42c097:	jne    42bff0 <flatcc_emitter@@Base+0x420>
  42c09d:	xor    eax,eax
  42c09f:	add    rsp,0x18
  42c0a3:	pop    rbx
  42c0a4:	pop    r12
  42c0a6:	pop    r13
  42c0a8:	pop    r14
  42c0aa:	pop    r15
  42c0ac:	pop    rbp
  42c0ad:	ret    
  42c0ae:	xchg   ax,ax

000000000042c0b0 <flatcc_emitter_copy_buffer@@Base>:
  42c0b0:	push   r15
  42c0b2:	push   r14
  42c0b4:	push   r12
  42c0b6:	push   rbx
  42c0b7:	push   rax
  42c0b8:	mov    rax,rdx
  42c0bb:	mov    rdx,QWORD PTR [rdi+0x30]
  42c0bf:	cmp    rdx,rax
  42c0c2:	ja     42c14d <flatcc_emitter_copy_buffer@@Base+0x9d>
  42c0c8:	mov    r14,rdi
  42c0cb:	mov    rax,QWORD PTR [rdi]
  42c0ce:	test   rax,rax
  42c0d1:	je     42c14d <flatcc_emitter_copy_buffer@@Base+0x9d>
  42c0d3:	mov    r15,rsi
  42c0d6:	cmp    rax,QWORD PTR [r14+0x8]
  42c0da:	je     42c15f <flatcc_emitter_copy_buffer@@Base+0xaf>
  42c0e0:	mov    r12d,0xb80
  42c0e6:	sub    r12,QWORD PTR [r14+0x18]
  42c0ea:	mov    rsi,QWORD PTR [r14+0x10]
  42c0ee:	mov    rdi,r15
  42c0f1:	mov    rdx,r12
  42c0f4:	call   406190 <memcpy@plt>
  42c0f9:	add    r12,r15
  42c0fc:	mov    rax,QWORD PTR [r14]
  42c0ff:	mov    rbx,QWORD PTR [rax+0xb80]
  42c106:	cmp    rbx,QWORD PTR [r14+0x8]
  42c10a:	je     42c134 <flatcc_emitter_copy_buffer@@Base+0x84>
  42c10c:	nop    DWORD PTR [rax+0x0]
  42c110:	mov    edx,0xb80
  42c115:	mov    rdi,r12
  42c118:	mov    rsi,rbx
  42c11b:	call   406190 <memcpy@plt>
  42c120:	add    r12,0xb80
  42c127:	mov    rbx,QWORD PTR [rbx+0xb80]
  42c12e:	cmp    rbx,QWORD PTR [r14+0x8]
  42c132:	jne    42c110 <flatcc_emitter_copy_buffer@@Base+0x60>
  42c134:	mov    edx,0xb80
  42c139:	sub    rdx,QWORD PTR [r14+0x28]
  42c13d:	mov    rdi,r12
  42c140:	mov    rsi,rbx
  42c143:	call   406190 <memcpy@plt>
  42c148:	mov    r15,r12
  42c14b:	jmp    42c150 <flatcc_emitter_copy_buffer@@Base+0xa0>
  42c14d:	xor    r15d,r15d
  42c150:	mov    rax,r15
  42c153:	add    rsp,0x8
  42c157:	pop    rbx
  42c158:	pop    r12
  42c15a:	pop    r14
  42c15c:	pop    r15
  42c15e:	ret    
  42c15f:	mov    rsi,QWORD PTR [r14+0x10]
  42c163:	mov    rdi,r15
  42c166:	call   406190 <memcpy@plt>
  42c16b:	jmp    42c150 <flatcc_emitter_copy_buffer@@Base+0xa0>
  42c16d:	nop    DWORD PTR [rax]

000000000042c170 <cmetrohash64_1@@Base>:
  42c170:	push   r15
  42c172:	push   r14
  42c174:	push   rbx
  42c175:	mov    r8d,0x8648dbdb
  42c17b:	lea    r9,[rdi+rsi*1]
  42c17f:	mov    eax,edx
  42c181:	lea    r11,[r8+0x41f1b606]
  42c188:	imul   rax,r11
  42c18c:	add    rax,rsi
  42c18f:	movabs r10,0x60e25d3baf065edb
  42c199:	add    r10,rax
  42c19c:	cmp    rsi,0x20
  42c1a0:	jb     42c27d <cmetrohash64_1@@Base+0x10d>
  42c1a6:	lea    r14,[r9-0x20]
  42c1aa:	mov    rax,r10
  42c1ad:	mov    rbx,r10
  42c1b0:	mov    r15,r10
  42c1b3:	mov    rdx,r10
  42c1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c1c0:	mov    rsi,QWORD PTR [rdi]
  42c1c3:	imul   rsi,r11
  42c1c7:	add    rsi,rdx
  42c1ca:	rorx   rdx,rsi,0x1d
  42c1d0:	add    rdx,rbx
  42c1d3:	mov    rsi,QWORD PTR [rdi+0x8]
  42c1d7:	imul   rsi,r8
  42c1db:	add    rsi,r15
  42c1de:	rorx   r15,rsi,0x1d
  42c1e4:	add    r15,rax
  42c1e7:	imul   rsi,QWORD PTR [rdi+0x10],0x7bdec03b
  42c1ef:	add    rsi,rbx
  42c1f2:	rorx   rbx,rsi,0x1d
  42c1f8:	imul   rsi,QWORD PTR [rdi+0x18],0x2f5870a5
  42c200:	add    rbx,rdx
  42c203:	add    rsi,rax
  42c206:	add    rdi,0x20
  42c20a:	rorx   rax,rsi,0x1d
  42c210:	add    rax,r15
  42c213:	cmp    rdi,r14
  42c216:	jbe    42c1c0 <cmetrohash64_1@@Base+0x50>
  42c218:	lea    rsi,[rax+rdx*1]
  42c21c:	imul   rsi,r11
  42c220:	add    rsi,r15
  42c223:	rorx   rsi,rsi,0x21
  42c229:	imul   rsi,r8
  42c22d:	xor    rsi,rbx
  42c230:	lea    rbx,[rsi+r15*1]
  42c234:	imul   rbx,r8
  42c238:	add    rbx,rdx
  42c23b:	rorx   rbx,rbx,0x21
  42c241:	imul   rbx,r11
  42c245:	xor    rbx,rax
  42c248:	lea    rax,[rsi+rdx*1]
  42c24c:	imul   rax,r11
  42c250:	add    rax,rbx
  42c253:	rorx   rax,rax,0x21
  42c259:	imul   rax,r8
  42c25d:	add    rbx,r15
  42c260:	imul   rbx,r8
  42c264:	add    rbx,rsi
  42c267:	rorx   rsi,rbx,0x21
  42c26d:	imul   rsi,r11
  42c271:	xor    r15,rdx
  42c274:	xor    r15,rax
  42c277:	xor    r15,rsi
  42c27a:	add    r10,r15
  42c27d:	mov    rax,r9
  42c280:	sub    rax,rdi
  42c283:	cmp    rax,0x10
  42c287:	jge    42c2f7 <cmetrohash64_1@@Base+0x187>
  42c289:	cmp    rax,0x8
  42c28d:	jge    42c38c <cmetrohash64_1@@Base+0x21c>
  42c293:	cmp    rax,0x4
  42c297:	jge    42c3b7 <cmetrohash64_1@@Base+0x247>
  42c29d:	cmp    rax,0x2
  42c2a1:	jge    42c3e4 <cmetrohash64_1@@Base+0x274>
  42c2a7:	test   rax,rax
  42c2aa:	jle    42c2c6 <cmetrohash64_1@@Base+0x156>
  42c2ac:	movzx  eax,BYTE PTR [rdi]
  42c2af:	imul   rax,rax,0x2f5870a5
  42c2b6:	add    rax,r10
  42c2b9:	rorx   r10,rax,0x19
  42c2bf:	imul   r10,r8
  42c2c3:	xor    r10,rax
  42c2c6:	rorx   rax,r10,0x21
  42c2cc:	xor    rax,r10
  42c2cf:	imul   r11,rax
  42c2d3:	mov    rdx,r11
  42c2d6:	shr    rdx,0x21
  42c2da:	movabs rsi,0x641d48f080000000
  42c2e4:	imul   rsi,rax
  42c2e8:	or     rsi,rdx
  42c2eb:	xor    rsi,r11
  42c2ee:	mov    QWORD PTR [rcx],rsi
  42c2f1:	pop    rbx
  42c2f2:	pop    r14
  42c2f4:	pop    r15
  42c2f6:	ret    
  42c2f7:	mov    rax,QWORD PTR [rdi]
  42c2fa:	imul   rax,r11
  42c2fe:	add    rax,r10
  42c301:	rorx   rax,rax,0x21
  42c307:	movabs rdx,0x6907a4ca322e467b
  42c311:	imul   rdx,rax
  42c315:	movabs rsi,0x4645c8cf60000000
  42c31f:	imul   rsi,rax
  42c323:	imul   rax,r8
  42c327:	mov    rbx,QWORD PTR [rdi+0x8]
  42c32b:	imul   rbx,r8
  42c32f:	add    rbx,r10
  42c332:	add    rdi,0x10
  42c336:	rorx   rbx,rbx,0x21
  42c33c:	imul   r14,rbx,0x7bdec03b
  42c343:	shr    rdx,0x23
  42c347:	or     rsi,rdx
  42c34a:	add    rsi,r14
  42c34d:	xor    rsi,rax
  42c350:	movabs rax,0x16e8b05e33f3b607
  42c35a:	imul   rax,rbx
  42c35e:	shr    rax,0x23
  42c362:	movabs rdx,0xc67e76c0e0000000
  42c36c:	imul   rdx,rbx
  42c370:	or     rdx,rax
  42c373:	add    rdx,rsi
  42c376:	xor    rdx,r14
  42c379:	add    r10,rdx
  42c37c:	mov    rax,r9
  42c37f:	sub    rax,rdi
  42c382:	cmp    rax,0x8
  42c386:	jl     42c293 <cmetrohash64_1@@Base+0x123>
  42c38c:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42c393:	add    rax,r10
  42c396:	add    rdi,0x8
  42c39a:	rorx   r10,rax,0x21
  42c3a0:	imul   r10,r8
  42c3a4:	xor    r10,rax
  42c3a7:	mov    rax,r9
  42c3aa:	sub    rax,rdi
  42c3ad:	cmp    rax,0x4
  42c3b1:	jl     42c29d <cmetrohash64_1@@Base+0x12d>
  42c3b7:	mov    eax,DWORD PTR [rdi]
  42c3b9:	imul   rax,rax,0x2f5870a5
  42c3c0:	add    rax,r10
  42c3c3:	add    rdi,0x4
  42c3c7:	rorx   r10,rax,0xf
  42c3cd:	imul   r10,r8
  42c3d1:	xor    r10,rax
  42c3d4:	mov    rax,r9
  42c3d7:	sub    rax,rdi
  42c3da:	cmp    rax,0x2
  42c3de:	jl     42c2a7 <cmetrohash64_1@@Base+0x137>
  42c3e4:	movzx  eax,WORD PTR [rdi]
  42c3e7:	imul   rax,rax,0x2f5870a5
  42c3ee:	add    rax,r10
  42c3f1:	add    rdi,0x2
  42c3f5:	rorx   r10,rax,0xd
  42c3fb:	imul   r10,r8
  42c3ff:	xor    r10,rax
  42c402:	sub    r9,rdi
  42c405:	mov    rax,r9
  42c408:	test   rax,rax
  42c40b:	jg     42c2ac <cmetrohash64_1@@Base+0x13c>
  42c411:	jmp    42c2c6 <cmetrohash64_1@@Base+0x156>
  42c416:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042c420 <cmetrohash64_2@@Base>:
  42c420:	push   r15
  42c422:	push   r14
  42c424:	push   rbx
  42c425:	mov    r8d,0xa2aa033b
  42c42b:	lea    r9,[rdi+rsi*1]
  42c42f:	mov    eax,edx
  42c431:	lea    r11,[r8+0x342615ba]
  42c438:	imul   rax,r11
  42c43c:	add    rax,rsi
  42c43f:	movabs r10,0x52bc33fedbe4cbb5
  42c449:	add    r10,rax
  42c44c:	cmp    rsi,0x20
  42c450:	jb     42c52d <cmetrohash64_2@@Base+0x10d>
  42c456:	lea    r14,[r9-0x20]
  42c45a:	mov    rax,r10
  42c45d:	mov    rbx,r10
  42c460:	mov    r15,r10
  42c463:	mov    rdx,r10
  42c466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c470:	mov    rsi,QWORD PTR [rdi]
  42c473:	imul   rsi,r11
  42c477:	add    rsi,rdx
  42c47a:	rorx   rdx,rsi,0x1d
  42c480:	add    rdx,rbx
  42c483:	mov    rsi,QWORD PTR [rdi+0x8]
  42c487:	imul   rsi,r8
  42c48b:	add    rsi,r15
  42c48e:	rorx   r15,rsi,0x1d
  42c494:	add    r15,rax
  42c497:	imul   rsi,QWORD PTR [rdi+0x10],0x62992fc1
  42c49f:	add    rsi,rbx
  42c4a2:	rorx   rbx,rsi,0x1d
  42c4a8:	imul   rsi,QWORD PTR [rdi+0x18],0x30bc5b29
  42c4b0:	add    rbx,rdx
  42c4b3:	add    rsi,rax
  42c4b6:	add    rdi,0x20
  42c4ba:	rorx   rax,rsi,0x1d
  42c4c0:	add    rax,r15
  42c4c3:	cmp    rdi,r14
  42c4c6:	jbe    42c470 <cmetrohash64_2@@Base+0x50>
  42c4c8:	lea    rsi,[rax+rdx*1]
  42c4cc:	imul   rsi,r11
  42c4d0:	add    rsi,r15
  42c4d3:	rorx   rsi,rsi,0x1e
  42c4d9:	imul   rsi,r8
  42c4dd:	xor    rsi,rbx
  42c4e0:	lea    rbx,[rsi+r15*1]
  42c4e4:	imul   rbx,r8
  42c4e8:	add    rbx,rdx
  42c4eb:	rorx   rbx,rbx,0x1e
  42c4f1:	imul   rbx,r11
  42c4f5:	xor    rbx,rax
  42c4f8:	lea    rax,[rsi+rdx*1]
  42c4fc:	imul   rax,r11
  42c500:	add    rax,rbx
  42c503:	rorx   rax,rax,0x1e
  42c509:	imul   rax,r8
  42c50d:	add    rbx,r15
  42c510:	imul   rbx,r8
  42c514:	add    rbx,rsi
  42c517:	rorx   rsi,rbx,0x1e
  42c51d:	imul   rsi,r11
  42c521:	xor    r15,rdx
  42c524:	xor    r15,rax
  42c527:	xor    r15,rsi
  42c52a:	add    r10,r15
  42c52d:	mov    rax,r9
  42c530:	sub    rax,rdi
  42c533:	cmp    rax,0x10
  42c537:	jge    42c5a7 <cmetrohash64_2@@Base+0x187>
  42c539:	cmp    rax,0x8
  42c53d:	jge    42c63f <cmetrohash64_2@@Base+0x21f>
  42c543:	cmp    rax,0x4
  42c547:	jge    42c66a <cmetrohash64_2@@Base+0x24a>
  42c54d:	cmp    rax,0x2
  42c551:	jge    42c697 <cmetrohash64_2@@Base+0x277>
  42c557:	test   rax,rax
  42c55a:	jle    42c576 <cmetrohash64_2@@Base+0x156>
  42c55c:	movzx  eax,BYTE PTR [rdi]
  42c55f:	imul   rax,rax,0x30bc5b29
  42c566:	add    rax,r10
  42c569:	rorx   r10,rax,0x17
  42c56f:	imul   r10,r8
  42c573:	xor    r10,rax
  42c576:	rorx   rax,r10,0x1c
  42c57c:	xor    rax,r10
  42c57f:	imul   r11,rax
  42c583:	mov    rdx,r11
  42c586:	shr    rdx,0x1d
  42c58a:	movabs rsi,0xb680c7a800000000
  42c594:	imul   rsi,rax
  42c598:	or     rsi,rdx
  42c59b:	xor    rsi,r11
  42c59e:	mov    QWORD PTR [rcx],rsi
  42c5a1:	pop    rbx
  42c5a2:	pop    r14
  42c5a4:	pop    r15
  42c5a6:	ret    
  42c5a7:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42c5ae:	add    rax,r10
  42c5b1:	rorx   rax,rax,0x1d
  42c5b7:	imul   r14,rax,0x30bc5b29
  42c5be:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42c5c6:	add    rsi,r10
  42c5c9:	add    rdi,0x10
  42c5cd:	rorx   rsi,rsi,0x1d
  42c5d3:	imul   r15,rsi,0x30bc5b29
  42c5da:	movabs rdx,0x28e511fea41f163d
  42c5e4:	imul   rdx,rax
  42c5e8:	shr    rdx,0x22
  42c5ec:	movabs rbx,0xa907c58f40000000
  42c5f6:	imul   rbx,rax
  42c5fa:	or     rbx,rdx
  42c5fd:	add    rbx,r15
  42c600:	xor    rbx,r14
  42c603:	movabs rax,0x9472cc564ae2c91
  42c60d:	imul   rax,rsi
  42c611:	shr    rax,0x22
  42c615:	movabs rdx,0x592b8b2440000000
  42c61f:	imul   rdx,rsi
  42c623:	or     rdx,rax
  42c626:	add    rdx,rbx
  42c629:	xor    rdx,r15
  42c62c:	add    r10,rdx
  42c62f:	mov    rax,r9
  42c632:	sub    rax,rdi
  42c635:	cmp    rax,0x8
  42c639:	jl     42c543 <cmetrohash64_2@@Base+0x123>
  42c63f:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42c646:	add    rax,r10
  42c649:	add    rdi,0x8
  42c64d:	rorx   r10,rax,0x24
  42c653:	imul   r10,r8
  42c657:	xor    r10,rax
  42c65a:	mov    rax,r9
  42c65d:	sub    rax,rdi
  42c660:	cmp    rax,0x4
  42c664:	jl     42c54d <cmetrohash64_2@@Base+0x12d>
  42c66a:	mov    eax,DWORD PTR [rdi]
  42c66c:	imul   rax,rax,0x30bc5b29
  42c673:	add    rax,r10
  42c676:	add    rdi,0x4
  42c67a:	rorx   r10,rax,0xf
  42c680:	imul   r10,r8
  42c684:	xor    r10,rax
  42c687:	mov    rax,r9
  42c68a:	sub    rax,rdi
  42c68d:	cmp    rax,0x2
  42c691:	jl     42c557 <cmetrohash64_2@@Base+0x137>
  42c697:	movzx  eax,WORD PTR [rdi]
  42c69a:	imul   rax,rax,0x30bc5b29
  42c6a1:	add    rax,r10
  42c6a4:	add    rdi,0x2
  42c6a8:	rorx   r10,rax,0xf
  42c6ae:	imul   r10,r8
  42c6b2:	xor    r10,rax
  42c6b5:	sub    r9,rdi
  42c6b8:	mov    rax,r9
  42c6bb:	test   rax,rax
  42c6be:	jg     42c55c <cmetrohash64_2@@Base+0x13c>
  42c6c4:	jmp    42c576 <cmetrohash64_2@@Base+0x156>
  42c6c9:	nop    DWORD PTR [rax+0x0]

000000000042c6d0 <fb_name_table_clear@@Base>:
  42c6d0:	push   rbx
  42c6d1:	mov    rbx,rdi
  42c6d4:	mov    rdi,QWORD PTR [rdi]
  42c6d7:	test   rdi,rdi
  42c6da:	je     42c6e1 <fb_name_table_clear@@Base+0x11>
  42c6dc:	call   406040 <free@plt>
  42c6e1:	vxorps xmm0,xmm0,xmm0
  42c6e5:	vmovups YMMWORD PTR [rbx],ymm0
  42c6e9:	pop    rbx
  42c6ea:	vzeroupper 
  42c6ed:	ret    
  42c6ee:	xchg   ax,ax

000000000042c6f0 <fb_name_table_destroy@@Base>:
  42c6f0:	push   r15
  42c6f2:	push   r14
  42c6f4:	push   r13
  42c6f6:	push   r12
  42c6f8:	push   rbx
  42c6f9:	mov    r12,rdi
  42c6fc:	test   rsi,rsi
  42c6ff:	je     42c746 <fb_name_table_destroy@@Base+0x56>
  42c701:	mov    rax,QWORD PTR [r12+0x18]
  42c706:	test   rax,rax
  42c709:	je     42c746 <fb_name_table_destroy@@Base+0x56>
  42c70b:	mov    r14,rdx
  42c70e:	mov    r15,rsi
  42c711:	mov    r13,QWORD PTR [r12]
  42c715:	xor    ebx,ebx
  42c717:	nop    WORD PTR [rax+rax*1+0x0]
  42c720:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42c725:	mov    rcx,rsi
  42c728:	or     rcx,0x2
  42c72c:	cmp    rcx,0x2
  42c730:	je     42c73d <fb_name_table_destroy@@Base+0x4d>
  42c732:	mov    rdi,r14
  42c735:	call   r15
  42c738:	mov    rax,QWORD PTR [r12+0x18]
  42c73d:	add    rbx,0x1
  42c741:	cmp    rbx,rax
  42c744:	jb     42c720 <fb_name_table_destroy@@Base+0x30>
  42c746:	mov    rdi,QWORD PTR [r12]
  42c74a:	test   rdi,rdi
  42c74d:	je     42c754 <fb_name_table_destroy@@Base+0x64>
  42c74f:	call   406040 <free@plt>
  42c754:	vxorps xmm0,xmm0,xmm0
  42c758:	vmovups YMMWORD PTR [r12],ymm0
  42c75e:	pop    rbx
  42c75f:	pop    r12
  42c761:	pop    r13
  42c763:	pop    r14
  42c765:	pop    r15
  42c767:	vzeroupper 
  42c76a:	ret    
  42c76b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c770 <fb_name_table_init@@Base>:
  42c770:	push   r14
  42c772:	push   rbx
  42c773:	push   rax
  42c774:	mov    r14,rdi
  42c777:	mov    eax,0x4
  42c77c:	nop    DWORD PTR [rax+0x0]
  42c780:	mov    rbx,rax
  42c783:	imul   rcx,rax,0xb3
  42c78a:	shr    rcx,0x8
  42c78e:	lea    rax,[rax+rax*1]
  42c792:	cmp    rcx,rsi
  42c795:	jb     42c780 <fb_name_table_init@@Base+0x10>
  42c797:	mov    esi,0x8
  42c79c:	mov    rdi,rbx
  42c79f:	call   406140 <calloc@plt>
  42c7a4:	mov    QWORD PTR [r14],rax
  42c7a7:	test   rax,rax
  42c7aa:	je     42c7be <fb_name_table_init@@Base+0x4e>
  42c7ac:	vxorps xmm0,xmm0,xmm0
  42c7b0:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42c7b6:	mov    QWORD PTR [r14+0x18],rbx
  42c7ba:	xor    eax,eax
  42c7bc:	jmp    42c7c3 <fb_name_table_init@@Base+0x53>
  42c7be:	mov    eax,0xffffffff
  42c7c3:	add    rsp,0x8
  42c7c7:	pop    rbx
  42c7c8:	pop    r14
  42c7ca:	ret    
  42c7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c7d0 <fb_name_table_resize@@Base>:
  42c7d0:	jmp    42c7e0 <fb_name_table_resize@@Base+0x10>
  42c7d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c7dc:	nop    DWORD PTR [rax+0x0]
  42c7e0:	push   r15
  42c7e2:	push   r14
  42c7e4:	push   r12
  42c7e6:	push   rbx
  42c7e7:	sub    rsp,0x28
  42c7eb:	mov    r14,rdi
  42c7ee:	mov    r12,QWORD PTR [rdi]
  42c7f1:	mov    rax,QWORD PTR [rdi+0x10]
  42c7f5:	cmp    rax,rsi
  42c7f8:	cmova  rsi,rax
  42c7fc:	mov    eax,0x4
  42c801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c80b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c810:	mov    rbx,rax
  42c813:	imul   rcx,rax,0xb3
  42c81a:	shr    rcx,0x8
  42c81e:	lea    rax,[rax+rax*1]
  42c822:	cmp    rcx,rsi
  42c825:	jb     42c810 <fb_name_table_resize@@Base+0x40>
  42c827:	mov    esi,0x8
  42c82c:	mov    rdi,rbx
  42c82f:	call   406140 <calloc@plt>
  42c834:	mov    QWORD PTR [rsp+0x8],rax
  42c839:	test   rax,rax
  42c83c:	je     42c8b3 <fb_name_table_resize@@Base+0xe3>
  42c83e:	vxorps xmm0,xmm0,xmm0
  42c842:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42c848:	mov    QWORD PTR [rsp+0x20],rbx
  42c84d:	mov    rax,QWORD PTR [r14+0x18]
  42c851:	test   rax,rax
  42c854:	je     42c897 <fb_name_table_resize@@Base+0xc7>
  42c856:	xor    ebx,ebx
  42c858:	lea    r15,[rsp+0x8]
  42c85d:	nop    DWORD PTR [rax]
  42c860:	mov    rcx,QWORD PTR [r12+rbx*8]
  42c864:	mov    rdx,rcx
  42c867:	or     rdx,0x2
  42c86b:	cmp    rdx,0x2
  42c86f:	je     42c88b <fb_name_table_resize@@Base+0xbb>
  42c871:	mov    rsi,QWORD PTR [rcx+0x8]
  42c875:	movsxd rdx,DWORD PTR [rcx+0x10]
  42c879:	mov    r8d,0x3
  42c87f:	mov    rdi,r15
  42c882:	call   42c8e0 <fb_name_table_insert@@Base+0x10>
  42c887:	mov    rax,QWORD PTR [r14+0x18]
  42c88b:	add    rbx,0x1
  42c88f:	cmp    rbx,rax
  42c892:	jb     42c860 <fb_name_table_resize@@Base+0x90>
  42c894:	mov    r12,QWORD PTR [r14]
  42c897:	test   r12,r12
  42c89a:	je     42c8a4 <fb_name_table_resize@@Base+0xd4>
  42c89c:	mov    rdi,r12
  42c89f:	call   406040 <free@plt>
  42c8a4:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42c8aa:	vmovups YMMWORD PTR [r14],ymm0
  42c8af:	xor    eax,eax
  42c8b1:	jmp    42c8b8 <fb_name_table_resize@@Base+0xe8>
  42c8b3:	mov    eax,0xffffffff
  42c8b8:	add    rsp,0x28
  42c8bc:	pop    rbx
  42c8bd:	pop    r12
  42c8bf:	pop    r14
  42c8c1:	pop    r15
  42c8c3:	vzeroupper 
  42c8c6:	ret    
  42c8c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c8d0 <fb_name_table_insert@@Base>:
  42c8d0:	jmp    42c8e0 <fb_name_table_insert@@Base+0x10>
  42c8d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8dc:	nop    DWORD PTR [rax+0x0]
  42c8e0:	push   rbp
  42c8e1:	push   r15
  42c8e3:	push   r14
  42c8e5:	push   r13
  42c8e7:	push   r12
  42c8e9:	push   rbx
  42c8ea:	sub    rsp,0x38
  42c8ee:	mov    QWORD PTR [rsp+0x20],rsi
  42c8f3:	cmp    rcx,0x2
  42c8f7:	je     42ca65 <fb_name_table_insert@@Base+0x195>
  42c8fd:	mov    r13,rcx
  42c900:	cmp    rcx,0x1
  42c904:	je     42ca84 <fb_name_table_insert@@Base+0x1b4>
  42c90a:	test   r13,r13
  42c90d:	je     42caa3 <fb_name_table_insert@@Base+0x1d3>
  42c913:	mov    rbp,rdx
  42c916:	mov    rbx,rdi
  42c919:	mov    DWORD PTR [rsp+0xc],r8d
  42c91e:	mov    rsi,QWORD PTR [rdi+0x10]
  42c922:	mov    r15,QWORD PTR [rdi+0x18]
  42c926:	imul   rax,r15,0xb3
  42c92d:	shr    rax,0x8
  42c931:	cmp    rsi,rax
  42c934:	mov    QWORD PTR [rsp+0x10],rdx
  42c939:	jb     42c957 <fb_name_table_insert@@Base+0x87>
  42c93b:	add    rsi,rsi
  42c93e:	mov    rdi,rbx
  42c941:	call   42c7e0 <fb_name_table_resize@@Base+0x10>
  42c946:	test   eax,eax
  42c948:	jne    42cac2 <fb_name_table_insert@@Base+0x1f2>
  42c94e:	mov    r15,QWORD PTR [rbx+0x18]
  42c952:	mov    rbp,QWORD PTR [rsp+0x10]
  42c957:	mov    r14,QWORD PTR [rbx]
  42c95a:	add    r15,0xffffffffffffffff
  42c95e:	lea    rcx,[rsp+0x30]
  42c963:	mov    edx,0x2f693b52
  42c968:	mov    rdi,QWORD PTR [rsp+0x20]
  42c96d:	mov    rsi,rbp
  42c970:	call   42c170 <cmetrohash64_1@@Base>
  42c975:	mov    rcx,QWORD PTR [rsp+0x30]
  42c97a:	mov    r12d,ecx
  42c97d:	mov    eax,r15d
  42c980:	and    eax,ecx
  42c982:	mov    ecx,DWORD PTR [rsp+0xc]
  42c986:	or     ecx,0x1
  42c989:	cmp    ecx,0x3
  42c98c:	jne    42c9c3 <fb_name_table_insert@@Base+0xf3>
  42c98e:	add    QWORD PTR [rbx+0x10],0x1
  42c993:	jmp    42c9a6 <fb_name_table_insert@@Base+0xd6>
  42c995:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c99f:	nop
  42c9a0:	mov    rax,r12
  42c9a3:	and    rax,r15
  42c9a6:	add    r12,0x1
  42c9aa:	mov    rcx,QWORD PTR [r14+rax*8]
  42c9ae:	or     rcx,0x2
  42c9b2:	cmp    rcx,0x2
  42c9b6:	jne    42c9a0 <fb_name_table_insert@@Base+0xd0>
  42c9b8:	lea    rbp,[r14+rax*8]
  42c9bc:	xor    ebx,ebx
  42c9be:	jmp    42ca41 <fb_name_table_insert@@Base+0x171>
  42c9c3:	mov    QWORD PTR [rsp+0x28],rbx
  42c9c8:	mov    QWORD PTR [rsp+0x18],r13
  42c9cd:	add    r12,0x1
  42c9d1:	xor    r13d,r13d
  42c9d4:	mov    rdx,QWORD PTR [rsp+0x10]
  42c9d9:	jmp    42c9ea <fb_name_table_insert@@Base+0x11a>
  42c9db:	nop    DWORD PTR [rax+rax*1+0x0]
  42c9e0:	mov    rax,r12
  42c9e3:	and    rax,r15
  42c9e6:	add    r12,0x1
  42c9ea:	lea    rbp,[r14+rax*8]
  42c9ee:	mov    rbx,QWORD PTR [r14+rax*8]
  42c9f2:	cmp    rbx,0x2
  42c9f6:	je     42ca20 <fb_name_table_insert@@Base+0x150>
  42c9f8:	test   rbx,rbx
  42c9fb:	je     42ca29 <fb_name_table_insert@@Base+0x159>
  42c9fd:	movsxd rax,DWORD PTR [rbx+0x10]
  42ca01:	cmp    rax,rdx
  42ca04:	jne    42c9e0 <fb_name_table_insert@@Base+0x110>
  42ca06:	mov    rsi,QWORD PTR [rbx+0x8]
  42ca0a:	mov    rdi,QWORD PTR [rsp+0x20]
  42ca0f:	call   406130 <memcmp@plt>
  42ca14:	mov    rdx,QWORD PTR [rsp+0x10]
  42ca19:	test   eax,eax
  42ca1b:	jne    42c9e0 <fb_name_table_insert@@Base+0x110>
  42ca1d:	jmp    42ca57 <fb_name_table_insert@@Base+0x187>
  42ca1f:	nop
  42ca20:	test   r13,r13
  42ca23:	cmove  r13,rbp
  42ca27:	jmp    42c9e0 <fb_name_table_insert@@Base+0x110>
  42ca29:	test   r13,r13
  42ca2c:	cmovne rbp,r13
  42ca30:	mov    rax,QWORD PTR [rsp+0x28]
  42ca35:	add    QWORD PTR [rax+0x10],0x1
  42ca3a:	xor    ebx,ebx
  42ca3c:	mov    r13,QWORD PTR [rsp+0x18]
  42ca41:	mov    QWORD PTR [rbp+0x0],r13
  42ca45:	mov    rax,rbx
  42ca48:	add    rsp,0x38
  42ca4c:	pop    rbx
  42ca4d:	pop    r12
  42ca4f:	pop    r13
  42ca51:	pop    r14
  42ca53:	pop    r15
  42ca55:	pop    rbp
  42ca56:	ret    
  42ca57:	cmp    DWORD PTR [rsp+0xc],0x0
  42ca5c:	mov    r13,QWORD PTR [rsp+0x18]
  42ca61:	jne    42ca45 <fb_name_table_insert@@Base+0x175>
  42ca63:	jmp    42ca41 <fb_name_table_insert@@Base+0x171>
  42ca65:	lea    rdi,[rip+0x19bef]        # 44665b <str_set_deleted@@Base+0xd3>
  42ca6c:	lea    rsi,[rip+0x19b34]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42ca73:	lea    rcx,[rip+0x19b97]        # 446611 <str_set_deleted@@Base+0x89>
  42ca7a:	mov    edx,0x73
  42ca7f:	call   4060f0 <__assert_fail@plt>
  42ca84:	lea    rdi,[rip+0x19be7]        # 446672 <str_set_deleted@@Base+0xea>
  42ca8b:	lea    rsi,[rip+0x19b15]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42ca92:	lea    rcx,[rip+0x19b78]        # 446611 <str_set_deleted@@Base+0x89>
  42ca99:	mov    edx,0x74
  42ca9e:	call   4060f0 <__assert_fail@plt>
  42caa3:	lea    rdi,[rip+0x19ae6]        # 446590 <str_set_deleted@@Base+0x8>
  42caaa:	lea    rsi,[rip+0x19af6]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42cab1:	lea    rcx,[rip+0x19b59]        # 446611 <str_set_deleted@@Base+0x89>
  42cab8:	mov    edx,0x72
  42cabd:	call   4060f0 <__assert_fail@plt>
  42cac2:	mov    rax,QWORD PTR [rip+0x2452f]        # 450ff8 <stderr@GLIBC_2.2.5>
  42cac9:	mov    rdi,QWORD PTR [rax]
  42cacc:	lea    rsi,[rip+0x19bb4]        # 446687 <str_set_deleted@@Base+0xff>
  42cad3:	lea    rdx,[rip+0x19bc4]        # 44669e <str_set_deleted@@Base+0x116>
  42cada:	xor    eax,eax
  42cadc:	call   406170 <fprintf@plt>
  42cae1:	mov    edi,0x1
  42cae6:	call   406200 <exit@plt>
  42caeb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042caf0 <fb_name_table_insert_item@@Base>:
  42caf0:	mov    eax,edx
  42caf2:	mov    rcx,rsi
  42caf5:	mov    rsi,QWORD PTR [rsi+0x8]
  42caf9:	movsxd rdx,DWORD PTR [rcx+0x10]
  42cafd:	mov    r8d,eax
  42cb00:	jmp    42c8e0 <fb_name_table_insert@@Base+0x10>
  42cb05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb0f:	nop

000000000042cb10 <fb_name_table_find@@Base>:
  42cb10:	push   rbp
  42cb11:	push   r15
  42cb13:	push   r14
  42cb15:	push   r13
  42cb17:	push   r12
  42cb19:	push   rbx
  42cb1a:	push   rax
  42cb1b:	mov    r12,QWORD PTR [rdi]
  42cb1e:	test   r12,r12
  42cb21:	je     42cb87 <fb_name_table_find@@Base+0x77>
  42cb23:	mov    r15,rdx
  42cb26:	mov    r14,rsi
  42cb29:	mov    r13,QWORD PTR [rdi+0x18]
  42cb2d:	add    r13,0xffffffffffffffff
  42cb31:	mov    rcx,rsp
  42cb34:	mov    edx,0x2f693b52
  42cb39:	mov    rdi,rsi
  42cb3c:	mov    rsi,r15
  42cb3f:	call   42c170 <cmetrohash64_1@@Base>
  42cb44:	mov    ebp,DWORD PTR [rsp]
  42cb47:	jmp    42cb54 <fb_name_table_find@@Base+0x44>
  42cb49:	nop    DWORD PTR [rax+0x0]
  42cb50:	add    rbp,0x1
  42cb54:	mov    rax,rbp
  42cb57:	and    rax,r13
  42cb5a:	mov    rbx,QWORD PTR [r12+rax*8]
  42cb5e:	cmp    rbx,0x2
  42cb62:	je     42cb50 <fb_name_table_find@@Base+0x40>
  42cb64:	test   rbx,rbx
  42cb67:	je     42cb87 <fb_name_table_find@@Base+0x77>
  42cb69:	movsxd rax,DWORD PTR [rbx+0x10]
  42cb6d:	cmp    rax,r15
  42cb70:	jne    42cb50 <fb_name_table_find@@Base+0x40>
  42cb72:	mov    rsi,QWORD PTR [rbx+0x8]
  42cb76:	mov    rdi,r14
  42cb79:	mov    rdx,r15
  42cb7c:	call   406130 <memcmp@plt>
  42cb81:	test   eax,eax
  42cb83:	jne    42cb50 <fb_name_table_find@@Base+0x40>
  42cb85:	jmp    42cb89 <fb_name_table_find@@Base+0x79>
  42cb87:	xor    ebx,ebx
  42cb89:	mov    rax,rbx
  42cb8c:	add    rsp,0x8
  42cb90:	pop    rbx
  42cb91:	pop    r12
  42cb93:	pop    r13
  42cb95:	pop    r14
  42cb97:	pop    r15
  42cb99:	pop    rbp
  42cb9a:	ret    
  42cb9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cba0 <fb_name_table_find_item@@Base>:
  42cba0:	push   rbp
  42cba1:	push   r15
  42cba3:	push   r14
  42cba5:	push   r13
  42cba7:	push   r12
  42cba9:	push   rbx
  42cbaa:	push   rax
  42cbab:	mov    r12,QWORD PTR [rdi]
  42cbae:	test   r12,r12
  42cbb1:	je     42cc14 <fb_name_table_find_item@@Base+0x74>
  42cbb3:	mov    r14,QWORD PTR [rsi+0x8]
  42cbb7:	movsxd r15,DWORD PTR [rsi+0x10]
  42cbbb:	mov    r13,QWORD PTR [rdi+0x18]
  42cbbf:	add    r13,0xffffffffffffffff
  42cbc3:	mov    rcx,rsp
  42cbc6:	mov    edx,0x2f693b52
  42cbcb:	mov    rdi,r14
  42cbce:	mov    rsi,r15
  42cbd1:	call   42c170 <cmetrohash64_1@@Base>
  42cbd6:	mov    ebp,DWORD PTR [rsp]
  42cbd9:	jmp    42cbe4 <fb_name_table_find_item@@Base+0x44>
  42cbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cbe0:	add    rbp,0x1
  42cbe4:	mov    rax,rbp
  42cbe7:	and    rax,r13
  42cbea:	mov    rbx,QWORD PTR [r12+rax*8]
  42cbee:	cmp    rbx,0x2
  42cbf2:	je     42cbe0 <fb_name_table_find_item@@Base+0x40>
  42cbf4:	test   rbx,rbx
  42cbf7:	je     42cc14 <fb_name_table_find_item@@Base+0x74>
  42cbf9:	cmp    DWORD PTR [rbx+0x10],r15d
  42cbfd:	jne    42cbe0 <fb_name_table_find_item@@Base+0x40>
  42cbff:	mov    rsi,QWORD PTR [rbx+0x8]
  42cc03:	mov    rdi,r14
  42cc06:	mov    rdx,r15
  42cc09:	call   406130 <memcmp@plt>
  42cc0e:	test   eax,eax
  42cc10:	jne    42cbe0 <fb_name_table_find_item@@Base+0x40>
  42cc12:	jmp    42cc16 <fb_name_table_find_item@@Base+0x76>
  42cc14:	xor    ebx,ebx
  42cc16:	mov    rax,rbx
  42cc19:	add    rsp,0x8
  42cc1d:	pop    rbx
  42cc1e:	pop    r12
  42cc20:	pop    r13
  42cc22:	pop    r14
  42cc24:	pop    r15
  42cc26:	pop    rbp
  42cc27:	ret    
  42cc28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cc30 <fb_name_table_remove@@Base>:
  42cc30:	push   rbp
  42cc31:	push   r15
  42cc33:	push   r14
  42cc35:	push   r13
  42cc37:	push   r12
  42cc39:	push   rbx
  42cc3a:	sub    rsp,0x18
  42cc3e:	mov    r13,QWORD PTR [rdi]
  42cc41:	test   r13,r13
  42cc44:	je     42cccc <fb_name_table_remove@@Base+0x9c>
  42cc4a:	mov    r12,rdx
  42cc4d:	mov    QWORD PTR [rsp],rdi
  42cc51:	mov    rbp,QWORD PTR [rdi+0x18]
  42cc55:	add    rbp,0xffffffffffffffff
  42cc59:	lea    rcx,[rsp+0x10]
  42cc5e:	mov    edx,0x2f693b52
  42cc63:	mov    QWORD PTR [rsp+0x8],rsi
  42cc68:	mov    rdi,rsi
  42cc6b:	mov    rsi,r12
  42cc6e:	call   42c170 <cmetrohash64_1@@Base>
  42cc73:	mov    r15d,DWORD PTR [rsp+0x10]
  42cc78:	jmp    42cc84 <fb_name_table_remove@@Base+0x54>
  42cc7a:	nop    WORD PTR [rax+rax*1+0x0]
  42cc80:	add    r15,0x1
  42cc84:	mov    r14,r15
  42cc87:	and    r14,rbp
  42cc8a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42cc8f:	cmp    rbx,0x2
  42cc93:	je     42cc80 <fb_name_table_remove@@Base+0x50>
  42cc95:	test   rbx,rbx
  42cc98:	je     42cccc <fb_name_table_remove@@Base+0x9c>
  42cc9a:	movsxd rax,DWORD PTR [rbx+0x10]
  42cc9e:	cmp    rax,r12
  42cca1:	jne    42cc80 <fb_name_table_remove@@Base+0x50>
  42cca3:	mov    rsi,QWORD PTR [rbx+0x8]
  42cca7:	mov    rdi,QWORD PTR [rsp+0x8]
  42ccac:	mov    rdx,r12
  42ccaf:	call   406130 <memcmp@plt>
  42ccb4:	test   eax,eax
  42ccb6:	jne    42cc80 <fb_name_table_remove@@Base+0x50>
  42ccb8:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42ccc1:	mov    rax,QWORD PTR [rsp]
  42ccc5:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  42ccca:	jmp    42ccce <fb_name_table_remove@@Base+0x9e>
  42cccc:	xor    ebx,ebx
  42ccce:	mov    rax,rbx
  42ccd1:	add    rsp,0x18
  42ccd5:	pop    rbx
  42ccd6:	pop    r12
  42ccd8:	pop    r13
  42ccda:	pop    r14
  42ccdc:	pop    r15
  42ccde:	pop    rbp
  42ccdf:	ret    

000000000042cce0 <fb_name_table_remove_item@@Base>:
  42cce0:	push   rbp
  42cce1:	push   r15
  42cce3:	push   r14
  42cce5:	push   r13
  42cce7:	push   r12
  42cce9:	push   rbx
  42ccea:	sub    rsp,0x18
  42ccee:	mov    r13,QWORD PTR [rdi]
  42ccf1:	test   r13,r13
  42ccf4:	je     42cd79 <fb_name_table_remove_item@@Base+0x99>
  42ccfa:	mov    rax,QWORD PTR [rsi+0x8]
  42ccfe:	movsxd r12,DWORD PTR [rsi+0x10]
  42cd02:	mov    QWORD PTR [rsp],rdi
  42cd06:	mov    rbp,QWORD PTR [rdi+0x18]
  42cd0a:	add    rbp,0xffffffffffffffff
  42cd0e:	lea    rcx,[rsp+0x10]
  42cd13:	mov    edx,0x2f693b52
  42cd18:	mov    QWORD PTR [rsp+0x8],rax
  42cd1d:	mov    rdi,rax
  42cd20:	mov    rsi,r12
  42cd23:	call   42c170 <cmetrohash64_1@@Base>
  42cd28:	mov    r15d,DWORD PTR [rsp+0x10]
  42cd2d:	jmp    42cd34 <fb_name_table_remove_item@@Base+0x54>
  42cd2f:	nop
  42cd30:	add    r15,0x1
  42cd34:	mov    r14,r15
  42cd37:	and    r14,rbp
  42cd3a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42cd3f:	cmp    rbx,0x2
  42cd43:	je     42cd30 <fb_name_table_remove_item@@Base+0x50>
  42cd45:	test   rbx,rbx
  42cd48:	je     42cd79 <fb_name_table_remove_item@@Base+0x99>
  42cd4a:	cmp    DWORD PTR [rbx+0x10],r12d
  42cd4e:	jne    42cd30 <fb_name_table_remove_item@@Base+0x50>
  42cd50:	mov    rsi,QWORD PTR [rbx+0x8]
  42cd54:	mov    rdi,QWORD PTR [rsp+0x8]
  42cd59:	mov    rdx,r12
  42cd5c:	call   406130 <memcmp@plt>
  42cd61:	test   eax,eax
  42cd63:	jne    42cd30 <fb_name_table_remove_item@@Base+0x50>
  42cd65:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42cd6e:	mov    rax,QWORD PTR [rsp]
  42cd72:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  42cd77:	jmp    42cd7b <fb_name_table_remove_item@@Base+0x9b>
  42cd79:	xor    ebx,ebx
  42cd7b:	mov    rax,rbx
  42cd7e:	add    rsp,0x18
  42cd82:	pop    rbx
  42cd83:	pop    r12
  42cd85:	pop    r13
  42cd87:	pop    r14
  42cd89:	pop    r15
  42cd8b:	pop    rbp
  42cd8c:	ret    
  42cd8d:	nop    DWORD PTR [rax]

000000000042cd90 <fb_name_table_visit@@Base>:
  42cd90:	push   r15
  42cd92:	push   r14
  42cd94:	push   r13
  42cd96:	push   r12
  42cd98:	push   rbx
  42cd99:	mov    rax,QWORD PTR [rdi+0x18]
  42cd9d:	test   rax,rax
  42cda0:	je     42cdd6 <fb_name_table_visit@@Base+0x46>
  42cda2:	mov    r14,rdx
  42cda5:	mov    r15,rsi
  42cda8:	mov    r12,rdi
  42cdab:	mov    r13,QWORD PTR [rdi]
  42cdae:	xor    ebx,ebx
  42cdb0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42cdb5:	mov    rcx,rsi
  42cdb8:	or     rcx,0x2
  42cdbc:	cmp    rcx,0x2
  42cdc0:	je     42cdcd <fb_name_table_visit@@Base+0x3d>
  42cdc2:	mov    rdi,r14
  42cdc5:	call   r15
  42cdc8:	mov    rax,QWORD PTR [r12+0x18]
  42cdcd:	add    rbx,0x1
  42cdd1:	cmp    rbx,rax
  42cdd4:	jb     42cdb0 <fb_name_table_visit@@Base+0x20>
  42cdd6:	pop    rbx
  42cdd7:	pop    r12
  42cdd9:	pop    r13
  42cddb:	pop    r14
  42cddd:	pop    r15
  42cddf:	ret    

000000000042cde0 <fb_value_set_clear@@Base>:
  42cde0:	push   rbx
  42cde1:	mov    rbx,rdi
  42cde4:	mov    rdi,QWORD PTR [rdi]
  42cde7:	test   rdi,rdi
  42cdea:	je     42cdf1 <fb_value_set_clear@@Base+0x11>
  42cdec:	call   406040 <free@plt>
  42cdf1:	vxorps xmm0,xmm0,xmm0
  42cdf5:	vmovups YMMWORD PTR [rbx],ymm0
  42cdf9:	pop    rbx
  42cdfa:	vzeroupper 
  42cdfd:	ret    
  42cdfe:	xchg   ax,ax

000000000042ce00 <fb_value_set_destroy@@Base>:
  42ce00:	push   r15
  42ce02:	push   r14
  42ce04:	push   r13
  42ce06:	push   r12
  42ce08:	push   rbx
  42ce09:	mov    r12,rdi
  42ce0c:	test   rsi,rsi
  42ce0f:	je     42ce56 <fb_value_set_destroy@@Base+0x56>
  42ce11:	mov    rax,QWORD PTR [r12+0x18]
  42ce16:	test   rax,rax
  42ce19:	je     42ce56 <fb_value_set_destroy@@Base+0x56>
  42ce1b:	mov    r14,rdx
  42ce1e:	mov    r15,rsi
  42ce21:	mov    r13,QWORD PTR [r12]
  42ce25:	xor    ebx,ebx
  42ce27:	nop    WORD PTR [rax+rax*1+0x0]
  42ce30:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42ce35:	mov    rcx,rsi
  42ce38:	or     rcx,0x2
  42ce3c:	cmp    rcx,0x2
  42ce40:	je     42ce4d <fb_value_set_destroy@@Base+0x4d>
  42ce42:	mov    rdi,r14
  42ce45:	call   r15
  42ce48:	mov    rax,QWORD PTR [r12+0x18]
  42ce4d:	add    rbx,0x1
  42ce51:	cmp    rbx,rax
  42ce54:	jb     42ce30 <fb_value_set_destroy@@Base+0x30>
  42ce56:	mov    rdi,QWORD PTR [r12]
  42ce5a:	test   rdi,rdi
  42ce5d:	je     42ce64 <fb_value_set_destroy@@Base+0x64>
  42ce5f:	call   406040 <free@plt>
  42ce64:	vxorps xmm0,xmm0,xmm0
  42ce68:	vmovups YMMWORD PTR [r12],ymm0
  42ce6e:	pop    rbx
  42ce6f:	pop    r12
  42ce71:	pop    r13
  42ce73:	pop    r14
  42ce75:	pop    r15
  42ce77:	vzeroupper 
  42ce7a:	ret    
  42ce7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ce80 <fb_value_set_init@@Base>:
  42ce80:	push   r14
  42ce82:	push   rbx
  42ce83:	push   rax
  42ce84:	mov    r14,rdi
  42ce87:	mov    eax,0x4
  42ce8c:	nop    DWORD PTR [rax+0x0]
  42ce90:	mov    rbx,rax
  42ce93:	imul   rcx,rax,0xb3
  42ce9a:	shr    rcx,0x8
  42ce9e:	lea    rax,[rax+rax*1]
  42cea2:	cmp    rcx,rsi
  42cea5:	jb     42ce90 <fb_value_set_init@@Base+0x10>
  42cea7:	mov    esi,0x8
  42ceac:	mov    rdi,rbx
  42ceaf:	call   406140 <calloc@plt>
  42ceb4:	mov    QWORD PTR [r14],rax
  42ceb7:	test   rax,rax
  42ceba:	je     42cece <fb_value_set_init@@Base+0x4e>
  42cebc:	vxorps xmm0,xmm0,xmm0
  42cec0:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42cec6:	mov    QWORD PTR [r14+0x18],rbx
  42ceca:	xor    eax,eax
  42cecc:	jmp    42ced3 <fb_value_set_init@@Base+0x53>
  42cece:	mov    eax,0xffffffff
  42ced3:	add    rsp,0x8
  42ced7:	pop    rbx
  42ced8:	pop    r14
  42ceda:	ret    
  42cedb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cee0 <fb_value_set_resize@@Base>:
  42cee0:	jmp    42cef0 <fb_value_set_resize@@Base+0x10>
  42cee2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ceec:	nop    DWORD PTR [rax+0x0]
  42cef0:	push   r15
  42cef2:	push   r14
  42cef4:	push   r12
  42cef6:	push   rbx
  42cef7:	sub    rsp,0x28
  42cefb:	mov    r14,rdi
  42cefe:	mov    r12,QWORD PTR [rdi]
  42cf01:	mov    rax,QWORD PTR [rdi+0x10]
  42cf05:	cmp    rax,rsi
  42cf08:	cmova  rsi,rax
  42cf0c:	mov    eax,0x4
  42cf11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cf1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf20:	mov    rbx,rax
  42cf23:	imul   rcx,rax,0xb3
  42cf2a:	shr    rcx,0x8
  42cf2e:	lea    rax,[rax+rax*1]
  42cf32:	cmp    rcx,rsi
  42cf35:	jb     42cf20 <fb_value_set_resize@@Base+0x40>
  42cf37:	mov    esi,0x8
  42cf3c:	mov    rdi,rbx
  42cf3f:	call   406140 <calloc@plt>
  42cf44:	mov    QWORD PTR [rsp+0x8],rax
  42cf49:	test   rax,rax
  42cf4c:	je     42cfbd <fb_value_set_resize@@Base+0xdd>
  42cf4e:	vxorps xmm0,xmm0,xmm0
  42cf52:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42cf58:	mov    QWORD PTR [rsp+0x20],rbx
  42cf5d:	mov    rax,QWORD PTR [r14+0x18]
  42cf61:	test   rax,rax
  42cf64:	je     42cfa1 <fb_value_set_resize@@Base+0xc1>
  42cf66:	xor    ebx,ebx
  42cf68:	lea    r15,[rsp+0x8]
  42cf6d:	nop    DWORD PTR [rax]
  42cf70:	mov    rsi,QWORD PTR [r12+rbx*8]
  42cf74:	mov    rcx,rsi
  42cf77:	or     rcx,0x2
  42cf7b:	cmp    rcx,0x2
  42cf7f:	je     42cf95 <fb_value_set_resize@@Base+0xb5>
  42cf81:	mov    ecx,0x3
  42cf86:	mov    rdi,r15
  42cf89:	mov    rdx,rsi
  42cf8c:	call   42cff0 <fb_value_set_insert@@Base+0x10>
  42cf91:	mov    rax,QWORD PTR [r14+0x18]
  42cf95:	add    rbx,0x1
  42cf99:	cmp    rbx,rax
  42cf9c:	jb     42cf70 <fb_value_set_resize@@Base+0x90>
  42cf9e:	mov    r12,QWORD PTR [r14]
  42cfa1:	test   r12,r12
  42cfa4:	je     42cfae <fb_value_set_resize@@Base+0xce>
  42cfa6:	mov    rdi,r12
  42cfa9:	call   406040 <free@plt>
  42cfae:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42cfb4:	vmovups YMMWORD PTR [r14],ymm0
  42cfb9:	xor    eax,eax
  42cfbb:	jmp    42cfc2 <fb_value_set_resize@@Base+0xe2>
  42cfbd:	mov    eax,0xffffffff
  42cfc2:	add    rsp,0x28
  42cfc6:	pop    rbx
  42cfc7:	pop    r12
  42cfc9:	pop    r14
  42cfcb:	pop    r15
  42cfcd:	vzeroupper 
  42cfd0:	ret    
  42cfd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cfdb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cfe0 <fb_value_set_insert@@Base>:
  42cfe0:	mov    rdx,rcx
  42cfe3:	mov    ecx,r8d
  42cfe6:	jmp    42cff0 <fb_value_set_insert@@Base+0x10>
  42cfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  42cff0:	push   rbp
  42cff1:	push   r15
  42cff3:	push   r14
  42cff5:	push   r13
  42cff7:	push   r12
  42cff9:	push   rbx
  42cffa:	push   rax
  42cffb:	cmp    rdx,0x2
  42cfff:	je     42d184 <fb_value_set_insert@@Base+0x1a4>
  42d005:	mov    r14,rdx
  42d008:	cmp    rdx,0x1
  42d00c:	je     42d1a3 <fb_value_set_insert@@Base+0x1c3>
  42d012:	test   r14,r14
  42d015:	je     42d1c2 <fb_value_set_insert@@Base+0x1e2>
  42d01b:	mov    r15d,ecx
  42d01e:	mov    r12,rsi
  42d021:	mov    r13,rdi
  42d024:	mov    rsi,QWORD PTR [rdi+0x10]
  42d028:	mov    r9,QWORD PTR [rdi+0x18]
  42d02c:	imul   rax,r9,0xb3
  42d033:	shr    rax,0x8
  42d037:	cmp    rsi,rax
  42d03a:	jb     42d053 <fb_value_set_insert@@Base+0x73>
  42d03c:	add    rsi,rsi
  42d03f:	mov    rdi,r13
  42d042:	call   42cef0 <fb_value_set_resize@@Base+0x10>
  42d047:	test   eax,eax
  42d049:	jne    42d1e1 <fb_value_set_insert@@Base+0x201>
  42d04f:	mov    r9,QWORD PTR [r13+0x18]
  42d053:	mov    rdx,QWORD PTR [r13+0x0]
  42d057:	add    r9,0xffffffffffffffff
  42d05b:	movzx  r8d,WORD PTR [r12+0x10]
  42d061:	cmp    r8d,0x6
  42d065:	je     42d08b <fb_value_set_insert@@Base+0xab>
  42d067:	movzx  eax,r8w
  42d06b:	cmp    eax,0x5
  42d06e:	je     42d080 <fb_value_set_insert@@Base+0xa0>
  42d070:	cmp    eax,0x4
  42d073:	jne    42d0a1 <fb_value_set_insert@@Base+0xc1>
  42d075:	mov    eax,0x2f693b56
  42d07a:	xor    rax,QWORD PTR [r12]
  42d07e:	jmp    42d096 <fb_value_set_insert@@Base+0xb6>
  42d080:	mov    eax,0x2f693b57
  42d085:	xor    rax,QWORD PTR [r12]
  42d089:	jmp    42d096 <fb_value_set_insert@@Base+0xb6>
  42d08b:	movzx  eax,BYTE PTR [r12]
  42d090:	xor    rax,0x2f693b54
  42d096:	mov    edi,0x9e3779b1
  42d09b:	imul   rdi,rax
  42d09f:	jmp    42d0a3 <fb_value_set_insert@@Base+0xc3>
  42d0a1:	xor    edi,edi
  42d0a3:	mov    rax,rdi
  42d0a6:	and    rax,r9
  42d0a9:	mov    esi,r15d
  42d0ac:	or     esi,0x1
  42d0af:	cmp    esi,0x3
  42d0b2:	jne    42d0e1 <fb_value_set_insert@@Base+0x101>
  42d0b4:	add    QWORD PTR [r13+0x10],0x1
  42d0b9:	jmp    42d0c6 <fb_value_set_insert@@Base+0xe6>
  42d0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d0c0:	mov    rax,rdi
  42d0c3:	and    rax,r9
  42d0c6:	add    rdi,0x1
  42d0ca:	mov    rsi,QWORD PTR [rdx+rax*8]
  42d0ce:	or     rsi,0x2
  42d0d2:	cmp    rsi,0x2
  42d0d6:	jne    42d0c0 <fb_value_set_insert@@Base+0xe0>
  42d0d8:	lea    rbx,[rdx+rax*8]
  42d0dc:	jmp    42d170 <fb_value_set_insert@@Base+0x190>
  42d0e1:	add    rdi,0x1
  42d0e5:	xor    ebp,ebp
  42d0e7:	jmp    42d0fa <fb_value_set_insert@@Base+0x11a>
  42d0e9:	nop    DWORD PTR [rax+0x0]
  42d0f0:	mov    rax,rdi
  42d0f3:	and    rax,r9
  42d0f6:	add    rdi,0x1
  42d0fa:	lea    rbx,[rdx+rax*8]
  42d0fe:	mov    rax,QWORD PTR [rdx+rax*8]
  42d102:	cmp    rax,0x2
  42d106:	je     42d140 <fb_value_set_insert@@Base+0x160>
  42d108:	test   rax,rax
  42d10b:	je     42d164 <fb_value_set_insert@@Base+0x184>
  42d10d:	cmp    r8w,WORD PTR [rax+0x10]
  42d112:	jne    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d114:	movzx  esi,r8w
  42d118:	cmp    esi,0x4
  42d11b:	je     42d154 <fb_value_set_insert@@Base+0x174>
  42d11d:	cmp    esi,0x6
  42d120:	je     42d149 <fb_value_set_insert@@Base+0x169>
  42d122:	cmp    esi,0x5
  42d125:	jne    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d127:	mov    rsi,QWORD PTR [r12]
  42d12b:	cmp    rsi,QWORD PTR [rax]
  42d12e:	jne    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d130:	jmp    42d15d <fb_value_set_insert@@Base+0x17d>
  42d132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d13c:	nop    DWORD PTR [rax+0x0]
  42d140:	test   rbp,rbp
  42d143:	cmove  rbp,rbx
  42d147:	jmp    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d149:	movzx  ecx,BYTE PTR [r12]
  42d14e:	cmp    cl,BYTE PTR [rax]
  42d150:	jne    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d152:	jmp    42d15d <fb_value_set_insert@@Base+0x17d>
  42d154:	mov    rcx,QWORD PTR [r12]
  42d158:	cmp    rcx,QWORD PTR [rax]
  42d15b:	jne    42d0f0 <fb_value_set_insert@@Base+0x110>
  42d15d:	test   r15d,r15d
  42d160:	jne    42d175 <fb_value_set_insert@@Base+0x195>
  42d162:	jmp    42d172 <fb_value_set_insert@@Base+0x192>
  42d164:	test   rbp,rbp
  42d167:	cmovne rbx,rbp
  42d16b:	add    QWORD PTR [r13+0x10],0x1
  42d170:	xor    eax,eax
  42d172:	mov    QWORD PTR [rbx],r14
  42d175:	add    rsp,0x8
  42d179:	pop    rbx
  42d17a:	pop    r12
  42d17c:	pop    r13
  42d17e:	pop    r14
  42d180:	pop    r15
  42d182:	pop    rbp
  42d183:	ret    
  42d184:	lea    rdi,[rip+0x194d0]        # 44665b <str_set_deleted@@Base+0xd3>
  42d18b:	lea    rsi,[rip+0x19415]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42d192:	lea    rcx,[rip+0x19478]        # 446611 <str_set_deleted@@Base+0x89>
  42d199:	mov    edx,0x73
  42d19e:	call   4060f0 <__assert_fail@plt>
  42d1a3:	lea    rdi,[rip+0x194c8]        # 446672 <str_set_deleted@@Base+0xea>
  42d1aa:	lea    rsi,[rip+0x193f6]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42d1b1:	lea    rcx,[rip+0x19459]        # 446611 <str_set_deleted@@Base+0x89>
  42d1b8:	mov    edx,0x74
  42d1bd:	call   4060f0 <__assert_fail@plt>
  42d1c2:	lea    rdi,[rip+0x193c7]        # 446590 <str_set_deleted@@Base+0x8>
  42d1c9:	lea    rsi,[rip+0x193d7]        # 4465a7 <str_set_deleted@@Base+0x1f>
  42d1d0:	lea    rcx,[rip+0x1943a]        # 446611 <str_set_deleted@@Base+0x89>
  42d1d7:	mov    edx,0x72
  42d1dc:	call   4060f0 <__assert_fail@plt>
  42d1e1:	mov    rax,QWORD PTR [rip+0x23e10]        # 450ff8 <stderr@GLIBC_2.2.5>
  42d1e8:	mov    rdi,QWORD PTR [rax]
  42d1eb:	lea    rsi,[rip+0x19495]        # 446687 <str_set_deleted@@Base+0xff>
  42d1f2:	lea    rdx,[rip+0x194a5]        # 44669e <str_set_deleted@@Base+0x116>
  42d1f9:	xor    eax,eax
  42d1fb:	call   406170 <fprintf@plt>
  42d200:	mov    edi,0x1
  42d205:	call   406200 <exit@plt>
  42d20a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d210 <fb_value_set_insert_item@@Base>:
  42d210:	mov    eax,edx
  42d212:	mov    rdx,rsi
  42d215:	mov    ecx,eax
  42d217:	jmp    42cff0 <fb_value_set_insert@@Base+0x10>
  42d21c:	nop    DWORD PTR [rax+0x0]

000000000042d220 <fb_value_set_find@@Base>:
  42d220:	mov    r10,QWORD PTR [rdi]
  42d223:	test   r10,r10
  42d226:	je     42d24c <fb_value_set_find@@Base+0x2c>
  42d228:	mov    rdx,QWORD PTR [rdi+0x18]
  42d22c:	movzx  r8d,WORD PTR [rsi+0x10]
  42d231:	cmp    r8d,0x6
  42d235:	je     42d24f <fb_value_set_find@@Base+0x2f>
  42d237:	movzx  eax,r8w
  42d23b:	cmp    eax,0x5
  42d23e:	je     42d25a <fb_value_set_find@@Base+0x3a>
  42d240:	cmp    eax,0x4
  42d243:	jne    42d26d <fb_value_set_find@@Base+0x4d>
  42d245:	mov    eax,0x2f693b56
  42d24a:	jmp    42d25f <fb_value_set_find@@Base+0x3f>
  42d24c:	xor    eax,eax
  42d24e:	ret    
  42d24f:	movzx  eax,BYTE PTR [rsi]
  42d252:	xor    rax,0x2f693b54
  42d258:	jmp    42d262 <fb_value_set_find@@Base+0x42>
  42d25a:	mov    eax,0x2f693b57
  42d25f:	xor    rax,QWORD PTR [rsi]
  42d262:	mov    edi,0x9e3779b1
  42d267:	imul   rdi,rax
  42d26b:	jmp    42d26f <fb_value_set_find@@Base+0x4f>
  42d26d:	xor    edi,edi
  42d26f:	add    rdx,0xffffffffffffffff
  42d273:	movzx  r9d,r8w
  42d277:	jmp    42d284 <fb_value_set_find@@Base+0x64>
  42d279:	nop    DWORD PTR [rax+0x0]
  42d280:	add    rdi,0x1
  42d284:	mov    rax,rdi
  42d287:	and    rax,rdx
  42d28a:	mov    rax,QWORD PTR [r10+rax*8]
  42d28e:	cmp    rax,0x2
  42d292:	je     42d280 <fb_value_set_find@@Base+0x60>
  42d294:	test   rax,rax
  42d297:	je     42d2c4 <fb_value_set_find@@Base+0xa4>
  42d299:	cmp    r8w,WORD PTR [rax+0x10]
  42d29e:	jne    42d280 <fb_value_set_find@@Base+0x60>
  42d2a0:	cmp    r9d,0x4
  42d2a4:	je     42d2b2 <fb_value_set_find@@Base+0x92>
  42d2a6:	cmp    r9d,0x6
  42d2aa:	je     42d2bc <fb_value_set_find@@Base+0x9c>
  42d2ac:	cmp    r9d,0x5
  42d2b0:	jne    42d280 <fb_value_set_find@@Base+0x60>
  42d2b2:	mov    rcx,QWORD PTR [rsi]
  42d2b5:	cmp    rcx,QWORD PTR [rax]
  42d2b8:	jne    42d280 <fb_value_set_find@@Base+0x60>
  42d2ba:	jmp    42d2c3 <fb_value_set_find@@Base+0xa3>
  42d2bc:	movzx  ecx,BYTE PTR [rsi]
  42d2bf:	cmp    cl,BYTE PTR [rax]
  42d2c1:	jne    42d280 <fb_value_set_find@@Base+0x60>
  42d2c3:	ret    
  42d2c4:	xor    eax,eax
  42d2c6:	ret    
  42d2c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d2d0 <fb_value_set_find_item@@Base>:
  42d2d0:	mov    r10,QWORD PTR [rdi]
  42d2d3:	test   r10,r10
  42d2d6:	je     42d2fc <fb_value_set_find_item@@Base+0x2c>
  42d2d8:	mov    rdx,QWORD PTR [rdi+0x18]
  42d2dc:	movzx  r8d,WORD PTR [rsi+0x10]
  42d2e1:	cmp    r8d,0x6
  42d2e5:	je     42d2ff <fb_value_set_find_item@@Base+0x2f>
  42d2e7:	movzx  eax,r8w
  42d2eb:	cmp    eax,0x5
  42d2ee:	je     42d30a <fb_value_set_find_item@@Base+0x3a>
  42d2f0:	cmp    eax,0x4
  42d2f3:	jne    42d31d <fb_value_set_find_item@@Base+0x4d>
  42d2f5:	mov    eax,0x2f693b56
  42d2fa:	jmp    42d30f <fb_value_set_find_item@@Base+0x3f>
  42d2fc:	xor    eax,eax
  42d2fe:	ret    
  42d2ff:	movzx  eax,BYTE PTR [rsi]
  42d302:	xor    rax,0x2f693b54
  42d308:	jmp    42d312 <fb_value_set_find_item@@Base+0x42>
  42d30a:	mov    eax,0x2f693b57
  42d30f:	xor    rax,QWORD PTR [rsi]
  42d312:	mov    edi,0x9e3779b1
  42d317:	imul   rdi,rax
  42d31b:	jmp    42d31f <fb_value_set_find_item@@Base+0x4f>
  42d31d:	xor    edi,edi
  42d31f:	add    rdx,0xffffffffffffffff
  42d323:	movzx  r9d,r8w
  42d327:	jmp    42d334 <fb_value_set_find_item@@Base+0x64>
  42d329:	nop    DWORD PTR [rax+0x0]
  42d330:	add    rdi,0x1
  42d334:	mov    rax,rdi
  42d337:	and    rax,rdx
  42d33a:	mov    rax,QWORD PTR [r10+rax*8]
  42d33e:	cmp    rax,0x2
  42d342:	je     42d330 <fb_value_set_find_item@@Base+0x60>
  42d344:	test   rax,rax
  42d347:	je     42d374 <fb_value_set_find_item@@Base+0xa4>
  42d349:	cmp    r8w,WORD PTR [rax+0x10]
  42d34e:	jne    42d330 <fb_value_set_find_item@@Base+0x60>
  42d350:	cmp    r9d,0x4
  42d354:	je     42d362 <fb_value_set_find_item@@Base+0x92>
  42d356:	cmp    r9d,0x6
  42d35a:	je     42d36c <fb_value_set_find_item@@Base+0x9c>
  42d35c:	cmp    r9d,0x5
  42d360:	jne    42d330 <fb_value_set_find_item@@Base+0x60>
  42d362:	mov    rcx,QWORD PTR [rsi]
  42d365:	cmp    rcx,QWORD PTR [rax]
  42d368:	jne    42d330 <fb_value_set_find_item@@Base+0x60>
  42d36a:	jmp    42d373 <fb_value_set_find_item@@Base+0xa3>
  42d36c:	movzx  ecx,BYTE PTR [rsi]
  42d36f:	cmp    cl,BYTE PTR [rax]
  42d371:	jne    42d330 <fb_value_set_find_item@@Base+0x60>
  42d373:	ret    
  42d374:	xor    eax,eax
  42d376:	ret    
  42d377:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d380 <fb_value_set_remove@@Base>:
  42d380:	jmp    42d390 <fb_value_set_remove@@Base+0x10>
  42d382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d38c:	nop    DWORD PTR [rax+0x0]
  42d390:	push   rbx
  42d391:	mov    r9,QWORD PTR [rdi]
  42d394:	test   r9,r9
  42d397:	je     42d442 <fb_value_set_remove@@Base+0xc2>
  42d39d:	mov    r11,QWORD PTR [rdi+0x18]
  42d3a1:	movzx  r8d,WORD PTR [rsi+0x10]
  42d3a6:	cmp    r8d,0x6
  42d3aa:	je     42d3c1 <fb_value_set_remove@@Base+0x41>
  42d3ac:	movzx  eax,r8w
  42d3b0:	cmp    eax,0x5
  42d3b3:	je     42d3cc <fb_value_set_remove@@Base+0x4c>
  42d3b5:	cmp    eax,0x4
  42d3b8:	jne    42d3df <fb_value_set_remove@@Base+0x5f>
  42d3ba:	mov    eax,0x2f693b56
  42d3bf:	jmp    42d3d1 <fb_value_set_remove@@Base+0x51>
  42d3c1:	movzx  eax,BYTE PTR [rsi]
  42d3c4:	xor    rax,0x2f693b54
  42d3ca:	jmp    42d3d4 <fb_value_set_remove@@Base+0x54>
  42d3cc:	mov    eax,0x2f693b57
  42d3d1:	xor    rax,QWORD PTR [rsi]
  42d3d4:	mov    edx,0x9e3779b1
  42d3d9:	imul   rdx,rax
  42d3dd:	jmp    42d3e1 <fb_value_set_remove@@Base+0x61>
  42d3df:	xor    edx,edx
  42d3e1:	add    r11,0xffffffffffffffff
  42d3e5:	movzx  r10d,r8w
  42d3e9:	jmp    42d3f4 <fb_value_set_remove@@Base+0x74>
  42d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d3f0:	add    rdx,0x1
  42d3f4:	mov    rcx,rdx
  42d3f7:	and    rcx,r11
  42d3fa:	mov    rax,QWORD PTR [r9+rcx*8]
  42d3fe:	cmp    rax,0x2
  42d402:	je     42d3f0 <fb_value_set_remove@@Base+0x70>
  42d404:	test   rax,rax
  42d407:	je     42d442 <fb_value_set_remove@@Base+0xc2>
  42d409:	cmp    r8w,WORD PTR [rax+0x10]
  42d40e:	jne    42d3f0 <fb_value_set_remove@@Base+0x70>
  42d410:	cmp    r10d,0x4
  42d414:	je     42d422 <fb_value_set_remove@@Base+0xa2>
  42d416:	cmp    r10d,0x6
  42d41a:	je     42d42c <fb_value_set_remove@@Base+0xac>
  42d41c:	cmp    r10d,0x5
  42d420:	jne    42d3f0 <fb_value_set_remove@@Base+0x70>
  42d422:	mov    rbx,QWORD PTR [rsi]
  42d425:	cmp    rbx,QWORD PTR [rax]
  42d428:	jne    42d3f0 <fb_value_set_remove@@Base+0x70>
  42d42a:	jmp    42d433 <fb_value_set_remove@@Base+0xb3>
  42d42c:	movzx  ebx,BYTE PTR [rsi]
  42d42f:	cmp    bl,BYTE PTR [rax]
  42d431:	jne    42d3f0 <fb_value_set_remove@@Base+0x70>
  42d433:	mov    QWORD PTR [r9+rcx*8],0x2
  42d43b:	add    QWORD PTR [rdi+0x10],0xffffffffffffffff
  42d440:	pop    rbx
  42d441:	ret    
  42d442:	xor    eax,eax
  42d444:	pop    rbx
  42d445:	ret    
  42d446:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042d450 <fb_value_set_remove_item@@Base>:
  42d450:	jmp    42d390 <fb_value_set_remove@@Base+0x10>
  42d455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d45f:	nop

000000000042d460 <fb_value_set_visit@@Base>:
  42d460:	push   r15
  42d462:	push   r14
  42d464:	push   r13
  42d466:	push   r12
  42d468:	push   rbx
  42d469:	mov    rax,QWORD PTR [rdi+0x18]
  42d46d:	test   rax,rax
  42d470:	je     42d4a6 <fb_value_set_visit@@Base+0x46>
  42d472:	mov    r14,rdx
  42d475:	mov    r15,rsi
  42d478:	mov    r12,rdi
  42d47b:	mov    r13,QWORD PTR [rdi]
  42d47e:	xor    ebx,ebx
  42d480:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42d485:	mov    rcx,rsi
  42d488:	or     rcx,0x2
  42d48c:	cmp    rcx,0x2
  42d490:	je     42d49d <fb_value_set_visit@@Base+0x3d>
  42d492:	mov    rdi,r14
  42d495:	call   r15
  42d498:	mov    rax,QWORD PTR [r12+0x18]
  42d49d:	add    rbx,0x1
  42d4a1:	cmp    rbx,rax
  42d4a4:	jb     42d480 <fb_value_set_visit@@Base+0x20>
  42d4a6:	pop    rbx
  42d4a7:	pop    r12
  42d4a9:	pop    r13
  42d4ab:	pop    r14
  42d4ad:	pop    r15
  42d4af:	ret    

000000000042d4b0 <__libc_csu_init@@Base>:
  42d4b0:	endbr64 
  42d4b4:	push   r15
  42d4b6:	lea    r15,[rip+0x23553]        # 450a10 <fb_value_set_deleted@@Base+0x5fb0>
  42d4bd:	push   r14
  42d4bf:	mov    r14,rdx
  42d4c2:	push   r13
  42d4c4:	mov    r13,rsi
  42d4c7:	push   r12
  42d4c9:	mov    r12d,edi
  42d4cc:	push   rbp
  42d4cd:	lea    rbp,[rip+0x23544]        # 450a18 <fb_value_set_deleted@@Base+0x5fb8>
  42d4d4:	push   rbx
  42d4d5:	sub    rbp,r15
  42d4d8:	sub    rsp,0x8
  42d4dc:	call   406000 <__ctype_toupper_loc@plt-0x30>
  42d4e1:	sar    rbp,0x3
  42d4e5:	je     42d506 <__libc_csu_init@@Base+0x56>
  42d4e7:	xor    ebx,ebx
  42d4e9:	nop    DWORD PTR [rax+0x0]
  42d4f0:	mov    rdx,r14
  42d4f3:	mov    rsi,r13
  42d4f6:	mov    edi,r12d
  42d4f9:	call   QWORD PTR [r15+rbx*8]
  42d4fd:	add    rbx,0x1
  42d501:	cmp    rbp,rbx
  42d504:	jne    42d4f0 <__libc_csu_init@@Base+0x40>
  42d506:	add    rsp,0x8
  42d50a:	pop    rbx
  42d50b:	pop    rbp
  42d50c:	pop    r12
  42d50e:	pop    r13
  42d510:	pop    r14
  42d512:	pop    r15
  42d514:	ret    
  42d515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042d520 <__libc_csu_fini@@Base>:
  42d520:	endbr64 
  42d524:	ret    

Disassembly of section .fini:

000000000042d528 <.fini>:
  42d528:	endbr64 
  42d52c:	sub    rsp,0x8
  42d530:	add    rsp,0x8
  42d534:	ret    
