
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <__snprintf_chk@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <__snprintf_chk@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <__snprintf_chk@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <__snprintf_chk@GLIBC_2.3.4>
  402036:	push   0x0
  40203b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <free@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402050 <abort@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <abort@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402060 <__errno_location@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <__errno_location@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402080 <__stack_chk_fail@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <__stack_chk_fail@GLIBC_2.4>
  402086:	push   0x5
  40208b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402090 <mmap@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <mmap@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020a0 <strchr@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <strchr@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020b0 <__tls_get_addr@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <__tls_get_addr@GLIBC_2.3>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020c0 <strcmp@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <strcmp@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020d0 <fprintf@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <fprintf@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020e0 <memcpy@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <memcpy@GLIBC_2.14>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020f0 <realloc@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <realloc@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402100 <munmap@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <munmap@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402110 <my_strdup@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <my_strdup>
  402116:	push   0xe
  40211b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402120 <mprotect@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <mprotect@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402130 <__fprintf_chk@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <__fprintf_chk@GLIBC_2.3.4>
  402136:	push   0x10
  40213b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <__snprintf_chk@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x4044a0
  40217a:	mov    rcx,0x404430
  402181:	mov    rdi,0x402a4c
  402188:	call   QWORD PTR [rip+0x5e52]        # 407fe0 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080cf
  4021a5:	push   rbp
  4021a6:	sub    rax,0x4080c8
  4021ac:	cmp    rax,0xe
  4021b0:	mov    rbp,rsp
  4021b3:	jbe    4021d0 <_start@@Base+0x70>
  4021b5:	mov    eax,0x0
  4021ba:	test   rax,rax
  4021bd:	je     4021d0 <_start@@Base+0x70>
  4021bf:	pop    rbp
  4021c0:	mov    edi,0x4080c8
  4021c5:	jmp    rax
  4021c7:	nop    WORD PTR [rax+rax*1+0x0]
  4021d0:	pop    rbp
  4021d1:	ret    
  4021d2:	nop    DWORD PTR [rax+0x0]
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	mov    esi,0x4080c8
  4021e5:	push   rbp
  4021e6:	sub    rsi,0x4080c8
  4021ed:	sar    rsi,0x3
  4021f1:	mov    rbp,rsp
  4021f4:	mov    rax,rsi
  4021f7:	shr    rax,0x3f
  4021fb:	add    rsi,rax
  4021fe:	sar    rsi,1
  402201:	je     402218 <_start@@Base+0xb8>
  402203:	mov    eax,0x0
  402208:	test   rax,rax
  40220b:	je     402218 <_start@@Base+0xb8>
  40220d:	pop    rbp
  40220e:	mov    edi,0x4080c8
  402213:	jmp    rax
  402215:	nop    DWORD PTR [rax]
  402218:	pop    rbp
  402219:	ret    
  40221a:	nop    WORD PTR [rax+rax*1+0x0]
  402220:	cmp    BYTE PTR [rip+0x5ea9],0x0        # 4080d0 <__bss_start@@Base+0x8>
  402227:	jne    40223a <_start@@Base+0xda>
  402229:	push   rbp
  40222a:	mov    rbp,rsp
  40222d:	call   4021a0 <_start@@Base+0x40>
  402232:	pop    rbp
  402233:	mov    BYTE PTR [rip+0x5e96],0x1        # 4080d0 <__bss_start@@Base+0x8>
  40223a:	repz ret 
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	mov    edi,0x407dd0
  402245:	cmp    QWORD PTR [rdi],0x0
  402249:	jne    402250 <_start@@Base+0xf0>
  40224b:	jmp    4021e0 <_start@@Base+0x80>
  40224d:	nop    DWORD PTR [rax]
  402250:	mov    eax,0x0
  402255:	test   rax,rax
  402258:	je     40224b <_start@@Base+0xeb>
  40225a:	push   rbp
  40225b:	mov    rbp,rsp
  40225e:	call   rax
  402260:	pop    rbp
  402261:	jmp    4021e0 <_start@@Base+0x80>
  402266:	push   rbp
  402267:	mov    rbp,rsp
  40226a:	sub    rsp,0xc0
  402271:	mov    QWORD PTR [rbp-0xb8],rdi
  402278:	mov    rax,QWORD PTR fs:0x28
  402281:	mov    QWORD PTR [rbp-0x8],rax
  402285:	xor    eax,eax
  402287:	call   402c20 <mmk_matcher_ctx@@Base>
  40228c:	mov    QWORD PTR [rbp-0x88],rax
  402293:	cmp    QWORD PTR [rbp-0x88],0x0
  40229b:	je     402506 <_start@@Base+0x3a6>
  4022a1:	call   403ab0 <mmk_ctx@@Base>
  4022a6:	mov    rdi,rax
  4022a9:	call   4036e9 <mmk_stub_context@@Base>
  4022ae:	mov    QWORD PTR [rbp-0x80],rax
  4022b2:	mov    rax,QWORD PTR [rbp-0x88]
  4022b9:	mov    eax,DWORD PTR [rax]
  4022bb:	test   eax,eax
  4022bd:	jne    40231f <_start@@Base+0x1bf>
  4022bf:	mov    edi,0x50
  4022c4:	call   4041c0 <mmk_malloc@@Base>
  4022c9:	mov    QWORD PTR [rbp-0x78],rax
  4022cd:	call   4042e7 <mmk_when_get_result@@Base>
  4022d2:	mov    rdx,rax
  4022d5:	mov    rax,QWORD PTR [rbp-0x78]
  4022d9:	mov    rcx,QWORD PTR [rdx]
  4022dc:	mov    QWORD PTR [rax+0x10],rcx
  4022e0:	mov    rcx,QWORD PTR [rdx+0x8]
  4022e4:	mov    QWORD PTR [rax+0x18],rcx
  4022e8:	mov    rcx,QWORD PTR [rdx+0x10]
  4022ec:	mov    QWORD PTR [rax+0x20],rcx
  4022f0:	mov    rdx,QWORD PTR [rdx+0x18]
  4022f4:	mov    QWORD PTR [rax+0x28],rdx
  4022f8:	mov    rdx,QWORD PTR [rbp-0xb8]
  4022ff:	mov    rax,QWORD PTR [rbp-0x78]
  402303:	mov    QWORD PTR [rax+0x48],rdx
  402307:	mov    rdx,QWORD PTR [rbp-0x78]
  40230b:	mov    rax,QWORD PTR [rbp-0x80]
  40230f:	mov    rsi,rdx
  402312:	mov    rdi,rax
  402315:	call   404305 <mmk_when_impl@@Base>
  40231a:	jmp    4024fa <_start@@Base+0x39a>
  40231f:	mov    rax,QWORD PTR [rbp-0x88]
  402326:	mov    eax,DWORD PTR [rax]
  402328:	cmp    eax,0x1
  40232b:	jne    4024fa <_start@@Base+0x39a>
  402331:	mov    QWORD PTR [rbp-0xa8],0x0
  40233c:	mov    rax,QWORD PTR [rbp-0x80]
  402340:	mov    rdi,rax
  402343:	call   402fbf <mmk_mock_params_begin@@Base>
  402348:	mov    QWORD PTR [rbp-0xa0],rax
  40234f:	jmp    40249a <_start@@Base+0x33a>
  402354:	mov    rax,QWORD PTR [rbp-0x88]
  40235b:	mov    QWORD PTR [rbp-0x70],rax
  40235f:	mov    rax,QWORD PTR [rbp-0x70]
  402363:	mov    rax,QWORD PTR [rax+0x10]
  402367:	test   rax,rax
  40236a:	je     40243d <_start@@Base+0x2dd>
  402370:	mov    rax,QWORD PTR [rbp-0x70]
  402374:	mov    rax,QWORD PTR [rax+0x10]
  402378:	mov    QWORD PTR [rbp-0x70],rax
  40237c:	mov    rax,QWORD PTR [rbp-0x70]
  402380:	mov    eax,DWORD PTR [rax]
  402382:	test   eax,eax
  402384:	je     402463 <_start@@Base+0x303>
  40238a:	mov    rax,QWORD PTR [rbp-0x70]
  40238e:	mov    eax,DWORD PTR [rax]
  402390:	test   eax,eax
  402392:	jns    402408 <_start@@Base+0x2a8>
  402394:	mov    rax,QWORD PTR [rbp-0xa0]
  40239b:	lea    rcx,[rax+0x18]
  40239f:	lea    rax,[rbp-0xb8]
  4023a6:	mov    edx,0x8
  4023ab:	mov    rsi,rax
  4023ae:	mov    rdi,rcx
  4023b1:	call   403ff0 <mmk_memcmp@@Base>
  4023b6:	mov    DWORD PTR [rbp-0xb0],eax
  4023bc:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023c3:	jne    4023d6 <_start@@Base+0x276>
  4023c5:	mov    rax,QWORD PTR [rbp-0x70]
  4023c9:	mov    eax,DWORD PTR [rax]
  4023cb:	and    eax,0x2
  4023ce:	test   eax,eax
  4023d0:	je     402476 <_start@@Base+0x316>
  4023d6:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023dd:	jns    4023f0 <_start@@Base+0x290>
  4023df:	mov    rax,QWORD PTR [rbp-0x70]
  4023e3:	mov    eax,DWORD PTR [rax]
  4023e5:	and    eax,0x4
  4023e8:	test   eax,eax
  4023ea:	je     402479 <_start@@Base+0x319>
  4023f0:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023f7:	jle    402463 <_start@@Base+0x303>
  4023f9:	mov    rax,QWORD PTR [rbp-0x70]
  4023fd:	mov    eax,DWORD PTR [rax]
  4023ff:	and    eax,0x8
  402402:	test   eax,eax
  402404:	jne    402463 <_start@@Base+0x303>
  402406:	jmp    40247d <_start@@Base+0x31d>
  402408:	mov    rax,QWORD PTR [rbp-0x70]
  40240c:	mov    eax,DWORD PTR [rax]
  40240e:	cmp    eax,0x1
  402411:	jne    402463 <_start@@Base+0x303>
  402413:	mov    rax,QWORD PTR [rbp-0x70]
  402417:	mov    rdi,rax
  40241a:	call   402cb0 <mmk_matcher_get_predicate@@Base>
  40241f:	mov    QWORD PTR [rbp-0x68],rax
  402423:	mov    rax,QWORD PTR [rbp-0xa0]
  40242a:	mov    rdx,QWORD PTR [rax+0x18]
  40242e:	mov    rax,QWORD PTR [rbp-0x68]
  402432:	mov    rdi,rdx
  402435:	call   rax
  402437:	test   eax,eax
  402439:	jne    402463 <_start@@Base+0x303>
  40243b:	jmp    40247d <_start@@Base+0x31d>
  40243d:	mov    rax,QWORD PTR [rbp-0xa0]
  402444:	lea    rcx,[rax+0x18]
  402448:	lea    rax,[rbp-0xb8]
  40244f:	mov    edx,0x8
  402454:	mov    rsi,rax
  402457:	mov    rdi,rcx
  40245a:	call   403ff0 <mmk_memcmp@@Base>
  40245f:	test   eax,eax
  402461:	jne    40247c <_start@@Base+0x31c>
  402463:	mov    rax,QWORD PTR [rbp-0xa0]
  40246a:	mov    rax,QWORD PTR [rax]
  40246d:	add    QWORD PTR [rbp-0xa8],rax
  402474:	jmp    40247d <_start@@Base+0x31d>
  402476:	nop
  402477:	jmp    40247d <_start@@Base+0x31d>
  402479:	nop
  40247a:	jmp    40247d <_start@@Base+0x31d>
  40247c:	nop
  40247d:	mov    rdx,QWORD PTR [rbp-0xa0]
  402484:	mov    rax,QWORD PTR [rbp-0x80]
  402488:	mov    rsi,rdx
  40248b:	mov    rdi,rax
  40248e:	call   402ff5 <mmk_mock_params_next@@Base>
  402493:	mov    QWORD PTR [rbp-0xa0],rax
  40249a:	cmp    QWORD PTR [rbp-0xa0],0x0
  4024a2:	jne    402354 <_start@@Base+0x1f4>
  4024a8:	mov    rax,QWORD PTR [rbp-0x88]
  4024af:	mov    QWORD PTR [rbp-0x98],rax
  4024b6:	jmp    4024e1 <_start@@Base+0x381>
  4024b8:	mov    rax,QWORD PTR [rbp-0x98]
  4024bf:	mov    rax,QWORD PTR [rax+0x10]
  4024c3:	mov    QWORD PTR [rbp-0x60],rax
  4024c7:	mov    rax,QWORD PTR [rbp-0x98]
  4024ce:	mov    rdi,rax
  4024d1:	call   4041e0 <mmk_free@@Base>
  4024d6:	mov    rax,QWORD PTR [rbp-0x60]
  4024da:	mov    QWORD PTR [rbp-0x98],rax
  4024e1:	cmp    QWORD PTR [rbp-0x98],0x0
  4024e9:	jne    4024b8 <_start@@Base+0x358>
  4024eb:	mov    rax,QWORD PTR [rbp-0xa8]
  4024f2:	mov    rdi,rax
  4024f5:	call   403bde <mmk_verify_set_times@@Base>
  4024fa:	mov    rax,QWORD PTR [rip+0x5bd7]        # 4080d8 <__bss_start@@Base+0x10>
  402501:	jmp    402757 <_start@@Base+0x5f7>
  402506:	mov    QWORD PTR [rbp-0x30],0x0
  40250e:	mov    QWORD PTR [rbp-0x28],0x0
  402516:	mov    QWORD PTR [rbp-0x20],0x0
  40251e:	mov    QWORD PTR [rbp-0x18],0x0
  402526:	mov    rax,QWORD PTR [rbp-0xb8]
  40252d:	mov    QWORD PTR [rbp-0x18],rax
  402531:	lea    rax,[rbp-0x30]
  402535:	mov    QWORD PTR [rbp-0x58],rax
  402539:	mov    rax,QWORD PTR [rbp-0x58]
  40253d:	mov    esi,0x20
  402542:	mov    rdi,rax
  402545:	call   403d9a <mmk_verify_register_call@@Base>
  40254a:	call   40304e <mmk_mock_get_params@@Base>
  40254f:	mov    QWORD PTR [rbp-0x90],rax
  402556:	jmp    402742 <_start@@Base+0x5e2>
  40255b:	mov    rax,QWORD PTR [rbp-0x90]
  402562:	mov    QWORD PTR [rbp-0x50],rax
  402566:	mov    rax,QWORD PTR [rbp-0x90]
  40256d:	mov    rax,QWORD PTR [rax]
  402570:	mov    QWORD PTR [rbp-0x48],rax
  402574:	mov    rax,QWORD PTR [rbp-0x48]
  402578:	mov    rax,QWORD PTR [rax+0x10]
  40257c:	test   rax,rax
  40257f:	je     402650 <_start@@Base+0x4f0>
  402585:	mov    rax,QWORD PTR [rbp-0x48]
  402589:	mov    rax,QWORD PTR [rax+0x10]
  40258d:	mov    QWORD PTR [rbp-0x48],rax
  402591:	mov    rax,QWORD PTR [rbp-0x48]
  402595:	mov    eax,DWORD PTR [rax]
  402597:	test   eax,eax
  402599:	je     402677 <_start@@Base+0x517>
  40259f:	mov    rax,QWORD PTR [rbp-0x48]
  4025a3:	mov    eax,DWORD PTR [rax]
  4025a5:	test   eax,eax
  4025a7:	jns    40261c <_start@@Base+0x4bc>
  4025a9:	lea    rcx,[rbp-0xb8]
  4025b0:	lea    rax,[rbp-0xb8]
  4025b7:	mov    edx,0x8
  4025bc:	mov    rsi,rcx
  4025bf:	mov    rdi,rax
  4025c2:	call   403ff0 <mmk_memcmp@@Base>
  4025c7:	mov    DWORD PTR [rbp-0xac],eax
  4025cd:	cmp    DWORD PTR [rbp-0xac],0x0
  4025d4:	jne    4025e7 <_start@@Base+0x487>
  4025d6:	mov    rax,QWORD PTR [rbp-0x48]
  4025da:	mov    eax,DWORD PTR [rax]
  4025dc:	and    eax,0x2
  4025df:	test   eax,eax
  4025e1:	je     40272c <_start@@Base+0x5cc>
  4025e7:	cmp    DWORD PTR [rbp-0xac],0x0
  4025ee:	jns    402601 <_start@@Base+0x4a1>
  4025f0:	mov    rax,QWORD PTR [rbp-0x48]
  4025f4:	mov    eax,DWORD PTR [rax]
  4025f6:	and    eax,0x4
  4025f9:	test   eax,eax
  4025fb:	je     40272c <_start@@Base+0x5cc>
  402601:	cmp    DWORD PTR [rbp-0xac],0x0
  402608:	jle    402677 <_start@@Base+0x517>
  40260a:	mov    rax,QWORD PTR [rbp-0x48]
  40260e:	mov    eax,DWORD PTR [rax]
  402610:	and    eax,0x8
  402613:	test   eax,eax
  402615:	jne    402677 <_start@@Base+0x517>
  402617:	jmp    40272c <_start@@Base+0x5cc>
  40261c:	mov    rax,QWORD PTR [rbp-0x48]
  402620:	mov    eax,DWORD PTR [rax]
  402622:	cmp    eax,0x1
  402625:	jne    402677 <_start@@Base+0x517>
  402627:	mov    rax,QWORD PTR [rbp-0x48]
  40262b:	mov    rdi,rax
  40262e:	call   402cb0 <mmk_matcher_get_predicate@@Base>
  402633:	mov    QWORD PTR [rbp-0x40],rax
  402637:	mov    rdx,QWORD PTR [rbp-0xb8]
  40263e:	mov    rax,QWORD PTR [rbp-0x40]
  402642:	mov    rdi,rdx
  402645:	call   rax
  402647:	test   eax,eax
  402649:	jne    402677 <_start@@Base+0x517>
  40264b:	jmp    402730 <_start@@Base+0x5d0>
  402650:	mov    rax,QWORD PTR [rbp-0x50]
  402654:	lea    rcx,[rax+0x48]
  402658:	lea    rax,[rbp-0xb8]
  40265f:	mov    edx,0x8
  402664:	mov    rsi,rcx
  402667:	mov    rdi,rax
  40266a:	call   403ff0 <mmk_memcmp@@Base>
  40266f:	test   eax,eax
  402671:	jne    40272f <_start@@Base+0x5cf>
  402677:	mov    rax,QWORD PTR [rbp-0x50]
  40267b:	mov    eax,DWORD PTR [rax+0x14]
  40267e:	test   eax,eax
  402680:	je     402693 <_start@@Base+0x533>
  402682:	call   402060 <__errno_location@plt>
  402687:	mov    rdx,rax
  40268a:	mov    rax,QWORD PTR [rbp-0x50]
  40268e:	mov    eax,DWORD PTR [rax+0x14]
  402691:	mov    DWORD PTR [rdx],eax
  402693:	mov    rax,QWORD PTR [rbp-0x50]
  402697:	mov    rax,QWORD PTR [rax+0x20]
  40269b:	test   rax,rax
  40269e:	je     4026ce <_start@@Base+0x56e>
  4026a0:	mov    rax,QWORD PTR [rbp-0x50]
  4026a4:	mov    rax,QWORD PTR [rax+0x18]
  4026a8:	test   rax,rax
  4026ab:	jne    4026ce <_start@@Base+0x56e>
  4026ad:	mov    rax,QWORD PTR [rbp-0x50]
  4026b1:	mov    rax,QWORD PTR [rax+0x20]
  4026b5:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026bc:	mov    rdi,rdx
  4026bf:	call   rax
  4026c1:	mov    QWORD PTR [rbp-0x38],rax
  4026c5:	mov    rax,QWORD PTR [rbp-0x38]
  4026c9:	jmp    402757 <_start@@Base+0x5f7>
  4026ce:	mov    rax,QWORD PTR [rbp-0x50]
  4026d2:	mov    rax,QWORD PTR [rax+0x20]
  4026d6:	test   rax,rax
  4026d9:	je     402709 <_start@@Base+0x5a9>
  4026db:	mov    rax,QWORD PTR [rbp-0x50]
  4026df:	mov    rax,QWORD PTR [rax+0x18]
  4026e3:	test   rax,rax
  4026e6:	je     402709 <_start@@Base+0x5a9>
  4026e8:	mov    rax,QWORD PTR [rbp-0x50]
  4026ec:	mov    rax,QWORD PTR [rax+0x20]
  4026f0:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026f7:	mov    rdi,rdx
  4026fa:	call   rax
  4026fc:	mov    rax,QWORD PTR [rbp-0x50]
  402700:	mov    rax,QWORD PTR [rax+0x18]
  402704:	mov    rax,QWORD PTR [rax]
  402707:	jmp    402757 <_start@@Base+0x5f7>
  402709:	mov    rax,QWORD PTR [rbp-0x50]
  40270d:	mov    rax,QWORD PTR [rax+0x18]
  402711:	test   rax,rax
  402714:	je     402723 <_start@@Base+0x5c3>
  402716:	mov    rax,QWORD PTR [rbp-0x50]
  40271a:	mov    rax,QWORD PTR [rax+0x18]
  40271e:	mov    rax,QWORD PTR [rax]
  402721:	jmp    402757 <_start@@Base+0x5f7>
  402723:	mov    rax,QWORD PTR [rip+0x59ae]        # 4080d8 <__bss_start@@Base+0x10>
  40272a:	jmp    402757 <_start@@Base+0x5f7>
  40272c:	nop
  40272d:	jmp    402730 <_start@@Base+0x5d0>
  40272f:	nop
  402730:	mov    rax,QWORD PTR [rbp-0x90]
  402737:	mov    rax,QWORD PTR [rax+0x8]
  40273b:	mov    QWORD PTR [rbp-0x90],rax
  402742:	cmp    QWORD PTR [rbp-0x90],0x0
  40274a:	jne    40255b <_start@@Base+0x3fb>
  402750:	mov    rax,QWORD PTR [rip+0x5981]        # 4080d8 <__bss_start@@Base+0x10>
  402757:	mov    rsi,QWORD PTR [rbp-0x8]
  40275b:	xor    rsi,QWORD PTR fs:0x28
  402764:	je     40276b <_start@@Base+0x60b>
  402766:	call   402080 <__stack_chk_fail@plt>
  40276b:	leave  
  40276c:	ret    
  40276d:	push   rbp
  40276e:	mov    rbp,rsp
  402771:	sub    rsp,0x10
  402775:	mov    QWORD PTR [rbp-0x8],rdi
  402779:	mov    rax,QWORD PTR [rbp-0x8]
  40277d:	lea    rsi,[rip+0xfffffffffffffae2]        # 402266 <_start@@Base+0x106>
  402784:	mov    rdi,rax
  402787:	call   402cb5 <mmk_mock_create_internal@@Base>
  40278c:	leave  
  40278d:	ret    

000000000040278e <test_simple_case@@Base>:
  40278e:	push   rbp
  40278f:	mov    rbp,rsp
  402792:	add    rsp,0xffffffffffffff80
  402796:	mov    rax,QWORD PTR fs:0x28
  40279f:	mov    QWORD PTR [rbp-0x8],rax
  4027a3:	xor    eax,eax
  4027a5:	lea    rdi,[rip+0x285c]        # 405008 <_IO_stdin_used@@Base+0x8>
  4027ac:	call   40276d <_start@@Base+0x60d>
  4027b1:	mov    edi,0x0
  4027b6:	call   402bb0 <mmk_matcher_init@@Base>
  4027bb:	mov    QWORD PTR [rbp-0x60],0x0
  4027c3:	mov    QWORD PTR [rbp-0x58],0x0
  4027cb:	mov    QWORD PTR [rbp-0x50],0x0
  4027d3:	mov    QWORD PTR [rbp-0x48],0x0
  4027db:	lea    rax,[rbp-0xe]
  4027df:	mov    QWORD PTR [rbp-0x70],rax
  4027e3:	lea    rax,[rbp-0x70]
  4027e7:	mov    QWORD PTR [rbp-0x58],rax
  4027eb:	lea    rax,[rbp-0x60]
  4027ef:	mov    rdi,rax
  4027f2:	call   4042bd <mmk_when_init@@Base>
  4027f7:	mov    edi,0x6
  4027fc:	call   402150 <malloc@plt>
  402801:	call   402c00 <mmk_matcher_term@@Base>
  402806:	lea    rdi,[rip+0x280d]        # 40501a <_IO_stdin_used@@Base+0x1a>
  40280d:	call   402110 <my_strdup@plt>
  402812:	mov    QWORD PTR [rbp-0x68],rax
  402816:	mov    edi,0x1
  40281b:	call   402bb0 <mmk_matcher_init@@Base>
  402820:	mov    esi,0x0
  402825:	mov    edi,0x8000000a
  40282a:	call   402c40 <mmk_matcher_add@@Base>
  40282f:	mov    edi,0x6
  402834:	call   402150 <malloc@plt>
  402839:	call   402c00 <mmk_matcher_term@@Base>
  40283e:	mov    QWORD PTR [rbp-0x40],0x0
  402846:	mov    QWORD PTR [rbp-0x38],0x0
  40284e:	mov    QWORD PTR [rbp-0x30],0x0
  402856:	mov    QWORD PTR [rbp-0x28],0x0
  40285e:	mov    QWORD PTR [rbp-0x20],0x0
  402866:	mov    DWORD PTR [rbp-0x40],0x1
  40286d:	mov    QWORD PTR [rbp-0x28],0x1
  402875:	lea    rax,[rbp-0x40]
  402879:	mov    rdi,rax
  40287c:	call   403c08 <mmk_verify_times@@Base>
  402881:	mov    DWORD PTR [rbp-0x74],eax
  402884:	cmp    DWORD PTR [rbp-0x74],0x0
  402888:	jne    4028c0 <test_simple_case@@Base+0x132>
  40288a:	mov    rax,QWORD PTR [rip+0x5767]        # 407ff8 <stderr@GLIBC_2.2.5>
  402891:	mov    rax,QWORD PTR [rax]
  402894:	lea    r8,[rip+0x2785]        # 405020 <_IO_stdin_used@@Base+0x20>
  40289b:	mov    ecx,0x17
  4028a0:	lea    rdx,[rip+0x2781]        # 405028 <_IO_stdin_used@@Base+0x28>
  4028a7:	lea    rsi,[rip+0x27d6]        # 405084 <_IO_stdin_used@@Base+0x84>
  4028ae:	mov    rdi,rax
  4028b1:	mov    eax,0x0
  4028b6:	call   4020d0 <fprintf@plt>
  4028bb:	call   402050 <abort@plt>
  4028c0:	lea    rax,[rbp-0xe]
  4028c4:	cmp    QWORD PTR [rbp-0x68],rax
  4028c8:	jne    4028e1 <test_simple_case@@Base+0x153>
  4028ca:	lea    rax,[rbp-0xe]
  4028ce:	mov    rsi,rax
  4028d1:	lea    rdi,[rip+0x57e0]        # 4080b8 <__data_start@@Base+0x10>
  4028d8:	call   4020c0 <strcmp@plt>
  4028dd:	test   eax,eax
  4028df:	je     402917 <test_simple_case@@Base+0x189>
  4028e1:	mov    rax,QWORD PTR [rip+0x5710]        # 407ff8 <stderr@GLIBC_2.2.5>
  4028e8:	mov    rax,QWORD PTR [rax]
  4028eb:	lea    r8,[rip+0x27b6]        # 4050a8 <_IO_stdin_used@@Base+0xa8>
  4028f2:	mov    ecx,0x18
  4028f7:	lea    rdx,[rip+0x272a]        # 405028 <_IO_stdin_used@@Base+0x28>
  4028fe:	lea    rsi,[rip+0x277f]        # 405084 <_IO_stdin_used@@Base+0x84>
  402905:	mov    rdi,rax
  402908:	mov    eax,0x0
  40290d:	call   4020d0 <fprintf@plt>
  402912:	call   402050 <abort@plt>
  402917:	mov    rax,QWORD PTR [rip+0x56d2]        # 407ff0 <malloc@GLIBC_2.2.5>
  40291e:	mov    rdi,rax
  402921:	call   402b63 <mmk_reset@@Base>
  402926:	nop
  402927:	mov    rax,QWORD PTR [rbp-0x8]
  40292b:	xor    rax,QWORD PTR fs:0x28
  402934:	je     40293b <test_simple_case@@Base+0x1ad>
  402936:	call   402080 <__stack_chk_fail@plt>
  40293b:	leave  
  40293c:	ret    

000000000040293d <test_error_case@@Base>:
  40293d:	push   rbp
  40293e:	mov    rbp,rsp
  402941:	sub    rsp,0x50
  402945:	mov    rax,QWORD PTR fs:0x28
  40294e:	mov    QWORD PTR [rbp-0x8],rax
  402952:	xor    eax,eax
  402954:	lea    rdi,[rip+0x26ad]        # 405008 <_IO_stdin_used@@Base+0x8>
  40295b:	call   40276d <_start@@Base+0x60d>
  402960:	mov    QWORD PTR [rbp-0x40],rax
  402964:	mov    edi,0x0
  402969:	call   402bb0 <mmk_matcher_init@@Base>
  40296e:	mov    QWORD PTR [rbp-0x30],0x0
  402976:	mov    QWORD PTR [rbp-0x28],0x0
  40297e:	mov    QWORD PTR [rbp-0x20],0x0
  402986:	mov    QWORD PTR [rbp-0x18],0x0
  40298e:	mov    DWORD PTR [rbp-0x2c],0xc
  402995:	mov    QWORD PTR [rbp-0x48],0x0
  40299d:	lea    rax,[rbp-0x48]
  4029a1:	mov    QWORD PTR [rbp-0x28],rax
  4029a5:	lea    rax,[rbp-0x30]
  4029a9:	mov    rdi,rax
  4029ac:	call   4042bd <mmk_when_init@@Base>
  4029b1:	mov    esi,0x1
  4029b6:	mov    edi,0x0
  4029bb:	call   402c40 <mmk_matcher_add@@Base>
  4029c0:	mov    rax,QWORD PTR [rbp-0x40]
  4029c4:	mov    edi,0x0
  4029c9:	call   rax
  4029cb:	call   402c00 <mmk_matcher_term@@Base>
  4029d0:	lea    rdi,[rip+0x26f1]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  4029d7:	call   402110 <my_strdup@plt>
  4029dc:	mov    QWORD PTR [rbp-0x38],rax
  4029e0:	cmp    QWORD PTR [rbp-0x38],0x0
  4029e5:	jne    4029f3 <test_error_case@@Base+0xb6>
  4029e7:	call   402060 <__errno_location@plt>
  4029ec:	mov    eax,DWORD PTR [rax]
  4029ee:	cmp    eax,0xc
  4029f1:	je     402a29 <test_error_case@@Base+0xec>
  4029f3:	mov    rax,QWORD PTR [rip+0x55fe]        # 407ff8 <stderr@GLIBC_2.2.5>
  4029fa:	mov    rax,QWORD PTR [rax]
  4029fd:	lea    r8,[rip+0x26cc]        # 4050d0 <_IO_stdin_used@@Base+0xd0>
  402a04:	mov    ecx,0x27
  402a09:	lea    rdx,[rip+0x2618]        # 405028 <_IO_stdin_used@@Base+0x28>
  402a10:	lea    rsi,[rip+0x266d]        # 405084 <_IO_stdin_used@@Base+0x84>
  402a17:	mov    rdi,rax
  402a1a:	mov    eax,0x0
  402a1f:	call   4020d0 <fprintf@plt>
  402a24:	call   402050 <abort@plt>
  402a29:	mov    rax,QWORD PTR [rbp-0x40]
  402a2d:	mov    rdi,rax
  402a30:	call   402b63 <mmk_reset@@Base>
  402a35:	nop
  402a36:	mov    rax,QWORD PTR [rbp-0x8]
  402a3a:	xor    rax,QWORD PTR fs:0x28
  402a43:	je     402a4a <test_error_case@@Base+0x10d>
  402a45:	call   402080 <__stack_chk_fail@plt>
  402a4a:	leave  
  402a4b:	ret    

0000000000402a4c <main@@Base>:
  402a4c:	push   rbp
  402a4d:	mov    rbp,rsp
  402a50:	call   40278e <test_simple_case@@Base>
  402a55:	call   40293d <test_error_case@@Base>
  402a5a:	mov    eax,0x0
  402a5f:	pop    rbp
  402a60:	ret    

0000000000402a61 <mmk_init@@Base>:
  402a61:	sub    rsp,0x18
  402a65:	mov    eax,DWORD PTR [rip+0x5675]        # 4080e0 <__bss_start@@Base+0x18>
  402a6b:	test   eax,eax
  402a6d:	jne    402af5 <mmk_init@@Base+0x94>
  402a73:	call   403300 <plt_init_ctx@@Base>
  402a78:	mov    QWORD PTR [rip+0x5669],rax        # 4080e8 <__bss_start@@Base+0x20>
  402a7f:	mov    rax,QWORD PTR [rip+0x5662]        # 4080e8 <__bss_start@@Base+0x20>
  402a86:	cmp    rax,0xffffffffffffffff
  402a8a:	jne    402ada <mmk_init@@Base+0x79>
  402a8c:	mov    rax,QWORD PTR [rip+0x5565]        # 407ff8 <stderr@GLIBC_2.2.5>
  402a93:	mov    rax,QWORD PTR [rax]
  402a96:	mov    QWORD PTR [rsp],rax
  402a9a:	lea    rax,[rip+0x264f]        # 4050f0 <_IO_stdin_used@@Base+0xf0>
  402aa1:	mov    QWORD PTR [rsp+0x8],rax
  402aa6:	mov    rdx,QWORD PTR [rsp+0x8]
  402aab:	mov    rax,QWORD PTR [rsp]
  402aaf:	lea    r9,[rip+0x2657]        # 40510d <_IO_stdin_used@@Base+0x10d>
  402ab6:	mov    r8d,0x2d
  402abc:	lea    rcx,[rip+0x2665]        # 405128 <_IO_stdin_used@@Base+0x128>
  402ac3:	mov    esi,0x1
  402ac8:	mov    rdi,rax
  402acb:	mov    eax,0x0
  402ad0:	call   402130 <__fprintf_chk@plt>
  402ad5:	call   402050 <abort@plt>
  402ada:	mov    rax,QWORD PTR [rip+0x5607]        # 4080e8 <__bss_start@@Base+0x20>
  402ae1:	mov    rdi,rax
  402ae4:	call   4041f0 <mmk_init_vital_functions@@Base>
  402ae9:	mov    DWORD PTR [rip+0x55ed],0x1        # 4080e0 <__bss_start@@Base+0x18>
  402af3:	jmp    402af6 <mmk_init@@Base+0x95>
  402af5:	nop
  402af6:	add    rsp,0x18
  402afa:	ret    

0000000000402afb <mmk_plt_ctx@@Base>:
  402afb:	sub    rsp,0x18
  402aff:	mov    eax,DWORD PTR [rip+0x55db]        # 4080e0 <__bss_start@@Base+0x18>
  402b05:	test   eax,eax
  402b07:	jne    402b57 <mmk_plt_ctx@@Base+0x5c>
  402b09:	mov    rax,QWORD PTR [rip+0x54e8]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b10:	mov    rax,QWORD PTR [rax]
  402b13:	mov    QWORD PTR [rsp],rax
  402b17:	lea    rax,[rip+0x25d2]        # 4050f0 <_IO_stdin_used@@Base+0xf0>
  402b1e:	mov    QWORD PTR [rsp+0x8],rax
  402b23:	mov    rdx,QWORD PTR [rsp+0x8]
  402b28:	mov    rax,QWORD PTR [rsp]
  402b2c:	lea    r9,[rip+0x2647]        # 40517a <_IO_stdin_used@@Base+0x17a>
  402b33:	mov    r8d,0x36
  402b39:	lea    rcx,[rip+0x25e8]        # 405128 <_IO_stdin_used@@Base+0x128>
  402b40:	mov    esi,0x1
  402b45:	mov    rdi,rax
  402b48:	mov    eax,0x0
  402b4d:	call   402130 <__fprintf_chk@plt>
  402b52:	call   402050 <abort@plt>
  402b57:	mov    rax,QWORD PTR [rip+0x558a]        # 4080e8 <__bss_start@@Base+0x20>
  402b5e:	add    rsp,0x18
  402b62:	ret    

0000000000402b63 <mmk_reset@@Base>:
  402b63:	sub    rsp,0x28
  402b67:	mov    QWORD PTR [rsp+0x8],rdi
  402b6c:	cmp    QWORD PTR [rsp+0x8],0x0
  402b72:	je     402ba7 <mmk_reset@@Base+0x44>
  402b74:	mov    rax,QWORD PTR [rsp+0x8]
  402b79:	mov    rdi,rax
  402b7c:	call   403a46 <mmk_ask_ctx@@Base>
  402b81:	mov    QWORD PTR [rsp+0x10],rax
  402b86:	mov    rax,QWORD PTR [rsp+0x10]
  402b8b:	mov    rdi,rax
  402b8e:	call   4036e9 <mmk_stub_context@@Base>
  402b93:	mov    QWORD PTR [rsp+0x18],rax
  402b98:	mov    rax,QWORD PTR [rsp+0x18]
  402b9d:	mov    rdi,rax
  402ba0:	call   402edd <mmk_mock_destroy_internal@@Base>
  402ba5:	jmp    402ba8 <mmk_reset@@Base+0x45>
  402ba7:	nop
  402ba8:	add    rsp,0x28
  402bac:	ret    
  402bad:	nop    DWORD PTR [rax]

0000000000402bb0 <mmk_matcher_init@@Base>:
  402bb0:	push   rbp
  402bb1:	push   rbx
  402bb2:	mov    ebp,edi
  402bb4:	mov    edi,0x18
  402bb9:	sub    rsp,0x8
  402bbd:	call   4041c0 <mmk_malloc@@Base>
  402bc2:	mov    QWORD PTR [rax],0x0
  402bc9:	mov    QWORD PTR [rax+0x8],0x0
  402bd1:	mov    rbx,rax
  402bd4:	mov    DWORD PTR [rax],ebp
  402bd6:	mov    QWORD PTR [rax+0x10],0x0
  402bde:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402bea:	mov    QWORD PTR [rax-0x28],rbx
  402bf1:	add    rsp,0x8
  402bf5:	pop    rbx
  402bf6:	pop    rbp
  402bf7:	ret    
  402bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402c00 <mmk_matcher_term@@Base>:
  402c00:	sub    rsp,0x8
  402c04:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c10:	mov    QWORD PTR [rax-0x28],0x0
  402c1b:	add    rsp,0x8
  402c1f:	ret    

0000000000402c20 <mmk_matcher_ctx@@Base>:
  402c20:	sub    rsp,0x8
  402c24:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c30:	mov    rax,QWORD PTR [rax-0x28]
  402c37:	add    rsp,0x8
  402c3b:	ret    
  402c3c:	nop    DWORD PTR [rax+0x0]

0000000000402c40 <mmk_matcher_add@@Base>:
  402c40:	push   r12
  402c42:	push   rbp
  402c43:	mov    r12d,edi
  402c46:	push   rbx
  402c47:	mov    edi,0x18
  402c4c:	mov    ebp,esi
  402c4e:	call   4041c0 <mmk_malloc@@Base>
  402c53:	mov    rbx,rax
  402c56:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c62:	mov    QWORD PTR [rbx],0x0
  402c69:	mov    QWORD PTR [rbx+0x10],0x0
  402c71:	movsxd rsi,ebp
  402c74:	mov    rdx,QWORD PTR [rax-0x28]
  402c7b:	mov    DWORD PTR [rbx],r12d
  402c7e:	mov    QWORD PTR [rbx+0x8],rsi
  402c82:	mov    rax,QWORD PTR [rdx+0x10]
  402c86:	test   rax,rax
  402c89:	je     402c91 <mmk_matcher_add@@Base+0x51>
  402c8b:	cmp    rsi,QWORD PTR [rax+0x8]
  402c8f:	ja     402ca0 <mmk_matcher_add@@Base+0x60>
  402c91:	mov    QWORD PTR [rbx+0x10],rax
  402c95:	mov    QWORD PTR [rdx+0x10],rbx
  402c99:	pop    rbx
  402c9a:	pop    rbp
  402c9b:	pop    r12
  402c9d:	ret    
  402c9e:	xchg   ax,ax
  402ca0:	mov    rdx,rax
  402ca3:	mov    rax,QWORD PTR [rax+0x10]
  402ca7:	test   rax,rax
  402caa:	jne    402c8b <mmk_matcher_add@@Base+0x4b>
  402cac:	jmp    402c91 <mmk_matcher_add@@Base+0x51>
  402cae:	xchg   ax,ax

0000000000402cb0 <mmk_matcher_get_predicate@@Base>:
  402cb0:	lea    rax,[rdi+0x18]
  402cb4:	ret    

0000000000402cb5 <mmk_mock_create_internal@@Base>:
  402cb5:	push   rbx
  402cb6:	sub    rsp,0x60
  402cba:	mov    QWORD PTR [rsp+0x8],rdi
  402cbf:	mov    QWORD PTR [rsp],rsi
  402cc3:	call   402a61 <mmk_init@@Base>
  402cc8:	mov    edi,0x28
  402ccd:	call   4041c0 <mmk_malloc@@Base>
  402cd2:	mov    QWORD PTR [rsp+0x28],rax
  402cd7:	cmp    QWORD PTR [rsp+0x28],0x0
  402cdd:	jne    402d2f <mmk_mock_create_internal@@Base+0x7a>
  402cdf:	mov    rax,QWORD PTR [rip+0x5312]        # 407ff8 <stderr@GLIBC_2.2.5>
  402ce6:	mov    rax,QWORD PTR [rax]
  402ce9:	mov    QWORD PTR [rsp+0x40],rax
  402cee:	lea    rax,[rip+0x249b]        # 405190 <_IO_stdin_used@@Base+0x190>
  402cf5:	mov    QWORD PTR [rsp+0x48],rax
  402cfa:	mov    rdx,QWORD PTR [rsp+0x48]
  402cff:	mov    rax,QWORD PTR [rsp+0x40]
  402d04:	lea    r9,[rip+0x24a2]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402d0b:	mov    r8d,0x24
  402d11:	lea    rcx,[rip+0x24a0]        # 4051b8 <_IO_stdin_used@@Base+0x1b8>
  402d18:	mov    esi,0x1
  402d1d:	mov    rdi,rax
  402d20:	mov    eax,0x0
  402d25:	call   402130 <__fprintf_chk@plt>
  402d2a:	call   402050 <abort@plt>
  402d2f:	mov    rax,QWORD PTR [rsp+0x28]
  402d34:	mov    QWORD PTR [rax],0x0
  402d3b:	mov    QWORD PTR [rax+0x8],0x0
  402d43:	mov    QWORD PTR [rax+0x10],0x0
  402d4b:	mov    QWORD PTR [rax+0x18],0x0
  402d53:	mov    QWORD PTR [rax+0x20],0x0
  402d5b:	mov    rax,QWORD PTR [rsp+0x8]
  402d60:	mov    esi,0x40
  402d65:	mov    rdi,rax
  402d68:	call   4040e0 <mmk_strchr@@Base>
  402d6d:	mov    QWORD PTR [rsp+0x30],rax
  402d72:	cmp    QWORD PTR [rsp+0x30],0x0
  402d78:	jne    402d8e <mmk_mock_create_internal@@Base+0xd9>
  402d7a:	mov    rax,QWORD PTR [rsp+0x8]
  402d7f:	mov    rdi,rax
  402d82:	call   404170 <mmk_strlen@@Base>
  402d87:	mov    QWORD PTR [rsp+0x20],rax
  402d8c:	jmp    402da3 <mmk_mock_create_internal@@Base+0xee>
  402d8e:	mov    rdx,QWORD PTR [rsp+0x30]
  402d93:	mov    rax,QWORD PTR [rsp+0x8]
  402d98:	sub    rdx,rax
  402d9b:	mov    rax,rdx
  402d9e:	mov    QWORD PTR [rsp+0x20],rax
  402da3:	mov    rax,QWORD PTR [rsp+0x20]
  402da8:	add    rax,0x1
  402dac:	mov    rdi,rax
  402daf:	call   4041c0 <mmk_malloc@@Base>
  402db4:	mov    QWORD PTR [rsp+0x38],rax
  402db9:	mov    rdx,QWORD PTR [rsp+0x20]
  402dbe:	mov    rcx,QWORD PTR [rsp+0x8]
  402dc3:	mov    rax,QWORD PTR [rsp+0x38]
  402dc8:	mov    rsi,rcx
  402dcb:	mov    rdi,rax
  402dce:	call   404140 <mmk_strncpy@@Base>
  402dd3:	mov    rdx,QWORD PTR [rsp+0x38]
  402dd8:	mov    rax,QWORD PTR [rsp+0x20]
  402ddd:	add    rax,rdx
  402de0:	mov    BYTE PTR [rax],0x0
  402de3:	cmp    QWORD PTR [rsp+0x30],0x0
  402de9:	je     402e0c <mmk_mock_create_internal@@Base+0x157>
  402deb:	mov    rax,QWORD PTR [rsp+0x30]
  402df0:	add    rax,0x1
  402df4:	mov    edx,0x4
  402df9:	lea    rsi,[rip+0x240a]        # 40520a <_IO_stdin_used@@Base+0x20a>
  402e00:	mov    rdi,rax
  402e03:	call   404070 <mmk_strneq@@Base>
  402e08:	test   eax,eax
  402e0a:	je     402e13 <mmk_mock_create_internal@@Base+0x15e>
  402e0c:	mov    eax,0x1
  402e11:	jmp    402e18 <mmk_mock_create_internal@@Base+0x163>
  402e13:	mov    eax,0x0
  402e18:	mov    DWORD PTR [rsp+0x1c],eax
  402e1c:	mov    rdx,QWORD PTR [rsp+0x28]
  402e21:	mov    rcx,QWORD PTR [rsp]
  402e25:	mov    rax,QWORD PTR [rsp+0x8]
  402e2a:	mov    rsi,rcx
  402e2d:	mov    rdi,rax
  402e30:	call   403942 <mmk_stub_create@@Base>
  402e35:	mov    rdx,rax
  402e38:	mov    rax,QWORD PTR [rsp+0x28]
  402e3d:	mov    QWORD PTR [rax+0x8],rdx
  402e41:	mov    rax,QWORD PTR [rsp+0x28]
  402e46:	mov    rax,QWORD PTR [rax+0x8]
  402e4a:	test   rax,rax
  402e4d:	jne    402e90 <mmk_mock_create_internal@@Base+0x1db>
  402e4f:	mov    rax,QWORD PTR [rip+0x51a2]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e56:	mov    rax,QWORD PTR [rax]
  402e59:	mov    QWORD PTR [rsp+0x50],rax
  402e5e:	lea    rax,[rip+0x23ab]        # 405210 <_IO_stdin_used@@Base+0x210>
  402e65:	mov    QWORD PTR [rsp+0x58],rax
  402e6a:	mov    rcx,QWORD PTR [rsp+0x8]
  402e6f:	mov    rdx,QWORD PTR [rsp+0x58]
  402e74:	mov    rax,QWORD PTR [rsp+0x50]
  402e79:	mov    esi,0x1
  402e7e:	mov    rdi,rax
  402e81:	mov    eax,0x0
  402e86:	call   402130 <__fprintf_chk@plt>
  402e8b:	call   402050 <abort@plt>
  402e90:	cmp    DWORD PTR [rsp+0x1c],0x0
  402e95:	jne    402ebd <mmk_mock_create_internal@@Base+0x208>
  402e97:	mov    rax,QWORD PTR [rsp+0x28]
  402e9c:	mov    rbx,QWORD PTR [rax+0x8]
  402ea0:	mov    rdx,QWORD PTR [rsp+0x28]
  402ea5:	mov    rcx,QWORD PTR [rsp]
  402ea9:	mov    rax,QWORD PTR [rsp+0x38]
  402eae:	mov    rsi,rcx
  402eb1:	mov    rdi,rax
  402eb4:	call   403942 <mmk_stub_create@@Base>
  402eb9:	mov    QWORD PTR [rbx+0x48],rax
  402ebd:	mov    rax,QWORD PTR [rsp+0x38]
  402ec2:	mov    rdi,rax
  402ec5:	call   4041e0 <mmk_free@@Base>
  402eca:	mov    rax,QWORD PTR [rsp+0x28]
  402ecf:	mov    rax,QWORD PTR [rax+0x8]
  402ed3:	mov    rax,QWORD PTR [rax+0x40]
  402ed7:	add    rsp,0x60
  402edb:	pop    rbx
  402edc:	ret    

0000000000402edd <mmk_mock_destroy_internal@@Base>:
  402edd:	sub    rsp,0x48
  402ee1:	mov    QWORD PTR [rsp+0x8],rdi
  402ee6:	mov    rax,QWORD PTR [rsp+0x8]
  402eeb:	mov    rax,QWORD PTR [rax+0x8]
  402eef:	mov    QWORD PTR [rsp+0x10],rax
  402ef4:	jmp    402f1b <mmk_mock_destroy_internal@@Base+0x3e>
  402ef6:	mov    rax,QWORD PTR [rsp+0x10]
  402efb:	mov    rax,QWORD PTR [rax+0x48]
  402eff:	mov    QWORD PTR [rsp+0x28],rax
  402f04:	mov    rax,QWORD PTR [rsp+0x10]
  402f09:	mov    rdi,rax
  402f0c:	call   403a1d <mmk_stub_destroy@@Base>
  402f11:	mov    rax,QWORD PTR [rsp+0x28]
  402f16:	mov    QWORD PTR [rsp+0x10],rax
  402f1b:	cmp    QWORD PTR [rsp+0x10],0x0
  402f21:	jne    402ef6 <mmk_mock_destroy_internal@@Base+0x19>
  402f23:	mov    rax,QWORD PTR [rsp+0x8]
  402f28:	mov    rax,QWORD PTR [rax+0x10]
  402f2c:	mov    rdi,rax
  402f2f:	call   4041e0 <mmk_free@@Base>
  402f34:	mov    rax,QWORD PTR [rsp+0x8]
  402f39:	mov    rax,QWORD PTR [rax]
  402f3c:	mov    QWORD PTR [rsp+0x18],rax
  402f41:	jmp    402fa4 <mmk_mock_destroy_internal@@Base+0xc7>
  402f43:	mov    rax,QWORD PTR [rsp+0x18]
  402f48:	mov    rax,QWORD PTR [rax+0x8]
  402f4c:	mov    QWORD PTR [rsp+0x30],rax
  402f51:	mov    rax,QWORD PTR [rsp+0x18]
  402f56:	mov    rax,QWORD PTR [rax]
  402f59:	mov    QWORD PTR [rsp+0x20],rax
  402f5e:	jmp    402f85 <mmk_mock_destroy_internal@@Base+0xa8>
  402f60:	mov    rax,QWORD PTR [rsp+0x20]
  402f65:	mov    rax,QWORD PTR [rax+0x10]
  402f69:	mov    QWORD PTR [rsp+0x38],rax
  402f6e:	mov    rax,QWORD PTR [rsp+0x20]
  402f73:	mov    rdi,rax
  402f76:	call   4041e0 <mmk_free@@Base>
  402f7b:	mov    rax,QWORD PTR [rsp+0x38]
  402f80:	mov    QWORD PTR [rsp+0x20],rax
  402f85:	cmp    QWORD PTR [rsp+0x20],0x0
  402f8b:	jne    402f60 <mmk_mock_destroy_internal@@Base+0x83>
  402f8d:	mov    rax,QWORD PTR [rsp+0x18]
  402f92:	mov    rdi,rax
  402f95:	call   4041e0 <mmk_free@@Base>
  402f9a:	mov    rax,QWORD PTR [rsp+0x30]
  402f9f:	mov    QWORD PTR [rsp+0x18],rax
  402fa4:	cmp    QWORD PTR [rsp+0x18],0x0
  402faa:	jne    402f43 <mmk_mock_destroy_internal@@Base+0x66>
  402fac:	mov    rax,QWORD PTR [rsp+0x8]
  402fb1:	mov    rdi,rax
  402fb4:	call   4041e0 <mmk_free@@Base>
  402fb9:	nop
  402fba:	add    rsp,0x48
  402fbe:	ret    

0000000000402fbf <mmk_mock_params_begin@@Base>:
  402fbf:	mov    QWORD PTR [rsp-0x8],rdi
  402fc4:	mov    rax,QWORD PTR [rsp-0x8]
  402fc9:	mov    rax,QWORD PTR [rax+0x10]
  402fcd:	test   rax,rax
  402fd0:	je     402fe0 <mmk_mock_params_begin@@Base+0x21>
  402fd2:	mov    rax,QWORD PTR [rsp-0x8]
  402fd7:	mov    rax,QWORD PTR [rax+0x18]
  402fdb:	test   rax,rax
  402fde:	jne    402fe7 <mmk_mock_params_begin@@Base+0x28>
  402fe0:	mov    eax,0x0
  402fe5:	jmp    402ff4 <mmk_mock_params_begin@@Base+0x35>
  402fe7:	mov    rax,QWORD PTR [rsp-0x8]
  402fec:	mov    rax,QWORD PTR [rax+0x10]
  402ff0:	add    rax,0x8
  402ff4:	ret    

0000000000402ff5 <mmk_mock_params_next@@Base>:
  402ff5:	mov    QWORD PTR [rsp-0x18],rdi
  402ffa:	mov    QWORD PTR [rsp-0x20],rsi
  402fff:	mov    rax,QWORD PTR [rsp-0x20]
  403004:	mov    QWORD PTR [rsp-0x10],rax
  403009:	mov    rax,QWORD PTR [rsp-0x10]
  40300e:	mov    rax,QWORD PTR [rax-0x8]
  403012:	mov    QWORD PTR [rsp-0x8],rax
  403017:	mov    rax,QWORD PTR [rsp-0x8]
  40301c:	add    rax,0x8
  403020:	add    QWORD PTR [rsp-0x10],rax
  403025:	mov    rax,QWORD PTR [rsp-0x18]
  40302a:	mov    rdx,QWORD PTR [rax+0x10]
  40302e:	mov    rax,QWORD PTR [rsp-0x18]
  403033:	mov    rax,QWORD PTR [rax+0x18]
  403037:	add    rax,rdx
  40303a:	cmp    rax,QWORD PTR [rsp-0x10]
  40303f:	ja     403048 <mmk_mock_params_next@@Base+0x53>
  403041:	mov    eax,0x0
  403046:	jmp    40304d <mmk_mock_params_next@@Base+0x58>
  403048:	mov    rax,QWORD PTR [rsp-0x10]
  40304d:	ret    

000000000040304e <mmk_mock_get_params@@Base>:
  40304e:	sub    rsp,0x18
  403052:	call   403ab0 <mmk_ctx@@Base>
  403057:	mov    rdi,rax
  40305a:	call   4036e9 <mmk_stub_context@@Base>
  40305f:	mov    QWORD PTR [rsp+0x8],rax
  403064:	mov    rax,QWORD PTR [rsp+0x8]
  403069:	mov    rax,QWORD PTR [rax]
  40306c:	add    rsp,0x18
  403070:	ret    
  403071:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40307b:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	push   r15
  403082:	push   r14
  403084:	push   r13
  403086:	push   r12
  403088:	push   rbp
  403089:	push   rbx
  40308a:	sub    rsp,0x18
  40308e:	mov    rcx,QWORD PTR [rdi+0x10]
  403092:	mov    rax,QWORD PTR [rdi]
  403095:	mov    rdi,QWORD PTR [rcx]
  403098:	mov    QWORD PTR [rsp+0x8],rax
  40309d:	test   rdi,rdi
  4030a0:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4030a6:	cmp    rdi,0x6
  4030aa:	mov    rax,rcx
  4030ad:	jne    4030c2 <mmk_mock_get_params@@Base+0x74>
  4030af:	jmp    4032c0 <mmk_mock_get_params@@Base+0x272>
  4030b4:	nop    DWORD PTR [rax+0x0]
  4030b8:	cmp    rdx,0x6
  4030bc:	je     4032c0 <mmk_mock_get_params@@Base+0x272>
  4030c2:	add    rax,0x10
  4030c6:	mov    rdx,QWORD PTR [rax]
  4030c9:	test   rdx,rdx
  4030cc:	jne    4030b8 <mmk_mock_get_params@@Base+0x6a>
  4030ce:	mov    r9d,0x1
  4030d4:	xor    ebx,ebx
  4030d6:	cmp    rdi,0x5
  4030da:	mov    rax,rcx
  4030dd:	jne    4030f2 <mmk_mock_get_params@@Base+0xa4>
  4030df:	jmp    403290 <mmk_mock_get_params@@Base+0x242>
  4030e4:	nop    DWORD PTR [rax+0x0]
  4030e8:	cmp    rdx,0x5
  4030ec:	je     403290 <mmk_mock_get_params@@Base+0x242>
  4030f2:	add    rax,0x10
  4030f6:	mov    rdx,QWORD PTR [rax]
  4030f9:	test   rdx,rdx
  4030fc:	jne    4030e8 <mmk_mock_get_params@@Base+0x9a>
  4030fe:	mov    r9d,0x1
  403104:	xor    ebp,ebp
  403106:	cmp    rdi,0x14
  40310a:	mov    rax,rcx
  40310d:	jne    403122 <mmk_mock_get_params@@Base+0xd4>
  40310f:	jmp    403280 <mmk_mock_get_params@@Base+0x232>
  403114:	nop    DWORD PTR [rax+0x0]
  403118:	cmp    rdx,0x14
  40311c:	je     403280 <mmk_mock_get_params@@Base+0x232>
  403122:	add    rax,0x10
  403126:	mov    rdx,QWORD PTR [rax]
  403129:	test   rdx,rdx
  40312c:	jne    403118 <mmk_mock_get_params@@Base+0xca>
  40312e:	mov    r11d,0x2
  403134:	xor    r10d,r10d
  403137:	cmp    rdi,0x17
  40313b:	mov    rax,rcx
  40313e:	jne    403152 <mmk_mock_get_params@@Base+0x104>
  403140:	jmp    403258 <mmk_mock_get_params@@Base+0x20a>
  403145:	nop    DWORD PTR [rax]
  403148:	cmp    rdx,0x17
  40314c:	je     403258 <mmk_mock_get_params@@Base+0x20a>
  403152:	add    rax,0x10
  403156:	mov    rdx,QWORD PTR [rax]
  403159:	test   rdx,rdx
  40315c:	jne    403148 <mmk_mock_get_params@@Base+0xfa>
  40315e:	xor    r8d,r8d
  403161:	cmp    rdi,0x2
  403165:	mov    rdx,rcx
  403168:	jne    40317a <mmk_mock_get_params@@Base+0x12c>
  40316a:	jmp    403248 <mmk_mock_get_params@@Base+0x1fa>
  40316f:	nop
  403170:	cmp    rax,0x2
  403174:	je     403248 <mmk_mock_get_params@@Base+0x1fa>
  40317a:	add    rdx,0x10
  40317e:	mov    rax,QWORD PTR [rdx]
  403181:	test   rax,rax
  403184:	jne    403170 <mmk_mock_get_params@@Base+0x122>
  403186:	jmp    4031b8 <mmk_mock_get_params@@Base+0x16a>
  403188:	nop    DWORD PTR [rax+rax*1+0x0]
  403190:	xor    eax,eax
  403192:	add    rsp,0x18
  403196:	pop    rbx
  403197:	pop    rbp
  403198:	pop    r12
  40319a:	pop    r13
  40319c:	pop    r14
  40319e:	pop    r15
  4031a0:	ret    
  4031a1:	nop    DWORD PTR [rax+0x0]
  4031a8:	add    rcx,0x10
  4031ac:	mov    rdi,QWORD PTR [rcx]
  4031af:	test   rdi,rdi
  4031b2:	je     4032f0 <mmk_mock_get_params@@Base+0x2a2>
  4031b8:	cmp    rdi,r11
  4031bb:	jne    4031a8 <mmk_mock_get_params@@Base+0x15a>
  4031bd:	mov    r14,QWORD PTR [rcx+0x8]
  4031c1:	test   r9b,r9b
  4031c4:	jne    403190 <mmk_mock_get_params@@Base+0x142>
  4031c6:	test   r10,r10
  4031c9:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4031cb:	test   r8,r8
  4031ce:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4031d0:	test   rax,rax
  4031d3:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4031d5:	test   r14,r14
  4031d8:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4031da:	xor    edx,edx
  4031dc:	div    r14
  4031df:	test   rax,rax
  4031e2:	mov    r13,rax
  4031e5:	je     403190 <mmk_mock_get_params@@Base+0x142>
  4031e7:	mov    QWORD PTR [rsp],rsi
  4031eb:	mov    r12,r8
  4031ee:	xor    r15d,r15d
  4031f1:	jmp    403204 <mmk_mock_get_params@@Base+0x1b6>
  4031f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f8:	add    r15,0x1
  4031fc:	add    r12,r14
  4031ff:	cmp    r15,r13
  403202:	je     403190 <mmk_mock_get_params@@Base+0x142>
  403204:	mov    eax,DWORD PTR [r12+0xc]
  403209:	mov    rsi,QWORD PTR [rsp]
  40320d:	lea    rax,[rax+rax*2]
  403211:	mov    edi,DWORD PTR [rbx+rax*8]
  403214:	add    rdi,rbp
  403217:	call   4020c0 <strcmp@plt>
  40321c:	test   eax,eax
  40321e:	jne    4031f8 <mmk_mock_get_params@@Base+0x1aa>
  403220:	mov    rax,QWORD PTR [r12]
  403224:	test   rax,rax
  403227:	je     403192 <mmk_mock_get_params@@Base+0x144>
  40322d:	add    rax,QWORD PTR [rsp+0x8]
  403232:	add    rsp,0x18
  403236:	pop    rbx
  403237:	pop    rbp
  403238:	pop    r12
  40323a:	pop    r13
  40323c:	pop    r14
  40323e:	pop    r15
  403240:	ret    
  403241:	nop    DWORD PTR [rax+0x0]
  403248:	mov    rax,QWORD PTR [rdx+0x8]
  40324c:	jmp    4031b8 <mmk_mock_get_params@@Base+0x16a>
  403251:	nop    DWORD PTR [rax+0x0]
  403258:	mov    r8,QWORD PTR [rax+0x8]
  40325c:	cmp    QWORD PTR [rsp+0x8],r8
  403261:	ja     40326c <mmk_mock_get_params@@Base+0x21e>
  403263:	test   r8,r8
  403266:	jns    403161 <mmk_mock_get_params@@Base+0x113>
  40326c:	add    r8,QWORD PTR [rsp+0x8]
  403271:	jmp    403161 <mmk_mock_get_params@@Base+0x113>
  403276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403280:	mov    r10,QWORD PTR [rax+0x8]
  403284:	lea    r11,[r10+0x2]
  403288:	jmp    403137 <mmk_mock_get_params@@Base+0xe9>
  40328d:	nop    DWORD PTR [rax]
  403290:	mov    rbp,QWORD PTR [rax+0x8]
  403294:	cmp    QWORD PTR [rsp+0x8],rbp
  403299:	ja     4032b0 <mmk_mock_get_params@@Base+0x262>
  40329b:	test   rbp,rbp
  40329e:	js     4032b0 <mmk_mock_get_params@@Base+0x262>
  4032a0:	test   rbp,rbp
  4032a3:	sete   al
  4032a6:	or     r9d,eax
  4032a9:	jmp    403106 <mmk_mock_get_params@@Base+0xb8>
  4032ae:	xchg   ax,ax
  4032b0:	add    rbp,QWORD PTR [rsp+0x8]
  4032b5:	sete   al
  4032b8:	or     r9d,eax
  4032bb:	jmp    403106 <mmk_mock_get_params@@Base+0xb8>
  4032c0:	mov    rbx,QWORD PTR [rax+0x8]
  4032c4:	cmp    QWORD PTR [rsp+0x8],rbx
  4032c9:	ja     4032e0 <mmk_mock_get_params@@Base+0x292>
  4032cb:	test   rbx,rbx
  4032ce:	js     4032e0 <mmk_mock_get_params@@Base+0x292>
  4032d0:	test   rbx,rbx
  4032d3:	sete   r9b
  4032d7:	jmp    4030d6 <mmk_mock_get_params@@Base+0x88>
  4032dc:	nop    DWORD PTR [rax+0x0]
  4032e0:	add    rbx,QWORD PTR [rsp+0x8]
  4032e5:	sete   r9b
  4032e9:	jmp    4030d6 <mmk_mock_get_params@@Base+0x88>
  4032ee:	xchg   ax,ax
  4032f0:	xor    r14d,r14d
  4032f3:	jmp    4031c1 <mmk_mock_get_params@@Base+0x173>
  4032f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403300 <plt_init_ctx@@Base>:
  403300:	mov    rax,QWORD PTR [rip+0x4db9]        # 4080c0 <__data_start@@Base+0x18>
  403307:	cmp    rax,0xffffffffffffffff
  40330b:	je     403310 <plt_init_ctx@@Base+0x10>
  40330d:	repz ret 
  40330f:	nop
  403310:	mov    rax,QWORD PTR [rip+0x4cc1]        # 407fd8 <_r_debug@GLIBC_2.2.5>
  403317:	mov    QWORD PTR [rip+0x4da2],rax        # 4080c0 <__data_start@@Base+0x18>
  40331e:	ret    
  40331f:	nop

0000000000403320 <plt_get_lib@@Base>:
  403320:	push   rbp
  403321:	mov    rbp,rsp
  403324:	push   r15
  403326:	push   r14
  403328:	push   r13
  40332a:	push   r12
  40332c:	mov    r12,rdi
  40332f:	push   rbx
  403330:	sub    rsp,0x38
  403334:	mov    rax,QWORD PTR fs:0x28
  40333d:	mov    QWORD PTR [rbp-0x38],rax
  403341:	xor    eax,eax
  403343:	test   rsi,rsi
  403346:	je     403521 <plt_get_lib@@Base+0x201>
  40334c:	lea    rdi,[rip+0x1ef0]        # 405243 <_IO_stdin_used@@Base+0x243>
  403353:	mov    ecx,0x4
  403358:	mov    r13,rsi
  40335b:	mov    ebx,0x1
  403360:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403362:	seta   dl
  403365:	setb   al
  403368:	cmp    dl,al
  40336a:	jne    4034e0 <plt_get_lib@@Base+0x1c0>
  403370:	mov    esi,0x3a
  403375:	mov    rdi,r13
  403378:	call   4020a0 <strchr@plt>
  40337d:	lea    rsi,[rax+0x1]
  403381:	mov    rdi,rsi
  403384:	mov    r15,rsi
  403387:	mov    QWORD PTR [rbp-0x50],rsi
  40338b:	call   402070 <strlen@plt>
  403390:	lea    rdi,[rip+0x2062]        # 4053f9 <_IO_stdin_used@@Base+0x3f9>
  403397:	mov    ecx,0x2
  40339c:	mov    rsi,r15
  40339f:	mov    QWORD PTR [rbp-0x58],rax
  4033a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4033a5:	setb   al
  4033a8:	seta   r14b
  4033ac:	sub    r14d,eax
  4033af:	movsx  eax,r14b
  4033b3:	mov    DWORD PTR [rbp-0x44],eax
  4033b6:	mov    r15,QWORD PTR [r12+0x8]
  4033bb:	test   r15,r15
  4033be:	je     403468 <plt_get_lib@@Base+0x148>
  4033c4:	mov    rax,QWORD PTR [rbp-0x58]
  4033c8:	mov    r12d,ebx
  4033cb:	mov    r14,r15
  4033ce:	and    r12d,0xfffffffd
  4033d2:	add    rax,0x17
  4033d6:	and    rax,0xfffffffffffffff0
  4033da:	mov    QWORD PTR [rbp-0x60],rax
  4033de:	jmp    4033f9 <plt_get_lib@@Base+0xd9>
  4033e0:	mov    rsi,QWORD PTR [r14+0x8]
  4033e4:	mov    rdi,r13
  4033e7:	call   4020c0 <strcmp@plt>
  4033ec:	test   eax,eax
  4033ee:	je     403420 <plt_get_lib@@Base+0x100>
  4033f0:	mov    r14,QWORD PTR [r14+0x18]
  4033f4:	test   r14,r14
  4033f7:	je     403468 <plt_get_lib@@Base+0x148>
  4033f9:	cmp    ebx,0x1
  4033fc:	je     403428 <plt_get_lib@@Base+0x108>
  4033fe:	test   r12d,r12d
  403401:	je     4033e0 <plt_get_lib@@Base+0xc0>
  403403:	cmp    ebx,0x3
  403406:	jne    4033f0 <plt_get_lib@@Base+0xd0>
  403408:	mov    rsi,QWORD PTR [rbp-0x50]
  40340c:	mov    rdi,r14
  40340f:	call   403080 <mmk_mock_get_params@@Base+0x32>
  403414:	test   rax,rax
  403417:	je     4033f0 <plt_get_lib@@Base+0xd0>
  403419:	nop    DWORD PTR [rax+0x0]
  403420:	mov    r15,r14
  403423:	jmp    40346b <plt_get_lib@@Base+0x14b>
  403425:	nop    DWORD PTR [rax]
  403428:	mov    eax,DWORD PTR [rbp-0x44]
  40342b:	test   eax,eax
  40342d:	jne    403490 <plt_get_lib@@Base+0x170>
  40342f:	mov    r15,QWORD PTR [r14+0x8]
  403433:	lea    rsi,[rip+0x1e1e]        # 405258 <_IO_stdin_used@@Base+0x258>
  40343a:	mov    rdi,r15
  40343d:	call   402140 <strstr@plt>
  403442:	test   rax,rax
  403445:	jne    403420 <plt_get_lib@@Base+0x100>
  403447:	lea    rsi,[rip+0x1e13]        # 405261 <_IO_stdin_used@@Base+0x261>
  40344e:	mov    rdi,r15
  403451:	call   402140 <strstr@plt>
  403456:	test   rax,rax
  403459:	jne    403420 <plt_get_lib@@Base+0x100>
  40345b:	mov    r14,QWORD PTR [r14+0x18]
  40345f:	test   r14,r14
  403462:	jne    4033f9 <plt_get_lib@@Base+0xd9>
  403464:	nop    DWORD PTR [rax+0x0]
  403468:	xor    r15d,r15d
  40346b:	mov    rdx,QWORD PTR [rbp-0x38]
  40346f:	xor    rdx,QWORD PTR fs:0x28
  403478:	mov    rax,r15
  40347b:	jne    4035a1 <plt_get_lib@@Base+0x281>
  403481:	lea    rsp,[rbp-0x28]
  403485:	pop    rbx
  403486:	pop    r12
  403488:	pop    r13
  40348a:	pop    r14
  40348c:	pop    r15
  40348e:	pop    rbp
  40348f:	ret    
  403490:	mov    rax,QWORD PTR [rbp-0x58]
  403494:	mov    r15,rsp
  403497:	sub    rsp,QWORD PTR [rbp-0x60]
  40349b:	mov    r9,QWORD PTR [rbp-0x50]
  40349f:	lea    r8,[rip+0x1dc4]        # 40526a <_IO_stdin_used@@Base+0x26a>
  4034a6:	mov    rcx,0xffffffffffffffff
  4034ad:	mov    edx,0x1
  4034b2:	lea    rsi,[rax+0x8]
  4034b6:	xor    eax,eax
  4034b8:	mov    rdi,rsp
  4034bb:	call   402030 <__snprintf_chk@plt>
  4034c0:	mov    rdi,QWORD PTR [r14+0x8]
  4034c4:	mov    rsi,rsp
  4034c7:	call   402140 <strstr@plt>
  4034cc:	test   rax,rax
  4034cf:	jne    403542 <plt_get_lib@@Base+0x222>
  4034d1:	mov    rsp,r15
  4034d4:	jmp    4033f0 <plt_get_lib@@Base+0xd0>
  4034d9:	nop    DWORD PTR [rax+0x0]
  4034e0:	lea    rdi,[rip+0x1d61]        # 405248 <_IO_stdin_used@@Base+0x248>
  4034e7:	mov    ecx,0x5
  4034ec:	mov    rsi,r13
  4034ef:	mov    ebx,0x2
  4034f4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4034f6:	seta   dl
  4034f9:	setb   al
  4034fc:	cmp    dl,al
  4034fe:	je     403370 <plt_get_lib@@Base+0x50>
  403504:	lea    rdi,[rip+0x1d43]        # 40524e <_IO_stdin_used@@Base+0x24e>
  40350b:	mov    ecx,0x4
  403510:	mov    rsi,r13
  403513:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403515:	jne    403550 <plt_get_lib@@Base+0x230>
  403517:	mov    ebx,0x3
  40351c:	jmp    403370 <plt_get_lib@@Base+0x50>
  403521:	lea    r13,[rip+0x1dd1]        # 4052f9 <_IO_stdin_used@@Base+0x2f9>
  403528:	mov    DWORD PTR [rbp-0x44],0xffffffff
  40352f:	mov    QWORD PTR [rbp-0x58],0x0
  403537:	xor    ebx,ebx
  403539:	mov    QWORD PTR [rbp-0x50],r13
  40353d:	jmp    4033b6 <plt_get_lib@@Base+0x96>
  403542:	mov    rax,r15
  403545:	mov    r15,r14
  403548:	mov    rsp,rax
  40354b:	jmp    40346b <plt_get_lib@@Base+0x14b>
  403550:	lea    rdi,[rip+0x1cfc]        # 405253 <_IO_stdin_used@@Base+0x253>
  403557:	mov    ecx,0x5
  40355c:	mov    rsi,r13
  40355f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403561:	je     403521 <plt_get_lib@@Base+0x201>
  403563:	mov    esi,0x3a
  403568:	mov    rdi,r13
  40356b:	call   4020a0 <strchr@plt>
  403570:	test   rax,rax
  403573:	je     4035a6 <plt_get_lib@@Base+0x286>
  403575:	sub    rax,r13
  403578:	lea    rdx,[rip+0x1cf9]        # 405278 <_IO_stdin_used@@Base+0x278>
  40357f:	mov    r8,r13
  403582:	lea    rcx,[rax+0x1]
  403586:	mov    rax,QWORD PTR [rip+0x4a6b]        # 407ff8 <stderr@GLIBC_2.2.5>
  40358d:	mov    esi,0x1
  403592:	mov    rdi,QWORD PTR [rax]
  403595:	xor    eax,eax
  403597:	call   402130 <__fprintf_chk@plt>
  40359c:	call   402050 <abort@plt>
  4035a1:	call   402080 <__stack_chk_fail@plt>
  4035a6:	mov    rax,QWORD PTR [rip+0x4a4b]        # 407ff8 <stderr@GLIBC_2.2.5>
  4035ad:	lea    rdx,[rip+0x1cec]        # 4052a0 <_IO_stdin_used@@Base+0x2a0>
  4035b4:	mov    rcx,r13
  4035b7:	mov    esi,0x1
  4035bc:	mov    rdi,QWORD PTR [rax]
  4035bf:	xor    eax,eax
  4035c1:	call   402130 <__fprintf_chk@plt>
  4035c6:	jmp    40359c <plt_get_lib@@Base+0x27c>
  4035c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004035d0 <plt_get_offsets@@Base>:
  4035d0:	push   rbp
  4035d1:	push   rbx
  4035d2:	mov    rbp,rdx
  4035d5:	sub    rsp,0x8
  4035d9:	call   403080 <mmk_mock_get_params@@Base+0x32>
  4035de:	test   rax,rax
  4035e1:	je     403610 <plt_get_offsets@@Base+0x40>
  4035e3:	mov    rbx,rax
  4035e6:	mov    edi,0x10
  4035eb:	call   4041c0 <mmk_malloc@@Base>
  4035f0:	mov    QWORD PTR [rbp+0x0],0x1
  4035f8:	mov    QWORD PTR [rax+0x8],0x0
  403600:	mov    QWORD PTR [rax],rbx
  403603:	add    rsp,0x8
  403607:	pop    rbx
  403608:	pop    rbp
  403609:	ret    
  40360a:	nop    WORD PTR [rax+rax*1+0x0]
  403610:	xor    eax,eax
  403612:	jmp    403603 <plt_get_offsets@@Base+0x33>
  403614:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40361f:	nop

0000000000403620 <plt_set_offsets@@Base>:
  403620:	mov    rcx,rsi
  403623:	shl    rcx,0x4
  403627:	add    rcx,rdi
  40362a:	test   rsi,rsi
  40362d:	jne    403644 <plt_set_offsets@@Base+0x24>
  40362f:	jmp    403661 <plt_set_offsets@@Base+0x41>
  403631:	nop    DWORD PTR [rax+0x0]
  403638:	add    rdi,0x10
  40363c:	mov    QWORD PTR [rax],rdx
  40363f:	cmp    rdi,rcx
  403642:	je     403661 <plt_set_offsets@@Base+0x41>
  403644:	cmp    QWORD PTR [rdi+0x8],0x0
  403649:	mov    rax,QWORD PTR [rdi]
  40364c:	jne    403638 <plt_set_offsets@@Base+0x18>
  40364e:	mov    rsi,QWORD PTR [rax]
  403651:	add    rdi,0x10
  403655:	mov    QWORD PTR [rdi-0x8],rsi
  403659:	cmp    rdi,rcx
  40365c:	mov    QWORD PTR [rax],rdx
  40365f:	jne    403644 <plt_set_offsets@@Base+0x24>
  403661:	repz ret 
  403663:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40366e:	xchg   ax,ax

0000000000403670 <plt_reset_offsets@@Base>:
  403670:	mov    rcx,rsi
  403673:	shl    rcx,0x4
  403677:	add    rcx,rdi
  40367a:	test   rsi,rsi
  40367d:	je     403693 <plt_reset_offsets@@Base+0x23>
  40367f:	nop
  403680:	mov    rdx,QWORD PTR [rdi+0x8]
  403684:	mov    rax,QWORD PTR [rdi]
  403687:	add    rdi,0x10
  40368b:	cmp    rdi,rcx
  40368e:	mov    QWORD PTR [rax],rdx
  403691:	jne    403680 <plt_reset_offsets@@Base+0x10>
  403693:	repz ret 
  403695:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004036a0 <plt_get_real_fn@@Base>:
  4036a0:	push   rbp
  4036a1:	push   rbx
  4036a2:	sub    rsp,0x8
  4036a6:	mov    rbx,QWORD PTR [rdi+0x8]
  4036aa:	test   rbx,rbx
  4036ad:	je     4036e0 <plt_get_real_fn@@Base+0x40>
  4036af:	mov    rbp,rsi
  4036b2:	jmp    4036c1 <plt_get_real_fn@@Base+0x21>
  4036b4:	nop    DWORD PTR [rax+0x0]
  4036b8:	mov    rbx,QWORD PTR [rbx+0x18]
  4036bc:	test   rbx,rbx
  4036bf:	je     4036e0 <plt_get_real_fn@@Base+0x40>
  4036c1:	mov    rsi,rbp
  4036c4:	mov    rdi,rbx
  4036c7:	call   403080 <mmk_mock_get_params@@Base+0x32>
  4036cc:	test   rax,rax
  4036cf:	je     4036b8 <plt_get_real_fn@@Base+0x18>
  4036d1:	mov    rax,QWORD PTR [rax]
  4036d4:	add    rsp,0x8
  4036d8:	pop    rbx
  4036d9:	pop    rbp
  4036da:	ret    
  4036db:	nop    DWORD PTR [rax+rax*1+0x0]
  4036e0:	add    rsp,0x8
  4036e4:	xor    eax,eax
  4036e6:	pop    rbx
  4036e7:	pop    rbp
  4036e8:	ret    

00000000004036e9 <mmk_stub_context@@Base>:
  4036e9:	mov    QWORD PTR [rsp-0x8],rdi
  4036ee:	cmp    QWORD PTR [rsp-0x8],0x0
  4036f4:	jne    4036fd <mmk_stub_context@@Base+0x14>
  4036f6:	mov    eax,0x0
  4036fb:	jmp    403706 <mmk_stub_context@@Base+0x1d>
  4036fd:	mov    rax,QWORD PTR [rsp-0x8]
  403702:	mov    rax,QWORD PTR [rax+0x18]
  403706:	ret    

0000000000403707 <mmk_stub_create_static@@Base>:
  403707:	sub    rsp,0x68
  40370b:	mov    QWORD PTR [rsp+0x18],rdi
  403710:	mov    QWORD PTR [rsp+0x10],rsi
  403715:	mov    QWORD PTR [rsp+0x8],rdx
  40371a:	mov    QWORD PTR [rsp],rcx
  40371e:	mov    rax,QWORD PTR fs:0x28
  403727:	mov    QWORD PTR [rsp+0x58],rax
  40372c:	xor    eax,eax
  40372e:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40373a:	add    rax,0xffffffffffffffe0
  403740:	mov    DWORD PTR [rax],0x0
  403746:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403752:	add    rax,0xffffffffffffffe8
  403758:	mov    QWORD PTR [rax],0x0
  40375f:	mov    rax,QWORD PTR [rsp+0x10]
  403764:	mov    rdi,rax
  403767:	call   404170 <mmk_strlen@@Base>
  40376c:	add    rax,0x1
  403770:	mov    rdi,rax
  403773:	call   4041c0 <mmk_malloc@@Base>
  403778:	mov    QWORD PTR [rsp+0x38],rax
  40377d:	cmp    QWORD PTR [rsp+0x38],0x0
  403783:	jne    40378f <mmk_stub_create_static@@Base+0x88>
  403785:	mov    eax,0xfffffff4
  40378a:	jmp    403928 <mmk_stub_create_static@@Base+0x221>
  40378f:	mov    rdx,QWORD PTR [rsp+0x10]
  403794:	mov    rax,QWORD PTR [rsp+0x38]
  403799:	mov    rsi,rdx
  40379c:	mov    rdi,rax
  40379f:	call   404110 <mmk_strcpy@@Base>
  4037a4:	mov    QWORD PTR [rsp+0x30],0x0
  4037ad:	mov    rax,QWORD PTR [rsp+0x38]
  4037b2:	mov    esi,0x40
  4037b7:	mov    rdi,rax
  4037ba:	call   4040e0 <mmk_strchr@@Base>
  4037bf:	mov    QWORD PTR [rsp+0x40],rax
  4037c4:	cmp    QWORD PTR [rsp+0x40],0x0
  4037ca:	je     4037e2 <mmk_stub_create_static@@Base+0xdb>
  4037cc:	mov    rax,QWORD PTR [rsp+0x40]
  4037d1:	mov    BYTE PTR [rax],0x0
  4037d4:	mov    rax,QWORD PTR [rsp+0x40]
  4037d9:	add    rax,0x1
  4037dd:	mov    QWORD PTR [rsp+0x30],rax
  4037e2:	call   402afb <mmk_plt_ctx@@Base>
  4037e7:	mov    rdx,rax
  4037ea:	mov    rax,QWORD PTR [rsp+0x30]
  4037ef:	mov    rsi,rax
  4037f2:	mov    rdi,rdx
  4037f5:	call   403320 <plt_get_lib@@Base>
  4037fa:	mov    QWORD PTR [rsp+0x48],rax
  4037ff:	cmp    QWORD PTR [rsp+0x48],0x0
  403805:	jne    403811 <mmk_stub_create_static@@Base+0x10a>
  403807:	mov    eax,0xfffffffe
  40380c:	jmp    403928 <mmk_stub_create_static@@Base+0x221>
  403811:	mov    QWORD PTR [rsp+0x28],0x0
  40381a:	lea    rdx,[rsp+0x28]
  40381f:	mov    rcx,QWORD PTR [rsp+0x38]
  403824:	mov    rax,QWORD PTR [rsp+0x48]
  403829:	mov    rsi,rcx
  40382c:	mov    rdi,rax
  40382f:	call   4035d0 <plt_get_offsets@@Base>
  403834:	mov    QWORD PTR [rsp+0x50],rax
  403839:	cmp    QWORD PTR [rsp+0x50],0x0
  40383f:	je     40384b <mmk_stub_create_static@@Base+0x144>
  403841:	mov    rax,QWORD PTR [rsp+0x28]
  403846:	test   rax,rax
  403849:	jne    403855 <mmk_stub_create_static@@Base+0x14e>
  40384b:	mov    eax,0xfffffffe
  403850:	jmp    403928 <mmk_stub_create_static@@Base+0x221>
  403855:	mov    r8,QWORD PTR [rsp+0x28]
  40385a:	mov    rax,QWORD PTR [rsp+0x18]
  40385f:	mov    rsi,rax
  403862:	mov    eax,0x0
  403867:	mov    edx,0xa
  40386c:	mov    rdi,rsi
  40386f:	mov    rcx,rdx
  403872:	rep stos QWORD PTR es:[rdi],rax
  403875:	mov    rax,QWORD PTR [rsp+0x18]
  40387a:	mov    rdx,0x403a73
  403881:	mov    QWORD PTR [rax],rdx
  403884:	mov    rax,QWORD PTR [rsp+0x18]
  403889:	mov    rdx,0x403ace
  403890:	mov    QWORD PTR [rax+0x8],rdx
  403894:	mov    rax,QWORD PTR [rsp+0x18]
  403899:	mov    rdx,0x403ab0
  4038a0:	mov    QWORD PTR [rax+0x10],rdx
  4038a4:	mov    rax,QWORD PTR [rsp+0x18]
  4038a9:	mov    rdx,QWORD PTR [rsp]
  4038ad:	mov    QWORD PTR [rax+0x18],rdx
  4038b1:	mov    rax,QWORD PTR [rsp+0x18]
  4038b6:	mov    rdx,QWORD PTR [rsp+0x38]
  4038bb:	mov    QWORD PTR [rax+0x20],rdx
  4038bf:	mov    rax,QWORD PTR [rsp+0x18]
  4038c4:	mov    rdx,QWORD PTR [rsp+0x30]
  4038c9:	mov    QWORD PTR [rax+0x28],rdx
  4038cd:	mov    rax,QWORD PTR [rsp+0x18]
  4038d2:	mov    rdx,QWORD PTR [rsp+0x50]
  4038d7:	mov    QWORD PTR [rax+0x30],rdx
  4038db:	mov    rax,QWORD PTR [rsp+0x18]
  4038e0:	mov    QWORD PTR [rax+0x38],r8
  4038e4:	mov    rdx,QWORD PTR [rsp+0x8]
  4038e9:	mov    rax,QWORD PTR [rsp+0x18]
  4038ee:	mov    rsi,rdx
  4038f1:	mov    rdi,rax
  4038f4:	call   403b00 <create_trampoline@@Base>
  4038f9:	mov    rdx,rax
  4038fc:	mov    rax,QWORD PTR [rsp+0x18]
  403901:	mov    QWORD PTR [rax+0x40],rdx
  403905:	mov    rax,QWORD PTR [rsp+0x18]
  40390a:	mov    rdx,QWORD PTR [rax+0x40]
  40390e:	mov    rcx,QWORD PTR [rsp+0x28]
  403913:	mov    rax,QWORD PTR [rsp+0x50]
  403918:	mov    rsi,rcx
  40391b:	mov    rdi,rax
  40391e:	call   403620 <plt_set_offsets@@Base>
  403923:	mov    eax,0x0
  403928:	mov    rcx,QWORD PTR [rsp+0x58]
  40392d:	xor    rcx,QWORD PTR fs:0x28
  403936:	je     40393d <mmk_stub_create_static@@Base+0x236>
  403938:	call   402080 <__stack_chk_fail@plt>
  40393d:	add    rsp,0x68
  403941:	ret    

0000000000403942 <mmk_stub_create@@Base>:
  403942:	sub    rsp,0x38
  403946:	mov    QWORD PTR [rsp+0x18],rdi
  40394b:	mov    QWORD PTR [rsp+0x10],rsi
  403950:	mov    QWORD PTR [rsp+0x8],rdx
  403955:	call   402a61 <mmk_init@@Base>
  40395a:	mov    edi,0x50
  40395f:	call   4041c0 <mmk_malloc@@Base>
  403964:	mov    QWORD PTR [rsp+0x28],rax
  403969:	mov    rcx,QWORD PTR [rsp+0x8]
  40396e:	mov    rdx,QWORD PTR [rsp+0x10]
  403973:	mov    rsi,QWORD PTR [rsp+0x18]
  403978:	mov    rax,QWORD PTR [rsp+0x28]
  40397d:	mov    rdi,rax
  403980:	call   403707 <mmk_stub_create_static@@Base>
  403985:	mov    DWORD PTR [rsp+0x24],eax
  403989:	cmp    DWORD PTR [rsp+0x24],0x0
  40398e:	jns    4039b4 <mmk_stub_create@@Base+0x72>
  403990:	mov    rax,QWORD PTR [rsp+0x28]
  403995:	mov    rdi,rax
  403998:	call   4041e0 <mmk_free@@Base>
  40399d:	call   402060 <__errno_location@plt>
  4039a2:	mov    rdx,rax
  4039a5:	mov    eax,DWORD PTR [rsp+0x24]
  4039a9:	mov    DWORD PTR [rdx],eax
  4039ab:	mov    QWORD PTR [rsp+0x28],0x0
  4039b4:	mov    rax,QWORD PTR [rsp+0x28]
  4039b9:	add    rsp,0x38
  4039bd:	ret    

00000000004039be <mmk_stub_destroy_static@@Base>:
  4039be:	sub    rsp,0x18
  4039c2:	mov    QWORD PTR [rsp+0x8],rdi
  4039c7:	mov    rax,QWORD PTR [rsp+0x8]
  4039cc:	mov    rdx,QWORD PTR [rax+0x38]
  4039d0:	mov    rax,QWORD PTR [rsp+0x8]
  4039d5:	mov    rax,QWORD PTR [rax+0x30]
  4039d9:	mov    rsi,rdx
  4039dc:	mov    rdi,rax
  4039df:	call   403670 <plt_reset_offsets@@Base>
  4039e4:	mov    rax,QWORD PTR [rsp+0x8]
  4039e9:	mov    rax,QWORD PTR [rax+0x30]
  4039ed:	mov    rdi,rax
  4039f0:	call   4041e0 <mmk_free@@Base>
  4039f5:	mov    rax,QWORD PTR [rsp+0x8]
  4039fa:	mov    rax,QWORD PTR [rax+0x40]
  4039fe:	mov    rdi,rax
  403a01:	call   403bd0 <destroy_trampoline@@Base>
  403a06:	mov    rax,QWORD PTR [rsp+0x8]
  403a0b:	mov    rax,QWORD PTR [rax+0x20]
  403a0f:	mov    rdi,rax
  403a12:	call   4041e0 <mmk_free@@Base>
  403a17:	nop
  403a18:	add    rsp,0x18
  403a1c:	ret    

0000000000403a1d <mmk_stub_destroy@@Base>:
  403a1d:	sub    rsp,0x18
  403a21:	mov    QWORD PTR [rsp+0x8],rdi
  403a26:	mov    rax,QWORD PTR [rsp+0x8]
  403a2b:	mov    rdi,rax
  403a2e:	call   4039be <mmk_stub_destroy_static@@Base>
  403a33:	mov    rax,QWORD PTR [rsp+0x8]
  403a38:	mov    rdi,rax
  403a3b:	call   4041e0 <mmk_free@@Base>
  403a40:	nop
  403a41:	add    rsp,0x18
  403a45:	ret    

0000000000403a46 <mmk_ask_ctx@@Base>:
  403a46:	sub    rsp,0x18
  403a4a:	mov    QWORD PTR [rsp+0x8],rdi
  403a4f:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a5b:	add    rax,0xffffffffffffffe0
  403a61:	mov    DWORD PTR [rax],0x1
  403a67:	mov    rax,QWORD PTR [rsp+0x8]
  403a6c:	call   rax
  403a6e:	add    rsp,0x18
  403a72:	ret    

0000000000403a73 <mmk_ctx_asked@@Base>:
  403a73:	sub    rsp,0x18
  403a77:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a83:	add    rax,0xffffffffffffffe0
  403a89:	mov    eax,DWORD PTR [rax]
  403a8b:	mov    DWORD PTR [rsp+0xc],eax
  403a8f:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a9b:	add    rax,0xffffffffffffffe0
  403aa1:	mov    DWORD PTR [rax],0x0
  403aa7:	mov    eax,DWORD PTR [rsp+0xc]
  403aab:	add    rsp,0x18
  403aaf:	ret    

0000000000403ab0 <mmk_ctx@@Base>:
  403ab0:	sub    rsp,0x8
  403ab4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403ac0:	add    rax,0xffffffffffffffe8
  403ac6:	mov    rax,QWORD PTR [rax]
  403ac9:	add    rsp,0x8
  403acd:	ret    

0000000000403ace <mmk_set_ctx@@Base>:
  403ace:	sub    rsp,0x18
  403ad2:	mov    QWORD PTR [rsp+0x8],rdi
  403ad7:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403ae3:	lea    rdx,[rax-0x18]
  403aea:	mov    rax,QWORD PTR [rsp+0x8]
  403aef:	mov    QWORD PTR [rdx],rax
  403af2:	nop
  403af3:	add    rsp,0x18
  403af7:	ret    
  403af8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b00 <create_trampoline@@Base>:
  403b00:	push   r14
  403b02:	push   r13
  403b04:	push   r12
  403b06:	mov    r12,0x40434f
  403b0d:	push   rbp
  403b0e:	mov    rbp,0x404422
  403b15:	push   rbx
  403b16:	sub    rbp,r12
  403b19:	cmp    rbp,0xfff
  403b20:	ja     403b87 <create_trampoline@@Base+0x87>
  403b22:	xor    r9d,r9d
  403b25:	mov    r14,rdi
  403b28:	mov    r13,rsi
  403b2b:	xor    edi,edi
  403b2d:	mov    r8d,0xffffffff
  403b33:	mov    ecx,0x22
  403b38:	mov    edx,0x7
  403b3d:	mov    esi,0x1000
  403b42:	call   402090 <mmap@plt>
  403b47:	cmp    rax,0xffffffffffffffff
  403b4b:	mov    rbx,rax
  403b4e:	je     403bbd <create_trampoline@@Base+0xbd>
  403b50:	mov    QWORD PTR [rax+0x8],r13
  403b54:	lea    r13,[rax+0x10]
  403b58:	mov    rdx,rbp
  403b5b:	mov    rsi,r12
  403b5e:	mov    QWORD PTR [rax],r14
  403b61:	mov    rdi,r13
  403b64:	call   4020e0 <memcpy@plt>
  403b69:	mov    rdi,rbx
  403b6c:	mov    edx,0x5
  403b71:	mov    esi,0x1000
  403b76:	call   402120 <mprotect@plt>
  403b7b:	pop    rbx
  403b7c:	mov    rax,r13
  403b7f:	pop    rbp
  403b80:	pop    r12
  403b82:	pop    r13
  403b84:	pop    r14
  403b86:	ret    
  403b87:	lea    r9,[rip+0x1735]        # 4052c3 <_IO_stdin_used@@Base+0x2c3>
  403b8e:	mov    r8d,0x2d
  403b94:	mov    rax,QWORD PTR [rip+0x445d]        # 407ff8 <stderr@GLIBC_2.2.5>
  403b9b:	lea    rcx,[rip+0x176e]        # 405310 <_IO_stdin_used@@Base+0x310>
  403ba2:	lea    rdx,[rip+0x1734]        # 4052dd <_IO_stdin_used@@Base+0x2dd>
  403ba9:	mov    esi,0x1
  403bae:	mov    rdi,QWORD PTR [rax]
  403bb1:	xor    eax,eax
  403bb3:	call   402130 <__fprintf_chk@plt>
  403bb8:	call   402050 <abort@plt>
  403bbd:	lea    r9,[rip+0x1736]        # 4052fa <_IO_stdin_used@@Base+0x2fa>
  403bc4:	mov    r8d,0x45
  403bca:	jmp    403b94 <create_trampoline@@Base+0x94>
  403bcc:	nop    DWORD PTR [rax+0x0]

0000000000403bd0 <destroy_trampoline@@Base>:
  403bd0:	sub    rdi,0x10
  403bd4:	mov    esi,0x1000
  403bd9:	jmp    402100 <munmap@plt>

0000000000403bde <mmk_verify_set_times@@Base>:
  403bde:	sub    rsp,0x18
  403be2:	mov    QWORD PTR [rsp+0x8],rdi
  403be7:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403bf3:	lea    rdx,[rax-0x10]
  403bfa:	mov    rax,QWORD PTR [rsp+0x8]
  403bff:	mov    QWORD PTR [rdx],rax
  403c02:	nop
  403c03:	add    rsp,0x18
  403c07:	ret    

0000000000403c08 <mmk_verify_times@@Base>:
  403c08:	sub    rsp,0x28
  403c0c:	mov    QWORD PTR [rsp+0x8],rdi
  403c11:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403c1d:	add    rax,0xfffffffffffffff0
  403c23:	mov    rax,QWORD PTR [rax]
  403c26:	mov    QWORD PTR [rsp+0x10],rax
  403c2b:	mov    rax,QWORD PTR [rsp+0x8]
  403c30:	mov    eax,DWORD PTR [rax+0x4]
  403c33:	test   eax,eax
  403c35:	je     403c48 <mmk_verify_times@@Base+0x40>
  403c37:	cmp    QWORD PTR [rsp+0x10],0x0
  403c3d:	sete   al
  403c40:	movzx  eax,al
  403c43:	jmp    403ce8 <mmk_verify_times@@Base+0xe0>
  403c48:	mov    rax,QWORD PTR [rsp+0x8]
  403c4d:	mov    rax,QWORD PTR [rax+0x8]
  403c51:	test   rax,rax
  403c54:	jne    403c64 <mmk_verify_times@@Base+0x5c>
  403c56:	mov    rax,QWORD PTR [rsp+0x8]
  403c5b:	mov    rax,QWORD PTR [rax+0x10]
  403c5f:	test   rax,rax
  403c62:	je     403cb1 <mmk_verify_times@@Base+0xa9>
  403c64:	mov    rax,QWORD PTR [rsp+0x8]
  403c69:	mov    rax,QWORD PTR [rax+0x10]
  403c6d:	test   rax,rax
  403c70:	je     403c7d <mmk_verify_times@@Base+0x75>
  403c72:	mov    rax,QWORD PTR [rsp+0x8]
  403c77:	mov    rax,QWORD PTR [rax+0x10]
  403c7b:	jmp    403c82 <mmk_verify_times@@Base+0x7a>
  403c7d:	mov    rax,QWORD PTR [rsp+0x10]
  403c82:	mov    QWORD PTR [rsp+0x18],rax
  403c87:	mov    rax,QWORD PTR [rsp+0x8]
  403c8c:	mov    rax,QWORD PTR [rax+0x8]
  403c90:	cmp    rax,QWORD PTR [rsp+0x10]
  403c95:	ja     403caa <mmk_verify_times@@Base+0xa2>
  403c97:	mov    rax,QWORD PTR [rsp+0x10]
  403c9c:	cmp    rax,QWORD PTR [rsp+0x18]
  403ca1:	ja     403caa <mmk_verify_times@@Base+0xa2>
  403ca3:	mov    eax,0x1
  403ca8:	jmp    403ce8 <mmk_verify_times@@Base+0xe0>
  403caa:	mov    eax,0x0
  403caf:	jmp    403ce8 <mmk_verify_times@@Base+0xe0>
  403cb1:	mov    rax,QWORD PTR [rsp+0x8]
  403cb6:	mov    rax,QWORD PTR [rax+0x20]
  403cba:	test   rax,rax
  403cbd:	je     403cd4 <mmk_verify_times@@Base+0xcc>
  403cbf:	mov    rax,QWORD PTR [rsp+0x8]
  403cc4:	mov    rax,QWORD PTR [rax+0x20]
  403cc8:	mov    rdx,QWORD PTR [rsp+0x10]
  403ccd:	mov    rdi,rdx
  403cd0:	call   rax
  403cd2:	jmp    403ce8 <mmk_verify_times@@Base+0xe0>
  403cd4:	mov    rax,QWORD PTR [rsp+0x8]
  403cd9:	mov    rax,QWORD PTR [rax+0x18]
  403cdd:	cmp    rax,QWORD PTR [rsp+0x10]
  403ce2:	sete   al
  403ce5:	movzx  eax,al
  403ce8:	add    rsp,0x28
  403cec:	ret    
  403ced:	sub    rsp,0x48
  403cf1:	mov    QWORD PTR [rsp+0x18],rdi
  403cf6:	mov    QWORD PTR [rsp+0x10],rsi
  403cfb:	mov    QWORD PTR [rsp+0x8],rdx
  403d00:	add    QWORD PTR [rsp+0x10],0x8
  403d06:	sub    QWORD PTR [rsp+0x8],0x8
  403d0c:	mov    rax,QWORD PTR [rsp+0x18]
  403d11:	mov    rdi,rax
  403d14:	call   402fbf <mmk_mock_params_begin@@Base>
  403d19:	mov    QWORD PTR [rsp+0x30],rax
  403d1e:	jmp    403d88 <mmk_verify_times@@Base+0x180>
  403d20:	mov    rax,QWORD PTR [rsp+0x30]
  403d25:	lea    rcx,[rax+0x8]
  403d29:	mov    rdx,QWORD PTR [rsp+0x8]
  403d2e:	mov    rax,QWORD PTR [rsp+0x10]
  403d33:	mov    rsi,rax
  403d36:	mov    rdi,rcx
  403d39:	call   403ff0 <mmk_memcmp@@Base>
  403d3e:	mov    DWORD PTR [rsp+0x2c],eax
  403d42:	cmp    DWORD PTR [rsp+0x2c],0x0
  403d47:	jne    403d6e <mmk_verify_times@@Base+0x166>
  403d49:	mov    rax,QWORD PTR [rsp+0x30]
  403d4e:	mov    QWORD PTR [rsp+0x38],rax
  403d53:	mov    rax,QWORD PTR [rsp+0x38]
  403d58:	mov    rax,QWORD PTR [rax]
  403d5b:	lea    rdx,[rax+0x1]
  403d5f:	mov    rax,QWORD PTR [rsp+0x38]
  403d64:	mov    QWORD PTR [rax],rdx
  403d67:	mov    eax,0x1
  403d6c:	jmp    403d95 <mmk_verify_times@@Base+0x18d>
  403d6e:	mov    rdx,QWORD PTR [rsp+0x30]
  403d73:	mov    rax,QWORD PTR [rsp+0x18]
  403d78:	mov    rsi,rdx
  403d7b:	mov    rdi,rax
  403d7e:	call   402ff5 <mmk_mock_params_next@@Base>
  403d83:	mov    QWORD PTR [rsp+0x30],rax
  403d88:	cmp    QWORD PTR [rsp+0x30],0x0
  403d8e:	jne    403d20 <mmk_verify_times@@Base+0x118>
  403d90:	mov    eax,0x0
  403d95:	add    rsp,0x48
  403d99:	ret    

0000000000403d9a <mmk_verify_register_call@@Base>:
  403d9a:	sub    rsp,0x48
  403d9e:	mov    QWORD PTR [rsp+0x8],rdi
  403da3:	mov    QWORD PTR [rsp],rsi
  403da7:	call   403ab0 <mmk_ctx@@Base>
  403dac:	mov    rdi,rax
  403daf:	call   4036e9 <mmk_stub_context@@Base>
  403db4:	mov    QWORD PTR [rsp+0x10],rax
  403db9:	mov    rax,QWORD PTR [rsp+0x10]
  403dbe:	mov    rax,QWORD PTR [rax+0x10]
  403dc2:	test   rax,rax
  403dc5:	jne    403e4c <mmk_verify_register_call@@Base+0xb2>
  403dcb:	mov    edi,0x1000
  403dd0:	call   4041c0 <mmk_malloc@@Base>
  403dd5:	mov    rdx,rax
  403dd8:	mov    rax,QWORD PTR [rsp+0x10]
  403ddd:	mov    QWORD PTR [rax+0x10],rdx
  403de1:	mov    rax,QWORD PTR [rsp+0x10]
  403de6:	mov    rax,QWORD PTR [rax+0x10]
  403dea:	test   rax,rax
  403ded:	jne    403e3f <mmk_verify_register_call@@Base+0xa5>
  403def:	mov    rax,QWORD PTR [rip+0x4202]        # 407ff8 <stderr@GLIBC_2.2.5>
  403df6:	mov    rax,QWORD PTR [rax]
  403df9:	mov    QWORD PTR [rsp+0x20],rax
  403dfe:	lea    rax,[rip+0x1563]        # 405368 <_IO_stdin_used@@Base+0x368>
  403e05:	mov    QWORD PTR [rsp+0x28],rax
  403e0a:	mov    rdx,QWORD PTR [rsp+0x28]
  403e0f:	mov    rax,QWORD PTR [rsp+0x20]
  403e14:	lea    r9,[rip+0x156a]        # 405385 <_IO_stdin_used@@Base+0x385>
  403e1b:	mov    r8d,0x4f
  403e21:	lea    rcx,[rip+0x1570]        # 405398 <_IO_stdin_used@@Base+0x398>
  403e28:	mov    esi,0x1
  403e2d:	mov    rdi,rax
  403e30:	mov    eax,0x0
  403e35:	call   402130 <__fprintf_chk@plt>
  403e3a:	call   402050 <abort@plt>
  403e3f:	mov    rax,QWORD PTR [rsp+0x10]
  403e44:	mov    QWORD PTR [rax+0x20],0x1000
  403e4c:	mov    rdx,QWORD PTR [rsp]
  403e50:	mov    rcx,QWORD PTR [rsp+0x8]
  403e55:	mov    rax,QWORD PTR [rsp+0x10]
  403e5a:	mov    rsi,rcx
  403e5d:	mov    rdi,rax
  403e60:	call   403ced <mmk_verify_times@@Base+0xe5>
  403e65:	test   eax,eax
  403e67:	jne    403fdd <mmk_verify_register_call@@Base+0x243>
  403e6d:	mov    rax,QWORD PTR [rsp+0x10]
  403e72:	mov    rdx,QWORD PTR [rax+0x18]
  403e76:	mov    rax,QWORD PTR [rsp]
  403e7a:	add    rax,rdx
  403e7d:	lea    rdx,[rax+0x8]
  403e81:	mov    rax,QWORD PTR [rsp+0x10]
  403e86:	mov    rax,QWORD PTR [rax+0x20]
  403e8a:	cmp    rdx,rax
  403e8d:	jb     403f57 <mmk_verify_register_call@@Base+0x1bd>
  403e93:	jmp    403eae <mmk_verify_register_call@@Base+0x114>
  403e95:	mov    rax,QWORD PTR [rsp+0x10]
  403e9a:	mov    rax,QWORD PTR [rax+0x20]
  403e9e:	lea    rdx,[rax+0x1000]
  403ea5:	mov    rax,QWORD PTR [rsp+0x10]
  403eaa:	mov    QWORD PTR [rax+0x20],rdx
  403eae:	mov    rax,QWORD PTR [rsp+0x10]
  403eb3:	mov    rdx,QWORD PTR [rax+0x18]
  403eb7:	mov    rax,QWORD PTR [rsp]
  403ebb:	add    rax,rdx
  403ebe:	lea    rdx,[rax+0x8]
  403ec2:	mov    rax,QWORD PTR [rsp+0x10]
  403ec7:	mov    rax,QWORD PTR [rax+0x20]
  403ecb:	cmp    rdx,rax
  403ece:	jae    403e95 <mmk_verify_register_call@@Base+0xfb>
  403ed0:	mov    rax,QWORD PTR [rsp+0x10]
  403ed5:	mov    rdx,QWORD PTR [rax+0x20]
  403ed9:	mov    rax,QWORD PTR [rsp+0x10]
  403ede:	mov    rax,QWORD PTR [rax+0x10]
  403ee2:	mov    rsi,rdx
  403ee5:	mov    rdi,rax
  403ee8:	call   4041d0 <mmk_realloc@@Base>
  403eed:	mov    rdx,rax
  403ef0:	mov    rax,QWORD PTR [rsp+0x10]
  403ef5:	mov    QWORD PTR [rax+0x10],rdx
  403ef9:	mov    rax,QWORD PTR [rsp+0x10]
  403efe:	mov    rax,QWORD PTR [rax+0x10]
  403f02:	test   rax,rax
  403f05:	jne    403f57 <mmk_verify_register_call@@Base+0x1bd>
  403f07:	mov    rax,QWORD PTR [rip+0x40ea]        # 407ff8 <stderr@GLIBC_2.2.5>
  403f0e:	mov    rax,QWORD PTR [rax]
  403f11:	mov    QWORD PTR [rsp+0x30],rax
  403f16:	lea    rax,[rip+0x144b]        # 405368 <_IO_stdin_used@@Base+0x368>
  403f1d:	mov    QWORD PTR [rsp+0x38],rax
  403f22:	mov    rdx,QWORD PTR [rsp+0x38]
  403f27:	mov    rax,QWORD PTR [rsp+0x30]
  403f2c:	lea    r9,[rip+0x1452]        # 405385 <_IO_stdin_used@@Base+0x385>
  403f33:	mov    r8d,0x5b
  403f39:	lea    rcx,[rip+0x1458]        # 405398 <_IO_stdin_used@@Base+0x398>
  403f40:	mov    esi,0x1
  403f45:	mov    rdi,rax
  403f48:	mov    eax,0x0
  403f4d:	call   402130 <__fprintf_chk@plt>
  403f52:	call   402050 <abort@plt>
  403f57:	mov    rax,QWORD PTR [rsp+0x10]
  403f5c:	mov    rdx,QWORD PTR [rax+0x10]
  403f60:	mov    rax,QWORD PTR [rsp+0x10]
  403f65:	mov    rax,QWORD PTR [rax+0x18]
  403f69:	lea    rcx,[rdx+rax*1]
  403f6d:	mov    rax,rsp
  403f70:	mov    edx,0x8
  403f75:	mov    rsi,rax
  403f78:	mov    rdi,rcx
  403f7b:	call   404040 <mmk_memcpy@@Base>
  403f80:	mov    rdx,QWORD PTR [rsp]
  403f84:	mov    rax,QWORD PTR [rsp+0x10]
  403f89:	mov    rcx,QWORD PTR [rax+0x10]
  403f8d:	mov    rax,QWORD PTR [rsp+0x10]
  403f92:	mov    rax,QWORD PTR [rax+0x18]
  403f96:	add    rax,0x8
  403f9a:	add    rcx,rax
  403f9d:	mov    rax,QWORD PTR [rsp+0x8]
  403fa2:	mov    rsi,rax
  403fa5:	mov    rdi,rcx
  403fa8:	call   404040 <mmk_memcpy@@Base>
  403fad:	mov    QWORD PTR [rsp+0x18],rax
  403fb2:	mov    rax,QWORD PTR [rsp+0x18]
  403fb7:	mov    QWORD PTR [rax],0x1
  403fbe:	mov    rax,QWORD PTR [rsp+0x10]
  403fc3:	mov    rdx,QWORD PTR [rax+0x18]
  403fc7:	mov    rax,QWORD PTR [rsp]
  403fcb:	add    rax,rdx
  403fce:	lea    rdx,[rax+0x8]
  403fd2:	mov    rax,QWORD PTR [rsp+0x10]
  403fd7:	mov    QWORD PTR [rax+0x18],rdx
  403fdb:	jmp    403fde <mmk_verify_register_call@@Base+0x244>
  403fdd:	nop
  403fde:	add    rsp,0x48
  403fe2:	ret    
  403fe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fed:	nop    DWORD PTR [rax]

0000000000403ff0 <mmk_memcmp@@Base>:
  403ff0:	test   rdx,rdx
  403ff3:	je     40401f <mmk_memcmp@@Base+0x2f>
  403ff5:	movzx  ecx,BYTE PTR [rdi]
  403ff8:	movzx  eax,BYTE PTR [rsi]
  403ffb:	add    rdx,rdi
  403ffe:	cmp    al,cl
  404000:	je     404012 <mmk_memcmp@@Base+0x22>
  404002:	jmp    404028 <mmk_memcmp@@Base+0x38>
  404004:	nop    DWORD PTR [rax+0x0]
  404008:	movzx  ecx,BYTE PTR [rdi]
  40400b:	movzx  eax,BYTE PTR [rsi]
  40400e:	cmp    cl,al
  404010:	jne    404028 <mmk_memcmp@@Base+0x38>
  404012:	add    rdi,0x1
  404016:	add    rsi,0x1
  40401a:	cmp    rdx,rdi
  40401d:	jne    404008 <mmk_memcmp@@Base+0x18>
  40401f:	xor    eax,eax
  404021:	ret    
  404022:	nop    WORD PTR [rax+rax*1+0x0]
  404028:	cmp    cl,al
  40402a:	setl   al
  40402d:	movzx  eax,al
  404030:	neg    eax
  404032:	or     eax,0x1
  404035:	ret    
  404036:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404040 <mmk_memcpy@@Base>:
  404040:	test   rdx,rdx
  404043:	mov    rax,rdi
  404046:	lea    r8,[rsi+rdx*1]
  40404a:	mov    rcx,rdi
  40404d:	je     404063 <mmk_memcpy@@Base+0x23>
  40404f:	nop
  404050:	movzx  edx,BYTE PTR [rsi]
  404053:	add    rsi,0x1
  404057:	add    rcx,0x1
  40405b:	mov    BYTE PTR [rcx-0x1],dl
  40405e:	cmp    r8,rsi
  404061:	jne    404050 <mmk_memcpy@@Base+0x10>
  404063:	repz ret 
  404065:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404070 <mmk_strneq@@Base>:
  404070:	movzx  eax,BYTE PTR [rdi]
  404073:	test   al,al
  404075:	je     4040b3 <mmk_strneq@@Base+0x43>
  404077:	movzx  ecx,BYTE PTR [rsi]
  40407a:	test   cl,cl
  40407c:	je     4040b3 <mmk_strneq@@Base+0x43>
  40407e:	test   rdx,rdx
  404081:	je     4040c8 <mmk_strneq@@Base+0x58>
  404083:	cmp    cl,al
  404085:	je     4040a0 <mmk_strneq@@Base+0x30>
  404087:	jmp    4040d0 <mmk_strneq@@Base+0x60>
  404089:	nop    DWORD PTR [rax+0x0]
  404090:	movzx  ecx,BYTE PTR [rsi]
  404093:	test   cl,cl
  404095:	je     4040b3 <mmk_strneq@@Base+0x43>
  404097:	test   rdx,rdx
  40409a:	je     4040c8 <mmk_strneq@@Base+0x58>
  40409c:	cmp    al,cl
  40409e:	jne    4040d0 <mmk_strneq@@Base+0x60>
  4040a0:	add    rdi,0x1
  4040a4:	movzx  eax,BYTE PTR [rdi]
  4040a7:	add    rsi,0x1
  4040ab:	sub    rdx,0x1
  4040af:	test   al,al
  4040b1:	jne    404090 <mmk_strneq@@Base+0x20>
  4040b3:	test   rdx,rdx
  4040b6:	je     4040c8 <mmk_strneq@@Base+0x58>
  4040b8:	xor    eax,eax
  4040ba:	cmp    BYTE PTR [rsi],0x0
  4040bd:	sete   al
  4040c0:	ret    
  4040c1:	nop    DWORD PTR [rax+0x0]
  4040c8:	mov    eax,0x1
  4040cd:	ret    
  4040ce:	xchg   ax,ax
  4040d0:	xor    eax,eax
  4040d2:	ret    
  4040d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4040de:	xchg   ax,ax

00000000004040e0 <mmk_strchr@@Base>:
  4040e0:	movsx  eax,BYTE PTR [rdi]
  4040e3:	test   al,al
  4040e5:	je     4040ff <mmk_strchr@@Base+0x1f>
  4040e7:	cmp    esi,eax
  4040e9:	jne    4040f4 <mmk_strchr@@Base+0x14>
  4040eb:	jmp    404108 <mmk_strchr@@Base+0x28>
  4040ed:	nop    DWORD PTR [rax]
  4040f0:	cmp    edx,esi
  4040f2:	je     404108 <mmk_strchr@@Base+0x28>
  4040f4:	add    rdi,0x1
  4040f8:	movsx  edx,BYTE PTR [rdi]
  4040fb:	test   dl,dl
  4040fd:	jne    4040f0 <mmk_strchr@@Base+0x10>
  4040ff:	xor    eax,eax
  404101:	ret    
  404102:	nop    WORD PTR [rax+rax*1+0x0]
  404108:	mov    rax,rdi
  40410b:	ret    
  40410c:	nop    DWORD PTR [rax+0x0]

0000000000404110 <mmk_strcpy@@Base>:
  404110:	movzx  edx,BYTE PTR [rsi]
  404113:	mov    rax,rdi
  404116:	test   dl,dl
  404118:	je     404131 <mmk_strcpy@@Base+0x21>
  40411a:	nop    WORD PTR [rax+rax*1+0x0]
  404120:	add    rsi,0x1
  404124:	mov    BYTE PTR [rax],dl
  404126:	add    rax,0x1
  40412a:	movzx  edx,BYTE PTR [rsi]
  40412d:	test   dl,dl
  40412f:	jne    404120 <mmk_strcpy@@Base+0x10>
  404131:	mov    BYTE PTR [rax],0x0
  404134:	ret    
  404135:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404140 <mmk_strncpy@@Base>:
  404140:	test   rdx,rdx
  404143:	mov    rax,rdi
  404146:	movzx  ecx,BYTE PTR [rsi]
  404149:	jne    404163 <mmk_strncpy@@Base+0x23>
  40414b:	jmp    404167 <mmk_strncpy@@Base+0x27>
  40414d:	nop    DWORD PTR [rax]
  404150:	mov    BYTE PTR [rax],cl
  404152:	add    rsi,0x1
  404156:	add    rax,0x1
  40415a:	sub    rdx,0x1
  40415e:	movzx  ecx,BYTE PTR [rsi]
  404161:	je     404167 <mmk_strncpy@@Base+0x27>
  404163:	test   cl,cl
  404165:	jne    404150 <mmk_strncpy@@Base+0x10>
  404167:	mov    BYTE PTR [rax],0x0
  40416a:	ret    
  40416b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404170 <mmk_strlen@@Base>:
  404170:	xor    eax,eax
  404172:	cmp    BYTE PTR [rdi],0x0
  404175:	je     40418c <mmk_strlen@@Base+0x1c>
  404177:	nop    WORD PTR [rax+rax*1+0x0]
  404180:	add    rax,0x1
  404184:	cmp    BYTE PTR [rdi+rax*1],0x0
  404188:	jne    404180 <mmk_strlen@@Base+0x10>
  40418a:	repz ret 
  40418c:	repz ret 
  40418e:	xchg   ax,ax

0000000000404190 <mmk_isspace@@Base>:
  404190:	cmp    edi,0x20
  404193:	sete   al
  404196:	cmp    edi,0x9
  404199:	sete   dl
  40419c:	or     al,dl
  40419e:	jne    4041ae <mmk_isspace@@Base+0x1e>
  4041a0:	cmp    edi,0xd
  4041a3:	sete   al
  4041a6:	cmp    edi,0xa
  4041a9:	sete   dl
  4041ac:	or     eax,edx
  4041ae:	movzx  eax,al
  4041b1:	ret    
  4041b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041bd:	nop    DWORD PTR [rax]

00000000004041c0 <mmk_malloc@@Base>:
  4041c0:	mov    rax,0x408100
  4041c7:	jmp    QWORD PTR [rax]
  4041c9:	nop    DWORD PTR [rax+0x0]

00000000004041d0 <mmk_realloc@@Base>:
  4041d0:	mov    rax,0x4080f0
  4041d7:	jmp    QWORD PTR [rax]
  4041d9:	nop    DWORD PTR [rax+0x0]

00000000004041e0 <mmk_free@@Base>:
  4041e0:	mov    rax,0x4080f8
  4041e7:	jmp    QWORD PTR [rax]
  4041e9:	nop    DWORD PTR [rax+0x0]

00000000004041f0 <mmk_init_vital_functions@@Base>:
  4041f0:	push   rbx
  4041f1:	mov    rbx,rdi
  4041f4:	xor    edi,edi
  4041f6:	call   402150 <malloc@plt>
  4041fb:	xor    esi,esi
  4041fd:	mov    rdi,rax
  404200:	call   4020f0 <realloc@plt>
  404205:	mov    rdi,rax
  404208:	call   402040 <free@plt>
  40420d:	lea    rsi,[rip+0x11d8]        # 4053ec <_IO_stdin_used@@Base+0x3ec>
  404214:	mov    rdi,rbx
  404217:	call   4036a0 <plt_get_real_fn@@Base>
  40421c:	mov    rdx,0x408100
  404223:	test   rax,rax
  404226:	mov    QWORD PTR [rdx],rax
  404229:	je     404269 <mmk_init_vital_functions@@Base+0x79>
  40422b:	lea    rsi,[rip+0x11c1]        # 4053f3 <_IO_stdin_used@@Base+0x3f3>
  404232:	mov    rdi,rbx
  404235:	call   4036a0 <plt_get_real_fn@@Base>
  40423a:	mov    rdx,0x4080f0
  404241:	test   rax,rax
  404244:	mov    QWORD PTR [rdx],rax
  404247:	je     4042ae <mmk_init_vital_functions@@Base+0xbe>
  404249:	lea    rsi,[rip+0x11ab]        # 4053fb <_IO_stdin_used@@Base+0x3fb>
  404250:	mov    rdi,rbx
  404253:	call   4036a0 <plt_get_real_fn@@Base>
  404258:	mov    rdx,0x4080f8
  40425f:	test   rax,rax
  404262:	mov    QWORD PTR [rdx],rax
  404265:	je     40429f <mmk_init_vital_functions@@Base+0xaf>
  404267:	pop    rbx
  404268:	ret    
  404269:	lea    r9,[rip+0x1190]        # 405400 <_IO_stdin_used@@Base+0x400>
  404270:	mov    r8d,0x58
  404276:	mov    rax,QWORD PTR [rip+0x3d7b]        # 407ff8 <stderr@GLIBC_2.2.5>
  40427d:	lea    rcx,[rip+0x11b4]        # 405438 <_IO_stdin_used@@Base+0x438>
  404284:	lea    rdx,[rip+0x1052]        # 4052dd <_IO_stdin_used@@Base+0x2dd>
  40428b:	mov    esi,0x1
  404290:	mov    rdi,QWORD PTR [rax]
  404293:	xor    eax,eax
  404295:	call   402130 <__fprintf_chk@plt>
  40429a:	call   402050 <abort@plt>
  40429f:	lea    r9,[rip+0x1222]        # 4054c8 <_IO_stdin_used@@Base+0x4c8>
  4042a6:	mov    r8d,0x5a
  4042ac:	jmp    404276 <mmk_init_vital_functions@@Base+0x86>
  4042ae:	lea    r9,[rip+0x11db]        # 405490 <_IO_stdin_used@@Base+0x490>
  4042b5:	mov    r8d,0x59
  4042bb:	jmp    404276 <mmk_init_vital_functions@@Base+0x86>

00000000004042bd <mmk_when_init@@Base>:
  4042bd:	sub    rsp,0x18
  4042c1:	mov    QWORD PTR [rsp+0x8],rdi
  4042c6:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4042d2:	lea    rdx,[rax-0x8]
  4042d9:	mov    rax,QWORD PTR [rsp+0x8]
  4042de:	mov    QWORD PTR [rdx],rax
  4042e1:	nop
  4042e2:	add    rsp,0x18
  4042e6:	ret    

00000000004042e7 <mmk_when_get_result@@Base>:
  4042e7:	sub    rsp,0x8
  4042eb:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4042f7:	add    rax,0xfffffffffffffff8
  4042fd:	mov    rax,QWORD PTR [rax]
  404300:	add    rsp,0x8
  404304:	ret    

0000000000404305 <mmk_when_impl@@Base>:
  404305:	sub    rsp,0x28
  404309:	mov    QWORD PTR [rsp+0x8],rdi
  40430e:	mov    QWORD PTR [rsp],rsi
  404312:	mov    rax,QWORD PTR [rsp]
  404316:	mov    QWORD PTR [rsp+0x18],rax
  40431b:	call   402c20 <mmk_matcher_ctx@@Base>
  404320:	mov    rdx,rax
  404323:	mov    rax,QWORD PTR [rsp+0x18]
  404328:	mov    QWORD PTR [rax],rdx
  40432b:	mov    rax,QWORD PTR [rsp+0x8]
  404330:	mov    rdx,QWORD PTR [rax]
  404333:	mov    rax,QWORD PTR [rsp+0x18]
  404338:	mov    QWORD PTR [rax+0x8],rdx
  40433c:	mov    rax,QWORD PTR [rsp+0x8]
  404341:	mov    rdx,QWORD PTR [rsp+0x18]
  404346:	mov    QWORD PTR [rax],rdx
  404349:	nop
  40434a:	add    rsp,0x28
  40434e:	ret    

000000000040434f <mmk_trampoline@@Base>:
  40434f:	call   404354 <mmk_trampoline@@Base+0x5>
  404354:	pop    rax
  404355:	push   rax
  404356:	mov    rax,QWORD PTR [rax-0x15]
  40435a:	push   rdi
  40435b:	push   rsi
  40435c:	push   rdx
  40435d:	push   rcx
  40435e:	push   r8
  404360:	push   r9
  404362:	sub    rsp,0x10
  404366:	movdqu XMMWORD PTR [rsp],xmm0
  40436b:	sub    rsp,0x10
  40436f:	movdqu XMMWORD PTR [rsp],xmm1
  404374:	sub    rsp,0x10
  404378:	movdqu XMMWORD PTR [rsp],xmm2
  40437d:	sub    rsp,0x10
  404381:	movdqu XMMWORD PTR [rsp],xmm3
  404386:	sub    rsp,0x10
  40438a:	movdqu XMMWORD PTR [rsp],xmm4
  40438f:	sub    rsp,0x10
  404393:	movdqu XMMWORD PTR [rsp],xmm5
  404398:	sub    rsp,0x10
  40439c:	movdqu XMMWORD PTR [rsp],xmm6
  4043a1:	sub    rsp,0x10
  4043a5:	movdqu XMMWORD PTR [rsp],xmm7
  4043aa:	mov    rdi,rax
  4043ad:	push   rax
  4043ae:	mov    rax,QWORD PTR [rax+0x8]
  4043b2:	call   rax
  4043b4:	pop    rax
  4043b5:	mov    rax,QWORD PTR [rax]
  4043b8:	call   rax
  4043ba:	movdqu xmm7,XMMWORD PTR [rsp]
  4043bf:	add    rsp,0x10
  4043c3:	movdqu xmm6,XMMWORD PTR [rsp]
  4043c8:	add    rsp,0x10
  4043cc:	movdqu xmm5,XMMWORD PTR [rsp]
  4043d1:	add    rsp,0x10
  4043d5:	movdqu xmm4,XMMWORD PTR [rsp]
  4043da:	add    rsp,0x10
  4043de:	movdqu xmm3,XMMWORD PTR [rsp]
  4043e3:	add    rsp,0x10
  4043e7:	movdqu xmm2,XMMWORD PTR [rsp]
  4043ec:	add    rsp,0x10
  4043f0:	movdqu xmm1,XMMWORD PTR [rsp]
  4043f5:	add    rsp,0x10
  4043f9:	movdqu xmm0,XMMWORD PTR [rsp]
  4043fe:	add    rsp,0x10
  404402:	pop    r9
  404404:	pop    r8
  404406:	pop    rcx
  404407:	pop    rdx
  404408:	pop    rsi
  404409:	pop    rdi
  40440a:	test   rax,rax
  40440d:	jne    404416 <mmk_trampoline@@Base+0xc7>
  40440f:	pop    rax
  404410:	mov    rax,QWORD PTR [rax-0xd]
  404414:	jmp    rax
  404416:	pop    rax
  404417:	mov    rax,QWORD PTR [rax-0x15]
  40441b:	mov    rax,QWORD PTR [rax+0x10]
  40441f:	call   rax
  404421:	ret    

0000000000404422 <mmk_trampoline_end@@Base>:
  404422:	nop
  404423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40442d:	nop    DWORD PTR [rax]

0000000000404430 <__libc_csu_init@@Base>:
  404430:	endbr64 
  404434:	push   r15
  404436:	lea    r15,[rip+0x3983]        # 407dc0 <_IO_stdin_used@@Base+0x2dc0>
  40443d:	push   r14
  40443f:	mov    r14,rdx
  404442:	push   r13
  404444:	mov    r13,rsi
  404447:	push   r12
  404449:	mov    r12d,edi
  40444c:	push   rbp
  40444d:	lea    rbp,[rip+0x3974]        # 407dc8 <_IO_stdin_used@@Base+0x2dc8>
  404454:	push   rbx
  404455:	sub    rbp,r15
  404458:	sub    rsp,0x8
  40445c:	call   402000 <__snprintf_chk@plt-0x30>
  404461:	sar    rbp,0x3
  404465:	je     404486 <__libc_csu_init@@Base+0x56>
  404467:	xor    ebx,ebx
  404469:	nop    DWORD PTR [rax+0x0]
  404470:	mov    rdx,r14
  404473:	mov    rsi,r13
  404476:	mov    edi,r12d
  404479:	call   QWORD PTR [r15+rbx*8]
  40447d:	add    rbx,0x1
  404481:	cmp    rbp,rbx
  404484:	jne    404470 <__libc_csu_init@@Base+0x40>
  404486:	add    rsp,0x8
  40448a:	pop    rbx
  40448b:	pop    rbp
  40448c:	pop    r12
  40448e:	pop    r13
  404490:	pop    r14
  404492:	pop    r15
  404494:	ret    
  404495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004044a0 <__libc_csu_fini@@Base>:
  4044a0:	endbr64 
  4044a4:	ret    

Disassembly of section .fini:

00000000004044a8 <.fini>:
  4044a8:	endbr64 
  4044ac:	sub    rsp,0x8
  4044b0:	add    rsp,0x8
  4044b4:	ret    
