
../repos/dvidelabs-flatcc-3b39ef7/test/load_test/load_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe9]        # 40fff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <flatcc_builder_padding_base@@Base+0x49c8>
  403026:	jmp    QWORD PTR [rip+0xcfe4]        # 410010 <flatcc_builder_padding_base@@Base+0x49d0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xcfe2]        # 410018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xcfda]        # 410020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <puts@plt>:
  403050:	jmp    QWORD PTR [rip+0xcfd2]        # 410028 <puts@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <fclose@plt>:
  403060:	jmp    QWORD PTR [rip+0xcfca]        # 410030 <fclose@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <strlen@plt>:
  403070:	jmp    QWORD PTR [rip+0xcfc2]        # 410038 <strlen@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <__stack_chk_fail@plt>:
  403080:	jmp    QWORD PTR [rip+0xcfba]        # 410040 <__stack_chk_fail@GLIBC_2.4>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <printf@plt>:
  403090:	jmp    QWORD PTR [rip+0xcfb2]        # 410048 <printf@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <gettimeofday@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xcfaa]        # 410050 <gettimeofday@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <__assert_fail@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xcfa2]        # 410058 <__assert_fail@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memset@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xcf9a]        # 410060 <memset@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <memchr@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xcf92]        # 410068 <memchr@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <memcmp@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xcf8a]        # 410070 <memcmp@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <strcmp@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xcf82]        # 410078 <strcmp@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <memcpy@plt>:
  403100:	jmp    QWORD PTR [rip+0xcf7a]        # 410080 <memcpy@GLIBC_2.14>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

0000000000403110 <malloc@plt>:
  403110:	jmp    QWORD PTR [rip+0xcf72]        # 410088 <malloc@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <free@plt-0x10>

0000000000403120 <realloc@plt>:
  403120:	jmp    QWORD PTR [rip+0xcf6a]        # 410090 <realloc@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <free@plt-0x10>

0000000000403130 <fopen@plt>:
  403130:	jmp    QWORD PTR [rip+0xcf62]        # 410098 <fopen@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <free@plt-0x10>

0000000000403140 <fwrite@plt>:
  403140:	jmp    QWORD PTR [rip+0xcf5a]        # 4100a0 <fwrite@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <free@plt-0x10>

0000000000403150 <posix_memalign@plt>:
  403150:	jmp    QWORD PTR [rip+0xcf52]        # 4100a8 <posix_memalign@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403160 <_start@@Base>:
  403160:	endbr64 
  403164:	xor    ebp,ebp
  403166:	mov    r9,rdx
  403169:	pop    rsi
  40316a:	mov    rdx,rsp
  40316d:	and    rsp,0xfffffffffffffff0
  403171:	push   rax
  403172:	push   rsp
  403173:	mov    r8,0x40a6e0
  40317a:	mov    rcx,0x40a670
  403181:	mov    rdi,0x4041cd
  403188:	call   QWORD PTR [rip+0xce62]        # 40fff0 <__libc_start_main@GLIBC_2.2.5>
  40318e:	hlt    
  40318f:	nop
  403190:	endbr64 
  403194:	ret    
  403195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40319f:	nop
  4031a0:	mov    eax,0x4100d7
  4031a5:	push   rbp
  4031a6:	sub    rax,0x4100d0
  4031ac:	cmp    rax,0xe
  4031b0:	mov    rbp,rsp
  4031b3:	jbe    4031d0 <_start@@Base+0x70>
  4031b5:	mov    eax,0x0
  4031ba:	test   rax,rax
  4031bd:	je     4031d0 <_start@@Base+0x70>
  4031bf:	pop    rbp
  4031c0:	mov    edi,0x4100d0
  4031c5:	jmp    rax
  4031c7:	nop    WORD PTR [rax+rax*1+0x0]
  4031d0:	pop    rbp
  4031d1:	ret    
  4031d2:	nop    DWORD PTR [rax+0x0]
  4031d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031e0:	mov    esi,0x4100d0
  4031e5:	push   rbp
  4031e6:	sub    rsi,0x4100d0
  4031ed:	sar    rsi,0x3
  4031f1:	mov    rbp,rsp
  4031f4:	mov    rax,rsi
  4031f7:	shr    rax,0x3f
  4031fb:	add    rsi,rax
  4031fe:	sar    rsi,1
  403201:	je     403218 <_start@@Base+0xb8>
  403203:	mov    eax,0x0
  403208:	test   rax,rax
  40320b:	je     403218 <_start@@Base+0xb8>
  40320d:	pop    rbp
  40320e:	mov    edi,0x4100d0
  403213:	jmp    rax
  403215:	nop    DWORD PTR [rax]
  403218:	pop    rbp
  403219:	ret    
  40321a:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	cmp    BYTE PTR [rip+0xceb9],0x0        # 4100e0 <__bss_start@@Base+0x10>
  403227:	jne    40323a <_start@@Base+0xda>
  403229:	push   rbp
  40322a:	mov    rbp,rsp
  40322d:	call   4031a0 <_start@@Base+0x40>
  403232:	pop    rbp
  403233:	mov    BYTE PTR [rip+0xcea6],0x1        # 4100e0 <__bss_start@@Base+0x10>
  40323a:	repz ret 
  40323c:	nop    DWORD PTR [rax+0x0]
  403240:	mov    edi,0x40fe18
  403245:	cmp    QWORD PTR [rdi],0x0
  403249:	jne    403250 <_start@@Base+0xf0>
  40324b:	jmp    4031e0 <_start@@Base+0x80>
  40324d:	nop    DWORD PTR [rax]
  403250:	mov    eax,0x0
  403255:	test   rax,rax
  403258:	je     40324b <_start@@Base+0xeb>
  40325a:	push   rbp
  40325b:	mov    rbp,rsp
  40325e:	call   rax
  403260:	pop    rbp
  403261:	jmp    4031e0 <_start@@Base+0x80>
  403266:	push   rbp
  403267:	mov    rbp,rsp
  40326a:	mov    DWORD PTR [rbp-0x4],edi
  40326d:	mov    eax,DWORD PTR [rbp-0x4]
  403270:	pop    rbp
  403271:	ret    
  403272:	push   rbp
  403273:	mov    rbp,rsp
  403276:	sub    rsp,0x8
  40327a:	mov    QWORD PTR [rbp-0x8],rdi
  40327e:	mov    rax,QWORD PTR [rbp-0x8]
  403282:	mov    eax,DWORD PTR [rax]
  403284:	mov    edi,eax
  403286:	call   403266 <_start@@Base+0x106>
  40328b:	leave  
  40328c:	ret    
  40328d:	push   rbp
  40328e:	mov    rbp,rsp
  403291:	mov    DWORD PTR [rbp-0x4],edi
  403294:	mov    eax,DWORD PTR [rbp-0x4]
  403297:	pop    rbp
  403298:	ret    
  403299:	push   rbp
  40329a:	mov    rbp,rsp
  40329d:	sub    rsp,0x8
  4032a1:	mov    QWORD PTR [rbp-0x8],rdi
  4032a5:	mov    rax,QWORD PTR [rbp-0x8]
  4032a9:	mov    eax,DWORD PTR [rax]
  4032ab:	mov    edi,eax
  4032ad:	call   40328d <_start@@Base+0x12d>
  4032b2:	leave  
  4032b3:	ret    
  4032b4:	push   rbp
  4032b5:	mov    rbp,rsp
  4032b8:	mov    eax,edi
  4032ba:	mov    WORD PTR [rbp-0x4],ax
  4032be:	movzx  eax,WORD PTR [rbp-0x4]
  4032c2:	pop    rbp
  4032c3:	ret    
  4032c4:	push   rbp
  4032c5:	mov    rbp,rsp
  4032c8:	sub    rsp,0x8
  4032cc:	mov    QWORD PTR [rbp-0x8],rdi
  4032d0:	mov    rax,QWORD PTR [rbp-0x8]
  4032d4:	movzx  eax,WORD PTR [rax]
  4032d7:	movzx  eax,ax
  4032da:	mov    edi,eax
  4032dc:	call   4032b4 <_start@@Base+0x154>
  4032e1:	leave  
  4032e2:	ret    
  4032e3:	push   rbp
  4032e4:	mov    rbp,rsp
  4032e7:	mov    DWORD PTR [rbp-0x4],edi
  4032ea:	mov    eax,DWORD PTR [rbp-0x4]
  4032ed:	pop    rbp
  4032ee:	ret    
  4032ef:	push   rbp
  4032f0:	mov    rbp,rsp
  4032f3:	mov    DWORD PTR [rbp-0x4],edi
  4032f6:	mov    eax,DWORD PTR [rbp-0x4]
  4032f9:	pop    rbp
  4032fa:	ret    
  4032fb:	push   rbp
  4032fc:	mov    rbp,rsp
  4032ff:	sub    rsp,0x8
  403303:	mov    QWORD PTR [rbp-0x8],rdi
  403307:	mov    rax,QWORD PTR [rbp-0x8]
  40330b:	mov    eax,DWORD PTR [rax]
  40330d:	mov    edi,eax
  40330f:	call   4032e3 <_start@@Base+0x183>
  403314:	leave  
  403315:	ret    
  403316:	push   rbp
  403317:	mov    rbp,rsp
  40331a:	sub    rsp,0x8
  40331e:	mov    QWORD PTR [rbp-0x8],rdi
  403322:	cmp    QWORD PTR [rbp-0x8],0x0
  403327:	je     40333d <_start@@Base+0x1dd>
  403329:	mov    rax,QWORD PTR [rbp-0x8]
  40332d:	sub    rax,0x4
  403331:	mov    rdi,rax
  403334:	call   403272 <_start@@Base+0x112>
  403339:	mov    eax,eax
  40333b:	jmp    403342 <_start@@Base+0x1e2>
  40333d:	mov    eax,0x0
  403342:	leave  
  403343:	ret    
  403344:	push   rbp
  403345:	mov    rbp,rsp
  403348:	sub    rsp,0x8
  40334c:	mov    QWORD PTR [rbp-0x8],rdi
  403350:	cmp    QWORD PTR [rbp-0x8],0x0
  403355:	je     40336b <_start@@Base+0x20b>
  403357:	mov    rax,QWORD PTR [rbp-0x8]
  40335b:	sub    rax,0x4
  40335f:	mov    rdi,rax
  403362:	call   403272 <_start@@Base+0x112>
  403367:	mov    eax,eax
  403369:	jmp    403370 <_start@@Base+0x210>
  40336b:	mov    eax,0x0
  403370:	leave  
  403371:	ret    
  403372:	push   rbp
  403373:	mov    rbp,rsp
  403376:	sub    rsp,0x8
  40337a:	mov    QWORD PTR [rbp-0x8],rdi
  40337e:	mov    rax,QWORD PTR [rbp-0x8]
  403382:	mov    rdi,rax
  403385:	call   403316 <_start@@Base+0x1b6>
  40338a:	leave  
  40338b:	ret    
  40338c:	push   rbp
  40338d:	mov    rbp,rsp
  403390:	sub    rsp,0x20
  403394:	mov    QWORD PTR [rbp-0x18],rdi
  403398:	mov    QWORD PTR [rbp-0x20],rsi
  40339c:	mov    rax,QWORD PTR fs:0x28
  4033a5:	mov    QWORD PTR [rbp-0x8],rax
  4033a9:	xor    eax,eax
  4033ab:	mov    DWORD PTR [rbp-0x10],0x0
  4033b2:	cmp    QWORD PTR [rbp-0x20],0x0
  4033b7:	jne    4033c0 <_start@@Base+0x260>
  4033b9:	mov    eax,0x1
  4033be:	jmp    403413 <_start@@Base+0x2b3>
  4033c0:	mov    rcx,QWORD PTR [rbp-0x20]
  4033c4:	lea    rax,[rbp-0x10]
  4033c8:	mov    edx,0x4
  4033cd:	mov    rsi,rcx
  4033d0:	mov    rdi,rax
  4033d3:	call   403040 <strncpy@plt>
  4033d8:	mov    eax,DWORD PTR [rbp-0x10]
  4033db:	mov    edi,eax
  4033dd:	call   4032ef <_start@@Base+0x18f>
  4033e2:	mov    DWORD PTR [rbp-0x10],eax
  4033e5:	mov    rax,QWORD PTR [rbp-0x18]
  4033e9:	add    rax,0x4
  4033ed:	mov    rdi,rax
  4033f0:	call   4032fb <_start@@Base+0x19b>
  4033f5:	mov    DWORD PTR [rbp-0xc],eax
  4033f8:	mov    eax,DWORD PTR [rbp-0x10]
  4033fb:	test   eax,eax
  4033fd:	je     403407 <_start@@Base+0x2a7>
  4033ff:	mov    eax,DWORD PTR [rbp-0x10]
  403402:	cmp    DWORD PTR [rbp-0xc],eax
  403405:	jne    40340e <_start@@Base+0x2ae>
  403407:	mov    eax,0x1
  40340c:	jmp    403413 <_start@@Base+0x2b3>
  40340e:	mov    eax,0x0
  403413:	mov    rdx,QWORD PTR [rbp-0x8]
  403417:	xor    rdx,QWORD PTR fs:0x28
  403420:	je     403427 <_start@@Base+0x2c7>
  403422:	call   403080 <__stack_chk_fail@plt>
  403427:	leave  
  403428:	ret    
  403429:	push   rbp
  40342a:	mov    rbp,rsp
  40342d:	sub    rsp,0x8
  403431:	mov    QWORD PTR [rbp-0x8],rdi
  403435:	cmp    QWORD PTR [rbp-0x8],0x0
  40343a:	je     403450 <_start@@Base+0x2f0>
  40343c:	mov    rax,QWORD PTR [rbp-0x8]
  403440:	sub    rax,0x4
  403444:	mov    rdi,rax
  403447:	call   403272 <_start@@Base+0x112>
  40344c:	mov    eax,eax
  40344e:	jmp    403455 <_start@@Base+0x2f5>
  403450:	mov    eax,0x0
  403455:	leave  
  403456:	ret    
  403457:	push   rbp
  403458:	mov    rbp,rsp
  40345b:	sub    rsp,0x20
  40345f:	mov    QWORD PTR [rbp-0x18],rdi
  403463:	mov    QWORD PTR [rbp-0x20],rsi
  403467:	mov    rax,QWORD PTR [rbp-0x20]
  40346b:	lea    rdx,[rax*4+0x0]
  403473:	mov    rax,QWORD PTR [rbp-0x18]
  403477:	add    rax,rdx
  40347a:	mov    QWORD PTR [rbp-0x8],rax
  40347e:	mov    rax,QWORD PTR [rbp-0x18]
  403482:	mov    rdi,rax
  403485:	call   403316 <_start@@Base+0x1b6>
  40348a:	cmp    rax,QWORD PTR [rbp-0x20]
  40348e:	ja     4034af <_start@@Base+0x34f>
  403490:	lea    rcx,[rip+0x8139]        # 40b5d0 <_IO_stdin_used@@Base+0x5d0>
  403497:	mov    edx,0x2b5
  40349c:	lea    rsi,[rip+0x7b85]        # 40b028 <_IO_stdin_used@@Base+0x28>
  4034a3:	lea    rdi,[rip+0x7bfe]        # 40b0a8 <_IO_stdin_used@@Base+0xa8>
  4034aa:	call   4030b0 <__assert_fail@plt>
  4034af:	mov    rax,QWORD PTR [rbp-0x8]
  4034b3:	mov    rdi,rax
  4034b6:	call   403272 <_start@@Base+0x112>
  4034bb:	mov    edx,eax
  4034bd:	mov    rax,QWORD PTR [rbp-0x8]
  4034c1:	add    rax,rdx
  4034c4:	leave  
  4034c5:	ret    
  4034c6:	push   rbp
  4034c7:	mov    rbp,rsp
  4034ca:	sub    rsp,0x20
  4034ce:	mov    QWORD PTR [rbp-0x18],rdi
  4034d2:	lea    rax,[rip+0x7c06]        # 40b0df <_IO_stdin_used@@Base+0xdf>
  4034d9:	mov    QWORD PTR [rbp-0x8],rax
  4034dd:	cmp    QWORD PTR [rbp-0x18],0x0
  4034e2:	je     403512 <_start@@Base+0x3b2>
  4034e4:	mov    rdx,QWORD PTR [rbp-0x8]
  4034e8:	mov    rax,QWORD PTR [rbp-0x18]
  4034ec:	mov    rsi,rdx
  4034ef:	mov    rdi,rax
  4034f2:	call   40338c <_start@@Base+0x22c>
  4034f7:	test   eax,eax
  4034f9:	je     403512 <_start@@Base+0x3b2>
  4034fb:	mov    rax,QWORD PTR [rbp-0x18]
  4034ff:	mov    rdi,rax
  403502:	call   403272 <_start@@Base+0x112>
  403507:	mov    edx,eax
  403509:	mov    rax,QWORD PTR [rbp-0x18]
  40350d:	add    rax,rdx
  403510:	jmp    403517 <_start@@Base+0x3b7>
  403512:	mov    eax,0x0
  403517:	leave  
  403518:	ret    
  403519:	push   rbp
  40351a:	mov    rbp,rsp
  40351d:	sub    rsp,0x30
  403521:	mov    QWORD PTR [rbp-0x28],rdi
  403525:	mov    WORD PTR [rbp-0x14],0x0
  40352b:	cmp    QWORD PTR [rbp-0x28],0x0
  403530:	jne    403551 <_start@@Base+0x3f1>
  403532:	lea    rcx,[rip+0x7ff7]        # 40b530 <_IO_stdin_used@@Base+0x530>
  403539:	mov    edx,0x2bb
  40353e:	lea    rsi,[rip+0x7ae3]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403545:	lea    rdi,[rip+0x7b9c]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  40354c:	call   4030b0 <__assert_fail@plt>
  403551:	mov    WORD PTR [rbp-0x12],0x3
  403557:	mov    rax,QWORD PTR [rbp-0x28]
  40355b:	mov    rdi,rax
  40355e:	call   403299 <_start@@Base+0x139>
  403563:	cdqe   
  403565:	neg    rax
  403568:	mov    rdx,rax
  40356b:	mov    rax,QWORD PTR [rbp-0x28]
  40356f:	add    rax,rdx
  403572:	mov    QWORD PTR [rbp-0x10],rax
  403576:	mov    rax,QWORD PTR [rbp-0x10]
  40357a:	mov    rdi,rax
  40357d:	call   4032c4 <_start@@Base+0x164>
  403582:	movzx  eax,ax
  403585:	movzx  edx,WORD PTR [rbp-0x12]
  403589:	add    edx,0x3
  40358c:	movsxd rdx,edx
  40358f:	add    rdx,rdx
  403592:	cmp    rax,rdx
  403595:	jb     4035b6 <_start@@Base+0x456>
  403597:	movzx  eax,WORD PTR [rbp-0x12]
  40359b:	add    rax,0x2
  40359f:	lea    rdx,[rax+rax*1]
  4035a3:	mov    rax,QWORD PTR [rbp-0x10]
  4035a7:	add    rax,rdx
  4035aa:	mov    rdi,rax
  4035ad:	call   4032c4 <_start@@Base+0x164>
  4035b2:	mov    WORD PTR [rbp-0x14],ax
  4035b6:	cmp    WORD PTR [rbp-0x14],0x0
  4035bb:	je     4035e7 <_start@@Base+0x487>
  4035bd:	movzx  edx,WORD PTR [rbp-0x14]
  4035c1:	mov    rax,QWORD PTR [rbp-0x28]
  4035c5:	add    rax,rdx
  4035c8:	mov    QWORD PTR [rbp-0x8],rax
  4035cc:	mov    rax,QWORD PTR [rbp-0x8]
  4035d0:	mov    rdi,rax
  4035d3:	call   403272 <_start@@Base+0x112>
  4035d8:	mov    eax,eax
  4035da:	lea    rdx,[rax+0x4]
  4035de:	mov    rax,QWORD PTR [rbp-0x8]
  4035e2:	add    rax,rdx
  4035e5:	jmp    403606 <_start@@Base+0x4a6>
  4035e7:	lea    rcx,[rip+0x7f42]        # 40b530 <_IO_stdin_used@@Base+0x530>
  4035ee:	mov    edx,0x2bb
  4035f3:	lea    rsi,[rip+0x7a2e]        # 40b028 <_IO_stdin_used@@Base+0x28>
  4035fa:	lea    rdi,[rip+0x7b0f]        # 40b110 <_IO_stdin_used@@Base+0x110>
  403601:	call   4030b0 <__assert_fail@plt>
  403606:	leave  
  403607:	ret    
  403608:	push   rbp
  403609:	mov    rbp,rsp
  40360c:	sub    rsp,0x30
  403610:	mov    QWORD PTR [rbp-0x28],rdi
  403614:	mov    WORD PTR [rbp-0x14],0x0
  40361a:	cmp    QWORD PTR [rbp-0x28],0x0
  40361f:	jne    403640 <_start@@Base+0x4e0>
  403621:	lea    rcx,[rip+0x7f38]        # 40b560 <_IO_stdin_used@@Base+0x560>
  403628:	mov    edx,0x2c2
  40362d:	lea    rsi,[rip+0x79f4]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403634:	lea    rdi,[rip+0x7aad]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  40363b:	call   4030b0 <__assert_fail@plt>
  403640:	mov    WORD PTR [rbp-0x12],0x5
  403646:	mov    rax,QWORD PTR [rbp-0x28]
  40364a:	mov    rdi,rax
  40364d:	call   403299 <_start@@Base+0x139>
  403652:	cdqe   
  403654:	neg    rax
  403657:	mov    rdx,rax
  40365a:	mov    rax,QWORD PTR [rbp-0x28]
  40365e:	add    rax,rdx
  403661:	mov    QWORD PTR [rbp-0x10],rax
  403665:	mov    rax,QWORD PTR [rbp-0x10]
  403669:	mov    rdi,rax
  40366c:	call   4032c4 <_start@@Base+0x164>
  403671:	movzx  eax,ax
  403674:	movzx  edx,WORD PTR [rbp-0x12]
  403678:	add    edx,0x3
  40367b:	movsxd rdx,edx
  40367e:	add    rdx,rdx
  403681:	cmp    rax,rdx
  403684:	jb     4036a5 <_start@@Base+0x545>
  403686:	movzx  eax,WORD PTR [rbp-0x12]
  40368a:	add    rax,0x2
  40368e:	lea    rdx,[rax+rax*1]
  403692:	mov    rax,QWORD PTR [rbp-0x10]
  403696:	add    rax,rdx
  403699:	mov    rdi,rax
  40369c:	call   4032c4 <_start@@Base+0x164>
  4036a1:	mov    WORD PTR [rbp-0x14],ax
  4036a5:	cmp    WORD PTR [rbp-0x14],0x0
  4036aa:	je     4036d6 <_start@@Base+0x576>
  4036ac:	movzx  edx,WORD PTR [rbp-0x14]
  4036b0:	mov    rax,QWORD PTR [rbp-0x28]
  4036b4:	add    rax,rdx
  4036b7:	mov    QWORD PTR [rbp-0x8],rax
  4036bb:	mov    rax,QWORD PTR [rbp-0x8]
  4036bf:	mov    rdi,rax
  4036c2:	call   403272 <_start@@Base+0x112>
  4036c7:	mov    eax,eax
  4036c9:	lea    rdx,[rax+0x4]
  4036cd:	mov    rax,QWORD PTR [rbp-0x8]
  4036d1:	add    rax,rdx
  4036d4:	jmp    4036db <_start@@Base+0x57b>
  4036d6:	mov    eax,0x0
  4036db:	leave  
  4036dc:	ret    
  4036dd:	push   rbp
  4036de:	mov    rbp,rsp
  4036e1:	sub    rsp,0x30
  4036e5:	mov    QWORD PTR [rbp-0x28],rdi
  4036e9:	mov    WORD PTR [rbp-0x14],0x0
  4036ef:	cmp    QWORD PTR [rbp-0x28],0x0
  4036f4:	jne    403715 <_start@@Base+0x5b5>
  4036f6:	lea    rcx,[rip+0x7ea3]        # 40b5a0 <_IO_stdin_used@@Base+0x5a0>
  4036fd:	mov    edx,0x2c7
  403702:	lea    rsi,[rip+0x791f]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403709:	lea    rdi,[rip+0x79d8]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  403710:	call   4030b0 <__assert_fail@plt>
  403715:	mov    WORD PTR [rbp-0x12],0xb
  40371b:	mov    rax,QWORD PTR [rbp-0x28]
  40371f:	mov    rdi,rax
  403722:	call   403299 <_start@@Base+0x139>
  403727:	cdqe   
  403729:	neg    rax
  40372c:	mov    rdx,rax
  40372f:	mov    rax,QWORD PTR [rbp-0x28]
  403733:	add    rax,rdx
  403736:	mov    QWORD PTR [rbp-0x10],rax
  40373a:	mov    rax,QWORD PTR [rbp-0x10]
  40373e:	mov    rdi,rax
  403741:	call   4032c4 <_start@@Base+0x164>
  403746:	movzx  eax,ax
  403749:	movzx  edx,WORD PTR [rbp-0x12]
  40374d:	add    edx,0x3
  403750:	movsxd rdx,edx
  403753:	add    rdx,rdx
  403756:	cmp    rax,rdx
  403759:	jb     40377a <_start@@Base+0x61a>
  40375b:	movzx  eax,WORD PTR [rbp-0x12]
  40375f:	add    rax,0x2
  403763:	lea    rdx,[rax+rax*1]
  403767:	mov    rax,QWORD PTR [rbp-0x10]
  40376b:	add    rax,rdx
  40376e:	mov    rdi,rax
  403771:	call   4032c4 <_start@@Base+0x164>
  403776:	mov    WORD PTR [rbp-0x14],ax
  40377a:	cmp    WORD PTR [rbp-0x14],0x0
  40377f:	je     4037ab <_start@@Base+0x64b>
  403781:	movzx  edx,WORD PTR [rbp-0x14]
  403785:	mov    rax,QWORD PTR [rbp-0x28]
  403789:	add    rax,rdx
  40378c:	mov    QWORD PTR [rbp-0x8],rax
  403790:	mov    rax,QWORD PTR [rbp-0x8]
  403794:	mov    rdi,rax
  403797:	call   403272 <_start@@Base+0x112>
  40379c:	mov    eax,eax
  40379e:	lea    rdx,[rax+0x4]
  4037a2:	mov    rax,QWORD PTR [rbp-0x8]
  4037a6:	add    rax,rdx
  4037a9:	jmp    4037b0 <_start@@Base+0x650>
  4037ab:	mov    eax,0x0
  4037b0:	leave  
  4037b1:	ret    
  4037b2:	push   rbp
  4037b3:	mov    rbp,rsp
  4037b6:	sub    rsp,0x10
  4037ba:	mov    QWORD PTR [rbp-0x8],rdi
  4037be:	mov    rax,QWORD PTR [rbp-0x8]
  4037c2:	mov    ecx,0xffffffff
  4037c7:	mov    edx,0x1
  4037cc:	mov    esi,0x1
  4037d1:	mov    rdi,rax
  4037d4:	call   407002 <flatcc_builder_start_vector@@Base>
  4037d9:	leave  
  4037da:	ret    
  4037db:	push   rbp
  4037dc:	mov    rbp,rsp
  4037df:	sub    rsp,0x10
  4037e3:	mov    QWORD PTR [rbp-0x8],rdi
  4037e7:	mov    rax,QWORD PTR [rbp-0x8]
  4037eb:	mov    rdi,rax
  4037ee:	call   4081d8 <flatcc_builder_end_vector@@Base>
  4037f3:	leave  
  4037f4:	ret    
  4037f5:	push   rbp
  4037f6:	mov    rbp,rsp
  4037f9:	sub    rsp,0x20
  4037fd:	mov    QWORD PTR [rbp-0x8],rdi
  403801:	mov    QWORD PTR [rbp-0x10],rsi
  403805:	mov    QWORD PTR [rbp-0x18],rdx
  403809:	mov    rdx,QWORD PTR [rbp-0x18]
  40380d:	mov    rcx,QWORD PTR [rbp-0x10]
  403811:	mov    rax,QWORD PTR [rbp-0x8]
  403815:	mov    rsi,rcx
  403818:	mov    rdi,rax
  40381b:	call   406a1a <flatcc_builder_append_vector@@Base>
  403820:	leave  
  403821:	ret    
  403822:	push   rbp
  403823:	mov    rbp,rsp
  403826:	sub    rsp,0x20
  40382a:	mov    QWORD PTR [rbp-0x8],rdi
  40382e:	mov    QWORD PTR [rbp-0x10],rsi
  403832:	mov    QWORD PTR [rbp-0x18],rdx
  403836:	mov    rdx,QWORD PTR [rbp-0x18]
  40383a:	mov    rcx,QWORD PTR [rbp-0x10]
  40383e:	mov    rax,QWORD PTR [rbp-0x8]
  403842:	mov    rsi,rcx
  403845:	mov    rdi,rax
  403848:	call   406ca7 <flatcc_builder_append_string@@Base>
  40384d:	leave  
  40384e:	ret    
  40384f:	push   rbp
  403850:	mov    rbp,rsp
  403853:	sub    rsp,0x10
  403857:	mov    QWORD PTR [rbp-0x8],rdi
  40385b:	mov    QWORD PTR [rbp-0x10],rsi
  40385f:	mov    rsi,QWORD PTR [rbp-0x10]
  403863:	mov    rax,QWORD PTR [rbp-0x8]
  403867:	mov    ecx,0x0
  40386c:	mov    edx,0x0
  403871:	mov    rdi,rax
  403874:	call   4064d7 <flatcc_builder_start_buffer@@Base>
  403879:	leave  
  40387a:	ret    
  40387b:	push   rbp
  40387c:	mov    rbp,rsp
  40387f:	sub    rsp,0x10
  403883:	mov    QWORD PTR [rbp-0x8],rdi
  403887:	mov    DWORD PTR [rbp-0xc],esi
  40388a:	mov    edx,DWORD PTR [rbp-0xc]
  40388d:	mov    rax,QWORD PTR [rbp-0x8]
  403891:	mov    esi,edx
  403893:	mov    rdi,rax
  403896:	call   406620 <flatcc_builder_end_buffer@@Base>
  40389b:	leave  
  40389c:	ret    
  40389d:	push   rbp
  40389e:	mov    rbp,rsp
  4038a1:	sub    rsp,0x10
  4038a5:	mov    QWORD PTR [rbp-0x8],rdi
  4038a9:	mov    rax,QWORD PTR [rbp-0x8]
  4038ad:	mov    esi,0x24
  4038b2:	mov    rdi,rax
  4038b5:	call   40723c <flatcc_builder_start_table@@Base>
  4038ba:	leave  
  4038bb:	ret    
  4038bc:	push   rbp
  4038bd:	mov    rbp,rsp
  4038c0:	sub    rsp,0x10
  4038c4:	mov    QWORD PTR [rbp-0x8],rdi
  4038c8:	mov    rax,QWORD PTR [rbp-0x8]
  4038cc:	mov    edx,0x1
  4038d1:	lea    rsi,[rip+0x7874]        # 40b14c <_IO_stdin_used@@Base+0x14c>
  4038d8:	mov    rdi,rax
  4038db:	call   407c93 <flatcc_builder_check_required@@Base>
  4038e0:	test   eax,eax
  4038e2:	jne    403903 <_start@@Base+0x7a3>
  4038e4:	lea    rcx,[rip+0x7be5]        # 40b4d0 <_IO_stdin_used@@Base+0x4d0>
  4038eb:	mov    edx,0xeb
  4038f0:	lea    rsi,[rip+0x7859]        # 40b150 <_IO_stdin_used@@Base+0x150>
  4038f7:	lea    rdi,[rip+0x78d2]        # 40b1d0 <_IO_stdin_used@@Base+0x1d0>
  4038fe:	call   4030b0 <__assert_fail@plt>
  403903:	mov    rax,QWORD PTR [rbp-0x8]
  403907:	mov    rdi,rax
  40390a:	call   407d3e <flatcc_builder_end_table@@Base>
  40390f:	leave  
  403910:	ret    
  403911:	push   rbp
  403912:	mov    rbp,rsp
  403915:	sub    rsp,0x10
  403919:	mov    QWORD PTR [rbp-0x8],rdi
  40391d:	mov    rax,QWORD PTR [rbp-0x8]
  403921:	mov    rdi,rax
  403924:	call   4070a0 <flatcc_builder_start_offset_vector@@Base>
  403929:	leave  
  40392a:	ret    
  40392b:	push   rbp
  40392c:	mov    rbp,rsp
  40392f:	sub    rsp,0x10
  403933:	mov    QWORD PTR [rbp-0x8],rdi
  403937:	mov    rax,QWORD PTR [rbp-0x8]
  40393b:	mov    rdi,rax
  40393e:	call   408692 <flatcc_builder_end_offset_vector@@Base>
  403943:	leave  
  403944:	ret    
  403945:	push   rbp
  403946:	mov    rbp,rsp
  403949:	sub    rsp,0x10
  40394d:	mov    QWORD PTR [rbp-0x8],rdi
  403951:	mov    DWORD PTR [rbp-0xc],esi
  403954:	cmp    DWORD PTR [rbp-0xc],0x0
  403958:	je     40396d <_start@@Base+0x80d>
  40395a:	mov    edx,DWORD PTR [rbp-0xc]
  40395d:	mov    rax,QWORD PTR [rbp-0x8]
  403961:	mov    esi,edx
  403963:	mov    rdi,rax
  403966:	call   406aff <flatcc_builder_offset_vector_push@@Base>
  40396b:	jmp    403972 <_start@@Base+0x812>
  40396d:	mov    eax,0x0
  403972:	leave  
  403973:	ret    
  403974:	push   rbp
  403975:	mov    rbp,rsp
  403978:	sub    rsp,0x20
  40397c:	mov    QWORD PTR [rbp-0x18],rdi
  403980:	mov    DWORD PTR [rbp-0x1c],esi
  403983:	cmp    DWORD PTR [rbp-0x1c],0x0
  403987:	je     4039b5 <_start@@Base+0x855>
  403989:	mov    rax,QWORD PTR [rbp-0x18]
  40398d:	mov    esi,0x3
  403992:	mov    rdi,rax
  403995:	call   40956e <flatcc_builder_table_add_offset@@Base>
  40399a:	mov    QWORD PTR [rbp-0x8],rax
  40399e:	cmp    QWORD PTR [rbp-0x8],0x0
  4039a3:	je     4039b5 <_start@@Base+0x855>
  4039a5:	mov    rax,QWORD PTR [rbp-0x8]
  4039a9:	mov    edx,DWORD PTR [rbp-0x1c]
  4039ac:	mov    DWORD PTR [rax],edx
  4039ae:	mov    eax,0x0
  4039b3:	jmp    4039ba <_start@@Base+0x85a>
  4039b5:	mov    eax,0xffffffff
  4039ba:	leave  
  4039bb:	ret    
  4039bc:	push   rbp
  4039bd:	mov    rbp,rsp
  4039c0:	sub    rsp,0x10
  4039c4:	mov    QWORD PTR [rbp-0x8],rdi
  4039c8:	mov    rax,QWORD PTR [rbp-0x8]
  4039cc:	mov    rdi,rax
  4039cf:	call   407189 <flatcc_builder_start_string@@Base>
  4039d4:	leave  
  4039d5:	ret    
  4039d6:	push   rbp
  4039d7:	mov    rbp,rsp
  4039da:	sub    rsp,0x10
  4039de:	mov    QWORD PTR [rbp-0x8],rdi
  4039e2:	mov    rax,QWORD PTR [rbp-0x8]
  4039e6:	mov    rdi,rax
  4039e9:	call   4092c4 <flatcc_builder_end_string@@Base>
  4039ee:	mov    edx,eax
  4039f0:	mov    rax,QWORD PTR [rbp-0x8]
  4039f4:	mov    esi,edx
  4039f6:	mov    rdi,rax
  4039f9:	call   403974 <_start@@Base+0x814>
  4039fe:	leave  
  4039ff:	ret    
  403a00:	push   rbp
  403a01:	mov    rbp,rsp
  403a04:	sub    rsp,0x10
  403a08:	mov    QWORD PTR [rbp-0x8],rdi
  403a0c:	mov    QWORD PTR [rbp-0x10],rsi
  403a10:	mov    rdx,QWORD PTR [rbp-0x10]
  403a14:	mov    rax,QWORD PTR [rbp-0x8]
  403a18:	mov    rsi,rdx
  403a1b:	mov    rdi,rax
  403a1e:	call   409251 <flatcc_builder_create_string_str@@Base>
  403a23:	mov    edx,eax
  403a25:	mov    rax,QWORD PTR [rbp-0x8]
  403a29:	mov    esi,edx
  403a2b:	mov    rdi,rax
  403a2e:	call   403974 <_start@@Base+0x814>
  403a33:	leave  
  403a34:	ret    
  403a35:	push   rbp
  403a36:	mov    rbp,rsp
  403a39:	sub    rsp,0x20
  403a3d:	mov    QWORD PTR [rbp-0x18],rdi
  403a41:	mov    DWORD PTR [rbp-0x1c],esi
  403a44:	cmp    DWORD PTR [rbp-0x1c],0x0
  403a48:	je     403a76 <_start@@Base+0x916>
  403a4a:	mov    rax,QWORD PTR [rbp-0x18]
  403a4e:	mov    esi,0x5
  403a53:	mov    rdi,rax
  403a56:	call   40956e <flatcc_builder_table_add_offset@@Base>
  403a5b:	mov    QWORD PTR [rbp-0x8],rax
  403a5f:	cmp    QWORD PTR [rbp-0x8],0x0
  403a64:	je     403a76 <_start@@Base+0x916>
  403a66:	mov    rax,QWORD PTR [rbp-0x8]
  403a6a:	mov    edx,DWORD PTR [rbp-0x1c]
  403a6d:	mov    DWORD PTR [rax],edx
  403a6f:	mov    eax,0x0
  403a74:	jmp    403a7b <_start@@Base+0x91b>
  403a76:	mov    eax,0xffffffff
  403a7b:	leave  
  403a7c:	ret    
  403a7d:	push   rbp
  403a7e:	mov    rbp,rsp
  403a81:	sub    rsp,0x10
  403a85:	mov    QWORD PTR [rbp-0x8],rdi
  403a89:	mov    rax,QWORD PTR [rbp-0x8]
  403a8d:	mov    rdi,rax
  403a90:	call   4037b2 <_start@@Base+0x652>
  403a95:	leave  
  403a96:	ret    
  403a97:	push   rbp
  403a98:	mov    rbp,rsp
  403a9b:	sub    rsp,0x10
  403a9f:	mov    QWORD PTR [rbp-0x8],rdi
  403aa3:	mov    rax,QWORD PTR [rbp-0x8]
  403aa7:	mov    rdi,rax
  403aaa:	call   4037db <_start@@Base+0x67b>
  403aaf:	mov    edx,eax
  403ab1:	mov    rax,QWORD PTR [rbp-0x8]
  403ab5:	mov    esi,edx
  403ab7:	mov    rdi,rax
  403aba:	call   403a35 <_start@@Base+0x8d5>
  403abf:	leave  
  403ac0:	ret    
  403ac1:	push   rbp
  403ac2:	mov    rbp,rsp
  403ac5:	sub    rsp,0x20
  403ac9:	mov    QWORD PTR [rbp-0x18],rdi
  403acd:	mov    DWORD PTR [rbp-0x1c],esi
  403ad0:	cmp    DWORD PTR [rbp-0x1c],0x0
  403ad4:	je     403b02 <_start@@Base+0x9a2>
  403ad6:	mov    rax,QWORD PTR [rbp-0x18]
  403ada:	mov    esi,0xb
  403adf:	mov    rdi,rax
  403ae2:	call   40956e <flatcc_builder_table_add_offset@@Base>
  403ae7:	mov    QWORD PTR [rbp-0x8],rax
  403aeb:	cmp    QWORD PTR [rbp-0x8],0x0
  403af0:	je     403b02 <_start@@Base+0x9a2>
  403af2:	mov    rax,QWORD PTR [rbp-0x8]
  403af6:	mov    edx,DWORD PTR [rbp-0x1c]
  403af9:	mov    DWORD PTR [rax],edx
  403afb:	mov    eax,0x0
  403b00:	jmp    403b07 <_start@@Base+0x9a7>
  403b02:	mov    eax,0xffffffff
  403b07:	leave  
  403b08:	ret    
  403b09:	push   rbp
  403b0a:	mov    rbp,rsp
  403b0d:	sub    rsp,0x10
  403b11:	mov    QWORD PTR [rbp-0x8],rdi
  403b15:	mov    rax,QWORD PTR [rbp-0x8]
  403b19:	lea    rsi,[rip+0x75bf]        # 40b0df <_IO_stdin_used@@Base+0xdf>
  403b20:	mov    rdi,rax
  403b23:	call   40384f <_start@@Base+0x6ef>
  403b28:	test   eax,eax
  403b2a:	jne    403b3a <_start@@Base+0x9da>
  403b2c:	mov    rax,QWORD PTR [rbp-0x8]
  403b30:	mov    rdi,rax
  403b33:	call   40389d <_start@@Base+0x73d>
  403b38:	jmp    403b3f <_start@@Base+0x9df>
  403b3a:	mov    eax,0xffffffff
  403b3f:	leave  
  403b40:	ret    
  403b41:	push   rbp
  403b42:	mov    rbp,rsp
  403b45:	sub    rsp,0x10
  403b49:	mov    QWORD PTR [rbp-0x8],rdi
  403b4d:	mov    rax,QWORD PTR [rbp-0x8]
  403b51:	mov    rdi,rax
  403b54:	call   4038bc <_start@@Base+0x75c>
  403b59:	mov    edx,eax
  403b5b:	mov    rax,QWORD PTR [rbp-0x8]
  403b5f:	mov    esi,edx
  403b61:	mov    rdi,rax
  403b64:	call   40387b <_start@@Base+0x71b>
  403b69:	leave  
  403b6a:	ret    
  403b6b:	push   rbp
  403b6c:	mov    rbp,rsp
  403b6f:	sub    rsp,0x20
  403b73:	mov    rax,QWORD PTR fs:0x28
  403b7c:	mov    QWORD PTR [rbp-0x8],rax
  403b80:	xor    eax,eax
  403b82:	lea    rax,[rbp-0x20]
  403b86:	mov    esi,0x0
  403b8b:	mov    rdi,rax
  403b8e:	call   4030a0 <gettimeofday@plt>
  403b93:	mov    rax,QWORD PTR [rip+0xc956]        # 4104f0 <__bss_start@@Base+0x420>
  403b9a:	test   rax,rax
  403b9d:	jne    403bb5 <_start@@Base+0xa55>
  403b9f:	mov    rax,QWORD PTR [rbp-0x20]
  403ba3:	mov    rdx,QWORD PTR [rbp-0x18]
  403ba7:	mov    QWORD PTR [rip+0xc942],rax        # 4104f0 <__bss_start@@Base+0x420>
  403bae:	mov    QWORD PTR [rip+0xc943],rdx        # 4104f8 <__bss_start@@Base+0x428>
  403bb5:	mov    rdx,QWORD PTR [rbp-0x20]
  403bb9:	mov    rax,QWORD PTR [rip+0xc930]        # 4104f0 <__bss_start@@Base+0x420>
  403bc0:	sub    rdx,rax
  403bc3:	mov    rax,rdx
  403bc6:	vxorpd xmm1,xmm1,xmm1
  403bca:	vcvtsi2sd xmm1,xmm1,rax
  403bcf:	mov    rdx,QWORD PTR [rbp-0x18]
  403bd3:	mov    rax,QWORD PTR [rip+0xc91e]        # 4104f8 <__bss_start@@Base+0x428>
  403bda:	sub    rdx,rax
  403bdd:	mov    rax,rdx
  403be0:	vxorpd xmm0,xmm0,xmm0
  403be4:	vcvtsi2sd xmm0,xmm0,rax
  403be9:	vmovsd xmm2,QWORD PTR [rip+0x79ff]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403bf1:	vdivsd xmm0,xmm0,xmm2
  403bf5:	vaddsd xmm0,xmm1,xmm0
  403bf9:	mov    rax,QWORD PTR [rbp-0x8]
  403bfd:	xor    rax,QWORD PTR fs:0x28
  403c06:	je     403c0d <_start@@Base+0xaad>
  403c08:	call   403080 <__stack_chk_fail@plt>
  403c0d:	leave  
  403c0e:	ret    
  403c0f:	push   rbp
  403c10:	mov    rbp,rsp
  403c13:	sub    rsp,0x50
  403c17:	mov    QWORD PTR [rbp-0x18],rdi
  403c1b:	vmovsd QWORD PTR [rbp-0x20],xmm0
  403c20:	vmovsd QWORD PTR [rbp-0x28],xmm1
  403c25:	mov    QWORD PTR [rbp-0x30],rsi
  403c29:	mov    DWORD PTR [rbp-0x34],edx
  403c2c:	mov    QWORD PTR [rbp-0x40],rcx
  403c30:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  403c35:	vsubsd xmm0,xmm0,QWORD PTR [rbp-0x20]
  403c3a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  403c3f:	mov    rax,QWORD PTR [rbp-0x18]
  403c43:	mov    rsi,rax
  403c46:	lea    rdi,[rip+0x762b]        # 40b278 <_IO_stdin_used@@Base+0x278>
  403c4d:	mov    eax,0x0
  403c52:	call   403090 <printf@plt>
  403c57:	mov    rax,QWORD PTR [rbp-0x10]
  403c5b:	mov    QWORD PTR [rbp-0x48],rax
  403c5f:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  403c64:	lea    rdi,[rip+0x761c]        # 40b287 <_IO_stdin_used@@Base+0x287>
  403c6b:	mov    eax,0x1
  403c70:	call   403090 <printf@plt>
  403c75:	mov    eax,DWORD PTR [rbp-0x34]
  403c78:	mov    esi,eax
  403c7a:	lea    rdi,[rip+0x761e]        # 40b29f <_IO_stdin_used@@Base+0x29f>
  403c81:	mov    eax,0x0
  403c86:	call   403090 <printf@plt>
  403c8b:	mov    rax,QWORD PTR [rbp-0x30]
  403c8f:	mov    rsi,rax
  403c92:	lea    rdi,[rip+0x7616]        # 40b2af <_IO_stdin_used@@Base+0x2af>
  403c99:	mov    eax,0x0
  403c9e:	call   403090 <printf@plt>
  403ca3:	vxorpd xmm1,xmm1,xmm1
  403ca7:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  403cac:	mov    rax,QWORD PTR [rbp-0x30]
  403cb0:	test   rax,rax
  403cb3:	js     403cc0 <_start@@Base+0xb60>
  403cb5:	vxorpd xmm0,xmm0,xmm0
  403cb9:	vcvtsi2sd xmm0,xmm0,rax
  403cbe:	jmp    403cd9 <_start@@Base+0xb79>
  403cc0:	mov    rdx,rax
  403cc3:	shr    rdx,1
  403cc6:	and    eax,0x1
  403cc9:	or     rdx,rax
  403ccc:	vxorpd xmm0,xmm0,xmm0
  403cd0:	vcvtsi2sd xmm0,xmm0,rdx
  403cd5:	vaddsd xmm0,xmm0,xmm0
  403cd9:	vmulsd xmm0,xmm1,xmm0
  403cdd:	vmovsd xmm1,QWORD PTR [rip+0x790b]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403ce5:	vdivsd xmm0,xmm0,xmm1
  403ce9:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x10]
  403cee:	lea    rdi,[rip+0x75cd]        # 40b2c2 <_IO_stdin_used@@Base+0x2c2>
  403cf5:	mov    eax,0x1
  403cfa:	call   403090 <printf@plt>
  403cff:	vxorpd xmm0,xmm0,xmm0
  403d03:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x34]
  403d08:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x10]
  403d0d:	lea    rdi,[rip+0x75cc]        # 40b2e0 <_IO_stdin_used@@Base+0x2e0>
  403d14:	mov    eax,0x1
  403d19:	call   403090 <printf@plt>
  403d1e:	cmp    QWORD PTR [rbp-0x40],0x0
  403d23:	je     403d50 <_start@@Base+0xbf0>
  403d25:	cmp    DWORD PTR [rbp-0x34],0x1
  403d29:	je     403d50 <_start@@Base+0xbf0>
  403d2b:	vmovsd xmm0,QWORD PTR [rip+0x78c5]        # 40b5f8 <_IO_stdin_used@@Base+0x5f8>
  403d33:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x10]
  403d38:	mov    rax,QWORD PTR [rbp-0x40]
  403d3c:	mov    rsi,rax
  403d3f:	lea    rdi,[rip+0x75c2]        # 40b308 <_IO_stdin_used@@Base+0x308>
  403d46:	mov    eax,0x1
  403d4b:	call   403090 <printf@plt>
  403d50:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  403d55:	vmovsd xmm0,QWORD PTR [rip+0x78a3]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403d5d:	vmulsd xmm0,xmm1,xmm0
  403d61:	vxorpd xmm1,xmm1,xmm1
  403d65:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  403d6a:	vdivsd xmm0,xmm0,xmm1
  403d6e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  403d73:	vmovsd xmm0,QWORD PTR [rip+0x788d]        # 40b608 <_IO_stdin_used@@Base+0x608>
  403d7b:	vucomisd xmm0,QWORD PTR [rbp-0x8]
  403d80:	jbe    403da5 <_start@@Base+0xc45>
  403d82:	mov    rax,QWORD PTR [rbp-0x8]
  403d86:	mov    QWORD PTR [rbp-0x48],rax
  403d8a:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  403d8f:	lea    rdi,[rip+0x7596]        # 40b32c <_IO_stdin_used@@Base+0x32c>
  403d96:	mov    eax,0x1
  403d9b:	call   403090 <printf@plt>
  403da0:	jmp    403e2d <_start@@Base+0xccd>
  403da5:	vmovsd xmm0,QWORD PTR [rip+0x7843]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403dad:	vucomisd xmm0,QWORD PTR [rbp-0x8]
  403db2:	jbe    403dd8 <_start@@Base+0xc78>
  403db4:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403db9:	vmovsd xmm1,QWORD PTR [rip+0x7847]        # 40b608 <_IO_stdin_used@@Base+0x608>
  403dc1:	vdivsd xmm0,xmm0,xmm1
  403dc5:	lea    rdi,[rip+0x7578]        # 40b344 <_IO_stdin_used@@Base+0x344>
  403dcc:	mov    eax,0x1
  403dd1:	call   403090 <printf@plt>
  403dd6:	jmp    403e2d <_start@@Base+0xccd>
  403dd8:	vmovsd xmm0,QWORD PTR [rip+0x7820]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403de0:	vucomisd xmm0,QWORD PTR [rbp-0x8]
  403de5:	jbe    403e0b <_start@@Base+0xcab>
  403de7:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403dec:	vmovsd xmm1,QWORD PTR [rip+0x77fc]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403df4:	vdivsd xmm0,xmm0,xmm1
  403df8:	lea    rdi,[rip+0x755d]        # 40b35c <_IO_stdin_used@@Base+0x35c>
  403dff:	mov    eax,0x1
  403e04:	call   403090 <printf@plt>
  403e09:	jmp    403e2d <_start@@Base+0xccd>
  403e0b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403e10:	vmovsd xmm1,QWORD PTR [rip+0x77e8]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403e18:	vdivsd xmm0,xmm0,xmm1
  403e1c:	lea    rdi,[rip+0x7551]        # 40b374 <_IO_stdin_used@@Base+0x374>
  403e23:	mov    eax,0x1
  403e28:	call   403090 <printf@plt>
  403e2d:	mov    eax,0x0
  403e32:	leave  
  403e33:	ret    
  403e34:	push   rbp
  403e35:	mov    rbp,rsp
  403e38:	sub    rsp,0x20
  403e3c:	mov    QWORD PTR [rbp-0x18],rdi
  403e40:	mov    rax,QWORD PTR [rbp-0x18]
  403e44:	mov    rdi,rax
  403e47:	call   40389d <_start@@Base+0x73d>
  403e4c:	mov    rax,QWORD PTR [rbp-0x18]
  403e50:	mov    rdi,rax
  403e53:	call   4039bc <_start@@Base+0x85c>
  403e58:	mov    QWORD PTR [rbp-0x8],0x0
  403e60:	jmp    403e7f <_start@@Base+0xd1f>
  403e62:	mov    rax,QWORD PTR [rbp-0x18]
  403e66:	mov    edx,0x7
  403e6b:	lea    rsi,[rip+0x7519]        # 40b38b <_IO_stdin_used@@Base+0x38b>
  403e72:	mov    rdi,rax
  403e75:	call   403822 <_start@@Base+0x6c2>
  403e7a:	add    QWORD PTR [rbp-0x8],0x1
  403e7f:	cmp    QWORD PTR [rbp-0x8],0x63
  403e84:	jbe    403e62 <_start@@Base+0xd02>
  403e86:	mov    rax,QWORD PTR [rbp-0x18]
  403e8a:	mov    rdi,rax
  403e8d:	call   4039d6 <_start@@Base+0x876>
  403e92:	mov    rax,QWORD PTR [rbp-0x18]
  403e96:	mov    rdi,rax
  403e99:	call   403a7d <_start@@Base+0x91d>
  403e9e:	mov    QWORD PTR [rbp-0x8],0x0
  403ea6:	jmp    403ec5 <_start@@Base+0xd65>
  403ea8:	mov    rax,QWORD PTR [rbp-0x18]
  403eac:	mov    edx,0x3e8
  403eb1:	lea    rsi,[rip+0xc248]        # 410100 <__bss_start@@Base+0x30>
  403eb8:	mov    rdi,rax
  403ebb:	call   4037f5 <_start@@Base+0x695>
  403ec0:	add    QWORD PTR [rbp-0x8],0x1
  403ec5:	cmp    QWORD PTR [rbp-0x8],0x63
  403eca:	jbe    403ea8 <_start@@Base+0xd48>
  403ecc:	mov    rax,QWORD PTR [rbp-0x18]
  403ed0:	mov    rdi,rax
  403ed3:	call   403a97 <_start@@Base+0x937>
  403ed8:	mov    rax,QWORD PTR [rbp-0x18]
  403edc:	mov    rdi,rax
  403edf:	call   4038bc <_start@@Base+0x75c>
  403ee4:	leave  
  403ee5:	ret    
  403ee6:	push   rbp
  403ee7:	mov    rbp,rsp
  403eea:	sub    rsp,0x20
  403eee:	mov    QWORD PTR [rbp-0x18],rdi
  403ef2:	mov    rax,QWORD PTR [rbp-0x18]
  403ef6:	mov    rdi,rax
  403ef9:	call   403911 <_start@@Base+0x7b1>
  403efe:	mov    QWORD PTR [rbp-0x8],0x0
  403f06:	jmp    403f52 <_start@@Base+0xdf2>
  403f08:	mov    rax,QWORD PTR [rbp-0x18]
  403f0c:	mov    rdi,rax
  403f0f:	call   403e34 <_start@@Base+0xcd4>
  403f14:	mov    DWORD PTR [rbp-0xc],eax
  403f17:	cmp    DWORD PTR [rbp-0xc],0x0
  403f1b:	jne    403f3c <_start@@Base+0xddc>
  403f1d:	lea    rcx,[rip+0x75cc]        # 40b4f0 <_IO_stdin_used@@Base+0x4f0>
  403f24:	mov    edx,0x2a
  403f29:	lea    rsi,[rip+0x7468]        # 40b398 <_IO_stdin_used@@Base+0x398>
  403f30:	lea    rdi,[rip+0x74c6]        # 40b3fd <_IO_stdin_used@@Base+0x3fd>
  403f37:	call   4030b0 <__assert_fail@plt>
  403f3c:	mov    edx,DWORD PTR [rbp-0xc]
  403f3f:	mov    rax,QWORD PTR [rbp-0x18]
  403f43:	mov    esi,edx
  403f45:	mov    rdi,rax
  403f48:	call   403945 <_start@@Base+0x7e5>
  403f4d:	add    QWORD PTR [rbp-0x8],0x1
  403f52:	cmp    QWORD PTR [rbp-0x8],0x3e7
  403f5a:	jbe    403f08 <_start@@Base+0xda8>
  403f5c:	mov    rax,QWORD PTR [rbp-0x18]
  403f60:	mov    rdi,rax
  403f63:	call   40392b <_start@@Base+0x7cb>
  403f68:	leave  
  403f69:	ret    
  403f6a:	push   rbp
  403f6b:	mov    rbp,rsp
  403f6e:	sub    rsp,0x20
  403f72:	mov    QWORD PTR [rbp-0x18],rdi
  403f76:	mov    rax,QWORD PTR [rbp-0x18]
  403f7a:	mov    rdi,rax
  403f7d:	call   40523d <flatcc_builder_reset@@Base>
  403f82:	mov    rax,QWORD PTR [rbp-0x18]
  403f86:	mov    rdi,rax
  403f89:	call   403b09 <_start@@Base+0x9a9>
  403f8e:	mov    rax,QWORD PTR [rbp-0x18]
  403f92:	lea    rsi,[rip+0x7466]        # 40b3ff <_IO_stdin_used@@Base+0x3ff>
  403f99:	mov    rdi,rax
  403f9c:	call   403a00 <_start@@Base+0x8a0>
  403fa1:	mov    rax,QWORD PTR [rbp-0x18]
  403fa5:	mov    rdi,rax
  403fa8:	call   403ee6 <_start@@Base+0xd86>
  403fad:	mov    DWORD PTR [rbp-0x4],eax
  403fb0:	cmp    DWORD PTR [rbp-0x4],0x0
  403fb4:	jne    403fd5 <_start@@Base+0xe75>
  403fb6:	lea    rcx,[rip+0x7543]        # 40b500 <_IO_stdin_used@@Base+0x500>
  403fbd:	mov    edx,0x38
  403fc2:	lea    rsi,[rip+0x73cf]        # 40b398 <_IO_stdin_used@@Base+0x398>
  403fc9:	lea    rdi,[rip+0x743c]        # 40b40c <_IO_stdin_used@@Base+0x40c>
  403fd0:	call   4030b0 <__assert_fail@plt>
  403fd5:	mov    edx,DWORD PTR [rbp-0x4]
  403fd8:	mov    rax,QWORD PTR [rbp-0x18]
  403fdc:	mov    esi,edx
  403fde:	mov    rdi,rax
  403fe1:	call   403ac1 <_start@@Base+0x961>
  403fe6:	mov    rax,QWORD PTR [rbp-0x18]
  403fea:	mov    rdi,rax
  403fed:	call   403b41 <_start@@Base+0x9e1>
  403ff2:	mov    eax,0x0
  403ff7:	leave  
  403ff8:	ret    
  403ff9:	push   rbp
  403ffa:	mov    rbp,rsp
  403ffd:	sub    rsp,0x30
  404001:	mov    QWORD PTR [rbp-0x28],rdi
  404005:	mov    QWORD PTR [rbp-0x30],rsi
  404009:	mov    rax,QWORD PTR [rbp-0x30]
  40400d:	mov    rdi,rax
  404010:	call   403519 <_start@@Base+0x3b9>
  404015:	mov    QWORD PTR [rbp-0x10],rax
  404019:	mov    rax,QWORD PTR [rbp-0x30]
  40401d:	mov    rdi,rax
  404020:	call   403608 <_start@@Base+0x4a8>
  404025:	mov    QWORD PTR [rbp-0x8],rax
  404029:	mov    rax,QWORD PTR [rbp-0x10]
  40402d:	mov    rdi,rax
  404030:	call   403344 <_start@@Base+0x1e4>
  404035:	cmp    rax,0x2bc
  40403b:	je     40405c <_start@@Base+0xefc>
  40403d:	lea    rcx,[rip+0x74d4]        # 40b518 <_IO_stdin_used@@Base+0x518>
  404044:	mov    edx,0x4a
  404049:	lea    rsi,[rip+0x7348]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404050:	lea    rdi,[rip+0x73b8]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  404057:	call   4030b0 <__assert_fail@plt>
  40405c:	mov    rax,QWORD PTR [rbp-0x8]
  404060:	mov    rdi,rax
  404063:	call   403372 <_start@@Base+0x212>
  404068:	cmp    rax,0x186a0
  40406e:	je     40408f <_start@@Base+0xf2f>
  404070:	lea    rcx,[rip+0x74a1]        # 40b518 <_IO_stdin_used@@Base+0x518>
  404077:	mov    edx,0x4e
  40407c:	lea    rsi,[rip+0x7315]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404083:	lea    rdi,[rip+0x7385]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  40408a:	call   4030b0 <__assert_fail@plt>
  40408f:	mov    QWORD PTR [rbp-0x18],0x0
  404097:	jmp    40415c <_start@@Base+0xffc>
  40409c:	mov    rdx,QWORD PTR [rbp-0x18]
  4040a0:	mov    rax,rdx
  4040a3:	shl    rax,0x3
  4040a7:	sub    rax,rdx
  4040aa:	mov    rdx,rax
  4040ad:	mov    rax,QWORD PTR [rbp-0x10]
  4040b1:	add    rax,rdx
  4040b4:	mov    edx,0x7
  4040b9:	lea    rsi,[rip+0x72cb]        # 40b38b <_IO_stdin_used@@Base+0x38b>
  4040c0:	mov    rdi,rax
  4040c3:	call   4030e0 <memcmp@plt>
  4040c8:	test   eax,eax
  4040ca:	je     404157 <_start@@Base+0xff7>
  4040d0:	cmp    QWORD PTR [rbp-0x10],0x0
  4040d5:	je     4040dd <_start@@Base+0xf7d>
  4040d7:	mov    rax,QWORD PTR [rbp-0x10]
  4040db:	jmp    4040e4 <_start@@Base+0xf84>
  4040dd:	lea    rax,[rip+0x732d]        # 40b411 <_IO_stdin_used@@Base+0x411>
  4040e4:	mov    rcx,QWORD PTR [rbp-0x18]
  4040e8:	mov    rdx,rax
  4040eb:	mov    rsi,rcx
  4040ee:	lea    rdi,[rip+0x7323]        # 40b418 <_IO_stdin_used@@Base+0x418>
  4040f5:	mov    eax,0x0
  4040fa:	call   403090 <printf@plt>
  4040ff:	mov    rdx,QWORD PTR [rbp-0x18]
  404103:	mov    rax,rdx
  404106:	shl    rax,0x3
  40410a:	sub    rax,rdx
  40410d:	mov    rdx,rax
  404110:	mov    rax,QWORD PTR [rbp-0x10]
  404114:	add    rax,rdx
  404117:	mov    rdx,rax
  40411a:	mov    rax,QWORD PTR [rbp-0x28]
  40411e:	sub    rdx,rax
  404121:	mov    rax,rdx
  404124:	mov    rsi,rax
  404127:	lea    rdi,[rip+0x730a]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40412e:	mov    eax,0x0
  404133:	call   403090 <printf@plt>
  404138:	lea    rcx,[rip+0x73d9]        # 40b518 <_IO_stdin_used@@Base+0x518>
  40413f:	mov    edx,0x55
  404144:	lea    rsi,[rip+0x724d]        # 40b398 <_IO_stdin_used@@Base+0x398>
  40414b:	lea    rdi,[rip+0x72bd]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  404152:	call   4030b0 <__assert_fail@plt>
  404157:	add    QWORD PTR [rbp-0x18],0x1
  40415c:	cmp    QWORD PTR [rbp-0x18],0x63
  404161:	jbe    40409c <_start@@Base+0xf3c>
  404167:	mov    QWORD PTR [rbp-0x18],0x0
  40416f:	jmp    4041bf <_start@@Base+0x105f>
  404171:	mov    rax,QWORD PTR [rbp-0x18]
  404175:	imul   rdx,rax,0x3e8
  40417c:	mov    rax,QWORD PTR [rbp-0x8]
  404180:	add    rax,rdx
  404183:	mov    edx,0x3e8
  404188:	lea    rsi,[rip+0xbf71]        # 410100 <__bss_start@@Base+0x30>
  40418f:	mov    rdi,rax
  404192:	call   4030e0 <memcmp@plt>
  404197:	test   eax,eax
  404199:	je     4041ba <_start@@Base+0x105a>
  40419b:	lea    rcx,[rip+0x7376]        # 40b518 <_IO_stdin_used@@Base+0x518>
  4041a2:	mov    edx,0x5b
  4041a7:	lea    rsi,[rip+0x71ea]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4041ae:	lea    rdi,[rip+0x725a]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  4041b5:	call   4030b0 <__assert_fail@plt>
  4041ba:	add    QWORD PTR [rbp-0x18],0x1
  4041bf:	cmp    QWORD PTR [rbp-0x18],0x63
  4041c4:	jbe    404171 <_start@@Base+0x1011>
  4041c6:	mov    eax,0x0
  4041cb:	leave  
  4041cc:	ret    

00000000004041cd <main@@Base>:
  4041cd:	push   rbp
  4041ce:	mov    rbp,rsp
  4041d1:	sub    rsp,0x200
  4041d8:	mov    DWORD PTR [rbp-0x1e4],edi
  4041de:	mov    QWORD PTR [rbp-0x1f0],rsi
  4041e5:	mov    rax,QWORD PTR fs:0x28
  4041ee:	mov    QWORD PTR [rbp-0x8],rax
  4041f2:	xor    eax,eax
  4041f4:	mov    DWORD PTR [rbp-0x1d4],0xa
  4041fe:	mov    DWORD PTR [rbp-0x1dc],0x0
  404208:	lea    rax,[rbp-0x190]
  40420f:	mov    QWORD PTR [rbp-0x1c8],rax
  404216:	mov    rax,QWORD PTR [rbp-0x1c8]
  40421d:	mov    rdi,rax
  404220:	call   404ffd <flatcc_builder_init@@Base>
  404225:	mov    rax,QWORD PTR [rbp-0x1c8]
  40422c:	mov    rdi,rax
  40422f:	call   403f6a <_start@@Base+0xe0a>
  404234:	lea    rdx,[rbp-0x1d0]
  40423b:	mov    rax,QWORD PTR [rbp-0x1c8]
  404242:	mov    rsi,rdx
  404245:	mov    rdi,rax
  404248:	call   409942 <flatcc_builder_finalize_buffer@@Base>
  40424d:	mov    QWORD PTR [rbp-0x1c0],rax
  404254:	lea    rsi,[rip+0x71ea]        # 40b445 <_IO_stdin_used@@Base+0x445>
  40425b:	lea    rdi,[rip+0x71e6]        # 40b448 <_IO_stdin_used@@Base+0x448>
  404262:	call   403130 <fopen@plt>
  404267:	mov    QWORD PTR [rbp-0x1b8],rax
  40426e:	cmp    QWORD PTR [rbp-0x1b8],0x0
  404276:	jne    404287 <main@@Base+0xba>
  404278:	mov    DWORD PTR [rbp-0x1dc],0xffffffff
  404282:	jmp    40450b <main@@Base+0x33e>
  404287:	mov    rdx,QWORD PTR [rbp-0x1d0]
  40428e:	mov    rcx,QWORD PTR [rbp-0x1b8]
  404295:	mov    rax,QWORD PTR [rbp-0x1c0]
  40429c:	mov    esi,0x1
  4042a1:	mov    rdi,rax
  4042a4:	call   403140 <fwrite@plt>
  4042a9:	mov    rdx,rax
  4042ac:	mov    rax,QWORD PTR [rbp-0x1d0]
  4042b3:	cmp    rdx,rax
  4042b6:	setne  al
  4042b9:	movzx  eax,al
  4042bc:	or     DWORD PTR [rbp-0x1dc],eax
  4042c2:	mov    rax,QWORD PTR [rbp-0x1b8]
  4042c9:	mov    rdi,rax
  4042cc:	call   403060 <fclose@plt>
  4042d1:	cmp    DWORD PTR [rbp-0x1dc],0x0
  4042d8:	jne    404507 <main@@Base+0x33a>
  4042de:	mov    rax,QWORD PTR [rbp-0x1d0]
  4042e5:	mov    rsi,rax
  4042e8:	lea    rdi,[rip+0x716f]        # 40b45e <_IO_stdin_used@@Base+0x45e>
  4042ef:	mov    eax,0x0
  4042f4:	call   403090 <printf@plt>
  4042f9:	lea    rdi,[rip+0x7170]        # 40b470 <_IO_stdin_used@@Base+0x470>
  404300:	call   403050 <puts@plt>
  404305:	call   403b6b <_start@@Base+0xa0b>
  40430a:	vmovq  rax,xmm0
  40430f:	mov    QWORD PTR [rbp-0x1b0],rax
  404316:	mov    DWORD PTR [rbp-0x1e0],0x0
  404320:	jmp    4044a2 <main@@Base+0x2d5>
  404325:	mov    rax,QWORD PTR [rbp-0x1c8]
  40432c:	mov    rdi,rax
  40432f:	call   403f6a <_start@@Base+0xe0a>
  404334:	mov    rdx,QWORD PTR [rbp-0x1d0]
  40433b:	mov    rcx,QWORD PTR [rbp-0x1c0]
  404342:	mov    rax,QWORD PTR [rbp-0x1c8]
  404349:	mov    rsi,rcx
  40434c:	mov    rdi,rax
  40434f:	call   4098cb <flatcc_builder_copy_buffer@@Base>
  404354:	mov    rax,QWORD PTR [rbp-0x1c0]
  40435b:	mov    rdi,rax
  40435e:	call   4034c6 <_start@@Base+0x366>
  404363:	mov    QWORD PTR [rbp-0x1a8],rax
  40436a:	mov    rax,QWORD PTR [rbp-0x1a8]
  404371:	mov    rdi,rax
  404374:	call   403519 <_start@@Base+0x3b9>
  404379:	lea    rsi,[rip+0x707f]        # 40b3ff <_IO_stdin_used@@Base+0x3ff>
  404380:	mov    rdi,rax
  404383:	call   4030f0 <strcmp@plt>
  404388:	or     DWORD PTR [rbp-0x1dc],eax
  40438e:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404395:	je     4043b6 <main@@Base+0x1e9>
  404397:	lea    rcx,[rip+0x71e3]        # 40b581 <_IO_stdin_used@@Base+0x581>
  40439e:	mov    edx,0x8b
  4043a3:	lea    rsi,[rip+0x6fee]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4043aa:	lea    rdi,[rip+0x70d0]        # 40b481 <_IO_stdin_used@@Base+0x481>
  4043b1:	call   4030b0 <__assert_fail@plt>
  4043b6:	mov    rax,QWORD PTR [rbp-0x1a8]
  4043bd:	mov    rdi,rax
  4043c0:	call   4036dd <_start@@Base+0x57d>
  4043c5:	mov    QWORD PTR [rbp-0x1a0],rax
  4043cc:	mov    rax,QWORD PTR [rbp-0x1a0]
  4043d3:	mov    rdi,rax
  4043d6:	call   403429 <_start@@Base+0x2c9>
  4043db:	cmp    rax,0x3e8
  4043e1:	setne  al
  4043e4:	movzx  eax,al
  4043e7:	or     DWORD PTR [rbp-0x1dc],eax
  4043ed:	cmp    DWORD PTR [rbp-0x1dc],0x0
  4043f4:	je     404415 <main@@Base+0x248>
  4043f6:	lea    rcx,[rip+0x7184]        # 40b581 <_IO_stdin_used@@Base+0x581>
  4043fd:	mov    edx,0x8f
  404402:	lea    rsi,[rip+0x6f8f]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404409:	lea    rdi,[rip+0x7071]        # 40b481 <_IO_stdin_used@@Base+0x481>
  404410:	call   4030b0 <__assert_fail@plt>
  404415:	mov    DWORD PTR [rbp-0x1d8],0x0
  40441f:	jmp    404486 <main@@Base+0x2b9>
  404421:	mov    eax,DWORD PTR [rbp-0x1d8]
  404427:	movsxd rdx,eax
  40442a:	mov    rax,QWORD PTR [rbp-0x1a0]
  404431:	mov    rsi,rdx
  404434:	mov    rdi,rax
  404437:	call   403457 <_start@@Base+0x2f7>
  40443c:	mov    rdx,rax
  40443f:	mov    rax,QWORD PTR [rbp-0x1c0]
  404446:	mov    rsi,rdx
  404449:	mov    rdi,rax
  40444c:	call   403ff9 <_start@@Base+0xe99>
  404451:	or     DWORD PTR [rbp-0x1dc],eax
  404457:	cmp    DWORD PTR [rbp-0x1dc],0x0
  40445e:	je     40447f <main@@Base+0x2b2>
  404460:	lea    rcx,[rip+0x711a]        # 40b581 <_IO_stdin_used@@Base+0x581>
  404467:	mov    edx,0x93
  40446c:	lea    rsi,[rip+0x6f25]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404473:	lea    rdi,[rip+0x7007]        # 40b481 <_IO_stdin_used@@Base+0x481>
  40447a:	call   4030b0 <__assert_fail@plt>
  40447f:	add    DWORD PTR [rbp-0x1d8],0x1
  404486:	cmp    DWORD PTR [rbp-0x1d8],0x3e7
  404490:	jle    404421 <main@@Base+0x254>
  404492:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404499:	jne    40450a <main@@Base+0x33d>
  40449b:	add    DWORD PTR [rbp-0x1e0],0x1
  4044a2:	mov    eax,DWORD PTR [rbp-0x1e0]
  4044a8:	cmp    eax,DWORD PTR [rbp-0x1d4]
  4044ae:	jl     404325 <main@@Base+0x158>
  4044b4:	call   403b6b <_start@@Base+0xa0b>
  4044b9:	vmovq  rax,xmm0
  4044be:	mov    QWORD PTR [rbp-0x198],rax
  4044c5:	mov    rsi,QWORD PTR [rbp-0x1d0]
  4044cc:	mov    edx,DWORD PTR [rbp-0x1d4]
  4044d2:	vmovsd xmm0,QWORD PTR [rbp-0x198]
  4044da:	mov    rax,QWORD PTR [rbp-0x1b0]
  4044e1:	mov    ecx,0x0
  4044e6:	vmovapd xmm1,xmm0
  4044ea:	mov    QWORD PTR [rbp-0x1f8],rax
  4044f1:	vmovsd xmm0,QWORD PTR [rbp-0x1f8]
  4044f9:	lea    rdi,[rip+0x6f90]        # 40b490 <_IO_stdin_used@@Base+0x490>
  404500:	call   403c0f <_start@@Base+0xaaf>
  404505:	jmp    40450b <main@@Base+0x33e>
  404507:	nop
  404508:	jmp    40450b <main@@Base+0x33e>
  40450a:	nop
  40450b:	mov    rax,QWORD PTR [rbp-0x1c8]
  404512:	mov    rdi,rax
  404515:	call   405261 <flatcc_builder_clear@@Base>
  40451a:	mov    rax,QWORD PTR [rbp-0x1c0]
  404521:	mov    rdi,rax
  404524:	call   403030 <free@plt>
  404529:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404530:	je     40453e <main@@Base+0x371>
  404532:	lea    rdi,[rip+0x6f80]        # 40b4b9 <_IO_stdin_used@@Base+0x4b9>
  404539:	call   403050 <puts@plt>
  40453e:	mov    eax,DWORD PTR [rbp-0x1dc]
  404544:	mov    rcx,QWORD PTR [rbp-0x8]
  404548:	xor    rcx,QWORD PTR fs:0x28
  404551:	je     404558 <main@@Base+0x38b>
  404553:	call   403080 <__stack_chk_fail@plt>
  404558:	leave  
  404559:	ret    
  40455a:	push   rbp
  40455b:	mov    rbp,rsp
  40455e:	sub    rsp,0x30
  404562:	mov    QWORD PTR [rbp-0x28],rdi
  404566:	mov    QWORD PTR [rbp-0x30],rsi
  40456a:	mov    rax,QWORD PTR fs:0x28
  404573:	mov    QWORD PTR [rbp-0x8],rax
  404577:	xor    eax,eax
  404579:	mov    QWORD PTR [rbp-0x10],0x0
  404581:	cmp    QWORD PTR [rbp-0x28],0x7
  404586:	ja     404590 <main@@Base+0x3c3>
  404588:	mov    QWORD PTR [rbp-0x28],0x8
  404590:	mov    rdx,QWORD PTR [rbp-0x30]
  404594:	mov    rcx,QWORD PTR [rbp-0x28]
  404598:	lea    rax,[rbp-0x10]
  40459c:	mov    rsi,rcx
  40459f:	mov    rdi,rax
  4045a2:	call   403150 <posix_memalign@plt>
  4045a7:	mov    DWORD PTR [rbp-0x14],eax
  4045aa:	cmp    DWORD PTR [rbp-0x14],0x0
  4045ae:	je     4045cd <main@@Base+0x400>
  4045b0:	mov    rax,QWORD PTR [rbp-0x10]
  4045b4:	test   rax,rax
  4045b7:	je     4045cd <main@@Base+0x400>
  4045b9:	mov    rax,QWORD PTR [rbp-0x10]
  4045bd:	mov    rdi,rax
  4045c0:	call   403030 <free@plt>
  4045c5:	mov    QWORD PTR [rbp-0x10],0x0
  4045cd:	mov    rax,QWORD PTR [rbp-0x10]
  4045d1:	mov    rcx,QWORD PTR [rbp-0x8]
  4045d5:	xor    rcx,QWORD PTR fs:0x28
  4045de:	je     4045e5 <main@@Base+0x418>
  4045e0:	call   403080 <__stack_chk_fail@plt>
  4045e5:	leave  
  4045e6:	ret    
  4045e7:	push   rbp
  4045e8:	mov    rbp,rsp
  4045eb:	mov    DWORD PTR [rbp-0x4],edi
  4045ee:	mov    eax,DWORD PTR [rbp-0x4]
  4045f1:	pop    rbp
  4045f2:	ret    
  4045f3:	push   rbp
  4045f4:	mov    rbp,rsp
  4045f7:	mov    eax,edi
  4045f9:	mov    BYTE PTR [rbp-0x4],al
  4045fc:	movzx  eax,BYTE PTR [rbp-0x4]
  404600:	pop    rbp
  404601:	ret    
  404602:	push   rbp
  404603:	mov    rbp,rsp
  404606:	mov    DWORD PTR [rbp-0x4],edi
  404609:	mov    eax,DWORD PTR [rbp-0x4]
  40460c:	pop    rbp
  40460d:	ret    
  40460e:	push   rbp
  40460f:	mov    rbp,rsp
  404612:	mov    QWORD PTR [rbp-0x8],rdi
  404616:	mov    QWORD PTR [rbp-0x10],rsi
  40461a:	mov    rax,QWORD PTR [rbp-0x8]
  40461e:	mov    rdx,QWORD PTR [rax]
  404621:	mov    rax,QWORD PTR [rbp-0x8]
  404625:	mov    rax,QWORD PTR [rax+0x8]
  404629:	cmp    rdx,rax
  40462c:	jne    40464e <main@@Base+0x481>
  40462e:	cmp    QWORD PTR [rbp-0x10],0x0
  404633:	je     404644 <main@@Base+0x477>
  404635:	mov    rax,QWORD PTR [rbp-0x8]
  404639:	mov    rdx,QWORD PTR [rax+0x30]
  40463d:	mov    rax,QWORD PTR [rbp-0x10]
  404641:	mov    QWORD PTR [rax],rdx
  404644:	mov    rax,QWORD PTR [rbp-0x8]
  404648:	mov    rax,QWORD PTR [rax+0x10]
  40464c:	jmp    404665 <main@@Base+0x498>
  40464e:	cmp    QWORD PTR [rbp-0x10],0x0
  404653:	je     404660 <main@@Base+0x493>
  404655:	mov    rax,QWORD PTR [rbp-0x10]
  404659:	mov    QWORD PTR [rax],0x0
  404660:	mov    eax,0x0
  404665:	pop    rbp
  404666:	ret    
  404667:	push   rbp
  404668:	mov    rbp,rsp
  40466b:	sub    rsp,0x20
  40466f:	mov    QWORD PTR [rbp-0x18],rdi
  404673:	mov    QWORD PTR [rbp-0x20],rsi
  404677:	mov    rdx,QWORD PTR [rbp-0x20]
  40467b:	mov    rax,QWORD PTR [rbp-0x18]
  40467f:	mov    esi,0x0
  404684:	mov    rdi,rax
  404687:	call   4030d0 <memchr@plt>
  40468c:	mov    QWORD PTR [rbp-0x8],rax
  404690:	cmp    QWORD PTR [rbp-0x8],0x0
  404695:	je     4046a7 <main@@Base+0x4da>
  404697:	mov    rdx,QWORD PTR [rbp-0x8]
  40469b:	mov    rax,QWORD PTR [rbp-0x18]
  40469f:	sub    rdx,rax
  4046a2:	mov    rax,rdx
  4046a5:	jmp    4046ab <main@@Base+0x4de>
  4046a7:	mov    rax,QWORD PTR [rbp-0x20]
  4046ab:	leave  
  4046ac:	ret    

00000000004046ad <flatcc_builder_default_alloc@@Base>:
  4046ad:	push   rbp
  4046ae:	mov    rbp,rsp
  4046b1:	sub    rsp,0x30
  4046b5:	mov    QWORD PTR [rbp-0x18],rdi
  4046b9:	mov    QWORD PTR [rbp-0x20],rsi
  4046bd:	mov    QWORD PTR [rbp-0x28],rdx
  4046c1:	mov    DWORD PTR [rbp-0x2c],ecx
  4046c4:	mov    DWORD PTR [rbp-0x30],r8d
  4046c8:	cmp    QWORD PTR [rbp-0x28],0x0
  4046cd:	jne    40470b <flatcc_builder_default_alloc@@Base+0x5e>
  4046cf:	mov    rax,QWORD PTR [rbp-0x20]
  4046d3:	mov    rax,QWORD PTR [rax]
  4046d6:	test   rax,rax
  4046d9:	je     404701 <flatcc_builder_default_alloc@@Base+0x54>
  4046db:	mov    rax,QWORD PTR [rbp-0x20]
  4046df:	mov    rax,QWORD PTR [rax]
  4046e2:	mov    rdi,rax
  4046e5:	call   403030 <free@plt>
  4046ea:	mov    rax,QWORD PTR [rbp-0x20]
  4046ee:	mov    QWORD PTR [rax],0x0
  4046f5:	mov    rax,QWORD PTR [rbp-0x20]
  4046f9:	mov    QWORD PTR [rax+0x8],0x0
  404701:	mov    eax,0x0
  404706:	jmp    404818 <flatcc_builder_default_alloc@@Base+0x16b>
  40470b:	mov    eax,DWORD PTR [rbp-0x30]
  40470e:	cmp    eax,0x4
  404711:	je     40473f <flatcc_builder_default_alloc@@Base+0x92>
  404713:	cmp    eax,0x4
  404716:	jg     40471f <flatcc_builder_default_alloc@@Base+0x72>
  404718:	cmp    eax,0x1
  40471b:	je     40472b <flatcc_builder_default_alloc@@Base+0x7e>
  40471d:	jmp    404753 <flatcc_builder_default_alloc@@Base+0xa6>
  40471f:	cmp    eax,0x5
  404722:	je     404735 <flatcc_builder_default_alloc@@Base+0x88>
  404724:	cmp    eax,0x7
  404727:	je     404749 <flatcc_builder_default_alloc@@Base+0x9c>
  404729:	jmp    404753 <flatcc_builder_default_alloc@@Base+0xa6>
  40472b:	mov    QWORD PTR [rbp-0x10],0x100
  404733:	jmp    40475c <flatcc_builder_default_alloc@@Base+0xaf>
  404735:	mov    rax,QWORD PTR [rbp-0x28]
  404739:	mov    QWORD PTR [rbp-0x10],rax
  40473d:	jmp    40475c <flatcc_builder_default_alloc@@Base+0xaf>
  40473f:	mov    QWORD PTR [rbp-0x10],0x120
  404747:	jmp    40475c <flatcc_builder_default_alloc@@Base+0xaf>
  404749:	mov    QWORD PTR [rbp-0x10],0x40
  404751:	jmp    40475c <flatcc_builder_default_alloc@@Base+0xaf>
  404753:	mov    QWORD PTR [rbp-0x10],0x20
  40475b:	nop
  40475c:	jmp    404762 <flatcc_builder_default_alloc@@Base+0xb5>
  40475e:	shl    QWORD PTR [rbp-0x10],1
  404762:	mov    rax,QWORD PTR [rbp-0x10]
  404766:	cmp    rax,QWORD PTR [rbp-0x28]
  40476a:	jb     40475e <flatcc_builder_default_alloc@@Base+0xb1>
  40476c:	mov    rax,QWORD PTR [rbp-0x20]
  404770:	mov    rax,QWORD PTR [rax+0x8]
  404774:	cmp    rax,QWORD PTR [rbp-0x28]
  404778:	jb     404795 <flatcc_builder_default_alloc@@Base+0xe8>
  40477a:	mov    rax,QWORD PTR [rbp-0x20]
  40477e:	mov    rax,QWORD PTR [rax+0x8]
  404782:	shr    rax,1
  404785:	cmp    rax,QWORD PTR [rbp-0x10]
  404789:	jb     404795 <flatcc_builder_default_alloc@@Base+0xe8>
  40478b:	mov    eax,0x0
  404790:	jmp    404818 <flatcc_builder_default_alloc@@Base+0x16b>
  404795:	mov    rax,QWORD PTR [rbp-0x20]
  404799:	mov    rax,QWORD PTR [rax]
  40479c:	mov    rdx,QWORD PTR [rbp-0x10]
  4047a0:	mov    rsi,rdx
  4047a3:	mov    rdi,rax
  4047a6:	call   403120 <realloc@plt>
  4047ab:	mov    QWORD PTR [rbp-0x8],rax
  4047af:	cmp    QWORD PTR [rbp-0x8],0x0
  4047b4:	jne    4047bd <flatcc_builder_default_alloc@@Base+0x110>
  4047b6:	mov    eax,0xffffffff
  4047bb:	jmp    404818 <flatcc_builder_default_alloc@@Base+0x16b>
  4047bd:	cmp    DWORD PTR [rbp-0x2c],0x0
  4047c1:	je     4047fc <flatcc_builder_default_alloc@@Base+0x14f>
  4047c3:	mov    rax,QWORD PTR [rbp-0x20]
  4047c7:	mov    rax,QWORD PTR [rax+0x8]
  4047cb:	cmp    rax,QWORD PTR [rbp-0x10]
  4047cf:	jae    4047fc <flatcc_builder_default_alloc@@Base+0x14f>
  4047d1:	mov    rax,QWORD PTR [rbp-0x20]
  4047d5:	mov    rax,QWORD PTR [rax+0x8]
  4047d9:	mov    rdx,QWORD PTR [rbp-0x10]
  4047dd:	sub    rdx,rax
  4047e0:	mov    rax,QWORD PTR [rbp-0x20]
  4047e4:	mov    rcx,QWORD PTR [rax+0x8]
  4047e8:	mov    rax,QWORD PTR [rbp-0x8]
  4047ec:	add    rax,rcx
  4047ef:	mov    esi,0x0
  4047f4:	mov    rdi,rax
  4047f7:	call   4030c0 <memset@plt>
  4047fc:	mov    rax,QWORD PTR [rbp-0x20]
  404800:	mov    rdx,QWORD PTR [rbp-0x8]
  404804:	mov    QWORD PTR [rax],rdx
  404807:	mov    rax,QWORD PTR [rbp-0x20]
  40480b:	mov    rdx,QWORD PTR [rbp-0x10]
  40480f:	mov    QWORD PTR [rax+0x8],rdx
  404813:	mov    eax,0x0
  404818:	leave  
  404819:	ret    
  40481a:	push   rbp
  40481b:	mov    rbp,rsp
  40481e:	mov    QWORD PTR [rbp-0x18],rdi
  404822:	mov    DWORD PTR [rbp-0x1c],esi
  404825:	mov    rax,QWORD PTR [rbp-0x18]
  404829:	add    rax,0x58
  40482d:	add    rax,0x10
  404831:	mov    QWORD PTR [rbp-0x8],rax
  404835:	mov    rax,QWORD PTR [rbp-0x18]
  404839:	mov    rdx,QWORD PTR [rax+0x68]
  40483d:	mov    rax,QWORD PTR [rbp-0x18]
  404841:	mov    eax,DWORD PTR [rax+0x28]
  404844:	mov    eax,eax
  404846:	add    rdx,rax
  404849:	mov    rax,QWORD PTR [rbp-0x18]
  40484d:	mov    QWORD PTR [rax+0x18],rdx
  404851:	mov    rax,QWORD PTR [rbp-0x8]
  404855:	mov    rax,QWORD PTR [rax+0x8]
  404859:	mov    edx,eax
  40485b:	mov    rax,QWORD PTR [rbp-0x18]
  40485f:	mov    eax,DWORD PTR [rax+0x28]
  404862:	sub    edx,eax
  404864:	mov    rax,QWORD PTR [rbp-0x18]
  404868:	mov    DWORD PTR [rax+0x24],edx
  40486b:	mov    rax,QWORD PTR [rbp-0x18]
  40486f:	mov    eax,DWORD PTR [rax+0x24]
  404872:	cmp    eax,DWORD PTR [rbp-0x1c]
  404875:	jbe    404881 <flatcc_builder_default_alloc@@Base+0x1d4>
  404877:	mov    rax,QWORD PTR [rbp-0x18]
  40487b:	mov    edx,DWORD PTR [rbp-0x1c]
  40487e:	mov    DWORD PTR [rax+0x24],edx
  404881:	mov    rax,QWORD PTR [rbp-0x18]
  404885:	mov    rax,QWORD PTR [rax+0x30]
  404889:	mov    edx,DWORD PTR [rbp-0x1c]
  40488c:	mov    DWORD PTR [rax+0x4],edx
  40488f:	nop
  404890:	pop    rbp
  404891:	ret    
  404892:	push   rbp
  404893:	mov    rbp,rsp
  404896:	sub    rsp,0x30
  40489a:	mov    QWORD PTR [rbp-0x18],rdi
  40489e:	mov    QWORD PTR [rbp-0x20],rsi
  4048a2:	mov    DWORD PTR [rbp-0x24],edx
  4048a5:	mov    rax,QWORD PTR [rbp-0x18]
  4048a9:	add    rax,0x58
  4048ad:	add    rax,0x10
  4048b1:	mov    QWORD PTR [rbp-0x8],rax
  4048b5:	mov    rax,QWORD PTR [rbp-0x18]
  4048b9:	mov    rax,QWORD PTR [rax+0x50]
  4048bd:	mov    rdx,QWORD PTR [rbp-0x18]
  4048c1:	mov    edx,DWORD PTR [rdx+0x28]
  4048c4:	mov    ecx,edx
  4048c6:	mov    rdx,QWORD PTR [rbp-0x20]
  4048ca:	lea    r9,[rcx+rdx*1]
  4048ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4048d2:	mov    rdi,QWORD PTR [rdx+0x40]
  4048d6:	mov    rsi,QWORD PTR [rbp-0x8]
  4048da:	mov    r8d,0x1
  4048e0:	mov    ecx,0x1
  4048e5:	mov    rdx,r9
  4048e8:	call   rax
  4048ea:	test   eax,eax
  4048ec:	je     4048f5 <flatcc_builder_default_alloc@@Base+0x248>
  4048ee:	mov    eax,0xffffffff
  4048f3:	jmp    40490b <flatcc_builder_default_alloc@@Base+0x25e>
  4048f5:	mov    edx,DWORD PTR [rbp-0x24]
  4048f8:	mov    rax,QWORD PTR [rbp-0x18]
  4048fc:	mov    esi,edx
  4048fe:	mov    rdi,rax
  404901:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  404906:	mov    eax,0x0
  40490b:	leave  
  40490c:	ret    
  40490d:	push   rbp
  40490e:	mov    rbp,rsp
  404911:	sub    rsp,0x20
  404915:	mov    QWORD PTR [rbp-0x18],rdi
  404919:	mov    DWORD PTR [rbp-0x1c],esi
  40491c:	mov    rax,QWORD PTR [rbp-0x18]
  404920:	mov    eax,DWORD PTR [rax+0x20]
  404923:	mov    eax,eax
  404925:	mov    QWORD PTR [rbp-0x8],rax
  404929:	mov    rax,QWORD PTR [rbp-0x18]
  40492d:	mov    edx,DWORD PTR [rax+0x20]
  404930:	mov    eax,DWORD PTR [rbp-0x1c]
  404933:	add    edx,eax
  404935:	mov    rax,QWORD PTR [rbp-0x18]
  404939:	mov    DWORD PTR [rax+0x20],edx
  40493c:	mov    rax,QWORD PTR [rbp-0x18]
  404940:	mov    edx,DWORD PTR [rax+0x20]
  404943:	mov    rax,QWORD PTR [rbp-0x18]
  404947:	mov    eax,DWORD PTR [rax+0x24]
  40494a:	cmp    edx,eax
  40494c:	jb     404979 <flatcc_builder_default_alloc@@Base+0x2cc>
  40494e:	mov    rax,QWORD PTR [rbp-0x18]
  404952:	mov    eax,DWORD PTR [rax+0x20]
  404955:	add    eax,0x1
  404958:	mov    ecx,eax
  40495a:	mov    rax,QWORD PTR [rbp-0x18]
  40495e:	mov    edx,0xfffffffc
  404963:	mov    rsi,rcx
  404966:	mov    rdi,rax
  404969:	call   404892 <flatcc_builder_default_alloc@@Base+0x1e5>
  40496e:	test   eax,eax
  404970:	je     404979 <flatcc_builder_default_alloc@@Base+0x2cc>
  404972:	mov    eax,0x0
  404977:	jmp    404988 <flatcc_builder_default_alloc@@Base+0x2db>
  404979:	mov    rax,QWORD PTR [rbp-0x18]
  40497d:	mov    rdx,QWORD PTR [rax+0x18]
  404981:	mov    rax,QWORD PTR [rbp-0x8]
  404985:	add    rax,rdx
  404988:	leave  
  404989:	ret    
  40498a:	push   rbp
  40498b:	mov    rbp,rsp
  40498e:	sub    rsp,0x10
  404992:	mov    QWORD PTR [rbp-0x8],rdi
  404996:	mov    DWORD PTR [rbp-0xc],esi
  404999:	mov    rax,QWORD PTR [rbp-0x8]
  40499d:	mov    eax,DWORD PTR [rax+0x20]
  4049a0:	sub    eax,DWORD PTR [rbp-0xc]
  4049a3:	mov    edx,eax
  4049a5:	mov    rax,QWORD PTR [rbp-0x8]
  4049a9:	mov    DWORD PTR [rax+0x20],edx
  4049ac:	mov    eax,DWORD PTR [rbp-0xc]
  4049af:	mov    rdx,QWORD PTR [rbp-0x8]
  4049b3:	mov    rcx,QWORD PTR [rdx+0x18]
  4049b7:	mov    rdx,QWORD PTR [rbp-0x8]
  4049bb:	mov    edx,DWORD PTR [rdx+0x20]
  4049be:	mov    edx,edx
  4049c0:	add    rcx,rdx
  4049c3:	mov    rdx,rax
  4049c6:	mov    esi,0x0
  4049cb:	mov    rdi,rcx
  4049ce:	call   4030c0 <memset@plt>
  4049d3:	nop
  4049d4:	leave  
  4049d5:	ret    
  4049d6:	push   rbp
  4049d7:	mov    rbp,rsp
  4049da:	sub    rsp,0x30
  4049de:	mov    QWORD PTR [rbp-0x18],rdi
  4049e2:	mov    QWORD PTR [rbp-0x20],rsi
  4049e6:	mov    DWORD PTR [rbp-0x24],edx
  4049e9:	mov    edx,DWORD PTR [rbp-0x24]
  4049ec:	mov    rax,QWORD PTR [rbp-0x18]
  4049f0:	mov    esi,edx
  4049f2:	mov    rdi,rax
  4049f5:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  4049fa:	mov    QWORD PTR [rbp-0x8],rax
  4049fe:	cmp    QWORD PTR [rbp-0x8],0x0
  404a03:	jne    404a0c <flatcc_builder_default_alloc@@Base+0x35f>
  404a05:	mov    eax,0x0
  404a0a:	jmp    404a26 <flatcc_builder_default_alloc@@Base+0x379>
  404a0c:	mov    edx,DWORD PTR [rbp-0x24]
  404a0f:	mov    rcx,QWORD PTR [rbp-0x20]
  404a13:	mov    rax,QWORD PTR [rbp-0x8]
  404a17:	mov    rsi,rcx
  404a1a:	mov    rdi,rax
  404a1d:	call   403100 <memcpy@plt>
  404a22:	mov    rax,QWORD PTR [rbp-0x8]
  404a26:	leave  
  404a27:	ret    
  404a28:	push   rbp
  404a29:	mov    rbp,rsp
  404a2c:	sub    rsp,0x30
  404a30:	mov    QWORD PTR [rbp-0x18],rdi
  404a34:	mov    DWORD PTR [rbp-0x1c],esi
  404a37:	mov    eax,ecx
  404a39:	mov    WORD PTR [rbp-0x20],dx
  404a3d:	mov    WORD PTR [rbp-0x24],ax
  404a41:	mov    rax,QWORD PTR [rbp-0x18]
  404a45:	mov    edx,DWORD PTR [rax+0x20]
  404a48:	movzx  eax,WORD PTR [rbp-0x20]
  404a4c:	add    eax,edx
  404a4e:	lea    edx,[rax-0x1]
  404a51:	movzx  eax,WORD PTR [rbp-0x20]
  404a55:	neg    eax
  404a57:	and    eax,edx
  404a59:	mov    DWORD PTR [rbp-0x4],eax
  404a5c:	mov    edx,DWORD PTR [rbp-0x4]
  404a5f:	mov    eax,DWORD PTR [rbp-0x1c]
  404a62:	add    edx,eax
  404a64:	mov    rax,QWORD PTR [rbp-0x18]
  404a68:	mov    DWORD PTR [rax+0x20],edx
  404a6b:	mov    rax,QWORD PTR [rbp-0x18]
  404a6f:	mov    edx,DWORD PTR [rax+0x20]
  404a72:	mov    rax,QWORD PTR [rbp-0x18]
  404a76:	mov    eax,DWORD PTR [rax+0x24]
  404a79:	cmp    edx,eax
  404a7b:	jb     404aa8 <flatcc_builder_default_alloc@@Base+0x3fb>
  404a7d:	mov    rax,QWORD PTR [rbp-0x18]
  404a81:	mov    eax,DWORD PTR [rax+0x20]
  404a84:	add    eax,0x1
  404a87:	mov    ecx,eax
  404a89:	mov    rax,QWORD PTR [rbp-0x18]
  404a8d:	mov    edx,0xfffc
  404a92:	mov    rsi,rcx
  404a95:	mov    rdi,rax
  404a98:	call   404892 <flatcc_builder_default_alloc@@Base+0x1e5>
  404a9d:	test   eax,eax
  404a9f:	je     404aa8 <flatcc_builder_default_alloc@@Base+0x3fb>
  404aa1:	mov    eax,0x0
  404aa6:	jmp    404aee <flatcc_builder_default_alloc@@Base+0x441>
  404aa8:	mov    rax,QWORD PTR [rbp-0x18]
  404aac:	mov    rax,QWORD PTR [rax+0x8]
  404ab0:	movzx  edx,WORD PTR [rbp-0x24]
  404ab4:	add    rdx,rdx
  404ab7:	add    rax,rdx
  404aba:	mov    edx,DWORD PTR [rbp-0x4]
  404abd:	add    edx,0x4
  404ac0:	mov    WORD PTR [rax],dx
  404ac3:	mov    rax,QWORD PTR [rbp-0x18]
  404ac7:	movzx  eax,WORD PTR [rax+0x10]
  404acb:	cmp    ax,WORD PTR [rbp-0x24]
  404acf:	ja     404ae0 <flatcc_builder_default_alloc@@Base+0x433>
  404ad1:	movzx  eax,WORD PTR [rbp-0x24]
  404ad5:	lea    edx,[rax+0x1]
  404ad8:	mov    rax,QWORD PTR [rbp-0x18]
  404adc:	mov    WORD PTR [rax+0x10],dx
  404ae0:	mov    rax,QWORD PTR [rbp-0x18]
  404ae4:	mov    rdx,QWORD PTR [rax+0x18]
  404ae8:	mov    eax,DWORD PTR [rbp-0x4]
  404aeb:	add    rax,rdx
  404aee:	leave  
  404aef:	ret    
  404af0:	push   rbp
  404af1:	mov    rbp,rsp
  404af4:	sub    rsp,0x20
  404af8:	mov    QWORD PTR [rbp-0x18],rdi
  404afc:	mov    eax,esi
  404afe:	mov    WORD PTR [rbp-0x1c],ax
  404b02:	mov    rax,QWORD PTR [rbp-0x18]
  404b06:	mov    eax,DWORD PTR [rax+0x20]
  404b09:	add    eax,0x3
  404b0c:	and    eax,0xfffffffc
  404b0f:	mov    DWORD PTR [rbp-0x4],eax
  404b12:	mov    eax,DWORD PTR [rbp-0x4]
  404b15:	lea    edx,[rax+0x4]
  404b18:	mov    rax,QWORD PTR [rbp-0x18]
  404b1c:	mov    DWORD PTR [rax+0x20],edx
  404b1f:	mov    rax,QWORD PTR [rbp-0x18]
  404b23:	mov    edx,DWORD PTR [rax+0x20]
  404b26:	mov    rax,QWORD PTR [rbp-0x18]
  404b2a:	mov    eax,DWORD PTR [rax+0x24]
  404b2d:	cmp    edx,eax
  404b2f:	jbe    404b59 <flatcc_builder_default_alloc@@Base+0x4ac>
  404b31:	mov    rax,QWORD PTR [rbp-0x18]
  404b35:	mov    eax,DWORD PTR [rax+0x20]
  404b38:	mov    ecx,eax
  404b3a:	mov    rax,QWORD PTR [rbp-0x18]
  404b3e:	mov    edx,0xfffc
  404b43:	mov    rsi,rcx
  404b46:	mov    rdi,rax
  404b49:	call   404892 <flatcc_builder_default_alloc@@Base+0x1e5>
  404b4e:	test   eax,eax
  404b50:	je     404b59 <flatcc_builder_default_alloc@@Base+0x4ac>
  404b52:	mov    eax,0x0
  404b57:	jmp    404bb7 <flatcc_builder_default_alloc@@Base+0x50a>
  404b59:	mov    rax,QWORD PTR [rbp-0x18]
  404b5d:	mov    rax,QWORD PTR [rax+0x8]
  404b61:	movzx  edx,WORD PTR [rbp-0x1c]
  404b65:	add    rdx,rdx
  404b68:	add    rax,rdx
  404b6b:	mov    edx,DWORD PTR [rbp-0x4]
  404b6e:	add    edx,0x4
  404b71:	mov    WORD PTR [rax],dx
  404b74:	mov    rax,QWORD PTR [rbp-0x18]
  404b78:	movzx  eax,WORD PTR [rax+0x10]
  404b7c:	cmp    ax,WORD PTR [rbp-0x1c]
  404b80:	ja     404b91 <flatcc_builder_default_alloc@@Base+0x4e4>
  404b82:	movzx  eax,WORD PTR [rbp-0x1c]
  404b86:	lea    edx,[rax+0x1]
  404b89:	mov    rax,QWORD PTR [rbp-0x18]
  404b8d:	mov    WORD PTR [rax+0x10],dx
  404b91:	mov    rax,QWORD PTR [rbp-0x18]
  404b95:	mov    rax,QWORD PTR [rax]
  404b98:	lea    rcx,[rax+0x2]
  404b9c:	mov    rdx,QWORD PTR [rbp-0x18]
  404ba0:	mov    QWORD PTR [rdx],rcx
  404ba3:	mov    edx,DWORD PTR [rbp-0x4]
  404ba6:	mov    WORD PTR [rax],dx
  404ba9:	mov    rax,QWORD PTR [rbp-0x18]
  404bad:	mov    rdx,QWORD PTR [rax+0x18]
  404bb1:	mov    eax,DWORD PTR [rbp-0x4]
  404bb4:	add    rax,rdx
  404bb7:	leave  
  404bb8:	ret    
  404bb9:	push   rbp
  404bba:	mov    rbp,rsp
  404bbd:	sub    rsp,0x30
  404bc1:	mov    QWORD PTR [rbp-0x18],rdi
  404bc5:	mov    DWORD PTR [rbp-0x1c],esi
  404bc8:	mov    QWORD PTR [rbp-0x28],rdx
  404bcc:	mov    QWORD PTR [rbp-0x30],rcx
  404bd0:	mov    DWORD PTR [rbp-0x20],r8d
  404bd4:	mov    rax,QWORD PTR [rbp-0x18]
  404bd8:	lea    rdx,[rax+0x58]
  404bdc:	mov    eax,DWORD PTR [rbp-0x1c]
  404bdf:	cdqe   
  404be1:	shl    rax,0x4
  404be5:	add    rax,rdx
  404be8:	mov    QWORD PTR [rbp-0x8],rax
  404bec:	mov    rdx,QWORD PTR [rbp-0x28]
  404bf0:	mov    rax,QWORD PTR [rbp-0x30]
  404bf4:	add    rdx,rax
  404bf7:	mov    rax,QWORD PTR [rbp-0x8]
  404bfb:	mov    rax,QWORD PTR [rax+0x8]
  404bff:	cmp    rdx,rax
  404c02:	jbe    404c57 <flatcc_builder_default_alloc@@Base+0x5aa>
  404c04:	mov    rax,QWORD PTR [rbp-0x18]
  404c08:	mov    rax,QWORD PTR [rax+0x50]
  404c0c:	mov    rcx,QWORD PTR [rbp-0x28]
  404c10:	mov    rdx,QWORD PTR [rbp-0x30]
  404c14:	lea    r9,[rcx+rdx*1]
  404c18:	mov    rdx,QWORD PTR [rbp-0x18]
  404c1c:	mov    rdi,QWORD PTR [rdx+0x40]
  404c20:	mov    ecx,DWORD PTR [rbp-0x1c]
  404c23:	mov    edx,DWORD PTR [rbp-0x20]
  404c26:	mov    rsi,QWORD PTR [rbp-0x8]
  404c2a:	mov    r8d,ecx
  404c2d:	mov    ecx,edx
  404c2f:	mov    rdx,r9
  404c32:	call   rax
  404c34:	test   eax,eax
  404c36:	je     404c57 <flatcc_builder_default_alloc@@Base+0x5aa>
  404c38:	lea    rcx,[rip+0x7059]        # 40bc98 <flatcc_builder_padding_base@@Base+0x658>
  404c3f:	mov    edx,0x134
  404c44:	lea    rsi,[rip+0x6bf5]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  404c4b:	lea    rdi,[rip+0x6c4e]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  404c52:	call   4030b0 <__assert_fail@plt>
  404c57:	mov    rax,QWORD PTR [rbp-0x8]
  404c5b:	mov    rax,QWORD PTR [rax]
  404c5e:	mov    rdx,rax
  404c61:	mov    rax,QWORD PTR [rbp-0x28]
  404c65:	add    rax,rdx
  404c68:	leave  
  404c69:	ret    
  404c6a:	push   rbp
  404c6b:	mov    rbp,rsp
  404c6e:	sub    rsp,0x20
  404c72:	mov    QWORD PTR [rbp-0x18],rdi
  404c76:	mov    DWORD PTR [rbp-0x1c],esi
  404c79:	mov    rax,QWORD PTR [rbp-0x18]
  404c7d:	mov    rax,QWORD PTR [rax+0x30]
  404c81:	mov    edx,DWORD PTR [rax+0x10]
  404c84:	mov    rax,QWORD PTR [rbp-0x18]
  404c88:	mov    rax,QWORD PTR [rax+0x30]
  404c8c:	movzx  eax,WORD PTR [rax+0x1c]
  404c90:	movzx  eax,ax
  404c93:	add    eax,eax
  404c95:	add    eax,edx
  404c97:	mov    DWORD PTR [rbp-0x8],eax
  404c9a:	mov    eax,DWORD PTR [rbp-0x1c]
  404c9d:	add    eax,0x2
  404ca0:	cdqe   
  404ca2:	add    eax,eax
  404ca4:	mov    DWORD PTR [rbp-0x4],eax
  404ca7:	mov    ecx,DWORD PTR [rbp-0x4]
  404caa:	mov    edx,DWORD PTR [rbp-0x8]
  404cad:	mov    rax,QWORD PTR [rbp-0x18]
  404cb1:	mov    r8d,0x1
  404cb7:	mov    esi,0x0
  404cbc:	mov    rdi,rax
  404cbf:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  404cc4:	mov    rdx,rax
  404cc7:	mov    rax,QWORD PTR [rbp-0x18]
  404ccb:	mov    QWORD PTR [rax+0x8],rdx
  404ccf:	mov    rax,QWORD PTR [rbp-0x18]
  404cd3:	mov    rax,QWORD PTR [rax+0x8]
  404cd7:	test   rax,rax
  404cda:	jne    404ce3 <flatcc_builder_default_alloc@@Base+0x636>
  404cdc:	mov    eax,0xffffffff
  404ce1:	jmp    404d51 <flatcc_builder_default_alloc@@Base+0x6a4>
  404ce3:	mov    rax,QWORD PTR [rbp-0x18]
  404ce7:	mov    rax,QWORD PTR [rax+0x8]
  404ceb:	lea    rdx,[rax+0x4]
  404cef:	mov    rax,QWORD PTR [rbp-0x18]
  404cf3:	mov    QWORD PTR [rax+0x8],rdx
  404cf7:	mov    rax,QWORD PTR [rbp-0x18]
  404cfb:	mov    rax,QWORD PTR [rax+0x30]
  404cff:	mov    eax,DWORD PTR [rax+0x14]
  404d02:	mov    DWORD PTR [rbp-0x8],eax
  404d05:	mov    eax,DWORD PTR [rbp-0x1c]
  404d08:	cdqe   
  404d0a:	add    eax,eax
  404d0c:	add    eax,0x1
  404d0f:	mov    DWORD PTR [rbp-0x4],eax
  404d12:	mov    ecx,DWORD PTR [rbp-0x4]
  404d15:	mov    edx,DWORD PTR [rbp-0x8]
  404d18:	mov    rax,QWORD PTR [rbp-0x18]
  404d1c:	mov    r8d,0x0
  404d22:	mov    esi,0x3
  404d27:	mov    rdi,rax
  404d2a:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  404d2f:	mov    rdx,rax
  404d32:	mov    rax,QWORD PTR [rbp-0x18]
  404d36:	mov    QWORD PTR [rax],rdx
  404d39:	mov    rax,QWORD PTR [rbp-0x18]
  404d3d:	mov    rax,QWORD PTR [rax]
  404d40:	test   rax,rax
  404d43:	jne    404d4c <flatcc_builder_default_alloc@@Base+0x69f>
  404d45:	mov    eax,0xffffffff
  404d4a:	jmp    404d51 <flatcc_builder_default_alloc@@Base+0x6a4>
  404d4c:	mov    eax,0x0
  404d51:	leave  
  404d52:	ret    
  404d53:	push   rbp
  404d54:	mov    rbp,rsp
  404d57:	sub    rsp,0x30
  404d5b:	mov    QWORD PTR [rbp-0x28],rdi
  404d5f:	mov    rax,QWORD PTR [rbp-0x28]
  404d63:	add    rax,0x58
  404d67:	add    rax,0x50
  404d6b:	mov    QWORD PTR [rbp-0x8],rax
  404d6f:	mov    rax,QWORD PTR [rbp-0x28]
  404d73:	mov    eax,DWORD PTR [rax+0xe4]
  404d79:	test   eax,eax
  404d7b:	je     404d9c <flatcc_builder_default_alloc@@Base+0x6ef>
  404d7d:	lea    rcx,[rip+0x6f04]        # 40bc88 <flatcc_builder_padding_base@@Base+0x648>
  404d84:	mov    edx,0x156
  404d89:	lea    rsi,[rip+0x6ab0]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  404d90:	lea    rdi,[rip+0x6b0b]        # 40b8a2 <flatcc_builder_padding_base@@Base+0x262>
  404d97:	call   4030b0 <__assert_fail@plt>
  404d9c:	mov    rax,QWORD PTR [rbp-0x28]
  404da0:	mov    eax,DWORD PTR [rax+0xe4]
  404da6:	mov    edx,eax
  404da8:	mov    rax,QWORD PTR [rbp-0x28]
  404dac:	mov    r8d,0x0
  404db2:	mov    ecx,0x10
  404db7:	mov    esi,0x6
  404dbc:	mov    rdi,rax
  404dbf:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  404dc4:	test   rax,rax
  404dc7:	jne    404dd3 <flatcc_builder_default_alloc@@Base+0x726>
  404dc9:	mov    eax,0xffffffff
  404dce:	jmp    404e75 <flatcc_builder_default_alloc@@Base+0x7c8>
  404dd3:	mov    rax,QWORD PTR [rbp-0x28]
  404dd7:	mov    DWORD PTR [rax+0xe4],0x10
  404de1:	mov    QWORD PTR [rbp-0x18],0x100
  404de9:	mov    rax,QWORD PTR [rbp-0x28]
  404ded:	mov    rax,QWORD PTR [rax+0x50]
  404df1:	mov    rdx,QWORD PTR [rbp-0x28]
  404df5:	mov    rdi,QWORD PTR [rdx+0x40]
  404df9:	mov    rdx,QWORD PTR [rbp-0x18]
  404dfd:	mov    rsi,QWORD PTR [rbp-0x8]
  404e01:	mov    r8d,0x5
  404e07:	mov    ecx,0x1
  404e0c:	call   rax
  404e0e:	test   eax,eax
  404e10:	je     404e1d <flatcc_builder_default_alloc@@Base+0x770>
  404e12:	mov    eax,0xffffffff
  404e17:	jmp    404e75 <flatcc_builder_default_alloc@@Base+0x7c8>
  404e19:	shl    QWORD PTR [rbp-0x18],1
  404e1d:	mov    rax,QWORD PTR [rbp-0x18]
  404e21:	lea    rdx,[rax+rax*1]
  404e25:	mov    rax,QWORD PTR [rbp-0x8]
  404e29:	mov    rax,QWORD PTR [rax+0x8]
  404e2d:	cmp    rdx,rax
  404e30:	jbe    404e19 <flatcc_builder_default_alloc@@Base+0x76c>
  404e32:	mov    rax,QWORD PTR [rbp-0x18]
  404e36:	shr    rax,0x2
  404e3a:	mov    QWORD PTR [rbp-0x18],rax
  404e3e:	mov    QWORD PTR [rbp-0x10],0x0
  404e46:	jmp    404e4d <flatcc_builder_default_alloc@@Base+0x7a0>
  404e48:	add    QWORD PTR [rbp-0x10],0x1
  404e4d:	mov    rax,QWORD PTR [rbp-0x10]
  404e51:	mov    edx,0x1
  404e56:	shlx   rax,rdx,rax
  404e5b:	cmp    rax,QWORD PTR [rbp-0x18]
  404e5f:	jb     404e48 <flatcc_builder_default_alloc@@Base+0x79b>
  404e61:	mov    rax,QWORD PTR [rbp-0x28]
  404e65:	mov    rdx,QWORD PTR [rbp-0x10]
  404e69:	mov    QWORD PTR [rax+0xd8],rdx
  404e70:	mov    eax,0x0
  404e75:	leave  
  404e76:	ret    
  404e77:	push   rbp
  404e78:	mov    rbp,rsp
  404e7b:	sub    rsp,0x20
  404e7f:	mov    QWORD PTR [rbp-0x18],rdi
  404e83:	mov    DWORD PTR [rbp-0x1c],esi
  404e86:	mov    rax,QWORD PTR [rbp-0x18]
  404e8a:	mov    rax,QWORD PTR [rax+0xd8]
  404e91:	test   rax,rax
  404e94:	jne    404ead <flatcc_builder_default_alloc@@Base+0x800>
  404e96:	mov    rax,QWORD PTR [rbp-0x18]
  404e9a:	mov    rdi,rax
  404e9d:	call   404d53 <flatcc_builder_default_alloc@@Base+0x6a6>
  404ea2:	test   eax,eax
  404ea4:	je     404ead <flatcc_builder_default_alloc@@Base+0x800>
  404ea6:	mov    eax,0x0
  404eab:	jmp    404ee9 <flatcc_builder_default_alloc@@Base+0x83c>
  404ead:	mov    rax,QWORD PTR [rbp-0x18]
  404eb1:	mov    rax,QWORD PTR [rax+0xa8]
  404eb8:	mov    QWORD PTR [rbp-0x8],rax
  404ebc:	mov    rax,QWORD PTR [rbp-0x18]
  404ec0:	mov    rax,QWORD PTR [rax+0xd8]
  404ec7:	mov    edx,0x20
  404ecc:	sub    edx,eax
  404ece:	mov    eax,edx
  404ed0:	mov    edx,DWORD PTR [rbp-0x1c]
  404ed3:	shrx   eax,edx,eax
  404ed8:	mov    eax,eax
  404eda:	lea    rdx,[rax*4+0x0]
  404ee2:	mov    rax,QWORD PTR [rbp-0x8]
  404ee6:	add    rax,rdx
  404ee9:	leave  
  404eea:	ret    

0000000000404eeb <flatcc_builder_flush_vtable_cache@@Base>:
  404eeb:	push   rbp
  404eec:	mov    rbp,rsp
  404eef:	sub    rsp,0x20
  404ef3:	mov    QWORD PTR [rbp-0x18],rdi
  404ef7:	mov    rax,QWORD PTR [rbp-0x18]
  404efb:	add    rax,0x58
  404eff:	add    rax,0x50
  404f03:	mov    QWORD PTR [rbp-0x8],rax
  404f07:	mov    rax,QWORD PTR [rbp-0x18]
  404f0b:	mov    rax,QWORD PTR [rax+0xd8]
  404f12:	test   rax,rax
  404f15:	je     404f51 <flatcc_builder_flush_vtable_cache@@Base+0x66>
  404f17:	mov    rax,QWORD PTR [rbp-0x8]
  404f1b:	mov    rdx,QWORD PTR [rax+0x8]
  404f1f:	mov    rax,QWORD PTR [rbp-0x8]
  404f23:	mov    rax,QWORD PTR [rax]
  404f26:	mov    esi,0x0
  404f2b:	mov    rdi,rax
  404f2e:	call   4030c0 <memset@plt>
  404f33:	mov    rax,QWORD PTR [rbp-0x18]
  404f37:	mov    DWORD PTR [rax+0xe4],0x10
  404f41:	mov    rax,QWORD PTR [rbp-0x18]
  404f45:	mov    DWORD PTR [rax+0xe0],0x0
  404f4f:	jmp    404f52 <flatcc_builder_flush_vtable_cache@@Base+0x67>
  404f51:	nop
  404f52:	leave  
  404f53:	ret    

0000000000404f54 <flatcc_builder_custom_init@@Base>:
  404f54:	push   rbp
  404f55:	mov    rbp,rsp
  404f58:	sub    rsp,0x30
  404f5c:	mov    QWORD PTR [rbp-0x8],rdi
  404f60:	mov    QWORD PTR [rbp-0x10],rsi
  404f64:	mov    QWORD PTR [rbp-0x18],rdx
  404f68:	mov    QWORD PTR [rbp-0x20],rcx
  404f6c:	mov    QWORD PTR [rbp-0x28],r8
  404f70:	mov    rax,QWORD PTR [rbp-0x8]
  404f74:	mov    edx,0x188
  404f79:	mov    esi,0x0
  404f7e:	mov    rdi,rax
  404f81:	call   4030c0 <memset@plt>
  404f86:	cmp    QWORD PTR [rbp-0x10],0x0
  404f8b:	jne    404fb4 <flatcc_builder_custom_init@@Base+0x60>
  404f8d:	mov    rax,QWORD PTR [rbp-0x8]
  404f91:	mov    DWORD PTR [rax+0x128],0x1
  404f9b:	mov    rax,0x40a387
  404fa2:	mov    QWORD PTR [rbp-0x10],rax
  404fa6:	mov    rax,QWORD PTR [rbp-0x8]
  404faa:	add    rax,0x130
  404fb0:	mov    QWORD PTR [rbp-0x18],rax
  404fb4:	cmp    QWORD PTR [rbp-0x20],0x0
  404fb9:	jne    404fc6 <flatcc_builder_custom_init@@Base+0x72>
  404fbb:	mov    rax,0x4046ad
  404fc2:	mov    QWORD PTR [rbp-0x20],rax
  404fc6:	mov    rax,QWORD PTR [rbp-0x8]
  404fca:	mov    rdx,QWORD PTR [rbp-0x28]
  404fce:	mov    QWORD PTR [rax+0x40],rdx
  404fd2:	mov    rax,QWORD PTR [rbp-0x8]
  404fd6:	mov    rdx,QWORD PTR [rbp-0x20]
  404fda:	mov    QWORD PTR [rax+0x50],rdx
  404fde:	mov    rax,QWORD PTR [rbp-0x8]
  404fe2:	mov    rdx,QWORD PTR [rbp-0x18]
  404fe6:	mov    QWORD PTR [rax+0x38],rdx
  404fea:	mov    rax,QWORD PTR [rbp-0x8]
  404fee:	mov    rdx,QWORD PTR [rbp-0x10]
  404ff2:	mov    QWORD PTR [rax+0x48],rdx
  404ff6:	mov    eax,0x0
  404ffb:	leave  
  404ffc:	ret    

0000000000404ffd <flatcc_builder_init@@Base>:
  404ffd:	push   rbp
  404ffe:	mov    rbp,rsp
  405001:	sub    rsp,0x10
  405005:	mov    QWORD PTR [rbp-0x8],rdi
  405009:	mov    rax,QWORD PTR [rbp-0x8]
  40500d:	mov    r8d,0x0
  405013:	mov    ecx,0x0
  405018:	mov    edx,0x0
  40501d:	mov    esi,0x0
  405022:	mov    rdi,rax
  405025:	call   404f54 <flatcc_builder_custom_init@@Base>
  40502a:	leave  
  40502b:	ret    

000000000040502c <flatcc_builder_custom_reset@@Base>:
  40502c:	push   rbp
  40502d:	mov    rbp,rsp
  405030:	sub    rsp,0x20
  405034:	mov    QWORD PTR [rbp-0x18],rdi
  405038:	mov    DWORD PTR [rbp-0x1c],esi
  40503b:	mov    DWORD PTR [rbp-0x20],edx
  40503e:	mov    DWORD PTR [rbp-0xc],0x0
  405045:	jmp    4050fc <flatcc_builder_custom_reset@@Base+0xd0>
  40504a:	mov    rax,QWORD PTR [rbp-0x18]
  40504e:	lea    rdx,[rax+0x58]
  405052:	mov    eax,DWORD PTR [rbp-0xc]
  405055:	cdqe   
  405057:	shl    rax,0x4
  40505b:	add    rax,rdx
  40505e:	mov    QWORD PTR [rbp-0x8],rax
  405062:	mov    rax,QWORD PTR [rbp-0x8]
  405066:	mov    rax,QWORD PTR [rax]
  405069:	test   rax,rax
  40506c:	je     4050cc <flatcc_builder_custom_reset@@Base+0xa0>
  40506e:	cmp    DWORD PTR [rbp-0xc],0x5
  405072:	je     4050ae <flatcc_builder_custom_reset@@Base+0x82>
  405074:	cmp    DWORD PTR [rbp-0x20],0x0
  405078:	je     4050ae <flatcc_builder_custom_reset@@Base+0x82>
  40507a:	mov    rax,QWORD PTR [rbp-0x18]
  40507e:	mov    rax,QWORD PTR [rax+0x50]
  405082:	mov    rdx,QWORD PTR [rbp-0x18]
  405086:	mov    rdi,QWORD PTR [rdx+0x40]
  40508a:	mov    edx,DWORD PTR [rbp-0xc]
  40508d:	mov    rsi,QWORD PTR [rbp-0x8]
  405091:	mov    r8d,edx
  405094:	mov    ecx,0x1
  405099:	mov    edx,0x1
  40509e:	call   rax
  4050a0:	test   eax,eax
  4050a2:	je     4050ae <flatcc_builder_custom_reset@@Base+0x82>
  4050a4:	mov    eax,0xffffffff
  4050a9:	jmp    40523b <flatcc_builder_custom_reset@@Base+0x20f>
  4050ae:	mov    rax,QWORD PTR [rbp-0x8]
  4050b2:	mov    rdx,QWORD PTR [rax+0x8]
  4050b6:	mov    rax,QWORD PTR [rbp-0x8]
  4050ba:	mov    rax,QWORD PTR [rax]
  4050bd:	mov    esi,0x0
  4050c2:	mov    rdi,rax
  4050c5:	call   4030c0 <memset@plt>
  4050ca:	jmp    4050f8 <flatcc_builder_custom_reset@@Base+0xcc>
  4050cc:	mov    rax,QWORD PTR [rbp-0x8]
  4050d0:	mov    rax,QWORD PTR [rax+0x8]
  4050d4:	test   rax,rax
  4050d7:	je     4050f8 <flatcc_builder_custom_reset@@Base+0xcc>
  4050d9:	lea    rcx,[rip+0x6bd0]        # 40bcb0 <flatcc_builder_padding_base@@Base+0x670>
  4050e0:	mov    edx,0x1b2
  4050e5:	lea    rsi,[rip+0x6754]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4050ec:	lea    rdi,[rip+0x67be]        # 40b8b1 <flatcc_builder_padding_base@@Base+0x271>
  4050f3:	call   4030b0 <__assert_fail@plt>
  4050f8:	add    DWORD PTR [rbp-0xc],0x1
  4050fc:	cmp    DWORD PTR [rbp-0xc],0x7
  405100:	jle    40504a <flatcc_builder_custom_reset@@Base+0x1e>
  405106:	mov    rax,QWORD PTR [rbp-0x18]
  40510a:	mov    DWORD PTR [rax+0xe0],0x0
  405114:	mov    rax,QWORD PTR [rbp-0x18]
  405118:	mov    eax,DWORD PTR [rax+0xe4]
  40511e:	test   eax,eax
  405120:	je     405130 <flatcc_builder_custom_reset@@Base+0x104>
  405122:	mov    rax,QWORD PTR [rbp-0x18]
  405126:	mov    DWORD PTR [rax+0xe4],0x10
  405130:	mov    rax,QWORD PTR [rbp-0x18]
  405134:	mov    WORD PTR [rax+0xe8],0x0
  40513d:	mov    rax,QWORD PTR [rbp-0x18]
  405141:	mov    DWORD PTR [rax+0xf0],0x0
  40514b:	mov    rax,QWORD PTR [rbp-0x18]
  40514f:	mov    DWORD PTR [rax+0xf4],0x0
  405159:	mov    rax,QWORD PTR [rbp-0x18]
  40515d:	mov    DWORD PTR [rax+0x104],0x0
  405167:	mov    rax,QWORD PTR [rbp-0x18]
  40516b:	mov    DWORD PTR [rax+0x108],0x0
  405175:	mov    rax,QWORD PTR [rbp-0x18]
  405179:	mov    DWORD PTR [rax+0x20],0x0
  405180:	mov    rax,QWORD PTR [rbp-0x18]
  405184:	mov    DWORD PTR [rax+0x24],0x0
  40518b:	mov    rax,QWORD PTR [rbp-0x18]
  40518f:	mov    DWORD PTR [rax+0xfc],0x0
  405199:	mov    rax,QWORD PTR [rbp-0x18]
  40519d:	mov    DWORD PTR [rax+0x100],0x0
  4051a7:	mov    rax,QWORD PTR [rbp-0x18]
  4051ab:	mov    rdx,QWORD PTR [rax+0x68]
  4051af:	mov    rax,QWORD PTR [rbp-0x18]
  4051b3:	mov    QWORD PTR [rax+0x18],rdx
  4051b7:	mov    rax,QWORD PTR [rbp-0x18]
  4051bb:	mov    rdx,QWORD PTR [rax+0x88]
  4051c2:	mov    rax,QWORD PTR [rbp-0x18]
  4051c6:	mov    QWORD PTR [rax],rdx
  4051c9:	mov    rax,QWORD PTR [rbp-0x18]
  4051cd:	mov    rdx,QWORD PTR [rax+0x58]
  4051d1:	mov    rax,QWORD PTR [rbp-0x18]
  4051d5:	mov    QWORD PTR [rax+0x8],rdx
  4051d9:	mov    rax,QWORD PTR [rbp-0x18]
  4051dd:	mov    QWORD PTR [rax+0x30],0x0
  4051e5:	cmp    DWORD PTR [rbp-0x1c],0x0
  4051e9:	je     405216 <flatcc_builder_custom_reset@@Base+0x1ea>
  4051eb:	mov    rax,QWORD PTR [rbp-0x18]
  4051ef:	mov    QWORD PTR [rax+0x118],0x0
  4051fa:	mov    rax,QWORD PTR [rbp-0x18]
  4051fe:	mov    DWORD PTR [rax+0x120],0x0
  405208:	mov    rax,QWORD PTR [rbp-0x18]
  40520c:	mov    DWORD PTR [rax+0x124],0x0
  405216:	mov    rax,QWORD PTR [rbp-0x18]
  40521a:	mov    eax,DWORD PTR [rax+0x128]
  405220:	test   eax,eax
  405222:	je     405236 <flatcc_builder_custom_reset@@Base+0x20a>
  405224:	mov    rax,QWORD PTR [rbp-0x18]
  405228:	add    rax,0x130
  40522e:	mov    rdi,rax
  405231:	call   40a16c <flatcc_emitter_reset@@Base>
  405236:	mov    eax,0x0
  40523b:	leave  
  40523c:	ret    

000000000040523d <flatcc_builder_reset@@Base>:
  40523d:	push   rbp
  40523e:	mov    rbp,rsp
  405241:	sub    rsp,0x10
  405245:	mov    QWORD PTR [rbp-0x8],rdi
  405249:	mov    rax,QWORD PTR [rbp-0x8]
  40524d:	mov    edx,0x0
  405252:	mov    esi,0x0
  405257:	mov    rdi,rax
  40525a:	call   40502c <flatcc_builder_custom_reset@@Base>
  40525f:	leave  
  405260:	ret    

0000000000405261 <flatcc_builder_clear@@Base>:
  405261:	push   rbp
  405262:	mov    rbp,rsp
  405265:	sub    rsp,0x20
  405269:	mov    QWORD PTR [rbp-0x18],rdi
  40526d:	mov    DWORD PTR [rbp-0xc],0x0
  405274:	jmp    4052b8 <flatcc_builder_clear@@Base+0x57>
  405276:	mov    rax,QWORD PTR [rbp-0x18]
  40527a:	lea    rdx,[rax+0x58]
  40527e:	mov    eax,DWORD PTR [rbp-0xc]
  405281:	cdqe   
  405283:	shl    rax,0x4
  405287:	add    rax,rdx
  40528a:	mov    QWORD PTR [rbp-0x8],rax
  40528e:	mov    rax,QWORD PTR [rbp-0x18]
  405292:	mov    rax,QWORD PTR [rax+0x50]
  405296:	mov    rdx,QWORD PTR [rbp-0x18]
  40529a:	mov    rdi,QWORD PTR [rdx+0x40]
  40529e:	mov    edx,DWORD PTR [rbp-0xc]
  4052a1:	mov    rsi,QWORD PTR [rbp-0x8]
  4052a5:	mov    r8d,edx
  4052a8:	mov    ecx,0x0
  4052ad:	mov    edx,0x0
  4052b2:	call   rax
  4052b4:	add    DWORD PTR [rbp-0xc],0x1
  4052b8:	cmp    DWORD PTR [rbp-0xc],0x7
  4052bc:	jle    405276 <flatcc_builder_clear@@Base+0x15>
  4052be:	mov    rax,QWORD PTR [rbp-0x18]
  4052c2:	mov    eax,DWORD PTR [rax+0x128]
  4052c8:	test   eax,eax
  4052ca:	je     4052de <flatcc_builder_clear@@Base+0x7d>
  4052cc:	mov    rax,QWORD PTR [rbp-0x18]
  4052d0:	add    rax,0x130
  4052d6:	mov    rdi,rax
  4052d9:	call   40a2f8 <flatcc_emitter_clear@@Base>
  4052de:	mov    rax,QWORD PTR [rbp-0x18]
  4052e2:	mov    edx,0x188
  4052e7:	mov    esi,0x0
  4052ec:	mov    rdi,rax
  4052ef:	call   4030c0 <memset@plt>
  4052f4:	nop
  4052f5:	leave  
  4052f6:	ret    
  4052f7:	push   rbp
  4052f8:	mov    rbp,rsp
  4052fb:	mov    QWORD PTR [rbp-0x8],rdi
  4052ff:	mov    eax,esi
  405301:	mov    WORD PTR [rbp-0xc],ax
  405305:	mov    rax,QWORD PTR [rbp-0x8]
  405309:	movzx  eax,WORD PTR [rax+0xe8]
  405310:	cmp    ax,WORD PTR [rbp-0xc]
  405314:	jae    405325 <flatcc_builder_clear@@Base+0xc4>
  405316:	mov    rax,QWORD PTR [rbp-0x8]
  40531a:	movzx  edx,WORD PTR [rbp-0xc]
  40531e:	mov    WORD PTR [rax+0xe8],dx
  405325:	nop
  405326:	pop    rbp
  405327:	ret    
  405328:	push   rbp
  405329:	mov    rbp,rsp
  40532c:	mov    QWORD PTR [rbp-0x8],rdi
  405330:	mov    eax,esi
  405332:	mov    WORD PTR [rbp-0xc],ax
  405336:	mov    rax,QWORD PTR [rbp-0x8]
  40533a:	movzx  eax,WORD PTR [rax]
  40533d:	cmp    ax,WORD PTR [rbp-0xc]
  405341:	jae    40534e <flatcc_builder_clear@@Base+0xed>
  405343:	mov    rax,QWORD PTR [rbp-0x8]
  405347:	movzx  edx,WORD PTR [rbp-0xc]
  40534b:	mov    WORD PTR [rax],dx
  40534e:	nop
  40534f:	pop    rbp
  405350:	ret    

0000000000405351 <flatcc_builder_enter_user_frame_ptr@@Base>:
  405351:	push   rbp
  405352:	mov    rbp,rsp
  405355:	sub    rsp,0x20
  405359:	mov    QWORD PTR [rbp-0x18],rdi
  40535d:	mov    QWORD PTR [rbp-0x20],rsi
  405361:	mov    rax,QWORD PTR [rbp-0x20]
  405365:	add    rax,0x7
  405369:	and    rax,0xfffffffffffffff8
  40536d:	add    rax,0x8
  405371:	mov    QWORD PTR [rbp-0x20],rax
  405375:	mov    rax,QWORD PTR [rbp-0x18]
  405379:	mov    rdx,QWORD PTR [rax+0x180]
  405380:	mov    rcx,QWORD PTR [rbp-0x20]
  405384:	mov    rax,QWORD PTR [rbp-0x18]
  405388:	mov    r8d,0x0
  40538e:	mov    esi,0x7
  405393:	mov    rdi,rax
  405396:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  40539b:	mov    QWORD PTR [rbp-0x8],rax
  40539f:	cmp    QWORD PTR [rbp-0x8],0x0
  4053a4:	jne    4053ad <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  4053a6:	mov    eax,0x0
  4053ab:	jmp    405417 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  4053ad:	mov    rdx,QWORD PTR [rbp-0x20]
  4053b1:	mov    rax,QWORD PTR [rbp-0x8]
  4053b5:	mov    esi,0x0
  4053ba:	mov    rdi,rax
  4053bd:	call   4030c0 <memset@plt>
  4053c2:	mov    rax,QWORD PTR [rbp-0x8]
  4053c6:	lea    rdx,[rax+0x8]
  4053ca:	mov    QWORD PTR [rbp-0x8],rdx
  4053ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4053d2:	mov    rdx,QWORD PTR [rdx+0x178]
  4053d9:	mov    QWORD PTR [rax],rdx
  4053dc:	mov    rax,QWORD PTR [rbp-0x18]
  4053e0:	mov    rax,QWORD PTR [rax+0x180]
  4053e7:	lea    rdx,[rax+0x8]
  4053eb:	mov    rax,QWORD PTR [rbp-0x18]
  4053ef:	mov    QWORD PTR [rax+0x178],rdx
  4053f6:	mov    rax,QWORD PTR [rbp-0x18]
  4053fa:	mov    rdx,QWORD PTR [rax+0x180]
  405401:	mov    rax,QWORD PTR [rbp-0x20]
  405405:	add    rdx,rax
  405408:	mov    rax,QWORD PTR [rbp-0x18]
  40540c:	mov    QWORD PTR [rax+0x180],rdx
  405413:	mov    rax,QWORD PTR [rbp-0x8]
  405417:	leave  
  405418:	ret    

0000000000405419 <flatcc_builder_enter_user_frame@@Base>:
  405419:	push   rbp
  40541a:	mov    rbp,rsp
  40541d:	sub    rsp,0x20
  405421:	mov    QWORD PTR [rbp-0x18],rdi
  405425:	mov    QWORD PTR [rbp-0x20],rsi
  405429:	mov    rax,QWORD PTR [rbp-0x20]
  40542d:	add    rax,0x7
  405431:	and    rax,0xfffffffffffffff8
  405435:	add    rax,0x8
  405439:	mov    QWORD PTR [rbp-0x20],rax
  40543d:	mov    rax,QWORD PTR [rbp-0x18]
  405441:	mov    rdx,QWORD PTR [rax+0x180]
  405448:	mov    rcx,QWORD PTR [rbp-0x20]
  40544c:	mov    rax,QWORD PTR [rbp-0x18]
  405450:	mov    r8d,0x0
  405456:	mov    esi,0x7
  40545b:	mov    rdi,rax
  40545e:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  405463:	mov    QWORD PTR [rbp-0x8],rax
  405467:	cmp    QWORD PTR [rbp-0x8],0x0
  40546c:	jne    405475 <flatcc_builder_enter_user_frame@@Base+0x5c>
  40546e:	mov    eax,0x0
  405473:	jmp    4054e6 <flatcc_builder_enter_user_frame@@Base+0xcd>
  405475:	mov    rdx,QWORD PTR [rbp-0x20]
  405479:	mov    rax,QWORD PTR [rbp-0x8]
  40547d:	mov    esi,0x0
  405482:	mov    rdi,rax
  405485:	call   4030c0 <memset@plt>
  40548a:	mov    rax,QWORD PTR [rbp-0x8]
  40548e:	lea    rdx,[rax+0x8]
  405492:	mov    QWORD PTR [rbp-0x8],rdx
  405496:	mov    rdx,QWORD PTR [rbp-0x18]
  40549a:	mov    rdx,QWORD PTR [rdx+0x178]
  4054a1:	mov    QWORD PTR [rax],rdx
  4054a4:	mov    rax,QWORD PTR [rbp-0x18]
  4054a8:	mov    rax,QWORD PTR [rax+0x180]
  4054af:	lea    rdx,[rax+0x8]
  4054b3:	mov    rax,QWORD PTR [rbp-0x18]
  4054b7:	mov    QWORD PTR [rax+0x178],rdx
  4054be:	mov    rax,QWORD PTR [rbp-0x18]
  4054c2:	mov    rdx,QWORD PTR [rax+0x180]
  4054c9:	mov    rax,QWORD PTR [rbp-0x20]
  4054cd:	add    rdx,rax
  4054d0:	mov    rax,QWORD PTR [rbp-0x18]
  4054d4:	mov    QWORD PTR [rax+0x180],rdx
  4054db:	mov    rax,QWORD PTR [rbp-0x18]
  4054df:	mov    rax,QWORD PTR [rax+0x178]
  4054e6:	leave  
  4054e7:	ret    

00000000004054e8 <flatcc_builder_exit_user_frame@@Base>:
  4054e8:	push   rbp
  4054e9:	mov    rbp,rsp
  4054ec:	sub    rsp,0x20
  4054f0:	mov    QWORD PTR [rbp-0x18],rdi
  4054f4:	mov    rax,QWORD PTR [rbp-0x18]
  4054f8:	mov    rax,QWORD PTR [rax+0x178]
  4054ff:	test   rax,rax
  405502:	jne    405523 <flatcc_builder_exit_user_frame@@Base+0x3b>
  405504:	lea    rcx,[rip+0x67c5]        # 40bcd0 <flatcc_builder_padding_base@@Base+0x690>
  40550b:	mov    edx,0x21e
  405510:	lea    rsi,[rip+0x6329]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405517:	lea    rdi,[rip+0x63a5]        # 40b8c3 <flatcc_builder_padding_base@@Base+0x283>
  40551e:	call   4030b0 <__assert_fail@plt>
  405523:	mov    rax,QWORD PTR [rbp-0x18]
  405527:	mov    rdx,QWORD PTR [rax+0xc8]
  40552e:	mov    rax,QWORD PTR [rbp-0x18]
  405532:	mov    rax,QWORD PTR [rax+0x178]
  405539:	mov    eax,eax
  40553b:	add    rax,rdx
  40553e:	mov    QWORD PTR [rbp-0x8],rax
  405542:	mov    rax,QWORD PTR [rbp-0x18]
  405546:	mov    rax,QWORD PTR [rax+0x178]
  40554d:	lea    rdx,[rax-0x8]
  405551:	mov    rax,QWORD PTR [rbp-0x18]
  405555:	mov    QWORD PTR [rax+0x180],rdx
  40555c:	mov    rax,QWORD PTR [rbp-0x8]
  405560:	mov    rdx,QWORD PTR [rax-0x8]
  405564:	mov    rax,QWORD PTR [rbp-0x18]
  405568:	mov    QWORD PTR [rax+0x178],rdx
  40556f:	mov    rax,QWORD PTR [rbp-0x18]
  405573:	mov    rax,QWORD PTR [rax+0x178]
  40557a:	leave  
  40557b:	ret    

000000000040557c <flatcc_builder_exit_user_frame_at@@Base>:
  40557c:	push   rbp
  40557d:	mov    rbp,rsp
  405580:	sub    rsp,0x10
  405584:	mov    QWORD PTR [rbp-0x8],rdi
  405588:	mov    QWORD PTR [rbp-0x10],rsi
  40558c:	mov    rax,QWORD PTR [rbp-0x8]
  405590:	mov    rax,QWORD PTR [rax+0x178]
  405597:	cmp    rax,QWORD PTR [rbp-0x10]
  40559b:	jae    4055bc <flatcc_builder_exit_user_frame_at@@Base+0x40>
  40559d:	lea    rcx,[rip+0x675c]        # 40bd00 <flatcc_builder_padding_base@@Base+0x6c0>
  4055a4:	mov    edx,0x227
  4055a9:	lea    rsi,[rip+0x6290]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4055b0:	lea    rdi,[rip+0x6329]        # 40b8e0 <flatcc_builder_padding_base@@Base+0x2a0>
  4055b7:	call   4030b0 <__assert_fail@plt>
  4055bc:	mov    rax,QWORD PTR [rbp-0x8]
  4055c0:	mov    rdx,QWORD PTR [rbp-0x10]
  4055c4:	mov    QWORD PTR [rax+0x178],rdx
  4055cb:	mov    rax,QWORD PTR [rbp-0x8]
  4055cf:	mov    rdi,rax
  4055d2:	call   4054e8 <flatcc_builder_exit_user_frame@@Base>
  4055d7:	leave  
  4055d8:	ret    

00000000004055d9 <flatcc_builder_get_current_user_frame@@Base>:
  4055d9:	push   rbp
  4055da:	mov    rbp,rsp
  4055dd:	mov    QWORD PTR [rbp-0x8],rdi
  4055e1:	mov    rax,QWORD PTR [rbp-0x8]
  4055e5:	mov    rax,QWORD PTR [rax+0x178]
  4055ec:	pop    rbp
  4055ed:	ret    

00000000004055ee <flatcc_builder_get_user_frame_ptr@@Base>:
  4055ee:	push   rbp
  4055ef:	mov    rbp,rsp
  4055f2:	mov    QWORD PTR [rbp-0x8],rdi
  4055f6:	mov    QWORD PTR [rbp-0x10],rsi
  4055fa:	mov    rax,QWORD PTR [rbp-0x8]
  4055fe:	mov    rax,QWORD PTR [rax+0xc8]
  405605:	mov    rdx,QWORD PTR [rbp-0x10]
  405609:	mov    edx,edx
  40560b:	add    rax,rdx
  40560e:	pop    rbp
  40560f:	ret    
  405610:	push   rbp
  405611:	mov    rbp,rsp
  405614:	sub    rsp,0x10
  405618:	mov    QWORD PTR [rbp-0x8],rdi
  40561c:	mov    eax,esi
  40561e:	mov    WORD PTR [rbp-0xc],ax
  405622:	mov    rax,QWORD PTR [rbp-0x8]
  405626:	mov    eax,DWORD PTR [rax+0x104]
  40562c:	lea    edx,[rax+0x1]
  40562f:	mov    rax,QWORD PTR [rbp-0x8]
  405633:	mov    DWORD PTR [rax+0x104],edx
  405639:	mov    rax,QWORD PTR [rbp-0x8]
  40563d:	mov    edx,DWORD PTR [rax+0x104]
  405643:	mov    rax,QWORD PTR [rbp-0x8]
  405647:	mov    eax,DWORD PTR [rax+0x108]
  40564d:	cmp    edx,eax
  40564f:	jle    40574b <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  405655:	mov    rax,QWORD PTR [rbp-0x8]
  405659:	mov    eax,DWORD PTR [rax+0x120]
  40565f:	test   eax,eax
  405661:	jle    405685 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  405663:	mov    rax,QWORD PTR [rbp-0x8]
  405667:	mov    edx,DWORD PTR [rax+0x104]
  40566d:	mov    rax,QWORD PTR [rbp-0x8]
  405671:	mov    eax,DWORD PTR [rax+0x120]
  405677:	cmp    edx,eax
  405679:	jle    405685 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  40567b:	mov    eax,0xffffffff
  405680:	jmp    4057e6 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  405685:	mov    rax,QWORD PTR [rbp-0x8]
  405689:	mov    eax,DWORD PTR [rax+0x104]
  40568f:	sub    eax,0x1
  405692:	movsxd rdx,eax
  405695:	mov    rax,rdx
  405698:	shl    rax,0x3
  40569c:	add    rax,rdx
  40569f:	shl    rax,0x2
  4056a3:	mov    rdx,rax
  4056a6:	mov    rax,QWORD PTR [rbp-0x8]
  4056aa:	mov    r8d,0x0
  4056b0:	mov    ecx,0x24
  4056b5:	mov    esi,0x4
  4056ba:	mov    rdi,rax
  4056bd:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  4056c2:	mov    rdx,rax
  4056c5:	mov    rax,QWORD PTR [rbp-0x8]
  4056c9:	mov    QWORD PTR [rax+0x30],rdx
  4056cd:	mov    rax,QWORD PTR [rbp-0x8]
  4056d1:	mov    rax,QWORD PTR [rax+0x30]
  4056d5:	test   rax,rax
  4056d8:	jne    4056e4 <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  4056da:	mov    eax,0xffffffff
  4056df:	jmp    4057e6 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4056e4:	mov    rax,QWORD PTR [rbp-0x8]
  4056e8:	mov    rax,QWORD PTR [rax+0xa0]
  4056ef:	movabs rdx,0xe38e38e38e38e38f
  4056f9:	mul    rdx
  4056fc:	mov    rax,rdx
  4056ff:	shr    rax,0x5
  405703:	mov    edx,eax
  405705:	mov    rax,QWORD PTR [rbp-0x8]
  405709:	mov    DWORD PTR [rax+0x108],edx
  40570f:	mov    rax,QWORD PTR [rbp-0x8]
  405713:	mov    eax,DWORD PTR [rax+0x120]
  405719:	test   eax,eax
  40571b:	jle    40575f <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  40571d:	mov    rax,QWORD PTR [rbp-0x8]
  405721:	mov    edx,DWORD PTR [rax+0x120]
  405727:	mov    rax,QWORD PTR [rbp-0x8]
  40572b:	mov    eax,DWORD PTR [rax+0x108]
  405731:	cmp    edx,eax
  405733:	jge    40575f <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  405735:	mov    rax,QWORD PTR [rbp-0x8]
  405739:	mov    edx,DWORD PTR [rax+0x120]
  40573f:	mov    rax,QWORD PTR [rbp-0x8]
  405743:	mov    DWORD PTR [rax+0x108],edx
  405749:	jmp    40575f <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  40574b:	mov    rax,QWORD PTR [rbp-0x8]
  40574f:	mov    rax,QWORD PTR [rax+0x30]
  405753:	lea    rdx,[rax+0x24]
  405757:	mov    rax,QWORD PTR [rbp-0x8]
  40575b:	mov    QWORD PTR [rax+0x30],rdx
  40575f:	mov    rax,QWORD PTR [rbp-0x8]
  405763:	mov    rax,QWORD PTR [rax+0x30]
  405767:	mov    rdx,QWORD PTR [rbp-0x8]
  40576b:	mov    edx,DWORD PTR [rdx+0x20]
  40576e:	mov    DWORD PTR [rax+0x8],edx
  405771:	mov    rax,QWORD PTR [rbp-0x8]
  405775:	mov    rax,QWORD PTR [rax+0x30]
  405779:	mov    rdx,QWORD PTR [rbp-0x8]
  40577d:	movzx  edx,WORD PTR [rdx+0xea]
  405784:	mov    WORD PTR [rax+0xc],dx
  405788:	mov    rax,QWORD PTR [rbp-0x8]
  40578c:	movzx  edx,WORD PTR [rbp-0xc]
  405790:	mov    WORD PTR [rax+0xea],dx
  405797:	mov    rax,QWORD PTR [rbp-0x8]
  40579b:	mov    rax,QWORD PTR [rax+0x30]
  40579f:	mov    rdx,QWORD PTR [rbp-0x8]
  4057a3:	mov    edx,DWORD PTR [rdx+0x28]
  4057a6:	mov    DWORD PTR [rax],edx
  4057a8:	mov    rax,QWORD PTR [rbp-0x8]
  4057ac:	mov    rax,QWORD PTR [rax+0x30]
  4057b0:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4057b7:	mov    rax,QWORD PTR [rbp-0x8]
  4057bb:	mov    edx,DWORD PTR [rax+0x28]
  4057be:	mov    rax,QWORD PTR [rbp-0x8]
  4057c2:	mov    eax,DWORD PTR [rax+0x20]
  4057c5:	add    eax,edx
  4057c7:	add    eax,0x7
  4057ca:	and    eax,0xfffffff8
  4057cd:	mov    edx,eax
  4057cf:	mov    rax,QWORD PTR [rbp-0x8]
  4057d3:	mov    DWORD PTR [rax+0x28],edx
  4057d6:	mov    rax,QWORD PTR [rbp-0x8]
  4057da:	mov    DWORD PTR [rax+0x20],0x0
  4057e1:	mov    eax,0x0
  4057e6:	leave  
  4057e7:	ret    
  4057e8:	push   rbp
  4057e9:	mov    rbp,rsp
  4057ec:	sub    rsp,0x10
  4057f0:	mov    QWORD PTR [rbp-0x8],rdi
  4057f4:	mov    rax,QWORD PTR [rbp-0x8]
  4057f8:	mov    eax,DWORD PTR [rax+0x20]
  4057fb:	mov    edx,eax
  4057fd:	mov    rax,QWORD PTR [rbp-0x8]
  405801:	mov    rax,QWORD PTR [rax+0x18]
  405805:	mov    esi,0x0
  40580a:	mov    rdi,rax
  40580d:	call   4030c0 <memset@plt>
  405812:	mov    rax,QWORD PTR [rbp-0x8]
  405816:	mov    rax,QWORD PTR [rax+0x30]
  40581a:	mov    edx,DWORD PTR [rax+0x8]
  40581d:	mov    rax,QWORD PTR [rbp-0x8]
  405821:	mov    DWORD PTR [rax+0x20],edx
  405824:	mov    rax,QWORD PTR [rbp-0x8]
  405828:	mov    rax,QWORD PTR [rax+0x30]
  40582c:	mov    edx,DWORD PTR [rax]
  40582e:	mov    rax,QWORD PTR [rbp-0x8]
  405832:	mov    DWORD PTR [rax+0x28],edx
  405835:	mov    rax,QWORD PTR [rbp-0x8]
  405839:	mov    rax,QWORD PTR [rax+0x30]
  40583d:	mov    edx,DWORD PTR [rax+0x4]
  405840:	mov    rax,QWORD PTR [rbp-0x8]
  405844:	mov    esi,edx
  405846:	mov    rdi,rax
  405849:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  40584e:	mov    rax,QWORD PTR [rbp-0x8]
  405852:	movzx  eax,WORD PTR [rax+0xea]
  405859:	movzx  edx,ax
  40585c:	mov    rax,QWORD PTR [rbp-0x8]
  405860:	mov    esi,edx
  405862:	mov    rdi,rax
  405865:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  40586a:	mov    rax,QWORD PTR [rbp-0x8]
  40586e:	mov    rax,QWORD PTR [rax+0x30]
  405872:	movzx  edx,WORD PTR [rax+0xc]
  405876:	mov    rax,QWORD PTR [rbp-0x8]
  40587a:	mov    WORD PTR [rax+0xea],dx
  405881:	mov    rax,QWORD PTR [rbp-0x8]
  405885:	mov    rax,QWORD PTR [rax+0x30]
  405889:	lea    rdx,[rax-0x24]
  40588d:	mov    rax,QWORD PTR [rbp-0x8]
  405891:	mov    QWORD PTR [rax+0x30],rdx
  405895:	mov    rax,QWORD PTR [rbp-0x8]
  405899:	mov    eax,DWORD PTR [rax+0x104]
  40589f:	lea    edx,[rax-0x1]
  4058a2:	mov    rax,QWORD PTR [rbp-0x8]
  4058a6:	mov    DWORD PTR [rax+0x104],edx
  4058ac:	nop
  4058ad:	leave  
  4058ae:	ret    
  4058af:	push   rbp
  4058b0:	mov    rbp,rsp
  4058b3:	mov    QWORD PTR [rbp-0x8],rdi
  4058b7:	mov    DWORD PTR [rbp-0xc],esi
  4058ba:	mov    eax,edx
  4058bc:	mov    WORD PTR [rbp-0x10],ax
  4058c0:	mov    rax,QWORD PTR [rbp-0x8]
  4058c4:	mov    eax,DWORD PTR [rax+0xf0]
  4058ca:	sub    eax,DWORD PTR [rbp-0xc]
  4058cd:	movzx  edx,WORD PTR [rbp-0x10]
  4058d1:	sub    edx,0x1
  4058d4:	and    eax,edx
  4058d6:	pop    rbp
  4058d7:	ret    
  4058d8:	push   rbp
  4058d9:	mov    rbp,rsp
  4058dc:	mov    QWORD PTR [rbp-0x8],rdi
  4058e0:	mov    eax,esi
  4058e2:	mov    WORD PTR [rbp-0xc],ax
  4058e6:	mov    rax,QWORD PTR [rbp-0x8]
  4058ea:	mov    eax,DWORD PTR [rax+0xf4]
  4058f0:	movzx  edx,WORD PTR [rbp-0xc]
  4058f4:	sub    edx,0x1
  4058f7:	and    eax,edx
  4058f9:	pop    rbp
  4058fa:	ret    
  4058fb:	push   rbp
  4058fc:	mov    rbp,rsp
  4058ff:	sub    rsp,0x20
  405903:	mov    QWORD PTR [rbp-0x18],rdi
  405907:	mov    QWORD PTR [rbp-0x20],rsi
  40590b:	mov    rax,QWORD PTR [rbp-0x18]
  40590f:	mov    edx,DWORD PTR [rax+0xf0]
  405915:	mov    rax,QWORD PTR [rbp-0x20]
  405919:	mov    rax,QWORD PTR [rax]
  40591c:	sub    edx,eax
  40591e:	mov    eax,edx
  405920:	mov    DWORD PTR [rbp-0x4],eax
  405923:	mov    rax,QWORD PTR [rbp-0x20]
  405927:	mov    rax,QWORD PTR [rax]
  40592a:	cmp    rax,0x10
  40592e:	jbe    405945 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  405930:	mov    rax,QWORD PTR [rbp-0x20]
  405934:	mov    rax,QWORD PTR [rax]
  405937:	lea    rdx,[rax-0x10]
  40593b:	mov    eax,0xffffffff
  405940:	cmp    rdx,rax
  405943:	ja     405954 <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  405945:	mov    rax,QWORD PTR [rbp-0x18]
  405949:	mov    eax,DWORD PTR [rax+0xf0]
  40594f:	cmp    eax,DWORD PTR [rbp-0x4]
  405952:	jg     405973 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  405954:	lea    rcx,[rip+0x63ed]        # 40bd48 <flatcc_builder_padding_base@@Base+0x708>
  40595b:	mov    edx,0x287
  405960:	lea    rsi,[rip+0x5ed9]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405967:	lea    rdi,[rip+0x5f32]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40596e:	call   4030b0 <__assert_fail@plt>
  405973:	mov    rax,QWORD PTR [rbp-0x18]
  405977:	mov    rax,QWORD PTR [rax+0x48]
  40597b:	mov    rdx,QWORD PTR [rbp-0x20]
  40597f:	mov    r8,QWORD PTR [rdx]
  405982:	mov    rdx,QWORD PTR [rbp-0x20]
  405986:	mov    edx,DWORD PTR [rdx+0x8]
  405989:	mov    rcx,QWORD PTR [rbp-0x20]
  40598d:	lea    rsi,[rcx+0x10]
  405991:	mov    rcx,QWORD PTR [rbp-0x18]
  405995:	mov    rdi,QWORD PTR [rcx+0x38]
  405999:	mov    ecx,DWORD PTR [rbp-0x4]
  40599c:	call   rax
  40599e:	test   eax,eax
  4059a0:	je     4059c1 <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  4059a2:	lea    rcx,[rip+0x639f]        # 40bd48 <flatcc_builder_padding_base@@Base+0x708>
  4059a9:	mov    edx,0x28b
  4059ae:	lea    rsi,[rip+0x5e8b]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4059b5:	lea    rdi,[rip+0x5ee4]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  4059bc:	call   4030b0 <__assert_fail@plt>
  4059c1:	mov    rax,QWORD PTR [rbp-0x18]
  4059c5:	mov    edx,DWORD PTR [rbp-0x4]
  4059c8:	mov    DWORD PTR [rax+0xf0],edx
  4059ce:	mov    rax,QWORD PTR [rbp-0x18]
  4059d2:	mov    eax,DWORD PTR [rax+0xf0]
  4059d8:	leave  
  4059d9:	ret    
  4059da:	push   rbp
  4059db:	mov    rbp,rsp
  4059de:	sub    rsp,0x20
  4059e2:	mov    QWORD PTR [rbp-0x18],rdi
  4059e6:	mov    QWORD PTR [rbp-0x20],rsi
  4059ea:	mov    rax,QWORD PTR [rbp-0x18]
  4059ee:	mov    eax,DWORD PTR [rax+0xf4]
  4059f4:	mov    DWORD PTR [rbp-0x4],eax
  4059f7:	mov    rax,QWORD PTR [rbp-0x20]
  4059fb:	mov    rax,QWORD PTR [rax]
  4059fe:	mov    edx,eax
  405a00:	mov    eax,DWORD PTR [rbp-0x4]
  405a03:	add    edx,eax
  405a05:	mov    rax,QWORD PTR [rbp-0x18]
  405a09:	mov    DWORD PTR [rax+0xf4],edx
  405a0f:	mov    rax,QWORD PTR [rbp-0x18]
  405a13:	mov    eax,DWORD PTR [rax+0xf4]
  405a19:	cmp    eax,DWORD PTR [rbp-0x4]
  405a1c:	jge    405a3d <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  405a1e:	lea    rcx,[rip+0x6313]        # 40bd38 <flatcc_builder_padding_base@@Base+0x6f8>
  405a25:	mov    edx,0x2a1
  405a2a:	lea    rsi,[rip+0x5e0f]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405a31:	lea    rdi,[rip+0x5e68]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405a38:	call   4030b0 <__assert_fail@plt>
  405a3d:	mov    rax,QWORD PTR [rbp-0x18]
  405a41:	mov    rax,QWORD PTR [rax+0x48]
  405a45:	mov    rdx,QWORD PTR [rbp-0x20]
  405a49:	mov    r8,QWORD PTR [rdx]
  405a4c:	mov    rdx,QWORD PTR [rbp-0x20]
  405a50:	mov    edx,DWORD PTR [rdx+0x8]
  405a53:	mov    rcx,QWORD PTR [rbp-0x20]
  405a57:	lea    rsi,[rcx+0x10]
  405a5b:	mov    rcx,QWORD PTR [rbp-0x18]
  405a5f:	mov    rdi,QWORD PTR [rcx+0x38]
  405a63:	mov    ecx,DWORD PTR [rbp-0x4]
  405a66:	call   rax
  405a68:	test   eax,eax
  405a6a:	je     405a8b <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  405a6c:	lea    rcx,[rip+0x62c5]        # 40bd38 <flatcc_builder_padding_base@@Base+0x6f8>
  405a73:	mov    edx,0x2a5
  405a78:	lea    rsi,[rip+0x5dc1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405a7f:	lea    rdi,[rip+0x5e1a]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405a86:	call   4030b0 <__assert_fail@plt>
  405a8b:	mov    eax,DWORD PTR [rbp-0x4]
  405a8e:	add    eax,0x1
  405a91:	leave  
  405a92:	ret    
  405a93:	push   rbp
  405a94:	mov    rbp,rsp
  405a97:	sub    rsp,0xd0
  405a9e:	mov    QWORD PTR [rbp-0xb8],rdi
  405aa5:	mov    QWORD PTR [rbp-0xc0],rsi
  405aac:	mov    eax,edx
  405aae:	mov    DWORD PTR [rbp-0xc8],ecx
  405ab4:	mov    WORD PTR [rbp-0xc4],ax
  405abb:	mov    rax,QWORD PTR fs:0x28
  405ac4:	mov    QWORD PTR [rbp-0x8],rax
  405ac8:	xor    eax,eax
  405aca:	cmp    WORD PTR [rbp-0xc4],0x0
  405ad2:	jne    405afe <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  405ad4:	mov    rax,QWORD PTR [rbp-0xb8]
  405adb:	movzx  eax,WORD PTR [rax+0xec]
  405ae2:	test   ax,ax
  405ae5:	je     405af7 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  405ae7:	mov    rax,QWORD PTR [rbp-0xb8]
  405aee:	movzx  eax,WORD PTR [rax+0xec]
  405af5:	jmp    405b05 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405af7:	mov    eax,0x1
  405afc:	jmp    405b05 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405afe:	movzx  eax,WORD PTR [rbp-0xc4]
  405b05:	mov    WORD PTR [rbp-0xc4],ax
  405b0c:	mov    rax,QWORD PTR [rbp-0xc0]
  405b13:	mov    esi,0x4
  405b18:	mov    rdi,rax
  405b1b:	call   405328 <flatcc_builder_clear@@Base+0xc7>
  405b20:	movzx  edx,WORD PTR [rbp-0xc4]
  405b27:	mov    rax,QWORD PTR [rbp-0xc0]
  405b2e:	mov    esi,edx
  405b30:	mov    rdi,rax
  405b33:	call   405328 <flatcc_builder_clear@@Base+0xc7>
  405b38:	cmp    DWORD PTR [rbp-0xc8],0x0
  405b3f:	jne    405c35 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405b45:	movzx  edx,WORD PTR [rbp-0xc4]
  405b4c:	mov    rax,QWORD PTR [rbp-0xb8]
  405b53:	mov    esi,edx
  405b55:	mov    rdi,rax
  405b58:	call   4058d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  405b5d:	mov    eax,eax
  405b5f:	mov    QWORD PTR [rbp-0xa8],rax
  405b66:	cmp    QWORD PTR [rbp-0xa8],0x0
  405b6e:	je     405c35 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405b74:	mov    QWORD PTR [rbp-0xa0],0x0
  405b7f:	mov    DWORD PTR [rbp-0x98],0x0
  405b89:	cmp    QWORD PTR [rbp-0xa8],0x0
  405b91:	je     405bf9 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  405b93:	mov    rdx,QWORD PTR [rbp-0xa0]
  405b9a:	mov    rax,QWORD PTR [rbp-0xa8]
  405ba1:	add    rax,rdx
  405ba4:	mov    QWORD PTR [rbp-0xa0],rax
  405bab:	mov    eax,DWORD PTR [rbp-0x98]
  405bb1:	cdqe   
  405bb3:	shl    rax,0x4
  405bb7:	add    rax,rbp
  405bba:	sub    rax,0x90
  405bc0:	mov    rdx,0x40b640
  405bc7:	mov    QWORD PTR [rax],rdx
  405bca:	mov    eax,DWORD PTR [rbp-0x98]
  405bd0:	cdqe   
  405bd2:	shl    rax,0x4
  405bd6:	add    rax,rbp
  405bd9:	lea    rdx,[rax-0x88]
  405be0:	mov    rax,QWORD PTR [rbp-0xa8]
  405be7:	mov    QWORD PTR [rdx],rax
  405bea:	mov    eax,DWORD PTR [rbp-0x98]
  405bf0:	add    eax,0x1
  405bf3:	mov    DWORD PTR [rbp-0x98],eax
  405bf9:	lea    rdx,[rbp-0xa0]
  405c00:	mov    rax,QWORD PTR [rbp-0xb8]
  405c07:	mov    rsi,rdx
  405c0a:	mov    rdi,rax
  405c0d:	call   4059da <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  405c12:	test   eax,eax
  405c14:	jne    405c35 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405c16:	lea    rcx,[rip+0x610b]        # 40bd28 <flatcc_builder_padding_base@@Base+0x6e8>
  405c1d:	mov    edx,0x2be
  405c22:	lea    rsi,[rip+0x5c17]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405c29:	lea    rdi,[rip+0x5c70]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405c30:	call   4030b0 <__assert_fail@plt>
  405c35:	mov    eax,0x0
  405c3a:	mov    rcx,QWORD PTR [rbp-0x8]
  405c3e:	xor    rcx,QWORD PTR fs:0x28
  405c47:	je     405c4e <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  405c49:	call   403080 <__stack_chk_fail@plt>
  405c4e:	leave  
  405c4f:	ret    

0000000000405c50 <flatcc_builder_embed_buffer@@Base>:
  405c50:	push   rbp
  405c51:	mov    rbp,rsp
  405c54:	sub    rsp,0xe0
  405c5b:	mov    QWORD PTR [rbp-0xb8],rdi
  405c62:	mov    eax,esi
  405c64:	mov    QWORD PTR [rbp-0xc8],rdx
  405c6b:	mov    QWORD PTR [rbp-0xd0],rcx
  405c72:	mov    edx,r8d
  405c75:	mov    DWORD PTR [rbp-0xd4],r9d
  405c7c:	mov    WORD PTR [rbp-0xbc],ax
  405c83:	mov    WORD PTR [rbp-0xc0],dx
  405c8a:	mov    rax,QWORD PTR fs:0x28
  405c93:	mov    QWORD PTR [rbp-0x8],rax
  405c97:	xor    eax,eax
  405c99:	mov    eax,DWORD PTR [rbp-0xd4]
  405c9f:	and    eax,0x2
  405ca2:	mov    DWORD PTR [rbp-0xa8],eax
  405ca8:	mov    rax,QWORD PTR [rbp-0xb8]
  405caf:	mov    eax,DWORD PTR [rax+0x100]
  405cb5:	test   eax,eax
  405cb7:	setne  al
  405cba:	movzx  ecx,al
  405cbd:	movzx  edx,WORD PTR [rbp-0xbc]
  405cc4:	lea    rsi,[rbp-0xc0]
  405ccb:	mov    rax,QWORD PTR [rbp-0xb8]
  405cd2:	mov    rdi,rax
  405cd5:	call   405a93 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405cda:	test   eax,eax
  405cdc:	je     405ce8 <flatcc_builder_embed_buffer@@Base+0x98>
  405cde:	mov    eax,0x0
  405ce3:	jmp    405ec2 <flatcc_builder_embed_buffer@@Base+0x272>
  405ce8:	movzx  eax,WORD PTR [rbp-0xc0]
  405cef:	movzx  edx,ax
  405cf2:	mov    rax,QWORD PTR [rbp-0xd0]
  405cf9:	mov    ecx,eax
  405cfb:	cmp    DWORD PTR [rbp-0xa8],0x0
  405d02:	je     405d0b <flatcc_builder_embed_buffer@@Base+0xbb>
  405d04:	mov    eax,0x4
  405d09:	jmp    405d10 <flatcc_builder_embed_buffer@@Base+0xc0>
  405d0b:	mov    eax,0x0
  405d10:	add    ecx,eax
  405d12:	mov    rax,QWORD PTR [rbp-0xb8]
  405d19:	mov    esi,ecx
  405d1b:	mov    rdi,rax
  405d1e:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  405d23:	mov    DWORD PTR [rbp-0xa4],eax
  405d29:	mov    rax,QWORD PTR [rbp-0xd0]
  405d30:	mov    edx,eax
  405d32:	mov    eax,DWORD PTR [rbp-0xa4]
  405d38:	add    eax,edx
  405d3a:	mov    edi,eax
  405d3c:	call   4045e7 <main@@Base+0x41a>
  405d41:	mov    DWORD PTR [rbp-0xac],eax
  405d47:	mov    QWORD PTR [rbp-0xa0],0x0
  405d52:	mov    DWORD PTR [rbp-0x98],0x0
  405d5c:	mov    rax,QWORD PTR [rbp-0xb8]
  405d63:	mov    eax,DWORD PTR [rax+0x100]
  405d69:	test   eax,eax
  405d6b:	je     405dca <flatcc_builder_embed_buffer@@Base+0x17a>
  405d6d:	mov    rax,QWORD PTR [rbp-0xa0]
  405d74:	add    rax,0x4
  405d78:	mov    QWORD PTR [rbp-0xa0],rax
  405d7f:	mov    eax,DWORD PTR [rbp-0x98]
  405d85:	cdqe   
  405d87:	shl    rax,0x4
  405d8b:	add    rax,rbp
  405d8e:	lea    rdx,[rax-0x90]
  405d95:	lea    rax,[rbp-0xac]
  405d9c:	mov    QWORD PTR [rdx],rax
  405d9f:	mov    eax,DWORD PTR [rbp-0x98]
  405da5:	cdqe   
  405da7:	shl    rax,0x4
  405dab:	add    rax,rbp
  405dae:	sub    rax,0x88
  405db4:	mov    QWORD PTR [rax],0x4
  405dbb:	mov    eax,DWORD PTR [rbp-0x98]
  405dc1:	add    eax,0x1
  405dc4:	mov    DWORD PTR [rbp-0x98],eax
  405dca:	cmp    QWORD PTR [rbp-0xd0],0x0
  405dd2:	je     405e3b <flatcc_builder_embed_buffer@@Base+0x1eb>
  405dd4:	mov    rdx,QWORD PTR [rbp-0xa0]
  405ddb:	mov    rax,QWORD PTR [rbp-0xd0]
  405de2:	add    rax,rdx
  405de5:	mov    QWORD PTR [rbp-0xa0],rax
  405dec:	mov    eax,DWORD PTR [rbp-0x98]
  405df2:	cdqe   
  405df4:	shl    rax,0x4
  405df8:	add    rax,rbp
  405dfb:	lea    rdx,[rax-0x90]
  405e02:	mov    rax,QWORD PTR [rbp-0xc8]
  405e09:	mov    QWORD PTR [rdx],rax
  405e0c:	mov    eax,DWORD PTR [rbp-0x98]
  405e12:	cdqe   
  405e14:	shl    rax,0x4
  405e18:	add    rax,rbp
  405e1b:	lea    rdx,[rax-0x88]
  405e22:	mov    rax,QWORD PTR [rbp-0xd0]
  405e29:	mov    QWORD PTR [rdx],rax
  405e2c:	mov    eax,DWORD PTR [rbp-0x98]
  405e32:	add    eax,0x1
  405e35:	mov    DWORD PTR [rbp-0x98],eax
  405e3b:	cmp    DWORD PTR [rbp-0xa4],0x0
  405e42:	je     405ea9 <flatcc_builder_embed_buffer@@Base+0x259>
  405e44:	mov    rdx,QWORD PTR [rbp-0xa0]
  405e4b:	mov    eax,DWORD PTR [rbp-0xa4]
  405e51:	add    rax,rdx
  405e54:	mov    QWORD PTR [rbp-0xa0],rax
  405e5b:	mov    eax,DWORD PTR [rbp-0x98]
  405e61:	cdqe   
  405e63:	shl    rax,0x4
  405e67:	add    rax,rbp
  405e6a:	sub    rax,0x90
  405e70:	mov    rdx,0x40b640
  405e77:	mov    QWORD PTR [rax],rdx
  405e7a:	mov    edx,DWORD PTR [rbp-0x98]
  405e80:	mov    eax,DWORD PTR [rbp-0xa4]
  405e86:	movsxd rdx,edx
  405e89:	shl    rdx,0x4
  405e8d:	add    rdx,rbp
  405e90:	sub    rdx,0x88
  405e97:	mov    QWORD PTR [rdx],rax
  405e9a:	mov    eax,DWORD PTR [rbp-0x98]
  405ea0:	add    eax,0x1
  405ea3:	mov    DWORD PTR [rbp-0x98],eax
  405ea9:	lea    rdx,[rbp-0xa0]
  405eb0:	mov    rax,QWORD PTR [rbp-0xb8]
  405eb7:	mov    rsi,rdx
  405eba:	mov    rdi,rax
  405ebd:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  405ec2:	mov    rdi,QWORD PTR [rbp-0x8]
  405ec6:	xor    rdi,QWORD PTR fs:0x28
  405ecf:	je     405ed6 <flatcc_builder_embed_buffer@@Base+0x286>
  405ed1:	call   403080 <__stack_chk_fail@plt>
  405ed6:	leave  
  405ed7:	ret    

0000000000405ed8 <flatcc_builder_create_buffer@@Base>:
  405ed8:	push   rbp
  405ed9:	mov    rbp,rsp
  405edc:	sub    rsp,0xf0
  405ee3:	mov    QWORD PTR [rbp-0xd8],rdi
  405eea:	mov    QWORD PTR [rbp-0xe0],rsi
  405ef1:	mov    eax,edx
  405ef3:	mov    DWORD PTR [rbp-0xe8],ecx
  405ef9:	mov    edx,r8d
  405efc:	mov    DWORD PTR [rbp-0xf0],r9d
  405f03:	mov    WORD PTR [rbp-0xe4],ax
  405f0a:	mov    WORD PTR [rbp-0xec],dx
  405f11:	mov    rax,QWORD PTR fs:0x28
  405f1a:	mov    QWORD PTR [rbp-0x8],rax
  405f1e:	xor    eax,eax
  405f20:	mov    DWORD PTR [rbp-0xb8],0x0
  405f2a:	mov    DWORD PTR [rbp-0xbc],0x0
  405f34:	mov    eax,DWORD PTR [rbp-0xf0]
  405f3a:	and    eax,0x1
  405f3d:	test   eax,eax
  405f3f:	setne  al
  405f42:	movzx  eax,al
  405f45:	mov    DWORD PTR [rbp-0xb4],eax
  405f4b:	mov    eax,DWORD PTR [rbp-0xf0]
  405f51:	and    eax,0x2
  405f54:	test   eax,eax
  405f56:	setne  al
  405f59:	movzx  eax,al
  405f5c:	mov    DWORD PTR [rbp-0xb0],eax
  405f62:	movzx  edx,WORD PTR [rbp-0xe4]
  405f69:	mov    ecx,DWORD PTR [rbp-0xb4]
  405f6f:	lea    rsi,[rbp-0xec]
  405f76:	mov    rax,QWORD PTR [rbp-0xd8]
  405f7d:	mov    rdi,rax
  405f80:	call   405a93 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405f85:	test   eax,eax
  405f87:	je     405f93 <flatcc_builder_create_buffer@@Base+0xbb>
  405f89:	mov    eax,0x0
  405f8e:	jmp    4062f9 <flatcc_builder_create_buffer@@Base+0x421>
  405f93:	movzx  eax,WORD PTR [rbp-0xec]
  405f9a:	movzx  edx,ax
  405f9d:	mov    rax,QWORD PTR [rbp-0xd8]
  405fa4:	mov    esi,edx
  405fa6:	mov    rdi,rax
  405fa9:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  405fae:	cmp    QWORD PTR [rbp-0xe0],0x0
  405fb6:	je     405fed <flatcc_builder_create_buffer@@Base+0x115>
  405fb8:	mov    rax,QWORD PTR [rbp-0xe0]
  405fbf:	mov    eax,DWORD PTR [rax]
  405fc1:	mov    DWORD PTR [rbp-0xbc],eax
  405fc7:	mov    eax,DWORD PTR [rbp-0xbc]
  405fcd:	mov    edi,eax
  405fcf:	call   404602 <main@@Base+0x435>
  405fd4:	mov    DWORD PTR [rbp-0xbc],eax
  405fda:	mov    eax,DWORD PTR [rbp-0xbc]
  405fe0:	mov    edi,eax
  405fe2:	call   4045e7 <main@@Base+0x41a>
  405fe7:	mov    DWORD PTR [rbp-0xbc],eax
  405fed:	mov    eax,DWORD PTR [rbp-0xbc]
  405ff3:	test   eax,eax
  405ff5:	je     405ffe <flatcc_builder_create_buffer@@Base+0x126>
  405ff7:	mov    eax,0x4
  405ffc:	jmp    406003 <flatcc_builder_create_buffer@@Base+0x12b>
  405ffe:	mov    eax,0x0
  406003:	mov    DWORD PTR [rbp-0xb8],eax
  406009:	movzx  eax,WORD PTR [rbp-0xec]
  406010:	movzx  edx,ax
  406013:	cmp    DWORD PTR [rbp-0xb0],0x0
  40601a:	je     406023 <flatcc_builder_create_buffer@@Base+0x14b>
  40601c:	mov    ecx,0x4
  406021:	jmp    406028 <flatcc_builder_create_buffer@@Base+0x150>
  406023:	mov    ecx,0x0
  406028:	mov    eax,DWORD PTR [rbp-0xb8]
  40602e:	add    eax,ecx
  406030:	lea    ecx,[rax+0x4]
  406033:	mov    rax,QWORD PTR [rbp-0xd8]
  40603a:	mov    esi,ecx
  40603c:	mov    rdi,rax
  40603f:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  406044:	mov    DWORD PTR [rbp-0xac],eax
  40604a:	mov    QWORD PTR [rbp-0xa0],0x0
  406055:	mov    DWORD PTR [rbp-0x98],0x0
  40605f:	cmp    DWORD PTR [rbp-0xb4],0x0
  406066:	jne    406071 <flatcc_builder_create_buffer@@Base+0x199>
  406068:	cmp    DWORD PTR [rbp-0xb0],0x0
  40606f:	je     4060ce <flatcc_builder_create_buffer@@Base+0x1f6>
  406071:	mov    rax,QWORD PTR [rbp-0xa0]
  406078:	add    rax,0x4
  40607c:	mov    QWORD PTR [rbp-0xa0],rax
  406083:	mov    eax,DWORD PTR [rbp-0x98]
  406089:	cdqe   
  40608b:	shl    rax,0x4
  40608f:	add    rax,rbp
  406092:	lea    rdx,[rax-0x90]
  406099:	lea    rax,[rbp-0xc0]
  4060a0:	mov    QWORD PTR [rdx],rax
  4060a3:	mov    eax,DWORD PTR [rbp-0x98]
  4060a9:	cdqe   
  4060ab:	shl    rax,0x4
  4060af:	add    rax,rbp
  4060b2:	sub    rax,0x88
  4060b8:	mov    QWORD PTR [rax],0x4
  4060bf:	mov    eax,DWORD PTR [rbp-0x98]
  4060c5:	add    eax,0x1
  4060c8:	mov    DWORD PTR [rbp-0x98],eax
  4060ce:	mov    rax,QWORD PTR [rbp-0xa0]
  4060d5:	add    rax,0x4
  4060d9:	mov    QWORD PTR [rbp-0xa0],rax
  4060e0:	mov    eax,DWORD PTR [rbp-0x98]
  4060e6:	cdqe   
  4060e8:	shl    rax,0x4
  4060ec:	add    rax,rbp
  4060ef:	lea    rdx,[rax-0x90]
  4060f6:	lea    rax,[rbp-0xc4]
  4060fd:	mov    QWORD PTR [rdx],rax
  406100:	mov    eax,DWORD PTR [rbp-0x98]
  406106:	cdqe   
  406108:	shl    rax,0x4
  40610c:	add    rax,rbp
  40610f:	sub    rax,0x88
  406115:	mov    QWORD PTR [rax],0x4
  40611c:	mov    eax,DWORD PTR [rbp-0x98]
  406122:	add    eax,0x1
  406125:	mov    DWORD PTR [rbp-0x98],eax
  40612b:	cmp    DWORD PTR [rbp-0xb8],0x0
  406132:	je     40619a <flatcc_builder_create_buffer@@Base+0x2c2>
  406134:	mov    rdx,QWORD PTR [rbp-0xa0]
  40613b:	mov    eax,DWORD PTR [rbp-0xb8]
  406141:	add    rax,rdx
  406144:	mov    QWORD PTR [rbp-0xa0],rax
  40614b:	mov    eax,DWORD PTR [rbp-0x98]
  406151:	cdqe   
  406153:	shl    rax,0x4
  406157:	add    rax,rbp
  40615a:	lea    rdx,[rax-0x90]
  406161:	lea    rax,[rbp-0xbc]
  406168:	mov    QWORD PTR [rdx],rax
  40616b:	mov    edx,DWORD PTR [rbp-0x98]
  406171:	mov    eax,DWORD PTR [rbp-0xb8]
  406177:	movsxd rdx,edx
  40617a:	shl    rdx,0x4
  40617e:	add    rdx,rbp
  406181:	sub    rdx,0x88
  406188:	mov    QWORD PTR [rdx],rax
  40618b:	mov    eax,DWORD PTR [rbp-0x98]
  406191:	add    eax,0x1
  406194:	mov    DWORD PTR [rbp-0x98],eax
  40619a:	cmp    DWORD PTR [rbp-0xac],0x0
  4061a1:	je     406208 <flatcc_builder_create_buffer@@Base+0x330>
  4061a3:	mov    rdx,QWORD PTR [rbp-0xa0]
  4061aa:	mov    eax,DWORD PTR [rbp-0xac]
  4061b0:	add    rax,rdx
  4061b3:	mov    QWORD PTR [rbp-0xa0],rax
  4061ba:	mov    eax,DWORD PTR [rbp-0x98]
  4061c0:	cdqe   
  4061c2:	shl    rax,0x4
  4061c6:	add    rax,rbp
  4061c9:	sub    rax,0x90
  4061cf:	mov    rdx,0x40b640
  4061d6:	mov    QWORD PTR [rax],rdx
  4061d9:	mov    edx,DWORD PTR [rbp-0x98]
  4061df:	mov    eax,DWORD PTR [rbp-0xac]
  4061e5:	movsxd rdx,edx
  4061e8:	shl    rdx,0x4
  4061ec:	add    rdx,rbp
  4061ef:	sub    rdx,0x88
  4061f6:	mov    QWORD PTR [rdx],rax
  4061f9:	mov    eax,DWORD PTR [rbp-0x98]
  4061ff:	add    eax,0x1
  406202:	mov    DWORD PTR [rbp-0x98],eax
  406208:	mov    rax,QWORD PTR [rbp-0xd8]
  40620f:	mov    eax,DWORD PTR [rax+0xf0]
  406215:	mov    edx,eax
  406217:	mov    rax,QWORD PTR [rbp-0xa0]
  40621e:	sub    edx,eax
  406220:	mov    eax,edx
  406222:	cmp    DWORD PTR [rbp-0xb4],0x0
  406229:	jne    406234 <flatcc_builder_create_buffer@@Base+0x35c>
  40622b:	cmp    DWORD PTR [rbp-0xb0],0x0
  406232:	je     40623b <flatcc_builder_create_buffer@@Base+0x363>
  406234:	mov    edx,0x4
  406239:	jmp    406240 <flatcc_builder_create_buffer@@Base+0x368>
  40623b:	mov    edx,0x0
  406240:	add    eax,edx
  406242:	mov    DWORD PTR [rbp-0xa8],eax
  406248:	cmp    DWORD PTR [rbp-0xb4],0x0
  40624f:	je     406273 <flatcc_builder_create_buffer@@Base+0x39b>
  406251:	mov    rax,QWORD PTR [rbp-0xd8]
  406258:	mov    eax,DWORD PTR [rax+0xf8]
  40625e:	sub    eax,DWORD PTR [rbp-0xa8]
  406264:	mov    edi,eax
  406266:	call   4045e7 <main@@Base+0x41a>
  40626b:	mov    DWORD PTR [rbp-0xc0],eax
  406271:	jmp    406293 <flatcc_builder_create_buffer@@Base+0x3bb>
  406273:	mov    rax,QWORD PTR [rbp-0xd8]
  40627a:	mov    eax,DWORD PTR [rax+0xf4]
  406280:	sub    eax,DWORD PTR [rbp-0xa8]
  406286:	mov    edi,eax
  406288:	call   4045e7 <main@@Base+0x41a>
  40628d:	mov    DWORD PTR [rbp-0xc0],eax
  406293:	mov    eax,DWORD PTR [rbp-0xe8]
  406299:	sub    eax,DWORD PTR [rbp-0xa8]
  40629f:	mov    edi,eax
  4062a1:	call   4045e7 <main@@Base+0x41a>
  4062a6:	mov    DWORD PTR [rbp-0xc4],eax
  4062ac:	lea    rdx,[rbp-0xa0]
  4062b3:	mov    rax,QWORD PTR [rbp-0xd8]
  4062ba:	mov    rsi,rdx
  4062bd:	mov    rdi,rax
  4062c0:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4062c5:	mov    DWORD PTR [rbp-0xa4],eax
  4062cb:	cmp    DWORD PTR [rbp-0xa4],0x0
  4062d2:	jne    4062f3 <flatcc_builder_create_buffer@@Base+0x41b>
  4062d4:	lea    rcx,[rip+0x5a85]        # 40bd60 <flatcc_builder_padding_base@@Base+0x720>
  4062db:	mov    edx,0x304
  4062e0:	lea    rsi,[rip+0x5559]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4062e7:	lea    rdi,[rip+0x55b2]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  4062ee:	call   4030b0 <__assert_fail@plt>
  4062f3:	mov    eax,DWORD PTR [rbp-0xa4]
  4062f9:	mov    rsi,QWORD PTR [rbp-0x8]
  4062fd:	xor    rsi,QWORD PTR fs:0x28
  406306:	je     40630d <flatcc_builder_create_buffer@@Base+0x435>
  406308:	call   403080 <__stack_chk_fail@plt>
  40630d:	leave  
  40630e:	ret    

000000000040630f <flatcc_builder_create_struct@@Base>:
  40630f:	push   rbp
  406310:	mov    rbp,rsp
  406313:	sub    rsp,0xd0
  40631a:	mov    QWORD PTR [rbp-0xb8],rdi
  406321:	mov    QWORD PTR [rbp-0xc0],rsi
  406328:	mov    QWORD PTR [rbp-0xc8],rdx
  40632f:	mov    eax,ecx
  406331:	mov    WORD PTR [rbp-0xcc],ax
  406338:	mov    rax,QWORD PTR fs:0x28
  406341:	mov    QWORD PTR [rbp-0x8],rax
  406345:	xor    eax,eax
  406347:	cmp    WORD PTR [rbp-0xcc],0x0
  40634f:	jne    406370 <flatcc_builder_create_struct@@Base+0x61>
  406351:	lea    rcx,[rip+0x5a28]        # 40bd80 <flatcc_builder_padding_base@@Base+0x740>
  406358:	mov    edx,0x30f
  40635d:	lea    rsi,[rip+0x54dc]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406364:	lea    rdi,[rip+0x5594]        # 40b8ff <flatcc_builder_padding_base@@Base+0x2bf>
  40636b:	call   4030b0 <__assert_fail@plt>
  406370:	movzx  edx,WORD PTR [rbp-0xcc]
  406377:	mov    rax,QWORD PTR [rbp-0xb8]
  40637e:	mov    esi,edx
  406380:	mov    rdi,rax
  406383:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  406388:	movzx  edx,WORD PTR [rbp-0xcc]
  40638f:	mov    rax,QWORD PTR [rbp-0xc8]
  406396:	mov    ecx,eax
  406398:	mov    rax,QWORD PTR [rbp-0xb8]
  40639f:	mov    esi,ecx
  4063a1:	mov    rdi,rax
  4063a4:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4063a9:	mov    eax,eax
  4063ab:	mov    QWORD PTR [rbp-0xa8],rax
  4063b2:	mov    QWORD PTR [rbp-0xa0],0x0
  4063bd:	mov    DWORD PTR [rbp-0x98],0x0
  4063c7:	cmp    QWORD PTR [rbp-0xc8],0x0
  4063cf:	je     406438 <flatcc_builder_create_struct@@Base+0x129>
  4063d1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4063d8:	mov    rax,QWORD PTR [rbp-0xc8]
  4063df:	add    rax,rdx
  4063e2:	mov    QWORD PTR [rbp-0xa0],rax
  4063e9:	mov    eax,DWORD PTR [rbp-0x98]
  4063ef:	cdqe   
  4063f1:	shl    rax,0x4
  4063f5:	add    rax,rbp
  4063f8:	lea    rdx,[rax-0x90]
  4063ff:	mov    rax,QWORD PTR [rbp-0xc0]
  406406:	mov    QWORD PTR [rdx],rax
  406409:	mov    eax,DWORD PTR [rbp-0x98]
  40640f:	cdqe   
  406411:	shl    rax,0x4
  406415:	add    rax,rbp
  406418:	lea    rdx,[rax-0x88]
  40641f:	mov    rax,QWORD PTR [rbp-0xc8]
  406426:	mov    QWORD PTR [rdx],rax
  406429:	mov    eax,DWORD PTR [rbp-0x98]
  40642f:	add    eax,0x1
  406432:	mov    DWORD PTR [rbp-0x98],eax
  406438:	cmp    QWORD PTR [rbp-0xa8],0x0
  406440:	je     4064a8 <flatcc_builder_create_struct@@Base+0x199>
  406442:	mov    rdx,QWORD PTR [rbp-0xa0]
  406449:	mov    rax,QWORD PTR [rbp-0xa8]
  406450:	add    rax,rdx
  406453:	mov    QWORD PTR [rbp-0xa0],rax
  40645a:	mov    eax,DWORD PTR [rbp-0x98]
  406460:	cdqe   
  406462:	shl    rax,0x4
  406466:	add    rax,rbp
  406469:	sub    rax,0x90
  40646f:	mov    rdx,0x40b640
  406476:	mov    QWORD PTR [rax],rdx
  406479:	mov    eax,DWORD PTR [rbp-0x98]
  40647f:	cdqe   
  406481:	shl    rax,0x4
  406485:	add    rax,rbp
  406488:	lea    rdx,[rax-0x88]
  40648f:	mov    rax,QWORD PTR [rbp-0xa8]
  406496:	mov    QWORD PTR [rdx],rax
  406499:	mov    eax,DWORD PTR [rbp-0x98]
  40649f:	add    eax,0x1
  4064a2:	mov    DWORD PTR [rbp-0x98],eax
  4064a8:	lea    rdx,[rbp-0xa0]
  4064af:	mov    rax,QWORD PTR [rbp-0xb8]
  4064b6:	mov    rsi,rdx
  4064b9:	mov    rdi,rax
  4064bc:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4064c1:	mov    rcx,QWORD PTR [rbp-0x8]
  4064c5:	xor    rcx,QWORD PTR fs:0x28
  4064ce:	je     4064d5 <flatcc_builder_create_struct@@Base+0x1c6>
  4064d0:	call   403080 <__stack_chk_fail@plt>
  4064d5:	leave  
  4064d6:	ret    

00000000004064d7 <flatcc_builder_start_buffer@@Base>:
  4064d7:	push   rbp
  4064d8:	mov    rbp,rsp
  4064db:	sub    rsp,0x20
  4064df:	mov    QWORD PTR [rbp-0x8],rdi
  4064e3:	mov    QWORD PTR [rbp-0x10],rsi
  4064e7:	mov    eax,edx
  4064e9:	mov    DWORD PTR [rbp-0x18],ecx
  4064ec:	mov    WORD PTR [rbp-0x14],ax
  4064f0:	mov    rax,QWORD PTR [rbp-0x8]
  4064f4:	movzx  eax,WORD PTR [rax+0xe8]
  4064fb:	movzx  edx,ax
  4064fe:	mov    rax,QWORD PTR [rbp-0x8]
  406502:	mov    esi,edx
  406504:	mov    rdi,rax
  406507:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40650c:	test   eax,eax
  40650e:	je     40651a <flatcc_builder_start_buffer@@Base+0x43>
  406510:	mov    eax,0xffffffff
  406515:	jmp    40661e <flatcc_builder_start_buffer@@Base+0x147>
  40651a:	mov    rax,QWORD PTR [rbp-0x8]
  40651e:	mov    WORD PTR [rax+0xe8],0x1
  406527:	mov    rax,QWORD PTR [rbp-0x8]
  40652b:	mov    rax,QWORD PTR [rax+0x30]
  40652f:	mov    rdx,QWORD PTR [rbp-0x8]
  406533:	movzx  edx,WORD PTR [rdx+0xec]
  40653a:	mov    WORD PTR [rax+0x22],dx
  40653e:	mov    rax,QWORD PTR [rbp-0x8]
  406542:	movzx  edx,WORD PTR [rbp-0x14]
  406546:	mov    WORD PTR [rax+0xec],dx
  40654d:	mov    rax,QWORD PTR [rbp-0x8]
  406551:	mov    rax,QWORD PTR [rax+0x30]
  406555:	mov    rdx,QWORD PTR [rbp-0x8]
  406559:	movzx  edx,WORD PTR [rdx+0x10c]
  406560:	mov    WORD PTR [rax+0x20],dx
  406564:	mov    eax,DWORD PTR [rbp-0x18]
  406567:	mov    edx,eax
  406569:	mov    rax,QWORD PTR [rbp-0x8]
  40656d:	mov    WORD PTR [rax+0x10c],dx
  406574:	mov    rax,QWORD PTR [rbp-0x8]
  406578:	mov    rax,QWORD PTR [rax+0x30]
  40657c:	mov    rdx,QWORD PTR [rbp-0x8]
  406580:	mov    edx,DWORD PTR [rdx+0xf8]
  406586:	mov    DWORD PTR [rax+0x14],edx
  406589:	mov    rax,QWORD PTR [rbp-0x8]
  40658d:	mov    rax,QWORD PTR [rax+0x30]
  406591:	mov    rdx,QWORD PTR [rbp-0x8]
  406595:	mov    edx,DWORD PTR [rdx+0x100]
  40659b:	mov    DWORD PTR [rax+0x1c],edx
  40659e:	mov    rax,QWORD PTR [rbp-0x8]
  4065a2:	mov    edx,DWORD PTR [rax+0xf0]
  4065a8:	mov    rax,QWORD PTR [rbp-0x8]
  4065ac:	mov    DWORD PTR [rax+0xf8],edx
  4065b2:	mov    rax,QWORD PTR [rbp-0x8]
  4065b6:	mov    eax,DWORD PTR [rax+0xfc]
  4065bc:	lea    ecx,[rax+0x1]
  4065bf:	mov    rdx,QWORD PTR [rbp-0x8]
  4065c3:	mov    DWORD PTR [rdx+0xfc],ecx
  4065c9:	mov    rdx,QWORD PTR [rbp-0x8]
  4065cd:	mov    DWORD PTR [rdx+0x100],eax
  4065d3:	mov    rax,QWORD PTR [rbp-0x8]
  4065d7:	mov    rax,QWORD PTR [rax+0x30]
  4065db:	mov    rdx,QWORD PTR [rbp-0x8]
  4065df:	mov    edx,DWORD PTR [rdx+0x110]
  4065e5:	mov    DWORD PTR [rax+0x10],edx
  4065e8:	cmp    QWORD PTR [rbp-0x10],0x0
  4065ed:	je     4065f5 <flatcc_builder_start_buffer@@Base+0x11e>
  4065ef:	mov    rax,QWORD PTR [rbp-0x10]
  4065f3:	jmp    4065fc <flatcc_builder_start_buffer@@Base+0x125>
  4065f5:	mov    rax,0x40b640
  4065fc:	mov    rdx,QWORD PTR [rbp-0x8]
  406600:	add    rdx,0x110
  406607:	mov    eax,DWORD PTR [rax]
  406609:	mov    DWORD PTR [rdx],eax
  40660b:	mov    rax,QWORD PTR [rbp-0x8]
  40660f:	mov    rax,QWORD PTR [rax+0x30]
  406613:	mov    WORD PTR [rax+0xe],0x1
  406619:	mov    eax,0x0
  40661e:	leave  
  40661f:	ret    

0000000000406620 <flatcc_builder_end_buffer@@Base>:
  406620:	push   rbp
  406621:	mov    rbp,rsp
  406624:	sub    rsp,0x20
  406628:	mov    QWORD PTR [rbp-0x18],rdi
  40662c:	mov    DWORD PTR [rbp-0x1c],esi
  40662f:	mov    rax,QWORD PTR [rbp-0x18]
  406633:	movzx  eax,WORD PTR [rax+0x10c]
  40663a:	movzx  eax,ax
  40663d:	and    eax,0x2
  406640:	mov    DWORD PTR [rbp-0x8],eax
  406643:	mov    rax,QWORD PTR [rbp-0x18]
  406647:	mov    eax,DWORD PTR [rax+0x100]
  40664d:	test   eax,eax
  40664f:	setne  al
  406652:	movzx  eax,al
  406655:	or     DWORD PTR [rbp-0x8],eax
  406658:	mov    rax,QWORD PTR [rbp-0x18]
  40665c:	mov    rax,QWORD PTR [rax+0x30]
  406660:	movzx  eax,WORD PTR [rax+0xe]
  406664:	cmp    ax,0x1
  406668:	je     406689 <flatcc_builder_end_buffer@@Base+0x69>
  40666a:	lea    rcx,[rip+0x572f]        # 40bda0 <flatcc_builder_padding_base@@Base+0x760>
  406671:	mov    edx,0x346
  406676:	lea    rsi,[rip+0x51c3]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40667d:	lea    rdi,[rip+0x528c]        # 40b910 <flatcc_builder_padding_base@@Base+0x2d0>
  406684:	call   4030b0 <__assert_fail@plt>
  406689:	mov    rax,QWORD PTR [rbp-0x18]
  40668d:	movzx  eax,WORD PTR [rax+0xec]
  406694:	movzx  edx,ax
  406697:	mov    rax,QWORD PTR [rbp-0x18]
  40669b:	mov    esi,edx
  40669d:	mov    rdi,rax
  4066a0:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  4066a5:	mov    rax,QWORD PTR [rbp-0x18]
  4066a9:	movzx  eax,WORD PTR [rax+0xe8]
  4066b0:	movzx  edi,ax
  4066b3:	mov    rax,QWORD PTR [rbp-0x18]
  4066b7:	movzx  eax,WORD PTR [rax+0xec]
  4066be:	movzx  edx,ax
  4066c1:	mov    rax,QWORD PTR [rbp-0x18]
  4066c5:	lea    rsi,[rax+0x110]
  4066cc:	mov    r8d,DWORD PTR [rbp-0x8]
  4066d0:	mov    ecx,DWORD PTR [rbp-0x1c]
  4066d3:	mov    rax,QWORD PTR [rbp-0x18]
  4066d7:	mov    r9d,r8d
  4066da:	mov    r8d,edi
  4066dd:	mov    rdi,rax
  4066e0:	call   405ed8 <flatcc_builder_create_buffer@@Base>
  4066e5:	mov    DWORD PTR [rbp-0x4],eax
  4066e8:	cmp    DWORD PTR [rbp-0x4],0x0
  4066ec:	jne    4066f5 <flatcc_builder_end_buffer@@Base+0xd5>
  4066ee:	mov    eax,0x0
  4066f3:	jmp    40675a <flatcc_builder_end_buffer@@Base+0x13a>
  4066f5:	mov    rax,QWORD PTR [rbp-0x18]
  4066f9:	mov    rax,QWORD PTR [rax+0x30]
  4066fd:	mov    edx,DWORD PTR [rax+0x14]
  406700:	mov    rax,QWORD PTR [rbp-0x18]
  406704:	mov    DWORD PTR [rax+0xf8],edx
  40670a:	mov    rax,QWORD PTR [rbp-0x18]
  40670e:	mov    rax,QWORD PTR [rax+0x30]
  406712:	mov    edx,DWORD PTR [rax+0x1c]
  406715:	mov    rax,QWORD PTR [rbp-0x18]
  406719:	mov    DWORD PTR [rax+0x100],edx
  40671f:	mov    rax,QWORD PTR [rbp-0x18]
  406723:	mov    rax,QWORD PTR [rax+0x30]
  406727:	mov    edx,DWORD PTR [rax+0x10]
  40672a:	mov    rax,QWORD PTR [rbp-0x18]
  40672e:	mov    DWORD PTR [rax+0x110],edx
  406734:	mov    rax,QWORD PTR [rbp-0x18]
  406738:	mov    rax,QWORD PTR [rax+0x30]
  40673c:	movzx  edx,WORD PTR [rax+0x20]
  406740:	mov    rax,QWORD PTR [rbp-0x18]
  406744:	mov    WORD PTR [rax+0x10c],dx
  40674b:	mov    rax,QWORD PTR [rbp-0x18]
  40674f:	mov    rdi,rax
  406752:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  406757:	mov    eax,DWORD PTR [rbp-0x4]
  40675a:	leave  
  40675b:	ret    

000000000040675c <flatcc_builder_start_struct@@Base>:
  40675c:	push   rbp
  40675d:	mov    rbp,rsp
  406760:	sub    rsp,0x20
  406764:	mov    QWORD PTR [rbp-0x8],rdi
  406768:	mov    QWORD PTR [rbp-0x10],rsi
  40676c:	mov    eax,edx
  40676e:	mov    WORD PTR [rbp-0x14],ax
  406772:	movzx  edx,WORD PTR [rbp-0x14]
  406776:	mov    rax,QWORD PTR [rbp-0x8]
  40677a:	mov    esi,edx
  40677c:	mov    rdi,rax
  40677f:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406784:	test   eax,eax
  406786:	je     40678f <flatcc_builder_start_struct@@Base+0x33>
  406788:	mov    eax,0x0
  40678d:	jmp    4067c2 <flatcc_builder_start_struct@@Base+0x66>
  40678f:	mov    rax,QWORD PTR [rbp-0x8]
  406793:	mov    rax,QWORD PTR [rax+0x30]
  406797:	mov    WORD PTR [rax+0xe],0x2
  40679d:	mov    rax,QWORD PTR [rbp-0x8]
  4067a1:	mov    esi,0xfffffffc
  4067a6:	mov    rdi,rax
  4067a9:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  4067ae:	mov    rax,QWORD PTR [rbp-0x10]
  4067b2:	mov    edx,eax
  4067b4:	mov    rax,QWORD PTR [rbp-0x8]
  4067b8:	mov    esi,edx
  4067ba:	mov    rdi,rax
  4067bd:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  4067c2:	leave  
  4067c3:	ret    

00000000004067c4 <flatcc_builder_struct_edit@@Base>:
  4067c4:	push   rbp
  4067c5:	mov    rbp,rsp
  4067c8:	mov    QWORD PTR [rbp-0x8],rdi
  4067cc:	mov    rax,QWORD PTR [rbp-0x8]
  4067d0:	mov    rax,QWORD PTR [rax+0x18]
  4067d4:	pop    rbp
  4067d5:	ret    

00000000004067d6 <flatcc_builder_end_struct@@Base>:
  4067d6:	push   rbp
  4067d7:	mov    rbp,rsp
  4067da:	sub    rsp,0x20
  4067de:	mov    QWORD PTR [rbp-0x18],rdi
  4067e2:	mov    rax,QWORD PTR [rbp-0x18]
  4067e6:	mov    rax,QWORD PTR [rax+0x30]
  4067ea:	movzx  eax,WORD PTR [rax+0xe]
  4067ee:	cmp    ax,0x2
  4067f2:	je     406813 <flatcc_builder_end_struct@@Base+0x3d>
  4067f4:	lea    rcx,[rip+0x55c5]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x780>
  4067fb:	mov    edx,0x368
  406800:	lea    rsi,[rip+0x5039]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406807:	lea    rdi,[rip+0x5132]        # 40b940 <flatcc_builder_padding_base@@Base+0x300>
  40680e:	call   4030b0 <__assert_fail@plt>
  406813:	mov    rax,QWORD PTR [rbp-0x18]
  406817:	movzx  eax,WORD PTR [rax+0xea]
  40681e:	movzx  edx,ax
  406821:	mov    rax,QWORD PTR [rbp-0x18]
  406825:	mov    eax,DWORD PTR [rax+0x20]
  406828:	mov    edi,eax
  40682a:	mov    rax,QWORD PTR [rbp-0x18]
  40682e:	mov    rsi,QWORD PTR [rax+0x18]
  406832:	mov    rax,QWORD PTR [rbp-0x18]
  406836:	mov    ecx,edx
  406838:	mov    rdx,rdi
  40683b:	mov    rdi,rax
  40683e:	call   40630f <flatcc_builder_create_struct@@Base>
  406843:	mov    DWORD PTR [rbp-0x4],eax
  406846:	cmp    DWORD PTR [rbp-0x4],0x0
  40684a:	jne    406853 <flatcc_builder_end_struct@@Base+0x7d>
  40684c:	mov    eax,0x0
  406851:	jmp    406862 <flatcc_builder_end_struct@@Base+0x8c>
  406853:	mov    rax,QWORD PTR [rbp-0x18]
  406857:	mov    rdi,rax
  40685a:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40685f:	mov    eax,DWORD PTR [rbp-0x4]
  406862:	leave  
  406863:	ret    
  406864:	push   rbp
  406865:	mov    rbp,rsp
  406868:	sub    rsp,0x20
  40686c:	mov    QWORD PTR [rbp-0x18],rdi
  406870:	mov    DWORD PTR [rbp-0x1c],esi
  406873:	mov    DWORD PTR [rbp-0x20],edx
  406876:	mov    rax,QWORD PTR [rbp-0x18]
  40687a:	mov    rax,QWORD PTR [rax+0x30]
  40687e:	mov    eax,DWORD PTR [rax+0x14]
  406881:	mov    DWORD PTR [rbp-0x8],eax
  406884:	mov    edx,DWORD PTR [rbp-0x8]
  406887:	mov    eax,DWORD PTR [rbp-0x1c]
  40688a:	add    eax,edx
  40688c:	mov    DWORD PTR [rbp-0x4],eax
  40688f:	mov    eax,DWORD PTR [rbp-0x8]
  406892:	cmp    eax,DWORD PTR [rbp-0x4]
  406895:	ja     40689f <flatcc_builder_end_struct@@Base+0xc9>
  406897:	mov    eax,DWORD PTR [rbp-0x4]
  40689a:	cmp    eax,DWORD PTR [rbp-0x20]
  40689d:	jbe    4068d5 <flatcc_builder_end_struct@@Base+0xff>
  40689f:	mov    eax,DWORD PTR [rbp-0x8]
  4068a2:	cmp    eax,DWORD PTR [rbp-0x4]
  4068a5:	ja     4068af <flatcc_builder_end_struct@@Base+0xd9>
  4068a7:	mov    eax,DWORD PTR [rbp-0x4]
  4068aa:	cmp    eax,DWORD PTR [rbp-0x20]
  4068ad:	jbe    4068ce <flatcc_builder_end_struct@@Base+0xf8>
  4068af:	lea    rcx,[rip+0x552a]        # 40bde0 <flatcc_builder_padding_base@@Base+0x7a0>
  4068b6:	mov    edx,0x37c
  4068bb:	lea    rsi,[rip+0x4f7e]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4068c2:	lea    rdi,[rip+0x50a3]        # 40b96c <flatcc_builder_padding_base@@Base+0x32c>
  4068c9:	call   4030b0 <__assert_fail@plt>
  4068ce:	mov    eax,0xffffffff
  4068d3:	jmp    4068e8 <flatcc_builder_end_struct@@Base+0x112>
  4068d5:	mov    rax,QWORD PTR [rbp-0x18]
  4068d9:	mov    rax,QWORD PTR [rax+0x30]
  4068dd:	mov    edx,DWORD PTR [rbp-0x4]
  4068e0:	mov    DWORD PTR [rax+0x14],edx
  4068e3:	mov    eax,0x0
  4068e8:	leave  
  4068e9:	ret    

00000000004068ea <flatcc_builder_extend_vector@@Base>:
  4068ea:	push   rbp
  4068eb:	mov    rbp,rsp
  4068ee:	sub    rsp,0x10
  4068f2:	mov    QWORD PTR [rbp-0x8],rdi
  4068f6:	mov    QWORD PTR [rbp-0x10],rsi
  4068fa:	mov    rax,QWORD PTR [rbp-0x8]
  4068fe:	mov    rax,QWORD PTR [rax+0x30]
  406902:	mov    edx,DWORD PTR [rax+0x18]
  406905:	mov    rax,QWORD PTR [rbp-0x10]
  406909:	mov    ecx,eax
  40690b:	mov    rax,QWORD PTR [rbp-0x8]
  40690f:	mov    esi,ecx
  406911:	mov    rdi,rax
  406914:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406919:	test   eax,eax
  40691b:	je     406924 <flatcc_builder_extend_vector@@Base+0x3a>
  40691d:	mov    eax,0x0
  406922:	jmp    406944 <flatcc_builder_extend_vector@@Base+0x5a>
  406924:	mov    rax,QWORD PTR [rbp-0x8]
  406928:	mov    rax,QWORD PTR [rax+0x30]
  40692c:	mov    eax,DWORD PTR [rax+0x10]
  40692f:	mov    rdx,QWORD PTR [rbp-0x10]
  406933:	imul   edx,eax
  406936:	mov    rax,QWORD PTR [rbp-0x8]
  40693a:	mov    esi,edx
  40693c:	mov    rdi,rax
  40693f:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  406944:	leave  
  406945:	ret    

0000000000406946 <flatcc_builder_vector_push@@Base>:
  406946:	push   rbp
  406947:	mov    rbp,rsp
  40694a:	sub    rsp,0x10
  40694e:	mov    QWORD PTR [rbp-0x8],rdi
  406952:	mov    QWORD PTR [rbp-0x10],rsi
  406956:	mov    rax,QWORD PTR [rbp-0x8]
  40695a:	mov    rax,QWORD PTR [rax+0x30]
  40695e:	movzx  eax,WORD PTR [rax+0xe]
  406962:	cmp    ax,0x4
  406966:	je     406987 <flatcc_builder_vector_push@@Base+0x41>
  406968:	lea    rcx,[rip+0x5491]        # 40be00 <flatcc_builder_padding_base@@Base+0x7c0>
  40696f:	mov    edx,0x38b
  406974:	lea    rsi,[rip+0x4ec5]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40697b:	lea    rdi,[rip+0x5006]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406982:	call   4030b0 <__assert_fail@plt>
  406987:	mov    rax,QWORD PTR [rbp-0x8]
  40698b:	mov    rax,QWORD PTR [rax+0x30]
  40698f:	mov    edx,DWORD PTR [rax+0x14]
  406992:	mov    rax,QWORD PTR [rbp-0x8]
  406996:	mov    rax,QWORD PTR [rax+0x30]
  40699a:	mov    eax,DWORD PTR [rax+0x18]
  40699d:	cmp    edx,eax
  40699f:	jbe    4069e1 <flatcc_builder_vector_push@@Base+0x9b>
  4069a1:	mov    rax,QWORD PTR [rbp-0x8]
  4069a5:	mov    rax,QWORD PTR [rax+0x30]
  4069a9:	mov    edx,DWORD PTR [rax+0x14]
  4069ac:	mov    rax,QWORD PTR [rbp-0x8]
  4069b0:	mov    rax,QWORD PTR [rax+0x30]
  4069b4:	mov    eax,DWORD PTR [rax+0x18]
  4069b7:	cmp    edx,eax
  4069b9:	jbe    4069da <flatcc_builder_vector_push@@Base+0x94>
  4069bb:	lea    rcx,[rip+0x543e]        # 40be00 <flatcc_builder_padding_base@@Base+0x7c0>
  4069c2:	mov    edx,0x38c
  4069c7:	lea    rsi,[rip+0x4e72]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4069ce:	lea    rdi,[rip+0x4fe3]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x378>
  4069d5:	call   4030b0 <__assert_fail@plt>
  4069da:	mov    eax,0x0
  4069df:	jmp    406a18 <flatcc_builder_vector_push@@Base+0xd2>
  4069e1:	mov    rax,QWORD PTR [rbp-0x8]
  4069e5:	mov    rax,QWORD PTR [rax+0x30]
  4069e9:	mov    rdx,QWORD PTR [rbp-0x8]
  4069ed:	mov    rdx,QWORD PTR [rdx+0x30]
  4069f1:	mov    edx,DWORD PTR [rdx+0x14]
  4069f4:	add    edx,0x1
  4069f7:	mov    DWORD PTR [rax+0x14],edx
  4069fa:	mov    rax,QWORD PTR [rbp-0x8]
  4069fe:	mov    rax,QWORD PTR [rax+0x30]
  406a02:	mov    edx,DWORD PTR [rax+0x10]
  406a05:	mov    rcx,QWORD PTR [rbp-0x10]
  406a09:	mov    rax,QWORD PTR [rbp-0x8]
  406a0d:	mov    rsi,rcx
  406a10:	mov    rdi,rax
  406a13:	call   4049d6 <flatcc_builder_default_alloc@@Base+0x329>
  406a18:	leave  
  406a19:	ret    

0000000000406a1a <flatcc_builder_append_vector@@Base>:
  406a1a:	push   rbp
  406a1b:	mov    rbp,rsp
  406a1e:	sub    rsp,0x20
  406a22:	mov    QWORD PTR [rbp-0x8],rdi
  406a26:	mov    QWORD PTR [rbp-0x10],rsi
  406a2a:	mov    QWORD PTR [rbp-0x18],rdx
  406a2e:	mov    rax,QWORD PTR [rbp-0x8]
  406a32:	mov    rax,QWORD PTR [rax+0x30]
  406a36:	movzx  eax,WORD PTR [rax+0xe]
  406a3a:	cmp    ax,0x4
  406a3e:	je     406a5f <flatcc_builder_append_vector@@Base+0x45>
  406a40:	lea    rcx,[rip+0x53d9]        # 40be20 <flatcc_builder_padding_base@@Base+0x7e0>
  406a47:	mov    edx,0x393
  406a4c:	lea    rsi,[rip+0x4ded]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406a53:	lea    rdi,[rip+0x4f2e]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406a5a:	call   4030b0 <__assert_fail@plt>
  406a5f:	mov    rax,QWORD PTR [rbp-0x8]
  406a63:	mov    rax,QWORD PTR [rax+0x30]
  406a67:	mov    edx,DWORD PTR [rax+0x18]
  406a6a:	mov    rax,QWORD PTR [rbp-0x18]
  406a6e:	mov    ecx,eax
  406a70:	mov    rax,QWORD PTR [rbp-0x8]
  406a74:	mov    esi,ecx
  406a76:	mov    rdi,rax
  406a79:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406a7e:	test   eax,eax
  406a80:	je     406a89 <flatcc_builder_append_vector@@Base+0x6f>
  406a82:	mov    eax,0x0
  406a87:	jmp    406aae <flatcc_builder_append_vector@@Base+0x94>
  406a89:	mov    rax,QWORD PTR [rbp-0x8]
  406a8d:	mov    rax,QWORD PTR [rax+0x30]
  406a91:	mov    eax,DWORD PTR [rax+0x10]
  406a94:	mov    rdx,QWORD PTR [rbp-0x18]
  406a98:	imul   edx,eax
  406a9b:	mov    rcx,QWORD PTR [rbp-0x10]
  406a9f:	mov    rax,QWORD PTR [rbp-0x8]
  406aa3:	mov    rsi,rcx
  406aa6:	mov    rdi,rax
  406aa9:	call   4049d6 <flatcc_builder_default_alloc@@Base+0x329>
  406aae:	leave  
  406aaf:	ret    

0000000000406ab0 <flatcc_builder_extend_offset_vector@@Base>:
  406ab0:	push   rbp
  406ab1:	mov    rbp,rsp
  406ab4:	sub    rsp,0x10
  406ab8:	mov    QWORD PTR [rbp-0x8],rdi
  406abc:	mov    QWORD PTR [rbp-0x10],rsi
  406ac0:	mov    rax,QWORD PTR [rbp-0x10]
  406ac4:	mov    ecx,eax
  406ac6:	mov    rax,QWORD PTR [rbp-0x8]
  406aca:	mov    edx,0x3fffffff
  406acf:	mov    esi,ecx
  406ad1:	mov    rdi,rax
  406ad4:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406ad9:	test   eax,eax
  406adb:	je     406ae4 <flatcc_builder_extend_offset_vector@@Base+0x34>
  406add:	mov    eax,0x0
  406ae2:	jmp    406afd <flatcc_builder_extend_offset_vector@@Base+0x4d>
  406ae4:	mov    rax,QWORD PTR [rbp-0x10]
  406ae8:	lea    edx,[rax*4+0x0]
  406aef:	mov    rax,QWORD PTR [rbp-0x8]
  406af3:	mov    esi,edx
  406af5:	mov    rdi,rax
  406af8:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  406afd:	leave  
  406afe:	ret    

0000000000406aff <flatcc_builder_offset_vector_push@@Base>:
  406aff:	push   rbp
  406b00:	mov    rbp,rsp
  406b03:	sub    rsp,0x20
  406b07:	mov    QWORD PTR [rbp-0x18],rdi
  406b0b:	mov    DWORD PTR [rbp-0x1c],esi
  406b0e:	mov    rax,QWORD PTR [rbp-0x18]
  406b12:	mov    rax,QWORD PTR [rax+0x30]
  406b16:	movzx  eax,WORD PTR [rax+0xe]
  406b1a:	cmp    ax,0x5
  406b1e:	je     406b3f <flatcc_builder_offset_vector_push@@Base+0x40>
  406b20:	lea    rcx,[rip+0x5319]        # 40be40 <flatcc_builder_padding_base@@Base+0x800>
  406b27:	mov    edx,0x3a6
  406b2c:	lea    rsi,[rip+0x4d0d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406b33:	lea    rdi,[rip+0x4ebe]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  406b3a:	call   4030b0 <__assert_fail@plt>
  406b3f:	mov    rax,QWORD PTR [rbp-0x18]
  406b43:	mov    rax,QWORD PTR [rax+0x30]
  406b47:	mov    eax,DWORD PTR [rax+0x14]
  406b4a:	cmp    eax,0x3fffffff
  406b4f:	jne    406b58 <flatcc_builder_offset_vector_push@@Base+0x59>
  406b51:	mov    eax,0x0
  406b56:	jmp    406ba1 <flatcc_builder_offset_vector_push@@Base+0xa2>
  406b58:	mov    rax,QWORD PTR [rbp-0x18]
  406b5c:	mov    rax,QWORD PTR [rax+0x30]
  406b60:	mov    rdx,QWORD PTR [rbp-0x18]
  406b64:	mov    rdx,QWORD PTR [rdx+0x30]
  406b68:	mov    edx,DWORD PTR [rdx+0x14]
  406b6b:	add    edx,0x1
  406b6e:	mov    DWORD PTR [rax+0x14],edx
  406b71:	mov    rax,QWORD PTR [rbp-0x18]
  406b75:	mov    esi,0x4
  406b7a:	mov    rdi,rax
  406b7d:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  406b82:	mov    QWORD PTR [rbp-0x8],rax
  406b86:	cmp    QWORD PTR [rbp-0x8],0x0
  406b8b:	jne    406b94 <flatcc_builder_offset_vector_push@@Base+0x95>
  406b8d:	mov    eax,0x0
  406b92:	jmp    406ba1 <flatcc_builder_offset_vector_push@@Base+0xa2>
  406b94:	mov    rax,QWORD PTR [rbp-0x8]
  406b98:	mov    edx,DWORD PTR [rbp-0x1c]
  406b9b:	mov    DWORD PTR [rax],edx
  406b9d:	mov    rax,QWORD PTR [rbp-0x8]
  406ba1:	leave  
  406ba2:	ret    

0000000000406ba3 <flatcc_builder_append_offset_vector@@Base>:
  406ba3:	push   rbp
  406ba4:	mov    rbp,rsp
  406ba7:	sub    rsp,0x20
  406bab:	mov    QWORD PTR [rbp-0x8],rdi
  406baf:	mov    QWORD PTR [rbp-0x10],rsi
  406bb3:	mov    QWORD PTR [rbp-0x18],rdx
  406bb7:	mov    rax,QWORD PTR [rbp-0x8]
  406bbb:	mov    rax,QWORD PTR [rax+0x30]
  406bbf:	movzx  eax,WORD PTR [rax+0xe]
  406bc3:	cmp    ax,0x5
  406bc7:	je     406be8 <flatcc_builder_append_offset_vector@@Base+0x45>
  406bc9:	lea    rcx,[rip+0x52b0]        # 40be80 <flatcc_builder_padding_base@@Base+0x840>
  406bd0:	mov    edx,0x3b4
  406bd5:	lea    rsi,[rip+0x4c64]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406bdc:	lea    rdi,[rip+0x4e15]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  406be3:	call   4030b0 <__assert_fail@plt>
  406be8:	mov    rax,QWORD PTR [rbp-0x18]
  406bec:	mov    ecx,eax
  406bee:	mov    rax,QWORD PTR [rbp-0x8]
  406bf2:	mov    edx,0x3fffffff
  406bf7:	mov    esi,ecx
  406bf9:	mov    rdi,rax
  406bfc:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406c01:	test   eax,eax
  406c03:	je     406c0c <flatcc_builder_append_offset_vector@@Base+0x69>
  406c05:	mov    eax,0x0
  406c0a:	jmp    406c2a <flatcc_builder_append_offset_vector@@Base+0x87>
  406c0c:	mov    rax,QWORD PTR [rbp-0x18]
  406c10:	lea    edx,[rax*4+0x0]
  406c17:	mov    rcx,QWORD PTR [rbp-0x10]
  406c1b:	mov    rax,QWORD PTR [rbp-0x8]
  406c1f:	mov    rsi,rcx
  406c22:	mov    rdi,rax
  406c25:	call   4049d6 <flatcc_builder_default_alloc@@Base+0x329>
  406c2a:	leave  
  406c2b:	ret    

0000000000406c2c <flatcc_builder_extend_string@@Base>:
  406c2c:	push   rbp
  406c2d:	mov    rbp,rsp
  406c30:	sub    rsp,0x10
  406c34:	mov    QWORD PTR [rbp-0x8],rdi
  406c38:	mov    QWORD PTR [rbp-0x10],rsi
  406c3c:	mov    rax,QWORD PTR [rbp-0x8]
  406c40:	mov    rax,QWORD PTR [rax+0x30]
  406c44:	movzx  eax,WORD PTR [rax+0xe]
  406c48:	cmp    ax,0x6
  406c4c:	je     406c6d <flatcc_builder_extend_string@@Base+0x41>
  406c4e:	lea    rcx,[rip+0x525b]        # 40beb0 <flatcc_builder_padding_base@@Base+0x870>
  406c55:	mov    edx,0x3bd
  406c5a:	lea    rsi,[rip+0x4bdf]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406c61:	lea    rdi,[rip+0x4dc8]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  406c68:	call   4030b0 <__assert_fail@plt>
  406c6d:	mov    rax,QWORD PTR [rbp-0x10]
  406c71:	mov    ecx,eax
  406c73:	mov    rax,QWORD PTR [rbp-0x8]
  406c77:	mov    edx,0xffffffff
  406c7c:	mov    esi,ecx
  406c7e:	mov    rdi,rax
  406c81:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406c86:	test   eax,eax
  406c88:	je     406c91 <flatcc_builder_extend_string@@Base+0x65>
  406c8a:	mov    eax,0x0
  406c8f:	jmp    406ca5 <flatcc_builder_extend_string@@Base+0x79>
  406c91:	mov    rax,QWORD PTR [rbp-0x10]
  406c95:	mov    edx,eax
  406c97:	mov    rax,QWORD PTR [rbp-0x8]
  406c9b:	mov    esi,edx
  406c9d:	mov    rdi,rax
  406ca0:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  406ca5:	leave  
  406ca6:	ret    

0000000000406ca7 <flatcc_builder_append_string@@Base>:
  406ca7:	push   rbp
  406ca8:	mov    rbp,rsp
  406cab:	sub    rsp,0x20
  406caf:	mov    QWORD PTR [rbp-0x8],rdi
  406cb3:	mov    QWORD PTR [rbp-0x10],rsi
  406cb7:	mov    QWORD PTR [rbp-0x18],rdx
  406cbb:	mov    rax,QWORD PTR [rbp-0x8]
  406cbf:	mov    rax,QWORD PTR [rax+0x30]
  406cc3:	movzx  eax,WORD PTR [rax+0xe]
  406cc7:	cmp    ax,0x6
  406ccb:	je     406cec <flatcc_builder_append_string@@Base+0x45>
  406ccd:	lea    rcx,[rip+0x51fc]        # 40bed0 <flatcc_builder_padding_base@@Base+0x890>
  406cd4:	mov    edx,0x3c6
  406cd9:	lea    rsi,[rip+0x4b60]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406ce0:	lea    rdi,[rip+0x4d49]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  406ce7:	call   4030b0 <__assert_fail@plt>
  406cec:	mov    rax,QWORD PTR [rbp-0x18]
  406cf0:	mov    ecx,eax
  406cf2:	mov    rax,QWORD PTR [rbp-0x8]
  406cf6:	mov    edx,0xffffffff
  406cfb:	mov    esi,ecx
  406cfd:	mov    rdi,rax
  406d00:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  406d05:	test   eax,eax
  406d07:	je     406d10 <flatcc_builder_append_string@@Base+0x69>
  406d09:	mov    eax,0x0
  406d0e:	jmp    406d29 <flatcc_builder_append_string@@Base+0x82>
  406d10:	mov    rax,QWORD PTR [rbp-0x18]
  406d14:	mov    edx,eax
  406d16:	mov    rcx,QWORD PTR [rbp-0x10]
  406d1a:	mov    rax,QWORD PTR [rbp-0x8]
  406d1e:	mov    rsi,rcx
  406d21:	mov    rdi,rax
  406d24:	call   4049d6 <flatcc_builder_default_alloc@@Base+0x329>
  406d29:	leave  
  406d2a:	ret    

0000000000406d2b <flatcc_builder_append_string_str@@Base>:
  406d2b:	push   rbp
  406d2c:	mov    rbp,rsp
  406d2f:	sub    rsp,0x10
  406d33:	mov    QWORD PTR [rbp-0x8],rdi
  406d37:	mov    QWORD PTR [rbp-0x10],rsi
  406d3b:	mov    rax,QWORD PTR [rbp-0x10]
  406d3f:	mov    rdi,rax
  406d42:	call   403070 <strlen@plt>
  406d47:	mov    rdx,rax
  406d4a:	mov    rcx,QWORD PTR [rbp-0x10]
  406d4e:	mov    rax,QWORD PTR [rbp-0x8]
  406d52:	mov    rsi,rcx
  406d55:	mov    rdi,rax
  406d58:	call   406ca7 <flatcc_builder_append_string@@Base>
  406d5d:	leave  
  406d5e:	ret    

0000000000406d5f <flatcc_builder_append_string_strn@@Base>:
  406d5f:	push   rbp
  406d60:	mov    rbp,rsp
  406d63:	sub    rsp,0x20
  406d67:	mov    QWORD PTR [rbp-0x8],rdi
  406d6b:	mov    QWORD PTR [rbp-0x10],rsi
  406d6f:	mov    QWORD PTR [rbp-0x18],rdx
  406d73:	mov    rdx,QWORD PTR [rbp-0x18]
  406d77:	mov    rax,QWORD PTR [rbp-0x10]
  406d7b:	mov    rsi,rdx
  406d7e:	mov    rdi,rax
  406d81:	call   404667 <main@@Base+0x49a>
  406d86:	mov    rdx,rax
  406d89:	mov    rcx,QWORD PTR [rbp-0x10]
  406d8d:	mov    rax,QWORD PTR [rbp-0x8]
  406d91:	mov    rsi,rcx
  406d94:	mov    rdi,rax
  406d97:	call   406ca7 <flatcc_builder_append_string@@Base>
  406d9c:	leave  
  406d9d:	ret    

0000000000406d9e <flatcc_builder_truncate_vector@@Base>:
  406d9e:	push   rbp
  406d9f:	mov    rbp,rsp
  406da2:	sub    rsp,0x10
  406da6:	mov    QWORD PTR [rbp-0x8],rdi
  406daa:	mov    QWORD PTR [rbp-0x10],rsi
  406dae:	mov    rax,QWORD PTR [rbp-0x8]
  406db2:	mov    rax,QWORD PTR [rax+0x30]
  406db6:	movzx  eax,WORD PTR [rax+0xe]
  406dba:	cmp    ax,0x4
  406dbe:	je     406ddf <flatcc_builder_truncate_vector@@Base+0x41>
  406dc0:	lea    rcx,[rip+0x5129]        # 40bef0 <flatcc_builder_padding_base@@Base+0x8b0>
  406dc7:	mov    edx,0x3d9
  406dcc:	lea    rsi,[rip+0x4a6d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406dd3:	lea    rdi,[rip+0x4bae]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406dda:	call   4030b0 <__assert_fail@plt>
  406ddf:	mov    rax,QWORD PTR [rbp-0x8]
  406de3:	mov    rax,QWORD PTR [rax+0x30]
  406de7:	mov    eax,DWORD PTR [rax+0x14]
  406dea:	mov    eax,eax
  406dec:	cmp    rax,QWORD PTR [rbp-0x10]
  406df0:	jae    406e2b <flatcc_builder_truncate_vector@@Base+0x8d>
  406df2:	mov    rax,QWORD PTR [rbp-0x8]
  406df6:	mov    rax,QWORD PTR [rax+0x30]
  406dfa:	mov    eax,DWORD PTR [rax+0x14]
  406dfd:	mov    eax,eax
  406dff:	cmp    rax,QWORD PTR [rbp-0x10]
  406e03:	jae    406e24 <flatcc_builder_truncate_vector@@Base+0x86>
  406e05:	lea    rcx,[rip+0x50e4]        # 40bef0 <flatcc_builder_padding_base@@Base+0x8b0>
  406e0c:	mov    edx,0x3da
  406e11:	lea    rsi,[rip+0x4a28]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406e18:	lea    rdi,[rip+0x4c41]        # 40ba60 <flatcc_builder_padding_base@@Base+0x420>
  406e1f:	call   4030b0 <__assert_fail@plt>
  406e24:	mov    eax,0xffffffff
  406e29:	jmp    406e6c <flatcc_builder_truncate_vector@@Base+0xce>
  406e2b:	mov    rax,QWORD PTR [rbp-0x8]
  406e2f:	mov    rax,QWORD PTR [rax+0x30]
  406e33:	mov    rdx,QWORD PTR [rbp-0x8]
  406e37:	mov    rdx,QWORD PTR [rdx+0x30]
  406e3b:	mov    edx,DWORD PTR [rdx+0x14]
  406e3e:	mov    rcx,QWORD PTR [rbp-0x10]
  406e42:	sub    edx,ecx
  406e44:	mov    DWORD PTR [rax+0x14],edx
  406e47:	mov    rax,QWORD PTR [rbp-0x8]
  406e4b:	mov    rax,QWORD PTR [rax+0x30]
  406e4f:	mov    eax,DWORD PTR [rax+0x10]
  406e52:	mov    rdx,QWORD PTR [rbp-0x10]
  406e56:	imul   edx,eax
  406e59:	mov    rax,QWORD PTR [rbp-0x8]
  406e5d:	mov    esi,edx
  406e5f:	mov    rdi,rax
  406e62:	call   40498a <flatcc_builder_default_alloc@@Base+0x2dd>
  406e67:	mov    eax,0x0
  406e6c:	leave  
  406e6d:	ret    

0000000000406e6e <flatcc_builder_truncate_offset_vector@@Base>:
  406e6e:	push   rbp
  406e6f:	mov    rbp,rsp
  406e72:	sub    rsp,0x10
  406e76:	mov    QWORD PTR [rbp-0x8],rdi
  406e7a:	mov    QWORD PTR [rbp-0x10],rsi
  406e7e:	mov    rax,QWORD PTR [rbp-0x8]
  406e82:	mov    rax,QWORD PTR [rax+0x30]
  406e86:	movzx  eax,WORD PTR [rax+0xe]
  406e8a:	cmp    ax,0x5
  406e8e:	je     406eaf <flatcc_builder_truncate_offset_vector@@Base+0x41>
  406e90:	lea    rcx,[rip+0x5089]        # 40bf20 <flatcc_builder_padding_base@@Base+0x8e0>
  406e97:	mov    edx,0x3e2
  406e9c:	lea    rsi,[rip+0x499d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406ea3:	lea    rdi,[rip+0x4b4e]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  406eaa:	call   4030b0 <__assert_fail@plt>
  406eaf:	mov    rax,QWORD PTR [rbp-0x8]
  406eb3:	mov    rax,QWORD PTR [rax+0x30]
  406eb7:	mov    eax,DWORD PTR [rax+0x14]
  406eba:	mov    rdx,QWORD PTR [rbp-0x10]
  406ebe:	cmp    eax,edx
  406ec0:	jae    406efb <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  406ec2:	mov    rax,QWORD PTR [rbp-0x8]
  406ec6:	mov    rax,QWORD PTR [rax+0x30]
  406eca:	mov    eax,DWORD PTR [rax+0x14]
  406ecd:	mov    rdx,QWORD PTR [rbp-0x10]
  406ed1:	cmp    eax,edx
  406ed3:	jae    406ef4 <flatcc_builder_truncate_offset_vector@@Base+0x86>
  406ed5:	lea    rcx,[rip+0x5044]        # 40bf20 <flatcc_builder_padding_base@@Base+0x8e0>
  406edc:	mov    edx,0x3e3
  406ee1:	lea    rsi,[rip+0x4958]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406ee8:	lea    rdi,[rip+0x4b99]        # 40ba88 <flatcc_builder_padding_base@@Base+0x448>
  406eef:	call   4030b0 <__assert_fail@plt>
  406ef4:	mov    eax,0xffffffff
  406ef9:	jmp    406f3c <flatcc_builder_truncate_offset_vector@@Base+0xce>
  406efb:	mov    rax,QWORD PTR [rbp-0x8]
  406eff:	mov    rax,QWORD PTR [rax+0x30]
  406f03:	mov    rdx,QWORD PTR [rbp-0x8]
  406f07:	mov    rdx,QWORD PTR [rdx+0x30]
  406f0b:	mov    edx,DWORD PTR [rdx+0x14]
  406f0e:	mov    rcx,QWORD PTR [rbp-0x10]
  406f12:	sub    edx,ecx
  406f14:	mov    DWORD PTR [rax+0x14],edx
  406f17:	mov    rax,QWORD PTR [rbp-0x8]
  406f1b:	mov    rax,QWORD PTR [rax+0x30]
  406f1f:	mov    eax,DWORD PTR [rax+0x10]
  406f22:	mov    rdx,QWORD PTR [rbp-0x10]
  406f26:	imul   edx,eax
  406f29:	mov    rax,QWORD PTR [rbp-0x8]
  406f2d:	mov    esi,edx
  406f2f:	mov    rdi,rax
  406f32:	call   40498a <flatcc_builder_default_alloc@@Base+0x2dd>
  406f37:	mov    eax,0x0
  406f3c:	leave  
  406f3d:	ret    

0000000000406f3e <flatcc_builder_truncate_string@@Base>:
  406f3e:	push   rbp
  406f3f:	mov    rbp,rsp
  406f42:	sub    rsp,0x10
  406f46:	mov    QWORD PTR [rbp-0x8],rdi
  406f4a:	mov    QWORD PTR [rbp-0x10],rsi
  406f4e:	mov    rax,QWORD PTR [rbp-0x8]
  406f52:	mov    rax,QWORD PTR [rax+0x30]
  406f56:	movzx  eax,WORD PTR [rax+0xe]
  406f5a:	cmp    ax,0x6
  406f5e:	je     406f7f <flatcc_builder_truncate_string@@Base+0x41>
  406f60:	lea    rcx,[rip+0x4fe9]        # 40bf50 <flatcc_builder_padding_base@@Base+0x910>
  406f67:	mov    edx,0x3eb
  406f6c:	lea    rsi,[rip+0x48cd]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406f73:	lea    rdi,[rip+0x4ab6]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  406f7a:	call   4030b0 <__assert_fail@plt>
  406f7f:	mov    rax,QWORD PTR [rbp-0x8]
  406f83:	mov    rax,QWORD PTR [rax+0x30]
  406f87:	mov    eax,DWORD PTR [rax+0x14]
  406f8a:	mov    eax,eax
  406f8c:	cmp    rax,QWORD PTR [rbp-0x10]
  406f90:	jae    406fcb <flatcc_builder_truncate_string@@Base+0x8d>
  406f92:	mov    rax,QWORD PTR [rbp-0x8]
  406f96:	mov    rax,QWORD PTR [rax+0x30]
  406f9a:	mov    eax,DWORD PTR [rax+0x14]
  406f9d:	mov    eax,eax
  406f9f:	cmp    rax,QWORD PTR [rbp-0x10]
  406fa3:	jae    406fc4 <flatcc_builder_truncate_string@@Base+0x86>
  406fa5:	lea    rcx,[rip+0x4fa4]        # 40bf50 <flatcc_builder_padding_base@@Base+0x910>
  406fac:	mov    edx,0x3ec
  406fb1:	lea    rsi,[rip+0x4888]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406fb8:	lea    rdi,[rip+0x4b09]        # 40bac8 <flatcc_builder_padding_base@@Base+0x488>
  406fbf:	call   4030b0 <__assert_fail@plt>
  406fc4:	mov    eax,0xffffffff
  406fc9:	jmp    407000 <flatcc_builder_truncate_string@@Base+0xc2>
  406fcb:	mov    rax,QWORD PTR [rbp-0x8]
  406fcf:	mov    rax,QWORD PTR [rax+0x30]
  406fd3:	mov    rdx,QWORD PTR [rbp-0x8]
  406fd7:	mov    rdx,QWORD PTR [rdx+0x30]
  406fdb:	mov    edx,DWORD PTR [rdx+0x14]
  406fde:	mov    rcx,QWORD PTR [rbp-0x10]
  406fe2:	sub    edx,ecx
  406fe4:	mov    DWORD PTR [rax+0x14],edx
  406fe7:	mov    rax,QWORD PTR [rbp-0x10]
  406feb:	mov    edx,eax
  406fed:	mov    rax,QWORD PTR [rbp-0x8]
  406ff1:	mov    esi,edx
  406ff3:	mov    rdi,rax
  406ff6:	call   40498a <flatcc_builder_default_alloc@@Base+0x2dd>
  406ffb:	mov    eax,0x0
  407000:	leave  
  407001:	ret    

0000000000407002 <flatcc_builder_start_vector@@Base>:
  407002:	push   rbp
  407003:	mov    rbp,rsp
  407006:	sub    rsp,0x20
  40700a:	mov    QWORD PTR [rbp-0x8],rdi
  40700e:	mov    QWORD PTR [rbp-0x10],rsi
  407012:	mov    eax,edx
  407014:	mov    QWORD PTR [rbp-0x20],rcx
  407018:	mov    WORD PTR [rbp-0x14],ax
  40701c:	lea    rax,[rbp-0x14]
  407020:	mov    esi,0x4
  407025:	mov    rdi,rax
  407028:	call   405328 <flatcc_builder_clear@@Base+0xc7>
  40702d:	movzx  eax,WORD PTR [rbp-0x14]
  407031:	movzx  edx,ax
  407034:	mov    rax,QWORD PTR [rbp-0x8]
  407038:	mov    esi,edx
  40703a:	mov    rdi,rax
  40703d:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407042:	test   eax,eax
  407044:	je     40704d <flatcc_builder_start_vector@@Base+0x4b>
  407046:	mov    eax,0xffffffff
  40704b:	jmp    40709e <flatcc_builder_start_vector@@Base+0x9c>
  40704d:	mov    rax,QWORD PTR [rbp-0x8]
  407051:	mov    rax,QWORD PTR [rax+0x30]
  407055:	mov    rdx,QWORD PTR [rbp-0x10]
  407059:	mov    DWORD PTR [rax+0x10],edx
  40705c:	mov    rax,QWORD PTR [rbp-0x8]
  407060:	mov    rax,QWORD PTR [rax+0x30]
  407064:	mov    DWORD PTR [rax+0x14],0x0
  40706b:	mov    rax,QWORD PTR [rbp-0x8]
  40706f:	mov    rax,QWORD PTR [rax+0x30]
  407073:	mov    rdx,QWORD PTR [rbp-0x20]
  407077:	mov    DWORD PTR [rax+0x18],edx
  40707a:	mov    rax,QWORD PTR [rbp-0x8]
  40707e:	mov    rax,QWORD PTR [rax+0x30]
  407082:	mov    WORD PTR [rax+0xe],0x4
  407088:	mov    rax,QWORD PTR [rbp-0x8]
  40708c:	mov    esi,0xfffffffc
  407091:	mov    rdi,rax
  407094:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  407099:	mov    eax,0x0
  40709e:	leave  
  40709f:	ret    

00000000004070a0 <flatcc_builder_start_offset_vector@@Base>:
  4070a0:	push   rbp
  4070a1:	mov    rbp,rsp
  4070a4:	sub    rsp,0x10
  4070a8:	mov    QWORD PTR [rbp-0x8],rdi
  4070ac:	mov    rax,QWORD PTR [rbp-0x8]
  4070b0:	mov    esi,0x4
  4070b5:	mov    rdi,rax
  4070b8:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4070bd:	test   eax,eax
  4070bf:	je     4070c8 <flatcc_builder_start_offset_vector@@Base+0x28>
  4070c1:	mov    eax,0xffffffff
  4070c6:	jmp    40710a <flatcc_builder_start_offset_vector@@Base+0x6a>
  4070c8:	mov    rax,QWORD PTR [rbp-0x8]
  4070cc:	mov    rax,QWORD PTR [rax+0x30]
  4070d0:	mov    DWORD PTR [rax+0x10],0x4
  4070d7:	mov    rax,QWORD PTR [rbp-0x8]
  4070db:	mov    rax,QWORD PTR [rax+0x30]
  4070df:	mov    DWORD PTR [rax+0x14],0x0
  4070e6:	mov    rax,QWORD PTR [rbp-0x8]
  4070ea:	mov    rax,QWORD PTR [rax+0x30]
  4070ee:	mov    WORD PTR [rax+0xe],0x5
  4070f4:	mov    rax,QWORD PTR [rbp-0x8]
  4070f8:	mov    esi,0xfffffffc
  4070fd:	mov    rdi,rax
  407100:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  407105:	mov    eax,0x0
  40710a:	leave  
  40710b:	ret    

000000000040710c <flatcc_builder_create_offset_vector@@Base>:
  40710c:	push   rbp
  40710d:	mov    rbp,rsp
  407110:	sub    rsp,0x30
  407114:	mov    QWORD PTR [rbp-0x18],rdi
  407118:	mov    QWORD PTR [rbp-0x20],rsi
  40711c:	mov    QWORD PTR [rbp-0x28],rdx
  407120:	mov    rax,QWORD PTR [rbp-0x18]
  407124:	mov    rdi,rax
  407127:	call   4070a0 <flatcc_builder_start_offset_vector@@Base>
  40712c:	test   eax,eax
  40712e:	je     407137 <flatcc_builder_create_offset_vector@@Base+0x2b>
  407130:	mov    eax,0x0
  407135:	jmp    407187 <flatcc_builder_create_offset_vector@@Base+0x7b>
  407137:	mov    rdx,QWORD PTR [rbp-0x28]
  40713b:	mov    rax,QWORD PTR [rbp-0x18]
  40713f:	mov    rsi,rdx
  407142:	mov    rdi,rax
  407145:	call   406ab0 <flatcc_builder_extend_offset_vector@@Base>
  40714a:	mov    QWORD PTR [rbp-0x8],rax
  40714e:	cmp    QWORD PTR [rbp-0x8],0x0
  407153:	jne    40715c <flatcc_builder_create_offset_vector@@Base+0x50>
  407155:	mov    eax,0x0
  40715a:	jmp    407187 <flatcc_builder_create_offset_vector@@Base+0x7b>
  40715c:	mov    rax,QWORD PTR [rbp-0x28]
  407160:	lea    rdx,[rax*4+0x0]
  407168:	mov    rcx,QWORD PTR [rbp-0x20]
  40716c:	mov    rax,QWORD PTR [rbp-0x8]
  407170:	mov    rsi,rcx
  407173:	mov    rdi,rax
  407176:	call   403100 <memcpy@plt>
  40717b:	mov    rax,QWORD PTR [rbp-0x18]
  40717f:	mov    rdi,rax
  407182:	call   408692 <flatcc_builder_end_offset_vector@@Base>
  407187:	leave  
  407188:	ret    

0000000000407189 <flatcc_builder_start_string@@Base>:
  407189:	push   rbp
  40718a:	mov    rbp,rsp
  40718d:	sub    rsp,0x10
  407191:	mov    QWORD PTR [rbp-0x8],rdi
  407195:	mov    rax,QWORD PTR [rbp-0x8]
  407199:	mov    esi,0x1
  40719e:	mov    rdi,rax
  4071a1:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4071a6:	test   eax,eax
  4071a8:	je     4071b1 <flatcc_builder_start_string@@Base+0x28>
  4071aa:	mov    eax,0xffffffff
  4071af:	jmp    4071f3 <flatcc_builder_start_string@@Base+0x6a>
  4071b1:	mov    rax,QWORD PTR [rbp-0x8]
  4071b5:	mov    rax,QWORD PTR [rax+0x30]
  4071b9:	mov    DWORD PTR [rax+0x10],0x1
  4071c0:	mov    rax,QWORD PTR [rbp-0x8]
  4071c4:	mov    rax,QWORD PTR [rax+0x30]
  4071c8:	mov    DWORD PTR [rax+0x14],0x0
  4071cf:	mov    rax,QWORD PTR [rbp-0x8]
  4071d3:	mov    rax,QWORD PTR [rax+0x30]
  4071d7:	mov    WORD PTR [rax+0xe],0x6
  4071dd:	mov    rax,QWORD PTR [rbp-0x8]
  4071e1:	mov    esi,0xfffffffc
  4071e6:	mov    rdi,rax
  4071e9:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  4071ee:	mov    eax,0x0
  4071f3:	leave  
  4071f4:	ret    

00000000004071f5 <flatcc_builder_reserve_table@@Base>:
  4071f5:	push   rbp
  4071f6:	mov    rbp,rsp
  4071f9:	sub    rsp,0x10
  4071fd:	mov    QWORD PTR [rbp-0x8],rdi
  407201:	mov    DWORD PTR [rbp-0xc],esi
  407204:	cmp    DWORD PTR [rbp-0xc],0x0
  407208:	jns    407229 <flatcc_builder_reserve_table@@Base+0x34>
  40720a:	lea    rcx,[rip+0x4d5f]        # 40bf70 <flatcc_builder_padding_base@@Base+0x930>
  407211:	mov    edx,0x429
  407216:	lea    rsi,[rip+0x4623]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40721d:	lea    rdi,[rip+0x48c6]        # 40baea <flatcc_builder_padding_base@@Base+0x4aa>
  407224:	call   4030b0 <__assert_fail@plt>
  407229:	mov    edx,DWORD PTR [rbp-0xc]
  40722c:	mov    rax,QWORD PTR [rbp-0x8]
  407230:	mov    esi,edx
  407232:	mov    rdi,rax
  407235:	call   404c6a <flatcc_builder_default_alloc@@Base+0x5bd>
  40723a:	leave  
  40723b:	ret    

000000000040723c <flatcc_builder_start_table@@Base>:
  40723c:	push   rbp
  40723d:	mov    rbp,rsp
  407240:	sub    rsp,0x10
  407244:	mov    QWORD PTR [rbp-0x8],rdi
  407248:	mov    DWORD PTR [rbp-0xc],esi
  40724b:	mov    rax,QWORD PTR [rbp-0x8]
  40724f:	mov    esi,0x4
  407254:	mov    rdi,rax
  407257:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40725c:	test   eax,eax
  40725e:	je     40726a <flatcc_builder_start_table@@Base+0x2e>
  407260:	mov    eax,0xffffffff
  407265:	jmp    40733a <flatcc_builder_start_table@@Base+0xfe>
  40726a:	mov    rax,QWORD PTR [rbp-0x8]
  40726e:	mov    rax,QWORD PTR [rax+0x30]
  407272:	mov    rdx,QWORD PTR [rbp-0x8]
  407276:	mov    rdx,QWORD PTR [rdx+0x8]
  40727a:	mov    rcx,rdx
  40727d:	mov    rdx,QWORD PTR [rbp-0x8]
  407281:	mov    rdx,QWORD PTR [rdx+0x58]
  407285:	sub    rcx,rdx
  407288:	mov    rdx,rcx
  40728b:	mov    DWORD PTR [rax+0x10],edx
  40728e:	mov    rax,QWORD PTR [rbp-0x8]
  407292:	mov    rax,QWORD PTR [rax+0x30]
  407296:	mov    rdx,QWORD PTR [rbp-0x8]
  40729a:	mov    rdx,QWORD PTR [rdx]
  40729d:	mov    rcx,rdx
  4072a0:	mov    rdx,QWORD PTR [rbp-0x8]
  4072a4:	mov    rdx,QWORD PTR [rdx+0x88]
  4072ab:	sub    rcx,rdx
  4072ae:	mov    rdx,rcx
  4072b1:	mov    DWORD PTR [rax+0x14],edx
  4072b4:	mov    rax,QWORD PTR [rbp-0x8]
  4072b8:	mov    rax,QWORD PTR [rax+0x30]
  4072bc:	mov    rdx,QWORD PTR [rbp-0x8]
  4072c0:	mov    edx,DWORD PTR [rdx+0x14]
  4072c3:	mov    DWORD PTR [rax+0x18],edx
  4072c6:	mov    rax,QWORD PTR [rbp-0x8]
  4072ca:	mov    rax,QWORD PTR [rax+0x30]
  4072ce:	mov    rdx,QWORD PTR [rbp-0x8]
  4072d2:	movzx  edx,WORD PTR [rdx+0x10]
  4072d6:	mov    WORD PTR [rax+0x1c],dx
  4072da:	mov    rax,QWORD PTR [rbp-0x8]
  4072de:	mov    DWORD PTR [rax+0x14],0x0
  4072e5:	mov    rax,QWORD PTR [rbp-0x8]
  4072e9:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4072f0:	mov    rax,QWORD PTR [rbp-0x8]
  4072f4:	mov    WORD PTR [rax+0x10],0x0
  4072fa:	mov    rax,QWORD PTR [rbp-0x8]
  4072fe:	mov    rax,QWORD PTR [rax+0x30]
  407302:	mov    WORD PTR [rax+0xe],0x3
  407308:	mov    edx,DWORD PTR [rbp-0xc]
  40730b:	mov    rax,QWORD PTR [rbp-0x8]
  40730f:	mov    esi,edx
  407311:	mov    rdi,rax
  407314:	call   404c6a <flatcc_builder_default_alloc@@Base+0x5bd>
  407319:	test   eax,eax
  40731b:	je     407324 <flatcc_builder_start_table@@Base+0xe8>
  40731d:	mov    eax,0xffffffff
  407322:	jmp    40733a <flatcc_builder_start_table@@Base+0xfe>
  407324:	mov    rax,QWORD PTR [rbp-0x8]
  407328:	mov    esi,0xfffc
  40732d:	mov    rdi,rax
  407330:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  407335:	mov    eax,0x0
  40733a:	leave  
  40733b:	ret    

000000000040733c <flatcc_builder_create_vtable@@Base>:
  40733c:	push   rbp
  40733d:	mov    rbp,rsp
  407340:	sub    rsp,0xd0
  407347:	mov    QWORD PTR [rbp-0xb8],rdi
  40734e:	mov    QWORD PTR [rbp-0xc0],rsi
  407355:	mov    eax,edx
  407357:	mov    WORD PTR [rbp-0xc4],ax
  40735e:	mov    rax,QWORD PTR fs:0x28
  407367:	mov    QWORD PTR [rbp-0x8],rax
  40736b:	xor    eax,eax
  40736d:	mov    QWORD PTR [rbp-0xa0],0x0
  407378:	mov    DWORD PTR [rbp-0x98],0x0
  407382:	cmp    WORD PTR [rbp-0xc4],0x0
  40738a:	je     4073f4 <flatcc_builder_create_vtable@@Base+0xb8>
  40738c:	mov    rdx,QWORD PTR [rbp-0xa0]
  407393:	movzx  eax,WORD PTR [rbp-0xc4]
  40739a:	add    rax,rdx
  40739d:	mov    QWORD PTR [rbp-0xa0],rax
  4073a4:	mov    eax,DWORD PTR [rbp-0x98]
  4073aa:	cdqe   
  4073ac:	shl    rax,0x4
  4073b0:	add    rax,rbp
  4073b3:	lea    rdx,[rax-0x90]
  4073ba:	mov    rax,QWORD PTR [rbp-0xc0]
  4073c1:	mov    QWORD PTR [rdx],rax
  4073c4:	mov    edx,DWORD PTR [rbp-0x98]
  4073ca:	movzx  eax,WORD PTR [rbp-0xc4]
  4073d1:	movsxd rdx,edx
  4073d4:	shl    rdx,0x4
  4073d8:	add    rdx,rbp
  4073db:	sub    rdx,0x88
  4073e2:	mov    QWORD PTR [rdx],rax
  4073e5:	mov    eax,DWORD PTR [rbp-0x98]
  4073eb:	add    eax,0x1
  4073ee:	mov    DWORD PTR [rbp-0x98],eax
  4073f4:	mov    rax,QWORD PTR [rbp-0xb8]
  4073fb:	mov    eax,DWORD PTR [rax+0x100]
  407401:	test   eax,eax
  407403:	jne    407445 <flatcc_builder_create_vtable@@Base+0x109>
  407405:	mov    rax,QWORD PTR [rbp-0xb8]
  40740c:	mov    eax,DWORD PTR [rax+0x124]
  407412:	test   eax,eax
  407414:	jne    407445 <flatcc_builder_create_vtable@@Base+0x109>
  407416:	lea    rdx,[rbp-0xa0]
  40741d:	mov    rax,QWORD PTR [rbp-0xb8]
  407424:	mov    rsi,rdx
  407427:	mov    rdi,rax
  40742a:	call   4059da <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  40742f:	mov    DWORD PTR [rbp-0xa4],eax
  407435:	cmp    DWORD PTR [rbp-0xa4],0x0
  40743c:	jne    40747b <flatcc_builder_create_vtable@@Base+0x13f>
  40743e:	mov    eax,0x0
  407443:	jmp    407481 <flatcc_builder_create_vtable@@Base+0x145>
  407445:	lea    rdx,[rbp-0xa0]
  40744c:	mov    rax,QWORD PTR [rbp-0xb8]
  407453:	mov    rsi,rdx
  407456:	mov    rdi,rax
  407459:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40745e:	mov    DWORD PTR [rbp-0xa4],eax
  407464:	cmp    DWORD PTR [rbp-0xa4],0x0
  40746b:	jne    407474 <flatcc_builder_create_vtable@@Base+0x138>
  40746d:	mov    eax,0x0
  407472:	jmp    407481 <flatcc_builder_create_vtable@@Base+0x145>
  407474:	add    DWORD PTR [rbp-0xa4],0x1
  40747b:	mov    eax,DWORD PTR [rbp-0xa4]
  407481:	mov    rcx,QWORD PTR [rbp-0x8]
  407485:	xor    rcx,QWORD PTR fs:0x28
  40748e:	je     407495 <flatcc_builder_create_vtable@@Base+0x159>
  407490:	call   403080 <__stack_chk_fail@plt>
  407495:	leave  
  407496:	ret    

0000000000407497 <flatcc_builder_create_cached_vtable@@Base>:
  407497:	push   rbp
  407498:	mov    rbp,rsp
  40749b:	sub    rsp,0x50
  40749f:	mov    QWORD PTR [rbp-0x38],rdi
  4074a3:	mov    QWORD PTR [rbp-0x40],rsi
  4074a7:	mov    eax,edx
  4074a9:	mov    DWORD PTR [rbp-0x48],ecx
  4074ac:	mov    WORD PTR [rbp-0x44],ax
  4074b0:	mov    edx,DWORD PTR [rbp-0x48]
  4074b3:	mov    rax,QWORD PTR [rbp-0x38]
  4074b7:	mov    esi,edx
  4074b9:	mov    rdi,rax
  4074bc:	call   404e77 <flatcc_builder_default_alloc@@Base+0x7ca>
  4074c1:	mov    QWORD PTR [rbp-0x18],rax
  4074c5:	cmp    QWORD PTR [rbp-0x18],0x0
  4074ca:	jne    4074d6 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  4074cc:	mov    eax,0x0
  4074d1:	jmp    407777 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4074d6:	mov    rax,QWORD PTR [rbp-0x18]
  4074da:	mov    QWORD PTR [rbp-0x20],rax
  4074de:	mov    rax,QWORD PTR [rbp-0x20]
  4074e2:	mov    eax,DWORD PTR [rax]
  4074e4:	mov    DWORD PTR [rbp-0x2c],eax
  4074e7:	mov    QWORD PTR [rbp-0x28],0x0
  4074ef:	jmp    4075ce <flatcc_builder_create_cached_vtable@@Base+0x137>
  4074f4:	mov    rax,QWORD PTR [rbp-0x38]
  4074f8:	mov    rdx,QWORD PTR [rax+0xb8]
  4074ff:	mov    eax,DWORD PTR [rbp-0x2c]
  407502:	add    rax,rdx
  407505:	mov    QWORD PTR [rbp-0x10],rax
  407509:	mov    rax,QWORD PTR [rbp-0x38]
  40750d:	mov    rdx,QWORD PTR [rax+0x78]
  407511:	mov    rax,QWORD PTR [rbp-0x10]
  407515:	mov    eax,DWORD PTR [rax+0x8]
  407518:	mov    eax,eax
  40751a:	add    rax,rdx
  40751d:	mov    QWORD PTR [rbp-0x8],rax
  407521:	mov    rax,QWORD PTR [rbp-0x8]
  407525:	movzx  eax,WORD PTR [rax]
  407528:	cmp    ax,WORD PTR [rbp-0x44]
  40752c:	jne    407549 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  40752e:	movzx  edx,WORD PTR [rbp-0x44]
  407532:	mov    rcx,QWORD PTR [rbp-0x8]
  407536:	mov    rax,QWORD PTR [rbp-0x40]
  40753a:	mov    rsi,rcx
  40753d:	mov    rdi,rax
  407540:	call   4030e0 <memcmp@plt>
  407545:	test   eax,eax
  407547:	je     407561 <flatcc_builder_create_cached_vtable@@Base+0xca>
  407549:	mov    rax,QWORD PTR [rbp-0x10]
  40754d:	add    rax,0xc
  407551:	mov    QWORD PTR [rbp-0x20],rax
  407555:	mov    rax,QWORD PTR [rbp-0x10]
  407559:	mov    eax,DWORD PTR [rax+0xc]
  40755c:	mov    DWORD PTR [rbp-0x2c],eax
  40755f:	jmp    4075ce <flatcc_builder_create_cached_vtable@@Base+0x137>
  407561:	mov    rax,QWORD PTR [rbp-0x10]
  407565:	mov    edx,DWORD PTR [rax+0x4]
  407568:	mov    rax,QWORD PTR [rbp-0x38]
  40756c:	mov    eax,DWORD PTR [rax+0x100]
  407572:	cmp    edx,eax
  407574:	je     407596 <flatcc_builder_create_cached_vtable@@Base+0xff>
  407576:	mov    rax,QWORD PTR [rbp-0x10]
  40757a:	mov    QWORD PTR [rbp-0x28],rax
  40757e:	mov    rax,QWORD PTR [rbp-0x10]
  407582:	add    rax,0xc
  407586:	mov    QWORD PTR [rbp-0x20],rax
  40758a:	mov    rax,QWORD PTR [rbp-0x10]
  40758e:	mov    eax,DWORD PTR [rax+0xc]
  407591:	mov    DWORD PTR [rbp-0x2c],eax
  407594:	jmp    4075ce <flatcc_builder_create_cached_vtable@@Base+0x137>
  407596:	mov    rax,QWORD PTR [rbp-0x20]
  40759a:	cmp    rax,QWORD PTR [rbp-0x18]
  40759e:	je     4075c3 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  4075a0:	mov    rax,QWORD PTR [rbp-0x10]
  4075a4:	mov    edx,DWORD PTR [rax+0xc]
  4075a7:	mov    rax,QWORD PTR [rbp-0x20]
  4075ab:	mov    DWORD PTR [rax],edx
  4075ad:	mov    rax,QWORD PTR [rbp-0x18]
  4075b1:	mov    edx,DWORD PTR [rax]
  4075b3:	mov    rax,QWORD PTR [rbp-0x10]
  4075b7:	mov    DWORD PTR [rax+0xc],edx
  4075ba:	mov    rax,QWORD PTR [rbp-0x18]
  4075be:	mov    edx,DWORD PTR [rbp-0x2c]
  4075c1:	mov    DWORD PTR [rax],edx
  4075c3:	mov    rax,QWORD PTR [rbp-0x10]
  4075c7:	mov    eax,DWORD PTR [rax]
  4075c9:	jmp    407777 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4075ce:	cmp    DWORD PTR [rbp-0x2c],0x0
  4075d2:	jne    4074f4 <flatcc_builder_create_cached_vtable@@Base+0x5d>
  4075d8:	mov    rax,QWORD PTR [rbp-0x38]
  4075dc:	mov    eax,DWORD PTR [rax+0xe4]
  4075e2:	mov    edx,eax
  4075e4:	mov    rax,QWORD PTR [rbp-0x38]
  4075e8:	mov    r8d,0x0
  4075ee:	mov    ecx,0x10
  4075f3:	mov    esi,0x6
  4075f8:	mov    rdi,rax
  4075fb:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  407600:	mov    QWORD PTR [rbp-0x10],rax
  407604:	cmp    QWORD PTR [rbp-0x10],0x0
  407609:	jne    407615 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  40760b:	mov    eax,0x0
  407610:	jmp    407777 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407615:	mov    rax,QWORD PTR [rbp-0x38]
  407619:	mov    eax,DWORD PTR [rax+0xe4]
  40761f:	mov    DWORD PTR [rbp-0x2c],eax
  407622:	mov    rax,QWORD PTR [rbp-0x38]
  407626:	mov    eax,DWORD PTR [rax+0xe4]
  40762c:	lea    edx,[rax+0x10]
  40762f:	mov    rax,QWORD PTR [rbp-0x38]
  407633:	mov    DWORD PTR [rax+0xe4],edx
  407639:	mov    rax,QWORD PTR [rbp-0x38]
  40763d:	mov    edx,DWORD PTR [rax+0x100]
  407643:	mov    rax,QWORD PTR [rbp-0x10]
  407647:	mov    DWORD PTR [rax+0x4],edx
  40764a:	mov    rax,QWORD PTR [rbp-0x18]
  40764e:	mov    edx,DWORD PTR [rax]
  407650:	mov    rax,QWORD PTR [rbp-0x10]
  407654:	mov    DWORD PTR [rax+0xc],edx
  407657:	mov    rax,QWORD PTR [rbp-0x18]
  40765b:	mov    edx,DWORD PTR [rbp-0x2c]
  40765e:	mov    DWORD PTR [rax],edx
  407660:	movzx  edx,WORD PTR [rbp-0x44]
  407664:	mov    rcx,QWORD PTR [rbp-0x40]
  407668:	mov    rax,QWORD PTR [rbp-0x38]
  40766c:	mov    rsi,rcx
  40766f:	mov    rdi,rax
  407672:	call   40733c <flatcc_builder_create_vtable@@Base>
  407677:	mov    edx,eax
  407679:	mov    rax,QWORD PTR [rbp-0x10]
  40767d:	mov    DWORD PTR [rax],edx
  40767f:	mov    rax,QWORD PTR [rbp-0x10]
  407683:	mov    eax,DWORD PTR [rax]
  407685:	test   eax,eax
  407687:	jne    407693 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  407689:	mov    eax,0x0
  40768e:	jmp    407777 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407693:	cmp    QWORD PTR [rbp-0x28],0x0
  407698:	je     4076ad <flatcc_builder_create_cached_vtable@@Base+0x216>
  40769a:	mov    rax,QWORD PTR [rbp-0x28]
  40769e:	mov    edx,DWORD PTR [rax+0x8]
  4076a1:	mov    rax,QWORD PTR [rbp-0x10]
  4076a5:	mov    DWORD PTR [rax+0x8],edx
  4076a8:	jmp    407771 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4076ad:	mov    rax,QWORD PTR [rbp-0x38]
  4076b1:	mov    rax,QWORD PTR [rax+0x118]
  4076b8:	test   rax,rax
  4076bb:	je     4076f0 <flatcc_builder_create_cached_vtable@@Base+0x259>
  4076bd:	mov    rax,QWORD PTR [rbp-0x38]
  4076c1:	mov    rdx,QWORD PTR [rax+0x118]
  4076c8:	mov    rax,QWORD PTR [rbp-0x38]
  4076cc:	mov    ecx,DWORD PTR [rax+0xe0]
  4076d2:	movzx  eax,WORD PTR [rbp-0x44]
  4076d6:	add    eax,ecx
  4076d8:	mov    eax,eax
  4076da:	cmp    rdx,rax
  4076dd:	jae    4076f0 <flatcc_builder_create_cached_vtable@@Base+0x259>
  4076df:	mov    rax,QWORD PTR [rbp-0x38]
  4076e3:	mov    rdi,rax
  4076e6:	call   404eeb <flatcc_builder_flush_vtable_cache@@Base>
  4076eb:	jmp    407771 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4076f0:	movzx  edx,WORD PTR [rbp-0x44]
  4076f4:	mov    rax,QWORD PTR [rbp-0x38]
  4076f8:	mov    eax,DWORD PTR [rax+0xe0]
  4076fe:	mov    esi,eax
  407700:	mov    rax,QWORD PTR [rbp-0x38]
  407704:	mov    r8d,0x0
  40770a:	mov    rcx,rdx
  40770d:	mov    rdx,rsi
  407710:	mov    esi,0x2
  407715:	mov    rdi,rax
  407718:	call   404bb9 <flatcc_builder_default_alloc@@Base+0x50c>
  40771d:	mov    QWORD PTR [rbp-0x8],rax
  407721:	cmp    QWORD PTR [rbp-0x8],0x0
  407726:	jne    40772f <flatcc_builder_create_cached_vtable@@Base+0x298>
  407728:	mov    eax,0xffffffff
  40772d:	jmp    407777 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40772f:	mov    rax,QWORD PTR [rbp-0x38]
  407733:	mov    edx,DWORD PTR [rax+0xe0]
  407739:	mov    rax,QWORD PTR [rbp-0x10]
  40773d:	mov    DWORD PTR [rax+0x8],edx
  407740:	mov    rax,QWORD PTR [rbp-0x38]
  407744:	mov    edx,DWORD PTR [rax+0xe0]
  40774a:	movzx  eax,WORD PTR [rbp-0x44]
  40774e:	add    edx,eax
  407750:	mov    rax,QWORD PTR [rbp-0x38]
  407754:	mov    DWORD PTR [rax+0xe0],edx
  40775a:	movzx  edx,WORD PTR [rbp-0x44]
  40775e:	mov    rcx,QWORD PTR [rbp-0x40]
  407762:	mov    rax,QWORD PTR [rbp-0x8]
  407766:	mov    rsi,rcx
  407769:	mov    rdi,rax
  40776c:	call   403100 <memcpy@plt>
  407771:	mov    rax,QWORD PTR [rbp-0x10]
  407775:	mov    eax,DWORD PTR [rax]
  407777:	leave  
  407778:	ret    

0000000000407779 <flatcc_builder_create_table@@Base>:
  407779:	push   rbp
  40777a:	mov    rbp,rsp
  40777d:	sub    rsp,0x100
  407784:	mov    QWORD PTR [rbp-0xd8],rdi
  40778b:	mov    QWORD PTR [rbp-0xe0],rsi
  407792:	mov    QWORD PTR [rbp-0xe8],rdx
  407799:	mov    eax,ecx
  40779b:	mov    QWORD PTR [rbp-0xf8],r8
  4077a2:	mov    DWORD PTR [rbp-0xf0],r9d
  4077a9:	mov    WORD PTR [rbp-0xec],ax
  4077b0:	mov    rax,QWORD PTR fs:0x28
  4077b9:	mov    QWORD PTR [rbp-0x8],rax
  4077bd:	xor    eax,eax
  4077bf:	cmp    DWORD PTR [rbp-0xf0],0x0
  4077c6:	jns    4077e7 <flatcc_builder_create_table@@Base+0x6e>
  4077c8:	lea    rcx,[rip+0x47c1]        # 40bf90 <flatcc_builder_padding_base@@Base+0x950>
  4077cf:	mov    edx,0x4d5
  4077d4:	lea    rsi,[rip+0x4065]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4077db:	lea    rdi,[rip+0x4313]        # 40baf5 <flatcc_builder_padding_base@@Base+0x4b5>
  4077e2:	call   4030b0 <__assert_fail@plt>
  4077e7:	mov    eax,DWORD PTR [rbp+0x10]
  4077ea:	and    eax,0x1
  4077ed:	test   eax,eax
  4077ef:	jne    407810 <flatcc_builder_create_table@@Base+0x97>
  4077f1:	lea    rcx,[rip+0x4798]        # 40bf90 <flatcc_builder_padding_base@@Base+0x950>
  4077f8:	mov    edx,0x4db
  4077fd:	lea    rsi,[rip+0x403c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407804:	lea    rdi,[rip+0x42fc]        # 40bb07 <flatcc_builder_padding_base@@Base+0x4c7>
  40780b:	call   4030b0 <__assert_fail@plt>
  407810:	lea    rax,[rbp-0xec]
  407817:	mov    esi,0x4
  40781c:	mov    rdi,rax
  40781f:	call   405328 <flatcc_builder_clear@@Base+0xc7>
  407824:	movzx  eax,WORD PTR [rbp-0xec]
  40782b:	movzx  edx,ax
  40782e:	mov    rax,QWORD PTR [rbp-0xd8]
  407835:	mov    esi,edx
  407837:	mov    rdi,rax
  40783a:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  40783f:	movzx  eax,WORD PTR [rbp-0xec]
  407846:	movzx  edx,ax
  407849:	mov    rax,QWORD PTR [rbp-0xe8]
  407850:	mov    ecx,eax
  407852:	mov    rax,QWORD PTR [rbp-0xd8]
  407859:	mov    esi,ecx
  40785b:	mov    rdi,rax
  40785e:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  407863:	mov    DWORD PTR [rbp-0xbc],eax
  407869:	mov    rax,QWORD PTR [rbp-0xd8]
  407870:	mov    eax,DWORD PTR [rax+0xf0]
  407876:	mov    edx,eax
  407878:	mov    rax,QWORD PTR [rbp-0xe8]
  40787f:	mov    ecx,eax
  407881:	mov    eax,DWORD PTR [rbp-0xbc]
  407887:	add    eax,ecx
  407889:	sub    edx,eax
  40788b:	mov    eax,edx
  40788d:	sub    eax,0x4
  407890:	mov    DWORD PTR [rbp-0xb8],eax
  407896:	mov    eax,DWORD PTR [rbp+0x10]
  407899:	sub    eax,0x1
  40789c:	mov    DWORD PTR [rbp-0xb4],eax
  4078a2:	mov    eax,DWORD PTR [rbp-0xb8]
  4078a8:	sub    eax,DWORD PTR [rbp-0xb4]
  4078ae:	mov    DWORD PTR [rbp-0xb0],eax
  4078b4:	mov    eax,DWORD PTR [rbp-0xb8]
  4078ba:	sub    eax,DWORD PTR [rbp-0xb0]
  4078c0:	cmp    eax,DWORD PTR [rbp-0xb4]
  4078c6:	je     4078d2 <flatcc_builder_create_table@@Base+0x159>
  4078c8:	mov    eax,0xffffffff
  4078cd:	jmp    407af6 <flatcc_builder_create_table@@Base+0x37d>
  4078d2:	mov    eax,DWORD PTR [rbp-0xb0]
  4078d8:	mov    edi,eax
  4078da:	call   4045e7 <main@@Base+0x41a>
  4078df:	mov    DWORD PTR [rbp-0xc4],eax
  4078e5:	mov    DWORD PTR [rbp-0xc0],0x0
  4078ef:	jmp    40797a <flatcc_builder_create_table@@Base+0x201>
  4078f4:	mov    eax,DWORD PTR [rbp-0xc0]
  4078fa:	cdqe   
  4078fc:	lea    rdx,[rax+rax*1]
  407900:	mov    rax,QWORD PTR [rbp-0xf8]
  407907:	add    rax,rdx
  40790a:	movzx  eax,WORD PTR [rax]
  40790d:	movzx  edx,ax
  407910:	mov    rax,QWORD PTR [rbp-0xe0]
  407917:	add    rax,rdx
  40791a:	mov    QWORD PTR [rbp-0xa8],rax
  407921:	mov    rax,QWORD PTR [rbp-0xa8]
  407928:	mov    eax,DWORD PTR [rax]
  40792a:	sub    eax,DWORD PTR [rbp-0xb8]
  407930:	mov    edx,eax
  407932:	mov    eax,DWORD PTR [rbp-0xc0]
  407938:	cdqe   
  40793a:	lea    rcx,[rax+rax*1]
  40793e:	mov    rax,QWORD PTR [rbp-0xf8]
  407945:	add    rax,rcx
  407948:	movzx  eax,WORD PTR [rax]
  40794b:	movzx  eax,ax
  40794e:	sub    edx,eax
  407950:	mov    eax,edx
  407952:	sub    eax,0x4
  407955:	mov    DWORD PTR [rbp-0xac],eax
  40795b:	mov    eax,DWORD PTR [rbp-0xac]
  407961:	mov    edi,eax
  407963:	call   4045e7 <main@@Base+0x41a>
  407968:	mov    edx,eax
  40796a:	mov    rax,QWORD PTR [rbp-0xa8]
  407971:	mov    DWORD PTR [rax],edx
  407973:	add    DWORD PTR [rbp-0xc0],0x1
  40797a:	mov    eax,DWORD PTR [rbp-0xc0]
  407980:	cmp    eax,DWORD PTR [rbp-0xf0]
  407986:	jl     4078f4 <flatcc_builder_create_table@@Base+0x17b>
  40798c:	mov    QWORD PTR [rbp-0xa0],0x0
  407997:	mov    DWORD PTR [rbp-0x98],0x0
  4079a1:	mov    rax,QWORD PTR [rbp-0xa0]
  4079a8:	add    rax,0x4
  4079ac:	mov    QWORD PTR [rbp-0xa0],rax
  4079b3:	mov    eax,DWORD PTR [rbp-0x98]
  4079b9:	cdqe   
  4079bb:	shl    rax,0x4
  4079bf:	add    rax,rbp
  4079c2:	lea    rdx,[rax-0x90]
  4079c9:	lea    rax,[rbp-0xc4]
  4079d0:	mov    QWORD PTR [rdx],rax
  4079d3:	mov    eax,DWORD PTR [rbp-0x98]
  4079d9:	cdqe   
  4079db:	shl    rax,0x4
  4079df:	add    rax,rbp
  4079e2:	sub    rax,0x88
  4079e8:	mov    QWORD PTR [rax],0x4
  4079ef:	mov    eax,DWORD PTR [rbp-0x98]
  4079f5:	add    eax,0x1
  4079f8:	mov    DWORD PTR [rbp-0x98],eax
  4079fe:	cmp    QWORD PTR [rbp-0xe8],0x0
  407a06:	je     407a6f <flatcc_builder_create_table@@Base+0x2f6>
  407a08:	mov    rdx,QWORD PTR [rbp-0xa0]
  407a0f:	mov    rax,QWORD PTR [rbp-0xe8]
  407a16:	add    rax,rdx
  407a19:	mov    QWORD PTR [rbp-0xa0],rax
  407a20:	mov    eax,DWORD PTR [rbp-0x98]
  407a26:	cdqe   
  407a28:	shl    rax,0x4
  407a2c:	add    rax,rbp
  407a2f:	lea    rdx,[rax-0x90]
  407a36:	mov    rax,QWORD PTR [rbp-0xe0]
  407a3d:	mov    QWORD PTR [rdx],rax
  407a40:	mov    eax,DWORD PTR [rbp-0x98]
  407a46:	cdqe   
  407a48:	shl    rax,0x4
  407a4c:	add    rax,rbp
  407a4f:	lea    rdx,[rax-0x88]
  407a56:	mov    rax,QWORD PTR [rbp-0xe8]
  407a5d:	mov    QWORD PTR [rdx],rax
  407a60:	mov    eax,DWORD PTR [rbp-0x98]
  407a66:	add    eax,0x1
  407a69:	mov    DWORD PTR [rbp-0x98],eax
  407a6f:	cmp    DWORD PTR [rbp-0xbc],0x0
  407a76:	je     407add <flatcc_builder_create_table@@Base+0x364>
  407a78:	mov    rdx,QWORD PTR [rbp-0xa0]
  407a7f:	mov    eax,DWORD PTR [rbp-0xbc]
  407a85:	add    rax,rdx
  407a88:	mov    QWORD PTR [rbp-0xa0],rax
  407a8f:	mov    eax,DWORD PTR [rbp-0x98]
  407a95:	cdqe   
  407a97:	shl    rax,0x4
  407a9b:	add    rax,rbp
  407a9e:	sub    rax,0x90
  407aa4:	mov    rdx,0x40b640
  407aab:	mov    QWORD PTR [rax],rdx
  407aae:	mov    edx,DWORD PTR [rbp-0x98]
  407ab4:	mov    eax,DWORD PTR [rbp-0xbc]
  407aba:	movsxd rdx,edx
  407abd:	shl    rdx,0x4
  407ac1:	add    rdx,rbp
  407ac4:	sub    rdx,0x88
  407acb:	mov    QWORD PTR [rdx],rax
  407ace:	mov    eax,DWORD PTR [rbp-0x98]
  407ad4:	add    eax,0x1
  407ad7:	mov    DWORD PTR [rbp-0x98],eax
  407add:	lea    rdx,[rbp-0xa0]
  407ae4:	mov    rax,QWORD PTR [rbp-0xd8]
  407aeb:	mov    rsi,rdx
  407aee:	mov    rdi,rax
  407af1:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407af6:	mov    rsi,QWORD PTR [rbp-0x8]
  407afa:	xor    rsi,QWORD PTR fs:0x28
  407b03:	je     407b0a <flatcc_builder_create_table@@Base+0x391>
  407b05:	call   403080 <__stack_chk_fail@plt>
  407b0a:	leave  
  407b0b:	ret    

0000000000407b0c <flatcc_builder_check_required_field@@Base>:
  407b0c:	push   rbp
  407b0d:	mov    rbp,rsp
  407b10:	sub    rsp,0x10
  407b14:	mov    QWORD PTR [rbp-0x8],rdi
  407b18:	mov    eax,esi
  407b1a:	mov    WORD PTR [rbp-0xc],ax
  407b1e:	mov    rax,QWORD PTR [rbp-0x8]
  407b22:	mov    rax,QWORD PTR [rax+0x30]
  407b26:	movzx  eax,WORD PTR [rax+0xe]
  407b2a:	cmp    ax,0x3
  407b2e:	je     407b4f <flatcc_builder_check_required_field@@Base+0x43>
  407b30:	lea    rcx,[rip+0x4489]        # 40bfc0 <flatcc_builder_padding_base@@Base+0x980>
  407b37:	mov    edx,0x4f8
  407b3c:	lea    rsi,[rip+0x3cfd]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407b43:	lea    rdi,[rip+0x3fce]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407b4a:	call   4030b0 <__assert_fail@plt>
  407b4f:	mov    rax,QWORD PTR [rbp-0x8]
  407b53:	movzx  eax,WORD PTR [rax+0x10]
  407b57:	cmp    ax,WORD PTR [rbp-0xc]
  407b5b:	jbe    407b7e <flatcc_builder_check_required_field@@Base+0x72>
  407b5d:	mov    rax,QWORD PTR [rbp-0x8]
  407b61:	mov    rax,QWORD PTR [rax+0x8]
  407b65:	movzx  edx,WORD PTR [rbp-0xc]
  407b69:	add    rdx,rdx
  407b6c:	add    rax,rdx
  407b6f:	movzx  eax,WORD PTR [rax]
  407b72:	test   ax,ax
  407b75:	je     407b7e <flatcc_builder_check_required_field@@Base+0x72>
  407b77:	mov    eax,0x1
  407b7c:	jmp    407b83 <flatcc_builder_check_required_field@@Base+0x77>
  407b7e:	mov    eax,0x0
  407b83:	leave  
  407b84:	ret    

0000000000407b85 <flatcc_builder_check_union_field@@Base>:
  407b85:	push   rbp
  407b86:	mov    rbp,rsp
  407b89:	sub    rsp,0x10
  407b8d:	mov    QWORD PTR [rbp-0x8],rdi
  407b91:	mov    eax,esi
  407b93:	mov    WORD PTR [rbp-0xc],ax
  407b97:	mov    rax,QWORD PTR [rbp-0x8]
  407b9b:	mov    rax,QWORD PTR [rax+0x30]
  407b9f:	movzx  eax,WORD PTR [rax+0xe]
  407ba3:	cmp    ax,0x3
  407ba7:	je     407bc8 <flatcc_builder_check_union_field@@Base+0x43>
  407ba9:	lea    rcx,[rip+0x4450]        # 40c000 <flatcc_builder_padding_base@@Base+0x9c0>
  407bb0:	mov    edx,0x4ff
  407bb5:	lea    rsi,[rip+0x3c84]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407bbc:	lea    rdi,[rip+0x3f55]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407bc3:	call   4030b0 <__assert_fail@plt>
  407bc8:	cmp    WORD PTR [rbp-0xc],0x0
  407bcd:	je     407bdd <flatcc_builder_check_union_field@@Base+0x58>
  407bcf:	mov    rax,QWORD PTR [rbp-0x8]
  407bd3:	movzx  eax,WORD PTR [rax+0x10]
  407bd7:	cmp    ax,WORD PTR [rbp-0xc]
  407bdb:	ja     407be7 <flatcc_builder_check_union_field@@Base+0x62>
  407bdd:	mov    eax,0x0
  407be2:	jmp    407c91 <flatcc_builder_check_union_field@@Base+0x10c>
  407be7:	mov    rax,QWORD PTR [rbp-0x8]
  407beb:	mov    rax,QWORD PTR [rax+0x8]
  407bef:	movzx  edx,WORD PTR [rbp-0xc]
  407bf3:	add    rdx,rdx
  407bf6:	sub    rdx,0x2
  407bfa:	add    rax,rdx
  407bfd:	movzx  eax,WORD PTR [rax]
  407c00:	test   ax,ax
  407c03:	jne    407c25 <flatcc_builder_check_union_field@@Base+0xa0>
  407c05:	mov    rax,QWORD PTR [rbp-0x8]
  407c09:	mov    rax,QWORD PTR [rax+0x8]
  407c0d:	movzx  edx,WORD PTR [rbp-0xc]
  407c11:	add    rdx,rdx
  407c14:	add    rax,rdx
  407c17:	movzx  eax,WORD PTR [rax]
  407c1a:	test   ax,ax
  407c1d:	sete   al
  407c20:	movzx  eax,al
  407c23:	jmp    407c91 <flatcc_builder_check_union_field@@Base+0x10c>
  407c25:	mov    rax,QWORD PTR [rbp-0x8]
  407c29:	mov    rdx,QWORD PTR [rax+0x18]
  407c2d:	mov    rax,QWORD PTR [rbp-0x8]
  407c31:	mov    rax,QWORD PTR [rax+0x8]
  407c35:	movzx  ecx,WORD PTR [rbp-0xc]
  407c39:	add    rcx,rcx
  407c3c:	sub    rcx,0x2
  407c40:	add    rax,rcx
  407c43:	movzx  eax,WORD PTR [rax]
  407c46:	movzx  eax,ax
  407c49:	add    rax,rdx
  407c4c:	movzx  eax,BYTE PTR [rax]
  407c4f:	test   al,al
  407c51:	je     407c73 <flatcc_builder_check_union_field@@Base+0xee>
  407c53:	mov    rax,QWORD PTR [rbp-0x8]
  407c57:	mov    rax,QWORD PTR [rax+0x8]
  407c5b:	movzx  edx,WORD PTR [rbp-0xc]
  407c5f:	add    rdx,rdx
  407c62:	add    rax,rdx
  407c65:	movzx  eax,WORD PTR [rax]
  407c68:	test   ax,ax
  407c6b:	setne  al
  407c6e:	movzx  eax,al
  407c71:	jmp    407c91 <flatcc_builder_check_union_field@@Base+0x10c>
  407c73:	mov    rax,QWORD PTR [rbp-0x8]
  407c77:	mov    rax,QWORD PTR [rax+0x8]
  407c7b:	movzx  edx,WORD PTR [rbp-0xc]
  407c7f:	add    rdx,rdx
  407c82:	add    rax,rdx
  407c85:	movzx  eax,WORD PTR [rax]
  407c88:	test   ax,ax
  407c8b:	sete   al
  407c8e:	movzx  eax,al
  407c91:	leave  
  407c92:	ret    

0000000000407c93 <flatcc_builder_check_required@@Base>:
  407c93:	push   rbp
  407c94:	mov    rbp,rsp
  407c97:	sub    rsp,0x30
  407c9b:	mov    QWORD PTR [rbp-0x18],rdi
  407c9f:	mov    QWORD PTR [rbp-0x20],rsi
  407ca3:	mov    DWORD PTR [rbp-0x24],edx
  407ca6:	mov    rax,QWORD PTR [rbp-0x18]
  407caa:	mov    rax,QWORD PTR [rax+0x30]
  407cae:	movzx  eax,WORD PTR [rax+0xe]
  407cb2:	cmp    ax,0x3
  407cb6:	je     407cd7 <flatcc_builder_check_required@@Base+0x44>
  407cb8:	lea    rcx,[rip+0x4371]        # 40c030 <flatcc_builder_padding_base@@Base+0x9f0>
  407cbf:	mov    edx,0x511
  407cc4:	lea    rsi,[rip+0x3b75]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407ccb:	lea    rdi,[rip+0x3e46]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407cd2:	call   4030b0 <__assert_fail@plt>
  407cd7:	mov    rax,QWORD PTR [rbp-0x18]
  407cdb:	movzx  eax,WORD PTR [rax+0x10]
  407cdf:	movzx  eax,ax
  407ce2:	cmp    eax,DWORD PTR [rbp-0x24]
  407ce5:	jge    407cee <flatcc_builder_check_required@@Base+0x5b>
  407ce7:	mov    eax,0x0
  407cec:	jmp    407d3c <flatcc_builder_check_required@@Base+0xa9>
  407cee:	mov    DWORD PTR [rbp-0x4],0x0
  407cf5:	jmp    407d2f <flatcc_builder_check_required@@Base+0x9c>
  407cf7:	mov    rax,QWORD PTR [rbp-0x18]
  407cfb:	mov    rax,QWORD PTR [rax+0x8]
  407cff:	mov    edx,DWORD PTR [rbp-0x4]
  407d02:	movsxd rdx,edx
  407d05:	lea    rcx,[rdx+rdx*1]
  407d09:	mov    rdx,QWORD PTR [rbp-0x20]
  407d0d:	add    rdx,rcx
  407d10:	movzx  edx,WORD PTR [rdx]
  407d13:	movzx  edx,dx
  407d16:	add    rdx,rdx
  407d19:	add    rax,rdx
  407d1c:	movzx  eax,WORD PTR [rax]
  407d1f:	test   ax,ax
  407d22:	jne    407d2b <flatcc_builder_check_required@@Base+0x98>
  407d24:	mov    eax,0x0
  407d29:	jmp    407d3c <flatcc_builder_check_required@@Base+0xa9>
  407d2b:	add    DWORD PTR [rbp-0x4],0x1
  407d2f:	mov    eax,DWORD PTR [rbp-0x4]
  407d32:	cmp    eax,DWORD PTR [rbp-0x24]
  407d35:	jl     407cf7 <flatcc_builder_check_required@@Base+0x64>
  407d37:	mov    eax,0x1
  407d3c:	leave  
  407d3d:	ret    

0000000000407d3e <flatcc_builder_end_table@@Base>:
  407d3e:	push   rbp
  407d3f:	mov    rbp,rsp
  407d42:	sub    rsp,0x30
  407d46:	mov    QWORD PTR [rbp-0x28],rdi
  407d4a:	mov    rax,QWORD PTR [rbp-0x28]
  407d4e:	mov    rax,QWORD PTR [rax+0x30]
  407d52:	movzx  eax,WORD PTR [rax+0xe]
  407d56:	cmp    ax,0x3
  407d5a:	je     407d7b <flatcc_builder_end_table@@Base+0x3d>
  407d5c:	lea    rcx,[rip+0x42ed]        # 40c050 <flatcc_builder_padding_base@@Base+0xa10>
  407d63:	mov    edx,0x525
  407d68:	lea    rsi,[rip+0x3ad1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407d6f:	lea    rdi,[rip+0x3da2]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407d76:	call   4030b0 <__assert_fail@plt>
  407d7b:	mov    rax,QWORD PTR [rbp-0x28]
  407d7f:	mov    rax,QWORD PTR [rax+0x8]
  407d83:	sub    rax,0x4
  407d87:	mov    QWORD PTR [rbp-0x10],rax
  407d8b:	mov    rax,QWORD PTR [rbp-0x28]
  407d8f:	movzx  eax,WORD PTR [rax+0x10]
  407d93:	movzx  eax,ax
  407d96:	add    eax,0x2
  407d99:	cdqe   
  407d9b:	add    eax,eax
  407d9d:	mov    WORD PTR [rbp-0x1e],ax
  407da1:	mov    rax,QWORD PTR [rbp-0x10]
  407da5:	movzx  edx,WORD PTR [rbp-0x1e]
  407da9:	mov    WORD PTR [rax],dx
  407dac:	mov    rax,QWORD PTR [rbp-0x10]
  407db0:	lea    rdx,[rax+0x2]
  407db4:	mov    rax,QWORD PTR [rbp-0x28]
  407db8:	mov    eax,DWORD PTR [rax+0x20]
  407dbb:	add    eax,0x4
  407dbe:	mov    WORD PTR [rdx],ax
  407dc1:	mov    rax,QWORD PTR [rbp-0x10]
  407dc5:	movzx  eax,WORD PTR [rax]
  407dc8:	movzx  edx,ax
  407dcb:	mov    rax,QWORD PTR [rbp-0x28]
  407dcf:	mov    eax,DWORD PTR [rax+0x14]
  407dd2:	xor    eax,edx
  407dd4:	imul   edx,eax,0x9e3779b1
  407dda:	mov    rax,QWORD PTR [rbp-0x10]
  407dde:	add    rax,0x2
  407de2:	movzx  eax,WORD PTR [rax]
  407de5:	movzx  eax,ax
  407de8:	xor    eax,edx
  407dea:	imul   edx,eax,0x9e3779b1
  407df0:	mov    rax,QWORD PTR [rbp-0x28]
  407df4:	mov    DWORD PTR [rax+0x14],edx
  407df7:	mov    rax,QWORD PTR [rbp-0x28]
  407dfb:	mov    ecx,DWORD PTR [rax+0x14]
  407dfe:	movzx  edx,WORD PTR [rbp-0x1e]
  407e02:	mov    rsi,QWORD PTR [rbp-0x10]
  407e06:	mov    rax,QWORD PTR [rbp-0x28]
  407e0a:	mov    rdi,rax
  407e0d:	call   407497 <flatcc_builder_create_cached_vtable@@Base>
  407e12:	mov    DWORD PTR [rbp-0x1c],eax
  407e15:	cmp    DWORD PTR [rbp-0x1c],0x0
  407e19:	jne    407e25 <flatcc_builder_end_table@@Base+0xe7>
  407e1b:	mov    eax,0x0
  407e20:	jmp    407f45 <flatcc_builder_end_table@@Base+0x207>
  407e25:	movzx  edx,WORD PTR [rbp-0x1e]
  407e29:	mov    rax,QWORD PTR [rbp-0x10]
  407e2d:	mov    esi,0x0
  407e32:	mov    rdi,rax
  407e35:	call   4030c0 <memset@plt>
  407e3a:	mov    rax,QWORD PTR [rbp-0x28]
  407e3e:	mov    rdx,QWORD PTR [rax+0x88]
  407e45:	mov    rax,QWORD PTR [rbp-0x28]
  407e49:	mov    rax,QWORD PTR [rax+0x30]
  407e4d:	mov    eax,DWORD PTR [rax+0x14]
  407e50:	mov    eax,eax
  407e52:	add    rax,rdx
  407e55:	mov    QWORD PTR [rbp-0x8],rax
  407e59:	mov    rax,QWORD PTR [rbp-0x28]
  407e5d:	mov    rax,QWORD PTR [rax]
  407e60:	mov    rdx,rax
  407e63:	mov    rax,QWORD PTR [rbp-0x8]
  407e67:	sub    rdx,rax
  407e6a:	mov    rax,rdx
  407e6d:	sar    rax,1
  407e70:	mov    DWORD PTR [rbp-0x18],eax
  407e73:	mov    rax,QWORD PTR [rbp-0x28]
  407e77:	movzx  eax,WORD PTR [rax+0xea]
  407e7e:	movzx  edx,ax
  407e81:	mov    rax,QWORD PTR [rbp-0x28]
  407e85:	mov    eax,DWORD PTR [rax+0x20]
  407e88:	mov    r10d,eax
  407e8b:	mov    rax,QWORD PTR [rbp-0x28]
  407e8f:	mov    rsi,QWORD PTR [rax+0x18]
  407e93:	mov    r8d,DWORD PTR [rbp-0x18]
  407e97:	mov    rdi,QWORD PTR [rbp-0x8]
  407e9b:	mov    rax,QWORD PTR [rbp-0x28]
  407e9f:	sub    rsp,0x8
  407ea3:	mov    ecx,DWORD PTR [rbp-0x1c]
  407ea6:	push   rcx
  407ea7:	mov    r9d,r8d
  407eaa:	mov    r8,rdi
  407ead:	mov    ecx,edx
  407eaf:	mov    rdx,r10
  407eb2:	mov    rdi,rax
  407eb5:	call   407779 <flatcc_builder_create_table@@Base>
  407eba:	add    rsp,0x10
  407ebe:	mov    DWORD PTR [rbp-0x14],eax
  407ec1:	cmp    DWORD PTR [rbp-0x14],0x0
  407ec5:	jne    407ece <flatcc_builder_end_table@@Base+0x190>
  407ec7:	mov    eax,0x0
  407ecc:	jmp    407f45 <flatcc_builder_end_table@@Base+0x207>
  407ece:	mov    rax,QWORD PTR [rbp-0x28]
  407ed2:	mov    rax,QWORD PTR [rax+0x30]
  407ed6:	mov    edx,DWORD PTR [rax+0x18]
  407ed9:	mov    rax,QWORD PTR [rbp-0x28]
  407edd:	mov    DWORD PTR [rax+0x14],edx
  407ee0:	mov    rax,QWORD PTR [rbp-0x28]
  407ee4:	mov    rax,QWORD PTR [rax+0x30]
  407ee8:	movzx  edx,WORD PTR [rax+0x1c]
  407eec:	mov    rax,QWORD PTR [rbp-0x28]
  407ef0:	mov    WORD PTR [rax+0x10],dx
  407ef4:	mov    rax,QWORD PTR [rbp-0x28]
  407ef8:	mov    rdx,QWORD PTR [rax+0x58]
  407efc:	mov    rax,QWORD PTR [rbp-0x28]
  407f00:	mov    rax,QWORD PTR [rax+0x30]
  407f04:	mov    eax,DWORD PTR [rax+0x10]
  407f07:	mov    eax,eax
  407f09:	add    rdx,rax
  407f0c:	mov    rax,QWORD PTR [rbp-0x28]
  407f10:	mov    QWORD PTR [rax+0x8],rdx
  407f14:	mov    rax,QWORD PTR [rbp-0x28]
  407f18:	mov    rdx,QWORD PTR [rax+0x88]
  407f1f:	mov    rax,QWORD PTR [rbp-0x28]
  407f23:	mov    rax,QWORD PTR [rax+0x30]
  407f27:	mov    eax,DWORD PTR [rax+0x14]
  407f2a:	mov    eax,eax
  407f2c:	add    rdx,rax
  407f2f:	mov    rax,QWORD PTR [rbp-0x28]
  407f33:	mov    QWORD PTR [rax],rdx
  407f36:	mov    rax,QWORD PTR [rbp-0x28]
  407f3a:	mov    rdi,rax
  407f3d:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  407f42:	mov    eax,DWORD PTR [rbp-0x14]
  407f45:	leave  
  407f46:	ret    

0000000000407f47 <flatcc_builder_create_vector@@Base>:
  407f47:	push   rbp
  407f48:	mov    rbp,rsp
  407f4b:	sub    rsp,0xe0
  407f52:	mov    QWORD PTR [rbp-0xb8],rdi
  407f59:	mov    QWORD PTR [rbp-0xc0],rsi
  407f60:	mov    QWORD PTR [rbp-0xc8],rdx
  407f67:	mov    QWORD PTR [rbp-0xd0],rcx
  407f6e:	mov    eax,r8d
  407f71:	mov    QWORD PTR [rbp-0xe0],r9
  407f78:	mov    WORD PTR [rbp-0xd4],ax
  407f7f:	mov    rax,QWORD PTR fs:0x28
  407f88:	mov    QWORD PTR [rbp-0x8],rax
  407f8c:	xor    eax,eax
  407f8e:	mov    rax,QWORD PTR [rbp-0xc8]
  407f95:	cmp    rax,QWORD PTR [rbp-0xe0]
  407f9c:	jbe    407fd7 <flatcc_builder_create_vector@@Base+0x90>
  407f9e:	mov    rax,QWORD PTR [rbp-0xc8]
  407fa5:	cmp    rax,QWORD PTR [rbp-0xe0]
  407fac:	jbe    407fcd <flatcc_builder_create_vector@@Base+0x86>
  407fae:	lea    rcx,[rip+0x40bb]        # 40c070 <flatcc_builder_padding_base@@Base+0xa30>
  407fb5:	mov    edx,0x555
  407fba:	lea    rsi,[rip+0x387f]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407fc1:	lea    rdi,[rip+0x3b7b]        # 40bb43 <flatcc_builder_padding_base@@Base+0x503>
  407fc8:	call   4030b0 <__assert_fail@plt>
  407fcd:	mov    eax,0x0
  407fd2:	jmp    4081c2 <flatcc_builder_create_vector@@Base+0x27b>
  407fd7:	lea    rax,[rbp-0xd4]
  407fde:	mov    esi,0x4
  407fe3:	mov    rdi,rax
  407fe6:	call   405328 <flatcc_builder_clear@@Base+0xc7>
  407feb:	movzx  eax,WORD PTR [rbp-0xd4]
  407ff2:	movzx  edx,ax
  407ff5:	mov    rax,QWORD PTR [rbp-0xb8]
  407ffc:	mov    esi,edx
  407ffe:	mov    rdi,rax
  408001:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  408006:	mov    rax,QWORD PTR [rbp-0xc8]
  40800d:	mov    edx,eax
  40800f:	mov    rax,QWORD PTR [rbp-0xd0]
  408016:	imul   eax,edx
  408019:	mov    DWORD PTR [rbp-0xa8],eax
  40801f:	mov    rax,QWORD PTR [rbp-0xc8]
  408026:	mov    edi,eax
  408028:	call   4045e7 <main@@Base+0x41a>
  40802d:	mov    DWORD PTR [rbp-0xac],eax
  408033:	movzx  eax,WORD PTR [rbp-0xd4]
  40803a:	movzx  edx,ax
  40803d:	mov    ecx,DWORD PTR [rbp-0xa8]
  408043:	mov    rax,QWORD PTR [rbp-0xb8]
  40804a:	mov    esi,ecx
  40804c:	mov    rdi,rax
  40804f:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  408054:	mov    DWORD PTR [rbp-0xa4],eax
  40805a:	mov    QWORD PTR [rbp-0xa0],0x0
  408065:	mov    DWORD PTR [rbp-0x98],0x0
  40806f:	mov    rax,QWORD PTR [rbp-0xa0]
  408076:	add    rax,0x4
  40807a:	mov    QWORD PTR [rbp-0xa0],rax
  408081:	mov    eax,DWORD PTR [rbp-0x98]
  408087:	cdqe   
  408089:	shl    rax,0x4
  40808d:	add    rax,rbp
  408090:	lea    rdx,[rax-0x90]
  408097:	lea    rax,[rbp-0xac]
  40809e:	mov    QWORD PTR [rdx],rax
  4080a1:	mov    eax,DWORD PTR [rbp-0x98]
  4080a7:	cdqe   
  4080a9:	shl    rax,0x4
  4080ad:	add    rax,rbp
  4080b0:	sub    rax,0x88
  4080b6:	mov    QWORD PTR [rax],0x4
  4080bd:	mov    eax,DWORD PTR [rbp-0x98]
  4080c3:	add    eax,0x1
  4080c6:	mov    DWORD PTR [rbp-0x98],eax
  4080cc:	cmp    DWORD PTR [rbp-0xa8],0x0
  4080d3:	je     40813b <flatcc_builder_create_vector@@Base+0x1f4>
  4080d5:	mov    rdx,QWORD PTR [rbp-0xa0]
  4080dc:	mov    eax,DWORD PTR [rbp-0xa8]
  4080e2:	add    rax,rdx
  4080e5:	mov    QWORD PTR [rbp-0xa0],rax
  4080ec:	mov    eax,DWORD PTR [rbp-0x98]
  4080f2:	cdqe   
  4080f4:	shl    rax,0x4
  4080f8:	add    rax,rbp
  4080fb:	lea    rdx,[rax-0x90]
  408102:	mov    rax,QWORD PTR [rbp-0xc0]
  408109:	mov    QWORD PTR [rdx],rax
  40810c:	mov    edx,DWORD PTR [rbp-0x98]
  408112:	mov    eax,DWORD PTR [rbp-0xa8]
  408118:	movsxd rdx,edx
  40811b:	shl    rdx,0x4
  40811f:	add    rdx,rbp
  408122:	sub    rdx,0x88
  408129:	mov    QWORD PTR [rdx],rax
  40812c:	mov    eax,DWORD PTR [rbp-0x98]
  408132:	add    eax,0x1
  408135:	mov    DWORD PTR [rbp-0x98],eax
  40813b:	cmp    DWORD PTR [rbp-0xa4],0x0
  408142:	je     4081a9 <flatcc_builder_create_vector@@Base+0x262>
  408144:	mov    rdx,QWORD PTR [rbp-0xa0]
  40814b:	mov    eax,DWORD PTR [rbp-0xa4]
  408151:	add    rax,rdx
  408154:	mov    QWORD PTR [rbp-0xa0],rax
  40815b:	mov    eax,DWORD PTR [rbp-0x98]
  408161:	cdqe   
  408163:	shl    rax,0x4
  408167:	add    rax,rbp
  40816a:	sub    rax,0x90
  408170:	mov    rdx,0x40b640
  408177:	mov    QWORD PTR [rax],rdx
  40817a:	mov    edx,DWORD PTR [rbp-0x98]
  408180:	mov    eax,DWORD PTR [rbp-0xa4]
  408186:	movsxd rdx,edx
  408189:	shl    rdx,0x4
  40818d:	add    rdx,rbp
  408190:	sub    rdx,0x88
  408197:	mov    QWORD PTR [rdx],rax
  40819a:	mov    eax,DWORD PTR [rbp-0x98]
  4081a0:	add    eax,0x1
  4081a3:	mov    DWORD PTR [rbp-0x98],eax
  4081a9:	lea    rdx,[rbp-0xa0]
  4081b0:	mov    rax,QWORD PTR [rbp-0xb8]
  4081b7:	mov    rsi,rdx
  4081ba:	mov    rdi,rax
  4081bd:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4081c2:	mov    rcx,QWORD PTR [rbp-0x8]
  4081c6:	xor    rcx,QWORD PTR fs:0x28
  4081cf:	je     4081d6 <flatcc_builder_create_vector@@Base+0x28f>
  4081d1:	call   403080 <__stack_chk_fail@plt>
  4081d6:	leave  
  4081d7:	ret    

00000000004081d8 <flatcc_builder_end_vector@@Base>:
  4081d8:	push   rbp
  4081d9:	mov    rbp,rsp
  4081dc:	sub    rsp,0x20
  4081e0:	mov    QWORD PTR [rbp-0x18],rdi
  4081e4:	mov    rax,QWORD PTR [rbp-0x18]
  4081e8:	mov    rax,QWORD PTR [rax+0x30]
  4081ec:	movzx  eax,WORD PTR [rax+0xe]
  4081f0:	cmp    ax,0x4
  4081f4:	je     408215 <flatcc_builder_end_vector@@Base+0x3d>
  4081f6:	lea    rcx,[rip+0x3e93]        # 40c090 <flatcc_builder_padding_base@@Base+0xa50>
  4081fd:	mov    edx,0x578
  408202:	lea    rsi,[rip+0x3637]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408209:	lea    rdi,[rip+0x3778]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  408210:	call   4030b0 <__assert_fail@plt>
  408215:	mov    rax,QWORD PTR [rbp-0x18]
  408219:	mov    rax,QWORD PTR [rax+0x30]
  40821d:	mov    eax,DWORD PTR [rax+0x18]
  408220:	mov    r8d,eax
  408223:	mov    rax,QWORD PTR [rbp-0x18]
  408227:	movzx  eax,WORD PTR [rax+0xea]
  40822e:	movzx  edx,ax
  408231:	mov    rax,QWORD PTR [rbp-0x18]
  408235:	mov    rax,QWORD PTR [rax+0x30]
  408239:	mov    eax,DWORD PTR [rax+0x10]
  40823c:	mov    ecx,eax
  40823e:	mov    rax,QWORD PTR [rbp-0x18]
  408242:	mov    rax,QWORD PTR [rax+0x30]
  408246:	mov    eax,DWORD PTR [rax+0x14]
  408249:	mov    edi,eax
  40824b:	mov    rax,QWORD PTR [rbp-0x18]
  40824f:	mov    rsi,QWORD PTR [rax+0x18]
  408253:	mov    rax,QWORD PTR [rbp-0x18]
  408257:	mov    r9,r8
  40825a:	mov    r8d,edx
  40825d:	mov    rdx,rdi
  408260:	mov    rdi,rax
  408263:	call   407f47 <flatcc_builder_create_vector@@Base>
  408268:	mov    DWORD PTR [rbp-0x4],eax
  40826b:	cmp    DWORD PTR [rbp-0x4],0x0
  40826f:	jne    408278 <flatcc_builder_end_vector@@Base+0xa0>
  408271:	mov    eax,0x0
  408276:	jmp    408287 <flatcc_builder_end_vector@@Base+0xaf>
  408278:	mov    rax,QWORD PTR [rbp-0x18]
  40827c:	mov    rdi,rax
  40827f:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408284:	mov    eax,DWORD PTR [rbp-0x4]
  408287:	leave  
  408288:	ret    

0000000000408289 <flatcc_builder_vector_count@@Base>:
  408289:	push   rbp
  40828a:	mov    rbp,rsp
  40828d:	mov    QWORD PTR [rbp-0x8],rdi
  408291:	mov    rax,QWORD PTR [rbp-0x8]
  408295:	mov    rax,QWORD PTR [rax+0x30]
  408299:	mov    eax,DWORD PTR [rax+0x14]
  40829c:	mov    eax,eax
  40829e:	pop    rbp
  40829f:	ret    

00000000004082a0 <flatcc_builder_vector_edit@@Base>:
  4082a0:	push   rbp
  4082a1:	mov    rbp,rsp
  4082a4:	mov    QWORD PTR [rbp-0x8],rdi
  4082a8:	mov    rax,QWORD PTR [rbp-0x8]
  4082ac:	mov    rax,QWORD PTR [rax+0x18]
  4082b0:	pop    rbp
  4082b1:	ret    
  4082b2:	push   rbp
  4082b3:	mov    rbp,rsp
  4082b6:	push   rbx
  4082b7:	sub    rsp,0xe8
  4082be:	mov    QWORD PTR [rbp-0xd8],rdi
  4082c5:	mov    QWORD PTR [rbp-0xe0],rsi
  4082cc:	mov    QWORD PTR [rbp-0xe8],rdx
  4082d3:	mov    QWORD PTR [rbp-0xf0],rcx
  4082da:	mov    rax,QWORD PTR fs:0x28
  4082e3:	mov    QWORD PTR [rbp-0x18],rax
  4082e7:	xor    eax,eax
  4082e9:	mov    rax,QWORD PTR [rbp-0xe8]
  4082f0:	cmp    eax,0x3fffffff
  4082f5:	jbe    408301 <flatcc_builder_vector_edit@@Base+0x61>
  4082f7:	mov    eax,0x0
  4082fc:	jmp    408645 <flatcc_builder_vector_edit@@Base+0x3a5>
  408301:	mov    rax,QWORD PTR [rbp-0xd8]
  408308:	mov    esi,0x4
  40830d:	mov    rdi,rax
  408310:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  408315:	mov    rax,QWORD PTR [rbp-0xe8]
  40831c:	shl    eax,0x2
  40831f:	mov    DWORD PTR [rbp-0xc0],eax
  408325:	mov    rax,QWORD PTR [rbp-0xe8]
  40832c:	mov    edi,eax
  40832e:	call   4045e7 <main@@Base+0x41a>
  408333:	mov    DWORD PTR [rbp-0xc8],eax
  408339:	mov    ecx,DWORD PTR [rbp-0xc0]
  40833f:	mov    rax,QWORD PTR [rbp-0xd8]
  408346:	mov    edx,0x4
  40834b:	mov    esi,ecx
  40834d:	mov    rdi,rax
  408350:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  408355:	mov    DWORD PTR [rbp-0xbc],eax
  40835b:	mov    QWORD PTR [rbp-0xb0],0x0
  408366:	mov    DWORD PTR [rbp-0xa8],0x0
  408370:	mov    rax,QWORD PTR [rbp-0xb0]
  408377:	add    rax,0x4
  40837b:	mov    QWORD PTR [rbp-0xb0],rax
  408382:	mov    eax,DWORD PTR [rbp-0xa8]
  408388:	cdqe   
  40838a:	shl    rax,0x4
  40838e:	lea    rbx,[rbp-0x10]
  408392:	add    rax,rbx
  408395:	lea    rdx,[rax-0x90]
  40839c:	lea    rax,[rbp-0xc8]
  4083a3:	mov    QWORD PTR [rdx],rax
  4083a6:	mov    eax,DWORD PTR [rbp-0xa8]
  4083ac:	cdqe   
  4083ae:	shl    rax,0x4
  4083b2:	lea    rbx,[rbp-0x10]
  4083b6:	add    rax,rbx
  4083b9:	sub    rax,0x88
  4083bf:	mov    QWORD PTR [rax],0x4
  4083c6:	mov    eax,DWORD PTR [rbp-0xa8]
  4083cc:	add    eax,0x1
  4083cf:	mov    DWORD PTR [rbp-0xa8],eax
  4083d5:	cmp    DWORD PTR [rbp-0xc0],0x0
  4083dc:	je     40844c <flatcc_builder_vector_edit@@Base+0x1ac>
  4083de:	mov    rdx,QWORD PTR [rbp-0xb0]
  4083e5:	mov    eax,DWORD PTR [rbp-0xc0]
  4083eb:	add    rax,rdx
  4083ee:	mov    QWORD PTR [rbp-0xb0],rax
  4083f5:	mov    eax,DWORD PTR [rbp-0xa8]
  4083fb:	cdqe   
  4083fd:	shl    rax,0x4
  408401:	lea    rcx,[rbp-0x10]
  408405:	add    rax,rcx
  408408:	lea    rdx,[rax-0x90]
  40840f:	mov    rax,QWORD PTR [rbp-0xe0]
  408416:	mov    QWORD PTR [rdx],rax
  408419:	mov    edx,DWORD PTR [rbp-0xa8]
  40841f:	mov    eax,DWORD PTR [rbp-0xc0]
  408425:	movsxd rdx,edx
  408428:	shl    rdx,0x4
  40842c:	lea    rbx,[rbp-0x10]
  408430:	add    rdx,rbx
  408433:	sub    rdx,0x88
  40843a:	mov    QWORD PTR [rdx],rax
  40843d:	mov    eax,DWORD PTR [rbp-0xa8]
  408443:	add    eax,0x1
  408446:	mov    DWORD PTR [rbp-0xa8],eax
  40844c:	cmp    DWORD PTR [rbp-0xbc],0x0
  408453:	je     4084c2 <flatcc_builder_vector_edit@@Base+0x222>
  408455:	mov    rdx,QWORD PTR [rbp-0xb0]
  40845c:	mov    eax,DWORD PTR [rbp-0xbc]
  408462:	add    rax,rdx
  408465:	mov    QWORD PTR [rbp-0xb0],rax
  40846c:	mov    eax,DWORD PTR [rbp-0xa8]
  408472:	cdqe   
  408474:	shl    rax,0x4
  408478:	lea    rsi,[rbp-0x10]
  40847c:	add    rax,rsi
  40847f:	sub    rax,0x90
  408485:	mov    rdx,0x40b640
  40848c:	mov    QWORD PTR [rax],rdx
  40848f:	mov    edx,DWORD PTR [rbp-0xa8]
  408495:	mov    eax,DWORD PTR [rbp-0xbc]
  40849b:	movsxd rdx,edx
  40849e:	shl    rdx,0x4
  4084a2:	lea    rcx,[rbp-0x10]
  4084a6:	add    rdx,rcx
  4084a9:	sub    rdx,0x88
  4084b0:	mov    QWORD PTR [rdx],rax
  4084b3:	mov    eax,DWORD PTR [rbp-0xa8]
  4084b9:	add    eax,0x1
  4084bc:	mov    DWORD PTR [rbp-0xa8],eax
  4084c2:	mov    rax,QWORD PTR [rbp-0xd8]
  4084c9:	mov    eax,DWORD PTR [rax+0xf0]
  4084cf:	mov    edx,eax
  4084d1:	mov    rax,QWORD PTR [rbp-0xb0]
  4084d8:	sub    edx,eax
  4084da:	mov    eax,edx
  4084dc:	mov    DWORD PTR [rbp-0xb8],eax
  4084e2:	mov    DWORD PTR [rbp-0xc4],0x0
  4084ec:	jmp    408619 <flatcc_builder_vector_edit@@Base+0x379>
  4084f1:	mov    eax,DWORD PTR [rbp-0xc4]
  4084f7:	lea    rdx,[rax*4+0x0]
  4084ff:	mov    rax,QWORD PTR [rbp-0xe0]
  408506:	add    rax,rdx
  408509:	mov    eax,DWORD PTR [rax]
  40850b:	test   eax,eax
  40850d:	je     4085b3 <flatcc_builder_vector_edit@@Base+0x313>
  408513:	mov    eax,DWORD PTR [rbp-0xc4]
  408519:	lea    rdx,[rax*4+0x0]
  408521:	mov    rax,QWORD PTR [rbp-0xe0]
  408528:	add    rax,rdx
  40852b:	mov    eax,DWORD PTR [rax]
  40852d:	sub    eax,DWORD PTR [rbp-0xb8]
  408533:	mov    edx,DWORD PTR [rbp-0xc4]
  408539:	shl    edx,0x2
  40853c:	sub    eax,edx
  40853e:	sub    eax,0x4
  408541:	mov    DWORD PTR [rbp-0xb4],eax
  408547:	mov    eax,DWORD PTR [rbp-0xc4]
  40854d:	lea    rdx,[rax*4+0x0]
  408555:	mov    rax,QWORD PTR [rbp-0xe0]
  40855c:	lea    rbx,[rdx+rax*1]
  408560:	mov    eax,DWORD PTR [rbp-0xb4]
  408566:	mov    edi,eax
  408568:	call   4045e7 <main@@Base+0x41a>
  40856d:	mov    DWORD PTR [rbx],eax
  40856f:	cmp    QWORD PTR [rbp-0xf0],0x0
  408577:	je     408612 <flatcc_builder_vector_edit@@Base+0x372>
  40857d:	mov    edx,DWORD PTR [rbp-0xc4]
  408583:	mov    rax,QWORD PTR [rbp-0xf0]
  40858a:	add    rax,rdx
  40858d:	movzx  eax,BYTE PTR [rax]
  408590:	test   al,al
  408592:	jne    408612 <flatcc_builder_vector_edit@@Base+0x372>
  408594:	lea    rcx,[rip+0x3b15]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  40859b:	mov    edx,0x5b1
  4085a0:	lea    rsi,[rip+0x3299]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4085a7:	lea    rdi,[rip+0x35a8]        # 40bb56 <flatcc_builder_padding_base@@Base+0x516>
  4085ae:	call   4030b0 <__assert_fail@plt>
  4085b3:	cmp    QWORD PTR [rbp-0xf0],0x0
  4085bb:	je     4085f3 <flatcc_builder_vector_edit@@Base+0x353>
  4085bd:	mov    edx,DWORD PTR [rbp-0xc4]
  4085c3:	mov    rax,QWORD PTR [rbp-0xf0]
  4085ca:	add    rax,rdx
  4085cd:	movzx  eax,BYTE PTR [rax]
  4085d0:	test   al,al
  4085d2:	je     408612 <flatcc_builder_vector_edit@@Base+0x372>
  4085d4:	lea    rcx,[rip+0x3ad5]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  4085db:	mov    edx,0x5b5
  4085e0:	lea    rsi,[rip+0x3259]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4085e7:	lea    rdi,[rip+0x3576]        # 40bb64 <flatcc_builder_padding_base@@Base+0x524>
  4085ee:	call   4030b0 <__assert_fail@plt>
  4085f3:	lea    rcx,[rip+0x3ab6]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  4085fa:	mov    edx,0x5b7
  4085ff:	lea    rsi,[rip+0x323a]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408606:	lea    rdi,[rip+0x3293]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40860d:	call   4030b0 <__assert_fail@plt>
  408612:	add    DWORD PTR [rbp-0xc4],0x1
  408619:	mov    rax,QWORD PTR [rbp-0xe8]
  408620:	cmp    eax,DWORD PTR [rbp-0xc4]
  408626:	ja     4084f1 <flatcc_builder_vector_edit@@Base+0x251>
  40862c:	lea    rdx,[rbp-0xb0]
  408633:	mov    rax,QWORD PTR [rbp-0xd8]
  40863a:	mov    rsi,rdx
  40863d:	mov    rdi,rax
  408640:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  408645:	mov    rbx,QWORD PTR [rbp-0x18]
  408649:	xor    rbx,QWORD PTR fs:0x28
  408652:	je     408659 <flatcc_builder_vector_edit@@Base+0x3b9>
  408654:	call   403080 <__stack_chk_fail@plt>
  408659:	add    rsp,0xe8
  408660:	pop    rbx
  408661:	pop    rbp
  408662:	ret    

0000000000408663 <flatcc_builder_create_offset_vector_direct@@Base>:
  408663:	push   rbp
  408664:	mov    rbp,rsp
  408667:	sub    rsp,0x20
  40866b:	mov    QWORD PTR [rbp-0x8],rdi
  40866f:	mov    QWORD PTR [rbp-0x10],rsi
  408673:	mov    QWORD PTR [rbp-0x18],rdx
  408677:	mov    rdx,QWORD PTR [rbp-0x18]
  40867b:	mov    rsi,QWORD PTR [rbp-0x10]
  40867f:	mov    rax,QWORD PTR [rbp-0x8]
  408683:	mov    ecx,0x0
  408688:	mov    rdi,rax
  40868b:	call   4082b2 <flatcc_builder_vector_edit@@Base+0x12>
  408690:	leave  
  408691:	ret    

0000000000408692 <flatcc_builder_end_offset_vector@@Base>:
  408692:	push   rbp
  408693:	mov    rbp,rsp
  408696:	sub    rsp,0x20
  40869a:	mov    QWORD PTR [rbp-0x18],rdi
  40869e:	mov    rax,QWORD PTR [rbp-0x18]
  4086a2:	mov    rax,QWORD PTR [rax+0x30]
  4086a6:	movzx  eax,WORD PTR [rax+0xe]
  4086aa:	cmp    ax,0x5
  4086ae:	je     4086cf <flatcc_builder_end_offset_vector@@Base+0x3d>
  4086b0:	lea    rcx,[rip+0x3a29]        # 40c0e0 <flatcc_builder_padding_base@@Base+0xaa0>
  4086b7:	mov    edx,0x5c8
  4086bc:	lea    rsi,[rip+0x317d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4086c3:	lea    rdi,[rip+0x332e]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  4086ca:	call   4030b0 <__assert_fail@plt>
  4086cf:	mov    rax,QWORD PTR [rbp-0x18]
  4086d3:	mov    rax,QWORD PTR [rax+0x30]
  4086d7:	mov    eax,DWORD PTR [rax+0x14]
  4086da:	mov    edx,eax
  4086dc:	mov    rax,QWORD PTR [rbp-0x18]
  4086e0:	mov    rcx,QWORD PTR [rax+0x18]
  4086e4:	mov    rax,QWORD PTR [rbp-0x18]
  4086e8:	mov    rsi,rcx
  4086eb:	mov    rdi,rax
  4086ee:	call   408663 <flatcc_builder_create_offset_vector_direct@@Base>
  4086f3:	mov    DWORD PTR [rbp-0x4],eax
  4086f6:	cmp    DWORD PTR [rbp-0x4],0x0
  4086fa:	jne    408703 <flatcc_builder_end_offset_vector@@Base+0x71>
  4086fc:	mov    eax,0x0
  408701:	jmp    408712 <flatcc_builder_end_offset_vector@@Base+0x80>
  408703:	mov    rax,QWORD PTR [rbp-0x18]
  408707:	mov    rdi,rax
  40870a:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40870f:	mov    eax,DWORD PTR [rbp-0x4]
  408712:	leave  
  408713:	ret    

0000000000408714 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408714:	push   rbp
  408715:	mov    rbp,rsp
  408718:	sub    rsp,0x20
  40871c:	mov    QWORD PTR [rbp-0x18],rdi
  408720:	mov    QWORD PTR [rbp-0x20],rsi
  408724:	mov    rax,QWORD PTR [rbp-0x18]
  408728:	mov    rax,QWORD PTR [rax+0x30]
  40872c:	movzx  eax,WORD PTR [rax+0xe]
  408730:	cmp    ax,0x5
  408734:	je     408755 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  408736:	lea    rcx,[rip+0x39e3]        # 40c120 <flatcc_builder_padding_base@@Base+0xae0>
  40873d:	mov    edx,0x5d5
  408742:	lea    rsi,[rip+0x30f7]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408749:	lea    rdi,[rip+0x32a8]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  408750:	call   4030b0 <__assert_fail@plt>
  408755:	mov    rax,QWORD PTR [rbp-0x18]
  408759:	mov    rax,QWORD PTR [rax+0x30]
  40875d:	mov    eax,DWORD PTR [rax+0x14]
  408760:	mov    edi,eax
  408762:	mov    rax,QWORD PTR [rbp-0x18]
  408766:	mov    rsi,QWORD PTR [rax+0x18]
  40876a:	mov    rdx,QWORD PTR [rbp-0x20]
  40876e:	mov    rax,QWORD PTR [rbp-0x18]
  408772:	mov    rcx,rdx
  408775:	mov    rdx,rdi
  408778:	mov    rdi,rax
  40877b:	call   4082b2 <flatcc_builder_vector_edit@@Base+0x12>
  408780:	mov    DWORD PTR [rbp-0x4],eax
  408783:	cmp    DWORD PTR [rbp-0x4],0x0
  408787:	jne    408790 <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  408789:	mov    eax,0x0
  40878e:	jmp    40879f <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  408790:	mov    rax,QWORD PTR [rbp-0x18]
  408794:	mov    rdi,rax
  408797:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40879c:	mov    eax,DWORD PTR [rbp-0x4]
  40879f:	leave  
  4087a0:	ret    

00000000004087a1 <flatcc_builder_offset_vector_edit@@Base>:
  4087a1:	push   rbp
  4087a2:	mov    rbp,rsp
  4087a5:	mov    QWORD PTR [rbp-0x8],rdi
  4087a9:	mov    rax,QWORD PTR [rbp-0x8]
  4087ad:	mov    rax,QWORD PTR [rax+0x18]
  4087b1:	pop    rbp
  4087b2:	ret    

00000000004087b3 <flatcc_builder_offset_vector_count@@Base>:
  4087b3:	push   rbp
  4087b4:	mov    rbp,rsp
  4087b7:	mov    QWORD PTR [rbp-0x8],rdi
  4087bb:	mov    rax,QWORD PTR [rbp-0x8]
  4087bf:	mov    rax,QWORD PTR [rax+0x30]
  4087c3:	mov    eax,DWORD PTR [rax+0x14]
  4087c6:	mov    eax,eax
  4087c8:	pop    rbp
  4087c9:	ret    

00000000004087ca <flatcc_builder_table_add_union@@Base>:
  4087ca:	push   rbp
  4087cb:	mov    rbp,rsp
  4087ce:	sub    rsp,0x30
  4087d2:	mov    QWORD PTR [rbp-0x18],rdi
  4087d6:	mov    DWORD PTR [rbp-0x1c],esi
  4087d9:	mov    QWORD PTR [rbp-0x24],rdx
  4087dd:	mov    rax,QWORD PTR [rbp-0x18]
  4087e1:	mov    rax,QWORD PTR [rax+0x30]
  4087e5:	movzx  eax,WORD PTR [rax+0xe]
  4087e9:	cmp    ax,0x3
  4087ed:	je     40880e <flatcc_builder_table_add_union@@Base+0x44>
  4087ef:	lea    rcx,[rip+0x395a]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  4087f6:	mov    edx,0x5ee
  4087fb:	lea    rsi,[rip+0x303e]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408802:	lea    rdi,[rip+0x330f]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  408809:	call   4030b0 <__assert_fail@plt>
  40880e:	movzx  eax,BYTE PTR [rbp-0x24]
  408812:	test   al,al
  408814:	jne    408855 <flatcc_builder_table_add_union@@Base+0x8b>
  408816:	mov    eax,DWORD PTR [rbp-0x20]
  408819:	test   eax,eax
  40881b:	je     408855 <flatcc_builder_table_add_union@@Base+0x8b>
  40881d:	movzx  eax,BYTE PTR [rbp-0x24]
  408821:	test   al,al
  408823:	jne    40884b <flatcc_builder_table_add_union@@Base+0x81>
  408825:	mov    eax,DWORD PTR [rbp-0x20]
  408828:	test   eax,eax
  40882a:	je     40884b <flatcc_builder_table_add_union@@Base+0x81>
  40882c:	lea    rcx,[rip+0x391d]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  408833:	mov    edx,0x5ef
  408838:	lea    rsi,[rip+0x3001]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40883f:	lea    rdi,[rip+0x3332]        # 40bb78 <flatcc_builder_padding_base@@Base+0x538>
  408846:	call   4030b0 <__assert_fail@plt>
  40884b:	mov    eax,0xffffffff
  408850:	jmp    40891d <flatcc_builder_table_add_union@@Base+0x153>
  408855:	mov    eax,DWORD PTR [rbp-0x20]
  408858:	test   eax,eax
  40885a:	je     4088ae <flatcc_builder_table_add_union@@Base+0xe4>
  40885c:	mov    edx,DWORD PTR [rbp-0x1c]
  40885f:	mov    rax,QWORD PTR [rbp-0x18]
  408863:	mov    esi,edx
  408865:	mov    rdi,rax
  408868:	call   40956e <flatcc_builder_table_add_offset@@Base>
  40886d:	mov    QWORD PTR [rbp-0x10],rax
  408871:	cmp    QWORD PTR [rbp-0x10],0x0
  408876:	jne    4088a5 <flatcc_builder_table_add_union@@Base+0xdb>
  408878:	cmp    QWORD PTR [rbp-0x10],0x0
  40887d:	jne    40889e <flatcc_builder_table_add_union@@Base+0xd4>
  40887f:	lea    rcx,[rip+0x38ca]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  408886:	mov    edx,0x5f2
  40888b:	lea    rsi,[rip+0x2fae]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408892:	lea    rdi,[rip+0x3301]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408899:	call   4030b0 <__assert_fail@plt>
  40889e:	mov    eax,0xffffffff
  4088a3:	jmp    40891d <flatcc_builder_table_add_union@@Base+0x153>
  4088a5:	mov    edx,DWORD PTR [rbp-0x20]
  4088a8:	mov    rax,QWORD PTR [rbp-0x10]
  4088ac:	mov    DWORD PTR [rax],edx
  4088ae:	mov    eax,DWORD PTR [rbp-0x1c]
  4088b1:	lea    esi,[rax-0x1]
  4088b4:	mov    rax,QWORD PTR [rbp-0x18]
  4088b8:	mov    ecx,0x1
  4088bd:	mov    edx,0x1
  4088c2:	mov    rdi,rax
  4088c5:	call   4093a0 <flatcc_builder_table_add@@Base>
  4088ca:	mov    QWORD PTR [rbp-0x8],rax
  4088ce:	cmp    QWORD PTR [rbp-0x8],0x0
  4088d3:	jne    408902 <flatcc_builder_table_add_union@@Base+0x138>
  4088d5:	cmp    QWORD PTR [rbp-0x8],0x0
  4088da:	jne    4088fb <flatcc_builder_table_add_union@@Base+0x131>
  4088dc:	lea    rcx,[rip+0x386d]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  4088e3:	mov    edx,0x5f6
  4088e8:	lea    rsi,[rip+0x2f51]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4088ef:	lea    rdi,[rip+0x32ae]        # 40bba4 <flatcc_builder_padding_base@@Base+0x564>
  4088f6:	call   4030b0 <__assert_fail@plt>
  4088fb:	mov    eax,0xffffffff
  408900:	jmp    40891d <flatcc_builder_table_add_union@@Base+0x153>
  408902:	movzx  eax,BYTE PTR [rbp-0x24]
  408906:	movzx  eax,al
  408909:	mov    edi,eax
  40890b:	call   4045f3 <main@@Base+0x426>
  408910:	mov    edx,eax
  408912:	mov    rax,QWORD PTR [rbp-0x8]
  408916:	mov    BYTE PTR [rax],dl
  408918:	mov    eax,0x0
  40891d:	leave  
  40891e:	ret    

000000000040891f <flatcc_builder_table_add_union_vector@@Base>:
  40891f:	push   rbp
  408920:	mov    rbp,rsp
  408923:	sub    rsp,0x30
  408927:	mov    QWORD PTR [rbp-0x18],rdi
  40892b:	mov    DWORD PTR [rbp-0x1c],esi
  40892e:	mov    QWORD PTR [rbp-0x24],rdx
  408932:	mov    rax,QWORD PTR [rbp-0x18]
  408936:	mov    rax,QWORD PTR [rax+0x30]
  40893a:	movzx  eax,WORD PTR [rax+0xe]
  40893e:	cmp    ax,0x3
  408942:	je     408963 <flatcc_builder_table_add_union_vector@@Base+0x44>
  408944:	lea    rcx,[rip+0x3835]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  40894b:	mov    edx,0x600
  408950:	lea    rsi,[rip+0x2ee9]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408957:	lea    rdi,[rip+0x31ba]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  40895e:	call   4030b0 <__assert_fail@plt>
  408963:	mov    eax,DWORD PTR [rbp-0x24]
  408966:	test   eax,eax
  408968:	sete   dl
  40896b:	mov    eax,DWORD PTR [rbp-0x20]
  40896e:	test   eax,eax
  408970:	sete   al
  408973:	xor    eax,edx
  408975:	test   al,al
  408977:	je     4089b8 <flatcc_builder_table_add_union_vector@@Base+0x99>
  408979:	mov    eax,DWORD PTR [rbp-0x24]
  40897c:	test   eax,eax
  40897e:	setne  dl
  408981:	mov    eax,DWORD PTR [rbp-0x20]
  408984:	test   eax,eax
  408986:	sete   al
  408989:	xor    eax,edx
  40898b:	test   al,al
  40898d:	jne    4089ae <flatcc_builder_table_add_union_vector@@Base+0x8f>
  40898f:	lea    rcx,[rip+0x37ea]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408996:	mov    edx,0x601
  40899b:	lea    rsi,[rip+0x2e9e]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4089a2:	lea    rdi,[rip+0x3207]        # 40bbb0 <flatcc_builder_padding_base@@Base+0x570>
  4089a9:	call   4030b0 <__assert_fail@plt>
  4089ae:	mov    eax,0xffffffff
  4089b3:	jmp    408a6f <flatcc_builder_table_add_union_vector@@Base+0x150>
  4089b8:	mov    eax,DWORD PTR [rbp-0x24]
  4089bb:	test   eax,eax
  4089bd:	je     408a6a <flatcc_builder_table_add_union_vector@@Base+0x14b>
  4089c3:	mov    eax,DWORD PTR [rbp-0x1c]
  4089c6:	lea    edx,[rax-0x1]
  4089c9:	mov    rax,QWORD PTR [rbp-0x18]
  4089cd:	mov    esi,edx
  4089cf:	mov    rdi,rax
  4089d2:	call   40956e <flatcc_builder_table_add_offset@@Base>
  4089d7:	mov    QWORD PTR [rbp-0x8],rax
  4089db:	cmp    QWORD PTR [rbp-0x8],0x0
  4089e0:	jne    408a0f <flatcc_builder_table_add_union_vector@@Base+0xf0>
  4089e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4089e7:	jne    408a08 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  4089e9:	lea    rcx,[rip+0x3790]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  4089f0:	mov    edx,0x604
  4089f5:	lea    rsi,[rip+0x2e44]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4089fc:	lea    rdi,[rip+0x3197]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408a03:	call   4030b0 <__assert_fail@plt>
  408a08:	mov    eax,0xffffffff
  408a0d:	jmp    408a6f <flatcc_builder_table_add_union_vector@@Base+0x150>
  408a0f:	mov    edx,DWORD PTR [rbp-0x24]
  408a12:	mov    rax,QWORD PTR [rbp-0x8]
  408a16:	mov    DWORD PTR [rax],edx
  408a18:	mov    edx,DWORD PTR [rbp-0x1c]
  408a1b:	mov    rax,QWORD PTR [rbp-0x18]
  408a1f:	mov    esi,edx
  408a21:	mov    rdi,rax
  408a24:	call   40956e <flatcc_builder_table_add_offset@@Base>
  408a29:	mov    QWORD PTR [rbp-0x8],rax
  408a2d:	cmp    QWORD PTR [rbp-0x8],0x0
  408a32:	jne    408a61 <flatcc_builder_table_add_union_vector@@Base+0x142>
  408a34:	cmp    QWORD PTR [rbp-0x8],0x0
  408a39:	jne    408a5a <flatcc_builder_table_add_union_vector@@Base+0x13b>
  408a3b:	lea    rcx,[rip+0x373e]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408a42:	mov    edx,0x608
  408a47:	lea    rsi,[rip+0x2df2]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408a4e:	lea    rdi,[rip+0x3145]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408a55:	call   4030b0 <__assert_fail@plt>
  408a5a:	mov    eax,0xffffffff
  408a5f:	jmp    408a6f <flatcc_builder_table_add_union_vector@@Base+0x150>
  408a61:	mov    edx,DWORD PTR [rbp-0x20]
  408a64:	mov    rax,QWORD PTR [rbp-0x8]
  408a68:	mov    DWORD PTR [rax],edx
  408a6a:	mov    eax,0x0
  408a6f:	leave  
  408a70:	ret    

0000000000408a71 <flatcc_builder_create_union_vector@@Base>:
  408a71:	push   rbp
  408a72:	mov    rbp,rsp
  408a75:	sub    rsp,0x40
  408a79:	mov    QWORD PTR [rbp-0x28],rdi
  408a7d:	mov    QWORD PTR [rbp-0x30],rsi
  408a81:	mov    QWORD PTR [rbp-0x38],rdx
  408a85:	mov    DWORD PTR [rbp-0x8],0x0
  408a8c:	mov    DWORD PTR [rbp-0x4],0x0
  408a93:	mov    rax,QWORD PTR [rbp-0x28]
  408a97:	mov    rdi,rax
  408a9a:	call   4070a0 <flatcc_builder_start_offset_vector@@Base>
  408a9f:	test   eax,eax
  408aa1:	je     408aac <flatcc_builder_create_union_vector@@Base+0x3b>
  408aa3:	mov    rax,QWORD PTR [rbp-0x8]
  408aa7:	jmp    408b98 <flatcc_builder_create_union_vector@@Base+0x127>
  408aac:	mov    rdx,QWORD PTR [rbp-0x38]
  408ab0:	mov    rax,QWORD PTR [rbp-0x28]
  408ab4:	mov    rsi,rdx
  408ab7:	mov    rdi,rax
  408aba:	call   406ab0 <flatcc_builder_extend_offset_vector@@Base>
  408abf:	test   rax,rax
  408ac2:	jne    408acd <flatcc_builder_create_union_vector@@Base+0x5c>
  408ac4:	mov    rax,QWORD PTR [rbp-0x8]
  408ac8:	jmp    408b98 <flatcc_builder_create_union_vector@@Base+0x127>
  408acd:	mov    rax,QWORD PTR [rbp-0x38]
  408ad1:	mov    edx,eax
  408ad3:	mov    rax,QWORD PTR [rbp-0x28]
  408ad7:	mov    esi,edx
  408ad9:	mov    rdi,rax
  408adc:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  408ae1:	mov    QWORD PTR [rbp-0x18],rax
  408ae5:	cmp    QWORD PTR [rbp-0x18],0x0
  408aea:	jne    408af5 <flatcc_builder_create_union_vector@@Base+0x84>
  408aec:	mov    rax,QWORD PTR [rbp-0x8]
  408af0:	jmp    408b98 <flatcc_builder_create_union_vector@@Base+0x127>
  408af5:	mov    rax,QWORD PTR [rbp-0x28]
  408af9:	mov    rdi,rax
  408afc:	call   4087a1 <flatcc_builder_offset_vector_edit@@Base>
  408b01:	mov    QWORD PTR [rbp-0x10],rax
  408b05:	mov    QWORD PTR [rbp-0x20],0x0
  408b0d:	jmp    408b62 <flatcc_builder_create_union_vector@@Base+0xf1>
  408b0f:	mov    rdx,QWORD PTR [rbp-0x18]
  408b13:	mov    rax,QWORD PTR [rbp-0x20]
  408b17:	add    rdx,rax
  408b1a:	mov    rax,QWORD PTR [rbp-0x20]
  408b1e:	lea    rcx,[rax*8+0x0]
  408b26:	mov    rax,QWORD PTR [rbp-0x30]
  408b2a:	add    rax,rcx
  408b2d:	movzx  eax,BYTE PTR [rax]
  408b30:	mov    BYTE PTR [rdx],al
  408b32:	mov    rax,QWORD PTR [rbp-0x20]
  408b36:	lea    rdx,[rax*4+0x0]
  408b3e:	mov    rax,QWORD PTR [rbp-0x10]
  408b42:	add    rdx,rax
  408b45:	mov    rax,QWORD PTR [rbp-0x20]
  408b49:	lea    rcx,[rax*8+0x0]
  408b51:	mov    rax,QWORD PTR [rbp-0x30]
  408b55:	add    rax,rcx
  408b58:	mov    eax,DWORD PTR [rax+0x4]
  408b5b:	mov    DWORD PTR [rdx],eax
  408b5d:	add    QWORD PTR [rbp-0x20],0x1
  408b62:	mov    rax,QWORD PTR [rbp-0x20]
  408b66:	cmp    rax,QWORD PTR [rbp-0x38]
  408b6a:	jb     408b0f <flatcc_builder_create_union_vector@@Base+0x9e>
  408b6c:	mov    rcx,QWORD PTR [rbp-0x38]
  408b70:	mov    rdx,QWORD PTR [rbp-0x10]
  408b74:	mov    rsi,QWORD PTR [rbp-0x18]
  408b78:	mov    rax,QWORD PTR [rbp-0x28]
  408b7c:	mov    rdi,rax
  408b7f:	call   408b9a <flatcc_builder_create_union_vector_direct@@Base>
  408b84:	mov    QWORD PTR [rbp-0x8],rax
  408b88:	mov    rax,QWORD PTR [rbp-0x28]
  408b8c:	mov    rdi,rax
  408b8f:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408b94:	mov    rax,QWORD PTR [rbp-0x8]
  408b98:	leave  
  408b99:	ret    

0000000000408b9a <flatcc_builder_create_union_vector_direct@@Base>:
  408b9a:	push   rbp
  408b9b:	mov    rbp,rsp
  408b9e:	sub    rsp,0x30
  408ba2:	mov    QWORD PTR [rbp-0x18],rdi
  408ba6:	mov    QWORD PTR [rbp-0x20],rsi
  408baa:	mov    QWORD PTR [rbp-0x28],rdx
  408bae:	mov    QWORD PTR [rbp-0x30],rcx
  408bb2:	mov    DWORD PTR [rbp-0x8],0x0
  408bb9:	mov    DWORD PTR [rbp-0x4],0x0
  408bc0:	mov    rcx,QWORD PTR [rbp-0x20]
  408bc4:	mov    rdx,QWORD PTR [rbp-0x30]
  408bc8:	mov    rsi,QWORD PTR [rbp-0x28]
  408bcc:	mov    rax,QWORD PTR [rbp-0x18]
  408bd0:	mov    rdi,rax
  408bd3:	call   4082b2 <flatcc_builder_vector_edit@@Base+0x12>
  408bd8:	mov    DWORD PTR [rbp-0x4],eax
  408bdb:	mov    eax,DWORD PTR [rbp-0x4]
  408bde:	test   eax,eax
  408be0:	jne    408be8 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  408be2:	mov    rax,QWORD PTR [rbp-0x8]
  408be6:	jmp    408c21 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408be8:	mov    rdx,QWORD PTR [rbp-0x30]
  408bec:	mov    rsi,QWORD PTR [rbp-0x20]
  408bf0:	mov    rax,QWORD PTR [rbp-0x18]
  408bf4:	mov    r9d,0xffffffff
  408bfa:	mov    r8d,0x1
  408c00:	mov    ecx,0x1
  408c05:	mov    rdi,rax
  408c08:	call   407f47 <flatcc_builder_create_vector@@Base>
  408c0d:	mov    DWORD PTR [rbp-0x8],eax
  408c10:	mov    eax,DWORD PTR [rbp-0x8]
  408c13:	test   eax,eax
  408c15:	jne    408c1d <flatcc_builder_create_union_vector_direct@@Base+0x83>
  408c17:	mov    rax,QWORD PTR [rbp-0x8]
  408c1b:	jmp    408c21 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408c1d:	mov    rax,QWORD PTR [rbp-0x8]
  408c21:	leave  
  408c22:	ret    

0000000000408c23 <flatcc_builder_start_union_vector@@Base>:
  408c23:	push   rbp
  408c24:	mov    rbp,rsp
  408c27:	sub    rsp,0x10
  408c2b:	mov    QWORD PTR [rbp-0x8],rdi
  408c2f:	mov    rax,QWORD PTR [rbp-0x8]
  408c33:	mov    esi,0x4
  408c38:	mov    rdi,rax
  408c3b:	call   405610 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408c40:	test   eax,eax
  408c42:	je     408c4b <flatcc_builder_start_union_vector@@Base+0x28>
  408c44:	mov    eax,0xffffffff
  408c49:	jmp    408c8d <flatcc_builder_start_union_vector@@Base+0x6a>
  408c4b:	mov    rax,QWORD PTR [rbp-0x8]
  408c4f:	mov    rax,QWORD PTR [rax+0x30]
  408c53:	mov    DWORD PTR [rax+0x10],0x8
  408c5a:	mov    rax,QWORD PTR [rbp-0x8]
  408c5e:	mov    rax,QWORD PTR [rax+0x30]
  408c62:	mov    DWORD PTR [rax+0x14],0x0
  408c69:	mov    rax,QWORD PTR [rbp-0x8]
  408c6d:	mov    rax,QWORD PTR [rax+0x30]
  408c71:	mov    WORD PTR [rax+0xe],0x7
  408c77:	mov    rax,QWORD PTR [rbp-0x8]
  408c7b:	mov    esi,0xfffffffc
  408c80:	mov    rdi,rax
  408c83:	call   40481a <flatcc_builder_default_alloc@@Base+0x16d>
  408c88:	mov    eax,0x0
  408c8d:	leave  
  408c8e:	ret    

0000000000408c8f <flatcc_builder_end_union_vector@@Base>:
  408c8f:	push   rbp
  408c90:	mov    rbp,rsp
  408c93:	sub    rsp,0x40
  408c97:	mov    QWORD PTR [rbp-0x38],rdi
  408c9b:	mov    DWORD PTR [rbp-0x8],0x0
  408ca2:	mov    DWORD PTR [rbp-0x4],0x0
  408ca9:	mov    rax,QWORD PTR [rbp-0x38]
  408cad:	mov    rax,QWORD PTR [rax+0x30]
  408cb1:	movzx  eax,WORD PTR [rax+0xe]
  408cb5:	cmp    ax,0x7
  408cb9:	je     408cda <flatcc_builder_end_union_vector@@Base+0x4b>
  408cbb:	lea    rcx,[rip+0x34fe]        # 40c1c0 <flatcc_builder_padding_base@@Base+0xb80>
  408cc2:	mov    edx,0x651
  408cc7:	lea    rsi,[rip+0x2b72]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408cce:	lea    rdi,[rip+0x2f03]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  408cd5:	call   4030b0 <__assert_fail@plt>
  408cda:	mov    rax,QWORD PTR [rbp-0x38]
  408cde:	mov    rdi,rax
  408ce1:	call   408de7 <flatcc_builder_union_vector_count@@Base>
  408ce6:	mov    QWORD PTR [rbp-0x28],rax
  408cea:	mov    rax,QWORD PTR [rbp-0x28]
  408cee:	mov    edx,eax
  408cf0:	mov    eax,edx
  408cf2:	shl    eax,0x2
  408cf5:	add    edx,eax
  408cf7:	mov    rax,QWORD PTR [rbp-0x38]
  408cfb:	mov    esi,edx
  408cfd:	mov    rdi,rax
  408d00:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  408d05:	mov    QWORD PTR [rbp-0x20],rax
  408d09:	cmp    QWORD PTR [rbp-0x20],0x0
  408d0e:	jne    408d19 <flatcc_builder_end_union_vector@@Base+0x8a>
  408d10:	mov    rax,QWORD PTR [rbp-0x8]
  408d14:	jmp    408dd3 <flatcc_builder_end_union_vector@@Base+0x144>
  408d19:	mov    rax,QWORD PTR [rbp-0x28]
  408d1d:	lea    rdx,[rax*4+0x0]
  408d25:	mov    rax,QWORD PTR [rbp-0x20]
  408d29:	add    rax,rdx
  408d2c:	mov    QWORD PTR [rbp-0x18],rax
  408d30:	mov    rax,QWORD PTR [rbp-0x38]
  408d34:	mov    rdi,rax
  408d37:	call   408dd5 <flatcc_builder_union_vector_edit@@Base>
  408d3c:	mov    QWORD PTR [rbp-0x10],rax
  408d40:	mov    QWORD PTR [rbp-0x30],0x0
  408d48:	jmp    408d9d <flatcc_builder_end_union_vector@@Base+0x10e>
  408d4a:	mov    rdx,QWORD PTR [rbp-0x18]
  408d4e:	mov    rax,QWORD PTR [rbp-0x30]
  408d52:	add    rdx,rax
  408d55:	mov    rax,QWORD PTR [rbp-0x30]
  408d59:	lea    rcx,[rax*8+0x0]
  408d61:	mov    rax,QWORD PTR [rbp-0x10]
  408d65:	add    rax,rcx
  408d68:	movzx  eax,BYTE PTR [rax]
  408d6b:	mov    BYTE PTR [rdx],al
  408d6d:	mov    rax,QWORD PTR [rbp-0x30]
  408d71:	lea    rdx,[rax*4+0x0]
  408d79:	mov    rax,QWORD PTR [rbp-0x20]
  408d7d:	add    rdx,rax
  408d80:	mov    rax,QWORD PTR [rbp-0x30]
  408d84:	lea    rcx,[rax*8+0x0]
  408d8c:	mov    rax,QWORD PTR [rbp-0x10]
  408d90:	add    rax,rcx
  408d93:	mov    eax,DWORD PTR [rax+0x4]
  408d96:	mov    DWORD PTR [rdx],eax
  408d98:	add    QWORD PTR [rbp-0x30],0x1
  408d9d:	mov    rax,QWORD PTR [rbp-0x30]
  408da1:	cmp    rax,QWORD PTR [rbp-0x28]
  408da5:	jb     408d4a <flatcc_builder_end_union_vector@@Base+0xbb>
  408da7:	mov    rcx,QWORD PTR [rbp-0x28]
  408dab:	mov    rdx,QWORD PTR [rbp-0x20]
  408daf:	mov    rsi,QWORD PTR [rbp-0x18]
  408db3:	mov    rax,QWORD PTR [rbp-0x38]
  408db7:	mov    rdi,rax
  408dba:	call   408b9a <flatcc_builder_create_union_vector_direct@@Base>
  408dbf:	mov    QWORD PTR [rbp-0x8],rax
  408dc3:	mov    rax,QWORD PTR [rbp-0x38]
  408dc7:	mov    rdi,rax
  408dca:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408dcf:	mov    rax,QWORD PTR [rbp-0x8]
  408dd3:	leave  
  408dd4:	ret    

0000000000408dd5 <flatcc_builder_union_vector_edit@@Base>:
  408dd5:	push   rbp
  408dd6:	mov    rbp,rsp
  408dd9:	mov    QWORD PTR [rbp-0x8],rdi
  408ddd:	mov    rax,QWORD PTR [rbp-0x8]
  408de1:	mov    rax,QWORD PTR [rax+0x18]
  408de5:	pop    rbp
  408de6:	ret    

0000000000408de7 <flatcc_builder_union_vector_count@@Base>:
  408de7:	push   rbp
  408de8:	mov    rbp,rsp
  408deb:	mov    QWORD PTR [rbp-0x8],rdi
  408def:	mov    rax,QWORD PTR [rbp-0x8]
  408df3:	mov    rax,QWORD PTR [rax+0x30]
  408df7:	mov    eax,DWORD PTR [rax+0x14]
  408dfa:	mov    eax,eax
  408dfc:	pop    rbp
  408dfd:	ret    

0000000000408dfe <flatcc_builder_extend_union_vector@@Base>:
  408dfe:	push   rbp
  408dff:	mov    rbp,rsp
  408e02:	sub    rsp,0x10
  408e06:	mov    QWORD PTR [rbp-0x8],rdi
  408e0a:	mov    QWORD PTR [rbp-0x10],rsi
  408e0e:	mov    rax,QWORD PTR [rbp-0x10]
  408e12:	mov    ecx,eax
  408e14:	mov    rax,QWORD PTR [rbp-0x8]
  408e18:	mov    edx,0x1fffffff
  408e1d:	mov    esi,ecx
  408e1f:	mov    rdi,rax
  408e22:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  408e27:	test   eax,eax
  408e29:	je     408e32 <flatcc_builder_extend_union_vector@@Base+0x34>
  408e2b:	mov    eax,0x0
  408e30:	jmp    408e4b <flatcc_builder_extend_union_vector@@Base+0x4d>
  408e32:	mov    rax,QWORD PTR [rbp-0x10]
  408e36:	lea    edx,[rax*8+0x0]
  408e3d:	mov    rax,QWORD PTR [rbp-0x8]
  408e41:	mov    esi,edx
  408e43:	mov    rdi,rax
  408e46:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  408e4b:	leave  
  408e4c:	ret    

0000000000408e4d <flatcc_builder_truncate_union_vector@@Base>:
  408e4d:	push   rbp
  408e4e:	mov    rbp,rsp
  408e51:	sub    rsp,0x10
  408e55:	mov    QWORD PTR [rbp-0x8],rdi
  408e59:	mov    QWORD PTR [rbp-0x10],rsi
  408e5d:	mov    rax,QWORD PTR [rbp-0x8]
  408e61:	mov    rax,QWORD PTR [rax+0x30]
  408e65:	movzx  eax,WORD PTR [rax+0xe]
  408e69:	cmp    ax,0x7
  408e6d:	je     408e8e <flatcc_builder_truncate_union_vector@@Base+0x41>
  408e6f:	lea    rcx,[rip+0x336a]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xba0>
  408e76:	mov    edx,0x681
  408e7b:	lea    rsi,[rip+0x29be]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408e82:	lea    rdi,[rip+0x2d4f]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  408e89:	call   4030b0 <__assert_fail@plt>
  408e8e:	mov    rax,QWORD PTR [rbp-0x8]
  408e92:	mov    rax,QWORD PTR [rax+0x30]
  408e96:	mov    eax,DWORD PTR [rax+0x14]
  408e99:	mov    rdx,QWORD PTR [rbp-0x10]
  408e9d:	cmp    eax,edx
  408e9f:	jae    408eda <flatcc_builder_truncate_union_vector@@Base+0x8d>
  408ea1:	mov    rax,QWORD PTR [rbp-0x8]
  408ea5:	mov    rax,QWORD PTR [rax+0x30]
  408ea9:	mov    eax,DWORD PTR [rax+0x14]
  408eac:	mov    rdx,QWORD PTR [rbp-0x10]
  408eb0:	cmp    eax,edx
  408eb2:	jae    408ed3 <flatcc_builder_truncate_union_vector@@Base+0x86>
  408eb4:	lea    rcx,[rip+0x3325]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xba0>
  408ebb:	mov    edx,0x682
  408ec0:	lea    rsi,[rip+0x2979]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408ec7:	lea    rdi,[rip+0x2bba]        # 40ba88 <flatcc_builder_padding_base@@Base+0x448>
  408ece:	call   4030b0 <__assert_fail@plt>
  408ed3:	mov    eax,0xffffffff
  408ed8:	jmp    408f1b <flatcc_builder_truncate_union_vector@@Base+0xce>
  408eda:	mov    rax,QWORD PTR [rbp-0x8]
  408ede:	mov    rax,QWORD PTR [rax+0x30]
  408ee2:	mov    rdx,QWORD PTR [rbp-0x8]
  408ee6:	mov    rdx,QWORD PTR [rdx+0x30]
  408eea:	mov    edx,DWORD PTR [rdx+0x14]
  408eed:	mov    rcx,QWORD PTR [rbp-0x10]
  408ef1:	sub    edx,ecx
  408ef3:	mov    DWORD PTR [rax+0x14],edx
  408ef6:	mov    rax,QWORD PTR [rbp-0x8]
  408efa:	mov    rax,QWORD PTR [rax+0x30]
  408efe:	mov    eax,DWORD PTR [rax+0x10]
  408f01:	mov    rdx,QWORD PTR [rbp-0x10]
  408f05:	imul   edx,eax
  408f08:	mov    rax,QWORD PTR [rbp-0x8]
  408f0c:	mov    esi,edx
  408f0e:	mov    rdi,rax
  408f11:	call   40498a <flatcc_builder_default_alloc@@Base+0x2dd>
  408f16:	mov    eax,0x0
  408f1b:	leave  
  408f1c:	ret    

0000000000408f1d <flatcc_builder_union_vector_push@@Base>:
  408f1d:	push   rbp
  408f1e:	mov    rbp,rsp
  408f21:	sub    rsp,0x20
  408f25:	mov    QWORD PTR [rbp-0x18],rdi
  408f29:	mov    QWORD PTR [rbp-0x20],rsi
  408f2d:	mov    rax,QWORD PTR [rbp-0x18]
  408f31:	mov    rax,QWORD PTR [rax+0x30]
  408f35:	movzx  eax,WORD PTR [rax+0xe]
  408f39:	cmp    ax,0x7
  408f3d:	je     408f5e <flatcc_builder_union_vector_push@@Base+0x41>
  408f3f:	lea    rcx,[rip+0x32da]        # 40c220 <flatcc_builder_padding_base@@Base+0xbe0>
  408f46:	mov    edx,0x68d
  408f4b:	lea    rsi,[rip+0x28ee]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408f52:	lea    rdi,[rip+0x2c7f]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  408f59:	call   4030b0 <__assert_fail@plt>
  408f5e:	mov    rax,QWORD PTR [rbp-0x18]
  408f62:	mov    rax,QWORD PTR [rax+0x30]
  408f66:	mov    eax,DWORD PTR [rax+0x14]
  408f69:	cmp    eax,0x1fffffff
  408f6e:	jne    408f77 <flatcc_builder_union_vector_push@@Base+0x5a>
  408f70:	mov    eax,0x0
  408f75:	jmp    408fc2 <flatcc_builder_union_vector_push@@Base+0xa5>
  408f77:	mov    rax,QWORD PTR [rbp-0x18]
  408f7b:	mov    rax,QWORD PTR [rax+0x30]
  408f7f:	mov    rdx,QWORD PTR [rbp-0x18]
  408f83:	mov    rdx,QWORD PTR [rdx+0x30]
  408f87:	mov    edx,DWORD PTR [rdx+0x14]
  408f8a:	add    edx,0x1
  408f8d:	mov    DWORD PTR [rax+0x14],edx
  408f90:	mov    rax,QWORD PTR [rbp-0x18]
  408f94:	mov    esi,0x8
  408f99:	mov    rdi,rax
  408f9c:	call   40490d <flatcc_builder_default_alloc@@Base+0x260>
  408fa1:	mov    QWORD PTR [rbp-0x8],rax
  408fa5:	cmp    QWORD PTR [rbp-0x8],0x0
  408faa:	jne    408fb3 <flatcc_builder_union_vector_push@@Base+0x96>
  408fac:	mov    eax,0x0
  408fb1:	jmp    408fc2 <flatcc_builder_union_vector_push@@Base+0xa5>
  408fb3:	mov    rax,QWORD PTR [rbp-0x8]
  408fb7:	mov    rdx,QWORD PTR [rbp-0x20]
  408fbb:	mov    QWORD PTR [rax],rdx
  408fbe:	mov    rax,QWORD PTR [rbp-0x8]
  408fc2:	leave  
  408fc3:	ret    

0000000000408fc4 <flatcc_builder_append_union_vector@@Base>:
  408fc4:	push   rbp
  408fc5:	mov    rbp,rsp
  408fc8:	sub    rsp,0x20
  408fcc:	mov    QWORD PTR [rbp-0x8],rdi
  408fd0:	mov    QWORD PTR [rbp-0x10],rsi
  408fd4:	mov    QWORD PTR [rbp-0x18],rdx
  408fd8:	mov    rax,QWORD PTR [rbp-0x8]
  408fdc:	mov    rax,QWORD PTR [rax+0x30]
  408fe0:	movzx  eax,WORD PTR [rax+0xe]
  408fe4:	cmp    ax,0x7
  408fe8:	je     409009 <flatcc_builder_append_union_vector@@Base+0x45>
  408fea:	lea    rcx,[rip+0x326f]        # 40c260 <flatcc_builder_padding_base@@Base+0xc20>
  408ff1:	mov    edx,0x69c
  408ff6:	lea    rsi,[rip+0x2843]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408ffd:	lea    rdi,[rip+0x2bd4]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  409004:	call   4030b0 <__assert_fail@plt>
  409009:	mov    rax,QWORD PTR [rbp-0x18]
  40900d:	mov    ecx,eax
  40900f:	mov    rax,QWORD PTR [rbp-0x8]
  409013:	mov    edx,0x1fffffff
  409018:	mov    esi,ecx
  40901a:	mov    rdi,rax
  40901d:	call   406864 <flatcc_builder_end_struct@@Base+0x8e>
  409022:	test   eax,eax
  409024:	je     40902d <flatcc_builder_append_union_vector@@Base+0x69>
  409026:	mov    eax,0x0
  40902b:	jmp    40904b <flatcc_builder_append_union_vector@@Base+0x87>
  40902d:	mov    rax,QWORD PTR [rbp-0x18]
  409031:	lea    edx,[rax*8+0x0]
  409038:	mov    rcx,QWORD PTR [rbp-0x10]
  40903c:	mov    rax,QWORD PTR [rbp-0x8]
  409040:	mov    rsi,rcx
  409043:	mov    rdi,rax
  409046:	call   4049d6 <flatcc_builder_default_alloc@@Base+0x329>
  40904b:	leave  
  40904c:	ret    

000000000040904d <flatcc_builder_create_string@@Base>:
  40904d:	push   rbp
  40904e:	mov    rbp,rsp
  409051:	sub    rsp,0xd0
  409058:	mov    QWORD PTR [rbp-0xb8],rdi
  40905f:	mov    QWORD PTR [rbp-0xc0],rsi
  409066:	mov    QWORD PTR [rbp-0xc8],rdx
  40906d:	mov    rax,QWORD PTR fs:0x28
  409076:	mov    QWORD PTR [rbp-0x8],rax
  40907a:	xor    eax,eax
  40907c:	mov    eax,0xffffffff
  409081:	cmp    QWORD PTR [rbp-0xc8],rax
  409088:	jbe    409094 <flatcc_builder_create_string@@Base+0x47>
  40908a:	mov    eax,0x0
  40908f:	jmp    40923b <flatcc_builder_create_string@@Base+0x1ee>
  409094:	mov    rax,QWORD PTR [rbp-0xc8]
  40909b:	mov    edi,eax
  40909d:	call   4045e7 <main@@Base+0x41a>
  4090a2:	mov    DWORD PTR [rbp-0xa8],eax
  4090a8:	mov    rax,QWORD PTR [rbp-0xc8]
  4090af:	lea    ecx,[rax+0x1]
  4090b2:	mov    rax,QWORD PTR [rbp-0xb8]
  4090b9:	mov    edx,0x4
  4090be:	mov    esi,ecx
  4090c0:	mov    rdi,rax
  4090c3:	call   4058af <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4090c8:	add    eax,0x1
  4090cb:	mov    DWORD PTR [rbp-0xa4],eax
  4090d1:	mov    QWORD PTR [rbp-0xa0],0x0
  4090dc:	mov    DWORD PTR [rbp-0x98],0x0
  4090e6:	mov    rax,QWORD PTR [rbp-0xa0]
  4090ed:	add    rax,0x4
  4090f1:	mov    QWORD PTR [rbp-0xa0],rax
  4090f8:	mov    eax,DWORD PTR [rbp-0x98]
  4090fe:	cdqe   
  409100:	shl    rax,0x4
  409104:	add    rax,rbp
  409107:	lea    rdx,[rax-0x90]
  40910e:	lea    rax,[rbp-0xa8]
  409115:	mov    QWORD PTR [rdx],rax
  409118:	mov    eax,DWORD PTR [rbp-0x98]
  40911e:	cdqe   
  409120:	shl    rax,0x4
  409124:	add    rax,rbp
  409127:	sub    rax,0x88
  40912d:	mov    QWORD PTR [rax],0x4
  409134:	mov    eax,DWORD PTR [rbp-0x98]
  40913a:	add    eax,0x1
  40913d:	mov    DWORD PTR [rbp-0x98],eax
  409143:	cmp    QWORD PTR [rbp-0xc8],0x0
  40914b:	je     4091b4 <flatcc_builder_create_string@@Base+0x167>
  40914d:	mov    rdx,QWORD PTR [rbp-0xa0]
  409154:	mov    rax,QWORD PTR [rbp-0xc8]
  40915b:	add    rax,rdx
  40915e:	mov    QWORD PTR [rbp-0xa0],rax
  409165:	mov    eax,DWORD PTR [rbp-0x98]
  40916b:	cdqe   
  40916d:	shl    rax,0x4
  409171:	add    rax,rbp
  409174:	lea    rdx,[rax-0x90]
  40917b:	mov    rax,QWORD PTR [rbp-0xc0]
  409182:	mov    QWORD PTR [rdx],rax
  409185:	mov    eax,DWORD PTR [rbp-0x98]
  40918b:	cdqe   
  40918d:	shl    rax,0x4
  409191:	add    rax,rbp
  409194:	lea    rdx,[rax-0x88]
  40919b:	mov    rax,QWORD PTR [rbp-0xc8]
  4091a2:	mov    QWORD PTR [rdx],rax
  4091a5:	mov    eax,DWORD PTR [rbp-0x98]
  4091ab:	add    eax,0x1
  4091ae:	mov    DWORD PTR [rbp-0x98],eax
  4091b4:	cmp    DWORD PTR [rbp-0xa4],0x0
  4091bb:	je     409222 <flatcc_builder_create_string@@Base+0x1d5>
  4091bd:	mov    rdx,QWORD PTR [rbp-0xa0]
  4091c4:	mov    eax,DWORD PTR [rbp-0xa4]
  4091ca:	add    rax,rdx
  4091cd:	mov    QWORD PTR [rbp-0xa0],rax
  4091d4:	mov    eax,DWORD PTR [rbp-0x98]
  4091da:	cdqe   
  4091dc:	shl    rax,0x4
  4091e0:	add    rax,rbp
  4091e3:	sub    rax,0x90
  4091e9:	mov    rdx,0x40b640
  4091f0:	mov    QWORD PTR [rax],rdx
  4091f3:	mov    edx,DWORD PTR [rbp-0x98]
  4091f9:	mov    eax,DWORD PTR [rbp-0xa4]
  4091ff:	movsxd rdx,edx
  409202:	shl    rdx,0x4
  409206:	add    rdx,rbp
  409209:	sub    rdx,0x88
  409210:	mov    QWORD PTR [rdx],rax
  409213:	mov    eax,DWORD PTR [rbp-0x98]
  409219:	add    eax,0x1
  40921c:	mov    DWORD PTR [rbp-0x98],eax
  409222:	lea    rdx,[rbp-0xa0]
  409229:	mov    rax,QWORD PTR [rbp-0xb8]
  409230:	mov    rsi,rdx
  409233:	mov    rdi,rax
  409236:	call   4058fb <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40923b:	mov    rcx,QWORD PTR [rbp-0x8]
  40923f:	xor    rcx,QWORD PTR fs:0x28
  409248:	je     40924f <flatcc_builder_create_string@@Base+0x202>
  40924a:	call   403080 <__stack_chk_fail@plt>
  40924f:	leave  
  409250:	ret    

0000000000409251 <flatcc_builder_create_string_str@@Base>:
  409251:	push   rbp
  409252:	mov    rbp,rsp
  409255:	sub    rsp,0x10
  409259:	mov    QWORD PTR [rbp-0x8],rdi
  40925d:	mov    QWORD PTR [rbp-0x10],rsi
  409261:	mov    rax,QWORD PTR [rbp-0x10]
  409265:	mov    rdi,rax
  409268:	call   403070 <strlen@plt>
  40926d:	mov    rdx,rax
  409270:	mov    rcx,QWORD PTR [rbp-0x10]
  409274:	mov    rax,QWORD PTR [rbp-0x8]
  409278:	mov    rsi,rcx
  40927b:	mov    rdi,rax
  40927e:	call   40904d <flatcc_builder_create_string@@Base>
  409283:	leave  
  409284:	ret    

0000000000409285 <flatcc_builder_create_string_strn@@Base>:
  409285:	push   rbp
  409286:	mov    rbp,rsp
  409289:	sub    rsp,0x20
  40928d:	mov    QWORD PTR [rbp-0x8],rdi
  409291:	mov    QWORD PTR [rbp-0x10],rsi
  409295:	mov    QWORD PTR [rbp-0x18],rdx
  409299:	mov    rdx,QWORD PTR [rbp-0x18]
  40929d:	mov    rax,QWORD PTR [rbp-0x10]
  4092a1:	mov    rsi,rdx
  4092a4:	mov    rdi,rax
  4092a7:	call   404667 <main@@Base+0x49a>
  4092ac:	mov    rdx,rax
  4092af:	mov    rcx,QWORD PTR [rbp-0x10]
  4092b3:	mov    rax,QWORD PTR [rbp-0x8]
  4092b7:	mov    rsi,rcx
  4092ba:	mov    rdi,rax
  4092bd:	call   40904d <flatcc_builder_create_string@@Base>
  4092c2:	leave  
  4092c3:	ret    

00000000004092c4 <flatcc_builder_end_string@@Base>:
  4092c4:	push   rbp
  4092c5:	mov    rbp,rsp
  4092c8:	sub    rsp,0x20
  4092cc:	mov    QWORD PTR [rbp-0x18],rdi
  4092d0:	mov    rax,QWORD PTR [rbp-0x18]
  4092d4:	mov    rax,QWORD PTR [rax+0x30]
  4092d8:	movzx  eax,WORD PTR [rax+0xe]
  4092dc:	cmp    ax,0x6
  4092e0:	je     409301 <flatcc_builder_end_string@@Base+0x3d>
  4092e2:	lea    rcx,[rip+0x2fa7]        # 40c290 <flatcc_builder_padding_base@@Base+0xc50>
  4092e9:	mov    edx,0x6c4
  4092ee:	lea    rsi,[rip+0x254b]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4092f5:	lea    rdi,[rip+0x2734]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  4092fc:	call   4030b0 <__assert_fail@plt>
  409301:	mov    rax,QWORD PTR [rbp-0x18]
  409305:	mov    rax,QWORD PTR [rax+0x30]
  409309:	mov    edx,DWORD PTR [rax+0x14]
  40930c:	mov    rax,QWORD PTR [rbp-0x18]
  409310:	mov    eax,DWORD PTR [rax+0x20]
  409313:	cmp    edx,eax
  409315:	je     409336 <flatcc_builder_end_string@@Base+0x72>
  409317:	lea    rcx,[rip+0x2f72]        # 40c290 <flatcc_builder_padding_base@@Base+0xc50>
  40931e:	mov    edx,0x6c5
  409323:	lea    rsi,[rip+0x2516]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40932a:	lea    rdi,[rip+0x28df]        # 40bc10 <flatcc_builder_padding_base@@Base+0x5d0>
  409331:	call   4030b0 <__assert_fail@plt>
  409336:	mov    rax,QWORD PTR [rbp-0x18]
  40933a:	mov    eax,DWORD PTR [rax+0x20]
  40933d:	mov    edx,eax
  40933f:	mov    rax,QWORD PTR [rbp-0x18]
  409343:	mov    rcx,QWORD PTR [rax+0x18]
  409347:	mov    rax,QWORD PTR [rbp-0x18]
  40934b:	mov    rsi,rcx
  40934e:	mov    rdi,rax
  409351:	call   40904d <flatcc_builder_create_string@@Base>
  409356:	mov    DWORD PTR [rbp-0x4],eax
  409359:	cmp    DWORD PTR [rbp-0x4],0x0
  40935d:	jne    409366 <flatcc_builder_end_string@@Base+0xa2>
  40935f:	mov    eax,0x0
  409364:	jmp    409375 <flatcc_builder_end_string@@Base+0xb1>
  409366:	mov    rax,QWORD PTR [rbp-0x18]
  40936a:	mov    rdi,rax
  40936d:	call   4057e8 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  409372:	mov    eax,DWORD PTR [rbp-0x4]
  409375:	leave  
  409376:	ret    

0000000000409377 <flatcc_builder_string_edit@@Base>:
  409377:	push   rbp
  409378:	mov    rbp,rsp
  40937b:	mov    QWORD PTR [rbp-0x8],rdi
  40937f:	mov    rax,QWORD PTR [rbp-0x8]
  409383:	mov    rax,QWORD PTR [rax+0x18]
  409387:	pop    rbp
  409388:	ret    

0000000000409389 <flatcc_builder_string_len@@Base>:
  409389:	push   rbp
  40938a:	mov    rbp,rsp
  40938d:	mov    QWORD PTR [rbp-0x8],rdi
  409391:	mov    rax,QWORD PTR [rbp-0x8]
  409395:	mov    rax,QWORD PTR [rax+0x30]
  409399:	mov    eax,DWORD PTR [rax+0x14]
  40939c:	mov    eax,eax
  40939e:	pop    rbp
  40939f:	ret    

00000000004093a0 <flatcc_builder_table_add@@Base>:
  4093a0:	push   rbp
  4093a1:	mov    rbp,rsp
  4093a4:	sub    rsp,0x20
  4093a8:	mov    QWORD PTR [rbp-0x8],rdi
  4093ac:	mov    DWORD PTR [rbp-0xc],esi
  4093af:	mov    QWORD PTR [rbp-0x18],rdx
  4093b3:	mov    eax,ecx
  4093b5:	mov    WORD PTR [rbp-0x10],ax
  4093b9:	mov    rax,QWORD PTR [rbp-0x8]
  4093bd:	mov    rax,QWORD PTR [rax+0x30]
  4093c1:	movzx  eax,WORD PTR [rax+0xe]
  4093c5:	cmp    ax,0x3
  4093c9:	je     4093ea <flatcc_builder_table_add@@Base+0x4a>
  4093cb:	lea    rcx,[rip+0x2ede]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  4093d2:	mov    edx,0x6ed
  4093d7:	lea    rsi,[rip+0x2462]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4093de:	lea    rdi,[rip+0x2733]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  4093e5:	call   4030b0 <__assert_fail@plt>
  4093ea:	cmp    DWORD PTR [rbp-0xc],0x0
  4093ee:	js     4093f9 <flatcc_builder_table_add@@Base+0x59>
  4093f0:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4093f7:	jle    409418 <flatcc_builder_table_add@@Base+0x78>
  4093f9:	lea    rcx,[rip+0x2eb0]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  409400:	mov    edx,0x6ee
  409405:	lea    rsi,[rip+0x2434]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40940c:	lea    rdi,[rip+0x2825]        # 40bc38 <flatcc_builder_padding_base@@Base+0x5f8>
  409413:	call   4030b0 <__assert_fail@plt>
  409418:	mov    rax,QWORD PTR [rbp-0x8]
  40941c:	movzx  eax,WORD PTR [rax+0xea]
  409423:	cmp    ax,WORD PTR [rbp-0x10]
  409427:	jae    409438 <flatcc_builder_table_add@@Base+0x98>
  409429:	mov    rax,QWORD PTR [rbp-0x8]
  40942d:	movzx  edx,WORD PTR [rbp-0x10]
  409431:	mov    WORD PTR [rax+0xea],dx
  409438:	mov    rax,QWORD PTR [rbp-0x8]
  40943c:	mov    rax,QWORD PTR [rax+0x8]
  409440:	mov    edx,DWORD PTR [rbp-0xc]
  409443:	movsxd rdx,edx
  409446:	add    rdx,rdx
  409449:	add    rax,rdx
  40944c:	movzx  eax,WORD PTR [rax]
  40944f:	test   ax,ax
  409452:	je     409473 <flatcc_builder_table_add@@Base+0xd3>
  409454:	lea    rcx,[rip+0x2e55]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  40945b:	mov    edx,0x6f8
  409460:	lea    rsi,[rip+0x23d9]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409467:	lea    rdi,[rip+0x2432]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40946e:	call   4030b0 <__assert_fail@plt>
  409473:	mov    rax,QWORD PTR [rbp-0x8]
  409477:	mov    edx,DWORD PTR [rax+0x14]
  40947a:	mov    eax,DWORD PTR [rbp-0xc]
  40947d:	xor    eax,edx
  40947f:	imul   eax,eax,0x9e3779b1
  409485:	mov    rdx,QWORD PTR [rbp-0x18]
  409489:	xor    eax,edx
  40948b:	imul   edx,eax,0x9e3779b1
  409491:	mov    rax,QWORD PTR [rbp-0x8]
  409495:	mov    DWORD PTR [rax+0x14],edx
  409498:	mov    eax,DWORD PTR [rbp-0xc]
  40949b:	movzx  ecx,ax
  40949e:	movzx  edx,WORD PTR [rbp-0x10]
  4094a2:	mov    rax,QWORD PTR [rbp-0x18]
  4094a6:	mov    esi,eax
  4094a8:	mov    rax,QWORD PTR [rbp-0x8]
  4094ac:	mov    rdi,rax
  4094af:	call   404a28 <flatcc_builder_default_alloc@@Base+0x37b>
  4094b4:	leave  
  4094b5:	ret    

00000000004094b6 <flatcc_builder_table_edit@@Base>:
  4094b6:	push   rbp
  4094b7:	mov    rbp,rsp
  4094ba:	sub    rsp,0x10
  4094be:	mov    QWORD PTR [rbp-0x8],rdi
  4094c2:	mov    QWORD PTR [rbp-0x10],rsi
  4094c6:	mov    rax,QWORD PTR [rbp-0x8]
  4094ca:	mov    rax,QWORD PTR [rax+0x30]
  4094ce:	movzx  eax,WORD PTR [rax+0xe]
  4094d2:	cmp    ax,0x3
  4094d6:	je     4094f7 <flatcc_builder_table_edit@@Base+0x41>
  4094d8:	lea    rcx,[rip+0x2df1]        # 40c2d0 <flatcc_builder_padding_base@@Base+0xc90>
  4094df:	mov    edx,0x702
  4094e4:	lea    rsi,[rip+0x2355]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4094eb:	lea    rdi,[rip+0x2626]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  4094f2:	call   4030b0 <__assert_fail@plt>
  4094f7:	mov    rax,QWORD PTR [rbp-0x8]
  4094fb:	mov    rdx,QWORD PTR [rax+0x18]
  4094ff:	mov    rax,QWORD PTR [rbp-0x8]
  409503:	mov    eax,DWORD PTR [rax+0x20]
  409506:	mov    eax,eax
  409508:	sub    rax,QWORD PTR [rbp-0x10]
  40950c:	add    rax,rdx
  40950f:	leave  
  409510:	ret    

0000000000409511 <flatcc_builder_table_add_copy@@Base>:
  409511:	push   rbp
  409512:	mov    rbp,rsp
  409515:	sub    rsp,0x30
  409519:	mov    QWORD PTR [rbp-0x18],rdi
  40951d:	mov    DWORD PTR [rbp-0x1c],esi
  409520:	mov    QWORD PTR [rbp-0x28],rdx
  409524:	mov    QWORD PTR [rbp-0x30],rcx
  409528:	mov    eax,r8d
  40952b:	mov    WORD PTR [rbp-0x20],ax
  40952f:	movzx  ecx,WORD PTR [rbp-0x20]
  409533:	mov    rdx,QWORD PTR [rbp-0x30]
  409537:	mov    esi,DWORD PTR [rbp-0x1c]
  40953a:	mov    rax,QWORD PTR [rbp-0x18]
  40953e:	mov    rdi,rax
  409541:	call   4093a0 <flatcc_builder_table_add@@Base>
  409546:	mov    QWORD PTR [rbp-0x8],rax
  40954a:	cmp    QWORD PTR [rbp-0x8],0x0
  40954f:	je     409568 <flatcc_builder_table_add_copy@@Base+0x57>
  409551:	mov    rdx,QWORD PTR [rbp-0x30]
  409555:	mov    rcx,QWORD PTR [rbp-0x28]
  409559:	mov    rax,QWORD PTR [rbp-0x8]
  40955d:	mov    rsi,rcx
  409560:	mov    rdi,rax
  409563:	call   403100 <memcpy@plt>
  409568:	mov    rax,QWORD PTR [rbp-0x8]
  40956c:	leave  
  40956d:	ret    

000000000040956e <flatcc_builder_table_add_offset@@Base>:
  40956e:	push   rbp
  40956f:	mov    rbp,rsp
  409572:	sub    rsp,0x10
  409576:	mov    QWORD PTR [rbp-0x8],rdi
  40957a:	mov    DWORD PTR [rbp-0xc],esi
  40957d:	mov    rax,QWORD PTR [rbp-0x8]
  409581:	mov    rax,QWORD PTR [rax+0x30]
  409585:	movzx  eax,WORD PTR [rax+0xe]
  409589:	cmp    ax,0x3
  40958d:	je     4095ae <flatcc_builder_table_add_offset@@Base+0x40>
  40958f:	lea    rcx,[rip+0x2d6a]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  409596:	mov    edx,0x713
  40959b:	lea    rsi,[rip+0x229e]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4095a2:	lea    rdi,[rip+0x256f]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  4095a9:	call   4030b0 <__assert_fail@plt>
  4095ae:	cmp    DWORD PTR [rbp-0xc],0x0
  4095b2:	js     4095bd <flatcc_builder_table_add_offset@@Base+0x4f>
  4095b4:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4095bb:	jle    4095dc <flatcc_builder_table_add_offset@@Base+0x6e>
  4095bd:	lea    rcx,[rip+0x2d3c]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  4095c4:	mov    edx,0x714
  4095c9:	lea    rsi,[rip+0x2270]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4095d0:	lea    rdi,[rip+0x2661]        # 40bc38 <flatcc_builder_padding_base@@Base+0x5f8>
  4095d7:	call   4030b0 <__assert_fail@plt>
  4095dc:	mov    rax,QWORD PTR [rbp-0x8]
  4095e0:	mov    rax,QWORD PTR [rax+0x8]
  4095e4:	mov    edx,DWORD PTR [rbp-0xc]
  4095e7:	movsxd rdx,edx
  4095ea:	add    rdx,rdx
  4095ed:	add    rax,rdx
  4095f0:	movzx  eax,WORD PTR [rax]
  4095f3:	test   ax,ax
  4095f6:	je     409617 <flatcc_builder_table_add_offset@@Base+0xa9>
  4095f8:	lea    rcx,[rip+0x2d01]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  4095ff:	mov    edx,0x71b
  409604:	lea    rsi,[rip+0x2235]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40960b:	lea    rdi,[rip+0x228e]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  409612:	call   4030b0 <__assert_fail@plt>
  409617:	mov    rax,QWORD PTR [rbp-0x8]
  40961b:	mov    edx,DWORD PTR [rax+0x14]
  40961e:	mov    eax,DWORD PTR [rbp-0xc]
  409621:	xor    eax,edx
  409623:	imul   eax,eax,0x9e3779b1
  409629:	xor    eax,0x4
  40962c:	imul   edx,eax,0x9e3779b1
  409632:	mov    rax,QWORD PTR [rbp-0x8]
  409636:	mov    DWORD PTR [rax+0x14],edx
  409639:	mov    eax,DWORD PTR [rbp-0xc]
  40963c:	movzx  edx,ax
  40963f:	mov    rax,QWORD PTR [rbp-0x8]
  409643:	mov    esi,edx
  409645:	mov    rdi,rax
  409648:	call   404af0 <flatcc_builder_default_alloc@@Base+0x443>
  40964d:	leave  
  40964e:	ret    

000000000040964f <flatcc_builder_push_buffer_alignment@@Base>:
  40964f:	push   rbp
  409650:	mov    rbp,rsp
  409653:	mov    QWORD PTR [rbp-0x18],rdi
  409657:	mov    rax,QWORD PTR [rbp-0x18]
  40965b:	movzx  eax,WORD PTR [rax+0xe8]
  409662:	mov    WORD PTR [rbp-0x2],ax
  409666:	mov    rax,QWORD PTR [rbp-0x18]
  40966a:	mov    WORD PTR [rax+0xe8],0x4
  409673:	movzx  eax,WORD PTR [rbp-0x2]
  409677:	pop    rbp
  409678:	ret    

0000000000409679 <flatcc_builder_pop_buffer_alignment@@Base>:
  409679:	push   rbp
  40967a:	mov    rbp,rsp
  40967d:	sub    rsp,0x10
  409681:	mov    QWORD PTR [rbp-0x8],rdi
  409685:	mov    eax,esi
  409687:	mov    WORD PTR [rbp-0xc],ax
  40968b:	movzx  edx,WORD PTR [rbp-0xc]
  40968f:	mov    rax,QWORD PTR [rbp-0x8]
  409693:	mov    esi,edx
  409695:	mov    rdi,rax
  409698:	call   4052f7 <flatcc_builder_clear@@Base+0x96>
  40969d:	nop
  40969e:	leave  
  40969f:	ret    

00000000004096a0 <flatcc_builder_get_buffer_alignment@@Base>:
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	mov    QWORD PTR [rbp-0x8],rdi
  4096a8:	mov    rax,QWORD PTR [rbp-0x8]
  4096ac:	movzx  eax,WORD PTR [rax+0xe8]
  4096b3:	pop    rbp
  4096b4:	ret    

00000000004096b5 <flatcc_builder_set_vtable_clustering@@Base>:
  4096b5:	push   rbp
  4096b6:	mov    rbp,rsp
  4096b9:	mov    QWORD PTR [rbp-0x8],rdi
  4096bd:	mov    DWORD PTR [rbp-0xc],esi
  4096c0:	cmp    DWORD PTR [rbp-0xc],0x0
  4096c4:	sete   al
  4096c7:	movzx  edx,al
  4096ca:	mov    rax,QWORD PTR [rbp-0x8]
  4096ce:	mov    DWORD PTR [rax+0x124],edx
  4096d4:	nop
  4096d5:	pop    rbp
  4096d6:	ret    

00000000004096d7 <flatcc_builder_set_block_align@@Base>:
  4096d7:	push   rbp
  4096d8:	mov    rbp,rsp
  4096db:	mov    QWORD PTR [rbp-0x8],rdi
  4096df:	mov    eax,esi
  4096e1:	mov    WORD PTR [rbp-0xc],ax
  4096e5:	mov    rax,QWORD PTR [rbp-0x8]
  4096e9:	movzx  edx,WORD PTR [rbp-0xc]
  4096ed:	mov    WORD PTR [rax+0xec],dx
  4096f4:	nop
  4096f5:	pop    rbp
  4096f6:	ret    

00000000004096f7 <flatcc_builder_get_level@@Base>:
  4096f7:	push   rbp
  4096f8:	mov    rbp,rsp
  4096fb:	mov    QWORD PTR [rbp-0x8],rdi
  4096ff:	mov    rax,QWORD PTR [rbp-0x8]
  409703:	mov    eax,DWORD PTR [rax+0x104]
  409709:	pop    rbp
  40970a:	ret    

000000000040970b <flatcc_builder_set_max_level@@Base>:
  40970b:	push   rbp
  40970c:	mov    rbp,rsp
  40970f:	mov    QWORD PTR [rbp-0x8],rdi
  409713:	mov    DWORD PTR [rbp-0xc],esi
  409716:	mov    rax,QWORD PTR [rbp-0x8]
  40971a:	mov    edx,DWORD PTR [rbp-0xc]
  40971d:	mov    DWORD PTR [rax+0x120],edx
  409723:	mov    rax,QWORD PTR [rbp-0x8]
  409727:	mov    edx,DWORD PTR [rax+0x108]
  40972d:	mov    rax,QWORD PTR [rbp-0x8]
  409731:	mov    eax,DWORD PTR [rax+0x120]
  409737:	cmp    edx,eax
  409739:	jge    40974f <flatcc_builder_set_max_level@@Base+0x44>
  40973b:	mov    rax,QWORD PTR [rbp-0x8]
  40973f:	mov    edx,DWORD PTR [rax+0x120]
  409745:	mov    rax,QWORD PTR [rbp-0x8]
  409749:	mov    DWORD PTR [rax+0x108],edx
  40974f:	nop
  409750:	pop    rbp
  409751:	ret    

0000000000409752 <flatcc_builder_get_buffer_size@@Base>:
  409752:	push   rbp
  409753:	mov    rbp,rsp
  409756:	mov    QWORD PTR [rbp-0x8],rdi
  40975a:	mov    rax,QWORD PTR [rbp-0x8]
  40975e:	mov    edx,DWORD PTR [rax+0xf4]
  409764:	mov    rax,QWORD PTR [rbp-0x8]
  409768:	mov    eax,DWORD PTR [rax+0xf0]
  40976e:	sub    edx,eax
  409770:	mov    eax,edx
  409772:	cdqe   
  409774:	pop    rbp
  409775:	ret    

0000000000409776 <flatcc_builder_get_buffer_start@@Base>:
  409776:	push   rbp
  409777:	mov    rbp,rsp
  40977a:	mov    QWORD PTR [rbp-0x8],rdi
  40977e:	mov    rax,QWORD PTR [rbp-0x8]
  409782:	mov    eax,DWORD PTR [rax+0xf0]
  409788:	pop    rbp
  409789:	ret    

000000000040978a <flatcc_builder_get_buffer_end@@Base>:
  40978a:	push   rbp
  40978b:	mov    rbp,rsp
  40978e:	mov    QWORD PTR [rbp-0x8],rdi
  409792:	mov    rax,QWORD PTR [rbp-0x8]
  409796:	mov    eax,DWORD PTR [rax+0xf4]
  40979c:	pop    rbp
  40979d:	ret    

000000000040979e <flatcc_builder_set_vtable_cache_limit@@Base>:
  40979e:	push   rbp
  40979f:	mov    rbp,rsp
  4097a2:	mov    QWORD PTR [rbp-0x8],rdi
  4097a6:	mov    QWORD PTR [rbp-0x10],rsi
  4097aa:	mov    rax,QWORD PTR [rbp-0x8]
  4097ae:	mov    rdx,QWORD PTR [rbp-0x10]
  4097b2:	mov    QWORD PTR [rax+0x118],rdx
  4097b9:	nop
  4097ba:	pop    rbp
  4097bb:	ret    

00000000004097bc <flatcc_builder_set_identifier@@Base>:
  4097bc:	push   rbp
  4097bd:	mov    rbp,rsp
  4097c0:	mov    QWORD PTR [rbp-0x8],rdi
  4097c4:	mov    QWORD PTR [rbp-0x10],rsi
  4097c8:	cmp    QWORD PTR [rbp-0x10],0x0
  4097cd:	je     4097d5 <flatcc_builder_set_identifier@@Base+0x19>
  4097cf:	mov    rax,QWORD PTR [rbp-0x10]
  4097d3:	jmp    4097dc <flatcc_builder_set_identifier@@Base+0x20>
  4097d5:	mov    rax,0x40b640
  4097dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4097e0:	add    rdx,0x110
  4097e7:	mov    eax,DWORD PTR [rax]
  4097e9:	mov    DWORD PTR [rdx],eax
  4097eb:	nop
  4097ec:	pop    rbp
  4097ed:	ret    

00000000004097ee <flatcc_builder_get_type@@Base>:
  4097ee:	push   rbp
  4097ef:	mov    rbp,rsp
  4097f2:	mov    QWORD PTR [rbp-0x8],rdi
  4097f6:	mov    rax,QWORD PTR [rbp-0x8]
  4097fa:	mov    rax,QWORD PTR [rax+0x30]
  4097fe:	test   rax,rax
  409801:	je     409814 <flatcc_builder_get_type@@Base+0x26>
  409803:	mov    rax,QWORD PTR [rbp-0x8]
  409807:	mov    rax,QWORD PTR [rax+0x30]
  40980b:	movzx  eax,WORD PTR [rax+0xe]
  40980f:	movzx  eax,ax
  409812:	jmp    409819 <flatcc_builder_get_type@@Base+0x2b>
  409814:	mov    eax,0x0
  409819:	pop    rbp
  40981a:	ret    

000000000040981b <flatcc_builder_get_type_at@@Base>:
  40981b:	push   rbp
  40981c:	mov    rbp,rsp
  40981f:	mov    QWORD PTR [rbp-0x8],rdi
  409823:	mov    DWORD PTR [rbp-0xc],esi
  409826:	cmp    DWORD PTR [rbp-0xc],0x0
  40982a:	jle    40983b <flatcc_builder_get_type_at@@Base+0x20>
  40982c:	mov    rax,QWORD PTR [rbp-0x8]
  409830:	mov    eax,DWORD PTR [rax+0x104]
  409836:	cmp    eax,DWORD PTR [rbp-0xc]
  409839:	jge    409842 <flatcc_builder_get_type_at@@Base+0x27>
  40983b:	mov    eax,0x0
  409840:	jmp    409876 <flatcc_builder_get_type_at@@Base+0x5b>
  409842:	mov    rax,QWORD PTR [rbp-0x8]
  409846:	mov    rcx,QWORD PTR [rax+0x30]
  40984a:	mov    rax,QWORD PTR [rbp-0x8]
  40984e:	mov    eax,DWORD PTR [rax+0x104]
  409854:	mov    edx,DWORD PTR [rbp-0xc]
  409857:	sub    edx,eax
  409859:	mov    eax,edx
  40985b:	movsxd rdx,eax
  40985e:	mov    rax,rdx
  409861:	shl    rax,0x3
  409865:	add    rax,rdx
  409868:	shl    rax,0x2
  40986c:	add    rax,rcx
  40986f:	movzx  eax,WORD PTR [rax+0xe]
  409873:	movzx  eax,ax
  409876:	pop    rbp
  409877:	ret    

0000000000409878 <flatcc_builder_get_direct_buffer@@Base>:
  409878:	push   rbp
  409879:	mov    rbp,rsp
  40987c:	sub    rsp,0x10
  409880:	mov    QWORD PTR [rbp-0x8],rdi
  409884:	mov    QWORD PTR [rbp-0x10],rsi
  409888:	mov    rax,QWORD PTR [rbp-0x8]
  40988c:	mov    eax,DWORD PTR [rax+0x128]
  409892:	test   eax,eax
  409894:	je     4098b2 <flatcc_builder_get_direct_buffer@@Base+0x3a>
  409896:	mov    rax,QWORD PTR [rbp-0x8]
  40989a:	lea    rdx,[rax+0x130]
  4098a1:	mov    rax,QWORD PTR [rbp-0x10]
  4098a5:	mov    rsi,rax
  4098a8:	mov    rdi,rdx
  4098ab:	call   40460e <main@@Base+0x441>
  4098b0:	jmp    4098c9 <flatcc_builder_get_direct_buffer@@Base+0x51>
  4098b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4098b7:	je     4098c4 <flatcc_builder_get_direct_buffer@@Base+0x4c>
  4098b9:	mov    rax,QWORD PTR [rbp-0x10]
  4098bd:	mov    QWORD PTR [rax],0x0
  4098c4:	mov    eax,0x0
  4098c9:	leave  
  4098ca:	ret    

00000000004098cb <flatcc_builder_copy_buffer@@Base>:
  4098cb:	push   rbp
  4098cc:	mov    rbp,rsp
  4098cf:	sub    rsp,0x20
  4098d3:	mov    QWORD PTR [rbp-0x8],rdi
  4098d7:	mov    QWORD PTR [rbp-0x10],rsi
  4098db:	mov    QWORD PTR [rbp-0x18],rdx
  4098df:	mov    rax,QWORD PTR [rbp-0x8]
  4098e3:	mov    eax,DWORD PTR [rax+0x128]
  4098e9:	test   eax,eax
  4098eb:	jne    4098f4 <flatcc_builder_copy_buffer@@Base+0x29>
  4098ed:	mov    eax,0x0
  4098f2:	jmp    409940 <flatcc_builder_copy_buffer@@Base+0x75>
  4098f4:	mov    rax,QWORD PTR [rbp-0x8]
  4098f8:	lea    rcx,[rax+0x130]
  4098ff:	mov    rdx,QWORD PTR [rbp-0x18]
  409903:	mov    rax,QWORD PTR [rbp-0x10]
  409907:	mov    rsi,rax
  40990a:	mov    rdi,rcx
  40990d:	call   40a53d <flatcc_emitter_copy_buffer@@Base>
  409912:	mov    QWORD PTR [rbp-0x10],rax
  409916:	cmp    QWORD PTR [rbp-0x10],0x0
  40991b:	jne    40993c <flatcc_builder_copy_buffer@@Base+0x71>
  40991d:	lea    rcx,[rip+0x29fc]        # 40c320 <flatcc_builder_padding_base@@Base+0xce0>
  409924:	mov    edx,0x786
  409929:	lea    rsi,[rip+0x1f10]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409930:	lea    rdi,[rip+0x2345]        # 40bc7c <flatcc_builder_padding_base@@Base+0x63c>
  409937:	call   4030b0 <__assert_fail@plt>
  40993c:	mov    rax,QWORD PTR [rbp-0x10]
  409940:	leave  
  409941:	ret    

0000000000409942 <flatcc_builder_finalize_buffer@@Base>:
  409942:	push   rbp
  409943:	mov    rbp,rsp
  409946:	sub    rsp,0x20
  40994a:	mov    QWORD PTR [rbp-0x18],rdi
  40994e:	mov    QWORD PTR [rbp-0x20],rsi
  409952:	mov    rax,QWORD PTR [rbp-0x18]
  409956:	mov    rdi,rax
  409959:	call   409752 <flatcc_builder_get_buffer_size@@Base>
  40995e:	mov    QWORD PTR [rbp-0x10],rax
  409962:	cmp    QWORD PTR [rbp-0x20],0x0
  409967:	je     409974 <flatcc_builder_finalize_buffer@@Base+0x32>
  409969:	mov    rax,QWORD PTR [rbp-0x20]
  40996d:	mov    rdx,QWORD PTR [rbp-0x10]
  409971:	mov    QWORD PTR [rax],rdx
  409974:	mov    rax,QWORD PTR [rbp-0x10]
  409978:	mov    rdi,rax
  40997b:	call   403110 <malloc@plt>
  409980:	mov    QWORD PTR [rbp-0x8],rax
  409984:	cmp    QWORD PTR [rbp-0x8],0x0
  409989:	jne    4099aa <flatcc_builder_finalize_buffer@@Base+0x68>
  40998b:	lea    rcx,[rip+0x29ae]        # 40c340 <flatcc_builder_padding_base@@Base+0xd00>
  409992:	mov    edx,0x798
  409997:	lea    rsi,[rip+0x1ea2]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40999e:	lea    rdi,[rip+0x1efb]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  4099a5:	call   4030b0 <__assert_fail@plt>
  4099aa:	mov    rdx,QWORD PTR [rbp-0x10]
  4099ae:	mov    rcx,QWORD PTR [rbp-0x8]
  4099b2:	mov    rax,QWORD PTR [rbp-0x18]
  4099b6:	mov    rsi,rcx
  4099b9:	mov    rdi,rax
  4099bc:	call   4098cb <flatcc_builder_copy_buffer@@Base>
  4099c1:	test   rax,rax
  4099c4:	jne    4099e5 <flatcc_builder_finalize_buffer@@Base+0xa3>
  4099c6:	lea    rcx,[rip+0x2973]        # 40c340 <flatcc_builder_padding_base@@Base+0xd00>
  4099cd:	mov    edx,0x79c
  4099d2:	lea    rsi,[rip+0x1e67]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4099d9:	lea    rdi,[rip+0x1ec0]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  4099e0:	call   4030b0 <__assert_fail@plt>
  4099e5:	cmp    QWORD PTR [rbp-0x8],0x0
  4099ea:	jne    4099fe <flatcc_builder_finalize_buffer@@Base+0xbc>
  4099ec:	cmp    QWORD PTR [rbp-0x20],0x0
  4099f1:	je     4099fe <flatcc_builder_finalize_buffer@@Base+0xbc>
  4099f3:	mov    rax,QWORD PTR [rbp-0x20]
  4099f7:	mov    QWORD PTR [rax],0x0
  4099fe:	mov    rax,QWORD PTR [rbp-0x8]
  409a02:	leave  
  409a03:	ret    

0000000000409a04 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409a04:	push   rbp
  409a05:	mov    rbp,rsp
  409a08:	sub    rsp,0x30
  409a0c:	mov    QWORD PTR [rbp-0x28],rdi
  409a10:	mov    QWORD PTR [rbp-0x30],rsi
  409a14:	mov    rax,QWORD PTR [rbp-0x28]
  409a18:	mov    rdi,rax
  409a1b:	call   409752 <flatcc_builder_get_buffer_size@@Base>
  409a20:	mov    QWORD PTR [rbp-0x10],rax
  409a24:	cmp    QWORD PTR [rbp-0x30],0x0
  409a29:	je     409a36 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  409a2b:	mov    rax,QWORD PTR [rbp-0x30]
  409a2f:	mov    rdx,QWORD PTR [rbp-0x10]
  409a33:	mov    QWORD PTR [rax],rdx
  409a36:	mov    rax,QWORD PTR [rbp-0x28]
  409a3a:	mov    rdi,rax
  409a3d:	call   4096a0 <flatcc_builder_get_buffer_alignment@@Base>
  409a42:	movzx  eax,ax
  409a45:	mov    QWORD PTR [rbp-0x8],rax
  409a49:	mov    rdx,QWORD PTR [rbp-0x10]
  409a4d:	mov    rax,QWORD PTR [rbp-0x8]
  409a51:	add    rax,rdx
  409a54:	lea    rdx,[rax-0x1]
  409a58:	mov    rax,QWORD PTR [rbp-0x8]
  409a5c:	neg    rax
  409a5f:	and    rax,rdx
  409a62:	mov    QWORD PTR [rbp-0x10],rax
  409a66:	mov    rdx,QWORD PTR [rbp-0x10]
  409a6a:	mov    rax,QWORD PTR [rbp-0x8]
  409a6e:	mov    rsi,rdx
  409a71:	mov    rdi,rax
  409a74:	call   40455a <main@@Base+0x38d>
  409a79:	mov    QWORD PTR [rbp-0x18],rax
  409a7d:	cmp    QWORD PTR [rbp-0x18],0x0
  409a82:	je     409ab6 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  409a84:	mov    rdx,QWORD PTR [rbp-0x10]
  409a88:	mov    rcx,QWORD PTR [rbp-0x18]
  409a8c:	mov    rax,QWORD PTR [rbp-0x28]
  409a90:	mov    rsi,rcx
  409a93:	mov    rdi,rax
  409a96:	call   4098cb <flatcc_builder_copy_buffer@@Base>
  409a9b:	test   rax,rax
  409a9e:	jne    409ab7 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409aa0:	mov    rax,QWORD PTR [rbp-0x18]
  409aa4:	mov    rdi,rax
  409aa7:	call   403030 <free@plt>
  409aac:	mov    QWORD PTR [rbp-0x18],0x0
  409ab4:	jmp    409ab7 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409ab6:	nop
  409ab7:	cmp    QWORD PTR [rbp-0x18],0x0
  409abc:	jne    409ad0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409abe:	cmp    QWORD PTR [rbp-0x30],0x0
  409ac3:	je     409ad0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409ac5:	mov    rax,QWORD PTR [rbp-0x30]
  409ac9:	mov    QWORD PTR [rax],0x0
  409ad0:	mov    rax,QWORD PTR [rbp-0x18]
  409ad4:	leave  
  409ad5:	ret    

0000000000409ad6 <flatcc_builder_aligned_alloc@@Base>:
  409ad6:	push   rbp
  409ad7:	mov    rbp,rsp
  409ada:	sub    rsp,0x10
  409ade:	mov    QWORD PTR [rbp-0x8],rdi
  409ae2:	mov    QWORD PTR [rbp-0x10],rsi
  409ae6:	mov    rdx,QWORD PTR [rbp-0x10]
  409aea:	mov    rax,QWORD PTR [rbp-0x8]
  409aee:	mov    rsi,rdx
  409af1:	mov    rdi,rax
  409af4:	call   40455a <main@@Base+0x38d>
  409af9:	leave  
  409afa:	ret    

0000000000409afb <flatcc_builder_aligned_free@@Base>:
  409afb:	push   rbp
  409afc:	mov    rbp,rsp
  409aff:	sub    rsp,0x10
  409b03:	mov    QWORD PTR [rbp-0x8],rdi
  409b07:	mov    rax,QWORD PTR [rbp-0x8]
  409b0b:	mov    rdi,rax
  409b0e:	call   403030 <free@plt>
  409b13:	nop
  409b14:	leave  
  409b15:	ret    

0000000000409b16 <flatcc_builder_get_emit_context@@Base>:
  409b16:	push   rbp
  409b17:	mov    rbp,rsp
  409b1a:	mov    QWORD PTR [rbp-0x8],rdi
  409b1e:	mov    rax,QWORD PTR [rbp-0x8]
  409b22:	mov    rax,QWORD PTR [rax+0x38]
  409b26:	pop    rbp
  409b27:	ret    
  409b28:	push   rbp
  409b29:	mov    rbp,rsp
  409b2c:	sub    rsp,0x20
  409b30:	mov    QWORD PTR [rbp-0x18],rdi
  409b34:	mov    QWORD PTR [rbp-0x8],0x0
  409b3c:	mov    rax,QWORD PTR [rbp-0x18]
  409b40:	mov    rax,QWORD PTR [rax]
  409b43:	test   rax,rax
  409b46:	je     409ba4 <flatcc_builder_get_emit_context@@Base+0x8e>
  409b48:	mov    rax,QWORD PTR [rbp-0x18]
  409b4c:	mov    rax,QWORD PTR [rax]
  409b4f:	mov    rdx,QWORD PTR [rax+0xb88]
  409b56:	mov    rax,QWORD PTR [rbp-0x18]
  409b5a:	mov    rax,QWORD PTR [rax+0x8]
  409b5e:	cmp    rdx,rax
  409b61:	je     409ba4 <flatcc_builder_get_emit_context@@Base+0x8e>
  409b63:	mov    rax,QWORD PTR [rbp-0x18]
  409b67:	mov    rax,QWORD PTR [rax]
  409b6a:	mov    rax,QWORD PTR [rax+0xb88]
  409b71:	mov    rdx,QWORD PTR [rbp-0x18]
  409b75:	mov    rdx,QWORD PTR [rdx]
  409b78:	mov    edx,DWORD PTR [rdx+0xb90]
  409b7e:	sub    edx,0xb80
  409b84:	mov    DWORD PTR [rax+0xb90],edx
  409b8a:	mov    rax,QWORD PTR [rbp-0x18]
  409b8e:	mov    rax,QWORD PTR [rax]
  409b91:	mov    rdx,QWORD PTR [rax+0xb88]
  409b98:	mov    rax,QWORD PTR [rbp-0x18]
  409b9c:	mov    QWORD PTR [rax],rdx
  409b9f:	jmp    409cdc <flatcc_builder_get_emit_context@@Base+0x1c6>
  409ba4:	mov    edi,0xb98
  409ba9:	call   403110 <malloc@plt>
  409bae:	mov    QWORD PTR [rbp-0x8],rax
  409bb2:	cmp    QWORD PTR [rbp-0x8],0x0
  409bb7:	jne    409bc3 <flatcc_builder_get_emit_context@@Base+0xad>
  409bb9:	mov    eax,0xffffffff
  409bbe:	jmp    409d2a <flatcc_builder_get_emit_context@@Base+0x214>
  409bc3:	mov    rax,QWORD PTR [rbp-0x18]
  409bc7:	mov    rax,QWORD PTR [rax+0x38]
  409bcb:	lea    rdx,[rax+0xb80]
  409bd2:	mov    rax,QWORD PTR [rbp-0x18]
  409bd6:	mov    QWORD PTR [rax+0x38],rdx
  409bda:	mov    rax,QWORD PTR [rbp-0x18]
  409bde:	mov    rax,QWORD PTR [rax]
  409be1:	test   rax,rax
  409be4:	je     409c40 <flatcc_builder_get_emit_context@@Base+0x12a>
  409be6:	mov    rax,QWORD PTR [rbp-0x18]
  409bea:	mov    rdx,QWORD PTR [rax+0x8]
  409bee:	mov    rax,QWORD PTR [rbp-0x8]
  409bf2:	mov    QWORD PTR [rax+0xb88],rdx
  409bf9:	mov    rax,QWORD PTR [rbp-0x18]
  409bfd:	mov    rdx,QWORD PTR [rax]
  409c00:	mov    rax,QWORD PTR [rbp-0x8]
  409c04:	mov    QWORD PTR [rax+0xb80],rdx
  409c0b:	mov    rax,QWORD PTR [rbp-0x18]
  409c0f:	mov    rax,QWORD PTR [rax]
  409c12:	mov    rdx,QWORD PTR [rbp-0x8]
  409c16:	mov    QWORD PTR [rax+0xb88],rdx
  409c1d:	mov    rax,QWORD PTR [rbp-0x18]
  409c21:	mov    rax,QWORD PTR [rax+0x8]
  409c25:	mov    rdx,QWORD PTR [rbp-0x8]
  409c29:	mov    QWORD PTR [rax+0xb80],rdx
  409c30:	mov    rax,QWORD PTR [rbp-0x18]
  409c34:	mov    rdx,QWORD PTR [rbp-0x8]
  409c38:	mov    QWORD PTR [rax],rdx
  409c3b:	jmp    409cdc <flatcc_builder_get_emit_context@@Base+0x1c6>
  409c40:	mov    rax,QWORD PTR [rbp-0x18]
  409c44:	mov    rdx,QWORD PTR [rbp-0x8]
  409c48:	mov    QWORD PTR [rax],rdx
  409c4b:	mov    rax,QWORD PTR [rbp-0x18]
  409c4f:	mov    rdx,QWORD PTR [rbp-0x8]
  409c53:	mov    QWORD PTR [rax+0x8],rdx
  409c57:	mov    rax,QWORD PTR [rbp-0x8]
  409c5b:	mov    rdx,QWORD PTR [rbp-0x8]
  409c5f:	mov    QWORD PTR [rax+0xb80],rdx
  409c66:	mov    rax,QWORD PTR [rbp-0x8]
  409c6a:	mov    rdx,QWORD PTR [rbp-0x8]
  409c6e:	mov    QWORD PTR [rax+0xb88],rdx
  409c75:	mov    rax,QWORD PTR [rbp-0x18]
  409c79:	mov    rax,QWORD PTR [rax]
  409c7c:	lea    rdx,[rax+0x5c0]
  409c83:	mov    rax,QWORD PTR [rbp-0x18]
  409c87:	mov    QWORD PTR [rax+0x10],rdx
  409c8b:	mov    rax,QWORD PTR [rbp-0x18]
  409c8f:	mov    rdx,QWORD PTR [rax+0x10]
  409c93:	mov    rax,QWORD PTR [rbp-0x18]
  409c97:	mov    QWORD PTR [rax+0x20],rdx
  409c9b:	mov    rax,QWORD PTR [rbp-0x18]
  409c9f:	mov    QWORD PTR [rax+0x18],0x5c0
  409ca7:	mov    rax,QWORD PTR [rbp-0x18]
  409cab:	mov    rax,QWORD PTR [rax+0x18]
  409caf:	mov    edx,0xb80
  409cb4:	sub    rdx,rax
  409cb7:	mov    rax,QWORD PTR [rbp-0x18]
  409cbb:	mov    QWORD PTR [rax+0x28],rdx
  409cbf:	mov    rax,QWORD PTR [rbp-0x18]
  409cc3:	mov    rax,QWORD PTR [rax+0x18]
  409cc7:	neg    eax
  409cc9:	mov    edx,eax
  409ccb:	mov    rax,QWORD PTR [rbp-0x8]
  409ccf:	mov    DWORD PTR [rax+0xb90],edx
  409cd5:	mov    eax,0x0
  409cda:	jmp    409d2a <flatcc_builder_get_emit_context@@Base+0x214>
  409cdc:	mov    rax,QWORD PTR [rbp-0x18]
  409ce0:	mov    rax,QWORD PTR [rax]
  409ce3:	lea    rdx,[rax+0xb80]
  409cea:	mov    rax,QWORD PTR [rbp-0x18]
  409cee:	mov    QWORD PTR [rax+0x10],rdx
  409cf2:	mov    rax,QWORD PTR [rbp-0x18]
  409cf6:	mov    QWORD PTR [rax+0x18],0xb80
  409cfe:	mov    rax,QWORD PTR [rbp-0x18]
  409d02:	mov    rax,QWORD PTR [rax]
  409d05:	mov    rdx,QWORD PTR [rbp-0x18]
  409d09:	mov    rdx,QWORD PTR [rdx]
  409d0c:	mov    rdx,QWORD PTR [rdx+0xb80]
  409d13:	mov    edx,DWORD PTR [rdx+0xb90]
  409d19:	sub    edx,0xb80
  409d1f:	mov    DWORD PTR [rax+0xb90],edx
  409d25:	mov    eax,0x0
  409d2a:	leave  
  409d2b:	ret    
  409d2c:	push   rbp
  409d2d:	mov    rbp,rsp
  409d30:	sub    rsp,0x20
  409d34:	mov    QWORD PTR [rbp-0x18],rdi
  409d38:	mov    QWORD PTR [rbp-0x8],0x0
  409d40:	mov    rax,QWORD PTR [rbp-0x18]
  409d44:	mov    rax,QWORD PTR [rax+0x8]
  409d48:	test   rax,rax
  409d4b:	je     409d84 <flatcc_builder_get_emit_context@@Base+0x26e>
  409d4d:	mov    rax,QWORD PTR [rbp-0x18]
  409d51:	mov    rax,QWORD PTR [rax+0x8]
  409d55:	mov    rdx,QWORD PTR [rax+0xb80]
  409d5c:	mov    rax,QWORD PTR [rbp-0x18]
  409d60:	mov    rax,QWORD PTR [rax]
  409d63:	cmp    rdx,rax
  409d66:	je     409d84 <flatcc_builder_get_emit_context@@Base+0x26e>
  409d68:	mov    rax,QWORD PTR [rbp-0x18]
  409d6c:	mov    rax,QWORD PTR [rax+0x8]
  409d70:	mov    rdx,QWORD PTR [rax+0xb80]
  409d77:	mov    rax,QWORD PTR [rbp-0x18]
  409d7b:	mov    QWORD PTR [rax+0x8],rdx
  409d7f:	jmp    409ebe <flatcc_builder_get_emit_context@@Base+0x3a8>
  409d84:	mov    edi,0xb98
  409d89:	call   403110 <malloc@plt>
  409d8e:	mov    QWORD PTR [rbp-0x8],rax
  409d92:	cmp    QWORD PTR [rbp-0x8],0x0
  409d97:	jne    409da3 <flatcc_builder_get_emit_context@@Base+0x28d>
  409d99:	mov    eax,0xffffffff
  409d9e:	jmp    409f0b <flatcc_builder_get_emit_context@@Base+0x3f5>
  409da3:	mov    rax,QWORD PTR [rbp-0x18]
  409da7:	mov    rax,QWORD PTR [rax+0x38]
  409dab:	lea    rdx,[rax+0xb80]
  409db2:	mov    rax,QWORD PTR [rbp-0x18]
  409db6:	mov    QWORD PTR [rax+0x38],rdx
  409dba:	mov    rax,QWORD PTR [rbp-0x18]
  409dbe:	mov    rax,QWORD PTR [rax+0x8]
  409dc2:	test   rax,rax
  409dc5:	je     409e22 <flatcc_builder_get_emit_context@@Base+0x30c>
  409dc7:	mov    rax,QWORD PTR [rbp-0x18]
  409dcb:	mov    rdx,QWORD PTR [rax+0x8]
  409dcf:	mov    rax,QWORD PTR [rbp-0x8]
  409dd3:	mov    QWORD PTR [rax+0xb88],rdx
  409dda:	mov    rax,QWORD PTR [rbp-0x18]
  409dde:	mov    rdx,QWORD PTR [rax]
  409de1:	mov    rax,QWORD PTR [rbp-0x8]
  409de5:	mov    QWORD PTR [rax+0xb80],rdx
  409dec:	mov    rax,QWORD PTR [rbp-0x18]
  409df0:	mov    rax,QWORD PTR [rax]
  409df3:	mov    rdx,QWORD PTR [rbp-0x8]
  409df7:	mov    QWORD PTR [rax+0xb88],rdx
  409dfe:	mov    rax,QWORD PTR [rbp-0x18]
  409e02:	mov    rax,QWORD PTR [rax+0x8]
  409e06:	mov    rdx,QWORD PTR [rbp-0x8]
  409e0a:	mov    QWORD PTR [rax+0xb80],rdx
  409e11:	mov    rax,QWORD PTR [rbp-0x18]
  409e15:	mov    rdx,QWORD PTR [rbp-0x8]
  409e19:	mov    QWORD PTR [rax+0x8],rdx
  409e1d:	jmp    409ebe <flatcc_builder_get_emit_context@@Base+0x3a8>
  409e22:	mov    rax,QWORD PTR [rbp-0x18]
  409e26:	mov    rdx,QWORD PTR [rbp-0x8]
  409e2a:	mov    QWORD PTR [rax],rdx
  409e2d:	mov    rax,QWORD PTR [rbp-0x18]
  409e31:	mov    rdx,QWORD PTR [rbp-0x8]
  409e35:	mov    QWORD PTR [rax+0x8],rdx
  409e39:	mov    rax,QWORD PTR [rbp-0x8]
  409e3d:	mov    rdx,QWORD PTR [rbp-0x8]
  409e41:	mov    QWORD PTR [rax+0xb80],rdx
  409e48:	mov    rax,QWORD PTR [rbp-0x8]
  409e4c:	mov    rdx,QWORD PTR [rbp-0x8]
  409e50:	mov    QWORD PTR [rax+0xb88],rdx
  409e57:	mov    rax,QWORD PTR [rbp-0x18]
  409e5b:	mov    rax,QWORD PTR [rax]
  409e5e:	lea    rdx,[rax+0x5c0]
  409e65:	mov    rax,QWORD PTR [rbp-0x18]
  409e69:	mov    QWORD PTR [rax+0x10],rdx
  409e6d:	mov    rax,QWORD PTR [rbp-0x18]
  409e71:	mov    rdx,QWORD PTR [rax+0x10]
  409e75:	mov    rax,QWORD PTR [rbp-0x18]
  409e79:	mov    QWORD PTR [rax+0x20],rdx
  409e7d:	mov    rax,QWORD PTR [rbp-0x18]
  409e81:	mov    QWORD PTR [rax+0x18],0x5c0
  409e89:	mov    rax,QWORD PTR [rbp-0x18]
  409e8d:	mov    rax,QWORD PTR [rax+0x18]
  409e91:	mov    edx,0xb80
  409e96:	sub    rdx,rax
  409e99:	mov    rax,QWORD PTR [rbp-0x18]
  409e9d:	mov    QWORD PTR [rax+0x28],rdx
  409ea1:	mov    rax,QWORD PTR [rbp-0x18]
  409ea5:	mov    rax,QWORD PTR [rax+0x18]
  409ea9:	neg    eax
  409eab:	mov    edx,eax
  409ead:	mov    rax,QWORD PTR [rbp-0x8]
  409eb1:	mov    DWORD PTR [rax+0xb90],edx
  409eb7:	mov    eax,0x0
  409ebc:	jmp    409f0b <flatcc_builder_get_emit_context@@Base+0x3f5>
  409ebe:	mov    rax,QWORD PTR [rbp-0x18]
  409ec2:	mov    rax,QWORD PTR [rax+0x8]
  409ec6:	mov    rdx,rax
  409ec9:	mov    rax,QWORD PTR [rbp-0x18]
  409ecd:	mov    QWORD PTR [rax+0x20],rdx
  409ed1:	mov    rax,QWORD PTR [rbp-0x18]
  409ed5:	mov    QWORD PTR [rax+0x28],0xb80
  409edd:	mov    rax,QWORD PTR [rbp-0x18]
  409ee1:	mov    rax,QWORD PTR [rax+0x8]
  409ee5:	mov    rdx,QWORD PTR [rbp-0x18]
  409ee9:	mov    rdx,QWORD PTR [rdx+0x8]
  409eed:	mov    rdx,QWORD PTR [rdx+0xb88]
  409ef4:	mov    edx,DWORD PTR [rdx+0xb90]
  409efa:	add    edx,0xb80
  409f00:	mov    DWORD PTR [rax+0xb90],edx
  409f06:	mov    eax,0x0
  409f0b:	leave  
  409f0c:	ret    
  409f0d:	push   rbp
  409f0e:	mov    rbp,rsp
  409f11:	sub    rsp,0x30
  409f15:	mov    QWORD PTR [rbp-0x18],rdi
  409f19:	mov    QWORD PTR [rbp-0x20],rsi
  409f1d:	mov    QWORD PTR [rbp-0x28],rdx
  409f21:	mov    rax,QWORD PTR [rbp-0x28]
  409f25:	add    QWORD PTR [rbp-0x20],rax
  409f29:	jmp    409fcd <flatcc_builder_get_emit_context@@Base+0x4b7>
  409f2e:	mov    rax,QWORD PTR [rbp-0x28]
  409f32:	mov    QWORD PTR [rbp-0x8],rax
  409f36:	mov    rax,QWORD PTR [rbp-0x18]
  409f3a:	mov    rax,QWORD PTR [rax+0x18]
  409f3e:	cmp    rax,QWORD PTR [rbp-0x8]
  409f42:	jae    409f6e <flatcc_builder_get_emit_context@@Base+0x458>
  409f44:	mov    rax,QWORD PTR [rbp-0x18]
  409f48:	mov    rax,QWORD PTR [rax+0x18]
  409f4c:	mov    QWORD PTR [rbp-0x8],rax
  409f50:	cmp    QWORD PTR [rbp-0x8],0x0
  409f55:	jne    409f6e <flatcc_builder_get_emit_context@@Base+0x458>
  409f57:	mov    rax,QWORD PTR [rbp-0x18]
  409f5b:	mov    rdi,rax
  409f5e:	call   409b28 <flatcc_builder_get_emit_context@@Base+0x12>
  409f63:	test   eax,eax
  409f65:	je     409fcd <flatcc_builder_get_emit_context@@Base+0x4b7>
  409f67:	mov    eax,0xffffffff
  409f6c:	jmp    409fdd <flatcc_builder_get_emit_context@@Base+0x4c7>
  409f6e:	mov    rax,QWORD PTR [rbp-0x18]
  409f72:	mov    rax,QWORD PTR [rax+0x10]
  409f76:	mov    rdx,QWORD PTR [rbp-0x8]
  409f7a:	neg    rdx
  409f7d:	add    rdx,rax
  409f80:	mov    rax,QWORD PTR [rbp-0x18]
  409f84:	mov    QWORD PTR [rax+0x10],rdx
  409f88:	mov    rax,QWORD PTR [rbp-0x18]
  409f8c:	mov    rax,QWORD PTR [rax+0x18]
  409f90:	sub    rax,QWORD PTR [rbp-0x8]
  409f94:	mov    rdx,rax
  409f97:	mov    rax,QWORD PTR [rbp-0x18]
  409f9b:	mov    QWORD PTR [rax+0x18],rdx
  409f9f:	mov    rax,QWORD PTR [rbp-0x8]
  409fa3:	neg    rax
  409fa6:	add    QWORD PTR [rbp-0x20],rax
  409faa:	mov    rax,QWORD PTR [rbp-0x8]
  409fae:	sub    QWORD PTR [rbp-0x28],rax
  409fb2:	mov    rax,QWORD PTR [rbp-0x18]
  409fb6:	mov    rax,QWORD PTR [rax+0x10]
  409fba:	mov    rdx,QWORD PTR [rbp-0x8]
  409fbe:	mov    rcx,QWORD PTR [rbp-0x20]
  409fc2:	mov    rsi,rcx
  409fc5:	mov    rdi,rax
  409fc8:	call   403100 <memcpy@plt>
  409fcd:	cmp    QWORD PTR [rbp-0x28],0x0
  409fd2:	jne    409f2e <flatcc_builder_get_emit_context@@Base+0x418>
  409fd8:	mov    eax,0x0
  409fdd:	leave  
  409fde:	ret    
  409fdf:	push   rbp
  409fe0:	mov    rbp,rsp
  409fe3:	sub    rsp,0x30
  409fe7:	mov    QWORD PTR [rbp-0x18],rdi
  409feb:	mov    QWORD PTR [rbp-0x20],rsi
  409fef:	mov    QWORD PTR [rbp-0x28],rdx
  409ff3:	jmp    40a091 <flatcc_builder_get_emit_context@@Base+0x57b>
  409ff8:	mov    rax,QWORD PTR [rbp-0x28]
  409ffc:	mov    QWORD PTR [rbp-0x8],rax
  40a000:	mov    rax,QWORD PTR [rbp-0x18]
  40a004:	mov    rax,QWORD PTR [rax+0x28]
  40a008:	cmp    rax,QWORD PTR [rbp-0x8]
  40a00c:	jae    40a038 <flatcc_builder_get_emit_context@@Base+0x522>
  40a00e:	mov    rax,QWORD PTR [rbp-0x18]
  40a012:	mov    rax,QWORD PTR [rax+0x28]
  40a016:	mov    QWORD PTR [rbp-0x8],rax
  40a01a:	cmp    QWORD PTR [rbp-0x8],0x0
  40a01f:	jne    40a038 <flatcc_builder_get_emit_context@@Base+0x522>
  40a021:	mov    rax,QWORD PTR [rbp-0x18]
  40a025:	mov    rdi,rax
  40a028:	call   409d2c <flatcc_builder_get_emit_context@@Base+0x216>
  40a02d:	test   eax,eax
  40a02f:	je     40a091 <flatcc_builder_get_emit_context@@Base+0x57b>
  40a031:	mov    eax,0xffffffff
  40a036:	jmp    40a0a1 <flatcc_builder_get_emit_context@@Base+0x58b>
  40a038:	mov    rax,QWORD PTR [rbp-0x18]
  40a03c:	mov    rax,QWORD PTR [rax+0x20]
  40a040:	mov    rdx,QWORD PTR [rbp-0x8]
  40a044:	mov    rcx,QWORD PTR [rbp-0x20]
  40a048:	mov    rsi,rcx
  40a04b:	mov    rdi,rax
  40a04e:	call   403100 <memcpy@plt>
  40a053:	mov    rax,QWORD PTR [rbp-0x8]
  40a057:	sub    QWORD PTR [rbp-0x28],rax
  40a05b:	mov    rax,QWORD PTR [rbp-0x8]
  40a05f:	add    QWORD PTR [rbp-0x20],rax
  40a063:	mov    rax,QWORD PTR [rbp-0x18]
  40a067:	mov    rdx,QWORD PTR [rax+0x20]
  40a06b:	mov    rax,QWORD PTR [rbp-0x8]
  40a06f:	add    rdx,rax
  40a072:	mov    rax,QWORD PTR [rbp-0x18]
  40a076:	mov    QWORD PTR [rax+0x20],rdx
  40a07a:	mov    rax,QWORD PTR [rbp-0x18]
  40a07e:	mov    rax,QWORD PTR [rax+0x28]
  40a082:	sub    rax,QWORD PTR [rbp-0x8]
  40a086:	mov    rdx,rax
  40a089:	mov    rax,QWORD PTR [rbp-0x18]
  40a08d:	mov    QWORD PTR [rax+0x28],rdx
  40a091:	cmp    QWORD PTR [rbp-0x28],0x0
  40a096:	jne    409ff8 <flatcc_builder_get_emit_context@@Base+0x4e2>
  40a09c:	mov    eax,0x0
  40a0a1:	leave  
  40a0a2:	ret    

000000000040a0a3 <flatcc_emitter_recycle_page@@Base>:
  40a0a3:	push   rbp
  40a0a4:	mov    rbp,rsp
  40a0a7:	mov    QWORD PTR [rbp-0x8],rdi
  40a0ab:	mov    QWORD PTR [rbp-0x10],rsi
  40a0af:	mov    rax,QWORD PTR [rbp-0x8]
  40a0b3:	mov    rax,QWORD PTR [rax]
  40a0b6:	cmp    rax,QWORD PTR [rbp-0x10]
  40a0ba:	je     40a0ca <flatcc_emitter_recycle_page@@Base+0x27>
  40a0bc:	mov    rax,QWORD PTR [rbp-0x8]
  40a0c0:	mov    rax,QWORD PTR [rax+0x8]
  40a0c4:	cmp    rax,QWORD PTR [rbp-0x10]
  40a0c8:	jne    40a0d4 <flatcc_emitter_recycle_page@@Base+0x31>
  40a0ca:	mov    eax,0xffffffff
  40a0cf:	jmp    40a16a <flatcc_emitter_recycle_page@@Base+0xc7>
  40a0d4:	mov    rax,QWORD PTR [rbp-0x10]
  40a0d8:	mov    rax,QWORD PTR [rax+0xb80]
  40a0df:	mov    rdx,QWORD PTR [rbp-0x10]
  40a0e3:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a0ea:	mov    QWORD PTR [rax+0xb88],rdx
  40a0f1:	mov    rax,QWORD PTR [rbp-0x10]
  40a0f5:	mov    rax,QWORD PTR [rax+0xb88]
  40a0fc:	mov    rdx,QWORD PTR [rbp-0x10]
  40a100:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a107:	mov    QWORD PTR [rax+0xb80],rdx
  40a10e:	mov    rax,QWORD PTR [rbp-0x8]
  40a112:	mov    rax,QWORD PTR [rax]
  40a115:	mov    rdx,QWORD PTR [rax+0xb88]
  40a11c:	mov    rax,QWORD PTR [rbp-0x10]
  40a120:	mov    QWORD PTR [rax+0xb88],rdx
  40a127:	mov    rax,QWORD PTR [rbp-0x8]
  40a12b:	mov    rdx,QWORD PTR [rax]
  40a12e:	mov    rax,QWORD PTR [rbp-0x10]
  40a132:	mov    QWORD PTR [rax+0xb80],rdx
  40a139:	mov    rax,QWORD PTR [rbp-0x10]
  40a13d:	mov    rax,QWORD PTR [rax+0xb88]
  40a144:	mov    rdx,QWORD PTR [rbp-0x10]
  40a148:	mov    QWORD PTR [rax+0xb80],rdx
  40a14f:	mov    rax,QWORD PTR [rbp-0x10]
  40a153:	mov    rax,QWORD PTR [rax+0xb80]
  40a15a:	mov    rdx,QWORD PTR [rbp-0x10]
  40a15e:	mov    QWORD PTR [rax+0xb88],rdx
  40a165:	mov    eax,0x0
  40a16a:	pop    rbp
  40a16b:	ret    

000000000040a16c <flatcc_emitter_reset@@Base>:
  40a16c:	push   rbp
  40a16d:	mov    rbp,rsp
  40a170:	sub    rsp,0x20
  40a174:	mov    QWORD PTR [rbp-0x18],rdi
  40a178:	mov    rax,QWORD PTR [rbp-0x18]
  40a17c:	mov    rax,QWORD PTR [rax]
  40a17f:	mov    QWORD PTR [rbp-0x8],rax
  40a183:	mov    rax,QWORD PTR [rbp-0x18]
  40a187:	mov    rax,QWORD PTR [rax]
  40a18a:	test   rax,rax
  40a18d:	je     40a2f5 <flatcc_emitter_reset@@Base+0x189>
  40a193:	mov    rax,QWORD PTR [rbp-0x18]
  40a197:	mov    rdx,QWORD PTR [rax]
  40a19a:	mov    rax,QWORD PTR [rbp-0x18]
  40a19e:	mov    QWORD PTR [rax+0x8],rdx
  40a1a2:	mov    rax,QWORD PTR [rbp-0x18]
  40a1a6:	mov    rax,QWORD PTR [rax]
  40a1a9:	lea    rdx,[rax+0x5c0]
  40a1b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1b4:	mov    QWORD PTR [rax+0x10],rdx
  40a1b8:	mov    rax,QWORD PTR [rbp-0x18]
  40a1bc:	mov    rdx,QWORD PTR [rax+0x10]
  40a1c0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1c4:	mov    QWORD PTR [rax+0x20],rdx
  40a1c8:	mov    rax,QWORD PTR [rbp-0x18]
  40a1cc:	mov    QWORD PTR [rax+0x18],0x5c0
  40a1d4:	mov    rax,QWORD PTR [rbp-0x18]
  40a1d8:	mov    QWORD PTR [rax+0x28],0x5c0
  40a1e0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1e4:	mov    rax,QWORD PTR [rax]
  40a1e7:	mov    rdx,QWORD PTR [rbp-0x18]
  40a1eb:	mov    rdx,QWORD PTR [rdx+0x18]
  40a1ef:	neg    edx
  40a1f1:	mov    DWORD PTR [rax+0xb90],edx
  40a1f7:	mov    rax,QWORD PTR [rbp-0x18]
  40a1fb:	mov    rax,QWORD PTR [rax+0x40]
  40a1ff:	test   rax,rax
  40a202:	jne    40a214 <flatcc_emitter_reset@@Base+0xa8>
  40a204:	mov    rax,QWORD PTR [rbp-0x18]
  40a208:	mov    rdx,QWORD PTR [rax+0x30]
  40a20c:	mov    rax,QWORD PTR [rbp-0x18]
  40a210:	mov    QWORD PTR [rax+0x40],rdx
  40a214:	mov    rax,QWORD PTR [rbp-0x18]
  40a218:	mov    rdx,QWORD PTR [rax+0x40]
  40a21c:	mov    rax,rdx
  40a21f:	add    rax,rax
  40a222:	add    rax,rdx
  40a225:	shr    rax,0x2
  40a229:	mov    rdx,rax
  40a22c:	mov    rax,QWORD PTR [rbp-0x18]
  40a230:	mov    rax,QWORD PTR [rax+0x30]
  40a234:	shr    rax,0x2
  40a238:	add    rdx,rax
  40a23b:	mov    rax,QWORD PTR [rbp-0x18]
  40a23f:	mov    QWORD PTR [rax+0x40],rdx
  40a243:	mov    rax,QWORD PTR [rbp-0x18]
  40a247:	mov    QWORD PTR [rax+0x30],0x0
  40a24f:	jmp    40a2bb <flatcc_emitter_reset@@Base+0x14f>
  40a251:	mov    rax,QWORD PTR [rbp-0x18]
  40a255:	mov    rax,QWORD PTR [rax+0x8]
  40a259:	mov    rax,QWORD PTR [rax+0xb80]
  40a260:	mov    QWORD PTR [rbp-0x8],rax
  40a264:	mov    rax,QWORD PTR [rbp-0x18]
  40a268:	mov    rax,QWORD PTR [rax+0x8]
  40a26c:	mov    rdx,QWORD PTR [rbp-0x8]
  40a270:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a277:	mov    QWORD PTR [rax+0xb80],rdx
  40a27e:	mov    rax,QWORD PTR [rbp-0x8]
  40a282:	mov    rax,QWORD PTR [rax+0xb80]
  40a289:	mov    rdx,QWORD PTR [rbp-0x18]
  40a28d:	mov    rdx,QWORD PTR [rdx+0x8]
  40a291:	mov    QWORD PTR [rax+0xb88],rdx
  40a298:	mov    rax,QWORD PTR [rbp-0x8]
  40a29c:	mov    rdi,rax
  40a29f:	call   403030 <free@plt>
  40a2a4:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a8:	mov    rax,QWORD PTR [rax+0x38]
  40a2ac:	lea    rdx,[rax-0xb80]
  40a2b3:	mov    rax,QWORD PTR [rbp-0x18]
  40a2b7:	mov    QWORD PTR [rax+0x38],rdx
  40a2bb:	mov    rax,QWORD PTR [rbp-0x18]
  40a2bf:	mov    rax,QWORD PTR [rax+0x40]
  40a2c3:	lea    rdx,[rax+rax*1]
  40a2c7:	mov    rax,QWORD PTR [rbp-0x18]
  40a2cb:	mov    rax,QWORD PTR [rax+0x38]
  40a2cf:	cmp    rdx,rax
  40a2d2:	jae    40a2f6 <flatcc_emitter_reset@@Base+0x18a>
  40a2d4:	mov    rax,QWORD PTR [rbp-0x18]
  40a2d8:	mov    rax,QWORD PTR [rax+0x8]
  40a2dc:	mov    rdx,QWORD PTR [rax+0xb80]
  40a2e3:	mov    rax,QWORD PTR [rbp-0x18]
  40a2e7:	mov    rax,QWORD PTR [rax]
  40a2ea:	cmp    rdx,rax
  40a2ed:	jne    40a251 <flatcc_emitter_reset@@Base+0xe5>
  40a2f3:	jmp    40a2f6 <flatcc_emitter_reset@@Base+0x18a>
  40a2f5:	nop
  40a2f6:	leave  
  40a2f7:	ret    

000000000040a2f8 <flatcc_emitter_clear@@Base>:
  40a2f8:	push   rbp
  40a2f9:	mov    rbp,rsp
  40a2fc:	sub    rsp,0x20
  40a300:	mov    QWORD PTR [rbp-0x18],rdi
  40a304:	mov    rax,QWORD PTR [rbp-0x18]
  40a308:	mov    rax,QWORD PTR [rax]
  40a30b:	mov    QWORD PTR [rbp-0x8],rax
  40a30f:	cmp    QWORD PTR [rbp-0x8],0x0
  40a314:	je     40a384 <flatcc_emitter_clear@@Base+0x8c>
  40a316:	mov    rax,QWORD PTR [rbp-0x8]
  40a31a:	mov    rax,QWORD PTR [rax+0xb88]
  40a321:	mov    QWORD PTR [rax+0xb80],0x0
  40a32c:	jmp    40a350 <flatcc_emitter_clear@@Base+0x58>
  40a32e:	mov    rax,QWORD PTR [rbp-0x8]
  40a332:	mov    rax,QWORD PTR [rax+0xb80]
  40a339:	mov    QWORD PTR [rbp-0x8],rax
  40a33d:	mov    rax,QWORD PTR [rbp-0x8]
  40a341:	mov    rax,QWORD PTR [rax+0xb88]
  40a348:	mov    rdi,rax
  40a34b:	call   403030 <free@plt>
  40a350:	mov    rax,QWORD PTR [rbp-0x8]
  40a354:	mov    rax,QWORD PTR [rax+0xb80]
  40a35b:	test   rax,rax
  40a35e:	jne    40a32e <flatcc_emitter_clear@@Base+0x36>
  40a360:	mov    rax,QWORD PTR [rbp-0x8]
  40a364:	mov    rdi,rax
  40a367:	call   403030 <free@plt>
  40a36c:	mov    rax,QWORD PTR [rbp-0x18]
  40a370:	mov    edx,0x48
  40a375:	mov    esi,0x0
  40a37a:	mov    rdi,rax
  40a37d:	call   4030c0 <memset@plt>
  40a382:	jmp    40a385 <flatcc_emitter_clear@@Base+0x8d>
  40a384:	nop
  40a385:	leave  
  40a386:	ret    

000000000040a387 <flatcc_emitter@@Base>:
  40a387:	push   rbp
  40a388:	mov    rbp,rsp
  40a38b:	sub    rsp,0x30
  40a38f:	mov    QWORD PTR [rbp-0x18],rdi
  40a393:	mov    QWORD PTR [rbp-0x20],rsi
  40a397:	mov    DWORD PTR [rbp-0x24],edx
  40a39a:	mov    DWORD PTR [rbp-0x28],ecx
  40a39d:	mov    QWORD PTR [rbp-0x30],r8
  40a3a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a3a5:	mov    QWORD PTR [rbp-0x8],rax
  40a3a9:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ad:	mov    rdx,QWORD PTR [rax+0x30]
  40a3b1:	mov    rax,QWORD PTR [rbp-0x30]
  40a3b5:	add    rdx,rax
  40a3b8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3bc:	mov    QWORD PTR [rax+0x30],rdx
  40a3c0:	cmp    DWORD PTR [rbp-0x28],0x0
  40a3c4:	jns    40a46c <flatcc_emitter@@Base+0xe5>
  40a3ca:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ce:	mov    rax,QWORD PTR [rax+0x18]
  40a3d2:	cmp    rax,QWORD PTR [rbp-0x30]
  40a3d6:	jb     40a41a <flatcc_emitter@@Base+0x93>
  40a3d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3dc:	mov    rax,QWORD PTR [rax+0x10]
  40a3e0:	mov    rdx,QWORD PTR [rbp-0x30]
  40a3e4:	neg    rdx
  40a3e7:	add    rdx,rax
  40a3ea:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ee:	mov    QWORD PTR [rax+0x10],rdx
  40a3f2:	mov    rax,QWORD PTR [rbp-0x8]
  40a3f6:	mov    rax,QWORD PTR [rax+0x18]
  40a3fa:	sub    rax,QWORD PTR [rbp-0x30]
  40a3fe:	mov    rdx,rax
  40a401:	mov    rax,QWORD PTR [rbp-0x8]
  40a405:	mov    QWORD PTR [rax+0x18],rdx
  40a409:	mov    rax,QWORD PTR [rbp-0x8]
  40a40d:	mov    rax,QWORD PTR [rax+0x10]
  40a411:	mov    QWORD PTR [rbp-0x10],rax
  40a415:	jmp    40a4f8 <flatcc_emitter@@Base+0x171>
  40a41a:	mov    eax,DWORD PTR [rbp-0x24]
  40a41d:	cdqe   
  40a41f:	shl    rax,0x4
  40a423:	add    QWORD PTR [rbp-0x20],rax
  40a427:	jmp    40a45a <flatcc_emitter@@Base+0xd3>
  40a429:	sub    QWORD PTR [rbp-0x20],0x10
  40a42e:	mov    rax,QWORD PTR [rbp-0x20]
  40a432:	mov    rdx,QWORD PTR [rax+0x8]
  40a436:	mov    rax,QWORD PTR [rbp-0x20]
  40a43a:	mov    rcx,QWORD PTR [rax]
  40a43d:	mov    rax,QWORD PTR [rbp-0x8]
  40a441:	mov    rsi,rcx
  40a444:	mov    rdi,rax
  40a447:	call   409f0d <flatcc_builder_get_emit_context@@Base+0x3f7>
  40a44c:	test   eax,eax
  40a44e:	je     40a45a <flatcc_emitter@@Base+0xd3>
  40a450:	mov    eax,0xffffffff
  40a455:	jmp    40a53b <flatcc_emitter@@Base+0x1b4>
  40a45a:	mov    eax,DWORD PTR [rbp-0x24]
  40a45d:	lea    edx,[rax-0x1]
  40a460:	mov    DWORD PTR [rbp-0x24],edx
  40a463:	test   eax,eax
  40a465:	jne    40a429 <flatcc_emitter@@Base+0xa2>
  40a467:	jmp    40a4f1 <flatcc_emitter@@Base+0x16a>
  40a46c:	mov    rax,QWORD PTR [rbp-0x8]
  40a470:	mov    rax,QWORD PTR [rax+0x28]
  40a474:	cmp    rax,QWORD PTR [rbp-0x30]
  40a478:	jb     40a4e4 <flatcc_emitter@@Base+0x15d>
  40a47a:	mov    rax,QWORD PTR [rbp-0x8]
  40a47e:	mov    rax,QWORD PTR [rax+0x20]
  40a482:	mov    QWORD PTR [rbp-0x10],rax
  40a486:	mov    rax,QWORD PTR [rbp-0x8]
  40a48a:	mov    rdx,QWORD PTR [rax+0x20]
  40a48e:	mov    rax,QWORD PTR [rbp-0x30]
  40a492:	add    rdx,rax
  40a495:	mov    rax,QWORD PTR [rbp-0x8]
  40a499:	mov    QWORD PTR [rax+0x20],rdx
  40a49d:	mov    rax,QWORD PTR [rbp-0x8]
  40a4a1:	mov    rax,QWORD PTR [rax+0x28]
  40a4a5:	sub    rax,QWORD PTR [rbp-0x30]
  40a4a9:	mov    rdx,rax
  40a4ac:	mov    rax,QWORD PTR [rbp-0x8]
  40a4b0:	mov    QWORD PTR [rax+0x28],rdx
  40a4b4:	jmp    40a4f8 <flatcc_emitter@@Base+0x171>
  40a4b6:	mov    rax,QWORD PTR [rbp-0x20]
  40a4ba:	mov    rdx,QWORD PTR [rax+0x8]
  40a4be:	mov    rax,QWORD PTR [rbp-0x20]
  40a4c2:	mov    rcx,QWORD PTR [rax]
  40a4c5:	mov    rax,QWORD PTR [rbp-0x8]
  40a4c9:	mov    rsi,rcx
  40a4cc:	mov    rdi,rax
  40a4cf:	call   409fdf <flatcc_builder_get_emit_context@@Base+0x4c9>
  40a4d4:	test   eax,eax
  40a4d6:	je     40a4df <flatcc_emitter@@Base+0x158>
  40a4d8:	mov    eax,0xffffffff
  40a4dd:	jmp    40a53b <flatcc_emitter@@Base+0x1b4>
  40a4df:	add    QWORD PTR [rbp-0x20],0x10
  40a4e4:	mov    eax,DWORD PTR [rbp-0x24]
  40a4e7:	lea    edx,[rax-0x1]
  40a4ea:	mov    DWORD PTR [rbp-0x24],edx
  40a4ed:	test   eax,eax
  40a4ef:	jne    40a4b6 <flatcc_emitter@@Base+0x12f>
  40a4f1:	mov    eax,0x0
  40a4f6:	jmp    40a53b <flatcc_emitter@@Base+0x1b4>
  40a4f8:	jmp    40a529 <flatcc_emitter@@Base+0x1a2>
  40a4fa:	mov    rax,QWORD PTR [rbp-0x20]
  40a4fe:	mov    rdx,QWORD PTR [rax+0x8]
  40a502:	mov    rax,QWORD PTR [rbp-0x20]
  40a506:	mov    rcx,QWORD PTR [rax]
  40a509:	mov    rax,QWORD PTR [rbp-0x10]
  40a50d:	mov    rsi,rcx
  40a510:	mov    rdi,rax
  40a513:	call   403100 <memcpy@plt>
  40a518:	mov    rax,QWORD PTR [rbp-0x20]
  40a51c:	mov    rax,QWORD PTR [rax+0x8]
  40a520:	add    QWORD PTR [rbp-0x10],rax
  40a524:	add    QWORD PTR [rbp-0x20],0x10
  40a529:	mov    eax,DWORD PTR [rbp-0x24]
  40a52c:	lea    edx,[rax-0x1]
  40a52f:	mov    DWORD PTR [rbp-0x24],edx
  40a532:	test   eax,eax
  40a534:	jne    40a4fa <flatcc_emitter@@Base+0x173>
  40a536:	mov    eax,0x0
  40a53b:	leave  
  40a53c:	ret    

000000000040a53d <flatcc_emitter_copy_buffer@@Base>:
  40a53d:	push   rbp
  40a53e:	mov    rbp,rsp
  40a541:	sub    rsp,0x30
  40a545:	mov    QWORD PTR [rbp-0x18],rdi
  40a549:	mov    QWORD PTR [rbp-0x20],rsi
  40a54d:	mov    QWORD PTR [rbp-0x28],rdx
  40a551:	mov    rax,QWORD PTR [rbp-0x18]
  40a555:	mov    rax,QWORD PTR [rax+0x30]
  40a559:	cmp    rax,QWORD PTR [rbp-0x28]
  40a55d:	jbe    40a569 <flatcc_emitter_copy_buffer@@Base+0x2c>
  40a55f:	mov    eax,0x0
  40a564:	jmp    40a66d <flatcc_emitter_copy_buffer@@Base+0x130>
  40a569:	mov    rax,QWORD PTR [rbp-0x18]
  40a56d:	mov    rax,QWORD PTR [rax]
  40a570:	test   rax,rax
  40a573:	jne    40a57f <flatcc_emitter_copy_buffer@@Base+0x42>
  40a575:	mov    eax,0x0
  40a57a:	jmp    40a66d <flatcc_emitter_copy_buffer@@Base+0x130>
  40a57f:	mov    rax,QWORD PTR [rbp-0x18]
  40a583:	mov    rdx,QWORD PTR [rax]
  40a586:	mov    rax,QWORD PTR [rbp-0x18]
  40a58a:	mov    rax,QWORD PTR [rax+0x8]
  40a58e:	cmp    rdx,rax
  40a591:	jne    40a5bb <flatcc_emitter_copy_buffer@@Base+0x7e>
  40a593:	mov    rax,QWORD PTR [rbp-0x18]
  40a597:	mov    rdx,QWORD PTR [rax+0x30]
  40a59b:	mov    rax,QWORD PTR [rbp-0x18]
  40a59f:	mov    rcx,QWORD PTR [rax+0x10]
  40a5a3:	mov    rax,QWORD PTR [rbp-0x20]
  40a5a7:	mov    rsi,rcx
  40a5aa:	mov    rdi,rax
  40a5ad:	call   403100 <memcpy@plt>
  40a5b2:	mov    rax,QWORD PTR [rbp-0x20]
  40a5b6:	jmp    40a66d <flatcc_emitter_copy_buffer@@Base+0x130>
  40a5bb:	mov    rax,QWORD PTR [rbp-0x18]
  40a5bf:	mov    rax,QWORD PTR [rax+0x18]
  40a5c3:	mov    edx,0xb80
  40a5c8:	sub    rdx,rax
  40a5cb:	mov    rax,rdx
  40a5ce:	mov    QWORD PTR [rbp-0x8],rax
  40a5d2:	mov    rax,QWORD PTR [rbp-0x18]
  40a5d6:	mov    rcx,QWORD PTR [rax+0x10]
  40a5da:	mov    rdx,QWORD PTR [rbp-0x8]
  40a5de:	mov    rax,QWORD PTR [rbp-0x20]
  40a5e2:	mov    rsi,rcx
  40a5e5:	mov    rdi,rax
  40a5e8:	call   403100 <memcpy@plt>
  40a5ed:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f1:	add    QWORD PTR [rbp-0x20],rax
  40a5f5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5f9:	mov    rax,QWORD PTR [rax]
  40a5fc:	mov    rax,QWORD PTR [rax+0xb80]
  40a603:	mov    QWORD PTR [rbp-0x10],rax
  40a607:	jmp    40a638 <flatcc_emitter_copy_buffer@@Base+0xfb>
  40a609:	mov    rcx,QWORD PTR [rbp-0x10]
  40a60d:	mov    rax,QWORD PTR [rbp-0x20]
  40a611:	mov    edx,0xb80
  40a616:	mov    rsi,rcx
  40a619:	mov    rdi,rax
  40a61c:	call   403100 <memcpy@plt>
  40a621:	add    QWORD PTR [rbp-0x20],0xb80
  40a629:	mov    rax,QWORD PTR [rbp-0x10]
  40a62d:	mov    rax,QWORD PTR [rax+0xb80]
  40a634:	mov    QWORD PTR [rbp-0x10],rax
  40a638:	mov    rax,QWORD PTR [rbp-0x18]
  40a63c:	mov    rax,QWORD PTR [rax+0x8]
  40a640:	cmp    rax,QWORD PTR [rbp-0x10]
  40a644:	jne    40a609 <flatcc_emitter_copy_buffer@@Base+0xcc>
  40a646:	mov    rax,QWORD PTR [rbp-0x18]
  40a64a:	mov    rax,QWORD PTR [rax+0x28]
  40a64e:	mov    edx,0xb80
  40a653:	sub    rdx,rax
  40a656:	mov    rcx,QWORD PTR [rbp-0x10]
  40a65a:	mov    rax,QWORD PTR [rbp-0x20]
  40a65e:	mov    rsi,rcx
  40a661:	mov    rdi,rax
  40a664:	call   403100 <memcpy@plt>
  40a669:	mov    rax,QWORD PTR [rbp-0x20]
  40a66d:	leave  
  40a66e:	ret    
  40a66f:	nop

000000000040a670 <__libc_csu_init@@Base>:
  40a670:	endbr64 
  40a674:	push   r15
  40a676:	lea    r15,[rip+0x578b]        # 40fe08 <flatcc_builder_padding_base@@Base+0x47c8>
  40a67d:	push   r14
  40a67f:	mov    r14,rdx
  40a682:	push   r13
  40a684:	mov    r13,rsi
  40a687:	push   r12
  40a689:	mov    r12d,edi
  40a68c:	push   rbp
  40a68d:	lea    rbp,[rip+0x577c]        # 40fe10 <flatcc_builder_padding_base@@Base+0x47d0>
  40a694:	push   rbx
  40a695:	sub    rbp,r15
  40a698:	sub    rsp,0x8
  40a69c:	call   403000 <free@plt-0x30>
  40a6a1:	sar    rbp,0x3
  40a6a5:	je     40a6c6 <__libc_csu_init@@Base+0x56>
  40a6a7:	xor    ebx,ebx
  40a6a9:	nop    DWORD PTR [rax+0x0]
  40a6b0:	mov    rdx,r14
  40a6b3:	mov    rsi,r13
  40a6b6:	mov    edi,r12d
  40a6b9:	call   QWORD PTR [r15+rbx*8]
  40a6bd:	add    rbx,0x1
  40a6c1:	cmp    rbp,rbx
  40a6c4:	jne    40a6b0 <__libc_csu_init@@Base+0x40>
  40a6c6:	add    rsp,0x8
  40a6ca:	pop    rbx
  40a6cb:	pop    rbp
  40a6cc:	pop    r12
  40a6ce:	pop    r13
  40a6d0:	pop    r14
  40a6d2:	pop    r15
  40a6d4:	ret    
  40a6d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040a6e0 <__libc_csu_fini@@Base>:
  40a6e0:	endbr64 
  40a6e4:	ret    

Disassembly of section .fini:

000000000040a6e8 <.fini>:
  40a6e8:	endbr64 
  40a6ec:	sub    rsp,0x8
  40a6f0:	add    rsp,0x8
  40a6f4:	ret    
