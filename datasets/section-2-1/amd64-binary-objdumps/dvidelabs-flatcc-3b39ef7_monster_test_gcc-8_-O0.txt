
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x27fe1]        # 42bff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x15a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <.plt>:
  404020:	push   QWORD PTR [rip+0x27fe2]        # 42c008 <flatcc_builder_padding_base@@Base+0x9da8>
  404026:	bnd jmp QWORD PTR [rip+0x27fe3]        # 42c010 <flatcc_builder_padding_base@@Base+0x9db0>
  40402d:	nop    DWORD PTR [rax]
  404030:	endbr64 
  404034:	push   0x0
  404039:	bnd jmp 404020 <free@plt-0x150>
  40403f:	nop
  404040:	endbr64 
  404044:	push   0x1
  404049:	bnd jmp 404020 <free@plt-0x150>
  40404f:	nop
  404050:	endbr64 
  404054:	push   0x2
  404059:	bnd jmp 404020 <free@plt-0x150>
  40405f:	nop
  404060:	endbr64 
  404064:	push   0x3
  404069:	bnd jmp 404020 <free@plt-0x150>
  40406f:	nop
  404070:	endbr64 
  404074:	push   0x4
  404079:	bnd jmp 404020 <free@plt-0x150>
  40407f:	nop
  404080:	endbr64 
  404084:	push   0x5
  404089:	bnd jmp 404020 <free@plt-0x150>
  40408f:	nop
  404090:	endbr64 
  404094:	push   0x6
  404099:	bnd jmp 404020 <free@plt-0x150>
  40409f:	nop
  4040a0:	endbr64 
  4040a4:	push   0x7
  4040a9:	bnd jmp 404020 <free@plt-0x150>
  4040af:	nop
  4040b0:	endbr64 
  4040b4:	push   0x8
  4040b9:	bnd jmp 404020 <free@plt-0x150>
  4040bf:	nop
  4040c0:	endbr64 
  4040c4:	push   0x9
  4040c9:	bnd jmp 404020 <free@plt-0x150>
  4040cf:	nop
  4040d0:	endbr64 
  4040d4:	push   0xa
  4040d9:	bnd jmp 404020 <free@plt-0x150>
  4040df:	nop
  4040e0:	endbr64 
  4040e4:	push   0xb
  4040e9:	bnd jmp 404020 <free@plt-0x150>
  4040ef:	nop
  4040f0:	endbr64 
  4040f4:	push   0xc
  4040f9:	bnd jmp 404020 <free@plt-0x150>
  4040ff:	nop
  404100:	endbr64 
  404104:	push   0xd
  404109:	bnd jmp 404020 <free@plt-0x150>
  40410f:	nop
  404110:	endbr64 
  404114:	push   0xe
  404119:	bnd jmp 404020 <free@plt-0x150>
  40411f:	nop
  404120:	endbr64 
  404124:	push   0xf
  404129:	bnd jmp 404020 <free@plt-0x150>
  40412f:	nop
  404130:	endbr64 
  404134:	push   0x10
  404139:	bnd jmp 404020 <free@plt-0x150>
  40413f:	nop
  404140:	endbr64 
  404144:	push   0x11
  404149:	bnd jmp 404020 <free@plt-0x150>
  40414f:	nop
  404150:	endbr64 
  404154:	push   0x12
  404159:	bnd jmp 404020 <free@plt-0x150>
  40415f:	nop
  404160:	endbr64 
  404164:	push   0x13
  404169:	bnd jmp 404020 <free@plt-0x150>
  40416f:	nop

Disassembly of section .plt.sec:

0000000000404170 <free@plt>:
  404170:	endbr64 
  404174:	bnd jmp QWORD PTR [rip+0x27e9d]        # 42c018 <free@GLIBC_2.2.5>
  40417b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404180 <strncpy@plt>:
  404180:	endbr64 
  404184:	bnd jmp QWORD PTR [rip+0x27e95]        # 42c020 <strncpy@GLIBC_2.2.5>
  40418b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404190 <strncmp@plt>:
  404190:	endbr64 
  404194:	bnd jmp QWORD PTR [rip+0x27e8d]        # 42c028 <strncmp@GLIBC_2.2.5>
  40419b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041a0 <puts@plt>:
  4041a0:	endbr64 
  4041a4:	bnd jmp QWORD PTR [rip+0x27e85]        # 42c030 <puts@GLIBC_2.2.5>
  4041ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041b0 <strlen@plt>:
  4041b0:	endbr64 
  4041b4:	bnd jmp QWORD PTR [rip+0x27e7d]        # 42c038 <strlen@GLIBC_2.2.5>
  4041bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041c0 <__stack_chk_fail@plt>:
  4041c0:	endbr64 
  4041c4:	bnd jmp QWORD PTR [rip+0x27e75]        # 42c040 <__stack_chk_fail@GLIBC_2.4>
  4041cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041d0 <printf@plt>:
  4041d0:	endbr64 
  4041d4:	bnd jmp QWORD PTR [rip+0x27e6d]        # 42c048 <printf@GLIBC_2.2.5>
  4041db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041e0 <gettimeofday@plt>:
  4041e0:	endbr64 
  4041e4:	bnd jmp QWORD PTR [rip+0x27e65]        # 42c050 <gettimeofday@GLIBC_2.2.5>
  4041eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041f0 <__assert_fail@plt>:
  4041f0:	endbr64 
  4041f4:	bnd jmp QWORD PTR [rip+0x27e5d]        # 42c058 <__assert_fail@GLIBC_2.2.5>
  4041fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404200 <memset@plt>:
  404200:	endbr64 
  404204:	bnd jmp QWORD PTR [rip+0x27e55]        # 42c060 <memset@GLIBC_2.2.5>
  40420b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404210 <fputc@plt>:
  404210:	endbr64 
  404214:	bnd jmp QWORD PTR [rip+0x27e4d]        # 42c068 <fputc@GLIBC_2.2.5>
  40421b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404220 <memchr@plt>:
  404220:	endbr64 
  404224:	bnd jmp QWORD PTR [rip+0x27e45]        # 42c070 <memchr@GLIBC_2.2.5>
  40422b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404230 <memcmp@plt>:
  404230:	endbr64 
  404234:	bnd jmp QWORD PTR [rip+0x27e3d]        # 42c078 <memcmp@GLIBC_2.2.5>
  40423b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404240 <strcmp@plt>:
  404240:	endbr64 
  404244:	bnd jmp QWORD PTR [rip+0x27e35]        # 42c080 <strcmp@GLIBC_2.2.5>
  40424b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404250 <fprintf@plt>:
  404250:	endbr64 
  404254:	bnd jmp QWORD PTR [rip+0x27e2d]        # 42c088 <fprintf@GLIBC_2.2.5>
  40425b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404260 <memcpy@plt>:
  404260:	endbr64 
  404264:	bnd jmp QWORD PTR [rip+0x27e25]        # 42c090 <memcpy@GLIBC_2.14>
  40426b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404270 <malloc@plt>:
  404270:	endbr64 
  404274:	bnd jmp QWORD PTR [rip+0x27e1d]        # 42c098 <malloc@GLIBC_2.2.5>
  40427b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404280 <realloc@plt>:
  404280:	endbr64 
  404284:	bnd jmp QWORD PTR [rip+0x27e15]        # 42c0a0 <realloc@GLIBC_2.2.5>
  40428b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404290 <fwrite@plt>:
  404290:	endbr64 
  404294:	bnd jmp QWORD PTR [rip+0x27e0d]        # 42c0a8 <fwrite@GLIBC_2.2.5>
  40429b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042a0 <posix_memalign@plt>:
  4042a0:	endbr64 
  4042a4:	bnd jmp QWORD PTR [rip+0x27e05]        # 42c0b0 <posix_memalign@GLIBC_2.2.5>
  4042ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004042b0 <_start@@Base>:
  4042b0:	endbr64 
  4042b4:	xor    ebp,ebp
  4042b6:	mov    r9,rdx
  4042b9:	pop    rsi
  4042ba:	mov    rdx,rsp
  4042bd:	and    rsp,0xfffffffffffffff0
  4042c1:	push   rax
  4042c2:	push   rsp
  4042c3:	mov    r8,0x41d590
  4042ca:	mov    rcx,0x41d520
  4042d1:	mov    rdi,0x41512a
  4042d8:	call   QWORD PTR [rip+0x27d0a]        # 42bfe8 <__libc_start_main@GLIBC_2.2.5>
  4042de:	hlt    
  4042df:	nop
  4042e0:	endbr64 
  4042e4:	ret    
  4042e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042ef:	nop
  4042f0:	mov    eax,0x42c0d8
  4042f5:	cmp    rax,0x42c0d8
  4042fb:	je     404310 <_start@@Base+0x60>
  4042fd:	mov    eax,0x0
  404302:	test   rax,rax
  404305:	je     404310 <_start@@Base+0x60>
  404307:	mov    edi,0x42c0d8
  40430c:	jmp    rax
  40430e:	xchg   ax,ax
  404310:	ret    
  404311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40431c:	nop    DWORD PTR [rax+0x0]
  404320:	mov    esi,0x42c0d8
  404325:	sub    rsi,0x42c0d8
  40432c:	sar    rsi,0x3
  404330:	mov    rax,rsi
  404333:	shr    rax,0x3f
  404337:	add    rsi,rax
  40433a:	sar    rsi,1
  40433d:	je     404350 <_start@@Base+0xa0>
  40433f:	mov    eax,0x0
  404344:	test   rax,rax
  404347:	je     404350 <_start@@Base+0xa0>
  404349:	mov    edi,0x42c0d8
  40434e:	jmp    rax
  404350:	ret    
  404351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40435c:	nop    DWORD PTR [rax+0x0]
  404360:	endbr64 
  404364:	cmp    BYTE PTR [rip+0x27d75],0x0        # 42c0e0 <__bss_start@@Base+0x8>
  40436b:	jne    404380 <_start@@Base+0xd0>
  40436d:	push   rbp
  40436e:	mov    rbp,rsp
  404371:	call   4042f0 <_start@@Base+0x40>
  404376:	mov    BYTE PTR [rip+0x27d63],0x1        # 42c0e0 <__bss_start@@Base+0x8>
  40437d:	pop    rbp
  40437e:	ret    
  40437f:	nop
  404380:	ret    
  404381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40438c:	nop    DWORD PTR [rax+0x0]
  404390:	endbr64 
  404394:	jmp    404320 <_start@@Base+0x70>
  404396:	push   rbp
  404397:	mov    rbp,rsp
  40439a:	mov    eax,edi
  40439c:	mov    BYTE PTR [rbp-0x4],al
  40439f:	movzx  eax,BYTE PTR [rbp-0x4]
  4043a3:	pop    rbp
  4043a4:	ret    
  4043a5:	push   rbp
  4043a6:	mov    rbp,rsp
  4043a9:	mov    eax,edi
  4043ab:	mov    BYTE PTR [rbp-0x4],al
  4043ae:	movzx  eax,BYTE PTR [rbp-0x4]
  4043b2:	pop    rbp
  4043b3:	ret    
  4043b4:	push   rbp
  4043b5:	mov    rbp,rsp
  4043b8:	sub    rsp,0x8
  4043bc:	mov    QWORD PTR [rbp-0x8],rdi
  4043c0:	mov    rax,QWORD PTR [rbp-0x8]
  4043c4:	movzx  eax,BYTE PTR [rax]
  4043c7:	movzx  eax,al
  4043ca:	mov    edi,eax
  4043cc:	call   404396 <_start@@Base+0xe6>
  4043d1:	leave  
  4043d2:	ret    
  4043d3:	push   rbp
  4043d4:	mov    rbp,rsp
  4043d7:	mov    eax,edi
  4043d9:	mov    WORD PTR [rbp-0x4],ax
  4043dd:	movzx  eax,WORD PTR [rbp-0x4]
  4043e1:	pop    rbp
  4043e2:	ret    
  4043e3:	push   rbp
  4043e4:	mov    rbp,rsp
  4043e7:	mov    eax,edi
  4043e9:	mov    WORD PTR [rbp-0x4],ax
  4043ed:	movzx  eax,WORD PTR [rbp-0x4]
  4043f1:	pop    rbp
  4043f2:	ret    
  4043f3:	push   rbp
  4043f4:	mov    rbp,rsp
  4043f7:	sub    rsp,0x8
  4043fb:	mov    QWORD PTR [rbp-0x8],rdi
  4043ff:	mov    rax,QWORD PTR [rbp-0x8]
  404403:	movzx  eax,WORD PTR [rax]
  404406:	movzx  eax,ax
  404409:	mov    edi,eax
  40440b:	call   4043d3 <_start@@Base+0x123>
  404410:	leave  
  404411:	ret    
  404412:	push   rbp
  404413:	mov    rbp,rsp
  404416:	mov    DWORD PTR [rbp-0x4],edi
  404419:	mov    eax,DWORD PTR [rbp-0x4]
  40441c:	pop    rbp
  40441d:	ret    
  40441e:	push   rbp
  40441f:	mov    rbp,rsp
  404422:	mov    DWORD PTR [rbp-0x4],edi
  404425:	mov    eax,DWORD PTR [rbp-0x4]
  404428:	pop    rbp
  404429:	ret    
  40442a:	push   rbp
  40442b:	mov    rbp,rsp
  40442e:	sub    rsp,0x8
  404432:	mov    QWORD PTR [rbp-0x8],rdi
  404436:	mov    rax,QWORD PTR [rbp-0x8]
  40443a:	mov    eax,DWORD PTR [rax]
  40443c:	mov    edi,eax
  40443e:	call   404412 <_start@@Base+0x162>
  404443:	leave  
  404444:	ret    
  404445:	push   rbp
  404446:	mov    rbp,rsp
  404449:	mov    QWORD PTR [rbp-0x8],rdi
  40444d:	mov    rax,QWORD PTR [rbp-0x8]
  404451:	pop    rbp
  404452:	ret    
  404453:	push   rbp
  404454:	mov    rbp,rsp
  404457:	mov    QWORD PTR [rbp-0x8],rdi
  40445b:	mov    rax,QWORD PTR [rbp-0x8]
  40445f:	pop    rbp
  404460:	ret    
  404461:	push   rbp
  404462:	mov    rbp,rsp
  404465:	sub    rsp,0x8
  404469:	mov    QWORD PTR [rbp-0x8],rdi
  40446d:	mov    rax,QWORD PTR [rbp-0x8]
  404471:	mov    rax,QWORD PTR [rax]
  404474:	mov    rdi,rax
  404477:	call   404445 <_start@@Base+0x195>
  40447c:	leave  
  40447d:	ret    
  40447e:	push   rbp
  40447f:	mov    rbp,rsp
  404482:	mov    eax,edi
  404484:	mov    BYTE PTR [rbp-0x4],al
  404487:	movzx  eax,BYTE PTR [rbp-0x4]
  40448b:	pop    rbp
  40448c:	ret    
  40448d:	push   rbp
  40448e:	mov    rbp,rsp
  404491:	mov    eax,edi
  404493:	mov    BYTE PTR [rbp-0x4],al
  404496:	movzx  eax,BYTE PTR [rbp-0x4]
  40449a:	pop    rbp
  40449b:	ret    
  40449c:	push   rbp
  40449d:	mov    rbp,rsp
  4044a0:	sub    rsp,0x8
  4044a4:	mov    QWORD PTR [rbp-0x8],rdi
  4044a8:	mov    rax,QWORD PTR [rbp-0x8]
  4044ac:	movzx  eax,BYTE PTR [rax]
  4044af:	movsx  eax,al
  4044b2:	mov    edi,eax
  4044b4:	call   40447e <_start@@Base+0x1ce>
  4044b9:	leave  
  4044ba:	ret    
  4044bb:	push   rbp
  4044bc:	mov    rbp,rsp
  4044bf:	mov    eax,edi
  4044c1:	mov    WORD PTR [rbp-0x4],ax
  4044c5:	movzx  eax,WORD PTR [rbp-0x4]
  4044c9:	pop    rbp
  4044ca:	ret    
  4044cb:	push   rbp
  4044cc:	mov    rbp,rsp
  4044cf:	mov    eax,edi
  4044d1:	mov    WORD PTR [rbp-0x4],ax
  4044d5:	movzx  eax,WORD PTR [rbp-0x4]
  4044d9:	pop    rbp
  4044da:	ret    
  4044db:	push   rbp
  4044dc:	mov    rbp,rsp
  4044df:	sub    rsp,0x8
  4044e3:	mov    QWORD PTR [rbp-0x8],rdi
  4044e7:	mov    rax,QWORD PTR [rbp-0x8]
  4044eb:	movzx  eax,WORD PTR [rax]
  4044ee:	cwde   
  4044ef:	mov    edi,eax
  4044f1:	call   4044bb <_start@@Base+0x20b>
  4044f6:	leave  
  4044f7:	ret    
  4044f8:	push   rbp
  4044f9:	mov    rbp,rsp
  4044fc:	mov    DWORD PTR [rbp-0x4],edi
  4044ff:	mov    eax,DWORD PTR [rbp-0x4]
  404502:	pop    rbp
  404503:	ret    
  404504:	push   rbp
  404505:	mov    rbp,rsp
  404508:	mov    DWORD PTR [rbp-0x4],edi
  40450b:	mov    eax,DWORD PTR [rbp-0x4]
  40450e:	pop    rbp
  40450f:	ret    
  404510:	push   rbp
  404511:	mov    rbp,rsp
  404514:	sub    rsp,0x8
  404518:	mov    QWORD PTR [rbp-0x8],rdi
  40451c:	mov    rax,QWORD PTR [rbp-0x8]
  404520:	mov    eax,DWORD PTR [rax]
  404522:	mov    edi,eax
  404524:	call   4044f8 <_start@@Base+0x248>
  404529:	leave  
  40452a:	ret    
  40452b:	push   rbp
  40452c:	mov    rbp,rsp
  40452f:	mov    QWORD PTR [rbp-0x8],rdi
  404533:	mov    rax,QWORD PTR [rbp-0x8]
  404537:	pop    rbp
  404538:	ret    
  404539:	push   rbp
  40453a:	mov    rbp,rsp
  40453d:	mov    QWORD PTR [rbp-0x8],rdi
  404541:	mov    rax,QWORD PTR [rbp-0x8]
  404545:	pop    rbp
  404546:	ret    
  404547:	push   rbp
  404548:	mov    rbp,rsp
  40454b:	sub    rsp,0x8
  40454f:	mov    QWORD PTR [rbp-0x8],rdi
  404553:	mov    rax,QWORD PTR [rbp-0x8]
  404557:	mov    rax,QWORD PTR [rax]
  40455a:	mov    rdi,rax
  40455d:	call   40452b <_start@@Base+0x27b>
  404562:	leave  
  404563:	ret    
  404564:	push   rbp
  404565:	mov    rbp,rsp
  404568:	vmovss DWORD PTR [rbp-0x14],xmm0
  40456d:	vmovss xmm0,DWORD PTR [rbp-0x14]
  404572:	vmovss DWORD PTR [rbp-0x4],xmm0
  404577:	mov    eax,DWORD PTR [rbp-0x4]
  40457a:	mov    DWORD PTR [rbp-0x4],eax
  40457d:	vmovss xmm0,DWORD PTR [rbp-0x4]
  404582:	pop    rbp
  404583:	ret    
  404584:	push   rbp
  404585:	mov    rbp,rsp
  404588:	vmovss DWORD PTR [rbp-0x14],xmm0
  40458d:	vmovss xmm0,DWORD PTR [rbp-0x14]
  404592:	vmovss DWORD PTR [rbp-0x4],xmm0
  404597:	mov    eax,DWORD PTR [rbp-0x4]
  40459a:	mov    DWORD PTR [rbp-0x4],eax
  40459d:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4045a2:	pop    rbp
  4045a3:	ret    
  4045a4:	push   rbp
  4045a5:	mov    rbp,rsp
  4045a8:	sub    rsp,0x8
  4045ac:	mov    QWORD PTR [rbp-0x8],rdi
  4045b0:	mov    rax,QWORD PTR [rbp-0x8]
  4045b4:	mov    eax,DWORD PTR [rax]
  4045b6:	vmovd  xmm0,eax
  4045ba:	call   404564 <_start@@Base+0x2b4>
  4045bf:	leave  
  4045c0:	ret    
  4045c1:	push   rbp
  4045c2:	mov    rbp,rsp
  4045c5:	vmovsd QWORD PTR [rbp-0x18],xmm0
  4045ca:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4045cf:	vmovsd QWORD PTR [rbp-0x8],xmm0
  4045d4:	mov    rax,QWORD PTR [rbp-0x8]
  4045d8:	mov    QWORD PTR [rbp-0x8],rax
  4045dc:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4045e1:	vmovq  rax,xmm0
  4045e6:	vmovq  xmm0,rax
  4045eb:	pop    rbp
  4045ec:	ret    
  4045ed:	push   rbp
  4045ee:	mov    rbp,rsp
  4045f1:	vmovsd QWORD PTR [rbp-0x18],xmm0
  4045f6:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4045fb:	vmovsd QWORD PTR [rbp-0x8],xmm0
  404600:	mov    rax,QWORD PTR [rbp-0x8]
  404604:	mov    QWORD PTR [rbp-0x8],rax
  404608:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40460d:	vmovq  rax,xmm0
  404612:	vmovq  xmm0,rax
  404617:	pop    rbp
  404618:	ret    
  404619:	push   rbp
  40461a:	mov    rbp,rsp
  40461d:	sub    rsp,0x8
  404621:	mov    QWORD PTR [rbp-0x8],rdi
  404625:	mov    rax,QWORD PTR [rbp-0x8]
  404629:	mov    rax,QWORD PTR [rax]
  40462c:	vmovq  xmm0,rax
  404631:	call   4045c1 <_start@@Base+0x311>
  404636:	vmovq  rax,xmm0
  40463b:	vmovq  xmm0,rax
  404640:	leave  
  404641:	ret    
  404642:	push   rbp
  404643:	mov    rbp,rsp
  404646:	mov    eax,edi
  404648:	mov    BYTE PTR [rbp-0x4],al
  40464b:	movzx  eax,BYTE PTR [rbp-0x4]
  40464f:	pop    rbp
  404650:	ret    
  404651:	push   rbp
  404652:	mov    rbp,rsp
  404655:	mov    eax,edi
  404657:	mov    BYTE PTR [rbp-0x4],al
  40465a:	movzx  eax,BYTE PTR [rbp-0x4]
  40465e:	pop    rbp
  40465f:	ret    
  404660:	push   rbp
  404661:	mov    rbp,rsp
  404664:	mov    QWORD PTR [rbp-0x8],rdi
  404668:	mov    QWORD PTR [rbp-0x10],rsi
  40466c:	mov    rdx,QWORD PTR [rbp-0x8]
  404670:	mov    rax,QWORD PTR [rbp-0x10]
  404674:	add    rax,rdx
  404677:	pop    rbp
  404678:	ret    
  404679:	push   rbp
  40467a:	mov    rbp,rsp
  40467d:	sub    rsp,0x8
  404681:	mov    QWORD PTR [rbp-0x8],rdi
  404685:	mov    rax,QWORD PTR [rbp-0x8]
  404689:	movzx  eax,BYTE PTR [rax]
  40468c:	movzx  eax,al
  40468f:	mov    edi,eax
  404691:	call   404642 <_start@@Base+0x392>
  404696:	leave  
  404697:	ret    
  404698:	push   rbp
  404699:	mov    rbp,rsp
  40469c:	mov    eax,edi
  40469e:	mov    BYTE PTR [rbp-0x4],al
  4046a1:	movzx  eax,BYTE PTR [rbp-0x4]
  4046a5:	pop    rbp
  4046a6:	ret    
  4046a7:	push   rbp
  4046a8:	mov    rbp,rsp
  4046ab:	sub    rsp,0x8
  4046af:	mov    QWORD PTR [rbp-0x8],rdi
  4046b3:	mov    rax,QWORD PTR [rbp-0x8]
  4046b7:	movzx  eax,BYTE PTR [rax]
  4046ba:	movzx  eax,al
  4046bd:	mov    edi,eax
  4046bf:	call   404698 <_start@@Base+0x3e8>
  4046c4:	leave  
  4046c5:	ret    
  4046c6:	push   rbp
  4046c7:	mov    rbp,rsp
  4046ca:	mov    DWORD PTR [rbp-0x4],edi
  4046cd:	mov    eax,DWORD PTR [rbp-0x4]
  4046d0:	pop    rbp
  4046d1:	ret    
  4046d2:	push   rbp
  4046d3:	mov    rbp,rsp
  4046d6:	mov    DWORD PTR [rbp-0x4],edi
  4046d9:	mov    eax,DWORD PTR [rbp-0x4]
  4046dc:	pop    rbp
  4046dd:	ret    
  4046de:	push   rbp
  4046df:	mov    rbp,rsp
  4046e2:	mov    eax,0x4
  4046e7:	pop    rbp
  4046e8:	ret    
  4046e9:	push   rbp
  4046ea:	mov    rbp,rsp
  4046ed:	sub    rsp,0x8
  4046f1:	mov    QWORD PTR [rbp-0x8],rdi
  4046f5:	mov    rax,QWORD PTR [rbp-0x8]
  4046f9:	mov    eax,DWORD PTR [rax]
  4046fb:	mov    edi,eax
  4046fd:	call   4046c6 <_start@@Base+0x416>
  404702:	leave  
  404703:	ret    
  404704:	push   rbp
  404705:	mov    rbp,rsp
  404708:	sub    rsp,0x10
  40470c:	mov    QWORD PTR [rbp-0x8],rdi
  404710:	mov    DWORD PTR [rbp-0xc],esi
  404713:	mov    eax,DWORD PTR [rbp-0xc]
  404716:	mov    edi,eax
  404718:	call   4046d2 <_start@@Base+0x422>
  40471d:	mov    edx,eax
  40471f:	mov    rax,QWORD PTR [rbp-0x8]
  404723:	mov    DWORD PTR [rax],edx
  404725:	nop
  404726:	leave  
  404727:	ret    
  404728:	push   rbp
  404729:	mov    rbp,rsp
  40472c:	mov    DWORD PTR [rbp-0x4],edi
  40472f:	mov    eax,DWORD PTR [rbp-0x4]
  404732:	pop    rbp
  404733:	ret    
  404734:	push   rbp
  404735:	mov    rbp,rsp
  404738:	sub    rsp,0x8
  40473c:	mov    QWORD PTR [rbp-0x8],rdi
  404740:	mov    rax,QWORD PTR [rbp-0x8]
  404744:	mov    eax,DWORD PTR [rax]
  404746:	mov    edi,eax
  404748:	call   404728 <_start@@Base+0x478>
  40474d:	leave  
  40474e:	ret    
  40474f:	push   rbp
  404750:	mov    rbp,rsp
  404753:	mov    eax,edi
  404755:	mov    WORD PTR [rbp-0x4],ax
  404759:	movzx  eax,WORD PTR [rbp-0x4]
  40475d:	pop    rbp
  40475e:	ret    
  40475f:	push   rbp
  404760:	mov    rbp,rsp
  404763:	sub    rsp,0x8
  404767:	mov    QWORD PTR [rbp-0x8],rdi
  40476b:	mov    rax,QWORD PTR [rbp-0x8]
  40476f:	movzx  eax,WORD PTR [rax]
  404772:	movzx  eax,ax
  404775:	mov    edi,eax
  404777:	call   40474f <_start@@Base+0x49f>
  40477c:	leave  
  40477d:	ret    
  40477e:	push   rbp
  40477f:	mov    rbp,rsp
  404782:	mov    eax,edi
  404784:	mov    BYTE PTR [rbp-0x4],al
  404787:	movzx  eax,BYTE PTR [rbp-0x4]
  40478b:	pop    rbp
  40478c:	ret    
  40478d:	push   rbp
  40478e:	mov    rbp,rsp
  404791:	sub    rsp,0x8
  404795:	mov    QWORD PTR [rbp-0x8],rdi
  404799:	mov    rax,QWORD PTR [rbp-0x8]
  40479d:	movzx  eax,BYTE PTR [rax]
  4047a0:	movzx  eax,al
  4047a3:	mov    edi,eax
  4047a5:	call   40477e <_start@@Base+0x4ce>
  4047aa:	leave  
  4047ab:	ret    
  4047ac:	push   rbp
  4047ad:	mov    rbp,rsp
  4047b0:	mov    DWORD PTR [rbp-0x4],edi
  4047b3:	mov    eax,DWORD PTR [rbp-0x4]
  4047b6:	pop    rbp
  4047b7:	ret    
  4047b8:	push   rbp
  4047b9:	mov    rbp,rsp
  4047bc:	mov    DWORD PTR [rbp-0x4],edi
  4047bf:	mov    eax,DWORD PTR [rbp-0x4]
  4047c2:	pop    rbp
  4047c3:	ret    
  4047c4:	push   rbp
  4047c5:	mov    rbp,rsp
  4047c8:	sub    rsp,0x8
  4047cc:	mov    QWORD PTR [rbp-0x8],rdi
  4047d0:	mov    rax,QWORD PTR [rbp-0x8]
  4047d4:	mov    eax,DWORD PTR [rax]
  4047d6:	mov    edi,eax
  4047d8:	call   4047ac <_start@@Base+0x4fc>
  4047dd:	leave  
  4047de:	ret    
  4047df:	push   rbp
  4047e0:	mov    rbp,rsp
  4047e3:	mov    QWORD PTR [rbp-0x18],rdi
  4047e7:	mov    DWORD PTR [rbp-0x4],0x811c9dc5
  4047ee:	jmp    40480d <_start@@Base+0x55d>
  4047f0:	mov    rax,QWORD PTR [rbp-0x18]
  4047f4:	movzx  eax,BYTE PTR [rax]
  4047f7:	movsx  eax,al
  4047fa:	xor    DWORD PTR [rbp-0x4],eax
  4047fd:	mov    eax,DWORD PTR [rbp-0x4]
  404800:	imul   eax,eax,0x1000193
  404806:	mov    DWORD PTR [rbp-0x4],eax
  404809:	inc    QWORD PTR [rbp-0x18]
  40480d:	mov    rax,QWORD PTR [rbp-0x18]
  404811:	movzx  eax,BYTE PTR [rax]
  404814:	test   al,al
  404816:	jne    4047f0 <_start@@Base+0x540>
  404818:	cmp    DWORD PTR [rbp-0x4],0x0
  40481c:	jne    404825 <_start@@Base+0x575>
  40481e:	mov    DWORD PTR [rbp-0x4],0x811c9dc5
  404825:	mov    eax,DWORD PTR [rbp-0x4]
  404828:	pop    rbp
  404829:	ret    
  40482a:	push   rbp
  40482b:	mov    rbp,rsp
  40482e:	mov    DWORD PTR [rbp-0x4],edi
  404831:	mov    QWORD PTR [rbp-0x10],rsi
  404835:	mov    eax,DWORD PTR [rbp-0x4]
  404838:	mov    edx,eax
  40483a:	mov    rax,QWORD PTR [rbp-0x10]
  40483e:	mov    BYTE PTR [rax],dl
  404840:	shr    DWORD PTR [rbp-0x4],0x8
  404844:	mov    rax,QWORD PTR [rbp-0x10]
  404848:	lea    rdx,[rax+0x1]
  40484c:	mov    eax,DWORD PTR [rbp-0x4]
  40484f:	mov    BYTE PTR [rdx],al
  404851:	shr    DWORD PTR [rbp-0x4],0x8
  404855:	mov    rax,QWORD PTR [rbp-0x10]
  404859:	lea    rdx,[rax+0x2]
  40485d:	mov    eax,DWORD PTR [rbp-0x4]
  404860:	mov    BYTE PTR [rdx],al
  404862:	shr    DWORD PTR [rbp-0x4],0x8
  404866:	mov    rax,QWORD PTR [rbp-0x10]
  40486a:	lea    rdx,[rax+0x3]
  40486e:	mov    eax,DWORD PTR [rbp-0x4]
  404871:	mov    BYTE PTR [rdx],al
  404873:	nop
  404874:	pop    rbp
  404875:	ret    
  404876:	push   rbp
  404877:	mov    rbp,rsp
  40487a:	sub    rsp,0x8
  40487e:	mov    QWORD PTR [rbp-0x8],rdi
  404882:	cmp    QWORD PTR [rbp-0x8],0x0
  404887:	je     40489d <_start@@Base+0x5ed>
  404889:	mov    rax,QWORD PTR [rbp-0x8]
  40488d:	sub    rax,0x4
  404891:	mov    rdi,rax
  404894:	call   4046e9 <_start@@Base+0x439>
  404899:	mov    eax,eax
  40489b:	jmp    4048a2 <_start@@Base+0x5f2>
  40489d:	mov    eax,0x0
  4048a2:	leave  
  4048a3:	ret    
  4048a4:	push   rbp
  4048a5:	mov    rbp,rsp
  4048a8:	sub    rsp,0x8
  4048ac:	mov    QWORD PTR [rbp-0x8],rdi
  4048b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4048b5:	je     4048cb <_start@@Base+0x61b>
  4048b7:	mov    rax,QWORD PTR [rbp-0x8]
  4048bb:	sub    rax,0x4
  4048bf:	mov    rdi,rax
  4048c2:	call   4046e9 <_start@@Base+0x439>
  4048c7:	mov    eax,eax
  4048c9:	jmp    4048d0 <_start@@Base+0x620>
  4048cb:	mov    eax,0x0
  4048d0:	leave  
  4048d1:	ret    
  4048d2:	push   rbp
  4048d3:	mov    rbp,rsp
  4048d6:	sub    rsp,0x8
  4048da:	mov    QWORD PTR [rbp-0x8],rdi
  4048de:	cmp    QWORD PTR [rbp-0x8],0x0
  4048e3:	je     4048f9 <_start@@Base+0x649>
  4048e5:	mov    rax,QWORD PTR [rbp-0x8]
  4048e9:	sub    rax,0x4
  4048ed:	mov    rdi,rax
  4048f0:	call   4046e9 <_start@@Base+0x439>
  4048f5:	mov    eax,eax
  4048f7:	jmp    4048fe <_start@@Base+0x64e>
  4048f9:	mov    eax,0x0
  4048fe:	leave  
  4048ff:	ret    
  404900:	push   rbp
  404901:	mov    rbp,rsp
  404904:	sub    rsp,0x20
  404908:	mov    QWORD PTR [rbp-0x18],rdi
  40490c:	mov    QWORD PTR [rbp-0x20],rsi
  404910:	mov    rax,QWORD PTR [rbp-0x20]
  404914:	lea    rdx,[rax*4+0x0]
  40491c:	mov    rax,QWORD PTR [rbp-0x18]
  404920:	add    rax,rdx
  404923:	mov    QWORD PTR [rbp-0x8],rax
  404927:	mov    rax,QWORD PTR [rbp-0x18]
  40492b:	mov    rdi,rax
  40492e:	call   404876 <_start@@Base+0x5c6>
  404933:	cmp    QWORD PTR [rbp-0x20],rax
  404937:	jb     404958 <_start@@Base+0x6a8>
  404939:	lea    rcx,[rip+0x1ced0]        # 421810 <_IO_stdin_used@@Base+0x3810>
  404940:	mov    edx,0x6c
  404945:	lea    rsi,[rip+0x196dc]        # 41e028 <_IO_stdin_used@@Base+0x28>
  40494c:	lea    rdi,[rip+0x1975d]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  404953:	call   4041f0 <__assert_fail@plt>
  404958:	mov    rax,QWORD PTR [rbp-0x8]
  40495c:	mov    rdi,rax
  40495f:	call   4046e9 <_start@@Base+0x439>
  404964:	mov    eax,eax
  404966:	lea    rdx,[rax+0x4]
  40496a:	mov    rax,QWORD PTR [rbp-0x8]
  40496e:	add    rax,rdx
  404971:	leave  
  404972:	ret    
  404973:	push   rbp
  404974:	mov    rbp,rsp
  404977:	sub    rsp,0x8
  40497b:	mov    QWORD PTR [rbp-0x8],rdi
  40497f:	cmp    QWORD PTR [rbp-0x8],0x0
  404984:	je     40499c <_start@@Base+0x6ec>
  404986:	mov    eax,0x0
  40498b:	call   4046de <_start@@Base+0x42e>
  404990:	mov    rdx,rax
  404993:	mov    rax,QWORD PTR [rbp-0x8]
  404997:	add    rax,rdx
  40499a:	jmp    4049a1 <_start@@Base+0x6f1>
  40499c:	mov    eax,0x0
  4049a1:	leave  
  4049a2:	ret    
  4049a3:	push   rbp
  4049a4:	mov    rbp,rsp
  4049a7:	sub    rsp,0x20
  4049ab:	mov    QWORD PTR [rbp-0x18],rdi
  4049af:	mov    QWORD PTR [rbp-0x20],rsi
  4049b3:	mov    rax,QWORD PTR [rbp-0x20]
  4049b7:	lea    rdx,[rax*4+0x0]
  4049bf:	mov    rax,QWORD PTR [rbp-0x18]
  4049c3:	add    rax,rdx
  4049c6:	mov    QWORD PTR [rbp-0x8],rax
  4049ca:	mov    rax,QWORD PTR [rbp-0x18]
  4049ce:	mov    rdi,rax
  4049d1:	call   404876 <_start@@Base+0x5c6>
  4049d6:	cmp    QWORD PTR [rbp-0x20],rax
  4049da:	jb     4049fb <_start@@Base+0x74b>
  4049dc:	lea    rcx,[rip+0x1d31d]        # 421d00 <_IO_stdin_used@@Base+0x3d00>
  4049e3:	mov    edx,0x75
  4049e8:	lea    rsi,[rip+0x19639]        # 41e028 <_IO_stdin_used@@Base+0x28>
  4049ef:	lea    rdi,[rip+0x196ba]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  4049f6:	call   4041f0 <__assert_fail@plt>
  4049fb:	mov    rax,QWORD PTR [rbp-0x8]
  4049ff:	mov    rdi,rax
  404a02:	call   4046e9 <_start@@Base+0x439>
  404a07:	mov    edx,eax
  404a09:	mov    rax,QWORD PTR [rbp-0x8]
  404a0d:	add    rax,rdx
  404a10:	leave  
  404a11:	ret    
  404a12:	push   rbp
  404a13:	mov    rbp,rsp
  404a16:	sub    rsp,0x20
  404a1a:	mov    QWORD PTR [rbp-0x18],rdi
  404a1e:	mov    QWORD PTR [rbp-0x20],rsi
  404a22:	mov    rax,QWORD PTR [rbp-0x20]
  404a26:	lea    rdx,[rax*4+0x0]
  404a2e:	mov    rax,QWORD PTR [rbp-0x18]
  404a32:	add    rax,rdx
  404a35:	mov    QWORD PTR [rbp-0x8],rax
  404a39:	mov    rax,QWORD PTR [rbp-0x18]
  404a3d:	mov    rdi,rax
  404a40:	call   404876 <_start@@Base+0x5c6>
  404a45:	cmp    QWORD PTR [rbp-0x20],rax
  404a49:	jb     404a6a <_start@@Base+0x7ba>
  404a4b:	lea    rcx,[rip+0x1d60e]        # 422060 <_IO_stdin_used@@Base+0x4060>
  404a52:	mov    edx,0x77
  404a57:	lea    rsi,[rip+0x195ca]        # 41e028 <_IO_stdin_used@@Base+0x28>
  404a5e:	lea    rdi,[rip+0x1964b]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  404a65:	call   4041f0 <__assert_fail@plt>
  404a6a:	mov    rax,QWORD PTR [rbp-0x8]
  404a6e:	mov    rdi,rax
  404a71:	call   4046e9 <_start@@Base+0x439>
  404a76:	mov    eax,eax
  404a78:	lea    rdx,[rax+0x4]
  404a7c:	mov    rax,QWORD PTR [rbp-0x8]
  404a80:	add    rax,rdx
  404a83:	leave  
  404a84:	ret    
  404a85:	push   rbp
  404a86:	mov    rbp,rsp
  404a89:	sub    rsp,0x10
  404a8d:	mov    eax,edi
  404a8f:	mov    rcx,rsi
  404a92:	mov    rdx,rcx
  404a95:	mov    QWORD PTR [rbp-0x10],rax
  404a99:	mov    QWORD PTR [rbp-0x8],rdx
  404a9d:	mov    rax,QWORD PTR [rbp-0x8]
  404aa1:	mov    rdi,rax
  404aa4:	call   404973 <_start@@Base+0x6c3>
  404aa9:	leave  
  404aaa:	ret    
  404aab:	push   rbp
  404aac:	mov    rbp,rsp
  404aaf:	sub    rsp,0x30
  404ab3:	mov    QWORD PTR [rbp-0x18],rdi
  404ab7:	mov    QWORD PTR [rbp-0x20],rsi
  404abb:	mov    QWORD PTR [rbp-0x28],rdx
  404abf:	mov    rax,QWORD PTR [rbp-0x18]
  404ac3:	mov    rdi,rax
  404ac6:	call   4048a4 <_start@@Base+0x5f4>
  404acb:	mov    QWORD PTR [rbp-0x8],rax
  404acf:	mov    rax,QWORD PTR [rbp-0x8]
  404ad3:	cmp    QWORD PTR [rbp-0x28],rax
  404ad7:	cmovbe rax,QWORD PTR [rbp-0x28]
  404adc:	mov    rdx,rax
  404adf:	mov    rcx,QWORD PTR [rbp-0x20]
  404ae3:	mov    rax,QWORD PTR [rbp-0x18]
  404ae7:	mov    rsi,rcx
  404aea:	mov    rdi,rax
  404aed:	call   404190 <strncmp@plt>
  404af2:	mov    DWORD PTR [rbp-0xc],eax
  404af5:	cmp    DWORD PTR [rbp-0xc],0x0
  404af9:	jne    404b1c <_start@@Base+0x86c>
  404afb:	mov    rax,QWORD PTR [rbp-0x8]
  404aff:	cmp    rax,QWORD PTR [rbp-0x28]
  404b03:	jb     404b15 <_start@@Base+0x865>
  404b05:	mov    rax,QWORD PTR [rbp-0x8]
  404b09:	cmp    rax,QWORD PTR [rbp-0x28]
  404b0d:	seta   al
  404b10:	movzx  eax,al
  404b13:	jmp    404b1f <_start@@Base+0x86f>
  404b15:	mov    eax,0xffffffff
  404b1a:	jmp    404b1f <_start@@Base+0x86f>
  404b1c:	mov    eax,DWORD PTR [rbp-0xc]
  404b1f:	leave  
  404b20:	ret    
  404b21:	push   rbp
  404b22:	mov    rbp,rsp
  404b25:	sub    rsp,0x20
  404b29:	mov    QWORD PTR [rbp-0x8],rdi
  404b2d:	mov    QWORD PTR [rbp-0x10],rsi
  404b31:	mov    QWORD PTR [rbp-0x18],rdx
  404b35:	mov    rdx,QWORD PTR [rbp-0x10]
  404b39:	mov    rax,QWORD PTR [rbp-0x8]
  404b3d:	mov    rsi,rdx
  404b40:	mov    rdi,rax
  404b43:	call   404240 <strcmp@plt>
  404b48:	leave  
  404b49:	ret    
  404b4a:	push   rbp
  404b4b:	mov    rbp,rsp
  404b4e:	sub    rsp,0x8
  404b52:	mov    QWORD PTR [rbp-0x8],rdi
  404b56:	mov    rax,QWORD PTR [rbp-0x8]
  404b5a:	mov    rdi,rax
  404b5d:	call   404876 <_start@@Base+0x5c6>
  404b62:	leave  
  404b63:	ret    
  404b64:	push   rbp
  404b65:	mov    rbp,rsp
  404b68:	sub    rsp,0x10
  404b6c:	mov    QWORD PTR [rbp-0x8],rdi
  404b70:	mov    QWORD PTR [rbp-0x10],rsi
  404b74:	mov    rax,QWORD PTR [rbp-0x8]
  404b78:	mov    rdi,rax
  404b7b:	call   404876 <_start@@Base+0x5c6>
  404b80:	cmp    QWORD PTR [rbp-0x10],rax
  404b84:	jb     404ba5 <_start@@Base+0x8f5>
  404b86:	lea    rcx,[rip+0x1cd23]        # 4218b0 <_IO_stdin_used@@Base+0x38b0>
  404b8d:	mov    edx,0x18a
  404b92:	lea    rsi,[rip+0x1948f]        # 41e028 <_IO_stdin_used@@Base+0x28>
  404b99:	lea    rdi,[rip+0x19510]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  404ba0:	call   4041f0 <__assert_fail@plt>
  404ba5:	mov    rdx,QWORD PTR [rbp-0x8]
  404ba9:	mov    rax,QWORD PTR [rbp-0x10]
  404bad:	add    rax,rdx
  404bb0:	mov    rdi,rax
  404bb3:	call   404679 <_start@@Base+0x3c9>
  404bb8:	leave  
  404bb9:	ret    
  404bba:	push   rbp
  404bbb:	mov    rbp,rsp
  404bbe:	sub    rsp,0x8
  404bc2:	mov    QWORD PTR [rbp-0x8],rdi
  404bc6:	mov    rax,QWORD PTR [rbp-0x8]
  404bca:	mov    rdi,rax
  404bcd:	call   404876 <_start@@Base+0x5c6>
  404bd2:	leave  
  404bd3:	ret    
  404bd4:	push   rbp
  404bd5:	mov    rbp,rsp
  404bd8:	sub    rsp,0x10
  404bdc:	mov    QWORD PTR [rbp-0x8],rdi
  404be0:	mov    QWORD PTR [rbp-0x10],rsi
  404be4:	mov    rax,QWORD PTR [rbp-0x8]
  404be8:	mov    rdi,rax
  404beb:	call   404876 <_start@@Base+0x5c6>
  404bf0:	cmp    QWORD PTR [rbp-0x10],rax
  404bf4:	jb     404c15 <_start@@Base+0x965>
  404bf6:	lea    rcx,[rip+0x1cb13]        # 421710 <_IO_stdin_used@@Base+0x3710>
  404bfd:	mov    edx,0x18b
  404c02:	lea    rsi,[rip+0x1941f]        # 41e028 <_IO_stdin_used@@Base+0x28>
  404c09:	lea    rdi,[rip+0x194a0]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  404c10:	call   4041f0 <__assert_fail@plt>
  404c15:	mov    rdx,QWORD PTR [rbp-0x8]
  404c19:	mov    rax,QWORD PTR [rbp-0x10]
  404c1d:	add    rax,rdx
  404c20:	mov    rdi,rax
  404c23:	call   4043b4 <_start@@Base+0x104>
  404c28:	leave  
  404c29:	ret    
  404c2a:	push   rbp
  404c2b:	mov    rbp,rsp
  404c2e:	sub    rsp,0x30
  404c32:	mov    QWORD PTR [rbp-0x28],rdi
  404c36:	mov    eax,esi
  404c38:	mov    BYTE PTR [rbp-0x2c],al
  404c3b:	mov    QWORD PTR [rbp-0x18],0x0
  404c43:	mov    rax,QWORD PTR [rbp-0x28]
  404c47:	mov    rdi,rax
  404c4a:	call   404bba <_start@@Base+0x90a>
  404c4f:	mov    QWORD PTR [rbp-0x10],rax
  404c53:	cmp    QWORD PTR [rbp-0x10],0x0
  404c58:	jne    404c66 <_start@@Base+0x9b6>
  404c5a:	mov    rax,QWORD PTR [rip+0x27467]        # 42c0c8 <__data_start@@Base+0x10>
  404c61:	jmp    404d02 <_start@@Base+0xa52>
  404c66:	dec    QWORD PTR [rbp-0x10]
  404c6a:	jmp    404cb9 <_start@@Base+0xa09>
  404c6c:	mov    rax,QWORD PTR [rbp-0x10]
  404c70:	sub    rax,QWORD PTR [rbp-0x18]
  404c74:	shr    rax,1
  404c77:	mov    rdx,rax
  404c7a:	mov    rax,QWORD PTR [rbp-0x18]
  404c7e:	add    rax,rdx
  404c81:	mov    QWORD PTR [rbp-0x8],rax
  404c85:	mov    rdx,QWORD PTR [rbp-0x8]
  404c89:	mov    rax,QWORD PTR [rbp-0x28]
  404c8d:	mov    rsi,rdx
  404c90:	mov    rdi,rax
  404c93:	call   404bd4 <_start@@Base+0x924>
  404c98:	mov    BYTE PTR [rbp-0x19],al
  404c9b:	movzx  eax,BYTE PTR [rbp-0x19]
  404c9f:	cmp    al,BYTE PTR [rbp-0x2c]
  404ca2:	jae    404cb1 <_start@@Base+0xa01>
  404ca4:	mov    rax,QWORD PTR [rbp-0x8]
  404ca8:	inc    rax
  404cab:	mov    QWORD PTR [rbp-0x18],rax
  404caf:	jmp    404cb9 <_start@@Base+0xa09>
  404cb1:	mov    rax,QWORD PTR [rbp-0x8]
  404cb5:	mov    QWORD PTR [rbp-0x10],rax
  404cb9:	mov    rax,QWORD PTR [rbp-0x18]
  404cbd:	cmp    rax,QWORD PTR [rbp-0x10]
  404cc1:	jb     404c6c <_start@@Base+0x9bc>
  404cc3:	mov    rax,QWORD PTR [rbp-0x18]
  404cc7:	cmp    rax,QWORD PTR [rbp-0x10]
  404ccb:	jne    404cfb <_start@@Base+0xa4b>
  404ccd:	mov    rdx,QWORD PTR [rbp-0x18]
  404cd1:	mov    rax,QWORD PTR [rbp-0x28]
  404cd5:	mov    rsi,rdx
  404cd8:	mov    rdi,rax
  404cdb:	call   404bd4 <_start@@Base+0x924>
  404ce0:	mov    BYTE PTR [rbp-0x19],al
  404ce3:	movzx  eax,BYTE PTR [rbp-0x19]
  404ce7:	cmp    al,BYTE PTR [rbp-0x2c]
  404cea:	jb     404cfb <_start@@Base+0xa4b>
  404cec:	movzx  eax,BYTE PTR [rbp-0x19]
  404cf0:	cmp    al,BYTE PTR [rbp-0x2c]
  404cf3:	ja     404cfb <_start@@Base+0xa4b>
  404cf5:	mov    rax,QWORD PTR [rbp-0x18]
  404cf9:	jmp    404d02 <_start@@Base+0xa52>
  404cfb:	mov    rax,QWORD PTR [rip+0x273c6]        # 42c0c8 <__data_start@@Base+0x10>
  404d02:	leave  
  404d03:	ret    
  404d04:	push   rbp
  404d05:	mov    rbp,rsp
  404d08:	sub    rsp,0x20
  404d0c:	mov    QWORD PTR [rbp-0x18],rdi
  404d10:	mov    eax,esi
  404d12:	mov    BYTE PTR [rbp-0x1c],al
  404d15:	mov    QWORD PTR [rbp-0x8],0x0
  404d1d:	jmp    404d51 <_start@@Base+0xaa1>
  404d1f:	mov    rdx,QWORD PTR [rbp-0x8]
  404d23:	mov    rax,QWORD PTR [rbp-0x18]
  404d27:	mov    rsi,rdx
  404d2a:	mov    rdi,rax
  404d2d:	call   404bd4 <_start@@Base+0x924>
  404d32:	mov    BYTE PTR [rbp-0x9],al
  404d35:	movzx  eax,BYTE PTR [rbp-0x9]
  404d39:	cmp    al,BYTE PTR [rbp-0x1c]
  404d3c:	jb     404d4d <_start@@Base+0xa9d>
  404d3e:	movzx  eax,BYTE PTR [rbp-0x9]
  404d42:	cmp    al,BYTE PTR [rbp-0x1c]
  404d45:	ja     404d4d <_start@@Base+0xa9d>
  404d47:	mov    rax,QWORD PTR [rbp-0x8]
  404d4b:	jmp    404d6a <_start@@Base+0xaba>
  404d4d:	inc    QWORD PTR [rbp-0x8]
  404d51:	mov    rax,QWORD PTR [rbp-0x18]
  404d55:	mov    rdi,rax
  404d58:	call   404bba <_start@@Base+0x90a>
  404d5d:	cmp    QWORD PTR [rbp-0x8],rax
  404d61:	jb     404d1f <_start@@Base+0xa6f>
  404d63:	mov    rax,QWORD PTR [rip+0x2735e]        # 42c0c8 <__data_start@@Base+0x10>
  404d6a:	leave  
  404d6b:	ret    
  404d6c:	push   rbp
  404d6d:	mov    rbp,rsp
  404d70:	sub    rsp,0x30
  404d74:	mov    QWORD PTR [rbp-0x18],rdi
  404d78:	mov    QWORD PTR [rbp-0x20],rsi
  404d7c:	mov    QWORD PTR [rbp-0x28],rdx
  404d80:	mov    eax,ecx
  404d82:	mov    BYTE PTR [rbp-0x2c],al
  404d85:	mov    rax,QWORD PTR [rbp-0x20]
  404d89:	mov    QWORD PTR [rbp-0x8],rax
  404d8d:	jmp    404dc1 <_start@@Base+0xb11>
  404d8f:	mov    rdx,QWORD PTR [rbp-0x8]
  404d93:	mov    rax,QWORD PTR [rbp-0x18]
  404d97:	mov    rsi,rdx
  404d9a:	mov    rdi,rax
  404d9d:	call   404bd4 <_start@@Base+0x924>
  404da2:	mov    BYTE PTR [rbp-0x9],al
  404da5:	movzx  eax,BYTE PTR [rbp-0x9]
  404da9:	cmp    al,BYTE PTR [rbp-0x2c]
  404dac:	jb     404dbd <_start@@Base+0xb0d>
  404dae:	movzx  eax,BYTE PTR [rbp-0x9]
  404db2:	cmp    al,BYTE PTR [rbp-0x2c]
  404db5:	ja     404dbd <_start@@Base+0xb0d>
  404db7:	mov    rax,QWORD PTR [rbp-0x8]
  404dbb:	jmp    404df2 <_start@@Base+0xb42>
  404dbd:	inc    QWORD PTR [rbp-0x8]
  404dc1:	mov    rax,QWORD PTR [rbp-0x18]
  404dc5:	mov    rdi,rax
  404dc8:	call   404bba <_start@@Base+0x90a>
  404dcd:	cmp    QWORD PTR [rbp-0x28],rax
  404dd1:	jb     404de1 <_start@@Base+0xb31>
  404dd3:	mov    rax,QWORD PTR [rbp-0x18]
  404dd7:	mov    rdi,rax
  404dda:	call   404bba <_start@@Base+0x90a>
  404ddf:	jmp    404de5 <_start@@Base+0xb35>
  404de1:	mov    rax,QWORD PTR [rbp-0x28]
  404de5:	cmp    rax,QWORD PTR [rbp-0x8]
  404de9:	ja     404d8f <_start@@Base+0xadf>
  404deb:	mov    rax,QWORD PTR [rip+0x272d6]        # 42c0c8 <__data_start@@Base+0x10>
  404df2:	leave  
  404df3:	ret    
  404df4:	push   rbp
  404df5:	mov    rbp,rsp
  404df8:	sub    rsp,0x20
  404dfc:	mov    QWORD PTR [rbp-0x18],rdi
  404e00:	mov    eax,esi
  404e02:	mov    BYTE PTR [rbp-0x1c],al
  404e05:	mov    rax,QWORD PTR [rbp-0x18]
  404e09:	mov    rdi,rax
  404e0c:	call   404bba <_start@@Base+0x90a>
  404e11:	mov    QWORD PTR [rbp-0x8],rax
  404e15:	jmp    404e45 <_start@@Base+0xb95>
  404e17:	mov    rdx,QWORD PTR [rbp-0x8]
  404e1b:	mov    rax,QWORD PTR [rbp-0x18]
  404e1f:	mov    rsi,rdx
  404e22:	mov    rdi,rax
  404e25:	call   404bd4 <_start@@Base+0x924>
  404e2a:	mov    BYTE PTR [rbp-0x9],al
  404e2d:	movzx  eax,BYTE PTR [rbp-0x9]
  404e31:	cmp    al,BYTE PTR [rbp-0x1c]
  404e34:	jb     404e45 <_start@@Base+0xb95>
  404e36:	movzx  eax,BYTE PTR [rbp-0x9]
  404e3a:	cmp    al,BYTE PTR [rbp-0x1c]
  404e3d:	ja     404e45 <_start@@Base+0xb95>
  404e3f:	mov    rax,QWORD PTR [rbp-0x8]
  404e43:	jmp    404e5d <_start@@Base+0xbad>
  404e45:	mov    rax,QWORD PTR [rbp-0x8]
  404e49:	lea    rdx,[rax-0x1]
  404e4d:	mov    QWORD PTR [rbp-0x8],rdx
  404e51:	test   rax,rax
  404e54:	jne    404e17 <_start@@Base+0xb67>
  404e56:	mov    rax,QWORD PTR [rip+0x2726b]        # 42c0c8 <__data_start@@Base+0x10>
  404e5d:	leave  
  404e5e:	ret    
  404e5f:	push   rbp
  404e60:	mov    rbp,rsp
  404e63:	sub    rsp,0x30
  404e67:	mov    QWORD PTR [rbp-0x18],rdi
  404e6b:	mov    QWORD PTR [rbp-0x20],rsi
  404e6f:	mov    QWORD PTR [rbp-0x28],rdx
  404e73:	mov    eax,ecx
  404e75:	mov    BYTE PTR [rbp-0x2c],al
  404e78:	mov    rax,QWORD PTR [rbp-0x18]
  404e7c:	mov    rdi,rax
  404e7f:	call   404bba <_start@@Base+0x90a>
  404e84:	cmp    QWORD PTR [rbp-0x28],rax
  404e88:	jb     404e98 <_start@@Base+0xbe8>
  404e8a:	mov    rax,QWORD PTR [rbp-0x18]
  404e8e:	mov    rdi,rax
  404e91:	call   404bba <_start@@Base+0x90a>
  404e96:	jmp    404e9c <_start@@Base+0xbec>
  404e98:	mov    rax,QWORD PTR [rbp-0x28]
  404e9c:	mov    QWORD PTR [rbp-0x8],rax
  404ea0:	jmp    404ed0 <_start@@Base+0xc20>
  404ea2:	mov    rdx,QWORD PTR [rbp-0x8]
  404ea6:	mov    rax,QWORD PTR [rbp-0x18]
  404eaa:	mov    rsi,rdx
  404ead:	mov    rdi,rax
  404eb0:	call   404bd4 <_start@@Base+0x924>
  404eb5:	mov    BYTE PTR [rbp-0x9],al
  404eb8:	movzx  eax,BYTE PTR [rbp-0x9]
  404ebc:	cmp    al,BYTE PTR [rbp-0x2c]
  404ebf:	jb     404ed0 <_start@@Base+0xc20>
  404ec1:	movzx  eax,BYTE PTR [rbp-0x9]
  404ec5:	cmp    al,BYTE PTR [rbp-0x2c]
  404ec8:	ja     404ed0 <_start@@Base+0xc20>
  404eca:	mov    rax,QWORD PTR [rbp-0x8]
  404ece:	jmp    404ee9 <_start@@Base+0xc39>
  404ed0:	mov    rax,QWORD PTR [rbp-0x8]
  404ed4:	lea    rdx,[rax-0x1]
  404ed8:	mov    QWORD PTR [rbp-0x8],rdx
  404edc:	cmp    QWORD PTR [rbp-0x20],rax
  404ee0:	jb     404ea2 <_start@@Base+0xbf2>
  404ee2:	mov    rax,QWORD PTR [rip+0x271df]        # 42c0c8 <__data_start@@Base+0x10>
  404ee9:	leave  
  404eea:	ret    
  404eeb:	push   rbp
  404eec:	mov    rbp,rsp
  404eef:	sub    rsp,0x40
  404ef3:	mov    QWORD PTR [rbp-0x28],rdi
  404ef7:	mov    QWORD PTR [rbp-0x30],rsi
  404efb:	mov    QWORD PTR [rbp-0x38],rdx
  404eff:	mov    rax,QWORD PTR [rbp-0x30]
  404f03:	mov    QWORD PTR [rbp-0x8],rax
  404f07:	jmp    404fd8 <_start@@Base+0xd28>
  404f0c:	mov    rax,QWORD PTR [rbp-0x8]
  404f10:	add    rax,rax
  404f13:	mov    QWORD PTR [rbp-0x10],rax
  404f17:	mov    rax,QWORD PTR [rbp-0x10]
  404f1b:	cmp    rax,QWORD PTR [rbp-0x38]
  404f1f:	jae    404f5e <_start@@Base+0xcae>
  404f21:	mov    rdx,QWORD PTR [rbp-0x10]
  404f25:	mov    rax,QWORD PTR [rbp-0x28]
  404f29:	mov    rsi,rdx
  404f2c:	mov    rdi,rax
  404f2f:	call   404bd4 <_start@@Base+0x924>
  404f34:	mov    BYTE PTR [rbp-0x14],al
  404f37:	mov    rax,QWORD PTR [rbp-0x10]
  404f3b:	lea    rdx,[rax+0x1]
  404f3f:	mov    rax,QWORD PTR [rbp-0x28]
  404f43:	mov    rsi,rdx
  404f46:	mov    rdi,rax
  404f49:	call   404bd4 <_start@@Base+0x924>
  404f4e:	mov    BYTE PTR [rbp-0x13],al
  404f51:	movzx  eax,BYTE PTR [rbp-0x14]
  404f55:	cmp    al,BYTE PTR [rbp-0x13]
  404f58:	jae    404f5e <_start@@Base+0xcae>
  404f5a:	inc    QWORD PTR [rbp-0x10]
  404f5e:	mov    rdx,QWORD PTR [rbp-0x8]
  404f62:	mov    rax,QWORD PTR [rbp-0x28]
  404f66:	mov    rsi,rdx
  404f69:	mov    rdi,rax
  404f6c:	call   404bd4 <_start@@Base+0x924>
  404f71:	mov    BYTE PTR [rbp-0x12],al
  404f74:	mov    rdx,QWORD PTR [rbp-0x10]
  404f78:	mov    rax,QWORD PTR [rbp-0x28]
  404f7c:	mov    rsi,rdx
  404f7f:	mov    rdi,rax
  404f82:	call   404bd4 <_start@@Base+0x924>
  404f87:	mov    BYTE PTR [rbp-0x14],al
  404f8a:	movzx  eax,BYTE PTR [rbp-0x12]
  404f8e:	cmp    al,BYTE PTR [rbp-0x14]
  404f91:	jae    404feb <_start@@Base+0xd3b>
  404f93:	mov    rdx,QWORD PTR [rbp-0x28]
  404f97:	mov    rax,QWORD PTR [rbp-0x10]
  404f9b:	add    rax,rdx
  404f9e:	movzx  eax,BYTE PTR [rax]
  404fa1:	mov    BYTE PTR [rbp-0x11],al
  404fa4:	mov    rdx,QWORD PTR [rbp-0x28]
  404fa8:	mov    rax,QWORD PTR [rbp-0x8]
  404fac:	add    rax,rdx
  404faf:	mov    rcx,QWORD PTR [rbp-0x28]
  404fb3:	mov    rdx,QWORD PTR [rbp-0x10]
  404fb7:	add    rdx,rcx
  404fba:	movzx  eax,BYTE PTR [rax]
  404fbd:	mov    BYTE PTR [rdx],al
  404fbf:	mov    rdx,QWORD PTR [rbp-0x28]
  404fc3:	mov    rax,QWORD PTR [rbp-0x8]
  404fc7:	add    rdx,rax
  404fca:	movzx  eax,BYTE PTR [rbp-0x11]
  404fce:	mov    BYTE PTR [rdx],al
  404fd0:	mov    rax,QWORD PTR [rbp-0x10]
  404fd4:	mov    QWORD PTR [rbp-0x8],rax
  404fd8:	mov    rax,QWORD PTR [rbp-0x8]
  404fdc:	add    rax,rax
  404fdf:	cmp    QWORD PTR [rbp-0x38],rax
  404fe3:	jae    404f0c <_start@@Base+0xc5c>
  404fe9:	jmp    404fec <_start@@Base+0xd3c>
  404feb:	nop
  404fec:	leave  
  404fed:	ret    
  404fee:	push   rbp
  404fef:	mov    rbp,rsp
  404ff2:	sub    rsp,0x30
  404ff6:	mov    QWORD PTR [rbp-0x28],rdi
  404ffa:	mov    rax,QWORD PTR [rbp-0x28]
  404ffe:	mov    rdi,rax
  405001:	call   404bba <_start@@Base+0x90a>
  405006:	mov    QWORD PTR [rbp-0x8],rax
  40500a:	cmp    QWORD PTR [rbp-0x8],0x0
  40500f:	je     4050a6 <_start@@Base+0xdf6>
  405015:	mov    rax,QWORD PTR [rbp-0x8]
  405019:	dec    rax
  40501c:	mov    QWORD PTR [rbp-0x10],rax
  405020:	mov    rax,QWORD PTR [rbp-0x8]
  405024:	shr    rax,1
  405027:	mov    QWORD PTR [rbp-0x18],rax
  40502b:	mov    rdx,QWORD PTR [rbp-0x10]
  40502f:	mov    rcx,QWORD PTR [rbp-0x18]
  405033:	mov    rax,QWORD PTR [rbp-0x28]
  405037:	mov    rsi,rcx
  40503a:	mov    rdi,rax
  40503d:	call   404eeb <_start@@Base+0xc3b>
  405042:	mov    rax,QWORD PTR [rbp-0x18]
  405046:	lea    rdx,[rax-0x1]
  40504a:	mov    QWORD PTR [rbp-0x18],rdx
  40504e:	test   rax,rax
  405051:	jne    40502b <_start@@Base+0xd7b>
  405053:	jmp    40509d <_start@@Base+0xded>
  405055:	mov    rdx,QWORD PTR [rbp-0x28]
  405059:	mov    rax,QWORD PTR [rbp-0x10]
  40505d:	add    rax,rdx
  405060:	movzx  eax,BYTE PTR [rax]
  405063:	mov    BYTE PTR [rbp-0x19],al
  405066:	mov    rdx,QWORD PTR [rbp-0x28]
  40506a:	mov    rax,QWORD PTR [rbp-0x10]
  40506e:	add    rdx,rax
  405071:	mov    rax,QWORD PTR [rbp-0x28]
  405075:	movzx  eax,BYTE PTR [rax]
  405078:	mov    BYTE PTR [rdx],al
  40507a:	mov    rdx,QWORD PTR [rbp-0x28]
  40507e:	movzx  eax,BYTE PTR [rbp-0x19]
  405082:	mov    BYTE PTR [rdx],al
  405084:	dec    QWORD PTR [rbp-0x10]
  405088:	mov    rdx,QWORD PTR [rbp-0x10]
  40508c:	mov    rax,QWORD PTR [rbp-0x28]
  405090:	mov    esi,0x0
  405095:	mov    rdi,rax
  405098:	call   404eeb <_start@@Base+0xc3b>
  40509d:	cmp    QWORD PTR [rbp-0x10],0x0
  4050a2:	jne    405055 <_start@@Base+0xda5>
  4050a4:	jmp    4050a7 <_start@@Base+0xdf7>
  4050a6:	nop
  4050a7:	leave  
  4050a8:	ret    
  4050a9:	push   rbp
  4050aa:	mov    rbp,rsp
  4050ad:	sub    rsp,0x10
  4050b1:	mov    QWORD PTR [rbp-0x8],rdi
  4050b5:	mov    rax,QWORD PTR [rbp-0x8]
  4050b9:	mov    rdi,rax
  4050bc:	call   404fee <_start@@Base+0xd3e>
  4050c1:	nop
  4050c2:	leave  
  4050c3:	ret    
  4050c4:	push   rbp
  4050c5:	mov    rbp,rsp
  4050c8:	sub    rsp,0x10
  4050cc:	mov    QWORD PTR [rbp-0x8],rdi
  4050d0:	mov    QWORD PTR [rbp-0x10],rsi
  4050d4:	mov    rax,QWORD PTR [rbp-0x8]
  4050d8:	mov    rdi,rax
  4050db:	call   404876 <_start@@Base+0x5c6>
  4050e0:	cmp    QWORD PTR [rbp-0x10],rax
  4050e4:	jb     405105 <_start@@Base+0xe55>
  4050e6:	lea    rcx,[rip+0x1ccd3]        # 421dc0 <_IO_stdin_used@@Base+0x3dc0>
  4050ed:	mov    edx,0x195
  4050f2:	lea    rsi,[rip+0x18f2f]        # 41e028 <_IO_stdin_used@@Base+0x28>
  4050f9:	lea    rdi,[rip+0x18fb0]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  405100:	call   4041f0 <__assert_fail@plt>
  405105:	mov    rdx,QWORD PTR [rbp-0x8]
  405109:	mov    rax,QWORD PTR [rbp-0x10]
  40510d:	add    rax,rdx
  405110:	mov    rdi,rax
  405113:	call   4046a7 <_start@@Base+0x3f7>
  405118:	leave  
  405119:	ret    
  40511a:	push   rbp
  40511b:	mov    rbp,rsp
  40511e:	sub    rsp,0x20
  405122:	mov    QWORD PTR [rbp-0x18],rdi
  405126:	mov    QWORD PTR [rbp-0x20],rsi
  40512a:	mov    QWORD PTR [rbp-0x10],0x0
  405132:	jmp    405171 <_start@@Base+0xec1>
  405134:	mov    rdx,QWORD PTR [rbp-0x10]
  405138:	mov    rax,QWORD PTR [rbp-0x18]
  40513c:	mov    rsi,rdx
  40513f:	mov    rdi,rax
  405142:	call   404900 <_start@@Base+0x650>
  405147:	mov    QWORD PTR [rbp-0x8],rax
  40514b:	mov    rcx,QWORD PTR [rbp-0x20]
  40514f:	mov    rax,QWORD PTR [rbp-0x8]
  405153:	mov    edx,0x0
  405158:	mov    rsi,rcx
  40515b:	mov    rdi,rax
  40515e:	call   404b21 <_start@@Base+0x871>
  405163:	test   eax,eax
  405165:	jne    40516d <_start@@Base+0xebd>
  405167:	mov    rax,QWORD PTR [rbp-0x10]
  40516b:	jmp    40518a <_start@@Base+0xeda>
  40516d:	inc    QWORD PTR [rbp-0x10]
  405171:	mov    rax,QWORD PTR [rbp-0x18]
  405175:	mov    rdi,rax
  405178:	call   4048d2 <_start@@Base+0x622>
  40517d:	cmp    QWORD PTR [rbp-0x10],rax
  405181:	jb     405134 <_start@@Base+0xe84>
  405183:	mov    rax,QWORD PTR [rip+0x26f3e]        # 42c0c8 <__data_start@@Base+0x10>
  40518a:	leave  
  40518b:	ret    
  40518c:	push   rbp
  40518d:	mov    rbp,rsp
  405190:	sub    rsp,0x30
  405194:	mov    QWORD PTR [rbp-0x18],rdi
  405198:	mov    QWORD PTR [rbp-0x20],rsi
  40519c:	mov    QWORD PTR [rbp-0x28],rdx
  4051a0:	mov    QWORD PTR [rbp-0x10],0x0
  4051a8:	jmp    4051e6 <_start@@Base+0xf36>
  4051aa:	mov    rdx,QWORD PTR [rbp-0x10]
  4051ae:	mov    rax,QWORD PTR [rbp-0x18]
  4051b2:	mov    rsi,rdx
  4051b5:	mov    rdi,rax
  4051b8:	call   404900 <_start@@Base+0x650>
  4051bd:	mov    QWORD PTR [rbp-0x8],rax
  4051c1:	mov    rdx,QWORD PTR [rbp-0x28]
  4051c5:	mov    rcx,QWORD PTR [rbp-0x20]
  4051c9:	mov    rax,QWORD PTR [rbp-0x8]
  4051cd:	mov    rsi,rcx
  4051d0:	mov    rdi,rax
  4051d3:	call   404aab <_start@@Base+0x7fb>
  4051d8:	test   eax,eax
  4051da:	jne    4051e2 <_start@@Base+0xf32>
  4051dc:	mov    rax,QWORD PTR [rbp-0x10]
  4051e0:	jmp    4051ff <_start@@Base+0xf4f>
  4051e2:	inc    QWORD PTR [rbp-0x10]
  4051e6:	mov    rax,QWORD PTR [rbp-0x18]
  4051ea:	mov    rdi,rax
  4051ed:	call   4048d2 <_start@@Base+0x622>
  4051f2:	cmp    QWORD PTR [rbp-0x10],rax
  4051f6:	jb     4051aa <_start@@Base+0xefa>
  4051f8:	mov    rax,QWORD PTR [rip+0x26ec9]        # 42c0c8 <__data_start@@Base+0x10>
  4051ff:	leave  
  405200:	ret    
  405201:	push   rbp
  405202:	mov    rbp,rsp
  405205:	sub    rsp,0x30
  405209:	mov    QWORD PTR [rbp-0x18],rdi
  40520d:	mov    QWORD PTR [rbp-0x20],rsi
  405211:	mov    QWORD PTR [rbp-0x28],rdx
  405215:	mov    QWORD PTR [rbp-0x30],rcx
  405219:	mov    rax,QWORD PTR [rbp-0x20]
  40521d:	mov    QWORD PTR [rbp-0x10],rax
  405221:	jmp    405260 <_start@@Base+0xfb0>
  405223:	mov    rdx,QWORD PTR [rbp-0x10]
  405227:	mov    rax,QWORD PTR [rbp-0x18]
  40522b:	mov    rsi,rdx
  40522e:	mov    rdi,rax
  405231:	call   404900 <_start@@Base+0x650>
  405236:	mov    QWORD PTR [rbp-0x8],rax
  40523a:	mov    rcx,QWORD PTR [rbp-0x30]
  40523e:	mov    rax,QWORD PTR [rbp-0x8]
  405242:	mov    edx,0x0
  405247:	mov    rsi,rcx
  40524a:	mov    rdi,rax
  40524d:	call   404b21 <_start@@Base+0x871>
  405252:	test   eax,eax
  405254:	jne    40525c <_start@@Base+0xfac>
  405256:	mov    rax,QWORD PTR [rbp-0x10]
  40525a:	jmp    405291 <_start@@Base+0xfe1>
  40525c:	inc    QWORD PTR [rbp-0x10]
  405260:	mov    rax,QWORD PTR [rbp-0x18]
  405264:	mov    rdi,rax
  405267:	call   4048d2 <_start@@Base+0x622>
  40526c:	cmp    QWORD PTR [rbp-0x28],rax
  405270:	jb     405280 <_start@@Base+0xfd0>
  405272:	mov    rax,QWORD PTR [rbp-0x18]
  405276:	mov    rdi,rax
  405279:	call   4048d2 <_start@@Base+0x622>
  40527e:	jmp    405284 <_start@@Base+0xfd4>
  405280:	mov    rax,QWORD PTR [rbp-0x28]
  405284:	cmp    rax,QWORD PTR [rbp-0x10]
  405288:	ja     405223 <_start@@Base+0xf73>
  40528a:	mov    rax,QWORD PTR [rip+0x26e37]        # 42c0c8 <__data_start@@Base+0x10>
  405291:	leave  
  405292:	ret    
  405293:	push   rbp
  405294:	mov    rbp,rsp
  405297:	sub    rsp,0x40
  40529b:	mov    QWORD PTR [rbp-0x18],rdi
  40529f:	mov    QWORD PTR [rbp-0x20],rsi
  4052a3:	mov    QWORD PTR [rbp-0x28],rdx
  4052a7:	mov    QWORD PTR [rbp-0x30],rcx
  4052ab:	mov    QWORD PTR [rbp-0x38],r8
  4052af:	mov    rax,QWORD PTR [rbp-0x20]
  4052b3:	mov    QWORD PTR [rbp-0x10],rax
  4052b7:	jmp    4052f5 <_start@@Base+0x1045>
  4052b9:	mov    rdx,QWORD PTR [rbp-0x10]
  4052bd:	mov    rax,QWORD PTR [rbp-0x18]
  4052c1:	mov    rsi,rdx
  4052c4:	mov    rdi,rax
  4052c7:	call   404900 <_start@@Base+0x650>
  4052cc:	mov    QWORD PTR [rbp-0x8],rax
  4052d0:	mov    rdx,QWORD PTR [rbp-0x38]
  4052d4:	mov    rcx,QWORD PTR [rbp-0x30]
  4052d8:	mov    rax,QWORD PTR [rbp-0x8]
  4052dc:	mov    rsi,rcx
  4052df:	mov    rdi,rax
  4052e2:	call   404aab <_start@@Base+0x7fb>
  4052e7:	test   eax,eax
  4052e9:	jne    4052f1 <_start@@Base+0x1041>
  4052eb:	mov    rax,QWORD PTR [rbp-0x10]
  4052ef:	jmp    405326 <_start@@Base+0x1076>
  4052f1:	inc    QWORD PTR [rbp-0x10]
  4052f5:	mov    rax,QWORD PTR [rbp-0x18]
  4052f9:	mov    rdi,rax
  4052fc:	call   4048d2 <_start@@Base+0x622>
  405301:	cmp    QWORD PTR [rbp-0x28],rax
  405305:	jb     405315 <_start@@Base+0x1065>
  405307:	mov    rax,QWORD PTR [rbp-0x18]
  40530b:	mov    rdi,rax
  40530e:	call   4048d2 <_start@@Base+0x622>
  405313:	jmp    405319 <_start@@Base+0x1069>
  405315:	mov    rax,QWORD PTR [rbp-0x28]
  405319:	cmp    rax,QWORD PTR [rbp-0x10]
  40531d:	ja     4052b9 <_start@@Base+0x1009>
  40531f:	mov    rax,QWORD PTR [rip+0x26da2]        # 42c0c8 <__data_start@@Base+0x10>
  405326:	leave  
  405327:	ret    
  405328:	push   rbp
  405329:	mov    rbp,rsp
  40532c:	sub    rsp,0x20
  405330:	mov    QWORD PTR [rbp-0x18],rdi
  405334:	mov    QWORD PTR [rbp-0x20],rsi
  405338:	mov    rax,QWORD PTR [rbp-0x18]
  40533c:	mov    rdi,rax
  40533f:	call   4048d2 <_start@@Base+0x622>
  405344:	mov    QWORD PTR [rbp-0x10],rax
  405348:	jmp    405383 <_start@@Base+0x10d3>
  40534a:	mov    rdx,QWORD PTR [rbp-0x10]
  40534e:	mov    rax,QWORD PTR [rbp-0x18]
  405352:	mov    rsi,rdx
  405355:	mov    rdi,rax
  405358:	call   404900 <_start@@Base+0x650>
  40535d:	mov    QWORD PTR [rbp-0x8],rax
  405361:	mov    rcx,QWORD PTR [rbp-0x20]
  405365:	mov    rax,QWORD PTR [rbp-0x8]
  405369:	mov    edx,0x0
  40536e:	mov    rsi,rcx
  405371:	mov    rdi,rax
  405374:	call   404b21 <_start@@Base+0x871>
  405379:	test   eax,eax
  40537b:	jne    405383 <_start@@Base+0x10d3>
  40537d:	mov    rax,QWORD PTR [rbp-0x10]
  405381:	jmp    40539b <_start@@Base+0x10eb>
  405383:	mov    rax,QWORD PTR [rbp-0x10]
  405387:	lea    rdx,[rax-0x1]
  40538b:	mov    QWORD PTR [rbp-0x10],rdx
  40538f:	test   rax,rax
  405392:	jne    40534a <_start@@Base+0x109a>
  405394:	mov    rax,QWORD PTR [rip+0x26d2d]        # 42c0c8 <__data_start@@Base+0x10>
  40539b:	leave  
  40539c:	ret    
  40539d:	push   rbp
  40539e:	mov    rbp,rsp
  4053a1:	sub    rsp,0x30
  4053a5:	mov    QWORD PTR [rbp-0x18],rdi
  4053a9:	mov    QWORD PTR [rbp-0x20],rsi
  4053ad:	mov    QWORD PTR [rbp-0x28],rdx
  4053b1:	mov    rax,QWORD PTR [rbp-0x18]
  4053b5:	mov    rdi,rax
  4053b8:	call   4048d2 <_start@@Base+0x622>
  4053bd:	mov    QWORD PTR [rbp-0x10],rax
  4053c1:	jmp    4053fb <_start@@Base+0x114b>
  4053c3:	mov    rdx,QWORD PTR [rbp-0x10]
  4053c7:	mov    rax,QWORD PTR [rbp-0x18]
  4053cb:	mov    rsi,rdx
  4053ce:	mov    rdi,rax
  4053d1:	call   404900 <_start@@Base+0x650>
  4053d6:	mov    QWORD PTR [rbp-0x8],rax
  4053da:	mov    rdx,QWORD PTR [rbp-0x28]
  4053de:	mov    rcx,QWORD PTR [rbp-0x20]
  4053e2:	mov    rax,QWORD PTR [rbp-0x8]
  4053e6:	mov    rsi,rcx
  4053e9:	mov    rdi,rax
  4053ec:	call   404aab <_start@@Base+0x7fb>
  4053f1:	test   eax,eax
  4053f3:	jne    4053fb <_start@@Base+0x114b>
  4053f5:	mov    rax,QWORD PTR [rbp-0x10]
  4053f9:	jmp    405413 <_start@@Base+0x1163>
  4053fb:	mov    rax,QWORD PTR [rbp-0x10]
  4053ff:	lea    rdx,[rax-0x1]
  405403:	mov    QWORD PTR [rbp-0x10],rdx
  405407:	test   rax,rax
  40540a:	jne    4053c3 <_start@@Base+0x1113>
  40540c:	mov    rax,QWORD PTR [rip+0x26cb5]        # 42c0c8 <__data_start@@Base+0x10>
  405413:	leave  
  405414:	ret    
  405415:	push   rbp
  405416:	mov    rbp,rsp
  405419:	sub    rsp,0x30
  40541d:	mov    QWORD PTR [rbp-0x18],rdi
  405421:	mov    QWORD PTR [rbp-0x20],rsi
  405425:	mov    QWORD PTR [rbp-0x28],rdx
  405429:	mov    QWORD PTR [rbp-0x30],rcx
  40542d:	mov    rax,QWORD PTR [rbp-0x18]
  405431:	mov    rdi,rax
  405434:	call   4048d2 <_start@@Base+0x622>
  405439:	cmp    QWORD PTR [rbp-0x28],rax
  40543d:	jb     40544d <_start@@Base+0x119d>
  40543f:	mov    rax,QWORD PTR [rbp-0x18]
  405443:	mov    rdi,rax
  405446:	call   4048d2 <_start@@Base+0x622>
  40544b:	jmp    405451 <_start@@Base+0x11a1>
  40544d:	mov    rax,QWORD PTR [rbp-0x28]
  405451:	mov    QWORD PTR [rbp-0x10],rax
  405455:	jmp    405490 <_start@@Base+0x11e0>
  405457:	mov    rdx,QWORD PTR [rbp-0x10]
  40545b:	mov    rax,QWORD PTR [rbp-0x18]
  40545f:	mov    rsi,rdx
  405462:	mov    rdi,rax
  405465:	call   404900 <_start@@Base+0x650>
  40546a:	mov    QWORD PTR [rbp-0x8],rax
  40546e:	mov    rcx,QWORD PTR [rbp-0x30]
  405472:	mov    rax,QWORD PTR [rbp-0x8]
  405476:	mov    edx,0x0
  40547b:	mov    rsi,rcx
  40547e:	mov    rdi,rax
  405481:	call   404b21 <_start@@Base+0x871>
  405486:	test   eax,eax
  405488:	jne    405490 <_start@@Base+0x11e0>
  40548a:	mov    rax,QWORD PTR [rbp-0x10]
  40548e:	jmp    4054a9 <_start@@Base+0x11f9>
  405490:	mov    rax,QWORD PTR [rbp-0x10]
  405494:	lea    rdx,[rax-0x1]
  405498:	mov    QWORD PTR [rbp-0x10],rdx
  40549c:	cmp    QWORD PTR [rbp-0x20],rax
  4054a0:	jb     405457 <_start@@Base+0x11a7>
  4054a2:	mov    rax,QWORD PTR [rip+0x26c1f]        # 42c0c8 <__data_start@@Base+0x10>
  4054a9:	leave  
  4054aa:	ret    
  4054ab:	push   rbp
  4054ac:	mov    rbp,rsp
  4054af:	sub    rsp,0x40
  4054b3:	mov    QWORD PTR [rbp-0x18],rdi
  4054b7:	mov    QWORD PTR [rbp-0x20],rsi
  4054bb:	mov    QWORD PTR [rbp-0x28],rdx
  4054bf:	mov    QWORD PTR [rbp-0x30],rcx
  4054c3:	mov    QWORD PTR [rbp-0x38],r8
  4054c7:	mov    rax,QWORD PTR [rbp-0x18]
  4054cb:	mov    rdi,rax
  4054ce:	call   4048d2 <_start@@Base+0x622>
  4054d3:	cmp    QWORD PTR [rbp-0x28],rax
  4054d7:	jb     4054e7 <_start@@Base+0x1237>
  4054d9:	mov    rax,QWORD PTR [rbp-0x18]
  4054dd:	mov    rdi,rax
  4054e0:	call   4048d2 <_start@@Base+0x622>
  4054e5:	jmp    4054eb <_start@@Base+0x123b>
  4054e7:	mov    rax,QWORD PTR [rbp-0x28]
  4054eb:	mov    QWORD PTR [rbp-0x10],rax
  4054ef:	jmp    405529 <_start@@Base+0x1279>
  4054f1:	mov    rdx,QWORD PTR [rbp-0x10]
  4054f5:	mov    rax,QWORD PTR [rbp-0x18]
  4054f9:	mov    rsi,rdx
  4054fc:	mov    rdi,rax
  4054ff:	call   404900 <_start@@Base+0x650>
  405504:	mov    QWORD PTR [rbp-0x8],rax
  405508:	mov    rdx,QWORD PTR [rbp-0x38]
  40550c:	mov    rcx,QWORD PTR [rbp-0x30]
  405510:	mov    rax,QWORD PTR [rbp-0x8]
  405514:	mov    rsi,rcx
  405517:	mov    rdi,rax
  40551a:	call   404aab <_start@@Base+0x7fb>
  40551f:	test   eax,eax
  405521:	jne    405529 <_start@@Base+0x1279>
  405523:	mov    rax,QWORD PTR [rbp-0x10]
  405527:	jmp    405542 <_start@@Base+0x1292>
  405529:	mov    rax,QWORD PTR [rbp-0x10]
  40552d:	lea    rdx,[rax-0x1]
  405531:	mov    QWORD PTR [rbp-0x10],rdx
  405535:	cmp    QWORD PTR [rbp-0x20],rax
  405539:	jb     4054f1 <_start@@Base+0x1241>
  40553b:	mov    rax,QWORD PTR [rip+0x26b86]        # 42c0c8 <__data_start@@Base+0x10>
  405542:	leave  
  405543:	ret    
  405544:	push   rbp
  405545:	mov    rbp,rsp
  405548:	sub    rsp,0x20
  40554c:	mov    QWORD PTR [rbp-0x18],rdi
  405550:	mov    QWORD PTR [rbp-0x20],rsi
  405554:	mov    rax,QWORD PTR fs:0x28
  40555d:	mov    QWORD PTR [rbp-0x8],rax
  405561:	xor    eax,eax
  405563:	mov    DWORD PTR [rbp-0x10],0x0
  40556a:	cmp    QWORD PTR [rbp-0x20],0x0
  40556f:	jne    405578 <_start@@Base+0x12c8>
  405571:	mov    eax,0x1
  405576:	jmp    4055cb <_start@@Base+0x131b>
  405578:	mov    rcx,QWORD PTR [rbp-0x20]
  40557c:	lea    rax,[rbp-0x10]
  405580:	mov    edx,0x4
  405585:	mov    rsi,rcx
  405588:	mov    rdi,rax
  40558b:	call   404180 <strncpy@plt>
  405590:	mov    eax,DWORD PTR [rbp-0x10]
  405593:	mov    edi,eax
  405595:	call   4047b8 <_start@@Base+0x508>
  40559a:	mov    DWORD PTR [rbp-0x10],eax
  40559d:	mov    rax,QWORD PTR [rbp-0x18]
  4055a1:	add    rax,0x4
  4055a5:	mov    rdi,rax
  4055a8:	call   4047c4 <_start@@Base+0x514>
  4055ad:	mov    DWORD PTR [rbp-0xc],eax
  4055b0:	mov    eax,DWORD PTR [rbp-0x10]
  4055b3:	test   eax,eax
  4055b5:	je     4055bf <_start@@Base+0x130f>
  4055b7:	mov    eax,DWORD PTR [rbp-0x10]
  4055ba:	cmp    DWORD PTR [rbp-0xc],eax
  4055bd:	jne    4055c6 <_start@@Base+0x1316>
  4055bf:	mov    eax,0x1
  4055c4:	jmp    4055cb <_start@@Base+0x131b>
  4055c6:	mov    eax,0x0
  4055cb:	mov    rdx,QWORD PTR [rbp-0x8]
  4055cf:	xor    rdx,QWORD PTR fs:0x28
  4055d8:	je     4055df <_start@@Base+0x132f>
  4055da:	call   4041c0 <__stack_chk_fail@plt>
  4055df:	leave  
  4055e0:	ret    
  4055e1:	push   rbp
  4055e2:	mov    rbp,rsp
  4055e5:	sub    rsp,0x10
  4055e9:	mov    QWORD PTR [rbp-0x8],rdi
  4055ed:	mov    DWORD PTR [rbp-0xc],esi
  4055f0:	cmp    DWORD PTR [rbp-0xc],0x0
  4055f4:	je     40560b <_start@@Base+0x135b>
  4055f6:	mov    rax,QWORD PTR [rbp-0x8]
  4055fa:	add    rax,0x4
  4055fe:	mov    rdi,rax
  405601:	call   4047c4 <_start@@Base+0x514>
  405606:	cmp    DWORD PTR [rbp-0xc],eax
  405609:	jne    405612 <_start@@Base+0x1362>
  40560b:	mov    eax,0x1
  405610:	jmp    405617 <_start@@Base+0x1367>
  405612:	mov    eax,0x0
  405617:	leave  
  405618:	ret    
  405619:	push   rbp
  40561a:	mov    rbp,rsp
  40561d:	sub    rsp,0x8
  405621:	mov    QWORD PTR [rbp-0x8],rdi
  405625:	mov    rax,QWORD PTR [rbp-0x8]
  405629:	add    rax,0x4
  40562d:	mov    rdi,rax
  405630:	call   4047c4 <_start@@Base+0x514>
  405635:	leave  
  405636:	ret    
  405637:	push   rbp
  405638:	mov    rbp,rsp
  40563b:	sub    rsp,0x10
  40563f:	mov    QWORD PTR [rbp-0x8],rdi
  405643:	mov    QWORD PTR [rbp-0x10],rsi
  405647:	cmp    QWORD PTR [rbp-0x10],0x0
  40564c:	je     405663 <_start@@Base+0x13b3>
  40564e:	mov    rax,QWORD PTR [rbp-0x8]
  405652:	mov    rdi,rax
  405655:	call   4046e9 <_start@@Base+0x439>
  40565a:	mov    edx,eax
  40565c:	mov    rax,QWORD PTR [rbp-0x10]
  405660:	mov    QWORD PTR [rax],rdx
  405663:	mov    rax,QWORD PTR [rbp-0x8]
  405667:	add    rax,0x4
  40566b:	leave  
  40566c:	ret    
  40566d:	push   rbp
  40566e:	mov    rbp,rsp
  405671:	mov    eax,edi
  405673:	mov    BYTE PTR [rbp-0x4],al
  405676:	movzx  eax,BYTE PTR [rbp-0x4]
  40567a:	pop    rbp
  40567b:	ret    
  40567c:	push   rbp
  40567d:	mov    rbp,rsp
  405680:	mov    eax,edi
  405682:	mov    BYTE PTR [rbp-0x4],al
  405685:	movzx  eax,BYTE PTR [rbp-0x4]
  405689:	pop    rbp
  40568a:	ret    
  40568b:	push   rbp
  40568c:	mov    rbp,rsp
  40568f:	sub    rsp,0x8
  405693:	mov    QWORD PTR [rbp-0x8],rdi
  405697:	mov    rax,QWORD PTR [rbp-0x8]
  40569b:	movzx  eax,BYTE PTR [rax]
  40569e:	movsx  eax,al
  4056a1:	mov    edi,eax
  4056a3:	call   40566d <_start@@Base+0x13bd>
  4056a8:	leave  
  4056a9:	ret    
  4056aa:	push   rbp
  4056ab:	mov    rbp,rsp
  4056ae:	mov    eax,edi
  4056b0:	mov    BYTE PTR [rbp-0x4],al
  4056b3:	movsx  eax,BYTE PTR [rbp-0x4]
  4056b7:	cmp    eax,0x2
  4056ba:	je     4056cf <_start@@Base+0x141f>
  4056bc:	cmp    eax,0x8
  4056bf:	je     4056d8 <_start@@Base+0x1428>
  4056c1:	cmp    eax,0x1
  4056c4:	jne    4056e1 <_start@@Base+0x1431>
  4056c6:	lea    rax,[rip+0x18a1a]        # 41e0e7 <_IO_stdin_used@@Base+0xe7>
  4056cd:	jmp    4056e8 <_start@@Base+0x1438>
  4056cf:	lea    rax,[rip+0x18a15]        # 41e0eb <_IO_stdin_used@@Base+0xeb>
  4056d6:	jmp    4056e8 <_start@@Base+0x1438>
  4056d8:	lea    rax,[rip+0x18a12]        # 41e0f1 <_IO_stdin_used@@Base+0xf1>
  4056df:	jmp    4056e8 <_start@@Base+0x1438>
  4056e1:	lea    rax,[rip+0x18a0e]        # 41e0f6 <_IO_stdin_used@@Base+0xf6>
  4056e8:	pop    rbp
  4056e9:	ret    
  4056ea:	push   rbp
  4056eb:	mov    rbp,rsp
  4056ee:	mov    eax,edi
  4056f0:	mov    BYTE PTR [rbp-0x4],al
  4056f3:	movsx  eax,BYTE PTR [rbp-0x4]
  4056f7:	cmp    eax,0x2
  4056fa:	je     40570d <_start@@Base+0x145d>
  4056fc:	cmp    eax,0x8
  4056ff:	je     405714 <_start@@Base+0x1464>
  405701:	cmp    eax,0x1
  405704:	jne    40571b <_start@@Base+0x146b>
  405706:	mov    eax,0x1
  40570b:	jmp    405720 <_start@@Base+0x1470>
  40570d:	mov    eax,0x1
  405712:	jmp    405720 <_start@@Base+0x1470>
  405714:	mov    eax,0x1
  405719:	jmp    405720 <_start@@Base+0x1470>
  40571b:	mov    eax,0x0
  405720:	pop    rbp
  405721:	ret    
  405722:	push   rbp
  405723:	mov    rbp,rsp
  405726:	mov    QWORD PTR [rbp-0x8],rdi
  40572a:	mov    QWORD PTR [rbp-0x10],rsi
  40572e:	mov    rax,QWORD PTR [rbp-0x10]
  405732:	lea    rdx,[rax*4+0x0]
  40573a:	mov    rax,QWORD PTR [rbp-0x8]
  40573e:	add    rax,rdx
  405741:	pop    rbp
  405742:	ret    
  405743:	push   rbp
  405744:	mov    rbp,rsp
  405747:	sub    rsp,0x10
  40574b:	mov    QWORD PTR [rbp-0x8],rdi
  40574f:	mov    QWORD PTR [rbp-0x10],rsi
  405753:	mov    rax,QWORD PTR [rbp-0x8]
  405757:	mov    rdi,rax
  40575a:	call   404876 <_start@@Base+0x5c6>
  40575f:	cmp    QWORD PTR [rbp-0x10],rax
  405763:	jb     405784 <_start@@Base+0x14d4>
  405765:	lea    rcx,[rip+0x1c044]        # 4217b0 <_IO_stdin_used@@Base+0x37b0>
  40576c:	mov    edx,0x17c
  405771:	lea    rsi,[rip+0x18980]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405778:	lea    rdi,[rip+0x18931]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  40577f:	call   4041f0 <__assert_fail@plt>
  405784:	mov    rax,QWORD PTR [rbp-0x10]
  405788:	lea    rdx,[rax*4+0x0]
  405790:	mov    rax,QWORD PTR [rbp-0x8]
  405794:	add    rax,rdx
  405797:	leave  
  405798:	ret    
  405799:	push   rbp
  40579a:	mov    rbp,rsp
  40579d:	mov    eax,0x4
  4057a2:	pop    rbp
  4057a3:	ret    
  4057a4:	push   rbp
  4057a5:	mov    rbp,rsp
  4057a8:	sub    rsp,0x8
  4057ac:	mov    QWORD PTR [rbp-0x8],rdi
  4057b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4057b5:	je     4057cb <_start@@Base+0x151b>
  4057b7:	mov    rax,QWORD PTR [rbp-0x8]
  4057bb:	sub    rax,0x4
  4057bf:	mov    rdi,rax
  4057c2:	call   4046e9 <_start@@Base+0x439>
  4057c7:	mov    eax,eax
  4057c9:	jmp    4057d0 <_start@@Base+0x1520>
  4057cb:	mov    eax,0x0
  4057d0:	leave  
  4057d1:	ret    
  4057d2:	push   rbp
  4057d3:	mov    rbp,rsp
  4057d6:	sub    rsp,0x8
  4057da:	mov    QWORD PTR [rbp-0x8],rdi
  4057de:	cmp    QWORD PTR [rbp-0x8],0x0
  4057e3:	je     4057f3 <_start@@Base+0x1543>
  4057e5:	mov    rax,QWORD PTR [rbp-0x8]
  4057e9:	mov    rdi,rax
  4057ec:	call   4044db <_start@@Base+0x22b>
  4057f1:	jmp    4057f8 <_start@@Base+0x1548>
  4057f3:	mov    eax,0x0
  4057f8:	leave  
  4057f9:	ret    
  4057fa:	push   rbp
  4057fb:	mov    rbp,rsp
  4057fe:	sub    rsp,0x8
  405802:	mov    QWORD PTR [rbp-0x8],rdi
  405806:	cmp    QWORD PTR [rbp-0x8],0x0
  40580b:	je     40581f <_start@@Base+0x156f>
  40580d:	mov    rax,QWORD PTR [rbp-0x8]
  405811:	add    rax,0x2
  405815:	mov    rdi,rax
  405818:	call   40449c <_start@@Base+0x1ec>
  40581d:	jmp    405824 <_start@@Base+0x1574>
  40581f:	mov    eax,0x0
  405824:	leave  
  405825:	ret    
  405826:	push   rbp
  405827:	mov    rbp,rsp
  40582a:	mov    eax,0x0
  40582f:	pop    rbp
  405830:	ret    
  405831:	push   rbp
  405832:	mov    rbp,rsp
  405835:	mov    eax,0x20
  40583a:	pop    rbp
  40583b:	ret    
  40583c:	push   rbp
  40583d:	mov    rbp,rsp
  405840:	sub    rsp,0x10
  405844:	mov    QWORD PTR [rbp-0x8],rdi
  405848:	mov    QWORD PTR [rbp-0x10],rsi
  40584c:	cmp    QWORD PTR [rbp-0x8],0x0
  405851:	je     405881 <_start@@Base+0x15d1>
  405853:	mov    rdx,QWORD PTR [rbp-0x10]
  405857:	mov    rax,QWORD PTR [rbp-0x8]
  40585b:	mov    rsi,rdx
  40585e:	mov    rdi,rax
  405861:	call   405544 <_start@@Base+0x1294>
  405866:	test   eax,eax
  405868:	je     405881 <_start@@Base+0x15d1>
  40586a:	mov    rax,QWORD PTR [rbp-0x8]
  40586e:	mov    rdi,rax
  405871:	call   4046e9 <_start@@Base+0x439>
  405876:	mov    edx,eax
  405878:	mov    rax,QWORD PTR [rbp-0x8]
  40587c:	add    rax,rdx
  40587f:	jmp    405886 <_start@@Base+0x15d6>
  405881:	mov    eax,0x0
  405886:	leave  
  405887:	ret    
  405888:	push   rbp
  405889:	mov    rbp,rsp
  40588c:	sub    rsp,0x10
  405890:	mov    QWORD PTR [rbp-0x8],rdi
  405894:	mov    DWORD PTR [rbp-0xc],esi
  405897:	cmp    QWORD PTR [rbp-0x8],0x0
  40589c:	je     4058ca <_start@@Base+0x161a>
  40589e:	mov    edx,DWORD PTR [rbp-0xc]
  4058a1:	mov    rax,QWORD PTR [rbp-0x8]
  4058a5:	mov    esi,edx
  4058a7:	mov    rdi,rax
  4058aa:	call   4055e1 <_start@@Base+0x1331>
  4058af:	test   eax,eax
  4058b1:	je     4058ca <_start@@Base+0x161a>
  4058b3:	mov    rax,QWORD PTR [rbp-0x8]
  4058b7:	mov    rdi,rax
  4058ba:	call   4046e9 <_start@@Base+0x439>
  4058bf:	mov    edx,eax
  4058c1:	mov    rax,QWORD PTR [rbp-0x8]
  4058c5:	add    rax,rdx
  4058c8:	jmp    4058cf <_start@@Base+0x161f>
  4058ca:	mov    eax,0x0
  4058cf:	leave  
  4058d0:	ret    
  4058d1:	push   rbp
  4058d2:	mov    rbp,rsp
  4058d5:	sub    rsp,0x20
  4058d9:	mov    QWORD PTR [rbp-0x18],rdi
  4058dd:	lea    rax,[rip+0x18890]        # 41e174 <_IO_stdin_used@@Base+0x174>
  4058e4:	mov    QWORD PTR [rbp-0x8],rax
  4058e8:	cmp    QWORD PTR [rbp-0x18],0x0
  4058ed:	je     40591d <_start@@Base+0x166d>
  4058ef:	mov    rdx,QWORD PTR [rbp-0x8]
  4058f3:	mov    rax,QWORD PTR [rbp-0x18]
  4058f7:	mov    rsi,rdx
  4058fa:	mov    rdi,rax
  4058fd:	call   405544 <_start@@Base+0x1294>
  405902:	test   eax,eax
  405904:	je     40591d <_start@@Base+0x166d>
  405906:	mov    rax,QWORD PTR [rbp-0x18]
  40590a:	mov    rdi,rax
  40590d:	call   4046e9 <_start@@Base+0x439>
  405912:	mov    edx,eax
  405914:	mov    rax,QWORD PTR [rbp-0x18]
  405918:	add    rax,rdx
  40591b:	jmp    405922 <_start@@Base+0x1672>
  40591d:	mov    eax,0x0
  405922:	leave  
  405923:	ret    
  405924:	push   rbp
  405925:	mov    rbp,rsp
  405928:	sub    rsp,0x8
  40592c:	mov    QWORD PTR [rbp-0x8],rdi
  405930:	cmp    QWORD PTR [rbp-0x8],0x0
  405935:	je     405963 <_start@@Base+0x16b3>
  405937:	mov    rax,QWORD PTR [rbp-0x8]
  40593b:	mov    esi,0xa8f53ed2
  405940:	mov    rdi,rax
  405943:	call   4055e1 <_start@@Base+0x1331>
  405948:	test   eax,eax
  40594a:	je     405963 <_start@@Base+0x16b3>
  40594c:	mov    rax,QWORD PTR [rbp-0x8]
  405950:	mov    rdi,rax
  405953:	call   4046e9 <_start@@Base+0x439>
  405958:	mov    edx,eax
  40595a:	mov    rax,QWORD PTR [rbp-0x8]
  40595e:	add    rax,rdx
  405961:	jmp    405968 <_start@@Base+0x16b8>
  405963:	mov    eax,0x0
  405968:	leave  
  405969:	ret    
  40596a:	push   rbp
  40596b:	mov    rbp,rsp
  40596e:	sub    rsp,0x8
  405972:	mov    QWORD PTR [rbp-0x8],rdi
  405976:	cmp    QWORD PTR [rbp-0x8],0x0
  40597b:	je     405993 <_start@@Base+0x16e3>
  40597d:	mov    rax,QWORD PTR [rbp-0x8]
  405981:	add    rax,0x8
  405985:	mov    rdi,rax
  405988:	call   4045a4 <_start@@Base+0x2f4>
  40598d:	vmovd  eax,xmm0
  405991:	jmp    405999 <_start@@Base+0x16e9>
  405993:	mov    eax,DWORD PTR [rip+0x1c833]        # 4221cc <_IO_stdin_used@@Base+0x41cc>
  405999:	vmovd  xmm0,eax
  40599d:	leave  
  40599e:	ret    
  40599f:	push   rbp
  4059a0:	mov    rbp,rsp
  4059a3:	sub    rsp,0x8
  4059a7:	mov    QWORD PTR [rbp-0x8],rdi
  4059ab:	cmp    QWORD PTR [rbp-0x8],0x0
  4059b0:	je     4059c0 <_start@@Base+0x1710>
  4059b2:	mov    rax,QWORD PTR [rbp-0x8]
  4059b6:	mov    rdi,rax
  4059b9:	call   4043f3 <_start@@Base+0x143>
  4059be:	jmp    4059c5 <_start@@Base+0x1715>
  4059c0:	mov    eax,0x0
  4059c5:	leave  
  4059c6:	ret    
  4059c7:	push   rbp
  4059c8:	mov    rbp,rsp
  4059cb:	sub    rsp,0x8
  4059cf:	mov    QWORD PTR [rbp-0x8],rdi
  4059d3:	mov    rax,QWORD PTR [rbp-0x8]
  4059d7:	mov    rdi,rax
  4059da:	call   404876 <_start@@Base+0x5c6>
  4059df:	leave  
  4059e0:	ret    
  4059e1:	push   rbp
  4059e2:	mov    rbp,rsp
  4059e5:	sub    rsp,0x10
  4059e9:	mov    rax,rdi
  4059ec:	mov    rcx,rsi
  4059ef:	mov    rdx,rcx
  4059f2:	mov    QWORD PTR [rbp-0x10],rax
  4059f6:	mov    QWORD PTR [rbp-0x8],rdx
  4059fa:	mov    rax,QWORD PTR [rbp-0x10]
  4059fe:	mov    rdi,rax
  405a01:	call   404876 <_start@@Base+0x5c6>
  405a06:	leave  
  405a07:	ret    
  405a08:	push   rbp
  405a09:	mov    rbp,rsp
  405a0c:	push   rbx
  405a0d:	sub    rsp,0x48
  405a11:	mov    rax,rdi
  405a14:	mov    rcx,rax
  405a17:	mov    rbx,rdx
  405a1a:	mov    rbx,rsi
  405a1d:	mov    QWORD PTR [rbp-0x40],rcx
  405a21:	mov    QWORD PTR [rbp-0x38],rbx
  405a25:	mov    QWORD PTR [rbp-0x48],rdx
  405a29:	mov    BYTE PTR [rbp-0x20],0x0
  405a2d:	mov    QWORD PTR [rbp-0x18],0x0
  405a35:	mov    rax,QWORD PTR [rbp-0x40]
  405a39:	mov    rdi,rax
  405a3c:	call   404876 <_start@@Base+0x5c6>
  405a41:	mov    QWORD PTR [rbp-0x28],rax
  405a45:	mov    rax,QWORD PTR [rbp-0x28]
  405a49:	cmp    rax,QWORD PTR [rbp-0x48]
  405a4d:	ja     405a6e <_start@@Base+0x17be>
  405a4f:	lea    rcx,[rip+0x1c34a]        # 421da0 <_IO_stdin_used@@Base+0x3da0>
  405a56:	mov    edx,0x208
  405a5b:	lea    rsi,[rip+0x18696]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405a62:	lea    rdi,[rip+0x18717]        # 41e180 <_IO_stdin_used@@Base+0x180>
  405a69:	call   4041f0 <__assert_fail@plt>
  405a6e:	mov    rdx,QWORD PTR [rbp-0x40]
  405a72:	mov    rax,QWORD PTR [rbp-0x48]
  405a76:	add    rax,rdx
  405a79:	movzx  eax,BYTE PTR [rax]
  405a7c:	mov    BYTE PTR [rbp-0x20],al
  405a7f:	movzx  eax,BYTE PTR [rbp-0x20]
  405a83:	test   al,al
  405a85:	jne    405a91 <_start@@Base+0x17e1>
  405a87:	mov    rax,QWORD PTR [rbp-0x20]
  405a8b:	mov    rdx,QWORD PTR [rbp-0x18]
  405a8f:	jmp    405ab0 <_start@@Base+0x1800>
  405a91:	mov    rax,QWORD PTR [rbp-0x38]
  405a95:	mov    rdx,QWORD PTR [rbp-0x48]
  405a99:	mov    rsi,rdx
  405a9c:	mov    rdi,rax
  405a9f:	call   4049a3 <_start@@Base+0x6f3>
  405aa4:	mov    QWORD PTR [rbp-0x18],rax
  405aa8:	mov    rax,QWORD PTR [rbp-0x20]
  405aac:	mov    rdx,QWORD PTR [rbp-0x18]
  405ab0:	mov    rcx,rax
  405ab3:	mov    rbx,rdx
  405ab6:	mov    eax,ecx
  405ab8:	add    rsp,0x48
  405abc:	pop    rbx
  405abd:	pop    rbp
  405abe:	ret    
  405abf:	push   rbp
  405ac0:	mov    rbp,rsp
  405ac3:	mov    eax,edi
  405ac5:	mov    BYTE PTR [rbp-0x4],al
  405ac8:	movzx  eax,BYTE PTR [rbp-0x4]
  405acc:	cmp    eax,0x4
  405acf:	ja     405b18 <_start@@Base+0x1868>
  405ad1:	mov    eax,eax
  405ad3:	lea    rdx,[rax*4+0x0]
  405adb:	lea    rax,[rip+0x186be]        # 41e1a0 <_IO_stdin_used@@Base+0x1a0>
  405ae2:	mov    eax,DWORD PTR [rdx+rax*1]
  405ae5:	movsxd rdx,eax
  405ae8:	lea    rax,[rip+0x186b1]        # 41e1a0 <_IO_stdin_used@@Base+0x1a0>
  405aef:	add    rax,rdx
  405af2:	notrack jmp rax
  405af5:	mov    eax,0x1
  405afa:	jmp    405b1d <_start@@Base+0x186d>
  405afc:	mov    eax,0x1
  405b01:	jmp    405b1d <_start@@Base+0x186d>
  405b03:	mov    eax,0x1
  405b08:	jmp    405b1d <_start@@Base+0x186d>
  405b0a:	mov    eax,0x1
  405b0f:	jmp    405b1d <_start@@Base+0x186d>
  405b11:	mov    eax,0x1
  405b16:	jmp    405b1d <_start@@Base+0x186d>
  405b18:	mov    eax,0x0
  405b1d:	pop    rbp
  405b1e:	ret    
  405b1f:	push   rbp
  405b20:	mov    rbp,rsp
  405b23:	sub    rsp,0x10
  405b27:	mov    QWORD PTR [rbp-0x8],rdi
  405b2b:	mov    QWORD PTR [rbp-0x10],rsi
  405b2f:	cmp    QWORD PTR [rbp-0x8],0x0
  405b34:	je     405b64 <_start@@Base+0x18b4>
  405b36:	mov    rdx,QWORD PTR [rbp-0x10]
  405b3a:	mov    rax,QWORD PTR [rbp-0x8]
  405b3e:	mov    rsi,rdx
  405b41:	mov    rdi,rax
  405b44:	call   405544 <_start@@Base+0x1294>
  405b49:	test   eax,eax
  405b4b:	je     405b64 <_start@@Base+0x18b4>
  405b4d:	mov    rax,QWORD PTR [rbp-0x8]
  405b51:	mov    rdi,rax
  405b54:	call   4046e9 <_start@@Base+0x439>
  405b59:	mov    edx,eax
  405b5b:	mov    rax,QWORD PTR [rbp-0x8]
  405b5f:	add    rax,rdx
  405b62:	jmp    405b69 <_start@@Base+0x18b9>
  405b64:	mov    eax,0x0
  405b69:	leave  
  405b6a:	ret    
  405b6b:	push   rbp
  405b6c:	mov    rbp,rsp
  405b6f:	sub    rsp,0x10
  405b73:	mov    QWORD PTR [rbp-0x8],rdi
  405b77:	mov    DWORD PTR [rbp-0xc],esi
  405b7a:	cmp    QWORD PTR [rbp-0x8],0x0
  405b7f:	je     405bad <_start@@Base+0x18fd>
  405b81:	mov    edx,DWORD PTR [rbp-0xc]
  405b84:	mov    rax,QWORD PTR [rbp-0x8]
  405b88:	mov    esi,edx
  405b8a:	mov    rdi,rax
  405b8d:	call   4055e1 <_start@@Base+0x1331>
  405b92:	test   eax,eax
  405b94:	je     405bad <_start@@Base+0x18fd>
  405b96:	mov    rax,QWORD PTR [rbp-0x8]
  405b9a:	mov    rdi,rax
  405b9d:	call   4046e9 <_start@@Base+0x439>
  405ba2:	mov    edx,eax
  405ba4:	mov    rax,QWORD PTR [rbp-0x8]
  405ba8:	add    rax,rdx
  405bab:	jmp    405bb2 <_start@@Base+0x1902>
  405bad:	mov    eax,0x0
  405bb2:	leave  
  405bb3:	ret    
  405bb4:	push   rbp
  405bb5:	mov    rbp,rsp
  405bb8:	sub    rsp,0x20
  405bbc:	mov    QWORD PTR [rbp-0x18],rdi
  405bc0:	lea    rax,[rip+0x185ad]        # 41e174 <_IO_stdin_used@@Base+0x174>
  405bc7:	mov    QWORD PTR [rbp-0x8],rax
  405bcb:	cmp    QWORD PTR [rbp-0x18],0x0
  405bd0:	je     405c00 <_start@@Base+0x1950>
  405bd2:	mov    rdx,QWORD PTR [rbp-0x8]
  405bd6:	mov    rax,QWORD PTR [rbp-0x18]
  405bda:	mov    rsi,rdx
  405bdd:	mov    rdi,rax
  405be0:	call   405544 <_start@@Base+0x1294>
  405be5:	test   eax,eax
  405be7:	je     405c00 <_start@@Base+0x1950>
  405be9:	mov    rax,QWORD PTR [rbp-0x18]
  405bed:	mov    rdi,rax
  405bf0:	call   4046e9 <_start@@Base+0x439>
  405bf5:	mov    edx,eax
  405bf7:	mov    rax,QWORD PTR [rbp-0x18]
  405bfb:	add    rax,rdx
  405bfe:	jmp    405c05 <_start@@Base+0x1955>
  405c00:	mov    eax,0x0
  405c05:	leave  
  405c06:	ret    
  405c07:	push   rbp
  405c08:	mov    rbp,rsp
  405c0b:	sub    rsp,0x8
  405c0f:	mov    QWORD PTR [rbp-0x8],rdi
  405c13:	cmp    QWORD PTR [rbp-0x8],0x0
  405c18:	je     405c46 <_start@@Base+0x1996>
  405c1a:	mov    rax,QWORD PTR [rbp-0x8]
  405c1e:	mov    esi,0xb0dd37b6
  405c23:	mov    rdi,rax
  405c26:	call   4055e1 <_start@@Base+0x1331>
  405c2b:	test   eax,eax
  405c2d:	je     405c46 <_start@@Base+0x1996>
  405c2f:	mov    rax,QWORD PTR [rbp-0x8]
  405c33:	mov    rdi,rax
  405c36:	call   4046e9 <_start@@Base+0x439>
  405c3b:	mov    edx,eax
  405c3d:	mov    rax,QWORD PTR [rbp-0x8]
  405c41:	add    rax,rdx
  405c44:	jmp    405c4b <_start@@Base+0x199b>
  405c46:	mov    eax,0x0
  405c4b:	leave  
  405c4c:	ret    
  405c4d:	push   rbp
  405c4e:	mov    rbp,rsp
  405c51:	sub    rsp,0x20
  405c55:	mov    QWORD PTR [rbp-0x18],rdi
  405c59:	mov    WORD PTR [rbp-0xc],0x0
  405c5f:	cmp    QWORD PTR [rbp-0x18],0x0
  405c64:	jne    405c85 <_start@@Base+0x19d5>
  405c66:	lea    rcx,[rip+0x1b9d3]        # 421640 <_IO_stdin_used@@Base+0x3640>
  405c6d:	mov    edx,0x239
  405c72:	lea    rsi,[rip+0x1847f]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405c79:	lea    rdi,[rip+0x18538]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  405c80:	call   4041f0 <__assert_fail@plt>
  405c85:	mov    WORD PTR [rbp-0xa],0x0
  405c8b:	mov    rax,QWORD PTR [rbp-0x18]
  405c8f:	mov    rdi,rax
  405c92:	call   404734 <_start@@Base+0x484>
  405c97:	cdqe   
  405c99:	neg    rax
  405c9c:	mov    rdx,rax
  405c9f:	mov    rax,QWORD PTR [rbp-0x18]
  405ca3:	add    rax,rdx
  405ca6:	mov    QWORD PTR [rbp-0x8],rax
  405caa:	mov    rax,QWORD PTR [rbp-0x8]
  405cae:	mov    rdi,rax
  405cb1:	call   40475f <_start@@Base+0x4af>
  405cb6:	movzx  eax,ax
  405cb9:	movzx  edx,WORD PTR [rbp-0xa]
  405cbd:	add    edx,0x3
  405cc0:	movsxd rdx,edx
  405cc3:	add    rdx,rdx
  405cc6:	cmp    rax,rdx
  405cc9:	jb     405cea <_start@@Base+0x1a3a>
  405ccb:	movzx  eax,WORD PTR [rbp-0xa]
  405ccf:	add    rax,0x2
  405cd3:	lea    rdx,[rax+rax*1]
  405cd7:	mov    rax,QWORD PTR [rbp-0x8]
  405cdb:	add    rax,rdx
  405cde:	mov    rdi,rax
  405ce1:	call   40475f <_start@@Base+0x4af>
  405ce6:	mov    WORD PTR [rbp-0xc],ax
  405cea:	cmp    WORD PTR [rbp-0xc],0x0
  405cef:	je     405cfe <_start@@Base+0x1a4e>
  405cf1:	movzx  edx,WORD PTR [rbp-0xc]
  405cf5:	mov    rax,QWORD PTR [rbp-0x18]
  405cf9:	add    rax,rdx
  405cfc:	jmp    405d03 <_start@@Base+0x1a53>
  405cfe:	mov    eax,0x0
  405d03:	leave  
  405d04:	ret    
  405d05:	push   rbp
  405d06:	mov    rbp,rsp
  405d09:	sub    rsp,0x20
  405d0d:	mov    QWORD PTR [rbp-0x18],rdi
  405d11:	mov    WORD PTR [rbp-0xc],0x0
  405d17:	cmp    QWORD PTR [rbp-0x18],0x0
  405d1c:	jne    405d3d <_start@@Base+0x1a8d>
  405d1e:	lea    rcx,[rip+0x1bffb]        # 421d20 <_IO_stdin_used@@Base+0x3d20>
  405d25:	mov    edx,0x243
  405d2a:	lea    rsi,[rip+0x183c7]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405d31:	lea    rdi,[rip+0x18480]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  405d38:	call   4041f0 <__assert_fail@plt>
  405d3d:	mov    WORD PTR [rbp-0xa],0x0
  405d43:	mov    rax,QWORD PTR [rbp-0x18]
  405d47:	mov    rdi,rax
  405d4a:	call   404734 <_start@@Base+0x484>
  405d4f:	cdqe   
  405d51:	neg    rax
  405d54:	mov    rdx,rax
  405d57:	mov    rax,QWORD PTR [rbp-0x18]
  405d5b:	add    rax,rdx
  405d5e:	mov    QWORD PTR [rbp-0x8],rax
  405d62:	mov    rax,QWORD PTR [rbp-0x8]
  405d66:	mov    rdi,rax
  405d69:	call   40475f <_start@@Base+0x4af>
  405d6e:	movzx  eax,ax
  405d71:	movzx  edx,WORD PTR [rbp-0xa]
  405d75:	add    edx,0x3
  405d78:	movsxd rdx,edx
  405d7b:	add    rdx,rdx
  405d7e:	cmp    rax,rdx
  405d81:	jb     405da2 <_start@@Base+0x1af2>
  405d83:	movzx  eax,WORD PTR [rbp-0xa]
  405d87:	add    rax,0x2
  405d8b:	lea    rdx,[rax+rax*1]
  405d8f:	mov    rax,QWORD PTR [rbp-0x8]
  405d93:	add    rax,rdx
  405d96:	mov    rdi,rax
  405d99:	call   40475f <_start@@Base+0x4af>
  405d9e:	mov    WORD PTR [rbp-0xc],ax
  405da2:	cmp    WORD PTR [rbp-0xc],0x0
  405da7:	je     405dbe <_start@@Base+0x1b0e>
  405da9:	movzx  edx,WORD PTR [rbp-0xc]
  405dad:	mov    rax,QWORD PTR [rbp-0x18]
  405db1:	add    rax,rdx
  405db4:	mov    rdi,rax
  405db7:	call   40568b <_start@@Base+0x13db>
  405dbc:	jmp    405dc3 <_start@@Base+0x1b13>
  405dbe:	mov    eax,0x2
  405dc3:	leave  
  405dc4:	ret    
  405dc5:	push   rbp
  405dc6:	mov    rbp,rsp
  405dc9:	sub    rsp,0x20
  405dcd:	mov    QWORD PTR [rbp-0x18],rdi
  405dd1:	mov    WORD PTR [rbp-0xc],0x0
  405dd7:	cmp    QWORD PTR [rbp-0x18],0x0
  405ddc:	jne    405dfd <_start@@Base+0x1b4d>
  405dde:	lea    rcx,[rip+0x1bc9b]        # 421a80 <_IO_stdin_used@@Base+0x3a80>
  405de5:	mov    edx,0x25f
  405dea:	lea    rsi,[rip+0x18307]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405df1:	lea    rdi,[rip+0x183c0]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  405df8:	call   4041f0 <__assert_fail@plt>
  405dfd:	mov    WORD PTR [rbp-0xa],0x0
  405e03:	mov    rax,QWORD PTR [rbp-0x18]
  405e07:	mov    rdi,rax
  405e0a:	call   404734 <_start@@Base+0x484>
  405e0f:	cdqe   
  405e11:	neg    rax
  405e14:	mov    rdx,rax
  405e17:	mov    rax,QWORD PTR [rbp-0x18]
  405e1b:	add    rax,rdx
  405e1e:	mov    QWORD PTR [rbp-0x8],rax
  405e22:	mov    rax,QWORD PTR [rbp-0x8]
  405e26:	mov    rdi,rax
  405e29:	call   40475f <_start@@Base+0x4af>
  405e2e:	movzx  eax,ax
  405e31:	movzx  edx,WORD PTR [rbp-0xa]
  405e35:	add    edx,0x3
  405e38:	movsxd rdx,edx
  405e3b:	add    rdx,rdx
  405e3e:	cmp    rax,rdx
  405e41:	jb     405e62 <_start@@Base+0x1bb2>
  405e43:	movzx  eax,WORD PTR [rbp-0xa]
  405e47:	add    rax,0x2
  405e4b:	lea    rdx,[rax+rax*1]
  405e4f:	mov    rax,QWORD PTR [rbp-0x8]
  405e53:	add    rax,rdx
  405e56:	mov    rdi,rax
  405e59:	call   40475f <_start@@Base+0x4af>
  405e5e:	mov    WORD PTR [rbp-0xc],ax
  405e62:	cmp    WORD PTR [rbp-0xc],0x0
  405e67:	setne  al
  405e6a:	movzx  eax,al
  405e6d:	leave  
  405e6e:	ret    
  405e6f:	push   rbp
  405e70:	mov    rbp,rsp
  405e73:	sub    rsp,0x20
  405e77:	mov    QWORD PTR [rbp-0x18],rdi
  405e7b:	mov    WORD PTR [rbp-0xc],0x0
  405e81:	cmp    QWORD PTR [rbp-0x18],0x0
  405e86:	jne    405ea7 <_start@@Base+0x1bf7>
  405e88:	lea    rcx,[rip+0x1bd61]        # 421bf0 <_IO_stdin_used@@Base+0x3bf0>
  405e8f:	mov    edx,0x260
  405e94:	lea    rsi,[rip+0x1825d]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405e9b:	lea    rdi,[rip+0x18316]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  405ea2:	call   4041f0 <__assert_fail@plt>
  405ea7:	mov    WORD PTR [rbp-0xa],0x1
  405ead:	mov    rax,QWORD PTR [rbp-0x18]
  405eb1:	mov    rdi,rax
  405eb4:	call   404734 <_start@@Base+0x484>
  405eb9:	cdqe   
  405ebb:	neg    rax
  405ebe:	mov    rdx,rax
  405ec1:	mov    rax,QWORD PTR [rbp-0x18]
  405ec5:	add    rax,rdx
  405ec8:	mov    QWORD PTR [rbp-0x8],rax
  405ecc:	mov    rax,QWORD PTR [rbp-0x8]
  405ed0:	mov    rdi,rax
  405ed3:	call   40475f <_start@@Base+0x4af>
  405ed8:	movzx  eax,ax
  405edb:	movzx  edx,WORD PTR [rbp-0xa]
  405edf:	add    edx,0x3
  405ee2:	movsxd rdx,edx
  405ee5:	add    rdx,rdx
  405ee8:	cmp    rax,rdx
  405eeb:	jb     405f0c <_start@@Base+0x1c5c>
  405eed:	movzx  eax,WORD PTR [rbp-0xa]
  405ef1:	add    rax,0x2
  405ef5:	lea    rdx,[rax+rax*1]
  405ef9:	mov    rax,QWORD PTR [rbp-0x8]
  405efd:	add    rax,rdx
  405f00:	mov    rdi,rax
  405f03:	call   40475f <_start@@Base+0x4af>
  405f08:	mov    WORD PTR [rbp-0xc],ax
  405f0c:	cmp    WORD PTR [rbp-0xc],0x0
  405f11:	je     405f28 <_start@@Base+0x1c78>
  405f13:	movzx  edx,WORD PTR [rbp-0xc]
  405f17:	mov    rax,QWORD PTR [rbp-0x18]
  405f1b:	add    rax,rdx
  405f1e:	mov    rdi,rax
  405f21:	call   404547 <_start@@Base+0x297>
  405f26:	jmp    405f2d <_start@@Base+0x1c7d>
  405f28:	mov    eax,0x0
  405f2d:	leave  
  405f2e:	ret    
  405f2f:	push   rbp
  405f30:	mov    rbp,rsp
  405f33:	sub    rsp,0x20
  405f37:	mov    QWORD PTR [rbp-0x18],rdi
  405f3b:	mov    WORD PTR [rbp-0xc],0x0
  405f41:	cmp    QWORD PTR [rbp-0x18],0x0
  405f46:	jne    405f67 <_start@@Base+0x1cb7>
  405f48:	lea    rcx,[rip+0x1bb71]        # 421ac0 <_IO_stdin_used@@Base+0x3ac0>
  405f4f:	mov    edx,0x260
  405f54:	lea    rsi,[rip+0x1819d]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  405f5b:	lea    rdi,[rip+0x18256]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  405f62:	call   4041f0 <__assert_fail@plt>
  405f67:	mov    WORD PTR [rbp-0xa],0x1
  405f6d:	mov    rax,QWORD PTR [rbp-0x18]
  405f71:	mov    rdi,rax
  405f74:	call   404734 <_start@@Base+0x484>
  405f79:	cdqe   
  405f7b:	neg    rax
  405f7e:	mov    rdx,rax
  405f81:	mov    rax,QWORD PTR [rbp-0x18]
  405f85:	add    rax,rdx
  405f88:	mov    QWORD PTR [rbp-0x8],rax
  405f8c:	mov    rax,QWORD PTR [rbp-0x8]
  405f90:	mov    rdi,rax
  405f93:	call   40475f <_start@@Base+0x4af>
  405f98:	movzx  eax,ax
  405f9b:	movzx  edx,WORD PTR [rbp-0xa]
  405f9f:	add    edx,0x3
  405fa2:	movsxd rdx,edx
  405fa5:	add    rdx,rdx
  405fa8:	cmp    rax,rdx
  405fab:	jb     405fcc <_start@@Base+0x1d1c>
  405fad:	movzx  eax,WORD PTR [rbp-0xa]
  405fb1:	add    rax,0x2
  405fb5:	lea    rdx,[rax+rax*1]
  405fb9:	mov    rax,QWORD PTR [rbp-0x8]
  405fbd:	add    rax,rdx
  405fc0:	mov    rdi,rax
  405fc3:	call   40475f <_start@@Base+0x4af>
  405fc8:	mov    WORD PTR [rbp-0xc],ax
  405fcc:	cmp    WORD PTR [rbp-0xc],0x0
  405fd1:	setne  al
  405fd4:	movzx  eax,al
  405fd7:	leave  
  405fd8:	ret    
  405fd9:	push   rbp
  405fda:	mov    rbp,rsp
  405fdd:	sub    rsp,0x20
  405fe1:	mov    QWORD PTR [rbp-0x18],rdi
  405fe5:	mov    WORD PTR [rbp-0xc],0x0
  405feb:	cmp    QWORD PTR [rbp-0x18],0x0
  405ff0:	jne    406011 <_start@@Base+0x1d61>
  405ff2:	lea    rcx,[rip+0x1bb07]        # 421b00 <_IO_stdin_used@@Base+0x3b00>
  405ff9:	mov    edx,0x261
  405ffe:	lea    rsi,[rip+0x180f3]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406005:	lea    rdi,[rip+0x181ac]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  40600c:	call   4041f0 <__assert_fail@plt>
  406011:	mov    WORD PTR [rbp-0xa],0x2
  406017:	mov    rax,QWORD PTR [rbp-0x18]
  40601b:	mov    rdi,rax
  40601e:	call   404734 <_start@@Base+0x484>
  406023:	cdqe   
  406025:	neg    rax
  406028:	mov    rdx,rax
  40602b:	mov    rax,QWORD PTR [rbp-0x18]
  40602f:	add    rax,rdx
  406032:	mov    QWORD PTR [rbp-0x8],rax
  406036:	mov    rax,QWORD PTR [rbp-0x8]
  40603a:	mov    rdi,rax
  40603d:	call   40475f <_start@@Base+0x4af>
  406042:	movzx  eax,ax
  406045:	movzx  edx,WORD PTR [rbp-0xa]
  406049:	add    edx,0x3
  40604c:	movsxd rdx,edx
  40604f:	add    rdx,rdx
  406052:	cmp    rax,rdx
  406055:	jb     406076 <_start@@Base+0x1dc6>
  406057:	movzx  eax,WORD PTR [rbp-0xa]
  40605b:	add    rax,0x2
  40605f:	lea    rdx,[rax+rax*1]
  406063:	mov    rax,QWORD PTR [rbp-0x8]
  406067:	add    rax,rdx
  40606a:	mov    rdi,rax
  40606d:	call   40475f <_start@@Base+0x4af>
  406072:	mov    WORD PTR [rbp-0xc],ax
  406076:	cmp    WORD PTR [rbp-0xc],0x0
  40607b:	setne  al
  40607e:	movzx  eax,al
  406081:	leave  
  406082:	ret    
  406083:	push   rbp
  406084:	mov    rbp,rsp
  406087:	sub    rsp,0x30
  40608b:	mov    QWORD PTR [rbp-0x28],rdi
  40608f:	mov    WORD PTR [rbp-0x14],0x0
  406095:	cmp    QWORD PTR [rbp-0x28],0x0
  40609a:	jne    4060bb <_start@@Base+0x1e0b>
  40609c:	lea    rcx,[rip+0x1bc1d]        # 421cc0 <_IO_stdin_used@@Base+0x3cc0>
  4060a3:	mov    edx,0x26d
  4060a8:	lea    rsi,[rip+0x18049]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4060af:	lea    rdi,[rip+0x18102]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4060b6:	call   4041f0 <__assert_fail@plt>
  4060bb:	mov    WORD PTR [rbp-0x12],0x2
  4060c1:	mov    rax,QWORD PTR [rbp-0x28]
  4060c5:	mov    rdi,rax
  4060c8:	call   404734 <_start@@Base+0x484>
  4060cd:	cdqe   
  4060cf:	neg    rax
  4060d2:	mov    rdx,rax
  4060d5:	mov    rax,QWORD PTR [rbp-0x28]
  4060d9:	add    rax,rdx
  4060dc:	mov    QWORD PTR [rbp-0x10],rax
  4060e0:	mov    rax,QWORD PTR [rbp-0x10]
  4060e4:	mov    rdi,rax
  4060e7:	call   40475f <_start@@Base+0x4af>
  4060ec:	movzx  eax,ax
  4060ef:	movzx  edx,WORD PTR [rbp-0x12]
  4060f3:	add    edx,0x3
  4060f6:	movsxd rdx,edx
  4060f9:	add    rdx,rdx
  4060fc:	cmp    rax,rdx
  4060ff:	jb     406120 <_start@@Base+0x1e70>
  406101:	movzx  eax,WORD PTR [rbp-0x12]
  406105:	add    rax,0x2
  406109:	lea    rdx,[rax+rax*1]
  40610d:	mov    rax,QWORD PTR [rbp-0x10]
  406111:	add    rax,rdx
  406114:	mov    rdi,rax
  406117:	call   40475f <_start@@Base+0x4af>
  40611c:	mov    WORD PTR [rbp-0x14],ax
  406120:	cmp    WORD PTR [rbp-0x14],0x0
  406125:	je     406151 <_start@@Base+0x1ea1>
  406127:	movzx  edx,WORD PTR [rbp-0x14]
  40612b:	mov    rax,QWORD PTR [rbp-0x28]
  40612f:	add    rax,rdx
  406132:	mov    QWORD PTR [rbp-0x8],rax
  406136:	mov    rax,QWORD PTR [rbp-0x8]
  40613a:	mov    rdi,rax
  40613d:	call   4046e9 <_start@@Base+0x439>
  406142:	mov    eax,eax
  406144:	lea    rdx,[rax+0x4]
  406148:	mov    rax,QWORD PTR [rbp-0x8]
  40614c:	add    rax,rdx
  40614f:	jmp    406156 <_start@@Base+0x1ea6>
  406151:	mov    eax,0x0
  406156:	leave  
  406157:	ret    
  406158:	push   rbp
  406159:	mov    rbp,rsp
  40615c:	sub    rsp,0x30
  406160:	mov    QWORD PTR [rbp-0x28],rdi
  406164:	mov    WORD PTR [rbp-0x14],0x0
  40616a:	cmp    QWORD PTR [rbp-0x28],0x0
  40616f:	jne    406190 <_start@@Base+0x1ee0>
  406171:	lea    rcx,[rip+0x1bb68]        # 421ce0 <_IO_stdin_used@@Base+0x3ce0>
  406178:	mov    edx,0x26d
  40617d:	lea    rsi,[rip+0x17f74]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406184:	lea    rdi,[rip+0x1802d]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  40618b:	call   4041f0 <__assert_fail@plt>
  406190:	mov    WORD PTR [rbp-0x12],0x3
  406196:	mov    rax,QWORD PTR [rbp-0x28]
  40619a:	mov    rdi,rax
  40619d:	call   404734 <_start@@Base+0x484>
  4061a2:	cdqe   
  4061a4:	neg    rax
  4061a7:	mov    rdx,rax
  4061aa:	mov    rax,QWORD PTR [rbp-0x28]
  4061ae:	add    rax,rdx
  4061b1:	mov    QWORD PTR [rbp-0x10],rax
  4061b5:	mov    rax,QWORD PTR [rbp-0x10]
  4061b9:	mov    rdi,rax
  4061bc:	call   40475f <_start@@Base+0x4af>
  4061c1:	movzx  eax,ax
  4061c4:	movzx  edx,WORD PTR [rbp-0x12]
  4061c8:	add    edx,0x3
  4061cb:	movsxd rdx,edx
  4061ce:	add    rdx,rdx
  4061d1:	cmp    rax,rdx
  4061d4:	jb     4061f5 <_start@@Base+0x1f45>
  4061d6:	movzx  eax,WORD PTR [rbp-0x12]
  4061da:	add    rax,0x2
  4061de:	lea    rdx,[rax+rax*1]
  4061e2:	mov    rax,QWORD PTR [rbp-0x10]
  4061e6:	add    rax,rdx
  4061e9:	mov    rdi,rax
  4061ec:	call   40475f <_start@@Base+0x4af>
  4061f1:	mov    WORD PTR [rbp-0x14],ax
  4061f5:	cmp    WORD PTR [rbp-0x14],0x0
  4061fa:	je     406226 <_start@@Base+0x1f76>
  4061fc:	movzx  edx,WORD PTR [rbp-0x14]
  406200:	mov    rax,QWORD PTR [rbp-0x28]
  406204:	add    rax,rdx
  406207:	mov    QWORD PTR [rbp-0x8],rax
  40620b:	mov    rax,QWORD PTR [rbp-0x8]
  40620f:	mov    rdi,rax
  406212:	call   4046e9 <_start@@Base+0x439>
  406217:	mov    eax,eax
  406219:	lea    rdx,[rax+0x4]
  40621d:	mov    rax,QWORD PTR [rbp-0x8]
  406221:	add    rax,rdx
  406224:	jmp    40622b <_start@@Base+0x1f7b>
  406226:	mov    eax,0x0
  40622b:	leave  
  40622c:	ret    
  40622d:	push   rbp
  40622e:	mov    rbp,rsp
  406231:	sub    rsp,0x20
  406235:	mov    QWORD PTR [rbp-0x18],rdi
  406239:	mov    WORD PTR [rbp-0xc],0x0
  40623f:	cmp    QWORD PTR [rbp-0x18],0x0
  406244:	jne    406265 <_start@@Base+0x1fb5>
  406246:	lea    rcx,[rip+0x1ba33]        # 421c80 <_IO_stdin_used@@Base+0x3c80>
  40624d:	mov    edx,0x26d
  406252:	lea    rsi,[rip+0x17e9f]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406259:	lea    rdi,[rip+0x17f58]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  406260:	call   4041f0 <__assert_fail@plt>
  406265:	mov    WORD PTR [rbp-0xa],0x3
  40626b:	mov    rax,QWORD PTR [rbp-0x18]
  40626f:	mov    rdi,rax
  406272:	call   404734 <_start@@Base+0x484>
  406277:	cdqe   
  406279:	neg    rax
  40627c:	mov    rdx,rax
  40627f:	mov    rax,QWORD PTR [rbp-0x18]
  406283:	add    rax,rdx
  406286:	mov    QWORD PTR [rbp-0x8],rax
  40628a:	mov    rax,QWORD PTR [rbp-0x8]
  40628e:	mov    rdi,rax
  406291:	call   40475f <_start@@Base+0x4af>
  406296:	movzx  eax,ax
  406299:	movzx  edx,WORD PTR [rbp-0xa]
  40629d:	add    edx,0x3
  4062a0:	movsxd rdx,edx
  4062a3:	add    rdx,rdx
  4062a6:	cmp    rax,rdx
  4062a9:	jb     4062ca <_start@@Base+0x201a>
  4062ab:	movzx  eax,WORD PTR [rbp-0xa]
  4062af:	add    rax,0x2
  4062b3:	lea    rdx,[rax+rax*1]
  4062b7:	mov    rax,QWORD PTR [rbp-0x8]
  4062bb:	add    rax,rdx
  4062be:	mov    rdi,rax
  4062c1:	call   40475f <_start@@Base+0x4af>
  4062c6:	mov    WORD PTR [rbp-0xc],ax
  4062ca:	cmp    WORD PTR [rbp-0xc],0x0
  4062cf:	setne  al
  4062d2:	movzx  eax,al
  4062d5:	leave  
  4062d6:	ret    
  4062d7:	push   rbp
  4062d8:	mov    rbp,rsp
  4062db:	push   rbx
  4062dc:	sub    rsp,0x28
  4062e0:	mov    QWORD PTR [rbp-0x28],rdi
  4062e4:	mov    rax,QWORD PTR [rbp-0x28]
  4062e8:	mov    rdi,rax
  4062eb:	call   406083 <_start@@Base+0x1dd3>
  4062f0:	mov    QWORD PTR [rbp-0x20],rax
  4062f4:	mov    rax,QWORD PTR [rbp-0x28]
  4062f8:	mov    rdi,rax
  4062fb:	call   406158 <_start@@Base+0x1ea8>
  406300:	mov    QWORD PTR [rbp-0x18],rax
  406304:	mov    rax,QWORD PTR [rbp-0x20]
  406308:	mov    rdi,rax
  40630b:	call   404876 <_start@@Base+0x5c6>
  406310:	mov    rbx,rax
  406313:	mov    rax,QWORD PTR [rbp-0x18]
  406317:	mov    rdi,rax
  40631a:	call   404876 <_start@@Base+0x5c6>
  40631f:	cmp    rbx,rax
  406322:	je     406343 <_start@@Base+0x2093>
  406324:	lea    rcx,[rip+0x1ba35]        # 421d60 <_IO_stdin_used@@Base+0x3d60>
  40632b:	mov    edx,0x26d
  406330:	lea    rsi,[rip+0x17dc1]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406337:	lea    rdi,[rip+0x17ea2]        # 41e1e0 <_IO_stdin_used@@Base+0x1e0>
  40633e:	call   4041f0 <__assert_fail@plt>
  406343:	mov    rax,QWORD PTR [rbp-0x20]
  406347:	mov    rdx,QWORD PTR [rbp-0x18]
  40634b:	add    rsp,0x28
  40634f:	pop    rbx
  406350:	pop    rbp
  406351:	ret    
  406352:	push   rbp
  406353:	mov    rbp,rsp
  406356:	sub    rsp,0x8
  40635a:	mov    QWORD PTR [rbp-0x8],rdi
  40635e:	cmp    QWORD PTR [rbp-0x8],0x0
  406363:	je     406379 <_start@@Base+0x20c9>
  406365:	mov    rax,QWORD PTR [rbp-0x8]
  406369:	sub    rax,0x4
  40636d:	mov    rdi,rax
  406370:	call   4046e9 <_start@@Base+0x439>
  406375:	mov    eax,eax
  406377:	jmp    40637e <_start@@Base+0x20ce>
  406379:	mov    eax,0x0
  40637e:	leave  
  40637f:	ret    
  406380:	push   rbp
  406381:	mov    rbp,rsp
  406384:	sub    rsp,0x20
  406388:	mov    QWORD PTR [rbp-0x18],rdi
  40638c:	mov    QWORD PTR [rbp-0x20],rsi
  406390:	mov    rax,QWORD PTR [rbp-0x20]
  406394:	lea    rdx,[rax*4+0x0]
  40639c:	mov    rax,QWORD PTR [rbp-0x18]
  4063a0:	add    rax,rdx
  4063a3:	mov    QWORD PTR [rbp-0x8],rax
  4063a7:	mov    rax,QWORD PTR [rbp-0x18]
  4063ab:	mov    rdi,rax
  4063ae:	call   404876 <_start@@Base+0x5c6>
  4063b3:	cmp    QWORD PTR [rbp-0x20],rax
  4063b7:	jb     4063d8 <_start@@Base+0x2128>
  4063b9:	lea    rcx,[rip+0x1b570]        # 421930 <_IO_stdin_used@@Base+0x3930>
  4063c0:	mov    edx,0x2b5
  4063c5:	lea    rsi,[rip+0x17d2c]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4063cc:	lea    rdi,[rip+0x17cdd]        # 41e0b0 <_IO_stdin_used@@Base+0xb0>
  4063d3:	call   4041f0 <__assert_fail@plt>
  4063d8:	mov    rax,QWORD PTR [rbp-0x8]
  4063dc:	mov    rdi,rax
  4063df:	call   4046e9 <_start@@Base+0x439>
  4063e4:	mov    edx,eax
  4063e6:	mov    rax,QWORD PTR [rbp-0x8]
  4063ea:	add    rax,rdx
  4063ed:	leave  
  4063ee:	ret    
  4063ef:	push   rbp
  4063f0:	mov    rbp,rsp
  4063f3:	sub    rsp,0x10
  4063f7:	mov    QWORD PTR [rbp-0x8],rdi
  4063fb:	mov    QWORD PTR [rbp-0x10],rsi
  4063ff:	cmp    QWORD PTR [rbp-0x8],0x0
  406404:	je     406434 <_start@@Base+0x2184>
  406406:	mov    rdx,QWORD PTR [rbp-0x10]
  40640a:	mov    rax,QWORD PTR [rbp-0x8]
  40640e:	mov    rsi,rdx
  406411:	mov    rdi,rax
  406414:	call   405544 <_start@@Base+0x1294>
  406419:	test   eax,eax
  40641b:	je     406434 <_start@@Base+0x2184>
  40641d:	mov    rax,QWORD PTR [rbp-0x8]
  406421:	mov    rdi,rax
  406424:	call   4046e9 <_start@@Base+0x439>
  406429:	mov    edx,eax
  40642b:	mov    rax,QWORD PTR [rbp-0x8]
  40642f:	add    rax,rdx
  406432:	jmp    406439 <_start@@Base+0x2189>
  406434:	mov    eax,0x0
  406439:	leave  
  40643a:	ret    
  40643b:	push   rbp
  40643c:	mov    rbp,rsp
  40643f:	sub    rsp,0x20
  406443:	mov    QWORD PTR [rbp-0x18],rdi
  406447:	lea    rax,[rip+0x17d26]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40644e:	mov    QWORD PTR [rbp-0x8],rax
  406452:	cmp    QWORD PTR [rbp-0x18],0x0
  406457:	je     406487 <_start@@Base+0x21d7>
  406459:	mov    rdx,QWORD PTR [rbp-0x8]
  40645d:	mov    rax,QWORD PTR [rbp-0x18]
  406461:	mov    rsi,rdx
  406464:	mov    rdi,rax
  406467:	call   405544 <_start@@Base+0x1294>
  40646c:	test   eax,eax
  40646e:	je     406487 <_start@@Base+0x21d7>
  406470:	mov    rax,QWORD PTR [rbp-0x18]
  406474:	mov    rdi,rax
  406477:	call   4046e9 <_start@@Base+0x439>
  40647c:	mov    edx,eax
  40647e:	mov    rax,QWORD PTR [rbp-0x18]
  406482:	add    rax,rdx
  406485:	jmp    40648c <_start@@Base+0x21dc>
  406487:	mov    eax,0x0
  40648c:	leave  
  40648d:	ret    
  40648e:	push   rbp
  40648f:	mov    rbp,rsp
  406492:	sub    rsp,0x20
  406496:	mov    QWORD PTR [rbp-0x18],rdi
  40649a:	mov    WORD PTR [rbp-0xc],0x0
  4064a0:	cmp    QWORD PTR [rbp-0x18],0x0
  4064a5:	jne    4064c6 <_start@@Base+0x2216>
  4064a7:	lea    rcx,[rip+0x1afe2]        # 421490 <_IO_stdin_used@@Base+0x3490>
  4064ae:	mov    edx,0x2b8
  4064b3:	lea    rsi,[rip+0x17c3e]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4064ba:	lea    rdi,[rip+0x17cf7]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4064c1:	call   4041f0 <__assert_fail@plt>
  4064c6:	mov    WORD PTR [rbp-0xa],0x0
  4064cc:	mov    rax,QWORD PTR [rbp-0x18]
  4064d0:	mov    rdi,rax
  4064d3:	call   404734 <_start@@Base+0x484>
  4064d8:	cdqe   
  4064da:	neg    rax
  4064dd:	mov    rdx,rax
  4064e0:	mov    rax,QWORD PTR [rbp-0x18]
  4064e4:	add    rax,rdx
  4064e7:	mov    QWORD PTR [rbp-0x8],rax
  4064eb:	mov    rax,QWORD PTR [rbp-0x8]
  4064ef:	mov    rdi,rax
  4064f2:	call   40475f <_start@@Base+0x4af>
  4064f7:	movzx  eax,ax
  4064fa:	movzx  edx,WORD PTR [rbp-0xa]
  4064fe:	add    edx,0x3
  406501:	movsxd rdx,edx
  406504:	add    rdx,rdx
  406507:	cmp    rax,rdx
  40650a:	jb     40652b <_start@@Base+0x227b>
  40650c:	movzx  eax,WORD PTR [rbp-0xa]
  406510:	add    rax,0x2
  406514:	lea    rdx,[rax+rax*1]
  406518:	mov    rax,QWORD PTR [rbp-0x8]
  40651c:	add    rax,rdx
  40651f:	mov    rdi,rax
  406522:	call   40475f <_start@@Base+0x4af>
  406527:	mov    WORD PTR [rbp-0xc],ax
  40652b:	cmp    WORD PTR [rbp-0xc],0x0
  406530:	je     40653f <_start@@Base+0x228f>
  406532:	movzx  edx,WORD PTR [rbp-0xc]
  406536:	mov    rax,QWORD PTR [rbp-0x18]
  40653a:	add    rax,rdx
  40653d:	jmp    406544 <_start@@Base+0x2294>
  40653f:	mov    eax,0x0
  406544:	leave  
  406545:	ret    
  406546:	push   rbp
  406547:	mov    rbp,rsp
  40654a:	sub    rsp,0x20
  40654e:	mov    QWORD PTR [rbp-0x18],rdi
  406552:	mov    WORD PTR [rbp-0xc],0x0
  406558:	cmp    QWORD PTR [rbp-0x18],0x0
  40655d:	jne    40657e <_start@@Base+0x22ce>
  40655f:	lea    rcx,[rip+0x1aefa]        # 421460 <_IO_stdin_used@@Base+0x3460>
  406566:	mov    edx,0x2b8
  40656b:	lea    rsi,[rip+0x17b86]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406572:	lea    rdi,[rip+0x17c3f]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  406579:	call   4041f0 <__assert_fail@plt>
  40657e:	mov    WORD PTR [rbp-0xa],0x0
  406584:	mov    rax,QWORD PTR [rbp-0x18]
  406588:	mov    rdi,rax
  40658b:	call   404734 <_start@@Base+0x484>
  406590:	cdqe   
  406592:	neg    rax
  406595:	mov    rdx,rax
  406598:	mov    rax,QWORD PTR [rbp-0x18]
  40659c:	add    rax,rdx
  40659f:	mov    QWORD PTR [rbp-0x8],rax
  4065a3:	mov    rax,QWORD PTR [rbp-0x8]
  4065a7:	mov    rdi,rax
  4065aa:	call   40475f <_start@@Base+0x4af>
  4065af:	movzx  eax,ax
  4065b2:	movzx  edx,WORD PTR [rbp-0xa]
  4065b6:	add    edx,0x3
  4065b9:	movsxd rdx,edx
  4065bc:	add    rdx,rdx
  4065bf:	cmp    rax,rdx
  4065c2:	jb     4065e3 <_start@@Base+0x2333>
  4065c4:	movzx  eax,WORD PTR [rbp-0xa]
  4065c8:	add    rax,0x2
  4065cc:	lea    rdx,[rax+rax*1]
  4065d0:	mov    rax,QWORD PTR [rbp-0x8]
  4065d4:	add    rax,rdx
  4065d7:	mov    rdi,rax
  4065da:	call   40475f <_start@@Base+0x4af>
  4065df:	mov    WORD PTR [rbp-0xc],ax
  4065e3:	cmp    WORD PTR [rbp-0xc],0x0
  4065e8:	setne  al
  4065eb:	movzx  eax,al
  4065ee:	leave  
  4065ef:	ret    
  4065f0:	push   rbp
  4065f1:	mov    rbp,rsp
  4065f4:	sub    rsp,0x20
  4065f8:	mov    QWORD PTR [rbp-0x18],rdi
  4065fc:	mov    WORD PTR [rbp-0xc],0x0
  406602:	cmp    QWORD PTR [rbp-0x18],0x0
  406607:	jne    406628 <_start@@Base+0x2378>
  406609:	lea    rcx,[rip+0x1adf0]        # 421400 <_IO_stdin_used@@Base+0x3400>
  406610:	mov    edx,0x2b9
  406615:	lea    rsi,[rip+0x17adc]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40661c:	lea    rdi,[rip+0x17b95]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  406623:	call   4041f0 <__assert_fail@plt>
  406628:	mov    WORD PTR [rbp-0xa],0x2
  40662e:	mov    rax,QWORD PTR [rbp-0x18]
  406632:	mov    rdi,rax
  406635:	call   404734 <_start@@Base+0x484>
  40663a:	cdqe   
  40663c:	neg    rax
  40663f:	mov    rdx,rax
  406642:	mov    rax,QWORD PTR [rbp-0x18]
  406646:	add    rax,rdx
  406649:	mov    QWORD PTR [rbp-0x8],rax
  40664d:	mov    rax,QWORD PTR [rbp-0x8]
  406651:	mov    rdi,rax
  406654:	call   40475f <_start@@Base+0x4af>
  406659:	movzx  eax,ax
  40665c:	movzx  edx,WORD PTR [rbp-0xa]
  406660:	add    edx,0x3
  406663:	movsxd rdx,edx
  406666:	add    rdx,rdx
  406669:	cmp    rax,rdx
  40666c:	jb     40668d <_start@@Base+0x23dd>
  40666e:	movzx  eax,WORD PTR [rbp-0xa]
  406672:	add    rax,0x2
  406676:	lea    rdx,[rax+rax*1]
  40667a:	mov    rax,QWORD PTR [rbp-0x8]
  40667e:	add    rax,rdx
  406681:	mov    rdi,rax
  406684:	call   40475f <_start@@Base+0x4af>
  406689:	mov    WORD PTR [rbp-0xc],ax
  40668d:	cmp    WORD PTR [rbp-0xc],0x0
  406692:	je     4066a9 <_start@@Base+0x23f9>
  406694:	movzx  edx,WORD PTR [rbp-0xc]
  406698:	mov    rax,QWORD PTR [rbp-0x18]
  40669c:	add    rax,rdx
  40669f:	mov    rdi,rax
  4066a2:	call   4044db <_start@@Base+0x22b>
  4066a7:	jmp    4066ae <_start@@Base+0x23fe>
  4066a9:	mov    eax,0x64
  4066ae:	leave  
  4066af:	ret    
  4066b0:	push   rbp
  4066b1:	mov    rbp,rsp
  4066b4:	sub    rsp,0x20
  4066b8:	mov    QWORD PTR [rbp-0x18],rdi
  4066bc:	mov    WORD PTR [rbp-0xc],0x0
  4066c2:	cmp    QWORD PTR [rbp-0x18],0x0
  4066c7:	jne    4066e8 <_start@@Base+0x2438>
  4066c9:	lea    rcx,[rip+0x1ad50]        # 421420 <_IO_stdin_used@@Base+0x3420>
  4066d0:	mov    edx,0x2b9
  4066d5:	lea    rsi,[rip+0x17a1c]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4066dc:	lea    rdi,[rip+0x17ad5]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4066e3:	call   4041f0 <__assert_fail@plt>
  4066e8:	mov    WORD PTR [rbp-0xa],0x2
  4066ee:	mov    rax,QWORD PTR [rbp-0x18]
  4066f2:	mov    rdi,rax
  4066f5:	call   404734 <_start@@Base+0x484>
  4066fa:	cdqe   
  4066fc:	neg    rax
  4066ff:	mov    rdx,rax
  406702:	mov    rax,QWORD PTR [rbp-0x18]
  406706:	add    rax,rdx
  406709:	mov    QWORD PTR [rbp-0x8],rax
  40670d:	mov    rax,QWORD PTR [rbp-0x8]
  406711:	mov    rdi,rax
  406714:	call   40475f <_start@@Base+0x4af>
  406719:	movzx  eax,ax
  40671c:	movzx  edx,WORD PTR [rbp-0xa]
  406720:	add    edx,0x3
  406723:	movsxd rdx,edx
  406726:	add    rdx,rdx
  406729:	cmp    rax,rdx
  40672c:	jb     40674d <_start@@Base+0x249d>
  40672e:	movzx  eax,WORD PTR [rbp-0xa]
  406732:	add    rax,0x2
  406736:	lea    rdx,[rax+rax*1]
  40673a:	mov    rax,QWORD PTR [rbp-0x8]
  40673e:	add    rax,rdx
  406741:	mov    rdi,rax
  406744:	call   40475f <_start@@Base+0x4af>
  406749:	mov    WORD PTR [rbp-0xc],ax
  40674d:	cmp    WORD PTR [rbp-0xc],0x0
  406752:	setne  al
  406755:	movzx  eax,al
  406758:	leave  
  406759:	ret    
  40675a:	push   rbp
  40675b:	mov    rbp,rsp
  40675e:	sub    rsp,0x20
  406762:	mov    QWORD PTR [rbp-0x18],rdi
  406766:	mov    eax,esi
  406768:	mov    WORD PTR [rbp-0x1c],ax
  40676c:	mov    QWORD PTR [rbp-0x8],0x0
  406774:	jmp    4067b3 <_start@@Base+0x2503>
  406776:	mov    rdx,QWORD PTR [rbp-0x8]
  40677a:	mov    rax,QWORD PTR [rbp-0x18]
  40677e:	mov    rsi,rdx
  406781:	mov    rdi,rax
  406784:	call   406380 <_start@@Base+0x20d0>
  406789:	mov    rdi,rax
  40678c:	call   4065f0 <_start@@Base+0x2340>
  406791:	mov    WORD PTR [rbp-0xa],ax
  406795:	movzx  eax,WORD PTR [rbp-0xa]
  406799:	cmp    ax,WORD PTR [rbp-0x1c]
  40679d:	jl     4067af <_start@@Base+0x24ff>
  40679f:	movzx  eax,WORD PTR [rbp-0xa]
  4067a3:	cmp    ax,WORD PTR [rbp-0x1c]
  4067a7:	jg     4067af <_start@@Base+0x24ff>
  4067a9:	mov    rax,QWORD PTR [rbp-0x8]
  4067ad:	jmp    4067cc <_start@@Base+0x251c>
  4067af:	inc    QWORD PTR [rbp-0x8]
  4067b3:	mov    rax,QWORD PTR [rbp-0x18]
  4067b7:	mov    rdi,rax
  4067ba:	call   406352 <_start@@Base+0x20a2>
  4067bf:	cmp    QWORD PTR [rbp-0x8],rax
  4067c3:	jb     406776 <_start@@Base+0x24c6>
  4067c5:	mov    rax,QWORD PTR [rip+0x258fc]        # 42c0c8 <__data_start@@Base+0x10>
  4067cc:	leave  
  4067cd:	ret    
  4067ce:	push   rbp
  4067cf:	mov    rbp,rsp
  4067d2:	sub    rsp,0x30
  4067d6:	mov    QWORD PTR [rbp-0x18],rdi
  4067da:	mov    QWORD PTR [rbp-0x20],rsi
  4067de:	mov    QWORD PTR [rbp-0x28],rdx
  4067e2:	mov    eax,ecx
  4067e4:	mov    WORD PTR [rbp-0x2c],ax
  4067e8:	mov    rax,QWORD PTR [rbp-0x20]
  4067ec:	mov    QWORD PTR [rbp-0x8],rax
  4067f0:	jmp    40682f <_start@@Base+0x257f>
  4067f2:	mov    rdx,QWORD PTR [rbp-0x8]
  4067f6:	mov    rax,QWORD PTR [rbp-0x18]
  4067fa:	mov    rsi,rdx
  4067fd:	mov    rdi,rax
  406800:	call   406380 <_start@@Base+0x20d0>
  406805:	mov    rdi,rax
  406808:	call   4065f0 <_start@@Base+0x2340>
  40680d:	mov    WORD PTR [rbp-0xa],ax
  406811:	movzx  eax,WORD PTR [rbp-0xa]
  406815:	cmp    ax,WORD PTR [rbp-0x2c]
  406819:	jl     40682b <_start@@Base+0x257b>
  40681b:	movzx  eax,WORD PTR [rbp-0xa]
  40681f:	cmp    ax,WORD PTR [rbp-0x2c]
  406823:	jg     40682b <_start@@Base+0x257b>
  406825:	mov    rax,QWORD PTR [rbp-0x8]
  406829:	jmp    406860 <_start@@Base+0x25b0>
  40682b:	inc    QWORD PTR [rbp-0x8]
  40682f:	mov    rax,QWORD PTR [rbp-0x18]
  406833:	mov    rdi,rax
  406836:	call   406352 <_start@@Base+0x20a2>
  40683b:	cmp    QWORD PTR [rbp-0x28],rax
  40683f:	jb     40684f <_start@@Base+0x259f>
  406841:	mov    rax,QWORD PTR [rbp-0x18]
  406845:	mov    rdi,rax
  406848:	call   406352 <_start@@Base+0x20a2>
  40684d:	jmp    406853 <_start@@Base+0x25a3>
  40684f:	mov    rax,QWORD PTR [rbp-0x28]
  406853:	cmp    rax,QWORD PTR [rbp-0x8]
  406857:	ja     4067f2 <_start@@Base+0x2542>
  406859:	mov    rax,QWORD PTR [rip+0x25868]        # 42c0c8 <__data_start@@Base+0x10>
  406860:	leave  
  406861:	ret    
  406862:	push   rbp
  406863:	mov    rbp,rsp
  406866:	sub    rsp,0x20
  40686a:	mov    QWORD PTR [rbp-0x18],rdi
  40686e:	mov    eax,esi
  406870:	mov    WORD PTR [rbp-0x1c],ax
  406874:	mov    rax,QWORD PTR [rbp-0x18]
  406878:	mov    rdi,rax
  40687b:	call   406352 <_start@@Base+0x20a2>
  406880:	mov    QWORD PTR [rbp-0x8],rax
  406884:	jmp    4068bf <_start@@Base+0x260f>
  406886:	mov    rdx,QWORD PTR [rbp-0x8]
  40688a:	mov    rax,QWORD PTR [rbp-0x18]
  40688e:	mov    rsi,rdx
  406891:	mov    rdi,rax
  406894:	call   406380 <_start@@Base+0x20d0>
  406899:	mov    rdi,rax
  40689c:	call   4065f0 <_start@@Base+0x2340>
  4068a1:	mov    WORD PTR [rbp-0xa],ax
  4068a5:	movzx  eax,WORD PTR [rbp-0xa]
  4068a9:	cmp    ax,WORD PTR [rbp-0x1c]
  4068ad:	jl     4068bf <_start@@Base+0x260f>
  4068af:	movzx  eax,WORD PTR [rbp-0xa]
  4068b3:	cmp    ax,WORD PTR [rbp-0x1c]
  4068b7:	jg     4068bf <_start@@Base+0x260f>
  4068b9:	mov    rax,QWORD PTR [rbp-0x8]
  4068bd:	jmp    4068d7 <_start@@Base+0x2627>
  4068bf:	mov    rax,QWORD PTR [rbp-0x8]
  4068c3:	lea    rdx,[rax-0x1]
  4068c7:	mov    QWORD PTR [rbp-0x8],rdx
  4068cb:	test   rax,rax
  4068ce:	jne    406886 <_start@@Base+0x25d6>
  4068d0:	mov    rax,QWORD PTR [rip+0x257f1]        # 42c0c8 <__data_start@@Base+0x10>
  4068d7:	leave  
  4068d8:	ret    
  4068d9:	push   rbp
  4068da:	mov    rbp,rsp
  4068dd:	sub    rsp,0x30
  4068e1:	mov    QWORD PTR [rbp-0x18],rdi
  4068e5:	mov    QWORD PTR [rbp-0x20],rsi
  4068e9:	mov    QWORD PTR [rbp-0x28],rdx
  4068ed:	mov    eax,ecx
  4068ef:	mov    WORD PTR [rbp-0x2c],ax
  4068f3:	mov    rax,QWORD PTR [rbp-0x18]
  4068f7:	mov    rdi,rax
  4068fa:	call   406352 <_start@@Base+0x20a2>
  4068ff:	cmp    QWORD PTR [rbp-0x28],rax
  406903:	jb     406913 <_start@@Base+0x2663>
  406905:	mov    rax,QWORD PTR [rbp-0x18]
  406909:	mov    rdi,rax
  40690c:	call   406352 <_start@@Base+0x20a2>
  406911:	jmp    406917 <_start@@Base+0x2667>
  406913:	mov    rax,QWORD PTR [rbp-0x28]
  406917:	mov    QWORD PTR [rbp-0x8],rax
  40691b:	jmp    406956 <_start@@Base+0x26a6>
  40691d:	mov    rdx,QWORD PTR [rbp-0x8]
  406921:	mov    rax,QWORD PTR [rbp-0x18]
  406925:	mov    rsi,rdx
  406928:	mov    rdi,rax
  40692b:	call   406380 <_start@@Base+0x20d0>
  406930:	mov    rdi,rax
  406933:	call   4065f0 <_start@@Base+0x2340>
  406938:	mov    WORD PTR [rbp-0xa],ax
  40693c:	movzx  eax,WORD PTR [rbp-0xa]
  406940:	cmp    ax,WORD PTR [rbp-0x2c]
  406944:	jl     406956 <_start@@Base+0x26a6>
  406946:	movzx  eax,WORD PTR [rbp-0xa]
  40694a:	cmp    ax,WORD PTR [rbp-0x2c]
  40694e:	jg     406956 <_start@@Base+0x26a6>
  406950:	mov    rax,QWORD PTR [rbp-0x8]
  406954:	jmp    40696f <_start@@Base+0x26bf>
  406956:	mov    rax,QWORD PTR [rbp-0x8]
  40695a:	lea    rdx,[rax-0x1]
  40695e:	mov    QWORD PTR [rbp-0x8],rdx
  406962:	cmp    QWORD PTR [rbp-0x20],rax
  406966:	jb     40691d <_start@@Base+0x266d>
  406968:	mov    rax,QWORD PTR [rip+0x25759]        # 42c0c8 <__data_start@@Base+0x10>
  40696f:	leave  
  406970:	ret    
  406971:	push   rbp
  406972:	mov    rbp,rsp
  406975:	sub    rsp,0x20
  406979:	mov    QWORD PTR [rbp-0x18],rdi
  40697d:	mov    WORD PTR [rbp-0xc],0x0
  406983:	cmp    QWORD PTR [rbp-0x18],0x0
  406988:	jne    4069a9 <_start@@Base+0x26f9>
  40698a:	lea    rcx,[rip+0x1ad9f]        # 421730 <_IO_stdin_used@@Base+0x3730>
  406991:	mov    edx,0x2ba
  406996:	lea    rsi,[rip+0x1775b]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40699d:	lea    rdi,[rip+0x17814]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4069a4:	call   4041f0 <__assert_fail@plt>
  4069a9:	mov    WORD PTR [rbp-0xa],0x1
  4069af:	mov    rax,QWORD PTR [rbp-0x18]
  4069b3:	mov    rdi,rax
  4069b6:	call   404734 <_start@@Base+0x484>
  4069bb:	cdqe   
  4069bd:	neg    rax
  4069c0:	mov    rdx,rax
  4069c3:	mov    rax,QWORD PTR [rbp-0x18]
  4069c7:	add    rax,rdx
  4069ca:	mov    QWORD PTR [rbp-0x8],rax
  4069ce:	mov    rax,QWORD PTR [rbp-0x8]
  4069d2:	mov    rdi,rax
  4069d5:	call   40475f <_start@@Base+0x4af>
  4069da:	movzx  eax,ax
  4069dd:	movzx  edx,WORD PTR [rbp-0xa]
  4069e1:	add    edx,0x3
  4069e4:	movsxd rdx,edx
  4069e7:	add    rdx,rdx
  4069ea:	cmp    rax,rdx
  4069ed:	jb     406a0e <_start@@Base+0x275e>
  4069ef:	movzx  eax,WORD PTR [rbp-0xa]
  4069f3:	add    rax,0x2
  4069f7:	lea    rdx,[rax+rax*1]
  4069fb:	mov    rax,QWORD PTR [rbp-0x8]
  4069ff:	add    rax,rdx
  406a02:	mov    rdi,rax
  406a05:	call   40475f <_start@@Base+0x4af>
  406a0a:	mov    WORD PTR [rbp-0xc],ax
  406a0e:	cmp    WORD PTR [rbp-0xc],0x0
  406a13:	je     406a2a <_start@@Base+0x277a>
  406a15:	movzx  edx,WORD PTR [rbp-0xc]
  406a19:	mov    rax,QWORD PTR [rbp-0x18]
  406a1d:	add    rax,rdx
  406a20:	mov    rdi,rax
  406a23:	call   4044db <_start@@Base+0x22b>
  406a28:	jmp    406a2f <_start@@Base+0x277f>
  406a2a:	mov    eax,0x96
  406a2f:	leave  
  406a30:	ret    
  406a31:	push   rbp
  406a32:	mov    rbp,rsp
  406a35:	sub    rsp,0x20
  406a39:	mov    QWORD PTR [rbp-0x18],rdi
  406a3d:	mov    WORD PTR [rbp-0xc],0x0
  406a43:	cmp    QWORD PTR [rbp-0x18],0x0
  406a48:	jne    406a69 <_start@@Base+0x27b9>
  406a4a:	lea    rcx,[rip+0x1ad0f]        # 421760 <_IO_stdin_used@@Base+0x3760>
  406a51:	mov    edx,0x2ba
  406a56:	lea    rsi,[rip+0x1769b]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406a5d:	lea    rdi,[rip+0x17754]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  406a64:	call   4041f0 <__assert_fail@plt>
  406a69:	mov    WORD PTR [rbp-0xa],0x1
  406a6f:	mov    rax,QWORD PTR [rbp-0x18]
  406a73:	mov    rdi,rax
  406a76:	call   404734 <_start@@Base+0x484>
  406a7b:	cdqe   
  406a7d:	neg    rax
  406a80:	mov    rdx,rax
  406a83:	mov    rax,QWORD PTR [rbp-0x18]
  406a87:	add    rax,rdx
  406a8a:	mov    QWORD PTR [rbp-0x8],rax
  406a8e:	mov    rax,QWORD PTR [rbp-0x8]
  406a92:	mov    rdi,rax
  406a95:	call   40475f <_start@@Base+0x4af>
  406a9a:	movzx  eax,ax
  406a9d:	movzx  edx,WORD PTR [rbp-0xa]
  406aa1:	add    edx,0x3
  406aa4:	movsxd rdx,edx
  406aa7:	add    rdx,rdx
  406aaa:	cmp    rax,rdx
  406aad:	jb     406ace <_start@@Base+0x281e>
  406aaf:	movzx  eax,WORD PTR [rbp-0xa]
  406ab3:	add    rax,0x2
  406ab7:	lea    rdx,[rax+rax*1]
  406abb:	mov    rax,QWORD PTR [rbp-0x8]
  406abf:	add    rax,rdx
  406ac2:	mov    rdi,rax
  406ac5:	call   40475f <_start@@Base+0x4af>
  406aca:	mov    WORD PTR [rbp-0xc],ax
  406ace:	cmp    WORD PTR [rbp-0xc],0x0
  406ad3:	setne  al
  406ad6:	movzx  eax,al
  406ad9:	leave  
  406ada:	ret    
  406adb:	push   rbp
  406adc:	mov    rbp,rsp
  406adf:	sub    rsp,0x30
  406ae3:	mov    QWORD PTR [rbp-0x28],rdi
  406ae7:	mov    WORD PTR [rbp-0x14],0x0
  406aed:	cmp    QWORD PTR [rbp-0x28],0x0
  406af2:	jne    406b13 <_start@@Base+0x2863>
  406af4:	lea    rcx,[rip+0x1aeb5]        # 4219b0 <_IO_stdin_used@@Base+0x39b0>
  406afb:	mov    edx,0x2bb
  406b00:	lea    rsi,[rip+0x175f1]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406b07:	lea    rdi,[rip+0x176aa]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  406b0e:	call   4041f0 <__assert_fail@plt>
  406b13:	mov    WORD PTR [rbp-0x12],0x3
  406b19:	mov    rax,QWORD PTR [rbp-0x28]
  406b1d:	mov    rdi,rax
  406b20:	call   404734 <_start@@Base+0x484>
  406b25:	cdqe   
  406b27:	neg    rax
  406b2a:	mov    rdx,rax
  406b2d:	mov    rax,QWORD PTR [rbp-0x28]
  406b31:	add    rax,rdx
  406b34:	mov    QWORD PTR [rbp-0x10],rax
  406b38:	mov    rax,QWORD PTR [rbp-0x10]
  406b3c:	mov    rdi,rax
  406b3f:	call   40475f <_start@@Base+0x4af>
  406b44:	movzx  eax,ax
  406b47:	movzx  edx,WORD PTR [rbp-0x12]
  406b4b:	add    edx,0x3
  406b4e:	movsxd rdx,edx
  406b51:	add    rdx,rdx
  406b54:	cmp    rax,rdx
  406b57:	jb     406b78 <_start@@Base+0x28c8>
  406b59:	movzx  eax,WORD PTR [rbp-0x12]
  406b5d:	add    rax,0x2
  406b61:	lea    rdx,[rax+rax*1]
  406b65:	mov    rax,QWORD PTR [rbp-0x10]
  406b69:	add    rax,rdx
  406b6c:	mov    rdi,rax
  406b6f:	call   40475f <_start@@Base+0x4af>
  406b74:	mov    WORD PTR [rbp-0x14],ax
  406b78:	cmp    WORD PTR [rbp-0x14],0x0
  406b7d:	je     406ba9 <_start@@Base+0x28f9>
  406b7f:	movzx  edx,WORD PTR [rbp-0x14]
  406b83:	mov    rax,QWORD PTR [rbp-0x28]
  406b87:	add    rax,rdx
  406b8a:	mov    QWORD PTR [rbp-0x8],rax
  406b8e:	mov    rax,QWORD PTR [rbp-0x8]
  406b92:	mov    rdi,rax
  406b95:	call   4046e9 <_start@@Base+0x439>
  406b9a:	mov    eax,eax
  406b9c:	lea    rdx,[rax+0x4]
  406ba0:	mov    rax,QWORD PTR [rbp-0x8]
  406ba4:	add    rax,rdx
  406ba7:	jmp    406bc8 <_start@@Base+0x2918>
  406ba9:	lea    rcx,[rip+0x1ae00]        # 4219b0 <_IO_stdin_used@@Base+0x39b0>
  406bb0:	mov    edx,0x2bb
  406bb5:	lea    rsi,[rip+0x1753c]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  406bbc:	lea    rdi,[rip+0x17685]        # 41e248 <_IO_stdin_used@@Base+0x248>
  406bc3:	call   4041f0 <__assert_fail@plt>
  406bc8:	leave  
  406bc9:	ret    
  406bca:	push   rbp
  406bcb:	mov    rbp,rsp
  406bce:	sub    rsp,0x20
  406bd2:	mov    QWORD PTR [rbp-0x18],rdi
  406bd6:	mov    QWORD PTR [rbp-0x20],rsi
  406bda:	mov    QWORD PTR [rbp-0x10],0x0
  406be2:	jmp    406c29 <_start@@Base+0x2979>
  406be4:	mov    rdx,QWORD PTR [rbp-0x10]
  406be8:	mov    rax,QWORD PTR [rbp-0x18]
  406bec:	mov    rsi,rdx
  406bef:	mov    rdi,rax
  406bf2:	call   406380 <_start@@Base+0x20d0>
  406bf7:	mov    rdi,rax
  406bfa:	call   406adb <_start@@Base+0x282b>
  406bff:	mov    QWORD PTR [rbp-0x8],rax
  406c03:	mov    rcx,QWORD PTR [rbp-0x20]
  406c07:	mov    rax,QWORD PTR [rbp-0x8]
  406c0b:	mov    edx,0x0
  406c10:	mov    rsi,rcx
  406c13:	mov    rdi,rax
  406c16:	call   404b21 <_start@@Base+0x871>
  406c1b:	test   eax,eax
  406c1d:	jne    406c25 <_start@@Base+0x2975>
  406c1f:	mov    rax,QWORD PTR [rbp-0x10]
  406c23:	jmp    406c42 <_start@@Base+0x2992>
  406c25:	inc    QWORD PTR [rbp-0x10]
  406c29:	mov    rax,QWORD PTR [rbp-0x18]
  406c2d:	mov    rdi,rax
  406c30:	call   406352 <_start@@Base+0x20a2>
  406c35:	cmp    QWORD PTR [rbp-0x10],rax
  406c39:	jb     406be4 <_start@@Base+0x2934>
  406c3b:	mov    rax,QWORD PTR [rip+0x25486]        # 42c0c8 <__data_start@@Base+0x10>
  406c42:	leave  
  406c43:	ret    
  406c44:	push   rbp
  406c45:	mov    rbp,rsp
  406c48:	sub    rsp,0x30
  406c4c:	mov    QWORD PTR [rbp-0x18],rdi
  406c50:	mov    QWORD PTR [rbp-0x20],rsi
  406c54:	mov    DWORD PTR [rbp-0x24],edx
  406c57:	mov    QWORD PTR [rbp-0x10],0x0
  406c5f:	jmp    406ca7 <_start@@Base+0x29f7>
  406c61:	mov    rdx,QWORD PTR [rbp-0x10]
  406c65:	mov    rax,QWORD PTR [rbp-0x18]
  406c69:	mov    rsi,rdx
  406c6c:	mov    rdi,rax
  406c6f:	call   406380 <_start@@Base+0x20d0>
  406c74:	mov    rdi,rax
  406c77:	call   406adb <_start@@Base+0x282b>
  406c7c:	mov    QWORD PTR [rbp-0x8],rax
  406c80:	mov    eax,DWORD PTR [rbp-0x24]
  406c83:	movsxd rdx,eax
  406c86:	mov    rcx,QWORD PTR [rbp-0x20]
  406c8a:	mov    rax,QWORD PTR [rbp-0x8]
  406c8e:	mov    rsi,rcx
  406c91:	mov    rdi,rax
  406c94:	call   404aab <_start@@Base+0x7fb>
  406c99:	test   eax,eax
  406c9b:	jne    406ca3 <_start@@Base+0x29f3>
  406c9d:	mov    rax,QWORD PTR [rbp-0x10]
  406ca1:	jmp    406cc0 <_start@@Base+0x2a10>
  406ca3:	inc    QWORD PTR [rbp-0x10]
  406ca7:	mov    rax,QWORD PTR [rbp-0x18]
  406cab:	mov    rdi,rax
  406cae:	call   406352 <_start@@Base+0x20a2>
  406cb3:	cmp    QWORD PTR [rbp-0x10],rax
  406cb7:	jb     406c61 <_start@@Base+0x29b1>
  406cb9:	mov    rax,QWORD PTR [rip+0x25408]        # 42c0c8 <__data_start@@Base+0x10>
  406cc0:	leave  
  406cc1:	ret    
  406cc2:	push   rbp
  406cc3:	mov    rbp,rsp
  406cc6:	sub    rsp,0x30
  406cca:	mov    QWORD PTR [rbp-0x18],rdi
  406cce:	mov    QWORD PTR [rbp-0x20],rsi
  406cd2:	mov    QWORD PTR [rbp-0x28],rdx
  406cd6:	mov    QWORD PTR [rbp-0x30],rcx
  406cda:	mov    rax,QWORD PTR [rbp-0x20]
  406cde:	mov    QWORD PTR [rbp-0x10],rax
  406ce2:	jmp    406d29 <_start@@Base+0x2a79>
  406ce4:	mov    rdx,QWORD PTR [rbp-0x10]
  406ce8:	mov    rax,QWORD PTR [rbp-0x18]
  406cec:	mov    rsi,rdx
  406cef:	mov    rdi,rax
  406cf2:	call   406380 <_start@@Base+0x20d0>
  406cf7:	mov    rdi,rax
  406cfa:	call   406adb <_start@@Base+0x282b>
  406cff:	mov    QWORD PTR [rbp-0x8],rax
  406d03:	mov    rcx,QWORD PTR [rbp-0x30]
  406d07:	mov    rax,QWORD PTR [rbp-0x8]
  406d0b:	mov    edx,0x0
  406d10:	mov    rsi,rcx
  406d13:	mov    rdi,rax
  406d16:	call   404b21 <_start@@Base+0x871>
  406d1b:	test   eax,eax
  406d1d:	jne    406d25 <_start@@Base+0x2a75>
  406d1f:	mov    rax,QWORD PTR [rbp-0x10]
  406d23:	jmp    406d5a <_start@@Base+0x2aaa>
  406d25:	inc    QWORD PTR [rbp-0x10]
  406d29:	mov    rax,QWORD PTR [rbp-0x18]
  406d2d:	mov    rdi,rax
  406d30:	call   406352 <_start@@Base+0x20a2>
  406d35:	cmp    QWORD PTR [rbp-0x28],rax
  406d39:	jb     406d49 <_start@@Base+0x2a99>
  406d3b:	mov    rax,QWORD PTR [rbp-0x18]
  406d3f:	mov    rdi,rax
  406d42:	call   406352 <_start@@Base+0x20a2>
  406d47:	jmp    406d4d <_start@@Base+0x2a9d>
  406d49:	mov    rax,QWORD PTR [rbp-0x28]
  406d4d:	cmp    rax,QWORD PTR [rbp-0x10]
  406d51:	ja     406ce4 <_start@@Base+0x2a34>
  406d53:	mov    rax,QWORD PTR [rip+0x2536e]        # 42c0c8 <__data_start@@Base+0x10>
  406d5a:	leave  
  406d5b:	ret    
  406d5c:	push   rbp
  406d5d:	mov    rbp,rsp
  406d60:	sub    rsp,0x40
  406d64:	mov    QWORD PTR [rbp-0x18],rdi
  406d68:	mov    QWORD PTR [rbp-0x20],rsi
  406d6c:	mov    QWORD PTR [rbp-0x28],rdx
  406d70:	mov    QWORD PTR [rbp-0x30],rcx
  406d74:	mov    DWORD PTR [rbp-0x34],r8d
  406d78:	mov    rax,QWORD PTR [rbp-0x20]
  406d7c:	mov    QWORD PTR [rbp-0x10],rax
  406d80:	jmp    406dc8 <_start@@Base+0x2b18>
  406d82:	mov    rdx,QWORD PTR [rbp-0x10]
  406d86:	mov    rax,QWORD PTR [rbp-0x18]
  406d8a:	mov    rsi,rdx
  406d8d:	mov    rdi,rax
  406d90:	call   406380 <_start@@Base+0x20d0>
  406d95:	mov    rdi,rax
  406d98:	call   406adb <_start@@Base+0x282b>
  406d9d:	mov    QWORD PTR [rbp-0x8],rax
  406da1:	mov    eax,DWORD PTR [rbp-0x34]
  406da4:	movsxd rdx,eax
  406da7:	mov    rcx,QWORD PTR [rbp-0x30]
  406dab:	mov    rax,QWORD PTR [rbp-0x8]
  406daf:	mov    rsi,rcx
  406db2:	mov    rdi,rax
  406db5:	call   404aab <_start@@Base+0x7fb>
  406dba:	test   eax,eax
  406dbc:	jne    406dc4 <_start@@Base+0x2b14>
  406dbe:	mov    rax,QWORD PTR [rbp-0x10]
  406dc2:	jmp    406df9 <_start@@Base+0x2b49>
  406dc4:	inc    QWORD PTR [rbp-0x10]
  406dc8:	mov    rax,QWORD PTR [rbp-0x18]
  406dcc:	mov    rdi,rax
  406dcf:	call   406352 <_start@@Base+0x20a2>
  406dd4:	cmp    QWORD PTR [rbp-0x28],rax
  406dd8:	jb     406de8 <_start@@Base+0x2b38>
  406dda:	mov    rax,QWORD PTR [rbp-0x18]
  406dde:	mov    rdi,rax
  406de1:	call   406352 <_start@@Base+0x20a2>
  406de6:	jmp    406dec <_start@@Base+0x2b3c>
  406de8:	mov    rax,QWORD PTR [rbp-0x28]
  406dec:	cmp    rax,QWORD PTR [rbp-0x10]
  406df0:	ja     406d82 <_start@@Base+0x2ad2>
  406df2:	mov    rax,QWORD PTR [rip+0x252cf]        # 42c0c8 <__data_start@@Base+0x10>
  406df9:	leave  
  406dfa:	ret    
  406dfb:	push   rbp
  406dfc:	mov    rbp,rsp
  406dff:	sub    rsp,0x20
  406e03:	mov    QWORD PTR [rbp-0x18],rdi
  406e07:	mov    QWORD PTR [rbp-0x20],rsi
  406e0b:	mov    rax,QWORD PTR [rbp-0x18]
  406e0f:	mov    rdi,rax
  406e12:	call   406352 <_start@@Base+0x20a2>
  406e17:	mov    QWORD PTR [rbp-0x10],rax
  406e1b:	jmp    406e5e <_start@@Base+0x2bae>
  406e1d:	mov    rdx,QWORD PTR [rbp-0x10]
  406e21:	mov    rax,QWORD PTR [rbp-0x18]
  406e25:	mov    rsi,rdx
  406e28:	mov    rdi,rax
  406e2b:	call   406380 <_start@@Base+0x20d0>
  406e30:	mov    rdi,rax
  406e33:	call   406adb <_start@@Base+0x282b>
  406e38:	mov    QWORD PTR [rbp-0x8],rax
  406e3c:	mov    rcx,QWORD PTR [rbp-0x20]
  406e40:	mov    rax,QWORD PTR [rbp-0x8]
  406e44:	mov    edx,0x0
  406e49:	mov    rsi,rcx
  406e4c:	mov    rdi,rax
  406e4f:	call   404b21 <_start@@Base+0x871>
  406e54:	test   eax,eax
  406e56:	jne    406e5e <_start@@Base+0x2bae>
  406e58:	mov    rax,QWORD PTR [rbp-0x10]
  406e5c:	jmp    406e76 <_start@@Base+0x2bc6>
  406e5e:	mov    rax,QWORD PTR [rbp-0x10]
  406e62:	lea    rdx,[rax-0x1]
  406e66:	mov    QWORD PTR [rbp-0x10],rdx
  406e6a:	test   rax,rax
  406e6d:	jne    406e1d <_start@@Base+0x2b6d>
  406e6f:	mov    rax,QWORD PTR [rip+0x25252]        # 42c0c8 <__data_start@@Base+0x10>
  406e76:	leave  
  406e77:	ret    
  406e78:	push   rbp
  406e79:	mov    rbp,rsp
  406e7c:	sub    rsp,0x30
  406e80:	mov    QWORD PTR [rbp-0x18],rdi
  406e84:	mov    QWORD PTR [rbp-0x20],rsi
  406e88:	mov    DWORD PTR [rbp-0x24],edx
  406e8b:	mov    rax,QWORD PTR [rbp-0x18]
  406e8f:	mov    rdi,rax
  406e92:	call   406352 <_start@@Base+0x20a2>
  406e97:	mov    QWORD PTR [rbp-0x10],rax
  406e9b:	jmp    406edf <_start@@Base+0x2c2f>
  406e9d:	mov    rdx,QWORD PTR [rbp-0x10]
  406ea1:	mov    rax,QWORD PTR [rbp-0x18]
  406ea5:	mov    rsi,rdx
  406ea8:	mov    rdi,rax
  406eab:	call   406380 <_start@@Base+0x20d0>
  406eb0:	mov    rdi,rax
  406eb3:	call   406adb <_start@@Base+0x282b>
  406eb8:	mov    QWORD PTR [rbp-0x8],rax
  406ebc:	mov    eax,DWORD PTR [rbp-0x24]
  406ebf:	movsxd rdx,eax
  406ec2:	mov    rcx,QWORD PTR [rbp-0x20]
  406ec6:	mov    rax,QWORD PTR [rbp-0x8]
  406eca:	mov    rsi,rcx
  406ecd:	mov    rdi,rax
  406ed0:	call   404aab <_start@@Base+0x7fb>
  406ed5:	test   eax,eax
  406ed7:	jne    406edf <_start@@Base+0x2c2f>
  406ed9:	mov    rax,QWORD PTR [rbp-0x10]
  406edd:	jmp    406ef7 <_start@@Base+0x2c47>
  406edf:	mov    rax,QWORD PTR [rbp-0x10]
  406ee3:	lea    rdx,[rax-0x1]
  406ee7:	mov    QWORD PTR [rbp-0x10],rdx
  406eeb:	test   rax,rax
  406eee:	jne    406e9d <_start@@Base+0x2bed>
  406ef0:	mov    rax,QWORD PTR [rip+0x251d1]        # 42c0c8 <__data_start@@Base+0x10>
  406ef7:	leave  
  406ef8:	ret    
  406ef9:	push   rbp
  406efa:	mov    rbp,rsp
  406efd:	sub    rsp,0x30
  406f01:	mov    QWORD PTR [rbp-0x18],rdi
  406f05:	mov    QWORD PTR [rbp-0x20],rsi
  406f09:	mov    QWORD PTR [rbp-0x28],rdx
  406f0d:	mov    QWORD PTR [rbp-0x30],rcx
  406f11:	mov    rax,QWORD PTR [rbp-0x18]
  406f15:	mov    rdi,rax
  406f18:	call   406352 <_start@@Base+0x20a2>
  406f1d:	cmp    QWORD PTR [rbp-0x28],rax
  406f21:	jb     406f31 <_start@@Base+0x2c81>
  406f23:	mov    rax,QWORD PTR [rbp-0x18]
  406f27:	mov    rdi,rax
  406f2a:	call   406352 <_start@@Base+0x20a2>
  406f2f:	jmp    406f35 <_start@@Base+0x2c85>
  406f31:	mov    rax,QWORD PTR [rbp-0x28]
  406f35:	mov    QWORD PTR [rbp-0x10],rax
  406f39:	jmp    406f7c <_start@@Base+0x2ccc>
  406f3b:	mov    rdx,QWORD PTR [rbp-0x10]
  406f3f:	mov    rax,QWORD PTR [rbp-0x18]
  406f43:	mov    rsi,rdx
  406f46:	mov    rdi,rax
  406f49:	call   406380 <_start@@Base+0x20d0>
  406f4e:	mov    rdi,rax
  406f51:	call   406adb <_start@@Base+0x282b>
  406f56:	mov    QWORD PTR [rbp-0x8],rax
  406f5a:	mov    rcx,QWORD PTR [rbp-0x30]
  406f5e:	mov    rax,QWORD PTR [rbp-0x8]
  406f62:	mov    edx,0x0
  406f67:	mov    rsi,rcx
  406f6a:	mov    rdi,rax
  406f6d:	call   404b21 <_start@@Base+0x871>
  406f72:	test   eax,eax
  406f74:	jne    406f7c <_start@@Base+0x2ccc>
  406f76:	mov    rax,QWORD PTR [rbp-0x10]
  406f7a:	jmp    406f95 <_start@@Base+0x2ce5>
  406f7c:	mov    rax,QWORD PTR [rbp-0x10]
  406f80:	lea    rdx,[rax-0x1]
  406f84:	mov    QWORD PTR [rbp-0x10],rdx
  406f88:	cmp    QWORD PTR [rbp-0x20],rax
  406f8c:	jb     406f3b <_start@@Base+0x2c8b>
  406f8e:	mov    rax,QWORD PTR [rip+0x25133]        # 42c0c8 <__data_start@@Base+0x10>
  406f95:	leave  
  406f96:	ret    
  406f97:	push   rbp
  406f98:	mov    rbp,rsp
  406f9b:	sub    rsp,0x40
  406f9f:	mov    QWORD PTR [rbp-0x18],rdi
  406fa3:	mov    QWORD PTR [rbp-0x20],rsi
  406fa7:	mov    QWORD PTR [rbp-0x28],rdx
  406fab:	mov    QWORD PTR [rbp-0x30],rcx
  406faf:	mov    DWORD PTR [rbp-0x34],r8d
  406fb3:	mov    rax,QWORD PTR [rbp-0x18]
  406fb7:	mov    rdi,rax
  406fba:	call   406352 <_start@@Base+0x20a2>
  406fbf:	cmp    QWORD PTR [rbp-0x28],rax
  406fc3:	jb     406fd3 <_start@@Base+0x2d23>
  406fc5:	mov    rax,QWORD PTR [rbp-0x18]
  406fc9:	mov    rdi,rax
  406fcc:	call   406352 <_start@@Base+0x20a2>
  406fd1:	jmp    406fd7 <_start@@Base+0x2d27>
  406fd3:	mov    rax,QWORD PTR [rbp-0x28]
  406fd7:	mov    QWORD PTR [rbp-0x10],rax
  406fdb:	jmp    40701f <_start@@Base+0x2d6f>
  406fdd:	mov    rdx,QWORD PTR [rbp-0x10]
  406fe1:	mov    rax,QWORD PTR [rbp-0x18]
  406fe5:	mov    rsi,rdx
  406fe8:	mov    rdi,rax
  406feb:	call   406380 <_start@@Base+0x20d0>
  406ff0:	mov    rdi,rax
  406ff3:	call   406adb <_start@@Base+0x282b>
  406ff8:	mov    QWORD PTR [rbp-0x8],rax
  406ffc:	mov    eax,DWORD PTR [rbp-0x34]
  406fff:	movsxd rdx,eax
  407002:	mov    rcx,QWORD PTR [rbp-0x30]
  407006:	mov    rax,QWORD PTR [rbp-0x8]
  40700a:	mov    rsi,rcx
  40700d:	mov    rdi,rax
  407010:	call   404aab <_start@@Base+0x7fb>
  407015:	test   eax,eax
  407017:	jne    40701f <_start@@Base+0x2d6f>
  407019:	mov    rax,QWORD PTR [rbp-0x10]
  40701d:	jmp    407038 <_start@@Base+0x2d88>
  40701f:	mov    rax,QWORD PTR [rbp-0x10]
  407023:	lea    rdx,[rax-0x1]
  407027:	mov    QWORD PTR [rbp-0x10],rdx
  40702b:	cmp    QWORD PTR [rbp-0x20],rax
  40702f:	jb     406fdd <_start@@Base+0x2d2d>
  407031:	mov    rax,QWORD PTR [rip+0x25090]        # 42c0c8 <__data_start@@Base+0x10>
  407038:	leave  
  407039:	ret    
  40703a:	push   rbp
  40703b:	mov    rbp,rsp
  40703e:	sub    rsp,0x30
  407042:	mov    QWORD PTR [rbp-0x28],rdi
  407046:	mov    QWORD PTR [rbp-0x30],rsi
  40704a:	mov    QWORD PTR [rbp-0x20],0x0
  407052:	mov    rax,QWORD PTR [rbp-0x28]
  407056:	mov    rdi,rax
  407059:	call   406352 <_start@@Base+0x20a2>
  40705e:	mov    QWORD PTR [rbp-0x18],rax
  407062:	cmp    QWORD PTR [rbp-0x18],0x0
  407067:	jne    407075 <_start@@Base+0x2dc5>
  407069:	mov    rax,QWORD PTR [rip+0x25058]        # 42c0c8 <__data_start@@Base+0x10>
  407070:	jmp    407140 <_start@@Base+0x2e90>
  407075:	dec    QWORD PTR [rbp-0x18]
  407079:	jmp    4070e4 <_start@@Base+0x2e34>
  40707b:	mov    rax,QWORD PTR [rbp-0x18]
  40707f:	sub    rax,QWORD PTR [rbp-0x20]
  407083:	shr    rax,1
  407086:	mov    rdx,rax
  407089:	mov    rax,QWORD PTR [rbp-0x20]
  40708d:	add    rax,rdx
  407090:	mov    QWORD PTR [rbp-0x10],rax
  407094:	mov    rdx,QWORD PTR [rbp-0x10]
  407098:	mov    rax,QWORD PTR [rbp-0x28]
  40709c:	mov    rsi,rdx
  40709f:	mov    rdi,rax
  4070a2:	call   406380 <_start@@Base+0x20d0>
  4070a7:	mov    rdi,rax
  4070aa:	call   406adb <_start@@Base+0x282b>
  4070af:	mov    QWORD PTR [rbp-0x8],rax
  4070b3:	mov    rcx,QWORD PTR [rbp-0x30]
  4070b7:	mov    rax,QWORD PTR [rbp-0x8]
  4070bb:	mov    edx,0x0
  4070c0:	mov    rsi,rcx
  4070c3:	mov    rdi,rax
  4070c6:	call   404b21 <_start@@Base+0x871>
  4070cb:	test   eax,eax
  4070cd:	jns    4070dc <_start@@Base+0x2e2c>
  4070cf:	mov    rax,QWORD PTR [rbp-0x10]
  4070d3:	inc    rax
  4070d6:	mov    QWORD PTR [rbp-0x20],rax
  4070da:	jmp    4070e4 <_start@@Base+0x2e34>
  4070dc:	mov    rax,QWORD PTR [rbp-0x10]
  4070e0:	mov    QWORD PTR [rbp-0x18],rax
  4070e4:	mov    rax,QWORD PTR [rbp-0x20]
  4070e8:	cmp    rax,QWORD PTR [rbp-0x18]
  4070ec:	jb     40707b <_start@@Base+0x2dcb>
  4070ee:	mov    rax,QWORD PTR [rbp-0x20]
  4070f2:	cmp    rax,QWORD PTR [rbp-0x18]
  4070f6:	jne    407139 <_start@@Base+0x2e89>
  4070f8:	mov    rdx,QWORD PTR [rbp-0x20]
  4070fc:	mov    rax,QWORD PTR [rbp-0x28]
  407100:	mov    rsi,rdx
  407103:	mov    rdi,rax
  407106:	call   406380 <_start@@Base+0x20d0>
  40710b:	mov    rdi,rax
  40710e:	call   406adb <_start@@Base+0x282b>
  407113:	mov    QWORD PTR [rbp-0x8],rax
  407117:	mov    rcx,QWORD PTR [rbp-0x30]
  40711b:	mov    rax,QWORD PTR [rbp-0x8]
  40711f:	mov    edx,0x0
  407124:	mov    rsi,rcx
  407127:	mov    rdi,rax
  40712a:	call   404b21 <_start@@Base+0x871>
  40712f:	test   eax,eax
  407131:	jne    407139 <_start@@Base+0x2e89>
  407133:	mov    rax,QWORD PTR [rbp-0x20]
  407137:	jmp    407140 <_start@@Base+0x2e90>
  407139:	mov    rax,QWORD PTR [rip+0x24f88]        # 42c0c8 <__data_start@@Base+0x10>
  407140:	leave  
  407141:	ret    
  407142:	push   rbp
  407143:	mov    rbp,rsp
  407146:	sub    rsp,0x40
  40714a:	mov    QWORD PTR [rbp-0x28],rdi
  40714e:	mov    QWORD PTR [rbp-0x30],rsi
  407152:	mov    DWORD PTR [rbp-0x34],edx
  407155:	mov    QWORD PTR [rbp-0x20],0x0
  40715d:	mov    rax,QWORD PTR [rbp-0x28]
  407161:	mov    rdi,rax
  407164:	call   406352 <_start@@Base+0x20a2>
  407169:	mov    QWORD PTR [rbp-0x18],rax
  40716d:	cmp    QWORD PTR [rbp-0x18],0x0
  407172:	jne    407180 <_start@@Base+0x2ed0>
  407174:	mov    rax,QWORD PTR [rip+0x24f4d]        # 42c0c8 <__data_start@@Base+0x10>
  40717b:	jmp    40724d <_start@@Base+0x2f9d>
  407180:	dec    QWORD PTR [rbp-0x18]
  407184:	jmp    4071f0 <_start@@Base+0x2f40>
  407186:	mov    rax,QWORD PTR [rbp-0x18]
  40718a:	sub    rax,QWORD PTR [rbp-0x20]
  40718e:	shr    rax,1
  407191:	mov    rdx,rax
  407194:	mov    rax,QWORD PTR [rbp-0x20]
  407198:	add    rax,rdx
  40719b:	mov    QWORD PTR [rbp-0x10],rax
  40719f:	mov    rdx,QWORD PTR [rbp-0x10]
  4071a3:	mov    rax,QWORD PTR [rbp-0x28]
  4071a7:	mov    rsi,rdx
  4071aa:	mov    rdi,rax
  4071ad:	call   406380 <_start@@Base+0x20d0>
  4071b2:	mov    rdi,rax
  4071b5:	call   406adb <_start@@Base+0x282b>
  4071ba:	mov    QWORD PTR [rbp-0x8],rax
  4071be:	mov    eax,DWORD PTR [rbp-0x34]
  4071c1:	movsxd rdx,eax
  4071c4:	mov    rcx,QWORD PTR [rbp-0x30]
  4071c8:	mov    rax,QWORD PTR [rbp-0x8]
  4071cc:	mov    rsi,rcx
  4071cf:	mov    rdi,rax
  4071d2:	call   404aab <_start@@Base+0x7fb>
  4071d7:	test   eax,eax
  4071d9:	jns    4071e8 <_start@@Base+0x2f38>
  4071db:	mov    rax,QWORD PTR [rbp-0x10]
  4071df:	inc    rax
  4071e2:	mov    QWORD PTR [rbp-0x20],rax
  4071e6:	jmp    4071f0 <_start@@Base+0x2f40>
  4071e8:	mov    rax,QWORD PTR [rbp-0x10]
  4071ec:	mov    QWORD PTR [rbp-0x18],rax
  4071f0:	mov    rax,QWORD PTR [rbp-0x20]
  4071f4:	cmp    rax,QWORD PTR [rbp-0x18]
  4071f8:	jb     407186 <_start@@Base+0x2ed6>
  4071fa:	mov    rax,QWORD PTR [rbp-0x20]
  4071fe:	cmp    rax,QWORD PTR [rbp-0x18]
  407202:	jne    407246 <_start@@Base+0x2f96>
  407204:	mov    rdx,QWORD PTR [rbp-0x20]
  407208:	mov    rax,QWORD PTR [rbp-0x28]
  40720c:	mov    rsi,rdx
  40720f:	mov    rdi,rax
  407212:	call   406380 <_start@@Base+0x20d0>
  407217:	mov    rdi,rax
  40721a:	call   406adb <_start@@Base+0x282b>
  40721f:	mov    QWORD PTR [rbp-0x8],rax
  407223:	mov    eax,DWORD PTR [rbp-0x34]
  407226:	movsxd rdx,eax
  407229:	mov    rcx,QWORD PTR [rbp-0x30]
  40722d:	mov    rax,QWORD PTR [rbp-0x8]
  407231:	mov    rsi,rcx
  407234:	mov    rdi,rax
  407237:	call   404aab <_start@@Base+0x7fb>
  40723c:	test   eax,eax
  40723e:	jne    407246 <_start@@Base+0x2f96>
  407240:	mov    rax,QWORD PTR [rbp-0x20]
  407244:	jmp    40724d <_start@@Base+0x2f9d>
  407246:	mov    rax,QWORD PTR [rip+0x24e7b]        # 42c0c8 <__data_start@@Base+0x10>
  40724d:	leave  
  40724e:	ret    
  40724f:	push   rbp
  407250:	mov    rbp,rsp
  407253:	sub    rsp,0x60
  407257:	mov    QWORD PTR [rbp-0x48],rdi
  40725b:	mov    QWORD PTR [rbp-0x50],rsi
  40725f:	mov    QWORD PTR [rbp-0x58],rdx
  407263:	mov    rax,QWORD PTR [rbp-0x50]
  407267:	mov    QWORD PTR [rbp-0x20],rax
  40726b:	jmp    4073f5 <_start@@Base+0x3145>
  407270:	mov    rax,QWORD PTR [rbp-0x20]
  407274:	add    rax,rax
  407277:	mov    QWORD PTR [rbp-0x28],rax
  40727b:	mov    rax,QWORD PTR [rbp-0x28]
  40727f:	cmp    rax,QWORD PTR [rbp-0x58]
  407283:	jae    4072f1 <_start@@Base+0x3041>
  407285:	mov    rdx,QWORD PTR [rbp-0x28]
  407289:	mov    rax,QWORD PTR [rbp-0x48]
  40728d:	mov    rsi,rdx
  407290:	mov    rdi,rax
  407293:	call   406380 <_start@@Base+0x20d0>
  407298:	mov    rdi,rax
  40729b:	call   406adb <_start@@Base+0x282b>
  4072a0:	mov    QWORD PTR [rbp-0x18],rax
  4072a4:	mov    rax,QWORD PTR [rbp-0x28]
  4072a8:	lea    rdx,[rax+0x1]
  4072ac:	mov    rax,QWORD PTR [rbp-0x48]
  4072b0:	mov    rsi,rdx
  4072b3:	mov    rdi,rax
  4072b6:	call   406380 <_start@@Base+0x20d0>
  4072bb:	mov    rdi,rax
  4072be:	call   406adb <_start@@Base+0x282b>
  4072c3:	mov    QWORD PTR [rbp-0x10],rax
  4072c7:	mov    rax,QWORD PTR [rbp-0x10]
  4072cb:	mov    rdi,rax
  4072ce:	call   4048a4 <_start@@Base+0x5f4>
  4072d3:	mov    rdx,rax
  4072d6:	mov    rcx,QWORD PTR [rbp-0x10]
  4072da:	mov    rax,QWORD PTR [rbp-0x18]
  4072de:	mov    rsi,rcx
  4072e1:	mov    rdi,rax
  4072e4:	call   404aab <_start@@Base+0x7fb>
  4072e9:	test   eax,eax
  4072eb:	jns    4072f1 <_start@@Base+0x3041>
  4072ed:	inc    QWORD PTR [rbp-0x28]
  4072f1:	mov    rdx,QWORD PTR [rbp-0x20]
  4072f5:	mov    rax,QWORD PTR [rbp-0x48]
  4072f9:	mov    rsi,rdx
  4072fc:	mov    rdi,rax
  4072ff:	call   406380 <_start@@Base+0x20d0>
  407304:	mov    rdi,rax
  407307:	call   406adb <_start@@Base+0x282b>
  40730c:	mov    QWORD PTR [rbp-0x8],rax
  407310:	mov    rdx,QWORD PTR [rbp-0x28]
  407314:	mov    rax,QWORD PTR [rbp-0x48]
  407318:	mov    rsi,rdx
  40731b:	mov    rdi,rax
  40731e:	call   406380 <_start@@Base+0x20d0>
  407323:	mov    rdi,rax
  407326:	call   406adb <_start@@Base+0x282b>
  40732b:	mov    QWORD PTR [rbp-0x18],rax
  40732f:	mov    rax,QWORD PTR [rbp-0x18]
  407333:	mov    rdi,rax
  407336:	call   4048a4 <_start@@Base+0x5f4>
  40733b:	mov    rdx,rax
  40733e:	mov    rcx,QWORD PTR [rbp-0x18]
  407342:	mov    rax,QWORD PTR [rbp-0x8]
  407346:	mov    rsi,rcx
  407349:	mov    rdi,rax
  40734c:	call   404aab <_start@@Base+0x7fb>
  407351:	test   eax,eax
  407353:	jns    407408 <_start@@Base+0x3158>
  407359:	mov    rax,QWORD PTR [rbp-0x20]
  40735d:	sub    rax,QWORD PTR [rbp-0x28]
  407361:	shl    eax,0x2
  407364:	mov    DWORD PTR [rbp-0x34],eax
  407367:	mov    rax,QWORD PTR [rbp-0x28]
  40736b:	lea    rdx,[rax*4+0x0]
  407373:	mov    rax,QWORD PTR [rbp-0x48]
  407377:	add    rax,rdx
  40737a:	mov    rdi,rax
  40737d:	call   4046e9 <_start@@Base+0x439>
  407382:	sub    eax,DWORD PTR [rbp-0x34]
  407385:	mov    DWORD PTR [rbp-0x30],eax
  407388:	mov    rax,QWORD PTR [rbp-0x20]
  40738c:	lea    rdx,[rax*4+0x0]
  407394:	mov    rax,QWORD PTR [rbp-0x48]
  407398:	add    rax,rdx
  40739b:	mov    rdi,rax
  40739e:	call   4046e9 <_start@@Base+0x439>
  4073a3:	mov    edx,eax
  4073a5:	mov    eax,DWORD PTR [rbp-0x34]
  4073a8:	add    eax,edx
  4073aa:	mov    DWORD PTR [rbp-0x2c],eax
  4073ad:	mov    rax,QWORD PTR [rbp-0x20]
  4073b1:	lea    rdx,[rax*4+0x0]
  4073b9:	mov    rax,QWORD PTR [rbp-0x48]
  4073bd:	add    rdx,rax
  4073c0:	mov    eax,DWORD PTR [rbp-0x30]
  4073c3:	mov    esi,eax
  4073c5:	mov    rdi,rdx
  4073c8:	call   404704 <_start@@Base+0x454>
  4073cd:	mov    rax,QWORD PTR [rbp-0x28]
  4073d1:	lea    rdx,[rax*4+0x0]
  4073d9:	mov    rax,QWORD PTR [rbp-0x48]
  4073dd:	add    rdx,rax
  4073e0:	mov    eax,DWORD PTR [rbp-0x2c]
  4073e3:	mov    esi,eax
  4073e5:	mov    rdi,rdx
  4073e8:	call   404704 <_start@@Base+0x454>
  4073ed:	mov    rax,QWORD PTR [rbp-0x28]
  4073f1:	mov    QWORD PTR [rbp-0x20],rax
  4073f5:	mov    rax,QWORD PTR [rbp-0x20]
  4073f9:	add    rax,rax
  4073fc:	cmp    QWORD PTR [rbp-0x58],rax
  407400:	jae    407270 <_start@@Base+0x2fc0>
  407406:	jmp    407409 <_start@@Base+0x3159>
  407408:	nop
  407409:	leave  
  40740a:	ret    
  40740b:	push   rbp
  40740c:	mov    rbp,rsp
  40740f:	sub    rsp,0x40
  407413:	mov    QWORD PTR [rbp-0x38],rdi
  407417:	mov    rax,QWORD PTR [rbp-0x38]
  40741b:	mov    rdi,rax
  40741e:	call   406352 <_start@@Base+0x20a2>
  407423:	mov    QWORD PTR [rbp-0x8],rax
  407427:	cmp    QWORD PTR [rbp-0x8],0x0
  40742c:	je     407510 <_start@@Base+0x3260>
  407432:	mov    rax,QWORD PTR [rbp-0x8]
  407436:	dec    rax
  407439:	mov    QWORD PTR [rbp-0x10],rax
  40743d:	mov    rax,QWORD PTR [rbp-0x8]
  407441:	shr    rax,1
  407444:	mov    QWORD PTR [rbp-0x18],rax
  407448:	mov    rdx,QWORD PTR [rbp-0x10]
  40744c:	mov    rcx,QWORD PTR [rbp-0x18]
  407450:	mov    rax,QWORD PTR [rbp-0x38]
  407454:	mov    rsi,rcx
  407457:	mov    rdi,rax
  40745a:	call   40724f <_start@@Base+0x2f9f>
  40745f:	mov    rax,QWORD PTR [rbp-0x18]
  407463:	lea    rdx,[rax-0x1]
  407467:	mov    QWORD PTR [rbp-0x18],rdx
  40746b:	test   rax,rax
  40746e:	jne    407448 <_start@@Base+0x3198>
  407470:	jmp    407503 <_start@@Base+0x3253>
  407475:	mov    rax,QWORD PTR [rbp-0x10]
  407479:	neg    rax
  40747c:	shl    eax,0x2
  40747f:	mov    DWORD PTR [rbp-0x24],eax
  407482:	mov    rax,QWORD PTR [rbp-0x10]
  407486:	lea    rdx,[rax*4+0x0]
  40748e:	mov    rax,QWORD PTR [rbp-0x38]
  407492:	add    rax,rdx
  407495:	mov    rdi,rax
  407498:	call   4046e9 <_start@@Base+0x439>
  40749d:	sub    eax,DWORD PTR [rbp-0x24]
  4074a0:	mov    DWORD PTR [rbp-0x20],eax
  4074a3:	mov    rax,QWORD PTR [rbp-0x38]
  4074a7:	mov    rdi,rax
  4074aa:	call   4046e9 <_start@@Base+0x439>
  4074af:	mov    edx,eax
  4074b1:	mov    eax,DWORD PTR [rbp-0x24]
  4074b4:	add    eax,edx
  4074b6:	mov    DWORD PTR [rbp-0x1c],eax
  4074b9:	mov    edx,DWORD PTR [rbp-0x20]
  4074bc:	mov    rax,QWORD PTR [rbp-0x38]
  4074c0:	mov    esi,edx
  4074c2:	mov    rdi,rax
  4074c5:	call   404704 <_start@@Base+0x454>
  4074ca:	mov    rax,QWORD PTR [rbp-0x10]
  4074ce:	lea    rdx,[rax*4+0x0]
  4074d6:	mov    rax,QWORD PTR [rbp-0x38]
  4074da:	add    rdx,rax
  4074dd:	mov    eax,DWORD PTR [rbp-0x1c]
  4074e0:	mov    esi,eax
  4074e2:	mov    rdi,rdx
  4074e5:	call   404704 <_start@@Base+0x454>
  4074ea:	dec    QWORD PTR [rbp-0x10]
  4074ee:	mov    rdx,QWORD PTR [rbp-0x10]
  4074f2:	mov    rax,QWORD PTR [rbp-0x38]
  4074f6:	mov    esi,0x0
  4074fb:	mov    rdi,rax
  4074fe:	call   40724f <_start@@Base+0x2f9f>
  407503:	cmp    QWORD PTR [rbp-0x10],0x0
  407508:	jne    407475 <_start@@Base+0x31c5>
  40750e:	jmp    407511 <_start@@Base+0x3261>
  407510:	nop
  407511:	leave  
  407512:	ret    
  407513:	push   rbp
  407514:	mov    rbp,rsp
  407517:	sub    rsp,0x10
  40751b:	mov    QWORD PTR [rbp-0x8],rdi
  40751f:	mov    rax,QWORD PTR [rbp-0x8]
  407523:	mov    rdi,rax
  407526:	call   40740b <_start@@Base+0x315b>
  40752b:	nop
  40752c:	leave  
  40752d:	ret    
  40752e:	push   rbp
  40752f:	mov    rbp,rsp
  407532:	sub    rsp,0x10
  407536:	mov    QWORD PTR [rbp-0x8],rdi
  40753a:	mov    QWORD PTR [rbp-0x10],rsi
  40753e:	mov    rdx,QWORD PTR [rbp-0x10]
  407542:	mov    rax,QWORD PTR [rbp-0x8]
  407546:	mov    rsi,rdx
  407549:	mov    rdi,rax
  40754c:	call   40703a <_start@@Base+0x2d8a>
  407551:	leave  
  407552:	ret    
  407553:	push   rbp
  407554:	mov    rbp,rsp
  407557:	sub    rsp,0x20
  40755b:	mov    QWORD PTR [rbp-0x8],rdi
  40755f:	mov    QWORD PTR [rbp-0x10],rsi
  407563:	mov    DWORD PTR [rbp-0x14],edx
  407566:	mov    edx,DWORD PTR [rbp-0x14]
  407569:	mov    rcx,QWORD PTR [rbp-0x10]
  40756d:	mov    rax,QWORD PTR [rbp-0x8]
  407571:	mov    rsi,rcx
  407574:	mov    rdi,rax
  407577:	call   407142 <_start@@Base+0x2e92>
  40757c:	leave  
  40757d:	ret    
  40757e:	push   rbp
  40757f:	mov    rbp,rsp
  407582:	sub    rsp,0x10
  407586:	mov    QWORD PTR [rbp-0x8],rdi
  40758a:	mov    QWORD PTR [rbp-0x10],rsi
  40758e:	mov    rdx,QWORD PTR [rbp-0x10]
  407592:	mov    rax,QWORD PTR [rbp-0x8]
  407596:	mov    rsi,rdx
  407599:	mov    rdi,rax
  40759c:	call   406bca <_start@@Base+0x291a>
  4075a1:	leave  
  4075a2:	ret    
  4075a3:	push   rbp
  4075a4:	mov    rbp,rsp
  4075a7:	sub    rsp,0x20
  4075ab:	mov    QWORD PTR [rbp-0x8],rdi
  4075af:	mov    QWORD PTR [rbp-0x10],rsi
  4075b3:	mov    DWORD PTR [rbp-0x14],edx
  4075b6:	mov    edx,DWORD PTR [rbp-0x14]
  4075b9:	mov    rcx,QWORD PTR [rbp-0x10]
  4075bd:	mov    rax,QWORD PTR [rbp-0x8]
  4075c1:	mov    rsi,rcx
  4075c4:	mov    rdi,rax
  4075c7:	call   406c44 <_start@@Base+0x2994>
  4075cc:	leave  
  4075cd:	ret    
  4075ce:	push   rbp
  4075cf:	mov    rbp,rsp
  4075d2:	sub    rsp,0x20
  4075d6:	mov    QWORD PTR [rbp-0x8],rdi
  4075da:	mov    QWORD PTR [rbp-0x10],rsi
  4075de:	mov    QWORD PTR [rbp-0x18],rdx
  4075e2:	mov    QWORD PTR [rbp-0x20],rcx
  4075e6:	mov    rcx,QWORD PTR [rbp-0x20]
  4075ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4075ee:	mov    rsi,QWORD PTR [rbp-0x10]
  4075f2:	mov    rax,QWORD PTR [rbp-0x8]
  4075f6:	mov    rdi,rax
  4075f9:	call   406cc2 <_start@@Base+0x2a12>
  4075fe:	leave  
  4075ff:	ret    
  407600:	push   rbp
  407601:	mov    rbp,rsp
  407604:	sub    rsp,0x10
  407608:	mov    QWORD PTR [rbp-0x8],rdi
  40760c:	mov    QWORD PTR [rbp-0x10],rsi
  407610:	mov    rdx,QWORD PTR [rbp-0x10]
  407614:	mov    rax,QWORD PTR [rbp-0x8]
  407618:	mov    rsi,rdx
  40761b:	mov    rdi,rax
  40761e:	call   406dfb <_start@@Base+0x2b4b>
  407623:	leave  
  407624:	ret    
  407625:	push   rbp
  407626:	mov    rbp,rsp
  407629:	sub    rsp,0x20
  40762d:	mov    QWORD PTR [rbp-0x8],rdi
  407631:	mov    QWORD PTR [rbp-0x10],rsi
  407635:	mov    DWORD PTR [rbp-0x14],edx
  407638:	mov    edx,DWORD PTR [rbp-0x14]
  40763b:	mov    rcx,QWORD PTR [rbp-0x10]
  40763f:	mov    rax,QWORD PTR [rbp-0x8]
  407643:	mov    rsi,rcx
  407646:	mov    rdi,rax
  407649:	call   406e78 <_start@@Base+0x2bc8>
  40764e:	leave  
  40764f:	ret    
  407650:	push   rbp
  407651:	mov    rbp,rsp
  407654:	sub    rsp,0x20
  407658:	mov    QWORD PTR [rbp-0x8],rdi
  40765c:	mov    QWORD PTR [rbp-0x10],rsi
  407660:	mov    QWORD PTR [rbp-0x18],rdx
  407664:	mov    QWORD PTR [rbp-0x20],rcx
  407668:	mov    rcx,QWORD PTR [rbp-0x20]
  40766c:	mov    rdx,QWORD PTR [rbp-0x18]
  407670:	mov    rsi,QWORD PTR [rbp-0x10]
  407674:	mov    rax,QWORD PTR [rbp-0x8]
  407678:	mov    rdi,rax
  40767b:	call   406ef9 <_start@@Base+0x2c49>
  407680:	leave  
  407681:	ret    
  407682:	push   rbp
  407683:	mov    rbp,rsp
  407686:	sub    rsp,0x20
  40768a:	mov    QWORD PTR [rbp-0x18],rdi
  40768e:	mov    WORD PTR [rbp-0xc],0x0
  407694:	cmp    QWORD PTR [rbp-0x18],0x0
  407699:	jne    4076ba <_start@@Base+0x340a>
  40769b:	lea    rcx,[rip+0x1a01e]        # 4216c0 <_IO_stdin_used@@Base+0x36c0>
  4076a2:	mov    edx,0x2c1
  4076a7:	lea    rsi,[rip+0x16a4a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4076ae:	lea    rdi,[rip+0x16b03]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4076b5:	call   4041f0 <__assert_fail@plt>
  4076ba:	mov    WORD PTR [rbp-0xa],0x6
  4076c0:	mov    rax,QWORD PTR [rbp-0x18]
  4076c4:	mov    rdi,rax
  4076c7:	call   404734 <_start@@Base+0x484>
  4076cc:	cdqe   
  4076ce:	neg    rax
  4076d1:	mov    rdx,rax
  4076d4:	mov    rax,QWORD PTR [rbp-0x18]
  4076d8:	add    rax,rdx
  4076db:	mov    QWORD PTR [rbp-0x8],rax
  4076df:	mov    rax,QWORD PTR [rbp-0x8]
  4076e3:	mov    rdi,rax
  4076e6:	call   40475f <_start@@Base+0x4af>
  4076eb:	movzx  eax,ax
  4076ee:	movzx  edx,WORD PTR [rbp-0xa]
  4076f2:	add    edx,0x3
  4076f5:	movsxd rdx,edx
  4076f8:	add    rdx,rdx
  4076fb:	cmp    rax,rdx
  4076fe:	jb     40771f <_start@@Base+0x346f>
  407700:	movzx  eax,WORD PTR [rbp-0xa]
  407704:	add    rax,0x2
  407708:	lea    rdx,[rax+rax*1]
  40770c:	mov    rax,QWORD PTR [rbp-0x8]
  407710:	add    rax,rdx
  407713:	mov    rdi,rax
  407716:	call   40475f <_start@@Base+0x4af>
  40771b:	mov    WORD PTR [rbp-0xc],ax
  40771f:	cmp    WORD PTR [rbp-0xc],0x0
  407724:	je     40773b <_start@@Base+0x348b>
  407726:	movzx  edx,WORD PTR [rbp-0xc]
  40772a:	mov    rax,QWORD PTR [rbp-0x18]
  40772e:	add    rax,rdx
  407731:	mov    rdi,rax
  407734:	call   40568b <_start@@Base+0x13db>
  407739:	jmp    407740 <_start@@Base+0x3490>
  40773b:	mov    eax,0x8
  407740:	leave  
  407741:	ret    
  407742:	push   rbp
  407743:	mov    rbp,rsp
  407746:	sub    rsp,0x20
  40774a:	mov    QWORD PTR [rbp-0x18],rdi
  40774e:	mov    WORD PTR [rbp-0xc],0x0
  407754:	cmp    QWORD PTR [rbp-0x18],0x0
  407759:	jne    40777a <_start@@Base+0x34ca>
  40775b:	lea    rcx,[rip+0x1a95e]        # 4220c0 <_IO_stdin_used@@Base+0x40c0>
  407762:	mov    edx,0x2c1
  407767:	lea    rsi,[rip+0x1698a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40776e:	lea    rdi,[rip+0x16a43]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407775:	call   4041f0 <__assert_fail@plt>
  40777a:	mov    WORD PTR [rbp-0xa],0x6
  407780:	mov    rax,QWORD PTR [rbp-0x18]
  407784:	mov    rdi,rax
  407787:	call   404734 <_start@@Base+0x484>
  40778c:	cdqe   
  40778e:	neg    rax
  407791:	mov    rdx,rax
  407794:	mov    rax,QWORD PTR [rbp-0x18]
  407798:	add    rax,rdx
  40779b:	mov    QWORD PTR [rbp-0x8],rax
  40779f:	mov    rax,QWORD PTR [rbp-0x8]
  4077a3:	mov    rdi,rax
  4077a6:	call   40475f <_start@@Base+0x4af>
  4077ab:	movzx  eax,ax
  4077ae:	movzx  edx,WORD PTR [rbp-0xa]
  4077b2:	add    edx,0x3
  4077b5:	movsxd rdx,edx
  4077b8:	add    rdx,rdx
  4077bb:	cmp    rax,rdx
  4077be:	jb     4077df <_start@@Base+0x352f>
  4077c0:	movzx  eax,WORD PTR [rbp-0xa]
  4077c4:	add    rax,0x2
  4077c8:	lea    rdx,[rax+rax*1]
  4077cc:	mov    rax,QWORD PTR [rbp-0x8]
  4077d0:	add    rax,rdx
  4077d3:	mov    rdi,rax
  4077d6:	call   40475f <_start@@Base+0x4af>
  4077db:	mov    WORD PTR [rbp-0xc],ax
  4077df:	cmp    WORD PTR [rbp-0xc],0x0
  4077e4:	setne  al
  4077e7:	movzx  eax,al
  4077ea:	leave  
  4077eb:	ret    
  4077ec:	push   rbp
  4077ed:	mov    rbp,rsp
  4077f0:	sub    rsp,0x30
  4077f4:	mov    QWORD PTR [rbp-0x28],rdi
  4077f8:	mov    WORD PTR [rbp-0x14],0x0
  4077fe:	cmp    QWORD PTR [rbp-0x28],0x0
  407803:	jne    407824 <_start@@Base+0x3574>
  407805:	lea    rcx,[rip+0x19ed4]        # 4216e0 <_IO_stdin_used@@Base+0x36e0>
  40780c:	mov    edx,0x2c2
  407811:	lea    rsi,[rip+0x168e0]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407818:	lea    rdi,[rip+0x16999]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  40781f:	call   4041f0 <__assert_fail@plt>
  407824:	mov    WORD PTR [rbp-0x12],0x5
  40782a:	mov    rax,QWORD PTR [rbp-0x28]
  40782e:	mov    rdi,rax
  407831:	call   404734 <_start@@Base+0x484>
  407836:	cdqe   
  407838:	neg    rax
  40783b:	mov    rdx,rax
  40783e:	mov    rax,QWORD PTR [rbp-0x28]
  407842:	add    rax,rdx
  407845:	mov    QWORD PTR [rbp-0x10],rax
  407849:	mov    rax,QWORD PTR [rbp-0x10]
  40784d:	mov    rdi,rax
  407850:	call   40475f <_start@@Base+0x4af>
  407855:	movzx  eax,ax
  407858:	movzx  edx,WORD PTR [rbp-0x12]
  40785c:	add    edx,0x3
  40785f:	movsxd rdx,edx
  407862:	add    rdx,rdx
  407865:	cmp    rax,rdx
  407868:	jb     407889 <_start@@Base+0x35d9>
  40786a:	movzx  eax,WORD PTR [rbp-0x12]
  40786e:	add    rax,0x2
  407872:	lea    rdx,[rax+rax*1]
  407876:	mov    rax,QWORD PTR [rbp-0x10]
  40787a:	add    rax,rdx
  40787d:	mov    rdi,rax
  407880:	call   40475f <_start@@Base+0x4af>
  407885:	mov    WORD PTR [rbp-0x14],ax
  407889:	cmp    WORD PTR [rbp-0x14],0x0
  40788e:	je     4078ba <_start@@Base+0x360a>
  407890:	movzx  edx,WORD PTR [rbp-0x14]
  407894:	mov    rax,QWORD PTR [rbp-0x28]
  407898:	add    rax,rdx
  40789b:	mov    QWORD PTR [rbp-0x8],rax
  40789f:	mov    rax,QWORD PTR [rbp-0x8]
  4078a3:	mov    rdi,rax
  4078a6:	call   4046e9 <_start@@Base+0x439>
  4078ab:	mov    eax,eax
  4078ad:	lea    rdx,[rax+0x4]
  4078b1:	mov    rax,QWORD PTR [rbp-0x8]
  4078b5:	add    rax,rdx
  4078b8:	jmp    4078bf <_start@@Base+0x360f>
  4078ba:	mov    eax,0x0
  4078bf:	leave  
  4078c0:	ret    
  4078c1:	push   rbp
  4078c2:	mov    rbp,rsp
  4078c5:	sub    rsp,0x30
  4078c9:	mov    QWORD PTR [rbp-0x28],rdi
  4078cd:	mov    WORD PTR [rbp-0x14],0x0
  4078d3:	cmp    QWORD PTR [rbp-0x28],0x0
  4078d8:	jne    4078f9 <_start@@Base+0x3649>
  4078da:	lea    rcx,[rip+0x1a01f]        # 421900 <_IO_stdin_used@@Base+0x3900>
  4078e1:	mov    edx,0x2c7
  4078e6:	lea    rsi,[rip+0x1680b]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4078ed:	lea    rdi,[rip+0x168c4]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4078f4:	call   4041f0 <__assert_fail@plt>
  4078f9:	mov    WORD PTR [rbp-0x12],0xb
  4078ff:	mov    rax,QWORD PTR [rbp-0x28]
  407903:	mov    rdi,rax
  407906:	call   404734 <_start@@Base+0x484>
  40790b:	cdqe   
  40790d:	neg    rax
  407910:	mov    rdx,rax
  407913:	mov    rax,QWORD PTR [rbp-0x28]
  407917:	add    rax,rdx
  40791a:	mov    QWORD PTR [rbp-0x10],rax
  40791e:	mov    rax,QWORD PTR [rbp-0x10]
  407922:	mov    rdi,rax
  407925:	call   40475f <_start@@Base+0x4af>
  40792a:	movzx  eax,ax
  40792d:	movzx  edx,WORD PTR [rbp-0x12]
  407931:	add    edx,0x3
  407934:	movsxd rdx,edx
  407937:	add    rdx,rdx
  40793a:	cmp    rax,rdx
  40793d:	jb     40795e <_start@@Base+0x36ae>
  40793f:	movzx  eax,WORD PTR [rbp-0x12]
  407943:	add    rax,0x2
  407947:	lea    rdx,[rax+rax*1]
  40794b:	mov    rax,QWORD PTR [rbp-0x10]
  40794f:	add    rax,rdx
  407952:	mov    rdi,rax
  407955:	call   40475f <_start@@Base+0x4af>
  40795a:	mov    WORD PTR [rbp-0x14],ax
  40795e:	cmp    WORD PTR [rbp-0x14],0x0
  407963:	je     40798f <_start@@Base+0x36df>
  407965:	movzx  edx,WORD PTR [rbp-0x14]
  407969:	mov    rax,QWORD PTR [rbp-0x28]
  40796d:	add    rax,rdx
  407970:	mov    QWORD PTR [rbp-0x8],rax
  407974:	mov    rax,QWORD PTR [rbp-0x8]
  407978:	mov    rdi,rax
  40797b:	call   4046e9 <_start@@Base+0x439>
  407980:	mov    eax,eax
  407982:	lea    rdx,[rax+0x4]
  407986:	mov    rax,QWORD PTR [rbp-0x8]
  40798a:	add    rax,rdx
  40798d:	jmp    407994 <_start@@Base+0x36e4>
  40798f:	mov    eax,0x0
  407994:	leave  
  407995:	ret    
  407996:	push   rbp
  407997:	mov    rbp,rsp
  40799a:	sub    rsp,0x30
  40799e:	mov    QWORD PTR [rbp-0x28],rdi
  4079a2:	mov    WORD PTR [rbp-0x14],0x0
  4079a8:	cmp    QWORD PTR [rbp-0x28],0x0
  4079ad:	jne    4079ce <_start@@Base+0x371e>
  4079af:	lea    rcx,[rip+0x19e2a]        # 4217e0 <_IO_stdin_used@@Base+0x37e0>
  4079b6:	mov    edx,0x2c8
  4079bb:	lea    rsi,[rip+0x16736]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4079c2:	lea    rdi,[rip+0x167ef]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4079c9:	call   4041f0 <__assert_fail@plt>
  4079ce:	mov    WORD PTR [rbp-0x12],0xa
  4079d4:	mov    rax,QWORD PTR [rbp-0x28]
  4079d8:	mov    rdi,rax
  4079db:	call   404734 <_start@@Base+0x484>
  4079e0:	cdqe   
  4079e2:	neg    rax
  4079e5:	mov    rdx,rax
  4079e8:	mov    rax,QWORD PTR [rbp-0x28]
  4079ec:	add    rax,rdx
  4079ef:	mov    QWORD PTR [rbp-0x10],rax
  4079f3:	mov    rax,QWORD PTR [rbp-0x10]
  4079f7:	mov    rdi,rax
  4079fa:	call   40475f <_start@@Base+0x4af>
  4079ff:	movzx  eax,ax
  407a02:	movzx  edx,WORD PTR [rbp-0x12]
  407a06:	add    edx,0x3
  407a09:	movsxd rdx,edx
  407a0c:	add    rdx,rdx
  407a0f:	cmp    rax,rdx
  407a12:	jb     407a33 <_start@@Base+0x3783>
  407a14:	movzx  eax,WORD PTR [rbp-0x12]
  407a18:	add    rax,0x2
  407a1c:	lea    rdx,[rax+rax*1]
  407a20:	mov    rax,QWORD PTR [rbp-0x10]
  407a24:	add    rax,rdx
  407a27:	mov    rdi,rax
  407a2a:	call   40475f <_start@@Base+0x4af>
  407a2f:	mov    WORD PTR [rbp-0x14],ax
  407a33:	cmp    WORD PTR [rbp-0x14],0x0
  407a38:	je     407a64 <_start@@Base+0x37b4>
  407a3a:	movzx  edx,WORD PTR [rbp-0x14]
  407a3e:	mov    rax,QWORD PTR [rbp-0x28]
  407a42:	add    rax,rdx
  407a45:	mov    QWORD PTR [rbp-0x8],rax
  407a49:	mov    rax,QWORD PTR [rbp-0x8]
  407a4d:	mov    rdi,rax
  407a50:	call   4046e9 <_start@@Base+0x439>
  407a55:	mov    eax,eax
  407a57:	lea    rdx,[rax+0x4]
  407a5b:	mov    rax,QWORD PTR [rbp-0x8]
  407a5f:	add    rax,rdx
  407a62:	jmp    407a69 <_start@@Base+0x37b9>
  407a64:	mov    eax,0x0
  407a69:	leave  
  407a6a:	ret    
  407a6b:	push   rbp
  407a6c:	mov    rbp,rsp
  407a6f:	sub    rsp,0x30
  407a73:	mov    QWORD PTR [rbp-0x28],rdi
  407a77:	mov    WORD PTR [rbp-0x14],0x0
  407a7d:	cmp    QWORD PTR [rbp-0x28],0x0
  407a82:	jne    407aa3 <_start@@Base+0x37f3>
  407a84:	lea    rcx,[rip+0x19df5]        # 421880 <_IO_stdin_used@@Base+0x3880>
  407a8b:	mov    edx,0x2ca
  407a90:	lea    rsi,[rip+0x16661]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407a97:	lea    rdi,[rip+0x1671a]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407a9e:	call   4041f0 <__assert_fail@plt>
  407aa3:	mov    WORD PTR [rbp-0x12],0x18
  407aa9:	mov    rax,QWORD PTR [rbp-0x28]
  407aad:	mov    rdi,rax
  407ab0:	call   404734 <_start@@Base+0x484>
  407ab5:	cdqe   
  407ab7:	neg    rax
  407aba:	mov    rdx,rax
  407abd:	mov    rax,QWORD PTR [rbp-0x28]
  407ac1:	add    rax,rdx
  407ac4:	mov    QWORD PTR [rbp-0x10],rax
  407ac8:	mov    rax,QWORD PTR [rbp-0x10]
  407acc:	mov    rdi,rax
  407acf:	call   40475f <_start@@Base+0x4af>
  407ad4:	movzx  eax,ax
  407ad7:	movzx  edx,WORD PTR [rbp-0x12]
  407adb:	add    edx,0x3
  407ade:	movsxd rdx,edx
  407ae1:	add    rdx,rdx
  407ae4:	cmp    rax,rdx
  407ae7:	jb     407b08 <_start@@Base+0x3858>
  407ae9:	movzx  eax,WORD PTR [rbp-0x12]
  407aed:	add    rax,0x2
  407af1:	lea    rdx,[rax+rax*1]
  407af5:	mov    rax,QWORD PTR [rbp-0x10]
  407af9:	add    rax,rdx
  407afc:	mov    rdi,rax
  407aff:	call   40475f <_start@@Base+0x4af>
  407b04:	mov    WORD PTR [rbp-0x14],ax
  407b08:	cmp    WORD PTR [rbp-0x14],0x0
  407b0d:	je     407b39 <_start@@Base+0x3889>
  407b0f:	movzx  edx,WORD PTR [rbp-0x14]
  407b13:	mov    rax,QWORD PTR [rbp-0x28]
  407b17:	add    rax,rdx
  407b1a:	mov    QWORD PTR [rbp-0x8],rax
  407b1e:	mov    rax,QWORD PTR [rbp-0x8]
  407b22:	mov    rdi,rax
  407b25:	call   4046e9 <_start@@Base+0x439>
  407b2a:	mov    eax,eax
  407b2c:	lea    rdx,[rax+0x4]
  407b30:	mov    rax,QWORD PTR [rbp-0x8]
  407b34:	add    rax,rdx
  407b37:	jmp    407b3e <_start@@Base+0x388e>
  407b39:	mov    eax,0x0
  407b3e:	leave  
  407b3f:	ret    
  407b40:	push   rbp
  407b41:	mov    rbp,rsp
  407b44:	sub    rsp,0x20
  407b48:	mov    QWORD PTR [rbp-0x18],rdi
  407b4c:	mov    WORD PTR [rbp-0xc],0x0
  407b52:	cmp    QWORD PTR [rbp-0x18],0x0
  407b57:	jne    407b78 <_start@@Base+0x38c8>
  407b59:	lea    rcx,[rip+0x19ce0]        # 421840 <_IO_stdin_used@@Base+0x3840>
  407b60:	mov    edx,0x2ca
  407b65:	lea    rsi,[rip+0x1658c]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407b6c:	lea    rdi,[rip+0x16645]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407b73:	call   4041f0 <__assert_fail@plt>
  407b78:	mov    WORD PTR [rbp-0xa],0x18
  407b7e:	mov    rax,QWORD PTR [rbp-0x18]
  407b82:	mov    rdi,rax
  407b85:	call   404734 <_start@@Base+0x484>
  407b8a:	cdqe   
  407b8c:	neg    rax
  407b8f:	mov    rdx,rax
  407b92:	mov    rax,QWORD PTR [rbp-0x18]
  407b96:	add    rax,rdx
  407b99:	mov    QWORD PTR [rbp-0x8],rax
  407b9d:	mov    rax,QWORD PTR [rbp-0x8]
  407ba1:	mov    rdi,rax
  407ba4:	call   40475f <_start@@Base+0x4af>
  407ba9:	movzx  eax,ax
  407bac:	movzx  edx,WORD PTR [rbp-0xa]
  407bb0:	add    edx,0x3
  407bb3:	movsxd rdx,edx
  407bb6:	add    rdx,rdx
  407bb9:	cmp    rax,rdx
  407bbc:	jb     407bdd <_start@@Base+0x392d>
  407bbe:	movzx  eax,WORD PTR [rbp-0xa]
  407bc2:	add    rax,0x2
  407bc6:	lea    rdx,[rax+rax*1]
  407bca:	mov    rax,QWORD PTR [rbp-0x8]
  407bce:	add    rax,rdx
  407bd1:	mov    rdi,rax
  407bd4:	call   40475f <_start@@Base+0x4af>
  407bd9:	mov    WORD PTR [rbp-0xc],ax
  407bdd:	cmp    WORD PTR [rbp-0xc],0x0
  407be2:	setne  al
  407be5:	movzx  eax,al
  407be8:	leave  
  407be9:	ret    
  407bea:	push   rbp
  407beb:	mov    rbp,rsp
  407bee:	sub    rsp,0x30
  407bf2:	mov    QWORD PTR [rbp-0x28],rdi
  407bf6:	mov    WORD PTR [rbp-0x14],0x0
  407bfc:	cmp    QWORD PTR [rbp-0x28],0x0
  407c01:	jne    407c22 <_start@@Base+0x3972>
  407c03:	lea    rcx,[rip+0x19cc6]        # 4218d0 <_IO_stdin_used@@Base+0x38d0>
  407c0a:	mov    edx,0x2cc
  407c0f:	lea    rsi,[rip+0x164e2]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407c16:	lea    rdi,[rip+0x1659b]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407c1d:	call   4041f0 <__assert_fail@plt>
  407c22:	mov    WORD PTR [rbp-0x12],0xc
  407c28:	mov    rax,QWORD PTR [rbp-0x28]
  407c2c:	mov    rdi,rax
  407c2f:	call   404734 <_start@@Base+0x484>
  407c34:	cdqe   
  407c36:	neg    rax
  407c39:	mov    rdx,rax
  407c3c:	mov    rax,QWORD PTR [rbp-0x28]
  407c40:	add    rax,rdx
  407c43:	mov    QWORD PTR [rbp-0x10],rax
  407c47:	mov    rax,QWORD PTR [rbp-0x10]
  407c4b:	mov    rdi,rax
  407c4e:	call   40475f <_start@@Base+0x4af>
  407c53:	movzx  eax,ax
  407c56:	movzx  edx,WORD PTR [rbp-0x12]
  407c5a:	add    edx,0x3
  407c5d:	movsxd rdx,edx
  407c60:	add    rdx,rdx
  407c63:	cmp    rax,rdx
  407c66:	jb     407c87 <_start@@Base+0x39d7>
  407c68:	movzx  eax,WORD PTR [rbp-0x12]
  407c6c:	add    rax,0x2
  407c70:	lea    rdx,[rax+rax*1]
  407c74:	mov    rax,QWORD PTR [rbp-0x10]
  407c78:	add    rax,rdx
  407c7b:	mov    rdi,rax
  407c7e:	call   40475f <_start@@Base+0x4af>
  407c83:	mov    WORD PTR [rbp-0x14],ax
  407c87:	cmp    WORD PTR [rbp-0x14],0x0
  407c8c:	je     407cb4 <_start@@Base+0x3a04>
  407c8e:	movzx  edx,WORD PTR [rbp-0x14]
  407c92:	mov    rax,QWORD PTR [rbp-0x28]
  407c96:	add    rax,rdx
  407c99:	mov    QWORD PTR [rbp-0x8],rax
  407c9d:	mov    rax,QWORD PTR [rbp-0x8]
  407ca1:	mov    rdi,rax
  407ca4:	call   4046e9 <_start@@Base+0x439>
  407ca9:	mov    edx,eax
  407cab:	mov    rax,QWORD PTR [rbp-0x8]
  407caf:	add    rax,rdx
  407cb2:	jmp    407cb9 <_start@@Base+0x3a09>
  407cb4:	mov    eax,0x0
  407cb9:	leave  
  407cba:	ret    
  407cbb:	push   rbp
  407cbc:	mov    rbp,rsp
  407cbf:	sub    rsp,0x20
  407cc3:	mov    QWORD PTR [rbp-0x18],rdi
  407cc7:	mov    WORD PTR [rbp-0xc],0x0
  407ccd:	cmp    QWORD PTR [rbp-0x18],0x0
  407cd2:	jne    407cf3 <_start@@Base+0x3a43>
  407cd4:	lea    rcx,[rip+0x19ee5]        # 421bc0 <_IO_stdin_used@@Base+0x3bc0>
  407cdb:	mov    edx,0x2cc
  407ce0:	lea    rsi,[rip+0x16411]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407ce7:	lea    rdi,[rip+0x164ca]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407cee:	call   4041f0 <__assert_fail@plt>
  407cf3:	mov    WORD PTR [rbp-0xa],0xc
  407cf9:	mov    rax,QWORD PTR [rbp-0x18]
  407cfd:	mov    rdi,rax
  407d00:	call   404734 <_start@@Base+0x484>
  407d05:	cdqe   
  407d07:	neg    rax
  407d0a:	mov    rdx,rax
  407d0d:	mov    rax,QWORD PTR [rbp-0x18]
  407d11:	add    rax,rdx
  407d14:	mov    QWORD PTR [rbp-0x8],rax
  407d18:	mov    rax,QWORD PTR [rbp-0x8]
  407d1c:	mov    rdi,rax
  407d1f:	call   40475f <_start@@Base+0x4af>
  407d24:	movzx  eax,ax
  407d27:	movzx  edx,WORD PTR [rbp-0xa]
  407d2b:	add    edx,0x3
  407d2e:	movsxd rdx,edx
  407d31:	add    rdx,rdx
  407d34:	cmp    rax,rdx
  407d37:	jb     407d58 <_start@@Base+0x3aa8>
  407d39:	movzx  eax,WORD PTR [rbp-0xa]
  407d3d:	add    rax,0x2
  407d41:	lea    rdx,[rax+rax*1]
  407d45:	mov    rax,QWORD PTR [rbp-0x8]
  407d49:	add    rax,rdx
  407d4c:	mov    rdi,rax
  407d4f:	call   40475f <_start@@Base+0x4af>
  407d54:	mov    WORD PTR [rbp-0xc],ax
  407d58:	cmp    WORD PTR [rbp-0xc],0x0
  407d5d:	setne  al
  407d60:	movzx  eax,al
  407d63:	leave  
  407d64:	ret    
  407d65:	push   rbp
  407d66:	mov    rbp,rsp
  407d69:	sub    rsp,0x20
  407d6d:	mov    QWORD PTR [rbp-0x18],rdi
  407d71:	mov    WORD PTR [rbp-0xc],0x0
  407d77:	cmp    QWORD PTR [rbp-0x18],0x0
  407d7c:	jne    407d9d <_start@@Base+0x3aed>
  407d7e:	lea    rcx,[rip+0x19bdb]        # 421960 <_IO_stdin_used@@Base+0x3960>
  407d85:	mov    edx,0x2cd
  407d8a:	lea    rsi,[rip+0x16367]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407d91:	lea    rdi,[rip+0x16420]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407d98:	call   4041f0 <__assert_fail@plt>
  407d9d:	mov    WORD PTR [rbp-0xa],0x7
  407da3:	mov    rax,QWORD PTR [rbp-0x18]
  407da7:	mov    rdi,rax
  407daa:	call   404734 <_start@@Base+0x484>
  407daf:	cdqe   
  407db1:	neg    rax
  407db4:	mov    rdx,rax
  407db7:	mov    rax,QWORD PTR [rbp-0x18]
  407dbb:	add    rax,rdx
  407dbe:	mov    QWORD PTR [rbp-0x8],rax
  407dc2:	mov    rax,QWORD PTR [rbp-0x8]
  407dc6:	mov    rdi,rax
  407dc9:	call   40475f <_start@@Base+0x4af>
  407dce:	movzx  eax,ax
  407dd1:	movzx  edx,WORD PTR [rbp-0xa]
  407dd5:	add    edx,0x3
  407dd8:	movsxd rdx,edx
  407ddb:	add    rdx,rdx
  407dde:	cmp    rax,rdx
  407de1:	jb     407e02 <_start@@Base+0x3b52>
  407de3:	movzx  eax,WORD PTR [rbp-0xa]
  407de7:	add    rax,0x2
  407deb:	lea    rdx,[rax+rax*1]
  407def:	mov    rax,QWORD PTR [rbp-0x8]
  407df3:	add    rax,rdx
  407df6:	mov    rdi,rax
  407df9:	call   40475f <_start@@Base+0x4af>
  407dfe:	mov    WORD PTR [rbp-0xc],ax
  407e02:	cmp    WORD PTR [rbp-0xc],0x0
  407e07:	je     407e1e <_start@@Base+0x3b6e>
  407e09:	movzx  edx,WORD PTR [rbp-0xc]
  407e0d:	mov    rax,QWORD PTR [rbp-0x18]
  407e11:	add    rax,rdx
  407e14:	mov    rdi,rax
  407e17:	call   40478d <_start@@Base+0x4dd>
  407e1c:	jmp    407e23 <_start@@Base+0x3b73>
  407e1e:	mov    eax,0x0
  407e23:	leave  
  407e24:	ret    
  407e25:	push   rbp
  407e26:	mov    rbp,rsp
  407e29:	sub    rsp,0x30
  407e2d:	mov    QWORD PTR [rbp-0x28],rdi
  407e31:	mov    WORD PTR [rbp-0x14],0x0
  407e37:	cmp    QWORD PTR [rbp-0x28],0x0
  407e3c:	jne    407e5d <_start@@Base+0x3bad>
  407e3e:	lea    rcx,[rip+0x19b4b]        # 421990 <_IO_stdin_used@@Base+0x3990>
  407e45:	mov    edx,0x2cd
  407e4a:	lea    rsi,[rip+0x162a7]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407e51:	lea    rdi,[rip+0x16360]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407e58:	call   4041f0 <__assert_fail@plt>
  407e5d:	mov    WORD PTR [rbp-0x12],0x8
  407e63:	mov    rax,QWORD PTR [rbp-0x28]
  407e67:	mov    rdi,rax
  407e6a:	call   404734 <_start@@Base+0x484>
  407e6f:	cdqe   
  407e71:	neg    rax
  407e74:	mov    rdx,rax
  407e77:	mov    rax,QWORD PTR [rbp-0x28]
  407e7b:	add    rax,rdx
  407e7e:	mov    QWORD PTR [rbp-0x10],rax
  407e82:	mov    rax,QWORD PTR [rbp-0x10]
  407e86:	mov    rdi,rax
  407e89:	call   40475f <_start@@Base+0x4af>
  407e8e:	movzx  eax,ax
  407e91:	movzx  edx,WORD PTR [rbp-0x12]
  407e95:	add    edx,0x3
  407e98:	movsxd rdx,edx
  407e9b:	add    rdx,rdx
  407e9e:	cmp    rax,rdx
  407ea1:	jb     407ec2 <_start@@Base+0x3c12>
  407ea3:	movzx  eax,WORD PTR [rbp-0x12]
  407ea7:	add    rax,0x2
  407eab:	lea    rdx,[rax+rax*1]
  407eaf:	mov    rax,QWORD PTR [rbp-0x10]
  407eb3:	add    rax,rdx
  407eb6:	mov    rdi,rax
  407eb9:	call   40475f <_start@@Base+0x4af>
  407ebe:	mov    WORD PTR [rbp-0x14],ax
  407ec2:	cmp    WORD PTR [rbp-0x14],0x0
  407ec7:	je     407eef <_start@@Base+0x3c3f>
  407ec9:	movzx  edx,WORD PTR [rbp-0x14]
  407ecd:	mov    rax,QWORD PTR [rbp-0x28]
  407ed1:	add    rax,rdx
  407ed4:	mov    QWORD PTR [rbp-0x8],rax
  407ed8:	mov    rax,QWORD PTR [rbp-0x8]
  407edc:	mov    rdi,rax
  407edf:	call   4046e9 <_start@@Base+0x439>
  407ee4:	mov    edx,eax
  407ee6:	mov    rax,QWORD PTR [rbp-0x8]
  407eea:	add    rax,rdx
  407eed:	jmp    407ef4 <_start@@Base+0x3c44>
  407eef:	mov    eax,0x0
  407ef4:	leave  
  407ef5:	ret    
  407ef6:	push   rbp
  407ef7:	mov    rbp,rsp
  407efa:	push   rbx
  407efb:	sub    rsp,0x28
  407eff:	mov    QWORD PTR [rbp-0x28],rdi
  407f03:	mov    BYTE PTR [rbp-0x20],0x0
  407f07:	mov    QWORD PTR [rbp-0x18],0x0
  407f0f:	mov    rax,QWORD PTR [rbp-0x28]
  407f13:	mov    rdi,rax
  407f16:	call   407d65 <_start@@Base+0x3ab5>
  407f1b:	mov    BYTE PTR [rbp-0x20],al
  407f1e:	movzx  eax,BYTE PTR [rbp-0x20]
  407f22:	test   al,al
  407f24:	jne    407f30 <_start@@Base+0x3c80>
  407f26:	mov    rax,QWORD PTR [rbp-0x20]
  407f2a:	mov    rdx,QWORD PTR [rbp-0x18]
  407f2e:	jmp    407f48 <_start@@Base+0x3c98>
  407f30:	mov    rax,QWORD PTR [rbp-0x28]
  407f34:	mov    rdi,rax
  407f37:	call   407e25 <_start@@Base+0x3b75>
  407f3c:	mov    QWORD PTR [rbp-0x18],rax
  407f40:	mov    rax,QWORD PTR [rbp-0x20]
  407f44:	mov    rdx,QWORD PTR [rbp-0x18]
  407f48:	mov    rcx,rax
  407f4b:	mov    rbx,rdx
  407f4e:	mov    eax,ecx
  407f50:	add    rsp,0x28
  407f54:	pop    rbx
  407f55:	pop    rbp
  407f56:	ret    
  407f57:	push   rbp
  407f58:	mov    rbp,rsp
  407f5b:	sub    rsp,0x30
  407f5f:	mov    QWORD PTR [rbp-0x28],rdi
  407f63:	mov    WORD PTR [rbp-0x14],0x0
  407f69:	cmp    QWORD PTR [rbp-0x28],0x0
  407f6e:	jne    407f8f <_start@@Base+0x3cdf>
  407f70:	lea    rcx,[rip+0x19819]        # 421790 <_IO_stdin_used@@Base+0x3790>
  407f77:	mov    edx,0x2ce
  407f7c:	lea    rsi,[rip+0x16175]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  407f83:	lea    rdi,[rip+0x1622e]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  407f8a:	call   4041f0 <__assert_fail@plt>
  407f8f:	mov    WORD PTR [rbp-0x12],0x9
  407f95:	mov    rax,QWORD PTR [rbp-0x28]
  407f99:	mov    rdi,rax
  407f9c:	call   404734 <_start@@Base+0x484>
  407fa1:	cdqe   
  407fa3:	neg    rax
  407fa6:	mov    rdx,rax
  407fa9:	mov    rax,QWORD PTR [rbp-0x28]
  407fad:	add    rax,rdx
  407fb0:	mov    QWORD PTR [rbp-0x10],rax
  407fb4:	mov    rax,QWORD PTR [rbp-0x10]
  407fb8:	mov    rdi,rax
  407fbb:	call   40475f <_start@@Base+0x4af>
  407fc0:	movzx  eax,ax
  407fc3:	movzx  edx,WORD PTR [rbp-0x12]
  407fc7:	add    edx,0x3
  407fca:	movsxd rdx,edx
  407fcd:	add    rdx,rdx
  407fd0:	cmp    rax,rdx
  407fd3:	jb     407ff4 <_start@@Base+0x3d44>
  407fd5:	movzx  eax,WORD PTR [rbp-0x12]
  407fd9:	add    rax,0x2
  407fdd:	lea    rdx,[rax+rax*1]
  407fe1:	mov    rax,QWORD PTR [rbp-0x10]
  407fe5:	add    rax,rdx
  407fe8:	mov    rdi,rax
  407feb:	call   40475f <_start@@Base+0x4af>
  407ff0:	mov    WORD PTR [rbp-0x14],ax
  407ff4:	cmp    WORD PTR [rbp-0x14],0x0
  407ff9:	je     408025 <_start@@Base+0x3d75>
  407ffb:	movzx  edx,WORD PTR [rbp-0x14]
  407fff:	mov    rax,QWORD PTR [rbp-0x28]
  408003:	add    rax,rdx
  408006:	mov    QWORD PTR [rbp-0x8],rax
  40800a:	mov    rax,QWORD PTR [rbp-0x8]
  40800e:	mov    rdi,rax
  408011:	call   4046e9 <_start@@Base+0x439>
  408016:	mov    eax,eax
  408018:	lea    rdx,[rax+0x4]
  40801c:	mov    rax,QWORD PTR [rbp-0x8]
  408020:	add    rax,rdx
  408023:	jmp    40802a <_start@@Base+0x3d7a>
  408025:	mov    eax,0x0
  40802a:	leave  
  40802b:	ret    
  40802c:	push   rbp
  40802d:	mov    rbp,rsp
  408030:	sub    rsp,0x30
  408034:	mov    QWORD PTR [rbp-0x28],rdi
  408038:	mov    WORD PTR [rbp-0x14],0x0
  40803e:	cmp    QWORD PTR [rbp-0x28],0x0
  408043:	jne    408064 <_start@@Base+0x3db4>
  408045:	lea    rcx,[rip+0x1a0d4]        # 422120 <_IO_stdin_used@@Base+0x4120>
  40804c:	mov    edx,0x2d0
  408051:	lea    rsi,[rip+0x160a0]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408058:	lea    rdi,[rip+0x16159]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  40805f:	call   4041f0 <__assert_fail@plt>
  408064:	mov    WORD PTR [rbp-0x12],0xd
  40806a:	mov    rax,QWORD PTR [rbp-0x28]
  40806e:	mov    rdi,rax
  408071:	call   404734 <_start@@Base+0x484>
  408076:	cdqe   
  408078:	neg    rax
  40807b:	mov    rdx,rax
  40807e:	mov    rax,QWORD PTR [rbp-0x28]
  408082:	add    rax,rdx
  408085:	mov    QWORD PTR [rbp-0x10],rax
  408089:	mov    rax,QWORD PTR [rbp-0x10]
  40808d:	mov    rdi,rax
  408090:	call   40475f <_start@@Base+0x4af>
  408095:	movzx  eax,ax
  408098:	movzx  edx,WORD PTR [rbp-0x12]
  40809c:	add    edx,0x3
  40809f:	movsxd rdx,edx
  4080a2:	add    rdx,rdx
  4080a5:	cmp    rax,rdx
  4080a8:	jb     4080c9 <_start@@Base+0x3e19>
  4080aa:	movzx  eax,WORD PTR [rbp-0x12]
  4080ae:	add    rax,0x2
  4080b2:	lea    rdx,[rax+rax*1]
  4080b6:	mov    rax,QWORD PTR [rbp-0x10]
  4080ba:	add    rax,rdx
  4080bd:	mov    rdi,rax
  4080c0:	call   40475f <_start@@Base+0x4af>
  4080c5:	mov    WORD PTR [rbp-0x14],ax
  4080c9:	cmp    WORD PTR [rbp-0x14],0x0
  4080ce:	je     4080fa <_start@@Base+0x3e4a>
  4080d0:	movzx  edx,WORD PTR [rbp-0x14]
  4080d4:	mov    rax,QWORD PTR [rbp-0x28]
  4080d8:	add    rax,rdx
  4080db:	mov    QWORD PTR [rbp-0x8],rax
  4080df:	mov    rax,QWORD PTR [rbp-0x8]
  4080e3:	mov    rdi,rax
  4080e6:	call   4046e9 <_start@@Base+0x439>
  4080eb:	mov    eax,eax
  4080ed:	lea    rdx,[rax+0x4]
  4080f1:	mov    rax,QWORD PTR [rbp-0x8]
  4080f5:	add    rax,rdx
  4080f8:	jmp    4080ff <_start@@Base+0x3e4f>
  4080fa:	mov    eax,0x0
  4080ff:	leave  
  408100:	ret    
  408101:	push   rbp
  408102:	mov    rbp,rsp
  408105:	sub    rsp,0x20
  408109:	mov    QWORD PTR [rbp-0x18],rdi
  40810d:	lea    rax,[rip+0x16060]        # 41e174 <_IO_stdin_used@@Base+0x174>
  408114:	mov    QWORD PTR [rbp-0x10],rax
  408118:	mov    rax,QWORD PTR [rbp-0x18]
  40811c:	mov    rdi,rax
  40811f:	call   40802c <_start@@Base+0x3d7c>
  408124:	mov    QWORD PTR [rbp-0x8],rax
  408128:	cmp    QWORD PTR [rbp-0x8],0x0
  40812d:	je     40815d <_start@@Base+0x3ead>
  40812f:	mov    rdx,QWORD PTR [rbp-0x10]
  408133:	mov    rax,QWORD PTR [rbp-0x8]
  408137:	mov    rsi,rdx
  40813a:	mov    rdi,rax
  40813d:	call   405544 <_start@@Base+0x1294>
  408142:	test   eax,eax
  408144:	je     40815d <_start@@Base+0x3ead>
  408146:	mov    rax,QWORD PTR [rbp-0x8]
  40814a:	mov    rdi,rax
  40814d:	call   4046e9 <_start@@Base+0x439>
  408152:	mov    edx,eax
  408154:	mov    rax,QWORD PTR [rbp-0x8]
  408158:	add    rax,rdx
  40815b:	jmp    408162 <_start@@Base+0x3eb2>
  40815d:	mov    eax,0x0
  408162:	leave  
  408163:	ret    
  408164:	push   rbp
  408165:	mov    rbp,rsp
  408168:	sub    rsp,0x30
  40816c:	mov    QWORD PTR [rbp-0x28],rdi
  408170:	mov    WORD PTR [rbp-0x14],0x0
  408176:	cmp    QWORD PTR [rbp-0x28],0x0
  40817b:	jne    40819c <_start@@Base+0x3eec>
  40817d:	lea    rcx,[rip+0x198bc]        # 421a40 <_IO_stdin_used@@Base+0x3a40>
  408184:	mov    edx,0x2d2
  408189:	lea    rsi,[rip+0x15f68]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408190:	lea    rdi,[rip+0x16021]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408197:	call   4041f0 <__assert_fail@plt>
  40819c:	mov    WORD PTR [rbp-0x12],0xe
  4081a2:	mov    rax,QWORD PTR [rbp-0x28]
  4081a6:	mov    rdi,rax
  4081a9:	call   404734 <_start@@Base+0x484>
  4081ae:	cdqe   
  4081b0:	neg    rax
  4081b3:	mov    rdx,rax
  4081b6:	mov    rax,QWORD PTR [rbp-0x28]
  4081ba:	add    rax,rdx
  4081bd:	mov    QWORD PTR [rbp-0x10],rax
  4081c1:	mov    rax,QWORD PTR [rbp-0x10]
  4081c5:	mov    rdi,rax
  4081c8:	call   40475f <_start@@Base+0x4af>
  4081cd:	movzx  eax,ax
  4081d0:	movzx  edx,WORD PTR [rbp-0x12]
  4081d4:	add    edx,0x3
  4081d7:	movsxd rdx,edx
  4081da:	add    rdx,rdx
  4081dd:	cmp    rax,rdx
  4081e0:	jb     408201 <_start@@Base+0x3f51>
  4081e2:	movzx  eax,WORD PTR [rbp-0x12]
  4081e6:	add    rax,0x2
  4081ea:	lea    rdx,[rax+rax*1]
  4081ee:	mov    rax,QWORD PTR [rbp-0x10]
  4081f2:	add    rax,rdx
  4081f5:	mov    rdi,rax
  4081f8:	call   40475f <_start@@Base+0x4af>
  4081fd:	mov    WORD PTR [rbp-0x14],ax
  408201:	cmp    WORD PTR [rbp-0x14],0x0
  408206:	je     40822e <_start@@Base+0x3f7e>
  408208:	movzx  edx,WORD PTR [rbp-0x14]
  40820c:	mov    rax,QWORD PTR [rbp-0x28]
  408210:	add    rax,rdx
  408213:	mov    QWORD PTR [rbp-0x8],rax
  408217:	mov    rax,QWORD PTR [rbp-0x8]
  40821b:	mov    rdi,rax
  40821e:	call   4046e9 <_start@@Base+0x439>
  408223:	mov    edx,eax
  408225:	mov    rax,QWORD PTR [rbp-0x8]
  408229:	add    rax,rdx
  40822c:	jmp    408233 <_start@@Base+0x3f83>
  40822e:	mov    eax,0x0
  408233:	leave  
  408234:	ret    
  408235:	push   rbp
  408236:	mov    rbp,rsp
  408239:	sub    rsp,0x20
  40823d:	mov    QWORD PTR [rbp-0x18],rdi
  408241:	mov    WORD PTR [rbp-0xc],0x0
  408247:	cmp    QWORD PTR [rbp-0x18],0x0
  40824c:	jne    40826d <_start@@Base+0x3fbd>
  40824e:	lea    rcx,[rip+0x197ab]        # 421a00 <_IO_stdin_used@@Base+0x3a00>
  408255:	mov    edx,0x2d2
  40825a:	lea    rsi,[rip+0x15e97]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408261:	lea    rdi,[rip+0x15f50]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408268:	call   4041f0 <__assert_fail@plt>
  40826d:	mov    WORD PTR [rbp-0xa],0xe
  408273:	mov    rax,QWORD PTR [rbp-0x18]
  408277:	mov    rdi,rax
  40827a:	call   404734 <_start@@Base+0x484>
  40827f:	cdqe   
  408281:	neg    rax
  408284:	mov    rdx,rax
  408287:	mov    rax,QWORD PTR [rbp-0x18]
  40828b:	add    rax,rdx
  40828e:	mov    QWORD PTR [rbp-0x8],rax
  408292:	mov    rax,QWORD PTR [rbp-0x8]
  408296:	mov    rdi,rax
  408299:	call   40475f <_start@@Base+0x4af>
  40829e:	movzx  eax,ax
  4082a1:	movzx  edx,WORD PTR [rbp-0xa]
  4082a5:	add    edx,0x3
  4082a8:	movsxd rdx,edx
  4082ab:	add    rdx,rdx
  4082ae:	cmp    rax,rdx
  4082b1:	jb     4082d2 <_start@@Base+0x4022>
  4082b3:	movzx  eax,WORD PTR [rbp-0xa]
  4082b7:	add    rax,0x2
  4082bb:	lea    rdx,[rax+rax*1]
  4082bf:	mov    rax,QWORD PTR [rbp-0x8]
  4082c3:	add    rax,rdx
  4082c6:	mov    rdi,rax
  4082c9:	call   40475f <_start@@Base+0x4af>
  4082ce:	mov    WORD PTR [rbp-0xc],ax
  4082d2:	cmp    WORD PTR [rbp-0xc],0x0
  4082d7:	setne  al
  4082da:	movzx  eax,al
  4082dd:	leave  
  4082de:	ret    
  4082df:	push   rbp
  4082e0:	mov    rbp,rsp
  4082e3:	sub    rsp,0x20
  4082e7:	mov    QWORD PTR [rbp-0x18],rdi
  4082eb:	mov    WORD PTR [rbp-0xc],0x0
  4082f1:	cmp    QWORD PTR [rbp-0x18],0x0
  4082f6:	jne    408317 <_start@@Base+0x4067>
  4082f8:	lea    rcx,[rip+0x196e1]        # 4219e0 <_IO_stdin_used@@Base+0x39e0>
  4082ff:	mov    edx,0x2d3
  408304:	lea    rsi,[rip+0x15ded]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40830b:	lea    rdi,[rip+0x15ea6]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408312:	call   4041f0 <__assert_fail@plt>
  408317:	mov    WORD PTR [rbp-0xa],0xf
  40831d:	mov    rax,QWORD PTR [rbp-0x18]
  408321:	mov    rdi,rax
  408324:	call   404734 <_start@@Base+0x484>
  408329:	cdqe   
  40832b:	neg    rax
  40832e:	mov    rdx,rax
  408331:	mov    rax,QWORD PTR [rbp-0x18]
  408335:	add    rax,rdx
  408338:	mov    QWORD PTR [rbp-0x8],rax
  40833c:	mov    rax,QWORD PTR [rbp-0x8]
  408340:	mov    rdi,rax
  408343:	call   40475f <_start@@Base+0x4af>
  408348:	movzx  eax,ax
  40834b:	movzx  edx,WORD PTR [rbp-0xa]
  40834f:	add    edx,0x3
  408352:	movsxd rdx,edx
  408355:	add    rdx,rdx
  408358:	cmp    rax,rdx
  40835b:	jb     40837c <_start@@Base+0x40cc>
  40835d:	movzx  eax,WORD PTR [rbp-0xa]
  408361:	add    rax,0x2
  408365:	lea    rdx,[rax+rax*1]
  408369:	mov    rax,QWORD PTR [rbp-0x8]
  40836d:	add    rax,rdx
  408370:	mov    rdi,rax
  408373:	call   40475f <_start@@Base+0x4af>
  408378:	mov    WORD PTR [rbp-0xc],ax
  40837c:	cmp    WORD PTR [rbp-0xc],0x0
  408381:	je     408398 <_start@@Base+0x40e8>
  408383:	movzx  edx,WORD PTR [rbp-0xc]
  408387:	mov    rax,QWORD PTR [rbp-0x18]
  40838b:	add    rax,rdx
  40838e:	mov    rdi,rax
  408391:	call   404679 <_start@@Base+0x3c9>
  408396:	jmp    40839d <_start@@Base+0x40ed>
  408398:	mov    eax,0x1
  40839d:	leave  
  40839e:	ret    
  40839f:	push   rbp
  4083a0:	mov    rbp,rsp
  4083a3:	sub    rsp,0x20
  4083a7:	mov    QWORD PTR [rbp-0x18],rdi
  4083ab:	lea    rax,[rip+0x15dc2]        # 41e174 <_IO_stdin_used@@Base+0x174>
  4083b2:	mov    QWORD PTR [rbp-0x8],rax
  4083b6:	cmp    QWORD PTR [rbp-0x18],0x0
  4083bb:	je     4083eb <_start@@Base+0x413b>
  4083bd:	mov    rdx,QWORD PTR [rbp-0x8]
  4083c1:	mov    rax,QWORD PTR [rbp-0x18]
  4083c5:	mov    rsi,rdx
  4083c8:	mov    rdi,rax
  4083cb:	call   405544 <_start@@Base+0x1294>
  4083d0:	test   eax,eax
  4083d2:	je     4083eb <_start@@Base+0x413b>
  4083d4:	mov    rax,QWORD PTR [rbp-0x18]
  4083d8:	mov    rdi,rax
  4083db:	call   4046e9 <_start@@Base+0x439>
  4083e0:	mov    edx,eax
  4083e2:	mov    rax,QWORD PTR [rbp-0x18]
  4083e6:	add    rax,rdx
  4083e9:	jmp    4083f0 <_start@@Base+0x4140>
  4083eb:	mov    eax,0x0
  4083f0:	leave  
  4083f1:	ret    
  4083f2:	push   rbp
  4083f3:	mov    rbp,rsp
  4083f6:	sub    rsp,0x20
  4083fa:	mov    QWORD PTR [rbp-0x18],rdi
  4083fe:	mov    WORD PTR [rbp-0xc],0x0
  408404:	cmp    QWORD PTR [rbp-0x18],0x0
  408409:	jne    40842a <_start@@Base+0x417a>
  40840b:	lea    rcx,[rip+0x190be]        # 4214d0 <_IO_stdin_used@@Base+0x34d0>
  408412:	mov    edx,0x2ed
  408417:	lea    rsi,[rip+0x15cda]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40841e:	lea    rdi,[rip+0x15d93]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408425:	call   4041f0 <__assert_fail@plt>
  40842a:	mov    WORD PTR [rbp-0xa],0x0
  408430:	mov    rax,QWORD PTR [rbp-0x18]
  408434:	mov    rdi,rax
  408437:	call   404734 <_start@@Base+0x484>
  40843c:	cdqe   
  40843e:	neg    rax
  408441:	mov    rdx,rax
  408444:	mov    rax,QWORD PTR [rbp-0x18]
  408448:	add    rax,rdx
  40844b:	mov    QWORD PTR [rbp-0x8],rax
  40844f:	mov    rax,QWORD PTR [rbp-0x8]
  408453:	mov    rdi,rax
  408456:	call   40475f <_start@@Base+0x4af>
  40845b:	movzx  eax,ax
  40845e:	movzx  edx,WORD PTR [rbp-0xa]
  408462:	add    edx,0x3
  408465:	movsxd rdx,edx
  408468:	add    rdx,rdx
  40846b:	cmp    rax,rdx
  40846e:	jb     40848f <_start@@Base+0x41df>
  408470:	movzx  eax,WORD PTR [rbp-0xa]
  408474:	add    rax,0x2
  408478:	lea    rdx,[rax+rax*1]
  40847c:	mov    rax,QWORD PTR [rbp-0x8]
  408480:	add    rax,rdx
  408483:	mov    rdi,rax
  408486:	call   40475f <_start@@Base+0x4af>
  40848b:	mov    WORD PTR [rbp-0xc],ax
  40848f:	cmp    WORD PTR [rbp-0xc],0x0
  408494:	je     4084ab <_start@@Base+0x41fb>
  408496:	movzx  edx,WORD PTR [rbp-0xc]
  40849a:	mov    rax,QWORD PTR [rbp-0x18]
  40849e:	add    rax,rdx
  4084a1:	mov    rdi,rax
  4084a4:	call   40449c <_start@@Base+0x1ec>
  4084a9:	jmp    4084b0 <_start@@Base+0x4200>
  4084ab:	mov    eax,0x0
  4084b0:	leave  
  4084b1:	ret    
  4084b2:	push   rbp
  4084b3:	mov    rbp,rsp
  4084b6:	sub    rsp,0x20
  4084ba:	mov    QWORD PTR [rbp-0x18],rdi
  4084be:	mov    WORD PTR [rbp-0xc],0x0
  4084c4:	cmp    QWORD PTR [rbp-0x18],0x0
  4084c9:	jne    4084ea <_start@@Base+0x423a>
  4084cb:	lea    rcx,[rip+0x1907e]        # 421550 <_IO_stdin_used@@Base+0x3550>
  4084d2:	mov    edx,0x2ee
  4084d7:	lea    rsi,[rip+0x15c1a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4084de:	lea    rdi,[rip+0x15cd3]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4084e5:	call   4041f0 <__assert_fail@plt>
  4084ea:	mov    WORD PTR [rbp-0xa],0x1
  4084f0:	mov    rax,QWORD PTR [rbp-0x18]
  4084f4:	mov    rdi,rax
  4084f7:	call   404734 <_start@@Base+0x484>
  4084fc:	cdqe   
  4084fe:	neg    rax
  408501:	mov    rdx,rax
  408504:	mov    rax,QWORD PTR [rbp-0x18]
  408508:	add    rax,rdx
  40850b:	mov    QWORD PTR [rbp-0x8],rax
  40850f:	mov    rax,QWORD PTR [rbp-0x8]
  408513:	mov    rdi,rax
  408516:	call   40475f <_start@@Base+0x4af>
  40851b:	movzx  eax,ax
  40851e:	movzx  edx,WORD PTR [rbp-0xa]
  408522:	add    edx,0x3
  408525:	movsxd rdx,edx
  408528:	add    rdx,rdx
  40852b:	cmp    rax,rdx
  40852e:	jb     40854f <_start@@Base+0x429f>
  408530:	movzx  eax,WORD PTR [rbp-0xa]
  408534:	add    rax,0x2
  408538:	lea    rdx,[rax+rax*1]
  40853c:	mov    rax,QWORD PTR [rbp-0x8]
  408540:	add    rax,rdx
  408543:	mov    rdi,rax
  408546:	call   40475f <_start@@Base+0x4af>
  40854b:	mov    WORD PTR [rbp-0xc],ax
  40854f:	cmp    WORD PTR [rbp-0xc],0x0
  408554:	je     40856b <_start@@Base+0x42bb>
  408556:	movzx  edx,WORD PTR [rbp-0xc]
  40855a:	mov    rax,QWORD PTR [rbp-0x18]
  40855e:	add    rax,rdx
  408561:	mov    rdi,rax
  408564:	call   4043b4 <_start@@Base+0x104>
  408569:	jmp    408570 <_start@@Base+0x42c0>
  40856b:	mov    eax,0x0
  408570:	leave  
  408571:	ret    
  408572:	push   rbp
  408573:	mov    rbp,rsp
  408576:	sub    rsp,0x20
  40857a:	mov    QWORD PTR [rbp-0x18],rdi
  40857e:	mov    WORD PTR [rbp-0xc],0x0
  408584:	cmp    QWORD PTR [rbp-0x18],0x0
  408589:	jne    4085aa <_start@@Base+0x42fa>
  40858b:	lea    rcx,[rip+0x18f5e]        # 4214f0 <_IO_stdin_used@@Base+0x34f0>
  408592:	mov    edx,0x2ef
  408597:	lea    rsi,[rip+0x15b5a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40859e:	lea    rdi,[rip+0x15c13]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4085a5:	call   4041f0 <__assert_fail@plt>
  4085aa:	mov    WORD PTR [rbp-0xa],0x2
  4085b0:	mov    rax,QWORD PTR [rbp-0x18]
  4085b4:	mov    rdi,rax
  4085b7:	call   404734 <_start@@Base+0x484>
  4085bc:	cdqe   
  4085be:	neg    rax
  4085c1:	mov    rdx,rax
  4085c4:	mov    rax,QWORD PTR [rbp-0x18]
  4085c8:	add    rax,rdx
  4085cb:	mov    QWORD PTR [rbp-0x8],rax
  4085cf:	mov    rax,QWORD PTR [rbp-0x8]
  4085d3:	mov    rdi,rax
  4085d6:	call   40475f <_start@@Base+0x4af>
  4085db:	movzx  eax,ax
  4085de:	movzx  edx,WORD PTR [rbp-0xa]
  4085e2:	add    edx,0x3
  4085e5:	movsxd rdx,edx
  4085e8:	add    rdx,rdx
  4085eb:	cmp    rax,rdx
  4085ee:	jb     40860f <_start@@Base+0x435f>
  4085f0:	movzx  eax,WORD PTR [rbp-0xa]
  4085f4:	add    rax,0x2
  4085f8:	lea    rdx,[rax+rax*1]
  4085fc:	mov    rax,QWORD PTR [rbp-0x8]
  408600:	add    rax,rdx
  408603:	mov    rdi,rax
  408606:	call   40475f <_start@@Base+0x4af>
  40860b:	mov    WORD PTR [rbp-0xc],ax
  40860f:	cmp    WORD PTR [rbp-0xc],0x0
  408614:	je     40862b <_start@@Base+0x437b>
  408616:	movzx  edx,WORD PTR [rbp-0xc]
  40861a:	mov    rax,QWORD PTR [rbp-0x18]
  40861e:	add    rax,rdx
  408621:	mov    rdi,rax
  408624:	call   4044db <_start@@Base+0x22b>
  408629:	jmp    408630 <_start@@Base+0x4380>
  40862b:	mov    eax,0x0
  408630:	leave  
  408631:	ret    
  408632:	push   rbp
  408633:	mov    rbp,rsp
  408636:	sub    rsp,0x20
  40863a:	mov    QWORD PTR [rbp-0x18],rdi
  40863e:	mov    WORD PTR [rbp-0xc],0x0
  408644:	cmp    QWORD PTR [rbp-0x18],0x0
  408649:	jne    40866a <_start@@Base+0x43ba>
  40864b:	lea    rcx,[rip+0x18f1e]        # 421570 <_IO_stdin_used@@Base+0x3570>
  408652:	mov    edx,0x2f0
  408657:	lea    rsi,[rip+0x15a9a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40865e:	lea    rdi,[rip+0x15b53]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408665:	call   4041f0 <__assert_fail@plt>
  40866a:	mov    WORD PTR [rbp-0xa],0x3
  408670:	mov    rax,QWORD PTR [rbp-0x18]
  408674:	mov    rdi,rax
  408677:	call   404734 <_start@@Base+0x484>
  40867c:	cdqe   
  40867e:	neg    rax
  408681:	mov    rdx,rax
  408684:	mov    rax,QWORD PTR [rbp-0x18]
  408688:	add    rax,rdx
  40868b:	mov    QWORD PTR [rbp-0x8],rax
  40868f:	mov    rax,QWORD PTR [rbp-0x8]
  408693:	mov    rdi,rax
  408696:	call   40475f <_start@@Base+0x4af>
  40869b:	movzx  eax,ax
  40869e:	movzx  edx,WORD PTR [rbp-0xa]
  4086a2:	add    edx,0x3
  4086a5:	movsxd rdx,edx
  4086a8:	add    rdx,rdx
  4086ab:	cmp    rax,rdx
  4086ae:	jb     4086cf <_start@@Base+0x441f>
  4086b0:	movzx  eax,WORD PTR [rbp-0xa]
  4086b4:	add    rax,0x2
  4086b8:	lea    rdx,[rax+rax*1]
  4086bc:	mov    rax,QWORD PTR [rbp-0x8]
  4086c0:	add    rax,rdx
  4086c3:	mov    rdi,rax
  4086c6:	call   40475f <_start@@Base+0x4af>
  4086cb:	mov    WORD PTR [rbp-0xc],ax
  4086cf:	cmp    WORD PTR [rbp-0xc],0x0
  4086d4:	je     4086eb <_start@@Base+0x443b>
  4086d6:	movzx  edx,WORD PTR [rbp-0xc]
  4086da:	mov    rax,QWORD PTR [rbp-0x18]
  4086de:	add    rax,rdx
  4086e1:	mov    rdi,rax
  4086e4:	call   4043f3 <_start@@Base+0x143>
  4086e9:	jmp    4086f0 <_start@@Base+0x4440>
  4086eb:	mov    eax,0x0
  4086f0:	leave  
  4086f1:	ret    
  4086f2:	push   rbp
  4086f3:	mov    rbp,rsp
  4086f6:	sub    rsp,0x20
  4086fa:	mov    QWORD PTR [rbp-0x18],rdi
  4086fe:	mov    WORD PTR [rbp-0xc],0x0
  408704:	cmp    QWORD PTR [rbp-0x18],0x0
  408709:	jne    40872a <_start@@Base+0x447a>
  40870b:	lea    rcx,[rip+0x18dfe]        # 421510 <_IO_stdin_used@@Base+0x3510>
  408712:	mov    edx,0x2f1
  408717:	lea    rsi,[rip+0x159da]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40871e:	lea    rdi,[rip+0x15a93]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408725:	call   4041f0 <__assert_fail@plt>
  40872a:	mov    WORD PTR [rbp-0xa],0x4
  408730:	mov    rax,QWORD PTR [rbp-0x18]
  408734:	mov    rdi,rax
  408737:	call   404734 <_start@@Base+0x484>
  40873c:	cdqe   
  40873e:	neg    rax
  408741:	mov    rdx,rax
  408744:	mov    rax,QWORD PTR [rbp-0x18]
  408748:	add    rax,rdx
  40874b:	mov    QWORD PTR [rbp-0x8],rax
  40874f:	mov    rax,QWORD PTR [rbp-0x8]
  408753:	mov    rdi,rax
  408756:	call   40475f <_start@@Base+0x4af>
  40875b:	movzx  eax,ax
  40875e:	movzx  edx,WORD PTR [rbp-0xa]
  408762:	add    edx,0x3
  408765:	movsxd rdx,edx
  408768:	add    rdx,rdx
  40876b:	cmp    rax,rdx
  40876e:	jb     40878f <_start@@Base+0x44df>
  408770:	movzx  eax,WORD PTR [rbp-0xa]
  408774:	add    rax,0x2
  408778:	lea    rdx,[rax+rax*1]
  40877c:	mov    rax,QWORD PTR [rbp-0x8]
  408780:	add    rax,rdx
  408783:	mov    rdi,rax
  408786:	call   40475f <_start@@Base+0x4af>
  40878b:	mov    WORD PTR [rbp-0xc],ax
  40878f:	cmp    WORD PTR [rbp-0xc],0x0
  408794:	je     4087ab <_start@@Base+0x44fb>
  408796:	movzx  edx,WORD PTR [rbp-0xc]
  40879a:	mov    rax,QWORD PTR [rbp-0x18]
  40879e:	add    rax,rdx
  4087a1:	mov    rdi,rax
  4087a4:	call   404510 <_start@@Base+0x260>
  4087a9:	jmp    4087b0 <_start@@Base+0x4500>
  4087ab:	mov    eax,0x0
  4087b0:	leave  
  4087b1:	ret    
  4087b2:	push   rbp
  4087b3:	mov    rbp,rsp
  4087b6:	sub    rsp,0x20
  4087ba:	mov    QWORD PTR [rbp-0x18],rdi
  4087be:	mov    WORD PTR [rbp-0xc],0x0
  4087c4:	cmp    QWORD PTR [rbp-0x18],0x0
  4087c9:	jne    4087ea <_start@@Base+0x453a>
  4087cb:	lea    rcx,[rip+0x18dbe]        # 421590 <_IO_stdin_used@@Base+0x3590>
  4087d2:	mov    edx,0x2f2
  4087d7:	lea    rsi,[rip+0x1591a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4087de:	lea    rdi,[rip+0x159d3]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4087e5:	call   4041f0 <__assert_fail@plt>
  4087ea:	mov    WORD PTR [rbp-0xa],0x5
  4087f0:	mov    rax,QWORD PTR [rbp-0x18]
  4087f4:	mov    rdi,rax
  4087f7:	call   404734 <_start@@Base+0x484>
  4087fc:	cdqe   
  4087fe:	neg    rax
  408801:	mov    rdx,rax
  408804:	mov    rax,QWORD PTR [rbp-0x18]
  408808:	add    rax,rdx
  40880b:	mov    QWORD PTR [rbp-0x8],rax
  40880f:	mov    rax,QWORD PTR [rbp-0x8]
  408813:	mov    rdi,rax
  408816:	call   40475f <_start@@Base+0x4af>
  40881b:	movzx  eax,ax
  40881e:	movzx  edx,WORD PTR [rbp-0xa]
  408822:	add    edx,0x3
  408825:	movsxd rdx,edx
  408828:	add    rdx,rdx
  40882b:	cmp    rax,rdx
  40882e:	jb     40884f <_start@@Base+0x459f>
  408830:	movzx  eax,WORD PTR [rbp-0xa]
  408834:	add    rax,0x2
  408838:	lea    rdx,[rax+rax*1]
  40883c:	mov    rax,QWORD PTR [rbp-0x8]
  408840:	add    rax,rdx
  408843:	mov    rdi,rax
  408846:	call   40475f <_start@@Base+0x4af>
  40884b:	mov    WORD PTR [rbp-0xc],ax
  40884f:	cmp    WORD PTR [rbp-0xc],0x0
  408854:	je     40886b <_start@@Base+0x45bb>
  408856:	movzx  edx,WORD PTR [rbp-0xc]
  40885a:	mov    rax,QWORD PTR [rbp-0x18]
  40885e:	add    rax,rdx
  408861:	mov    rdi,rax
  408864:	call   40442a <_start@@Base+0x17a>
  408869:	jmp    408870 <_start@@Base+0x45c0>
  40886b:	mov    eax,0x0
  408870:	leave  
  408871:	ret    
  408872:	push   rbp
  408873:	mov    rbp,rsp
  408876:	sub    rsp,0x20
  40887a:	mov    QWORD PTR [rbp-0x18],rdi
  40887e:	mov    WORD PTR [rbp-0xc],0x0
  408884:	cmp    QWORD PTR [rbp-0x18],0x0
  408889:	jne    4088aa <_start@@Base+0x45fa>
  40888b:	lea    rcx,[rip+0x18c9e]        # 421530 <_IO_stdin_used@@Base+0x3530>
  408892:	mov    edx,0x2f3
  408897:	lea    rsi,[rip+0x1585a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40889e:	lea    rdi,[rip+0x15913]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4088a5:	call   4041f0 <__assert_fail@plt>
  4088aa:	mov    WORD PTR [rbp-0xa],0x6
  4088b0:	mov    rax,QWORD PTR [rbp-0x18]
  4088b4:	mov    rdi,rax
  4088b7:	call   404734 <_start@@Base+0x484>
  4088bc:	cdqe   
  4088be:	neg    rax
  4088c1:	mov    rdx,rax
  4088c4:	mov    rax,QWORD PTR [rbp-0x18]
  4088c8:	add    rax,rdx
  4088cb:	mov    QWORD PTR [rbp-0x8],rax
  4088cf:	mov    rax,QWORD PTR [rbp-0x8]
  4088d3:	mov    rdi,rax
  4088d6:	call   40475f <_start@@Base+0x4af>
  4088db:	movzx  eax,ax
  4088de:	movzx  edx,WORD PTR [rbp-0xa]
  4088e2:	add    edx,0x3
  4088e5:	movsxd rdx,edx
  4088e8:	add    rdx,rdx
  4088eb:	cmp    rax,rdx
  4088ee:	jb     40890f <_start@@Base+0x465f>
  4088f0:	movzx  eax,WORD PTR [rbp-0xa]
  4088f4:	add    rax,0x2
  4088f8:	lea    rdx,[rax+rax*1]
  4088fc:	mov    rax,QWORD PTR [rbp-0x8]
  408900:	add    rax,rdx
  408903:	mov    rdi,rax
  408906:	call   40475f <_start@@Base+0x4af>
  40890b:	mov    WORD PTR [rbp-0xc],ax
  40890f:	cmp    WORD PTR [rbp-0xc],0x0
  408914:	je     40892b <_start@@Base+0x467b>
  408916:	movzx  edx,WORD PTR [rbp-0xc]
  40891a:	mov    rax,QWORD PTR [rbp-0x18]
  40891e:	add    rax,rdx
  408921:	mov    rdi,rax
  408924:	call   404547 <_start@@Base+0x297>
  408929:	jmp    408930 <_start@@Base+0x4680>
  40892b:	mov    eax,0x0
  408930:	leave  
  408931:	ret    
  408932:	push   rbp
  408933:	mov    rbp,rsp
  408936:	sub    rsp,0x20
  40893a:	mov    QWORD PTR [rbp-0x18],rdi
  40893e:	mov    WORD PTR [rbp-0xc],0x0
  408944:	cmp    QWORD PTR [rbp-0x18],0x0
  408949:	jne    40896a <_start@@Base+0x46ba>
  40894b:	lea    rcx,[rip+0x18c5e]        # 4215b0 <_IO_stdin_used@@Base+0x35b0>
  408952:	mov    edx,0x2f4
  408957:	lea    rsi,[rip+0x1579a]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40895e:	lea    rdi,[rip+0x15853]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408965:	call   4041f0 <__assert_fail@plt>
  40896a:	mov    WORD PTR [rbp-0xa],0x7
  408970:	mov    rax,QWORD PTR [rbp-0x18]
  408974:	mov    rdi,rax
  408977:	call   404734 <_start@@Base+0x484>
  40897c:	cdqe   
  40897e:	neg    rax
  408981:	mov    rdx,rax
  408984:	mov    rax,QWORD PTR [rbp-0x18]
  408988:	add    rax,rdx
  40898b:	mov    QWORD PTR [rbp-0x8],rax
  40898f:	mov    rax,QWORD PTR [rbp-0x8]
  408993:	mov    rdi,rax
  408996:	call   40475f <_start@@Base+0x4af>
  40899b:	movzx  eax,ax
  40899e:	movzx  edx,WORD PTR [rbp-0xa]
  4089a2:	add    edx,0x3
  4089a5:	movsxd rdx,edx
  4089a8:	add    rdx,rdx
  4089ab:	cmp    rax,rdx
  4089ae:	jb     4089cf <_start@@Base+0x471f>
  4089b0:	movzx  eax,WORD PTR [rbp-0xa]
  4089b4:	add    rax,0x2
  4089b8:	lea    rdx,[rax+rax*1]
  4089bc:	mov    rax,QWORD PTR [rbp-0x8]
  4089c0:	add    rax,rdx
  4089c3:	mov    rdi,rax
  4089c6:	call   40475f <_start@@Base+0x4af>
  4089cb:	mov    WORD PTR [rbp-0xc],ax
  4089cf:	cmp    WORD PTR [rbp-0xc],0x0
  4089d4:	je     4089eb <_start@@Base+0x473b>
  4089d6:	movzx  edx,WORD PTR [rbp-0xc]
  4089da:	mov    rax,QWORD PTR [rbp-0x18]
  4089de:	add    rax,rdx
  4089e1:	mov    rdi,rax
  4089e4:	call   404461 <_start@@Base+0x1b1>
  4089e9:	jmp    4089f0 <_start@@Base+0x4740>
  4089eb:	mov    eax,0x0
  4089f0:	leave  
  4089f1:	ret    
  4089f2:	push   rbp
  4089f3:	mov    rbp,rsp
  4089f6:	sub    rsp,0x20
  4089fa:	mov    QWORD PTR [rbp-0x18],rdi
  4089fe:	mov    WORD PTR [rbp-0xc],0x0
  408a04:	cmp    QWORD PTR [rbp-0x18],0x0
  408a09:	jne    408a2a <_start@@Base+0x477a>
  408a0b:	lea    rcx,[rip+0x18bbe]        # 4215d0 <_IO_stdin_used@@Base+0x35d0>
  408a12:	mov    edx,0x2f5
  408a17:	lea    rsi,[rip+0x156da]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408a1e:	lea    rdi,[rip+0x15793]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408a25:	call   4041f0 <__assert_fail@plt>
  408a2a:	mov    WORD PTR [rbp-0xa],0x8
  408a30:	mov    rax,QWORD PTR [rbp-0x18]
  408a34:	mov    rdi,rax
  408a37:	call   404734 <_start@@Base+0x484>
  408a3c:	cdqe   
  408a3e:	neg    rax
  408a41:	mov    rdx,rax
  408a44:	mov    rax,QWORD PTR [rbp-0x18]
  408a48:	add    rax,rdx
  408a4b:	mov    QWORD PTR [rbp-0x8],rax
  408a4f:	mov    rax,QWORD PTR [rbp-0x8]
  408a53:	mov    rdi,rax
  408a56:	call   40475f <_start@@Base+0x4af>
  408a5b:	movzx  eax,ax
  408a5e:	movzx  edx,WORD PTR [rbp-0xa]
  408a62:	add    edx,0x3
  408a65:	movsxd rdx,edx
  408a68:	add    rdx,rdx
  408a6b:	cmp    rax,rdx
  408a6e:	jb     408a8f <_start@@Base+0x47df>
  408a70:	movzx  eax,WORD PTR [rbp-0xa]
  408a74:	add    rax,0x2
  408a78:	lea    rdx,[rax+rax*1]
  408a7c:	mov    rax,QWORD PTR [rbp-0x8]
  408a80:	add    rax,rdx
  408a83:	mov    rdi,rax
  408a86:	call   40475f <_start@@Base+0x4af>
  408a8b:	mov    WORD PTR [rbp-0xc],ax
  408a8f:	cmp    WORD PTR [rbp-0xc],0x0
  408a94:	je     408aaf <_start@@Base+0x47ff>
  408a96:	movzx  edx,WORD PTR [rbp-0xc]
  408a9a:	mov    rax,QWORD PTR [rbp-0x18]
  408a9e:	add    rax,rdx
  408aa1:	mov    rdi,rax
  408aa4:	call   4045a4 <_start@@Base+0x2f4>
  408aa9:	vmovd  eax,xmm0
  408aad:	jmp    408ab5 <_start@@Base+0x4805>
  408aaf:	mov    eax,DWORD PTR [rip+0x19717]        # 4221cc <_IO_stdin_used@@Base+0x41cc>
  408ab5:	vmovd  xmm0,eax
  408ab9:	leave  
  408aba:	ret    
  408abb:	push   rbp
  408abc:	mov    rbp,rsp
  408abf:	sub    rsp,0x20
  408ac3:	mov    QWORD PTR [rbp-0x18],rdi
  408ac7:	mov    WORD PTR [rbp-0xc],0x0
  408acd:	cmp    QWORD PTR [rbp-0x18],0x0
  408ad2:	jne    408af3 <_start@@Base+0x4843>
  408ad4:	lea    rcx,[rip+0x18b15]        # 4215f0 <_IO_stdin_used@@Base+0x35f0>
  408adb:	mov    edx,0x2f6
  408ae0:	lea    rsi,[rip+0x15611]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408ae7:	lea    rdi,[rip+0x156ca]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408aee:	call   4041f0 <__assert_fail@plt>
  408af3:	mov    WORD PTR [rbp-0xa],0x9
  408af9:	mov    rax,QWORD PTR [rbp-0x18]
  408afd:	mov    rdi,rax
  408b00:	call   404734 <_start@@Base+0x484>
  408b05:	cdqe   
  408b07:	neg    rax
  408b0a:	mov    rdx,rax
  408b0d:	mov    rax,QWORD PTR [rbp-0x18]
  408b11:	add    rax,rdx
  408b14:	mov    QWORD PTR [rbp-0x8],rax
  408b18:	mov    rax,QWORD PTR [rbp-0x8]
  408b1c:	mov    rdi,rax
  408b1f:	call   40475f <_start@@Base+0x4af>
  408b24:	movzx  eax,ax
  408b27:	movzx  edx,WORD PTR [rbp-0xa]
  408b2b:	add    edx,0x3
  408b2e:	movsxd rdx,edx
  408b31:	add    rdx,rdx
  408b34:	cmp    rax,rdx
  408b37:	jb     408b58 <_start@@Base+0x48a8>
  408b39:	movzx  eax,WORD PTR [rbp-0xa]
  408b3d:	add    rax,0x2
  408b41:	lea    rdx,[rax+rax*1]
  408b45:	mov    rax,QWORD PTR [rbp-0x8]
  408b49:	add    rax,rdx
  408b4c:	mov    rdi,rax
  408b4f:	call   40475f <_start@@Base+0x4af>
  408b54:	mov    WORD PTR [rbp-0xc],ax
  408b58:	cmp    WORD PTR [rbp-0xc],0x0
  408b5d:	je     408b79 <_start@@Base+0x48c9>
  408b5f:	movzx  edx,WORD PTR [rbp-0xc]
  408b63:	mov    rax,QWORD PTR [rbp-0x18]
  408b67:	add    rax,rdx
  408b6a:	mov    rdi,rax
  408b6d:	call   404619 <_start@@Base+0x369>
  408b72:	vmovq  rax,xmm0
  408b77:	jmp    408b80 <_start@@Base+0x48d0>
  408b79:	mov    rax,QWORD PTR [rip+0x19650]        # 4221d0 <_IO_stdin_used@@Base+0x41d0>
  408b80:	vmovq  xmm0,rax
  408b85:	leave  
  408b86:	ret    
  408b87:	push   rbp
  408b88:	mov    rbp,rsp
  408b8b:	sub    rsp,0x20
  408b8f:	mov    QWORD PTR [rbp-0x18],rdi
  408b93:	mov    WORD PTR [rbp-0xc],0x0
  408b99:	cmp    QWORD PTR [rbp-0x18],0x0
  408b9e:	jne    408bbf <_start@@Base+0x490f>
  408ba0:	lea    rcx,[rip+0x19459]        # 422000 <_IO_stdin_used@@Base+0x4000>
  408ba7:	mov    edx,0x302
  408bac:	lea    rsi,[rip+0x15545]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408bb3:	lea    rdi,[rip+0x155fe]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408bba:	call   4041f0 <__assert_fail@plt>
  408bbf:	mov    WORD PTR [rbp-0xa],0x0
  408bc5:	mov    rax,QWORD PTR [rbp-0x18]
  408bc9:	mov    rdi,rax
  408bcc:	call   404734 <_start@@Base+0x484>
  408bd1:	cdqe   
  408bd3:	neg    rax
  408bd6:	mov    rdx,rax
  408bd9:	mov    rax,QWORD PTR [rbp-0x18]
  408bdd:	add    rax,rdx
  408be0:	mov    QWORD PTR [rbp-0x8],rax
  408be4:	mov    rax,QWORD PTR [rbp-0x8]
  408be8:	mov    rdi,rax
  408beb:	call   40475f <_start@@Base+0x4af>
  408bf0:	movzx  eax,ax
  408bf3:	movzx  edx,WORD PTR [rbp-0xa]
  408bf7:	add    edx,0x3
  408bfa:	movsxd rdx,edx
  408bfd:	add    rdx,rdx
  408c00:	cmp    rax,rdx
  408c03:	jb     408c24 <_start@@Base+0x4974>
  408c05:	movzx  eax,WORD PTR [rbp-0xa]
  408c09:	add    rax,0x2
  408c0d:	lea    rdx,[rax+rax*1]
  408c11:	mov    rax,QWORD PTR [rbp-0x8]
  408c15:	add    rax,rdx
  408c18:	mov    rdi,rax
  408c1b:	call   40475f <_start@@Base+0x4af>
  408c20:	mov    WORD PTR [rbp-0xc],ax
  408c24:	cmp    WORD PTR [rbp-0xc],0x0
  408c29:	je     408c40 <_start@@Base+0x4990>
  408c2b:	movzx  edx,WORD PTR [rbp-0xc]
  408c2f:	mov    rax,QWORD PTR [rbp-0x18]
  408c33:	add    rax,rdx
  408c36:	mov    rdi,rax
  408c39:	call   404510 <_start@@Base+0x260>
  408c3e:	jmp    408c45 <_start@@Base+0x4995>
  408c40:	mov    eax,0x0
  408c45:	leave  
  408c46:	ret    
  408c47:	push   rbp
  408c48:	mov    rbp,rsp
  408c4b:	sub    rsp,0x10
  408c4f:	mov    rax,rdi
  408c52:	mov    rcx,rsi
  408c55:	mov    rdx,rcx
  408c58:	mov    QWORD PTR [rbp-0x10],rax
  408c5c:	mov    QWORD PTR [rbp-0x8],rdx
  408c60:	mov    rax,QWORD PTR [rbp-0x10]
  408c64:	mov    rdi,rax
  408c67:	call   404876 <_start@@Base+0x5c6>
  408c6c:	leave  
  408c6d:	ret    
  408c6e:	push   rbp
  408c6f:	mov    rbp,rsp
  408c72:	push   rbx
  408c73:	sub    rsp,0x48
  408c77:	mov    rax,rdi
  408c7a:	mov    rcx,rax
  408c7d:	mov    rbx,rdx
  408c80:	mov    rbx,rsi
  408c83:	mov    QWORD PTR [rbp-0x40],rcx
  408c87:	mov    QWORD PTR [rbp-0x38],rbx
  408c8b:	mov    QWORD PTR [rbp-0x48],rdx
  408c8f:	mov    BYTE PTR [rbp-0x20],0x0
  408c93:	mov    QWORD PTR [rbp-0x18],0x0
  408c9b:	mov    rax,QWORD PTR [rbp-0x40]
  408c9f:	mov    rdi,rax
  408ca2:	call   404876 <_start@@Base+0x5c6>
  408ca7:	mov    QWORD PTR [rbp-0x28],rax
  408cab:	mov    rax,QWORD PTR [rbp-0x28]
  408caf:	cmp    rax,QWORD PTR [rbp-0x48]
  408cb3:	ja     408cd4 <_start@@Base+0x4a24>
  408cb5:	lea    rcx,[rip+0x193d4]        # 422090 <_IO_stdin_used@@Base+0x4090>
  408cbc:	mov    edx,0x305
  408cc1:	lea    rsi,[rip+0x15430]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408cc8:	lea    rdi,[rip+0x154b1]        # 41e180 <_IO_stdin_used@@Base+0x180>
  408ccf:	call   4041f0 <__assert_fail@plt>
  408cd4:	mov    rdx,QWORD PTR [rbp-0x40]
  408cd8:	mov    rax,QWORD PTR [rbp-0x48]
  408cdc:	add    rax,rdx
  408cdf:	movzx  eax,BYTE PTR [rax]
  408ce2:	mov    BYTE PTR [rbp-0x20],al
  408ce5:	movzx  eax,BYTE PTR [rbp-0x20]
  408ce9:	test   al,al
  408ceb:	jne    408cf7 <_start@@Base+0x4a47>
  408ced:	mov    rax,QWORD PTR [rbp-0x20]
  408cf1:	mov    rdx,QWORD PTR [rbp-0x18]
  408cf5:	jmp    408d16 <_start@@Base+0x4a66>
  408cf7:	mov    rax,QWORD PTR [rbp-0x38]
  408cfb:	mov    rdx,QWORD PTR [rbp-0x48]
  408cff:	mov    rsi,rdx
  408d02:	mov    rdi,rax
  408d05:	call   4049a3 <_start@@Base+0x6f3>
  408d0a:	mov    QWORD PTR [rbp-0x18],rax
  408d0e:	mov    rax,QWORD PTR [rbp-0x20]
  408d12:	mov    rdx,QWORD PTR [rbp-0x18]
  408d16:	mov    rcx,rax
  408d19:	mov    rbx,rdx
  408d1c:	mov    eax,ecx
  408d1e:	add    rsp,0x48
  408d22:	pop    rbx
  408d23:	pop    rbp
  408d24:	ret    
  408d25:	push   rbp
  408d26:	mov    rbp,rsp
  408d29:	push   rbx
  408d2a:	sub    rsp,0x28
  408d2e:	mov    rax,rdi
  408d31:	mov    rcx,rax
  408d34:	mov    rbx,rdx
  408d37:	mov    rbx,rsi
  408d3a:	mov    QWORD PTR [rbp-0x20],rcx
  408d3e:	mov    QWORD PTR [rbp-0x18],rbx
  408d42:	mov    QWORD PTR [rbp-0x28],rdx
  408d46:	mov    rax,QWORD PTR [rbp-0x18]
  408d4a:	mov    rdx,QWORD PTR [rbp-0x28]
  408d4e:	mov    rsi,rdx
  408d51:	mov    rdi,rax
  408d54:	call   404a12 <_start@@Base+0x762>
  408d59:	add    rsp,0x28
  408d5d:	pop    rbx
  408d5e:	pop    rbp
  408d5f:	ret    
  408d60:	push   rbp
  408d61:	mov    rbp,rsp
  408d64:	sub    rsp,0x20
  408d68:	mov    QWORD PTR [rbp-0x18],rdi
  408d6c:	lea    rax,[rip+0x15401]        # 41e174 <_IO_stdin_used@@Base+0x174>
  408d73:	mov    QWORD PTR [rbp-0x8],rax
  408d77:	cmp    QWORD PTR [rbp-0x18],0x0
  408d7c:	je     408dac <_start@@Base+0x4afc>
  408d7e:	mov    rdx,QWORD PTR [rbp-0x8]
  408d82:	mov    rax,QWORD PTR [rbp-0x18]
  408d86:	mov    rsi,rdx
  408d89:	mov    rdi,rax
  408d8c:	call   405544 <_start@@Base+0x1294>
  408d91:	test   eax,eax
  408d93:	je     408dac <_start@@Base+0x4afc>
  408d95:	mov    rax,QWORD PTR [rbp-0x18]
  408d99:	mov    rdi,rax
  408d9c:	call   4046e9 <_start@@Base+0x439>
  408da1:	mov    edx,eax
  408da3:	mov    rax,QWORD PTR [rbp-0x18]
  408da7:	add    rax,rdx
  408daa:	jmp    408db1 <_start@@Base+0x4b01>
  408dac:	mov    eax,0x0
  408db1:	leave  
  408db2:	ret    
  408db3:	push   rbp
  408db4:	mov    rbp,rsp
  408db7:	sub    rsp,0x20
  408dbb:	mov    QWORD PTR [rbp-0x18],rdi
  408dbf:	mov    WORD PTR [rbp-0xc],0x0
  408dc5:	cmp    QWORD PTR [rbp-0x18],0x0
  408dca:	jne    408deb <_start@@Base+0x4b3b>
  408dcc:	lea    rcx,[rip+0x190cd]        # 421ea0 <_IO_stdin_used@@Base+0x3ea0>
  408dd3:	mov    edx,0x333
  408dd8:	lea    rsi,[rip+0x15319]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408ddf:	lea    rdi,[rip+0x153d2]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408de6:	call   4041f0 <__assert_fail@plt>
  408deb:	mov    WORD PTR [rbp-0xa],0x0
  408df1:	mov    rax,QWORD PTR [rbp-0x18]
  408df5:	mov    rdi,rax
  408df8:	call   404734 <_start@@Base+0x484>
  408dfd:	cdqe   
  408dff:	neg    rax
  408e02:	mov    rdx,rax
  408e05:	mov    rax,QWORD PTR [rbp-0x18]
  408e09:	add    rax,rdx
  408e0c:	mov    QWORD PTR [rbp-0x8],rax
  408e10:	mov    rax,QWORD PTR [rbp-0x8]
  408e14:	mov    rdi,rax
  408e17:	call   40475f <_start@@Base+0x4af>
  408e1c:	movzx  eax,ax
  408e1f:	movzx  edx,WORD PTR [rbp-0xa]
  408e23:	add    edx,0x3
  408e26:	movsxd rdx,edx
  408e29:	add    rdx,rdx
  408e2c:	cmp    rax,rdx
  408e2f:	jb     408e50 <_start@@Base+0x4ba0>
  408e31:	movzx  eax,WORD PTR [rbp-0xa]
  408e35:	add    rax,0x2
  408e39:	lea    rdx,[rax+rax*1]
  408e3d:	mov    rax,QWORD PTR [rbp-0x8]
  408e41:	add    rax,rdx
  408e44:	mov    rdi,rax
  408e47:	call   40475f <_start@@Base+0x4af>
  408e4c:	mov    WORD PTR [rbp-0xc],ax
  408e50:	cmp    WORD PTR [rbp-0xc],0x0
  408e55:	je     408e6c <_start@@Base+0x4bbc>
  408e57:	movzx  edx,WORD PTR [rbp-0xc]
  408e5b:	mov    rax,QWORD PTR [rbp-0x18]
  408e5f:	add    rax,rdx
  408e62:	mov    rdi,rax
  408e65:	call   40478d <_start@@Base+0x4dd>
  408e6a:	jmp    408e71 <_start@@Base+0x4bc1>
  408e6c:	mov    eax,0x0
  408e71:	leave  
  408e72:	ret    
  408e73:	push   rbp
  408e74:	mov    rbp,rsp
  408e77:	sub    rsp,0x30
  408e7b:	mov    QWORD PTR [rbp-0x28],rdi
  408e7f:	mov    WORD PTR [rbp-0x14],0x0
  408e85:	cmp    QWORD PTR [rbp-0x28],0x0
  408e8a:	jne    408eab <_start@@Base+0x4bfb>
  408e8c:	lea    rcx,[rip+0x1903d]        # 421ed0 <_IO_stdin_used@@Base+0x3ed0>
  408e93:	mov    edx,0x333
  408e98:	lea    rsi,[rip+0x15259]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408e9f:	lea    rdi,[rip+0x15312]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408ea6:	call   4041f0 <__assert_fail@plt>
  408eab:	mov    WORD PTR [rbp-0x12],0x1
  408eb1:	mov    rax,QWORD PTR [rbp-0x28]
  408eb5:	mov    rdi,rax
  408eb8:	call   404734 <_start@@Base+0x484>
  408ebd:	cdqe   
  408ebf:	neg    rax
  408ec2:	mov    rdx,rax
  408ec5:	mov    rax,QWORD PTR [rbp-0x28]
  408ec9:	add    rax,rdx
  408ecc:	mov    QWORD PTR [rbp-0x10],rax
  408ed0:	mov    rax,QWORD PTR [rbp-0x10]
  408ed4:	mov    rdi,rax
  408ed7:	call   40475f <_start@@Base+0x4af>
  408edc:	movzx  eax,ax
  408edf:	movzx  edx,WORD PTR [rbp-0x12]
  408ee3:	add    edx,0x3
  408ee6:	movsxd rdx,edx
  408ee9:	add    rdx,rdx
  408eec:	cmp    rax,rdx
  408eef:	jb     408f10 <_start@@Base+0x4c60>
  408ef1:	movzx  eax,WORD PTR [rbp-0x12]
  408ef5:	add    rax,0x2
  408ef9:	lea    rdx,[rax+rax*1]
  408efd:	mov    rax,QWORD PTR [rbp-0x10]
  408f01:	add    rax,rdx
  408f04:	mov    rdi,rax
  408f07:	call   40475f <_start@@Base+0x4af>
  408f0c:	mov    WORD PTR [rbp-0x14],ax
  408f10:	cmp    WORD PTR [rbp-0x14],0x0
  408f15:	je     408f3d <_start@@Base+0x4c8d>
  408f17:	movzx  edx,WORD PTR [rbp-0x14]
  408f1b:	mov    rax,QWORD PTR [rbp-0x28]
  408f1f:	add    rax,rdx
  408f22:	mov    QWORD PTR [rbp-0x8],rax
  408f26:	mov    rax,QWORD PTR [rbp-0x8]
  408f2a:	mov    rdi,rax
  408f2d:	call   4046e9 <_start@@Base+0x439>
  408f32:	mov    edx,eax
  408f34:	mov    rax,QWORD PTR [rbp-0x8]
  408f38:	add    rax,rdx
  408f3b:	jmp    408f42 <_start@@Base+0x4c92>
  408f3d:	mov    eax,0x0
  408f42:	leave  
  408f43:	ret    
  408f44:	push   rbp
  408f45:	mov    rbp,rsp
  408f48:	sub    rsp,0x20
  408f4c:	mov    QWORD PTR [rbp-0x18],rdi
  408f50:	mov    WORD PTR [rbp-0xc],0x0
  408f56:	cmp    QWORD PTR [rbp-0x18],0x0
  408f5b:	jne    408f7c <_start@@Base+0x4ccc>
  408f5d:	lea    rcx,[rip+0x18ebc]        # 421e20 <_IO_stdin_used@@Base+0x3e20>
  408f64:	mov    edx,0x333
  408f69:	lea    rsi,[rip+0x15188]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  408f70:	lea    rdi,[rip+0x15241]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  408f77:	call   4041f0 <__assert_fail@plt>
  408f7c:	mov    WORD PTR [rbp-0xa],0x1
  408f82:	mov    rax,QWORD PTR [rbp-0x18]
  408f86:	mov    rdi,rax
  408f89:	call   404734 <_start@@Base+0x484>
  408f8e:	cdqe   
  408f90:	neg    rax
  408f93:	mov    rdx,rax
  408f96:	mov    rax,QWORD PTR [rbp-0x18]
  408f9a:	add    rax,rdx
  408f9d:	mov    QWORD PTR [rbp-0x8],rax
  408fa1:	mov    rax,QWORD PTR [rbp-0x8]
  408fa5:	mov    rdi,rax
  408fa8:	call   40475f <_start@@Base+0x4af>
  408fad:	movzx  eax,ax
  408fb0:	movzx  edx,WORD PTR [rbp-0xa]
  408fb4:	add    edx,0x3
  408fb7:	movsxd rdx,edx
  408fba:	add    rdx,rdx
  408fbd:	cmp    rax,rdx
  408fc0:	jb     408fe1 <_start@@Base+0x4d31>
  408fc2:	movzx  eax,WORD PTR [rbp-0xa]
  408fc6:	add    rax,0x2
  408fca:	lea    rdx,[rax+rax*1]
  408fce:	mov    rax,QWORD PTR [rbp-0x8]
  408fd2:	add    rax,rdx
  408fd5:	mov    rdi,rax
  408fd8:	call   40475f <_start@@Base+0x4af>
  408fdd:	mov    WORD PTR [rbp-0xc],ax
  408fe1:	cmp    WORD PTR [rbp-0xc],0x0
  408fe6:	setne  al
  408fe9:	movzx  eax,al
  408fec:	leave  
  408fed:	ret    
  408fee:	push   rbp
  408fef:	mov    rbp,rsp
  408ff2:	push   rbx
  408ff3:	sub    rsp,0x28
  408ff7:	mov    QWORD PTR [rbp-0x28],rdi
  408ffb:	mov    BYTE PTR [rbp-0x20],0x0
  408fff:	mov    QWORD PTR [rbp-0x18],0x0
  409007:	mov    rax,QWORD PTR [rbp-0x28]
  40900b:	mov    rdi,rax
  40900e:	call   408db3 <_start@@Base+0x4b03>
  409013:	mov    BYTE PTR [rbp-0x20],al
  409016:	movzx  eax,BYTE PTR [rbp-0x20]
  40901a:	test   al,al
  40901c:	jne    409028 <_start@@Base+0x4d78>
  40901e:	mov    rax,QWORD PTR [rbp-0x20]
  409022:	mov    rdx,QWORD PTR [rbp-0x18]
  409026:	jmp    409040 <_start@@Base+0x4d90>
  409028:	mov    rax,QWORD PTR [rbp-0x28]
  40902c:	mov    rdi,rax
  40902f:	call   408e73 <_start@@Base+0x4bc3>
  409034:	mov    QWORD PTR [rbp-0x18],rax
  409038:	mov    rax,QWORD PTR [rbp-0x20]
  40903c:	mov    rdx,QWORD PTR [rbp-0x18]
  409040:	mov    rcx,rax
  409043:	mov    rbx,rdx
  409046:	mov    eax,ecx
  409048:	add    rsp,0x28
  40904c:	pop    rbx
  40904d:	pop    rbp
  40904e:	ret    
  40904f:	push   rbp
  409050:	mov    rbp,rsp
  409053:	sub    rsp,0x20
  409057:	mov    QWORD PTR [rbp-0x18],rdi
  40905b:	mov    WORD PTR [rbp-0xc],0x0
  409061:	cmp    QWORD PTR [rbp-0x18],0x0
  409066:	jne    409087 <_start@@Base+0x4dd7>
  409068:	lea    rcx,[rip+0x18ec1]        # 421f30 <_IO_stdin_used@@Base+0x3f30>
  40906f:	mov    edx,0x334
  409074:	lea    rsi,[rip+0x1507d]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40907b:	lea    rdi,[rip+0x15136]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  409082:	call   4041f0 <__assert_fail@plt>
  409087:	mov    WORD PTR [rbp-0xa],0x2
  40908d:	mov    rax,QWORD PTR [rbp-0x18]
  409091:	mov    rdi,rax
  409094:	call   404734 <_start@@Base+0x484>
  409099:	cdqe   
  40909b:	neg    rax
  40909e:	mov    rdx,rax
  4090a1:	mov    rax,QWORD PTR [rbp-0x18]
  4090a5:	add    rax,rdx
  4090a8:	mov    QWORD PTR [rbp-0x8],rax
  4090ac:	mov    rax,QWORD PTR [rbp-0x8]
  4090b0:	mov    rdi,rax
  4090b3:	call   40475f <_start@@Base+0x4af>
  4090b8:	movzx  eax,ax
  4090bb:	movzx  edx,WORD PTR [rbp-0xa]
  4090bf:	add    edx,0x3
  4090c2:	movsxd rdx,edx
  4090c5:	add    rdx,rdx
  4090c8:	cmp    rax,rdx
  4090cb:	jb     4090ec <_start@@Base+0x4e3c>
  4090cd:	movzx  eax,WORD PTR [rbp-0xa]
  4090d1:	add    rax,0x2
  4090d5:	lea    rdx,[rax+rax*1]
  4090d9:	mov    rax,QWORD PTR [rbp-0x8]
  4090dd:	add    rax,rdx
  4090e0:	mov    rdi,rax
  4090e3:	call   40475f <_start@@Base+0x4af>
  4090e8:	mov    WORD PTR [rbp-0xc],ax
  4090ec:	cmp    WORD PTR [rbp-0xc],0x0
  4090f1:	je     409108 <_start@@Base+0x4e58>
  4090f3:	movzx  edx,WORD PTR [rbp-0xc]
  4090f7:	mov    rax,QWORD PTR [rbp-0x18]
  4090fb:	add    rax,rdx
  4090fe:	mov    rdi,rax
  409101:	call   40478d <_start@@Base+0x4dd>
  409106:	jmp    40910d <_start@@Base+0x4e5d>
  409108:	mov    eax,0x0
  40910d:	leave  
  40910e:	ret    
  40910f:	push   rbp
  409110:	mov    rbp,rsp
  409113:	sub    rsp,0x30
  409117:	mov    QWORD PTR [rbp-0x28],rdi
  40911b:	mov    WORD PTR [rbp-0x14],0x0
  409121:	cmp    QWORD PTR [rbp-0x28],0x0
  409126:	jne    409147 <_start@@Base+0x4e97>
  409128:	lea    rcx,[rip+0x18e21]        # 421f50 <_IO_stdin_used@@Base+0x3f50>
  40912f:	mov    edx,0x334
  409134:	lea    rsi,[rip+0x14fbd]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40913b:	lea    rdi,[rip+0x15076]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  409142:	call   4041f0 <__assert_fail@plt>
  409147:	mov    WORD PTR [rbp-0x12],0x3
  40914d:	mov    rax,QWORD PTR [rbp-0x28]
  409151:	mov    rdi,rax
  409154:	call   404734 <_start@@Base+0x484>
  409159:	cdqe   
  40915b:	neg    rax
  40915e:	mov    rdx,rax
  409161:	mov    rax,QWORD PTR [rbp-0x28]
  409165:	add    rax,rdx
  409168:	mov    QWORD PTR [rbp-0x10],rax
  40916c:	mov    rax,QWORD PTR [rbp-0x10]
  409170:	mov    rdi,rax
  409173:	call   40475f <_start@@Base+0x4af>
  409178:	movzx  eax,ax
  40917b:	movzx  edx,WORD PTR [rbp-0x12]
  40917f:	add    edx,0x3
  409182:	movsxd rdx,edx
  409185:	add    rdx,rdx
  409188:	cmp    rax,rdx
  40918b:	jb     4091ac <_start@@Base+0x4efc>
  40918d:	movzx  eax,WORD PTR [rbp-0x12]
  409191:	add    rax,0x2
  409195:	lea    rdx,[rax+rax*1]
  409199:	mov    rax,QWORD PTR [rbp-0x10]
  40919d:	add    rax,rdx
  4091a0:	mov    rdi,rax
  4091a3:	call   40475f <_start@@Base+0x4af>
  4091a8:	mov    WORD PTR [rbp-0x14],ax
  4091ac:	cmp    WORD PTR [rbp-0x14],0x0
  4091b1:	je     4091d9 <_start@@Base+0x4f29>
  4091b3:	movzx  edx,WORD PTR [rbp-0x14]
  4091b7:	mov    rax,QWORD PTR [rbp-0x28]
  4091bb:	add    rax,rdx
  4091be:	mov    QWORD PTR [rbp-0x8],rax
  4091c2:	mov    rax,QWORD PTR [rbp-0x8]
  4091c6:	mov    rdi,rax
  4091c9:	call   4046e9 <_start@@Base+0x439>
  4091ce:	mov    edx,eax
  4091d0:	mov    rax,QWORD PTR [rbp-0x8]
  4091d4:	add    rax,rdx
  4091d7:	jmp    4091de <_start@@Base+0x4f2e>
  4091d9:	mov    eax,0x0
  4091de:	leave  
  4091df:	ret    
  4091e0:	push   rbp
  4091e1:	mov    rbp,rsp
  4091e4:	sub    rsp,0x20
  4091e8:	mov    QWORD PTR [rbp-0x18],rdi
  4091ec:	mov    WORD PTR [rbp-0xc],0x0
  4091f2:	cmp    QWORD PTR [rbp-0x18],0x0
  4091f7:	jne    409218 <_start@@Base+0x4f68>
  4091f9:	lea    rcx,[rip+0x18d70]        # 421f70 <_IO_stdin_used@@Base+0x3f70>
  409200:	mov    edx,0x335
  409205:	lea    rsi,[rip+0x14eec]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40920c:	lea    rdi,[rip+0x14fa5]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  409213:	call   4041f0 <__assert_fail@plt>
  409218:	mov    WORD PTR [rbp-0xa],0x4
  40921e:	mov    rax,QWORD PTR [rbp-0x18]
  409222:	mov    rdi,rax
  409225:	call   404734 <_start@@Base+0x484>
  40922a:	cdqe   
  40922c:	neg    rax
  40922f:	mov    rdx,rax
  409232:	mov    rax,QWORD PTR [rbp-0x18]
  409236:	add    rax,rdx
  409239:	mov    QWORD PTR [rbp-0x8],rax
  40923d:	mov    rax,QWORD PTR [rbp-0x8]
  409241:	mov    rdi,rax
  409244:	call   40475f <_start@@Base+0x4af>
  409249:	movzx  eax,ax
  40924c:	movzx  edx,WORD PTR [rbp-0xa]
  409250:	add    edx,0x3
  409253:	movsxd rdx,edx
  409256:	add    rdx,rdx
  409259:	cmp    rax,rdx
  40925c:	jb     40927d <_start@@Base+0x4fcd>
  40925e:	movzx  eax,WORD PTR [rbp-0xa]
  409262:	add    rax,0x2
  409266:	lea    rdx,[rax+rax*1]
  40926a:	mov    rax,QWORD PTR [rbp-0x8]
  40926e:	add    rax,rdx
  409271:	mov    rdi,rax
  409274:	call   40475f <_start@@Base+0x4af>
  409279:	mov    WORD PTR [rbp-0xc],ax
  40927d:	cmp    WORD PTR [rbp-0xc],0x0
  409282:	je     409299 <_start@@Base+0x4fe9>
  409284:	movzx  edx,WORD PTR [rbp-0xc]
  409288:	mov    rax,QWORD PTR [rbp-0x18]
  40928c:	add    rax,rdx
  40928f:	mov    rdi,rax
  409292:	call   40478d <_start@@Base+0x4dd>
  409297:	jmp    40929e <_start@@Base+0x4fee>
  409299:	mov    eax,0x0
  40929e:	leave  
  40929f:	ret    
  4092a0:	push   rbp
  4092a1:	mov    rbp,rsp
  4092a4:	sub    rsp,0x30
  4092a8:	mov    QWORD PTR [rbp-0x28],rdi
  4092ac:	mov    WORD PTR [rbp-0x14],0x0
  4092b2:	cmp    QWORD PTR [rbp-0x28],0x0
  4092b7:	jne    4092d8 <_start@@Base+0x5028>
  4092b9:	lea    rcx,[rip+0x18cd0]        # 421f90 <_IO_stdin_used@@Base+0x3f90>
  4092c0:	mov    edx,0x335
  4092c5:	lea    rsi,[rip+0x14e2c]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4092cc:	lea    rdi,[rip+0x14ee5]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4092d3:	call   4041f0 <__assert_fail@plt>
  4092d8:	mov    WORD PTR [rbp-0x12],0x5
  4092de:	mov    rax,QWORD PTR [rbp-0x28]
  4092e2:	mov    rdi,rax
  4092e5:	call   404734 <_start@@Base+0x484>
  4092ea:	cdqe   
  4092ec:	neg    rax
  4092ef:	mov    rdx,rax
  4092f2:	mov    rax,QWORD PTR [rbp-0x28]
  4092f6:	add    rax,rdx
  4092f9:	mov    QWORD PTR [rbp-0x10],rax
  4092fd:	mov    rax,QWORD PTR [rbp-0x10]
  409301:	mov    rdi,rax
  409304:	call   40475f <_start@@Base+0x4af>
  409309:	movzx  eax,ax
  40930c:	movzx  edx,WORD PTR [rbp-0x12]
  409310:	add    edx,0x3
  409313:	movsxd rdx,edx
  409316:	add    rdx,rdx
  409319:	cmp    rax,rdx
  40931c:	jb     40933d <_start@@Base+0x508d>
  40931e:	movzx  eax,WORD PTR [rbp-0x12]
  409322:	add    rax,0x2
  409326:	lea    rdx,[rax+rax*1]
  40932a:	mov    rax,QWORD PTR [rbp-0x10]
  40932e:	add    rax,rdx
  409331:	mov    rdi,rax
  409334:	call   40475f <_start@@Base+0x4af>
  409339:	mov    WORD PTR [rbp-0x14],ax
  40933d:	cmp    WORD PTR [rbp-0x14],0x0
  409342:	je     40936a <_start@@Base+0x50ba>
  409344:	movzx  edx,WORD PTR [rbp-0x14]
  409348:	mov    rax,QWORD PTR [rbp-0x28]
  40934c:	add    rax,rdx
  40934f:	mov    QWORD PTR [rbp-0x8],rax
  409353:	mov    rax,QWORD PTR [rbp-0x8]
  409357:	mov    rdi,rax
  40935a:	call   4046e9 <_start@@Base+0x439>
  40935f:	mov    edx,eax
  409361:	mov    rax,QWORD PTR [rbp-0x8]
  409365:	add    rax,rdx
  409368:	jmp    40936f <_start@@Base+0x50bf>
  40936a:	mov    eax,0x0
  40936f:	leave  
  409370:	ret    
  409371:	push   rbp
  409372:	mov    rbp,rsp
  409375:	push   rbx
  409376:	sub    rsp,0x28
  40937a:	mov    QWORD PTR [rbp-0x28],rdi
  40937e:	mov    BYTE PTR [rbp-0x20],0x0
  409382:	mov    QWORD PTR [rbp-0x18],0x0
  40938a:	mov    rax,QWORD PTR [rbp-0x28]
  40938e:	mov    rdi,rax
  409391:	call   4091e0 <_start@@Base+0x4f30>
  409396:	mov    BYTE PTR [rbp-0x20],al
  409399:	movzx  eax,BYTE PTR [rbp-0x20]
  40939d:	test   al,al
  40939f:	jne    4093ab <_start@@Base+0x50fb>
  4093a1:	mov    rax,QWORD PTR [rbp-0x20]
  4093a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4093a9:	jmp    4093c3 <_start@@Base+0x5113>
  4093ab:	mov    rax,QWORD PTR [rbp-0x28]
  4093af:	mov    rdi,rax
  4093b2:	call   4092a0 <_start@@Base+0x4ff0>
  4093b7:	mov    QWORD PTR [rbp-0x18],rax
  4093bb:	mov    rax,QWORD PTR [rbp-0x20]
  4093bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4093c3:	mov    rcx,rax
  4093c6:	mov    rbx,rdx
  4093c9:	mov    eax,ecx
  4093cb:	add    rsp,0x28
  4093cf:	pop    rbx
  4093d0:	pop    rbp
  4093d1:	ret    
  4093d2:	push   rbp
  4093d3:	mov    rbp,rsp
  4093d6:	sub    rsp,0x10
  4093da:	mov    QWORD PTR [rbp-0x8],rdi
  4093de:	mov    rax,QWORD PTR [rbp-0x8]
  4093e2:	mov    rdi,rax
  4093e5:	call   4092a0 <_start@@Base+0x4ff0>
  4093ea:	mov    rdi,rax
  4093ed:	call   404973 <_start@@Base+0x6c3>
  4093f2:	leave  
  4093f3:	ret    
  4093f4:	push   rbp
  4093f5:	mov    rbp,rsp
  4093f8:	sub    rsp,0x20
  4093fc:	mov    QWORD PTR [rbp-0x18],rdi
  409400:	mov    WORD PTR [rbp-0xc],0x0
  409406:	cmp    QWORD PTR [rbp-0x18],0x0
  40940b:	jne    40942c <_start@@Base+0x517c>
  40940d:	lea    rcx,[rip+0x18adc]        # 421ef0 <_IO_stdin_used@@Base+0x3ef0>
  409414:	mov    edx,0x336
  409419:	lea    rsi,[rip+0x14cd8]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  409420:	lea    rdi,[rip+0x14d91]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  409427:	call   4041f0 <__assert_fail@plt>
  40942c:	mov    WORD PTR [rbp-0xa],0x6
  409432:	mov    rax,QWORD PTR [rbp-0x18]
  409436:	mov    rdi,rax
  409439:	call   404734 <_start@@Base+0x484>
  40943e:	cdqe   
  409440:	neg    rax
  409443:	mov    rdx,rax
  409446:	mov    rax,QWORD PTR [rbp-0x18]
  40944a:	add    rax,rdx
  40944d:	mov    QWORD PTR [rbp-0x8],rax
  409451:	mov    rax,QWORD PTR [rbp-0x8]
  409455:	mov    rdi,rax
  409458:	call   40475f <_start@@Base+0x4af>
  40945d:	movzx  eax,ax
  409460:	movzx  edx,WORD PTR [rbp-0xa]
  409464:	add    edx,0x3
  409467:	movsxd rdx,edx
  40946a:	add    rdx,rdx
  40946d:	cmp    rax,rdx
  409470:	jb     409491 <_start@@Base+0x51e1>
  409472:	movzx  eax,WORD PTR [rbp-0xa]
  409476:	add    rax,0x2
  40947a:	lea    rdx,[rax+rax*1]
  40947e:	mov    rax,QWORD PTR [rbp-0x8]
  409482:	add    rax,rdx
  409485:	mov    rdi,rax
  409488:	call   40475f <_start@@Base+0x4af>
  40948d:	mov    WORD PTR [rbp-0xc],ax
  409491:	cmp    WORD PTR [rbp-0xc],0x0
  409496:	je     4094ad <_start@@Base+0x51fd>
  409498:	movzx  edx,WORD PTR [rbp-0xc]
  40949c:	mov    rax,QWORD PTR [rbp-0x18]
  4094a0:	add    rax,rdx
  4094a3:	mov    rdi,rax
  4094a6:	call   40478d <_start@@Base+0x4dd>
  4094ab:	jmp    4094b2 <_start@@Base+0x5202>
  4094ad:	mov    eax,0x0
  4094b2:	leave  
  4094b3:	ret    
  4094b4:	push   rbp
  4094b5:	mov    rbp,rsp
  4094b8:	sub    rsp,0x30
  4094bc:	mov    QWORD PTR [rbp-0x28],rdi
  4094c0:	mov    WORD PTR [rbp-0x14],0x0
  4094c6:	cmp    QWORD PTR [rbp-0x28],0x0
  4094cb:	jne    4094ec <_start@@Base+0x523c>
  4094cd:	lea    rcx,[rip+0x18a3c]        # 421f10 <_IO_stdin_used@@Base+0x3f10>
  4094d4:	mov    edx,0x336
  4094d9:	lea    rsi,[rip+0x14c18]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4094e0:	lea    rdi,[rip+0x14cd1]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4094e7:	call   4041f0 <__assert_fail@plt>
  4094ec:	mov    WORD PTR [rbp-0x12],0x7
  4094f2:	mov    rax,QWORD PTR [rbp-0x28]
  4094f6:	mov    rdi,rax
  4094f9:	call   404734 <_start@@Base+0x484>
  4094fe:	cdqe   
  409500:	neg    rax
  409503:	mov    rdx,rax
  409506:	mov    rax,QWORD PTR [rbp-0x28]
  40950a:	add    rax,rdx
  40950d:	mov    QWORD PTR [rbp-0x10],rax
  409511:	mov    rax,QWORD PTR [rbp-0x10]
  409515:	mov    rdi,rax
  409518:	call   40475f <_start@@Base+0x4af>
  40951d:	movzx  eax,ax
  409520:	movzx  edx,WORD PTR [rbp-0x12]
  409524:	add    edx,0x3
  409527:	movsxd rdx,edx
  40952a:	add    rdx,rdx
  40952d:	cmp    rax,rdx
  409530:	jb     409551 <_start@@Base+0x52a1>
  409532:	movzx  eax,WORD PTR [rbp-0x12]
  409536:	add    rax,0x2
  40953a:	lea    rdx,[rax+rax*1]
  40953e:	mov    rax,QWORD PTR [rbp-0x10]
  409542:	add    rax,rdx
  409545:	mov    rdi,rax
  409548:	call   40475f <_start@@Base+0x4af>
  40954d:	mov    WORD PTR [rbp-0x14],ax
  409551:	cmp    WORD PTR [rbp-0x14],0x0
  409556:	je     40957e <_start@@Base+0x52ce>
  409558:	movzx  edx,WORD PTR [rbp-0x14]
  40955c:	mov    rax,QWORD PTR [rbp-0x28]
  409560:	add    rax,rdx
  409563:	mov    QWORD PTR [rbp-0x8],rax
  409567:	mov    rax,QWORD PTR [rbp-0x8]
  40956b:	mov    rdi,rax
  40956e:	call   4046e9 <_start@@Base+0x439>
  409573:	mov    edx,eax
  409575:	mov    rax,QWORD PTR [rbp-0x8]
  409579:	add    rax,rdx
  40957c:	jmp    409583 <_start@@Base+0x52d3>
  40957e:	mov    eax,0x0
  409583:	leave  
  409584:	ret    
  409585:	push   rbp
  409586:	mov    rbp,rsp
  409589:	sub    rsp,0x30
  40958d:	mov    QWORD PTR [rbp-0x28],rdi
  409591:	mov    WORD PTR [rbp-0x14],0x0
  409597:	cmp    QWORD PTR [rbp-0x28],0x0
  40959c:	jne    4095bd <_start@@Base+0x530d>
  40959e:	lea    rcx,[rip+0x18a8b]        # 422030 <_IO_stdin_used@@Base+0x4030>
  4095a5:	mov    edx,0x337
  4095aa:	lea    rsi,[rip+0x14b47]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  4095b1:	lea    rdi,[rip+0x14c00]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  4095b8:	call   4041f0 <__assert_fail@plt>
  4095bd:	mov    WORD PTR [rbp-0x12],0x8
  4095c3:	mov    rax,QWORD PTR [rbp-0x28]
  4095c7:	mov    rdi,rax
  4095ca:	call   404734 <_start@@Base+0x484>
  4095cf:	cdqe   
  4095d1:	neg    rax
  4095d4:	mov    rdx,rax
  4095d7:	mov    rax,QWORD PTR [rbp-0x28]
  4095db:	add    rax,rdx
  4095de:	mov    QWORD PTR [rbp-0x10],rax
  4095e2:	mov    rax,QWORD PTR [rbp-0x10]
  4095e6:	mov    rdi,rax
  4095e9:	call   40475f <_start@@Base+0x4af>
  4095ee:	movzx  eax,ax
  4095f1:	movzx  edx,WORD PTR [rbp-0x12]
  4095f5:	add    edx,0x3
  4095f8:	movsxd rdx,edx
  4095fb:	add    rdx,rdx
  4095fe:	cmp    rax,rdx
  409601:	jb     409622 <_start@@Base+0x5372>
  409603:	movzx  eax,WORD PTR [rbp-0x12]
  409607:	add    rax,0x2
  40960b:	lea    rdx,[rax+rax*1]
  40960f:	mov    rax,QWORD PTR [rbp-0x10]
  409613:	add    rax,rdx
  409616:	mov    rdi,rax
  409619:	call   40475f <_start@@Base+0x4af>
  40961e:	mov    WORD PTR [rbp-0x14],ax
  409622:	cmp    WORD PTR [rbp-0x14],0x0
  409627:	je     409653 <_start@@Base+0x53a3>
  409629:	movzx  edx,WORD PTR [rbp-0x14]
  40962d:	mov    rax,QWORD PTR [rbp-0x28]
  409631:	add    rax,rdx
  409634:	mov    QWORD PTR [rbp-0x8],rax
  409638:	mov    rax,QWORD PTR [rbp-0x8]
  40963c:	mov    rdi,rax
  40963f:	call   4046e9 <_start@@Base+0x439>
  409644:	mov    eax,eax
  409646:	lea    rdx,[rax+0x4]
  40964a:	mov    rax,QWORD PTR [rbp-0x8]
  40964e:	add    rax,rdx
  409651:	jmp    409658 <_start@@Base+0x53a8>
  409653:	mov    eax,0x0
  409658:	leave  
  409659:	ret    
  40965a:	push   rbp
  40965b:	mov    rbp,rsp
  40965e:	sub    rsp,0x30
  409662:	mov    QWORD PTR [rbp-0x28],rdi
  409666:	mov    WORD PTR [rbp-0x14],0x0
  40966c:	cmp    QWORD PTR [rbp-0x28],0x0
  409671:	jne    409692 <_start@@Base+0x53e2>
  409673:	lea    rcx,[rip+0x18956]        # 421fd0 <_IO_stdin_used@@Base+0x3fd0>
  40967a:	mov    edx,0x337
  40967f:	lea    rsi,[rip+0x14a72]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  409686:	lea    rdi,[rip+0x14b2b]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  40968d:	call   4041f0 <__assert_fail@plt>
  409692:	mov    WORD PTR [rbp-0x12],0x9
  409698:	mov    rax,QWORD PTR [rbp-0x28]
  40969c:	mov    rdi,rax
  40969f:	call   404734 <_start@@Base+0x484>
  4096a4:	cdqe   
  4096a6:	neg    rax
  4096a9:	mov    rdx,rax
  4096ac:	mov    rax,QWORD PTR [rbp-0x28]
  4096b0:	add    rax,rdx
  4096b3:	mov    QWORD PTR [rbp-0x10],rax
  4096b7:	mov    rax,QWORD PTR [rbp-0x10]
  4096bb:	mov    rdi,rax
  4096be:	call   40475f <_start@@Base+0x4af>
  4096c3:	movzx  eax,ax
  4096c6:	movzx  edx,WORD PTR [rbp-0x12]
  4096ca:	add    edx,0x3
  4096cd:	movsxd rdx,edx
  4096d0:	add    rdx,rdx
  4096d3:	cmp    rax,rdx
  4096d6:	jb     4096f7 <_start@@Base+0x5447>
  4096d8:	movzx  eax,WORD PTR [rbp-0x12]
  4096dc:	add    rax,0x2
  4096e0:	lea    rdx,[rax+rax*1]
  4096e4:	mov    rax,QWORD PTR [rbp-0x10]
  4096e8:	add    rax,rdx
  4096eb:	mov    rdi,rax
  4096ee:	call   40475f <_start@@Base+0x4af>
  4096f3:	mov    WORD PTR [rbp-0x14],ax
  4096f7:	cmp    WORD PTR [rbp-0x14],0x0
  4096fc:	je     409728 <_start@@Base+0x5478>
  4096fe:	movzx  edx,WORD PTR [rbp-0x14]
  409702:	mov    rax,QWORD PTR [rbp-0x28]
  409706:	add    rax,rdx
  409709:	mov    QWORD PTR [rbp-0x8],rax
  40970d:	mov    rax,QWORD PTR [rbp-0x8]
  409711:	mov    rdi,rax
  409714:	call   4046e9 <_start@@Base+0x439>
  409719:	mov    eax,eax
  40971b:	lea    rdx,[rax+0x4]
  40971f:	mov    rax,QWORD PTR [rbp-0x8]
  409723:	add    rax,rdx
  409726:	jmp    40972d <_start@@Base+0x547d>
  409728:	mov    eax,0x0
  40972d:	leave  
  40972e:	ret    
  40972f:	push   rbp
  409730:	mov    rbp,rsp
  409733:	sub    rsp,0x20
  409737:	mov    QWORD PTR [rbp-0x18],rdi
  40973b:	mov    WORD PTR [rbp-0xc],0x0
  409741:	cmp    QWORD PTR [rbp-0x18],0x0
  409746:	jne    409767 <_start@@Base+0x54b7>
  409748:	lea    rcx,[rip+0x18711]        # 421e60 <_IO_stdin_used@@Base+0x3e60>
  40974f:	mov    edx,0x337
  409754:	lea    rsi,[rip+0x1499d]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  40975b:	lea    rdi,[rip+0x14a56]        # 41e1b8 <_IO_stdin_used@@Base+0x1b8>
  409762:	call   4041f0 <__assert_fail@plt>
  409767:	mov    WORD PTR [rbp-0xa],0x9
  40976d:	mov    rax,QWORD PTR [rbp-0x18]
  409771:	mov    rdi,rax
  409774:	call   404734 <_start@@Base+0x484>
  409779:	cdqe   
  40977b:	neg    rax
  40977e:	mov    rdx,rax
  409781:	mov    rax,QWORD PTR [rbp-0x18]
  409785:	add    rax,rdx
  409788:	mov    QWORD PTR [rbp-0x8],rax
  40978c:	mov    rax,QWORD PTR [rbp-0x8]
  409790:	mov    rdi,rax
  409793:	call   40475f <_start@@Base+0x4af>
  409798:	movzx  eax,ax
  40979b:	movzx  edx,WORD PTR [rbp-0xa]
  40979f:	add    edx,0x3
  4097a2:	movsxd rdx,edx
  4097a5:	add    rdx,rdx
  4097a8:	cmp    rax,rdx
  4097ab:	jb     4097cc <_start@@Base+0x551c>
  4097ad:	movzx  eax,WORD PTR [rbp-0xa]
  4097b1:	add    rax,0x2
  4097b5:	lea    rdx,[rax+rax*1]
  4097b9:	mov    rax,QWORD PTR [rbp-0x8]
  4097bd:	add    rax,rdx
  4097c0:	mov    rdi,rax
  4097c3:	call   40475f <_start@@Base+0x4af>
  4097c8:	mov    WORD PTR [rbp-0xc],ax
  4097cc:	cmp    WORD PTR [rbp-0xc],0x0
  4097d1:	setne  al
  4097d4:	movzx  eax,al
  4097d7:	leave  
  4097d8:	ret    
  4097d9:	push   rbp
  4097da:	mov    rbp,rsp
  4097dd:	push   rbx
  4097de:	sub    rsp,0x28
  4097e2:	mov    QWORD PTR [rbp-0x28],rdi
  4097e6:	mov    rax,QWORD PTR [rbp-0x28]
  4097ea:	mov    rdi,rax
  4097ed:	call   409585 <_start@@Base+0x52d5>
  4097f2:	mov    QWORD PTR [rbp-0x20],rax
  4097f6:	mov    rax,QWORD PTR [rbp-0x28]
  4097fa:	mov    rdi,rax
  4097fd:	call   40965a <_start@@Base+0x53aa>
  409802:	mov    QWORD PTR [rbp-0x18],rax
  409806:	mov    rax,QWORD PTR [rbp-0x20]
  40980a:	mov    rdi,rax
  40980d:	call   404876 <_start@@Base+0x5c6>
  409812:	mov    rbx,rax
  409815:	mov    rax,QWORD PTR [rbp-0x18]
  409819:	mov    rdi,rax
  40981c:	call   404876 <_start@@Base+0x5c6>
  409821:	cmp    rbx,rax
  409824:	je     409845 <_start@@Base+0x5595>
  409826:	lea    rcx,[rip+0x18783]        # 421fb0 <_IO_stdin_used@@Base+0x3fb0>
  40982d:	mov    edx,0x337
  409832:	lea    rsi,[rip+0x148bf]        # 41e0f8 <_IO_stdin_used@@Base+0xf8>
  409839:	lea    rdi,[rip+0x149a0]        # 41e1e0 <_IO_stdin_used@@Base+0x1e0>
  409840:	call   4041f0 <__assert_fail@plt>
  409845:	mov    rax,QWORD PTR [rbp-0x20]
  409849:	mov    rdx,QWORD PTR [rbp-0x18]
  40984d:	add    rsp,0x28
  409851:	pop    rbx
  409852:	pop    rbp
  409853:	ret    
  409854:	push   rbp
  409855:	mov    rbp,rsp
  409858:	mov    QWORD PTR [rbp-0x8],rdi
  40985c:	mov    rax,QWORD PTR [rbp-0x8]
  409860:	mov    rax,QWORD PTR [rax+0x30]
  409864:	pop    rbp
  409865:	ret    
  409866:	push   rbp
  409867:	mov    rbp,rsp
  40986a:	sub    rsp,0x10
  40986e:	mov    QWORD PTR [rbp-0x8],rdi
  409872:	mov    eax,esi
  409874:	mov    BYTE PTR [rbp-0xc],al
  409877:	movzx  eax,BYTE PTR [rbp-0xc]
  40987b:	mov    edi,eax
  40987d:	call   4043a5 <_start@@Base+0xf5>
  409882:	mov    rdx,QWORD PTR [rbp-0x8]
  409886:	mov    BYTE PTR [rdx],al
  409888:	mov    rax,QWORD PTR [rbp-0x8]
  40988c:	leave  
  40988d:	ret    
  40988e:	push   rbp
  40988f:	mov    rbp,rsp
  409892:	sub    rsp,0x20
  409896:	mov    QWORD PTR [rbp-0x8],rdi
  40989a:	mov    QWORD PTR [rbp-0x10],rsi
  40989e:	mov    QWORD PTR [rbp-0x18],rdx
  4098a2:	mov    rdx,QWORD PTR [rbp-0x18]
  4098a6:	mov    rsi,QWORD PTR [rbp-0x10]
  4098aa:	mov    rax,QWORD PTR [rbp-0x8]
  4098ae:	mov    r9d,0xffffffff
  4098b4:	mov    r8d,0x1
  4098ba:	mov    ecx,0x1
  4098bf:	mov    rdi,rax
  4098c2:	call   418fe3 <flatcc_builder_create_vector@@Base>
  4098c7:	leave  
  4098c8:	ret    
  4098c9:	push   rbp
  4098ca:	mov    rbp,rsp
  4098cd:	sub    rsp,0x10
  4098d1:	mov    QWORD PTR [rbp-0x8],rdi
  4098d5:	mov    eax,esi
  4098d7:	mov    BYTE PTR [rbp-0xc],al
  4098da:	movsx  eax,BYTE PTR [rbp-0xc]
  4098de:	mov    edi,eax
  4098e0:	call   40448d <_start@@Base+0x1dd>
  4098e5:	mov    rdx,QWORD PTR [rbp-0x8]
  4098e9:	mov    BYTE PTR [rdx],al
  4098eb:	mov    rax,QWORD PTR [rbp-0x8]
  4098ef:	leave  
  4098f0:	ret    
  4098f1:	push   rbp
  4098f2:	mov    rbp,rsp
  4098f5:	sub    rsp,0x10
  4098f9:	mov    QWORD PTR [rbp-0x8],rdi
  4098fd:	mov    eax,esi
  4098ff:	mov    BYTE PTR [rbp-0xc],al
  409902:	movzx  eax,BYTE PTR [rbp-0xc]
  409906:	mov    edi,eax
  409908:	call   404651 <_start@@Base+0x3a1>
  40990d:	mov    rdx,QWORD PTR [rbp-0x8]
  409911:	mov    BYTE PTR [rdx],al
  409913:	mov    rax,QWORD PTR [rbp-0x8]
  409917:	leave  
  409918:	ret    
  409919:	push   rbp
  40991a:	mov    rbp,rsp
  40991d:	sub    rsp,0x10
  409921:	mov    QWORD PTR [rbp-0x8],rdi
  409925:	mov    rax,QWORD PTR [rbp-0x8]
  409929:	mov    ecx,0xffffffff
  40992e:	mov    edx,0x1
  409933:	mov    esi,0x1
  409938:	mov    rdi,rax
  40993b:	call   418080 <flatcc_builder_start_vector@@Base>
  409940:	leave  
  409941:	ret    
  409942:	push   rbp
  409943:	mov    rbp,rsp
  409946:	sub    rsp,0x10
  40994a:	mov    QWORD PTR [rbp-0x8],rdi
  40994e:	mov    rax,QWORD PTR [rbp-0x8]
  409952:	mov    rdi,rax
  409955:	call   419275 <flatcc_builder_end_vector@@Base>
  40995a:	leave  
  40995b:	ret    
  40995c:	push   rbp
  40995d:	mov    rbp,rsp
  409960:	sub    rsp,0x20
  409964:	mov    QWORD PTR [rbp-0x8],rdi
  409968:	mov    QWORD PTR [rbp-0x10],rsi
  40996c:	mov    QWORD PTR [rbp-0x18],rdx
  409970:	mov    rdx,QWORD PTR [rbp-0x18]
  409974:	mov    rsi,QWORD PTR [rbp-0x10]
  409978:	mov    rax,QWORD PTR [rbp-0x8]
  40997c:	mov    r9d,0xffffffff
  409982:	mov    r8d,0x1
  409988:	mov    ecx,0x1
  40998d:	mov    rdi,rax
  409990:	call   418fe3 <flatcc_builder_create_vector@@Base>
  409995:	leave  
  409996:	ret    
  409997:	push   rbp
  409998:	mov    rbp,rsp
  40999b:	sub    rsp,0x10
  40999f:	mov    QWORD PTR [rbp-0x8],rdi
  4099a3:	mov    QWORD PTR [rbp-0x10],rsi
  4099a7:	mov    rax,QWORD PTR [rbp-0x10]
  4099ab:	mov    rdi,rax
  4099ae:	call   404b4a <_start@@Base+0x89a>
  4099b3:	mov    rdx,rax
  4099b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4099ba:	mov    rax,QWORD PTR [rbp-0x8]
  4099be:	mov    r9d,0xffffffff
  4099c4:	mov    r8d,0x1
  4099ca:	mov    ecx,0x1
  4099cf:	mov    rdi,rax
  4099d2:	call   418fe3 <flatcc_builder_create_vector@@Base>
  4099d7:	leave  
  4099d8:	ret    
  4099d9:	push   rbp
  4099da:	mov    rbp,rsp
  4099dd:	sub    rsp,0x30
  4099e1:	mov    QWORD PTR [rbp-0x18],rdi
  4099e5:	mov    QWORD PTR [rbp-0x20],rsi
  4099e9:	mov    QWORD PTR [rbp-0x28],rdx
  4099ed:	mov    QWORD PTR [rbp-0x30],rcx
  4099f1:	mov    rax,QWORD PTR [rbp-0x20]
  4099f5:	mov    rdi,rax
  4099f8:	call   404b4a <_start@@Base+0x89a>
  4099fd:	mov    QWORD PTR [rbp-0x8],rax
  409a01:	mov    rax,QWORD PTR [rbp-0x28]
  409a05:	cmp    rax,QWORD PTR [rbp-0x8]
  409a09:	jb     409a13 <_start@@Base+0x5763>
  409a0b:	mov    rax,QWORD PTR [rbp-0x8]
  409a0f:	mov    QWORD PTR [rbp-0x28],rax
  409a13:	mov    rax,QWORD PTR [rbp-0x28]
  409a17:	sub    QWORD PTR [rbp-0x8],rax
  409a1b:	mov    rax,QWORD PTR [rbp-0x30]
  409a1f:	cmp    rax,QWORD PTR [rbp-0x8]
  409a23:	jbe    409a2d <_start@@Base+0x577d>
  409a25:	mov    rax,QWORD PTR [rbp-0x8]
  409a29:	mov    QWORD PTR [rbp-0x30],rax
  409a2d:	mov    rdx,QWORD PTR [rbp-0x28]
  409a31:	mov    rax,QWORD PTR [rbp-0x20]
  409a35:	mov    rsi,rdx
  409a38:	mov    rdi,rax
  409a3b:	call   404660 <_start@@Base+0x3b0>
  409a40:	mov    rsi,rax
  409a43:	mov    rdx,QWORD PTR [rbp-0x30]
  409a47:	mov    rax,QWORD PTR [rbp-0x18]
  409a4b:	mov    r9d,0xffffffff
  409a51:	mov    r8d,0x1
  409a57:	mov    ecx,0x1
  409a5c:	mov    rdi,rax
  409a5f:	call   418fe3 <flatcc_builder_create_vector@@Base>
  409a64:	leave  
  409a65:	ret    
  409a66:	push   rbp
  409a67:	mov    rbp,rsp
  409a6a:	sub    rsp,0x10
  409a6e:	mov    QWORD PTR [rbp-0x8],rdi
  409a72:	mov    eax,esi
  409a74:	mov    WORD PTR [rbp-0xc],ax
  409a78:	movzx  eax,WORD PTR [rbp-0xc]
  409a7c:	mov    edi,eax
  409a7e:	call   4043e3 <_start@@Base+0x133>
  409a83:	mov    edx,eax
  409a85:	mov    rax,QWORD PTR [rbp-0x8]
  409a89:	mov    WORD PTR [rax],dx
  409a8c:	mov    rax,QWORD PTR [rbp-0x8]
  409a90:	leave  
  409a91:	ret    
  409a92:	push   rbp
  409a93:	mov    rbp,rsp
  409a96:	sub    rsp,0x10
  409a9a:	mov    QWORD PTR [rbp-0x8],rdi
  409a9e:	mov    DWORD PTR [rbp-0xc],esi
  409aa1:	mov    eax,DWORD PTR [rbp-0xc]
  409aa4:	mov    edi,eax
  409aa6:	call   40441e <_start@@Base+0x16e>
  409aab:	mov    edx,eax
  409aad:	mov    rax,QWORD PTR [rbp-0x8]
  409ab1:	mov    DWORD PTR [rax],edx
  409ab3:	mov    rax,QWORD PTR [rbp-0x8]
  409ab7:	leave  
  409ab8:	ret    
  409ab9:	push   rbp
  409aba:	mov    rbp,rsp
  409abd:	sub    rsp,0x10
  409ac1:	mov    QWORD PTR [rbp-0x8],rdi
  409ac5:	mov    QWORD PTR [rbp-0x10],rsi
  409ac9:	mov    rax,QWORD PTR [rbp-0x10]
  409acd:	mov    rdi,rax
  409ad0:	call   404453 <_start@@Base+0x1a3>
  409ad5:	mov    rdx,rax
  409ad8:	mov    rax,QWORD PTR [rbp-0x8]
  409adc:	mov    QWORD PTR [rax],rdx
  409adf:	mov    rax,QWORD PTR [rbp-0x8]
  409ae3:	leave  
  409ae4:	ret    
  409ae5:	push   rbp
  409ae6:	mov    rbp,rsp
  409ae9:	sub    rsp,0x10
  409aed:	mov    QWORD PTR [rbp-0x8],rdi
  409af1:	mov    QWORD PTR [rbp-0x10],rsi
  409af5:	mov    rax,QWORD PTR [rbp-0x10]
  409af9:	movzx  eax,WORD PTR [rax]
  409afc:	cwde   
  409afd:	mov    edi,eax
  409aff:	call   4044bb <_start@@Base+0x20b>
  409b04:	mov    edx,eax
  409b06:	mov    rax,QWORD PTR [rbp-0x8]
  409b0a:	mov    WORD PTR [rax],dx
  409b0d:	mov    rax,QWORD PTR [rbp-0x8]
  409b11:	leave  
  409b12:	ret    
  409b13:	push   rbp
  409b14:	mov    rbp,rsp
  409b17:	sub    rsp,0x10
  409b1b:	mov    QWORD PTR [rbp-0x8],rdi
  409b1f:	mov    eax,esi
  409b21:	mov    WORD PTR [rbp-0xc],ax
  409b25:	movsx  eax,WORD PTR [rbp-0xc]
  409b29:	mov    edi,eax
  409b2b:	call   4044cb <_start@@Base+0x21b>
  409b30:	mov    edx,eax
  409b32:	mov    rax,QWORD PTR [rbp-0x8]
  409b36:	mov    WORD PTR [rax],dx
  409b39:	mov    rax,QWORD PTR [rbp-0x8]
  409b3d:	leave  
  409b3e:	ret    
  409b3f:	push   rbp
  409b40:	mov    rbp,rsp
  409b43:	sub    rsp,0x10
  409b47:	mov    QWORD PTR [rbp-0x8],rdi
  409b4b:	mov    DWORD PTR [rbp-0xc],esi
  409b4e:	mov    eax,DWORD PTR [rbp-0xc]
  409b51:	mov    edi,eax
  409b53:	call   404504 <_start@@Base+0x254>
  409b58:	mov    edx,eax
  409b5a:	mov    rax,QWORD PTR [rbp-0x8]
  409b5e:	mov    DWORD PTR [rax],edx
  409b60:	mov    rax,QWORD PTR [rbp-0x8]
  409b64:	leave  
  409b65:	ret    
  409b66:	push   rbp
  409b67:	mov    rbp,rsp
  409b6a:	sub    rsp,0x10
  409b6e:	mov    QWORD PTR [rbp-0x8],rdi
  409b72:	mov    QWORD PTR [rbp-0x10],rsi
  409b76:	mov    rax,QWORD PTR [rbp-0x10]
  409b7a:	mov    rdi,rax
  409b7d:	call   404539 <_start@@Base+0x289>
  409b82:	mov    rdx,rax
  409b85:	mov    rax,QWORD PTR [rbp-0x8]
  409b89:	mov    QWORD PTR [rax],rdx
  409b8c:	mov    rax,QWORD PTR [rbp-0x8]
  409b90:	leave  
  409b91:	ret    
  409b92:	push   rbp
  409b93:	mov    rbp,rsp
  409b96:	sub    rsp,0x10
  409b9a:	mov    QWORD PTR [rbp-0x8],rdi
  409b9e:	mov    QWORD PTR [rbp-0x10],rsi
  409ba2:	mov    rax,QWORD PTR [rbp-0x10]
  409ba6:	mov    eax,DWORD PTR [rax]
  409ba8:	vmovd  xmm0,eax
  409bac:	call   404564 <_start@@Base+0x2b4>
  409bb1:	vmovd  eax,xmm0
  409bb5:	mov    rdx,QWORD PTR [rbp-0x8]
  409bb9:	mov    DWORD PTR [rdx],eax
  409bbb:	mov    rax,QWORD PTR [rbp-0x8]
  409bbf:	leave  
  409bc0:	ret    
  409bc1:	push   rbp
  409bc2:	mov    rbp,rsp
  409bc5:	sub    rsp,0x10
  409bc9:	mov    QWORD PTR [rbp-0x8],rdi
  409bcd:	vmovss DWORD PTR [rbp-0xc],xmm0
  409bd2:	mov    eax,DWORD PTR [rbp-0xc]
  409bd5:	vmovd  xmm0,eax
  409bd9:	call   404584 <_start@@Base+0x2d4>
  409bde:	vmovd  eax,xmm0
  409be2:	mov    rdx,QWORD PTR [rbp-0x8]
  409be6:	mov    DWORD PTR [rdx],eax
  409be8:	mov    rax,QWORD PTR [rbp-0x8]
  409bec:	leave  
  409bed:	ret    
  409bee:	push   rbp
  409bef:	mov    rbp,rsp
  409bf2:	sub    rsp,0x10
  409bf6:	mov    QWORD PTR [rbp-0x8],rdi
  409bfa:	mov    QWORD PTR [rbp-0x10],rsi
  409bfe:	mov    rax,QWORD PTR [rbp-0x10]
  409c02:	mov    rax,QWORD PTR [rax]
  409c05:	vmovq  xmm0,rax
  409c0a:	call   4045c1 <_start@@Base+0x311>
  409c0f:	vmovq  rax,xmm0
  409c14:	mov    rdx,QWORD PTR [rbp-0x8]
  409c18:	mov    QWORD PTR [rdx],rax
  409c1b:	mov    rax,QWORD PTR [rbp-0x8]
  409c1f:	leave  
  409c20:	ret    
  409c21:	push   rbp
  409c22:	mov    rbp,rsp
  409c25:	sub    rsp,0x10
  409c29:	mov    QWORD PTR [rbp-0x8],rdi
  409c2d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  409c32:	mov    rax,QWORD PTR [rbp-0x10]
  409c36:	vmovq  xmm0,rax
  409c3b:	call   4045ed <_start@@Base+0x33d>
  409c40:	vmovq  rax,xmm0
  409c45:	mov    rdx,QWORD PTR [rbp-0x8]
  409c49:	mov    QWORD PTR [rdx],rax
  409c4c:	mov    rax,QWORD PTR [rbp-0x8]
  409c50:	leave  
  409c51:	ret    
  409c52:	push   rbp
  409c53:	mov    rbp,rsp
  409c56:	sub    rsp,0x20
  409c5a:	mov    QWORD PTR [rbp-0x8],rdi
  409c5e:	mov    QWORD PTR [rbp-0x10],rsi
  409c62:	mov    QWORD PTR [rbp-0x18],rdx
  409c66:	mov    rdx,QWORD PTR [rbp-0x18]
  409c6a:	mov    rsi,QWORD PTR [rbp-0x10]
  409c6e:	mov    rax,QWORD PTR [rbp-0x8]
  409c72:	mov    r9d,0x1fffffff
  409c78:	mov    r8d,0x8
  409c7e:	mov    ecx,0x8
  409c83:	mov    rdi,rax
  409c86:	call   418fe3 <flatcc_builder_create_vector@@Base>
  409c8b:	leave  
  409c8c:	ret    
  409c8d:	push   rbp
  409c8e:	mov    rbp,rsp
  409c91:	sub    rsp,0x20
  409c95:	mov    QWORD PTR [rbp-0x8],rdi
  409c99:	mov    QWORD PTR [rbp-0x10],rsi
  409c9d:	mov    QWORD PTR [rbp-0x18],rdx
  409ca1:	mov    rdx,QWORD PTR [rbp-0x18]
  409ca5:	mov    rcx,QWORD PTR [rbp-0x10]
  409ca9:	mov    rax,QWORD PTR [rbp-0x8]
  409cad:	mov    rsi,rcx
  409cb0:	mov    rdi,rax
  409cb3:	call   41a117 <flatcc_builder_create_string@@Base>
  409cb8:	leave  
  409cb9:	ret    
  409cba:	push   rbp
  409cbb:	mov    rbp,rsp
  409cbe:	sub    rsp,0x10
  409cc2:	mov    QWORD PTR [rbp-0x8],rdi
  409cc6:	mov    QWORD PTR [rbp-0x10],rsi
  409cca:	mov    rdx,QWORD PTR [rbp-0x10]
  409cce:	mov    rax,QWORD PTR [rbp-0x8]
  409cd2:	mov    rsi,rdx
  409cd5:	mov    rdi,rax
  409cd8:	call   41a31b <flatcc_builder_create_string_str@@Base>
  409cdd:	leave  
  409cde:	ret    
  409cdf:	push   rbp
  409ce0:	mov    rbp,rsp
  409ce3:	sub    rsp,0x10
  409ce7:	mov    QWORD PTR [rbp-0x8],rdi
  409ceb:	mov    QWORD PTR [rbp-0x10],rsi
  409cef:	mov    rax,QWORD PTR [rbp-0x10]
  409cf3:	mov    rdi,rax
  409cf6:	call   4048a4 <_start@@Base+0x5f4>
  409cfb:	mov    rdx,rax
  409cfe:	mov    rcx,QWORD PTR [rbp-0x10]
  409d02:	mov    rax,QWORD PTR [rbp-0x8]
  409d06:	mov    rsi,rcx
  409d09:	mov    rdi,rax
  409d0c:	call   41a117 <flatcc_builder_create_string@@Base>
  409d11:	leave  
  409d12:	ret    
  409d13:	push   rbp
  409d14:	mov    rbp,rsp
  409d17:	sub    rsp,0x30
  409d1b:	mov    QWORD PTR [rbp-0x18],rdi
  409d1f:	mov    QWORD PTR [rbp-0x20],rsi
  409d23:	mov    QWORD PTR [rbp-0x28],rdx
  409d27:	mov    QWORD PTR [rbp-0x30],rcx
  409d2b:	mov    rax,QWORD PTR [rbp-0x20]
  409d2f:	mov    rdi,rax
  409d32:	call   4048a4 <_start@@Base+0x5f4>
  409d37:	mov    QWORD PTR [rbp-0x8],rax
  409d3b:	mov    rax,QWORD PTR [rbp-0x28]
  409d3f:	cmp    rax,QWORD PTR [rbp-0x8]
  409d43:	jb     409d4d <_start@@Base+0x5a9d>
  409d45:	mov    rax,QWORD PTR [rbp-0x8]
  409d49:	mov    QWORD PTR [rbp-0x28],rax
  409d4d:	mov    rax,QWORD PTR [rbp-0x28]
  409d51:	sub    QWORD PTR [rbp-0x8],rax
  409d55:	mov    rax,QWORD PTR [rbp-0x30]
  409d59:	cmp    rax,QWORD PTR [rbp-0x8]
  409d5d:	jbe    409d67 <_start@@Base+0x5ab7>
  409d5f:	mov    rax,QWORD PTR [rbp-0x8]
  409d63:	mov    QWORD PTR [rbp-0x30],rax
  409d67:	mov    rdx,QWORD PTR [rbp-0x20]
  409d6b:	mov    rax,QWORD PTR [rbp-0x28]
  409d6f:	lea    rcx,[rdx+rax*1]
  409d73:	mov    rdx,QWORD PTR [rbp-0x30]
  409d77:	mov    rax,QWORD PTR [rbp-0x18]
  409d7b:	mov    rsi,rcx
  409d7e:	mov    rdi,rax
  409d81:	call   41a117 <flatcc_builder_create_string@@Base>
  409d86:	leave  
  409d87:	ret    
  409d88:	push   rbp
  409d89:	mov    rbp,rsp
  409d8c:	sub    rsp,0x10
  409d90:	mov    QWORD PTR [rbp-0x8],rdi
  409d94:	mov    DWORD PTR [rbp-0xc],esi
  409d97:	cmp    DWORD PTR [rbp-0xc],0x0
  409d9b:	je     409db0 <_start@@Base+0x5b00>
  409d9d:	mov    edx,DWORD PTR [rbp-0xc]
  409da0:	mov    rax,QWORD PTR [rbp-0x8]
  409da4:	mov    esi,edx
  409da6:	mov    rdi,rax
  409da9:	call   417b54 <flatcc_builder_offset_vector_push@@Base>
  409dae:	jmp    409db5 <_start@@Base+0x5b05>
  409db0:	mov    eax,0x0
  409db5:	leave  
  409db6:	ret    
  409db7:	push   rbp
  409db8:	mov    rbp,rsp
  409dbb:	sub    rsp,0x10
  409dbf:	mov    QWORD PTR [rbp-0x8],rdi
  409dc3:	mov    QWORD PTR [rbp-0x10],rsi
  409dc7:	mov    rsi,QWORD PTR [rbp-0x10]
  409dcb:	mov    rax,QWORD PTR [rbp-0x8]
  409dcf:	mov    ecx,0x0
  409dd4:	mov    edx,0x0
  409dd9:	mov    rdi,rax
  409ddc:	call   417509 <flatcc_builder_start_buffer@@Base>
  409de1:	leave  
  409de2:	ret    
  409de3:	push   rbp
  409de4:	mov    rbp,rsp
  409de7:	sub    rsp,0x10
  409deb:	mov    QWORD PTR [rbp-0x8],rdi
  409def:	mov    QWORD PTR [rbp-0x10],rsi
  409df3:	mov    rsi,QWORD PTR [rbp-0x10]
  409df7:	mov    rax,QWORD PTR [rbp-0x8]
  409dfb:	mov    ecx,0x2
  409e00:	mov    edx,0x0
  409e05:	mov    rdi,rax
  409e08:	call   417509 <flatcc_builder_start_buffer@@Base>
  409e0d:	leave  
  409e0e:	ret    
  409e0f:	push   rbp
  409e10:	mov    rbp,rsp
  409e13:	sub    rsp,0x10
  409e17:	mov    QWORD PTR [rbp-0x8],rdi
  409e1b:	mov    DWORD PTR [rbp-0xc],esi
  409e1e:	mov    edx,DWORD PTR [rbp-0xc]
  409e21:	mov    rax,QWORD PTR [rbp-0x8]
  409e25:	mov    esi,edx
  409e27:	mov    rdi,rax
  409e2a:	call   417656 <flatcc_builder_end_buffer@@Base>
  409e2f:	leave  
  409e30:	ret    
  409e31:	push   rbp
  409e32:	mov    rbp,rsp
  409e35:	sub    rsp,0x10
  409e39:	mov    QWORD PTR [rbp-0x8],rdi
  409e3d:	mov    eax,esi
  409e3f:	mov    BYTE PTR [rbp-0xc],al
  409e42:	movsx  eax,BYTE PTR [rbp-0xc]
  409e46:	mov    edi,eax
  409e48:	call   40567c <_start@@Base+0x13cc>
  409e4d:	mov    rdx,QWORD PTR [rbp-0x8]
  409e51:	mov    BYTE PTR [rdx],al
  409e53:	mov    rax,QWORD PTR [rbp-0x8]
  409e57:	leave  
  409e58:	ret    
  409e59:	push   rbp
  409e5a:	mov    rbp,rsp
  409e5d:	mov    QWORD PTR [rbp-0x8],rdi
  409e61:	mov    eax,esi
  409e63:	mov    WORD PTR [rbp-0xc],ax
  409e67:	mov    eax,edx
  409e69:	mov    BYTE PTR [rbp-0x10],al
  409e6c:	mov    rdx,QWORD PTR [rbp-0x8]
  409e70:	movzx  eax,WORD PTR [rbp-0xc]
  409e74:	mov    WORD PTR [rdx],ax
  409e77:	mov    rdx,QWORD PTR [rbp-0x8]
  409e7b:	movzx  eax,BYTE PTR [rbp-0x10]
  409e7f:	mov    BYTE PTR [rdx+0x2],al
  409e82:	mov    rax,QWORD PTR [rbp-0x8]
  409e86:	pop    rbp
  409e87:	ret    
  409e88:	push   rbp
  409e89:	mov    rbp,rsp
  409e8c:	sub    rsp,0x10
  409e90:	mov    QWORD PTR [rbp-0x8],rdi
  409e94:	mov    eax,esi
  409e96:	mov    WORD PTR [rbp-0xc],ax
  409e9a:	mov    eax,edx
  409e9c:	mov    BYTE PTR [rbp-0x10],al
  409e9f:	movsx  edx,WORD PTR [rbp-0xc]
  409ea3:	mov    rax,QWORD PTR [rbp-0x8]
  409ea7:	mov    esi,edx
  409ea9:	mov    rdi,rax
  409eac:	call   409b13 <_start@@Base+0x5863>
  409eb1:	mov    rdx,QWORD PTR [rbp-0x8]
  409eb5:	movzx  eax,BYTE PTR [rbp-0x10]
  409eb9:	mov    BYTE PTR [rdx+0x2],al
  409ebc:	mov    rax,QWORD PTR [rbp-0x8]
  409ec0:	leave  
  409ec1:	ret    
  409ec2:	push   rbp
  409ec3:	mov    rbp,rsp
  409ec6:	sub    rsp,0x10
  409eca:	mov    QWORD PTR [rbp-0x8],rdi
  409ece:	mov    QWORD PTR [rbp-0x10],rsi
  409ed2:	mov    rdx,QWORD PTR [rbp-0x10]
  409ed6:	mov    rax,QWORD PTR [rbp-0x8]
  409eda:	mov    rsi,rdx
  409edd:	mov    rdi,rax
  409ee0:	call   409ae5 <_start@@Base+0x5835>
  409ee5:	mov    rax,QWORD PTR [rbp-0x10]
  409ee9:	movzx  eax,BYTE PTR [rax+0x2]
  409eed:	mov    rdx,QWORD PTR [rbp-0x8]
  409ef1:	mov    BYTE PTR [rdx+0x2],al
  409ef4:	mov    rax,QWORD PTR [rbp-0x8]
  409ef8:	leave  
  409ef9:	ret    
  409efa:	push   rbp
  409efb:	mov    rbp,rsp
  409efe:	sub    rsp,0x10
  409f02:	mov    QWORD PTR [rbp-0x8],rdi
  409f06:	mov    rax,QWORD PTR [rbp-0x8]
  409f0a:	mov    ecx,0x3fffffff
  409f0f:	mov    edx,0x2
  409f14:	mov    esi,0x4
  409f19:	mov    rdi,rax
  409f1c:	call   418080 <flatcc_builder_start_vector@@Base>
  409f21:	leave  
  409f22:	ret    
  409f23:	push   rbp
  409f24:	mov    rbp,rsp
  409f27:	sub    rsp,0x10
  409f2b:	mov    QWORD PTR [rbp-0x8],rdi
  409f2f:	mov    rax,QWORD PTR [rbp-0x8]
  409f33:	mov    rdi,rax
  409f36:	call   419275 <flatcc_builder_end_vector@@Base>
  409f3b:	leave  
  409f3c:	ret    
  409f3d:	push   rbp
  409f3e:	mov    rbp,rsp
  409f41:	sub    rsp,0x10
  409f45:	mov    QWORD PTR [rbp-0x8],rdi
  409f49:	mov    QWORD PTR [rbp-0x10],rsi
  409f4d:	mov    rax,QWORD PTR [rbp-0x10]
  409f51:	mov    rdi,rax
  409f54:	call   4057a4 <_start@@Base+0x14f4>
  409f59:	mov    rdx,rax
  409f5c:	mov    rsi,QWORD PTR [rbp-0x10]
  409f60:	mov    rax,QWORD PTR [rbp-0x8]
  409f64:	mov    r9d,0x3fffffff
  409f6a:	mov    r8d,0x2
  409f70:	mov    ecx,0x4
  409f75:	mov    rdi,rax
  409f78:	call   418fe3 <flatcc_builder_create_vector@@Base>
  409f7d:	leave  
  409f7e:	ret    
  409f7f:	push   rbp
  409f80:	mov    rbp,rsp
  409f83:	sub    rsp,0x30
  409f87:	mov    QWORD PTR [rbp-0x18],rdi
  409f8b:	mov    QWORD PTR [rbp-0x20],rsi
  409f8f:	mov    QWORD PTR [rbp-0x28],rdx
  409f93:	mov    QWORD PTR [rbp-0x30],rcx
  409f97:	mov    rax,QWORD PTR [rbp-0x20]
  409f9b:	mov    rdi,rax
  409f9e:	call   4057a4 <_start@@Base+0x14f4>
  409fa3:	mov    QWORD PTR [rbp-0x8],rax
  409fa7:	mov    rax,QWORD PTR [rbp-0x28]
  409fab:	cmp    rax,QWORD PTR [rbp-0x8]
  409faf:	jb     409fb9 <_start@@Base+0x5d09>
  409fb1:	mov    rax,QWORD PTR [rbp-0x8]
  409fb5:	mov    QWORD PTR [rbp-0x28],rax
  409fb9:	mov    rax,QWORD PTR [rbp-0x28]
  409fbd:	sub    QWORD PTR [rbp-0x8],rax
  409fc1:	mov    rax,QWORD PTR [rbp-0x30]
  409fc5:	cmp    rax,QWORD PTR [rbp-0x8]
  409fc9:	jbe    409fd3 <_start@@Base+0x5d23>
  409fcb:	mov    rax,QWORD PTR [rbp-0x8]
  409fcf:	mov    QWORD PTR [rbp-0x30],rax
  409fd3:	mov    rdx,QWORD PTR [rbp-0x28]
  409fd7:	mov    rax,QWORD PTR [rbp-0x20]
  409fdb:	mov    rsi,rdx
  409fde:	mov    rdi,rax
  409fe1:	call   405722 <_start@@Base+0x1472>
  409fe6:	mov    rsi,rax
  409fe9:	mov    rdx,QWORD PTR [rbp-0x30]
  409fed:	mov    rax,QWORD PTR [rbp-0x18]
  409ff1:	mov    r9d,0x3fffffff
  409ff7:	mov    r8d,0x2
  409ffd:	mov    ecx,0x4
  40a002:	mov    rdi,rax
  40a005:	call   418fe3 <flatcc_builder_create_vector@@Base>
  40a00a:	leave  
  40a00b:	ret    
  40a00c:	push   rbp
  40a00d:	mov    rbp,rsp
  40a010:	sub    rsp,0x20
  40a014:	mov    QWORD PTR [rbp-0x18],rdi
  40a018:	mov    QWORD PTR [rbp-0x20],rsi
  40a01c:	mov    rax,QWORD PTR [rbp-0x18]
  40a020:	mov    esi,0x1
  40a025:	mov    rdi,rax
  40a028:	call   417930 <flatcc_builder_extend_vector@@Base>
  40a02d:	mov    QWORD PTR [rbp-0x8],rax
  40a031:	cmp    QWORD PTR [rbp-0x8],0x0
  40a036:	je     40a05e <_start@@Base+0x5dae>
  40a038:	mov    eax,0x0
  40a03d:	call   405799 <_start@@Base+0x14e9>
  40a042:	mov    rdx,rax
  40a045:	mov    rcx,QWORD PTR [rbp-0x20]
  40a049:	mov    rax,QWORD PTR [rbp-0x8]
  40a04d:	mov    rsi,rcx
  40a050:	mov    rdi,rax
  40a053:	call   404260 <memcpy@plt>
  40a058:	mov    rax,QWORD PTR [rbp-0x8]
  40a05c:	jmp    40a063 <_start@@Base+0x5db3>
  40a05e:	mov    eax,0x0
  40a063:	leave  
  40a064:	ret    
  40a065:	push   rbp
  40a066:	mov    rbp,rsp
  40a069:	mov    QWORD PTR [rbp-0x8],rdi
  40a06d:	mov    QWORD PTR [rbp-0x10],rsi
  40a071:	mov    rax,QWORD PTR [rbp-0x8]
  40a075:	pop    rbp
  40a076:	ret    
  40a077:	push   rbp
  40a078:	mov    rbp,rsp
  40a07b:	sub    rsp,0x28
  40a07f:	mov    QWORD PTR [rbp-0x8],rdi
  40a083:	vmovss DWORD PTR [rbp-0xc],xmm0
  40a088:	vmovss DWORD PTR [rbp-0x10],xmm1
  40a08d:	vmovss DWORD PTR [rbp-0x14],xmm2
  40a092:	vmovsd QWORD PTR [rbp-0x20],xmm3
  40a097:	mov    eax,esi
  40a099:	mov    BYTE PTR [rbp-0x18],al
  40a09c:	mov    eax,edx
  40a09e:	mov    WORD PTR [rbp-0x24],ax
  40a0a2:	mov    eax,ecx
  40a0a4:	mov    BYTE PTR [rbp-0x28],al
  40a0a7:	mov    rax,QWORD PTR [rbp-0x8]
  40a0ab:	mov    edx,DWORD PTR [rbp-0xc]
  40a0ae:	vmovd  xmm0,edx
  40a0b2:	mov    rdi,rax
  40a0b5:	call   409bc1 <_start@@Base+0x5911>
  40a0ba:	mov    rax,QWORD PTR [rbp-0x8]
  40a0be:	lea    rdx,[rax+0x4]
  40a0c2:	mov    eax,DWORD PTR [rbp-0x10]
  40a0c5:	vmovd  xmm0,eax
  40a0c9:	mov    rdi,rdx
  40a0cc:	call   409bc1 <_start@@Base+0x5911>
  40a0d1:	mov    rax,QWORD PTR [rbp-0x8]
  40a0d5:	lea    rdx,[rax+0x8]
  40a0d9:	mov    eax,DWORD PTR [rbp-0x14]
  40a0dc:	vmovd  xmm0,eax
  40a0e0:	mov    rdi,rdx
  40a0e3:	call   409bc1 <_start@@Base+0x5911>
  40a0e8:	mov    rax,QWORD PTR [rbp-0x8]
  40a0ec:	lea    rdx,[rax+0x10]
  40a0f0:	mov    rax,QWORD PTR [rbp-0x20]
  40a0f4:	vmovq  xmm0,rax
  40a0f9:	mov    rdi,rdx
  40a0fc:	call   409c21 <_start@@Base+0x5971>
  40a101:	mov    rdx,QWORD PTR [rbp-0x8]
  40a105:	movzx  eax,BYTE PTR [rbp-0x18]
  40a109:	mov    BYTE PTR [rdx+0x18],al
  40a10c:	movsx  edx,BYTE PTR [rbp-0x28]
  40a110:	movsx  eax,WORD PTR [rbp-0x24]
  40a114:	mov    rcx,QWORD PTR [rbp-0x8]
  40a118:	add    rcx,0x1a
  40a11c:	mov    esi,eax
  40a11e:	mov    rdi,rcx
  40a121:	call   409e88 <_start@@Base+0x5bd8>
  40a126:	mov    rax,QWORD PTR [rbp-0x8]
  40a12a:	leave  
  40a12b:	ret    
  40a12c:	push   rbp
  40a12d:	mov    rbp,rsp
  40a130:	sub    rsp,0x10
  40a134:	mov    QWORD PTR [rbp-0x8],rdi
  40a138:	mov    QWORD PTR [rbp-0x10],rsi
  40a13c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a140:	mov    rax,QWORD PTR [rbp-0x8]
  40a144:	mov    rsi,rdx
  40a147:	mov    rdi,rax
  40a14a:	call   409b92 <_start@@Base+0x58e2>
  40a14f:	mov    rax,QWORD PTR [rbp-0x10]
  40a153:	lea    rdx,[rax+0x4]
  40a157:	mov    rax,QWORD PTR [rbp-0x8]
  40a15b:	add    rax,0x4
  40a15f:	mov    rsi,rdx
  40a162:	mov    rdi,rax
  40a165:	call   409b92 <_start@@Base+0x58e2>
  40a16a:	mov    rax,QWORD PTR [rbp-0x10]
  40a16e:	lea    rdx,[rax+0x8]
  40a172:	mov    rax,QWORD PTR [rbp-0x8]
  40a176:	add    rax,0x8
  40a17a:	mov    rsi,rdx
  40a17d:	mov    rdi,rax
  40a180:	call   409b92 <_start@@Base+0x58e2>
  40a185:	mov    rax,QWORD PTR [rbp-0x10]
  40a189:	lea    rdx,[rax+0x10]
  40a18d:	mov    rax,QWORD PTR [rbp-0x8]
  40a191:	add    rax,0x10
  40a195:	mov    rsi,rdx
  40a198:	mov    rdi,rax
  40a19b:	call   409bee <_start@@Base+0x593e>
  40a1a0:	mov    rax,QWORD PTR [rbp-0x10]
  40a1a4:	movzx  eax,BYTE PTR [rax+0x18]
  40a1a8:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1ac:	mov    BYTE PTR [rdx+0x18],al
  40a1af:	mov    rax,QWORD PTR [rbp-0x10]
  40a1b3:	lea    rdx,[rax+0x1a]
  40a1b7:	mov    rax,QWORD PTR [rbp-0x8]
  40a1bb:	add    rax,0x1a
  40a1bf:	mov    rsi,rdx
  40a1c2:	mov    rdi,rax
  40a1c5:	call   409ec2 <_start@@Base+0x5c12>
  40a1ca:	mov    rax,QWORD PTR [rbp-0x8]
  40a1ce:	leave  
  40a1cf:	ret    
  40a1d0:	push   rbp
  40a1d1:	mov    rbp,rsp
  40a1d4:	mov    QWORD PTR [rbp-0x8],rdi
  40a1d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1dc:	pop    rbp
  40a1dd:	ret    
  40a1de:	push   rbp
  40a1df:	mov    rbp,rsp
  40a1e2:	sub    rsp,0x10
  40a1e6:	mov    QWORD PTR [rbp-0x8],rdi
  40a1ea:	mov    eax,0x0
  40a1ef:	call   405831 <_start@@Base+0x1581>
  40a1f4:	mov    rdx,rax
  40a1f7:	mov    rax,QWORD PTR [rbp-0x8]
  40a1fb:	mov    esi,0x0
  40a200:	mov    rdi,rax
  40a203:	call   404200 <memset@plt>
  40a208:	leave  
  40a209:	ret    
  40a20a:	push   rbp
  40a20b:	mov    rbp,rsp
  40a20e:	sub    rsp,0x10
  40a212:	mov    QWORD PTR [rbp-0x8],rdi
  40a216:	mov    rax,QWORD PTR [rbp-0x8]
  40a21a:	mov    edx,0x10
  40a21f:	mov    esi,0x20
  40a224:	mov    rdi,rax
  40a227:	call   417796 <flatcc_builder_start_struct@@Base>
  40a22c:	leave  
  40a22d:	ret    
  40a22e:	push   rbp
  40a22f:	mov    rbp,rsp
  40a232:	sub    rsp,0x10
  40a236:	mov    QWORD PTR [rbp-0x8],rdi
  40a23a:	mov    rax,QWORD PTR [rbp-0x8]
  40a23e:	mov    rdi,rax
  40a241:	call   417818 <flatcc_builder_end_struct@@Base>
  40a246:	leave  
  40a247:	ret    
  40a248:	push   rbp
  40a249:	mov    rbp,rsp
  40a24c:	sub    rsp,0x40
  40a250:	mov    QWORD PTR [rbp-0x18],rdi
  40a254:	vmovss DWORD PTR [rbp-0x1c],xmm0
  40a259:	vmovss DWORD PTR [rbp-0x20],xmm1
  40a25e:	vmovss DWORD PTR [rbp-0x24],xmm2
  40a263:	vmovsd QWORD PTR [rbp-0x30],xmm3
  40a268:	mov    eax,esi
  40a26a:	mov    BYTE PTR [rbp-0x28],al
  40a26d:	mov    eax,edx
  40a26f:	mov    WORD PTR [rbp-0x34],ax
  40a273:	mov    eax,ecx
  40a275:	mov    BYTE PTR [rbp-0x38],al
  40a278:	mov    rax,QWORD PTR [rbp-0x18]
  40a27c:	mov    rdi,rax
  40a27f:	call   40a20a <_start@@Base+0x5f5a>
  40a284:	mov    QWORD PTR [rbp-0x8],rax
  40a288:	cmp    QWORD PTR [rbp-0x8],0x0
  40a28d:	jne    40a296 <_start@@Base+0x5fe6>
  40a28f:	mov    eax,0x0
  40a294:	jmp    40a2dc <_start@@Base+0x602c>
  40a296:	movsx  ecx,BYTE PTR [rbp-0x38]
  40a29a:	movsx  edx,WORD PTR [rbp-0x34]
  40a29e:	movsx  esi,BYTE PTR [rbp-0x28]
  40a2a2:	vmovsd xmm2,QWORD PTR [rbp-0x30]
  40a2a7:	vmovss xmm1,DWORD PTR [rbp-0x24]
  40a2ac:	vmovss xmm0,DWORD PTR [rbp-0x20]
  40a2b1:	mov    edi,DWORD PTR [rbp-0x1c]
  40a2b4:	mov    rax,QWORD PTR [rbp-0x8]
  40a2b8:	vmovapd xmm3,xmm2
  40a2bc:	vmovaps xmm2,xmm1
  40a2c0:	vmovaps xmm1,xmm0
  40a2c4:	vmovd  xmm0,edi
  40a2c8:	mov    rdi,rax
  40a2cb:	call   40a077 <_start@@Base+0x5dc7>
  40a2d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a2d4:	mov    rdi,rax
  40a2d7:	call   40a22e <_start@@Base+0x5f7e>
  40a2dc:	leave  
  40a2dd:	ret    
  40a2de:	push   rbp
  40a2df:	mov    rbp,rsp
  40a2e2:	sub    rsp,0x30
  40a2e6:	mov    QWORD PTR [rbp-0x8],rdi
  40a2ea:	vmovss DWORD PTR [rbp-0xc],xmm0
  40a2ef:	vmovss DWORD PTR [rbp-0x10],xmm1
  40a2f4:	vmovss DWORD PTR [rbp-0x14],xmm2
  40a2f9:	vmovsd QWORD PTR [rbp-0x20],xmm3
  40a2fe:	mov    eax,esi
  40a300:	mov    BYTE PTR [rbp-0x18],al
  40a303:	mov    eax,edx
  40a305:	mov    WORD PTR [rbp-0x24],ax
  40a309:	mov    eax,ecx
  40a30b:	mov    BYTE PTR [rbp-0x28],al
  40a30e:	movsx  ecx,BYTE PTR [rbp-0x28]
  40a312:	movsx  edx,WORD PTR [rbp-0x24]
  40a316:	movsx  esi,BYTE PTR [rbp-0x18]
  40a31a:	vmovsd xmm2,QWORD PTR [rbp-0x20]
  40a31f:	vmovss xmm1,DWORD PTR [rbp-0x14]
  40a324:	vmovss xmm0,DWORD PTR [rbp-0x10]
  40a329:	mov    edi,DWORD PTR [rbp-0xc]
  40a32c:	mov    rax,QWORD PTR [rbp-0x8]
  40a330:	vmovapd xmm3,xmm2
  40a334:	vmovaps xmm2,xmm1
  40a338:	vmovaps xmm1,xmm0
  40a33c:	vmovd  xmm0,edi
  40a340:	mov    rdi,rax
  40a343:	call   40a248 <_start@@Base+0x5f98>
  40a348:	mov    edx,eax
  40a34a:	mov    rax,QWORD PTR [rbp-0x8]
  40a34e:	mov    r9d,0x0
  40a354:	mov    r8d,0x10
  40a35a:	mov    ecx,edx
  40a35c:	mov    edx,0x0
  40a361:	lea    rsi,[rip+0x13e0c]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40a368:	mov    rdi,rax
  40a36b:	call   416f06 <flatcc_builder_create_buffer@@Base>
  40a370:	leave  
  40a371:	ret    
  40a372:	push   rbp
  40a373:	mov    rbp,rsp
  40a376:	sub    rsp,0x30
  40a37a:	mov    QWORD PTR [rbp-0x8],rdi
  40a37e:	vmovss DWORD PTR [rbp-0xc],xmm0
  40a383:	vmovss DWORD PTR [rbp-0x10],xmm1
  40a388:	vmovss DWORD PTR [rbp-0x14],xmm2
  40a38d:	vmovsd QWORD PTR [rbp-0x20],xmm3
  40a392:	mov    eax,esi
  40a394:	mov    BYTE PTR [rbp-0x18],al
  40a397:	mov    eax,edx
  40a399:	mov    WORD PTR [rbp-0x24],ax
  40a39d:	mov    eax,ecx
  40a39f:	mov    BYTE PTR [rbp-0x28],al
  40a3a2:	movsx  ecx,BYTE PTR [rbp-0x28]
  40a3a6:	movsx  edx,WORD PTR [rbp-0x24]
  40a3aa:	movsx  esi,BYTE PTR [rbp-0x18]
  40a3ae:	vmovsd xmm2,QWORD PTR [rbp-0x20]
  40a3b3:	vmovss xmm1,DWORD PTR [rbp-0x14]
  40a3b8:	vmovss xmm0,DWORD PTR [rbp-0x10]
  40a3bd:	mov    edi,DWORD PTR [rbp-0xc]
  40a3c0:	mov    rax,QWORD PTR [rbp-0x8]
  40a3c4:	vmovapd xmm3,xmm2
  40a3c8:	vmovaps xmm2,xmm1
  40a3cc:	vmovaps xmm1,xmm0
  40a3d0:	vmovd  xmm0,edi
  40a3d4:	mov    rdi,rax
  40a3d7:	call   40a248 <_start@@Base+0x5f98>
  40a3dc:	mov    edx,eax
  40a3de:	mov    rax,QWORD PTR [rbp-0x8]
  40a3e2:	mov    r9d,0x0
  40a3e8:	mov    r8d,0x10
  40a3ee:	mov    ecx,edx
  40a3f0:	mov    edx,0x0
  40a3f5:	lea    rsi,[rip+0x13e6d]        # 41e269 <_IO_stdin_used@@Base+0x269>
  40a3fc:	mov    rdi,rax
  40a3ff:	call   416f06 <flatcc_builder_create_buffer@@Base>
  40a404:	leave  
  40a405:	ret    
  40a406:	push   rbp
  40a407:	mov    rbp,rsp
  40a40a:	sub    rsp,0x10
  40a40e:	mov    QWORD PTR [rbp-0x8],rdi
  40a412:	mov    eax,esi
  40a414:	mov    WORD PTR [rbp-0xc],ax
  40a418:	movzx  edx,WORD PTR [rbp-0xc]
  40a41c:	mov    rax,QWORD PTR [rbp-0x8]
  40a420:	mov    esi,edx
  40a422:	mov    rdi,rax
  40a425:	call   409a66 <_start@@Base+0x57b6>
  40a42a:	mov    rax,QWORD PTR [rbp-0x8]
  40a42e:	leave  
  40a42f:	ret    
  40a430:	push   rbp
  40a431:	mov    rbp,rsp
  40a434:	sub    rsp,0x10
  40a438:	mov    QWORD PTR [rbp-0x8],rdi
  40a43c:	mov    rax,QWORD PTR [rbp-0x8]
  40a440:	mov    edx,0x2
  40a445:	mov    esi,0x2
  40a44a:	mov    rdi,rax
  40a44d:	call   417796 <flatcc_builder_start_struct@@Base>
  40a452:	leave  
  40a453:	ret    
  40a454:	push   rbp
  40a455:	mov    rbp,rsp
  40a458:	sub    rsp,0x10
  40a45c:	mov    QWORD PTR [rbp-0x8],rdi
  40a460:	mov    rax,QWORD PTR [rbp-0x8]
  40a464:	mov    rdi,rax
  40a467:	call   417818 <flatcc_builder_end_struct@@Base>
  40a46c:	leave  
  40a46d:	ret    
  40a46e:	push   rbp
  40a46f:	mov    rbp,rsp
  40a472:	sub    rsp,0x20
  40a476:	mov    QWORD PTR [rbp-0x18],rdi
  40a47a:	mov    eax,esi
  40a47c:	mov    WORD PTR [rbp-0x1c],ax
  40a480:	mov    rax,QWORD PTR [rbp-0x18]
  40a484:	mov    rdi,rax
  40a487:	call   40a430 <_start@@Base+0x6180>
  40a48c:	mov    QWORD PTR [rbp-0x8],rax
  40a490:	cmp    QWORD PTR [rbp-0x8],0x0
  40a495:	jne    40a49e <_start@@Base+0x61ee>
  40a497:	mov    eax,0x0
  40a49c:	jmp    40a4bc <_start@@Base+0x620c>
  40a49e:	movzx  edx,WORD PTR [rbp-0x1c]
  40a4a2:	mov    rax,QWORD PTR [rbp-0x8]
  40a4a6:	mov    esi,edx
  40a4a8:	mov    rdi,rax
  40a4ab:	call   40a406 <_start@@Base+0x6156>
  40a4b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a4b4:	mov    rdi,rax
  40a4b7:	call   40a454 <_start@@Base+0x61a4>
  40a4bc:	leave  
  40a4bd:	ret    
  40a4be:	push   rbp
  40a4bf:	mov    rbp,rsp
  40a4c2:	sub    rsp,0x10
  40a4c6:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ca:	mov    DWORD PTR [rbp-0xc],esi
  40a4cd:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d1:	mov    edx,DWORD PTR [rbp-0xc]
  40a4d4:	mov    esi,edx
  40a4d6:	mov    rdi,rax
  40a4d9:	call   409b3f <_start@@Base+0x588f>
  40a4de:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e2:	leave  
  40a4e3:	ret    
  40a4e4:	push   rbp
  40a4e5:	mov    rbp,rsp
  40a4e8:	sub    rsp,0x10
  40a4ec:	mov    QWORD PTR [rbp-0x8],rdi
  40a4f0:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f4:	mov    edx,0x4
  40a4f9:	mov    esi,0x4
  40a4fe:	mov    rdi,rax
  40a501:	call   417796 <flatcc_builder_start_struct@@Base>
  40a506:	leave  
  40a507:	ret    
  40a508:	push   rbp
  40a509:	mov    rbp,rsp
  40a50c:	sub    rsp,0x10
  40a510:	mov    QWORD PTR [rbp-0x8],rdi
  40a514:	mov    rax,QWORD PTR [rbp-0x8]
  40a518:	mov    rdi,rax
  40a51b:	call   417818 <flatcc_builder_end_struct@@Base>
  40a520:	leave  
  40a521:	ret    
  40a522:	push   rbp
  40a523:	mov    rbp,rsp
  40a526:	sub    rsp,0x10
  40a52a:	mov    QWORD PTR [rbp-0x8],rdi
  40a52e:	mov    rax,QWORD PTR [rbp-0x8]
  40a532:	mov    rdi,rax
  40a535:	call   417818 <flatcc_builder_end_struct@@Base>
  40a53a:	leave  
  40a53b:	ret    
  40a53c:	push   rbp
  40a53d:	mov    rbp,rsp
  40a540:	sub    rsp,0x20
  40a544:	mov    QWORD PTR [rbp-0x18],rdi
  40a548:	mov    DWORD PTR [rbp-0x1c],esi
  40a54b:	mov    rax,QWORD PTR [rbp-0x18]
  40a54f:	mov    rdi,rax
  40a552:	call   40a4e4 <_start@@Base+0x6234>
  40a557:	mov    QWORD PTR [rbp-0x8],rax
  40a55b:	cmp    QWORD PTR [rbp-0x8],0x0
  40a560:	jne    40a569 <_start@@Base+0x62b9>
  40a562:	mov    eax,0x0
  40a567:	jmp    40a586 <_start@@Base+0x62d6>
  40a569:	mov    edx,DWORD PTR [rbp-0x1c]
  40a56c:	mov    rax,QWORD PTR [rbp-0x8]
  40a570:	mov    esi,edx
  40a572:	mov    rdi,rax
  40a575:	call   40a4be <_start@@Base+0x620e>
  40a57a:	mov    rax,QWORD PTR [rbp-0x18]
  40a57e:	mov    rdi,rax
  40a581:	call   40a522 <_start@@Base+0x6272>
  40a586:	leave  
  40a587:	ret    
  40a588:	push   rbp
  40a589:	mov    rbp,rsp
  40a58c:	sub    rsp,0x10
  40a590:	mov    QWORD PTR [rbp-0x8],rdi
  40a594:	mov    rax,QWORD PTR [rbp-0x8]
  40a598:	mov    esi,0x1
  40a59d:	mov    rdi,rax
  40a5a0:	call   4182ce <flatcc_builder_start_table@@Base>
  40a5a5:	leave  
  40a5a6:	ret    
  40a5a7:	push   rbp
  40a5a8:	mov    rbp,rsp
  40a5ab:	sub    rsp,0x10
  40a5af:	mov    QWORD PTR [rbp-0x8],rdi
  40a5b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a5b7:	mov    edx,0x0
  40a5bc:	lea    rsi,[rip+0x13cb1]        # 41e274 <_IO_stdin_used@@Base+0x274>
  40a5c3:	mov    rdi,rax
  40a5c6:	call   418d30 <flatcc_builder_check_required@@Base>
  40a5cb:	test   eax,eax
  40a5cd:	jne    40a5ee <_start@@Base+0x633e>
  40a5cf:	lea    rcx,[rip+0x170aa]        # 421680 <_IO_stdin_used@@Base+0x3680>
  40a5d6:	mov    edx,0xd7
  40a5db:	lea    rsi,[rip+0x13c96]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a5e2:	lea    rdi,[rip+0x13d0f]        # 41e2f8 <_IO_stdin_used@@Base+0x2f8>
  40a5e9:	call   4041f0 <__assert_fail@plt>
  40a5ee:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f2:	mov    rdi,rax
  40a5f5:	call   418ddd <flatcc_builder_end_table@@Base>
  40a5fa:	leave  
  40a5fb:	ret    
  40a5fc:	push   rbp
  40a5fd:	mov    rbp,rsp
  40a600:	sub    rsp,0x10
  40a604:	mov    QWORD PTR [rbp-0x8],rdi
  40a608:	mov    rax,QWORD PTR [rbp-0x8]
  40a60c:	mov    esi,0x4
  40a611:	mov    rdi,rax
  40a614:	call   4182ce <flatcc_builder_start_table@@Base>
  40a619:	leave  
  40a61a:	ret    
  40a61b:	push   rbp
  40a61c:	mov    rbp,rsp
  40a61f:	sub    rsp,0x10
  40a623:	mov    QWORD PTR [rbp-0x8],rdi
  40a627:	mov    rax,QWORD PTR [rbp-0x8]
  40a62b:	mov    edx,0x0
  40a630:	lea    rsi,[rip+0x13d7f]        # 41e3b6 <_IO_stdin_used@@Base+0x3b6>
  40a637:	mov    rdi,rax
  40a63a:	call   418d30 <flatcc_builder_check_required@@Base>
  40a63f:	test   eax,eax
  40a641:	jne    40a662 <_start@@Base+0x63b2>
  40a643:	lea    rcx,[rip+0x175d6]        # 421c20 <_IO_stdin_used@@Base+0x3c20>
  40a64a:	mov    edx,0xd9
  40a64f:	lea    rsi,[rip+0x13c22]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a656:	lea    rdi,[rip+0x13d5b]        # 41e3b8 <_IO_stdin_used@@Base+0x3b8>
  40a65d:	call   4041f0 <__assert_fail@plt>
  40a662:	mov    rax,QWORD PTR [rbp-0x8]
  40a666:	mov    rdi,rax
  40a669:	call   418ddd <flatcc_builder_end_table@@Base>
  40a66e:	leave  
  40a66f:	ret    
  40a670:	push   rbp
  40a671:	mov    rbp,rsp
  40a674:	sub    rsp,0x10
  40a678:	mov    QWORD PTR [rbp-0x8],rdi
  40a67c:	mov    rax,QWORD PTR [rbp-0x8]
  40a680:	mov    esi,0x3
  40a685:	mov    rdi,rax
  40a688:	call   4182ce <flatcc_builder_start_table@@Base>
  40a68d:	leave  
  40a68e:	ret    
  40a68f:	push   rbp
  40a690:	mov    rbp,rsp
  40a693:	sub    rsp,0x10
  40a697:	mov    QWORD PTR [rbp-0x8],rdi
  40a69b:	mov    rax,QWORD PTR [rbp-0x8]
  40a69f:	mov    edx,0x0
  40a6a4:	lea    rsi,[rip+0x13de1]        # 41e48c <_IO_stdin_used@@Base+0x48c>
  40a6ab:	mov    rdi,rax
  40a6ae:	call   418d30 <flatcc_builder_check_required@@Base>
  40a6b3:	test   eax,eax
  40a6b5:	jne    40a6d6 <_start@@Base+0x6426>
  40a6b7:	lea    rcx,[rip+0x17482]        # 421b40 <_IO_stdin_used@@Base+0x3b40>
  40a6be:	mov    edx,0xdd
  40a6c3:	lea    rsi,[rip+0x13bae]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a6ca:	lea    rdi,[rip+0x13dbf]        # 41e490 <_IO_stdin_used@@Base+0x490>
  40a6d1:	call   4041f0 <__assert_fail@plt>
  40a6d6:	mov    rax,QWORD PTR [rbp-0x8]
  40a6da:	mov    rdi,rax
  40a6dd:	call   418ddd <flatcc_builder_end_table@@Base>
  40a6e2:	leave  
  40a6e3:	ret    
  40a6e4:	push   rbp
  40a6e5:	mov    rbp,rsp
  40a6e8:	sub    rsp,0x10
  40a6ec:	mov    QWORD PTR [rbp-0x8],rdi
  40a6f0:	mov    rax,QWORD PTR [rbp-0x8]
  40a6f4:	mov    esi,0x4
  40a6f9:	mov    rdi,rax
  40a6fc:	call   4182ce <flatcc_builder_start_table@@Base>
  40a701:	leave  
  40a702:	ret    
  40a703:	push   rbp
  40a704:	mov    rbp,rsp
  40a707:	sub    rsp,0x10
  40a70b:	mov    QWORD PTR [rbp-0x8],rdi
  40a70f:	mov    rax,QWORD PTR [rbp-0x8]
  40a713:	mov    edx,0x0
  40a718:	lea    rsi,[rip+0x13e0b]        # 41e52a <_IO_stdin_used@@Base+0x52a>
  40a71f:	mov    rdi,rax
  40a722:	call   418d30 <flatcc_builder_check_required@@Base>
  40a727:	test   eax,eax
  40a729:	jne    40a74a <_start@@Base+0x649a>
  40a72b:	lea    rcx,[rip+0x1751e]        # 421c50 <_IO_stdin_used@@Base+0x3c50>
  40a732:	mov    edx,0xdf
  40a737:	lea    rsi,[rip+0x13b3a]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a73e:	lea    rdi,[rip+0x13deb]        # 41e530 <_IO_stdin_used@@Base+0x530>
  40a745:	call   4041f0 <__assert_fail@plt>
  40a74a:	mov    rax,QWORD PTR [rbp-0x8]
  40a74e:	mov    rdi,rax
  40a751:	call   418ddd <flatcc_builder_end_table@@Base>
  40a756:	leave  
  40a757:	ret    
  40a758:	push   rbp
  40a759:	mov    rbp,rsp
  40a75c:	sub    rsp,0x10
  40a760:	mov    QWORD PTR [rbp-0x8],rdi
  40a764:	mov    rax,QWORD PTR [rbp-0x8]
  40a768:	mov    esi,0x24
  40a76d:	mov    rdi,rax
  40a770:	call   4182ce <flatcc_builder_start_table@@Base>
  40a775:	leave  
  40a776:	ret    
  40a777:	push   rbp
  40a778:	mov    rbp,rsp
  40a77b:	sub    rsp,0x10
  40a77f:	mov    QWORD PTR [rbp-0x8],rdi
  40a783:	mov    rax,QWORD PTR [rbp-0x8]
  40a787:	mov    edx,0x1
  40a78c:	lea    rsi,[rip+0x13e3d]        # 41e5d0 <_IO_stdin_used@@Base+0x5d0>
  40a793:	mov    rdi,rax
  40a796:	call   418d30 <flatcc_builder_check_required@@Base>
  40a79b:	test   eax,eax
  40a79d:	jne    40a7be <_start@@Base+0x650e>
  40a79f:	lea    rcx,[rip+0x16e6a]        # 421610 <_IO_stdin_used@@Base+0x3610>
  40a7a6:	mov    edx,0xeb
  40a7ab:	lea    rsi,[rip+0x13ac6]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a7b2:	lea    rdi,[rip+0x13e1f]        # 41e5d8 <_IO_stdin_used@@Base+0x5d8>
  40a7b9:	call   4041f0 <__assert_fail@plt>
  40a7be:	mov    rax,QWORD PTR [rbp-0x8]
  40a7c2:	mov    rdi,rax
  40a7c5:	call   418ddd <flatcc_builder_end_table@@Base>
  40a7ca:	leave  
  40a7cb:	ret    
  40a7cc:	push   rbp
  40a7cd:	mov    rbp,rsp
  40a7d0:	sub    rsp,0x10
  40a7d4:	mov    QWORD PTR [rbp-0x8],rdi
  40a7d8:	mov    DWORD PTR [rbp-0xc],esi
  40a7db:	cmp    DWORD PTR [rbp-0xc],0x0
  40a7df:	je     40a7f4 <_start@@Base+0x6544>
  40a7e1:	mov    edx,DWORD PTR [rbp-0xc]
  40a7e4:	mov    rax,QWORD PTR [rbp-0x8]
  40a7e8:	mov    esi,edx
  40a7ea:	mov    rdi,rax
  40a7ed:	call   417b54 <flatcc_builder_offset_vector_push@@Base>
  40a7f2:	jmp    40a7f9 <_start@@Base+0x6549>
  40a7f4:	mov    eax,0x0
  40a7f9:	leave  
  40a7fa:	ret    
  40a7fb:	push   rbp
  40a7fc:	mov    rbp,rsp
  40a7ff:	sub    rsp,0x10
  40a803:	mov    QWORD PTR [rbp-0x8],rdi
  40a807:	mov    rax,QWORD PTR [rbp-0x8]
  40a80b:	mov    esi,0xc
  40a810:	mov    rdi,rax
  40a813:	call   4182ce <flatcc_builder_start_table@@Base>
  40a818:	leave  
  40a819:	ret    
  40a81a:	push   rbp
  40a81b:	mov    rbp,rsp
  40a81e:	sub    rsp,0x10
  40a822:	mov    QWORD PTR [rbp-0x8],rdi
  40a826:	mov    rax,QWORD PTR [rbp-0x8]
  40a82a:	mov    edx,0x0
  40a82f:	lea    rsi,[rip+0x13e44]        # 41e67a <_IO_stdin_used@@Base+0x67a>
  40a836:	mov    rdi,rax
  40a839:	call   418d30 <flatcc_builder_check_required@@Base>
  40a83e:	test   eax,eax
  40a840:	jne    40a861 <_start@@Base+0x65b1>
  40a842:	lea    rcx,[rip+0x16c67]        # 4214b0 <_IO_stdin_used@@Base+0x34b0>
  40a849:	mov    edx,0xed
  40a84e:	lea    rsi,[rip+0x13a23]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a855:	lea    rdi,[rip+0x13e24]        # 41e680 <_IO_stdin_used@@Base+0x680>
  40a85c:	call   4041f0 <__assert_fail@plt>
  40a861:	mov    rax,QWORD PTR [rbp-0x8]
  40a865:	mov    rdi,rax
  40a868:	call   418ddd <flatcc_builder_end_table@@Base>
  40a86d:	leave  
  40a86e:	ret    
  40a86f:	push   rbp
  40a870:	mov    rbp,rsp
  40a873:	sub    rsp,0x10
  40a877:	mov    QWORD PTR [rbp-0x8],rdi
  40a87b:	mov    rax,QWORD PTR [rbp-0x8]
  40a87f:	mov    esi,0x1
  40a884:	mov    rdi,rax
  40a887:	call   4182ce <flatcc_builder_start_table@@Base>
  40a88c:	leave  
  40a88d:	ret    
  40a88e:	push   rbp
  40a88f:	mov    rbp,rsp
  40a892:	sub    rsp,0x10
  40a896:	mov    QWORD PTR [rbp-0x8],rdi
  40a89a:	mov    rax,QWORD PTR [rbp-0x8]
  40a89e:	mov    edx,0x0
  40a8a3:	lea    rsi,[rip+0x13e84]        # 41e72e <_IO_stdin_used@@Base+0x72e>
  40a8aa:	mov    rdi,rax
  40a8ad:	call   418d30 <flatcc_builder_check_required@@Base>
  40a8b2:	test   eax,eax
  40a8b4:	jne    40a8d5 <_start@@Base+0x6625>
  40a8b6:	lea    rcx,[rip+0x17523]        # 421de0 <_IO_stdin_used@@Base+0x3de0>
  40a8bd:	mov    edx,0xef
  40a8c2:	lea    rsi,[rip+0x139af]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a8c9:	lea    rdi,[rip+0x13e60]        # 41e730 <_IO_stdin_used@@Base+0x730>
  40a8d0:	call   4041f0 <__assert_fail@plt>
  40a8d5:	mov    rax,QWORD PTR [rbp-0x8]
  40a8d9:	mov    rdi,rax
  40a8dc:	call   418ddd <flatcc_builder_end_table@@Base>
  40a8e1:	leave  
  40a8e2:	ret    
  40a8e3:	push   rbp
  40a8e4:	mov    rbp,rsp
  40a8e7:	sub    rsp,0x10
  40a8eb:	mov    QWORD PTR [rbp-0x8],rdi
  40a8ef:	mov    rax,QWORD PTR [rbp-0x8]
  40a8f3:	mov    esi,0xa
  40a8f8:	mov    rdi,rax
  40a8fb:	call   4182ce <flatcc_builder_start_table@@Base>
  40a900:	leave  
  40a901:	ret    
  40a902:	push   rbp
  40a903:	mov    rbp,rsp
  40a906:	sub    rsp,0x10
  40a90a:	mov    QWORD PTR [rbp-0x8],rdi
  40a90e:	mov    rax,QWORD PTR [rbp-0x8]
  40a912:	mov    edx,0x0
  40a917:	lea    rsi,[rip+0x13ea2]        # 41e7c0 <_IO_stdin_used@@Base+0x7c0>
  40a91e:	mov    rdi,rax
  40a921:	call   418d30 <flatcc_builder_check_required@@Base>
  40a926:	test   eax,eax
  40a928:	jne    40a949 <_start@@Base+0x6699>
  40a92a:	lea    rcx,[rip+0x174cf]        # 421e00 <_IO_stdin_used@@Base+0x3e00>
  40a931:	mov    edx,0xf1
  40a936:	lea    rsi,[rip+0x1393b]        # 41e278 <_IO_stdin_used@@Base+0x278>
  40a93d:	lea    rdi,[rip+0x13e84]        # 41e7c8 <_IO_stdin_used@@Base+0x7c8>
  40a944:	call   4041f0 <__assert_fail@plt>
  40a949:	mov    rax,QWORD PTR [rbp-0x8]
  40a94d:	mov    rdi,rax
  40a950:	call   418ddd <flatcc_builder_end_table@@Base>
  40a955:	leave  
  40a956:	ret    
  40a957:	push   rbp
  40a958:	mov    rbp,rsp
  40a95b:	mov    DWORD PTR [rbp-0x14],edi
  40a95e:	mov    BYTE PTR [rbp-0x8],0x1
  40a962:	mov    eax,DWORD PTR [rbp-0x14]
  40a965:	mov    DWORD PTR [rbp-0x4],eax
  40a968:	mov    rax,QWORD PTR [rbp-0x8]
  40a96c:	pop    rbp
  40a96d:	ret    
  40a96e:	push   rbp
  40a96f:	mov    rbp,rsp
  40a972:	mov    DWORD PTR [rbp-0x14],edi
  40a975:	mov    BYTE PTR [rbp-0x8],0x2
  40a979:	mov    eax,DWORD PTR [rbp-0x14]
  40a97c:	mov    DWORD PTR [rbp-0x4],eax
  40a97f:	mov    rax,QWORD PTR [rbp-0x8]
  40a983:	pop    rbp
  40a984:	ret    
  40a985:	push   rbp
  40a986:	mov    rbp,rsp
  40a989:	mov    DWORD PTR [rbp-0x14],edi
  40a98c:	mov    BYTE PTR [rbp-0x8],0x4
  40a990:	mov    eax,DWORD PTR [rbp-0x14]
  40a993:	mov    DWORD PTR [rbp-0x4],eax
  40a996:	mov    rax,QWORD PTR [rbp-0x8]
  40a99a:	pop    rbp
  40a99b:	ret    
  40a99c:	push   rbp
  40a99d:	mov    rbp,rsp
  40a9a0:	sub    rsp,0x10
  40a9a4:	mov    QWORD PTR [rbp-0x8],rdi
  40a9a8:	mov    rax,QWORD PTR [rbp-0x8]
  40a9ac:	mov    rdi,rax
  40a9af:	call   419ccd <flatcc_builder_start_union_vector@@Base>
  40a9b4:	leave  
  40a9b5:	ret    
  40a9b6:	push   rbp
  40a9b7:	mov    rbp,rsp
  40a9ba:	sub    rsp,0x10
  40a9be:	mov    QWORD PTR [rbp-0x8],rdi
  40a9c2:	mov    rax,QWORD PTR [rbp-0x8]
  40a9c6:	mov    rdi,rax
  40a9c9:	call   419d3d <flatcc_builder_end_union_vector@@Base>
  40a9ce:	leave  
  40a9cf:	ret    
  40a9d0:	push   rbp
  40a9d1:	mov    rbp,rsp
  40a9d4:	sub    rsp,0x10
  40a9d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a9dc:	mov    QWORD PTR [rbp-0x10],rsi
  40a9e0:	mov    rdx,QWORD PTR [rbp-0x10]
  40a9e4:	mov    rax,QWORD PTR [rbp-0x8]
  40a9e8:	mov    rsi,rdx
  40a9eb:	mov    rdi,rax
  40a9ee:	call   419fe0 <flatcc_builder_union_vector_push@@Base>
  40a9f3:	leave  
  40a9f4:	ret    
  40a9f5:	push   rbp
  40a9f6:	mov    rbp,rsp
  40a9f9:	mov    DWORD PTR [rbp-0x14],edi
  40a9fc:	mov    BYTE PTR [rbp-0x8],0x2
  40aa00:	mov    eax,DWORD PTR [rbp-0x14]
  40aa03:	mov    DWORD PTR [rbp-0x4],eax
  40aa06:	mov    rax,QWORD PTR [rbp-0x8]
  40aa0a:	pop    rbp
  40aa0b:	ret    
  40aa0c:	push   rbp
  40aa0d:	mov    rbp,rsp
  40aa10:	mov    DWORD PTR [rbp-0x14],edi
  40aa13:	mov    BYTE PTR [rbp-0x8],0x8
  40aa17:	mov    eax,DWORD PTR [rbp-0x14]
  40aa1a:	mov    DWORD PTR [rbp-0x4],eax
  40aa1d:	mov    rax,QWORD PTR [rbp-0x8]
  40aa21:	pop    rbp
  40aa22:	ret    
  40aa23:	push   rbp
  40aa24:	mov    rbp,rsp
  40aa27:	mov    DWORD PTR [rbp-0x14],edi
  40aa2a:	mov    BYTE PTR [rbp-0x8],0x9
  40aa2e:	mov    eax,DWORD PTR [rbp-0x14]
  40aa31:	mov    DWORD PTR [rbp-0x4],eax
  40aa34:	mov    rax,QWORD PTR [rbp-0x8]
  40aa38:	pop    rbp
  40aa39:	ret    
  40aa3a:	push   rbp
  40aa3b:	mov    rbp,rsp
  40aa3e:	mov    DWORD PTR [rbp-0x14],edi
  40aa41:	mov    BYTE PTR [rbp-0x8],0xb
  40aa45:	mov    eax,DWORD PTR [rbp-0x14]
  40aa48:	mov    DWORD PTR [rbp-0x4],eax
  40aa4b:	mov    rax,QWORD PTR [rbp-0x8]
  40aa4f:	pop    rbp
  40aa50:	ret    
  40aa51:	push   rbp
  40aa52:	mov    rbp,rsp
  40aa55:	sub    rsp,0x10
  40aa59:	mov    QWORD PTR [rbp-0x8],rdi
  40aa5d:	mov    QWORD PTR [rbp-0x10],rsi
  40aa61:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa65:	mov    rax,QWORD PTR [rbp-0x8]
  40aa69:	mov    rsi,rdx
  40aa6c:	mov    rdi,rax
  40aa6f:	call   419fe0 <flatcc_builder_union_vector_push@@Base>
  40aa74:	leave  
  40aa75:	ret    
  40aa76:	push   rbp
  40aa77:	mov    rbp,rsp
  40aa7a:	sub    rsp,0x10
  40aa7e:	mov    QWORD PTR [rbp-0x8],rdi
  40aa82:	mov    rax,QWORD PTR [rbp-0x8]
  40aa86:	mov    ecx,0x1
  40aa8b:	mov    edx,0x0
  40aa90:	mov    esi,0x0
  40aa95:	mov    rdi,rax
  40aa98:	call   41a47e <flatcc_builder_table_add@@Base>
  40aa9d:	leave  
  40aa9e:	ret    
  40aa9f:	push   rbp
  40aaa0:	mov    rbp,rsp
  40aaa3:	sub    rsp,0x20
  40aaa7:	mov    QWORD PTR [rbp-0x18],rdi
  40aaab:	mov    QWORD PTR [rbp-0x20],rsi
  40aaaf:	mov    rax,QWORD PTR [rbp-0x18]
  40aab3:	mov    rdi,rax
  40aab6:	call   40aa76 <_start@@Base+0x67c6>
  40aabb:	mov    QWORD PTR [rbp-0x8],rax
  40aabf:	cmp    QWORD PTR [rbp-0x8],0x0
  40aac4:	jne    40aacd <_start@@Base+0x681d>
  40aac6:	mov    eax,0xffffffff
  40aacb:	jmp    40aae5 <_start@@Base+0x6835>
  40aacd:	mov    rdx,QWORD PTR [rbp-0x20]
  40aad1:	mov    rax,QWORD PTR [rbp-0x8]
  40aad5:	mov    rsi,rdx
  40aad8:	mov    rdi,rax
  40aadb:	call   40a065 <_start@@Base+0x5db5>
  40aae0:	mov    eax,0x0
  40aae5:	leave  
  40aae6:	ret    
  40aae7:	push   rbp
  40aae8:	mov    rbp,rsp
  40aaeb:	sub    rsp,0x10
  40aaef:	mov    QWORD PTR [rbp-0x8],rdi
  40aaf3:	mov    QWORD PTR [rbp-0x10],rsi
  40aaf7:	mov    rax,QWORD PTR [rbp-0x8]
  40aafb:	mov    rdi,rax
  40aafe:	call   40a588 <_start@@Base+0x62d8>
  40ab03:	test   eax,eax
  40ab05:	jne    40ab1e <_start@@Base+0x686e>
  40ab07:	mov    rdx,QWORD PTR [rbp-0x10]
  40ab0b:	mov    rax,QWORD PTR [rbp-0x8]
  40ab0f:	mov    rsi,rdx
  40ab12:	mov    rdi,rax
  40ab15:	call   40aa9f <_start@@Base+0x67ef>
  40ab1a:	test   eax,eax
  40ab1c:	je     40ab25 <_start@@Base+0x6875>
  40ab1e:	mov    eax,0x0
  40ab23:	jmp    40ab31 <_start@@Base+0x6881>
  40ab25:	mov    rax,QWORD PTR [rbp-0x8]
  40ab29:	mov    rdi,rax
  40ab2c:	call   40a5a7 <_start@@Base+0x62f7>
  40ab31:	leave  
  40ab32:	ret    
  40ab33:	push   rbp
  40ab34:	mov    rbp,rsp
  40ab37:	sub    rsp,0x10
  40ab3b:	mov    QWORD PTR [rbp-0x8],rdi
  40ab3f:	mov    QWORD PTR [rbp-0x10],rsi
  40ab43:	mov    rax,QWORD PTR [rbp-0x8]
  40ab47:	lea    rsi,[rip+0x13626]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40ab4e:	mov    rdi,rax
  40ab51:	call   409db7 <_start@@Base+0x5b07>
  40ab56:	test   eax,eax
  40ab58:	je     40ab61 <_start@@Base+0x68b1>
  40ab5a:	mov    eax,0x0
  40ab5f:	jmp    40ab84 <_start@@Base+0x68d4>
  40ab61:	mov    rdx,QWORD PTR [rbp-0x10]
  40ab65:	mov    rax,QWORD PTR [rbp-0x8]
  40ab69:	mov    rsi,rdx
  40ab6c:	mov    rdi,rax
  40ab6f:	call   40aae7 <_start@@Base+0x6837>
  40ab74:	mov    edx,eax
  40ab76:	mov    rax,QWORD PTR [rbp-0x8]
  40ab7a:	mov    esi,edx
  40ab7c:	mov    rdi,rax
  40ab7f:	call   409e0f <_start@@Base+0x5b5f>
  40ab84:	leave  
  40ab85:	ret    
  40ab86:	push   rbp
  40ab87:	mov    rbp,rsp
  40ab8a:	sub    rsp,0x10
  40ab8e:	mov    QWORD PTR [rbp-0x8],rdi
  40ab92:	mov    QWORD PTR [rbp-0x10],rsi
  40ab96:	mov    rax,QWORD PTR [rbp-0x8]
  40ab9a:	lea    rsi,[rip+0x13cae]        # 41e84f <_IO_stdin_used@@Base+0x84f>
  40aba1:	mov    rdi,rax
  40aba4:	call   409db7 <_start@@Base+0x5b07>
  40aba9:	test   eax,eax
  40abab:	je     40abb4 <_start@@Base+0x6904>
  40abad:	mov    eax,0x0
  40abb2:	jmp    40abd7 <_start@@Base+0x6927>
  40abb4:	mov    rdx,QWORD PTR [rbp-0x10]
  40abb8:	mov    rax,QWORD PTR [rbp-0x8]
  40abbc:	mov    rsi,rdx
  40abbf:	mov    rdi,rax
  40abc2:	call   40aae7 <_start@@Base+0x6837>
  40abc7:	mov    edx,eax
  40abc9:	mov    rax,QWORD PTR [rbp-0x8]
  40abcd:	mov    esi,edx
  40abcf:	mov    rdi,rax
  40abd2:	call   409e0f <_start@@Base+0x5b5f>
  40abd7:	leave  
  40abd8:	ret    
  40abd9:	push   rbp
  40abda:	mov    rbp,rsp
  40abdd:	sub    rsp,0x20
  40abe1:	mov    QWORD PTR [rbp-0x18],rdi
  40abe5:	mov    eax,esi
  40abe7:	mov    BYTE PTR [rbp-0x1c],al
  40abea:	cmp    BYTE PTR [rbp-0x1c],0x2
  40abee:	jne    40abf7 <_start@@Base+0x6947>
  40abf0:	mov    eax,0x0
  40abf5:	jmp    40ac3b <_start@@Base+0x698b>
  40abf7:	mov    rax,QWORD PTR [rbp-0x18]
  40abfb:	mov    ecx,0x1
  40ac00:	mov    edx,0x1
  40ac05:	mov    esi,0x0
  40ac0a:	mov    rdi,rax
  40ac0d:	call   41a47e <flatcc_builder_table_add@@Base>
  40ac12:	mov    QWORD PTR [rbp-0x8],rax
  40ac16:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac1b:	jne    40ac24 <_start@@Base+0x6974>
  40ac1d:	mov    eax,0xffffffff
  40ac22:	jmp    40ac3b <_start@@Base+0x698b>
  40ac24:	movsx  edx,BYTE PTR [rbp-0x1c]
  40ac28:	mov    rax,QWORD PTR [rbp-0x8]
  40ac2c:	mov    esi,edx
  40ac2e:	mov    rdi,rax
  40ac31:	call   409e31 <_start@@Base+0x5b81>
  40ac36:	mov    eax,0x0
  40ac3b:	leave  
  40ac3c:	ret    
  40ac3d:	push   rbp
  40ac3e:	mov    rbp,rsp
  40ac41:	sub    rsp,0x20
  40ac45:	mov    QWORD PTR [rbp-0x18],rdi
  40ac49:	mov    eax,esi
  40ac4b:	mov    BYTE PTR [rbp-0x1c],al
  40ac4e:	cmp    BYTE PTR [rbp-0x1c],0x2
  40ac52:	jne    40ac5b <_start@@Base+0x69ab>
  40ac54:	mov    eax,0x0
  40ac59:	jmp    40ac9f <_start@@Base+0x69ef>
  40ac5b:	mov    rax,QWORD PTR [rbp-0x18]
  40ac5f:	mov    ecx,0x1
  40ac64:	mov    edx,0x1
  40ac69:	mov    esi,0x1
  40ac6e:	mov    rdi,rax
  40ac71:	call   41a47e <flatcc_builder_table_add@@Base>
  40ac76:	mov    QWORD PTR [rbp-0x8],rax
  40ac7a:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac7f:	jne    40ac88 <_start@@Base+0x69d8>
  40ac81:	mov    eax,0xffffffff
  40ac86:	jmp    40ac9f <_start@@Base+0x69ef>
  40ac88:	movsx  edx,BYTE PTR [rbp-0x1c]
  40ac8c:	mov    rax,QWORD PTR [rbp-0x8]
  40ac90:	mov    esi,edx
  40ac92:	mov    rdi,rax
  40ac95:	call   409e31 <_start@@Base+0x5b81>
  40ac9a:	mov    eax,0x0
  40ac9f:	leave  
  40aca0:	ret    
  40aca1:	push   rbp
  40aca2:	mov    rbp,rsp
  40aca5:	sub    rsp,0x20
  40aca9:	mov    QWORD PTR [rbp-0x18],rdi
  40acad:	mov    eax,esi
  40acaf:	mov    BYTE PTR [rbp-0x1c],al
  40acb2:	cmp    BYTE PTR [rbp-0x1c],0x2
  40acb6:	jne    40acbf <_start@@Base+0x6a0f>
  40acb8:	mov    eax,0x0
  40acbd:	jmp    40ad03 <_start@@Base+0x6a53>
  40acbf:	mov    rax,QWORD PTR [rbp-0x18]
  40acc3:	mov    ecx,0x1
  40acc8:	mov    edx,0x1
  40accd:	mov    esi,0x2
  40acd2:	mov    rdi,rax
  40acd5:	call   41a47e <flatcc_builder_table_add@@Base>
  40acda:	mov    QWORD PTR [rbp-0x8],rax
  40acde:	cmp    QWORD PTR [rbp-0x8],0x0
  40ace3:	jne    40acec <_start@@Base+0x6a3c>
  40ace5:	mov    eax,0xffffffff
  40acea:	jmp    40ad03 <_start@@Base+0x6a53>
  40acec:	movzx  edx,BYTE PTR [rbp-0x1c]
  40acf0:	mov    rax,QWORD PTR [rbp-0x8]
  40acf4:	mov    esi,edx
  40acf6:	mov    rdi,rax
  40acf9:	call   409866 <_start@@Base+0x55b6>
  40acfe:	mov    eax,0x0
  40ad03:	leave  
  40ad04:	ret    
  40ad05:	push   rbp
  40ad06:	mov    rbp,rsp
  40ad09:	sub    rsp,0x20
  40ad0d:	mov    QWORD PTR [rbp-0x18],rdi
  40ad11:	mov    eax,esi
  40ad13:	mov    BYTE PTR [rbp-0x1c],al
  40ad16:	cmp    BYTE PTR [rbp-0x1c],0x2
  40ad1a:	jne    40ad23 <_start@@Base+0x6a73>
  40ad1c:	mov    eax,0x0
  40ad21:	jmp    40ad67 <_start@@Base+0x6ab7>
  40ad23:	mov    rax,QWORD PTR [rbp-0x18]
  40ad27:	mov    ecx,0x1
  40ad2c:	mov    edx,0x1
  40ad31:	mov    esi,0x3
  40ad36:	mov    rdi,rax
  40ad39:	call   41a47e <flatcc_builder_table_add@@Base>
  40ad3e:	mov    QWORD PTR [rbp-0x8],rax
  40ad42:	cmp    QWORD PTR [rbp-0x8],0x0
  40ad47:	jne    40ad50 <_start@@Base+0x6aa0>
  40ad49:	mov    eax,0xffffffff
  40ad4e:	jmp    40ad67 <_start@@Base+0x6ab7>
  40ad50:	movzx  edx,BYTE PTR [rbp-0x1c]
  40ad54:	mov    rax,QWORD PTR [rbp-0x8]
  40ad58:	mov    esi,edx
  40ad5a:	mov    rdi,rax
  40ad5d:	call   409866 <_start@@Base+0x55b6>
  40ad62:	mov    eax,0x0
  40ad67:	leave  
  40ad68:	ret    
  40ad69:	push   rbp
  40ad6a:	mov    rbp,rsp
  40ad6d:	sub    rsp,0x20
  40ad71:	mov    QWORD PTR [rbp-0x8],rdi
  40ad75:	mov    eax,esi
  40ad77:	mov    esi,edx
  40ad79:	mov    edx,ecx
  40ad7b:	mov    ecx,r8d
  40ad7e:	mov    BYTE PTR [rbp-0xc],al
  40ad81:	mov    eax,esi
  40ad83:	mov    BYTE PTR [rbp-0x10],al
  40ad86:	mov    eax,edx
  40ad88:	mov    BYTE PTR [rbp-0x14],al
  40ad8b:	mov    eax,ecx
  40ad8d:	mov    BYTE PTR [rbp-0x18],al
  40ad90:	mov    rax,QWORD PTR [rbp-0x8]
  40ad94:	mov    rdi,rax
  40ad97:	call   40a5fc <_start@@Base+0x634c>
  40ad9c:	test   eax,eax
  40ad9e:	jne    40adf8 <_start@@Base+0x6b48>
  40ada0:	movsx  edx,BYTE PTR [rbp-0xc]
  40ada4:	mov    rax,QWORD PTR [rbp-0x8]
  40ada8:	mov    esi,edx
  40adaa:	mov    rdi,rax
  40adad:	call   40abd9 <_start@@Base+0x6929>
  40adb2:	test   eax,eax
  40adb4:	jne    40adf8 <_start@@Base+0x6b48>
  40adb6:	movsx  edx,BYTE PTR [rbp-0x10]
  40adba:	mov    rax,QWORD PTR [rbp-0x8]
  40adbe:	mov    esi,edx
  40adc0:	mov    rdi,rax
  40adc3:	call   40ac3d <_start@@Base+0x698d>
  40adc8:	test   eax,eax
  40adca:	jne    40adf8 <_start@@Base+0x6b48>
  40adcc:	movzx  edx,BYTE PTR [rbp-0x14]
  40add0:	mov    rax,QWORD PTR [rbp-0x8]
  40add4:	mov    esi,edx
  40add6:	mov    rdi,rax
  40add9:	call   40aca1 <_start@@Base+0x69f1>
  40adde:	test   eax,eax
  40ade0:	jne    40adf8 <_start@@Base+0x6b48>
  40ade2:	movzx  edx,BYTE PTR [rbp-0x18]
  40ade6:	mov    rax,QWORD PTR [rbp-0x8]
  40adea:	mov    esi,edx
  40adec:	mov    rdi,rax
  40adef:	call   40ad05 <_start@@Base+0x6a55>
  40adf4:	test   eax,eax
  40adf6:	je     40adff <_start@@Base+0x6b4f>
  40adf8:	mov    eax,0x0
  40adfd:	jmp    40ae0b <_start@@Base+0x6b5b>
  40adff:	mov    rax,QWORD PTR [rbp-0x8]
  40ae03:	mov    rdi,rax
  40ae06:	call   40a61b <_start@@Base+0x636b>
  40ae0b:	leave  
  40ae0c:	ret    
  40ae0d:	push   rbp
  40ae0e:	mov    rbp,rsp
  40ae11:	sub    rsp,0x20
  40ae15:	mov    QWORD PTR [rbp-0x18],rdi
  40ae19:	mov    DWORD PTR [rbp-0x1c],esi
  40ae1c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40ae20:	je     40ae4e <_start@@Base+0x6b9e>
  40ae22:	mov    rax,QWORD PTR [rbp-0x18]
  40ae26:	mov    esi,0x0
  40ae2b:	mov    rdi,rax
  40ae2e:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40ae33:	mov    QWORD PTR [rbp-0x8],rax
  40ae37:	cmp    QWORD PTR [rbp-0x8],0x0
  40ae3c:	je     40ae4e <_start@@Base+0x6b9e>
  40ae3e:	mov    rax,QWORD PTR [rbp-0x8]
  40ae42:	mov    edx,DWORD PTR [rbp-0x1c]
  40ae45:	mov    DWORD PTR [rax],edx
  40ae47:	mov    eax,0x0
  40ae4c:	jmp    40ae53 <_start@@Base+0x6ba3>
  40ae4e:	mov    eax,0xffffffff
  40ae53:	leave  
  40ae54:	ret    
  40ae55:	push   rbp
  40ae56:	mov    rbp,rsp
  40ae59:	sub    rsp,0x20
  40ae5d:	mov    QWORD PTR [rbp-0x18],rdi
  40ae61:	mov    QWORD PTR [rbp-0x20],rsi
  40ae65:	cmp    QWORD PTR [rbp-0x20],0x0
  40ae6a:	jne    40ae73 <_start@@Base+0x6bc3>
  40ae6c:	mov    eax,0x0
  40ae71:	jmp    40aeb8 <_start@@Base+0x6c08>
  40ae73:	mov    rax,QWORD PTR [rbp-0x18]
  40ae77:	mov    ecx,0x8
  40ae7c:	mov    edx,0x8
  40ae81:	mov    esi,0x1
  40ae86:	mov    rdi,rax
  40ae89:	call   41a47e <flatcc_builder_table_add@@Base>
  40ae8e:	mov    QWORD PTR [rbp-0x8],rax
  40ae92:	cmp    QWORD PTR [rbp-0x8],0x0
  40ae97:	jne    40aea0 <_start@@Base+0x6bf0>
  40ae99:	mov    eax,0xffffffff
  40ae9e:	jmp    40aeb8 <_start@@Base+0x6c08>
  40aea0:	mov    rdx,QWORD PTR [rbp-0x20]
  40aea4:	mov    rax,QWORD PTR [rbp-0x8]
  40aea8:	mov    rsi,rdx
  40aeab:	mov    rdi,rax
  40aeae:	call   409b66 <_start@@Base+0x58b6>
  40aeb3:	mov    eax,0x0
  40aeb8:	leave  
  40aeb9:	ret    
  40aeba:	push   rbp
  40aebb:	mov    rbp,rsp
  40aebe:	sub    rsp,0x20
  40aec2:	mov    QWORD PTR [rbp-0x18],rdi
  40aec6:	mov    eax,esi
  40aec8:	mov    WORD PTR [rbp-0x1c],ax
  40aecc:	cmp    WORD PTR [rbp-0x1c],0x0
  40aed1:	jne    40aeda <_start@@Base+0x6c2a>
  40aed3:	mov    eax,0x0
  40aed8:	jmp    40af1e <_start@@Base+0x6c6e>
  40aeda:	mov    rax,QWORD PTR [rbp-0x18]
  40aede:	mov    ecx,0x2
  40aee3:	mov    edx,0x2
  40aee8:	mov    esi,0x2
  40aeed:	mov    rdi,rax
  40aef0:	call   41a47e <flatcc_builder_table_add@@Base>
  40aef5:	mov    QWORD PTR [rbp-0x8],rax
  40aef9:	cmp    QWORD PTR [rbp-0x8],0x0
  40aefe:	jne    40af07 <_start@@Base+0x6c57>
  40af00:	mov    eax,0xffffffff
  40af05:	jmp    40af1e <_start@@Base+0x6c6e>
  40af07:	movzx  edx,WORD PTR [rbp-0x1c]
  40af0b:	mov    rax,QWORD PTR [rbp-0x8]
  40af0f:	mov    esi,edx
  40af11:	mov    rdi,rax
  40af14:	call   409a66 <_start@@Base+0x57b6>
  40af19:	mov    eax,0x0
  40af1e:	leave  
  40af1f:	ret    
  40af20:	push   rbp
  40af21:	mov    rbp,rsp
  40af24:	sub    rsp,0x20
  40af28:	mov    QWORD PTR [rbp-0x8],rdi
  40af2c:	mov    DWORD PTR [rbp-0xc],esi
  40af2f:	mov    QWORD PTR [rbp-0x18],rdx
  40af33:	mov    eax,ecx
  40af35:	mov    WORD PTR [rbp-0x10],ax
  40af39:	mov    rax,QWORD PTR [rbp-0x8]
  40af3d:	mov    rdi,rax
  40af40:	call   40a670 <_start@@Base+0x63c0>
  40af45:	test   eax,eax
  40af47:	jne    40af8b <_start@@Base+0x6cdb>
  40af49:	mov    rdx,QWORD PTR [rbp-0x18]
  40af4d:	mov    rax,QWORD PTR [rbp-0x8]
  40af51:	mov    rsi,rdx
  40af54:	mov    rdi,rax
  40af57:	call   40ae55 <_start@@Base+0x6ba5>
  40af5c:	test   eax,eax
  40af5e:	jne    40af8b <_start@@Base+0x6cdb>
  40af60:	mov    edx,DWORD PTR [rbp-0xc]
  40af63:	mov    rax,QWORD PTR [rbp-0x8]
  40af67:	mov    esi,edx
  40af69:	mov    rdi,rax
  40af6c:	call   40ae0d <_start@@Base+0x6b5d>
  40af71:	test   eax,eax
  40af73:	jne    40af8b <_start@@Base+0x6cdb>
  40af75:	movzx  edx,WORD PTR [rbp-0x10]
  40af79:	mov    rax,QWORD PTR [rbp-0x8]
  40af7d:	mov    esi,edx
  40af7f:	mov    rdi,rax
  40af82:	call   40aeba <_start@@Base+0x6c0a>
  40af87:	test   eax,eax
  40af89:	je     40af92 <_start@@Base+0x6ce2>
  40af8b:	mov    eax,0x0
  40af90:	jmp    40af9e <_start@@Base+0x6cee>
  40af92:	mov    rax,QWORD PTR [rbp-0x8]
  40af96:	mov    rdi,rax
  40af99:	call   40a68f <_start@@Base+0x63df>
  40af9e:	leave  
  40af9f:	ret    
  40afa0:	push   rbp
  40afa1:	mov    rbp,rsp
  40afa4:	sub    rsp,0x20
  40afa8:	mov    QWORD PTR [rbp-0x18],rdi
  40afac:	mov    QWORD PTR [rbp-0x20],rsi
  40afb0:	mov    eax,DWORD PTR [rbp-0x20]
  40afb3:	test   eax,eax
  40afb5:	je     40afbe <_start@@Base+0x6d0e>
  40afb7:	mov    eax,DWORD PTR [rbp-0x1c]
  40afba:	test   eax,eax
  40afbc:	jne    40afd6 <_start@@Base+0x6d26>
  40afbe:	mov    edx,DWORD PTR [rbp-0x20]
  40afc1:	mov    eax,DWORD PTR [rbp-0x1c]
  40afc4:	cmp    edx,eax
  40afc6:	jne    40afcf <_start@@Base+0x6d1f>
  40afc8:	mov    eax,0x0
  40afcd:	jmp    40b033 <_start@@Base+0x6d83>
  40afcf:	mov    eax,0xffffffff
  40afd4:	jmp    40b033 <_start@@Base+0x6d83>
  40afd6:	mov    rax,QWORD PTR [rbp-0x18]
  40afda:	mov    esi,0x2
  40afdf:	mov    rdi,rax
  40afe2:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40afe7:	mov    QWORD PTR [rbp-0x8],rax
  40afeb:	cmp    QWORD PTR [rbp-0x8],0x0
  40aff0:	jne    40aff9 <_start@@Base+0x6d49>
  40aff2:	mov    eax,0xffffffff
  40aff7:	jmp    40b033 <_start@@Base+0x6d83>
  40aff9:	mov    edx,DWORD PTR [rbp-0x20]
  40affc:	mov    rax,QWORD PTR [rbp-0x8]
  40b000:	mov    DWORD PTR [rax],edx
  40b002:	mov    rax,QWORD PTR [rbp-0x18]
  40b006:	mov    esi,0x3
  40b00b:	mov    rdi,rax
  40b00e:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b013:	mov    QWORD PTR [rbp-0x8],rax
  40b017:	cmp    QWORD PTR [rbp-0x8],0x0
  40b01c:	jne    40b025 <_start@@Base+0x6d75>
  40b01e:	mov    eax,0xffffffff
  40b023:	jmp    40b033 <_start@@Base+0x6d83>
  40b025:	mov    edx,DWORD PTR [rbp-0x1c]
  40b028:	mov    rax,QWORD PTR [rbp-0x8]
  40b02c:	mov    DWORD PTR [rax],edx
  40b02e:	mov    eax,0x0
  40b033:	leave  
  40b034:	ret    
  40b035:	push   rbp
  40b036:	mov    rbp,rsp
  40b039:	sub    rsp,0x10
  40b03d:	mov    QWORD PTR [rbp-0x8],rdi
  40b041:	mov    rax,QWORD PTR [rbp-0x8]
  40b045:	mov    ecx,0x10
  40b04a:	mov    edx,0x20
  40b04f:	mov    esi,0x0
  40b054:	mov    rdi,rax
  40b057:	call   41a47e <flatcc_builder_table_add@@Base>
  40b05c:	leave  
  40b05d:	ret    
  40b05e:	push   rbp
  40b05f:	mov    rbp,rsp
  40b062:	mov    QWORD PTR [rbp-0x8],rdi
  40b066:	mov    eax,0x0
  40b06b:	pop    rbp
  40b06c:	ret    
  40b06d:	push   rbp
  40b06e:	mov    rbp,rsp
  40b071:	sub    rsp,0x10
  40b075:	mov    QWORD PTR [rbp-0x8],rdi
  40b079:	mov    QWORD PTR [rbp-0x10],rsi
  40b07d:	mov    rdx,QWORD PTR [rbp-0x10]
  40b081:	mov    rax,QWORD PTR [rbp-0x8]
  40b085:	mov    r8d,0x10
  40b08b:	mov    ecx,0x20
  40b090:	mov    esi,0x0
  40b095:	mov    rdi,rax
  40b098:	call   41a5f7 <flatcc_builder_table_add_copy@@Base>
  40b09d:	test   rax,rax
  40b0a0:	jne    40b0a9 <_start@@Base+0x6df9>
  40b0a2:	mov    eax,0xffffffff
  40b0a7:	jmp    40b0ae <_start@@Base+0x6dfe>
  40b0a9:	mov    eax,0x0
  40b0ae:	leave  
  40b0af:	ret    
  40b0b0:	push   rbp
  40b0b1:	mov    rbp,rsp
  40b0b4:	sub    rsp,0x20
  40b0b8:	mov    QWORD PTR [rbp-0x18],rdi
  40b0bc:	mov    eax,esi
  40b0be:	mov    WORD PTR [rbp-0x1c],ax
  40b0c2:	cmp    WORD PTR [rbp-0x1c],0x64
  40b0c7:	jne    40b0d0 <_start@@Base+0x6e20>
  40b0c9:	mov    eax,0x0
  40b0ce:	jmp    40b114 <_start@@Base+0x6e64>
  40b0d0:	mov    rax,QWORD PTR [rbp-0x18]
  40b0d4:	mov    ecx,0x2
  40b0d9:	mov    edx,0x2
  40b0de:	mov    esi,0x2
  40b0e3:	mov    rdi,rax
  40b0e6:	call   41a47e <flatcc_builder_table_add@@Base>
  40b0eb:	mov    QWORD PTR [rbp-0x8],rax
  40b0ef:	cmp    QWORD PTR [rbp-0x8],0x0
  40b0f4:	jne    40b0fd <_start@@Base+0x6e4d>
  40b0f6:	mov    eax,0xffffffff
  40b0fb:	jmp    40b114 <_start@@Base+0x6e64>
  40b0fd:	movsx  edx,WORD PTR [rbp-0x1c]
  40b101:	mov    rax,QWORD PTR [rbp-0x8]
  40b105:	mov    esi,edx
  40b107:	mov    rdi,rax
  40b10a:	call   409b13 <_start@@Base+0x5863>
  40b10f:	mov    eax,0x0
  40b114:	leave  
  40b115:	ret    
  40b116:	push   rbp
  40b117:	mov    rbp,rsp
  40b11a:	sub    rsp,0x20
  40b11e:	mov    QWORD PTR [rbp-0x18],rdi
  40b122:	mov    eax,esi
  40b124:	mov    WORD PTR [rbp-0x1c],ax
  40b128:	mov    rax,QWORD PTR [rbp-0x18]
  40b12c:	mov    ecx,0x2
  40b131:	mov    edx,0x2
  40b136:	mov    esi,0x2
  40b13b:	mov    rdi,rax
  40b13e:	call   41a47e <flatcc_builder_table_add@@Base>
  40b143:	mov    QWORD PTR [rbp-0x8],rax
  40b147:	cmp    QWORD PTR [rbp-0x8],0x0
  40b14c:	jne    40b155 <_start@@Base+0x6ea5>
  40b14e:	mov    eax,0xffffffff
  40b153:	jmp    40b16c <_start@@Base+0x6ebc>
  40b155:	movsx  edx,WORD PTR [rbp-0x1c]
  40b159:	mov    rax,QWORD PTR [rbp-0x8]
  40b15d:	mov    esi,edx
  40b15f:	mov    rdi,rax
  40b162:	call   409b13 <_start@@Base+0x5863>
  40b167:	mov    eax,0x0
  40b16c:	leave  
  40b16d:	ret    
  40b16e:	push   rbp
  40b16f:	mov    rbp,rsp
  40b172:	sub    rsp,0x20
  40b176:	mov    QWORD PTR [rbp-0x18],rdi
  40b17a:	mov    eax,esi
  40b17c:	mov    WORD PTR [rbp-0x1c],ax
  40b180:	cmp    WORD PTR [rbp-0x1c],0x96
  40b186:	jne    40b18f <_start@@Base+0x6edf>
  40b188:	mov    eax,0x0
  40b18d:	jmp    40b1d3 <_start@@Base+0x6f23>
  40b18f:	mov    rax,QWORD PTR [rbp-0x18]
  40b193:	mov    ecx,0x2
  40b198:	mov    edx,0x2
  40b19d:	mov    esi,0x1
  40b1a2:	mov    rdi,rax
  40b1a5:	call   41a47e <flatcc_builder_table_add@@Base>
  40b1aa:	mov    QWORD PTR [rbp-0x8],rax
  40b1ae:	cmp    QWORD PTR [rbp-0x8],0x0
  40b1b3:	jne    40b1bc <_start@@Base+0x6f0c>
  40b1b5:	mov    eax,0xffffffff
  40b1ba:	jmp    40b1d3 <_start@@Base+0x6f23>
  40b1bc:	movsx  edx,WORD PTR [rbp-0x1c]
  40b1c0:	mov    rax,QWORD PTR [rbp-0x8]
  40b1c4:	mov    esi,edx
  40b1c6:	mov    rdi,rax
  40b1c9:	call   409b13 <_start@@Base+0x5863>
  40b1ce:	mov    eax,0x0
  40b1d3:	leave  
  40b1d4:	ret    
  40b1d5:	push   rbp
  40b1d6:	mov    rbp,rsp
  40b1d9:	sub    rsp,0x20
  40b1dd:	mov    QWORD PTR [rbp-0x18],rdi
  40b1e1:	mov    eax,esi
  40b1e3:	mov    WORD PTR [rbp-0x1c],ax
  40b1e7:	mov    rax,QWORD PTR [rbp-0x18]
  40b1eb:	mov    ecx,0x2
  40b1f0:	mov    edx,0x2
  40b1f5:	mov    esi,0x1
  40b1fa:	mov    rdi,rax
  40b1fd:	call   41a47e <flatcc_builder_table_add@@Base>
  40b202:	mov    QWORD PTR [rbp-0x8],rax
  40b206:	cmp    QWORD PTR [rbp-0x8],0x0
  40b20b:	jne    40b214 <_start@@Base+0x6f64>
  40b20d:	mov    eax,0xffffffff
  40b212:	jmp    40b22b <_start@@Base+0x6f7b>
  40b214:	movsx  edx,WORD PTR [rbp-0x1c]
  40b218:	mov    rax,QWORD PTR [rbp-0x8]
  40b21c:	mov    esi,edx
  40b21e:	mov    rdi,rax
  40b221:	call   409b13 <_start@@Base+0x5863>
  40b226:	mov    eax,0x0
  40b22b:	leave  
  40b22c:	ret    
  40b22d:	push   rbp
  40b22e:	mov    rbp,rsp
  40b231:	sub    rsp,0x20
  40b235:	mov    QWORD PTR [rbp-0x18],rdi
  40b239:	mov    DWORD PTR [rbp-0x1c],esi
  40b23c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b240:	je     40b26e <_start@@Base+0x6fbe>
  40b242:	mov    rax,QWORD PTR [rbp-0x18]
  40b246:	mov    esi,0x3
  40b24b:	mov    rdi,rax
  40b24e:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b253:	mov    QWORD PTR [rbp-0x8],rax
  40b257:	cmp    QWORD PTR [rbp-0x8],0x0
  40b25c:	je     40b26e <_start@@Base+0x6fbe>
  40b25e:	mov    rax,QWORD PTR [rbp-0x8]
  40b262:	mov    edx,DWORD PTR [rbp-0x1c]
  40b265:	mov    DWORD PTR [rax],edx
  40b267:	mov    eax,0x0
  40b26c:	jmp    40b273 <_start@@Base+0x6fc3>
  40b26e:	mov    eax,0xffffffff
  40b273:	leave  
  40b274:	ret    
  40b275:	push   rbp
  40b276:	mov    rbp,rsp
  40b279:	sub    rsp,0x10
  40b27d:	mov    QWORD PTR [rbp-0x8],rdi
  40b281:	mov    rax,QWORD PTR [rbp-0x8]
  40b285:	mov    rdi,rax
  40b288:	call   418213 <flatcc_builder_start_string@@Base>
  40b28d:	leave  
  40b28e:	ret    
  40b28f:	push   rbp
  40b290:	mov    rbp,rsp
  40b293:	sub    rsp,0x10
  40b297:	mov    QWORD PTR [rbp-0x8],rdi
  40b29b:	mov    rax,QWORD PTR [rbp-0x8]
  40b29f:	mov    rdi,rax
  40b2a2:	call   41a396 <flatcc_builder_end_string@@Base>
  40b2a7:	mov    edx,eax
  40b2a9:	mov    rax,QWORD PTR [rbp-0x8]
  40b2ad:	mov    esi,edx
  40b2af:	mov    rdi,rax
  40b2b2:	call   40b22d <_start@@Base+0x6f7d>
  40b2b7:	leave  
  40b2b8:	ret    
  40b2b9:	push   rbp
  40b2ba:	mov    rbp,rsp
  40b2bd:	sub    rsp,0x10
  40b2c1:	mov    QWORD PTR [rbp-0x8],rdi
  40b2c5:	mov    QWORD PTR [rbp-0x10],rsi
  40b2c9:	mov    rdx,QWORD PTR [rbp-0x10]
  40b2cd:	mov    rax,QWORD PTR [rbp-0x8]
  40b2d1:	mov    rsi,rdx
  40b2d4:	mov    rdi,rax
  40b2d7:	call   41a31b <flatcc_builder_create_string_str@@Base>
  40b2dc:	mov    edx,eax
  40b2de:	mov    rax,QWORD PTR [rbp-0x8]
  40b2e2:	mov    esi,edx
  40b2e4:	mov    rdi,rax
  40b2e7:	call   40b22d <_start@@Base+0x6f7d>
  40b2ec:	leave  
  40b2ed:	ret    
  40b2ee:	push   rbp
  40b2ef:	mov    rbp,rsp
  40b2f2:	sub    rsp,0x20
  40b2f6:	mov    QWORD PTR [rbp-0x8],rdi
  40b2fa:	mov    QWORD PTR [rbp-0x10],rsi
  40b2fe:	mov    QWORD PTR [rbp-0x18],rdx
  40b302:	mov    rdx,QWORD PTR [rbp-0x18]
  40b306:	mov    rcx,QWORD PTR [rbp-0x10]
  40b30a:	mov    rax,QWORD PTR [rbp-0x8]
  40b30e:	mov    rsi,rcx
  40b311:	mov    rdi,rax
  40b314:	call   41a353 <flatcc_builder_create_string_strn@@Base>
  40b319:	mov    edx,eax
  40b31b:	mov    rax,QWORD PTR [rbp-0x8]
  40b31f:	mov    esi,edx
  40b321:	mov    rdi,rax
  40b324:	call   40b22d <_start@@Base+0x6f7d>
  40b329:	leave  
  40b32a:	ret    
  40b32b:	push   rbp
  40b32c:	mov    rbp,rsp
  40b32f:	sub    rsp,0x10
  40b333:	mov    QWORD PTR [rbp-0x8],rdi
  40b337:	mov    QWORD PTR [rbp-0x10],rsi
  40b33b:	mov    rdx,QWORD PTR [rbp-0x10]
  40b33f:	mov    rax,QWORD PTR [rbp-0x8]
  40b343:	mov    rsi,rdx
  40b346:	mov    rdi,rax
  40b349:	call   409cdf <_start@@Base+0x5a2f>
  40b34e:	mov    edx,eax
  40b350:	mov    rax,QWORD PTR [rbp-0x8]
  40b354:	mov    esi,edx
  40b356:	mov    rdi,rax
  40b359:	call   40b22d <_start@@Base+0x6f7d>
  40b35e:	leave  
  40b35f:	ret    
  40b360:	push   rbp
  40b361:	mov    rbp,rsp
  40b364:	sub    rsp,0x20
  40b368:	mov    QWORD PTR [rbp-0x8],rdi
  40b36c:	mov    QWORD PTR [rbp-0x10],rsi
  40b370:	mov    QWORD PTR [rbp-0x18],rdx
  40b374:	mov    QWORD PTR [rbp-0x20],rcx
  40b378:	mov    rcx,QWORD PTR [rbp-0x20]
  40b37c:	mov    rdx,QWORD PTR [rbp-0x18]
  40b380:	mov    rsi,QWORD PTR [rbp-0x10]
  40b384:	mov    rax,QWORD PTR [rbp-0x8]
  40b388:	mov    rdi,rax
  40b38b:	call   409d13 <_start@@Base+0x5a63>
  40b390:	mov    edx,eax
  40b392:	mov    rax,QWORD PTR [rbp-0x8]
  40b396:	mov    esi,edx
  40b398:	mov    rdi,rax
  40b39b:	call   40b22d <_start@@Base+0x6f7d>
  40b3a0:	leave  
  40b3a1:	ret    
  40b3a2:	push   rbp
  40b3a3:	mov    rbp,rsp
  40b3a6:	sub    rsp,0x20
  40b3aa:	mov    QWORD PTR [rbp-0x8],rdi
  40b3ae:	mov    QWORD PTR [rbp-0x10],rsi
  40b3b2:	mov    QWORD PTR [rbp-0x18],rdx
  40b3b6:	mov    rdx,QWORD PTR [rbp-0x18]
  40b3ba:	mov    rcx,QWORD PTR [rbp-0x10]
  40b3be:	mov    rax,QWORD PTR [rbp-0x8]
  40b3c2:	mov    rsi,rcx
  40b3c5:	mov    rdi,rax
  40b3c8:	call   417d07 <flatcc_builder_append_string@@Base>
  40b3cd:	leave  
  40b3ce:	ret    
  40b3cf:	push   rbp
  40b3d0:	mov    rbp,rsp
  40b3d3:	sub    rsp,0x10
  40b3d7:	mov    QWORD PTR [rbp-0x8],rdi
  40b3db:	mov    QWORD PTR [rbp-0x10],rsi
  40b3df:	mov    rdx,QWORD PTR [rbp-0x10]
  40b3e3:	mov    rax,QWORD PTR [rbp-0x8]
  40b3e7:	mov    rsi,rdx
  40b3ea:	mov    rdi,rax
  40b3ed:	call   417d8f <flatcc_builder_append_string_str@@Base>
  40b3f2:	leave  
  40b3f3:	ret    
  40b3f4:	push   rbp
  40b3f5:	mov    rbp,rsp
  40b3f8:	sub    rsp,0x20
  40b3fc:	mov    QWORD PTR [rbp-0x8],rdi
  40b400:	mov    QWORD PTR [rbp-0x10],rsi
  40b404:	mov    QWORD PTR [rbp-0x18],rdx
  40b408:	mov    rdx,QWORD PTR [rbp-0x18]
  40b40c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b410:	mov    rax,QWORD PTR [rbp-0x8]
  40b414:	mov    rsi,rcx
  40b417:	mov    rdi,rax
  40b41a:	call   417dc7 <flatcc_builder_append_string_strn@@Base>
  40b41f:	leave  
  40b420:	ret    
  40b421:	push   rbp
  40b422:	mov    rbp,rsp
  40b425:	sub    rsp,0x10
  40b429:	mov    QWORD PTR [rbp-0x8],rdi
  40b42d:	mov    rax,QWORD PTR [rbp-0x8]
  40b431:	mov    rdi,rax
  40b434:	call   41a463 <flatcc_builder_string_len@@Base>
  40b439:	leave  
  40b43a:	ret    
  40b43b:	push   rbp
  40b43c:	mov    rbp,rsp
  40b43f:	sub    rsp,0x10
  40b443:	mov    QWORD PTR [rbp-0x8],rdi
  40b447:	mov    QWORD PTR [rbp-0x10],rsi
  40b44b:	mov    rdx,QWORD PTR [rbp-0x10]
  40b44f:	mov    rax,QWORD PTR [rbp-0x8]
  40b453:	mov    rsi,rdx
  40b456:	mov    rdi,rax
  40b459:	call   417c88 <flatcc_builder_extend_string@@Base>
  40b45e:	leave  
  40b45f:	ret    
  40b460:	push   rbp
  40b461:	mov    rbp,rsp
  40b464:	sub    rsp,0x10
  40b468:	mov    QWORD PTR [rbp-0x8],rdi
  40b46c:	mov    rax,QWORD PTR [rbp-0x8]
  40b470:	mov    rdi,rax
  40b473:	call   41a44d <flatcc_builder_string_edit@@Base>
  40b478:	leave  
  40b479:	ret    
  40b47a:	push   rbp
  40b47b:	mov    rbp,rsp
  40b47e:	sub    rsp,0x10
  40b482:	mov    QWORD PTR [rbp-0x8],rdi
  40b486:	mov    QWORD PTR [rbp-0x10],rsi
  40b48a:	mov    rdx,QWORD PTR [rbp-0x10]
  40b48e:	mov    rax,QWORD PTR [rbp-0x8]
  40b492:	mov    rsi,rdx
  40b495:	mov    rdi,rax
  40b498:	call   417fb6 <flatcc_builder_truncate_string@@Base>
  40b49d:	leave  
  40b49e:	ret    
  40b49f:	push   rbp
  40b4a0:	mov    rbp,rsp
  40b4a3:	sub    rsp,0x20
  40b4a7:	mov    QWORD PTR [rbp-0x18],rdi
  40b4ab:	mov    eax,esi
  40b4ad:	mov    BYTE PTR [rbp-0x1c],al
  40b4b0:	cmp    BYTE PTR [rbp-0x1c],0x8
  40b4b4:	jne    40b4bd <_start@@Base+0x720d>
  40b4b6:	mov    eax,0x0
  40b4bb:	jmp    40b501 <_start@@Base+0x7251>
  40b4bd:	mov    rax,QWORD PTR [rbp-0x18]
  40b4c1:	mov    ecx,0x1
  40b4c6:	mov    edx,0x1
  40b4cb:	mov    esi,0x6
  40b4d0:	mov    rdi,rax
  40b4d3:	call   41a47e <flatcc_builder_table_add@@Base>
  40b4d8:	mov    QWORD PTR [rbp-0x8],rax
  40b4dc:	cmp    QWORD PTR [rbp-0x8],0x0
  40b4e1:	jne    40b4ea <_start@@Base+0x723a>
  40b4e3:	mov    eax,0xffffffff
  40b4e8:	jmp    40b501 <_start@@Base+0x7251>
  40b4ea:	movsx  edx,BYTE PTR [rbp-0x1c]
  40b4ee:	mov    rax,QWORD PTR [rbp-0x8]
  40b4f2:	mov    esi,edx
  40b4f4:	mov    rdi,rax
  40b4f7:	call   409e31 <_start@@Base+0x5b81>
  40b4fc:	mov    eax,0x0
  40b501:	leave  
  40b502:	ret    
  40b503:	push   rbp
  40b504:	mov    rbp,rsp
  40b507:	sub    rsp,0x20
  40b50b:	mov    QWORD PTR [rbp-0x18],rdi
  40b50f:	mov    eax,esi
  40b511:	mov    BYTE PTR [rbp-0x1c],al
  40b514:	mov    rax,QWORD PTR [rbp-0x18]
  40b518:	mov    ecx,0x1
  40b51d:	mov    edx,0x1
  40b522:	mov    esi,0x6
  40b527:	mov    rdi,rax
  40b52a:	call   41a47e <flatcc_builder_table_add@@Base>
  40b52f:	mov    QWORD PTR [rbp-0x8],rax
  40b533:	cmp    QWORD PTR [rbp-0x8],0x0
  40b538:	jne    40b541 <_start@@Base+0x7291>
  40b53a:	mov    eax,0xffffffff
  40b53f:	jmp    40b558 <_start@@Base+0x72a8>
  40b541:	movsx  edx,BYTE PTR [rbp-0x1c]
  40b545:	mov    rax,QWORD PTR [rbp-0x8]
  40b549:	mov    esi,edx
  40b54b:	mov    rdi,rax
  40b54e:	call   409e31 <_start@@Base+0x5b81>
  40b553:	mov    eax,0x0
  40b558:	leave  
  40b559:	ret    
  40b55a:	push   rbp
  40b55b:	mov    rbp,rsp
  40b55e:	sub    rsp,0x20
  40b562:	mov    QWORD PTR [rbp-0x18],rdi
  40b566:	mov    DWORD PTR [rbp-0x1c],esi
  40b569:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b56d:	je     40b59b <_start@@Base+0x72eb>
  40b56f:	mov    rax,QWORD PTR [rbp-0x18]
  40b573:	mov    esi,0x5
  40b578:	mov    rdi,rax
  40b57b:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b580:	mov    QWORD PTR [rbp-0x8],rax
  40b584:	cmp    QWORD PTR [rbp-0x8],0x0
  40b589:	je     40b59b <_start@@Base+0x72eb>
  40b58b:	mov    rax,QWORD PTR [rbp-0x8]
  40b58f:	mov    edx,DWORD PTR [rbp-0x1c]
  40b592:	mov    DWORD PTR [rax],edx
  40b594:	mov    eax,0x0
  40b599:	jmp    40b5a0 <_start@@Base+0x72f0>
  40b59b:	mov    eax,0xffffffff
  40b5a0:	leave  
  40b5a1:	ret    
  40b5a2:	push   rbp
  40b5a3:	mov    rbp,rsp
  40b5a6:	sub    rsp,0x20
  40b5aa:	mov    QWORD PTR [rbp-0x8],rdi
  40b5ae:	mov    QWORD PTR [rbp-0x10],rsi
  40b5b2:	mov    QWORD PTR [rbp-0x18],rdx
  40b5b6:	mov    rdx,QWORD PTR [rbp-0x18]
  40b5ba:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5be:	mov    rax,QWORD PTR [rbp-0x8]
  40b5c2:	mov    rsi,rcx
  40b5c5:	mov    rdi,rax
  40b5c8:	call   40988e <_start@@Base+0x55de>
  40b5cd:	mov    edx,eax
  40b5cf:	mov    rax,QWORD PTR [rbp-0x8]
  40b5d3:	mov    esi,edx
  40b5d5:	mov    rdi,rax
  40b5d8:	call   40b55a <_start@@Base+0x72aa>
  40b5dd:	leave  
  40b5de:	ret    
  40b5df:	push   rbp
  40b5e0:	mov    rbp,rsp
  40b5e3:	sub    rsp,0x20
  40b5e7:	mov    QWORD PTR [rbp-0x18],rdi
  40b5eb:	mov    DWORD PTR [rbp-0x1c],esi
  40b5ee:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b5f2:	je     40b620 <_start@@Base+0x7370>
  40b5f4:	mov    rax,QWORD PTR [rbp-0x18]
  40b5f8:	mov    esi,0xb
  40b5fd:	mov    rdi,rax
  40b600:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b605:	mov    QWORD PTR [rbp-0x8],rax
  40b609:	cmp    QWORD PTR [rbp-0x8],0x0
  40b60e:	je     40b620 <_start@@Base+0x7370>
  40b610:	mov    rax,QWORD PTR [rbp-0x8]
  40b614:	mov    edx,DWORD PTR [rbp-0x1c]
  40b617:	mov    DWORD PTR [rax],edx
  40b619:	mov    eax,0x0
  40b61e:	jmp    40b625 <_start@@Base+0x7375>
  40b620:	mov    eax,0xffffffff
  40b625:	leave  
  40b626:	ret    
  40b627:	push   rbp
  40b628:	mov    rbp,rsp
  40b62b:	sub    rsp,0x10
  40b62f:	mov    QWORD PTR [rbp-0x8],rdi
  40b633:	mov    rax,QWORD PTR [rbp-0x8]
  40b637:	mov    rdi,rax
  40b63a:	call   418122 <flatcc_builder_start_offset_vector@@Base>
  40b63f:	leave  
  40b640:	ret    
  40b641:	push   rbp
  40b642:	mov    rbp,rsp
  40b645:	sub    rsp,0x10
  40b649:	mov    QWORD PTR [rbp-0x8],rdi
  40b64d:	mov    rax,QWORD PTR [rbp-0x8]
  40b651:	mov    rdi,rax
  40b654:	call   41971f <flatcc_builder_end_offset_vector@@Base>
  40b659:	mov    edx,eax
  40b65b:	mov    rax,QWORD PTR [rbp-0x8]
  40b65f:	mov    esi,edx
  40b661:	mov    rdi,rax
  40b664:	call   40b5df <_start@@Base+0x732f>
  40b669:	leave  
  40b66a:	ret    
  40b66b:	push   rbp
  40b66c:	mov    rbp,rsp
  40b66f:	sub    rsp,0x10
  40b673:	mov    QWORD PTR [rbp-0x8],rdi
  40b677:	mov    QWORD PTR [rbp-0x10],rsi
  40b67b:	mov    rdx,QWORD PTR [rbp-0x10]
  40b67f:	mov    rax,QWORD PTR [rbp-0x8]
  40b683:	mov    rsi,rdx
  40b686:	mov    rdi,rax
  40b689:	call   417b01 <flatcc_builder_extend_offset_vector@@Base>
  40b68e:	leave  
  40b68f:	ret    
  40b690:	push   rbp
  40b691:	mov    rbp,rsp
  40b694:	sub    rsp,0x20
  40b698:	mov    QWORD PTR [rbp-0x8],rdi
  40b69c:	mov    QWORD PTR [rbp-0x10],rsi
  40b6a0:	mov    QWORD PTR [rbp-0x18],rdx
  40b6a4:	mov    rdx,QWORD PTR [rbp-0x18]
  40b6a8:	mov    rcx,QWORD PTR [rbp-0x10]
  40b6ac:	mov    rax,QWORD PTR [rbp-0x8]
  40b6b0:	mov    rsi,rcx
  40b6b3:	mov    rdi,rax
  40b6b6:	call   417bfb <flatcc_builder_append_offset_vector@@Base>
  40b6bb:	leave  
  40b6bc:	ret    
  40b6bd:	push   rbp
  40b6be:	mov    rbp,rsp
  40b6c1:	sub    rsp,0x10
  40b6c5:	mov    QWORD PTR [rbp-0x8],rdi
  40b6c9:	mov    QWORD PTR [rbp-0x10],rsi
  40b6cd:	mov    rdx,QWORD PTR [rbp-0x10]
  40b6d1:	mov    rax,QWORD PTR [rbp-0x8]
  40b6d5:	mov    rsi,rdx
  40b6d8:	mov    rdi,rax
  40b6db:	call   417ee0 <flatcc_builder_truncate_offset_vector@@Base>
  40b6e0:	leave  
  40b6e1:	ret    
  40b6e2:	push   rbp
  40b6e3:	mov    rbp,rsp
  40b6e6:	sub    rsp,0x10
  40b6ea:	mov    QWORD PTR [rbp-0x8],rdi
  40b6ee:	mov    rax,QWORD PTR [rbp-0x8]
  40b6f2:	mov    rdi,rax
  40b6f5:	call   419836 <flatcc_builder_offset_vector_edit@@Base>
  40b6fa:	leave  
  40b6fb:	ret    
  40b6fc:	push   rbp
  40b6fd:	mov    rbp,rsp
  40b700:	sub    rsp,0x10
  40b704:	mov    QWORD PTR [rbp-0x8],rdi
  40b708:	mov    rax,QWORD PTR [rbp-0x8]
  40b70c:	mov    rdi,rax
  40b70f:	call   41984c <flatcc_builder_offset_vector_count@@Base>
  40b714:	leave  
  40b715:	ret    
  40b716:	push   rbp
  40b717:	mov    rbp,rsp
  40b71a:	sub    rsp,0x10
  40b71e:	mov    QWORD PTR [rbp-0x8],rdi
  40b722:	mov    DWORD PTR [rbp-0xc],esi
  40b725:	cmp    DWORD PTR [rbp-0xc],0x0
  40b729:	je     40b73e <_start@@Base+0x748e>
  40b72b:	mov    edx,DWORD PTR [rbp-0xc]
  40b72e:	mov    rax,QWORD PTR [rbp-0x8]
  40b732:	mov    esi,edx
  40b734:	mov    rdi,rax
  40b737:	call   417b54 <flatcc_builder_offset_vector_push@@Base>
  40b73c:	jmp    40b743 <_start@@Base+0x7493>
  40b73e:	mov    eax,0x0
  40b743:	leave  
  40b744:	ret    
  40b745:	push   rbp
  40b746:	mov    rbp,rsp
  40b749:	sub    rsp,0x10
  40b74d:	mov    QWORD PTR [rbp-0x8],rdi
  40b751:	mov    rax,QWORD PTR [rbp-0x8]
  40b755:	mov    rdi,rax
  40b758:	call   40a758 <_start@@Base+0x64a8>
  40b75d:	leave  
  40b75e:	ret    
  40b75f:	push   rbp
  40b760:	mov    rbp,rsp
  40b763:	sub    rsp,0x10
  40b767:	mov    QWORD PTR [rbp-0x8],rdi
  40b76b:	mov    rax,QWORD PTR [rbp-0x8]
  40b76f:	mov    rdi,rax
  40b772:	call   40a777 <_start@@Base+0x64c7>
  40b777:	mov    edx,eax
  40b779:	mov    rax,QWORD PTR [rbp-0x8]
  40b77d:	mov    esi,edx
  40b77f:	mov    rdi,rax
  40b782:	call   40b716 <_start@@Base+0x7466>
  40b787:	leave  
  40b788:	ret    
  40b789:	push   rbp
  40b78a:	mov    rbp,rsp
  40b78d:	sub    rsp,0x20
  40b791:	mov    QWORD PTR [rbp-0x18],rdi
  40b795:	mov    DWORD PTR [rbp-0x1c],esi
  40b798:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b79c:	je     40b7ca <_start@@Base+0x751a>
  40b79e:	mov    rax,QWORD PTR [rbp-0x18]
  40b7a2:	mov    esi,0xa
  40b7a7:	mov    rdi,rax
  40b7aa:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b7af:	mov    QWORD PTR [rbp-0x8],rax
  40b7b3:	cmp    QWORD PTR [rbp-0x8],0x0
  40b7b8:	je     40b7ca <_start@@Base+0x751a>
  40b7ba:	mov    rax,QWORD PTR [rbp-0x8]
  40b7be:	mov    edx,DWORD PTR [rbp-0x1c]
  40b7c1:	mov    DWORD PTR [rax],edx
  40b7c3:	mov    eax,0x0
  40b7c8:	jmp    40b7cf <_start@@Base+0x751f>
  40b7ca:	mov    eax,0xffffffff
  40b7cf:	leave  
  40b7d0:	ret    
  40b7d1:	push   rbp
  40b7d2:	mov    rbp,rsp
  40b7d5:	sub    rsp,0x10
  40b7d9:	mov    QWORD PTR [rbp-0x8],rdi
  40b7dd:	mov    rax,QWORD PTR [rbp-0x8]
  40b7e1:	mov    rdi,rax
  40b7e4:	call   418122 <flatcc_builder_start_offset_vector@@Base>
  40b7e9:	leave  
  40b7ea:	ret    
  40b7eb:	push   rbp
  40b7ec:	mov    rbp,rsp
  40b7ef:	sub    rsp,0x10
  40b7f3:	mov    QWORD PTR [rbp-0x8],rdi
  40b7f7:	mov    rax,QWORD PTR [rbp-0x8]
  40b7fb:	mov    rdi,rax
  40b7fe:	call   41971f <flatcc_builder_end_offset_vector@@Base>
  40b803:	mov    edx,eax
  40b805:	mov    rax,QWORD PTR [rbp-0x8]
  40b809:	mov    esi,edx
  40b80b:	mov    rdi,rax
  40b80e:	call   40b789 <_start@@Base+0x74d9>
  40b813:	leave  
  40b814:	ret    
  40b815:	push   rbp
  40b816:	mov    rbp,rsp
  40b819:	sub    rsp,0x20
  40b81d:	mov    QWORD PTR [rbp-0x8],rdi
  40b821:	mov    QWORD PTR [rbp-0x10],rsi
  40b825:	mov    QWORD PTR [rbp-0x18],rdx
  40b829:	mov    rdx,QWORD PTR [rbp-0x18]
  40b82d:	mov    rcx,QWORD PTR [rbp-0x10]
  40b831:	mov    rax,QWORD PTR [rbp-0x8]
  40b835:	mov    rsi,rcx
  40b838:	mov    rdi,rax
  40b83b:	call   418192 <flatcc_builder_create_offset_vector@@Base>
  40b840:	mov    edx,eax
  40b842:	mov    rax,QWORD PTR [rbp-0x8]
  40b846:	mov    esi,edx
  40b848:	mov    rdi,rax
  40b84b:	call   40b789 <_start@@Base+0x74d9>
  40b850:	leave  
  40b851:	ret    
  40b852:	push   rbp
  40b853:	mov    rbp,rsp
  40b856:	sub    rsp,0x10
  40b85a:	mov    QWORD PTR [rbp-0x8],rdi
  40b85e:	mov    QWORD PTR [rbp-0x10],rsi
  40b862:	mov    rdx,QWORD PTR [rbp-0x10]
  40b866:	mov    rax,QWORD PTR [rbp-0x8]
  40b86a:	mov    rsi,rdx
  40b86d:	mov    rdi,rax
  40b870:	call   409cdf <_start@@Base+0x5a2f>
  40b875:	mov    edx,eax
  40b877:	mov    rax,QWORD PTR [rbp-0x8]
  40b87b:	mov    esi,edx
  40b87d:	mov    rdi,rax
  40b880:	call   409d88 <_start@@Base+0x5ad8>
  40b885:	leave  
  40b886:	ret    
  40b887:	push   rbp
  40b888:	mov    rbp,rsp
  40b88b:	sub    rsp,0x20
  40b88f:	mov    QWORD PTR [rbp-0x8],rdi
  40b893:	mov    QWORD PTR [rbp-0x10],rsi
  40b897:	mov    QWORD PTR [rbp-0x18],rdx
  40b89b:	mov    QWORD PTR [rbp-0x20],rcx
  40b89f:	mov    rcx,QWORD PTR [rbp-0x20]
  40b8a3:	mov    rdx,QWORD PTR [rbp-0x18]
  40b8a7:	mov    rsi,QWORD PTR [rbp-0x10]
  40b8ab:	mov    rax,QWORD PTR [rbp-0x8]
  40b8af:	mov    rdi,rax
  40b8b2:	call   409d13 <_start@@Base+0x5a63>
  40b8b7:	mov    edx,eax
  40b8b9:	mov    rax,QWORD PTR [rbp-0x8]
  40b8bd:	mov    esi,edx
  40b8bf:	mov    rdi,rax
  40b8c2:	call   409d88 <_start@@Base+0x5ad8>
  40b8c7:	leave  
  40b8c8:	ret    
  40b8c9:	push   rbp
  40b8ca:	mov    rbp,rsp
  40b8cd:	sub    rsp,0x20
  40b8d1:	mov    QWORD PTR [rbp-0x18],rdi
  40b8d5:	mov    DWORD PTR [rbp-0x1c],esi
  40b8d8:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b8dc:	je     40b90a <_start@@Base+0x765a>
  40b8de:	mov    rax,QWORD PTR [rbp-0x18]
  40b8e2:	mov    esi,0x18
  40b8e7:	mov    rdi,rax
  40b8ea:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40b8ef:	mov    QWORD PTR [rbp-0x8],rax
  40b8f3:	cmp    QWORD PTR [rbp-0x8],0x0
  40b8f8:	je     40b90a <_start@@Base+0x765a>
  40b8fa:	mov    rax,QWORD PTR [rbp-0x8]
  40b8fe:	mov    edx,DWORD PTR [rbp-0x1c]
  40b901:	mov    DWORD PTR [rax],edx
  40b903:	mov    eax,0x0
  40b908:	jmp    40b90f <_start@@Base+0x765f>
  40b90a:	mov    eax,0xffffffff
  40b90f:	leave  
  40b910:	ret    
  40b911:	push   rbp
  40b912:	mov    rbp,rsp
  40b915:	sub    rsp,0x10
  40b919:	mov    QWORD PTR [rbp-0x8],rdi
  40b91d:	mov    rax,QWORD PTR [rbp-0x8]
  40b921:	mov    rdi,rax
  40b924:	call   409919 <_start@@Base+0x5669>
  40b929:	leave  
  40b92a:	ret    
  40b92b:	push   rbp
  40b92c:	mov    rbp,rsp
  40b92f:	sub    rsp,0x10
  40b933:	mov    QWORD PTR [rbp-0x8],rdi
  40b937:	mov    rax,QWORD PTR [rbp-0x8]
  40b93b:	mov    rdi,rax
  40b93e:	call   409942 <_start@@Base+0x5692>
  40b943:	mov    edx,eax
  40b945:	mov    rax,QWORD PTR [rbp-0x8]
  40b949:	mov    esi,edx
  40b94b:	mov    rdi,rax
  40b94e:	call   40b8c9 <_start@@Base+0x7619>
  40b953:	leave  
  40b954:	ret    
  40b955:	push   rbp
  40b956:	mov    rbp,rsp
  40b959:	sub    rsp,0x20
  40b95d:	mov    QWORD PTR [rbp-0x8],rdi
  40b961:	mov    QWORD PTR [rbp-0x10],rsi
  40b965:	mov    QWORD PTR [rbp-0x18],rdx
  40b969:	mov    rdx,QWORD PTR [rbp-0x18]
  40b96d:	mov    rcx,QWORD PTR [rbp-0x10]
  40b971:	mov    rax,QWORD PTR [rbp-0x8]
  40b975:	mov    rsi,rcx
  40b978:	mov    rdi,rax
  40b97b:	call   40995c <_start@@Base+0x56ac>
  40b980:	mov    edx,eax
  40b982:	mov    rax,QWORD PTR [rbp-0x8]
  40b986:	mov    esi,edx
  40b988:	mov    rdi,rax
  40b98b:	call   40b8c9 <_start@@Base+0x7619>
  40b990:	leave  
  40b991:	ret    
  40b992:	push   rbp
  40b993:	mov    rbp,rsp
  40b996:	sub    rsp,0x10
  40b99a:	mov    QWORD PTR [rbp-0x8],rdi
  40b99e:	mov    QWORD PTR [rbp-0x10],rsi
  40b9a2:	mov    rdx,QWORD PTR [rbp-0x10]
  40b9a6:	mov    rax,QWORD PTR [rbp-0x8]
  40b9aa:	mov    rsi,rdx
  40b9ad:	mov    rdi,rax
  40b9b0:	call   409997 <_start@@Base+0x56e7>
  40b9b5:	mov    edx,eax
  40b9b7:	mov    rax,QWORD PTR [rbp-0x8]
  40b9bb:	mov    esi,edx
  40b9bd:	mov    rdi,rax
  40b9c0:	call   40b8c9 <_start@@Base+0x7619>
  40b9c5:	leave  
  40b9c6:	ret    
  40b9c7:	push   rbp
  40b9c8:	mov    rbp,rsp
  40b9cb:	sub    rsp,0x20
  40b9cf:	mov    QWORD PTR [rbp-0x8],rdi
  40b9d3:	mov    QWORD PTR [rbp-0x10],rsi
  40b9d7:	mov    QWORD PTR [rbp-0x18],rdx
  40b9db:	mov    QWORD PTR [rbp-0x20],rcx
  40b9df:	mov    rcx,QWORD PTR [rbp-0x20]
  40b9e3:	mov    rdx,QWORD PTR [rbp-0x18]
  40b9e7:	mov    rsi,QWORD PTR [rbp-0x10]
  40b9eb:	mov    rax,QWORD PTR [rbp-0x8]
  40b9ef:	mov    rdi,rax
  40b9f2:	call   4099d9 <_start@@Base+0x5729>
  40b9f7:	mov    edx,eax
  40b9f9:	mov    rax,QWORD PTR [rbp-0x8]
  40b9fd:	mov    esi,edx
  40b9ff:	mov    rdi,rax
  40ba02:	call   40b8c9 <_start@@Base+0x7619>
  40ba07:	leave  
  40ba08:	ret    
  40ba09:	push   rbp
  40ba0a:	mov    rbp,rsp
  40ba0d:	sub    rsp,0x20
  40ba11:	mov    QWORD PTR [rbp-0x8],rdi
  40ba15:	mov    QWORD PTR [rbp-0x10],rsi
  40ba19:	mov    QWORD PTR [rbp-0x18],rdx
  40ba1d:	mov    rdx,QWORD PTR [rbp-0x18]
  40ba21:	mov    rcx,QWORD PTR [rbp-0x10]
  40ba25:	mov    rax,QWORD PTR [rbp-0x8]
  40ba29:	mov    rsi,rcx
  40ba2c:	mov    rdi,rax
  40ba2f:	call   417a67 <flatcc_builder_append_vector@@Base>
  40ba34:	leave  
  40ba35:	ret    
  40ba36:	push   rbp
  40ba37:	mov    rbp,rsp
  40ba3a:	sub    rsp,0x20
  40ba3e:	mov    QWORD PTR [rbp-0x18],rdi
  40ba42:	mov    DWORD PTR [rbp-0x1c],esi
  40ba45:	cmp    DWORD PTR [rbp-0x1c],0x0
  40ba49:	je     40ba77 <_start@@Base+0x77c7>
  40ba4b:	mov    rax,QWORD PTR [rbp-0x18]
  40ba4f:	mov    esi,0xc
  40ba54:	mov    rdi,rax
  40ba57:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40ba5c:	mov    QWORD PTR [rbp-0x8],rax
  40ba60:	cmp    QWORD PTR [rbp-0x8],0x0
  40ba65:	je     40ba77 <_start@@Base+0x77c7>
  40ba67:	mov    rax,QWORD PTR [rbp-0x8]
  40ba6b:	mov    edx,DWORD PTR [rbp-0x1c]
  40ba6e:	mov    DWORD PTR [rax],edx
  40ba70:	mov    eax,0x0
  40ba75:	jmp    40ba7c <_start@@Base+0x77cc>
  40ba77:	mov    eax,0xffffffff
  40ba7c:	leave  
  40ba7d:	ret    
  40ba7e:	push   rbp
  40ba7f:	mov    rbp,rsp
  40ba82:	sub    rsp,0x10
  40ba86:	mov    QWORD PTR [rbp-0x8],rdi
  40ba8a:	mov    rax,QWORD PTR [rbp-0x8]
  40ba8e:	mov    rdi,rax
  40ba91:	call   40a758 <_start@@Base+0x64a8>
  40ba96:	leave  
  40ba97:	ret    
  40ba98:	push   rbp
  40ba99:	mov    rbp,rsp
  40ba9c:	sub    rsp,0x10
  40baa0:	mov    QWORD PTR [rbp-0x8],rdi
  40baa4:	mov    rax,QWORD PTR [rbp-0x8]
  40baa8:	mov    rdi,rax
  40baab:	call   40a777 <_start@@Base+0x64c7>
  40bab0:	mov    edx,eax
  40bab2:	mov    rax,QWORD PTR [rbp-0x8]
  40bab6:	mov    esi,edx
  40bab8:	mov    rdi,rax
  40babb:	call   40ba36 <_start@@Base+0x7786>
  40bac0:	leave  
  40bac1:	ret    
  40bac2:	push   rbp
  40bac3:	mov    rbp,rsp
  40bac6:	sub    rsp,0x20
  40baca:	mov    QWORD PTR [rbp-0x18],rdi
  40bace:	mov    QWORD PTR [rbp-0x20],rsi
  40bad2:	movzx  eax,BYTE PTR [rbp-0x20]
  40bad6:	test   al,al
  40bad8:	jne    40bae1 <_start@@Base+0x7831>
  40bada:	mov    eax,0x0
  40badf:	jmp    40bb50 <_start@@Base+0x78a0>
  40bae1:	mov    eax,DWORD PTR [rbp-0x1c]
  40bae4:	test   eax,eax
  40bae6:	jne    40baef <_start@@Base+0x783f>
  40bae8:	mov    eax,0xffffffff
  40baed:	jmp    40bb50 <_start@@Base+0x78a0>
  40baef:	mov    rax,QWORD PTR [rbp-0x18]
  40baf3:	mov    ecx,0x1
  40baf8:	mov    edx,0x1
  40bafd:	mov    esi,0x7
  40bb02:	mov    rdi,rax
  40bb05:	call   41a47e <flatcc_builder_table_add@@Base>
  40bb0a:	mov    QWORD PTR [rbp-0x10],rax
  40bb0e:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb13:	je     40bb31 <_start@@Base+0x7881>
  40bb15:	mov    rax,QWORD PTR [rbp-0x18]
  40bb19:	mov    esi,0x8
  40bb1e:	mov    rdi,rax
  40bb21:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40bb26:	mov    QWORD PTR [rbp-0x8],rax
  40bb2a:	cmp    QWORD PTR [rbp-0x8],0x0
  40bb2f:	jne    40bb38 <_start@@Base+0x7888>
  40bb31:	mov    eax,0xffffffff
  40bb36:	jmp    40bb50 <_start@@Base+0x78a0>
  40bb38:	movzx  eax,BYTE PTR [rbp-0x20]
  40bb3c:	mov    rdx,QWORD PTR [rbp-0x10]
  40bb40:	mov    BYTE PTR [rdx],al
  40bb42:	mov    edx,DWORD PTR [rbp-0x1c]
  40bb45:	mov    rax,QWORD PTR [rbp-0x8]
  40bb49:	mov    DWORD PTR [rax],edx
  40bb4b:	mov    eax,0x0
  40bb50:	leave  
  40bb51:	ret    
  40bb52:	push   rbp
  40bb53:	mov    rbp,rsp
  40bb56:	sub    rsp,0x20
  40bb5a:	mov    QWORD PTR [rbp-0x18],rdi
  40bb5e:	mov    eax,esi
  40bb60:	mov    BYTE PTR [rbp-0x1c],al
  40bb63:	cmp    BYTE PTR [rbp-0x1c],0x0
  40bb67:	jne    40bb70 <_start@@Base+0x78c0>
  40bb69:	mov    eax,0x0
  40bb6e:	jmp    40bbac <_start@@Base+0x78fc>
  40bb70:	mov    rax,QWORD PTR [rbp-0x18]
  40bb74:	mov    ecx,0x1
  40bb79:	mov    edx,0x1
  40bb7e:	mov    esi,0x7
  40bb83:	mov    rdi,rax
  40bb86:	call   41a47e <flatcc_builder_table_add@@Base>
  40bb8b:	mov    QWORD PTR [rbp-0x8],rax
  40bb8f:	cmp    QWORD PTR [rbp-0x8],0x0
  40bb94:	je     40bba7 <_start@@Base+0x78f7>
  40bb96:	mov    rdx,QWORD PTR [rbp-0x8]
  40bb9a:	movzx  eax,BYTE PTR [rbp-0x1c]
  40bb9e:	mov    BYTE PTR [rdx],al
  40bba0:	mov    eax,0x0
  40bba5:	jmp    40bbac <_start@@Base+0x78fc>
  40bba7:	mov    eax,0xffffffff
  40bbac:	leave  
  40bbad:	ret    
  40bbae:	push   rbp
  40bbaf:	mov    rbp,rsp
  40bbb2:	sub    rsp,0x20
  40bbb6:	mov    QWORD PTR [rbp-0x18],rdi
  40bbba:	mov    QWORD PTR [rbp-0x20],rsi
  40bbbe:	movzx  eax,BYTE PTR [rbp-0x20]
  40bbc2:	test   al,al
  40bbc4:	jne    40bbcd <_start@@Base+0x791d>
  40bbc6:	mov    eax,0x0
  40bbcb:	jmp    40bbfe <_start@@Base+0x794e>
  40bbcd:	mov    rax,QWORD PTR [rbp-0x18]
  40bbd1:	mov    esi,0x8
  40bbd6:	mov    rdi,rax
  40bbd9:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40bbde:	mov    QWORD PTR [rbp-0x8],rax
  40bbe2:	cmp    QWORD PTR [rbp-0x8],0x0
  40bbe7:	je     40bbf9 <_start@@Base+0x7949>
  40bbe9:	mov    edx,DWORD PTR [rbp-0x1c]
  40bbec:	mov    rax,QWORD PTR [rbp-0x8]
  40bbf0:	mov    DWORD PTR [rax],edx
  40bbf2:	mov    eax,0x0
  40bbf7:	jmp    40bbfe <_start@@Base+0x794e>
  40bbf9:	mov    eax,0xffffffff
  40bbfe:	leave  
  40bbff:	ret    
  40bc00:	push   rbp
  40bc01:	mov    rbp,rsp
  40bc04:	sub    rsp,0x10
  40bc08:	mov    QWORD PTR [rbp-0x8],rdi
  40bc0c:	mov    DWORD PTR [rbp-0xc],esi
  40bc0f:	mov    eax,DWORD PTR [rbp-0xc]
  40bc12:	mov    edi,eax
  40bc14:	call   40a957 <_start@@Base+0x66a7>
  40bc19:	mov    rdx,rax
  40bc1c:	mov    rax,QWORD PTR [rbp-0x8]
  40bc20:	mov    rsi,rdx
  40bc23:	mov    rdi,rax
  40bc26:	call   40bac2 <_start@@Base+0x7812>
  40bc2b:	leave  
  40bc2c:	ret    
  40bc2d:	push   rbp
  40bc2e:	mov    rbp,rsp
  40bc31:	sub    rsp,0x10
  40bc35:	mov    QWORD PTR [rbp-0x8],rdi
  40bc39:	mov    DWORD PTR [rbp-0xc],esi
  40bc3c:	mov    eax,DWORD PTR [rbp-0xc]
  40bc3f:	mov    edi,eax
  40bc41:	call   40a985 <_start@@Base+0x66d5>
  40bc46:	mov    rdx,rax
  40bc49:	mov    rax,QWORD PTR [rbp-0x8]
  40bc4d:	mov    rsi,rdx
  40bc50:	mov    rdi,rax
  40bc53:	call   40bac2 <_start@@Base+0x7812>
  40bc58:	leave  
  40bc59:	ret    
  40bc5a:	push   rbp
  40bc5b:	mov    rbp,rsp
  40bc5e:	sub    rsp,0x10
  40bc62:	mov    QWORD PTR [rbp-0x8],rdi
  40bc66:	mov    rax,QWORD PTR [rbp-0x8]
  40bc6a:	mov    rdi,rax
  40bc6d:	call   40a6e4 <_start@@Base+0x6434>
  40bc72:	leave  
  40bc73:	ret    
  40bc74:	push   rbp
  40bc75:	mov    rbp,rsp
  40bc78:	sub    rsp,0x20
  40bc7c:	mov    QWORD PTR [rbp-0x18],rdi
  40bc80:	mov    rax,QWORD PTR [rbp-0x18]
  40bc84:	mov    rdi,rax
  40bc87:	call   40a703 <_start@@Base+0x6453>
  40bc8c:	mov    DWORD PTR [rbp-0x4],eax
  40bc8f:	cmp    DWORD PTR [rbp-0x4],0x0
  40bc93:	je     40bca8 <_start@@Base+0x79f8>
  40bc95:	mov    edx,DWORD PTR [rbp-0x4]
  40bc98:	mov    rax,QWORD PTR [rbp-0x18]
  40bc9c:	mov    esi,edx
  40bc9e:	mov    rdi,rax
  40bca1:	call   40bc2d <_start@@Base+0x797d>
  40bca6:	jmp    40bcad <_start@@Base+0x79fd>
  40bca8:	mov    eax,0xffffffff
  40bcad:	leave  
  40bcae:	ret    
  40bcaf:	push   rbp
  40bcb0:	mov    rbp,rsp
  40bcb3:	sub    rsp,0x20
  40bcb7:	mov    QWORD PTR [rbp-0x18],rdi
  40bcbb:	mov    DWORD PTR [rbp-0x1c],esi
  40bcbe:	cmp    DWORD PTR [rbp-0x1c],0x0
  40bcc2:	je     40bcf0 <_start@@Base+0x7a40>
  40bcc4:	mov    rax,QWORD PTR [rbp-0x18]
  40bcc8:	mov    esi,0x9
  40bccd:	mov    rdi,rax
  40bcd0:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40bcd5:	mov    QWORD PTR [rbp-0x8],rax
  40bcd9:	cmp    QWORD PTR [rbp-0x8],0x0
  40bcde:	je     40bcf0 <_start@@Base+0x7a40>
  40bce0:	mov    rax,QWORD PTR [rbp-0x8]
  40bce4:	mov    edx,DWORD PTR [rbp-0x1c]
  40bce7:	mov    DWORD PTR [rax],edx
  40bce9:	mov    eax,0x0
  40bcee:	jmp    40bcf5 <_start@@Base+0x7a45>
  40bcf0:	mov    eax,0xffffffff
  40bcf5:	leave  
  40bcf6:	ret    
  40bcf7:	push   rbp
  40bcf8:	mov    rbp,rsp
  40bcfb:	sub    rsp,0x10
  40bcff:	mov    QWORD PTR [rbp-0x8],rdi
  40bd03:	mov    rax,QWORD PTR [rbp-0x8]
  40bd07:	mov    rdi,rax
  40bd0a:	call   409efa <_start@@Base+0x5c4a>
  40bd0f:	leave  
  40bd10:	ret    
  40bd11:	push   rbp
  40bd12:	mov    rbp,rsp
  40bd15:	sub    rsp,0x10
  40bd19:	mov    QWORD PTR [rbp-0x8],rdi
  40bd1d:	mov    rax,QWORD PTR [rbp-0x8]
  40bd21:	mov    rdi,rax
  40bd24:	call   409f23 <_start@@Base+0x5c73>
  40bd29:	mov    edx,eax
  40bd2b:	mov    rax,QWORD PTR [rbp-0x8]
  40bd2f:	mov    esi,edx
  40bd31:	mov    rdi,rax
  40bd34:	call   40bcaf <_start@@Base+0x79ff>
  40bd39:	leave  
  40bd3a:	ret    
  40bd3b:	push   rbp
  40bd3c:	mov    rbp,rsp
  40bd3f:	sub    rsp,0x10
  40bd43:	mov    QWORD PTR [rbp-0x8],rdi
  40bd47:	mov    QWORD PTR [rbp-0x10],rsi
  40bd4b:	mov    rdx,QWORD PTR [rbp-0x10]
  40bd4f:	mov    rax,QWORD PTR [rbp-0x8]
  40bd53:	mov    rsi,rdx
  40bd56:	mov    rdi,rax
  40bd59:	call   409f3d <_start@@Base+0x5c8d>
  40bd5e:	mov    edx,eax
  40bd60:	mov    rax,QWORD PTR [rbp-0x8]
  40bd64:	mov    esi,edx
  40bd66:	mov    rdi,rax
  40bd69:	call   40bcaf <_start@@Base+0x79ff>
  40bd6e:	leave  
  40bd6f:	ret    
  40bd70:	push   rbp
  40bd71:	mov    rbp,rsp
  40bd74:	sub    rsp,0x20
  40bd78:	mov    QWORD PTR [rbp-0x8],rdi
  40bd7c:	mov    QWORD PTR [rbp-0x10],rsi
  40bd80:	mov    QWORD PTR [rbp-0x18],rdx
  40bd84:	mov    QWORD PTR [rbp-0x20],rcx
  40bd88:	mov    rcx,QWORD PTR [rbp-0x20]
  40bd8c:	mov    rdx,QWORD PTR [rbp-0x18]
  40bd90:	mov    rsi,QWORD PTR [rbp-0x10]
  40bd94:	mov    rax,QWORD PTR [rbp-0x8]
  40bd98:	mov    rdi,rax
  40bd9b:	call   409f7f <_start@@Base+0x5ccf>
  40bda0:	mov    edx,eax
  40bda2:	mov    rax,QWORD PTR [rbp-0x8]
  40bda6:	mov    esi,edx
  40bda8:	mov    rdi,rax
  40bdab:	call   40bcaf <_start@@Base+0x79ff>
  40bdb0:	leave  
  40bdb1:	ret    
  40bdb2:	push   rbp
  40bdb3:	mov    rbp,rsp
  40bdb6:	sub    rsp,0x10
  40bdba:	mov    QWORD PTR [rbp-0x8],rdi
  40bdbe:	mov    QWORD PTR [rbp-0x10],rsi
  40bdc2:	mov    rdx,QWORD PTR [rbp-0x10]
  40bdc6:	mov    rax,QWORD PTR [rbp-0x8]
  40bdca:	mov    rsi,rdx
  40bdcd:	mov    rdi,rax
  40bdd0:	call   417930 <flatcc_builder_extend_vector@@Base>
  40bdd5:	leave  
  40bdd6:	ret    
  40bdd7:	push   rbp
  40bdd8:	mov    rbp,rsp
  40bddb:	sub    rsp,0x10
  40bddf:	mov    QWORD PTR [rbp-0x8],rdi
  40bde3:	mov    QWORD PTR [rbp-0x10],rsi
  40bde7:	mov    rdx,QWORD PTR [rbp-0x10]
  40bdeb:	mov    rax,QWORD PTR [rbp-0x8]
  40bdef:	mov    rsi,rdx
  40bdf2:	mov    rdi,rax
  40bdf5:	call   417e0a <flatcc_builder_truncate_vector@@Base>
  40bdfa:	leave  
  40bdfb:	ret    
  40bdfc:	push   rbp
  40bdfd:	mov    rbp,rsp
  40be00:	sub    rsp,0x10
  40be04:	mov    QWORD PTR [rbp-0x8],rdi
  40be08:	mov    rax,QWORD PTR [rbp-0x8]
  40be0c:	mov    rdi,rax
  40be0f:	call   419345 <flatcc_builder_vector_edit@@Base>
  40be14:	leave  
  40be15:	ret    
  40be16:	push   rbp
  40be17:	mov    rbp,rsp
  40be1a:	sub    rsp,0x10
  40be1e:	mov    QWORD PTR [rbp-0x8],rdi
  40be22:	mov    rax,QWORD PTR [rbp-0x8]
  40be26:	mov    rdi,rax
  40be29:	call   41932a <flatcc_builder_vector_count@@Base>
  40be2e:	leave  
  40be2f:	ret    
  40be30:	push   rbp
  40be31:	mov    rbp,rsp
  40be34:	sub    rsp,0x20
  40be38:	mov    QWORD PTR [rbp-0x18],rdi
  40be3c:	mov    QWORD PTR [rbp-0x20],rsi
  40be40:	mov    rax,QWORD PTR [rbp-0x18]
  40be44:	mov    esi,0x1
  40be49:	mov    rdi,rax
  40be4c:	call   417930 <flatcc_builder_extend_vector@@Base>
  40be51:	mov    QWORD PTR [rbp-0x8],rax
  40be55:	cmp    QWORD PTR [rbp-0x8],0x0
  40be5a:	je     40be82 <_start@@Base+0x7bd2>
  40be5c:	mov    eax,0x0
  40be61:	call   405799 <_start@@Base+0x14e9>
  40be66:	mov    rdx,rax
  40be69:	mov    rcx,QWORD PTR [rbp-0x20]
  40be6d:	mov    rax,QWORD PTR [rbp-0x8]
  40be71:	mov    rsi,rcx
  40be74:	mov    rdi,rax
  40be77:	call   404260 <memcpy@plt>
  40be7c:	mov    rax,QWORD PTR [rbp-0x8]
  40be80:	jmp    40be87 <_start@@Base+0x7bd7>
  40be82:	mov    eax,0x0
  40be87:	leave  
  40be88:	ret    
  40be89:	push   rbp
  40be8a:	mov    rbp,rsp
  40be8d:	sub    rsp,0x20
  40be91:	mov    QWORD PTR [rbp-0x18],rdi
  40be95:	mov    eax,esi
  40be97:	mov    WORD PTR [rbp-0x1c],ax
  40be9b:	mov    eax,edx
  40be9d:	mov    BYTE PTR [rbp-0x20],al
  40bea0:	mov    rax,QWORD PTR [rbp-0x18]
  40bea4:	mov    esi,0x1
  40bea9:	mov    rdi,rax
  40beac:	call   417930 <flatcc_builder_extend_vector@@Base>
  40beb1:	mov    QWORD PTR [rbp-0x8],rax
  40beb5:	cmp    QWORD PTR [rbp-0x8],0x0
  40beba:	je     40bed4 <_start@@Base+0x7c24>
  40bebc:	movsx  edx,BYTE PTR [rbp-0x20]
  40bec0:	movsx  ecx,WORD PTR [rbp-0x1c]
  40bec4:	mov    rax,QWORD PTR [rbp-0x8]
  40bec8:	mov    esi,ecx
  40beca:	mov    rdi,rax
  40becd:	call   409e59 <_start@@Base+0x5ba9>
  40bed2:	jmp    40bed9 <_start@@Base+0x7c29>
  40bed4:	mov    eax,0x0
  40bed9:	leave  
  40beda:	ret    
  40bedb:	push   rbp
  40bedc:	mov    rbp,rsp
  40bedf:	sub    rsp,0x20
  40bee3:	mov    QWORD PTR [rbp-0x18],rdi
  40bee7:	mov    DWORD PTR [rbp-0x1c],esi
  40beea:	cmp    DWORD PTR [rbp-0x1c],0x0
  40beee:	je     40bf1c <_start@@Base+0x7c6c>
  40bef0:	mov    rax,QWORD PTR [rbp-0x18]
  40bef4:	mov    esi,0xd
  40bef9:	mov    rdi,rax
  40befc:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40bf01:	mov    QWORD PTR [rbp-0x8],rax
  40bf05:	cmp    QWORD PTR [rbp-0x8],0x0
  40bf0a:	je     40bf1c <_start@@Base+0x7c6c>
  40bf0c:	mov    rax,QWORD PTR [rbp-0x8]
  40bf10:	mov    edx,DWORD PTR [rbp-0x1c]
  40bf13:	mov    DWORD PTR [rax],edx
  40bf15:	mov    eax,0x0
  40bf1a:	jmp    40bf21 <_start@@Base+0x7c71>
  40bf1c:	mov    eax,0xffffffff
  40bf21:	leave  
  40bf22:	ret    
  40bf23:	push   rbp
  40bf24:	mov    rbp,rsp
  40bf27:	sub    rsp,0x10
  40bf2b:	mov    QWORD PTR [rbp-0x8],rdi
  40bf2f:	mov    rax,QWORD PTR [rbp-0x8]
  40bf33:	lea    rsi,[rip+0x1223a]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40bf3a:	mov    rdi,rax
  40bf3d:	call   409db7 <_start@@Base+0x5b07>
  40bf42:	test   eax,eax
  40bf44:	jne    40bf54 <_start@@Base+0x7ca4>
  40bf46:	mov    rax,QWORD PTR [rbp-0x8]
  40bf4a:	mov    rdi,rax
  40bf4d:	call   40a758 <_start@@Base+0x64a8>
  40bf52:	jmp    40bf59 <_start@@Base+0x7ca9>
  40bf54:	mov    eax,0xffffffff
  40bf59:	leave  
  40bf5a:	ret    
  40bf5b:	push   rbp
  40bf5c:	mov    rbp,rsp
  40bf5f:	sub    rsp,0x10
  40bf63:	mov    QWORD PTR [rbp-0x8],rdi
  40bf67:	mov    rax,QWORD PTR [rbp-0x8]
  40bf6b:	mov    rdi,rax
  40bf6e:	call   40a777 <_start@@Base+0x64c7>
  40bf73:	mov    edx,eax
  40bf75:	mov    rax,QWORD PTR [rbp-0x8]
  40bf79:	mov    esi,edx
  40bf7b:	mov    rdi,rax
  40bf7e:	call   409e0f <_start@@Base+0x5b5f>
  40bf83:	mov    edx,eax
  40bf85:	mov    rax,QWORD PTR [rbp-0x8]
  40bf89:	mov    esi,edx
  40bf8b:	mov    rdi,rax
  40bf8e:	call   40bedb <_start@@Base+0x7c2b>
  40bf93:	leave  
  40bf94:	ret    
  40bf95:	push   rbp
  40bf96:	mov    rbp,rsp
  40bf99:	sub    rsp,0x20
  40bf9d:	mov    QWORD PTR [rbp-0x8],rdi
  40bfa1:	mov    QWORD PTR [rbp-0x10],rsi
  40bfa5:	mov    QWORD PTR [rbp-0x18],rdx
  40bfa9:	mov    eax,ecx
  40bfab:	mov    WORD PTR [rbp-0x1c],ax
  40bfaf:	cmp    WORD PTR [rbp-0x1c],0x0
  40bfb4:	je     40bfbc <_start@@Base+0x7d0c>
  40bfb6:	movzx  ecx,WORD PTR [rbp-0x1c]
  40bfba:	jmp    40bfc1 <_start@@Base+0x7d11>
  40bfbc:	mov    ecx,0x8
  40bfc1:	mov    rdx,QWORD PTR [rbp-0x18]
  40bfc5:	mov    rsi,QWORD PTR [rbp-0x10]
  40bfc9:	mov    rax,QWORD PTR [rbp-0x8]
  40bfcd:	mov    r9d,0xffffffff
  40bfd3:	mov    r8d,ecx
  40bfd6:	mov    ecx,0x1
  40bfdb:	mov    rdi,rax
  40bfde:	call   418fe3 <flatcc_builder_create_vector@@Base>
  40bfe3:	mov    edx,eax
  40bfe5:	mov    rax,QWORD PTR [rbp-0x8]
  40bfe9:	mov    esi,edx
  40bfeb:	mov    rdi,rax
  40bfee:	call   40bedb <_start@@Base+0x7c2b>
  40bff3:	leave  
  40bff4:	ret    
  40bff5:	push   rbp
  40bff6:	mov    rbp,rsp
  40bff9:	sub    rsp,0x20
  40bffd:	mov    QWORD PTR [rbp-0x18],rdi
  40c001:	mov    DWORD PTR [rbp-0x1c],esi
  40c004:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c008:	je     40c036 <_start@@Base+0x7d86>
  40c00a:	mov    rax,QWORD PTR [rbp-0x18]
  40c00e:	mov    esi,0xe
  40c013:	mov    rdi,rax
  40c016:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40c01b:	mov    QWORD PTR [rbp-0x8],rax
  40c01f:	cmp    QWORD PTR [rbp-0x8],0x0
  40c024:	je     40c036 <_start@@Base+0x7d86>
  40c026:	mov    rax,QWORD PTR [rbp-0x8]
  40c02a:	mov    edx,DWORD PTR [rbp-0x1c]
  40c02d:	mov    DWORD PTR [rax],edx
  40c02f:	mov    eax,0x0
  40c034:	jmp    40c03b <_start@@Base+0x7d8b>
  40c036:	mov    eax,0xffffffff
  40c03b:	leave  
  40c03c:	ret    
  40c03d:	push   rbp
  40c03e:	mov    rbp,rsp
  40c041:	sub    rsp,0x10
  40c045:	mov    QWORD PTR [rbp-0x8],rdi
  40c049:	mov    rax,QWORD PTR [rbp-0x8]
  40c04d:	mov    rdi,rax
  40c050:	call   40a670 <_start@@Base+0x63c0>
  40c055:	leave  
  40c056:	ret    
  40c057:	push   rbp
  40c058:	mov    rbp,rsp
  40c05b:	sub    rsp,0x10
  40c05f:	mov    QWORD PTR [rbp-0x8],rdi
  40c063:	mov    rax,QWORD PTR [rbp-0x8]
  40c067:	mov    rdi,rax
  40c06a:	call   40a68f <_start@@Base+0x63df>
  40c06f:	mov    edx,eax
  40c071:	mov    rax,QWORD PTR [rbp-0x8]
  40c075:	mov    esi,edx
  40c077:	mov    rdi,rax
  40c07a:	call   40bff5 <_start@@Base+0x7d45>
  40c07f:	leave  
  40c080:	ret    
  40c081:	push   rbp
  40c082:	mov    rbp,rsp
  40c085:	sub    rsp,0x20
  40c089:	mov    QWORD PTR [rbp-0x8],rdi
  40c08d:	mov    DWORD PTR [rbp-0xc],esi
  40c090:	mov    QWORD PTR [rbp-0x18],rdx
  40c094:	mov    eax,ecx
  40c096:	mov    WORD PTR [rbp-0x10],ax
  40c09a:	movzx  ecx,WORD PTR [rbp-0x10]
  40c09e:	mov    rdx,QWORD PTR [rbp-0x18]
  40c0a2:	mov    esi,DWORD PTR [rbp-0xc]
  40c0a5:	mov    rax,QWORD PTR [rbp-0x8]
  40c0a9:	mov    rdi,rax
  40c0ac:	call   40af20 <_start@@Base+0x6c70>
  40c0b1:	mov    edx,eax
  40c0b3:	mov    rax,QWORD PTR [rbp-0x8]
  40c0b7:	mov    esi,edx
  40c0b9:	mov    rdi,rax
  40c0bc:	call   40bff5 <_start@@Base+0x7d45>
  40c0c1:	leave  
  40c0c2:	ret    
  40c0c3:	push   rbp
  40c0c4:	mov    rbp,rsp
  40c0c7:	sub    rsp,0x20
  40c0cb:	mov    QWORD PTR [rbp-0x18],rdi
  40c0cf:	mov    eax,esi
  40c0d1:	mov    BYTE PTR [rbp-0x1c],al
  40c0d4:	cmp    BYTE PTR [rbp-0x1c],0x1
  40c0d8:	jne    40c0e1 <_start@@Base+0x7e31>
  40c0da:	mov    eax,0x0
  40c0df:	jmp    40c125 <_start@@Base+0x7e75>
  40c0e1:	mov    rax,QWORD PTR [rbp-0x18]
  40c0e5:	mov    ecx,0x1
  40c0ea:	mov    edx,0x1
  40c0ef:	mov    esi,0xf
  40c0f4:	mov    rdi,rax
  40c0f7:	call   41a47e <flatcc_builder_table_add@@Base>
  40c0fc:	mov    QWORD PTR [rbp-0x8],rax
  40c100:	cmp    QWORD PTR [rbp-0x8],0x0
  40c105:	jne    40c10e <_start@@Base+0x7e5e>
  40c107:	mov    eax,0xffffffff
  40c10c:	jmp    40c125 <_start@@Base+0x7e75>
  40c10e:	movzx  edx,BYTE PTR [rbp-0x1c]
  40c112:	mov    rax,QWORD PTR [rbp-0x8]
  40c116:	mov    esi,edx
  40c118:	mov    rdi,rax
  40c11b:	call   4098f1 <_start@@Base+0x5641>
  40c120:	mov    eax,0x0
  40c125:	leave  
  40c126:	ret    
  40c127:	push   rbp
  40c128:	mov    rbp,rsp
  40c12b:	sub    rsp,0x10
  40c12f:	mov    QWORD PTR [rbp-0x8],rdi
  40c133:	mov    rax,QWORD PTR [rbp-0x8]
  40c137:	mov    rdi,rax
  40c13a:	call   40a758 <_start@@Base+0x64a8>
  40c13f:	leave  
  40c140:	ret    
  40c141:	push   rbp
  40c142:	mov    rbp,rsp
  40c145:	sub    rsp,0x10
  40c149:	mov    QWORD PTR [rbp-0x8],rdi
  40c14d:	mov    rax,QWORD PTR [rbp-0x8]
  40c151:	mov    rdi,rax
  40c154:	call   40a777 <_start@@Base+0x64c7>
  40c159:	mov    edx,eax
  40c15b:	mov    rax,QWORD PTR [rbp-0x8]
  40c15f:	mov    esi,edx
  40c161:	mov    rdi,rax
  40c164:	call   40a7cc <_start@@Base+0x651c>
  40c169:	leave  
  40c16a:	ret    
  40c16b:	push   rbp
  40c16c:	mov    rbp,rsp
  40c16f:	sub    rsp,0x10
  40c173:	mov    QWORD PTR [rbp-0x8],rdi
  40c177:	mov    rax,QWORD PTR [rbp-0x8]
  40c17b:	lea    rsi,[rip+0x11ff2]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40c182:	mov    rdi,rax
  40c185:	call   409db7 <_start@@Base+0x5b07>
  40c18a:	test   eax,eax
  40c18c:	jne    40c19c <_start@@Base+0x7eec>
  40c18e:	mov    rax,QWORD PTR [rbp-0x8]
  40c192:	mov    rdi,rax
  40c195:	call   40a758 <_start@@Base+0x64a8>
  40c19a:	jmp    40c1a1 <_start@@Base+0x7ef1>
  40c19c:	mov    eax,0xffffffff
  40c1a1:	leave  
  40c1a2:	ret    
  40c1a3:	push   rbp
  40c1a4:	mov    rbp,rsp
  40c1a7:	sub    rsp,0x10
  40c1ab:	mov    QWORD PTR [rbp-0x8],rdi
  40c1af:	mov    rax,QWORD PTR [rbp-0x8]
  40c1b3:	lea    rsi,[rip+0x11fba]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40c1ba:	mov    rdi,rax
  40c1bd:	call   409de3 <_start@@Base+0x5b33>
  40c1c2:	test   eax,eax
  40c1c4:	jne    40c1d4 <_start@@Base+0x7f24>
  40c1c6:	mov    rax,QWORD PTR [rbp-0x8]
  40c1ca:	mov    rdi,rax
  40c1cd:	call   40a758 <_start@@Base+0x64a8>
  40c1d2:	jmp    40c1d9 <_start@@Base+0x7f29>
  40c1d4:	mov    eax,0xffffffff
  40c1d9:	leave  
  40c1da:	ret    
  40c1db:	push   rbp
  40c1dc:	mov    rbp,rsp
  40c1df:	sub    rsp,0x10
  40c1e3:	mov    QWORD PTR [rbp-0x8],rdi
  40c1e7:	mov    rax,QWORD PTR [rbp-0x8]
  40c1eb:	mov    rdi,rax
  40c1ee:	call   40a777 <_start@@Base+0x64c7>
  40c1f3:	mov    edx,eax
  40c1f5:	mov    rax,QWORD PTR [rbp-0x8]
  40c1f9:	mov    esi,edx
  40c1fb:	mov    rdi,rax
  40c1fe:	call   409e0f <_start@@Base+0x5b5f>
  40c203:	leave  
  40c204:	ret    
  40c205:	push   rbp
  40c206:	mov    rbp,rsp
  40c209:	sub    rsp,0x20
  40c20d:	mov    QWORD PTR [rbp-0x18],rdi
  40c211:	mov    eax,esi
  40c213:	mov    BYTE PTR [rbp-0x1c],al
  40c216:	cmp    BYTE PTR [rbp-0x1c],0x0
  40c21a:	jne    40c223 <_start@@Base+0x7f73>
  40c21c:	mov    eax,0x0
  40c221:	jmp    40c267 <_start@@Base+0x7fb7>
  40c223:	mov    rax,QWORD PTR [rbp-0x18]
  40c227:	mov    ecx,0x1
  40c22c:	mov    edx,0x1
  40c231:	mov    esi,0x0
  40c236:	mov    rdi,rax
  40c239:	call   41a47e <flatcc_builder_table_add@@Base>
  40c23e:	mov    QWORD PTR [rbp-0x8],rax
  40c242:	cmp    QWORD PTR [rbp-0x8],0x0
  40c247:	jne    40c250 <_start@@Base+0x7fa0>
  40c249:	mov    eax,0xffffffff
  40c24e:	jmp    40c267 <_start@@Base+0x7fb7>
  40c250:	movsx  edx,BYTE PTR [rbp-0x1c]
  40c254:	mov    rax,QWORD PTR [rbp-0x8]
  40c258:	mov    esi,edx
  40c25a:	mov    rdi,rax
  40c25d:	call   4098c9 <_start@@Base+0x5619>
  40c262:	mov    eax,0x0
  40c267:	leave  
  40c268:	ret    
  40c269:	push   rbp
  40c26a:	mov    rbp,rsp
  40c26d:	sub    rsp,0x20
  40c271:	mov    QWORD PTR [rbp-0x18],rdi
  40c275:	mov    eax,esi
  40c277:	mov    BYTE PTR [rbp-0x1c],al
  40c27a:	cmp    BYTE PTR [rbp-0x1c],0x0
  40c27e:	jne    40c287 <_start@@Base+0x7fd7>
  40c280:	mov    eax,0x0
  40c285:	jmp    40c2cb <_start@@Base+0x801b>
  40c287:	mov    rax,QWORD PTR [rbp-0x18]
  40c28b:	mov    ecx,0x1
  40c290:	mov    edx,0x1
  40c295:	mov    esi,0x1
  40c29a:	mov    rdi,rax
  40c29d:	call   41a47e <flatcc_builder_table_add@@Base>
  40c2a2:	mov    QWORD PTR [rbp-0x8],rax
  40c2a6:	cmp    QWORD PTR [rbp-0x8],0x0
  40c2ab:	jne    40c2b4 <_start@@Base+0x8004>
  40c2ad:	mov    eax,0xffffffff
  40c2b2:	jmp    40c2cb <_start@@Base+0x801b>
  40c2b4:	movzx  edx,BYTE PTR [rbp-0x1c]
  40c2b8:	mov    rax,QWORD PTR [rbp-0x8]
  40c2bc:	mov    esi,edx
  40c2be:	mov    rdi,rax
  40c2c1:	call   409866 <_start@@Base+0x55b6>
  40c2c6:	mov    eax,0x0
  40c2cb:	leave  
  40c2cc:	ret    
  40c2cd:	push   rbp
  40c2ce:	mov    rbp,rsp
  40c2d1:	sub    rsp,0x20
  40c2d5:	mov    QWORD PTR [rbp-0x18],rdi
  40c2d9:	mov    eax,esi
  40c2db:	mov    WORD PTR [rbp-0x1c],ax
  40c2df:	cmp    WORD PTR [rbp-0x1c],0x0
  40c2e4:	jne    40c2ed <_start@@Base+0x803d>
  40c2e6:	mov    eax,0x0
  40c2eb:	jmp    40c331 <_start@@Base+0x8081>
  40c2ed:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f1:	mov    ecx,0x2
  40c2f6:	mov    edx,0x2
  40c2fb:	mov    esi,0x2
  40c300:	mov    rdi,rax
  40c303:	call   41a47e <flatcc_builder_table_add@@Base>
  40c308:	mov    QWORD PTR [rbp-0x8],rax
  40c30c:	cmp    QWORD PTR [rbp-0x8],0x0
  40c311:	jne    40c31a <_start@@Base+0x806a>
  40c313:	mov    eax,0xffffffff
  40c318:	jmp    40c331 <_start@@Base+0x8081>
  40c31a:	movsx  edx,WORD PTR [rbp-0x1c]
  40c31e:	mov    rax,QWORD PTR [rbp-0x8]
  40c322:	mov    esi,edx
  40c324:	mov    rdi,rax
  40c327:	call   409b13 <_start@@Base+0x5863>
  40c32c:	mov    eax,0x0
  40c331:	leave  
  40c332:	ret    
  40c333:	push   rbp
  40c334:	mov    rbp,rsp
  40c337:	sub    rsp,0x20
  40c33b:	mov    QWORD PTR [rbp-0x18],rdi
  40c33f:	mov    eax,esi
  40c341:	mov    WORD PTR [rbp-0x1c],ax
  40c345:	cmp    WORD PTR [rbp-0x1c],0x0
  40c34a:	jne    40c353 <_start@@Base+0x80a3>
  40c34c:	mov    eax,0x0
  40c351:	jmp    40c397 <_start@@Base+0x80e7>
  40c353:	mov    rax,QWORD PTR [rbp-0x18]
  40c357:	mov    ecx,0x2
  40c35c:	mov    edx,0x2
  40c361:	mov    esi,0x3
  40c366:	mov    rdi,rax
  40c369:	call   41a47e <flatcc_builder_table_add@@Base>
  40c36e:	mov    QWORD PTR [rbp-0x8],rax
  40c372:	cmp    QWORD PTR [rbp-0x8],0x0
  40c377:	jne    40c380 <_start@@Base+0x80d0>
  40c379:	mov    eax,0xffffffff
  40c37e:	jmp    40c397 <_start@@Base+0x80e7>
  40c380:	movzx  edx,WORD PTR [rbp-0x1c]
  40c384:	mov    rax,QWORD PTR [rbp-0x8]
  40c388:	mov    esi,edx
  40c38a:	mov    rdi,rax
  40c38d:	call   409a66 <_start@@Base+0x57b6>
  40c392:	mov    eax,0x0
  40c397:	leave  
  40c398:	ret    
  40c399:	push   rbp
  40c39a:	mov    rbp,rsp
  40c39d:	sub    rsp,0x20
  40c3a1:	mov    QWORD PTR [rbp-0x18],rdi
  40c3a5:	mov    DWORD PTR [rbp-0x1c],esi
  40c3a8:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c3ac:	jne    40c3b5 <_start@@Base+0x8105>
  40c3ae:	mov    eax,0x0
  40c3b3:	jmp    40c3f8 <_start@@Base+0x8148>
  40c3b5:	mov    rax,QWORD PTR [rbp-0x18]
  40c3b9:	mov    ecx,0x4
  40c3be:	mov    edx,0x4
  40c3c3:	mov    esi,0x4
  40c3c8:	mov    rdi,rax
  40c3cb:	call   41a47e <flatcc_builder_table_add@@Base>
  40c3d0:	mov    QWORD PTR [rbp-0x8],rax
  40c3d4:	cmp    QWORD PTR [rbp-0x8],0x0
  40c3d9:	jne    40c3e2 <_start@@Base+0x8132>
  40c3db:	mov    eax,0xffffffff
  40c3e0:	jmp    40c3f8 <_start@@Base+0x8148>
  40c3e2:	mov    edx,DWORD PTR [rbp-0x1c]
  40c3e5:	mov    rax,QWORD PTR [rbp-0x8]
  40c3e9:	mov    esi,edx
  40c3eb:	mov    rdi,rax
  40c3ee:	call   409b3f <_start@@Base+0x588f>
  40c3f3:	mov    eax,0x0
  40c3f8:	leave  
  40c3f9:	ret    
  40c3fa:	push   rbp
  40c3fb:	mov    rbp,rsp
  40c3fe:	sub    rsp,0x20
  40c402:	mov    QWORD PTR [rbp-0x18],rdi
  40c406:	mov    DWORD PTR [rbp-0x1c],esi
  40c409:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c40d:	jne    40c416 <_start@@Base+0x8166>
  40c40f:	mov    eax,0x0
  40c414:	jmp    40c459 <_start@@Base+0x81a9>
  40c416:	mov    rax,QWORD PTR [rbp-0x18]
  40c41a:	mov    ecx,0x4
  40c41f:	mov    edx,0x4
  40c424:	mov    esi,0x5
  40c429:	mov    rdi,rax
  40c42c:	call   41a47e <flatcc_builder_table_add@@Base>
  40c431:	mov    QWORD PTR [rbp-0x8],rax
  40c435:	cmp    QWORD PTR [rbp-0x8],0x0
  40c43a:	jne    40c443 <_start@@Base+0x8193>
  40c43c:	mov    eax,0xffffffff
  40c441:	jmp    40c459 <_start@@Base+0x81a9>
  40c443:	mov    edx,DWORD PTR [rbp-0x1c]
  40c446:	mov    rax,QWORD PTR [rbp-0x8]
  40c44a:	mov    esi,edx
  40c44c:	mov    rdi,rax
  40c44f:	call   409a92 <_start@@Base+0x57e2>
  40c454:	mov    eax,0x0
  40c459:	leave  
  40c45a:	ret    
  40c45b:	push   rbp
  40c45c:	mov    rbp,rsp
  40c45f:	sub    rsp,0x20
  40c463:	mov    QWORD PTR [rbp-0x18],rdi
  40c467:	mov    QWORD PTR [rbp-0x20],rsi
  40c46b:	cmp    QWORD PTR [rbp-0x20],0x0
  40c470:	jne    40c479 <_start@@Base+0x81c9>
  40c472:	mov    eax,0x0
  40c477:	jmp    40c4be <_start@@Base+0x820e>
  40c479:	mov    rax,QWORD PTR [rbp-0x18]
  40c47d:	mov    ecx,0x8
  40c482:	mov    edx,0x8
  40c487:	mov    esi,0x6
  40c48c:	mov    rdi,rax
  40c48f:	call   41a47e <flatcc_builder_table_add@@Base>
  40c494:	mov    QWORD PTR [rbp-0x8],rax
  40c498:	cmp    QWORD PTR [rbp-0x8],0x0
  40c49d:	jne    40c4a6 <_start@@Base+0x81f6>
  40c49f:	mov    eax,0xffffffff
  40c4a4:	jmp    40c4be <_start@@Base+0x820e>
  40c4a6:	mov    rdx,QWORD PTR [rbp-0x20]
  40c4aa:	mov    rax,QWORD PTR [rbp-0x8]
  40c4ae:	mov    rsi,rdx
  40c4b1:	mov    rdi,rax
  40c4b4:	call   409b66 <_start@@Base+0x58b6>
  40c4b9:	mov    eax,0x0
  40c4be:	leave  
  40c4bf:	ret    
  40c4c0:	push   rbp
  40c4c1:	mov    rbp,rsp
  40c4c4:	sub    rsp,0x20
  40c4c8:	mov    QWORD PTR [rbp-0x18],rdi
  40c4cc:	mov    QWORD PTR [rbp-0x20],rsi
  40c4d0:	cmp    QWORD PTR [rbp-0x20],0x0
  40c4d5:	jne    40c4de <_start@@Base+0x822e>
  40c4d7:	mov    eax,0x0
  40c4dc:	jmp    40c523 <_start@@Base+0x8273>
  40c4de:	mov    rax,QWORD PTR [rbp-0x18]
  40c4e2:	mov    ecx,0x8
  40c4e7:	mov    edx,0x8
  40c4ec:	mov    esi,0x7
  40c4f1:	mov    rdi,rax
  40c4f4:	call   41a47e <flatcc_builder_table_add@@Base>
  40c4f9:	mov    QWORD PTR [rbp-0x8],rax
  40c4fd:	cmp    QWORD PTR [rbp-0x8],0x0
  40c502:	jne    40c50b <_start@@Base+0x825b>
  40c504:	mov    eax,0xffffffff
  40c509:	jmp    40c523 <_start@@Base+0x8273>
  40c50b:	mov    rdx,QWORD PTR [rbp-0x20]
  40c50f:	mov    rax,QWORD PTR [rbp-0x8]
  40c513:	mov    rsi,rdx
  40c516:	mov    rdi,rax
  40c519:	call   409ab9 <_start@@Base+0x5809>
  40c51e:	mov    eax,0x0
  40c523:	leave  
  40c524:	ret    
  40c525:	push   rbp
  40c526:	mov    rbp,rsp
  40c529:	sub    rsp,0x20
  40c52d:	mov    QWORD PTR [rbp-0x18],rdi
  40c531:	vmovss DWORD PTR [rbp-0x1c],xmm0
  40c536:	vxorps xmm0,xmm0,xmm0
  40c53a:	vucomiss xmm0,DWORD PTR [rbp-0x1c]
  40c53f:	jp     40c553 <_start@@Base+0x82a3>
  40c541:	vxorps xmm0,xmm0,xmm0
  40c545:	vucomiss xmm0,DWORD PTR [rbp-0x1c]
  40c54a:	jne    40c553 <_start@@Base+0x82a3>
  40c54c:	mov    eax,0x0
  40c551:	jmp    40c598 <_start@@Base+0x82e8>
  40c553:	mov    rax,QWORD PTR [rbp-0x18]
  40c557:	mov    ecx,0x4
  40c55c:	mov    edx,0x4
  40c561:	mov    esi,0x8
  40c566:	mov    rdi,rax
  40c569:	call   41a47e <flatcc_builder_table_add@@Base>
  40c56e:	mov    QWORD PTR [rbp-0x8],rax
  40c572:	cmp    QWORD PTR [rbp-0x8],0x0
  40c577:	jne    40c580 <_start@@Base+0x82d0>
  40c579:	mov    eax,0xffffffff
  40c57e:	jmp    40c598 <_start@@Base+0x82e8>
  40c580:	mov    edx,DWORD PTR [rbp-0x1c]
  40c583:	mov    rax,QWORD PTR [rbp-0x8]
  40c587:	vmovd  xmm0,edx
  40c58b:	mov    rdi,rax
  40c58e:	call   409bc1 <_start@@Base+0x5911>
  40c593:	mov    eax,0x0
  40c598:	leave  
  40c599:	ret    
  40c59a:	push   rbp
  40c59b:	mov    rbp,rsp
  40c59e:	sub    rsp,0x20
  40c5a2:	mov    QWORD PTR [rbp-0x18],rdi
  40c5a6:	vmovsd QWORD PTR [rbp-0x20],xmm0
  40c5ab:	vxorpd xmm0,xmm0,xmm0
  40c5af:	vucomisd xmm0,QWORD PTR [rbp-0x20]
  40c5b4:	jp     40c5c8 <_start@@Base+0x8318>
  40c5b6:	vxorpd xmm0,xmm0,xmm0
  40c5ba:	vucomisd xmm0,QWORD PTR [rbp-0x20]
  40c5bf:	jne    40c5c8 <_start@@Base+0x8318>
  40c5c1:	mov    eax,0x0
  40c5c6:	jmp    40c60f <_start@@Base+0x835f>
  40c5c8:	mov    rax,QWORD PTR [rbp-0x18]
  40c5cc:	mov    ecx,0x8
  40c5d1:	mov    edx,0x8
  40c5d6:	mov    esi,0x9
  40c5db:	mov    rdi,rax
  40c5de:	call   41a47e <flatcc_builder_table_add@@Base>
  40c5e3:	mov    QWORD PTR [rbp-0x8],rax
  40c5e7:	cmp    QWORD PTR [rbp-0x8],0x0
  40c5ec:	jne    40c5f5 <_start@@Base+0x8345>
  40c5ee:	mov    eax,0xffffffff
  40c5f3:	jmp    40c60f <_start@@Base+0x835f>
  40c5f5:	mov    rdx,QWORD PTR [rbp-0x20]
  40c5f9:	mov    rax,QWORD PTR [rbp-0x8]
  40c5fd:	vmovq  xmm0,rdx
  40c602:	mov    rdi,rax
  40c605:	call   409c21 <_start@@Base+0x5971>
  40c60a:	mov    eax,0x0
  40c60f:	leave  
  40c610:	ret    
  40c611:	push   rbp
  40c612:	mov    rbp,rsp
  40c615:	sub    rsp,0x20
  40c619:	mov    QWORD PTR [rbp-0x18],rdi
  40c61d:	mov    DWORD PTR [rbp-0x1c],esi
  40c620:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c624:	je     40c652 <_start@@Base+0x83a2>
  40c626:	mov    rax,QWORD PTR [rbp-0x18]
  40c62a:	mov    esi,0xa
  40c62f:	mov    rdi,rax
  40c632:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40c637:	mov    QWORD PTR [rbp-0x8],rax
  40c63b:	cmp    QWORD PTR [rbp-0x8],0x0
  40c640:	je     40c652 <_start@@Base+0x83a2>
  40c642:	mov    rax,QWORD PTR [rbp-0x8]
  40c646:	mov    edx,DWORD PTR [rbp-0x1c]
  40c649:	mov    DWORD PTR [rax],edx
  40c64b:	mov    eax,0x0
  40c650:	jmp    40c657 <_start@@Base+0x83a7>
  40c652:	mov    eax,0xffffffff
  40c657:	leave  
  40c658:	ret    
  40c659:	push   rbp
  40c65a:	mov    rbp,rsp
  40c65d:	sub    rsp,0x20
  40c661:	mov    QWORD PTR [rbp-0x18],rdi
  40c665:	mov    DWORD PTR [rbp-0x1c],esi
  40c668:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c66c:	je     40c69a <_start@@Base+0x83ea>
  40c66e:	mov    rax,QWORD PTR [rbp-0x18]
  40c672:	mov    esi,0xb
  40c677:	mov    rdi,rax
  40c67a:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40c67f:	mov    QWORD PTR [rbp-0x8],rax
  40c683:	cmp    QWORD PTR [rbp-0x8],0x0
  40c688:	je     40c69a <_start@@Base+0x83ea>
  40c68a:	mov    rax,QWORD PTR [rbp-0x8]
  40c68e:	mov    edx,DWORD PTR [rbp-0x1c]
  40c691:	mov    DWORD PTR [rax],edx
  40c693:	mov    eax,0x0
  40c698:	jmp    40c69f <_start@@Base+0x83ef>
  40c69a:	mov    eax,0xffffffff
  40c69f:	leave  
  40c6a0:	ret    
  40c6a1:	push   rbp
  40c6a2:	mov    rbp,rsp
  40c6a5:	sub    rsp,0x30
  40c6a9:	mov    QWORD PTR [rbp-0x8],rdi
  40c6ad:	mov    eax,esi
  40c6af:	mov    esi,edx
  40c6b1:	mov    edx,ecx
  40c6b3:	mov    ecx,r8d
  40c6b6:	mov    DWORD PTR [rbp-0x1c],r9d
  40c6ba:	vmovss DWORD PTR [rbp-0x20],xmm0
  40c6bf:	vmovsd QWORD PTR [rbp-0x28],xmm1
  40c6c4:	mov    BYTE PTR [rbp-0xc],al
  40c6c7:	mov    eax,esi
  40c6c9:	mov    BYTE PTR [rbp-0x10],al
  40c6cc:	mov    eax,edx
  40c6ce:	mov    WORD PTR [rbp-0x14],ax
  40c6d2:	mov    eax,ecx
  40c6d4:	mov    WORD PTR [rbp-0x18],ax
  40c6d8:	mov    rax,QWORD PTR [rbp-0x8]
  40c6dc:	mov    rdi,rax
  40c6df:	call   40a7fb <_start@@Base+0x654b>
  40c6e4:	test   eax,eax
  40c6e6:	jne    40c80c <_start@@Base+0x855c>
  40c6ec:	mov    rdx,QWORD PTR [rbp+0x18]
  40c6f0:	mov    rax,QWORD PTR [rbp-0x8]
  40c6f4:	mov    rsi,rdx
  40c6f7:	mov    rdi,rax
  40c6fa:	call   40c45b <_start@@Base+0x81ab>
  40c6ff:	test   eax,eax
  40c701:	jne    40c80c <_start@@Base+0x855c>
  40c707:	mov    rdx,QWORD PTR [rbp+0x20]
  40c70b:	mov    rax,QWORD PTR [rbp-0x8]
  40c70f:	mov    rsi,rdx
  40c712:	mov    rdi,rax
  40c715:	call   40c4c0 <_start@@Base+0x8210>
  40c71a:	test   eax,eax
  40c71c:	jne    40c80c <_start@@Base+0x855c>
  40c722:	mov    rdx,QWORD PTR [rbp-0x28]
  40c726:	mov    rax,QWORD PTR [rbp-0x8]
  40c72a:	vmovq  xmm0,rdx
  40c72f:	mov    rdi,rax
  40c732:	call   40c59a <_start@@Base+0x82ea>
  40c737:	test   eax,eax
  40c739:	jne    40c80c <_start@@Base+0x855c>
  40c73f:	mov    edx,DWORD PTR [rbp-0x1c]
  40c742:	mov    rax,QWORD PTR [rbp-0x8]
  40c746:	mov    esi,edx
  40c748:	mov    rdi,rax
  40c74b:	call   40c399 <_start@@Base+0x80e9>
  40c750:	test   eax,eax
  40c752:	jne    40c80c <_start@@Base+0x855c>
  40c758:	mov    rax,QWORD PTR [rbp-0x8]
  40c75c:	mov    esi,DWORD PTR [rbp+0x10]
  40c75f:	mov    rdi,rax
  40c762:	call   40c3fa <_start@@Base+0x814a>
  40c767:	test   eax,eax
  40c769:	jne    40c80c <_start@@Base+0x855c>
  40c76f:	mov    edx,DWORD PTR [rbp-0x20]
  40c772:	mov    rax,QWORD PTR [rbp-0x8]
  40c776:	vmovd  xmm0,edx
  40c77a:	mov    rdi,rax
  40c77d:	call   40c525 <_start@@Base+0x8275>
  40c782:	test   eax,eax
  40c784:	jne    40c80c <_start@@Base+0x855c>
  40c78a:	mov    edx,DWORD PTR [rbp+0x28]
  40c78d:	mov    rax,QWORD PTR [rbp-0x8]
  40c791:	mov    esi,edx
  40c793:	mov    rdi,rax
  40c796:	call   40c611 <_start@@Base+0x8361>
  40c79b:	test   eax,eax
  40c79d:	jne    40c80c <_start@@Base+0x855c>
  40c79f:	mov    edx,DWORD PTR [rbp+0x30]
  40c7a2:	mov    rax,QWORD PTR [rbp-0x8]
  40c7a6:	mov    esi,edx
  40c7a8:	mov    rdi,rax
  40c7ab:	call   40c659 <_start@@Base+0x83a9>
  40c7b0:	test   eax,eax
  40c7b2:	jne    40c80c <_start@@Base+0x855c>
  40c7b4:	movsx  edx,WORD PTR [rbp-0x14]
  40c7b8:	mov    rax,QWORD PTR [rbp-0x8]
  40c7bc:	mov    esi,edx
  40c7be:	mov    rdi,rax
  40c7c1:	call   40c2cd <_start@@Base+0x801d>
  40c7c6:	test   eax,eax
  40c7c8:	jne    40c80c <_start@@Base+0x855c>
  40c7ca:	movzx  edx,WORD PTR [rbp-0x18]
  40c7ce:	mov    rax,QWORD PTR [rbp-0x8]
  40c7d2:	mov    esi,edx
  40c7d4:	mov    rdi,rax
  40c7d7:	call   40c333 <_start@@Base+0x8083>
  40c7dc:	test   eax,eax
  40c7de:	jne    40c80c <_start@@Base+0x855c>
  40c7e0:	movsx  edx,BYTE PTR [rbp-0xc]
  40c7e4:	mov    rax,QWORD PTR [rbp-0x8]
  40c7e8:	mov    esi,edx
  40c7ea:	mov    rdi,rax
  40c7ed:	call   40c205 <_start@@Base+0x7f55>
  40c7f2:	test   eax,eax
  40c7f4:	jne    40c80c <_start@@Base+0x855c>
  40c7f6:	movzx  edx,BYTE PTR [rbp-0x10]
  40c7fa:	mov    rax,QWORD PTR [rbp-0x8]
  40c7fe:	mov    esi,edx
  40c800:	mov    rdi,rax
  40c803:	call   40c269 <_start@@Base+0x7fb9>
  40c808:	test   eax,eax
  40c80a:	je     40c813 <_start@@Base+0x8563>
  40c80c:	mov    eax,0x0
  40c811:	jmp    40c81f <_start@@Base+0x856f>
  40c813:	mov    rax,QWORD PTR [rbp-0x8]
  40c817:	mov    rdi,rax
  40c81a:	call   40a81a <_start@@Base+0x656a>
  40c81f:	leave  
  40c820:	ret    
  40c821:	push   rbp
  40c822:	mov    rbp,rsp
  40c825:	sub    rsp,0x30
  40c829:	mov    QWORD PTR [rbp-0x8],rdi
  40c82d:	mov    eax,esi
  40c82f:	mov    esi,edx
  40c831:	mov    edx,ecx
  40c833:	mov    ecx,r8d
  40c836:	mov    DWORD PTR [rbp-0x1c],r9d
  40c83a:	vmovss DWORD PTR [rbp-0x20],xmm0
  40c83f:	vmovsd QWORD PTR [rbp-0x28],xmm1
  40c844:	mov    BYTE PTR [rbp-0xc],al
  40c847:	mov    eax,esi
  40c849:	mov    BYTE PTR [rbp-0x10],al
  40c84c:	mov    eax,edx
  40c84e:	mov    WORD PTR [rbp-0x14],ax
  40c852:	mov    eax,ecx
  40c854:	mov    WORD PTR [rbp-0x18],ax
  40c858:	mov    rax,QWORD PTR [rbp-0x8]
  40c85c:	lea    rsi,[rip+0x11911]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40c863:	mov    rdi,rax
  40c866:	call   409db7 <_start@@Base+0x5b07>
  40c86b:	test   eax,eax
  40c86d:	je     40c876 <_start@@Base+0x85c6>
  40c86f:	mov    eax,0x0
  40c874:	jmp    40c8da <_start@@Base+0x862a>
  40c876:	movzx  r10d,WORD PTR [rbp-0x18]
  40c87b:	movsx  ecx,WORD PTR [rbp-0x14]
  40c87f:	movzx  edx,BYTE PTR [rbp-0x10]
  40c883:	movsx  esi,BYTE PTR [rbp-0xc]
  40c887:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  40c88c:	mov    edi,DWORD PTR [rbp-0x20]
  40c88f:	mov    r9d,DWORD PTR [rbp-0x1c]
  40c893:	mov    rax,QWORD PTR [rbp-0x8]
  40c897:	sub    rsp,0x8
  40c89b:	mov    r8d,DWORD PTR [rbp+0x30]
  40c89f:	push   r8
  40c8a1:	mov    r8d,DWORD PTR [rbp+0x28]
  40c8a5:	push   r8
  40c8a7:	push   QWORD PTR [rbp+0x20]
  40c8aa:	push   QWORD PTR [rbp+0x18]
  40c8ad:	mov    r8d,DWORD PTR [rbp+0x10]
  40c8b1:	push   r8
  40c8b3:	vmovapd xmm1,xmm0
  40c8b7:	vmovd  xmm0,edi
  40c8bb:	mov    r8d,r10d
  40c8be:	mov    rdi,rax
  40c8c1:	call   40c6a1 <_start@@Base+0x83f1>
  40c8c6:	add    rsp,0x30
  40c8ca:	mov    edx,eax
  40c8cc:	mov    rax,QWORD PTR [rbp-0x8]
  40c8d0:	mov    esi,edx
  40c8d2:	mov    rdi,rax
  40c8d5:	call   409e0f <_start@@Base+0x5b5f>
  40c8da:	leave  
  40c8db:	ret    
  40c8dc:	push   rbp
  40c8dd:	mov    rbp,rsp
  40c8e0:	sub    rsp,0x20
  40c8e4:	mov    QWORD PTR [rbp-0x18],rdi
  40c8e8:	mov    DWORD PTR [rbp-0x1c],esi
  40c8eb:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c8ef:	jne    40c8f8 <_start@@Base+0x8648>
  40c8f1:	mov    eax,0x0
  40c8f6:	jmp    40c93b <_start@@Base+0x868b>
  40c8f8:	mov    rax,QWORD PTR [rbp-0x18]
  40c8fc:	mov    ecx,0x4
  40c901:	mov    edx,0x4
  40c906:	mov    esi,0x0
  40c90b:	mov    rdi,rax
  40c90e:	call   41a47e <flatcc_builder_table_add@@Base>
  40c913:	mov    QWORD PTR [rbp-0x8],rax
  40c917:	cmp    QWORD PTR [rbp-0x8],0x0
  40c91c:	jne    40c925 <_start@@Base+0x8675>
  40c91e:	mov    eax,0xffffffff
  40c923:	jmp    40c93b <_start@@Base+0x868b>
  40c925:	mov    edx,DWORD PTR [rbp-0x1c]
  40c928:	mov    rax,QWORD PTR [rbp-0x8]
  40c92c:	mov    esi,edx
  40c92e:	mov    rdi,rax
  40c931:	call   409b3f <_start@@Base+0x588f>
  40c936:	mov    eax,0x0
  40c93b:	leave  
  40c93c:	ret    
  40c93d:	push   rbp
  40c93e:	mov    rbp,rsp
  40c941:	sub    rsp,0x10
  40c945:	mov    QWORD PTR [rbp-0x8],rdi
  40c949:	mov    DWORD PTR [rbp-0xc],esi
  40c94c:	mov    rax,QWORD PTR [rbp-0x8]
  40c950:	mov    rdi,rax
  40c953:	call   40a86f <_start@@Base+0x65bf>
  40c958:	test   eax,eax
  40c95a:	jne    40c971 <_start@@Base+0x86c1>
  40c95c:	mov    edx,DWORD PTR [rbp-0xc]
  40c95f:	mov    rax,QWORD PTR [rbp-0x8]
  40c963:	mov    esi,edx
  40c965:	mov    rdi,rax
  40c968:	call   40c8dc <_start@@Base+0x862c>
  40c96d:	test   eax,eax
  40c96f:	je     40c978 <_start@@Base+0x86c8>
  40c971:	mov    eax,0x0
  40c976:	jmp    40c984 <_start@@Base+0x86d4>
  40c978:	mov    rax,QWORD PTR [rbp-0x8]
  40c97c:	mov    rdi,rax
  40c97f:	call   40a88e <_start@@Base+0x65de>
  40c984:	leave  
  40c985:	ret    
  40c986:	push   rbp
  40c987:	mov    rbp,rsp
  40c98a:	sub    rsp,0x20
  40c98e:	mov    QWORD PTR [rbp-0x18],rdi
  40c992:	mov    QWORD PTR [rbp-0x20],rsi
  40c996:	movzx  eax,BYTE PTR [rbp-0x20]
  40c99a:	test   al,al
  40c99c:	jne    40c9a5 <_start@@Base+0x86f5>
  40c99e:	mov    eax,0x0
  40c9a3:	jmp    40ca14 <_start@@Base+0x8764>
  40c9a5:	mov    eax,DWORD PTR [rbp-0x1c]
  40c9a8:	test   eax,eax
  40c9aa:	jne    40c9b3 <_start@@Base+0x8703>
  40c9ac:	mov    eax,0xffffffff
  40c9b1:	jmp    40ca14 <_start@@Base+0x8764>
  40c9b3:	mov    rax,QWORD PTR [rbp-0x18]
  40c9b7:	mov    ecx,0x1
  40c9bc:	mov    edx,0x1
  40c9c1:	mov    esi,0x0
  40c9c6:	mov    rdi,rax
  40c9c9:	call   41a47e <flatcc_builder_table_add@@Base>
  40c9ce:	mov    QWORD PTR [rbp-0x10],rax
  40c9d2:	cmp    QWORD PTR [rbp-0x10],0x0
  40c9d7:	je     40c9f5 <_start@@Base+0x8745>
  40c9d9:	mov    rax,QWORD PTR [rbp-0x18]
  40c9dd:	mov    esi,0x1
  40c9e2:	mov    rdi,rax
  40c9e5:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40c9ea:	mov    QWORD PTR [rbp-0x8],rax
  40c9ee:	cmp    QWORD PTR [rbp-0x8],0x0
  40c9f3:	jne    40c9fc <_start@@Base+0x874c>
  40c9f5:	mov    eax,0xffffffff
  40c9fa:	jmp    40ca14 <_start@@Base+0x8764>
  40c9fc:	movzx  eax,BYTE PTR [rbp-0x20]
  40ca00:	mov    rdx,QWORD PTR [rbp-0x10]
  40ca04:	mov    BYTE PTR [rdx],al
  40ca06:	mov    edx,DWORD PTR [rbp-0x1c]
  40ca09:	mov    rax,QWORD PTR [rbp-0x8]
  40ca0d:	mov    DWORD PTR [rax],edx
  40ca0f:	mov    eax,0x0
  40ca14:	leave  
  40ca15:	ret    
  40ca16:	push   rbp
  40ca17:	mov    rbp,rsp
  40ca1a:	sub    rsp,0x20
  40ca1e:	mov    QWORD PTR [rbp-0x18],rdi
  40ca22:	mov    eax,esi
  40ca24:	mov    WORD PTR [rbp-0x1c],ax
  40ca28:	movzx  edx,WORD PTR [rbp-0x1c]
  40ca2c:	mov    rax,QWORD PTR [rbp-0x18]
  40ca30:	mov    esi,edx
  40ca32:	mov    rdi,rax
  40ca35:	call   40a46e <_start@@Base+0x61be>
  40ca3a:	mov    DWORD PTR [rbp-0x4],eax
  40ca3d:	cmp    DWORD PTR [rbp-0x4],0x0
  40ca41:	je     40ca61 <_start@@Base+0x87b1>
  40ca43:	mov    eax,DWORD PTR [rbp-0x4]
  40ca46:	mov    edi,eax
  40ca48:	call   40aa0c <_start@@Base+0x675c>
  40ca4d:	mov    rdx,rax
  40ca50:	mov    rax,QWORD PTR [rbp-0x18]
  40ca54:	mov    rsi,rdx
  40ca57:	mov    rdi,rax
  40ca5a:	call   40c986 <_start@@Base+0x86d6>
  40ca5f:	jmp    40ca66 <_start@@Base+0x87b6>
  40ca61:	mov    eax,0xffffffff
  40ca66:	leave  
  40ca67:	ret    
  40ca68:	push   rbp
  40ca69:	mov    rbp,rsp
  40ca6c:	sub    rsp,0x20
  40ca70:	mov    QWORD PTR [rbp-0x18],rdi
  40ca74:	mov    QWORD PTR [rbp-0x20],rsi
  40ca78:	movzx  eax,BYTE PTR [rbp-0x20]
  40ca7c:	test   al,al
  40ca7e:	jne    40ca87 <_start@@Base+0x87d7>
  40ca80:	mov    eax,0x0
  40ca85:	jmp    40caf6 <_start@@Base+0x8846>
  40ca87:	mov    eax,DWORD PTR [rbp-0x1c]
  40ca8a:	test   eax,eax
  40ca8c:	jne    40ca95 <_start@@Base+0x87e5>
  40ca8e:	mov    eax,0xffffffff
  40ca93:	jmp    40caf6 <_start@@Base+0x8846>
  40ca95:	mov    rax,QWORD PTR [rbp-0x18]
  40ca99:	mov    ecx,0x1
  40ca9e:	mov    edx,0x1
  40caa3:	mov    esi,0x2
  40caa8:	mov    rdi,rax
  40caab:	call   41a47e <flatcc_builder_table_add@@Base>
  40cab0:	mov    QWORD PTR [rbp-0x10],rax
  40cab4:	cmp    QWORD PTR [rbp-0x10],0x0
  40cab9:	je     40cad7 <_start@@Base+0x8827>
  40cabb:	mov    rax,QWORD PTR [rbp-0x18]
  40cabf:	mov    esi,0x3
  40cac4:	mov    rdi,rax
  40cac7:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40cacc:	mov    QWORD PTR [rbp-0x8],rax
  40cad0:	cmp    QWORD PTR [rbp-0x8],0x0
  40cad5:	jne    40cade <_start@@Base+0x882e>
  40cad7:	mov    eax,0xffffffff
  40cadc:	jmp    40caf6 <_start@@Base+0x8846>
  40cade:	movzx  eax,BYTE PTR [rbp-0x20]
  40cae2:	mov    rdx,QWORD PTR [rbp-0x10]
  40cae6:	mov    BYTE PTR [rdx],al
  40cae8:	mov    edx,DWORD PTR [rbp-0x1c]
  40caeb:	mov    rax,QWORD PTR [rbp-0x8]
  40caef:	mov    DWORD PTR [rax],edx
  40caf1:	mov    eax,0x0
  40caf6:	leave  
  40caf7:	ret    
  40caf8:	push   rbp
  40caf9:	mov    rbp,rsp
  40cafc:	sub    rsp,0x10
  40cb00:	mov    QWORD PTR [rbp-0x8],rdi
  40cb04:	mov    DWORD PTR [rbp-0xc],esi
  40cb07:	mov    eax,DWORD PTR [rbp-0xc]
  40cb0a:	mov    edi,eax
  40cb0c:	call   40a9f5 <_start@@Base+0x6745>
  40cb11:	mov    rdx,rax
  40cb14:	mov    rax,QWORD PTR [rbp-0x8]
  40cb18:	mov    rsi,rdx
  40cb1b:	mov    rdi,rax
  40cb1e:	call   40ca68 <_start@@Base+0x87b8>
  40cb23:	leave  
  40cb24:	ret    
  40cb25:	push   rbp
  40cb26:	mov    rbp,rsp
  40cb29:	sub    rsp,0x20
  40cb2d:	mov    QWORD PTR [rbp-0x18],rdi
  40cb31:	mov    QWORD PTR [rbp-0x20],rsi
  40cb35:	movzx  eax,BYTE PTR [rbp-0x20]
  40cb39:	test   al,al
  40cb3b:	jne    40cb44 <_start@@Base+0x8894>
  40cb3d:	mov    eax,0x0
  40cb42:	jmp    40cbb3 <_start@@Base+0x8903>
  40cb44:	mov    eax,DWORD PTR [rbp-0x1c]
  40cb47:	test   eax,eax
  40cb49:	jne    40cb52 <_start@@Base+0x88a2>
  40cb4b:	mov    eax,0xffffffff
  40cb50:	jmp    40cbb3 <_start@@Base+0x8903>
  40cb52:	mov    rax,QWORD PTR [rbp-0x18]
  40cb56:	mov    ecx,0x1
  40cb5b:	mov    edx,0x1
  40cb60:	mov    esi,0x4
  40cb65:	mov    rdi,rax
  40cb68:	call   41a47e <flatcc_builder_table_add@@Base>
  40cb6d:	mov    QWORD PTR [rbp-0x10],rax
  40cb71:	cmp    QWORD PTR [rbp-0x10],0x0
  40cb76:	je     40cb94 <_start@@Base+0x88e4>
  40cb78:	mov    rax,QWORD PTR [rbp-0x18]
  40cb7c:	mov    esi,0x5
  40cb81:	mov    rdi,rax
  40cb84:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40cb89:	mov    QWORD PTR [rbp-0x8],rax
  40cb8d:	cmp    QWORD PTR [rbp-0x8],0x0
  40cb92:	jne    40cb9b <_start@@Base+0x88eb>
  40cb94:	mov    eax,0xffffffff
  40cb99:	jmp    40cbb3 <_start@@Base+0x8903>
  40cb9b:	movzx  eax,BYTE PTR [rbp-0x20]
  40cb9f:	mov    rdx,QWORD PTR [rbp-0x10]
  40cba3:	mov    BYTE PTR [rdx],al
  40cba5:	mov    edx,DWORD PTR [rbp-0x1c]
  40cba8:	mov    rax,QWORD PTR [rbp-0x8]
  40cbac:	mov    DWORD PTR [rax],edx
  40cbae:	mov    eax,0x0
  40cbb3:	leave  
  40cbb4:	ret    
  40cbb5:	push   rbp
  40cbb6:	mov    rbp,rsp
  40cbb9:	sub    rsp,0x10
  40cbbd:	mov    QWORD PTR [rbp-0x8],rdi
  40cbc1:	mov    DWORD PTR [rbp-0xc],esi
  40cbc4:	mov    eax,DWORD PTR [rbp-0xc]
  40cbc7:	mov    edi,eax
  40cbc9:	call   40aa3a <_start@@Base+0x678a>
  40cbce:	mov    rdx,rax
  40cbd1:	mov    rax,QWORD PTR [rbp-0x8]
  40cbd5:	mov    rsi,rdx
  40cbd8:	mov    rdi,rax
  40cbdb:	call   40cb25 <_start@@Base+0x8875>
  40cbe0:	leave  
  40cbe1:	ret    
  40cbe2:	push   rbp
  40cbe3:	mov    rbp,rsp
  40cbe6:	sub    rsp,0x10
  40cbea:	mov    QWORD PTR [rbp-0x8],rdi
  40cbee:	mov    QWORD PTR [rbp-0x10],rsi
  40cbf2:	mov    rdx,QWORD PTR [rbp-0x10]
  40cbf6:	mov    rax,QWORD PTR [rbp-0x8]
  40cbfa:	mov    rsi,rdx
  40cbfd:	mov    rdi,rax
  40cc00:	call   41a31b <flatcc_builder_create_string_str@@Base>
  40cc05:	mov    edx,eax
  40cc07:	mov    rax,QWORD PTR [rbp-0x8]
  40cc0b:	mov    esi,edx
  40cc0d:	mov    rdi,rax
  40cc10:	call   40cbb5 <_start@@Base+0x8905>
  40cc15:	leave  
  40cc16:	ret    
  40cc17:	push   rbp
  40cc18:	mov    rbp,rsp
  40cc1b:	sub    rsp,0x20
  40cc1f:	mov    QWORD PTR [rbp-0x18],rdi
  40cc23:	mov    QWORD PTR [rbp-0x20],rsi
  40cc27:	movzx  eax,BYTE PTR [rbp-0x20]
  40cc2b:	test   al,al
  40cc2d:	jne    40cc36 <_start@@Base+0x8986>
  40cc2f:	mov    eax,0x0
  40cc34:	jmp    40cca5 <_start@@Base+0x89f5>
  40cc36:	mov    eax,DWORD PTR [rbp-0x1c]
  40cc39:	test   eax,eax
  40cc3b:	jne    40cc44 <_start@@Base+0x8994>
  40cc3d:	mov    eax,0xffffffff
  40cc42:	jmp    40cca5 <_start@@Base+0x89f5>
  40cc44:	mov    rax,QWORD PTR [rbp-0x18]
  40cc48:	mov    ecx,0x1
  40cc4d:	mov    edx,0x1
  40cc52:	mov    esi,0x6
  40cc57:	mov    rdi,rax
  40cc5a:	call   41a47e <flatcc_builder_table_add@@Base>
  40cc5f:	mov    QWORD PTR [rbp-0x10],rax
  40cc63:	cmp    QWORD PTR [rbp-0x10],0x0
  40cc68:	je     40cc86 <_start@@Base+0x89d6>
  40cc6a:	mov    rax,QWORD PTR [rbp-0x18]
  40cc6e:	mov    esi,0x7
  40cc73:	mov    rdi,rax
  40cc76:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40cc7b:	mov    QWORD PTR [rbp-0x8],rax
  40cc7f:	cmp    QWORD PTR [rbp-0x8],0x0
  40cc84:	jne    40cc8d <_start@@Base+0x89dd>
  40cc86:	mov    eax,0xffffffff
  40cc8b:	jmp    40cca5 <_start@@Base+0x89f5>
  40cc8d:	movzx  eax,BYTE PTR [rbp-0x20]
  40cc91:	mov    rdx,QWORD PTR [rbp-0x10]
  40cc95:	mov    BYTE PTR [rdx],al
  40cc97:	mov    edx,DWORD PTR [rbp-0x1c]
  40cc9a:	mov    rax,QWORD PTR [rbp-0x8]
  40cc9e:	mov    DWORD PTR [rax],edx
  40cca0:	mov    eax,0x0
  40cca5:	leave  
  40cca6:	ret    
  40cca7:	push   rbp
  40cca8:	mov    rbp,rsp
  40ccab:	sub    rsp,0x10
  40ccaf:	mov    QWORD PTR [rbp-0x8],rdi
  40ccb3:	mov    DWORD PTR [rbp-0xc],esi
  40ccb6:	mov    eax,DWORD PTR [rbp-0xc]
  40ccb9:	mov    edi,eax
  40ccbb:	call   40aa0c <_start@@Base+0x675c>
  40ccc0:	mov    rdx,rax
  40ccc3:	mov    rax,QWORD PTR [rbp-0x8]
  40ccc7:	mov    rsi,rdx
  40ccca:	mov    rdi,rax
  40cccd:	call   40cc17 <_start@@Base+0x8967>
  40ccd2:	leave  
  40ccd3:	ret    
  40ccd4:	push   rbp
  40ccd5:	mov    rbp,rsp
  40ccd8:	sub    rsp,0x20
  40ccdc:	mov    QWORD PTR [rbp-0x18],rdi
  40cce0:	mov    QWORD PTR [rbp-0x20],rsi
  40cce4:	mov    eax,DWORD PTR [rbp-0x20]
  40cce7:	test   eax,eax
  40cce9:	je     40ccf2 <_start@@Base+0x8a42>
  40cceb:	mov    eax,DWORD PTR [rbp-0x1c]
  40ccee:	test   eax,eax
  40ccf0:	jne    40cd0a <_start@@Base+0x8a5a>
  40ccf2:	mov    edx,DWORD PTR [rbp-0x20]
  40ccf5:	mov    eax,DWORD PTR [rbp-0x1c]
  40ccf8:	cmp    edx,eax
  40ccfa:	jne    40cd03 <_start@@Base+0x8a53>
  40ccfc:	mov    eax,0x0
  40cd01:	jmp    40cd67 <_start@@Base+0x8ab7>
  40cd03:	mov    eax,0xffffffff
  40cd08:	jmp    40cd67 <_start@@Base+0x8ab7>
  40cd0a:	mov    rax,QWORD PTR [rbp-0x18]
  40cd0e:	mov    esi,0x8
  40cd13:	mov    rdi,rax
  40cd16:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40cd1b:	mov    QWORD PTR [rbp-0x8],rax
  40cd1f:	cmp    QWORD PTR [rbp-0x8],0x0
  40cd24:	jne    40cd2d <_start@@Base+0x8a7d>
  40cd26:	mov    eax,0xffffffff
  40cd2b:	jmp    40cd67 <_start@@Base+0x8ab7>
  40cd2d:	mov    edx,DWORD PTR [rbp-0x20]
  40cd30:	mov    rax,QWORD PTR [rbp-0x8]
  40cd34:	mov    DWORD PTR [rax],edx
  40cd36:	mov    rax,QWORD PTR [rbp-0x18]
  40cd3a:	mov    esi,0x9
  40cd3f:	mov    rdi,rax
  40cd42:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  40cd47:	mov    QWORD PTR [rbp-0x8],rax
  40cd4b:	cmp    QWORD PTR [rbp-0x8],0x0
  40cd50:	jne    40cd59 <_start@@Base+0x8aa9>
  40cd52:	mov    eax,0xffffffff
  40cd57:	jmp    40cd67 <_start@@Base+0x8ab7>
  40cd59:	mov    edx,DWORD PTR [rbp-0x1c]
  40cd5c:	mov    rax,QWORD PTR [rbp-0x8]
  40cd60:	mov    DWORD PTR [rax],edx
  40cd62:	mov    eax,0x0
  40cd67:	leave  
  40cd68:	ret    
  40cd69:	push   rbp
  40cd6a:	mov    rbp,rsp
  40cd6d:	sub    rsp,0x10
  40cd71:	mov    QWORD PTR [rbp-0x8],rdi
  40cd75:	mov    rax,QWORD PTR [rbp-0x8]
  40cd79:	mov    rdi,rax
  40cd7c:	call   419ccd <flatcc_builder_start_union_vector@@Base>
  40cd81:	leave  
  40cd82:	ret    
  40cd83:	push   rbp
  40cd84:	mov    rbp,rsp
  40cd87:	sub    rsp,0x10
  40cd8b:	mov    QWORD PTR [rbp-0x8],rdi
  40cd8f:	mov    rax,QWORD PTR [rbp-0x8]
  40cd93:	mov    rdi,rax
  40cd96:	call   419d3d <flatcc_builder_end_union_vector@@Base>
  40cd9b:	mov    rdx,rax
  40cd9e:	mov    rax,QWORD PTR [rbp-0x8]
  40cda2:	mov    rsi,rdx
  40cda5:	mov    rdi,rax
  40cda8:	call   40ccd4 <_start@@Base+0x8a24>
  40cdad:	leave  
  40cdae:	ret    
  40cdaf:	push   rbp
  40cdb0:	mov    rbp,rsp
  40cdb3:	sub    rsp,0x10
  40cdb7:	mov    QWORD PTR [rbp-0x8],rdi
  40cdbb:	mov    QWORD PTR [rbp-0x10],rsi
  40cdbf:	mov    rdx,QWORD PTR [rbp-0x10]
  40cdc3:	mov    rax,QWORD PTR [rbp-0x8]
  40cdc7:	mov    rsi,rdx
  40cdca:	mov    rdi,rax
  40cdcd:	call   419fe0 <flatcc_builder_union_vector_push@@Base>
  40cdd2:	leave  
  40cdd3:	ret    
  40cdd4:	push   rbp
  40cdd5:	mov    rbp,rsp
  40cdd8:	sub    rsp,0x10
  40cddc:	mov    QWORD PTR [rbp-0x8],rdi
  40cde0:	mov    DWORD PTR [rbp-0xc],esi
  40cde3:	mov    eax,DWORD PTR [rbp-0xc]
  40cde6:	mov    edi,eax
  40cde8:	call   40a9f5 <_start@@Base+0x6745>
  40cded:	mov    rdx,rax
  40cdf0:	mov    rax,QWORD PTR [rbp-0x8]
  40cdf4:	mov    rsi,rdx
  40cdf7:	mov    rdi,rax
  40cdfa:	call   40aa51 <_start@@Base+0x67a1>
  40cdff:	leave  
  40ce00:	ret    
  40ce01:	push   rbp
  40ce02:	mov    rbp,rsp
  40ce05:	sub    rsp,0x10
  40ce09:	mov    QWORD PTR [rbp-0x8],rdi
  40ce0d:	mov    DWORD PTR [rbp-0xc],esi
  40ce10:	mov    edx,DWORD PTR [rbp-0xc]
  40ce13:	mov    rax,QWORD PTR [rbp-0x8]
  40ce17:	mov    esi,edx
  40ce19:	mov    rdi,rax
  40ce1c:	call   40c93d <_start@@Base+0x868d>
  40ce21:	mov    edi,eax
  40ce23:	call   40a9f5 <_start@@Base+0x6745>
  40ce28:	mov    rdx,rax
  40ce2b:	mov    rax,QWORD PTR [rbp-0x8]
  40ce2f:	mov    rsi,rdx
  40ce32:	mov    rdi,rax
  40ce35:	call   40aa51 <_start@@Base+0x67a1>
  40ce3a:	leave  
  40ce3b:	ret    
  40ce3c:	push   rbp
  40ce3d:	mov    rbp,rsp
  40ce40:	sub    rsp,0x10
  40ce44:	mov    QWORD PTR [rbp-0x8],rdi
  40ce48:	mov    rax,QWORD PTR [rbp-0x8]
  40ce4c:	mov    rdi,rax
  40ce4f:	call   40a4e4 <_start@@Base+0x6234>
  40ce54:	leave  
  40ce55:	ret    
  40ce56:	push   rbp
  40ce57:	mov    rbp,rsp
  40ce5a:	sub    rsp,0x10
  40ce5e:	mov    QWORD PTR [rbp-0x8],rdi
  40ce62:	mov    rax,QWORD PTR [rbp-0x8]
  40ce66:	mov    rdi,rax
  40ce69:	call   40a508 <_start@@Base+0x6258>
  40ce6e:	mov    edi,eax
  40ce70:	call   40aa23 <_start@@Base+0x6773>
  40ce75:	mov    rdx,rax
  40ce78:	mov    rax,QWORD PTR [rbp-0x8]
  40ce7c:	mov    rsi,rdx
  40ce7f:	mov    rdi,rax
  40ce82:	call   40aa51 <_start@@Base+0x67a1>
  40ce87:	leave  
  40ce88:	ret    
  40ce89:	push   rbp
  40ce8a:	mov    rbp,rsp
  40ce8d:	sub    rsp,0x10
  40ce91:	mov    QWORD PTR [rbp-0x8],rdi
  40ce95:	mov    DWORD PTR [rbp-0xc],esi
  40ce98:	mov    eax,DWORD PTR [rbp-0xc]
  40ce9b:	mov    edi,eax
  40ce9d:	call   40aa23 <_start@@Base+0x6773>
  40cea2:	mov    rdx,rax
  40cea5:	mov    rax,QWORD PTR [rbp-0x8]
  40cea9:	mov    rsi,rdx
  40ceac:	mov    rdi,rax
  40ceaf:	call   40aa51 <_start@@Base+0x67a1>
  40ceb4:	leave  
  40ceb5:	ret    
  40ceb6:	push   rbp
  40ceb7:	mov    rbp,rsp
  40ceba:	sub    rsp,0x10
  40cebe:	mov    QWORD PTR [rbp-0x8],rdi
  40cec2:	mov    DWORD PTR [rbp-0xc],esi
  40cec5:	mov    edx,DWORD PTR [rbp-0xc]
  40cec8:	mov    rax,QWORD PTR [rbp-0x8]
  40cecc:	mov    esi,edx
  40cece:	mov    rdi,rax
  40ced1:	call   40a53c <_start@@Base+0x628c>
  40ced6:	mov    edi,eax
  40ced8:	call   40aa23 <_start@@Base+0x6773>
  40cedd:	mov    rdx,rax
  40cee0:	mov    rax,QWORD PTR [rbp-0x8]
  40cee4:	mov    rsi,rdx
  40cee7:	mov    rdi,rax
  40ceea:	call   40aa51 <_start@@Base+0x67a1>
  40ceef:	leave  
  40cef0:	ret    
  40cef1:	push   rbp
  40cef2:	mov    rbp,rsp
  40cef5:	sub    rsp,0x10
  40cef9:	mov    QWORD PTR [rbp-0x8],rdi
  40cefd:	mov    DWORD PTR [rbp-0xc],esi
  40cf00:	mov    eax,DWORD PTR [rbp-0xc]
  40cf03:	mov    edi,eax
  40cf05:	call   40aa3a <_start@@Base+0x678a>
  40cf0a:	mov    rdx,rax
  40cf0d:	mov    rax,QWORD PTR [rbp-0x8]
  40cf11:	mov    rsi,rdx
  40cf14:	mov    rdi,rax
  40cf17:	call   40aa51 <_start@@Base+0x67a1>
  40cf1c:	leave  
  40cf1d:	ret    
  40cf1e:	push   rbp
  40cf1f:	mov    rbp,rsp
  40cf22:	sub    rsp,0x10
  40cf26:	mov    QWORD PTR [rbp-0x8],rdi
  40cf2a:	mov    QWORD PTR [rbp-0x10],rsi
  40cf2e:	mov    rdx,QWORD PTR [rbp-0x10]
  40cf32:	mov    rax,QWORD PTR [rbp-0x8]
  40cf36:	mov    rsi,rdx
  40cf39:	mov    rdi,rax
  40cf3c:	call   409cba <_start@@Base+0x5a0a>
  40cf41:	mov    edi,eax
  40cf43:	call   40aa3a <_start@@Base+0x678a>
  40cf48:	mov    rdx,rax
  40cf4b:	mov    rax,QWORD PTR [rbp-0x8]
  40cf4f:	mov    rsi,rdx
  40cf52:	mov    rdi,rax
  40cf55:	call   40aa51 <_start@@Base+0x67a1>
  40cf5a:	leave  
  40cf5b:	ret    
  40cf5c:	push   rbp
  40cf5d:	mov    rbp,rsp
  40cf60:	sub    rsp,0x10
  40cf64:	mov    QWORD PTR [rbp-0x8],rdi
  40cf68:	mov    rax,QWORD PTR [rbp-0x8]
  40cf6c:	lea    rsi,[rip+0x11201]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40cf73:	mov    rdi,rax
  40cf76:	call   409db7 <_start@@Base+0x5b07>
  40cf7b:	test   eax,eax
  40cf7d:	jne    40cf8d <_start@@Base+0x8cdd>
  40cf7f:	mov    rax,QWORD PTR [rbp-0x8]
  40cf83:	mov    rdi,rax
  40cf86:	call   40a8e3 <_start@@Base+0x6633>
  40cf8b:	jmp    40cf92 <_start@@Base+0x8ce2>
  40cf8d:	mov    eax,0xffffffff
  40cf92:	leave  
  40cf93:	ret    
  40cf94:	push   rbp
  40cf95:	mov    rbp,rsp
  40cf98:	sub    rsp,0x10
  40cf9c:	mov    QWORD PTR [rbp-0x8],rdi
  40cfa0:	mov    rax,QWORD PTR [rbp-0x8]
  40cfa4:	mov    rdi,rax
  40cfa7:	call   40a902 <_start@@Base+0x6652>
  40cfac:	mov    edx,eax
  40cfae:	mov    rax,QWORD PTR [rbp-0x8]
  40cfb2:	mov    esi,edx
  40cfb4:	mov    rdi,rax
  40cfb7:	call   409e0f <_start@@Base+0x5b5f>
  40cfbc:	leave  
  40cfbd:	ret    
  40cfbe:	endbr64 
  40cfc2:	push   rbp
  40cfc3:	mov    rbp,rsp
  40cfc6:	sub    rsp,0x10
  40cfca:	mov    QWORD PTR [rbp-0x8],rdi
  40cfce:	mov    rax,QWORD PTR [rbp-0x8]
  40cfd2:	movzx  eax,BYTE PTR [rax+0x10]
  40cfd6:	movzx  eax,al
  40cfd9:	cmp    eax,0x1
  40cfdc:	jne    40cff3 <_start@@Base+0x8d43>
  40cfde:	mov    rax,QWORD PTR [rbp-0x8]
  40cfe2:	lea    rsi,[rip+0x1d0]        # 40d1b9 <_start@@Base+0x8f09>
  40cfe9:	mov    rdi,rax
  40cfec:	call   41ca4e <flatcc_verify_union_table@@Base>
  40cff1:	jmp    40cff8 <_start@@Base+0x8d48>
  40cff3:	mov    eax,0x0
  40cff8:	leave  
  40cff9:	ret    
  40cffa:	endbr64 
  40cffe:	push   rbp
  40cfff:	mov    rbp,rsp
  40d002:	sub    rsp,0x10
  40d006:	mov    QWORD PTR [rbp-0x8],rdi
  40d00a:	mov    rax,QWORD PTR [rbp-0x8]
  40d00e:	movzx  eax,BYTE PTR [rax+0x10]
  40d012:	movzx  eax,al
  40d015:	cmp    eax,0x2
  40d018:	je     40d047 <_start@@Base+0x8d97>
  40d01a:	cmp    eax,0x2
  40d01d:	jg     40d026 <_start@@Base+0x8d76>
  40d01f:	cmp    eax,0x1
  40d022:	je     40d032 <_start@@Base+0x8d82>
  40d024:	jmp    40d086 <_start@@Base+0x8dd6>
  40d026:	cmp    eax,0x3
  40d029:	je     40d05c <_start@@Base+0x8dac>
  40d02b:	cmp    eax,0x4
  40d02e:	je     40d071 <_start@@Base+0x8dc1>
  40d030:	jmp    40d086 <_start@@Base+0x8dd6>
  40d032:	mov    rax,QWORD PTR [rbp-0x8]
  40d036:	lea    rsi,[rip+0x92a]        # 40d967 <_start@@Base+0x96b7>
  40d03d:	mov    rdi,rax
  40d040:	call   41ca4e <flatcc_verify_union_table@@Base>
  40d045:	jmp    40d08b <_start@@Base+0x8ddb>
  40d047:	mov    rax,QWORD PTR [rbp-0x8]
  40d04b:	lea    rsi,[rip+0x270]        # 40d2c2 <_start@@Base+0x9012>
  40d052:	mov    rdi,rax
  40d055:	call   41ca4e <flatcc_verify_union_table@@Base>
  40d05a:	jmp    40d08b <_start@@Base+0x8ddb>
  40d05c:	mov    rax,QWORD PTR [rbp-0x8]
  40d060:	lea    rsi,[rip+0x165]        # 40d1cc <_start@@Base+0x8f1c>
  40d067:	mov    rdi,rax
  40d06a:	call   41ca4e <flatcc_verify_union_table@@Base>
  40d06f:	jmp    40d08b <_start@@Base+0x8ddb>
  40d071:	mov    rax,QWORD PTR [rbp-0x8]
  40d075:	lea    rsi,[rip+0x4a7]        # 40d523 <_start@@Base+0x9273>
  40d07c:	mov    rdi,rax
  40d07f:	call   41ca4e <flatcc_verify_union_table@@Base>
  40d084:	jmp    40d08b <_start@@Base+0x8ddb>
  40d086:	mov    eax,0x0
  40d08b:	leave  
  40d08c:	ret    
  40d08d:	endbr64 
  40d091:	push   rbp
  40d092:	mov    rbp,rsp
  40d095:	sub    rsp,0x10
  40d099:	mov    QWORD PTR [rbp-0x8],rdi
  40d09d:	mov    rax,QWORD PTR [rbp-0x8]
  40d0a1:	movzx  eax,BYTE PTR [rax+0x10]
  40d0a5:	movzx  eax,al
  40d0a8:	cmp    eax,0x9
  40d0ab:	je     40d101 <_start@@Base+0x8e51>
  40d0ad:	cmp    eax,0x9
  40d0b0:	jg     40d0c1 <_start@@Base+0x8e11>
  40d0b2:	cmp    eax,0x2
  40d0b5:	je     40d0d4 <_start@@Base+0x8e24>
  40d0b7:	cmp    eax,0x8
  40d0ba:	je     40d0e9 <_start@@Base+0x8e39>
  40d0bc:	jmp    40d14d <_start@@Base+0x8e9d>
  40d0c1:	cmp    eax,0xb
  40d0c4:	je     40d131 <_start@@Base+0x8e81>
  40d0c6:	cmp    eax,0xb
  40d0c9:	jl     40d119 <_start@@Base+0x8e69>
  40d0cb:	cmp    eax,0xff
  40d0d0:	je     40d13f <_start@@Base+0x8e8f>
  40d0d2:	jmp    40d14d <_start@@Base+0x8e9d>
  40d0d4:	mov    rax,QWORD PTR [rbp-0x8]
  40d0d8:	lea    rsi,[rip+0x11fe]        # 40e2dd <_start@@Base+0xa02d>
  40d0df:	mov    rdi,rax
  40d0e2:	call   41ca4e <flatcc_verify_union_table@@Base>
  40d0e7:	jmp    40d152 <_start@@Base+0x8ea2>
  40d0e9:	mov    rax,QWORD PTR [rbp-0x8]
  40d0ed:	mov    edx,0x2
  40d0f2:	mov    esi,0x2
  40d0f7:	mov    rdi,rax
  40d0fa:	call   41ca99 <flatcc_verify_union_struct@@Base>
  40d0ff:	jmp    40d152 <_start@@Base+0x8ea2>
  40d101:	mov    rax,QWORD PTR [rbp-0x8]
  40d105:	mov    edx,0x4
  40d10a:	mov    esi,0x4
  40d10f:	mov    rdi,rax
  40d112:	call   41ca99 <flatcc_verify_union_struct@@Base>
  40d117:	jmp    40d152 <_start@@Base+0x8ea2>
  40d119:	mov    rax,QWORD PTR [rbp-0x8]
  40d11d:	mov    edx,0x4
  40d122:	mov    esi,0x4
  40d127:	mov    rdi,rax
  40d12a:	call   41ca99 <flatcc_verify_union_struct@@Base>
  40d12f:	jmp    40d152 <_start@@Base+0x8ea2>
  40d131:	mov    rax,QWORD PTR [rbp-0x8]
  40d135:	mov    rdi,rax
  40d138:	call   41cae0 <flatcc_verify_union_string@@Base>
  40d13d:	jmp    40d152 <_start@@Base+0x8ea2>
  40d13f:	mov    rax,QWORD PTR [rbp-0x8]
  40d143:	mov    rdi,rax
  40d146:	call   41cae0 <flatcc_verify_union_string@@Base>
  40d14b:	jmp    40d152 <_start@@Base+0x8ea2>
  40d14d:	mov    eax,0x0
  40d152:	leave  
  40d153:	ret    
  40d154:	push   rbp
  40d155:	mov    rbp,rsp
  40d158:	sub    rsp,0x10
  40d15c:	mov    QWORD PTR [rbp-0x8],rdi
  40d160:	mov    QWORD PTR [rbp-0x10],rsi
  40d164:	mov    rsi,QWORD PTR [rbp-0x10]
  40d168:	mov    rax,QWORD PTR [rbp-0x8]
  40d16c:	mov    r8d,0x10
  40d172:	mov    ecx,0x20
  40d177:	mov    edx,0xa8f53ed2
  40d17c:	mov    rdi,rax
  40d17f:	call   41cd42 <flatcc_verify_struct_as_typed_root@@Base>
  40d184:	leave  
  40d185:	ret    
  40d186:	push   rbp
  40d187:	mov    rbp,rsp
  40d18a:	sub    rsp,0x20
  40d18e:	mov    QWORD PTR [rbp-0x8],rdi
  40d192:	mov    QWORD PTR [rbp-0x10],rsi
  40d196:	mov    DWORD PTR [rbp-0x14],edx
  40d199:	mov    edx,DWORD PTR [rbp-0x14]
  40d19c:	mov    rsi,QWORD PTR [rbp-0x10]
  40d1a0:	mov    rax,QWORD PTR [rbp-0x8]
  40d1a4:	mov    r8d,0x10
  40d1aa:	mov    ecx,0x20
  40d1af:	mov    rdi,rax
  40d1b2:	call   41cd42 <flatcc_verify_struct_as_typed_root@@Base>
  40d1b7:	leave  
  40d1b8:	ret    
  40d1b9:	endbr64 
  40d1bd:	push   rbp
  40d1be:	mov    rbp,rsp
  40d1c1:	mov    QWORD PTR [rbp-0x8],rdi
  40d1c5:	mov    eax,0x0
  40d1ca:	pop    rbp
  40d1cb:	ret    
  40d1cc:	endbr64 
  40d1d0:	push   rbp
  40d1d1:	mov    rbp,rsp
  40d1d4:	mov    QWORD PTR [rbp-0x8],rdi
  40d1d8:	mov    eax,0x0
  40d1dd:	pop    rbp
  40d1de:	ret    
  40d1df:	endbr64 
  40d1e3:	push   rbp
  40d1e4:	mov    rbp,rsp
  40d1e7:	mov    QWORD PTR [rbp-0x8],rdi
  40d1eb:	mov    eax,0x0
  40d1f0:	pop    rbp
  40d1f1:	ret    
  40d1f2:	endbr64 
  40d1f6:	push   rbp
  40d1f7:	mov    rbp,rsp
  40d1fa:	sub    rsp,0x20
  40d1fe:	mov    QWORD PTR [rbp-0x18],rdi
  40d202:	mov    rax,QWORD PTR [rbp-0x18]
  40d206:	mov    ecx,0x1
  40d20b:	mov    edx,0x0
  40d210:	mov    esi,0x0
  40d215:	mov    rdi,rax
  40d218:	call   41c669 <flatcc_verify_field@@Base>
  40d21d:	mov    DWORD PTR [rbp-0x4],eax
  40d220:	cmp    DWORD PTR [rbp-0x4],0x0
  40d224:	je     40d22b <_start@@Base+0x8f7b>
  40d226:	mov    eax,DWORD PTR [rbp-0x4]
  40d229:	jmp    40d230 <_start@@Base+0x8f80>
  40d22b:	mov    eax,0x0
  40d230:	leave  
  40d231:	ret    
  40d232:	push   rbp
  40d233:	mov    rbp,rsp
  40d236:	sub    rsp,0x10
  40d23a:	mov    QWORD PTR [rbp-0x8],rdi
  40d23e:	mov    QWORD PTR [rbp-0x10],rsi
  40d242:	mov    rsi,QWORD PTR [rbp-0x10]
  40d246:	mov    rax,QWORD PTR [rbp-0x8]
  40d24a:	lea    rcx,[rip+0xffffffffffffffa1]        # 40d1f2 <_start@@Base+0x8f42>
  40d251:	lea    rdx,[rip+0x115f7]        # 41e84f <_IO_stdin_used@@Base+0x84f>
  40d258:	mov    rdi,rax
  40d25b:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40d260:	leave  
  40d261:	ret    
  40d262:	push   rbp
  40d263:	mov    rbp,rsp
  40d266:	sub    rsp,0x20
  40d26a:	mov    QWORD PTR [rbp-0x8],rdi
  40d26e:	mov    QWORD PTR [rbp-0x10],rsi
  40d272:	mov    QWORD PTR [rbp-0x18],rdx
  40d276:	mov    rdx,QWORD PTR [rbp-0x18]
  40d27a:	mov    rsi,QWORD PTR [rbp-0x10]
  40d27e:	mov    rax,QWORD PTR [rbp-0x8]
  40d282:	lea    rcx,[rip+0xffffffffffffff69]        # 40d1f2 <_start@@Base+0x8f42>
  40d289:	mov    rdi,rax
  40d28c:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40d291:	leave  
  40d292:	ret    
  40d293:	push   rbp
  40d294:	mov    rbp,rsp
  40d297:	sub    rsp,0x20
  40d29b:	mov    QWORD PTR [rbp-0x8],rdi
  40d29f:	mov    QWORD PTR [rbp-0x10],rsi
  40d2a3:	mov    DWORD PTR [rbp-0x14],edx
  40d2a6:	mov    edx,DWORD PTR [rbp-0x14]
  40d2a9:	mov    rsi,QWORD PTR [rbp-0x10]
  40d2ad:	mov    rax,QWORD PTR [rbp-0x8]
  40d2b1:	lea    rcx,[rip+0xffffffffffffff3a]        # 40d1f2 <_start@@Base+0x8f42>
  40d2b8:	mov    rdi,rax
  40d2bb:	call   41ce63 <flatcc_verify_table_as_typed_root@@Base>
  40d2c0:	leave  
  40d2c1:	ret    
  40d2c2:	endbr64 
  40d2c6:	push   rbp
  40d2c7:	mov    rbp,rsp
  40d2ca:	sub    rsp,0x20
  40d2ce:	mov    QWORD PTR [rbp-0x18],rdi
  40d2d2:	mov    rax,QWORD PTR [rbp-0x18]
  40d2d6:	mov    ecx,0x1
  40d2db:	mov    edx,0x1
  40d2e0:	mov    esi,0x0
  40d2e5:	mov    rdi,rax
  40d2e8:	call   41c669 <flatcc_verify_field@@Base>
  40d2ed:	mov    DWORD PTR [rbp-0x4],eax
  40d2f0:	cmp    DWORD PTR [rbp-0x4],0x0
  40d2f4:	je     40d2fe <_start@@Base+0x904e>
  40d2f6:	mov    eax,DWORD PTR [rbp-0x4]
  40d2f9:	jmp    40d37e <_start@@Base+0x90ce>
  40d2fe:	mov    rax,QWORD PTR [rbp-0x18]
  40d302:	mov    ecx,0x1
  40d307:	mov    edx,0x1
  40d30c:	mov    esi,0x1
  40d311:	mov    rdi,rax
  40d314:	call   41c669 <flatcc_verify_field@@Base>
  40d319:	mov    DWORD PTR [rbp-0x4],eax
  40d31c:	cmp    DWORD PTR [rbp-0x4],0x0
  40d320:	je     40d327 <_start@@Base+0x9077>
  40d322:	mov    eax,DWORD PTR [rbp-0x4]
  40d325:	jmp    40d37e <_start@@Base+0x90ce>
  40d327:	mov    rax,QWORD PTR [rbp-0x18]
  40d32b:	mov    ecx,0x1
  40d330:	mov    edx,0x1
  40d335:	mov    esi,0x2
  40d33a:	mov    rdi,rax
  40d33d:	call   41c669 <flatcc_verify_field@@Base>
  40d342:	mov    DWORD PTR [rbp-0x4],eax
  40d345:	cmp    DWORD PTR [rbp-0x4],0x0
  40d349:	je     40d350 <_start@@Base+0x90a0>
  40d34b:	mov    eax,DWORD PTR [rbp-0x4]
  40d34e:	jmp    40d37e <_start@@Base+0x90ce>
  40d350:	mov    rax,QWORD PTR [rbp-0x18]
  40d354:	mov    ecx,0x1
  40d359:	mov    edx,0x1
  40d35e:	mov    esi,0x3
  40d363:	mov    rdi,rax
  40d366:	call   41c669 <flatcc_verify_field@@Base>
  40d36b:	mov    DWORD PTR [rbp-0x4],eax
  40d36e:	cmp    DWORD PTR [rbp-0x4],0x0
  40d372:	je     40d379 <_start@@Base+0x90c9>
  40d374:	mov    eax,DWORD PTR [rbp-0x4]
  40d377:	jmp    40d37e <_start@@Base+0x90ce>
  40d379:	mov    eax,0x0
  40d37e:	leave  
  40d37f:	ret    
  40d380:	endbr64 
  40d384:	push   rbp
  40d385:	mov    rbp,rsp
  40d388:	sub    rsp,0x20
  40d38c:	mov    QWORD PTR [rbp-0x18],rdi
  40d390:	mov    rax,QWORD PTR [rbp-0x18]
  40d394:	mov    ecx,0x1
  40d399:	mov    edx,0x0
  40d39e:	mov    esi,0x0
  40d3a3:	mov    rdi,rax
  40d3a6:	call   41c669 <flatcc_verify_field@@Base>
  40d3ab:	mov    DWORD PTR [rbp-0x4],eax
  40d3ae:	cmp    DWORD PTR [rbp-0x4],0x0
  40d3b2:	je     40d3bc <_start@@Base+0x910c>
  40d3b4:	mov    eax,DWORD PTR [rbp-0x4]
  40d3b7:	jmp    40d494 <_start@@Base+0x91e4>
  40d3bc:	mov    rax,QWORD PTR [rbp-0x18]
  40d3c0:	mov    ecx,0x8
  40d3c5:	mov    edx,0x8
  40d3ca:	mov    esi,0x1
  40d3cf:	mov    rdi,rax
  40d3d2:	call   41c669 <flatcc_verify_field@@Base>
  40d3d7:	mov    DWORD PTR [rbp-0x4],eax
  40d3da:	cmp    DWORD PTR [rbp-0x4],0x0
  40d3de:	je     40d3e8 <_start@@Base+0x9138>
  40d3e0:	mov    eax,DWORD PTR [rbp-0x4]
  40d3e3:	jmp    40d494 <_start@@Base+0x91e4>
  40d3e8:	mov    rax,QWORD PTR [rbp-0x18]
  40d3ec:	mov    ecx,0x8
  40d3f1:	mov    edx,0x8
  40d3f6:	mov    esi,0x2
  40d3fb:	mov    rdi,rax
  40d3fe:	call   41c669 <flatcc_verify_field@@Base>
  40d403:	mov    DWORD PTR [rbp-0x4],eax
  40d406:	cmp    DWORD PTR [rbp-0x4],0x0
  40d40a:	je     40d414 <_start@@Base+0x9164>
  40d40c:	mov    eax,DWORD PTR [rbp-0x4]
  40d40f:	jmp    40d494 <_start@@Base+0x91e4>
  40d414:	mov    rax,QWORD PTR [rbp-0x18]
  40d418:	mov    ecx,0x4
  40d41d:	mov    edx,0x4
  40d422:	mov    esi,0x3
  40d427:	mov    rdi,rax
  40d42a:	call   41c669 <flatcc_verify_field@@Base>
  40d42f:	mov    DWORD PTR [rbp-0x4],eax
  40d432:	cmp    DWORD PTR [rbp-0x4],0x0
  40d436:	je     40d43d <_start@@Base+0x918d>
  40d438:	mov    eax,DWORD PTR [rbp-0x4]
  40d43b:	jmp    40d494 <_start@@Base+0x91e4>
  40d43d:	mov    rax,QWORD PTR [rbp-0x18]
  40d441:	mov    ecx,0x8
  40d446:	mov    edx,0x8
  40d44b:	mov    esi,0x4
  40d450:	mov    rdi,rax
  40d453:	call   41c669 <flatcc_verify_field@@Base>
  40d458:	mov    DWORD PTR [rbp-0x4],eax
  40d45b:	cmp    DWORD PTR [rbp-0x4],0x0
  40d45f:	je     40d466 <_start@@Base+0x91b6>
  40d461:	mov    eax,DWORD PTR [rbp-0x4]
  40d464:	jmp    40d494 <_start@@Base+0x91e4>
  40d466:	mov    rax,QWORD PTR [rbp-0x18]
  40d46a:	mov    ecx,0x8
  40d46f:	mov    edx,0x8
  40d474:	mov    esi,0x5
  40d479:	mov    rdi,rax
  40d47c:	call   41c669 <flatcc_verify_field@@Base>
  40d481:	mov    DWORD PTR [rbp-0x4],eax
  40d484:	cmp    DWORD PTR [rbp-0x4],0x0
  40d488:	je     40d48f <_start@@Base+0x91df>
  40d48a:	mov    eax,DWORD PTR [rbp-0x4]
  40d48d:	jmp    40d494 <_start@@Base+0x91e4>
  40d48f:	mov    eax,0x0
  40d494:	leave  
  40d495:	ret    
  40d496:	endbr64 
  40d49a:	push   rbp
  40d49b:	mov    rbp,rsp
  40d49e:	sub    rsp,0x20
  40d4a2:	mov    QWORD PTR [rbp-0x18],rdi
  40d4a6:	mov    rax,QWORD PTR [rbp-0x18]
  40d4aa:	mov    edx,0x0
  40d4af:	mov    esi,0x0
  40d4b4:	mov    rdi,rax
  40d4b7:	call   41c6da <flatcc_verify_string_field@@Base>
  40d4bc:	mov    DWORD PTR [rbp-0x4],eax
  40d4bf:	cmp    DWORD PTR [rbp-0x4],0x0
  40d4c3:	je     40d4ca <_start@@Base+0x921a>
  40d4c5:	mov    eax,DWORD PTR [rbp-0x4]
  40d4c8:	jmp    40d521 <_start@@Base+0x9271>
  40d4ca:	mov    rax,QWORD PTR [rbp-0x18]
  40d4ce:	mov    ecx,0x8
  40d4d3:	mov    edx,0x8
  40d4d8:	mov    esi,0x1
  40d4dd:	mov    rdi,rax
  40d4e0:	call   41c669 <flatcc_verify_field@@Base>
  40d4e5:	mov    DWORD PTR [rbp-0x4],eax
  40d4e8:	cmp    DWORD PTR [rbp-0x4],0x0
  40d4ec:	je     40d4f3 <_start@@Base+0x9243>
  40d4ee:	mov    eax,DWORD PTR [rbp-0x4]
  40d4f1:	jmp    40d521 <_start@@Base+0x9271>
  40d4f3:	mov    rax,QWORD PTR [rbp-0x18]
  40d4f7:	mov    ecx,0x2
  40d4fc:	mov    edx,0x2
  40d501:	mov    esi,0x2
  40d506:	mov    rdi,rax
  40d509:	call   41c669 <flatcc_verify_field@@Base>
  40d50e:	mov    DWORD PTR [rbp-0x4],eax
  40d511:	cmp    DWORD PTR [rbp-0x4],0x0
  40d515:	je     40d51c <_start@@Base+0x926c>
  40d517:	mov    eax,DWORD PTR [rbp-0x4]
  40d51a:	jmp    40d521 <_start@@Base+0x9271>
  40d51c:	mov    eax,0x0
  40d521:	leave  
  40d522:	ret    
  40d523:	endbr64 
  40d527:	push   rbp
  40d528:	mov    rbp,rsp
  40d52b:	sub    rsp,0x20
  40d52f:	mov    QWORD PTR [rbp-0x18],rdi
  40d533:	mov    rax,QWORD PTR [rbp-0x18]
  40d537:	lea    rcx,[rip+0x7d]        # 40d5bb <_start@@Base+0x930b>
  40d53e:	mov    edx,0x0
  40d543:	mov    esi,0x0
  40d548:	mov    rdi,rax
  40d54b:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40d550:	mov    DWORD PTR [rbp-0x4],eax
  40d553:	cmp    DWORD PTR [rbp-0x4],0x0
  40d557:	je     40d55e <_start@@Base+0x92ae>
  40d559:	mov    eax,DWORD PTR [rbp-0x4]
  40d55c:	jmp    40d5b9 <_start@@Base+0x9309>
  40d55e:	mov    rax,QWORD PTR [rbp-0x18]
  40d562:	lea    rcx,[rip+0xdb4]        # 40e31d <_start@@Base+0xa06d>
  40d569:	mov    edx,0x0
  40d56e:	mov    esi,0x1
  40d573:	mov    rdi,rax
  40d576:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40d57b:	mov    DWORD PTR [rbp-0x4],eax
  40d57e:	cmp    DWORD PTR [rbp-0x4],0x0
  40d582:	je     40d589 <_start@@Base+0x92d9>
  40d584:	mov    eax,DWORD PTR [rbp-0x4]
  40d587:	jmp    40d5b9 <_start@@Base+0x9309>
  40d589:	mov    rax,QWORD PTR [rbp-0x18]
  40d58d:	lea    rcx,[rip+0xfffffffffffffa66]        # 40cffa <_start@@Base+0x8d4a>
  40d594:	mov    edx,0x0
  40d599:	mov    esi,0x3
  40d59e:	mov    rdi,rax
  40d5a1:	call   41d32f <flatcc_verify_union_vector_field@@Base>
  40d5a6:	mov    DWORD PTR [rbp-0x4],eax
  40d5a9:	cmp    DWORD PTR [rbp-0x4],0x0
  40d5ad:	je     40d5b4 <_start@@Base+0x9304>
  40d5af:	mov    eax,DWORD PTR [rbp-0x4]
  40d5b2:	jmp    40d5b9 <_start@@Base+0x9309>
  40d5b4:	mov    eax,0x0
  40d5b9:	leave  
  40d5ba:	ret    
  40d5bb:	endbr64 
  40d5bf:	push   rbp
  40d5c0:	mov    rbp,rsp
  40d5c3:	sub    rsp,0x20
  40d5c7:	mov    QWORD PTR [rbp-0x18],rdi
  40d5cb:	mov    rax,QWORD PTR [rbp-0x18]
  40d5cf:	lea    rcx,[rip+0x7d]        # 40d653 <_start@@Base+0x93a3>
  40d5d6:	mov    edx,0x0
  40d5db:	mov    esi,0x0
  40d5e0:	mov    rdi,rax
  40d5e3:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40d5e8:	mov    DWORD PTR [rbp-0x4],eax
  40d5eb:	cmp    DWORD PTR [rbp-0x4],0x0
  40d5ef:	je     40d5f6 <_start@@Base+0x9346>
  40d5f1:	mov    eax,DWORD PTR [rbp-0x4]
  40d5f4:	jmp    40d651 <_start@@Base+0x93a1>
  40d5f6:	mov    rax,QWORD PTR [rbp-0x18]
  40d5fa:	lea    rcx,[rip+0x1dd]        # 40d7de <_start@@Base+0x952e>
  40d601:	mov    edx,0x0
  40d606:	mov    esi,0x1
  40d60b:	mov    rdi,rax
  40d60e:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40d613:	mov    DWORD PTR [rbp-0x4],eax
  40d616:	cmp    DWORD PTR [rbp-0x4],0x0
  40d61a:	je     40d621 <_start@@Base+0x9371>
  40d61c:	mov    eax,DWORD PTR [rbp-0x4]
  40d61f:	jmp    40d651 <_start@@Base+0x93a1>
  40d621:	mov    rax,QWORD PTR [rbp-0x18]
  40d625:	lea    rcx,[rip+0x21b]        # 40d847 <_start@@Base+0x9597>
  40d62c:	mov    edx,0x0
  40d631:	mov    esi,0x2
  40d636:	mov    rdi,rax
  40d639:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40d63e:	mov    DWORD PTR [rbp-0x4],eax
  40d641:	cmp    DWORD PTR [rbp-0x4],0x0
  40d645:	je     40d64c <_start@@Base+0x939c>
  40d647:	mov    eax,DWORD PTR [rbp-0x4]
  40d64a:	jmp    40d651 <_start@@Base+0x93a1>
  40d64c:	mov    eax,0x0
  40d651:	leave  
  40d652:	ret    
  40d653:	endbr64 
  40d657:	push   rbp
  40d658:	mov    rbp,rsp
  40d65b:	sub    rsp,0x20
  40d65f:	mov    QWORD PTR [rbp-0x18],rdi
  40d663:	mov    rax,QWORD PTR [rbp-0x18]
  40d667:	mov    edx,0x0
  40d66c:	mov    esi,0x0
  40d671:	mov    rdi,rax
  40d674:	call   41c6da <flatcc_verify_string_field@@Base>
  40d679:	mov    DWORD PTR [rbp-0x4],eax
  40d67c:	cmp    DWORD PTR [rbp-0x4],0x0
  40d680:	je     40d68a <_start@@Base+0x93da>
  40d682:	mov    eax,DWORD PTR [rbp-0x4]
  40d685:	jmp    40d7dc <_start@@Base+0x952c>
  40d68a:	mov    rax,QWORD PTR [rbp-0x18]
  40d68e:	mov    ecx,0x4
  40d693:	mov    edx,0x4
  40d698:	mov    esi,0x1
  40d69d:	mov    rdi,rax
  40d6a0:	call   41c669 <flatcc_verify_field@@Base>
  40d6a5:	mov    DWORD PTR [rbp-0x4],eax
  40d6a8:	cmp    DWORD PTR [rbp-0x4],0x0
  40d6ac:	je     40d6b6 <_start@@Base+0x9406>
  40d6ae:	mov    eax,DWORD PTR [rbp-0x4]
  40d6b1:	jmp    40d7dc <_start@@Base+0x952c>
  40d6b6:	mov    rax,QWORD PTR [rbp-0x18]
  40d6ba:	mov    edx,0x0
  40d6bf:	mov    esi,0x2
  40d6c4:	mov    rdi,rax
  40d6c7:	call   41c6da <flatcc_verify_string_field@@Base>
  40d6cc:	mov    DWORD PTR [rbp-0x4],eax
  40d6cf:	cmp    DWORD PTR [rbp-0x4],0x0
  40d6d3:	je     40d6dd <_start@@Base+0x942d>
  40d6d5:	mov    eax,DWORD PTR [rbp-0x4]
  40d6d8:	jmp    40d7dc <_start@@Base+0x952c>
  40d6dd:	mov    rax,QWORD PTR [rbp-0x18]
  40d6e1:	mov    ecx,0x8
  40d6e6:	mov    edx,0x8
  40d6eb:	mov    esi,0x3
  40d6f0:	mov    rdi,rax
  40d6f3:	call   41c669 <flatcc_verify_field@@Base>
  40d6f8:	mov    DWORD PTR [rbp-0x4],eax
  40d6fb:	cmp    DWORD PTR [rbp-0x4],0x0
  40d6ff:	je     40d709 <_start@@Base+0x9459>
  40d701:	mov    eax,DWORD PTR [rbp-0x4]
  40d704:	jmp    40d7dc <_start@@Base+0x952c>
  40d709:	mov    rax,QWORD PTR [rbp-0x18]
  40d70d:	mov    edx,0x0
  40d712:	mov    esi,0x4
  40d717:	mov    rdi,rax
  40d71a:	call   41c6da <flatcc_verify_string_field@@Base>
  40d71f:	mov    DWORD PTR [rbp-0x4],eax
  40d722:	cmp    DWORD PTR [rbp-0x4],0x0
  40d726:	je     40d730 <_start@@Base+0x9480>
  40d728:	mov    eax,DWORD PTR [rbp-0x4]
  40d72b:	jmp    40d7dc <_start@@Base+0x952c>
  40d730:	mov    rax,QWORD PTR [rbp-0x18]
  40d734:	mov    ecx,0x8
  40d739:	mov    edx,0x8
  40d73e:	mov    esi,0x5
  40d743:	mov    rdi,rax
  40d746:	call   41c669 <flatcc_verify_field@@Base>
  40d74b:	mov    DWORD PTR [rbp-0x4],eax
  40d74e:	cmp    DWORD PTR [rbp-0x4],0x0
  40d752:	je     40d75c <_start@@Base+0x94ac>
  40d754:	mov    eax,DWORD PTR [rbp-0x4]
  40d757:	jmp    40d7dc <_start@@Base+0x952c>
  40d75c:	mov    rax,QWORD PTR [rbp-0x18]
  40d760:	mov    ecx,0x4
  40d765:	mov    edx,0x4
  40d76a:	mov    esi,0x6
  40d76f:	mov    rdi,rax
  40d772:	call   41c669 <flatcc_verify_field@@Base>
  40d777:	mov    DWORD PTR [rbp-0x4],eax
  40d77a:	cmp    DWORD PTR [rbp-0x4],0x0
  40d77e:	je     40d785 <_start@@Base+0x94d5>
  40d780:	mov    eax,DWORD PTR [rbp-0x4]
  40d783:	jmp    40d7dc <_start@@Base+0x952c>
  40d785:	mov    rax,QWORD PTR [rbp-0x18]
  40d789:	mov    ecx,0x8
  40d78e:	mov    edx,0x8
  40d793:	mov    esi,0x7
  40d798:	mov    rdi,rax
  40d79b:	call   41c669 <flatcc_verify_field@@Base>
  40d7a0:	mov    DWORD PTR [rbp-0x4],eax
  40d7a3:	cmp    DWORD PTR [rbp-0x4],0x0
  40d7a7:	je     40d7ae <_start@@Base+0x94fe>
  40d7a9:	mov    eax,DWORD PTR [rbp-0x4]
  40d7ac:	jmp    40d7dc <_start@@Base+0x952c>
  40d7ae:	mov    rax,QWORD PTR [rbp-0x18]
  40d7b2:	mov    ecx,0x4
  40d7b7:	mov    edx,0x4
  40d7bc:	mov    esi,0x8
  40d7c1:	mov    rdi,rax
  40d7c4:	call   41c669 <flatcc_verify_field@@Base>
  40d7c9:	mov    DWORD PTR [rbp-0x4],eax
  40d7cc:	cmp    DWORD PTR [rbp-0x4],0x0
  40d7d0:	je     40d7d7 <_start@@Base+0x9527>
  40d7d2:	mov    eax,DWORD PTR [rbp-0x4]
  40d7d5:	jmp    40d7dc <_start@@Base+0x952c>
  40d7d7:	mov    eax,0x0
  40d7dc:	leave  
  40d7dd:	ret    
  40d7de:	endbr64 
  40d7e2:	push   rbp
  40d7e3:	mov    rbp,rsp
  40d7e6:	sub    rsp,0x20
  40d7ea:	mov    QWORD PTR [rbp-0x18],rdi
  40d7ee:	mov    rax,QWORD PTR [rbp-0x18]
  40d7f2:	mov    ecx,0x8
  40d7f7:	mov    edx,0x8
  40d7fc:	mov    esi,0x0
  40d801:	mov    rdi,rax
  40d804:	call   41c669 <flatcc_verify_field@@Base>
  40d809:	mov    DWORD PTR [rbp-0x4],eax
  40d80c:	cmp    DWORD PTR [rbp-0x4],0x0
  40d810:	je     40d817 <_start@@Base+0x9567>
  40d812:	mov    eax,DWORD PTR [rbp-0x4]
  40d815:	jmp    40d845 <_start@@Base+0x9595>
  40d817:	mov    rax,QWORD PTR [rbp-0x18]
  40d81b:	mov    ecx,0x4
  40d820:	mov    edx,0x4
  40d825:	mov    esi,0x1
  40d82a:	mov    rdi,rax
  40d82d:	call   41c669 <flatcc_verify_field@@Base>
  40d832:	mov    DWORD PTR [rbp-0x4],eax
  40d835:	cmp    DWORD PTR [rbp-0x4],0x0
  40d839:	je     40d840 <_start@@Base+0x9590>
  40d83b:	mov    eax,DWORD PTR [rbp-0x4]
  40d83e:	jmp    40d845 <_start@@Base+0x9595>
  40d840:	mov    eax,0x0
  40d845:	leave  
  40d846:	ret    
  40d847:	endbr64 
  40d84b:	push   rbp
  40d84c:	mov    rbp,rsp
  40d84f:	sub    rsp,0x20
  40d853:	mov    QWORD PTR [rbp-0x18],rdi
  40d857:	mov    rax,QWORD PTR [rbp-0x18]
  40d85b:	mov    ecx,0x8
  40d860:	mov    edx,0x8
  40d865:	mov    esi,0x0
  40d86a:	mov    rdi,rax
  40d86d:	call   41c669 <flatcc_verify_field@@Base>
  40d872:	mov    DWORD PTR [rbp-0x4],eax
  40d875:	cmp    DWORD PTR [rbp-0x4],0x0
  40d879:	je     40d880 <_start@@Base+0x95d0>
  40d87b:	mov    eax,DWORD PTR [rbp-0x4]
  40d87e:	jmp    40d8ae <_start@@Base+0x95fe>
  40d880:	mov    rax,QWORD PTR [rbp-0x18]
  40d884:	mov    ecx,0x4
  40d889:	mov    edx,0x4
  40d88e:	mov    esi,0x1
  40d893:	mov    rdi,rax
  40d896:	call   41c669 <flatcc_verify_field@@Base>
  40d89b:	mov    DWORD PTR [rbp-0x4],eax
  40d89e:	cmp    DWORD PTR [rbp-0x4],0x0
  40d8a2:	je     40d8a9 <_start@@Base+0x95f9>
  40d8a4:	mov    eax,DWORD PTR [rbp-0x4]
  40d8a7:	jmp    40d8ae <_start@@Base+0x95fe>
  40d8a9:	mov    eax,0x0
  40d8ae:	leave  
  40d8af:	ret    
  40d8b0:	endbr64 
  40d8b4:	push   rbp
  40d8b5:	mov    rbp,rsp
  40d8b8:	sub    rsp,0x20
  40d8bc:	mov    QWORD PTR [rbp-0x18],rdi
  40d8c0:	mov    rax,QWORD PTR [rbp-0x18]
  40d8c4:	mov    r9d,0xffffffff
  40d8ca:	mov    r8d,0x1
  40d8d0:	mov    ecx,0x1
  40d8d5:	mov    edx,0x0
  40d8da:	mov    esi,0x0
  40d8df:	mov    rdi,rax
  40d8e2:	call   41c773 <flatcc_verify_vector_field@@Base>
  40d8e7:	mov    DWORD PTR [rbp-0x4],eax
  40d8ea:	cmp    DWORD PTR [rbp-0x4],0x0
  40d8ee:	je     40d8f5 <_start@@Base+0x9645>
  40d8f0:	mov    eax,DWORD PTR [rbp-0x4]
  40d8f3:	jmp    40d965 <_start@@Base+0x96b5>
  40d8f5:	mov    rax,QWORD PTR [rbp-0x18]
  40d8f9:	mov    r9d,0xffffffff
  40d8ff:	mov    r8d,0x1
  40d905:	mov    ecx,0x1
  40d90a:	mov    edx,0x0
  40d90f:	mov    esi,0x1
  40d914:	mov    rdi,rax
  40d917:	call   41c773 <flatcc_verify_vector_field@@Base>
  40d91c:	mov    DWORD PTR [rbp-0x4],eax
  40d91f:	cmp    DWORD PTR [rbp-0x4],0x0
  40d923:	je     40d92a <_start@@Base+0x967a>
  40d925:	mov    eax,DWORD PTR [rbp-0x4]
  40d928:	jmp    40d965 <_start@@Base+0x96b5>
  40d92a:	mov    rax,QWORD PTR [rbp-0x18]
  40d92e:	lea    r9,[rip+0x32]        # 40d967 <_start@@Base+0x96b7>
  40d935:	mov    r8d,0x1
  40d93b:	mov    ecx,0x0
  40d940:	mov    edx,0x0
  40d945:	mov    esi,0x2
  40d94a:	mov    rdi,rax
  40d94d:	call   41cfde <flatcc_verify_table_as_nested_root@@Base>
  40d952:	mov    DWORD PTR [rbp-0x4],eax
  40d955:	cmp    DWORD PTR [rbp-0x4],0x0
  40d959:	je     40d960 <_start@@Base+0x96b0>
  40d95b:	mov    eax,DWORD PTR [rbp-0x4]
  40d95e:	jmp    40d965 <_start@@Base+0x96b5>
  40d960:	mov    eax,0x0
  40d965:	leave  
  40d966:	ret    
  40d967:	endbr64 
  40d96b:	push   rbp
  40d96c:	mov    rbp,rsp
  40d96f:	sub    rsp,0x20
  40d973:	mov    QWORD PTR [rbp-0x18],rdi
  40d977:	mov    rax,QWORD PTR [rbp-0x18]
  40d97b:	mov    ecx,0x10
  40d980:	mov    edx,0x20
  40d985:	mov    esi,0x0
  40d98a:	mov    rdi,rax
  40d98d:	call   41c669 <flatcc_verify_field@@Base>
  40d992:	mov    DWORD PTR [rbp-0x4],eax
  40d995:	cmp    DWORD PTR [rbp-0x4],0x0
  40d999:	je     40d9a3 <_start@@Base+0x96f3>
  40d99b:	mov    eax,DWORD PTR [rbp-0x4]
  40d99e:	jmp    40dfb5 <_start@@Base+0x9d05>
  40d9a3:	mov    rax,QWORD PTR [rbp-0x18]
  40d9a7:	mov    ecx,0x2
  40d9ac:	mov    edx,0x2
  40d9b1:	mov    esi,0x2
  40d9b6:	mov    rdi,rax
  40d9b9:	call   41c669 <flatcc_verify_field@@Base>
  40d9be:	mov    DWORD PTR [rbp-0x4],eax
  40d9c1:	cmp    DWORD PTR [rbp-0x4],0x0
  40d9c5:	je     40d9cf <_start@@Base+0x971f>
  40d9c7:	mov    eax,DWORD PTR [rbp-0x4]
  40d9ca:	jmp    40dfb5 <_start@@Base+0x9d05>
  40d9cf:	mov    rax,QWORD PTR [rbp-0x18]
  40d9d3:	mov    ecx,0x2
  40d9d8:	mov    edx,0x2
  40d9dd:	mov    esi,0x1
  40d9e2:	mov    rdi,rax
  40d9e5:	call   41c669 <flatcc_verify_field@@Base>
  40d9ea:	mov    DWORD PTR [rbp-0x4],eax
  40d9ed:	cmp    DWORD PTR [rbp-0x4],0x0
  40d9f1:	je     40d9fb <_start@@Base+0x974b>
  40d9f3:	mov    eax,DWORD PTR [rbp-0x4]
  40d9f6:	jmp    40dfb5 <_start@@Base+0x9d05>
  40d9fb:	mov    rax,QWORD PTR [rbp-0x18]
  40d9ff:	mov    edx,0x1
  40da04:	mov    esi,0x3
  40da09:	mov    rdi,rax
  40da0c:	call   41c6da <flatcc_verify_string_field@@Base>
  40da11:	mov    DWORD PTR [rbp-0x4],eax
  40da14:	cmp    DWORD PTR [rbp-0x4],0x0
  40da18:	je     40da22 <_start@@Base+0x9772>
  40da1a:	mov    eax,DWORD PTR [rbp-0x4]
  40da1d:	jmp    40dfb5 <_start@@Base+0x9d05>
  40da22:	mov    rax,QWORD PTR [rbp-0x18]
  40da26:	mov    ecx,0x1
  40da2b:	mov    edx,0x1
  40da30:	mov    esi,0x6
  40da35:	mov    rdi,rax
  40da38:	call   41c669 <flatcc_verify_field@@Base>
  40da3d:	mov    DWORD PTR [rbp-0x4],eax
  40da40:	cmp    DWORD PTR [rbp-0x4],0x0
  40da44:	je     40da4e <_start@@Base+0x979e>
  40da46:	mov    eax,DWORD PTR [rbp-0x4]
  40da49:	jmp    40dfb5 <_start@@Base+0x9d05>
  40da4e:	mov    rax,QWORD PTR [rbp-0x18]
  40da52:	mov    r9d,0xffffffff
  40da58:	mov    r8d,0x1
  40da5e:	mov    ecx,0x1
  40da63:	mov    edx,0x0
  40da68:	mov    esi,0x5
  40da6d:	mov    rdi,rax
  40da70:	call   41c773 <flatcc_verify_vector_field@@Base>
  40da75:	mov    DWORD PTR [rbp-0x4],eax
  40da78:	cmp    DWORD PTR [rbp-0x4],0x0
  40da7c:	je     40da86 <_start@@Base+0x97d6>
  40da7e:	mov    eax,DWORD PTR [rbp-0x4]
  40da81:	jmp    40dfb5 <_start@@Base+0x9d05>
  40da86:	mov    rax,QWORD PTR [rbp-0x18]
  40da8a:	lea    rcx,[rip+0xfffffffffffffed6]        # 40d967 <_start@@Base+0x96b7>
  40da91:	mov    edx,0x0
  40da96:	mov    esi,0xb
  40da9b:	mov    rdi,rax
  40da9e:	call   41c998 <flatcc_verify_table_vector_field@@Base>
  40daa3:	mov    DWORD PTR [rbp-0x4],eax
  40daa6:	cmp    DWORD PTR [rbp-0x4],0x0
  40daaa:	je     40dab4 <_start@@Base+0x9804>
  40daac:	mov    eax,DWORD PTR [rbp-0x4]
  40daaf:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dab4:	mov    rax,QWORD PTR [rbp-0x18]
  40dab8:	mov    edx,0x0
  40dabd:	mov    esi,0xa
  40dac2:	mov    rdi,rax
  40dac5:	call   41c849 <flatcc_verify_string_vector_field@@Base>
  40daca:	mov    DWORD PTR [rbp-0x4],eax
  40dacd:	cmp    DWORD PTR [rbp-0x4],0x0
  40dad1:	je     40dadb <_start@@Base+0x982b>
  40dad3:	mov    eax,DWORD PTR [rbp-0x4]
  40dad6:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dadb:	mov    rax,QWORD PTR [rbp-0x18]
  40dadf:	mov    edx,0x0
  40dae4:	mov    esi,0x1c
  40dae9:	mov    rdi,rax
  40daec:	call   41c849 <flatcc_verify_string_vector_field@@Base>
  40daf1:	mov    DWORD PTR [rbp-0x4],eax
  40daf4:	cmp    DWORD PTR [rbp-0x4],0x0
  40daf8:	je     40db02 <_start@@Base+0x9852>
  40dafa:	mov    eax,DWORD PTR [rbp-0x4]
  40dafd:	jmp    40dfb5 <_start@@Base+0x9d05>
  40db02:	mov    rax,QWORD PTR [rbp-0x18]
  40db06:	mov    r9d,0xffffffff
  40db0c:	mov    r8d,0x1
  40db12:	mov    ecx,0x1
  40db17:	mov    edx,0x0
  40db1c:	mov    esi,0x18
  40db21:	mov    rdi,rax
  40db24:	call   41c773 <flatcc_verify_vector_field@@Base>
  40db29:	mov    DWORD PTR [rbp-0x4],eax
  40db2c:	cmp    DWORD PTR [rbp-0x4],0x0
  40db30:	je     40db3a <_start@@Base+0x988a>
  40db32:	mov    eax,DWORD PTR [rbp-0x4]
  40db35:	jmp    40dfb5 <_start@@Base+0x9d05>
  40db3a:	mov    rax,QWORD PTR [rbp-0x18]
  40db3e:	mov    r9d,0x1fffffff
  40db44:	mov    r8d,0x4
  40db4a:	mov    ecx,0x8
  40db4f:	mov    edx,0x0
  40db54:	mov    esi,0x1d
  40db59:	mov    rdi,rax
  40db5c:	call   41c773 <flatcc_verify_vector_field@@Base>
  40db61:	mov    DWORD PTR [rbp-0x4],eax
  40db64:	cmp    DWORD PTR [rbp-0x4],0x0
  40db68:	je     40db72 <_start@@Base+0x98c2>
  40db6a:	mov    eax,DWORD PTR [rbp-0x4]
  40db6d:	jmp    40dfb5 <_start@@Base+0x9d05>
  40db72:	mov    rax,QWORD PTR [rbp-0x18]
  40db76:	lea    rcx,[rip+0xfffffffffffffdea]        # 40d967 <_start@@Base+0x96b7>
  40db7d:	mov    edx,0x0
  40db82:	mov    esi,0xc
  40db87:	mov    rdi,rax
  40db8a:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40db8f:	mov    DWORD PTR [rbp-0x4],eax
  40db92:	cmp    DWORD PTR [rbp-0x4],0x0
  40db96:	je     40dba0 <_start@@Base+0x98f0>
  40db98:	mov    eax,DWORD PTR [rbp-0x4]
  40db9b:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dba0:	mov    rax,QWORD PTR [rbp-0x18]
  40dba4:	lea    rcx,[rip+0xfffffffffffff44f]        # 40cffa <_start@@Base+0x8d4a>
  40dbab:	mov    edx,0x0
  40dbb0:	mov    esi,0x8
  40dbb5:	mov    rdi,rax
  40dbb8:	call   41d127 <flatcc_verify_union_field@@Base>
  40dbbd:	mov    DWORD PTR [rbp-0x4],eax
  40dbc0:	cmp    DWORD PTR [rbp-0x4],0x0
  40dbc4:	je     40dbce <_start@@Base+0x991e>
  40dbc6:	mov    eax,DWORD PTR [rbp-0x4]
  40dbc9:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dbce:	mov    rax,QWORD PTR [rbp-0x18]
  40dbd2:	mov    r9d,0x3fffffff
  40dbd8:	mov    r8d,0x2
  40dbde:	mov    ecx,0x4
  40dbe3:	mov    edx,0x0
  40dbe8:	mov    esi,0x9
  40dbed:	mov    rdi,rax
  40dbf0:	call   41c773 <flatcc_verify_vector_field@@Base>
  40dbf5:	mov    DWORD PTR [rbp-0x4],eax
  40dbf8:	cmp    DWORD PTR [rbp-0x4],0x0
  40dbfc:	je     40dc06 <_start@@Base+0x9956>
  40dbfe:	mov    eax,DWORD PTR [rbp-0x4]
  40dc01:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dc06:	mov    rax,QWORD PTR [rbp-0x18]
  40dc0a:	mov    r9d,0x3fffffff
  40dc10:	mov    r8d,0x2
  40dc16:	mov    ecx,0x4
  40dc1b:	mov    edx,0x0
  40dc20:	mov    esi,0x1f
  40dc25:	mov    rdi,rax
  40dc28:	call   41c773 <flatcc_verify_vector_field@@Base>
  40dc2d:	mov    DWORD PTR [rbp-0x4],eax
  40dc30:	cmp    DWORD PTR [rbp-0x4],0x0
  40dc34:	je     40dc3e <_start@@Base+0x998e>
  40dc36:	mov    eax,DWORD PTR [rbp-0x4]
  40dc39:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dc3e:	mov    rax,QWORD PTR [rbp-0x18]
  40dc42:	lea    r9,[rip+0xfffffffffffffd1e]        # 40d967 <_start@@Base+0x96b7>
  40dc49:	mov    r8d,0x1
  40dc4f:	mov    ecx,0x0
  40dc54:	mov    edx,0x0
  40dc59:	mov    esi,0xd
  40dc5e:	mov    rdi,rax
  40dc61:	call   41cfde <flatcc_verify_table_as_nested_root@@Base>
  40dc66:	mov    DWORD PTR [rbp-0x4],eax
  40dc69:	cmp    DWORD PTR [rbp-0x4],0x0
  40dc6d:	je     40dc77 <_start@@Base+0x99c7>
  40dc6f:	mov    eax,DWORD PTR [rbp-0x4]
  40dc72:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dc77:	mov    rax,QWORD PTR [rbp-0x18]
  40dc7b:	lea    rcx,[rip+0xfffffffffffff814]        # 40d496 <_start@@Base+0x91e6>
  40dc82:	mov    edx,0x0
  40dc87:	mov    esi,0xe
  40dc8c:	mov    rdi,rax
  40dc8f:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40dc94:	mov    DWORD PTR [rbp-0x4],eax
  40dc97:	cmp    DWORD PTR [rbp-0x4],0x0
  40dc9b:	je     40dca5 <_start@@Base+0x99f5>
  40dc9d:	mov    eax,DWORD PTR [rbp-0x4]
  40dca0:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dca5:	mov    rax,QWORD PTR [rbp-0x18]
  40dca9:	mov    ecx,0x1
  40dcae:	mov    edx,0x1
  40dcb3:	mov    esi,0xf
  40dcb8:	mov    rdi,rax
  40dcbb:	call   41c669 <flatcc_verify_field@@Base>
  40dcc0:	mov    DWORD PTR [rbp-0x4],eax
  40dcc3:	cmp    DWORD PTR [rbp-0x4],0x0
  40dcc7:	je     40dcd1 <_start@@Base+0x9a21>
  40dcc9:	mov    eax,DWORD PTR [rbp-0x4]
  40dccc:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dcd1:	mov    rax,QWORD PTR [rbp-0x18]
  40dcd5:	mov    ecx,0x4
  40dcda:	mov    edx,0x4
  40dcdf:	mov    esi,0x10
  40dce4:	mov    rdi,rax
  40dce7:	call   41c669 <flatcc_verify_field@@Base>
  40dcec:	mov    DWORD PTR [rbp-0x4],eax
  40dcef:	cmp    DWORD PTR [rbp-0x4],0x0
  40dcf3:	je     40dcfd <_start@@Base+0x9a4d>
  40dcf5:	mov    eax,DWORD PTR [rbp-0x4]
  40dcf8:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dcfd:	mov    rax,QWORD PTR [rbp-0x18]
  40dd01:	mov    ecx,0x4
  40dd06:	mov    edx,0x4
  40dd0b:	mov    esi,0x11
  40dd10:	mov    rdi,rax
  40dd13:	call   41c669 <flatcc_verify_field@@Base>
  40dd18:	mov    DWORD PTR [rbp-0x4],eax
  40dd1b:	cmp    DWORD PTR [rbp-0x4],0x0
  40dd1f:	je     40dd29 <_start@@Base+0x9a79>
  40dd21:	mov    eax,DWORD PTR [rbp-0x4]
  40dd24:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dd29:	mov    rax,QWORD PTR [rbp-0x18]
  40dd2d:	mov    ecx,0x8
  40dd32:	mov    edx,0x8
  40dd37:	mov    esi,0x12
  40dd3c:	mov    rdi,rax
  40dd3f:	call   41c669 <flatcc_verify_field@@Base>
  40dd44:	mov    DWORD PTR [rbp-0x4],eax
  40dd47:	cmp    DWORD PTR [rbp-0x4],0x0
  40dd4b:	je     40dd55 <_start@@Base+0x9aa5>
  40dd4d:	mov    eax,DWORD PTR [rbp-0x4]
  40dd50:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dd55:	mov    rax,QWORD PTR [rbp-0x18]
  40dd59:	mov    ecx,0x8
  40dd5e:	mov    edx,0x8
  40dd63:	mov    esi,0x13
  40dd68:	mov    rdi,rax
  40dd6b:	call   41c669 <flatcc_verify_field@@Base>
  40dd70:	mov    DWORD PTR [rbp-0x4],eax
  40dd73:	cmp    DWORD PTR [rbp-0x4],0x0
  40dd77:	je     40dd81 <_start@@Base+0x9ad1>
  40dd79:	mov    eax,DWORD PTR [rbp-0x4]
  40dd7c:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dd81:	mov    rax,QWORD PTR [rbp-0x18]
  40dd85:	mov    ecx,0x4
  40dd8a:	mov    edx,0x4
  40dd8f:	mov    esi,0x14
  40dd94:	mov    rdi,rax
  40dd97:	call   41c669 <flatcc_verify_field@@Base>
  40dd9c:	mov    DWORD PTR [rbp-0x4],eax
  40dd9f:	cmp    DWORD PTR [rbp-0x4],0x0
  40dda3:	je     40ddad <_start@@Base+0x9afd>
  40dda5:	mov    eax,DWORD PTR [rbp-0x4]
  40dda8:	jmp    40dfb5 <_start@@Base+0x9d05>
  40ddad:	mov    rax,QWORD PTR [rbp-0x18]
  40ddb1:	mov    ecx,0x4
  40ddb6:	mov    edx,0x4
  40ddbb:	mov    esi,0x15
  40ddc0:	mov    rdi,rax
  40ddc3:	call   41c669 <flatcc_verify_field@@Base>
  40ddc8:	mov    DWORD PTR [rbp-0x4],eax
  40ddcb:	cmp    DWORD PTR [rbp-0x4],0x0
  40ddcf:	je     40ddd9 <_start@@Base+0x9b29>
  40ddd1:	mov    eax,DWORD PTR [rbp-0x4]
  40ddd4:	jmp    40dfb5 <_start@@Base+0x9d05>
  40ddd9:	mov    rax,QWORD PTR [rbp-0x18]
  40dddd:	mov    ecx,0x8
  40dde2:	mov    edx,0x8
  40dde7:	mov    esi,0x16
  40ddec:	mov    rdi,rax
  40ddef:	call   41c669 <flatcc_verify_field@@Base>
  40ddf4:	mov    DWORD PTR [rbp-0x4],eax
  40ddf7:	cmp    DWORD PTR [rbp-0x4],0x0
  40ddfb:	je     40de05 <_start@@Base+0x9b55>
  40ddfd:	mov    eax,DWORD PTR [rbp-0x4]
  40de00:	jmp    40dfb5 <_start@@Base+0x9d05>
  40de05:	mov    rax,QWORD PTR [rbp-0x18]
  40de09:	mov    ecx,0x8
  40de0e:	mov    edx,0x8
  40de13:	mov    esi,0x17
  40de18:	mov    rdi,rax
  40de1b:	call   41c669 <flatcc_verify_field@@Base>
  40de20:	mov    DWORD PTR [rbp-0x4],eax
  40de23:	cmp    DWORD PTR [rbp-0x4],0x0
  40de27:	je     40de31 <_start@@Base+0x9b81>
  40de29:	mov    eax,DWORD PTR [rbp-0x4]
  40de2c:	jmp    40dfb5 <_start@@Base+0x9d05>
  40de31:	mov    rax,QWORD PTR [rbp-0x18]
  40de35:	mov    ecx,0x4
  40de3a:	mov    edx,0x4
  40de3f:	mov    esi,0x19
  40de44:	mov    rdi,rax
  40de47:	call   41c669 <flatcc_verify_field@@Base>
  40de4c:	mov    DWORD PTR [rbp-0x4],eax
  40de4f:	cmp    DWORD PTR [rbp-0x4],0x0
  40de53:	je     40de5d <_start@@Base+0x9bad>
  40de55:	mov    eax,DWORD PTR [rbp-0x4]
  40de58:	jmp    40dfb5 <_start@@Base+0x9d05>
  40de5d:	mov    rax,QWORD PTR [rbp-0x18]
  40de61:	mov    ecx,0x4
  40de66:	mov    edx,0x4
  40de6b:	mov    esi,0x1a
  40de70:	mov    rdi,rax
  40de73:	call   41c669 <flatcc_verify_field@@Base>
  40de78:	mov    DWORD PTR [rbp-0x4],eax
  40de7b:	cmp    DWORD PTR [rbp-0x4],0x0
  40de7f:	je     40de89 <_start@@Base+0x9bd9>
  40de81:	mov    eax,DWORD PTR [rbp-0x4]
  40de84:	jmp    40dfb5 <_start@@Base+0x9d05>
  40de89:	mov    rax,QWORD PTR [rbp-0x18]
  40de8d:	mov    ecx,0x4
  40de92:	mov    edx,0x4
  40de97:	mov    esi,0x1b
  40de9c:	mov    rdi,rax
  40de9f:	call   41c669 <flatcc_verify_field@@Base>
  40dea4:	mov    DWORD PTR [rbp-0x4],eax
  40dea7:	cmp    DWORD PTR [rbp-0x4],0x0
  40deab:	je     40deb5 <_start@@Base+0x9c05>
  40dead:	mov    eax,DWORD PTR [rbp-0x4]
  40deb0:	jmp    40dfb5 <_start@@Base+0x9d05>
  40deb5:	mov    rax,QWORD PTR [rbp-0x18]
  40deb9:	mov    r9d,0xffffffff
  40debf:	mov    r8d,0x1
  40dec5:	mov    ecx,0x1
  40deca:	mov    edx,0x0
  40decf:	mov    esi,0x1e
  40ded4:	mov    rdi,rax
  40ded7:	call   41c773 <flatcc_verify_vector_field@@Base>
  40dedc:	mov    DWORD PTR [rbp-0x4],eax
  40dedf:	cmp    DWORD PTR [rbp-0x4],0x0
  40dee3:	je     40deed <_start@@Base+0x9c3d>
  40dee5:	mov    eax,DWORD PTR [rbp-0x4]
  40dee8:	jmp    40dfb5 <_start@@Base+0x9d05>
  40deed:	mov    rax,QWORD PTR [rbp-0x18]
  40def1:	mov    r9d,0x1fffffff
  40def7:	mov    r8d,0x8
  40defd:	mov    ecx,0x8
  40df02:	mov    edx,0x0
  40df07:	mov    esi,0x20
  40df0c:	mov    rdi,rax
  40df0f:	call   41c773 <flatcc_verify_vector_field@@Base>
  40df14:	mov    DWORD PTR [rbp-0x4],eax
  40df17:	cmp    DWORD PTR [rbp-0x4],0x0
  40df1b:	je     40df25 <_start@@Base+0x9c75>
  40df1d:	mov    eax,DWORD PTR [rbp-0x4]
  40df20:	jmp    40dfb5 <_start@@Base+0x9d05>
  40df25:	mov    rax,QWORD PTR [rbp-0x18]
  40df29:	mov    r9d,0x1fffffff
  40df2f:	mov    r8d,0x8
  40df35:	mov    ecx,0x8
  40df3a:	mov    edx,0x0
  40df3f:	mov    esi,0x21
  40df44:	mov    rdi,rax
  40df47:	call   41c773 <flatcc_verify_vector_field@@Base>
  40df4c:	mov    DWORD PTR [rbp-0x4],eax
  40df4f:	cmp    DWORD PTR [rbp-0x4],0x0
  40df53:	je     40df5a <_start@@Base+0x9caa>
  40df55:	mov    eax,DWORD PTR [rbp-0x4]
  40df58:	jmp    40dfb5 <_start@@Base+0x9d05>
  40df5a:	mov    rax,QWORD PTR [rbp-0x18]
  40df5e:	lea    rcx,[rip+0xfffffffffffff254]        # 40d1b9 <_start@@Base+0x8f09>
  40df65:	mov    edx,0x0
  40df6a:	mov    esi,0x22
  40df6f:	mov    rdi,rax
  40df72:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40df77:	mov    DWORD PTR [rbp-0x4],eax
  40df7a:	cmp    DWORD PTR [rbp-0x4],0x0
  40df7e:	je     40df85 <_start@@Base+0x9cd5>
  40df80:	mov    eax,DWORD PTR [rbp-0x4]
  40df83:	jmp    40dfb5 <_start@@Base+0x9d05>
  40df85:	mov    rax,QWORD PTR [rbp-0x18]
  40df89:	lea    rcx,[rip+0xfffffffffffff920]        # 40d8b0 <_start@@Base+0x9600>
  40df90:	mov    edx,0x0
  40df95:	mov    esi,0x23
  40df9a:	mov    rdi,rax
  40df9d:	call   41c8e2 <flatcc_verify_table_field@@Base>
  40dfa2:	mov    DWORD PTR [rbp-0x4],eax
  40dfa5:	cmp    DWORD PTR [rbp-0x4],0x0
  40dfa9:	je     40dfb0 <_start@@Base+0x9d00>
  40dfab:	mov    eax,DWORD PTR [rbp-0x4]
  40dfae:	jmp    40dfb5 <_start@@Base+0x9d05>
  40dfb0:	mov    eax,0x0
  40dfb5:	leave  
  40dfb6:	ret    
  40dfb7:	push   rbp
  40dfb8:	mov    rbp,rsp
  40dfbb:	sub    rsp,0x10
  40dfbf:	mov    QWORD PTR [rbp-0x8],rdi
  40dfc3:	mov    QWORD PTR [rbp-0x10],rsi
  40dfc7:	mov    rsi,QWORD PTR [rbp-0x10]
  40dfcb:	mov    rax,QWORD PTR [rbp-0x8]
  40dfcf:	lea    rcx,[rip+0xfffffffffffff991]        # 40d967 <_start@@Base+0x96b7>
  40dfd6:	lea    rdx,[rip+0x10197]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40dfdd:	mov    rdi,rax
  40dfe0:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40dfe5:	leave  
  40dfe6:	ret    
  40dfe7:	push   rbp
  40dfe8:	mov    rbp,rsp
  40dfeb:	sub    rsp,0x10
  40dfef:	mov    QWORD PTR [rbp-0x8],rdi
  40dff3:	mov    QWORD PTR [rbp-0x10],rsi
  40dff7:	mov    rsi,QWORD PTR [rbp-0x10]
  40dffb:	mov    rax,QWORD PTR [rbp-0x8]
  40dfff:	lea    rcx,[rip+0xfffffffffffff961]        # 40d967 <_start@@Base+0x96b7>
  40e006:	lea    rdx,[rip+0x10847]        # 41e854 <_IO_stdin_used@@Base+0x854>
  40e00d:	mov    rdi,rax
  40e010:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40e015:	leave  
  40e016:	ret    
  40e017:	push   rbp
  40e018:	mov    rbp,rsp
  40e01b:	sub    rsp,0x20
  40e01f:	mov    QWORD PTR [rbp-0x8],rdi
  40e023:	mov    QWORD PTR [rbp-0x10],rsi
  40e027:	mov    QWORD PTR [rbp-0x18],rdx
  40e02b:	mov    rdx,QWORD PTR [rbp-0x18]
  40e02f:	mov    rsi,QWORD PTR [rbp-0x10]
  40e033:	mov    rax,QWORD PTR [rbp-0x8]
  40e037:	lea    rcx,[rip+0xfffffffffffff929]        # 40d967 <_start@@Base+0x96b7>
  40e03e:	mov    rdi,rax
  40e041:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40e046:	leave  
  40e047:	ret    
  40e048:	push   rbp
  40e049:	mov    rbp,rsp
  40e04c:	sub    rsp,0x20
  40e050:	mov    QWORD PTR [rbp-0x8],rdi
  40e054:	mov    QWORD PTR [rbp-0x10],rsi
  40e058:	mov    DWORD PTR [rbp-0x14],edx
  40e05b:	mov    edx,DWORD PTR [rbp-0x14]
  40e05e:	mov    rsi,QWORD PTR [rbp-0x10]
  40e062:	mov    rax,QWORD PTR [rbp-0x8]
  40e066:	lea    rcx,[rip+0xfffffffffffff8fa]        # 40d967 <_start@@Base+0x96b7>
  40e06d:	mov    rdi,rax
  40e070:	call   41ce63 <flatcc_verify_table_as_typed_root@@Base>
  40e075:	leave  
  40e076:	ret    
  40e077:	endbr64 
  40e07b:	push   rbp
  40e07c:	mov    rbp,rsp
  40e07f:	sub    rsp,0x20
  40e083:	mov    QWORD PTR [rbp-0x18],rdi
  40e087:	mov    rax,QWORD PTR [rbp-0x18]
  40e08b:	mov    ecx,0x1
  40e090:	mov    edx,0x1
  40e095:	mov    esi,0x0
  40e09a:	mov    rdi,rax
  40e09d:	call   41c669 <flatcc_verify_field@@Base>
  40e0a2:	mov    DWORD PTR [rbp-0x4],eax
  40e0a5:	cmp    DWORD PTR [rbp-0x4],0x0
  40e0a9:	je     40e0b3 <_start@@Base+0x9e03>
  40e0ab:	mov    eax,DWORD PTR [rbp-0x4]
  40e0ae:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e0b3:	mov    rax,QWORD PTR [rbp-0x18]
  40e0b7:	mov    ecx,0x1
  40e0bc:	mov    edx,0x1
  40e0c1:	mov    esi,0x1
  40e0c6:	mov    rdi,rax
  40e0c9:	call   41c669 <flatcc_verify_field@@Base>
  40e0ce:	mov    DWORD PTR [rbp-0x4],eax
  40e0d1:	cmp    DWORD PTR [rbp-0x4],0x0
  40e0d5:	je     40e0df <_start@@Base+0x9e2f>
  40e0d7:	mov    eax,DWORD PTR [rbp-0x4]
  40e0da:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e0df:	mov    rax,QWORD PTR [rbp-0x18]
  40e0e3:	mov    ecx,0x2
  40e0e8:	mov    edx,0x2
  40e0ed:	mov    esi,0x2
  40e0f2:	mov    rdi,rax
  40e0f5:	call   41c669 <flatcc_verify_field@@Base>
  40e0fa:	mov    DWORD PTR [rbp-0x4],eax
  40e0fd:	cmp    DWORD PTR [rbp-0x4],0x0
  40e101:	je     40e10b <_start@@Base+0x9e5b>
  40e103:	mov    eax,DWORD PTR [rbp-0x4]
  40e106:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e10b:	mov    rax,QWORD PTR [rbp-0x18]
  40e10f:	mov    ecx,0x2
  40e114:	mov    edx,0x2
  40e119:	mov    esi,0x3
  40e11e:	mov    rdi,rax
  40e121:	call   41c669 <flatcc_verify_field@@Base>
  40e126:	mov    DWORD PTR [rbp-0x4],eax
  40e129:	cmp    DWORD PTR [rbp-0x4],0x0
  40e12d:	je     40e137 <_start@@Base+0x9e87>
  40e12f:	mov    eax,DWORD PTR [rbp-0x4]
  40e132:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e137:	mov    rax,QWORD PTR [rbp-0x18]
  40e13b:	mov    ecx,0x4
  40e140:	mov    edx,0x4
  40e145:	mov    esi,0x4
  40e14a:	mov    rdi,rax
  40e14d:	call   41c669 <flatcc_verify_field@@Base>
  40e152:	mov    DWORD PTR [rbp-0x4],eax
  40e155:	cmp    DWORD PTR [rbp-0x4],0x0
  40e159:	je     40e163 <_start@@Base+0x9eb3>
  40e15b:	mov    eax,DWORD PTR [rbp-0x4]
  40e15e:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e163:	mov    rax,QWORD PTR [rbp-0x18]
  40e167:	mov    ecx,0x4
  40e16c:	mov    edx,0x4
  40e171:	mov    esi,0x5
  40e176:	mov    rdi,rax
  40e179:	call   41c669 <flatcc_verify_field@@Base>
  40e17e:	mov    DWORD PTR [rbp-0x4],eax
  40e181:	cmp    DWORD PTR [rbp-0x4],0x0
  40e185:	je     40e18f <_start@@Base+0x9edf>
  40e187:	mov    eax,DWORD PTR [rbp-0x4]
  40e18a:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e18f:	mov    rax,QWORD PTR [rbp-0x18]
  40e193:	mov    ecx,0x8
  40e198:	mov    edx,0x8
  40e19d:	mov    esi,0x6
  40e1a2:	mov    rdi,rax
  40e1a5:	call   41c669 <flatcc_verify_field@@Base>
  40e1aa:	mov    DWORD PTR [rbp-0x4],eax
  40e1ad:	cmp    DWORD PTR [rbp-0x4],0x0
  40e1b1:	je     40e1bb <_start@@Base+0x9f0b>
  40e1b3:	mov    eax,DWORD PTR [rbp-0x4]
  40e1b6:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e1bb:	mov    rax,QWORD PTR [rbp-0x18]
  40e1bf:	mov    ecx,0x8
  40e1c4:	mov    edx,0x8
  40e1c9:	mov    esi,0x7
  40e1ce:	mov    rdi,rax
  40e1d1:	call   41c669 <flatcc_verify_field@@Base>
  40e1d6:	mov    DWORD PTR [rbp-0x4],eax
  40e1d9:	cmp    DWORD PTR [rbp-0x4],0x0
  40e1dd:	je     40e1e7 <_start@@Base+0x9f37>
  40e1df:	mov    eax,DWORD PTR [rbp-0x4]
  40e1e2:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e1e7:	mov    rax,QWORD PTR [rbp-0x18]
  40e1eb:	mov    ecx,0x4
  40e1f0:	mov    edx,0x4
  40e1f5:	mov    esi,0x8
  40e1fa:	mov    rdi,rax
  40e1fd:	call   41c669 <flatcc_verify_field@@Base>
  40e202:	mov    DWORD PTR [rbp-0x4],eax
  40e205:	cmp    DWORD PTR [rbp-0x4],0x0
  40e209:	je     40e213 <_start@@Base+0x9f63>
  40e20b:	mov    eax,DWORD PTR [rbp-0x4]
  40e20e:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e213:	mov    rax,QWORD PTR [rbp-0x18]
  40e217:	mov    ecx,0x8
  40e21c:	mov    edx,0x8
  40e221:	mov    esi,0x9
  40e226:	mov    rdi,rax
  40e229:	call   41c669 <flatcc_verify_field@@Base>
  40e22e:	mov    DWORD PTR [rbp-0x4],eax
  40e231:	cmp    DWORD PTR [rbp-0x4],0x0
  40e235:	je     40e23c <_start@@Base+0x9f8c>
  40e237:	mov    eax,DWORD PTR [rbp-0x4]
  40e23a:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e23c:	mov    rax,QWORD PTR [rbp-0x18]
  40e240:	mov    r9d,0xffffffff
  40e246:	mov    r8d,0x1
  40e24c:	mov    ecx,0x1
  40e251:	mov    edx,0x0
  40e256:	mov    esi,0xa
  40e25b:	mov    rdi,rax
  40e25e:	call   41c773 <flatcc_verify_vector_field@@Base>
  40e263:	mov    DWORD PTR [rbp-0x4],eax
  40e266:	cmp    DWORD PTR [rbp-0x4],0x0
  40e26a:	je     40e271 <_start@@Base+0x9fc1>
  40e26c:	mov    eax,DWORD PTR [rbp-0x4]
  40e26f:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e271:	mov    rax,QWORD PTR [rbp-0x18]
  40e275:	mov    r9d,0x1fffffff
  40e27b:	mov    r8d,0x8
  40e281:	mov    ecx,0x8
  40e286:	mov    edx,0x0
  40e28b:	mov    esi,0xb
  40e290:	mov    rdi,rax
  40e293:	call   41c773 <flatcc_verify_vector_field@@Base>
  40e298:	mov    DWORD PTR [rbp-0x4],eax
  40e29b:	cmp    DWORD PTR [rbp-0x4],0x0
  40e29f:	je     40e2a6 <_start@@Base+0x9ff6>
  40e2a1:	mov    eax,DWORD PTR [rbp-0x4]
  40e2a4:	jmp    40e2ab <_start@@Base+0x9ffb>
  40e2a6:	mov    eax,0x0
  40e2ab:	leave  
  40e2ac:	ret    
  40e2ad:	push   rbp
  40e2ae:	mov    rbp,rsp
  40e2b1:	sub    rsp,0x10
  40e2b5:	mov    QWORD PTR [rbp-0x8],rdi
  40e2b9:	mov    QWORD PTR [rbp-0x10],rsi
  40e2bd:	mov    rsi,QWORD PTR [rbp-0x10]
  40e2c1:	mov    rax,QWORD PTR [rbp-0x8]
  40e2c5:	lea    rcx,[rip+0xfffffffffffffdab]        # 40e077 <_start@@Base+0x9dc7>
  40e2cc:	lea    rdx,[rip+0xfea1]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40e2d3:	mov    rdi,rax
  40e2d6:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40e2db:	leave  
  40e2dc:	ret    
  40e2dd:	endbr64 
  40e2e1:	push   rbp
  40e2e2:	mov    rbp,rsp
  40e2e5:	sub    rsp,0x20
  40e2e9:	mov    QWORD PTR [rbp-0x18],rdi
  40e2ed:	mov    rax,QWORD PTR [rbp-0x18]
  40e2f1:	mov    ecx,0x4
  40e2f6:	mov    edx,0x4
  40e2fb:	mov    esi,0x0
  40e300:	mov    rdi,rax
  40e303:	call   41c669 <flatcc_verify_field@@Base>
  40e308:	mov    DWORD PTR [rbp-0x4],eax
  40e30b:	cmp    DWORD PTR [rbp-0x4],0x0
  40e30f:	je     40e316 <_start@@Base+0xa066>
  40e311:	mov    eax,DWORD PTR [rbp-0x4]
  40e314:	jmp    40e31b <_start@@Base+0xa06b>
  40e316:	mov    eax,0x0
  40e31b:	leave  
  40e31c:	ret    
  40e31d:	endbr64 
  40e321:	push   rbp
  40e322:	mov    rbp,rsp
  40e325:	sub    rsp,0x20
  40e329:	mov    QWORD PTR [rbp-0x18],rdi
  40e32d:	mov    rax,QWORD PTR [rbp-0x18]
  40e331:	lea    rcx,[rip+0xffffffffffffed55]        # 40d08d <_start@@Base+0x8ddd>
  40e338:	mov    edx,0x0
  40e33d:	mov    esi,0x1
  40e342:	mov    rdi,rax
  40e345:	call   41d127 <flatcc_verify_union_field@@Base>
  40e34a:	mov    DWORD PTR [rbp-0x4],eax
  40e34d:	cmp    DWORD PTR [rbp-0x4],0x0
  40e351:	je     40e35b <_start@@Base+0xa0ab>
  40e353:	mov    eax,DWORD PTR [rbp-0x4]
  40e356:	jmp    40e40f <_start@@Base+0xa15f>
  40e35b:	mov    rax,QWORD PTR [rbp-0x18]
  40e35f:	lea    rcx,[rip+0xffffffffffffed27]        # 40d08d <_start@@Base+0x8ddd>
  40e366:	mov    edx,0x0
  40e36b:	mov    esi,0x3
  40e370:	mov    rdi,rax
  40e373:	call   41d127 <flatcc_verify_union_field@@Base>
  40e378:	mov    DWORD PTR [rbp-0x4],eax
  40e37b:	cmp    DWORD PTR [rbp-0x4],0x0
  40e37f:	je     40e389 <_start@@Base+0xa0d9>
  40e381:	mov    eax,DWORD PTR [rbp-0x4]
  40e384:	jmp    40e40f <_start@@Base+0xa15f>
  40e389:	mov    rax,QWORD PTR [rbp-0x18]
  40e38d:	lea    rcx,[rip+0xffffffffffffecf9]        # 40d08d <_start@@Base+0x8ddd>
  40e394:	mov    edx,0x0
  40e399:	mov    esi,0x5
  40e39e:	mov    rdi,rax
  40e3a1:	call   41d127 <flatcc_verify_union_field@@Base>
  40e3a6:	mov    DWORD PTR [rbp-0x4],eax
  40e3a9:	cmp    DWORD PTR [rbp-0x4],0x0
  40e3ad:	je     40e3b4 <_start@@Base+0xa104>
  40e3af:	mov    eax,DWORD PTR [rbp-0x4]
  40e3b2:	jmp    40e40f <_start@@Base+0xa15f>
  40e3b4:	mov    rax,QWORD PTR [rbp-0x18]
  40e3b8:	lea    rcx,[rip+0xffffffffffffecce]        # 40d08d <_start@@Base+0x8ddd>
  40e3bf:	mov    edx,0x0
  40e3c4:	mov    esi,0x7
  40e3c9:	mov    rdi,rax
  40e3cc:	call   41d127 <flatcc_verify_union_field@@Base>
  40e3d1:	mov    DWORD PTR [rbp-0x4],eax
  40e3d4:	cmp    DWORD PTR [rbp-0x4],0x0
  40e3d8:	je     40e3df <_start@@Base+0xa12f>
  40e3da:	mov    eax,DWORD PTR [rbp-0x4]
  40e3dd:	jmp    40e40f <_start@@Base+0xa15f>
  40e3df:	mov    rax,QWORD PTR [rbp-0x18]
  40e3e3:	lea    rcx,[rip+0xffffffffffffeca3]        # 40d08d <_start@@Base+0x8ddd>
  40e3ea:	mov    edx,0x0
  40e3ef:	mov    esi,0x9
  40e3f4:	mov    rdi,rax
  40e3f7:	call   41d32f <flatcc_verify_union_vector_field@@Base>
  40e3fc:	mov    DWORD PTR [rbp-0x4],eax
  40e3ff:	cmp    DWORD PTR [rbp-0x4],0x0
  40e403:	je     40e40a <_start@@Base+0xa15a>
  40e405:	mov    eax,DWORD PTR [rbp-0x4]
  40e408:	jmp    40e40f <_start@@Base+0xa15f>
  40e40a:	mov    eax,0x0
  40e40f:	leave  
  40e410:	ret    
  40e411:	push   rbp
  40e412:	mov    rbp,rsp
  40e415:	sub    rsp,0x10
  40e419:	mov    QWORD PTR [rbp-0x8],rdi
  40e41d:	mov    QWORD PTR [rbp-0x10],rsi
  40e421:	mov    rsi,QWORD PTR [rbp-0x10]
  40e425:	mov    rax,QWORD PTR [rbp-0x8]
  40e429:	lea    rcx,[rip+0xfffffffffffffeed]        # 40e31d <_start@@Base+0xa06d>
  40e430:	lea    rdx,[rip+0xfd3d]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40e437:	mov    rdi,rax
  40e43a:	call   41cdd6 <flatcc_verify_table_as_root@@Base>
  40e43f:	leave  
  40e440:	ret    
  40e441:	endbr64 
  40e445:	push   rbp
  40e446:	mov    rbp,rsp
  40e449:	sub    rsp,0x50
  40e44d:	mov    QWORD PTR [rbp-0x38],rdi
  40e451:	mov    QWORD PTR [rbp-0x40],rsi
  40e455:	mov    QWORD PTR [rbp-0x48],rdx
  40e459:	mov    QWORD PTR [rbp-0x50],rcx
  40e45d:	mov    rax,QWORD PTR fs:0x28
  40e466:	mov    QWORD PTR [rbp-0x8],rax
  40e46a:	xor    eax,eax
  40e46c:	mov    rax,QWORD PTR [rbp-0x40]
  40e470:	mov    QWORD PTR [rbp-0x28],rax
  40e474:	cmp    QWORD PTR [rbp-0x38],0x0
  40e479:	je     40e497 <_start@@Base+0xa1e7>
  40e47b:	mov    rdx,QWORD PTR [rbp-0x38]
  40e47f:	mov    rax,QWORD PTR [rbp-0x50]
  40e483:	lea    rsi,[rip+0x103cf]        # 41e859 <_IO_stdin_used@@Base+0x859>
  40e48a:	mov    rdi,rax
  40e48d:	mov    eax,0x0
  40e492:	call   404250 <fprintf@plt>
  40e497:	mov    DWORD PTR [rbp-0x2c],0x0
  40e49e:	jmp    40e58b <_start@@Base+0xa2db>
  40e4a3:	mov    eax,DWORD PTR [rbp-0x2c]
  40e4a6:	and    eax,0xf
  40e4a9:	test   eax,eax
  40e4ab:	jne    40e4ec <_start@@Base+0xa23c>
  40e4ad:	cmp    DWORD PTR [rbp-0x2c],0x0
  40e4b1:	je     40e4cf <_start@@Base+0xa21f>
  40e4b3:	lea    rdx,[rbp-0x20]
  40e4b7:	mov    rax,QWORD PTR [rbp-0x50]
  40e4bb:	lea    rsi,[rip+0x1039c]        # 41e85e <_IO_stdin_used@@Base+0x85e>
  40e4c2:	mov    rdi,rax
  40e4c5:	mov    eax,0x0
  40e4ca:	call   404250 <fprintf@plt>
  40e4cf:	mov    edx,DWORD PTR [rbp-0x2c]
  40e4d2:	mov    rax,QWORD PTR [rbp-0x50]
  40e4d6:	lea    rsi,[rip+0x10387]        # 41e864 <_IO_stdin_used@@Base+0x864>
  40e4dd:	mov    rdi,rax
  40e4e0:	mov    eax,0x0
  40e4e5:	call   404250 <fprintf@plt>
  40e4ea:	jmp    40e507 <_start@@Base+0xa257>
  40e4ec:	mov    eax,DWORD PTR [rbp-0x2c]
  40e4ef:	and    eax,0x7
  40e4f2:	test   eax,eax
  40e4f4:	jne    40e507 <_start@@Base+0xa257>
  40e4f6:	mov    rax,QWORD PTR [rbp-0x50]
  40e4fa:	mov    rsi,rax
  40e4fd:	mov    edi,0x20
  40e502:	call   404210 <fputc@plt>
  40e507:	mov    edx,DWORD PTR [rbp-0x2c]
  40e50a:	mov    rax,QWORD PTR [rbp-0x28]
  40e50e:	add    rax,rdx
  40e511:	movzx  eax,BYTE PTR [rax]
  40e514:	movzx  edx,al
  40e517:	mov    rax,QWORD PTR [rbp-0x50]
  40e51b:	lea    rsi,[rip+0x1034a]        # 41e86c <_IO_stdin_used@@Base+0x86c>
  40e522:	mov    rdi,rax
  40e525:	mov    eax,0x0
  40e52a:	call   404250 <fprintf@plt>
  40e52f:	mov    edx,DWORD PTR [rbp-0x2c]
  40e532:	mov    rax,QWORD PTR [rbp-0x28]
  40e536:	add    rax,rdx
  40e539:	movzx  eax,BYTE PTR [rax]
  40e53c:	cmp    al,0x1f
  40e53e:	jbe    40e551 <_start@@Base+0xa2a1>
  40e540:	mov    edx,DWORD PTR [rbp-0x2c]
  40e543:	mov    rax,QWORD PTR [rbp-0x28]
  40e547:	add    rax,rdx
  40e54a:	movzx  eax,BYTE PTR [rax]
  40e54d:	cmp    al,0x7e
  40e54f:	jbe    40e560 <_start@@Base+0xa2b0>
  40e551:	mov    eax,DWORD PTR [rbp-0x2c]
  40e554:	and    eax,0xf
  40e557:	mov    eax,eax
  40e559:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  40e55e:	jmp    40e579 <_start@@Base+0xa2c9>
  40e560:	mov    edx,DWORD PTR [rbp-0x2c]
  40e563:	mov    rax,QWORD PTR [rbp-0x28]
  40e567:	add    rax,rdx
  40e56a:	mov    edx,DWORD PTR [rbp-0x2c]
  40e56d:	and    edx,0xf
  40e570:	movzx  eax,BYTE PTR [rax]
  40e573:	mov    edx,edx
  40e575:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  40e579:	mov    eax,DWORD PTR [rbp-0x2c]
  40e57c:	and    eax,0xf
  40e57f:	inc    eax
  40e581:	mov    eax,eax
  40e583:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  40e588:	inc    DWORD PTR [rbp-0x2c]
  40e58b:	mov    rax,QWORD PTR [rbp-0x48]
  40e58f:	cmp    DWORD PTR [rbp-0x2c],eax
  40e592:	jb     40e4a3 <_start@@Base+0xa1f3>
  40e598:	jmp    40e5ba <_start@@Base+0xa30a>
  40e59a:	mov    rax,QWORD PTR [rbp-0x50]
  40e59e:	mov    rcx,rax
  40e5a1:	mov    edx,0x3
  40e5a6:	mov    esi,0x1
  40e5ab:	lea    rdi,[rip+0x102c0]        # 41e872 <_IO_stdin_used@@Base+0x872>
  40e5b2:	call   404290 <fwrite@plt>
  40e5b7:	inc    DWORD PTR [rbp-0x2c]
  40e5ba:	mov    eax,DWORD PTR [rbp-0x2c]
  40e5bd:	and    eax,0xf
  40e5c0:	test   eax,eax
  40e5c2:	jne    40e59a <_start@@Base+0xa2ea>
  40e5c4:	lea    rdx,[rbp-0x20]
  40e5c8:	mov    rax,QWORD PTR [rbp-0x50]
  40e5cc:	lea    rsi,[rip+0x1028b]        # 41e85e <_IO_stdin_used@@Base+0x85e>
  40e5d3:	mov    rdi,rax
  40e5d6:	mov    eax,0x0
  40e5db:	call   404250 <fprintf@plt>
  40e5e0:	nop
  40e5e1:	mov    rax,QWORD PTR [rbp-0x8]
  40e5e5:	xor    rax,QWORD PTR fs:0x28
  40e5ee:	je     40e5f5 <_start@@Base+0xa345>
  40e5f0:	call   4041c0 <__stack_chk_fail@plt>
  40e5f5:	leave  
  40e5f6:	ret    
  40e5f7:	endbr64 
  40e5fb:	push   rbp
  40e5fc:	mov    rbp,rsp
  40e5ff:	sub    rsp,0x20
  40e603:	mov    rax,QWORD PTR fs:0x28
  40e60c:	mov    QWORD PTR [rbp-0x8],rax
  40e610:	xor    eax,eax
  40e612:	lea    rax,[rbp-0x20]
  40e616:	mov    esi,0x0
  40e61b:	mov    rdi,rax
  40e61e:	call   4041e0 <gettimeofday@plt>
  40e623:	mov    rax,QWORD PTR [rip+0x1dac6]        # 42c0f0 <__bss_start@@Base+0x18>
  40e62a:	test   rax,rax
  40e62d:	jne    40e645 <_start@@Base+0xa395>
  40e62f:	mov    rax,QWORD PTR [rbp-0x20]
  40e633:	mov    rdx,QWORD PTR [rbp-0x18]
  40e637:	mov    QWORD PTR [rip+0x1dab2],rax        # 42c0f0 <__bss_start@@Base+0x18>
  40e63e:	mov    QWORD PTR [rip+0x1dab3],rdx        # 42c0f8 <__bss_start@@Base+0x20>
  40e645:	mov    rdx,QWORD PTR [rbp-0x20]
  40e649:	mov    rax,QWORD PTR [rip+0x1daa0]        # 42c0f0 <__bss_start@@Base+0x18>
  40e650:	sub    rdx,rax
  40e653:	mov    rax,rdx
  40e656:	vcvtsi2sd xmm1,xmm1,rax
  40e65b:	mov    rdx,QWORD PTR [rbp-0x18]
  40e65f:	mov    rax,QWORD PTR [rip+0x1da92]        # 42c0f8 <__bss_start@@Base+0x20>
  40e666:	sub    rdx,rax
  40e669:	mov    rax,rdx
  40e66c:	vcvtsi2sd xmm0,xmm0,rax
  40e671:	vmovsd xmm2,QWORD PTR [rip+0x13b5f]        # 4221d8 <_IO_stdin_used@@Base+0x41d8>
  40e679:	vdivsd xmm0,xmm0,xmm2
  40e67d:	vaddsd xmm0,xmm1,xmm0
  40e681:	vmovq  rax,xmm0
  40e686:	vmovq  xmm0,rax
  40e68b:	mov    rax,QWORD PTR [rbp-0x8]
  40e68f:	xor    rax,QWORD PTR fs:0x28
  40e698:	je     40e69f <_start@@Base+0xa3ef>
  40e69a:	call   4041c0 <__stack_chk_fail@plt>
  40e69f:	leave  
  40e6a0:	ret    
  40e6a1:	endbr64 
  40e6a5:	push   rbp
  40e6a6:	mov    rbp,rsp
  40e6a9:	sub    rsp,0x40
  40e6ad:	mov    QWORD PTR [rbp-0x18],rdi
  40e6b1:	vmovsd QWORD PTR [rbp-0x20],xmm0
  40e6b6:	vmovsd QWORD PTR [rbp-0x28],xmm1
  40e6bb:	mov    QWORD PTR [rbp-0x30],rsi
  40e6bf:	mov    DWORD PTR [rbp-0x34],edx
  40e6c2:	mov    QWORD PTR [rbp-0x40],rcx
  40e6c6:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  40e6cb:	vsubsd xmm0,xmm0,QWORD PTR [rbp-0x20]
  40e6d0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40e6d5:	mov    rax,QWORD PTR [rbp-0x18]
  40e6d9:	mov    rsi,rax
  40e6dc:	lea    rdi,[rip+0x10193]        # 41e876 <_IO_stdin_used@@Base+0x876>
  40e6e3:	mov    eax,0x0
  40e6e8:	call   4041d0 <printf@plt>
  40e6ed:	mov    rax,QWORD PTR [rbp-0x10]
  40e6f1:	vmovq  xmm0,rax
  40e6f6:	lea    rdi,[rip+0x10188]        # 41e885 <_IO_stdin_used@@Base+0x885>
  40e6fd:	mov    eax,0x1
  40e702:	call   4041d0 <printf@plt>
  40e707:	mov    eax,DWORD PTR [rbp-0x34]
  40e70a:	mov    esi,eax
  40e70c:	lea    rdi,[rip+0x1018a]        # 41e89d <_IO_stdin_used@@Base+0x89d>
  40e713:	mov    eax,0x0
  40e718:	call   4041d0 <printf@plt>
  40e71d:	mov    rax,QWORD PTR [rbp-0x30]
  40e721:	mov    rsi,rax
  40e724:	lea    rdi,[rip+0x10182]        # 41e8ad <_IO_stdin_used@@Base+0x8ad>
  40e72b:	mov    eax,0x0
  40e730:	call   4041d0 <printf@plt>
  40e735:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  40e73a:	mov    rax,QWORD PTR [rbp-0x30]
  40e73e:	test   rax,rax
  40e741:	js     40e74a <_start@@Base+0xa49a>
  40e743:	vcvtsi2sd xmm0,xmm0,rax
  40e748:	jmp    40e75f <_start@@Base+0xa4af>
  40e74a:	mov    rdx,rax
  40e74d:	shr    rdx,1
  40e750:	and    eax,0x1
  40e753:	or     rdx,rax
  40e756:	vcvtsi2sd xmm0,xmm0,rdx
  40e75b:	vaddsd xmm0,xmm0,xmm0
  40e75f:	vmulsd xmm0,xmm1,xmm0
  40e763:	vmovsd xmm1,QWORD PTR [rip+0x13a6d]        # 4221d8 <_IO_stdin_used@@Base+0x41d8>
  40e76b:	vdivsd xmm0,xmm0,xmm1
  40e76f:	vdivsd xmm2,xmm0,QWORD PTR [rbp-0x10]
  40e774:	vmovq  rax,xmm2
  40e779:	vmovq  xmm0,rax
  40e77e:	lea    rdi,[rip+0x1013b]        # 41e8c0 <_IO_stdin_used@@Base+0x8c0>
  40e785:	mov    eax,0x1
  40e78a:	call   4041d0 <printf@plt>
  40e78f:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x34]
  40e794:	vdivsd xmm3,xmm0,QWORD PTR [rbp-0x10]
  40e799:	vmovq  rax,xmm3
  40e79e:	vmovq  xmm0,rax
  40e7a3:	lea    rdi,[rip+0x1012e]        # 41e8d8 <_IO_stdin_used@@Base+0x8d8>
  40e7aa:	mov    eax,0x1
  40e7af:	call   4041d0 <printf@plt>
  40e7b4:	cmp    QWORD PTR [rbp-0x40],0x0
  40e7b9:	je     40e7f0 <_start@@Base+0xa540>
  40e7bb:	cmp    DWORD PTR [rbp-0x34],0x1
  40e7bf:	je     40e7f0 <_start@@Base+0xa540>
  40e7c1:	vmovsd xmm0,QWORD PTR [rip+0x13a17]        # 4221e0 <_IO_stdin_used@@Base+0x41e0>
  40e7c9:	vdivsd xmm4,xmm0,QWORD PTR [rbp-0x10]
  40e7ce:	vmovq  rax,xmm4
  40e7d3:	mov    rdx,QWORD PTR [rbp-0x40]
  40e7d7:	vmovq  xmm0,rax
  40e7dc:	mov    rsi,rdx
  40e7df:	lea    rdi,[rip+0x1011a]        # 41e900 <_IO_stdin_used@@Base+0x900>
  40e7e6:	mov    eax,0x1
  40e7eb:	call   4041d0 <printf@plt>
  40e7f0:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40e7f5:	vmovsd xmm0,QWORD PTR [rip+0x139eb]        # 4221e8 <_IO_stdin_used@@Base+0x41e8>
  40e7fd:	vmulsd xmm0,xmm1,xmm0
  40e801:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  40e806:	vdivsd xmm0,xmm0,xmm1
  40e80a:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40e80f:	vmovsd xmm0,QWORD PTR [rip+0x139d9]        # 4221f0 <_IO_stdin_used@@Base+0x41f0>
  40e817:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  40e81c:	jbe    40e83d <_start@@Base+0xa58d>
  40e81e:	mov    rax,QWORD PTR [rbp-0x8]
  40e822:	vmovq  xmm0,rax
  40e827:	lea    rdi,[rip+0x100f6]        # 41e924 <_IO_stdin_used@@Base+0x924>
  40e82e:	mov    eax,0x1
  40e833:	call   4041d0 <printf@plt>
  40e838:	jmp    40e8e3 <_start@@Base+0xa633>
  40e83d:	vmovsd xmm0,QWORD PTR [rip+0x13993]        # 4221d8 <_IO_stdin_used@@Base+0x41d8>
  40e845:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  40e84a:	jbe    40e87a <_start@@Base+0xa5ca>
  40e84c:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40e851:	vmovsd xmm1,QWORD PTR [rip+0x13997]        # 4221f0 <_IO_stdin_used@@Base+0x41f0>
  40e859:	vdivsd xmm5,xmm0,xmm1
  40e85d:	vmovq  rax,xmm5
  40e862:	vmovq  xmm0,rax
  40e867:	lea    rdi,[rip+0x100ce]        # 41e93c <_IO_stdin_used@@Base+0x93c>
  40e86e:	mov    eax,0x1
  40e873:	call   4041d0 <printf@plt>
  40e878:	jmp    40e8e3 <_start@@Base+0xa633>
  40e87a:	vmovsd xmm0,QWORD PTR [rip+0x13966]        # 4221e8 <_IO_stdin_used@@Base+0x41e8>
  40e882:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  40e887:	jbe    40e8b7 <_start@@Base+0xa607>
  40e889:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40e88e:	vmovsd xmm1,QWORD PTR [rip+0x13942]        # 4221d8 <_IO_stdin_used@@Base+0x41d8>
  40e896:	vdivsd xmm6,xmm0,xmm1
  40e89a:	vmovq  rax,xmm6
  40e89f:	vmovq  xmm0,rax
  40e8a4:	lea    rdi,[rip+0x100a9]        # 41e954 <_IO_stdin_used@@Base+0x954>
  40e8ab:	mov    eax,0x1
  40e8b0:	call   4041d0 <printf@plt>
  40e8b5:	jmp    40e8e3 <_start@@Base+0xa633>
  40e8b7:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40e8bc:	vmovsd xmm1,QWORD PTR [rip+0x13924]        # 4221e8 <_IO_stdin_used@@Base+0x41e8>
  40e8c4:	vdivsd xmm7,xmm0,xmm1
  40e8c8:	vmovq  rax,xmm7
  40e8cd:	vmovq  xmm0,rax
  40e8d2:	lea    rdi,[rip+0x10093]        # 41e96c <_IO_stdin_used@@Base+0x96c>
  40e8d9:	mov    eax,0x1
  40e8de:	call   4041d0 <printf@plt>
  40e8e3:	mov    eax,0x0
  40e8e8:	leave  
  40e8e9:	ret    

000000000040e8ea <verify_empty_monster@@Base>:
  40e8ea:	endbr64 
  40e8ee:	push   rbp
  40e8ef:	mov    rbp,rsp
  40e8f2:	sub    rsp,0x40
  40e8f6:	mov    QWORD PTR [rbp-0x38],rdi
  40e8fa:	mov    rax,QWORD PTR [rbp-0x38]
  40e8fe:	lea    rsi,[rip+0xf86f]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40e905:	mov    rdi,rax
  40e908:	call   4063ef <_start@@Base+0x213f>
  40e90d:	mov    QWORD PTR [rbp-0x28],rax
  40e911:	mov    rax,QWORD PTR [rbp-0x38]
  40e915:	lea    rsi,[rip+0x100e8]        # 41ea04 <_IO_stdin_used@@Base+0xa04>
  40e91c:	mov    rdi,rax
  40e91f:	call   4063ef <_start@@Base+0x213f>
  40e924:	mov    QWORD PTR [rbp-0x20],rax
  40e928:	mov    rax,QWORD PTR [rbp-0x38]
  40e92c:	mov    esi,0x0
  40e931:	mov    rdi,rax
  40e934:	call   4063ef <_start@@Base+0x213f>
  40e939:	mov    QWORD PTR [rbp-0x18],rax
  40e93d:	mov    rax,QWORD PTR [rbp-0x38]
  40e941:	lea    rsi,[rip+0x100c1]        # 41ea09 <_IO_stdin_used@@Base+0xa09>
  40e948:	mov    rdi,rax
  40e94b:	call   4063ef <_start@@Base+0x213f>
  40e950:	mov    QWORD PTR [rbp-0x10],rax
  40e954:	mov    rax,QWORD PTR [rbp-0x38]
  40e958:	mov    rdi,rax
  40e95b:	call   40643b <_start@@Base+0x218b>
  40e960:	mov    QWORD PTR [rbp-0x8],rax
  40e964:	cmp    QWORD PTR [rbp-0x28],0x0
  40e969:	jne    40e981 <verify_empty_monster@@Base+0x97>
  40e96b:	lea    rdi,[rip+0x1009d]        # 41ea0f <_IO_stdin_used@@Base+0xa0f>
  40e972:	call   4041a0 <puts@plt>
  40e977:	mov    eax,0xffffffff
  40e97c:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40e981:	cmp    QWORD PTR [rbp-0x20],0x0
  40e986:	je     40e99e <verify_empty_monster@@Base+0xb4>
  40e988:	lea    rdi,[rip+0x10099]        # 41ea28 <_IO_stdin_used@@Base+0xa28>
  40e98f:	call   4041a0 <puts@plt>
  40e994:	mov    eax,0xffffffff
  40e999:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40e99e:	mov    rax,QWORD PTR [rbp-0x18]
  40e9a2:	cmp    rax,QWORD PTR [rbp-0x28]
  40e9a6:	je     40e9be <verify_empty_monster@@Base+0xd4>
  40e9a8:	lea    rdi,[rip+0x100a9]        # 41ea58 <_IO_stdin_used@@Base+0xa58>
  40e9af:	call   4041a0 <puts@plt>
  40e9b4:	mov    eax,0xffffffff
  40e9b9:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40e9be:	mov    rax,QWORD PTR [rbp-0x10]
  40e9c2:	cmp    rax,QWORD PTR [rbp-0x28]
  40e9c6:	je     40e9e3 <verify_empty_monster@@Base+0xf9>
  40e9c8:	lea    rdi,[rip+0x100c1]        # 41ea90 <_IO_stdin_used@@Base+0xa90>
  40e9cf:	mov    eax,0x0
  40e9d4:	call   4041d0 <printf@plt>
  40e9d9:	mov    eax,0xffffffff
  40e9de:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40e9e3:	mov    rax,QWORD PTR [rbp-0x8]
  40e9e7:	cmp    rax,QWORD PTR [rbp-0x28]
  40e9eb:	je     40ea08 <verify_empty_monster@@Base+0x11e>
  40e9ed:	lea    rdi,[rip+0x100d4]        # 41eac8 <_IO_stdin_used@@Base+0xac8>
  40e9f4:	mov    eax,0x0
  40e9f9:	call   4041d0 <printf@plt>
  40e9fe:	mov    eax,0xffffffff
  40ea03:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40ea08:	mov    rax,QWORD PTR [rbp-0x28]
  40ea0c:	mov    rdi,rax
  40ea0f:	call   4065f0 <_start@@Base+0x2340>
  40ea14:	cmp    ax,0x64
  40ea18:	je     40ea2d <verify_empty_monster@@Base+0x143>
  40ea1a:	lea    rdi,[rip+0x100d7]        # 41eaf8 <_IO_stdin_used@@Base+0xaf8>
  40ea21:	call   4041a0 <puts@plt>
  40ea26:	mov    eax,0xffffffff
  40ea2b:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40ea2d:	mov    rax,QWORD PTR [rbp-0x28]
  40ea31:	mov    rdi,rax
  40ea34:	call   4066b0 <_start@@Base+0x2400>
  40ea39:	test   eax,eax
  40ea3b:	je     40ea50 <verify_empty_monster@@Base+0x166>
  40ea3d:	lea    rdi,[rip+0x100d6]        # 41eb1a <_IO_stdin_used@@Base+0xb1a>
  40ea44:	call   4041a0 <puts@plt>
  40ea49:	mov    eax,0xffffffff
  40ea4e:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40ea50:	mov    rax,QWORD PTR [rbp-0x28]
  40ea54:	mov    rdi,rax
  40ea57:	call   406546 <_start@@Base+0x2296>
  40ea5c:	test   eax,eax
  40ea5e:	je     40ea73 <verify_empty_monster@@Base+0x189>
  40ea60:	lea    rdi,[rip+0x100d0]        # 41eb37 <_IO_stdin_used@@Base+0xb37>
  40ea67:	call   4041a0 <puts@plt>
  40ea6c:	mov    eax,0xffffffff
  40ea71:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40ea73:	mov    rax,QWORD PTR [rbp-0x28]
  40ea77:	mov    rdi,rax
  40ea7a:	call   40648e <_start@@Base+0x21de>
  40ea7f:	test   rax,rax
  40ea82:	je     40ea97 <verify_empty_monster@@Base+0x1ad>
  40ea84:	lea    rdi,[rip+0x100cd]        # 41eb58 <_IO_stdin_used@@Base+0xb58>
  40ea8b:	call   4041a0 <puts@plt>
  40ea90:	mov    eax,0xffffffff
  40ea95:	jmp    40ea9c <verify_empty_monster@@Base+0x1b2>
  40ea97:	mov    eax,0x0
  40ea9c:	leave  
  40ea9d:	ret    

000000000040ea9e <test_enums@@Base>:
  40ea9e:	endbr64 
  40eaa2:	push   rbp
  40eaa3:	mov    rbp,rsp
  40eaa6:	mov    QWORD PTR [rbp-0x8],rdi
  40eaaa:	mov    eax,0x0
  40eaaf:	pop    rbp
  40eab0:	ret    

000000000040eab1 <test_type_aliases@@Base>:
  40eab1:	endbr64 
  40eab5:	push   rbp
  40eab6:	mov    rbp,rsp
  40eab9:	sub    rsp,0x40
  40eabd:	mov    QWORD PTR [rbp-0x38],rdi
  40eac1:	mov    rax,QWORD PTR fs:0x28
  40eaca:	mov    QWORD PTR [rbp-0x8],rax
  40eace:	xor    eax,eax
  40ead0:	mov    DWORD PTR [rbp-0x2c],0x0
  40ead7:	mov    QWORD PTR [rbp-0x18],0x0
  40eadf:	mov    rax,QWORD PTR [rbp-0x38]
  40eae3:	mov    rdi,rax
  40eae6:	call   416246 <flatcc_builder_reset@@Base>
  40eaeb:	mov    rax,QWORD PTR [rbp-0x38]
  40eaef:	mov    edx,0x0
  40eaf4:	mov    esi,0x0
  40eaf9:	mov    rdi,rax
  40eafc:	call   40988e <_start@@Base+0x55de>
  40eb01:	mov    DWORD PTR [rbp-0x28],eax
  40eb04:	mov    rax,QWORD PTR [rbp-0x38]
  40eb08:	mov    edx,0x0
  40eb0d:	mov    esi,0x0
  40eb12:	mov    rdi,rax
  40eb15:	call   409c52 <_start@@Base+0x59a2>
  40eb1a:	mov    DWORD PTR [rbp-0x24],eax
  40eb1d:	vmovsd xmm0,QWORD PTR [rip+0x136d3]        # 4221f8 <_IO_stdin_used@@Base+0x41f8>
  40eb25:	mov    rax,QWORD PTR [rbp-0x38]
  40eb29:	sub    rsp,0x8
  40eb2d:	mov    edx,DWORD PTR [rbp-0x24]
  40eb30:	push   rdx
  40eb31:	mov    edx,DWORD PTR [rbp-0x28]
  40eb34:	push   rdx
  40eb35:	push   0xffffffffffffffff
  40eb37:	push   0x0
  40eb39:	mov    DWORD PTR [rsp+0x4],0x80000000
  40eb41:	push   0xffffffffffffffff
  40eb43:	vmovapd xmm1,xmm0
  40eb47:	vmovss xmm0,DWORD PTR [rip+0x136b1]        # 422200 <_IO_stdin_used@@Base+0x4200>
  40eb4f:	mov    r9d,0x80000000
  40eb55:	mov    r8d,0xffff
  40eb5b:	mov    ecx,0xffff8000
  40eb60:	mov    edx,0xff
  40eb65:	mov    esi,0xffffff80
  40eb6a:	mov    rdi,rax
  40eb6d:	call   40c821 <_start@@Base+0x8571>
  40eb72:	add    rsp,0x30
  40eb76:	lea    rdx,[rbp-0x20]
  40eb7a:	mov    rax,QWORD PTR [rbp-0x38]
  40eb7e:	mov    rsi,rdx
  40eb81:	mov    rdi,rax
  40eb84:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  40eb89:	mov    QWORD PTR [rbp-0x18],rax
  40eb8d:	mov    rdx,QWORD PTR [rbp-0x20]
  40eb91:	mov    rax,QWORD PTR [rbp-0x18]
  40eb95:	mov    rsi,rdx
  40eb98:	mov    rdi,rax
  40eb9b:	call   40e2ad <_start@@Base+0x9ffd>
  40eba0:	mov    DWORD PTR [rbp-0x2c],eax
  40eba3:	cmp    DWORD PTR [rbp-0x2c],0x0
  40eba7:	je     40ebed <test_type_aliases@@Base+0x13c>
  40eba9:	mov    rax,QWORD PTR [rip+0x1d448]        # 42bff8 <stderr@GLIBC_2.2.5>
  40ebb0:	mov    rcx,QWORD PTR [rax]
  40ebb3:	mov    rdx,QWORD PTR [rbp-0x20]
  40ebb7:	mov    rax,QWORD PTR [rbp-0x18]
  40ebbb:	mov    rsi,rax
  40ebbe:	lea    rdi,[rip+0xffb3]        # 41eb78 <_IO_stdin_used@@Base+0xb78>
  40ebc5:	call   40e441 <_start@@Base+0xa191>
  40ebca:	mov    eax,DWORD PTR [rbp-0x2c]
  40ebcd:	mov    edi,eax
  40ebcf:	call   41b868 <flatcc_verify_error_string@@Base>
  40ebd4:	mov    rsi,rax
  40ebd7:	lea    rdi,[rip+0xffb2]        # 41eb90 <_IO_stdin_used@@Base+0xb90>
  40ebde:	mov    eax,0x0
  40ebe3:	call   4041d0 <printf@plt>
  40ebe8:	jmp    40ecf2 <test_type_aliases@@Base+0x241>
  40ebed:	mov    rax,QWORD PTR [rbp-0x18]
  40ebf1:	mov    rdi,rax
  40ebf4:	call   40839f <_start@@Base+0x40ef>
  40ebf9:	mov    QWORD PTR [rbp-0x10],rax
  40ebfd:	mov    rax,QWORD PTR [rbp-0x10]
  40ec01:	mov    rdi,rax
  40ec04:	call   4083f2 <_start@@Base+0x4142>
  40ec09:	cmp    al,0x80
  40ec0b:	jne    40ed12 <test_type_aliases@@Base+0x261>
  40ec11:	mov    rax,QWORD PTR [rbp-0x10]
  40ec15:	mov    rdi,rax
  40ec18:	call   408572 <_start@@Base+0x42c2>
  40ec1d:	cmp    ax,0x8000
  40ec21:	jne    40ed15 <test_type_aliases@@Base+0x264>
  40ec27:	mov    rax,QWORD PTR [rbp-0x10]
  40ec2b:	mov    rdi,rax
  40ec2e:	call   4086f2 <_start@@Base+0x4442>
  40ec33:	cmp    eax,0x80000000
  40ec38:	jne    40ed18 <test_type_aliases@@Base+0x267>
  40ec3e:	mov    rax,QWORD PTR [rbp-0x10]
  40ec42:	mov    rdi,rax
  40ec45:	call   408872 <_start@@Base+0x45c2>
  40ec4a:	mov    rdx,rax
  40ec4d:	movabs rax,0x8000000000000000
  40ec57:	cmp    rdx,rax
  40ec5a:	jne    40ed1b <test_type_aliases@@Base+0x26a>
  40ec60:	mov    rax,QWORD PTR [rbp-0x10]
  40ec64:	mov    rdi,rax
  40ec67:	call   4084b2 <_start@@Base+0x4202>
  40ec6c:	cmp    al,0xff
  40ec6e:	jne    40ed1e <test_type_aliases@@Base+0x26d>
  40ec74:	mov    rax,QWORD PTR [rbp-0x10]
  40ec78:	mov    rdi,rax
  40ec7b:	call   408632 <_start@@Base+0x4382>
  40ec80:	cmp    ax,0xffff
  40ec84:	jne    40ed21 <test_type_aliases@@Base+0x270>
  40ec8a:	mov    rax,QWORD PTR [rbp-0x10]
  40ec8e:	mov    rdi,rax
  40ec91:	call   4087b2 <_start@@Base+0x4502>
  40ec96:	cmp    eax,0xffffffff
  40ec99:	jne    40ed24 <test_type_aliases@@Base+0x273>
  40ec9f:	mov    rax,QWORD PTR [rbp-0x10]
  40eca3:	mov    rdi,rax
  40eca6:	call   408932 <_start@@Base+0x4682>
  40ecab:	cmp    rax,0xffffffffffffffff
  40ecaf:	jne    40ed27 <test_type_aliases@@Base+0x276>
  40ecb1:	mov    rax,QWORD PTR [rbp-0x10]
  40ecb5:	mov    rdi,rax
  40ecb8:	call   4089f2 <_start@@Base+0x4742>
  40ecbd:	vucomiss xmm0,DWORD PTR [rip+0x1353b]        # 422200 <_IO_stdin_used@@Base+0x4200>
  40ecc5:	jp     40ed2a <test_type_aliases@@Base+0x279>
  40ecc7:	vucomiss xmm0,DWORD PTR [rip+0x13531]        # 422200 <_IO_stdin_used@@Base+0x4200>
  40eccf:	jne    40ed2a <test_type_aliases@@Base+0x279>
  40ecd1:	mov    rax,QWORD PTR [rbp-0x10]
  40ecd5:	mov    rdi,rax
  40ecd8:	call   408abb <_start@@Base+0x480b>
  40ecdd:	vucomisd xmm0,QWORD PTR [rip+0x13513]        # 4221f8 <_IO_stdin_used@@Base+0x41f8>
  40ece5:	jp     40ed2d <test_type_aliases@@Base+0x27c>
  40ece7:	vucomisd xmm0,QWORD PTR [rip+0x13509]        # 4221f8 <_IO_stdin_used@@Base+0x41f8>
  40ecef:	jne    40ed2d <test_type_aliases@@Base+0x27c>
  40ecf1:	nop
  40ecf2:	mov    rax,QWORD PTR [rbp-0x18]
  40ecf6:	mov    rdi,rax
  40ecf9:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  40ecfe:	mov    eax,DWORD PTR [rbp-0x2c]
  40ed01:	mov    rcx,QWORD PTR [rbp-0x8]
  40ed05:	xor    rcx,QWORD PTR fs:0x28
  40ed0e:	je     40ed48 <test_type_aliases@@Base+0x297>
  40ed10:	jmp    40ed43 <test_type_aliases@@Base+0x292>
  40ed12:	nop
  40ed13:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed15:	nop
  40ed16:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed18:	nop
  40ed19:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed1b:	nop
  40ed1c:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed1e:	nop
  40ed1f:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed21:	nop
  40ed22:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed24:	nop
  40ed25:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed27:	nop
  40ed28:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed2a:	nop
  40ed2b:	jmp    40ed2e <test_type_aliases@@Base+0x27d>
  40ed2d:	nop
  40ed2e:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  40ed35:	lea    rdi,[rip+0xfe84]        # 41ebc0 <_IO_stdin_used@@Base+0xbc0>
  40ed3c:	call   4041a0 <puts@plt>
  40ed41:	jmp    40ecf2 <test_type_aliases@@Base+0x241>
  40ed43:	call   4041c0 <__stack_chk_fail@plt>
  40ed48:	leave  
  40ed49:	ret    

000000000040ed4a <test_empty_monster@@Base>:
  40ed4a:	endbr64 
  40ed4e:	push   rbp
  40ed4f:	mov    rbp,rsp
  40ed52:	sub    rsp,0x30
  40ed56:	mov    QWORD PTR [rbp-0x28],rdi
  40ed5a:	mov    rax,QWORD PTR fs:0x28
  40ed63:	mov    QWORD PTR [rbp-0x8],rax
  40ed67:	xor    eax,eax
  40ed69:	mov    rax,QWORD PTR [rbp-0x28]
  40ed6d:	mov    rdi,rax
  40ed70:	call   416246 <flatcc_builder_reset@@Base>
  40ed75:	mov    rax,QWORD PTR [rbp-0x28]
  40ed79:	lea    rsi,[rip+0xf3f4]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40ed80:	mov    rdi,rax
  40ed83:	call   409db7 <_start@@Base+0x5b07>
  40ed88:	mov    rax,QWORD PTR [rbp-0x28]
  40ed8c:	mov    rdi,rax
  40ed8f:	call   40a758 <_start@@Base+0x64a8>
  40ed94:	mov    rax,QWORD PTR [rbp-0x28]
  40ed98:	lea    rsi,[rip+0xfe50]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  40ed9f:	mov    rdi,rax
  40eda2:	call   40b2b9 <_start@@Base+0x7009>
  40eda7:	mov    rax,QWORD PTR [rbp-0x28]
  40edab:	mov    rdi,rax
  40edae:	call   40a777 <_start@@Base+0x64c7>
  40edb3:	mov    DWORD PTR [rbp-0x1c],eax
  40edb6:	mov    edx,DWORD PTR [rbp-0x1c]
  40edb9:	mov    rax,QWORD PTR [rbp-0x28]
  40edbd:	mov    esi,edx
  40edbf:	mov    rdi,rax
  40edc2:	call   409e0f <_start@@Base+0x5b5f>
  40edc7:	lea    rdx,[rbp-0x18]
  40edcb:	mov    rax,QWORD PTR [rbp-0x28]
  40edcf:	mov    rsi,rdx
  40edd2:	mov    rdi,rax
  40edd5:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  40edda:	mov    QWORD PTR [rbp-0x10],rax
  40edde:	mov    rax,QWORD PTR [rip+0x1d213]        # 42bff8 <stderr@GLIBC_2.2.5>
  40ede5:	mov    rcx,QWORD PTR [rax]
  40ede8:	mov    rdx,QWORD PTR [rbp-0x18]
  40edec:	mov    rax,QWORD PTR [rbp-0x10]
  40edf0:	mov    rsi,rax
  40edf3:	lea    rdi,[rip+0xfdff]        # 41ebf9 <_IO_stdin_used@@Base+0xbf9>
  40edfa:	call   40e441 <_start@@Base+0xa191>
  40edff:	mov    rax,QWORD PTR [rbp-0x10]
  40ee03:	mov    rdi,rax
  40ee06:	call   40e8ea <verify_empty_monster@@Base>
  40ee0b:	mov    DWORD PTR [rbp-0x20],eax
  40ee0e:	cmp    DWORD PTR [rbp-0x20],0x0
  40ee12:	jne    40ee8a <test_empty_monster@@Base+0x140>
  40ee14:	mov    rcx,QWORD PTR [rbp-0x18]
  40ee18:	mov    rax,QWORD PTR [rbp-0x10]
  40ee1c:	lea    rdx,[rip+0xf351]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40ee23:	mov    rsi,rcx
  40ee26:	mov    rdi,rax
  40ee29:	call   40e017 <_start@@Base+0x9d67>
  40ee2e:	mov    DWORD PTR [rbp-0x20],eax
  40ee31:	cmp    DWORD PTR [rbp-0x20],0x0
  40ee35:	je     40ee5c <test_empty_monster@@Base+0x112>
  40ee37:	mov    eax,DWORD PTR [rbp-0x20]
  40ee3a:	mov    edi,eax
  40ee3c:	call   41b868 <flatcc_verify_error_string@@Base>
  40ee41:	mov    rsi,rax
  40ee44:	lea    rdi,[rip+0xfdc5]        # 41ec10 <_IO_stdin_used@@Base+0xc10>
  40ee4b:	mov    eax,0x0
  40ee50:	call   4041d0 <printf@plt>
  40ee55:	mov    eax,0xffffffff
  40ee5a:	jmp    40ee9d <test_empty_monster@@Base+0x153>
  40ee5c:	mov    rax,QWORD PTR [rbp-0x18]
  40ee60:	lea    rdx,[rax-0x1]
  40ee64:	mov    rax,QWORD PTR [rbp-0x10]
  40ee68:	mov    rsi,rdx
  40ee6b:	mov    rdi,rax
  40ee6e:	call   40dfb7 <_start@@Base+0x9d07>
  40ee73:	test   eax,eax
  40ee75:	jne    40ee8d <test_empty_monster@@Base+0x143>
  40ee77:	lea    rdi,[rip+0xfdba]        # 41ec38 <_IO_stdin_used@@Base+0xc38>
  40ee7e:	call   4041a0 <puts@plt>
  40ee83:	mov    eax,0xffffffff
  40ee88:	jmp    40ee9d <test_empty_monster@@Base+0x153>
  40ee8a:	nop
  40ee8b:	jmp    40ee8e <test_empty_monster@@Base+0x144>
  40ee8d:	nop
  40ee8e:	mov    rax,QWORD PTR [rbp-0x10]
  40ee92:	mov    rdi,rax
  40ee95:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  40ee9a:	mov    eax,DWORD PTR [rbp-0x20]
  40ee9d:	mov    rcx,QWORD PTR [rbp-0x8]
  40eea1:	xor    rcx,QWORD PTR fs:0x28
  40eeaa:	je     40eeb1 <test_empty_monster@@Base+0x167>
  40eeac:	call   4041c0 <__stack_chk_fail@plt>
  40eeb1:	leave  
  40eeb2:	ret    

000000000040eeb3 <test_typed_empty_monster@@Base>:
  40eeb3:	endbr64 
  40eeb7:	push   rbp
  40eeb8:	mov    rbp,rsp
  40eebb:	push   rbx
  40eebc:	sub    rsp,0x48
  40eec0:	mov    QWORD PTR [rbp-0x48],rdi
  40eec4:	mov    rax,QWORD PTR fs:0x28
  40eecd:	mov    QWORD PTR [rbp-0x18],rax
  40eed1:	xor    eax,eax
  40eed3:	mov    DWORD PTR [rbp-0x38],0xffffffff
  40eeda:	mov    DWORD PTR [rbp-0x1c],0x0
  40eee1:	mov    rax,QWORD PTR [rbp-0x48]
  40eee5:	mov    rdi,rax
  40eee8:	call   416246 <flatcc_builder_reset@@Base>
  40eeed:	mov    rax,QWORD PTR [rbp-0x48]
  40eef1:	lea    rsi,[rip+0xf95c]        # 41e854 <_IO_stdin_used@@Base+0x854>
  40eef8:	mov    rdi,rax
  40eefb:	call   409db7 <_start@@Base+0x5b07>
  40ef00:	mov    rax,QWORD PTR [rbp-0x48]
  40ef04:	mov    rdi,rax
  40ef07:	call   40a758 <_start@@Base+0x64a8>
  40ef0c:	mov    rax,QWORD PTR [rbp-0x48]
  40ef10:	lea    rsi,[rip+0xfcd8]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  40ef17:	mov    rdi,rax
  40ef1a:	call   40b2b9 <_start@@Base+0x7009>
  40ef1f:	mov    rax,QWORD PTR [rbp-0x48]
  40ef23:	mov    rdi,rax
  40ef26:	call   40a777 <_start@@Base+0x64c7>
  40ef2b:	mov    DWORD PTR [rbp-0x34],eax
  40ef2e:	mov    edx,DWORD PTR [rbp-0x34]
  40ef31:	mov    rax,QWORD PTR [rbp-0x48]
  40ef35:	mov    esi,edx
  40ef37:	mov    rdi,rax
  40ef3a:	call   409e0f <_start@@Base+0x5b5f>
  40ef3f:	lea    rdx,[rbp-0x30]
  40ef43:	mov    rax,QWORD PTR [rbp-0x48]
  40ef47:	mov    rsi,rdx
  40ef4a:	mov    rdi,rax
  40ef4d:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  40ef52:	mov    QWORD PTR [rbp-0x28],rax
  40ef56:	mov    rax,QWORD PTR [rip+0x1d09b]        # 42bff8 <stderr@GLIBC_2.2.5>
  40ef5d:	mov    rcx,QWORD PTR [rax]
  40ef60:	mov    rdx,QWORD PTR [rbp-0x30]
  40ef64:	mov    rax,QWORD PTR [rbp-0x28]
  40ef68:	mov    rsi,rax
  40ef6b:	lea    rdi,[rip+0xfcf3]        # 41ec65 <_IO_stdin_used@@Base+0xc65>
  40ef72:	call   40e441 <_start@@Base+0xa191>
  40ef77:	mov    rax,QWORD PTR [rbp-0x28]
  40ef7b:	mov    rdi,rax
  40ef7e:	call   405619 <_start@@Base+0x1369>
  40ef83:	mov    ebx,eax
  40ef85:	lea    rdi,[rip+0xfcf3]        # 41ec7f <_IO_stdin_used@@Base+0xc7f>
  40ef8c:	call   4047df <_start@@Base+0x52f>
  40ef91:	cmp    ebx,eax
  40ef93:	je     40efbc <test_typed_empty_monster@@Base+0x109>
  40ef95:	mov    rax,QWORD PTR [rbp-0x28]
  40ef99:	mov    rdi,rax
  40ef9c:	call   405619 <_start@@Base+0x1369>
  40efa1:	mov    eax,eax
  40efa3:	mov    rsi,rax
  40efa6:	lea    rdi,[rip+0xfceb]        # 41ec98 <_IO_stdin_used@@Base+0xc98>
  40efad:	mov    eax,0x0
  40efb2:	call   4041d0 <printf@plt>
  40efb7:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40efbc:	mov    rax,QWORD PTR [rbp-0x28]
  40efc0:	mov    esi,0x330ef481
  40efc5:	mov    rdi,rax
  40efc8:	call   4055e1 <_start@@Base+0x1331>
  40efcd:	test   eax,eax
  40efcf:	jne    40efe2 <test_typed_empty_monster@@Base+0x12f>
  40efd1:	lea    rdi,[rip+0xfcf8]        # 41ecd0 <_IO_stdin_used@@Base+0xcd0>
  40efd8:	call   4041a0 <puts@plt>
  40efdd:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40efe2:	mov    rax,QWORD PTR [rbp-0x28]
  40efe6:	mov    esi,0x330ef481
  40efeb:	mov    rdi,rax
  40efee:	call   4055e1 <_start@@Base+0x1331>
  40eff3:	test   eax,eax
  40eff5:	jne    40f008 <test_typed_empty_monster@@Base+0x155>
  40eff7:	lea    rdi,[rip+0xfcd2]        # 41ecd0 <_IO_stdin_used@@Base+0xcd0>
  40effe:	call   4041a0 <puts@plt>
  40f003:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f008:	mov    rax,QWORD PTR [rbp-0x28]
  40f00c:	mov    rdi,rax
  40f00f:	call   40e8ea <verify_empty_monster@@Base>
  40f014:	test   eax,eax
  40f016:	jne    40f029 <test_typed_empty_monster@@Base+0x176>
  40f018:	lea    rdi,[rip+0xfcd9]        # 41ecf8 <_IO_stdin_used@@Base+0xcf8>
  40f01f:	call   4041a0 <puts@plt>
  40f024:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f029:	mov    rcx,QWORD PTR [rbp-0x30]
  40f02d:	mov    rax,QWORD PTR [rbp-0x28]
  40f031:	lea    rdx,[rip+0xf81c]        # 41e854 <_IO_stdin_used@@Base+0x854>
  40f038:	mov    rsi,rcx
  40f03b:	mov    rdi,rax
  40f03e:	call   40e017 <_start@@Base+0x9d67>
  40f043:	mov    DWORD PTR [rbp-0x38],eax
  40f046:	cmp    DWORD PTR [rbp-0x38],0x0
  40f04a:	je     40f06f <test_typed_empty_monster@@Base+0x1bc>
  40f04c:	mov    eax,DWORD PTR [rbp-0x38]
  40f04f:	mov    edi,eax
  40f051:	call   41b868 <flatcc_verify_error_string@@Base>
  40f056:	mov    rsi,rax
  40f059:	lea    rdi,[rip+0xfcd8]        # 41ed38 <_IO_stdin_used@@Base+0xd38>
  40f060:	mov    eax,0x0
  40f065:	call   4041d0 <printf@plt>
  40f06a:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f06f:	mov    rdx,QWORD PTR [rbp-0x30]
  40f073:	mov    rax,QWORD PTR [rbp-0x28]
  40f077:	mov    rsi,rdx
  40f07a:	mov    rdi,rax
  40f07d:	call   40dfe7 <_start@@Base+0x9d37>
  40f082:	mov    DWORD PTR [rbp-0x38],eax
  40f085:	cmp    DWORD PTR [rbp-0x38],0x0
  40f089:	je     40f0ae <test_typed_empty_monster@@Base+0x1fb>
  40f08b:	mov    eax,DWORD PTR [rbp-0x38]
  40f08e:	mov    edi,eax
  40f090:	call   41b868 <flatcc_verify_error_string@@Base>
  40f095:	mov    rsi,rax
  40f098:	lea    rdi,[rip+0xfc99]        # 41ed38 <_IO_stdin_used@@Base+0xd38>
  40f09f:	mov    eax,0x0
  40f0a4:	call   4041d0 <printf@plt>
  40f0a9:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f0ae:	mov    rcx,QWORD PTR [rbp-0x30]
  40f0b2:	mov    rax,QWORD PTR [rbp-0x28]
  40f0b6:	mov    edx,0x330ef481
  40f0bb:	mov    rsi,rcx
  40f0be:	mov    rdi,rax
  40f0c1:	call   40e048 <_start@@Base+0x9d98>
  40f0c6:	mov    DWORD PTR [rbp-0x38],eax
  40f0c9:	cmp    DWORD PTR [rbp-0x38],0x0
  40f0cd:	je     40f0f2 <test_typed_empty_monster@@Base+0x23f>
  40f0cf:	mov    eax,DWORD PTR [rbp-0x38]
  40f0d2:	mov    edi,eax
  40f0d4:	call   41b868 <flatcc_verify_error_string@@Base>
  40f0d9:	mov    rsi,rax
  40f0dc:	lea    rdi,[rip+0xfc85]        # 41ed68 <_IO_stdin_used@@Base+0xd68>
  40f0e3:	mov    eax,0x0
  40f0e8:	call   4041d0 <printf@plt>
  40f0ed:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f0f2:	lea    rdi,[rip+0xfb86]        # 41ec7f <_IO_stdin_used@@Base+0xc7f>
  40f0f9:	call   4047df <_start@@Base+0x52f>
  40f0fe:	mov    edx,eax
  40f100:	mov    rcx,QWORD PTR [rbp-0x30]
  40f104:	mov    rax,QWORD PTR [rbp-0x28]
  40f108:	mov    rsi,rcx
  40f10b:	mov    rdi,rax
  40f10e:	call   40e048 <_start@@Base+0x9d98>
  40f113:	mov    DWORD PTR [rbp-0x38],eax
  40f116:	cmp    DWORD PTR [rbp-0x38],0x0
  40f11a:	je     40f13c <test_typed_empty_monster@@Base+0x289>
  40f11c:	mov    eax,DWORD PTR [rbp-0x38]
  40f11f:	mov    edi,eax
  40f121:	call   41b868 <flatcc_verify_error_string@@Base>
  40f126:	mov    rsi,rax
  40f129:	lea    rdi,[rip+0xfc70]        # 41eda0 <_IO_stdin_used@@Base+0xda0>
  40f130:	mov    eax,0x0
  40f135:	call   4041d0 <printf@plt>
  40f13a:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f13c:	lea    rax,[rbp-0x1c]
  40f140:	mov    rsi,rax
  40f143:	mov    edi,0x330ef481
  40f148:	call   40482a <_start@@Base+0x57a>
  40f14d:	mov    rcx,QWORD PTR [rbp-0x30]
  40f151:	lea    rdx,[rbp-0x1c]
  40f155:	mov    rax,QWORD PTR [rbp-0x28]
  40f159:	mov    rsi,rcx
  40f15c:	mov    rdi,rax
  40f15f:	call   40e017 <_start@@Base+0x9d67>
  40f164:	mov    DWORD PTR [rbp-0x38],eax
  40f167:	cmp    DWORD PTR [rbp-0x38],0x0
  40f16b:	je     40f18d <test_typed_empty_monster@@Base+0x2da>
  40f16d:	mov    eax,DWORD PTR [rbp-0x38]
  40f170:	mov    edi,eax
  40f172:	call   41b868 <flatcc_verify_error_string@@Base>
  40f177:	mov    rsi,rax
  40f17a:	lea    rdi,[rip+0xfbb7]        # 41ed38 <_IO_stdin_used@@Base+0xd38>
  40f181:	mov    eax,0x0
  40f186:	call   4041d0 <printf@plt>
  40f18b:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f18d:	mov    rdx,QWORD PTR [rbp-0x30]
  40f191:	mov    rax,QWORD PTR [rbp-0x28]
  40f195:	mov    rsi,rdx
  40f198:	mov    rdi,rax
  40f19b:	call   40dfb7 <_start@@Base+0x9d07>
  40f1a0:	test   eax,eax
  40f1a2:	jne    40f1b2 <test_typed_empty_monster@@Base+0x2ff>
  40f1a4:	lea    rdi,[rip+0xfc35]        # 41ede0 <_IO_stdin_used@@Base+0xde0>
  40f1ab:	call   4041a0 <puts@plt>
  40f1b0:	jmp    40f1b9 <test_typed_empty_monster@@Base+0x306>
  40f1b2:	mov    DWORD PTR [rbp-0x38],0x0
  40f1b9:	mov    rax,QWORD PTR [rbp-0x28]
  40f1bd:	mov    rdi,rax
  40f1c0:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  40f1c5:	mov    eax,DWORD PTR [rbp-0x38]
  40f1c8:	mov    rbx,QWORD PTR [rbp-0x18]
  40f1cc:	xor    rbx,QWORD PTR fs:0x28
  40f1d5:	je     40f1dc <test_typed_empty_monster@@Base+0x329>
  40f1d7:	call   4041c0 <__stack_chk_fail@plt>
  40f1dc:	add    rsp,0x48
  40f1e0:	pop    rbx
  40f1e1:	pop    rbp
  40f1e2:	ret    

000000000040f1e3 <verify_table_with_emptystruct@@Base>:
  40f1e3:	endbr64 
  40f1e7:	push   rbp
  40f1e8:	mov    rbp,rsp
  40f1eb:	sub    rsp,0x20
  40f1ef:	mov    QWORD PTR [rbp-0x18],rdi
  40f1f3:	mov    rax,QWORD PTR [rbp-0x18]
  40f1f7:	mov    rdi,rax
  40f1fa:	call   405bb4 <_start@@Base+0x1904>
  40f1ff:	mov    QWORD PTR [rbp-0x10],rax
  40f203:	cmp    QWORD PTR [rbp-0x10],0x0
  40f208:	jne    40f21d <verify_table_with_emptystruct@@Base+0x3a>
  40f20a:	lea    rdi,[rip+0xfc1f]        # 41ee30 <_IO_stdin_used@@Base+0xe30>
  40f211:	call   4041a0 <puts@plt>
  40f216:	mov    eax,0xffffffff
  40f21b:	jmp    40f26e <verify_table_with_emptystruct@@Base+0x8b>
  40f21d:	mov    rax,QWORD PTR [rbp-0x10]
  40f221:	mov    rdi,rax
  40f224:	call   405c4d <_start@@Base+0x199d>
  40f229:	mov    QWORD PTR [rbp-0x8],rax
  40f22d:	cmp    QWORD PTR [rbp-0x8],0x0
  40f232:	jne    40f247 <verify_table_with_emptystruct@@Base+0x64>
  40f234:	lea    rdi,[rip+0xfc1a]        # 41ee55 <_IO_stdin_used@@Base+0xe55>
  40f23b:	call   4041a0 <puts@plt>
  40f240:	mov    eax,0xffffffff
  40f245:	jmp    40f26e <verify_table_with_emptystruct@@Base+0x8b>
  40f247:	mov    eax,0x0
  40f24c:	call   405826 <_start@@Base+0x1576>
  40f251:	test   rax,rax
  40f254:	je     40f269 <verify_table_with_emptystruct@@Base+0x86>
  40f256:	lea    rdi,[rip+0xfc13]        # 41ee70 <_IO_stdin_used@@Base+0xe70>
  40f25d:	call   4041a0 <puts@plt>
  40f262:	mov    eax,0xffffffff
  40f267:	jmp    40f26e <verify_table_with_emptystruct@@Base+0x8b>
  40f269:	mov    eax,0x0
  40f26e:	leave  
  40f26f:	ret    

000000000040f270 <test_table_with_emptystruct@@Base>:
  40f270:	endbr64 
  40f274:	push   rbp
  40f275:	mov    rbp,rsp
  40f278:	sub    rsp,0x40
  40f27c:	mov    QWORD PTR [rbp-0x38],rdi
  40f280:	mov    rax,QWORD PTR fs:0x28
  40f289:	mov    QWORD PTR [rbp-0x8],rax
  40f28d:	xor    eax,eax
  40f28f:	mov    QWORD PTR [rbp-0x18],0x0
  40f297:	mov    rax,QWORD PTR [rbp-0x38]
  40f29b:	mov    rdi,rax
  40f29e:	call   416246 <flatcc_builder_reset@@Base>
  40f2a3:	mov    rdx,QWORD PTR [rbp-0x18]
  40f2a7:	mov    rax,QWORD PTR [rbp-0x38]
  40f2ab:	mov    rsi,rdx
  40f2ae:	mov    rdi,rax
  40f2b1:	call   40ab33 <_start@@Base+0x6883>
  40f2b6:	lea    rdx,[rbp-0x20]
  40f2ba:	mov    rax,QWORD PTR [rbp-0x38]
  40f2be:	mov    rsi,rdx
  40f2c1:	mov    rdi,rax
  40f2c4:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  40f2c9:	mov    QWORD PTR [rbp-0x10],rax
  40f2cd:	mov    rax,QWORD PTR [rip+0x1cd24]        # 42bff8 <stderr@GLIBC_2.2.5>
  40f2d4:	mov    rcx,QWORD PTR [rax]
  40f2d7:	mov    rdx,QWORD PTR [rbp-0x20]
  40f2db:	mov    rax,QWORD PTR [rbp-0x10]
  40f2df:	mov    rsi,rax
  40f2e2:	lea    rdi,[rip+0xfba0]        # 41ee89 <_IO_stdin_used@@Base+0xe89>
  40f2e9:	call   40e441 <_start@@Base+0xa191>
  40f2ee:	mov    rax,QWORD PTR [rbp-0x10]
  40f2f2:	mov    rdi,rax
  40f2f5:	call   40f1e3 <verify_table_with_emptystruct@@Base>
  40f2fa:	mov    DWORD PTR [rbp-0x24],eax
  40f2fd:	mov    rax,QWORD PTR [rbp-0x10]
  40f301:	mov    rdi,rax
  40f304:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  40f309:	mov    eax,DWORD PTR [rbp-0x24]
  40f30c:	mov    rcx,QWORD PTR [rbp-0x8]
  40f310:	xor    rcx,QWORD PTR fs:0x28
  40f319:	je     40f320 <test_table_with_emptystruct@@Base+0xb0>
  40f31b:	call   4041c0 <__stack_chk_fail@plt>
  40f320:	leave  
  40f321:	ret    

000000000040f322 <test_typed_table_with_emptystruct@@Base>:
  40f322:	endbr64 
  40f326:	push   rbp
  40f327:	mov    rbp,rsp
  40f32a:	sub    rsp,0x40
  40f32e:	mov    QWORD PTR [rbp-0x38],rdi
  40f332:	mov    rax,QWORD PTR fs:0x28
  40f33b:	mov    QWORD PTR [rbp-0x8],rax
  40f33f:	xor    eax,eax
  40f341:	mov    DWORD PTR [rbp-0x24],0x0
  40f348:	mov    QWORD PTR [rbp-0x18],0x0
  40f350:	mov    rax,QWORD PTR [rbp-0x38]
  40f354:	mov    rdi,rax
  40f357:	call   416246 <flatcc_builder_reset@@Base>
  40f35c:	mov    rdx,QWORD PTR [rbp-0x18]
  40f360:	mov    rax,QWORD PTR [rbp-0x38]
  40f364:	mov    rsi,rdx
  40f367:	mov    rdi,rax
  40f36a:	call   40ab86 <_start@@Base+0x68d6>
  40f36f:	lea    rdx,[rbp-0x20]
  40f373:	mov    rax,QWORD PTR [rbp-0x38]
  40f377:	mov    rsi,rdx
  40f37a:	mov    rdi,rax
  40f37d:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  40f382:	mov    QWORD PTR [rbp-0x10],rax
  40f386:	mov    rax,QWORD PTR [rip+0x1cc6b]        # 42bff8 <stderr@GLIBC_2.2.5>
  40f38d:	mov    rcx,QWORD PTR [rax]
  40f390:	mov    rdx,QWORD PTR [rbp-0x20]
  40f394:	mov    rax,QWORD PTR [rbp-0x10]
  40f398:	mov    rsi,rax
  40f39b:	lea    rdi,[rip+0xfaff]        # 41eea1 <_IO_stdin_used@@Base+0xea1>
  40f3a2:	call   40e441 <_start@@Base+0xa191>
  40f3a7:	mov    rcx,QWORD PTR [rbp-0x20]
  40f3ab:	mov    rax,QWORD PTR [rbp-0x10]
  40f3af:	lea    rdx,[rip+0xf499]        # 41e84f <_IO_stdin_used@@Base+0x84f>
  40f3b6:	mov    rsi,rcx
  40f3b9:	mov    rdi,rax
  40f3bc:	call   40d262 <_start@@Base+0x8fb2>
  40f3c1:	test   eax,eax
  40f3c3:	je     40f3db <test_typed_table_with_emptystruct@@Base+0xb9>
  40f3c5:	lea    rdi,[rip+0xfaf4]        # 41eec0 <_IO_stdin_used@@Base+0xec0>
  40f3cc:	call   4041a0 <puts@plt>
  40f3d1:	mov    eax,0xffffffff
  40f3d6:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f3db:	mov    rdx,QWORD PTR [rbp-0x20]
  40f3df:	mov    rax,QWORD PTR [rbp-0x10]
  40f3e3:	mov    rsi,rdx
  40f3e6:	mov    rdi,rax
  40f3e9:	call   40d232 <_start@@Base+0x8f82>
  40f3ee:	test   eax,eax
  40f3f0:	je     40f408 <test_typed_table_with_emptystruct@@Base+0xe6>
  40f3f2:	lea    rdi,[rip+0xfae6]        # 41eedf <_IO_stdin_used@@Base+0xedf>
  40f3f9:	call   4041a0 <puts@plt>
  40f3fe:	mov    eax,0xffffffff
  40f403:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f408:	mov    rcx,QWORD PTR [rbp-0x20]
  40f40c:	mov    rax,QWORD PTR [rbp-0x10]
  40f410:	mov    edx,0xb0dd37b6
  40f415:	mov    rsi,rcx
  40f418:	mov    rdi,rax
  40f41b:	call   40d293 <_start@@Base+0x8fe3>
  40f420:	test   eax,eax
  40f422:	je     40f43a <test_typed_table_with_emptystruct@@Base+0x118>
  40f424:	lea    rdi,[rip+0xfad5]        # 41ef00 <_IO_stdin_used@@Base+0xf00>
  40f42b:	call   4041a0 <puts@plt>
  40f430:	mov    eax,0xffffffff
  40f435:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f43a:	cmp    QWORD PTR [rbp-0x10],0x0
  40f43f:	jne    40f457 <test_typed_table_with_emptystruct@@Base+0x135>
  40f441:	lea    rdi,[rip+0xfadd]        # 41ef25 <_IO_stdin_used@@Base+0xf25>
  40f448:	call   4041a0 <puts@plt>
  40f44d:	mov    eax,0xffffffff
  40f452:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f457:	mov    rax,QWORD PTR [rbp-0x10]
  40f45b:	mov    esi,0xb0dd37b6
  40f460:	mov    rdi,rax
  40f463:	call   4055e1 <_start@@Base+0x1331>
  40f468:	test   eax,eax
  40f46a:	jne    40f482 <test_typed_table_with_emptystruct@@Base+0x160>
  40f46c:	lea    rdi,[rip+0xfaca]        # 41ef3d <_IO_stdin_used@@Base+0xf3d>
  40f473:	call   4041a0 <puts@plt>
  40f478:	mov    eax,0xffffffff
  40f47d:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f482:	mov    rax,QWORD PTR [rbp-0x10]
  40f486:	mov    esi,0x0
  40f48b:	mov    rdi,rax
  40f48e:	call   4055e1 <_start@@Base+0x1331>
  40f493:	test   eax,eax
  40f495:	jne    40f4ad <test_typed_table_with_emptystruct@@Base+0x18b>
  40f497:	lea    rdi,[rip+0xfaaf]        # 41ef4d <_IO_stdin_used@@Base+0xf4d>
  40f49e:	call   4041a0 <puts@plt>
  40f4a3:	mov    eax,0xffffffff
  40f4a8:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f4ad:	mov    rax,QWORD PTR [rbp-0x10]
  40f4b1:	mov    esi,0x1
  40f4b6:	mov    rdi,rax
  40f4b9:	call   4055e1 <_start@@Base+0x1331>
  40f4be:	test   eax,eax
  40f4c0:	je     40f4d8 <test_typed_table_with_emptystruct@@Base+0x1b6>
  40f4c2:	lea    rdi,[rip+0xfa97]        # 41ef60 <_IO_stdin_used@@Base+0xf60>
  40f4c9:	call   4041a0 <puts@plt>
  40f4ce:	mov    eax,0xffffffff
  40f4d3:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f4d8:	mov    rax,QWORD PTR [rbp-0x10]
  40f4dc:	mov    esi,0x0
  40f4e1:	mov    rdi,rax
  40f4e4:	call   405544 <_start@@Base+0x1294>
  40f4e9:	test   eax,eax
  40f4eb:	jne    40f503 <test_typed_table_with_emptystruct@@Base+0x1e1>
  40f4ed:	lea    rdi,[rip+0xfa94]        # 41ef88 <_IO_stdin_used@@Base+0xf88>
  40f4f4:	call   4041a0 <puts@plt>
  40f4f9:	mov    eax,0xffffffff
  40f4fe:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f503:	mov    rax,QWORD PTR [rbp-0x10]
  40f507:	lea    rsi,[rip+0xf341]        # 41e84f <_IO_stdin_used@@Base+0x84f>
  40f50e:	mov    rdi,rax
  40f511:	call   405544 <_start@@Base+0x1294>
  40f516:	test   eax,eax
  40f518:	jne    40f530 <test_typed_table_with_emptystruct@@Base+0x20e>
  40f51a:	lea    rdi,[rip+0xfa8f]        # 41efb0 <_IO_stdin_used@@Base+0xfb0>
  40f521:	call   4041a0 <puts@plt>
  40f526:	mov    eax,0xffffffff
  40f52b:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f530:	mov    rax,QWORD PTR [rbp-0x10]
  40f534:	mov    rdi,rax
  40f537:	call   405bb4 <_start@@Base+0x1904>
  40f53c:	test   rax,rax
  40f53f:	je     40f557 <test_typed_table_with_emptystruct@@Base+0x235>
  40f541:	lea    rdi,[rip+0xfa92]        # 41efda <_IO_stdin_used@@Base+0xfda>
  40f548:	call   4041a0 <puts@plt>
  40f54d:	mov    eax,0xffffffff
  40f552:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f557:	mov    rax,QWORD PTR [rbp-0x10]
  40f55b:	mov    esi,0x1
  40f560:	mov    rdi,rax
  40f563:	call   405b6b <_start@@Base+0x18bb>
  40f568:	test   rax,rax
  40f56b:	je     40f580 <test_typed_table_with_emptystruct@@Base+0x25e>
  40f56d:	lea    rdi,[rip+0xfa84]        # 41eff8 <_IO_stdin_used@@Base+0xff8>
  40f574:	call   4041a0 <puts@plt>
  40f579:	mov    eax,0xffffffff
  40f57e:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f580:	mov    rax,QWORD PTR [rbp-0x10]
  40f584:	lea    rsi,[rip+0xf2c4]        # 41e84f <_IO_stdin_used@@Base+0x84f>
  40f58b:	mov    rdi,rax
  40f58e:	call   405b1f <_start@@Base+0x186f>
  40f593:	test   rax,rax
  40f596:	jne    40f5ab <test_typed_table_with_emptystruct@@Base+0x289>
  40f598:	lea    rdi,[rip+0xfa81]        # 41f020 <_IO_stdin_used@@Base+0x1020>
  40f59f:	call   4041a0 <puts@plt>
  40f5a4:	mov    eax,0xffffffff
  40f5a9:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f5ab:	mov    rax,QWORD PTR [rbp-0x10]
  40f5af:	mov    rdi,rax
  40f5b2:	call   405c07 <_start@@Base+0x1957>
  40f5b7:	test   rax,rax
  40f5ba:	jne    40f5cf <test_typed_table_with_emptystruct@@Base+0x2ad>
  40f5bc:	lea    rdi,[rip+0xfa95]        # 41f058 <_IO_stdin_used@@Base+0x1058>
  40f5c3:	call   4041a0 <puts@plt>
  40f5c8:	mov    eax,0xffffffff
  40f5cd:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f5cf:	mov    rax,QWORD PTR [rbp-0x10]
  40f5d3:	mov    esi,0x0
  40f5d8:	mov    rdi,rax
  40f5db:	call   405b6b <_start@@Base+0x18bb>
  40f5e0:	test   rax,rax
  40f5e3:	jne    40f5f8 <test_typed_table_with_emptystruct@@Base+0x2d6>
  40f5e5:	lea    rdi,[rip+0xfa81]        # 41f06d <_IO_stdin_used@@Base+0x106d>
  40f5ec:	call   4041a0 <puts@plt>
  40f5f1:	mov    eax,0xffffffff
  40f5f6:	jmp    40f5fb <test_typed_table_with_emptystruct@@Base+0x2d9>
  40f5f8:	mov    eax,DWORD PTR [rbp-0x24]
  40f5fb:	mov    rcx,QWORD PTR [rbp-0x8]
  40f5ff:	xor    rcx,QWORD PTR fs:0x28
  40f608:	je     40f60f <test_typed_table_with_emptystruct@@Base+0x2ed>
  40f60a:	call   4041c0 <__stack_chk_fail@plt>
  40f60f:	leave  
  40f610:	ret    

000000000040f611 <verify_monster@@Base>:
  40f611:	endbr64 
  40f615:	push   rbp
  40f616:	mov    rbp,rsp
  40f619:	push   rbx
  40f61a:	sub    rsp,0xf8
  40f621:	mov    QWORD PTR [rbp-0xf8],rdi
  40f628:	mov    rax,QWORD PTR fs:0x28
  40f631:	mov    QWORD PTR [rbp-0x18],rax
  40f635:	xor    eax,eax
  40f637:	mov    WORD PTR [rbp-0x30],0x10
  40f63d:	mov    BYTE PTR [rbp-0x2e],0x20
  40f641:	mov    WORD PTR [rbp-0x2c],0x30
  40f647:	mov    BYTE PTR [rbp-0x2a],0x40
  40f64b:	mov    WORD PTR [rbp-0x28],0x50
  40f651:	mov    BYTE PTR [rbp-0x26],0x60
  40f655:	mov    WORD PTR [rbp-0x24],0x70
  40f65b:	mov    BYTE PTR [rbp-0x22],0x80
  40f65f:	mov    WORD PTR [rbp-0x20],0x191
  40f665:	mov    BYTE PTR [rbp-0x1e],0x91
  40f669:	mov    DWORD PTR [rbp-0x40],0x0
  40f670:	mov    DWORD PTR [rbp-0x3c],0x1
  40f677:	mov    DWORD PTR [rbp-0x38],0x1
  40f67e:	mov    DWORD PTR [rbp-0x34],0x0
  40f685:	mov    rax,QWORD PTR [rbp-0xf8]
  40f68c:	mov    esi,0x0
  40f691:	mov    rdi,rax
  40f694:	call   405544 <_start@@Base+0x1294>
  40f699:	test   eax,eax
  40f69b:	jne    40f6b3 <verify_monster@@Base+0xa2>
  40f69d:	lea    rdi,[rip+0xf9e4]        # 41f088 <_IO_stdin_used@@Base+0x1088>
  40f6a4:	call   4041a0 <puts@plt>
  40f6a9:	mov    eax,0xffffffff
  40f6ae:	jmp    41072a <verify_monster@@Base+0x1119>
  40f6b3:	mov    rax,QWORD PTR [rbp-0xf8]
  40f6ba:	lea    rsi,[rip+0xeab3]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40f6c1:	mov    rdi,rax
  40f6c4:	call   405544 <_start@@Base+0x1294>
  40f6c9:	test   eax,eax
  40f6cb:	jne    40f6e3 <verify_monster@@Base+0xd2>
  40f6cd:	lea    rdi,[rip+0xf9e4]        # 41f0b8 <_IO_stdin_used@@Base+0x10b8>
  40f6d4:	call   4041a0 <puts@plt>
  40f6d9:	mov    eax,0xffffffff
  40f6de:	jmp    41072a <verify_monster@@Base+0x1119>
  40f6e3:	mov    rax,QWORD PTR [rbp-0xf8]
  40f6ea:	lea    rsi,[rip+0xf9f0]        # 41f0e1 <_IO_stdin_used@@Base+0x10e1>
  40f6f1:	mov    rdi,rax
  40f6f4:	call   405544 <_start@@Base+0x1294>
  40f6f9:	test   eax,eax
  40f6fb:	jne    40f713 <verify_monster@@Base+0x102>
  40f6fd:	lea    rdi,[rip+0xf9ec]        # 41f0f0 <_IO_stdin_used@@Base+0x10f0>
  40f704:	call   4041a0 <puts@plt>
  40f709:	mov    eax,0xffffffff
  40f70e:	jmp    41072a <verify_monster@@Base+0x1119>
  40f713:	mov    rax,QWORD PTR [rbp-0xf8]
  40f71a:	lea    rsi,[rip+0xfa00]        # 41f121 <_IO_stdin_used@@Base+0x1121>
  40f721:	mov    rdi,rax
  40f724:	call   405544 <_start@@Base+0x1294>
  40f729:	test   eax,eax
  40f72b:	je     40f743 <verify_monster@@Base+0x132>
  40f72d:	lea    rdi,[rip+0xf9f4]        # 41f128 <_IO_stdin_used@@Base+0x1128>
  40f734:	call   4041a0 <puts@plt>
  40f739:	mov    eax,0xffffffff
  40f73e:	jmp    41072a <verify_monster@@Base+0x1119>
  40f743:	mov    rax,QWORD PTR [rbp-0xf8]
  40f74a:	lea    rsi,[rip+0xea23]        # 41e174 <_IO_stdin_used@@Base+0x174>
  40f751:	mov    rdi,rax
  40f754:	call   405544 <_start@@Base+0x1294>
  40f759:	test   eax,eax
  40f75b:	jne    40f773 <verify_monster@@Base+0x162>
  40f75d:	lea    rdi,[rip+0xf9fc]        # 41f160 <_IO_stdin_used@@Base+0x1160>
  40f764:	call   4041a0 <puts@plt>
  40f769:	mov    eax,0xffffffff
  40f76e:	jmp    41072a <verify_monster@@Base+0x1119>
  40f773:	mov    rax,QWORD PTR [rbp-0xf8]
  40f77a:	mov    rdi,rax
  40f77d:	call   40643b <_start@@Base+0x218b>
  40f782:	mov    QWORD PTR [rbp-0xe0],rax
  40f789:	cmp    QWORD PTR [rbp-0xe0],0x0
  40f791:	jne    40f7a9 <verify_monster@@Base+0x198>
  40f793:	lea    rdi,[rip+0xf275]        # 41ea0f <_IO_stdin_used@@Base+0xa0f>
  40f79a:	call   4041a0 <puts@plt>
  40f79f:	mov    eax,0xffffffff
  40f7a4:	jmp    41072a <verify_monster@@Base+0x1119>
  40f7a9:	mov    rax,QWORD PTR [rbp-0xe0]
  40f7b0:	mov    rdi,rax
  40f7b3:	call   4065f0 <_start@@Base+0x2340>
  40f7b8:	cmp    ax,0x50
  40f7bc:	je     40f7d4 <verify_monster@@Base+0x1c3>
  40f7be:	lea    rdi,[rip+0xf333]        # 41eaf8 <_IO_stdin_used@@Base+0xaf8>
  40f7c5:	call   4041a0 <puts@plt>
  40f7ca:	mov    eax,0xffffffff
  40f7cf:	jmp    41072a <verify_monster@@Base+0x1119>
  40f7d4:	mov    rax,QWORD PTR [rbp-0xe0]
  40f7db:	mov    rdi,rax
  40f7de:	call   40648e <_start@@Base+0x21de>
  40f7e3:	mov    QWORD PTR [rbp-0xd8],rax
  40f7ea:	cmp    QWORD PTR [rbp-0xd8],0x0
  40f7f2:	jne    40f80a <verify_monster@@Base+0x1f9>
  40f7f4:	lea    rdi,[rip+0xf997]        # 41f192 <_IO_stdin_used@@Base+0x1192>
  40f7fb:	call   4041a0 <puts@plt>
  40f800:	mov    eax,0xffffffff
  40f805:	jmp    41072a <verify_monster@@Base+0x1119>
  40f80a:	mov    rax,QWORD PTR [rbp-0xd8]
  40f811:	and    eax,0xf
  40f814:	test   rax,rax
  40f817:	je     40f825 <verify_monster@@Base+0x214>
  40f819:	lea    rdi,[rip+0xf988]        # 41f1a8 <_IO_stdin_used@@Base+0x11a8>
  40f820:	call   4041a0 <puts@plt>
  40f825:	mov    rax,QWORD PTR [rbp-0xd8]
  40f82c:	mov    rdi,rax
  40f82f:	call   40596a <_start@@Base+0x16ba>
  40f834:	vucomiss xmm0,DWORD PTR [rip+0x129c8]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f83c:	jp     40f848 <verify_monster@@Base+0x237>
  40f83e:	vucomiss xmm0,DWORD PTR [rip+0x129be]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f846:	je     40f85e <verify_monster@@Base+0x24d>
  40f848:	lea    rdi,[rip+0xf981]        # 41f1d0 <_IO_stdin_used@@Base+0x11d0>
  40f84f:	call   4041a0 <puts@plt>
  40f854:	mov    eax,0xffffffff
  40f859:	jmp    41072a <verify_monster@@Base+0x1119>
  40f85e:	mov    rax,QWORD PTR [rbp-0xd8]
  40f865:	vmovss xmm0,DWORD PTR [rax]
  40f869:	vmovss xmm1,DWORD PTR [rip+0x12997]        # 422208 <_IO_stdin_used@@Base+0x4208>
  40f871:	vucomiss xmm0,xmm1
  40f875:	jp     40f8c5 <verify_monster@@Base+0x2b4>
  40f877:	vmovss xmm1,DWORD PTR [rip+0x12989]        # 422208 <_IO_stdin_used@@Base+0x4208>
  40f87f:	vucomiss xmm0,xmm1
  40f883:	jne    40f8c5 <verify_monster@@Base+0x2b4>
  40f885:	mov    rax,QWORD PTR [rbp-0xd8]
  40f88c:	vmovss xmm0,DWORD PTR [rax+0x4]
  40f891:	vucomiss xmm0,DWORD PTR [rip+0x12973]        # 42220c <_IO_stdin_used@@Base+0x420c>
  40f899:	jp     40f8c5 <verify_monster@@Base+0x2b4>
  40f89b:	vucomiss xmm0,DWORD PTR [rip+0x12969]        # 42220c <_IO_stdin_used@@Base+0x420c>
  40f8a3:	jne    40f8c5 <verify_monster@@Base+0x2b4>
  40f8a5:	mov    rax,QWORD PTR [rbp-0xd8]
  40f8ac:	vmovss xmm0,DWORD PTR [rax+0x8]
  40f8b1:	vucomiss xmm0,DWORD PTR [rip+0x1294b]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f8b9:	jp     40f8c5 <verify_monster@@Base+0x2b4>
  40f8bb:	vucomiss xmm0,DWORD PTR [rip+0x12941]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f8c3:	je     40f8db <verify_monster@@Base+0x2ca>
  40f8c5:	lea    rdi,[rip+0xf925]        # 41f1f1 <_IO_stdin_used@@Base+0x11f1>
  40f8cc:	call   4041a0 <puts@plt>
  40f8d1:	mov    eax,0xffffffff
  40f8d6:	jmp    41072a <verify_monster@@Base+0x1119>
  40f8db:	lea    rax,[rbp-0x60]
  40f8df:	mov    rdi,rax
  40f8e2:	call   40a1de <_start@@Base+0x5f2e>
  40f8e7:	mov    rdx,QWORD PTR [rbp-0xd8]
  40f8ee:	lea    rax,[rbp-0x60]
  40f8f2:	mov    rsi,rdx
  40f8f5:	mov    rdi,rax
  40f8f8:	call   40a12c <_start@@Base+0x5e7c>
  40f8fd:	vmovss xmm0,DWORD PTR [rbp-0x60]
  40f902:	vmovss xmm1,DWORD PTR [rip+0x128fe]        # 422208 <_IO_stdin_used@@Base+0x4208>
  40f90a:	vucomiss xmm0,xmm1
  40f90e:	jp     40f950 <verify_monster@@Base+0x33f>
  40f910:	vmovss xmm1,DWORD PTR [rip+0x128f0]        # 422208 <_IO_stdin_used@@Base+0x4208>
  40f918:	vucomiss xmm0,xmm1
  40f91c:	jne    40f950 <verify_monster@@Base+0x33f>
  40f91e:	vmovss xmm0,DWORD PTR [rbp-0x5c]
  40f923:	vucomiss xmm0,DWORD PTR [rip+0x128e1]        # 42220c <_IO_stdin_used@@Base+0x420c>
  40f92b:	jp     40f950 <verify_monster@@Base+0x33f>
  40f92d:	vucomiss xmm0,DWORD PTR [rip+0x128d7]        # 42220c <_IO_stdin_used@@Base+0x420c>
  40f935:	jne    40f950 <verify_monster@@Base+0x33f>
  40f937:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40f93c:	vucomiss xmm0,DWORD PTR [rip+0x128c0]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f944:	jp     40f950 <verify_monster@@Base+0x33f>
  40f946:	vucomiss xmm0,DWORD PTR [rip+0x128b6]        # 422204 <_IO_stdin_used@@Base+0x4204>
  40f94e:	je     40f966 <verify_monster@@Base+0x355>
  40f950:	lea    rdi,[rip+0xf8b1]        # 41f208 <_IO_stdin_used@@Base+0x1208>
  40f957:	call   4041a0 <puts@plt>
  40f95c:	mov    eax,0xffffffff
  40f961:	jmp    41072a <verify_monster@@Base+0x1119>
  40f966:	mov    rax,QWORD PTR [rbp-0xd8]
  40f96d:	vmovsd xmm0,QWORD PTR [rax+0x10]
  40f972:	vxorpd xmm1,xmm1,xmm1
  40f976:	vucomisd xmm0,xmm1
  40f97a:	jp     40f9c9 <verify_monster@@Base+0x3b8>
  40f97c:	vxorpd xmm1,xmm1,xmm1
  40f980:	vucomisd xmm0,xmm1
  40f984:	jne    40f9c9 <verify_monster@@Base+0x3b8>
  40f986:	mov    rax,QWORD PTR [rbp-0xd8]
  40f98d:	vmovsd xmm0,QWORD PTR [rax+0x10]
  40f992:	vxorpd xmm1,xmm1,xmm1
  40f996:	vucomisd xmm0,xmm1
  40f99a:	jp     40f9c9 <verify_monster@@Base+0x3b8>
  40f99c:	vxorpd xmm1,xmm1,xmm1
  40f9a0:	vucomisd xmm0,xmm1
  40f9a4:	jne    40f9c9 <verify_monster@@Base+0x3b8>
  40f9a6:	mov    rax,QWORD PTR [rbp-0xd8]
  40f9ad:	add    rax,0x1a
  40f9b1:	mov    edx,0x4
  40f9b6:	lea    rsi,[rip+0xefe3]        # 41e9a0 <_IO_stdin_used@@Base+0x9a0>
  40f9bd:	mov    rdi,rax
  40f9c0:	call   404230 <memcmp@plt>
  40f9c5:	test   eax,eax
  40f9c7:	je     40f9df <verify_monster@@Base+0x3ce>
  40f9c9:	lea    rdi,[rip+0xf860]        # 41f230 <_IO_stdin_used@@Base+0x1230>
  40f9d0:	call   4041a0 <puts@plt>
  40f9d5:	mov    eax,0xffffffff
  40f9da:	jmp    41072a <verify_monster@@Base+0x1119>
  40f9df:	mov    rax,QWORD PTR [rbp-0xe0]
  40f9e6:	mov    rdi,rax
  40f9e9:	call   406adb <_start@@Base+0x282b>
  40f9ee:	mov    QWORD PTR [rbp-0xd0],rax
  40f9f5:	cmp    QWORD PTR [rbp-0xd0],0x0
  40f9fd:	je     40fa19 <verify_monster@@Base+0x408>
  40f9ff:	mov    rax,QWORD PTR [rbp-0xd0]
  40fa06:	lea    rsi,[rip+0xf1e2]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  40fa0d:	mov    rdi,rax
  40fa10:	call   404240 <strcmp@plt>
  40fa15:	test   eax,eax
  40fa17:	je     40fa2f <verify_monster@@Base+0x41e>
  40fa19:	lea    rdi,[rip+0xf834]        # 41f254 <_IO_stdin_used@@Base+0x1254>
  40fa20:	call   4041a0 <puts@plt>
  40fa25:	mov    eax,0xffffffff
  40fa2a:	jmp    41072a <verify_monster@@Base+0x1119>
  40fa2f:	mov    rax,QWORD PTR [rbp-0xe0]
  40fa36:	mov    rdi,rax
  40fa39:	call   406adb <_start@@Base+0x282b>
  40fa3e:	mov    QWORD PTR [rbp-0xc8],rax
  40fa45:	mov    rax,QWORD PTR [rbp-0xd0]
  40fa4c:	mov    rdi,rax
  40fa4f:	call   4048a4 <_start@@Base+0x5f4>
  40fa54:	cmp    rax,0x9
  40fa58:	jne    40fa6f <verify_monster@@Base+0x45e>
  40fa5a:	mov    rax,QWORD PTR [rbp-0xc8]
  40fa61:	mov    rdi,rax
  40fa64:	call   4048a4 <_start@@Base+0x5f4>
  40fa69:	cmp    rax,0x9
  40fa6d:	je     40fa85 <verify_monster@@Base+0x474>
  40fa6f:	lea    rdi,[rip+0xf7f2]        # 41f268 <_IO_stdin_used@@Base+0x1268>
  40fa76:	call   4041a0 <puts@plt>
  40fa7b:	mov    eax,0xffffffff
  40fa80:	jmp    41072a <verify_monster@@Base+0x1119>
  40fa85:	mov    rax,QWORD PTR [rbp-0xe0]
  40fa8c:	mov    rdi,rax
  40fa8f:	call   407682 <_start@@Base+0x33d2>
  40fa94:	cmp    al,0x2
  40fa96:	je     40faae <verify_monster@@Base+0x49d>
  40fa98:	lea    rdi,[rip+0xf7e4]        # 41f283 <_IO_stdin_used@@Base+0x1283>
  40fa9f:	call   4041a0 <puts@plt>
  40faa4:	mov    eax,0xffffffff
  40faa9:	jmp    41072a <verify_monster@@Base+0x1119>
  40faae:	mov    edi,0x2
  40fab3:	call   4056aa <_start@@Base+0x13fa>
  40fab8:	lea    rsi,[rip+0xe62c]        # 41e0eb <_IO_stdin_used@@Base+0xeb>
  40fabf:	mov    rdi,rax
  40fac2:	call   404240 <strcmp@plt>
  40fac7:	test   eax,eax
  40fac9:	je     40fae1 <verify_monster@@Base+0x4d0>
  40facb:	lea    rdi,[rip+0xf7d6]        # 41f2a8 <_IO_stdin_used@@Base+0x12a8>
  40fad2:	call   4041a0 <puts@plt>
  40fad7:	mov    eax,0xffffffff
  40fadc:	jmp    41072a <verify_monster@@Base+0x1119>
  40fae1:	mov    edi,0x2
  40fae6:	call   4056ea <_start@@Base+0x143a>
  40faeb:	test   eax,eax
  40faed:	jne    40fb05 <verify_monster@@Base+0x4f4>
  40faef:	lea    rdi,[rip+0xf7e2]        # 41f2d8 <_IO_stdin_used@@Base+0x12d8>
  40faf6:	call   4041a0 <puts@plt>
  40fafb:	mov    eax,0xffffffff
  40fb00:	jmp    41072a <verify_monster@@Base+0x1119>
  40fb05:	mov    edi,0x1
  40fb0a:	call   4056ea <_start@@Base+0x143a>
  40fb0f:	test   eax,eax
  40fb11:	jne    40fb29 <verify_monster@@Base+0x518>
  40fb13:	lea    rdi,[rip+0xf7fe]        # 41f318 <_IO_stdin_used@@Base+0x1318>
  40fb1a:	call   4041a0 <puts@plt>
  40fb1f:	mov    eax,0xffffffff
  40fb24:	jmp    41072a <verify_monster@@Base+0x1119>
  40fb29:	mov    edi,0x4
  40fb2e:	call   4056ea <_start@@Base+0x143a>
  40fb33:	test   eax,eax
  40fb35:	je     40fb4d <verify_monster@@Base+0x53c>
  40fb37:	lea    rdi,[rip+0xf812]        # 41f350 <_IO_stdin_used@@Base+0x1350>
  40fb3e:	call   4041a0 <puts@plt>
  40fb43:	mov    eax,0xffffffff
  40fb48:	jmp    41072a <verify_monster@@Base+0x1119>
  40fb4d:	mov    edi,0x8
  40fb52:	call   4056ea <_start@@Base+0x143a>
  40fb57:	test   eax,eax
  40fb59:	jne    40fb71 <verify_monster@@Base+0x560>
  40fb5b:	lea    rdi,[rip+0xf81e]        # 41f380 <_IO_stdin_used@@Base+0x1380>
  40fb62:	call   4041a0 <puts@plt>
  40fb67:	mov    eax,0xffffffff
  40fb6c:	jmp    41072a <verify_monster@@Base+0x1119>
  40fb71:	mov    edi,0x9
  40fb76:	call   4056ea <_start@@Base+0x143a>
  40fb7b:	test   eax,eax
  40fb7d:	je     40fb95 <verify_monster@@Base+0x584>
  40fb7f:	lea    rdi,[rip+0xf7ca]        # 41f350 <_IO_stdin_used@@Base+0x1350>
  40fb86:	call   4041a0 <puts@plt>
  40fb8b:	mov    eax,0xffffffff
  40fb90:	jmp    41072a <verify_monster@@Base+0x1119>
  40fb95:	mov    edi,0x1
  40fb9a:	call   405abf <_start@@Base+0x180f>
  40fb9f:	test   eax,eax
  40fba1:	jne    40fbb9 <verify_monster@@Base+0x5a8>
  40fba3:	lea    rdi,[rip+0xf816]        # 41f3c0 <_IO_stdin_used@@Base+0x13c0>
  40fbaa:	call   4041a0 <puts@plt>
  40fbaf:	mov    eax,0xffffffff
  40fbb4:	jmp    41072a <verify_monster@@Base+0x1119>
  40fbb9:	mov    edi,0x2a
  40fbbe:	call   405abf <_start@@Base+0x180f>
  40fbc3:	test   eax,eax
  40fbc5:	je     40fbdd <verify_monster@@Base+0x5cc>
  40fbc7:	lea    rdi,[rip+0xf81a]        # 41f3e8 <_IO_stdin_used@@Base+0x13e8>
  40fbce:	call   4041a0 <puts@plt>
  40fbd3:	mov    eax,0xffffffff
  40fbd8:	jmp    41072a <verify_monster@@Base+0x1119>
  40fbdd:	mov    rax,QWORD PTR [rbp-0xe0]
  40fbe4:	mov    rdi,rax
  40fbe7:	call   4077ec <_start@@Base+0x353c>
  40fbec:	mov    QWORD PTR [rbp-0xc0],rax
  40fbf3:	mov    rax,QWORD PTR [rbp-0xc0]
  40fbfa:	mov    rdi,rax
  40fbfd:	call   404bba <_start@@Base+0x90a>
  40fc02:	cmp    rax,0xa
  40fc06:	je     40fc1e <verify_monster@@Base+0x60d>
  40fc08:	lea    rdi,[rip+0xf7fd]        # 41f40c <_IO_stdin_used@@Base+0x140c>
  40fc0f:	call   4041a0 <puts@plt>
  40fc14:	mov    eax,0xffffffff
  40fc19:	jmp    41072a <verify_monster@@Base+0x1119>
  40fc1e:	mov    QWORD PTR [rbp-0xe8],0x0
  40fc29:	jmp    40fc7b <verify_monster@@Base+0x66a>
  40fc2b:	mov    rdx,QWORD PTR [rbp-0xe8]
  40fc32:	mov    rax,QWORD PTR [rbp-0xc0]
  40fc39:	mov    rsi,rdx
  40fc3c:	mov    rdi,rax
  40fc3f:	call   404bd4 <_start@@Base+0x924>
  40fc44:	movzx  eax,al
  40fc47:	cmp    QWORD PTR [rbp-0xe8],rax
  40fc4e:	je     40fc74 <verify_monster@@Base+0x663>
  40fc50:	mov    rax,QWORD PTR [rbp-0xe8]
  40fc57:	mov    esi,eax
  40fc59:	lea    rdi,[rip+0xf7c8]        # 41f428 <_IO_stdin_used@@Base+0x1428>
  40fc60:	mov    eax,0x0
  40fc65:	call   4041d0 <printf@plt>
  40fc6a:	mov    eax,0xffffffff
  40fc6f:	jmp    41072a <verify_monster@@Base+0x1119>
  40fc74:	inc    QWORD PTR [rbp-0xe8]
  40fc7b:	mov    rax,QWORD PTR [rbp-0xc0]
  40fc82:	mov    rdi,rax
  40fc85:	call   404bba <_start@@Base+0x90a>
  40fc8a:	cmp    QWORD PTR [rbp-0xe8],rax
  40fc91:	jb     40fc2b <verify_monster@@Base+0x61a>
  40fc93:	mov    rax,QWORD PTR [rbp-0xe0]
  40fc9a:	mov    rdi,rax
  40fc9d:	call   406971 <_start@@Base+0x26c1>
  40fca2:	cmp    ax,0x96
  40fca6:	je     40fcbe <verify_monster@@Base+0x6ad>
  40fca8:	lea    rdi,[rip+0xf796]        # 41f445 <_IO_stdin_used@@Base+0x1445>
  40fcaf:	call   4041a0 <puts@plt>
  40fcb4:	mov    eax,0xffffffff
  40fcb9:	jmp    41072a <verify_monster@@Base+0x1119>
  40fcbe:	mov    rax,QWORD PTR [rbp-0xe0]
  40fcc5:	mov    rdi,rax
  40fcc8:	call   406a31 <_start@@Base+0x2781>
  40fccd:	test   eax,eax
  40fccf:	je     40fce7 <verify_monster@@Base+0x6d6>
  40fcd1:	lea    rdi,[rip+0xf77e]        # 41f456 <_IO_stdin_used@@Base+0x1456>
  40fcd8:	call   4041a0 <puts@plt>
  40fcdd:	mov    eax,0xffffffff
  40fce2:	jmp    41072a <verify_monster@@Base+0x1119>
  40fce7:	mov    rax,QWORD PTR [rbp-0xe0]
  40fcee:	mov    rdi,rax
  40fcf1:	call   4066b0 <_start@@Base+0x2400>
  40fcf6:	test   eax,eax
  40fcf8:	jne    40fd10 <verify_monster@@Base+0x6ff>
  40fcfa:	lea    rdi,[rip+0xf76f]        # 41f470 <_IO_stdin_used@@Base+0x1470>
  40fd01:	call   4041a0 <puts@plt>
  40fd06:	mov    eax,0xffffffff
  40fd0b:	jmp    41072a <verify_monster@@Base+0x1119>
  40fd10:	mov    rax,QWORD PTR [rbp-0xe0]
  40fd17:	mov    rdi,rax
  40fd1a:	call   406546 <_start@@Base+0x2296>
  40fd1f:	test   eax,eax
  40fd21:	jne    40fd39 <verify_monster@@Base+0x728>
  40fd23:	lea    rdi,[rip+0xee0d]        # 41eb37 <_IO_stdin_used@@Base+0xb37>
  40fd2a:	call   4041a0 <puts@plt>
  40fd2f:	mov    eax,0xffffffff
  40fd34:	jmp    41072a <verify_monster@@Base+0x1119>
  40fd39:	mov    rax,QWORD PTR [rbp-0xe0]
  40fd40:	mov    rdi,rax
  40fd43:	call   407f57 <_start@@Base+0x3ca7>
  40fd48:	mov    QWORD PTR [rbp-0xb8],rax
  40fd4f:	mov    rax,QWORD PTR [rbp-0xb8]
  40fd56:	mov    rdi,rax
  40fd59:	call   4057a4 <_start@@Base+0x14f4>
  40fd5e:	cmp    rax,0x5
  40fd62:	je     40fd7a <verify_monster@@Base+0x769>
  40fd64:	lea    rdi,[rip+0xf725]        # 41f490 <_IO_stdin_used@@Base+0x1490>
  40fd6b:	call   4041a0 <puts@plt>
  40fd70:	mov    eax,0xffffffff
  40fd75:	jmp    41072a <verify_monster@@Base+0x1119>
  40fd7a:	mov    QWORD PTR [rbp-0xe8],0x0
  40fd85:	jmp    40fe38 <verify_monster@@Base+0x827>
  40fd8a:	mov    rdx,QWORD PTR [rbp-0xe8]
  40fd91:	mov    rax,QWORD PTR [rbp-0xb8]
  40fd98:	mov    rsi,rdx
  40fd9b:	mov    rdi,rax
  40fd9e:	call   405743 <_start@@Base+0x1493>
  40fda3:	mov    QWORD PTR [rbp-0xb0],rax
  40fdaa:	mov    rax,QWORD PTR [rbp-0xe8]
  40fdb1:	movzx  ebx,WORD PTR [rbp+rax*4-0x30]
  40fdb6:	mov    rax,QWORD PTR [rbp-0xb0]
  40fdbd:	mov    rdi,rax
  40fdc0:	call   4057d2 <_start@@Base+0x1522>
  40fdc5:	cmp    bx,ax
  40fdc8:	je     40fdee <verify_monster@@Base+0x7dd>
  40fdca:	mov    rax,QWORD PTR [rbp-0xe8]
  40fdd1:	mov    esi,eax
  40fdd3:	lea    rdi,[rip+0xf6de]        # 41f4b8 <_IO_stdin_used@@Base+0x14b8>
  40fdda:	mov    eax,0x0
  40fddf:	call   4041d0 <printf@plt>
  40fde4:	mov    eax,0xffffffff
  40fde9:	jmp    41072a <verify_monster@@Base+0x1119>
  40fdee:	mov    rax,QWORD PTR [rbp-0xe8]
  40fdf5:	movzx  ebx,BYTE PTR [rbp+rax*4-0x2e]
  40fdfa:	mov    rax,QWORD PTR [rbp-0xb0]
  40fe01:	mov    rdi,rax
  40fe04:	call   4057fa <_start@@Base+0x154a>
  40fe09:	cmp    bl,al
  40fe0b:	je     40fe31 <verify_monster@@Base+0x820>
  40fe0d:	mov    rax,QWORD PTR [rbp-0xe8]
  40fe14:	mov    esi,eax
  40fe16:	lea    rdi,[rip+0xf69b]        # 41f4b8 <_IO_stdin_used@@Base+0x14b8>
  40fe1d:	mov    eax,0x0
  40fe22:	call   4041d0 <printf@plt>
  40fe27:	mov    eax,0xffffffff
  40fe2c:	jmp    41072a <verify_monster@@Base+0x1119>
  40fe31:	inc    QWORD PTR [rbp-0xe8]
  40fe38:	cmp    QWORD PTR [rbp-0xe8],0x4
  40fe40:	jbe    40fd8a <verify_monster@@Base+0x779>
  40fe46:	mov    rax,QWORD PTR [rbp-0xe0]
  40fe4d:	mov    rdi,rax
  40fe50:	call   4078c1 <_start@@Base+0x3611>
  40fe55:	mov    QWORD PTR [rbp-0xa8],rax
  40fe5c:	mov    rax,QWORD PTR [rbp-0xa8]
  40fe63:	mov    rdi,rax
  40fe66:	call   406352 <_start@@Base+0x20a2>
  40fe6b:	cmp    rax,0x8
  40fe6f:	je     40fe87 <verify_monster@@Base+0x876>
  40fe71:	lea    rdi,[rip+0xf668]        # 41f4e0 <_IO_stdin_used@@Base+0x14e0>
  40fe78:	call   4041a0 <puts@plt>
  40fe7d:	mov    eax,0xffffffff
  40fe82:	jmp    41072a <verify_monster@@Base+0x1119>
  40fe87:	mov    rax,QWORD PTR [rbp-0xa8]
  40fe8e:	mov    esi,0x5
  40fe93:	mov    rdi,rax
  40fe96:	call   406380 <_start@@Base+0x20d0>
  40fe9b:	mov    QWORD PTR [rbp-0xa0],rax
  40fea2:	cmp    QWORD PTR [rbp-0xa0],0x0
  40feaa:	jne    40fecb <verify_monster@@Base+0x8ba>
  40feac:	lea    rcx,[rip+0x117f5]        # 4216a8 <_IO_stdin_used@@Base+0x36a8>
  40feb3:	mov    edx,0x296
  40feb8:	lea    rsi,[rip+0xf649]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  40febf:	lea    rdi,[rip+0xf6ad]        # 41f573 <_IO_stdin_used@@Base+0x1573>
  40fec6:	call   4041f0 <__assert_fail@plt>
  40fecb:	mov    rax,QWORD PTR [rbp-0xa0]
  40fed2:	mov    rdi,rax
  40fed5:	call   406adb <_start@@Base+0x282b>
  40feda:	mov    QWORD PTR [rbp-0xd0],rax
  40fee1:	mov    rax,QWORD PTR [rbp-0xd0]
  40fee8:	lea    rsi,[rip+0xf688]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  40feef:	mov    rdi,rax
  40fef2:	call   404240 <strcmp@plt>
  40fef7:	test   eax,eax
  40fef9:	je     40ff16 <verify_monster@@Base+0x905>
  40fefb:	lea    rdi,[rip+0xf67d]        # 41f57f <_IO_stdin_used@@Base+0x157f>
  40ff02:	mov    eax,0x0
  40ff07:	call   4041d0 <printf@plt>
  40ff0c:	mov    eax,0xffffffff
  40ff11:	jmp    41072a <verify_monster@@Base+0x1119>
  40ff16:	mov    rax,QWORD PTR [rbp-0xa8]
  40ff1d:	mov    esi,0x1
  40ff22:	mov    rdi,rax
  40ff25:	call   406380 <_start@@Base+0x20d0>
  40ff2a:	mov    QWORD PTR [rbp-0x98],rax
  40ff31:	mov    rax,QWORD PTR [rbp-0x98]
  40ff38:	cmp    rax,QWORD PTR [rbp-0xa0]
  40ff3f:	je     40ff57 <verify_monster@@Base+0x946>
  40ff41:	lea    rdi,[rip+0xf650]        # 41f598 <_IO_stdin_used@@Base+0x1598>
  40ff48:	call   4041a0 <puts@plt>
  40ff4d:	mov    eax,0xffffffff
  40ff52:	jmp    41072a <verify_monster@@Base+0x1119>
  40ff57:	mov    rax,QWORD PTR [rbp-0x98]
  40ff5e:	mov    rdi,rax
  40ff61:	call   406adb <_start@@Base+0x282b>
  40ff66:	mov    QWORD PTR [rbp-0xd0],rax
  40ff6d:	mov    rax,QWORD PTR [rbp-0xd0]
  40ff74:	lea    rsi,[rip+0xf5fc]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  40ff7b:	mov    rdi,rax
  40ff7e:	call   404240 <strcmp@plt>
  40ff83:	test   eax,eax
  40ff85:	je     40ffac <verify_monster@@Base+0x99b>
  40ff87:	mov    rax,QWORD PTR [rbp-0xd0]
  40ff8e:	mov    rsi,rax
  40ff91:	lea    rdi,[rip+0xf638]        # 41f5d0 <_IO_stdin_used@@Base+0x15d0>
  40ff98:	mov    eax,0x0
  40ff9d:	call   4041d0 <printf@plt>
  40ffa2:	mov    eax,0xffffffff
  40ffa7:	jmp    41072a <verify_monster@@Base+0x1119>
  40ffac:	mov    rax,QWORD PTR [rbp-0xa8]
  40ffb3:	mov    esi,0x2
  40ffb8:	mov    rdi,rax
  40ffbb:	call   406380 <_start@@Base+0x20d0>
  40ffc0:	mov    QWORD PTR [rbp-0xa0],rax
  40ffc7:	mov    rax,QWORD PTR [rbp-0xa0]
  40ffce:	mov    rdi,rax
  40ffd1:	call   406adb <_start@@Base+0x282b>
  40ffd6:	mov    QWORD PTR [rbp-0xd0],rax
  40ffdd:	mov    rax,QWORD PTR [rbp-0xd0]
  40ffe4:	lea    rsi,[rip+0xf607]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  40ffeb:	mov    rdi,rax
  40ffee:	call   404240 <strcmp@plt>
  40fff3:	test   eax,eax
  40fff5:	je     41001c <verify_monster@@Base+0xa0b>
  40fff7:	mov    rax,QWORD PTR [rbp-0xd0]
  40fffe:	mov    rsi,rax
  410001:	lea    rdi,[rip+0xf5f0]        # 41f5f8 <_IO_stdin_used@@Base+0x15f8>
  410008:	mov    eax,0x0
  41000d:	call   4041d0 <printf@plt>
  410012:	mov    eax,0xffffffff
  410017:	jmp    41072a <verify_monster@@Base+0x1119>
  41001c:	mov    rax,QWORD PTR [rbp-0xa8]
  410023:	mov    esi,0x0
  410028:	mov    rdi,rax
  41002b:	call   406380 <_start@@Base+0x20d0>
  410030:	mov    QWORD PTR [rbp-0xa0],rax
  410037:	mov    rax,QWORD PTR [rbp-0xa0]
  41003e:	mov    rdi,rax
  410041:	call   406adb <_start@@Base+0x282b>
  410046:	mov    QWORD PTR [rbp-0xd0],rax
  41004d:	mov    rax,QWORD PTR [rbp-0xd0]
  410054:	lea    rsi,[rip+0xf5bf]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  41005b:	mov    rdi,rax
  41005e:	call   404240 <strcmp@plt>
  410063:	test   eax,eax
  410065:	je     41008c <verify_monster@@Base+0xa7b>
  410067:	mov    rax,QWORD PTR [rbp-0xd0]
  41006e:	mov    rsi,rax
  410071:	lea    rdi,[rip+0xf5b0]        # 41f628 <_IO_stdin_used@@Base+0x1628>
  410078:	mov    eax,0x0
  41007d:	call   4041d0 <printf@plt>
  410082:	mov    eax,0xffffffff
  410087:	jmp    41072a <verify_monster@@Base+0x1119>
  41008c:	mov    rax,QWORD PTR [rbp-0xa8]
  410093:	mov    esi,0x3
  410098:	mov    rdi,rax
  41009b:	call   406380 <_start@@Base+0x20d0>
  4100a0:	mov    QWORD PTR [rbp-0xa0],rax
  4100a7:	mov    rax,QWORD PTR [rbp-0xa0]
  4100ae:	mov    rdi,rax
  4100b1:	call   406adb <_start@@Base+0x282b>
  4100b6:	mov    QWORD PTR [rbp-0xd0],rax
  4100bd:	mov    rax,QWORD PTR [rbp-0xd0]
  4100c4:	lea    rsi,[rip+0xf4ac]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4100cb:	mov    rdi,rax
  4100ce:	call   404240 <strcmp@plt>
  4100d3:	test   eax,eax
  4100d5:	je     4100fc <verify_monster@@Base+0xaeb>
  4100d7:	mov    rax,QWORD PTR [rbp-0xd0]
  4100de:	mov    rsi,rax
  4100e1:	lea    rdi,[rip+0xf568]        # 41f650 <_IO_stdin_used@@Base+0x1650>
  4100e8:	mov    eax,0x0
  4100ed:	call   4041d0 <printf@plt>
  4100f2:	mov    eax,0xffffffff
  4100f7:	jmp    41072a <verify_monster@@Base+0x1119>
  4100fc:	mov    rax,QWORD PTR [rbp-0xa8]
  410103:	mov    esi,0x4
  410108:	mov    rdi,rax
  41010b:	call   406380 <_start@@Base+0x20d0>
  410110:	mov    QWORD PTR [rbp-0xa0],rax
  410117:	mov    rax,QWORD PTR [rbp-0xa0]
  41011e:	mov    rdi,rax
  410121:	call   406adb <_start@@Base+0x282b>
  410126:	mov    QWORD PTR [rbp-0xd0],rax
  41012d:	mov    rax,QWORD PTR [rbp-0xd0]
  410134:	lea    rsi,[rip+0xf4b7]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  41013b:	mov    rdi,rax
  41013e:	call   404240 <strcmp@plt>
  410143:	test   eax,eax
  410145:	je     41016c <verify_monster@@Base+0xb5b>
  410147:	mov    rax,QWORD PTR [rbp-0xd0]
  41014e:	mov    rsi,rax
  410151:	lea    rdi,[rip+0xf520]        # 41f678 <_IO_stdin_used@@Base+0x1678>
  410158:	mov    eax,0x0
  41015d:	call   4041d0 <printf@plt>
  410162:	mov    eax,0xffffffff
  410167:	jmp    41072a <verify_monster@@Base+0x1119>
  41016c:	mov    rax,QWORD PTR [rbp-0xa8]
  410173:	mov    esi,0x6
  410178:	mov    rdi,rax
  41017b:	call   406380 <_start@@Base+0x20d0>
  410180:	mov    QWORD PTR [rbp-0xa0],rax
  410187:	mov    rax,QWORD PTR [rbp-0xa0]
  41018e:	mov    rdi,rax
  410191:	call   406adb <_start@@Base+0x282b>
  410196:	mov    QWORD PTR [rbp-0xd0],rax
  41019d:	mov    rax,QWORD PTR [rbp-0xd0]
  4101a4:	lea    rsi,[rip+0xf46f]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  4101ab:	mov    rdi,rax
  4101ae:	call   404240 <strcmp@plt>
  4101b3:	test   eax,eax
  4101b5:	je     4101dc <verify_monster@@Base+0xbcb>
  4101b7:	mov    rax,QWORD PTR [rbp-0xd0]
  4101be:	mov    rsi,rax
  4101c1:	lea    rdi,[rip+0xf4d8]        # 41f6a0 <_IO_stdin_used@@Base+0x16a0>
  4101c8:	mov    eax,0x0
  4101cd:	call   4041d0 <printf@plt>
  4101d2:	mov    eax,0xffffffff
  4101d7:	jmp    41072a <verify_monster@@Base+0x1119>
  4101dc:	mov    rax,QWORD PTR [rbp-0xa8]
  4101e3:	mov    esi,0x7
  4101e8:	mov    rdi,rax
  4101eb:	call   406380 <_start@@Base+0x20d0>
  4101f0:	mov    QWORD PTR [rbp-0xa0],rax
  4101f7:	mov    rax,QWORD PTR [rbp-0xa0]
  4101fe:	mov    rdi,rax
  410201:	call   406adb <_start@@Base+0x282b>
  410206:	mov    QWORD PTR [rbp-0xd0],rax
  41020d:	mov    rax,QWORD PTR [rbp-0xd0]
  410214:	lea    rsi,[rip+0xf3d7]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  41021b:	mov    rdi,rax
  41021e:	call   404240 <strcmp@plt>
  410223:	test   eax,eax
  410225:	je     41024c <verify_monster@@Base+0xc3b>
  410227:	mov    rax,QWORD PTR [rbp-0xd0]
  41022e:	mov    rsi,rax
  410231:	lea    rdi,[rip+0xf490]        # 41f6c8 <_IO_stdin_used@@Base+0x16c8>
  410238:	mov    eax,0x0
  41023d:	call   4041d0 <printf@plt>
  410242:	mov    eax,0xffffffff
  410247:	jmp    41072a <verify_monster@@Base+0x1119>
  41024c:	mov    rax,QWORD PTR [rbp-0xe0]
  410253:	mov    rdi,rax
  410256:	call   407996 <_start@@Base+0x36e6>
  41025b:	mov    QWORD PTR [rbp-0x90],rax
  410262:	mov    rax,QWORD PTR [rbp-0x90]
  410269:	mov    rdi,rax
  41026c:	call   4048d2 <_start@@Base+0x622>
  410271:	cmp    rax,0x3
  410275:	je     41028d <verify_monster@@Base+0xc7c>
  410277:	lea    rdi,[rip+0xf472]        # 41f6f0 <_IO_stdin_used@@Base+0x16f0>
  41027e:	call   4041a0 <puts@plt>
  410283:	mov    eax,0xffffffff
  410288:	jmp    41072a <verify_monster@@Base+0x1119>
  41028d:	mov    rax,QWORD PTR [rbp-0x90]
  410294:	mov    esi,0x0
  410299:	mov    rdi,rax
  41029c:	call   404900 <_start@@Base+0x650>
  4102a1:	lea    rsi,[rip+0xf472]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  4102a8:	mov    rdi,rax
  4102ab:	call   404240 <strcmp@plt>
  4102b0:	test   eax,eax
  4102b2:	je     4102ca <verify_monster@@Base+0xcb9>
  4102b4:	lea    rdi,[rip+0xf465]        # 41f720 <_IO_stdin_used@@Base+0x1720>
  4102bb:	call   4041a0 <puts@plt>
  4102c0:	mov    eax,0xffffffff
  4102c5:	jmp    41072a <verify_monster@@Base+0x1119>
  4102ca:	mov    rax,QWORD PTR [rbp-0x90]
  4102d1:	mov    esi,0x1
  4102d6:	mov    rdi,rax
  4102d9:	call   404900 <_start@@Base+0x650>
  4102de:	mov    QWORD PTR [rbp-0x88],rax
  4102e5:	mov    rax,QWORD PTR [rbp-0x88]
  4102ec:	mov    rdi,rax
  4102ef:	call   4048a4 <_start@@Base+0x5f4>
  4102f4:	cmp    rax,0x2
  4102f8:	je     410315 <verify_monster@@Base+0xd04>
  4102fa:	lea    rdi,[rip+0xf436]        # 41f737 <_IO_stdin_used@@Base+0x1737>
  410301:	mov    eax,0x0
  410306:	call   4041d0 <printf@plt>
  41030b:	mov    eax,0xffffffff
  410310:	jmp    41072a <verify_monster@@Base+0x1119>
  410315:	mov    rax,QWORD PTR [rbp-0x88]
  41031c:	mov    edx,0x2
  410321:	lea    rsi,[rip+0xf429]        # 41f751 <_IO_stdin_used@@Base+0x1751>
  410328:	mov    rdi,rax
  41032b:	call   404230 <memcmp@plt>
  410330:	test   eax,eax
  410332:	je     41034a <verify_monster@@Base+0xd39>
  410334:	lea    rdi,[rip+0xf41d]        # 41f758 <_IO_stdin_used@@Base+0x1758>
  41033b:	call   4041a0 <puts@plt>
  410340:	mov    eax,0xffffffff
  410345:	jmp    41072a <verify_monster@@Base+0x1119>
  41034a:	mov    rax,QWORD PTR [rbp-0x90]
  410351:	mov    esi,0x2
  410356:	mov    rdi,rax
  410359:	call   404900 <_start@@Base+0x650>
  41035e:	lea    rsi,[rip+0xf413]        # 41f778 <_IO_stdin_used@@Base+0x1778>
  410365:	mov    rdi,rax
  410368:	call   404240 <strcmp@plt>
  41036d:	test   eax,eax
  41036f:	je     410387 <verify_monster@@Base+0xd76>
  410371:	lea    rdi,[rip+0xf407]        # 41f77f <_IO_stdin_used@@Base+0x177f>
  410378:	call   4041a0 <puts@plt>
  41037d:	mov    eax,0xffffffff
  410382:	jmp    41072a <verify_monster@@Base+0x1119>
  410387:	mov    rax,QWORD PTR [rbp-0xe0]
  41038e:	mov    rdi,rax
  410391:	call   407b40 <_start@@Base+0x3890>
  410396:	test   eax,eax
  410398:	jne    4103b0 <verify_monster@@Base+0xd9f>
  41039a:	lea    rdi,[rip+0xf3f5]        # 41f796 <_IO_stdin_used@@Base+0x1796>
  4103a1:	call   4041a0 <puts@plt>
  4103a6:	mov    eax,0xffffffff
  4103ab:	jmp    41072a <verify_monster@@Base+0x1119>
  4103b0:	mov    rax,QWORD PTR [rbp-0xe0]
  4103b7:	mov    rdi,rax
  4103ba:	call   407a6b <_start@@Base+0x37bb>
  4103bf:	mov    QWORD PTR [rbp-0x80],rax
  4103c3:	mov    rax,QWORD PTR [rbp-0x80]
  4103c7:	mov    rdi,rax
  4103ca:	call   404b4a <_start@@Base+0x89a>
  4103cf:	cmp    rax,0x4
  4103d3:	je     4103eb <verify_monster@@Base+0xdda>
  4103d5:	lea    rdi,[rip+0xf3d4]        # 41f7b0 <_IO_stdin_used@@Base+0x17b0>
  4103dc:	call   4041a0 <puts@plt>
  4103e1:	mov    eax,0xffffffff
  4103e6:	jmp    41072a <verify_monster@@Base+0x1119>
  4103eb:	mov    QWORD PTR [rbp-0xe8],0x0
  4103f6:	jmp    41044b <verify_monster@@Base+0xe3a>
  4103f8:	mov    rdx,QWORD PTR [rbp-0xe8]
  4103ff:	mov    rax,QWORD PTR [rbp-0x80]
  410403:	mov    rsi,rdx
  410406:	mov    rdi,rax
  410409:	call   404b64 <_start@@Base+0x8b4>
  41040e:	movzx  edx,al
  410411:	mov    rax,QWORD PTR [rbp-0xe8]
  410418:	mov    eax,DWORD PTR [rbp+rax*4-0x40]
  41041c:	cmp    edx,eax
  41041e:	je     410444 <verify_monster@@Base+0xe33>
  410420:	mov    rax,QWORD PTR [rbp-0xe8]
  410427:	mov    esi,eax
  410429:	lea    rdi,[rip+0xf3a0]        # 41f7d0 <_IO_stdin_used@@Base+0x17d0>
  410430:	mov    eax,0x0
  410435:	call   4041d0 <printf@plt>
  41043a:	mov    eax,0xffffffff
  41043f:	jmp    41072a <verify_monster@@Base+0x1119>
  410444:	inc    QWORD PTR [rbp-0xe8]
  41044b:	cmp    QWORD PTR [rbp-0xe8],0x3
  410453:	jbe    4103f8 <verify_monster@@Base+0xde7>
  410455:	mov    rax,QWORD PTR [rbp-0xe0]
  41045c:	mov    rdi,rax
  41045f:	call   407d65 <_start@@Base+0x3ab5>
  410464:	mov    BYTE PTR [rbp-0xe9],al
  41046a:	cmp    BYTE PTR [rbp-0xe9],0x1
  410471:	je     410489 <verify_monster@@Base+0xe78>
  410473:	lea    rdi,[rip+0xf376]        # 41f7f0 <_IO_stdin_used@@Base+0x17f0>
  41047a:	call   4041a0 <puts@plt>
  41047f:	mov    eax,0xffffffff
  410484:	jmp    41072a <verify_monster@@Base+0x1119>
  410489:	mov    rax,QWORD PTR [rbp-0xe0]
  410490:	mov    rdi,rax
  410493:	call   407e25 <_start@@Base+0x3b75>
  410498:	mov    QWORD PTR [rbp-0xa0],rax
  41049f:	mov    rax,QWORD PTR [rbp-0xa0]
  4104a6:	mov    rdi,rax
  4104a9:	call   406adb <_start@@Base+0x282b>
  4104ae:	lea    rsi,[rip+0xf0c2]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4104b5:	mov    rdi,rax
  4104b8:	call   404240 <strcmp@plt>
  4104bd:	test   eax,eax
  4104bf:	je     4104d7 <verify_monster@@Base+0xec6>
  4104c1:	lea    rdi,[rip+0xf358]        # 41f820 <_IO_stdin_used@@Base+0x1820>
  4104c8:	call   4041a0 <puts@plt>
  4104cd:	mov    eax,0xffffffff
  4104d2:	jmp    41072a <verify_monster@@Base+0x1119>
  4104d7:	mov    rax,QWORD PTR [rbp-0xe0]
  4104de:	mov    rdi,rax
  4104e1:	call   407bea <_start@@Base+0x393a>
  4104e6:	mov    QWORD PTR [rbp-0xa0],rax
  4104ed:	mov    rax,QWORD PTR [rbp-0xa0]
  4104f4:	mov    rdi,rax
  4104f7:	call   406adb <_start@@Base+0x282b>
  4104fc:	lea    rsi,[rip+0xf33d]        # 41f840 <_IO_stdin_used@@Base+0x1840>
  410503:	mov    rdi,rax
  410506:	call   404240 <strcmp@plt>
  41050b:	test   eax,eax
  41050d:	je     410525 <verify_monster@@Base+0xf14>
  41050f:	lea    rdi,[rip+0xf334]        # 41f84a <_IO_stdin_used@@Base+0x184a>
  410516:	call   4041a0 <puts@plt>
  41051b:	mov    eax,0xffffffff
  410520:	jmp    41072a <verify_monster@@Base+0x1119>
  410525:	mov    rax,QWORD PTR [rbp-0xa0]
  41052c:	mov    rdi,rax
  41052f:	call   407d65 <_start@@Base+0x3ab5>
  410534:	test   al,al
  410536:	je     41054e <verify_monster@@Base+0xf3d>
  410538:	lea    rdi,[rip+0xf329]        # 41f868 <_IO_stdin_used@@Base+0x1868>
  41053f:	call   4041a0 <puts@plt>
  410544:	mov    eax,0xffffffff
  410549:	jmp    41072a <verify_monster@@Base+0x1119>
  41054e:	mov    rax,QWORD PTR [rbp-0xe0]
  410555:	mov    rdi,rax
  410558:	call   407ef6 <_start@@Base+0x3c46>
  41055d:	mov    ecx,eax
  41055f:	mov    rax,rdx
  410562:	mov    DWORD PTR [rbp-0x70],ecx
  410565:	mov    QWORD PTR [rbp-0x68],rax
  410569:	movzx  eax,BYTE PTR [rbp-0x70]
  41056d:	cmp    BYTE PTR [rbp-0xe9],al
  410573:	je     41058b <verify_monster@@Base+0xf7a>
  410575:	lea    rdi,[rip+0xf314]        # 41f890 <_IO_stdin_used@@Base+0x1890>
  41057c:	call   4041a0 <puts@plt>
  410581:	mov    eax,0xffffffff
  410586:	jmp    41072a <verify_monster@@Base+0x1119>
  41058b:	mov    rbx,QWORD PTR [rbp-0x68]
  41058f:	mov    rax,QWORD PTR [rbp-0xe0]
  410596:	mov    rdi,rax
  410599:	call   407e25 <_start@@Base+0x3b75>
  41059e:	cmp    rbx,rax
  4105a1:	je     4105b9 <verify_monster@@Base+0xfa8>
  4105a3:	lea    rdi,[rip+0xf316]        # 41f8c0 <_IO_stdin_used@@Base+0x18c0>
  4105aa:	call   4041a0 <puts@plt>
  4105af:	mov    eax,0xffffffff
  4105b4:	jmp    41072a <verify_monster@@Base+0x1119>
  4105b9:	mov    rax,QWORD PTR [rbp-0xa0]
  4105c0:	mov    rdi,rax
  4105c3:	call   4078c1 <_start@@Base+0x3611>
  4105c8:	mov    QWORD PTR [rbp-0xa8],rax
  4105cf:	mov    rax,QWORD PTR [rbp-0xa8]
  4105d6:	mov    rdi,rax
  4105d9:	call   406352 <_start@@Base+0x20a2>
  4105de:	mov    QWORD PTR [rbp-0xe8],rax
  4105e5:	mov    rax,QWORD PTR [rbp-0xe8]
  4105ec:	lea    rdx,[rax-0x1]
  4105f0:	mov    rax,QWORD PTR [rbp-0xa8]
  4105f7:	mov    rsi,rdx
  4105fa:	mov    rdi,rax
  4105fd:	call   406380 <_start@@Base+0x20d0>
  410602:	mov    QWORD PTR [rbp-0xa0],rax
  410609:	mov    rax,QWORD PTR [rbp-0xa0]
  410610:	mov    rdi,rax
  410613:	call   407d65 <_start@@Base+0x3ab5>
  410618:	cmp    al,0x1
  41061a:	je     410632 <verify_monster@@Base+0x1021>
  41061c:	lea    rdi,[rip+0xf2bd]        # 41f8e0 <_IO_stdin_used@@Base+0x18e0>
  410623:	call   4041a0 <puts@plt>
  410628:	mov    eax,0xffffffff
  41062d:	jmp    41072a <verify_monster@@Base+0x1119>
  410632:	mov    rax,QWORD PTR [rbp-0xa0]
  410639:	mov    rdi,rax
  41063c:	call   407e25 <_start@@Base+0x3b75>
  410641:	mov    QWORD PTR [rbp-0xa0],rax
  410648:	mov    rax,QWORD PTR [rbp-0xa0]
  41064f:	mov    rdi,rax
  410652:	call   406adb <_start@@Base+0x282b>
  410657:	lea    rsi,[rip+0xef19]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  41065e:	mov    rdi,rax
  410661:	call   404240 <strcmp@plt>
  410666:	test   eax,eax
  410668:	je     410680 <verify_monster@@Base+0x106f>
  41066a:	lea    rdi,[rip+0xf2b7]        # 41f928 <_IO_stdin_used@@Base+0x1928>
  410671:	call   4041a0 <puts@plt>
  410676:	mov    eax,0xffffffff
  41067b:	jmp    41072a <verify_monster@@Base+0x1119>
  410680:	mov    rax,QWORD PTR [rbp-0xe0]
  410687:	mov    rdi,rax
  41068a:	call   4082df <_start@@Base+0x402f>
  41068f:	test   al,al
  410691:	je     4106a9 <verify_monster@@Base+0x1098>
  410693:	lea    rdi,[rip+0xf2c7]        # 41f961 <_IO_stdin_used@@Base+0x1961>
  41069a:	call   4041a0 <puts@plt>
  41069f:	mov    eax,0xffffffff
  4106a4:	jmp    41072a <verify_monster@@Base+0x1119>
  4106a9:	mov    rax,QWORD PTR [rbp-0xe0]
  4106b0:	mov    rdi,rax
  4106b3:	call   408235 <_start@@Base+0x3f85>
  4106b8:	test   eax,eax
  4106ba:	jne    4106cf <verify_monster@@Base+0x10be>
  4106bc:	lea    rdi,[rip+0xf2b2]        # 41f975 <_IO_stdin_used@@Base+0x1975>
  4106c3:	call   4041a0 <puts@plt>
  4106c8:	mov    eax,0xffffffff
  4106cd:	jmp    41072a <verify_monster@@Base+0x1119>
  4106cf:	mov    rax,QWORD PTR [rbp-0xe0]
  4106d6:	mov    rdi,rax
  4106d9:	call   408164 <_start@@Base+0x3eb4>
  4106de:	mov    QWORD PTR [rbp-0x78],rax
  4106e2:	mov    rax,QWORD PTR [rbp-0x78]
  4106e6:	mov    rdi,rax
  4106e9:	call   405dc5 <_start@@Base+0x1b15>
  4106ee:	test   eax,eax
  4106f0:	jne    410712 <verify_monster@@Base+0x1101>
  4106f2:	mov    rax,QWORD PTR [rbp-0x78]
  4106f6:	mov    rdi,rax
  4106f9:	call   405f2f <_start@@Base+0x1c7f>
  4106fe:	test   eax,eax
  410700:	jne    410712 <verify_monster@@Base+0x1101>
  410702:	mov    rax,QWORD PTR [rbp-0x78]
  410706:	mov    rdi,rax
  410709:	call   405fd9 <_start@@Base+0x1d29>
  41070e:	test   eax,eax
  410710:	je     410725 <verify_monster@@Base+0x1114>
  410712:	lea    rdi,[rip+0xf27a]        # 41f993 <_IO_stdin_used@@Base+0x1993>
  410719:	call   4041a0 <puts@plt>
  41071e:	mov    eax,0xffffffff
  410723:	jmp    41072a <verify_monster@@Base+0x1119>
  410725:	mov    eax,0x0
  41072a:	mov    rcx,QWORD PTR [rbp-0x18]
  41072e:	xor    rcx,QWORD PTR fs:0x28
  410737:	je     41073e <verify_monster@@Base+0x112d>
  410739:	call   4041c0 <__stack_chk_fail@plt>
  41073e:	add    rsp,0xf8
  410745:	pop    rbx
  410746:	pop    rbp
  410747:	ret    

0000000000410748 <gen_monster@@Base>:
  410748:	endbr64 
  41074c:	push   rbp
  41074d:	mov    rbp,rsp
  410750:	sub    rsp,0x70
  410754:	mov    QWORD PTR [rbp-0x68],rdi
  410758:	mov    DWORD PTR [rbp-0x6c],esi
  41075b:	mov    rax,QWORD PTR fs:0x28
  410764:	mov    QWORD PTR [rbp-0x8],rax
  410768:	xor    eax,eax
  41076a:	mov    BYTE PTR [rbp-0x12],0x0
  41076e:	mov    BYTE PTR [rbp-0x11],0x1
  410772:	mov    BYTE PTR [rbp-0x10],0x2
  410776:	mov    BYTE PTR [rbp-0xf],0x3
  41077a:	mov    BYTE PTR [rbp-0xe],0x4
  41077e:	mov    BYTE PTR [rbp-0xd],0x5
  410782:	mov    BYTE PTR [rbp-0xc],0x6
  410786:	mov    BYTE PTR [rbp-0xb],0x7
  41078a:	mov    BYTE PTR [rbp-0xa],0x8
  41078e:	mov    BYTE PTR [rbp-0x9],0x9
  410792:	mov    BYTE PTR [rbp-0x16],0x0
  410796:	mov    BYTE PTR [rbp-0x15],0x1
  41079a:	mov    BYTE PTR [rbp-0x14],0x1
  41079e:	mov    BYTE PTR [rbp-0x13],0x0
  4107a2:	mov    rax,QWORD PTR [rbp-0x68]
  4107a6:	mov    rdi,rax
  4107a9:	call   416246 <flatcc_builder_reset@@Base>
  4107ae:	cmp    DWORD PTR [rbp-0x6c],0x0
  4107b2:	je     4107c2 <gen_monster@@Base+0x7a>
  4107b4:	mov    rax,QWORD PTR [rbp-0x68]
  4107b8:	mov    rdi,rax
  4107bb:	call   40c1a3 <_start@@Base+0x7ef3>
  4107c0:	jmp    4107ce <gen_monster@@Base+0x86>
  4107c2:	mov    rax,QWORD PTR [rbp-0x68]
  4107c6:	mov    rdi,rax
  4107c9:	call   40c16b <_start@@Base+0x7ebb>
  4107ce:	mov    rax,QWORD PTR [rbp-0x68]
  4107d2:	mov    esi,0x50
  4107d7:	mov    rdi,rax
  4107da:	call   40b0b0 <_start@@Base+0x6e00>
  4107df:	mov    rax,QWORD PTR [rbp-0x68]
  4107e3:	mov    rdi,rax
  4107e6:	call   40b035 <_start@@Base+0x6d85>
  4107eb:	mov    QWORD PTR [rbp-0x48],rax
  4107ef:	mov    rax,QWORD PTR [rbp-0x48]
  4107f3:	vmovss xmm0,DWORD PTR [rip+0x11a0d]        # 422208 <_IO_stdin_used@@Base+0x4208>
  4107fb:	vmovss DWORD PTR [rax],xmm0
  4107ff:	mov    rax,QWORD PTR [rbp-0x48]
  410803:	vmovss xmm0,DWORD PTR [rip+0x11a01]        # 42220c <_IO_stdin_used@@Base+0x420c>
  41080b:	vmovss DWORD PTR [rax+0x4],xmm0
  410810:	mov    rax,QWORD PTR [rbp-0x48]
  410814:	vmovss xmm0,DWORD PTR [rip+0x119e8]        # 422204 <_IO_stdin_used@@Base+0x4204>
  41081c:	vmovss DWORD PTR [rax+0x8],xmm0
  410821:	mov    rax,QWORD PTR [rbp-0x68]
  410825:	mov    rdi,rax
  410828:	call   40b05e <_start@@Base+0x6dae>
  41082d:	mov    rax,QWORD PTR [rbp-0x68]
  410831:	lea    rsi,[rip+0xe3b7]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  410838:	mov    rdi,rax
  41083b:	call   40b2b9 <_start@@Base+0x7009>
  410840:	mov    rax,QWORD PTR [rbp-0x68]
  410844:	mov    esi,0x2
  410849:	mov    rdi,rax
  41084c:	call   40b49f <_start@@Base+0x71ef>
  410851:	lea    rcx,[rbp-0x12]
  410855:	mov    rax,QWORD PTR [rbp-0x68]
  410859:	mov    edx,0xa
  41085e:	mov    rsi,rcx
  410861:	mov    rdi,rax
  410864:	call   40b5a2 <_start@@Base+0x72f2>
  410869:	mov    rax,QWORD PTR [rbp-0x68]
  41086d:	mov    rdi,rax
  410870:	call   40bcf7 <_start@@Base+0x7a47>
  410875:	mov    rax,QWORD PTR [rbp-0x68]
  410879:	mov    esi,0x1
  41087e:	mov    rdi,rax
  410881:	call   40bdb2 <_start@@Base+0x7b02>
  410886:	mov    QWORD PTR [rbp-0x40],rax
  41088a:	mov    rax,QWORD PTR [rbp-0x40]
  41088e:	mov    WORD PTR [rax],0x10
  410893:	mov    rax,QWORD PTR [rbp-0x40]
  410897:	mov    BYTE PTR [rax+0x2],0x20
  41089b:	mov    rax,QWORD PTR [rbp-0x68]
  41089f:	mov    esi,0x2
  4108a4:	mov    rdi,rax
  4108a7:	call   40bdb2 <_start@@Base+0x7b02>
  4108ac:	mov    QWORD PTR [rbp-0x40],rax
  4108b0:	mov    rax,QWORD PTR [rbp-0x40]
  4108b4:	mov    WORD PTR [rax],0x30
  4108b9:	mov    rax,QWORD PTR [rbp-0x40]
  4108bd:	mov    BYTE PTR [rax+0x2],0x40
  4108c1:	mov    rax,QWORD PTR [rbp-0x40]
  4108c5:	add    rax,0x4
  4108c9:	mov    WORD PTR [rax],0x50
  4108ce:	mov    rax,QWORD PTR [rbp-0x40]
  4108d2:	add    rax,0x4
  4108d6:	mov    BYTE PTR [rax+0x2],0x60
  4108da:	mov    rax,QWORD PTR [rbp-0x68]
  4108de:	mov    edx,0xffffff80
  4108e3:	mov    esi,0x70
  4108e8:	mov    rdi,rax
  4108eb:	call   40be89 <_start@@Base+0x7bd9>
  4108f0:	mov    WORD PTR [rbp-0x4c],0x190
  4108f6:	mov    BYTE PTR [rbp-0x4a],0x91
  4108fa:	lea    rdx,[rbp-0x4c]
  4108fe:	mov    rax,QWORD PTR [rbp-0x68]
  410902:	mov    rsi,rdx
  410905:	mov    rdi,rax
  410908:	call   40be30 <_start@@Base+0x7b80>
  41090d:	lea    rdx,[rbp-0x4c]
  410911:	mov    rax,QWORD PTR [rbp-0x68]
  410915:	mov    rsi,rdx
  410918:	mov    rdi,rax
  41091b:	call   40be30 <_start@@Base+0x7b80>
  410920:	lea    rdx,[rbp-0x4c]
  410924:	mov    rax,QWORD PTR [rbp-0x68]
  410928:	mov    rsi,rdx
  41092b:	mov    rdi,rax
  41092e:	call   40a00c <_start@@Base+0x5d5c>
  410933:	mov    rax,QWORD PTR [rbp-0x68]
  410937:	mov    rdi,rax
  41093a:	call   40be16 <_start@@Base+0x7b66>
  41093f:	cmp    rax,0x7
  410943:	je     410964 <gen_monster@@Base+0x21c>
  410945:	lea    rcx,[rip+0x111dc]        # 421b28 <_IO_stdin_used@@Base+0x3b28>
  41094c:	mov    edx,0x371
  410951:	lea    rsi,[rip+0xebb0]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  410958:	lea    rdi,[rip+0xf051]        # 41f9b0 <_IO_stdin_used@@Base+0x19b0>
  41095f:	call   4041f0 <__assert_fail@plt>
  410964:	mov    rax,QWORD PTR [rbp-0x68]
  410968:	mov    esi,0x2
  41096d:	mov    rdi,rax
  410970:	call   40bdd7 <_start@@Base+0x7b27>
  410975:	mov    rax,QWORD PTR [rbp-0x68]
  410979:	mov    rdi,rax
  41097c:	call   40be16 <_start@@Base+0x7b66>
  410981:	cmp    rax,0x5
  410985:	je     4109a6 <gen_monster@@Base+0x25e>
  410987:	lea    rcx,[rip+0x1119a]        # 421b28 <_IO_stdin_used@@Base+0x3b28>
  41098e:	mov    edx,0x373
  410993:	lea    rsi,[rip+0xeb6e]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41099a:	lea    rdi,[rip+0xf037]        # 41f9d8 <_IO_stdin_used@@Base+0x19d8>
  4109a1:	call   4041f0 <__assert_fail@plt>
  4109a6:	mov    rax,QWORD PTR [rbp-0x68]
  4109aa:	mov    rdi,rax
  4109ad:	call   40bdfc <_start@@Base+0x7b4c>
  4109b2:	mov    QWORD PTR [rbp-0x40],rax
  4109b6:	mov    rax,QWORD PTR [rbp-0x40]
  4109ba:	add    rax,0x10
  4109be:	movzx  eax,WORD PTR [rax]
  4109c1:	inc    eax
  4109c3:	mov    rdx,QWORD PTR [rbp-0x40]
  4109c7:	add    rdx,0x10
  4109cb:	mov    WORD PTR [rdx],ax
  4109ce:	mov    rax,QWORD PTR [rbp-0x68]
  4109d2:	mov    rdi,rax
  4109d5:	call   40bd11 <_start@@Base+0x7a61>
  4109da:	mov    rax,QWORD PTR [rbp-0x68]
  4109de:	mov    rdi,rax
  4109e1:	call   40a758 <_start@@Base+0x64a8>
  4109e6:	mov    rax,QWORD PTR [rbp-0x68]
  4109ea:	mov    edx,0x7
  4109ef:	lea    rsi,[rip+0xeb81]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4109f6:	mov    rdi,rax
  4109f9:	call   409c8d <_start@@Base+0x59dd>
  4109fe:	mov    DWORD PTR [rbp-0x58],eax
  410a01:	mov    edx,DWORD PTR [rbp-0x58]
  410a04:	mov    rax,QWORD PTR [rbp-0x68]
  410a08:	mov    esi,edx
  410a0a:	mov    rdi,rax
  410a0d:	call   40b22d <_start@@Base+0x6f7d>
  410a12:	mov    rax,QWORD PTR [rbp-0x68]
  410a16:	mov    rdi,rax
  410a19:	call   40a777 <_start@@Base+0x64c7>
  410a1e:	mov    DWORD PTR [rbp-0x54],eax
  410a21:	mov    rax,QWORD PTR [rbp-0x68]
  410a25:	mov    rdi,rax
  410a28:	call   40b627 <_start@@Base+0x7377>
  410a2d:	mov    rax,QWORD PTR [rbp-0x68]
  410a31:	mov    esi,0x2
  410a36:	mov    rdi,rax
  410a39:	call   40b66b <_start@@Base+0x73bb>
  410a3e:	mov    QWORD PTR [rbp-0x38],rax
  410a42:	mov    rax,QWORD PTR [rbp-0x38]
  410a46:	mov    edx,DWORD PTR [rbp-0x54]
  410a49:	mov    DWORD PTR [rax],edx
  410a4b:	mov    rax,QWORD PTR [rbp-0x38]
  410a4f:	lea    rdx,[rax+0x4]
  410a53:	mov    eax,DWORD PTR [rbp-0x54]
  410a56:	mov    DWORD PTR [rdx],eax
  410a58:	mov    rax,QWORD PTR [rbp-0x68]
  410a5c:	mov    rdi,rax
  410a5f:	call   40b745 <_start@@Base+0x7495>
  410a64:	mov    rax,QWORD PTR [rbp-0x68]
  410a68:	mov    edx,0x1e
  410a6d:	lea    rsi,[rip+0xeb7e]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  410a74:	mov    rdi,rax
  410a77:	call   40b2ee <_start@@Base+0x703e>
  410a7c:	mov    rax,QWORD PTR [rbp-0x68]
  410a80:	mov    rdi,rax
  410a83:	call   40b75f <_start@@Base+0x74af>
  410a88:	mov    eax,DWORD PTR [rax]
  410a8a:	mov    DWORD PTR [rbp-0x50],eax
  410a8d:	mov    rax,QWORD PTR [rbp-0x68]
  410a91:	mov    esi,0x3
  410a96:	mov    rdi,rax
  410a99:	call   40b66b <_start@@Base+0x73bb>
  410a9e:	mov    QWORD PTR [rbp-0x38],rax
  410aa2:	mov    rax,QWORD PTR [rbp-0x38]
  410aa6:	mov    edx,DWORD PTR [rbp-0x54]
  410aa9:	mov    DWORD PTR [rax],edx
  410aab:	mov    rax,QWORD PTR [rbp-0x38]
  410aaf:	lea    rdx,[rax+0x4]
  410ab3:	mov    eax,DWORD PTR [rbp-0x50]
  410ab6:	mov    DWORD PTR [rdx],eax
  410ab8:	mov    rax,QWORD PTR [rbp-0x68]
  410abc:	mov    esi,0x1
  410ac1:	mov    rdi,rax
  410ac4:	call   40b6bd <_start@@Base+0x740d>
  410ac9:	mov    rax,QWORD PTR [rbp-0x68]
  410acd:	mov    rdi,rax
  410ad0:	call   40b6fc <_start@@Base+0x744c>
  410ad5:	cmp    rax,0x5
  410ad9:	je     410afa <gen_monster@@Base+0x3b2>
  410adb:	lea    rcx,[rip+0x11046]        # 421b28 <_IO_stdin_used@@Base+0x3b28>
  410ae2:	mov    edx,0x39b
  410ae7:	lea    rsi,[rip+0xea1a]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  410aee:	lea    rdi,[rip+0xef0b]        # 41fa00 <_IO_stdin_used@@Base+0x1a00>
  410af5:	call   4041f0 <__assert_fail@plt>
  410afa:	mov    rax,QWORD PTR [rbp-0x68]
  410afe:	mov    rdi,rax
  410b01:	call   40b745 <_start@@Base+0x7495>
  410b06:	mov    rax,QWORD PTR [rbp-0x68]
  410b0a:	mov    edx,0x8
  410b0f:	lea    rsi,[rip+0xef1d]        # 41fa33 <_IO_stdin_used@@Base+0x1a33>
  410b16:	mov    rdi,rax
  410b19:	call   40b2ee <_start@@Base+0x703e>
  410b1e:	mov    rax,QWORD PTR [rbp-0x68]
  410b22:	mov    rdi,rax
  410b25:	call   40b75f <_start@@Base+0x74af>
  410b2a:	mov    eax,DWORD PTR [rax]
  410b2c:	mov    DWORD PTR [rbp-0x2c],eax
  410b2f:	mov    rax,QWORD PTR [rbp-0x68]
  410b33:	mov    rdi,rax
  410b36:	call   40b6fc <_start@@Base+0x744c>
  410b3b:	cmp    rax,0x6
  410b3f:	je     410b60 <gen_monster@@Base+0x418>
  410b41:	lea    rcx,[rip+0x10fe0]        # 421b28 <_IO_stdin_used@@Base+0x3b28>
  410b48:	mov    edx,0x3a1
  410b4d:	lea    rsi,[rip+0xe9b4]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  410b54:	lea    rdi,[rip+0xeef5]        # 41fa50 <_IO_stdin_used@@Base+0x1a50>
  410b5b:	call   4041f0 <__assert_fail@plt>
  410b60:	mov    rax,QWORD PTR [rbp-0x68]
  410b64:	mov    rdi,rax
  410b67:	call   40b6e2 <_start@@Base+0x7432>
  410b6c:	mov    QWORD PTR [rbp-0x38],rax
  410b70:	mov    rax,QWORD PTR [rbp-0x38]
  410b74:	mov    eax,DWORD PTR [rax+0x14]
  410b77:	mov    DWORD PTR [rbp-0x50],eax
  410b7a:	mov    rax,QWORD PTR [rbp-0x38]
  410b7e:	mov    eax,DWORD PTR [rax+0x8]
  410b81:	mov    DWORD PTR [rbp-0x28],eax
  410b84:	mov    rax,QWORD PTR [rbp-0x38]
  410b88:	lea    rdx,[rax+0x14]
  410b8c:	mov    eax,DWORD PTR [rbp-0x54]
  410b8f:	mov    DWORD PTR [rdx],eax
  410b91:	mov    rax,QWORD PTR [rbp-0x38]
  410b95:	mov    edx,DWORD PTR [rbp-0x50]
  410b98:	mov    DWORD PTR [rax],edx
  410b9a:	lea    rcx,[rbp-0x2c]
  410b9e:	mov    rax,QWORD PTR [rbp-0x68]
  410ba2:	mov    edx,0x2
  410ba7:	mov    rsi,rcx
  410baa:	mov    rdi,rax
  410bad:	call   40b690 <_start@@Base+0x73e0>
  410bb2:	mov    rax,QWORD PTR [rbp-0x68]
  410bb6:	mov    rdi,rax
  410bb9:	call   40b641 <_start@@Base+0x7391>
  410bbe:	mov    rax,QWORD PTR [rbp-0x68]
  410bc2:	lea    rsi,[rip+0xeb51]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  410bc9:	mov    rdi,rax
  410bcc:	call   409cba <_start@@Base+0x5a0a>
  410bd1:	mov    DWORD PTR [rbp-0x24],eax
  410bd4:	mov    rax,QWORD PTR [rbp-0x68]
  410bd8:	mov    edx,0x2
  410bdd:	lea    rsi,[rip+0xeb6d]        # 41f751 <_IO_stdin_used@@Base+0x1751>
  410be4:	mov    rdi,rax
  410be7:	call   409c8d <_start@@Base+0x59dd>
  410bec:	mov    DWORD PTR [rbp-0x20],eax
  410bef:	mov    rax,QWORD PTR [rbp-0x68]
  410bf3:	lea    rsi,[rip+0xeb7e]        # 41f778 <_IO_stdin_used@@Base+0x1778>
  410bfa:	mov    rdi,rax
  410bfd:	call   409cba <_start@@Base+0x5a0a>
  410c02:	mov    DWORD PTR [rbp-0x1c],eax
  410c05:	lea    rcx,[rbp-0x24]
  410c09:	mov    rax,QWORD PTR [rbp-0x68]
  410c0d:	mov    edx,0x3
  410c12:	mov    rsi,rcx
  410c15:	mov    rdi,rax
  410c18:	call   40b815 <_start@@Base+0x7565>
  410c1d:	mov    rax,QWORD PTR [rbp-0x68]
  410c21:	mov    rdi,rax
  410c24:	call   40b911 <_start@@Base+0x7661>
  410c29:	lea    rcx,[rbp-0x16]
  410c2d:	mov    rax,QWORD PTR [rbp-0x68]
  410c31:	mov    edx,0x1
  410c36:	mov    rsi,rcx
  410c39:	mov    rdi,rax
  410c3c:	call   40ba09 <_start@@Base+0x7759>
  410c41:	lea    rax,[rbp-0x16]
  410c45:	inc    rax
  410c48:	mov    rcx,QWORD PTR [rbp-0x68]
  410c4c:	mov    edx,0x3
  410c51:	mov    rsi,rax
  410c54:	mov    rdi,rcx
  410c57:	call   40ba09 <_start@@Base+0x7759>
  410c5c:	mov    rax,QWORD PTR [rbp-0x68]
  410c60:	mov    rdi,rax
  410c63:	call   40b92b <_start@@Base+0x767b>
  410c68:	mov    eax,DWORD PTR [rbp-0x54]
  410c6b:	mov    edi,eax
  410c6d:	call   40a957 <_start@@Base+0x66a7>
  410c72:	mov    rdx,rax
  410c75:	mov    rax,QWORD PTR [rbp-0x68]
  410c79:	mov    rsi,rdx
  410c7c:	mov    rdi,rax
  410c7f:	call   40bac2 <_start@@Base+0x7812>
  410c84:	mov    rax,QWORD PTR [rbp-0x68]
  410c88:	mov    rdi,rax
  410c8b:	call   40ba7e <_start@@Base+0x77ce>
  410c90:	mov    rax,QWORD PTR [rbp-0x68]
  410c94:	lea    rsi,[rip+0xeba5]        # 41f840 <_IO_stdin_used@@Base+0x1840>
  410c9b:	mov    rdi,rax
  410c9e:	call   40b2b9 <_start@@Base+0x7009>
  410ca3:	mov    rax,QWORD PTR [rbp-0x68]
  410ca7:	mov    rdi,rax
  410caa:	call   40b627 <_start@@Base+0x7377>
  410caf:	mov    rax,QWORD PTR [rbp-0x68]
  410cb3:	mov    rdi,rax
  410cb6:	call   40c127 <_start@@Base+0x7e77>
  410cbb:	mov    eax,DWORD PTR [rbp-0x54]
  410cbe:	mov    edi,eax
  410cc0:	call   40a957 <_start@@Base+0x66a7>
  410cc5:	mov    rdx,rax
  410cc8:	mov    rax,QWORD PTR [rbp-0x68]
  410ccc:	mov    rsi,rdx
  410ccf:	mov    rdi,rax
  410cd2:	call   40bac2 <_start@@Base+0x7812>
  410cd7:	mov    rax,QWORD PTR [rbp-0x68]
  410cdb:	lea    rsi,[rip+0xeda1]        # 41fa83 <_IO_stdin_used@@Base+0x1a83>
  410ce2:	mov    rdi,rax
  410ce5:	call   40b2b9 <_start@@Base+0x7009>
  410cea:	mov    rax,QWORD PTR [rbp-0x68]
  410cee:	mov    rdi,rax
  410cf1:	call   40b75f <_start@@Base+0x74af>
  410cf6:	mov    rax,QWORD PTR [rbp-0x68]
  410cfa:	mov    rdi,rax
  410cfd:	call   40b745 <_start@@Base+0x7495>
  410d02:	mov    edx,DWORD PTR [rbp-0x54]
  410d05:	mov    rax,QWORD PTR [rbp-0x68]
  410d09:	mov    esi,edx
  410d0b:	mov    rdi,rax
  410d0e:	call   40bc00 <_start@@Base+0x7950>
  410d13:	mov    rax,QWORD PTR [rbp-0x68]
  410d17:	lea    rsi,[rip+0xed65]        # 41fa83 <_IO_stdin_used@@Base+0x1a83>
  410d1e:	mov    rdi,rax
  410d21:	call   40b2b9 <_start@@Base+0x7009>
  410d26:	mov    rax,QWORD PTR [rbp-0x68]
  410d2a:	mov    rdi,rax
  410d2d:	call   40c141 <_start@@Base+0x7e91>
  410d32:	mov    rax,QWORD PTR [rbp-0x68]
  410d36:	mov    rdi,rax
  410d39:	call   40b745 <_start@@Base+0x7495>
  410d3e:	mov    eax,DWORD PTR [rbp-0x54]
  410d41:	mov    edi,eax
  410d43:	call   40a957 <_start@@Base+0x66a7>
  410d48:	mov    rdx,rax
  410d4b:	mov    rax,QWORD PTR [rbp-0x68]
  410d4f:	mov    rsi,rdx
  410d52:	mov    rdi,rax
  410d55:	call   40bbae <_start@@Base+0x78fe>
  410d5a:	mov    rax,QWORD PTR [rbp-0x68]
  410d5e:	lea    rsi,[rip+0xed1e]        # 41fa83 <_IO_stdin_used@@Base+0x1a83>
  410d65:	mov    rdi,rax
  410d68:	call   40b2b9 <_start@@Base+0x7009>
  410d6d:	mov    rax,QWORD PTR [rbp-0x68]
  410d71:	mov    esi,0x1
  410d76:	mov    rdi,rax
  410d79:	call   40bb52 <_start@@Base+0x78a2>
  410d7e:	mov    rax,QWORD PTR [rbp-0x68]
  410d82:	mov    rdi,rax
  410d85:	call   40b75f <_start@@Base+0x74af>
  410d8a:	mov    rax,QWORD PTR [rbp-0x68]
  410d8e:	mov    rdi,rax
  410d91:	call   40b641 <_start@@Base+0x7391>
  410d96:	mov    rax,QWORD PTR [rbp-0x68]
  410d9a:	mov    rdi,rax
  410d9d:	call   40ba98 <_start@@Base+0x77e8>
  410da2:	mov    rax,QWORD PTR [rbp-0x68]
  410da6:	mov    esi,0x0
  410dab:	mov    rdi,rax
  410dae:	call   40c0c3 <_start@@Base+0x7e13>
  410db3:	mov    rax,QWORD PTR [rbp-0x68]
  410db7:	mov    rdi,rax
  410dba:	call   40c03d <_start@@Base+0x7d8d>
  410dbf:	mov    rax,QWORD PTR [rbp-0x68]
  410dc3:	mov    rdi,rax
  410dc6:	call   40c057 <_start@@Base+0x7da7>
  410dcb:	mov    rax,QWORD PTR [rbp-0x68]
  410dcf:	mov    rdi,rax
  410dd2:	call   40c1db <_start@@Base+0x7f2b>
  410dd7:	mov    eax,0x0
  410ddc:	mov    rcx,QWORD PTR [rbp-0x8]
  410de0:	xor    rcx,QWORD PTR fs:0x28
  410de9:	je     410df0 <gen_monster@@Base+0x6a8>
  410deb:	call   4041c0 <__stack_chk_fail@plt>
  410df0:	leave  
  410df1:	ret    

0000000000410df2 <test_monster@@Base>:
  410df2:	endbr64 
  410df6:	push   rbp
  410df7:	mov    rbp,rsp
  410dfa:	sub    rsp,0x30
  410dfe:	mov    QWORD PTR [rbp-0x28],rdi
  410e02:	mov    rax,QWORD PTR fs:0x28
  410e0b:	mov    QWORD PTR [rbp-0x8],rax
  410e0f:	xor    eax,eax
  410e11:	mov    rax,QWORD PTR [rbp-0x28]
  410e15:	mov    esi,0x0
  410e1a:	mov    rdi,rax
  410e1d:	call   410748 <gen_monster@@Base>
  410e22:	lea    rdx,[rbp-0x18]
  410e26:	mov    rax,QWORD PTR [rbp-0x28]
  410e2a:	mov    rsi,rdx
  410e2d:	mov    rdi,rax
  410e30:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  410e35:	mov    QWORD PTR [rbp-0x10],rax
  410e39:	mov    rax,QWORD PTR [rip+0x1b1b8]        # 42bff8 <stderr@GLIBC_2.2.5>
  410e40:	mov    rcx,QWORD PTR [rax]
  410e43:	mov    rdx,QWORD PTR [rbp-0x18]
  410e47:	mov    rax,QWORD PTR [rbp-0x10]
  410e4b:	mov    rsi,rax
  410e4e:	lea    rdi,[rip+0xec37]        # 41fa8c <_IO_stdin_used@@Base+0x1a8c>
  410e55:	call   40e441 <_start@@Base+0xa191>
  410e5a:	mov    rdx,QWORD PTR [rbp-0x18]
  410e5e:	mov    rax,QWORD PTR [rbp-0x10]
  410e62:	mov    rsi,rdx
  410e65:	mov    rdi,rax
  410e68:	call   40dfb7 <_start@@Base+0x9d07>
  410e6d:	mov    DWORD PTR [rbp-0x1c],eax
  410e70:	cmp    DWORD PTR [rbp-0x1c],0x0
  410e74:	je     410e9b <test_monster@@Base+0xa9>
  410e76:	mov    eax,DWORD PTR [rbp-0x1c]
  410e79:	mov    edi,eax
  410e7b:	call   41b868 <flatcc_verify_error_string@@Base>
  410e80:	mov    rsi,rax
  410e83:	lea    rdi,[rip+0xec16]        # 41faa0 <_IO_stdin_used@@Base+0x1aa0>
  410e8a:	mov    eax,0x0
  410e8f:	call   4041d0 <printf@plt>
  410e94:	mov    eax,0xffffffff
  410e99:	jmp    410eb9 <test_monster@@Base+0xc7>
  410e9b:	mov    rax,QWORD PTR [rbp-0x10]
  410e9f:	mov    rdi,rax
  410ea2:	call   40f611 <verify_monster@@Base>
  410ea7:	mov    DWORD PTR [rbp-0x1c],eax
  410eaa:	mov    rax,QWORD PTR [rbp-0x10]
  410eae:	mov    rdi,rax
  410eb1:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  410eb6:	mov    eax,DWORD PTR [rbp-0x1c]
  410eb9:	mov    rcx,QWORD PTR [rbp-0x8]
  410ebd:	xor    rcx,QWORD PTR fs:0x28
  410ec6:	je     410ecd <test_monster@@Base+0xdb>
  410ec8:	call   4041c0 <__stack_chk_fail@plt>
  410ecd:	leave  
  410ece:	ret    

0000000000410ecf <test_monster_with_size@@Base>:
  410ecf:	endbr64 
  410ed3:	push   rbp
  410ed4:	mov    rbp,rsp
  410ed7:	sub    rsp,0x50
  410edb:	mov    QWORD PTR [rbp-0x48],rdi
  410edf:	mov    rax,QWORD PTR fs:0x28
  410ee8:	mov    QWORD PTR [rbp-0x8],rax
  410eec:	xor    eax,eax
  410eee:	mov    rax,QWORD PTR [rbp-0x48]
  410ef2:	mov    esi,0x1
  410ef7:	mov    rdi,rax
  410efa:	call   410748 <gen_monster@@Base>
  410eff:	lea    rdx,[rbp-0x30]
  410f03:	mov    rax,QWORD PTR [rbp-0x48]
  410f07:	mov    rsi,rdx
  410f0a:	mov    rdi,rax
  410f0d:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  410f12:	mov    QWORD PTR [rbp-0x20],rax
  410f16:	mov    rax,QWORD PTR [rip+0x1b0db]        # 42bff8 <stderr@GLIBC_2.2.5>
  410f1d:	mov    rcx,QWORD PTR [rax]
  410f20:	mov    rdx,QWORD PTR [rbp-0x30]
  410f24:	mov    rax,QWORD PTR [rbp-0x20]
  410f28:	mov    rsi,rax
  410f2b:	lea    rdi,[rip+0xeb98]        # 41faca <_IO_stdin_used@@Base+0x1aca>
  410f32:	call   40e441 <_start@@Base+0xa191>
  410f37:	mov    rax,QWORD PTR [rbp-0x20]
  410f3b:	and    eax,0xf
  410f3e:	test   rax,rax
  410f41:	je     410f75 <test_monster_with_size@@Base+0xa6>
  410f43:	lea    rdi,[rip+0xeb9e]        # 41fae8 <_IO_stdin_used@@Base+0x1ae8>
  410f4a:	mov    eax,0x0
  410f4f:	call   4041d0 <printf@plt>
  410f54:	mov    rax,QWORD PTR [rbp-0x20]
  410f58:	mov    esi,eax
  410f5a:	lea    rdi,[rip+0xebd8]        # 41fb39 <_IO_stdin_used@@Base+0x1b39>
  410f61:	mov    eax,0x0
  410f66:	call   4041d0 <printf@plt>
  410f6b:	mov    eax,0xffffffff
  410f70:	jmp    411025 <test_monster_with_size@@Base+0x156>
  410f75:	lea    rdx,[rbp-0x28]
  410f79:	mov    rax,QWORD PTR [rbp-0x20]
  410f7d:	mov    rsi,rdx
  410f80:	mov    rdi,rax
  410f83:	call   405637 <_start@@Base+0x1387>
  410f88:	mov    QWORD PTR [rbp-0x18],rax
  410f8c:	mov    rax,QWORD PTR [rbp-0x30]
  410f90:	sub    rax,0x4
  410f94:	mov    QWORD PTR [rbp-0x10],rax
  410f98:	mov    rax,QWORD PTR [rbp-0x28]
  410f9c:	cmp    QWORD PTR [rbp-0x10],rax
  410fa0:	je     410fc6 <test_monster_with_size@@Base+0xf7>
  410fa2:	mov    rax,QWORD PTR [rbp-0x10]
  410fa6:	mov    edx,eax
  410fa8:	mov    rax,QWORD PTR [rbp-0x28]
  410fac:	mov    esi,eax
  410fae:	lea    rdi,[rip+0xeb9b]        # 41fb50 <_IO_stdin_used@@Base+0x1b50>
  410fb5:	mov    eax,0x0
  410fba:	call   4041d0 <printf@plt>
  410fbf:	mov    eax,0xffffffff
  410fc4:	jmp    411025 <test_monster_with_size@@Base+0x156>
  410fc6:	mov    rdx,QWORD PTR [rbp-0x28]
  410fca:	mov    rax,QWORD PTR [rbp-0x18]
  410fce:	mov    rsi,rdx
  410fd1:	mov    rdi,rax
  410fd4:	call   40dfb7 <_start@@Base+0x9d07>
  410fd9:	mov    DWORD PTR [rbp-0x34],eax
  410fdc:	cmp    DWORD PTR [rbp-0x34],0x0
  410fe0:	je     411007 <test_monster_with_size@@Base+0x138>
  410fe2:	mov    eax,DWORD PTR [rbp-0x34]
  410fe5:	mov    edi,eax
  410fe7:	call   41b868 <flatcc_verify_error_string@@Base>
  410fec:	mov    rsi,rax
  410fef:	lea    rdi,[rip+0xeb92]        # 41fb88 <_IO_stdin_used@@Base+0x1b88>
  410ff6:	mov    eax,0x0
  410ffb:	call   4041d0 <printf@plt>
  411000:	mov    eax,0xffffffff
  411005:	jmp    411025 <test_monster_with_size@@Base+0x156>
  411007:	mov    rax,QWORD PTR [rbp-0x18]
  41100b:	mov    rdi,rax
  41100e:	call   40f611 <verify_monster@@Base>
  411013:	mov    DWORD PTR [rbp-0x34],eax
  411016:	mov    rax,QWORD PTR [rbp-0x20]
  41101a:	mov    rdi,rax
  41101d:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  411022:	mov    eax,DWORD PTR [rbp-0x34]
  411025:	mov    rcx,QWORD PTR [rbp-0x8]
  411029:	xor    rcx,QWORD PTR fs:0x28
  411032:	je     411039 <test_monster_with_size@@Base+0x16a>
  411034:	call   4041c0 <__stack_chk_fail@plt>
  411039:	leave  
  41103a:	ret    

000000000041103b <test_string@@Base>:
  41103b:	endbr64 
  41103f:	push   rbp
  411040:	mov    rbp,rsp
  411043:	sub    rsp,0x30
  411047:	mov    QWORD PTR [rbp-0x28],rdi
  41104b:	mov    rax,QWORD PTR [rbp-0x28]
  41104f:	mov    rdi,rax
  411052:	call   416246 <flatcc_builder_reset@@Base>
  411057:	mov    rax,QWORD PTR [rbp-0x28]
  41105b:	mov    rdi,rax
  41105e:	call   40c16b <_start@@Base+0x7ebb>
  411063:	mov    rax,QWORD PTR [rbp-0x28]
  411067:	mov    rdi,rax
  41106a:	call   40b275 <_start@@Base+0x6fc5>
  41106f:	mov    rax,QWORD PTR [rbp-0x28]
  411073:	mov    esi,0x3
  411078:	mov    rdi,rax
  41107b:	call   40b43b <_start@@Base+0x718b>
  411080:	mov    QWORD PTR [rbp-0x18],rax
  411084:	mov    rax,QWORD PTR [rbp-0x18]
  411088:	mov    BYTE PTR [rax],0x31
  41108b:	mov    rax,QWORD PTR [rbp-0x18]
  41108f:	inc    rax
  411092:	mov    BYTE PTR [rax],0x32
  411095:	mov    rax,QWORD PTR [rbp-0x18]
  411099:	add    rax,0x2
  41109d:	mov    BYTE PTR [rax],0x33
  4110a0:	mov    rax,QWORD PTR [rbp-0x28]
  4110a4:	lea    rsi,[rip+0xeb18]        # 41fbc3 <_IO_stdin_used@@Base+0x1bc3>
  4110ab:	mov    rdi,rax
  4110ae:	call   40b3cf <_start@@Base+0x711f>
  4110b3:	mov    rax,QWORD PTR [rbp-0x28]
  4110b7:	mov    rdi,rax
  4110ba:	call   40b421 <_start@@Base+0x7171>
  4110bf:	cmp    rax,0x4
  4110c3:	je     4110e4 <test_string@@Base+0xa9>
  4110c5:	lea    rcx,[rip+0x10a8c]        # 421b58 <_IO_stdin_used@@Base+0x3b58>
  4110cc:	mov    edx,0x438
  4110d1:	lea    rsi,[rip+0xe430]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4110d8:	lea    rdi,[rip+0xeae9]        # 41fbc8 <_IO_stdin_used@@Base+0x1bc8>
  4110df:	call   4041f0 <__assert_fail@plt>
  4110e4:	mov    rax,QWORD PTR [rbp-0x28]
  4110e8:	mov    edx,0x1e
  4110ed:	lea    rsi,[rip+0xeafa]        # 41fbee <_IO_stdin_used@@Base+0x1bee>
  4110f4:	mov    rdi,rax
  4110f7:	call   40b3f4 <_start@@Base+0x7144>
  4110fc:	mov    rax,QWORD PTR [rbp-0x28]
  411100:	mov    rdi,rax
  411103:	call   40b421 <_start@@Base+0x7171>
  411108:	cmp    rax,0x8
  41110c:	je     41112d <test_string@@Base+0xf2>
  41110e:	lea    rcx,[rip+0x10a43]        # 421b58 <_IO_stdin_used@@Base+0x3b58>
  411115:	mov    edx,0x43a
  41111a:	lea    rsi,[rip+0xe3e7]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  411121:	lea    rdi,[rip+0xead0]        # 41fbf8 <_IO_stdin_used@@Base+0x1bf8>
  411128:	call   4041f0 <__assert_fail@plt>
  41112d:	mov    rax,QWORD PTR [rbp-0x28]
  411131:	mov    edx,0x2
  411136:	lea    rsi,[rip+0xeae1]        # 41fc1e <_IO_stdin_used@@Base+0x1c1e>
  41113d:	mov    rdi,rax
  411140:	call   40b3a2 <_start@@Base+0x70f2>
  411145:	mov    rax,QWORD PTR [rbp-0x28]
  411149:	mov    rdi,rax
  41114c:	call   40b421 <_start@@Base+0x7171>
  411151:	cmp    rax,0xa
  411155:	je     411176 <test_string@@Base+0x13b>
  411157:	lea    rcx,[rip+0x109fa]        # 421b58 <_IO_stdin_used@@Base+0x3b58>
  41115e:	mov    edx,0x43c
  411163:	lea    rsi,[rip+0xe39e]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41116a:	lea    rdi,[rip+0xeab7]        # 41fc28 <_IO_stdin_used@@Base+0x1c28>
  411171:	call   4041f0 <__assert_fail@plt>
  411176:	mov    rax,QWORD PTR [rbp-0x28]
  41117a:	mov    esi,0x3
  41117f:	mov    rdi,rax
  411182:	call   40b47a <_start@@Base+0x71ca>
  411187:	mov    rax,QWORD PTR [rbp-0x28]
  41118b:	mov    rdi,rax
  41118e:	call   40b421 <_start@@Base+0x7171>
  411193:	cmp    rax,0x7
  411197:	je     4111b8 <test_string@@Base+0x17d>
  411199:	lea    rcx,[rip+0x109b8]        # 421b58 <_IO_stdin_used@@Base+0x3b58>
  4111a0:	mov    edx,0x43e
  4111a5:	lea    rsi,[rip+0xe35c]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4111ac:	lea    rdi,[rip+0xea9d]        # 41fc50 <_IO_stdin_used@@Base+0x1c50>
  4111b3:	call   4041f0 <__assert_fail@plt>
  4111b8:	mov    rax,QWORD PTR [rbp-0x28]
  4111bc:	mov    rdi,rax
  4111bf:	call   40b460 <_start@@Base+0x71b0>
  4111c4:	mov    QWORD PTR [rbp-0x18],rax
  4111c8:	mov    rax,QWORD PTR [rbp-0x18]
  4111cc:	add    rax,0x4
  4111d0:	mov    BYTE PTR [rax],0x2e
  4111d3:	mov    rax,QWORD PTR [rbp-0x28]
  4111d7:	mov    rdi,rax
  4111da:	call   40b28f <_start@@Base+0x6fdf>
  4111df:	mov    rax,QWORD PTR [rbp-0x28]
  4111e3:	mov    rdi,rax
  4111e6:	call   40c1db <_start@@Base+0x7f2b>
  4111eb:	mov    rax,QWORD PTR [rbp-0x28]
  4111ef:	mov    esi,0x0
  4111f4:	mov    rdi,rax
  4111f7:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  4111fc:	mov    QWORD PTR [rbp-0x10],rax
  411200:	cmp    QWORD PTR [rbp-0x10],0x0
  411205:	jne    411226 <test_string@@Base+0x1eb>
  411207:	lea    rcx,[rip+0x1094a]        # 421b58 <_IO_stdin_used@@Base+0x3b58>
  41120e:	mov    edx,0x445
  411213:	lea    rsi,[rip+0xe2ee]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41121a:	lea    rdi,[rip+0xea55]        # 41fc76 <_IO_stdin_used@@Base+0x1c76>
  411221:	call   4041f0 <__assert_fail@plt>
  411226:	mov    rax,QWORD PTR [rbp-0x10]
  41122a:	mov    rdi,rax
  41122d:	call   40643b <_start@@Base+0x218b>
  411232:	mov    QWORD PTR [rbp-0x8],rax
  411236:	mov    rax,QWORD PTR [rbp-0x8]
  41123a:	mov    rdi,rax
  41123d:	call   406adb <_start@@Base+0x282b>
  411242:	lea    rsi,[rip+0xea34]        # 41fc7d <_IO_stdin_used@@Base+0x1c7d>
  411249:	mov    rdi,rax
  41124c:	call   404240 <strcmp@plt>
  411251:	test   eax,eax
  411253:	je     411268 <test_string@@Base+0x22d>
  411255:	lea    rdi,[rip+0xea29]        # 41fc85 <_IO_stdin_used@@Base+0x1c85>
  41125c:	call   4041a0 <puts@plt>
  411261:	mov    eax,0xffffffff
  411266:	jmp    41126d <test_string@@Base+0x232>
  411268:	mov    eax,0x0
  41126d:	leave  
  41126e:	ret    

000000000041126f <test_sort_find@@Base>:
  41126f:	endbr64 
  411273:	push   rbp
  411274:	mov    rbp,rsp
  411277:	push   rbx
  411278:	sub    rsp,0x58
  41127c:	mov    QWORD PTR [rbp-0x58],rdi
  411280:	mov    rax,QWORD PTR fs:0x28
  411289:	mov    QWORD PTR [rbp-0x18],rax
  41128d:	xor    eax,eax
  41128f:	mov    DWORD PTR [rbp-0x4c],0xffffffff
  411296:	mov    rax,QWORD PTR [rbp-0x58]
  41129a:	mov    rdi,rax
  41129d:	call   416246 <flatcc_builder_reset@@Base>
  4112a2:	mov    rax,QWORD PTR [rbp-0x58]
  4112a6:	mov    rdi,rax
  4112a9:	call   40c16b <_start@@Base+0x7ebb>
  4112ae:	mov    rax,QWORD PTR [rbp-0x58]
  4112b2:	lea    rsi,[rip+0xd936]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  4112b9:	mov    rdi,rax
  4112bc:	call   40b2b9 <_start@@Base+0x7009>
  4112c1:	mov    rax,QWORD PTR [rbp-0x58]
  4112c5:	mov    rdi,rax
  4112c8:	call   40b627 <_start@@Base+0x7377>
  4112cd:	mov    rax,QWORD PTR [rbp-0x58]
  4112d1:	mov    rdi,rax
  4112d4:	call   40b745 <_start@@Base+0x7495>
  4112d9:	mov    rax,QWORD PTR [rbp-0x58]
  4112dd:	lea    rsi,[rip+0xe293]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4112e4:	mov    rdi,rax
  4112e7:	call   40b2b9 <_start@@Base+0x7009>
  4112ec:	mov    rax,QWORD PTR [rbp-0x58]
  4112f0:	mov    rdi,rax
  4112f3:	call   40b75f <_start@@Base+0x74af>
  4112f8:	mov    rax,QWORD PTR [rbp-0x58]
  4112fc:	mov    rdi,rax
  4112ff:	call   40b745 <_start@@Base+0x7495>
  411304:	mov    rax,QWORD PTR [rbp-0x58]
  411308:	lea    rsi,[rip+0xe2e3]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  41130f:	mov    rdi,rax
  411312:	call   40b2b9 <_start@@Base+0x7009>
  411317:	mov    rax,QWORD PTR [rbp-0x58]
  41131b:	mov    rdi,rax
  41131e:	call   40b75f <_start@@Base+0x74af>
  411323:	mov    rax,QWORD PTR [rbp-0x58]
  411327:	mov    rdi,rax
  41132a:	call   40b745 <_start@@Base+0x7495>
  41132f:	mov    rax,QWORD PTR [rbp-0x58]
  411333:	lea    rsi,[rip+0xe2e0]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  41133a:	mov    rdi,rax
  41133d:	call   40b2b9 <_start@@Base+0x7009>
  411342:	mov    rax,QWORD PTR [rbp-0x58]
  411346:	mov    rdi,rax
  411349:	call   40b75f <_start@@Base+0x74af>
  41134e:	mov    rax,QWORD PTR [rbp-0x58]
  411352:	mov    rdi,rax
  411355:	call   40b745 <_start@@Base+0x7495>
  41135a:	mov    rax,QWORD PTR [rbp-0x58]
  41135e:	lea    rsi,[rip+0xe933]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  411365:	mov    rdi,rax
  411368:	call   40b2b9 <_start@@Base+0x7009>
  41136d:	mov    rax,QWORD PTR [rbp-0x58]
  411371:	mov    rdi,rax
  411374:	call   40b75f <_start@@Base+0x74af>
  411379:	mov    rax,QWORD PTR [rbp-0x58]
  41137d:	mov    rdi,rax
  411380:	call   40b745 <_start@@Base+0x7495>
  411385:	mov    rax,QWORD PTR [rbp-0x58]
  411389:	lea    rsi,[rip+0xe28a]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411390:	mov    rdi,rax
  411393:	call   40b2b9 <_start@@Base+0x7009>
  411398:	mov    rax,QWORD PTR [rbp-0x58]
  41139c:	mov    rdi,rax
  41139f:	call   40b75f <_start@@Base+0x74af>
  4113a4:	mov    rax,QWORD PTR [rbp-0x58]
  4113a8:	mov    rdi,rax
  4113ab:	call   40b641 <_start@@Base+0x7391>
  4113b0:	mov    rax,QWORD PTR [rbp-0x58]
  4113b4:	mov    rdi,rax
  4113b7:	call   40c1db <_start@@Base+0x7f2b>
  4113bc:	lea    rdx,[rbp-0x48]
  4113c0:	mov    rax,QWORD PTR [rbp-0x58]
  4113c4:	mov    rsi,rdx
  4113c7:	mov    rdi,rax
  4113ca:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  4113cf:	mov    QWORD PTR [rbp-0x40],rax
  4113d3:	mov    rax,QWORD PTR [rip+0x1ac1e]        # 42bff8 <stderr@GLIBC_2.2.5>
  4113da:	mov    rcx,QWORD PTR [rax]
  4113dd:	mov    rdx,QWORD PTR [rbp-0x48]
  4113e1:	mov    rax,QWORD PTR [rbp-0x40]
  4113e5:	mov    rsi,rax
  4113e8:	lea    rdi,[rip+0xe8af]        # 41fc9e <_IO_stdin_used@@Base+0x1c9e>
  4113ef:	call   40e441 <_start@@Base+0xa191>
  4113f4:	mov    rax,QWORD PTR [rbp-0x40]
  4113f8:	mov    rdi,rax
  4113fb:	call   40643b <_start@@Base+0x218b>
  411400:	mov    QWORD PTR [rbp-0x38],rax
  411404:	mov    rax,QWORD PTR [rbp-0x38]
  411408:	mov    rdi,rax
  41140b:	call   4078c1 <_start@@Base+0x3611>
  411410:	mov    QWORD PTR [rbp-0x30],rax
  411414:	cmp    QWORD PTR [rbp-0x30],0x0
  411419:	jne    41143a <test_sort_find@@Base+0x1cb>
  41141b:	lea    rcx,[rip+0x10746]        # 421b68 <_IO_stdin_used@@Base+0x3b68>
  411422:	mov    edx,0x47b
  411427:	lea    rsi,[rip+0xe0da]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41142e:	lea    rdi,[rip+0xe881]        # 41fcb6 <_IO_stdin_used@@Base+0x1cb6>
  411435:	call   4041f0 <__assert_fail@plt>
  41143a:	mov    rax,QWORD PTR [rbp-0x30]
  41143e:	mov    QWORD PTR [rbp-0x28],rax
  411442:	mov    rax,QWORD PTR [rbp-0x28]
  411446:	mov    rdi,rax
  411449:	call   407513 <_start@@Base+0x3263>
  41144e:	mov    rax,QWORD PTR [rip+0x1aba3]        # 42bff8 <stderr@GLIBC_2.2.5>
  411455:	mov    rcx,QWORD PTR [rax]
  411458:	mov    rdx,QWORD PTR [rbp-0x48]
  41145c:	mov    rax,QWORD PTR [rbp-0x40]
  411460:	mov    rsi,rax
  411463:	lea    rdi,[rip+0xe855]        # 41fcbf <_IO_stdin_used@@Base+0x1cbf>
  41146a:	call   40e441 <_start@@Base+0xa191>
  41146f:	mov    rax,QWORD PTR [rbp-0x30]
  411473:	mov    rdi,rax
  411476:	call   406352 <_start@@Base+0x20a2>
  41147b:	cmp    rax,0x5
  41147f:	je     411492 <test_sort_find@@Base+0x223>
  411481:	lea    rdi,[rip+0xe850]        # 41fcd8 <_IO_stdin_used@@Base+0x1cd8>
  411488:	call   4041a0 <puts@plt>
  41148d:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411492:	mov    rax,QWORD PTR [rbp-0x30]
  411496:	mov    esi,0x0
  41149b:	mov    rdi,rax
  41149e:	call   406380 <_start@@Base+0x20d0>
  4114a3:	mov    rdi,rax
  4114a6:	call   406adb <_start@@Base+0x282b>
  4114ab:	lea    rsi,[rip+0xe7e6]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  4114b2:	mov    rdi,rax
  4114b5:	call   404240 <strcmp@plt>
  4114ba:	test   eax,eax
  4114bc:	je     4114cf <test_sort_find@@Base+0x260>
  4114be:	lea    rdi,[rip+0xe83a]        # 41fcff <_IO_stdin_used@@Base+0x1cff>
  4114c5:	call   4041a0 <puts@plt>
  4114ca:	jmp    4117a5 <test_sort_find@@Base+0x536>
  4114cf:	mov    rax,QWORD PTR [rbp-0x30]
  4114d3:	mov    esi,0x1
  4114d8:	mov    rdi,rax
  4114db:	call   406380 <_start@@Base+0x20d0>
  4114e0:	mov    rdi,rax
  4114e3:	call   406adb <_start@@Base+0x282b>
  4114e8:	lea    rsi,[rip+0xe12b]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  4114ef:	mov    rdi,rax
  4114f2:	call   404240 <strcmp@plt>
  4114f7:	test   eax,eax
  4114f9:	je     41150c <test_sort_find@@Base+0x29d>
  4114fb:	lea    rdi,[rip+0xe81a]        # 41fd1c <_IO_stdin_used@@Base+0x1d1c>
  411502:	call   4041a0 <puts@plt>
  411507:	jmp    4117a5 <test_sort_find@@Base+0x536>
  41150c:	mov    rax,QWORD PTR [rbp-0x30]
  411510:	mov    esi,0x2
  411515:	mov    rdi,rax
  411518:	call   406380 <_start@@Base+0x20d0>
  41151d:	mov    rdi,rax
  411520:	call   406adb <_start@@Base+0x282b>
  411525:	lea    rsi,[rip+0xe0ee]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  41152c:	mov    rdi,rax
  41152f:	call   404240 <strcmp@plt>
  411534:	test   eax,eax
  411536:	je     411549 <test_sort_find@@Base+0x2da>
  411538:	lea    rdi,[rip+0xe7fa]        # 41fd39 <_IO_stdin_used@@Base+0x1d39>
  41153f:	call   4041a0 <puts@plt>
  411544:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411549:	mov    rax,QWORD PTR [rbp-0x30]
  41154d:	mov    esi,0x3
  411552:	mov    rdi,rax
  411555:	call   406380 <_start@@Base+0x20d0>
  41155a:	mov    rdi,rax
  41155d:	call   406adb <_start@@Base+0x282b>
  411562:	lea    rsi,[rip+0xe089]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411569:	mov    rdi,rax
  41156c:	call   404240 <strcmp@plt>
  411571:	test   eax,eax
  411573:	je     411586 <test_sort_find@@Base+0x317>
  411575:	lea    rdi,[rip+0xe7da]        # 41fd56 <_IO_stdin_used@@Base+0x1d56>
  41157c:	call   4041a0 <puts@plt>
  411581:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411586:	mov    rax,QWORD PTR [rbp-0x30]
  41158a:	mov    esi,0x4
  41158f:	mov    rdi,rax
  411592:	call   406380 <_start@@Base+0x20d0>
  411597:	mov    rdi,rax
  41159a:	call   406adb <_start@@Base+0x282b>
  41159f:	lea    rsi,[rip+0xdfd1]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4115a6:	mov    rdi,rax
  4115a9:	call   404240 <strcmp@plt>
  4115ae:	test   eax,eax
  4115b0:	je     4115c3 <test_sort_find@@Base+0x354>
  4115b2:	lea    rdi,[rip+0xe7ba]        # 41fd73 <_IO_stdin_used@@Base+0x1d73>
  4115b9:	call   4041a0 <puts@plt>
  4115be:	jmp    4117a5 <test_sort_find@@Base+0x536>
  4115c3:	mov    rax,QWORD PTR [rbp-0x30]
  4115c7:	mov    esi,0x1
  4115cc:	mov    rdi,rax
  4115cf:	call   406380 <_start@@Base+0x20d0>
  4115d4:	mov    rbx,rax
  4115d7:	mov    rax,QWORD PTR [rbp-0x30]
  4115db:	mov    esi,0x2
  4115e0:	mov    rdi,rax
  4115e3:	call   406380 <_start@@Base+0x20d0>
  4115e8:	cmp    rbx,rax
  4115eb:	jne    4115fe <test_sort_find@@Base+0x38f>
  4115ed:	lea    rdi,[rip+0xe79c]        # 41fd90 <_IO_stdin_used@@Base+0x1d90>
  4115f4:	call   4041a0 <puts@plt>
  4115f9:	jmp    4117a5 <test_sort_find@@Base+0x536>
  4115fe:	mov    rax,QWORD PTR [rbp-0x30]
  411602:	lea    rsi,[rip+0xdfe9]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411609:	mov    rdi,rax
  41160c:	call   40752e <_start@@Base+0x327e>
  411611:	cmp    rax,0x3
  411615:	je     411628 <test_sort_find@@Base+0x3b9>
  411617:	lea    rdi,[rip+0xe7ba]        # 41fdd8 <_IO_stdin_used@@Base+0x1dd8>
  41161e:	call   4041a0 <puts@plt>
  411623:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411628:	mov    rax,QWORD PTR [rbp-0x30]
  41162c:	mov    edx,0x5
  411631:	lea    rsi,[rip+0xe7cb]        # 41fe03 <_IO_stdin_used@@Base+0x1e03>
  411638:	mov    rdi,rax
  41163b:	call   407553 <_start@@Base+0x32a3>
  411640:	cmp    rax,0x3
  411644:	je     411657 <test_sort_find@@Base+0x3e8>
  411646:	lea    rdi,[rip+0xe7c3]        # 41fe10 <_IO_stdin_used@@Base+0x1e10>
  41164d:	call   4041a0 <puts@plt>
  411652:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411657:	mov    rax,QWORD PTR [rbp-0x30]
  41165b:	lea    rsi,[rip+0xdf90]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411662:	mov    rdi,rax
  411665:	call   40703a <_start@@Base+0x2d8a>
  41166a:	cmp    rax,0x3
  41166e:	je     411681 <test_sort_find@@Base+0x412>
  411670:	lea    rdi,[rip+0xe7cb]        # 41fe42 <_IO_stdin_used@@Base+0x1e42>
  411677:	call   4041a0 <puts@plt>
  41167c:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411681:	mov    rax,QWORD PTR [rbp-0x30]
  411685:	mov    edx,0x5
  41168a:	lea    rsi,[rip+0xe7cd]        # 41fe5e <_IO_stdin_used@@Base+0x1e5e>
  411691:	mov    rdi,rax
  411694:	call   407142 <_start@@Base+0x2e92>
  411699:	cmp    rax,0x3
  41169d:	je     4116b0 <test_sort_find@@Base+0x441>
  41169f:	lea    rdi,[rip+0xe7c2]        # 41fe68 <_IO_stdin_used@@Base+0x1e68>
  4116a6:	call   4041a0 <puts@plt>
  4116ab:	jmp    4117a5 <test_sort_find@@Base+0x536>
  4116b0:	mov    rax,QWORD PTR [rbp-0x30]
  4116b4:	lea    rsi,[rip+0xe7d0]        # 41fe8b <_IO_stdin_used@@Base+0x1e8b>
  4116bb:	mov    rdi,rax
  4116be:	call   40703a <_start@@Base+0x2d8a>
  4116c3:	mov    rdx,rax
  4116c6:	mov    rax,QWORD PTR [rip+0x1a9fb]        # 42c0c8 <__data_start@@Base+0x10>
  4116cd:	cmp    rdx,rax
  4116d0:	je     4116e3 <test_sort_find@@Base+0x474>
  4116d2:	lea    rdi,[rip+0xe7b9]        # 41fe92 <_IO_stdin_used@@Base+0x1e92>
  4116d9:	call   4041a0 <puts@plt>
  4116de:	jmp    4117a5 <test_sort_find@@Base+0x536>
  4116e3:	mov    rax,QWORD PTR [rbp-0x30]
  4116e7:	lea    rsi,[rip+0xe5aa]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  4116ee:	mov    rdi,rax
  4116f1:	call   40703a <_start@@Base+0x2d8a>
  4116f6:	test   rax,rax
  4116f9:	je     41170c <test_sort_find@@Base+0x49d>
  4116fb:	lea    rdi,[rip+0xe7a6]        # 41fea8 <_IO_stdin_used@@Base+0x1ea8>
  411702:	call   4041a0 <puts@plt>
  411707:	jmp    4117a5 <test_sort_find@@Base+0x536>
  41170c:	mov    rax,QWORD PTR [rbp-0x30]
  411710:	lea    rsi,[rip+0xdf03]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411717:	mov    rdi,rax
  41171a:	call   40703a <_start@@Base+0x2d8a>
  41171f:	mov    QWORD PTR [rbp-0x20],rax
  411723:	cmp    QWORD PTR [rbp-0x20],0x1
  411728:	je     41174f <test_sort_find@@Base+0x4e0>
  41172a:	lea    rdi,[rip+0xe787]        # 41feb8 <_IO_stdin_used@@Base+0x1eb8>
  411731:	call   4041a0 <puts@plt>
  411736:	mov    rax,QWORD PTR [rbp-0x20]
  41173a:	mov    esi,eax
  41173c:	lea    rdi,[rip+0xe788]        # 41fecb <_IO_stdin_used@@Base+0x1ecb>
  411743:	mov    eax,0x0
  411748:	call   4041d0 <printf@plt>
  41174d:	jmp    4117a5 <test_sort_find@@Base+0x536>
  41174f:	mov    rax,QWORD PTR [rbp-0x30]
  411753:	lea    rsi,[rip+0xde1d]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  41175a:	mov    rdi,rax
  41175d:	call   40703a <_start@@Base+0x2d8a>
  411762:	mov    QWORD PTR [rbp-0x20],rax
  411766:	cmp    QWORD PTR [rbp-0x20],0x4
  41176b:	je     411792 <test_sort_find@@Base+0x523>
  41176d:	lea    rdi,[rip+0xe75f]        # 41fed3 <_IO_stdin_used@@Base+0x1ed3>
  411774:	call   4041a0 <puts@plt>
  411779:	mov    rax,QWORD PTR [rbp-0x20]
  41177d:	mov    esi,eax
  41177f:	lea    rdi,[rip+0xe745]        # 41fecb <_IO_stdin_used@@Base+0x1ecb>
  411786:	mov    eax,0x0
  41178b:	call   4041d0 <printf@plt>
  411790:	jmp    4117a5 <test_sort_find@@Base+0x536>
  411792:	mov    rax,QWORD PTR [rbp-0x28]
  411796:	mov    rdi,rax
  411799:	call   407513 <_start@@Base+0x3263>
  41179e:	mov    DWORD PTR [rbp-0x4c],0x0
  4117a5:	mov    rax,QWORD PTR [rbp-0x40]
  4117a9:	mov    rdi,rax
  4117ac:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  4117b1:	mov    eax,DWORD PTR [rbp-0x4c]
  4117b4:	mov    rbx,QWORD PTR [rbp-0x18]
  4117b8:	xor    rbx,QWORD PTR fs:0x28
  4117c1:	je     4117c8 <test_sort_find@@Base+0x559>
  4117c3:	call   4041c0 <__stack_chk_fail@plt>
  4117c8:	add    rsp,0x58
  4117cc:	pop    rbx
  4117cd:	pop    rbp
  4117ce:	ret    
  4117cf:	endbr64 
  4117d3:	push   rbp
  4117d4:	mov    rbp,rsp
  4117d7:	sub    rsp,0x20
  4117db:	mov    QWORD PTR [rbp-0x18],rdi
  4117df:	mov    QWORD PTR [rbp-0x20],rsi
  4117e3:	mov    QWORD PTR [rbp-0x8],0x0
  4117eb:	mov    rdx,QWORD PTR [rbp-0x20]
  4117ef:	mov    rax,QWORD PTR [rbp-0x18]
  4117f3:	mov    rsi,rdx
  4117f6:	mov    rdi,rax
  4117f9:	call   40757e <_start@@Base+0x32ce>
  4117fe:	mov    QWORD PTR [rbp-0x10],rax
  411802:	jmp    41182b <test_sort_find@@Base+0x5bc>
  411804:	inc    QWORD PTR [rbp-0x8]
  411808:	mov    rdx,QWORD PTR [rip+0x1a8c1]        # 42c0d0 <__data_start@@Base+0x18>
  41180f:	mov    rax,QWORD PTR [rbp-0x10]
  411813:	lea    rsi,[rax+0x1]
  411817:	mov    rcx,QWORD PTR [rbp-0x20]
  41181b:	mov    rax,QWORD PTR [rbp-0x18]
  41181f:	mov    rdi,rax
  411822:	call   4075ce <_start@@Base+0x331e>
  411827:	mov    QWORD PTR [rbp-0x10],rax
  41182b:	mov    rax,QWORD PTR [rip+0x1a896]        # 42c0c8 <__data_start@@Base+0x10>
  411832:	cmp    QWORD PTR [rbp-0x10],rax
  411836:	jne    411804 <test_sort_find@@Base+0x595>
  411838:	mov    rax,QWORD PTR [rbp-0x8]
  41183c:	leave  
  41183d:	ret    

000000000041183e <test_scan@@Base>:
  41183e:	endbr64 
  411842:	push   rbp
  411843:	mov    rbp,rsp
  411846:	push   rbx
  411847:	sub    rsp,0x68
  41184b:	mov    QWORD PTR [rbp-0x68],rdi
  41184f:	mov    rax,QWORD PTR fs:0x28
  411858:	mov    QWORD PTR [rbp-0x18],rax
  41185c:	xor    eax,eax
  41185e:	mov    BYTE PTR [rbp-0x1f],0x6
  411862:	mov    BYTE PTR [rbp-0x1e],0x7
  411866:	mov    BYTE PTR [rbp-0x1d],0x1
  41186a:	mov    BYTE PTR [rbp-0x1c],0x3
  41186e:	mov    BYTE PTR [rbp-0x1b],0x4
  411872:	mov    BYTE PTR [rbp-0x1a],0x3
  411876:	mov    BYTE PTR [rbp-0x19],0x2
  41187a:	mov    DWORD PTR [rbp-0x5c],0xffffffff
  411881:	mov    rax,QWORD PTR [rbp-0x68]
  411885:	mov    rdi,rax
  411888:	call   416246 <flatcc_builder_reset@@Base>
  41188d:	mov    rax,QWORD PTR [rbp-0x68]
  411891:	mov    rdi,rax
  411894:	call   40c16b <_start@@Base+0x7ebb>
  411899:	mov    rax,QWORD PTR [rbp-0x68]
  41189d:	lea    rsi,[rip+0xd34b]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  4118a4:	mov    rdi,rax
  4118a7:	call   40b2b9 <_start@@Base+0x7009>
  4118ac:	lea    rcx,[rbp-0x1f]
  4118b0:	mov    rax,QWORD PTR [rbp-0x68]
  4118b4:	mov    edx,0x7
  4118b9:	mov    rsi,rcx
  4118bc:	mov    rdi,rax
  4118bf:	call   40b5a2 <_start@@Base+0x72f2>
  4118c4:	mov    rax,QWORD PTR [rbp-0x68]
  4118c8:	mov    rdi,rax
  4118cb:	call   40b7d1 <_start@@Base+0x7521>
  4118d0:	mov    rax,QWORD PTR [rbp-0x68]
  4118d4:	mov    rdi,rax
  4118d7:	call   40b7eb <_start@@Base+0x753b>
  4118dc:	mov    rax,QWORD PTR [rbp-0x68]
  4118e0:	mov    rdi,rax
  4118e3:	call   40b627 <_start@@Base+0x7377>
  4118e8:	mov    rax,QWORD PTR [rbp-0x68]
  4118ec:	mov    rdi,rax
  4118ef:	call   40b745 <_start@@Base+0x7495>
  4118f4:	mov    rax,QWORD PTR [rbp-0x68]
  4118f8:	lea    rsi,[rip+0xdc78]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4118ff:	mov    rdi,rax
  411902:	call   40b2b9 <_start@@Base+0x7009>
  411907:	mov    rax,QWORD PTR [rbp-0x68]
  41190b:	mov    rdi,rax
  41190e:	call   40b75f <_start@@Base+0x74af>
  411913:	mov    rax,QWORD PTR [rbp-0x68]
  411917:	mov    rdi,rax
  41191a:	call   40b745 <_start@@Base+0x7495>
  41191f:	mov    rax,QWORD PTR [rbp-0x68]
  411923:	lea    rsi,[rip+0xdcc8]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  41192a:	mov    rdi,rax
  41192d:	call   40b2b9 <_start@@Base+0x7009>
  411932:	mov    rax,QWORD PTR [rbp-0x68]
  411936:	mov    rdi,rax
  411939:	call   40b75f <_start@@Base+0x74af>
  41193e:	mov    rax,QWORD PTR [rbp-0x68]
  411942:	mov    rdi,rax
  411945:	call   40b745 <_start@@Base+0x7495>
  41194a:	mov    rax,QWORD PTR [rbp-0x68]
  41194e:	lea    rsi,[rip+0xdcc5]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411955:	mov    rdi,rax
  411958:	call   40b2b9 <_start@@Base+0x7009>
  41195d:	mov    rax,QWORD PTR [rbp-0x68]
  411961:	mov    rdi,rax
  411964:	call   40b75f <_start@@Base+0x74af>
  411969:	mov    rax,QWORD PTR [rbp-0x68]
  41196d:	mov    rdi,rax
  411970:	call   40b745 <_start@@Base+0x7495>
  411975:	mov    rax,QWORD PTR [rbp-0x68]
  411979:	lea    rsi,[rip+0xe318]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  411980:	mov    rdi,rax
  411983:	call   40b2b9 <_start@@Base+0x7009>
  411988:	mov    rax,QWORD PTR [rbp-0x68]
  41198c:	mov    rdi,rax
  41198f:	call   40b75f <_start@@Base+0x74af>
  411994:	mov    rax,QWORD PTR [rbp-0x68]
  411998:	mov    rdi,rax
  41199b:	call   40b745 <_start@@Base+0x7495>
  4119a0:	mov    rax,QWORD PTR [rbp-0x68]
  4119a4:	lea    rsi,[rip+0xdc6f]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  4119ab:	mov    rdi,rax
  4119ae:	call   40b2b9 <_start@@Base+0x7009>
  4119b3:	mov    rax,QWORD PTR [rbp-0x68]
  4119b7:	mov    rdi,rax
  4119ba:	call   40b75f <_start@@Base+0x74af>
  4119bf:	mov    rax,QWORD PTR [rbp-0x68]
  4119c3:	mov    rdi,rax
  4119c6:	call   40b641 <_start@@Base+0x7391>
  4119cb:	mov    rax,QWORD PTR [rbp-0x68]
  4119cf:	mov    rdi,rax
  4119d2:	call   40c1db <_start@@Base+0x7f2b>
  4119d7:	lea    rdx,[rbp-0x58]
  4119db:	mov    rax,QWORD PTR [rbp-0x68]
  4119df:	mov    rsi,rdx
  4119e2:	mov    rdi,rax
  4119e5:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  4119ea:	mov    QWORD PTR [rbp-0x50],rax
  4119ee:	mov    rax,QWORD PTR [rbp-0x50]
  4119f2:	mov    rdi,rax
  4119f5:	call   40643b <_start@@Base+0x218b>
  4119fa:	mov    QWORD PTR [rbp-0x48],rax
  4119fe:	mov    rax,QWORD PTR [rbp-0x48]
  411a02:	mov    rdi,rax
  411a05:	call   4078c1 <_start@@Base+0x3611>
  411a0a:	mov    QWORD PTR [rbp-0x40],rax
  411a0e:	cmp    QWORD PTR [rbp-0x40],0x0
  411a13:	jne    411a34 <test_scan@@Base+0x1f6>
  411a15:	lea    rcx,[rip+0x1015c]        # 421b78 <_IO_stdin_used@@Base+0x3b78>
  411a1c:	mov    edx,0x519
  411a21:	lea    rsi,[rip+0xdae0]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  411a28:	lea    rdi,[rip+0xe287]        # 41fcb6 <_IO_stdin_used@@Base+0x1cb6>
  411a2f:	call   4041f0 <__assert_fail@plt>
  411a34:	mov    rax,QWORD PTR [rbp-0x48]
  411a38:	mov    rdi,rax
  411a3b:	call   4077ec <_start@@Base+0x353c>
  411a40:	mov    QWORD PTR [rbp-0x38],rax
  411a44:	cmp    QWORD PTR [rbp-0x38],0x0
  411a49:	jne    411a6a <test_scan@@Base+0x22c>
  411a4b:	lea    rcx,[rip+0x10126]        # 421b78 <_IO_stdin_used@@Base+0x3b78>
  411a52:	mov    edx,0x51b
  411a57:	lea    rsi,[rip+0xdaaa]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  411a5e:	lea    rdi,[rip+0xe480]        # 41fee5 <_IO_stdin_used@@Base+0x1ee5>
  411a65:	call   4041f0 <__assert_fail@plt>
  411a6a:	mov    rax,QWORD PTR [rbp-0x48]
  411a6e:	mov    rdi,rax
  411a71:	call   407996 <_start@@Base+0x36e6>
  411a76:	mov    QWORD PTR [rbp-0x30],rax
  411a7a:	cmp    QWORD PTR [rbp-0x30],0x0
  411a7f:	jne    411aa0 <test_scan@@Base+0x262>
  411a81:	lea    rcx,[rip+0x100f0]        # 421b78 <_IO_stdin_used@@Base+0x3b78>
  411a88:	mov    edx,0x51d
  411a8d:	lea    rsi,[rip+0xda74]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  411a94:	lea    rdi,[rip+0xe44e]        # 41fee9 <_IO_stdin_used@@Base+0x1ee9>
  411a9b:	call   4041f0 <__assert_fail@plt>
  411aa0:	mov    rax,QWORD PTR [rbp-0x40]
  411aa4:	lea    rsi,[rip+0xdb47]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411aab:	mov    rdi,rax
  411aae:	call   40757e <_start@@Base+0x32ce>
  411ab3:	cmp    rax,0x1
  411ab7:	je     411aca <test_scan@@Base+0x28c>
  411ab9:	lea    rdi,[rip+0xe438]        # 41fef8 <_IO_stdin_used@@Base+0x1ef8>
  411ac0:	call   4041a0 <puts@plt>
  411ac5:	jmp    412578 <test_scan@@Base+0xd3a>
  411aca:	mov    rax,QWORD PTR [rbp-0x40]
  411ace:	lea    rsi,[rip+0xdb1d]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411ad5:	mov    rdi,rax
  411ad8:	call   407600 <_start@@Base+0x3350>
  411add:	cmp    rax,0x1
  411ae1:	je     411af4 <test_scan@@Base+0x2b6>
  411ae3:	lea    rdi,[rip+0xe42e]        # 41ff18 <_IO_stdin_used@@Base+0x1f18>
  411aea:	call   4041a0 <puts@plt>
  411aef:	jmp    412578 <test_scan@@Base+0xd3a>
  411af4:	mov    rax,QWORD PTR [rbp-0x40]
  411af8:	mov    edx,0x5
  411afd:	lea    rsi,[rip+0xe35a]        # 41fe5e <_IO_stdin_used@@Base+0x1e5e>
  411b04:	mov    rdi,rax
  411b07:	call   4075a3 <_start@@Base+0x32f3>
  411b0c:	cmp    rax,0x1
  411b10:	je     411b23 <test_scan@@Base+0x2e5>
  411b12:	lea    rdi,[rip+0xe41f]        # 41ff38 <_IO_stdin_used@@Base+0x1f38>
  411b19:	call   4041a0 <puts@plt>
  411b1e:	jmp    412578 <test_scan@@Base+0xd3a>
  411b23:	mov    rax,QWORD PTR [rbp-0x40]
  411b27:	mov    edx,0x5
  411b2c:	lea    rsi,[rip+0xe32b]        # 41fe5e <_IO_stdin_used@@Base+0x1e5e>
  411b33:	mov    rdi,rax
  411b36:	call   407625 <_start@@Base+0x3375>
  411b3b:	cmp    rax,0x1
  411b3f:	je     411b52 <test_scan@@Base+0x314>
  411b41:	lea    rdi,[rip+0xe3f0]        # 41ff38 <_IO_stdin_used@@Base+0x1f38>
  411b48:	call   4041a0 <puts@plt>
  411b4d:	jmp    412578 <test_scan@@Base+0xd3a>
  411b52:	mov    rdx,QWORD PTR [rip+0x1a577]        # 42c0d0 <__data_start@@Base+0x18>
  411b59:	mov    rax,QWORD PTR [rbp-0x40]
  411b5d:	lea    rcx,[rip+0xda8e]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411b64:	mov    esi,0x2
  411b69:	mov    rdi,rax
  411b6c:	call   4075ce <_start@@Base+0x331e>
  411b71:	mov    rdx,rax
  411b74:	mov    rax,QWORD PTR [rip+0x1a54d]        # 42c0c8 <__data_start@@Base+0x10>
  411b7b:	cmp    rdx,rax
  411b7e:	je     411b91 <test_scan@@Base+0x353>
  411b80:	lea    rdi,[rip+0xe3d9]        # 41ff60 <_IO_stdin_used@@Base+0x1f60>
  411b87:	call   4041a0 <puts@plt>
  411b8c:	jmp    412578 <test_scan@@Base+0xd3a>
  411b91:	mov    rax,QWORD PTR [rbp-0x40]
  411b95:	lea    rsi,[rip+0xe2ef]        # 41fe8b <_IO_stdin_used@@Base+0x1e8b>
  411b9c:	mov    rdi,rax
  411b9f:	call   40757e <_start@@Base+0x32ce>
  411ba4:	mov    rdx,rax
  411ba7:	mov    rax,QWORD PTR [rip+0x1a51a]        # 42c0c8 <__data_start@@Base+0x10>
  411bae:	cmp    rdx,rax
  411bb1:	je     411bc4 <test_scan@@Base+0x386>
  411bb3:	lea    rdi,[rip+0xe2d8]        # 41fe92 <_IO_stdin_used@@Base+0x1e92>
  411bba:	call   4041a0 <puts@plt>
  411bbf:	jmp    412578 <test_scan@@Base+0xd3a>
  411bc4:	mov    rax,QWORD PTR [rbp-0x40]
  411bc8:	lea    rsi,[rip+0xd9a8]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  411bcf:	mov    rdi,rax
  411bd2:	call   40757e <_start@@Base+0x32ce>
  411bd7:	test   rax,rax
  411bda:	je     411bed <test_scan@@Base+0x3af>
  411bdc:	lea    rdi,[rip+0xe2f0]        # 41fed3 <_IO_stdin_used@@Base+0x1ed3>
  411be3:	call   4041a0 <puts@plt>
  411be8:	jmp    412578 <test_scan@@Base+0xd3a>
  411bed:	mov    rax,QWORD PTR [rbp-0x40]
  411bf1:	lea    rsi,[rip+0xda22]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411bf8:	mov    rdi,rax
  411bfb:	call   406bca <_start@@Base+0x291a>
  411c00:	cmp    rax,0x2
  411c04:	je     411c17 <test_scan@@Base+0x3d9>
  411c06:	lea    rdi,[rip+0xe2ab]        # 41feb8 <_IO_stdin_used@@Base+0x1eb8>
  411c0d:	call   4041a0 <puts@plt>
  411c12:	jmp    412578 <test_scan@@Base+0xd3a>
  411c17:	mov    rax,QWORD PTR [rbp-0x40]
  411c1b:	lea    rsi,[rip+0xd9f8]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411c22:	mov    rdi,rax
  411c25:	call   406dfb <_start@@Base+0x2b4b>
  411c2a:	cmp    rax,0x4
  411c2e:	je     411c41 <test_scan@@Base+0x403>
  411c30:	lea    rdi,[rip+0xe281]        # 41feb8 <_IO_stdin_used@@Base+0x1eb8>
  411c37:	call   4041a0 <puts@plt>
  411c3c:	jmp    412578 <test_scan@@Base+0xd3a>
  411c41:	mov    rax,QWORD PTR [rbp-0x40]
  411c45:	mov    edx,0x8
  411c4a:	lea    rsi,[rip+0xe33a]        # 41ff8b <_IO_stdin_used@@Base+0x1f8b>
  411c51:	mov    rdi,rax
  411c54:	call   406e78 <_start@@Base+0x2bc8>
  411c59:	cmp    rax,0x4
  411c5d:	je     411c70 <test_scan@@Base+0x432>
  411c5f:	lea    rdi,[rip+0xe330]        # 41ff96 <_IO_stdin_used@@Base+0x1f96>
  411c66:	call   4041a0 <puts@plt>
  411c6b:	jmp    412578 <test_scan@@Base+0xd3a>
  411c70:	mov    rax,QWORD PTR [rbp-0x40]
  411c74:	mov    r8d,0x8
  411c7a:	lea    rcx,[rip+0xe30a]        # 41ff8b <_IO_stdin_used@@Base+0x1f8b>
  411c81:	mov    edx,0x3
  411c86:	mov    esi,0x1
  411c8b:	mov    rdi,rax
  411c8e:	call   406f97 <_start@@Base+0x2ce7>
  411c93:	cmp    rax,0x2
  411c97:	je     411caa <test_scan@@Base+0x46c>
  411c99:	lea    rdi,[rip+0xe2f6]        # 41ff96 <_IO_stdin_used@@Base+0x1f96>
  411ca0:	call   4041a0 <puts@plt>
  411ca5:	jmp    412578 <test_scan@@Base+0xd3a>
  411caa:	mov    rdx,QWORD PTR [rip+0x1a41f]        # 42c0d0 <__data_start@@Base+0x18>
  411cb1:	mov    rax,QWORD PTR [rbp-0x40]
  411cb5:	lea    rcx,[rip+0xd95e]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411cbc:	mov    esi,0x2
  411cc1:	mov    rdi,rax
  411cc4:	call   406cc2 <_start@@Base+0x2a12>
  411cc9:	cmp    rax,0x2
  411ccd:	je     411ce0 <test_scan@@Base+0x4a2>
  411ccf:	lea    rdi,[rip+0xe2da]        # 41ffb0 <_IO_stdin_used@@Base+0x1fb0>
  411cd6:	call   4041a0 <puts@plt>
  411cdb:	jmp    412578 <test_scan@@Base+0xd3a>
  411ce0:	mov    rdx,QWORD PTR [rip+0x1a3e9]        # 42c0d0 <__data_start@@Base+0x18>
  411ce7:	mov    rax,QWORD PTR [rbp-0x40]
  411ceb:	mov    r8d,0x8
  411cf1:	lea    rcx,[rip+0xe293]        # 41ff8b <_IO_stdin_used@@Base+0x1f8b>
  411cf8:	mov    esi,0x2
  411cfd:	mov    rdi,rax
  411d00:	call   406d5c <_start@@Base+0x2aac>
  411d05:	cmp    rax,0x2
  411d09:	je     411d1c <test_scan@@Base+0x4de>
  411d0b:	lea    rdi,[rip+0xe29e]        # 41ffb0 <_IO_stdin_used@@Base+0x1fb0>
  411d12:	call   4041a0 <puts@plt>
  411d17:	jmp    412578 <test_scan@@Base+0xd3a>
  411d1c:	mov    rdx,QWORD PTR [rip+0x1a3ad]        # 42c0d0 <__data_start@@Base+0x18>
  411d23:	mov    rax,QWORD PTR [rbp-0x40]
  411d27:	lea    rcx,[rip+0xd8ec]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411d2e:	mov    esi,0x3
  411d33:	mov    rdi,rax
  411d36:	call   406cc2 <_start@@Base+0x2a12>
  411d3b:	cmp    rax,0x4
  411d3f:	je     411d52 <test_scan@@Base+0x514>
  411d41:	lea    rdi,[rip+0xe292]        # 41ffda <_IO_stdin_used@@Base+0x1fda>
  411d48:	call   4041a0 <puts@plt>
  411d4d:	jmp    412578 <test_scan@@Base+0xd3a>
  411d52:	mov    rax,QWORD PTR [rbp-0x40]
  411d56:	lea    rcx,[rip+0xe12e]        # 41fe8b <_IO_stdin_used@@Base+0x1e8b>
  411d5d:	mov    edx,0x3
  411d62:	mov    esi,0x1
  411d67:	mov    rdi,rax
  411d6a:	call   4075ce <_start@@Base+0x331e>
  411d6f:	mov    rdx,rax
  411d72:	mov    rax,QWORD PTR [rip+0x1a34f]        # 42c0c8 <__data_start@@Base+0x10>
  411d79:	cmp    rdx,rax
  411d7c:	je     411d8f <test_scan@@Base+0x551>
  411d7e:	lea    rdi,[rip+0xe273]        # 41fff8 <_IO_stdin_used@@Base+0x1ff8>
  411d85:	call   4041a0 <puts@plt>
  411d8a:	jmp    412578 <test_scan@@Base+0xd3a>
  411d8f:	mov    rax,QWORD PTR [rbp-0x40]
  411d93:	lea    rcx,[rip+0xd7dd]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  411d9a:	mov    edx,0x3
  411d9f:	mov    esi,0x1
  411da4:	mov    rdi,rax
  411da7:	call   4075ce <_start@@Base+0x331e>
  411dac:	mov    rdx,rax
  411daf:	mov    rax,QWORD PTR [rip+0x1a312]        # 42c0c8 <__data_start@@Base+0x10>
  411db6:	cmp    rdx,rax
  411db9:	je     411dcc <test_scan@@Base+0x58e>
  411dbb:	lea    rdi,[rip+0xe25e]        # 420020 <_IO_stdin_used@@Base+0x2020>
  411dc2:	call   4041a0 <puts@plt>
  411dc7:	jmp    412578 <test_scan@@Base+0xd3a>
  411dcc:	mov    rax,QWORD PTR [rbp-0x40]
  411dd0:	lea    rcx,[rip+0xd81b]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411dd7:	mov    edx,0x3
  411ddc:	mov    esi,0x1
  411de1:	mov    rdi,rax
  411de4:	call   4075ce <_start@@Base+0x331e>
  411de9:	cmp    rax,0x1
  411ded:	je     411e00 <test_scan@@Base+0x5c2>
  411def:	lea    rdi,[rip+0xe252]        # 420048 <_IO_stdin_used@@Base+0x2048>
  411df6:	call   4041a0 <puts@plt>
  411dfb:	jmp    412578 <test_scan@@Base+0xd3a>
  411e00:	mov    rax,QWORD PTR [rbp-0x40]
  411e04:	lea    rcx,[rip+0xd80f]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411e0b:	mov    edx,0x3
  411e10:	mov    esi,0x1
  411e15:	mov    rdi,rax
  411e18:	call   406cc2 <_start@@Base+0x2a12>
  411e1d:	cmp    rax,0x2
  411e21:	je     411e34 <test_scan@@Base+0x5f6>
  411e23:	lea    rdi,[rip+0xe246]        # 420070 <_IO_stdin_used@@Base+0x2070>
  411e2a:	call   4041a0 <puts@plt>
  411e2f:	jmp    412578 <test_scan@@Base+0xd3a>
  411e34:	mov    rax,QWORD PTR [rbp-0x40]
  411e38:	lea    rcx,[rip+0xde59]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  411e3f:	mov    edx,0x3
  411e44:	mov    esi,0x1
  411e49:	mov    rdi,rax
  411e4c:	call   406cc2 <_start@@Base+0x2a12>
  411e51:	mov    rdx,rax
  411e54:	mov    rax,QWORD PTR [rip+0x1a26d]        # 42c0c8 <__data_start@@Base+0x10>
  411e5b:	cmp    rdx,rax
  411e5e:	je     411e71 <test_scan@@Base+0x633>
  411e60:	lea    rdi,[rip+0xe231]        # 420098 <_IO_stdin_used@@Base+0x2098>
  411e67:	call   4041a0 <puts@plt>
  411e6c:	jmp    412578 <test_scan@@Base+0xd3a>
  411e71:	mov    rax,QWORD PTR [rbp-0x40]
  411e75:	lea    rcx,[rip+0xe00f]        # 41fe8b <_IO_stdin_used@@Base+0x1e8b>
  411e7c:	mov    edx,0x3
  411e81:	mov    esi,0x1
  411e86:	mov    rdi,rax
  411e89:	call   407650 <_start@@Base+0x33a0>
  411e8e:	mov    rdx,rax
  411e91:	mov    rax,QWORD PTR [rip+0x1a230]        # 42c0c8 <__data_start@@Base+0x10>
  411e98:	cmp    rdx,rax
  411e9b:	je     411eae <test_scan@@Base+0x670>
  411e9d:	lea    rdi,[rip+0xe224]        # 4200c8 <_IO_stdin_used@@Base+0x20c8>
  411ea4:	call   4041a0 <puts@plt>
  411ea9:	jmp    412578 <test_scan@@Base+0xd3a>
  411eae:	mov    rax,QWORD PTR [rbp-0x40]
  411eb2:	lea    rcx,[rip+0xd6be]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  411eb9:	mov    edx,0x3
  411ebe:	mov    esi,0x1
  411ec3:	mov    rdi,rax
  411ec6:	call   407650 <_start@@Base+0x33a0>
  411ecb:	mov    rdx,rax
  411ece:	mov    rax,QWORD PTR [rip+0x1a1f3]        # 42c0c8 <__data_start@@Base+0x10>
  411ed5:	cmp    rdx,rax
  411ed8:	je     411eeb <test_scan@@Base+0x6ad>
  411eda:	lea    rdi,[rip+0xe217]        # 4200f8 <_IO_stdin_used@@Base+0x20f8>
  411ee1:	call   4041a0 <puts@plt>
  411ee6:	jmp    412578 <test_scan@@Base+0xd3a>
  411eeb:	mov    rax,QWORD PTR [rbp-0x40]
  411eef:	lea    rcx,[rip+0xd6fc]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411ef6:	mov    edx,0x3
  411efb:	mov    esi,0x1
  411f00:	mov    rdi,rax
  411f03:	call   407650 <_start@@Base+0x33a0>
  411f08:	cmp    rax,0x1
  411f0c:	je     411f1f <test_scan@@Base+0x6e1>
  411f0e:	lea    rdi,[rip+0xe213]        # 420128 <_IO_stdin_used@@Base+0x2128>
  411f15:	call   4041a0 <puts@plt>
  411f1a:	jmp    412578 <test_scan@@Base+0xd3a>
  411f1f:	mov    rax,QWORD PTR [rbp-0x40]
  411f23:	lea    rcx,[rip+0xd6f0]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  411f2a:	mov    edx,0x3
  411f2f:	mov    esi,0x1
  411f34:	mov    rdi,rax
  411f37:	call   406ef9 <_start@@Base+0x2c49>
  411f3c:	cmp    rax,0x2
  411f40:	je     411f53 <test_scan@@Base+0x715>
  411f42:	lea    rdi,[rip+0xe207]        # 420150 <_IO_stdin_used@@Base+0x2150>
  411f49:	call   4041a0 <puts@plt>
  411f4e:	jmp    412578 <test_scan@@Base+0xd3a>
  411f53:	mov    rax,QWORD PTR [rbp-0x40]
  411f57:	lea    rcx,[rip+0xdd3a]        # 41fc98 <_IO_stdin_used@@Base+0x1c98>
  411f5e:	mov    edx,0x3
  411f63:	mov    esi,0x1
  411f68:	mov    rdi,rax
  411f6b:	call   406ef9 <_start@@Base+0x2c49>
  411f70:	mov    rdx,rax
  411f73:	mov    rax,QWORD PTR [rip+0x1a14e]        # 42c0c8 <__data_start@@Base+0x10>
  411f7a:	cmp    rdx,rax
  411f7d:	je     411f90 <test_scan@@Base+0x752>
  411f7f:	lea    rdi,[rip+0xe1f2]        # 420178 <_IO_stdin_used@@Base+0x2178>
  411f86:	call   4041a0 <puts@plt>
  411f8b:	jmp    412578 <test_scan@@Base+0xd3a>
  411f90:	mov    rax,QWORD PTR [rbp-0x40]
  411f94:	lea    rcx,[rip+0xd5dc]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  411f9b:	mov    edx,0x0
  411fa0:	mov    esi,0x0
  411fa5:	mov    rdi,rax
  411fa8:	call   4075ce <_start@@Base+0x331e>
  411fad:	mov    rdx,rax
  411fb0:	mov    rax,QWORD PTR [rip+0x1a111]        # 42c0c8 <__data_start@@Base+0x10>
  411fb7:	cmp    rdx,rax
  411fba:	je     411fcd <test_scan@@Base+0x78f>
  411fbc:	lea    rdi,[rip+0xe1e5]        # 4201a8 <_IO_stdin_used@@Base+0x21a8>
  411fc3:	call   4041a0 <puts@plt>
  411fc8:	jmp    412578 <test_scan@@Base+0xd3a>
  411fcd:	mov    rax,QWORD PTR [rbp-0x40]
  411fd1:	lea    rcx,[rip+0xd61a]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  411fd8:	mov    edx,0x0
  411fdd:	mov    esi,0x0
  411fe2:	mov    rdi,rax
  411fe5:	call   4075ce <_start@@Base+0x331e>
  411fea:	mov    rdx,rax
  411fed:	mov    rax,QWORD PTR [rip+0x1a0d4]        # 42c0c8 <__data_start@@Base+0x10>
  411ff4:	cmp    rdx,rax
  411ff7:	je     41200a <test_scan@@Base+0x7cc>
  411ff9:	lea    rdi,[rip+0xe1c8]        # 4201c8 <_IO_stdin_used@@Base+0x21c8>
  412000:	call   4041a0 <puts@plt>
  412005:	jmp    412578 <test_scan@@Base+0xd3a>
  41200a:	mov    rax,QWORD PTR [rbp-0x40]
  41200e:	lea    rcx,[rip+0xd5dd]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  412015:	mov    edx,0x1
  41201a:	mov    esi,0x1
  41201f:	mov    rdi,rax
  412022:	call   4075ce <_start@@Base+0x331e>
  412027:	mov    rdx,rax
  41202a:	mov    rax,QWORD PTR [rip+0x1a097]        # 42c0c8 <__data_start@@Base+0x10>
  412031:	cmp    rdx,rax
  412034:	je     412047 <test_scan@@Base+0x809>
  412036:	lea    rdi,[rip+0xe1ab]        # 4201e8 <_IO_stdin_used@@Base+0x21e8>
  41203d:	call   4041a0 <puts@plt>
  412042:	jmp    412578 <test_scan@@Base+0xd3a>
  412047:	mov    rbx,QWORD PTR [rip+0x1a082]        # 42c0d0 <__data_start@@Base+0x18>
  41204e:	mov    rax,QWORD PTR [rbp-0x40]
  412052:	mov    rdi,rax
  412055:	call   406352 <_start@@Base+0x20a2>
  41205a:	mov    rsi,rax
  41205d:	mov    rax,QWORD PTR [rbp-0x40]
  412061:	lea    rcx,[rip+0xd50f]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  412068:	mov    rdx,rbx
  41206b:	mov    rdi,rax
  41206e:	call   4075ce <_start@@Base+0x331e>
  412073:	mov    rdx,rax
  412076:	mov    rax,QWORD PTR [rip+0x1a04b]        # 42c0c8 <__data_start@@Base+0x10>
  41207d:	cmp    rdx,rax
  412080:	je     412093 <test_scan@@Base+0x855>
  412082:	lea    rdi,[rip+0xe187]        # 420210 <_IO_stdin_used@@Base+0x2210>
  412089:	call   4041a0 <puts@plt>
  41208e:	jmp    412578 <test_scan@@Base+0xd3a>
  412093:	mov    rax,QWORD PTR [rbp-0x40]
  412097:	lea    rcx,[rip+0xd4d9]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  41209e:	mov    edx,0x0
  4120a3:	mov    esi,0x0
  4120a8:	mov    rdi,rax
  4120ab:	call   407650 <_start@@Base+0x33a0>
  4120b0:	mov    rdx,rax
  4120b3:	mov    rax,QWORD PTR [rip+0x1a00e]        # 42c0c8 <__data_start@@Base+0x10>
  4120ba:	cmp    rdx,rax
  4120bd:	je     4120d0 <test_scan@@Base+0x892>
  4120bf:	lea    rdi,[rip+0xe0e2]        # 4201a8 <_IO_stdin_used@@Base+0x21a8>
  4120c6:	call   4041a0 <puts@plt>
  4120cb:	jmp    412578 <test_scan@@Base+0xd3a>
  4120d0:	mov    rax,QWORD PTR [rbp-0x40]
  4120d4:	lea    rcx,[rip+0xd517]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  4120db:	mov    edx,0x0
  4120e0:	mov    esi,0x0
  4120e5:	mov    rdi,rax
  4120e8:	call   407650 <_start@@Base+0x33a0>
  4120ed:	mov    rdx,rax
  4120f0:	mov    rax,QWORD PTR [rip+0x19fd1]        # 42c0c8 <__data_start@@Base+0x10>
  4120f7:	cmp    rdx,rax
  4120fa:	je     41210d <test_scan@@Base+0x8cf>
  4120fc:	lea    rdi,[rip+0xe0c5]        # 4201c8 <_IO_stdin_used@@Base+0x21c8>
  412103:	call   4041a0 <puts@plt>
  412108:	jmp    412578 <test_scan@@Base+0xd3a>
  41210d:	mov    rax,QWORD PTR [rbp-0x40]
  412111:	lea    rcx,[rip+0xd4da]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  412118:	mov    edx,0x1
  41211d:	mov    esi,0x1
  412122:	mov    rdi,rax
  412125:	call   407650 <_start@@Base+0x33a0>
  41212a:	mov    rdx,rax
  41212d:	mov    rax,QWORD PTR [rip+0x19f94]        # 42c0c8 <__data_start@@Base+0x10>
  412134:	cmp    rdx,rax
  412137:	je     41214a <test_scan@@Base+0x90c>
  412139:	lea    rdi,[rip+0xe0a8]        # 4201e8 <_IO_stdin_used@@Base+0x21e8>
  412140:	call   4041a0 <puts@plt>
  412145:	jmp    412578 <test_scan@@Base+0xd3a>
  41214a:	mov    rbx,QWORD PTR [rip+0x19f7f]        # 42c0d0 <__data_start@@Base+0x18>
  412151:	mov    rax,QWORD PTR [rbp-0x40]
  412155:	mov    rdi,rax
  412158:	call   406352 <_start@@Base+0x20a2>
  41215d:	mov    rsi,rax
  412160:	mov    rax,QWORD PTR [rbp-0x40]
  412164:	lea    rcx,[rip+0xd40c]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  41216b:	mov    rdx,rbx
  41216e:	mov    rdi,rax
  412171:	call   407650 <_start@@Base+0x33a0>
  412176:	mov    rdx,rax
  412179:	mov    rax,QWORD PTR [rip+0x19f48]        # 42c0c8 <__data_start@@Base+0x10>
  412180:	cmp    rdx,rax
  412183:	je     412196 <test_scan@@Base+0x958>
  412185:	lea    rdi,[rip+0xe084]        # 420210 <_IO_stdin_used@@Base+0x2210>
  41218c:	call   4041a0 <puts@plt>
  412191:	jmp    412578 <test_scan@@Base+0xd3a>
  412196:	mov    rax,QWORD PTR [rbp-0x40]
  41219a:	lea    rsi,[rip+0xd451]        # 41f5f2 <_IO_stdin_used@@Base+0x15f2>
  4121a1:	mov    rdi,rax
  4121a4:	call   4117cf <test_sort_find@@Base+0x560>
  4121a9:	cmp    rax,0x1
  4121ad:	je     4121c0 <test_scan@@Base+0x982>
  4121af:	lea    rdi,[rip+0xe085]        # 42023b <_IO_stdin_used@@Base+0x223b>
  4121b6:	call   4041a0 <puts@plt>
  4121bb:	jmp    412578 <test_scan@@Base+0xd3a>
  4121c0:	mov    rax,QWORD PTR [rbp-0x40]
  4121c4:	lea    rsi,[rip+0xdcc0]        # 41fe8b <_IO_stdin_used@@Base+0x1e8b>
  4121cb:	mov    rdi,rax
  4121ce:	call   4117cf <test_sort_find@@Base+0x560>
  4121d3:	test   rax,rax
  4121d6:	je     4121e9 <test_scan@@Base+0x9ab>
  4121d8:	lea    rdi,[rip+0xe076]        # 420255 <_IO_stdin_used@@Base+0x2255>
  4121df:	call   4041a0 <puts@plt>
  4121e4:	jmp    412578 <test_scan@@Base+0xd3a>
  4121e9:	mov    rax,QWORD PTR [rbp-0x40]
  4121ed:	lea    rsi,[rip+0xd383]        # 41f577 <_IO_stdin_used@@Base+0x1577>
  4121f4:	mov    rdi,rax
  4121f7:	call   4117cf <test_sort_find@@Base+0x560>
  4121fc:	cmp    rax,0x1
  412200:	je     412213 <test_scan@@Base+0x9d5>
  412202:	lea    rdi,[rip+0xe067]        # 420270 <_IO_stdin_used@@Base+0x2270>
  412209:	call   4041a0 <puts@plt>
  41220e:	jmp    412578 <test_scan@@Base+0xd3a>
  412213:	mov    rax,QWORD PTR [rbp-0x40]
  412217:	lea    rsi,[rip+0xd3fc]        # 41f61a <_IO_stdin_used@@Base+0x161a>
  41221e:	mov    rdi,rax
  412221:	call   4117cf <test_sort_find@@Base+0x560>
  412226:	cmp    rax,0x2
  41222a:	je     41223d <test_scan@@Base+0x9ff>
  41222c:	lea    rdi,[rip+0xe058]        # 42028b <_IO_stdin_used@@Base+0x228b>
  412233:	call   4041a0 <puts@plt>
  412238:	jmp    412578 <test_scan@@Base+0xd3a>
  41223d:	mov    rax,QWORD PTR [rbp-0x38]
  412241:	mov    esi,0x6
  412246:	mov    rdi,rax
  412249:	call   404d04 <_start@@Base+0xa54>
  41224e:	mov    QWORD PTR [rbp-0x28],rax
  412252:	cmp    QWORD PTR [rbp-0x28],0x0
  412257:	je     41226a <test_scan@@Base+0xa2c>
  412259:	lea    rdi,[rip+0xe048]        # 4202a8 <_IO_stdin_used@@Base+0x22a8>
  412260:	call   4041a0 <puts@plt>
  412265:	jmp    412578 <test_scan@@Base+0xd3a>
  41226a:	mov    rax,QWORD PTR [rbp-0x38]
  41226e:	mov    esi,0x1
  412273:	mov    rdi,rax
  412276:	call   404d04 <_start@@Base+0xa54>
  41227b:	mov    QWORD PTR [rbp-0x28],rax
  41227f:	cmp    QWORD PTR [rbp-0x28],0x2
  412284:	je     412297 <test_scan@@Base+0xa59>
  412286:	lea    rdi,[rip+0xe04b]        # 4202d8 <_IO_stdin_used@@Base+0x22d8>
  41228d:	call   4041a0 <puts@plt>
  412292:	jmp    412578 <test_scan@@Base+0xd3a>
  412297:	mov    rdx,QWORD PTR [rip+0x19e32]        # 42c0d0 <__data_start@@Base+0x18>
  41229e:	mov    rax,QWORD PTR [rbp-0x38]
  4122a2:	mov    ecx,0x1
  4122a7:	mov    esi,0x3
  4122ac:	mov    rdi,rax
  4122af:	call   404d6c <_start@@Base+0xabc>
  4122b4:	mov    QWORD PTR [rbp-0x28],rax
  4122b8:	mov    rax,QWORD PTR [rip+0x19e09]        # 42c0c8 <__data_start@@Base+0x10>
  4122bf:	cmp    QWORD PTR [rbp-0x28],rax
  4122c3:	je     4122d6 <test_scan@@Base+0xa98>
  4122c5:	lea    rdi,[rip+0xe03c]        # 420308 <_IO_stdin_used@@Base+0x2308>
  4122cc:	call   4041a0 <puts@plt>
  4122d1:	jmp    412578 <test_scan@@Base+0xd3a>
  4122d6:	mov    rax,QWORD PTR [rbp-0x38]
  4122da:	mov    esi,0x5
  4122df:	mov    rdi,rax
  4122e2:	call   404d04 <_start@@Base+0xa54>
  4122e7:	mov    QWORD PTR [rbp-0x28],rax
  4122eb:	mov    rax,QWORD PTR [rip+0x19dd6]        # 42c0c8 <__data_start@@Base+0x10>
  4122f2:	cmp    QWORD PTR [rbp-0x28],rax
  4122f6:	je     412309 <test_scan@@Base+0xacb>
  4122f8:	lea    rdi,[rip+0xe041]        # 420340 <_IO_stdin_used@@Base+0x2340>
  4122ff:	call   4041a0 <puts@plt>
  412304:	jmp    412578 <test_scan@@Base+0xd3a>
  412309:	mov    rax,QWORD PTR [rbp-0x38]
  41230d:	mov    esi,0x2
  412312:	mov    rdi,rax
  412315:	call   404d04 <_start@@Base+0xa54>
  41231a:	mov    QWORD PTR [rbp-0x28],rax
  41231e:	cmp    QWORD PTR [rbp-0x28],0x6
  412323:	je     412336 <test_scan@@Base+0xaf8>
  412325:	lea    rdi,[rip+0xe04c]        # 420378 <_IO_stdin_used@@Base+0x2378>
  41232c:	call   4041a0 <puts@plt>
  412331:	jmp    412578 <test_scan@@Base+0xd3a>
  412336:	mov    rax,QWORD PTR [rbp-0x38]
  41233a:	mov    esi,0x3
  41233f:	mov    rdi,rax
  412342:	call   404d04 <_start@@Base+0xa54>
  412347:	mov    QWORD PTR [rbp-0x28],rax
  41234b:	cmp    QWORD PTR [rbp-0x28],0x3
  412350:	je     412363 <test_scan@@Base+0xb25>
  412352:	lea    rdi,[rip+0xdfe7]        # 420340 <_IO_stdin_used@@Base+0x2340>
  412359:	call   4041a0 <puts@plt>
  41235e:	jmp    412578 <test_scan@@Base+0xd3a>
  412363:	mov    rdx,QWORD PTR [rip+0x19d66]        # 42c0d0 <__data_start@@Base+0x18>
  41236a:	mov    rax,QWORD PTR [rbp-0x38]
  41236e:	mov    ecx,0x3
  412373:	mov    esi,0x3
  412378:	mov    rdi,rax
  41237b:	call   404d6c <_start@@Base+0xabc>
  412380:	mov    QWORD PTR [rbp-0x28],rax
  412384:	cmp    QWORD PTR [rbp-0x28],0x3
  412389:	je     41239c <test_scan@@Base+0xb5e>
  41238b:	lea    rdi,[rip+0xe016]        # 4203a8 <_IO_stdin_used@@Base+0x23a8>
  412392:	call   4041a0 <puts@plt>
  412397:	jmp    412578 <test_scan@@Base+0xd3a>
  41239c:	mov    rdx,QWORD PTR [rip+0x19d2d]        # 42c0d0 <__data_start@@Base+0x18>
  4123a3:	mov    rax,QWORD PTR [rbp-0x38]
  4123a7:	mov    ecx,0x3
  4123ac:	mov    esi,0x4
  4123b1:	mov    rdi,rax
  4123b4:	call   404d6c <_start@@Base+0xabc>
  4123b9:	mov    QWORD PTR [rbp-0x28],rax
  4123bd:	cmp    QWORD PTR [rbp-0x28],0x5
  4123c2:	je     4123d5 <test_scan@@Base+0xb97>
  4123c4:	lea    rdi,[rip+0xe01d]        # 4203e8 <_IO_stdin_used@@Base+0x23e8>
  4123cb:	call   4041a0 <puts@plt>
  4123d0:	jmp    412578 <test_scan@@Base+0xd3a>
  4123d5:	mov    rax,QWORD PTR [rbp-0x38]
  4123d9:	mov    esi,0x3
  4123de:	mov    rdi,rax
  4123e1:	call   404df4 <_start@@Base+0xb44>
  4123e6:	mov    QWORD PTR [rbp-0x28],rax
  4123ea:	cmp    QWORD PTR [rbp-0x28],0x5
  4123ef:	je     412402 <test_scan@@Base+0xbc4>
  4123f1:	lea    rdi,[rip+0xe030]        # 420428 <_IO_stdin_used@@Base+0x2428>
  4123f8:	call   4041a0 <puts@plt>
  4123fd:	jmp    412578 <test_scan@@Base+0xd3a>
  412402:	mov    rax,QWORD PTR [rbp-0x38]
  412406:	mov    ecx,0x3
  41240b:	mov    edx,0x4
  412410:	mov    esi,0x1
  412415:	mov    rdi,rax
  412418:	call   404e5f <_start@@Base+0xbaf>
  41241d:	mov    QWORD PTR [rbp-0x28],rax
  412421:	cmp    QWORD PTR [rbp-0x28],0x3
  412426:	je     412439 <test_scan@@Base+0xbfb>
  412428:	lea    rdi,[rip+0xe031]        # 420460 <_IO_stdin_used@@Base+0x2460>
  41242f:	call   4041a0 <puts@plt>
  412434:	jmp    412578 <test_scan@@Base+0xd3a>
  412439:	mov    rax,QWORD PTR [rbp-0x30]
  41243d:	lea    rsi,[rip+0xd2d6]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  412444:	mov    rdi,rax
  412447:	call   40511a <_start@@Base+0xe6a>
  41244c:	mov    rdx,QWORD PTR [rip+0x19c7d]        # 42c0d0 <__data_start@@Base+0x18>
  412453:	mov    rax,QWORD PTR [rbp-0x30]
  412457:	lea    rcx,[rip+0xd2bc]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  41245e:	mov    esi,0x0
  412463:	mov    rdi,rax
  412466:	call   405201 <_start@@Base+0xf51>
  41246b:	mov    rax,QWORD PTR [rbp-0x30]
  41246f:	mov    edx,0x4
  412474:	lea    rsi,[rip+0xd29f]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  41247b:	mov    rdi,rax
  41247e:	call   40518c <_start@@Base+0xedc>
  412483:	mov    rdx,QWORD PTR [rip+0x19c46]        # 42c0d0 <__data_start@@Base+0x18>
  41248a:	mov    rax,QWORD PTR [rbp-0x30]
  41248e:	mov    r8d,0x4
  412494:	lea    rcx,[rip+0xd27f]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  41249b:	mov    esi,0x0
  4124a0:	mov    rdi,rax
  4124a3:	call   405293 <_start@@Base+0xfe3>
  4124a8:	mov    rax,QWORD PTR [rbp-0x30]
  4124ac:	lea    rsi,[rip+0xd267]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  4124b3:	mov    rdi,rax
  4124b6:	call   405328 <_start@@Base+0x1078>
  4124bb:	mov    rdx,QWORD PTR [rip+0x19c0e]        # 42c0d0 <__data_start@@Base+0x18>
  4124c2:	mov    rax,QWORD PTR [rbp-0x30]
  4124c6:	lea    rcx,[rip+0xd24d]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  4124cd:	mov    esi,0x0
  4124d2:	mov    rdi,rax
  4124d5:	call   405415 <_start@@Base+0x1165>
  4124da:	mov    rax,QWORD PTR [rbp-0x30]
  4124de:	mov    edx,0x4
  4124e3:	lea    rsi,[rip+0xd230]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  4124ea:	mov    rdi,rax
  4124ed:	call   40539d <_start@@Base+0x10ed>
  4124f2:	mov    rdx,QWORD PTR [rip+0x19bd7]        # 42c0d0 <__data_start@@Base+0x18>
  4124f9:	mov    rax,QWORD PTR [rbp-0x30]
  4124fd:	mov    r8d,0x4
  412503:	lea    rcx,[rip+0xd210]        # 41f71a <_IO_stdin_used@@Base+0x171a>
  41250a:	mov    esi,0x0
  41250f:	mov    rdi,rax
  412512:	call   4054ab <_start@@Base+0x11fb>
  412517:	mov    rax,QWORD PTR [rbp-0x40]
  41251b:	mov    esi,0xd
  412520:	mov    rdi,rax
  412523:	call   40675a <_start@@Base+0x24aa>
  412528:	mov    rdx,QWORD PTR [rip+0x19ba1]        # 42c0d0 <__data_start@@Base+0x18>
  41252f:	mov    rax,QWORD PTR [rbp-0x40]
  412533:	mov    ecx,0x2a
  412538:	mov    esi,0x1
  41253d:	mov    rdi,rax
  412540:	call   4067ce <_start@@Base+0x251e>
  412545:	mov    rax,QWORD PTR [rbp-0x40]
  412549:	mov    esi,0x1
  41254e:	mov    rdi,rax
  412551:	call   406862 <_start@@Base+0x25b2>
  412556:	mov    rax,QWORD PTR [rbp-0x40]
  41255a:	mov    ecx,0x2a
  41255f:	mov    edx,0x2
  412564:	mov    esi,0x0
  412569:	mov    rdi,rax
  41256c:	call   4068d9 <_start@@Base+0x2629>
  412571:	mov    DWORD PTR [rbp-0x5c],0x0
  412578:	mov    rax,QWORD PTR [rbp-0x50]
  41257c:	mov    rdi,rax
  41257f:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  412584:	mov    eax,DWORD PTR [rbp-0x5c]
  412587:	mov    rbx,QWORD PTR [rbp-0x18]
  41258b:	xor    rbx,QWORD PTR fs:0x28
  412594:	je     41259b <test_scan@@Base+0xd5d>
  412596:	call   4041c0 <__stack_chk_fail@plt>
  41259b:	add    rsp,0x68
  41259f:	pop    rbx
  4125a0:	pop    rbp
  4125a1:	ret    

00000000004125a2 <test_basic_sort@@Base>:
  4125a2:	endbr64 
  4125a6:	push   rbp
  4125a7:	mov    rbp,rsp
  4125aa:	push   rbx
  4125ab:	sub    rsp,0x68
  4125af:	mov    QWORD PTR [rbp-0x68],rdi
  4125b3:	mov    rax,QWORD PTR fs:0x28
  4125bc:	mov    QWORD PTR [rbp-0x18],rax
  4125c0:	xor    eax,eax
  4125c2:	mov    BYTE PTR [rbp-0x26],0x6
  4125c6:	mov    BYTE PTR [rbp-0x25],0x7
  4125ca:	mov    BYTE PTR [rbp-0x24],0x1
  4125ce:	mov    BYTE PTR [rbp-0x23],0x3
  4125d2:	mov    BYTE PTR [rbp-0x22],0x4
  4125d6:	mov    BYTE PTR [rbp-0x21],0x3
  4125da:	mov    BYTE PTR [rbp-0x20],0x2
  4125de:	mov    BYTE PTR [rbp-0x1f],0x1
  4125e2:	mov    BYTE PTR [rbp-0x1e],0x2
  4125e6:	mov    BYTE PTR [rbp-0x1d],0x3
  4125ea:	mov    BYTE PTR [rbp-0x1c],0x3
  4125ee:	mov    BYTE PTR [rbp-0x1b],0x4
  4125f2:	mov    BYTE PTR [rbp-0x1a],0x6
  4125f6:	mov    BYTE PTR [rbp-0x19],0x7
  4125fa:	mov    rax,QWORD PTR [rbp-0x68]
  4125fe:	mov    rdi,rax
  412601:	call   416246 <flatcc_builder_reset@@Base>
  412606:	mov    rax,QWORD PTR [rbp-0x68]
  41260a:	mov    rdi,rax
  41260d:	call   40c16b <_start@@Base+0x7ebb>
  412612:	mov    rax,QWORD PTR [rbp-0x68]
  412616:	lea    rsi,[rip+0xc5d2]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  41261d:	mov    rdi,rax
  412620:	call   40b2b9 <_start@@Base+0x7009>
  412625:	lea    rcx,[rbp-0x26]
  412629:	mov    rax,QWORD PTR [rbp-0x68]
  41262d:	mov    edx,0x7
  412632:	mov    rsi,rcx
  412635:	mov    rdi,rax
  412638:	call   40b5a2 <_start@@Base+0x72f2>
  41263d:	mov    rax,QWORD PTR [rbp-0x68]
  412641:	mov    rdi,rax
  412644:	call   40c1db <_start@@Base+0x7f2b>
  412649:	lea    rdx,[rbp-0x50]
  41264d:	mov    rax,QWORD PTR [rbp-0x68]
  412651:	mov    rsi,rdx
  412654:	mov    rdi,rax
  412657:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  41265c:	mov    QWORD PTR [rbp-0x48],rax
  412660:	mov    rax,QWORD PTR [rbp-0x48]
  412664:	mov    rdi,rax
  412667:	call   40643b <_start@@Base+0x218b>
  41266c:	mov    QWORD PTR [rbp-0x40],rax
  412670:	mov    rax,QWORD PTR [rbp-0x40]
  412674:	mov    rdi,rax
  412677:	call   4077ec <_start@@Base+0x353c>
  41267c:	mov    QWORD PTR [rbp-0x38],rax
  412680:	mov    rax,QWORD PTR [rbp-0x38]
  412684:	mov    QWORD PTR [rbp-0x30],rax
  412688:	mov    rax,QWORD PTR [rbp-0x30]
  41268c:	mov    rdi,rax
  41268f:	call   4050a9 <_start@@Base+0xdf9>
  412694:	mov    rax,QWORD PTR [rbp-0x38]
  412698:	mov    rdi,rax
  41269b:	call   404bba <_start@@Base+0x90a>
  4126a0:	cmp    rax,0x7
  4126a4:	je     4126c5 <test_basic_sort@@Base+0x123>
  4126a6:	lea    rcx,[rip+0xf4e3]        # 421b90 <_IO_stdin_used@@Base+0x3b90>
  4126ad:	mov    edx,0x610
  4126b2:	lea    rsi,[rip+0xce4f]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4126b9:	lea    rdi,[rip+0xddd8]        # 420498 <_IO_stdin_used@@Base+0x2498>
  4126c0:	call   4041f0 <__assert_fail@plt>
  4126c5:	mov    BYTE PTR [rbp-0x52],0x0
  4126c9:	jmp    412745 <test_basic_sort@@Base+0x1a3>
  4126cb:	movzx  edx,BYTE PTR [rbp-0x52]
  4126cf:	mov    rax,QWORD PTR [rbp-0x38]
  4126d3:	mov    rsi,rdx
  4126d6:	mov    rdi,rax
  4126d9:	call   404bd4 <_start@@Base+0x924>
  4126de:	mov    BYTE PTR [rbp-0x51],al
  4126e1:	movzx  eax,BYTE PTR [rbp-0x52]
  4126e5:	cdqe   
  4126e7:	movzx  eax,BYTE PTR [rbp+rax*1-0x1f]
  4126ec:	cmp    BYTE PTR [rbp-0x51],al
  4126ef:	je     412704 <test_basic_sort@@Base+0x162>
  4126f1:	lea    rdi,[rip+0xddce]        # 4204c6 <_IO_stdin_used@@Base+0x24c6>
  4126f8:	call   4041a0 <puts@plt>
  4126fd:	mov    eax,0xffffffff
  412702:	jmp    412763 <test_basic_sort@@Base+0x1c1>
  412704:	movzx  edx,BYTE PTR [rbp-0x51]
  412708:	mov    rax,QWORD PTR [rbp-0x38]
  41270c:	mov    esi,edx
  41270e:	mov    rdi,rax
  412711:	call   404c2a <_start@@Base+0x97a>
  412716:	mov    rdx,rax
  412719:	cmp    BYTE PTR [rbp-0x52],0x3
  41271d:	je     412725 <test_basic_sort@@Base+0x183>
  41271f:	movzx  eax,BYTE PTR [rbp-0x52]
  412723:	jmp    41272a <test_basic_sort@@Base+0x188>
  412725:	mov    eax,0x2
  41272a:	cmp    rax,rdx
  41272d:	je     412742 <test_basic_sort@@Base+0x1a0>
  41272f:	lea    rdi,[rip+0xdda5]        # 4204db <_IO_stdin_used@@Base+0x24db>
  412736:	call   4041a0 <puts@plt>
  41273b:	mov    eax,0xffffffff
  412740:	jmp    412763 <test_basic_sort@@Base+0x1c1>
  412742:	inc    BYTE PTR [rbp-0x52]
  412745:	movzx  ebx,BYTE PTR [rbp-0x52]
  412749:	mov    rax,QWORD PTR [rbp-0x38]
  41274d:	mov    rdi,rax
  412750:	call   404bba <_start@@Base+0x90a>
  412755:	cmp    rbx,rax
  412758:	jb     4126cb <test_basic_sort@@Base+0x129>
  41275e:	mov    eax,0x0
  412763:	mov    rbx,QWORD PTR [rbp-0x18]
  412767:	xor    rbx,QWORD PTR fs:0x28
  412770:	je     412777 <test_basic_sort@@Base+0x1d5>
  412772:	call   4041c0 <__stack_chk_fail@plt>
  412777:	add    rsp,0x68
  41277b:	pop    rbx
  41277c:	pop    rbp
  41277d:	ret    

000000000041277e <test_clone_slice@@Base>:
  41277e:	endbr64 
  412782:	push   rbp
  412783:	mov    rbp,rsp
  412786:	add    rsp,0xffffffffffffff80
  41278a:	mov    QWORD PTR [rbp-0x78],rdi
  41278e:	mov    rax,QWORD PTR fs:0x28
  412797:	mov    QWORD PTR [rbp-0x8],rax
  41279b:	xor    eax,eax
  41279d:	mov    DWORD PTR [rbp-0x70],0xffffffff
  4127a4:	mov    BYTE PTR [rbp-0xf],0x0
  4127a8:	mov    BYTE PTR [rbp-0xe],0x1
  4127ac:	mov    BYTE PTR [rbp-0xd],0x0
  4127b0:	mov    BYTE PTR [rbp-0xc],0x0
  4127b4:	mov    BYTE PTR [rbp-0xb],0x1
  4127b8:	mov    BYTE PTR [rbp-0xa],0x0
  4127bc:	mov    BYTE PTR [rbp-0x9],0x0
  4127c0:	mov    rax,QWORD PTR [rbp-0x78]
  4127c4:	mov    rdi,rax
  4127c7:	call   416246 <flatcc_builder_reset@@Base>
  4127cc:	mov    rax,QWORD PTR [rbp-0x78]
  4127d0:	mov    rdi,rax
  4127d3:	call   40c16b <_start@@Base+0x7ebb>
  4127d8:	mov    rax,QWORD PTR [rbp-0x78]
  4127dc:	lea    rsi,[rip+0xdd16]        # 4204f9 <_IO_stdin_used@@Base+0x24f9>
  4127e3:	mov    rdi,rax
  4127e6:	call   40b2b9 <_start@@Base+0x7009>
  4127eb:	lea    rcx,[rbp-0xf]
  4127ef:	mov    rax,QWORD PTR [rbp-0x78]
  4127f3:	mov    edx,0x7
  4127f8:	mov    rsi,rcx
  4127fb:	mov    rdi,rax
  4127fe:	call   40b955 <_start@@Base+0x76a5>
  412803:	mov    rax,QWORD PTR [rbp-0x78]
  412807:	mov    rdi,rax
  41280a:	call   40bcf7 <_start@@Base+0x7a47>
  41280f:	mov    rax,QWORD PTR [rbp-0x78]
  412813:	mov    esi,0x2
  412818:	mov    rdi,rax
  41281b:	call   40bdb2 <_start@@Base+0x7b02>
  412820:	mov    QWORD PTR [rbp-0x60],rax
  412824:	mov    rax,QWORD PTR [rbp-0x60]
  412828:	mov    WORD PTR [rax],0x16
  41282d:	mov    rax,QWORD PTR [rbp-0x60]
  412831:	add    rax,0x4
  412835:	mov    WORD PTR [rax],0x2c
  41283a:	mov    rax,QWORD PTR [rbp-0x78]
  41283e:	mov    rdi,rax
  412841:	call   40bd11 <_start@@Base+0x7a61>
  412846:	mov    rax,QWORD PTR [rbp-0x78]
  41284a:	mov    rdi,rax
  41284d:	call   40b035 <_start@@Base+0x6d85>
  412852:	vmovss xmm0,DWORD PTR [rip+0xf9b6]        # 422210 <_IO_stdin_used@@Base+0x4210>
  41285a:	vmovss DWORD PTR [rax],xmm0
  41285e:	mov    rax,QWORD PTR [rbp-0x78]
  412862:	mov    rdi,rax
  412865:	call   40c1db <_start@@Base+0x7f2b>
  41286a:	lea    rdx,[rbp-0x68]
  41286e:	mov    rax,QWORD PTR [rbp-0x78]
  412872:	mov    rsi,rdx
  412875:	mov    rdi,rax
  412878:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  41287d:	mov    QWORD PTR [rbp-0x58],rax
  412881:	mov    rax,QWORD PTR [rip+0x19770]        # 42bff8 <stderr@GLIBC_2.2.5>
  412888:	mov    rcx,QWORD PTR [rax]
  41288b:	mov    rdx,QWORD PTR [rbp-0x68]
  41288f:	mov    rax,QWORD PTR [rbp-0x58]
  412893:	mov    rsi,rax
  412896:	lea    rdi,[rip+0xdc67]        # 420504 <_IO_stdin_used@@Base+0x2504>
  41289d:	call   40e441 <_start@@Base+0xa191>
  4128a2:	mov    rax,QWORD PTR [rbp-0x58]
  4128a6:	mov    rdi,rax
  4128a9:	call   40643b <_start@@Base+0x218b>
  4128ae:	mov    QWORD PTR [rbp-0x50],rax
  4128b2:	mov    rax,QWORD PTR [rbp-0x78]
  4128b6:	mov    rdi,rax
  4128b9:	call   416246 <flatcc_builder_reset@@Base>
  4128be:	mov    rax,QWORD PTR [rbp-0x78]
  4128c2:	mov    rdi,rax
  4128c5:	call   40c16b <_start@@Base+0x7ebb>
  4128ca:	mov    rax,QWORD PTR [rbp-0x50]
  4128ce:	mov    rdi,rax
  4128d1:	call   406adb <_start@@Base+0x282b>
  4128d6:	mov    QWORD PTR [rbp-0x48],rax
  4128da:	cmp    QWORD PTR [rbp-0x48],0x0
  4128df:	jne    412900 <test_clone_slice@@Base+0x182>
  4128e1:	lea    rcx,[rip+0xf2b8]        # 421ba0 <_IO_stdin_used@@Base+0x3ba0>
  4128e8:	mov    edx,0x644
  4128ed:	lea    rsi,[rip+0xcc14]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4128f4:	lea    rdi,[rip+0xdc23]        # 42051e <_IO_stdin_used@@Base+0x251e>
  4128fb:	call   4041f0 <__assert_fail@plt>
  412900:	mov    rax,QWORD PTR [rbp-0x50]
  412904:	mov    rdi,rax
  412907:	call   407a6b <_start@@Base+0x37bb>
  41290c:	mov    QWORD PTR [rbp-0x40],rax
  412910:	cmp    QWORD PTR [rbp-0x40],0x0
  412915:	jne    412936 <test_clone_slice@@Base+0x1b8>
  412917:	lea    rcx,[rip+0xf282]        # 421ba0 <_IO_stdin_used@@Base+0x3ba0>
  41291e:	mov    edx,0x646
  412923:	lea    rsi,[rip+0xcbde]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41292a:	lea    rdi,[rip+0xdbf2]        # 420523 <_IO_stdin_used@@Base+0x2523>
  412931:	call   4041f0 <__assert_fail@plt>
  412936:	mov    rax,QWORD PTR [rbp-0x50]
  41293a:	mov    rdi,rax
  41293d:	call   407f57 <_start@@Base+0x3ca7>
  412942:	mov    QWORD PTR [rbp-0x38],rax
  412946:	cmp    QWORD PTR [rbp-0x38],0x0
  41294b:	jne    41296c <test_clone_slice@@Base+0x1ee>
  41294d:	lea    rcx,[rip+0xf24c]        # 421ba0 <_IO_stdin_used@@Base+0x3ba0>
  412954:	mov    edx,0x648
  412959:	lea    rsi,[rip+0xcba8]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  412960:	lea    rdi,[rip+0xdbc2]        # 420529 <_IO_stdin_used@@Base+0x2529>
  412967:	call   4041f0 <__assert_fail@plt>
  41296c:	mov    rdx,QWORD PTR [rbp-0x48]
  412970:	mov    rax,QWORD PTR [rbp-0x78]
  412974:	mov    rsi,rdx
  412977:	mov    rdi,rax
  41297a:	call   40b32b <_start@@Base+0x707b>
  41297f:	mov    rax,QWORD PTR [rbp-0x78]
  412983:	mov    rdi,rax
  412986:	call   40b7d1 <_start@@Base+0x7521>
  41298b:	mov    rdx,QWORD PTR [rbp-0x48]
  41298f:	mov    rax,QWORD PTR [rbp-0x78]
  412993:	mov    rsi,rdx
  412996:	mov    rdi,rax
  412999:	call   40b852 <_start@@Base+0x75a2>
  41299e:	mov    rsi,QWORD PTR [rbp-0x48]
  4129a2:	mov    rax,QWORD PTR [rbp-0x78]
  4129a6:	mov    ecx,0x14
  4129ab:	mov    edx,0x4
  4129b0:	mov    rdi,rax
  4129b3:	call   40b887 <_start@@Base+0x75d7>
  4129b8:	mov    rsi,QWORD PTR [rbp-0x48]
  4129bc:	mov    rax,QWORD PTR [rbp-0x78]
  4129c0:	mov    ecx,0x3
  4129c5:	mov    edx,0x0
  4129ca:	mov    rdi,rax
  4129cd:	call   40b887 <_start@@Base+0x75d7>
  4129d2:	mov    rax,QWORD PTR [rbp-0x78]
  4129d6:	mov    rdi,rax
  4129d9:	call   40b7eb <_start@@Base+0x753b>
  4129de:	mov    rax,QWORD PTR [rbp-0x78]
  4129e2:	mov    rdi,rax
  4129e5:	call   40a758 <_start@@Base+0x64a8>
  4129ea:	mov    rsi,QWORD PTR [rbp-0x48]
  4129ee:	mov    rax,QWORD PTR [rbp-0x78]
  4129f2:	mov    ecx,0x14
  4129f7:	mov    edx,0x2
  4129fc:	mov    rdi,rax
  4129ff:	call   40b360 <_start@@Base+0x70b0>
  412a04:	mov    rdx,QWORD PTR [rbp-0x40]
  412a08:	mov    rax,QWORD PTR [rbp-0x78]
  412a0c:	mov    rsi,rdx
  412a0f:	mov    rdi,rax
  412a12:	call   40b992 <_start@@Base+0x76e2>
  412a17:	mov    rsi,QWORD PTR [rbp-0x38]
  412a1b:	mov    rax,QWORD PTR [rbp-0x78]
  412a1f:	mov    ecx,0x2
  412a24:	mov    edx,0x1
  412a29:	mov    rdi,rax
  412a2c:	call   40bd70 <_start@@Base+0x7ac0>
  412a31:	mov    rax,QWORD PTR [rbp-0x78]
  412a35:	mov    rdi,rax
  412a38:	call   40a777 <_start@@Base+0x64c7>
  412a3d:	mov    DWORD PTR [rbp-0x6c],eax
  412a40:	mov    eax,DWORD PTR [rbp-0x6c]
  412a43:	mov    edi,eax
  412a45:	call   40a957 <_start@@Base+0x66a7>
  412a4a:	mov    rdx,rax
  412a4d:	mov    rax,QWORD PTR [rbp-0x78]
  412a51:	mov    rsi,rdx
  412a54:	mov    rdi,rax
  412a57:	call   40bac2 <_start@@Base+0x7812>
  412a5c:	mov    rsi,QWORD PTR [rbp-0x40]
  412a60:	mov    rax,QWORD PTR [rbp-0x78]
  412a64:	mov    rcx,0xffffffffffffffff
  412a6b:	mov    edx,0x3
  412a70:	mov    rdi,rax
  412a73:	call   40b9c7 <_start@@Base+0x7717>
  412a78:	mov    rax,QWORD PTR [rbp-0x50]
  412a7c:	mov    rdi,rax
  412a7f:	call   40648e <_start@@Base+0x21de>
  412a84:	mov    rdx,rax
  412a87:	mov    rax,QWORD PTR [rbp-0x78]
  412a8b:	mov    rsi,rdx
  412a8e:	mov    rdi,rax
  412a91:	call   40b06d <_start@@Base+0x6dbd>
  412a96:	mov    rdx,QWORD PTR [rbp-0x38]
  412a9a:	mov    rax,QWORD PTR [rbp-0x78]
  412a9e:	mov    rsi,rdx
  412aa1:	mov    rdi,rax
  412aa4:	call   40bd3b <_start@@Base+0x7a8b>
  412aa9:	mov    rax,QWORD PTR [rbp-0x78]
  412aad:	mov    rdi,rax
  412ab0:	call   40c1db <_start@@Base+0x7f2b>
  412ab5:	lea    rdx,[rbp-0x68]
  412ab9:	mov    rax,QWORD PTR [rbp-0x78]
  412abd:	mov    rsi,rdx
  412ac0:	mov    rdi,rax
  412ac3:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  412ac8:	mov    QWORD PTR [rbp-0x30],rax
  412acc:	mov    rax,QWORD PTR [rip+0x19525]        # 42bff8 <stderr@GLIBC_2.2.5>
  412ad3:	mov    rcx,QWORD PTR [rax]
  412ad6:	mov    rdx,QWORD PTR [rbp-0x68]
  412ada:	mov    rax,QWORD PTR [rbp-0x30]
  412ade:	mov    rsi,rax
  412ae1:	lea    rdi,[rip+0xda47]        # 42052f <_IO_stdin_used@@Base+0x252f>
  412ae8:	call   40e441 <_start@@Base+0xa191>
  412aed:	mov    rax,QWORD PTR [rbp-0x30]
  412af1:	mov    rdi,rax
  412af4:	call   40643b <_start@@Base+0x218b>
  412af9:	mov    QWORD PTR [rbp-0x28],rax
  412afd:	mov    rax,QWORD PTR [rbp-0x28]
  412b01:	mov    rdi,rax
  412b04:	call   406adb <_start@@Base+0x282b>
  412b09:	lea    rsi,[rip+0xd9e9]        # 4204f9 <_IO_stdin_used@@Base+0x24f9>
  412b10:	mov    rdi,rax
  412b13:	call   404240 <strcmp@plt>
  412b18:	test   eax,eax
  412b1a:	je     412b2d <test_clone_slice@@Base+0x3af>
  412b1c:	lea    rdi,[rip+0xda23]        # 420546 <_IO_stdin_used@@Base+0x2546>
  412b23:	call   4041a0 <puts@plt>
  412b28:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412b2d:	mov    rax,QWORD PTR [rbp-0x28]
  412b31:	mov    rdi,rax
  412b34:	call   407996 <_start@@Base+0x36e6>
  412b39:	mov    QWORD PTR [rbp-0x20],rax
  412b3d:	mov    rax,QWORD PTR [rbp-0x20]
  412b41:	mov    esi,0x0
  412b46:	mov    rdi,rax
  412b49:	call   404900 <_start@@Base+0x650>
  412b4e:	lea    rsi,[rip+0xd9a4]        # 4204f9 <_IO_stdin_used@@Base+0x24f9>
  412b55:	mov    rdi,rax
  412b58:	call   404240 <strcmp@plt>
  412b5d:	test   eax,eax
  412b5f:	je     412b72 <test_clone_slice@@Base+0x3f4>
  412b61:	lea    rdi,[rip+0xd9f8]        # 420560 <_IO_stdin_used@@Base+0x2560>
  412b68:	call   4041a0 <puts@plt>
  412b6d:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412b72:	mov    rax,QWORD PTR [rbp-0x20]
  412b76:	mov    esi,0x1
  412b7b:	mov    rdi,rax
  412b7e:	call   404900 <_start@@Base+0x650>
  412b83:	mov    rdi,rax
  412b86:	call   4048a4 <_start@@Base+0x5f4>
  412b8b:	cmp    rax,0x6
  412b8f:	je     412ba2 <test_clone_slice@@Base+0x424>
  412b91:	lea    rdi,[rip+0xd9e8]        # 420580 <_IO_stdin_used@@Base+0x2580>
  412b98:	call   4041a0 <puts@plt>
  412b9d:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412ba2:	mov    rax,QWORD PTR [rbp-0x20]
  412ba6:	mov    esi,0x1
  412bab:	mov    rdi,rax
  412bae:	call   404900 <_start@@Base+0x650>
  412bb3:	lea    rsi,[rip+0xd9ea]        # 4205a4 <_IO_stdin_used@@Base+0x25a4>
  412bba:	mov    rdi,rax
  412bbd:	call   404240 <strcmp@plt>
  412bc2:	test   eax,eax
  412bc4:	je     412bd7 <test_clone_slice@@Base+0x459>
  412bc6:	lea    rdi,[rip+0xd9de]        # 4205ab <_IO_stdin_used@@Base+0x25ab>
  412bcd:	call   4041a0 <puts@plt>
  412bd2:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412bd7:	mov    rax,QWORD PTR [rbp-0x20]
  412bdb:	mov    esi,0x2
  412be0:	mov    rdi,rax
  412be3:	call   404900 <_start@@Base+0x650>
  412be8:	mov    rdi,rax
  412beb:	call   4048a4 <_start@@Base+0x5f4>
  412bf0:	cmp    rax,0x3
  412bf4:	je     412c07 <test_clone_slice@@Base+0x489>
  412bf6:	lea    rdi,[rip+0xd9cb]        # 4205c8 <_IO_stdin_used@@Base+0x25c8>
  412bfd:	call   4041a0 <puts@plt>
  412c02:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412c07:	mov    rax,QWORD PTR [rbp-0x20]
  412c0b:	mov    esi,0x2
  412c10:	mov    rdi,rax
  412c13:	call   404900 <_start@@Base+0x650>
  412c18:	lea    rsi,[rip+0xd9c9]        # 4205e8 <_IO_stdin_used@@Base+0x25e8>
  412c1f:	mov    rdi,rax
  412c22:	call   404240 <strcmp@plt>
  412c27:	test   eax,eax
  412c29:	je     412c3c <test_clone_slice@@Base+0x4be>
  412c2b:	lea    rdi,[rip+0xd9ba]        # 4205ec <_IO_stdin_used@@Base+0x25ec>
  412c32:	call   4041a0 <puts@plt>
  412c37:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412c3c:	mov    rax,QWORD PTR [rbp-0x28]
  412c40:	mov    rdi,rax
  412c43:	call   407e25 <_start@@Base+0x3b75>
  412c48:	mov    QWORD PTR [rbp-0x50],rax
  412c4c:	cmp    QWORD PTR [rbp-0x50],0x0
  412c51:	jne    412c72 <test_clone_slice@@Base+0x4f4>
  412c53:	lea    rcx,[rip+0xef46]        # 421ba0 <_IO_stdin_used@@Base+0x3ba0>
  412c5a:	mov    edx,0x680
  412c5f:	lea    rsi,[rip+0xc8a2]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  412c66:	lea    rdi,[rip+0xc906]        # 41f573 <_IO_stdin_used@@Base+0x1573>
  412c6d:	call   4041f0 <__assert_fail@plt>
  412c72:	mov    rax,QWORD PTR [rbp-0x50]
  412c76:	mov    rdi,rax
  412c79:	call   406adb <_start@@Base+0x282b>
  412c7e:	lea    rsi,[rip+0xd97d]        # 420602 <_IO_stdin_used@@Base+0x2602>
  412c85:	mov    rdi,rax
  412c88:	call   404240 <strcmp@plt>
  412c8d:	test   eax,eax
  412c8f:	je     412ca7 <test_clone_slice@@Base+0x529>
  412c91:	lea    rdi,[rip+0xd978]        # 420610 <_IO_stdin_used@@Base+0x2610>
  412c98:	mov    eax,0x0
  412c9d:	call   4041d0 <printf@plt>
  412ca2:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412ca7:	mov    rax,QWORD PTR [rbp-0x50]
  412cab:	mov    rdi,rax
  412cae:	call   407a6b <_start@@Base+0x37bb>
  412cb3:	mov    QWORD PTR [rbp-0x40],rax
  412cb7:	mov    rax,QWORD PTR [rbp-0x40]
  412cbb:	mov    rdi,rax
  412cbe:	call   404b4a <_start@@Base+0x89a>
  412cc3:	cmp    rax,0x7
  412cc7:	je     412cda <test_clone_slice@@Base+0x55c>
  412cc9:	lea    rdi,[rip+0xd970]        # 420640 <_IO_stdin_used@@Base+0x2640>
  412cd0:	call   4041a0 <puts@plt>
  412cd5:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412cda:	lea    rcx,[rbp-0xf]
  412cde:	mov    rax,QWORD PTR [rbp-0x40]
  412ce2:	mov    edx,0x7
  412ce7:	mov    rsi,rcx
  412cea:	mov    rdi,rax
  412ced:	call   404230 <memcmp@plt>
  412cf2:	test   eax,eax
  412cf4:	je     412d07 <test_clone_slice@@Base+0x589>
  412cf6:	lea    rdi,[rip+0xd95f]        # 42065c <_IO_stdin_used@@Base+0x265c>
  412cfd:	call   4041a0 <puts@plt>
  412d02:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412d07:	mov    rax,QWORD PTR [rbp-0x28]
  412d0b:	mov    rdi,rax
  412d0e:	call   407a6b <_start@@Base+0x37bb>
  412d13:	mov    QWORD PTR [rbp-0x40],rax
  412d17:	mov    rax,QWORD PTR [rbp-0x40]
  412d1b:	mov    rdi,rax
  412d1e:	call   404b4a <_start@@Base+0x89a>
  412d23:	cmp    rax,0x4
  412d27:	je     412d3a <test_clone_slice@@Base+0x5bc>
  412d29:	lea    rdi,[rip+0xd94a]        # 42067a <_IO_stdin_used@@Base+0x267a>
  412d30:	call   4041a0 <puts@plt>
  412d35:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412d3a:	lea    rax,[rbp-0xf]
  412d3e:	add    rax,0x3
  412d42:	mov    rcx,QWORD PTR [rbp-0x40]
  412d46:	mov    edx,0x4
  412d4b:	mov    rsi,rax
  412d4e:	mov    rdi,rcx
  412d51:	call   404230 <memcmp@plt>
  412d56:	test   eax,eax
  412d58:	je     412d6b <test_clone_slice@@Base+0x5ed>
  412d5a:	lea    rdi,[rip+0xd935]        # 420696 <_IO_stdin_used@@Base+0x2696>
  412d61:	call   4041a0 <puts@plt>
  412d66:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412d6b:	mov    rax,QWORD PTR [rbp-0x28]
  412d6f:	mov    rdi,rax
  412d72:	call   40648e <_start@@Base+0x21de>
  412d77:	vmovss xmm0,DWORD PTR [rax]
  412d7b:	vucomiss xmm0,DWORD PTR [rip+0xf48d]        # 422210 <_IO_stdin_used@@Base+0x4210>
  412d83:	jp     412d8f <test_clone_slice@@Base+0x611>
  412d85:	vucomiss xmm0,DWORD PTR [rip+0xf483]        # 422210 <_IO_stdin_used@@Base+0x4210>
  412d8d:	je     412da0 <test_clone_slice@@Base+0x622>
  412d8f:	lea    rdi,[rip+0xd91e]        # 4206b4 <_IO_stdin_used@@Base+0x26b4>
  412d96:	call   4041a0 <puts@plt>
  412d9b:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412da0:	mov    rax,QWORD PTR [rbp-0x28]
  412da4:	mov    rdi,rax
  412da7:	call   407f57 <_start@@Base+0x3ca7>
  412dac:	mov    QWORD PTR [rbp-0x38],rax
  412db0:	mov    rax,QWORD PTR [rbp-0x38]
  412db4:	mov    rdi,rax
  412db7:	call   4057a4 <_start@@Base+0x14f4>
  412dbc:	cmp    rax,0x2
  412dc0:	je     412dd3 <test_clone_slice@@Base+0x655>
  412dc2:	lea    rdi,[rip+0xd907]        # 4206d0 <_IO_stdin_used@@Base+0x26d0>
  412dc9:	call   4041a0 <puts@plt>
  412dce:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412dd3:	mov    rax,QWORD PTR [rbp-0x38]
  412dd7:	mov    esi,0x0
  412ddc:	mov    rdi,rax
  412ddf:	call   405743 <_start@@Base+0x1493>
  412de4:	mov    QWORD PTR [rbp-0x18],rax
  412de8:	mov    rax,QWORD PTR [rbp-0x18]
  412dec:	mov    rdi,rax
  412def:	call   4057d2 <_start@@Base+0x1522>
  412df4:	cmp    ax,0x16
  412df8:	je     412e0b <test_clone_slice@@Base+0x68d>
  412dfa:	lea    rdi,[rip+0xd902]        # 420703 <_IO_stdin_used@@Base+0x2703>
  412e01:	call   4041a0 <puts@plt>
  412e06:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412e0b:	mov    rax,QWORD PTR [rbp-0x38]
  412e0f:	mov    esi,0x0
  412e14:	mov    rdi,rax
  412e17:	call   405743 <_start@@Base+0x1493>
  412e1c:	movzx  eax,WORD PTR [rax]
  412e1f:	cmp    ax,0x16
  412e23:	je     412e36 <test_clone_slice@@Base+0x6b8>
  412e25:	lea    rdi,[rip+0xd8f4]        # 420720 <_IO_stdin_used@@Base+0x2720>
  412e2c:	call   4041a0 <puts@plt>
  412e31:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412e36:	mov    rax,QWORD PTR [rbp-0x38]
  412e3a:	mov    esi,0x1
  412e3f:	mov    rdi,rax
  412e42:	call   405743 <_start@@Base+0x1493>
  412e47:	mov    QWORD PTR [rbp-0x18],rax
  412e4b:	mov    rax,QWORD PTR [rbp-0x18]
  412e4f:	mov    rdi,rax
  412e52:	call   4057d2 <_start@@Base+0x1522>
  412e57:	cmp    ax,0x2c
  412e5b:	je     412e6b <test_clone_slice@@Base+0x6ed>
  412e5d:	lea    rdi,[rip+0xd8e6]        # 42074a <_IO_stdin_used@@Base+0x274a>
  412e64:	call   4041a0 <puts@plt>
  412e69:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412e6b:	mov    rax,QWORD PTR [rbp-0x50]
  412e6f:	mov    rdi,rax
  412e72:	call   407f57 <_start@@Base+0x3ca7>
  412e77:	mov    QWORD PTR [rbp-0x38],rax
  412e7b:	mov    rax,QWORD PTR [rbp-0x38]
  412e7f:	mov    rdi,rax
  412e82:	call   4057a4 <_start@@Base+0x14f4>
  412e87:	cmp    rax,0x1
  412e8b:	je     412e9b <test_clone_slice@@Base+0x71d>
  412e8d:	lea    rdi,[rip+0xd8d1]        # 420765 <_IO_stdin_used@@Base+0x2765>
  412e94:	call   4041a0 <puts@plt>
  412e99:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412e9b:	mov    rax,QWORD PTR [rbp-0x38]
  412e9f:	mov    esi,0x0
  412ea4:	mov    rdi,rax
  412ea7:	call   405743 <_start@@Base+0x1493>
  412eac:	mov    QWORD PTR [rbp-0x18],rax
  412eb0:	mov    rax,QWORD PTR [rbp-0x18]
  412eb4:	mov    rdi,rax
  412eb7:	call   4057d2 <_start@@Base+0x1522>
  412ebc:	cmp    ax,0x2c
  412ec0:	je     412ed0 <test_clone_slice@@Base+0x752>
  412ec2:	lea    rdi,[rip+0xd8bf]        # 420788 <_IO_stdin_used@@Base+0x2788>
  412ec9:	call   4041a0 <puts@plt>
  412ece:	jmp    412ed7 <test_clone_slice@@Base+0x759>
  412ed0:	mov    DWORD PTR [rbp-0x70],0x0
  412ed7:	mov    rax,QWORD PTR [rbp-0x58]
  412edb:	mov    rdi,rax
  412ede:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  412ee3:	mov    eax,DWORD PTR [rbp-0x70]
  412ee6:	mov    rcx,QWORD PTR [rbp-0x8]
  412eea:	xor    rcx,QWORD PTR fs:0x28
  412ef3:	je     412efa <test_clone_slice@@Base+0x77c>
  412ef5:	call   4041c0 <__stack_chk_fail@plt>
  412efa:	leave  
  412efb:	ret    

0000000000412efc <test_create_add_field@@Base>:
  412efc:	endbr64 
  412f00:	push   rbp
  412f01:	mov    rbp,rsp
  412f04:	sub    rsp,0x40
  412f08:	mov    QWORD PTR [rbp-0x38],rdi
  412f0c:	mov    rax,QWORD PTR fs:0x28
  412f15:	mov    QWORD PTR [rbp-0x8],rax
  412f19:	xor    eax,eax
  412f1b:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  412f22:	mov    rax,QWORD PTR [rbp-0x38]
  412f26:	mov    rdi,rax
  412f29:	call   416246 <flatcc_builder_reset@@Base>
  412f2e:	mov    rax,QWORD PTR [rbp-0x38]
  412f32:	mov    rdi,rax
  412f35:	call   40c16b <_start@@Base+0x7ebb>
  412f3a:	mov    rax,QWORD PTR [rbp-0x38]
  412f3e:	lea    rsi,[rip+0xbcaa]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  412f45:	mov    rdi,rax
  412f48:	call   40b2b9 <_start@@Base+0x7009>
  412f4d:	mov    rax,QWORD PTR [rbp-0x38]
  412f51:	lea    rsi,[rip+0xd854]        # 4207ac <_IO_stdin_used@@Base+0x27ac>
  412f58:	mov    rdi,rax
  412f5b:	call   409cba <_start@@Base+0x5a0a>
  412f60:	mov    esi,eax
  412f62:	mov    rax,QWORD PTR [rbp-0x38]
  412f66:	mov    ecx,0x2
  412f6b:	mov    rdx,0xffffffffffffff9c
  412f72:	mov    rdi,rax
  412f75:	call   40c081 <_start@@Base+0x7dd1>
  412f7a:	mov    rax,QWORD PTR [rbp-0x38]
  412f7e:	mov    esi,0x0
  412f83:	mov    rdi,rax
  412f86:	call   40ba36 <_start@@Base+0x7786>
  412f8b:	mov    rax,QWORD PTR [rbp-0x38]
  412f8f:	mov    rdi,rax
  412f92:	call   40c1db <_start@@Base+0x7f2b>
  412f97:	lea    rdx,[rbp-0x28]
  412f9b:	mov    rax,QWORD PTR [rbp-0x38]
  412f9f:	mov    rsi,rdx
  412fa2:	mov    rdi,rax
  412fa5:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  412faa:	mov    QWORD PTR [rbp-0x20],rax
  412fae:	mov    rax,QWORD PTR [rbp-0x20]
  412fb2:	mov    rdi,rax
  412fb5:	call   40643b <_start@@Base+0x218b>
  412fba:	mov    QWORD PTR [rbp-0x18],rax
  412fbe:	mov    rax,QWORD PTR [rbp-0x18]
  412fc2:	mov    rdi,rax
  412fc5:	call   407cbb <_start@@Base+0x3a0b>
  412fca:	test   eax,eax
  412fcc:	je     412fdc <test_create_add_field@@Base+0xe0>
  412fce:	lea    rdi,[rip+0xd7e3]        # 4207b8 <_IO_stdin_used@@Base+0x27b8>
  412fd5:	call   4041a0 <puts@plt>
  412fda:	jmp    413013 <test_create_add_field@@Base+0x117>
  412fdc:	mov    rax,QWORD PTR [rbp-0x18]
  412fe0:	mov    rdi,rax
  412fe3:	call   408164 <_start@@Base+0x3eb4>
  412fe8:	mov    QWORD PTR [rbp-0x10],rax
  412fec:	mov    rax,QWORD PTR [rbp-0x10]
  412ff0:	mov    rdi,rax
  412ff3:	call   405e6f <_start@@Base+0x1bbf>
  412ff8:	cmp    rax,0xffffffffffffff9c
  412ffc:	je     41300c <test_create_add_field@@Base+0x110>
  412ffe:	lea    rdi,[rip+0xd7e0]        # 4207e5 <_IO_stdin_used@@Base+0x27e5>
  413005:	call   4041a0 <puts@plt>
  41300a:	jmp    413013 <test_create_add_field@@Base+0x117>
  41300c:	mov    DWORD PTR [rbp-0x2c],0x0
  413013:	mov    rax,QWORD PTR [rbp-0x20]
  413017:	mov    rdi,rax
  41301a:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  41301f:	mov    eax,DWORD PTR [rbp-0x2c]
  413022:	mov    rcx,QWORD PTR [rbp-0x8]
  413026:	xor    rcx,QWORD PTR fs:0x28
  41302f:	je     413036 <test_create_add_field@@Base+0x13a>
  413031:	call   4041c0 <__stack_chk_fail@plt>
  413036:	leave  
  413037:	ret    

0000000000413038 <test_union_vector@@Base>:
  413038:	endbr64 
  41303c:	push   rbp
  41303d:	mov    rbp,rsp
  413040:	push   rbx
  413041:	sub    rsp,0xa8
  413048:	mov    QWORD PTR [rbp-0xa8],rdi
  41304f:	mov    rax,QWORD PTR fs:0x28
  413058:	mov    QWORD PTR [rbp-0x18],rax
  41305c:	xor    eax,eax
  41305e:	mov    DWORD PTR [rbp-0x94],0xffffffff
  413068:	mov    rax,QWORD PTR [rbp-0xa8]
  41306f:	mov    rdi,rax
  413072:	call   416246 <flatcc_builder_reset@@Base>
  413077:	mov    rax,QWORD PTR [rbp-0xa8]
  41307e:	mov    rdi,rax
  413081:	call   40c16b <_start@@Base+0x7ebb>
  413086:	mov    rax,QWORD PTR [rbp-0xa8]
  41308d:	lea    rsi,[rip+0xd764]        # 4207f8 <_IO_stdin_used@@Base+0x27f8>
  413094:	mov    rdi,rax
  413097:	call   40b2b9 <_start@@Base+0x7009>
  41309c:	mov    rax,QWORD PTR [rbp-0xa8]
  4130a3:	mov    r8d,0x2
  4130a9:	mov    ecx,0x2
  4130ae:	mov    edx,0x2
  4130b3:	mov    esi,0x2
  4130b8:	mov    rdi,rax
  4130bb:	call   40ad69 <_start@@Base+0x6ab9>
  4130c0:	mov    DWORD PTR [rbp-0x90],eax
  4130c6:	mov    rax,QWORD PTR [rbp-0xa8]
  4130cd:	mov    rdi,rax
  4130d0:	call   40a99c <_start@@Base+0x66ec>
  4130d5:	mov    eax,DWORD PTR [rbp-0x90]
  4130db:	mov    edi,eax
  4130dd:	call   40a96e <_start@@Base+0x66be>
  4130e2:	mov    rdx,rax
  4130e5:	mov    rax,QWORD PTR [rbp-0xa8]
  4130ec:	mov    rsi,rdx
  4130ef:	mov    rdi,rax
  4130f2:	call   40a9d0 <_start@@Base+0x6720>
  4130f7:	mov    rax,QWORD PTR [rbp-0xa8]
  4130fe:	mov    rdi,rax
  413101:	call   40a9b6 <_start@@Base+0x6706>
  413106:	mov    QWORD PTR [rbp-0x48],rax
  41310a:	mov    rax,QWORD PTR [rbp-0xa8]
  413111:	mov    rdi,rax
  413114:	call   40bc5a <_start@@Base+0x79aa>
  413119:	mov    rdx,QWORD PTR [rbp-0x48]
  41311d:	mov    rax,QWORD PTR [rbp-0xa8]
  413124:	mov    rsi,rdx
  413127:	mov    rdi,rax
  41312a:	call   40afa0 <_start@@Base+0x6cf0>
  41312f:	mov    rax,QWORD PTR [rbp-0xa8]
  413136:	mov    rdi,rax
  413139:	call   40bc74 <_start@@Base+0x79c4>
  41313e:	mov    rax,QWORD PTR [rbp-0xa8]
  413145:	mov    rdi,rax
  413148:	call   40c1db <_start@@Base+0x7f2b>
  41314d:	lea    rdx,[rbp-0x88]
  413154:	mov    rax,QWORD PTR [rbp-0xa8]
  41315b:	mov    rsi,rdx
  41315e:	mov    rdi,rax
  413161:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  413166:	mov    QWORD PTR [rbp-0x80],rax
  41316a:	mov    rdx,QWORD PTR [rbp-0x88]
  413171:	mov    rax,QWORD PTR [rbp-0x80]
  413175:	mov    rsi,rdx
  413178:	mov    rdi,rax
  41317b:	call   40dfb7 <_start@@Base+0x9d07>
  413180:	mov    DWORD PTR [rbp-0x94],eax
  413186:	cmp    DWORD PTR [rbp-0x94],0x0
  41318d:	je     4131ba <test_union_vector@@Base+0x182>
  41318f:	mov    eax,DWORD PTR [rbp-0x94]
  413195:	mov    edi,eax
  413197:	call   41b868 <flatcc_verify_error_string@@Base>
  41319c:	mov    rsi,rax
  41319f:	lea    rdi,[rip+0xd65a]        # 420800 <_IO_stdin_used@@Base+0x2800>
  4131a6:	mov    eax,0x0
  4131ab:	call   4041d0 <printf@plt>
  4131b0:	mov    eax,0xffffffff
  4131b5:	jmp    4133b9 <test_union_vector@@Base+0x381>
  4131ba:	mov    rax,QWORD PTR [rbp-0x80]
  4131be:	mov    rdi,rax
  4131c1:	call   40643b <_start@@Base+0x218b>
  4131c6:	mov    QWORD PTR [rbp-0x78],rax
  4131ca:	mov    rax,QWORD PTR [rbp-0x78]
  4131ce:	mov    rdi,rax
  4131d1:	call   407d65 <_start@@Base+0x3ab5>
  4131d6:	cmp    al,0x4
  4131d8:	je     4131f0 <test_union_vector@@Base+0x1b8>
  4131da:	lea    rdi,[rip+0xd65f]        # 420840 <_IO_stdin_used@@Base+0x2840>
  4131e1:	mov    eax,0x0
  4131e6:	call   4041d0 <printf@plt>
  4131eb:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  4131f0:	mov    rax,QWORD PTR [rbp-0x78]
  4131f4:	mov    rdi,rax
  4131f7:	call   407e25 <_start@@Base+0x3b75>
  4131fc:	mov    QWORD PTR [rbp-0x70],rax
  413200:	cmp    QWORD PTR [rbp-0x70],0x0
  413205:	je     413217 <test_union_vector@@Base+0x1df>
  413207:	mov    rax,QWORD PTR [rbp-0x70]
  41320b:	mov    rdi,rax
  41320e:	call   40622d <_start@@Base+0x1f7d>
  413213:	test   eax,eax
  413215:	je     413228 <test_union_vector@@Base+0x1f0>
  413217:	lea    rdi,[rip+0xd64a]        # 420868 <_IO_stdin_used@@Base+0x2868>
  41321e:	call   4041a0 <puts@plt>
  413223:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  413228:	mov    rax,QWORD PTR [rbp-0x70]
  41322c:	mov    rdi,rax
  41322f:	call   406083 <_start@@Base+0x1dd3>
  413234:	mov    QWORD PTR [rbp-0x68],rax
  413238:	mov    rax,QWORD PTR [rbp-0x70]
  41323c:	mov    rdi,rax
  41323f:	call   406158 <_start@@Base+0x1ea8>
  413244:	mov    QWORD PTR [rbp-0x60],rax
  413248:	mov    rax,QWORD PTR [rbp-0x68]
  41324c:	mov    rdi,rax
  41324f:	call   4059c7 <_start@@Base+0x1717>
  413254:	mov    QWORD PTR [rbp-0x58],rax
  413258:	cmp    QWORD PTR [rbp-0x58],0x1
  41325d:	je     413270 <test_union_vector@@Base+0x238>
  41325f:	lea    rdi,[rip+0xd62a]        # 420890 <_IO_stdin_used@@Base+0x2890>
  413266:	call   4041a0 <puts@plt>
  41326b:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  413270:	mov    rax,QWORD PTR [rbp-0x68]
  413274:	mov    esi,0x0
  413279:	mov    rdi,rax
  41327c:	call   4050c4 <_start@@Base+0xe14>
  413281:	cmp    al,0x2
  413283:	je     413296 <test_union_vector@@Base+0x25e>
  413285:	lea    rdi,[rip+0xd62c]        # 4208b8 <_IO_stdin_used@@Base+0x28b8>
  41328c:	call   4041a0 <puts@plt>
  413291:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  413296:	mov    rax,QWORD PTR [rbp-0x60]
  41329a:	mov    esi,0x0
  41329f:	mov    rdi,rax
  4132a2:	call   4049a3 <_start@@Base+0x6f3>
  4132a7:	mov    QWORD PTR [rbp-0x50],rax
  4132ab:	cmp    QWORD PTR [rbp-0x50],0x0
  4132b0:	jne    4132c3 <test_union_vector@@Base+0x28b>
  4132b2:	lea    rdi,[rip+0xd62c]        # 4208e5 <_IO_stdin_used@@Base+0x28e5>
  4132b9:	call   4041a0 <puts@plt>
  4132be:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  4132c3:	mov    rax,QWORD PTR [rbp-0x50]
  4132c7:	mov    rdi,rax
  4132ca:	call   405d05 <_start@@Base+0x1a55>
  4132cf:	movsx  eax,al
  4132d2:	mov    DWORD PTR [rbp-0x8c],eax
  4132d8:	cmp    DWORD PTR [rbp-0x8c],0x2
  4132df:	je     4132ff <test_union_vector@@Base+0x2c7>
  4132e1:	mov    eax,DWORD PTR [rbp-0x8c]
  4132e7:	mov    esi,eax
  4132e9:	lea    rdi,[rip+0xd605]        # 4208f5 <_IO_stdin_used@@Base+0x28f5>
  4132f0:	mov    eax,0x0
  4132f5:	call   4041d0 <printf@plt>
  4132fa:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  4132ff:	mov    rax,QWORD PTR [rbp-0x70]
  413303:	mov    rdi,rax
  413306:	call   4062d7 <_start@@Base+0x2027>
  41330b:	mov    QWORD PTR [rbp-0x40],rax
  41330f:	mov    QWORD PTR [rbp-0x38],rdx
  413313:	mov    rdx,QWORD PTR [rbp-0x40]
  413317:	mov    rax,QWORD PTR [rbp-0x38]
  41331b:	mov    rdi,rdx
  41331e:	mov    rsi,rax
  413321:	call   4059e1 <_start@@Base+0x1731>
  413326:	cmp    rax,0x1
  41332a:	je     41333a <test_union_vector@@Base+0x302>
  41332c:	lea    rdi,[rip+0xd5e5]        # 420918 <_IO_stdin_used@@Base+0x2918>
  413333:	call   4041a0 <puts@plt>
  413338:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  41333a:	mov    rcx,QWORD PTR [rbp-0x40]
  41333e:	mov    rax,QWORD PTR [rbp-0x38]
  413342:	mov    edx,0x0
  413347:	mov    rdi,rcx
  41334a:	mov    rsi,rax
  41334d:	call   405a08 <_start@@Base+0x1758>
  413352:	mov    ecx,eax
  413354:	mov    rax,rdx
  413357:	mov    DWORD PTR [rbp-0x30],ecx
  41335a:	mov    QWORD PTR [rbp-0x28],rax
  41335e:	movzx  ebx,BYTE PTR [rbp-0x30]
  413362:	mov    rax,QWORD PTR [rbp-0x68]
  413366:	mov    esi,0x0
  41336b:	mov    rdi,rax
  41336e:	call   4050c4 <_start@@Base+0xe14>
  413373:	cmp    bl,al
  413375:	je     413385 <test_union_vector@@Base+0x34d>
  413377:	lea    rdi,[rip+0xd5de]        # 42095c <_IO_stdin_used@@Base+0x295c>
  41337e:	call   4041a0 <puts@plt>
  413383:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  413385:	mov    rax,QWORD PTR [rbp-0x28]
  413389:	cmp    QWORD PTR [rbp-0x50],rax
  41338d:	je     41339d <test_union_vector@@Base+0x365>
  41338f:	lea    rdi,[rip+0xd5df]        # 420975 <_IO_stdin_used@@Base+0x2975>
  413396:	call   4041a0 <puts@plt>
  41339b:	jmp    4133a7 <test_union_vector@@Base+0x36f>
  41339d:	mov    DWORD PTR [rbp-0x94],0x0
  4133a7:	mov    rax,QWORD PTR [rbp-0x80]
  4133ab:	mov    rdi,rax
  4133ae:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  4133b3:	mov    eax,DWORD PTR [rbp-0x94]
  4133b9:	mov    rbx,QWORD PTR [rbp-0x18]
  4133bd:	xor    rbx,QWORD PTR fs:0x28
  4133c6:	je     4133cd <test_union_vector@@Base+0x395>
  4133c8:	call   4041c0 <__stack_chk_fail@plt>
  4133cd:	add    rsp,0xa8
  4133d4:	pop    rbx
  4133d5:	pop    rbp
  4133d6:	ret    

00000000004133d7 <test_mixed_type_union@@Base>:
  4133d7:	endbr64 
  4133db:	push   rbp
  4133dc:	mov    rbp,rsp
  4133df:	sub    rsp,0x90
  4133e6:	mov    QWORD PTR [rbp-0x88],rdi
  4133ed:	mov    rax,QWORD PTR fs:0x28
  4133f6:	mov    QWORD PTR [rbp-0x8],rax
  4133fa:	xor    eax,eax
  4133fc:	mov    DWORD PTR [rbp-0x80],0xffffffff
  413403:	mov    rax,QWORD PTR [rbp-0x88]
  41340a:	mov    rdi,rax
  41340d:	call   416246 <flatcc_builder_reset@@Base>
  413412:	mov    rax,QWORD PTR [rbp-0x88]
  413419:	mov    rdi,rax
  41341c:	call   40cf5c <_start@@Base+0x8cac>
  413421:	mov    rax,QWORD PTR [rbp-0x88]
  413428:	mov    esi,0xa
  41342d:	mov    rdi,rax
  413430:	call   40a53c <_start@@Base+0x628c>
  413435:	mov    DWORD PTR [rbp-0x7c],eax
  413438:	mov    rax,QWORD PTR [rbp-0x88]
  41343f:	mov    esi,0x16
  413444:	mov    rdi,rax
  413447:	call   40a46e <_start@@Base+0x61be>
  41344c:	mov    DWORD PTR [rbp-0x78],eax
  41344f:	mov    eax,DWORD PTR [rbp-0x78]
  413452:	mov    edi,eax
  413454:	call   40aa0c <_start@@Base+0x675c>
  413459:	mov    QWORD PTR [rbp-0x38],rax
  41345d:	mov    rax,QWORD PTR [rbp-0x88]
  413464:	mov    esi,0x13
  413469:	mov    rdi,rax
  41346c:	call   40ca16 <_start@@Base+0x8766>
  413471:	mov    edx,DWORD PTR [rbp-0x78]
  413474:	mov    rax,QWORD PTR [rbp-0x88]
  41347b:	mov    esi,edx
  41347d:	mov    rdi,rax
  413480:	call   40cca7 <_start@@Base+0x89f7>
  413485:	mov    rax,QWORD PTR [rbp-0x88]
  41348c:	mov    esi,0x2a
  413491:	mov    rdi,rax
  413494:	call   40c93d <_start@@Base+0x868d>
  413499:	mov    DWORD PTR [rbp-0x74],eax
  41349c:	mov    edx,DWORD PTR [rbp-0x74]
  41349f:	mov    rax,QWORD PTR [rbp-0x88]
  4134a6:	mov    esi,edx
  4134a8:	mov    rdi,rax
  4134ab:	call   40caf8 <_start@@Base+0x8848>
  4134b0:	mov    rax,QWORD PTR [rbp-0x88]
  4134b7:	lea    rsi,[rip+0xd4cd]        # 42098b <_IO_stdin_used@@Base+0x298b>
  4134be:	mov    rdi,rax
  4134c1:	call   40cbe2 <_start@@Base+0x8932>
  4134c6:	mov    rax,QWORD PTR [rbp-0x88]
  4134cd:	mov    rdi,rax
  4134d0:	call   40cd69 <_start@@Base+0x8ab9>
  4134d5:	mov    rdx,QWORD PTR [rbp-0x38]
  4134d9:	mov    rax,QWORD PTR [rbp-0x88]
  4134e0:	mov    rsi,rdx
  4134e3:	mov    rdi,rax
  4134e6:	call   40cdaf <_start@@Base+0x8aff>
  4134eb:	mov    edx,DWORD PTR [rbp-0x74]
  4134ee:	mov    rax,QWORD PTR [rbp-0x88]
  4134f5:	mov    esi,edx
  4134f7:	mov    rdi,rax
  4134fa:	call   40cdd4 <_start@@Base+0x8b24>
  4134ff:	mov    rax,QWORD PTR [rbp-0x88]
  413506:	mov    esi,0x1
  41350b:	mov    rdi,rax
  41350e:	call   40ce01 <_start@@Base+0x8b51>
  413513:	mov    rax,QWORD PTR [rbp-0x88]
  41351a:	lea    rsi,[rip+0xd46f]        # 420990 <_IO_stdin_used@@Base+0x2990>
  413521:	mov    rdi,rax
  413524:	call   409cba <_start@@Base+0x5a0a>
  413529:	mov    edi,eax
  41352b:	call   40aa3a <_start@@Base+0x678a>
  413530:	mov    rdx,rax
  413533:	mov    rax,QWORD PTR [rbp-0x88]
  41353a:	mov    rsi,rdx
  41353d:	mov    rdi,rax
  413540:	call   40aa51 <_start@@Base+0x67a1>
  413545:	mov    edx,DWORD PTR [rbp-0x7c]
  413548:	mov    rax,QWORD PTR [rbp-0x88]
  41354f:	mov    esi,edx
  413551:	mov    rdi,rax
  413554:	call   40ce89 <_start@@Base+0x8bd9>
  413559:	mov    rax,QWORD PTR [rbp-0x88]
  413560:	mov    rdi,rax
  413563:	call   40ce3c <_start@@Base+0x8b8c>
  413568:	mov    QWORD PTR [rbp-0x68],rax
  41356c:	mov    rax,QWORD PTR [rbp-0x68]
  413570:	mov    DWORD PTR [rax],0x3
  413576:	mov    rax,QWORD PTR [rbp-0x88]
  41357d:	mov    rdi,rax
  413580:	call   40ce56 <_start@@Base+0x8ba6>
  413585:	mov    rax,QWORD PTR [rbp-0x88]
  41358c:	mov    esi,0x1
  413591:	mov    rdi,rax
  413594:	call   40a53c <_start@@Base+0x628c>
  413599:	mov    edx,eax
  41359b:	mov    rax,QWORD PTR [rbp-0x88]
  4135a2:	mov    esi,edx
  4135a4:	mov    rdi,rax
  4135a7:	call   40ce89 <_start@@Base+0x8bd9>
  4135ac:	mov    rax,QWORD PTR [rbp-0x88]
  4135b3:	mov    esi,0x2
  4135b8:	mov    rdi,rax
  4135bb:	call   40ceb6 <_start@@Base+0x8c06>
  4135c0:	mov    rax,QWORD PTR [rbp-0x88]
  4135c7:	lea    rsi,[rip+0xd3c8]        # 420996 <_IO_stdin_used@@Base+0x2996>
  4135ce:	mov    rdi,rax
  4135d1:	call   409cba <_start@@Base+0x5a0a>
  4135d6:	mov    edx,eax
  4135d8:	mov    rax,QWORD PTR [rbp-0x88]
  4135df:	mov    esi,edx
  4135e1:	mov    rdi,rax
  4135e4:	call   40cef1 <_start@@Base+0x8c41>
  4135e9:	mov    rax,QWORD PTR [rbp-0x88]
  4135f0:	lea    rsi,[rip+0xd3a7]        # 42099e <_IO_stdin_used@@Base+0x299e>
  4135f7:	mov    rdi,rax
  4135fa:	call   40cf1e <_start@@Base+0x8c6e>
  4135ff:	mov    rax,QWORD PTR [rbp-0x88]
  413606:	mov    rdi,rax
  413609:	call   40cd83 <_start@@Base+0x8ad3>
  41360e:	mov    rax,QWORD PTR [rbp-0x88]
  413615:	mov    rdi,rax
  413618:	call   40cf94 <_start@@Base+0x8ce4>
  41361d:	lea    rdx,[rbp-0x70]
  413621:	mov    rax,QWORD PTR [rbp-0x88]
  413628:	mov    rsi,rdx
  41362b:	mov    rdi,rax
  41362e:	call   41ab3b <flatcc_builder_finalize_aligned_buffer@@Base>
  413633:	mov    QWORD PTR [rbp-0x60],rax
  413637:	mov    rax,QWORD PTR [rip+0x189ba]        # 42bff8 <stderr@GLIBC_2.2.5>
  41363e:	mov    rcx,QWORD PTR [rax]
  413641:	mov    rdx,QWORD PTR [rbp-0x70]
  413645:	mov    rax,QWORD PTR [rbp-0x60]
  413649:	mov    rsi,rax
  41364c:	lea    rdi,[rip+0xd357]        # 4209aa <_IO_stdin_used@@Base+0x29aa>
  413653:	call   40e441 <_start@@Base+0xa191>
  413658:	mov    rdx,QWORD PTR [rbp-0x70]
  41365c:	mov    rax,QWORD PTR [rbp-0x60]
  413660:	mov    rsi,rdx
  413663:	mov    rdi,rax
  413666:	call   40e411 <_start@@Base+0xa161>
  41366b:	mov    DWORD PTR [rbp-0x80],eax
  41366e:	cmp    DWORD PTR [rbp-0x80],0x0
  413672:	je     41369c <test_mixed_type_union@@Base+0x2c5>
  413674:	mov    eax,DWORD PTR [rbp-0x80]
  413677:	mov    edi,eax
  413679:	call   41b868 <flatcc_verify_error_string@@Base>
  41367e:	mov    rsi,rax
  413681:	lea    rdi,[rip+0xd330]        # 4209b8 <_IO_stdin_used@@Base+0x29b8>
  413688:	mov    eax,0x0
  41368d:	call   4041d0 <printf@plt>
  413692:	mov    eax,0xffffffff
  413697:	jmp    413d8e <test_mixed_type_union@@Base+0x9b7>
  41369c:	mov    DWORD PTR [rbp-0x80],0xffffffff
  4136a3:	mov    rax,QWORD PTR [rbp-0x60]
  4136a7:	mov    rdi,rax
  4136aa:	call   408d60 <_start@@Base+0x4ab0>
  4136af:	mov    QWORD PTR [rbp-0x58],rax
  4136b3:	mov    rax,QWORD PTR [rbp-0x58]
  4136b7:	mov    rdi,rax
  4136ba:	call   408f44 <_start@@Base+0x4c94>
  4136bf:	test   eax,eax
  4136c1:	jne    4136d4 <test_mixed_type_union@@Base+0x2fd>
  4136c3:	lea    rdi,[rip+0xd33e]        # 420a08 <_IO_stdin_used@@Base+0x2a08>
  4136ca:	call   4041a0 <puts@plt>
  4136cf:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4136d4:	mov    rax,QWORD PTR [rbp-0x58]
  4136d8:	mov    rdi,rax
  4136db:	call   40972f <_start@@Base+0x547f>
  4136e0:	test   eax,eax
  4136e2:	jne    4136f5 <test_mixed_type_union@@Base+0x31e>
  4136e4:	lea    rdi,[rip+0xd34d]        # 420a38 <_IO_stdin_used@@Base+0x2a38>
  4136eb:	call   4041a0 <puts@plt>
  4136f0:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4136f5:	mov    rax,QWORD PTR [rbp-0x58]
  4136f9:	mov    rdi,rax
  4136fc:	call   408fee <_start@@Base+0x4d3e>
  413701:	mov    ecx,eax
  413703:	mov    rax,rdx
  413706:	mov    DWORD PTR [rbp-0x20],ecx
  413709:	mov    QWORD PTR [rbp-0x18],rax
  41370d:	movzx  eax,BYTE PTR [rbp-0x20]
  413711:	cmp    al,0x8
  413713:	je     413726 <test_mixed_type_union@@Base+0x34f>
  413715:	lea    rdi,[rip+0xd347]        # 420a63 <_IO_stdin_used@@Base+0x2a63>
  41371c:	call   4041a0 <puts@plt>
  413721:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413726:	mov    rax,QWORD PTR [rbp-0x18]
  41372a:	mov    QWORD PTR [rbp-0x50],rax
  41372e:	cmp    QWORD PTR [rbp-0x50],0x0
  413733:	jne    413741 <test_mixed_type_union@@Base+0x36a>
  413735:	lea    rdi,[rip+0xd342]        # 420a7e <_IO_stdin_used@@Base+0x2a7e>
  41373c:	call   4041a0 <puts@plt>
  413741:	mov    rax,QWORD PTR [rbp-0x50]
  413745:	mov    rdi,rax
  413748:	call   40599f <_start@@Base+0x16ef>
  41374d:	cmp    ax,0x13
  413751:	jbe    413764 <test_mixed_type_union@@Base+0x38d>
  413753:	lea    rdi,[rip+0xd33e]        # 420a98 <_IO_stdin_used@@Base+0x2a98>
  41375a:	call   4041a0 <puts@plt>
  41375f:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413764:	mov    rax,QWORD PTR [rbp-0x50]
  413768:	mov    rdi,rax
  41376b:	call   40599f <_start@@Base+0x16ef>
  413770:	cmp    ax,0x12
  413774:	ja     413787 <test_mixed_type_union@@Base+0x3b0>
  413776:	lea    rdi,[rip+0xd343]        # 420ac0 <_IO_stdin_used@@Base+0x2ac0>
  41377d:	call   4041a0 <puts@plt>
  413782:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413787:	mov    rax,QWORD PTR [rbp-0x58]
  41378b:	mov    rdi,rax
  41378e:	call   4093f4 <_start@@Base+0x5144>
  413793:	cmp    al,0x8
  413795:	je     4137a8 <test_mixed_type_union@@Base+0x3d1>
  413797:	lea    rdi,[rip+0xd352]        # 420af0 <_IO_stdin_used@@Base+0x2af0>
  41379e:	call   4041a0 <puts@plt>
  4137a3:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4137a8:	mov    rax,QWORD PTR [rbp-0x58]
  4137ac:	mov    rdi,rax
  4137af:	call   4094b4 <_start@@Base+0x5204>
  4137b4:	mov    QWORD PTR [rbp-0x50],rax
  4137b8:	cmp    QWORD PTR [rbp-0x50],0x0
  4137bd:	jne    4137d0 <test_mixed_type_union@@Base+0x3f9>
  4137bf:	lea    rdi,[rip+0xd362]        # 420b28 <_IO_stdin_used@@Base+0x2b28>
  4137c6:	call   4041a0 <puts@plt>
  4137cb:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4137d0:	mov    rax,QWORD PTR [rbp-0x50]
  4137d4:	mov    rdi,rax
  4137d7:	call   40599f <_start@@Base+0x16ef>
  4137dc:	cmp    ax,0x16
  4137e0:	je     4137f3 <test_mixed_type_union@@Base+0x41c>
  4137e2:	lea    rdi,[rip+0xd36f]        # 420b58 <_IO_stdin_used@@Base+0x2b58>
  4137e9:	call   4041a0 <puts@plt>
  4137ee:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4137f3:	mov    rax,QWORD PTR [rbp-0x58]
  4137f7:	mov    rdi,rax
  4137fa:	call   40904f <_start@@Base+0x4d9f>
  4137ff:	cmp    al,0x2
  413801:	je     413814 <test_mixed_type_union@@Base+0x43d>
  413803:	lea    rdi,[rip+0xd37d]        # 420b87 <_IO_stdin_used@@Base+0x2b87>
  41380a:	call   4041a0 <puts@plt>
  41380f:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413814:	mov    rax,QWORD PTR [rbp-0x58]
  413818:	mov    rdi,rax
  41381b:	call   40910f <_start@@Base+0x4e5f>
  413820:	mov    QWORD PTR [rbp-0x48],rax
  413824:	cmp    QWORD PTR [rbp-0x48],0x0
  413829:	je     41383c <test_mixed_type_union@@Base+0x465>
  41382b:	mov    rax,QWORD PTR [rbp-0x48]
  41382f:	mov    rdi,rax
  413832:	call   408b87 <_start@@Base+0x48d7>
  413837:	cmp    eax,0x2a
  41383a:	je     41384d <test_mixed_type_union@@Base+0x476>
  41383c:	lea    rdi,[rip+0xd35d]        # 420ba0 <_IO_stdin_used@@Base+0x2ba0>
  413843:	call   4041a0 <puts@plt>
  413848:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  41384d:	mov    rax,QWORD PTR [rbp-0x58]
  413851:	mov    rdi,rax
  413854:	call   4091e0 <_start@@Base+0x4f30>
  413859:	cmp    al,0xb
  41385b:	je     41386e <test_mixed_type_union@@Base+0x497>
  41385d:	lea    rdi,[rip+0xd35e]        # 420bc2 <_IO_stdin_used@@Base+0x2bc2>
  413864:	call   4041a0 <puts@plt>
  413869:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  41386e:	mov    rax,QWORD PTR [rbp-0x58]
  413872:	mov    rdi,rax
  413875:	call   4092a0 <_start@@Base+0x4ff0>
  41387a:	mov    rdi,rax
  41387d:	call   404973 <_start@@Base+0x6c3>
  413882:	mov    QWORD PTR [rbp-0x40],rax
  413886:	cmp    QWORD PTR [rbp-0x40],0x0
  41388b:	jne    41389e <test_mixed_type_union@@Base+0x4c7>
  41388d:	lea    rdi,[rip+0xd344]        # 420bd8 <_IO_stdin_used@@Base+0x2bd8>
  413894:	call   4041a0 <puts@plt>
  413899:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  41389e:	mov    rax,QWORD PTR [rbp-0x40]
  4138a2:	lea    rsi,[rip+0xd0e2]        # 42098b <_IO_stdin_used@@Base+0x298b>
  4138a9:	mov    rdi,rax
  4138ac:	call   404240 <strcmp@plt>
  4138b1:	test   eax,eax
  4138b3:	je     4138d2 <test_mixed_type_union@@Base+0x4fb>
  4138b5:	mov    rax,QWORD PTR [rbp-0x40]
  4138b9:	mov    rsi,rax
  4138bc:	lea    rdi,[rip+0xd335]        # 420bf8 <_IO_stdin_used@@Base+0x2bf8>
  4138c3:	mov    eax,0x0
  4138c8:	call   4041d0 <printf@plt>
  4138cd:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4138d2:	mov    rax,QWORD PTR [rbp-0x58]
  4138d6:	mov    rdi,rax
  4138d9:	call   4093d2 <_start@@Base+0x5122>
  4138de:	mov    QWORD PTR [rbp-0x40],rax
  4138e2:	cmp    QWORD PTR [rbp-0x40],0x0
  4138e7:	jne    4138fa <test_mixed_type_union@@Base+0x523>
  4138e9:	lea    rdi,[rip+0xd2e8]        # 420bd8 <_IO_stdin_used@@Base+0x2bd8>
  4138f0:	call   4041a0 <puts@plt>
  4138f5:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4138fa:	mov    rax,QWORD PTR [rbp-0x40]
  4138fe:	lea    rsi,[rip+0xd086]        # 42098b <_IO_stdin_used@@Base+0x298b>
  413905:	mov    rdi,rax
  413908:	call   404240 <strcmp@plt>
  41390d:	test   eax,eax
  41390f:	je     41392e <test_mixed_type_union@@Base+0x557>
  413911:	mov    rax,QWORD PTR [rbp-0x40]
  413915:	mov    rsi,rax
  413918:	lea    rdi,[rip+0xd301]        # 420c20 <_IO_stdin_used@@Base+0x2c20>
  41391f:	mov    eax,0x0
  413924:	call   4041d0 <printf@plt>
  413929:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  41392e:	mov    rax,QWORD PTR [rbp-0x58]
  413932:	mov    rdi,rax
  413935:	call   409371 <_start@@Base+0x50c1>
  41393a:	mov    ecx,eax
  41393c:	mov    rax,rdx
  41393f:	mov    DWORD PTR [rbp-0x20],ecx
  413942:	mov    QWORD PTR [rbp-0x18],rax
  413946:	mov    edx,DWORD PTR [rbp-0x20]
  413949:	mov    rax,QWORD PTR [rbp-0x18]
  41394d:	mov    edi,edx
  41394f:	mov    rsi,rax
  413952:	call   404a85 <_start@@Base+0x7d5>
  413957:	mov    QWORD PTR [rbp-0x40],rax
  41395b:	mov    rax,QWORD PTR [rbp-0x40]
  41395f:	lea    rsi,[rip+0xd025]        # 42098b <_IO_stdin_used@@Base+0x298b>
  413966:	mov    rdi,rax
  413969:	call   404240 <strcmp@plt>
  41396e:	test   eax,eax
  413970:	je     41398f <test_mixed_type_union@@Base+0x5b8>
  413972:	mov    rax,QWORD PTR [rbp-0x40]
  413976:	mov    rsi,rax
  413979:	lea    rdi,[rip+0xd2d0]        # 420c50 <_IO_stdin_used@@Base+0x2c50>
  413980:	mov    eax,0x0
  413985:	call   4041d0 <printf@plt>
  41398a:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  41398f:	mov    rax,QWORD PTR [rbp-0x58]
  413993:	mov    rdi,rax
  413996:	call   4097d9 <_start@@Base+0x5529>
  41399b:	mov    QWORD PTR [rbp-0x30],rax
  41399f:	mov    QWORD PTR [rbp-0x28],rdx
  4139a3:	mov    rcx,QWORD PTR [rbp-0x30]
  4139a7:	mov    rax,QWORD PTR [rbp-0x28]
  4139ab:	mov    edx,0x0
  4139b0:	mov    rdi,rcx
  4139b3:	mov    rsi,rax
  4139b6:	call   408c6e <_start@@Base+0x49be>
  4139bb:	mov    ecx,eax
  4139bd:	mov    rax,rdx
  4139c0:	mov    DWORD PTR [rbp-0x20],ecx
  4139c3:	mov    QWORD PTR [rbp-0x18],rax
  4139c7:	movzx  eax,BYTE PTR [rbp-0x20]
  4139cb:	cmp    al,0x8
  4139cd:	je     4139e5 <test_mixed_type_union@@Base+0x60e>
  4139cf:	lea    rdi,[rip+0xd2aa]        # 420c80 <_IO_stdin_used@@Base+0x2c80>
  4139d6:	mov    eax,0x0
  4139db:	call   4041d0 <printf@plt>
  4139e0:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  4139e5:	mov    rcx,QWORD PTR [rbp-0x30]
  4139e9:	mov    rax,QWORD PTR [rbp-0x28]
  4139ed:	mov    edx,0x1
  4139f2:	mov    rdi,rcx
  4139f5:	mov    rsi,rax
  4139f8:	call   408c6e <_start@@Base+0x49be>
  4139fd:	mov    ecx,eax
  4139ff:	mov    rax,rdx
  413a02:	mov    DWORD PTR [rbp-0x20],ecx
  413a05:	mov    QWORD PTR [rbp-0x18],rax
  413a09:	movzx  eax,BYTE PTR [rbp-0x20]
  413a0d:	cmp    al,0x2
  413a0f:	je     413a27 <test_mixed_type_union@@Base+0x650>
  413a11:	lea    rdi,[rip+0xd290]        # 420ca8 <_IO_stdin_used@@Base+0x2ca8>
  413a18:	mov    eax,0x0
  413a1d:	call   4041d0 <printf@plt>
  413a22:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413a27:	mov    rax,QWORD PTR [rbp-0x18]
  413a2b:	mov    QWORD PTR [rbp-0x48],rax
  413a2f:	mov    rax,QWORD PTR [rbp-0x48]
  413a33:	mov    rdi,rax
  413a36:	call   408b87 <_start@@Base+0x48d7>
  413a3b:	cmp    eax,0x2a
  413a3e:	je     413a56 <test_mixed_type_union@@Base+0x67f>
  413a40:	lea    rdi,[rip+0xd289]        # 420cd0 <_IO_stdin_used@@Base+0x2cd0>
  413a47:	mov    eax,0x0
  413a4c:	call   4041d0 <printf@plt>
  413a51:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413a56:	mov    rcx,QWORD PTR [rbp-0x30]
  413a5a:	mov    rax,QWORD PTR [rbp-0x28]
  413a5e:	mov    edx,0x2
  413a63:	mov    rdi,rcx
  413a66:	mov    rsi,rax
  413a69:	call   408c6e <_start@@Base+0x49be>
  413a6e:	mov    ecx,eax
  413a70:	mov    rax,rdx
  413a73:	mov    DWORD PTR [rbp-0x20],ecx
  413a76:	mov    QWORD PTR [rbp-0x18],rax
  413a7a:	movzx  eax,BYTE PTR [rbp-0x20]
  413a7e:	cmp    al,0x2
  413a80:	je     413a98 <test_mixed_type_union@@Base+0x6c1>
  413a82:	lea    rdi,[rip+0xd27f]        # 420d08 <_IO_stdin_used@@Base+0x2d08>
  413a89:	mov    eax,0x0
  413a8e:	call   4041d0 <printf@plt>
  413a93:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413a98:	mov    rax,QWORD PTR [rbp-0x18]
  413a9c:	mov    QWORD PTR [rbp-0x48],rax
  413aa0:	mov    rax,QWORD PTR [rbp-0x48]
  413aa4:	mov    rdi,rax
  413aa7:	call   408b87 <_start@@Base+0x48d7>
  413aac:	cmp    eax,0x1
  413aaf:	je     413ac7 <test_mixed_type_union@@Base+0x6f0>
  413ab1:	lea    rdi,[rip+0xd278]        # 420d30 <_IO_stdin_used@@Base+0x2d30>
  413ab8:	mov    eax,0x0
  413abd:	call   4041d0 <printf@plt>
  413ac2:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413ac7:	mov    rax,QWORD PTR [rbp-0x58]
  413acb:	mov    rdi,rax
  413ace:	call   409585 <_start@@Base+0x52d5>
  413ad3:	mov    esi,0x3
  413ad8:	mov    rdi,rax
  413adb:	call   4050c4 <_start@@Base+0xe14>
  413ae0:	cmp    al,0xb
  413ae2:	je     413af5 <test_mixed_type_union@@Base+0x71e>
  413ae4:	lea    rdi,[rip+0xd27d]        # 420d68 <_IO_stdin_used@@Base+0x2d68>
  413aeb:	call   4041a0 <puts@plt>
  413af0:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413af5:	mov    rcx,QWORD PTR [rbp-0x30]
  413af9:	mov    rax,QWORD PTR [rbp-0x28]
  413afd:	mov    edx,0x3
  413b02:	mov    rdi,rcx
  413b05:	mov    rsi,rax
  413b08:	call   408d25 <_start@@Base+0x4a75>
  413b0d:	mov    QWORD PTR [rbp-0x40],rax
  413b11:	cmp    QWORD PTR [rbp-0x40],0x0
  413b16:	je     413b2f <test_mixed_type_union@@Base+0x758>
  413b18:	mov    rax,QWORD PTR [rbp-0x40]
  413b1c:	lea    rsi,[rip+0xce6d]        # 420990 <_IO_stdin_used@@Base+0x2990>
  413b23:	mov    rdi,rax
  413b26:	call   404240 <strcmp@plt>
  413b2b:	test   eax,eax
  413b2d:	je     413b40 <test_mixed_type_union@@Base+0x769>
  413b2f:	lea    rdi,[rip+0xd262]        # 420d98 <_IO_stdin_used@@Base+0x2d98>
  413b36:	call   4041a0 <puts@plt>
  413b3b:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413b40:	mov    rcx,QWORD PTR [rbp-0x30]
  413b44:	mov    rax,QWORD PTR [rbp-0x28]
  413b48:	mov    edx,0x3
  413b4d:	mov    rdi,rcx
  413b50:	mov    rsi,rax
  413b53:	call   408c6e <_start@@Base+0x49be>
  413b58:	mov    ecx,eax
  413b5a:	mov    rax,rdx
  413b5d:	mov    DWORD PTR [rbp-0x20],ecx
  413b60:	mov    QWORD PTR [rbp-0x18],rax
  413b64:	movzx  eax,BYTE PTR [rbp-0x20]
  413b68:	cmp    al,0xb
  413b6a:	je     413b82 <test_mixed_type_union@@Base+0x7ab>
  413b6c:	lea    rdi,[rip+0xd25d]        # 420dd0 <_IO_stdin_used@@Base+0x2dd0>
  413b73:	mov    eax,0x0
  413b78:	call   4041d0 <printf@plt>
  413b7d:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413b82:	mov    edx,DWORD PTR [rbp-0x20]
  413b85:	mov    rax,QWORD PTR [rbp-0x18]
  413b89:	mov    edi,edx
  413b8b:	mov    rsi,rax
  413b8e:	call   404a85 <_start@@Base+0x7d5>
  413b93:	mov    QWORD PTR [rbp-0x40],rax
  413b97:	cmp    QWORD PTR [rbp-0x40],0x0
  413b9c:	je     413bb5 <test_mixed_type_union@@Base+0x7de>
  413b9e:	mov    rax,QWORD PTR [rbp-0x40]
  413ba2:	lea    rsi,[rip+0xcde7]        # 420990 <_IO_stdin_used@@Base+0x2990>
  413ba9:	mov    rdi,rax
  413bac:	call   404240 <strcmp@plt>
  413bb1:	test   eax,eax
  413bb3:	je     413bc6 <test_mixed_type_union@@Base+0x7ef>
  413bb5:	lea    rdi,[rip+0xd24c]        # 420e08 <_IO_stdin_used@@Base+0x2e08>
  413bbc:	call   4041a0 <puts@plt>
  413bc1:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413bc6:	mov    rcx,QWORD PTR [rbp-0x30]
  413bca:	mov    rax,QWORD PTR [rbp-0x28]
  413bce:	mov    edx,0x4
  413bd3:	mov    rdi,rcx
  413bd6:	mov    rsi,rax
  413bd9:	call   408c6e <_start@@Base+0x49be>
  413bde:	mov    ecx,eax
  413be0:	mov    rax,rdx
  413be3:	mov    DWORD PTR [rbp-0x20],ecx
  413be6:	mov    QWORD PTR [rbp-0x18],rax
  413bea:	movzx  eax,BYTE PTR [rbp-0x20]
  413bee:	cmp    al,0x9
  413bf0:	je     413c08 <test_mixed_type_union@@Base+0x831>
  413bf2:	lea    rdi,[rip+0xd24f]        # 420e48 <_IO_stdin_used@@Base+0x2e48>
  413bf9:	mov    eax,0x0
  413bfe:	call   4041d0 <printf@plt>
  413c03:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413c08:	mov    rcx,QWORD PTR [rbp-0x30]
  413c0c:	mov    rax,QWORD PTR [rbp-0x28]
  413c10:	mov    edx,0x5
  413c15:	mov    rdi,rcx
  413c18:	mov    rsi,rax
  413c1b:	call   408c6e <_start@@Base+0x49be>
  413c20:	mov    ecx,eax
  413c22:	mov    rax,rdx
  413c25:	mov    DWORD PTR [rbp-0x20],ecx
  413c28:	mov    QWORD PTR [rbp-0x18],rax
  413c2c:	movzx  eax,BYTE PTR [rbp-0x20]
  413c30:	cmp    al,0x9
  413c32:	je     413c4a <test_mixed_type_union@@Base+0x873>
  413c34:	lea    rdi,[rip+0xd235]        # 420e70 <_IO_stdin_used@@Base+0x2e70>
  413c3b:	mov    eax,0x0
  413c40:	call   4041d0 <printf@plt>
  413c45:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413c4a:	mov    rcx,QWORD PTR [rbp-0x30]
  413c4e:	mov    rax,QWORD PTR [rbp-0x28]
  413c52:	mov    edx,0x6
  413c57:	mov    rdi,rcx
  413c5a:	mov    rsi,rax
  413c5d:	call   408c6e <_start@@Base+0x49be>
  413c62:	mov    ecx,eax
  413c64:	mov    rax,rdx
  413c67:	mov    DWORD PTR [rbp-0x20],ecx
  413c6a:	mov    QWORD PTR [rbp-0x18],rax
  413c6e:	movzx  eax,BYTE PTR [rbp-0x20]
  413c72:	cmp    al,0x9
  413c74:	je     413c8c <test_mixed_type_union@@Base+0x8b5>
  413c76:	lea    rdi,[rip+0xd21b]        # 420e98 <_IO_stdin_used@@Base+0x2e98>
  413c7d:	mov    eax,0x0
  413c82:	call   4041d0 <printf@plt>
  413c87:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413c8c:	mov    rcx,QWORD PTR [rbp-0x30]
  413c90:	mov    rax,QWORD PTR [rbp-0x28]
  413c94:	mov    edx,0x7
  413c99:	mov    rdi,rcx
  413c9c:	mov    rsi,rax
  413c9f:	call   408c6e <_start@@Base+0x49be>
  413ca4:	mov    ecx,eax
  413ca6:	mov    rax,rdx
  413ca9:	mov    DWORD PTR [rbp-0x20],ecx
  413cac:	mov    QWORD PTR [rbp-0x18],rax
  413cb0:	movzx  eax,BYTE PTR [rbp-0x20]
  413cb4:	cmp    al,0x9
  413cb6:	je     413cce <test_mixed_type_union@@Base+0x8f7>
  413cb8:	lea    rdi,[rip+0xd201]        # 420ec0 <_IO_stdin_used@@Base+0x2ec0>
  413cbf:	mov    eax,0x0
  413cc4:	call   4041d0 <printf@plt>
  413cc9:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413cce:	mov    rcx,QWORD PTR [rbp-0x30]
  413cd2:	mov    rax,QWORD PTR [rbp-0x28]
  413cd6:	mov    edx,0x8
  413cdb:	mov    rdi,rcx
  413cde:	mov    rsi,rax
  413ce1:	call   408c6e <_start@@Base+0x49be>
  413ce6:	mov    ecx,eax
  413ce8:	mov    rax,rdx
  413ceb:	mov    DWORD PTR [rbp-0x20],ecx
  413cee:	mov    QWORD PTR [rbp-0x18],rax
  413cf2:	movzx  eax,BYTE PTR [rbp-0x20]
  413cf6:	cmp    al,0xb
  413cf8:	je     413d0d <test_mixed_type_union@@Base+0x936>
  413cfa:	lea    rdi,[rip+0xd1e7]        # 420ee8 <_IO_stdin_used@@Base+0x2ee8>
  413d01:	mov    eax,0x0
  413d06:	call   4041d0 <printf@plt>
  413d0b:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413d0d:	mov    rcx,QWORD PTR [rbp-0x30]
  413d11:	mov    rax,QWORD PTR [rbp-0x28]
  413d15:	mov    edx,0x9
  413d1a:	mov    rdi,rcx
  413d1d:	mov    rsi,rax
  413d20:	call   408c6e <_start@@Base+0x49be>
  413d25:	mov    ecx,eax
  413d27:	mov    rax,rdx
  413d2a:	mov    DWORD PTR [rbp-0x20],ecx
  413d2d:	mov    QWORD PTR [rbp-0x18],rax
  413d31:	movzx  eax,BYTE PTR [rbp-0x20]
  413d35:	cmp    al,0xb
  413d37:	je     413d4c <test_mixed_type_union@@Base+0x975>
  413d39:	lea    rdi,[rip+0xd1a8]        # 420ee8 <_IO_stdin_used@@Base+0x2ee8>
  413d40:	mov    eax,0x0
  413d45:	call   4041d0 <printf@plt>
  413d4a:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413d4c:	mov    rdx,QWORD PTR [rbp-0x30]
  413d50:	mov    rax,QWORD PTR [rbp-0x28]
  413d54:	mov    rdi,rdx
  413d57:	mov    rsi,rax
  413d5a:	call   408c47 <_start@@Base+0x4997>
  413d5f:	cmp    rax,0xa
  413d63:	je     413d78 <test_mixed_type_union@@Base+0x9a1>
  413d65:	lea    rdi,[rip+0xd1ac]        # 420f18 <_IO_stdin_used@@Base+0x2f18>
  413d6c:	mov    eax,0x0
  413d71:	call   4041d0 <printf@plt>
  413d76:	jmp    413d7f <test_mixed_type_union@@Base+0x9a8>
  413d78:	mov    DWORD PTR [rbp-0x80],0x0
  413d7f:	mov    rax,QWORD PTR [rbp-0x60]
  413d83:	mov    rdi,rax
  413d86:	call   41ac3d <flatcc_builder_aligned_free@@Base>
  413d8b:	mov    eax,DWORD PTR [rbp-0x80]
  413d8e:	mov    rsi,QWORD PTR [rbp-0x8]
  413d92:	xor    rsi,QWORD PTR fs:0x28
  413d9b:	je     413da2 <test_mixed_type_union@@Base+0x9cb>
  413d9d:	call   4041c0 <__stack_chk_fail@plt>
  413da2:	leave  
  413da3:	ret    

0000000000413da4 <test_add_set_defaults@@Base>:
  413da4:	endbr64 
  413da8:	push   rbp
  413da9:	mov    rbp,rsp
  413dac:	sub    rsp,0x30
  413db0:	mov    QWORD PTR [rbp-0x28],rdi
  413db4:	mov    rax,QWORD PTR fs:0x28
  413dbd:	mov    QWORD PTR [rbp-0x8],rax
  413dc1:	xor    eax,eax
  413dc3:	mov    rax,QWORD PTR [rbp-0x28]
  413dc7:	mov    rdi,rax
  413dca:	call   416246 <flatcc_builder_reset@@Base>
  413dcf:	mov    rax,QWORD PTR [rbp-0x28]
  413dd3:	mov    rdi,rax
  413dd6:	call   40c16b <_start@@Base+0x7ebb>
  413ddb:	mov    rax,QWORD PTR [rbp-0x28]
  413ddf:	lea    rsi,[rip+0xae09]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  413de6:	mov    rdi,rax
  413de9:	call   40b2b9 <_start@@Base+0x7009>
  413dee:	mov    rax,QWORD PTR [rbp-0x28]
  413df2:	mov    esi,0x64
  413df7:	mov    rdi,rax
  413dfa:	call   40b0b0 <_start@@Base+0x6e00>
  413dff:	mov    rax,QWORD PTR [rbp-0x28]
  413e03:	mov    esi,0x64
  413e08:	mov    rdi,rax
  413e0b:	call   40b16e <_start@@Base+0x6ebe>
  413e10:	mov    rax,QWORD PTR [rbp-0x28]
  413e14:	mov    esi,0x8
  413e19:	mov    rdi,rax
  413e1c:	call   40b49f <_start@@Base+0x71ef>
  413e21:	mov    rax,QWORD PTR [rbp-0x28]
  413e25:	mov    rdi,rax
  413e28:	call   40c1db <_start@@Base+0x7f2b>
  413e2d:	lea    rdx,[rbp-0x20]
  413e31:	mov    rax,QWORD PTR [rbp-0x28]
  413e35:	mov    rsi,rdx
  413e38:	mov    rdi,rax
  413e3b:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  413e40:	mov    QWORD PTR [rbp-0x18],rax
  413e44:	mov    rax,QWORD PTR [rbp-0x18]
  413e48:	mov    rdi,rax
  413e4b:	call   40643b <_start@@Base+0x218b>
  413e50:	mov    QWORD PTR [rbp-0x10],rax
  413e54:	mov    rax,QWORD PTR [rbp-0x10]
  413e58:	mov    rdi,rax
  413e5b:	call   4066b0 <_start@@Base+0x2400>
  413e60:	test   eax,eax
  413e62:	je     413e7a <test_add_set_defaults@@Base+0xd6>
  413e64:	lea    rdi,[rip+0xd0d5]        # 420f40 <_IO_stdin_used@@Base+0x2f40>
  413e6b:	call   4041a0 <puts@plt>
  413e70:	mov    eax,0xffffffff
  413e75:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413e7a:	mov    rax,QWORD PTR [rbp-0x10]
  413e7e:	mov    rdi,rax
  413e81:	call   406a31 <_start@@Base+0x2781>
  413e86:	test   eax,eax
  413e88:	jne    413ea0 <test_add_set_defaults@@Base+0xfc>
  413e8a:	lea    rdi,[rip+0xd0df]        # 420f70 <_IO_stdin_used@@Base+0x2f70>
  413e91:	call   4041a0 <puts@plt>
  413e96:	mov    eax,0xffffffff
  413e9b:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413ea0:	mov    rax,QWORD PTR [rbp-0x10]
  413ea4:	mov    rdi,rax
  413ea7:	call   407742 <_start@@Base+0x3492>
  413eac:	test   eax,eax
  413eae:	je     413ec6 <test_add_set_defaults@@Base+0x122>
  413eb0:	lea    rdi,[rip+0xd0e9]        # 420fa0 <_IO_stdin_used@@Base+0x2fa0>
  413eb7:	call   4041a0 <puts@plt>
  413ebc:	mov    eax,0xffffffff
  413ec1:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413ec6:	mov    rax,QWORD PTR [rbp-0x28]
  413eca:	mov    rdi,rax
  413ecd:	call   416246 <flatcc_builder_reset@@Base>
  413ed2:	mov    rax,QWORD PTR [rbp-0x28]
  413ed6:	mov    rdi,rax
  413ed9:	call   40c16b <_start@@Base+0x7ebb>
  413ede:	mov    rax,QWORD PTR [rbp-0x28]
  413ee2:	lea    rsi,[rip+0xad06]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  413ee9:	mov    rdi,rax
  413eec:	call   40b2b9 <_start@@Base+0x7009>
  413ef1:	mov    rax,QWORD PTR [rbp-0x28]
  413ef5:	mov    esi,0x64
  413efa:	mov    rdi,rax
  413efd:	call   40b116 <_start@@Base+0x6e66>
  413f02:	mov    rax,QWORD PTR [rbp-0x28]
  413f06:	mov    esi,0x64
  413f0b:	mov    rdi,rax
  413f0e:	call   40b1d5 <_start@@Base+0x6f25>
  413f13:	mov    rax,QWORD PTR [rbp-0x28]
  413f17:	mov    esi,0x8
  413f1c:	mov    rdi,rax
  413f1f:	call   40b503 <_start@@Base+0x7253>
  413f24:	mov    rax,QWORD PTR [rbp-0x28]
  413f28:	mov    rdi,rax
  413f2b:	call   40c1db <_start@@Base+0x7f2b>
  413f30:	lea    rdx,[rbp-0x20]
  413f34:	mov    rax,QWORD PTR [rbp-0x28]
  413f38:	mov    rsi,rdx
  413f3b:	mov    rdi,rax
  413f3e:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  413f43:	mov    QWORD PTR [rbp-0x18],rax
  413f47:	mov    rax,QWORD PTR [rbp-0x18]
  413f4b:	mov    rdi,rax
  413f4e:	call   40643b <_start@@Base+0x218b>
  413f53:	mov    QWORD PTR [rbp-0x10],rax
  413f57:	mov    rax,QWORD PTR [rbp-0x10]
  413f5b:	mov    rdi,rax
  413f5e:	call   4066b0 <_start@@Base+0x2400>
  413f63:	test   eax,eax
  413f65:	jne    413f7a <test_add_set_defaults@@Base+0x1d6>
  413f67:	lea    rdi,[rip+0xd062]        # 420fd0 <_IO_stdin_used@@Base+0x2fd0>
  413f6e:	call   4041a0 <puts@plt>
  413f73:	mov    eax,0xffffffff
  413f78:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413f7a:	mov    rax,QWORD PTR [rbp-0x10]
  413f7e:	mov    rdi,rax
  413f81:	call   406a31 <_start@@Base+0x2781>
  413f86:	test   eax,eax
  413f88:	jne    413f9d <test_add_set_defaults@@Base+0x1f9>
  413f8a:	lea    rdi,[rip+0xd077]        # 421008 <_IO_stdin_used@@Base+0x3008>
  413f91:	call   4041a0 <puts@plt>
  413f96:	mov    eax,0xffffffff
  413f9b:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413f9d:	mov    rax,QWORD PTR [rbp-0x10]
  413fa1:	mov    rdi,rax
  413fa4:	call   407742 <_start@@Base+0x3492>
  413fa9:	test   eax,eax
  413fab:	jne    413fc0 <test_add_set_defaults@@Base+0x21c>
  413fad:	lea    rdi,[rip+0xd094]        # 421048 <_IO_stdin_used@@Base+0x3048>
  413fb4:	call   4041a0 <puts@plt>
  413fb9:	mov    eax,0xffffffff
  413fbe:	jmp    413fc5 <test_add_set_defaults@@Base+0x221>
  413fc0:	mov    eax,0x0
  413fc5:	mov    rcx,QWORD PTR [rbp-0x8]
  413fc9:	xor    rcx,QWORD PTR fs:0x28
  413fd2:	je     413fd9 <test_add_set_defaults@@Base+0x235>
  413fd4:	call   4041c0 <__stack_chk_fail@plt>
  413fd9:	leave  
  413fda:	ret    

0000000000413fdb <test_nested_buffer@@Base>:
  413fdb:	endbr64 
  413fdf:	push   rbp
  413fe0:	mov    rbp,rsp
  413fe3:	sub    rsp,0x40
  413fe7:	mov    QWORD PTR [rbp-0x38],rdi
  413feb:	mov    rax,QWORD PTR fs:0x28
  413ff4:	mov    QWORD PTR [rbp-0x8],rax
  413ff8:	xor    eax,eax
  413ffa:	mov    rax,QWORD PTR [rbp-0x38]
  413ffe:	mov    rdi,rax
  414001:	call   416246 <flatcc_builder_reset@@Base>
  414006:	mov    rax,QWORD PTR [rbp-0x38]
  41400a:	mov    rdi,rax
  41400d:	call   40c16b <_start@@Base+0x7ebb>
  414012:	mov    rax,QWORD PTR [rbp-0x38]
  414016:	lea    rsi,[rip+0xabd2]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  41401d:	mov    rdi,rax
  414020:	call   40b2b9 <_start@@Base+0x7009>
  414025:	mov    rax,QWORD PTR [rbp-0x38]
  414029:	mov    rdi,rax
  41402c:	call   40bf23 <_start@@Base+0x7c73>
  414031:	mov    rax,QWORD PTR [rbp-0x38]
  414035:	lea    rsi,[rip+0xd042]        # 42107e <_IO_stdin_used@@Base+0x307e>
  41403c:	mov    rdi,rax
  41403f:	call   40b2b9 <_start@@Base+0x7009>
  414044:	mov    rax,QWORD PTR [rbp-0x38]
  414048:	mov    rdi,rax
  41404b:	call   40bf5b <_start@@Base+0x7cab>
  414050:	mov    rax,QWORD PTR [rbp-0x38]
  414054:	mov    esi,0xa
  414059:	mov    rdi,rax
  41405c:	call   40b0b0 <_start@@Base+0x6e00>
  414061:	mov    rax,QWORD PTR [rbp-0x38]
  414065:	mov    rdi,rax
  414068:	call   40c1db <_start@@Base+0x7f2b>
  41406d:	lea    rdx,[rbp-0x28]
  414071:	mov    rax,QWORD PTR [rbp-0x38]
  414075:	mov    rsi,rdx
  414078:	mov    rdi,rax
  41407b:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  414080:	mov    QWORD PTR [rbp-0x20],rax
  414084:	mov    rax,QWORD PTR [rip+0x17f6d]        # 42bff8 <stderr@GLIBC_2.2.5>
  41408b:	mov    rcx,QWORD PTR [rax]
  41408e:	mov    rdx,QWORD PTR [rbp-0x28]
  414092:	mov    rax,QWORD PTR [rbp-0x20]
  414096:	mov    rsi,rax
  414099:	lea    rdi,[rip+0xcfee]        # 42108e <_IO_stdin_used@@Base+0x308e>
  4140a0:	call   40e441 <_start@@Base+0xa191>
  4140a5:	mov    rax,QWORD PTR [rbp-0x20]
  4140a9:	mov    rdi,rax
  4140ac:	call   40643b <_start@@Base+0x218b>
  4140b1:	mov    QWORD PTR [rbp-0x18],rax
  4140b5:	mov    rax,QWORD PTR [rbp-0x18]
  4140b9:	mov    rdi,rax
  4140bc:	call   406adb <_start@@Base+0x282b>
  4140c1:	lea    rsi,[rip+0xab27]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  4140c8:	mov    rdi,rax
  4140cb:	call   404240 <strcmp@plt>
  4140d0:	test   eax,eax
  4140d2:	je     4140ea <test_nested_buffer@@Base+0x10f>
  4140d4:	lea    rdi,[rip+0xcfc5]        # 4210a0 <_IO_stdin_used@@Base+0x30a0>
  4140db:	call   4041a0 <puts@plt>
  4140e0:	mov    eax,0xffffffff
  4140e5:	jmp    414186 <test_nested_buffer@@Base+0x1ab>
  4140ea:	mov    rax,QWORD PTR [rbp-0x18]
  4140ee:	mov    rdi,rax
  4140f1:	call   408101 <_start@@Base+0x3e51>
  4140f6:	mov    QWORD PTR [rbp-0x10],rax
  4140fa:	mov    rax,QWORD PTR [rbp-0x18]
  4140fe:	mov    rdi,rax
  414101:	call   4065f0 <_start@@Base+0x2340>
  414106:	cmp    ax,0xa
  41410a:	je     41411f <test_nested_buffer@@Base+0x144>
  41410c:	lea    rdi,[rip+0xcfad]        # 4210c0 <_IO_stdin_used@@Base+0x30c0>
  414113:	call   4041a0 <puts@plt>
  414118:	mov    eax,0xffffffff
  41411d:	jmp    414186 <test_nested_buffer@@Base+0x1ab>
  41411f:	mov    rax,QWORD PTR [rbp-0x10]
  414123:	mov    rdi,rax
  414126:	call   406adb <_start@@Base+0x282b>
  41412b:	test   rax,rax
  41412e:	jne    41414f <test_nested_buffer@@Base+0x174>
  414130:	lea    rcx,[rip+0xdfb9]        # 4220f0 <_IO_stdin_used@@Base+0x40f0>
  414137:	mov    edx,0x88c
  41413c:	lea    rsi,[rip+0xb3c5]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  414143:	lea    rdi,[rip+0xcf9a]        # 4210e4 <_IO_stdin_used@@Base+0x30e4>
  41414a:	call   4041f0 <__assert_fail@plt>
  41414f:	mov    rax,QWORD PTR [rbp-0x10]
  414153:	mov    rdi,rax
  414156:	call   406adb <_start@@Base+0x282b>
  41415b:	lea    rsi,[rip+0xcf1c]        # 42107e <_IO_stdin_used@@Base+0x307e>
  414162:	mov    rdi,rax
  414165:	call   404240 <strcmp@plt>
  41416a:	test   eax,eax
  41416c:	je     414181 <test_nested_buffer@@Base+0x1a6>
  41416e:	lea    rdi,[rip+0xcf88]        # 4210fd <_IO_stdin_used@@Base+0x30fd>
  414175:	call   4041a0 <puts@plt>
  41417a:	mov    eax,0xffffffff
  41417f:	jmp    414186 <test_nested_buffer@@Base+0x1ab>
  414181:	mov    eax,0x0
  414186:	mov    rcx,QWORD PTR [rbp-0x8]
  41418a:	xor    rcx,QWORD PTR fs:0x28
  414193:	je     41419a <test_nested_buffer@@Base+0x1bf>
  414195:	call   4041c0 <__stack_chk_fail@plt>
  41419a:	leave  
  41419b:	ret    

000000000041419c <test_nested_buffer_first@@Base>:
  41419c:	endbr64 
  4141a0:	push   rbp
  4141a1:	mov    rbp,rsp
  4141a4:	sub    rsp,0x40
  4141a8:	mov    QWORD PTR [rbp-0x38],rdi
  4141ac:	mov    rax,QWORD PTR fs:0x28
  4141b5:	mov    QWORD PTR [rbp-0x8],rax
  4141b9:	xor    eax,eax
  4141bb:	mov    rax,QWORD PTR [rbp-0x38]
  4141bf:	mov    rdi,rax
  4141c2:	call   416246 <flatcc_builder_reset@@Base>
  4141c7:	mov    rax,QWORD PTR [rbp-0x38]
  4141cb:	mov    rdi,rax
  4141ce:	call   40c16b <_start@@Base+0x7ebb>
  4141d3:	mov    rax,QWORD PTR [rbp-0x38]
  4141d7:	mov    rdi,rax
  4141da:	call   40bf23 <_start@@Base+0x7c73>
  4141df:	mov    rax,QWORD PTR [rbp-0x38]
  4141e3:	lea    rsi,[rip+0xce94]        # 42107e <_IO_stdin_used@@Base+0x307e>
  4141ea:	mov    rdi,rax
  4141ed:	call   40b2b9 <_start@@Base+0x7009>
  4141f2:	mov    rax,QWORD PTR [rbp-0x38]
  4141f6:	mov    rdi,rax
  4141f9:	call   40bf5b <_start@@Base+0x7cab>
  4141fe:	mov    rax,QWORD PTR [rbp-0x38]
  414202:	mov    esi,0xa
  414207:	mov    rdi,rax
  41420a:	call   40b0b0 <_start@@Base+0x6e00>
  41420f:	mov    rax,QWORD PTR [rbp-0x38]
  414213:	lea    rsi,[rip+0xa9d5]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  41421a:	mov    rdi,rax
  41421d:	call   40b2b9 <_start@@Base+0x7009>
  414222:	mov    rax,QWORD PTR [rbp-0x38]
  414226:	mov    rdi,rax
  414229:	call   40c1db <_start@@Base+0x7f2b>
  41422e:	lea    rdx,[rbp-0x28]
  414232:	mov    rax,QWORD PTR [rbp-0x38]
  414236:	mov    rsi,rdx
  414239:	mov    rdi,rax
  41423c:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  414241:	mov    QWORD PTR [rbp-0x20],rax
  414245:	mov    rax,QWORD PTR [rip+0x17dac]        # 42bff8 <stderr@GLIBC_2.2.5>
  41424c:	mov    rcx,QWORD PTR [rax]
  41424f:	mov    rdx,QWORD PTR [rbp-0x28]
  414253:	mov    rax,QWORD PTR [rbp-0x20]
  414257:	mov    rsi,rax
  41425a:	lea    rdi,[rip+0xce2d]        # 42108e <_IO_stdin_used@@Base+0x308e>
  414261:	call   40e441 <_start@@Base+0xa191>
  414266:	mov    rax,QWORD PTR [rbp-0x20]
  41426a:	mov    rdi,rax
  41426d:	call   40643b <_start@@Base+0x218b>
  414272:	mov    QWORD PTR [rbp-0x18],rax
  414276:	mov    rax,QWORD PTR [rbp-0x18]
  41427a:	mov    rdi,rax
  41427d:	call   406adb <_start@@Base+0x282b>
  414282:	lea    rsi,[rip+0xa966]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  414289:	mov    rdi,rax
  41428c:	call   404240 <strcmp@plt>
  414291:	test   eax,eax
  414293:	je     4142ab <test_nested_buffer_first@@Base+0x10f>
  414295:	lea    rdi,[rip+0xce04]        # 4210a0 <_IO_stdin_used@@Base+0x30a0>
  41429c:	call   4041a0 <puts@plt>
  4142a1:	mov    eax,0xffffffff
  4142a6:	jmp    414347 <test_nested_buffer_first@@Base+0x1ab>
  4142ab:	mov    rax,QWORD PTR [rbp-0x18]
  4142af:	mov    rdi,rax
  4142b2:	call   408101 <_start@@Base+0x3e51>
  4142b7:	mov    QWORD PTR [rbp-0x10],rax
  4142bb:	mov    rax,QWORD PTR [rbp-0x18]
  4142bf:	mov    rdi,rax
  4142c2:	call   4065f0 <_start@@Base+0x2340>
  4142c7:	cmp    ax,0xa
  4142cb:	je     4142e0 <test_nested_buffer_first@@Base+0x144>
  4142cd:	lea    rdi,[rip+0xcdec]        # 4210c0 <_IO_stdin_used@@Base+0x30c0>
  4142d4:	call   4041a0 <puts@plt>
  4142d9:	mov    eax,0xffffffff
  4142de:	jmp    414347 <test_nested_buffer_first@@Base+0x1ab>
  4142e0:	mov    rax,QWORD PTR [rbp-0x10]
  4142e4:	mov    rdi,rax
  4142e7:	call   406adb <_start@@Base+0x282b>
  4142ec:	test   rax,rax
  4142ef:	jne    414310 <test_nested_buffer_first@@Base+0x174>
  4142f1:	lea    rcx,[rip+0xde58]        # 422150 <_IO_stdin_used@@Base+0x4150>
  4142f8:	mov    edx,0x8c1
  4142fd:	lea    rsi,[rip+0xb204]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  414304:	lea    rdi,[rip+0xcdd9]        # 4210e4 <_IO_stdin_used@@Base+0x30e4>
  41430b:	call   4041f0 <__assert_fail@plt>
  414310:	mov    rax,QWORD PTR [rbp-0x10]
  414314:	mov    rdi,rax
  414317:	call   406adb <_start@@Base+0x282b>
  41431c:	lea    rsi,[rip+0xcd5b]        # 42107e <_IO_stdin_used@@Base+0x307e>
  414323:	mov    rdi,rax
  414326:	call   404240 <strcmp@plt>
  41432b:	test   eax,eax
  41432d:	je     414342 <test_nested_buffer_first@@Base+0x1a6>
  41432f:	lea    rdi,[rip+0xcdc7]        # 4210fd <_IO_stdin_used@@Base+0x30fd>
  414336:	call   4041a0 <puts@plt>
  41433b:	mov    eax,0xffffffff
  414340:	jmp    414347 <test_nested_buffer_first@@Base+0x1ab>
  414342:	mov    eax,0x0
  414347:	mov    rcx,QWORD PTR [rbp-0x8]
  41434b:	xor    rcx,QWORD PTR fs:0x28
  414354:	je     41435b <test_nested_buffer_first@@Base+0x1bf>
  414356:	call   4041c0 <__stack_chk_fail@plt>
  41435b:	leave  
  41435c:	ret    

000000000041435d <test_nested_buffer_using_nest@@Base>:
  41435d:	endbr64 
  414361:	push   rbp
  414362:	mov    rbp,rsp
  414365:	sub    rsp,0x450
  41436c:	mov    QWORD PTR [rbp-0x448],rdi
  414373:	mov    rax,QWORD PTR fs:0x28
  41437c:	mov    QWORD PTR [rbp-0x8],rax
  414380:	xor    eax,eax
  414382:	mov    rax,QWORD PTR [rbp-0x448]
  414389:	mov    rdi,rax
  41438c:	call   416246 <flatcc_builder_reset@@Base>
  414391:	mov    rax,QWORD PTR [rbp-0x448]
  414398:	mov    rdi,rax
  41439b:	call   40c16b <_start@@Base+0x7ebb>
  4143a0:	mov    rax,QWORD PTR [rbp-0x448]
  4143a7:	lea    rsi,[rip+0xccd0]        # 42107e <_IO_stdin_used@@Base+0x307e>
  4143ae:	mov    rdi,rax
  4143b1:	call   40b2b9 <_start@@Base+0x7009>
  4143b6:	mov    rax,QWORD PTR [rbp-0x448]
  4143bd:	mov    esi,0x2a
  4143c2:	mov    rdi,rax
  4143c5:	call   40b16e <_start@@Base+0x6ebe>
  4143ca:	mov    rax,QWORD PTR [rbp-0x448]
  4143d1:	mov    rdi,rax
  4143d4:	call   40c1db <_start@@Base+0x7f2b>
  4143d9:	mov    rax,QWORD PTR [rbp-0x448]
  4143e0:	mov    rdi,rax
  4143e3:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  4143e8:	mov    QWORD PTR [rbp-0x430],rax
  4143ef:	lea    rcx,[rbp-0x410]
  4143f6:	mov    rax,QWORD PTR [rbp-0x448]
  4143fd:	mov    edx,0x400
  414402:	mov    rsi,rcx
  414405:	mov    rdi,rax
  414408:	call   41a9f5 <flatcc_builder_copy_buffer@@Base>
  41440d:	test   rax,rax
  414410:	jne    414428 <test_nested_buffer_using_nest@@Base+0xcb>
  414412:	lea    rdi,[rip+0xcd01]        # 42111a <_IO_stdin_used@@Base+0x311a>
  414419:	call   4041a0 <puts@plt>
  41441e:	mov    eax,0xffffffff
  414423:	jmp    41460c <test_nested_buffer_using_nest@@Base+0x2af>
  414428:	mov    rax,QWORD PTR [rbp-0x448]
  41442f:	mov    rdi,rax
  414432:	call   416246 <flatcc_builder_reset@@Base>
  414437:	mov    rax,QWORD PTR [rbp-0x448]
  41443e:	mov    rdi,rax
  414441:	call   40c16b <_start@@Base+0x7ebb>
  414446:	mov    rdx,QWORD PTR [rbp-0x430]
  41444d:	lea    rsi,[rbp-0x410]
  414454:	mov    rax,QWORD PTR [rbp-0x448]
  41445b:	mov    ecx,0x0
  414460:	mov    rdi,rax
  414463:	call   40bf95 <_start@@Base+0x7ce5>
  414468:	mov    rax,QWORD PTR [rbp-0x448]
  41446f:	mov    esi,0xa
  414474:	mov    rdi,rax
  414477:	call   40b0b0 <_start@@Base+0x6e00>
  41447c:	mov    rax,QWORD PTR [rbp-0x448]
  414483:	lea    rsi,[rip+0xa765]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  41448a:	mov    rdi,rax
  41448d:	call   40b2b9 <_start@@Base+0x7009>
  414492:	mov    rax,QWORD PTR [rbp-0x448]
  414499:	mov    rdi,rax
  41449c:	call   40c1db <_start@@Base+0x7f2b>
  4144a1:	lea    rdx,[rbp-0x438]
  4144a8:	mov    rax,QWORD PTR [rbp-0x448]
  4144af:	mov    rsi,rdx
  4144b2:	mov    rdi,rax
  4144b5:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  4144ba:	mov    QWORD PTR [rbp-0x428],rax
  4144c1:	mov    rax,QWORD PTR [rip+0x17b30]        # 42bff8 <stderr@GLIBC_2.2.5>
  4144c8:	mov    rcx,QWORD PTR [rax]
  4144cb:	mov    rdx,QWORD PTR [rbp-0x438]
  4144d2:	mov    rax,QWORD PTR [rbp-0x428]
  4144d9:	mov    rsi,rax
  4144dc:	lea    rdi,[rip+0xcc55]        # 421138 <_IO_stdin_used@@Base+0x3138>
  4144e3:	call   40e441 <_start@@Base+0xa191>
  4144e8:	mov    rax,QWORD PTR [rbp-0x428]
  4144ef:	mov    rdi,rax
  4144f2:	call   40643b <_start@@Base+0x218b>
  4144f7:	mov    QWORD PTR [rbp-0x420],rax
  4144fe:	mov    rax,QWORD PTR [rbp-0x420]
  414505:	mov    rdi,rax
  414508:	call   406adb <_start@@Base+0x282b>
  41450d:	lea    rsi,[rip+0xa6db]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  414514:	mov    rdi,rax
  414517:	call   404240 <strcmp@plt>
  41451c:	test   eax,eax
  41451e:	je     414536 <test_nested_buffer_using_nest@@Base+0x1d9>
  414520:	lea    rdi,[rip+0xcb79]        # 4210a0 <_IO_stdin_used@@Base+0x30a0>
  414527:	call   4041a0 <puts@plt>
  41452c:	mov    eax,0xffffffff
  414531:	jmp    41460c <test_nested_buffer_using_nest@@Base+0x2af>
  414536:	mov    rax,QWORD PTR [rbp-0x420]
  41453d:	mov    rdi,rax
  414540:	call   408101 <_start@@Base+0x3e51>
  414545:	mov    QWORD PTR [rbp-0x418],rax
  41454c:	mov    rax,QWORD PTR [rbp-0x420]
  414553:	mov    rdi,rax
  414556:	call   4065f0 <_start@@Base+0x2340>
  41455b:	cmp    ax,0xa
  41455f:	je     414577 <test_nested_buffer_using_nest@@Base+0x21a>
  414561:	lea    rdi,[rip+0xcb58]        # 4210c0 <_IO_stdin_used@@Base+0x30c0>
  414568:	call   4041a0 <puts@plt>
  41456d:	mov    eax,0xffffffff
  414572:	jmp    41460c <test_nested_buffer_using_nest@@Base+0x2af>
  414577:	mov    rax,QWORD PTR [rbp-0x418]
  41457e:	mov    rdi,rax
  414581:	call   406adb <_start@@Base+0x282b>
  414586:	test   rax,rax
  414589:	jne    4145aa <test_nested_buffer_using_nest@@Base+0x24d>
  41458b:	lea    rcx,[rip+0xdbde]        # 422170 <_IO_stdin_used@@Base+0x4170>
  414592:	mov    edx,0x8fa
  414597:	lea    rsi,[rip+0xaf6a]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  41459e:	lea    rdi,[rip+0xcb3f]        # 4210e4 <_IO_stdin_used@@Base+0x30e4>
  4145a5:	call   4041f0 <__assert_fail@plt>
  4145aa:	mov    rax,QWORD PTR [rbp-0x418]
  4145b1:	mov    rdi,rax
  4145b4:	call   406adb <_start@@Base+0x282b>
  4145b9:	lea    rsi,[rip+0xcabe]        # 42107e <_IO_stdin_used@@Base+0x307e>
  4145c0:	mov    rdi,rax
  4145c3:	call   404240 <strcmp@plt>
  4145c8:	test   eax,eax
  4145ca:	je     4145df <test_nested_buffer_using_nest@@Base+0x282>
  4145cc:	lea    rdi,[rip+0xcb2a]        # 4210fd <_IO_stdin_used@@Base+0x30fd>
  4145d3:	call   4041a0 <puts@plt>
  4145d8:	mov    eax,0xffffffff
  4145dd:	jmp    41460c <test_nested_buffer_using_nest@@Base+0x2af>
  4145df:	mov    rax,QWORD PTR [rbp-0x418]
  4145e6:	mov    rdi,rax
  4145e9:	call   406971 <_start@@Base+0x26c1>
  4145ee:	cmp    ax,0x2a
  4145f2:	je     414607 <test_nested_buffer_using_nest@@Base+0x2aa>
  4145f4:	lea    rdi,[rip+0xcb65]        # 421160 <_IO_stdin_used@@Base+0x3160>
  4145fb:	call   4041a0 <puts@plt>
  414600:	mov    eax,0xffffffff
  414605:	jmp    41460c <test_nested_buffer_using_nest@@Base+0x2af>
  414607:	mov    eax,0x0
  41460c:	mov    rcx,QWORD PTR [rbp-0x8]
  414610:	xor    rcx,QWORD PTR fs:0x28
  414619:	je     414620 <test_nested_buffer_using_nest@@Base+0x2c3>
  41461b:	call   4041c0 <__stack_chk_fail@plt>
  414620:	leave  
  414621:	ret    

0000000000414622 <verify_include@@Base>:
  414622:	endbr64 
  414626:	push   rbp
  414627:	mov    rbp,rsp
  41462a:	mov    QWORD PTR [rbp-0x8],rdi
  41462e:	mov    eax,0x0
  414633:	pop    rbp
  414634:	ret    

0000000000414635 <test_struct_buffer@@Base>:
  414635:	endbr64 
  414639:	push   rbp
  41463a:	mov    rbp,rsp
  41463d:	sub    rsp,0xa0
  414644:	mov    QWORD PTR [rbp-0x98],rdi
  41464b:	mov    rax,QWORD PTR fs:0x28
  414654:	mov    QWORD PTR [rbp-0x8],rax
  414658:	xor    eax,eax
  41465a:	mov    rax,QWORD PTR [rbp-0x98]
  414661:	mov    rdi,rax
  414664:	call   416246 <flatcc_builder_reset@@Base>
  414669:	vmovsd xmm0,QWORD PTR [rip+0xdba7]        # 422218 <_IO_stdin_used@@Base+0x4218>
  414671:	mov    rax,QWORD PTR [rbp-0x98]
  414678:	mov    ecx,0xffffffef
  41467d:	mov    edx,0xaaa
  414682:	mov    esi,0x8
  414687:	vmovapd xmm3,xmm0
  41468b:	vmovss xmm2,DWORD PTR [rip+0xdb8d]        # 422220 <_IO_stdin_used@@Base+0x4220>
  414693:	vmovss xmm1,DWORD PTR [rip+0xdb71]        # 42220c <_IO_stdin_used@@Base+0x420c>
  41469b:	vmovss xmm0,DWORD PTR [rip+0xdb65]        # 422208 <_IO_stdin_used@@Base+0x4208>
  4146a3:	mov    rdi,rax
  4146a6:	call   40a2de <_start@@Base+0x602e>
  4146ab:	mov    rax,QWORD PTR [rbp-0x98]
  4146b2:	mov    rdi,rax
  4146b5:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  4146ba:	mov    QWORD PTR [rbp-0x88],rax
  4146c1:	cmp    QWORD PTR [rbp-0x88],0x30
  4146c9:	je     4146ea <test_struct_buffer@@Base+0xb5>
  4146cb:	lea    rcx,[rip+0xdabe]        # 422190 <_IO_stdin_used@@Base+0x4190>
  4146d2:	mov    edx,0x923
  4146d7:	lea    rsi,[rip+0xae2a]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4146de:	lea    rdi,[rip+0xca9f]        # 421184 <_IO_stdin_used@@Base+0x3184>
  4146e5:	call   4041f0 <__assert_fail@plt>
  4146ea:	mov    rax,QWORD PTR [rbp-0x88]
  4146f1:	mov    esi,eax
  4146f3:	lea    rdi,[rip+0xca95]        # 42118f <_IO_stdin_used@@Base+0x318f>
  4146fa:	mov    eax,0x0
  4146ff:	call   4041d0 <printf@plt>
  414704:	mov    rax,QWORD PTR [rbp-0x98]
  41470b:	mov    rdi,rax
  41470e:	call   41ac5c <flatcc_builder_get_emit_context@@Base>
  414713:	mov    rdi,rax
  414716:	call   409854 <_start@@Base+0x55a4>
  41471b:	cmp    QWORD PTR [rbp-0x88],rax
  414722:	je     414743 <test_struct_buffer@@Base+0x10e>
  414724:	lea    rcx,[rip+0xda65]        # 422190 <_IO_stdin_used@@Base+0x4190>
  41472b:	mov    edx,0x925
  414730:	lea    rsi,[rip+0xadd1]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  414737:	lea    rdi,[rip+0xca72]        # 4211b0 <_IO_stdin_used@@Base+0x31b0>
  41473e:	call   4041f0 <__assert_fail@plt>
  414743:	lea    rcx,[rbp-0x70]
  414747:	mov    rax,QWORD PTR [rbp-0x98]
  41474e:	mov    edx,0x64
  414753:	mov    rsi,rcx
  414756:	mov    rdi,rax
  414759:	call   41a9f5 <flatcc_builder_copy_buffer@@Base>
  41475e:	test   rax,rax
  414761:	jne    414779 <test_struct_buffer@@Base+0x144>
  414763:	lea    rdi,[rip+0xca91]        # 4211fb <_IO_stdin_used@@Base+0x31fb>
  41476a:	call   4041a0 <puts@plt>
  41476f:	mov    eax,0xffffffff
  414774:	jmp    414905 <test_struct_buffer@@Base+0x2d0>
  414779:	mov    rax,QWORD PTR [rip+0x17878]        # 42bff8 <stderr@GLIBC_2.2.5>
  414780:	mov    rcx,QWORD PTR [rax]
  414783:	mov    rdx,QWORD PTR [rbp-0x88]
  41478a:	lea    rax,[rbp-0x70]
  41478e:	mov    rsi,rax
  414791:	lea    rdi,[rip+0xca6f]        # 421207 <_IO_stdin_used@@Base+0x3207>
  414798:	call   40e441 <_start@@Base+0xa191>
  41479d:	lea    rax,[rbp-0x70]
  4147a1:	lea    rsi,[rip+0x99cc]        # 41e174 <_IO_stdin_used@@Base+0x174>
  4147a8:	mov    rdi,rax
  4147ab:	call   405544 <_start@@Base+0x1294>
  4147b0:	test   eax,eax
  4147b2:	jne    4147ca <test_struct_buffer@@Base+0x195>
  4147b4:	lea    rdi,[rip+0xca65]        # 421220 <_IO_stdin_used@@Base+0x3220>
  4147bb:	call   4041a0 <puts@plt>
  4147c0:	mov    eax,0xffffffff
  4147c5:	jmp    414905 <test_struct_buffer@@Base+0x2d0>
  4147ca:	lea    rax,[rbp-0x70]
  4147ce:	lea    rsi,[rip+0xca6c]        # 421241 <_IO_stdin_used@@Base+0x3241>
  4147d5:	mov    rdi,rax
  4147d8:	call   405544 <_start@@Base+0x1294>
  4147dd:	test   eax,eax
  4147df:	je     4147f7 <test_struct_buffer@@Base+0x1c2>
  4147e1:	lea    rdi,[rip+0xca60]        # 421248 <_IO_stdin_used@@Base+0x3248>
  4147e8:	call   4041a0 <puts@plt>
  4147ed:	mov    eax,0xffffffff
  4147f2:	jmp    414905 <test_struct_buffer@@Base+0x2d0>
  4147f7:	lea    rax,[rbp-0x70]
  4147fb:	lea    rsi,[rip+0x9972]        # 41e174 <_IO_stdin_used@@Base+0x174>
  414802:	mov    rdi,rax
  414805:	call   405544 <_start@@Base+0x1294>
  41480a:	test   eax,eax
  41480c:	jne    414824 <test_struct_buffer@@Base+0x1ef>
  41480e:	lea    rdi,[rip+0xca63]        # 421278 <_IO_stdin_used@@Base+0x3278>
  414815:	call   4041a0 <puts@plt>
  41481a:	mov    eax,0xffffffff
  41481f:	jmp    414905 <test_struct_buffer@@Base+0x2d0>
  414824:	lea    rax,[rbp-0x70]
  414828:	mov    rdi,rax
  41482b:	call   4058d1 <_start@@Base+0x1621>
  414830:	mov    QWORD PTR [rbp-0x80],rax
  414834:	mov    rax,QWORD PTR [rbp-0x80]
  414838:	mov    QWORD PTR [rbp-0x78],rax
  41483c:	mov    rax,QWORD PTR [rbp-0x78]
  414840:	mov    rdi,rax
  414843:	call   40a1d0 <_start@@Base+0x5f20>
  414848:	mov    rax,QWORD PTR [rbp-0x78]
  41484c:	vmovss xmm0,DWORD PTR [rax]
  414850:	vmovss xmm1,DWORD PTR [rip+0xd9b0]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414858:	vucomiss xmm0,xmm1
  41485c:	jp     4148ed <test_struct_buffer@@Base+0x2b8>
  414862:	vmovss xmm1,DWORD PTR [rip+0xd99e]        # 422208 <_IO_stdin_used@@Base+0x4208>
  41486a:	vucomiss xmm0,xmm1
  41486e:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  414870:	mov    rax,QWORD PTR [rbp-0x78]
  414874:	vmovss xmm0,DWORD PTR [rax+0x4]
  414879:	vucomiss xmm0,DWORD PTR [rip+0xd98b]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414881:	jp     4148ed <test_struct_buffer@@Base+0x2b8>
  414883:	vucomiss xmm0,DWORD PTR [rip+0xd981]        # 42220c <_IO_stdin_used@@Base+0x420c>
  41488b:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  41488d:	mov    rax,QWORD PTR [rbp-0x78]
  414891:	vmovss xmm0,DWORD PTR [rax+0x8]
  414896:	vucomiss xmm0,DWORD PTR [rip+0xd982]        # 422220 <_IO_stdin_used@@Base+0x4220>
  41489e:	jp     4148ed <test_struct_buffer@@Base+0x2b8>
  4148a0:	vucomiss xmm0,DWORD PTR [rip+0xd978]        # 422220 <_IO_stdin_used@@Base+0x4220>
  4148a8:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  4148aa:	mov    rax,QWORD PTR [rbp-0x78]
  4148ae:	vmovsd xmm0,QWORD PTR [rax+0x10]
  4148b3:	vucomisd xmm0,QWORD PTR [rip+0xd95d]        # 422218 <_IO_stdin_used@@Base+0x4218>
  4148bb:	jp     4148ed <test_struct_buffer@@Base+0x2b8>
  4148bd:	vucomisd xmm0,QWORD PTR [rip+0xd953]        # 422218 <_IO_stdin_used@@Base+0x4218>
  4148c5:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  4148c7:	mov    rax,QWORD PTR [rbp-0x78]
  4148cb:	movzx  eax,BYTE PTR [rax+0x18]
  4148cf:	cmp    al,0x8
  4148d1:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  4148d3:	mov    rax,QWORD PTR [rbp-0x78]
  4148d7:	movzx  eax,WORD PTR [rax+0x1a]
  4148db:	cmp    ax,0xaaa
  4148df:	jne    4148ed <test_struct_buffer@@Base+0x2b8>
  4148e1:	mov    rax,QWORD PTR [rbp-0x78]
  4148e5:	movzx  eax,BYTE PTR [rax+0x1c]
  4148e9:	cmp    al,0xef
  4148eb:	je     414900 <test_struct_buffer@@Base+0x2cb>
  4148ed:	lea    rdi,[rip+0xc9a7]        # 42129b <_IO_stdin_used@@Base+0x329b>
  4148f4:	call   4041a0 <puts@plt>
  4148f9:	mov    eax,0xffffffff
  4148fe:	jmp    414905 <test_struct_buffer@@Base+0x2d0>
  414900:	mov    eax,0x0
  414905:	mov    rdx,QWORD PTR [rbp-0x8]
  414909:	xor    rdx,QWORD PTR fs:0x28
  414912:	je     414919 <test_struct_buffer@@Base+0x2e4>
  414914:	call   4041c0 <__stack_chk_fail@plt>
  414919:	leave  
  41491a:	ret    

000000000041491b <test_typed_struct_buffer@@Base>:
  41491b:	endbr64 
  41491f:	push   rbp
  414920:	mov    rbp,rsp
  414923:	sub    rsp,0xa0
  41492a:	mov    QWORD PTR [rbp-0x98],rdi
  414931:	mov    rax,QWORD PTR fs:0x28
  41493a:	mov    QWORD PTR [rbp-0x8],rax
  41493e:	xor    eax,eax
  414940:	mov    rax,QWORD PTR [rbp-0x98]
  414947:	mov    rdi,rax
  41494a:	call   416246 <flatcc_builder_reset@@Base>
  41494f:	vmovsd xmm0,QWORD PTR [rip+0xd8c1]        # 422218 <_IO_stdin_used@@Base+0x4218>
  414957:	mov    rax,QWORD PTR [rbp-0x98]
  41495e:	mov    ecx,0xffffffef
  414963:	mov    edx,0xaaa
  414968:	mov    esi,0x8
  41496d:	vmovapd xmm3,xmm0
  414971:	vmovss xmm2,DWORD PTR [rip+0xd8a7]        # 422220 <_IO_stdin_used@@Base+0x4220>
  414979:	vmovss xmm1,DWORD PTR [rip+0xd88b]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414981:	vmovss xmm0,DWORD PTR [rip+0xd87f]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414989:	mov    rdi,rax
  41498c:	call   40a372 <_start@@Base+0x60c2>
  414991:	mov    rax,QWORD PTR [rbp-0x98]
  414998:	mov    rdi,rax
  41499b:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  4149a0:	mov    QWORD PTR [rbp-0x88],rax
  4149a7:	cmp    QWORD PTR [rbp-0x88],0x30
  4149af:	je     4149d0 <test_typed_struct_buffer@@Base+0xb5>
  4149b1:	lea    rcx,[rip+0xd7f8]        # 4221b0 <_IO_stdin_used@@Base+0x41b0>
  4149b8:	mov    edx,0x954
  4149bd:	lea    rsi,[rip+0xab44]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  4149c4:	lea    rdi,[rip+0xc7b9]        # 421184 <_IO_stdin_used@@Base+0x3184>
  4149cb:	call   4041f0 <__assert_fail@plt>
  4149d0:	mov    rax,QWORD PTR [rbp-0x88]
  4149d7:	mov    esi,eax
  4149d9:	lea    rdi,[rip+0xc7af]        # 42118f <_IO_stdin_used@@Base+0x318f>
  4149e0:	mov    eax,0x0
  4149e5:	call   4041d0 <printf@plt>
  4149ea:	mov    rax,QWORD PTR [rbp-0x98]
  4149f1:	mov    rdi,rax
  4149f4:	call   41ac5c <flatcc_builder_get_emit_context@@Base>
  4149f9:	mov    rdi,rax
  4149fc:	call   409854 <_start@@Base+0x55a4>
  414a01:	cmp    QWORD PTR [rbp-0x88],rax
  414a08:	je     414a29 <test_typed_struct_buffer@@Base+0x10e>
  414a0a:	lea    rcx,[rip+0xd79f]        # 4221b0 <_IO_stdin_used@@Base+0x41b0>
  414a11:	mov    edx,0x956
  414a16:	lea    rsi,[rip+0xaaeb]        # 41f508 <_IO_stdin_used@@Base+0x1508>
  414a1d:	lea    rdi,[rip+0xc78c]        # 4211b0 <_IO_stdin_used@@Base+0x31b0>
  414a24:	call   4041f0 <__assert_fail@plt>
  414a29:	lea    rcx,[rbp-0x70]
  414a2d:	mov    rax,QWORD PTR [rbp-0x98]
  414a34:	mov    edx,0x64
  414a39:	mov    rsi,rcx
  414a3c:	mov    rdi,rax
  414a3f:	call   41a9f5 <flatcc_builder_copy_buffer@@Base>
  414a44:	test   rax,rax
  414a47:	jne    414a5f <test_typed_struct_buffer@@Base+0x144>
  414a49:	lea    rdi,[rip+0xc7ab]        # 4211fb <_IO_stdin_used@@Base+0x31fb>
  414a50:	call   4041a0 <puts@plt>
  414a55:	mov    eax,0xffffffff
  414a5a:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414a5f:	mov    rax,QWORD PTR [rip+0x17592]        # 42bff8 <stderr@GLIBC_2.2.5>
  414a66:	mov    rcx,QWORD PTR [rax]
  414a69:	mov    rdx,QWORD PTR [rbp-0x88]
  414a70:	lea    rax,[rbp-0x70]
  414a74:	mov    rsi,rax
  414a77:	lea    rdi,[rip+0xc835]        # 4212b3 <_IO_stdin_used@@Base+0x32b3>
  414a7e:	call   40e441 <_start@@Base+0xa191>
  414a83:	lea    rax,[rbp-0x70]
  414a87:	lea    rsi,[rip+0x97db]        # 41e269 <_IO_stdin_used@@Base+0x269>
  414a8e:	mov    rdi,rax
  414a91:	call   405544 <_start@@Base+0x1294>
  414a96:	test   eax,eax
  414a98:	jne    414ab0 <test_typed_struct_buffer@@Base+0x195>
  414a9a:	lea    rdi,[rip+0xc77f]        # 421220 <_IO_stdin_used@@Base+0x3220>
  414aa1:	call   4041a0 <puts@plt>
  414aa6:	mov    eax,0xffffffff
  414aab:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414ab0:	lea    rax,[rbp-0x70]
  414ab4:	lea    rsi,[rip+0xc786]        # 421241 <_IO_stdin_used@@Base+0x3241>
  414abb:	mov    rdi,rax
  414abe:	call   405544 <_start@@Base+0x1294>
  414ac3:	test   eax,eax
  414ac5:	je     414add <test_typed_struct_buffer@@Base+0x1c2>
  414ac7:	lea    rdi,[rip+0xc77a]        # 421248 <_IO_stdin_used@@Base+0x3248>
  414ace:	call   4041a0 <puts@plt>
  414ad3:	mov    eax,0xffffffff
  414ad8:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414add:	lea    rax,[rbp-0x70]
  414ae1:	lea    rsi,[rip+0x9781]        # 41e269 <_IO_stdin_used@@Base+0x269>
  414ae8:	mov    rdi,rax
  414aeb:	call   405544 <_start@@Base+0x1294>
  414af0:	test   eax,eax
  414af2:	jne    414b0a <test_typed_struct_buffer@@Base+0x1ef>
  414af4:	lea    rdi,[rip+0xc77d]        # 421278 <_IO_stdin_used@@Base+0x3278>
  414afb:	call   4041a0 <puts@plt>
  414b00:	mov    eax,0xffffffff
  414b05:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414b0a:	lea    rax,[rbp-0x70]
  414b0e:	mov    esi,0xa8f53ed2
  414b13:	mov    rdi,rax
  414b16:	call   405888 <_start@@Base+0x15d8>
  414b1b:	test   rax,rax
  414b1e:	jne    414b36 <test_typed_struct_buffer@@Base+0x21b>
  414b20:	lea    rdi,[rip+0xc7a9]        # 4212d0 <_IO_stdin_used@@Base+0x32d0>
  414b27:	call   4041a0 <puts@plt>
  414b2c:	mov    eax,0xffffffff
  414b31:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414b36:	mov    rcx,QWORD PTR [rbp-0x88]
  414b3d:	lea    rax,[rbp-0x70]
  414b41:	mov    edx,0xa8f53ed2
  414b46:	mov    rsi,rcx
  414b49:	mov    rdi,rax
  414b4c:	call   40d186 <_start@@Base+0x8ed6>
  414b51:	test   eax,eax
  414b53:	je     414b6b <test_typed_struct_buffer@@Base+0x250>
  414b55:	lea    rdi,[rip+0xc79c]        # 4212f8 <_IO_stdin_used@@Base+0x32f8>
  414b5c:	call   4041a0 <puts@plt>
  414b61:	mov    eax,0xffffffff
  414b66:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414b6b:	lea    rax,[rbp-0x70]
  414b6f:	mov    rdi,rax
  414b72:	call   405924 <_start@@Base+0x1674>
  414b77:	mov    QWORD PTR [rbp-0x80],rax
  414b7b:	cmp    QWORD PTR [rbp-0x80],0x0
  414b80:	jne    414b98 <test_typed_struct_buffer@@Base+0x27d>
  414b82:	lea    rdi,[rip+0xc791]        # 42131a <_IO_stdin_used@@Base+0x331a>
  414b89:	call   4041a0 <puts@plt>
  414b8e:	mov    eax,0xffffffff
  414b93:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414b98:	mov    rdx,QWORD PTR [rbp-0x88]
  414b9f:	lea    rax,[rbp-0x70]
  414ba3:	mov    rsi,rdx
  414ba6:	mov    rdi,rax
  414ba9:	call   40d154 <_start@@Base+0x8ea4>
  414bae:	test   eax,eax
  414bb0:	je     414bc8 <test_typed_struct_buffer@@Base+0x2ad>
  414bb2:	lea    rdi,[rip+0xc77f]        # 421338 <_IO_stdin_used@@Base+0x3338>
  414bb9:	call   4041a0 <puts@plt>
  414bbe:	mov    eax,0xffffffff
  414bc3:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414bc8:	mov    rax,QWORD PTR [rbp-0x80]
  414bcc:	mov    QWORD PTR [rbp-0x78],rax
  414bd0:	mov    rax,QWORD PTR [rbp-0x78]
  414bd4:	mov    rdi,rax
  414bd7:	call   40a1d0 <_start@@Base+0x5f20>
  414bdc:	mov    rax,QWORD PTR [rbp-0x78]
  414be0:	vmovss xmm0,DWORD PTR [rax]
  414be4:	vmovss xmm1,DWORD PTR [rip+0xd61c]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414bec:	vucomiss xmm0,xmm1
  414bf0:	jp     414c81 <test_typed_struct_buffer@@Base+0x366>
  414bf6:	vmovss xmm1,DWORD PTR [rip+0xd60a]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414bfe:	vucomiss xmm0,xmm1
  414c02:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c04:	mov    rax,QWORD PTR [rbp-0x78]
  414c08:	vmovss xmm0,DWORD PTR [rax+0x4]
  414c0d:	vucomiss xmm0,DWORD PTR [rip+0xd5f7]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414c15:	jp     414c81 <test_typed_struct_buffer@@Base+0x366>
  414c17:	vucomiss xmm0,DWORD PTR [rip+0xd5ed]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414c1f:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c21:	mov    rax,QWORD PTR [rbp-0x78]
  414c25:	vmovss xmm0,DWORD PTR [rax+0x8]
  414c2a:	vucomiss xmm0,DWORD PTR [rip+0xd5ee]        # 422220 <_IO_stdin_used@@Base+0x4220>
  414c32:	jp     414c81 <test_typed_struct_buffer@@Base+0x366>
  414c34:	vucomiss xmm0,DWORD PTR [rip+0xd5e4]        # 422220 <_IO_stdin_used@@Base+0x4220>
  414c3c:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c3e:	mov    rax,QWORD PTR [rbp-0x78]
  414c42:	vmovsd xmm0,QWORD PTR [rax+0x10]
  414c47:	vucomisd xmm0,QWORD PTR [rip+0xd5c9]        # 422218 <_IO_stdin_used@@Base+0x4218>
  414c4f:	jp     414c81 <test_typed_struct_buffer@@Base+0x366>
  414c51:	vucomisd xmm0,QWORD PTR [rip+0xd5bf]        # 422218 <_IO_stdin_used@@Base+0x4218>
  414c59:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c5b:	mov    rax,QWORD PTR [rbp-0x78]
  414c5f:	movzx  eax,BYTE PTR [rax+0x18]
  414c63:	cmp    al,0x8
  414c65:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c67:	mov    rax,QWORD PTR [rbp-0x78]
  414c6b:	movzx  eax,WORD PTR [rax+0x1a]
  414c6f:	cmp    ax,0xaaa
  414c73:	jne    414c81 <test_typed_struct_buffer@@Base+0x366>
  414c75:	mov    rax,QWORD PTR [rbp-0x78]
  414c79:	movzx  eax,BYTE PTR [rax+0x1c]
  414c7d:	cmp    al,0xef
  414c7f:	je     414c94 <test_typed_struct_buffer@@Base+0x379>
  414c81:	lea    rdi,[rip+0xc613]        # 42129b <_IO_stdin_used@@Base+0x329b>
  414c88:	call   4041a0 <puts@plt>
  414c8d:	mov    eax,0xffffffff
  414c92:	jmp    414c99 <test_typed_struct_buffer@@Base+0x37e>
  414c94:	mov    eax,0x0
  414c99:	mov    rdx,QWORD PTR [rbp-0x8]
  414c9d:	xor    rdx,QWORD PTR fs:0x28
  414ca6:	je     414cad <test_typed_struct_buffer@@Base+0x392>
  414ca8:	call   4041c0 <__stack_chk_fail@plt>
  414cad:	leave  
  414cae:	ret    

0000000000414caf <gen_monster_benchmark@@Base>:
  414caf:	endbr64 
  414cb3:	push   rbp
  414cb4:	mov    rbp,rsp
  414cb7:	sub    rsp,0x40
  414cbb:	mov    QWORD PTR [rbp-0x38],rdi
  414cbf:	mov    rax,QWORD PTR fs:0x28
  414cc8:	mov    QWORD PTR [rbp-0x8],rax
  414ccc:	xor    eax,eax
  414cce:	mov    BYTE PTR [rbp-0x12],0x0
  414cd2:	mov    BYTE PTR [rbp-0x11],0x1
  414cd6:	mov    BYTE PTR [rbp-0x10],0x2
  414cda:	mov    BYTE PTR [rbp-0xf],0x3
  414cde:	mov    BYTE PTR [rbp-0xe],0x4
  414ce2:	mov    BYTE PTR [rbp-0xd],0x5
  414ce6:	mov    BYTE PTR [rbp-0xc],0x6
  414cea:	mov    BYTE PTR [rbp-0xb],0x7
  414cee:	mov    BYTE PTR [rbp-0xa],0x8
  414cf2:	mov    BYTE PTR [rbp-0x9],0x9
  414cf6:	mov    rax,QWORD PTR [rbp-0x38]
  414cfa:	mov    rdi,rax
  414cfd:	call   416246 <flatcc_builder_reset@@Base>
  414d02:	mov    rax,QWORD PTR [rbp-0x38]
  414d06:	mov    rdi,rax
  414d09:	call   40c16b <_start@@Base+0x7ebb>
  414d0e:	mov    rax,QWORD PTR [rbp-0x38]
  414d12:	mov    esi,0x50
  414d17:	mov    rdi,rax
  414d1a:	call   40b0b0 <_start@@Base+0x6e00>
  414d1f:	mov    rax,QWORD PTR [rbp-0x38]
  414d23:	mov    rdi,rax
  414d26:	call   40b035 <_start@@Base+0x6d85>
  414d2b:	mov    QWORD PTR [rbp-0x28],rax
  414d2f:	mov    rax,QWORD PTR [rbp-0x28]
  414d33:	vmovss xmm0,DWORD PTR [rip+0xd4cd]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414d3b:	vmovss DWORD PTR [rax],xmm0
  414d3f:	mov    rax,QWORD PTR [rbp-0x28]
  414d43:	vmovss xmm0,DWORD PTR [rip+0xd4c1]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414d4b:	vmovss DWORD PTR [rax+0x4],xmm0
  414d50:	mov    rax,QWORD PTR [rbp-0x28]
  414d54:	vmovss xmm0,DWORD PTR [rip+0xd4a8]        # 422204 <_IO_stdin_used@@Base+0x4204>
  414d5c:	vmovss DWORD PTR [rax+0x8],xmm0
  414d61:	mov    rax,QWORD PTR [rbp-0x38]
  414d65:	mov    rdi,rax
  414d68:	call   40b05e <_start@@Base+0x6dae>
  414d6d:	mov    rax,QWORD PTR [rbp-0x38]
  414d71:	lea    rsi,[rip+0x9e77]        # 41ebef <_IO_stdin_used@@Base+0xbef>
  414d78:	mov    rdi,rax
  414d7b:	call   40b2b9 <_start@@Base+0x7009>
  414d80:	lea    rcx,[rbp-0x12]
  414d84:	mov    rax,QWORD PTR [rbp-0x38]
  414d88:	mov    edx,0xa
  414d8d:	mov    rsi,rcx
  414d90:	mov    rdi,rax
  414d93:	call   40b5a2 <_start@@Base+0x72f2>
  414d98:	mov    rax,QWORD PTR [rbp-0x38]
  414d9c:	mov    rdi,rax
  414d9f:	call   40bcf7 <_start@@Base+0x7a47>
  414da4:	mov    rax,QWORD PTR [rbp-0x38]
  414da8:	mov    esi,0x1
  414dad:	mov    rdi,rax
  414db0:	call   40bdb2 <_start@@Base+0x7b02>
  414db5:	mov    QWORD PTR [rbp-0x20],rax
  414db9:	mov    rax,QWORD PTR [rbp-0x20]
  414dbd:	mov    WORD PTR [rax],0x10
  414dc2:	mov    rax,QWORD PTR [rbp-0x20]
  414dc6:	mov    BYTE PTR [rax+0x2],0x20
  414dca:	mov    rax,QWORD PTR [rbp-0x38]
  414dce:	mov    esi,0x2
  414dd3:	mov    rdi,rax
  414dd6:	call   40bdb2 <_start@@Base+0x7b02>
  414ddb:	mov    QWORD PTR [rbp-0x20],rax
  414ddf:	mov    rax,QWORD PTR [rbp-0x20]
  414de3:	mov    WORD PTR [rax],0x30
  414de8:	mov    rax,QWORD PTR [rbp-0x20]
  414dec:	mov    BYTE PTR [rax+0x2],0x40
  414df0:	mov    rax,QWORD PTR [rbp-0x20]
  414df4:	add    rax,0x4
  414df8:	mov    WORD PTR [rax],0x50
  414dfd:	mov    rax,QWORD PTR [rbp-0x20]
  414e01:	add    rax,0x4
  414e05:	mov    BYTE PTR [rax+0x2],0x60
  414e09:	mov    rax,QWORD PTR [rbp-0x38]
  414e0d:	mov    edx,0xffffff80
  414e12:	mov    esi,0x70
  414e17:	mov    rdi,rax
  414e1a:	call   40be89 <_start@@Base+0x7bd9>
  414e1f:	mov    WORD PTR [rbp-0x2c],0x191
  414e25:	mov    BYTE PTR [rbp-0x2a],0x91
  414e29:	lea    rdx,[rbp-0x2c]
  414e2d:	mov    rax,QWORD PTR [rbp-0x38]
  414e31:	mov    rsi,rdx
  414e34:	mov    rdi,rax
  414e37:	call   40be30 <_start@@Base+0x7b80>
  414e3c:	mov    rax,QWORD PTR [rbp-0x38]
  414e40:	mov    rdi,rax
  414e43:	call   40bd11 <_start@@Base+0x7a61>
  414e48:	mov    rax,QWORD PTR [rbp-0x38]
  414e4c:	mov    rdi,rax
  414e4f:	call   40c1db <_start@@Base+0x7f2b>
  414e54:	mov    eax,0x0
  414e59:	mov    rcx,QWORD PTR [rbp-0x8]
  414e5d:	xor    rcx,QWORD PTR fs:0x28
  414e66:	je     414e6d <gen_monster_benchmark@@Base+0x1be>
  414e68:	call   4041c0 <__stack_chk_fail@plt>
  414e6d:	leave  
  414e6e:	ret    

0000000000414e6f <time_monster@@Base>:
  414e6f:	endbr64 
  414e73:	push   rbp
  414e74:	mov    rbp,rsp
  414e77:	sub    rsp,0x30
  414e7b:	mov    QWORD PTR [rbp-0x28],rdi
  414e7f:	mov    DWORD PTR [rbp-0x1c],0xf4240
  414e86:	lea    rdi,[rip+0xc4d1]        # 42135e <_IO_stdin_used@@Base+0x335e>
  414e8d:	call   4041a0 <puts@plt>
  414e92:	call   40e5f7 <_start@@Base+0xa347>
  414e97:	vmovq  rax,xmm0
  414e9c:	mov    QWORD PTR [rbp-0x18],rax
  414ea0:	mov    DWORD PTR [rbp-0x20],0x0
  414ea7:	jmp    414eb8 <time_monster@@Base+0x49>
  414ea9:	mov    rax,QWORD PTR [rbp-0x28]
  414ead:	mov    rdi,rax
  414eb0:	call   414caf <gen_monster_benchmark@@Base>
  414eb5:	inc    DWORD PTR [rbp-0x20]
  414eb8:	mov    eax,DWORD PTR [rbp-0x20]
  414ebb:	cmp    eax,DWORD PTR [rbp-0x1c]
  414ebe:	jl     414ea9 <time_monster@@Base+0x3a>
  414ec0:	mov    rax,QWORD PTR [rbp-0x28]
  414ec4:	mov    rdi,rax
  414ec7:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  414ecc:	mov    QWORD PTR [rbp-0x10],rax
  414ed0:	call   40e5f7 <_start@@Base+0xa347>
  414ed5:	vmovq  rax,xmm0
  414eda:	mov    QWORD PTR [rbp-0x8],rax
  414ede:	mov    edx,DWORD PTR [rbp-0x1c]
  414ee1:	mov    rsi,QWORD PTR [rbp-0x10]
  414ee5:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  414eea:	mov    rax,QWORD PTR [rbp-0x18]
  414eee:	lea    rcx,[rip+0xc47a]        # 42136f <_IO_stdin_used@@Base+0x336f>
  414ef5:	vmovapd xmm1,xmm0
  414ef9:	vmovq  xmm0,rax
  414efe:	lea    rdi,[rip+0xc472]        # 421377 <_IO_stdin_used@@Base+0x3377>
  414f05:	call   40e6a1 <_start@@Base+0xa3f1>
  414f0a:	mov    eax,0x0
  414f0f:	leave  
  414f10:	ret    

0000000000414f11 <gen_struct_buffer_benchmark@@Base>:
  414f11:	endbr64 
  414f15:	push   rbp
  414f16:	mov    rbp,rsp
  414f19:	sub    rsp,0x30
  414f1d:	mov    QWORD PTR [rbp-0x28],rdi
  414f21:	mov    rax,QWORD PTR [rbp-0x28]
  414f25:	mov    rdi,rax
  414f28:	call   416246 <flatcc_builder_reset@@Base>
  414f2d:	vmovsd xmm0,QWORD PTR [rip+0xd2e3]        # 422218 <_IO_stdin_used@@Base+0x4218>
  414f35:	mov    rax,QWORD PTR [rbp-0x28]
  414f39:	mov    ecx,0xffffffef
  414f3e:	mov    edx,0xaaa
  414f43:	mov    esi,0x8
  414f48:	vmovapd xmm3,xmm0
  414f4c:	vmovss xmm2,DWORD PTR [rip+0xd2cc]        # 422220 <_IO_stdin_used@@Base+0x4220>
  414f54:	vmovss xmm1,DWORD PTR [rip+0xd2b0]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414f5c:	vmovss xmm0,DWORD PTR [rip+0xd2a4]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414f64:	mov    rdi,rax
  414f67:	call   40a2de <_start@@Base+0x602e>
  414f6c:	mov    rax,QWORD PTR [rbp-0x28]
  414f70:	mov    esi,0x0
  414f75:	mov    rdi,rax
  414f78:	call   41a99e <flatcc_builder_get_direct_buffer@@Base>
  414f7d:	mov    QWORD PTR [rbp-0x18],rax
  414f81:	cmp    QWORD PTR [rbp-0x18],0x0
  414f86:	jne    414f92 <gen_struct_buffer_benchmark@@Base+0x81>
  414f88:	mov    eax,0xffffffff
  414f8d:	jmp    41506c <gen_struct_buffer_benchmark@@Base+0x15b>
  414f92:	mov    rax,QWORD PTR [rbp-0x18]
  414f96:	mov    esi,0x0
  414f9b:	mov    rdi,rax
  414f9e:	call   40583c <_start@@Base+0x158c>
  414fa3:	mov    QWORD PTR [rbp-0x10],rax
  414fa7:	mov    rax,QWORD PTR [rbp-0x10]
  414fab:	mov    QWORD PTR [rbp-0x8],rax
  414faf:	mov    rax,QWORD PTR [rbp-0x8]
  414fb3:	mov    rdi,rax
  414fb6:	call   40a1d0 <_start@@Base+0x5f20>
  414fbb:	mov    rax,QWORD PTR [rbp-0x8]
  414fbf:	vmovss xmm0,DWORD PTR [rax]
  414fc3:	vmovss xmm1,DWORD PTR [rip+0xd23d]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414fcb:	vucomiss xmm0,xmm1
  414fcf:	jp     415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  414fd5:	vmovss xmm1,DWORD PTR [rip+0xd22b]        # 422208 <_IO_stdin_used@@Base+0x4208>
  414fdd:	vucomiss xmm0,xmm1
  414fe1:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  414fe3:	mov    rax,QWORD PTR [rbp-0x8]
  414fe7:	vmovss xmm0,DWORD PTR [rax+0x4]
  414fec:	vucomiss xmm0,DWORD PTR [rip+0xd218]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414ff4:	jp     415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  414ff6:	vucomiss xmm0,DWORD PTR [rip+0xd20e]        # 42220c <_IO_stdin_used@@Base+0x420c>
  414ffe:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  415000:	mov    rax,QWORD PTR [rbp-0x8]
  415004:	vmovss xmm0,DWORD PTR [rax+0x8]
  415009:	vucomiss xmm0,DWORD PTR [rip+0xd20f]        # 422220 <_IO_stdin_used@@Base+0x4220>
  415011:	jp     415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  415013:	vucomiss xmm0,DWORD PTR [rip+0xd205]        # 422220 <_IO_stdin_used@@Base+0x4220>
  41501b:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  41501d:	mov    rax,QWORD PTR [rbp-0x8]
  415021:	vmovsd xmm0,QWORD PTR [rax+0x10]
  415026:	vucomisd xmm0,QWORD PTR [rip+0xd1ea]        # 422218 <_IO_stdin_used@@Base+0x4218>
  41502e:	jp     415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  415030:	vucomisd xmm0,QWORD PTR [rip+0xd1e0]        # 422218 <_IO_stdin_used@@Base+0x4218>
  415038:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  41503a:	mov    rax,QWORD PTR [rbp-0x8]
  41503e:	movzx  eax,BYTE PTR [rax+0x18]
  415042:	cmp    al,0x8
  415044:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  415046:	mov    rax,QWORD PTR [rbp-0x8]
  41504a:	movzx  eax,WORD PTR [rax+0x1a]
  41504e:	cmp    ax,0xaaa
  415052:	jne    415060 <gen_struct_buffer_benchmark@@Base+0x14f>
  415054:	mov    rax,QWORD PTR [rbp-0x8]
  415058:	movzx  eax,BYTE PTR [rax+0x1c]
  41505c:	cmp    al,0xef
  41505e:	je     415067 <gen_struct_buffer_benchmark@@Base+0x156>
  415060:	mov    eax,0xffffffff
  415065:	jmp    41506c <gen_struct_buffer_benchmark@@Base+0x15b>
  415067:	mov    eax,0x0
  41506c:	leave  
  41506d:	ret    

000000000041506e <time_struct_buffer@@Base>:
  41506e:	endbr64 
  415072:	push   rbp
  415073:	mov    rbp,rsp
  415076:	sub    rsp,0x40
  41507a:	mov    QWORD PTR [rbp-0x38],rdi
  41507e:	mov    DWORD PTR [rbp-0x1c],0xf4240
  415085:	mov    DWORD PTR [rbp-0x20],0x0
  41508c:	lea    rdi,[rip+0xc2cb]        # 42135e <_IO_stdin_used@@Base+0x335e>
  415093:	call   4041a0 <puts@plt>
  415098:	call   40e5f7 <_start@@Base+0xa347>
  41509d:	vmovq  rax,xmm0
  4150a2:	mov    QWORD PTR [rbp-0x18],rax
  4150a6:	mov    DWORD PTR [rbp-0x24],0x0
  4150ad:	jmp    4150c1 <time_struct_buffer@@Base+0x53>
  4150af:	mov    rax,QWORD PTR [rbp-0x38]
  4150b3:	mov    rdi,rax
  4150b6:	call   414f11 <gen_struct_buffer_benchmark@@Base>
  4150bb:	or     DWORD PTR [rbp-0x20],eax
  4150be:	inc    DWORD PTR [rbp-0x24]
  4150c1:	mov    eax,DWORD PTR [rbp-0x24]
  4150c4:	cmp    eax,DWORD PTR [rbp-0x1c]
  4150c7:	jl     4150af <time_struct_buffer@@Base+0x41>
  4150c9:	call   40e5f7 <_start@@Base+0xa347>
  4150ce:	vmovq  rax,xmm0
  4150d3:	mov    QWORD PTR [rbp-0x10],rax
  4150d7:	mov    rax,QWORD PTR [rbp-0x38]
  4150db:	mov    rdi,rax
  4150de:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  4150e3:	mov    QWORD PTR [rbp-0x8],rax
  4150e7:	cmp    DWORD PTR [rbp-0x20],0x0
  4150eb:	je     4150f9 <time_struct_buffer@@Base+0x8b>
  4150ed:	lea    rdi,[rip+0xc299]        # 42138d <_IO_stdin_used@@Base+0x338d>
  4150f4:	call   4041a0 <puts@plt>
  4150f9:	mov    edx,DWORD PTR [rbp-0x1c]
  4150fc:	mov    rsi,QWORD PTR [rbp-0x8]
  415100:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  415105:	mov    rax,QWORD PTR [rbp-0x18]
  415109:	lea    rcx,[rip+0xc25f]        # 42136f <_IO_stdin_used@@Base+0x336f>
  415110:	vmovapd xmm1,xmm0
  415114:	vmovq  xmm0,rax
  415119:	lea    rdi,[rip+0xc280]        # 4213a0 <_IO_stdin_used@@Base+0x33a0>
  415120:	call   40e6a1 <_start@@Base+0xa3f1>
  415125:	mov    eax,DWORD PTR [rbp-0x20]
  415128:	leave  
  415129:	ret    

000000000041512a <main@@Base>:
  41512a:	endbr64 
  41512e:	push   rbp
  41512f:	mov    rbp,rsp
  415132:	sub    rsp,0x1b0
  415139:	mov    DWORD PTR [rbp-0x1a4],edi
  41513f:	mov    QWORD PTR [rbp-0x1b0],rsi
  415146:	mov    rax,QWORD PTR fs:0x28
  41514f:	mov    QWORD PTR [rbp-0x8],rax
  415153:	xor    eax,eax
  415155:	lea    rax,[rbp-0x190]
  41515c:	mov    QWORD PTR [rbp-0x198],rax
  415163:	mov    rax,QWORD PTR [rbp-0x198]
  41516a:	mov    rdi,rax
  41516d:	call   415fff <flatcc_builder_init@@Base>
  415172:	lea    rdi,[rip+0xc254]        # 4213cd <_IO_stdin_used@@Base+0x33cd>
  415179:	call   4041a0 <puts@plt>
  41517e:	mov    rax,QWORD PTR [rbp-0x198]
  415185:	mov    rdi,rax
  415188:	call   40f270 <test_table_with_emptystruct@@Base>
  41518d:	test   eax,eax
  41518f:	je     4151a7 <main@@Base+0x7d>
  415191:	lea    rdi,[rip+0xc250]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415198:	call   4041a0 <puts@plt>
  41519d:	mov    eax,0xffffffff
  4151a2:	jmp    415538 <main@@Base+0x40e>
  4151a7:	mov    rax,QWORD PTR [rbp-0x198]
  4151ae:	mov    rdi,rax
  4151b1:	call   40ea9e <test_enums@@Base>
  4151b6:	test   eax,eax
  4151b8:	je     4151d0 <main@@Base+0xa6>
  4151ba:	lea    rdi,[rip+0xc227]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4151c1:	call   4041a0 <puts@plt>
  4151c6:	mov    eax,0xffffffff
  4151cb:	jmp    415538 <main@@Base+0x40e>
  4151d0:	mov    rax,QWORD PTR [rbp-0x198]
  4151d7:	mov    rdi,rax
  4151da:	call   40ed4a <test_empty_monster@@Base>
  4151df:	test   eax,eax
  4151e1:	je     4151f9 <main@@Base+0xcf>
  4151e3:	lea    rdi,[rip+0xc1fe]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4151ea:	call   4041a0 <puts@plt>
  4151ef:	mov    eax,0xffffffff
  4151f4:	jmp    415538 <main@@Base+0x40e>
  4151f9:	mov    rax,QWORD PTR [rbp-0x198]
  415200:	mov    rdi,rax
  415203:	call   410df2 <test_monster@@Base>
  415208:	test   eax,eax
  41520a:	je     415222 <main@@Base+0xf8>
  41520c:	lea    rdi,[rip+0xc1d5]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415213:	call   4041a0 <puts@plt>
  415218:	mov    eax,0xffffffff
  41521d:	jmp    415538 <main@@Base+0x40e>
  415222:	mov    rax,QWORD PTR [rbp-0x198]
  415229:	mov    rdi,rax
  41522c:	call   410ecf <test_monster_with_size@@Base>
  415231:	test   eax,eax
  415233:	je     41524b <main@@Base+0x121>
  415235:	lea    rdi,[rip+0xc1ac]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  41523c:	call   4041a0 <puts@plt>
  415241:	mov    eax,0xffffffff
  415246:	jmp    415538 <main@@Base+0x40e>
  41524b:	mov    rax,QWORD PTR [rbp-0x198]
  415252:	mov    rdi,rax
  415255:	call   41103b <test_string@@Base>
  41525a:	test   eax,eax
  41525c:	je     415274 <main@@Base+0x14a>
  41525e:	lea    rdi,[rip+0xc183]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415265:	call   4041a0 <puts@plt>
  41526a:	mov    eax,0xffffffff
  41526f:	jmp    415538 <main@@Base+0x40e>
  415274:	mov    rax,QWORD PTR [rbp-0x198]
  41527b:	mov    rdi,rax
  41527e:	call   414635 <test_struct_buffer@@Base>
  415283:	test   eax,eax
  415285:	je     41529d <main@@Base+0x173>
  415287:	lea    rdi,[rip+0xc15a]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  41528e:	call   4041a0 <puts@plt>
  415293:	mov    eax,0xffffffff
  415298:	jmp    415538 <main@@Base+0x40e>
  41529d:	mov    rax,QWORD PTR [rbp-0x198]
  4152a4:	mov    rdi,rax
  4152a7:	call   40eeb3 <test_typed_empty_monster@@Base>
  4152ac:	test   eax,eax
  4152ae:	je     4152c6 <main@@Base+0x19c>
  4152b0:	lea    rdi,[rip+0xc131]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4152b7:	call   4041a0 <puts@plt>
  4152bc:	mov    eax,0xffffffff
  4152c1:	jmp    415538 <main@@Base+0x40e>
  4152c6:	mov    rax,QWORD PTR [rbp-0x198]
  4152cd:	mov    rdi,rax
  4152d0:	call   40f322 <test_typed_table_with_emptystruct@@Base>
  4152d5:	test   eax,eax
  4152d7:	je     4152ef <main@@Base+0x1c5>
  4152d9:	lea    rdi,[rip+0xc108]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4152e0:	call   4041a0 <puts@plt>
  4152e5:	mov    eax,0xffffffff
  4152ea:	jmp    415538 <main@@Base+0x40e>
  4152ef:	mov    rax,QWORD PTR [rbp-0x198]
  4152f6:	mov    rdi,rax
  4152f9:	call   41491b <test_typed_struct_buffer@@Base>
  4152fe:	test   eax,eax
  415300:	je     415318 <main@@Base+0x1ee>
  415302:	lea    rdi,[rip+0xc0df]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415309:	call   4041a0 <puts@plt>
  41530e:	mov    eax,0xffffffff
  415313:	jmp    415538 <main@@Base+0x40e>
  415318:	mov    rax,QWORD PTR [rbp-0x198]
  41531f:	mov    rdi,rax
  415322:	call   41277e <test_clone_slice@@Base>
  415327:	test   eax,eax
  415329:	je     415341 <main@@Base+0x217>
  41532b:	lea    rdi,[rip+0xc0b6]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415332:	call   4041a0 <puts@plt>
  415337:	mov    eax,0xffffffff
  41533c:	jmp    415538 <main@@Base+0x40e>
  415341:	mov    rax,QWORD PTR [rbp-0x198]
  415348:	mov    rdi,rax
  41534b:	call   413da4 <test_add_set_defaults@@Base>
  415350:	test   eax,eax
  415352:	je     41536a <main@@Base+0x240>
  415354:	lea    rdi,[rip+0xc08d]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  41535b:	call   4041a0 <puts@plt>
  415360:	mov    eax,0xffffffff
  415365:	jmp    415538 <main@@Base+0x40e>
  41536a:	mov    rax,QWORD PTR [rbp-0x198]
  415371:	mov    rdi,rax
  415374:	call   412efc <test_create_add_field@@Base>
  415379:	test   eax,eax
  41537b:	je     415393 <main@@Base+0x269>
  41537d:	lea    rdi,[rip+0xc064]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415384:	call   4041a0 <puts@plt>
  415389:	mov    eax,0xffffffff
  41538e:	jmp    415538 <main@@Base+0x40e>
  415393:	mov    rax,QWORD PTR [rbp-0x198]
  41539a:	mov    rdi,rax
  41539d:	call   413038 <test_union_vector@@Base>
  4153a2:	test   eax,eax
  4153a4:	je     4153bc <main@@Base+0x292>
  4153a6:	lea    rdi,[rip+0xc03b]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4153ad:	call   4041a0 <puts@plt>
  4153b2:	mov    eax,0xffffffff
  4153b7:	jmp    415538 <main@@Base+0x40e>
  4153bc:	mov    rax,QWORD PTR [rbp-0x198]
  4153c3:	mov    rdi,rax
  4153c6:	call   4125a2 <test_basic_sort@@Base>
  4153cb:	test   eax,eax
  4153cd:	je     4153e5 <main@@Base+0x2bb>
  4153cf:	lea    rdi,[rip+0xc012]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4153d6:	call   4041a0 <puts@plt>
  4153db:	mov    eax,0xffffffff
  4153e0:	jmp    415538 <main@@Base+0x40e>
  4153e5:	mov    rax,QWORD PTR [rbp-0x198]
  4153ec:	mov    rdi,rax
  4153ef:	call   41126f <test_sort_find@@Base>
  4153f4:	test   eax,eax
  4153f6:	je     41540e <main@@Base+0x2e4>
  4153f8:	lea    rdi,[rip+0xbfe9]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4153ff:	call   4041a0 <puts@plt>
  415404:	mov    eax,0xffffffff
  415409:	jmp    415538 <main@@Base+0x40e>
  41540e:	mov    rax,QWORD PTR [rbp-0x198]
  415415:	mov    rdi,rax
  415418:	call   41183e <test_scan@@Base>
  41541d:	test   eax,eax
  41541f:	je     415437 <main@@Base+0x30d>
  415421:	lea    rdi,[rip+0xbfc0]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415428:	call   4041a0 <puts@plt>
  41542d:	mov    eax,0xffffffff
  415432:	jmp    415538 <main@@Base+0x40e>
  415437:	mov    rax,QWORD PTR [rbp-0x198]
  41543e:	mov    rdi,rax
  415441:	call   413fdb <test_nested_buffer@@Base>
  415446:	test   eax,eax
  415448:	je     415460 <main@@Base+0x336>
  41544a:	lea    rdi,[rip+0xbf97]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415451:	call   4041a0 <puts@plt>
  415456:	mov    eax,0xffffffff
  41545b:	jmp    415538 <main@@Base+0x40e>
  415460:	mov    rax,QWORD PTR [rbp-0x198]
  415467:	mov    rdi,rax
  41546a:	call   41419c <test_nested_buffer_first@@Base>
  41546f:	test   eax,eax
  415471:	je     415489 <main@@Base+0x35f>
  415473:	lea    rdi,[rip+0xbf6e]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  41547a:	call   4041a0 <puts@plt>
  41547f:	mov    eax,0xffffffff
  415484:	jmp    415538 <main@@Base+0x40e>
  415489:	mov    rax,QWORD PTR [rbp-0x198]
  415490:	mov    rdi,rax
  415493:	call   41435d <test_nested_buffer_using_nest@@Base>
  415498:	test   eax,eax
  41549a:	je     4154b2 <main@@Base+0x388>
  41549c:	lea    rdi,[rip+0xbf45]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4154a3:	call   4041a0 <puts@plt>
  4154a8:	mov    eax,0xffffffff
  4154ad:	jmp    415538 <main@@Base+0x40e>
  4154b2:	mov    rax,QWORD PTR [rbp-0x198]
  4154b9:	mov    rdi,rax
  4154bc:	call   414622 <verify_include@@Base>
  4154c1:	test   eax,eax
  4154c3:	je     4154d8 <main@@Base+0x3ae>
  4154c5:	lea    rdi,[rip+0xbf1c]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4154cc:	call   4041a0 <puts@plt>
  4154d1:	mov    eax,0xffffffff
  4154d6:	jmp    415538 <main@@Base+0x40e>
  4154d8:	mov    rax,QWORD PTR [rbp-0x198]
  4154df:	mov    rdi,rax
  4154e2:	call   40eab1 <test_type_aliases@@Base>
  4154e7:	test   eax,eax
  4154e9:	je     4154fe <main@@Base+0x3d4>
  4154eb:	lea    rdi,[rip+0xbef6]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  4154f2:	call   4041a0 <puts@plt>
  4154f7:	mov    eax,0xffffffff
  4154fc:	jmp    415538 <main@@Base+0x40e>
  4154fe:	mov    rax,QWORD PTR [rbp-0x198]
  415505:	mov    rdi,rax
  415508:	call   4133d7 <test_mixed_type_union@@Base>
  41550d:	test   eax,eax
  41550f:	je     415524 <main@@Base+0x3fa>
  415511:	lea    rdi,[rip+0xbed0]        # 4213e8 <_IO_stdin_used@@Base+0x33e8>
  415518:	call   4041a0 <puts@plt>
  41551d:	mov    eax,0xffffffff
  415522:	jmp    415538 <main@@Base+0x40e>
  415524:	mov    rax,QWORD PTR [rbp-0x198]
  41552b:	mov    rdi,rax
  41552e:	call   41626e <flatcc_builder_clear@@Base>
  415533:	mov    eax,0x0
  415538:	mov    rdx,QWORD PTR [rbp-0x8]
  41553c:	xor    rdx,QWORD PTR fs:0x28
  415545:	je     41554c <main@@Base+0x422>
  415547:	call   4041c0 <__stack_chk_fail@plt>
  41554c:	leave  
  41554d:	ret    
  41554e:	push   rbp
  41554f:	mov    rbp,rsp
  415552:	sub    rsp,0x30
  415556:	mov    QWORD PTR [rbp-0x28],rdi
  41555a:	mov    QWORD PTR [rbp-0x30],rsi
  41555e:	mov    rax,QWORD PTR fs:0x28
  415567:	mov    QWORD PTR [rbp-0x8],rax
  41556b:	xor    eax,eax
  41556d:	mov    QWORD PTR [rbp-0x10],0x0
  415575:	cmp    QWORD PTR [rbp-0x28],0x7
  41557a:	ja     415584 <main@@Base+0x45a>
  41557c:	mov    QWORD PTR [rbp-0x28],0x8
  415584:	mov    rdx,QWORD PTR [rbp-0x30]
  415588:	mov    rcx,QWORD PTR [rbp-0x28]
  41558c:	lea    rax,[rbp-0x10]
  415590:	mov    rsi,rcx
  415593:	mov    rdi,rax
  415596:	call   4042a0 <posix_memalign@plt>
  41559b:	mov    DWORD PTR [rbp-0x14],eax
  41559e:	cmp    DWORD PTR [rbp-0x14],0x0
  4155a2:	je     4155c1 <main@@Base+0x497>
  4155a4:	mov    rax,QWORD PTR [rbp-0x10]
  4155a8:	test   rax,rax
  4155ab:	je     4155c1 <main@@Base+0x497>
  4155ad:	mov    rax,QWORD PTR [rbp-0x10]
  4155b1:	mov    rdi,rax
  4155b4:	call   404170 <free@plt>
  4155b9:	mov    QWORD PTR [rbp-0x10],0x0
  4155c1:	mov    rax,QWORD PTR [rbp-0x10]
  4155c5:	mov    rcx,QWORD PTR [rbp-0x8]
  4155c9:	xor    rcx,QWORD PTR fs:0x28
  4155d2:	je     4155d9 <main@@Base+0x4af>
  4155d4:	call   4041c0 <__stack_chk_fail@plt>
  4155d9:	leave  
  4155da:	ret    
  4155db:	push   rbp
  4155dc:	mov    rbp,rsp
  4155df:	mov    DWORD PTR [rbp-0x4],edi
  4155e2:	mov    eax,DWORD PTR [rbp-0x4]
  4155e5:	pop    rbp
  4155e6:	ret    
  4155e7:	push   rbp
  4155e8:	mov    rbp,rsp
  4155eb:	mov    eax,edi
  4155ed:	mov    BYTE PTR [rbp-0x4],al
  4155f0:	movzx  eax,BYTE PTR [rbp-0x4]
  4155f4:	pop    rbp
  4155f5:	ret    
  4155f6:	push   rbp
  4155f7:	mov    rbp,rsp
  4155fa:	mov    DWORD PTR [rbp-0x4],edi
  4155fd:	mov    eax,DWORD PTR [rbp-0x4]
  415600:	pop    rbp
  415601:	ret    
  415602:	push   rbp
  415603:	mov    rbp,rsp
  415606:	mov    QWORD PTR [rbp-0x8],rdi
  41560a:	mov    QWORD PTR [rbp-0x10],rsi
  41560e:	mov    rax,QWORD PTR [rbp-0x8]
  415612:	mov    rdx,QWORD PTR [rax]
  415615:	mov    rax,QWORD PTR [rbp-0x8]
  415619:	mov    rax,QWORD PTR [rax+0x8]
  41561d:	cmp    rdx,rax
  415620:	jne    415642 <main@@Base+0x518>
  415622:	cmp    QWORD PTR [rbp-0x10],0x0
  415627:	je     415638 <main@@Base+0x50e>
  415629:	mov    rax,QWORD PTR [rbp-0x8]
  41562d:	mov    rdx,QWORD PTR [rax+0x30]
  415631:	mov    rax,QWORD PTR [rbp-0x10]
  415635:	mov    QWORD PTR [rax],rdx
  415638:	mov    rax,QWORD PTR [rbp-0x8]
  41563c:	mov    rax,QWORD PTR [rax+0x10]
  415640:	jmp    415659 <main@@Base+0x52f>
  415642:	cmp    QWORD PTR [rbp-0x10],0x0
  415647:	je     415654 <main@@Base+0x52a>
  415649:	mov    rax,QWORD PTR [rbp-0x10]
  41564d:	mov    QWORD PTR [rax],0x0
  415654:	mov    eax,0x0
  415659:	pop    rbp
  41565a:	ret    
  41565b:	push   rbp
  41565c:	mov    rbp,rsp
  41565f:	sub    rsp,0x20
  415663:	mov    QWORD PTR [rbp-0x18],rdi
  415667:	mov    QWORD PTR [rbp-0x20],rsi
  41566b:	mov    rdx,QWORD PTR [rbp-0x20]
  41566f:	mov    rax,QWORD PTR [rbp-0x18]
  415673:	mov    esi,0x0
  415678:	mov    rdi,rax
  41567b:	call   404220 <memchr@plt>
  415680:	mov    QWORD PTR [rbp-0x8],rax
  415684:	cmp    QWORD PTR [rbp-0x8],0x0
  415689:	je     415695 <main@@Base+0x56b>
  41568b:	mov    rax,QWORD PTR [rbp-0x8]
  41568f:	sub    rax,QWORD PTR [rbp-0x18]
  415693:	jmp    415699 <main@@Base+0x56f>
  415695:	mov    rax,QWORD PTR [rbp-0x20]
  415699:	leave  
  41569a:	ret    

000000000041569b <flatcc_builder_default_alloc@@Base>:
  41569b:	endbr64 
  41569f:	push   rbp
  4156a0:	mov    rbp,rsp
  4156a3:	sub    rsp,0x30
  4156a7:	mov    QWORD PTR [rbp-0x18],rdi
  4156ab:	mov    QWORD PTR [rbp-0x20],rsi
  4156af:	mov    QWORD PTR [rbp-0x28],rdx
  4156b3:	mov    DWORD PTR [rbp-0x2c],ecx
  4156b6:	mov    DWORD PTR [rbp-0x30],r8d
  4156ba:	cmp    QWORD PTR [rbp-0x28],0x0
  4156bf:	jne    4156fd <flatcc_builder_default_alloc@@Base+0x62>
  4156c1:	mov    rax,QWORD PTR [rbp-0x20]
  4156c5:	mov    rax,QWORD PTR [rax]
  4156c8:	test   rax,rax
  4156cb:	je     4156f3 <flatcc_builder_default_alloc@@Base+0x58>
  4156cd:	mov    rax,QWORD PTR [rbp-0x20]
  4156d1:	mov    rax,QWORD PTR [rax]
  4156d4:	mov    rdi,rax
  4156d7:	call   404170 <free@plt>
  4156dc:	mov    rax,QWORD PTR [rbp-0x20]
  4156e0:	mov    QWORD PTR [rax],0x0
  4156e7:	mov    rax,QWORD PTR [rbp-0x20]
  4156eb:	mov    QWORD PTR [rax+0x8],0x0
  4156f3:	mov    eax,0x0
  4156f8:	jmp    41580c <flatcc_builder_default_alloc@@Base+0x171>
  4156fd:	cmp    DWORD PTR [rbp-0x30],0x4
  415701:	je     415733 <flatcc_builder_default_alloc@@Base+0x98>
  415703:	cmp    DWORD PTR [rbp-0x30],0x4
  415707:	jg     415711 <flatcc_builder_default_alloc@@Base+0x76>
  415709:	cmp    DWORD PTR [rbp-0x30],0x1
  41570d:	je     41571f <flatcc_builder_default_alloc@@Base+0x84>
  41570f:	jmp    415747 <flatcc_builder_default_alloc@@Base+0xac>
  415711:	cmp    DWORD PTR [rbp-0x30],0x5
  415715:	je     415729 <flatcc_builder_default_alloc@@Base+0x8e>
  415717:	cmp    DWORD PTR [rbp-0x30],0x7
  41571b:	je     41573d <flatcc_builder_default_alloc@@Base+0xa2>
  41571d:	jmp    415747 <flatcc_builder_default_alloc@@Base+0xac>
  41571f:	mov    QWORD PTR [rbp-0x10],0x100
  415727:	jmp    415750 <flatcc_builder_default_alloc@@Base+0xb5>
  415729:	mov    rax,QWORD PTR [rbp-0x28]
  41572d:	mov    QWORD PTR [rbp-0x10],rax
  415731:	jmp    415750 <flatcc_builder_default_alloc@@Base+0xb5>
  415733:	mov    QWORD PTR [rbp-0x10],0x120
  41573b:	jmp    415750 <flatcc_builder_default_alloc@@Base+0xb5>
  41573d:	mov    QWORD PTR [rbp-0x10],0x40
  415745:	jmp    415750 <flatcc_builder_default_alloc@@Base+0xb5>
  415747:	mov    QWORD PTR [rbp-0x10],0x20
  41574f:	nop
  415750:	jmp    415756 <flatcc_builder_default_alloc@@Base+0xbb>
  415752:	shl    QWORD PTR [rbp-0x10],1
  415756:	mov    rax,QWORD PTR [rbp-0x10]
  41575a:	cmp    rax,QWORD PTR [rbp-0x28]
  41575e:	jb     415752 <flatcc_builder_default_alloc@@Base+0xb7>
  415760:	mov    rax,QWORD PTR [rbp-0x20]
  415764:	mov    rax,QWORD PTR [rax+0x8]
  415768:	cmp    QWORD PTR [rbp-0x28],rax
  41576c:	ja     415789 <flatcc_builder_default_alloc@@Base+0xee>
  41576e:	mov    rax,QWORD PTR [rbp-0x20]
  415772:	mov    rax,QWORD PTR [rax+0x8]
  415776:	shr    rax,1
  415779:	cmp    QWORD PTR [rbp-0x10],rax
  41577d:	ja     415789 <flatcc_builder_default_alloc@@Base+0xee>
  41577f:	mov    eax,0x0
  415784:	jmp    41580c <flatcc_builder_default_alloc@@Base+0x171>
  415789:	mov    rax,QWORD PTR [rbp-0x20]
  41578d:	mov    rax,QWORD PTR [rax]
  415790:	mov    rdx,QWORD PTR [rbp-0x10]
  415794:	mov    rsi,rdx
  415797:	mov    rdi,rax
  41579a:	call   404280 <realloc@plt>
  41579f:	mov    QWORD PTR [rbp-0x8],rax
  4157a3:	cmp    QWORD PTR [rbp-0x8],0x0
  4157a8:	jne    4157b1 <flatcc_builder_default_alloc@@Base+0x116>
  4157aa:	mov    eax,0xffffffff
  4157af:	jmp    41580c <flatcc_builder_default_alloc@@Base+0x171>
  4157b1:	cmp    DWORD PTR [rbp-0x2c],0x0
  4157b5:	je     4157f0 <flatcc_builder_default_alloc@@Base+0x155>
  4157b7:	mov    rax,QWORD PTR [rbp-0x20]
  4157bb:	mov    rax,QWORD PTR [rax+0x8]
  4157bf:	cmp    QWORD PTR [rbp-0x10],rax
  4157c3:	jbe    4157f0 <flatcc_builder_default_alloc@@Base+0x155>
  4157c5:	mov    rax,QWORD PTR [rbp-0x20]
  4157c9:	mov    rax,QWORD PTR [rax+0x8]
  4157cd:	mov    rdx,QWORD PTR [rbp-0x10]
  4157d1:	sub    rdx,rax
  4157d4:	mov    rax,QWORD PTR [rbp-0x20]
  4157d8:	mov    rcx,QWORD PTR [rax+0x8]
  4157dc:	mov    rax,QWORD PTR [rbp-0x8]
  4157e0:	add    rax,rcx
  4157e3:	mov    esi,0x0
  4157e8:	mov    rdi,rax
  4157eb:	call   404200 <memset@plt>
  4157f0:	mov    rax,QWORD PTR [rbp-0x20]
  4157f4:	mov    rdx,QWORD PTR [rbp-0x8]
  4157f8:	mov    QWORD PTR [rax],rdx
  4157fb:	mov    rax,QWORD PTR [rbp-0x20]
  4157ff:	mov    rdx,QWORD PTR [rbp-0x10]
  415803:	mov    QWORD PTR [rax+0x8],rdx
  415807:	mov    eax,0x0
  41580c:	leave  
  41580d:	ret    
  41580e:	push   rbp
  41580f:	mov    rbp,rsp
  415812:	mov    QWORD PTR [rbp-0x18],rdi
  415816:	mov    DWORD PTR [rbp-0x1c],esi
  415819:	mov    rax,QWORD PTR [rbp-0x18]
  41581d:	add    rax,0x58
  415821:	add    rax,0x10
  415825:	mov    QWORD PTR [rbp-0x8],rax
  415829:	mov    rax,QWORD PTR [rbp-0x18]
  41582d:	mov    rdx,QWORD PTR [rax+0x68]
  415831:	mov    rax,QWORD PTR [rbp-0x18]
  415835:	mov    eax,DWORD PTR [rax+0x28]
  415838:	mov    eax,eax
  41583a:	add    rdx,rax
  41583d:	mov    rax,QWORD PTR [rbp-0x18]
  415841:	mov    QWORD PTR [rax+0x18],rdx
  415845:	mov    rax,QWORD PTR [rbp-0x8]
  415849:	mov    rax,QWORD PTR [rax+0x8]
  41584d:	mov    edx,eax
  41584f:	mov    rax,QWORD PTR [rbp-0x18]
  415853:	mov    eax,DWORD PTR [rax+0x28]
  415856:	sub    edx,eax
  415858:	mov    rax,QWORD PTR [rbp-0x18]
  41585c:	mov    DWORD PTR [rax+0x24],edx
  41585f:	mov    rax,QWORD PTR [rbp-0x18]
  415863:	mov    eax,DWORD PTR [rax+0x24]
  415866:	cmp    DWORD PTR [rbp-0x1c],eax
  415869:	jae    415875 <flatcc_builder_default_alloc@@Base+0x1da>
  41586b:	mov    rax,QWORD PTR [rbp-0x18]
  41586f:	mov    edx,DWORD PTR [rbp-0x1c]
  415872:	mov    DWORD PTR [rax+0x24],edx
  415875:	mov    rax,QWORD PTR [rbp-0x18]
  415879:	mov    rax,QWORD PTR [rax+0x30]
  41587d:	mov    edx,DWORD PTR [rbp-0x1c]
  415880:	mov    DWORD PTR [rax+0x4],edx
  415883:	nop
  415884:	pop    rbp
  415885:	ret    
  415886:	endbr64 
  41588a:	push   rbp
  41588b:	mov    rbp,rsp
  41588e:	sub    rsp,0x30
  415892:	mov    QWORD PTR [rbp-0x18],rdi
  415896:	mov    QWORD PTR [rbp-0x20],rsi
  41589a:	mov    DWORD PTR [rbp-0x24],edx
  41589d:	mov    rax,QWORD PTR [rbp-0x18]
  4158a1:	add    rax,0x58
  4158a5:	add    rax,0x10
  4158a9:	mov    QWORD PTR [rbp-0x8],rax
  4158ad:	mov    rax,QWORD PTR [rbp-0x18]
  4158b1:	mov    rax,QWORD PTR [rax+0x50]
  4158b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4158b9:	mov    edx,DWORD PTR [rdx+0x28]
  4158bc:	mov    ecx,edx
  4158be:	mov    rdx,QWORD PTR [rbp-0x20]
  4158c2:	lea    r9,[rcx+rdx*1]
  4158c6:	mov    rdx,QWORD PTR [rbp-0x18]
  4158ca:	mov    rdi,QWORD PTR [rdx+0x40]
  4158ce:	mov    rsi,QWORD PTR [rbp-0x8]
  4158d2:	mov    r8d,0x1
  4158d8:	mov    ecx,0x1
  4158dd:	mov    rdx,r9
  4158e0:	call   rax
  4158e2:	test   eax,eax
  4158e4:	je     4158ed <flatcc_builder_default_alloc@@Base+0x252>
  4158e6:	mov    eax,0xffffffff
  4158eb:	jmp    415903 <flatcc_builder_default_alloc@@Base+0x268>
  4158ed:	mov    edx,DWORD PTR [rbp-0x24]
  4158f0:	mov    rax,QWORD PTR [rbp-0x18]
  4158f4:	mov    esi,edx
  4158f6:	mov    rdi,rax
  4158f9:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  4158fe:	mov    eax,0x0
  415903:	leave  
  415904:	ret    
  415905:	push   rbp
  415906:	mov    rbp,rsp
  415909:	sub    rsp,0x20
  41590d:	mov    QWORD PTR [rbp-0x18],rdi
  415911:	mov    DWORD PTR [rbp-0x1c],esi
  415914:	mov    rax,QWORD PTR [rbp-0x18]
  415918:	mov    eax,DWORD PTR [rax+0x20]
  41591b:	mov    eax,eax
  41591d:	mov    QWORD PTR [rbp-0x8],rax
  415921:	mov    rax,QWORD PTR [rbp-0x18]
  415925:	mov    edx,DWORD PTR [rax+0x20]
  415928:	mov    eax,DWORD PTR [rbp-0x1c]
  41592b:	add    edx,eax
  41592d:	mov    rax,QWORD PTR [rbp-0x18]
  415931:	mov    DWORD PTR [rax+0x20],edx
  415934:	mov    rax,QWORD PTR [rbp-0x18]
  415938:	mov    edx,DWORD PTR [rax+0x20]
  41593b:	mov    rax,QWORD PTR [rbp-0x18]
  41593f:	mov    eax,DWORD PTR [rax+0x24]
  415942:	cmp    edx,eax
  415944:	jb     415970 <flatcc_builder_default_alloc@@Base+0x2d5>
  415946:	mov    rax,QWORD PTR [rbp-0x18]
  41594a:	mov    eax,DWORD PTR [rax+0x20]
  41594d:	inc    eax
  41594f:	mov    ecx,eax
  415951:	mov    rax,QWORD PTR [rbp-0x18]
  415955:	mov    edx,0xfffffffc
  41595a:	mov    rsi,rcx
  41595d:	mov    rdi,rax
  415960:	call   415886 <flatcc_builder_default_alloc@@Base+0x1eb>
  415965:	test   eax,eax
  415967:	je     415970 <flatcc_builder_default_alloc@@Base+0x2d5>
  415969:	mov    eax,0x0
  41596e:	jmp    41597f <flatcc_builder_default_alloc@@Base+0x2e4>
  415970:	mov    rax,QWORD PTR [rbp-0x18]
  415974:	mov    rdx,QWORD PTR [rax+0x18]
  415978:	mov    rax,QWORD PTR [rbp-0x8]
  41597c:	add    rax,rdx
  41597f:	leave  
  415980:	ret    
  415981:	push   rbp
  415982:	mov    rbp,rsp
  415985:	sub    rsp,0x10
  415989:	mov    QWORD PTR [rbp-0x8],rdi
  41598d:	mov    DWORD PTR [rbp-0xc],esi
  415990:	mov    rax,QWORD PTR [rbp-0x8]
  415994:	mov    eax,DWORD PTR [rax+0x20]
  415997:	sub    eax,DWORD PTR [rbp-0xc]
  41599a:	mov    edx,eax
  41599c:	mov    rax,QWORD PTR [rbp-0x8]
  4159a0:	mov    DWORD PTR [rax+0x20],edx
  4159a3:	mov    eax,DWORD PTR [rbp-0xc]
  4159a6:	mov    rdx,QWORD PTR [rbp-0x8]
  4159aa:	mov    rcx,QWORD PTR [rdx+0x18]
  4159ae:	mov    rdx,QWORD PTR [rbp-0x8]
  4159b2:	mov    edx,DWORD PTR [rdx+0x20]
  4159b5:	mov    edx,edx
  4159b7:	add    rcx,rdx
  4159ba:	mov    rdx,rax
  4159bd:	mov    esi,0x0
  4159c2:	mov    rdi,rcx
  4159c5:	call   404200 <memset@plt>
  4159ca:	nop
  4159cb:	leave  
  4159cc:	ret    
  4159cd:	push   rbp
  4159ce:	mov    rbp,rsp
  4159d1:	sub    rsp,0x30
  4159d5:	mov    QWORD PTR [rbp-0x18],rdi
  4159d9:	mov    QWORD PTR [rbp-0x20],rsi
  4159dd:	mov    DWORD PTR [rbp-0x24],edx
  4159e0:	mov    edx,DWORD PTR [rbp-0x24]
  4159e3:	mov    rax,QWORD PTR [rbp-0x18]
  4159e7:	mov    esi,edx
  4159e9:	mov    rdi,rax
  4159ec:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  4159f1:	mov    QWORD PTR [rbp-0x8],rax
  4159f5:	cmp    QWORD PTR [rbp-0x8],0x0
  4159fa:	jne    415a03 <flatcc_builder_default_alloc@@Base+0x368>
  4159fc:	mov    eax,0x0
  415a01:	jmp    415a1d <flatcc_builder_default_alloc@@Base+0x382>
  415a03:	mov    edx,DWORD PTR [rbp-0x24]
  415a06:	mov    rcx,QWORD PTR [rbp-0x20]
  415a0a:	mov    rax,QWORD PTR [rbp-0x8]
  415a0e:	mov    rsi,rcx
  415a11:	mov    rdi,rax
  415a14:	call   404260 <memcpy@plt>
  415a19:	mov    rax,QWORD PTR [rbp-0x8]
  415a1d:	leave  
  415a1e:	ret    
  415a1f:	push   rbp
  415a20:	mov    rbp,rsp
  415a23:	sub    rsp,0x30
  415a27:	mov    QWORD PTR [rbp-0x18],rdi
  415a2b:	mov    DWORD PTR [rbp-0x1c],esi
  415a2e:	mov    eax,ecx
  415a30:	mov    WORD PTR [rbp-0x20],dx
  415a34:	mov    WORD PTR [rbp-0x24],ax
  415a38:	mov    rax,QWORD PTR [rbp-0x18]
  415a3c:	mov    edx,DWORD PTR [rax+0x20]
  415a3f:	movzx  eax,WORD PTR [rbp-0x20]
  415a43:	add    eax,edx
  415a45:	lea    edx,[rax-0x1]
  415a48:	movzx  eax,WORD PTR [rbp-0x20]
  415a4c:	neg    eax
  415a4e:	and    eax,edx
  415a50:	mov    DWORD PTR [rbp-0x4],eax
  415a53:	mov    edx,DWORD PTR [rbp-0x4]
  415a56:	mov    eax,DWORD PTR [rbp-0x1c]
  415a59:	add    edx,eax
  415a5b:	mov    rax,QWORD PTR [rbp-0x18]
  415a5f:	mov    DWORD PTR [rax+0x20],edx
  415a62:	mov    rax,QWORD PTR [rbp-0x18]
  415a66:	mov    edx,DWORD PTR [rax+0x20]
  415a69:	mov    rax,QWORD PTR [rbp-0x18]
  415a6d:	mov    eax,DWORD PTR [rax+0x24]
  415a70:	cmp    edx,eax
  415a72:	jb     415a9e <flatcc_builder_default_alloc@@Base+0x403>
  415a74:	mov    rax,QWORD PTR [rbp-0x18]
  415a78:	mov    eax,DWORD PTR [rax+0x20]
  415a7b:	inc    eax
  415a7d:	mov    ecx,eax
  415a7f:	mov    rax,QWORD PTR [rbp-0x18]
  415a83:	mov    edx,0xfffc
  415a88:	mov    rsi,rcx
  415a8b:	mov    rdi,rax
  415a8e:	call   415886 <flatcc_builder_default_alloc@@Base+0x1eb>
  415a93:	test   eax,eax
  415a95:	je     415a9e <flatcc_builder_default_alloc@@Base+0x403>
  415a97:	mov    eax,0x0
  415a9c:	jmp    415ae5 <flatcc_builder_default_alloc@@Base+0x44a>
  415a9e:	mov    eax,DWORD PTR [rbp-0x4]
  415aa1:	mov    ecx,eax
  415aa3:	mov    rax,QWORD PTR [rbp-0x18]
  415aa7:	mov    rax,QWORD PTR [rax+0x8]
  415aab:	movzx  edx,WORD PTR [rbp-0x24]
  415aaf:	add    rdx,rdx
  415ab2:	add    rdx,rax
  415ab5:	lea    eax,[rcx+0x4]
  415ab8:	mov    WORD PTR [rdx],ax
  415abb:	mov    rax,QWORD PTR [rbp-0x18]
  415abf:	movzx  eax,WORD PTR [rax+0x10]
  415ac3:	cmp    WORD PTR [rbp-0x24],ax
  415ac7:	jb     415ad7 <flatcc_builder_default_alloc@@Base+0x43c>
  415ac9:	movzx  eax,WORD PTR [rbp-0x24]
  415acd:	inc    eax
  415acf:	mov    rdx,QWORD PTR [rbp-0x18]
  415ad3:	mov    WORD PTR [rdx+0x10],ax
  415ad7:	mov    rax,QWORD PTR [rbp-0x18]
  415adb:	mov    rdx,QWORD PTR [rax+0x18]
  415adf:	mov    eax,DWORD PTR [rbp-0x4]
  415ae2:	add    rax,rdx
  415ae5:	leave  
  415ae6:	ret    
  415ae7:	push   rbp
  415ae8:	mov    rbp,rsp
  415aeb:	sub    rsp,0x20
  415aef:	mov    QWORD PTR [rbp-0x18],rdi
  415af3:	mov    eax,esi
  415af5:	mov    WORD PTR [rbp-0x1c],ax
  415af9:	mov    rax,QWORD PTR [rbp-0x18]
  415afd:	mov    eax,DWORD PTR [rax+0x20]
  415b00:	add    eax,0x3
  415b03:	and    eax,0xfffffffc
  415b06:	mov    DWORD PTR [rbp-0x4],eax
  415b09:	mov    eax,DWORD PTR [rbp-0x4]
  415b0c:	lea    edx,[rax+0x4]
  415b0f:	mov    rax,QWORD PTR [rbp-0x18]
  415b13:	mov    DWORD PTR [rax+0x20],edx
  415b16:	mov    rax,QWORD PTR [rbp-0x18]
  415b1a:	mov    edx,DWORD PTR [rax+0x20]
  415b1d:	mov    rax,QWORD PTR [rbp-0x18]
  415b21:	mov    eax,DWORD PTR [rax+0x24]
  415b24:	cmp    edx,eax
  415b26:	jbe    415b50 <flatcc_builder_default_alloc@@Base+0x4b5>
  415b28:	mov    rax,QWORD PTR [rbp-0x18]
  415b2c:	mov    eax,DWORD PTR [rax+0x20]
  415b2f:	mov    ecx,eax
  415b31:	mov    rax,QWORD PTR [rbp-0x18]
  415b35:	mov    edx,0xfffc
  415b3a:	mov    rsi,rcx
  415b3d:	mov    rdi,rax
  415b40:	call   415886 <flatcc_builder_default_alloc@@Base+0x1eb>
  415b45:	test   eax,eax
  415b47:	je     415b50 <flatcc_builder_default_alloc@@Base+0x4b5>
  415b49:	mov    eax,0x0
  415b4e:	jmp    415baf <flatcc_builder_default_alloc@@Base+0x514>
  415b50:	mov    eax,DWORD PTR [rbp-0x4]
  415b53:	mov    ecx,eax
  415b55:	mov    rax,QWORD PTR [rbp-0x18]
  415b59:	mov    rax,QWORD PTR [rax+0x8]
  415b5d:	movzx  edx,WORD PTR [rbp-0x1c]
  415b61:	add    rdx,rdx
  415b64:	add    rdx,rax
  415b67:	lea    eax,[rcx+0x4]
  415b6a:	mov    WORD PTR [rdx],ax
  415b6d:	mov    rax,QWORD PTR [rbp-0x18]
  415b71:	movzx  eax,WORD PTR [rax+0x10]
  415b75:	cmp    WORD PTR [rbp-0x1c],ax
  415b79:	jb     415b89 <flatcc_builder_default_alloc@@Base+0x4ee>
  415b7b:	movzx  eax,WORD PTR [rbp-0x1c]
  415b7f:	inc    eax
  415b81:	mov    rdx,QWORD PTR [rbp-0x18]
  415b85:	mov    WORD PTR [rdx+0x10],ax
  415b89:	mov    rax,QWORD PTR [rbp-0x18]
  415b8d:	mov    rax,QWORD PTR [rax]
  415b90:	lea    rcx,[rax+0x2]
  415b94:	mov    rdx,QWORD PTR [rbp-0x18]
  415b98:	mov    QWORD PTR [rdx],rcx
  415b9b:	mov    edx,DWORD PTR [rbp-0x4]
  415b9e:	mov    WORD PTR [rax],dx
  415ba1:	mov    rax,QWORD PTR [rbp-0x18]
  415ba5:	mov    rdx,QWORD PTR [rax+0x18]
  415ba9:	mov    eax,DWORD PTR [rbp-0x4]
  415bac:	add    rax,rdx
  415baf:	leave  
  415bb0:	ret    
  415bb1:	push   rbp
  415bb2:	mov    rbp,rsp
  415bb5:	sub    rsp,0x30
  415bb9:	mov    QWORD PTR [rbp-0x18],rdi
  415bbd:	mov    DWORD PTR [rbp-0x1c],esi
  415bc0:	mov    QWORD PTR [rbp-0x28],rdx
  415bc4:	mov    QWORD PTR [rbp-0x30],rcx
  415bc8:	mov    DWORD PTR [rbp-0x20],r8d
  415bcc:	mov    rax,QWORD PTR [rbp-0x18]
  415bd0:	lea    rdx,[rax+0x58]
  415bd4:	mov    eax,DWORD PTR [rbp-0x1c]
  415bd7:	cdqe   
  415bd9:	shl    rax,0x4
  415bdd:	add    rax,rdx
  415be0:	mov    QWORD PTR [rbp-0x8],rax
  415be4:	mov    rdx,QWORD PTR [rbp-0x28]
  415be8:	mov    rax,QWORD PTR [rbp-0x30]
  415bec:	add    rdx,rax
  415bef:	mov    rax,QWORD PTR [rbp-0x8]
  415bf3:	mov    rax,QWORD PTR [rax+0x8]
  415bf7:	cmp    rdx,rax
  415bfa:	jbe    415c4f <flatcc_builder_default_alloc@@Base+0x5b4>
  415bfc:	mov    rax,QWORD PTR [rbp-0x18]
  415c00:	mov    rax,QWORD PTR [rax+0x50]
  415c04:	mov    rcx,QWORD PTR [rbp-0x28]
  415c08:	mov    rdx,QWORD PTR [rbp-0x30]
  415c0c:	lea    r9,[rcx+rdx*1]
  415c10:	mov    rdx,QWORD PTR [rbp-0x18]
  415c14:	mov    rdi,QWORD PTR [rdx+0x40]
  415c18:	mov    ecx,DWORD PTR [rbp-0x1c]
  415c1b:	mov    edx,DWORD PTR [rbp-0x20]
  415c1e:	mov    rsi,QWORD PTR [rbp-0x8]
  415c22:	mov    r8d,ecx
  415c25:	mov    ecx,edx
  415c27:	mov    rdx,r9
  415c2a:	call   rax
  415c2c:	test   eax,eax
  415c2e:	je     415c4f <flatcc_builder_default_alloc@@Base+0x5b4>
  415c30:	lea    rcx,[rip+0xcc81]        # 4228b8 <flatcc_builder_padding_base@@Base+0x658>
  415c37:	mov    edx,0x134
  415c3c:	lea    rsi,[rip+0xc81d]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  415c43:	lea    rdi,[rip+0xc876]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  415c4a:	call   4041f0 <__assert_fail@plt>
  415c4f:	mov    rax,QWORD PTR [rbp-0x8]
  415c53:	mov    rax,QWORD PTR [rax]
  415c56:	mov    rdx,rax
  415c59:	mov    rax,QWORD PTR [rbp-0x28]
  415c5d:	add    rax,rdx
  415c60:	leave  
  415c61:	ret    
  415c62:	push   rbp
  415c63:	mov    rbp,rsp
  415c66:	sub    rsp,0x20
  415c6a:	mov    QWORD PTR [rbp-0x18],rdi
  415c6e:	mov    DWORD PTR [rbp-0x1c],esi
  415c71:	mov    rax,QWORD PTR [rbp-0x18]
  415c75:	mov    rax,QWORD PTR [rax+0x30]
  415c79:	mov    edx,DWORD PTR [rax+0x10]
  415c7c:	mov    rax,QWORD PTR [rbp-0x18]
  415c80:	mov    rax,QWORD PTR [rax+0x30]
  415c84:	movzx  eax,WORD PTR [rax+0x1c]
  415c88:	movzx  eax,ax
  415c8b:	add    eax,eax
  415c8d:	add    eax,edx
  415c8f:	mov    DWORD PTR [rbp-0x8],eax
  415c92:	mov    eax,DWORD PTR [rbp-0x1c]
  415c95:	add    eax,0x2
  415c98:	cdqe   
  415c9a:	add    eax,eax
  415c9c:	mov    DWORD PTR [rbp-0x4],eax
  415c9f:	mov    ecx,DWORD PTR [rbp-0x4]
  415ca2:	mov    edx,DWORD PTR [rbp-0x8]
  415ca5:	mov    rax,QWORD PTR [rbp-0x18]
  415ca9:	mov    r8d,0x1
  415caf:	mov    esi,0x0
  415cb4:	mov    rdi,rax
  415cb7:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  415cbc:	mov    rdx,rax
  415cbf:	mov    rax,QWORD PTR [rbp-0x18]
  415cc3:	mov    QWORD PTR [rax+0x8],rdx
  415cc7:	mov    rax,QWORD PTR [rbp-0x18]
  415ccb:	mov    rax,QWORD PTR [rax+0x8]
  415ccf:	test   rax,rax
  415cd2:	jne    415cdb <flatcc_builder_default_alloc@@Base+0x640>
  415cd4:	mov    eax,0xffffffff
  415cd9:	jmp    415d48 <flatcc_builder_default_alloc@@Base+0x6ad>
  415cdb:	mov    rax,QWORD PTR [rbp-0x18]
  415cdf:	mov    rax,QWORD PTR [rax+0x8]
  415ce3:	lea    rdx,[rax+0x4]
  415ce7:	mov    rax,QWORD PTR [rbp-0x18]
  415ceb:	mov    QWORD PTR [rax+0x8],rdx
  415cef:	mov    rax,QWORD PTR [rbp-0x18]
  415cf3:	mov    rax,QWORD PTR [rax+0x30]
  415cf7:	mov    eax,DWORD PTR [rax+0x14]
  415cfa:	mov    DWORD PTR [rbp-0x8],eax
  415cfd:	mov    eax,DWORD PTR [rbp-0x1c]
  415d00:	cdqe   
  415d02:	add    eax,eax
  415d04:	inc    eax
  415d06:	mov    DWORD PTR [rbp-0x4],eax
  415d09:	mov    ecx,DWORD PTR [rbp-0x4]
  415d0c:	mov    edx,DWORD PTR [rbp-0x8]
  415d0f:	mov    rax,QWORD PTR [rbp-0x18]
  415d13:	mov    r8d,0x0
  415d19:	mov    esi,0x3
  415d1e:	mov    rdi,rax
  415d21:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  415d26:	mov    rdx,rax
  415d29:	mov    rax,QWORD PTR [rbp-0x18]
  415d2d:	mov    QWORD PTR [rax],rdx
  415d30:	mov    rax,QWORD PTR [rbp-0x18]
  415d34:	mov    rax,QWORD PTR [rax]
  415d37:	test   rax,rax
  415d3a:	jne    415d43 <flatcc_builder_default_alloc@@Base+0x6a8>
  415d3c:	mov    eax,0xffffffff
  415d41:	jmp    415d48 <flatcc_builder_default_alloc@@Base+0x6ad>
  415d43:	mov    eax,0x0
  415d48:	leave  
  415d49:	ret    
  415d4a:	endbr64 
  415d4e:	push   rbp
  415d4f:	mov    rbp,rsp
  415d52:	sub    rsp,0x30
  415d56:	mov    QWORD PTR [rbp-0x28],rdi
  415d5a:	mov    rax,QWORD PTR [rbp-0x28]
  415d5e:	add    rax,0x58
  415d62:	add    rax,0x50
  415d66:	mov    QWORD PTR [rbp-0x8],rax
  415d6a:	mov    rax,QWORD PTR [rbp-0x28]
  415d6e:	mov    eax,DWORD PTR [rax+0xe4]
  415d74:	test   eax,eax
  415d76:	je     415d97 <flatcc_builder_default_alloc@@Base+0x6fc>
  415d78:	lea    rcx,[rip+0xcb29]        # 4228a8 <flatcc_builder_padding_base@@Base+0x648>
  415d7f:	mov    edx,0x156
  415d84:	lea    rsi,[rip+0xc6d5]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  415d8b:	lea    rdi,[rip+0xc730]        # 4224c2 <flatcc_builder_padding_base@@Base+0x262>
  415d92:	call   4041f0 <__assert_fail@plt>
  415d97:	mov    rax,QWORD PTR [rbp-0x28]
  415d9b:	mov    eax,DWORD PTR [rax+0xe4]
  415da1:	mov    edx,eax
  415da3:	mov    rax,QWORD PTR [rbp-0x28]
  415da7:	mov    r8d,0x0
  415dad:	mov    ecx,0x10
  415db2:	mov    esi,0x6
  415db7:	mov    rdi,rax
  415dba:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  415dbf:	test   rax,rax
  415dc2:	jne    415dce <flatcc_builder_default_alloc@@Base+0x733>
  415dc4:	mov    eax,0xffffffff
  415dc9:	jmp    415e6f <flatcc_builder_default_alloc@@Base+0x7d4>
  415dce:	mov    rax,QWORD PTR [rbp-0x28]
  415dd2:	mov    DWORD PTR [rax+0xe4],0x10
  415ddc:	mov    QWORD PTR [rbp-0x18],0x100
  415de4:	mov    rax,QWORD PTR [rbp-0x28]
  415de8:	mov    rax,QWORD PTR [rax+0x50]
  415dec:	mov    rdx,QWORD PTR [rbp-0x28]
  415df0:	mov    rdi,QWORD PTR [rdx+0x40]
  415df4:	mov    rdx,QWORD PTR [rbp-0x18]
  415df8:	mov    rsi,QWORD PTR [rbp-0x8]
  415dfc:	mov    r8d,0x5
  415e02:	mov    ecx,0x1
  415e07:	call   rax
  415e09:	test   eax,eax
  415e0b:	je     415e18 <flatcc_builder_default_alloc@@Base+0x77d>
  415e0d:	mov    eax,0xffffffff
  415e12:	jmp    415e6f <flatcc_builder_default_alloc@@Base+0x7d4>
  415e14:	shl    QWORD PTR [rbp-0x18],1
  415e18:	mov    rax,QWORD PTR [rbp-0x18]
  415e1c:	lea    rdx,[rax+rax*1]
  415e20:	mov    rax,QWORD PTR [rbp-0x8]
  415e24:	mov    rax,QWORD PTR [rax+0x8]
  415e28:	cmp    rdx,rax
  415e2b:	jbe    415e14 <flatcc_builder_default_alloc@@Base+0x779>
  415e2d:	mov    rax,QWORD PTR [rbp-0x18]
  415e31:	shr    rax,0x2
  415e35:	mov    QWORD PTR [rbp-0x18],rax
  415e39:	mov    QWORD PTR [rbp-0x10],0x0
  415e41:	jmp    415e47 <flatcc_builder_default_alloc@@Base+0x7ac>
  415e43:	inc    QWORD PTR [rbp-0x10]
  415e47:	mov    rax,QWORD PTR [rbp-0x10]
  415e4b:	mov    edx,0x1
  415e50:	shlx   rax,rdx,rax
  415e55:	cmp    QWORD PTR [rbp-0x18],rax
  415e59:	ja     415e43 <flatcc_builder_default_alloc@@Base+0x7a8>
  415e5b:	mov    rax,QWORD PTR [rbp-0x28]
  415e5f:	mov    rdx,QWORD PTR [rbp-0x10]
  415e63:	mov    QWORD PTR [rax+0xd8],rdx
  415e6a:	mov    eax,0x0
  415e6f:	leave  
  415e70:	ret    
  415e71:	push   rbp
  415e72:	mov    rbp,rsp
  415e75:	sub    rsp,0x20
  415e79:	mov    QWORD PTR [rbp-0x18],rdi
  415e7d:	mov    DWORD PTR [rbp-0x1c],esi
  415e80:	mov    rax,QWORD PTR [rbp-0x18]
  415e84:	mov    rax,QWORD PTR [rax+0xd8]
  415e8b:	test   rax,rax
  415e8e:	jne    415ea7 <flatcc_builder_default_alloc@@Base+0x80c>
  415e90:	mov    rax,QWORD PTR [rbp-0x18]
  415e94:	mov    rdi,rax
  415e97:	call   415d4a <flatcc_builder_default_alloc@@Base+0x6af>
  415e9c:	test   eax,eax
  415e9e:	je     415ea7 <flatcc_builder_default_alloc@@Base+0x80c>
  415ea0:	mov    eax,0x0
  415ea5:	jmp    415ee3 <flatcc_builder_default_alloc@@Base+0x848>
  415ea7:	mov    rax,QWORD PTR [rbp-0x18]
  415eab:	mov    rax,QWORD PTR [rax+0xa8]
  415eb2:	mov    QWORD PTR [rbp-0x8],rax
  415eb6:	mov    rax,QWORD PTR [rbp-0x18]
  415eba:	mov    rax,QWORD PTR [rax+0xd8]
  415ec1:	mov    edx,0x20
  415ec6:	sub    edx,eax
  415ec8:	mov    eax,edx
  415eca:	mov    edx,DWORD PTR [rbp-0x1c]
  415ecd:	shrx   eax,edx,eax
  415ed2:	mov    eax,eax
  415ed4:	lea    rdx,[rax*4+0x0]
  415edc:	mov    rax,QWORD PTR [rbp-0x8]
  415ee0:	add    rax,rdx
  415ee3:	leave  
  415ee4:	ret    

0000000000415ee5 <flatcc_builder_flush_vtable_cache@@Base>:
  415ee5:	endbr64 
  415ee9:	push   rbp
  415eea:	mov    rbp,rsp
  415eed:	sub    rsp,0x20
  415ef1:	mov    QWORD PTR [rbp-0x18],rdi
  415ef5:	mov    rax,QWORD PTR [rbp-0x18]
  415ef9:	add    rax,0x58
  415efd:	add    rax,0x50
  415f01:	mov    QWORD PTR [rbp-0x8],rax
  415f05:	mov    rax,QWORD PTR [rbp-0x18]
  415f09:	mov    rax,QWORD PTR [rax+0xd8]
  415f10:	test   rax,rax
  415f13:	je     415f4f <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  415f15:	mov    rax,QWORD PTR [rbp-0x8]
  415f19:	mov    rdx,QWORD PTR [rax+0x8]
  415f1d:	mov    rax,QWORD PTR [rbp-0x8]
  415f21:	mov    rax,QWORD PTR [rax]
  415f24:	mov    esi,0x0
  415f29:	mov    rdi,rax
  415f2c:	call   404200 <memset@plt>
  415f31:	mov    rax,QWORD PTR [rbp-0x18]
  415f35:	mov    DWORD PTR [rax+0xe4],0x10
  415f3f:	mov    rax,QWORD PTR [rbp-0x18]
  415f43:	mov    DWORD PTR [rax+0xe0],0x0
  415f4d:	jmp    415f50 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  415f4f:	nop
  415f50:	leave  
  415f51:	ret    

0000000000415f52 <flatcc_builder_custom_init@@Base>:
  415f52:	endbr64 
  415f56:	push   rbp
  415f57:	mov    rbp,rsp
  415f5a:	sub    rsp,0x30
  415f5e:	mov    QWORD PTR [rbp-0x8],rdi
  415f62:	mov    QWORD PTR [rbp-0x10],rsi
  415f66:	mov    QWORD PTR [rbp-0x18],rdx
  415f6a:	mov    QWORD PTR [rbp-0x20],rcx
  415f6e:	mov    QWORD PTR [rbp-0x28],r8
  415f72:	mov    rax,QWORD PTR [rbp-0x8]
  415f76:	mov    edx,0x188
  415f7b:	mov    esi,0x0
  415f80:	mov    rdi,rax
  415f83:	call   404200 <memset@plt>
  415f88:	cmp    QWORD PTR [rbp-0x10],0x0
  415f8d:	jne    415fb6 <flatcc_builder_custom_init@@Base+0x64>
  415f8f:	mov    rax,QWORD PTR [rbp-0x8]
  415f93:	mov    DWORD PTR [rax+0x128],0x1
  415f9d:	mov    rax,0x41b4ef
  415fa4:	mov    QWORD PTR [rbp-0x10],rax
  415fa8:	mov    rax,QWORD PTR [rbp-0x8]
  415fac:	add    rax,0x130
  415fb2:	mov    QWORD PTR [rbp-0x18],rax
  415fb6:	cmp    QWORD PTR [rbp-0x20],0x0
  415fbb:	jne    415fc8 <flatcc_builder_custom_init@@Base+0x76>
  415fbd:	mov    rax,0x41569b
  415fc4:	mov    QWORD PTR [rbp-0x20],rax
  415fc8:	mov    rax,QWORD PTR [rbp-0x8]
  415fcc:	mov    rdx,QWORD PTR [rbp-0x28]
  415fd0:	mov    QWORD PTR [rax+0x40],rdx
  415fd4:	mov    rax,QWORD PTR [rbp-0x8]
  415fd8:	mov    rdx,QWORD PTR [rbp-0x20]
  415fdc:	mov    QWORD PTR [rax+0x50],rdx
  415fe0:	mov    rax,QWORD PTR [rbp-0x8]
  415fe4:	mov    rdx,QWORD PTR [rbp-0x18]
  415fe8:	mov    QWORD PTR [rax+0x38],rdx
  415fec:	mov    rax,QWORD PTR [rbp-0x8]
  415ff0:	mov    rdx,QWORD PTR [rbp-0x10]
  415ff4:	mov    QWORD PTR [rax+0x48],rdx
  415ff8:	mov    eax,0x0
  415ffd:	leave  
  415ffe:	ret    

0000000000415fff <flatcc_builder_init@@Base>:
  415fff:	endbr64 
  416003:	push   rbp
  416004:	mov    rbp,rsp
  416007:	sub    rsp,0x10
  41600b:	mov    QWORD PTR [rbp-0x8],rdi
  41600f:	mov    rax,QWORD PTR [rbp-0x8]
  416013:	mov    r8d,0x0
  416019:	mov    ecx,0x0
  41601e:	mov    edx,0x0
  416023:	mov    esi,0x0
  416028:	mov    rdi,rax
  41602b:	call   415f52 <flatcc_builder_custom_init@@Base>
  416030:	leave  
  416031:	ret    

0000000000416032 <flatcc_builder_custom_reset@@Base>:
  416032:	endbr64 
  416036:	push   rbp
  416037:	mov    rbp,rsp
  41603a:	sub    rsp,0x20
  41603e:	mov    QWORD PTR [rbp-0x18],rdi
  416042:	mov    DWORD PTR [rbp-0x1c],esi
  416045:	mov    DWORD PTR [rbp-0x20],edx
  416048:	mov    DWORD PTR [rbp-0xc],0x0
  41604f:	jmp    416105 <flatcc_builder_custom_reset@@Base+0xd3>
  416054:	mov    rax,QWORD PTR [rbp-0x18]
  416058:	lea    rdx,[rax+0x58]
  41605c:	mov    eax,DWORD PTR [rbp-0xc]
  41605f:	cdqe   
  416061:	shl    rax,0x4
  416065:	add    rax,rdx
  416068:	mov    QWORD PTR [rbp-0x8],rax
  41606c:	mov    rax,QWORD PTR [rbp-0x8]
  416070:	mov    rax,QWORD PTR [rax]
  416073:	test   rax,rax
  416076:	je     4160d6 <flatcc_builder_custom_reset@@Base+0xa4>
  416078:	cmp    DWORD PTR [rbp-0xc],0x5
  41607c:	je     4160b8 <flatcc_builder_custom_reset@@Base+0x86>
  41607e:	cmp    DWORD PTR [rbp-0x20],0x0
  416082:	je     4160b8 <flatcc_builder_custom_reset@@Base+0x86>
  416084:	mov    rax,QWORD PTR [rbp-0x18]
  416088:	mov    rax,QWORD PTR [rax+0x50]
  41608c:	mov    rdx,QWORD PTR [rbp-0x18]
  416090:	mov    rdi,QWORD PTR [rdx+0x40]
  416094:	mov    edx,DWORD PTR [rbp-0xc]
  416097:	mov    rsi,QWORD PTR [rbp-0x8]
  41609b:	mov    r8d,edx
  41609e:	mov    ecx,0x1
  4160a3:	mov    edx,0x1
  4160a8:	call   rax
  4160aa:	test   eax,eax
  4160ac:	je     4160b8 <flatcc_builder_custom_reset@@Base+0x86>
  4160ae:	mov    eax,0xffffffff
  4160b3:	jmp    416244 <flatcc_builder_custom_reset@@Base+0x212>
  4160b8:	mov    rax,QWORD PTR [rbp-0x8]
  4160bc:	mov    rdx,QWORD PTR [rax+0x8]
  4160c0:	mov    rax,QWORD PTR [rbp-0x8]
  4160c4:	mov    rax,QWORD PTR [rax]
  4160c7:	mov    esi,0x0
  4160cc:	mov    rdi,rax
  4160cf:	call   404200 <memset@plt>
  4160d4:	jmp    416102 <flatcc_builder_custom_reset@@Base+0xd0>
  4160d6:	mov    rax,QWORD PTR [rbp-0x8]
  4160da:	mov    rax,QWORD PTR [rax+0x8]
  4160de:	test   rax,rax
  4160e1:	je     416102 <flatcc_builder_custom_reset@@Base+0xd0>
  4160e3:	lea    rcx,[rip+0xc7e6]        # 4228d0 <flatcc_builder_padding_base@@Base+0x670>
  4160ea:	mov    edx,0x1b2
  4160ef:	lea    rsi,[rip+0xc36a]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4160f6:	lea    rdi,[rip+0xc3d4]        # 4224d1 <flatcc_builder_padding_base@@Base+0x271>
  4160fd:	call   4041f0 <__assert_fail@plt>
  416102:	inc    DWORD PTR [rbp-0xc]
  416105:	cmp    DWORD PTR [rbp-0xc],0x7
  416109:	jle    416054 <flatcc_builder_custom_reset@@Base+0x22>
  41610f:	mov    rax,QWORD PTR [rbp-0x18]
  416113:	mov    DWORD PTR [rax+0xe0],0x0
  41611d:	mov    rax,QWORD PTR [rbp-0x18]
  416121:	mov    eax,DWORD PTR [rax+0xe4]
  416127:	test   eax,eax
  416129:	je     416139 <flatcc_builder_custom_reset@@Base+0x107>
  41612b:	mov    rax,QWORD PTR [rbp-0x18]
  41612f:	mov    DWORD PTR [rax+0xe4],0x10
  416139:	mov    rax,QWORD PTR [rbp-0x18]
  41613d:	mov    WORD PTR [rax+0xe8],0x0
  416146:	mov    rax,QWORD PTR [rbp-0x18]
  41614a:	mov    DWORD PTR [rax+0xf0],0x0
  416154:	mov    rax,QWORD PTR [rbp-0x18]
  416158:	mov    DWORD PTR [rax+0xf4],0x0
  416162:	mov    rax,QWORD PTR [rbp-0x18]
  416166:	mov    DWORD PTR [rax+0x104],0x0
  416170:	mov    rax,QWORD PTR [rbp-0x18]
  416174:	mov    DWORD PTR [rax+0x108],0x0
  41617e:	mov    rax,QWORD PTR [rbp-0x18]
  416182:	mov    DWORD PTR [rax+0x20],0x0
  416189:	mov    rax,QWORD PTR [rbp-0x18]
  41618d:	mov    DWORD PTR [rax+0x24],0x0
  416194:	mov    rax,QWORD PTR [rbp-0x18]
  416198:	mov    DWORD PTR [rax+0xfc],0x0
  4161a2:	mov    rax,QWORD PTR [rbp-0x18]
  4161a6:	mov    DWORD PTR [rax+0x100],0x0
  4161b0:	mov    rax,QWORD PTR [rbp-0x18]
  4161b4:	mov    rdx,QWORD PTR [rax+0x68]
  4161b8:	mov    rax,QWORD PTR [rbp-0x18]
  4161bc:	mov    QWORD PTR [rax+0x18],rdx
  4161c0:	mov    rax,QWORD PTR [rbp-0x18]
  4161c4:	mov    rdx,QWORD PTR [rax+0x88]
  4161cb:	mov    rax,QWORD PTR [rbp-0x18]
  4161cf:	mov    QWORD PTR [rax],rdx
  4161d2:	mov    rax,QWORD PTR [rbp-0x18]
  4161d6:	mov    rdx,QWORD PTR [rax+0x58]
  4161da:	mov    rax,QWORD PTR [rbp-0x18]
  4161de:	mov    QWORD PTR [rax+0x8],rdx
  4161e2:	mov    rax,QWORD PTR [rbp-0x18]
  4161e6:	mov    QWORD PTR [rax+0x30],0x0
  4161ee:	cmp    DWORD PTR [rbp-0x1c],0x0
  4161f2:	je     41621f <flatcc_builder_custom_reset@@Base+0x1ed>
  4161f4:	mov    rax,QWORD PTR [rbp-0x18]
  4161f8:	mov    QWORD PTR [rax+0x118],0x0
  416203:	mov    rax,QWORD PTR [rbp-0x18]
  416207:	mov    DWORD PTR [rax+0x120],0x0
  416211:	mov    rax,QWORD PTR [rbp-0x18]
  416215:	mov    DWORD PTR [rax+0x124],0x0
  41621f:	mov    rax,QWORD PTR [rbp-0x18]
  416223:	mov    eax,DWORD PTR [rax+0x128]
  416229:	test   eax,eax
  41622b:	je     41623f <flatcc_builder_custom_reset@@Base+0x20d>
  41622d:	mov    rax,QWORD PTR [rbp-0x18]
  416231:	add    rax,0x130
  416237:	mov    rdi,rax
  41623a:	call   41b2ca <flatcc_emitter_reset@@Base>
  41623f:	mov    eax,0x0
  416244:	leave  
  416245:	ret    

0000000000416246 <flatcc_builder_reset@@Base>:
  416246:	endbr64 
  41624a:	push   rbp
  41624b:	mov    rbp,rsp
  41624e:	sub    rsp,0x10
  416252:	mov    QWORD PTR [rbp-0x8],rdi
  416256:	mov    rax,QWORD PTR [rbp-0x8]
  41625a:	mov    edx,0x0
  41625f:	mov    esi,0x0
  416264:	mov    rdi,rax
  416267:	call   416032 <flatcc_builder_custom_reset@@Base>
  41626c:	leave  
  41626d:	ret    

000000000041626e <flatcc_builder_clear@@Base>:
  41626e:	endbr64 
  416272:	push   rbp
  416273:	mov    rbp,rsp
  416276:	sub    rsp,0x20
  41627a:	mov    QWORD PTR [rbp-0x18],rdi
  41627e:	mov    DWORD PTR [rbp-0xc],0x0
  416285:	jmp    4162c8 <flatcc_builder_clear@@Base+0x5a>
  416287:	mov    rax,QWORD PTR [rbp-0x18]
  41628b:	lea    rdx,[rax+0x58]
  41628f:	mov    eax,DWORD PTR [rbp-0xc]
  416292:	cdqe   
  416294:	shl    rax,0x4
  416298:	add    rax,rdx
  41629b:	mov    QWORD PTR [rbp-0x8],rax
  41629f:	mov    rax,QWORD PTR [rbp-0x18]
  4162a3:	mov    rax,QWORD PTR [rax+0x50]
  4162a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4162ab:	mov    rdi,QWORD PTR [rdx+0x40]
  4162af:	mov    edx,DWORD PTR [rbp-0xc]
  4162b2:	mov    rsi,QWORD PTR [rbp-0x8]
  4162b6:	mov    r8d,edx
  4162b9:	mov    ecx,0x0
  4162be:	mov    edx,0x0
  4162c3:	call   rax
  4162c5:	inc    DWORD PTR [rbp-0xc]
  4162c8:	cmp    DWORD PTR [rbp-0xc],0x7
  4162cc:	jle    416287 <flatcc_builder_clear@@Base+0x19>
  4162ce:	mov    rax,QWORD PTR [rbp-0x18]
  4162d2:	mov    eax,DWORD PTR [rax+0x128]
  4162d8:	test   eax,eax
  4162da:	je     4162ee <flatcc_builder_clear@@Base+0x80>
  4162dc:	mov    rax,QWORD PTR [rbp-0x18]
  4162e0:	add    rax,0x130
  4162e6:	mov    rdi,rax
  4162e9:	call   41b45c <flatcc_emitter_clear@@Base>
  4162ee:	mov    rax,QWORD PTR [rbp-0x18]
  4162f2:	mov    edx,0x188
  4162f7:	mov    esi,0x0
  4162fc:	mov    rdi,rax
  4162ff:	call   404200 <memset@plt>
  416304:	nop
  416305:	leave  
  416306:	ret    
  416307:	push   rbp
  416308:	mov    rbp,rsp
  41630b:	mov    QWORD PTR [rbp-0x8],rdi
  41630f:	mov    eax,esi
  416311:	mov    WORD PTR [rbp-0xc],ax
  416315:	mov    rax,QWORD PTR [rbp-0x8]
  416319:	movzx  eax,WORD PTR [rax+0xe8]
  416320:	cmp    WORD PTR [rbp-0xc],ax
  416324:	jbe    416335 <flatcc_builder_clear@@Base+0xc7>
  416326:	mov    rdx,QWORD PTR [rbp-0x8]
  41632a:	movzx  eax,WORD PTR [rbp-0xc]
  41632e:	mov    WORD PTR [rdx+0xe8],ax
  416335:	nop
  416336:	pop    rbp
  416337:	ret    
  416338:	push   rbp
  416339:	mov    rbp,rsp
  41633c:	mov    QWORD PTR [rbp-0x8],rdi
  416340:	mov    eax,esi
  416342:	mov    WORD PTR [rbp-0xc],ax
  416346:	mov    rax,QWORD PTR [rbp-0x8]
  41634a:	movzx  eax,WORD PTR [rax]
  41634d:	cmp    WORD PTR [rbp-0xc],ax
  416351:	jbe    41635e <flatcc_builder_clear@@Base+0xf0>
  416353:	mov    rdx,QWORD PTR [rbp-0x8]
  416357:	movzx  eax,WORD PTR [rbp-0xc]
  41635b:	mov    WORD PTR [rdx],ax
  41635e:	nop
  41635f:	pop    rbp
  416360:	ret    

0000000000416361 <flatcc_builder_enter_user_frame_ptr@@Base>:
  416361:	endbr64 
  416365:	push   rbp
  416366:	mov    rbp,rsp
  416369:	sub    rsp,0x20
  41636d:	mov    QWORD PTR [rbp-0x18],rdi
  416371:	mov    QWORD PTR [rbp-0x20],rsi
  416375:	mov    rax,QWORD PTR [rbp-0x20]
  416379:	add    rax,0x7
  41637d:	and    rax,0xfffffffffffffff8
  416381:	add    rax,0x8
  416385:	mov    QWORD PTR [rbp-0x20],rax
  416389:	mov    rax,QWORD PTR [rbp-0x18]
  41638d:	mov    rdx,QWORD PTR [rax+0x180]
  416394:	mov    rcx,QWORD PTR [rbp-0x20]
  416398:	mov    rax,QWORD PTR [rbp-0x18]
  41639c:	mov    r8d,0x0
  4163a2:	mov    esi,0x7
  4163a7:	mov    rdi,rax
  4163aa:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  4163af:	mov    QWORD PTR [rbp-0x8],rax
  4163b3:	cmp    QWORD PTR [rbp-0x8],0x0
  4163b8:	jne    4163c1 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  4163ba:	mov    eax,0x0
  4163bf:	jmp    41642b <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  4163c1:	mov    rdx,QWORD PTR [rbp-0x20]
  4163c5:	mov    rax,QWORD PTR [rbp-0x8]
  4163c9:	mov    esi,0x0
  4163ce:	mov    rdi,rax
  4163d1:	call   404200 <memset@plt>
  4163d6:	mov    rax,QWORD PTR [rbp-0x8]
  4163da:	lea    rdx,[rax+0x8]
  4163de:	mov    QWORD PTR [rbp-0x8],rdx
  4163e2:	mov    rdx,QWORD PTR [rbp-0x18]
  4163e6:	mov    rdx,QWORD PTR [rdx+0x178]
  4163ed:	mov    QWORD PTR [rax],rdx
  4163f0:	mov    rax,QWORD PTR [rbp-0x18]
  4163f4:	mov    rax,QWORD PTR [rax+0x180]
  4163fb:	lea    rdx,[rax+0x8]
  4163ff:	mov    rax,QWORD PTR [rbp-0x18]
  416403:	mov    QWORD PTR [rax+0x178],rdx
  41640a:	mov    rax,QWORD PTR [rbp-0x18]
  41640e:	mov    rdx,QWORD PTR [rax+0x180]
  416415:	mov    rax,QWORD PTR [rbp-0x20]
  416419:	add    rdx,rax
  41641c:	mov    rax,QWORD PTR [rbp-0x18]
  416420:	mov    QWORD PTR [rax+0x180],rdx
  416427:	mov    rax,QWORD PTR [rbp-0x8]
  41642b:	leave  
  41642c:	ret    

000000000041642d <flatcc_builder_enter_user_frame@@Base>:
  41642d:	endbr64 
  416431:	push   rbp
  416432:	mov    rbp,rsp
  416435:	sub    rsp,0x20
  416439:	mov    QWORD PTR [rbp-0x18],rdi
  41643d:	mov    QWORD PTR [rbp-0x20],rsi
  416441:	mov    rax,QWORD PTR [rbp-0x20]
  416445:	add    rax,0x7
  416449:	and    rax,0xfffffffffffffff8
  41644d:	add    rax,0x8
  416451:	mov    QWORD PTR [rbp-0x20],rax
  416455:	mov    rax,QWORD PTR [rbp-0x18]
  416459:	mov    rdx,QWORD PTR [rax+0x180]
  416460:	mov    rcx,QWORD PTR [rbp-0x20]
  416464:	mov    rax,QWORD PTR [rbp-0x18]
  416468:	mov    r8d,0x0
  41646e:	mov    esi,0x7
  416473:	mov    rdi,rax
  416476:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  41647b:	mov    QWORD PTR [rbp-0x8],rax
  41647f:	cmp    QWORD PTR [rbp-0x8],0x0
  416484:	jne    41648d <flatcc_builder_enter_user_frame@@Base+0x60>
  416486:	mov    eax,0x0
  41648b:	jmp    4164fe <flatcc_builder_enter_user_frame@@Base+0xd1>
  41648d:	mov    rdx,QWORD PTR [rbp-0x20]
  416491:	mov    rax,QWORD PTR [rbp-0x8]
  416495:	mov    esi,0x0
  41649a:	mov    rdi,rax
  41649d:	call   404200 <memset@plt>
  4164a2:	mov    rax,QWORD PTR [rbp-0x8]
  4164a6:	lea    rdx,[rax+0x8]
  4164aa:	mov    QWORD PTR [rbp-0x8],rdx
  4164ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4164b2:	mov    rdx,QWORD PTR [rdx+0x178]
  4164b9:	mov    QWORD PTR [rax],rdx
  4164bc:	mov    rax,QWORD PTR [rbp-0x18]
  4164c0:	mov    rax,QWORD PTR [rax+0x180]
  4164c7:	lea    rdx,[rax+0x8]
  4164cb:	mov    rax,QWORD PTR [rbp-0x18]
  4164cf:	mov    QWORD PTR [rax+0x178],rdx
  4164d6:	mov    rax,QWORD PTR [rbp-0x18]
  4164da:	mov    rdx,QWORD PTR [rax+0x180]
  4164e1:	mov    rax,QWORD PTR [rbp-0x20]
  4164e5:	add    rdx,rax
  4164e8:	mov    rax,QWORD PTR [rbp-0x18]
  4164ec:	mov    QWORD PTR [rax+0x180],rdx
  4164f3:	mov    rax,QWORD PTR [rbp-0x18]
  4164f7:	mov    rax,QWORD PTR [rax+0x178]
  4164fe:	leave  
  4164ff:	ret    

0000000000416500 <flatcc_builder_exit_user_frame@@Base>:
  416500:	endbr64 
  416504:	push   rbp
  416505:	mov    rbp,rsp
  416508:	sub    rsp,0x20
  41650c:	mov    QWORD PTR [rbp-0x18],rdi
  416510:	mov    rax,QWORD PTR [rbp-0x18]
  416514:	mov    rax,QWORD PTR [rax+0x178]
  41651b:	test   rax,rax
  41651e:	jne    41653f <flatcc_builder_exit_user_frame@@Base+0x3f>
  416520:	lea    rcx,[rip+0xc3c9]        # 4228f0 <flatcc_builder_padding_base@@Base+0x690>
  416527:	mov    edx,0x21e
  41652c:	lea    rsi,[rip+0xbf2d]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  416533:	lea    rdi,[rip+0xbfa9]        # 4224e3 <flatcc_builder_padding_base@@Base+0x283>
  41653a:	call   4041f0 <__assert_fail@plt>
  41653f:	mov    rax,QWORD PTR [rbp-0x18]
  416543:	mov    rdx,QWORD PTR [rax+0xc8]
  41654a:	mov    rax,QWORD PTR [rbp-0x18]
  41654e:	mov    rax,QWORD PTR [rax+0x178]
  416555:	mov    eax,eax
  416557:	add    rax,rdx
  41655a:	mov    QWORD PTR [rbp-0x8],rax
  41655e:	mov    rax,QWORD PTR [rbp-0x18]
  416562:	mov    rax,QWORD PTR [rax+0x178]
  416569:	lea    rdx,[rax-0x8]
  41656d:	mov    rax,QWORD PTR [rbp-0x18]
  416571:	mov    QWORD PTR [rax+0x180],rdx
  416578:	mov    rax,QWORD PTR [rbp-0x8]
  41657c:	mov    rdx,QWORD PTR [rax-0x8]
  416580:	mov    rax,QWORD PTR [rbp-0x18]
  416584:	mov    QWORD PTR [rax+0x178],rdx
  41658b:	mov    rax,QWORD PTR [rbp-0x18]
  41658f:	mov    rax,QWORD PTR [rax+0x178]
  416596:	leave  
  416597:	ret    

0000000000416598 <flatcc_builder_exit_user_frame_at@@Base>:
  416598:	endbr64 
  41659c:	push   rbp
  41659d:	mov    rbp,rsp
  4165a0:	sub    rsp,0x10
  4165a4:	mov    QWORD PTR [rbp-0x8],rdi
  4165a8:	mov    QWORD PTR [rbp-0x10],rsi
  4165ac:	mov    rax,QWORD PTR [rbp-0x8]
  4165b0:	mov    rax,QWORD PTR [rax+0x178]
  4165b7:	cmp    QWORD PTR [rbp-0x10],rax
  4165bb:	jbe    4165dc <flatcc_builder_exit_user_frame_at@@Base+0x44>
  4165bd:	lea    rcx,[rip+0xc35c]        # 422920 <flatcc_builder_padding_base@@Base+0x6c0>
  4165c4:	mov    edx,0x227
  4165c9:	lea    rsi,[rip+0xbe90]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4165d0:	lea    rdi,[rip+0xbf29]        # 422500 <flatcc_builder_padding_base@@Base+0x2a0>
  4165d7:	call   4041f0 <__assert_fail@plt>
  4165dc:	mov    rax,QWORD PTR [rbp-0x8]
  4165e0:	mov    rdx,QWORD PTR [rbp-0x10]
  4165e4:	mov    QWORD PTR [rax+0x178],rdx
  4165eb:	mov    rax,QWORD PTR [rbp-0x8]
  4165ef:	mov    rdi,rax
  4165f2:	call   416500 <flatcc_builder_exit_user_frame@@Base>
  4165f7:	leave  
  4165f8:	ret    

00000000004165f9 <flatcc_builder_get_current_user_frame@@Base>:
  4165f9:	endbr64 
  4165fd:	push   rbp
  4165fe:	mov    rbp,rsp
  416601:	mov    QWORD PTR [rbp-0x8],rdi
  416605:	mov    rax,QWORD PTR [rbp-0x8]
  416609:	mov    rax,QWORD PTR [rax+0x178]
  416610:	pop    rbp
  416611:	ret    

0000000000416612 <flatcc_builder_get_user_frame_ptr@@Base>:
  416612:	endbr64 
  416616:	push   rbp
  416617:	mov    rbp,rsp
  41661a:	mov    QWORD PTR [rbp-0x8],rdi
  41661e:	mov    QWORD PTR [rbp-0x10],rsi
  416622:	mov    rax,QWORD PTR [rbp-0x8]
  416626:	mov    rax,QWORD PTR [rax+0xc8]
  41662d:	mov    rdx,QWORD PTR [rbp-0x10]
  416631:	mov    edx,edx
  416633:	add    rax,rdx
  416636:	pop    rbp
  416637:	ret    
  416638:	endbr64 
  41663c:	push   rbp
  41663d:	mov    rbp,rsp
  416640:	sub    rsp,0x10
  416644:	mov    QWORD PTR [rbp-0x8],rdi
  416648:	mov    eax,esi
  41664a:	mov    WORD PTR [rbp-0xc],ax
  41664e:	mov    rax,QWORD PTR [rbp-0x8]
  416652:	mov    eax,DWORD PTR [rax+0x104]
  416658:	lea    edx,[rax+0x1]
  41665b:	mov    rax,QWORD PTR [rbp-0x8]
  41665f:	mov    DWORD PTR [rax+0x104],edx
  416665:	mov    rax,QWORD PTR [rbp-0x8]
  416669:	mov    edx,DWORD PTR [rax+0x104]
  41666f:	mov    rax,QWORD PTR [rbp-0x8]
  416673:	mov    eax,DWORD PTR [rax+0x108]
  416679:	cmp    edx,eax
  41667b:	jle    416776 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  416681:	mov    rax,QWORD PTR [rbp-0x8]
  416685:	mov    eax,DWORD PTR [rax+0x120]
  41668b:	test   eax,eax
  41668d:	jle    4166b1 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  41668f:	mov    rax,QWORD PTR [rbp-0x8]
  416693:	mov    edx,DWORD PTR [rax+0x104]
  416699:	mov    rax,QWORD PTR [rbp-0x8]
  41669d:	mov    eax,DWORD PTR [rax+0x120]
  4166a3:	cmp    edx,eax
  4166a5:	jle    4166b1 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  4166a7:	mov    eax,0xffffffff
  4166ac:	jmp    416811 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  4166b1:	mov    rax,QWORD PTR [rbp-0x8]
  4166b5:	mov    eax,DWORD PTR [rax+0x104]
  4166bb:	dec    eax
  4166bd:	movsxd rdx,eax
  4166c0:	mov    rax,rdx
  4166c3:	shl    rax,0x3
  4166c7:	add    rax,rdx
  4166ca:	shl    rax,0x2
  4166ce:	mov    rdx,rax
  4166d1:	mov    rax,QWORD PTR [rbp-0x8]
  4166d5:	mov    r8d,0x0
  4166db:	mov    ecx,0x24
  4166e0:	mov    esi,0x4
  4166e5:	mov    rdi,rax
  4166e8:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  4166ed:	mov    rdx,rax
  4166f0:	mov    rax,QWORD PTR [rbp-0x8]
  4166f4:	mov    QWORD PTR [rax+0x30],rdx
  4166f8:	mov    rax,QWORD PTR [rbp-0x8]
  4166fc:	mov    rax,QWORD PTR [rax+0x30]
  416700:	test   rax,rax
  416703:	jne    41670f <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  416705:	mov    eax,0xffffffff
  41670a:	jmp    416811 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  41670f:	mov    rax,QWORD PTR [rbp-0x8]
  416713:	mov    rax,QWORD PTR [rax+0xa0]
  41671a:	movabs rdx,0xe38e38e38e38e38f
  416724:	mul    rdx
  416727:	mov    rax,rdx
  41672a:	shr    rax,0x5
  41672e:	mov    edx,eax
  416730:	mov    rax,QWORD PTR [rbp-0x8]
  416734:	mov    DWORD PTR [rax+0x108],edx
  41673a:	mov    rax,QWORD PTR [rbp-0x8]
  41673e:	mov    eax,DWORD PTR [rax+0x120]
  416744:	test   eax,eax
  416746:	jle    41678a <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  416748:	mov    rax,QWORD PTR [rbp-0x8]
  41674c:	mov    edx,DWORD PTR [rax+0x120]
  416752:	mov    rax,QWORD PTR [rbp-0x8]
  416756:	mov    eax,DWORD PTR [rax+0x108]
  41675c:	cmp    edx,eax
  41675e:	jge    41678a <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  416760:	mov    rax,QWORD PTR [rbp-0x8]
  416764:	mov    edx,DWORD PTR [rax+0x120]
  41676a:	mov    rax,QWORD PTR [rbp-0x8]
  41676e:	mov    DWORD PTR [rax+0x108],edx
  416774:	jmp    41678a <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  416776:	mov    rax,QWORD PTR [rbp-0x8]
  41677a:	mov    rax,QWORD PTR [rax+0x30]
  41677e:	lea    rdx,[rax+0x24]
  416782:	mov    rax,QWORD PTR [rbp-0x8]
  416786:	mov    QWORD PTR [rax+0x30],rdx
  41678a:	mov    rax,QWORD PTR [rbp-0x8]
  41678e:	mov    rax,QWORD PTR [rax+0x30]
  416792:	mov    rdx,QWORD PTR [rbp-0x8]
  416796:	mov    edx,DWORD PTR [rdx+0x20]
  416799:	mov    DWORD PTR [rax+0x8],edx
  41679c:	mov    rax,QWORD PTR [rbp-0x8]
  4167a0:	mov    rdx,QWORD PTR [rax+0x30]
  4167a4:	mov    rax,QWORD PTR [rbp-0x8]
  4167a8:	movzx  eax,WORD PTR [rax+0xea]
  4167af:	mov    WORD PTR [rdx+0xc],ax
  4167b3:	mov    rdx,QWORD PTR [rbp-0x8]
  4167b7:	movzx  eax,WORD PTR [rbp-0xc]
  4167bb:	mov    WORD PTR [rdx+0xea],ax
  4167c2:	mov    rax,QWORD PTR [rbp-0x8]
  4167c6:	mov    rax,QWORD PTR [rax+0x30]
  4167ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4167ce:	mov    edx,DWORD PTR [rdx+0x28]
  4167d1:	mov    DWORD PTR [rax],edx
  4167d3:	mov    rax,QWORD PTR [rbp-0x8]
  4167d7:	mov    rax,QWORD PTR [rax+0x30]
  4167db:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4167e2:	mov    rax,QWORD PTR [rbp-0x8]
  4167e6:	mov    edx,DWORD PTR [rax+0x28]
  4167e9:	mov    rax,QWORD PTR [rbp-0x8]
  4167ed:	mov    eax,DWORD PTR [rax+0x20]
  4167f0:	add    eax,edx
  4167f2:	add    eax,0x7
  4167f5:	and    eax,0xfffffff8
  4167f8:	mov    edx,eax
  4167fa:	mov    rax,QWORD PTR [rbp-0x8]
  4167fe:	mov    DWORD PTR [rax+0x28],edx
  416801:	mov    rax,QWORD PTR [rbp-0x8]
  416805:	mov    DWORD PTR [rax+0x20],0x0
  41680c:	mov    eax,0x0
  416811:	leave  
  416812:	ret    
  416813:	push   rbp
  416814:	mov    rbp,rsp
  416817:	sub    rsp,0x10
  41681b:	mov    QWORD PTR [rbp-0x8],rdi
  41681f:	mov    rax,QWORD PTR [rbp-0x8]
  416823:	mov    eax,DWORD PTR [rax+0x20]
  416826:	mov    edx,eax
  416828:	mov    rax,QWORD PTR [rbp-0x8]
  41682c:	mov    rax,QWORD PTR [rax+0x18]
  416830:	mov    esi,0x0
  416835:	mov    rdi,rax
  416838:	call   404200 <memset@plt>
  41683d:	mov    rax,QWORD PTR [rbp-0x8]
  416841:	mov    rax,QWORD PTR [rax+0x30]
  416845:	mov    edx,DWORD PTR [rax+0x8]
  416848:	mov    rax,QWORD PTR [rbp-0x8]
  41684c:	mov    DWORD PTR [rax+0x20],edx
  41684f:	mov    rax,QWORD PTR [rbp-0x8]
  416853:	mov    rax,QWORD PTR [rax+0x30]
  416857:	mov    edx,DWORD PTR [rax]
  416859:	mov    rax,QWORD PTR [rbp-0x8]
  41685d:	mov    DWORD PTR [rax+0x28],edx
  416860:	mov    rax,QWORD PTR [rbp-0x8]
  416864:	mov    rax,QWORD PTR [rax+0x30]
  416868:	mov    edx,DWORD PTR [rax+0x4]
  41686b:	mov    rax,QWORD PTR [rbp-0x8]
  41686f:	mov    esi,edx
  416871:	mov    rdi,rax
  416874:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  416879:	mov    rax,QWORD PTR [rbp-0x8]
  41687d:	movzx  eax,WORD PTR [rax+0xea]
  416884:	movzx  edx,ax
  416887:	mov    rax,QWORD PTR [rbp-0x8]
  41688b:	mov    esi,edx
  41688d:	mov    rdi,rax
  416890:	call   416307 <flatcc_builder_clear@@Base+0x99>
  416895:	mov    rax,QWORD PTR [rbp-0x8]
  416899:	mov    rax,QWORD PTR [rax+0x30]
  41689d:	movzx  eax,WORD PTR [rax+0xc]
  4168a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4168a5:	mov    WORD PTR [rdx+0xea],ax
  4168ac:	mov    rax,QWORD PTR [rbp-0x8]
  4168b0:	mov    rax,QWORD PTR [rax+0x30]
  4168b4:	lea    rdx,[rax-0x24]
  4168b8:	mov    rax,QWORD PTR [rbp-0x8]
  4168bc:	mov    QWORD PTR [rax+0x30],rdx
  4168c0:	mov    rax,QWORD PTR [rbp-0x8]
  4168c4:	mov    eax,DWORD PTR [rax+0x104]
  4168ca:	lea    edx,[rax-0x1]
  4168cd:	mov    rax,QWORD PTR [rbp-0x8]
  4168d1:	mov    DWORD PTR [rax+0x104],edx
  4168d7:	nop
  4168d8:	leave  
  4168d9:	ret    
  4168da:	push   rbp
  4168db:	mov    rbp,rsp
  4168de:	mov    QWORD PTR [rbp-0x8],rdi
  4168e2:	mov    DWORD PTR [rbp-0xc],esi
  4168e5:	mov    eax,edx
  4168e7:	mov    WORD PTR [rbp-0x10],ax
  4168eb:	mov    rax,QWORD PTR [rbp-0x8]
  4168ef:	mov    eax,DWORD PTR [rax+0xf0]
  4168f5:	sub    eax,DWORD PTR [rbp-0xc]
  4168f8:	movzx  edx,WORD PTR [rbp-0x10]
  4168fc:	dec    edx
  4168fe:	and    eax,edx
  416900:	pop    rbp
  416901:	ret    
  416902:	push   rbp
  416903:	mov    rbp,rsp
  416906:	mov    QWORD PTR [rbp-0x8],rdi
  41690a:	mov    eax,esi
  41690c:	mov    WORD PTR [rbp-0xc],ax
  416910:	mov    rax,QWORD PTR [rbp-0x8]
  416914:	mov    eax,DWORD PTR [rax+0xf4]
  41691a:	movzx  edx,WORD PTR [rbp-0xc]
  41691e:	dec    edx
  416920:	and    eax,edx
  416922:	pop    rbp
  416923:	ret    
  416924:	push   rbp
  416925:	mov    rbp,rsp
  416928:	sub    rsp,0x20
  41692c:	mov    QWORD PTR [rbp-0x18],rdi
  416930:	mov    QWORD PTR [rbp-0x20],rsi
  416934:	mov    rax,QWORD PTR [rbp-0x18]
  416938:	mov    edx,DWORD PTR [rax+0xf0]
  41693e:	mov    rax,QWORD PTR [rbp-0x20]
  416942:	mov    rax,QWORD PTR [rax]
  416945:	sub    edx,eax
  416947:	mov    eax,edx
  416949:	mov    DWORD PTR [rbp-0x4],eax
  41694c:	mov    rax,QWORD PTR [rbp-0x20]
  416950:	mov    rax,QWORD PTR [rax]
  416953:	cmp    rax,0x10
  416957:	jbe    41696e <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  416959:	mov    rax,QWORD PTR [rbp-0x20]
  41695d:	mov    rax,QWORD PTR [rax]
  416960:	lea    rdx,[rax-0x10]
  416964:	mov    eax,0xffffffff
  416969:	cmp    rdx,rax
  41696c:	ja     41697d <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  41696e:	mov    rax,QWORD PTR [rbp-0x18]
  416972:	mov    eax,DWORD PTR [rax+0xf0]
  416978:	cmp    DWORD PTR [rbp-0x4],eax
  41697b:	jl     41699c <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  41697d:	lea    rcx,[rip+0xbfe4]        # 422968 <flatcc_builder_padding_base@@Base+0x708>
  416984:	mov    edx,0x287
  416989:	lea    rsi,[rip+0xbad0]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  416990:	lea    rdi,[rip+0xbb29]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  416997:	call   4041f0 <__assert_fail@plt>
  41699c:	mov    rax,QWORD PTR [rbp-0x18]
  4169a0:	mov    rax,QWORD PTR [rax+0x48]
  4169a4:	mov    rdx,QWORD PTR [rbp-0x20]
  4169a8:	mov    r8,QWORD PTR [rdx]
  4169ab:	mov    rdx,QWORD PTR [rbp-0x20]
  4169af:	mov    edx,DWORD PTR [rdx+0x8]
  4169b2:	mov    rcx,QWORD PTR [rbp-0x20]
  4169b6:	lea    rsi,[rcx+0x10]
  4169ba:	mov    rcx,QWORD PTR [rbp-0x18]
  4169be:	mov    rdi,QWORD PTR [rcx+0x38]
  4169c2:	mov    ecx,DWORD PTR [rbp-0x4]
  4169c5:	call   rax
  4169c7:	test   eax,eax
  4169c9:	je     4169ea <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  4169cb:	lea    rcx,[rip+0xbf96]        # 422968 <flatcc_builder_padding_base@@Base+0x708>
  4169d2:	mov    edx,0x28b
  4169d7:	lea    rsi,[rip+0xba82]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4169de:	lea    rdi,[rip+0xbadb]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  4169e5:	call   4041f0 <__assert_fail@plt>
  4169ea:	mov    rax,QWORD PTR [rbp-0x18]
  4169ee:	mov    edx,DWORD PTR [rbp-0x4]
  4169f1:	mov    DWORD PTR [rax+0xf0],edx
  4169f7:	mov    rax,QWORD PTR [rbp-0x18]
  4169fb:	mov    eax,DWORD PTR [rax+0xf0]
  416a01:	leave  
  416a02:	ret    
  416a03:	push   rbp
  416a04:	mov    rbp,rsp
  416a07:	sub    rsp,0x20
  416a0b:	mov    QWORD PTR [rbp-0x18],rdi
  416a0f:	mov    QWORD PTR [rbp-0x20],rsi
  416a13:	mov    rax,QWORD PTR [rbp-0x18]
  416a17:	mov    eax,DWORD PTR [rax+0xf4]
  416a1d:	mov    DWORD PTR [rbp-0x4],eax
  416a20:	mov    rax,QWORD PTR [rbp-0x20]
  416a24:	mov    rax,QWORD PTR [rax]
  416a27:	mov    edx,eax
  416a29:	mov    eax,DWORD PTR [rbp-0x4]
  416a2c:	add    edx,eax
  416a2e:	mov    rax,QWORD PTR [rbp-0x18]
  416a32:	mov    DWORD PTR [rax+0xf4],edx
  416a38:	mov    rax,QWORD PTR [rbp-0x18]
  416a3c:	mov    eax,DWORD PTR [rax+0xf4]
  416a42:	cmp    DWORD PTR [rbp-0x4],eax
  416a45:	jle    416a66 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  416a47:	lea    rcx,[rip+0xbf0a]        # 422958 <flatcc_builder_padding_base@@Base+0x6f8>
  416a4e:	mov    edx,0x2a1
  416a53:	lea    rsi,[rip+0xba06]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  416a5a:	lea    rdi,[rip+0xba5f]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  416a61:	call   4041f0 <__assert_fail@plt>
  416a66:	mov    rax,QWORD PTR [rbp-0x18]
  416a6a:	mov    rax,QWORD PTR [rax+0x48]
  416a6e:	mov    rdx,QWORD PTR [rbp-0x20]
  416a72:	mov    r8,QWORD PTR [rdx]
  416a75:	mov    rdx,QWORD PTR [rbp-0x20]
  416a79:	mov    edx,DWORD PTR [rdx+0x8]
  416a7c:	mov    rcx,QWORD PTR [rbp-0x20]
  416a80:	lea    rsi,[rcx+0x10]
  416a84:	mov    rcx,QWORD PTR [rbp-0x18]
  416a88:	mov    rdi,QWORD PTR [rcx+0x38]
  416a8c:	mov    ecx,DWORD PTR [rbp-0x4]
  416a8f:	call   rax
  416a91:	test   eax,eax
  416a93:	je     416ab4 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  416a95:	lea    rcx,[rip+0xbebc]        # 422958 <flatcc_builder_padding_base@@Base+0x6f8>
  416a9c:	mov    edx,0x2a5
  416aa1:	lea    rsi,[rip+0xb9b8]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  416aa8:	lea    rdi,[rip+0xba11]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  416aaf:	call   4041f0 <__assert_fail@plt>
  416ab4:	mov    eax,DWORD PTR [rbp-0x4]
  416ab7:	inc    eax
  416ab9:	leave  
  416aba:	ret    
  416abb:	endbr64 
  416abf:	push   rbp
  416ac0:	mov    rbp,rsp
  416ac3:	sub    rsp,0xd0
  416aca:	mov    QWORD PTR [rbp-0xb8],rdi
  416ad1:	mov    QWORD PTR [rbp-0xc0],rsi
  416ad8:	mov    eax,edx
  416ada:	mov    DWORD PTR [rbp-0xc8],ecx
  416ae0:	mov    WORD PTR [rbp-0xc4],ax
  416ae7:	mov    rax,QWORD PTR fs:0x28
  416af0:	mov    QWORD PTR [rbp-0x8],rax
  416af4:	xor    eax,eax
  416af6:	cmp    WORD PTR [rbp-0xc4],0x0
  416afe:	jne    416b2a <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  416b00:	mov    rax,QWORD PTR [rbp-0xb8]
  416b07:	movzx  eax,WORD PTR [rax+0xec]
  416b0e:	test   ax,ax
  416b11:	je     416b23 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  416b13:	mov    rax,QWORD PTR [rbp-0xb8]
  416b1a:	movzx  eax,WORD PTR [rax+0xec]
  416b21:	jmp    416b31 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  416b23:	mov    eax,0x1
  416b28:	jmp    416b31 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  416b2a:	movzx  eax,WORD PTR [rbp-0xc4]
  416b31:	mov    WORD PTR [rbp-0xc4],ax
  416b38:	mov    rax,QWORD PTR [rbp-0xc0]
  416b3f:	mov    esi,0x4
  416b44:	mov    rdi,rax
  416b47:	call   416338 <flatcc_builder_clear@@Base+0xca>
  416b4c:	movzx  edx,WORD PTR [rbp-0xc4]
  416b53:	mov    rax,QWORD PTR [rbp-0xc0]
  416b5a:	mov    esi,edx
  416b5c:	mov    rdi,rax
  416b5f:	call   416338 <flatcc_builder_clear@@Base+0xca>
  416b64:	cmp    DWORD PTR [rbp-0xc8],0x0
  416b6b:	jne    416c60 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  416b71:	movzx  edx,WORD PTR [rbp-0xc4]
  416b78:	mov    rax,QWORD PTR [rbp-0xb8]
  416b7f:	mov    esi,edx
  416b81:	mov    rdi,rax
  416b84:	call   416902 <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  416b89:	mov    eax,eax
  416b8b:	mov    QWORD PTR [rbp-0xa8],rax
  416b92:	cmp    QWORD PTR [rbp-0xa8],0x0
  416b9a:	je     416c60 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  416ba0:	mov    QWORD PTR [rbp-0xa0],0x0
  416bab:	mov    DWORD PTR [rbp-0x98],0x0
  416bb5:	cmp    QWORD PTR [rbp-0xa8],0x0
  416bbd:	je     416c24 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  416bbf:	mov    rdx,QWORD PTR [rbp-0xa0]
  416bc6:	mov    rax,QWORD PTR [rbp-0xa8]
  416bcd:	add    rax,rdx
  416bd0:	mov    QWORD PTR [rbp-0xa0],rax
  416bd7:	mov    eax,DWORD PTR [rbp-0x98]
  416bdd:	cdqe   
  416bdf:	shl    rax,0x4
  416be3:	add    rax,rbp
  416be6:	sub    rax,0x90
  416bec:	mov    rdx,0x422260
  416bf3:	mov    QWORD PTR [rax],rdx
  416bf6:	mov    eax,DWORD PTR [rbp-0x98]
  416bfc:	cdqe   
  416bfe:	shl    rax,0x4
  416c02:	add    rax,rbp
  416c05:	lea    rdx,[rax-0x88]
  416c0c:	mov    rax,QWORD PTR [rbp-0xa8]
  416c13:	mov    QWORD PTR [rdx],rax
  416c16:	mov    eax,DWORD PTR [rbp-0x98]
  416c1c:	inc    eax
  416c1e:	mov    DWORD PTR [rbp-0x98],eax
  416c24:	lea    rdx,[rbp-0xa0]
  416c2b:	mov    rax,QWORD PTR [rbp-0xb8]
  416c32:	mov    rsi,rdx
  416c35:	mov    rdi,rax
  416c38:	call   416a03 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  416c3d:	test   eax,eax
  416c3f:	jne    416c60 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  416c41:	lea    rcx,[rip+0xbd00]        # 422948 <flatcc_builder_padding_base@@Base+0x6e8>
  416c48:	mov    edx,0x2be
  416c4d:	lea    rsi,[rip+0xb80c]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  416c54:	lea    rdi,[rip+0xb865]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  416c5b:	call   4041f0 <__assert_fail@plt>
  416c60:	mov    eax,0x0
  416c65:	mov    rcx,QWORD PTR [rbp-0x8]
  416c69:	xor    rcx,QWORD PTR fs:0x28
  416c72:	je     416c79 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  416c74:	call   4041c0 <__stack_chk_fail@plt>
  416c79:	leave  
  416c7a:	ret    

0000000000416c7b <flatcc_builder_embed_buffer@@Base>:
  416c7b:	endbr64 
  416c7f:	push   rbp
  416c80:	mov    rbp,rsp
  416c83:	sub    rsp,0xe0
  416c8a:	mov    QWORD PTR [rbp-0xb8],rdi
  416c91:	mov    eax,esi
  416c93:	mov    QWORD PTR [rbp-0xc8],rdx
  416c9a:	mov    QWORD PTR [rbp-0xd0],rcx
  416ca1:	mov    edx,r8d
  416ca4:	mov    DWORD PTR [rbp-0xd4],r9d
  416cab:	mov    WORD PTR [rbp-0xbc],ax
  416cb2:	mov    eax,edx
  416cb4:	mov    WORD PTR [rbp-0xc0],ax
  416cbb:	mov    rax,QWORD PTR fs:0x28
  416cc4:	mov    QWORD PTR [rbp-0x8],rax
  416cc8:	xor    eax,eax
  416cca:	mov    eax,DWORD PTR [rbp-0xd4]
  416cd0:	and    eax,0x2
  416cd3:	mov    DWORD PTR [rbp-0xa8],eax
  416cd9:	mov    rax,QWORD PTR [rbp-0xb8]
  416ce0:	mov    eax,DWORD PTR [rax+0x100]
  416ce6:	test   eax,eax
  416ce8:	setne  al
  416ceb:	movzx  ecx,al
  416cee:	movzx  edx,WORD PTR [rbp-0xbc]
  416cf5:	lea    rsi,[rbp-0xc0]
  416cfc:	mov    rax,QWORD PTR [rbp-0xb8]
  416d03:	mov    rdi,rax
  416d06:	call   416abb <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  416d0b:	test   eax,eax
  416d0d:	je     416d19 <flatcc_builder_embed_buffer@@Base+0x9e>
  416d0f:	mov    eax,0x0
  416d14:	jmp    416ef0 <flatcc_builder_embed_buffer@@Base+0x275>
  416d19:	movzx  eax,WORD PTR [rbp-0xc0]
  416d20:	movzx  edx,ax
  416d23:	mov    rax,QWORD PTR [rbp-0xd0]
  416d2a:	mov    ecx,eax
  416d2c:	cmp    DWORD PTR [rbp-0xa8],0x0
  416d33:	je     416d3c <flatcc_builder_embed_buffer@@Base+0xc1>
  416d35:	mov    eax,0x4
  416d3a:	jmp    416d41 <flatcc_builder_embed_buffer@@Base+0xc6>
  416d3c:	mov    eax,0x0
  416d41:	add    ecx,eax
  416d43:	mov    rax,QWORD PTR [rbp-0xb8]
  416d4a:	mov    esi,ecx
  416d4c:	mov    rdi,rax
  416d4f:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  416d54:	mov    DWORD PTR [rbp-0xa4],eax
  416d5a:	mov    rax,QWORD PTR [rbp-0xd0]
  416d61:	mov    edx,eax
  416d63:	mov    eax,DWORD PTR [rbp-0xa4]
  416d69:	add    eax,edx
  416d6b:	mov    edi,eax
  416d6d:	call   4155db <main@@Base+0x4b1>
  416d72:	mov    DWORD PTR [rbp-0xac],eax
  416d78:	mov    QWORD PTR [rbp-0xa0],0x0
  416d83:	mov    DWORD PTR [rbp-0x98],0x0
  416d8d:	mov    rax,QWORD PTR [rbp-0xb8]
  416d94:	mov    eax,DWORD PTR [rax+0x100]
  416d9a:	test   eax,eax
  416d9c:	je     416dfa <flatcc_builder_embed_buffer@@Base+0x17f>
  416d9e:	mov    rax,QWORD PTR [rbp-0xa0]
  416da5:	add    rax,0x4
  416da9:	mov    QWORD PTR [rbp-0xa0],rax
  416db0:	mov    eax,DWORD PTR [rbp-0x98]
  416db6:	cdqe   
  416db8:	shl    rax,0x4
  416dbc:	add    rax,rbp
  416dbf:	lea    rdx,[rax-0x90]
  416dc6:	lea    rax,[rbp-0xac]
  416dcd:	mov    QWORD PTR [rdx],rax
  416dd0:	mov    eax,DWORD PTR [rbp-0x98]
  416dd6:	cdqe   
  416dd8:	shl    rax,0x4
  416ddc:	add    rax,rbp
  416ddf:	sub    rax,0x88
  416de5:	mov    QWORD PTR [rax],0x4
  416dec:	mov    eax,DWORD PTR [rbp-0x98]
  416df2:	inc    eax
  416df4:	mov    DWORD PTR [rbp-0x98],eax
  416dfa:	cmp    QWORD PTR [rbp-0xd0],0x0
  416e02:	je     416e6a <flatcc_builder_embed_buffer@@Base+0x1ef>
  416e04:	mov    rdx,QWORD PTR [rbp-0xa0]
  416e0b:	mov    rax,QWORD PTR [rbp-0xd0]
  416e12:	add    rax,rdx
  416e15:	mov    QWORD PTR [rbp-0xa0],rax
  416e1c:	mov    eax,DWORD PTR [rbp-0x98]
  416e22:	cdqe   
  416e24:	shl    rax,0x4
  416e28:	add    rax,rbp
  416e2b:	lea    rdx,[rax-0x90]
  416e32:	mov    rax,QWORD PTR [rbp-0xc8]
  416e39:	mov    QWORD PTR [rdx],rax
  416e3c:	mov    eax,DWORD PTR [rbp-0x98]
  416e42:	cdqe   
  416e44:	shl    rax,0x4
  416e48:	add    rax,rbp
  416e4b:	lea    rdx,[rax-0x88]
  416e52:	mov    rax,QWORD PTR [rbp-0xd0]
  416e59:	mov    QWORD PTR [rdx],rax
  416e5c:	mov    eax,DWORD PTR [rbp-0x98]
  416e62:	inc    eax
  416e64:	mov    DWORD PTR [rbp-0x98],eax
  416e6a:	cmp    DWORD PTR [rbp-0xa4],0x0
  416e71:	je     416ed7 <flatcc_builder_embed_buffer@@Base+0x25c>
  416e73:	mov    rdx,QWORD PTR [rbp-0xa0]
  416e7a:	mov    eax,DWORD PTR [rbp-0xa4]
  416e80:	add    rax,rdx
  416e83:	mov    QWORD PTR [rbp-0xa0],rax
  416e8a:	mov    eax,DWORD PTR [rbp-0x98]
  416e90:	cdqe   
  416e92:	shl    rax,0x4
  416e96:	add    rax,rbp
  416e99:	sub    rax,0x90
  416e9f:	mov    rdx,0x422260
  416ea6:	mov    QWORD PTR [rax],rdx
  416ea9:	mov    edx,DWORD PTR [rbp-0x98]
  416eaf:	mov    eax,DWORD PTR [rbp-0xa4]
  416eb5:	movsxd rdx,edx
  416eb8:	shl    rdx,0x4
  416ebc:	add    rdx,rbp
  416ebf:	sub    rdx,0x88
  416ec6:	mov    QWORD PTR [rdx],rax
  416ec9:	mov    eax,DWORD PTR [rbp-0x98]
  416ecf:	inc    eax
  416ed1:	mov    DWORD PTR [rbp-0x98],eax
  416ed7:	lea    rdx,[rbp-0xa0]
  416ede:	mov    rax,QWORD PTR [rbp-0xb8]
  416ee5:	mov    rsi,rdx
  416ee8:	mov    rdi,rax
  416eeb:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  416ef0:	mov    rdi,QWORD PTR [rbp-0x8]
  416ef4:	xor    rdi,QWORD PTR fs:0x28
  416efd:	je     416f04 <flatcc_builder_embed_buffer@@Base+0x289>
  416eff:	call   4041c0 <__stack_chk_fail@plt>
  416f04:	leave  
  416f05:	ret    

0000000000416f06 <flatcc_builder_create_buffer@@Base>:
  416f06:	endbr64 
  416f0a:	push   rbp
  416f0b:	mov    rbp,rsp
  416f0e:	sub    rsp,0xf0
  416f15:	mov    QWORD PTR [rbp-0xd8],rdi
  416f1c:	mov    QWORD PTR [rbp-0xe0],rsi
  416f23:	mov    eax,edx
  416f25:	mov    DWORD PTR [rbp-0xe8],ecx
  416f2b:	mov    edx,r8d
  416f2e:	mov    DWORD PTR [rbp-0xf0],r9d
  416f35:	mov    WORD PTR [rbp-0xe4],ax
  416f3c:	mov    eax,edx
  416f3e:	mov    WORD PTR [rbp-0xec],ax
  416f45:	mov    rax,QWORD PTR fs:0x28
  416f4e:	mov    QWORD PTR [rbp-0x8],rax
  416f52:	xor    eax,eax
  416f54:	mov    DWORD PTR [rbp-0xb8],0x0
  416f5e:	mov    DWORD PTR [rbp-0xbc],0x0
  416f68:	mov    eax,DWORD PTR [rbp-0xf0]
  416f6e:	and    eax,0x1
  416f71:	test   eax,eax
  416f73:	setne  al
  416f76:	movzx  eax,al
  416f79:	mov    DWORD PTR [rbp-0xb4],eax
  416f7f:	mov    eax,DWORD PTR [rbp-0xf0]
  416f85:	and    eax,0x2
  416f88:	test   eax,eax
  416f8a:	setne  al
  416f8d:	movzx  eax,al
  416f90:	mov    DWORD PTR [rbp-0xb0],eax
  416f96:	movzx  edx,WORD PTR [rbp-0xe4]
  416f9d:	mov    ecx,DWORD PTR [rbp-0xb4]
  416fa3:	lea    rsi,[rbp-0xec]
  416faa:	mov    rax,QWORD PTR [rbp-0xd8]
  416fb1:	mov    rdi,rax
  416fb4:	call   416abb <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  416fb9:	test   eax,eax
  416fbb:	je     416fc7 <flatcc_builder_create_buffer@@Base+0xc1>
  416fbd:	mov    eax,0x0
  416fc2:	jmp    417329 <flatcc_builder_create_buffer@@Base+0x423>
  416fc7:	movzx  eax,WORD PTR [rbp-0xec]
  416fce:	movzx  edx,ax
  416fd1:	mov    rax,QWORD PTR [rbp-0xd8]
  416fd8:	mov    esi,edx
  416fda:	mov    rdi,rax
  416fdd:	call   416307 <flatcc_builder_clear@@Base+0x99>
  416fe2:	cmp    QWORD PTR [rbp-0xe0],0x0
  416fea:	je     417021 <flatcc_builder_create_buffer@@Base+0x11b>
  416fec:	mov    rax,QWORD PTR [rbp-0xe0]
  416ff3:	mov    eax,DWORD PTR [rax]
  416ff5:	mov    DWORD PTR [rbp-0xbc],eax
  416ffb:	mov    eax,DWORD PTR [rbp-0xbc]
  417001:	mov    edi,eax
  417003:	call   4155f6 <main@@Base+0x4cc>
  417008:	mov    DWORD PTR [rbp-0xbc],eax
  41700e:	mov    eax,DWORD PTR [rbp-0xbc]
  417014:	mov    edi,eax
  417016:	call   4155db <main@@Base+0x4b1>
  41701b:	mov    DWORD PTR [rbp-0xbc],eax
  417021:	mov    eax,DWORD PTR [rbp-0xbc]
  417027:	test   eax,eax
  417029:	je     417032 <flatcc_builder_create_buffer@@Base+0x12c>
  41702b:	mov    eax,0x4
  417030:	jmp    417037 <flatcc_builder_create_buffer@@Base+0x131>
  417032:	mov    eax,0x0
  417037:	mov    DWORD PTR [rbp-0xb8],eax
  41703d:	movzx  eax,WORD PTR [rbp-0xec]
  417044:	movzx  edx,ax
  417047:	cmp    DWORD PTR [rbp-0xb0],0x0
  41704e:	je     417057 <flatcc_builder_create_buffer@@Base+0x151>
  417050:	mov    ecx,0x4
  417055:	jmp    41705c <flatcc_builder_create_buffer@@Base+0x156>
  417057:	mov    ecx,0x0
  41705c:	mov    eax,DWORD PTR [rbp-0xb8]
  417062:	add    eax,ecx
  417064:	lea    ecx,[rax+0x4]
  417067:	mov    rax,QWORD PTR [rbp-0xd8]
  41706e:	mov    esi,ecx
  417070:	mov    rdi,rax
  417073:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  417078:	mov    DWORD PTR [rbp-0xac],eax
  41707e:	mov    QWORD PTR [rbp-0xa0],0x0
  417089:	mov    DWORD PTR [rbp-0x98],0x0
  417093:	cmp    DWORD PTR [rbp-0xb4],0x0
  41709a:	jne    4170a5 <flatcc_builder_create_buffer@@Base+0x19f>
  41709c:	cmp    DWORD PTR [rbp-0xb0],0x0
  4170a3:	je     417101 <flatcc_builder_create_buffer@@Base+0x1fb>
  4170a5:	mov    rax,QWORD PTR [rbp-0xa0]
  4170ac:	add    rax,0x4
  4170b0:	mov    QWORD PTR [rbp-0xa0],rax
  4170b7:	mov    eax,DWORD PTR [rbp-0x98]
  4170bd:	cdqe   
  4170bf:	shl    rax,0x4
  4170c3:	add    rax,rbp
  4170c6:	lea    rdx,[rax-0x90]
  4170cd:	lea    rax,[rbp-0xc0]
  4170d4:	mov    QWORD PTR [rdx],rax
  4170d7:	mov    eax,DWORD PTR [rbp-0x98]
  4170dd:	cdqe   
  4170df:	shl    rax,0x4
  4170e3:	add    rax,rbp
  4170e6:	sub    rax,0x88
  4170ec:	mov    QWORD PTR [rax],0x4
  4170f3:	mov    eax,DWORD PTR [rbp-0x98]
  4170f9:	inc    eax
  4170fb:	mov    DWORD PTR [rbp-0x98],eax
  417101:	mov    rax,QWORD PTR [rbp-0xa0]
  417108:	add    rax,0x4
  41710c:	mov    QWORD PTR [rbp-0xa0],rax
  417113:	mov    eax,DWORD PTR [rbp-0x98]
  417119:	cdqe   
  41711b:	shl    rax,0x4
  41711f:	add    rax,rbp
  417122:	lea    rdx,[rax-0x90]
  417129:	lea    rax,[rbp-0xc4]
  417130:	mov    QWORD PTR [rdx],rax
  417133:	mov    eax,DWORD PTR [rbp-0x98]
  417139:	cdqe   
  41713b:	shl    rax,0x4
  41713f:	add    rax,rbp
  417142:	sub    rax,0x88
  417148:	mov    QWORD PTR [rax],0x4
  41714f:	mov    eax,DWORD PTR [rbp-0x98]
  417155:	inc    eax
  417157:	mov    DWORD PTR [rbp-0x98],eax
  41715d:	cmp    DWORD PTR [rbp-0xb8],0x0
  417164:	je     4171cb <flatcc_builder_create_buffer@@Base+0x2c5>
  417166:	mov    rdx,QWORD PTR [rbp-0xa0]
  41716d:	mov    eax,DWORD PTR [rbp-0xb8]
  417173:	add    rax,rdx
  417176:	mov    QWORD PTR [rbp-0xa0],rax
  41717d:	mov    eax,DWORD PTR [rbp-0x98]
  417183:	cdqe   
  417185:	shl    rax,0x4
  417189:	add    rax,rbp
  41718c:	lea    rdx,[rax-0x90]
  417193:	lea    rax,[rbp-0xbc]
  41719a:	mov    QWORD PTR [rdx],rax
  41719d:	mov    edx,DWORD PTR [rbp-0x98]
  4171a3:	mov    eax,DWORD PTR [rbp-0xb8]
  4171a9:	movsxd rdx,edx
  4171ac:	shl    rdx,0x4
  4171b0:	add    rdx,rbp
  4171b3:	sub    rdx,0x88
  4171ba:	mov    QWORD PTR [rdx],rax
  4171bd:	mov    eax,DWORD PTR [rbp-0x98]
  4171c3:	inc    eax
  4171c5:	mov    DWORD PTR [rbp-0x98],eax
  4171cb:	cmp    DWORD PTR [rbp-0xac],0x0
  4171d2:	je     417238 <flatcc_builder_create_buffer@@Base+0x332>
  4171d4:	mov    rdx,QWORD PTR [rbp-0xa0]
  4171db:	mov    eax,DWORD PTR [rbp-0xac]
  4171e1:	add    rax,rdx
  4171e4:	mov    QWORD PTR [rbp-0xa0],rax
  4171eb:	mov    eax,DWORD PTR [rbp-0x98]
  4171f1:	cdqe   
  4171f3:	shl    rax,0x4
  4171f7:	add    rax,rbp
  4171fa:	sub    rax,0x90
  417200:	mov    rdx,0x422260
  417207:	mov    QWORD PTR [rax],rdx
  41720a:	mov    edx,DWORD PTR [rbp-0x98]
  417210:	mov    eax,DWORD PTR [rbp-0xac]
  417216:	movsxd rdx,edx
  417219:	shl    rdx,0x4
  41721d:	add    rdx,rbp
  417220:	sub    rdx,0x88
  417227:	mov    QWORD PTR [rdx],rax
  41722a:	mov    eax,DWORD PTR [rbp-0x98]
  417230:	inc    eax
  417232:	mov    DWORD PTR [rbp-0x98],eax
  417238:	mov    rax,QWORD PTR [rbp-0xd8]
  41723f:	mov    eax,DWORD PTR [rax+0xf0]
  417245:	mov    edx,eax
  417247:	mov    rax,QWORD PTR [rbp-0xa0]
  41724e:	sub    edx,eax
  417250:	mov    eax,edx
  417252:	cmp    DWORD PTR [rbp-0xb4],0x0
  417259:	jne    417264 <flatcc_builder_create_buffer@@Base+0x35e>
  41725b:	cmp    DWORD PTR [rbp-0xb0],0x0
  417262:	je     41726b <flatcc_builder_create_buffer@@Base+0x365>
  417264:	mov    edx,0x4
  417269:	jmp    417270 <flatcc_builder_create_buffer@@Base+0x36a>
  41726b:	mov    edx,0x0
  417270:	add    eax,edx
  417272:	mov    DWORD PTR [rbp-0xa8],eax
  417278:	cmp    DWORD PTR [rbp-0xb4],0x0
  41727f:	je     4172a3 <flatcc_builder_create_buffer@@Base+0x39d>
  417281:	mov    rax,QWORD PTR [rbp-0xd8]
  417288:	mov    eax,DWORD PTR [rax+0xf8]
  41728e:	sub    eax,DWORD PTR [rbp-0xa8]
  417294:	mov    edi,eax
  417296:	call   4155db <main@@Base+0x4b1>
  41729b:	mov    DWORD PTR [rbp-0xc0],eax
  4172a1:	jmp    4172c3 <flatcc_builder_create_buffer@@Base+0x3bd>
  4172a3:	mov    rax,QWORD PTR [rbp-0xd8]
  4172aa:	mov    eax,DWORD PTR [rax+0xf4]
  4172b0:	sub    eax,DWORD PTR [rbp-0xa8]
  4172b6:	mov    edi,eax
  4172b8:	call   4155db <main@@Base+0x4b1>
  4172bd:	mov    DWORD PTR [rbp-0xc0],eax
  4172c3:	mov    eax,DWORD PTR [rbp-0xe8]
  4172c9:	sub    eax,DWORD PTR [rbp-0xa8]
  4172cf:	mov    edi,eax
  4172d1:	call   4155db <main@@Base+0x4b1>
  4172d6:	mov    DWORD PTR [rbp-0xc4],eax
  4172dc:	lea    rdx,[rbp-0xa0]
  4172e3:	mov    rax,QWORD PTR [rbp-0xd8]
  4172ea:	mov    rsi,rdx
  4172ed:	mov    rdi,rax
  4172f0:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4172f5:	mov    DWORD PTR [rbp-0xa4],eax
  4172fb:	cmp    DWORD PTR [rbp-0xa4],0x0
  417302:	jne    417323 <flatcc_builder_create_buffer@@Base+0x41d>
  417304:	lea    rcx,[rip+0xb675]        # 422980 <flatcc_builder_padding_base@@Base+0x720>
  41730b:	mov    edx,0x304
  417310:	lea    rsi,[rip+0xb149]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417317:	lea    rdi,[rip+0xb1a2]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41731e:	call   4041f0 <__assert_fail@plt>
  417323:	mov    eax,DWORD PTR [rbp-0xa4]
  417329:	mov    rsi,QWORD PTR [rbp-0x8]
  41732d:	xor    rsi,QWORD PTR fs:0x28
  417336:	je     41733d <flatcc_builder_create_buffer@@Base+0x437>
  417338:	call   4041c0 <__stack_chk_fail@plt>
  41733d:	leave  
  41733e:	ret    

000000000041733f <flatcc_builder_create_struct@@Base>:
  41733f:	endbr64 
  417343:	push   rbp
  417344:	mov    rbp,rsp
  417347:	sub    rsp,0xd0
  41734e:	mov    QWORD PTR [rbp-0xb8],rdi
  417355:	mov    QWORD PTR [rbp-0xc0],rsi
  41735c:	mov    QWORD PTR [rbp-0xc8],rdx
  417363:	mov    eax,ecx
  417365:	mov    WORD PTR [rbp-0xcc],ax
  41736c:	mov    rax,QWORD PTR fs:0x28
  417375:	mov    QWORD PTR [rbp-0x8],rax
  417379:	xor    eax,eax
  41737b:	cmp    WORD PTR [rbp-0xcc],0x0
  417383:	jne    4173a4 <flatcc_builder_create_struct@@Base+0x65>
  417385:	lea    rcx,[rip+0xb614]        # 4229a0 <flatcc_builder_padding_base@@Base+0x740>
  41738c:	mov    edx,0x30f
  417391:	lea    rsi,[rip+0xb0c8]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417398:	lea    rdi,[rip+0xb180]        # 42251f <flatcc_builder_padding_base@@Base+0x2bf>
  41739f:	call   4041f0 <__assert_fail@plt>
  4173a4:	movzx  edx,WORD PTR [rbp-0xcc]
  4173ab:	mov    rax,QWORD PTR [rbp-0xb8]
  4173b2:	mov    esi,edx
  4173b4:	mov    rdi,rax
  4173b7:	call   416307 <flatcc_builder_clear@@Base+0x99>
  4173bc:	movzx  edx,WORD PTR [rbp-0xcc]
  4173c3:	mov    rax,QWORD PTR [rbp-0xc8]
  4173ca:	mov    ecx,eax
  4173cc:	mov    rax,QWORD PTR [rbp-0xb8]
  4173d3:	mov    esi,ecx
  4173d5:	mov    rdi,rax
  4173d8:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4173dd:	mov    eax,eax
  4173df:	mov    QWORD PTR [rbp-0xa8],rax
  4173e6:	mov    QWORD PTR [rbp-0xa0],0x0
  4173f1:	mov    DWORD PTR [rbp-0x98],0x0
  4173fb:	cmp    QWORD PTR [rbp-0xc8],0x0
  417403:	je     41746b <flatcc_builder_create_struct@@Base+0x12c>
  417405:	mov    rdx,QWORD PTR [rbp-0xa0]
  41740c:	mov    rax,QWORD PTR [rbp-0xc8]
  417413:	add    rax,rdx
  417416:	mov    QWORD PTR [rbp-0xa0],rax
  41741d:	mov    eax,DWORD PTR [rbp-0x98]
  417423:	cdqe   
  417425:	shl    rax,0x4
  417429:	add    rax,rbp
  41742c:	lea    rdx,[rax-0x90]
  417433:	mov    rax,QWORD PTR [rbp-0xc0]
  41743a:	mov    QWORD PTR [rdx],rax
  41743d:	mov    eax,DWORD PTR [rbp-0x98]
  417443:	cdqe   
  417445:	shl    rax,0x4
  417449:	add    rax,rbp
  41744c:	lea    rdx,[rax-0x88]
  417453:	mov    rax,QWORD PTR [rbp-0xc8]
  41745a:	mov    QWORD PTR [rdx],rax
  41745d:	mov    eax,DWORD PTR [rbp-0x98]
  417463:	inc    eax
  417465:	mov    DWORD PTR [rbp-0x98],eax
  41746b:	cmp    QWORD PTR [rbp-0xa8],0x0
  417473:	je     4174da <flatcc_builder_create_struct@@Base+0x19b>
  417475:	mov    rdx,QWORD PTR [rbp-0xa0]
  41747c:	mov    rax,QWORD PTR [rbp-0xa8]
  417483:	add    rax,rdx
  417486:	mov    QWORD PTR [rbp-0xa0],rax
  41748d:	mov    eax,DWORD PTR [rbp-0x98]
  417493:	cdqe   
  417495:	shl    rax,0x4
  417499:	add    rax,rbp
  41749c:	sub    rax,0x90
  4174a2:	mov    rdx,0x422260
  4174a9:	mov    QWORD PTR [rax],rdx
  4174ac:	mov    eax,DWORD PTR [rbp-0x98]
  4174b2:	cdqe   
  4174b4:	shl    rax,0x4
  4174b8:	add    rax,rbp
  4174bb:	lea    rdx,[rax-0x88]
  4174c2:	mov    rax,QWORD PTR [rbp-0xa8]
  4174c9:	mov    QWORD PTR [rdx],rax
  4174cc:	mov    eax,DWORD PTR [rbp-0x98]
  4174d2:	inc    eax
  4174d4:	mov    DWORD PTR [rbp-0x98],eax
  4174da:	lea    rdx,[rbp-0xa0]
  4174e1:	mov    rax,QWORD PTR [rbp-0xb8]
  4174e8:	mov    rsi,rdx
  4174eb:	mov    rdi,rax
  4174ee:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4174f3:	mov    rcx,QWORD PTR [rbp-0x8]
  4174f7:	xor    rcx,QWORD PTR fs:0x28
  417500:	je     417507 <flatcc_builder_create_struct@@Base+0x1c8>
  417502:	call   4041c0 <__stack_chk_fail@plt>
  417507:	leave  
  417508:	ret    

0000000000417509 <flatcc_builder_start_buffer@@Base>:
  417509:	endbr64 
  41750d:	push   rbp
  41750e:	mov    rbp,rsp
  417511:	sub    rsp,0x20
  417515:	mov    QWORD PTR [rbp-0x8],rdi
  417519:	mov    QWORD PTR [rbp-0x10],rsi
  41751d:	mov    eax,edx
  41751f:	mov    DWORD PTR [rbp-0x18],ecx
  417522:	mov    WORD PTR [rbp-0x14],ax
  417526:	mov    rax,QWORD PTR [rbp-0x8]
  41752a:	movzx  eax,WORD PTR [rax+0xe8]
  417531:	movzx  edx,ax
  417534:	mov    rax,QWORD PTR [rbp-0x8]
  417538:	mov    esi,edx
  41753a:	mov    rdi,rax
  41753d:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  417542:	test   eax,eax
  417544:	je     417550 <flatcc_builder_start_buffer@@Base+0x47>
  417546:	mov    eax,0xffffffff
  41754b:	jmp    417654 <flatcc_builder_start_buffer@@Base+0x14b>
  417550:	mov    rax,QWORD PTR [rbp-0x8]
  417554:	mov    WORD PTR [rax+0xe8],0x1
  41755d:	mov    rax,QWORD PTR [rbp-0x8]
  417561:	mov    rdx,QWORD PTR [rax+0x30]
  417565:	mov    rax,QWORD PTR [rbp-0x8]
  417569:	movzx  eax,WORD PTR [rax+0xec]
  417570:	mov    WORD PTR [rdx+0x22],ax
  417574:	mov    rdx,QWORD PTR [rbp-0x8]
  417578:	movzx  eax,WORD PTR [rbp-0x14]
  41757c:	mov    WORD PTR [rdx+0xec],ax
  417583:	mov    rax,QWORD PTR [rbp-0x8]
  417587:	mov    rdx,QWORD PTR [rax+0x30]
  41758b:	mov    rax,QWORD PTR [rbp-0x8]
  41758f:	movzx  eax,WORD PTR [rax+0x10c]
  417596:	mov    WORD PTR [rdx+0x20],ax
  41759a:	mov    eax,DWORD PTR [rbp-0x18]
  41759d:	mov    edx,eax
  41759f:	mov    rax,QWORD PTR [rbp-0x8]
  4175a3:	mov    WORD PTR [rax+0x10c],dx
  4175aa:	mov    rax,QWORD PTR [rbp-0x8]
  4175ae:	mov    rax,QWORD PTR [rax+0x30]
  4175b2:	mov    rdx,QWORD PTR [rbp-0x8]
  4175b6:	mov    edx,DWORD PTR [rdx+0xf8]
  4175bc:	mov    DWORD PTR [rax+0x14],edx
  4175bf:	mov    rax,QWORD PTR [rbp-0x8]
  4175c3:	mov    rax,QWORD PTR [rax+0x30]
  4175c7:	mov    rdx,QWORD PTR [rbp-0x8]
  4175cb:	mov    edx,DWORD PTR [rdx+0x100]
  4175d1:	mov    DWORD PTR [rax+0x1c],edx
  4175d4:	mov    rax,QWORD PTR [rbp-0x8]
  4175d8:	mov    edx,DWORD PTR [rax+0xf0]
  4175de:	mov    rax,QWORD PTR [rbp-0x8]
  4175e2:	mov    DWORD PTR [rax+0xf8],edx
  4175e8:	mov    rax,QWORD PTR [rbp-0x8]
  4175ec:	mov    eax,DWORD PTR [rax+0xfc]
  4175f2:	lea    ecx,[rax+0x1]
  4175f5:	mov    rdx,QWORD PTR [rbp-0x8]
  4175f9:	mov    DWORD PTR [rdx+0xfc],ecx
  4175ff:	mov    rdx,QWORD PTR [rbp-0x8]
  417603:	mov    DWORD PTR [rdx+0x100],eax
  417609:	mov    rax,QWORD PTR [rbp-0x8]
  41760d:	mov    rax,QWORD PTR [rax+0x30]
  417611:	mov    rdx,QWORD PTR [rbp-0x8]
  417615:	mov    edx,DWORD PTR [rdx+0x110]
  41761b:	mov    DWORD PTR [rax+0x10],edx
  41761e:	cmp    QWORD PTR [rbp-0x10],0x0
  417623:	je     41762b <flatcc_builder_start_buffer@@Base+0x122>
  417625:	mov    rax,QWORD PTR [rbp-0x10]
  417629:	jmp    417632 <flatcc_builder_start_buffer@@Base+0x129>
  41762b:	mov    rax,0x422260
  417632:	mov    rdx,QWORD PTR [rbp-0x8]
  417636:	add    rdx,0x110
  41763d:	mov    eax,DWORD PTR [rax]
  41763f:	mov    DWORD PTR [rdx],eax
  417641:	mov    rax,QWORD PTR [rbp-0x8]
  417645:	mov    rax,QWORD PTR [rax+0x30]
  417649:	mov    WORD PTR [rax+0xe],0x1
  41764f:	mov    eax,0x0
  417654:	leave  
  417655:	ret    

0000000000417656 <flatcc_builder_end_buffer@@Base>:
  417656:	endbr64 
  41765a:	push   rbp
  41765b:	mov    rbp,rsp
  41765e:	sub    rsp,0x20
  417662:	mov    QWORD PTR [rbp-0x18],rdi
  417666:	mov    DWORD PTR [rbp-0x1c],esi
  417669:	mov    rax,QWORD PTR [rbp-0x18]
  41766d:	movzx  eax,WORD PTR [rax+0x10c]
  417674:	movzx  eax,ax
  417677:	and    eax,0x2
  41767a:	mov    DWORD PTR [rbp-0x8],eax
  41767d:	mov    rax,QWORD PTR [rbp-0x18]
  417681:	mov    eax,DWORD PTR [rax+0x100]
  417687:	test   eax,eax
  417689:	setne  al
  41768c:	movzx  eax,al
  41768f:	or     DWORD PTR [rbp-0x8],eax
  417692:	mov    rax,QWORD PTR [rbp-0x18]
  417696:	mov    rax,QWORD PTR [rax+0x30]
  41769a:	movzx  eax,WORD PTR [rax+0xe]
  41769e:	cmp    ax,0x1
  4176a2:	je     4176c3 <flatcc_builder_end_buffer@@Base+0x6d>
  4176a4:	lea    rcx,[rip+0xb315]        # 4229c0 <flatcc_builder_padding_base@@Base+0x760>
  4176ab:	mov    edx,0x346
  4176b0:	lea    rsi,[rip+0xada9]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4176b7:	lea    rdi,[rip+0xae72]        # 422530 <flatcc_builder_padding_base@@Base+0x2d0>
  4176be:	call   4041f0 <__assert_fail@plt>
  4176c3:	mov    rax,QWORD PTR [rbp-0x18]
  4176c7:	movzx  eax,WORD PTR [rax+0xec]
  4176ce:	movzx  edx,ax
  4176d1:	mov    rax,QWORD PTR [rbp-0x18]
  4176d5:	mov    esi,edx
  4176d7:	mov    rdi,rax
  4176da:	call   416307 <flatcc_builder_clear@@Base+0x99>
  4176df:	mov    rax,QWORD PTR [rbp-0x18]
  4176e3:	movzx  eax,WORD PTR [rax+0xe8]
  4176ea:	movzx  edi,ax
  4176ed:	mov    rax,QWORD PTR [rbp-0x18]
  4176f1:	movzx  eax,WORD PTR [rax+0xec]
  4176f8:	movzx  edx,ax
  4176fb:	mov    rax,QWORD PTR [rbp-0x18]
  4176ff:	lea    rsi,[rax+0x110]
  417706:	mov    r8d,DWORD PTR [rbp-0x8]
  41770a:	mov    ecx,DWORD PTR [rbp-0x1c]
  41770d:	mov    rax,QWORD PTR [rbp-0x18]
  417711:	mov    r9d,r8d
  417714:	mov    r8d,edi
  417717:	mov    rdi,rax
  41771a:	call   416f06 <flatcc_builder_create_buffer@@Base>
  41771f:	mov    DWORD PTR [rbp-0x4],eax
  417722:	cmp    DWORD PTR [rbp-0x4],0x0
  417726:	jne    41772f <flatcc_builder_end_buffer@@Base+0xd9>
  417728:	mov    eax,0x0
  41772d:	jmp    417794 <flatcc_builder_end_buffer@@Base+0x13e>
  41772f:	mov    rax,QWORD PTR [rbp-0x18]
  417733:	mov    rax,QWORD PTR [rax+0x30]
  417737:	mov    edx,DWORD PTR [rax+0x14]
  41773a:	mov    rax,QWORD PTR [rbp-0x18]
  41773e:	mov    DWORD PTR [rax+0xf8],edx
  417744:	mov    rax,QWORD PTR [rbp-0x18]
  417748:	mov    rax,QWORD PTR [rax+0x30]
  41774c:	mov    edx,DWORD PTR [rax+0x1c]
  41774f:	mov    rax,QWORD PTR [rbp-0x18]
  417753:	mov    DWORD PTR [rax+0x100],edx
  417759:	mov    rax,QWORD PTR [rbp-0x18]
  41775d:	mov    rax,QWORD PTR [rax+0x30]
  417761:	mov    edx,DWORD PTR [rax+0x10]
  417764:	mov    rax,QWORD PTR [rbp-0x18]
  417768:	mov    DWORD PTR [rax+0x110],edx
  41776e:	mov    rax,QWORD PTR [rbp-0x18]
  417772:	mov    rax,QWORD PTR [rax+0x30]
  417776:	movzx  eax,WORD PTR [rax+0x20]
  41777a:	mov    rdx,QWORD PTR [rbp-0x18]
  41777e:	mov    WORD PTR [rdx+0x10c],ax
  417785:	mov    rax,QWORD PTR [rbp-0x18]
  417789:	mov    rdi,rax
  41778c:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  417791:	mov    eax,DWORD PTR [rbp-0x4]
  417794:	leave  
  417795:	ret    

0000000000417796 <flatcc_builder_start_struct@@Base>:
  417796:	endbr64 
  41779a:	push   rbp
  41779b:	mov    rbp,rsp
  41779e:	sub    rsp,0x20
  4177a2:	mov    QWORD PTR [rbp-0x8],rdi
  4177a6:	mov    QWORD PTR [rbp-0x10],rsi
  4177aa:	mov    eax,edx
  4177ac:	mov    WORD PTR [rbp-0x14],ax
  4177b0:	movzx  edx,WORD PTR [rbp-0x14]
  4177b4:	mov    rax,QWORD PTR [rbp-0x8]
  4177b8:	mov    esi,edx
  4177ba:	mov    rdi,rax
  4177bd:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4177c2:	test   eax,eax
  4177c4:	je     4177cd <flatcc_builder_start_struct@@Base+0x37>
  4177c6:	mov    eax,0x0
  4177cb:	jmp    417800 <flatcc_builder_start_struct@@Base+0x6a>
  4177cd:	mov    rax,QWORD PTR [rbp-0x8]
  4177d1:	mov    rax,QWORD PTR [rax+0x30]
  4177d5:	mov    WORD PTR [rax+0xe],0x2
  4177db:	mov    rax,QWORD PTR [rbp-0x8]
  4177df:	mov    esi,0xfffffffc
  4177e4:	mov    rdi,rax
  4177e7:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  4177ec:	mov    rax,QWORD PTR [rbp-0x10]
  4177f0:	mov    edx,eax
  4177f2:	mov    rax,QWORD PTR [rbp-0x8]
  4177f6:	mov    esi,edx
  4177f8:	mov    rdi,rax
  4177fb:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  417800:	leave  
  417801:	ret    

0000000000417802 <flatcc_builder_struct_edit@@Base>:
  417802:	endbr64 
  417806:	push   rbp
  417807:	mov    rbp,rsp
  41780a:	mov    QWORD PTR [rbp-0x8],rdi
  41780e:	mov    rax,QWORD PTR [rbp-0x8]
  417812:	mov    rax,QWORD PTR [rax+0x18]
  417816:	pop    rbp
  417817:	ret    

0000000000417818 <flatcc_builder_end_struct@@Base>:
  417818:	endbr64 
  41781c:	push   rbp
  41781d:	mov    rbp,rsp
  417820:	sub    rsp,0x20
  417824:	mov    QWORD PTR [rbp-0x18],rdi
  417828:	mov    rax,QWORD PTR [rbp-0x18]
  41782c:	mov    rax,QWORD PTR [rax+0x30]
  417830:	movzx  eax,WORD PTR [rax+0xe]
  417834:	cmp    ax,0x2
  417838:	je     417859 <flatcc_builder_end_struct@@Base+0x41>
  41783a:	lea    rcx,[rip+0xb19f]        # 4229e0 <flatcc_builder_padding_base@@Base+0x780>
  417841:	mov    edx,0x368
  417846:	lea    rsi,[rip+0xac13]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41784d:	lea    rdi,[rip+0xad0c]        # 422560 <flatcc_builder_padding_base@@Base+0x300>
  417854:	call   4041f0 <__assert_fail@plt>
  417859:	mov    rax,QWORD PTR [rbp-0x18]
  41785d:	movzx  eax,WORD PTR [rax+0xea]
  417864:	movzx  edx,ax
  417867:	mov    rax,QWORD PTR [rbp-0x18]
  41786b:	mov    eax,DWORD PTR [rax+0x20]
  41786e:	mov    edi,eax
  417870:	mov    rax,QWORD PTR [rbp-0x18]
  417874:	mov    rsi,QWORD PTR [rax+0x18]
  417878:	mov    rax,QWORD PTR [rbp-0x18]
  41787c:	mov    ecx,edx
  41787e:	mov    rdx,rdi
  417881:	mov    rdi,rax
  417884:	call   41733f <flatcc_builder_create_struct@@Base>
  417889:	mov    DWORD PTR [rbp-0x4],eax
  41788c:	cmp    DWORD PTR [rbp-0x4],0x0
  417890:	jne    417899 <flatcc_builder_end_struct@@Base+0x81>
  417892:	mov    eax,0x0
  417897:	jmp    4178a8 <flatcc_builder_end_struct@@Base+0x90>
  417899:	mov    rax,QWORD PTR [rbp-0x18]
  41789d:	mov    rdi,rax
  4178a0:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4178a5:	mov    eax,DWORD PTR [rbp-0x4]
  4178a8:	leave  
  4178a9:	ret    
  4178aa:	push   rbp
  4178ab:	mov    rbp,rsp
  4178ae:	sub    rsp,0x20
  4178b2:	mov    QWORD PTR [rbp-0x18],rdi
  4178b6:	mov    DWORD PTR [rbp-0x1c],esi
  4178b9:	mov    DWORD PTR [rbp-0x20],edx
  4178bc:	mov    rax,QWORD PTR [rbp-0x18]
  4178c0:	mov    rax,QWORD PTR [rax+0x30]
  4178c4:	mov    eax,DWORD PTR [rax+0x14]
  4178c7:	mov    DWORD PTR [rbp-0x8],eax
  4178ca:	mov    edx,DWORD PTR [rbp-0x8]
  4178cd:	mov    eax,DWORD PTR [rbp-0x1c]
  4178d0:	add    eax,edx
  4178d2:	mov    DWORD PTR [rbp-0x4],eax
  4178d5:	mov    eax,DWORD PTR [rbp-0x8]
  4178d8:	cmp    eax,DWORD PTR [rbp-0x4]
  4178db:	ja     4178e5 <flatcc_builder_end_struct@@Base+0xcd>
  4178dd:	mov    eax,DWORD PTR [rbp-0x4]
  4178e0:	cmp    eax,DWORD PTR [rbp-0x20]
  4178e3:	jbe    41791b <flatcc_builder_end_struct@@Base+0x103>
  4178e5:	mov    eax,DWORD PTR [rbp-0x8]
  4178e8:	cmp    eax,DWORD PTR [rbp-0x4]
  4178eb:	ja     4178f5 <flatcc_builder_end_struct@@Base+0xdd>
  4178ed:	mov    eax,DWORD PTR [rbp-0x4]
  4178f0:	cmp    eax,DWORD PTR [rbp-0x20]
  4178f3:	jbe    417914 <flatcc_builder_end_struct@@Base+0xfc>
  4178f5:	lea    rcx,[rip+0xb104]        # 422a00 <flatcc_builder_padding_base@@Base+0x7a0>
  4178fc:	mov    edx,0x37c
  417901:	lea    rsi,[rip+0xab58]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417908:	lea    rdi,[rip+0xac7d]        # 42258c <flatcc_builder_padding_base@@Base+0x32c>
  41790f:	call   4041f0 <__assert_fail@plt>
  417914:	mov    eax,0xffffffff
  417919:	jmp    41792e <flatcc_builder_end_struct@@Base+0x116>
  41791b:	mov    rax,QWORD PTR [rbp-0x18]
  41791f:	mov    rax,QWORD PTR [rax+0x30]
  417923:	mov    edx,DWORD PTR [rbp-0x4]
  417926:	mov    DWORD PTR [rax+0x14],edx
  417929:	mov    eax,0x0
  41792e:	leave  
  41792f:	ret    

0000000000417930 <flatcc_builder_extend_vector@@Base>:
  417930:	endbr64 
  417934:	push   rbp
  417935:	mov    rbp,rsp
  417938:	sub    rsp,0x10
  41793c:	mov    QWORD PTR [rbp-0x8],rdi
  417940:	mov    QWORD PTR [rbp-0x10],rsi
  417944:	mov    rax,QWORD PTR [rbp-0x8]
  417948:	mov    rax,QWORD PTR [rax+0x30]
  41794c:	mov    edx,DWORD PTR [rax+0x18]
  41794f:	mov    rax,QWORD PTR [rbp-0x10]
  417953:	mov    ecx,eax
  417955:	mov    rax,QWORD PTR [rbp-0x8]
  417959:	mov    esi,ecx
  41795b:	mov    rdi,rax
  41795e:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417963:	test   eax,eax
  417965:	je     41796e <flatcc_builder_extend_vector@@Base+0x3e>
  417967:	mov    eax,0x0
  41796c:	jmp    41798e <flatcc_builder_extend_vector@@Base+0x5e>
  41796e:	mov    rax,QWORD PTR [rbp-0x8]
  417972:	mov    rax,QWORD PTR [rax+0x30]
  417976:	mov    eax,DWORD PTR [rax+0x10]
  417979:	mov    rdx,QWORD PTR [rbp-0x10]
  41797d:	imul   edx,eax
  417980:	mov    rax,QWORD PTR [rbp-0x8]
  417984:	mov    esi,edx
  417986:	mov    rdi,rax
  417989:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  41798e:	leave  
  41798f:	ret    

0000000000417990 <flatcc_builder_vector_push@@Base>:
  417990:	endbr64 
  417994:	push   rbp
  417995:	mov    rbp,rsp
  417998:	sub    rsp,0x10
  41799c:	mov    QWORD PTR [rbp-0x8],rdi
  4179a0:	mov    QWORD PTR [rbp-0x10],rsi
  4179a4:	mov    rax,QWORD PTR [rbp-0x8]
  4179a8:	mov    rax,QWORD PTR [rax+0x30]
  4179ac:	movzx  eax,WORD PTR [rax+0xe]
  4179b0:	cmp    ax,0x4
  4179b4:	je     4179d5 <flatcc_builder_vector_push@@Base+0x45>
  4179b6:	lea    rcx,[rip+0xb063]        # 422a20 <flatcc_builder_padding_base@@Base+0x7c0>
  4179bd:	mov    edx,0x38b
  4179c2:	lea    rsi,[rip+0xaa97]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4179c9:	lea    rdi,[rip+0xabd8]        # 4225a8 <flatcc_builder_padding_base@@Base+0x348>
  4179d0:	call   4041f0 <__assert_fail@plt>
  4179d5:	mov    rax,QWORD PTR [rbp-0x8]
  4179d9:	mov    rax,QWORD PTR [rax+0x30]
  4179dd:	mov    edx,DWORD PTR [rax+0x14]
  4179e0:	mov    rax,QWORD PTR [rbp-0x8]
  4179e4:	mov    rax,QWORD PTR [rax+0x30]
  4179e8:	mov    eax,DWORD PTR [rax+0x18]
  4179eb:	cmp    edx,eax
  4179ed:	jbe    417a2f <flatcc_builder_vector_push@@Base+0x9f>
  4179ef:	mov    rax,QWORD PTR [rbp-0x8]
  4179f3:	mov    rax,QWORD PTR [rax+0x30]
  4179f7:	mov    edx,DWORD PTR [rax+0x14]
  4179fa:	mov    rax,QWORD PTR [rbp-0x8]
  4179fe:	mov    rax,QWORD PTR [rax+0x30]
  417a02:	mov    eax,DWORD PTR [rax+0x18]
  417a05:	cmp    edx,eax
  417a07:	jbe    417a28 <flatcc_builder_vector_push@@Base+0x98>
  417a09:	lea    rcx,[rip+0xb010]        # 422a20 <flatcc_builder_padding_base@@Base+0x7c0>
  417a10:	mov    edx,0x38c
  417a15:	lea    rsi,[rip+0xaa44]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417a1c:	lea    rdi,[rip+0xabb5]        # 4225d8 <flatcc_builder_padding_base@@Base+0x378>
  417a23:	call   4041f0 <__assert_fail@plt>
  417a28:	mov    eax,0x0
  417a2d:	jmp    417a65 <flatcc_builder_vector_push@@Base+0xd5>
  417a2f:	mov    rax,QWORD PTR [rbp-0x8]
  417a33:	mov    rax,QWORD PTR [rax+0x30]
  417a37:	mov    edx,DWORD PTR [rax+0x14]
  417a3a:	mov    rax,QWORD PTR [rbp-0x8]
  417a3e:	mov    rax,QWORD PTR [rax+0x30]
  417a42:	inc    edx
  417a44:	mov    DWORD PTR [rax+0x14],edx
  417a47:	mov    rax,QWORD PTR [rbp-0x8]
  417a4b:	mov    rax,QWORD PTR [rax+0x30]
  417a4f:	mov    edx,DWORD PTR [rax+0x10]
  417a52:	mov    rcx,QWORD PTR [rbp-0x10]
  417a56:	mov    rax,QWORD PTR [rbp-0x8]
  417a5a:	mov    rsi,rcx
  417a5d:	mov    rdi,rax
  417a60:	call   4159cd <flatcc_builder_default_alloc@@Base+0x332>
  417a65:	leave  
  417a66:	ret    

0000000000417a67 <flatcc_builder_append_vector@@Base>:
  417a67:	endbr64 
  417a6b:	push   rbp
  417a6c:	mov    rbp,rsp
  417a6f:	sub    rsp,0x20
  417a73:	mov    QWORD PTR [rbp-0x8],rdi
  417a77:	mov    QWORD PTR [rbp-0x10],rsi
  417a7b:	mov    QWORD PTR [rbp-0x18],rdx
  417a7f:	mov    rax,QWORD PTR [rbp-0x8]
  417a83:	mov    rax,QWORD PTR [rax+0x30]
  417a87:	movzx  eax,WORD PTR [rax+0xe]
  417a8b:	cmp    ax,0x4
  417a8f:	je     417ab0 <flatcc_builder_append_vector@@Base+0x49>
  417a91:	lea    rcx,[rip+0xafa8]        # 422a40 <flatcc_builder_padding_base@@Base+0x7e0>
  417a98:	mov    edx,0x393
  417a9d:	lea    rsi,[rip+0xa9bc]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417aa4:	lea    rdi,[rip+0xaafd]        # 4225a8 <flatcc_builder_padding_base@@Base+0x348>
  417aab:	call   4041f0 <__assert_fail@plt>
  417ab0:	mov    rax,QWORD PTR [rbp-0x8]
  417ab4:	mov    rax,QWORD PTR [rax+0x30]
  417ab8:	mov    edx,DWORD PTR [rax+0x18]
  417abb:	mov    rax,QWORD PTR [rbp-0x18]
  417abf:	mov    ecx,eax
  417ac1:	mov    rax,QWORD PTR [rbp-0x8]
  417ac5:	mov    esi,ecx
  417ac7:	mov    rdi,rax
  417aca:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417acf:	test   eax,eax
  417ad1:	je     417ada <flatcc_builder_append_vector@@Base+0x73>
  417ad3:	mov    eax,0x0
  417ad8:	jmp    417aff <flatcc_builder_append_vector@@Base+0x98>
  417ada:	mov    rax,QWORD PTR [rbp-0x8]
  417ade:	mov    rax,QWORD PTR [rax+0x30]
  417ae2:	mov    eax,DWORD PTR [rax+0x10]
  417ae5:	mov    rdx,QWORD PTR [rbp-0x18]
  417ae9:	imul   edx,eax
  417aec:	mov    rcx,QWORD PTR [rbp-0x10]
  417af0:	mov    rax,QWORD PTR [rbp-0x8]
  417af4:	mov    rsi,rcx
  417af7:	mov    rdi,rax
  417afa:	call   4159cd <flatcc_builder_default_alloc@@Base+0x332>
  417aff:	leave  
  417b00:	ret    

0000000000417b01 <flatcc_builder_extend_offset_vector@@Base>:
  417b01:	endbr64 
  417b05:	push   rbp
  417b06:	mov    rbp,rsp
  417b09:	sub    rsp,0x10
  417b0d:	mov    QWORD PTR [rbp-0x8],rdi
  417b11:	mov    QWORD PTR [rbp-0x10],rsi
  417b15:	mov    rax,QWORD PTR [rbp-0x10]
  417b19:	mov    ecx,eax
  417b1b:	mov    rax,QWORD PTR [rbp-0x8]
  417b1f:	mov    edx,0x3fffffff
  417b24:	mov    esi,ecx
  417b26:	mov    rdi,rax
  417b29:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417b2e:	test   eax,eax
  417b30:	je     417b39 <flatcc_builder_extend_offset_vector@@Base+0x38>
  417b32:	mov    eax,0x0
  417b37:	jmp    417b52 <flatcc_builder_extend_offset_vector@@Base+0x51>
  417b39:	mov    rax,QWORD PTR [rbp-0x10]
  417b3d:	lea    edx,[rax*4+0x0]
  417b44:	mov    rax,QWORD PTR [rbp-0x8]
  417b48:	mov    esi,edx
  417b4a:	mov    rdi,rax
  417b4d:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  417b52:	leave  
  417b53:	ret    

0000000000417b54 <flatcc_builder_offset_vector_push@@Base>:
  417b54:	endbr64 
  417b58:	push   rbp
  417b59:	mov    rbp,rsp
  417b5c:	sub    rsp,0x20
  417b60:	mov    QWORD PTR [rbp-0x18],rdi
  417b64:	mov    DWORD PTR [rbp-0x1c],esi
  417b67:	mov    rax,QWORD PTR [rbp-0x18]
  417b6b:	mov    rax,QWORD PTR [rax+0x30]
  417b6f:	movzx  eax,WORD PTR [rax+0xe]
  417b73:	cmp    ax,0x5
  417b77:	je     417b98 <flatcc_builder_offset_vector_push@@Base+0x44>
  417b79:	lea    rcx,[rip+0xaee0]        # 422a60 <flatcc_builder_padding_base@@Base+0x800>
  417b80:	mov    edx,0x3a6
  417b85:	lea    rsi,[rip+0xa8d4]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417b8c:	lea    rdi,[rip+0xaa85]        # 422618 <flatcc_builder_padding_base@@Base+0x3b8>
  417b93:	call   4041f0 <__assert_fail@plt>
  417b98:	mov    rax,QWORD PTR [rbp-0x18]
  417b9c:	mov    rax,QWORD PTR [rax+0x30]
  417ba0:	mov    eax,DWORD PTR [rax+0x14]
  417ba3:	cmp    eax,0x3fffffff
  417ba8:	jne    417bb1 <flatcc_builder_offset_vector_push@@Base+0x5d>
  417baa:	mov    eax,0x0
  417baf:	jmp    417bf9 <flatcc_builder_offset_vector_push@@Base+0xa5>
  417bb1:	mov    rax,QWORD PTR [rbp-0x18]
  417bb5:	mov    rax,QWORD PTR [rax+0x30]
  417bb9:	mov    edx,DWORD PTR [rax+0x14]
  417bbc:	mov    rax,QWORD PTR [rbp-0x18]
  417bc0:	mov    rax,QWORD PTR [rax+0x30]
  417bc4:	inc    edx
  417bc6:	mov    DWORD PTR [rax+0x14],edx
  417bc9:	mov    rax,QWORD PTR [rbp-0x18]
  417bcd:	mov    esi,0x4
  417bd2:	mov    rdi,rax
  417bd5:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  417bda:	mov    QWORD PTR [rbp-0x8],rax
  417bde:	cmp    QWORD PTR [rbp-0x8],0x0
  417be3:	jne    417bec <flatcc_builder_offset_vector_push@@Base+0x98>
  417be5:	mov    eax,0x0
  417bea:	jmp    417bf9 <flatcc_builder_offset_vector_push@@Base+0xa5>
  417bec:	mov    rax,QWORD PTR [rbp-0x8]
  417bf0:	mov    edx,DWORD PTR [rbp-0x1c]
  417bf3:	mov    DWORD PTR [rax],edx
  417bf5:	mov    rax,QWORD PTR [rbp-0x8]
  417bf9:	leave  
  417bfa:	ret    

0000000000417bfb <flatcc_builder_append_offset_vector@@Base>:
  417bfb:	endbr64 
  417bff:	push   rbp
  417c00:	mov    rbp,rsp
  417c03:	sub    rsp,0x20
  417c07:	mov    QWORD PTR [rbp-0x8],rdi
  417c0b:	mov    QWORD PTR [rbp-0x10],rsi
  417c0f:	mov    QWORD PTR [rbp-0x18],rdx
  417c13:	mov    rax,QWORD PTR [rbp-0x8]
  417c17:	mov    rax,QWORD PTR [rax+0x30]
  417c1b:	movzx  eax,WORD PTR [rax+0xe]
  417c1f:	cmp    ax,0x5
  417c23:	je     417c44 <flatcc_builder_append_offset_vector@@Base+0x49>
  417c25:	lea    rcx,[rip+0xae74]        # 422aa0 <flatcc_builder_padding_base@@Base+0x840>
  417c2c:	mov    edx,0x3b4
  417c31:	lea    rsi,[rip+0xa828]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417c38:	lea    rdi,[rip+0xa9d9]        # 422618 <flatcc_builder_padding_base@@Base+0x3b8>
  417c3f:	call   4041f0 <__assert_fail@plt>
  417c44:	mov    rax,QWORD PTR [rbp-0x18]
  417c48:	mov    ecx,eax
  417c4a:	mov    rax,QWORD PTR [rbp-0x8]
  417c4e:	mov    edx,0x3fffffff
  417c53:	mov    esi,ecx
  417c55:	mov    rdi,rax
  417c58:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417c5d:	test   eax,eax
  417c5f:	je     417c68 <flatcc_builder_append_offset_vector@@Base+0x6d>
  417c61:	mov    eax,0x0
  417c66:	jmp    417c86 <flatcc_builder_append_offset_vector@@Base+0x8b>
  417c68:	mov    rax,QWORD PTR [rbp-0x18]
  417c6c:	lea    edx,[rax*4+0x0]
  417c73:	mov    rcx,QWORD PTR [rbp-0x10]
  417c77:	mov    rax,QWORD PTR [rbp-0x8]
  417c7b:	mov    rsi,rcx
  417c7e:	mov    rdi,rax
  417c81:	call   4159cd <flatcc_builder_default_alloc@@Base+0x332>
  417c86:	leave  
  417c87:	ret    

0000000000417c88 <flatcc_builder_extend_string@@Base>:
  417c88:	endbr64 
  417c8c:	push   rbp
  417c8d:	mov    rbp,rsp
  417c90:	sub    rsp,0x10
  417c94:	mov    QWORD PTR [rbp-0x8],rdi
  417c98:	mov    QWORD PTR [rbp-0x10],rsi
  417c9c:	mov    rax,QWORD PTR [rbp-0x8]
  417ca0:	mov    rax,QWORD PTR [rax+0x30]
  417ca4:	movzx  eax,WORD PTR [rax+0xe]
  417ca8:	cmp    ax,0x6
  417cac:	je     417ccd <flatcc_builder_extend_string@@Base+0x45>
  417cae:	lea    rcx,[rip+0xae1b]        # 422ad0 <flatcc_builder_padding_base@@Base+0x870>
  417cb5:	mov    edx,0x3bd
  417cba:	lea    rsi,[rip+0xa79f]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417cc1:	lea    rdi,[rip+0xa988]        # 422650 <flatcc_builder_padding_base@@Base+0x3f0>
  417cc8:	call   4041f0 <__assert_fail@plt>
  417ccd:	mov    rax,QWORD PTR [rbp-0x10]
  417cd1:	mov    ecx,eax
  417cd3:	mov    rax,QWORD PTR [rbp-0x8]
  417cd7:	mov    edx,0xffffffff
  417cdc:	mov    esi,ecx
  417cde:	mov    rdi,rax
  417ce1:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417ce6:	test   eax,eax
  417ce8:	je     417cf1 <flatcc_builder_extend_string@@Base+0x69>
  417cea:	mov    eax,0x0
  417cef:	jmp    417d05 <flatcc_builder_extend_string@@Base+0x7d>
  417cf1:	mov    rax,QWORD PTR [rbp-0x10]
  417cf5:	mov    edx,eax
  417cf7:	mov    rax,QWORD PTR [rbp-0x8]
  417cfb:	mov    esi,edx
  417cfd:	mov    rdi,rax
  417d00:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  417d05:	leave  
  417d06:	ret    

0000000000417d07 <flatcc_builder_append_string@@Base>:
  417d07:	endbr64 
  417d0b:	push   rbp
  417d0c:	mov    rbp,rsp
  417d0f:	sub    rsp,0x20
  417d13:	mov    QWORD PTR [rbp-0x8],rdi
  417d17:	mov    QWORD PTR [rbp-0x10],rsi
  417d1b:	mov    QWORD PTR [rbp-0x18],rdx
  417d1f:	mov    rax,QWORD PTR [rbp-0x8]
  417d23:	mov    rax,QWORD PTR [rax+0x30]
  417d27:	movzx  eax,WORD PTR [rax+0xe]
  417d2b:	cmp    ax,0x6
  417d2f:	je     417d50 <flatcc_builder_append_string@@Base+0x49>
  417d31:	lea    rcx,[rip+0xadb8]        # 422af0 <flatcc_builder_padding_base@@Base+0x890>
  417d38:	mov    edx,0x3c6
  417d3d:	lea    rsi,[rip+0xa71c]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417d44:	lea    rdi,[rip+0xa905]        # 422650 <flatcc_builder_padding_base@@Base+0x3f0>
  417d4b:	call   4041f0 <__assert_fail@plt>
  417d50:	mov    rax,QWORD PTR [rbp-0x18]
  417d54:	mov    ecx,eax
  417d56:	mov    rax,QWORD PTR [rbp-0x8]
  417d5a:	mov    edx,0xffffffff
  417d5f:	mov    esi,ecx
  417d61:	mov    rdi,rax
  417d64:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  417d69:	test   eax,eax
  417d6b:	je     417d74 <flatcc_builder_append_string@@Base+0x6d>
  417d6d:	mov    eax,0x0
  417d72:	jmp    417d8d <flatcc_builder_append_string@@Base+0x86>
  417d74:	mov    rax,QWORD PTR [rbp-0x18]
  417d78:	mov    edx,eax
  417d7a:	mov    rcx,QWORD PTR [rbp-0x10]
  417d7e:	mov    rax,QWORD PTR [rbp-0x8]
  417d82:	mov    rsi,rcx
  417d85:	mov    rdi,rax
  417d88:	call   4159cd <flatcc_builder_default_alloc@@Base+0x332>
  417d8d:	leave  
  417d8e:	ret    

0000000000417d8f <flatcc_builder_append_string_str@@Base>:
  417d8f:	endbr64 
  417d93:	push   rbp
  417d94:	mov    rbp,rsp
  417d97:	sub    rsp,0x10
  417d9b:	mov    QWORD PTR [rbp-0x8],rdi
  417d9f:	mov    QWORD PTR [rbp-0x10],rsi
  417da3:	mov    rax,QWORD PTR [rbp-0x10]
  417da7:	mov    rdi,rax
  417daa:	call   4041b0 <strlen@plt>
  417daf:	mov    rdx,rax
  417db2:	mov    rcx,QWORD PTR [rbp-0x10]
  417db6:	mov    rax,QWORD PTR [rbp-0x8]
  417dba:	mov    rsi,rcx
  417dbd:	mov    rdi,rax
  417dc0:	call   417d07 <flatcc_builder_append_string@@Base>
  417dc5:	leave  
  417dc6:	ret    

0000000000417dc7 <flatcc_builder_append_string_strn@@Base>:
  417dc7:	endbr64 
  417dcb:	push   rbp
  417dcc:	mov    rbp,rsp
  417dcf:	sub    rsp,0x20
  417dd3:	mov    QWORD PTR [rbp-0x8],rdi
  417dd7:	mov    QWORD PTR [rbp-0x10],rsi
  417ddb:	mov    QWORD PTR [rbp-0x18],rdx
  417ddf:	mov    rdx,QWORD PTR [rbp-0x18]
  417de3:	mov    rax,QWORD PTR [rbp-0x10]
  417de7:	mov    rsi,rdx
  417dea:	mov    rdi,rax
  417ded:	call   41565b <main@@Base+0x531>
  417df2:	mov    rdx,rax
  417df5:	mov    rcx,QWORD PTR [rbp-0x10]
  417df9:	mov    rax,QWORD PTR [rbp-0x8]
  417dfd:	mov    rsi,rcx
  417e00:	mov    rdi,rax
  417e03:	call   417d07 <flatcc_builder_append_string@@Base>
  417e08:	leave  
  417e09:	ret    

0000000000417e0a <flatcc_builder_truncate_vector@@Base>:
  417e0a:	endbr64 
  417e0e:	push   rbp
  417e0f:	mov    rbp,rsp
  417e12:	sub    rsp,0x10
  417e16:	mov    QWORD PTR [rbp-0x8],rdi
  417e1a:	mov    QWORD PTR [rbp-0x10],rsi
  417e1e:	mov    rax,QWORD PTR [rbp-0x8]
  417e22:	mov    rax,QWORD PTR [rax+0x30]
  417e26:	movzx  eax,WORD PTR [rax+0xe]
  417e2a:	cmp    ax,0x4
  417e2e:	je     417e4f <flatcc_builder_truncate_vector@@Base+0x45>
  417e30:	lea    rcx,[rip+0xacd9]        # 422b10 <flatcc_builder_padding_base@@Base+0x8b0>
  417e37:	mov    edx,0x3d9
  417e3c:	lea    rsi,[rip+0xa61d]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417e43:	lea    rdi,[rip+0xa75e]        # 4225a8 <flatcc_builder_padding_base@@Base+0x348>
  417e4a:	call   4041f0 <__assert_fail@plt>
  417e4f:	mov    rax,QWORD PTR [rbp-0x8]
  417e53:	mov    rax,QWORD PTR [rax+0x30]
  417e57:	mov    eax,DWORD PTR [rax+0x14]
  417e5a:	mov    eax,eax
  417e5c:	cmp    QWORD PTR [rbp-0x10],rax
  417e60:	jbe    417e9b <flatcc_builder_truncate_vector@@Base+0x91>
  417e62:	mov    rax,QWORD PTR [rbp-0x8]
  417e66:	mov    rax,QWORD PTR [rax+0x30]
  417e6a:	mov    eax,DWORD PTR [rax+0x14]
  417e6d:	mov    eax,eax
  417e6f:	cmp    QWORD PTR [rbp-0x10],rax
  417e73:	jbe    417e94 <flatcc_builder_truncate_vector@@Base+0x8a>
  417e75:	lea    rcx,[rip+0xac94]        # 422b10 <flatcc_builder_padding_base@@Base+0x8b0>
  417e7c:	mov    edx,0x3da
  417e81:	lea    rsi,[rip+0xa5d8]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417e88:	lea    rdi,[rip+0xa7f1]        # 422680 <flatcc_builder_padding_base@@Base+0x420>
  417e8f:	call   4041f0 <__assert_fail@plt>
  417e94:	mov    eax,0xffffffff
  417e99:	jmp    417ede <flatcc_builder_truncate_vector@@Base+0xd4>
  417e9b:	mov    rax,QWORD PTR [rbp-0x8]
  417e9f:	mov    rax,QWORD PTR [rax+0x30]
  417ea3:	mov    edx,DWORD PTR [rax+0x14]
  417ea6:	mov    rax,QWORD PTR [rbp-0x10]
  417eaa:	mov    ecx,eax
  417eac:	mov    rax,QWORD PTR [rbp-0x8]
  417eb0:	mov    rax,QWORD PTR [rax+0x30]
  417eb4:	sub    edx,ecx
  417eb6:	mov    DWORD PTR [rax+0x14],edx
  417eb9:	mov    rax,QWORD PTR [rbp-0x8]
  417ebd:	mov    rax,QWORD PTR [rax+0x30]
  417ec1:	mov    eax,DWORD PTR [rax+0x10]
  417ec4:	mov    rdx,QWORD PTR [rbp-0x10]
  417ec8:	imul   edx,eax
  417ecb:	mov    rax,QWORD PTR [rbp-0x8]
  417ecf:	mov    esi,edx
  417ed1:	mov    rdi,rax
  417ed4:	call   415981 <flatcc_builder_default_alloc@@Base+0x2e6>
  417ed9:	mov    eax,0x0
  417ede:	leave  
  417edf:	ret    

0000000000417ee0 <flatcc_builder_truncate_offset_vector@@Base>:
  417ee0:	endbr64 
  417ee4:	push   rbp
  417ee5:	mov    rbp,rsp
  417ee8:	sub    rsp,0x10
  417eec:	mov    QWORD PTR [rbp-0x8],rdi
  417ef0:	mov    QWORD PTR [rbp-0x10],rsi
  417ef4:	mov    rax,QWORD PTR [rbp-0x8]
  417ef8:	mov    rax,QWORD PTR [rax+0x30]
  417efc:	movzx  eax,WORD PTR [rax+0xe]
  417f00:	cmp    ax,0x5
  417f04:	je     417f25 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  417f06:	lea    rcx,[rip+0xac33]        # 422b40 <flatcc_builder_padding_base@@Base+0x8e0>
  417f0d:	mov    edx,0x3e2
  417f12:	lea    rsi,[rip+0xa547]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417f19:	lea    rdi,[rip+0xa6f8]        # 422618 <flatcc_builder_padding_base@@Base+0x3b8>
  417f20:	call   4041f0 <__assert_fail@plt>
  417f25:	mov    rax,QWORD PTR [rbp-0x8]
  417f29:	mov    rax,QWORD PTR [rax+0x30]
  417f2d:	mov    eax,DWORD PTR [rax+0x14]
  417f30:	mov    rdx,QWORD PTR [rbp-0x10]
  417f34:	cmp    eax,edx
  417f36:	jae    417f71 <flatcc_builder_truncate_offset_vector@@Base+0x91>
  417f38:	mov    rax,QWORD PTR [rbp-0x8]
  417f3c:	mov    rax,QWORD PTR [rax+0x30]
  417f40:	mov    eax,DWORD PTR [rax+0x14]
  417f43:	mov    rdx,QWORD PTR [rbp-0x10]
  417f47:	cmp    eax,edx
  417f49:	jae    417f6a <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  417f4b:	lea    rcx,[rip+0xabee]        # 422b40 <flatcc_builder_padding_base@@Base+0x8e0>
  417f52:	mov    edx,0x3e3
  417f57:	lea    rsi,[rip+0xa502]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417f5e:	lea    rdi,[rip+0xa743]        # 4226a8 <flatcc_builder_padding_base@@Base+0x448>
  417f65:	call   4041f0 <__assert_fail@plt>
  417f6a:	mov    eax,0xffffffff
  417f6f:	jmp    417fb4 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  417f71:	mov    rax,QWORD PTR [rbp-0x8]
  417f75:	mov    rax,QWORD PTR [rax+0x30]
  417f79:	mov    edx,DWORD PTR [rax+0x14]
  417f7c:	mov    rax,QWORD PTR [rbp-0x10]
  417f80:	mov    ecx,eax
  417f82:	mov    rax,QWORD PTR [rbp-0x8]
  417f86:	mov    rax,QWORD PTR [rax+0x30]
  417f8a:	sub    edx,ecx
  417f8c:	mov    DWORD PTR [rax+0x14],edx
  417f8f:	mov    rax,QWORD PTR [rbp-0x8]
  417f93:	mov    rax,QWORD PTR [rax+0x30]
  417f97:	mov    eax,DWORD PTR [rax+0x10]
  417f9a:	mov    rdx,QWORD PTR [rbp-0x10]
  417f9e:	imul   edx,eax
  417fa1:	mov    rax,QWORD PTR [rbp-0x8]
  417fa5:	mov    esi,edx
  417fa7:	mov    rdi,rax
  417faa:	call   415981 <flatcc_builder_default_alloc@@Base+0x2e6>
  417faf:	mov    eax,0x0
  417fb4:	leave  
  417fb5:	ret    

0000000000417fb6 <flatcc_builder_truncate_string@@Base>:
  417fb6:	endbr64 
  417fba:	push   rbp
  417fbb:	mov    rbp,rsp
  417fbe:	sub    rsp,0x10
  417fc2:	mov    QWORD PTR [rbp-0x8],rdi
  417fc6:	mov    QWORD PTR [rbp-0x10],rsi
  417fca:	mov    rax,QWORD PTR [rbp-0x8]
  417fce:	mov    rax,QWORD PTR [rax+0x30]
  417fd2:	movzx  eax,WORD PTR [rax+0xe]
  417fd6:	cmp    ax,0x6
  417fda:	je     417ffb <flatcc_builder_truncate_string@@Base+0x45>
  417fdc:	lea    rcx,[rip+0xab8d]        # 422b70 <flatcc_builder_padding_base@@Base+0x910>
  417fe3:	mov    edx,0x3eb
  417fe8:	lea    rsi,[rip+0xa471]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  417fef:	lea    rdi,[rip+0xa65a]        # 422650 <flatcc_builder_padding_base@@Base+0x3f0>
  417ff6:	call   4041f0 <__assert_fail@plt>
  417ffb:	mov    rax,QWORD PTR [rbp-0x8]
  417fff:	mov    rax,QWORD PTR [rax+0x30]
  418003:	mov    eax,DWORD PTR [rax+0x14]
  418006:	mov    eax,eax
  418008:	cmp    QWORD PTR [rbp-0x10],rax
  41800c:	jbe    418047 <flatcc_builder_truncate_string@@Base+0x91>
  41800e:	mov    rax,QWORD PTR [rbp-0x8]
  418012:	mov    rax,QWORD PTR [rax+0x30]
  418016:	mov    eax,DWORD PTR [rax+0x14]
  418019:	mov    eax,eax
  41801b:	cmp    QWORD PTR [rbp-0x10],rax
  41801f:	jbe    418040 <flatcc_builder_truncate_string@@Base+0x8a>
  418021:	lea    rcx,[rip+0xab48]        # 422b70 <flatcc_builder_padding_base@@Base+0x910>
  418028:	mov    edx,0x3ec
  41802d:	lea    rsi,[rip+0xa42c]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418034:	lea    rdi,[rip+0xa6ad]        # 4226e8 <flatcc_builder_padding_base@@Base+0x488>
  41803b:	call   4041f0 <__assert_fail@plt>
  418040:	mov    eax,0xffffffff
  418045:	jmp    41807e <flatcc_builder_truncate_string@@Base+0xc8>
  418047:	mov    rax,QWORD PTR [rbp-0x8]
  41804b:	mov    rax,QWORD PTR [rax+0x30]
  41804f:	mov    edx,DWORD PTR [rax+0x14]
  418052:	mov    rax,QWORD PTR [rbp-0x10]
  418056:	mov    ecx,eax
  418058:	mov    rax,QWORD PTR [rbp-0x8]
  41805c:	mov    rax,QWORD PTR [rax+0x30]
  418060:	sub    edx,ecx
  418062:	mov    DWORD PTR [rax+0x14],edx
  418065:	mov    rax,QWORD PTR [rbp-0x10]
  418069:	mov    edx,eax
  41806b:	mov    rax,QWORD PTR [rbp-0x8]
  41806f:	mov    esi,edx
  418071:	mov    rdi,rax
  418074:	call   415981 <flatcc_builder_default_alloc@@Base+0x2e6>
  418079:	mov    eax,0x0
  41807e:	leave  
  41807f:	ret    

0000000000418080 <flatcc_builder_start_vector@@Base>:
  418080:	endbr64 
  418084:	push   rbp
  418085:	mov    rbp,rsp
  418088:	sub    rsp,0x20
  41808c:	mov    QWORD PTR [rbp-0x8],rdi
  418090:	mov    QWORD PTR [rbp-0x10],rsi
  418094:	mov    eax,edx
  418096:	mov    QWORD PTR [rbp-0x20],rcx
  41809a:	mov    WORD PTR [rbp-0x14],ax
  41809e:	lea    rax,[rbp-0x14]
  4180a2:	mov    esi,0x4
  4180a7:	mov    rdi,rax
  4180aa:	call   416338 <flatcc_builder_clear@@Base+0xca>
  4180af:	movzx  eax,WORD PTR [rbp-0x14]
  4180b3:	movzx  edx,ax
  4180b6:	mov    rax,QWORD PTR [rbp-0x8]
  4180ba:	mov    esi,edx
  4180bc:	mov    rdi,rax
  4180bf:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4180c4:	test   eax,eax
  4180c6:	je     4180cf <flatcc_builder_start_vector@@Base+0x4f>
  4180c8:	mov    eax,0xffffffff
  4180cd:	jmp    418120 <flatcc_builder_start_vector@@Base+0xa0>
  4180cf:	mov    rax,QWORD PTR [rbp-0x8]
  4180d3:	mov    rax,QWORD PTR [rax+0x30]
  4180d7:	mov    rdx,QWORD PTR [rbp-0x10]
  4180db:	mov    DWORD PTR [rax+0x10],edx
  4180de:	mov    rax,QWORD PTR [rbp-0x8]
  4180e2:	mov    rax,QWORD PTR [rax+0x30]
  4180e6:	mov    DWORD PTR [rax+0x14],0x0
  4180ed:	mov    rax,QWORD PTR [rbp-0x8]
  4180f1:	mov    rax,QWORD PTR [rax+0x30]
  4180f5:	mov    rdx,QWORD PTR [rbp-0x20]
  4180f9:	mov    DWORD PTR [rax+0x18],edx
  4180fc:	mov    rax,QWORD PTR [rbp-0x8]
  418100:	mov    rax,QWORD PTR [rax+0x30]
  418104:	mov    WORD PTR [rax+0xe],0x4
  41810a:	mov    rax,QWORD PTR [rbp-0x8]
  41810e:	mov    esi,0xfffffffc
  418113:	mov    rdi,rax
  418116:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  41811b:	mov    eax,0x0
  418120:	leave  
  418121:	ret    

0000000000418122 <flatcc_builder_start_offset_vector@@Base>:
  418122:	endbr64 
  418126:	push   rbp
  418127:	mov    rbp,rsp
  41812a:	sub    rsp,0x10
  41812e:	mov    QWORD PTR [rbp-0x8],rdi
  418132:	mov    rax,QWORD PTR [rbp-0x8]
  418136:	mov    esi,0x4
  41813b:	mov    rdi,rax
  41813e:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  418143:	test   eax,eax
  418145:	je     41814e <flatcc_builder_start_offset_vector@@Base+0x2c>
  418147:	mov    eax,0xffffffff
  41814c:	jmp    418190 <flatcc_builder_start_offset_vector@@Base+0x6e>
  41814e:	mov    rax,QWORD PTR [rbp-0x8]
  418152:	mov    rax,QWORD PTR [rax+0x30]
  418156:	mov    DWORD PTR [rax+0x10],0x4
  41815d:	mov    rax,QWORD PTR [rbp-0x8]
  418161:	mov    rax,QWORD PTR [rax+0x30]
  418165:	mov    DWORD PTR [rax+0x14],0x0
  41816c:	mov    rax,QWORD PTR [rbp-0x8]
  418170:	mov    rax,QWORD PTR [rax+0x30]
  418174:	mov    WORD PTR [rax+0xe],0x5
  41817a:	mov    rax,QWORD PTR [rbp-0x8]
  41817e:	mov    esi,0xfffffffc
  418183:	mov    rdi,rax
  418186:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  41818b:	mov    eax,0x0
  418190:	leave  
  418191:	ret    

0000000000418192 <flatcc_builder_create_offset_vector@@Base>:
  418192:	endbr64 
  418196:	push   rbp
  418197:	mov    rbp,rsp
  41819a:	sub    rsp,0x30
  41819e:	mov    QWORD PTR [rbp-0x18],rdi
  4181a2:	mov    QWORD PTR [rbp-0x20],rsi
  4181a6:	mov    QWORD PTR [rbp-0x28],rdx
  4181aa:	mov    rax,QWORD PTR [rbp-0x18]
  4181ae:	mov    rdi,rax
  4181b1:	call   418122 <flatcc_builder_start_offset_vector@@Base>
  4181b6:	test   eax,eax
  4181b8:	je     4181c1 <flatcc_builder_create_offset_vector@@Base+0x2f>
  4181ba:	mov    eax,0x0
  4181bf:	jmp    418211 <flatcc_builder_create_offset_vector@@Base+0x7f>
  4181c1:	mov    rdx,QWORD PTR [rbp-0x28]
  4181c5:	mov    rax,QWORD PTR [rbp-0x18]
  4181c9:	mov    rsi,rdx
  4181cc:	mov    rdi,rax
  4181cf:	call   417b01 <flatcc_builder_extend_offset_vector@@Base>
  4181d4:	mov    QWORD PTR [rbp-0x8],rax
  4181d8:	cmp    QWORD PTR [rbp-0x8],0x0
  4181dd:	jne    4181e6 <flatcc_builder_create_offset_vector@@Base+0x54>
  4181df:	mov    eax,0x0
  4181e4:	jmp    418211 <flatcc_builder_create_offset_vector@@Base+0x7f>
  4181e6:	mov    rax,QWORD PTR [rbp-0x28]
  4181ea:	lea    rdx,[rax*4+0x0]
  4181f2:	mov    rcx,QWORD PTR [rbp-0x20]
  4181f6:	mov    rax,QWORD PTR [rbp-0x8]
  4181fa:	mov    rsi,rcx
  4181fd:	mov    rdi,rax
  418200:	call   404260 <memcpy@plt>
  418205:	mov    rax,QWORD PTR [rbp-0x18]
  418209:	mov    rdi,rax
  41820c:	call   41971f <flatcc_builder_end_offset_vector@@Base>
  418211:	leave  
  418212:	ret    

0000000000418213 <flatcc_builder_start_string@@Base>:
  418213:	endbr64 
  418217:	push   rbp
  418218:	mov    rbp,rsp
  41821b:	sub    rsp,0x10
  41821f:	mov    QWORD PTR [rbp-0x8],rdi
  418223:	mov    rax,QWORD PTR [rbp-0x8]
  418227:	mov    esi,0x1
  41822c:	mov    rdi,rax
  41822f:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  418234:	test   eax,eax
  418236:	je     41823f <flatcc_builder_start_string@@Base+0x2c>
  418238:	mov    eax,0xffffffff
  41823d:	jmp    418281 <flatcc_builder_start_string@@Base+0x6e>
  41823f:	mov    rax,QWORD PTR [rbp-0x8]
  418243:	mov    rax,QWORD PTR [rax+0x30]
  418247:	mov    DWORD PTR [rax+0x10],0x1
  41824e:	mov    rax,QWORD PTR [rbp-0x8]
  418252:	mov    rax,QWORD PTR [rax+0x30]
  418256:	mov    DWORD PTR [rax+0x14],0x0
  41825d:	mov    rax,QWORD PTR [rbp-0x8]
  418261:	mov    rax,QWORD PTR [rax+0x30]
  418265:	mov    WORD PTR [rax+0xe],0x6
  41826b:	mov    rax,QWORD PTR [rbp-0x8]
  41826f:	mov    esi,0xfffffffc
  418274:	mov    rdi,rax
  418277:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  41827c:	mov    eax,0x0
  418281:	leave  
  418282:	ret    

0000000000418283 <flatcc_builder_reserve_table@@Base>:
  418283:	endbr64 
  418287:	push   rbp
  418288:	mov    rbp,rsp
  41828b:	sub    rsp,0x10
  41828f:	mov    QWORD PTR [rbp-0x8],rdi
  418293:	mov    DWORD PTR [rbp-0xc],esi
  418296:	cmp    DWORD PTR [rbp-0xc],0x0
  41829a:	jns    4182bb <flatcc_builder_reserve_table@@Base+0x38>
  41829c:	lea    rcx,[rip+0xa8ed]        # 422b90 <flatcc_builder_padding_base@@Base+0x930>
  4182a3:	mov    edx,0x429
  4182a8:	lea    rsi,[rip+0xa1b1]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4182af:	lea    rdi,[rip+0xa454]        # 42270a <flatcc_builder_padding_base@@Base+0x4aa>
  4182b6:	call   4041f0 <__assert_fail@plt>
  4182bb:	mov    edx,DWORD PTR [rbp-0xc]
  4182be:	mov    rax,QWORD PTR [rbp-0x8]
  4182c2:	mov    esi,edx
  4182c4:	mov    rdi,rax
  4182c7:	call   415c62 <flatcc_builder_default_alloc@@Base+0x5c7>
  4182cc:	leave  
  4182cd:	ret    

00000000004182ce <flatcc_builder_start_table@@Base>:
  4182ce:	endbr64 
  4182d2:	push   rbp
  4182d3:	mov    rbp,rsp
  4182d6:	sub    rsp,0x10
  4182da:	mov    QWORD PTR [rbp-0x8],rdi
  4182de:	mov    DWORD PTR [rbp-0xc],esi
  4182e1:	mov    rax,QWORD PTR [rbp-0x8]
  4182e5:	mov    esi,0x4
  4182ea:	mov    rdi,rax
  4182ed:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4182f2:	test   eax,eax
  4182f4:	je     418300 <flatcc_builder_start_table@@Base+0x32>
  4182f6:	mov    eax,0xffffffff
  4182fb:	jmp    4183ca <flatcc_builder_start_table@@Base+0xfc>
  418300:	mov    rax,QWORD PTR [rbp-0x8]
  418304:	mov    rax,QWORD PTR [rax+0x8]
  418308:	mov    rdx,rax
  41830b:	mov    rax,QWORD PTR [rbp-0x8]
  41830f:	mov    rax,QWORD PTR [rax+0x58]
  418313:	sub    rdx,rax
  418316:	mov    rax,QWORD PTR [rbp-0x8]
  41831a:	mov    rax,QWORD PTR [rax+0x30]
  41831e:	mov    DWORD PTR [rax+0x10],edx
  418321:	mov    rax,QWORD PTR [rbp-0x8]
  418325:	mov    rax,QWORD PTR [rax]
  418328:	mov    rdx,rax
  41832b:	mov    rax,QWORD PTR [rbp-0x8]
  41832f:	mov    rax,QWORD PTR [rax+0x88]
  418336:	sub    rdx,rax
  418339:	mov    rax,QWORD PTR [rbp-0x8]
  41833d:	mov    rax,QWORD PTR [rax+0x30]
  418341:	mov    DWORD PTR [rax+0x14],edx
  418344:	mov    rax,QWORD PTR [rbp-0x8]
  418348:	mov    rax,QWORD PTR [rax+0x30]
  41834c:	mov    rdx,QWORD PTR [rbp-0x8]
  418350:	mov    edx,DWORD PTR [rdx+0x14]
  418353:	mov    DWORD PTR [rax+0x18],edx
  418356:	mov    rax,QWORD PTR [rbp-0x8]
  41835a:	mov    rdx,QWORD PTR [rax+0x30]
  41835e:	mov    rax,QWORD PTR [rbp-0x8]
  418362:	movzx  eax,WORD PTR [rax+0x10]
  418366:	mov    WORD PTR [rdx+0x1c],ax
  41836a:	mov    rax,QWORD PTR [rbp-0x8]
  41836e:	mov    DWORD PTR [rax+0x14],0x0
  418375:	mov    rax,QWORD PTR [rbp-0x8]
  418379:	mov    DWORD PTR [rax+0x14],0x2f693b52
  418380:	mov    rax,QWORD PTR [rbp-0x8]
  418384:	mov    WORD PTR [rax+0x10],0x0
  41838a:	mov    rax,QWORD PTR [rbp-0x8]
  41838e:	mov    rax,QWORD PTR [rax+0x30]
  418392:	mov    WORD PTR [rax+0xe],0x3
  418398:	mov    edx,DWORD PTR [rbp-0xc]
  41839b:	mov    rax,QWORD PTR [rbp-0x8]
  41839f:	mov    esi,edx
  4183a1:	mov    rdi,rax
  4183a4:	call   415c62 <flatcc_builder_default_alloc@@Base+0x5c7>
  4183a9:	test   eax,eax
  4183ab:	je     4183b4 <flatcc_builder_start_table@@Base+0xe6>
  4183ad:	mov    eax,0xffffffff
  4183b2:	jmp    4183ca <flatcc_builder_start_table@@Base+0xfc>
  4183b4:	mov    rax,QWORD PTR [rbp-0x8]
  4183b8:	mov    esi,0xfffc
  4183bd:	mov    rdi,rax
  4183c0:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  4183c5:	mov    eax,0x0
  4183ca:	leave  
  4183cb:	ret    

00000000004183cc <flatcc_builder_create_vtable@@Base>:
  4183cc:	endbr64 
  4183d0:	push   rbp
  4183d1:	mov    rbp,rsp
  4183d4:	sub    rsp,0xd0
  4183db:	mov    QWORD PTR [rbp-0xb8],rdi
  4183e2:	mov    QWORD PTR [rbp-0xc0],rsi
  4183e9:	mov    eax,edx
  4183eb:	mov    WORD PTR [rbp-0xc4],ax
  4183f2:	mov    rax,QWORD PTR fs:0x28
  4183fb:	mov    QWORD PTR [rbp-0x8],rax
  4183ff:	xor    eax,eax
  418401:	mov    QWORD PTR [rbp-0xa0],0x0
  41840c:	mov    DWORD PTR [rbp-0x98],0x0
  418416:	cmp    WORD PTR [rbp-0xc4],0x0
  41841e:	je     418487 <flatcc_builder_create_vtable@@Base+0xbb>
  418420:	mov    rdx,QWORD PTR [rbp-0xa0]
  418427:	movzx  eax,WORD PTR [rbp-0xc4]
  41842e:	add    rax,rdx
  418431:	mov    QWORD PTR [rbp-0xa0],rax
  418438:	mov    eax,DWORD PTR [rbp-0x98]
  41843e:	cdqe   
  418440:	shl    rax,0x4
  418444:	add    rax,rbp
  418447:	lea    rdx,[rax-0x90]
  41844e:	mov    rax,QWORD PTR [rbp-0xc0]
  418455:	mov    QWORD PTR [rdx],rax
  418458:	mov    edx,DWORD PTR [rbp-0x98]
  41845e:	movzx  eax,WORD PTR [rbp-0xc4]
  418465:	movsxd rdx,edx
  418468:	shl    rdx,0x4
  41846c:	add    rdx,rbp
  41846f:	sub    rdx,0x88
  418476:	mov    QWORD PTR [rdx],rax
  418479:	mov    eax,DWORD PTR [rbp-0x98]
  41847f:	inc    eax
  418481:	mov    DWORD PTR [rbp-0x98],eax
  418487:	mov    rax,QWORD PTR [rbp-0xb8]
  41848e:	mov    eax,DWORD PTR [rax+0x100]
  418494:	test   eax,eax
  418496:	jne    4184d8 <flatcc_builder_create_vtable@@Base+0x10c>
  418498:	mov    rax,QWORD PTR [rbp-0xb8]
  41849f:	mov    eax,DWORD PTR [rax+0x124]
  4184a5:	test   eax,eax
  4184a7:	jne    4184d8 <flatcc_builder_create_vtable@@Base+0x10c>
  4184a9:	lea    rdx,[rbp-0xa0]
  4184b0:	mov    rax,QWORD PTR [rbp-0xb8]
  4184b7:	mov    rsi,rdx
  4184ba:	mov    rdi,rax
  4184bd:	call   416a03 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  4184c2:	mov    DWORD PTR [rbp-0xa4],eax
  4184c8:	cmp    DWORD PTR [rbp-0xa4],0x0
  4184cf:	jne    41850d <flatcc_builder_create_vtable@@Base+0x141>
  4184d1:	mov    eax,0x0
  4184d6:	jmp    418513 <flatcc_builder_create_vtable@@Base+0x147>
  4184d8:	lea    rdx,[rbp-0xa0]
  4184df:	mov    rax,QWORD PTR [rbp-0xb8]
  4184e6:	mov    rsi,rdx
  4184e9:	mov    rdi,rax
  4184ec:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4184f1:	mov    DWORD PTR [rbp-0xa4],eax
  4184f7:	cmp    DWORD PTR [rbp-0xa4],0x0
  4184fe:	jne    418507 <flatcc_builder_create_vtable@@Base+0x13b>
  418500:	mov    eax,0x0
  418505:	jmp    418513 <flatcc_builder_create_vtable@@Base+0x147>
  418507:	inc    DWORD PTR [rbp-0xa4]
  41850d:	mov    eax,DWORD PTR [rbp-0xa4]
  418513:	mov    rcx,QWORD PTR [rbp-0x8]
  418517:	xor    rcx,QWORD PTR fs:0x28
  418520:	je     418527 <flatcc_builder_create_vtable@@Base+0x15b>
  418522:	call   4041c0 <__stack_chk_fail@plt>
  418527:	leave  
  418528:	ret    

0000000000418529 <flatcc_builder_create_cached_vtable@@Base>:
  418529:	endbr64 
  41852d:	push   rbp
  41852e:	mov    rbp,rsp
  418531:	sub    rsp,0x50
  418535:	mov    QWORD PTR [rbp-0x38],rdi
  418539:	mov    QWORD PTR [rbp-0x40],rsi
  41853d:	mov    eax,edx
  41853f:	mov    DWORD PTR [rbp-0x48],ecx
  418542:	mov    WORD PTR [rbp-0x44],ax
  418546:	mov    edx,DWORD PTR [rbp-0x48]
  418549:	mov    rax,QWORD PTR [rbp-0x38]
  41854d:	mov    esi,edx
  41854f:	mov    rdi,rax
  418552:	call   415e71 <flatcc_builder_default_alloc@@Base+0x7d6>
  418557:	mov    QWORD PTR [rbp-0x18],rax
  41855b:	cmp    QWORD PTR [rbp-0x18],0x0
  418560:	jne    41856c <flatcc_builder_create_cached_vtable@@Base+0x43>
  418562:	mov    eax,0x0
  418567:	jmp    41880d <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41856c:	mov    rax,QWORD PTR [rbp-0x18]
  418570:	mov    QWORD PTR [rbp-0x20],rax
  418574:	mov    rax,QWORD PTR [rbp-0x20]
  418578:	mov    eax,DWORD PTR [rax]
  41857a:	mov    DWORD PTR [rbp-0x2c],eax
  41857d:	mov    QWORD PTR [rbp-0x28],0x0
  418585:	jmp    418664 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41858a:	mov    rax,QWORD PTR [rbp-0x38]
  41858e:	mov    rdx,QWORD PTR [rax+0xb8]
  418595:	mov    eax,DWORD PTR [rbp-0x2c]
  418598:	add    rax,rdx
  41859b:	mov    QWORD PTR [rbp-0x10],rax
  41859f:	mov    rax,QWORD PTR [rbp-0x38]
  4185a3:	mov    rdx,QWORD PTR [rax+0x78]
  4185a7:	mov    rax,QWORD PTR [rbp-0x10]
  4185ab:	mov    eax,DWORD PTR [rax+0x8]
  4185ae:	mov    eax,eax
  4185b0:	add    rax,rdx
  4185b3:	mov    QWORD PTR [rbp-0x8],rax
  4185b7:	mov    rax,QWORD PTR [rbp-0x8]
  4185bb:	movzx  eax,WORD PTR [rax]
  4185be:	cmp    WORD PTR [rbp-0x44],ax
  4185c2:	jne    4185df <flatcc_builder_create_cached_vtable@@Base+0xb6>
  4185c4:	movzx  edx,WORD PTR [rbp-0x44]
  4185c8:	mov    rcx,QWORD PTR [rbp-0x8]
  4185cc:	mov    rax,QWORD PTR [rbp-0x40]
  4185d0:	mov    rsi,rcx
  4185d3:	mov    rdi,rax
  4185d6:	call   404230 <memcmp@plt>
  4185db:	test   eax,eax
  4185dd:	je     4185f7 <flatcc_builder_create_cached_vtable@@Base+0xce>
  4185df:	mov    rax,QWORD PTR [rbp-0x10]
  4185e3:	add    rax,0xc
  4185e7:	mov    QWORD PTR [rbp-0x20],rax
  4185eb:	mov    rax,QWORD PTR [rbp-0x10]
  4185ef:	mov    eax,DWORD PTR [rax+0xc]
  4185f2:	mov    DWORD PTR [rbp-0x2c],eax
  4185f5:	jmp    418664 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4185f7:	mov    rax,QWORD PTR [rbp-0x10]
  4185fb:	mov    edx,DWORD PTR [rax+0x4]
  4185fe:	mov    rax,QWORD PTR [rbp-0x38]
  418602:	mov    eax,DWORD PTR [rax+0x100]
  418608:	cmp    edx,eax
  41860a:	je     41862c <flatcc_builder_create_cached_vtable@@Base+0x103>
  41860c:	mov    rax,QWORD PTR [rbp-0x10]
  418610:	mov    QWORD PTR [rbp-0x28],rax
  418614:	mov    rax,QWORD PTR [rbp-0x10]
  418618:	add    rax,0xc
  41861c:	mov    QWORD PTR [rbp-0x20],rax
  418620:	mov    rax,QWORD PTR [rbp-0x10]
  418624:	mov    eax,DWORD PTR [rax+0xc]
  418627:	mov    DWORD PTR [rbp-0x2c],eax
  41862a:	jmp    418664 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41862c:	mov    rax,QWORD PTR [rbp-0x20]
  418630:	cmp    rax,QWORD PTR [rbp-0x18]
  418634:	je     418659 <flatcc_builder_create_cached_vtable@@Base+0x130>
  418636:	mov    rax,QWORD PTR [rbp-0x10]
  41863a:	mov    edx,DWORD PTR [rax+0xc]
  41863d:	mov    rax,QWORD PTR [rbp-0x20]
  418641:	mov    DWORD PTR [rax],edx
  418643:	mov    rax,QWORD PTR [rbp-0x18]
  418647:	mov    edx,DWORD PTR [rax]
  418649:	mov    rax,QWORD PTR [rbp-0x10]
  41864d:	mov    DWORD PTR [rax+0xc],edx
  418650:	mov    rax,QWORD PTR [rbp-0x18]
  418654:	mov    edx,DWORD PTR [rbp-0x2c]
  418657:	mov    DWORD PTR [rax],edx
  418659:	mov    rax,QWORD PTR [rbp-0x10]
  41865d:	mov    eax,DWORD PTR [rax]
  41865f:	jmp    41880d <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  418664:	cmp    DWORD PTR [rbp-0x2c],0x0
  418668:	jne    41858a <flatcc_builder_create_cached_vtable@@Base+0x61>
  41866e:	mov    rax,QWORD PTR [rbp-0x38]
  418672:	mov    eax,DWORD PTR [rax+0xe4]
  418678:	mov    edx,eax
  41867a:	mov    rax,QWORD PTR [rbp-0x38]
  41867e:	mov    r8d,0x0
  418684:	mov    ecx,0x10
  418689:	mov    esi,0x6
  41868e:	mov    rdi,rax
  418691:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  418696:	mov    QWORD PTR [rbp-0x10],rax
  41869a:	cmp    QWORD PTR [rbp-0x10],0x0
  41869f:	jne    4186ab <flatcc_builder_create_cached_vtable@@Base+0x182>
  4186a1:	mov    eax,0x0
  4186a6:	jmp    41880d <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4186ab:	mov    rax,QWORD PTR [rbp-0x38]
  4186af:	mov    eax,DWORD PTR [rax+0xe4]
  4186b5:	mov    DWORD PTR [rbp-0x2c],eax
  4186b8:	mov    rax,QWORD PTR [rbp-0x38]
  4186bc:	mov    eax,DWORD PTR [rax+0xe4]
  4186c2:	lea    edx,[rax+0x10]
  4186c5:	mov    rax,QWORD PTR [rbp-0x38]
  4186c9:	mov    DWORD PTR [rax+0xe4],edx
  4186cf:	mov    rax,QWORD PTR [rbp-0x38]
  4186d3:	mov    edx,DWORD PTR [rax+0x100]
  4186d9:	mov    rax,QWORD PTR [rbp-0x10]
  4186dd:	mov    DWORD PTR [rax+0x4],edx
  4186e0:	mov    rax,QWORD PTR [rbp-0x18]
  4186e4:	mov    edx,DWORD PTR [rax]
  4186e6:	mov    rax,QWORD PTR [rbp-0x10]
  4186ea:	mov    DWORD PTR [rax+0xc],edx
  4186ed:	mov    rax,QWORD PTR [rbp-0x18]
  4186f1:	mov    edx,DWORD PTR [rbp-0x2c]
  4186f4:	mov    DWORD PTR [rax],edx
  4186f6:	movzx  edx,WORD PTR [rbp-0x44]
  4186fa:	mov    rcx,QWORD PTR [rbp-0x40]
  4186fe:	mov    rax,QWORD PTR [rbp-0x38]
  418702:	mov    rsi,rcx
  418705:	mov    rdi,rax
  418708:	call   4183cc <flatcc_builder_create_vtable@@Base>
  41870d:	mov    edx,eax
  41870f:	mov    rax,QWORD PTR [rbp-0x10]
  418713:	mov    DWORD PTR [rax],edx
  418715:	mov    rax,QWORD PTR [rbp-0x10]
  418719:	mov    eax,DWORD PTR [rax]
  41871b:	test   eax,eax
  41871d:	jne    418729 <flatcc_builder_create_cached_vtable@@Base+0x200>
  41871f:	mov    eax,0x0
  418724:	jmp    41880d <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  418729:	cmp    QWORD PTR [rbp-0x28],0x0
  41872e:	je     418743 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  418730:	mov    rax,QWORD PTR [rbp-0x28]
  418734:	mov    edx,DWORD PTR [rax+0x8]
  418737:	mov    rax,QWORD PTR [rbp-0x10]
  41873b:	mov    DWORD PTR [rax+0x8],edx
  41873e:	jmp    418807 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  418743:	mov    rax,QWORD PTR [rbp-0x38]
  418747:	mov    rax,QWORD PTR [rax+0x118]
  41874e:	test   rax,rax
  418751:	je     418786 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  418753:	mov    rax,QWORD PTR [rbp-0x38]
  418757:	mov    rdx,QWORD PTR [rax+0x118]
  41875e:	mov    rax,QWORD PTR [rbp-0x38]
  418762:	mov    ecx,DWORD PTR [rax+0xe0]
  418768:	movzx  eax,WORD PTR [rbp-0x44]
  41876c:	add    eax,ecx
  41876e:	mov    eax,eax
  418770:	cmp    rdx,rax
  418773:	jae    418786 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  418775:	mov    rax,QWORD PTR [rbp-0x38]
  418779:	mov    rdi,rax
  41877c:	call   415ee5 <flatcc_builder_flush_vtable_cache@@Base>
  418781:	jmp    418807 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  418786:	movzx  edx,WORD PTR [rbp-0x44]
  41878a:	mov    rax,QWORD PTR [rbp-0x38]
  41878e:	mov    eax,DWORD PTR [rax+0xe0]
  418794:	mov    esi,eax
  418796:	mov    rax,QWORD PTR [rbp-0x38]
  41879a:	mov    r8d,0x0
  4187a0:	mov    rcx,rdx
  4187a3:	mov    rdx,rsi
  4187a6:	mov    esi,0x2
  4187ab:	mov    rdi,rax
  4187ae:	call   415bb1 <flatcc_builder_default_alloc@@Base+0x516>
  4187b3:	mov    QWORD PTR [rbp-0x8],rax
  4187b7:	cmp    QWORD PTR [rbp-0x8],0x0
  4187bc:	jne    4187c5 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  4187be:	mov    eax,0xffffffff
  4187c3:	jmp    41880d <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4187c5:	mov    rax,QWORD PTR [rbp-0x38]
  4187c9:	mov    edx,DWORD PTR [rax+0xe0]
  4187cf:	mov    rax,QWORD PTR [rbp-0x10]
  4187d3:	mov    DWORD PTR [rax+0x8],edx
  4187d6:	mov    rax,QWORD PTR [rbp-0x38]
  4187da:	mov    edx,DWORD PTR [rax+0xe0]
  4187e0:	movzx  eax,WORD PTR [rbp-0x44]
  4187e4:	add    edx,eax
  4187e6:	mov    rax,QWORD PTR [rbp-0x38]
  4187ea:	mov    DWORD PTR [rax+0xe0],edx
  4187f0:	movzx  edx,WORD PTR [rbp-0x44]
  4187f4:	mov    rcx,QWORD PTR [rbp-0x40]
  4187f8:	mov    rax,QWORD PTR [rbp-0x8]
  4187fc:	mov    rsi,rcx
  4187ff:	mov    rdi,rax
  418802:	call   404260 <memcpy@plt>
  418807:	mov    rax,QWORD PTR [rbp-0x10]
  41880b:	mov    eax,DWORD PTR [rax]
  41880d:	leave  
  41880e:	ret    

000000000041880f <flatcc_builder_create_table@@Base>:
  41880f:	endbr64 
  418813:	push   rbp
  418814:	mov    rbp,rsp
  418817:	sub    rsp,0x100
  41881e:	mov    QWORD PTR [rbp-0xd8],rdi
  418825:	mov    QWORD PTR [rbp-0xe0],rsi
  41882c:	mov    QWORD PTR [rbp-0xe8],rdx
  418833:	mov    eax,ecx
  418835:	mov    QWORD PTR [rbp-0xf8],r8
  41883c:	mov    DWORD PTR [rbp-0xf0],r9d
  418843:	mov    WORD PTR [rbp-0xec],ax
  41884a:	mov    rax,QWORD PTR fs:0x28
  418853:	mov    QWORD PTR [rbp-0x8],rax
  418857:	xor    eax,eax
  418859:	cmp    DWORD PTR [rbp-0xf0],0x0
  418860:	jns    418881 <flatcc_builder_create_table@@Base+0x72>
  418862:	lea    rcx,[rip+0xa347]        # 422bb0 <flatcc_builder_padding_base@@Base+0x950>
  418869:	mov    edx,0x4d5
  41886e:	lea    rsi,[rip+0x9beb]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418875:	lea    rdi,[rip+0x9e99]        # 422715 <flatcc_builder_padding_base@@Base+0x4b5>
  41887c:	call   4041f0 <__assert_fail@plt>
  418881:	mov    eax,DWORD PTR [rbp+0x10]
  418884:	and    eax,0x1
  418887:	test   eax,eax
  418889:	jne    4188aa <flatcc_builder_create_table@@Base+0x9b>
  41888b:	lea    rcx,[rip+0xa31e]        # 422bb0 <flatcc_builder_padding_base@@Base+0x950>
  418892:	mov    edx,0x4db
  418897:	lea    rsi,[rip+0x9bc2]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41889e:	lea    rdi,[rip+0x9e82]        # 422727 <flatcc_builder_padding_base@@Base+0x4c7>
  4188a5:	call   4041f0 <__assert_fail@plt>
  4188aa:	lea    rax,[rbp-0xec]
  4188b1:	mov    esi,0x4
  4188b6:	mov    rdi,rax
  4188b9:	call   416338 <flatcc_builder_clear@@Base+0xca>
  4188be:	movzx  eax,WORD PTR [rbp-0xec]
  4188c5:	movzx  edx,ax
  4188c8:	mov    rax,QWORD PTR [rbp-0xd8]
  4188cf:	mov    esi,edx
  4188d1:	mov    rdi,rax
  4188d4:	call   416307 <flatcc_builder_clear@@Base+0x99>
  4188d9:	movzx  eax,WORD PTR [rbp-0xec]
  4188e0:	movzx  edx,ax
  4188e3:	mov    rax,QWORD PTR [rbp-0xe8]
  4188ea:	mov    ecx,eax
  4188ec:	mov    rax,QWORD PTR [rbp-0xd8]
  4188f3:	mov    esi,ecx
  4188f5:	mov    rdi,rax
  4188f8:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4188fd:	mov    DWORD PTR [rbp-0xbc],eax
  418903:	mov    rax,QWORD PTR [rbp-0xd8]
  41890a:	mov    eax,DWORD PTR [rax+0xf0]
  418910:	mov    edx,eax
  418912:	mov    rax,QWORD PTR [rbp-0xe8]
  418919:	mov    ecx,eax
  41891b:	mov    eax,DWORD PTR [rbp-0xbc]
  418921:	add    eax,ecx
  418923:	sub    edx,eax
  418925:	mov    eax,edx
  418927:	sub    eax,0x4
  41892a:	mov    DWORD PTR [rbp-0xb8],eax
  418930:	mov    eax,DWORD PTR [rbp+0x10]
  418933:	dec    eax
  418935:	mov    DWORD PTR [rbp-0xb4],eax
  41893b:	mov    eax,DWORD PTR [rbp-0xb8]
  418941:	sub    eax,DWORD PTR [rbp-0xb4]
  418947:	mov    DWORD PTR [rbp-0xb0],eax
  41894d:	mov    eax,DWORD PTR [rbp-0xb8]
  418953:	sub    eax,DWORD PTR [rbp-0xb0]
  418959:	cmp    DWORD PTR [rbp-0xb4],eax
  41895f:	je     41896b <flatcc_builder_create_table@@Base+0x15c>
  418961:	mov    eax,0xffffffff
  418966:	jmp    418b8b <flatcc_builder_create_table@@Base+0x37c>
  41896b:	mov    eax,DWORD PTR [rbp-0xb0]
  418971:	mov    edi,eax
  418973:	call   4155db <main@@Base+0x4b1>
  418978:	mov    DWORD PTR [rbp-0xc4],eax
  41897e:	mov    DWORD PTR [rbp-0xc0],0x0
  418988:	jmp    418a12 <flatcc_builder_create_table@@Base+0x203>
  41898d:	mov    eax,DWORD PTR [rbp-0xc0]
  418993:	cdqe   
  418995:	lea    rdx,[rax+rax*1]
  418999:	mov    rax,QWORD PTR [rbp-0xf8]
  4189a0:	add    rax,rdx
  4189a3:	movzx  eax,WORD PTR [rax]
  4189a6:	movzx  edx,ax
  4189a9:	mov    rax,QWORD PTR [rbp-0xe0]
  4189b0:	add    rax,rdx
  4189b3:	mov    QWORD PTR [rbp-0xa8],rax
  4189ba:	mov    rax,QWORD PTR [rbp-0xa8]
  4189c1:	mov    eax,DWORD PTR [rax]
  4189c3:	sub    eax,DWORD PTR [rbp-0xb8]
  4189c9:	mov    edx,eax
  4189cb:	mov    eax,DWORD PTR [rbp-0xc0]
  4189d1:	cdqe   
  4189d3:	lea    rcx,[rax+rax*1]
  4189d7:	mov    rax,QWORD PTR [rbp-0xf8]
  4189de:	add    rax,rcx
  4189e1:	movzx  eax,WORD PTR [rax]
  4189e4:	movzx  eax,ax
  4189e7:	sub    edx,eax
  4189e9:	mov    eax,edx
  4189eb:	sub    eax,0x4
  4189ee:	mov    DWORD PTR [rbp-0xac],eax
  4189f4:	mov    eax,DWORD PTR [rbp-0xac]
  4189fa:	mov    edi,eax
  4189fc:	call   4155db <main@@Base+0x4b1>
  418a01:	mov    edx,eax
  418a03:	mov    rax,QWORD PTR [rbp-0xa8]
  418a0a:	mov    DWORD PTR [rax],edx
  418a0c:	inc    DWORD PTR [rbp-0xc0]
  418a12:	mov    eax,DWORD PTR [rbp-0xc0]
  418a18:	cmp    eax,DWORD PTR [rbp-0xf0]
  418a1e:	jl     41898d <flatcc_builder_create_table@@Base+0x17e>
  418a24:	mov    QWORD PTR [rbp-0xa0],0x0
  418a2f:	mov    DWORD PTR [rbp-0x98],0x0
  418a39:	mov    rax,QWORD PTR [rbp-0xa0]
  418a40:	add    rax,0x4
  418a44:	mov    QWORD PTR [rbp-0xa0],rax
  418a4b:	mov    eax,DWORD PTR [rbp-0x98]
  418a51:	cdqe   
  418a53:	shl    rax,0x4
  418a57:	add    rax,rbp
  418a5a:	lea    rdx,[rax-0x90]
  418a61:	lea    rax,[rbp-0xc4]
  418a68:	mov    QWORD PTR [rdx],rax
  418a6b:	mov    eax,DWORD PTR [rbp-0x98]
  418a71:	cdqe   
  418a73:	shl    rax,0x4
  418a77:	add    rax,rbp
  418a7a:	sub    rax,0x88
  418a80:	mov    QWORD PTR [rax],0x4
  418a87:	mov    eax,DWORD PTR [rbp-0x98]
  418a8d:	inc    eax
  418a8f:	mov    DWORD PTR [rbp-0x98],eax
  418a95:	cmp    QWORD PTR [rbp-0xe8],0x0
  418a9d:	je     418b05 <flatcc_builder_create_table@@Base+0x2f6>
  418a9f:	mov    rdx,QWORD PTR [rbp-0xa0]
  418aa6:	mov    rax,QWORD PTR [rbp-0xe8]
  418aad:	add    rax,rdx
  418ab0:	mov    QWORD PTR [rbp-0xa0],rax
  418ab7:	mov    eax,DWORD PTR [rbp-0x98]
  418abd:	cdqe   
  418abf:	shl    rax,0x4
  418ac3:	add    rax,rbp
  418ac6:	lea    rdx,[rax-0x90]
  418acd:	mov    rax,QWORD PTR [rbp-0xe0]
  418ad4:	mov    QWORD PTR [rdx],rax
  418ad7:	mov    eax,DWORD PTR [rbp-0x98]
  418add:	cdqe   
  418adf:	shl    rax,0x4
  418ae3:	add    rax,rbp
  418ae6:	lea    rdx,[rax-0x88]
  418aed:	mov    rax,QWORD PTR [rbp-0xe8]
  418af4:	mov    QWORD PTR [rdx],rax
  418af7:	mov    eax,DWORD PTR [rbp-0x98]
  418afd:	inc    eax
  418aff:	mov    DWORD PTR [rbp-0x98],eax
  418b05:	cmp    DWORD PTR [rbp-0xbc],0x0
  418b0c:	je     418b72 <flatcc_builder_create_table@@Base+0x363>
  418b0e:	mov    rdx,QWORD PTR [rbp-0xa0]
  418b15:	mov    eax,DWORD PTR [rbp-0xbc]
  418b1b:	add    rax,rdx
  418b1e:	mov    QWORD PTR [rbp-0xa0],rax
  418b25:	mov    eax,DWORD PTR [rbp-0x98]
  418b2b:	cdqe   
  418b2d:	shl    rax,0x4
  418b31:	add    rax,rbp
  418b34:	sub    rax,0x90
  418b3a:	mov    rdx,0x422260
  418b41:	mov    QWORD PTR [rax],rdx
  418b44:	mov    edx,DWORD PTR [rbp-0x98]
  418b4a:	mov    eax,DWORD PTR [rbp-0xbc]
  418b50:	movsxd rdx,edx
  418b53:	shl    rdx,0x4
  418b57:	add    rdx,rbp
  418b5a:	sub    rdx,0x88
  418b61:	mov    QWORD PTR [rdx],rax
  418b64:	mov    eax,DWORD PTR [rbp-0x98]
  418b6a:	inc    eax
  418b6c:	mov    DWORD PTR [rbp-0x98],eax
  418b72:	lea    rdx,[rbp-0xa0]
  418b79:	mov    rax,QWORD PTR [rbp-0xd8]
  418b80:	mov    rsi,rdx
  418b83:	mov    rdi,rax
  418b86:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  418b8b:	mov    rsi,QWORD PTR [rbp-0x8]
  418b8f:	xor    rsi,QWORD PTR fs:0x28
  418b98:	je     418b9f <flatcc_builder_create_table@@Base+0x390>
  418b9a:	call   4041c0 <__stack_chk_fail@plt>
  418b9f:	leave  
  418ba0:	ret    

0000000000418ba1 <flatcc_builder_check_required_field@@Base>:
  418ba1:	endbr64 
  418ba5:	push   rbp
  418ba6:	mov    rbp,rsp
  418ba9:	sub    rsp,0x10
  418bad:	mov    QWORD PTR [rbp-0x8],rdi
  418bb1:	mov    eax,esi
  418bb3:	mov    WORD PTR [rbp-0xc],ax
  418bb7:	mov    rax,QWORD PTR [rbp-0x8]
  418bbb:	mov    rax,QWORD PTR [rax+0x30]
  418bbf:	movzx  eax,WORD PTR [rax+0xe]
  418bc3:	cmp    ax,0x3
  418bc7:	je     418be8 <flatcc_builder_check_required_field@@Base+0x47>
  418bc9:	lea    rcx,[rip+0xa010]        # 422be0 <flatcc_builder_padding_base@@Base+0x980>
  418bd0:	mov    edx,0x4f8
  418bd5:	lea    rsi,[rip+0x9884]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418bdc:	lea    rdi,[rip+0x9b55]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  418be3:	call   4041f0 <__assert_fail@plt>
  418be8:	mov    rax,QWORD PTR [rbp-0x8]
  418bec:	movzx  eax,WORD PTR [rax+0x10]
  418bf0:	cmp    WORD PTR [rbp-0xc],ax
  418bf4:	jae    418c17 <flatcc_builder_check_required_field@@Base+0x76>
  418bf6:	mov    rax,QWORD PTR [rbp-0x8]
  418bfa:	mov    rax,QWORD PTR [rax+0x8]
  418bfe:	movzx  edx,WORD PTR [rbp-0xc]
  418c02:	add    rdx,rdx
  418c05:	add    rax,rdx
  418c08:	movzx  eax,WORD PTR [rax]
  418c0b:	test   ax,ax
  418c0e:	je     418c17 <flatcc_builder_check_required_field@@Base+0x76>
  418c10:	mov    eax,0x1
  418c15:	jmp    418c1c <flatcc_builder_check_required_field@@Base+0x7b>
  418c17:	mov    eax,0x0
  418c1c:	leave  
  418c1d:	ret    

0000000000418c1e <flatcc_builder_check_union_field@@Base>:
  418c1e:	endbr64 
  418c22:	push   rbp
  418c23:	mov    rbp,rsp
  418c26:	sub    rsp,0x10
  418c2a:	mov    QWORD PTR [rbp-0x8],rdi
  418c2e:	mov    eax,esi
  418c30:	mov    WORD PTR [rbp-0xc],ax
  418c34:	mov    rax,QWORD PTR [rbp-0x8]
  418c38:	mov    rax,QWORD PTR [rax+0x30]
  418c3c:	movzx  eax,WORD PTR [rax+0xe]
  418c40:	cmp    ax,0x3
  418c44:	je     418c65 <flatcc_builder_check_union_field@@Base+0x47>
  418c46:	lea    rcx,[rip+0x9fd3]        # 422c20 <flatcc_builder_padding_base@@Base+0x9c0>
  418c4d:	mov    edx,0x4ff
  418c52:	lea    rsi,[rip+0x9807]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418c59:	lea    rdi,[rip+0x9ad8]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  418c60:	call   4041f0 <__assert_fail@plt>
  418c65:	cmp    WORD PTR [rbp-0xc],0x0
  418c6a:	je     418c7a <flatcc_builder_check_union_field@@Base+0x5c>
  418c6c:	mov    rax,QWORD PTR [rbp-0x8]
  418c70:	movzx  eax,WORD PTR [rax+0x10]
  418c74:	cmp    WORD PTR [rbp-0xc],ax
  418c78:	jb     418c84 <flatcc_builder_check_union_field@@Base+0x66>
  418c7a:	mov    eax,0x0
  418c7f:	jmp    418d2e <flatcc_builder_check_union_field@@Base+0x110>
  418c84:	mov    rax,QWORD PTR [rbp-0x8]
  418c88:	mov    rax,QWORD PTR [rax+0x8]
  418c8c:	movzx  edx,WORD PTR [rbp-0xc]
  418c90:	add    rdx,rdx
  418c93:	sub    rdx,0x2
  418c97:	add    rax,rdx
  418c9a:	movzx  eax,WORD PTR [rax]
  418c9d:	test   ax,ax
  418ca0:	jne    418cc2 <flatcc_builder_check_union_field@@Base+0xa4>
  418ca2:	mov    rax,QWORD PTR [rbp-0x8]
  418ca6:	mov    rax,QWORD PTR [rax+0x8]
  418caa:	movzx  edx,WORD PTR [rbp-0xc]
  418cae:	add    rdx,rdx
  418cb1:	add    rax,rdx
  418cb4:	movzx  eax,WORD PTR [rax]
  418cb7:	test   ax,ax
  418cba:	sete   al
  418cbd:	movzx  eax,al
  418cc0:	jmp    418d2e <flatcc_builder_check_union_field@@Base+0x110>
  418cc2:	mov    rax,QWORD PTR [rbp-0x8]
  418cc6:	mov    rdx,QWORD PTR [rax+0x18]
  418cca:	mov    rax,QWORD PTR [rbp-0x8]
  418cce:	mov    rax,QWORD PTR [rax+0x8]
  418cd2:	movzx  ecx,WORD PTR [rbp-0xc]
  418cd6:	add    rcx,rcx
  418cd9:	sub    rcx,0x2
  418cdd:	add    rax,rcx
  418ce0:	movzx  eax,WORD PTR [rax]
  418ce3:	movzx  eax,ax
  418ce6:	add    rax,rdx
  418ce9:	movzx  eax,BYTE PTR [rax]
  418cec:	test   al,al
  418cee:	je     418d10 <flatcc_builder_check_union_field@@Base+0xf2>
  418cf0:	mov    rax,QWORD PTR [rbp-0x8]
  418cf4:	mov    rax,QWORD PTR [rax+0x8]
  418cf8:	movzx  edx,WORD PTR [rbp-0xc]
  418cfc:	add    rdx,rdx
  418cff:	add    rax,rdx
  418d02:	movzx  eax,WORD PTR [rax]
  418d05:	test   ax,ax
  418d08:	setne  al
  418d0b:	movzx  eax,al
  418d0e:	jmp    418d2e <flatcc_builder_check_union_field@@Base+0x110>
  418d10:	mov    rax,QWORD PTR [rbp-0x8]
  418d14:	mov    rax,QWORD PTR [rax+0x8]
  418d18:	movzx  edx,WORD PTR [rbp-0xc]
  418d1c:	add    rdx,rdx
  418d1f:	add    rax,rdx
  418d22:	movzx  eax,WORD PTR [rax]
  418d25:	test   ax,ax
  418d28:	sete   al
  418d2b:	movzx  eax,al
  418d2e:	leave  
  418d2f:	ret    

0000000000418d30 <flatcc_builder_check_required@@Base>:
  418d30:	endbr64 
  418d34:	push   rbp
  418d35:	mov    rbp,rsp
  418d38:	sub    rsp,0x30
  418d3c:	mov    QWORD PTR [rbp-0x18],rdi
  418d40:	mov    QWORD PTR [rbp-0x20],rsi
  418d44:	mov    DWORD PTR [rbp-0x24],edx
  418d47:	mov    rax,QWORD PTR [rbp-0x18]
  418d4b:	mov    rax,QWORD PTR [rax+0x30]
  418d4f:	movzx  eax,WORD PTR [rax+0xe]
  418d53:	cmp    ax,0x3
  418d57:	je     418d78 <flatcc_builder_check_required@@Base+0x48>
  418d59:	lea    rcx,[rip+0x9ef0]        # 422c50 <flatcc_builder_padding_base@@Base+0x9f0>
  418d60:	mov    edx,0x511
  418d65:	lea    rsi,[rip+0x96f4]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418d6c:	lea    rdi,[rip+0x99c5]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  418d73:	call   4041f0 <__assert_fail@plt>
  418d78:	mov    rax,QWORD PTR [rbp-0x18]
  418d7c:	movzx  eax,WORD PTR [rax+0x10]
  418d80:	movzx  eax,ax
  418d83:	cmp    DWORD PTR [rbp-0x24],eax
  418d86:	jle    418d8f <flatcc_builder_check_required@@Base+0x5f>
  418d88:	mov    eax,0x0
  418d8d:	jmp    418ddb <flatcc_builder_check_required@@Base+0xab>
  418d8f:	mov    DWORD PTR [rbp-0x4],0x0
  418d96:	jmp    418dce <flatcc_builder_check_required@@Base+0x9e>
  418d98:	mov    rax,QWORD PTR [rbp-0x18]
  418d9c:	mov    rdx,QWORD PTR [rax+0x8]
  418da0:	mov    eax,DWORD PTR [rbp-0x4]
  418da3:	cdqe   
  418da5:	lea    rcx,[rax+rax*1]
  418da9:	mov    rax,QWORD PTR [rbp-0x20]
  418dad:	add    rax,rcx
  418db0:	movzx  eax,WORD PTR [rax]
  418db3:	movzx  eax,ax
  418db6:	add    rax,rax
  418db9:	add    rax,rdx
  418dbc:	movzx  eax,WORD PTR [rax]
  418dbf:	test   ax,ax
  418dc2:	jne    418dcb <flatcc_builder_check_required@@Base+0x9b>
  418dc4:	mov    eax,0x0
  418dc9:	jmp    418ddb <flatcc_builder_check_required@@Base+0xab>
  418dcb:	inc    DWORD PTR [rbp-0x4]
  418dce:	mov    eax,DWORD PTR [rbp-0x4]
  418dd1:	cmp    eax,DWORD PTR [rbp-0x24]
  418dd4:	jl     418d98 <flatcc_builder_check_required@@Base+0x68>
  418dd6:	mov    eax,0x1
  418ddb:	leave  
  418ddc:	ret    

0000000000418ddd <flatcc_builder_end_table@@Base>:
  418ddd:	endbr64 
  418de1:	push   rbp
  418de2:	mov    rbp,rsp
  418de5:	sub    rsp,0x30
  418de9:	mov    QWORD PTR [rbp-0x28],rdi
  418ded:	mov    rax,QWORD PTR [rbp-0x28]
  418df1:	mov    rax,QWORD PTR [rax+0x30]
  418df5:	movzx  eax,WORD PTR [rax+0xe]
  418df9:	cmp    ax,0x3
  418dfd:	je     418e1e <flatcc_builder_end_table@@Base+0x41>
  418dff:	lea    rcx,[rip+0x9e6a]        # 422c70 <flatcc_builder_padding_base@@Base+0xa10>
  418e06:	mov    edx,0x525
  418e0b:	lea    rsi,[rip+0x964e]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  418e12:	lea    rdi,[rip+0x991f]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  418e19:	call   4041f0 <__assert_fail@plt>
  418e1e:	mov    rax,QWORD PTR [rbp-0x28]
  418e22:	mov    rax,QWORD PTR [rax+0x8]
  418e26:	sub    rax,0x4
  418e2a:	mov    QWORD PTR [rbp-0x10],rax
  418e2e:	mov    rax,QWORD PTR [rbp-0x28]
  418e32:	movzx  eax,WORD PTR [rax+0x10]
  418e36:	movzx  eax,ax
  418e39:	add    eax,0x2
  418e3c:	cdqe   
  418e3e:	add    eax,eax
  418e40:	mov    WORD PTR [rbp-0x1e],ax
  418e44:	mov    rdx,QWORD PTR [rbp-0x10]
  418e48:	movzx  eax,WORD PTR [rbp-0x1e]
  418e4c:	mov    WORD PTR [rdx],ax
  418e4f:	mov    rax,QWORD PTR [rbp-0x28]
  418e53:	mov    eax,DWORD PTR [rax+0x20]
  418e56:	mov    ecx,eax
  418e58:	mov    rax,QWORD PTR [rbp-0x10]
  418e5c:	lea    rdx,[rax+0x2]
  418e60:	lea    eax,[rcx+0x4]
  418e63:	mov    WORD PTR [rdx],ax
  418e66:	mov    rax,QWORD PTR [rbp-0x10]
  418e6a:	movzx  eax,WORD PTR [rax]
  418e6d:	movzx  edx,ax
  418e70:	mov    rax,QWORD PTR [rbp-0x28]
  418e74:	mov    eax,DWORD PTR [rax+0x14]
  418e77:	xor    eax,edx
  418e79:	imul   edx,eax,0x9e3779b1
  418e7f:	mov    rax,QWORD PTR [rbp-0x10]
  418e83:	add    rax,0x2
  418e87:	movzx  eax,WORD PTR [rax]
  418e8a:	movzx  eax,ax
  418e8d:	xor    eax,edx
  418e8f:	imul   edx,eax,0x9e3779b1
  418e95:	mov    rax,QWORD PTR [rbp-0x28]
  418e99:	mov    DWORD PTR [rax+0x14],edx
  418e9c:	mov    rax,QWORD PTR [rbp-0x28]
  418ea0:	mov    ecx,DWORD PTR [rax+0x14]
  418ea3:	movzx  edx,WORD PTR [rbp-0x1e]
  418ea7:	mov    rsi,QWORD PTR [rbp-0x10]
  418eab:	mov    rax,QWORD PTR [rbp-0x28]
  418eaf:	mov    rdi,rax
  418eb2:	call   418529 <flatcc_builder_create_cached_vtable@@Base>
  418eb7:	mov    DWORD PTR [rbp-0x1c],eax
  418eba:	cmp    DWORD PTR [rbp-0x1c],0x0
  418ebe:	jne    418eca <flatcc_builder_end_table@@Base+0xed>
  418ec0:	mov    eax,0x0
  418ec5:	jmp    418fe1 <flatcc_builder_end_table@@Base+0x204>
  418eca:	movzx  edx,WORD PTR [rbp-0x1e]
  418ece:	mov    rax,QWORD PTR [rbp-0x10]
  418ed2:	mov    esi,0x0
  418ed7:	mov    rdi,rax
  418eda:	call   404200 <memset@plt>
  418edf:	mov    rax,QWORD PTR [rbp-0x28]
  418ee3:	mov    rdx,QWORD PTR [rax+0x88]
  418eea:	mov    rax,QWORD PTR [rbp-0x28]
  418eee:	mov    rax,QWORD PTR [rax+0x30]
  418ef2:	mov    eax,DWORD PTR [rax+0x14]
  418ef5:	mov    eax,eax
  418ef7:	add    rax,rdx
  418efa:	mov    QWORD PTR [rbp-0x8],rax
  418efe:	mov    rax,QWORD PTR [rbp-0x28]
  418f02:	mov    rax,QWORD PTR [rax]
  418f05:	sub    rax,QWORD PTR [rbp-0x8]
  418f09:	sar    rax,1
  418f0c:	mov    DWORD PTR [rbp-0x18],eax
  418f0f:	mov    rax,QWORD PTR [rbp-0x28]
  418f13:	movzx  eax,WORD PTR [rax+0xea]
  418f1a:	movzx  edx,ax
  418f1d:	mov    rax,QWORD PTR [rbp-0x28]
  418f21:	mov    eax,DWORD PTR [rax+0x20]
  418f24:	mov    r10d,eax
  418f27:	mov    rax,QWORD PTR [rbp-0x28]
  418f2b:	mov    rsi,QWORD PTR [rax+0x18]
  418f2f:	mov    r8d,DWORD PTR [rbp-0x18]
  418f33:	mov    rdi,QWORD PTR [rbp-0x8]
  418f37:	mov    rax,QWORD PTR [rbp-0x28]
  418f3b:	sub    rsp,0x8
  418f3f:	mov    ecx,DWORD PTR [rbp-0x1c]
  418f42:	push   rcx
  418f43:	mov    r9d,r8d
  418f46:	mov    r8,rdi
  418f49:	mov    ecx,edx
  418f4b:	mov    rdx,r10
  418f4e:	mov    rdi,rax
  418f51:	call   41880f <flatcc_builder_create_table@@Base>
  418f56:	add    rsp,0x10
  418f5a:	mov    DWORD PTR [rbp-0x14],eax
  418f5d:	cmp    DWORD PTR [rbp-0x14],0x0
  418f61:	jne    418f6a <flatcc_builder_end_table@@Base+0x18d>
  418f63:	mov    eax,0x0
  418f68:	jmp    418fe1 <flatcc_builder_end_table@@Base+0x204>
  418f6a:	mov    rax,QWORD PTR [rbp-0x28]
  418f6e:	mov    rax,QWORD PTR [rax+0x30]
  418f72:	mov    edx,DWORD PTR [rax+0x18]
  418f75:	mov    rax,QWORD PTR [rbp-0x28]
  418f79:	mov    DWORD PTR [rax+0x14],edx
  418f7c:	mov    rax,QWORD PTR [rbp-0x28]
  418f80:	mov    rax,QWORD PTR [rax+0x30]
  418f84:	movzx  eax,WORD PTR [rax+0x1c]
  418f88:	mov    rdx,QWORD PTR [rbp-0x28]
  418f8c:	mov    WORD PTR [rdx+0x10],ax
  418f90:	mov    rax,QWORD PTR [rbp-0x28]
  418f94:	mov    rdx,QWORD PTR [rax+0x58]
  418f98:	mov    rax,QWORD PTR [rbp-0x28]
  418f9c:	mov    rax,QWORD PTR [rax+0x30]
  418fa0:	mov    eax,DWORD PTR [rax+0x10]
  418fa3:	mov    eax,eax
  418fa5:	add    rdx,rax
  418fa8:	mov    rax,QWORD PTR [rbp-0x28]
  418fac:	mov    QWORD PTR [rax+0x8],rdx
  418fb0:	mov    rax,QWORD PTR [rbp-0x28]
  418fb4:	mov    rdx,QWORD PTR [rax+0x88]
  418fbb:	mov    rax,QWORD PTR [rbp-0x28]
  418fbf:	mov    rax,QWORD PTR [rax+0x30]
  418fc3:	mov    eax,DWORD PTR [rax+0x14]
  418fc6:	mov    eax,eax
  418fc8:	add    rdx,rax
  418fcb:	mov    rax,QWORD PTR [rbp-0x28]
  418fcf:	mov    QWORD PTR [rax],rdx
  418fd2:	mov    rax,QWORD PTR [rbp-0x28]
  418fd6:	mov    rdi,rax
  418fd9:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  418fde:	mov    eax,DWORD PTR [rbp-0x14]
  418fe1:	leave  
  418fe2:	ret    

0000000000418fe3 <flatcc_builder_create_vector@@Base>:
  418fe3:	endbr64 
  418fe7:	push   rbp
  418fe8:	mov    rbp,rsp
  418feb:	sub    rsp,0xe0
  418ff2:	mov    QWORD PTR [rbp-0xb8],rdi
  418ff9:	mov    QWORD PTR [rbp-0xc0],rsi
  419000:	mov    QWORD PTR [rbp-0xc8],rdx
  419007:	mov    QWORD PTR [rbp-0xd0],rcx
  41900e:	mov    eax,r8d
  419011:	mov    QWORD PTR [rbp-0xe0],r9
  419018:	mov    WORD PTR [rbp-0xd4],ax
  41901f:	mov    rax,QWORD PTR fs:0x28
  419028:	mov    QWORD PTR [rbp-0x8],rax
  41902c:	xor    eax,eax
  41902e:	mov    rax,QWORD PTR [rbp-0xc8]
  419035:	cmp    rax,QWORD PTR [rbp-0xe0]
  41903c:	jbe    419077 <flatcc_builder_create_vector@@Base+0x94>
  41903e:	mov    rax,QWORD PTR [rbp-0xc8]
  419045:	cmp    rax,QWORD PTR [rbp-0xe0]
  41904c:	jbe    41906d <flatcc_builder_create_vector@@Base+0x8a>
  41904e:	lea    rcx,[rip+0x9c3b]        # 422c90 <flatcc_builder_padding_base@@Base+0xa30>
  419055:	mov    edx,0x555
  41905a:	lea    rsi,[rip+0x93ff]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419061:	lea    rdi,[rip+0x96fb]        # 422763 <flatcc_builder_padding_base@@Base+0x503>
  419068:	call   4041f0 <__assert_fail@plt>
  41906d:	mov    eax,0x0
  419072:	jmp    41925f <flatcc_builder_create_vector@@Base+0x27c>
  419077:	lea    rax,[rbp-0xd4]
  41907e:	mov    esi,0x4
  419083:	mov    rdi,rax
  419086:	call   416338 <flatcc_builder_clear@@Base+0xca>
  41908b:	movzx  eax,WORD PTR [rbp-0xd4]
  419092:	movzx  edx,ax
  419095:	mov    rax,QWORD PTR [rbp-0xb8]
  41909c:	mov    esi,edx
  41909e:	mov    rdi,rax
  4190a1:	call   416307 <flatcc_builder_clear@@Base+0x99>
  4190a6:	mov    rax,QWORD PTR [rbp-0xc8]
  4190ad:	mov    edx,eax
  4190af:	mov    rax,QWORD PTR [rbp-0xd0]
  4190b6:	imul   eax,edx
  4190b9:	mov    DWORD PTR [rbp-0xa8],eax
  4190bf:	mov    rax,QWORD PTR [rbp-0xc8]
  4190c6:	mov    edi,eax
  4190c8:	call   4155db <main@@Base+0x4b1>
  4190cd:	mov    DWORD PTR [rbp-0xac],eax
  4190d3:	movzx  eax,WORD PTR [rbp-0xd4]
  4190da:	movzx  edx,ax
  4190dd:	mov    ecx,DWORD PTR [rbp-0xa8]
  4190e3:	mov    rax,QWORD PTR [rbp-0xb8]
  4190ea:	mov    esi,ecx
  4190ec:	mov    rdi,rax
  4190ef:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4190f4:	mov    DWORD PTR [rbp-0xa4],eax
  4190fa:	mov    QWORD PTR [rbp-0xa0],0x0
  419105:	mov    DWORD PTR [rbp-0x98],0x0
  41910f:	mov    rax,QWORD PTR [rbp-0xa0]
  419116:	add    rax,0x4
  41911a:	mov    QWORD PTR [rbp-0xa0],rax
  419121:	mov    eax,DWORD PTR [rbp-0x98]
  419127:	cdqe   
  419129:	shl    rax,0x4
  41912d:	add    rax,rbp
  419130:	lea    rdx,[rax-0x90]
  419137:	lea    rax,[rbp-0xac]
  41913e:	mov    QWORD PTR [rdx],rax
  419141:	mov    eax,DWORD PTR [rbp-0x98]
  419147:	cdqe   
  419149:	shl    rax,0x4
  41914d:	add    rax,rbp
  419150:	sub    rax,0x88
  419156:	mov    QWORD PTR [rax],0x4
  41915d:	mov    eax,DWORD PTR [rbp-0x98]
  419163:	inc    eax
  419165:	mov    DWORD PTR [rbp-0x98],eax
  41916b:	cmp    DWORD PTR [rbp-0xa8],0x0
  419172:	je     4191d9 <flatcc_builder_create_vector@@Base+0x1f6>
  419174:	mov    rdx,QWORD PTR [rbp-0xa0]
  41917b:	mov    eax,DWORD PTR [rbp-0xa8]
  419181:	add    rax,rdx
  419184:	mov    QWORD PTR [rbp-0xa0],rax
  41918b:	mov    eax,DWORD PTR [rbp-0x98]
  419191:	cdqe   
  419193:	shl    rax,0x4
  419197:	add    rax,rbp
  41919a:	lea    rdx,[rax-0x90]
  4191a1:	mov    rax,QWORD PTR [rbp-0xc0]
  4191a8:	mov    QWORD PTR [rdx],rax
  4191ab:	mov    edx,DWORD PTR [rbp-0x98]
  4191b1:	mov    eax,DWORD PTR [rbp-0xa8]
  4191b7:	movsxd rdx,edx
  4191ba:	shl    rdx,0x4
  4191be:	add    rdx,rbp
  4191c1:	sub    rdx,0x88
  4191c8:	mov    QWORD PTR [rdx],rax
  4191cb:	mov    eax,DWORD PTR [rbp-0x98]
  4191d1:	inc    eax
  4191d3:	mov    DWORD PTR [rbp-0x98],eax
  4191d9:	cmp    DWORD PTR [rbp-0xa4],0x0
  4191e0:	je     419246 <flatcc_builder_create_vector@@Base+0x263>
  4191e2:	mov    rdx,QWORD PTR [rbp-0xa0]
  4191e9:	mov    eax,DWORD PTR [rbp-0xa4]
  4191ef:	add    rax,rdx
  4191f2:	mov    QWORD PTR [rbp-0xa0],rax
  4191f9:	mov    eax,DWORD PTR [rbp-0x98]
  4191ff:	cdqe   
  419201:	shl    rax,0x4
  419205:	add    rax,rbp
  419208:	sub    rax,0x90
  41920e:	mov    rdx,0x422260
  419215:	mov    QWORD PTR [rax],rdx
  419218:	mov    edx,DWORD PTR [rbp-0x98]
  41921e:	mov    eax,DWORD PTR [rbp-0xa4]
  419224:	movsxd rdx,edx
  419227:	shl    rdx,0x4
  41922b:	add    rdx,rbp
  41922e:	sub    rdx,0x88
  419235:	mov    QWORD PTR [rdx],rax
  419238:	mov    eax,DWORD PTR [rbp-0x98]
  41923e:	inc    eax
  419240:	mov    DWORD PTR [rbp-0x98],eax
  419246:	lea    rdx,[rbp-0xa0]
  41924d:	mov    rax,QWORD PTR [rbp-0xb8]
  419254:	mov    rsi,rdx
  419257:	mov    rdi,rax
  41925a:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41925f:	mov    rcx,QWORD PTR [rbp-0x8]
  419263:	xor    rcx,QWORD PTR fs:0x28
  41926c:	je     419273 <flatcc_builder_create_vector@@Base+0x290>
  41926e:	call   4041c0 <__stack_chk_fail@plt>
  419273:	leave  
  419274:	ret    

0000000000419275 <flatcc_builder_end_vector@@Base>:
  419275:	endbr64 
  419279:	push   rbp
  41927a:	mov    rbp,rsp
  41927d:	sub    rsp,0x20
  419281:	mov    QWORD PTR [rbp-0x18],rdi
  419285:	mov    rax,QWORD PTR [rbp-0x18]
  419289:	mov    rax,QWORD PTR [rax+0x30]
  41928d:	movzx  eax,WORD PTR [rax+0xe]
  419291:	cmp    ax,0x4
  419295:	je     4192b6 <flatcc_builder_end_vector@@Base+0x41>
  419297:	lea    rcx,[rip+0x9a12]        # 422cb0 <flatcc_builder_padding_base@@Base+0xa50>
  41929e:	mov    edx,0x578
  4192a3:	lea    rsi,[rip+0x91b6]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4192aa:	lea    rdi,[rip+0x92f7]        # 4225a8 <flatcc_builder_padding_base@@Base+0x348>
  4192b1:	call   4041f0 <__assert_fail@plt>
  4192b6:	mov    rax,QWORD PTR [rbp-0x18]
  4192ba:	mov    rax,QWORD PTR [rax+0x30]
  4192be:	mov    eax,DWORD PTR [rax+0x18]
  4192c1:	mov    r8d,eax
  4192c4:	mov    rax,QWORD PTR [rbp-0x18]
  4192c8:	movzx  eax,WORD PTR [rax+0xea]
  4192cf:	movzx  edx,ax
  4192d2:	mov    rax,QWORD PTR [rbp-0x18]
  4192d6:	mov    rax,QWORD PTR [rax+0x30]
  4192da:	mov    eax,DWORD PTR [rax+0x10]
  4192dd:	mov    ecx,eax
  4192df:	mov    rax,QWORD PTR [rbp-0x18]
  4192e3:	mov    rax,QWORD PTR [rax+0x30]
  4192e7:	mov    eax,DWORD PTR [rax+0x14]
  4192ea:	mov    edi,eax
  4192ec:	mov    rax,QWORD PTR [rbp-0x18]
  4192f0:	mov    rsi,QWORD PTR [rax+0x18]
  4192f4:	mov    rax,QWORD PTR [rbp-0x18]
  4192f8:	mov    r9,r8
  4192fb:	mov    r8d,edx
  4192fe:	mov    rdx,rdi
  419301:	mov    rdi,rax
  419304:	call   418fe3 <flatcc_builder_create_vector@@Base>
  419309:	mov    DWORD PTR [rbp-0x4],eax
  41930c:	cmp    DWORD PTR [rbp-0x4],0x0
  419310:	jne    419319 <flatcc_builder_end_vector@@Base+0xa4>
  419312:	mov    eax,0x0
  419317:	jmp    419328 <flatcc_builder_end_vector@@Base+0xb3>
  419319:	mov    rax,QWORD PTR [rbp-0x18]
  41931d:	mov    rdi,rax
  419320:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419325:	mov    eax,DWORD PTR [rbp-0x4]
  419328:	leave  
  419329:	ret    

000000000041932a <flatcc_builder_vector_count@@Base>:
  41932a:	endbr64 
  41932e:	push   rbp
  41932f:	mov    rbp,rsp
  419332:	mov    QWORD PTR [rbp-0x8],rdi
  419336:	mov    rax,QWORD PTR [rbp-0x8]
  41933a:	mov    rax,QWORD PTR [rax+0x30]
  41933e:	mov    eax,DWORD PTR [rax+0x14]
  419341:	mov    eax,eax
  419343:	pop    rbp
  419344:	ret    

0000000000419345 <flatcc_builder_vector_edit@@Base>:
  419345:	endbr64 
  419349:	push   rbp
  41934a:	mov    rbp,rsp
  41934d:	mov    QWORD PTR [rbp-0x8],rdi
  419351:	mov    rax,QWORD PTR [rbp-0x8]
  419355:	mov    rax,QWORD PTR [rax+0x18]
  419359:	pop    rbp
  41935a:	ret    
  41935b:	endbr64 
  41935f:	push   rbp
  419360:	mov    rbp,rsp
  419363:	sub    rsp,0xe0
  41936a:	mov    QWORD PTR [rbp-0xc8],rdi
  419371:	mov    QWORD PTR [rbp-0xd0],rsi
  419378:	mov    QWORD PTR [rbp-0xd8],rdx
  41937f:	mov    QWORD PTR [rbp-0xe0],rcx
  419386:	mov    rax,QWORD PTR fs:0x28
  41938f:	mov    QWORD PTR [rbp-0x8],rax
  419393:	xor    eax,eax
  419395:	mov    rax,QWORD PTR [rbp-0xd8]
  41939c:	cmp    eax,0x3fffffff
  4193a1:	jbe    4193ad <flatcc_builder_vector_edit@@Base+0x68>
  4193a3:	mov    eax,0x0
  4193a8:	jmp    4196d6 <flatcc_builder_vector_edit@@Base+0x391>
  4193ad:	mov    rax,QWORD PTR [rbp-0xc8]
  4193b4:	mov    esi,0x4
  4193b9:	mov    rdi,rax
  4193bc:	call   416307 <flatcc_builder_clear@@Base+0x99>
  4193c1:	mov    rax,QWORD PTR [rbp-0xd8]
  4193c8:	shl    eax,0x2
  4193cb:	mov    DWORD PTR [rbp-0xb0],eax
  4193d1:	mov    rax,QWORD PTR [rbp-0xd8]
  4193d8:	mov    edi,eax
  4193da:	call   4155db <main@@Base+0x4b1>
  4193df:	mov    DWORD PTR [rbp-0xb8],eax
  4193e5:	mov    ecx,DWORD PTR [rbp-0xb0]
  4193eb:	mov    rax,QWORD PTR [rbp-0xc8]
  4193f2:	mov    edx,0x4
  4193f7:	mov    esi,ecx
  4193f9:	mov    rdi,rax
  4193fc:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  419401:	mov    DWORD PTR [rbp-0xac],eax
  419407:	mov    QWORD PTR [rbp-0xa0],0x0
  419412:	mov    DWORD PTR [rbp-0x98],0x0
  41941c:	mov    rax,QWORD PTR [rbp-0xa0]
  419423:	add    rax,0x4
  419427:	mov    QWORD PTR [rbp-0xa0],rax
  41942e:	mov    eax,DWORD PTR [rbp-0x98]
  419434:	cdqe   
  419436:	shl    rax,0x4
  41943a:	add    rax,rbp
  41943d:	lea    rdx,[rax-0x90]
  419444:	lea    rax,[rbp-0xb8]
  41944b:	mov    QWORD PTR [rdx],rax
  41944e:	mov    eax,DWORD PTR [rbp-0x98]
  419454:	cdqe   
  419456:	shl    rax,0x4
  41945a:	add    rax,rbp
  41945d:	sub    rax,0x88
  419463:	mov    QWORD PTR [rax],0x4
  41946a:	mov    eax,DWORD PTR [rbp-0x98]
  419470:	inc    eax
  419472:	mov    DWORD PTR [rbp-0x98],eax
  419478:	cmp    DWORD PTR [rbp-0xb0],0x0
  41947f:	je     4194e6 <flatcc_builder_vector_edit@@Base+0x1a1>
  419481:	mov    rdx,QWORD PTR [rbp-0xa0]
  419488:	mov    eax,DWORD PTR [rbp-0xb0]
  41948e:	add    rax,rdx
  419491:	mov    QWORD PTR [rbp-0xa0],rax
  419498:	mov    eax,DWORD PTR [rbp-0x98]
  41949e:	cdqe   
  4194a0:	shl    rax,0x4
  4194a4:	add    rax,rbp
  4194a7:	lea    rdx,[rax-0x90]
  4194ae:	mov    rax,QWORD PTR [rbp-0xd0]
  4194b5:	mov    QWORD PTR [rdx],rax
  4194b8:	mov    edx,DWORD PTR [rbp-0x98]
  4194be:	mov    eax,DWORD PTR [rbp-0xb0]
  4194c4:	movsxd rdx,edx
  4194c7:	shl    rdx,0x4
  4194cb:	add    rdx,rbp
  4194ce:	sub    rdx,0x88
  4194d5:	mov    QWORD PTR [rdx],rax
  4194d8:	mov    eax,DWORD PTR [rbp-0x98]
  4194de:	inc    eax
  4194e0:	mov    DWORD PTR [rbp-0x98],eax
  4194e6:	cmp    DWORD PTR [rbp-0xac],0x0
  4194ed:	je     419553 <flatcc_builder_vector_edit@@Base+0x20e>
  4194ef:	mov    rdx,QWORD PTR [rbp-0xa0]
  4194f6:	mov    eax,DWORD PTR [rbp-0xac]
  4194fc:	add    rax,rdx
  4194ff:	mov    QWORD PTR [rbp-0xa0],rax
  419506:	mov    eax,DWORD PTR [rbp-0x98]
  41950c:	cdqe   
  41950e:	shl    rax,0x4
  419512:	add    rax,rbp
  419515:	sub    rax,0x90
  41951b:	mov    rdx,0x422260
  419522:	mov    QWORD PTR [rax],rdx
  419525:	mov    edx,DWORD PTR [rbp-0x98]
  41952b:	mov    eax,DWORD PTR [rbp-0xac]
  419531:	movsxd rdx,edx
  419534:	shl    rdx,0x4
  419538:	add    rdx,rbp
  41953b:	sub    rdx,0x88
  419542:	mov    QWORD PTR [rdx],rax
  419545:	mov    eax,DWORD PTR [rbp-0x98]
  41954b:	inc    eax
  41954d:	mov    DWORD PTR [rbp-0x98],eax
  419553:	mov    rax,QWORD PTR [rbp-0xc8]
  41955a:	mov    eax,DWORD PTR [rax+0xf0]
  419560:	mov    edx,eax
  419562:	mov    rax,QWORD PTR [rbp-0xa0]
  419569:	sub    edx,eax
  41956b:	mov    eax,edx
  41956d:	mov    DWORD PTR [rbp-0xa8],eax
  419573:	mov    DWORD PTR [rbp-0xb4],0x0
  41957d:	jmp    4196aa <flatcc_builder_vector_edit@@Base+0x365>
  419582:	mov    eax,DWORD PTR [rbp-0xb4]
  419588:	lea    rdx,[rax*4+0x0]
  419590:	mov    rax,QWORD PTR [rbp-0xd0]
  419597:	add    rax,rdx
  41959a:	mov    eax,DWORD PTR [rax]
  41959c:	test   eax,eax
  41959e:	je     419645 <flatcc_builder_vector_edit@@Base+0x300>
  4195a4:	mov    eax,DWORD PTR [rbp-0xb4]
  4195aa:	lea    rdx,[rax*4+0x0]
  4195b2:	mov    rax,QWORD PTR [rbp-0xd0]
  4195b9:	add    rax,rdx
  4195bc:	mov    eax,DWORD PTR [rax]
  4195be:	sub    eax,DWORD PTR [rbp-0xa8]
  4195c4:	mov    edx,DWORD PTR [rbp-0xb4]
  4195ca:	shl    edx,0x2
  4195cd:	sub    eax,edx
  4195cf:	sub    eax,0x4
  4195d2:	mov    DWORD PTR [rbp-0xa4],eax
  4195d8:	mov    eax,DWORD PTR [rbp-0xa4]
  4195de:	mov    edi,eax
  4195e0:	call   4155db <main@@Base+0x4b1>
  4195e5:	mov    edx,eax
  4195e7:	mov    eax,DWORD PTR [rbp-0xb4]
  4195ed:	lea    rcx,[rax*4+0x0]
  4195f5:	mov    rax,QWORD PTR [rbp-0xd0]
  4195fc:	add    rax,rcx
  4195ff:	mov    DWORD PTR [rax],edx
  419601:	cmp    QWORD PTR [rbp-0xe0],0x0
  419609:	je     4196a4 <flatcc_builder_vector_edit@@Base+0x35f>
  41960f:	mov    edx,DWORD PTR [rbp-0xb4]
  419615:	mov    rax,QWORD PTR [rbp-0xe0]
  41961c:	add    rax,rdx
  41961f:	movzx  eax,BYTE PTR [rax]
  419622:	test   al,al
  419624:	jne    4196a4 <flatcc_builder_vector_edit@@Base+0x35f>
  419626:	lea    rcx,[rip+0x96a3]        # 422cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41962d:	mov    edx,0x5b1
  419632:	lea    rsi,[rip+0x8e27]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419639:	lea    rdi,[rip+0x9136]        # 422776 <flatcc_builder_padding_base@@Base+0x516>
  419640:	call   4041f0 <__assert_fail@plt>
  419645:	cmp    QWORD PTR [rbp-0xe0],0x0
  41964d:	je     419685 <flatcc_builder_vector_edit@@Base+0x340>
  41964f:	mov    edx,DWORD PTR [rbp-0xb4]
  419655:	mov    rax,QWORD PTR [rbp-0xe0]
  41965c:	add    rax,rdx
  41965f:	movzx  eax,BYTE PTR [rax]
  419662:	test   al,al
  419664:	je     4196a4 <flatcc_builder_vector_edit@@Base+0x35f>
  419666:	lea    rcx,[rip+0x9663]        # 422cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41966d:	mov    edx,0x5b5
  419672:	lea    rsi,[rip+0x8de7]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419679:	lea    rdi,[rip+0x9104]        # 422784 <flatcc_builder_padding_base@@Base+0x524>
  419680:	call   4041f0 <__assert_fail@plt>
  419685:	lea    rcx,[rip+0x9644]        # 422cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41968c:	mov    edx,0x5b7
  419691:	lea    rsi,[rip+0x8dc8]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419698:	lea    rdi,[rip+0x8e21]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41969f:	call   4041f0 <__assert_fail@plt>
  4196a4:	inc    DWORD PTR [rbp-0xb4]
  4196aa:	mov    rax,QWORD PTR [rbp-0xd8]
  4196b1:	cmp    DWORD PTR [rbp-0xb4],eax
  4196b7:	jb     419582 <flatcc_builder_vector_edit@@Base+0x23d>
  4196bd:	lea    rdx,[rbp-0xa0]
  4196c4:	mov    rax,QWORD PTR [rbp-0xc8]
  4196cb:	mov    rsi,rdx
  4196ce:	mov    rdi,rax
  4196d1:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4196d6:	mov    rsi,QWORD PTR [rbp-0x8]
  4196da:	xor    rsi,QWORD PTR fs:0x28
  4196e3:	je     4196ea <flatcc_builder_vector_edit@@Base+0x3a5>
  4196e5:	call   4041c0 <__stack_chk_fail@plt>
  4196ea:	leave  
  4196eb:	ret    

00000000004196ec <flatcc_builder_create_offset_vector_direct@@Base>:
  4196ec:	endbr64 
  4196f0:	push   rbp
  4196f1:	mov    rbp,rsp
  4196f4:	sub    rsp,0x20
  4196f8:	mov    QWORD PTR [rbp-0x8],rdi
  4196fc:	mov    QWORD PTR [rbp-0x10],rsi
  419700:	mov    QWORD PTR [rbp-0x18],rdx
  419704:	mov    rdx,QWORD PTR [rbp-0x18]
  419708:	mov    rsi,QWORD PTR [rbp-0x10]
  41970c:	mov    rax,QWORD PTR [rbp-0x8]
  419710:	mov    ecx,0x0
  419715:	mov    rdi,rax
  419718:	call   41935b <flatcc_builder_vector_edit@@Base+0x16>
  41971d:	leave  
  41971e:	ret    

000000000041971f <flatcc_builder_end_offset_vector@@Base>:
  41971f:	endbr64 
  419723:	push   rbp
  419724:	mov    rbp,rsp
  419727:	sub    rsp,0x20
  41972b:	mov    QWORD PTR [rbp-0x18],rdi
  41972f:	mov    rax,QWORD PTR [rbp-0x18]
  419733:	mov    rax,QWORD PTR [rax+0x30]
  419737:	movzx  eax,WORD PTR [rax+0xe]
  41973b:	cmp    ax,0x5
  41973f:	je     419760 <flatcc_builder_end_offset_vector@@Base+0x41>
  419741:	lea    rcx,[rip+0x95b8]        # 422d00 <flatcc_builder_padding_base@@Base+0xaa0>
  419748:	mov    edx,0x5c8
  41974d:	lea    rsi,[rip+0x8d0c]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419754:	lea    rdi,[rip+0x8ebd]        # 422618 <flatcc_builder_padding_base@@Base+0x3b8>
  41975b:	call   4041f0 <__assert_fail@plt>
  419760:	mov    rax,QWORD PTR [rbp-0x18]
  419764:	mov    rax,QWORD PTR [rax+0x30]
  419768:	mov    eax,DWORD PTR [rax+0x14]
  41976b:	mov    edx,eax
  41976d:	mov    rax,QWORD PTR [rbp-0x18]
  419771:	mov    rcx,QWORD PTR [rax+0x18]
  419775:	mov    rax,QWORD PTR [rbp-0x18]
  419779:	mov    rsi,rcx
  41977c:	mov    rdi,rax
  41977f:	call   4196ec <flatcc_builder_create_offset_vector_direct@@Base>
  419784:	mov    DWORD PTR [rbp-0x4],eax
  419787:	cmp    DWORD PTR [rbp-0x4],0x0
  41978b:	jne    419794 <flatcc_builder_end_offset_vector@@Base+0x75>
  41978d:	mov    eax,0x0
  419792:	jmp    4197a3 <flatcc_builder_end_offset_vector@@Base+0x84>
  419794:	mov    rax,QWORD PTR [rbp-0x18]
  419798:	mov    rdi,rax
  41979b:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4197a0:	mov    eax,DWORD PTR [rbp-0x4]
  4197a3:	leave  
  4197a4:	ret    

00000000004197a5 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4197a5:	endbr64 
  4197a9:	push   rbp
  4197aa:	mov    rbp,rsp
  4197ad:	sub    rsp,0x20
  4197b1:	mov    QWORD PTR [rbp-0x18],rdi
  4197b5:	mov    QWORD PTR [rbp-0x20],rsi
  4197b9:	mov    rax,QWORD PTR [rbp-0x18]
  4197bd:	mov    rax,QWORD PTR [rax+0x30]
  4197c1:	movzx  eax,WORD PTR [rax+0xe]
  4197c5:	cmp    ax,0x5
  4197c9:	je     4197ea <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  4197cb:	lea    rcx,[rip+0x956e]        # 422d40 <flatcc_builder_padding_base@@Base+0xae0>
  4197d2:	mov    edx,0x5d5
  4197d7:	lea    rsi,[rip+0x8c82]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4197de:	lea    rdi,[rip+0x8e33]        # 422618 <flatcc_builder_padding_base@@Base+0x3b8>
  4197e5:	call   4041f0 <__assert_fail@plt>
  4197ea:	mov    rax,QWORD PTR [rbp-0x18]
  4197ee:	mov    rax,QWORD PTR [rax+0x30]
  4197f2:	mov    eax,DWORD PTR [rax+0x14]
  4197f5:	mov    edi,eax
  4197f7:	mov    rax,QWORD PTR [rbp-0x18]
  4197fb:	mov    rsi,QWORD PTR [rax+0x18]
  4197ff:	mov    rdx,QWORD PTR [rbp-0x20]
  419803:	mov    rax,QWORD PTR [rbp-0x18]
  419807:	mov    rcx,rdx
  41980a:	mov    rdx,rdi
  41980d:	mov    rdi,rax
  419810:	call   41935b <flatcc_builder_vector_edit@@Base+0x16>
  419815:	mov    DWORD PTR [rbp-0x4],eax
  419818:	cmp    DWORD PTR [rbp-0x4],0x0
  41981c:	jne    419825 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  41981e:	mov    eax,0x0
  419823:	jmp    419834 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  419825:	mov    rax,QWORD PTR [rbp-0x18]
  419829:	mov    rdi,rax
  41982c:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419831:	mov    eax,DWORD PTR [rbp-0x4]
  419834:	leave  
  419835:	ret    

0000000000419836 <flatcc_builder_offset_vector_edit@@Base>:
  419836:	endbr64 
  41983a:	push   rbp
  41983b:	mov    rbp,rsp
  41983e:	mov    QWORD PTR [rbp-0x8],rdi
  419842:	mov    rax,QWORD PTR [rbp-0x8]
  419846:	mov    rax,QWORD PTR [rax+0x18]
  41984a:	pop    rbp
  41984b:	ret    

000000000041984c <flatcc_builder_offset_vector_count@@Base>:
  41984c:	endbr64 
  419850:	push   rbp
  419851:	mov    rbp,rsp
  419854:	mov    QWORD PTR [rbp-0x8],rdi
  419858:	mov    rax,QWORD PTR [rbp-0x8]
  41985c:	mov    rax,QWORD PTR [rax+0x30]
  419860:	mov    eax,DWORD PTR [rax+0x14]
  419863:	mov    eax,eax
  419865:	pop    rbp
  419866:	ret    

0000000000419867 <flatcc_builder_table_add_union@@Base>:
  419867:	endbr64 
  41986b:	push   rbp
  41986c:	mov    rbp,rsp
  41986f:	sub    rsp,0x30
  419873:	mov    QWORD PTR [rbp-0x18],rdi
  419877:	mov    DWORD PTR [rbp-0x1c],esi
  41987a:	mov    QWORD PTR [rbp-0x24],rdx
  41987e:	mov    rax,QWORD PTR [rbp-0x18]
  419882:	mov    rax,QWORD PTR [rax+0x30]
  419886:	movzx  eax,WORD PTR [rax+0xe]
  41988a:	cmp    ax,0x3
  41988e:	je     4198af <flatcc_builder_table_add_union@@Base+0x48>
  419890:	lea    rcx,[rip+0x94d9]        # 422d70 <flatcc_builder_padding_base@@Base+0xb10>
  419897:	mov    edx,0x5ee
  41989c:	lea    rsi,[rip+0x8bbd]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4198a3:	lea    rdi,[rip+0x8e8e]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  4198aa:	call   4041f0 <__assert_fail@plt>
  4198af:	movzx  eax,BYTE PTR [rbp-0x24]
  4198b3:	test   al,al
  4198b5:	jne    4198f6 <flatcc_builder_table_add_union@@Base+0x8f>
  4198b7:	mov    eax,DWORD PTR [rbp-0x20]
  4198ba:	test   eax,eax
  4198bc:	je     4198f6 <flatcc_builder_table_add_union@@Base+0x8f>
  4198be:	movzx  eax,BYTE PTR [rbp-0x24]
  4198c2:	test   al,al
  4198c4:	jne    4198ec <flatcc_builder_table_add_union@@Base+0x85>
  4198c6:	mov    eax,DWORD PTR [rbp-0x20]
  4198c9:	test   eax,eax
  4198cb:	je     4198ec <flatcc_builder_table_add_union@@Base+0x85>
  4198cd:	lea    rcx,[rip+0x949c]        # 422d70 <flatcc_builder_padding_base@@Base+0xb10>
  4198d4:	mov    edx,0x5ef
  4198d9:	lea    rsi,[rip+0x8b80]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4198e0:	lea    rdi,[rip+0x8eb1]        # 422798 <flatcc_builder_padding_base@@Base+0x538>
  4198e7:	call   4041f0 <__assert_fail@plt>
  4198ec:	mov    eax,0xffffffff
  4198f1:	jmp    4199bc <flatcc_builder_table_add_union@@Base+0x155>
  4198f6:	mov    eax,DWORD PTR [rbp-0x20]
  4198f9:	test   eax,eax
  4198fb:	je     41994f <flatcc_builder_table_add_union@@Base+0xe8>
  4198fd:	mov    edx,DWORD PTR [rbp-0x1c]
  419900:	mov    rax,QWORD PTR [rbp-0x18]
  419904:	mov    esi,edx
  419906:	mov    rdi,rax
  419909:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  41990e:	mov    QWORD PTR [rbp-0x10],rax
  419912:	cmp    QWORD PTR [rbp-0x10],0x0
  419917:	jne    419946 <flatcc_builder_table_add_union@@Base+0xdf>
  419919:	cmp    QWORD PTR [rbp-0x10],0x0
  41991e:	jne    41993f <flatcc_builder_table_add_union@@Base+0xd8>
  419920:	lea    rcx,[rip+0x9449]        # 422d70 <flatcc_builder_padding_base@@Base+0xb10>
  419927:	mov    edx,0x5f2
  41992c:	lea    rsi,[rip+0x8b2d]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419933:	lea    rdi,[rip+0x8e80]        # 4227ba <flatcc_builder_padding_base@@Base+0x55a>
  41993a:	call   4041f0 <__assert_fail@plt>
  41993f:	mov    eax,0xffffffff
  419944:	jmp    4199bc <flatcc_builder_table_add_union@@Base+0x155>
  419946:	mov    edx,DWORD PTR [rbp-0x20]
  419949:	mov    rax,QWORD PTR [rbp-0x10]
  41994d:	mov    DWORD PTR [rax],edx
  41994f:	mov    eax,DWORD PTR [rbp-0x1c]
  419952:	lea    esi,[rax-0x1]
  419955:	mov    rax,QWORD PTR [rbp-0x18]
  419959:	mov    ecx,0x1
  41995e:	mov    edx,0x1
  419963:	mov    rdi,rax
  419966:	call   41a47e <flatcc_builder_table_add@@Base>
  41996b:	mov    QWORD PTR [rbp-0x8],rax
  41996f:	cmp    QWORD PTR [rbp-0x8],0x0
  419974:	jne    4199a3 <flatcc_builder_table_add_union@@Base+0x13c>
  419976:	cmp    QWORD PTR [rbp-0x8],0x0
  41997b:	jne    41999c <flatcc_builder_table_add_union@@Base+0x135>
  41997d:	lea    rcx,[rip+0x93ec]        # 422d70 <flatcc_builder_padding_base@@Base+0xb10>
  419984:	mov    edx,0x5f6
  419989:	lea    rsi,[rip+0x8ad0]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419990:	lea    rdi,[rip+0x8e2d]        # 4227c4 <flatcc_builder_padding_base@@Base+0x564>
  419997:	call   4041f0 <__assert_fail@plt>
  41999c:	mov    eax,0xffffffff
  4199a1:	jmp    4199bc <flatcc_builder_table_add_union@@Base+0x155>
  4199a3:	movzx  eax,BYTE PTR [rbp-0x24]
  4199a7:	movzx  eax,al
  4199aa:	mov    edi,eax
  4199ac:	call   4155e7 <main@@Base+0x4bd>
  4199b1:	mov    rdx,QWORD PTR [rbp-0x8]
  4199b5:	mov    BYTE PTR [rdx],al
  4199b7:	mov    eax,0x0
  4199bc:	leave  
  4199bd:	ret    

00000000004199be <flatcc_builder_table_add_union_vector@@Base>:
  4199be:	endbr64 
  4199c2:	push   rbp
  4199c3:	mov    rbp,rsp
  4199c6:	sub    rsp,0x30
  4199ca:	mov    QWORD PTR [rbp-0x18],rdi
  4199ce:	mov    DWORD PTR [rbp-0x1c],esi
  4199d1:	mov    QWORD PTR [rbp-0x24],rdx
  4199d5:	mov    rax,QWORD PTR [rbp-0x18]
  4199d9:	mov    rax,QWORD PTR [rax+0x30]
  4199dd:	movzx  eax,WORD PTR [rax+0xe]
  4199e1:	cmp    ax,0x3
  4199e5:	je     419a06 <flatcc_builder_table_add_union_vector@@Base+0x48>
  4199e7:	lea    rcx,[rip+0x93b2]        # 422da0 <flatcc_builder_padding_base@@Base+0xb40>
  4199ee:	mov    edx,0x600
  4199f3:	lea    rsi,[rip+0x8a66]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  4199fa:	lea    rdi,[rip+0x8d37]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  419a01:	call   4041f0 <__assert_fail@plt>
  419a06:	mov    eax,DWORD PTR [rbp-0x24]
  419a09:	test   eax,eax
  419a0b:	sete   dl
  419a0e:	mov    eax,DWORD PTR [rbp-0x20]
  419a11:	test   eax,eax
  419a13:	sete   al
  419a16:	xor    eax,edx
  419a18:	test   al,al
  419a1a:	je     419a5b <flatcc_builder_table_add_union_vector@@Base+0x9d>
  419a1c:	mov    eax,DWORD PTR [rbp-0x24]
  419a1f:	test   eax,eax
  419a21:	setne  dl
  419a24:	mov    eax,DWORD PTR [rbp-0x20]
  419a27:	test   eax,eax
  419a29:	sete   al
  419a2c:	xor    eax,edx
  419a2e:	test   al,al
  419a30:	jne    419a51 <flatcc_builder_table_add_union_vector@@Base+0x93>
  419a32:	lea    rcx,[rip+0x9367]        # 422da0 <flatcc_builder_padding_base@@Base+0xb40>
  419a39:	mov    edx,0x601
  419a3e:	lea    rsi,[rip+0x8a1b]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419a45:	lea    rdi,[rip+0x8d84]        # 4227d0 <flatcc_builder_padding_base@@Base+0x570>
  419a4c:	call   4041f0 <__assert_fail@plt>
  419a51:	mov    eax,0xffffffff
  419a56:	jmp    419b12 <flatcc_builder_table_add_union_vector@@Base+0x154>
  419a5b:	mov    eax,DWORD PTR [rbp-0x24]
  419a5e:	test   eax,eax
  419a60:	je     419b0d <flatcc_builder_table_add_union_vector@@Base+0x14f>
  419a66:	mov    eax,DWORD PTR [rbp-0x1c]
  419a69:	lea    edx,[rax-0x1]
  419a6c:	mov    rax,QWORD PTR [rbp-0x18]
  419a70:	mov    esi,edx
  419a72:	mov    rdi,rax
  419a75:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  419a7a:	mov    QWORD PTR [rbp-0x8],rax
  419a7e:	cmp    QWORD PTR [rbp-0x8],0x0
  419a83:	jne    419ab2 <flatcc_builder_table_add_union_vector@@Base+0xf4>
  419a85:	cmp    QWORD PTR [rbp-0x8],0x0
  419a8a:	jne    419aab <flatcc_builder_table_add_union_vector@@Base+0xed>
  419a8c:	lea    rcx,[rip+0x930d]        # 422da0 <flatcc_builder_padding_base@@Base+0xb40>
  419a93:	mov    edx,0x604
  419a98:	lea    rsi,[rip+0x89c1]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419a9f:	lea    rdi,[rip+0x8d14]        # 4227ba <flatcc_builder_padding_base@@Base+0x55a>
  419aa6:	call   4041f0 <__assert_fail@plt>
  419aab:	mov    eax,0xffffffff
  419ab0:	jmp    419b12 <flatcc_builder_table_add_union_vector@@Base+0x154>
  419ab2:	mov    edx,DWORD PTR [rbp-0x24]
  419ab5:	mov    rax,QWORD PTR [rbp-0x8]
  419ab9:	mov    DWORD PTR [rax],edx
  419abb:	mov    edx,DWORD PTR [rbp-0x1c]
  419abe:	mov    rax,QWORD PTR [rbp-0x18]
  419ac2:	mov    esi,edx
  419ac4:	mov    rdi,rax
  419ac7:	call   41a658 <flatcc_builder_table_add_offset@@Base>
  419acc:	mov    QWORD PTR [rbp-0x8],rax
  419ad0:	cmp    QWORD PTR [rbp-0x8],0x0
  419ad5:	jne    419b04 <flatcc_builder_table_add_union_vector@@Base+0x146>
  419ad7:	cmp    QWORD PTR [rbp-0x8],0x0
  419adc:	jne    419afd <flatcc_builder_table_add_union_vector@@Base+0x13f>
  419ade:	lea    rcx,[rip+0x92bb]        # 422da0 <flatcc_builder_padding_base@@Base+0xb40>
  419ae5:	mov    edx,0x608
  419aea:	lea    rsi,[rip+0x896f]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419af1:	lea    rdi,[rip+0x8cc2]        # 4227ba <flatcc_builder_padding_base@@Base+0x55a>
  419af8:	call   4041f0 <__assert_fail@plt>
  419afd:	mov    eax,0xffffffff
  419b02:	jmp    419b12 <flatcc_builder_table_add_union_vector@@Base+0x154>
  419b04:	mov    edx,DWORD PTR [rbp-0x20]
  419b07:	mov    rax,QWORD PTR [rbp-0x8]
  419b0b:	mov    DWORD PTR [rax],edx
  419b0d:	mov    eax,0x0
  419b12:	leave  
  419b13:	ret    

0000000000419b14 <flatcc_builder_create_union_vector@@Base>:
  419b14:	endbr64 
  419b18:	push   rbp
  419b19:	mov    rbp,rsp
  419b1c:	sub    rsp,0x40
  419b20:	mov    QWORD PTR [rbp-0x28],rdi
  419b24:	mov    QWORD PTR [rbp-0x30],rsi
  419b28:	mov    QWORD PTR [rbp-0x38],rdx
  419b2c:	mov    DWORD PTR [rbp-0x8],0x0
  419b33:	mov    DWORD PTR [rbp-0x4],0x0
  419b3a:	mov    rax,QWORD PTR [rbp-0x28]
  419b3e:	mov    rdi,rax
  419b41:	call   418122 <flatcc_builder_start_offset_vector@@Base>
  419b46:	test   eax,eax
  419b48:	je     419b53 <flatcc_builder_create_union_vector@@Base+0x3f>
  419b4a:	mov    rax,QWORD PTR [rbp-0x8]
  419b4e:	jmp    419c3e <flatcc_builder_create_union_vector@@Base+0x12a>
  419b53:	mov    rdx,QWORD PTR [rbp-0x38]
  419b57:	mov    rax,QWORD PTR [rbp-0x28]
  419b5b:	mov    rsi,rdx
  419b5e:	mov    rdi,rax
  419b61:	call   417b01 <flatcc_builder_extend_offset_vector@@Base>
  419b66:	test   rax,rax
  419b69:	jne    419b74 <flatcc_builder_create_union_vector@@Base+0x60>
  419b6b:	mov    rax,QWORD PTR [rbp-0x8]
  419b6f:	jmp    419c3e <flatcc_builder_create_union_vector@@Base+0x12a>
  419b74:	mov    rax,QWORD PTR [rbp-0x38]
  419b78:	mov    edx,eax
  419b7a:	mov    rax,QWORD PTR [rbp-0x28]
  419b7e:	mov    esi,edx
  419b80:	mov    rdi,rax
  419b83:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  419b88:	mov    QWORD PTR [rbp-0x18],rax
  419b8c:	cmp    QWORD PTR [rbp-0x18],0x0
  419b91:	jne    419b9c <flatcc_builder_create_union_vector@@Base+0x88>
  419b93:	mov    rax,QWORD PTR [rbp-0x8]
  419b97:	jmp    419c3e <flatcc_builder_create_union_vector@@Base+0x12a>
  419b9c:	mov    rax,QWORD PTR [rbp-0x28]
  419ba0:	mov    rdi,rax
  419ba3:	call   419836 <flatcc_builder_offset_vector_edit@@Base>
  419ba8:	mov    QWORD PTR [rbp-0x10],rax
  419bac:	mov    QWORD PTR [rbp-0x20],0x0
  419bb4:	jmp    419c08 <flatcc_builder_create_union_vector@@Base+0xf4>
  419bb6:	mov    rax,QWORD PTR [rbp-0x20]
  419bba:	lea    rdx,[rax*8+0x0]
  419bc2:	mov    rax,QWORD PTR [rbp-0x30]
  419bc6:	add    rax,rdx
  419bc9:	mov    rcx,QWORD PTR [rbp-0x18]
  419bcd:	mov    rdx,QWORD PTR [rbp-0x20]
  419bd1:	add    rdx,rcx
  419bd4:	movzx  eax,BYTE PTR [rax]
  419bd7:	mov    BYTE PTR [rdx],al
  419bd9:	mov    rax,QWORD PTR [rbp-0x20]
  419bdd:	lea    rdx,[rax*8+0x0]
  419be5:	mov    rax,QWORD PTR [rbp-0x30]
  419be9:	add    rax,rdx
  419bec:	mov    rdx,QWORD PTR [rbp-0x20]
  419bf0:	lea    rcx,[rdx*4+0x0]
  419bf8:	mov    rdx,QWORD PTR [rbp-0x10]
  419bfc:	add    rdx,rcx
  419bff:	mov    eax,DWORD PTR [rax+0x4]
  419c02:	mov    DWORD PTR [rdx],eax
  419c04:	inc    QWORD PTR [rbp-0x20]
  419c08:	mov    rax,QWORD PTR [rbp-0x20]
  419c0c:	cmp    rax,QWORD PTR [rbp-0x38]
  419c10:	jb     419bb6 <flatcc_builder_create_union_vector@@Base+0xa2>
  419c12:	mov    rcx,QWORD PTR [rbp-0x38]
  419c16:	mov    rdx,QWORD PTR [rbp-0x10]
  419c1a:	mov    rsi,QWORD PTR [rbp-0x18]
  419c1e:	mov    rax,QWORD PTR [rbp-0x28]
  419c22:	mov    rdi,rax
  419c25:	call   419c40 <flatcc_builder_create_union_vector_direct@@Base>
  419c2a:	mov    QWORD PTR [rbp-0x8],rax
  419c2e:	mov    rax,QWORD PTR [rbp-0x28]
  419c32:	mov    rdi,rax
  419c35:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419c3a:	mov    rax,QWORD PTR [rbp-0x8]
  419c3e:	leave  
  419c3f:	ret    

0000000000419c40 <flatcc_builder_create_union_vector_direct@@Base>:
  419c40:	endbr64 
  419c44:	push   rbp
  419c45:	mov    rbp,rsp
  419c48:	sub    rsp,0x30
  419c4c:	mov    QWORD PTR [rbp-0x18],rdi
  419c50:	mov    QWORD PTR [rbp-0x20],rsi
  419c54:	mov    QWORD PTR [rbp-0x28],rdx
  419c58:	mov    QWORD PTR [rbp-0x30],rcx
  419c5c:	mov    DWORD PTR [rbp-0x8],0x0
  419c63:	mov    DWORD PTR [rbp-0x4],0x0
  419c6a:	mov    rcx,QWORD PTR [rbp-0x20]
  419c6e:	mov    rdx,QWORD PTR [rbp-0x30]
  419c72:	mov    rsi,QWORD PTR [rbp-0x28]
  419c76:	mov    rax,QWORD PTR [rbp-0x18]
  419c7a:	mov    rdi,rax
  419c7d:	call   41935b <flatcc_builder_vector_edit@@Base+0x16>
  419c82:	mov    DWORD PTR [rbp-0x4],eax
  419c85:	mov    eax,DWORD PTR [rbp-0x4]
  419c88:	test   eax,eax
  419c8a:	jne    419c92 <flatcc_builder_create_union_vector_direct@@Base+0x52>
  419c8c:	mov    rax,QWORD PTR [rbp-0x8]
  419c90:	jmp    419ccb <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  419c92:	mov    rdx,QWORD PTR [rbp-0x30]
  419c96:	mov    rsi,QWORD PTR [rbp-0x20]
  419c9a:	mov    rax,QWORD PTR [rbp-0x18]
  419c9e:	mov    r9d,0xffffffff
  419ca4:	mov    r8d,0x1
  419caa:	mov    ecx,0x1
  419caf:	mov    rdi,rax
  419cb2:	call   418fe3 <flatcc_builder_create_vector@@Base>
  419cb7:	mov    DWORD PTR [rbp-0x8],eax
  419cba:	mov    eax,DWORD PTR [rbp-0x8]
  419cbd:	test   eax,eax
  419cbf:	jne    419cc7 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  419cc1:	mov    rax,QWORD PTR [rbp-0x8]
  419cc5:	jmp    419ccb <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  419cc7:	mov    rax,QWORD PTR [rbp-0x8]
  419ccb:	leave  
  419ccc:	ret    

0000000000419ccd <flatcc_builder_start_union_vector@@Base>:
  419ccd:	endbr64 
  419cd1:	push   rbp
  419cd2:	mov    rbp,rsp
  419cd5:	sub    rsp,0x10
  419cd9:	mov    QWORD PTR [rbp-0x8],rdi
  419cdd:	mov    rax,QWORD PTR [rbp-0x8]
  419ce1:	mov    esi,0x4
  419ce6:	mov    rdi,rax
  419ce9:	call   416638 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  419cee:	test   eax,eax
  419cf0:	je     419cf9 <flatcc_builder_start_union_vector@@Base+0x2c>
  419cf2:	mov    eax,0xffffffff
  419cf7:	jmp    419d3b <flatcc_builder_start_union_vector@@Base+0x6e>
  419cf9:	mov    rax,QWORD PTR [rbp-0x8]
  419cfd:	mov    rax,QWORD PTR [rax+0x30]
  419d01:	mov    DWORD PTR [rax+0x10],0x8
  419d08:	mov    rax,QWORD PTR [rbp-0x8]
  419d0c:	mov    rax,QWORD PTR [rax+0x30]
  419d10:	mov    DWORD PTR [rax+0x14],0x0
  419d17:	mov    rax,QWORD PTR [rbp-0x8]
  419d1b:	mov    rax,QWORD PTR [rax+0x30]
  419d1f:	mov    WORD PTR [rax+0xe],0x7
  419d25:	mov    rax,QWORD PTR [rbp-0x8]
  419d29:	mov    esi,0xfffffffc
  419d2e:	mov    rdi,rax
  419d31:	call   41580e <flatcc_builder_default_alloc@@Base+0x173>
  419d36:	mov    eax,0x0
  419d3b:	leave  
  419d3c:	ret    

0000000000419d3d <flatcc_builder_end_union_vector@@Base>:
  419d3d:	endbr64 
  419d41:	push   rbp
  419d42:	mov    rbp,rsp
  419d45:	sub    rsp,0x40
  419d49:	mov    QWORD PTR [rbp-0x38],rdi
  419d4d:	mov    DWORD PTR [rbp-0x8],0x0
  419d54:	mov    DWORD PTR [rbp-0x4],0x0
  419d5b:	mov    rax,QWORD PTR [rbp-0x38]
  419d5f:	mov    rax,QWORD PTR [rax+0x30]
  419d63:	movzx  eax,WORD PTR [rax+0xe]
  419d67:	cmp    ax,0x7
  419d6b:	je     419d8c <flatcc_builder_end_union_vector@@Base+0x4f>
  419d6d:	lea    rcx,[rip+0x906c]        # 422de0 <flatcc_builder_padding_base@@Base+0xb80>
  419d74:	mov    edx,0x651
  419d79:	lea    rsi,[rip+0x86e0]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419d80:	lea    rdi,[rip+0x8a71]        # 4227f8 <flatcc_builder_padding_base@@Base+0x598>
  419d87:	call   4041f0 <__assert_fail@plt>
  419d8c:	mov    rax,QWORD PTR [rbp-0x38]
  419d90:	mov    rdi,rax
  419d93:	call   419e9c <flatcc_builder_union_vector_count@@Base>
  419d98:	mov    QWORD PTR [rbp-0x28],rax
  419d9c:	mov    rax,QWORD PTR [rbp-0x28]
  419da0:	mov    edx,eax
  419da2:	mov    eax,edx
  419da4:	shl    eax,0x2
  419da7:	add    edx,eax
  419da9:	mov    rax,QWORD PTR [rbp-0x38]
  419dad:	mov    esi,edx
  419daf:	mov    rdi,rax
  419db2:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  419db7:	mov    QWORD PTR [rbp-0x20],rax
  419dbb:	cmp    QWORD PTR [rbp-0x20],0x0
  419dc0:	jne    419dcb <flatcc_builder_end_union_vector@@Base+0x8e>
  419dc2:	mov    rax,QWORD PTR [rbp-0x8]
  419dc6:	jmp    419e84 <flatcc_builder_end_union_vector@@Base+0x147>
  419dcb:	mov    rax,QWORD PTR [rbp-0x28]
  419dcf:	lea    rdx,[rax*4+0x0]
  419dd7:	mov    rax,QWORD PTR [rbp-0x20]
  419ddb:	add    rax,rdx
  419dde:	mov    QWORD PTR [rbp-0x18],rax
  419de2:	mov    rax,QWORD PTR [rbp-0x38]
  419de6:	mov    rdi,rax
  419de9:	call   419e86 <flatcc_builder_union_vector_edit@@Base>
  419dee:	mov    QWORD PTR [rbp-0x10],rax
  419df2:	mov    QWORD PTR [rbp-0x30],0x0
  419dfa:	jmp    419e4e <flatcc_builder_end_union_vector@@Base+0x111>
  419dfc:	mov    rax,QWORD PTR [rbp-0x30]
  419e00:	lea    rdx,[rax*8+0x0]
  419e08:	mov    rax,QWORD PTR [rbp-0x10]
  419e0c:	add    rax,rdx
  419e0f:	mov    rcx,QWORD PTR [rbp-0x18]
  419e13:	mov    rdx,QWORD PTR [rbp-0x30]
  419e17:	add    rdx,rcx
  419e1a:	movzx  eax,BYTE PTR [rax]
  419e1d:	mov    BYTE PTR [rdx],al
  419e1f:	mov    rax,QWORD PTR [rbp-0x30]
  419e23:	lea    rdx,[rax*8+0x0]
  419e2b:	mov    rax,QWORD PTR [rbp-0x10]
  419e2f:	add    rax,rdx
  419e32:	mov    rdx,QWORD PTR [rbp-0x30]
  419e36:	lea    rcx,[rdx*4+0x0]
  419e3e:	mov    rdx,QWORD PTR [rbp-0x20]
  419e42:	add    rdx,rcx
  419e45:	mov    eax,DWORD PTR [rax+0x4]
  419e48:	mov    DWORD PTR [rdx],eax
  419e4a:	inc    QWORD PTR [rbp-0x30]
  419e4e:	mov    rax,QWORD PTR [rbp-0x30]
  419e52:	cmp    rax,QWORD PTR [rbp-0x28]
  419e56:	jb     419dfc <flatcc_builder_end_union_vector@@Base+0xbf>
  419e58:	mov    rcx,QWORD PTR [rbp-0x28]
  419e5c:	mov    rdx,QWORD PTR [rbp-0x20]
  419e60:	mov    rsi,QWORD PTR [rbp-0x18]
  419e64:	mov    rax,QWORD PTR [rbp-0x38]
  419e68:	mov    rdi,rax
  419e6b:	call   419c40 <flatcc_builder_create_union_vector_direct@@Base>
  419e70:	mov    QWORD PTR [rbp-0x8],rax
  419e74:	mov    rax,QWORD PTR [rbp-0x38]
  419e78:	mov    rdi,rax
  419e7b:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419e80:	mov    rax,QWORD PTR [rbp-0x8]
  419e84:	leave  
  419e85:	ret    

0000000000419e86 <flatcc_builder_union_vector_edit@@Base>:
  419e86:	endbr64 
  419e8a:	push   rbp
  419e8b:	mov    rbp,rsp
  419e8e:	mov    QWORD PTR [rbp-0x8],rdi
  419e92:	mov    rax,QWORD PTR [rbp-0x8]
  419e96:	mov    rax,QWORD PTR [rax+0x18]
  419e9a:	pop    rbp
  419e9b:	ret    

0000000000419e9c <flatcc_builder_union_vector_count@@Base>:
  419e9c:	endbr64 
  419ea0:	push   rbp
  419ea1:	mov    rbp,rsp
  419ea4:	mov    QWORD PTR [rbp-0x8],rdi
  419ea8:	mov    rax,QWORD PTR [rbp-0x8]
  419eac:	mov    rax,QWORD PTR [rax+0x30]
  419eb0:	mov    eax,DWORD PTR [rax+0x14]
  419eb3:	mov    eax,eax
  419eb5:	pop    rbp
  419eb6:	ret    

0000000000419eb7 <flatcc_builder_extend_union_vector@@Base>:
  419eb7:	endbr64 
  419ebb:	push   rbp
  419ebc:	mov    rbp,rsp
  419ebf:	sub    rsp,0x10
  419ec3:	mov    QWORD PTR [rbp-0x8],rdi
  419ec7:	mov    QWORD PTR [rbp-0x10],rsi
  419ecb:	mov    rax,QWORD PTR [rbp-0x10]
  419ecf:	mov    ecx,eax
  419ed1:	mov    rax,QWORD PTR [rbp-0x8]
  419ed5:	mov    edx,0x1fffffff
  419eda:	mov    esi,ecx
  419edc:	mov    rdi,rax
  419edf:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  419ee4:	test   eax,eax
  419ee6:	je     419eef <flatcc_builder_extend_union_vector@@Base+0x38>
  419ee8:	mov    eax,0x0
  419eed:	jmp    419f08 <flatcc_builder_extend_union_vector@@Base+0x51>
  419eef:	mov    rax,QWORD PTR [rbp-0x10]
  419ef3:	lea    edx,[rax*8+0x0]
  419efa:	mov    rax,QWORD PTR [rbp-0x8]
  419efe:	mov    esi,edx
  419f00:	mov    rdi,rax
  419f03:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  419f08:	leave  
  419f09:	ret    

0000000000419f0a <flatcc_builder_truncate_union_vector@@Base>:
  419f0a:	endbr64 
  419f0e:	push   rbp
  419f0f:	mov    rbp,rsp
  419f12:	sub    rsp,0x10
  419f16:	mov    QWORD PTR [rbp-0x8],rdi
  419f1a:	mov    QWORD PTR [rbp-0x10],rsi
  419f1e:	mov    rax,QWORD PTR [rbp-0x8]
  419f22:	mov    rax,QWORD PTR [rax+0x30]
  419f26:	movzx  eax,WORD PTR [rax+0xe]
  419f2a:	cmp    ax,0x7
  419f2e:	je     419f4f <flatcc_builder_truncate_union_vector@@Base+0x45>
  419f30:	lea    rcx,[rip+0x8ec9]        # 422e00 <flatcc_builder_padding_base@@Base+0xba0>
  419f37:	mov    edx,0x681
  419f3c:	lea    rsi,[rip+0x851d]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419f43:	lea    rdi,[rip+0x88ae]        # 4227f8 <flatcc_builder_padding_base@@Base+0x598>
  419f4a:	call   4041f0 <__assert_fail@plt>
  419f4f:	mov    rax,QWORD PTR [rbp-0x8]
  419f53:	mov    rax,QWORD PTR [rax+0x30]
  419f57:	mov    eax,DWORD PTR [rax+0x14]
  419f5a:	mov    rdx,QWORD PTR [rbp-0x10]
  419f5e:	cmp    eax,edx
  419f60:	jae    419f9b <flatcc_builder_truncate_union_vector@@Base+0x91>
  419f62:	mov    rax,QWORD PTR [rbp-0x8]
  419f66:	mov    rax,QWORD PTR [rax+0x30]
  419f6a:	mov    eax,DWORD PTR [rax+0x14]
  419f6d:	mov    rdx,QWORD PTR [rbp-0x10]
  419f71:	cmp    eax,edx
  419f73:	jae    419f94 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  419f75:	lea    rcx,[rip+0x8e84]        # 422e00 <flatcc_builder_padding_base@@Base+0xba0>
  419f7c:	mov    edx,0x682
  419f81:	lea    rsi,[rip+0x84d8]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  419f88:	lea    rdi,[rip+0x8719]        # 4226a8 <flatcc_builder_padding_base@@Base+0x448>
  419f8f:	call   4041f0 <__assert_fail@plt>
  419f94:	mov    eax,0xffffffff
  419f99:	jmp    419fde <flatcc_builder_truncate_union_vector@@Base+0xd4>
  419f9b:	mov    rax,QWORD PTR [rbp-0x8]
  419f9f:	mov    rax,QWORD PTR [rax+0x30]
  419fa3:	mov    edx,DWORD PTR [rax+0x14]
  419fa6:	mov    rax,QWORD PTR [rbp-0x10]
  419faa:	mov    ecx,eax
  419fac:	mov    rax,QWORD PTR [rbp-0x8]
  419fb0:	mov    rax,QWORD PTR [rax+0x30]
  419fb4:	sub    edx,ecx
  419fb6:	mov    DWORD PTR [rax+0x14],edx
  419fb9:	mov    rax,QWORD PTR [rbp-0x8]
  419fbd:	mov    rax,QWORD PTR [rax+0x30]
  419fc1:	mov    eax,DWORD PTR [rax+0x10]
  419fc4:	mov    rdx,QWORD PTR [rbp-0x10]
  419fc8:	imul   edx,eax
  419fcb:	mov    rax,QWORD PTR [rbp-0x8]
  419fcf:	mov    esi,edx
  419fd1:	mov    rdi,rax
  419fd4:	call   415981 <flatcc_builder_default_alloc@@Base+0x2e6>
  419fd9:	mov    eax,0x0
  419fde:	leave  
  419fdf:	ret    

0000000000419fe0 <flatcc_builder_union_vector_push@@Base>:
  419fe0:	endbr64 
  419fe4:	push   rbp
  419fe5:	mov    rbp,rsp
  419fe8:	sub    rsp,0x20
  419fec:	mov    QWORD PTR [rbp-0x18],rdi
  419ff0:	mov    QWORD PTR [rbp-0x20],rsi
  419ff4:	mov    rax,QWORD PTR [rbp-0x18]
  419ff8:	mov    rax,QWORD PTR [rax+0x30]
  419ffc:	movzx  eax,WORD PTR [rax+0xe]
  41a000:	cmp    ax,0x7
  41a004:	je     41a025 <flatcc_builder_union_vector_push@@Base+0x45>
  41a006:	lea    rcx,[rip+0x8e33]        # 422e40 <flatcc_builder_padding_base@@Base+0xbe0>
  41a00d:	mov    edx,0x68d
  41a012:	lea    rsi,[rip+0x8447]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a019:	lea    rdi,[rip+0x87d8]        # 4227f8 <flatcc_builder_padding_base@@Base+0x598>
  41a020:	call   4041f0 <__assert_fail@plt>
  41a025:	mov    rax,QWORD PTR [rbp-0x18]
  41a029:	mov    rax,QWORD PTR [rax+0x30]
  41a02d:	mov    eax,DWORD PTR [rax+0x14]
  41a030:	cmp    eax,0x1fffffff
  41a035:	jne    41a03e <flatcc_builder_union_vector_push@@Base+0x5e>
  41a037:	mov    eax,0x0
  41a03c:	jmp    41a088 <flatcc_builder_union_vector_push@@Base+0xa8>
  41a03e:	mov    rax,QWORD PTR [rbp-0x18]
  41a042:	mov    rax,QWORD PTR [rax+0x30]
  41a046:	mov    edx,DWORD PTR [rax+0x14]
  41a049:	mov    rax,QWORD PTR [rbp-0x18]
  41a04d:	mov    rax,QWORD PTR [rax+0x30]
  41a051:	inc    edx
  41a053:	mov    DWORD PTR [rax+0x14],edx
  41a056:	mov    rax,QWORD PTR [rbp-0x18]
  41a05a:	mov    esi,0x8
  41a05f:	mov    rdi,rax
  41a062:	call   415905 <flatcc_builder_default_alloc@@Base+0x26a>
  41a067:	mov    QWORD PTR [rbp-0x8],rax
  41a06b:	cmp    QWORD PTR [rbp-0x8],0x0
  41a070:	jne    41a079 <flatcc_builder_union_vector_push@@Base+0x99>
  41a072:	mov    eax,0x0
  41a077:	jmp    41a088 <flatcc_builder_union_vector_push@@Base+0xa8>
  41a079:	mov    rax,QWORD PTR [rbp-0x8]
  41a07d:	mov    rdx,QWORD PTR [rbp-0x20]
  41a081:	mov    QWORD PTR [rax],rdx
  41a084:	mov    rax,QWORD PTR [rbp-0x8]
  41a088:	leave  
  41a089:	ret    

000000000041a08a <flatcc_builder_append_union_vector@@Base>:
  41a08a:	endbr64 
  41a08e:	push   rbp
  41a08f:	mov    rbp,rsp
  41a092:	sub    rsp,0x20
  41a096:	mov    QWORD PTR [rbp-0x8],rdi
  41a09a:	mov    QWORD PTR [rbp-0x10],rsi
  41a09e:	mov    QWORD PTR [rbp-0x18],rdx
  41a0a2:	mov    rax,QWORD PTR [rbp-0x8]
  41a0a6:	mov    rax,QWORD PTR [rax+0x30]
  41a0aa:	movzx  eax,WORD PTR [rax+0xe]
  41a0ae:	cmp    ax,0x7
  41a0b2:	je     41a0d3 <flatcc_builder_append_union_vector@@Base+0x49>
  41a0b4:	lea    rcx,[rip+0x8dc5]        # 422e80 <flatcc_builder_padding_base@@Base+0xc20>
  41a0bb:	mov    edx,0x69c
  41a0c0:	lea    rsi,[rip+0x8399]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a0c7:	lea    rdi,[rip+0x872a]        # 4227f8 <flatcc_builder_padding_base@@Base+0x598>
  41a0ce:	call   4041f0 <__assert_fail@plt>
  41a0d3:	mov    rax,QWORD PTR [rbp-0x18]
  41a0d7:	mov    ecx,eax
  41a0d9:	mov    rax,QWORD PTR [rbp-0x8]
  41a0dd:	mov    edx,0x1fffffff
  41a0e2:	mov    esi,ecx
  41a0e4:	mov    rdi,rax
  41a0e7:	call   4178aa <flatcc_builder_end_struct@@Base+0x92>
  41a0ec:	test   eax,eax
  41a0ee:	je     41a0f7 <flatcc_builder_append_union_vector@@Base+0x6d>
  41a0f0:	mov    eax,0x0
  41a0f5:	jmp    41a115 <flatcc_builder_append_union_vector@@Base+0x8b>
  41a0f7:	mov    rax,QWORD PTR [rbp-0x18]
  41a0fb:	lea    edx,[rax*8+0x0]
  41a102:	mov    rcx,QWORD PTR [rbp-0x10]
  41a106:	mov    rax,QWORD PTR [rbp-0x8]
  41a10a:	mov    rsi,rcx
  41a10d:	mov    rdi,rax
  41a110:	call   4159cd <flatcc_builder_default_alloc@@Base+0x332>
  41a115:	leave  
  41a116:	ret    

000000000041a117 <flatcc_builder_create_string@@Base>:
  41a117:	endbr64 
  41a11b:	push   rbp
  41a11c:	mov    rbp,rsp
  41a11f:	sub    rsp,0xd0
  41a126:	mov    QWORD PTR [rbp-0xb8],rdi
  41a12d:	mov    QWORD PTR [rbp-0xc0],rsi
  41a134:	mov    QWORD PTR [rbp-0xc8],rdx
  41a13b:	mov    rax,QWORD PTR fs:0x28
  41a144:	mov    QWORD PTR [rbp-0x8],rax
  41a148:	xor    eax,eax
  41a14a:	mov    eax,0xffffffff
  41a14f:	cmp    QWORD PTR [rbp-0xc8],rax
  41a156:	jbe    41a162 <flatcc_builder_create_string@@Base+0x4b>
  41a158:	mov    eax,0x0
  41a15d:	jmp    41a305 <flatcc_builder_create_string@@Base+0x1ee>
  41a162:	mov    rax,QWORD PTR [rbp-0xc8]
  41a169:	mov    edi,eax
  41a16b:	call   4155db <main@@Base+0x4b1>
  41a170:	mov    DWORD PTR [rbp-0xa8],eax
  41a176:	mov    rax,QWORD PTR [rbp-0xc8]
  41a17d:	lea    ecx,[rax+0x1]
  41a180:	mov    rax,QWORD PTR [rbp-0xb8]
  41a187:	mov    edx,0x4
  41a18c:	mov    esi,ecx
  41a18e:	mov    rdi,rax
  41a191:	call   4168da <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41a196:	inc    eax
  41a198:	mov    DWORD PTR [rbp-0xa4],eax
  41a19e:	mov    QWORD PTR [rbp-0xa0],0x0
  41a1a9:	mov    DWORD PTR [rbp-0x98],0x0
  41a1b3:	mov    rax,QWORD PTR [rbp-0xa0]
  41a1ba:	add    rax,0x4
  41a1be:	mov    QWORD PTR [rbp-0xa0],rax
  41a1c5:	mov    eax,DWORD PTR [rbp-0x98]
  41a1cb:	cdqe   
  41a1cd:	shl    rax,0x4
  41a1d1:	add    rax,rbp
  41a1d4:	lea    rdx,[rax-0x90]
  41a1db:	lea    rax,[rbp-0xa8]
  41a1e2:	mov    QWORD PTR [rdx],rax
  41a1e5:	mov    eax,DWORD PTR [rbp-0x98]
  41a1eb:	cdqe   
  41a1ed:	shl    rax,0x4
  41a1f1:	add    rax,rbp
  41a1f4:	sub    rax,0x88
  41a1fa:	mov    QWORD PTR [rax],0x4
  41a201:	mov    eax,DWORD PTR [rbp-0x98]
  41a207:	inc    eax
  41a209:	mov    DWORD PTR [rbp-0x98],eax
  41a20f:	cmp    QWORD PTR [rbp-0xc8],0x0
  41a217:	je     41a27f <flatcc_builder_create_string@@Base+0x168>
  41a219:	mov    rdx,QWORD PTR [rbp-0xa0]
  41a220:	mov    rax,QWORD PTR [rbp-0xc8]
  41a227:	add    rax,rdx
  41a22a:	mov    QWORD PTR [rbp-0xa0],rax
  41a231:	mov    eax,DWORD PTR [rbp-0x98]
  41a237:	cdqe   
  41a239:	shl    rax,0x4
  41a23d:	add    rax,rbp
  41a240:	lea    rdx,[rax-0x90]
  41a247:	mov    rax,QWORD PTR [rbp-0xc0]
  41a24e:	mov    QWORD PTR [rdx],rax
  41a251:	mov    eax,DWORD PTR [rbp-0x98]
  41a257:	cdqe   
  41a259:	shl    rax,0x4
  41a25d:	add    rax,rbp
  41a260:	lea    rdx,[rax-0x88]
  41a267:	mov    rax,QWORD PTR [rbp-0xc8]
  41a26e:	mov    QWORD PTR [rdx],rax
  41a271:	mov    eax,DWORD PTR [rbp-0x98]
  41a277:	inc    eax
  41a279:	mov    DWORD PTR [rbp-0x98],eax
  41a27f:	cmp    DWORD PTR [rbp-0xa4],0x0
  41a286:	je     41a2ec <flatcc_builder_create_string@@Base+0x1d5>
  41a288:	mov    rdx,QWORD PTR [rbp-0xa0]
  41a28f:	mov    eax,DWORD PTR [rbp-0xa4]
  41a295:	add    rax,rdx
  41a298:	mov    QWORD PTR [rbp-0xa0],rax
  41a29f:	mov    eax,DWORD PTR [rbp-0x98]
  41a2a5:	cdqe   
  41a2a7:	shl    rax,0x4
  41a2ab:	add    rax,rbp
  41a2ae:	sub    rax,0x90
  41a2b4:	mov    rdx,0x422260
  41a2bb:	mov    QWORD PTR [rax],rdx
  41a2be:	mov    edx,DWORD PTR [rbp-0x98]
  41a2c4:	mov    eax,DWORD PTR [rbp-0xa4]
  41a2ca:	movsxd rdx,edx
  41a2cd:	shl    rdx,0x4
  41a2d1:	add    rdx,rbp
  41a2d4:	sub    rdx,0x88
  41a2db:	mov    QWORD PTR [rdx],rax
  41a2de:	mov    eax,DWORD PTR [rbp-0x98]
  41a2e4:	inc    eax
  41a2e6:	mov    DWORD PTR [rbp-0x98],eax
  41a2ec:	lea    rdx,[rbp-0xa0]
  41a2f3:	mov    rax,QWORD PTR [rbp-0xb8]
  41a2fa:	mov    rsi,rdx
  41a2fd:	mov    rdi,rax
  41a300:	call   416924 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41a305:	mov    rcx,QWORD PTR [rbp-0x8]
  41a309:	xor    rcx,QWORD PTR fs:0x28
  41a312:	je     41a319 <flatcc_builder_create_string@@Base+0x202>
  41a314:	call   4041c0 <__stack_chk_fail@plt>
  41a319:	leave  
  41a31a:	ret    

000000000041a31b <flatcc_builder_create_string_str@@Base>:
  41a31b:	endbr64 
  41a31f:	push   rbp
  41a320:	mov    rbp,rsp
  41a323:	sub    rsp,0x10
  41a327:	mov    QWORD PTR [rbp-0x8],rdi
  41a32b:	mov    QWORD PTR [rbp-0x10],rsi
  41a32f:	mov    rax,QWORD PTR [rbp-0x10]
  41a333:	mov    rdi,rax
  41a336:	call   4041b0 <strlen@plt>
  41a33b:	mov    rdx,rax
  41a33e:	mov    rcx,QWORD PTR [rbp-0x10]
  41a342:	mov    rax,QWORD PTR [rbp-0x8]
  41a346:	mov    rsi,rcx
  41a349:	mov    rdi,rax
  41a34c:	call   41a117 <flatcc_builder_create_string@@Base>
  41a351:	leave  
  41a352:	ret    

000000000041a353 <flatcc_builder_create_string_strn@@Base>:
  41a353:	endbr64 
  41a357:	push   rbp
  41a358:	mov    rbp,rsp
  41a35b:	sub    rsp,0x20
  41a35f:	mov    QWORD PTR [rbp-0x8],rdi
  41a363:	mov    QWORD PTR [rbp-0x10],rsi
  41a367:	mov    QWORD PTR [rbp-0x18],rdx
  41a36b:	mov    rdx,QWORD PTR [rbp-0x18]
  41a36f:	mov    rax,QWORD PTR [rbp-0x10]
  41a373:	mov    rsi,rdx
  41a376:	mov    rdi,rax
  41a379:	call   41565b <main@@Base+0x531>
  41a37e:	mov    rdx,rax
  41a381:	mov    rcx,QWORD PTR [rbp-0x10]
  41a385:	mov    rax,QWORD PTR [rbp-0x8]
  41a389:	mov    rsi,rcx
  41a38c:	mov    rdi,rax
  41a38f:	call   41a117 <flatcc_builder_create_string@@Base>
  41a394:	leave  
  41a395:	ret    

000000000041a396 <flatcc_builder_end_string@@Base>:
  41a396:	endbr64 
  41a39a:	push   rbp
  41a39b:	mov    rbp,rsp
  41a39e:	sub    rsp,0x20
  41a3a2:	mov    QWORD PTR [rbp-0x18],rdi
  41a3a6:	mov    rax,QWORD PTR [rbp-0x18]
  41a3aa:	mov    rax,QWORD PTR [rax+0x30]
  41a3ae:	movzx  eax,WORD PTR [rax+0xe]
  41a3b2:	cmp    ax,0x6
  41a3b6:	je     41a3d7 <flatcc_builder_end_string@@Base+0x41>
  41a3b8:	lea    rcx,[rip+0x8af1]        # 422eb0 <flatcc_builder_padding_base@@Base+0xc50>
  41a3bf:	mov    edx,0x6c4
  41a3c4:	lea    rsi,[rip+0x8095]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a3cb:	lea    rdi,[rip+0x827e]        # 422650 <flatcc_builder_padding_base@@Base+0x3f0>
  41a3d2:	call   4041f0 <__assert_fail@plt>
  41a3d7:	mov    rax,QWORD PTR [rbp-0x18]
  41a3db:	mov    rax,QWORD PTR [rax+0x30]
  41a3df:	mov    edx,DWORD PTR [rax+0x14]
  41a3e2:	mov    rax,QWORD PTR [rbp-0x18]
  41a3e6:	mov    eax,DWORD PTR [rax+0x20]
  41a3e9:	cmp    edx,eax
  41a3eb:	je     41a40c <flatcc_builder_end_string@@Base+0x76>
  41a3ed:	lea    rcx,[rip+0x8abc]        # 422eb0 <flatcc_builder_padding_base@@Base+0xc50>
  41a3f4:	mov    edx,0x6c5
  41a3f9:	lea    rsi,[rip+0x8060]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a400:	lea    rdi,[rip+0x8429]        # 422830 <flatcc_builder_padding_base@@Base+0x5d0>
  41a407:	call   4041f0 <__assert_fail@plt>
  41a40c:	mov    rax,QWORD PTR [rbp-0x18]
  41a410:	mov    eax,DWORD PTR [rax+0x20]
  41a413:	mov    edx,eax
  41a415:	mov    rax,QWORD PTR [rbp-0x18]
  41a419:	mov    rcx,QWORD PTR [rax+0x18]
  41a41d:	mov    rax,QWORD PTR [rbp-0x18]
  41a421:	mov    rsi,rcx
  41a424:	mov    rdi,rax
  41a427:	call   41a117 <flatcc_builder_create_string@@Base>
  41a42c:	mov    DWORD PTR [rbp-0x4],eax
  41a42f:	cmp    DWORD PTR [rbp-0x4],0x0
  41a433:	jne    41a43c <flatcc_builder_end_string@@Base+0xa6>
  41a435:	mov    eax,0x0
  41a43a:	jmp    41a44b <flatcc_builder_end_string@@Base+0xb5>
  41a43c:	mov    rax,QWORD PTR [rbp-0x18]
  41a440:	mov    rdi,rax
  41a443:	call   416813 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41a448:	mov    eax,DWORD PTR [rbp-0x4]
  41a44b:	leave  
  41a44c:	ret    

000000000041a44d <flatcc_builder_string_edit@@Base>:
  41a44d:	endbr64 
  41a451:	push   rbp
  41a452:	mov    rbp,rsp
  41a455:	mov    QWORD PTR [rbp-0x8],rdi
  41a459:	mov    rax,QWORD PTR [rbp-0x8]
  41a45d:	mov    rax,QWORD PTR [rax+0x18]
  41a461:	pop    rbp
  41a462:	ret    

000000000041a463 <flatcc_builder_string_len@@Base>:
  41a463:	endbr64 
  41a467:	push   rbp
  41a468:	mov    rbp,rsp
  41a46b:	mov    QWORD PTR [rbp-0x8],rdi
  41a46f:	mov    rax,QWORD PTR [rbp-0x8]
  41a473:	mov    rax,QWORD PTR [rax+0x30]
  41a477:	mov    eax,DWORD PTR [rax+0x14]
  41a47a:	mov    eax,eax
  41a47c:	pop    rbp
  41a47d:	ret    

000000000041a47e <flatcc_builder_table_add@@Base>:
  41a47e:	endbr64 
  41a482:	push   rbp
  41a483:	mov    rbp,rsp
  41a486:	sub    rsp,0x20
  41a48a:	mov    QWORD PTR [rbp-0x8],rdi
  41a48e:	mov    DWORD PTR [rbp-0xc],esi
  41a491:	mov    QWORD PTR [rbp-0x18],rdx
  41a495:	mov    eax,ecx
  41a497:	mov    WORD PTR [rbp-0x10],ax
  41a49b:	mov    rax,QWORD PTR [rbp-0x8]
  41a49f:	mov    rax,QWORD PTR [rax+0x30]
  41a4a3:	movzx  eax,WORD PTR [rax+0xe]
  41a4a7:	cmp    ax,0x3
  41a4ab:	je     41a4cc <flatcc_builder_table_add@@Base+0x4e>
  41a4ad:	lea    rcx,[rip+0x8a1c]        # 422ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41a4b4:	mov    edx,0x6ed
  41a4b9:	lea    rsi,[rip+0x7fa0]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a4c0:	lea    rdi,[rip+0x8271]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  41a4c7:	call   4041f0 <__assert_fail@plt>
  41a4cc:	cmp    DWORD PTR [rbp-0xc],0x0
  41a4d0:	js     41a4db <flatcc_builder_table_add@@Base+0x5d>
  41a4d2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41a4d9:	jle    41a4fa <flatcc_builder_table_add@@Base+0x7c>
  41a4db:	lea    rcx,[rip+0x89ee]        # 422ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41a4e2:	mov    edx,0x6ee
  41a4e7:	lea    rsi,[rip+0x7f72]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a4ee:	lea    rdi,[rip+0x8363]        # 422858 <flatcc_builder_padding_base@@Base+0x5f8>
  41a4f5:	call   4041f0 <__assert_fail@plt>
  41a4fa:	mov    rax,QWORD PTR [rbp-0x8]
  41a4fe:	movzx  eax,WORD PTR [rax+0xea]
  41a505:	cmp    WORD PTR [rbp-0x10],ax
  41a509:	jbe    41a51a <flatcc_builder_table_add@@Base+0x9c>
  41a50b:	mov    rdx,QWORD PTR [rbp-0x8]
  41a50f:	movzx  eax,WORD PTR [rbp-0x10]
  41a513:	mov    WORD PTR [rdx+0xea],ax
  41a51a:	mov    rax,QWORD PTR [rbp-0x8]
  41a51e:	mov    rax,QWORD PTR [rax+0x8]
  41a522:	mov    edx,DWORD PTR [rbp-0xc]
  41a525:	movsxd rdx,edx
  41a528:	add    rdx,rdx
  41a52b:	add    rax,rdx
  41a52e:	movzx  eax,WORD PTR [rax]
  41a531:	test   ax,ax
  41a534:	je     41a555 <flatcc_builder_table_add@@Base+0xd7>
  41a536:	lea    rcx,[rip+0x8993]        # 422ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41a53d:	mov    edx,0x6f8
  41a542:	lea    rsi,[rip+0x7f17]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a549:	lea    rdi,[rip+0x7f70]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41a550:	call   4041f0 <__assert_fail@plt>
  41a555:	mov    rax,QWORD PTR [rbp-0x8]
  41a559:	mov    edx,DWORD PTR [rax+0x14]
  41a55c:	mov    eax,DWORD PTR [rbp-0xc]
  41a55f:	xor    eax,edx
  41a561:	imul   eax,eax,0x9e3779b1
  41a567:	mov    rdx,QWORD PTR [rbp-0x18]
  41a56b:	xor    eax,edx
  41a56d:	imul   edx,eax,0x9e3779b1
  41a573:	mov    rax,QWORD PTR [rbp-0x8]
  41a577:	mov    DWORD PTR [rax+0x14],edx
  41a57a:	mov    eax,DWORD PTR [rbp-0xc]
  41a57d:	movzx  ecx,ax
  41a580:	movzx  edx,WORD PTR [rbp-0x10]
  41a584:	mov    rax,QWORD PTR [rbp-0x18]
  41a588:	mov    esi,eax
  41a58a:	mov    rax,QWORD PTR [rbp-0x8]
  41a58e:	mov    rdi,rax
  41a591:	call   415a1f <flatcc_builder_default_alloc@@Base+0x384>
  41a596:	leave  
  41a597:	ret    

000000000041a598 <flatcc_builder_table_edit@@Base>:
  41a598:	endbr64 
  41a59c:	push   rbp
  41a59d:	mov    rbp,rsp
  41a5a0:	sub    rsp,0x10
  41a5a4:	mov    QWORD PTR [rbp-0x8],rdi
  41a5a8:	mov    QWORD PTR [rbp-0x10],rsi
  41a5ac:	mov    rax,QWORD PTR [rbp-0x8]
  41a5b0:	mov    rax,QWORD PTR [rax+0x30]
  41a5b4:	movzx  eax,WORD PTR [rax+0xe]
  41a5b8:	cmp    ax,0x3
  41a5bc:	je     41a5dd <flatcc_builder_table_edit@@Base+0x45>
  41a5be:	lea    rcx,[rip+0x892b]        # 422ef0 <flatcc_builder_padding_base@@Base+0xc90>
  41a5c5:	mov    edx,0x702
  41a5ca:	lea    rsi,[rip+0x7e8f]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a5d1:	lea    rdi,[rip+0x8160]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  41a5d8:	call   4041f0 <__assert_fail@plt>
  41a5dd:	mov    rax,QWORD PTR [rbp-0x8]
  41a5e1:	mov    rdx,QWORD PTR [rax+0x18]
  41a5e5:	mov    rax,QWORD PTR [rbp-0x8]
  41a5e9:	mov    eax,DWORD PTR [rax+0x20]
  41a5ec:	mov    eax,eax
  41a5ee:	sub    rax,QWORD PTR [rbp-0x10]
  41a5f2:	add    rax,rdx
  41a5f5:	leave  
  41a5f6:	ret    

000000000041a5f7 <flatcc_builder_table_add_copy@@Base>:
  41a5f7:	endbr64 
  41a5fb:	push   rbp
  41a5fc:	mov    rbp,rsp
  41a5ff:	sub    rsp,0x30
  41a603:	mov    QWORD PTR [rbp-0x18],rdi
  41a607:	mov    DWORD PTR [rbp-0x1c],esi
  41a60a:	mov    QWORD PTR [rbp-0x28],rdx
  41a60e:	mov    QWORD PTR [rbp-0x30],rcx
  41a612:	mov    eax,r8d
  41a615:	mov    WORD PTR [rbp-0x20],ax
  41a619:	movzx  ecx,WORD PTR [rbp-0x20]
  41a61d:	mov    rdx,QWORD PTR [rbp-0x30]
  41a621:	mov    esi,DWORD PTR [rbp-0x1c]
  41a624:	mov    rax,QWORD PTR [rbp-0x18]
  41a628:	mov    rdi,rax
  41a62b:	call   41a47e <flatcc_builder_table_add@@Base>
  41a630:	mov    QWORD PTR [rbp-0x8],rax
  41a634:	cmp    QWORD PTR [rbp-0x8],0x0
  41a639:	je     41a652 <flatcc_builder_table_add_copy@@Base+0x5b>
  41a63b:	mov    rdx,QWORD PTR [rbp-0x30]
  41a63f:	mov    rcx,QWORD PTR [rbp-0x28]
  41a643:	mov    rax,QWORD PTR [rbp-0x8]
  41a647:	mov    rsi,rcx
  41a64a:	mov    rdi,rax
  41a64d:	call   404260 <memcpy@plt>
  41a652:	mov    rax,QWORD PTR [rbp-0x8]
  41a656:	leave  
  41a657:	ret    

000000000041a658 <flatcc_builder_table_add_offset@@Base>:
  41a658:	endbr64 
  41a65c:	push   rbp
  41a65d:	mov    rbp,rsp
  41a660:	sub    rsp,0x10
  41a664:	mov    QWORD PTR [rbp-0x8],rdi
  41a668:	mov    DWORD PTR [rbp-0xc],esi
  41a66b:	mov    rax,QWORD PTR [rbp-0x8]
  41a66f:	mov    rax,QWORD PTR [rax+0x30]
  41a673:	movzx  eax,WORD PTR [rax+0xe]
  41a677:	cmp    ax,0x3
  41a67b:	je     41a69c <flatcc_builder_table_add_offset@@Base+0x44>
  41a67d:	lea    rcx,[rip+0x889c]        # 422f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41a684:	mov    edx,0x713
  41a689:	lea    rsi,[rip+0x7dd0]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a690:	lea    rdi,[rip+0x80a1]        # 422738 <flatcc_builder_padding_base@@Base+0x4d8>
  41a697:	call   4041f0 <__assert_fail@plt>
  41a69c:	cmp    DWORD PTR [rbp-0xc],0x0
  41a6a0:	js     41a6ab <flatcc_builder_table_add_offset@@Base+0x53>
  41a6a2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41a6a9:	jle    41a6ca <flatcc_builder_table_add_offset@@Base+0x72>
  41a6ab:	lea    rcx,[rip+0x886e]        # 422f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41a6b2:	mov    edx,0x714
  41a6b7:	lea    rsi,[rip+0x7da2]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a6be:	lea    rdi,[rip+0x8193]        # 422858 <flatcc_builder_padding_base@@Base+0x5f8>
  41a6c5:	call   4041f0 <__assert_fail@plt>
  41a6ca:	mov    rax,QWORD PTR [rbp-0x8]
  41a6ce:	mov    rax,QWORD PTR [rax+0x8]
  41a6d2:	mov    edx,DWORD PTR [rbp-0xc]
  41a6d5:	movsxd rdx,edx
  41a6d8:	add    rdx,rdx
  41a6db:	add    rax,rdx
  41a6de:	movzx  eax,WORD PTR [rax]
  41a6e1:	test   ax,ax
  41a6e4:	je     41a705 <flatcc_builder_table_add_offset@@Base+0xad>
  41a6e6:	lea    rcx,[rip+0x8833]        # 422f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41a6ed:	mov    edx,0x71b
  41a6f2:	lea    rsi,[rip+0x7d67]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41a6f9:	lea    rdi,[rip+0x7dc0]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41a700:	call   4041f0 <__assert_fail@plt>
  41a705:	mov    rax,QWORD PTR [rbp-0x8]
  41a709:	mov    edx,DWORD PTR [rax+0x14]
  41a70c:	mov    eax,DWORD PTR [rbp-0xc]
  41a70f:	xor    eax,edx
  41a711:	imul   eax,eax,0x9e3779b1
  41a717:	xor    eax,0x4
  41a71a:	imul   edx,eax,0x9e3779b1
  41a720:	mov    rax,QWORD PTR [rbp-0x8]
  41a724:	mov    DWORD PTR [rax+0x14],edx
  41a727:	mov    eax,DWORD PTR [rbp-0xc]
  41a72a:	movzx  edx,ax
  41a72d:	mov    rax,QWORD PTR [rbp-0x8]
  41a731:	mov    esi,edx
  41a733:	mov    rdi,rax
  41a736:	call   415ae7 <flatcc_builder_default_alloc@@Base+0x44c>
  41a73b:	leave  
  41a73c:	ret    

000000000041a73d <flatcc_builder_push_buffer_alignment@@Base>:
  41a73d:	endbr64 
  41a741:	push   rbp
  41a742:	mov    rbp,rsp
  41a745:	mov    QWORD PTR [rbp-0x18],rdi
  41a749:	mov    rax,QWORD PTR [rbp-0x18]
  41a74d:	movzx  eax,WORD PTR [rax+0xe8]
  41a754:	mov    WORD PTR [rbp-0x2],ax
  41a758:	mov    rax,QWORD PTR [rbp-0x18]
  41a75c:	mov    WORD PTR [rax+0xe8],0x4
  41a765:	movzx  eax,WORD PTR [rbp-0x2]
  41a769:	pop    rbp
  41a76a:	ret    

000000000041a76b <flatcc_builder_pop_buffer_alignment@@Base>:
  41a76b:	endbr64 
  41a76f:	push   rbp
  41a770:	mov    rbp,rsp
  41a773:	sub    rsp,0x10
  41a777:	mov    QWORD PTR [rbp-0x8],rdi
  41a77b:	mov    eax,esi
  41a77d:	mov    WORD PTR [rbp-0xc],ax
  41a781:	movzx  edx,WORD PTR [rbp-0xc]
  41a785:	mov    rax,QWORD PTR [rbp-0x8]
  41a789:	mov    esi,edx
  41a78b:	mov    rdi,rax
  41a78e:	call   416307 <flatcc_builder_clear@@Base+0x99>
  41a793:	nop
  41a794:	leave  
  41a795:	ret    

000000000041a796 <flatcc_builder_get_buffer_alignment@@Base>:
  41a796:	endbr64 
  41a79a:	push   rbp
  41a79b:	mov    rbp,rsp
  41a79e:	mov    QWORD PTR [rbp-0x8],rdi
  41a7a2:	mov    rax,QWORD PTR [rbp-0x8]
  41a7a6:	movzx  eax,WORD PTR [rax+0xe8]
  41a7ad:	pop    rbp
  41a7ae:	ret    

000000000041a7af <flatcc_builder_set_vtable_clustering@@Base>:
  41a7af:	endbr64 
  41a7b3:	push   rbp
  41a7b4:	mov    rbp,rsp
  41a7b7:	mov    QWORD PTR [rbp-0x8],rdi
  41a7bb:	mov    DWORD PTR [rbp-0xc],esi
  41a7be:	cmp    DWORD PTR [rbp-0xc],0x0
  41a7c2:	sete   al
  41a7c5:	movzx  edx,al
  41a7c8:	mov    rax,QWORD PTR [rbp-0x8]
  41a7cc:	mov    DWORD PTR [rax+0x124],edx
  41a7d2:	nop
  41a7d3:	pop    rbp
  41a7d4:	ret    

000000000041a7d5 <flatcc_builder_set_block_align@@Base>:
  41a7d5:	endbr64 
  41a7d9:	push   rbp
  41a7da:	mov    rbp,rsp
  41a7dd:	mov    QWORD PTR [rbp-0x8],rdi
  41a7e1:	mov    eax,esi
  41a7e3:	mov    WORD PTR [rbp-0xc],ax
  41a7e7:	mov    rdx,QWORD PTR [rbp-0x8]
  41a7eb:	movzx  eax,WORD PTR [rbp-0xc]
  41a7ef:	mov    WORD PTR [rdx+0xec],ax
  41a7f6:	nop
  41a7f7:	pop    rbp
  41a7f8:	ret    

000000000041a7f9 <flatcc_builder_get_level@@Base>:
  41a7f9:	endbr64 
  41a7fd:	push   rbp
  41a7fe:	mov    rbp,rsp
  41a801:	mov    QWORD PTR [rbp-0x8],rdi
  41a805:	mov    rax,QWORD PTR [rbp-0x8]
  41a809:	mov    eax,DWORD PTR [rax+0x104]
  41a80f:	pop    rbp
  41a810:	ret    

000000000041a811 <flatcc_builder_set_max_level@@Base>:
  41a811:	endbr64 
  41a815:	push   rbp
  41a816:	mov    rbp,rsp
  41a819:	mov    QWORD PTR [rbp-0x8],rdi
  41a81d:	mov    DWORD PTR [rbp-0xc],esi
  41a820:	mov    rax,QWORD PTR [rbp-0x8]
  41a824:	mov    edx,DWORD PTR [rbp-0xc]
  41a827:	mov    DWORD PTR [rax+0x120],edx
  41a82d:	mov    rax,QWORD PTR [rbp-0x8]
  41a831:	mov    edx,DWORD PTR [rax+0x108]
  41a837:	mov    rax,QWORD PTR [rbp-0x8]
  41a83b:	mov    eax,DWORD PTR [rax+0x120]
  41a841:	cmp    edx,eax
  41a843:	jge    41a859 <flatcc_builder_set_max_level@@Base+0x48>
  41a845:	mov    rax,QWORD PTR [rbp-0x8]
  41a849:	mov    edx,DWORD PTR [rax+0x120]
  41a84f:	mov    rax,QWORD PTR [rbp-0x8]
  41a853:	mov    DWORD PTR [rax+0x108],edx
  41a859:	nop
  41a85a:	pop    rbp
  41a85b:	ret    

000000000041a85c <flatcc_builder_get_buffer_size@@Base>:
  41a85c:	endbr64 
  41a860:	push   rbp
  41a861:	mov    rbp,rsp
  41a864:	mov    QWORD PTR [rbp-0x8],rdi
  41a868:	mov    rax,QWORD PTR [rbp-0x8]
  41a86c:	mov    edx,DWORD PTR [rax+0xf4]
  41a872:	mov    rax,QWORD PTR [rbp-0x8]
  41a876:	mov    eax,DWORD PTR [rax+0xf0]
  41a87c:	sub    edx,eax
  41a87e:	mov    eax,edx
  41a880:	cdqe   
  41a882:	pop    rbp
  41a883:	ret    

000000000041a884 <flatcc_builder_get_buffer_start@@Base>:
  41a884:	endbr64 
  41a888:	push   rbp
  41a889:	mov    rbp,rsp
  41a88c:	mov    QWORD PTR [rbp-0x8],rdi
  41a890:	mov    rax,QWORD PTR [rbp-0x8]
  41a894:	mov    eax,DWORD PTR [rax+0xf0]
  41a89a:	pop    rbp
  41a89b:	ret    

000000000041a89c <flatcc_builder_get_buffer_end@@Base>:
  41a89c:	endbr64 
  41a8a0:	push   rbp
  41a8a1:	mov    rbp,rsp
  41a8a4:	mov    QWORD PTR [rbp-0x8],rdi
  41a8a8:	mov    rax,QWORD PTR [rbp-0x8]
  41a8ac:	mov    eax,DWORD PTR [rax+0xf4]
  41a8b2:	pop    rbp
  41a8b3:	ret    

000000000041a8b4 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41a8b4:	endbr64 
  41a8b8:	push   rbp
  41a8b9:	mov    rbp,rsp
  41a8bc:	mov    QWORD PTR [rbp-0x8],rdi
  41a8c0:	mov    QWORD PTR [rbp-0x10],rsi
  41a8c4:	mov    rax,QWORD PTR [rbp-0x8]
  41a8c8:	mov    rdx,QWORD PTR [rbp-0x10]
  41a8cc:	mov    QWORD PTR [rax+0x118],rdx
  41a8d3:	nop
  41a8d4:	pop    rbp
  41a8d5:	ret    

000000000041a8d6 <flatcc_builder_set_identifier@@Base>:
  41a8d6:	endbr64 
  41a8da:	push   rbp
  41a8db:	mov    rbp,rsp
  41a8de:	mov    QWORD PTR [rbp-0x8],rdi
  41a8e2:	mov    QWORD PTR [rbp-0x10],rsi
  41a8e6:	cmp    QWORD PTR [rbp-0x10],0x0
  41a8eb:	je     41a8f3 <flatcc_builder_set_identifier@@Base+0x1d>
  41a8ed:	mov    rax,QWORD PTR [rbp-0x10]
  41a8f1:	jmp    41a8fa <flatcc_builder_set_identifier@@Base+0x24>
  41a8f3:	mov    rax,0x422260
  41a8fa:	mov    rdx,QWORD PTR [rbp-0x8]
  41a8fe:	add    rdx,0x110
  41a905:	mov    eax,DWORD PTR [rax]
  41a907:	mov    DWORD PTR [rdx],eax
  41a909:	nop
  41a90a:	pop    rbp
  41a90b:	ret    

000000000041a90c <flatcc_builder_get_type@@Base>:
  41a90c:	endbr64 
  41a910:	push   rbp
  41a911:	mov    rbp,rsp
  41a914:	mov    QWORD PTR [rbp-0x8],rdi
  41a918:	mov    rax,QWORD PTR [rbp-0x8]
  41a91c:	mov    rax,QWORD PTR [rax+0x30]
  41a920:	test   rax,rax
  41a923:	je     41a936 <flatcc_builder_get_type@@Base+0x2a>
  41a925:	mov    rax,QWORD PTR [rbp-0x8]
  41a929:	mov    rax,QWORD PTR [rax+0x30]
  41a92d:	movzx  eax,WORD PTR [rax+0xe]
  41a931:	movzx  eax,ax
  41a934:	jmp    41a93b <flatcc_builder_get_type@@Base+0x2f>
  41a936:	mov    eax,0x0
  41a93b:	pop    rbp
  41a93c:	ret    

000000000041a93d <flatcc_builder_get_type_at@@Base>:
  41a93d:	endbr64 
  41a941:	push   rbp
  41a942:	mov    rbp,rsp
  41a945:	mov    QWORD PTR [rbp-0x8],rdi
  41a949:	mov    DWORD PTR [rbp-0xc],esi
  41a94c:	cmp    DWORD PTR [rbp-0xc],0x0
  41a950:	jle    41a961 <flatcc_builder_get_type_at@@Base+0x24>
  41a952:	mov    rax,QWORD PTR [rbp-0x8]
  41a956:	mov    eax,DWORD PTR [rax+0x104]
  41a95c:	cmp    DWORD PTR [rbp-0xc],eax
  41a95f:	jle    41a968 <flatcc_builder_get_type_at@@Base+0x2b>
  41a961:	mov    eax,0x0
  41a966:	jmp    41a99c <flatcc_builder_get_type_at@@Base+0x5f>
  41a968:	mov    rax,QWORD PTR [rbp-0x8]
  41a96c:	mov    rcx,QWORD PTR [rax+0x30]
  41a970:	mov    rax,QWORD PTR [rbp-0x8]
  41a974:	mov    eax,DWORD PTR [rax+0x104]
  41a97a:	mov    edx,DWORD PTR [rbp-0xc]
  41a97d:	sub    edx,eax
  41a97f:	mov    eax,edx
  41a981:	movsxd rdx,eax
  41a984:	mov    rax,rdx
  41a987:	shl    rax,0x3
  41a98b:	add    rax,rdx
  41a98e:	shl    rax,0x2
  41a992:	add    rax,rcx
  41a995:	movzx  eax,WORD PTR [rax+0xe]
  41a999:	movzx  eax,ax
  41a99c:	pop    rbp
  41a99d:	ret    

000000000041a99e <flatcc_builder_get_direct_buffer@@Base>:
  41a99e:	endbr64 
  41a9a2:	push   rbp
  41a9a3:	mov    rbp,rsp
  41a9a6:	sub    rsp,0x10
  41a9aa:	mov    QWORD PTR [rbp-0x8],rdi
  41a9ae:	mov    QWORD PTR [rbp-0x10],rsi
  41a9b2:	mov    rax,QWORD PTR [rbp-0x8]
  41a9b6:	mov    eax,DWORD PTR [rax+0x128]
  41a9bc:	test   eax,eax
  41a9be:	je     41a9dc <flatcc_builder_get_direct_buffer@@Base+0x3e>
  41a9c0:	mov    rax,QWORD PTR [rbp-0x8]
  41a9c4:	lea    rdx,[rax+0x130]
  41a9cb:	mov    rax,QWORD PTR [rbp-0x10]
  41a9cf:	mov    rsi,rax
  41a9d2:	mov    rdi,rdx
  41a9d5:	call   415602 <main@@Base+0x4d8>
  41a9da:	jmp    41a9f3 <flatcc_builder_get_direct_buffer@@Base+0x55>
  41a9dc:	cmp    QWORD PTR [rbp-0x10],0x0
  41a9e1:	je     41a9ee <flatcc_builder_get_direct_buffer@@Base+0x50>
  41a9e3:	mov    rax,QWORD PTR [rbp-0x10]
  41a9e7:	mov    QWORD PTR [rax],0x0
  41a9ee:	mov    eax,0x0
  41a9f3:	leave  
  41a9f4:	ret    

000000000041a9f5 <flatcc_builder_copy_buffer@@Base>:
  41a9f5:	endbr64 
  41a9f9:	push   rbp
  41a9fa:	mov    rbp,rsp
  41a9fd:	sub    rsp,0x20
  41aa01:	mov    QWORD PTR [rbp-0x8],rdi
  41aa05:	mov    QWORD PTR [rbp-0x10],rsi
  41aa09:	mov    QWORD PTR [rbp-0x18],rdx
  41aa0d:	mov    rax,QWORD PTR [rbp-0x8]
  41aa11:	mov    eax,DWORD PTR [rax+0x128]
  41aa17:	test   eax,eax
  41aa19:	jne    41aa22 <flatcc_builder_copy_buffer@@Base+0x2d>
  41aa1b:	mov    eax,0x0
  41aa20:	jmp    41aa6e <flatcc_builder_copy_buffer@@Base+0x79>
  41aa22:	mov    rax,QWORD PTR [rbp-0x8]
  41aa26:	lea    rcx,[rax+0x130]
  41aa2d:	mov    rdx,QWORD PTR [rbp-0x18]
  41aa31:	mov    rax,QWORD PTR [rbp-0x10]
  41aa35:	mov    rsi,rax
  41aa38:	mov    rdi,rcx
  41aa3b:	call   41b6a9 <flatcc_emitter_copy_buffer@@Base>
  41aa40:	mov    QWORD PTR [rbp-0x10],rax
  41aa44:	cmp    QWORD PTR [rbp-0x10],0x0
  41aa49:	jne    41aa6a <flatcc_builder_copy_buffer@@Base+0x75>
  41aa4b:	lea    rcx,[rip+0x84ee]        # 422f40 <flatcc_builder_padding_base@@Base+0xce0>
  41aa52:	mov    edx,0x786
  41aa57:	lea    rsi,[rip+0x7a02]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41aa5e:	lea    rdi,[rip+0x7e37]        # 42289c <flatcc_builder_padding_base@@Base+0x63c>
  41aa65:	call   4041f0 <__assert_fail@plt>
  41aa6a:	mov    rax,QWORD PTR [rbp-0x10]
  41aa6e:	leave  
  41aa6f:	ret    

000000000041aa70 <flatcc_builder_finalize_buffer@@Base>:
  41aa70:	endbr64 
  41aa74:	push   rbp
  41aa75:	mov    rbp,rsp
  41aa78:	sub    rsp,0x20
  41aa7c:	mov    QWORD PTR [rbp-0x18],rdi
  41aa80:	mov    QWORD PTR [rbp-0x20],rsi
  41aa84:	mov    rax,QWORD PTR [rbp-0x18]
  41aa88:	mov    rdi,rax
  41aa8b:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  41aa90:	mov    QWORD PTR [rbp-0x10],rax
  41aa94:	cmp    QWORD PTR [rbp-0x20],0x0
  41aa99:	je     41aaa6 <flatcc_builder_finalize_buffer@@Base+0x36>
  41aa9b:	mov    rax,QWORD PTR [rbp-0x20]
  41aa9f:	mov    rdx,QWORD PTR [rbp-0x10]
  41aaa3:	mov    QWORD PTR [rax],rdx
  41aaa6:	mov    rax,QWORD PTR [rbp-0x10]
  41aaaa:	mov    rdi,rax
  41aaad:	call   404270 <malloc@plt>
  41aab2:	mov    QWORD PTR [rbp-0x8],rax
  41aab6:	cmp    QWORD PTR [rbp-0x8],0x0
  41aabb:	jne    41aadc <flatcc_builder_finalize_buffer@@Base+0x6c>
  41aabd:	lea    rcx,[rip+0x849c]        # 422f60 <flatcc_builder_padding_base@@Base+0xd00>
  41aac4:	mov    edx,0x798
  41aac9:	lea    rsi,[rip+0x7990]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41aad0:	lea    rdi,[rip+0x79e9]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41aad7:	call   4041f0 <__assert_fail@plt>
  41aadc:	mov    rdx,QWORD PTR [rbp-0x10]
  41aae0:	mov    rcx,QWORD PTR [rbp-0x8]
  41aae4:	mov    rax,QWORD PTR [rbp-0x18]
  41aae8:	mov    rsi,rcx
  41aaeb:	mov    rdi,rax
  41aaee:	call   41a9f5 <flatcc_builder_copy_buffer@@Base>
  41aaf3:	test   rax,rax
  41aaf6:	jne    41ab17 <flatcc_builder_finalize_buffer@@Base+0xa7>
  41aaf8:	lea    rcx,[rip+0x8461]        # 422f60 <flatcc_builder_padding_base@@Base+0xd00>
  41aaff:	mov    edx,0x79c
  41ab04:	lea    rsi,[rip+0x7955]        # 422460 <flatcc_builder_padding_base@@Base+0x200>
  41ab0b:	lea    rdi,[rip+0x79ae]        # 4224c0 <flatcc_builder_padding_base@@Base+0x260>
  41ab12:	call   4041f0 <__assert_fail@plt>
  41ab17:	nop
  41ab18:	endbr64 
  41ab1c:	cmp    QWORD PTR [rbp-0x8],0x0
  41ab21:	jne    41ab35 <flatcc_builder_finalize_buffer@@Base+0xc5>
  41ab23:	cmp    QWORD PTR [rbp-0x20],0x0
  41ab28:	je     41ab35 <flatcc_builder_finalize_buffer@@Base+0xc5>
  41ab2a:	mov    rax,QWORD PTR [rbp-0x20]
  41ab2e:	mov    QWORD PTR [rax],0x0
  41ab35:	mov    rax,QWORD PTR [rbp-0x8]
  41ab39:	leave  
  41ab3a:	ret    

000000000041ab3b <flatcc_builder_finalize_aligned_buffer@@Base>:
  41ab3b:	endbr64 
  41ab3f:	push   rbp
  41ab40:	mov    rbp,rsp
  41ab43:	sub    rsp,0x30
  41ab47:	mov    QWORD PTR [rbp-0x28],rdi
  41ab4b:	mov    QWORD PTR [rbp-0x30],rsi
  41ab4f:	mov    rax,QWORD PTR [rbp-0x28]
  41ab53:	mov    rdi,rax
  41ab56:	call   41a85c <flatcc_builder_get_buffer_size@@Base>
  41ab5b:	mov    QWORD PTR [rbp-0x10],rax
  41ab5f:	cmp    QWORD PTR [rbp-0x30],0x0
  41ab64:	je     41ab71 <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  41ab66:	mov    rax,QWORD PTR [rbp-0x30]
  41ab6a:	mov    rdx,QWORD PTR [rbp-0x10]
  41ab6e:	mov    QWORD PTR [rax],rdx
  41ab71:	mov    rax,QWORD PTR [rbp-0x28]
  41ab75:	mov    rdi,rax
  41ab78:	call   41a796 <flatcc_builder_get_buffer_alignment@@Base>
  41ab7d:	movzx  eax,ax
  41ab80:	mov    QWORD PTR [rbp-0x8],rax
  41ab84:	mov    rdx,QWORD PTR [rbp-0x10]
  41ab88:	mov    rax,QWORD PTR [rbp-0x8]
  41ab8c:	add    rax,rdx
  41ab8f:	lea    rdx,[rax-0x1]
  41ab93:	mov    rax,QWORD PTR [rbp-0x8]
  41ab97:	neg    rax
  41ab9a:	and    rax,rdx
  41ab9d:	mov    QWORD PTR [rbp-0x10],rax
  41aba1:	mov    rdx,QWORD PTR [rbp-0x10]
  41aba5:	mov    rax,QWORD PTR [rbp-0x8]
  41aba9:	mov    rsi,rdx
  41abac:	mov    rdi,rax
  41abaf:	call   41554e <main@@Base+0x424>
  41abb4:	mov    QWORD PTR [rbp-0x18],rax
  41abb8:	cmp    QWORD PTR [rbp-0x18],0x0
  41abbd:	je     41abf1 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  41abbf:	mov    rdx,QWORD PTR [rbp-0x10]
  41abc3:	mov    rcx,QWORD PTR [rbp-0x18]
  41abc7:	mov    rax,QWORD PTR [rbp-0x28]
  41abcb:	mov    rsi,rcx
  41abce:	mov    rdi,rax
  41abd1:	call   41a9f5 <flatcc_builder_copy_buffer@@Base>
  41abd6:	test   rax,rax
  41abd9:	jne    41abf4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  41abdb:	mov    rax,QWORD PTR [rbp-0x18]
  41abdf:	mov    rdi,rax
  41abe2:	call   404170 <free@plt>
  41abe7:	mov    QWORD PTR [rbp-0x18],0x0
  41abef:	jmp    41abf5 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  41abf1:	nop
  41abf2:	jmp    41abf5 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  41abf4:	nop
  41abf5:	cmp    QWORD PTR [rbp-0x18],0x0
  41abfa:	jne    41ac0e <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  41abfc:	cmp    QWORD PTR [rbp-0x30],0x0
  41ac01:	je     41ac0e <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  41ac03:	mov    rax,QWORD PTR [rbp-0x30]
  41ac07:	mov    QWORD PTR [rax],0x0
  41ac0e:	mov    rax,QWORD PTR [rbp-0x18]
  41ac12:	leave  
  41ac13:	ret    

000000000041ac14 <flatcc_builder_aligned_alloc@@Base>:
  41ac14:	endbr64 
  41ac18:	push   rbp
  41ac19:	mov    rbp,rsp
  41ac1c:	sub    rsp,0x10
  41ac20:	mov    QWORD PTR [rbp-0x8],rdi
  41ac24:	mov    QWORD PTR [rbp-0x10],rsi
  41ac28:	mov    rdx,QWORD PTR [rbp-0x10]
  41ac2c:	mov    rax,QWORD PTR [rbp-0x8]
  41ac30:	mov    rsi,rdx
  41ac33:	mov    rdi,rax
  41ac36:	call   41554e <main@@Base+0x424>
  41ac3b:	leave  
  41ac3c:	ret    

000000000041ac3d <flatcc_builder_aligned_free@@Base>:
  41ac3d:	endbr64 
  41ac41:	push   rbp
  41ac42:	mov    rbp,rsp
  41ac45:	sub    rsp,0x10
  41ac49:	mov    QWORD PTR [rbp-0x8],rdi
  41ac4d:	mov    rax,QWORD PTR [rbp-0x8]
  41ac51:	mov    rdi,rax
  41ac54:	call   404170 <free@plt>
  41ac59:	nop
  41ac5a:	leave  
  41ac5b:	ret    

000000000041ac5c <flatcc_builder_get_emit_context@@Base>:
  41ac5c:	endbr64 
  41ac60:	push   rbp
  41ac61:	mov    rbp,rsp
  41ac64:	mov    QWORD PTR [rbp-0x8],rdi
  41ac68:	mov    rax,QWORD PTR [rbp-0x8]
  41ac6c:	mov    rax,QWORD PTR [rax+0x38]
  41ac70:	pop    rbp
  41ac71:	ret    
  41ac72:	endbr64 
  41ac76:	push   rbp
  41ac77:	mov    rbp,rsp
  41ac7a:	sub    rsp,0x20
  41ac7e:	mov    QWORD PTR [rbp-0x18],rdi
  41ac82:	mov    QWORD PTR [rbp-0x8],0x0
  41ac8a:	mov    rax,QWORD PTR [rbp-0x18]
  41ac8e:	mov    rax,QWORD PTR [rax]
  41ac91:	test   rax,rax
  41ac94:	je     41acf2 <flatcc_builder_get_emit_context@@Base+0x96>
  41ac96:	mov    rax,QWORD PTR [rbp-0x18]
  41ac9a:	mov    rax,QWORD PTR [rax]
  41ac9d:	mov    rdx,QWORD PTR [rax+0xb88]
  41aca4:	mov    rax,QWORD PTR [rbp-0x18]
  41aca8:	mov    rax,QWORD PTR [rax+0x8]
  41acac:	cmp    rdx,rax
  41acaf:	je     41acf2 <flatcc_builder_get_emit_context@@Base+0x96>
  41acb1:	mov    rax,QWORD PTR [rbp-0x18]
  41acb5:	mov    rax,QWORD PTR [rax]
  41acb8:	mov    edx,DWORD PTR [rax+0xb90]
  41acbe:	mov    rax,QWORD PTR [rbp-0x18]
  41acc2:	mov    rax,QWORD PTR [rax]
  41acc5:	mov    rax,QWORD PTR [rax+0xb88]
  41accc:	sub    edx,0xb80
  41acd2:	mov    DWORD PTR [rax+0xb90],edx
  41acd8:	mov    rax,QWORD PTR [rbp-0x18]
  41acdc:	mov    rax,QWORD PTR [rax]
  41acdf:	mov    rdx,QWORD PTR [rax+0xb88]
  41ace6:	mov    rax,QWORD PTR [rbp-0x18]
  41acea:	mov    QWORD PTR [rax],rdx
  41aced:	jmp    41ae2a <flatcc_builder_get_emit_context@@Base+0x1ce>
  41acf2:	mov    edi,0xb98
  41acf7:	call   404270 <malloc@plt>
  41acfc:	mov    QWORD PTR [rbp-0x8],rax
  41ad00:	cmp    QWORD PTR [rbp-0x8],0x0
  41ad05:	jne    41ad11 <flatcc_builder_get_emit_context@@Base+0xb5>
  41ad07:	mov    eax,0xffffffff
  41ad0c:	jmp    41ae78 <flatcc_builder_get_emit_context@@Base+0x21c>
  41ad11:	mov    rax,QWORD PTR [rbp-0x18]
  41ad15:	mov    rax,QWORD PTR [rax+0x38]
  41ad19:	lea    rdx,[rax+0xb80]
  41ad20:	mov    rax,QWORD PTR [rbp-0x18]
  41ad24:	mov    QWORD PTR [rax+0x38],rdx
  41ad28:	mov    rax,QWORD PTR [rbp-0x18]
  41ad2c:	mov    rax,QWORD PTR [rax]
  41ad2f:	test   rax,rax
  41ad32:	je     41ad8e <flatcc_builder_get_emit_context@@Base+0x132>
  41ad34:	mov    rax,QWORD PTR [rbp-0x18]
  41ad38:	mov    rdx,QWORD PTR [rax+0x8]
  41ad3c:	mov    rax,QWORD PTR [rbp-0x8]
  41ad40:	mov    QWORD PTR [rax+0xb88],rdx
  41ad47:	mov    rax,QWORD PTR [rbp-0x18]
  41ad4b:	mov    rdx,QWORD PTR [rax]
  41ad4e:	mov    rax,QWORD PTR [rbp-0x8]
  41ad52:	mov    QWORD PTR [rax+0xb80],rdx
  41ad59:	mov    rax,QWORD PTR [rbp-0x18]
  41ad5d:	mov    rax,QWORD PTR [rax]
  41ad60:	mov    rdx,QWORD PTR [rbp-0x8]
  41ad64:	mov    QWORD PTR [rax+0xb88],rdx
  41ad6b:	mov    rax,QWORD PTR [rbp-0x18]
  41ad6f:	mov    rax,QWORD PTR [rax+0x8]
  41ad73:	mov    rdx,QWORD PTR [rbp-0x8]
  41ad77:	mov    QWORD PTR [rax+0xb80],rdx
  41ad7e:	mov    rax,QWORD PTR [rbp-0x18]
  41ad82:	mov    rdx,QWORD PTR [rbp-0x8]
  41ad86:	mov    QWORD PTR [rax],rdx
  41ad89:	jmp    41ae2a <flatcc_builder_get_emit_context@@Base+0x1ce>
  41ad8e:	mov    rax,QWORD PTR [rbp-0x18]
  41ad92:	mov    rdx,QWORD PTR [rbp-0x8]
  41ad96:	mov    QWORD PTR [rax],rdx
  41ad99:	mov    rax,QWORD PTR [rbp-0x18]
  41ad9d:	mov    rdx,QWORD PTR [rbp-0x8]
  41ada1:	mov    QWORD PTR [rax+0x8],rdx
  41ada5:	mov    rax,QWORD PTR [rbp-0x8]
  41ada9:	mov    rdx,QWORD PTR [rbp-0x8]
  41adad:	mov    QWORD PTR [rax+0xb80],rdx
  41adb4:	mov    rax,QWORD PTR [rbp-0x8]
  41adb8:	mov    rdx,QWORD PTR [rbp-0x8]
  41adbc:	mov    QWORD PTR [rax+0xb88],rdx
  41adc3:	mov    rax,QWORD PTR [rbp-0x18]
  41adc7:	mov    rax,QWORD PTR [rax]
  41adca:	lea    rdx,[rax+0x5c0]
  41add1:	mov    rax,QWORD PTR [rbp-0x18]
  41add5:	mov    QWORD PTR [rax+0x10],rdx
  41add9:	mov    rax,QWORD PTR [rbp-0x18]
  41addd:	mov    rdx,QWORD PTR [rax+0x10]
  41ade1:	mov    rax,QWORD PTR [rbp-0x18]
  41ade5:	mov    QWORD PTR [rax+0x20],rdx
  41ade9:	mov    rax,QWORD PTR [rbp-0x18]
  41aded:	mov    QWORD PTR [rax+0x18],0x5c0
  41adf5:	mov    rax,QWORD PTR [rbp-0x18]
  41adf9:	mov    rax,QWORD PTR [rax+0x18]
  41adfd:	mov    edx,0xb80
  41ae02:	sub    rdx,rax
  41ae05:	mov    rax,QWORD PTR [rbp-0x18]
  41ae09:	mov    QWORD PTR [rax+0x28],rdx
  41ae0d:	mov    rax,QWORD PTR [rbp-0x18]
  41ae11:	mov    rax,QWORD PTR [rax+0x18]
  41ae15:	neg    eax
  41ae17:	mov    edx,eax
  41ae19:	mov    rax,QWORD PTR [rbp-0x8]
  41ae1d:	mov    DWORD PTR [rax+0xb90],edx
  41ae23:	mov    eax,0x0
  41ae28:	jmp    41ae78 <flatcc_builder_get_emit_context@@Base+0x21c>
  41ae2a:	mov    rax,QWORD PTR [rbp-0x18]
  41ae2e:	mov    rax,QWORD PTR [rax]
  41ae31:	lea    rdx,[rax+0xb80]
  41ae38:	mov    rax,QWORD PTR [rbp-0x18]
  41ae3c:	mov    QWORD PTR [rax+0x10],rdx
  41ae40:	mov    rax,QWORD PTR [rbp-0x18]
  41ae44:	mov    QWORD PTR [rax+0x18],0xb80
  41ae4c:	mov    rax,QWORD PTR [rbp-0x18]
  41ae50:	mov    rax,QWORD PTR [rax]
  41ae53:	mov    rax,QWORD PTR [rax+0xb80]
  41ae5a:	mov    edx,DWORD PTR [rax+0xb90]
  41ae60:	mov    rax,QWORD PTR [rbp-0x18]
  41ae64:	mov    rax,QWORD PTR [rax]
  41ae67:	sub    edx,0xb80
  41ae6d:	mov    DWORD PTR [rax+0xb90],edx
  41ae73:	mov    eax,0x0
  41ae78:	leave  
  41ae79:	ret    
  41ae7a:	endbr64 
  41ae7e:	push   rbp
  41ae7f:	mov    rbp,rsp
  41ae82:	sub    rsp,0x20
  41ae86:	mov    QWORD PTR [rbp-0x18],rdi
  41ae8a:	mov    QWORD PTR [rbp-0x8],0x0
  41ae92:	mov    rax,QWORD PTR [rbp-0x18]
  41ae96:	mov    rax,QWORD PTR [rax+0x8]
  41ae9a:	test   rax,rax
  41ae9d:	je     41aed6 <flatcc_builder_get_emit_context@@Base+0x27a>
  41ae9f:	mov    rax,QWORD PTR [rbp-0x18]
  41aea3:	mov    rax,QWORD PTR [rax+0x8]
  41aea7:	mov    rdx,QWORD PTR [rax+0xb80]
  41aeae:	mov    rax,QWORD PTR [rbp-0x18]
  41aeb2:	mov    rax,QWORD PTR [rax]
  41aeb5:	cmp    rdx,rax
  41aeb8:	je     41aed6 <flatcc_builder_get_emit_context@@Base+0x27a>
  41aeba:	mov    rax,QWORD PTR [rbp-0x18]
  41aebe:	mov    rax,QWORD PTR [rax+0x8]
  41aec2:	mov    rdx,QWORD PTR [rax+0xb80]
  41aec9:	mov    rax,QWORD PTR [rbp-0x18]
  41aecd:	mov    QWORD PTR [rax+0x8],rdx
  41aed1:	jmp    41b010 <flatcc_builder_get_emit_context@@Base+0x3b4>
  41aed6:	mov    edi,0xb98
  41aedb:	call   404270 <malloc@plt>
  41aee0:	mov    QWORD PTR [rbp-0x8],rax
  41aee4:	cmp    QWORD PTR [rbp-0x8],0x0
  41aee9:	jne    41aef5 <flatcc_builder_get_emit_context@@Base+0x299>
  41aeeb:	mov    eax,0xffffffff
  41aef0:	jmp    41b05d <flatcc_builder_get_emit_context@@Base+0x401>
  41aef5:	mov    rax,QWORD PTR [rbp-0x18]
  41aef9:	mov    rax,QWORD PTR [rax+0x38]
  41aefd:	lea    rdx,[rax+0xb80]
  41af04:	mov    rax,QWORD PTR [rbp-0x18]
  41af08:	mov    QWORD PTR [rax+0x38],rdx
  41af0c:	mov    rax,QWORD PTR [rbp-0x18]
  41af10:	mov    rax,QWORD PTR [rax+0x8]
  41af14:	test   rax,rax
  41af17:	je     41af74 <flatcc_builder_get_emit_context@@Base+0x318>
  41af19:	mov    rax,QWORD PTR [rbp-0x18]
  41af1d:	mov    rdx,QWORD PTR [rax+0x8]
  41af21:	mov    rax,QWORD PTR [rbp-0x8]
  41af25:	mov    QWORD PTR [rax+0xb88],rdx
  41af2c:	mov    rax,QWORD PTR [rbp-0x18]
  41af30:	mov    rdx,QWORD PTR [rax]
  41af33:	mov    rax,QWORD PTR [rbp-0x8]
  41af37:	mov    QWORD PTR [rax+0xb80],rdx
  41af3e:	mov    rax,QWORD PTR [rbp-0x18]
  41af42:	mov    rax,QWORD PTR [rax]
  41af45:	mov    rdx,QWORD PTR [rbp-0x8]
  41af49:	mov    QWORD PTR [rax+0xb88],rdx
  41af50:	mov    rax,QWORD PTR [rbp-0x18]
  41af54:	mov    rax,QWORD PTR [rax+0x8]
  41af58:	mov    rdx,QWORD PTR [rbp-0x8]
  41af5c:	mov    QWORD PTR [rax+0xb80],rdx
  41af63:	mov    rax,QWORD PTR [rbp-0x18]
  41af67:	mov    rdx,QWORD PTR [rbp-0x8]
  41af6b:	mov    QWORD PTR [rax+0x8],rdx
  41af6f:	jmp    41b010 <flatcc_builder_get_emit_context@@Base+0x3b4>
  41af74:	mov    rax,QWORD PTR [rbp-0x18]
  41af78:	mov    rdx,QWORD PTR [rbp-0x8]
  41af7c:	mov    QWORD PTR [rax],rdx
  41af7f:	mov    rax,QWORD PTR [rbp-0x18]
  41af83:	mov    rdx,QWORD PTR [rbp-0x8]
  41af87:	mov    QWORD PTR [rax+0x8],rdx
  41af8b:	mov    rax,QWORD PTR [rbp-0x8]
  41af8f:	mov    rdx,QWORD PTR [rbp-0x8]
  41af93:	mov    QWORD PTR [rax+0xb80],rdx
  41af9a:	mov    rax,QWORD PTR [rbp-0x8]
  41af9e:	mov    rdx,QWORD PTR [rbp-0x8]
  41afa2:	mov    QWORD PTR [rax+0xb88],rdx
  41afa9:	mov    rax,QWORD PTR [rbp-0x18]
  41afad:	mov    rax,QWORD PTR [rax]
  41afb0:	lea    rdx,[rax+0x5c0]
  41afb7:	mov    rax,QWORD PTR [rbp-0x18]
  41afbb:	mov    QWORD PTR [rax+0x10],rdx
  41afbf:	mov    rax,QWORD PTR [rbp-0x18]
  41afc3:	mov    rdx,QWORD PTR [rax+0x10]
  41afc7:	mov    rax,QWORD PTR [rbp-0x18]
  41afcb:	mov    QWORD PTR [rax+0x20],rdx
  41afcf:	mov    rax,QWORD PTR [rbp-0x18]
  41afd3:	mov    QWORD PTR [rax+0x18],0x5c0
  41afdb:	mov    rax,QWORD PTR [rbp-0x18]
  41afdf:	mov    rax,QWORD PTR [rax+0x18]
  41afe3:	mov    edx,0xb80
  41afe8:	sub    rdx,rax
  41afeb:	mov    rax,QWORD PTR [rbp-0x18]
  41afef:	mov    QWORD PTR [rax+0x28],rdx
  41aff3:	mov    rax,QWORD PTR [rbp-0x18]
  41aff7:	mov    rax,QWORD PTR [rax+0x18]
  41affb:	neg    eax
  41affd:	mov    edx,eax
  41afff:	mov    rax,QWORD PTR [rbp-0x8]
  41b003:	mov    DWORD PTR [rax+0xb90],edx
  41b009:	mov    eax,0x0
  41b00e:	jmp    41b05d <flatcc_builder_get_emit_context@@Base+0x401>
  41b010:	mov    rax,QWORD PTR [rbp-0x18]
  41b014:	mov    rax,QWORD PTR [rax+0x8]
  41b018:	mov    rdx,rax
  41b01b:	mov    rax,QWORD PTR [rbp-0x18]
  41b01f:	mov    QWORD PTR [rax+0x20],rdx
  41b023:	mov    rax,QWORD PTR [rbp-0x18]
  41b027:	mov    QWORD PTR [rax+0x28],0xb80
  41b02f:	mov    rax,QWORD PTR [rbp-0x18]
  41b033:	mov    rax,QWORD PTR [rax+0x8]
  41b037:	mov    rax,QWORD PTR [rax+0xb88]
  41b03e:	mov    edx,DWORD PTR [rax+0xb90]
  41b044:	mov    rax,QWORD PTR [rbp-0x18]
  41b048:	mov    rax,QWORD PTR [rax+0x8]
  41b04c:	add    edx,0xb80
  41b052:	mov    DWORD PTR [rax+0xb90],edx
  41b058:	mov    eax,0x0
  41b05d:	leave  
  41b05e:	ret    
  41b05f:	endbr64 
  41b063:	push   rbp
  41b064:	mov    rbp,rsp
  41b067:	sub    rsp,0x30
  41b06b:	mov    QWORD PTR [rbp-0x18],rdi
  41b06f:	mov    QWORD PTR [rbp-0x20],rsi
  41b073:	mov    QWORD PTR [rbp-0x28],rdx
  41b077:	mov    rax,QWORD PTR [rbp-0x28]
  41b07b:	add    QWORD PTR [rbp-0x20],rax
  41b07f:	jmp    41b123 <flatcc_builder_get_emit_context@@Base+0x4c7>
  41b084:	mov    rax,QWORD PTR [rbp-0x28]
  41b088:	mov    QWORD PTR [rbp-0x8],rax
  41b08c:	mov    rax,QWORD PTR [rbp-0x18]
  41b090:	mov    rax,QWORD PTR [rax+0x18]
  41b094:	cmp    QWORD PTR [rbp-0x8],rax
  41b098:	jbe    41b0c4 <flatcc_builder_get_emit_context@@Base+0x468>
  41b09a:	mov    rax,QWORD PTR [rbp-0x18]
  41b09e:	mov    rax,QWORD PTR [rax+0x18]
  41b0a2:	mov    QWORD PTR [rbp-0x8],rax
  41b0a6:	cmp    QWORD PTR [rbp-0x8],0x0
  41b0ab:	jne    41b0c4 <flatcc_builder_get_emit_context@@Base+0x468>
  41b0ad:	mov    rax,QWORD PTR [rbp-0x18]
  41b0b1:	mov    rdi,rax
  41b0b4:	call   41ac72 <flatcc_builder_get_emit_context@@Base+0x16>
  41b0b9:	test   eax,eax
  41b0bb:	je     41b123 <flatcc_builder_get_emit_context@@Base+0x4c7>
  41b0bd:	mov    eax,0xffffffff
  41b0c2:	jmp    41b133 <flatcc_builder_get_emit_context@@Base+0x4d7>
  41b0c4:	mov    rax,QWORD PTR [rbp-0x18]
  41b0c8:	mov    rax,QWORD PTR [rax+0x10]
  41b0cc:	mov    rdx,QWORD PTR [rbp-0x8]
  41b0d0:	neg    rdx
  41b0d3:	add    rdx,rax
  41b0d6:	mov    rax,QWORD PTR [rbp-0x18]
  41b0da:	mov    QWORD PTR [rax+0x10],rdx
  41b0de:	mov    rax,QWORD PTR [rbp-0x18]
  41b0e2:	mov    rax,QWORD PTR [rax+0x18]
  41b0e6:	sub    rax,QWORD PTR [rbp-0x8]
  41b0ea:	mov    rdx,rax
  41b0ed:	mov    rax,QWORD PTR [rbp-0x18]
  41b0f1:	mov    QWORD PTR [rax+0x18],rdx
  41b0f5:	mov    rax,QWORD PTR [rbp-0x8]
  41b0f9:	neg    rax
  41b0fc:	add    QWORD PTR [rbp-0x20],rax
  41b100:	mov    rax,QWORD PTR [rbp-0x8]
  41b104:	sub    QWORD PTR [rbp-0x28],rax
  41b108:	mov    rax,QWORD PTR [rbp-0x18]
  41b10c:	mov    rax,QWORD PTR [rax+0x10]
  41b110:	mov    rdx,QWORD PTR [rbp-0x8]
  41b114:	mov    rcx,QWORD PTR [rbp-0x20]
  41b118:	mov    rsi,rcx
  41b11b:	mov    rdi,rax
  41b11e:	call   404260 <memcpy@plt>
  41b123:	cmp    QWORD PTR [rbp-0x28],0x0
  41b128:	jne    41b084 <flatcc_builder_get_emit_context@@Base+0x428>
  41b12e:	mov    eax,0x0
  41b133:	leave  
  41b134:	ret    
  41b135:	endbr64 
  41b139:	push   rbp
  41b13a:	mov    rbp,rsp
  41b13d:	sub    rsp,0x30
  41b141:	mov    QWORD PTR [rbp-0x18],rdi
  41b145:	mov    QWORD PTR [rbp-0x20],rsi
  41b149:	mov    QWORD PTR [rbp-0x28],rdx
  41b14d:	jmp    41b1eb <flatcc_builder_get_emit_context@@Base+0x58f>
  41b152:	mov    rax,QWORD PTR [rbp-0x28]
  41b156:	mov    QWORD PTR [rbp-0x8],rax
  41b15a:	mov    rax,QWORD PTR [rbp-0x18]
  41b15e:	mov    rax,QWORD PTR [rax+0x28]
  41b162:	cmp    QWORD PTR [rbp-0x8],rax
  41b166:	jbe    41b192 <flatcc_builder_get_emit_context@@Base+0x536>
  41b168:	mov    rax,QWORD PTR [rbp-0x18]
  41b16c:	mov    rax,QWORD PTR [rax+0x28]
  41b170:	mov    QWORD PTR [rbp-0x8],rax
  41b174:	cmp    QWORD PTR [rbp-0x8],0x0
  41b179:	jne    41b192 <flatcc_builder_get_emit_context@@Base+0x536>
  41b17b:	mov    rax,QWORD PTR [rbp-0x18]
  41b17f:	mov    rdi,rax
  41b182:	call   41ae7a <flatcc_builder_get_emit_context@@Base+0x21e>
  41b187:	test   eax,eax
  41b189:	je     41b1eb <flatcc_builder_get_emit_context@@Base+0x58f>
  41b18b:	mov    eax,0xffffffff
  41b190:	jmp    41b1fb <flatcc_builder_get_emit_context@@Base+0x59f>
  41b192:	mov    rax,QWORD PTR [rbp-0x18]
  41b196:	mov    rax,QWORD PTR [rax+0x20]
  41b19a:	mov    rdx,QWORD PTR [rbp-0x8]
  41b19e:	mov    rcx,QWORD PTR [rbp-0x20]
  41b1a2:	mov    rsi,rcx
  41b1a5:	mov    rdi,rax
  41b1a8:	call   404260 <memcpy@plt>
  41b1ad:	mov    rax,QWORD PTR [rbp-0x8]
  41b1b1:	sub    QWORD PTR [rbp-0x28],rax
  41b1b5:	mov    rax,QWORD PTR [rbp-0x8]
  41b1b9:	add    QWORD PTR [rbp-0x20],rax
  41b1bd:	mov    rax,QWORD PTR [rbp-0x18]
  41b1c1:	mov    rdx,QWORD PTR [rax+0x20]
  41b1c5:	mov    rax,QWORD PTR [rbp-0x8]
  41b1c9:	add    rdx,rax
  41b1cc:	mov    rax,QWORD PTR [rbp-0x18]
  41b1d0:	mov    QWORD PTR [rax+0x20],rdx
  41b1d4:	mov    rax,QWORD PTR [rbp-0x18]
  41b1d8:	mov    rax,QWORD PTR [rax+0x28]
  41b1dc:	sub    rax,QWORD PTR [rbp-0x8]
  41b1e0:	mov    rdx,rax
  41b1e3:	mov    rax,QWORD PTR [rbp-0x18]
  41b1e7:	mov    QWORD PTR [rax+0x28],rdx
  41b1eb:	cmp    QWORD PTR [rbp-0x28],0x0
  41b1f0:	jne    41b152 <flatcc_builder_get_emit_context@@Base+0x4f6>
  41b1f6:	mov    eax,0x0
  41b1fb:	leave  
  41b1fc:	ret    

000000000041b1fd <flatcc_emitter_recycle_page@@Base>:
  41b1fd:	endbr64 
  41b201:	push   rbp
  41b202:	mov    rbp,rsp
  41b205:	mov    QWORD PTR [rbp-0x8],rdi
  41b209:	mov    QWORD PTR [rbp-0x10],rsi
  41b20d:	mov    rax,QWORD PTR [rbp-0x8]
  41b211:	mov    rax,QWORD PTR [rax]
  41b214:	cmp    QWORD PTR [rbp-0x10],rax
  41b218:	je     41b228 <flatcc_emitter_recycle_page@@Base+0x2b>
  41b21a:	mov    rax,QWORD PTR [rbp-0x8]
  41b21e:	mov    rax,QWORD PTR [rax+0x8]
  41b222:	cmp    QWORD PTR [rbp-0x10],rax
  41b226:	jne    41b232 <flatcc_emitter_recycle_page@@Base+0x35>
  41b228:	mov    eax,0xffffffff
  41b22d:	jmp    41b2c8 <flatcc_emitter_recycle_page@@Base+0xcb>
  41b232:	mov    rax,QWORD PTR [rbp-0x10]
  41b236:	mov    rax,QWORD PTR [rax+0xb80]
  41b23d:	mov    rdx,QWORD PTR [rbp-0x10]
  41b241:	mov    rdx,QWORD PTR [rdx+0xb88]
  41b248:	mov    QWORD PTR [rax+0xb88],rdx
  41b24f:	mov    rax,QWORD PTR [rbp-0x10]
  41b253:	mov    rax,QWORD PTR [rax+0xb88]
  41b25a:	mov    rdx,QWORD PTR [rbp-0x10]
  41b25e:	mov    rdx,QWORD PTR [rdx+0xb80]
  41b265:	mov    QWORD PTR [rax+0xb80],rdx
  41b26c:	mov    rax,QWORD PTR [rbp-0x8]
  41b270:	mov    rax,QWORD PTR [rax]
  41b273:	mov    rdx,QWORD PTR [rax+0xb88]
  41b27a:	mov    rax,QWORD PTR [rbp-0x10]
  41b27e:	mov    QWORD PTR [rax+0xb88],rdx
  41b285:	mov    rax,QWORD PTR [rbp-0x8]
  41b289:	mov    rdx,QWORD PTR [rax]
  41b28c:	mov    rax,QWORD PTR [rbp-0x10]
  41b290:	mov    QWORD PTR [rax+0xb80],rdx
  41b297:	mov    rax,QWORD PTR [rbp-0x10]
  41b29b:	mov    rax,QWORD PTR [rax+0xb88]
  41b2a2:	mov    rdx,QWORD PTR [rbp-0x10]
  41b2a6:	mov    QWORD PTR [rax+0xb80],rdx
  41b2ad:	mov    rax,QWORD PTR [rbp-0x10]
  41b2b1:	mov    rax,QWORD PTR [rax+0xb80]
  41b2b8:	mov    rdx,QWORD PTR [rbp-0x10]
  41b2bc:	mov    QWORD PTR [rax+0xb88],rdx
  41b2c3:	mov    eax,0x0
  41b2c8:	pop    rbp
  41b2c9:	ret    

000000000041b2ca <flatcc_emitter_reset@@Base>:
  41b2ca:	endbr64 
  41b2ce:	push   rbp
  41b2cf:	mov    rbp,rsp
  41b2d2:	sub    rsp,0x20
  41b2d6:	mov    QWORD PTR [rbp-0x18],rdi
  41b2da:	mov    rax,QWORD PTR [rbp-0x18]
  41b2de:	mov    rax,QWORD PTR [rax]
  41b2e1:	mov    QWORD PTR [rbp-0x8],rax
  41b2e5:	mov    rax,QWORD PTR [rbp-0x18]
  41b2e9:	mov    rax,QWORD PTR [rax]
  41b2ec:	test   rax,rax
  41b2ef:	je     41b459 <flatcc_emitter_reset@@Base+0x18f>
  41b2f5:	mov    rax,QWORD PTR [rbp-0x18]
  41b2f9:	mov    rdx,QWORD PTR [rax]
  41b2fc:	mov    rax,QWORD PTR [rbp-0x18]
  41b300:	mov    QWORD PTR [rax+0x8],rdx
  41b304:	mov    rax,QWORD PTR [rbp-0x18]
  41b308:	mov    rax,QWORD PTR [rax]
  41b30b:	lea    rdx,[rax+0x5c0]
  41b312:	mov    rax,QWORD PTR [rbp-0x18]
  41b316:	mov    QWORD PTR [rax+0x10],rdx
  41b31a:	mov    rax,QWORD PTR [rbp-0x18]
  41b31e:	mov    rdx,QWORD PTR [rax+0x10]
  41b322:	mov    rax,QWORD PTR [rbp-0x18]
  41b326:	mov    QWORD PTR [rax+0x20],rdx
  41b32a:	mov    rax,QWORD PTR [rbp-0x18]
  41b32e:	mov    QWORD PTR [rax+0x18],0x5c0
  41b336:	mov    rax,QWORD PTR [rbp-0x18]
  41b33a:	mov    QWORD PTR [rax+0x28],0x5c0
  41b342:	mov    rax,QWORD PTR [rbp-0x18]
  41b346:	mov    rax,QWORD PTR [rax+0x18]
  41b34a:	mov    edx,eax
  41b34c:	mov    rax,QWORD PTR [rbp-0x18]
  41b350:	mov    rax,QWORD PTR [rax]
  41b353:	neg    edx
  41b355:	mov    DWORD PTR [rax+0xb90],edx
  41b35b:	mov    rax,QWORD PTR [rbp-0x18]
  41b35f:	mov    rax,QWORD PTR [rax+0x40]
  41b363:	test   rax,rax
  41b366:	jne    41b378 <flatcc_emitter_reset@@Base+0xae>
  41b368:	mov    rax,QWORD PTR [rbp-0x18]
  41b36c:	mov    rdx,QWORD PTR [rax+0x30]
  41b370:	mov    rax,QWORD PTR [rbp-0x18]
  41b374:	mov    QWORD PTR [rax+0x40],rdx
  41b378:	mov    rax,QWORD PTR [rbp-0x18]
  41b37c:	mov    rdx,QWORD PTR [rax+0x40]
  41b380:	mov    rax,rdx
  41b383:	add    rax,rax
  41b386:	add    rax,rdx
  41b389:	shr    rax,0x2
  41b38d:	mov    rdx,rax
  41b390:	mov    rax,QWORD PTR [rbp-0x18]
  41b394:	mov    rax,QWORD PTR [rax+0x30]
  41b398:	shr    rax,0x2
  41b39c:	add    rdx,rax
  41b39f:	mov    rax,QWORD PTR [rbp-0x18]
  41b3a3:	mov    QWORD PTR [rax+0x40],rdx
  41b3a7:	mov    rax,QWORD PTR [rbp-0x18]
  41b3ab:	mov    QWORD PTR [rax+0x30],0x0
  41b3b3:	jmp    41b41f <flatcc_emitter_reset@@Base+0x155>
  41b3b5:	mov    rax,QWORD PTR [rbp-0x18]
  41b3b9:	mov    rax,QWORD PTR [rax+0x8]
  41b3bd:	mov    rax,QWORD PTR [rax+0xb80]
  41b3c4:	mov    QWORD PTR [rbp-0x8],rax
  41b3c8:	mov    rax,QWORD PTR [rbp-0x18]
  41b3cc:	mov    rax,QWORD PTR [rax+0x8]
  41b3d0:	mov    rdx,QWORD PTR [rbp-0x8]
  41b3d4:	mov    rdx,QWORD PTR [rdx+0xb80]
  41b3db:	mov    QWORD PTR [rax+0xb80],rdx
  41b3e2:	mov    rax,QWORD PTR [rbp-0x8]
  41b3e6:	mov    rax,QWORD PTR [rax+0xb80]
  41b3ed:	mov    rdx,QWORD PTR [rbp-0x18]
  41b3f1:	mov    rdx,QWORD PTR [rdx+0x8]
  41b3f5:	mov    QWORD PTR [rax+0xb88],rdx
  41b3fc:	mov    rax,QWORD PTR [rbp-0x8]
  41b400:	mov    rdi,rax
  41b403:	call   404170 <free@plt>
  41b408:	mov    rax,QWORD PTR [rbp-0x18]
  41b40c:	mov    rax,QWORD PTR [rax+0x38]
  41b410:	lea    rdx,[rax-0xb80]
  41b417:	mov    rax,QWORD PTR [rbp-0x18]
  41b41b:	mov    QWORD PTR [rax+0x38],rdx
  41b41f:	mov    rax,QWORD PTR [rbp-0x18]
  41b423:	mov    rax,QWORD PTR [rax+0x40]
  41b427:	lea    rdx,[rax+rax*1]
  41b42b:	mov    rax,QWORD PTR [rbp-0x18]
  41b42f:	mov    rax,QWORD PTR [rax+0x38]
  41b433:	cmp    rdx,rax
  41b436:	jae    41b45a <flatcc_emitter_reset@@Base+0x190>
  41b438:	mov    rax,QWORD PTR [rbp-0x18]
  41b43c:	mov    rax,QWORD PTR [rax+0x8]
  41b440:	mov    rdx,QWORD PTR [rax+0xb80]
  41b447:	mov    rax,QWORD PTR [rbp-0x18]
  41b44b:	mov    rax,QWORD PTR [rax]
  41b44e:	cmp    rdx,rax
  41b451:	jne    41b3b5 <flatcc_emitter_reset@@Base+0xeb>
  41b457:	jmp    41b45a <flatcc_emitter_reset@@Base+0x190>
  41b459:	nop
  41b45a:	leave  
  41b45b:	ret    

000000000041b45c <flatcc_emitter_clear@@Base>:
  41b45c:	endbr64 
  41b460:	push   rbp
  41b461:	mov    rbp,rsp
  41b464:	sub    rsp,0x20
  41b468:	mov    QWORD PTR [rbp-0x18],rdi
  41b46c:	mov    rax,QWORD PTR [rbp-0x18]
  41b470:	mov    rax,QWORD PTR [rax]
  41b473:	mov    QWORD PTR [rbp-0x8],rax
  41b477:	cmp    QWORD PTR [rbp-0x8],0x0
  41b47c:	je     41b4ec <flatcc_emitter_clear@@Base+0x90>
  41b47e:	mov    rax,QWORD PTR [rbp-0x8]
  41b482:	mov    rax,QWORD PTR [rax+0xb88]
  41b489:	mov    QWORD PTR [rax+0xb80],0x0
  41b494:	jmp    41b4b8 <flatcc_emitter_clear@@Base+0x5c>
  41b496:	mov    rax,QWORD PTR [rbp-0x8]
  41b49a:	mov    rax,QWORD PTR [rax+0xb80]
  41b4a1:	mov    QWORD PTR [rbp-0x8],rax
  41b4a5:	mov    rax,QWORD PTR [rbp-0x8]
  41b4a9:	mov    rax,QWORD PTR [rax+0xb88]
  41b4b0:	mov    rdi,rax
  41b4b3:	call   404170 <free@plt>
  41b4b8:	mov    rax,QWORD PTR [rbp-0x8]
  41b4bc:	mov    rax,QWORD PTR [rax+0xb80]
  41b4c3:	test   rax,rax
  41b4c6:	jne    41b496 <flatcc_emitter_clear@@Base+0x3a>
  41b4c8:	mov    rax,QWORD PTR [rbp-0x8]
  41b4cc:	mov    rdi,rax
  41b4cf:	call   404170 <free@plt>
  41b4d4:	mov    rax,QWORD PTR [rbp-0x18]
  41b4d8:	mov    edx,0x48
  41b4dd:	mov    esi,0x0
  41b4e2:	mov    rdi,rax
  41b4e5:	call   404200 <memset@plt>
  41b4ea:	jmp    41b4ed <flatcc_emitter_clear@@Base+0x91>
  41b4ec:	nop
  41b4ed:	leave  
  41b4ee:	ret    

000000000041b4ef <flatcc_emitter@@Base>:
  41b4ef:	endbr64 
  41b4f3:	push   rbp
  41b4f4:	mov    rbp,rsp
  41b4f7:	sub    rsp,0x30
  41b4fb:	mov    QWORD PTR [rbp-0x18],rdi
  41b4ff:	mov    QWORD PTR [rbp-0x20],rsi
  41b503:	mov    DWORD PTR [rbp-0x24],edx
  41b506:	mov    DWORD PTR [rbp-0x28],ecx
  41b509:	mov    QWORD PTR [rbp-0x30],r8
  41b50d:	mov    rax,QWORD PTR [rbp-0x18]
  41b511:	mov    QWORD PTR [rbp-0x8],rax
  41b515:	mov    rax,QWORD PTR [rbp-0x8]
  41b519:	mov    rdx,QWORD PTR [rax+0x30]
  41b51d:	mov    rax,QWORD PTR [rbp-0x30]
  41b521:	add    rdx,rax
  41b524:	mov    rax,QWORD PTR [rbp-0x8]
  41b528:	mov    QWORD PTR [rax+0x30],rdx
  41b52c:	cmp    DWORD PTR [rbp-0x28],0x0
  41b530:	jns    41b5d8 <flatcc_emitter@@Base+0xe9>
  41b536:	mov    rax,QWORD PTR [rbp-0x8]
  41b53a:	mov    rax,QWORD PTR [rax+0x18]
  41b53e:	cmp    QWORD PTR [rbp-0x30],rax
  41b542:	ja     41b586 <flatcc_emitter@@Base+0x97>
  41b544:	mov    rax,QWORD PTR [rbp-0x8]
  41b548:	mov    rax,QWORD PTR [rax+0x10]
  41b54c:	mov    rdx,QWORD PTR [rbp-0x30]
  41b550:	neg    rdx
  41b553:	add    rdx,rax
  41b556:	mov    rax,QWORD PTR [rbp-0x8]
  41b55a:	mov    QWORD PTR [rax+0x10],rdx
  41b55e:	mov    rax,QWORD PTR [rbp-0x8]
  41b562:	mov    rax,QWORD PTR [rax+0x18]
  41b566:	sub    rax,QWORD PTR [rbp-0x30]
  41b56a:	mov    rdx,rax
  41b56d:	mov    rax,QWORD PTR [rbp-0x8]
  41b571:	mov    QWORD PTR [rax+0x18],rdx
  41b575:	mov    rax,QWORD PTR [rbp-0x8]
  41b579:	mov    rax,QWORD PTR [rax+0x10]
  41b57d:	mov    QWORD PTR [rbp-0x10],rax
  41b581:	jmp    41b664 <flatcc_emitter@@Base+0x175>
  41b586:	mov    eax,DWORD PTR [rbp-0x24]
  41b589:	cdqe   
  41b58b:	shl    rax,0x4
  41b58f:	add    QWORD PTR [rbp-0x20],rax
  41b593:	jmp    41b5c6 <flatcc_emitter@@Base+0xd7>
  41b595:	sub    QWORD PTR [rbp-0x20],0x10
  41b59a:	mov    rax,QWORD PTR [rbp-0x20]
  41b59e:	mov    rdx,QWORD PTR [rax+0x8]
  41b5a2:	mov    rax,QWORD PTR [rbp-0x20]
  41b5a6:	mov    rcx,QWORD PTR [rax]
  41b5a9:	mov    rax,QWORD PTR [rbp-0x8]
  41b5ad:	mov    rsi,rcx
  41b5b0:	mov    rdi,rax
  41b5b3:	call   41b05f <flatcc_builder_get_emit_context@@Base+0x403>
  41b5b8:	test   eax,eax
  41b5ba:	je     41b5c6 <flatcc_emitter@@Base+0xd7>
  41b5bc:	mov    eax,0xffffffff
  41b5c1:	jmp    41b6a7 <flatcc_emitter@@Base+0x1b8>
  41b5c6:	mov    eax,DWORD PTR [rbp-0x24]
  41b5c9:	lea    edx,[rax-0x1]
  41b5cc:	mov    DWORD PTR [rbp-0x24],edx
  41b5cf:	test   eax,eax
  41b5d1:	jne    41b595 <flatcc_emitter@@Base+0xa6>
  41b5d3:	jmp    41b65d <flatcc_emitter@@Base+0x16e>
  41b5d8:	mov    rax,QWORD PTR [rbp-0x8]
  41b5dc:	mov    rax,QWORD PTR [rax+0x28]
  41b5e0:	cmp    QWORD PTR [rbp-0x30],rax
  41b5e4:	ja     41b650 <flatcc_emitter@@Base+0x161>
  41b5e6:	mov    rax,QWORD PTR [rbp-0x8]
  41b5ea:	mov    rax,QWORD PTR [rax+0x20]
  41b5ee:	mov    QWORD PTR [rbp-0x10],rax
  41b5f2:	mov    rax,QWORD PTR [rbp-0x8]
  41b5f6:	mov    rdx,QWORD PTR [rax+0x20]
  41b5fa:	mov    rax,QWORD PTR [rbp-0x30]
  41b5fe:	add    rdx,rax
  41b601:	mov    rax,QWORD PTR [rbp-0x8]
  41b605:	mov    QWORD PTR [rax+0x20],rdx
  41b609:	mov    rax,QWORD PTR [rbp-0x8]
  41b60d:	mov    rax,QWORD PTR [rax+0x28]
  41b611:	sub    rax,QWORD PTR [rbp-0x30]
  41b615:	mov    rdx,rax
  41b618:	mov    rax,QWORD PTR [rbp-0x8]
  41b61c:	mov    QWORD PTR [rax+0x28],rdx
  41b620:	jmp    41b664 <flatcc_emitter@@Base+0x175>
  41b622:	mov    rax,QWORD PTR [rbp-0x20]
  41b626:	mov    rdx,QWORD PTR [rax+0x8]
  41b62a:	mov    rax,QWORD PTR [rbp-0x20]
  41b62e:	mov    rcx,QWORD PTR [rax]
  41b631:	mov    rax,QWORD PTR [rbp-0x8]
  41b635:	mov    rsi,rcx
  41b638:	mov    rdi,rax
  41b63b:	call   41b135 <flatcc_builder_get_emit_context@@Base+0x4d9>
  41b640:	test   eax,eax
  41b642:	je     41b64b <flatcc_emitter@@Base+0x15c>
  41b644:	mov    eax,0xffffffff
  41b649:	jmp    41b6a7 <flatcc_emitter@@Base+0x1b8>
  41b64b:	add    QWORD PTR [rbp-0x20],0x10
  41b650:	mov    eax,DWORD PTR [rbp-0x24]
  41b653:	lea    edx,[rax-0x1]
  41b656:	mov    DWORD PTR [rbp-0x24],edx
  41b659:	test   eax,eax
  41b65b:	jne    41b622 <flatcc_emitter@@Base+0x133>
  41b65d:	mov    eax,0x0
  41b662:	jmp    41b6a7 <flatcc_emitter@@Base+0x1b8>
  41b664:	jmp    41b695 <flatcc_emitter@@Base+0x1a6>
  41b666:	mov    rax,QWORD PTR [rbp-0x20]
  41b66a:	mov    rdx,QWORD PTR [rax+0x8]
  41b66e:	mov    rax,QWORD PTR [rbp-0x20]
  41b672:	mov    rcx,QWORD PTR [rax]
  41b675:	mov    rax,QWORD PTR [rbp-0x10]
  41b679:	mov    rsi,rcx
  41b67c:	mov    rdi,rax
  41b67f:	call   404260 <memcpy@plt>
  41b684:	mov    rax,QWORD PTR [rbp-0x20]
  41b688:	mov    rax,QWORD PTR [rax+0x8]
  41b68c:	add    QWORD PTR [rbp-0x10],rax
  41b690:	add    QWORD PTR [rbp-0x20],0x10
  41b695:	mov    eax,DWORD PTR [rbp-0x24]
  41b698:	lea    edx,[rax-0x1]
  41b69b:	mov    DWORD PTR [rbp-0x24],edx
  41b69e:	test   eax,eax
  41b6a0:	jne    41b666 <flatcc_emitter@@Base+0x177>
  41b6a2:	mov    eax,0x0
  41b6a7:	leave  
  41b6a8:	ret    

000000000041b6a9 <flatcc_emitter_copy_buffer@@Base>:
  41b6a9:	endbr64 
  41b6ad:	push   rbp
  41b6ae:	mov    rbp,rsp
  41b6b1:	sub    rsp,0x30
  41b6b5:	mov    QWORD PTR [rbp-0x18],rdi
  41b6b9:	mov    QWORD PTR [rbp-0x20],rsi
  41b6bd:	mov    QWORD PTR [rbp-0x28],rdx
  41b6c1:	mov    rax,QWORD PTR [rbp-0x18]
  41b6c5:	mov    rax,QWORD PTR [rax+0x30]
  41b6c9:	cmp    QWORD PTR [rbp-0x28],rax
  41b6cd:	jae    41b6d9 <flatcc_emitter_copy_buffer@@Base+0x30>
  41b6cf:	mov    eax,0x0
  41b6d4:	jmp    41b7dd <flatcc_emitter_copy_buffer@@Base+0x134>
  41b6d9:	mov    rax,QWORD PTR [rbp-0x18]
  41b6dd:	mov    rax,QWORD PTR [rax]
  41b6e0:	test   rax,rax
  41b6e3:	jne    41b6ef <flatcc_emitter_copy_buffer@@Base+0x46>
  41b6e5:	mov    eax,0x0
  41b6ea:	jmp    41b7dd <flatcc_emitter_copy_buffer@@Base+0x134>
  41b6ef:	mov    rax,QWORD PTR [rbp-0x18]
  41b6f3:	mov    rdx,QWORD PTR [rax]
  41b6f6:	mov    rax,QWORD PTR [rbp-0x18]
  41b6fa:	mov    rax,QWORD PTR [rax+0x8]
  41b6fe:	cmp    rdx,rax
  41b701:	jne    41b72b <flatcc_emitter_copy_buffer@@Base+0x82>
  41b703:	mov    rax,QWORD PTR [rbp-0x18]
  41b707:	mov    rdx,QWORD PTR [rax+0x30]
  41b70b:	mov    rax,QWORD PTR [rbp-0x18]
  41b70f:	mov    rcx,QWORD PTR [rax+0x10]
  41b713:	mov    rax,QWORD PTR [rbp-0x20]
  41b717:	mov    rsi,rcx
  41b71a:	mov    rdi,rax
  41b71d:	call   404260 <memcpy@plt>
  41b722:	mov    rax,QWORD PTR [rbp-0x20]
  41b726:	jmp    41b7dd <flatcc_emitter_copy_buffer@@Base+0x134>
  41b72b:	mov    rax,QWORD PTR [rbp-0x18]
  41b72f:	mov    rax,QWORD PTR [rax+0x18]
  41b733:	mov    edx,0xb80
  41b738:	sub    rdx,rax
  41b73b:	mov    rax,rdx
  41b73e:	mov    QWORD PTR [rbp-0x8],rax
  41b742:	mov    rax,QWORD PTR [rbp-0x18]
  41b746:	mov    rcx,QWORD PTR [rax+0x10]
  41b74a:	mov    rdx,QWORD PTR [rbp-0x8]
  41b74e:	mov    rax,QWORD PTR [rbp-0x20]
  41b752:	mov    rsi,rcx
  41b755:	mov    rdi,rax
  41b758:	call   404260 <memcpy@plt>
  41b75d:	mov    rax,QWORD PTR [rbp-0x8]
  41b761:	add    QWORD PTR [rbp-0x20],rax
  41b765:	mov    rax,QWORD PTR [rbp-0x18]
  41b769:	mov    rax,QWORD PTR [rax]
  41b76c:	mov    rax,QWORD PTR [rax+0xb80]
  41b773:	mov    QWORD PTR [rbp-0x10],rax
  41b777:	jmp    41b7a8 <flatcc_emitter_copy_buffer@@Base+0xff>
  41b779:	mov    rcx,QWORD PTR [rbp-0x10]
  41b77d:	mov    rax,QWORD PTR [rbp-0x20]
  41b781:	mov    edx,0xb80
  41b786:	mov    rsi,rcx
  41b789:	mov    rdi,rax
  41b78c:	call   404260 <memcpy@plt>
  41b791:	add    QWORD PTR [rbp-0x20],0xb80
  41b799:	mov    rax,QWORD PTR [rbp-0x10]
  41b79d:	mov    rax,QWORD PTR [rax+0xb80]
  41b7a4:	mov    QWORD PTR [rbp-0x10],rax
  41b7a8:	mov    rax,QWORD PTR [rbp-0x18]
  41b7ac:	mov    rax,QWORD PTR [rax+0x8]
  41b7b0:	cmp    QWORD PTR [rbp-0x10],rax
  41b7b4:	jne    41b779 <flatcc_emitter_copy_buffer@@Base+0xd0>
  41b7b6:	mov    rax,QWORD PTR [rbp-0x18]
  41b7ba:	mov    rax,QWORD PTR [rax+0x28]
  41b7be:	mov    edx,0xb80
  41b7c3:	sub    rdx,rax
  41b7c6:	mov    rcx,QWORD PTR [rbp-0x10]
  41b7ca:	mov    rax,QWORD PTR [rbp-0x20]
  41b7ce:	mov    rsi,rcx
  41b7d1:	mov    rdi,rax
  41b7d4:	call   404260 <memcpy@plt>
  41b7d9:	mov    rax,QWORD PTR [rbp-0x20]
  41b7dd:	leave  
  41b7de:	ret    
  41b7df:	push   rbp
  41b7e0:	mov    rbp,rsp
  41b7e3:	mov    DWORD PTR [rbp-0x4],edi
  41b7e6:	mov    eax,DWORD PTR [rbp-0x4]
  41b7e9:	pop    rbp
  41b7ea:	ret    
  41b7eb:	push   rbp
  41b7ec:	mov    rbp,rsp
  41b7ef:	sub    rsp,0x8
  41b7f3:	mov    QWORD PTR [rbp-0x8],rdi
  41b7f7:	mov    rax,QWORD PTR [rbp-0x8]
  41b7fb:	mov    eax,DWORD PTR [rax]
  41b7fd:	mov    edi,eax
  41b7ff:	call   41b7df <flatcc_emitter_copy_buffer@@Base+0x136>
  41b804:	leave  
  41b805:	ret    
  41b806:	push   rbp
  41b807:	mov    rbp,rsp
  41b80a:	mov    eax,edi
  41b80c:	mov    WORD PTR [rbp-0x4],ax
  41b810:	movzx  eax,WORD PTR [rbp-0x4]
  41b814:	pop    rbp
  41b815:	ret    
  41b816:	push   rbp
  41b817:	mov    rbp,rsp
  41b81a:	sub    rsp,0x8
  41b81e:	mov    QWORD PTR [rbp-0x8],rdi
  41b822:	mov    rax,QWORD PTR [rbp-0x8]
  41b826:	movzx  eax,WORD PTR [rax]
  41b829:	movzx  eax,ax
  41b82c:	mov    edi,eax
  41b82e:	call   41b806 <flatcc_emitter_copy_buffer@@Base+0x15d>
  41b833:	leave  
  41b834:	ret    
  41b835:	push   rbp
  41b836:	mov    rbp,rsp
  41b839:	mov    DWORD PTR [rbp-0x4],edi
  41b83c:	mov    eax,DWORD PTR [rbp-0x4]
  41b83f:	pop    rbp
  41b840:	ret    
  41b841:	push   rbp
  41b842:	mov    rbp,rsp
  41b845:	mov    DWORD PTR [rbp-0x4],edi
  41b848:	mov    eax,DWORD PTR [rbp-0x4]
  41b84b:	pop    rbp
  41b84c:	ret    
  41b84d:	push   rbp
  41b84e:	mov    rbp,rsp
  41b851:	sub    rsp,0x8
  41b855:	mov    QWORD PTR [rbp-0x8],rdi
  41b859:	mov    rax,QWORD PTR [rbp-0x8]
  41b85d:	mov    eax,DWORD PTR [rax]
  41b85f:	mov    edi,eax
  41b861:	call   41b835 <flatcc_emitter_copy_buffer@@Base+0x18c>
  41b866:	leave  
  41b867:	ret    

000000000041b868 <flatcc_verify_error_string@@Base>:
  41b868:	endbr64 
  41b86c:	push   rbp
  41b86d:	mov    rbp,rsp
  41b870:	mov    DWORD PTR [rbp-0x4],edi
  41b873:	cmp    DWORD PTR [rbp-0x4],0x24
  41b877:	ja     41ba34 <flatcc_verify_error_string@@Base+0x1cc>
  41b87d:	mov    eax,DWORD PTR [rbp-0x4]
  41b880:	lea    rdx,[rax*4+0x0]
  41b888:	lea    rax,[rip+0x7ba1]        # 423430 <flatcc_builder_padding_base@@Base+0x11d0>
  41b88f:	mov    eax,DWORD PTR [rdx+rax*1]
  41b892:	movsxd rdx,eax
  41b895:	lea    rax,[rip+0x7b94]        # 423430 <flatcc_builder_padding_base@@Base+0x11d0>
  41b89c:	add    rax,rdx
  41b89f:	notrack jmp rax
  41b8a2:	lea    rax,[rip+0x76e1]        # 422f8a <flatcc_builder_padding_base@@Base+0xd2a>
  41b8a9:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8ae:	lea    rax,[rip+0x76d8]        # 422f8d <flatcc_builder_padding_base@@Base+0xd2d>
  41b8b5:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8ba:	lea    rax,[rip+0x76e4]        # 422fa5 <flatcc_builder_padding_base@@Base+0xd45>
  41b8c1:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8c6:	lea    rax,[rip+0x76ec]        # 422fb9 <flatcc_builder_padding_base@@Base+0xd59>
  41b8cd:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8d2:	lea    rax,[rip+0x76fa]        # 422fd3 <flatcc_builder_padding_base@@Base+0xd73>
  41b8d9:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8de:	lea    rax,[rip+0x770b]        # 422ff0 <flatcc_builder_padding_base@@Base+0xd90>
  41b8e5:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8ea:	lea    rax,[rip+0x7727]        # 423018 <flatcc_builder_padding_base@@Base+0xdb8>
  41b8f1:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b8f6:	lea    rax,[rip+0x773a]        # 423037 <flatcc_builder_padding_base@@Base+0xdd7>
  41b8fd:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b902:	lea    rax,[rip+0x7749]        # 423052 <flatcc_builder_padding_base@@Base+0xdf2>
  41b909:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b90e:	lea    rax,[rip+0x7751]        # 423066 <flatcc_builder_padding_base@@Base+0xe06>
  41b915:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b91a:	lea    rax,[rip+0x7759]        # 42307a <flatcc_builder_padding_base@@Base+0xe1a>
  41b921:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b926:	lea    rax,[rip+0x7762]        # 42308f <flatcc_builder_padding_base@@Base+0xe2f>
  41b92d:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b932:	lea    rax,[rip+0x7767]        # 4230a0 <flatcc_builder_padding_base@@Base+0xe40>
  41b939:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b93e:	lea    rax,[rip+0x7773]        # 4230b8 <flatcc_builder_padding_base@@Base+0xe58>
  41b945:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b94a:	lea    rax,[rip+0x7780]        # 4230d1 <flatcc_builder_padding_base@@Base+0xe71>
  41b951:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b956:	lea    rax,[rip+0x7793]        # 4230f0 <flatcc_builder_padding_base@@Base+0xe90>
  41b95d:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b962:	lea    rax,[rip+0x77af]        # 423118 <flatcc_builder_padding_base@@Base+0xeb8>
  41b969:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b96e:	lea    rax,[rip+0x77cb]        # 423140 <flatcc_builder_padding_base@@Base+0xee0>
  41b975:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b97a:	lea    rax,[rip+0x77e7]        # 423168 <flatcc_builder_padding_base@@Base+0xf08>
  41b981:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b986:	lea    rax,[rip+0x77f3]        # 423180 <flatcc_builder_padding_base@@Base+0xf20>
  41b98d:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b992:	lea    rax,[rip+0x780e]        # 4231a7 <flatcc_builder_padding_base@@Base+0xf47>
  41b999:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b99e:	lea    rax,[rip+0x781b]        # 4231c0 <flatcc_builder_padding_base@@Base+0xf60>
  41b9a5:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9aa:	lea    rax,[rip+0x783f]        # 4231f0 <flatcc_builder_padding_base@@Base+0xf90>
  41b9b1:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9b6:	lea    rax,[rip+0x786b]        # 423228 <flatcc_builder_padding_base@@Base+0xfc8>
  41b9bd:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9bf:	lea    rax,[rip+0x7892]        # 423258 <flatcc_builder_padding_base@@Base+0xff8>
  41b9c6:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9c8:	lea    rax,[rip+0x78b9]        # 423288 <flatcc_builder_padding_base@@Base+0x1028>
  41b9cf:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9d1:	lea    rax,[rip+0x78df]        # 4232b7 <flatcc_builder_padding_base@@Base+0x1057>
  41b9d8:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9da:	lea    rax,[rip+0x78ea]        # 4232cb <flatcc_builder_padding_base@@Base+0x106b>
  41b9e1:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9e3:	lea    rax,[rip+0x78fc]        # 4232e6 <flatcc_builder_padding_base@@Base+0x1086>
  41b9ea:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9ec:	lea    rax,[rip+0x790d]        # 423300 <flatcc_builder_padding_base@@Base+0x10a0>
  41b9f3:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9f5:	lea    rax,[rip+0x792c]        # 423328 <flatcc_builder_padding_base@@Base+0x10c8>
  41b9fc:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41b9fe:	lea    rax,[rip+0x7949]        # 42334e <flatcc_builder_padding_base@@Base+0x10ee>
  41ba05:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba07:	lea    rax,[rip+0x795a]        # 423368 <flatcc_builder_padding_base@@Base+0x1108>
  41ba0e:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba10:	lea    rax,[rip+0x7979]        # 423390 <flatcc_builder_padding_base@@Base+0x1130>
  41ba17:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba19:	lea    rax,[rip+0x7998]        # 4233b8 <flatcc_builder_padding_base@@Base+0x1158>
  41ba20:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba22:	lea    rax,[rip+0x79c7]        # 4233f0 <flatcc_builder_padding_base@@Base+0x1190>
  41ba29:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba2b:	lea    rax,[rip+0x79e6]        # 423418 <flatcc_builder_padding_base@@Base+0x11b8>
  41ba32:	jmp    41ba3b <flatcc_verify_error_string@@Base+0x1d3>
  41ba34:	lea    rax,[rip+0x79eb]        # 423426 <flatcc_builder_padding_base@@Base+0x11c6>
  41ba3b:	pop    rbp
  41ba3c:	ret    
  41ba3d:	push   rbp
  41ba3e:	mov    rbp,rsp
  41ba41:	sub    rsp,0x10
  41ba45:	mov    QWORD PTR [rbp-0x8],rdi
  41ba49:	mov    DWORD PTR [rbp-0xc],esi
  41ba4c:	mov    edx,DWORD PTR [rbp-0xc]
  41ba4f:	mov    rax,QWORD PTR [rbp-0x8]
  41ba53:	add    rax,rdx
  41ba56:	mov    rdi,rax
  41ba59:	call   41b7eb <flatcc_emitter_copy_buffer@@Base+0x142>
  41ba5e:	leave  
  41ba5f:	ret    
  41ba60:	push   rbp
  41ba61:	mov    rbp,rsp
  41ba64:	sub    rsp,0x20
  41ba68:	mov    QWORD PTR [rbp-0x18],rdi
  41ba6c:	mov    rax,QWORD PTR fs:0x28
  41ba75:	mov    QWORD PTR [rbp-0x8],rax
  41ba79:	xor    eax,eax
  41ba7b:	mov    DWORD PTR [rbp-0xc],0x0
  41ba82:	mov    rcx,QWORD PTR [rbp-0x18]
  41ba86:	lea    rax,[rbp-0xc]
  41ba8a:	mov    edx,0x4
  41ba8f:	mov    rsi,rcx
  41ba92:	mov    rdi,rax
  41ba95:	call   404180 <strncpy@plt>
  41ba9a:	mov    eax,DWORD PTR [rbp-0xc]
  41ba9d:	mov    edi,eax
  41ba9f:	call   41b841 <flatcc_emitter_copy_buffer@@Base+0x198>
  41baa4:	mov    rdx,QWORD PTR [rbp-0x8]
  41baa8:	xor    rdx,QWORD PTR fs:0x28
  41bab1:	je     41bab8 <flatcc_verify_error_string@@Base+0x250>
  41bab3:	call   4041c0 <__stack_chk_fail@plt>
  41bab8:	leave  
  41bab9:	ret    
  41baba:	push   rbp
  41babb:	mov    rbp,rsp
  41babe:	sub    rsp,0x10
  41bac2:	mov    QWORD PTR [rbp-0x8],rdi
  41bac6:	mov    DWORD PTR [rbp-0xc],esi
  41bac9:	mov    edx,DWORD PTR [rbp-0xc]
  41bacc:	mov    rax,QWORD PTR [rbp-0x8]
  41bad0:	add    rax,rdx
  41bad3:	mov    rdi,rax
  41bad6:	call   41b84d <flatcc_emitter_copy_buffer@@Base+0x1a4>
  41badb:	leave  
  41badc:	ret    
  41badd:	push   rbp
  41bade:	mov    rbp,rsp
  41bae1:	sub    rsp,0x10
  41bae5:	mov    QWORD PTR [rbp-0x8],rdi
  41bae9:	mov    DWORD PTR [rbp-0xc],esi
  41baec:	mov    edx,DWORD PTR [rbp-0xc]
  41baef:	mov    rax,QWORD PTR [rbp-0x8]
  41baf3:	add    rax,rdx
  41baf6:	mov    rdi,rax
  41baf9:	call   41b816 <flatcc_emitter_copy_buffer@@Base+0x16d>
  41bafe:	leave  
  41baff:	ret    
  41bb00:	push   rbp
  41bb01:	mov    rbp,rsp
  41bb04:	mov    DWORD PTR [rbp-0x14],edi
  41bb07:	mov    DWORD PTR [rbp-0x18],esi
  41bb0a:	mov    DWORD PTR [rbp-0x1c],edx
  41bb0d:	mov    edx,DWORD PTR [rbp-0x18]
  41bb10:	mov    eax,DWORD PTR [rbp-0x1c]
  41bb13:	add    eax,edx
  41bb15:	mov    DWORD PTR [rbp-0x4],eax
  41bb18:	mov    eax,DWORD PTR [rbp-0x4]
  41bb1b:	cmp    eax,DWORD PTR [rbp-0x18]
  41bb1e:	jbe    41bb41 <flatcc_verify_error_string@@Base+0x2d9>
  41bb20:	mov    eax,DWORD PTR [rbp-0x4]
  41bb23:	lea    rdx,[rax+0x4]
  41bb27:	mov    eax,DWORD PTR [rbp-0x14]
  41bb2a:	cmp    rdx,rax
  41bb2d:	ja     41bb41 <flatcc_verify_error_string@@Base+0x2d9>
  41bb2f:	mov    eax,DWORD PTR [rbp-0x4]
  41bb32:	and    eax,0x3
  41bb35:	test   rax,rax
  41bb38:	jne    41bb41 <flatcc_verify_error_string@@Base+0x2d9>
  41bb3a:	mov    eax,0x1
  41bb3f:	jmp    41bb46 <flatcc_verify_error_string@@Base+0x2de>
  41bb41:	mov    eax,0x0
  41bb46:	pop    rbp
  41bb47:	ret    
  41bb48:	push   rbp
  41bb49:	mov    rbp,rsp
  41bb4c:	mov    DWORD PTR [rbp-0x14],edi
  41bb4f:	mov    DWORD PTR [rbp-0x18],esi
  41bb52:	mov    DWORD PTR [rbp-0x1c],edx
  41bb55:	mov    eax,ecx
  41bb57:	mov    WORD PTR [rbp-0x20],ax
  41bb5b:	mov    edx,DWORD PTR [rbp-0x18]
  41bb5e:	mov    eax,DWORD PTR [rbp-0x1c]
  41bb61:	add    eax,edx
  41bb63:	mov    DWORD PTR [rbp-0x4],eax
  41bb66:	mov    eax,0x4
  41bb6b:	cmp    WORD PTR [rbp-0x20],0x4
  41bb70:	cmovae ax,WORD PTR [rbp-0x20]
  41bb75:	mov    WORD PTR [rbp-0x20],ax
  41bb79:	mov    eax,DWORD PTR [rbp-0x4]
  41bb7c:	cmp    eax,DWORD PTR [rbp-0x18]
  41bb7f:	jbe    41bbb1 <flatcc_verify_error_string@@Base+0x349>
  41bb81:	mov    eax,DWORD PTR [rbp-0x4]
  41bb84:	lea    rdx,[rax+0x4]
  41bb88:	mov    eax,DWORD PTR [rbp-0x14]
  41bb8b:	cmp    rdx,rax
  41bb8e:	ja     41bbb1 <flatcc_verify_error_string@@Base+0x349>
  41bb90:	mov    eax,DWORD PTR [rbp-0x4]
  41bb93:	lea    rdx,[rax+0x4]
  41bb97:	movzx  eax,WORD PTR [rbp-0x20]
  41bb9b:	dec    eax
  41bb9d:	or     eax,0x3
  41bba0:	cdqe   
  41bba2:	and    rax,rdx
  41bba5:	test   rax,rax
  41bba8:	jne    41bbb1 <flatcc_verify_error_string@@Base+0x349>
  41bbaa:	mov    eax,0x1
  41bbaf:	jmp    41bbb6 <flatcc_verify_error_string@@Base+0x34e>
  41bbb1:	mov    eax,0x0
  41bbb6:	pop    rbp
  41bbb7:	ret    
  41bbb8:	push   rbp
  41bbb9:	mov    rbp,rsp
  41bbbc:	mov    DWORD PTR [rbp-0x14],edi
  41bbbf:	mov    DWORD PTR [rbp-0x18],esi
  41bbc2:	mov    DWORD PTR [rbp-0x1c],edx
  41bbc5:	mov    DWORD PTR [rbp-0x20],ecx
  41bbc8:	mov    eax,r8d
  41bbcb:	mov    WORD PTR [rbp-0x24],ax
  41bbcf:	cmp    DWORD PTR [rbp-0x1c],0x0
  41bbd3:	je     41bbe2 <flatcc_verify_error_string@@Base+0x37a>
  41bbd5:	mov    edx,DWORD PTR [rbp-0x18]
  41bbd8:	mov    eax,DWORD PTR [rbp-0x1c]
  41bbdb:	add    eax,edx
  41bbdd:	cmp    DWORD PTR [rbp-0x14],eax
  41bbe0:	jae    41bbe9 <flatcc_verify_error_string@@Base+0x381>
  41bbe2:	mov    eax,0x12
  41bbe7:	jmp    41bc57 <flatcc_verify_error_string@@Base+0x3ef>
  41bbe9:	mov    eax,DWORD PTR [rbp-0x1c]
  41bbec:	add    DWORD PTR [rbp-0x18],eax
  41bbef:	mov    edx,DWORD PTR [rbp-0x18]
  41bbf2:	mov    eax,DWORD PTR [rbp-0x20]
  41bbf5:	add    eax,edx
  41bbf7:	cmp    DWORD PTR [rbp-0x18],eax
  41bbfa:	setbe  al
  41bbfd:	movzx  eax,al
  41bc00:	mov    DWORD PTR [rbp-0xc],eax
  41bc03:	cmp    DWORD PTR [rbp-0xc],0x0
  41bc07:	jne    41bc10 <flatcc_verify_error_string@@Base+0x3a8>
  41bc09:	mov    eax,0xa
  41bc0e:	jmp    41bc57 <flatcc_verify_error_string@@Base+0x3ef>
  41bc10:	mov    edx,DWORD PTR [rbp-0x18]
  41bc13:	mov    eax,DWORD PTR [rbp-0x20]
  41bc16:	add    eax,edx
  41bc18:	cmp    DWORD PTR [rbp-0x14],eax
  41bc1b:	setae  al
  41bc1e:	movzx  eax,al
  41bc21:	mov    DWORD PTR [rbp-0x8],eax
  41bc24:	cmp    DWORD PTR [rbp-0x8],0x0
  41bc28:	jne    41bc31 <flatcc_verify_error_string@@Base+0x3c9>
  41bc2a:	mov    eax,0x9
  41bc2f:	jmp    41bc57 <flatcc_verify_error_string@@Base+0x3ef>
  41bc31:	movzx  eax,WORD PTR [rbp-0x24]
  41bc35:	dec    eax
  41bc37:	and    eax,DWORD PTR [rbp-0x18]
  41bc3a:	test   eax,eax
  41bc3c:	sete   al
  41bc3f:	movzx  eax,al
  41bc42:	mov    DWORD PTR [rbp-0x4],eax
  41bc45:	cmp    DWORD PTR [rbp-0x4],0x0
  41bc49:	jne    41bc52 <flatcc_verify_error_string@@Base+0x3ea>
  41bc4b:	mov    eax,0xb
  41bc50:	jmp    41bc57 <flatcc_verify_error_string@@Base+0x3ef>
  41bc52:	mov    eax,0x0
  41bc57:	pop    rbp
  41bc58:	ret    
  41bc59:	push   rbp
  41bc5a:	mov    rbp,rsp
  41bc5d:	sub    rsp,0x20
  41bc61:	mov    QWORD PTR [rbp-0x18],rdi
  41bc65:	mov    eax,esi
  41bc67:	mov    WORD PTR [rbp-0x1c],ax
  41bc6b:	movzx  eax,WORD PTR [rbp-0x1c]
  41bc6f:	add    eax,0x2
  41bc72:	cdqe   
  41bc74:	add    eax,eax
  41bc76:	mov    WORD PTR [rbp-0x2],ax
  41bc7a:	mov    rax,QWORD PTR [rbp-0x18]
  41bc7e:	movzx  eax,WORD PTR [rax+0x1e]
  41bc82:	cmp    WORD PTR [rbp-0x2],ax
  41bc86:	jb     41bc8f <flatcc_verify_error_string@@Base+0x427>
  41bc88:	mov    eax,0x0
  41bc8d:	jmp    41bca8 <flatcc_verify_error_string@@Base+0x440>
  41bc8f:	movzx  edx,WORD PTR [rbp-0x2]
  41bc93:	mov    rax,QWORD PTR [rbp-0x18]
  41bc97:	mov    rax,QWORD PTR [rax+0x10]
  41bc9b:	mov    esi,edx
  41bc9d:	mov    rdi,rax
  41bca0:	call   41badd <flatcc_verify_error_string@@Base+0x275>
  41bca5:	movzx  eax,ax
  41bca8:	leave  
  41bca9:	ret    
  41bcaa:	push   rbp
  41bcab:	mov    rbp,rsp
  41bcae:	sub    rsp,0x20
  41bcb2:	mov    QWORD PTR [rbp-0x18],rdi
  41bcb6:	mov    eax,esi
  41bcb8:	mov    WORD PTR [rbp-0x1c],ax
  41bcbc:	movzx  edx,WORD PTR [rbp-0x1c]
  41bcc0:	mov    rax,QWORD PTR [rbp-0x18]
  41bcc4:	mov    esi,edx
  41bcc6:	mov    rdi,rax
  41bcc9:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41bcce:	mov    WORD PTR [rbp-0x2],ax
  41bcd2:	cmp    WORD PTR [rbp-0x2],0x0
  41bcd7:	je     41bcf5 <flatcc_verify_error_string@@Base+0x48d>
  41bcd9:	mov    rax,QWORD PTR [rbp-0x18]
  41bcdd:	mov    rdx,QWORD PTR [rax]
  41bce0:	mov    rax,QWORD PTR [rbp-0x18]
  41bce4:	mov    eax,DWORD PTR [rax+0x18]
  41bce7:	mov    ecx,eax
  41bce9:	movzx  eax,WORD PTR [rbp-0x2]
  41bced:	add    rax,rcx
  41bcf0:	add    rax,rdx
  41bcf3:	jmp    41bcfa <flatcc_verify_error_string@@Base+0x492>
  41bcf5:	mov    eax,0x0
  41bcfa:	leave  
  41bcfb:	ret    
  41bcfc:	endbr64 
  41bd00:	push   rbp
  41bd01:	mov    rbp,rsp
  41bd04:	sub    rsp,0x38
  41bd08:	mov    QWORD PTR [rbp-0x28],rdi
  41bd0c:	mov    eax,esi
  41bd0e:	mov    DWORD PTR [rbp-0x30],edx
  41bd11:	mov    DWORD PTR [rbp-0x34],ecx
  41bd14:	mov    edx,r8d
  41bd17:	mov    WORD PTR [rbp-0x2c],ax
  41bd1b:	mov    eax,edx
  41bd1d:	mov    WORD PTR [rbp-0x38],ax
  41bd21:	mov    rax,QWORD PTR [rbp-0x28]
  41bd25:	mov    rax,QWORD PTR [rax]
  41bd28:	mov    DWORD PTR [rbp-0x1c],eax
  41bd2b:	movzx  edx,WORD PTR [rbp-0x2c]
  41bd2f:	mov    rax,QWORD PTR [rbp-0x28]
  41bd33:	mov    esi,edx
  41bd35:	mov    rdi,rax
  41bd38:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41bd3d:	mov    WORD PTR [rbp-0x1e],ax
  41bd41:	cmp    WORD PTR [rbp-0x1e],0x0
  41bd46:	jne    41bd6c <flatcc_verify_error_string@@Base+0x504>
  41bd48:	cmp    DWORD PTR [rbp-0x30],0x0
  41bd4c:	sete   al
  41bd4f:	movzx  eax,al
  41bd52:	mov    DWORD PTR [rbp-0x18],eax
  41bd55:	cmp    DWORD PTR [rbp-0x18],0x0
  41bd59:	jne    41bd65 <flatcc_verify_error_string@@Base+0x4fd>
  41bd5b:	mov    eax,0x4
  41bd60:	jmp    41bdeb <flatcc_verify_error_string@@Base+0x583>
  41bd65:	mov    eax,0x0
  41bd6a:	jmp    41bdeb <flatcc_verify_error_string@@Base+0x583>
  41bd6c:	movzx  eax,WORD PTR [rbp-0x1e]
  41bd70:	mov    DWORD PTR [rbp-0x14],eax
  41bd73:	mov    edx,DWORD PTR [rbp-0x14]
  41bd76:	mov    eax,DWORD PTR [rbp-0x34]
  41bd79:	add    eax,edx
  41bd7b:	mov    DWORD PTR [rbp-0x10],eax
  41bd7e:	mov    rax,QWORD PTR [rbp-0x28]
  41bd82:	movzx  eax,WORD PTR [rax+0x1c]
  41bd86:	movzx  eax,ax
  41bd89:	cmp    DWORD PTR [rbp-0x10],eax
  41bd8c:	setbe  al
  41bd8f:	movzx  eax,al
  41bd92:	mov    DWORD PTR [rbp-0xc],eax
  41bd95:	cmp    DWORD PTR [rbp-0xc],0x0
  41bd99:	jne    41bda2 <flatcc_verify_error_string@@Base+0x53a>
  41bd9b:	mov    eax,0xd
  41bda0:	jmp    41bdeb <flatcc_verify_error_string@@Base+0x583>
  41bda2:	mov    DWORD PTR [rbp-0x8],0x1
  41bda9:	cmp    DWORD PTR [rbp-0x8],0x0
  41bdad:	jne    41bdb6 <flatcc_verify_error_string@@Base+0x54e>
  41bdaf:	mov    eax,0xe
  41bdb4:	jmp    41bdeb <flatcc_verify_error_string@@Base+0x583>
  41bdb6:	mov    rax,QWORD PTR [rbp-0x28]
  41bdba:	mov    edx,DWORD PTR [rax+0x18]
  41bdbd:	mov    eax,DWORD PTR [rbp-0x1c]
  41bdc0:	add    eax,edx
  41bdc2:	add    DWORD PTR [rbp-0x14],eax
  41bdc5:	movzx  eax,WORD PTR [rbp-0x38]
  41bdc9:	dec    eax
  41bdcb:	and    eax,DWORD PTR [rbp-0x14]
  41bdce:	test   eax,eax
  41bdd0:	sete   al
  41bdd3:	movzx  eax,al
  41bdd6:	mov    DWORD PTR [rbp-0x4],eax
  41bdd9:	cmp    DWORD PTR [rbp-0x4],0x0
  41bddd:	jne    41bde6 <flatcc_verify_error_string@@Base+0x57e>
  41bddf:	mov    eax,0xc
  41bde4:	jmp    41bdeb <flatcc_verify_error_string@@Base+0x583>
  41bde6:	mov    eax,0x0
  41bdeb:	leave  
  41bdec:	ret    
  41bded:	endbr64 
  41bdf1:	push   rbp
  41bdf2:	mov    rbp,rsp
  41bdf5:	sub    rsp,0x38
  41bdf9:	mov    QWORD PTR [rbp-0x28],rdi
  41bdfd:	mov    eax,esi
  41bdff:	mov    DWORD PTR [rbp-0x30],edx
  41be02:	mov    QWORD PTR [rbp-0x38],rcx
  41be06:	mov    WORD PTR [rbp-0x2c],ax
  41be0a:	movzx  edx,WORD PTR [rbp-0x2c]
  41be0e:	mov    rax,QWORD PTR [rbp-0x28]
  41be12:	mov    esi,edx
  41be14:	mov    rdi,rax
  41be17:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41be1c:	mov    WORD PTR [rbp-0x16],ax
  41be20:	cmp    WORD PTR [rbp-0x16],0x0
  41be25:	jne    41be48 <flatcc_verify_error_string@@Base+0x5e0>
  41be27:	mov    rax,QWORD PTR [rbp-0x38]
  41be2b:	mov    DWORD PTR [rax],0x0
  41be31:	cmp    DWORD PTR [rbp-0x30],0x0
  41be35:	je     41be41 <flatcc_verify_error_string@@Base+0x5d9>
  41be37:	mov    eax,0x4
  41be3c:	jmp    41bec7 <flatcc_verify_error_string@@Base+0x65f>
  41be41:	mov    eax,0x0
  41be46:	jmp    41bec7 <flatcc_verify_error_string@@Base+0x65f>
  41be48:	movzx  eax,WORD PTR [rbp-0x16]
  41be4c:	mov    DWORD PTR [rbp-0x14],eax
  41be4f:	mov    eax,DWORD PTR [rbp-0x14]
  41be52:	add    eax,0x4
  41be55:	mov    DWORD PTR [rbp-0x10],eax
  41be58:	mov    rax,QWORD PTR [rbp-0x28]
  41be5c:	movzx  eax,WORD PTR [rax+0x1c]
  41be60:	movzx  eax,ax
  41be63:	cmp    DWORD PTR [rbp-0x10],eax
  41be66:	setbe  al
  41be69:	movzx  eax,al
  41be6c:	mov    DWORD PTR [rbp-0xc],eax
  41be6f:	cmp    DWORD PTR [rbp-0xc],0x0
  41be73:	jne    41be7c <flatcc_verify_error_string@@Base+0x614>
  41be75:	mov    eax,0xd
  41be7a:	jmp    41bec7 <flatcc_verify_error_string@@Base+0x65f>
  41be7c:	mov    DWORD PTR [rbp-0x8],0x1
  41be83:	cmp    DWORD PTR [rbp-0x8],0x0
  41be87:	jne    41be90 <flatcc_verify_error_string@@Base+0x628>
  41be89:	mov    eax,0xe
  41be8e:	jmp    41bec7 <flatcc_verify_error_string@@Base+0x65f>
  41be90:	mov    rax,QWORD PTR [rbp-0x28]
  41be94:	mov    eax,DWORD PTR [rax+0x18]
  41be97:	add    DWORD PTR [rbp-0x14],eax
  41be9a:	mov    eax,DWORD PTR [rbp-0x14]
  41be9d:	and    eax,0x3
  41bea0:	test   rax,rax
  41bea3:	sete   al
  41bea6:	movzx  eax,al
  41bea9:	mov    DWORD PTR [rbp-0x4],eax
  41beac:	cmp    DWORD PTR [rbp-0x4],0x0
  41beb0:	jne    41beb9 <flatcc_verify_error_string@@Base+0x651>
  41beb2:	mov    eax,0xc
  41beb7:	jmp    41bec7 <flatcc_verify_error_string@@Base+0x65f>
  41beb9:	mov    rax,QWORD PTR [rbp-0x38]
  41bebd:	mov    edx,DWORD PTR [rbp-0x14]
  41bec0:	mov    DWORD PTR [rax],edx
  41bec2:	mov    eax,0x0
  41bec7:	leave  
  41bec8:	ret    
  41bec9:	push   rbp
  41beca:	mov    rbp,rsp
  41becd:	sub    rsp,0x28
  41bed1:	mov    QWORD PTR [rbp-0x18],rdi
  41bed5:	mov    DWORD PTR [rbp-0x1c],esi
  41bed8:	mov    DWORD PTR [rbp-0x20],edx
  41bedb:	mov    DWORD PTR [rbp-0x24],ecx
  41bede:	mov    edx,DWORD PTR [rbp-0x24]
  41bee1:	mov    ecx,DWORD PTR [rbp-0x20]
  41bee4:	mov    eax,DWORD PTR [rbp-0x1c]
  41bee7:	mov    esi,ecx
  41bee9:	mov    edi,eax
  41beeb:	call   41bb00 <flatcc_verify_error_string@@Base+0x298>
  41bef0:	mov    DWORD PTR [rbp-0x10],eax
  41bef3:	cmp    DWORD PTR [rbp-0x10],0x0
  41bef7:	jne    41bf00 <flatcc_verify_error_string@@Base+0x698>
  41bef9:	mov    eax,0x11
  41befe:	jmp    41bf71 <flatcc_verify_error_string@@Base+0x709>
  41bf00:	mov    eax,DWORD PTR [rbp-0x24]
  41bf03:	add    DWORD PTR [rbp-0x20],eax
  41bf06:	mov    edx,DWORD PTR [rbp-0x20]
  41bf09:	mov    rax,QWORD PTR [rbp-0x18]
  41bf0d:	mov    esi,edx
  41bf0f:	mov    rdi,rax
  41bf12:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41bf17:	mov    DWORD PTR [rbp-0xc],eax
  41bf1a:	add    DWORD PTR [rbp-0x20],0x4
  41bf1e:	mov    eax,DWORD PTR [rbp-0x1c]
  41bf21:	sub    eax,DWORD PTR [rbp-0x20]
  41bf24:	mov    edx,DWORD PTR [rbp-0xc]
  41bf27:	inc    edx
  41bf29:	cmp    eax,edx
  41bf2b:	setae  al
  41bf2e:	movzx  eax,al
  41bf31:	mov    DWORD PTR [rbp-0x8],eax
  41bf34:	cmp    DWORD PTR [rbp-0x8],0x0
  41bf38:	jne    41bf41 <flatcc_verify_error_string@@Base+0x6d9>
  41bf3a:	mov    eax,0x8
  41bf3f:	jmp    41bf71 <flatcc_verify_error_string@@Base+0x709>
  41bf41:	mov    edx,DWORD PTR [rbp-0x20]
  41bf44:	mov    eax,DWORD PTR [rbp-0xc]
  41bf47:	add    rdx,rax
  41bf4a:	mov    rax,QWORD PTR [rbp-0x18]
  41bf4e:	add    rax,rdx
  41bf51:	movzx  eax,BYTE PTR [rax]
  41bf54:	test   al,al
  41bf56:	sete   al
  41bf59:	movzx  eax,al
  41bf5c:	mov    DWORD PTR [rbp-0x4],eax
  41bf5f:	cmp    DWORD PTR [rbp-0x4],0x0
  41bf63:	jne    41bf6c <flatcc_verify_error_string@@Base+0x704>
  41bf65:	mov    eax,0x7
  41bf6a:	jmp    41bf71 <flatcc_verify_error_string@@Base+0x709>
  41bf6c:	mov    eax,0x0
  41bf71:	leave  
  41bf72:	ret    
  41bf73:	push   rbp
  41bf74:	mov    rbp,rsp
  41bf77:	sub    rsp,0x30
  41bf7b:	mov    QWORD PTR [rbp-0x18],rdi
  41bf7f:	mov    DWORD PTR [rbp-0x1c],esi
  41bf82:	mov    DWORD PTR [rbp-0x20],edx
  41bf85:	mov    DWORD PTR [rbp-0x24],ecx
  41bf88:	mov    DWORD PTR [rbp-0x28],r8d
  41bf8c:	mov    eax,r9d
  41bf8f:	mov    WORD PTR [rbp-0x2c],ax
  41bf93:	movzx  ecx,WORD PTR [rbp-0x2c]
  41bf97:	mov    edx,DWORD PTR [rbp-0x24]
  41bf9a:	mov    esi,DWORD PTR [rbp-0x20]
  41bf9d:	mov    eax,DWORD PTR [rbp-0x1c]
  41bfa0:	mov    edi,eax
  41bfa2:	call   41bb48 <flatcc_verify_error_string@@Base+0x2e0>
  41bfa7:	mov    DWORD PTR [rbp-0x10],eax
  41bfaa:	cmp    DWORD PTR [rbp-0x10],0x0
  41bfae:	jne    41bfb7 <flatcc_verify_error_string@@Base+0x74f>
  41bfb0:	mov    eax,0x10
  41bfb5:	jmp    41c01d <flatcc_verify_error_string@@Base+0x7b5>
  41bfb7:	mov    eax,DWORD PTR [rbp-0x24]
  41bfba:	add    DWORD PTR [rbp-0x20],eax
  41bfbd:	mov    edx,DWORD PTR [rbp-0x20]
  41bfc0:	mov    rax,QWORD PTR [rbp-0x18]
  41bfc4:	mov    esi,edx
  41bfc6:	mov    rdi,rax
  41bfc9:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41bfce:	mov    DWORD PTR [rbp-0xc],eax
  41bfd1:	add    DWORD PTR [rbp-0x20],0x4
  41bfd5:	mov    eax,DWORD PTR [rbp-0xc]
  41bfd8:	cmp    eax,DWORD PTR [rbp+0x10]
  41bfdb:	setbe  al
  41bfde:	movzx  eax,al
  41bfe1:	mov    DWORD PTR [rbp-0x8],eax
  41bfe4:	cmp    DWORD PTR [rbp-0x8],0x0
  41bfe8:	jne    41bff1 <flatcc_verify_error_string@@Base+0x789>
  41bfea:	mov    eax,0x19
  41bfef:	jmp    41c01d <flatcc_verify_error_string@@Base+0x7b5>
  41bff1:	mov    eax,DWORD PTR [rbp-0x1c]
  41bff4:	sub    eax,DWORD PTR [rbp-0x20]
  41bff7:	mov    edx,eax
  41bff9:	mov    eax,DWORD PTR [rbp-0xc]
  41bffc:	imul   eax,DWORD PTR [rbp-0x28]
  41c000:	cmp    edx,eax
  41c002:	setae  al
  41c005:	movzx  eax,al
  41c008:	mov    DWORD PTR [rbp-0x4],eax
  41c00b:	cmp    DWORD PTR [rbp-0x4],0x0
  41c00f:	jne    41c018 <flatcc_verify_error_string@@Base+0x7b0>
  41c011:	mov    eax,0x1a
  41c016:	jmp    41c01d <flatcc_verify_error_string@@Base+0x7b5>
  41c018:	mov    eax,0x0
  41c01d:	leave  
  41c01e:	ret    
  41c01f:	push   rbp
  41c020:	mov    rbp,rsp
  41c023:	sub    rsp,0x28
  41c027:	mov    QWORD PTR [rbp-0x18],rdi
  41c02b:	mov    DWORD PTR [rbp-0x1c],esi
  41c02e:	mov    DWORD PTR [rbp-0x20],edx
  41c031:	mov    DWORD PTR [rbp-0x24],ecx
  41c034:	mov    ecx,DWORD PTR [rbp-0x24]
  41c037:	mov    edx,DWORD PTR [rbp-0x20]
  41c03a:	mov    esi,DWORD PTR [rbp-0x1c]
  41c03d:	mov    rax,QWORD PTR [rbp-0x18]
  41c041:	push   0x3fffffff
  41c046:	mov    r9d,0x4
  41c04c:	mov    r8d,0x4
  41c052:	mov    rdi,rax
  41c055:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c05a:	add    rsp,0x8
  41c05e:	test   eax,eax
  41c060:	je     41c091 <flatcc_verify_error_string@@Base+0x829>
  41c062:	mov    ecx,DWORD PTR [rbp-0x24]
  41c065:	mov    edx,DWORD PTR [rbp-0x20]
  41c068:	mov    esi,DWORD PTR [rbp-0x1c]
  41c06b:	mov    rax,QWORD PTR [rbp-0x18]
  41c06f:	push   0x3fffffff
  41c074:	mov    r9d,0x4
  41c07a:	mov    r8d,0x4
  41c080:	mov    rdi,rax
  41c083:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c088:	add    rsp,0x8
  41c08c:	jmp    41c11c <flatcc_verify_error_string@@Base+0x8b4>
  41c091:	mov    eax,DWORD PTR [rbp-0x24]
  41c094:	add    DWORD PTR [rbp-0x20],eax
  41c097:	mov    edx,DWORD PTR [rbp-0x20]
  41c09a:	mov    rax,QWORD PTR [rbp-0x18]
  41c09e:	mov    esi,edx
  41c0a0:	mov    rdi,rax
  41c0a3:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c0a8:	mov    DWORD PTR [rbp-0x4],eax
  41c0ab:	add    DWORD PTR [rbp-0x20],0x4
  41c0af:	mov    DWORD PTR [rbp-0x8],0x0
  41c0b6:	jmp    41c10f <flatcc_verify_error_string@@Base+0x8a7>
  41c0b8:	mov    edx,DWORD PTR [rbp-0x20]
  41c0bb:	mov    rax,QWORD PTR [rbp-0x18]
  41c0bf:	mov    esi,edx
  41c0c1:	mov    rdi,rax
  41c0c4:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c0c9:	mov    ecx,eax
  41c0cb:	mov    edx,DWORD PTR [rbp-0x20]
  41c0ce:	mov    esi,DWORD PTR [rbp-0x1c]
  41c0d1:	mov    rax,QWORD PTR [rbp-0x18]
  41c0d5:	mov    rdi,rax
  41c0d8:	call   41bec9 <flatcc_verify_error_string@@Base+0x661>
  41c0dd:	test   eax,eax
  41c0df:	je     41c108 <flatcc_verify_error_string@@Base+0x8a0>
  41c0e1:	mov    edx,DWORD PTR [rbp-0x20]
  41c0e4:	mov    rax,QWORD PTR [rbp-0x18]
  41c0e8:	mov    esi,edx
  41c0ea:	mov    rdi,rax
  41c0ed:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c0f2:	mov    ecx,eax
  41c0f4:	mov    edx,DWORD PTR [rbp-0x20]
  41c0f7:	mov    esi,DWORD PTR [rbp-0x1c]
  41c0fa:	mov    rax,QWORD PTR [rbp-0x18]
  41c0fe:	mov    rdi,rax
  41c101:	call   41bec9 <flatcc_verify_error_string@@Base+0x661>
  41c106:	jmp    41c11c <flatcc_verify_error_string@@Base+0x8b4>
  41c108:	inc    DWORD PTR [rbp-0x8]
  41c10b:	add    DWORD PTR [rbp-0x20],0x4
  41c10f:	mov    eax,DWORD PTR [rbp-0x8]
  41c112:	cmp    eax,DWORD PTR [rbp-0x4]
  41c115:	jb     41c0b8 <flatcc_verify_error_string@@Base+0x850>
  41c117:	mov    eax,0x0
  41c11c:	leave  
  41c11d:	ret    
  41c11e:	push   rbp
  41c11f:	mov    rbp,rsp
  41c122:	push   rbx
  41c123:	sub    rsp,0x88
  41c12a:	mov    QWORD PTR [rbp-0x78],rdi
  41c12e:	mov    DWORD PTR [rbp-0x7c],esi
  41c131:	mov    DWORD PTR [rbp-0x80],edx
  41c134:	mov    DWORD PTR [rbp-0x84],ecx
  41c13a:	mov    DWORD PTR [rbp-0x88],r8d
  41c141:	mov    QWORD PTR [rbp-0x90],r9
  41c148:	mov    rax,QWORD PTR fs:0x28
  41c151:	mov    QWORD PTR [rbp-0x18],rax
  41c155:	xor    eax,eax
  41c157:	mov    eax,DWORD PTR [rbp-0x88]
  41c15d:	dec    eax
  41c15f:	mov    DWORD PTR [rbp-0x34],eax
  41c162:	mov    eax,DWORD PTR [rbp-0x34]
  41c165:	mov    DWORD PTR [rbp-0x68],eax
  41c168:	cmp    DWORD PTR [rbp-0x68],0x0
  41c16c:	jne    41c178 <flatcc_verify_error_string@@Base+0x910>
  41c16e:	mov    eax,0x3
  41c173:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c178:	mov    edx,DWORD PTR [rbp-0x84]
  41c17e:	mov    ecx,DWORD PTR [rbp-0x80]
  41c181:	mov    eax,DWORD PTR [rbp-0x7c]
  41c184:	mov    esi,ecx
  41c186:	mov    edi,eax
  41c188:	call   41bb00 <flatcc_verify_error_string@@Base+0x298>
  41c18d:	mov    DWORD PTR [rbp-0x64],eax
  41c190:	cmp    DWORD PTR [rbp-0x64],0x0
  41c194:	jne    41c1a0 <flatcc_verify_error_string@@Base+0x938>
  41c196:	mov    eax,0xf
  41c19b:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c1a0:	mov    edx,DWORD PTR [rbp-0x80]
  41c1a3:	mov    eax,DWORD PTR [rbp-0x84]
  41c1a9:	add    eax,edx
  41c1ab:	mov    DWORD PTR [rbp-0x28],eax
  41c1ae:	mov    ebx,DWORD PTR [rbp-0x28]
  41c1b1:	mov    edx,DWORD PTR [rbp-0x28]
  41c1b4:	mov    rax,QWORD PTR [rbp-0x78]
  41c1b8:	mov    esi,edx
  41c1ba:	mov    rdi,rax
  41c1bd:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c1c2:	sub    ebx,eax
  41c1c4:	mov    eax,ebx
  41c1c6:	mov    DWORD PTR [rbp-0x60],eax
  41c1c9:	mov    eax,DWORD PTR [rbp-0x60]
  41c1cc:	test   eax,eax
  41c1ce:	js     41c1e2 <flatcc_verify_error_string@@Base+0x97a>
  41c1d0:	mov    eax,DWORD PTR [rbp-0x60]
  41c1d3:	and    eax,0x1
  41c1d6:	test   rax,rax
  41c1d9:	jne    41c1e2 <flatcc_verify_error_string@@Base+0x97a>
  41c1db:	mov    eax,0x1
  41c1e0:	jmp    41c1e7 <flatcc_verify_error_string@@Base+0x97f>
  41c1e2:	mov    eax,0x0
  41c1e7:	mov    DWORD PTR [rbp-0x5c],eax
  41c1ea:	cmp    DWORD PTR [rbp-0x5c],0x0
  41c1ee:	jne    41c1fa <flatcc_verify_error_string@@Base+0x992>
  41c1f0:	mov    eax,0x1d
  41c1f5:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c1fa:	mov    eax,DWORD PTR [rbp-0x60]
  41c1fd:	lea    rdx,[rax+0x2]
  41c201:	mov    eax,DWORD PTR [rbp-0x7c]
  41c204:	cmp    rdx,rax
  41c207:	setbe  al
  41c20a:	movzx  eax,al
  41c20d:	mov    DWORD PTR [rbp-0x58],eax
  41c210:	cmp    DWORD PTR [rbp-0x58],0x0
  41c214:	jne    41c220 <flatcc_verify_error_string@@Base+0x9b8>
  41c216:	mov    eax,0x1b
  41c21b:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c220:	mov    edx,DWORD PTR [rbp-0x60]
  41c223:	mov    rax,QWORD PTR [rbp-0x78]
  41c227:	mov    esi,edx
  41c229:	mov    rdi,rax
  41c22c:	call   41badd <flatcc_verify_error_string@@Base+0x275>
  41c231:	mov    WORD PTR [rbp-0x22],ax
  41c235:	movzx  eax,WORD PTR [rbp-0x22]
  41c239:	movzx  edx,ax
  41c23c:	mov    eax,DWORD PTR [rbp-0x60]
  41c23f:	add    eax,edx
  41c241:	mov    DWORD PTR [rbp-0x54],eax
  41c244:	mov    eax,DWORD PTR [rbp-0x54]
  41c247:	cmp    eax,DWORD PTR [rbp-0x7c]
  41c24a:	ja     41c262 <flatcc_verify_error_string@@Base+0x9fa>
  41c24c:	movzx  eax,WORD PTR [rbp-0x22]
  41c250:	movzx  eax,ax
  41c253:	and    eax,0x1
  41c256:	test   rax,rax
  41c259:	jne    41c262 <flatcc_verify_error_string@@Base+0x9fa>
  41c25b:	mov    eax,0x1
  41c260:	jmp    41c267 <flatcc_verify_error_string@@Base+0x9ff>
  41c262:	mov    eax,0x0
  41c267:	mov    DWORD PTR [rbp-0x50],eax
  41c26a:	cmp    DWORD PTR [rbp-0x50],0x0
  41c26e:	jne    41c27a <flatcc_verify_error_string@@Base+0xa12>
  41c270:	mov    eax,0x1e
  41c275:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c27a:	mov    DWORD PTR [rbp-0x4c],0x1
  41c281:	cmp    DWORD PTR [rbp-0x4c],0x0
  41c285:	jne    41c291 <flatcc_verify_error_string@@Base+0xa29>
  41c287:	mov    eax,0x1f
  41c28c:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c291:	movzx  eax,WORD PTR [rbp-0x22]
  41c295:	cmp    ax,0x3
  41c299:	seta   al
  41c29c:	movzx  eax,al
  41c29f:	mov    DWORD PTR [rbp-0x48],eax
  41c2a2:	cmp    DWORD PTR [rbp-0x48],0x0
  41c2a6:	jne    41c2af <flatcc_verify_error_string@@Base+0xa47>
  41c2a8:	mov    eax,0x1c
  41c2ad:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c2af:	mov    eax,DWORD PTR [rbp-0x60]
  41c2b2:	lea    edx,[rax+0x2]
  41c2b5:	mov    rax,QWORD PTR [rbp-0x78]
  41c2b9:	mov    esi,edx
  41c2bb:	mov    rdi,rax
  41c2be:	call   41badd <flatcc_verify_error_string@@Base+0x275>
  41c2c3:	mov    WORD PTR [rbp-0x24],ax
  41c2c7:	mov    eax,DWORD PTR [rbp-0x28]
  41c2ca:	mov    edx,DWORD PTR [rbp-0x7c]
  41c2cd:	sub    edx,eax
  41c2cf:	movzx  eax,WORD PTR [rbp-0x24]
  41c2d3:	movzx  eax,ax
  41c2d6:	cmp    edx,eax
  41c2d8:	setae  al
  41c2db:	movzx  eax,al
  41c2de:	mov    DWORD PTR [rbp-0x44],eax
  41c2e1:	cmp    DWORD PTR [rbp-0x44],0x0
  41c2e5:	jne    41c2ee <flatcc_verify_error_string@@Base+0xa86>
  41c2e7:	mov    eax,0x14
  41c2ec:	jmp    41c31a <flatcc_verify_error_string@@Base+0xab2>
  41c2ee:	mov    edx,DWORD PTR [rbp-0x60]
  41c2f1:	mov    rax,QWORD PTR [rbp-0x78]
  41c2f5:	add    rax,rdx
  41c2f8:	mov    QWORD PTR [rbp-0x30],rax
  41c2fc:	mov    rax,QWORD PTR [rbp-0x78]
  41c300:	mov    QWORD PTR [rbp-0x40],rax
  41c304:	mov    eax,DWORD PTR [rbp-0x7c]
  41c307:	mov    DWORD PTR [rbp-0x38],eax
  41c30a:	lea    rdx,[rbp-0x40]
  41c30e:	mov    rax,QWORD PTR [rbp-0x90]
  41c315:	mov    rdi,rdx
  41c318:	call   rax
  41c31a:	mov    rcx,QWORD PTR [rbp-0x18]
  41c31e:	xor    rcx,QWORD PTR fs:0x28
  41c327:	je     41c32e <flatcc_verify_error_string@@Base+0xac6>
  41c329:	call   4041c0 <__stack_chk_fail@plt>
  41c32e:	add    rsp,0x88
  41c335:	pop    rbx
  41c336:	pop    rbp
  41c337:	ret    
  41c338:	push   rbp
  41c339:	mov    rbp,rsp
  41c33c:	sub    rsp,0x30
  41c340:	mov    QWORD PTR [rbp-0x18],rdi
  41c344:	mov    DWORD PTR [rbp-0x1c],esi
  41c347:	mov    DWORD PTR [rbp-0x20],edx
  41c34a:	mov    DWORD PTR [rbp-0x24],ecx
  41c34d:	mov    DWORD PTR [rbp-0x28],r8d
  41c351:	mov    QWORD PTR [rbp-0x30],r9
  41c355:	mov    eax,DWORD PTR [rbp-0x28]
  41c358:	lea    edx,[rax-0x1]
  41c35b:	mov    DWORD PTR [rbp-0x28],edx
  41c35e:	test   eax,eax
  41c360:	setg   al
  41c363:	movzx  eax,al
  41c366:	mov    DWORD PTR [rbp-0x8],eax
  41c369:	cmp    DWORD PTR [rbp-0x8],0x0
  41c36d:	jne    41c379 <flatcc_verify_error_string@@Base+0xb11>
  41c36f:	mov    eax,0x3
  41c374:	jmp    41c487 <flatcc_verify_error_string@@Base+0xc1f>
  41c379:	mov    ecx,DWORD PTR [rbp-0x24]
  41c37c:	mov    edx,DWORD PTR [rbp-0x20]
  41c37f:	mov    esi,DWORD PTR [rbp-0x1c]
  41c382:	mov    rax,QWORD PTR [rbp-0x18]
  41c386:	push   0x3fffffff
  41c38b:	mov    r9d,0x4
  41c391:	mov    r8d,0x4
  41c397:	mov    rdi,rax
  41c39a:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c39f:	add    rsp,0x8
  41c3a3:	test   eax,eax
  41c3a5:	je     41c3d6 <flatcc_verify_error_string@@Base+0xb6e>
  41c3a7:	mov    ecx,DWORD PTR [rbp-0x24]
  41c3aa:	mov    edx,DWORD PTR [rbp-0x20]
  41c3ad:	mov    esi,DWORD PTR [rbp-0x1c]
  41c3b0:	mov    rax,QWORD PTR [rbp-0x18]
  41c3b4:	push   0x3fffffff
  41c3b9:	mov    r9d,0x4
  41c3bf:	mov    r8d,0x4
  41c3c5:	mov    rdi,rax
  41c3c8:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c3cd:	add    rsp,0x8
  41c3d1:	jmp    41c487 <flatcc_verify_error_string@@Base+0xc1f>
  41c3d6:	mov    eax,DWORD PTR [rbp-0x24]
  41c3d9:	add    DWORD PTR [rbp-0x20],eax
  41c3dc:	mov    edx,DWORD PTR [rbp-0x20]
  41c3df:	mov    rax,QWORD PTR [rbp-0x18]
  41c3e3:	mov    esi,edx
  41c3e5:	mov    rdi,rax
  41c3e8:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c3ed:	mov    DWORD PTR [rbp-0x4],eax
  41c3f0:	add    DWORD PTR [rbp-0x20],0x4
  41c3f4:	mov    DWORD PTR [rbp-0xc],0x0
  41c3fb:	jmp    41c476 <flatcc_verify_error_string@@Base+0xc0e>
  41c3fd:	mov    edx,DWORD PTR [rbp-0x20]
  41c400:	mov    rax,QWORD PTR [rbp-0x18]
  41c404:	mov    esi,edx
  41c406:	mov    rdi,rax
  41c409:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c40e:	mov    r10d,eax
  41c411:	mov    rdi,QWORD PTR [rbp-0x30]
  41c415:	mov    ecx,DWORD PTR [rbp-0x28]
  41c418:	mov    edx,DWORD PTR [rbp-0x20]
  41c41b:	mov    esi,DWORD PTR [rbp-0x1c]
  41c41e:	mov    rax,QWORD PTR [rbp-0x18]
  41c422:	mov    r9,rdi
  41c425:	mov    r8d,ecx
  41c428:	mov    ecx,r10d
  41c42b:	mov    rdi,rax
  41c42e:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41c433:	test   eax,eax
  41c435:	je     41c46f <flatcc_verify_error_string@@Base+0xc07>
  41c437:	mov    edx,DWORD PTR [rbp-0x20]
  41c43a:	mov    rax,QWORD PTR [rbp-0x18]
  41c43e:	mov    esi,edx
  41c440:	mov    rdi,rax
  41c443:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c448:	mov    r10d,eax
  41c44b:	mov    rdi,QWORD PTR [rbp-0x30]
  41c44f:	mov    ecx,DWORD PTR [rbp-0x28]
  41c452:	mov    edx,DWORD PTR [rbp-0x20]
  41c455:	mov    esi,DWORD PTR [rbp-0x1c]
  41c458:	mov    rax,QWORD PTR [rbp-0x18]
  41c45c:	mov    r9,rdi
  41c45f:	mov    r8d,ecx
  41c462:	mov    ecx,r10d
  41c465:	mov    rdi,rax
  41c468:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41c46d:	jmp    41c487 <flatcc_verify_error_string@@Base+0xc1f>
  41c46f:	inc    DWORD PTR [rbp-0xc]
  41c472:	add    DWORD PTR [rbp-0x20],0x4
  41c476:	mov    eax,DWORD PTR [rbp-0xc]
  41c479:	cmp    eax,DWORD PTR [rbp-0x4]
  41c47c:	jb     41c3fd <flatcc_verify_error_string@@Base+0xb95>
  41c482:	mov    eax,0x0
  41c487:	leave  
  41c488:	ret    
  41c489:	push   rbp
  41c48a:	mov    rbp,rsp
  41c48d:	add    rsp,0xffffffffffffff80
  41c491:	mov    QWORD PTR [rbp-0x58],rdi
  41c495:	mov    DWORD PTR [rbp-0x5c],esi
  41c498:	mov    DWORD PTR [rbp-0x60],edx
  41c49b:	mov    DWORD PTR [rbp-0x64],ecx
  41c49e:	mov    DWORD PTR [rbp-0x68],r8d
  41c4a2:	mov    QWORD PTR [rbp-0x70],r9
  41c4a6:	mov    rax,QWORD PTR [rbp+0x18]
  41c4aa:	mov    QWORD PTR [rbp-0x78],rax
  41c4ae:	mov    rax,QWORD PTR fs:0x28
  41c4b7:	mov    QWORD PTR [rbp-0x8],rax
  41c4bb:	xor    eax,eax
  41c4bd:	mov    eax,DWORD PTR [rbp+0x10]
  41c4c0:	lea    edx,[rax-0x1]
  41c4c3:	mov    DWORD PTR [rbp+0x10],edx
  41c4c6:	test   eax,eax
  41c4c8:	setg   al
  41c4cb:	movzx  eax,al
  41c4ce:	mov    DWORD PTR [rbp-0x48],eax
  41c4d1:	cmp    DWORD PTR [rbp-0x48],0x0
  41c4d5:	jne    41c4e1 <flatcc_verify_error_string@@Base+0xc79>
  41c4d7:	mov    eax,0x3
  41c4dc:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c4e1:	mov    ecx,DWORD PTR [rbp-0x64]
  41c4e4:	mov    edx,DWORD PTR [rbp-0x60]
  41c4e7:	mov    esi,DWORD PTR [rbp-0x5c]
  41c4ea:	mov    rax,QWORD PTR [rbp-0x58]
  41c4ee:	push   0x3fffffff
  41c4f3:	mov    r9d,0x4
  41c4f9:	mov    r8d,0x4
  41c4ff:	mov    rdi,rax
  41c502:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c507:	add    rsp,0x8
  41c50b:	test   eax,eax
  41c50d:	je     41c53e <flatcc_verify_error_string@@Base+0xcd6>
  41c50f:	mov    ecx,DWORD PTR [rbp-0x64]
  41c512:	mov    edx,DWORD PTR [rbp-0x60]
  41c515:	mov    esi,DWORD PTR [rbp-0x5c]
  41c518:	mov    rax,QWORD PTR [rbp-0x58]
  41c51c:	push   0x3fffffff
  41c521:	mov    r9d,0x4
  41c527:	mov    r8d,0x4
  41c52d:	mov    rdi,rax
  41c530:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c535:	add    rsp,0x8
  41c539:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c53e:	mov    eax,DWORD PTR [rbp-0x64]
  41c541:	add    DWORD PTR [rbp-0x60],eax
  41c544:	mov    edx,DWORD PTR [rbp-0x60]
  41c547:	mov    rax,QWORD PTR [rbp-0x58]
  41c54b:	mov    esi,edx
  41c54d:	mov    rdi,rax
  41c550:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c555:	mov    DWORD PTR [rbp-0x44],eax
  41c558:	mov    eax,DWORD PTR [rbp-0x44]
  41c55b:	cmp    eax,DWORD PTR [rbp-0x68]
  41c55e:	sete   al
  41c561:	movzx  eax,al
  41c564:	mov    DWORD PTR [rbp-0x40],eax
  41c567:	cmp    DWORD PTR [rbp-0x40],0x0
  41c56b:	jne    41c577 <flatcc_verify_error_string@@Base+0xd0f>
  41c56d:	mov    eax,0x22
  41c572:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c577:	add    DWORD PTR [rbp-0x60],0x4
  41c57b:	mov    rax,QWORD PTR [rbp-0x58]
  41c57f:	mov    QWORD PTR [rbp-0x30],rax
  41c583:	mov    eax,DWORD PTR [rbp-0x5c]
  41c586:	mov    DWORD PTR [rbp-0x28],eax
  41c589:	mov    eax,DWORD PTR [rbp+0x10]
  41c58c:	mov    DWORD PTR [rbp-0x24],eax
  41c58f:	mov    DWORD PTR [rbp-0x4c],0x0
  41c596:	jmp    41c642 <flatcc_verify_error_string@@Base+0xdda>
  41c59b:	mov    edx,DWORD PTR [rbp-0x60]
  41c59e:	mov    rax,QWORD PTR [rbp-0x58]
  41c5a2:	mov    esi,edx
  41c5a4:	mov    rdi,rax
  41c5a7:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c5ac:	mov    DWORD PTR [rbp-0x3c],eax
  41c5af:	cmp    DWORD PTR [rbp-0x3c],0x0
  41c5b3:	jne    41c5da <flatcc_verify_error_string@@Base+0xd72>
  41c5b5:	mov    edx,DWORD PTR [rbp-0x4c]
  41c5b8:	mov    rax,QWORD PTR [rbp-0x70]
  41c5bc:	add    rax,rdx
  41c5bf:	movzx  eax,BYTE PTR [rax]
  41c5c2:	test   al,al
  41c5c4:	sete   al
  41c5c7:	movzx  eax,al
  41c5ca:	mov    DWORD PTR [rbp-0x38],eax
  41c5cd:	cmp    DWORD PTR [rbp-0x38],0x0
  41c5d1:	jne    41c63b <flatcc_verify_error_string@@Base+0xdd3>
  41c5d3:	mov    eax,0x20
  41c5d8:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c5da:	mov    edx,DWORD PTR [rbp-0x4c]
  41c5dd:	mov    rax,QWORD PTR [rbp-0x70]
  41c5e1:	add    rax,rdx
  41c5e4:	movzx  eax,BYTE PTR [rax]
  41c5e7:	test   al,al
  41c5e9:	setne  al
  41c5ec:	movzx  eax,al
  41c5ef:	mov    DWORD PTR [rbp-0x34],eax
  41c5f2:	cmp    DWORD PTR [rbp-0x34],0x0
  41c5f6:	jne    41c5ff <flatcc_verify_error_string@@Base+0xd97>
  41c5f8:	mov    eax,0x21
  41c5fd:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c5ff:	mov    edx,DWORD PTR [rbp-0x4c]
  41c602:	mov    rax,QWORD PTR [rbp-0x70]
  41c606:	add    rax,rdx
  41c609:	movzx  eax,BYTE PTR [rax]
  41c60c:	mov    BYTE PTR [rbp-0x20],al
  41c60f:	mov    eax,DWORD PTR [rbp-0x60]
  41c612:	mov    DWORD PTR [rbp-0x1c],eax
  41c615:	mov    eax,DWORD PTR [rbp-0x3c]
  41c618:	mov    DWORD PTR [rbp-0x18],eax
  41c61b:	lea    rdx,[rbp-0x30]
  41c61f:	mov    rax,QWORD PTR [rbp-0x78]
  41c623:	mov    rdi,rdx
  41c626:	call   rax
  41c628:	test   eax,eax
  41c62a:	je     41c63b <flatcc_verify_error_string@@Base+0xdd3>
  41c62c:	lea    rdx,[rbp-0x30]
  41c630:	mov    rax,QWORD PTR [rbp-0x78]
  41c634:	mov    rdi,rdx
  41c637:	call   rax
  41c639:	jmp    41c653 <flatcc_verify_error_string@@Base+0xdeb>
  41c63b:	inc    DWORD PTR [rbp-0x4c]
  41c63e:	add    DWORD PTR [rbp-0x60],0x4
  41c642:	mov    eax,DWORD PTR [rbp-0x4c]
  41c645:	cmp    eax,DWORD PTR [rbp-0x44]
  41c648:	jb     41c59b <flatcc_verify_error_string@@Base+0xd33>
  41c64e:	mov    eax,0x0
  41c653:	mov    rcx,QWORD PTR [rbp-0x8]
  41c657:	xor    rcx,QWORD PTR fs:0x28
  41c660:	je     41c667 <flatcc_verify_error_string@@Base+0xdff>
  41c662:	call   4041c0 <__stack_chk_fail@plt>
  41c667:	leave  
  41c668:	ret    

000000000041c669 <flatcc_verify_field@@Base>:
  41c669:	endbr64 
  41c66d:	push   rbp
  41c66e:	mov    rbp,rsp
  41c671:	sub    rsp,0x18
  41c675:	mov    QWORD PTR [rbp-0x8],rdi
  41c679:	mov    QWORD PTR [rbp-0x18],rdx
  41c67d:	mov    eax,ecx
  41c67f:	mov    edx,esi
  41c681:	mov    WORD PTR [rbp-0xc],dx
  41c685:	mov    WORD PTR [rbp-0x10],ax
  41c689:	movzx  edx,WORD PTR [rbp-0x10]
  41c68d:	mov    rax,QWORD PTR [rbp-0x18]
  41c691:	mov    ecx,eax
  41c693:	movzx  esi,WORD PTR [rbp-0xc]
  41c697:	mov    rax,QWORD PTR [rbp-0x8]
  41c69b:	mov    r8d,edx
  41c69e:	mov    edx,0x0
  41c6a3:	mov    rdi,rax
  41c6a6:	call   41bcfc <flatcc_verify_error_string@@Base+0x494>
  41c6ab:	test   eax,eax
  41c6ad:	je     41c6d3 <flatcc_verify_field@@Base+0x6a>
  41c6af:	movzx  edx,WORD PTR [rbp-0x10]
  41c6b3:	mov    rax,QWORD PTR [rbp-0x18]
  41c6b7:	mov    ecx,eax
  41c6b9:	movzx  esi,WORD PTR [rbp-0xc]
  41c6bd:	mov    rax,QWORD PTR [rbp-0x8]
  41c6c1:	mov    r8d,edx
  41c6c4:	mov    edx,0x0
  41c6c9:	mov    rdi,rax
  41c6cc:	call   41bcfc <flatcc_verify_error_string@@Base+0x494>
  41c6d1:	jmp    41c6d8 <flatcc_verify_field@@Base+0x6f>
  41c6d3:	mov    eax,0x0
  41c6d8:	leave  
  41c6d9:	ret    

000000000041c6da <flatcc_verify_string_field@@Base>:
  41c6da:	endbr64 
  41c6de:	push   rbp
  41c6df:	mov    rbp,rsp
  41c6e2:	sub    rsp,0x20
  41c6e6:	mov    QWORD PTR [rbp-0x18],rdi
  41c6ea:	mov    eax,esi
  41c6ec:	mov    DWORD PTR [rbp-0x20],edx
  41c6ef:	mov    WORD PTR [rbp-0x1c],ax
  41c6f3:	mov    rax,QWORD PTR fs:0x28
  41c6fc:	mov    QWORD PTR [rbp-0x8],rax
  41c700:	xor    eax,eax
  41c702:	movzx  esi,WORD PTR [rbp-0x1c]
  41c706:	lea    rcx,[rbp-0x10]
  41c70a:	mov    edx,DWORD PTR [rbp-0x20]
  41c70d:	mov    rax,QWORD PTR [rbp-0x18]
  41c711:	mov    rdi,rax
  41c714:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41c719:	mov    DWORD PTR [rbp-0xc],eax
  41c71c:	cmp    DWORD PTR [rbp-0xc],0x0
  41c720:	jne    41c729 <flatcc_verify_string_field@@Base+0x4f>
  41c722:	mov    eax,DWORD PTR [rbp-0x10]
  41c725:	test   eax,eax
  41c727:	jne    41c72e <flatcc_verify_string_field@@Base+0x54>
  41c729:	mov    eax,DWORD PTR [rbp-0xc]
  41c72c:	jmp    41c75d <flatcc_verify_string_field@@Base+0x83>
  41c72e:	mov    edx,DWORD PTR [rbp-0x10]
  41c731:	mov    rax,QWORD PTR [rbp-0x18]
  41c735:	mov    rax,QWORD PTR [rax]
  41c738:	mov    esi,edx
  41c73a:	mov    rdi,rax
  41c73d:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c742:	mov    ecx,eax
  41c744:	mov    edx,DWORD PTR [rbp-0x10]
  41c747:	mov    rax,QWORD PTR [rbp-0x18]
  41c74b:	mov    esi,DWORD PTR [rax+0x8]
  41c74e:	mov    rax,QWORD PTR [rbp-0x18]
  41c752:	mov    rax,QWORD PTR [rax]
  41c755:	mov    rdi,rax
  41c758:	call   41bec9 <flatcc_verify_error_string@@Base+0x661>
  41c75d:	mov    rdi,QWORD PTR [rbp-0x8]
  41c761:	xor    rdi,QWORD PTR fs:0x28
  41c76a:	je     41c771 <flatcc_verify_string_field@@Base+0x97>
  41c76c:	call   4041c0 <__stack_chk_fail@plt>
  41c771:	leave  
  41c772:	ret    

000000000041c773 <flatcc_verify_vector_field@@Base>:
  41c773:	endbr64 
  41c777:	push   rbp
  41c778:	mov    rbp,rsp
  41c77b:	push   r13
  41c77d:	push   r12
  41c77f:	push   rbx
  41c780:	sub    rsp,0x48
  41c784:	mov    QWORD PTR [rbp-0x38],rdi
  41c788:	mov    eax,esi
  41c78a:	mov    DWORD PTR [rbp-0x40],edx
  41c78d:	mov    QWORD PTR [rbp-0x48],rcx
  41c791:	mov    edx,r8d
  41c794:	mov    QWORD PTR [rbp-0x58],r9
  41c798:	mov    WORD PTR [rbp-0x3c],ax
  41c79c:	mov    eax,edx
  41c79e:	mov    WORD PTR [rbp-0x4c],ax
  41c7a2:	mov    rax,QWORD PTR fs:0x28
  41c7ab:	mov    QWORD PTR [rbp-0x28],rax
  41c7af:	xor    eax,eax
  41c7b1:	movzx  esi,WORD PTR [rbp-0x3c]
  41c7b5:	lea    rcx,[rbp-0x30]
  41c7b9:	mov    edx,DWORD PTR [rbp-0x40]
  41c7bc:	mov    rax,QWORD PTR [rbp-0x38]
  41c7c0:	mov    rdi,rax
  41c7c3:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41c7c8:	mov    DWORD PTR [rbp-0x2c],eax
  41c7cb:	cmp    DWORD PTR [rbp-0x2c],0x0
  41c7cf:	jne    41c7d8 <flatcc_verify_vector_field@@Base+0x65>
  41c7d1:	mov    eax,DWORD PTR [rbp-0x30]
  41c7d4:	test   eax,eax
  41c7d6:	jne    41c7dd <flatcc_verify_vector_field@@Base+0x6a>
  41c7d8:	mov    eax,DWORD PTR [rbp-0x2c]
  41c7db:	jmp    41c82a <flatcc_verify_vector_field@@Base+0xb7>
  41c7dd:	mov    rax,QWORD PTR [rbp-0x58]
  41c7e1:	mov    r12d,eax
  41c7e4:	movzx  ebx,WORD PTR [rbp-0x4c]
  41c7e8:	mov    rax,QWORD PTR [rbp-0x48]
  41c7ec:	mov    r13d,eax
  41c7ef:	mov    edx,DWORD PTR [rbp-0x30]
  41c7f2:	mov    rax,QWORD PTR [rbp-0x38]
  41c7f6:	mov    rax,QWORD PTR [rax]
  41c7f9:	mov    esi,edx
  41c7fb:	mov    rdi,rax
  41c7fe:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c803:	mov    ecx,eax
  41c805:	mov    edx,DWORD PTR [rbp-0x30]
  41c808:	mov    rax,QWORD PTR [rbp-0x38]
  41c80c:	mov    esi,DWORD PTR [rax+0x8]
  41c80f:	mov    rax,QWORD PTR [rbp-0x38]
  41c813:	mov    rax,QWORD PTR [rax]
  41c816:	push   r12
  41c818:	mov    r9d,ebx
  41c81b:	mov    r8d,r13d
  41c81e:	mov    rdi,rax
  41c821:	call   41bf73 <flatcc_verify_error_string@@Base+0x70b>
  41c826:	add    rsp,0x8
  41c82a:	mov    rbx,QWORD PTR [rbp-0x28]
  41c82e:	xor    rbx,QWORD PTR fs:0x28
  41c837:	je     41c83e <flatcc_verify_vector_field@@Base+0xcb>
  41c839:	call   4041c0 <__stack_chk_fail@plt>
  41c83e:	lea    rsp,[rbp-0x18]
  41c842:	pop    rbx
  41c843:	pop    r12
  41c845:	pop    r13
  41c847:	pop    rbp
  41c848:	ret    

000000000041c849 <flatcc_verify_string_vector_field@@Base>:
  41c849:	endbr64 
  41c84d:	push   rbp
  41c84e:	mov    rbp,rsp
  41c851:	sub    rsp,0x20
  41c855:	mov    QWORD PTR [rbp-0x18],rdi
  41c859:	mov    eax,esi
  41c85b:	mov    DWORD PTR [rbp-0x20],edx
  41c85e:	mov    WORD PTR [rbp-0x1c],ax
  41c862:	mov    rax,QWORD PTR fs:0x28
  41c86b:	mov    QWORD PTR [rbp-0x8],rax
  41c86f:	xor    eax,eax
  41c871:	movzx  esi,WORD PTR [rbp-0x1c]
  41c875:	lea    rcx,[rbp-0x10]
  41c879:	mov    edx,DWORD PTR [rbp-0x20]
  41c87c:	mov    rax,QWORD PTR [rbp-0x18]
  41c880:	mov    rdi,rax
  41c883:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41c888:	mov    DWORD PTR [rbp-0xc],eax
  41c88b:	cmp    DWORD PTR [rbp-0xc],0x0
  41c88f:	jne    41c898 <flatcc_verify_string_vector_field@@Base+0x4f>
  41c891:	mov    eax,DWORD PTR [rbp-0x10]
  41c894:	test   eax,eax
  41c896:	jne    41c89d <flatcc_verify_string_vector_field@@Base+0x54>
  41c898:	mov    eax,DWORD PTR [rbp-0xc]
  41c89b:	jmp    41c8cc <flatcc_verify_string_vector_field@@Base+0x83>
  41c89d:	mov    edx,DWORD PTR [rbp-0x10]
  41c8a0:	mov    rax,QWORD PTR [rbp-0x18]
  41c8a4:	mov    rax,QWORD PTR [rax]
  41c8a7:	mov    esi,edx
  41c8a9:	mov    rdi,rax
  41c8ac:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c8b1:	mov    ecx,eax
  41c8b3:	mov    edx,DWORD PTR [rbp-0x10]
  41c8b6:	mov    rax,QWORD PTR [rbp-0x18]
  41c8ba:	mov    esi,DWORD PTR [rax+0x8]
  41c8bd:	mov    rax,QWORD PTR [rbp-0x18]
  41c8c1:	mov    rax,QWORD PTR [rax]
  41c8c4:	mov    rdi,rax
  41c8c7:	call   41c01f <flatcc_verify_error_string@@Base+0x7b7>
  41c8cc:	mov    rdi,QWORD PTR [rbp-0x8]
  41c8d0:	xor    rdi,QWORD PTR fs:0x28
  41c8d9:	je     41c8e0 <flatcc_verify_string_vector_field@@Base+0x97>
  41c8db:	call   4041c0 <__stack_chk_fail@plt>
  41c8e0:	leave  
  41c8e1:	ret    

000000000041c8e2 <flatcc_verify_table_field@@Base>:
  41c8e2:	endbr64 
  41c8e6:	push   rbp
  41c8e7:	mov    rbp,rsp
  41c8ea:	push   rbx
  41c8eb:	sub    rsp,0x38
  41c8ef:	mov    QWORD PTR [rbp-0x28],rdi
  41c8f3:	mov    eax,esi
  41c8f5:	mov    DWORD PTR [rbp-0x30],edx
  41c8f8:	mov    QWORD PTR [rbp-0x38],rcx
  41c8fc:	mov    WORD PTR [rbp-0x2c],ax
  41c900:	mov    rax,QWORD PTR fs:0x28
  41c909:	mov    QWORD PTR [rbp-0x18],rax
  41c90d:	xor    eax,eax
  41c90f:	movzx  esi,WORD PTR [rbp-0x2c]
  41c913:	lea    rcx,[rbp-0x20]
  41c917:	mov    edx,DWORD PTR [rbp-0x30]
  41c91a:	mov    rax,QWORD PTR [rbp-0x28]
  41c91e:	mov    rdi,rax
  41c921:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41c926:	mov    DWORD PTR [rbp-0x1c],eax
  41c929:	cmp    DWORD PTR [rbp-0x1c],0x0
  41c92d:	jne    41c936 <flatcc_verify_table_field@@Base+0x54>
  41c92f:	mov    eax,DWORD PTR [rbp-0x20]
  41c932:	test   eax,eax
  41c934:	jne    41c93b <flatcc_verify_table_field@@Base+0x59>
  41c936:	mov    eax,DWORD PTR [rbp-0x1c]
  41c939:	jmp    41c97d <flatcc_verify_table_field@@Base+0x9b>
  41c93b:	mov    rax,QWORD PTR [rbp-0x28]
  41c93f:	mov    ebx,DWORD PTR [rax+0xc]
  41c942:	mov    edx,DWORD PTR [rbp-0x20]
  41c945:	mov    rax,QWORD PTR [rbp-0x28]
  41c949:	mov    rax,QWORD PTR [rax]
  41c94c:	mov    esi,edx
  41c94e:	mov    rdi,rax
  41c951:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41c956:	mov    edi,eax
  41c958:	mov    edx,DWORD PTR [rbp-0x20]
  41c95b:	mov    rax,QWORD PTR [rbp-0x28]
  41c95f:	mov    esi,DWORD PTR [rax+0x8]
  41c962:	mov    rax,QWORD PTR [rbp-0x28]
  41c966:	mov    rax,QWORD PTR [rax]
  41c969:	mov    rcx,QWORD PTR [rbp-0x38]
  41c96d:	mov    r9,rcx
  41c970:	mov    r8d,ebx
  41c973:	mov    ecx,edi
  41c975:	mov    rdi,rax
  41c978:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41c97d:	mov    rbx,QWORD PTR [rbp-0x18]
  41c981:	xor    rbx,QWORD PTR fs:0x28
  41c98a:	je     41c991 <flatcc_verify_table_field@@Base+0xaf>
  41c98c:	call   4041c0 <__stack_chk_fail@plt>
  41c991:	add    rsp,0x38
  41c995:	pop    rbx
  41c996:	pop    rbp
  41c997:	ret    

000000000041c998 <flatcc_verify_table_vector_field@@Base>:
  41c998:	endbr64 
  41c99c:	push   rbp
  41c99d:	mov    rbp,rsp
  41c9a0:	push   rbx
  41c9a1:	sub    rsp,0x38
  41c9a5:	mov    QWORD PTR [rbp-0x28],rdi
  41c9a9:	mov    eax,esi
  41c9ab:	mov    DWORD PTR [rbp-0x30],edx
  41c9ae:	mov    QWORD PTR [rbp-0x38],rcx
  41c9b2:	mov    WORD PTR [rbp-0x2c],ax
  41c9b6:	mov    rax,QWORD PTR fs:0x28
  41c9bf:	mov    QWORD PTR [rbp-0x18],rax
  41c9c3:	xor    eax,eax
  41c9c5:	movzx  esi,WORD PTR [rbp-0x2c]
  41c9c9:	lea    rcx,[rbp-0x20]
  41c9cd:	mov    edx,DWORD PTR [rbp-0x30]
  41c9d0:	mov    rax,QWORD PTR [rbp-0x28]
  41c9d4:	mov    rdi,rax
  41c9d7:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41c9dc:	mov    DWORD PTR [rbp-0x1c],eax
  41c9df:	cmp    DWORD PTR [rbp-0x1c],0x0
  41c9e3:	jne    41c9ec <flatcc_verify_table_vector_field@@Base+0x54>
  41c9e5:	mov    eax,DWORD PTR [rbp-0x20]
  41c9e8:	test   eax,eax
  41c9ea:	jne    41c9f1 <flatcc_verify_table_vector_field@@Base+0x59>
  41c9ec:	mov    eax,DWORD PTR [rbp-0x1c]
  41c9ef:	jmp    41ca33 <flatcc_verify_table_vector_field@@Base+0x9b>
  41c9f1:	mov    rax,QWORD PTR [rbp-0x28]
  41c9f5:	mov    ebx,DWORD PTR [rax+0xc]
  41c9f8:	mov    edx,DWORD PTR [rbp-0x20]
  41c9fb:	mov    rax,QWORD PTR [rbp-0x28]
  41c9ff:	mov    rax,QWORD PTR [rax]
  41ca02:	mov    esi,edx
  41ca04:	mov    rdi,rax
  41ca07:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41ca0c:	mov    edi,eax
  41ca0e:	mov    edx,DWORD PTR [rbp-0x20]
  41ca11:	mov    rax,QWORD PTR [rbp-0x28]
  41ca15:	mov    esi,DWORD PTR [rax+0x8]
  41ca18:	mov    rax,QWORD PTR [rbp-0x28]
  41ca1c:	mov    rax,QWORD PTR [rax]
  41ca1f:	mov    rcx,QWORD PTR [rbp-0x38]
  41ca23:	mov    r9,rcx
  41ca26:	mov    r8d,ebx
  41ca29:	mov    ecx,edi
  41ca2b:	mov    rdi,rax
  41ca2e:	call   41c338 <flatcc_verify_error_string@@Base+0xad0>
  41ca33:	mov    rbx,QWORD PTR [rbp-0x18]
  41ca37:	xor    rbx,QWORD PTR fs:0x28
  41ca40:	je     41ca47 <flatcc_verify_table_vector_field@@Base+0xaf>
  41ca42:	call   4041c0 <__stack_chk_fail@plt>
  41ca47:	add    rsp,0x38
  41ca4b:	pop    rbx
  41ca4c:	pop    rbp
  41ca4d:	ret    

000000000041ca4e <flatcc_verify_union_table@@Base>:
  41ca4e:	endbr64 
  41ca52:	push   rbp
  41ca53:	mov    rbp,rsp
  41ca56:	sub    rsp,0x10
  41ca5a:	mov    QWORD PTR [rbp-0x8],rdi
  41ca5e:	mov    QWORD PTR [rbp-0x10],rsi
  41ca62:	mov    rax,QWORD PTR [rbp-0x8]
  41ca66:	mov    edi,DWORD PTR [rax+0xc]
  41ca69:	mov    rax,QWORD PTR [rbp-0x8]
  41ca6d:	mov    ecx,DWORD PTR [rax+0x18]
  41ca70:	mov    rax,QWORD PTR [rbp-0x8]
  41ca74:	mov    edx,DWORD PTR [rax+0x14]
  41ca77:	mov    rax,QWORD PTR [rbp-0x8]
  41ca7b:	mov    esi,DWORD PTR [rax+0x8]
  41ca7e:	mov    rax,QWORD PTR [rbp-0x8]
  41ca82:	mov    rax,QWORD PTR [rax]
  41ca85:	mov    r8,QWORD PTR [rbp-0x10]
  41ca89:	mov    r9,r8
  41ca8c:	mov    r8d,edi
  41ca8f:	mov    rdi,rax
  41ca92:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41ca97:	leave  
  41ca98:	ret    

000000000041ca99 <flatcc_verify_union_struct@@Base>:
  41ca99:	endbr64 
  41ca9d:	push   rbp
  41ca9e:	mov    rbp,rsp
  41caa1:	sub    rsp,0x18
  41caa5:	mov    QWORD PTR [rbp-0x8],rdi
  41caa9:	mov    QWORD PTR [rbp-0x10],rsi
  41caad:	mov    eax,edx
  41caaf:	mov    WORD PTR [rbp-0x14],ax
  41cab3:	movzx  ecx,WORD PTR [rbp-0x14]
  41cab7:	mov    rax,QWORD PTR [rbp-0x10]
  41cabb:	mov    edi,eax
  41cabd:	mov    rax,QWORD PTR [rbp-0x8]
  41cac1:	mov    edx,DWORD PTR [rax+0x18]
  41cac4:	mov    rax,QWORD PTR [rbp-0x8]
  41cac8:	mov    esi,DWORD PTR [rax+0x14]
  41cacb:	mov    rax,QWORD PTR [rbp-0x8]
  41cacf:	mov    eax,DWORD PTR [rax+0x8]
  41cad2:	mov    r8d,ecx
  41cad5:	mov    ecx,edi
  41cad7:	mov    edi,eax
  41cad9:	call   41bbb8 <flatcc_verify_error_string@@Base+0x350>
  41cade:	leave  
  41cadf:	ret    

000000000041cae0 <flatcc_verify_union_string@@Base>:
  41cae0:	endbr64 
  41cae4:	push   rbp
  41cae5:	mov    rbp,rsp
  41cae8:	sub    rsp,0x8
  41caec:	mov    QWORD PTR [rbp-0x8],rdi
  41caf0:	mov    rax,QWORD PTR [rbp-0x8]
  41caf4:	mov    ecx,DWORD PTR [rax+0x18]
  41caf7:	mov    rax,QWORD PTR [rbp-0x8]
  41cafb:	mov    edx,DWORD PTR [rax+0x14]
  41cafe:	mov    rax,QWORD PTR [rbp-0x8]
  41cb02:	mov    esi,DWORD PTR [rax+0x8]
  41cb05:	mov    rax,QWORD PTR [rbp-0x8]
  41cb09:	mov    rax,QWORD PTR [rax]
  41cb0c:	mov    rdi,rax
  41cb0f:	call   41bec9 <flatcc_verify_error_string@@Base+0x661>
  41cb14:	leave  
  41cb15:	ret    

000000000041cb16 <flatcc_verify_buffer_header@@Base>:
  41cb16:	endbr64 
  41cb1a:	push   rbp
  41cb1b:	mov    rbp,rsp
  41cb1e:	sub    rsp,0x40
  41cb22:	mov    QWORD PTR [rbp-0x28],rdi
  41cb26:	mov    QWORD PTR [rbp-0x30],rsi
  41cb2a:	mov    QWORD PTR [rbp-0x38],rdx
  41cb2e:	mov    rax,QWORD PTR [rbp-0x28]
  41cb32:	and    eax,0x3
  41cb35:	test   rax,rax
  41cb38:	sete   al
  41cb3b:	movzx  eax,al
  41cb3e:	mov    DWORD PTR [rbp-0x18],eax
  41cb41:	cmp    DWORD PTR [rbp-0x18],0x0
  41cb45:	jne    41cb51 <flatcc_verify_buffer_header@@Base+0x3b>
  41cb47:	mov    eax,0x5
  41cb4c:	jmp    41cbe4 <flatcc_verify_buffer_header@@Base+0xce>
  41cb51:	mov    eax,0xfffffff7
  41cb56:	cmp    QWORD PTR [rbp-0x30],rax
  41cb5a:	setbe  al
  41cb5d:	movzx  eax,al
  41cb60:	mov    DWORD PTR [rbp-0x14],eax
  41cb63:	cmp    DWORD PTR [rbp-0x14],0x0
  41cb67:	jne    41cb70 <flatcc_verify_buffer_header@@Base+0x5a>
  41cb69:	mov    eax,0x6
  41cb6e:	jmp    41cbe4 <flatcc_verify_buffer_header@@Base+0xce>
  41cb70:	cmp    QWORD PTR [rbp-0x30],0x7
  41cb75:	seta   al
  41cb78:	movzx  eax,al
  41cb7b:	mov    DWORD PTR [rbp-0x10],eax
  41cb7e:	cmp    DWORD PTR [rbp-0x10],0x0
  41cb82:	jne    41cb8b <flatcc_verify_buffer_header@@Base+0x75>
  41cb84:	mov    eax,0x1
  41cb89:	jmp    41cbe4 <flatcc_verify_buffer_header@@Base+0xce>
  41cb8b:	cmp    QWORD PTR [rbp-0x38],0x0
  41cb90:	je     41cbdf <flatcc_verify_buffer_header@@Base+0xc9>
  41cb92:	mov    rax,QWORD PTR [rbp-0x38]
  41cb96:	mov    rdi,rax
  41cb99:	call   41ba60 <flatcc_verify_error_string@@Base+0x1f8>
  41cb9e:	mov    DWORD PTR [rbp-0xc],eax
  41cba1:	mov    rax,QWORD PTR [rbp-0x28]
  41cba5:	mov    esi,0x4
  41cbaa:	mov    rdi,rax
  41cbad:	call   41baba <flatcc_verify_error_string@@Base+0x252>
  41cbb2:	mov    DWORD PTR [rbp-0x8],eax
  41cbb5:	cmp    DWORD PTR [rbp-0xc],0x0
  41cbb9:	je     41cbc3 <flatcc_verify_buffer_header@@Base+0xad>
  41cbbb:	mov    eax,DWORD PTR [rbp-0x8]
  41cbbe:	cmp    eax,DWORD PTR [rbp-0xc]
  41cbc1:	jne    41cbca <flatcc_verify_buffer_header@@Base+0xb4>
  41cbc3:	mov    eax,0x1
  41cbc8:	jmp    41cbcf <flatcc_verify_buffer_header@@Base+0xb9>
  41cbca:	mov    eax,0x0
  41cbcf:	mov    DWORD PTR [rbp-0x4],eax
  41cbd2:	cmp    DWORD PTR [rbp-0x4],0x0
  41cbd6:	jne    41cbdf <flatcc_verify_buffer_header@@Base+0xc9>
  41cbd8:	mov    eax,0x2
  41cbdd:	jmp    41cbe4 <flatcc_verify_buffer_header@@Base+0xce>
  41cbdf:	mov    eax,0x0
  41cbe4:	leave  
  41cbe5:	ret    

000000000041cbe6 <flatcc_verify_typed_buffer_header@@Base>:
  41cbe6:	endbr64 
  41cbea:	push   rbp
  41cbeb:	mov    rbp,rsp
  41cbee:	sub    rsp,0x38
  41cbf2:	mov    QWORD PTR [rbp-0x28],rdi
  41cbf6:	mov    QWORD PTR [rbp-0x30],rsi
  41cbfa:	mov    DWORD PTR [rbp-0x34],edx
  41cbfd:	mov    rax,QWORD PTR [rbp-0x28]
  41cc01:	and    eax,0x3
  41cc04:	test   rax,rax
  41cc07:	sete   al
  41cc0a:	movzx  eax,al
  41cc0d:	mov    DWORD PTR [rbp-0x18],eax
  41cc10:	cmp    DWORD PTR [rbp-0x18],0x0
  41cc14:	jne    41cc20 <flatcc_verify_typed_buffer_header@@Base+0x3a>
  41cc16:	mov    eax,0x5
  41cc1b:	jmp    41cca9 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  41cc20:	mov    eax,0xfffffff7
  41cc25:	cmp    QWORD PTR [rbp-0x30],rax
  41cc29:	setbe  al
  41cc2c:	movzx  eax,al
  41cc2f:	mov    DWORD PTR [rbp-0x14],eax
  41cc32:	cmp    DWORD PTR [rbp-0x14],0x0
  41cc36:	jne    41cc3f <flatcc_verify_typed_buffer_header@@Base+0x59>
  41cc38:	mov    eax,0x6
  41cc3d:	jmp    41cca9 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  41cc3f:	cmp    QWORD PTR [rbp-0x30],0x7
  41cc44:	seta   al
  41cc47:	movzx  eax,al
  41cc4a:	mov    DWORD PTR [rbp-0x10],eax
  41cc4d:	cmp    DWORD PTR [rbp-0x10],0x0
  41cc51:	jne    41cc5a <flatcc_verify_typed_buffer_header@@Base+0x74>
  41cc53:	mov    eax,0x1
  41cc58:	jmp    41cca9 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  41cc5a:	cmp    DWORD PTR [rbp-0x34],0x0
  41cc5e:	je     41cca4 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  41cc60:	mov    eax,DWORD PTR [rbp-0x34]
  41cc63:	mov    DWORD PTR [rbp-0xc],eax
  41cc66:	mov    rax,QWORD PTR [rbp-0x28]
  41cc6a:	mov    esi,0x4
  41cc6f:	mov    rdi,rax
  41cc72:	call   41baba <flatcc_verify_error_string@@Base+0x252>
  41cc77:	mov    DWORD PTR [rbp-0x8],eax
  41cc7a:	cmp    DWORD PTR [rbp-0xc],0x0
  41cc7e:	je     41cc88 <flatcc_verify_typed_buffer_header@@Base+0xa2>
  41cc80:	mov    eax,DWORD PTR [rbp-0x8]
  41cc83:	cmp    eax,DWORD PTR [rbp-0xc]
  41cc86:	jne    41cc8f <flatcc_verify_typed_buffer_header@@Base+0xa9>
  41cc88:	mov    eax,0x1
  41cc8d:	jmp    41cc94 <flatcc_verify_typed_buffer_header@@Base+0xae>
  41cc8f:	mov    eax,0x0
  41cc94:	mov    DWORD PTR [rbp-0x4],eax
  41cc97:	cmp    DWORD PTR [rbp-0x4],0x0
  41cc9b:	jne    41cca4 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  41cc9d:	mov    eax,0x2
  41cca2:	jmp    41cca9 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  41cca4:	mov    eax,0x0
  41cca9:	leave  
  41ccaa:	ret    

000000000041ccab <flatcc_verify_struct_as_root@@Base>:
  41ccab:	endbr64 
  41ccaf:	push   rbp
  41ccb0:	mov    rbp,rsp
  41ccb3:	push   r12
  41ccb5:	push   rbx
  41ccb6:	sub    rsp,0x30
  41ccba:	mov    QWORD PTR [rbp-0x18],rdi
  41ccbe:	mov    QWORD PTR [rbp-0x20],rsi
  41ccc2:	mov    QWORD PTR [rbp-0x28],rdx
  41ccc6:	mov    QWORD PTR [rbp-0x30],rcx
  41ccca:	mov    eax,r8d
  41cccd:	mov    WORD PTR [rbp-0x34],ax
  41ccd1:	mov    rdx,QWORD PTR [rbp-0x28]
  41ccd5:	mov    rcx,QWORD PTR [rbp-0x20]
  41ccd9:	mov    rax,QWORD PTR [rbp-0x18]
  41ccdd:	mov    rsi,rcx
  41cce0:	mov    rdi,rax
  41cce3:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41cce8:	test   eax,eax
  41ccea:	je     41cd05 <flatcc_verify_struct_as_root@@Base+0x5a>
  41ccec:	mov    rdx,QWORD PTR [rbp-0x28]
  41ccf0:	mov    rcx,QWORD PTR [rbp-0x20]
  41ccf4:	mov    rax,QWORD PTR [rbp-0x18]
  41ccf8:	mov    rsi,rcx
  41ccfb:	mov    rdi,rax
  41ccfe:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41cd03:	jmp    41cd39 <flatcc_verify_struct_as_root@@Base+0x8e>
  41cd05:	movzx  ebx,WORD PTR [rbp-0x34]
  41cd09:	mov    rax,QWORD PTR [rbp-0x30]
  41cd0d:	mov    r12d,eax
  41cd10:	mov    rax,QWORD PTR [rbp-0x18]
  41cd14:	mov    esi,0x0
  41cd19:	mov    rdi,rax
  41cd1c:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41cd21:	mov    edx,eax
  41cd23:	mov    rax,QWORD PTR [rbp-0x20]
  41cd27:	mov    r8d,ebx
  41cd2a:	mov    ecx,r12d
  41cd2d:	mov    esi,0x0
  41cd32:	mov    edi,eax
  41cd34:	call   41bbb8 <flatcc_verify_error_string@@Base+0x350>
  41cd39:	add    rsp,0x30
  41cd3d:	pop    rbx
  41cd3e:	pop    r12
  41cd40:	pop    rbp
  41cd41:	ret    

000000000041cd42 <flatcc_verify_struct_as_typed_root@@Base>:
  41cd42:	endbr64 
  41cd46:	push   rbp
  41cd47:	mov    rbp,rsp
  41cd4a:	push   r12
  41cd4c:	push   rbx
  41cd4d:	sub    rsp,0x20
  41cd51:	mov    QWORD PTR [rbp-0x18],rdi
  41cd55:	mov    QWORD PTR [rbp-0x20],rsi
  41cd59:	mov    DWORD PTR [rbp-0x24],edx
  41cd5c:	mov    QWORD PTR [rbp-0x30],rcx
  41cd60:	mov    eax,r8d
  41cd63:	mov    WORD PTR [rbp-0x28],ax
  41cd67:	mov    edx,DWORD PTR [rbp-0x24]
  41cd6a:	mov    rcx,QWORD PTR [rbp-0x20]
  41cd6e:	mov    rax,QWORD PTR [rbp-0x18]
  41cd72:	mov    rsi,rcx
  41cd75:	mov    rdi,rax
  41cd78:	call   41cbe6 <flatcc_verify_typed_buffer_header@@Base>
  41cd7d:	test   eax,eax
  41cd7f:	je     41cd99 <flatcc_verify_struct_as_typed_root@@Base+0x57>
  41cd81:	mov    edx,DWORD PTR [rbp-0x24]
  41cd84:	mov    rcx,QWORD PTR [rbp-0x20]
  41cd88:	mov    rax,QWORD PTR [rbp-0x18]
  41cd8c:	mov    rsi,rcx
  41cd8f:	mov    rdi,rax
  41cd92:	call   41cbe6 <flatcc_verify_typed_buffer_header@@Base>
  41cd97:	jmp    41cdcd <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  41cd99:	movzx  ebx,WORD PTR [rbp-0x28]
  41cd9d:	mov    rax,QWORD PTR [rbp-0x30]
  41cda1:	mov    r12d,eax
  41cda4:	mov    rax,QWORD PTR [rbp-0x18]
  41cda8:	mov    esi,0x0
  41cdad:	mov    rdi,rax
  41cdb0:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41cdb5:	mov    edx,eax
  41cdb7:	mov    rax,QWORD PTR [rbp-0x20]
  41cdbb:	mov    r8d,ebx
  41cdbe:	mov    ecx,r12d
  41cdc1:	mov    esi,0x0
  41cdc6:	mov    edi,eax
  41cdc8:	call   41bbb8 <flatcc_verify_error_string@@Base+0x350>
  41cdcd:	add    rsp,0x20
  41cdd1:	pop    rbx
  41cdd2:	pop    r12
  41cdd4:	pop    rbp
  41cdd5:	ret    

000000000041cdd6 <flatcc_verify_table_as_root@@Base>:
  41cdd6:	endbr64 
  41cdda:	push   rbp
  41cddb:	mov    rbp,rsp
  41cdde:	sub    rsp,0x20
  41cde2:	mov    QWORD PTR [rbp-0x8],rdi
  41cde6:	mov    QWORD PTR [rbp-0x10],rsi
  41cdea:	mov    QWORD PTR [rbp-0x18],rdx
  41cdee:	mov    QWORD PTR [rbp-0x20],rcx
  41cdf2:	mov    rax,QWORD PTR [rbp-0x10]
  41cdf6:	mov    ecx,eax
  41cdf8:	mov    rdx,QWORD PTR [rbp-0x18]
  41cdfc:	mov    rax,QWORD PTR [rbp-0x8]
  41ce00:	mov    rsi,rcx
  41ce03:	mov    rdi,rax
  41ce06:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41ce0b:	test   eax,eax
  41ce0d:	je     41ce2a <flatcc_verify_table_as_root@@Base+0x54>
  41ce0f:	mov    rax,QWORD PTR [rbp-0x10]
  41ce13:	mov    ecx,eax
  41ce15:	mov    rdx,QWORD PTR [rbp-0x18]
  41ce19:	mov    rax,QWORD PTR [rbp-0x8]
  41ce1d:	mov    rsi,rcx
  41ce20:	mov    rdi,rax
  41ce23:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41ce28:	jmp    41ce61 <flatcc_verify_table_as_root@@Base+0x8b>
  41ce2a:	mov    rax,QWORD PTR [rbp-0x8]
  41ce2e:	mov    esi,0x0
  41ce33:	mov    rdi,rax
  41ce36:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41ce3b:	mov    ecx,eax
  41ce3d:	mov    rax,QWORD PTR [rbp-0x10]
  41ce41:	mov    esi,eax
  41ce43:	mov    rdx,QWORD PTR [rbp-0x20]
  41ce47:	mov    rax,QWORD PTR [rbp-0x8]
  41ce4b:	mov    r9,rdx
  41ce4e:	mov    r8d,0x64
  41ce54:	mov    edx,0x0
  41ce59:	mov    rdi,rax
  41ce5c:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41ce61:	leave  
  41ce62:	ret    

000000000041ce63 <flatcc_verify_table_as_typed_root@@Base>:
  41ce63:	endbr64 
  41ce67:	push   rbp
  41ce68:	mov    rbp,rsp
  41ce6b:	sub    rsp,0x20
  41ce6f:	mov    QWORD PTR [rbp-0x8],rdi
  41ce73:	mov    QWORD PTR [rbp-0x10],rsi
  41ce77:	mov    DWORD PTR [rbp-0x14],edx
  41ce7a:	mov    QWORD PTR [rbp-0x20],rcx
  41ce7e:	mov    rax,QWORD PTR [rbp-0x10]
  41ce82:	mov    ecx,eax
  41ce84:	mov    edx,DWORD PTR [rbp-0x14]
  41ce87:	mov    rax,QWORD PTR [rbp-0x8]
  41ce8b:	mov    rsi,rcx
  41ce8e:	mov    rdi,rax
  41ce91:	call   41cbe6 <flatcc_verify_typed_buffer_header@@Base>
  41ce96:	test   eax,eax
  41ce98:	je     41ceb4 <flatcc_verify_table_as_typed_root@@Base+0x51>
  41ce9a:	mov    rax,QWORD PTR [rbp-0x10]
  41ce9e:	mov    ecx,eax
  41cea0:	mov    edx,DWORD PTR [rbp-0x14]
  41cea3:	mov    rax,QWORD PTR [rbp-0x8]
  41cea7:	mov    rsi,rcx
  41ceaa:	mov    rdi,rax
  41cead:	call   41cbe6 <flatcc_verify_typed_buffer_header@@Base>
  41ceb2:	jmp    41ceeb <flatcc_verify_table_as_typed_root@@Base+0x88>
  41ceb4:	mov    rax,QWORD PTR [rbp-0x8]
  41ceb8:	mov    esi,0x0
  41cebd:	mov    rdi,rax
  41cec0:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41cec5:	mov    ecx,eax
  41cec7:	mov    rax,QWORD PTR [rbp-0x10]
  41cecb:	mov    esi,eax
  41cecd:	mov    rdx,QWORD PTR [rbp-0x20]
  41ced1:	mov    rax,QWORD PTR [rbp-0x8]
  41ced5:	mov    r9,rdx
  41ced8:	mov    r8d,0x64
  41cede:	mov    edx,0x0
  41cee3:	mov    rdi,rax
  41cee6:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41ceeb:	leave  
  41ceec:	ret    

000000000041ceed <flatcc_verify_struct_as_nested_root@@Base>:
  41ceed:	endbr64 
  41cef1:	push   rbp
  41cef2:	mov    rbp,rsp
  41cef5:	sub    rsp,0x40
  41cef9:	mov    QWORD PTR [rbp-0x18],rdi
  41cefd:	mov    eax,esi
  41ceff:	mov    DWORD PTR [rbp-0x20],edx
  41cf02:	mov    QWORD PTR [rbp-0x28],rcx
  41cf06:	mov    QWORD PTR [rbp-0x30],r8
  41cf0a:	mov    edx,r9d
  41cf0d:	mov    WORD PTR [rbp-0x1c],ax
  41cf11:	mov    eax,edx
  41cf13:	mov    WORD PTR [rbp-0x34],ax
  41cf17:	movzx  ecx,WORD PTR [rbp-0x34]
  41cf1b:	movzx  esi,WORD PTR [rbp-0x1c]
  41cf1f:	mov    edx,DWORD PTR [rbp-0x20]
  41cf22:	mov    rax,QWORD PTR [rbp-0x18]
  41cf26:	mov    r9d,0xffffffff
  41cf2c:	mov    r8d,0x1
  41cf32:	mov    rdi,rax
  41cf35:	call   41c773 <flatcc_verify_vector_field@@Base>
  41cf3a:	test   eax,eax
  41cf3c:	je     41cf63 <flatcc_verify_struct_as_nested_root@@Base+0x76>
  41cf3e:	movzx  ecx,WORD PTR [rbp-0x34]
  41cf42:	movzx  esi,WORD PTR [rbp-0x1c]
  41cf46:	mov    edx,DWORD PTR [rbp-0x20]
  41cf49:	mov    rax,QWORD PTR [rbp-0x18]
  41cf4d:	mov    r9d,0xffffffff
  41cf53:	mov    r8d,0x1
  41cf59:	mov    rdi,rax
  41cf5c:	call   41c773 <flatcc_verify_vector_field@@Base>
  41cf61:	jmp    41cfdc <flatcc_verify_struct_as_nested_root@@Base+0xef>
  41cf63:	movzx  edx,WORD PTR [rbp-0x1c]
  41cf67:	mov    rax,QWORD PTR [rbp-0x18]
  41cf6b:	mov    esi,edx
  41cf6d:	mov    rdi,rax
  41cf70:	call   41bcaa <flatcc_verify_error_string@@Base+0x442>
  41cf75:	mov    QWORD PTR [rbp-0x8],rax
  41cf79:	cmp    QWORD PTR [rbp-0x8],0x0
  41cf7e:	jne    41cf87 <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  41cf80:	mov    eax,0x0
  41cf85:	jmp    41cfdc <flatcc_verify_struct_as_nested_root@@Base+0xef>
  41cf87:	mov    rax,QWORD PTR [rbp-0x8]
  41cf8b:	mov    esi,0x0
  41cf90:	mov    rdi,rax
  41cf93:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41cf98:	mov    edx,eax
  41cf9a:	mov    rax,QWORD PTR [rbp-0x8]
  41cf9e:	add    rax,rdx
  41cfa1:	mov    QWORD PTR [rbp-0x8],rax
  41cfa5:	mov    rax,QWORD PTR [rbp-0x8]
  41cfa9:	mov    esi,0x0
  41cfae:	mov    rdi,rax
  41cfb1:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41cfb6:	mov    DWORD PTR [rbp-0xc],eax
  41cfb9:	add    QWORD PTR [rbp-0x8],0x4
  41cfbe:	movzx  edi,WORD PTR [rbp-0x34]
  41cfc2:	mov    esi,DWORD PTR [rbp-0xc]
  41cfc5:	mov    rcx,QWORD PTR [rbp-0x30]
  41cfc9:	mov    rdx,QWORD PTR [rbp-0x28]
  41cfcd:	mov    rax,QWORD PTR [rbp-0x8]
  41cfd1:	mov    r8d,edi
  41cfd4:	mov    rdi,rax
  41cfd7:	call   41ccab <flatcc_verify_struct_as_root@@Base>
  41cfdc:	leave  
  41cfdd:	ret    

000000000041cfde <flatcc_verify_table_as_nested_root@@Base>:
  41cfde:	endbr64 
  41cfe2:	push   rbp
  41cfe3:	mov    rbp,rsp
  41cfe6:	push   rbx
  41cfe7:	sub    rsp,0x48
  41cfeb:	mov    QWORD PTR [rbp-0x28],rdi
  41cfef:	mov    eax,esi
  41cff1:	mov    DWORD PTR [rbp-0x30],edx
  41cff4:	mov    QWORD PTR [rbp-0x38],rcx
  41cff8:	mov    edx,r8d
  41cffb:	mov    QWORD PTR [rbp-0x48],r9
  41cfff:	mov    WORD PTR [rbp-0x2c],ax
  41d003:	mov    eax,edx
  41d005:	mov    WORD PTR [rbp-0x3c],ax
  41d009:	movzx  ecx,WORD PTR [rbp-0x3c]
  41d00d:	movzx  esi,WORD PTR [rbp-0x2c]
  41d011:	mov    edx,DWORD PTR [rbp-0x30]
  41d014:	mov    rax,QWORD PTR [rbp-0x28]
  41d018:	mov    r9d,0xffffffff
  41d01e:	mov    r8d,0x1
  41d024:	mov    rdi,rax
  41d027:	call   41c773 <flatcc_verify_vector_field@@Base>
  41d02c:	test   eax,eax
  41d02e:	je     41d058 <flatcc_verify_table_as_nested_root@@Base+0x7a>
  41d030:	movzx  ecx,WORD PTR [rbp-0x3c]
  41d034:	movzx  esi,WORD PTR [rbp-0x2c]
  41d038:	mov    edx,DWORD PTR [rbp-0x30]
  41d03b:	mov    rax,QWORD PTR [rbp-0x28]
  41d03f:	mov    r9d,0xffffffff
  41d045:	mov    r8d,0x1
  41d04b:	mov    rdi,rax
  41d04e:	call   41c773 <flatcc_verify_vector_field@@Base>
  41d053:	jmp    41d120 <flatcc_verify_table_as_nested_root@@Base+0x142>
  41d058:	movzx  edx,WORD PTR [rbp-0x2c]
  41d05c:	mov    rax,QWORD PTR [rbp-0x28]
  41d060:	mov    esi,edx
  41d062:	mov    rdi,rax
  41d065:	call   41bcaa <flatcc_verify_error_string@@Base+0x442>
  41d06a:	mov    QWORD PTR [rbp-0x18],rax
  41d06e:	cmp    QWORD PTR [rbp-0x18],0x0
  41d073:	jne    41d07f <flatcc_verify_table_as_nested_root@@Base+0xa1>
  41d075:	mov    eax,0x0
  41d07a:	jmp    41d120 <flatcc_verify_table_as_nested_root@@Base+0x142>
  41d07f:	mov    rax,QWORD PTR [rbp-0x18]
  41d083:	mov    esi,0x0
  41d088:	mov    rdi,rax
  41d08b:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d090:	mov    edx,eax
  41d092:	mov    rax,QWORD PTR [rbp-0x18]
  41d096:	add    rax,rdx
  41d099:	mov    QWORD PTR [rbp-0x18],rax
  41d09d:	mov    rax,QWORD PTR [rbp-0x18]
  41d0a1:	mov    esi,0x0
  41d0a6:	mov    rdi,rax
  41d0a9:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d0ae:	mov    DWORD PTR [rbp-0x1c],eax
  41d0b1:	add    QWORD PTR [rbp-0x18],0x4
  41d0b6:	mov    ecx,DWORD PTR [rbp-0x1c]
  41d0b9:	mov    rdx,QWORD PTR [rbp-0x38]
  41d0bd:	mov    rax,QWORD PTR [rbp-0x18]
  41d0c1:	mov    rsi,rcx
  41d0c4:	mov    rdi,rax
  41d0c7:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41d0cc:	test   eax,eax
  41d0ce:	je     41d0e8 <flatcc_verify_table_as_nested_root@@Base+0x10a>
  41d0d0:	mov    ecx,DWORD PTR [rbp-0x1c]
  41d0d3:	mov    rdx,QWORD PTR [rbp-0x38]
  41d0d7:	mov    rax,QWORD PTR [rbp-0x18]
  41d0db:	mov    rsi,rcx
  41d0de:	mov    rdi,rax
  41d0e1:	call   41cb16 <flatcc_verify_buffer_header@@Base>
  41d0e6:	jmp    41d120 <flatcc_verify_table_as_nested_root@@Base+0x142>
  41d0e8:	mov    rax,QWORD PTR [rbp-0x28]
  41d0ec:	mov    ebx,DWORD PTR [rax+0xc]
  41d0ef:	mov    rax,QWORD PTR [rbp-0x18]
  41d0f3:	mov    esi,0x0
  41d0f8:	mov    rdi,rax
  41d0fb:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d100:	mov    ecx,eax
  41d102:	mov    rdx,QWORD PTR [rbp-0x48]
  41d106:	mov    esi,DWORD PTR [rbp-0x1c]
  41d109:	mov    rax,QWORD PTR [rbp-0x18]
  41d10d:	mov    r9,rdx
  41d110:	mov    r8d,ebx
  41d113:	mov    edx,0x0
  41d118:	mov    rdi,rax
  41d11b:	call   41c11e <flatcc_verify_error_string@@Base+0x8b6>
  41d120:	add    rsp,0x48
  41d124:	pop    rbx
  41d125:	pop    rbp
  41d126:	ret    

000000000041d127 <flatcc_verify_union_field@@Base>:
  41d127:	endbr64 
  41d12b:	push   rbp
  41d12c:	mov    rbp,rsp
  41d12f:	sub    rsp,0x70
  41d133:	mov    QWORD PTR [rbp-0x58],rdi
  41d137:	mov    eax,esi
  41d139:	mov    DWORD PTR [rbp-0x60],edx
  41d13c:	mov    QWORD PTR [rbp-0x68],rcx
  41d140:	mov    WORD PTR [rbp-0x5c],ax
  41d144:	mov    rax,QWORD PTR fs:0x28
  41d14d:	mov    QWORD PTR [rbp-0x8],rax
  41d151:	xor    eax,eax
  41d153:	movzx  eax,WORD PTR [rbp-0x5c]
  41d157:	dec    eax
  41d159:	movzx  edx,ax
  41d15c:	mov    rax,QWORD PTR [rbp-0x58]
  41d160:	mov    esi,edx
  41d162:	mov    rdi,rax
  41d165:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41d16a:	mov    WORD PTR [rbp-0x50],ax
  41d16e:	cmp    WORD PTR [rbp-0x50],0x0
  41d173:	jne    41d1d0 <flatcc_verify_union_field@@Base+0xa9>
  41d175:	movzx  edx,WORD PTR [rbp-0x5c]
  41d179:	mov    rax,QWORD PTR [rbp-0x58]
  41d17d:	mov    esi,edx
  41d17f:	mov    rdi,rax
  41d182:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41d187:	mov    WORD PTR [rbp-0x4e],ax
  41d18b:	cmp    WORD PTR [rbp-0x4e],0x0
  41d190:	sete   al
  41d193:	movzx  eax,al
  41d196:	mov    DWORD PTR [rbp-0x48],eax
  41d199:	cmp    DWORD PTR [rbp-0x48],0x0
  41d19d:	jne    41d1a9 <flatcc_verify_union_field@@Base+0x82>
  41d19f:	mov    eax,0x17
  41d1a4:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d1a9:	cmp    DWORD PTR [rbp-0x60],0x0
  41d1ad:	sete   al
  41d1b0:	movzx  eax,al
  41d1b3:	mov    DWORD PTR [rbp-0x44],eax
  41d1b6:	cmp    DWORD PTR [rbp-0x44],0x0
  41d1ba:	jne    41d1c6 <flatcc_verify_union_field@@Base+0x9f>
  41d1bc:	mov    eax,0x15
  41d1c1:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d1c6:	mov    eax,0x0
  41d1cb:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d1d0:	movzx  eax,WORD PTR [rbp-0x5c]
  41d1d4:	dec    eax
  41d1d6:	movzx  esi,ax
  41d1d9:	mov    rax,QWORD PTR [rbp-0x58]
  41d1dd:	mov    r8d,0x1
  41d1e3:	mov    ecx,0x1
  41d1e8:	mov    edx,0x0
  41d1ed:	mov    rdi,rax
  41d1f0:	call   41bcfc <flatcc_verify_error_string@@Base+0x494>
  41d1f5:	test   eax,eax
  41d1f7:	je     41d223 <flatcc_verify_union_field@@Base+0xfc>
  41d1f9:	movzx  eax,WORD PTR [rbp-0x5c]
  41d1fd:	dec    eax
  41d1ff:	movzx  esi,ax
  41d202:	mov    rax,QWORD PTR [rbp-0x58]
  41d206:	mov    r8d,0x1
  41d20c:	mov    ecx,0x1
  41d211:	mov    edx,0x0
  41d216:	mov    rdi,rax
  41d219:	call   41bcfc <flatcc_verify_error_string@@Base+0x494>
  41d21e:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d223:	movzx  edx,WORD PTR [rbp-0x5c]
  41d227:	mov    rax,QWORD PTR [rbp-0x58]
  41d22b:	mov    esi,edx
  41d22d:	mov    rdi,rax
  41d230:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41d235:	mov    WORD PTR [rbp-0x4e],ax
  41d239:	mov    rax,QWORD PTR [rbp-0x58]
  41d23d:	mov    rdx,QWORD PTR [rax]
  41d240:	mov    rax,QWORD PTR [rbp-0x58]
  41d244:	mov    eax,DWORD PTR [rax+0x18]
  41d247:	mov    ecx,eax
  41d249:	movzx  eax,WORD PTR [rbp-0x50]
  41d24d:	add    rax,rcx
  41d250:	add    rax,rdx
  41d253:	mov    QWORD PTR [rbp-0x38],rax
  41d257:	mov    rax,QWORD PTR [rbp-0x38]
  41d25b:	movzx  eax,BYTE PTR [rax]
  41d25e:	test   al,al
  41d260:	jne    41d269 <flatcc_verify_union_field@@Base+0x142>
  41d262:	cmp    WORD PTR [rbp-0x4e],0x0
  41d267:	jne    41d270 <flatcc_verify_union_field@@Base+0x149>
  41d269:	mov    eax,0x1
  41d26e:	jmp    41d275 <flatcc_verify_union_field@@Base+0x14e>
  41d270:	mov    eax,0x0
  41d275:	mov    DWORD PTR [rbp-0x40],eax
  41d278:	cmp    DWORD PTR [rbp-0x40],0x0
  41d27c:	jne    41d288 <flatcc_verify_union_field@@Base+0x161>
  41d27e:	mov    eax,0x18
  41d283:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d288:	mov    rax,QWORD PTR [rbp-0x38]
  41d28c:	movzx  eax,BYTE PTR [rax]
  41d28f:	test   al,al
  41d291:	jne    41d29a <flatcc_verify_union_field@@Base+0x173>
  41d293:	mov    eax,0x0
  41d298:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d29a:	movzx  esi,WORD PTR [rbp-0x5c]
  41d29e:	lea    rcx,[rbp-0x4c]
  41d2a2:	mov    edx,DWORD PTR [rbp-0x60]
  41d2a5:	mov    rax,QWORD PTR [rbp-0x58]
  41d2a9:	mov    rdi,rax
  41d2ac:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41d2b1:	mov    DWORD PTR [rbp-0x3c],eax
  41d2b4:	cmp    DWORD PTR [rbp-0x3c],0x0
  41d2b8:	jne    41d2c1 <flatcc_verify_union_field@@Base+0x19a>
  41d2ba:	mov    eax,DWORD PTR [rbp-0x4c]
  41d2bd:	test   eax,eax
  41d2bf:	jne    41d2c6 <flatcc_verify_union_field@@Base+0x19f>
  41d2c1:	mov    eax,DWORD PTR [rbp-0x3c]
  41d2c4:	jmp    41d319 <flatcc_verify_union_field@@Base+0x1f2>
  41d2c6:	mov    rax,QWORD PTR [rbp-0x58]
  41d2ca:	mov    rax,QWORD PTR [rax]
  41d2cd:	mov    QWORD PTR [rbp-0x30],rax
  41d2d1:	mov    rax,QWORD PTR [rbp-0x58]
  41d2d5:	mov    eax,DWORD PTR [rax+0x8]
  41d2d8:	mov    DWORD PTR [rbp-0x28],eax
  41d2db:	mov    rax,QWORD PTR [rbp-0x58]
  41d2df:	mov    eax,DWORD PTR [rax+0xc]
  41d2e2:	mov    DWORD PTR [rbp-0x24],eax
  41d2e5:	mov    eax,DWORD PTR [rbp-0x4c]
  41d2e8:	mov    DWORD PTR [rbp-0x1c],eax
  41d2eb:	mov    edx,DWORD PTR [rbp-0x4c]
  41d2ee:	mov    rax,QWORD PTR [rbp-0x58]
  41d2f2:	mov    rax,QWORD PTR [rax]
  41d2f5:	mov    esi,edx
  41d2f7:	mov    rdi,rax
  41d2fa:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d2ff:	mov    DWORD PTR [rbp-0x18],eax
  41d302:	mov    rax,QWORD PTR [rbp-0x38]
  41d306:	movzx  eax,BYTE PTR [rax]
  41d309:	mov    BYTE PTR [rbp-0x20],al
  41d30c:	lea    rdx,[rbp-0x30]
  41d310:	mov    rax,QWORD PTR [rbp-0x68]
  41d314:	mov    rdi,rdx
  41d317:	call   rax
  41d319:	mov    rcx,QWORD PTR [rbp-0x8]
  41d31d:	xor    rcx,QWORD PTR fs:0x28
  41d326:	je     41d32d <flatcc_verify_union_field@@Base+0x206>
  41d328:	call   4041c0 <__stack_chk_fail@plt>
  41d32d:	leave  
  41d32e:	ret    

000000000041d32f <flatcc_verify_union_vector_field@@Base>:
  41d32f:	endbr64 
  41d333:	push   rbp
  41d334:	mov    rbp,rsp
  41d337:	push   rbx
  41d338:	sub    rsp,0x58
  41d33c:	mov    QWORD PTR [rbp-0x48],rdi
  41d340:	mov    eax,esi
  41d342:	mov    DWORD PTR [rbp-0x50],edx
  41d345:	mov    QWORD PTR [rbp-0x58],rcx
  41d349:	mov    WORD PTR [rbp-0x4c],ax
  41d34d:	mov    rax,QWORD PTR fs:0x28
  41d356:	mov    QWORD PTR [rbp-0x18],rax
  41d35a:	xor    eax,eax
  41d35c:	movzx  eax,WORD PTR [rbp-0x4c]
  41d360:	dec    eax
  41d362:	movzx  edx,ax
  41d365:	mov    rax,QWORD PTR [rbp-0x48]
  41d369:	mov    esi,edx
  41d36b:	mov    rdi,rax
  41d36e:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41d373:	mov    WORD PTR [rbp-0x3c],ax
  41d377:	cmp    WORD PTR [rbp-0x3c],0x0
  41d37c:	jne    41d3b8 <flatcc_verify_union_vector_field@@Base+0x89>
  41d37e:	movzx  edx,WORD PTR [rbp-0x4c]
  41d382:	mov    rax,QWORD PTR [rbp-0x48]
  41d386:	mov    esi,edx
  41d388:	mov    rdi,rax
  41d38b:	call   41bc59 <flatcc_verify_error_string@@Base+0x3f1>
  41d390:	mov    WORD PTR [rbp-0x3a],ax
  41d394:	cmp    WORD PTR [rbp-0x3a],0x0
  41d399:	jne    41d3b8 <flatcc_verify_union_vector_field@@Base+0x89>
  41d39b:	cmp    DWORD PTR [rbp-0x50],0x0
  41d39f:	sete   al
  41d3a2:	movzx  eax,al
  41d3a5:	mov    DWORD PTR [rbp-0x34],eax
  41d3a8:	cmp    DWORD PTR [rbp-0x34],0x0
  41d3ac:	jne    41d3b8 <flatcc_verify_union_vector_field@@Base+0x89>
  41d3ae:	mov    eax,0x16
  41d3b3:	jmp    41d4f9 <flatcc_verify_union_vector_field@@Base+0x1ca>
  41d3b8:	movzx  eax,WORD PTR [rbp-0x4c]
  41d3bc:	dec    eax
  41d3be:	movzx  esi,ax
  41d3c1:	mov    edx,DWORD PTR [rbp-0x50]
  41d3c4:	mov    rax,QWORD PTR [rbp-0x48]
  41d3c8:	mov    r9d,0xffffffff
  41d3ce:	mov    r8d,0x1
  41d3d4:	mov    ecx,0x1
  41d3d9:	mov    rdi,rax
  41d3dc:	call   41c773 <flatcc_verify_vector_field@@Base>
  41d3e1:	test   eax,eax
  41d3e3:	je     41d413 <flatcc_verify_union_vector_field@@Base+0xe4>
  41d3e5:	movzx  eax,WORD PTR [rbp-0x4c]
  41d3e9:	dec    eax
  41d3eb:	movzx  esi,ax
  41d3ee:	mov    edx,DWORD PTR [rbp-0x50]
  41d3f1:	mov    rax,QWORD PTR [rbp-0x48]
  41d3f5:	mov    r9d,0xffffffff
  41d3fb:	mov    r8d,0x1
  41d401:	mov    ecx,0x1
  41d406:	mov    rdi,rax
  41d409:	call   41c773 <flatcc_verify_vector_field@@Base>
  41d40e:	jmp    41d4f9 <flatcc_verify_union_vector_field@@Base+0x1ca>
  41d413:	movzx  eax,WORD PTR [rbp-0x4c]
  41d417:	dec    eax
  41d419:	movzx  edx,ax
  41d41c:	mov    rax,QWORD PTR [rbp-0x48]
  41d420:	mov    esi,edx
  41d422:	mov    rdi,rax
  41d425:	call   41bcaa <flatcc_verify_error_string@@Base+0x442>
  41d42a:	mov    QWORD PTR [rbp-0x28],rax
  41d42e:	cmp    QWORD PTR [rbp-0x28],0x0
  41d433:	jne    41d43f <flatcc_verify_union_vector_field@@Base+0x110>
  41d435:	mov    eax,0x0
  41d43a:	jmp    41d4f9 <flatcc_verify_union_vector_field@@Base+0x1ca>
  41d43f:	mov    rax,QWORD PTR [rbp-0x28]
  41d443:	mov    esi,0x0
  41d448:	mov    rdi,rax
  41d44b:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d450:	mov    edx,eax
  41d452:	mov    rax,QWORD PTR [rbp-0x28]
  41d456:	add    rax,rdx
  41d459:	mov    QWORD PTR [rbp-0x28],rax
  41d45d:	mov    rax,QWORD PTR [rbp-0x28]
  41d461:	mov    esi,0x0
  41d466:	mov    rdi,rax
  41d469:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d46e:	mov    DWORD PTR [rbp-0x30],eax
  41d471:	add    QWORD PTR [rbp-0x28],0x4
  41d476:	mov    rax,QWORD PTR [rbp-0x28]
  41d47a:	mov    QWORD PTR [rbp-0x20],rax
  41d47e:	movzx  esi,WORD PTR [rbp-0x4c]
  41d482:	lea    rcx,[rbp-0x38]
  41d486:	mov    edx,DWORD PTR [rbp-0x50]
  41d489:	mov    rax,QWORD PTR [rbp-0x48]
  41d48d:	mov    rdi,rax
  41d490:	call   41bded <flatcc_verify_error_string@@Base+0x585>
  41d495:	mov    DWORD PTR [rbp-0x2c],eax
  41d498:	cmp    DWORD PTR [rbp-0x2c],0x0
  41d49c:	jne    41d4a5 <flatcc_verify_union_vector_field@@Base+0x176>
  41d49e:	mov    eax,DWORD PTR [rbp-0x38]
  41d4a1:	test   eax,eax
  41d4a3:	jne    41d4aa <flatcc_verify_union_vector_field@@Base+0x17b>
  41d4a5:	mov    eax,DWORD PTR [rbp-0x2c]
  41d4a8:	jmp    41d4f9 <flatcc_verify_union_vector_field@@Base+0x1ca>
  41d4aa:	mov    rax,QWORD PTR [rbp-0x48]
  41d4ae:	mov    ebx,DWORD PTR [rax+0xc]
  41d4b1:	mov    edx,DWORD PTR [rbp-0x38]
  41d4b4:	mov    rax,QWORD PTR [rbp-0x48]
  41d4b8:	mov    rax,QWORD PTR [rax]
  41d4bb:	mov    esi,edx
  41d4bd:	mov    rdi,rax
  41d4c0:	call   41ba3d <flatcc_verify_error_string@@Base+0x1d5>
  41d4c5:	mov    r10d,eax
  41d4c8:	mov    edx,DWORD PTR [rbp-0x38]
  41d4cb:	mov    rax,QWORD PTR [rbp-0x48]
  41d4cf:	mov    esi,DWORD PTR [rax+0x8]
  41d4d2:	mov    rax,QWORD PTR [rbp-0x48]
  41d4d6:	mov    rax,QWORD PTR [rax]
  41d4d9:	mov    rdi,QWORD PTR [rbp-0x20]
  41d4dd:	mov    ecx,DWORD PTR [rbp-0x30]
  41d4e0:	push   QWORD PTR [rbp-0x58]
  41d4e3:	push   rbx
  41d4e4:	mov    r9,rdi
  41d4e7:	mov    r8d,ecx
  41d4ea:	mov    ecx,r10d
  41d4ed:	mov    rdi,rax
  41d4f0:	call   41c489 <flatcc_verify_error_string@@Base+0xc21>
  41d4f5:	add    rsp,0x10
  41d4f9:	mov    rbx,QWORD PTR [rbp-0x18]
  41d4fd:	xor    rbx,QWORD PTR fs:0x28
  41d506:	je     41d50d <flatcc_verify_union_vector_field@@Base+0x1de>
  41d508:	call   4041c0 <__stack_chk_fail@plt>
  41d50d:	mov    rbx,QWORD PTR [rbp-0x8]
  41d511:	leave  
  41d512:	ret    
  41d513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d51d:	nop    DWORD PTR [rax]

000000000041d520 <__libc_csu_init@@Base>:
  41d520:	endbr64 
  41d524:	push   r15
  41d526:	lea    r15,[rip+0xe8db]        # 42be08 <flatcc_builder_padding_base@@Base+0x9ba8>
  41d52d:	push   r14
  41d52f:	mov    r14,rdx
  41d532:	push   r13
  41d534:	mov    r13,rsi
  41d537:	push   r12
  41d539:	mov    r12d,edi
  41d53c:	push   rbp
  41d53d:	lea    rbp,[rip+0xe8cc]        # 42be10 <flatcc_builder_padding_base@@Base+0x9bb0>
  41d544:	push   rbx
  41d545:	sub    rbp,r15
  41d548:	sub    rsp,0x8
  41d54c:	call   404000 <free@plt-0x170>
  41d551:	sar    rbp,0x3
  41d555:	je     41d576 <__libc_csu_init@@Base+0x56>
  41d557:	xor    ebx,ebx
  41d559:	nop    DWORD PTR [rax+0x0]
  41d560:	mov    rdx,r14
  41d563:	mov    rsi,r13
  41d566:	mov    edi,r12d
  41d569:	call   QWORD PTR [r15+rbx*8]
  41d56d:	add    rbx,0x1
  41d571:	cmp    rbp,rbx
  41d574:	jne    41d560 <__libc_csu_init@@Base+0x40>
  41d576:	add    rsp,0x8
  41d57a:	pop    rbx
  41d57b:	pop    rbp
  41d57c:	pop    r12
  41d57e:	pop    r13
  41d580:	pop    r14
  41d582:	pop    r15
  41d584:	ret    
  41d585:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041d590 <__libc_csu_fini@@Base>:
  41d590:	endbr64 
  41d594:	ret    

Disassembly of section .fini:

000000000041d598 <.fini>:
  41d598:	endbr64 
  41d59c:	sub    rsp,0x8
  41d5a0:	add    rsp,0x8
  41d5a4:	ret    
