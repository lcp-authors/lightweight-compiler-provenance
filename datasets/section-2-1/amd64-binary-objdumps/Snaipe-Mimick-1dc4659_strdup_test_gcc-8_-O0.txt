
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd1]        # 407fe0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <__stack_chk_fail@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <__stack_chk_fail@GLIBC_2.4>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <mmap@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <mmap@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <strchr@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <strchr@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <snprintf@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <snprintf@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <my_strdup@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <my_strdup>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x4049d0
  40217a:	mov    rcx,0x404960
  402181:	mov    rdi,0x402a38
  402188:	call   QWORD PTR [rip+0x5e4a]        # 407fd8 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	sar    rsi,0x3
  4021e0:	mov    rax,rsi
  4021e3:	shr    rax,0x3f
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5eb5],0x0        # 4080d0 <__bss_start@@Base+0x8>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5ea3],0x1        # 4080d0 <__bss_start@@Base+0x8>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	endbr64 
  40224a:	push   rbp
  40224b:	mov    rbp,rsp
  40224e:	sub    rsp,0xc0
  402255:	mov    QWORD PTR [rbp-0xb8],rdi
  40225c:	mov    rax,QWORD PTR fs:0x28
  402265:	mov    QWORD PTR [rbp-0x8],rax
  402269:	xor    eax,eax
  40226b:	call   402be9 <mmk_matcher_ctx@@Base>
  402270:	mov    QWORD PTR [rbp-0x88],rax
  402277:	cmp    QWORD PTR [rbp-0x88],0x0
  40227f:	je     4024ea <_start@@Base+0x38a>
  402285:	call   403e80 <mmk_ctx@@Base>
  40228a:	mov    rdi,rax
  40228d:	call   403ab1 <mmk_stub_context@@Base>
  402292:	mov    QWORD PTR [rbp-0x80],rax
  402296:	mov    rax,QWORD PTR [rbp-0x88]
  40229d:	mov    eax,DWORD PTR [rax]
  40229f:	test   eax,eax
  4022a1:	jne    402303 <_start@@Base+0x1a3>
  4022a3:	mov    edi,0x50
  4022a8:	call   40461d <mmk_malloc@@Base>
  4022ad:	mov    QWORD PTR [rbp-0x78],rax
  4022b1:	call   404826 <mmk_when_get_result@@Base>
  4022b6:	mov    rsi,rax
  4022b9:	mov    rcx,QWORD PTR [rbp-0x78]
  4022bd:	mov    rax,QWORD PTR [rsi]
  4022c0:	mov    rdx,QWORD PTR [rsi+0x8]
  4022c4:	mov    QWORD PTR [rcx+0x10],rax
  4022c8:	mov    QWORD PTR [rcx+0x18],rdx
  4022cc:	mov    rax,QWORD PTR [rsi+0x10]
  4022d0:	mov    rdx,QWORD PTR [rsi+0x18]
  4022d4:	mov    QWORD PTR [rcx+0x20],rax
  4022d8:	mov    QWORD PTR [rcx+0x28],rdx
  4022dc:	mov    rdx,QWORD PTR [rbp-0xb8]
  4022e3:	mov    rax,QWORD PTR [rbp-0x78]
  4022e7:	mov    QWORD PTR [rax+0x48],rdx
  4022eb:	mov    rdx,QWORD PTR [rbp-0x78]
  4022ef:	mov    rax,QWORD PTR [rbp-0x80]
  4022f3:	mov    rsi,rdx
  4022f6:	mov    rdi,rax
  4022f9:	call   404843 <mmk_when_impl@@Base>
  4022fe:	jmp    4024de <_start@@Base+0x37e>
  402303:	mov    rax,QWORD PTR [rbp-0x88]
  40230a:	mov    eax,DWORD PTR [rax]
  40230c:	cmp    eax,0x1
  40230f:	jne    4024de <_start@@Base+0x37e>
  402315:	mov    QWORD PTR [rbp-0xa8],0x0
  402320:	mov    rax,QWORD PTR [rbp-0x80]
  402324:	mov    rdi,rax
  402327:	call   402f92 <mmk_mock_params_begin@@Base>
  40232c:	mov    QWORD PTR [rbp-0xa0],rax
  402333:	jmp    40247e <_start@@Base+0x31e>
  402338:	mov    rax,QWORD PTR [rbp-0x88]
  40233f:	mov    QWORD PTR [rbp-0x70],rax
  402343:	mov    rax,QWORD PTR [rbp-0x70]
  402347:	mov    rax,QWORD PTR [rax+0x10]
  40234b:	test   rax,rax
  40234e:	je     402421 <_start@@Base+0x2c1>
  402354:	mov    rax,QWORD PTR [rbp-0x70]
  402358:	mov    rax,QWORD PTR [rax+0x10]
  40235c:	mov    QWORD PTR [rbp-0x70],rax
  402360:	mov    rax,QWORD PTR [rbp-0x70]
  402364:	mov    eax,DWORD PTR [rax]
  402366:	test   eax,eax
  402368:	je     402447 <_start@@Base+0x2e7>
  40236e:	mov    rax,QWORD PTR [rbp-0x70]
  402372:	mov    eax,DWORD PTR [rax]
  402374:	test   eax,eax
  402376:	jns    4023ec <_start@@Base+0x28c>
  402378:	mov    rax,QWORD PTR [rbp-0xa0]
  40237f:	lea    rcx,[rax+0x18]
  402383:	lea    rax,[rbp-0xb8]
  40238a:	mov    edx,0x8
  40238f:	mov    rsi,rax
  402392:	mov    rdi,rcx
  402395:	call   4043be <mmk_memcmp@@Base>
  40239a:	mov    DWORD PTR [rbp-0xb0],eax
  4023a0:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023a7:	jne    4023ba <_start@@Base+0x25a>
  4023a9:	mov    rax,QWORD PTR [rbp-0x70]
  4023ad:	mov    eax,DWORD PTR [rax]
  4023af:	and    eax,0x2
  4023b2:	test   eax,eax
  4023b4:	je     40245a <_start@@Base+0x2fa>
  4023ba:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023c1:	jns    4023d4 <_start@@Base+0x274>
  4023c3:	mov    rax,QWORD PTR [rbp-0x70]
  4023c7:	mov    eax,DWORD PTR [rax]
  4023c9:	and    eax,0x4
  4023cc:	test   eax,eax
  4023ce:	je     40245d <_start@@Base+0x2fd>
  4023d4:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023db:	jle    402447 <_start@@Base+0x2e7>
  4023dd:	mov    rax,QWORD PTR [rbp-0x70]
  4023e1:	mov    eax,DWORD PTR [rax]
  4023e3:	and    eax,0x8
  4023e6:	test   eax,eax
  4023e8:	jne    402447 <_start@@Base+0x2e7>
  4023ea:	jmp    402461 <_start@@Base+0x301>
  4023ec:	mov    rax,QWORD PTR [rbp-0x70]
  4023f0:	mov    eax,DWORD PTR [rax]
  4023f2:	cmp    eax,0x1
  4023f5:	jne    402447 <_start@@Base+0x2e7>
  4023f7:	mov    rax,QWORD PTR [rbp-0x70]
  4023fb:	mov    rdi,rax
  4023fe:	call   402cdb <mmk_matcher_get_predicate@@Base>
  402403:	mov    QWORD PTR [rbp-0x68],rax
  402407:	mov    rax,QWORD PTR [rbp-0xa0]
  40240e:	mov    rdx,QWORD PTR [rax+0x18]
  402412:	mov    rax,QWORD PTR [rbp-0x68]
  402416:	mov    rdi,rdx
  402419:	call   rax
  40241b:	test   eax,eax
  40241d:	jne    402447 <_start@@Base+0x2e7>
  40241f:	jmp    402461 <_start@@Base+0x301>
  402421:	mov    rax,QWORD PTR [rbp-0xa0]
  402428:	lea    rcx,[rax+0x18]
  40242c:	lea    rax,[rbp-0xb8]
  402433:	mov    edx,0x8
  402438:	mov    rsi,rax
  40243b:	mov    rdi,rcx
  40243e:	call   4043be <mmk_memcmp@@Base>
  402443:	test   eax,eax
  402445:	jne    402460 <_start@@Base+0x300>
  402447:	mov    rax,QWORD PTR [rbp-0xa0]
  40244e:	mov    rax,QWORD PTR [rax]
  402451:	add    QWORD PTR [rbp-0xa8],rax
  402458:	jmp    402461 <_start@@Base+0x301>
  40245a:	nop
  40245b:	jmp    402461 <_start@@Base+0x301>
  40245d:	nop
  40245e:	jmp    402461 <_start@@Base+0x301>
  402460:	nop
  402461:	mov    rdx,QWORD PTR [rbp-0xa0]
  402468:	mov    rax,QWORD PTR [rbp-0x80]
  40246c:	mov    rsi,rdx
  40246f:	mov    rdi,rax
  402472:	call   402fcd <mmk_mock_params_next@@Base>
  402477:	mov    QWORD PTR [rbp-0xa0],rax
  40247e:	cmp    QWORD PTR [rbp-0xa0],0x0
  402486:	jne    402338 <_start@@Base+0x1d8>
  40248c:	mov    rax,QWORD PTR [rbp-0x88]
  402493:	mov    QWORD PTR [rbp-0x98],rax
  40249a:	jmp    4024c5 <_start@@Base+0x365>
  40249c:	mov    rax,QWORD PTR [rbp-0x98]
  4024a3:	mov    rax,QWORD PTR [rax+0x10]
  4024a7:	mov    QWORD PTR [rbp-0x60],rax
  4024ab:	mov    rax,QWORD PTR [rbp-0x98]
  4024b2:	mov    rdi,rax
  4024b5:	call   404672 <mmk_free@@Base>
  4024ba:	mov    rax,QWORD PTR [rbp-0x60]
  4024be:	mov    QWORD PTR [rbp-0x98],rax
  4024c5:	cmp    QWORD PTR [rbp-0x98],0x0
  4024cd:	jne    40249c <_start@@Base+0x33c>
  4024cf:	mov    rax,QWORD PTR [rbp-0xa8]
  4024d6:	mov    rdi,rax
  4024d9:	call   404022 <mmk_verify_set_times@@Base>
  4024de:	mov    rax,QWORD PTR [rip+0x5bf3]        # 4080d8 <__bss_start@@Base+0x10>
  4024e5:	jmp    40273b <_start@@Base+0x5db>
  4024ea:	mov    QWORD PTR [rbp-0x30],0x0
  4024f2:	mov    QWORD PTR [rbp-0x28],0x0
  4024fa:	mov    QWORD PTR [rbp-0x20],0x0
  402502:	mov    QWORD PTR [rbp-0x18],0x0
  40250a:	mov    rax,QWORD PTR [rbp-0xb8]
  402511:	mov    QWORD PTR [rbp-0x18],rax
  402515:	lea    rax,[rbp-0x30]
  402519:	mov    QWORD PTR [rbp-0x58],rax
  40251d:	mov    rax,QWORD PTR [rbp-0x58]
  402521:	mov    esi,0x20
  402526:	mov    rdi,rax
  402529:	call   4041c2 <mmk_verify_register_call@@Base>
  40252e:	call   403023 <mmk_mock_get_params@@Base>
  402533:	mov    QWORD PTR [rbp-0x90],rax
  40253a:	jmp    402726 <_start@@Base+0x5c6>
  40253f:	mov    rax,QWORD PTR [rbp-0x90]
  402546:	mov    QWORD PTR [rbp-0x50],rax
  40254a:	mov    rax,QWORD PTR [rbp-0x90]
  402551:	mov    rax,QWORD PTR [rax]
  402554:	mov    QWORD PTR [rbp-0x48],rax
  402558:	mov    rax,QWORD PTR [rbp-0x48]
  40255c:	mov    rax,QWORD PTR [rax+0x10]
  402560:	test   rax,rax
  402563:	je     402634 <_start@@Base+0x4d4>
  402569:	mov    rax,QWORD PTR [rbp-0x48]
  40256d:	mov    rax,QWORD PTR [rax+0x10]
  402571:	mov    QWORD PTR [rbp-0x48],rax
  402575:	mov    rax,QWORD PTR [rbp-0x48]
  402579:	mov    eax,DWORD PTR [rax]
  40257b:	test   eax,eax
  40257d:	je     40265b <_start@@Base+0x4fb>
  402583:	mov    rax,QWORD PTR [rbp-0x48]
  402587:	mov    eax,DWORD PTR [rax]
  402589:	test   eax,eax
  40258b:	jns    402600 <_start@@Base+0x4a0>
  40258d:	lea    rcx,[rbp-0xb8]
  402594:	lea    rax,[rbp-0xb8]
  40259b:	mov    edx,0x8
  4025a0:	mov    rsi,rcx
  4025a3:	mov    rdi,rax
  4025a6:	call   4043be <mmk_memcmp@@Base>
  4025ab:	mov    DWORD PTR [rbp-0xac],eax
  4025b1:	cmp    DWORD PTR [rbp-0xac],0x0
  4025b8:	jne    4025cb <_start@@Base+0x46b>
  4025ba:	mov    rax,QWORD PTR [rbp-0x48]
  4025be:	mov    eax,DWORD PTR [rax]
  4025c0:	and    eax,0x2
  4025c3:	test   eax,eax
  4025c5:	je     402710 <_start@@Base+0x5b0>
  4025cb:	cmp    DWORD PTR [rbp-0xac],0x0
  4025d2:	jns    4025e5 <_start@@Base+0x485>
  4025d4:	mov    rax,QWORD PTR [rbp-0x48]
  4025d8:	mov    eax,DWORD PTR [rax]
  4025da:	and    eax,0x4
  4025dd:	test   eax,eax
  4025df:	je     402710 <_start@@Base+0x5b0>
  4025e5:	cmp    DWORD PTR [rbp-0xac],0x0
  4025ec:	jle    40265b <_start@@Base+0x4fb>
  4025ee:	mov    rax,QWORD PTR [rbp-0x48]
  4025f2:	mov    eax,DWORD PTR [rax]
  4025f4:	and    eax,0x8
  4025f7:	test   eax,eax
  4025f9:	jne    40265b <_start@@Base+0x4fb>
  4025fb:	jmp    402710 <_start@@Base+0x5b0>
  402600:	mov    rax,QWORD PTR [rbp-0x48]
  402604:	mov    eax,DWORD PTR [rax]
  402606:	cmp    eax,0x1
  402609:	jne    40265b <_start@@Base+0x4fb>
  40260b:	mov    rax,QWORD PTR [rbp-0x48]
  40260f:	mov    rdi,rax
  402612:	call   402cdb <mmk_matcher_get_predicate@@Base>
  402617:	mov    QWORD PTR [rbp-0x40],rax
  40261b:	mov    rdx,QWORD PTR [rbp-0xb8]
  402622:	mov    rax,QWORD PTR [rbp-0x40]
  402626:	mov    rdi,rdx
  402629:	call   rax
  40262b:	test   eax,eax
  40262d:	jne    40265b <_start@@Base+0x4fb>
  40262f:	jmp    402714 <_start@@Base+0x5b4>
  402634:	mov    rax,QWORD PTR [rbp-0x50]
  402638:	lea    rcx,[rax+0x48]
  40263c:	lea    rax,[rbp-0xb8]
  402643:	mov    edx,0x8
  402648:	mov    rsi,rcx
  40264b:	mov    rdi,rax
  40264e:	call   4043be <mmk_memcmp@@Base>
  402653:	test   eax,eax
  402655:	jne    402713 <_start@@Base+0x5b3>
  40265b:	mov    rax,QWORD PTR [rbp-0x50]
  40265f:	mov    eax,DWORD PTR [rax+0x14]
  402662:	test   eax,eax
  402664:	je     402677 <_start@@Base+0x517>
  402666:	call   402050 <__errno_location@plt>
  40266b:	mov    rdx,rax
  40266e:	mov    rax,QWORD PTR [rbp-0x50]
  402672:	mov    eax,DWORD PTR [rax+0x14]
  402675:	mov    DWORD PTR [rdx],eax
  402677:	mov    rax,QWORD PTR [rbp-0x50]
  40267b:	mov    rax,QWORD PTR [rax+0x20]
  40267f:	test   rax,rax
  402682:	je     4026b2 <_start@@Base+0x552>
  402684:	mov    rax,QWORD PTR [rbp-0x50]
  402688:	mov    rax,QWORD PTR [rax+0x18]
  40268c:	test   rax,rax
  40268f:	jne    4026b2 <_start@@Base+0x552>
  402691:	mov    rax,QWORD PTR [rbp-0x50]
  402695:	mov    rax,QWORD PTR [rax+0x20]
  402699:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026a0:	mov    rdi,rdx
  4026a3:	call   rax
  4026a5:	mov    QWORD PTR [rbp-0x38],rax
  4026a9:	mov    rax,QWORD PTR [rbp-0x38]
  4026ad:	jmp    40273b <_start@@Base+0x5db>
  4026b2:	mov    rax,QWORD PTR [rbp-0x50]
  4026b6:	mov    rax,QWORD PTR [rax+0x20]
  4026ba:	test   rax,rax
  4026bd:	je     4026ed <_start@@Base+0x58d>
  4026bf:	mov    rax,QWORD PTR [rbp-0x50]
  4026c3:	mov    rax,QWORD PTR [rax+0x18]
  4026c7:	test   rax,rax
  4026ca:	je     4026ed <_start@@Base+0x58d>
  4026cc:	mov    rax,QWORD PTR [rbp-0x50]
  4026d0:	mov    rax,QWORD PTR [rax+0x20]
  4026d4:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026db:	mov    rdi,rdx
  4026de:	call   rax
  4026e0:	mov    rax,QWORD PTR [rbp-0x50]
  4026e4:	mov    rax,QWORD PTR [rax+0x18]
  4026e8:	mov    rax,QWORD PTR [rax]
  4026eb:	jmp    40273b <_start@@Base+0x5db>
  4026ed:	mov    rax,QWORD PTR [rbp-0x50]
  4026f1:	mov    rax,QWORD PTR [rax+0x18]
  4026f5:	test   rax,rax
  4026f8:	je     402707 <_start@@Base+0x5a7>
  4026fa:	mov    rax,QWORD PTR [rbp-0x50]
  4026fe:	mov    rax,QWORD PTR [rax+0x18]
  402702:	mov    rax,QWORD PTR [rax]
  402705:	jmp    40273b <_start@@Base+0x5db>
  402707:	mov    rax,QWORD PTR [rip+0x59ca]        # 4080d8 <__bss_start@@Base+0x10>
  40270e:	jmp    40273b <_start@@Base+0x5db>
  402710:	nop
  402711:	jmp    402714 <_start@@Base+0x5b4>
  402713:	nop
  402714:	mov    rax,QWORD PTR [rbp-0x90]
  40271b:	mov    rax,QWORD PTR [rax+0x8]
  40271f:	mov    QWORD PTR [rbp-0x90],rax
  402726:	cmp    QWORD PTR [rbp-0x90],0x0
  40272e:	jne    40253f <_start@@Base+0x3df>
  402734:	mov    rax,QWORD PTR [rip+0x599d]        # 4080d8 <__bss_start@@Base+0x10>
  40273b:	mov    rsi,QWORD PTR [rbp-0x8]
  40273f:	xor    rsi,QWORD PTR fs:0x28
  402748:	je     40274f <_start@@Base+0x5ef>
  40274a:	call   402080 <__stack_chk_fail@plt>
  40274f:	leave  
  402750:	ret    
  402751:	push   rbp
  402752:	mov    rbp,rsp
  402755:	sub    rsp,0x10
  402759:	mov    QWORD PTR [rbp-0x8],rdi
  40275d:	mov    rax,QWORD PTR [rbp-0x8]
  402761:	lea    rsi,[rip+0xfffffffffffffade]        # 402246 <_start@@Base+0xe6>
  402768:	mov    rdi,rax
  40276b:	call   402cf1 <mmk_mock_create_internal@@Base>
  402770:	leave  
  402771:	ret    

0000000000402772 <test_simple_case@@Base>:
  402772:	endbr64 
  402776:	push   rbp
  402777:	mov    rbp,rsp
  40277a:	add    rsp,0xffffffffffffff80
  40277e:	mov    rax,QWORD PTR fs:0x28
  402787:	mov    QWORD PTR [rbp-0x8],rax
  40278b:	xor    eax,eax
  40278d:	lea    rdi,[rip+0x2874]        # 405008 <_IO_stdin_used@@Base+0x8>
  402794:	call   402751 <_start@@Base+0x5f1>
  402799:	mov    edi,0x0
  40279e:	call   402b69 <mmk_matcher_init@@Base>
  4027a3:	mov    QWORD PTR [rbp-0x60],0x0
  4027ab:	mov    QWORD PTR [rbp-0x58],0x0
  4027b3:	mov    QWORD PTR [rbp-0x50],0x0
  4027bb:	mov    QWORD PTR [rbp-0x48],0x0
  4027c3:	lea    rax,[rbp-0xe]
  4027c7:	mov    QWORD PTR [rbp-0x70],rax
  4027cb:	lea    rax,[rbp-0x70]
  4027cf:	mov    QWORD PTR [rbp-0x58],rax
  4027d3:	lea    rax,[rbp-0x60]
  4027d7:	mov    rdi,rax
  4027da:	call   4047f9 <mmk_when_init@@Base>
  4027df:	mov    edi,0x6
  4027e4:	call   402150 <malloc@plt>
  4027e9:	call   402bc7 <mmk_matcher_term@@Base>
  4027ee:	lea    rdi,[rip+0x2825]        # 40501a <_IO_stdin_used@@Base+0x1a>
  4027f5:	call   402120 <my_strdup@plt>
  4027fa:	mov    QWORD PTR [rbp-0x68],rax
  4027fe:	mov    edi,0x1
  402803:	call   402b69 <mmk_matcher_init@@Base>
  402808:	mov    esi,0x0
  40280d:	mov    edi,0x8000000a
  402812:	call   402c06 <mmk_matcher_add@@Base>
  402817:	mov    edi,0x6
  40281c:	call   402150 <malloc@plt>
  402821:	call   402bc7 <mmk_matcher_term@@Base>
  402826:	mov    QWORD PTR [rbp-0x40],0x0
  40282e:	mov    QWORD PTR [rbp-0x38],0x0
  402836:	mov    QWORD PTR [rbp-0x30],0x0
  40283e:	mov    QWORD PTR [rbp-0x28],0x0
  402846:	mov    QWORD PTR [rbp-0x20],0x0
  40284e:	mov    DWORD PTR [rbp-0x40],0x1
  402855:	mov    QWORD PTR [rbp-0x28],0x1
  40285d:	lea    rax,[rbp-0x40]
  402861:	mov    rdi,rax
  402864:	call   40404f <mmk_verify_times@@Base>
  402869:	mov    DWORD PTR [rbp-0x74],eax
  40286c:	cmp    DWORD PTR [rbp-0x74],0x0
  402870:	jne    4028a8 <test_simple_case@@Base+0x136>
  402872:	mov    rax,QWORD PTR [rip+0x577f]        # 407ff8 <stderr@GLIBC_2.2.5>
  402879:	mov    rax,QWORD PTR [rax]
  40287c:	lea    r8,[rip+0x279d]        # 405020 <_IO_stdin_used@@Base+0x20>
  402883:	mov    ecx,0x17
  402888:	lea    rdx,[rip+0x2799]        # 405028 <_IO_stdin_used@@Base+0x28>
  40288f:	lea    rsi,[rip+0x27ee]        # 405084 <_IO_stdin_used@@Base+0x84>
  402896:	mov    rdi,rax
  402899:	mov    eax,0x0
  40289e:	call   4020e0 <fprintf@plt>
  4028a3:	call   402040 <abort@plt>
  4028a8:	lea    rax,[rbp-0xe]
  4028ac:	cmp    QWORD PTR [rbp-0x68],rax
  4028b0:	jne    4028c9 <test_simple_case@@Base+0x157>
  4028b2:	lea    rax,[rbp-0xe]
  4028b6:	mov    rsi,rax
  4028b9:	lea    rdi,[rip+0x57f8]        # 4080b8 <__data_start@@Base+0x10>
  4028c0:	call   4020d0 <strcmp@plt>
  4028c5:	test   eax,eax
  4028c7:	je     4028ff <test_simple_case@@Base+0x18d>
  4028c9:	mov    rax,QWORD PTR [rip+0x5728]        # 407ff8 <stderr@GLIBC_2.2.5>
  4028d0:	mov    rax,QWORD PTR [rax]
  4028d3:	lea    r8,[rip+0x27ce]        # 4050a8 <_IO_stdin_used@@Base+0xa8>
  4028da:	mov    ecx,0x18
  4028df:	lea    rdx,[rip+0x2742]        # 405028 <_IO_stdin_used@@Base+0x28>
  4028e6:	lea    rsi,[rip+0x2797]        # 405084 <_IO_stdin_used@@Base+0x84>
  4028ed:	mov    rdi,rax
  4028f0:	mov    eax,0x0
  4028f5:	call   4020e0 <fprintf@plt>
  4028fa:	call   402040 <abort@plt>
  4028ff:	mov    rax,QWORD PTR [rip+0x56ea]        # 407ff0 <malloc@GLIBC_2.2.5>
  402906:	mov    rdi,rax
  402909:	call   402b21 <mmk_reset@@Base>
  40290e:	nop
  40290f:	mov    rax,QWORD PTR [rbp-0x8]
  402913:	xor    rax,QWORD PTR fs:0x28
  40291c:	je     402923 <test_simple_case@@Base+0x1b1>
  40291e:	call   402080 <__stack_chk_fail@plt>
  402923:	leave  
  402924:	ret    

0000000000402925 <test_error_case@@Base>:
  402925:	endbr64 
  402929:	push   rbp
  40292a:	mov    rbp,rsp
  40292d:	sub    rsp,0x50
  402931:	mov    rax,QWORD PTR fs:0x28
  40293a:	mov    QWORD PTR [rbp-0x8],rax
  40293e:	xor    eax,eax
  402940:	lea    rdi,[rip+0x26c1]        # 405008 <_IO_stdin_used@@Base+0x8>
  402947:	call   402751 <_start@@Base+0x5f1>
  40294c:	mov    QWORD PTR [rbp-0x40],rax
  402950:	mov    edi,0x0
  402955:	call   402b69 <mmk_matcher_init@@Base>
  40295a:	mov    QWORD PTR [rbp-0x30],0x0
  402962:	mov    QWORD PTR [rbp-0x28],0x0
  40296a:	mov    QWORD PTR [rbp-0x20],0x0
  402972:	mov    QWORD PTR [rbp-0x18],0x0
  40297a:	mov    DWORD PTR [rbp-0x2c],0xc
  402981:	mov    QWORD PTR [rbp-0x48],0x0
  402989:	lea    rax,[rbp-0x48]
  40298d:	mov    QWORD PTR [rbp-0x28],rax
  402991:	lea    rax,[rbp-0x30]
  402995:	mov    rdi,rax
  402998:	call   4047f9 <mmk_when_init@@Base>
  40299d:	mov    esi,0x1
  4029a2:	mov    edi,0x0
  4029a7:	call   402c06 <mmk_matcher_add@@Base>
  4029ac:	mov    rax,QWORD PTR [rbp-0x40]
  4029b0:	mov    edi,0x0
  4029b5:	call   rax
  4029b7:	call   402bc7 <mmk_matcher_term@@Base>
  4029bc:	lea    rdi,[rip+0x2705]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  4029c3:	call   402120 <my_strdup@plt>
  4029c8:	mov    QWORD PTR [rbp-0x38],rax
  4029cc:	cmp    QWORD PTR [rbp-0x38],0x0
  4029d1:	jne    4029df <test_error_case@@Base+0xba>
  4029d3:	call   402050 <__errno_location@plt>
  4029d8:	mov    eax,DWORD PTR [rax]
  4029da:	cmp    eax,0xc
  4029dd:	je     402a15 <test_error_case@@Base+0xf0>
  4029df:	mov    rax,QWORD PTR [rip+0x5612]        # 407ff8 <stderr@GLIBC_2.2.5>
  4029e6:	mov    rax,QWORD PTR [rax]
  4029e9:	lea    r8,[rip+0x26e0]        # 4050d0 <_IO_stdin_used@@Base+0xd0>
  4029f0:	mov    ecx,0x27
  4029f5:	lea    rdx,[rip+0x262c]        # 405028 <_IO_stdin_used@@Base+0x28>
  4029fc:	lea    rsi,[rip+0x2681]        # 405084 <_IO_stdin_used@@Base+0x84>
  402a03:	mov    rdi,rax
  402a06:	mov    eax,0x0
  402a0b:	call   4020e0 <fprintf@plt>
  402a10:	call   402040 <abort@plt>
  402a15:	mov    rax,QWORD PTR [rbp-0x40]
  402a19:	mov    rdi,rax
  402a1c:	call   402b21 <mmk_reset@@Base>
  402a21:	nop
  402a22:	mov    rax,QWORD PTR [rbp-0x8]
  402a26:	xor    rax,QWORD PTR fs:0x28
  402a2f:	je     402a36 <test_error_case@@Base+0x111>
  402a31:	call   402080 <__stack_chk_fail@plt>
  402a36:	leave  
  402a37:	ret    

0000000000402a38 <main@@Base>:
  402a38:	endbr64 
  402a3c:	push   rbp
  402a3d:	mov    rbp,rsp
  402a40:	call   402772 <test_simple_case@@Base>
  402a45:	call   402925 <test_error_case@@Base>
  402a4a:	mov    eax,0x0
  402a4f:	pop    rbp
  402a50:	ret    

0000000000402a51 <mmk_init@@Base>:
  402a51:	endbr64 
  402a55:	push   rbp
  402a56:	mov    rbp,rsp
  402a59:	mov    eax,DWORD PTR [rip+0x5681]        # 4080e0 <__bss_start@@Base+0x18>
  402a5f:	test   eax,eax
  402a61:	jne    402acd <mmk_init@@Base+0x7c>
  402a63:	call   4032b6 <plt_init_ctx@@Base>
  402a68:	mov    QWORD PTR [rip+0x5679],rax        # 4080e8 <__bss_start@@Base+0x20>
  402a6f:	mov    rax,QWORD PTR [rip+0x5672]        # 4080e8 <__bss_start@@Base+0x20>
  402a76:	cmp    rax,0xffffffffffffffff
  402a7a:	jne    402ab2 <mmk_init@@Base+0x61>
  402a7c:	mov    rax,QWORD PTR [rip+0x5575]        # 407ff8 <stderr@GLIBC_2.2.5>
  402a83:	mov    rax,QWORD PTR [rax]
  402a86:	lea    r8,[rip+0x2663]        # 4050f0 <_IO_stdin_used@@Base+0xf0>
  402a8d:	mov    ecx,0x2d
  402a92:	lea    rdx,[rip+0x266f]        # 405108 <_IO_stdin_used@@Base+0x108>
  402a99:	lea    rsi,[rip+0x26ba]        # 40515a <_IO_stdin_used@@Base+0x15a>
  402aa0:	mov    rdi,rax
  402aa3:	mov    eax,0x0
  402aa8:	call   4020e0 <fprintf@plt>
  402aad:	call   402040 <abort@plt>
  402ab2:	mov    rax,QWORD PTR [rip+0x562f]        # 4080e8 <__bss_start@@Base+0x20>
  402ab9:	mov    rdi,rax
  402abc:	call   404698 <mmk_init_vital_functions@@Base>
  402ac1:	mov    DWORD PTR [rip+0x5615],0x1        # 4080e0 <__bss_start@@Base+0x18>
  402acb:	jmp    402ace <mmk_init@@Base+0x7d>
  402acd:	nop
  402ace:	pop    rbp
  402acf:	ret    

0000000000402ad0 <mmk_plt_ctx@@Base>:
  402ad0:	endbr64 
  402ad4:	push   rbp
  402ad5:	mov    rbp,rsp
  402ad8:	mov    eax,DWORD PTR [rip+0x5602]        # 4080e0 <__bss_start@@Base+0x18>
  402ade:	test   eax,eax
  402ae0:	jne    402b18 <mmk_plt_ctx@@Base+0x48>
  402ae2:	mov    rax,QWORD PTR [rip+0x550f]        # 407ff8 <stderr@GLIBC_2.2.5>
  402ae9:	mov    rax,QWORD PTR [rax]
  402aec:	lea    r8,[rip+0x2684]        # 405177 <_IO_stdin_used@@Base+0x177>
  402af3:	mov    ecx,0x36
  402af8:	lea    rdx,[rip+0x2609]        # 405108 <_IO_stdin_used@@Base+0x108>
  402aff:	lea    rsi,[rip+0x2654]        # 40515a <_IO_stdin_used@@Base+0x15a>
  402b06:	mov    rdi,rax
  402b09:	mov    eax,0x0
  402b0e:	call   4020e0 <fprintf@plt>
  402b13:	call   402040 <abort@plt>
  402b18:	mov    rax,QWORD PTR [rip+0x55c9]        # 4080e8 <__bss_start@@Base+0x20>
  402b1f:	pop    rbp
  402b20:	ret    

0000000000402b21 <mmk_reset@@Base>:
  402b21:	endbr64 
  402b25:	push   rbp
  402b26:	mov    rbp,rsp
  402b29:	sub    rsp,0x20
  402b2d:	mov    QWORD PTR [rbp-0x18],rdi
  402b31:	cmp    QWORD PTR [rbp-0x18],0x0
  402b36:	je     402b66 <mmk_reset@@Base+0x45>
  402b38:	mov    rax,QWORD PTR [rbp-0x18]
  402b3c:	mov    rdi,rax
  402b3f:	call   403e16 <mmk_ask_ctx@@Base>
  402b44:	mov    QWORD PTR [rbp-0x10],rax
  402b48:	mov    rax,QWORD PTR [rbp-0x10]
  402b4c:	mov    rdi,rax
  402b4f:	call   403ab1 <mmk_stub_context@@Base>
  402b54:	mov    QWORD PTR [rbp-0x8],rax
  402b58:	mov    rax,QWORD PTR [rbp-0x8]
  402b5c:	mov    rdi,rax
  402b5f:	call   402ec6 <mmk_mock_destroy_internal@@Base>
  402b64:	jmp    402b67 <mmk_reset@@Base+0x46>
  402b66:	nop
  402b67:	leave  
  402b68:	ret    

0000000000402b69 <mmk_matcher_init@@Base>:
  402b69:	endbr64 
  402b6d:	push   rbp
  402b6e:	mov    rbp,rsp
  402b71:	sub    rsp,0x20
  402b75:	mov    DWORD PTR [rbp-0x14],edi
  402b78:	mov    edi,0x18
  402b7d:	call   40461d <mmk_malloc@@Base>
  402b82:	mov    QWORD PTR [rbp-0x8],rax
  402b86:	mov    rax,QWORD PTR [rbp-0x8]
  402b8a:	mov    QWORD PTR [rax],0x0
  402b91:	mov    QWORD PTR [rax+0x8],0x0
  402b99:	mov    QWORD PTR [rax+0x10],0x0
  402ba1:	mov    rax,QWORD PTR [rbp-0x8]
  402ba5:	mov    edx,DWORD PTR [rbp-0x14]
  402ba8:	mov    DWORD PTR [rax],edx
  402baa:	mov    rax,QWORD PTR fs:0x0
  402bb3:	lea    rax,[rax-0x28]
  402bba:	mov    rdx,rax
  402bbd:	mov    rax,QWORD PTR [rbp-0x8]
  402bc1:	mov    QWORD PTR [rdx],rax
  402bc4:	nop
  402bc5:	leave  
  402bc6:	ret    

0000000000402bc7 <mmk_matcher_term@@Base>:
  402bc7:	endbr64 
  402bcb:	push   rbp
  402bcc:	mov    rbp,rsp
  402bcf:	mov    rax,QWORD PTR fs:0x0
  402bd8:	lea    rax,[rax-0x28]
  402bdf:	mov    QWORD PTR [rax],0x0
  402be6:	nop
  402be7:	pop    rbp
  402be8:	ret    

0000000000402be9 <mmk_matcher_ctx@@Base>:
  402be9:	endbr64 
  402bed:	push   rbp
  402bee:	mov    rbp,rsp
  402bf1:	mov    rax,QWORD PTR fs:0x0
  402bfa:	lea    rax,[rax-0x28]
  402c01:	mov    rax,QWORD PTR [rax]
  402c04:	pop    rbp
  402c05:	ret    

0000000000402c06 <mmk_matcher_add@@Base>:
  402c06:	endbr64 
  402c0a:	push   rbp
  402c0b:	mov    rbp,rsp
  402c0e:	sub    rsp,0x30
  402c12:	mov    DWORD PTR [rbp-0x24],edi
  402c15:	mov    DWORD PTR [rbp-0x28],esi
  402c18:	mov    edi,0x18
  402c1d:	call   40461d <mmk_malloc@@Base>
  402c22:	mov    QWORD PTR [rbp-0x8],rax
  402c26:	mov    rax,QWORD PTR fs:0x0
  402c2f:	lea    rax,[rax-0x28]
  402c36:	mov    rax,QWORD PTR [rax]
  402c39:	mov    QWORD PTR [rbp-0x18],rax
  402c3d:	mov    eax,DWORD PTR [rbp-0x28]
  402c40:	movsxd rdx,eax
  402c43:	mov    rax,QWORD PTR [rbp-0x8]
  402c47:	mov    QWORD PTR [rax],0x0
  402c4e:	mov    QWORD PTR [rax+0x8],0x0
  402c56:	mov    QWORD PTR [rax+0x10],0x0
  402c5e:	mov    rax,QWORD PTR [rbp-0x8]
  402c62:	mov    ecx,DWORD PTR [rbp-0x24]
  402c65:	mov    DWORD PTR [rax],ecx
  402c67:	mov    rax,QWORD PTR [rbp-0x8]
  402c6b:	mov    QWORD PTR [rax+0x8],rdx
  402c6f:	mov    rax,QWORD PTR fs:0x0
  402c78:	lea    rax,[rax-0x28]
  402c7f:	mov    rax,QWORD PTR [rax]
  402c82:	mov    rax,QWORD PTR [rax+0x10]
  402c86:	mov    QWORD PTR [rbp-0x10],rax
  402c8a:	jmp    402ca0 <mmk_matcher_add@@Base+0x9a>
  402c8c:	mov    rax,QWORD PTR [rbp-0x10]
  402c90:	mov    QWORD PTR [rbp-0x18],rax
  402c94:	mov    rax,QWORD PTR [rbp-0x10]
  402c98:	mov    rax,QWORD PTR [rax+0x10]
  402c9c:	mov    QWORD PTR [rbp-0x10],rax
  402ca0:	cmp    QWORD PTR [rbp-0x10],0x0
  402ca5:	je     402cbc <mmk_matcher_add@@Base+0xb6>
  402ca7:	mov    rax,QWORD PTR [rbp-0x10]
  402cab:	mov    rdx,QWORD PTR [rax+0x8]
  402caf:	mov    rax,QWORD PTR [rbp-0x8]
  402cb3:	mov    rax,QWORD PTR [rax+0x8]
  402cb7:	cmp    rdx,rax
  402cba:	jb     402c8c <mmk_matcher_add@@Base+0x86>
  402cbc:	mov    rax,QWORD PTR [rbp-0x18]
  402cc0:	mov    rdx,QWORD PTR [rax+0x10]
  402cc4:	mov    rax,QWORD PTR [rbp-0x8]
  402cc8:	mov    QWORD PTR [rax+0x10],rdx
  402ccc:	mov    rax,QWORD PTR [rbp-0x18]
  402cd0:	mov    rdx,QWORD PTR [rbp-0x8]
  402cd4:	mov    QWORD PTR [rax+0x10],rdx
  402cd8:	nop
  402cd9:	leave  
  402cda:	ret    

0000000000402cdb <mmk_matcher_get_predicate@@Base>:
  402cdb:	endbr64 
  402cdf:	push   rbp
  402ce0:	mov    rbp,rsp
  402ce3:	mov    QWORD PTR [rbp-0x8],rdi
  402ce7:	mov    rax,QWORD PTR [rbp-0x8]
  402ceb:	add    rax,0x18
  402cef:	pop    rbp
  402cf0:	ret    

0000000000402cf1 <mmk_mock_create_internal@@Base>:
  402cf1:	endbr64 
  402cf5:	push   rbp
  402cf6:	mov    rbp,rsp
  402cf9:	push   rbx
  402cfa:	sub    rsp,0x48
  402cfe:	mov    QWORD PTR [rbp-0x48],rdi
  402d02:	mov    QWORD PTR [rbp-0x50],rsi
  402d06:	call   402a51 <mmk_init@@Base>
  402d0b:	mov    edi,0x28
  402d10:	call   40461d <mmk_malloc@@Base>
  402d15:	mov    QWORD PTR [rbp-0x28],rax
  402d19:	cmp    QWORD PTR [rbp-0x28],0x0
  402d1e:	jne    402d56 <mmk_mock_create_internal@@Base+0x65>
  402d20:	mov    rax,QWORD PTR [rip+0x52d1]        # 407ff8 <stderr@GLIBC_2.2.5>
  402d27:	mov    rax,QWORD PTR [rax]
  402d2a:	lea    r8,[rip+0x2457]        # 405188 <_IO_stdin_used@@Base+0x188>
  402d31:	mov    ecx,0x24
  402d36:	lea    rdx,[rip+0x2453]        # 405190 <_IO_stdin_used@@Base+0x190>
  402d3d:	lea    rsi,[rip+0x249e]        # 4051e2 <_IO_stdin_used@@Base+0x1e2>
  402d44:	mov    rdi,rax
  402d47:	mov    eax,0x0
  402d4c:	call   4020e0 <fprintf@plt>
  402d51:	call   402040 <abort@plt>
  402d56:	mov    rax,QWORD PTR [rbp-0x28]
  402d5a:	mov    QWORD PTR [rax],0x0
  402d61:	mov    QWORD PTR [rax+0x8],0x0
  402d69:	mov    QWORD PTR [rax+0x10],0x0
  402d71:	mov    QWORD PTR [rax+0x18],0x0
  402d79:	mov    QWORD PTR [rax+0x20],0x0
  402d81:	mov    rax,QWORD PTR [rbp-0x48]
  402d85:	mov    esi,0x40
  402d8a:	mov    rdi,rax
  402d8d:	call   4044f4 <mmk_strchr@@Base>
  402d92:	mov    QWORD PTR [rbp-0x20],rax
  402d96:	cmp    QWORD PTR [rbp-0x20],0x0
  402d9b:	jne    402daf <mmk_mock_create_internal@@Base+0xbe>
  402d9d:	mov    rax,QWORD PTR [rbp-0x48]
  402da1:	mov    rdi,rax
  402da4:	call   4045bd <mmk_strlen@@Base>
  402da9:	mov    QWORD PTR [rbp-0x30],rax
  402dad:	jmp    402dbb <mmk_mock_create_internal@@Base+0xca>
  402daf:	mov    rax,QWORD PTR [rbp-0x20]
  402db3:	sub    rax,QWORD PTR [rbp-0x48]
  402db7:	mov    QWORD PTR [rbp-0x30],rax
  402dbb:	mov    rax,QWORD PTR [rbp-0x30]
  402dbf:	inc    rax
  402dc2:	mov    rdi,rax
  402dc5:	call   40461d <mmk_malloc@@Base>
  402dca:	mov    QWORD PTR [rbp-0x18],rax
  402dce:	mov    rdx,QWORD PTR [rbp-0x30]
  402dd2:	mov    rcx,QWORD PTR [rbp-0x48]
  402dd6:	mov    rax,QWORD PTR [rbp-0x18]
  402dda:	mov    rsi,rcx
  402ddd:	mov    rdi,rax
  402de0:	call   40456f <mmk_strncpy@@Base>
  402de5:	mov    rdx,QWORD PTR [rbp-0x18]
  402de9:	mov    rax,QWORD PTR [rbp-0x30]
  402ded:	add    rax,rdx
  402df0:	mov    BYTE PTR [rax],0x0
  402df3:	cmp    QWORD PTR [rbp-0x20],0x0
  402df8:	je     402e19 <mmk_mock_create_internal@@Base+0x128>
  402dfa:	mov    rax,QWORD PTR [rbp-0x20]
  402dfe:	inc    rax
  402e01:	mov    edx,0x4
  402e06:	lea    rsi,[rip+0x23f2]        # 4051ff <_IO_stdin_used@@Base+0x1ff>
  402e0d:	mov    rdi,rax
  402e10:	call   40447c <mmk_strneq@@Base>
  402e15:	test   eax,eax
  402e17:	je     402e20 <mmk_mock_create_internal@@Base+0x12f>
  402e19:	mov    eax,0x1
  402e1e:	jmp    402e25 <mmk_mock_create_internal@@Base+0x134>
  402e20:	mov    eax,0x0
  402e25:	mov    DWORD PTR [rbp-0x34],eax
  402e28:	mov    rdx,QWORD PTR [rbp-0x28]
  402e2c:	mov    rcx,QWORD PTR [rbp-0x50]
  402e30:	mov    rax,QWORD PTR [rbp-0x48]
  402e34:	mov    rsi,rcx
  402e37:	mov    rdi,rax
  402e3a:	call   403d1a <mmk_stub_create@@Base>
  402e3f:	mov    rdx,rax
  402e42:	mov    rax,QWORD PTR [rbp-0x28]
  402e46:	mov    QWORD PTR [rax+0x8],rdx
  402e4a:	mov    rax,QWORD PTR [rbp-0x28]
  402e4e:	mov    rax,QWORD PTR [rax+0x8]
  402e52:	test   rax,rax
  402e55:	jne    402e7e <mmk_mock_create_internal@@Base+0x18d>
  402e57:	mov    rax,QWORD PTR [rip+0x519a]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e5e:	mov    rax,QWORD PTR [rax]
  402e61:	mov    rdx,QWORD PTR [rbp-0x48]
  402e65:	lea    rsi,[rip+0x239c]        # 405208 <_IO_stdin_used@@Base+0x208>
  402e6c:	mov    rdi,rax
  402e6f:	mov    eax,0x0
  402e74:	call   4020e0 <fprintf@plt>
  402e79:	call   402040 <abort@plt>
  402e7e:	cmp    DWORD PTR [rbp-0x34],0x0
  402e82:	jne    402ea7 <mmk_mock_create_internal@@Base+0x1b6>
  402e84:	mov    rax,QWORD PTR [rbp-0x28]
  402e88:	mov    rbx,QWORD PTR [rax+0x8]
  402e8c:	mov    rdx,QWORD PTR [rbp-0x28]
  402e90:	mov    rcx,QWORD PTR [rbp-0x50]
  402e94:	mov    rax,QWORD PTR [rbp-0x18]
  402e98:	mov    rsi,rcx
  402e9b:	mov    rdi,rax
  402e9e:	call   403d1a <mmk_stub_create@@Base>
  402ea3:	mov    QWORD PTR [rbx+0x48],rax
  402ea7:	mov    rax,QWORD PTR [rbp-0x18]
  402eab:	mov    rdi,rax
  402eae:	call   404672 <mmk_free@@Base>
  402eb3:	mov    rax,QWORD PTR [rbp-0x28]
  402eb7:	mov    rax,QWORD PTR [rax+0x8]
  402ebb:	mov    rax,QWORD PTR [rax+0x40]
  402ebf:	add    rsp,0x48
  402ec3:	pop    rbx
  402ec4:	pop    rbp
  402ec5:	ret    

0000000000402ec6 <mmk_mock_destroy_internal@@Base>:
  402ec6:	endbr64 
  402eca:	push   rbp
  402ecb:	mov    rbp,rsp
  402ece:	sub    rsp,0x40
  402ed2:	mov    QWORD PTR [rbp-0x38],rdi
  402ed6:	mov    rax,QWORD PTR [rbp-0x38]
  402eda:	mov    rax,QWORD PTR [rax+0x8]
  402ede:	mov    QWORD PTR [rbp-0x30],rax
  402ee2:	jmp    402f04 <mmk_mock_destroy_internal@@Base+0x3e>
  402ee4:	mov    rax,QWORD PTR [rbp-0x30]
  402ee8:	mov    rax,QWORD PTR [rax+0x48]
  402eec:	mov    QWORD PTR [rbp-0x18],rax
  402ef0:	mov    rax,QWORD PTR [rbp-0x30]
  402ef4:	mov    rdi,rax
  402ef7:	call   403deb <mmk_stub_destroy@@Base>
  402efc:	mov    rax,QWORD PTR [rbp-0x18]
  402f00:	mov    QWORD PTR [rbp-0x30],rax
  402f04:	cmp    QWORD PTR [rbp-0x30],0x0
  402f09:	jne    402ee4 <mmk_mock_destroy_internal@@Base+0x1e>
  402f0b:	mov    rax,QWORD PTR [rbp-0x38]
  402f0f:	mov    rax,QWORD PTR [rax+0x10]
  402f13:	mov    rdi,rax
  402f16:	call   404672 <mmk_free@@Base>
  402f1b:	mov    rax,QWORD PTR [rbp-0x38]
  402f1f:	mov    rax,QWORD PTR [rax]
  402f22:	mov    QWORD PTR [rbp-0x28],rax
  402f26:	jmp    402f7c <mmk_mock_destroy_internal@@Base+0xb6>
  402f28:	mov    rax,QWORD PTR [rbp-0x28]
  402f2c:	mov    rax,QWORD PTR [rax+0x8]
  402f30:	mov    QWORD PTR [rbp-0x10],rax
  402f34:	mov    rax,QWORD PTR [rbp-0x28]
  402f38:	mov    rax,QWORD PTR [rax]
  402f3b:	mov    QWORD PTR [rbp-0x20],rax
  402f3f:	jmp    402f61 <mmk_mock_destroy_internal@@Base+0x9b>
  402f41:	mov    rax,QWORD PTR [rbp-0x20]
  402f45:	mov    rax,QWORD PTR [rax+0x10]
  402f49:	mov    QWORD PTR [rbp-0x8],rax
  402f4d:	mov    rax,QWORD PTR [rbp-0x20]
  402f51:	mov    rdi,rax
  402f54:	call   404672 <mmk_free@@Base>
  402f59:	mov    rax,QWORD PTR [rbp-0x8]
  402f5d:	mov    QWORD PTR [rbp-0x20],rax
  402f61:	cmp    QWORD PTR [rbp-0x20],0x0
  402f66:	jne    402f41 <mmk_mock_destroy_internal@@Base+0x7b>
  402f68:	mov    rax,QWORD PTR [rbp-0x28]
  402f6c:	mov    rdi,rax
  402f6f:	call   404672 <mmk_free@@Base>
  402f74:	mov    rax,QWORD PTR [rbp-0x10]
  402f78:	mov    QWORD PTR [rbp-0x28],rax
  402f7c:	cmp    QWORD PTR [rbp-0x28],0x0
  402f81:	jne    402f28 <mmk_mock_destroy_internal@@Base+0x62>
  402f83:	mov    rax,QWORD PTR [rbp-0x38]
  402f87:	mov    rdi,rax
  402f8a:	call   404672 <mmk_free@@Base>
  402f8f:	nop
  402f90:	leave  
  402f91:	ret    

0000000000402f92 <mmk_mock_params_begin@@Base>:
  402f92:	endbr64 
  402f96:	push   rbp
  402f97:	mov    rbp,rsp
  402f9a:	mov    QWORD PTR [rbp-0x8],rdi
  402f9e:	mov    rax,QWORD PTR [rbp-0x8]
  402fa2:	mov    rax,QWORD PTR [rax+0x10]
  402fa6:	test   rax,rax
  402fa9:	je     402fb8 <mmk_mock_params_begin@@Base+0x26>
  402fab:	mov    rax,QWORD PTR [rbp-0x8]
  402faf:	mov    rax,QWORD PTR [rax+0x18]
  402fb3:	test   rax,rax
  402fb6:	jne    402fbf <mmk_mock_params_begin@@Base+0x2d>
  402fb8:	mov    eax,0x0
  402fbd:	jmp    402fcb <mmk_mock_params_begin@@Base+0x39>
  402fbf:	mov    rax,QWORD PTR [rbp-0x8]
  402fc3:	mov    rax,QWORD PTR [rax+0x10]
  402fc7:	add    rax,0x8
  402fcb:	pop    rbp
  402fcc:	ret    

0000000000402fcd <mmk_mock_params_next@@Base>:
  402fcd:	endbr64 
  402fd1:	push   rbp
  402fd2:	mov    rbp,rsp
  402fd5:	mov    QWORD PTR [rbp-0x18],rdi
  402fd9:	mov    QWORD PTR [rbp-0x20],rsi
  402fdd:	mov    rax,QWORD PTR [rbp-0x20]
  402fe1:	mov    QWORD PTR [rbp-0x10],rax
  402fe5:	mov    rax,QWORD PTR [rbp-0x10]
  402fe9:	mov    rax,QWORD PTR [rax-0x8]
  402fed:	mov    QWORD PTR [rbp-0x8],rax
  402ff1:	mov    rax,QWORD PTR [rbp-0x8]
  402ff5:	add    rax,0x8
  402ff9:	add    QWORD PTR [rbp-0x10],rax
  402ffd:	mov    rax,QWORD PTR [rbp-0x18]
  403001:	mov    rdx,QWORD PTR [rax+0x10]
  403005:	mov    rax,QWORD PTR [rbp-0x18]
  403009:	mov    rax,QWORD PTR [rax+0x18]
  40300d:	add    rax,rdx
  403010:	cmp    QWORD PTR [rbp-0x10],rax
  403014:	jb     40301d <mmk_mock_params_next@@Base+0x50>
  403016:	mov    eax,0x0
  40301b:	jmp    403021 <mmk_mock_params_next@@Base+0x54>
  40301d:	mov    rax,QWORD PTR [rbp-0x10]
  403021:	pop    rbp
  403022:	ret    

0000000000403023 <mmk_mock_get_params@@Base>:
  403023:	endbr64 
  403027:	push   rbp
  403028:	mov    rbp,rsp
  40302b:	sub    rsp,0x10
  40302f:	call   403e80 <mmk_ctx@@Base>
  403034:	mov    rdi,rax
  403037:	call   403ab1 <mmk_stub_context@@Base>
  40303c:	mov    QWORD PTR [rbp-0x8],rax
  403040:	mov    rax,QWORD PTR [rbp-0x8]
  403044:	mov    rax,QWORD PTR [rax]
  403047:	leave  
  403048:	ret    
  403049:	endbr64 
  40304d:	push   rbp
  40304e:	mov    rbp,rsp
  403051:	mov    QWORD PTR [rbp-0x18],rdi
  403055:	mov    QWORD PTR [rbp-0x20],rsi
  403059:	mov    rax,QWORD PTR [rbp-0x18]
  40305d:	mov    rax,QWORD PTR [rax]
  403060:	mov    QWORD PTR [rbp-0x8],rax
  403064:	mov    rax,QWORD PTR [rbp-0x18]
  403068:	mov    rax,QWORD PTR [rax+0x10]
  40306c:	mov    QWORD PTR [rbp-0x10],rax
  403070:	jmp    4030ba <mmk_mock_get_params@@Base+0x97>
  403072:	mov    rax,QWORD PTR [rbp-0x10]
  403076:	mov    rax,QWORD PTR [rax]
  403079:	cmp    QWORD PTR [rbp-0x20],rax
  40307d:	jne    4030b5 <mmk_mock_get_params@@Base+0x92>
  40307f:	mov    rax,QWORD PTR [rbp-0x10]
  403083:	mov    rax,QWORD PTR [rax+0x8]
  403087:	cmp    QWORD PTR [rbp-0x8],rax
  40308b:	ja     4030a4 <mmk_mock_get_params@@Base+0x81>
  40308d:	mov    rax,QWORD PTR [rbp-0x10]
  403091:	mov    rax,QWORD PTR [rax+0x8]
  403095:	test   rax,rax
  403098:	js     4030a4 <mmk_mock_get_params@@Base+0x81>
  40309a:	mov    rax,QWORD PTR [rbp-0x10]
  40309e:	mov    rax,QWORD PTR [rax+0x8]
  4030a2:	jmp    4030cb <mmk_mock_get_params@@Base+0xa8>
  4030a4:	mov    rax,QWORD PTR [rbp-0x10]
  4030a8:	mov    rdx,QWORD PTR [rax+0x8]
  4030ac:	mov    rax,QWORD PTR [rbp-0x8]
  4030b0:	add    rax,rdx
  4030b3:	jmp    4030cb <mmk_mock_get_params@@Base+0xa8>
  4030b5:	add    QWORD PTR [rbp-0x10],0x10
  4030ba:	mov    rax,QWORD PTR [rbp-0x10]
  4030be:	mov    rax,QWORD PTR [rax]
  4030c1:	test   rax,rax
  4030c4:	jne    403072 <mmk_mock_get_params@@Base+0x4f>
  4030c6:	mov    eax,0x0
  4030cb:	pop    rbp
  4030cc:	ret    
  4030cd:	endbr64 
  4030d1:	push   rbp
  4030d2:	mov    rbp,rsp
  4030d5:	mov    QWORD PTR [rbp-0x18],rdi
  4030d9:	mov    QWORD PTR [rbp-0x20],rsi
  4030dd:	mov    rax,QWORD PTR [rbp-0x18]
  4030e1:	mov    rax,QWORD PTR [rax+0x10]
  4030e5:	mov    QWORD PTR [rbp-0x8],rax
  4030e9:	jmp    403107 <mmk_mock_get_params@@Base+0xe4>
  4030eb:	mov    rax,QWORD PTR [rbp-0x8]
  4030ef:	mov    rax,QWORD PTR [rax]
  4030f2:	cmp    QWORD PTR [rbp-0x20],rax
  4030f6:	jne    403102 <mmk_mock_get_params@@Base+0xdf>
  4030f8:	mov    rax,QWORD PTR [rbp-0x8]
  4030fc:	mov    rax,QWORD PTR [rax+0x8]
  403100:	jmp    403118 <mmk_mock_get_params@@Base+0xf5>
  403102:	add    QWORD PTR [rbp-0x8],0x10
  403107:	mov    rax,QWORD PTR [rbp-0x8]
  40310b:	mov    rax,QWORD PTR [rax]
  40310e:	test   rax,rax
  403111:	jne    4030eb <mmk_mock_get_params@@Base+0xc8>
  403113:	mov    eax,0x0
  403118:	pop    rbp
  403119:	ret    
  40311a:	endbr64 
  40311e:	push   rbp
  40311f:	mov    rbp,rsp
  403122:	mov    QWORD PTR [rbp-0x8],rdi
  403126:	mov    QWORD PTR [rbp-0x10],rsi
  40312a:	jmp    403148 <mmk_mock_get_params@@Base+0x125>
  40312c:	mov    rax,QWORD PTR [rbp-0x8]
  403130:	mov    rax,QWORD PTR [rax]
  403133:	cmp    QWORD PTR [rbp-0x10],rax
  403137:	jne    403143 <mmk_mock_get_params@@Base+0x120>
  403139:	mov    rax,QWORD PTR [rbp-0x8]
  40313d:	mov    rax,QWORD PTR [rax+0x8]
  403141:	jmp    40315b <mmk_mock_get_params@@Base+0x138>
  403143:	add    QWORD PTR [rbp-0x8],0x10
  403148:	mov    rax,QWORD PTR [rbp-0x8]
  40314c:	mov    rax,QWORD PTR [rax]
  40314f:	test   rax,rax
  403152:	jne    40312c <mmk_mock_get_params@@Base+0x109>
  403154:	mov    rax,0xffffffffffffffff
  40315b:	pop    rbp
  40315c:	ret    
  40315d:	endbr64 
  403161:	push   rbp
  403162:	mov    rbp,rsp
  403165:	mov    QWORD PTR [rbp-0x18],rdi
  403169:	mov    QWORD PTR [rbp-0x20],rsi
  40316d:	mov    QWORD PTR [rbp-0x8],0x0
  403175:	jmp    4031a6 <mmk_mock_get_params@@Base+0x183>
  403177:	mov    rax,QWORD PTR [rbp-0x8]
  40317b:	imul   rdx,rax,0x38
  40317f:	mov    rax,QWORD PTR [rbp-0x18]
  403183:	add    rax,rdx
  403186:	mov    eax,DWORD PTR [rax]
  403188:	cmp    eax,0x2
  40318b:	jne    4031a2 <mmk_mock_get_params@@Base+0x17f>
  40318d:	mov    rax,QWORD PTR [rbp-0x8]
  403191:	imul   rdx,rax,0x38
  403195:	mov    rax,QWORD PTR [rbp-0x18]
  403199:	add    rax,rdx
  40319c:	mov    rax,QWORD PTR [rax+0x10]
  4031a0:	jmp    4031b5 <mmk_mock_get_params@@Base+0x192>
  4031a2:	inc    QWORD PTR [rbp-0x8]
  4031a6:	mov    rax,QWORD PTR [rbp-0x8]
  4031aa:	cmp    rax,QWORD PTR [rbp-0x20]
  4031ae:	jb     403177 <mmk_mock_get_params@@Base+0x154>
  4031b0:	mov    eax,0x0
  4031b5:	pop    rbp
  4031b6:	ret    
  4031b7:	endbr64 
  4031bb:	push   rbp
  4031bc:	mov    rbp,rsp
  4031bf:	mov    QWORD PTR [rbp-0x18],rdi
  4031c3:	mov    rax,QWORD PTR [rbp-0x18]
  4031c7:	mov    QWORD PTR [rbp-0x8],rax
  4031cb:	jmp    4031e9 <mmk_mock_get_params@@Base+0x1c6>
  4031cd:	mov    rax,QWORD PTR [rbp-0x8]
  4031d1:	mov    rax,QWORD PTR [rax]
  4031d4:	cmp    rax,0x15
  4031d8:	jne    4031e4 <mmk_mock_get_params@@Base+0x1c1>
  4031da:	mov    rax,QWORD PTR [rbp-0x8]
  4031de:	mov    rax,QWORD PTR [rax+0x8]
  4031e2:	jmp    4031fa <mmk_mock_get_params@@Base+0x1d7>
  4031e4:	add    QWORD PTR [rbp-0x8],0x10
  4031e9:	mov    rax,QWORD PTR [rbp-0x8]
  4031ed:	mov    rax,QWORD PTR [rax]
  4031f0:	test   rax,rax
  4031f3:	jne    4031cd <mmk_mock_get_params@@Base+0x1aa>
  4031f5:	mov    eax,0x0
  4031fa:	pop    rbp
  4031fb:	ret    
  4031fc:	endbr64 
  403200:	push   rbp
  403201:	mov    rbp,rsp
  403204:	sub    rsp,0x30
  403208:	mov    QWORD PTR [rbp-0x30],0x0
  403210:	mov    rax,QWORD PTR [rip+0x4db9]        # 407fd0 <_r_debug@GLIBC_2.2.5>
  403217:	mov    QWORD PTR [rbp-0x30],rax
  40321b:	cmp    QWORD PTR [rbp-0x30],0x0
  403220:	jne    4032b0 <mmk_mock_get_params@@Base+0x28d>
  403226:	mov    rax,QWORD PTR [rip+0x4dbb]        # 407fe8 <environ@GLIBC_2.2.5>
  40322d:	mov    rax,QWORD PTR [rax]
  403230:	mov    QWORD PTR [rbp-0x28],rax
  403234:	nop
  403235:	mov    rax,QWORD PTR [rbp-0x28]
  403239:	lea    rdx,[rax+0x8]
  40323d:	mov    QWORD PTR [rbp-0x28],rdx
  403241:	mov    rax,QWORD PTR [rax]
  403244:	test   rax,rax
  403247:	jne    403235 <mmk_mock_get_params@@Base+0x212>
  403249:	mov    rax,QWORD PTR [rbp-0x28]
  40324d:	mov    QWORD PTR [rbp-0x20],rax
  403251:	mov    rax,QWORD PTR [rbp-0x20]
  403255:	mov    esi,0x3
  40325a:	mov    rdi,rax
  40325d:	call   40311a <mmk_mock_get_params@@Base+0xf7>
  403262:	mov    QWORD PTR [rbp-0x18],rax
  403266:	mov    rax,QWORD PTR [rbp-0x20]
  40326a:	mov    esi,0x4
  40326f:	mov    rdi,rax
  403272:	call   40311a <mmk_mock_get_params@@Base+0xf7>
  403277:	mov    QWORD PTR [rbp-0x10],rax
  40327b:	cmp    QWORD PTR [rbp-0x18],0xffffffffffffffff
  403280:	je     4032b0 <mmk_mock_get_params@@Base+0x28d>
  403282:	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
  403287:	je     4032b0 <mmk_mock_get_params@@Base+0x28d>
  403289:	mov    rax,QWORD PTR [rbp-0x18]
  40328d:	mov    rdx,QWORD PTR [rbp-0x10]
  403291:	mov    rsi,rdx
  403294:	mov    rdi,rax
  403297:	call   40315d <mmk_mock_get_params@@Base+0x13a>
  40329c:	mov    QWORD PTR [rbp-0x8],rax
  4032a0:	mov    rax,QWORD PTR [rbp-0x8]
  4032a4:	mov    rdi,rax
  4032a7:	call   4031b7 <mmk_mock_get_params@@Base+0x194>
  4032ac:	mov    QWORD PTR [rbp-0x30],rax
  4032b0:	mov    rax,QWORD PTR [rbp-0x30]
  4032b4:	leave  
  4032b5:	ret    

00000000004032b6 <plt_init_ctx@@Base>:
  4032b6:	endbr64 
  4032ba:	push   rbp
  4032bb:	mov    rbp,rsp
  4032be:	mov    rax,QWORD PTR [rip+0x4dfb]        # 4080c0 <__data_start@@Base+0x18>
  4032c5:	cmp    rax,0xffffffffffffffff
  4032c9:	jne    4032d7 <plt_init_ctx@@Base+0x21>
  4032cb:	call   4031fc <mmk_mock_get_params@@Base+0x1d9>
  4032d0:	mov    QWORD PTR [rip+0x4de9],rax        # 4080c0 <__data_start@@Base+0x18>
  4032d7:	mov    rax,QWORD PTR [rip+0x4de2]        # 4080c0 <__data_start@@Base+0x18>
  4032de:	pop    rbp
  4032df:	ret    

00000000004032e0 <plt_get_lib@@Base>:
  4032e0:	endbr64 
  4032e4:	push   rbp
  4032e5:	mov    rbp,rsp
  4032e8:	push   r15
  4032ea:	push   r14
  4032ec:	push   r13
  4032ee:	push   r12
  4032f0:	push   rbx
  4032f1:	sub    rsp,0x78
  4032f5:	mov    QWORD PTR [rbp-0x98],rdi
  4032fc:	mov    QWORD PTR [rbp-0xa0],rsi
  403303:	mov    rax,QWORD PTR fs:0x28
  40330c:	mov    QWORD PTR [rbp-0x38],rax
  403310:	xor    eax,eax
  403312:	cmp    QWORD PTR [rbp-0xa0],0x0
  40331a:	jne    40332a <plt_get_lib@@Base+0x4a>
  40331c:	lea    rax,[rip+0x1f1d]        # 405240 <_IO_stdin_used@@Base+0x240>
  403323:	mov    QWORD PTR [rbp-0xa0],rax
  40332a:	mov    DWORD PTR [rbp-0x88],0x0
  403334:	mov    rax,QWORD PTR [rbp-0xa0]
  40333b:	mov    edx,0x4
  403340:	lea    rsi,[rip+0x1efe]        # 405245 <_IO_stdin_used@@Base+0x245>
  403347:	mov    rdi,rax
  40334a:	call   402060 <strncmp@plt>
  40334f:	test   eax,eax
  403351:	jne    403362 <plt_get_lib@@Base+0x82>
  403353:	mov    DWORD PTR [rbp-0x88],0x1
  40335d:	jmp    403478 <plt_get_lib@@Base+0x198>
  403362:	mov    rax,QWORD PTR [rbp-0xa0]
  403369:	mov    edx,0x5
  40336e:	lea    rsi,[rip+0x1ed5]        # 40524a <_IO_stdin_used@@Base+0x24a>
  403375:	mov    rdi,rax
  403378:	call   402060 <strncmp@plt>
  40337d:	test   eax,eax
  40337f:	jne    403390 <plt_get_lib@@Base+0xb0>
  403381:	mov    DWORD PTR [rbp-0x88],0x2
  40338b:	jmp    403478 <plt_get_lib@@Base+0x198>
  403390:	mov    rax,QWORD PTR [rbp-0xa0]
  403397:	mov    edx,0x4
  40339c:	lea    rsi,[rip+0x1ead]        # 405250 <_IO_stdin_used@@Base+0x250>
  4033a3:	mov    rdi,rax
  4033a6:	call   402060 <strncmp@plt>
  4033ab:	test   eax,eax
  4033ad:	jne    4033be <plt_get_lib@@Base+0xde>
  4033af:	mov    DWORD PTR [rbp-0x88],0x3
  4033b9:	jmp    403478 <plt_get_lib@@Base+0x198>
  4033be:	mov    rax,QWORD PTR [rbp-0xa0]
  4033c5:	lea    rsi,[rip+0x1e74]        # 405240 <_IO_stdin_used@@Base+0x240>
  4033cc:	mov    rdi,rax
  4033cf:	call   4020d0 <strcmp@plt>
  4033d4:	test   eax,eax
  4033d6:	jne    4033eb <plt_get_lib@@Base+0x10b>
  4033d8:	lea    rax,[rip+0x1e76]        # 405255 <_IO_stdin_used@@Base+0x255>
  4033df:	mov    QWORD PTR [rbp-0xa0],rax
  4033e6:	jmp    403478 <plt_get_lib@@Base+0x198>
  4033eb:	mov    rax,QWORD PTR [rbp-0xa0]
  4033f2:	mov    esi,0x3a
  4033f7:	mov    rdi,rax
  4033fa:	call   4020a0 <strchr@plt>
  4033ff:	mov    QWORD PTR [rbp-0x78],rax
  403403:	cmp    QWORD PTR [rbp-0x78],0x0
  403408:	je     40344e <plt_get_lib@@Base+0x16e>
  40340a:	mov    rax,QWORD PTR [rbp-0x78]
  40340e:	sub    rax,QWORD PTR [rbp-0xa0]
  403415:	inc    rax
  403418:	mov    QWORD PTR [rbp-0x70],rax
  40341c:	mov    rax,QWORD PTR [rbp-0x70]
  403420:	mov    esi,eax
  403422:	mov    rax,QWORD PTR [rip+0x4bcf]        # 407ff8 <stderr@GLIBC_2.2.5>
  403429:	mov    rax,QWORD PTR [rax]
  40342c:	mov    rdx,QWORD PTR [rbp-0xa0]
  403433:	mov    rcx,rdx
  403436:	mov    edx,esi
  403438:	lea    rsi,[rip+0x1e19]        # 405258 <_IO_stdin_used@@Base+0x258>
  40343f:	mov    rdi,rax
  403442:	mov    eax,0x0
  403447:	call   4020e0 <fprintf@plt>
  40344c:	jmp    403473 <plt_get_lib@@Base+0x193>
  40344e:	mov    rax,QWORD PTR [rip+0x4ba3]        # 407ff8 <stderr@GLIBC_2.2.5>
  403455:	mov    rax,QWORD PTR [rax]
  403458:	mov    rdx,QWORD PTR [rbp-0xa0]
  40345f:	lea    rsi,[rip+0x1e1a]        # 405280 <_IO_stdin_used@@Base+0x280>
  403466:	mov    rdi,rax
  403469:	mov    eax,0x0
  40346e:	call   4020e0 <fprintf@plt>
  403473:	call   402040 <abort@plt>
  403478:	cmp    DWORD PTR [rbp-0x88],0x0
  40347f:	je     40349a <plt_get_lib@@Base+0x1ba>
  403481:	mov    rax,QWORD PTR [rbp-0xa0]
  403488:	mov    esi,0x3a
  40348d:	mov    rdi,rax
  403490:	call   4020a0 <strchr@plt>
  403495:	inc    rax
  403498:	jmp    4034a1 <plt_get_lib@@Base+0x1c1>
  40349a:	mov    rax,QWORD PTR [rbp-0xa0]
  4034a1:	mov    QWORD PTR [rbp-0x68],rax
  4034a5:	mov    rax,QWORD PTR [rbp-0x68]
  4034a9:	mov    rdi,rax
  4034ac:	call   402070 <strlen@plt>
  4034b1:	mov    QWORD PTR [rbp-0x60],rax
  4034b5:	mov    rax,QWORD PTR [rbp-0x68]
  4034b9:	lea    rsi,[rip+0x1de3]        # 4052a3 <_IO_stdin_used@@Base+0x2a3>
  4034c0:	mov    rdi,rax
  4034c3:	call   4020d0 <strcmp@plt>
  4034c8:	test   eax,eax
  4034ca:	sete   al
  4034cd:	movzx  eax,al
  4034d0:	mov    DWORD PTR [rbp-0x84],eax
  4034d6:	mov    rax,QWORD PTR [rbp-0x98]
  4034dd:	mov    rax,QWORD PTR [rax+0x8]
  4034e1:	mov    QWORD PTR [rbp-0x80],rax
  4034e5:	jmp    4036af <plt_get_lib@@Base+0x3cf>
  4034ea:	cmp    DWORD PTR [rbp-0x88],0x1
  4034f1:	jne    403640 <plt_get_lib@@Base+0x360>
  4034f7:	cmp    DWORD PTR [rbp-0x84],0x0
  4034fe:	je     403545 <plt_get_lib@@Base+0x265>
  403500:	mov    rax,QWORD PTR [rbp-0x80]
  403504:	mov    rax,QWORD PTR [rax+0x8]
  403508:	lea    rsi,[rip+0x1d96]        # 4052a5 <_IO_stdin_used@@Base+0x2a5>
  40350f:	mov    rdi,rax
  403512:	call   402140 <strstr@plt>
  403517:	test   rax,rax
  40351a:	jne    40353c <plt_get_lib@@Base+0x25c>
  40351c:	mov    rax,QWORD PTR [rbp-0x80]
  403520:	mov    rax,QWORD PTR [rax+0x8]
  403524:	lea    rsi,[rip+0x1d83]        # 4052ae <_IO_stdin_used@@Base+0x2ae>
  40352b:	mov    rdi,rax
  40352e:	call   402140 <strstr@plt>
  403533:	test   rax,rax
  403536:	je     4036a3 <plt_get_lib@@Base+0x3c3>
  40353c:	mov    rax,QWORD PTR [rbp-0x80]
  403540:	jmp    4036bf <plt_get_lib@@Base+0x3df>
  403545:	mov    rax,rsp
  403548:	mov    rbx,rax
  40354b:	mov    rax,QWORD PTR [rbp-0x60]
  40354f:	add    rax,0x8
  403553:	mov    QWORD PTR [rbp-0x58],rax
  403557:	mov    rax,QWORD PTR [rbp-0x58]
  40355b:	mov    rdx,rax
  40355e:	dec    rdx
  403561:	mov    QWORD PTR [rbp-0x50],rdx
  403565:	mov    r12,rax
  403568:	mov    r13d,0x0
  40356e:	mov    r14,rax
  403571:	mov    r15d,0x0
  403577:	mov    edx,0x10
  40357c:	dec    rdx
  40357f:	add    rax,rdx
  403582:	mov    ecx,0x10
  403587:	mov    edx,0x0
  40358c:	div    rcx
  40358f:	imul   rax,rax,0x10
  403593:	mov    rdx,rax
  403596:	and    rdx,0xfffffffffffff000
  40359d:	mov    rcx,rsp
  4035a0:	sub    rcx,rdx
  4035a3:	mov    rdx,rcx
  4035a6:	cmp    rsp,rdx
  4035a9:	je     4035bd <plt_get_lib@@Base+0x2dd>
  4035ab:	sub    rsp,0x1000
  4035b2:	or     QWORD PTR [rsp+0xff8],0x0
  4035bb:	jmp    4035a6 <plt_get_lib@@Base+0x2c6>
  4035bd:	mov    rdx,rax
  4035c0:	and    edx,0xfff
  4035c6:	test   rdx,rdx
  4035c9:	je     4035e5 <plt_get_lib@@Base+0x305>
  4035cb:	mov    rdx,rax
  4035ce:	and    edx,0xfff
  4035d4:	sub    rdx,0x8
  4035d8:	and    eax,0xfff
  4035dd:	sub    rsp,rax
  4035e0:	or     QWORD PTR [rsp+rdx*1],0x0
  4035e5:	mov    rax,rsp
  4035e8:	add    rax,0x0
  4035ec:	mov    QWORD PTR [rbp-0x48],rax
  4035f0:	mov    rax,QWORD PTR [rbp-0x48]
  4035f4:	mov    rdx,QWORD PTR [rbp-0x68]
  4035f8:	mov    rsi,QWORD PTR [rbp-0x58]
  4035fc:	mov    rcx,rdx
  4035ff:	lea    rdx,[rip+0x1cb1]        # 4052b7 <_IO_stdin_used@@Base+0x2b7>
  403606:	mov    rdi,rax
  403609:	mov    eax,0x0
  40360e:	call   4020b0 <snprintf@plt>
  403613:	mov    rdx,QWORD PTR [rbp-0x48]
  403617:	mov    rax,QWORD PTR [rbp-0x80]
  40361b:	mov    rax,QWORD PTR [rax+0x8]
  40361f:	mov    rsi,rdx
  403622:	mov    rdi,rax
  403625:	call   402140 <strstr@plt>
  40362a:	test   rax,rax
  40362d:	je     40363b <plt_get_lib@@Base+0x35b>
  40362f:	mov    rax,QWORD PTR [rbp-0x80]
  403633:	mov    rsp,rbx
  403636:	jmp    4036bf <plt_get_lib@@Base+0x3df>
  40363b:	mov    rsp,rbx
  40363e:	jmp    4036a3 <plt_get_lib@@Base+0x3c3>
  403640:	cmp    DWORD PTR [rbp-0x88],0x0
  403647:	je     403652 <plt_get_lib@@Base+0x372>
  403649:	cmp    DWORD PTR [rbp-0x88],0x2
  403650:	jne    403676 <plt_get_lib@@Base+0x396>
  403652:	mov    rax,QWORD PTR [rbp-0x80]
  403656:	mov    rdx,QWORD PTR [rax+0x8]
  40365a:	mov    rax,QWORD PTR [rbp-0xa0]
  403661:	mov    rsi,rdx
  403664:	mov    rdi,rax
  403667:	call   4020d0 <strcmp@plt>
  40366c:	test   eax,eax
  40366e:	jne    4036a3 <plt_get_lib@@Base+0x3c3>
  403670:	mov    rax,QWORD PTR [rbp-0x80]
  403674:	jmp    4036bf <plt_get_lib@@Base+0x3df>
  403676:	cmp    DWORD PTR [rbp-0x88],0x3
  40367d:	jne    4036a3 <plt_get_lib@@Base+0x3c3>
  40367f:	mov    rdx,QWORD PTR [rbp-0x68]
  403683:	mov    rax,QWORD PTR [rbp-0x80]
  403687:	mov    rsi,rdx
  40368a:	mov    rdi,rax
  40368d:	call   4037a1 <plt_get_lib@@Base+0x4c1>
  403692:	mov    QWORD PTR [rbp-0x40],rax
  403696:	cmp    QWORD PTR [rbp-0x40],0x0
  40369b:	je     4036a3 <plt_get_lib@@Base+0x3c3>
  40369d:	mov    rax,QWORD PTR [rbp-0x80]
  4036a1:	jmp    4036bf <plt_get_lib@@Base+0x3df>
  4036a3:	mov    rax,QWORD PTR [rbp-0x80]
  4036a7:	mov    rax,QWORD PTR [rax+0x18]
  4036ab:	mov    QWORD PTR [rbp-0x80],rax
  4036af:	cmp    QWORD PTR [rbp-0x80],0x0
  4036b4:	jne    4034ea <plt_get_lib@@Base+0x20a>
  4036ba:	mov    eax,0x0
  4036bf:	mov    rbx,QWORD PTR [rbp-0x38]
  4036c3:	xor    rbx,QWORD PTR fs:0x28
  4036cc:	je     4036d3 <plt_get_lib@@Base+0x3f3>
  4036ce:	call   402080 <__stack_chk_fail@plt>
  4036d3:	lea    rsp,[rbp-0x28]
  4036d7:	pop    rbx
  4036d8:	pop    r12
  4036da:	pop    r13
  4036dc:	pop    r14
  4036de:	pop    r15
  4036e0:	pop    rbp
  4036e1:	ret    
  4036e2:	endbr64 
  4036e6:	push   rbp
  4036e7:	mov    rbp,rsp
  4036ea:	sub    rsp,0x40
  4036ee:	mov    QWORD PTR [rbp-0x28],rdi
  4036f2:	mov    QWORD PTR [rbp-0x30],rsi
  4036f6:	mov    QWORD PTR [rbp-0x38],rdx
  4036fa:	mov    QWORD PTR [rbp-0x40],rcx
  4036fe:	mov    rax,QWORD PTR [rbp-0x28]
  403702:	mov    rax,QWORD PTR [rax]
  403705:	mov    QWORD PTR [rbp-0x18],rax
  403709:	mov    QWORD PTR [rbp-0x10],0x0
  403711:	jmp    403778 <plt_get_lib@@Base+0x498>
  403713:	mov    rax,QWORD PTR [rbp-0x18]
  403717:	mov    rax,QWORD PTR [rax+0x8]
  40371b:	shr    rax,0x20
  40371f:	mov    rdx,rax
  403722:	mov    rax,rdx
  403725:	add    rax,rax
  403728:	add    rax,rdx
  40372b:	shl    rax,0x3
  40372f:	mov    rdx,rax
  403732:	mov    rax,QWORD PTR [rbp-0x30]
  403736:	add    rax,rdx
  403739:	mov    QWORD PTR [rbp-0x8],rax
  40373d:	mov    rax,QWORD PTR [rbp-0x8]
  403741:	mov    eax,DWORD PTR [rax]
  403743:	mov    edx,eax
  403745:	mov    rax,QWORD PTR [rbp-0x38]
  403749:	add    rdx,rax
  40374c:	mov    rax,QWORD PTR [rbp-0x40]
  403750:	mov    rsi,rax
  403753:	mov    rdi,rdx
  403756:	call   4020d0 <strcmp@plt>
  40375b:	test   eax,eax
  40375d:	jne    403768 <plt_get_lib@@Base+0x488>
  40375f:	mov    rax,QWORD PTR [rbp-0x18]
  403763:	mov    rax,QWORD PTR [rax]
  403766:	jmp    40379f <plt_get_lib@@Base+0x4bf>
  403768:	inc    QWORD PTR [rbp-0x10]
  40376c:	mov    rax,QWORD PTR [rbp-0x28]
  403770:	mov    rax,QWORD PTR [rax+0x10]
  403774:	add    QWORD PTR [rbp-0x18],rax
  403778:	mov    rax,QWORD PTR [rbp-0x28]
  40377c:	mov    rax,QWORD PTR [rax+0x8]
  403780:	mov    rdx,QWORD PTR [rbp-0x28]
  403784:	mov    rcx,QWORD PTR [rdx+0x10]
  403788:	mov    edx,0x0
  40378d:	div    rcx
  403790:	cmp    QWORD PTR [rbp-0x10],rax
  403794:	jb     403713 <plt_get_lib@@Base+0x433>
  40379a:	mov    eax,0x0
  40379f:	leave  
  4037a0:	ret    
  4037a1:	endbr64 
  4037a5:	push   rbp
  4037a6:	mov    rbp,rsp
  4037a9:	sub    rsp,0x70
  4037ad:	mov    QWORD PTR [rbp-0x68],rdi
  4037b1:	mov    QWORD PTR [rbp-0x70],rsi
  4037b5:	mov    rax,QWORD PTR fs:0x28
  4037be:	mov    QWORD PTR [rbp-0x8],rax
  4037c2:	xor    eax,eax
  4037c4:	mov    rax,QWORD PTR [rbp-0x68]
  4037c8:	mov    esi,0x6
  4037cd:	mov    rdi,rax
  4037d0:	call   403049 <mmk_mock_get_params@@Base+0x26>
  4037d5:	mov    QWORD PTR [rbp-0x60],rax
  4037d9:	mov    rax,QWORD PTR [rbp-0x68]
  4037dd:	mov    esi,0x5
  4037e2:	mov    rdi,rax
  4037e5:	call   403049 <mmk_mock_get_params@@Base+0x26>
  4037ea:	mov    QWORD PTR [rbp-0x58],rax
  4037ee:	mov    rax,QWORD PTR [rbp-0x68]
  4037f2:	mov    esi,0x14
  4037f7:	mov    rdi,rax
  4037fa:	call   4030cd <mmk_mock_get_params@@Base+0xaa>
  4037ff:	mov    QWORD PTR [rbp-0x50],rax
  403803:	mov    rax,QWORD PTR [rbp-0x68]
  403807:	mov    esi,0x17
  40380c:	mov    rdi,rax
  40380f:	call   403049 <mmk_mock_get_params@@Base+0x26>
  403814:	mov    QWORD PTR [rbp-0x48],rax
  403818:	mov    rax,QWORD PTR [rbp-0x68]
  40381c:	mov    esi,0x2
  403821:	mov    rdi,rax
  403824:	call   4030cd <mmk_mock_get_params@@Base+0xaa>
  403829:	mov    QWORD PTR [rbp-0x40],rax
  40382d:	mov    rax,QWORD PTR [rbp-0x50]
  403831:	lea    rdx,[rax+0x2]
  403835:	mov    rax,QWORD PTR [rbp-0x68]
  403839:	mov    rsi,rdx
  40383c:	mov    rdi,rax
  40383f:	call   4030cd <mmk_mock_get_params@@Base+0xaa>
  403844:	mov    QWORD PTR [rbp-0x38],rax
  403848:	cmp    QWORD PTR [rbp-0x60],0x0
  40384d:	je     403872 <plt_get_lib@@Base+0x592>
  40384f:	cmp    QWORD PTR [rbp-0x58],0x0
  403854:	je     403872 <plt_get_lib@@Base+0x592>
  403856:	cmp    QWORD PTR [rbp-0x50],0x0
  40385b:	je     403872 <plt_get_lib@@Base+0x592>
  40385d:	cmp    QWORD PTR [rbp-0x48],0x0
  403862:	je     403872 <plt_get_lib@@Base+0x592>
  403864:	cmp    QWORD PTR [rbp-0x40],0x0
  403869:	je     403872 <plt_get_lib@@Base+0x592>
  40386b:	cmp    QWORD PTR [rbp-0x38],0x0
  403870:	jne    403879 <plt_get_lib@@Base+0x599>
  403872:	mov    eax,0x0
  403877:	jmp    4038d1 <plt_get_lib@@Base+0x5f1>
  403879:	mov    rax,QWORD PTR [rbp-0x48]
  40387d:	mov    QWORD PTR [rbp-0x20],rax
  403881:	mov    rax,QWORD PTR [rbp-0x40]
  403885:	mov    QWORD PTR [rbp-0x18],rax
  403889:	mov    rax,QWORD PTR [rbp-0x38]
  40388d:	mov    QWORD PTR [rbp-0x10],rax
  403891:	mov    rax,QWORD PTR [rbp-0x68]
  403895:	mov    rax,QWORD PTR [rax]
  403898:	mov    QWORD PTR [rbp-0x30],rax
  40389c:	mov    rcx,QWORD PTR [rbp-0x70]
  4038a0:	mov    rdx,QWORD PTR [rbp-0x58]
  4038a4:	mov    rsi,QWORD PTR [rbp-0x60]
  4038a8:	lea    rax,[rbp-0x20]
  4038ac:	mov    rdi,rax
  4038af:	call   4036e2 <plt_get_lib@@Base+0x402>
  4038b4:	mov    QWORD PTR [rbp-0x28],rax
  4038b8:	cmp    QWORD PTR [rbp-0x28],0x0
  4038bd:	je     4038cc <plt_get_lib@@Base+0x5ec>
  4038bf:	mov    rdx,QWORD PTR [rbp-0x28]
  4038c3:	mov    rax,QWORD PTR [rbp-0x30]
  4038c7:	add    rax,rdx
  4038ca:	jmp    4038d1 <plt_get_lib@@Base+0x5f1>
  4038cc:	mov    eax,0x0
  4038d1:	mov    rcx,QWORD PTR [rbp-0x8]
  4038d5:	xor    rcx,QWORD PTR fs:0x28
  4038de:	je     4038e5 <plt_get_lib@@Base+0x605>
  4038e0:	call   402080 <__stack_chk_fail@plt>
  4038e5:	leave  
  4038e6:	ret    

00000000004038e7 <plt_get_offsets@@Base>:
  4038e7:	endbr64 
  4038eb:	push   rbp
  4038ec:	mov    rbp,rsp
  4038ef:	sub    rsp,0x30
  4038f3:	mov    QWORD PTR [rbp-0x18],rdi
  4038f7:	mov    QWORD PTR [rbp-0x20],rsi
  4038fb:	mov    QWORD PTR [rbp-0x28],rdx
  4038ff:	mov    rdx,QWORD PTR [rbp-0x20]
  403903:	mov    rax,QWORD PTR [rbp-0x18]
  403907:	mov    rsi,rdx
  40390a:	mov    rdi,rax
  40390d:	call   4037a1 <plt_get_lib@@Base+0x4c1>
  403912:	mov    QWORD PTR [rbp-0x10],rax
  403916:	cmp    QWORD PTR [rbp-0x10],0x0
  40391b:	je     40395a <plt_get_offsets@@Base+0x73>
  40391d:	mov    edi,0x10
  403922:	call   40461d <mmk_malloc@@Base>
  403927:	mov    QWORD PTR [rbp-0x8],rax
  40392b:	mov    rax,QWORD PTR [rbp-0x28]
  40392f:	mov    QWORD PTR [rax],0x1
  403936:	mov    rax,QWORD PTR [rbp-0x8]
  40393a:	mov    QWORD PTR [rax],0x0
  403941:	mov    QWORD PTR [rax+0x8],0x0
  403949:	mov    rax,QWORD PTR [rbp-0x8]
  40394d:	mov    rdx,QWORD PTR [rbp-0x10]
  403951:	mov    QWORD PTR [rax],rdx
  403954:	mov    rax,QWORD PTR [rbp-0x8]
  403958:	jmp    40395f <plt_get_offsets@@Base+0x78>
  40395a:	mov    eax,0x0
  40395f:	leave  
  403960:	ret    

0000000000403961 <plt_set_offsets@@Base>:
  403961:	endbr64 
  403965:	push   rbp
  403966:	mov    rbp,rsp
  403969:	mov    QWORD PTR [rbp-0x18],rdi
  40396d:	mov    QWORD PTR [rbp-0x20],rsi
  403971:	mov    QWORD PTR [rbp-0x28],rdx
  403975:	mov    QWORD PTR [rbp-0x8],0x0
  40397d:	jmp    4039e8 <plt_set_offsets@@Base+0x87>
  40397f:	mov    rax,QWORD PTR [rbp-0x8]
  403983:	shl    rax,0x4
  403987:	mov    rdx,rax
  40398a:	mov    rax,QWORD PTR [rbp-0x18]
  40398e:	add    rax,rdx
  403991:	mov    rax,QWORD PTR [rax+0x8]
  403995:	test   rax,rax
  403998:	jne    4039c8 <plt_set_offsets@@Base+0x67>
  40399a:	mov    rax,QWORD PTR [rbp-0x8]
  40399e:	shl    rax,0x4
  4039a2:	mov    rdx,rax
  4039a5:	mov    rax,QWORD PTR [rbp-0x18]
  4039a9:	add    rax,rdx
  4039ac:	mov    rax,QWORD PTR [rax]
  4039af:	mov    rdx,QWORD PTR [rbp-0x8]
  4039b3:	mov    rcx,rdx
  4039b6:	shl    rcx,0x4
  4039ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4039be:	add    rdx,rcx
  4039c1:	mov    rax,QWORD PTR [rax]
  4039c4:	mov    QWORD PTR [rdx+0x8],rax
  4039c8:	mov    rax,QWORD PTR [rbp-0x8]
  4039cc:	shl    rax,0x4
  4039d0:	mov    rdx,rax
  4039d3:	mov    rax,QWORD PTR [rbp-0x18]
  4039d7:	add    rax,rdx
  4039da:	mov    rax,QWORD PTR [rax]
  4039dd:	mov    rdx,QWORD PTR [rbp-0x28]
  4039e1:	mov    QWORD PTR [rax],rdx
  4039e4:	inc    QWORD PTR [rbp-0x8]
  4039e8:	mov    rax,QWORD PTR [rbp-0x8]
  4039ec:	cmp    rax,QWORD PTR [rbp-0x20]
  4039f0:	jb     40397f <plt_set_offsets@@Base+0x1e>
  4039f2:	nop
  4039f3:	pop    rbp
  4039f4:	ret    

00000000004039f5 <plt_reset_offsets@@Base>:
  4039f5:	endbr64 
  4039f9:	push   rbp
  4039fa:	mov    rbp,rsp
  4039fd:	mov    QWORD PTR [rbp-0x18],rdi
  403a01:	mov    QWORD PTR [rbp-0x20],rsi
  403a05:	mov    QWORD PTR [rbp-0x8],0x0
  403a0d:	jmp    403a41 <plt_reset_offsets@@Base+0x4c>
  403a0f:	mov    rax,QWORD PTR [rbp-0x8]
  403a13:	shl    rax,0x4
  403a17:	mov    rdx,rax
  403a1a:	mov    rax,QWORD PTR [rbp-0x18]
  403a1e:	add    rdx,rax
  403a21:	mov    rax,QWORD PTR [rbp-0x8]
  403a25:	shl    rax,0x4
  403a29:	mov    rcx,rax
  403a2c:	mov    rax,QWORD PTR [rbp-0x18]
  403a30:	add    rax,rcx
  403a33:	mov    rax,QWORD PTR [rax]
  403a36:	mov    rdx,QWORD PTR [rdx+0x8]
  403a3a:	mov    QWORD PTR [rax],rdx
  403a3d:	inc    QWORD PTR [rbp-0x8]
  403a41:	mov    rax,QWORD PTR [rbp-0x8]
  403a45:	cmp    rax,QWORD PTR [rbp-0x20]
  403a49:	jb     403a0f <plt_reset_offsets@@Base+0x1a>
  403a4b:	nop
  403a4c:	pop    rbp
  403a4d:	ret    

0000000000403a4e <plt_get_real_fn@@Base>:
  403a4e:	endbr64 
  403a52:	push   rbp
  403a53:	mov    rbp,rsp
  403a56:	sub    rsp,0x20
  403a5a:	mov    QWORD PTR [rbp-0x18],rdi
  403a5e:	mov    QWORD PTR [rbp-0x20],rsi
  403a62:	mov    rax,QWORD PTR [rbp-0x18]
  403a66:	mov    rax,QWORD PTR [rax+0x8]
  403a6a:	mov    QWORD PTR [rbp-0x10],rax
  403a6e:	jmp    403aa3 <plt_get_real_fn@@Base+0x55>
  403a70:	mov    rdx,QWORD PTR [rbp-0x20]
  403a74:	mov    rax,QWORD PTR [rbp-0x10]
  403a78:	mov    rsi,rdx
  403a7b:	mov    rdi,rax
  403a7e:	call   4037a1 <plt_get_lib@@Base+0x4c1>
  403a83:	mov    QWORD PTR [rbp-0x8],rax
  403a87:	cmp    QWORD PTR [rbp-0x8],0x0
  403a8c:	je     403a97 <plt_get_real_fn@@Base+0x49>
  403a8e:	mov    rax,QWORD PTR [rbp-0x8]
  403a92:	mov    rax,QWORD PTR [rax]
  403a95:	jmp    403aaf <plt_get_real_fn@@Base+0x61>
  403a97:	mov    rax,QWORD PTR [rbp-0x10]
  403a9b:	mov    rax,QWORD PTR [rax+0x18]
  403a9f:	mov    QWORD PTR [rbp-0x10],rax
  403aa3:	cmp    QWORD PTR [rbp-0x10],0x0
  403aa8:	jne    403a70 <plt_get_real_fn@@Base+0x22>
  403aaa:	mov    eax,0x0
  403aaf:	leave  
  403ab0:	ret    

0000000000403ab1 <mmk_stub_context@@Base>:
  403ab1:	endbr64 
  403ab5:	push   rbp
  403ab6:	mov    rbp,rsp
  403ab9:	mov    QWORD PTR [rbp-0x8],rdi
  403abd:	cmp    QWORD PTR [rbp-0x8],0x0
  403ac2:	jne    403acb <mmk_stub_context@@Base+0x1a>
  403ac4:	mov    eax,0x0
  403ac9:	jmp    403ad3 <mmk_stub_context@@Base+0x22>
  403acb:	mov    rax,QWORD PTR [rbp-0x8]
  403acf:	mov    rax,QWORD PTR [rax+0x18]
  403ad3:	pop    rbp
  403ad4:	ret    

0000000000403ad5 <mmk_stub_create_static@@Base>:
  403ad5:	endbr64 
  403ad9:	push   rbp
  403ada:	mov    rbp,rsp
  403add:	sub    rsp,0x60
  403ae1:	mov    QWORD PTR [rbp-0x48],rdi
  403ae5:	mov    QWORD PTR [rbp-0x50],rsi
  403ae9:	mov    QWORD PTR [rbp-0x58],rdx
  403aed:	mov    QWORD PTR [rbp-0x60],rcx
  403af1:	mov    rax,QWORD PTR fs:0x28
  403afa:	mov    QWORD PTR [rbp-0x8],rax
  403afe:	xor    eax,eax
  403b00:	mov    rax,QWORD PTR fs:0x0
  403b09:	lea    rax,[rax-0x20]
  403b10:	mov    DWORD PTR [rax],0x0
  403b16:	mov    rax,QWORD PTR fs:0x0
  403b1f:	lea    rax,[rax-0x18]
  403b26:	mov    QWORD PTR [rax],0x0
  403b2d:	mov    rax,QWORD PTR [rbp-0x50]
  403b31:	mov    rdi,rax
  403b34:	call   4045bd <mmk_strlen@@Base>
  403b39:	inc    rax
  403b3c:	mov    rdi,rax
  403b3f:	call   40461d <mmk_malloc@@Base>
  403b44:	mov    QWORD PTR [rbp-0x28],rax
  403b48:	cmp    QWORD PTR [rbp-0x28],0x0
  403b4d:	jne    403b59 <mmk_stub_create_static@@Base+0x84>
  403b4f:	mov    eax,0xfffffff4
  403b54:	jmp    403d04 <mmk_stub_create_static@@Base+0x22f>
  403b59:	mov    rdx,QWORD PTR [rbp-0x50]
  403b5d:	mov    rax,QWORD PTR [rbp-0x28]
  403b61:	mov    rsi,rdx
  403b64:	mov    rdi,rax
  403b67:	call   404530 <mmk_strcpy@@Base>
  403b6c:	mov    QWORD PTR [rbp-0x30],0x0
  403b74:	mov    rax,QWORD PTR [rbp-0x28]
  403b78:	mov    esi,0x40
  403b7d:	mov    rdi,rax
  403b80:	call   4044f4 <mmk_strchr@@Base>
  403b85:	mov    QWORD PTR [rbp-0x20],rax
  403b89:	cmp    QWORD PTR [rbp-0x20],0x0
  403b8e:	je     403ba2 <mmk_stub_create_static@@Base+0xcd>
  403b90:	mov    rax,QWORD PTR [rbp-0x20]
  403b94:	mov    BYTE PTR [rax],0x0
  403b97:	mov    rax,QWORD PTR [rbp-0x20]
  403b9b:	inc    rax
  403b9e:	mov    QWORD PTR [rbp-0x30],rax
  403ba2:	call   402ad0 <mmk_plt_ctx@@Base>
  403ba7:	mov    rdx,rax
  403baa:	mov    rax,QWORD PTR [rbp-0x30]
  403bae:	mov    rsi,rax
  403bb1:	mov    rdi,rdx
  403bb4:	call   4032e0 <plt_get_lib@@Base>
  403bb9:	mov    QWORD PTR [rbp-0x18],rax
  403bbd:	cmp    QWORD PTR [rbp-0x18],0x0
  403bc2:	jne    403bce <mmk_stub_create_static@@Base+0xf9>
  403bc4:	mov    eax,0xfffffffe
  403bc9:	jmp    403d04 <mmk_stub_create_static@@Base+0x22f>
  403bce:	mov    QWORD PTR [rbp-0x38],0x0
  403bd6:	lea    rdx,[rbp-0x38]
  403bda:	mov    rcx,QWORD PTR [rbp-0x28]
  403bde:	mov    rax,QWORD PTR [rbp-0x18]
  403be2:	mov    rsi,rcx
  403be5:	mov    rdi,rax
  403be8:	call   4038e7 <plt_get_offsets@@Base>
  403bed:	mov    QWORD PTR [rbp-0x10],rax
  403bf1:	cmp    QWORD PTR [rbp-0x10],0x0
  403bf6:	je     403c01 <mmk_stub_create_static@@Base+0x12c>
  403bf8:	mov    rax,QWORD PTR [rbp-0x38]
  403bfc:	test   rax,rax
  403bff:	jne    403c0b <mmk_stub_create_static@@Base+0x136>
  403c01:	mov    eax,0xfffffffe
  403c06:	jmp    403d04 <mmk_stub_create_static@@Base+0x22f>
  403c0b:	mov    rdx,QWORD PTR [rbp-0x38]
  403c0f:	mov    rax,QWORD PTR [rbp-0x48]
  403c13:	mov    QWORD PTR [rax],0x0
  403c1a:	mov    QWORD PTR [rax+0x8],0x0
  403c22:	mov    QWORD PTR [rax+0x10],0x0
  403c2a:	mov    QWORD PTR [rax+0x18],0x0
  403c32:	mov    QWORD PTR [rax+0x20],0x0
  403c3a:	mov    QWORD PTR [rax+0x28],0x0
  403c42:	mov    QWORD PTR [rax+0x30],0x0
  403c4a:	mov    QWORD PTR [rax+0x38],0x0
  403c52:	mov    QWORD PTR [rax+0x40],0x0
  403c5a:	mov    QWORD PTR [rax+0x48],0x0
  403c62:	mov    rax,QWORD PTR [rbp-0x48]
  403c66:	mov    rcx,0x403e44
  403c6d:	mov    QWORD PTR [rax],rcx
  403c70:	mov    rax,QWORD PTR [rbp-0x48]
  403c74:	mov    rcx,0x403e9d
  403c7b:	mov    QWORD PTR [rax+0x8],rcx
  403c7f:	mov    rax,QWORD PTR [rbp-0x48]
  403c83:	mov    rcx,0x403e80
  403c8a:	mov    QWORD PTR [rax+0x10],rcx
  403c8e:	mov    rax,QWORD PTR [rbp-0x48]
  403c92:	mov    rcx,QWORD PTR [rbp-0x60]
  403c96:	mov    QWORD PTR [rax+0x18],rcx
  403c9a:	mov    rax,QWORD PTR [rbp-0x48]
  403c9e:	mov    rcx,QWORD PTR [rbp-0x28]
  403ca2:	mov    QWORD PTR [rax+0x20],rcx
  403ca6:	mov    rax,QWORD PTR [rbp-0x48]
  403caa:	mov    rcx,QWORD PTR [rbp-0x30]
  403cae:	mov    QWORD PTR [rax+0x28],rcx
  403cb2:	mov    rax,QWORD PTR [rbp-0x48]
  403cb6:	mov    rcx,QWORD PTR [rbp-0x10]
  403cba:	mov    QWORD PTR [rax+0x30],rcx
  403cbe:	mov    rax,QWORD PTR [rbp-0x48]
  403cc2:	mov    QWORD PTR [rax+0x38],rdx
  403cc6:	mov    rdx,QWORD PTR [rbp-0x58]
  403cca:	mov    rax,QWORD PTR [rbp-0x48]
  403cce:	mov    rsi,rdx
  403cd1:	mov    rdi,rax
  403cd4:	call   403eca <create_trampoline@@Base>
  403cd9:	mov    rdx,rax
  403cdc:	mov    rax,QWORD PTR [rbp-0x48]
  403ce0:	mov    QWORD PTR [rax+0x40],rdx
  403ce4:	mov    rax,QWORD PTR [rbp-0x48]
  403ce8:	mov    rdx,QWORD PTR [rax+0x40]
  403cec:	mov    rcx,QWORD PTR [rbp-0x38]
  403cf0:	mov    rax,QWORD PTR [rbp-0x10]
  403cf4:	mov    rsi,rcx
  403cf7:	mov    rdi,rax
  403cfa:	call   403961 <plt_set_offsets@@Base>
  403cff:	mov    eax,0x0
  403d04:	mov    rsi,QWORD PTR [rbp-0x8]
  403d08:	xor    rsi,QWORD PTR fs:0x28
  403d11:	je     403d18 <mmk_stub_create_static@@Base+0x243>
  403d13:	call   402080 <__stack_chk_fail@plt>
  403d18:	leave  
  403d19:	ret    

0000000000403d1a <mmk_stub_create@@Base>:
  403d1a:	endbr64 
  403d1e:	push   rbp
  403d1f:	mov    rbp,rsp
  403d22:	sub    rsp,0x30
  403d26:	mov    QWORD PTR [rbp-0x18],rdi
  403d2a:	mov    QWORD PTR [rbp-0x20],rsi
  403d2e:	mov    QWORD PTR [rbp-0x28],rdx
  403d32:	call   402a51 <mmk_init@@Base>
  403d37:	mov    edi,0x50
  403d3c:	call   40461d <mmk_malloc@@Base>
  403d41:	mov    QWORD PTR [rbp-0x8],rax
  403d45:	mov    rcx,QWORD PTR [rbp-0x28]
  403d49:	mov    rdx,QWORD PTR [rbp-0x20]
  403d4d:	mov    rsi,QWORD PTR [rbp-0x18]
  403d51:	mov    rax,QWORD PTR [rbp-0x8]
  403d55:	mov    rdi,rax
  403d58:	call   403ad5 <mmk_stub_create_static@@Base>
  403d5d:	mov    DWORD PTR [rbp-0xc],eax
  403d60:	cmp    DWORD PTR [rbp-0xc],0x0
  403d64:	jns    403d87 <mmk_stub_create@@Base+0x6d>
  403d66:	mov    rax,QWORD PTR [rbp-0x8]
  403d6a:	mov    rdi,rax
  403d6d:	call   404672 <mmk_free@@Base>
  403d72:	call   402050 <__errno_location@plt>
  403d77:	mov    rdx,rax
  403d7a:	mov    eax,DWORD PTR [rbp-0xc]
  403d7d:	mov    DWORD PTR [rdx],eax
  403d7f:	mov    QWORD PTR [rbp-0x8],0x0
  403d87:	mov    rax,QWORD PTR [rbp-0x8]
  403d8b:	leave  
  403d8c:	ret    

0000000000403d8d <mmk_stub_destroy_static@@Base>:
  403d8d:	endbr64 
  403d91:	push   rbp
  403d92:	mov    rbp,rsp
  403d95:	sub    rsp,0x10
  403d99:	mov    QWORD PTR [rbp-0x8],rdi
  403d9d:	mov    rax,QWORD PTR [rbp-0x8]
  403da1:	mov    rdx,QWORD PTR [rax+0x38]
  403da5:	mov    rax,QWORD PTR [rbp-0x8]
  403da9:	mov    rax,QWORD PTR [rax+0x30]
  403dad:	mov    rsi,rdx
  403db0:	mov    rdi,rax
  403db3:	call   4039f5 <plt_reset_offsets@@Base>
  403db8:	mov    rax,QWORD PTR [rbp-0x8]
  403dbc:	mov    rax,QWORD PTR [rax+0x30]
  403dc0:	mov    rdi,rax
  403dc3:	call   404672 <mmk_free@@Base>
  403dc8:	mov    rax,QWORD PTR [rbp-0x8]
  403dcc:	mov    rax,QWORD PTR [rax+0x40]
  403dd0:	mov    rdi,rax
  403dd3:	call   403ffa <destroy_trampoline@@Base>
  403dd8:	mov    rax,QWORD PTR [rbp-0x8]
  403ddc:	mov    rax,QWORD PTR [rax+0x20]
  403de0:	mov    rdi,rax
  403de3:	call   404672 <mmk_free@@Base>
  403de8:	nop
  403de9:	leave  
  403dea:	ret    

0000000000403deb <mmk_stub_destroy@@Base>:
  403deb:	endbr64 
  403def:	push   rbp
  403df0:	mov    rbp,rsp
  403df3:	sub    rsp,0x10
  403df7:	mov    QWORD PTR [rbp-0x8],rdi
  403dfb:	mov    rax,QWORD PTR [rbp-0x8]
  403dff:	mov    rdi,rax
  403e02:	call   403d8d <mmk_stub_destroy_static@@Base>
  403e07:	mov    rax,QWORD PTR [rbp-0x8]
  403e0b:	mov    rdi,rax
  403e0e:	call   404672 <mmk_free@@Base>
  403e13:	nop
  403e14:	leave  
  403e15:	ret    

0000000000403e16 <mmk_ask_ctx@@Base>:
  403e16:	endbr64 
  403e1a:	push   rbp
  403e1b:	mov    rbp,rsp
  403e1e:	sub    rsp,0x10
  403e22:	mov    QWORD PTR [rbp-0x8],rdi
  403e26:	mov    rax,QWORD PTR fs:0x0
  403e2f:	lea    rax,[rax-0x20]
  403e36:	mov    DWORD PTR [rax],0x1
  403e3c:	mov    rax,QWORD PTR [rbp-0x8]
  403e40:	call   rax
  403e42:	leave  
  403e43:	ret    

0000000000403e44 <mmk_ctx_asked@@Base>:
  403e44:	endbr64 
  403e48:	push   rbp
  403e49:	mov    rbp,rsp
  403e4c:	sub    rsp,0x10
  403e50:	mov    rax,QWORD PTR fs:0x0
  403e59:	lea    rax,[rax-0x20]
  403e60:	mov    eax,DWORD PTR [rax]
  403e62:	mov    DWORD PTR [rbp-0x4],eax
  403e65:	mov    rax,QWORD PTR fs:0x0
  403e6e:	lea    rax,[rax-0x20]
  403e75:	mov    DWORD PTR [rax],0x0
  403e7b:	mov    eax,DWORD PTR [rbp-0x4]
  403e7e:	leave  
  403e7f:	ret    

0000000000403e80 <mmk_ctx@@Base>:
  403e80:	endbr64 
  403e84:	push   rbp
  403e85:	mov    rbp,rsp
  403e88:	mov    rax,QWORD PTR fs:0x0
  403e91:	lea    rax,[rax-0x18]
  403e98:	mov    rax,QWORD PTR [rax]
  403e9b:	pop    rbp
  403e9c:	ret    

0000000000403e9d <mmk_set_ctx@@Base>:
  403e9d:	endbr64 
  403ea1:	push   rbp
  403ea2:	mov    rbp,rsp
  403ea5:	sub    rsp,0x10
  403ea9:	mov    QWORD PTR [rbp-0x8],rdi
  403ead:	mov    rax,QWORD PTR fs:0x0
  403eb6:	lea    rax,[rax-0x18]
  403ebd:	mov    rdx,rax
  403ec0:	mov    rax,QWORD PTR [rbp-0x8]
  403ec4:	mov    QWORD PTR [rdx],rax
  403ec7:	nop
  403ec8:	leave  
  403ec9:	ret    

0000000000403eca <create_trampoline@@Base>:
  403eca:	endbr64 
  403ece:	push   rbp
  403ecf:	mov    rbp,rsp
  403ed2:	sub    rsp,0x20
  403ed6:	mov    QWORD PTR [rbp-0x18],rdi
  403eda:	mov    QWORD PTR [rbp-0x20],rsi
  403ede:	mov    rax,0x40495e
  403ee5:	mov    rdx,rax
  403ee8:	mov    rax,0x40488b
  403eef:	sub    rdx,rax
  403ef2:	mov    rax,rdx
  403ef5:	mov    QWORD PTR [rbp-0x10],rax
  403ef9:	cmp    QWORD PTR [rbp-0x10],0xfff
  403f01:	jbe    403f39 <create_trampoline@@Base+0x6f>
  403f03:	mov    rax,QWORD PTR [rip+0x40ee]        # 407ff8 <stderr@GLIBC_2.2.5>
  403f0a:	mov    rax,QWORD PTR [rax]
  403f0d:	lea    r8,[rip+0x13b4]        # 4052c8 <_IO_stdin_used@@Base+0x2c8>
  403f14:	mov    ecx,0x2d
  403f19:	lea    rdx,[rip+0x13c8]        # 4052e8 <_IO_stdin_used@@Base+0x2e8>
  403f20:	lea    rsi,[rip+0x1419]        # 405340 <_IO_stdin_used@@Base+0x340>
  403f27:	mov    rdi,rax
  403f2a:	mov    eax,0x0
  403f2f:	call   4020e0 <fprintf@plt>
  403f34:	call   402040 <abort@plt>
  403f39:	mov    r9d,0x0
  403f3f:	mov    r8d,0xffffffff
  403f45:	mov    ecx,0x22
  403f4a:	mov    edx,0x7
  403f4f:	mov    esi,0x1000
  403f54:	mov    edi,0x0
  403f59:	call   402090 <mmap@plt>
  403f5e:	mov    QWORD PTR [rbp-0x8],rax
  403f62:	cmp    QWORD PTR [rbp-0x8],0xffffffffffffffff
  403f67:	jne    403f9f <create_trampoline@@Base+0xd5>
  403f69:	mov    rax,QWORD PTR [rip+0x4088]        # 407ff8 <stderr@GLIBC_2.2.5>
  403f70:	mov    rax,QWORD PTR [rax]
  403f73:	lea    r8,[rip+0x13e3]        # 40535d <_IO_stdin_used@@Base+0x35d>
  403f7a:	mov    ecx,0x45
  403f7f:	lea    rdx,[rip+0x1362]        # 4052e8 <_IO_stdin_used@@Base+0x2e8>
  403f86:	lea    rsi,[rip+0x13b3]        # 405340 <_IO_stdin_used@@Base+0x340>
  403f8d:	mov    rdi,rax
  403f90:	mov    eax,0x0
  403f95:	call   4020e0 <fprintf@plt>
  403f9a:	call   402040 <abort@plt>
  403f9f:	mov    rax,QWORD PTR [rbp-0x8]
  403fa3:	mov    rdx,QWORD PTR [rbp-0x18]
  403fa7:	mov    QWORD PTR [rax],rdx
  403faa:	mov    rax,QWORD PTR [rbp-0x8]
  403fae:	lea    rdx,[rax+0x8]
  403fb2:	mov    rax,QWORD PTR [rbp-0x20]
  403fb6:	mov    QWORD PTR [rdx],rax
  403fb9:	mov    rax,QWORD PTR [rbp-0x8]
  403fbd:	lea    rcx,[rax+0x10]
  403fc1:	mov    rax,QWORD PTR [rbp-0x10]
  403fc5:	mov    rdx,rax
  403fc8:	mov    rax,0x40488b
  403fcf:	mov    rsi,rax
  403fd2:	mov    rdi,rcx
  403fd5:	call   4020f0 <memcpy@plt>
  403fda:	mov    rax,QWORD PTR [rbp-0x8]
  403fde:	mov    edx,0x5
  403fe3:	mov    esi,0x1000
  403fe8:	mov    rdi,rax
  403feb:	call   402130 <mprotect@plt>
  403ff0:	mov    rax,QWORD PTR [rbp-0x8]
  403ff4:	add    rax,0x10
  403ff8:	leave  
  403ff9:	ret    

0000000000403ffa <destroy_trampoline@@Base>:
  403ffa:	endbr64 
  403ffe:	push   rbp
  403fff:	mov    rbp,rsp
  404002:	sub    rsp,0x10
  404006:	mov    QWORD PTR [rbp-0x8],rdi
  40400a:	mov    rax,QWORD PTR [rbp-0x8]
  40400e:	sub    rax,0x10
  404012:	mov    esi,0x1000
  404017:	mov    rdi,rax
  40401a:	call   402110 <munmap@plt>
  40401f:	nop
  404020:	leave  
  404021:	ret    

0000000000404022 <mmk_verify_set_times@@Base>:
  404022:	endbr64 
  404026:	push   rbp
  404027:	mov    rbp,rsp
  40402a:	sub    rsp,0x10
  40402e:	mov    QWORD PTR [rbp-0x8],rdi
  404032:	mov    rax,QWORD PTR fs:0x0
  40403b:	lea    rax,[rax-0x10]
  404042:	mov    rdx,rax
  404045:	mov    rax,QWORD PTR [rbp-0x8]
  404049:	mov    QWORD PTR [rdx],rax
  40404c:	nop
  40404d:	leave  
  40404e:	ret    

000000000040404f <mmk_verify_times@@Base>:
  40404f:	endbr64 
  404053:	push   rbp
  404054:	mov    rbp,rsp
  404057:	sub    rsp,0x20
  40405b:	mov    QWORD PTR [rbp-0x18],rdi
  40405f:	mov    rax,QWORD PTR fs:0x0
  404068:	lea    rax,[rax-0x10]
  40406f:	mov    rax,QWORD PTR [rax]
  404072:	mov    QWORD PTR [rbp-0x10],rax
  404076:	mov    rax,QWORD PTR [rbp-0x18]
  40407a:	mov    eax,DWORD PTR [rax+0x4]
  40407d:	test   eax,eax
  40407f:	je     404091 <mmk_verify_times@@Base+0x42>
  404081:	cmp    QWORD PTR [rbp-0x10],0x0
  404086:	sete   al
  404089:	movzx  eax,al
  40408c:	jmp    404122 <mmk_verify_times@@Base+0xd3>
  404091:	mov    rax,QWORD PTR [rbp-0x18]
  404095:	mov    rax,QWORD PTR [rax+0x8]
  404099:	test   rax,rax
  40409c:	jne    4040ab <mmk_verify_times@@Base+0x5c>
  40409e:	mov    rax,QWORD PTR [rbp-0x18]
  4040a2:	mov    rax,QWORD PTR [rax+0x10]
  4040a6:	test   rax,rax
  4040a9:	je     4040f0 <mmk_verify_times@@Base+0xa1>
  4040ab:	mov    rax,QWORD PTR [rbp-0x18]
  4040af:	mov    rax,QWORD PTR [rax+0x10]
  4040b3:	test   rax,rax
  4040b6:	je     4040c2 <mmk_verify_times@@Base+0x73>
  4040b8:	mov    rax,QWORD PTR [rbp-0x18]
  4040bc:	mov    rax,QWORD PTR [rax+0x10]
  4040c0:	jmp    4040c6 <mmk_verify_times@@Base+0x77>
  4040c2:	mov    rax,QWORD PTR [rbp-0x10]
  4040c6:	mov    QWORD PTR [rbp-0x8],rax
  4040ca:	mov    rax,QWORD PTR [rbp-0x18]
  4040ce:	mov    rax,QWORD PTR [rax+0x8]
  4040d2:	cmp    QWORD PTR [rbp-0x10],rax
  4040d6:	jb     4040e9 <mmk_verify_times@@Base+0x9a>
  4040d8:	mov    rax,QWORD PTR [rbp-0x10]
  4040dc:	cmp    rax,QWORD PTR [rbp-0x8]
  4040e0:	ja     4040e9 <mmk_verify_times@@Base+0x9a>
  4040e2:	mov    eax,0x1
  4040e7:	jmp    404122 <mmk_verify_times@@Base+0xd3>
  4040e9:	mov    eax,0x0
  4040ee:	jmp    404122 <mmk_verify_times@@Base+0xd3>
  4040f0:	mov    rax,QWORD PTR [rbp-0x18]
  4040f4:	mov    rax,QWORD PTR [rax+0x20]
  4040f8:	test   rax,rax
  4040fb:	je     404110 <mmk_verify_times@@Base+0xc1>
  4040fd:	mov    rax,QWORD PTR [rbp-0x18]
  404101:	mov    rax,QWORD PTR [rax+0x20]
  404105:	mov    rdx,QWORD PTR [rbp-0x10]
  404109:	mov    rdi,rdx
  40410c:	call   rax
  40410e:	jmp    404122 <mmk_verify_times@@Base+0xd3>
  404110:	mov    rax,QWORD PTR [rbp-0x18]
  404114:	mov    rax,QWORD PTR [rax+0x18]
  404118:	cmp    QWORD PTR [rbp-0x10],rax
  40411c:	sete   al
  40411f:	movzx  eax,al
  404122:	leave  
  404123:	ret    
  404124:	endbr64 
  404128:	push   rbp
  404129:	mov    rbp,rsp
  40412c:	sub    rsp,0x40
  404130:	mov    QWORD PTR [rbp-0x28],rdi
  404134:	mov    QWORD PTR [rbp-0x30],rsi
  404138:	mov    QWORD PTR [rbp-0x38],rdx
  40413c:	add    QWORD PTR [rbp-0x30],0x8
  404141:	sub    QWORD PTR [rbp-0x38],0x8
  404146:	mov    rax,QWORD PTR [rbp-0x28]
  40414a:	mov    rdi,rax
  40414d:	call   402f92 <mmk_mock_params_begin@@Base>
  404152:	mov    QWORD PTR [rbp-0x10],rax
  404156:	jmp    4041b4 <mmk_verify_times@@Base+0x165>
  404158:	mov    rax,QWORD PTR [rbp-0x10]
  40415c:	lea    rcx,[rax+0x8]
  404160:	mov    rdx,QWORD PTR [rbp-0x38]
  404164:	mov    rax,QWORD PTR [rbp-0x30]
  404168:	mov    rsi,rax
  40416b:	mov    rdi,rcx
  40416e:	call   4043be <mmk_memcmp@@Base>
  404173:	mov    DWORD PTR [rbp-0x14],eax
  404176:	cmp    DWORD PTR [rbp-0x14],0x0
  40417a:	jne    40419d <mmk_verify_times@@Base+0x14e>
  40417c:	mov    rax,QWORD PTR [rbp-0x10]
  404180:	mov    QWORD PTR [rbp-0x8],rax
  404184:	mov    rax,QWORD PTR [rbp-0x8]
  404188:	mov    rax,QWORD PTR [rax]
  40418b:	lea    rdx,[rax+0x1]
  40418f:	mov    rax,QWORD PTR [rbp-0x8]
  404193:	mov    QWORD PTR [rax],rdx
  404196:	mov    eax,0x1
  40419b:	jmp    4041c0 <mmk_verify_times@@Base+0x171>
  40419d:	mov    rdx,QWORD PTR [rbp-0x10]
  4041a1:	mov    rax,QWORD PTR [rbp-0x28]
  4041a5:	mov    rsi,rdx
  4041a8:	mov    rdi,rax
  4041ab:	call   402fcd <mmk_mock_params_next@@Base>
  4041b0:	mov    QWORD PTR [rbp-0x10],rax
  4041b4:	cmp    QWORD PTR [rbp-0x10],0x0
  4041b9:	jne    404158 <mmk_verify_times@@Base+0x109>
  4041bb:	mov    eax,0x0
  4041c0:	leave  
  4041c1:	ret    

00000000004041c2 <mmk_verify_register_call@@Base>:
  4041c2:	endbr64 
  4041c6:	push   rbp
  4041c7:	mov    rbp,rsp
  4041ca:	sub    rsp,0x20
  4041ce:	mov    QWORD PTR [rbp-0x18],rdi
  4041d2:	mov    QWORD PTR [rbp-0x20],rsi
  4041d6:	call   403e80 <mmk_ctx@@Base>
  4041db:	mov    rdi,rax
  4041de:	call   403ab1 <mmk_stub_context@@Base>
  4041e3:	mov    QWORD PTR [rbp-0x10],rax
  4041e7:	mov    rax,QWORD PTR [rbp-0x10]
  4041eb:	mov    rax,QWORD PTR [rax+0x10]
  4041ef:	test   rax,rax
  4041f2:	jne    404258 <mmk_verify_register_call@@Base+0x96>
  4041f4:	mov    edi,0x1000
  4041f9:	call   40461d <mmk_malloc@@Base>
  4041fe:	mov    rdx,rax
  404201:	mov    rax,QWORD PTR [rbp-0x10]
  404205:	mov    QWORD PTR [rax+0x10],rdx
  404209:	mov    rax,QWORD PTR [rbp-0x10]
  40420d:	mov    rax,QWORD PTR [rax+0x10]
  404211:	test   rax,rax
  404214:	jne    40424c <mmk_verify_register_call@@Base+0x8a>
  404216:	mov    rax,QWORD PTR [rip+0x3ddb]        # 407ff8 <stderr@GLIBC_2.2.5>
  40421d:	mov    rax,QWORD PTR [rax]
  404220:	lea    r8,[rip+0x1149]        # 405370 <_IO_stdin_used@@Base+0x370>
  404227:	mov    ecx,0x4f
  40422c:	lea    rdx,[rip+0x114d]        # 405380 <_IO_stdin_used@@Base+0x380>
  404233:	lea    rsi,[rip+0x119a]        # 4053d4 <_IO_stdin_used@@Base+0x3d4>
  40423a:	mov    rdi,rax
  40423d:	mov    eax,0x0
  404242:	call   4020e0 <fprintf@plt>
  404247:	call   402040 <abort@plt>
  40424c:	mov    rax,QWORD PTR [rbp-0x10]
  404250:	mov    QWORD PTR [rax+0x20],0x1000
  404258:	mov    rdx,QWORD PTR [rbp-0x20]
  40425c:	mov    rcx,QWORD PTR [rbp-0x18]
  404260:	mov    rax,QWORD PTR [rbp-0x10]
  404264:	mov    rsi,rcx
  404267:	mov    rdi,rax
  40426a:	call   404124 <mmk_verify_times@@Base+0xd5>
  40426f:	test   eax,eax
  404271:	jne    4043bb <mmk_verify_register_call@@Base+0x1f9>
  404277:	mov    rax,QWORD PTR [rbp-0x10]
  40427b:	mov    rdx,QWORD PTR [rax+0x18]
  40427f:	mov    rax,QWORD PTR [rbp-0x20]
  404283:	add    rax,rdx
  404286:	lea    rdx,[rax+0x8]
  40428a:	mov    rax,QWORD PTR [rbp-0x10]
  40428e:	mov    rax,QWORD PTR [rax+0x20]
  404292:	cmp    rdx,rax
  404295:	jb     40433d <mmk_verify_register_call@@Base+0x17b>
  40429b:	jmp    4042b4 <mmk_verify_register_call@@Base+0xf2>
  40429d:	mov    rax,QWORD PTR [rbp-0x10]
  4042a1:	mov    rax,QWORD PTR [rax+0x20]
  4042a5:	lea    rdx,[rax+0x1000]
  4042ac:	mov    rax,QWORD PTR [rbp-0x10]
  4042b0:	mov    QWORD PTR [rax+0x20],rdx
  4042b4:	mov    rax,QWORD PTR [rbp-0x10]
  4042b8:	mov    rdx,QWORD PTR [rax+0x18]
  4042bc:	mov    rax,QWORD PTR [rbp-0x20]
  4042c0:	add    rax,rdx
  4042c3:	lea    rdx,[rax+0x8]
  4042c7:	mov    rax,QWORD PTR [rbp-0x10]
  4042cb:	mov    rax,QWORD PTR [rax+0x20]
  4042cf:	cmp    rdx,rax
  4042d2:	jae    40429d <mmk_verify_register_call@@Base+0xdb>
  4042d4:	mov    rax,QWORD PTR [rbp-0x10]
  4042d8:	mov    rdx,QWORD PTR [rax+0x20]
  4042dc:	mov    rax,QWORD PTR [rbp-0x10]
  4042e0:	mov    rax,QWORD PTR [rax+0x10]
  4042e4:	mov    rsi,rdx
  4042e7:	mov    rdi,rax
  4042ea:	call   404642 <mmk_realloc@@Base>
  4042ef:	mov    rdx,rax
  4042f2:	mov    rax,QWORD PTR [rbp-0x10]
  4042f6:	mov    QWORD PTR [rax+0x10],rdx
  4042fa:	mov    rax,QWORD PTR [rbp-0x10]
  4042fe:	mov    rax,QWORD PTR [rax+0x10]
  404302:	test   rax,rax
  404305:	jne    40433d <mmk_verify_register_call@@Base+0x17b>
  404307:	mov    rax,QWORD PTR [rip+0x3cea]        # 407ff8 <stderr@GLIBC_2.2.5>
  40430e:	mov    rax,QWORD PTR [rax]
  404311:	lea    r8,[rip+0x1058]        # 405370 <_IO_stdin_used@@Base+0x370>
  404318:	mov    ecx,0x5b
  40431d:	lea    rdx,[rip+0x105c]        # 405380 <_IO_stdin_used@@Base+0x380>
  404324:	lea    rsi,[rip+0x10a9]        # 4053d4 <_IO_stdin_used@@Base+0x3d4>
  40432b:	mov    rdi,rax
  40432e:	mov    eax,0x0
  404333:	call   4020e0 <fprintf@plt>
  404338:	call   402040 <abort@plt>
  40433d:	mov    rax,QWORD PTR [rbp-0x10]
  404341:	mov    rdx,QWORD PTR [rax+0x10]
  404345:	mov    rax,QWORD PTR [rbp-0x10]
  404349:	mov    rax,QWORD PTR [rax+0x18]
  40434d:	lea    rcx,[rdx+rax*1]
  404351:	lea    rax,[rbp-0x20]
  404355:	mov    edx,0x8
  40435a:	mov    rsi,rax
  40435d:	mov    rdi,rcx
  404360:	call   404430 <mmk_memcpy@@Base>
  404365:	mov    rdx,QWORD PTR [rbp-0x20]
  404369:	mov    rax,QWORD PTR [rbp-0x10]
  40436d:	mov    rcx,QWORD PTR [rax+0x10]
  404371:	mov    rax,QWORD PTR [rbp-0x10]
  404375:	mov    rax,QWORD PTR [rax+0x18]
  404379:	add    rax,0x8
  40437d:	add    rcx,rax
  404380:	mov    rax,QWORD PTR [rbp-0x18]
  404384:	mov    rsi,rax
  404387:	mov    rdi,rcx
  40438a:	call   404430 <mmk_memcpy@@Base>
  40438f:	mov    QWORD PTR [rbp-0x8],rax
  404393:	mov    rax,QWORD PTR [rbp-0x8]
  404397:	mov    QWORD PTR [rax],0x1
  40439e:	mov    rax,QWORD PTR [rbp-0x10]
  4043a2:	mov    rdx,QWORD PTR [rax+0x18]
  4043a6:	mov    rax,QWORD PTR [rbp-0x20]
  4043aa:	add    rax,rdx
  4043ad:	lea    rdx,[rax+0x8]
  4043b1:	mov    rax,QWORD PTR [rbp-0x10]
  4043b5:	mov    QWORD PTR [rax+0x18],rdx
  4043b9:	jmp    4043bc <mmk_verify_register_call@@Base+0x1fa>
  4043bb:	nop
  4043bc:	leave  
  4043bd:	ret    

00000000004043be <mmk_memcmp@@Base>:
  4043be:	endbr64 
  4043c2:	push   rbp
  4043c3:	mov    rbp,rsp
  4043c6:	mov    QWORD PTR [rbp-0x18],rdi
  4043ca:	mov    QWORD PTR [rbp-0x20],rsi
  4043ce:	mov    QWORD PTR [rbp-0x28],rdx
  4043d2:	mov    rax,QWORD PTR [rbp-0x18]
  4043d6:	mov    QWORD PTR [rbp-0x10],rax
  4043da:	mov    rax,QWORD PTR [rbp-0x20]
  4043de:	mov    QWORD PTR [rbp-0x8],rax
  4043e2:	jmp    404422 <mmk_memcmp@@Base+0x64>
  4043e4:	mov    rax,QWORD PTR [rbp-0x10]
  4043e8:	movzx  edx,BYTE PTR [rax]
  4043eb:	mov    rax,QWORD PTR [rbp-0x8]
  4043ef:	movzx  eax,BYTE PTR [rax]
  4043f2:	cmp    dl,al
  4043f4:	je     404416 <mmk_memcmp@@Base+0x58>
  4043f6:	mov    rax,QWORD PTR [rbp-0x10]
  4043fa:	movzx  edx,BYTE PTR [rax]
  4043fd:	mov    rax,QWORD PTR [rbp-0x8]
  404401:	movzx  eax,BYTE PTR [rax]
  404404:	cmp    dl,al
  404406:	jge    40440f <mmk_memcmp@@Base+0x51>
  404408:	mov    eax,0xffffffff
  40440d:	jmp    40442e <mmk_memcmp@@Base+0x70>
  40440f:	mov    eax,0x1
  404414:	jmp    40442e <mmk_memcmp@@Base+0x70>
  404416:	inc    QWORD PTR [rbp-0x10]
  40441a:	inc    QWORD PTR [rbp-0x8]
  40441e:	dec    QWORD PTR [rbp-0x28]
  404422:	cmp    QWORD PTR [rbp-0x28],0x0
  404427:	jne    4043e4 <mmk_memcmp@@Base+0x26>
  404429:	mov    eax,0x0
  40442e:	pop    rbp
  40442f:	ret    

0000000000404430 <mmk_memcpy@@Base>:
  404430:	endbr64 
  404434:	push   rbp
  404435:	mov    rbp,rsp
  404438:	mov    QWORD PTR [rbp-0x18],rdi
  40443c:	mov    QWORD PTR [rbp-0x20],rsi
  404440:	mov    QWORD PTR [rbp-0x28],rdx
  404444:	mov    rax,QWORD PTR [rbp-0x20]
  404448:	mov    QWORD PTR [rbp-0x10],rax
  40444c:	mov    rax,QWORD PTR [rbp-0x18]
  404450:	mov    QWORD PTR [rbp-0x8],rax
  404454:	jmp    40446f <mmk_memcpy@@Base+0x3f>
  404456:	mov    rax,QWORD PTR [rbp-0x10]
  40445a:	movzx  eax,BYTE PTR [rax]
  40445d:	mov    rdx,QWORD PTR [rbp-0x8]
  404461:	mov    BYTE PTR [rdx],al
  404463:	inc    QWORD PTR [rbp-0x8]
  404467:	inc    QWORD PTR [rbp-0x10]
  40446b:	dec    QWORD PTR [rbp-0x28]
  40446f:	cmp    QWORD PTR [rbp-0x28],0x0
  404474:	jne    404456 <mmk_memcpy@@Base+0x26>
  404476:	mov    rax,QWORD PTR [rbp-0x18]
  40447a:	pop    rbp
  40447b:	ret    

000000000040447c <mmk_strneq@@Base>:
  40447c:	endbr64 
  404480:	push   rbp
  404481:	mov    rbp,rsp
  404484:	mov    QWORD PTR [rbp-0x8],rdi
  404488:	mov    QWORD PTR [rbp-0x10],rsi
  40448c:	mov    QWORD PTR [rbp-0x18],rdx
  404490:	jmp    4044b7 <mmk_strneq@@Base+0x3b>
  404492:	mov    rax,QWORD PTR [rbp-0x8]
  404496:	movzx  edx,BYTE PTR [rax]
  404499:	mov    rax,QWORD PTR [rbp-0x10]
  40449d:	movzx  eax,BYTE PTR [rax]
  4044a0:	cmp    dl,al
  4044a2:	je     4044ab <mmk_strneq@@Base+0x2f>
  4044a4:	mov    eax,0x0
  4044a9:	jmp    4044f2 <mmk_strneq@@Base+0x76>
  4044ab:	inc    QWORD PTR [rbp-0x8]
  4044af:	inc    QWORD PTR [rbp-0x10]
  4044b3:	dec    QWORD PTR [rbp-0x18]
  4044b7:	mov    rax,QWORD PTR [rbp-0x8]
  4044bb:	movzx  eax,BYTE PTR [rax]
  4044be:	test   al,al
  4044c0:	je     4044d4 <mmk_strneq@@Base+0x58>
  4044c2:	mov    rax,QWORD PTR [rbp-0x10]
  4044c6:	movzx  eax,BYTE PTR [rax]
  4044c9:	test   al,al
  4044cb:	je     4044d4 <mmk_strneq@@Base+0x58>
  4044cd:	cmp    QWORD PTR [rbp-0x18],0x0
  4044d2:	jne    404492 <mmk_strneq@@Base+0x16>
  4044d4:	cmp    QWORD PTR [rbp-0x18],0x0
  4044d9:	je     4044e6 <mmk_strneq@@Base+0x6a>
  4044db:	mov    rax,QWORD PTR [rbp-0x10]
  4044df:	movzx  eax,BYTE PTR [rax]
  4044e2:	test   al,al
  4044e4:	jne    4044ed <mmk_strneq@@Base+0x71>
  4044e6:	mov    eax,0x1
  4044eb:	jmp    4044f2 <mmk_strneq@@Base+0x76>
  4044ed:	mov    eax,0x0
  4044f2:	pop    rbp
  4044f3:	ret    

00000000004044f4 <mmk_strchr@@Base>:
  4044f4:	endbr64 
  4044f8:	push   rbp
  4044f9:	mov    rbp,rsp
  4044fc:	mov    QWORD PTR [rbp-0x8],rdi
  404500:	mov    DWORD PTR [rbp-0xc],esi
  404503:	jmp    40451e <mmk_strchr@@Base+0x2a>
  404505:	mov    rax,QWORD PTR [rbp-0x8]
  404509:	movzx  eax,BYTE PTR [rax]
  40450c:	movsx  eax,al
  40450f:	cmp    DWORD PTR [rbp-0xc],eax
  404512:	jne    40451a <mmk_strchr@@Base+0x26>
  404514:	mov    rax,QWORD PTR [rbp-0x8]
  404518:	jmp    40452e <mmk_strchr@@Base+0x3a>
  40451a:	inc    QWORD PTR [rbp-0x8]
  40451e:	mov    rax,QWORD PTR [rbp-0x8]
  404522:	movzx  eax,BYTE PTR [rax]
  404525:	test   al,al
  404527:	jne    404505 <mmk_strchr@@Base+0x11>
  404529:	mov    eax,0x0
  40452e:	pop    rbp
  40452f:	ret    

0000000000404530 <mmk_strcpy@@Base>:
  404530:	endbr64 
  404534:	push   rbp
  404535:	mov    rbp,rsp
  404538:	mov    QWORD PTR [rbp-0x8],rdi
  40453c:	mov    QWORD PTR [rbp-0x10],rsi
  404540:	jmp    404557 <mmk_strcpy@@Base+0x27>
  404542:	mov    rax,QWORD PTR [rbp-0x10]
  404546:	movzx  eax,BYTE PTR [rax]
  404549:	mov    rdx,QWORD PTR [rbp-0x8]
  40454d:	mov    BYTE PTR [rdx],al
  40454f:	inc    QWORD PTR [rbp-0x8]
  404553:	inc    QWORD PTR [rbp-0x10]
  404557:	mov    rax,QWORD PTR [rbp-0x10]
  40455b:	movzx  eax,BYTE PTR [rax]
  40455e:	test   al,al
  404560:	jne    404542 <mmk_strcpy@@Base+0x12>
  404562:	mov    rax,QWORD PTR [rbp-0x8]
  404566:	mov    BYTE PTR [rax],0x0
  404569:	mov    rax,QWORD PTR [rbp-0x8]
  40456d:	pop    rbp
  40456e:	ret    

000000000040456f <mmk_strncpy@@Base>:
  40456f:	endbr64 
  404573:	push   rbp
  404574:	mov    rbp,rsp
  404577:	mov    QWORD PTR [rbp-0x8],rdi
  40457b:	mov    QWORD PTR [rbp-0x10],rsi
  40457f:	mov    QWORD PTR [rbp-0x18],rdx
  404583:	jmp    40459e <mmk_strncpy@@Base+0x2f>
  404585:	mov    rax,QWORD PTR [rbp-0x10]
  404589:	movzx  eax,BYTE PTR [rax]
  40458c:	mov    rdx,QWORD PTR [rbp-0x8]
  404590:	mov    BYTE PTR [rdx],al
  404592:	inc    QWORD PTR [rbp-0x8]
  404596:	inc    QWORD PTR [rbp-0x10]
  40459a:	dec    QWORD PTR [rbp-0x18]
  40459e:	mov    rax,QWORD PTR [rbp-0x10]
  4045a2:	movzx  eax,BYTE PTR [rax]
  4045a5:	test   al,al
  4045a7:	je     4045b0 <mmk_strncpy@@Base+0x41>
  4045a9:	cmp    QWORD PTR [rbp-0x18],0x0
  4045ae:	jne    404585 <mmk_strncpy@@Base+0x16>
  4045b0:	mov    rax,QWORD PTR [rbp-0x8]
  4045b4:	mov    BYTE PTR [rax],0x0
  4045b7:	mov    rax,QWORD PTR [rbp-0x8]
  4045bb:	pop    rbp
  4045bc:	ret    

00000000004045bd <mmk_strlen@@Base>:
  4045bd:	endbr64 
  4045c1:	push   rbp
  4045c2:	mov    rbp,rsp
  4045c5:	mov    QWORD PTR [rbp-0x18],rdi
  4045c9:	mov    QWORD PTR [rbp-0x8],0x0
  4045d1:	jmp    4045db <mmk_strlen@@Base+0x1e>
  4045d3:	inc    QWORD PTR [rbp-0x8]
  4045d7:	inc    QWORD PTR [rbp-0x18]
  4045db:	mov    rax,QWORD PTR [rbp-0x18]
  4045df:	movzx  eax,BYTE PTR [rax]
  4045e2:	test   al,al
  4045e4:	jne    4045d3 <mmk_strlen@@Base+0x16>
  4045e6:	mov    rax,QWORD PTR [rbp-0x8]
  4045ea:	pop    rbp
  4045eb:	ret    

00000000004045ec <mmk_isspace@@Base>:
  4045ec:	endbr64 
  4045f0:	push   rbp
  4045f1:	mov    rbp,rsp
  4045f4:	mov    DWORD PTR [rbp-0x4],edi
  4045f7:	cmp    DWORD PTR [rbp-0x4],0x20
  4045fb:	je     40460f <mmk_isspace@@Base+0x23>
  4045fd:	cmp    DWORD PTR [rbp-0x4],0x9
  404601:	je     40460f <mmk_isspace@@Base+0x23>
  404603:	cmp    DWORD PTR [rbp-0x4],0xd
  404607:	je     40460f <mmk_isspace@@Base+0x23>
  404609:	cmp    DWORD PTR [rbp-0x4],0xa
  40460d:	jne    404616 <mmk_isspace@@Base+0x2a>
  40460f:	mov    eax,0x1
  404614:	jmp    40461b <mmk_isspace@@Base+0x2f>
  404616:	mov    eax,0x0
  40461b:	pop    rbp
  40461c:	ret    

000000000040461d <mmk_malloc@@Base>:
  40461d:	endbr64 
  404621:	push   rbp
  404622:	mov    rbp,rsp
  404625:	sub    rsp,0x10
  404629:	mov    QWORD PTR [rbp-0x8],rdi
  40462d:	mov    rax,0x408100
  404634:	mov    rax,QWORD PTR [rax]
  404637:	mov    rdx,QWORD PTR [rbp-0x8]
  40463b:	mov    rdi,rdx
  40463e:	call   rax
  404640:	leave  
  404641:	ret    

0000000000404642 <mmk_realloc@@Base>:
  404642:	endbr64 
  404646:	push   rbp
  404647:	mov    rbp,rsp
  40464a:	sub    rsp,0x10
  40464e:	mov    QWORD PTR [rbp-0x8],rdi
  404652:	mov    QWORD PTR [rbp-0x10],rsi
  404656:	mov    rax,0x4080f0
  40465d:	mov    rax,QWORD PTR [rax]
  404660:	mov    rcx,QWORD PTR [rbp-0x10]
  404664:	mov    rdx,QWORD PTR [rbp-0x8]
  404668:	mov    rsi,rcx
  40466b:	mov    rdi,rdx
  40466e:	call   rax
  404670:	leave  
  404671:	ret    

0000000000404672 <mmk_free@@Base>:
  404672:	endbr64 
  404676:	push   rbp
  404677:	mov    rbp,rsp
  40467a:	sub    rsp,0x10
  40467e:	mov    QWORD PTR [rbp-0x8],rdi
  404682:	mov    rax,0x4080f8
  404689:	mov    rax,QWORD PTR [rax]
  40468c:	mov    rdx,QWORD PTR [rbp-0x8]
  404690:	mov    rdi,rdx
  404693:	call   rax
  404695:	nop
  404696:	leave  
  404697:	ret    

0000000000404698 <mmk_init_vital_functions@@Base>:
  404698:	endbr64 
  40469c:	push   rbp
  40469d:	mov    rbp,rsp
  4046a0:	sub    rsp,0x10
  4046a4:	mov    QWORD PTR [rbp-0x8],rdi
  4046a8:	mov    edi,0x0
  4046ad:	call   402150 <malloc@plt>
  4046b2:	mov    esi,0x0
  4046b7:	mov    rdi,rax
  4046ba:	call   402100 <realloc@plt>
  4046bf:	mov    rdi,rax
  4046c2:	call   402030 <free@plt>
  4046c7:	mov    rax,QWORD PTR [rbp-0x8]
  4046cb:	lea    rsi,[rip+0xd26]        # 4053f8 <_IO_stdin_used@@Base+0x3f8>
  4046d2:	mov    rdi,rax
  4046d5:	call   403a4e <plt_get_real_fn@@Base>
  4046da:	mov    rdx,rax
  4046dd:	mov    rax,0x408100
  4046e4:	mov    QWORD PTR [rax],rdx
  4046e7:	mov    rax,0x408100
  4046ee:	mov    rax,QWORD PTR [rax]
  4046f1:	test   rax,rax
  4046f4:	jne    40472c <mmk_init_vital_functions@@Base+0x94>
  4046f6:	mov    rax,QWORD PTR [rip+0x38fb]        # 407ff8 <stderr@GLIBC_2.2.5>
  4046fd:	mov    rax,QWORD PTR [rax]
  404700:	lea    r8,[rip+0xcf9]        # 405400 <_IO_stdin_used@@Base+0x400>
  404707:	mov    ecx,0x58
  40470c:	lea    rdx,[rip+0xd25]        # 405438 <_IO_stdin_used@@Base+0x438>
  404713:	lea    rsi,[rip+0xd72]        # 40548c <_IO_stdin_used@@Base+0x48c>
  40471a:	mov    rdi,rax
  40471d:	mov    eax,0x0
  404722:	call   4020e0 <fprintf@plt>
  404727:	call   402040 <abort@plt>
  40472c:	mov    rax,QWORD PTR [rbp-0x8]
  404730:	lea    rsi,[rip+0xd72]        # 4054a9 <_IO_stdin_used@@Base+0x4a9>
  404737:	mov    rdi,rax
  40473a:	call   403a4e <plt_get_real_fn@@Base>
  40473f:	mov    rdx,rax
  404742:	mov    rax,0x4080f0
  404749:	mov    QWORD PTR [rax],rdx
  40474c:	mov    rax,0x4080f0
  404753:	mov    rax,QWORD PTR [rax]
  404756:	test   rax,rax
  404759:	jne    404791 <mmk_init_vital_functions@@Base+0xf9>
  40475b:	mov    rax,QWORD PTR [rip+0x3896]        # 407ff8 <stderr@GLIBC_2.2.5>
  404762:	mov    rax,QWORD PTR [rax]
  404765:	lea    r8,[rip+0xd4c]        # 4054b8 <_IO_stdin_used@@Base+0x4b8>
  40476c:	mov    ecx,0x59
  404771:	lea    rdx,[rip+0xcc0]        # 405438 <_IO_stdin_used@@Base+0x438>
  404778:	lea    rsi,[rip+0xd0d]        # 40548c <_IO_stdin_used@@Base+0x48c>
  40477f:	mov    rdi,rax
  404782:	mov    eax,0x0
  404787:	call   4020e0 <fprintf@plt>
  40478c:	call   402040 <abort@plt>
  404791:	mov    rax,QWORD PTR [rbp-0x8]
  404795:	lea    rsi,[rip+0xd54]        # 4054f0 <_IO_stdin_used@@Base+0x4f0>
  40479c:	mov    rdi,rax
  40479f:	call   403a4e <plt_get_real_fn@@Base>
  4047a4:	mov    rdx,rax
  4047a7:	mov    rax,0x4080f8
  4047ae:	mov    QWORD PTR [rax],rdx
  4047b1:	mov    rax,0x4080f8
  4047b8:	mov    rax,QWORD PTR [rax]
  4047bb:	test   rax,rax
  4047be:	jne    4047f6 <mmk_init_vital_functions@@Base+0x15e>
  4047c0:	mov    rax,QWORD PTR [rip+0x3831]        # 407ff8 <stderr@GLIBC_2.2.5>
  4047c7:	mov    rax,QWORD PTR [rax]
  4047ca:	lea    r8,[rip+0xd27]        # 4054f8 <_IO_stdin_used@@Base+0x4f8>
  4047d1:	mov    ecx,0x5a
  4047d6:	lea    rdx,[rip+0xc5b]        # 405438 <_IO_stdin_used@@Base+0x438>
  4047dd:	lea    rsi,[rip+0xca8]        # 40548c <_IO_stdin_used@@Base+0x48c>
  4047e4:	mov    rdi,rax
  4047e7:	mov    eax,0x0
  4047ec:	call   4020e0 <fprintf@plt>
  4047f1:	call   402040 <abort@plt>
  4047f6:	nop
  4047f7:	leave  
  4047f8:	ret    

00000000004047f9 <mmk_when_init@@Base>:
  4047f9:	endbr64 
  4047fd:	push   rbp
  4047fe:	mov    rbp,rsp
  404801:	sub    rsp,0x10
  404805:	mov    QWORD PTR [rbp-0x8],rdi
  404809:	mov    rax,QWORD PTR fs:0x0
  404812:	lea    rax,[rax-0x8]
  404819:	mov    rdx,rax
  40481c:	mov    rax,QWORD PTR [rbp-0x8]
  404820:	mov    QWORD PTR [rdx],rax
  404823:	nop
  404824:	leave  
  404825:	ret    

0000000000404826 <mmk_when_get_result@@Base>:
  404826:	endbr64 
  40482a:	push   rbp
  40482b:	mov    rbp,rsp
  40482e:	mov    rax,QWORD PTR fs:0x0
  404837:	lea    rax,[rax-0x8]
  40483e:	mov    rax,QWORD PTR [rax]
  404841:	pop    rbp
  404842:	ret    

0000000000404843 <mmk_when_impl@@Base>:
  404843:	endbr64 
  404847:	push   rbp
  404848:	mov    rbp,rsp
  40484b:	sub    rsp,0x20
  40484f:	mov    QWORD PTR [rbp-0x18],rdi
  404853:	mov    QWORD PTR [rbp-0x20],rsi
  404857:	mov    rax,QWORD PTR [rbp-0x20]
  40485b:	mov    QWORD PTR [rbp-0x8],rax
  40485f:	call   402be9 <mmk_matcher_ctx@@Base>
  404864:	mov    rdx,rax
  404867:	mov    rax,QWORD PTR [rbp-0x8]
  40486b:	mov    QWORD PTR [rax],rdx
  40486e:	mov    rax,QWORD PTR [rbp-0x18]
  404872:	mov    rdx,QWORD PTR [rax]
  404875:	mov    rax,QWORD PTR [rbp-0x8]
  404879:	mov    QWORD PTR [rax+0x8],rdx
  40487d:	mov    rax,QWORD PTR [rbp-0x18]
  404881:	mov    rdx,QWORD PTR [rbp-0x8]
  404885:	mov    QWORD PTR [rax],rdx
  404888:	nop
  404889:	leave  
  40488a:	ret    

000000000040488b <mmk_trampoline@@Base>:
  40488b:	call   404890 <mmk_trampoline@@Base+0x5>
  404890:	pop    rax
  404891:	push   rax
  404892:	mov    rax,QWORD PTR [rax-0x15]
  404896:	push   rdi
  404897:	push   rsi
  404898:	push   rdx
  404899:	push   rcx
  40489a:	push   r8
  40489c:	push   r9
  40489e:	sub    rsp,0x10
  4048a2:	movdqu XMMWORD PTR [rsp],xmm0
  4048a7:	sub    rsp,0x10
  4048ab:	movdqu XMMWORD PTR [rsp],xmm1
  4048b0:	sub    rsp,0x10
  4048b4:	movdqu XMMWORD PTR [rsp],xmm2
  4048b9:	sub    rsp,0x10
  4048bd:	movdqu XMMWORD PTR [rsp],xmm3
  4048c2:	sub    rsp,0x10
  4048c6:	movdqu XMMWORD PTR [rsp],xmm4
  4048cb:	sub    rsp,0x10
  4048cf:	movdqu XMMWORD PTR [rsp],xmm5
  4048d4:	sub    rsp,0x10
  4048d8:	movdqu XMMWORD PTR [rsp],xmm6
  4048dd:	sub    rsp,0x10
  4048e1:	movdqu XMMWORD PTR [rsp],xmm7
  4048e6:	mov    rdi,rax
  4048e9:	push   rax
  4048ea:	mov    rax,QWORD PTR [rax+0x8]
  4048ee:	call   rax
  4048f0:	pop    rax
  4048f1:	mov    rax,QWORD PTR [rax]
  4048f4:	call   rax
  4048f6:	movdqu xmm7,XMMWORD PTR [rsp]
  4048fb:	add    rsp,0x10
  4048ff:	movdqu xmm6,XMMWORD PTR [rsp]
  404904:	add    rsp,0x10
  404908:	movdqu xmm5,XMMWORD PTR [rsp]
  40490d:	add    rsp,0x10
  404911:	movdqu xmm4,XMMWORD PTR [rsp]
  404916:	add    rsp,0x10
  40491a:	movdqu xmm3,XMMWORD PTR [rsp]
  40491f:	add    rsp,0x10
  404923:	movdqu xmm2,XMMWORD PTR [rsp]
  404928:	add    rsp,0x10
  40492c:	movdqu xmm1,XMMWORD PTR [rsp]
  404931:	add    rsp,0x10
  404935:	movdqu xmm0,XMMWORD PTR [rsp]
  40493a:	add    rsp,0x10
  40493e:	pop    r9
  404940:	pop    r8
  404942:	pop    rcx
  404943:	pop    rdx
  404944:	pop    rsi
  404945:	pop    rdi
  404946:	test   rax,rax
  404949:	jne    404952 <mmk_trampoline@@Base+0xc7>
  40494b:	pop    rax
  40494c:	mov    rax,QWORD PTR [rax-0xd]
  404950:	jmp    rax
  404952:	pop    rax
  404953:	mov    rax,QWORD PTR [rax-0x15]
  404957:	mov    rax,QWORD PTR [rax+0x10]
  40495b:	call   rax
  40495d:	ret    

000000000040495e <mmk_trampoline_end@@Base>:
  40495e:	nop
  40495f:	nop

0000000000404960 <__libc_csu_init@@Base>:
  404960:	endbr64 
  404964:	push   r15
  404966:	lea    r15,[rip+0x3453]        # 407dc0 <_IO_stdin_used@@Base+0x2dc0>
  40496d:	push   r14
  40496f:	mov    r14,rdx
  404972:	push   r13
  404974:	mov    r13,rsi
  404977:	push   r12
  404979:	mov    r12d,edi
  40497c:	push   rbp
  40497d:	lea    rbp,[rip+0x3444]        # 407dc8 <_IO_stdin_used@@Base+0x2dc8>
  404984:	push   rbx
  404985:	sub    rbp,r15
  404988:	sub    rsp,0x8
  40498c:	call   402000 <free@plt-0x30>
  404991:	sar    rbp,0x3
  404995:	je     4049b6 <__libc_csu_init@@Base+0x56>
  404997:	xor    ebx,ebx
  404999:	nop    DWORD PTR [rax+0x0]
  4049a0:	mov    rdx,r14
  4049a3:	mov    rsi,r13
  4049a6:	mov    edi,r12d
  4049a9:	call   QWORD PTR [r15+rbx*8]
  4049ad:	add    rbx,0x1
  4049b1:	cmp    rbp,rbx
  4049b4:	jne    4049a0 <__libc_csu_init@@Base+0x40>
  4049b6:	add    rsp,0x8
  4049ba:	pop    rbx
  4049bb:	pop    rbp
  4049bc:	pop    r12
  4049be:	pop    r13
  4049c0:	pop    r14
  4049c2:	pop    r15
  4049c4:	ret    
  4049c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004049d0 <__libc_csu_fini@@Base>:
  4049d0:	endbr64 
  4049d4:	ret    

Disassembly of section .fini:

00000000004049d8 <.fini>:
  4049d8:	endbr64 
  4049dc:	sub    rsp,0x8
  4049e0:	add    rsp,0x8
  4049e4:	ret    
