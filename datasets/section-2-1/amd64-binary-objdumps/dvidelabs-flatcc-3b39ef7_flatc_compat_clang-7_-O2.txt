
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fe1]        # 407ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <strncpy@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <strncpy@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <puts@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <puts@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <fread_unlocked@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <fread_unlocked@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <fclose@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <fclose@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <printf@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <printf@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <rewind@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <rewind@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <__assert_fail@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <__assert_fail@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <fputc@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <fputc@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <strcmp@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <strcmp@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <fprintf@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <fprintf@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <ftell@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <ftell@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <malloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <malloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <fseek@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <fseek@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <fopen@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <fopen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <exit@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <exit@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <fwrite@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <fwrite@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

0000000000402150 <posix_memalign@plt>:
  402150:	jmp    QWORD PTR [rip+0x5f52]        # 4080a8 <posix_memalign@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <free@plt-0x10>

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x404b90
  40217a:	mov    rcx,0x404b20
  402181:	mov    rdi,0x402850
  402188:	call   QWORD PTR [rip+0x5e5a]        # 407fe8 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <verify_monster@@Base>:
  402250:	push   rbp
  402251:	push   r15
  402253:	push   r14
  402255:	push   rbx
  402256:	push   rax
  402257:	test   rdi,rdi
  40225a:	je     4022b7 <verify_monster@@Base+0x67>
  40225c:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  402263:	jne    4022b7 <verify_monster@@Base+0x67>
  402265:	mov    eax,DWORD PTR [rdi]
  402267:	lea    r14,[rdi+rax*1]
  40226b:	movsxd rbx,DWORD PTR [rdi+rax*1]
  40226f:	mov    rax,r14
  402272:	sub    rax,rbx
  402275:	movzx  eax,WORD PTR [rax]
  402278:	cmp    eax,0x9
  40227b:	jbe    4022c0 <verify_monster@@Base+0x70>
  40227d:	neg    rbx
  402280:	movzx  ecx,WORD PTR [r14+rbx*1+0x8]
  402286:	test   rcx,rcx
  402289:	je     4022c0 <verify_monster@@Base+0x70>
  40228b:	movzx  ecx,WORD PTR [r14+rcx*1]
  402290:	cmp    ecx,0x50
  402293:	jne    4022c0 <verify_monster@@Base+0x70>
  402295:	movzx  ecx,WORD PTR [r14+rbx*1+0x4]
  40229b:	test   rcx,rcx
  40229e:	je     4022dc <verify_monster@@Base+0x8c>
  4022a0:	add    rcx,r14
  4022a3:	je     4022dc <verify_monster@@Base+0x8c>
  4022a5:	mov    edx,ecx
  4022a7:	sub    edx,edi
  4022a9:	test   dl,0xf
  4022ac:	je     4022e5 <verify_monster@@Base+0x95>
  4022ae:	lea    rdi,[rip+0x356b]        # 405820 <_IO_stdin_used@@Base+0x820>
  4022b5:	jmp    4022c7 <verify_monster@@Base+0x77>
  4022b7:	lea    rdi,[rip+0x3232]        # 4054f0 <_IO_stdin_used@@Base+0x4f0>
  4022be:	jmp    4022c7 <verify_monster@@Base+0x77>
  4022c0:	lea    rdi,[rip+0x3589]        # 405850 <_IO_stdin_used@@Base+0x850>
  4022c7:	call   402050 <puts@plt>
  4022cc:	mov    eax,0xffffffff
  4022d1:	add    rsp,0x8
  4022d5:	pop    rbx
  4022d6:	pop    r14
  4022d8:	pop    r15
  4022da:	pop    rbp
  4022db:	ret    
  4022dc:	lea    rdi,[rip+0x322d]        # 405510 <_IO_stdin_used@@Base+0x510>
  4022e3:	jmp    4022c7 <verify_monster@@Base+0x77>
  4022e5:	vmovss xmm0,DWORD PTR [rcx]
  4022e9:	vucomiss xmm0,DWORD PTR [rip+0x2d13]        # 405004 <_IO_stdin_used@@Base+0x4>
  4022f1:	jne    4022f5 <verify_monster@@Base+0xa5>
  4022f3:	jnp    4022fe <verify_monster@@Base+0xae>
  4022f5:	lea    rdi,[rip+0x34f4]        # 4057f0 <_IO_stdin_used@@Base+0x7f0>
  4022fc:	jmp    4022c7 <verify_monster@@Base+0x77>
  4022fe:	vmovss xmm0,DWORD PTR [rcx+0x4]
  402303:	vucomiss xmm0,DWORD PTR [rip+0x2cfd]        # 405008 <_IO_stdin_used@@Base+0x8>
  40230b:	jne    40230f <verify_monster@@Base+0xbf>
  40230d:	jnp    402318 <verify_monster@@Base+0xc8>
  40230f:	lea    rdi,[rip+0x34aa]        # 4057c0 <_IO_stdin_used@@Base+0x7c0>
  402316:	jmp    4022c7 <verify_monster@@Base+0x77>
  402318:	vmovss xmm0,DWORD PTR [rcx+0x8]
  40231d:	vucomiss xmm0,DWORD PTR [rip+0x2ce7]        # 40500c <_IO_stdin_used@@Base+0xc>
  402325:	jne    402329 <verify_monster@@Base+0xd9>
  402327:	jnp    402332 <verify_monster@@Base+0xe2>
  402329:	lea    rdi,[rip+0x3460]        # 405790 <_IO_stdin_used@@Base+0x790>
  402330:	jmp    4022c7 <verify_monster@@Base+0x77>
  402332:	vmovsd xmm0,QWORD PTR [rcx+0x10]
  402337:	vucomisd xmm0,QWORD PTR [rip+0x2cd1]        # 405010 <_IO_stdin_used@@Base+0x10>
  40233f:	jne    402343 <verify_monster@@Base+0xf3>
  402341:	jnp    40234f <verify_monster@@Base+0xff>
  402343:	lea    rdi,[rip+0x3426]        # 405770 <_IO_stdin_used@@Base+0x770>
  40234a:	jmp    4022c7 <verify_monster@@Base+0x77>
  40234f:	cmp    BYTE PTR [rcx+0x18],0x2
  402353:	jne    4023b1 <verify_monster@@Base+0x161>
  402355:	movzx  edx,WORD PTR [rcx+0x1a]
  402359:	cmp    edx,0x5
  40235c:	jne    4023bd <verify_monster@@Base+0x16d>
  40235e:	cmp    BYTE PTR [rcx+0x1c],0x6
  402362:	jne    4023bd <verify_monster@@Base+0x16d>
  402364:	movzx  ebp,ax
  402367:	cmp    ebp,0xc
  40236a:	jb     402757 <verify_monster@@Base+0x507>
  402370:	movzx  eax,WORD PTR [r14+rbx*1+0xa]
  402376:	test   rax,rax
  402379:	je     402757 <verify_monster@@Base+0x507>
  40237f:	lea    rcx,[r14+rax*1]
  402383:	mov    eax,DWORD PTR [r14+rax*1]
  402387:	cmp    DWORD PTR [rax+rcx*1],0x9
  40238b:	jne    4023c9 <verify_monster@@Base+0x179>
  40238d:	lea    rdi,[rax+rcx*1]
  402391:	add    rdi,0x4
  402395:	lea    rsi,[rip+0x2cc5]        # 405061 <_IO_stdin_used@@Base+0x61>
  40239c:	call   4020c0 <strcmp@plt>
  4023a1:	test   eax,eax
  4023a3:	je     4023d5 <verify_monster@@Base+0x185>
  4023a5:	lea    rdi,[rip+0x3184]        # 405530 <_IO_stdin_used@@Base+0x530>
  4023ac:	jmp    4022c7 <verify_monster@@Base+0x77>
  4023b1:	lea    rdi,[rip+0x3398]        # 405750 <_IO_stdin_used@@Base+0x750>
  4023b8:	jmp    4022c7 <verify_monster@@Base+0x77>
  4023bd:	lea    rdi,[rip+0x336c]        # 405730 <_IO_stdin_used@@Base+0x730>
  4023c4:	jmp    4022c7 <verify_monster@@Base+0x77>
  4023c9:	lea    rdi,[rip+0x3340]        # 405710 <_IO_stdin_used@@Base+0x710>
  4023d0:	jmp    4022c7 <verify_monster@@Base+0x77>
  4023d5:	cmp    ebp,0x10
  4023d8:	jb     402489 <verify_monster@@Base+0x239>
  4023de:	movzx  ecx,WORD PTR [r14+rbx*1+0xe]
  4023e4:	test   rcx,rcx
  4023e7:	je     402489 <verify_monster@@Base+0x239>
  4023ed:	lea    rax,[r14+rcx*1]
  4023f1:	mov    ecx,DWORD PTR [r14+rcx*1]
  4023f5:	cmp    DWORD PTR [rcx+rax*1],0x5
  4023f9:	jne    402489 <verify_monster@@Base+0x239>
  4023ff:	xor    esi,esi
  402401:	cmp    BYTE PTR [rax+rcx*1+0x4],0x0
  402406:	jne    402495 <verify_monster@@Base+0x245>
  40240c:	mov    esi,0x1
  402411:	cmp    BYTE PTR [rax+rcx*1+0x5],0x1
  402416:	jne    402495 <verify_monster@@Base+0x245>
  402418:	mov    esi,0x2
  40241d:	cmp    BYTE PTR [rax+rcx*1+0x6],0x2
  402422:	jne    402495 <verify_monster@@Base+0x245>
  402424:	mov    esi,0x3
  402429:	cmp    BYTE PTR [rax+rcx*1+0x7],0x3
  40242e:	jne    402495 <verify_monster@@Base+0x245>
  402430:	mov    esi,0x4
  402435:	cmp    BYTE PTR [rax+rcx*1+0x8],0x4
  40243a:	jne    402495 <verify_monster@@Base+0x245>
  40243c:	cmp    ebp,0x19
  40243f:	jbe    4024a8 <verify_monster@@Base+0x258>
  402441:	movzx  eax,WORD PTR [r14+rbx*1+0x18]
  402447:	test   rax,rax
  40244a:	je     4024a8 <verify_monster@@Base+0x258>
  40244c:	lea    rcx,[r14+rax*1]
  402450:	mov    eax,DWORD PTR [r14+rax*1]
  402454:	cmp    DWORD PTR [rax+rcx*1],0x2
  402458:	jne    4024b4 <verify_monster@@Base+0x264>
  40245a:	lea    r15,[rax+rcx*1]
  40245e:	add    r15,0x4
  402462:	mov    eax,DWORD PTR [r15]
  402465:	lea    rdi,[r15+rax*1]
  402469:	add    rdi,0x4
  40246d:	lea    rsi,[rip+0x2c14]        # 405088 <_IO_stdin_used@@Base+0x88>
  402474:	call   4020c0 <strcmp@plt>
  402479:	test   eax,eax
  40247b:	je     4024c0 <verify_monster@@Base+0x270>
  40247d:	lea    rdi,[rip+0x320c]        # 405690 <_IO_stdin_used@@Base+0x690>
  402484:	jmp    4022c7 <verify_monster@@Base+0x77>
  402489:	lea    rdi,[rip+0x3260]        # 4056f0 <_IO_stdin_used@@Base+0x6f0>
  402490:	jmp    4022c7 <verify_monster@@Base+0x77>
  402495:	lea    rdi,[rip+0x2bcf]        # 40506b <_IO_stdin_used@@Base+0x6b>
  40249c:	xor    eax,eax
  40249e:	call   402080 <printf@plt>
  4024a3:	jmp    4022cc <verify_monster@@Base+0x7c>
  4024a8:	lea    rdi,[rip+0x30a1]        # 405550 <_IO_stdin_used@@Base+0x550>
  4024af:	jmp    4022c7 <verify_monster@@Base+0x77>
  4024b4:	lea    rdi,[rip+0x3205]        # 4056c0 <_IO_stdin_used@@Base+0x6c0>
  4024bb:	jmp    4022c7 <verify_monster@@Base+0x77>
  4024c0:	mov    eax,DWORD PTR [r15+0x4]
  4024c4:	lea    rdi,[r15+rax*1]
  4024c8:	add    rdi,0x8
  4024cc:	lea    rsi,[rip+0x2bbb]        # 40508e <_IO_stdin_used@@Base+0x8e>
  4024d3:	call   4020c0 <strcmp@plt>
  4024d8:	test   eax,eax
  4024da:	je     4024e8 <verify_monster@@Base+0x298>
  4024dc:	lea    rdi,[rip+0x317d]        # 405660 <_IO_stdin_used@@Base+0x660>
  4024e3:	jmp    4022c7 <verify_monster@@Base+0x77>
  4024e8:	movzx  eax,WORD PTR [r14+rbx*1+0x12]
  4024ee:	test   rax,rax
  4024f1:	je     402563 <verify_monster@@Base+0x313>
  4024f3:	cmp    BYTE PTR [r14+rax*1],0x1
  4024f8:	jne    402563 <verify_monster@@Base+0x313>
  4024fa:	movzx  eax,WORD PTR [r14+rbx*1+0x14]
  402500:	test   rax,rax
  402503:	je     40256f <verify_monster@@Base+0x31f>
  402505:	lea    rcx,[r14+rax*1]
  402509:	mov    eax,DWORD PTR [r14+rax*1]
  40250d:	add    rax,rcx
  402510:	je     40256f <verify_monster@@Base+0x31f>
  402512:	movsxd rcx,DWORD PTR [rax]
  402515:	mov    rdx,rax
  402518:	sub    rdx,rcx
  40251b:	movzx  edx,WORD PTR [rdx]
  40251e:	cmp    edx,0xc
  402521:	jb     402757 <verify_monster@@Base+0x507>
  402527:	neg    rcx
  40252a:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40252f:	test   rcx,rcx
  402532:	je     402757 <verify_monster@@Base+0x507>
  402538:	lea    rdx,[rax+rcx*1]
  40253c:	mov    eax,DWORD PTR [rax+rcx*1]
  40253f:	lea    rdi,[rax+rdx*1]
  402543:	add    rdi,0x4
  402547:	lea    rsi,[rip+0x2b46]        # 405094 <_IO_stdin_used@@Base+0x94>
  40254e:	call   4020c0 <strcmp@plt>
  402553:	test   eax,eax
  402555:	je     40257b <verify_monster@@Base+0x32b>
  402557:	lea    rdi,[rip+0x30e2]        # 405640 <_IO_stdin_used@@Base+0x640>
  40255e:	jmp    4022c7 <verify_monster@@Base+0x77>
  402563:	lea    rdi,[rip+0x2f68]        # 4054d2 <_IO_stdin_used@@Base+0x4d2>
  40256a:	jmp    4022c7 <verify_monster@@Base+0x77>
  40256f:	lea    rdi,[rip+0x2ffa]        # 405570 <_IO_stdin_used@@Base+0x570>
  402576:	jmp    4022c7 <verify_monster@@Base+0x77>
  40257b:	movzx  ecx,WORD PTR [r14+rbx*1+0x16]
  402581:	test   rcx,rcx
  402584:	je     40271b <verify_monster@@Base+0x4cb>
  40258a:	lea    rax,[r14+rcx*1]
  40258e:	mov    ecx,DWORD PTR [r14+rcx*1]
  402592:	cmp    DWORD PTR [rcx+rax*1],0x2
  402596:	jne    40271b <verify_monster@@Base+0x4cb>
  40259c:	movzx  edx,WORD PTR [rax+rcx*1+0x4]
  4025a1:	cmp    edx,0xa
  4025a4:	jne    402727 <verify_monster@@Base+0x4d7>
  4025aa:	cmp    BYTE PTR [rax+rcx*1+0x6],0x14
  4025af:	jne    402733 <verify_monster@@Base+0x4e3>
  4025b5:	movzx  edx,WORD PTR [rax+rcx*1+0x8]
  4025ba:	cmp    edx,0x1e
  4025bd:	jne    40273f <verify_monster@@Base+0x4ef>
  4025c3:	cmp    BYTE PTR [rax+rcx*1+0xa],0x28
  4025c8:	jne    40274b <verify_monster@@Base+0x4fb>
  4025ce:	cmp    ebp,0x26
  4025d1:	jb     402776 <verify_monster@@Base+0x526>
  4025d7:	movzx  eax,WORD PTR [r14+rbx*1+0x24]
  4025dd:	test   rax,rax
  4025e0:	je     402776 <verify_monster@@Base+0x526>
  4025e6:	cmp    DWORD PTR [r14+rax*1],0xdd79c941
  4025ee:	jne    402776 <verify_monster@@Base+0x526>
  4025f4:	cmp    ebp,0x28
  4025f7:	jb     402795 <verify_monster@@Base+0x545>
  4025fd:	movzx  eax,WORD PTR [r14+rbx*1+0x26]
  402603:	test   rax,rax
  402606:	je     402795 <verify_monster@@Base+0x545>
  40260c:	cmp    DWORD PTR [r14+rax*1],0xdd79c941
  402614:	jne    402795 <verify_monster@@Base+0x545>
  40261a:	cmp    ebp,0x2a
  40261d:	jb     4027b4 <verify_monster@@Base+0x564>
  402623:	movzx  ecx,WORD PTR [r14+rbx*1+0x28]
  402629:	test   rcx,rcx
  40262c:	je     4027b4 <verify_monster@@Base+0x564>
  402632:	movabs rax,0x6e0f80cdf27b9181
  40263c:	cmp    QWORD PTR [r14+rcx*1],rax
  402640:	jne    4027b4 <verify_monster@@Base+0x564>
  402646:	cmp    ebp,0x2c
  402649:	jb     4027d3 <verify_monster@@Base+0x583>
  40264f:	movzx  ecx,WORD PTR [r14+rbx*1+0x2a]
  402655:	test   rcx,rcx
  402658:	je     4027d3 <verify_monster@@Base+0x583>
  40265e:	cmp    QWORD PTR [r14+rcx*1],rax
  402662:	jne    4027d3 <verify_monster@@Base+0x583>
  402668:	cmp    ebp,0x2e
  40266b:	jb     4027f2 <verify_monster@@Base+0x5a2>
  402671:	movzx  eax,WORD PTR [r14+rbx*1+0x2c]
  402677:	test   rax,rax
  40267a:	je     4027f2 <verify_monster@@Base+0x5a2>
  402680:	cmp    DWORD PTR [r14+rax*1],0x8e81a471
  402688:	jne    4027f2 <verify_monster@@Base+0x5a2>
  40268e:	cmp    ebp,0x30
  402691:	jb     402811 <verify_monster@@Base+0x5c1>
  402697:	movzx  eax,WORD PTR [r14+rbx*1+0x2e]
  40269d:	test   rax,rax
  4026a0:	je     402811 <verify_monster@@Base+0x5c1>
  4026a6:	cmp    DWORD PTR [r14+rax*1],0x8e81a471
  4026ae:	jne    402811 <verify_monster@@Base+0x5c1>
  4026b4:	cmp    ebp,0x32
  4026b7:	jb     402830 <verify_monster@@Base+0x5e0>
  4026bd:	movzx  eax,WORD PTR [r14+rbx*1+0x30]
  4026c3:	test   rax,rax
  4026c6:	je     402830 <verify_monster@@Base+0x5e0>
  4026cc:	movabs rcx,0x43f948dcc767ddf1
  4026d6:	cmp    QWORD PTR [r14+rax*1],rcx
  4026da:	jne    402830 <verify_monster@@Base+0x5e0>
  4026e0:	cmp    ebp,0x34
  4026e3:	jb     4026fc <verify_monster@@Base+0x4ac>
  4026e5:	movzx  edx,WORD PTR [r14+rbx*1+0x32]
  4026eb:	test   rdx,rdx
  4026ee:	je     4026fc <verify_monster@@Base+0x4ac>
  4026f0:	xor    eax,eax
  4026f2:	cmp    QWORD PTR [r14+rdx*1],rcx
  4026f6:	je     4022d1 <verify_monster@@Base+0x81>
  4026fc:	lea    rdi,[rip+0x2bb1]        # 4052b4 <_IO_stdin_used@@Base+0x2b4>
  402703:	lea    rsi,[rip+0x29c4]        # 4050ce <_IO_stdin_used@@Base+0xce>
  40270a:	lea    rcx,[rip+0x2a28]        # 405139 <_IO_stdin_used@@Base+0x139>
  402711:	mov    edx,0x9b
  402716:	call   4020a0 <__assert_fail@plt>
  40271b:	lea    rdi,[rip+0x2eee]        # 405610 <_IO_stdin_used@@Base+0x610>
  402722:	jmp    4022c7 <verify_monster@@Base+0x77>
  402727:	lea    rdi,[rip+0x2ec2]        # 4055f0 <_IO_stdin_used@@Base+0x5f0>
  40272e:	jmp    4022c7 <verify_monster@@Base+0x77>
  402733:	lea    rdi,[rip+0x2e96]        # 4055d0 <_IO_stdin_used@@Base+0x5d0>
  40273a:	jmp    4022c7 <verify_monster@@Base+0x77>
  40273f:	lea    rdi,[rip+0x2e6a]        # 4055b0 <_IO_stdin_used@@Base+0x5b0>
  402746:	jmp    4022c7 <verify_monster@@Base+0x77>
  40274b:	lea    rdi,[rip+0x2e3e]        # 405590 <_IO_stdin_used@@Base+0x590>
  402752:	jmp    4022c7 <verify_monster@@Base+0x77>
  402757:	lea    rdi,[rip+0x2d33]        # 405491 <_IO_stdin_used@@Base+0x491>
  40275e:	lea    rsi,[rip+0x2c5f]        # 4053c4 <_IO_stdin_used@@Base+0x3c4>
  402765:	lea    rcx,[rip+0x2cd4]        # 405440 <_IO_stdin_used@@Base+0x440>
  40276c:	mov    edx,0x2bb
  402771:	call   4020a0 <__assert_fail@plt>
  402776:	lea    rdi,[rip+0x291c]        # 405099 <_IO_stdin_used@@Base+0x99>
  40277d:	lea    rsi,[rip+0x294a]        # 4050ce <_IO_stdin_used@@Base+0xce>
  402784:	lea    rcx,[rip+0x29ae]        # 405139 <_IO_stdin_used@@Base+0x139>
  40278b:	mov    edx,0x94
  402790:	call   4020a0 <__assert_fail@plt>
  402795:	lea    rdi,[rip+0x29b8]        # 405154 <_IO_stdin_used@@Base+0x154>
  40279c:	lea    rsi,[rip+0x292b]        # 4050ce <_IO_stdin_used@@Base+0xce>
  4027a3:	lea    rcx,[rip+0x298f]        # 405139 <_IO_stdin_used@@Base+0x139>
  4027aa:	mov    edx,0x95
  4027af:	call   4020a0 <__assert_fail@plt>
  4027b4:	lea    rdi,[rip+0x29ce]        # 405189 <_IO_stdin_used@@Base+0x189>
  4027bb:	lea    rsi,[rip+0x290c]        # 4050ce <_IO_stdin_used@@Base+0xce>
  4027c2:	lea    rcx,[rip+0x2970]        # 405139 <_IO_stdin_used@@Base+0x139>
  4027c9:	mov    edx,0x96
  4027ce:	call   4020a0 <__assert_fail@plt>
  4027d3:	lea    rdi,[rip+0x29ee]        # 4051c8 <_IO_stdin_used@@Base+0x1c8>
  4027da:	lea    rsi,[rip+0x28ed]        # 4050ce <_IO_stdin_used@@Base+0xce>
  4027e1:	lea    rcx,[rip+0x2951]        # 405139 <_IO_stdin_used@@Base+0x139>
  4027e8:	mov    edx,0x97
  4027ed:	call   4020a0 <__assert_fail@plt>
  4027f2:	lea    rdi,[rip+0x2a0e]        # 405207 <_IO_stdin_used@@Base+0x207>
  4027f9:	lea    rsi,[rip+0x28ce]        # 4050ce <_IO_stdin_used@@Base+0xce>
  402800:	lea    rcx,[rip+0x2932]        # 405139 <_IO_stdin_used@@Base+0x139>
  402807:	mov    edx,0x98
  40280c:	call   4020a0 <__assert_fail@plt>
  402811:	lea    rdi,[rip+0x2a26]        # 40523e <_IO_stdin_used@@Base+0x23e>
  402818:	lea    rsi,[rip+0x28af]        # 4050ce <_IO_stdin_used@@Base+0xce>
  40281f:	lea    rcx,[rip+0x2913]        # 405139 <_IO_stdin_used@@Base+0x139>
  402826:	mov    edx,0x99
  40282b:	call   4020a0 <__assert_fail@plt>
  402830:	lea    rdi,[rip+0x2a3d]        # 405274 <_IO_stdin_used@@Base+0x274>
  402837:	lea    rsi,[rip+0x2890]        # 4050ce <_IO_stdin_used@@Base+0xce>
  40283e:	lea    rcx,[rip+0x28f4]        # 405139 <_IO_stdin_used@@Base+0x139>
  402845:	mov    edx,0x9a
  40284a:	call   4020a0 <__assert_fail@plt>
  40284f:	nop

0000000000402850 <main@@Base>:
  402850:	push   rbp
  402851:	push   r15
  402853:	push   r14
  402855:	push   r13
  402857:	push   r12
  402859:	push   rbx
  40285a:	sub    rsp,0x18
  40285e:	lea    eax,[rdi-0x1]
  402861:	cmp    eax,0x2
  402864:	jae    402b66 <main@@Base+0x316>
  40286a:	cmp    edi,0x2
  40286d:	jne    40287f <main@@Base+0x2f>
  40286f:	mov    rdi,QWORD PTR [rsi+0x8]
  402873:	lea    rax,[rip+0x5846]        # 4080c0 <filename@@Base>
  40287a:	mov    QWORD PTR [rax],rdi
  40287d:	jmp    402889 <main@@Base+0x39>
  40287f:	lea    rax,[rip+0x583a]        # 4080c0 <filename@@Base>
  402886:	mov    rdi,QWORD PTR [rax]
  402889:	lea    rsi,[rip+0x2c22]        # 4054b2 <_IO_stdin_used@@Base+0x4b2>
  402890:	call   402120 <fopen@plt>
  402895:	test   rax,rax
  402898:	je     402934 <main@@Base+0xe4>
  40289e:	mov    rbp,rax
  4028a1:	xor    esi,esi
  4028a3:	mov    edx,0x2
  4028a8:	mov    rdi,rax
  4028ab:	call   402110 <fseek@plt>
  4028b0:	mov    rdi,rbp
  4028b3:	call   4020e0 <ftell@plt>
  4028b8:	mov    r12,rax
  4028bb:	cmp    rax,0x400
  4028c1:	ja     40292a <main@@Base+0xda>
  4028c3:	mov    rdi,rbp
  4028c6:	call   402090 <rewind@plt>
  4028cb:	test   r12,r12
  4028ce:	mov    edi,0x1
  4028d3:	cmovne rdi,r12
  4028d7:	call   402100 <malloc@plt>
  4028dc:	test   rax,rax
  4028df:	je     40292a <main@@Base+0xda>
  4028e1:	mov    r15,rax
  4028e4:	xor    ecx,ecx
  4028e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028f0:	mov    rbx,rcx
  4028f3:	lea    rdi,[r15+rcx*1]
  4028f7:	mov    rdx,r12
  4028fa:	sub    rdx,rcx
  4028fd:	mov    esi,0x1
  402902:	mov    rcx,rbp
  402905:	call   402060 <fread_unlocked@plt>
  40290a:	lea    rcx,[rax+rbx*1]
  40290e:	test   rax,rax
  402911:	jne    4028f0 <main@@Base+0xa0>
  402913:	mov    rdi,rbp
  402916:	call   402070 <fclose@plt>
  40291b:	cmp    r12,rbx
  40291e:	je     40293a <main@@Base+0xea>
  402920:	mov    rdi,r15
  402923:	call   402030 <free@plt>
  402928:	jmp    402937 <main@@Base+0xe7>
  40292a:	mov    rdi,rbp
  40292d:	call   402070 <fclose@plt>
  402932:	jmp    402937 <main@@Base+0xe7>
  402934:	xor    r12d,r12d
  402937:	xor    r15d,r15d
  40293a:	lea    rdx,[r12+0xff]
  402942:	and    rdx,0xffffffffffffff00
  402949:	mov    QWORD PTR [rsp],0x0
  402951:	mov    rdi,rsp
  402954:	mov    esi,0x100
  402959:	call   402150 <posix_memalign@plt>
  40295e:	mov    r14,QWORD PTR [rsp]
  402962:	test   eax,eax
  402964:	je     40297e <main@@Base+0x12e>
  402966:	test   r14,r14
  402969:	je     40297e <main@@Base+0x12e>
  40296b:	mov    rdi,r14
  40296e:	call   402030 <free@plt>
  402973:	mov    QWORD PTR [rsp],0x0
  40297b:	xor    r14d,r14d
  40297e:	mov    rdi,r14
  402981:	mov    rsi,r15
  402984:	mov    rdx,r12
  402987:	call   4020f0 <memcpy@plt>
  40298c:	mov    rdi,r15
  40298f:	call   402030 <free@plt>
  402994:	mov    rax,QWORD PTR [rip+0x565d]        # 407ff8 <stderr@GLIBC_2.2.5>
  40299b:	mov    r15,QWORD PTR [rax]
  40299e:	test   r14,r14
  4029a1:	jne    4029c8 <main@@Base+0x178>
  4029a3:	lea    rax,[rip+0x5716]        # 4080c0 <filename@@Base>
  4029aa:	mov    rdx,QWORD PTR [rax]
  4029ad:	lea    rsi,[rip+0x2980]        # 405334 <_IO_stdin_used@@Base+0x334>
  4029b4:	xor    eax,eax
  4029b6:	mov    rdi,r15
  4029b9:	call   4020d0 <fprintf@plt>
  4029be:	mov    ebx,0xffffffff
  4029c3:	jmp    402b16 <main@@Base+0x2c6>
  4029c8:	lea    rsi,[rip+0x2ae6]        # 4054b5 <_IO_stdin_used@@Base+0x4b5>
  4029cf:	lea    rdx,[rip+0x2676]        # 40504c <_IO_stdin_used@@Base+0x4c>
  4029d6:	xor    eax,eax
  4029d8:	mov    rdi,r15
  4029db:	call   4020d0 <fprintf@plt>
  4029e0:	test   r12d,r12d
  4029e3:	je     402ab6 <main@@Base+0x266>
  4029e9:	mov    ebx,r12d
  4029ec:	xor    ebp,ebp
  4029ee:	xchg   ax,ax
  4029f0:	mov    r13d,ebp
  4029f3:	and    r13d,0xf
  4029f7:	test   r13d,r13d
  4029fa:	jne    402a30 <main@@Base+0x1e0>
  4029fc:	test   rbp,rbp
  4029ff:	je     402a15 <main@@Base+0x1c5>
  402a01:	xor    eax,eax
  402a03:	mov    rdi,r15
  402a06:	lea    rsi,[rip+0x2aad]        # 4054ba <_IO_stdin_used@@Base+0x4ba>
  402a0d:	mov    rdx,rsp
  402a10:	call   4020d0 <fprintf@plt>
  402a15:	xor    eax,eax
  402a17:	mov    rdi,r15
  402a1a:	lea    rsi,[rip+0x2a9f]        # 4054c0 <_IO_stdin_used@@Base+0x4c0>
  402a21:	mov    edx,ebp
  402a23:	call   4020d0 <fprintf@plt>
  402a28:	jmp    402a43 <main@@Base+0x1f3>
  402a2a:	nop    WORD PTR [rax+rax*1+0x0]
  402a30:	test   bpl,0x7
  402a34:	jne    402a43 <main@@Base+0x1f3>
  402a36:	mov    edi,0x20
  402a3b:	mov    rsi,r15
  402a3e:	call   4020b0 <fputc@plt>
  402a43:	movzx  edx,BYTE PTR [r14+rbp*1]
  402a48:	xor    eax,eax
  402a4a:	mov    rdi,r15
  402a4d:	lea    rsi,[rip+0x2a74]        # 4054c8 <_IO_stdin_used@@Base+0x4c8>
  402a54:	call   4020d0 <fprintf@plt>
  402a59:	movzx  eax,BYTE PTR [r14+rbp*1]
  402a5e:	mov    edx,eax
  402a60:	add    dl,0xe0
  402a63:	mov    cl,0x2e
  402a65:	cmp    dl,0x5e
  402a68:	ja     402a6c <main@@Base+0x21c>
  402a6a:	mov    ecx,eax
  402a6c:	mov    BYTE PTR [rsp+r13*1],cl
  402a70:	mov    BYTE PTR [rsp+r13*1+0x1],0x0
  402a76:	add    rbp,0x1
  402a7a:	cmp    rbx,rbp
  402a7d:	jne    4029f0 <main@@Base+0x1a0>
  402a83:	test   r12b,0xf
  402a87:	je     402ab6 <main@@Base+0x266>
  402a89:	lea    ebx,[r12+0x1]
  402a8e:	lea    r13,[rip+0x2a39]        # 4054ce <_IO_stdin_used@@Base+0x4ce>
  402a95:	mov    ebp,ebx
  402a97:	mov    esi,0x3
  402a9c:	mov    edx,0x1
  402aa1:	mov    rdi,r13
  402aa4:	mov    rcx,r15
  402aa7:	call   402140 <fwrite@plt>
  402aac:	add    ebp,0x1
  402aaf:	test   bl,0xf
  402ab2:	mov    ebx,ebp
  402ab4:	jne    402a97 <main@@Base+0x247>
  402ab6:	lea    rsi,[rip+0x29fd]        # 4054ba <_IO_stdin_used@@Base+0x4ba>
  402abd:	mov    rdx,rsp
  402ac0:	xor    eax,eax
  402ac2:	mov    rdi,r15
  402ac5:	call   4020d0 <fprintf@plt>
  402aca:	lea    rdx,[rip+0x2888]        # 405359 <_IO_stdin_used@@Base+0x359>
  402ad1:	lea    rcx,[rip+0xb8]        # 402b90 <main@@Base+0x340>
  402ad8:	mov    rdi,r14
  402adb:	mov    rsi,r12
  402ade:	call   403fc0 <flatcc_verify_table_as_root@@Base>
  402ae3:	test   eax,eax
  402ae5:	jne    402b27 <main@@Base+0x2d7>
  402ae7:	lea    rdx,[rip+0x286b]        # 405359 <_IO_stdin_used@@Base+0x359>
  402aee:	lea    rcx,[rip+0x9b]        # 402b90 <main@@Base+0x340>
  402af5:	mov    rdi,r14
  402af8:	mov    rsi,r12
  402afb:	call   403fc0 <flatcc_verify_table_as_root@@Base>
  402b00:	test   eax,eax
  402b02:	jne    402b3f <main@@Base+0x2ef>
  402b04:	mov    rdi,r14
  402b07:	call   402250 <verify_monster@@Base>
  402b0c:	mov    ebx,eax
  402b0e:	mov    rdi,r14
  402b11:	call   402030 <free@plt>
  402b16:	mov    eax,ebx
  402b18:	add    rsp,0x18
  402b1c:	pop    rbx
  402b1d:	pop    r12
  402b1f:	pop    r13
  402b21:	pop    r14
  402b23:	pop    r15
  402b25:	pop    rbp
  402b26:	ret    
  402b27:	mov    rax,QWORD PTR [rip+0x54ca]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b2e:	mov    rcx,QWORD PTR [rax]
  402b31:	lea    rdi,[rip+0x2826]        # 40535e <_IO_stdin_used@@Base+0x35e>
  402b38:	mov    esi,0x26
  402b3d:	jmp    402b55 <main@@Base+0x305>
  402b3f:	mov    rax,QWORD PTR [rip+0x54b2]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b46:	mov    rcx,QWORD PTR [rax]
  402b49:	lea    rdi,[rip+0x2835]        # 405385 <_IO_stdin_used@@Base+0x385>
  402b50:	mov    esi,0x3e
  402b55:	mov    edx,0x1
  402b5a:	call   402140 <fwrite@plt>
  402b5f:	mov    ebx,0xffffffff
  402b64:	jmp    402b0e <main@@Base+0x2be>
  402b66:	mov    rax,QWORD PTR [rip+0x548b]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b6d:	mov    rcx,QWORD PTR [rax]
  402b70:	lea    rdi,[rip+0x277d]        # 4052f4 <_IO_stdin_used@@Base+0x2f4>
  402b77:	mov    esi,0x3f
  402b7c:	mov    edx,0x1
  402b81:	call   402140 <fwrite@plt>
  402b86:	mov    edi,0x1
  402b8b:	call   402130 <exit@plt>
  402b90:	push   rbx
  402b91:	mov    rbx,rdi
  402b94:	xor    esi,esi
  402b96:	mov    edx,0x20
  402b9b:	mov    ecx,0x10
  402ba0:	call   403460 <flatcc_verify_field@@Base>
  402ba5:	test   eax,eax
  402ba7:	jne    402fb2 <main@@Base+0x762>
  402bad:	mov    esi,0x2
  402bb2:	mov    edx,0x2
  402bb7:	mov    ecx,0x2
  402bbc:	mov    rdi,rbx
  402bbf:	call   403460 <flatcc_verify_field@@Base>
  402bc4:	test   eax,eax
  402bc6:	jne    402fb2 <main@@Base+0x762>
  402bcc:	mov    esi,0x1
  402bd1:	mov    edx,0x2
  402bd6:	mov    ecx,0x2
  402bdb:	mov    rdi,rbx
  402bde:	call   403460 <flatcc_verify_field@@Base>
  402be3:	test   eax,eax
  402be5:	jne    402fb2 <main@@Base+0x762>
  402beb:	mov    esi,0x3
  402bf0:	mov    edx,0x1
  402bf5:	mov    rdi,rbx
  402bf8:	call   4034c0 <flatcc_verify_string_field@@Base>
  402bfd:	test   eax,eax
  402bff:	jne    402fb2 <main@@Base+0x762>
  402c05:	mov    esi,0x6
  402c0a:	mov    edx,0x1
  402c0f:	mov    ecx,0x1
  402c14:	mov    rdi,rbx
  402c17:	call   403460 <flatcc_verify_field@@Base>
  402c1c:	test   eax,eax
  402c1e:	jne    402fb2 <main@@Base+0x762>
  402c24:	mov    esi,0x5
  402c29:	xor    edx,edx
  402c2b:	mov    ecx,0x1
  402c30:	mov    r8d,0x1
  402c36:	mov    r9d,0xffffffff
  402c3c:	mov    rdi,rbx
  402c3f:	call   403570 <flatcc_verify_vector_field@@Base>
  402c44:	test   eax,eax
  402c46:	jne    402fb2 <main@@Base+0x762>
  402c4c:	lea    rcx,[rip+0xffffffffffffff3d]        # 402b90 <main@@Base+0x340>
  402c53:	mov    esi,0xb
  402c58:	xor    edx,edx
  402c5a:	mov    rdi,rbx
  402c5d:	call   4038e0 <flatcc_verify_table_vector_field@@Base>
  402c62:	test   eax,eax
  402c64:	jne    402fb2 <main@@Base+0x762>
  402c6a:	mov    esi,0xa
  402c6f:	xor    edx,edx
  402c71:	mov    rdi,rbx
  402c74:	call   403640 <flatcc_verify_string_vector_field@@Base>
  402c79:	test   eax,eax
  402c7b:	jne    402fb2 <main@@Base+0x762>
  402c81:	mov    esi,0x1c
  402c86:	xor    edx,edx
  402c88:	mov    rdi,rbx
  402c8b:	call   403640 <flatcc_verify_string_vector_field@@Base>
  402c90:	test   eax,eax
  402c92:	jne    402fb2 <main@@Base+0x762>
  402c98:	mov    esi,0x18
  402c9d:	xor    edx,edx
  402c9f:	mov    ecx,0x1
  402ca4:	mov    r8d,0x1
  402caa:	mov    r9d,0xffffffff
  402cb0:	mov    rdi,rbx
  402cb3:	call   403570 <flatcc_verify_vector_field@@Base>
  402cb8:	test   eax,eax
  402cba:	jne    402fb2 <main@@Base+0x762>
  402cc0:	mov    esi,0x1d
  402cc5:	xor    edx,edx
  402cc7:	mov    ecx,0x8
  402ccc:	mov    r8d,0x4
  402cd2:	mov    r9d,0x1fffffff
  402cd8:	mov    rdi,rbx
  402cdb:	call   403570 <flatcc_verify_vector_field@@Base>
  402ce0:	test   eax,eax
  402ce2:	jne    402fb2 <main@@Base+0x762>
  402ce8:	lea    rcx,[rip+0xfffffffffffffea1]        # 402b90 <main@@Base+0x340>
  402cef:	mov    esi,0xc
  402cf4:	xor    edx,edx
  402cf6:	mov    rdi,rbx
  402cf9:	call   4037a0 <flatcc_verify_table_field@@Base>
  402cfe:	test   eax,eax
  402d00:	jne    402fb2 <main@@Base+0x762>
  402d06:	lea    rcx,[rip+0x2c3]        # 402fd0 <main@@Base+0x780>
  402d0d:	mov    esi,0x8
  402d12:	xor    edx,edx
  402d14:	mov    rdi,rbx
  402d17:	call   4046b0 <flatcc_verify_union_field@@Base>
  402d1c:	test   eax,eax
  402d1e:	jne    402fb2 <main@@Base+0x762>
  402d24:	mov    esi,0x9
  402d29:	xor    edx,edx
  402d2b:	mov    ecx,0x4
  402d30:	mov    r8d,0x2
  402d36:	mov    r9d,0x3fffffff
  402d3c:	mov    rdi,rbx
  402d3f:	call   403570 <flatcc_verify_vector_field@@Base>
  402d44:	test   eax,eax
  402d46:	jne    402fb2 <main@@Base+0x762>
  402d4c:	mov    esi,0x1f
  402d51:	xor    edx,edx
  402d53:	mov    ecx,0x4
  402d58:	mov    r8d,0x2
  402d5e:	mov    r9d,0x3fffffff
  402d64:	mov    rdi,rbx
  402d67:	call   403570 <flatcc_verify_vector_field@@Base>
  402d6c:	test   eax,eax
  402d6e:	jne    402fb2 <main@@Base+0x762>
  402d74:	lea    r9,[rip+0xfffffffffffffe15]        # 402b90 <main@@Base+0x340>
  402d7b:	mov    esi,0xd
  402d80:	xor    edx,edx
  402d82:	xor    ecx,ecx
  402d84:	mov    r8d,0x1
  402d8a:	mov    rdi,rbx
  402d8d:	call   4043d0 <flatcc_verify_table_as_nested_root@@Base>
  402d92:	test   eax,eax
  402d94:	jne    402fb2 <main@@Base+0x762>
  402d9a:	lea    rcx,[rip+0x24f]        # 402ff0 <main@@Base+0x7a0>
  402da1:	mov    esi,0xe
  402da6:	xor    edx,edx
  402da8:	mov    rdi,rbx
  402dab:	call   4037a0 <flatcc_verify_table_field@@Base>
  402db0:	test   eax,eax
  402db2:	jne    402fb2 <main@@Base+0x762>
  402db8:	mov    esi,0xf
  402dbd:	mov    edx,0x1
  402dc2:	mov    ecx,0x1
  402dc7:	mov    rdi,rbx
  402dca:	call   403460 <flatcc_verify_field@@Base>
  402dcf:	test   eax,eax
  402dd1:	jne    402fb2 <main@@Base+0x762>
  402dd7:	mov    esi,0x10
  402ddc:	mov    edx,0x4
  402de1:	mov    ecx,0x4
  402de6:	mov    rdi,rbx
  402de9:	call   403460 <flatcc_verify_field@@Base>
  402dee:	test   eax,eax
  402df0:	jne    402fb2 <main@@Base+0x762>
  402df6:	mov    esi,0x11
  402dfb:	mov    edx,0x4
  402e00:	mov    ecx,0x4
  402e05:	mov    rdi,rbx
  402e08:	call   403460 <flatcc_verify_field@@Base>
  402e0d:	test   eax,eax
  402e0f:	jne    402fb2 <main@@Base+0x762>
  402e15:	mov    esi,0x12
  402e1a:	mov    edx,0x8
  402e1f:	mov    ecx,0x8
  402e24:	mov    rdi,rbx
  402e27:	call   403460 <flatcc_verify_field@@Base>
  402e2c:	test   eax,eax
  402e2e:	jne    402fb2 <main@@Base+0x762>
  402e34:	mov    esi,0x13
  402e39:	mov    edx,0x8
  402e3e:	mov    ecx,0x8
  402e43:	mov    rdi,rbx
  402e46:	call   403460 <flatcc_verify_field@@Base>
  402e4b:	test   eax,eax
  402e4d:	jne    402fb2 <main@@Base+0x762>
  402e53:	mov    esi,0x14
  402e58:	mov    edx,0x4
  402e5d:	mov    ecx,0x4
  402e62:	mov    rdi,rbx
  402e65:	call   403460 <flatcc_verify_field@@Base>
  402e6a:	test   eax,eax
  402e6c:	jne    402fb2 <main@@Base+0x762>
  402e72:	mov    esi,0x15
  402e77:	mov    edx,0x4
  402e7c:	mov    ecx,0x4
  402e81:	mov    rdi,rbx
  402e84:	call   403460 <flatcc_verify_field@@Base>
  402e89:	test   eax,eax
  402e8b:	jne    402fb2 <main@@Base+0x762>
  402e91:	mov    esi,0x16
  402e96:	mov    edx,0x8
  402e9b:	mov    ecx,0x8
  402ea0:	mov    rdi,rbx
  402ea3:	call   403460 <flatcc_verify_field@@Base>
  402ea8:	test   eax,eax
  402eaa:	jne    402fb2 <main@@Base+0x762>
  402eb0:	mov    esi,0x17
  402eb5:	mov    edx,0x8
  402eba:	mov    ecx,0x8
  402ebf:	mov    rdi,rbx
  402ec2:	call   403460 <flatcc_verify_field@@Base>
  402ec7:	test   eax,eax
  402ec9:	jne    402fb2 <main@@Base+0x762>
  402ecf:	mov    esi,0x19
  402ed4:	mov    edx,0x4
  402ed9:	mov    ecx,0x4
  402ede:	mov    rdi,rbx
  402ee1:	call   403460 <flatcc_verify_field@@Base>
  402ee6:	test   eax,eax
  402ee8:	jne    402fb2 <main@@Base+0x762>
  402eee:	mov    esi,0x1a
  402ef3:	mov    edx,0x4
  402ef8:	mov    ecx,0x4
  402efd:	mov    rdi,rbx
  402f00:	call   403460 <flatcc_verify_field@@Base>
  402f05:	test   eax,eax
  402f07:	jne    402fb2 <main@@Base+0x762>
  402f0d:	mov    esi,0x1b
  402f12:	mov    edx,0x4
  402f17:	mov    ecx,0x4
  402f1c:	mov    rdi,rbx
  402f1f:	call   403460 <flatcc_verify_field@@Base>
  402f24:	test   eax,eax
  402f26:	jne    402fb2 <main@@Base+0x762>
  402f2c:	mov    esi,0x1e
  402f31:	xor    edx,edx
  402f33:	mov    ecx,0x1
  402f38:	mov    r8d,0x1
  402f3e:	mov    r9d,0xffffffff
  402f44:	mov    rdi,rbx
  402f47:	call   403570 <flatcc_verify_vector_field@@Base>
  402f4c:	test   eax,eax
  402f4e:	jne    402fb2 <main@@Base+0x762>
  402f50:	mov    esi,0x20
  402f55:	xor    edx,edx
  402f57:	mov    ecx,0x8
  402f5c:	mov    r8d,0x8
  402f62:	mov    r9d,0x1fffffff
  402f68:	mov    rdi,rbx
  402f6b:	call   403570 <flatcc_verify_vector_field@@Base>
  402f70:	test   eax,eax
  402f72:	jne    402fb2 <main@@Base+0x762>
  402f74:	mov    esi,0x21
  402f79:	xor    edx,edx
  402f7b:	mov    ecx,0x8
  402f80:	mov    r8d,0x8
  402f86:	mov    r9d,0x1fffffff
  402f8c:	mov    rdi,rbx
  402f8f:	call   403570 <flatcc_verify_vector_field@@Base>
  402f94:	test   eax,eax
  402f96:	jne    402fb2 <main@@Base+0x762>
  402f98:	lea    rcx,[rip+0xa1]        # 403040 <main@@Base+0x7f0>
  402f9f:	mov    esi,0x22
  402fa4:	xor    edx,edx
  402fa6:	mov    rdi,rbx
  402fa9:	call   4037a0 <flatcc_verify_table_field@@Base>
  402fae:	test   eax,eax
  402fb0:	je     402fb4 <main@@Base+0x764>
  402fb2:	pop    rbx
  402fb3:	ret    
  402fb4:	lea    rcx,[rip+0x95]        # 403050 <main@@Base+0x800>
  402fbb:	mov    esi,0x23
  402fc0:	xor    edx,edx
  402fc2:	mov    rdi,rbx
  402fc5:	pop    rbx
  402fc6:	jmp    4037a0 <flatcc_verify_table_field@@Base>
  402fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	mov    al,BYTE PTR [rdi+0x10]
  402fd3:	add    al,0xff
  402fd5:	cmp    al,0x3
  402fd7:	ja     402fed <main@@Base+0x79d>
  402fd9:	movsx  rax,al
  402fdd:	lea    rcx,[rip+0x4cdc]        # 407cc0 <_IO_stdin_used@@Base+0x2cc0>
  402fe4:	mov    rsi,QWORD PTR [rcx+rax*8]
  402fe8:	jmp    403c20 <flatcc_verify_union_table@@Base>
  402fed:	xor    eax,eax
  402fef:	ret    
  402ff0:	push   rbx
  402ff1:	mov    rbx,rdi
  402ff4:	xor    esi,esi
  402ff6:	xor    edx,edx
  402ff8:	call   4034c0 <flatcc_verify_string_field@@Base>
  402ffd:	test   eax,eax
  402fff:	jne    40301c <main@@Base+0x7cc>
  403001:	mov    esi,0x1
  403006:	mov    edx,0x8
  40300b:	mov    ecx,0x8
  403010:	mov    rdi,rbx
  403013:	call   403460 <flatcc_verify_field@@Base>
  403018:	test   eax,eax
  40301a:	je     40301e <main@@Base+0x7ce>
  40301c:	pop    rbx
  40301d:	ret    
  40301e:	mov    esi,0x2
  403023:	mov    edx,0x2
  403028:	mov    ecx,0x2
  40302d:	mov    rdi,rbx
  403030:	pop    rbx
  403031:	jmp    403460 <flatcc_verify_field@@Base>
  403036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403040:	xor    eax,eax
  403042:	ret    
  403043:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40304d:	nop    DWORD PTR [rax]
  403050:	push   rbx
  403051:	mov    rbx,rdi
  403054:	xor    esi,esi
  403056:	xor    edx,edx
  403058:	mov    ecx,0x1
  40305d:	mov    r8d,0x1
  403063:	mov    r9d,0xffffffff
  403069:	call   403570 <flatcc_verify_vector_field@@Base>
  40306e:	test   eax,eax
  403070:	jne    403096 <main@@Base+0x846>
  403072:	mov    esi,0x1
  403077:	xor    edx,edx
  403079:	mov    ecx,0x1
  40307e:	mov    r8d,0x1
  403084:	mov    r9d,0xffffffff
  40308a:	mov    rdi,rbx
  40308d:	call   403570 <flatcc_verify_vector_field@@Base>
  403092:	test   eax,eax
  403094:	je     403098 <main@@Base+0x848>
  403096:	pop    rbx
  403097:	ret    
  403098:	lea    r9,[rip+0xfffffffffffffaf1]        # 402b90 <main@@Base+0x340>
  40309f:	mov    esi,0x2
  4030a4:	xor    edx,edx
  4030a6:	xor    ecx,ecx
  4030a8:	mov    r8d,0x1
  4030ae:	mov    rdi,rbx
  4030b1:	pop    rbx
  4030b2:	jmp    4043d0 <flatcc_verify_table_as_nested_root@@Base>
  4030b7:	nop    WORD PTR [rax+rax*1+0x0]
  4030c0:	push   rbx
  4030c1:	mov    rbx,rdi
  4030c4:	xor    esi,esi
  4030c6:	mov    edx,0x1
  4030cb:	mov    ecx,0x1
  4030d0:	call   403460 <flatcc_verify_field@@Base>
  4030d5:	test   eax,eax
  4030d7:	jne    40310f <main@@Base+0x8bf>
  4030d9:	mov    esi,0x1
  4030de:	mov    edx,0x1
  4030e3:	mov    ecx,0x1
  4030e8:	mov    rdi,rbx
  4030eb:	call   403460 <flatcc_verify_field@@Base>
  4030f0:	test   eax,eax
  4030f2:	jne    40310f <main@@Base+0x8bf>
  4030f4:	mov    esi,0x2
  4030f9:	mov    edx,0x1
  4030fe:	mov    ecx,0x1
  403103:	mov    rdi,rbx
  403106:	call   403460 <flatcc_verify_field@@Base>
  40310b:	test   eax,eax
  40310d:	je     403111 <main@@Base+0x8c1>
  40310f:	pop    rbx
  403110:	ret    
  403111:	mov    esi,0x3
  403116:	mov    edx,0x1
  40311b:	mov    ecx,0x1
  403120:	mov    rdi,rbx
  403123:	pop    rbx
  403124:	jmp    403460 <flatcc_verify_field@@Base>
  403129:	nop    DWORD PTR [rax+0x0]
  403130:	xor    eax,eax
  403132:	ret    
  403133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313d:	nop    DWORD PTR [rax]
  403140:	push   rbx
  403141:	mov    rbx,rdi
  403144:	lea    rcx,[rip+0x45]        # 403190 <main@@Base+0x940>
  40314b:	xor    esi,esi
  40314d:	xor    edx,edx
  40314f:	call   4037a0 <flatcc_verify_table_field@@Base>
  403154:	test   eax,eax
  403156:	jne    403172 <main@@Base+0x922>
  403158:	lea    rcx,[rip+0x81]        # 4031e0 <main@@Base+0x990>
  40315f:	mov    esi,0x1
  403164:	xor    edx,edx
  403166:	mov    rdi,rbx
  403169:	call   4037a0 <flatcc_verify_table_field@@Base>
  40316e:	test   eax,eax
  403170:	je     403174 <main@@Base+0x924>
  403172:	pop    rbx
  403173:	ret    
  403174:	lea    rcx,[rip+0xfffffffffffffe55]        # 402fd0 <main@@Base+0x780>
  40317b:	mov    esi,0x3
  403180:	xor    edx,edx
  403182:	mov    rdi,rbx
  403185:	pop    rbx
  403186:	jmp    4047f0 <flatcc_verify_union_vector_field@@Base>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]
  403190:	push   rbx
  403191:	mov    rbx,rdi
  403194:	lea    rcx,[rip+0xd5]        # 403270 <main@@Base+0xa20>
  40319b:	xor    esi,esi
  40319d:	xor    edx,edx
  40319f:	call   4037a0 <flatcc_verify_table_field@@Base>
  4031a4:	test   eax,eax
  4031a6:	jne    4031c2 <main@@Base+0x972>
  4031a8:	lea    rcx,[rip+0x1a1]        # 403350 <main@@Base+0xb00>
  4031af:	mov    esi,0x1
  4031b4:	xor    edx,edx
  4031b6:	mov    rdi,rbx
  4031b9:	call   4037a0 <flatcc_verify_table_field@@Base>
  4031be:	test   eax,eax
  4031c0:	je     4031c4 <main@@Base+0x974>
  4031c2:	pop    rbx
  4031c3:	ret    
  4031c4:	lea    rcx,[rip+0x1c5]        # 403390 <main@@Base+0xb40>
  4031cb:	mov    esi,0x2
  4031d0:	xor    edx,edx
  4031d2:	mov    rdi,rbx
  4031d5:	pop    rbx
  4031d6:	jmp    4037a0 <flatcc_verify_table_field@@Base>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]
  4031e0:	push   rbx
  4031e1:	mov    rbx,rdi
  4031e4:	lea    rcx,[rip+0x1e5]        # 4033d0 <main@@Base+0xb80>
  4031eb:	mov    esi,0x1
  4031f0:	xor    edx,edx
  4031f2:	call   4046b0 <flatcc_verify_union_field@@Base>
  4031f7:	test   eax,eax
  4031f9:	jne    403249 <main@@Base+0x9f9>
  4031fb:	lea    rcx,[rip+0x1ce]        # 4033d0 <main@@Base+0xb80>
  403202:	mov    esi,0x3
  403207:	xor    edx,edx
  403209:	mov    rdi,rbx
  40320c:	call   4046b0 <flatcc_verify_union_field@@Base>
  403211:	test   eax,eax
  403213:	jne    403249 <main@@Base+0x9f9>
  403215:	lea    rcx,[rip+0x1b4]        # 4033d0 <main@@Base+0xb80>
  40321c:	mov    esi,0x5
  403221:	xor    edx,edx
  403223:	mov    rdi,rbx
  403226:	call   4046b0 <flatcc_verify_union_field@@Base>
  40322b:	test   eax,eax
  40322d:	jne    403249 <main@@Base+0x9f9>
  40322f:	lea    rcx,[rip+0x19a]        # 4033d0 <main@@Base+0xb80>
  403236:	mov    esi,0x7
  40323b:	xor    edx,edx
  40323d:	mov    rdi,rbx
  403240:	call   4046b0 <flatcc_verify_union_field@@Base>
  403245:	test   eax,eax
  403247:	je     40324b <main@@Base+0x9fb>
  403249:	pop    rbx
  40324a:	ret    
  40324b:	lea    rcx,[rip+0x17e]        # 4033d0 <main@@Base+0xb80>
  403252:	mov    esi,0x9
  403257:	xor    edx,edx
  403259:	mov    rdi,rbx
  40325c:	pop    rbx
  40325d:	jmp    4047f0 <flatcc_verify_union_vector_field@@Base>
  403262:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40326c:	nop    DWORD PTR [rax+0x0]
  403270:	push   rbx
  403271:	mov    rbx,rdi
  403274:	xor    esi,esi
  403276:	xor    edx,edx
  403278:	call   4034c0 <flatcc_verify_string_field@@Base>
  40327d:	test   eax,eax
  40327f:	jne    403336 <main@@Base+0xae6>
  403285:	mov    esi,0x1
  40328a:	mov    edx,0x4
  40328f:	mov    ecx,0x4
  403294:	mov    rdi,rbx
  403297:	call   403460 <flatcc_verify_field@@Base>
  40329c:	test   eax,eax
  40329e:	jne    403336 <main@@Base+0xae6>
  4032a4:	mov    esi,0x2
  4032a9:	xor    edx,edx
  4032ab:	mov    rdi,rbx
  4032ae:	call   4034c0 <flatcc_verify_string_field@@Base>
  4032b3:	test   eax,eax
  4032b5:	jne    403336 <main@@Base+0xae6>
  4032b7:	mov    esi,0x3
  4032bc:	mov    edx,0x8
  4032c1:	mov    ecx,0x8
  4032c6:	mov    rdi,rbx
  4032c9:	call   403460 <flatcc_verify_field@@Base>
  4032ce:	test   eax,eax
  4032d0:	jne    403336 <main@@Base+0xae6>
  4032d2:	mov    esi,0x4
  4032d7:	xor    edx,edx
  4032d9:	mov    rdi,rbx
  4032dc:	call   4034c0 <flatcc_verify_string_field@@Base>
  4032e1:	test   eax,eax
  4032e3:	jne    403336 <main@@Base+0xae6>
  4032e5:	mov    esi,0x5
  4032ea:	mov    edx,0x8
  4032ef:	mov    ecx,0x8
  4032f4:	mov    rdi,rbx
  4032f7:	call   403460 <flatcc_verify_field@@Base>
  4032fc:	test   eax,eax
  4032fe:	jne    403336 <main@@Base+0xae6>
  403300:	mov    esi,0x6
  403305:	mov    edx,0x4
  40330a:	mov    ecx,0x4
  40330f:	mov    rdi,rbx
  403312:	call   403460 <flatcc_verify_field@@Base>
  403317:	test   eax,eax
  403319:	jne    403336 <main@@Base+0xae6>
  40331b:	mov    esi,0x7
  403320:	mov    edx,0x8
  403325:	mov    ecx,0x8
  40332a:	mov    rdi,rbx
  40332d:	call   403460 <flatcc_verify_field@@Base>
  403332:	test   eax,eax
  403334:	je     403338 <main@@Base+0xae8>
  403336:	pop    rbx
  403337:	ret    
  403338:	mov    esi,0x8
  40333d:	mov    edx,0x4
  403342:	mov    ecx,0x4
  403347:	mov    rdi,rbx
  40334a:	pop    rbx
  40334b:	jmp    403460 <flatcc_verify_field@@Base>
  403350:	push   rbx
  403351:	mov    rbx,rdi
  403354:	xor    esi,esi
  403356:	mov    edx,0x8
  40335b:	mov    ecx,0x8
  403360:	call   403460 <flatcc_verify_field@@Base>
  403365:	test   eax,eax
  403367:	je     40336b <main@@Base+0xb1b>
  403369:	pop    rbx
  40336a:	ret    
  40336b:	mov    esi,0x1
  403370:	mov    edx,0x4
  403375:	mov    ecx,0x4
  40337a:	mov    rdi,rbx
  40337d:	pop    rbx
  40337e:	jmp    403460 <flatcc_verify_field@@Base>
  403383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40338d:	nop    DWORD PTR [rax]
  403390:	push   rbx
  403391:	mov    rbx,rdi
  403394:	xor    esi,esi
  403396:	mov    edx,0x8
  40339b:	mov    ecx,0x8
  4033a0:	call   403460 <flatcc_verify_field@@Base>
  4033a5:	test   eax,eax
  4033a7:	je     4033ab <main@@Base+0xb5b>
  4033a9:	pop    rbx
  4033aa:	ret    
  4033ab:	mov    esi,0x1
  4033b0:	mov    edx,0x4
  4033b5:	mov    ecx,0x4
  4033ba:	mov    rdi,rbx
  4033bd:	pop    rbx
  4033be:	jmp    403460 <flatcc_verify_field@@Base>
  4033c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033cd:	nop    DWORD PTR [rax]
  4033d0:	mov    al,BYTE PTR [rdi+0x10]
  4033d3:	add    al,0x1
  4033d5:	cmp    al,0xc
  4033d7:	ja     403400 <main@@Base+0xbb0>
  4033d9:	movzx  eax,al
  4033dc:	lea    rcx,[rip+0x1c35]        # 405018 <_IO_stdin_used@@Base+0x18>
  4033e3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4033e7:	add    rax,rcx
  4033ea:	jmp    rax
  4033ec:	jmp    403d50 <flatcc_verify_union_string@@Base>
  4033f1:	mov    esi,0x4
  4033f6:	mov    edx,0x4
  4033fb:	jmp    403d10 <flatcc_verify_union_struct@@Base>
  403400:	xor    eax,eax
  403402:	ret    
  403403:	lea    rsi,[rip+0x16]        # 403420 <main@@Base+0xbd0>
  40340a:	jmp    403c20 <flatcc_verify_union_table@@Base>
  40340f:	mov    esi,0x2
  403414:	mov    edx,0x2
  403419:	jmp    403d10 <flatcc_verify_union_struct@@Base>
  40341e:	xchg   ax,ax
  403420:	xor    esi,esi
  403422:	mov    edx,0x4
  403427:	mov    ecx,0x4
  40342c:	jmp    403460 <flatcc_verify_field@@Base>
  403431:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40343b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403440 <flatcc_verify_error_string@@Base>:
  403440:	cmp    edi,0x24
  403443:	ja     403454 <flatcc_verify_error_string@@Base+0x14>
  403445:	movsxd rax,edi
  403448:	lea    rcx,[rip+0x4891]        # 407ce0 <_IO_stdin_used@@Base+0x2ce0>
  40344f:	mov    rax,QWORD PTR [rcx+rax*8]
  403453:	ret    
  403454:	lea    rax,[rip+0x2842]        # 405c9d <_IO_stdin_used@@Base+0xc9d>
  40345b:	ret    
  40345c:	nop    DWORD PTR [rax+0x0]

0000000000403460 <flatcc_verify_field@@Base>:
  403460:	lea    esi,[rsi+rsi*1]
  403463:	add    esi,0x4
  403466:	xor    eax,eax
  403468:	cmp    si,WORD PTR [rdi+0x1e]
  40346c:	jae    4034b2 <flatcc_verify_field@@Base+0x52>
  40346e:	mov    r8,QWORD PTR [rdi+0x10]
  403472:	movzx  esi,si
  403475:	movzx  esi,WORD PTR [r8+rsi*1]
  40347a:	test   esi,esi
  40347c:	je     4034b2 <flatcc_verify_field@@Base+0x52>
  40347e:	add    edx,esi
  403480:	movzx  r8d,WORD PTR [rdi+0x1c]
  403485:	mov    eax,0xd
  40348a:	cmp    edx,r8d
  40348d:	ja     4034b2 <flatcc_verify_field@@Base+0x52>
  40348f:	add    esi,DWORD PTR [rdi]
  403491:	mov    edx,DWORD PTR [rdi+0x18]
  403494:	add    edx,esi
  403496:	movzx  ecx,cx
  403499:	add    ecx,0xffffffff
  40349c:	mov    eax,0x0
  4034a1:	test   edx,ecx
  4034a3:	je     4034b2 <flatcc_verify_field@@Base+0x52>
  4034a5:	add    esi,DWORD PTR [rdi+0x18]
  4034a8:	and    esi,ecx
  4034aa:	mov    eax,0xc
  4034af:	cmove  eax,esi
  4034b2:	ret    
  4034b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034bd:	nop    DWORD PTR [rax]

00000000004034c0 <flatcc_verify_string_field@@Base>:
  4034c0:	lea    eax,[rsi+rsi*1]
  4034c3:	add    eax,0x4
  4034c6:	cmp    ax,WORD PTR [rdi+0x1e]
  4034ca:	jae    4034fa <flatcc_verify_string_field@@Base+0x3a>
  4034cc:	mov    rcx,QWORD PTR [rdi+0x10]
  4034d0:	movzx  eax,ax
  4034d3:	movzx  esi,WORD PTR [rcx+rax*1]
  4034d7:	test   esi,esi
  4034d9:	je     4034fa <flatcc_verify_string_field@@Base+0x3a>
  4034db:	lea    ecx,[rsi+0x4]
  4034de:	movzx  edx,WORD PTR [rdi+0x1c]
  4034e2:	mov    eax,0xd
  4034e7:	cmp    ecx,edx
  4034e9:	ja     4034f9 <flatcc_verify_string_field@@Base+0x39>
  4034eb:	add    esi,DWORD PTR [rdi+0x18]
  4034ee:	mov    eax,0xc
  4034f3:	test   sil,0x3
  4034f7:	je     403505 <flatcc_verify_string_field@@Base+0x45>
  4034f9:	ret    
  4034fa:	xor    eax,eax
  4034fc:	test   edx,edx
  4034fe:	setne  al
  403501:	shl    eax,0x2
  403504:	ret    
  403505:	test   esi,esi
  403507:	je     40355f <flatcc_verify_string_field@@Base+0x9f>
  403509:	mov    rcx,QWORD PTR [rdi]
  40350c:	mov    eax,esi
  40350e:	mov    edx,DWORD PTR [rcx+rax*1]
  403511:	add    edx,esi
  403513:	mov    eax,0x11
  403518:	cmp    edx,esi
  40351a:	jbe    4034f9 <flatcc_verify_string_field@@Base+0x39>
  40351c:	mov    r8d,DWORD PTR [rdi+0x8]
  403520:	mov    edi,edx
  403522:	lea    rsi,[rdi+0x4]
  403526:	cmp    rsi,r8
  403529:	ja     4034f9 <flatcc_verify_string_field@@Base+0x39>
  40352b:	mov    esi,edi
  40352d:	and    esi,0x3
  403530:	test   rsi,rsi
  403533:	jne    4034f9 <flatcc_verify_string_field@@Base+0x39>
  403535:	mov    edi,DWORD PTR [rcx+rdi*1]
  403538:	add    edx,0x4
  40353b:	sub    r8d,edx
  40353e:	lea    esi,[rdi+0x1]
  403541:	mov    eax,0x8
  403546:	cmp    r8d,esi
  403549:	jb     4034f9 <flatcc_verify_string_field@@Base+0x39>
  40354b:	mov    eax,edx
  40354d:	add    rcx,rax
  403550:	xor    edx,edx
  403552:	cmp    BYTE PTR [rdi+rcx*1],0x0
  403556:	mov    eax,0x7
  40355b:	cmove  eax,edx
  40355e:	ret    
  40355f:	xor    eax,eax
  403561:	ret    
  403562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40356c:	nop    DWORD PTR [rax+0x0]

0000000000403570 <flatcc_verify_vector_field@@Base>:
  403570:	lea    eax,[rsi+rsi*1]
  403573:	add    eax,0x4
  403576:	cmp    ax,WORD PTR [rdi+0x1e]
  40357a:	jae    4035ac <flatcc_verify_vector_field@@Base+0x3c>
  40357c:	mov    rsi,QWORD PTR [rdi+0x10]
  403580:	movzx  eax,ax
  403583:	movzx  esi,WORD PTR [rsi+rax*1]
  403587:	test   esi,esi
  403589:	je     4035ac <flatcc_verify_vector_field@@Base+0x3c>
  40358b:	lea    r10d,[rsi+0x4]
  40358f:	movzx  edx,WORD PTR [rdi+0x1c]
  403593:	mov    eax,0xd
  403598:	cmp    r10d,edx
  40359b:	ja     4035ab <flatcc_verify_vector_field@@Base+0x3b>
  40359d:	add    esi,DWORD PTR [rdi+0x18]
  4035a0:	mov    eax,0xc
  4035a5:	test   sil,0x3
  4035a9:	je     4035b7 <flatcc_verify_vector_field@@Base+0x47>
  4035ab:	ret    
  4035ac:	xor    eax,eax
  4035ae:	test   edx,edx
  4035b0:	setne  al
  4035b3:	shl    eax,0x2
  4035b6:	ret    
  4035b7:	test   esi,esi
  4035b9:	je     403631 <flatcc_verify_vector_field@@Base+0xc1>
  4035bb:	mov    r10,QWORD PTR [rdi]
  4035be:	mov    eax,esi
  4035c0:	mov    r11d,DWORD PTR [r10+rax*1]
  4035c4:	add    r11d,esi
  4035c7:	movzx  eax,r8w
  4035cb:	cmp    eax,0x4
  4035ce:	mov    edx,0x4
  4035d3:	cmova  edx,eax
  4035d6:	mov    eax,0x10
  4035db:	cmp    r11d,esi
  4035de:	jbe    4035ab <flatcc_verify_vector_field@@Base+0x3b>
  4035e0:	mov    r8d,DWORD PTR [rdi+0x8]
  4035e4:	mov    edi,r11d
  4035e7:	lea    rsi,[rdi+0x4]
  4035eb:	cmp    rsi,r8
  4035ee:	ja     4035ab <flatcc_verify_vector_field@@Base+0x3b>
  4035f0:	push   rbx
  4035f1:	movzx  edx,dx
  4035f4:	movabs rbx,0x1ffffffff
  4035fe:	add    rbx,rdx
  403601:	or     rbx,0x3
  403605:	test   rsi,rbx
  403608:	pop    rbx
  403609:	jne    4035ab <flatcc_verify_vector_field@@Base+0x3b>
  40360b:	mov    edx,DWORD PTR [r10+rdi*1]
  40360f:	mov    eax,0x19
  403614:	cmp    edx,r9d
  403617:	ja     4035ab <flatcc_verify_vector_field@@Base+0x3b>
  403619:	add    r8d,0xfffffffc
  40361d:	sub    r8d,r11d
  403620:	imul   edx,ecx
  403623:	xor    ecx,ecx
  403625:	cmp    r8d,edx
  403628:	mov    eax,0x1a
  40362d:	cmovae eax,ecx
  403630:	ret    
  403631:	xor    eax,eax
  403633:	ret    
  403634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40363e:	xchg   ax,ax

0000000000403640 <flatcc_verify_string_vector_field@@Base>:
  403640:	push   r14
  403642:	push   rbx
  403643:	lea    eax,[rsi+rsi*1]
  403646:	add    eax,0x4
  403649:	cmp    ax,WORD PTR [rdi+0x1e]
  40364d:	jae    40377d <flatcc_verify_string_vector_field@@Base+0x13d>
  403653:	mov    rcx,QWORD PTR [rdi+0x10]
  403657:	movzx  eax,ax
  40365a:	movzx  esi,WORD PTR [rcx+rax*1]
  40365e:	test   esi,esi
  403660:	je     40377d <flatcc_verify_string_vector_field@@Base+0x13d>
  403666:	lea    ecx,[rsi+0x4]
  403669:	movzx  edx,WORD PTR [rdi+0x1c]
  40366d:	mov    eax,0xd
  403672:	cmp    ecx,edx
  403674:	ja     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  40367a:	mov    edx,DWORD PTR [rdi+0x18]
  40367d:	lea    ebx,[rdx+rsi*1]
  403680:	mov    eax,0xc
  403685:	test   bl,0x3
  403688:	jne    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  40368e:	xor    eax,eax
  403690:	test   ebx,ebx
  403692:	je     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403698:	mov    r10,QWORD PTR [rdi]
  40369b:	mov    eax,ebx
  40369d:	mov    r14d,DWORD PTR [r10+rax*1]
  4036a1:	lea    ecx,[r14+rbx*1]
  4036a5:	mov    eax,0x10
  4036aa:	cmp    ecx,ebx
  4036ac:	jbe    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  4036b2:	test   cl,0x3
  4036b5:	jne    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  4036bb:	mov    r9d,DWORD PTR [rdi+0x8]
  4036bf:	mov    edi,ecx
  4036c1:	lea    rbx,[rdi+0x4]
  4036c5:	cmp    rbx,r9
  4036c8:	ja     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  4036ce:	mov    r8d,DWORD PTR [r10+rdi*1]
  4036d2:	mov    eax,0x19
  4036d7:	cmp    r8d,0x3fffffff
  4036de:	ja     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  4036e4:	lea    edi,[r9-0x4]
  4036e8:	sub    edi,ecx
  4036ea:	lea    ecx,[r8*4+0x0]
  4036f2:	mov    eax,0x1a
  4036f7:	cmp    edi,ecx
  4036f9:	jb     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  4036ff:	mov    eax,0x0
  403704:	test   r8d,r8d
  403707:	je     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403709:	lea    eax,[r14+rdx*1]
  40370d:	lea    edi,[rsi+rax*1]
  403710:	add    edi,0x4
  403713:	lea    r11d,[r9-0x8]
  403717:	sub    r11d,esi
  40371a:	sub    r11d,r14d
  40371d:	sub    r11d,edx
  403720:	xor    edx,edx
  403722:	mov    eax,edi
  403724:	mov    ecx,DWORD PTR [r10+rax*1]
  403728:	lea    esi,[rdi+rcx*1]
  40372b:	mov    eax,0x11
  403730:	cmp    esi,edi
  403732:	jbe    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403734:	mov    esi,esi
  403736:	lea    rbx,[rsi+0x4]
  40373a:	cmp    rbx,r9
  40373d:	ja     403787 <flatcc_verify_string_vector_field@@Base+0x147>
  40373f:	mov    ebx,esi
  403741:	and    ebx,0x3
  403744:	test   rbx,rbx
  403747:	jne    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403749:	mov    eax,DWORD PTR [r10+rsi*1]
  40374d:	mov    esi,r11d
  403750:	sub    esi,ecx
  403752:	lea    ebx,[rax+0x1]
  403755:	cmp    esi,ebx
  403757:	jb     40378b <flatcc_verify_string_vector_field@@Base+0x14b>
  403759:	lea    ecx,[rdi+rcx*1]
  40375c:	add    ecx,0x4
  40375f:	mov    ecx,ecx
  403761:	add    rcx,r10
  403764:	cmp    BYTE PTR [rax+rcx*1],0x0
  403768:	jne    403792 <flatcc_verify_string_vector_field@@Base+0x152>
  40376a:	add    edx,0x1
  40376d:	add    edi,0x4
  403770:	add    r11d,0xfffffffc
  403774:	xor    eax,eax
  403776:	cmp    edx,r8d
  403779:	jb     403722 <flatcc_verify_string_vector_field@@Base+0xe2>
  40377b:	jmp    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  40377d:	xor    eax,eax
  40377f:	test   edx,edx
  403781:	setne  al
  403784:	shl    eax,0x2
  403787:	pop    rbx
  403788:	pop    r14
  40378a:	ret    
  40378b:	mov    eax,0x8
  403790:	jmp    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403792:	mov    eax,0x7
  403797:	jmp    403787 <flatcc_verify_string_vector_field@@Base+0x147>
  403799:	nop    DWORD PTR [rax+0x0]

00000000004037a0 <flatcc_verify_table_field@@Base>:
  4037a0:	lea    eax,[rsi+rsi*1]
  4037a3:	add    eax,0x4
  4037a6:	cmp    ax,WORD PTR [rdi+0x1e]
  4037aa:	jae    4037dc <flatcc_verify_table_field@@Base+0x3c>
  4037ac:	mov    rsi,QWORD PTR [rdi+0x10]
  4037b0:	movzx  eax,ax
  4037b3:	movzx  esi,WORD PTR [rsi+rax*1]
  4037b7:	test   esi,esi
  4037b9:	je     4037dc <flatcc_verify_table_field@@Base+0x3c>
  4037bb:	lea    r8d,[rsi+0x4]
  4037bf:	movzx  edx,WORD PTR [rdi+0x1c]
  4037c3:	mov    eax,0xd
  4037c8:	cmp    r8d,edx
  4037cb:	ja     4037db <flatcc_verify_table_field@@Base+0x3b>
  4037cd:	add    esi,DWORD PTR [rdi+0x18]
  4037d0:	mov    eax,0xc
  4037d5:	test   sil,0x3
  4037d9:	je     4037e7 <flatcc_verify_table_field@@Base+0x47>
  4037db:	ret    
  4037dc:	xor    eax,eax
  4037de:	test   edx,edx
  4037e0:	setne  al
  4037e3:	shl    eax,0x2
  4037e6:	ret    
  4037e7:	test   esi,esi
  4037e9:	je     4038cf <flatcc_verify_table_field@@Base+0x12f>
  4037ef:	sub    rsp,0x28
  4037f3:	mov    r10,QWORD PTR [rdi]
  4037f6:	mov    r8d,DWORD PTR [rdi+0x8]
  4037fa:	mov    eax,esi
  4037fc:	mov    edx,DWORD PTR [r10+rax*1]
  403800:	mov    eax,DWORD PTR [rdi+0xc]
  403803:	add    eax,0xffffffff
  403806:	mov    DWORD PTR [rsp+0x14],eax
  40380a:	je     4038d2 <flatcc_verify_table_field@@Base+0x132>
  403810:	add    edx,esi
  403812:	mov    eax,0xf
  403817:	cmp    edx,esi
  403819:	jbe    4038d7 <flatcc_verify_table_field@@Base+0x137>
  40381f:	mov    esi,edx
  403821:	lea    rdi,[rsi+0x4]
  403825:	cmp    rdi,r8
  403828:	ja     4038d7 <flatcc_verify_table_field@@Base+0x137>
  40382e:	mov    edi,esi
  403830:	and    edi,0x3
  403833:	test   rdi,rdi
  403836:	jne    4038d7 <flatcc_verify_table_field@@Base+0x137>
  40383c:	mov    DWORD PTR [rsp+0x20],edx
  403840:	mov    edi,edx
  403842:	sub    edi,DWORD PTR [r10+rsi*1]
  403846:	mov    eax,0x1d
  40384b:	test   edi,0x80000001
  403851:	jne    4038d7 <flatcc_verify_table_field@@Base+0x137>
  403857:	mov    r9d,edi
  40385a:	lea    rsi,[r9+0x2]
  40385e:	mov    eax,0x1b
  403863:	cmp    rsi,r8
  403866:	ja     4038d7 <flatcc_verify_table_field@@Base+0x137>
  403868:	movzx  r11d,WORD PTR [r10+r9*1]
  40386d:	mov    WORD PTR [rsp+0x26],r11w
  403873:	mov    eax,0x1e
  403878:	test   r11b,0x1
  40387c:	jne    4038d7 <flatcc_verify_table_field@@Base+0x137>
  40387e:	mov    esi,r11d
  403881:	add    esi,edi
  403883:	cmp    esi,r8d
  403886:	ja     4038d7 <flatcc_verify_table_field@@Base+0x137>
  403888:	movzx  esi,r11w
  40388c:	mov    eax,0x1c
  403891:	cmp    esi,0x4
  403894:	jb     4038d7 <flatcc_verify_table_field@@Base+0x137>
  403896:	add    edi,0x2
  403899:	movzx  esi,WORD PTR [r10+rdi*1]
  40389e:	mov    WORD PTR [rsp+0x24],si
  4038a3:	mov    edi,r8d
  4038a6:	sub    edi,edx
  4038a8:	mov    eax,0x14
  4038ad:	cmp    edi,esi
  4038af:	jb     4038d7 <flatcc_verify_table_field@@Base+0x137>
  4038b1:	add    r9,r10
  4038b4:	mov    QWORD PTR [rsp+0x18],r9
  4038b9:	mov    QWORD PTR [rsp+0x8],r10
  4038be:	mov    DWORD PTR [rsp+0x10],r8d
  4038c3:	lea    rdi,[rsp+0x8]
  4038c8:	call   rcx
  4038ca:	add    rsp,0x28
  4038ce:	ret    
  4038cf:	xor    eax,eax
  4038d1:	ret    
  4038d2:	mov    eax,0x3
  4038d7:	add    rsp,0x28
  4038db:	ret    
  4038dc:	nop    DWORD PTR [rax+0x0]

00000000004038e0 <flatcc_verify_table_vector_field@@Base>:
  4038e0:	push   rbp
  4038e1:	push   r15
  4038e3:	push   r14
  4038e5:	push   r13
  4038e7:	push   r12
  4038e9:	push   rbx
  4038ea:	sub    rsp,0x38
  4038ee:	lea    eax,[rsi+rsi*1]
  4038f1:	add    eax,0x4
  4038f4:	cmp    ax,WORD PTR [rdi+0x1e]
  4038f8:	jae    403b01 <flatcc_verify_table_vector_field@@Base+0x221>
  4038fe:	mov    rbx,rcx
  403901:	mov    rcx,QWORD PTR [rdi+0x10]
  403905:	movzx  eax,ax
  403908:	movzx  ecx,WORD PTR [rcx+rax*1]
  40390c:	test   ecx,ecx
  40390e:	je     403b01 <flatcc_verify_table_vector_field@@Base+0x221>
  403914:	lea    edx,[rcx+0x4]
  403917:	movzx  esi,WORD PTR [rdi+0x1c]
  40391b:	mov    eax,0xd
  403920:	cmp    edx,esi
  403922:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403928:	mov    edx,DWORD PTR [rdi+0x18]
  40392b:	lea    esi,[rdx+rcx*1]
  40392e:	mov    eax,0xc
  403933:	test   sil,0x3
  403937:	jne    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  40393d:	xor    eax,eax
  40393f:	test   esi,esi
  403941:	je     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403947:	mov    r12d,DWORD PTR [rdi+0xc]
  40394b:	test   r12d,r12d
  40394e:	jle    403b1a <flatcc_verify_table_vector_field@@Base+0x23a>
  403954:	mov    r15,QWORD PTR [rdi]
  403957:	mov    eax,esi
  403959:	mov    r8d,DWORD PTR [r15+rax*1]
  40395d:	lea    ebp,[r8+rsi*1]
  403961:	mov    eax,0x10
  403966:	cmp    ebp,esi
  403968:	jbe    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  40396e:	test   bpl,0x3
  403972:	jne    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403978:	mov    r9d,DWORD PTR [rdi+0x8]
  40397c:	mov    esi,ebp
  40397e:	lea    rdi,[rsi+0x4]
  403982:	cmp    rdi,r9
  403985:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  40398b:	mov    r10d,DWORD PTR [r15+rsi*1]
  40398f:	mov    eax,0x19
  403994:	cmp    r10d,0x3fffffff
  40399b:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  4039a1:	lea    r11d,[r9-0x4]
  4039a5:	mov    esi,r11d
  4039a8:	sub    esi,ebp
  4039aa:	lea    edi,[r10*4+0x0]
  4039b2:	mov    eax,0x1a
  4039b7:	cmp    esi,edi
  4039b9:	jb     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  4039bf:	mov    eax,0x0
  4039c4:	test   r10d,r10d
  4039c7:	je     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  4039cd:	add    r12d,0xfffffffe
  4039d1:	lea    eax,[r8+rdx*1]
  4039d5:	lea    r13d,[rcx+rax*1]
  4039d9:	add    r13d,0x4
  4039dd:	sub    r11d,ecx
  4039e0:	sub    r11d,r8d
  4039e3:	sub    r11d,edx
  4039e6:	xor    ecx,ecx
  4039e8:	mov    QWORD PTR [rsp+0x30],r9
  4039ed:	mov    QWORD PTR [rsp+0x28],r15
  4039f2:	mov    r13d,r13d
  4039f5:	mov    r14d,DWORD PTR [r15+r13*1]
  4039f9:	mov    DWORD PTR [rsp+0x14],r12d
  4039fe:	test   r12d,r12d
  403a01:	je     403be9 <flatcc_verify_table_vector_field@@Base+0x309>
  403a07:	lea    eax,[r14+r13*1]
  403a0b:	cmp    eax,r13d
  403a0e:	jbe    403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a14:	mov    edx,eax
  403a16:	lea    rsi,[rdx+0x4]
  403a1a:	cmp    rsi,r9
  403a1d:	ja     403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a23:	mov    esi,edx
  403a25:	and    esi,0x3
  403a28:	test   rsi,rsi
  403a2b:	jne    403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a31:	mov    DWORD PTR [rsp+0x20],eax
  403a35:	mov    esi,DWORD PTR [r15+rdx*1]
  403a39:	mov    edx,r14d
  403a3c:	sub    edx,esi
  403a3e:	lea    eax,[rdx+r13*1]
  403a42:	test   eax,0x80000001
  403a47:	jne    403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a4d:	mov    eax,eax
  403a4f:	lea    rdi,[rax+0x2]
  403a53:	cmp    rdi,r9
  403a56:	ja     403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a5c:	movzx  ebp,WORD PTR [r15+rax*1]
  403a61:	mov    WORD PTR [rsp+0x26],bp
  403a66:	cmp    ebp,0x4
  403a69:	jb     403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a6f:	mov    edi,ebp
  403a71:	and    edi,0x1
  403a74:	test   di,di
  403a77:	jne    403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a7d:	add    ebp,r14d
  403a80:	sub    ebp,esi
  403a82:	add    ebp,r13d
  403a85:	cmp    ebp,r9d
  403a88:	ja     403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403a8e:	lea    edx,[rdx+r13*1]
  403a92:	add    edx,0x2
  403a95:	movzx  edx,WORD PTR [r15+rdx*1]
  403a9a:	mov    WORD PTR [rsp+0x24],dx
  403a9f:	mov    esi,r11d
  403aa2:	sub    esi,r14d
  403aa5:	cmp    esi,edx
  403aa7:	jb     403b21 <flatcc_verify_table_vector_field@@Base+0x241>
  403aa9:	mov    rdx,r15
  403aac:	mov    r15d,ecx
  403aaf:	mov    ebp,r11d
  403ab2:	mov    r14,r10
  403ab5:	add    rax,rdx
  403ab8:	mov    QWORD PTR [rsp+0x18],rax
  403abd:	mov    QWORD PTR [rsp+0x8],rdx
  403ac2:	mov    DWORD PTR [rsp+0x10],r9d
  403ac7:	lea    rdi,[rsp+0x8]
  403acc:	call   rbx
  403ace:	test   eax,eax
  403ad0:	jne    403bfb <flatcc_verify_table_vector_field@@Base+0x31b>
  403ad6:	mov    ecx,r15d
  403ad9:	add    ecx,0x1
  403adc:	add    r13d,0x4
  403ae0:	mov    r11d,ebp
  403ae3:	add    r11d,0xfffffffc
  403ae7:	xor    eax,eax
  403ae9:	mov    r10,r14
  403aec:	cmp    ecx,r10d
  403aef:	mov    r9,QWORD PTR [rsp+0x30]
  403af4:	mov    r15,QWORD PTR [rsp+0x28]
  403af9:	jb     4039f2 <flatcc_verify_table_vector_field@@Base+0x112>
  403aff:	jmp    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b01:	xor    eax,eax
  403b03:	test   edx,edx
  403b05:	setne  al
  403b08:	shl    eax,0x2
  403b0b:	add    rsp,0x38
  403b0f:	pop    rbx
  403b10:	pop    r12
  403b12:	pop    r13
  403b14:	pop    r14
  403b16:	pop    r15
  403b18:	pop    rbp
  403b19:	ret    
  403b1a:	mov    eax,0x3
  403b1f:	jmp    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b21:	mov    DWORD PTR [rsp+0x14],r12d
  403b26:	add    r14d,r13d
  403b29:	mov    eax,0xf
  403b2e:	cmp    r14d,r13d
  403b31:	jbe    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b33:	mov    edx,r14d
  403b36:	lea    rsi,[rdx+0x4]
  403b3a:	cmp    rsi,r9
  403b3d:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b3f:	mov    esi,edx
  403b41:	and    esi,0x3
  403b44:	test   rsi,rsi
  403b47:	jne    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b49:	mov    DWORD PTR [rsp+0x20],r14d
  403b4e:	mov    esi,r14d
  403b51:	sub    esi,DWORD PTR [r15+rdx*1]
  403b55:	mov    eax,0x1d
  403b5a:	test   esi,0x80000001
  403b60:	jne    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b62:	mov    edx,esi
  403b64:	lea    rdi,[rdx+0x2]
  403b68:	mov    eax,0x1b
  403b6d:	cmp    rdi,r9
  403b70:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b72:	movzx  ebp,WORD PTR [r15+rdx*1]
  403b77:	mov    WORD PTR [rsp+0x26],bp
  403b7c:	mov    eax,0x1e
  403b81:	test   bpl,0x1
  403b85:	jne    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b87:	mov    edi,ebp
  403b89:	add    edi,esi
  403b8b:	mov    r8,r9
  403b8e:	cmp    edi,r8d
  403b91:	ja     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403b97:	movzx  edi,bp
  403b9a:	mov    eax,0x1c
  403b9f:	cmp    edi,0x4
  403ba2:	jb     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403ba8:	mov    rcx,r15
  403bab:	add    esi,0x2
  403bae:	movzx  esi,WORD PTR [r15+rsi*1]
  403bb3:	mov    WORD PTR [rsp+0x24],si
  403bb8:	mov    edi,r8d
  403bbb:	sub    edi,r14d
  403bbe:	mov    eax,0x14
  403bc3:	cmp    edi,esi
  403bc5:	jb     403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403bcb:	add    rdx,rcx
  403bce:	mov    QWORD PTR [rsp+0x18],rdx
  403bd3:	mov    QWORD PTR [rsp+0x8],rcx
  403bd8:	mov    DWORD PTR [rsp+0x10],r8d
  403bdd:	lea    rdi,[rsp+0x8]
  403be2:	call   rbx
  403be4:	jmp    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403be9:	mov    DWORD PTR [rsp+0x14],0x0
  403bf1:	mov    eax,0x3
  403bf6:	jmp    403b0b <flatcc_verify_table_vector_field@@Base+0x22b>
  403bfb:	mov    r15,QWORD PTR [rsp+0x28]
  403c00:	mov    r14d,DWORD PTR [r15+r13*1]
  403c04:	add    r14d,r13d
  403c07:	mov    DWORD PTR [rsp+0x14],r12d
  403c0c:	mov    r9,QWORD PTR [rsp+0x30]
  403c11:	jmp    403b29 <flatcc_verify_table_vector_field@@Base+0x249>
  403c16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403c20 <flatcc_verify_union_table@@Base>:
  403c20:	sub    rsp,0x28
  403c24:	mov    r8,QWORD PTR [rdi]
  403c27:	mov    r11d,DWORD PTR [rdi+0x8]
  403c2b:	mov    edx,DWORD PTR [rdi+0x14]
  403c2e:	mov    ecx,DWORD PTR [rdi+0x18]
  403c31:	mov    eax,DWORD PTR [rdi+0xc]
  403c34:	add    eax,0xffffffff
  403c37:	mov    DWORD PTR [rsp+0x14],eax
  403c3b:	je     403cfd <flatcc_verify_union_table@@Base+0xdd>
  403c41:	add    ecx,edx
  403c43:	mov    eax,0xf
  403c48:	cmp    ecx,edx
  403c4a:	jbe    403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403c50:	mov    edi,ecx
  403c52:	lea    rdx,[rdi+0x4]
  403c56:	cmp    rdx,r11
  403c59:	ja     403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403c5f:	mov    edx,edi
  403c61:	and    edx,0x3
  403c64:	test   rdx,rdx
  403c67:	jne    403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403c6d:	mov    DWORD PTR [rsp+0x20],ecx
  403c71:	mov    r10d,ecx
  403c74:	sub    r10d,DWORD PTR [r8+rdi*1]
  403c78:	mov    eax,0x1d
  403c7d:	test   r10d,0x80000001
  403c84:	jne    403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403c86:	mov    r9d,r10d
  403c89:	lea    rdx,[r9+0x2]
  403c8d:	mov    eax,0x1b
  403c92:	cmp    rdx,r11
  403c95:	ja     403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403c97:	movzx  edi,WORD PTR [r8+r9*1]
  403c9c:	mov    WORD PTR [rsp+0x26],di
  403ca1:	mov    eax,0x1e
  403ca6:	test   dil,0x1
  403caa:	jne    403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403cac:	mov    edx,edi
  403cae:	add    edx,r10d
  403cb1:	cmp    edx,r11d
  403cb4:	ja     403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403cb6:	movzx  edx,di
  403cb9:	mov    eax,0x1c
  403cbe:	cmp    edx,0x4
  403cc1:	jb     403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403cc3:	add    r10d,0x2
  403cc7:	movzx  edx,WORD PTR [r8+r10*1]
  403ccc:	mov    WORD PTR [rsp+0x24],dx
  403cd1:	mov    edi,r11d
  403cd4:	sub    edi,ecx
  403cd6:	mov    eax,0x14
  403cdb:	cmp    edi,edx
  403cdd:	jb     403cf8 <flatcc_verify_union_table@@Base+0xd8>
  403cdf:	add    r9,r8
  403ce2:	mov    QWORD PTR [rsp+0x18],r9
  403ce7:	mov    QWORD PTR [rsp+0x8],r8
  403cec:	mov    DWORD PTR [rsp+0x10],r11d
  403cf1:	lea    rdi,[rsp+0x8]
  403cf6:	call   rsi
  403cf8:	add    rsp,0x28
  403cfc:	ret    
  403cfd:	mov    eax,0x3
  403d02:	add    rsp,0x28
  403d06:	ret    
  403d07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403d10 <flatcc_verify_union_struct@@Base>:
  403d10:	mov    ecx,DWORD PTR [rdi+0x18]
  403d13:	mov    eax,0x12
  403d18:	test   ecx,ecx
  403d1a:	je     403d4b <flatcc_verify_union_struct@@Base+0x3b>
  403d1c:	mov    r8d,DWORD PTR [rdi+0x8]
  403d20:	add    ecx,DWORD PTR [rdi+0x14]
  403d23:	cmp    ecx,r8d
  403d26:	ja     403d4b <flatcc_verify_union_struct@@Base+0x3b>
  403d28:	mov    eax,0xa
  403d2d:	add    esi,ecx
  403d2f:	jb     403d4b <flatcc_verify_union_struct@@Base+0x3b>
  403d31:	mov    eax,0x9
  403d36:	cmp    esi,r8d
  403d39:	ja     403d4b <flatcc_verify_union_struct@@Base+0x3b>
  403d3b:	movzx  eax,dx
  403d3e:	add    eax,0xffffffff
  403d41:	and    ecx,eax
  403d43:	mov    eax,0xb
  403d48:	cmove  eax,ecx
  403d4b:	ret    
  403d4c:	nop    DWORD PTR [rax+0x0]

0000000000403d50 <flatcc_verify_union_string@@Base>:
  403d50:	mov    edx,DWORD PTR [rdi+0x14]
  403d53:	mov    ecx,DWORD PTR [rdi+0x18]
  403d56:	add    ecx,edx
  403d58:	mov    eax,0x11
  403d5d:	cmp    ecx,edx
  403d5f:	jbe    403da6 <flatcc_verify_union_string@@Base+0x56>
  403d61:	mov    r8d,DWORD PTR [rdi+0x8]
  403d65:	mov    esi,ecx
  403d67:	lea    rdx,[rsi+0x4]
  403d6b:	cmp    rdx,r8
  403d6e:	ja     403da6 <flatcc_verify_union_string@@Base+0x56>
  403d70:	mov    edx,esi
  403d72:	and    edx,0x3
  403d75:	test   rdx,rdx
  403d78:	jne    403da6 <flatcc_verify_union_string@@Base+0x56>
  403d7a:	mov    rdi,QWORD PTR [rdi]
  403d7d:	mov    esi,DWORD PTR [rdi+rsi*1]
  403d80:	add    ecx,0x4
  403d83:	sub    r8d,ecx
  403d86:	lea    edx,[rsi+0x1]
  403d89:	mov    eax,0x8
  403d8e:	cmp    r8d,edx
  403d91:	jb     403da6 <flatcc_verify_union_string@@Base+0x56>
  403d93:	mov    eax,ecx
  403d95:	add    rdi,rax
  403d98:	xor    ecx,ecx
  403d9a:	cmp    BYTE PTR [rsi+rdi*1],0x0
  403d9e:	mov    eax,0x7
  403da3:	cmove  eax,ecx
  403da6:	ret    
  403da7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403db0 <flatcc_verify_buffer_header@@Base>:
  403db0:	push   rbx
  403db1:	sub    rsp,0x10
  403db5:	mov    rbx,rdi
  403db8:	mov    eax,0x5
  403dbd:	test   bl,0x3
  403dc0:	jne    403e18 <flatcc_verify_buffer_header@@Base+0x68>
  403dc2:	mov    rcx,rdx
  403dc5:	mov    rdx,rsi
  403dc8:	shr    rdx,0x3
  403dcc:	mov    eax,0x6
  403dd1:	cmp    rdx,0x1ffffffe
  403dd8:	ja     403e18 <flatcc_verify_buffer_header@@Base+0x68>
  403dda:	mov    eax,0x1
  403ddf:	cmp    rsi,0x8
  403de3:	jb     403e18 <flatcc_verify_buffer_header@@Base+0x68>
  403de5:	test   rcx,rcx
  403de8:	je     403e16 <flatcc_verify_buffer_header@@Base+0x66>
  403dea:	mov    DWORD PTR [rsp+0xc],0x0
  403df2:	lea    rdi,[rsp+0xc]
  403df7:	mov    edx,0x4
  403dfc:	mov    rsi,rcx
  403dff:	call   402040 <strncpy@plt>
  403e04:	mov    ecx,DWORD PTR [rsp+0xc]
  403e08:	test   ecx,ecx
  403e0a:	je     403e16 <flatcc_verify_buffer_header@@Base+0x66>
  403e0c:	mov    eax,0x2
  403e11:	cmp    DWORD PTR [rbx+0x4],ecx
  403e14:	jne    403e18 <flatcc_verify_buffer_header@@Base+0x68>
  403e16:	xor    eax,eax
  403e18:	add    rsp,0x10
  403e1c:	pop    rbx
  403e1d:	ret    
  403e1e:	xchg   ax,ax

0000000000403e20 <flatcc_verify_typed_buffer_header@@Base>:
  403e20:	mov    eax,0x5
  403e25:	test   dil,0x3
  403e29:	jne    403e5b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e2b:	mov    rcx,rsi
  403e2e:	shr    rcx,0x3
  403e32:	mov    eax,0x6
  403e37:	cmp    rcx,0x1ffffffe
  403e3e:	ja     403e5b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e40:	mov    eax,0x1
  403e45:	cmp    rsi,0x8
  403e49:	jb     403e5b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e4b:	test   edx,edx
  403e4d:	je     403e59 <flatcc_verify_typed_buffer_header@@Base+0x39>
  403e4f:	mov    eax,0x2
  403e54:	cmp    DWORD PTR [rdi+0x4],edx
  403e57:	jne    403e5b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e59:	xor    eax,eax
  403e5b:	ret    
  403e5c:	nop    DWORD PTR [rax+0x0]

0000000000403e60 <flatcc_verify_struct_as_root@@Base>:
  403e60:	push   rbp
  403e61:	push   r15
  403e63:	push   r14
  403e65:	push   r12
  403e67:	push   rbx
  403e68:	sub    rsp,0x10
  403e6c:	mov    rbx,rdi
  403e6f:	mov    eax,0x5
  403e74:	test   bl,0x3
  403e77:	jne    403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403e7d:	mov    r15,rcx
  403e80:	mov    rbp,rsi
  403e83:	mov    rcx,rsi
  403e86:	shr    rcx,0x3
  403e8a:	mov    eax,0x6
  403e8f:	cmp    rcx,0x1ffffffe
  403e96:	ja     403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403e9c:	mov    eax,0x1
  403ea1:	cmp    rbp,0x8
  403ea5:	jb     403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403eab:	mov    r14d,r8d
  403eae:	mov    r12,rdx
  403eb1:	test   rdx,rdx
  403eb4:	je     403f0c <flatcc_verify_struct_as_root@@Base+0xac>
  403eb6:	mov    DWORD PTR [rsp+0x8],0x0
  403ebe:	lea    rdi,[rsp+0x8]
  403ec3:	mov    edx,0x4
  403ec8:	mov    rsi,r12
  403ecb:	call   402040 <strncpy@plt>
  403ed0:	mov    eax,DWORD PTR [rsp+0x8]
  403ed4:	test   eax,eax
  403ed6:	je     403f0c <flatcc_verify_struct_as_root@@Base+0xac>
  403ed8:	cmp    DWORD PTR [rbx+0x4],eax
  403edb:	je     403f0c <flatcc_verify_struct_as_root@@Base+0xac>
  403edd:	mov    DWORD PTR [rsp+0xc],0x0
  403ee5:	lea    rdi,[rsp+0xc]
  403eea:	mov    edx,0x4
  403eef:	mov    rsi,r12
  403ef2:	call   402040 <strncpy@plt>
  403ef7:	mov    ecx,DWORD PTR [rsp+0xc]
  403efb:	xor    eax,eax
  403efd:	cmp    DWORD PTR [rbx+0x4],ecx
  403f00:	setne  al
  403f03:	add    eax,eax
  403f05:	test   ecx,ecx
  403f07:	cmove  eax,ecx
  403f0a:	jmp    403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403f0c:	mov    ecx,DWORD PTR [rbx]
  403f0e:	lea    edx,[rcx-0x1]
  403f11:	mov    eax,0x12
  403f16:	cmp    edx,ebp
  403f18:	jae    403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403f1a:	mov    eax,0xa
  403f1f:	add    r15d,ecx
  403f22:	jb     403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403f24:	mov    eax,0x9
  403f29:	cmp    r15d,ebp
  403f2c:	ja     403f3f <flatcc_verify_struct_as_root@@Base+0xdf>
  403f2e:	movzx  eax,r14w
  403f32:	add    eax,0xffffffff
  403f35:	and    ecx,eax
  403f37:	mov    eax,0xb
  403f3c:	cmove  eax,ecx
  403f3f:	add    rsp,0x10
  403f43:	pop    rbx
  403f44:	pop    r12
  403f46:	pop    r14
  403f48:	pop    r15
  403f4a:	pop    rbp
  403f4b:	ret    
  403f4c:	nop    DWORD PTR [rax+0x0]

0000000000403f50 <flatcc_verify_struct_as_typed_root@@Base>:
  403f50:	mov    eax,0x5
  403f55:	test   dil,0x3
  403f59:	jne    403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403f5b:	mov    r9,rsi
  403f5e:	shr    r9,0x3
  403f62:	mov    eax,0x6
  403f67:	cmp    r9,0x1ffffffe
  403f6e:	ja     403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403f70:	mov    eax,0x1
  403f75:	cmp    rsi,0x8
  403f79:	jb     403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403f7b:	test   edx,edx
  403f7d:	je     403f89 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  403f7f:	mov    eax,0x2
  403f84:	cmp    DWORD PTR [rdi+0x4],edx
  403f87:	jne    403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403f89:	mov    edx,DWORD PTR [rdi]
  403f8b:	lea    edi,[rdx-0x1]
  403f8e:	mov    eax,0x12
  403f93:	cmp    edi,esi
  403f95:	jae    403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403f97:	mov    eax,0xa
  403f9c:	add    ecx,edx
  403f9e:	jb     403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403fa0:	mov    eax,0x9
  403fa5:	cmp    ecx,esi
  403fa7:	ja     403fba <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  403fa9:	movzx  eax,r8w
  403fad:	add    eax,0xffffffff
  403fb0:	and    edx,eax
  403fb2:	mov    eax,0xb
  403fb7:	cmove  eax,edx
  403fba:	ret    
  403fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403fc0 <flatcc_verify_table_as_root@@Base>:
  403fc0:	push   r15
  403fc2:	push   r14
  403fc4:	push   r13
  403fc6:	push   r12
  403fc8:	push   rbx
  403fc9:	sub    rsp,0x20
  403fcd:	mov    r12,rdi
  403fd0:	mov    eax,0x5
  403fd5:	test   r12b,0x3
  403fd9:	jne    404125 <flatcc_verify_table_as_root@@Base+0x165>
  403fdf:	mov    r14,rcx
  403fe2:	mov    r15,rsi
  403fe5:	mov    r13d,r15d
  403fe8:	mov    rcx,r13
  403feb:	shr    rcx,0x3
  403fef:	mov    eax,0x6
  403ff4:	cmp    rcx,0x1ffffffe
  403ffb:	ja     404125 <flatcc_verify_table_as_root@@Base+0x165>
  404001:	mov    eax,0x1
  404006:	cmp    r13,0x8
  40400a:	jb     404125 <flatcc_verify_table_as_root@@Base+0x165>
  404010:	mov    rbx,rdx
  404013:	test   rdx,rdx
  404016:	je     40406d <flatcc_verify_table_as_root@@Base+0xad>
  404018:	mov    DWORD PTR [rsp],0x0
  40401f:	mov    rdi,rsp
  404022:	mov    edx,0x4
  404027:	mov    rsi,rbx
  40402a:	call   402040 <strncpy@plt>
  40402f:	mov    eax,DWORD PTR [rsp]
  404032:	test   eax,eax
  404034:	je     40406d <flatcc_verify_table_as_root@@Base+0xad>
  404036:	cmp    DWORD PTR [r12+0x4],eax
  40403b:	je     40406d <flatcc_verify_table_as_root@@Base+0xad>
  40403d:	mov    DWORD PTR [rsp],0x0
  404044:	mov    rdi,rsp
  404047:	mov    edx,0x4
  40404c:	mov    rsi,rbx
  40404f:	call   402040 <strncpy@plt>
  404054:	mov    ecx,DWORD PTR [rsp]
  404057:	xor    eax,eax
  404059:	cmp    DWORD PTR [r12+0x4],ecx
  40405e:	setne  al
  404061:	add    eax,eax
  404063:	test   ecx,ecx
  404065:	cmove  eax,ecx
  404068:	jmp    404125 <flatcc_verify_table_as_root@@Base+0x165>
  40406d:	mov    ecx,DWORD PTR [r12]
  404071:	mov    DWORD PTR [rsp+0xc],0x63
  404079:	mov    eax,0xf
  40407e:	test   rcx,rcx
  404081:	je     404125 <flatcc_verify_table_as_root@@Base+0x165>
  404087:	lea    rdx,[rcx+0x4]
  40408b:	cmp    rdx,r13
  40408e:	ja     404125 <flatcc_verify_table_as_root@@Base+0x165>
  404094:	mov    edx,ecx
  404096:	and    edx,0x3
  404099:	test   rdx,rdx
  40409c:	jne    404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040a2:	mov    DWORD PTR [rsp+0x18],ecx
  4040a6:	mov    esi,ecx
  4040a8:	sub    esi,DWORD PTR [r12+rcx*1]
  4040ac:	mov    eax,0x1d
  4040b1:	test   esi,0x80000001
  4040b7:	jne    404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040b9:	mov    edx,esi
  4040bb:	lea    rdi,[rdx+0x2]
  4040bf:	mov    eax,0x1b
  4040c4:	cmp    rdi,r13
  4040c7:	ja     404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040c9:	movzx  ebx,WORD PTR [r12+rdx*1]
  4040ce:	mov    WORD PTR [rsp+0x1e],bx
  4040d3:	mov    eax,0x1e
  4040d8:	test   bl,0x1
  4040db:	jne    404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040dd:	mov    edi,ebx
  4040df:	add    edi,esi
  4040e1:	cmp    edi,r15d
  4040e4:	ja     404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040e6:	movzx  edi,bx
  4040e9:	mov    eax,0x1c
  4040ee:	cmp    edi,0x4
  4040f1:	jb     404125 <flatcc_verify_table_as_root@@Base+0x165>
  4040f3:	add    esi,0x2
  4040f6:	movzx  esi,WORD PTR [r12+rsi*1]
  4040fb:	mov    WORD PTR [rsp+0x1c],si
  404100:	mov    edi,r15d
  404103:	sub    edi,ecx
  404105:	mov    eax,0x14
  40410a:	cmp    edi,esi
  40410c:	jb     404125 <flatcc_verify_table_as_root@@Base+0x165>
  40410e:	add    rdx,r12
  404111:	mov    QWORD PTR [rsp+0x10],rdx
  404116:	mov    QWORD PTR [rsp],r12
  40411a:	mov    DWORD PTR [rsp+0x8],r15d
  40411f:	mov    rdi,rsp
  404122:	call   r14
  404125:	add    rsp,0x20
  404129:	pop    rbx
  40412a:	pop    r12
  40412c:	pop    r13
  40412e:	pop    r14
  404130:	pop    r15
  404132:	ret    
  404133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40413d:	nop    DWORD PTR [rax]

0000000000404140 <flatcc_verify_table_as_typed_root@@Base>:
  404140:	mov    eax,0x5
  404145:	test   dil,0x3
  404149:	jne    404258 <flatcc_verify_table_as_typed_root@@Base+0x118>
  40414f:	mov    r8d,esi
  404152:	mov    r9,r8
  404155:	shr    r9,0x3
  404159:	mov    eax,0x6
  40415e:	cmp    r9,0x1ffffffe
  404165:	ja     404258 <flatcc_verify_table_as_typed_root@@Base+0x118>
  40416b:	mov    eax,0x1
  404170:	cmp    r8,0x8
  404174:	jb     404258 <flatcc_verify_table_as_typed_root@@Base+0x118>
  40417a:	test   edx,edx
  40417c:	je     40418c <flatcc_verify_table_as_typed_root@@Base+0x4c>
  40417e:	mov    eax,0x2
  404183:	cmp    DWORD PTR [rdi+0x4],edx
  404186:	jne    404258 <flatcc_verify_table_as_typed_root@@Base+0x118>
  40418c:	sub    rsp,0x28
  404190:	mov    r11d,DWORD PTR [rdi]
  404193:	mov    DWORD PTR [rsp+0x14],0x63
  40419b:	mov    eax,0xf
  4041a0:	test   r11,r11
  4041a3:	je     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4041a9:	lea    rdx,[r11+0x4]
  4041ad:	cmp    rdx,r8
  4041b0:	ja     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4041b6:	mov    edx,r11d
  4041b9:	and    edx,0x3
  4041bc:	test   rdx,rdx
  4041bf:	jne    404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4041c5:	mov    DWORD PTR [rsp+0x20],r11d
  4041ca:	mov    r10d,r11d
  4041cd:	sub    r10d,DWORD PTR [rdi+r11*1]
  4041d1:	mov    eax,0x1d
  4041d6:	test   r10d,0x80000001
  4041dd:	jne    404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4041df:	mov    r9d,r10d
  4041e2:	lea    rdx,[r9+0x2]
  4041e6:	mov    eax,0x1b
  4041eb:	cmp    rdx,r8
  4041ee:	ja     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4041f0:	movzx  r8d,WORD PTR [rdi+r9*1]
  4041f5:	mov    WORD PTR [rsp+0x26],r8w
  4041fb:	mov    eax,0x1e
  404200:	test   r8b,0x1
  404204:	jne    404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  404206:	mov    edx,r8d
  404209:	add    edx,r10d
  40420c:	cmp    edx,esi
  40420e:	ja     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  404210:	movzx  edx,r8w
  404214:	mov    eax,0x1c
  404219:	cmp    edx,0x4
  40421c:	jb     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  40421e:	add    r10d,0x2
  404222:	movzx  r8d,WORD PTR [rdi+r10*1]
  404227:	mov    WORD PTR [rsp+0x24],r8w
  40422d:	mov    edx,esi
  40422f:	sub    edx,r11d
  404232:	mov    eax,0x14
  404237:	cmp    edx,r8d
  40423a:	jb     404254 <flatcc_verify_table_as_typed_root@@Base+0x114>
  40423c:	add    r9,rdi
  40423f:	mov    QWORD PTR [rsp+0x18],r9
  404244:	mov    QWORD PTR [rsp+0x8],rdi
  404249:	mov    DWORD PTR [rsp+0x10],esi
  40424d:	lea    rdi,[rsp+0x8]
  404252:	call   rcx
  404254:	add    rsp,0x28
  404258:	ret    
  404259:	nop    DWORD PTR [rax+0x0]

0000000000404260 <flatcc_verify_struct_as_nested_root@@Base>:
  404260:	push   r14
  404262:	push   rbx
  404263:	lea    esi,[rsi+rsi*1]
  404266:	add    esi,0x4
  404269:	movzx  r10d,WORD PTR [rdi+0x1e]
  40426e:	cmp    si,r10w
  404272:	jae    4042dc <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  404274:	mov    r11,QWORD PTR [rdi+0x10]
  404278:	movzx  ebx,si
  40427b:	movzx  eax,WORD PTR [r11+rbx*1]
  404280:	test   eax,eax
  404282:	je     4042dc <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  404284:	add    r11,rbx
  404287:	lea    esi,[rax+0x4]
  40428a:	movzx  ebx,WORD PTR [rdi+0x1c]
  40428e:	cmp    esi,ebx
  404290:	ja     4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  404292:	add    eax,DWORD PTR [rdi+0x18]
  404295:	test   al,0x3
  404297:	jne    4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  404299:	test   eax,eax
  40429b:	je     40438d <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  4042a1:	mov    r10,QWORD PTR [rdi]
  4042a4:	mov    esi,eax
  4042a6:	mov    esi,DWORD PTR [r10+rsi*1]
  4042aa:	add    esi,eax
  4042ac:	cmp    esi,eax
  4042ae:	jbe    4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4042b0:	test   sil,0x3
  4042b4:	jne    4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4042b6:	mov    eax,DWORD PTR [rdi+0x8]
  4042b9:	mov    r14d,esi
  4042bc:	lea    rbx,[r14+0x4]
  4042c0:	cmp    rbx,rax
  4042c3:	ja     4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4042c5:	movzx  ebx,r9w
  4042c9:	add    eax,0xfffffffc
  4042cc:	sub    eax,esi
  4042ce:	imul   ebx,DWORD PTR [r10+r14*1]
  4042d3:	cmp    eax,ebx
  4042d5:	jb     4042f6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4042d7:	jmp    40438d <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  4042dc:	test   edx,edx
  4042de:	je     40437d <flatcc_verify_struct_as_nested_root@@Base+0x11d>
  4042e4:	cmp    si,r10w
  4042e8:	jae    404371 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  4042ee:	movzx  r11d,si
  4042f2:	add    r11,QWORD PTR [rdi+0x10]
  4042f6:	movzx  ecx,WORD PTR [r11]
  4042fa:	test   ecx,ecx
  4042fc:	je     404371 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  4042fe:	lea    edx,[rcx+0x4]
  404301:	movzx  esi,WORD PTR [rdi+0x1c]
  404305:	mov    eax,0xd
  40430a:	cmp    edx,esi
  40430c:	ja     4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404312:	add    ecx,DWORD PTR [rdi+0x18]
  404315:	mov    eax,0xc
  40431a:	test   cl,0x3
  40431d:	jne    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404323:	test   ecx,ecx
  404325:	je     4043c5 <flatcc_verify_struct_as_nested_root@@Base+0x165>
  40432b:	mov    rdx,QWORD PTR [rdi]
  40432e:	mov    eax,ecx
  404330:	mov    esi,DWORD PTR [rdx+rax*1]
  404333:	add    esi,ecx
  404335:	mov    eax,0x10
  40433a:	cmp    esi,ecx
  40433c:	jbe    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404342:	test   sil,0x3
  404346:	jne    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404348:	mov    ecx,DWORD PTR [rdi+0x8]
  40434b:	mov    edi,esi
  40434d:	lea    rbx,[rdi+0x4]
  404351:	cmp    rbx,rcx
  404354:	ja     4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404356:	movzx  eax,r9w
  40435a:	add    ecx,0xfffffffc
  40435d:	sub    ecx,esi
  40435f:	imul   eax,DWORD PTR [rdx+rdi*1]
  404363:	xor    edx,edx
  404365:	cmp    ecx,eax
  404367:	mov    eax,0x1a
  40436c:	cmovae eax,edx
  40436f:	jmp    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404371:	xor    eax,eax
  404373:	test   edx,edx
  404375:	setne  al
  404378:	shl    eax,0x2
  40437b:	jmp    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  40437d:	xor    eax,eax
  40437f:	cmp    si,r10w
  404383:	jae    4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404385:	movzx  r11d,si
  404389:	add    r11,QWORD PTR [rdi+0x10]
  40438d:	movzx  esi,WORD PTR [r11]
  404391:	xor    eax,eax
  404393:	test   rsi,rsi
  404396:	je     4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  404398:	mov    edx,DWORD PTR [rdi+0x18]
  40439b:	add    rdx,QWORD PTR [rdi]
  40439e:	add    rdx,rsi
  4043a1:	je     4043c7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4043a3:	mov    eax,DWORD PTR [rdx]
  4043a5:	mov    esi,DWORD PTR [rax+rdx*1]
  4043a8:	lea    rdi,[rax+rdx*1]
  4043ac:	add    rdi,0x4
  4043b0:	movzx  eax,r9w
  4043b4:	mov    rdx,rcx
  4043b7:	mov    rcx,r8
  4043ba:	mov    r8d,eax
  4043bd:	pop    rbx
  4043be:	pop    r14
  4043c0:	jmp    403e60 <flatcc_verify_struct_as_root@@Base>
  4043c5:	xor    eax,eax
  4043c7:	pop    rbx
  4043c8:	pop    r14
  4043ca:	ret    
  4043cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004043d0 <flatcc_verify_table_as_nested_root@@Base>:
  4043d0:	push   rbp
  4043d1:	push   r15
  4043d3:	push   r14
  4043d5:	push   r13
  4043d7:	push   r12
  4043d9:	push   rbx
  4043da:	sub    rsp,0x28
  4043de:	mov    r14,r9
  4043e1:	mov    r15,rcx
  4043e4:	mov    rbx,rdi
  4043e7:	lea    esi,[rsi+rsi*1]
  4043ea:	add    esi,0x4
  4043ed:	movzx  edi,WORD PTR [rdi+0x1e]
  4043f1:	cmp    si,di
  4043f4:	jae    40445d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  4043f6:	mov    rax,QWORD PTR [rbx+0x10]
  4043fa:	movzx  ebp,si
  4043fd:	movzx  ecx,WORD PTR [rax+rbp*1]
  404401:	test   ecx,ecx
  404403:	je     40445d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  404405:	add    rax,rbp
  404408:	lea    esi,[rcx+0x4]
  40440b:	movzx  edi,WORD PTR [rbx+0x1c]
  40440f:	cmp    esi,edi
  404411:	ja     404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  404413:	add    ecx,DWORD PTR [rbx+0x18]
  404416:	test   cl,0x3
  404419:	jne    404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  40441b:	test   ecx,ecx
  40441d:	je     40451b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  404423:	mov    rsi,QWORD PTR [rbx]
  404426:	mov    edi,ecx
  404428:	mov    edi,DWORD PTR [rsi+rdi*1]
  40442b:	add    edi,ecx
  40442d:	cmp    edi,ecx
  40442f:	jbe    404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  404431:	test   dil,0x3
  404435:	jne    404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  404437:	mov    ecx,DWORD PTR [rbx+0x8]
  40443a:	mov    r9d,edi
  40443d:	lea    rbp,[r9+0x4]
  404441:	cmp    rbp,rcx
  404444:	ja     404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  404446:	movzx  ebp,r8w
  40444a:	add    ecx,0xfffffffc
  40444d:	sub    ecx,edi
  40444f:	imul   ebp,DWORD PTR [rsi+r9*1]
  404454:	cmp    ecx,ebp
  404456:	jb     404475 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  404458:	jmp    40451b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  40445d:	test   edx,edx
  40445f:	je     404509 <flatcc_verify_table_as_nested_root@@Base+0x139>
  404465:	cmp    si,di
  404468:	jae    4044fa <flatcc_verify_table_as_nested_root@@Base+0x12a>
  40446e:	movzx  eax,si
  404471:	add    rax,QWORD PTR [rbx+0x10]
  404475:	movzx  ecx,WORD PTR [rax]
  404478:	test   ecx,ecx
  40447a:	je     4044fa <flatcc_verify_table_as_nested_root@@Base+0x12a>
  40447c:	lea    edx,[rcx+0x4]
  40447f:	movzx  esi,WORD PTR [rbx+0x1c]
  404483:	mov    eax,0xd
  404488:	cmp    edx,esi
  40448a:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404490:	add    ecx,DWORD PTR [rbx+0x18]
  404493:	mov    eax,0xc
  404498:	test   cl,0x3
  40449b:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4044a1:	test   ecx,ecx
  4044a3:	je     4045cc <flatcc_verify_table_as_nested_root@@Base+0x1fc>
  4044a9:	mov    rdx,QWORD PTR [rbx]
  4044ac:	mov    eax,ecx
  4044ae:	mov    esi,DWORD PTR [rdx+rax*1]
  4044b1:	add    esi,ecx
  4044b3:	mov    eax,0x10
  4044b8:	cmp    esi,ecx
  4044ba:	jbe    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4044c0:	test   sil,0x3
  4044c4:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4044ca:	mov    ecx,DWORD PTR [rbx+0x8]
  4044cd:	mov    edi,esi
  4044cf:	lea    rbp,[rdi+0x4]
  4044d3:	cmp    rbp,rcx
  4044d6:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4044dc:	movzx  eax,r8w
  4044e0:	add    ecx,0xfffffffc
  4044e3:	sub    ecx,esi
  4044e5:	imul   eax,DWORD PTR [rdx+rdi*1]
  4044e9:	xor    edx,edx
  4044eb:	cmp    ecx,eax
  4044ed:	mov    eax,0x1a
  4044f2:	cmovae eax,edx
  4044f5:	jmp    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4044fa:	xor    eax,eax
  4044fc:	test   edx,edx
  4044fe:	setne  al
  404501:	shl    eax,0x2
  404504:	jmp    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404509:	xor    eax,eax
  40450b:	cmp    si,di
  40450e:	jae    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404514:	movzx  eax,si
  404517:	add    rax,QWORD PTR [rbx+0x10]
  40451b:	movzx  ecx,WORD PTR [rax]
  40451e:	xor    eax,eax
  404520:	test   rcx,rcx
  404523:	je     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404529:	mov    r13d,DWORD PTR [rbx+0x18]
  40452d:	add    r13,QWORD PTR [rbx]
  404530:	add    r13,rcx
  404533:	je     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404539:	mov    ebp,DWORD PTR [r13+0x0]
  40453d:	lea    r12,[r13*1+0x4]
  404545:	add    r12,rbp
  404548:	mov    eax,0x5
  40454d:	test   r12b,0x3
  404551:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404553:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  404558:	mov    eax,0x6
  40455d:	cmp    ecx,0xfffffff7
  404560:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404562:	mov    eax,0x1
  404567:	cmp    ecx,0x8
  40456a:	jb     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  40456c:	test   r15,r15
  40456f:	je     4045dd <flatcc_verify_table_as_nested_root@@Base+0x20d>
  404571:	mov    DWORD PTR [rsp],0x0
  404578:	mov    rdi,rsp
  40457b:	mov    edx,0x4
  404580:	mov    rsi,r15
  404583:	mov    QWORD PTR [rsp+0x20],rcx
  404588:	call   402040 <strncpy@plt>
  40458d:	mov    rcx,QWORD PTR [rsp+0x20]
  404592:	mov    eax,DWORD PTR [rsp]
  404595:	test   eax,eax
  404597:	je     4045dd <flatcc_verify_table_as_nested_root@@Base+0x20d>
  404599:	add    rbp,r13
  40459c:	cmp    DWORD PTR [rbp+0x8],eax
  40459f:	je     4045dd <flatcc_verify_table_as_nested_root@@Base+0x20d>
  4045a1:	mov    DWORD PTR [rsp],0x0
  4045a8:	mov    rdi,rsp
  4045ab:	mov    edx,0x4
  4045b0:	mov    rsi,r15
  4045b3:	call   402040 <strncpy@plt>
  4045b8:	mov    ecx,DWORD PTR [rsp]
  4045bb:	xor    eax,eax
  4045bd:	cmp    DWORD PTR [rbp+0x8],ecx
  4045c0:	setne  al
  4045c3:	add    eax,eax
  4045c5:	test   ecx,ecx
  4045c7:	cmove  eax,ecx
  4045ca:	jmp    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4045cc:	xor    eax,eax
  4045ce:	add    rsp,0x28
  4045d2:	pop    rbx
  4045d3:	pop    r12
  4045d5:	pop    r13
  4045d7:	pop    r14
  4045d9:	pop    r15
  4045db:	pop    rbp
  4045dc:	ret    
  4045dd:	mov    ebp,DWORD PTR [r12]
  4045e1:	mov    eax,DWORD PTR [rbx+0xc]
  4045e4:	add    eax,0xffffffff
  4045e7:	mov    DWORD PTR [rsp+0xc],eax
  4045eb:	je     40469e <flatcc_verify_table_as_nested_root@@Base+0x2ce>
  4045f1:	mov    eax,0xf
  4045f6:	test   ebp,ebp
  4045f8:	je     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4045fa:	lea    rdx,[rbp+0x4]
  4045fe:	cmp    rdx,rcx
  404601:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404603:	mov    edx,ebp
  404605:	and    edx,0x3
  404608:	test   rdx,rdx
  40460b:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  40460d:	mov    DWORD PTR [rsp+0x18],ebp
  404611:	mov    esi,ebp
  404613:	sub    esi,DWORD PTR [r12+rbp*1]
  404617:	mov    eax,0x1d
  40461c:	test   esi,0x80000001
  404622:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404624:	mov    edx,esi
  404626:	lea    rdi,[rdx+0x2]
  40462a:	mov    eax,0x1b
  40462f:	cmp    rdi,rcx
  404632:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404634:	movzx  ebx,WORD PTR [r12+rdx*1]
  404639:	mov    WORD PTR [rsp+0x1e],bx
  40463e:	mov    eax,0x1e
  404643:	test   bl,0x1
  404646:	jne    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404648:	mov    edi,ebx
  40464a:	add    edi,esi
  40464c:	cmp    edi,ecx
  40464e:	ja     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404654:	movzx  edi,bx
  404657:	mov    eax,0x1c
  40465c:	cmp    edi,0x4
  40465f:	jb     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404665:	add    esi,0x2
  404668:	movzx  esi,WORD PTR [r12+rsi*1]
  40466d:	mov    WORD PTR [rsp+0x1c],si
  404672:	mov    edi,ecx
  404674:	sub    edi,ebp
  404676:	mov    eax,0x14
  40467b:	cmp    edi,esi
  40467d:	jb     4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  404683:	add    rdx,r12
  404686:	mov    QWORD PTR [rsp+0x10],rdx
  40468b:	mov    QWORD PTR [rsp],r12
  40468f:	mov    DWORD PTR [rsp+0x8],ecx
  404693:	mov    rdi,rsp
  404696:	call   r14
  404699:	jmp    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  40469e:	mov    eax,0x3
  4046a3:	jmp    4045ce <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4046a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004046b0 <flatcc_verify_union_field@@Base>:
  4046b0:	push   rbp
  4046b1:	push   r14
  4046b3:	push   rbx
  4046b4:	sub    rsp,0x20
  4046b8:	lea    r9d,[rsi+rsi*1]
  4046bc:	lea    eax,[rsi+rsi*1]
  4046bf:	add    eax,0x2
  4046c2:	movzx  esi,WORD PTR [rdi+0x1e]
  4046c6:	cmp    ax,si
  4046c9:	jae    4047ab <flatcc_verify_union_field@@Base+0xfb>
  4046cf:	mov    rbx,QWORD PTR [rdi+0x10]
  4046d3:	movzx  eax,ax
  4046d6:	movzx  r10d,WORD PTR [rbx+rax*1]
  4046db:	test   r10,r10
  4046de:	je     4047ab <flatcc_verify_union_field@@Base+0xfb>
  4046e4:	mov    eax,0xd
  4046e9:	cmp    r10w,WORD PTR [rdi+0x1c]
  4046ee:	jae    4047d3 <flatcc_verify_union_field@@Base+0x123>
  4046f4:	mov    r8,QWORD PTR [rdi]
  4046f7:	add    r9d,0x4
  4046fb:	mov    al,0x1
  4046fd:	cmp    r9w,si
  404701:	jae    40470f <flatcc_verify_union_field@@Base+0x5f>
  404703:	movzx  eax,r9w
  404707:	cmp    WORD PTR [rbx+rax*1],0x0
  40470c:	sete   al
  40470f:	mov    r14d,DWORD PTR [rdi+0x18]
  404713:	lea    r11,[r8+r14*1]
  404717:	mov    bpl,BYTE PTR [r10+r11*1]
  40471b:	test   al,al
  40471d:	jne    40472d <flatcc_verify_union_field@@Base+0x7d>
  40471f:	mov    eax,0x18
  404724:	test   bpl,bpl
  404727:	je     4047d3 <flatcc_verify_union_field@@Base+0x123>
  40472d:	xor    eax,eax
  40472f:	test   bpl,bpl
  404732:	je     4047d3 <flatcc_verify_union_field@@Base+0x123>
  404738:	cmp    r9w,si
  40473c:	jae    4047dc <flatcc_verify_union_field@@Base+0x12c>
  404742:	movzx  eax,r9w
  404746:	movzx  esi,WORD PTR [rbx+rax*1]
  40474a:	test   esi,esi
  40474c:	je     4047dc <flatcc_verify_union_field@@Base+0x12c>
  404752:	lea    edx,[rsi+0x4]
  404755:	movzx  ebp,WORD PTR [rdi+0x1c]
  404759:	mov    eax,0xd
  40475e:	cmp    edx,ebp
  404760:	ja     4047d3 <flatcc_verify_union_field@@Base+0x123>
  404762:	add    r14d,esi
  404765:	mov    eax,0xc
  40476a:	test   r14b,0x3
  40476e:	jne    4047d3 <flatcc_verify_union_field@@Base+0x123>
  404770:	mov    eax,0x0
  404775:	test   r14d,r14d
  404778:	je     4047d3 <flatcc_verify_union_field@@Base+0x123>
  40477a:	mov    QWORD PTR [rsp],r8
  40477e:	mov    eax,DWORD PTR [rdi+0x8]
  404781:	mov    DWORD PTR [rsp+0x8],eax
  404785:	mov    eax,DWORD PTR [rdi+0xc]
  404788:	mov    DWORD PTR [rsp+0xc],eax
  40478c:	mov    DWORD PTR [rsp+0x14],r14d
  404791:	mov    eax,r14d
  404794:	mov    eax,DWORD PTR [r8+rax*1]
  404798:	mov    DWORD PTR [rsp+0x18],eax
  40479c:	mov    al,BYTE PTR [r11+r10*1]
  4047a0:	mov    BYTE PTR [rsp+0x10],al
  4047a4:	mov    rdi,rsp
  4047a7:	call   rcx
  4047a9:	jmp    4047d3 <flatcc_verify_union_field@@Base+0x123>
  4047ab:	add    r9d,0x4
  4047af:	cmp    r9w,si
  4047b3:	jae    4047c9 <flatcc_verify_union_field@@Base+0x119>
  4047b5:	mov    rcx,QWORD PTR [rdi+0x10]
  4047b9:	movzx  esi,r9w
  4047bd:	mov    eax,0x17
  4047c2:	cmp    WORD PTR [rcx+rsi*1],0x0
  4047c7:	jne    4047d3 <flatcc_verify_union_field@@Base+0x123>
  4047c9:	test   edx,edx
  4047cb:	mov    eax,0x15
  4047d0:	cmove  eax,edx
  4047d3:	add    rsp,0x20
  4047d7:	pop    rbx
  4047d8:	pop    r14
  4047da:	pop    rbp
  4047db:	ret    
  4047dc:	xor    eax,eax
  4047de:	test   edx,edx
  4047e0:	setne  al
  4047e3:	shl    eax,0x2
  4047e6:	jmp    4047d3 <flatcc_verify_union_field@@Base+0x123>
  4047e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047f0 <flatcc_verify_union_vector_field@@Base>:
  4047f0:	push   rbp
  4047f1:	push   r15
  4047f3:	push   r14
  4047f5:	push   r13
  4047f7:	push   r12
  4047f9:	push   rbx
  4047fa:	sub    rsp,0x28
  4047fe:	mov    r12,rcx
  404801:	lea    r10d,[rsi+rsi*1]
  404805:	lea    ecx,[rsi+rsi*1]
  404808:	add    ecx,0x2
  40480b:	movzx  esi,WORD PTR [rdi+0x1e]
  40480f:	cmp    cx,si
  404812:	jae    404825 <flatcc_verify_union_vector_field@@Base+0x35>
  404814:	mov    r11,QWORD PTR [rdi+0x10]
  404818:	movzx  eax,cx
  40481b:	movzx  ebp,WORD PTR [r11+rax*1]
  404820:	test   bp,bp
  404823:	jne    404866 <flatcc_verify_union_vector_field@@Base+0x76>
  404825:	lea    eax,[r10+0x4]
  404829:	cmp    ax,si
  40482c:	jae    4048bb <flatcc_verify_union_vector_field@@Base+0xcb>
  404832:	test   edx,edx
  404834:	je     404850 <flatcc_verify_union_vector_field@@Base+0x60>
  404836:	mov    rbp,QWORD PTR [rdi+0x10]
  40483a:	movzx  eax,ax
  40483d:	movzx  ebp,WORD PTR [rbp+rax*1+0x0]
  404842:	mov    eax,0x16
  404847:	test   bp,bp
  40484a:	je     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404850:	cmp    cx,si
  404853:	jae    4048ca <flatcc_verify_union_vector_field@@Base+0xda>
  404855:	mov    r11,QWORD PTR [rdi+0x10]
  404859:	movzx  eax,cx
  40485c:	movzx  ebp,WORD PTR [r11+rax*1]
  404861:	test   bp,bp
  404864:	je     4048ca <flatcc_verify_union_vector_field@@Base+0xda>
  404866:	add    rax,r11
  404869:	movzx  ecx,bp
  40486c:	lea    ebp,[rcx+0x4]
  40486f:	movzx  ebx,WORD PTR [rdi+0x1c]
  404873:	cmp    ebp,ebx
  404875:	ja     4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  404877:	add    ecx,DWORD PTR [rdi+0x18]
  40487a:	test   cl,0x3
  40487d:	jne    4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  40487f:	test   ecx,ecx
  404881:	je     404979 <flatcc_verify_union_vector_field@@Base+0x189>
  404887:	mov    r8,QWORD PTR [rdi]
  40488a:	mov    ebp,ecx
  40488c:	mov    ebp,DWORD PTR [r8+rbp*1]
  404890:	add    ebp,ecx
  404892:	cmp    ebp,ecx
  404894:	jbe    4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  404896:	test   bpl,0x3
  40489a:	jne    4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  40489c:	mov    ecx,DWORD PTR [rdi+0x8]
  40489f:	mov    r9d,ebp
  4048a2:	lea    rbx,[r9+0x4]
  4048a6:	cmp    rbx,rcx
  4048a9:	ja     4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  4048ab:	add    ecx,0xfffffffc
  4048ae:	sub    ecx,ebp
  4048b0:	cmp    ecx,DWORD PTR [r8+r9*1]
  4048b4:	jb     4048e2 <flatcc_verify_union_vector_field@@Base+0xf2>
  4048b6:	jmp    404979 <flatcc_verify_union_vector_field@@Base+0x189>
  4048bb:	mov    eax,0x16
  4048c0:	test   edx,edx
  4048c2:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4048c8:	jmp    404850 <flatcc_verify_union_vector_field@@Base+0x60>
  4048ca:	test   edx,edx
  4048cc:	je     404964 <flatcc_verify_union_vector_field@@Base+0x174>
  4048d2:	cmp    cx,si
  4048d5:	jae    404ad7 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4048db:	movzx  eax,cx
  4048de:	add    rax,QWORD PTR [rdi+0x10]
  4048e2:	movzx  ecx,WORD PTR [rax]
  4048e5:	test   ecx,ecx
  4048e7:	je     404ad7 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4048ed:	lea    edx,[rcx+0x4]
  4048f0:	movzx  esi,WORD PTR [rdi+0x1c]
  4048f4:	mov    eax,0xd
  4048f9:	cmp    edx,esi
  4048fb:	ja     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404901:	add    ecx,DWORD PTR [rdi+0x18]
  404904:	mov    eax,0xc
  404909:	test   cl,0x3
  40490c:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404912:	test   ecx,ecx
  404914:	je     404af0 <flatcc_verify_union_vector_field@@Base+0x300>
  40491a:	mov    rdx,QWORD PTR [rdi]
  40491d:	mov    eax,ecx
  40491f:	mov    esi,DWORD PTR [rdx+rax*1]
  404922:	add    esi,ecx
  404924:	mov    eax,0x10
  404929:	cmp    esi,ecx
  40492b:	jbe    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404931:	test   sil,0x3
  404935:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  40493b:	mov    ecx,DWORD PTR [rdi+0x8]
  40493e:	mov    edi,esi
  404940:	lea    rbp,[rdi+0x4]
  404944:	cmp    rbp,rcx
  404947:	ja     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  40494d:	add    ecx,0xfffffffc
  404950:	sub    ecx,esi
  404952:	xor    esi,esi
  404954:	cmp    ecx,DWORD PTR [rdx+rdi*1]
  404957:	mov    eax,0x1a
  40495c:	cmovae eax,esi
  40495f:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404964:	xor    eax,eax
  404966:	cmp    cx,si
  404969:	jae    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  40496f:	mov    r11,QWORD PTR [rdi+0x10]
  404973:	movzx  eax,cx
  404976:	add    rax,r11
  404979:	movzx  ecx,WORD PTR [rax]
  40497c:	xor    eax,eax
  40497e:	test   rcx,rcx
  404981:	je     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404987:	mov    r15,QWORD PTR [rdi]
  40498a:	mov    r8d,DWORD PTR [rdi+0x18]
  40498e:	lea    r9,[r15+r8*1]
  404992:	add    r9,rcx
  404995:	je     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  40499b:	add    r10d,0x4
  40499f:	cmp    r10w,si
  4049a3:	jae    404ad7 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4049a9:	movzx  eax,r10w
  4049ad:	movzx  ecx,WORD PTR [r11+rax*1]
  4049b2:	test   ecx,ecx
  4049b4:	je     404ad7 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4049ba:	lea    edx,[rcx+0x4]
  4049bd:	movzx  esi,WORD PTR [rdi+0x1c]
  4049c1:	mov    eax,0xd
  4049c6:	cmp    edx,esi
  4049c8:	ja     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4049ce:	lea    ebx,[r8+rcx*1]
  4049d2:	mov    eax,0xc
  4049d7:	test   bl,0x3
  4049da:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4049e0:	mov    eax,0x0
  4049e5:	test   ebx,ebx
  4049e7:	je     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4049ed:	mov    esi,DWORD PTR [rdi+0xc]
  4049f0:	test   esi,esi
  4049f2:	jle    404af4 <flatcc_verify_union_vector_field@@Base+0x304>
  4049f8:	mov    eax,ebx
  4049fa:	mov    edx,DWORD PTR [r15+rax*1]
  4049fe:	lea    ebp,[rdx+rbx*1]
  404a01:	mov    eax,0x10
  404a06:	cmp    ebp,ebx
  404a08:	jbe    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a0e:	test   bpl,0x3
  404a12:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a18:	mov    r10d,DWORD PTR [rdi+0x8]
  404a1c:	mov    ebx,ebp
  404a1e:	lea    rdi,[rbx+0x4]
  404a22:	cmp    rdi,r10
  404a25:	ja     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a2b:	mov    ebx,DWORD PTR [r15+rbx*1]
  404a2f:	mov    eax,0x19
  404a34:	cmp    ebx,0x3fffffff
  404a3a:	ja     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a40:	lea    edi,[r10-0x4]
  404a44:	sub    edi,ebp
  404a46:	lea    ebp,[rbx*4+0x0]
  404a4d:	mov    eax,0x1a
  404a52:	cmp    edi,ebp
  404a54:	jb     404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a5a:	mov    r13d,DWORD PTR [r9]
  404a5d:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  404a62:	mov    eax,0x22
  404a67:	cmp    ebx,edi
  404a69:	jne    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404a6b:	add    esi,0xffffffff
  404a6e:	mov    QWORD PTR [rsp+0x8],r15
  404a73:	mov    DWORD PTR [rsp+0x10],r10d
  404a78:	mov    DWORD PTR [rsp+0x14],esi
  404a7c:	test   edi,edi
  404a7e:	je     404af0 <flatcc_verify_union_vector_field@@Base+0x300>
  404a80:	mov    rax,rdi
  404a83:	add    r13,r9
  404a86:	add    edx,r8d
  404a89:	lea    ebp,[rcx+rdx*1]
  404a8c:	add    ebp,0x4
  404a8f:	xor    r14d,r14d
  404a92:	mov    rbx,rdi
  404a95:	mov    eax,ebp
  404a97:	mov    eax,DWORD PTR [r15+rax*1]
  404a9b:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  404aa1:	test   eax,eax
  404aa3:	je     404ac3 <flatcc_verify_union_vector_field@@Base+0x2d3>
  404aa5:	test   cl,cl
  404aa7:	je     404afb <flatcc_verify_union_vector_field@@Base+0x30b>
  404aa9:	mov    BYTE PTR [rsp+0x18],cl
  404aad:	mov    DWORD PTR [rsp+0x1c],ebp
  404ab1:	mov    DWORD PTR [rsp+0x20],eax
  404ab5:	lea    rdi,[rsp+0x8]
  404aba:	call   r12
  404abd:	test   eax,eax
  404abf:	je     404ac7 <flatcc_verify_union_vector_field@@Base+0x2d7>
  404ac1:	jmp    404b02 <flatcc_verify_union_vector_field@@Base+0x312>
  404ac3:	test   cl,cl
  404ac5:	jne    404b0c <flatcc_verify_union_vector_field@@Base+0x31c>
  404ac7:	add    r14,0x1
  404acb:	add    ebp,0x4
  404ace:	xor    eax,eax
  404ad0:	cmp    r14,rbx
  404ad3:	jb     404a95 <flatcc_verify_union_vector_field@@Base+0x2a5>
  404ad5:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404ad7:	xor    eax,eax
  404ad9:	test   edx,edx
  404adb:	setne  al
  404ade:	shl    eax,0x2
  404ae1:	add    rsp,0x28
  404ae5:	pop    rbx
  404ae6:	pop    r12
  404ae8:	pop    r13
  404aea:	pop    r14
  404aec:	pop    r15
  404aee:	pop    rbp
  404aef:	ret    
  404af0:	xor    eax,eax
  404af2:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404af4:	mov    eax,0x3
  404af9:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404afb:	mov    eax,0x21
  404b00:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404b02:	lea    rdi,[rsp+0x8]
  404b07:	call   r12
  404b0a:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404b0c:	mov    eax,0x20
  404b11:	jmp    404ae1 <flatcc_verify_union_vector_field@@Base+0x2f1>
  404b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b1d:	nop    DWORD PTR [rax]

0000000000404b20 <__libc_csu_init@@Base>:
  404b20:	endbr64 
  404b24:	push   r15
  404b26:	lea    r15,[rip+0x3183]        # 407cb0 <_IO_stdin_used@@Base+0x2cb0>
  404b2d:	push   r14
  404b2f:	mov    r14,rdx
  404b32:	push   r13
  404b34:	mov    r13,rsi
  404b37:	push   r12
  404b39:	mov    r12d,edi
  404b3c:	push   rbp
  404b3d:	lea    rbp,[rip+0x3174]        # 407cb8 <_IO_stdin_used@@Base+0x2cb8>
  404b44:	push   rbx
  404b45:	sub    rbp,r15
  404b48:	sub    rsp,0x8
  404b4c:	call   402000 <free@plt-0x30>
  404b51:	sar    rbp,0x3
  404b55:	je     404b76 <__libc_csu_init@@Base+0x56>
  404b57:	xor    ebx,ebx
  404b59:	nop    DWORD PTR [rax+0x0]
  404b60:	mov    rdx,r14
  404b63:	mov    rsi,r13
  404b66:	mov    edi,r12d
  404b69:	call   QWORD PTR [r15+rbx*8]
  404b6d:	add    rbx,0x1
  404b71:	cmp    rbp,rbx
  404b74:	jne    404b60 <__libc_csu_init@@Base+0x40>
  404b76:	add    rsp,0x8
  404b7a:	pop    rbx
  404b7b:	pop    rbp
  404b7c:	pop    r12
  404b7e:	pop    r13
  404b80:	pop    r14
  404b82:	pop    r15
  404b84:	ret    
  404b85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b90 <__libc_csu_fini@@Base>:
  404b90:	endbr64 
  404b94:	ret    

Disassembly of section .fini:

0000000000404b98 <.fini>:
  404b98:	endbr64 
  404b9c:	sub    rsp,0x8
  404ba0:	add    rsp,0x8
  404ba4:	ret    
