
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xbfe1]        # 40eff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xbfe2]        # 40f008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xbfe4]        # 40f010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xbfe2]        # 40f018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xbfda]        # 40f020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xbfd2]        # 40f028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xbfca]        # 40f030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xbfc2]        # 40f038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xbfba]        # 40f040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <puts@plt>:
  403090:	jmp    QWORD PTR [rip+0xbfb2]        # 40f048 <puts@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <fcntl@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xbfaa]        # 40f050 <fcntl@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <getpid@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xbfa2]        # 40f058 <getpid@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xbf9a]        # 40f060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xbf92]        # 40f068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xbf8a]        # 40f070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xbf82]        # 40f078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <setbuf@plt>:
  403100:	jmp    QWORD PTR [rip+0xbf7a]        # 40f080 <setbuf@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xbf72]        # 40f088 <strchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <printf@plt>:
  403120:	jmp    QWORD PTR [rip+0xbf6a]        # 40f090 <printf@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <strrchr@plt>:
  403130:	jmp    QWORD PTR [rip+0xbf62]        # 40f098 <strrchr@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <uname@plt>:
  403140:	jmp    QWORD PTR [rip+0xbf5a]        # 40f0a0 <uname@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <__assert_fail@plt>:
  403150:	jmp    QWORD PTR [rip+0xbf52]        # 40f0a8 <__assert_fail@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <memset@plt>:
  403160:	jmp    QWORD PTR [rip+0xbf4a]        # 40f0b0 <memset@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <strnlen@plt>:
  403170:	jmp    QWORD PTR [rip+0xbf42]        # 40f0b8 <strnlen@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <fprintf@plt>:
  403180:	jmp    QWORD PTR [rip+0xbf3a]        # 40f0c0 <fprintf@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <ftell@plt>:
  403190:	jmp    QWORD PTR [rip+0xbf32]        # 40f0c8 <ftell@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <strtol@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xbf2a]        # 40f0d0 <strtol@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <memcpy@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xbf22]        # 40f0d8 <memcpy@GLIBC_2.14>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <prctl@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xbf1a]        # 40f0e0 <prctl@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <malloc@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xbf12]        # 40f0e8 <malloc@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fflush@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xbf0a]        # 40f0f0 <fflush@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <fseek@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xbf02]        # 40f0f8 <fseek@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <realloc@plt>:
  403200:	jmp    QWORD PTR [rip+0xbefa]        # 40f100 <realloc@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <fdopen@plt>:
  403210:	jmp    QWORD PTR [rip+0xbef2]        # 40f108 <fdopen@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <munmap@plt>:
  403220:	jmp    QWORD PTR [rip+0xbeea]        # 40f110 <munmap@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <open@plt>:
  403230:	jmp    QWORD PTR [rip+0xbee2]        # 40f118 <open@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <__cxa_atexit@plt>:
  403240:	jmp    QWORD PTR [rip+0xbeda]        # 40f120 <__cxa_atexit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <exit@plt>:
  403250:	jmp    QWORD PTR [rip+0xbed2]        # 40f128 <exit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <fwrite@plt>:
  403260:	jmp    QWORD PTR [rip+0xbeca]        # 40f130 <fwrite@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strdup@plt>:
  403270:	jmp    QWORD PTR [rip+0xbec2]        # 40f138 <strdup@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strerror@plt>:
  403280:	jmp    QWORD PTR [rip+0xbeba]        # 40f140 <strerror@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403290 <_start@@Base>:
  403290:	endbr64 
  403294:	xor    ebp,ebp
  403296:	mov    r9,rdx
  403299:	pop    rsi
  40329a:	mov    rdx,rsp
  40329d:	and    rsp,0xfffffffffffffff0
  4032a1:	push   rax
  4032a2:	push   rsp
  4032a3:	mov    r8,0x4098b0
  4032aa:	mov    rcx,0x409840
  4032b1:	mov    rdi,0x404fe0
  4032b8:	call   QWORD PTR [rip+0xbd2a]        # 40efe8 <__libc_start_main@GLIBC_2.2.5>
  4032be:	hlt    
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	ret    
  4032c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032cf:	nop
  4032d0:	mov    eax,0x40f170
  4032d5:	cmp    rax,0x40f170
  4032db:	je     4032f0 <_start@@Base+0x60>
  4032dd:	mov    eax,0x0
  4032e2:	test   rax,rax
  4032e5:	je     4032f0 <_start@@Base+0x60>
  4032e7:	mov    edi,0x40f170
  4032ec:	jmp    rax
  4032ee:	xchg   ax,ax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	mov    esi,0x40f170
  403305:	sub    rsi,0x40f170
  40330c:	mov    rax,rsi
  40330f:	shr    rsi,0x3f
  403313:	sar    rax,0x3
  403317:	add    rsi,rax
  40331a:	sar    rsi,1
  40331d:	je     403330 <_start@@Base+0xa0>
  40331f:	mov    eax,0x0
  403324:	test   rax,rax
  403327:	je     403330 <_start@@Base+0xa0>
  403329:	mov    edi,0x40f170
  40332e:	jmp    rax
  403330:	ret    
  403331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	endbr64 
  403344:	cmp    BYTE PTR [rip+0xbe25],0x0        # 40f170 <__bss_start@@Base>
  40334b:	jne    403360 <_start@@Base+0xd0>
  40334d:	push   rbp
  40334e:	mov    rbp,rsp
  403351:	call   4032d0 <_start@@Base+0x40>
  403356:	mov    BYTE PTR [rip+0xbe13],0x1        # 40f170 <__bss_start@@Base>
  40335d:	pop    rbp
  40335e:	ret    
  40335f:	nop
  403360:	ret    
  403361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	endbr64 
  403374:	jmp    403300 <_start@@Base+0x70>
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403380 <next@@Base>:
  403380:	add    QWORD PTR [rip+0xbdf8],0x1        # 40f180 <__bss_start@@Base+0x10>
  403388:	lea    r8,[rip+0xbdf1]        # 40f180 <__bss_start@@Base+0x10>
  40338f:	lea    rax,[rip+0xce3a]        # 4101d0 <next_fake@@Base>
  403396:	mov    QWORD PTR [rax],rdi
  403399:	mov    edx,DWORD PTR [rax+0x198]
  40339f:	xor    esi,esi
  4033a1:	cmp    rdx,0x31
  4033a5:	seta   sil
  4033a9:	add    QWORD PTR [r8+rsi*8+0x8],0x1
  4033af:	cmp    rdx,0x31
  4033b3:	ja     4033ca <next@@Base+0x4a>
  4033b5:	add    QWORD PTR [rip+0xbddb],0x1        # 40f198 <__bss_start@@Base+0x28>
  4033bd:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
  4033c2:	mov    edx,DWORD PTR [rax+0x198]
  4033c8:	jmp    4033d9 <next@@Base+0x59>
  4033ca:	add    QWORD PTR [rip+0xbdce],0x1        # 40f1a0 <__bss_start@@Base+0x30>
  4033d2:	add    DWORD PTR [rax+0x1a0],0x1
  4033d9:	add    edx,0x1
  4033dc:	mov    DWORD PTR [rax+0x198],edx
  4033e2:	lea    rdx,[rip+0xcfaf]        # 410398 <fff@@Base>
  4033e9:	mov    esi,DWORD PTR [rdx+0x190]
  4033ef:	xor    ecx,ecx
  4033f1:	cmp    rsi,0x31
  4033f5:	seta   cl
  4033f8:	add    QWORD PTR [r8+rcx*8+0x28],0x1
  4033fe:	cmp    rsi,0x31
  403402:	ja     403420 <next@@Base+0xa0>
  403404:	add    QWORD PTR [rip+0xbdac],0x1        # 40f1b8 <__bss_start@@Base+0x48>
  40340c:	lea    ecx,[rsi+0x1]
  40340f:	mov    DWORD PTR [rdx+0x190],ecx
  403415:	lea    rcx,[rip+0xffffffffffffff64]        # 403380 <next@@Base>
  40341c:	mov    QWORD PTR [rdx+rsi*8],rcx
  403420:	mov    rdx,QWORD PTR [rax+0x1c0]
  403427:	xor    ecx,ecx
  403429:	test   rdx,rdx
  40342c:	sete   cl
  40342f:	add    QWORD PTR [r8+rcx*8+0x40],0x1
  403435:	test   rdx,rdx
  403438:	je     403452 <next@@Base+0xd2>
  40343a:	push   rax
  40343b:	add    QWORD PTR [rip+0xbd8d],0x1        # 40f1d0 <__bss_start@@Base+0x60>
  403443:	call   rdx
  403445:	add    rsp,0x8
  403449:	add    QWORD PTR [rip+0xbdbf],0x1        # 40f210 <__bss_start@@Base+0xa0>
  403451:	ret    
  403452:	movsxd rdx,DWORD PTR [rax+0x1b0]
  403459:	xor    ecx,ecx
  40345b:	test   rdx,rdx
  40345e:	sete   cl
  403461:	add    QWORD PTR [r8+rcx*8+0x58],0x1
  403467:	test   rdx,rdx
  40346a:	je     4034a9 <next@@Base+0x129>
  40346c:	movsxd rsi,DWORD PTR [rax+0x1b4]
  403473:	xor    ecx,ecx
  403475:	cmp    esi,edx
  403477:	setge  cl
  40347a:	mov    rdi,QWORD PTR [rax+0x1b8]
  403481:	add    QWORD PTR [r8+rcx*8+0x68],0x1
  403487:	cmp    esi,edx
  403489:	jge    4034c1 <next@@Base+0x141>
  40348b:	add    QWORD PTR [rip+0xbd65],0x1        # 40f1f8 <__bss_start@@Base+0x88>
  403493:	lea    ecx,[rsi+0x1]
  403496:	mov    DWORD PTR [rax+0x1b4],ecx
  40349c:	mov    rax,QWORD PTR [rdi+rsi*8]
  4034a0:	add    QWORD PTR [rip+0xbd68],0x1        # 40f210 <__bss_start@@Base+0xa0>
  4034a8:	ret    
  4034a9:	add    QWORD PTR [rip+0xbd57],0x1        # 40f208 <__bss_start@@Base+0x98>
  4034b1:	mov    rax,QWORD PTR [rax+0x1a8]
  4034b8:	add    QWORD PTR [rip+0xbd50],0x1        # 40f210 <__bss_start@@Base+0xa0>
  4034c0:	ret    
  4034c1:	add    QWORD PTR [rip+0xbd37],0x1        # 40f200 <__bss_start@@Base+0x90>
  4034c9:	mov    rax,QWORD PTR [rdi+rdx*8-0x8]
  4034ce:	add    QWORD PTR [rip+0xbd3a],0x1        # 40f210 <__bss_start@@Base+0xa0>
  4034d6:	ret    
  4034d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004034e0 <next_reset@@Base>:
  4034e0:	vmovdqa xmm0,XMMWORD PTR [rip+0xbd38]        # 40f220 <__bss_start@@Base+0xb0>
  4034e8:	vpcmpeqd xmm1,xmm1,xmm1
  4034ec:	vpsubq xmm0,xmm0,xmm1
  4034f0:	vmovdqa XMMWORD PTR [rip+0xbd28],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4034f8:	vpxor  xmm0,xmm0,xmm0
  4034fc:	lea    rax,[rip+0xcccd]        # 4101d0 <next_fake@@Base>
  403503:	vmovdqu YMMWORD PTR [rax+0x180],ymm0
  40350b:	vmovdqu YMMWORD PTR [rax+0x1a0],ymm0
  403513:	vmovdqu YMMWORD PTR [rax+0x160],ymm0
  40351b:	vmovdqu YMMWORD PTR [rax+0x140],ymm0
  403523:	vmovdqu YMMWORD PTR [rax+0x120],ymm0
  40352b:	vmovdqu YMMWORD PTR [rax+0x100],ymm0
  403533:	vmovdqu YMMWORD PTR [rax+0xe0],ymm0
  40353b:	vmovdqu YMMWORD PTR [rax+0xc0],ymm0
  403543:	vmovdqu YMMWORD PTR [rax+0xa0],ymm0
  40354b:	vmovdqu YMMWORD PTR [rax+0x80],ymm0
  403553:	vmovdqu YMMWORD PTR [rax+0x60],ymm0
  403558:	vmovdqu YMMWORD PTR [rax+0x40],ymm0
  40355d:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  403562:	vmovdqu YMMWORD PTR [rax],ymm0
  403566:	mov    QWORD PTR [rax+0x1c0],0x0
  403571:	mov    DWORD PTR [rax+0x19c],0x32
  40357b:	vzeroupper 
  40357e:	ret    
  40357f:	nop

0000000000403580 <push_back@@Base>:
  403580:	lea    r8,[rip+0xbca9]        # 40f230 <__bss_start@@Base+0xc0>
  403587:	add    QWORD PTR [rip+0xbca1],0x1        # 40f230 <__bss_start@@Base+0xc0>
  40358f:	lea    rcx,[rip+0xc8f2]        # 40fe88 <push_back_fake@@Base>
  403596:	mov    QWORD PTR [rcx],rdi
  403599:	mov    QWORD PTR [rcx+0x198],rsi
  4035a0:	mov    edx,DWORD PTR [rcx+0x330]
  4035a6:	xor    eax,eax
  4035a8:	cmp    rdx,0x31
  4035ac:	seta   al
  4035af:	add    QWORD PTR [r8+rax*8+0x8],0x1
  4035b5:	cmp    rdx,0x31
  4035b9:	ja     4035de <push_back@@Base+0x5e>
  4035bb:	add    QWORD PTR [rip+0xbc85],0x1        # 40f248 <__bss_start@@Base+0xd8>
  4035c3:	mov    QWORD PTR [rcx+rdx*8+0x8],rdi
  4035c8:	mov    eax,DWORD PTR [rcx+0x330]
  4035ce:	mov    QWORD PTR [rcx+rax*8+0x1a0],rsi
  4035d6:	mov    edx,DWORD PTR [rcx+0x330]
  4035dc:	jmp    4035ed <push_back@@Base+0x6d>
  4035de:	add    QWORD PTR [rip+0xbc6a],0x1        # 40f250 <__bss_start@@Base+0xe0>
  4035e6:	add    DWORD PTR [rcx+0x338],0x1
  4035ed:	add    edx,0x1
  4035f0:	mov    DWORD PTR [rcx+0x330],edx
  4035f6:	lea    r9,[rip+0xcd9b]        # 410398 <fff@@Base>
  4035fd:	mov    eax,DWORD PTR [r9+0x190]
  403604:	xor    edx,edx
  403606:	cmp    rax,0x31
  40360a:	seta   dl
  40360d:	add    QWORD PTR [r8+rdx*8+0x28],0x1
  403613:	cmp    rax,0x31
  403617:	ja     403636 <push_back@@Base+0xb6>
  403619:	add    QWORD PTR [rip+0xbc47],0x1        # 40f268 <__bss_start@@Base+0xf8>
  403621:	lea    edx,[rax+0x1]
  403624:	mov    DWORD PTR [r9+0x190],edx
  40362b:	lea    rdx,[rip+0xffffffffffffff4e]        # 403580 <push_back@@Base>
  403632:	mov    QWORD PTR [r9+rax*8],rdx
  403636:	mov    rax,QWORD PTR [rcx+0x340]
  40363d:	xor    ecx,ecx
  40363f:	test   rax,rax
  403642:	sete   cl
  403645:	add    QWORD PTR [r8+rcx*8+0x40],0x1
  40364b:	test   rax,rax
  40364e:	je     40365f <push_back@@Base+0xdf>
  403650:	push   rax
  403651:	add    QWORD PTR [rip+0xbc27],0x1        # 40f280 <__bss_start@@Base+0x110>
  403659:	call   rax
  40365b:	add    rsp,0x8
  40365f:	add    QWORD PTR [rip+0xbc21],0x1        # 40f288 <__bss_start@@Base+0x118>
  403667:	ret    
  403668:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403670 <push_back_reset@@Base>:
  403670:	push   rbx
  403671:	vmovdqa xmm0,XMMWORD PTR [rip+0xbc17]        # 40f290 <__bss_start@@Base+0x120>
  403679:	vpcmpeqd xmm1,xmm1,xmm1
  40367d:	vpsubq xmm0,xmm0,xmm1
  403681:	vmovdqa XMMWORD PTR [rip+0xbc07],xmm0        # 40f290 <__bss_start@@Base+0x120>
  403689:	lea    rbx,[rip+0xc7f8]        # 40fe88 <push_back_fake@@Base>
  403690:	xor    esi,esi
  403692:	mov    edx,0x348
  403697:	mov    rdi,rbx
  40369a:	call   403160 <memset@plt>
  40369f:	mov    DWORD PTR [rbx+0x334],0x32
  4036a9:	pop    rbx
  4036aa:	ret    
  4036ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036b0 <setup@@Base>:
  4036b0:	push   rbx
  4036b1:	vmovdqa xmm0,XMMWORD PTR [rip+0xbbe7]        # 40f2a0 <__bss_start@@Base+0x130>
  4036b9:	vpcmpeqd xmm1,xmm1,xmm1
  4036bd:	vpsubq xmm0,xmm0,xmm1
  4036c1:	vmovdqa XMMWORD PTR [rip+0xbbd7],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4036c9:	vmovdqa xmm0,XMMWORD PTR [rip+0xbb4f]        # 40f220 <__bss_start@@Base+0xb0>
  4036d1:	vpsubq xmm0,xmm0,xmm1
  4036d5:	vmovdqa XMMWORD PTR [rip+0xbb43],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4036dd:	vpxor  xmm0,xmm0,xmm0
  4036e1:	lea    rax,[rip+0xcae8]        # 4101d0 <next_fake@@Base>
  4036e8:	vmovdqu YMMWORD PTR [rax+0x180],ymm0
  4036f0:	vmovdqu YMMWORD PTR [rax+0x1a0],ymm0
  4036f8:	vmovdqu YMMWORD PTR [rax+0x160],ymm0
  403700:	vmovdqu YMMWORD PTR [rax+0x140],ymm0
  403708:	vmovdqu YMMWORD PTR [rax+0x120],ymm0
  403710:	vmovdqu YMMWORD PTR [rax+0x100],ymm0
  403718:	vmovdqu YMMWORD PTR [rax+0xe0],ymm0
  403720:	vmovdqu YMMWORD PTR [rax+0xc0],ymm0
  403728:	vmovdqu YMMWORD PTR [rax+0xa0],ymm0
  403730:	vmovdqu YMMWORD PTR [rax+0x80],ymm0
  403738:	vmovdqu YMMWORD PTR [rax+0x60],ymm0
  40373d:	vmovdqu YMMWORD PTR [rax+0x40],ymm0
  403742:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  403747:	vmovdqu YMMWORD PTR [rax],ymm0
  40374b:	mov    QWORD PTR [rax+0x1c0],0x0
  403756:	mov    DWORD PTR [rax+0x19c],0x32
  403760:	vmovdqa xmm0,XMMWORD PTR [rip+0xbb28]        # 40f290 <__bss_start@@Base+0x120>
  403768:	vpsubq xmm0,xmm0,xmm1
  40376c:	vmovdqa XMMWORD PTR [rip+0xbb1c],xmm0        # 40f290 <__bss_start@@Base+0x120>
  403774:	lea    rbx,[rip+0xc70d]        # 40fe88 <push_back_fake@@Base>
  40377b:	xor    esi,esi
  40377d:	mov    edx,0x348
  403782:	mov    rdi,rbx
  403785:	vzeroupper 
  403788:	call   403160 <memset@plt>
  40378d:	mov    DWORD PTR [rbx+0x334],0x32
  403797:	pop    rbx
  403798:	ret    
  403799:	nop    DWORD PTR [rax+0x0]

00000000004037a0 <no_int_as_first_stuff@@Base>:
  4037a0:	push   r15
  4037a2:	push   r14
  4037a4:	push   r12
  4037a6:	push   rbx
  4037a7:	sub    rsp,0x28
  4037ab:	lea    r15,[rip+0xbafe]        # 40f2b0 <__bss_start@@Base+0x140>
  4037b2:	add    QWORD PTR [rip+0xbaf6],0x1        # 40f2b0 <__bss_start@@Base+0x140>
  4037ba:	lea    r14,[rsp+0x8]
  4037bf:	lea    rsi,[rsp+0x10]
  4037c4:	mov    rdi,r14
  4037c7:	call   406f70 <init_grammar@@Base>
  4037cc:	mov    edi,0x4
  4037d1:	call   4031d0 <malloc@plt>
  4037d6:	mov    rbx,rax
  4037d9:	mov    rdi,rax
  4037dc:	call   405f30 <init_token_opar@@Base>
  4037e1:	lea    r12,[rip+0xc9e8]        # 4101d0 <next_fake@@Base>
  4037e8:	mov    QWORD PTR [r12+0x1a8],rbx
  4037f0:	mov    rdi,r14
  4037f3:	call   406fd0 <read_function_ast_node@@Base>
  4037f8:	mov    ecx,DWORD PTR [r12+0x198]
  403800:	xor    edx,edx
  403802:	cmp    ecx,0x1
  403805:	setne  dl
  403808:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  40380e:	cmp    ecx,0x1
  403811:	jne    40383a <no_int_as_first_stuff@@Base+0x9a>
  403813:	xor    ecx,ecx
  403815:	test   rax,rax
  403818:	setne  cl
  40381b:	add    QWORD PTR [r15+rcx*8+0x18],0x1
  403821:	test   rax,rax
  403824:	jne    403859 <no_int_as_first_stuff@@Base+0xb9>
  403826:	add    QWORD PTR [rip+0xbaaa],0x1        # 40f2d8 <__bss_start@@Base+0x168>
  40382e:	add    rsp,0x28
  403832:	pop    rbx
  403833:	pop    r12
  403835:	pop    r14
  403837:	pop    r15
  403839:	ret    
  40383a:	lea    rdi,[rip+0x67c3]        # 40a004 <_IO_stdin_used@@Base+0x4>
  403841:	lea    rsi,[rip+0x67d6]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403848:	lea    rcx,[rip+0x682d]        # 40a07c <_IO_stdin_used@@Base+0x7c>
  40384f:	mov    edx,0x29
  403854:	call   403150 <__assert_fail@plt>
  403859:	lea    rdi,[rip+0x6839]        # 40a099 <_IO_stdin_used@@Base+0x99>
  403860:	lea    rsi,[rip+0x67b7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403867:	lea    rcx,[rip+0x680e]        # 40a07c <_IO_stdin_used@@Base+0x7c>
  40386e:	mov    edx,0x2a
  403873:	call   403150 <__assert_fail@plt>
  403878:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403880 <int_but_not_followed_by_function@@Base>:
  403880:	push   r15
  403882:	push   r14
  403884:	push   r12
  403886:	push   rbx
  403887:	sub    rsp,0x28
  40388b:	lea    r15,[rip+0xba4e]        # 40f2e0 <__bss_start@@Base+0x170>
  403892:	add    QWORD PTR [rip+0xba46],0x1        # 40f2e0 <__bss_start@@Base+0x170>
  40389a:	lea    r14,[rsp+0x8]
  40389f:	lea    rsi,[rsp+0x10]
  4038a4:	mov    rdi,r14
  4038a7:	call   406f70 <init_grammar@@Base>
  4038ac:	mov    edi,0x10
  4038b1:	call   4031d0 <malloc@plt>
  4038b6:	mov    rbx,rax
  4038b9:	mov    edi,0x4
  4038be:	call   4031d0 <malloc@plt>
  4038c3:	mov    QWORD PTR [rbx],rax
  4038c6:	mov    rdi,rax
  4038c9:	call   405eb0 <init_token_int_type@@Base>
  4038ce:	mov    edi,0x4
  4038d3:	call   4031d0 <malloc@plt>
  4038d8:	mov    QWORD PTR [rbx+0x8],rax
  4038dc:	mov    rdi,rax
  4038df:	call   405f30 <init_token_opar@@Base>
  4038e4:	lea    r12,[rip+0xc8e5]        # 4101d0 <next_fake@@Base>
  4038eb:	mov    QWORD PTR [r12+0x1b8],rbx
  4038f3:	mov    DWORD PTR [r12+0x1b0],0x2
  4038ff:	mov    rdi,r14
  403902:	call   406fd0 <read_function_ast_node@@Base>
  403907:	mov    ecx,DWORD PTR [r12+0x198]
  40390f:	xor    edx,edx
  403911:	cmp    ecx,0x2
  403914:	setne  dl
  403917:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  40391d:	cmp    ecx,0x2
  403920:	jne    403949 <int_but_not_followed_by_function@@Base+0xc9>
  403922:	xor    ecx,ecx
  403924:	test   rax,rax
  403927:	setne  cl
  40392a:	add    QWORD PTR [r15+rcx*8+0x18],0x1
  403930:	test   rax,rax
  403933:	jne    403968 <int_but_not_followed_by_function@@Base+0xe8>
  403935:	add    QWORD PTR [rip+0xb9cb],0x1        # 40f308 <__bss_start@@Base+0x198>
  40393d:	add    rsp,0x28
  403941:	pop    rbx
  403942:	pop    r12
  403944:	pop    r14
  403946:	pop    r15
  403948:	ret    
  403949:	lea    rdi,[rip+0x6755]        # 40a0a5 <_IO_stdin_used@@Base+0xa5>
  403950:	lea    rsi,[rip+0x66c7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403957:	lea    rcx,[rip+0x6761]        # 40a0bf <_IO_stdin_used@@Base+0xbf>
  40395e:	mov    edx,0x43
  403963:	call   403150 <__assert_fail@plt>
  403968:	lea    rdi,[rip+0x672a]        # 40a099 <_IO_stdin_used@@Base+0x99>
  40396f:	lea    rsi,[rip+0x66a8]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403976:	lea    rcx,[rip+0x6742]        # 40a0bf <_IO_stdin_used@@Base+0xbf>
  40397d:	mov    edx,0x44
  403982:	call   403150 <__assert_fail@plt>
  403987:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403990 <boolean_expression_is_read_properly@@Base>:
  403990:	push   r15
  403992:	push   r14
  403994:	push   r12
  403996:	push   rbx
  403997:	sub    rsp,0x28
  40399b:	lea    r12,[rip+0xb96e]        # 40f310 <__bss_start@@Base+0x1a0>
  4039a2:	add    QWORD PTR [rip+0xb966],0x1        # 40f310 <__bss_start@@Base+0x1a0>
  4039aa:	mov    edi,0x3
  4039af:	call   4031d0 <malloc@plt>
  4039b4:	mov    r15,rax
  4039b7:	mov    WORD PTR [rax],0x3d21
  4039bc:	mov    BYTE PTR [rax+0x2],0x0
  4039c0:	lea    r14,[rsp+0x8]
  4039c5:	lea    rsi,[rsp+0x10]
  4039ca:	mov    rdi,r14
  4039cd:	call   406f70 <init_grammar@@Base>
  4039d2:	mov    edi,0x28
  4039d7:	call   4031d0 <malloc@plt>
  4039dc:	mov    rbx,rax
  4039df:	mov    edi,0x8
  4039e4:	call   4031d0 <malloc@plt>
  4039e9:	mov    QWORD PTR [rbx],rax
  4039ec:	mov    esi,0x2
  4039f1:	mov    rdi,rax
  4039f4:	call   405ed0 <init_token_int_value@@Base>
  4039f9:	mov    edi,0x8
  4039fe:	call   4031d0 <malloc@plt>
  403a03:	mov    QWORD PTR [rbx+0x8],rax
  403a07:	mov    esi,0x2
  403a0c:	mov    rdi,rax
  403a0f:	call   405ed0 <init_token_int_value@@Base>
  403a14:	mov    edi,0x10
  403a19:	call   4031d0 <malloc@plt>
  403a1e:	mov    QWORD PTR [rbx+0x10],rax
  403a22:	mov    rdi,rax
  403a25:	mov    rsi,r15
  403a28:	call   406050 <init_token_boolean_op@@Base>
  403a2d:	mov    edi,0x8
  403a32:	call   4031d0 <malloc@plt>
  403a37:	mov    QWORD PTR [rbx+0x18],rax
  403a3b:	mov    esi,0x1
  403a40:	mov    rdi,rax
  403a43:	call   405ed0 <init_token_int_value@@Base>
  403a48:	mov    edi,0x4
  403a4d:	call   4031d0 <malloc@plt>
  403a52:	mov    QWORD PTR [rbx+0x20],rax
  403a56:	mov    rdi,rax
  403a59:	call   405f50 <init_token_cpar@@Base>
  403a5e:	lea    r15,[rip+0xc76b]        # 4101d0 <next_fake@@Base>
  403a65:	mov    QWORD PTR [r15+0x1b8],rbx
  403a6c:	mov    DWORD PTR [r15+0x1b0],0x5
  403a77:	mov    rdi,r14
  403a7a:	call   407490 <read_boolean_expression@@Base>
  403a7f:	mov    ecx,DWORD PTR [r15+0x198]
  403a86:	xor    edx,edx
  403a88:	cmp    ecx,0x5
  403a8b:	setne  dl
  403a8e:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  403a94:	cmp    ecx,0x5
  403a97:	jne    403ae2 <boolean_expression_is_read_properly@@Base+0x152>
  403a99:	lea    rcx,[rip+0xc3e8]        # 40fe88 <push_back_fake@@Base>
  403aa0:	mov    ecx,DWORD PTR [rcx+0x330]
  403aa6:	xor    edx,edx
  403aa8:	cmp    ecx,0x1
  403aab:	setne  dl
  403aae:	add    QWORD PTR [r12+rdx*8+0x18],0x1
  403ab4:	cmp    ecx,0x1
  403ab7:	jne    403b01 <boolean_expression_is_read_properly@@Base+0x171>
  403ab9:	mov    eax,DWORD PTR [rax]
  403abb:	xor    ecx,ecx
  403abd:	cmp    eax,0x5
  403ac0:	setne  cl
  403ac3:	add    QWORD PTR [r12+rcx*8+0x28],0x1
  403ac9:	cmp    eax,0x5
  403acc:	jne    403b20 <boolean_expression_is_read_properly@@Base+0x190>
  403ace:	add    QWORD PTR [rip+0xb872],0x1        # 40f348 <__bss_start@@Base+0x1d8>
  403ad6:	add    rsp,0x28
  403ada:	pop    rbx
  403adb:	pop    r12
  403add:	pop    r14
  403adf:	pop    r15
  403ae1:	ret    
  403ae2:	lea    rdi,[rip+0x65fe]        # 40a0e7 <_IO_stdin_used@@Base+0xe7>
  403ae9:	lea    rsi,[rip+0x652e]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403af0:	lea    rcx,[rip+0x660a]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403af7:	mov    edx,0x69
  403afc:	call   403150 <__assert_fail@plt>
  403b01:	lea    rdi,[rip+0x6624]        # 40a12c <_IO_stdin_used@@Base+0x12c>
  403b08:	lea    rsi,[rip+0x650f]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403b0f:	lea    rcx,[rip+0x65eb]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403b16:	mov    edx,0x6a
  403b1b:	call   403150 <__assert_fail@plt>
  403b20:	lea    rdi,[rip+0x6624]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403b27:	lea    rsi,[rip+0x64f0]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403b2e:	lea    rcx,[rip+0x65cc]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403b35:	mov    edx,0x6b
  403b3a:	call   403150 <__assert_fail@plt>
  403b3f:	nop

0000000000403b40 <boolean_expression_complex@@Base>:
  403b40:	push   rbp
  403b41:	push   r15
  403b43:	push   r14
  403b45:	push   r13
  403b47:	push   r12
  403b49:	push   rbx
  403b4a:	sub    rsp,0x28
  403b4e:	add    QWORD PTR [rip+0xb7fa],0x1        # 40f350 <__bss_start@@Base+0x1e0>
  403b56:	mov    edi,0x3
  403b5b:	call   4031d0 <malloc@plt>
  403b60:	mov    r13,rax
  403b63:	mov    edi,0x3
  403b68:	call   4031d0 <malloc@plt>
  403b6d:	mov    r12,rax
  403b70:	mov    edi,0x3
  403b75:	call   4031d0 <malloc@plt>
  403b7a:	mov    r15,rax
  403b7d:	mov    WORD PTR [r13+0x0],0x3d3c
  403b84:	mov    BYTE PTR [r13+0x2],0x0
  403b89:	mov    WORD PTR [r12],0x2626
  403b90:	mov    BYTE PTR [r12+0x2],0x0
  403b96:	mov    WORD PTR [rax],0x3d3d
  403b9b:	mov    BYTE PTR [rax+0x2],0x0
  403b9f:	lea    r14,[rsp+0x8]
  403ba4:	lea    rsi,[rsp+0x10]
  403ba9:	mov    rdi,r14
  403bac:	call   406f70 <init_grammar@@Base>
  403bb1:	mov    edi,0x50
  403bb6:	call   4031d0 <malloc@plt>
  403bbb:	mov    rbx,rax
  403bbe:	mov    edi,0x8
  403bc3:	call   4031d0 <malloc@plt>
  403bc8:	mov    QWORD PTR [rbx],rax
  403bcb:	mov    esi,0x2
  403bd0:	mov    rdi,rax
  403bd3:	call   405ed0 <init_token_int_value@@Base>
  403bd8:	mov    edi,0x8
  403bdd:	call   4031d0 <malloc@plt>
  403be2:	mov    QWORD PTR [rbx+0x8],rax
  403be6:	mov    esi,0x2
  403beb:	mov    rdi,rax
  403bee:	call   405ed0 <init_token_int_value@@Base>
  403bf3:	mov    edi,0x10
  403bf8:	call   4031d0 <malloc@plt>
  403bfd:	mov    QWORD PTR [rbx+0x10],rax
  403c01:	mov    rdi,rax
  403c04:	mov    rsi,r13
  403c07:	call   406050 <init_token_boolean_op@@Base>
  403c0c:	mov    edi,0x8
  403c11:	call   4031d0 <malloc@plt>
  403c16:	mov    QWORD PTR [rbx+0x18],rax
  403c1a:	mov    esi,0x1
  403c1f:	mov    rdi,rax
  403c22:	call   405ed0 <init_token_int_value@@Base>
  403c27:	mov    edi,0x10
  403c2c:	call   4031d0 <malloc@plt>
  403c31:	mov    QWORD PTR [rbx+0x20],rax
  403c35:	mov    rdi,rax
  403c38:	mov    rsi,r12
  403c3b:	call   406050 <init_token_boolean_op@@Base>
  403c40:	mov    edi,0x8
  403c45:	call   4031d0 <malloc@plt>
  403c4a:	mov    QWORD PTR [rbx+0x28],rax
  403c4e:	mov    esi,0x4
  403c53:	mov    rdi,rax
  403c56:	call   405ed0 <init_token_int_value@@Base>
  403c5b:	mov    edi,0x8
  403c60:	call   4031d0 <malloc@plt>
  403c65:	mov    QWORD PTR [rbx+0x30],rax
  403c69:	mov    esi,0x4
  403c6e:	mov    rdi,rax
  403c71:	call   405ed0 <init_token_int_value@@Base>
  403c76:	mov    edi,0x10
  403c7b:	call   4031d0 <malloc@plt>
  403c80:	mov    QWORD PTR [rbx+0x38],rax
  403c84:	mov    rdi,rax
  403c87:	mov    rsi,r15
  403c8a:	call   406050 <init_token_boolean_op@@Base>
  403c8f:	mov    edi,0x8
  403c94:	call   4031d0 <malloc@plt>
  403c99:	mov    QWORD PTR [rbx+0x40],rax
  403c9d:	mov    esi,0x4
  403ca2:	mov    rdi,rax
  403ca5:	call   405ed0 <init_token_int_value@@Base>
  403caa:	mov    edi,0x4
  403caf:	call   4031d0 <malloc@plt>
  403cb4:	mov    QWORD PTR [rbx+0x48],rax
  403cb8:	mov    rdi,rax
  403cbb:	call   405f50 <init_token_cpar@@Base>
  403cc0:	lea    rbp,[rip+0xc509]        # 4101d0 <next_fake@@Base>
  403cc7:	mov    QWORD PTR [rbp+0x1b8],rbx
  403cce:	mov    DWORD PTR [rbp+0x1b0],0xa
  403cd8:	mov    rdi,r14
  403cdb:	call   407490 <read_boolean_expression@@Base>
  403ce0:	mov    ecx,DWORD PTR [rbp+0x198]
  403ce6:	xor    edx,edx
  403ce8:	cmp    ecx,0xa
  403ceb:	setne  dl
  403cee:	lea    rsi,[rip+0xb65b]        # 40f350 <__bss_start@@Base+0x1e0>
  403cf5:	add    QWORD PTR [rsi+rdx*8+0x8],0x1
  403cfb:	cmp    ecx,0xa
  403cfe:	jne    403d2f <boolean_expression_complex@@Base+0x1ef>
  403d00:	mov    rdx,rsi
  403d03:	mov    eax,DWORD PTR [rax]
  403d05:	xor    ecx,ecx
  403d07:	cmp    eax,0x5
  403d0a:	setne  cl
  403d0d:	add    QWORD PTR [rsi+rcx*8+0x18],0x1
  403d13:	cmp    eax,0x5
  403d16:	jne    403d4e <boolean_expression_complex@@Base+0x20e>
  403d18:	add    QWORD PTR [rip+0xb658],0x1        # 40f378 <__bss_start@@Base+0x208>
  403d20:	add    rsp,0x28
  403d24:	pop    rbx
  403d25:	pop    r12
  403d27:	pop    r13
  403d29:	pop    r14
  403d2b:	pop    r15
  403d2d:	pop    rbp
  403d2e:	ret    
  403d2f:	lea    rdi,[rip+0x6435]        # 40a16b <_IO_stdin_used@@Base+0x16b>
  403d36:	lea    rsi,[rip+0x62e1]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403d3d:	lea    rcx,[rip+0x6442]        # 40a186 <_IO_stdin_used@@Base+0x186>
  403d44:	mov    edx,0xa6
  403d49:	call   403150 <__assert_fail@plt>
  403d4e:	lea    rdi,[rip+0x63f6]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403d55:	lea    rsi,[rip+0x62c2]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403d5c:	lea    rcx,[rip+0x6423]        # 40a186 <_IO_stdin_used@@Base+0x186>
  403d63:	mov    edx,0xa7
  403d68:	call   403150 <__assert_fail@plt>
  403d6d:	nop    DWORD PTR [rax]

0000000000403d70 <boolean_binary_operator_is_read_properly@@Base>:
  403d70:	push   r15
  403d72:	push   r14
  403d74:	push   r12
  403d76:	push   rbx
  403d77:	sub    rsp,0x28
  403d7b:	lea    r12,[rip+0xb5fe]        # 40f380 <__bss_start@@Base+0x210>
  403d82:	add    QWORD PTR [rip+0xb5f6],0x1        # 40f380 <__bss_start@@Base+0x210>
  403d8a:	mov    edi,0x3
  403d8f:	call   4031d0 <malloc@plt>
  403d94:	mov    r15,rax
  403d97:	mov    WORD PTR [rax],0x3d21
  403d9c:	mov    BYTE PTR [rax+0x2],0x0
  403da0:	lea    r14,[rsp+0x8]
  403da5:	lea    rsi,[rsp+0x10]
  403daa:	mov    rdi,r14
  403dad:	call   406f70 <init_grammar@@Base>
  403db2:	mov    edi,0x18
  403db7:	call   4031d0 <malloc@plt>
  403dbc:	mov    rbx,rax
  403dbf:	mov    edi,0x8
  403dc4:	call   4031d0 <malloc@plt>
  403dc9:	mov    QWORD PTR [rbx],rax
  403dcc:	mov    esi,0x2
  403dd1:	mov    rdi,rax
  403dd4:	call   405ed0 <init_token_int_value@@Base>
  403dd9:	mov    edi,0x10
  403dde:	call   4031d0 <malloc@plt>
  403de3:	mov    QWORD PTR [rbx+0x8],rax
  403de7:	mov    rdi,rax
  403dea:	mov    rsi,r15
  403ded:	call   406050 <init_token_boolean_op@@Base>
  403df2:	mov    edi,0x8
  403df7:	call   4031d0 <malloc@plt>
  403dfc:	mov    QWORD PTR [rbx+0x10],rax
  403e00:	mov    esi,0x1
  403e05:	mov    rdi,rax
  403e08:	call   405ed0 <init_token_int_value@@Base>
  403e0d:	lea    r15,[rip+0xc3bc]        # 4101d0 <next_fake@@Base>
  403e14:	mov    QWORD PTR [r15+0x1b8],rbx
  403e1b:	mov    DWORD PTR [r15+0x1b0],0x3
  403e26:	mov    rdi,r14
  403e29:	call   407710 <read_boolean_binary_expression@@Base>
  403e2e:	mov    ecx,DWORD PTR [r15+0x198]
  403e35:	xor    edx,edx
  403e37:	cmp    ecx,0x3
  403e3a:	setne  dl
  403e3d:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  403e43:	cmp    ecx,0x3
  403e46:	jne    403ecd <boolean_binary_operator_is_read_properly@@Base+0x15d>
  403e4c:	mov    ecx,DWORD PTR [rax]
  403e4e:	xor    edx,edx
  403e50:	cmp    ecx,0x5
  403e53:	setne  dl
  403e56:	add    QWORD PTR [r12+rdx*8+0x18],0x1
  403e5c:	cmp    ecx,0x5
  403e5f:	jne    403eec <boolean_binary_operator_is_read_properly@@Base+0x17c>
  403e65:	mov    rcx,QWORD PTR [rax+0x10]
  403e69:	mov    ecx,DWORD PTR [rcx]
  403e6b:	xor    edx,edx
  403e6d:	cmp    ecx,0x1
  403e70:	setne  dl
  403e73:	add    QWORD PTR [r12+rdx*8+0x28],0x1
  403e79:	cmp    ecx,0x1
  403e7c:	jne    403f0b <boolean_binary_operator_is_read_properly@@Base+0x19b>
  403e82:	mov    ecx,DWORD PTR [rax+0x20]
  403e85:	xor    edx,edx
  403e87:	cmp    ecx,0x1
  403e8a:	setne  dl
  403e8d:	add    QWORD PTR [r12+rdx*8+0x38],0x1
  403e93:	cmp    ecx,0x1
  403e96:	jne    403f2a <boolean_binary_operator_is_read_properly@@Base+0x1ba>
  403e9c:	mov    rax,QWORD PTR [rax+0x18]
  403ea0:	mov    eax,DWORD PTR [rax]
  403ea2:	xor    ecx,ecx
  403ea4:	cmp    eax,0x1
  403ea7:	setne  cl
  403eaa:	add    QWORD PTR [r12+rcx*8+0x48],0x1
  403eb0:	cmp    eax,0x1
  403eb3:	jne    403f49 <boolean_binary_operator_is_read_properly@@Base+0x1d9>
  403eb9:	add    QWORD PTR [rip+0xb517],0x1        # 40f3d8 <__bss_start@@Base+0x268>
  403ec1:	add    rsp,0x28
  403ec5:	pop    rbx
  403ec6:	pop    r12
  403ec8:	pop    r14
  403eca:	pop    r15
  403ecc:	ret    
  403ecd:	lea    rdi,[rip+0x62d4]        # 40a1a8 <_IO_stdin_used@@Base+0x1a8>
  403ed4:	lea    rsi,[rip+0x6143]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403edb:	lea    rcx,[rip+0x62e0]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403ee2:	mov    edx,0xc8
  403ee7:	call   403150 <__assert_fail@plt>
  403eec:	lea    rdi,[rip+0x6258]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403ef3:	lea    rsi,[rip+0x6124]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403efa:	lea    rcx,[rip+0x62c1]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403f01:	mov    edx,0xc9
  403f06:	call   403150 <__assert_fail@plt>
  403f0b:	lea    rdi,[rip+0x62e0]        # 40a1f2 <_IO_stdin_used@@Base+0x1f2>
  403f12:	lea    rsi,[rip+0x6105]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403f19:	lea    rcx,[rip+0x62a2]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403f20:	mov    edx,0xcb
  403f25:	call   403150 <__assert_fail@plt>
  403f2a:	lea    rdi,[rip+0x62dc]        # 40a20d <_IO_stdin_used@@Base+0x20d>
  403f31:	lea    rsi,[rip+0x60e6]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403f38:	lea    rcx,[rip+0x6283]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403f3f:	mov    edx,0xcc
  403f44:	call   403150 <__assert_fail@plt>
  403f49:	lea    rdi,[rip+0x62d6]        # 40a226 <_IO_stdin_used@@Base+0x226>
  403f50:	lea    rsi,[rip+0x60c7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403f57:	lea    rcx,[rip+0x6264]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403f5e:	mov    edx,0xcd
  403f63:	call   403150 <__assert_fail@plt>
  403f68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f70 <boolean_unary_operator_is_read_properly@@Base>:
  403f70:	push   r15
  403f72:	push   r14
  403f74:	push   r12
  403f76:	push   rbx
  403f77:	sub    rsp,0x28
  403f7b:	lea    r12,[rip+0xb45e]        # 40f3e0 <__bss_start@@Base+0x270>
  403f82:	add    QWORD PTR [rip+0xb456],0x1        # 40f3e0 <__bss_start@@Base+0x270>
  403f8a:	mov    edi,0x2
  403f8f:	call   4031d0 <malloc@plt>
  403f94:	mov    r15,rax
  403f97:	mov    WORD PTR [rax],0x21
  403f9c:	lea    r14,[rsp+0x8]
  403fa1:	lea    rsi,[rsp+0x10]
  403fa6:	mov    rdi,r14
  403fa9:	call   406f70 <init_grammar@@Base>
  403fae:	mov    edi,0x10
  403fb3:	call   4031d0 <malloc@plt>
  403fb8:	mov    rbx,rax
  403fbb:	mov    edi,0x10
  403fc0:	call   4031d0 <malloc@plt>
  403fc5:	mov    QWORD PTR [rbx],rax
  403fc8:	mov    rdi,rax
  403fcb:	mov    rsi,r15
  403fce:	call   406050 <init_token_boolean_op@@Base>
  403fd3:	mov    edi,0x8
  403fd8:	call   4031d0 <malloc@plt>
  403fdd:	mov    QWORD PTR [rbx+0x8],rax
  403fe1:	mov    esi,0x1
  403fe6:	mov    rdi,rax
  403fe9:	call   405ed0 <init_token_int_value@@Base>
  403fee:	lea    r15,[rip+0xc1db]        # 4101d0 <next_fake@@Base>
  403ff5:	mov    QWORD PTR [r15+0x1b8],rbx
  403ffc:	mov    DWORD PTR [r15+0x1b0],0x2
  404007:	mov    rdi,r14
  40400a:	call   407880 <read_boolean_unary_expression@@Base>
  40400f:	mov    ecx,DWORD PTR [r15+0x198]
  404016:	xor    edx,edx
  404018:	cmp    ecx,0x2
  40401b:	setne  dl
  40401e:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  404024:	cmp    ecx,0x2
  404027:	jne    4040a8 <boolean_unary_operator_is_read_properly@@Base+0x138>
  404029:	mov    ecx,DWORD PTR [rax]
  40402b:	xor    edx,edx
  40402d:	cmp    ecx,0x5
  404030:	setne  dl
  404033:	add    QWORD PTR [r12+rdx*8+0x18],0x1
  404039:	cmp    ecx,0x5
  40403c:	jne    4040c7 <boolean_unary_operator_is_read_properly@@Base+0x157>
  404042:	mov    rcx,QWORD PTR [rax+0x10]
  404046:	mov    ecx,DWORD PTR [rcx]
  404048:	xor    edx,edx
  40404a:	cmp    ecx,0x1
  40404d:	setne  dl
  404050:	add    QWORD PTR [r12+rdx*8+0x28],0x1
  404056:	cmp    ecx,0x1
  404059:	jne    4040e6 <boolean_unary_operator_is_read_properly@@Base+0x176>
  40405f:	mov    ecx,DWORD PTR [rax+0x20]
  404062:	xor    edx,edx
  404064:	cmp    ecx,0x8
  404067:	setne  dl
  40406a:	add    QWORD PTR [r12+rdx*8+0x38],0x1
  404070:	cmp    ecx,0x8
  404073:	jne    404105 <boolean_unary_operator_is_read_properly@@Base+0x195>
  404079:	mov    rax,QWORD PTR [rax+0x18]
  40407d:	xor    ecx,ecx
  40407f:	test   rax,rax
  404082:	setne  cl
  404085:	add    QWORD PTR [r12+rcx*8+0x48],0x1
  40408b:	test   rax,rax
  40408e:	jne    404124 <boolean_unary_operator_is_read_properly@@Base+0x1b4>
  404094:	add    QWORD PTR [rip+0xb39c],0x1        # 40f438 <__bss_start@@Base+0x2c8>
  40409c:	add    rsp,0x28
  4040a0:	pop    rbx
  4040a1:	pop    r12
  4040a3:	pop    r14
  4040a5:	pop    r15
  4040a7:	ret    
  4040a8:	lea    rdi,[rip+0x5ff6]        # 40a0a5 <_IO_stdin_used@@Base+0xa5>
  4040af:	lea    rsi,[rip+0x5f68]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4040b6:	lea    rcx,[rip+0x6185]        # 40a242 <_IO_stdin_used@@Base+0x242>
  4040bd:	mov    edx,0xeb
  4040c2:	call   403150 <__assert_fail@plt>
  4040c7:	lea    rdi,[rip+0x607d]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  4040ce:	lea    rsi,[rip+0x5f49]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4040d5:	lea    rcx,[rip+0x6166]        # 40a242 <_IO_stdin_used@@Base+0x242>
  4040dc:	mov    edx,0xec
  4040e1:	call   403150 <__assert_fail@plt>
  4040e6:	lea    rdi,[rip+0x6105]        # 40a1f2 <_IO_stdin_used@@Base+0x1f2>
  4040ed:	lea    rsi,[rip+0x5f2a]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4040f4:	lea    rcx,[rip+0x6147]        # 40a242 <_IO_stdin_used@@Base+0x242>
  4040fb:	mov    edx,0xee
  404100:	call   403150 <__assert_fail@plt>
  404105:	lea    rdi,[rip+0x6165]        # 40a271 <_IO_stdin_used@@Base+0x271>
  40410c:	lea    rsi,[rip+0x5f0b]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404113:	lea    rcx,[rip+0x6128]        # 40a242 <_IO_stdin_used@@Base+0x242>
  40411a:	mov    edx,0xef
  40411f:	call   403150 <__assert_fail@plt>
  404124:	lea    rdi,[rip+0x615a]        # 40a285 <_IO_stdin_used@@Base+0x285>
  40412b:	lea    rsi,[rip+0x5eec]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404132:	lea    rcx,[rip+0x6109]        # 40a242 <_IO_stdin_used@@Base+0x242>
  404139:	mov    edx,0xf0
  40413e:	call   403150 <__assert_fail@plt>
  404143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40414d:	nop    DWORD PTR [rax]

0000000000404150 <if_statement_only@@Base>:
  404150:	push   r15
  404152:	push   r14
  404154:	push   r12
  404156:	push   rbx
  404157:	sub    rsp,0x28
  40415b:	lea    r12,[rip+0xb2de]        # 40f440 <__bss_start@@Base+0x2d0>
  404162:	add    QWORD PTR [rip+0xb2d6],0x1        # 40f440 <__bss_start@@Base+0x2d0>
  40416a:	lea    r14,[rsp+0x8]
  40416f:	lea    rsi,[rsp+0x10]
  404174:	mov    rdi,r14
  404177:	call   406f70 <init_grammar@@Base>
  40417c:	mov    edi,0x3
  404181:	call   4031d0 <malloc@plt>
  404186:	mov    r15,rax
  404189:	mov    WORD PTR [rax],0x3d21
  40418e:	mov    BYTE PTR [rax+0x2],0x0
  404192:	mov    edi,0x48
  404197:	call   4031d0 <malloc@plt>
  40419c:	mov    rbx,rax
  40419f:	mov    edi,0x4
  4041a4:	call   4031d0 <malloc@plt>
  4041a9:	mov    QWORD PTR [rbx],rax
  4041ac:	mov    rdi,rax
  4041af:	call   405f30 <init_token_opar@@Base>
  4041b4:	mov    edi,0x8
  4041b9:	call   4031d0 <malloc@plt>
  4041be:	mov    QWORD PTR [rbx+0x8],rax
  4041c2:	mov    esi,0x1
  4041c7:	mov    rdi,rax
  4041ca:	call   405ed0 <init_token_int_value@@Base>
  4041cf:	mov    edi,0x8
  4041d4:	call   4031d0 <malloc@plt>
  4041d9:	mov    QWORD PTR [rbx+0x10],rax
  4041dd:	mov    esi,0x1
  4041e2:	mov    rdi,rax
  4041e5:	call   405ed0 <init_token_int_value@@Base>
  4041ea:	mov    edi,0x10
  4041ef:	call   4031d0 <malloc@plt>
  4041f4:	mov    QWORD PTR [rbx+0x18],rax
  4041f8:	mov    rdi,rax
  4041fb:	mov    rsi,r15
  4041fe:	call   406050 <init_token_boolean_op@@Base>
  404203:	mov    edi,0x8
  404208:	call   4031d0 <malloc@plt>
  40420d:	mov    QWORD PTR [rbx+0x20],rax
  404211:	mov    esi,0x1
  404216:	mov    rdi,rax
  404219:	call   405ed0 <init_token_int_value@@Base>
  40421e:	mov    edi,0x4
  404223:	call   4031d0 <malloc@plt>
  404228:	mov    QWORD PTR [rbx+0x28],rax
  40422c:	mov    rdi,rax
  40422f:	call   405f50 <init_token_cpar@@Base>
  404234:	mov    edi,0x4
  404239:	call   4031d0 <malloc@plt>
  40423e:	mov    QWORD PTR [rbx+0x30],rax
  404242:	mov    rdi,rax
  404245:	call   405f70 <init_token_obra@@Base>
  40424a:	mov    edi,0x4
  40424f:	call   4031d0 <malloc@plt>
  404254:	mov    QWORD PTR [rbx+0x38],rax
  404258:	mov    rdi,rax
  40425b:	call   405f90 <init_token_cbra@@Base>
  404260:	mov    edi,0x4
  404265:	call   4031d0 <malloc@plt>
  40426a:	mov    QWORD PTR [rbx+0x40],rax
  40426e:	mov    rdi,rax
  404271:	call   405ff0 <init_token_eof@@Base>
  404276:	lea    r15,[rip+0xbf53]        # 4101d0 <next_fake@@Base>
  40427d:	mov    QWORD PTR [r15+0x1b8],rbx
  404284:	mov    DWORD PTR [r15+0x1b0],0x9
  40428f:	mov    rdi,r14
  404292:	call   407390 <read_if_statement@@Base>
  404297:	mov    ecx,DWORD PTR [r15+0x198]
  40429e:	xor    edx,edx
  4042a0:	cmp    ecx,0x9
  4042a3:	setne  dl
  4042a6:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  4042ac:	cmp    ecx,0x9
  4042af:	jne    4042ed <if_statement_only@@Base+0x19d>
  4042b1:	xor    ecx,ecx
  4042b3:	test   rax,rax
  4042b6:	sete   cl
  4042b9:	add    QWORD PTR [r12+rcx*8+0x18],0x1
  4042bf:	test   rax,rax
  4042c2:	je     40430c <if_statement_only@@Base+0x1bc>
  4042c4:	mov    eax,DWORD PTR [rax]
  4042c6:	xor    ecx,ecx
  4042c8:	cmp    eax,0x4
  4042cb:	setne  cl
  4042ce:	add    QWORD PTR [r12+rcx*8+0x28],0x1
  4042d4:	cmp    eax,0x4
  4042d7:	jne    40432b <if_statement_only@@Base+0x1db>
  4042d9:	add    QWORD PTR [rip+0xb197],0x1        # 40f478 <__bss_start@@Base+0x308>
  4042e1:	add    rsp,0x28
  4042e5:	pop    rbx
  4042e6:	pop    r12
  4042e8:	pop    r14
  4042ea:	pop    r15
  4042ec:	ret    
  4042ed:	lea    rdi,[rip+0x5fa6]        # 40a29a <_IO_stdin_used@@Base+0x29a>
  4042f4:	lea    rsi,[rip+0x5d23]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4042fb:	lea    rcx,[rip+0x5fb2]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  404302:	mov    edx,0x11b
  404307:	call   403150 <__assert_fail@plt>
  40430c:	lea    rdi,[rip+0x5fba]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404313:	lea    rsi,[rip+0x5d04]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40431a:	lea    rcx,[rip+0x5f93]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  404321:	mov    edx,0x11c
  404326:	call   403150 <__assert_fail@plt>
  40432b:	lea    rdi,[rip+0x5fa7]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  404332:	lea    rsi,[rip+0x5ce5]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404339:	lea    rcx,[rip+0x5f74]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  404340:	mov    edx,0x11d
  404345:	call   403150 <__assert_fail@plt>
  40434a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404350 <if_else_statements@@Base>:
  404350:	push   r15
  404352:	push   r14
  404354:	push   r12
  404356:	push   rbx
  404357:	sub    rsp,0x28
  40435b:	lea    r12,[rip+0xb11e]        # 40f480 <__bss_start@@Base+0x310>
  404362:	add    QWORD PTR [rip+0xb116],0x1        # 40f480 <__bss_start@@Base+0x310>
  40436a:	lea    r14,[rsp+0x8]
  40436f:	lea    rsi,[rsp+0x10]
  404374:	mov    rdi,r14
  404377:	call   406f70 <init_grammar@@Base>
  40437c:	mov    edi,0x3
  404381:	call   4031d0 <malloc@plt>
  404386:	mov    r15,rax
  404389:	mov    WORD PTR [rax],0x3d21
  40438e:	mov    BYTE PTR [rax+0x2],0x0
  404392:	mov    edi,0x58
  404397:	call   4031d0 <malloc@plt>
  40439c:	mov    rbx,rax
  40439f:	mov    edi,0x4
  4043a4:	call   4031d0 <malloc@plt>
  4043a9:	mov    QWORD PTR [rbx],rax
  4043ac:	mov    rdi,rax
  4043af:	call   405f30 <init_token_opar@@Base>
  4043b4:	mov    edi,0x8
  4043b9:	call   4031d0 <malloc@plt>
  4043be:	mov    QWORD PTR [rbx+0x8],rax
  4043c2:	mov    esi,0x1
  4043c7:	mov    rdi,rax
  4043ca:	call   405ed0 <init_token_int_value@@Base>
  4043cf:	mov    edi,0x8
  4043d4:	call   4031d0 <malloc@plt>
  4043d9:	mov    QWORD PTR [rbx+0x10],rax
  4043dd:	mov    esi,0x1
  4043e2:	mov    rdi,rax
  4043e5:	call   405ed0 <init_token_int_value@@Base>
  4043ea:	mov    edi,0x10
  4043ef:	call   4031d0 <malloc@plt>
  4043f4:	mov    QWORD PTR [rbx+0x18],rax
  4043f8:	mov    rdi,rax
  4043fb:	mov    rsi,r15
  4043fe:	call   406050 <init_token_boolean_op@@Base>
  404403:	mov    edi,0x8
  404408:	call   4031d0 <malloc@plt>
  40440d:	mov    QWORD PTR [rbx+0x20],rax
  404411:	mov    esi,0x1
  404416:	mov    rdi,rax
  404419:	call   405ed0 <init_token_int_value@@Base>
  40441e:	mov    edi,0x4
  404423:	call   4031d0 <malloc@plt>
  404428:	mov    QWORD PTR [rbx+0x28],rax
  40442c:	mov    rdi,rax
  40442f:	call   405f50 <init_token_cpar@@Base>
  404434:	mov    edi,0x4
  404439:	call   4031d0 <malloc@plt>
  40443e:	mov    QWORD PTR [rbx+0x30],rax
  404442:	mov    rdi,rax
  404445:	call   405f70 <init_token_obra@@Base>
  40444a:	mov    edi,0x4
  40444f:	call   4031d0 <malloc@plt>
  404454:	mov    QWORD PTR [rbx+0x38],rax
  404458:	mov    rdi,rax
  40445b:	call   405f90 <init_token_cbra@@Base>
  404460:	mov    edi,0x4
  404465:	call   4031d0 <malloc@plt>
  40446a:	mov    QWORD PTR [rbx+0x40],rax
  40446e:	mov    rdi,rax
  404471:	call   406030 <init_token_else@@Base>
  404476:	mov    edi,0x4
  40447b:	call   4031d0 <malloc@plt>
  404480:	mov    QWORD PTR [rbx+0x48],rax
  404484:	mov    rdi,rax
  404487:	call   405f70 <init_token_obra@@Base>
  40448c:	mov    edi,0x4
  404491:	call   4031d0 <malloc@plt>
  404496:	mov    QWORD PTR [rbx+0x50],rax
  40449a:	mov    rdi,rax
  40449d:	call   405f90 <init_token_cbra@@Base>
  4044a2:	lea    r15,[rip+0xbd27]        # 4101d0 <next_fake@@Base>
  4044a9:	mov    QWORD PTR [r15+0x1b8],rbx
  4044b0:	mov    DWORD PTR [r15+0x1b0],0xb
  4044bb:	mov    rdi,r14
  4044be:	call   407390 <read_if_statement@@Base>
  4044c3:	mov    ecx,DWORD PTR [r15+0x198]
  4044ca:	xor    edx,edx
  4044cc:	cmp    ecx,0xb
  4044cf:	setne  dl
  4044d2:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  4044d8:	cmp    ecx,0xb
  4044db:	jne    404519 <if_else_statements@@Base+0x1c9>
  4044dd:	xor    ecx,ecx
  4044df:	test   rax,rax
  4044e2:	sete   cl
  4044e5:	add    QWORD PTR [r12+rcx*8+0x18],0x1
  4044eb:	test   rax,rax
  4044ee:	je     404538 <if_else_statements@@Base+0x1e8>
  4044f0:	mov    eax,DWORD PTR [rax]
  4044f2:	xor    ecx,ecx
  4044f4:	cmp    eax,0x4
  4044f7:	setne  cl
  4044fa:	add    QWORD PTR [r12+rcx*8+0x28],0x1
  404500:	cmp    eax,0x4
  404503:	jne    404557 <if_else_statements@@Base+0x207>
  404505:	add    QWORD PTR [rip+0xafab],0x1        # 40f4b8 <__bss_start@@Base+0x348>
  40450d:	add    rsp,0x28
  404511:	pop    rbx
  404512:	pop    r12
  404514:	pop    r14
  404516:	pop    r15
  404518:	ret    
  404519:	lea    rdi,[rip+0x5dcb]        # 40a2eb <_IO_stdin_used@@Base+0x2eb>
  404520:	lea    rsi,[rip+0x5af7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404527:	lea    rcx,[rip+0x5dd8]        # 40a306 <_IO_stdin_used@@Base+0x306>
  40452e:	mov    edx,0x14c
  404533:	call   403150 <__assert_fail@plt>
  404538:	lea    rdi,[rip+0x5d8e]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  40453f:	lea    rsi,[rip+0x5ad8]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404546:	lea    rcx,[rip+0x5db9]        # 40a306 <_IO_stdin_used@@Base+0x306>
  40454d:	mov    edx,0x14d
  404552:	call   403150 <__assert_fail@plt>
  404557:	lea    rdi,[rip+0x5d7b]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  40455e:	lea    rsi,[rip+0x5ab9]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404565:	lea    rcx,[rip+0x5d9a]        # 40a306 <_IO_stdin_used@@Base+0x306>
  40456c:	mov    edx,0x14e
  404571:	call   403150 <__assert_fail@plt>
  404576:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404580 <body_with_two_returns@@Base>:
  404580:	push   r15
  404582:	push   r14
  404584:	push   r12
  404586:	push   rbx
  404587:	sub    rsp,0x28
  40458b:	lea    r15,[rip+0xaf2e]        # 40f4c0 <__bss_start@@Base+0x350>
  404592:	add    QWORD PTR [rip+0xaf26],0x1        # 40f4c0 <__bss_start@@Base+0x350>
  40459a:	lea    r14,[rsp+0x8]
  40459f:	lea    rsi,[rsp+0x10]
  4045a4:	mov    rdi,r14
  4045a7:	call   406f70 <init_grammar@@Base>
  4045ac:	mov    edi,0x40
  4045b1:	call   4031d0 <malloc@plt>
  4045b6:	mov    rbx,rax
  4045b9:	mov    edi,0x4
  4045be:	call   4031d0 <malloc@plt>
  4045c3:	mov    QWORD PTR [rbx],rax
  4045c6:	mov    rdi,rax
  4045c9:	call   405f70 <init_token_obra@@Base>
  4045ce:	mov    edi,0x4
  4045d3:	call   4031d0 <malloc@plt>
  4045d8:	mov    QWORD PTR [rbx+0x8],rax
  4045dc:	mov    rdi,rax
  4045df:	call   405fb0 <init_token_return@@Base>
  4045e4:	mov    edi,0x8
  4045e9:	call   4031d0 <malloc@plt>
  4045ee:	mov    QWORD PTR [rbx+0x10],rax
  4045f2:	mov    esi,0x1
  4045f7:	mov    rdi,rax
  4045fa:	call   405ed0 <init_token_int_value@@Base>
  4045ff:	mov    edi,0x4
  404604:	call   4031d0 <malloc@plt>
  404609:	mov    QWORD PTR [rbx+0x18],rax
  40460d:	mov    rdi,rax
  404610:	call   405fd0 <init_token_semicolon@@Base>
  404615:	mov    edi,0x4
  40461a:	call   4031d0 <malloc@plt>
  40461f:	mov    QWORD PTR [rbx+0x20],rax
  404623:	mov    rdi,rax
  404626:	call   405fb0 <init_token_return@@Base>
  40462b:	mov    edi,0x8
  404630:	call   4031d0 <malloc@plt>
  404635:	mov    QWORD PTR [rbx+0x28],rax
  404639:	mov    esi,0x1
  40463e:	mov    rdi,rax
  404641:	call   405ed0 <init_token_int_value@@Base>
  404646:	mov    edi,0x4
  40464b:	call   4031d0 <malloc@plt>
  404650:	mov    QWORD PTR [rbx+0x30],rax
  404654:	mov    rdi,rax
  404657:	call   405fd0 <init_token_semicolon@@Base>
  40465c:	mov    edi,0x4
  404661:	call   4031d0 <malloc@plt>
  404666:	mov    QWORD PTR [rbx+0x38],rax
  40466a:	mov    rdi,rax
  40466d:	call   405f90 <init_token_cbra@@Base>
  404672:	lea    r12,[rip+0xbb57]        # 4101d0 <next_fake@@Base>
  404679:	mov    QWORD PTR [r12+0x1b8],rbx
  404681:	mov    DWORD PTR [r12+0x1b0],0x8
  40468d:	mov    rdi,r14
  404690:	call   407100 <read_body@@Base>
  404695:	mov    ecx,DWORD PTR [r12+0x198]
  40469d:	xor    edx,edx
  40469f:	cmp    ecx,0x8
  4046a2:	setne  dl
  4046a5:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  4046ab:	cmp    ecx,0x8
  4046ae:	jne    40472c <body_with_two_returns@@Base+0x1ac>
  4046b0:	xor    ecx,ecx
  4046b2:	test   rax,rax
  4046b5:	sete   cl
  4046b8:	add    QWORD PTR [r15+rcx*8+0x18],0x1
  4046be:	test   rax,rax
  4046c1:	je     40474b <body_with_two_returns@@Base+0x1cb>
  4046c7:	mov    ecx,DWORD PTR [rax]
  4046c9:	xor    edx,edx
  4046cb:	cmp    ecx,0x3
  4046ce:	setne  dl
  4046d1:	add    QWORD PTR [r15+rdx*8+0x28],0x1
  4046d7:	cmp    ecx,0x3
  4046da:	jne    40476a <body_with_two_returns@@Base+0x1ea>
  4046e0:	mov    rax,QWORD PTR [rax+0x8]
  4046e4:	mov    ecx,DWORD PTR [rax]
  4046e6:	xor    edx,edx
  4046e8:	cmp    ecx,0x3
  4046eb:	setne  dl
  4046ee:	add    QWORD PTR [r15+rdx*8+0x38],0x1
  4046f4:	cmp    ecx,0x3
  4046f7:	jne    404789 <body_with_two_returns@@Base+0x209>
  4046fd:	mov    rax,QWORD PTR [rax+0x8]
  404701:	xor    ecx,ecx
  404703:	test   rax,rax
  404706:	setne  cl
  404709:	add    QWORD PTR [r15+rcx*8+0x48],0x1
  40470f:	test   rax,rax
  404712:	jne    4047a8 <body_with_two_returns@@Base+0x228>
  404718:	add    QWORD PTR [rip+0xadf8],0x1        # 40f518 <__bss_start@@Base+0x3a8>
  404720:	add    rsp,0x28
  404724:	pop    rbx
  404725:	pop    r12
  404727:	pop    r14
  404729:	pop    r15
  40472b:	ret    
  40472c:	lea    rdi,[rip+0x5bed]        # 40a320 <_IO_stdin_used@@Base+0x320>
  404733:	lea    rsi,[rip+0x58e4]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40473a:	lea    rcx,[rip+0x5bf9]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  404741:	mov    edx,0x173
  404746:	call   403150 <__assert_fail@plt>
  40474b:	lea    rdi,[rip+0x5b7b]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404752:	lea    rsi,[rip+0x58c5]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404759:	lea    rcx,[rip+0x5bda]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  404760:	mov    edx,0x174
  404765:	call   403150 <__assert_fail@plt>
  40476a:	lea    rdi,[rip+0x5be6]        # 40a357 <_IO_stdin_used@@Base+0x357>
  404771:	lea    rsi,[rip+0x58a6]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404778:	lea    rcx,[rip+0x5bbb]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  40477f:	mov    edx,0x175
  404784:	call   403150 <__assert_fail@plt>
  404789:	lea    rdi,[rip+0x5bdd]        # 40a36d <_IO_stdin_used@@Base+0x36d>
  404790:	lea    rsi,[rip+0x5887]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404797:	lea    rcx,[rip+0x5b9c]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  40479e:	mov    edx,0x176
  4047a3:	call   403150 <__assert_fail@plt>
  4047a8:	lea    rdi,[rip+0x5bda]        # 40a389 <_IO_stdin_used@@Base+0x389>
  4047af:	lea    rsi,[rip+0x5868]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4047b6:	lea    rcx,[rip+0x5b7d]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  4047bd:	mov    edx,0x177
  4047c2:	call   403150 <__assert_fail@plt>
  4047c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004047d0 <body_with_one_return@@Base>:
  4047d0:	push   r15
  4047d2:	push   r14
  4047d4:	push   r12
  4047d6:	push   rbx
  4047d7:	sub    rsp,0x28
  4047db:	lea    r15,[rip+0xad3e]        # 40f520 <__bss_start@@Base+0x3b0>
  4047e2:	add    QWORD PTR [rip+0xad36],0x1        # 40f520 <__bss_start@@Base+0x3b0>
  4047ea:	lea    r14,[rsp+0x8]
  4047ef:	lea    rsi,[rsp+0x10]
  4047f4:	mov    rdi,r14
  4047f7:	call   406f70 <init_grammar@@Base>
  4047fc:	mov    edi,0x28
  404801:	call   4031d0 <malloc@plt>
  404806:	mov    rbx,rax
  404809:	mov    edi,0x4
  40480e:	call   4031d0 <malloc@plt>
  404813:	mov    QWORD PTR [rbx],rax
  404816:	mov    rdi,rax
  404819:	call   405f70 <init_token_obra@@Base>
  40481e:	mov    edi,0x4
  404823:	call   4031d0 <malloc@plt>
  404828:	mov    QWORD PTR [rbx+0x8],rax
  40482c:	mov    rdi,rax
  40482f:	call   405fb0 <init_token_return@@Base>
  404834:	mov    edi,0x8
  404839:	call   4031d0 <malloc@plt>
  40483e:	mov    QWORD PTR [rbx+0x10],rax
  404842:	mov    esi,0x1
  404847:	mov    rdi,rax
  40484a:	call   405ed0 <init_token_int_value@@Base>
  40484f:	mov    edi,0x4
  404854:	call   4031d0 <malloc@plt>
  404859:	mov    QWORD PTR [rbx+0x18],rax
  40485d:	mov    rdi,rax
  404860:	call   405fd0 <init_token_semicolon@@Base>
  404865:	mov    edi,0x4
  40486a:	call   4031d0 <malloc@plt>
  40486f:	mov    QWORD PTR [rbx+0x20],rax
  404873:	mov    rdi,rax
  404876:	call   405f90 <init_token_cbra@@Base>
  40487b:	lea    r12,[rip+0xb94e]        # 4101d0 <next_fake@@Base>
  404882:	mov    QWORD PTR [r12+0x1b8],rbx
  40488a:	mov    DWORD PTR [r12+0x1b0],0x5
  404896:	mov    rdi,r14
  404899:	call   407100 <read_body@@Base>
  40489e:	mov    ecx,DWORD PTR [r12+0x198]
  4048a6:	xor    edx,edx
  4048a8:	cmp    ecx,0x5
  4048ab:	setne  dl
  4048ae:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  4048b4:	cmp    ecx,0x5
  4048b7:	jne    40490c <body_with_one_return@@Base+0x13c>
  4048b9:	xor    ecx,ecx
  4048bb:	test   rax,rax
  4048be:	sete   cl
  4048c1:	add    QWORD PTR [r15+rcx*8+0x18],0x1
  4048c7:	test   rax,rax
  4048ca:	je     40492b <body_with_one_return@@Base+0x15b>
  4048cc:	mov    ecx,DWORD PTR [rax]
  4048ce:	xor    edx,edx
  4048d0:	cmp    ecx,0x3
  4048d3:	setne  dl
  4048d6:	add    QWORD PTR [r15+rdx*8+0x28],0x1
  4048dc:	cmp    ecx,0x3
  4048df:	jne    40494a <body_with_one_return@@Base+0x17a>
  4048e1:	mov    rax,QWORD PTR [rax+0x8]
  4048e5:	xor    ecx,ecx
  4048e7:	test   rax,rax
  4048ea:	setne  cl
  4048ed:	add    QWORD PTR [r15+rcx*8+0x38],0x1
  4048f3:	test   rax,rax
  4048f6:	jne    404969 <body_with_one_return@@Base+0x199>
  4048f8:	add    QWORD PTR [rip+0xac68],0x1        # 40f568 <__bss_start@@Base+0x3f8>
  404900:	add    rsp,0x28
  404904:	pop    rbx
  404905:	pop    r12
  404907:	pop    r14
  404909:	pop    r15
  40490b:	ret    
  40490c:	lea    rdi,[rip+0x57d4]        # 40a0e7 <_IO_stdin_used@@Base+0xe7>
  404913:	lea    rsi,[rip+0x5704]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40491a:	lea    rcx,[rip+0x5a80]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  404921:	mov    edx,0x196
  404926:	call   403150 <__assert_fail@plt>
  40492b:	lea    rdi,[rip+0x599b]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404932:	lea    rsi,[rip+0x56e5]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404939:	lea    rcx,[rip+0x5a61]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  404940:	mov    edx,0x197
  404945:	call   403150 <__assert_fail@plt>
  40494a:	lea    rdi,[rip+0x5a06]        # 40a357 <_IO_stdin_used@@Base+0x357>
  404951:	lea    rsi,[rip+0x56c6]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404958:	lea    rcx,[rip+0x5a42]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  40495f:	mov    edx,0x198
  404964:	call   403150 <__assert_fail@plt>
  404969:	lea    rdi,[rip+0x5a4d]        # 40a3bd <_IO_stdin_used@@Base+0x3bd>
  404970:	lea    rsi,[rip+0x56a7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404977:	lea    rcx,[rip+0x5a23]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  40497e:	mov    edx,0x199
  404983:	call   403150 <__assert_fail@plt>
  404988:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404990 <if_statement_inside_if_statement@@Base>:
  404990:	push   r15
  404992:	push   r14
  404994:	push   r13
  404996:	push   r12
  404998:	push   rbx
  404999:	sub    rsp,0x20
  40499d:	lea    r13,[rip+0xabcc]        # 40f570 <__bss_start@@Base+0x400>
  4049a4:	add    QWORD PTR [rip+0xabc4],0x1        # 40f570 <__bss_start@@Base+0x400>
  4049ac:	mov    r14,rsp
  4049af:	lea    rsi,[rsp+0x8]
  4049b4:	mov    rdi,r14
  4049b7:	call   406f70 <init_grammar@@Base>
  4049bc:	mov    edi,0x3
  4049c1:	call   4031d0 <malloc@plt>
  4049c6:	mov    r12,rax
  4049c9:	mov    edi,0x3
  4049ce:	call   4031d0 <malloc@plt>
  4049d3:	mov    r15,rax
  4049d6:	mov    WORD PTR [r12],0x3d21
  4049dd:	mov    BYTE PTR [r12+0x2],0x0
  4049e3:	mov    WORD PTR [rax],0x3d21
  4049e8:	mov    BYTE PTR [rax+0x2],0x0
  4049ec:	mov    edi,0x98
  4049f1:	call   4031d0 <malloc@plt>
  4049f6:	mov    rbx,rax
  4049f9:	mov    edi,0x4
  4049fe:	call   4031d0 <malloc@plt>
  404a03:	mov    QWORD PTR [rbx],rax
  404a06:	mov    rdi,rax
  404a09:	call   405f30 <init_token_opar@@Base>
  404a0e:	mov    edi,0x8
  404a13:	call   4031d0 <malloc@plt>
  404a18:	mov    QWORD PTR [rbx+0x8],rax
  404a1c:	mov    esi,0x1
  404a21:	mov    rdi,rax
  404a24:	call   405ed0 <init_token_int_value@@Base>
  404a29:	mov    edi,0x8
  404a2e:	call   4031d0 <malloc@plt>
  404a33:	mov    QWORD PTR [rbx+0x10],rax
  404a37:	mov    esi,0x1
  404a3c:	mov    rdi,rax
  404a3f:	call   405ed0 <init_token_int_value@@Base>
  404a44:	mov    edi,0x10
  404a49:	call   4031d0 <malloc@plt>
  404a4e:	mov    QWORD PTR [rbx+0x18],rax
  404a52:	mov    rdi,rax
  404a55:	mov    rsi,r12
  404a58:	call   406050 <init_token_boolean_op@@Base>
  404a5d:	mov    edi,0x8
  404a62:	call   4031d0 <malloc@plt>
  404a67:	mov    QWORD PTR [rbx+0x20],rax
  404a6b:	mov    esi,0x1
  404a70:	mov    rdi,rax
  404a73:	call   405ed0 <init_token_int_value@@Base>
  404a78:	mov    edi,0x4
  404a7d:	call   4031d0 <malloc@plt>
  404a82:	mov    QWORD PTR [rbx+0x28],rax
  404a86:	mov    rdi,rax
  404a89:	call   405f50 <init_token_cpar@@Base>
  404a8e:	mov    edi,0x4
  404a93:	call   4031d0 <malloc@plt>
  404a98:	mov    QWORD PTR [rbx+0x30],rax
  404a9c:	mov    rdi,rax
  404a9f:	call   405f70 <init_token_obra@@Base>
  404aa4:	mov    edi,0x4
  404aa9:	call   4031d0 <malloc@plt>
  404aae:	mov    QWORD PTR [rbx+0x38],rax
  404ab2:	mov    rdi,rax
  404ab5:	call   406010 <init_token_if@@Base>
  404aba:	mov    edi,0x4
  404abf:	call   4031d0 <malloc@plt>
  404ac4:	mov    QWORD PTR [rbx+0x40],rax
  404ac8:	mov    rdi,rax
  404acb:	call   405f30 <init_token_opar@@Base>
  404ad0:	mov    edi,0x8
  404ad5:	call   4031d0 <malloc@plt>
  404ada:	mov    QWORD PTR [rbx+0x48],rax
  404ade:	mov    esi,0x1
  404ae3:	mov    rdi,rax
  404ae6:	call   405ed0 <init_token_int_value@@Base>
  404aeb:	mov    edi,0x8
  404af0:	call   4031d0 <malloc@plt>
  404af5:	mov    QWORD PTR [rbx+0x50],rax
  404af9:	mov    esi,0x1
  404afe:	mov    rdi,rax
  404b01:	call   405ed0 <init_token_int_value@@Base>
  404b06:	mov    edi,0x10
  404b0b:	call   4031d0 <malloc@plt>
  404b10:	mov    QWORD PTR [rbx+0x58],rax
  404b14:	mov    rdi,rax
  404b17:	mov    rsi,r15
  404b1a:	call   406050 <init_token_boolean_op@@Base>
  404b1f:	mov    edi,0x8
  404b24:	call   4031d0 <malloc@plt>
  404b29:	mov    QWORD PTR [rbx+0x60],rax
  404b2d:	mov    esi,0x1
  404b32:	mov    rdi,rax
  404b35:	call   405ed0 <init_token_int_value@@Base>
  404b3a:	mov    edi,0x4
  404b3f:	call   4031d0 <malloc@plt>
  404b44:	mov    QWORD PTR [rbx+0x68],rax
  404b48:	mov    rdi,rax
  404b4b:	call   405f50 <init_token_cpar@@Base>
  404b50:	mov    edi,0x4
  404b55:	call   4031d0 <malloc@plt>
  404b5a:	mov    QWORD PTR [rbx+0x70],rax
  404b5e:	mov    rdi,rax
  404b61:	call   405f70 <init_token_obra@@Base>
  404b66:	mov    edi,0x4
  404b6b:	call   4031d0 <malloc@plt>
  404b70:	mov    QWORD PTR [rbx+0x78],rax
  404b74:	mov    rdi,rax
  404b77:	call   405f90 <init_token_cbra@@Base>
  404b7c:	mov    edi,0x4
  404b81:	call   4031d0 <malloc@plt>
  404b86:	mov    QWORD PTR [rbx+0x80],rax
  404b8d:	mov    rdi,rax
  404b90:	call   405f90 <init_token_cbra@@Base>
  404b95:	mov    edi,0x4
  404b9a:	call   4031d0 <malloc@plt>
  404b9f:	mov    QWORD PTR [rbx+0x88],rax
  404ba6:	mov    rdi,rax
  404ba9:	call   405f90 <init_token_cbra@@Base>
  404bae:	mov    edi,0x4
  404bb3:	call   4031d0 <malloc@plt>
  404bb8:	mov    QWORD PTR [rbx+0x90],rax
  404bbf:	mov    rdi,rax
  404bc2:	call   405ff0 <init_token_eof@@Base>
  404bc7:	lea    r15,[rip+0xb602]        # 4101d0 <next_fake@@Base>
  404bce:	mov    QWORD PTR [r15+0x1b8],rbx
  404bd5:	mov    DWORD PTR [r15+0x1b0],0x13
  404be0:	mov    rdi,r14
  404be3:	call   407390 <read_if_statement@@Base>
  404be8:	mov    ecx,DWORD PTR [r15+0x198]
  404bef:	xor    edx,edx
  404bf1:	cmp    ecx,0x13
  404bf4:	setne  dl
  404bf7:	add    QWORD PTR [r13+rdx*8+0x8],0x1
  404bfd:	cmp    ecx,0x13
  404c00:	jne    404c40 <if_statement_inside_if_statement@@Base+0x2b0>
  404c02:	xor    ecx,ecx
  404c04:	test   rax,rax
  404c07:	sete   cl
  404c0a:	add    QWORD PTR [r13+rcx*8+0x18],0x1
  404c10:	test   rax,rax
  404c13:	je     404c5f <if_statement_inside_if_statement@@Base+0x2cf>
  404c15:	mov    eax,DWORD PTR [rax]
  404c17:	xor    ecx,ecx
  404c19:	cmp    eax,0x4
  404c1c:	setne  cl
  404c1f:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  404c25:	cmp    eax,0x4
  404c28:	jne    404c7e <if_statement_inside_if_statement@@Base+0x2ee>
  404c2a:	add    QWORD PTR [rip+0xa976],0x1        # 40f5a8 <__bss_start@@Base+0x438>
  404c32:	add    rsp,0x20
  404c36:	pop    rbx
  404c37:	pop    r12
  404c39:	pop    r13
  404c3b:	pop    r14
  404c3d:	pop    r15
  404c3f:	ret    
  404c40:	lea    rdi,[rip+0x5788]        # 40a3cf <_IO_stdin_used@@Base+0x3cf>
  404c47:	lea    rsi,[rip+0x53d0]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404c4e:	lea    rcx,[rip+0x5795]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404c55:	mov    edx,0x1e0
  404c5a:	call   403150 <__assert_fail@plt>
  404c5f:	lea    rdi,[rip+0x5667]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404c66:	lea    rsi,[rip+0x53b1]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404c6d:	lea    rcx,[rip+0x5776]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404c74:	mov    edx,0x1e1
  404c79:	call   403150 <__assert_fail@plt>
  404c7e:	lea    rdi,[rip+0x5654]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  404c85:	lea    rsi,[rip+0x5392]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404c8c:	lea    rcx,[rip+0x5757]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404c93:	mov    edx,0x1e2
  404c98:	call   403150 <__assert_fail@plt>
  404c9d:	nop    DWORD PTR [rax]

0000000000404ca0 <if_statement_inside_else_statement@@Base>:
  404ca0:	push   r15
  404ca2:	push   r14
  404ca4:	push   r13
  404ca6:	push   r12
  404ca8:	push   rbx
  404ca9:	sub    rsp,0x20
  404cad:	lea    r13,[rip+0xa8fc]        # 40f5b0 <__bss_start@@Base+0x440>
  404cb4:	add    QWORD PTR [rip+0xa8f4],0x1        # 40f5b0 <__bss_start@@Base+0x440>
  404cbc:	mov    r14,rsp
  404cbf:	lea    rsi,[rsp+0x8]
  404cc4:	mov    rdi,r14
  404cc7:	call   406f70 <init_grammar@@Base>
  404ccc:	mov    edi,0x3
  404cd1:	call   4031d0 <malloc@plt>
  404cd6:	mov    r12,rax
  404cd9:	mov    edi,0x3
  404cde:	call   4031d0 <malloc@plt>
  404ce3:	mov    r15,rax
  404ce6:	mov    WORD PTR [r12],0x3d21
  404ced:	mov    BYTE PTR [r12+0x2],0x0
  404cf3:	mov    WORD PTR [rax],0x3d21
  404cf8:	mov    BYTE PTR [rax+0x2],0x0
  404cfc:	mov    edi,0xa8
  404d01:	call   4031d0 <malloc@plt>
  404d06:	mov    rbx,rax
  404d09:	mov    edi,0x4
  404d0e:	call   4031d0 <malloc@plt>
  404d13:	mov    QWORD PTR [rbx],rax
  404d16:	mov    rdi,rax
  404d19:	call   405f30 <init_token_opar@@Base>
  404d1e:	mov    edi,0x8
  404d23:	call   4031d0 <malloc@plt>
  404d28:	mov    QWORD PTR [rbx+0x8],rax
  404d2c:	mov    esi,0x1
  404d31:	mov    rdi,rax
  404d34:	call   405ed0 <init_token_int_value@@Base>
  404d39:	mov    edi,0x8
  404d3e:	call   4031d0 <malloc@plt>
  404d43:	mov    QWORD PTR [rbx+0x10],rax
  404d47:	mov    esi,0x1
  404d4c:	mov    rdi,rax
  404d4f:	call   405ed0 <init_token_int_value@@Base>
  404d54:	mov    edi,0x10
  404d59:	call   4031d0 <malloc@plt>
  404d5e:	mov    QWORD PTR [rbx+0x18],rax
  404d62:	mov    rdi,rax
  404d65:	mov    rsi,r12
  404d68:	call   406050 <init_token_boolean_op@@Base>
  404d6d:	mov    edi,0x8
  404d72:	call   4031d0 <malloc@plt>
  404d77:	mov    QWORD PTR [rbx+0x20],rax
  404d7b:	mov    esi,0x1
  404d80:	mov    rdi,rax
  404d83:	call   405ed0 <init_token_int_value@@Base>
  404d88:	mov    edi,0x4
  404d8d:	call   4031d0 <malloc@plt>
  404d92:	mov    QWORD PTR [rbx+0x28],rax
  404d96:	mov    rdi,rax
  404d99:	call   405f50 <init_token_cpar@@Base>
  404d9e:	mov    edi,0x4
  404da3:	call   4031d0 <malloc@plt>
  404da8:	mov    QWORD PTR [rbx+0x30],rax
  404dac:	mov    rdi,rax
  404daf:	call   405f70 <init_token_obra@@Base>
  404db4:	mov    edi,0x4
  404db9:	call   4031d0 <malloc@plt>
  404dbe:	mov    QWORD PTR [rbx+0x38],rax
  404dc2:	mov    rdi,rax
  404dc5:	call   405f90 <init_token_cbra@@Base>
  404dca:	mov    edi,0x4
  404dcf:	call   4031d0 <malloc@plt>
  404dd4:	mov    QWORD PTR [rbx+0x40],rax
  404dd8:	mov    rdi,rax
  404ddb:	call   406030 <init_token_else@@Base>
  404de0:	mov    edi,0x4
  404de5:	call   4031d0 <malloc@plt>
  404dea:	mov    QWORD PTR [rbx+0x48],rax
  404dee:	mov    rdi,rax
  404df1:	call   405f70 <init_token_obra@@Base>
  404df6:	mov    edi,0x4
  404dfb:	call   4031d0 <malloc@plt>
  404e00:	mov    QWORD PTR [rbx+0x50],rax
  404e04:	mov    rdi,rax
  404e07:	call   406010 <init_token_if@@Base>
  404e0c:	mov    edi,0x4
  404e11:	call   4031d0 <malloc@plt>
  404e16:	mov    QWORD PTR [rbx+0x58],rax
  404e1a:	mov    rdi,rax
  404e1d:	call   405f30 <init_token_opar@@Base>
  404e22:	mov    edi,0x8
  404e27:	call   4031d0 <malloc@plt>
  404e2c:	mov    QWORD PTR [rbx+0x60],rax
  404e30:	mov    esi,0x1
  404e35:	mov    rdi,rax
  404e38:	call   405ed0 <init_token_int_value@@Base>
  404e3d:	mov    edi,0x8
  404e42:	call   4031d0 <malloc@plt>
  404e47:	mov    QWORD PTR [rbx+0x68],rax
  404e4b:	mov    esi,0x1
  404e50:	mov    rdi,rax
  404e53:	call   405ed0 <init_token_int_value@@Base>
  404e58:	mov    edi,0x10
  404e5d:	call   4031d0 <malloc@plt>
  404e62:	mov    QWORD PTR [rbx+0x70],rax
  404e66:	mov    rdi,rax
  404e69:	mov    rsi,r15
  404e6c:	call   406050 <init_token_boolean_op@@Base>
  404e71:	mov    edi,0x8
  404e76:	call   4031d0 <malloc@plt>
  404e7b:	mov    QWORD PTR [rbx+0x78],rax
  404e7f:	mov    esi,0x1
  404e84:	mov    rdi,rax
  404e87:	call   405ed0 <init_token_int_value@@Base>
  404e8c:	mov    edi,0x4
  404e91:	call   4031d0 <malloc@plt>
  404e96:	mov    QWORD PTR [rbx+0x80],rax
  404e9d:	mov    rdi,rax
  404ea0:	call   405f50 <init_token_cpar@@Base>
  404ea5:	mov    edi,0x4
  404eaa:	call   4031d0 <malloc@plt>
  404eaf:	mov    QWORD PTR [rbx+0x88],rax
  404eb6:	mov    rdi,rax
  404eb9:	call   405f70 <init_token_obra@@Base>
  404ebe:	mov    edi,0x4
  404ec3:	call   4031d0 <malloc@plt>
  404ec8:	mov    QWORD PTR [rbx+0x90],rax
  404ecf:	mov    rdi,rax
  404ed2:	call   405f90 <init_token_cbra@@Base>
  404ed7:	mov    edi,0x4
  404edc:	call   4031d0 <malloc@plt>
  404ee1:	mov    QWORD PTR [rbx+0x98],rax
  404ee8:	mov    rdi,rax
  404eeb:	call   405f90 <init_token_cbra@@Base>
  404ef0:	mov    edi,0x4
  404ef5:	call   4031d0 <malloc@plt>
  404efa:	mov    QWORD PTR [rbx+0xa0],rax
  404f01:	mov    rdi,rax
  404f04:	call   405f90 <init_token_cbra@@Base>
  404f09:	lea    r15,[rip+0xb2c0]        # 4101d0 <next_fake@@Base>
  404f10:	mov    QWORD PTR [r15+0x1b8],rbx
  404f17:	mov    DWORD PTR [r15+0x1b0],0x15
  404f22:	mov    rdi,r14
  404f25:	call   407390 <read_if_statement@@Base>
  404f2a:	mov    ecx,DWORD PTR [r15+0x198]
  404f31:	xor    edx,edx
  404f33:	cmp    ecx,0x15
  404f36:	setne  dl
  404f39:	add    QWORD PTR [r13+rdx*8+0x8],0x1
  404f3f:	cmp    ecx,0x15
  404f42:	jne    404f82 <if_statement_inside_else_statement@@Base+0x2e2>
  404f44:	xor    ecx,ecx
  404f46:	test   rax,rax
  404f49:	sete   cl
  404f4c:	add    QWORD PTR [r13+rcx*8+0x18],0x1
  404f52:	test   rax,rax
  404f55:	je     404fa1 <if_statement_inside_else_statement@@Base+0x301>
  404f57:	mov    eax,DWORD PTR [rax]
  404f59:	xor    ecx,ecx
  404f5b:	cmp    eax,0x4
  404f5e:	setne  cl
  404f61:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  404f67:	cmp    eax,0x4
  404f6a:	jne    404fc0 <if_statement_inside_else_statement@@Base+0x320>
  404f6c:	add    QWORD PTR [rip+0xa674],0x1        # 40f5e8 <__bss_start@@Base+0x478>
  404f74:	add    rsp,0x20
  404f78:	pop    rbx
  404f79:	pop    r12
  404f7b:	pop    r13
  404f7d:	pop    r14
  404f7f:	pop    r15
  404f81:	ret    
  404f82:	lea    rdi,[rip+0x5489]        # 40a412 <_IO_stdin_used@@Base+0x412>
  404f89:	lea    rsi,[rip+0x508e]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404f90:	lea    rcx,[rip+0x5496]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404f97:	mov    edx,0x22e
  404f9c:	call   403150 <__assert_fail@plt>
  404fa1:	lea    rdi,[rip+0x5325]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404fa8:	lea    rsi,[rip+0x506f]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404faf:	lea    rcx,[rip+0x5477]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404fb6:	mov    edx,0x22f
  404fbb:	call   403150 <__assert_fail@plt>
  404fc0:	lea    rdi,[rip+0x5312]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  404fc7:	lea    rsi,[rip+0x5050]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404fce:	lea    rcx,[rip+0x5458]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404fd5:	mov    edx,0x230
  404fda:	call   403150 <__assert_fail@plt>
  404fdf:	nop

0000000000404fe0 <main@@Base>:
  404fe0:	push   rbp
  404fe1:	push   r15
  404fe3:	push   r14
  404fe5:	push   r13
  404fe7:	push   r12
  404fe9:	push   rbx
  404fea:	push   rax
  404feb:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5fd]        # 40f5f0 <__bss_start@@Base+0x480>
  404ff3:	vpcmpeqd xmm1,xmm1,xmm1
  404ff7:	vpsubq xmm0,xmm0,xmm1
  404ffb:	vmovdqa XMMWORD PTR [rip+0xa5ed],xmm0        # 40f5f0 <__bss_start@@Base+0x480>
  405003:	mov    rbx,QWORD PTR [rip+0x9fd6]        # 40efe0 <stdout@GLIBC_2.2.5>
  40500a:	mov    rdi,QWORD PTR [rbx]
  40500d:	xor    esi,esi
  40500f:	call   403100 <setbuf@plt>
  405014:	mov    rcx,QWORD PTR [rbx]
  405017:	lea    r14,[rip+0x54d1]        # 40a4ef <_IO_stdin_used@@Base+0x4ef>
  40501e:	mov    esi,0xe
  405023:	mov    edx,0x1
  405028:	mov    rdi,r14
  40502b:	call   403260 <fwrite@plt>
  405030:	mov    rcx,QWORD PTR [rbx]
  405033:	lea    rdi,[rip+0x541d]        # 40a457 <_IO_stdin_used@@Base+0x457>
  40503a:	mov    esi,0xe
  40503f:	mov    edx,0x1
  405044:	call   403260 <fwrite@plt>
  405049:	mov    rcx,QWORD PTR [rbx]
  40504c:	lea    rdi,[rip+0x5413]        # 40a466 <_IO_stdin_used@@Base+0x466>
  405053:	mov    esi,0xf
  405058:	mov    edx,0x1
  40505d:	call   403260 <fwrite@plt>
  405062:	xor    edi,edi
  405064:	call   4031e0 <fflush@plt>
  405069:	lea    r15,[rip+0x5406]        # 40a476 <_IO_stdin_used@@Base+0x476>
  405070:	lea    r12,[rip+0x5411]        # 40a488 <_IO_stdin_used@@Base+0x488>
  405077:	lea    rdx,[rip+0x5502]        # 40a580 <_IO_stdin_used@@Base+0x580>
  40507e:	xor    eax,eax
  405080:	mov    rdi,r15
  405083:	mov    rsi,r12
  405086:	call   403120 <printf@plt>
  40508b:	vmovdqa xmm0,XMMWORD PTR [rip+0xa20d]        # 40f2a0 <__bss_start@@Base+0x130>
  405093:	vpcmpeqd xmm1,xmm1,xmm1
  405097:	vpsubq xmm0,xmm0,xmm1
  40509b:	vmovdqa XMMWORD PTR [rip+0xa1fd],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4050a3:	vmovdqa xmm0,XMMWORD PTR [rip+0xa175]        # 40f220 <__bss_start@@Base+0xb0>
  4050ab:	vpsubq xmm0,xmm0,xmm1
  4050af:	vpcmpeqd xmm1,xmm1,xmm1
  4050b3:	vmovdqa XMMWORD PTR [rip+0xa165],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4050bb:	vpxor  xmm0,xmm0,xmm0
  4050bf:	lea    rbp,[rip+0xb10a]        # 4101d0 <next_fake@@Base>
  4050c6:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4050ce:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4050d6:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4050de:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4050e6:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4050ee:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4050f6:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4050fe:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405106:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  40510e:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405116:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  40511b:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405120:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405125:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  40512a:	mov    QWORD PTR [rbp+0x1c0],0x0
  405135:	mov    DWORD PTR [rbp+0x19c],0x32
  40513f:	vmovdqa xmm0,XMMWORD PTR [rip+0xa149]        # 40f290 <__bss_start@@Base+0x120>
  405147:	vpsubq xmm0,xmm0,xmm1
  40514b:	vmovdqa XMMWORD PTR [rip+0xa13d],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405153:	lea    rbx,[rip+0xad2e]        # 40fe88 <push_back_fake@@Base>
  40515a:	xor    esi,esi
  40515c:	mov    edx,0x348
  405161:	mov    rdi,rbx
  405164:	vzeroupper 
  405167:	call   403160 <memset@plt>
  40516c:	mov    DWORD PTR [rbx+0x334],0x32
  405176:	call   4037a0 <no_int_as_first_stuff@@Base>
  40517b:	lea    r13,[rip+0x534c]        # 40a4ce <_IO_stdin_used@@Base+0x4ce>
  405182:	mov    rdi,r13
  405185:	call   403090 <puts@plt>
  40518a:	lea    rdx,[rip+0x540f]        # 40a5a0 <_IO_stdin_used@@Base+0x5a0>
  405191:	xor    eax,eax
  405193:	mov    rdi,r15
  405196:	mov    rsi,r12
  405199:	call   403120 <printf@plt>
  40519e:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0fa]        # 40f2a0 <__bss_start@@Base+0x130>
  4051a6:	vpcmpeqd xmm1,xmm1,xmm1
  4051aa:	vpsubq xmm0,xmm0,xmm1
  4051ae:	vmovdqa XMMWORD PTR [rip+0xa0ea],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4051b6:	vmovdqa xmm0,XMMWORD PTR [rip+0xa062]        # 40f220 <__bss_start@@Base+0xb0>
  4051be:	vpsubq xmm0,xmm0,xmm1
  4051c2:	vpcmpeqd xmm1,xmm1,xmm1
  4051c6:	vmovdqa XMMWORD PTR [rip+0xa052],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4051ce:	vpxor  xmm0,xmm0,xmm0
  4051d2:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4051da:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4051e2:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4051ea:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4051f2:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4051fa:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405202:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  40520a:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405212:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  40521a:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405222:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405227:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  40522c:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405231:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405236:	mov    QWORD PTR [rbp+0x1c0],0x0
  405241:	mov    DWORD PTR [rbp+0x19c],0x32
  40524b:	vmovdqa xmm0,XMMWORD PTR [rip+0xa03d]        # 40f290 <__bss_start@@Base+0x120>
  405253:	vpsubq xmm0,xmm0,xmm1
  405257:	vmovdqa XMMWORD PTR [rip+0xa031],xmm0        # 40f290 <__bss_start@@Base+0x120>
  40525f:	xor    esi,esi
  405261:	mov    edx,0x348
  405266:	mov    rdi,rbx
  405269:	vzeroupper 
  40526c:	call   403160 <memset@plt>
  405271:	mov    DWORD PTR [rbx+0x334],0x32
  40527b:	call   403880 <int_but_not_followed_by_function@@Base>
  405280:	mov    rdi,r13
  405283:	call   403090 <puts@plt>
  405288:	lea    rdx,[rip+0x53c1]        # 40a650 <_IO_stdin_used@@Base+0x650>
  40528f:	xor    eax,eax
  405291:	mov    rdi,r15
  405294:	mov    rsi,r12
  405297:	call   403120 <printf@plt>
  40529c:	vmovdqa xmm0,XMMWORD PTR [rip+0x9ffc]        # 40f2a0 <__bss_start@@Base+0x130>
  4052a4:	vpcmpeqd xmm1,xmm1,xmm1
  4052a8:	vpsubq xmm0,xmm0,xmm1
  4052ac:	vmovdqa XMMWORD PTR [rip+0x9fec],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4052b4:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f64]        # 40f220 <__bss_start@@Base+0xb0>
  4052bc:	vpsubq xmm0,xmm0,xmm1
  4052c0:	vpcmpeqd xmm1,xmm1,xmm1
  4052c4:	vmovdqa XMMWORD PTR [rip+0x9f54],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4052cc:	vpxor  xmm0,xmm0,xmm0
  4052d0:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4052d8:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4052e0:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4052e8:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4052f0:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4052f8:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405300:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405308:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405310:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405318:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405320:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405325:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  40532a:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  40532f:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405334:	mov    QWORD PTR [rbp+0x1c0],0x0
  40533f:	mov    DWORD PTR [rbp+0x19c],0x32
  405349:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f3f]        # 40f290 <__bss_start@@Base+0x120>
  405351:	vpsubq xmm0,xmm0,xmm1
  405355:	vmovdqa XMMWORD PTR [rip+0x9f33],xmm0        # 40f290 <__bss_start@@Base+0x120>
  40535d:	xor    esi,esi
  40535f:	mov    edx,0x348
  405364:	mov    rdi,rbx
  405367:	vzeroupper 
  40536a:	call   403160 <memset@plt>
  40536f:	mov    DWORD PTR [rbx+0x334],0x32
  405379:	call   403f70 <boolean_unary_operator_is_read_properly@@Base>
  40537e:	mov    rdi,r13
  405381:	call   403090 <puts@plt>
  405386:	lea    rdx,[rip+0x5293]        # 40a620 <_IO_stdin_used@@Base+0x620>
  40538d:	xor    eax,eax
  40538f:	mov    rdi,r15
  405392:	mov    rsi,r12
  405395:	call   403120 <printf@plt>
  40539a:	vmovdqa xmm0,XMMWORD PTR [rip+0x9efe]        # 40f2a0 <__bss_start@@Base+0x130>
  4053a2:	vpcmpeqd xmm1,xmm1,xmm1
  4053a6:	vpsubq xmm0,xmm0,xmm1
  4053aa:	vmovdqa XMMWORD PTR [rip+0x9eee],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4053b2:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e66]        # 40f220 <__bss_start@@Base+0xb0>
  4053ba:	vpsubq xmm0,xmm0,xmm1
  4053be:	vpcmpeqd xmm1,xmm1,xmm1
  4053c2:	vmovdqa XMMWORD PTR [rip+0x9e56],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4053ca:	vpxor  xmm0,xmm0,xmm0
  4053ce:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4053d6:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4053de:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4053e6:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4053ee:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4053f6:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4053fe:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405406:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  40540e:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405416:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  40541e:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405423:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405428:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  40542d:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405432:	mov    QWORD PTR [rbp+0x1c0],0x0
  40543d:	mov    DWORD PTR [rbp+0x19c],0x32
  405447:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e41]        # 40f290 <__bss_start@@Base+0x120>
  40544f:	vpsubq xmm0,xmm0,xmm1
  405453:	vmovdqa XMMWORD PTR [rip+0x9e35],xmm0        # 40f290 <__bss_start@@Base+0x120>
  40545b:	xor    esi,esi
  40545d:	mov    edx,0x348
  405462:	mov    rdi,rbx
  405465:	vzeroupper 
  405468:	call   403160 <memset@plt>
  40546d:	mov    DWORD PTR [rbx+0x334],0x32
  405477:	call   403d70 <boolean_binary_operator_is_read_properly@@Base>
  40547c:	mov    rdi,r13
  40547f:	call   403090 <puts@plt>
  405484:	lea    rdx,[rip+0x5145]        # 40a5d0 <_IO_stdin_used@@Base+0x5d0>
  40548b:	xor    eax,eax
  40548d:	mov    rdi,r15
  405490:	mov    rsi,r12
  405493:	call   403120 <printf@plt>
  405498:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e00]        # 40f2a0 <__bss_start@@Base+0x130>
  4054a0:	vpcmpeqd xmm1,xmm1,xmm1
  4054a4:	vpsubq xmm0,xmm0,xmm1
  4054a8:	vmovdqa XMMWORD PTR [rip+0x9df0],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4054b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d68]        # 40f220 <__bss_start@@Base+0xb0>
  4054b8:	vpsubq xmm0,xmm0,xmm1
  4054bc:	vpcmpeqd xmm1,xmm1,xmm1
  4054c0:	vmovdqa XMMWORD PTR [rip+0x9d58],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4054c8:	vpxor  xmm0,xmm0,xmm0
  4054cc:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4054d4:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4054dc:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4054e4:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4054ec:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4054f4:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4054fc:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405504:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  40550c:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405514:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  40551c:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405521:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405526:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  40552b:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405530:	mov    QWORD PTR [rbp+0x1c0],0x0
  40553b:	mov    DWORD PTR [rbp+0x19c],0x32
  405545:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d43]        # 40f290 <__bss_start@@Base+0x120>
  40554d:	vpsubq xmm0,xmm0,xmm1
  405551:	vmovdqa XMMWORD PTR [rip+0x9d37],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405559:	xor    esi,esi
  40555b:	mov    edx,0x348
  405560:	mov    rdi,rbx
  405563:	vzeroupper 
  405566:	call   403160 <memset@plt>
  40556b:	mov    DWORD PTR [rbx+0x334],0x32
  405575:	call   403990 <boolean_expression_is_read_properly@@Base>
  40557a:	mov    rdi,r13
  40557d:	call   403090 <puts@plt>
  405582:	lea    rdx,[rip+0x5077]        # 40a600 <_IO_stdin_used@@Base+0x600>
  405589:	xor    eax,eax
  40558b:	mov    rdi,r15
  40558e:	mov    rsi,r12
  405591:	call   403120 <printf@plt>
  405596:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d02]        # 40f2a0 <__bss_start@@Base+0x130>
  40559e:	vpcmpeqd xmm1,xmm1,xmm1
  4055a2:	vpsubq xmm0,xmm0,xmm1
  4055a6:	vmovdqa XMMWORD PTR [rip+0x9cf2],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4055ae:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c6a]        # 40f220 <__bss_start@@Base+0xb0>
  4055b6:	vpsubq xmm0,xmm0,xmm1
  4055ba:	vpcmpeqd xmm1,xmm1,xmm1
  4055be:	vmovdqa XMMWORD PTR [rip+0x9c5a],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4055c6:	vpxor  xmm0,xmm0,xmm0
  4055ca:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4055d2:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4055da:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4055e2:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4055ea:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4055f2:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4055fa:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405602:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  40560a:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405612:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  40561a:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  40561f:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405624:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405629:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  40562e:	mov    QWORD PTR [rbp+0x1c0],0x0
  405639:	mov    DWORD PTR [rbp+0x19c],0x32
  405643:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c45]        # 40f290 <__bss_start@@Base+0x120>
  40564b:	vpsubq xmm0,xmm0,xmm1
  40564f:	vmovdqa XMMWORD PTR [rip+0x9c39],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405657:	xor    esi,esi
  405659:	mov    edx,0x348
  40565e:	mov    rdi,rbx
  405661:	vzeroupper 
  405664:	call   403160 <memset@plt>
  405669:	mov    DWORD PTR [rbx+0x334],0x32
  405673:	call   403b40 <boolean_expression_complex@@Base>
  405678:	mov    rdi,r13
  40567b:	call   403090 <puts@plt>
  405680:	lea    rdx,[rip+0x4ff9]        # 40a680 <_IO_stdin_used@@Base+0x680>
  405687:	xor    eax,eax
  405689:	mov    rdi,r15
  40568c:	mov    rsi,r12
  40568f:	call   403120 <printf@plt>
  405694:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c04]        # 40f2a0 <__bss_start@@Base+0x130>
  40569c:	vpcmpeqd xmm1,xmm1,xmm1
  4056a0:	vpsubq xmm0,xmm0,xmm1
  4056a4:	vmovdqa XMMWORD PTR [rip+0x9bf4],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4056ac:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b6c]        # 40f220 <__bss_start@@Base+0xb0>
  4056b4:	vpsubq xmm0,xmm0,xmm1
  4056b8:	vpcmpeqd xmm1,xmm1,xmm1
  4056bc:	vmovdqa XMMWORD PTR [rip+0x9b5c],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4056c4:	vpxor  xmm0,xmm0,xmm0
  4056c8:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4056d0:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4056d8:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4056e0:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4056e8:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4056f0:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4056f8:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405700:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405708:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405710:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405718:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  40571d:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405722:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405727:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  40572c:	mov    QWORD PTR [rbp+0x1c0],0x0
  405737:	mov    DWORD PTR [rbp+0x19c],0x32
  405741:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b47]        # 40f290 <__bss_start@@Base+0x120>
  405749:	vpsubq xmm0,xmm0,xmm1
  40574d:	vmovdqa XMMWORD PTR [rip+0x9b3b],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405755:	xor    esi,esi
  405757:	mov    edx,0x348
  40575c:	mov    rdi,rbx
  40575f:	vzeroupper 
  405762:	call   403160 <memset@plt>
  405767:	mov    DWORD PTR [rbx+0x334],0x32
  405771:	call   404150 <if_statement_only@@Base>
  405776:	mov    rdi,r13
  405779:	call   403090 <puts@plt>
  40577e:	lea    rdx,[rip+0x4f1b]        # 40a6a0 <_IO_stdin_used@@Base+0x6a0>
  405785:	xor    eax,eax
  405787:	mov    rdi,r15
  40578a:	mov    rsi,r12
  40578d:	call   403120 <printf@plt>
  405792:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b06]        # 40f2a0 <__bss_start@@Base+0x130>
  40579a:	vpcmpeqd xmm1,xmm1,xmm1
  40579e:	vpsubq xmm0,xmm0,xmm1
  4057a2:	vmovdqa XMMWORD PTR [rip+0x9af6],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4057aa:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a6e]        # 40f220 <__bss_start@@Base+0xb0>
  4057b2:	vpsubq xmm0,xmm0,xmm1
  4057b6:	vpcmpeqd xmm1,xmm1,xmm1
  4057ba:	vmovdqa XMMWORD PTR [rip+0x9a5e],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4057c2:	vpxor  xmm0,xmm0,xmm0
  4057c6:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4057ce:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4057d6:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4057de:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4057e6:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4057ee:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4057f6:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4057fe:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405806:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  40580e:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405816:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  40581b:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405820:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405825:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  40582a:	mov    QWORD PTR [rbp+0x1c0],0x0
  405835:	mov    DWORD PTR [rbp+0x19c],0x32
  40583f:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a49]        # 40f290 <__bss_start@@Base+0x120>
  405847:	vpsubq xmm0,xmm0,xmm1
  40584b:	vmovdqa XMMWORD PTR [rip+0x9a3d],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405853:	xor    esi,esi
  405855:	mov    edx,0x348
  40585a:	mov    rdi,rbx
  40585d:	vzeroupper 
  405860:	call   403160 <memset@plt>
  405865:	mov    DWORD PTR [rbx+0x334],0x32
  40586f:	call   404350 <if_else_statements@@Base>
  405874:	mov    rdi,r13
  405877:	call   403090 <puts@plt>
  40587c:	lea    rdx,[rip+0x4e7d]        # 40a700 <_IO_stdin_used@@Base+0x700>
  405883:	xor    eax,eax
  405885:	mov    rdi,r15
  405888:	mov    rsi,r12
  40588b:	call   403120 <printf@plt>
  405890:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a08]        # 40f2a0 <__bss_start@@Base+0x130>
  405898:	vpcmpeqd xmm1,xmm1,xmm1
  40589c:	vpsubq xmm0,xmm0,xmm1
  4058a0:	vmovdqa XMMWORD PTR [rip+0x99f8],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4058a8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9970]        # 40f220 <__bss_start@@Base+0xb0>
  4058b0:	vpsubq xmm0,xmm0,xmm1
  4058b4:	vpcmpeqd xmm1,xmm1,xmm1
  4058b8:	vmovdqa XMMWORD PTR [rip+0x9960],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4058c0:	vpxor  xmm0,xmm0,xmm0
  4058c4:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4058cc:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4058d4:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4058dc:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4058e4:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4058ec:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4058f4:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4058fc:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405904:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  40590c:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405914:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405919:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  40591e:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405923:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405928:	mov    QWORD PTR [rbp+0x1c0],0x0
  405933:	mov    DWORD PTR [rbp+0x19c],0x32
  40593d:	vmovdqa xmm0,XMMWORD PTR [rip+0x994b]        # 40f290 <__bss_start@@Base+0x120>
  405945:	vpsubq xmm0,xmm0,xmm1
  405949:	vmovdqa XMMWORD PTR [rip+0x993f],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405951:	xor    esi,esi
  405953:	mov    edx,0x348
  405958:	mov    rdi,rbx
  40595b:	vzeroupper 
  40595e:	call   403160 <memset@plt>
  405963:	mov    DWORD PTR [rbx+0x334],0x32
  40596d:	call   404990 <if_statement_inside_if_statement@@Base>
  405972:	mov    rdi,r13
  405975:	call   403090 <puts@plt>
  40597a:	lea    rdx,[rip+0x4daf]        # 40a730 <_IO_stdin_used@@Base+0x730>
  405981:	xor    eax,eax
  405983:	mov    rdi,r15
  405986:	mov    rsi,r12
  405989:	call   403120 <printf@plt>
  40598e:	vmovdqa xmm0,XMMWORD PTR [rip+0x990a]        # 40f2a0 <__bss_start@@Base+0x130>
  405996:	vpcmpeqd xmm1,xmm1,xmm1
  40599a:	vpsubq xmm0,xmm0,xmm1
  40599e:	vmovdqa XMMWORD PTR [rip+0x98fa],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  4059a6:	vmovdqa xmm0,XMMWORD PTR [rip+0x9872]        # 40f220 <__bss_start@@Base+0xb0>
  4059ae:	vpsubq xmm0,xmm0,xmm1
  4059b2:	vpcmpeqd xmm1,xmm1,xmm1
  4059b6:	vmovdqa XMMWORD PTR [rip+0x9862],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  4059be:	vpxor  xmm0,xmm0,xmm0
  4059c2:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  4059ca:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  4059d2:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  4059da:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  4059e2:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  4059ea:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4059f2:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4059fa:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405a02:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405a0a:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405a12:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405a17:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405a1c:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405a21:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405a26:	mov    QWORD PTR [rbp+0x1c0],0x0
  405a31:	mov    DWORD PTR [rbp+0x19c],0x32
  405a3b:	vmovdqa xmm0,XMMWORD PTR [rip+0x984d]        # 40f290 <__bss_start@@Base+0x120>
  405a43:	vpsubq xmm0,xmm0,xmm1
  405a47:	vmovdqa XMMWORD PTR [rip+0x9841],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405a4f:	xor    esi,esi
  405a51:	mov    edx,0x348
  405a56:	mov    rdi,rbx
  405a59:	vzeroupper 
  405a5c:	call   403160 <memset@plt>
  405a61:	mov    DWORD PTR [rbx+0x334],0x32
  405a6b:	call   404ca0 <if_statement_inside_else_statement@@Base>
  405a70:	mov    rdi,r13
  405a73:	call   403090 <puts@plt>
  405a78:	lea    rdx,[rip+0x4c61]        # 40a6e0 <_IO_stdin_used@@Base+0x6e0>
  405a7f:	xor    eax,eax
  405a81:	mov    rdi,r15
  405a84:	mov    rsi,r12
  405a87:	call   403120 <printf@plt>
  405a8c:	vmovdqa xmm0,XMMWORD PTR [rip+0x980c]        # 40f2a0 <__bss_start@@Base+0x130>
  405a94:	vpcmpeqd xmm1,xmm1,xmm1
  405a98:	vpsubq xmm0,xmm0,xmm1
  405a9c:	vmovdqa XMMWORD PTR [rip+0x97fc],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  405aa4:	vmovdqa xmm0,XMMWORD PTR [rip+0x9774]        # 40f220 <__bss_start@@Base+0xb0>
  405aac:	vpsubq xmm0,xmm0,xmm1
  405ab0:	vpcmpeqd xmm1,xmm1,xmm1
  405ab4:	vmovdqa XMMWORD PTR [rip+0x9764],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  405abc:	vpxor  xmm0,xmm0,xmm0
  405ac0:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405ac8:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405ad0:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405ad8:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405ae0:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405ae8:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405af0:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405af8:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405b00:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405b08:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405b10:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405b15:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405b1a:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405b1f:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405b24:	mov    QWORD PTR [rbp+0x1c0],0x0
  405b2f:	mov    DWORD PTR [rbp+0x19c],0x32
  405b39:	vmovdqa xmm0,XMMWORD PTR [rip+0x974f]        # 40f290 <__bss_start@@Base+0x120>
  405b41:	vpsubq xmm0,xmm0,xmm1
  405b45:	vmovdqa XMMWORD PTR [rip+0x9743],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405b4d:	xor    esi,esi
  405b4f:	mov    edx,0x348
  405b54:	mov    rdi,rbx
  405b57:	vzeroupper 
  405b5a:	call   403160 <memset@plt>
  405b5f:	mov    DWORD PTR [rbx+0x334],0x32
  405b69:	call   4047d0 <body_with_one_return@@Base>
  405b6e:	mov    rdi,r13
  405b71:	call   403090 <puts@plt>
  405b76:	lea    rdx,[rip+0x4b43]        # 40a6c0 <_IO_stdin_used@@Base+0x6c0>
  405b7d:	xor    eax,eax
  405b7f:	mov    rdi,r15
  405b82:	mov    rsi,r12
  405b85:	call   403120 <printf@plt>
  405b8a:	vmovdqa xmm0,XMMWORD PTR [rip+0x970e]        # 40f2a0 <__bss_start@@Base+0x130>
  405b92:	vpcmpeqd xmm1,xmm1,xmm1
  405b96:	vpsubq xmm0,xmm0,xmm1
  405b9a:	vmovdqa XMMWORD PTR [rip+0x96fe],xmm0        # 40f2a0 <__bss_start@@Base+0x130>
  405ba2:	vmovdqa xmm0,XMMWORD PTR [rip+0x9676]        # 40f220 <__bss_start@@Base+0xb0>
  405baa:	vpsubq xmm0,xmm0,xmm1
  405bae:	vpcmpeqd xmm1,xmm1,xmm1
  405bb2:	vmovdqa XMMWORD PTR [rip+0x9666],xmm0        # 40f220 <__bss_start@@Base+0xb0>
  405bba:	vpxor  xmm0,xmm0,xmm0
  405bbe:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405bc6:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405bce:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405bd6:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405bde:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405be6:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405bee:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405bf6:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405bfe:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405c06:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405c0e:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405c13:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405c18:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405c1d:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405c22:	mov    QWORD PTR [rbp+0x1c0],0x0
  405c2d:	mov    DWORD PTR [rbp+0x19c],0x32
  405c37:	vmovdqa xmm0,XMMWORD PTR [rip+0x9651]        # 40f290 <__bss_start@@Base+0x120>
  405c3f:	vpsubq xmm0,xmm0,xmm1
  405c43:	vmovdqa XMMWORD PTR [rip+0x9645],xmm0        # 40f290 <__bss_start@@Base+0x120>
  405c4b:	xor    esi,esi
  405c4d:	mov    edx,0x348
  405c52:	mov    rdi,rbx
  405c55:	vzeroupper 
  405c58:	call   403160 <memset@plt>
  405c5d:	mov    DWORD PTR [rbx+0x334],0x32
  405c67:	call   404580 <body_with_two_returns@@Base>
  405c6c:	mov    rdi,r13
  405c6f:	call   403090 <puts@plt>
  405c74:	lea    rdi,[rip+0x485c]        # 40a4d7 <_IO_stdin_used@@Base+0x4d7>
  405c7b:	call   403090 <puts@plt>
  405c80:	lea    rdi,[rip+0x485f]        # 40a4e6 <_IO_stdin_used@@Base+0x4e6>
  405c87:	call   403090 <puts@plt>
  405c8c:	mov    rdi,r14
  405c8f:	call   403090 <puts@plt>
  405c94:	xor    eax,eax
  405c96:	add    rsp,0x8
  405c9a:	pop    rbx
  405c9b:	pop    r12
  405c9d:	pop    r13
  405c9f:	pop    r14
  405ca1:	pop    r15
  405ca3:	pop    rbp
  405ca4:	ret    
  405ca5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405caf:	nop
  405cb0:	push   r15
  405cb2:	push   r14
  405cb4:	push   rbx
  405cb5:	lea    rdi,[rip+0x4844]        # 40a500 <_IO_stdin_used@@Base+0x500>
  405cbc:	lea    rsi,[rip+0x47d1]        # 40a494 <_IO_stdin_used@@Base+0x494>
  405cc3:	mov    edx,0x68b646e9
  405cc8:	call   407b50 <read_boolean_unary_expression@@Base+0x2d0>
  405ccd:	xor    ebx,ebx
  405ccf:	lea    r14,[rip+0x833a]        # 40e010 <_IO_stdin_used@@Base+0x4010>
  405cd6:	lea    r15,[rip+0x8573]        # 40e250 <_IO_stdin_used@@Base+0x4250>
  405cdd:	nop    DWORD PTR [rax]
  405ce0:	mov    edi,DWORD PTR [r14+rbx*2]
  405ce4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  405ce9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  405cee:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  405cf3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  405cf8:	call   407fa0 <read_boolean_unary_expression@@Base+0x720>
  405cfd:	mov    edi,DWORD PTR [rbx+r15*1]
  405d01:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  405d06:	call   4083d0 <read_boolean_unary_expression@@Base+0xb50>
  405d0b:	add    rbx,0x10
  405d0f:	cmp    rbx,0x120
  405d16:	jne    405ce0 <main@@Base+0xd00>
  405d18:	call   4087f0 <read_boolean_unary_expression@@Base+0xf70>
  405d1d:	pop    rbx
  405d1e:	pop    r14
  405d20:	pop    r15
  405d22:	jmp    408f90 <read_boolean_unary_expression@@Base+0x1710>
  405d27:	nop    WORD PTR [rax+rax*1+0x0]
  405d30:	push   rax
  405d31:	call   405cb0 <main@@Base+0xcd0>
  405d36:	vxorps xmm0,xmm0,xmm0
  405d3a:	vmovups YMMWORD PTR [rip+0x94b6],ymm0        # 40f1f8 <__bss_start@@Base+0x88>
  405d42:	vmovups YMMWORD PTR [rip+0x9496],ymm0        # 40f1e0 <__bss_start@@Base+0x70>
  405d4a:	vmovups YMMWORD PTR [rip+0x946e],ymm0        # 40f1c0 <__bss_start@@Base+0x50>
  405d52:	vmovups YMMWORD PTR [rip+0x9446],ymm0        # 40f1a0 <__bss_start@@Base+0x30>
  405d5a:	vmovups YMMWORD PTR [rip+0x941e],ymm0        # 40f180 <__bss_start@@Base+0x10>
  405d62:	vxorps xmm1,xmm1,xmm1
  405d66:	vmovaps XMMWORD PTR [rip+0x94b2],xmm1        # 40f220 <__bss_start@@Base+0xb0>
  405d6e:	vmovups YMMWORD PTR [rip+0x94fa],ymm0        # 40f270 <__bss_start@@Base+0x100>
  405d76:	vmovups YMMWORD PTR [rip+0x94d2],ymm0        # 40f250 <__bss_start@@Base+0xe0>
  405d7e:	vmovups YMMWORD PTR [rip+0x94aa],ymm0        # 40f230 <__bss_start@@Base+0xc0>
  405d86:	vmovaps XMMWORD PTR [rip+0x9502],xmm1        # 40f290 <__bss_start@@Base+0x120>
  405d8e:	vmovaps XMMWORD PTR [rip+0x950a],xmm1        # 40f2a0 <__bss_start@@Base+0x130>
  405d96:	vmovups YMMWORD PTR [rip+0x9522],ymm0        # 40f2c0 <__bss_start@@Base+0x150>
  405d9e:	vmovups YMMWORD PTR [rip+0x950a],ymm0        # 40f2b0 <__bss_start@@Base+0x140>
  405da6:	vmovups YMMWORD PTR [rip+0x9542],ymm0        # 40f2f0 <__bss_start@@Base+0x180>
  405dae:	vmovups YMMWORD PTR [rip+0x952a],ymm0        # 40f2e0 <__bss_start@@Base+0x170>
  405db6:	vmovups YMMWORD PTR [rip+0x9572],ymm0        # 40f330 <__bss_start@@Base+0x1c0>
  405dbe:	vmovups YMMWORD PTR [rip+0x954a],ymm0        # 40f310 <__bss_start@@Base+0x1a0>
  405dc6:	vmovups YMMWORD PTR [rip+0x9582],ymm0        # 40f350 <__bss_start@@Base+0x1e0>
  405dce:	vmovups YMMWORD PTR [rip+0x958a],ymm0        # 40f360 <__bss_start@@Base+0x1f0>
  405dd6:	vmovups YMMWORD PTR [rip+0x95e2],ymm0        # 40f3c0 <__bss_start@@Base+0x250>
  405dde:	vmovups YMMWORD PTR [rip+0x95ba],ymm0        # 40f3a0 <__bss_start@@Base+0x230>
  405de6:	vmovups YMMWORD PTR [rip+0x9592],ymm0        # 40f380 <__bss_start@@Base+0x210>
  405dee:	vmovups YMMWORD PTR [rip+0x962a],ymm0        # 40f420 <__bss_start@@Base+0x2b0>
  405df6:	vmovups YMMWORD PTR [rip+0x9602],ymm0        # 40f400 <__bss_start@@Base+0x290>
  405dfe:	vmovups YMMWORD PTR [rip+0x95da],ymm0        # 40f3e0 <__bss_start@@Base+0x270>
  405e06:	vmovups YMMWORD PTR [rip+0x9652],ymm0        # 40f460 <__bss_start@@Base+0x2f0>
  405e0e:	vmovups YMMWORD PTR [rip+0x962a],ymm0        # 40f440 <__bss_start@@Base+0x2d0>
  405e16:	vmovups YMMWORD PTR [rip+0x9682],ymm0        # 40f4a0 <__bss_start@@Base+0x330>
  405e1e:	vmovups YMMWORD PTR [rip+0x965a],ymm0        # 40f480 <__bss_start@@Base+0x310>
  405e26:	vmovups YMMWORD PTR [rip+0x96d2],ymm0        # 40f500 <__bss_start@@Base+0x390>
  405e2e:	vmovups YMMWORD PTR [rip+0x96aa],ymm0        # 40f4e0 <__bss_start@@Base+0x370>
  405e36:	vmovups YMMWORD PTR [rip+0x9682],ymm0        # 40f4c0 <__bss_start@@Base+0x350>
  405e3e:	vmovups YMMWORD PTR [rip+0x970a],ymm0        # 40f550 <__bss_start@@Base+0x3e0>
  405e46:	vmovups YMMWORD PTR [rip+0x96f2],ymm0        # 40f540 <__bss_start@@Base+0x3d0>
  405e4e:	vmovups YMMWORD PTR [rip+0x96ca],ymm0        # 40f520 <__bss_start@@Base+0x3b0>
  405e56:	vmovups YMMWORD PTR [rip+0x9732],ymm0        # 40f590 <__bss_start@@Base+0x420>
  405e5e:	vmovups YMMWORD PTR [rip+0x970a],ymm0        # 40f570 <__bss_start@@Base+0x400>
  405e66:	vmovups YMMWORD PTR [rip+0x9762],ymm0        # 40f5d0 <__bss_start@@Base+0x460>
  405e6e:	vmovups YMMWORD PTR [rip+0x973a],ymm0        # 40f5b0 <__bss_start@@Base+0x440>
  405e76:	vmovaps XMMWORD PTR [rip+0x9772],xmm1        # 40f5f0 <__bss_start@@Base+0x480>
  405e7e:	pop    rax
  405e7f:	vzeroupper 
  405e82:	ret    
  405e83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e8d:	nop    DWORD PTR [rax]
  405e90:	lea    rdi,[rip+0xfffffffffffffe19]        # 405cb0 <main@@Base+0xcd0>
  405e97:	lea    rsi,[rip+0xfffffffffffffe92]        # 405d30 <main@@Base+0xd50>
  405e9e:	jmp    409350 <__gcov_flush@@Base+0xa0>
  405ea3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ead:	nop    DWORD PTR [rax]

0000000000405eb0 <init_token_int_type@@Base>:
  405eb0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9748]        # 40f600 <__bss_start@@Base+0x490>
  405eb8:	vpcmpeqd xmm1,xmm1,xmm1
  405ebc:	vpsubq xmm0,xmm0,xmm1
  405ec0:	vmovdqa XMMWORD PTR [rip+0x9738],xmm0        # 40f600 <__bss_start@@Base+0x490>
  405ec8:	mov    DWORD PTR [rdi],0x0
  405ece:	ret    
  405ecf:	nop

0000000000405ed0 <init_token_int_value@@Base>:
  405ed0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9738]        # 40f610 <__bss_start@@Base+0x4a0>
  405ed8:	vpcmpeqd xmm1,xmm1,xmm1
  405edc:	vpsubq xmm0,xmm0,xmm1
  405ee0:	vmovdqa XMMWORD PTR [rip+0x9728],xmm0        # 40f610 <__bss_start@@Base+0x4a0>
  405ee8:	mov    DWORD PTR [rdi],0x1
  405eee:	mov    DWORD PTR [rdi+0x4],esi
  405ef1:	ret    
  405ef2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405efc:	nop    DWORD PTR [rax+0x0]

0000000000405f00 <init_token_function@@Base>:
  405f00:	vmovdqa xmm0,XMMWORD PTR [rip+0x9718]        # 40f620 <__bss_start@@Base+0x4b0>
  405f08:	vpcmpeqd xmm1,xmm1,xmm1
  405f0c:	vpsubq xmm0,xmm0,xmm1
  405f10:	vmovdqa XMMWORD PTR [rip+0x9708],xmm0        # 40f620 <__bss_start@@Base+0x4b0>
  405f18:	mov    DWORD PTR [rdi],0x2
  405f1e:	mov    QWORD PTR [rdi+0x8],rsi
  405f22:	ret    
  405f23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f2d:	nop    DWORD PTR [rax]

0000000000405f30 <init_token_opar@@Base>:
  405f30:	vmovdqa xmm0,XMMWORD PTR [rip+0x96f8]        # 40f630 <__bss_start@@Base+0x4c0>
  405f38:	vpcmpeqd xmm1,xmm1,xmm1
  405f3c:	vpsubq xmm0,xmm0,xmm1
  405f40:	vmovdqa XMMWORD PTR [rip+0x96e8],xmm0        # 40f630 <__bss_start@@Base+0x4c0>
  405f48:	mov    DWORD PTR [rdi],0x3
  405f4e:	ret    
  405f4f:	nop

0000000000405f50 <init_token_cpar@@Base>:
  405f50:	vmovdqa xmm0,XMMWORD PTR [rip+0x96e8]        # 40f640 <__bss_start@@Base+0x4d0>
  405f58:	vpcmpeqd xmm1,xmm1,xmm1
  405f5c:	vpsubq xmm0,xmm0,xmm1
  405f60:	vmovdqa XMMWORD PTR [rip+0x96d8],xmm0        # 40f640 <__bss_start@@Base+0x4d0>
  405f68:	mov    DWORD PTR [rdi],0x4
  405f6e:	ret    
  405f6f:	nop

0000000000405f70 <init_token_obra@@Base>:
  405f70:	vmovdqa xmm0,XMMWORD PTR [rip+0x96d8]        # 40f650 <__bss_start@@Base+0x4e0>
  405f78:	vpcmpeqd xmm1,xmm1,xmm1
  405f7c:	vpsubq xmm0,xmm0,xmm1
  405f80:	vmovdqa XMMWORD PTR [rip+0x96c8],xmm0        # 40f650 <__bss_start@@Base+0x4e0>
  405f88:	mov    DWORD PTR [rdi],0x5
  405f8e:	ret    
  405f8f:	nop

0000000000405f90 <init_token_cbra@@Base>:
  405f90:	vmovdqa xmm0,XMMWORD PTR [rip+0x96c8]        # 40f660 <__bss_start@@Base+0x4f0>
  405f98:	vpcmpeqd xmm1,xmm1,xmm1
  405f9c:	vpsubq xmm0,xmm0,xmm1
  405fa0:	vmovdqa XMMWORD PTR [rip+0x96b8],xmm0        # 40f660 <__bss_start@@Base+0x4f0>
  405fa8:	mov    DWORD PTR [rdi],0x6
  405fae:	ret    
  405faf:	nop

0000000000405fb0 <init_token_return@@Base>:
  405fb0:	vmovdqa xmm0,XMMWORD PTR [rip+0x96b8]        # 40f670 <__bss_start@@Base+0x500>
  405fb8:	vpcmpeqd xmm1,xmm1,xmm1
  405fbc:	vpsubq xmm0,xmm0,xmm1
  405fc0:	vmovdqa XMMWORD PTR [rip+0x96a8],xmm0        # 40f670 <__bss_start@@Base+0x500>
  405fc8:	mov    DWORD PTR [rdi],0x7
  405fce:	ret    
  405fcf:	nop

0000000000405fd0 <init_token_semicolon@@Base>:
  405fd0:	vmovdqa xmm0,XMMWORD PTR [rip+0x96a8]        # 40f680 <__bss_start@@Base+0x510>
  405fd8:	vpcmpeqd xmm1,xmm1,xmm1
  405fdc:	vpsubq xmm0,xmm0,xmm1
  405fe0:	vmovdqa XMMWORD PTR [rip+0x9698],xmm0        # 40f680 <__bss_start@@Base+0x510>
  405fe8:	mov    DWORD PTR [rdi],0x8
  405fee:	ret    
  405fef:	nop

0000000000405ff0 <init_token_eof@@Base>:
  405ff0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9698]        # 40f690 <__bss_start@@Base+0x520>
  405ff8:	vpcmpeqd xmm1,xmm1,xmm1
  405ffc:	vpsubq xmm0,xmm0,xmm1
  406000:	vmovdqa XMMWORD PTR [rip+0x9688],xmm0        # 40f690 <__bss_start@@Base+0x520>
  406008:	mov    DWORD PTR [rdi],0x9
  40600e:	ret    
  40600f:	nop

0000000000406010 <init_token_if@@Base>:
  406010:	vmovdqa xmm0,XMMWORD PTR [rip+0x9688]        # 40f6a0 <__bss_start@@Base+0x530>
  406018:	vpcmpeqd xmm1,xmm1,xmm1
  40601c:	vpsubq xmm0,xmm0,xmm1
  406020:	vmovdqa XMMWORD PTR [rip+0x9678],xmm0        # 40f6a0 <__bss_start@@Base+0x530>
  406028:	mov    DWORD PTR [rdi],0xa
  40602e:	ret    
  40602f:	nop

0000000000406030 <init_token_else@@Base>:
  406030:	vmovdqa xmm0,XMMWORD PTR [rip+0x9678]        # 40f6b0 <__bss_start@@Base+0x540>
  406038:	vpcmpeqd xmm1,xmm1,xmm1
  40603c:	vpsubq xmm0,xmm0,xmm1
  406040:	vmovdqa XMMWORD PTR [rip+0x9668],xmm0        # 40f6b0 <__bss_start@@Base+0x540>
  406048:	mov    DWORD PTR [rdi],0xb
  40604e:	ret    
  40604f:	nop

0000000000406050 <init_token_boolean_op@@Base>:
  406050:	vmovdqa xmm0,XMMWORD PTR [rip+0x9668]        # 40f6c0 <__bss_start@@Base+0x550>
  406058:	vpcmpeqd xmm1,xmm1,xmm1
  40605c:	vpsubq xmm0,xmm0,xmm1
  406060:	vmovdqa XMMWORD PTR [rip+0x9658],xmm0        # 40f6c0 <__bss_start@@Base+0x550>
  406068:	mov    DWORD PTR [rdi],0xc
  40606e:	mov    QWORD PTR [rdi+0x8],rsi
  406072:	ret    
  406073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40607d:	nop    DWORD PTR [rax]

0000000000406080 <free_token_int_type@@Base>:
  406080:	vmovdqa xmm0,XMMWORD PTR [rip+0x9648]        # 40f6d0 <__bss_start@@Base+0x560>
  406088:	vpcmpeqd xmm1,xmm1,xmm1
  40608c:	vpsubq xmm0,xmm0,xmm1
  406090:	vmovdqa XMMWORD PTR [rip+0x9638],xmm0        # 40f6d0 <__bss_start@@Base+0x560>
  406098:	jmp    403040 <free@plt>
  40609d:	nop    DWORD PTR [rax]

00000000004060a0 <free_token_int_value@@Base>:
  4060a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9638]        # 40f6e0 <__bss_start@@Base+0x570>
  4060a8:	vpcmpeqd xmm1,xmm1,xmm1
  4060ac:	vpsubq xmm0,xmm0,xmm1
  4060b0:	vmovdqa XMMWORD PTR [rip+0x9628],xmm0        # 40f6e0 <__bss_start@@Base+0x570>
  4060b8:	jmp    403040 <free@plt>
  4060bd:	nop    DWORD PTR [rax]

00000000004060c0 <free_token_function@@Base>:
  4060c0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9628]        # 40f6f0 <__bss_start@@Base+0x580>
  4060c8:	vpcmpeqd xmm1,xmm1,xmm1
  4060cc:	vpsubq xmm0,xmm0,xmm1
  4060d0:	vmovdqa XMMWORD PTR [rip+0x9618],xmm0        # 40f6f0 <__bss_start@@Base+0x580>
  4060d8:	jmp    403040 <free@plt>
  4060dd:	nop    DWORD PTR [rax]

00000000004060e0 <free_token_opar@@Base>:
  4060e0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9618]        # 40f700 <__bss_start@@Base+0x590>
  4060e8:	vpcmpeqd xmm1,xmm1,xmm1
  4060ec:	vpsubq xmm0,xmm0,xmm1
  4060f0:	vmovdqa XMMWORD PTR [rip+0x9608],xmm0        # 40f700 <__bss_start@@Base+0x590>
  4060f8:	jmp    403040 <free@plt>
  4060fd:	nop    DWORD PTR [rax]

0000000000406100 <free_token_cpar@@Base>:
  406100:	vmovdqa xmm0,XMMWORD PTR [rip+0x9608]        # 40f710 <__bss_start@@Base+0x5a0>
  406108:	vpcmpeqd xmm1,xmm1,xmm1
  40610c:	vpsubq xmm0,xmm0,xmm1
  406110:	vmovdqa XMMWORD PTR [rip+0x95f8],xmm0        # 40f710 <__bss_start@@Base+0x5a0>
  406118:	jmp    403040 <free@plt>
  40611d:	nop    DWORD PTR [rax]

0000000000406120 <free_token_obra@@Base>:
  406120:	vmovdqa xmm0,XMMWORD PTR [rip+0x95f8]        # 40f720 <__bss_start@@Base+0x5b0>
  406128:	vpcmpeqd xmm1,xmm1,xmm1
  40612c:	vpsubq xmm0,xmm0,xmm1
  406130:	vmovdqa XMMWORD PTR [rip+0x95e8],xmm0        # 40f720 <__bss_start@@Base+0x5b0>
  406138:	jmp    403040 <free@plt>
  40613d:	nop    DWORD PTR [rax]

0000000000406140 <free_token_cbra@@Base>:
  406140:	vmovdqa xmm0,XMMWORD PTR [rip+0x95e8]        # 40f730 <__bss_start@@Base+0x5c0>
  406148:	vpcmpeqd xmm1,xmm1,xmm1
  40614c:	vpsubq xmm0,xmm0,xmm1
  406150:	vmovdqa XMMWORD PTR [rip+0x95d8],xmm0        # 40f730 <__bss_start@@Base+0x5c0>
  406158:	jmp    403040 <free@plt>
  40615d:	nop    DWORD PTR [rax]

0000000000406160 <free_token_return@@Base>:
  406160:	vmovdqa xmm0,XMMWORD PTR [rip+0x95d8]        # 40f740 <__bss_start@@Base+0x5d0>
  406168:	vpcmpeqd xmm1,xmm1,xmm1
  40616c:	vpsubq xmm0,xmm0,xmm1
  406170:	vmovdqa XMMWORD PTR [rip+0x95c8],xmm0        # 40f740 <__bss_start@@Base+0x5d0>
  406178:	jmp    403040 <free@plt>
  40617d:	nop    DWORD PTR [rax]

0000000000406180 <free_token_semicolon@@Base>:
  406180:	vmovdqa xmm0,XMMWORD PTR [rip+0x95c8]        # 40f750 <__bss_start@@Base+0x5e0>
  406188:	vpcmpeqd xmm1,xmm1,xmm1
  40618c:	vpsubq xmm0,xmm0,xmm1
  406190:	vmovdqa XMMWORD PTR [rip+0x95b8],xmm0        # 40f750 <__bss_start@@Base+0x5e0>
  406198:	jmp    403040 <free@plt>
  40619d:	nop    DWORD PTR [rax]

00000000004061a0 <free_token_eof@@Base>:
  4061a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x95b8]        # 40f760 <__bss_start@@Base+0x5f0>
  4061a8:	vpcmpeqd xmm1,xmm1,xmm1
  4061ac:	vpsubq xmm0,xmm0,xmm1
  4061b0:	vmovdqa XMMWORD PTR [rip+0x95a8],xmm0        # 40f760 <__bss_start@@Base+0x5f0>
  4061b8:	jmp    403040 <free@plt>
  4061bd:	nop    DWORD PTR [rax]

00000000004061c0 <free_token_if@@Base>:
  4061c0:	vmovdqa xmm0,XMMWORD PTR [rip+0x95a8]        # 40f770 <__bss_start@@Base+0x600>
  4061c8:	vpcmpeqd xmm1,xmm1,xmm1
  4061cc:	vpsubq xmm0,xmm0,xmm1
  4061d0:	vmovdqa XMMWORD PTR [rip+0x9598],xmm0        # 40f770 <__bss_start@@Base+0x600>
  4061d8:	jmp    403040 <free@plt>
  4061dd:	nop    DWORD PTR [rax]

00000000004061e0 <free_token_else@@Base>:
  4061e0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9598]        # 40f780 <__bss_start@@Base+0x610>
  4061e8:	vpcmpeqd xmm1,xmm1,xmm1
  4061ec:	vpsubq xmm0,xmm0,xmm1
  4061f0:	vmovdqa XMMWORD PTR [rip+0x9588],xmm0        # 40f780 <__bss_start@@Base+0x610>
  4061f8:	jmp    403040 <free@plt>
  4061fd:	nop    DWORD PTR [rax]

0000000000406200 <free_token_boolean_op@@Base>:
  406200:	push   rbx
  406201:	mov    rbx,rdi
  406204:	lea    rax,[rip+0x9585]        # 40f790 <__bss_start@@Base+0x620>
  40620b:	add    QWORD PTR [rip+0x957d],0x1        # 40f790 <__bss_start@@Base+0x620>
  406213:	mov    rdi,QWORD PTR [rdi+0x8]
  406217:	xor    ecx,ecx
  406219:	test   rdi,rdi
  40621c:	sete   cl
  40621f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406225:	test   rdi,rdi
  406228:	je     406237 <free_token_boolean_op@@Base+0x37>
  40622a:	add    QWORD PTR [rip+0x9576],0x1        # 40f7a8 <__bss_start@@Base+0x638>
  406232:	call   403040 <free@plt>
  406237:	add    QWORD PTR [rip+0x9571],0x1        # 40f7b0 <__bss_start@@Base+0x640>
  40623f:	mov    rdi,rbx
  406242:	pop    rbx
  406243:	jmp    403040 <free@plt>
  406248:	nop    DWORD PTR [rax+rax*1+0x0]
  406250:	push   r15
  406252:	push   r14
  406254:	push   rbx
  406255:	lea    rdi,[rip+0x4504]        # 40a760 <_IO_stdin_used@@Base+0x760>
  40625c:	lea    rsi,[rip+0x4231]        # 40a494 <_IO_stdin_used@@Base+0x494>
  406263:	mov    edx,0xb7b65b46
  406268:	call   407b50 <read_boolean_unary_expression@@Base+0x2d0>
  40626d:	xor    ebx,ebx
  40626f:	lea    r14,[rip+0x80fa]        # 40e370 <_IO_stdin_used@@Base+0x4370>
  406276:	lea    r15,[rip+0x8433]        # 40e6b0 <_IO_stdin_used@@Base+0x46b0>
  40627d:	nop    DWORD PTR [rax]
  406280:	mov    edi,DWORD PTR [r14+rbx*2]
  406284:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406289:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40628e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406293:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406298:	call   407fa0 <read_boolean_unary_expression@@Base+0x720>
  40629d:	mov    edi,DWORD PTR [rbx+r15*1]
  4062a1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4062a6:	call   4083d0 <read_boolean_unary_expression@@Base+0xb50>
  4062ab:	add    rbx,0x10
  4062af:	cmp    rbx,0x1a0
  4062b6:	jne    406280 <free_token_boolean_op@@Base+0x80>
  4062b8:	call   4087f0 <read_boolean_unary_expression@@Base+0xf70>
  4062bd:	pop    rbx
  4062be:	pop    r14
  4062c0:	pop    r15
  4062c2:	jmp    408f90 <read_boolean_unary_expression@@Base+0x1710>
  4062c7:	nop    WORD PTR [rax+rax*1+0x0]
  4062d0:	push   rax
  4062d1:	call   406250 <free_token_boolean_op@@Base+0x50>
  4062d6:	vxorps xmm0,xmm0,xmm0
  4062da:	vmovaps XMMWORD PTR [rip+0x931e],xmm0        # 40f600 <__bss_start@@Base+0x490>
  4062e2:	vmovaps XMMWORD PTR [rip+0x9326],xmm0        # 40f610 <__bss_start@@Base+0x4a0>
  4062ea:	vmovaps XMMWORD PTR [rip+0x932e],xmm0        # 40f620 <__bss_start@@Base+0x4b0>
  4062f2:	vmovaps XMMWORD PTR [rip+0x9336],xmm0        # 40f630 <__bss_start@@Base+0x4c0>
  4062fa:	vmovaps XMMWORD PTR [rip+0x933e],xmm0        # 40f640 <__bss_start@@Base+0x4d0>
  406302:	vmovaps XMMWORD PTR [rip+0x9346],xmm0        # 40f650 <__bss_start@@Base+0x4e0>
  40630a:	vmovaps XMMWORD PTR [rip+0x934e],xmm0        # 40f660 <__bss_start@@Base+0x4f0>
  406312:	vmovaps XMMWORD PTR [rip+0x9356],xmm0        # 40f670 <__bss_start@@Base+0x500>
  40631a:	vmovaps XMMWORD PTR [rip+0x935e],xmm0        # 40f680 <__bss_start@@Base+0x510>
  406322:	vmovaps XMMWORD PTR [rip+0x9366],xmm0        # 40f690 <__bss_start@@Base+0x520>
  40632a:	vmovaps XMMWORD PTR [rip+0x936e],xmm0        # 40f6a0 <__bss_start@@Base+0x530>
  406332:	vmovaps XMMWORD PTR [rip+0x9376],xmm0        # 40f6b0 <__bss_start@@Base+0x540>
  40633a:	vmovaps XMMWORD PTR [rip+0x937e],xmm0        # 40f6c0 <__bss_start@@Base+0x550>
  406342:	vmovaps XMMWORD PTR [rip+0x9386],xmm0        # 40f6d0 <__bss_start@@Base+0x560>
  40634a:	vmovaps XMMWORD PTR [rip+0x938e],xmm0        # 40f6e0 <__bss_start@@Base+0x570>
  406352:	vmovaps XMMWORD PTR [rip+0x9396],xmm0        # 40f6f0 <__bss_start@@Base+0x580>
  40635a:	vmovaps XMMWORD PTR [rip+0x939e],xmm0        # 40f700 <__bss_start@@Base+0x590>
  406362:	vmovaps XMMWORD PTR [rip+0x93a6],xmm0        # 40f710 <__bss_start@@Base+0x5a0>
  40636a:	vmovaps XMMWORD PTR [rip+0x93ae],xmm0        # 40f720 <__bss_start@@Base+0x5b0>
  406372:	vmovaps XMMWORD PTR [rip+0x93b6],xmm0        # 40f730 <__bss_start@@Base+0x5c0>
  40637a:	vmovaps XMMWORD PTR [rip+0x93be],xmm0        # 40f740 <__bss_start@@Base+0x5d0>
  406382:	vmovaps XMMWORD PTR [rip+0x93c6],xmm0        # 40f750 <__bss_start@@Base+0x5e0>
  40638a:	vmovaps XMMWORD PTR [rip+0x93ce],xmm0        # 40f760 <__bss_start@@Base+0x5f0>
  406392:	vmovaps XMMWORD PTR [rip+0x93d6],xmm0        # 40f770 <__bss_start@@Base+0x600>
  40639a:	vmovaps XMMWORD PTR [rip+0x93de],xmm0        # 40f780 <__bss_start@@Base+0x610>
  4063a2:	vxorps xmm0,xmm0,xmm0
  4063a6:	vmovups YMMWORD PTR [rip+0x93e2],ymm0        # 40f790 <__bss_start@@Base+0x620>
  4063ae:	mov    QWORD PTR [rip+0x93f7],0x0        # 40f7b0 <__bss_start@@Base+0x640>
  4063b9:	pop    rax
  4063ba:	vzeroupper 
  4063bd:	ret    
  4063be:	xchg   ax,ax
  4063c0:	lea    rdi,[rip+0xfffffffffffffe89]        # 406250 <free_token_boolean_op@@Base+0x50>
  4063c7:	lea    rsi,[rip+0xffffffffffffff02]        # 4062d0 <free_token_boolean_op@@Base+0xd0>
  4063ce:	jmp    409350 <__gcov_flush@@Base+0xa0>
  4063d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063dd:	nop    DWORD PTR [rax]

00000000004063e0 <init_ast_base@@Base>:
  4063e0:	vmovdqa xmm0,XMMWORD PTR [rip+0x93d8]        # 40f7c0 <__bss_start@@Base+0x650>
  4063e8:	vpcmpeqd xmm1,xmm1,xmm1
  4063ec:	vpsubq xmm0,xmm0,xmm1
  4063f0:	vmovdqa XMMWORD PTR [rip+0x93c8],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  4063f8:	mov    DWORD PTR [rdi],esi
  4063fa:	mov    QWORD PTR [rdi+0x8],rdx
  4063fe:	ret    
  4063ff:	nop

0000000000406400 <init_ast_base_single@@Base>:
  406400:	vmovdqa xmm0,XMMWORD PTR [rip+0x93c8]        # 40f7d0 <__bss_start@@Base+0x660>
  406408:	vpcmpeqd xmm1,xmm1,xmm1
  40640c:	vpsubq xmm0,xmm0,xmm1
  406410:	vmovdqa XMMWORD PTR [rip+0x93b8],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  406418:	vmovdqa xmm0,XMMWORD PTR [rip+0x93a0]        # 40f7c0 <__bss_start@@Base+0x650>
  406420:	vpsubq xmm0,xmm0,xmm1
  406424:	vmovdqa XMMWORD PTR [rip+0x9394],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  40642c:	mov    DWORD PTR [rdi],esi
  40642e:	mov    QWORD PTR [rdi+0x8],0x0
  406436:	ret    
  406437:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406440 <init_node_id@@Base>:
  406440:	vmovdqa xmm0,XMMWORD PTR [rip+0x9398]        # 40f7e0 <__bss_start@@Base+0x670>
  406448:	vpcmpeqd xmm1,xmm1,xmm1
  40644c:	vpsubq xmm0,xmm0,xmm1
  406450:	vmovdqa XMMWORD PTR [rip+0x9388],xmm0        # 40f7e0 <__bss_start@@Base+0x670>
  406458:	vmovdqa xmm0,XMMWORD PTR [rip+0x9370]        # 40f7d0 <__bss_start@@Base+0x660>
  406460:	vpsubq xmm0,xmm0,xmm1
  406464:	vmovdqa XMMWORD PTR [rip+0x9364],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  40646c:	vmovdqa xmm0,XMMWORD PTR [rip+0x934c]        # 40f7c0 <__bss_start@@Base+0x650>
  406474:	vpsubq xmm0,xmm0,xmm1
  406478:	vmovdqa XMMWORD PTR [rip+0x9340],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  406480:	mov    DWORD PTR [rdi],0x0
  406486:	mov    QWORD PTR [rdi+0x8],0x0
  40648e:	mov    QWORD PTR [rdi+0x10],rsi
  406492:	ret    
  406493:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40649d:	nop    DWORD PTR [rax]

00000000004064a0 <init_node_int@@Base>:
  4064a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9348]        # 40f7f0 <__bss_start@@Base+0x680>
  4064a8:	vpcmpeqd xmm1,xmm1,xmm1
  4064ac:	vpsubq xmm0,xmm0,xmm1
  4064b0:	vmovdqa XMMWORD PTR [rip+0x9338],xmm0        # 40f7f0 <__bss_start@@Base+0x680>
  4064b8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9310]        # 40f7d0 <__bss_start@@Base+0x660>
  4064c0:	vpsubq xmm0,xmm0,xmm1
  4064c4:	vmovdqa XMMWORD PTR [rip+0x9304],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  4064cc:	vmovdqa xmm0,XMMWORD PTR [rip+0x92ec]        # 40f7c0 <__bss_start@@Base+0x650>
  4064d4:	vpsubq xmm0,xmm0,xmm1
  4064d8:	vmovdqa XMMWORD PTR [rip+0x92e0],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  4064e0:	mov    DWORD PTR [rdi],0x1
  4064e6:	mov    QWORD PTR [rdi+0x8],0x0
  4064ee:	mov    DWORD PTR [rdi+0x10],esi
  4064f1:	ret    
  4064f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064fc:	nop    DWORD PTR [rax+0x0]

0000000000406500 <init_node_function@@Base>:
  406500:	vmovdqa xmm0,XMMWORD PTR [rip+0x92f8]        # 40f800 <__bss_start@@Base+0x690>
  406508:	vpcmpeqd xmm1,xmm1,xmm1
  40650c:	vpsubq xmm0,xmm0,xmm1
  406510:	vmovdqa XMMWORD PTR [rip+0x92e8],xmm0        # 40f800 <__bss_start@@Base+0x690>
  406518:	vmovdqa xmm0,XMMWORD PTR [rip+0x92b0]        # 40f7d0 <__bss_start@@Base+0x660>
  406520:	vpsubq xmm0,xmm0,xmm1
  406524:	vmovdqa XMMWORD PTR [rip+0x92a4],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  40652c:	vmovdqa xmm0,XMMWORD PTR [rip+0x928c]        # 40f7c0 <__bss_start@@Base+0x650>
  406534:	vpsubq xmm0,xmm0,xmm1
  406538:	vmovdqa XMMWORD PTR [rip+0x9280],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  406540:	mov    DWORD PTR [rdi],0x2
  406546:	mov    QWORD PTR [rdi+0x8],0x0
  40654e:	mov    QWORD PTR [rdi+0x10],rsi
  406552:	mov    QWORD PTR [rdi+0x18],rdx
  406556:	ret    
  406557:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406560 <init_node_return@@Base>:
  406560:	vmovdqa xmm0,XMMWORD PTR [rip+0x92a8]        # 40f810 <__bss_start@@Base+0x6a0>
  406568:	vpcmpeqd xmm1,xmm1,xmm1
  40656c:	vpsubq xmm0,xmm0,xmm1
  406570:	vmovdqa XMMWORD PTR [rip+0x9298],xmm0        # 40f810 <__bss_start@@Base+0x6a0>
  406578:	vmovdqa xmm0,XMMWORD PTR [rip+0x9250]        # 40f7d0 <__bss_start@@Base+0x660>
  406580:	vpsubq xmm0,xmm0,xmm1
  406584:	vmovdqa XMMWORD PTR [rip+0x9244],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  40658c:	vmovdqa xmm0,XMMWORD PTR [rip+0x922c]        # 40f7c0 <__bss_start@@Base+0x650>
  406594:	vpsubq xmm0,xmm0,xmm1
  406598:	vmovdqa XMMWORD PTR [rip+0x9220],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  4065a0:	mov    DWORD PTR [rdi],0x3
  4065a6:	mov    QWORD PTR [rdi+0x8],0x0
  4065ae:	mov    QWORD PTR [rdi+0x10],rsi
  4065b2:	ret    
  4065b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065bd:	nop    DWORD PTR [rax]

00000000004065c0 <init_node_if@@Base>:
  4065c0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9258]        # 40f820 <__bss_start@@Base+0x6b0>
  4065c8:	vpcmpeqd xmm1,xmm1,xmm1
  4065cc:	vpsubq xmm0,xmm0,xmm1
  4065d0:	vmovdqa XMMWORD PTR [rip+0x9248],xmm0        # 40f820 <__bss_start@@Base+0x6b0>
  4065d8:	vmovdqa xmm0,XMMWORD PTR [rip+0x91f0]        # 40f7d0 <__bss_start@@Base+0x660>
  4065e0:	vpsubq xmm0,xmm0,xmm1
  4065e4:	vmovdqa XMMWORD PTR [rip+0x91e4],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  4065ec:	vmovdqa xmm0,XMMWORD PTR [rip+0x91cc]        # 40f7c0 <__bss_start@@Base+0x650>
  4065f4:	vpsubq xmm0,xmm0,xmm1
  4065f8:	vmovdqa XMMWORD PTR [rip+0x91c0],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  406600:	mov    DWORD PTR [rdi],0x4
  406606:	mov    QWORD PTR [rdi+0x8],0x0
  40660e:	mov    QWORD PTR [rdi+0x10],rsi
  406612:	mov    QWORD PTR [rdi+0x18],rdx
  406616:	mov    QWORD PTR [rdi+0x20],rcx
  40661a:	ret    
  40661b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406620 <init_node_boolean_operator@@Base>:
  406620:	vmovdqa xmm0,XMMWORD PTR [rip+0x9208]        # 40f830 <__bss_start@@Base+0x6c0>
  406628:	vpcmpeqd xmm1,xmm1,xmm1
  40662c:	vpsubq xmm0,xmm0,xmm1
  406630:	vmovdqa XMMWORD PTR [rip+0x91f8],xmm0        # 40f830 <__bss_start@@Base+0x6c0>
  406638:	vmovdqa xmm0,XMMWORD PTR [rip+0x9190]        # 40f7d0 <__bss_start@@Base+0x660>
  406640:	vpsubq xmm0,xmm0,xmm1
  406644:	vmovdqa XMMWORD PTR [rip+0x9184],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  40664c:	vmovdqa xmm0,XMMWORD PTR [rip+0x916c]        # 40f7c0 <__bss_start@@Base+0x650>
  406654:	vpsubq xmm0,xmm0,xmm1
  406658:	vmovdqa XMMWORD PTR [rip+0x9160],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  406660:	mov    QWORD PTR [rdi+0x8],0x0
  406668:	mov    DWORD PTR [rdi],0x5
  40666e:	mov    DWORD PTR [rdi+0x20],esi
  406671:	mov    QWORD PTR [rdi+0x10],rdx
  406675:	mov    QWORD PTR [rdi+0x18],rcx
  406679:	ret    
  40667a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406680 <free_node@@Base>:
  406680:	push   rbx
  406681:	add    QWORD PTR [rip+0x91b7],0x1        # 40f840 <__bss_start@@Base+0x6d0>
  406689:	mov    DWORD PTR [rip+0x8ac5],0x0        # 40f158 <__data_start@@Base+0x10>
  406693:	mov    eax,DWORD PTR [rdi]
  406695:	cmp    rax,0x5
  406699:	ja     4068c6 <free_node@@Base+0x246>
  40669f:	mov    rbx,rdi
  4066a2:	lea    rcx,[rip+0x4387]        # 40aa30 <_IO_stdin_used@@Base+0xa30>
  4066a9:	movsxd rax,DWORD PTR [rcx+rax*4]
  4066ad:	add    rax,rcx
  4066b0:	jmp    rax
  4066b2:	lea    rdi,[rip+0x8a9f]        # 40f158 <__data_start@@Base+0x10>
  4066b9:	lea    rsi,[rip+0x8198]        # 40e858 <_IO_stdin_used@@Base+0x4858>
  4066c0:	call   406d80 <get_boolean_op_value@@Base+0x250>
  4066c5:	add    QWORD PTR [rip+0x91b3],0x1        # 40f880 <__bss_start@@Base+0x710>
  4066cd:	lea    rax,[rip+0x91ec]        # 40f8c0 <__bss_start@@Base+0x750>
  4066d4:	add    QWORD PTR [rip+0x91e4],0x1        # 40f8c0 <__bss_start@@Base+0x750>
  4066dc:	mov    rdi,QWORD PTR [rbx+0x8]
  4066e0:	xor    ecx,ecx
  4066e2:	test   rdi,rdi
  4066e5:	sete   cl
  4066e8:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4066ee:	test   rdi,rdi
  4066f1:	je     406700 <free_node@@Base+0x80>
  4066f3:	add    QWORD PTR [rip+0x91dd],0x1        # 40f8d8 <__bss_start@@Base+0x768>
  4066fb:	call   406680 <free_node@@Base>
  406700:	add    QWORD PTR [rip+0x91d8],0x1        # 40f8e0 <__bss_start@@Base+0x770>
  406708:	jmp    4068b4 <free_node@@Base+0x234>
  40670d:	lea    rdi,[rip+0x8a44]        # 40f158 <__data_start@@Base+0x10>
  406714:	lea    rsi,[rip+0x815d]        # 40e878 <_IO_stdin_used@@Base+0x4878>
  40671b:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406720:	add    QWORD PTR [rip+0x9178],0x1        # 40f8a0 <__bss_start@@Base+0x730>
  406728:	mov    rdi,rbx
  40672b:	call   406a60 <free_node_if@@Base>
  406730:	jmp    4068bc <free_node@@Base+0x23c>
  406735:	lea    rdi,[rip+0x8a1c]        # 40f158 <__data_start@@Base+0x10>
  40673c:	lea    rsi,[rip+0x8125]        # 40e868 <_IO_stdin_used@@Base+0x4868>
  406743:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406748:	add    QWORD PTR [rip+0x9140],0x1        # 40f890 <__bss_start@@Base+0x720>
  406750:	lea    rax,[rip+0x91c9]        # 40f920 <__bss_start@@Base+0x7b0>
  406757:	add    QWORD PTR [rip+0x91c1],0x1        # 40f920 <__bss_start@@Base+0x7b0>
  40675f:	mov    rdi,QWORD PTR [rbx+0x8]
  406763:	xor    ecx,ecx
  406765:	test   rdi,rdi
  406768:	sete   cl
  40676b:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406771:	test   rdi,rdi
  406774:	je     406783 <free_node@@Base+0x103>
  406776:	add    QWORD PTR [rip+0x91ba],0x1        # 40f938 <__bss_start@@Base+0x7c8>
  40677e:	call   406680 <free_node@@Base>
  406783:	add    QWORD PTR [rip+0x91b5],0x1        # 40f940 <__bss_start@@Base+0x7d0>
  40678b:	mov    rdi,QWORD PTR [rbx+0x10]
  40678f:	call   403040 <free@plt>
  406794:	jmp    4068b4 <free_node@@Base+0x234>
  406799:	lea    rdi,[rip+0x89b8]        # 40f158 <__data_start@@Base+0x10>
  4067a0:	lea    rsi,[rip+0x80b9]        # 40e860 <_IO_stdin_used@@Base+0x4860>
  4067a7:	call   406d80 <get_boolean_op_value@@Base+0x250>
  4067ac:	add    QWORD PTR [rip+0x90d4],0x1        # 40f888 <__bss_start@@Base+0x718>
  4067b4:	lea    rax,[rip+0x9135]        # 40f8f0 <__bss_start@@Base+0x780>
  4067bb:	add    QWORD PTR [rip+0x912d],0x1        # 40f8f0 <__bss_start@@Base+0x780>
  4067c3:	mov    rdi,QWORD PTR [rbx+0x8]
  4067c7:	xor    ecx,ecx
  4067c9:	test   rdi,rdi
  4067cc:	sete   cl
  4067cf:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4067d5:	test   rdi,rdi
  4067d8:	je     4067e7 <free_node@@Base+0x167>
  4067da:	add    QWORD PTR [rip+0x9126],0x1        # 40f908 <__bss_start@@Base+0x798>
  4067e2:	call   406680 <free_node@@Base>
  4067e7:	add    QWORD PTR [rip+0x9121],0x1        # 40f910 <__bss_start@@Base+0x7a0>
  4067ef:	jmp    4068b4 <free_node@@Base+0x234>
  4067f4:	lea    rdi,[rip+0x895d]        # 40f158 <__data_start@@Base+0x10>
  4067fb:	lea    rsi,[rip+0x806e]        # 40e870 <_IO_stdin_used@@Base+0x4870>
  406802:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406807:	add    QWORD PTR [rip+0x9089],0x1        # 40f898 <__bss_start@@Base+0x728>
  40680f:	lea    rax,[rip+0x913a]        # 40f950 <__bss_start@@Base+0x7e0>
  406816:	add    QWORD PTR [rip+0x9132],0x1        # 40f950 <__bss_start@@Base+0x7e0>
  40681e:	mov    rdi,QWORD PTR [rbx+0x8]
  406822:	xor    ecx,ecx
  406824:	test   rdi,rdi
  406827:	sete   cl
  40682a:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406830:	test   rdi,rdi
  406833:	je     406842 <free_node@@Base+0x1c2>
  406835:	add    QWORD PTR [rip+0x912b],0x1        # 40f968 <__bss_start@@Base+0x7f8>
  40683d:	call   406680 <free_node@@Base>
  406842:	add    QWORD PTR [rip+0x9126],0x1        # 40f970 <__bss_start@@Base+0x800>
  40684a:	jmp    4068b4 <free_node@@Base+0x234>
  40684c:	lea    rdi,[rip+0x8905]        # 40f158 <__data_start@@Base+0x10>
  406853:	lea    rsi,[rip+0x8026]        # 40e880 <_IO_stdin_used@@Base+0x4880>
  40685a:	call   406d80 <get_boolean_op_value@@Base+0x250>
  40685f:	add    QWORD PTR [rip+0x9041],0x1        # 40f8a8 <__bss_start@@Base+0x738>
  406867:	lea    rax,[rip+0x9142]        # 40f9b0 <__bss_start@@Base+0x840>
  40686e:	add    QWORD PTR [rip+0x913a],0x1        # 40f9b0 <__bss_start@@Base+0x840>
  406876:	mov    rdi,QWORD PTR [rbx+0x8]
  40687a:	xor    ecx,ecx
  40687c:	test   rdi,rdi
  40687f:	sete   cl
  406882:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406888:	test   rdi,rdi
  40688b:	je     40689a <free_node@@Base+0x21a>
  40688d:	add    QWORD PTR [rip+0x9133],0x1        # 40f9c8 <__bss_start@@Base+0x858>
  406895:	call   406680 <free_node@@Base>
  40689a:	add    QWORD PTR [rip+0x912e],0x1        # 40f9d0 <__bss_start@@Base+0x860>
  4068a2:	mov    rdi,QWORD PTR [rbx+0x10]
  4068a6:	call   406680 <free_node@@Base>
  4068ab:	mov    rdi,QWORD PTR [rbx+0x18]
  4068af:	call   406680 <free_node@@Base>
  4068b4:	mov    rdi,rbx
  4068b7:	call   403040 <free@plt>
  4068bc:	add    QWORD PTR [rip+0x8fec],0x1        # 40f8b0 <__bss_start@@Base+0x740>
  4068c4:	pop    rbx
  4068c5:	ret    
  4068c6:	lea    rdi,[rip+0x888b]        # 40f158 <__data_start@@Base+0x10>
  4068cd:	lea    rsi,[rip+0x7f7c]        # 40e850 <_IO_stdin_used@@Base+0x4850>
  4068d4:	call   406d80 <get_boolean_op_value@@Base+0x250>
  4068d9:	mov    rax,QWORD PTR [rip+0x8718]        # 40eff8 <stderr@GLIBC_2.2.5>
  4068e0:	mov    rcx,QWORD PTR [rax]
  4068e3:	lea    rdi,[rip+0x415e]        # 40aa48 <_IO_stdin_used@@Base+0xa48>
  4068ea:	mov    esi,0x1f
  4068ef:	mov    edx,0x1
  4068f4:	call   403260 <fwrite@plt>
  4068f9:	mov    edi,0x1
  4068fe:	call   403250 <exit@plt>
  406903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40690d:	nop    DWORD PTR [rax]

0000000000406910 <free_node_id@@Base>:
  406910:	push   rbx
  406911:	mov    rbx,rdi
  406914:	lea    rax,[rip+0x8fa5]        # 40f8c0 <__bss_start@@Base+0x750>
  40691b:	add    QWORD PTR [rip+0x8f9d],0x1        # 40f8c0 <__bss_start@@Base+0x750>
  406923:	mov    rdi,QWORD PTR [rdi+0x8]
  406927:	xor    ecx,ecx
  406929:	test   rdi,rdi
  40692c:	sete   cl
  40692f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406935:	test   rdi,rdi
  406938:	je     406947 <free_node_id@@Base+0x37>
  40693a:	add    QWORD PTR [rip+0x8f96],0x1        # 40f8d8 <__bss_start@@Base+0x768>
  406942:	call   406680 <free_node@@Base>
  406947:	add    QWORD PTR [rip+0x8f91],0x1        # 40f8e0 <__bss_start@@Base+0x770>
  40694f:	mov    rdi,rbx
  406952:	pop    rbx
  406953:	jmp    403040 <free@plt>
  406958:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406960 <free_node_int@@Base>:
  406960:	push   rbx
  406961:	mov    rbx,rdi
  406964:	lea    rax,[rip+0x8f85]        # 40f8f0 <__bss_start@@Base+0x780>
  40696b:	add    QWORD PTR [rip+0x8f7d],0x1        # 40f8f0 <__bss_start@@Base+0x780>
  406973:	mov    rdi,QWORD PTR [rdi+0x8]
  406977:	xor    ecx,ecx
  406979:	test   rdi,rdi
  40697c:	sete   cl
  40697f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406985:	test   rdi,rdi
  406988:	je     406997 <free_node_int@@Base+0x37>
  40698a:	add    QWORD PTR [rip+0x8f76],0x1        # 40f908 <__bss_start@@Base+0x798>
  406992:	call   406680 <free_node@@Base>
  406997:	add    QWORD PTR [rip+0x8f71],0x1        # 40f910 <__bss_start@@Base+0x7a0>
  40699f:	mov    rdi,rbx
  4069a2:	pop    rbx
  4069a3:	jmp    403040 <free@plt>
  4069a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004069b0 <free_node_function@@Base>:
  4069b0:	push   rbx
  4069b1:	mov    rbx,rdi
  4069b4:	lea    rax,[rip+0x8f65]        # 40f920 <__bss_start@@Base+0x7b0>
  4069bb:	add    QWORD PTR [rip+0x8f5d],0x1        # 40f920 <__bss_start@@Base+0x7b0>
  4069c3:	mov    rdi,QWORD PTR [rdi+0x8]
  4069c7:	xor    ecx,ecx
  4069c9:	test   rdi,rdi
  4069cc:	sete   cl
  4069cf:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4069d5:	test   rdi,rdi
  4069d8:	je     4069e7 <free_node_function@@Base+0x37>
  4069da:	add    QWORD PTR [rip+0x8f56],0x1        # 40f938 <__bss_start@@Base+0x7c8>
  4069e2:	call   406680 <free_node@@Base>
  4069e7:	add    QWORD PTR [rip+0x8f51],0x1        # 40f940 <__bss_start@@Base+0x7d0>
  4069ef:	mov    rdi,QWORD PTR [rbx+0x10]
  4069f3:	call   403040 <free@plt>
  4069f8:	mov    rdi,rbx
  4069fb:	pop    rbx
  4069fc:	jmp    403040 <free@plt>
  406a01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a10 <free_node_return@@Base>:
  406a10:	push   rbx
  406a11:	mov    rbx,rdi
  406a14:	lea    rax,[rip+0x8f35]        # 40f950 <__bss_start@@Base+0x7e0>
  406a1b:	add    QWORD PTR [rip+0x8f2d],0x1        # 40f950 <__bss_start@@Base+0x7e0>
  406a23:	mov    rdi,QWORD PTR [rdi+0x8]
  406a27:	xor    ecx,ecx
  406a29:	test   rdi,rdi
  406a2c:	sete   cl
  406a2f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406a35:	test   rdi,rdi
  406a38:	je     406a47 <free_node_return@@Base+0x37>
  406a3a:	add    QWORD PTR [rip+0x8f26],0x1        # 40f968 <__bss_start@@Base+0x7f8>
  406a42:	call   406680 <free_node@@Base>
  406a47:	add    QWORD PTR [rip+0x8f21],0x1        # 40f970 <__bss_start@@Base+0x800>
  406a4f:	mov    rdi,rbx
  406a52:	pop    rbx
  406a53:	jmp    403040 <free@plt>
  406a58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a60 <free_node_if@@Base>:
  406a60:	push   rbx
  406a61:	mov    rbx,rdi
  406a64:	lea    rax,[rip+0x8f15]        # 40f980 <__bss_start@@Base+0x810>
  406a6b:	add    QWORD PTR [rip+0x8f0d],0x1        # 40f980 <__bss_start@@Base+0x810>
  406a73:	mov    rdi,QWORD PTR [rdi+0x8]
  406a77:	xor    ecx,ecx
  406a79:	test   rdi,rdi
  406a7c:	sete   cl
  406a7f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406a85:	test   rdi,rdi
  406a88:	je     406a97 <free_node_if@@Base+0x37>
  406a8a:	add    QWORD PTR [rip+0x8f06],0x1        # 40f998 <__bss_start@@Base+0x828>
  406a92:	call   406680 <free_node@@Base>
  406a97:	add    QWORD PTR [rip+0x8f01],0x1        # 40f9a0 <__bss_start@@Base+0x830>
  406a9f:	mov    rdi,QWORD PTR [rbx+0x10]
  406aa3:	call   406680 <free_node@@Base>
  406aa8:	mov    rdi,QWORD PTR [rbx+0x18]
  406aac:	call   406680 <free_node@@Base>
  406ab1:	mov    rdi,QWORD PTR [rbx+0x20]
  406ab5:	call   406680 <free_node@@Base>
  406aba:	mov    rdi,rbx
  406abd:	pop    rbx
  406abe:	jmp    403040 <free@plt>
  406ac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406acd:	nop    DWORD PTR [rax]

0000000000406ad0 <free_node_boolean_operator@@Base>:
  406ad0:	push   rbx
  406ad1:	mov    rbx,rdi
  406ad4:	lea    rax,[rip+0x8ed5]        # 40f9b0 <__bss_start@@Base+0x840>
  406adb:	add    QWORD PTR [rip+0x8ecd],0x1        # 40f9b0 <__bss_start@@Base+0x840>
  406ae3:	mov    rdi,QWORD PTR [rdi+0x8]
  406ae7:	xor    ecx,ecx
  406ae9:	test   rdi,rdi
  406aec:	sete   cl
  406aef:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406af5:	test   rdi,rdi
  406af8:	je     406b07 <free_node_boolean_operator@@Base+0x37>
  406afa:	add    QWORD PTR [rip+0x8ec6],0x1        # 40f9c8 <__bss_start@@Base+0x858>
  406b02:	call   406680 <free_node@@Base>
  406b07:	add    QWORD PTR [rip+0x8ec1],0x1        # 40f9d0 <__bss_start@@Base+0x860>
  406b0f:	mov    rdi,QWORD PTR [rbx+0x10]
  406b13:	call   406680 <free_node@@Base>
  406b18:	mov    rdi,QWORD PTR [rbx+0x18]
  406b1c:	call   406680 <free_node@@Base>
  406b21:	mov    rdi,rbx
  406b24:	pop    rbx
  406b25:	jmp    403040 <free@plt>
  406b2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406b30 <get_boolean_op_value@@Base>:
  406b30:	push   r14
  406b32:	push   rbx
  406b33:	push   rax
  406b34:	lea    r14,[rip+0x8ea5]        # 40f9e0 <__bss_start@@Base+0x870>
  406b3b:	add    QWORD PTR [rip+0x8e9d],0x1        # 40f9e0 <__bss_start@@Base+0x870>
  406b43:	mov    rbx,QWORD PTR [rdi+0x8]
  406b47:	mov    esi,0x2
  406b4c:	mov    rdi,rbx
  406b4f:	call   403170 <strnlen@plt>
  406b54:	xor    ecx,ecx
  406b56:	cmp    rax,0x2
  406b5a:	setne  cl
  406b5d:	add    QWORD PTR [r14+rcx*8+0x8],0x1
  406b63:	cmp    rax,0x2
  406b67:	jne    406c78 <get_boolean_op_value@@Base+0x148>
  406b6d:	lea    rsi,[rip+0x3ef4]        # 40aa68 <_IO_stdin_used@@Base+0xa68>
  406b74:	mov    edx,0x2
  406b79:	mov    rdi,rbx
  406b7c:	call   403070 <strncmp@plt>
  406b81:	xor    ecx,ecx
  406b83:	test   eax,eax
  406b85:	setne  cl
  406b88:	add    QWORD PTR [r14+rcx*8+0x18],0x1
  406b8e:	test   eax,eax
  406b90:	je     406cba <get_boolean_op_value@@Base+0x18a>
  406b96:	lea    rsi,[rip+0x3ece]        # 40aa6b <_IO_stdin_used@@Base+0xa6b>
  406b9d:	mov    edx,0x2
  406ba2:	mov    rdi,rbx
  406ba5:	call   403070 <strncmp@plt>
  406baa:	xor    ecx,ecx
  406bac:	test   eax,eax
  406bae:	setne  cl
  406bb1:	add    QWORD PTR [r14+rcx*8+0x30],0x1
  406bb7:	test   eax,eax
  406bb9:	je     406cfc <get_boolean_op_value@@Base+0x1cc>
  406bbf:	lea    rsi,[rip+0x3ea8]        # 40aa6e <_IO_stdin_used@@Base+0xa6e>
  406bc6:	mov    edx,0x2
  406bcb:	mov    rdi,rbx
  406bce:	call   403070 <strncmp@plt>
  406bd3:	xor    ecx,ecx
  406bd5:	test   eax,eax
  406bd7:	setne  cl
  406bda:	add    QWORD PTR [r14+rcx*8+0x48],0x1
  406be0:	test   eax,eax
  406be2:	je     406d0b <get_boolean_op_value@@Base+0x1db>
  406be8:	lea    rsi,[rip+0x3e82]        # 40aa71 <_IO_stdin_used@@Base+0xa71>
  406bef:	mov    edx,0x2
  406bf4:	mov    rdi,rbx
  406bf7:	call   403070 <strncmp@plt>
  406bfc:	xor    ecx,ecx
  406bfe:	test   eax,eax
  406c00:	setne  cl
  406c03:	add    QWORD PTR [r14+rcx*8+0x60],0x1
  406c09:	test   eax,eax
  406c0b:	je     406d1a <get_boolean_op_value@@Base+0x1ea>
  406c11:	lea    rsi,[rip+0x3e5c]        # 40aa74 <_IO_stdin_used@@Base+0xa74>
  406c18:	mov    edx,0x2
  406c1d:	mov    rdi,rbx
  406c20:	call   403070 <strncmp@plt>
  406c25:	xor    ecx,ecx
  406c27:	test   eax,eax
  406c29:	setne  cl
  406c2c:	add    QWORD PTR [r14+rcx*8+0x78],0x1
  406c32:	test   eax,eax
  406c34:	je     406d29 <get_boolean_op_value@@Base+0x1f9>
  406c3a:	lea    rsi,[rip+0x3e36]        # 40aa77 <_IO_stdin_used@@Base+0xa77>
  406c41:	mov    edx,0x2
  406c46:	mov    rdi,rbx
  406c49:	call   403070 <strncmp@plt>
  406c4e:	xor    ecx,ecx
  406c50:	test   eax,eax
  406c52:	setne  cl
  406c55:	add    QWORD PTR [r14+rcx*8+0x90],0x1
  406c5e:	test   eax,eax
  406c60:	jne    406d52 <get_boolean_op_value@@Base+0x222>
  406c66:	add    QWORD PTR [rip+0x8e12],0x1        # 40fa80 <__bss_start@@Base+0x910>
  406c6e:	mov    eax,0x5
  406c73:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406c78:	mov    DWORD PTR [rip+0x84da],0x0        # 40f15c <__data_start@@Base+0x14>
  406c82:	movsx  eax,BYTE PTR [rbx]
  406c85:	lea    rdi,[rip+0x84d0]        # 40f15c <__data_start@@Base+0x14>
  406c8c:	cmp    eax,0x3e
  406c8f:	je     406ce1 <get_boolean_op_value@@Base+0x1b1>
  406c91:	cmp    eax,0x3c
  406c94:	je     406cc6 <get_boolean_op_value@@Base+0x196>
  406c96:	cmp    eax,0x21
  406c99:	jne    406d46 <get_boolean_op_value@@Base+0x216>
  406c9f:	lea    rsi,[rip+0x7bf2]        # 40e898 <_IO_stdin_used@@Base+0x4898>
  406ca6:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406cab:	add    QWORD PTR [rip+0x8df5],0x1        # 40faa8 <__bss_start@@Base+0x938>
  406cb3:	mov    eax,0x8
  406cb8:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406cba:	add    QWORD PTR [rip+0x8d46],0x1        # 40fa08 <__bss_start@@Base+0x898>
  406cc2:	xor    eax,eax
  406cc4:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406cc6:	lea    rsi,[rip+0x7bd3]        # 40e8a0 <_IO_stdin_used@@Base+0x48a0>
  406ccd:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406cd2:	add    QWORD PTR [rip+0x8dd6],0x1        # 40fab0 <__bss_start@@Base+0x940>
  406cda:	mov    eax,0x6
  406cdf:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406ce1:	lea    rsi,[rip+0x7bc0]        # 40e8a8 <_IO_stdin_used@@Base+0x48a8>
  406ce8:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406ced:	add    QWORD PTR [rip+0x8dc3],0x1        # 40fab8 <__bss_start@@Base+0x948>
  406cf5:	mov    eax,0x7
  406cfa:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406cfc:	add    QWORD PTR [rip+0x8d1c],0x1        # 40fa20 <__bss_start@@Base+0x8b0>
  406d04:	mov    eax,0x1
  406d09:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406d0b:	add    QWORD PTR [rip+0x8d25],0x1        # 40fa38 <__bss_start@@Base+0x8c8>
  406d13:	mov    eax,0x2
  406d18:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406d1a:	add    QWORD PTR [rip+0x8d2e],0x1        # 40fa50 <__bss_start@@Base+0x8e0>
  406d22:	mov    eax,0x3
  406d27:	jmp    406d36 <get_boolean_op_value@@Base+0x206>
  406d29:	add    QWORD PTR [rip+0x8d37],0x1        # 40fa68 <__bss_start@@Base+0x8f8>
  406d31:	mov    eax,0x4
  406d36:	add    QWORD PTR [rip+0x8d82],0x1        # 40fac0 <__bss_start@@Base+0x950>
  406d3e:	add    rsp,0x8
  406d42:	pop    rbx
  406d43:	pop    r14
  406d45:	ret    
  406d46:	lea    rsi,[rip+0x7b43]        # 40e890 <_IO_stdin_used@@Base+0x4890>
  406d4d:	call   406d80 <get_boolean_op_value@@Base+0x250>
  406d52:	mov    rax,QWORD PTR [rip+0x829f]        # 40eff8 <stderr@GLIBC_2.2.5>
  406d59:	mov    rdi,QWORD PTR [rax]
  406d5c:	lea    rsi,[rip+0x3d17]        # 40aa7a <_IO_stdin_used@@Base+0xa7a>
  406d63:	xor    eax,eax
  406d65:	mov    rdx,rbx
  406d68:	call   403180 <fprintf@plt>
  406d6d:	mov    edi,0x1
  406d72:	call   403250 <exit@plt>
  406d77:	nop    WORD PTR [rax+rax*1+0x0]
  406d80:	mov    eax,DWORD PTR [rdi]
  406d82:	mov    ecx,0xffffffff
  406d87:	cmp    rax,rcx
  406d8a:	je     406d99 <get_boolean_op_value@@Base+0x269>
  406d8c:	mov    rax,QWORD PTR [rsi+rax*8]
  406d90:	test   rax,rax
  406d93:	je     406d99 <get_boolean_op_value@@Base+0x269>
  406d95:	add    QWORD PTR [rax],0x1
  406d99:	ret    
  406d9a:	nop    WORD PTR [rax+rax*1+0x0]
  406da0:	push   r15
  406da2:	push   r14
  406da4:	push   rbx
  406da5:	lea    rdi,[rip+0x3d74]        # 40ab20 <_IO_stdin_used@@Base+0xb20>
  406dac:	lea    rsi,[rip+0x36e1]        # 40a494 <_IO_stdin_used@@Base+0x494>
  406db3:	mov    edx,0x3bea7c70
  406db8:	call   407b50 <read_boolean_unary_expression@@Base+0x2d0>
  406dbd:	xor    ebx,ebx
  406dbf:	lea    r14,[rip+0x7aea]        # 40e8b0 <_IO_stdin_used@@Base+0x48b0>
  406dc6:	lea    r15,[rip+0x7ce3]        # 40eab0 <_IO_stdin_used@@Base+0x4ab0>
  406dcd:	nop    DWORD PTR [rax]
  406dd0:	mov    edi,DWORD PTR [r14+rbx*2]
  406dd4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406dd9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  406dde:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406de3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406de8:	call   407fa0 <read_boolean_unary_expression@@Base+0x720>
  406ded:	mov    edi,DWORD PTR [rbx+r15*1]
  406df1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  406df6:	call   4083d0 <read_boolean_unary_expression@@Base+0xb50>
  406dfb:	add    rbx,0x10
  406dff:	cmp    rbx,0x100
  406e06:	jne    406dd0 <get_boolean_op_value@@Base+0x2a0>
  406e08:	call   4087f0 <read_boolean_unary_expression@@Base+0xf70>
  406e0d:	pop    rbx
  406e0e:	pop    r14
  406e10:	pop    r15
  406e12:	jmp    408f90 <read_boolean_unary_expression@@Base+0x1710>
  406e17:	nop    WORD PTR [rax+rax*1+0x0]
  406e20:	push   rax
  406e21:	call   406da0 <get_boolean_op_value@@Base+0x270>
  406e26:	vxorps xmm0,xmm0,xmm0
  406e2a:	vmovaps XMMWORD PTR [rip+0x898e],xmm0        # 40f7c0 <__bss_start@@Base+0x650>
  406e32:	vmovaps XMMWORD PTR [rip+0x8996],xmm0        # 40f7d0 <__bss_start@@Base+0x660>
  406e3a:	vmovaps XMMWORD PTR [rip+0x899e],xmm0        # 40f7e0 <__bss_start@@Base+0x670>
  406e42:	vmovaps XMMWORD PTR [rip+0x89a6],xmm0        # 40f7f0 <__bss_start@@Base+0x680>
  406e4a:	vmovaps XMMWORD PTR [rip+0x89ae],xmm0        # 40f800 <__bss_start@@Base+0x690>
  406e52:	vmovaps XMMWORD PTR [rip+0x89b6],xmm0        # 40f810 <__bss_start@@Base+0x6a0>
  406e5a:	vmovaps XMMWORD PTR [rip+0x89be],xmm0        # 40f820 <__bss_start@@Base+0x6b0>
  406e62:	vmovaps XMMWORD PTR [rip+0x89c6],xmm0        # 40f830 <__bss_start@@Base+0x6c0>
  406e6a:	vxorps xmm0,xmm0,xmm0
  406e6e:	vmovups YMMWORD PTR [rip+0x8a22],ymm0        # 40f898 <__bss_start@@Base+0x728>
  406e76:	vmovups YMMWORD PTR [rip+0x8a02],ymm0        # 40f880 <__bss_start@@Base+0x710>
  406e7e:	vmovups YMMWORD PTR [rip+0x89da],ymm0        # 40f860 <__bss_start@@Base+0x6f0>
  406e86:	vmovups YMMWORD PTR [rip+0x89b2],ymm0        # 40f840 <__bss_start@@Base+0x6d0>
  406e8e:	vmovups YMMWORD PTR [rip+0x8a2a],ymm0        # 40f8c0 <__bss_start@@Base+0x750>
  406e96:	mov    QWORD PTR [rip+0x8a3f],0x0        # 40f8e0 <__bss_start@@Base+0x770>
  406ea1:	vmovups YMMWORD PTR [rip+0x8a47],ymm0        # 40f8f0 <__bss_start@@Base+0x780>
  406ea9:	mov    QWORD PTR [rip+0x8a5c],0x0        # 40f910 <__bss_start@@Base+0x7a0>
  406eb4:	vmovups YMMWORD PTR [rip+0x8a64],ymm0        # 40f920 <__bss_start@@Base+0x7b0>
  406ebc:	mov    QWORD PTR [rip+0x8a79],0x0        # 40f940 <__bss_start@@Base+0x7d0>
  406ec7:	vmovups YMMWORD PTR [rip+0x8a81],ymm0        # 40f950 <__bss_start@@Base+0x7e0>
  406ecf:	mov    QWORD PTR [rip+0x8a96],0x0        # 40f970 <__bss_start@@Base+0x800>
  406eda:	vmovups YMMWORD PTR [rip+0x8a9e],ymm0        # 40f980 <__bss_start@@Base+0x810>
  406ee2:	mov    QWORD PTR [rip+0x8ab3],0x0        # 40f9a0 <__bss_start@@Base+0x830>
  406eed:	vmovups YMMWORD PTR [rip+0x8abb],ymm0        # 40f9b0 <__bss_start@@Base+0x840>
  406ef5:	vmovups YMMWORD PTR [rip+0x8ba3],ymm0        # 40faa0 <__bss_start@@Base+0x930>
  406efd:	vmovups YMMWORD PTR [rip+0x8b7b],ymm0        # 40fa80 <__bss_start@@Base+0x910>
  406f05:	vmovups YMMWORD PTR [rip+0x8b53],ymm0        # 40fa60 <__bss_start@@Base+0x8f0>
  406f0d:	vmovups YMMWORD PTR [rip+0x8b2b],ymm0        # 40fa40 <__bss_start@@Base+0x8d0>
  406f15:	vmovups YMMWORD PTR [rip+0x8b03],ymm0        # 40fa20 <__bss_start@@Base+0x8b0>
  406f1d:	mov    QWORD PTR [rip+0x8aa8],0x0        # 40f9d0 <__bss_start@@Base+0x860>
  406f28:	vmovups YMMWORD PTR [rip+0x8ad0],ymm0        # 40fa00 <__bss_start@@Base+0x890>
  406f30:	vmovups YMMWORD PTR [rip+0x8aa8],ymm0        # 40f9e0 <__bss_start@@Base+0x870>
  406f38:	mov    QWORD PTR [rip+0x8b7d],0x0        # 40fac0 <__bss_start@@Base+0x950>
  406f43:	pop    rax
  406f44:	vzeroupper 
  406f47:	ret    
  406f48:	nop    DWORD PTR [rax+rax*1+0x0]
  406f50:	lea    rdi,[rip+0xfffffffffffffe49]        # 406da0 <get_boolean_op_value@@Base+0x270>
  406f57:	lea    rsi,[rip+0xfffffffffffffec2]        # 406e20 <get_boolean_op_value@@Base+0x2f0>
  406f5e:	jmp    409350 <__gcov_flush@@Base+0xa0>
  406f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f6d:	nop    DWORD PTR [rax]

0000000000406f70 <init_grammar@@Base>:
  406f70:	vmovdqa xmm0,XMMWORD PTR [rip+0x8b58]        # 40fad0 <__bss_start@@Base+0x960>
  406f78:	vpcmpeqd xmm1,xmm1,xmm1
  406f7c:	vpsubq xmm0,xmm0,xmm1
  406f80:	vmovdqa XMMWORD PTR [rip+0x8b48],xmm0        # 40fad0 <__bss_start@@Base+0x960>
  406f88:	mov    QWORD PTR [rdi],rsi
  406f8b:	ret    
  406f8c:	nop    DWORD PTR [rax+0x0]

0000000000406f90 <destroy_grammar@@Base>:
  406f90:	vmovdqa xmm0,XMMWORD PTR [rip+0x8b48]        # 40fae0 <__bss_start@@Base+0x970>
  406f98:	vpcmpeqd xmm1,xmm1,xmm1
  406f9c:	vpsubq xmm0,xmm0,xmm1
  406fa0:	vmovdqa XMMWORD PTR [rip+0x8b38],xmm0        # 40fae0 <__bss_start@@Base+0x970>
  406fa8:	ret    
  406fa9:	nop    DWORD PTR [rax+0x0]

0000000000406fb0 <build_ast@@Base>:
  406fb0:	vmovdqa xmm0,XMMWORD PTR [rip+0x8b38]        # 40faf0 <__bss_start@@Base+0x980>
  406fb8:	vpcmpeqd xmm1,xmm1,xmm1
  406fbc:	vpsubq xmm0,xmm0,xmm1
  406fc0:	vmovdqa XMMWORD PTR [rip+0x8b28],xmm0        # 40faf0 <__bss_start@@Base+0x980>
  406fc8:	jmp    406fd0 <read_function_ast_node@@Base>
  406fcd:	nop    DWORD PTR [rax]

0000000000406fd0 <read_function_ast_node@@Base>:
  406fd0:	push   r15
  406fd2:	push   r14
  406fd4:	push   rbx
  406fd5:	mov    rbx,rdi
  406fd8:	lea    r15,[rip+0x8b21]        # 40fb00 <__bss_start@@Base+0x990>
  406fdf:	add    QWORD PTR [rip+0x8b19],0x1        # 40fb00 <__bss_start@@Base+0x990>
  406fe7:	mov    rdi,QWORD PTR [rdi]
  406fea:	call   403380 <next@@Base>
  406fef:	mov    ecx,DWORD PTR [rax]
  406ff1:	xor    edx,edx
  406ff3:	test   ecx,ecx
  406ff5:	sete   dl
  406ff8:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  406ffe:	test   ecx,ecx
  407000:	je     407011 <read_function_ast_node@@Base+0x41>
  407002:	add    QWORD PTR [rip+0x8b0e],0x1        # 40fb18 <__bss_start@@Base+0x9a8>
  40700a:	xor    ebx,ebx
  40700c:	jmp    4070e1 <read_function_ast_node@@Base+0x111>
  407011:	mov    rdi,rax
  407014:	call   406080 <free_token_int_type@@Base>
  407019:	mov    rdi,QWORD PTR [rbx]
  40701c:	call   403380 <next@@Base>
  407021:	mov    r14,rax
  407024:	mov    eax,DWORD PTR [rax]
  407026:	xor    ecx,ecx
  407028:	cmp    eax,0x2
  40702b:	sete   cl
  40702e:	add    QWORD PTR [r15+rcx*8+0x20],0x1
  407034:	cmp    eax,0x2
  407037:	je     407048 <read_function_ast_node@@Base+0x78>
  407039:	add    QWORD PTR [rip+0x8aef],0x1        # 40fb30 <__bss_start@@Base+0x9c0>
  407041:	xor    ebx,ebx
  407043:	jmp    4070e1 <read_function_ast_node@@Base+0x111>
  407048:	mov    rdi,QWORD PTR [rbx]
  40704b:	call   403380 <next@@Base>
  407050:	mov    ecx,DWORD PTR [rax]
  407052:	xor    edx,edx
  407054:	cmp    ecx,0x3
  407057:	sete   dl
  40705a:	add    QWORD PTR [r15+rdx*8+0x38],0x1
  407060:	cmp    ecx,0x3
  407063:	je     407071 <read_function_ast_node@@Base+0xa1>
  407065:	add    QWORD PTR [rip+0x8adb],0x1        # 40fb48 <__bss_start@@Base+0x9d8>
  40706d:	xor    ebx,ebx
  40706f:	jmp    4070e1 <read_function_ast_node@@Base+0x111>
  407071:	mov    rdi,rax
  407074:	call   4060e0 <free_token_opar@@Base>
  407079:	mov    rdi,QWORD PTR [rbx]
  40707c:	call   403380 <next@@Base>
  407081:	mov    ecx,DWORD PTR [rax]
  407083:	xor    edx,edx
  407085:	cmp    ecx,0x4
  407088:	sete   dl
  40708b:	add    QWORD PTR [r15+rdx*8+0x50],0x1
  407091:	cmp    ecx,0x4
  407094:	je     4070a2 <read_function_ast_node@@Base+0xd2>
  407096:	add    QWORD PTR [rip+0x8ac2],0x1        # 40fb60 <__bss_start@@Base+0x9f0>
  40709e:	xor    ebx,ebx
  4070a0:	jmp    4070e1 <read_function_ast_node@@Base+0x111>
  4070a2:	add    QWORD PTR [rip+0x8abe],0x1        # 40fb68 <__bss_start@@Base+0x9f8>
  4070aa:	mov    rdi,rax
  4070ad:	call   406100 <free_token_cpar@@Base>
  4070b2:	mov    rdi,rbx
  4070b5:	call   407100 <read_body@@Base>
  4070ba:	mov    r15,rax
  4070bd:	mov    edi,0x20
  4070c2:	call   4031d0 <malloc@plt>
  4070c7:	mov    rbx,rax
  4070ca:	mov    rsi,QWORD PTR [r14+0x8]
  4070ce:	mov    rdi,rax
  4070d1:	mov    rdx,r15
  4070d4:	call   406500 <init_node_function@@Base>
  4070d9:	mov    rdi,r14
  4070dc:	call   4060c0 <free_token_function@@Base>
  4070e1:	add    QWORD PTR [rip+0x8a87],0x1        # 40fb70 <__bss_start@@Base+0xa00>
  4070e9:	mov    rax,rbx
  4070ec:	pop    rbx
  4070ed:	pop    r14
  4070ef:	pop    r15
  4070f1:	ret    
  4070f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070fc:	nop    DWORD PTR [rax+0x0]

0000000000407100 <read_body@@Base>:
  407100:	push   rbp
  407101:	push   r15
  407103:	push   r14
  407105:	push   r13
  407107:	push   r12
  407109:	push   rbx
  40710a:	push   rax
  40710b:	mov    r14,rdi
  40710e:	lea    r13,[rip+0x8a6b]        # 40fb80 <__bss_start@@Base+0xa10>
  407115:	add    QWORD PTR [rip+0x8a63],0x1        # 40fb80 <__bss_start@@Base+0xa10>
  40711d:	mov    rdi,QWORD PTR [rdi]
  407120:	call   403380 <next@@Base>
  407125:	mov    ecx,DWORD PTR [rax]
  407127:	xor    edx,edx
  407129:	cmp    ecx,0x5
  40712c:	sete   dl
  40712f:	add    QWORD PTR [r13+rdx*8+0x8],0x1
  407135:	cmp    ecx,0x5
  407138:	je     407149 <read_body@@Base+0x49>
  40713a:	add    QWORD PTR [rip+0x8a56],0x1        # 40fb98 <__bss_start@@Base+0xa28>
  407142:	xor    ebx,ebx
  407144:	jmp    40729f <read_body@@Base+0x19f>
  407149:	add    QWORD PTR [rip+0x8a4f],0x1        # 40fba0 <__bss_start@@Base+0xa30>
  407151:	mov    rdi,rax
  407154:	call   406120 <free_token_obra@@Base>
  407159:	mov    rdi,QWORD PTR [r14]
  40715c:	call   403380 <next@@Base>
  407161:	mov    rbp,rax
  407164:	mov    eax,DWORD PTR [rax]
  407166:	xor    ecx,ecx
  407168:	cmp    eax,0x6
  40716b:	sete   cl
  40716e:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  407174:	cmp    eax,0x6
  407177:	je     40726c <read_body@@Base+0x16c>
  40717d:	xor    r15d,r15d
  407180:	xor    ebx,ebx
  407182:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40718c:	nop    DWORD PTR [rax+0x0]
  407190:	mov    DWORD PTR [rip+0x7fc6],0x0        # 40f160 <__data_start@@Base+0x18>
  40719a:	lea    rdi,[rip+0x7fbf]        # 40f160 <__data_start@@Base+0x18>
  4071a1:	cmp    eax,0xa
  4071a4:	je     4071e0 <read_body@@Base+0xe0>
  4071a6:	cmp    eax,0x7
  4071a9:	jne    407280 <read_body@@Base+0x180>
  4071af:	lea    rsi,[rip+0x7a02]        # 40ebb8 <_IO_stdin_used@@Base+0x4bb8>
  4071b6:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  4071bb:	add    QWORD PTR [rip+0x8a0d],0x1        # 40fbd0 <__bss_start@@Base+0xa60>
  4071c3:	mov    rdi,rbp
  4071c6:	call   406160 <free_token_return@@Base>
  4071cb:	mov    rdi,r14
  4071ce:	call   4072c0 <read_return_expression@@Base>
  4071d3:	jmp    407204 <read_body@@Base+0x104>
  4071d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071df:	nop
  4071e0:	lea    rsi,[rip+0x79d9]        # 40ebc0 <_IO_stdin_used@@Base+0x4bc0>
  4071e7:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  4071ec:	add    QWORD PTR [rip+0x89e4],0x1        # 40fbd8 <__bss_start@@Base+0xa68>
  4071f4:	mov    rdi,rbp
  4071f7:	call   4061c0 <free_token_if@@Base>
  4071fc:	mov    rdi,r14
  4071ff:	call   407390 <read_if_statement@@Base>
  407204:	mov    r12,rax
  407207:	xor    eax,eax
  407209:	test   rbx,rbx
  40720c:	sete   al
  40720f:	add    QWORD PTR [r13+rax*8+0x68],0x1
  407215:	test   rbx,rbx
  407218:	je     407230 <read_body@@Base+0x130>
  40721a:	add    QWORD PTR [rip+0x89d6],0x1        # 40fbf8 <__bss_start@@Base+0xa88>
  407222:	mov    QWORD PTR [r15+0x8],r12
  407226:	jmp    40723b <read_body@@Base+0x13b>
  407228:	nop    DWORD PTR [rax+rax*1+0x0]
  407230:	add    QWORD PTR [rip+0x89c8],0x1        # 40fc00 <__bss_start@@Base+0xa90>
  407238:	mov    rbx,r12
  40723b:	add    QWORD PTR [rip+0x89c5],0x1        # 40fc08 <__bss_start@@Base+0xa98>
  407243:	mov    rdi,QWORD PTR [r14]
  407246:	call   403380 <next@@Base>
  40724b:	mov    rbp,rax
  40724e:	mov    eax,DWORD PTR [rax]
  407250:	xor    ecx,ecx
  407252:	cmp    eax,0x6
  407255:	sete   cl
  407258:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  40725e:	mov    r15,r12
  407261:	cmp    eax,0x6
  407264:	jne    407190 <read_body@@Base+0x90>
  40726a:	jmp    40726e <read_body@@Base+0x16e>
  40726c:	xor    ebx,ebx
  40726e:	add    QWORD PTR [rip+0x899a],0x1        # 40fc10 <__bss_start@@Base+0xaa0>
  407276:	mov    rdi,rbp
  407279:	call   406140 <free_token_cbra@@Base>
  40727e:	jmp    40729f <read_body@@Base+0x19f>
  407280:	lea    rsi,[rip+0x7929]        # 40ebb0 <_IO_stdin_used@@Base+0x4bb0>
  407287:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  40728c:	add    QWORD PTR [rip+0x894c],0x1        # 40fbe0 <__bss_start@@Base+0xa70>
  407294:	mov    rdi,QWORD PTR [r14]
  407297:	mov    rsi,rbp
  40729a:	call   403580 <push_back@@Base>
  40729f:	add    QWORD PTR [rip+0x8971],0x1        # 40fc18 <__bss_start@@Base+0xaa8>
  4072a7:	mov    rax,rbx
  4072aa:	add    rsp,0x8
  4072ae:	pop    rbx
  4072af:	pop    r12
  4072b1:	pop    r13
  4072b3:	pop    r14
  4072b5:	pop    r15
  4072b7:	pop    rbp
  4072b8:	ret    
  4072b9:	nop    DWORD PTR [rax+0x0]

00000000004072c0 <read_return_expression@@Base>:
  4072c0:	push   r15
  4072c2:	push   r14
  4072c4:	push   r12
  4072c6:	push   rbx
  4072c7:	push   rax
  4072c8:	mov    r14,rdi
  4072cb:	lea    r12,[rip+0x894e]        # 40fc20 <__bss_start@@Base+0xab0>
  4072d2:	add    QWORD PTR [rip+0x8946],0x1        # 40fc20 <__bss_start@@Base+0xab0>
  4072da:	mov    rdi,QWORD PTR [rdi]
  4072dd:	call   403380 <next@@Base>
  4072e2:	mov    rbx,rax
  4072e5:	mov    eax,DWORD PTR [rax]
  4072e7:	xor    ecx,ecx
  4072e9:	cmp    eax,0x1
  4072ec:	sete   cl
  4072ef:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  4072f5:	cmp    eax,0x1
  4072f8:	je     407306 <read_return_expression@@Base+0x46>
  4072fa:	add    QWORD PTR [rip+0x8936],0x1        # 40fc38 <__bss_start@@Base+0xac8>
  407302:	xor    ebx,ebx
  407304:	jmp    407377 <read_return_expression@@Base+0xb7>
  407306:	mov    edi,0x18
  40730b:	call   4031d0 <malloc@plt>
  407310:	mov    r15,rax
  407313:	mov    esi,DWORD PTR [rbx+0x4]
  407316:	mov    rdi,rax
  407319:	call   4064a0 <init_node_int@@Base>
  40731e:	mov    rdi,rbx
  407321:	call   4060a0 <free_token_int_value@@Base>
  407326:	mov    edi,0x18
  40732b:	call   4031d0 <malloc@plt>
  407330:	mov    rbx,rax
  407333:	mov    rdi,rax
  407336:	mov    rsi,r15
  407339:	call   406560 <init_node_return@@Base>
  40733e:	mov    rdi,QWORD PTR [r14]
  407341:	call   403380 <next@@Base>
  407346:	mov    ecx,DWORD PTR [rax]
  407348:	xor    edx,edx
  40734a:	cmp    ecx,0x8
  40734d:	sete   dl
  407350:	add    QWORD PTR [r12+rdx*8+0x20],0x1
  407356:	cmp    ecx,0x8
  407359:	je     407367 <read_return_expression@@Base+0xa7>
  40735b:	add    QWORD PTR [rip+0x88ed],0x1        # 40fc50 <__bss_start@@Base+0xae0>
  407363:	xor    ebx,ebx
  407365:	jmp    407377 <read_return_expression@@Base+0xb7>
  407367:	add    QWORD PTR [rip+0x88e9],0x1        # 40fc58 <__bss_start@@Base+0xae8>
  40736f:	mov    rdi,rax
  407372:	call   406180 <free_token_semicolon@@Base>
  407377:	add    QWORD PTR [rip+0x88e1],0x1        # 40fc60 <__bss_start@@Base+0xaf0>
  40737f:	mov    rax,rbx
  407382:	add    rsp,0x8
  407386:	pop    rbx
  407387:	pop    r12
  407389:	pop    r14
  40738b:	pop    r15
  40738d:	ret    
  40738e:	xchg   ax,ax

0000000000407390 <read_if_statement@@Base>:
  407390:	push   r15
  407392:	push   r14
  407394:	push   r12
  407396:	push   rbx
  407397:	push   rax
  407398:	mov    rbx,rdi
  40739b:	lea    r12,[rip+0x88ce]        # 40fc70 <__bss_start@@Base+0xb00>
  4073a2:	add    QWORD PTR [rip+0x88c6],0x1        # 40fc70 <__bss_start@@Base+0xb00>
  4073aa:	mov    rdi,QWORD PTR [rdi]
  4073ad:	call   403380 <next@@Base>
  4073b2:	mov    ecx,DWORD PTR [rax]
  4073b4:	xor    edx,edx
  4073b6:	cmp    ecx,0x3
  4073b9:	sete   dl
  4073bc:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  4073c2:	cmp    ecx,0x3
  4073c5:	je     4073d6 <read_if_statement@@Base+0x46>
  4073c7:	add    QWORD PTR [rip+0x88b9],0x1        # 40fc88 <__bss_start@@Base+0xb18>
  4073cf:	xor    ebx,ebx
  4073d1:	jmp    40746a <read_if_statement@@Base+0xda>
  4073d6:	mov    rdi,rax
  4073d9:	call   4060e0 <free_token_opar@@Base>
  4073de:	mov    rdi,rbx
  4073e1:	call   407490 <read_boolean_expression@@Base>
  4073e6:	mov    r14,rax
  4073e9:	mov    rdi,rbx
  4073ec:	call   407100 <read_body@@Base>
  4073f1:	mov    r15,rax
  4073f4:	mov    rdi,QWORD PTR [rbx]
  4073f7:	call   403380 <next@@Base>
  4073fc:	mov    ecx,DWORD PTR [rax]
  4073fe:	xor    edx,edx
  407400:	cmp    ecx,0xb
  407403:	setne  dl
  407406:	add    QWORD PTR [r12+rdx*8+0x20],0x1
  40740c:	cmp    ecx,0xb
  40740f:	jne    40742e <read_if_statement@@Base+0x9e>
  407411:	add    QWORD PTR [rip+0x8887],0x1        # 40fca0 <__bss_start@@Base+0xb30>
  407419:	mov    rdi,rax
  40741c:	call   4061e0 <free_token_else@@Base>
  407421:	mov    rdi,rbx
  407424:	call   407100 <read_body@@Base>
  407429:	mov    r12,rax
  40742c:	jmp    407444 <read_if_statement@@Base+0xb4>
  40742e:	add    QWORD PTR [rip+0x8872],0x1        # 40fca8 <__bss_start@@Base+0xb38>
  407436:	mov    rdi,QWORD PTR [rbx]
  407439:	mov    rsi,rax
  40743c:	call   403580 <push_back@@Base>
  407441:	xor    r12d,r12d
  407444:	add    QWORD PTR [rip+0x8864],0x1        # 40fcb0 <__bss_start@@Base+0xb40>
  40744c:	mov    edi,0x28
  407451:	call   4031d0 <malloc@plt>
  407456:	mov    rbx,rax
  407459:	mov    rdi,rax
  40745c:	mov    rsi,r14
  40745f:	mov    rdx,r15
  407462:	mov    rcx,r12
  407465:	call   4065c0 <init_node_if@@Base>
  40746a:	add    QWORD PTR [rip+0x8846],0x1        # 40fcb8 <__bss_start@@Base+0xb48>
  407472:	mov    rax,rbx
  407475:	add    rsp,0x8
  407479:	pop    rbx
  40747a:	pop    r12
  40747c:	pop    r14
  40747e:	pop    r15
  407480:	ret    
  407481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40748b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407490 <read_boolean_expression@@Base>:
  407490:	push   rbp
  407491:	push   r15
  407493:	push   r14
  407495:	push   r13
  407497:	push   r12
  407499:	push   rbx
  40749a:	push   rax
  40749b:	mov    rbx,rdi
  40749e:	lea    rbp,[rip+0x881b]        # 40fcc0 <__bss_start@@Base+0xb50>
  4074a5:	vmovdqa xmm0,XMMWORD PTR [rip+0x8813]        # 40fcc0 <__bss_start@@Base+0xb50>
  4074ad:	vpcmpeqd xmm1,xmm1,xmm1
  4074b1:	vpsubq xmm0,xmm0,xmm1
  4074b5:	vmovdqa XMMWORD PTR [rip+0x8803],xmm0        # 40fcc0 <__bss_start@@Base+0xb50>
  4074bd:	mov    DWORD PTR [rsp+0x4],0x0
  4074c5:	mov    rdi,QWORD PTR [rdi]
  4074c8:	call   403380 <next@@Base>
  4074cd:	mov    r12,rax
  4074d0:	mov    eax,DWORD PTR [rax]
  4074d2:	xor    ecx,ecx
  4074d4:	cmp    eax,0x4
  4074d7:	sete   cl
  4074da:	add    QWORD PTR [rbp+rcx*8+0x10],0x1
  4074e0:	xor    r14d,r14d
  4074e3:	cmp    eax,0x4
  4074e6:	je     4075d6 <read_boolean_expression@@Base+0x146>
  4074ec:	lea    r15,[rip+0x7c71]        # 40f164 <__data_start@@Base+0x1c>
  4074f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074fd:	nop    DWORD PTR [rax]
  407500:	mov    DWORD PTR [rip+0x7c5a],0x0        # 40f164 <__data_start@@Base+0x1c>
  40750a:	cmp    eax,0xc
  40750d:	je     407580 <read_boolean_expression@@Base+0xf0>
  40750f:	cmp    eax,0x3
  407512:	je     407550 <read_boolean_expression@@Base+0xc0>
  407514:	cmp    eax,0x1
  407517:	jne    4075f8 <read_boolean_expression@@Base+0x168>
  40751d:	mov    rdi,r15
  407520:	lea    rsi,[rip+0x76b1]        # 40ebd8 <_IO_stdin_used@@Base+0x4bd8>
  407527:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  40752c:	add    QWORD PTR [rip+0x87cc],0x1        # 40fd00 <__bss_start@@Base+0xb90>
  407534:	mov    rdi,QWORD PTR [rbx]
  407537:	mov    rsi,r12
  40753a:	call   403580 <push_back@@Base>
  40753f:	jmp    407567 <read_boolean_expression@@Base+0xd7>
  407541:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40754b:	nop    DWORD PTR [rax+rax*1+0x0]
  407550:	mov    rdi,r15
  407553:	lea    rsi,[rip+0x768e]        # 40ebe8 <_IO_stdin_used@@Base+0x4be8>
  40755a:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  40755f:	add    QWORD PTR [rip+0x87a9],0x1        # 40fd10 <__bss_start@@Base+0xba0>
  407567:	mov    rdi,rbx
  40756a:	mov    rsi,r14
  40756d:	lea    rdx,[rsp+0x4]
  407572:	mov    ecx,r13d
  407575:	call   407640 <read_single_boolean_expression@@Base>
  40757a:	mov    r14,rax
  40757d:	jmp    4075aa <read_boolean_expression@@Base+0x11a>
  40757f:	nop
  407580:	mov    rdi,r15
  407583:	lea    rsi,[rip+0x7656]        # 40ebe0 <_IO_stdin_used@@Base+0x4be0>
  40758a:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  40758f:	add    QWORD PTR [rip+0x8771],0x1        # 40fd08 <__bss_start@@Base+0xb98>
  407597:	mov    rdi,r12
  40759a:	call   406b30 <get_boolean_op_value@@Base>
  40759f:	mov    r13d,eax
  4075a2:	mov    DWORD PTR [rsp+0x4],0x1
  4075aa:	add    QWORD PTR [rip+0x8766],0x1        # 40fd18 <__bss_start@@Base+0xba8>
  4075b2:	mov    rdi,QWORD PTR [rbx]
  4075b5:	call   403380 <next@@Base>
  4075ba:	mov    r12,rax
  4075bd:	mov    eax,DWORD PTR [rax]
  4075bf:	xor    ecx,ecx
  4075c1:	cmp    eax,0x4
  4075c4:	sete   cl
  4075c7:	add    QWORD PTR [rbp+rcx*8+0x10],0x1
  4075cd:	cmp    eax,0x4
  4075d0:	jne    407500 <read_boolean_expression@@Base+0x70>
  4075d6:	add    QWORD PTR [rip+0x8742],0x1        # 40fd20 <__bss_start@@Base+0xbb0>
  4075de:	mov    rdi,r12
  4075e1:	call   406100 <free_token_cpar@@Base>
  4075e6:	mov    rax,r14
  4075e9:	add    rsp,0x8
  4075ed:	pop    rbx
  4075ee:	pop    r12
  4075f0:	pop    r13
  4075f2:	pop    r14
  4075f4:	pop    r15
  4075f6:	pop    rbp
  4075f7:	ret    
  4075f8:	lea    rdi,[rip+0x7b65]        # 40f164 <__data_start@@Base+0x1c>
  4075ff:	lea    rsi,[rip+0x75ca]        # 40ebd0 <_IO_stdin_used@@Base+0x4bd0>
  407606:	call   407970 <read_boolean_unary_expression@@Base+0xf0>
  40760b:	mov    rax,QWORD PTR [rip+0x79e6]        # 40eff8 <stderr@GLIBC_2.2.5>
  407612:	mov    rcx,QWORD PTR [rax]
  407615:	lea    rdi,[rip+0x3679]        # 40ac95 <_IO_stdin_used@@Base+0xc95>
  40761c:	mov    esi,0x21
  407621:	mov    edx,0x1
  407626:	call   403260 <fwrite@plt>
  40762b:	mov    edi,0x1
  407630:	call   403250 <exit@plt>
  407635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40763f:	nop

0000000000407640 <read_single_boolean_expression@@Base>:
  407640:	push   rbp
  407641:	push   r15
  407643:	push   r14
  407645:	push   rbx
  407646:	push   rax
  407647:	mov    r14d,ecx
  40764a:	lea    rax,[rip+0x86df]        # 40fd30 <__bss_start@@Base+0xbc0>
  407651:	add    QWORD PTR [rip+0x86d7],0x1        # 40fd30 <__bss_start@@Base+0xbc0>
  407659:	xor    ecx,ecx
  40765b:	test   rsi,rsi
  40765e:	setne  cl
  407661:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  407667:	test   rsi,rsi
  40766a:	je     4076b8 <read_single_boolean_expression@@Base+0x78>
  40766c:	mov    r15,rdx
  40766f:	mov    ecx,DWORD PTR [rdx]
  407671:	xor    edx,edx
  407673:	test   ecx,ecx
  407675:	sete   dl
  407678:	add    QWORD PTR [rax+rdx*8+0x20],0x1
  40767e:	test   ecx,ecx
  407680:	je     4076de <read_single_boolean_expression@@Base+0x9e>
  407682:	add    QWORD PTR [rip+0x86d6],0x1        # 40fd60 <__bss_start@@Base+0xbf0>
  40768a:	call   407710 <read_boolean_binary_expression@@Base>
  40768f:	mov    rbx,rax
  407692:	mov    edi,0x28
  407697:	call   4031d0 <malloc@plt>
  40769c:	mov    rbp,rax
  40769f:	xor    edx,edx
  4076a1:	mov    rdi,rax
  4076a4:	mov    esi,r14d
  4076a7:	mov    rcx,rbx
  4076aa:	call   406620 <init_node_boolean_operator@@Base>
  4076af:	mov    DWORD PTR [r15],0x0
  4076b6:	jmp    4076c8 <read_single_boolean_expression@@Base+0x88>
  4076b8:	add    QWORD PTR [rip+0x8688],0x1        # 40fd48 <__bss_start@@Base+0xbd8>
  4076c0:	call   407710 <read_boolean_binary_expression@@Base>
  4076c5:	mov    rbp,rax
  4076c8:	add    QWORD PTR [rip+0x8698],0x1        # 40fd68 <__bss_start@@Base+0xbf8>
  4076d0:	mov    rax,rbp
  4076d3:	add    rsp,0x8
  4076d7:	pop    rbx
  4076d8:	pop    r14
  4076da:	pop    r15
  4076dc:	pop    rbp
  4076dd:	ret    
  4076de:	mov    rax,QWORD PTR [rip+0x7913]        # 40eff8 <stderr@GLIBC_2.2.5>
  4076e5:	mov    rdi,QWORD PTR [rax]
  4076e8:	mov    edx,DWORD PTR ds:0x4
  4076ef:	lea    rsi,[rip+0x35c1]        # 40acb7 <_IO_stdin_used@@Base+0xcb7>
  4076f6:	xor    eax,eax
  4076f8:	call   403180 <fprintf@plt>
  4076fd:	mov    edi,0x1
  407702:	call   403250 <exit@plt>
  407707:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407710 <read_boolean_binary_expression@@Base>:
  407710:	push   rbp
  407711:	push   r15
  407713:	push   r14
  407715:	push   r12
  407717:	push   rbx
  407718:	mov    rbx,rdi
  40771b:	lea    r12,[rip+0x864e]        # 40fd70 <__bss_start@@Base+0xc00>
  407722:	add    QWORD PTR [rip+0x8646],0x1        # 40fd70 <__bss_start@@Base+0xc00>
  40772a:	mov    rdi,QWORD PTR [rdi]
  40772d:	call   403380 <next@@Base>
  407732:	mov    rbp,rax
  407735:	mov    eax,DWORD PTR [rax]
  407737:	xor    ecx,ecx
  407739:	cmp    eax,0x1
  40773c:	sete   cl
  40773f:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  407745:	cmp    eax,0x1
  407748:	je     407780 <read_boolean_binary_expression@@Base+0x70>
  40774a:	xor    ecx,ecx
  40774c:	cmp    eax,0xc
  40774f:	setne  cl
  407752:	add    QWORD PTR [r12+rcx*8+0x18],0x1
  407758:	cmp    eax,0xc
  40775b:	jne    4077ca <read_boolean_binary_expression@@Base+0xba>
  40775d:	add    QWORD PTR [rip+0x8633],0x1        # 40fd98 <__bss_start@@Base+0xc28>
  407765:	mov    rdi,QWORD PTR [rbx]
  407768:	mov    rsi,rbp
  40776b:	call   403580 <push_back@@Base>
  407770:	mov    rdi,rbx
  407773:	call   407880 <read_boolean_unary_expression@@Base>
  407778:	mov    rbx,rax
  40777b:	jmp    407866 <read_boolean_binary_expression@@Base+0x156>
  407780:	mov    edi,0x18
  407785:	call   4031d0 <malloc@plt>
  40778a:	mov    r14,rax
  40778d:	mov    esi,DWORD PTR [rbp+0x4]
  407790:	mov    rdi,rax
  407793:	call   4064a0 <init_node_int@@Base>
  407798:	mov    rdi,rbp
  40779b:	call   4060a0 <free_token_int_value@@Base>
  4077a0:	mov    rdi,QWORD PTR [rbx]
  4077a3:	call   403380 <next@@Base>
  4077a8:	mov    rbp,rax
  4077ab:	mov    eax,DWORD PTR [rax]
  4077ad:	xor    ecx,ecx
  4077af:	cmp    eax,0xc
  4077b2:	sete   cl
  4077b5:	add    QWORD PTR [r12+rcx*8+0x38],0x1
  4077bb:	cmp    eax,0xc
  4077be:	je     4077d9 <read_boolean_binary_expression@@Base+0xc9>
  4077c0:	add    QWORD PTR [rip+0x85f0],0x1        # 40fdb8 <__bss_start@@Base+0xc48>
  4077c8:	jmp    407814 <read_boolean_binary_expression@@Base+0x104>
  4077ca:	add    QWORD PTR [rip+0x85ce],0x1        # 40fda0 <__bss_start@@Base+0xc30>
  4077d2:	xor    ebx,ebx
  4077d4:	jmp    407866 <read_boolean_binary_expression@@Base+0x156>
  4077d9:	mov    rdi,rbp
  4077dc:	call   406b30 <get_boolean_op_value@@Base>
  4077e1:	mov    r15d,eax
  4077e4:	mov    rdi,rbp
  4077e7:	call   406200 <free_token_boolean_op@@Base>
  4077ec:	mov    rdi,QWORD PTR [rbx]
  4077ef:	call   403380 <next@@Base>
  4077f4:	mov    rbx,rax
  4077f7:	mov    eax,DWORD PTR [rax]
  4077f9:	xor    ecx,ecx
  4077fb:	cmp    eax,0x1
  4077fe:	sete   cl
  407801:	add    QWORD PTR [r12+rcx*8+0x50],0x1
  407807:	cmp    eax,0x1
  40780a:	je     407820 <read_boolean_binary_expression@@Base+0x110>
  40780c:	add    QWORD PTR [rip+0x85bc],0x1        # 40fdd0 <__bss_start@@Base+0xc60>
  407814:	mov    rdi,r14
  407817:	call   406680 <free_node@@Base>
  40781c:	xor    ebx,ebx
  40781e:	jmp    407866 <read_boolean_binary_expression@@Base+0x156>
  407820:	add    QWORD PTR [rip+0x85b0],0x1        # 40fdd8 <__bss_start@@Base+0xc68>
  407828:	mov    edi,0x18
  40782d:	call   4031d0 <malloc@plt>
  407832:	mov    rbp,rax
  407835:	mov    esi,DWORD PTR [rbx+0x4]
  407838:	mov    rdi,rax
  40783b:	call   4064a0 <init_node_int@@Base>
  407840:	mov    rdi,rbx
  407843:	call   4060a0 <free_token_int_value@@Base>
  407848:	mov    edi,0x28
  40784d:	call   4031d0 <malloc@plt>
  407852:	mov    rbx,rax
  407855:	mov    rdi,rax
  407858:	mov    esi,r15d
  40785b:	mov    rdx,r14
  40785e:	mov    rcx,rbp
  407861:	call   406620 <init_node_boolean_operator@@Base>
  407866:	add    QWORD PTR [rip+0x8572],0x1        # 40fde0 <__bss_start@@Base+0xc70>
  40786e:	mov    rax,rbx
  407871:	pop    rbx
  407872:	pop    r12
  407874:	pop    r14
  407876:	pop    r15
  407878:	pop    rbp
  407879:	ret    
  40787a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407880 <read_boolean_unary_expression@@Base>:
  407880:	push   rbp
  407881:	push   r15
  407883:	push   r14
  407885:	push   r12
  407887:	push   rbx
  407888:	mov    rbp,rdi
  40788b:	lea    r12,[rip+0x855e]        # 40fdf0 <__bss_start@@Base+0xc80>
  407892:	add    QWORD PTR [rip+0x8556],0x1        # 40fdf0 <__bss_start@@Base+0xc80>
  40789a:	mov    edi,0x28
  40789f:	call   4031d0 <malloc@plt>
  4078a4:	mov    r15,rax
  4078a7:	mov    rdi,QWORD PTR [rbp+0x0]
  4078ab:	call   403380 <next@@Base>
  4078b0:	mov    rbx,rax
  4078b3:	mov    eax,DWORD PTR [rax]
  4078b5:	xor    ecx,ecx
  4078b7:	cmp    eax,0xc
  4078ba:	sete   cl
  4078bd:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  4078c3:	cmp    eax,0xc
  4078c6:	je     4078d2 <read_boolean_unary_expression@@Base+0x52>
  4078c8:	add    QWORD PTR [rip+0x8538],0x1        # 40fe08 <__bss_start@@Base+0xc98>
  4078d0:	jmp    40790e <read_boolean_unary_expression@@Base+0x8e>
  4078d2:	mov    rdi,rbx
  4078d5:	call   406b30 <get_boolean_op_value@@Base>
  4078da:	mov    r14d,eax
  4078dd:	mov    rdi,rbx
  4078e0:	call   406200 <free_token_boolean_op@@Base>
  4078e5:	mov    rdi,QWORD PTR [rbp+0x0]
  4078e9:	call   403380 <next@@Base>
  4078ee:	mov    rbp,rax
  4078f1:	mov    eax,DWORD PTR [rax]
  4078f3:	xor    ecx,ecx
  4078f5:	cmp    eax,0x1
  4078f8:	sete   cl
  4078fb:	add    QWORD PTR [r12+rcx*8+0x20],0x1
  407901:	cmp    eax,0x1
  407904:	je     40791b <read_boolean_unary_expression@@Base+0x9b>
  407906:	add    QWORD PTR [rip+0x8512],0x1        # 40fe20 <__bss_start@@Base+0xcb0>
  40790e:	mov    rdi,r15
  407911:	call   406ad0 <free_node_boolean_operator@@Base>
  407916:	xor    r15d,r15d
  407919:	jmp    407953 <read_boolean_unary_expression@@Base+0xd3>
  40791b:	add    QWORD PTR [rip+0x8505],0x1        # 40fe28 <__bss_start@@Base+0xcb8>
  407923:	mov    edi,0x18
  407928:	call   4031d0 <malloc@plt>
  40792d:	mov    rbx,rax
  407930:	mov    esi,DWORD PTR [rbp+0x4]
  407933:	mov    rdi,rax
  407936:	call   4064a0 <init_node_int@@Base>
  40793b:	mov    rdi,rbp
  40793e:	call   4060a0 <free_token_int_value@@Base>
  407943:	xor    ecx,ecx
  407945:	mov    rdi,r15
  407948:	mov    esi,r14d
  40794b:	mov    rdx,rbx
  40794e:	call   406620 <init_node_boolean_operator@@Base>
  407953:	add    QWORD PTR [rip+0x84d5],0x1        # 40fe30 <__bss_start@@Base+0xcc0>
  40795b:	mov    rax,r15
  40795e:	pop    rbx
  40795f:	pop    r12
  407961:	pop    r14
  407963:	pop    r15
  407965:	pop    rbp
  407966:	ret    
  407967:	nop    WORD PTR [rax+rax*1+0x0]
  407970:	mov    eax,DWORD PTR [rdi]
  407972:	mov    ecx,0xffffffff
  407977:	cmp    rax,rcx
  40797a:	je     407989 <read_boolean_unary_expression@@Base+0x109>
  40797c:	mov    rax,QWORD PTR [rsi+rax*8]
  407980:	test   rax,rax
  407983:	je     407989 <read_boolean_unary_expression@@Base+0x109>
  407985:	add    QWORD PTR [rax],0x1
  407989:	ret    
  40798a:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	push   r15
  407992:	push   r14
  407994:	push   rbx
  407995:	lea    rdi,[rip+0x3384]        # 40ad20 <_IO_stdin_used@@Base+0xd20>
  40799c:	lea    rsi,[rip+0x2af1]        # 40a494 <_IO_stdin_used@@Base+0x494>
  4079a3:	mov    edx,0xa66cc747
  4079a8:	call   407b50 <read_boolean_unary_expression@@Base+0x2d0>
  4079ad:	xor    ebx,ebx
  4079af:	lea    r14,[rip+0x723a]        # 40ebf0 <_IO_stdin_used@@Base+0x4bf0>
  4079b6:	lea    r15,[rip+0x7393]        # 40ed50 <_IO_stdin_used@@Base+0x4d50>
  4079bd:	nop    DWORD PTR [rax]
  4079c0:	mov    edi,DWORD PTR [r14+rbx*2]
  4079c4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4079c9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4079ce:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  4079d3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  4079d8:	call   407fa0 <read_boolean_unary_expression@@Base+0x720>
  4079dd:	mov    edi,DWORD PTR [rbx+r15*1]
  4079e1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4079e6:	call   4083d0 <read_boolean_unary_expression@@Base+0xb50>
  4079eb:	add    rbx,0x10
  4079ef:	cmp    rbx,0xb0
  4079f6:	jne    4079c0 <read_boolean_unary_expression@@Base+0x140>
  4079f8:	call   4087f0 <read_boolean_unary_expression@@Base+0xf70>
  4079fd:	pop    rbx
  4079fe:	pop    r14
  407a00:	pop    r15
  407a02:	jmp    408f90 <read_boolean_unary_expression@@Base+0x1710>
  407a07:	nop    WORD PTR [rax+rax*1+0x0]
  407a10:	push   rax
  407a11:	call   407990 <read_boolean_unary_expression@@Base+0x110>
  407a16:	vxorps xmm0,xmm0,xmm0
  407a1a:	vmovaps XMMWORD PTR [rip+0x80ae],xmm0        # 40fad0 <__bss_start@@Base+0x960>
  407a22:	vmovaps XMMWORD PTR [rip+0x80b6],xmm0        # 40fae0 <__bss_start@@Base+0x970>
  407a2a:	vmovaps XMMWORD PTR [rip+0x80be],xmm0        # 40faf0 <__bss_start@@Base+0x980>
  407a32:	vxorps xmm0,xmm0,xmm0
  407a36:	vmovups YMMWORD PTR [rip+0x811a],ymm0        # 40fb58 <__bss_start@@Base+0x9e8>
  407a3e:	vmovups YMMWORD PTR [rip+0x80fa],ymm0        # 40fb40 <__bss_start@@Base+0x9d0>
  407a46:	vmovups YMMWORD PTR [rip+0x80d2],ymm0        # 40fb20 <__bss_start@@Base+0x9b0>
  407a4e:	vmovups YMMWORD PTR [rip+0x80aa],ymm0        # 40fb00 <__bss_start@@Base+0x990>
  407a56:	vmovups YMMWORD PTR [rip+0x81a2],ymm0        # 40fc00 <__bss_start@@Base+0xa90>
  407a5e:	vmovups YMMWORD PTR [rip+0x817a],ymm0        # 40fbe0 <__bss_start@@Base+0xa70>
  407a66:	vmovups YMMWORD PTR [rip+0x8152],ymm0        # 40fbc0 <__bss_start@@Base+0xa50>
  407a6e:	vmovups YMMWORD PTR [rip+0x812a],ymm0        # 40fba0 <__bss_start@@Base+0xa30>
  407a76:	vmovups YMMWORD PTR [rip+0x8102],ymm0        # 40fb80 <__bss_start@@Base+0xa10>
  407a7e:	vmovups YMMWORD PTR [rip+0x81ba],ymm0        # 40fc40 <__bss_start@@Base+0xad0>
  407a86:	vmovups YMMWORD PTR [rip+0x8192],ymm0        # 40fc20 <__bss_start@@Base+0xab0>
  407a8e:	mov    QWORD PTR [rip+0x81c7],0x0        # 40fc60 <__bss_start@@Base+0xaf0>
  407a99:	vmovups YMMWORD PTR [rip+0x81ff],ymm0        # 40fca0 <__bss_start@@Base+0xb30>
  407aa1:	vmovups YMMWORD PTR [rip+0x81e7],ymm0        # 40fc90 <__bss_start@@Base+0xb20>
  407aa9:	vmovups YMMWORD PTR [rip+0x81bf],ymm0        # 40fc70 <__bss_start@@Base+0xb00>
  407ab1:	vmovups YMMWORD PTR [rip+0x8247],ymm0        # 40fd00 <__bss_start@@Base+0xb90>
  407ab9:	vmovups YMMWORD PTR [rip+0x821f],ymm0        # 40fce0 <__bss_start@@Base+0xb70>
  407ac1:	vmovups YMMWORD PTR [rip+0x81f7],ymm0        # 40fcc0 <__bss_start@@Base+0xb50>
  407ac9:	vmovups YMMWORD PTR [rip+0x827f],ymm0        # 40fd50 <__bss_start@@Base+0xbe0>
  407ad1:	vmovups YMMWORD PTR [rip+0x8257],ymm0        # 40fd30 <__bss_start@@Base+0xbc0>
  407ad9:	vmovups YMMWORD PTR [rip+0x82e7],ymm0        # 40fdc8 <__bss_start@@Base+0xc58>
  407ae1:	vmovups YMMWORD PTR [rip+0x82c7],ymm0        # 40fdb0 <__bss_start@@Base+0xc40>
  407ae9:	vmovups YMMWORD PTR [rip+0x829f],ymm0        # 40fd90 <__bss_start@@Base+0xc20>
  407af1:	vmovups YMMWORD PTR [rip+0x8277],ymm0        # 40fd70 <__bss_start@@Base+0xc00>
  407af9:	mov    QWORD PTR [rip+0x821c],0x0        # 40fd20 <__bss_start@@Base+0xbb0>
  407b04:	vmovups YMMWORD PTR [rip+0x8304],ymm0        # 40fe10 <__bss_start@@Base+0xca0>
  407b0c:	vmovups YMMWORD PTR [rip+0x82dc],ymm0        # 40fdf0 <__bss_start@@Base+0xc80>
  407b14:	mov    QWORD PTR [rip+0x8311],0x0        # 40fe30 <__bss_start@@Base+0xcc0>
  407b1f:	pop    rax
  407b20:	vzeroupper 
  407b23:	ret    
  407b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b2e:	xchg   ax,ax
  407b30:	lea    rdi,[rip+0xfffffffffffffe59]        # 407990 <read_boolean_unary_expression@@Base+0x110>
  407b37:	lea    rsi,[rip+0xfffffffffffffed2]        # 407a10 <read_boolean_unary_expression@@Base+0x190>
  407b3e:	jmp    409350 <__gcov_flush@@Base+0xa0>
  407b43:	nop
  407b44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b4e:	xchg   ax,ax
  407b50:	push   rbp
  407b51:	push   r15
  407b53:	push   r14
  407b55:	push   r13
  407b57:	push   r12
  407b59:	push   rbx
  407b5a:	sub    rsp,0x18
  407b5e:	mov    r14d,edx
  407b61:	mov    r15,rsi
  407b64:	mov    r12,rdi
  407b67:	lea    rdi,[rsp+0xc]
  407b6c:	lea    rsi,[rsp+0x10]
  407b71:	call   409690 <__gcov_flush@@Base+0x3e0>
  407b76:	test   rax,rax
  407b79:	je     407bb3 <read_boolean_unary_expression@@Base+0x333>
  407b7b:	mov    rbx,rax
  407b7e:	mov    r13,QWORD PTR [rsp+0x10]
  407b83:	mov    rdi,r12
  407b86:	call   4030e0 <strlen@plt>
  407b8b:	lea    rdi,[rax+r13*1]
  407b8f:	add    rdi,0x2
  407b93:	call   4031d0 <malloc@plt>
  407b98:	mov    rbp,rax
  407b9b:	mov    r8d,DWORD PTR [rsp+0xc]
  407ba0:	mov    rdi,rax
  407ba3:	mov    rsi,r12
  407ba6:	mov    rdx,rbx
  407ba9:	mov    rcx,r13
  407bac:	call   409720 <__gcov_flush@@Base+0x470>
  407bb1:	jmp    407bbe <read_boolean_unary_expression@@Base+0x33e>
  407bb3:	mov    rdi,r12
  407bb6:	call   403270 <strdup@plt>
  407bbb:	mov    rbp,rax
  407bbe:	mov    QWORD PTR [rip+0x8273],rbp        # 40fe38 <__bss_start@@Base+0xcc8>
  407bc5:	mov    BYTE PTR [rip+0x8274],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  407bcc:	mov    esi,0x2
  407bd1:	xor    eax,eax
  407bd3:	mov    rdi,rbp
  407bd6:	call   403230 <open@plt>
  407bdb:	mov    DWORD PTR [rip+0x7587],eax        # 40f168 <__data_start@@Base+0x20>
  407be1:	cmp    eax,0xffffffff
  407be4:	je     407bef <read_boolean_unary_expression@@Base+0x36f>
  407be6:	lea    rbx,[rip+0x3291]        # 40ae7e <_IO_stdin_used@@Base+0xe7e>
  407bed:	jmp    407c53 <read_boolean_unary_expression@@Base+0x3d3>
  407bef:	mov    BYTE PTR [rip+0x824a],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  407bf6:	mov    rdi,QWORD PTR [rip+0x823b]        # 40fe38 <__bss_start@@Base+0xcc8>
  407bfd:	mov    esi,0x42
  407c02:	mov    edx,0x1a4
  407c07:	xor    eax,eax
  407c09:	call   403230 <open@plt>
  407c0e:	mov    DWORD PTR [rip+0x7554],eax        # 40f168 <__data_start@@Base+0x20>
  407c14:	lea    rbx,[rip+0x3267]        # 40ae82 <_IO_stdin_used@@Base+0xe82>
  407c1b:	cmp    eax,0xffffffff
  407c1e:	jne    407c53 <read_boolean_unary_expression@@Base+0x3d3>
  407c20:	mov    rdi,QWORD PTR [rip+0x8211]        # 40fe38 <__bss_start@@Base+0xcc8>
  407c27:	call   409440 <__gcov_flush@@Base+0x190>
  407c2c:	mov    rdi,QWORD PTR [rip+0x8205]        # 40fe38 <__bss_start@@Base+0xcc8>
  407c33:	mov    esi,0x42
  407c38:	mov    edx,0x1a4
  407c3d:	xor    eax,eax
  407c3f:	call   403230 <open@plt>
  407c44:	mov    DWORD PTR [rip+0x751e],eax        # 40f168 <__data_start@@Base+0x20>
  407c4a:	cmp    eax,0xffffffff
  407c4d:	je     407f49 <read_boolean_unary_expression@@Base+0x6c9>
  407c53:	mov    edi,eax
  407c55:	call   409500 <__gcov_flush@@Base+0x250>
  407c5a:	mov    edi,DWORD PTR [rip+0x7508]        # 40f168 <__data_start@@Base+0x20>
  407c60:	mov    rsi,rbx
  407c63:	call   403210 <fdopen@plt>
  407c68:	mov    QWORD PTR [rip+0x81d9],rax        # 40fe48 <__bss_start@@Base+0xcd8>
  407c6f:	mov    QWORD PTR [rip+0x81d6],0x0        # 40fe50 <__bss_start@@Base+0xce0>
  407c7a:	mov    QWORD PTR [rip+0x81d3],0x0        # 40fe58 <__bss_start@@Base+0xce8>
  407c85:	mov    QWORD PTR [rip+0x81d0],0x0        # 40fe60 <__bss_start@@Base+0xcf0>
  407c90:	cmp    BYTE PTR [rip+0x81a9],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  407c97:	jne    407cc7 <read_boolean_unary_expression@@Base+0x447>
  407c99:	mov    edi,0x20000
  407c9e:	call   4031d0 <malloc@plt>
  407ca3:	mov    r12,rax
  407ca6:	mov    QWORD PTR [rip+0x81a3],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407cad:	mov    QWORD PTR [rip+0x81a0],0x20000        # 40fe58 <__bss_start@@Base+0xce8>
  407cb8:	xor    esi,esi
  407cba:	mov    edx,0x20000
  407cbf:	mov    rdi,rax
  407cc2:	jmp    407de3 <read_boolean_unary_expression@@Base+0x563>
  407cc7:	xor    esi,esi
  407cc9:	mov    edx,0x2
  407cce:	mov    rdi,rax
  407cd1:	call   4031f0 <fseek@plt>
  407cd6:	mov    rdi,QWORD PTR [rip+0x816b]        # 40fe48 <__bss_start@@Base+0xcd8>
  407cdd:	call   403190 <ftell@plt>
  407ce2:	mov    QWORD PTR [rip+0x8197],rax        # 40fe80 <__bss_start@@Base+0xd10>
  407ce9:	test   rax,rax
  407cec:	je     407d80 <read_boolean_unary_expression@@Base+0x500>
  407cf2:	mov    r8d,DWORD PTR [rip+0x746f]        # 40f168 <__data_start@@Base+0x20>
  407cf9:	xor    edi,edi
  407cfb:	mov    edx,0x3
  407d00:	mov    ecx,0x1
  407d05:	xor    r9d,r9d
  407d08:	mov    rsi,rax
  407d0b:	call   4030f0 <mmap@plt>
  407d10:	mov    QWORD PTR [rip+0x8139],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407d17:	cmp    rax,0xffffffffffffffff
  407d1b:	je     407d4c <read_boolean_unary_expression@@Base+0x4cc>
  407d1d:	mov    r12,rax
  407d20:	cmp    BYTE PTR [rip+0x8119],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  407d27:	jne    407de8 <read_boolean_unary_expression@@Base+0x568>
  407d2d:	mov    rbx,QWORD PTR [rip+0x812c]        # 40fe60 <__bss_start@@Base+0xcf0>
  407d34:	mov    DWORD PTR [r12+rbx*1],0x67636461
  407d3c:	add    rbx,0x4
  407d40:	mov    QWORD PTR [rip+0x8119],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  407d47:	jmp    407e4a <read_boolean_unary_expression@@Base+0x5ca>
  407d4c:	call   403050 <__errno_location@plt>
  407d51:	mov    edi,DWORD PTR [rax]
  407d53:	mov    rax,QWORD PTR [rip+0x729e]        # 40eff8 <stderr@GLIBC_2.2.5>
  407d5a:	mov    rbx,QWORD PTR [rax]
  407d5d:	mov    rbp,QWORD PTR [rip+0x80d4]        # 40fe38 <__bss_start@@Base+0xcc8>
  407d64:	call   403280 <strerror@plt>
  407d69:	mov    rcx,rax
  407d6c:	lea    rsi,[rip+0x326d]        # 40afe0 <_IO_stdin_used@@Base+0xfe0>
  407d73:	xor    eax,eax
  407d75:	mov    rdi,rbx
  407d78:	mov    rdx,rbp
  407d7b:	call   403180 <fprintf@plt>
  407d80:	mov    BYTE PTR [rip+0x80b9],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  407d87:	mov    QWORD PTR [rip+0x80be],0x0        # 40fe50 <__bss_start@@Base+0xce0>
  407d92:	mov    QWORD PTR [rip+0x80bb],0x0        # 40fe58 <__bss_start@@Base+0xce8>
  407d9d:	mov    rbx,QWORD PTR [rip+0x80bc]        # 40fe60 <__bss_start@@Base+0xcf0>
  407da4:	cmp    rbx,0xfffffffffffe0000
  407dab:	jne    407db2 <read_boolean_unary_expression@@Base+0x532>
  407dad:	xor    r12d,r12d
  407db0:	jmp    407dd9 <read_boolean_unary_expression@@Base+0x559>
  407db2:	add    rbx,0x3ffff
  407db9:	and    rbx,0xfffffffffffe0000
  407dc0:	mov    rdi,rbx
  407dc3:	call   4031d0 <malloc@plt>
  407dc8:	mov    r12,rax
  407dcb:	mov    QWORD PTR [rip+0x807e],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407dd2:	mov    QWORD PTR [rip+0x807f],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  407dd9:	xor    esi,esi
  407ddb:	mov    edx,0x20000
  407de0:	mov    rdi,r12
  407de3:	call   403160 <memset@plt>
  407de8:	mov    rbx,QWORD PTR [rip+0x8071]        # 40fe60 <__bss_start@@Base+0xcf0>
  407def:	lea    rax,[rbx+0x4]
  407df3:	cmp    rax,QWORD PTR [rip+0x805e]        # 40fe58 <__bss_start@@Base+0xce8>
  407dfa:	jbe    407e64 <read_boolean_unary_expression@@Base+0x5e4>
  407dfc:	add    rbx,0x20003
  407e03:	and    rbx,0xfffffffffffe0000
  407e0a:	mov    rdi,r12
  407e0d:	mov    rsi,rbx
  407e10:	call   403200 <realloc@plt>
  407e15:	mov    r12,rax
  407e18:	mov    QWORD PTR [rip+0x8031],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407e1f:	mov    QWORD PTR [rip+0x8032],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  407e26:	mov    al,BYTE PTR [rip+0x8014]        # 40fe40 <__bss_start@@Base+0xcd0>
  407e2c:	mov    rbp,QWORD PTR [rip+0x802d]        # 40fe60 <__bss_start@@Base+0xcf0>
  407e33:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407e3b:	lea    rbx,[rbp+0x4]
  407e3f:	mov    QWORD PTR [rip+0x801a],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  407e46:	cmp    al,0x1
  407e48:	je     407e7e <read_boolean_unary_expression@@Base+0x5fe>
  407e4a:	mov    eax,DWORD PTR [r15]
  407e4d:	mov    DWORD PTR [r12+rbx*1],eax
  407e51:	add    rbx,0x4
  407e55:	mov    QWORD PTR [rip+0x8004],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  407e5c:	mov    rax,rbx
  407e5f:	jmp    407f2b <read_boolean_unary_expression@@Base+0x6ab>
  407e64:	mov    rbp,QWORD PTR [rip+0x7ff5]        # 40fe60 <__bss_start@@Base+0xcf0>
  407e6b:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407e73:	lea    rbx,[rbp+0x4]
  407e77:	mov    QWORD PTR [rip+0x7fe2],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  407e7e:	lea    rax,[rbp+0x8]
  407e82:	cmp    rax,QWORD PTR [rip+0x7fcf]        # 40fe58 <__bss_start@@Base+0xce8>
  407e89:	jbe    407edb <read_boolean_unary_expression@@Base+0x65b>
  407e8b:	add    rbp,0x20007
  407e92:	and    rbp,0xfffffffffffe0000
  407e99:	mov    rdi,r12
  407e9c:	mov    rsi,rbp
  407e9f:	call   403200 <realloc@plt>
  407ea4:	mov    r12,rax
  407ea7:	mov    QWORD PTR [rip+0x7fa2],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407eae:	mov    QWORD PTR [rip+0x7fa3],rbp        # 40fe58 <__bss_start@@Base+0xce8>
  407eb5:	mov    rbx,QWORD PTR [rip+0x7fa4]        # 40fe60 <__bss_start@@Base+0xcf0>
  407ebc:	mov    cl,BYTE PTR [rip+0x7f7e]        # 40fe40 <__bss_start@@Base+0xcd0>
  407ec2:	mov    eax,DWORD PTR [r15]
  407ec5:	mov    DWORD PTR [r12+rbx*1],eax
  407ec9:	lea    rax,[rbx+0x4]
  407ecd:	mov    QWORD PTR [rip+0x7f8c],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  407ed4:	cmp    cl,0x1
  407ed7:	je     407eed <read_boolean_unary_expression@@Base+0x66d>
  407ed9:	jmp    407f2b <read_boolean_unary_expression@@Base+0x6ab>
  407edb:	mov    eax,DWORD PTR [r15]
  407ede:	mov    DWORD PTR [r12+rbx*1],eax
  407ee2:	lea    rax,[rbx+0x4]
  407ee6:	mov    QWORD PTR [rip+0x7f73],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  407eed:	lea    rcx,[rbx+0x8]
  407ef1:	cmp    rcx,QWORD PTR [rip+0x7f60]        # 40fe58 <__bss_start@@Base+0xce8>
  407ef8:	jbe    407f2b <read_boolean_unary_expression@@Base+0x6ab>
  407efa:	add    rbx,0x20007
  407f01:	and    rbx,0xfffffffffffe0000
  407f08:	mov    rdi,r12
  407f0b:	mov    rsi,rbx
  407f0e:	call   403200 <realloc@plt>
  407f13:	mov    r12,rax
  407f16:	mov    QWORD PTR [rip+0x7f33],rax        # 40fe50 <__bss_start@@Base+0xce0>
  407f1d:	mov    QWORD PTR [rip+0x7f34],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  407f24:	mov    rax,QWORD PTR [rip+0x7f35]        # 40fe60 <__bss_start@@Base+0xcf0>
  407f2b:	mov    DWORD PTR [r12+rax*1],r14d
  407f2f:	add    rax,0x4
  407f33:	mov    QWORD PTR [rip+0x7f26],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  407f3a:	add    rsp,0x18
  407f3e:	pop    rbx
  407f3f:	pop    r12
  407f41:	pop    r13
  407f43:	pop    r14
  407f45:	pop    r15
  407f47:	pop    rbp
  407f48:	ret    
  407f49:	call   403050 <__errno_location@plt>
  407f4e:	mov    edi,DWORD PTR [rax]
  407f50:	mov    rax,QWORD PTR [rip+0x70a1]        # 40eff8 <stderr@GLIBC_2.2.5>
  407f57:	mov    rbx,QWORD PTR [rax]
  407f5a:	mov    rbp,QWORD PTR [rip+0x7ed7]        # 40fe38 <__bss_start@@Base+0xcc8>
  407f61:	call   403280 <strerror@plt>
  407f66:	mov    rcx,rax
  407f69:	lea    rsi,[rip+0x2f16]        # 40ae86 <_IO_stdin_used@@Base+0xe86>
  407f70:	xor    eax,eax
  407f72:	mov    rdi,rbx
  407f75:	mov    rdx,rbp
  407f78:	call   403180 <fprintf@plt>
  407f7d:	jmp    407f3a <read_boolean_unary_expression@@Base+0x6ba>
  407f7f:	nop
  407f80:	mov    eax,DWORD PTR [rdi]
  407f82:	mov    ecx,0xffffffff
  407f87:	cmp    rax,rcx
  407f8a:	je     407f99 <read_boolean_unary_expression@@Base+0x719>
  407f8c:	mov    rax,QWORD PTR [rsi+rax*8]
  407f90:	test   rax,rax
  407f93:	je     407f99 <read_boolean_unary_expression@@Base+0x719>
  407f95:	add    QWORD PTR [rax],0x1
  407f99:	ret    
  407f9a:	nop    WORD PTR [rax+rax*1+0x0]
  407fa0:	push   rbp
  407fa1:	push   r15
  407fa3:	push   r14
  407fa5:	push   r13
  407fa7:	push   r12
  407fa9:	push   rbx
  407faa:	sub    rsp,0x18
  407fae:	xor    r14d,r14d
  407fb1:	test   cl,cl
  407fb3:	setne  al
  407fb6:	cmp    QWORD PTR [rip+0x7e8a],0x0        # 40fe48 <__bss_start@@Base+0xcd8>
  407fbe:	je     4082d6 <read_boolean_unary_expression@@Base+0xa56>
  407fc4:	mov    DWORD PTR [rsp+0xc],edi
  407fc8:	mov    DWORD PTR [rsp+0x10],edx
  407fcc:	mov    DWORD PTR [rsp+0x14],ecx
  407fd0:	mov    DWORD PTR [rsp+0x8],r8d
  407fd5:	mov    r15,rsi
  407fd8:	mov    r14b,al
  407fdb:	cmp    BYTE PTR [rip+0x7e5e],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  407fe2:	jne    408023 <read_boolean_unary_expression@@Base+0x7a3>
  407fe4:	mov    rbx,QWORD PTR [rip+0x7e75]        # 40fe60 <__bss_start@@Base+0xcf0>
  407feb:	lea    rax,[rbx+0x4]
  407fef:	cmp    rax,QWORD PTR [rip+0x7e62]        # 40fe58 <__bss_start@@Base+0xce8>
  407ff6:	jbe    408023 <read_boolean_unary_expression@@Base+0x7a3>
  407ff8:	add    rbx,0x20003
  407fff:	and    rbx,0xfffffffffffe0000
  408006:	mov    rdi,QWORD PTR [rip+0x7e43]        # 40fe50 <__bss_start@@Base+0xce0>
  40800d:	mov    rsi,rbx
  408010:	call   403200 <realloc@plt>
  408015:	mov    QWORD PTR [rip+0x7e34],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40801c:	mov    QWORD PTR [rip+0x7e35],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408023:	or     r14d,0x2
  408027:	mov    r12,QWORD PTR [rip+0x7e22]        # 40fe50 <__bss_start@@Base+0xce0>
  40802e:	mov    r13,QWORD PTR [rip+0x7e2b]        # 40fe60 <__bss_start@@Base+0xcf0>
  408035:	mov    DWORD PTR [r12+r13*1],0x1000000
  40803d:	lea    rbx,[r13+0x4]
  408041:	mov    QWORD PTR [rip+0x7e18],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408048:	test   r15,r15
  40804b:	je     408061 <read_boolean_unary_expression@@Base+0x7e1>
  40804d:	mov    rdi,r15
  408050:	call   4030e0 <strlen@plt>
  408055:	shr    rax,0x2
  408059:	lea    r14d,[r14+rax*1]
  40805d:	add    r14d,0x2
  408061:	cmp    BYTE PTR [rip+0x7dd8],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408068:	je     4080ca <read_boolean_unary_expression@@Base+0x84a>
  40806a:	lea    rbp,[r13+0x8]
  40806e:	cmp    rbp,QWORD PTR [rip+0x7de3]        # 40fe58 <__bss_start@@Base+0xce8>
  408075:	jbe    4082e5 <read_boolean_unary_expression@@Base+0xa65>
  40807b:	add    r13,0x20007
  408082:	and    r13,0xfffffffffffe0000
  408089:	mov    rdi,r12
  40808c:	mov    rsi,r13
  40808f:	call   403200 <realloc@plt>
  408094:	mov    r12,rax
  408097:	mov    QWORD PTR [rip+0x7db2],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40809e:	mov    QWORD PTR [rip+0x7db3],r13        # 40fe58 <__bss_start@@Base+0xce8>
  4080a5:	mov    rbx,QWORD PTR [rip+0x7db4]        # 40fe60 <__bss_start@@Base+0xcf0>
  4080ac:	mov    al,BYTE PTR [rip+0x7d8e]        # 40fe40 <__bss_start@@Base+0xcd0>
  4080b2:	mov    DWORD PTR [r12+rbx*1],r14d
  4080b6:	lea    rbp,[rbx+0x4]
  4080ba:	mov    QWORD PTR [rip+0x7d9f],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  4080c1:	cmp    al,0x1
  4080c3:	jne    4080dd <read_boolean_unary_expression@@Base+0x85d>
  4080c5:	jmp    4082f1 <read_boolean_unary_expression@@Base+0xa71>
  4080ca:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  4080cf:	add    r13,0x8
  4080d3:	mov    QWORD PTR [rip+0x7d86],r13        # 40fe60 <__bss_start@@Base+0xcf0>
  4080da:	mov    rbp,r13
  4080dd:	mov    eax,DWORD PTR [rsp+0xc]
  4080e1:	mov    DWORD PTR [r12+rbp*1],eax
  4080e5:	add    rbp,0x4
  4080e9:	mov    QWORD PTR [rip+0x7d70],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  4080f0:	mov    rbx,rbp
  4080f3:	mov    r13,r15
  4080f6:	mov    r14d,DWORD PTR [rsp+0x14]
  4080fb:	mov    r15d,DWORD PTR [rsp+0x10]
  408100:	lea    rbp,[rbx+0x4]
  408104:	mov    DWORD PTR [r12+rbx*1],r15d
  408108:	mov    QWORD PTR [rip+0x7d51],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  40810f:	test   r14b,r14b
  408112:	je     40816e <read_boolean_unary_expression@@Base+0x8ee>
  408114:	cmp    BYTE PTR [rip+0x7d25],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  40811b:	jne    40815b <read_boolean_unary_expression@@Base+0x8db>
  40811d:	lea    rax,[rbx+0x8]
  408121:	cmp    rax,QWORD PTR [rip+0x7d30]        # 40fe58 <__bss_start@@Base+0xce8>
  408128:	jbe    40815b <read_boolean_unary_expression@@Base+0x8db>
  40812a:	add    rbx,0x20007
  408131:	and    rbx,0xfffffffffffe0000
  408138:	mov    rdi,r12
  40813b:	mov    rsi,rbx
  40813e:	call   403200 <realloc@plt>
  408143:	mov    r12,rax
  408146:	mov    QWORD PTR [rip+0x7d03],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40814d:	mov    QWORD PTR [rip+0x7d04],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408154:	mov    rbp,QWORD PTR [rip+0x7d05]        # 40fe60 <__bss_start@@Base+0xcf0>
  40815b:	mov    eax,DWORD PTR [rsp+0x8]
  40815f:	mov    DWORD PTR [r12+rbp*1],eax
  408163:	add    rbp,0x4
  408167:	mov    QWORD PTR [rip+0x7cf2],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  40816e:	test   r13,r13
  408171:	je     4082d6 <read_boolean_unary_expression@@Base+0xa56>
  408177:	mov    rdi,r13
  40817a:	call   4030e0 <strlen@plt>
  40817f:	mov    rbx,rax
  408182:	shr    rbx,0x2
  408186:	add    ebx,0x1
  408189:	cmp    BYTE PTR [rip+0x7cb0],0x1        # 40fe40 <__bss_start@@Base+0xcd0>
  408190:	jne    4081dc <read_boolean_unary_expression@@Base+0x95c>
  408192:	lea    rax,[rbp+0x4]
  408196:	mov    r14b,0x1
  408199:	cmp    rax,QWORD PTR [rip+0x7cb8]        # 40fe58 <__bss_start@@Base+0xce8>
  4081a0:	jbe    4081df <read_boolean_unary_expression@@Base+0x95f>
  4081a2:	add    rbp,0x20003
  4081a9:	and    rbp,0xfffffffffffe0000
  4081b0:	mov    rdi,r12
  4081b3:	mov    rsi,rbp
  4081b6:	call   403200 <realloc@plt>
  4081bb:	mov    r12,rax
  4081be:	mov    QWORD PTR [rip+0x7c8b],rax        # 40fe50 <__bss_start@@Base+0xce0>
  4081c5:	mov    QWORD PTR [rip+0x7c8c],rbp        # 40fe58 <__bss_start@@Base+0xce8>
  4081cc:	mov    r14b,BYTE PTR [rip+0x7c6d]        # 40fe40 <__bss_start@@Base+0xcd0>
  4081d3:	mov    rbp,QWORD PTR [rip+0x7c86]        # 40fe60 <__bss_start@@Base+0xcf0>
  4081da:	jmp    4081df <read_boolean_unary_expression@@Base+0x95f>
  4081dc:	xor    r14d,r14d
  4081df:	mov    DWORD PTR [r12+rbp*1],ebx
  4081e3:	add    rbp,0x4
  4081e7:	mov    QWORD PTR [rip+0x7c72],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  4081ee:	mov    rdi,r13
  4081f1:	call   4030e0 <strlen@plt>
  4081f6:	mov    rbx,rax
  4081f9:	test   r14b,0x1
  4081fd:	je     408249 <read_boolean_unary_expression@@Base+0x9c9>
  4081ff:	lea    r15,[rbx+rbp*1]
  408203:	mov    r14b,0x1
  408206:	cmp    r15,QWORD PTR [rip+0x7c4b]        # 40fe58 <__bss_start@@Base+0xce8>
  40820d:	jbe    40824c <read_boolean_unary_expression@@Base+0x9cc>
  40820f:	add    r15,0x1ffff
  408216:	and    r15,0xfffffffffffe0000
  40821d:	mov    rdi,r12
  408220:	mov    rsi,r15
  408223:	call   403200 <realloc@plt>
  408228:	mov    r12,rax
  40822b:	mov    QWORD PTR [rip+0x7c1e],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408232:	mov    QWORD PTR [rip+0x7c1f],r15        # 40fe58 <__bss_start@@Base+0xce8>
  408239:	mov    rbp,QWORD PTR [rip+0x7c20]        # 40fe60 <__bss_start@@Base+0xcf0>
  408240:	mov    r14b,BYTE PTR [rip+0x7bf9]        # 40fe40 <__bss_start@@Base+0xcd0>
  408247:	jmp    40824c <read_boolean_unary_expression@@Base+0x9cc>
  408249:	xor    r14d,r14d
  40824c:	lea    rdi,[r12+rbp*1]
  408250:	mov    rsi,r13
  408253:	mov    rdx,rbx
  408256:	call   4031b0 <memcpy@plt>
  40825b:	add    rbx,rbp
  40825e:	mov    QWORD PTR [rip+0x7bfb],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408265:	mov    rdi,r13
  408268:	call   4030e0 <strlen@plt>
  40826d:	and    eax,0x3
  408270:	mov    ebp,0x4
  408275:	sub    rbp,rax
  408278:	test   r14b,0x1
  40827c:	je     4082bc <read_boolean_unary_expression@@Base+0xa3c>
  40827e:	lea    r14,[rbx+rbp*1]
  408282:	cmp    r14,QWORD PTR [rip+0x7bcf]        # 40fe58 <__bss_start@@Base+0xce8>
  408289:	jbe    4082bc <read_boolean_unary_expression@@Base+0xa3c>
  40828b:	add    r14,0x1ffff
  408292:	and    r14,0xfffffffffffe0000
  408299:	mov    rdi,r12
  40829c:	mov    rsi,r14
  40829f:	call   403200 <realloc@plt>
  4082a4:	mov    r12,rax
  4082a7:	mov    QWORD PTR [rip+0x7ba2],rax        # 40fe50 <__bss_start@@Base+0xce0>
  4082ae:	mov    QWORD PTR [rip+0x7ba3],r14        # 40fe58 <__bss_start@@Base+0xce8>
  4082b5:	mov    rbx,QWORD PTR [rip+0x7ba4]        # 40fe60 <__bss_start@@Base+0xcf0>
  4082bc:	add    r12,rbx
  4082bf:	xor    esi,esi
  4082c1:	mov    rdi,r12
  4082c4:	mov    rdx,rbp
  4082c7:	call   403160 <memset@plt>
  4082cc:	add    rbx,rbp
  4082cf:	mov    QWORD PTR [rip+0x7b8a],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  4082d6:	add    rsp,0x18
  4082da:	pop    rbx
  4082db:	pop    r12
  4082dd:	pop    r13
  4082df:	pop    r14
  4082e1:	pop    r15
  4082e3:	pop    rbp
  4082e4:	ret    
  4082e5:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  4082ea:	mov    QWORD PTR [rip+0x7b6f],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  4082f1:	lea    rax,[rbx+0x8]
  4082f5:	cmp    rax,QWORD PTR [rip+0x7b5c]        # 40fe58 <__bss_start@@Base+0xce8>
  4082fc:	mov    r13,r15
  4082ff:	jbe    40835f <read_boolean_unary_expression@@Base+0xadf>
  408301:	add    rbx,0x20007
  408308:	and    rbx,0xfffffffffffe0000
  40830f:	mov    rdi,r12
  408312:	mov    rsi,rbx
  408315:	call   403200 <realloc@plt>
  40831a:	mov    r12,rax
  40831d:	mov    QWORD PTR [rip+0x7b2c],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408324:	mov    QWORD PTR [rip+0x7b2d],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  40832b:	mov    rbp,QWORD PTR [rip+0x7b2e]        # 40fe60 <__bss_start@@Base+0xcf0>
  408332:	mov    al,BYTE PTR [rip+0x7b08]        # 40fe40 <__bss_start@@Base+0xcd0>
  408338:	mov    ecx,DWORD PTR [rsp+0xc]
  40833c:	mov    DWORD PTR [r12+rbp*1],ecx
  408340:	lea    rbx,[rbp+0x4]
  408344:	mov    QWORD PTR [rip+0x7b15],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  40834b:	cmp    al,0x1
  40834d:	mov    r14d,DWORD PTR [rsp+0x14]
  408352:	mov    r15d,DWORD PTR [rsp+0x10]
  408357:	jne    408100 <read_boolean_unary_expression@@Base+0x880>
  40835d:	jmp    40837c <read_boolean_unary_expression@@Base+0xafc>
  40835f:	mov    eax,DWORD PTR [rsp+0xc]
  408363:	mov    DWORD PTR [r12+rbp*1],eax
  408367:	lea    rbx,[rbp+0x4]
  40836b:	mov    QWORD PTR [rip+0x7aee],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408372:	mov    r14d,DWORD PTR [rsp+0x14]
  408377:	mov    r15d,DWORD PTR [rsp+0x10]
  40837c:	lea    rax,[rbp+0x8]
  408380:	cmp    rax,QWORD PTR [rip+0x7ad1]        # 40fe58 <__bss_start@@Base+0xce8>
  408387:	jbe    408100 <read_boolean_unary_expression@@Base+0x880>
  40838d:	add    rbp,0x20007
  408394:	and    rbp,0xfffffffffffe0000
  40839b:	mov    rdi,r12
  40839e:	mov    rsi,rbp
  4083a1:	call   403200 <realloc@plt>
  4083a6:	mov    r12,rax
  4083a9:	mov    QWORD PTR [rip+0x7aa0],rax        # 40fe50 <__bss_start@@Base+0xce0>
  4083b0:	mov    QWORD PTR [rip+0x7aa1],rbp        # 40fe58 <__bss_start@@Base+0xce8>
  4083b7:	mov    rbx,QWORD PTR [rip+0x7aa2]        # 40fe60 <__bss_start@@Base+0xcf0>
  4083be:	jmp    408100 <read_boolean_unary_expression@@Base+0x880>
  4083c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083cd:	nop    DWORD PTR [rax]
  4083d0:	push   rbp
  4083d1:	push   r15
  4083d3:	push   r14
  4083d5:	push   r13
  4083d7:	push   r12
  4083d9:	push   rbx
  4083da:	sub    rsp,0x18
  4083de:	cmp    QWORD PTR [rip+0x7a62],0x0        # 40fe48 <__bss_start@@Base+0xcd8>
  4083e6:	je     40848a <read_boolean_unary_expression@@Base+0xc0a>
  4083ec:	mov    r13d,edi
  4083ef:	mov    r14,QWORD PTR [rip+0x7a6a]        # 40fe60 <__bss_start@@Base+0xcf0>
  4083f6:	cmp    BYTE PTR [rip+0x7a43],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  4083fd:	mov    QWORD PTR [rsp+0x8],rsi
  408402:	je     408499 <read_boolean_unary_expression@@Base+0xc19>
  408408:	lea    rbx,[r14+0x4]
  40840c:	cmp    rbx,QWORD PTR [rip+0x7a45]        # 40fe58 <__bss_start@@Base+0xce8>
  408413:	jbe    408521 <read_boolean_unary_expression@@Base+0xca1>
  408419:	add    r14,0x20003
  408420:	and    r14,0xfffffffffffe0000
  408427:	mov    rdi,QWORD PTR [rip+0x7a22]        # 40fe50 <__bss_start@@Base+0xce0>
  40842e:	mov    rsi,r14
  408431:	call   403200 <realloc@plt>
  408436:	mov    rsi,QWORD PTR [rsp+0x8]
  40843b:	mov    r15,rax
  40843e:	mov    QWORD PTR [rip+0x7a0b],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408445:	mov    QWORD PTR [rip+0x7a0c],r14        # 40fe58 <__bss_start@@Base+0xce8>
  40844c:	mov    r14,QWORD PTR [rip+0x7a0d]        # 40fe60 <__bss_start@@Base+0xcf0>
  408453:	mov    al,BYTE PTR [rip+0x79e7]        # 40fe40 <__bss_start@@Base+0xcd0>
  408459:	lea    rbx,[r14+0x4]
  40845d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408465:	mov    QWORD PTR [rip+0x79f4],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  40846c:	lea    ebp,[r13+r13*1+0x0]
  408471:	xor    ecx,ecx
  408473:	mov    QWORD PTR [rsp],rcx
  408477:	mov    r12d,0x0
  40847d:	cmp    al,0x1
  40847f:	je     40853c <read_boolean_unary_expression@@Base+0xcbc>
  408485:	jmp    40866f <read_boolean_unary_expression@@Base+0xdef>
  40848a:	add    rsp,0x18
  40848e:	pop    rbx
  40848f:	pop    r12
  408491:	pop    r13
  408493:	pop    r14
  408495:	pop    r15
  408497:	pop    rbp
  408498:	ret    
  408499:	mov    r15,QWORD PTR [rip+0x79b0]        # 40fe50 <__bss_start@@Base+0xce0>
  4084a0:	mov    ecx,DWORD PTR [r15+r14*1]
  4084a4:	lea    rbx,[r14+0x4]
  4084a8:	mov    QWORD PTR [rip+0x79b1],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  4084af:	cmp    ecx,0xffffffff
  4084b2:	je     408595 <read_boolean_unary_expression@@Base+0xd15>
  4084b8:	cmp    ecx,0x1a10000
  4084be:	jne    4085a3 <read_boolean_unary_expression@@Base+0xd23>
  4084c4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  4084c9:	lea    rbp,[r14+0x8]
  4084cd:	mov    QWORD PTR [rip+0x798c],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  4084d4:	cmp    ecx,0xffffffff
  4084d7:	je     4085bd <read_boolean_unary_expression@@Base+0xd3d>
  4084dd:	mov    eax,ecx
  4084df:	shr    eax,1
  4084e1:	cmp    eax,r13d
  4084e4:	jne    4085bd <read_boolean_unary_expression@@Base+0xd3d>
  4084ea:	mov    r12d,r13d
  4084ed:	lea    rdi,[r12*8+0x0]
  4084f5:	call   4031d0 <malloc@plt>
  4084fa:	test   r13d,r13d
  4084fd:	mov    rcx,rax
  408500:	mov    QWORD PTR [rsp],rax
  408504:	je     4085ea <read_boolean_unary_expression@@Base+0xd6a>
  40850a:	mov    eax,r12d
  40850d:	and    eax,0x1
  408510:	cmp    r13d,0x1
  408514:	jne    4085f4 <read_boolean_unary_expression@@Base+0xd74>
  40851a:	xor    ecx,ecx
  40851c:	jmp    408633 <read_boolean_unary_expression@@Base+0xdb3>
  408521:	mov    r15,QWORD PTR [rip+0x7928]        # 40fe50 <__bss_start@@Base+0xce0>
  408528:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408530:	mov    QWORD PTR [rip+0x7929],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408537:	lea    ebp,[r13+r13*1+0x0]
  40853c:	lea    rax,[r14+0x8]
  408540:	cmp    rax,QWORD PTR [rip+0x7911]        # 40fe58 <__bss_start@@Base+0xce8>
  408547:	jbe    408587 <read_boolean_unary_expression@@Base+0xd07>
  408549:	add    r14,0x20007
  408550:	and    r14,0xfffffffffffe0000
  408557:	mov    rdi,r15
  40855a:	mov    rsi,r14
  40855d:	call   403200 <realloc@plt>
  408562:	mov    rsi,QWORD PTR [rsp+0x8]
  408567:	mov    r15,rax
  40856a:	mov    QWORD PTR [rip+0x78df],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408571:	mov    QWORD PTR [rip+0x78e0],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408578:	xor    eax,eax
  40857a:	mov    QWORD PTR [rsp],rax
  40857e:	mov    rbx,QWORD PTR [rip+0x78db]        # 40fe60 <__bss_start@@Base+0xcf0>
  408585:	jmp    40858d <read_boolean_unary_expression@@Base+0xd0d>
  408587:	xor    eax,eax
  408589:	mov    QWORD PTR [rsp],rax
  40858d:	xor    r12d,r12d
  408590:	jmp    40866f <read_boolean_unary_expression@@Base+0xdef>
  408595:	xor    r12d,r12d
  408598:	xor    eax,eax
  40859a:	mov    QWORD PTR [rsp],rax
  40859e:	jmp    408654 <read_boolean_unary_expression@@Base+0xdd4>
  4085a3:	mov    rax,QWORD PTR [rip+0x6a4e]        # 40eff8 <stderr@GLIBC_2.2.5>
  4085aa:	mov    rdi,QWORD PTR [rax]
  4085ad:	mov    rdx,QWORD PTR [rip+0x7884]        # 40fe38 <__bss_start@@Base+0xcc8>
  4085b4:	lea    rsi,[rip+0x28eb]        # 40aea6 <_IO_stdin_used@@Base+0xea6>
  4085bb:	jmp    4085d5 <read_boolean_unary_expression@@Base+0xd55>
  4085bd:	mov    rax,QWORD PTR [rip+0x6a34]        # 40eff8 <stderr@GLIBC_2.2.5>
  4085c4:	mov    rdi,QWORD PTR [rax]
  4085c7:	mov    rdx,QWORD PTR [rip+0x786a]        # 40fe38 <__bss_start@@Base+0xcc8>
  4085ce:	lea    rsi,[rip+0x291b]        # 40aef0 <_IO_stdin_used@@Base+0xef0>
  4085d5:	xor    eax,eax
  4085d7:	add    rsp,0x18
  4085db:	pop    rbx
  4085dc:	pop    r12
  4085de:	pop    r13
  4085e0:	pop    r14
  4085e2:	pop    r15
  4085e4:	pop    rbp
  4085e5:	jmp    403180 <fprintf@plt>
  4085ea:	mov    r12,rax
  4085ed:	mov    rsi,QWORD PTR [rsp+0x8]
  4085f2:	jmp    408654 <read_boolean_unary_expression@@Base+0xdd4>
  4085f4:	mov    rbp,0xfffffffffffffff8
  4085fb:	sub    rbp,r14
  4085fe:	lea    rdx,[r15+r14*1]
  408602:	add    rdx,0x14
  408606:	sub    r12,rax
  408609:	xor    ecx,ecx
  40860b:	mov    rdi,QWORD PTR [rsp]
  40860f:	nop
  408610:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  408615:	mov    QWORD PTR [rdi+rcx*8],rsi
  408619:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40861e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  408623:	add    rcx,0x2
  408627:	add    rbp,0xfffffffffffffff0
  40862b:	cmp    r12,rcx
  40862e:	jne    408610 <read_boolean_unary_expression@@Base+0xd90>
  408630:	neg    rbp
  408633:	mov    rsi,QWORD PTR [rsp+0x8]
  408638:	test   rax,rax
  40863b:	mov    r12,QWORD PTR [rsp]
  40863f:	je     40864d <read_boolean_unary_expression@@Base+0xdcd>
  408641:	mov    rax,QWORD PTR [r15+rbp*1]
  408645:	mov    QWORD PTR [r12+rcx*8],rax
  408649:	add    rbp,0x8
  40864d:	mov    QWORD PTR [rip+0x780c],rbp        # 40fe60 <__bss_start@@Base+0xcf0>
  408654:	mov    QWORD PTR [rip+0x7805],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  40865b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408663:	mov    QWORD PTR [rip+0x77f6],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  40866a:	lea    ebp,[r13+r13*1+0x0]
  40866f:	mov    DWORD PTR [r15+rbx*1],ebp
  408673:	add    rbx,0x4
  408677:	mov    QWORD PTR [rip+0x77e2],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  40867e:	test   r13d,r13d
  408681:	je     4087cf <read_boolean_unary_expression@@Base+0xf4f>
  408687:	mov    edi,r13d
  40868a:	shl    rdi,0x3
  40868e:	xor    ebp,ebp
  408690:	mov    QWORD PTR [rsp+0x10],rdi
  408695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40869f:	nop
  4086a0:	test   r12,r12
  4086a3:	je     4086b0 <read_boolean_unary_expression@@Base+0xe30>
  4086a5:	mov    r14,QWORD PTR [r12+rbp*1]
  4086a9:	jmp    4086b3 <read_boolean_unary_expression@@Base+0xe33>
  4086ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4086b0:	xor    r14d,r14d
  4086b3:	add    r14,QWORD PTR [rsi+rbp*1]
  4086b7:	mov    QWORD PTR [rsi+rbp*1],r14
  4086bb:	mov    r13,r14
  4086be:	shr    r13,0x20
  4086c2:	cmp    BYTE PTR [rip+0x7777],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  4086c9:	je     408740 <read_boolean_unary_expression@@Base+0xec0>
  4086cb:	lea    rax,[rbx+0x4]
  4086cf:	mov    rcx,QWORD PTR [rip+0x7782]        # 40fe58 <__bss_start@@Base+0xce8>
  4086d6:	cmp    rax,rcx
  4086d9:	jbe    408760 <read_boolean_unary_expression@@Base+0xee0>
  4086df:	add    rbx,0x20003
  4086e6:	and    rbx,0xfffffffffffe0000
  4086ed:	mov    rdi,r15
  4086f0:	mov    rsi,rbx
  4086f3:	call   403200 <realloc@plt>
  4086f8:	mov    rdi,QWORD PTR [rsp+0x10]
  4086fd:	mov    rsi,QWORD PTR [rsp+0x8]
  408702:	mov    r15,rax
  408705:	mov    QWORD PTR [rip+0x7744],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40870c:	mov    QWORD PTR [rip+0x7745],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408713:	movzx  edx,BYTE PTR [rip+0x7726]        # 40fe40 <__bss_start@@Base+0xcd0>
  40871a:	mov    rcx,rbx
  40871d:	mov    rbx,QWORD PTR [rip+0x773c]        # 40fe60 <__bss_start@@Base+0xcf0>
  408724:	mov    DWORD PTR [rax+rbx*1],r14d
  408728:	lea    rax,[rbx+0x4]
  40872c:	mov    QWORD PTR [rip+0x772d],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  408733:	cmp    dl,0x1
  408736:	je     40876b <read_boolean_unary_expression@@Base+0xeeb>
  408738:	jmp    4087b0 <read_boolean_unary_expression@@Base+0xf30>
  40873a:	nop    WORD PTR [rax+rax*1+0x0]
  408740:	mov    DWORD PTR [r15+rbx*1],r14d
  408744:	add    rbx,0x4
  408748:	mov    QWORD PTR [rip+0x7711],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  40874f:	mov    rax,rbx
  408752:	jmp    4087b0 <read_boolean_unary_expression@@Base+0xf30>
  408754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40875e:	xchg   ax,ax
  408760:	mov    DWORD PTR [r15+rbx*1],r14d
  408764:	mov    QWORD PTR [rip+0x76f5],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  40876b:	lea    rdx,[rbx+0x8]
  40876f:	cmp    rdx,rcx
  408772:	jbe    4087b0 <read_boolean_unary_expression@@Base+0xf30>
  408774:	add    rbx,0x20007
  40877b:	and    rbx,0xfffffffffffe0000
  408782:	mov    rdi,r15
  408785:	mov    rsi,rbx
  408788:	call   403200 <realloc@plt>
  40878d:	mov    rdi,QWORD PTR [rsp+0x10]
  408792:	mov    rsi,QWORD PTR [rsp+0x8]
  408797:	mov    r15,rax
  40879a:	mov    QWORD PTR [rip+0x76af],rax        # 40fe50 <__bss_start@@Base+0xce0>
  4087a1:	mov    QWORD PTR [rip+0x76b0],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  4087a8:	mov    rax,QWORD PTR [rip+0x76b1]        # 40fe60 <__bss_start@@Base+0xcf0>
  4087af:	nop
  4087b0:	mov    DWORD PTR [r15+rax*1],r13d
  4087b4:	add    rax,0x4
  4087b8:	mov    QWORD PTR [rip+0x76a1],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  4087bf:	add    rbp,0x8
  4087c3:	mov    rbx,rax
  4087c6:	cmp    rdi,rbp
  4087c9:	jne    4086a0 <read_boolean_unary_expression@@Base+0xe20>
  4087cf:	mov    rdi,QWORD PTR [rsp]
  4087d3:	add    rsp,0x18
  4087d7:	pop    rbx
  4087d8:	pop    r12
  4087da:	pop    r13
  4087dc:	pop    r14
  4087de:	pop    r15
  4087e0:	pop    rbp
  4087e1:	jmp    403040 <free@plt>
  4087e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087f0:	push   rbp
  4087f1:	push   r15
  4087f3:	push   r14
  4087f5:	push   rbx
  4087f6:	push   rax
  4087f7:	cmp    QWORD PTR [rip+0x7649],0x0        # 40fe48 <__bss_start@@Base+0xcd8>
  4087ff:	je     408b76 <read_boolean_unary_expression@@Base+0x12f6>
  408805:	mov    rbx,QWORD PTR [rip+0x7654]        # 40fe60 <__bss_start@@Base+0xcf0>
  40880c:	cmp    BYTE PTR [rip+0x762d],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408813:	je     40887f <read_boolean_unary_expression@@Base+0xfff>
  408815:	lea    r14,[rbx+0x4]
  408819:	cmp    r14,QWORD PTR [rip+0x7638]        # 40fe58 <__bss_start@@Base+0xce8>
  408820:	jbe    4088cb <read_boolean_unary_expression@@Base+0x104b>
  408826:	add    rbx,0x20003
  40882d:	and    rbx,0xfffffffffffe0000
  408834:	mov    rdi,QWORD PTR [rip+0x7615]        # 40fe50 <__bss_start@@Base+0xce0>
  40883b:	mov    rsi,rbx
  40883e:	call   403200 <realloc@plt>
  408843:	mov    QWORD PTR [rip+0x7606],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40884a:	mov    QWORD PTR [rip+0x7607],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408851:	mov    rbx,QWORD PTR [rip+0x7608]        # 40fe60 <__bss_start@@Base+0xcf0>
  408858:	mov    cl,BYTE PTR [rip+0x75e2]        # 40fe40 <__bss_start@@Base+0xcd0>
  40885e:	lea    r14,[rbx+0x4]
  408862:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  408869:	mov    QWORD PTR [rip+0x75f0],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408870:	mov    ebp,0x1
  408875:	cmp    cl,0x1
  408878:	je     4088e0 <read_boolean_unary_expression@@Base+0x1060>
  40887a:	jmp    4089fb <read_boolean_unary_expression@@Base+0x117b>
  40887f:	mov    rax,QWORD PTR [rip+0x75ca]        # 40fe50 <__bss_start@@Base+0xce0>
  408886:	mov    ecx,DWORD PTR [rax+rbx*1]
  408889:	lea    r14,[rbx+0x4]
  40888d:	mov    QWORD PTR [rip+0x75cc],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408894:	cmp    ecx,0xa1000000
  40889a:	je     4089bc <read_boolean_unary_expression@@Base+0x113c>
  4088a0:	mov    ebp,0x1
  4088a5:	cmp    ecx,0xffffffff
  4088a8:	je     4089ed <read_boolean_unary_expression@@Base+0x116d>
  4088ae:	mov    rax,QWORD PTR [rip+0x6743]        # 40eff8 <stderr@GLIBC_2.2.5>
  4088b5:	mov    rdi,QWORD PTR [rax]
  4088b8:	mov    rdx,QWORD PTR [rip+0x7579]        # 40fe38 <__bss_start@@Base+0xcc8>
  4088bf:	lea    rsi,[rip+0x267e]        # 40af44 <_IO_stdin_used@@Base+0xf44>
  4088c6:	jmp    408dd5 <read_boolean_unary_expression@@Base+0x1555>
  4088cb:	mov    rax,QWORD PTR [rip+0x757e]        # 40fe50 <__bss_start@@Base+0xce0>
  4088d2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4088d9:	mov    QWORD PTR [rip+0x7580],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  4088e0:	lea    rcx,[rbx+0x8]
  4088e4:	cmp    rcx,QWORD PTR [rip+0x756d]        # 40fe58 <__bss_start@@Base+0xce8>
  4088eb:	jbe    408943 <read_boolean_unary_expression@@Base+0x10c3>
  4088ed:	add    rbx,0x20007
  4088f4:	and    rbx,0xfffffffffffe0000
  4088fb:	mov    rdi,rax
  4088fe:	mov    rsi,rbx
  408901:	call   403200 <realloc@plt>
  408906:	mov    QWORD PTR [rip+0x7543],rax        # 40fe50 <__bss_start@@Base+0xce0>
  40890d:	mov    QWORD PTR [rip+0x7544],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408914:	mov    r14,QWORD PTR [rip+0x7545]        # 40fe60 <__bss_start@@Base+0xcf0>
  40891b:	mov    cl,BYTE PTR [rip+0x751f]        # 40fe40 <__bss_start@@Base+0xcd0>
  408921:	mov    DWORD PTR [rax+r14*1],0x9
  408929:	lea    rbx,[r14+0x4]
  40892d:	mov    QWORD PTR [rip+0x752c],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408934:	mov    ebp,0x1
  408939:	cmp    cl,0x1
  40893c:	je     408956 <read_boolean_unary_expression@@Base+0x10d6>
  40893e:	jmp    408a11 <read_boolean_unary_expression@@Base+0x1191>
  408943:	mov    DWORD PTR [rax+r14*1],0x9
  40894b:	lea    rbx,[r14+0x4]
  40894f:	mov    QWORD PTR [rip+0x750a],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408956:	lea    rcx,[r14+0x8]
  40895a:	cmp    rcx,QWORD PTR [rip+0x74f7]        # 40fe58 <__bss_start@@Base+0xce8>
  408961:	jbe    408bfd <read_boolean_unary_expression@@Base+0x137d>
  408967:	add    r14,0x20007
  40896e:	and    r14,0xfffffffffffe0000
  408975:	mov    rdi,rax
  408978:	mov    rsi,r14
  40897b:	call   403200 <realloc@plt>
  408980:	mov    QWORD PTR [rip+0x74c9],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408987:	mov    QWORD PTR [rip+0x74ca],r14        # 40fe58 <__bss_start@@Base+0xce8>
  40898e:	mov    rbx,QWORD PTR [rip+0x74cb]        # 40fe60 <__bss_start@@Base+0xcf0>
  408995:	mov    cl,BYTE PTR [rip+0x74a5]        # 40fe40 <__bss_start@@Base+0xcd0>
  40899b:	mov    DWORD PTR [rax+rbx*1],0x0
  4089a2:	lea    r14,[rbx+0x4]
  4089a6:	mov    QWORD PTR [rip+0x74b3],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  4089ad:	mov    ebp,0x1
  4089b2:	cmp    cl,0x1
  4089b5:	jne    408a26 <read_boolean_unary_expression@@Base+0x11a6>
  4089b7:	jmp    408c0f <read_boolean_unary_expression@@Base+0x138f>
  4089bc:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  4089c0:	lea    rdx,[rbx+0x8]
  4089c4:	mov    QWORD PTR [rip+0x7495],rdx        # 40fe60 <__bss_start@@Base+0xcf0>
  4089cb:	cmp    ecx,0x9
  4089ce:	jne    408dbd <read_boolean_unary_expression@@Base+0x153d>
  4089d4:	lea    rcx,[rbx+0x14]
  4089d8:	movzx  ebp,BYTE PTR [rip+0x7489]        # 40fe68 <__bss_start@@Base+0xcf8>
  4089df:	xor    ebp,0x1
  4089e2:	add    ebp,DWORD PTR [rax+rbx*1+0x10]
  4089e6:	mov    QWORD PTR [rip+0x7473],rcx        # 40fe60 <__bss_start@@Base+0xcf0>
  4089ed:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4089f4:	mov    QWORD PTR [rip+0x7465],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  4089fb:	mov    DWORD PTR [rax+r14*1],0x9
  408a03:	add    r14,0x4
  408a07:	mov    QWORD PTR [rip+0x7452],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408a0e:	mov    rbx,r14
  408a11:	mov    DWORD PTR [rax+rbx*1],0x0
  408a18:	add    rbx,0x4
  408a1c:	mov    QWORD PTR [rip+0x743d],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408a23:	mov    r14,rbx
  408a26:	mov    DWORD PTR [rax+r14*1],0x0
  408a2e:	add    r14,0x4
  408a32:	mov    QWORD PTR [rip+0x7427],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408a39:	mov    rbx,r14
  408a3c:	mov    DWORD PTR [rax+rbx*1],ebp
  408a3f:	lea    r14,[rbx+0x4]
  408a43:	mov    QWORD PTR [rip+0x7416],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408a4a:	cmp    BYTE PTR [rip+0x73ef],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408a51:	je     408ab7 <read_boolean_unary_expression@@Base+0x1237>
  408a53:	lea    r15,[rbx+0x8]
  408a57:	cmp    r15,QWORD PTR [rip+0x73fa]        # 40fe58 <__bss_start@@Base+0xce8>
  408a5e:	jbe    408b81 <read_boolean_unary_expression@@Base+0x1301>
  408a64:	add    rbx,0x20007
  408a6b:	and    rbx,0xfffffffffffe0000
  408a72:	mov    rdi,QWORD PTR [rip+0x73d7]        # 40fe50 <__bss_start@@Base+0xce0>
  408a79:	mov    rsi,rbx
  408a7c:	call   403200 <realloc@plt>
  408a81:	mov    QWORD PTR [rip+0x73c8],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408a88:	mov    QWORD PTR [rip+0x73c9],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408a8f:	mov    r14,QWORD PTR [rip+0x73ca]        # 40fe60 <__bss_start@@Base+0xcf0>
  408a96:	lea    r15,[r14+0x4]
  408a9a:	cmp    BYTE PTR [rip+0x739f],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408aa1:	mov    DWORD PTR [rax+r14*1],0x0
  408aa9:	mov    QWORD PTR [rip+0x73b0],r15        # 40fe60 <__bss_start@@Base+0xcf0>
  408ab0:	je     408ad4 <read_boolean_unary_expression@@Base+0x1254>
  408ab2:	jmp    408b97 <read_boolean_unary_expression@@Base+0x1317>
  408ab7:	mov    rax,QWORD PTR [rip+0x7392]        # 40fe50 <__bss_start@@Base+0xce0>
  408abe:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  408ac6:	add    rbx,0x8
  408aca:	mov    QWORD PTR [rip+0x738f],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408ad1:	mov    r15,rbx
  408ad4:	mov    DWORD PTR [rax+r15*1],0x0
  408adc:	add    r15,0x4
  408ae0:	mov    QWORD PTR [rip+0x7379],r15        # 40fe60 <__bss_start@@Base+0xcf0>
  408ae7:	mov    r14,r15
  408aea:	mov    DWORD PTR [rax+r14*1],0x0
  408af2:	add    r14,0x4
  408af6:	mov    QWORD PTR [rip+0x7363],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408afd:	mov    rbx,r14
  408b00:	mov    DWORD PTR [rax+rbx*1],0x0
  408b07:	add    rbx,0x4
  408b0b:	mov    QWORD PTR [rip+0x734e],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408b12:	mov    r14,rbx
  408b15:	mov    DWORD PTR [rax+r14*1],0x0
  408b1d:	add    r14,0x4
  408b21:	mov    QWORD PTR [rip+0x7338],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408b28:	mov    rbx,r14
  408b2b:	mov    DWORD PTR [rax+rbx*1],0x0
  408b32:	add    rbx,0x4
  408b36:	mov    QWORD PTR [rip+0x7323],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408b3d:	mov    r14,rbx
  408b40:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408b48:	add    r14,0x4
  408b4c:	mov    QWORD PTR [rip+0x730d],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408b53:	mov    rcx,r14
  408b56:	mov    rax,QWORD PTR [rip+0x72f3]        # 40fe50 <__bss_start@@Base+0xce0>
  408b5d:	mov    DWORD PTR [rax+rcx*1],0x0
  408b64:	add    rcx,0x4
  408b68:	mov    QWORD PTR [rip+0x72f1],rcx        # 40fe60 <__bss_start@@Base+0xcf0>
  408b6f:	mov    BYTE PTR [rip+0x72f2],0x1        # 40fe68 <__bss_start@@Base+0xcf8>
  408b76:	add    rsp,0x8
  408b7a:	pop    rbx
  408b7b:	pop    r14
  408b7d:	pop    r15
  408b7f:	pop    rbp
  408b80:	ret    
  408b81:	mov    rax,QWORD PTR [rip+0x72c8]        # 40fe50 <__bss_start@@Base+0xce0>
  408b88:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  408b90:	mov    QWORD PTR [rip+0x72c9],r15        # 40fe60 <__bss_start@@Base+0xcf0>
  408b97:	lea    rcx,[r14+0x8]
  408b9b:	cmp    rcx,QWORD PTR [rip+0x72b6]        # 40fe58 <__bss_start@@Base+0xce8>
  408ba2:	jbe    408c7a <read_boolean_unary_expression@@Base+0x13fa>
  408ba8:	add    r14,0x20007
  408baf:	and    r14,0xfffffffffffe0000
  408bb6:	mov    rdi,rax
  408bb9:	mov    rsi,r14
  408bbc:	call   403200 <realloc@plt>
  408bc1:	mov    QWORD PTR [rip+0x7288],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408bc8:	mov    QWORD PTR [rip+0x7289],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408bcf:	mov    r15,QWORD PTR [rip+0x728a]        # 40fe60 <__bss_start@@Base+0xcf0>
  408bd6:	mov    cl,BYTE PTR [rip+0x7264]        # 40fe40 <__bss_start@@Base+0xcd0>
  408bdc:	mov    DWORD PTR [rax+r15*1],0x0
  408be4:	lea    r14,[r15+0x4]
  408be8:	mov    QWORD PTR [rip+0x7271],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408bef:	cmp    cl,0x1
  408bf2:	jne    408aea <read_boolean_unary_expression@@Base+0x126a>
  408bf8:	jmp    408c8d <read_boolean_unary_expression@@Base+0x140d>
  408bfd:	mov    DWORD PTR [rax+rbx*1],0x0
  408c04:	lea    r14,[rbx+0x4]
  408c08:	mov    QWORD PTR [rip+0x7251],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408c0f:	lea    rcx,[rbx+0x8]
  408c13:	cmp    rcx,QWORD PTR [rip+0x723e]        # 40fe58 <__bss_start@@Base+0xce8>
  408c1a:	jbe    408cf0 <read_boolean_unary_expression@@Base+0x1470>
  408c20:	add    rbx,0x20007
  408c27:	and    rbx,0xfffffffffffe0000
  408c2e:	mov    rdi,rax
  408c31:	mov    rsi,rbx
  408c34:	call   403200 <realloc@plt>
  408c39:	mov    QWORD PTR [rip+0x7210],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408c40:	mov    QWORD PTR [rip+0x7211],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408c47:	mov    r14,QWORD PTR [rip+0x7212]        # 40fe60 <__bss_start@@Base+0xcf0>
  408c4e:	mov    cl,BYTE PTR [rip+0x71ec]        # 40fe40 <__bss_start@@Base+0xcd0>
  408c54:	mov    DWORD PTR [rax+r14*1],0x0
  408c5c:	lea    rbx,[r14+0x4]
  408c60:	mov    QWORD PTR [rip+0x71f9],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408c67:	mov    ebp,0x1
  408c6c:	cmp    cl,0x1
  408c6f:	jne    408a3c <read_boolean_unary_expression@@Base+0x11bc>
  408c75:	jmp    408d03 <read_boolean_unary_expression@@Base+0x1483>
  408c7a:	mov    DWORD PTR [rax+r15*1],0x0
  408c82:	lea    r14,[r15+0x4]
  408c86:	mov    QWORD PTR [rip+0x71d3],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408c8d:	lea    rcx,[r15+0x8]
  408c91:	cmp    rcx,QWORD PTR [rip+0x71c0]        # 40fe58 <__bss_start@@Base+0xce8>
  408c98:	jbe    408d4c <read_boolean_unary_expression@@Base+0x14cc>
  408c9e:	add    r15,0x20007
  408ca5:	and    r15,0xfffffffffffe0000
  408cac:	mov    rdi,rax
  408caf:	mov    rsi,r15
  408cb2:	call   403200 <realloc@plt>
  408cb7:	mov    QWORD PTR [rip+0x7192],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408cbe:	mov    QWORD PTR [rip+0x7193],r15        # 40fe58 <__bss_start@@Base+0xce8>
  408cc5:	mov    r14,QWORD PTR [rip+0x7194]        # 40fe60 <__bss_start@@Base+0xcf0>
  408ccc:	mov    cl,BYTE PTR [rip+0x716e]        # 40fe40 <__bss_start@@Base+0xcd0>
  408cd2:	mov    DWORD PTR [rax+r14*1],0x0
  408cda:	lea    rbx,[r14+0x4]
  408cde:	mov    QWORD PTR [rip+0x717b],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408ce5:	cmp    cl,0x1
  408ce8:	jne    408b00 <read_boolean_unary_expression@@Base+0x1280>
  408cee:	jmp    408d5f <read_boolean_unary_expression@@Base+0x14df>
  408cf0:	mov    DWORD PTR [rax+r14*1],0x0
  408cf8:	lea    rbx,[r14+0x4]
  408cfc:	mov    QWORD PTR [rip+0x715d],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408d03:	lea    rcx,[r14+0x8]
  408d07:	mov    ebp,0x1
  408d0c:	cmp    rcx,QWORD PTR [rip+0x7145]        # 40fe58 <__bss_start@@Base+0xce8>
  408d13:	jbe    408a3c <read_boolean_unary_expression@@Base+0x11bc>
  408d19:	add    r14,0x20007
  408d20:	and    r14,0xfffffffffffe0000
  408d27:	mov    rdi,rax
  408d2a:	mov    rsi,r14
  408d2d:	call   403200 <realloc@plt>
  408d32:	mov    QWORD PTR [rip+0x7117],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408d39:	mov    QWORD PTR [rip+0x7118],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408d40:	mov    rbx,QWORD PTR [rip+0x7119]        # 40fe60 <__bss_start@@Base+0xcf0>
  408d47:	jmp    408a3c <read_boolean_unary_expression@@Base+0x11bc>
  408d4c:	mov    DWORD PTR [rax+r14*1],0x0
  408d54:	lea    rbx,[r14+0x4]
  408d58:	mov    QWORD PTR [rip+0x7101],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408d5f:	lea    rcx,[r14+0x8]
  408d63:	cmp    rcx,QWORD PTR [rip+0x70ee]        # 40fe58 <__bss_start@@Base+0xce8>
  408d6a:	jbe    408de6 <read_boolean_unary_expression@@Base+0x1566>
  408d6c:	add    r14,0x20007
  408d73:	and    r14,0xfffffffffffe0000
  408d7a:	mov    rdi,rax
  408d7d:	mov    rsi,r14
  408d80:	call   403200 <realloc@plt>
  408d85:	mov    QWORD PTR [rip+0x70c4],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408d8c:	mov    QWORD PTR [rip+0x70c5],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408d93:	mov    rbx,QWORD PTR [rip+0x70c6]        # 40fe60 <__bss_start@@Base+0xcf0>
  408d9a:	mov    cl,BYTE PTR [rip+0x70a0]        # 40fe40 <__bss_start@@Base+0xcd0>
  408da0:	mov    DWORD PTR [rax+rbx*1],0x0
  408da7:	lea    r14,[rbx+0x4]
  408dab:	mov    QWORD PTR [rip+0x70ae],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408db2:	cmp    cl,0x1
  408db5:	jne    408b15 <read_boolean_unary_expression@@Base+0x1295>
  408dbb:	jmp    408df8 <read_boolean_unary_expression@@Base+0x1578>
  408dbd:	mov    rax,QWORD PTR [rip+0x6234]        # 40eff8 <stderr@GLIBC_2.2.5>
  408dc4:	mov    rdi,QWORD PTR [rax]
  408dc7:	mov    rdx,QWORD PTR [rip+0x706a]        # 40fe38 <__bss_start@@Base+0xcc8>
  408dce:	lea    rsi,[rip+0x21bc]        # 40af91 <_IO_stdin_used@@Base+0xf91>
  408dd5:	xor    eax,eax
  408dd7:	add    rsp,0x8
  408ddb:	pop    rbx
  408ddc:	pop    r14
  408dde:	pop    r15
  408de0:	pop    rbp
  408de1:	jmp    403180 <fprintf@plt>
  408de6:	mov    DWORD PTR [rax+rbx*1],0x0
  408ded:	lea    r14,[rbx+0x4]
  408df1:	mov    QWORD PTR [rip+0x7068],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408df8:	lea    rcx,[rbx+0x8]
  408dfc:	cmp    rcx,QWORD PTR [rip+0x7055]        # 40fe58 <__bss_start@@Base+0xce8>
  408e03:	jbe    408e57 <read_boolean_unary_expression@@Base+0x15d7>
  408e05:	add    rbx,0x20007
  408e0c:	and    rbx,0xfffffffffffe0000
  408e13:	mov    rdi,rax
  408e16:	mov    rsi,rbx
  408e19:	call   403200 <realloc@plt>
  408e1e:	mov    QWORD PTR [rip+0x702b],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408e25:	mov    QWORD PTR [rip+0x702c],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408e2c:	mov    r14,QWORD PTR [rip+0x702d]        # 40fe60 <__bss_start@@Base+0xcf0>
  408e33:	mov    cl,BYTE PTR [rip+0x7007]        # 40fe40 <__bss_start@@Base+0xcd0>
  408e39:	mov    DWORD PTR [rax+r14*1],0x0
  408e41:	lea    rbx,[r14+0x4]
  408e45:	mov    QWORD PTR [rip+0x7014],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408e4c:	cmp    cl,0x1
  408e4f:	jne    408b2b <read_boolean_unary_expression@@Base+0x12ab>
  408e55:	jmp    408e6a <read_boolean_unary_expression@@Base+0x15ea>
  408e57:	mov    DWORD PTR [rax+r14*1],0x0
  408e5f:	lea    rbx,[r14+0x4]
  408e63:	mov    QWORD PTR [rip+0x6ff6],rbx        # 40fe60 <__bss_start@@Base+0xcf0>
  408e6a:	lea    rcx,[r14+0x8]
  408e6e:	cmp    rcx,QWORD PTR [rip+0x6fe3]        # 40fe58 <__bss_start@@Base+0xce8>
  408e75:	jbe    408ec6 <read_boolean_unary_expression@@Base+0x1646>
  408e77:	add    r14,0x20007
  408e7e:	and    r14,0xfffffffffffe0000
  408e85:	mov    rdi,rax
  408e88:	mov    rsi,r14
  408e8b:	call   403200 <realloc@plt>
  408e90:	mov    QWORD PTR [rip+0x6fb9],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408e97:	mov    QWORD PTR [rip+0x6fba],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408e9e:	mov    rbx,QWORD PTR [rip+0x6fbb]        # 40fe60 <__bss_start@@Base+0xcf0>
  408ea5:	lea    r14,[rbx+0x4]
  408ea9:	cmp    BYTE PTR [rip+0x6f90],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408eb0:	mov    DWORD PTR [rax+rbx*1],0x0
  408eb7:	mov    QWORD PTR [rip+0x6fa2],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408ebe:	je     408b40 <read_boolean_unary_expression@@Base+0x12c0>
  408ec4:	jmp    408ed8 <read_boolean_unary_expression@@Base+0x1658>
  408ec6:	mov    DWORD PTR [rax+rbx*1],0x0
  408ecd:	lea    r14,[rbx+0x4]
  408ed1:	mov    QWORD PTR [rip+0x6f88],r14        # 40fe60 <__bss_start@@Base+0xcf0>
  408ed8:	lea    rcx,[rbx+0x8]
  408edc:	cmp    rcx,QWORD PTR [rip+0x6f75]        # 40fe58 <__bss_start@@Base+0xce8>
  408ee3:	jbe    408f37 <read_boolean_unary_expression@@Base+0x16b7>
  408ee5:	add    rbx,0x20007
  408eec:	and    rbx,0xfffffffffffe0000
  408ef3:	mov    rdi,rax
  408ef6:	mov    rsi,rbx
  408ef9:	call   403200 <realloc@plt>
  408efe:	mov    QWORD PTR [rip+0x6f4b],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408f05:	mov    QWORD PTR [rip+0x6f4c],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408f0c:	mov    dl,BYTE PTR [rip+0x6f2e]        # 40fe40 <__bss_start@@Base+0xcd0>
  408f12:	mov    r14,QWORD PTR [rip+0x6f47]        # 40fe60 <__bss_start@@Base+0xcf0>
  408f19:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408f21:	lea    rcx,[r14+0x4]
  408f25:	mov    QWORD PTR [rip+0x6f34],rcx        # 40fe60 <__bss_start@@Base+0xcf0>
  408f2c:	cmp    dl,0x1
  408f2f:	jne    408b56 <read_boolean_unary_expression@@Base+0x12d6>
  408f35:	jmp    408f4a <read_boolean_unary_expression@@Base+0x16ca>
  408f37:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408f3f:	lea    rcx,[r14+0x4]
  408f43:	mov    QWORD PTR [rip+0x6f16],rcx        # 40fe60 <__bss_start@@Base+0xcf0>
  408f4a:	lea    rdx,[r14+0x8]
  408f4e:	cmp    rdx,QWORD PTR [rip+0x6f03]        # 40fe58 <__bss_start@@Base+0xce8>
  408f55:	jbe    408b56 <read_boolean_unary_expression@@Base+0x12d6>
  408f5b:	add    r14,0x20007
  408f62:	and    r14,0xfffffffffffe0000
  408f69:	mov    rdi,rax
  408f6c:	mov    rsi,r14
  408f6f:	call   403200 <realloc@plt>
  408f74:	mov    QWORD PTR [rip+0x6ed5],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408f7b:	mov    QWORD PTR [rip+0x6ed6],r14        # 40fe58 <__bss_start@@Base+0xce8>
  408f82:	mov    rcx,QWORD PTR [rip+0x6ed7]        # 40fe60 <__bss_start@@Base+0xcf0>
  408f89:	jmp    408b56 <read_boolean_unary_expression@@Base+0x12d6>
  408f8e:	xchg   ax,ax
  408f90:	cmp    QWORD PTR [rip+0x6eb0],0x0        # 40fe48 <__bss_start@@Base+0xcd8>
  408f98:	je     4090fe <read_boolean_unary_expression@@Base+0x187e>
  408f9e:	push   r14
  408fa0:	push   rbx
  408fa1:	push   rax
  408fa2:	cmp    BYTE PTR [rip+0x6e97],0x0        # 40fe40 <__bss_start@@Base+0xcd0>
  408fa9:	je     40901a <read_boolean_unary_expression@@Base+0x179a>
  408fab:	mov    rbx,QWORD PTR [rip+0x6eae]        # 40fe60 <__bss_start@@Base+0xcf0>
  408fb2:	lea    rax,[rbx+0x8]
  408fb6:	cmp    rax,QWORD PTR [rip+0x6e9b]        # 40fe58 <__bss_start@@Base+0xce8>
  408fbd:	jbe    409080 <read_boolean_unary_expression@@Base+0x1800>
  408fc3:	add    rbx,0x20007
  408fca:	and    rbx,0xfffffffffffe0000
  408fd1:	mov    rdi,QWORD PTR [rip+0x6e78]        # 40fe50 <__bss_start@@Base+0xce0>
  408fd8:	mov    rsi,rbx
  408fdb:	call   403200 <realloc@plt>
  408fe0:	mov    rdi,rax
  408fe3:	mov    QWORD PTR [rip+0x6e66],rax        # 40fe50 <__bss_start@@Base+0xce0>
  408fea:	mov    QWORD PTR [rip+0x6e67],rbx        # 40fe58 <__bss_start@@Base+0xce8>
  408ff1:	mov    al,BYTE PTR [rip+0x6e49]        # 40fe40 <__bss_start@@Base+0xcd0>
  408ff7:	mov    rsi,QWORD PTR [rip+0x6e62]        # 40fe60 <__bss_start@@Base+0xcf0>
  408ffe:	mov    QWORD PTR [rdi+rsi*1],0x0
  409006:	add    rsi,0x8
  40900a:	mov    QWORD PTR [rip+0x6e4f],rsi        # 40fe60 <__bss_start@@Base+0xcf0>
  409011:	cmp    al,0x1
  409013:	jne    40903b <read_boolean_unary_expression@@Base+0x17bb>
  409015:	jmp    4090a1 <read_boolean_unary_expression@@Base+0x1821>
  40901a:	mov    rdi,QWORD PTR [rip+0x6e2f]        # 40fe50 <__bss_start@@Base+0xce0>
  409021:	mov    rax,QWORD PTR [rip+0x6e38]        # 40fe60 <__bss_start@@Base+0xcf0>
  409028:	mov    QWORD PTR [rdi+rax*1],0x0
  409030:	add    rax,0x8
  409034:	mov    QWORD PTR [rip+0x6e25],rax        # 40fe60 <__bss_start@@Base+0xcf0>
  40903b:	mov    rsi,QWORD PTR [rip+0x6e3e]        # 40fe80 <__bss_start@@Base+0xd10>
  409042:	mov    edx,0x4
  409047:	call   4030d0 <msync@plt>
  40904c:	cmp    eax,0xffffffff
  40904f:	je     40910a <read_boolean_unary_expression@@Base+0x188a>
  409055:	mov    rdi,QWORD PTR [rip+0x6df4]        # 40fe50 <__bss_start@@Base+0xce0>
  40905c:	mov    rsi,QWORD PTR [rip+0x6e1d]        # 40fe80 <__bss_start@@Base+0xd10>
  409063:	call   403220 <munmap@plt>
  409068:	mov    QWORD PTR [rip+0x6ddd],0x0        # 40fe50 <__bss_start@@Base+0xce0>
  409073:	mov    QWORD PTR [rip+0x6e02],0x0        # 40fe80 <__bss_start@@Base+0xd10>
  40907e:	jmp    4090be <read_boolean_unary_expression@@Base+0x183e>
  409080:	mov    rdi,QWORD PTR [rip+0x6dc9]        # 40fe50 <__bss_start@@Base+0xce0>
  409087:	mov    rsi,QWORD PTR [rip+0x6dd2]        # 40fe60 <__bss_start@@Base+0xcf0>
  40908e:	mov    QWORD PTR [rdi+rsi*1],0x0
  409096:	add    rsi,0x8
  40909a:	mov    QWORD PTR [rip+0x6dbf],rsi        # 40fe60 <__bss_start@@Base+0xcf0>
  4090a1:	mov    rcx,QWORD PTR [rip+0x6da0]        # 40fe48 <__bss_start@@Base+0xcd8>
  4090a8:	mov    edx,0x1
  4090ad:	call   403260 <fwrite@plt>
  4090b2:	mov    rdi,QWORD PTR [rip+0x6d97]        # 40fe50 <__bss_start@@Base+0xce0>
  4090b9:	call   403040 <free@plt>
  4090be:	mov    rdi,QWORD PTR [rip+0x6d83]        # 40fe48 <__bss_start@@Base+0xcd8>
  4090c5:	call   4031e0 <fflush@plt>
  4090ca:	mov    edi,DWORD PTR [rip+0x6098]        # 40f168 <__data_start@@Base+0x20>
  4090d0:	call   409570 <__gcov_flush@@Base+0x2c0>
  4090d5:	mov    rdi,QWORD PTR [rip+0x6d6c]        # 40fe48 <__bss_start@@Base+0xcd8>
  4090dc:	call   4030c0 <fclose@plt>
  4090e1:	mov    QWORD PTR [rip+0x6d5c],0x0        # 40fe48 <__bss_start@@Base+0xcd8>
  4090ec:	mov    QWORD PTR [rip+0x6d59],0x0        # 40fe50 <__bss_start@@Base+0xce0>
  4090f7:	add    rsp,0x8
  4090fb:	pop    rbx
  4090fc:	pop    r14
  4090fe:	mov    rdi,QWORD PTR [rip+0x6d33]        # 40fe38 <__bss_start@@Base+0xcc8>
  409105:	jmp    403040 <free@plt>
  40910a:	call   403050 <__errno_location@plt>
  40910f:	mov    edi,DWORD PTR [rax]
  409111:	mov    rax,QWORD PTR [rip+0x5ee0]        # 40eff8 <stderr@GLIBC_2.2.5>
  409118:	mov    r14,QWORD PTR [rax]
  40911b:	mov    rbx,QWORD PTR [rip+0x6d16]        # 40fe38 <__bss_start@@Base+0xcc8>
  409122:	call   403280 <strerror@plt>
  409127:	mov    rcx,rax
  40912a:	lea    rsi,[rip+0x1ece]        # 40afff <_IO_stdin_used@@Base+0xfff>
  409131:	xor    eax,eax
  409133:	mov    rdi,r14
  409136:	mov    rdx,rbx
  409139:	call   403180 <fprintf@plt>
  40913e:	jmp    409055 <read_boolean_unary_expression@@Base+0x17d5>
  409143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40914d:	nop    DWORD PTR [rax]
  409150:	push   rbx
  409151:	mov    rbx,rdi
  409154:	mov    edi,0x18
  409159:	call   4031d0 <malloc@plt>
  40915e:	mov    QWORD PTR [rax+0x8],rbx
  409162:	mov    QWORD PTR [rax+0x10],0x0
  40916a:	lea    rcx,[rip+0x6cff]        # 40fe70 <__bss_start@@Base+0xd00>
  409171:	mov    QWORD PTR [rax],rcx
  409174:	lea    rcx,[rip+0x73c5]        # 410540 <writeout_fn_list@@Base>
  40917b:	lea    rdx,[rcx+0x8]
  40917f:	mov    rsi,QWORD PTR [rcx+0x8]
  409183:	add    rsi,0x10
  409187:	xor    edi,edi
  409189:	cmp    QWORD PTR [rcx],0x0
  40918d:	setne  dil
  409191:	cmove  rsi,rdx
  409195:	mov    QWORD PTR [rsi],rax
  409198:	mov    QWORD PTR [rcx+rdi*8],rax
  40919c:	pop    rbx
  40919d:	ret    
  40919e:	xchg   ax,ax
  4091a0:	push   r14
  4091a2:	push   rbx
  4091a3:	push   rax
  4091a4:	lea    rax,[rip+0x7395]        # 410540 <writeout_fn_list@@Base>
  4091ab:	mov    rbx,QWORD PTR [rax]
  4091ae:	test   rbx,rbx
  4091b1:	je     4091d3 <read_boolean_unary_expression@@Base+0x1953>
  4091b3:	lea    r14,[rip+0x6cb6]        # 40fe70 <__bss_start@@Base+0xd00>
  4091ba:	nop    WORD PTR [rax+rax*1+0x0]
  4091c0:	cmp    QWORD PTR [rbx],r14
  4091c3:	jne    4091ca <read_boolean_unary_expression@@Base+0x194a>
  4091c5:	xor    eax,eax
  4091c7:	call   QWORD PTR [rbx+0x8]
  4091ca:	mov    rbx,QWORD PTR [rbx+0x10]
  4091ce:	test   rbx,rbx
  4091d1:	jne    4091c0 <read_boolean_unary_expression@@Base+0x1940>
  4091d3:	add    rsp,0x8
  4091d7:	pop    rbx
  4091d8:	pop    r14
  4091da:	ret    
  4091db:	nop    DWORD PTR [rax+rax*1+0x0]
  4091e0:	push   r15
  4091e2:	push   r14
  4091e4:	push   r12
  4091e6:	push   rbx
  4091e7:	push   rax
  4091e8:	lea    r14,[rip+0x7351]        # 410540 <writeout_fn_list@@Base>
  4091ef:	mov    rdi,QWORD PTR [r14]
  4091f2:	test   rdi,rdi
  4091f5:	je     409252 <read_boolean_unary_expression@@Base+0x19d2>
  4091f7:	xor    r12d,r12d
  4091fa:	lea    r15,[rip+0x6c6f]        # 40fe70 <__bss_start@@Base+0xd00>
  409201:	jmp    409220 <read_boolean_unary_expression@@Base+0x19a0>
  409203:	mov    QWORD PTR [r14],rbx
  409206:	cmp    rdi,QWORD PTR [r14+0x8]
  40920a:	jne    40923b <read_boolean_unary_expression@@Base+0x19bb>
  40920c:	mov    QWORD PTR [r14+0x8],r12
  409210:	test   r12,r12
  409213:	jne    409240 <read_boolean_unary_expression@@Base+0x19c0>
  409215:	jmp    409245 <read_boolean_unary_expression@@Base+0x19c5>
  409217:	nop    WORD PTR [rax+rax*1+0x0]
  409220:	mov    rbx,QWORD PTR [rdi+0x10]
  409224:	cmp    QWORD PTR [rdi],r15
  409227:	je     409230 <read_boolean_unary_expression@@Base+0x19b0>
  409229:	mov    r12,rdi
  40922c:	jmp    40924a <read_boolean_unary_expression@@Base+0x19ca>
  40922e:	xchg   ax,ax
  409230:	cmp    rdi,QWORD PTR [r14]
  409233:	je     409203 <read_boolean_unary_expression@@Base+0x1983>
  409235:	cmp    rdi,QWORD PTR [r14+0x8]
  409239:	je     40920c <read_boolean_unary_expression@@Base+0x198c>
  40923b:	test   r12,r12
  40923e:	je     409245 <read_boolean_unary_expression@@Base+0x19c5>
  409240:	mov    QWORD PTR [r12+0x10],rbx
  409245:	call   403040 <free@plt>
  40924a:	mov    rdi,rbx
  40924d:	test   rbx,rbx
  409250:	jne    409220 <read_boolean_unary_expression@@Base+0x19a0>
  409252:	add    rsp,0x8
  409256:	pop    rbx
  409257:	pop    r12
  409259:	pop    r14
  40925b:	pop    r15
  40925d:	ret    
  40925e:	xchg   ax,ax
  409260:	push   rbx
  409261:	mov    rbx,rdi
  409264:	mov    edi,0x18
  409269:	call   4031d0 <malloc@plt>
  40926e:	mov    QWORD PTR [rax+0x8],rbx
  409272:	mov    QWORD PTR [rax+0x10],0x0
  40927a:	lea    rcx,[rip+0x6bef]        # 40fe70 <__bss_start@@Base+0xd00>
  409281:	mov    QWORD PTR [rax],rcx
  409284:	lea    rcx,[rip+0x72a5]        # 410530 <flush_fn_list@@Base>
  40928b:	lea    rdx,[rcx+0x8]
  40928f:	mov    rsi,QWORD PTR [rcx+0x8]
  409293:	add    rsi,0x10
  409297:	xor    edi,edi
  409299:	cmp    QWORD PTR [rcx],0x0
  40929d:	setne  dil
  4092a1:	cmove  rsi,rdx
  4092a5:	mov    QWORD PTR [rsi],rax
  4092a8:	mov    QWORD PTR [rcx+rdi*8],rax
  4092ac:	pop    rbx
  4092ad:	ret    
  4092ae:	xchg   ax,ax

00000000004092b0 <__gcov_flush@@Base>:
  4092b0:	push   rbx
  4092b1:	lea    rax,[rip+0x7278]        # 410530 <flush_fn_list@@Base>
  4092b8:	mov    rbx,QWORD PTR [rax]
  4092bb:	test   rbx,rbx
  4092be:	je     4092ce <__gcov_flush@@Base+0x1e>
  4092c0:	xor    eax,eax
  4092c2:	call   QWORD PTR [rbx+0x8]
  4092c5:	mov    rbx,QWORD PTR [rbx+0x10]
  4092c9:	test   rbx,rbx
  4092cc:	jne    4092c0 <__gcov_flush@@Base+0x10>
  4092ce:	pop    rbx
  4092cf:	ret    
  4092d0:	push   r15
  4092d2:	push   r14
  4092d4:	push   r12
  4092d6:	push   rbx
  4092d7:	push   rax
  4092d8:	lea    r14,[rip+0x7251]        # 410530 <flush_fn_list@@Base>
  4092df:	mov    rdi,QWORD PTR [r14]
  4092e2:	test   rdi,rdi
  4092e5:	je     409342 <__gcov_flush@@Base+0x92>
  4092e7:	xor    r12d,r12d
  4092ea:	lea    r15,[rip+0x6b7f]        # 40fe70 <__bss_start@@Base+0xd00>
  4092f1:	jmp    409310 <__gcov_flush@@Base+0x60>
  4092f3:	mov    QWORD PTR [r14],rbx
  4092f6:	cmp    rdi,QWORD PTR [r14+0x8]
  4092fa:	jne    40932b <__gcov_flush@@Base+0x7b>
  4092fc:	mov    QWORD PTR [r14+0x8],r12
  409300:	test   r12,r12
  409303:	jne    409330 <__gcov_flush@@Base+0x80>
  409305:	jmp    409335 <__gcov_flush@@Base+0x85>
  409307:	nop    WORD PTR [rax+rax*1+0x0]
  409310:	mov    rbx,QWORD PTR [rdi+0x10]
  409314:	cmp    QWORD PTR [rdi],r15
  409317:	je     409320 <__gcov_flush@@Base+0x70>
  409319:	mov    r12,rdi
  40931c:	jmp    40933a <__gcov_flush@@Base+0x8a>
  40931e:	xchg   ax,ax
  409320:	cmp    rdi,QWORD PTR [r14]
  409323:	je     4092f3 <__gcov_flush@@Base+0x43>
  409325:	cmp    rdi,QWORD PTR [r14+0x8]
  409329:	je     4092fc <__gcov_flush@@Base+0x4c>
  40932b:	test   r12,r12
  40932e:	je     409335 <__gcov_flush@@Base+0x85>
  409330:	mov    QWORD PTR [r12+0x10],rbx
  409335:	call   403040 <free@plt>
  40933a:	mov    rdi,rbx
  40933d:	test   rbx,rbx
  409340:	jne    409310 <__gcov_flush@@Base+0x60>
  409342:	add    rsp,0x8
  409346:	pop    rbx
  409347:	pop    r12
  409349:	pop    r14
  40934b:	pop    r15
  40934d:	ret    
  40934e:	xchg   ax,ax
  409350:	push   r14
  409352:	push   rbx
  409353:	push   rax
  409354:	mov    r14,rsi
  409357:	test   rdi,rdi
  40935a:	je     4093a7 <__gcov_flush@@Base+0xf7>
  40935c:	mov    rbx,rdi
  40935f:	mov    edi,0x18
  409364:	call   4031d0 <malloc@plt>
  409369:	mov    QWORD PTR [rax+0x8],rbx
  40936d:	mov    QWORD PTR [rax+0x10],0x0
  409375:	lea    rcx,[rip+0x6af4]        # 40fe70 <__bss_start@@Base+0xd00>
  40937c:	mov    QWORD PTR [rax],rcx
  40937f:	lea    rcx,[rip+0x71ba]        # 410540 <writeout_fn_list@@Base>
  409386:	lea    rdx,[rcx+0x8]
  40938a:	mov    rsi,QWORD PTR [rcx+0x8]
  40938e:	add    rsi,0x10
  409392:	xor    edi,edi
  409394:	cmp    QWORD PTR [rcx],0x0
  409398:	setne  dil
  40939c:	cmove  rsi,rdx
  4093a0:	mov    QWORD PTR [rsi],rax
  4093a3:	mov    QWORD PTR [rcx+rdi*8],rax
  4093a7:	test   r14,r14
  4093aa:	je     4093f4 <__gcov_flush@@Base+0x144>
  4093ac:	mov    edi,0x18
  4093b1:	call   4031d0 <malloc@plt>
  4093b6:	mov    QWORD PTR [rax+0x8],r14
  4093ba:	mov    QWORD PTR [rax+0x10],0x0
  4093c2:	lea    rcx,[rip+0x6aa7]        # 40fe70 <__bss_start@@Base+0xd00>
  4093c9:	mov    QWORD PTR [rax],rcx
  4093cc:	lea    rcx,[rip+0x715d]        # 410530 <flush_fn_list@@Base>
  4093d3:	lea    rdx,[rcx+0x8]
  4093d7:	mov    rsi,QWORD PTR [rcx+0x8]
  4093db:	add    rsi,0x10
  4093df:	xor    edi,edi
  4093e1:	cmp    QWORD PTR [rcx],0x0
  4093e5:	setne  dil
  4093e9:	cmove  rsi,rdx
  4093ed:	mov    QWORD PTR [rsi],rax
  4093f0:	mov    QWORD PTR [rcx+rdi*8],rax
  4093f4:	cmp    BYTE PTR [rip+0x6a7d],0x0        # 40fe78 <__bss_start@@Base+0xd08>
  4093fb:	je     409405 <__gcov_flush@@Base+0x155>
  4093fd:	add    rsp,0x8
  409401:	pop    rbx
  409402:	pop    r14
  409404:	ret    
  409405:	mov    BYTE PTR [rip+0x6a6c],0x1        # 40fe78 <__bss_start@@Base+0xd08>
  40940c:	lea    rdi,[rip+0xfffffffffffffebd]        # 4092d0 <__gcov_flush@@Base+0x20>
  409413:	call   4098c0 <__libc_csu_fini@@Base+0x10>
  409418:	lea    rdi,[rip+0xfffffffffffffdc1]        # 4091e0 <read_boolean_unary_expression@@Base+0x1960>
  40941f:	call   4098c0 <__libc_csu_fini@@Base+0x10>
  409424:	lea    rdi,[rip+0xfffffffffffffd75]        # 4091a0 <read_boolean_unary_expression@@Base+0x1920>
  40942b:	add    rsp,0x8
  40942f:	pop    rbx
  409430:	pop    r14
  409432:	jmp    4098c0 <__libc_csu_fini@@Base+0x10>
  409437:	nop
  409438:	nop    DWORD PTR [rax+rax*1+0x0]
  409440:	push   r15
  409442:	push   r14
  409444:	push   rbx
  409445:	mov    r14,rdi
  409448:	lea    rbx,[rdi+0x1]
  40944c:	lea    r15,[rip+0x5d19]        # 40f16c <lprofDirMode@@Base>
  409453:	jmp    409464 <__gcov_flush@@Base+0x1b4>
  409455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40945f:	nop
  409460:	add    rbx,0x1
  409464:	movzx  eax,BYTE PTR [rbx]
  409467:	cmp    al,0x2f
  409469:	je     409480 <__gcov_flush@@Base+0x1d0>
  40946b:	test   al,al
  40946d:	jne    409460 <__gcov_flush@@Base+0x1b0>
  40946f:	jmp    409493 <__gcov_flush@@Base+0x1e3>
  409471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40947b:	nop    DWORD PTR [rax+rax*1+0x0]
  409480:	mov    BYTE PTR [rbx],0x0
  409483:	mov    esi,DWORD PTR [r15]
  409486:	mov    rdi,r14
  409489:	call   403080 <mkdir@plt>
  40948e:	mov    BYTE PTR [rbx],0x2f
  409491:	jmp    409460 <__gcov_flush@@Base+0x1b0>
  409493:	pop    rbx
  409494:	pop    r14
  409496:	pop    r15
  409498:	ret    
  409499:	nop    DWORD PTR [rax+0x0]
  4094a0:	lea    rax,[rip+0x5cc5]        # 40f16c <lprofDirMode@@Base>
  4094a7:	mov    eax,DWORD PTR [rax]
  4094a9:	ret    
  4094aa:	nop    WORD PTR [rax+rax*1+0x0]
  4094b0:	lea    rax,[rip+0x5cb5]        # 40f16c <lprofDirMode@@Base>
  4094b7:	mov    DWORD PTR [rax],edi
  4094b9:	ret    
  4094ba:	nop    WORD PTR [rax+rax*1+0x0]
  4094c0:	push   rbp
  4094c1:	push   rbx
  4094c2:	sub    rsp,0x188
  4094c9:	mov    ebp,esi
  4094cb:	mov    rbx,rdi
  4094ce:	mov    rdi,rsp
  4094d1:	call   403140 <uname@plt>
  4094d6:	test   eax,eax
  4094d8:	js     4094ec <__gcov_flush@@Base+0x23c>
  4094da:	lea    rsi,[rsp+0x41]
  4094df:	movsxd rdx,ebp
  4094e2:	mov    rdi,rbx
  4094e5:	call   403060 <strncpy@plt>
  4094ea:	xor    eax,eax
  4094ec:	add    rsp,0x188
  4094f3:	pop    rbx
  4094f4:	pop    rbp
  4094f5:	ret    
  4094f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409500:	push   rbp
  409501:	push   r14
  409503:	push   rbx
  409504:	sub    rsp,0x20
  409508:	mov    ebx,edi
  40950a:	mov    WORD PTR [rsp+0x2],0x0
  409511:	xorps  xmm0,xmm0
  409514:	movups XMMWORD PTR [rsp+0x8],xmm0
  409519:	call   4030b0 <getpid@plt>
  40951e:	mov    DWORD PTR [rsp+0x18],eax
  409522:	mov    WORD PTR [rsp],0x1
  409528:	mov    r14,rsp
  40952b:	nop    DWORD PTR [rax+rax*1+0x0]
  409530:	xor    ebp,ebp
  409532:	mov    esi,0x7
  409537:	xor    eax,eax
  409539:	mov    edi,ebx
  40953b:	mov    rdx,r14
  40953e:	call   4030a0 <fcntl@plt>
  409543:	cmp    eax,0xffffffff
  409546:	jne    40955e <__gcov_flush@@Base+0x2ae>
  409548:	call   403050 <__errno_location@plt>
  40954d:	mov    eax,DWORD PTR [rax]
  40954f:	cmp    eax,0x4
  409552:	je     409530 <__gcov_flush@@Base+0x280>
  409554:	cmp    eax,0x25
  409557:	jne    40955e <__gcov_flush@@Base+0x2ae>
  409559:	mov    ebp,0xffffffff
  40955e:	mov    eax,ebp
  409560:	add    rsp,0x20
  409564:	pop    rbx
  409565:	pop    r14
  409567:	pop    rbp
  409568:	ret    
  409569:	nop    DWORD PTR [rax+0x0]
  409570:	push   rbp
  409571:	push   r14
  409573:	push   rbx
  409574:	sub    rsp,0x20
  409578:	mov    ebx,edi
  40957a:	mov    WORD PTR [rsp+0x2],0x0
  409581:	xorps  xmm0,xmm0
  409584:	movups XMMWORD PTR [rsp+0x8],xmm0
  409589:	call   4030b0 <getpid@plt>
  40958e:	mov    DWORD PTR [rsp+0x18],eax
  409592:	mov    WORD PTR [rsp],0x2
  409598:	mov    r14,rsp
  40959b:	nop    DWORD PTR [rax+rax*1+0x0]
  4095a0:	xor    ebp,ebp
  4095a2:	mov    esi,0x7
  4095a7:	xor    eax,eax
  4095a9:	mov    edi,ebx
  4095ab:	mov    rdx,r14
  4095ae:	call   4030a0 <fcntl@plt>
  4095b3:	cmp    eax,0xffffffff
  4095b6:	jne    4095ce <__gcov_flush@@Base+0x31e>
  4095b8:	call   403050 <__errno_location@plt>
  4095bd:	mov    eax,DWORD PTR [rax]
  4095bf:	cmp    eax,0x4
  4095c2:	je     4095a0 <__gcov_flush@@Base+0x2f0>
  4095c4:	cmp    eax,0x25
  4095c7:	jne    4095ce <__gcov_flush@@Base+0x31e>
  4095c9:	mov    ebp,0xffffffff
  4095ce:	mov    eax,ebp
  4095d0:	add    rsp,0x20
  4095d4:	pop    rbx
  4095d5:	pop    r14
  4095d7:	pop    rbp
  4095d8:	ret    
  4095d9:	nop    DWORD PTR [rax+0x0]
  4095e0:	push   rbp
  4095e1:	push   r14
  4095e3:	push   rbx
  4095e4:	sub    rsp,0x20
  4095e8:	xor    ebx,ebx
  4095ea:	mov    esi,0x42
  4095ef:	mov    edx,0x1b6
  4095f4:	xor    eax,eax
  4095f6:	call   403230 <open@plt>
  4095fb:	test   eax,eax
  4095fd:	js     40965a <__gcov_flush@@Base+0x3aa>
  4095ff:	mov    ebp,eax
  409601:	mov    WORD PTR [rsp+0x2],0x0
  409608:	xorps  xmm0,xmm0
  40960b:	movups XMMWORD PTR [rsp+0x8],xmm0
  409610:	call   4030b0 <getpid@plt>
  409615:	mov    DWORD PTR [rsp+0x18],eax
  409619:	mov    WORD PTR [rsp],0x1
  40961f:	mov    r14,rsp
  409622:	mov    esi,0x7
  409627:	xor    eax,eax
  409629:	mov    edi,ebp
  40962b:	mov    rdx,r14
  40962e:	call   4030a0 <fcntl@plt>
  409633:	cmp    eax,0xffffffff
  409636:	jne    409649 <__gcov_flush@@Base+0x399>
  409638:	call   403050 <__errno_location@plt>
  40963d:	mov    eax,DWORD PTR [rax]
  40963f:	cmp    eax,0x4
  409642:	je     409622 <__gcov_flush@@Base+0x372>
  409644:	cmp    eax,0x25
  409647:	je     409666 <__gcov_flush@@Base+0x3b6>
  409649:	lea    rsi,[rip+0x182e]        # 40ae7e <_IO_stdin_used@@Base+0xe7e>
  409650:	mov    edi,ebp
  409652:	call   403210 <fdopen@plt>
  409657:	mov    rbx,rax
  40965a:	mov    rax,rbx
  40965d:	add    rsp,0x20
  409661:	pop    rbx
  409662:	pop    r14
  409664:	pop    rbp
  409665:	ret    
  409666:	mov    rax,QWORD PTR [rip+0x598b]        # 40eff8 <stderr@GLIBC_2.2.5>
  40966d:	mov    rdi,QWORD PTR [rax]
  409670:	lea    rsi,[rip+0x19a9]        # 40b020 <_IO_stdin_used@@Base+0x1020>
  409677:	lea    rdx,[rip+0x19eb]        # 40b069 <_IO_stdin_used@@Base+0x1069>
  40967e:	xor    eax,eax
  409680:	call   403180 <fprintf@plt>
  409685:	jmp    409649 <__gcov_flush@@Base+0x399>
  409687:	nop    WORD PTR [rax+rax*1+0x0]
  409690:	push   r15
  409692:	push   r14
  409694:	push   r12
  409696:	push   rbx
  409697:	push   rax
  409698:	mov    r14,rsi
  40969b:	mov    r15,rdi
  40969e:	lea    rdi,[rip+0x19f2]        # 40b097 <_IO_stdin_used@@Base+0x1097>
  4096a5:	call   403030 <getenv@plt>
  4096aa:	mov    rbx,rax
  4096ad:	lea    rdi,[rip+0x19ef]        # 40b0a3 <_IO_stdin_used@@Base+0x10a3>
  4096b4:	call   403030 <getenv@plt>
  4096b9:	mov    QWORD PTR [r14],0x0
  4096c0:	mov    DWORD PTR [r15],0x0
  4096c7:	test   rbx,rbx
  4096ca:	je     409701 <__gcov_flush@@Base+0x451>
  4096cc:	xor    r12d,r12d
  4096cf:	cmp    BYTE PTR [rbx],0x0
  4096d2:	je     409701 <__gcov_flush@@Base+0x451>
  4096d4:	test   rax,rax
  4096d7:	je     4096f1 <__gcov_flush@@Base+0x441>
  4096d9:	xor    r12d,r12d
  4096dc:	xor    esi,esi
  4096de:	mov    edx,0xa
  4096e3:	mov    rdi,rax
  4096e6:	call   4031a0 <strtol@plt>
  4096eb:	test   eax,eax
  4096ed:	cmovns r12d,eax
  4096f1:	mov    DWORD PTR [r15],r12d
  4096f4:	mov    rdi,rbx
  4096f7:	call   4030e0 <strlen@plt>
  4096fc:	mov    QWORD PTR [r14],rax
  4096ff:	jmp    409703 <__gcov_flush@@Base+0x453>
  409701:	xor    ebx,ebx
  409703:	mov    rax,rbx
  409706:	add    rsp,0x8
  40970a:	pop    rbx
  40970b:	pop    r12
  40970d:	pop    r14
  40970f:	pop    r15
  409711:	ret    
  409712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40971c:	nop    DWORD PTR [rax+0x0]
  409720:	push   r15
  409722:	push   r14
  409724:	push   r12
  409726:	push   rbx
  409727:	push   rax
  409728:	mov    r15,rcx
  40972b:	mov    r12,rdx
  40972e:	mov    rbx,rsi
  409731:	mov    r14,rdi
  409734:	test   r8d,r8d
  409737:	jle    40975f <__gcov_flush@@Base+0x4af>
  409739:	lea    rax,[rbx+0x1]
  40973d:	xor    ecx,ecx
  40973f:	nop
  409740:	movzx  edx,BYTE PTR [rax]
  409743:	cmp    dl,0x2f
  409746:	je     409750 <__gcov_flush@@Base+0x4a0>
  409748:	test   dl,dl
  40974a:	jne    409756 <__gcov_flush@@Base+0x4a6>
  40974c:	jmp    40975f <__gcov_flush@@Base+0x4af>
  40974e:	xchg   ax,ax
  409750:	add    ecx,0x1
  409753:	mov    rbx,rax
  409756:	add    rax,0x1
  40975a:	cmp    ecx,r8d
  40975d:	jl     409740 <__gcov_flush@@Base+0x490>
  40975f:	mov    rdi,r14
  409762:	mov    rsi,r12
  409765:	mov    rdx,r15
  409768:	call   4031b0 <memcpy@plt>
  40976d:	cmp    BYTE PTR [r12+r15*1-0x1],0x2f
  409773:	je     40977e <__gcov_flush@@Base+0x4ce>
  409775:	mov    BYTE PTR [r14+r15*1],0x2f
  40977a:	add    r15,0x1
  40977e:	add    r14,r15
  409781:	mov    rdi,rbx
  409784:	call   4030e0 <strlen@plt>
  409789:	lea    rdx,[rax+0x1]
  40978d:	mov    rdi,r14
  409790:	mov    rsi,rbx
  409793:	add    rsp,0x8
  409797:	pop    rbx
  409798:	pop    r12
  40979a:	pop    r14
  40979c:	pop    r15
  40979e:	jmp    4031b0 <memcpy@plt>
  4097a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097ad:	nop    DWORD PTR [rax]
  4097b0:	mov    esi,0x2f
  4097b5:	jmp    403110 <strchr@plt>
  4097ba:	nop    WORD PTR [rax+rax*1+0x0]
  4097c0:	mov    esi,0x2f
  4097c5:	jmp    403130 <strrchr@plt>
  4097ca:	nop    WORD PTR [rax+rax*1+0x0]
  4097d0:	push   rax
  4097d1:	mov    DWORD PTR [rsp+0x4],0x0
  4097d9:	lea    rsi,[rsp+0x4]
  4097de:	mov    edi,0x2
  4097e3:	xor    eax,eax
  4097e5:	call   4031c0 <prctl@plt>
  4097ea:	mov    ecx,DWORD PTR [rsp+0x4]
  4097ee:	test   eax,eax
  4097f0:	jne    409809 <__gcov_flush@@Base+0x559>
  4097f2:	cmp    ecx,0x9
  4097f5:	jne    409809 <__gcov_flush@@Base+0x559>
  4097f7:	mov    edi,0x1
  4097fc:	xor    esi,esi
  4097fe:	xor    eax,eax
  409800:	call   4031c0 <prctl@plt>
  409805:	mov    ecx,DWORD PTR [rsp+0x4]
  409809:	xor    eax,eax
  40980b:	cmp    ecx,0x9
  40980e:	sete   al
  409811:	pop    rcx
  409812:	ret    
  409813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40981d:	nop    DWORD PTR [rax]
  409820:	mov    edi,0x1
  409825:	mov    esi,0x9
  40982a:	xor    eax,eax
  40982c:	jmp    4031c0 <prctl@plt>
  409831:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40983b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409840 <__libc_csu_init@@Base>:
  409840:	endbr64 
  409844:	push   r15
  409846:	lea    r15,[rip+0x4793]        # 40dfe0 <_IO_stdin_used@@Base+0x3fe0>
  40984d:	push   r14
  40984f:	mov    r14,rdx
  409852:	push   r13
  409854:	mov    r13,rsi
  409857:	push   r12
  409859:	mov    r12d,edi
  40985c:	push   rbp
  40985d:	lea    rbp,[rip+0x47a4]        # 40e008 <_IO_stdin_used@@Base+0x4008>
  409864:	push   rbx
  409865:	sub    rbp,r15
  409868:	sub    rsp,0x8
  40986c:	call   403000 <getenv@plt-0x30>
  409871:	sar    rbp,0x3
  409875:	je     409896 <__libc_csu_init@@Base+0x56>
  409877:	xor    ebx,ebx
  409879:	nop    DWORD PTR [rax+0x0]
  409880:	mov    rdx,r14
  409883:	mov    rsi,r13
  409886:	mov    edi,r12d
  409889:	call   QWORD PTR [r15+rbx*8]
  40988d:	add    rbx,0x1
  409891:	cmp    rbp,rbx
  409894:	jne    409880 <__libc_csu_init@@Base+0x40>
  409896:	add    rsp,0x8
  40989a:	pop    rbx
  40989b:	pop    rbp
  40989c:	pop    r12
  40989e:	pop    r13
  4098a0:	pop    r14
  4098a2:	pop    r15
  4098a4:	ret    
  4098a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004098b0 <__libc_csu_fini@@Base>:
  4098b0:	endbr64 
  4098b4:	ret    
  4098b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098bf:	nop
  4098c0:	endbr64 
  4098c4:	mov    rdx,QWORD PTR [rip+0x5885]        # 40f150 <__data_start@@Base+0x8>
  4098cb:	xor    esi,esi
  4098cd:	jmp    403240 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004098d4 <.fini>:
  4098d4:	endbr64 
  4098d8:	sub    rsp,0x8
  4098dc:	add    rsp,0x8
  4098e0:	ret    
