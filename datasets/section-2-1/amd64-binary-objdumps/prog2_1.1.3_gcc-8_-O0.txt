
../repos/prog2/1.1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x6a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <fclose@plt-0x60>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <fclose@plt-0x60>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <fclose@plt-0x60>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <fclose@plt-0x60>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <fclose@plt-0x60>
  40107f:	nop

Disassembly of section .plt.sec:

0000000000401080 <fclose@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f8d]        # 404018 <fclose@GLIBC_2.2.5>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401090 <__stack_chk_fail@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f85]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <printf@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404028 <printf@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <fopen@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404030 <fopen@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <getc@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404038 <getc@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010d0 <_start@@Base>:
  4010d0:	endbr64 
  4010d4:	xor    ebp,ebp
  4010d6:	mov    r9,rdx
  4010d9:	pop    rsi
  4010da:	mov    rdx,rsp
  4010dd:	and    rsp,0xfffffffffffffff0
  4010e1:	push   rax
  4010e2:	push   rsp
  4010e3:	mov    r8,0x401430
  4010ea:	mov    rcx,0x4013c0
  4010f1:	mov    rdi,0x40120c
  4010f8:	call   QWORD PTR [rip+0x2ef2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010fe:	hlt    
  4010ff:	nop
  401100:	endbr64 
  401104:	ret    
  401105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40110f:	nop
  401110:	mov    eax,0x404050
  401115:	cmp    rax,0x404050
  40111b:	je     401130 <_start@@Base+0x60>
  40111d:	mov    eax,0x0
  401122:	test   rax,rax
  401125:	je     401130 <_start@@Base+0x60>
  401127:	mov    edi,0x404050
  40112c:	jmp    rax
  40112e:	xchg   ax,ax
  401130:	ret    
  401131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	mov    esi,0x404050
  401145:	sub    rsi,0x404050
  40114c:	sar    rsi,0x3
  401150:	mov    rax,rsi
  401153:	shr    rax,0x3f
  401157:	add    rsi,rax
  40115a:	sar    rsi,1
  40115d:	je     401170 <_start@@Base+0xa0>
  40115f:	mov    eax,0x0
  401164:	test   rax,rax
  401167:	je     401170 <_start@@Base+0xa0>
  401169:	mov    edi,0x404050
  40116e:	jmp    rax
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	cmp    BYTE PTR [rip+0x2ec5],0x0        # 404050 <__bss_start@@Base>
  40118b:	jne    4011a0 <_start@@Base+0xd0>
  40118d:	push   rbp
  40118e:	mov    rbp,rsp
  401191:	call   401110 <_start@@Base+0x40>
  401196:	mov    BYTE PTR [rip+0x2eb3],0x1        # 404050 <__bss_start@@Base>
  40119d:	pop    rbp
  40119e:	ret    
  40119f:	nop
  4011a0:	ret    
  4011a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011ac:	nop    DWORD PTR [rax+0x0]
  4011b0:	endbr64 
  4011b4:	jmp    401140 <_start@@Base+0x70>

00000000004011b6 <in_array@@Base>:
  4011b6:	endbr64 
  4011ba:	push   rbp
  4011bb:	mov    rbp,rsp
  4011be:	mov    DWORD PTR [rbp-0x14],edi
  4011c1:	mov    QWORD PTR [rbp-0x20],rsi
  4011c5:	mov    DWORD PTR [rbp-0x18],edx
  4011c8:	mov    DWORD PTR [rbp-0x4],0x0
  4011cf:	mov    DWORD PTR [rbp-0x4],0x0
  4011d6:	jmp    4011fd <in_array@@Base+0x47>
  4011d8:	mov    eax,DWORD PTR [rbp-0x4]
  4011db:	cdqe   
  4011dd:	lea    rdx,[rax*4+0x0]
  4011e5:	mov    rax,QWORD PTR [rbp-0x20]
  4011e9:	add    rax,rdx
  4011ec:	mov    eax,DWORD PTR [rax]
  4011ee:	cmp    DWORD PTR [rbp-0x14],eax
  4011f1:	jne    4011fa <in_array@@Base+0x44>
  4011f3:	mov    eax,0x1
  4011f8:	jmp    40120a <in_array@@Base+0x54>
  4011fa:	inc    DWORD PTR [rbp-0x4]
  4011fd:	mov    eax,DWORD PTR [rbp-0x4]
  401200:	cmp    eax,DWORD PTR [rbp-0x18]
  401203:	jle    4011d8 <in_array@@Base+0x22>
  401205:	mov    eax,0x0
  40120a:	pop    rbp
  40120b:	ret    

000000000040120c <main@@Base>:
  40120c:	endbr64 
  401210:	push   rbp
  401211:	mov    rbp,rsp
  401214:	sub    rsp,0x50
  401218:	mov    rax,QWORD PTR fs:0x28
  401221:	mov    QWORD PTR [rbp-0x8],rax
  401225:	xor    eax,eax
  401227:	mov    DWORD PTR [rbp-0x30],0x83
  40122e:	mov    DWORD PTR [rbp-0x2c],0xa3
  401235:	mov    DWORD PTR [rbp-0x28],0x95
  40123c:	mov    DWORD PTR [rbp-0x24],0xb5
  401243:	mov    DWORD PTR [rbp-0x20],0x87
  40124a:	mov    DWORD PTR [rbp-0x1c],0xa7
  401251:	lea    rsi,[rip+0xdac]        # 402004 <_IO_stdin_used@@Base+0x4>
  401258:	lea    rdi,[rip+0xda7]        # 402006 <_IO_stdin_used@@Base+0x6>
  40125f:	call   4010b0 <fopen@plt>
  401264:	mov    QWORD PTR [rbp-0x38],rax
  401268:	mov    DWORD PTR [rbp-0x44],0x0
  40126f:	mov    QWORD PTR [rbp-0x18],0x0
  401277:	mov    DWORD PTR [rbp-0x10],0x0
  40127e:	mov    BYTE PTR [rbp-0xb],0x41
  401282:	mov    BYTE PTR [rbp-0xa],0x4f
  401286:	mov    BYTE PTR [rbp-0x9],0x43
  40128a:	jmp    401320 <main@@Base+0x114>
  40128f:	mov    rax,QWORD PTR [rbp-0x38]
  401293:	mov    rdi,rax
  401296:	call   4010c0 <getc@plt>
  40129b:	mov    DWORD PTR [rbp-0x44],eax
  40129e:	cmp    DWORD PTR [rbp-0x44],0xc3
  4012a5:	jne    401320 <main@@Base+0x114>
  4012a7:	mov    rax,QWORD PTR [rbp-0x38]
  4012ab:	mov    rdi,rax
  4012ae:	call   4010c0 <getc@plt>
  4012b3:	mov    DWORD PTR [rbp-0x44],eax
  4012b6:	lea    rcx,[rbp-0x30]
  4012ba:	mov    eax,DWORD PTR [rbp-0x44]
  4012bd:	mov    edx,0x2
  4012c2:	mov    rsi,rcx
  4012c5:	mov    edi,eax
  4012c7:	call   4011b6 <in_array@@Base>
  4012cc:	test   eax,eax
  4012ce:	je     4012da <main@@Base+0xce>
  4012d0:	mov    eax,DWORD PTR [rbp-0x18]
  4012d3:	inc    eax
  4012d5:	mov    DWORD PTR [rbp-0x18],eax
  4012d8:	jmp    401320 <main@@Base+0x114>
  4012da:	lea    rcx,[rbp-0x28]
  4012de:	mov    eax,DWORD PTR [rbp-0x44]
  4012e1:	mov    edx,0x2
  4012e6:	mov    rsi,rcx
  4012e9:	mov    edi,eax
  4012eb:	call   4011b6 <in_array@@Base>
  4012f0:	test   eax,eax
  4012f2:	je     4012fe <main@@Base+0xf2>
  4012f4:	mov    eax,DWORD PTR [rbp-0x14]
  4012f7:	inc    eax
  4012f9:	mov    DWORD PTR [rbp-0x14],eax
  4012fc:	jmp    401320 <main@@Base+0x114>
  4012fe:	lea    rcx,[rbp-0x20]
  401302:	mov    eax,DWORD PTR [rbp-0x44]
  401305:	mov    edx,0x2
  40130a:	mov    rsi,rcx
  40130d:	mov    edi,eax
  40130f:	call   4011b6 <in_array@@Base>
  401314:	test   eax,eax
  401316:	je     401320 <main@@Base+0x114>
  401318:	mov    eax,DWORD PTR [rbp-0x10]
  40131b:	inc    eax
  40131d:	mov    DWORD PTR [rbp-0x10],eax
  401320:	cmp    DWORD PTR [rbp-0x44],0xffffffff
  401324:	jne    40128f <main@@Base+0x83>
  40132a:	mov    eax,DWORD PTR [rbp-0x40]
  40132d:	mov    DWORD PTR [rbp-0x3c],eax
  401330:	mov    rax,QWORD PTR [rbp-0x38]
  401334:	mov    rdi,rax
  401337:	call   401080 <fclose@plt>
  40133c:	mov    DWORD PTR [rbp-0x40],0x0
  401343:	jmp    401371 <main@@Base+0x165>
  401345:	mov    eax,DWORD PTR [rbp-0x40]
  401348:	cdqe   
  40134a:	mov    edx,DWORD PTR [rbp+rax*4-0x18]
  40134e:	mov    eax,DWORD PTR [rbp-0x40]
  401351:	cdqe   
  401353:	movzx  eax,BYTE PTR [rbp+rax*1-0xb]
  401358:	movsx  eax,al
  40135b:	mov    esi,eax
  40135d:	lea    rdi,[rip+0xcbe]        # 402022 <_IO_stdin_used@@Base+0x22>
  401364:	mov    eax,0x0
  401369:	call   4010a0 <printf@plt>
  40136e:	inc    DWORD PTR [rbp-0x40]
  401371:	cmp    DWORD PTR [rbp-0x40],0x1
  401375:	jle    401345 <main@@Base+0x139>
  401377:	mov    edx,DWORD PTR [rbp-0x10]
  40137a:	mov    eax,DWORD PTR [rbp-0x40]
  40137d:	cdqe   
  40137f:	movzx  eax,BYTE PTR [rbp+rax*1-0xb]
  401384:	movsx  eax,al
  401387:	mov    esi,eax
  401389:	lea    rdi,[rip+0xca9]        # 402039 <_IO_stdin_used@@Base+0x39>
  401390:	mov    eax,0x0
  401395:	call   4010a0 <printf@plt>
  40139a:	mov    eax,0x0
  40139f:	mov    rcx,QWORD PTR [rbp-0x8]
  4013a3:	xor    rcx,QWORD PTR fs:0x28
  4013ac:	je     4013b3 <main@@Base+0x1a7>
  4013ae:	call   401090 <__stack_chk_fail@plt>
  4013b3:	leave  
  4013b4:	ret    
  4013b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013bf:	nop

00000000004013c0 <__libc_csu_init@@Base>:
  4013c0:	endbr64 
  4013c4:	push   r15
  4013c6:	lea    r15,[rip+0x2a43]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013cd:	push   r14
  4013cf:	mov    r14,rdx
  4013d2:	push   r13
  4013d4:	mov    r13,rsi
  4013d7:	push   r12
  4013d9:	mov    r12d,edi
  4013dc:	push   rbp
  4013dd:	lea    rbp,[rip+0x2a34]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4013e4:	push   rbx
  4013e5:	sub    rbp,r15
  4013e8:	sub    rsp,0x8
  4013ec:	call   401000 <fclose@plt-0x80>
  4013f1:	sar    rbp,0x3
  4013f5:	je     401416 <__libc_csu_init@@Base+0x56>
  4013f7:	xor    ebx,ebx
  4013f9:	nop    DWORD PTR [rax+0x0]
  401400:	mov    rdx,r14
  401403:	mov    rsi,r13
  401406:	mov    edi,r12d
  401409:	call   QWORD PTR [r15+rbx*8]
  40140d:	add    rbx,0x1
  401411:	cmp    rbp,rbx
  401414:	jne    401400 <__libc_csu_init@@Base+0x40>
  401416:	add    rsp,0x8
  40141a:	pop    rbx
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	pop    r14
  401422:	pop    r15
  401424:	ret    
  401425:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401430 <__libc_csu_fini@@Base>:
  401430:	endbr64 
  401434:	ret    

Disassembly of section .fini:

0000000000401438 <.fini>:
  401438:	endbr64 
  40143c:	sub    rsp,0x8
  401440:	add    rsp,0x8
  401444:	ret    
