
../repos/LuaJIT-2.0.5/src/host/buildvm:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x11fd9]        # 412fe8 <__sprintf_chk@plt+0x11c28>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1ea>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x11fe2]        # 413008 <__sprintf_chk@plt+0x11c48>
  401026:	bnd jmp QWORD PTR [rip+0x11fe3]        # 413010 <__sprintf_chk@plt+0x11c50>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1e0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1e0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1e0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1e0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1e0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1e0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1e0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1e0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1e0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1e0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1e0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1e0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1e0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1e0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1e0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1e0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1e0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1e0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1e0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1e0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1e0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1e0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1e0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1e0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1e0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1e0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1e0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1e0>
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	push   0x1c
  4011f9:	bnd jmp 401020 <free@plt-0x1e0>
  4011ff:	nop

Disassembly of section .plt.sec:

0000000000401200 <free@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x11e0d]        # 413018 <__sprintf_chk@plt+0x11c58>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <__errno_location@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x11e05]        # 413020 <__sprintf_chk@plt+0x11c60>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <strncmp@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x11dfd]        # 413028 <__sprintf_chk@plt+0x11c68>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <ferror@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x11df5]        # 413030 <__sprintf_chk@plt+0x11c70>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <strtod@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x11ded]        # 413038 <__sprintf_chk@plt+0x11c78>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <fclose@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x11de5]        # 413040 <__sprintf_chk@plt+0x11c80>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <strlen@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x11ddd]        # 413048 <__sprintf_chk@plt+0x11c88>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <__stack_chk_fail@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x11dd5]        # 413050 <__sprintf_chk@plt+0x11c90>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <strchr@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x11dcd]        # 413058 <__sprintf_chk@plt+0x11c98>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <memset@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x11dc5]        # 413060 <__sprintf_chk@plt+0x11ca0>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fputc@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x11dbd]        # 413068 <__sprintf_chk@plt+0x11ca8>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <strcspn@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x11db5]        # 413070 <__sprintf_chk@plt+0x11cb0>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <fgets@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x11dad]        # 413078 <__sprintf_chk@plt+0x11cb8>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <calloc@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x11da5]        # 413080 <__sprintf_chk@plt+0x11cc0>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <strcmp@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x11d9d]        # 413088 <__sprintf_chk@plt+0x11cc8>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <putc@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x11d95]        # 413090 <__sprintf_chk@plt+0x11cd0>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__memcpy_chk@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x11d8d]        # 413098 <__sprintf_chk@plt+0x11cd8>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <strtol@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x11d85]        # 4130a0 <__sprintf_chk@plt+0x11ce0>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <memcpy@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x11d7d]        # 4130a8 <__sprintf_chk@plt+0x11ce8>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <malloc@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x11d75]        # 4130b0 <__sprintf_chk@plt+0x11cf0>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <fflush@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x11d6d]        # 4130b8 <__sprintf_chk@plt+0x11cf8>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <realloc@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x11d65]        # 4130c0 <__sprintf_chk@plt+0x11d00>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <fopen@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x11d5d]        # 4130c8 <__sprintf_chk@plt+0x11d08>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <exit@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x11d55]        # 4130d0 <__sprintf_chk@plt+0x11d10>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <fwrite@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x11d4d]        # 4130d8 <__sprintf_chk@plt+0x11d18>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <__fprintf_chk@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x11d45]        # 4130e0 <__sprintf_chk@plt+0x11d20>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <strerror@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x11d3d]        # 4130e8 <__sprintf_chk@plt+0x11d28>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013b0 <strstr@plt>:
  4013b0:	endbr64 
  4013b4:	bnd jmp QWORD PTR [rip+0x11d35]        # 4130f0 <__sprintf_chk@plt+0x11d30>
  4013bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013c0 <__sprintf_chk@plt>:
  4013c0:	endbr64 
  4013c4:	bnd jmp QWORD PTR [rip+0x11d2d]        # 4130f8 <__sprintf_chk@plt+0x11d38>
  4013cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013d0 <.text>:
  4013d0:	endbr64 
  4013d4:	push   r15
  4013d6:	push   r14
  4013d8:	push   r13
  4013da:	push   r12
  4013dc:	push   rbp
  4013dd:	mov    rbp,rsi
  4013e0:	push   rbx
  4013e1:	sub    rsp,0xa68
  4013e8:	mov    rax,QWORD PTR fs:0x28
  4013f1:	mov    QWORD PTR [rsp+0xa58],rax
  4013f9:	xor    eax,eax
  4013fb:	lea    rax,[rip+0xdd94]        # 40f196 <__sprintf_chk@plt+0xddd6>
  401402:	mov    QWORD PTR [rsp+0x28],rax
  401407:	mov    rax,QWORD PTR [rsi+0x8]
  40140b:	mov    DWORD PTR [rsp+0x18],0xffffffff
  401413:	test   rax,rax
  401416:	je     404306 <__sprintf_chk@plt+0x2f46>
  40141c:	cmp    BYTE PTR [rax],0x2d
  40141f:	jne    404306 <__sprintf_chk@plt+0x2f46>
  401425:	movzx  edx,BYTE PTR [rax+0x1]
  401429:	mov    ebx,0x1
  40142e:	lea    r13,[rip+0x7bcf]        # 409004 <__sprintf_chk@plt+0x7c44>
  401435:	lea    r12,[rip+0x105c4]        # 411a00 <__sprintf_chk@plt+0x10640>
  40143c:	cmp    dl,0x2d
  40143f:	je     40381e <__sprintf_chk@plt+0x245e>
  401445:	jle    4014b0 <__sprintf_chk@plt+0xf0>
  401447:	cmp    dl,0x6d
  40144a:	jne    4037c8 <__sprintf_chk@plt+0x2408>
  401450:	cmp    BYTE PTR [rax+0x2],0x0
  401454:	lea    edx,[rbx+0x1]
  401457:	jne    404301 <__sprintf_chk@plt+0x2f41>
  40145d:	movsxd rax,edx
  401460:	mov    r15,QWORD PTR [rbp+rax*8+0x0]
  401465:	test   r15,r15
  401468:	je     404301 <__sprintf_chk@plt+0x2f41>
  40146e:	xor    r14d,r14d
  401471:	mov    rsi,r13
  401474:	jmp    401490 <__sprintf_chk@plt+0xd0>
  401476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401480:	inc    r14
  401483:	mov    rsi,QWORD PTR [r12+r14*8]
  401487:	test   rsi,rsi
  40148a:	je     404301 <__sprintf_chk@plt+0x2f41>
  401490:	mov    rdi,r15
  401493:	call   4012e0 <strcmp@plt>
  401498:	test   eax,eax
  40149a:	jne    401480 <__sprintf_chk@plt+0xc0>
  40149c:	mov    DWORD PTR [rsp+0x18],r14d
  4014a1:	jmp    4037f4 <__sprintf_chk@plt+0x2434>
  4014a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014b0:	test   dl,dl
  4014b2:	jne    404301 <__sprintf_chk@plt+0x2f41>
  4014b8:	movsxd rdx,ebx
  4014bb:	lea    rax,[rbp+rdx*8+0x0]
  4014c0:	cmp    DWORD PTR [rsp+0x18],0xffffffff
  4014c5:	mov    QWORD PTR [rsp+0x30],rax
  4014ca:	je     404301 <__sprintf_chk@plt+0x2f41>
  4014d0:	mov    esi,0x1
  4014d5:	mov    edi,0x518
  4014da:	mov    DWORD PTR [rsp+0x4c],0xa3
  4014e2:	lea    r15,[rip+0x11237]        # 412720 <__sprintf_chk@plt+0x11360>
  4014e9:	call   4012d0 <calloc@plt>
  4014ee:	mov    edi,0x128
  4014f3:	mov    QWORD PTR [rsp+0x60],rax
  4014f8:	mov    QWORD PTR [rsp+0x88],r15
  401500:	call   401330 <malloc@plt>
  401505:	mov    QWORD PTR [rsp+0x54],0x0
  40150e:	mov    QWORD PTR [rsp+0x70],rax
  401513:	lea    rax,[rip+0x11c26]        # 413140 <__sprintf_chk@plt+0x11d80>
  40151a:	lea    rdx,[rax+0x94]
  401521:	nop    DWORD PTR [rax+0x0]
  401528:	mov    DWORD PTR [rax],0xffffffff
  40152e:	add    rax,0x4
  401532:	cmp    rdx,rax
  401535:	jne    401528 <__sprintf_chk@plt+0x168>
  401537:	lea    rbx,[rsp+0x10]
  40153c:	lea    rax,[rip+0x7b3d]        # 409080 <__sprintf_chk@plt+0x7cc0>
  401543:	mov    QWORD PTR [rsp+0x90],rax
  40154b:	mov    esi,0x2
  401550:	lea    rax,[rip+0x7b36]        # 40908d <__sprintf_chk@plt+0x7ccd>
  401557:	mov    rdi,rbx
  40155a:	mov    QWORD PTR [rsp+0x98],rax
  401562:	call   4048e0 <__sprintf_chk@plt+0x3520>
  401567:	mov    edx,DWORD PTR [rsp+0x4c]
  40156b:	mov    rsi,QWORD PTR [rsp+0x60]
  401570:	mov    rdi,rbx
  401573:	call   404a60 <__sprintf_chk@plt+0x36a0>
  401578:	lea    rsi,[rip+0xa121]        # 40b6a0 <__sprintf_chk@plt+0xa2e0>
  40157f:	mov    rdi,rbx
  401582:	call   404b70 <__sprintf_chk@plt+0x37b0>
  401587:	mov    esi,0x5d
  40158c:	mov    rdi,rbx
  40158f:	call   404ae0 <__sprintf_chk@plt+0x3720>
  401594:	xor    esi,esi
  401596:	xor    eax,eax
  401598:	mov    rdi,rbx
  40159b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4015a0:	sub    rsp,0x8
  4015a4:	push   0xfffffffffffffffe
  4015a6:	xor    eax,eax
  4015a8:	mov    r9d,0x1
  4015ae:	push   0xfffffffffffff530
  4015b3:	mov    r8d,0x3
  4015b9:	mov    ecx,0xfffffffd
  4015be:	push   0x3
  4015c0:	mov    edx,0x4
  4015c5:	mov    esi,0x2
  4015ca:	mov    rdi,rbx
  4015cd:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4015d2:	add    rsp,0x18
  4015d6:	push   0xffffffffffffffff
  4015d8:	xor    eax,eax
  4015da:	mov    r9d,0x20
  4015e0:	mov    r8d,0x30
  4015e6:	mov    ecx,0x18
  4015eb:	mov    edx,0x10
  4015f0:	mov    esi,0x5c
  4015f5:	mov    rdi,rbx
  4015f8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4015fd:	push   0xfffffffffffffffe
  4015ff:	xor    eax,eax
  401601:	mov    r9d,0x8
  401607:	push   0xe8
  40160c:	mov    r8d,0x1
  401612:	mov    ecx,0x18
  401617:	mov    edx,0x18
  40161c:	mov    esi,0xc0
  401621:	mov    rdi,rbx
  401624:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401629:	add    rsp,0x18
  40162d:	push   0x14
  40162f:	xor    eax,eax
  401631:	mov    r9d,0x8
  401637:	push   0xffffffffffffffff
  401639:	mov    r8d,0x10
  40163f:	mov    ecx,0x2
  401644:	push   0xfffffffffffff530
  401649:	mov    rdx,0xfffffffffffffffc
  401650:	mov    esi,0x113
  401655:	push   0xfffffffffffffffe
  401657:	mov    rdi,rbx
  40165a:	mov    r12d,0xffffffec
  401660:	push   0xbb8
  401665:	mov    r14d,0xcccccccd
  40166b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401670:	add    rsp,0x30
  401674:	push   0x7
  401676:	xor    eax,eax
  401678:	mov    r9d,0x10
  40167e:	push   0x30
  401680:	mov    r8d,0x18
  401686:	mov    ecx,0x10
  40168b:	push   0xbb8
  401690:	mov    edx,0xffffffc3
  401695:	mov    esi,0x173
  40169a:	push   0x8
  40169c:	mov    rdi,rbx
  40169f:	push   0x1
  4016a1:	push   0x5
  4016a3:	push   0x10
  4016a5:	push   0x18
  4016a7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4016ac:	add    rsp,0x40
  4016b0:	push   0x30
  4016b2:	xor    eax,eax
  4016b4:	mov    r9d,0x10
  4016ba:	push   0x30
  4016bc:	mov    r8d,0x7
  4016c2:	mov    ecx,0xffffffff
  4016c7:	push   0x1
  4016c9:	mov    edx,0xfffff530
  4016ce:	mov    esi,0x20c
  4016d3:	push   0x5
  4016d5:	mov    rdi,rbx
  4016d8:	push   0x3
  4016da:	push   0x18
  4016dc:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4016e1:	add    rsp,0x30
  4016e5:	push   0x30
  4016e7:	xor    eax,eax
  4016e9:	mov    r9d,0xffffffff
  4016ef:	push   0x30
  4016f1:	mov    r8d,0xfffff530
  4016f7:	mov    ecx,0xbb8
  4016fc:	push   0x18
  4016fe:	mov    edx,0x8
  401703:	mov    esi,0x282
  401708:	push   0x24
  40170a:	mov    rdi,rbx
  40170d:	push   0x10
  40170f:	push   0xfffffffffffffff7
  401711:	push   0x18
  401713:	push   0x10
  401715:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40171a:	add    rsp,0x40
  40171e:	push   0x10
  401720:	xor    r8d,r8d
  401723:	xor    eax,eax
  401725:	push   0xffffffffffffffd0
  401727:	mov    r9d,0x10
  40172d:	mov    ecx,0xffffffff
  401732:	mov    edx,0x5
  401737:	mov    esi,0x314
  40173c:	mov    rdi,rbx
  40173f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401744:	push   0x10
  401746:	mov    r9d,0xfffffff4
  40174c:	mov    r8d,0xfffff4e8
  401752:	push   0x10
  401754:	mov    ecx,0x34
  401759:	mov    edx,0xfffffffb
  40175e:	mov    esi,0x391
  401763:	mov    rdi,rbx
  401766:	xor    eax,eax
  401768:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40176d:	add    rsp,0x18
  401771:	push   0xfffffffffffffff4
  401773:	xor    eax,eax
  401775:	mov    r9d,0xfffffffb
  40177b:	push   0xfffffffffffff4e8
  401780:	mov    r8d,0x3
  401786:	mov    ecx,0x2
  40178b:	push   0x35
  40178d:	mov    edx,0x18
  401792:	mov    esi,0x41d
  401797:	mov    rdi,rbx
  40179a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40179f:	add    rsp,0x18
  4017a3:	push   0x10
  4017a5:	xor    eax,eax
  4017a7:	mov    r9d,0x2
  4017ad:	push   0x10
  4017af:	mov    r8d,0x18
  4017b5:	mov    ecx,0x10
  4017ba:	push   0x4
  4017bc:	mov    edx,0x10
  4017c1:	mov    esi,0x4a3
  4017c6:	mov    rdi,rbx
  4017c9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4017ce:	add    rsp,0x18
  4017d2:	push   0x10
  4017d4:	mov    r8d,0xfffffffe
  4017da:	mov    ecx,r8d
  4017dd:	xor    eax,eax
  4017df:	mov    r9d,0x10
  4017e5:	mov    edx,0xfffe0000
  4017ea:	mov    esi,0x54e
  4017ef:	mov    rdi,rbx
  4017f2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4017f7:	mov    r9d,0x3
  4017fd:	mov    r8d,0x2
  401803:	xor    eax,eax
  401805:	mov    ecx,0x10
  40180a:	mov    edx,0x10
  40180f:	mov    esi,0x5d3
  401814:	mov    rdi,rbx
  401817:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40181c:	mov    ecx,0x10
  401821:	mov    edx,0x10
  401826:	xor    eax,eax
  401828:	mov    esi,0x641
  40182d:	mov    rdi,rbx
  401830:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401835:	xor    eax,eax
  401837:	mov    esi,0x673
  40183c:	mov    rdi,rbx
  40183f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401844:	push   0xfffffffffffffffe
  401846:	xor    eax,eax
  401848:	mov    r9d,0x10
  40184e:	push   0x2
  401850:	mov    r8d,0x10
  401856:	mov    ecx,0x10
  40185b:	push   0x4d8
  401860:	mov    edx,0x10
  401865:	mov    esi,0x678
  40186a:	push   0x10
  40186c:	mov    rdi,rbx
  40186f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401874:	add    rsp,0x28
  401878:	push   0x3
  40187a:	xor    eax,eax
  40187c:	mov    r9d,0xfffffffb
  401882:	mov    r8d,0x20
  401888:	mov    ecx,0xd
  40188d:	mov    edx,0x2
  401892:	mov    esi,0x732
  401897:	mov    rdi,rbx
  40189a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40189f:	mov    QWORD PTR [rsp],0x18
  4018a7:	push   0x8
  4018a9:	xor    eax,eax
  4018ab:	mov    r9d,0xffffffff
  4018b1:	push   0x1c
  4018b3:	mov    r8d,0x10
  4018b9:	mov    ecx,0xfffffff4
  4018be:	push   0xfffffffffffffff4
  4018c0:	mov    edx,0x2
  4018c5:	mov    esi,0x79a
  4018ca:	push   0xfffffffffffff58c
  4018cf:	mov    rdi,rbx
  4018d2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4018d7:	add    rsp,0x30
  4018db:	push   0xffffffffffffffff
  4018dd:	xor    eax,eax
  4018df:	mov    r9d,0x8
  4018e5:	push   0x10
  4018e7:	mov    r8d,0xfffffffb
  4018ed:	mov    ecx,0xc
  4018f2:	mov    edx,0x14
  4018f7:	mov    esi,0x7e3
  4018fc:	mov    rdi,rbx
  4018ff:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401904:	mov    DWORD PTR [rsp],0x3
  40190b:	push   0xfffffffffffff5a0
  401910:	xor    eax,eax
  401912:	mov    r9d,0xfffffffc
  401918:	push   0xfffffffffffffff2
  40191a:	mov    r8d,0xfffeffff
  401920:	mov    ecx,0xfffffff2
  401925:	mov    edx,0xfffffff3
  40192a:	mov    esi,0x824
  40192f:	mov    rdi,rbx
  401932:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401937:	add    rsp,0x20
  40193b:	push   0xfffffffffffff484
  401940:	mov    r8d,0xfffffff4
  401946:	mov    edx,r8d
  401949:	push   0xfb
  40194e:	mov    r9d,0x10
  401954:	mov    ecx,0x10
  401959:	push   0x4
  40195b:	mov    esi,0x85c
  401960:	mov    rdi,rbx
  401963:	push   0x4
  401965:	xor    eax,eax
  401967:	push   0x4
  401969:	push   0xfffffffffffffff4
  40196b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401970:	add    rsp,0x30
  401974:	push   0xfffffffffffeffff
  401979:	xor    eax,eax
  40197b:	mov    r9d,0xfffffff4
  401981:	push   0x2
  401983:	mov    r8d,0x3
  401989:	mov    ecx,0xc
  40198e:	mov    edx,0xfffff484
  401993:	mov    esi,0x8a1
  401998:	mov    rdi,rbx
  40199b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4019a0:	mov    r8d,0xfffffffb
  4019a6:	mov    ecx,r8d
  4019a9:	xor    eax,eax
  4019ab:	mov    r9d,0xfffeffff
  4019b1:	mov    edx,0x2
  4019b6:	mov    esi,0x8f7
  4019bb:	mov    rdi,rbx
  4019be:	mov    DWORD PTR [rsp],0xfffff5d4
  4019c5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4019ca:	push   0xfffffffffffffff4
  4019cc:	xor    eax,eax
  4019ce:	mov    r9d,0x10
  4019d4:	push   0x2
  4019d6:	mov    r8d,0x10
  4019dc:	mov    ecx,0xfffff46c
  4019e1:	mov    edx,0xfffff468
  4019e6:	mov    esi,0x93d
  4019eb:	mov    rdi,rbx
  4019ee:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4019f3:	add    rsp,0x18
  4019f7:	push   0x2
  4019f9:	mov    r9d,0x3
  4019ff:	mov    r8d,0x10
  401a05:	push   0xffffffffffffffff
  401a07:	mov    ecx,0x18
  401a0c:	xor    eax,eax
  401a0e:	push   0xffffffffffffffff
  401a10:	mov    edx,0x10
  401a15:	mov    esi,0x983
  401a1a:	mov    rdi,rbx
  401a1d:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401a22:	add    rsp,0x20
  401a26:	xor    eax,eax
  401a28:	mov    edx,0xfffffff4
  401a2d:	mov    esi,0x9e2
  401a32:	mov    rdi,rbx
  401a35:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401a3a:	push   0x18
  401a3c:	xor    eax,eax
  401a3e:	mov    r9d,0x4
  401a44:	push   0x3ff00000
  401a49:	mov    r8d,0xffffffff
  401a4f:	mov    ecx,0xfffffff7
  401a54:	push   0x0
  401a56:	mov    edx,0x20
  401a5b:	mov    esi,0x9f7
  401a60:	push   0xfffffffffffeffff
  401a65:	mov    rdi,rbx
  401a68:	push   0xfffffffffffffff4
  401a6a:	push   0x3
  401a6c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401a71:	add    rsp,0x28
  401a75:	push   0x2
  401a77:	mov    r9d,0x1
  401a7d:	mov    r8d,0x1c
  401a83:	mov    ecx,0xffffffff
  401a88:	xor    eax,eax
  401a8a:	mov    edx,0x8
  401a8f:	mov    esi,0xa5f
  401a94:	mov    rdi,rbx
  401a97:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401a9c:	xor    eax,eax
  401a9e:	mov    edx,0xfffffff4
  401aa3:	mov    esi,0x9e2
  401aa8:	mov    rdi,rbx
  401aab:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401ab0:	mov    DWORD PTR [rsp],0xfffffff7
  401ab7:	push   0x3
  401ab9:	xor    eax,eax
  401abb:	mov    r9d,0x2
  401ac1:	push   0x4
  401ac3:	mov    r8d,0x4
  401ac9:	mov    ecx,0xfffffff7
  401ace:	push   0xfffffffffffff4d9
  401ad3:	mov    edx,0x20
  401ad8:	mov    esi,0xaab
  401add:	push   0xe
  401adf:	mov    rdi,rbx
  401ae2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401ae7:	add    rsp,0x28
  401aeb:	push   0x1
  401aed:	xor    eax,eax
  401aef:	mov    r9d,0xfffffff9
  401af5:	push   0x7
  401af7:	mov    r8d,0x2
  401afd:	mov    ecx,0x16
  401b02:	push   0x30
  401b04:	mov    edx,0xfffffff7
  401b09:	mov    esi,0xb05
  401b0e:	mov    rdi,rbx
  401b11:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401b16:	add    rsp,0x20
  401b1a:	push   0x18
  401b1c:	xor    eax,eax
  401b1e:	mov    r9d,0x18
  401b24:	push   0x10
  401b26:	mov    r8d,0x20
  401b2c:	mov    ecx,0x10
  401b31:	mov    edx,0x18
  401b36:	mov    esi,0xb5b
  401b3b:	mov    rdi,rbx
  401b3e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401b43:	mov    DWORD PTR [rsp],0xfffffffd
  401b4a:	push   0x20
  401b4c:	xor    eax,eax
  401b4e:	mov    r9d,0x1
  401b54:	push   0x18
  401b56:	mov    r8d,0x10
  401b5c:	mov    ecx,0xffffffff
  401b61:	push   0x18
  401b63:	mov    edx,0xfffff530
  401b68:	mov    esi,0xbb4
  401b6d:	push   0x10
  401b6f:	mov    rdi,rbx
  401b72:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401b77:	add    rsp,0x28
  401b7b:	push   0x30
  401b7d:	xor    eax,eax
  401b7f:	mov    r9d,0x18
  401b85:	push   0x20
  401b87:	mov    r8d,0x18
  401b8d:	mov    ecx,0xfffffffe
  401b92:	push   0x10
  401b94:	mov    edx,0x3
  401b99:	mov    esi,0xc15
  401b9e:	push   0x18
  401ba0:	mov    rdi,rbx
  401ba3:	push   0x3
  401ba5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401baa:	add    rsp,0x30
  401bae:	push   0x18
  401bb0:	xor    eax,eax
  401bb2:	mov    r9d,0x10
  401bb8:	push   0x10
  401bba:	mov    r8d,0x18
  401bc0:	mov    ecx,0x1
  401bc5:	push   0x18
  401bc7:	mov    edx,0x7
  401bcc:	mov    esi,0xc87
  401bd1:	push   0x20
  401bd3:	mov    rdi,rbx
  401bd6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401bdb:	add    rsp,0x20
  401bdf:	push   0x20
  401be1:	xor    eax,eax
  401be3:	mov    r9d,0x1
  401be9:	push   0x18
  401beb:	mov    r8d,0x10
  401bf1:	mov    ecx,0xffffffff
  401bf6:	push   0x18
  401bf8:	mov    edx,0xfffff530
  401bfd:	mov    esi,0xccd
  401c02:	push   0x10
  401c04:	mov    rdi,rbx
  401c07:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401c0c:	add    rsp,0x18
  401c10:	push   0x1
  401c12:	xor    eax,eax
  401c14:	mov    r9d,0x30
  401c1a:	mov    r8d,0x10
  401c20:	mov    ecx,0x18
  401c25:	mov    edx,0x3
  401c2a:	mov    esi,0xd26
  401c2f:	mov    rdi,rbx
  401c32:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401c37:	mov    DWORD PTR [rsp],0x7fffffff
  401c3e:	push   0xffffffffffffffff
  401c40:	xor    eax,eax
  401c42:	mov    r9d,0x1
  401c48:	push   0xfffffffffffeffff
  401c4d:	mov    r8d,0x30
  401c53:	mov    ecx,0x18
  401c58:	push   0x2
  401c5a:	mov    edx,0x10
  401c5f:	mov    esi,0xd94
  401c64:	push   0x7
  401c66:	mov    rdi,rbx
  401c69:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401c6e:	add    rsp,0x30
  401c72:	mov    r9d,0xfffeffff
  401c78:	xor    eax,eax
  401c7a:	mov    r8d,0xffffffff
  401c80:	mov    ecx,0x3
  401c85:	mov    edx,0x2
  401c8a:	mov    esi,0xddb
  401c8f:	mov    rdi,rbx
  401c92:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401c97:	mov    r8d,0xfffeffff
  401c9d:	mov    edx,r8d
  401ca0:	xor    eax,eax
  401ca2:	mov    ecx,0x2
  401ca7:	mov    esi,0xe56
  401cac:	mov    rdi,rbx
  401caf:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401cb4:	mov    r9d,0xfffeffff
  401cba:	mov    ecx,r9d
  401cbd:	xor    eax,eax
  401cbf:	mov    r8d,0x2
  401cc5:	mov    edx,0x2
  401cca:	mov    esi,0xe91
  401ccf:	mov    rdi,rbx
  401cd2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401cd7:	mov    r9d,0xfffeffff
  401cdd:	mov    ecx,r9d
  401ce0:	xor    eax,eax
  401ce2:	mov    r8d,0x2
  401ce8:	mov    edx,0x2
  401ced:	mov    esi,0xedb
  401cf2:	mov    rdi,rbx
  401cf5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401cfa:	sub    rsp,0x8
  401cfe:	push   0x2
  401d00:	mov    r9d,0xfffeffff
  401d06:	mov    ecx,r9d
  401d09:	xor    eax,eax
  401d0b:	mov    r8d,0x2
  401d11:	mov    edx,0x2
  401d16:	mov    esi,0xf14
  401d1b:	mov    rdi,rbx
  401d1e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401d23:	mov    r8d,0xfffeffff
  401d29:	mov    edx,r8d
  401d2c:	xor    eax,eax
  401d2e:	mov    r9d,0x2
  401d34:	mov    ecx,0x2
  401d39:	mov    esi,0xf57
  401d3e:	mov    rdi,rbx
  401d41:	mov    DWORD PTR [rsp],0xfffeffff
  401d48:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401d4d:	mov    r9d,0xfffeffff
  401d53:	mov    ecx,r9d
  401d56:	xor    eax,eax
  401d58:	mov    r8d,0x2
  401d5e:	mov    edx,0x2
  401d63:	mov    esi,0xfb1
  401d68:	mov    rdi,rbx
  401d6b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401d70:	mov    r9d,0xfffeffff
  401d76:	mov    ecx,r9d
  401d79:	xor    eax,eax
  401d7b:	mov    r8d,0x2
  401d81:	mov    edx,0x2
  401d86:	mov    esi,0x1009
  401d8b:	mov    rdi,rbx
  401d8e:	mov    DWORD PTR [rsp],0x20
  401d95:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401d9a:	push   0xfffffffffffeffff
  401d9f:	mov    r8d,0xfffeffff
  401da5:	mov    r9d,0x3
  401dab:	push   0xfffffffffffeffff
  401db0:	mov    ecx,r8d
  401db3:	mov    edx,0x3
  401db8:	mov    esi,0x1057
  401dbd:	mov    rdi,rbx
  401dc0:	xor    eax,eax
  401dc2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401dc7:	add    rsp,0x20
  401dcb:	mov    r8d,0x3
  401dd1:	xor    eax,eax
  401dd3:	mov    ecx,0xfffeffff
  401dd8:	mov    edx,0x2
  401ddd:	mov    esi,0x109a
  401de2:	mov    rdi,rbx
  401de5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401dea:	xor    edx,edx
  401dec:	xor    eax,eax
  401dee:	mov    r9d,0xfffeffff
  401df4:	mov    r8d,0x2
  401dfa:	mov    ecx,0x43500000
  401dff:	mov    esi,0x1123
  401e04:	mov    rdi,rbx
  401e07:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401e0c:	mov    r9d,0xfffeffff
  401e12:	mov    r8d,r9d
  401e15:	xor    eax,eax
  401e17:	mov    ecx,0x3
  401e1c:	mov    edx,0x3
  401e21:	mov    esi,0x11ab
  401e26:	mov    rdi,rbx
  401e29:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401e2e:	mov    r9d,0xfffeffff
  401e34:	mov    r8d,r9d
  401e37:	mov    ecx,r9d
  401e3a:	xor    eax,eax
  401e3c:	mov    edx,0x3
  401e41:	mov    esi,0x11ee
  401e46:	mov    rdi,rbx
  401e49:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401e4e:	mov    r8d,0xfffeffff
  401e54:	mov    ecx,r8d
  401e57:	mov    edx,r8d
  401e5a:	xor    eax,eax
  401e5c:	mov    esi,0x123c
  401e61:	mov    rdi,rbx
  401e64:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401e69:	xor    eax,eax
  401e6b:	mov    r9d,0x2
  401e71:	mov    r8d,0xc
  401e77:	mov    ecx,0xfffffffb
  401e7c:	mov    edx,0x2
  401e81:	mov    esi,0x1295
  401e86:	mov    rdi,rbx
  401e89:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401e8e:	push   0x2
  401e90:	xor    eax,eax
  401e92:	mov    r9d,0xfffff468
  401e98:	push   0xfffffffffffff46c
  401e9d:	mov    r8d,0x10
  401ea3:	mov    ecx,0xc
  401ea8:	mov    edx,0xfffffffb
  401ead:	mov    esi,0x12db
  401eb2:	mov    rdi,rbx
  401eb5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401eba:	mov    DWORD PTR [rsp],0x3
  401ec1:	push   0xfffffffffffff46c
  401ec6:	xor    eax,eax
  401ec8:	mov    r9d,0xfffffffb
  401ece:	push   0xfffffffffffff468
  401ed3:	mov    r8d,0x10
  401ed9:	mov    ecx,0x10
  401ede:	mov    edx,0xfffeffff
  401ee3:	mov    esi,0x131b
  401ee8:	mov    rdi,rbx
  401eeb:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401ef0:	mov    r8d,0xfffeffff
  401ef6:	add    rsp,0x20
  401efa:	mov    edx,r8d
  401efd:	mov    r9d,0xc
  401f03:	mov    ecx,0xfffffffb
  401f08:	xor    eax,eax
  401f0a:	mov    esi,0x1399
  401f0f:	mov    rdi,rbx
  401f12:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401f17:	xor    eax,eax
  401f19:	mov    edx,0xf
  401f1e:	mov    esi,0x13ec
  401f23:	mov    rdi,rbx
  401f26:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401f2b:	sub    rsp,0x8
  401f2f:	push   0xfffffffffffeffff
  401f34:	xor    eax,eax
  401f36:	mov    r9d,0xfffffffb
  401f3c:	mov    r8d,0x3
  401f42:	mov    ecx,0xfffff46c
  401f47:	mov    edx,0xfffff468
  401f4c:	mov    esi,0x1433
  401f51:	mov    rdi,rbx
  401f54:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401f59:	xor    eax,eax
  401f5b:	mov    r9d,0xfffff4a0
  401f61:	mov    r8d,0x10
  401f67:	mov    ecx,0xfffff4ac
  401f6c:	mov    edx,0xc
  401f71:	mov    esi,0x146e
  401f76:	mov    rdi,rbx
  401f79:	mov    DWORD PTR [rsp],0xfffff4a0
  401f80:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401f85:	mov    QWORD PTR [rsp],0x10
  401f8d:	push   0xfffffffffffff4ac
  401f92:	xor    eax,eax
  401f94:	mov    r9d,0xfffffffb
  401f9a:	push   0xc
  401f9c:	mov    r8d,0xfffff46c
  401fa2:	mov    ecx,0xfffff468
  401fa7:	mov    edx,0x2
  401fac:	mov    esi,0x14ba
  401fb1:	mov    rdi,rbx
  401fb4:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401fb9:	add    rsp,0x18
  401fbd:	push   0xfffffffffffffffb
  401fbf:	mov    r9d,0xfffff46c
  401fc5:	mov    r8d,0xfffff468
  401fcb:	mov    ecx,0x2
  401fd0:	mov    edx,0xfffff4a0
  401fd5:	mov    esi,0x14f3
  401fda:	mov    rdi,rbx
  401fdd:	xor    eax,eax
  401fdf:	call   404bf0 <__sprintf_chk@plt+0x3830>
  401fe4:	xor    eax,eax
  401fe6:	mov    r9d,0xfffff4a0
  401fec:	mov    r8d,0x10
  401ff2:	mov    ecx,0xfffff4ac
  401ff7:	mov    edx,0xc
  401ffc:	mov    esi,0x1541
  402001:	mov    rdi,rbx
  402004:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402009:	push   0xfffffffffffff4a0
  40200e:	mov    r9d,0xfffffffb
  402014:	mov    r8d,0xfffff46c
  40201a:	push   0x10
  40201c:	xor    eax,eax
  40201e:	mov    ecx,0xfffff468
  402023:	push   0xfffffffffffff4ac
  402028:	mov    edx,0x2
  40202d:	mov    esi,0x1597
  402032:	push   0xc
  402034:	mov    rdi,rbx
  402037:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40203c:	add    rsp,0x30
  402040:	xor    eax,eax
  402042:	mov    ecx,0xfffffff4
  402047:	mov    edx,0x2
  40204c:	mov    esi,0x15dc
  402051:	mov    rdi,rbx
  402054:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402059:	push   0xfffffffffffeffff
  40205e:	xor    r8d,r8d
  402061:	xor    eax,eax
  402063:	push   0x43380000
  402068:	mov    r9d,0x43380000
  40206e:	mov    ecx,0xfffeffff
  402073:	push   0x0
  402075:	mov    edx,0x2
  40207a:	mov    esi,0x1637
  40207f:	push   0x2
  402081:	mov    rdi,rbx
  402084:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402089:	add    rsp,0x18
  40208d:	push   0xfffffffffffeffff
  402092:	xor    r8d,r8d
  402095:	xor    eax,eax
  402097:	mov    r9d,0x43380000
  40209d:	mov    ecx,0x2
  4020a2:	mov    edx,0xfffeffff
  4020a7:	mov    esi,0x1682
  4020ac:	mov    rdi,rbx
  4020af:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4020b4:	xor    r8d,r8d
  4020b7:	xor    eax,eax
  4020b9:	mov    r9d,0x43380000
  4020bf:	mov    ecx,0x2
  4020c4:	mov    edx,0xfffeffff
  4020c9:	mov    esi,0x16fb
  4020ce:	mov    rdi,rbx
  4020d1:	mov    DWORD PTR [rsp],0xfffeffff
  4020d8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4020dd:	push   0x2
  4020df:	mov    r8d,0xfffeffff
  4020e5:	xor    r9d,r9d
  4020e8:	push   0x43380000
  4020ed:	mov    edx,r8d
  4020f0:	xor    eax,eax
  4020f2:	mov    ecx,0x2
  4020f7:	mov    esi,0x175f
  4020fc:	mov    rdi,rbx
  4020ff:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402104:	add    rsp,0x20
  402108:	push   0xfffffffffffeffff
  40210d:	xor    ecx,ecx
  40210f:	xor    eax,eax
  402111:	push   0xfffffffffffeffff
  402116:	mov    r9d,0x3
  40211c:	mov    r8d,0x43380000
  402122:	mov    edx,0xfffeffff
  402127:	mov    esi,0x17bc
  40212c:	mov    rdi,rbx
  40212f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402134:	mov    DWORD PTR [rsp],0x43380000
  40213b:	push   0x0
  40213d:	xor    edx,edx
  40213f:	xor    eax,eax
  402141:	push   0xfffffffffffeffff
  402146:	mov    r9d,0xfffeffff
  40214c:	mov    r8d,0x3
  402152:	mov    ecx,0x43380000
  402157:	mov    esi,0x180f
  40215c:	mov    rdi,rbx
  40215f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402164:	add    rsp,0x18
  402168:	push   0xfffffffffffeffff
  40216d:	mov    r8d,0xfffeffff
  402173:	xor    r9d,r9d
  402176:	push   0x3
  402178:	mov    ecx,r8d
  40217b:	xor    eax,eax
  40217d:	push   0x43380000
  402182:	mov    edx,0x3
  402187:	mov    esi,0x188b
  40218c:	mov    rdi,rbx
  40218f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402194:	add    rsp,0x20
  402198:	push   0x43380000
  40219d:	xor    ecx,ecx
  40219f:	mov    r9d,0x3
  4021a5:	push   0x0
  4021a7:	xor    eax,eax
  4021a9:	mov    r8d,0x43380000
  4021af:	push   0xfffffffffffeffff
  4021b4:	mov    edx,0xfffeffff
  4021b9:	mov    esi,0x18e6
  4021be:	push   0xfffffffffffeffff
  4021c3:	mov    rdi,rbx
  4021c6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4021cb:	add    rsp,0x18
  4021cf:	push   0x18
  4021d1:	xor    eax,eax
  4021d3:	mov    r9d,0xa0
  4021d9:	push   0x10
  4021db:	mov    r8d,0x10
  4021e1:	mov    ecx,0x2
  4021e6:	push   0x18
  4021e8:	mov    edx,0x3
  4021ed:	mov    esi,0x1966
  4021f2:	push   0x20
  4021f4:	mov    rdi,rbx
  4021f7:	push   0x18
  4021f9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4021fe:	add    rsp,0x30
  402202:	push   0x18
  402204:	xor    eax,eax
  402206:	mov    r9d,0x10
  40220c:	push   0x10
  40220e:	mov    r8d,0x14
  402214:	mov    ecx,0x3
  402219:	push   0x18
  40221b:	mov    edx,0x10
  402220:	mov    esi,0x19c0
  402225:	push   0x10
  402227:	mov    rdi,rbx
  40222a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40222f:	add    rsp,0x18
  402233:	push   0x10
  402235:	xor    eax,eax
  402237:	mov    r9d,0xc
  40223d:	push   0xfffffffffffff4d9
  402242:	mov    r8d,0x10
  402248:	mov    ecx,0x20
  40224d:	push   0xfffffffffffff510
  402252:	mov    edx,0xfffff4d9
  402257:	mov    esi,0x1a3e
  40225c:	mov    rdi,rbx
  40225f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402264:	add    rsp,0x20
  402268:	push   0x4d8
  40226d:	xor    eax,eax
  40226f:	mov    r9d,0xfffff510
  402275:	push   0x10
  402277:	mov    r8d,0xc
  40227d:	mov    ecx,0x10
  402282:	push   0x10
  402284:	mov    edx,0xfffff4d9
  402289:	mov    esi,0x1a83
  40228e:	push   0x4
  402290:	mov    rdi,rbx
  402293:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402298:	add    rsp,0x20
  40229c:	push   0x18
  40229e:	xor    eax,eax
  4022a0:	mov    r9d,0x18
  4022a6:	push   0x10
  4022a8:	mov    r8d,0x10
  4022ae:	mov    ecx,0xffffffc7
  4022b3:	push   0x18
  4022b5:	mov    edx,0x10
  4022ba:	mov    esi,0x1ad8
  4022bf:	push   0x10
  4022c1:	mov    rdi,rbx
  4022c4:	push   0xfffffffffffff640
  4022c9:	push   0xfffffffffffff5e0
  4022ce:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4022d3:	add    rsp,0x28
  4022d7:	push   0x1c
  4022d9:	mov    r8,0xfffffffffffffffc
  4022e0:	mov    ecx,0xfffff530
  4022e5:	push   0x10
  4022e7:	mov    edx,ecx
  4022e9:	xor    eax,eax
  4022eb:	push   0x18
  4022ed:	mov    r9d,0xffffff3c
  4022f3:	mov    esi,0x1b59
  4022f8:	push   r8
  4022fa:	mov    rdi,rbx
  4022fd:	push   0x30
  4022ff:	push   0xfffffffffffff5e0
  402304:	push   0x10
  402306:	push   0xfffffffffffff53c
  40230b:	push   0xfffffffffffff640
  402310:	push   0xfffffffffffff540
  402315:	push   0xfffffffffffff53c
  40231a:	push   0x80
  40231f:	push   0xffffffffffffff38
  402324:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402329:	add    rsp,0x70
  40232d:	push   0x43300000
  402332:	xor    eax,eax
  402334:	mov    r9d,0xfffff530
  40233a:	push   0x0
  40233c:	mov    r8d,0xfffff53c
  402342:	mov    ecx,0xffffffd0
  402347:	push   0x7fffffff
  40234c:	mov    edx,0x10
  402351:	mov    esi,0x1c5f
  402356:	push   0xffffffffffffffff
  402358:	mov    rdi,rbx
  40235b:	push   0x55
  40235d:	push   0xffffffffffffffff
  40235f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402364:	add    rsp,0x30
  402368:	push   0x43300000
  40236d:	xor    edx,edx
  40236f:	xor    eax,eax
  402371:	push   0x0
  402373:	mov    r9d,0x7fffffff
  402379:	mov    r8d,0xffffffff
  40237f:	push   0x7fffffff
  402384:	mov    ecx,0x3ff00000
  402389:	mov    esi,0x1ce8
  40238e:	push   0xffffffffffffffff
  402390:	mov    rdi,rbx
  402393:	push   0xffffffffbff00000
  402398:	push   0x0
  40239a:	push   0x43300000
  40239f:	push   0x0
  4023a1:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4023a6:	add    rsp,0x40
  4023aa:	push   0x3ff00000
  4023af:	mov    r9d,0x7fffffff
  4023b5:	mov    r8d,0xffffffff
  4023bb:	push   0x0
  4023bd:	xor    edx,edx
  4023bf:	mov    ecx,0x3ff00000
  4023c4:	push   0x43300000
  4023c9:	xor    eax,eax
  4023cb:	mov    esi,0x1d7f
  4023d0:	push   0x0
  4023d2:	mov    rdi,rbx
  4023d5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4023da:	add    rsp,0x20
  4023de:	mov    esi,0x1e77
  4023e3:	xor    eax,eax
  4023e5:	mov    rdi,rbx
  4023e8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4023ed:	xor    edx,edx
  4023ef:	xor    eax,eax
  4023f1:	mov    ecx,0x3ff00000
  4023f6:	mov    esi,0x1ee5
  4023fb:	mov    rdi,rbx
  4023fe:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402403:	push   0x3ff00000
  402408:	xor    r8d,r8d
  40240b:	mov    r9d,0x3ff00000
  402411:	push   0x0
  402413:	xor    edx,edx
  402415:	xor    eax,eax
  402417:	push   0x7fffffff
  40241c:	mov    ecx,0x3ff00000
  402421:	mov    esi,0x1f27
  402426:	push   0xffffffffffffffff
  402428:	mov    rdi,rbx
  40242b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402430:	add    rsp,0x20
  402434:	xor    edx,edx
  402436:	mov    ecx,0x7ff00000
  40243b:	xor    eax,eax
  40243d:	mov    esi,0x1fe3
  402442:	mov    rdi,rbx
  402445:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40244a:	xor    eax,eax
  40244c:	mov    esi,0x2045
  402451:	mov    rdi,rbx
  402454:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402459:	xor    eax,eax
  40245b:	mov    esi,0x2089
  402460:	mov    rdi,rbx
  402463:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402468:	xor    eax,eax
  40246a:	mov    esi,0x20d4
  40246f:	mov    rdi,rbx
  402472:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402477:	xor    edx,edx
  402479:	mov    r9d,0x7fffffff
  40247f:	mov    r8d,0xffffffff
  402485:	mov    ecx,0x80000000
  40248a:	xor    eax,eax
  40248c:	mov    esi,0x2138
  402491:	mov    rdi,rbx
  402494:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402499:	xor    eax,eax
  40249b:	mov    esi,0x21af
  4024a0:	mov    rdi,rbx
  4024a3:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4024a8:	sub    rsp,0x8
  4024ac:	push   0xb0
  4024b1:	xor    eax,eax
  4024b3:	mov    r9d,0x70
  4024b9:	push   0x68
  4024bb:	mov    r8d,0xd0
  4024c1:	mov    ecx,0xfc
  4024c6:	push   0x60
  4024c8:	mov    edx,0xbb8
  4024cd:	mov    esi,0x21e6
  4024d2:	push   0x58
  4024d4:	mov    rdi,rbx
  4024d7:	push   0x50
  4024d9:	push   0x98
  4024de:	push   0x90
  4024e3:	push   0x50
  4024e5:	push   0x48
  4024e7:	push   0x40
  4024e9:	push   0x38
  4024eb:	push   0x30
  4024ed:	push   0x88
  4024f2:	push   0x80
  4024f7:	push   0x78
  4024f9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4024fe:	add    rsp,0x78
  402502:	push   0xc
  402504:	xor    eax,eax
  402506:	mov    r9d,0x18
  40250c:	push   0x8
  40250e:	mov    r8d,0x10
  402514:	mov    ecx,0xffffffff
  402519:	push   0x30
  40251b:	mov    edx,0xfffff530
  402520:	mov    esi,0x2253
  402525:	push   0x70
  402527:	mov    rdi,rbx
  40252a:	push   0x18
  40252c:	push   0x10
  40252e:	push   0x10
  402530:	push   0xfffffffffffff544
  402535:	push   0x10
  402537:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40253c:	add    rsp,0x48
  402540:	push   0x40
  402542:	xor    ecx,ecx
  402544:	mov    r9d,0x90
  40254a:	push   0x30
  40254c:	mov    r8d,0xf
  402552:	mov    edx,0xc0
  402557:	push   0x20
  402559:	mov    esi,0x22d6
  40255e:	mov    rdi,rbx
  402561:	push   0x10
  402563:	xor    eax,eax
  402565:	xor    ebp,ebp
  402567:	push   0xb8
  40256c:	push   0xb0
  402571:	push   0xa8
  402576:	push   0xa0
  40257b:	push   0x98
  402580:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402585:	add    rsp,0x48
  402589:	push   0x20
  40258b:	mov    r9d,0x80
  402591:	mov    r8d,0x70
  402597:	push   0x98
  40259c:	mov    ecx,0x60
  4025a1:	mov    edx,0x50
  4025a6:	push   0x10
  4025a8:	mov    esi,0x2327
  4025ad:	mov    rdi,rbx
  4025b0:	push   0x90
  4025b5:	xor    eax,eax
  4025b7:	push   0x0
  4025b9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4025be:	add    rsp,0x30
  4025c2:	mov    esi,0x3818
  4025c7:	mov    rdi,rbx
  4025ca:	xor    eax,eax
  4025cc:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4025d1:	nop    DWORD PTR [rax+0x0]
  4025d8:	mov    edx,ebp
  4025da:	mov    esi,0x20a
  4025df:	mov    rdi,rbx
  4025e2:	xor    eax,eax
  4025e4:	lea    r13d,[rbp-0x4]
  4025e8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4025ed:	cmp    r13d,0x58
  4025f1:	ja     403780 <__sprintf_chk@plt+0x23c0>
  4025f7:	lea    rcx,[rip+0x8ef6]        # 40b4f4 <__sprintf_chk@plt+0xa134>
  4025fe:	mov    eax,r13d
  402601:	movsxd rax,DWORD PTR [rcx+rax*4]
  402605:	add    rax,rcx
  402608:	notrack jmp rax
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]
  402610:	mov    r8d,0x1
  402616:	mov    ecx,0xffffff80
  40261b:	mov    edx,0x7e
  402620:	mov    esi,0x36dc
  402625:	mov    rdi,rbx
  402628:	xor    eax,eax
  40262a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40262f:	nop
  402630:	inc    ebp
  402632:	inc    r12d
  402635:	jmp    4025d8 <__sprintf_chk@plt+0x1218>
  402637:	nop    WORD PTR [rax+rax*1+0x0]
  402640:	mov    edx,0xfffe0000
  402645:	mov    esi,0x36c2
  40264a:	mov    rdi,rbx
  40264d:	xor    eax,eax
  40264f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402654:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402660:	mov    r9d,0xfffff53c
  402666:	mov    r8d,0xfffff540
  40266c:	mov    ecx,0x40
  402671:	mov    edx,0xfffff710
  402676:	mov    esi,0x3699
  40267b:	mov    rdi,rbx
  40267e:	xor    eax,eax
  402680:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402685:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402687:	nop    WORD PTR [rax+rax*1+0x0]
  402690:	mov    esi,0x2399
  402695:	mov    rdi,rbx
  402698:	xor    eax,eax
  40269a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40269f:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4026a1:	nop    DWORD PTR [rax+0x0]
  4026a8:	mov    r9d,0xffffffff
  4026ae:	mov    r8d,0xffffffc2
  4026b4:	mov    ecx,0x20
  4026b9:	mov    rdi,rbx
  4026bc:	xor    eax,eax
  4026be:	mov    edx,0x3
  4026c3:	mov    esi,0x372f
  4026c8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4026cd:	mov    rdi,rbx
  4026d0:	xor    eax,eax
  4026d2:	mov    edx,0xffffffcc
  4026d7:	mov    esi,0x3790
  4026dc:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4026e1:	mov    edx,0xffffffff
  4026e6:	mov    esi,0x37a9
  4026eb:	mov    rdi,rbx
  4026ee:	xor    eax,eax
  4026f0:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4026f5:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4026fa:	nop    WORD PTR [rax+rax*1+0x0]
  402700:	xor    eax,eax
  402702:	mov    edx,0xffffffff
  402707:	mov    esi,0x366c
  40270c:	mov    rdi,rbx
  40270f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402714:	cmp    ebp,0x50
  402717:	je     40399d <__sprintf_chk@plt+0x25dd>
  40271d:	mov    edx,0xfffe0000
  402722:	mov    esi,0x3689
  402727:	mov    rdi,rbx
  40272a:	xor    eax,eax
  40272c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402731:	mov    esi,0x2397
  402736:	mov    rdi,rbx
  402739:	xor    eax,eax
  40273b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402740:	cmp    ebp,0x5c
  402743:	jne    402630 <__sprintf_chk@plt+0x1270>
  402749:	mov    esi,0xffffffff
  40274e:	mov    rdi,rbx
  402751:	mov    DWORD PTR [rsp+0x48],0x5d
  402759:	call   405d80 <__sprintf_chk@plt+0x49c0>
  40275e:	lea    rsi,[rbx+0x30]
  402762:	mov    rdi,rbx
  402765:	call   405340 <__sprintf_chk@plt+0x3f80>
  40276a:	mov    r12d,eax
  40276d:	test   eax,eax
  40276f:	je     4039b6 <__sprintf_chk@plt+0x25f6>
  402775:	mov    rax,QWORD PTR [rip+0x10874]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  40277c:	mov    ecx,r12d
  40277f:	mov    rdi,QWORD PTR [rax]
  402782:	lea    rdx,[rip+0x69ed]        # 409176 <__sprintf_chk@plt+0x7db6>
  402789:	mov    esi,0x1
  40278e:	xor    eax,eax
  402790:	call   401390 <__fprintf_chk@plt>
  402795:	mov    ebx,0x1
  40279a:	mov    rcx,QWORD PTR [rsp+0xa58]
  4027a2:	xor    rcx,QWORD PTR fs:0x28
  4027ab:	mov    eax,ebx
  4027ad:	jne    4044b8 <__sprintf_chk@plt+0x30f8>
  4027b3:	add    rsp,0xa68
  4027ba:	pop    rbx
  4027bb:	pop    rbp
  4027bc:	pop    r12
  4027be:	pop    r13
  4027c0:	pop    r14
  4027c2:	pop    r15
  4027c4:	ret    
  4027c5:	nop    DWORD PTR [rax]
  4027c8:	mov    esi,0x21e4
  4027cd:	mov    rdi,rbx
  4027d0:	xor    eax,eax
  4027d2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4027d7:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4027dc:	nop    DWORD PTR [rax+0x0]
  4027e0:	mov    r8d,0x2
  4027e6:	mov    ecx,0xffffff80
  4027eb:	mov    edx,0x7e
  4027f0:	mov    esi,0x34e4
  4027f5:	mov    rdi,rbx
  4027f8:	xor    eax,eax
  4027fa:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4027ff:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402804:	nop    DWORD PTR [rax+0x0]
  402808:	cmp    ebp,0x47
  40280b:	je     4038e0 <__sprintf_chk@plt+0x2520>
  402811:	xor    eax,eax
  402813:	mov    esi,0x3424
  402818:	mov    rdi,rbx
  40281b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402820:	xor    eax,eax
  402822:	mov    edx,0x3
  402827:	mov    esi,0x3428
  40282c:	mov    rdi,rbx
  40282f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402834:	cmp    ebp,0x48
  402837:	je     403bd0 <__sprintf_chk@plt+0x2810>
  40283d:	mov    esi,0x343b
  402842:	mov    rdi,rbx
  402845:	xor    eax,eax
  402847:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40284c:	mov    edx,0x10
  402851:	mov    esi,0x3486
  402856:	mov    ecx,0xffffffd0
  40285b:	mov    rdi,rbx
  40285e:	xor    eax,eax
  402860:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402865:	or     edx,0xffffffff
  402868:	mov    esi,0x34b6
  40286d:	mov    rdi,rbx
  402870:	xor    eax,eax
  402872:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402877:	mov    esi,0x34c8
  40287c:	mov    rdi,rbx
  40287f:	xor    eax,eax
  402881:	mov    ecx,0x7
  402886:	mov    edx,0xfffffffd
  40288b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402890:	mov    esi,0x34e0
  402895:	mov    rdi,rbx
  402898:	xor    eax,eax
  40289a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40289f:	mov    esi,0x2625
  4028a4:	mov    rdi,rbx
  4028a7:	xor    eax,eax
  4028a9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4028ae:	jmp    402740 <__sprintf_chk@plt+0x1380>
  4028b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b8:	xor    eax,eax
  4028ba:	mov    esi,0x34f9
  4028bf:	mov    rdi,rbx
  4028c2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4028c7:	lea    eax,[rbp-0x4c]
  4028ca:	cmp    eax,0x1
  4028cd:	ja     403830 <__sprintf_chk@plt+0x2470>
  4028d3:	xor    eax,eax
  4028d5:	mov    esi,0x35eb
  4028da:	mov    rdi,rbx
  4028dd:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4028e2:	xor    eax,eax
  4028e4:	mov    esi,0x35f8
  4028e9:	mov    rdi,rbx
  4028ec:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4028f1:	xor    eax,eax
  4028f3:	mov    esi,0x3604
  4028f8:	mov    rdi,rbx
  4028fb:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402900:	xor    eax,eax
  402902:	mov    esi,0x361c
  402907:	mov    rdi,rbx
  40290a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40290f:	cmp    ebp,0x4c
  402912:	je     403c14 <__sprintf_chk@plt+0x2854>
  402918:	mov    edx,0x53
  40291d:	mov    esi,0x363d
  402922:	mov    rdi,rbx
  402925:	xor    eax,eax
  402927:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40292c:	mov    esi,0x364b
  402931:	mov    rdi,rbx
  402934:	xor    eax,eax
  402936:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40293b:	jmp    402740 <__sprintf_chk@plt+0x1380>
  402940:	sub    rsp,0x8
  402944:	push   0x41
  402946:	mov    r9d,0x6
  40294c:	mov    r8d,0xffffffff
  402952:	push   0xfffffffffffe0000
  402957:	mov    ecx,0xfffffff4
  40295c:	mov    edx,0xfffffff7
  402961:	push   0x54
  402963:	mov    esi,0x32c6
  402968:	mov    rdi,rbx
  40296b:	push   0xfffffffffffe0000
  402970:	xor    eax,eax
  402972:	push   0x4
  402974:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402979:	add    rsp,0x30
  40297d:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402982:	nop    WORD PTR [rax+rax*1+0x0]
  402988:	push   0x18
  40298a:	mov    r9d,0xfffe0000
  402990:	mov    r8d,0xffffffff
  402996:	push   0x1c
  402998:	mov    ecx,0x8
  40299d:	mov    edx,0x18
  4029a2:	mov    esi,0x31f7
  4029a7:	mov    rdi,rbx
  4029aa:	xor    eax,eax
  4029ac:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4029b1:	mov    r9d,0x8
  4029b7:	mov    r8d,0xffffffff
  4029bd:	mov    ecx,0x4
  4029c2:	mov    edx,0x14
  4029c7:	mov    esi,0x328f
  4029cc:	mov    rdi,rbx
  4029cf:	xor    eax,eax
  4029d1:	mov    DWORD PTR [rsp],0x0
  4029d8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4029dd:	pop    r10
  4029df:	pop    r11
  4029e1:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4029e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029f0:	mov    r8d,0x10
  4029f6:	mov    ecx,0x3
  4029fb:	mov    edx,0xfffffff7
  402a00:	mov    esi,0x31af
  402a05:	mov    rdi,rbx
  402a08:	xor    eax,eax
  402a0a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402a0f:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402a14:	nop    DWORD PTR [rax+0x0]
  402a18:	mov    rdi,rbx
  402a1b:	xor    eax,eax
  402a1d:	mov    r8d,0x20
  402a23:	mov    ecx,0xffffffff
  402a28:	mov    edx,0xb
  402a2d:	mov    esi,0x3337
  402a32:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402a37:	mov    r9d,0x18
  402a3d:	mov    r8d,0x10
  402a43:	mov    ecx,0x18
  402a48:	mov    edx,0x10
  402a4d:	mov    esi,0x33de
  402a52:	mov    rdi,rbx
  402a55:	xor    eax,eax
  402a57:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402a5c:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402a61:	nop    DWORD PTR [rax+0x0]
  402a68:	mov    r9d,0x10
  402a6e:	mov    r8d,0x6
  402a74:	mov    ecx,0x3
  402a79:	mov    edx,0xfffffff7
  402a7e:	mov    esi,0x30f1
  402a83:	mov    rdi,rbx
  402a86:	xor    eax,eax
  402a88:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402a8d:	push   0x3
  402a8f:	xor    eax,eax
  402a91:	mov    r9d,0x3
  402a97:	push   0x7
  402a99:	mov    r8d,0xffffffd0
  402a9f:	mov    ecx,0x10
  402aa4:	mov    edx,0x3
  402aa9:	mov    esi,0x3167
  402aae:	mov    rdi,rbx
  402ab1:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402ab6:	pop    r13
  402ab8:	pop    rax
  402ab9:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402abe:	xchg   ax,ax
  402ac0:	mov    esi,0x30c1
  402ac5:	mov    rdi,rbx
  402ac8:	xor    eax,eax
  402aca:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402acf:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402ad4:	nop    DWORD PTR [rax+0x0]
  402ad8:	xor    eax,eax
  402ada:	mov    esi,0x263e
  402adf:	mov    rdi,rbx
  402ae2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402ae7:	cmp    ebp,0x3d
  402aea:	je     403c2d <__sprintf_chk@plt+0x286d>
  402af0:	mov    ecx,0x10
  402af5:	mov    edx,0xfffffff7
  402afa:	mov    esi,0x30c6
  402aff:	mov    rdi,rbx
  402b02:	xor    eax,eax
  402b04:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402b09:	jmp    402740 <__sprintf_chk@plt+0x1380>
  402b0e:	xchg   ax,ax
  402b10:	push   0x10
  402b12:	mov    r9d,0x8
  402b18:	mov    r8d,0x18
  402b1e:	push   0x10
  402b20:	mov    ecx,0x4
  402b25:	mov    edx,0x4
  402b2a:	mov    esi,0x3017
  402b2f:	mov    rdi,rbx
  402b32:	xor    eax,eax
  402b34:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402b39:	mov    r9d,0xfffff484
  402b3f:	mov    edx,0x4
  402b44:	xor    eax,eax
  402b46:	mov    r8d,r9d
  402b49:	mov    ecx,0xfb
  402b4e:	mov    esi,0x30ad
  402b53:	mov    rdi,rbx
  402b56:	mov    DWORD PTR [rsp],0xc
  402b5d:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402b62:	pop    rax
  402b63:	pop    rdx
  402b64:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402b69:	nop    DWORD PTR [rax+0x0]
  402b70:	sub    rsp,0x8
  402b74:	push   0x10
  402b76:	mov    r9d,0xffffffff
  402b7c:	mov    r8d,0x8
  402b82:	push   0x4
  402b84:	mov    ecx,0x18
  402b89:	mov    edx,0xfffffff4
  402b8e:	push   0x4
  402b90:	mov    esi,0x2f88
  402b95:	mov    rdi,rbx
  402b98:	xor    eax,eax
  402b9a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402b9f:	add    rsp,0x20
  402ba3:	push   0xc
  402ba5:	mov    r9d,0x4
  402bab:	mov    r8d,0x2
  402bb1:	push   0xfffffffffffff484
  402bb6:	mov    ecx,0x6
  402bbb:	mov    edx,0x10
  402bc0:	push   0xfffffffffffff484
  402bc5:	mov    esi,0x2fe7
  402bca:	mov    rdi,rbx
  402bcd:	push   0xfb
  402bd2:	xor    eax,eax
  402bd4:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402bd9:	add    rsp,0x20
  402bdd:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402be2:	nop    WORD PTR [rax+rax*1+0x0]
  402be8:	push   0xffffffffffffffff
  402bea:	mov    r9d,0x18
  402bf0:	mov    r8d,0x8
  402bf6:	push   0x8
  402bf8:	mov    ecx,0x1c
  402bfd:	mov    edx,0xfffffff4
  402c02:	push   0xfffffffffffffffb
  402c04:	mov    esi,0x2e88
  402c09:	mov    rdi,rbx
  402c0c:	push   0xc
  402c0e:	xor    eax,eax
  402c10:	push   0x14
  402c12:	push   0x6
  402c14:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402c19:	add    rsp,0x28
  402c1d:	push   0x10
  402c1f:	mov    r9d,0x10
  402c25:	mov    r8d,0x10
  402c2b:	push   0x2
  402c2d:	mov    ecx,0x4
  402c32:	mov    edx,0x4
  402c37:	push   0x6
  402c39:	mov    esi,0x2ed5
  402c3e:	mov    rdi,rbx
  402c41:	xor    eax,eax
  402c43:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402c48:	add    rsp,0x18
  402c4c:	push   0xc
  402c4e:	mov    r9d,0xfffffffb
  402c54:	mov    r8d,0x2
  402c5a:	push   0xfffffffffffff484
  402c5f:	mov    ecx,0x6
  402c64:	mov    edx,0x10
  402c69:	push   0xfffffffffffff484
  402c6e:	mov    esi,0x2f2c
  402c73:	mov    rdi,rbx
  402c76:	push   0xfb
  402c7b:	xor    eax,eax
  402c7d:	push   0x4
  402c7f:	push   0x10
  402c81:	push   0x10
  402c83:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402c88:	add    rsp,0x40
  402c8c:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402c91:	nop    DWORD PTR [rax+0x0]
  402c98:	sub    rsp,0x8
  402c9c:	push   0x4
  402c9e:	mov    rdi,rbx
  402ca1:	xor    eax,eax
  402ca3:	push   0x4
  402ca5:	mov    r9d,0x8
  402cab:	mov    r8d,0x18
  402cb1:	push   0xffffffffffffffff
  402cb3:	mov    ecx,0xfffeffff
  402cb8:	mov    edx,0xfffffff4
  402cbd:	mov    esi,0x2dc3
  402cc2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402cc7:	add    rsp,0x18
  402ccb:	push   0xfb
  402cd0:	mov    rdi,rbx
  402cd3:	xor    eax,eax
  402cd5:	push   0x4
  402cd7:	mov    r9d,0x2
  402cdd:	mov    r8d,0x6
  402ce3:	push   0xfffffffffffffffb
  402ce5:	mov    ecx,0x10
  402cea:	mov    edx,0x10
  402cef:	mov    esi,0x2e1f
  402cf4:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402cf9:	mov    ecx,0xfffff484
  402cfe:	add    rsp,0x20
  402d02:	mov    r8d,0xc
  402d08:	mov    edx,ecx
  402d0a:	mov    esi,0x2e73
  402d0f:	mov    rdi,rbx
  402d12:	xor    eax,eax
  402d14:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402d19:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402d1e:	xchg   ax,ax
  402d20:	push   0x1
  402d22:	mov    rdi,rbx
  402d25:	xor    eax,eax
  402d27:	push   0x6
  402d29:	mov    r9d,0xffffffff
  402d2f:	mov    r8d,0x8
  402d35:	push   0x10
  402d37:	mov    ecx,0x18
  402d3c:	mov    edx,0xfffffff4
  402d41:	push   0x10
  402d43:	mov    esi,0x2d52
  402d48:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402d4d:	add    rsp,0x20
  402d51:	mov    edx,0xffffffff
  402d56:	mov    esi,0x2db2
  402d5b:	mov    rdi,rbx
  402d5e:	xor    eax,eax
  402d60:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402d65:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402d6a:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	sub    rsp,0x8
  402d74:	push   0xffffffffffffffff
  402d76:	mov    r9d,0x18
  402d7c:	mov    r8d,0x8
  402d82:	push   0x8
  402d84:	mov    ecx,0x1c
  402d89:	mov    edx,0xfffffff4
  402d8e:	push   0xfffffffffffffffb
  402d90:	mov    esi,0x2cb5
  402d95:	mov    rdi,rbx
  402d98:	push   0xc
  402d9a:	xor    eax,eax
  402d9c:	push   0x14
  402d9e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402da3:	add    rsp,0x28
  402da7:	push   0x1
  402da9:	mov    ecx,0x10
  402dae:	mov    esi,0x2d0a
  402db3:	mov    r9d,0x6
  402db9:	mov    r8d,0x10
  402dbf:	mov    edx,0xffffffff
  402dc4:	mov    rdi,rbx
  402dc7:	xor    eax,eax
  402dc9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402dce:	pop    rcx
  402dcf:	pop    rsi
  402dd0:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402dd5:	nop    DWORD PTR [rax]
  402dd8:	push   0x10
  402dda:	mov    r9d,0x8
  402de0:	mov    r8d,0x18
  402de6:	push   0xffffffffffffffff
  402de8:	mov    ecx,0xfffeffff
  402ded:	mov    edx,0xfffffff4
  402df2:	mov    esi,0x2c0f
  402df7:	mov    rdi,rbx
  402dfa:	xor    eax,eax
  402dfc:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402e01:	mov    r8d,0x1
  402e07:	mov    rdi,rbx
  402e0a:	mov    r9d,0xffffffff
  402e10:	mov    ecx,0x6
  402e15:	mov    edx,0x10
  402e1a:	mov    esi,0x2c85
  402e1f:	xor    eax,eax
  402e21:	mov    DWORD PTR [rsp],0xfffffffb
  402e28:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402e2d:	pop    rdi
  402e2e:	pop    r8
  402e30:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402e35:	nop    DWORD PTR [rax]
  402e38:	mov    edx,0x8
  402e3d:	mov    esi,0x2bfb
  402e42:	mov    rdi,rbx
  402e45:	xor    eax,eax
  402e47:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402e4c:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402e51:	nop    DWORD PTR [rax+0x0]
  402e58:	mov    edx,0x8
  402e5d:	mov    esi,0x2be7
  402e62:	mov    rdi,rbx
  402e65:	xor    eax,eax
  402e67:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402e6c:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402e71:	nop    DWORD PTR [rax+0x0]
  402e78:	sub    rsp,0x8
  402e7c:	push   0xfffffffffffffff4
  402e7e:	mov    r9d,0x10
  402e84:	mov    r8d,0x10
  402e8a:	mov    ecx,0xfffff46c
  402e8f:	mov    edx,0xfffff468
  402e94:	mov    esi,0x2b84
  402e99:	mov    rdi,rbx
  402e9c:	xor    eax,eax
  402e9e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402ea3:	pop    r9
  402ea5:	pop    r10
  402ea7:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402eac:	nop    DWORD PTR [rax+0x0]
  402eb0:	sub    rsp,0x8
  402eb4:	push   0xfffffffffffffff4
  402eb6:	mov    r9d,0x10
  402ebc:	mov    r8d,0xfffff46c
  402ec2:	mov    ecx,0xfffff468
  402ec7:	mov    edx,0x10
  402ecc:	mov    esi,0x2b08
  402ed1:	mov    rdi,rbx
  402ed4:	xor    eax,eax
  402ed6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402edb:	pop    r11
  402edd:	pop    r13
  402edf:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402ee4:	nop    DWORD PTR [rax+0x0]
  402ee8:	mov    r8d,0xfffffff7
  402eee:	mov    ecx,0x10
  402ef3:	mov    edx,0x10
  402ef8:	mov    esi,0x2ac5
  402efd:	mov    rdi,rbx
  402f00:	xor    eax,eax
  402f02:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402f07:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402f0c:	nop    DWORD PTR [rax+0x0]
  402f10:	mov    r9d,0x10
  402f16:	mov    r8d,0x10
  402f1c:	mov    ecx,0x28
  402f21:	mov    edx,0xfffe0000
  402f26:	mov    esi,0x2a8d
  402f2b:	mov    rdi,rbx
  402f2e:	xor    eax,eax
  402f30:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402f35:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402f3a:	nop    WORD PTR [rax+rax*1+0x0]
  402f40:	mov    ecx,0x10
  402f45:	mov    edx,0x14
  402f4a:	mov    esi,0x2a65
  402f4f:	mov    rdi,rbx
  402f52:	xor    eax,eax
  402f54:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402f59:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402f5e:	xchg   ax,ax
  402f60:	mov    ecx,0x10
  402f65:	mov    edx,0x14
  402f6a:	mov    esi,0x2a38
  402f6f:	mov    rdi,rbx
  402f72:	xor    eax,eax
  402f74:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402f79:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402f7e:	xchg   ax,ax
  402f80:	sub    rsp,0x8
  402f84:	push   0xfffffffffffff448
  402f89:	mov    r9d,0x4
  402f8f:	mov    r8d,0xfffffffb
  402f95:	push   0x6
  402f97:	mov    ecx,0x10
  402f9c:	mov    edx,0x14
  402fa1:	push   0x3
  402fa3:	mov    esi,0x29d8
  402fa8:	mov    rdi,rbx
  402fab:	push   0x4
  402fad:	xor    eax,eax
  402faf:	push   0x4
  402fb1:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402fb6:	add    rsp,0x30
  402fba:	jmp    402630 <__sprintf_chk@plt+0x1270>
  402fbf:	nop
  402fc0:	push   0xfffffffffffff448
  402fc5:	mov    rdi,rbx
  402fc8:	xor    eax,eax
  402fca:	push   0x3
  402fcc:	mov    r9d,0xfffffffc
  402fd2:	mov    r8d,0x10
  402fd8:	push   0x4
  402fda:	mov    ecx,0x6
  402fdf:	mov    edx,0x14
  402fe4:	push   0xfffffffffffffff6
  402fe6:	mov    esi,0x296c
  402feb:	push   0xfffffffffffffffc
  402fed:	push   0x4
  402fef:	call   404bf0 <__sprintf_chk@plt+0x3830>
  402ff4:	add    rsp,0x30
  402ff8:	mov    esi,0x29cc
  402ffd:	mov    rdi,rbx
  403000:	xor    eax,eax
  403002:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403007:	jmp    402630 <__sprintf_chk@plt+0x1270>
  40300c:	nop    DWORD PTR [rax+0x0]
  403010:	mov    ecx,0x10
  403015:	mov    edx,0x14
  40301a:	mov    esi,0x2943
  40301f:	mov    rdi,rbx
  403022:	xor    eax,eax
  403024:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403029:	jmp    402630 <__sprintf_chk@plt+0x1270>
  40302e:	xchg   ax,ax
  403030:	mov    edx,0xffffffff
  403035:	mov    esi,0x2913
  40303a:	mov    rdi,rbx
  40303d:	xor    eax,eax
  40303f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403044:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403049:	nop    DWORD PTR [rax+0x0]
  403050:	mov    esi,0x28f6
  403055:	mov    rdi,rbx
  403058:	xor    eax,eax
  40305a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40305f:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403064:	nop    DWORD PTR [rax+0x0]
  403068:	mov    esi,0x28d4
  40306d:	mov    rdi,rbx
  403070:	xor    eax,eax
  403072:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403077:	jmp    402630 <__sprintf_chk@plt+0x1270>
  40307c:	nop    DWORD PTR [rax+0x0]
  403080:	mov    esi,0x28b1
  403085:	mov    rdi,rbx
  403088:	xor    eax,eax
  40308a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40308f:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403094:	nop    DWORD PTR [rax+0x0]
  403098:	mov    edx,0xfffffff5
  40309d:	mov    esi,0x288c
  4030a2:	mov    rdi,rbx
  4030a5:	xor    eax,eax
  4030a7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4030ac:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4030b1:	nop    DWORD PTR [rax+0x0]
  4030b8:	mov    edx,0xfffffffb
  4030bd:	mov    esi,0x288c
  4030c2:	mov    rdi,rbx
  4030c5:	xor    eax,eax
  4030c7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4030cc:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4030d1:	nop    DWORD PTR [rax+0x0]
  4030d8:	mov    ecx,0x10
  4030dd:	mov    edx,0x10
  4030e2:	mov    esi,0x2838
  4030e7:	mov    rdi,rbx
  4030ea:	xor    eax,eax
  4030ec:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4030f1:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4030f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403100:	mov    rdi,rbx
  403103:	xor    eax,eax
  403105:	mov    esi,0x263a
  40310a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40310f:	mov    ecx,0xfffeffff
  403114:	mov    rdi,rbx
  403117:	xor    eax,eax
  403119:	mov    edx,ecx
  40311b:	mov    esi,0x27d2
  403120:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403125:	mov    esi,0x281a
  40312a:	mov    rdi,rbx
  40312d:	xor    eax,eax
  40312f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403134:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403139:	nop    DWORD PTR [rax+0x0]
  403140:	xor    eax,eax
  403142:	mov    esi,0x263a
  403147:	mov    rdi,rbx
  40314a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40314f:	cmp    ebp,0x1d
  403152:	jne    403763 <__sprintf_chk@plt+0x23a3>
  403158:	mov    edx,0xfffeffff
  40315d:	mov    esi,0x27b8
  403162:	mov    rdi,rbx
  403165:	xor    eax,eax
  403167:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40316c:	mov    esi,0x2815
  403171:	mov    rdi,rbx
  403174:	xor    eax,eax
  403176:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40317b:	jmp    402740 <__sprintf_chk@plt+0x1380>
  403180:	mov    rdi,rbx
  403183:	xor    eax,eax
  403185:	mov    esi,0x263a
  40318a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40318f:	mov    rdi,rbx
  403192:	xor    eax,eax
  403194:	mov    edx,0xfffeffff
  403199:	mov    esi,0x279e
  40319e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4031a3:	mov    esi,0x27f5
  4031a8:	mov    rdi,rbx
  4031ab:	xor    eax,eax
  4031ad:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4031b2:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4031b7:	nop    WORD PTR [rax+rax*1+0x0]
  4031c0:	xor    eax,eax
  4031c2:	mov    esi,0x263a
  4031c7:	mov    rdi,rbx
  4031ca:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4031cf:	mov    eax,r12d
  4031d2:	mul    r14d
  4031d5:	shr    edx,0x2
  4031d8:	je     403b21 <__sprintf_chk@plt+0x2761>
  4031de:	cmp    edx,0x1
  4031e1:	je     403b08 <__sprintf_chk@plt+0x2748>
  4031e7:	mov    ecx,0xfffeffff
  4031ec:	mov    edx,ecx
  4031ee:	mov    esi,0x277b
  4031f3:	mov    rdi,rbx
  4031f6:	xor    eax,eax
  4031f8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4031fd:	nop    DWORD PTR [rax]
  403200:	mov    esi,0x25a5
  403205:	mov    rdi,rbx
  403208:	xor    eax,eax
  40320a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40320f:	jmp    402740 <__sprintf_chk@plt+0x1380>
  403214:	nop    DWORD PTR [rax+0x0]
  403218:	xor    eax,eax
  40321a:	mov    esi,0x263a
  40321f:	mov    rdi,rbx
  403222:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403227:	mov    eax,r12d
  40322a:	mul    r14d
  40322d:	shr    edx,0x2
  403230:	je     403b53 <__sprintf_chk@plt+0x2793>
  403236:	cmp    edx,0x1
  403239:	je     403b3a <__sprintf_chk@plt+0x277a>
  40323f:	mov    ecx,0xfffeffff
  403244:	mov    edx,ecx
  403246:	mov    esi,0x2724
  40324b:	mov    rdi,rbx
  40324e:	xor    eax,eax
  403250:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403255:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403257:	nop    WORD PTR [rax+rax*1+0x0]
  403260:	xor    eax,eax
  403262:	mov    esi,0x263a
  403267:	mov    rdi,rbx
  40326a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40326f:	mov    eax,r12d
  403272:	mul    r14d
  403275:	shr    edx,0x2
  403278:	je     403b85 <__sprintf_chk@plt+0x27c5>
  40327e:	cmp    edx,0x1
  403281:	je     403b6c <__sprintf_chk@plt+0x27ac>
  403287:	mov    ecx,0xfffeffff
  40328c:	mov    edx,ecx
  40328e:	mov    esi,0x26cd
  403293:	mov    rdi,rbx
  403296:	xor    eax,eax
  403298:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40329d:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  4032a2:	nop    WORD PTR [rax+rax*1+0x0]
  4032a8:	xor    eax,eax
  4032aa:	mov    esi,0x24c2
  4032af:	mov    rdi,rbx
  4032b2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4032b7:	cmp    ebp,0xa
  4032ba:	je     403ad1 <__sprintf_chk@plt+0x2711>
  4032c0:	mov    ecx,0xfffe0000
  4032c5:	mov    edx,0xfffffff5
  4032ca:	mov    esi,0x2503
  4032cf:	mov    rdi,rbx
  4032d2:	xor    eax,eax
  4032d4:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4032d9:	jmp    402740 <__sprintf_chk@plt+0x1380>
  4032de:	xchg   ax,ax
  4032e0:	endbr64 
  4032e4:	xor    eax,eax
  4032e6:	cmp    ebp,0x8
  4032e9:	sete   al
  4032ec:	mov    DWORD PTR [rsp+0xc],eax
  4032f0:	mov    esi,0x249f
  4032f5:	mov    rdi,rbx
  4032f8:	xor    eax,eax
  4032fa:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4032ff:	xor    eax,eax
  403301:	mov    edx,0xfffeffff
  403306:	mov    esi,0x24a7
  40330b:	mov    rdi,rbx
  40330e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403313:	mov    eax,DWORD PTR [rsp+0xc]
  403317:	test   eax,eax
  403319:	je     40361d <__sprintf_chk@plt+0x225d>
  40331f:	xor    eax,eax
  403321:	mov    esi,0x23da
  403326:	mov    rdi,rbx
  403329:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40332e:	xor    eax,eax
  403330:	mov    esi,0x23ec
  403335:	mov    rdi,rbx
  403338:	mov    edx,0xfffe0000
  40333d:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403342:	xor    eax,eax
  403344:	mov    esi,0x2399
  403349:	mov    rdi,rbx
  40334c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403351:	cmp    r13d,0x1
  403355:	ja     4035a7 <__sprintf_chk@plt+0x21e7>
  40335b:	sub    rsp,0x8
  40335f:	push   0xfffffffffffffff3
  403361:	mov    ecx,0xfffffff5
  403366:	mov    r9d,0xfffffff4
  40336c:	mov    edx,ecx
  40336e:	mov    r8d,0xfffffffd
  403374:	mov    esi,0x240f
  403379:	mov    rdi,rbx
  40337c:	xor    eax,eax
  40337e:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403383:	mov    edx,0x10
  403388:	mov    r8d,0x10
  40338e:	mov    ecx,0x6
  403393:	mov    esi,0x2450
  403398:	mov    rdi,rbx
  40339b:	xor    eax,eax
  40339d:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4033a2:	xor    eax,eax
  4033a4:	mov    esi,0x2464
  4033a9:	mov    rdi,rbx
  4033ac:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4033b1:	pop    rax
  4033b2:	pop    rdx
  4033b3:	mov    esi,0x246e
  4033b8:	mov    rdi,rbx
  4033bb:	xor    eax,eax
  4033bd:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4033c2:	jmp    402740 <__sprintf_chk@plt+0x1380>
  4033c7:	nop    WORD PTR [rax+rax*1+0x0]
  4033d0:	mov    r8d,0x80000000
  4033d6:	xor    ecx,ecx
  4033d8:	mov    edx,0xfffeffff
  4033dd:	mov    esi,0x2589
  4033e2:	mov    rdi,rbx
  4033e5:	xor    eax,eax
  4033e7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4033ec:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4033f1:	nop    DWORD PTR [rax+0x0]
  4033f8:	mov    ecx,0xfffffffd
  4033fd:	mov    edx,0xfffffffe
  403402:	mov    esi,0x2564
  403407:	mov    rdi,rbx
  40340a:	xor    eax,eax
  40340c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403411:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403420:	xor    eax,eax
  403422:	mov    r8d,0xffffffc2
  403428:	mov    ecx,0x20
  40342d:	mov    edx,0xffffffcc
  403432:	mov    esi,0x36f1
  403437:	mov    rdi,rbx
  40343a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40343f:	cmp    ebp,0x57
  403442:	je     403aef <__sprintf_chk@plt+0x272f>
  403448:	mov    esi,0x2399
  40344d:	mov    rdi,rbx
  403450:	xor    eax,eax
  403452:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403457:	mov    edx,0xffffffff
  40345c:	mov    esi,0x3719
  403461:	mov    rdi,rbx
  403464:	xor    eax,eax
  403466:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40346b:	jmp    402740 <__sprintf_chk@plt+0x1380>
  403470:	sub    rsp,0x8
  403474:	push   0x18
  403476:	mov    r9d,0x20
  40347c:	mov    r8d,0xa0
  403482:	mov    ecx,0x10
  403487:	mov    edx,0x18
  40348c:	mov    esi,0x37bf
  403491:	mov    rdi,rbx
  403494:	xor    eax,eax
  403496:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40349b:	pop    r8
  40349d:	pop    r9
  40349f:	cmp    ebp,0x5b
  4034a2:	je     403a95 <__sprintf_chk@plt+0x26d5>
  4034a8:	mov    esi,0x37e1
  4034ad:	mov    rdi,rbx
  4034b0:	xor    eax,eax
  4034b2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4034b7:	mov    edx,0xfffff530
  4034bc:	mov    esi,0x37e9
  4034c1:	mov    rdi,rbx
  4034c4:	xor    eax,eax
  4034c6:	mov    ecx,0xfffffffe
  4034cb:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4034d0:	mov    edx,0xfffff520
  4034d5:	mov    esi,0x37f8
  4034da:	mov    rdi,rbx
  4034dd:	xor    eax,eax
  4034df:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4034e4:	mov    r9d,0x18
  4034ea:	mov    r8d,0x10
  4034f0:	mov    ecx,0xffffffff
  4034f5:	mov    edx,0xfffff530
  4034fa:	mov    esi,0x37fe
  4034ff:	mov    rdi,rbx
  403502:	xor    eax,eax
  403504:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403509:	jmp    402740 <__sprintf_chk@plt+0x1380>
  40350e:	xchg   ax,ax
  403510:	xor    eax,eax
  403512:	mov    esi,0x263a
  403517:	mov    rdi,rbx
  40351a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40351f:	mov    eax,r12d
  403522:	mul    r14d
  403525:	shr    edx,0x2
  403528:	je     403bb7 <__sprintf_chk@plt+0x27f7>
  40352e:	cmp    edx,0x1
  403531:	je     403b9e <__sprintf_chk@plt+0x27de>
  403537:	mov    ecx,0xfffeffff
  40353c:	mov    edx,ecx
  40353e:	mov    esi,0x2676
  403543:	mov    rdi,rbx
  403546:	xor    eax,eax
  403548:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40354d:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403552:	nop    WORD PTR [rax+rax*1+0x0]
  403558:	xor    eax,eax
  40355a:	mov    edx,0xfffffffb
  40355f:	mov    esi,0x2484
  403564:	mov    rdi,rbx
  403567:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40356c:	cmp    ebp,0x6
  40356f:	je     40397f <__sprintf_chk@plt+0x25bf>
  403575:	mov    esi,0x1e72
  40357a:	mov    rdi,rbx
  40357d:	xor    eax,eax
  40357f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403584:	mov    edx,0xfffe0000
  403589:	mov    esi,0x23fb
  40358e:	mov    rdi,rbx
  403591:	xor    eax,eax
  403593:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403598:	mov    esi,0x2399
  40359d:	mov    rdi,rbx
  4035a0:	xor    eax,eax
  4035a2:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4035a7:	mov    edx,0xfffffff5
  4035ac:	mov    rdi,rbx
  4035af:	xor    eax,eax
  4035b1:	mov    esi,0x2473
  4035b6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4035bb:	mov    rdi,rbx
  4035be:	xor    eax,eax
  4035c0:	mov    esi,0x245f
  4035c5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4035ca:	mov    esi,0x247f
  4035cf:	mov    rdi,rbx
  4035d2:	xor    eax,eax
  4035d4:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4035d9:	jmp    402740 <__sprintf_chk@plt+0x1380>
  4035de:	xchg   ax,ax
  4035e0:	xor    eax,eax
  4035e2:	cmp    ebp,0x4
  4035e5:	sete   al
  4035e8:	mov    DWORD PTR [rsp+0xc],eax
  4035ec:	mov    esi,0x23ae
  4035f1:	mov    rdi,rbx
  4035f4:	xor    eax,eax
  4035f6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4035fb:	mov    ecx,0xfffeffff
  403600:	xor    eax,eax
  403602:	mov    edx,ecx
  403604:	mov    esi,0x23b6
  403609:	mov    rdi,rbx
  40360c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403611:	mov    eax,DWORD PTR [rsp+0xc]
  403615:	test   eax,eax
  403617:	jne    40331f <__sprintf_chk@plt+0x1f5f>
  40361d:	xor    eax,eax
  40361f:	mov    esi,0x23e3
  403624:	mov    rdi,rbx
  403627:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40362c:	xor    eax,eax
  40362e:	mov    esi,0x23fb
  403633:	mov    rdi,rbx
  403636:	mov    edx,0xfffe0000
  40363b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403640:	xor    eax,eax
  403642:	mov    esi,0x2399
  403647:	mov    rdi,rbx
  40364a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40364f:	cmp    r13d,0x1
  403653:	ja     4035a7 <__sprintf_chk@plt+0x21e7>
  403659:	sub    rsp,0x8
  40365d:	push   0xfffffffffffffff3
  40365f:	mov    ecx,0xfffffff5
  403664:	mov    r9d,0xfffffff4
  40366a:	mov    edx,ecx
  40366c:	mov    r8d,0xfffffffd
  403672:	mov    esi,0x240f
  403677:	mov    rdi,rbx
  40367a:	xor    eax,eax
  40367c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403681:	mov    ecx,0x6
  403686:	mov    r8d,0x10
  40368c:	mov    edx,0x10
  403691:	mov    esi,0x2450
  403696:	mov    rdi,rbx
  403699:	xor    eax,eax
  40369b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4036a0:	mov    esi,0x2468
  4036a5:	mov    rdi,rbx
  4036a8:	xor    eax,eax
  4036aa:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4036af:	pop    rcx
  4036b0:	pop    rsi
  4036b1:	jmp    4033b3 <__sprintf_chk@plt+0x1ff3>
  4036b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036c0:	mov    esi,0x2547
  4036c5:	mov    rdi,rbx
  4036c8:	xor    eax,eax
  4036ca:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4036cf:	jmp    402630 <__sprintf_chk@plt+0x1270>
  4036d4:	nop    DWORD PTR [rax+0x0]
  4036d8:	xor    eax,eax
  4036da:	mov    edx,0xfffffffe
  4036df:	mov    esi,0x2530
  4036e4:	mov    rdi,rbx
  4036e7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4036ec:	mov    eax,ebp
  4036ee:	and    eax,0xfffffffd
  4036f1:	cmp    eax,0xc
  4036f4:	jne    403950 <__sprintf_chk@plt+0x2590>
  4036fa:	xor    eax,eax
  4036fc:	mov    esi,0x2388
  403701:	mov    rdi,rbx
  403704:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403709:	lea    eax,[rbp-0xc]
  40370c:	cmp    eax,0x1
  40370f:	jbe    40396b <__sprintf_chk@plt+0x25ab>
  403715:	mov    edx,0xfffe0000
  40371a:	mov    esi,0x238d
  40371f:	mov    rdi,rbx
  403722:	xor    eax,eax
  403724:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403729:	jmp    402740 <__sprintf_chk@plt+0x1380>
  40372e:	xchg   ax,ax
  403730:	mov    rdi,rbx
  403733:	xor    eax,eax
  403735:	mov    r8d,0xfffffff4
  40373b:	mov    ecx,0xc
  403740:	mov    edx,0xfffffffb
  403745:	mov    esi,0x25c0
  40374a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40374f:	mov    esi,0x2610
  403754:	mov    rdi,rbx
  403757:	xor    eax,eax
  403759:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40375e:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403763:	mov    ecx,0xfffeffff
  403768:	mov    edx,ecx
  40376a:	mov    esi,0x27d2
  40376f:	mov    rdi,rbx
  403772:	xor    eax,eax
  403774:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403779:	jmp    40316c <__sprintf_chk@plt+0x1dac>
  40377e:	xchg   ax,ax
  403780:	mov    ecx,0xfffeffff
  403785:	xor    eax,eax
  403787:	mov    edx,ecx
  403789:	mov    esi,0x2355
  40378e:	mov    rdi,rbx
  403791:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403796:	cmp    ebp,0x2
  403799:	je     403c82 <__sprintf_chk@plt+0x28c2>
  40379f:	cmp    ebp,0x3
  4037a2:	je     403c6e <__sprintf_chk@plt+0x28ae>
  4037a8:	cmp    ebp,0x1
  4037ab:	je     403c5a <__sprintf_chk@plt+0x289a>
  4037b1:	mov    esi,0x1ce3
  4037b6:	mov    rdi,rbx
  4037b9:	xor    eax,eax
  4037bb:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4037c0:	jmp    403715 <__sprintf_chk@plt+0x2355>
  4037c5:	nop    DWORD PTR [rax]
  4037c8:	cmp    dl,0x6f
  4037cb:	jne    404301 <__sprintf_chk@plt+0x2f41>
  4037d1:	cmp    BYTE PTR [rax+0x2],0x0
  4037d5:	lea    edx,[rbx+0x1]
  4037d8:	jne    404301 <__sprintf_chk@plt+0x2f41>
  4037de:	movsxd rax,edx
  4037e1:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  4037e6:	test   rax,rax
  4037e9:	je     404301 <__sprintf_chk@plt+0x2f41>
  4037ef:	mov    QWORD PTR [rsp+0x28],rax
  4037f4:	add    ebx,0x2
  4037f7:	movsxd rdx,ebx
  4037fa:	mov    rax,QWORD PTR [rbp+rdx*8+0x0]
  4037ff:	test   rax,rax
  403802:	je     4014bb <__sprintf_chk@plt+0xfb>
  403808:	cmp    BYTE PTR [rax],0x2d
  40380b:	jne    4014bb <__sprintf_chk@plt+0xfb>
  403811:	movzx  edx,BYTE PTR [rax+0x1]
  403815:	cmp    dl,0x2d
  403818:	jne    401445 <__sprintf_chk@plt+0x85>
  40381e:	cmp    BYTE PTR [rax+0x2],0x0
  403822:	jne    404301 <__sprintf_chk@plt+0x2f41>
  403828:	inc    ebx
  40382a:	jmp    4014b8 <__sprintf_chk@plt+0xf8>
  40382f:	nop
  403830:	xor    eax,eax
  403832:	mov    edx,0xfffeffff
  403837:	mov    esi,0x35c4
  40383c:	mov    rdi,rbx
  40383f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403844:	mov    edx,0xfffeffff
  403849:	xor    eax,eax
  40384b:	mov    esi,0x35ca
  403850:	mov    rdi,rbx
  403853:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403858:	xor    eax,eax
  40385a:	mov    esi,0x35eb
  40385f:	mov    rdi,rbx
  403862:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403867:	mov    edx,0xfffeffff
  40386c:	xor    eax,eax
  40386e:	mov    esi,0x35ef
  403873:	mov    rdi,rbx
  403876:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40387b:	xor    eax,eax
  40387d:	mov    esi,0x35f8
  403882:	mov    rdi,rbx
  403885:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40388a:	xor    eax,eax
  40388c:	mov    esi,0x3617
  403891:	mov    rdi,rbx
  403894:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403899:	xor    eax,eax
  40389b:	mov    esi,0x361c
  4038a0:	mov    rdi,rbx
  4038a3:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4038a8:	cmp    ebp,0x49
  4038ab:	je     403c41 <__sprintf_chk@plt+0x2881>
  4038b1:	cmp    ebp,0x4a
  4038b4:	jne    402918 <__sprintf_chk@plt+0x1558>
  4038ba:	mov    ecx,0x53
  4038bf:	mov    edx,0xfffe0000
  4038c4:	mov    esi,0x3633
  4038c9:	mov    rdi,rbx
  4038cc:	xor    eax,eax
  4038ce:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4038d3:	jmp    40292c <__sprintf_chk@plt+0x156c>
  4038d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038e0:	mov    edx,0x3
  4038e5:	mov    rdi,rbx
  4038e8:	xor    eax,eax
  4038ea:	mov    esi,0x3428
  4038ef:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4038f4:	mov    rdi,rbx
  4038f7:	xor    eax,eax
  4038f9:	mov    esi,0x347b
  4038fe:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403903:	mov    ecx,0xffffffd0
  403908:	mov    rdi,rbx
  40390b:	xor    eax,eax
  40390d:	mov    edx,0x10
  403912:	mov    esi,0x3486
  403917:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40391c:	mov    rdi,rbx
  40391f:	xor    eax,eax
  403921:	mov    edx,0xffffffff
  403926:	mov    esi,0x34c1
  40392b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403930:	mov    ecx,0x7
  403935:	mov    edx,0xfffffffd
  40393a:	mov    esi,0x34c8
  40393f:	mov    rdi,rbx
  403942:	xor    eax,eax
  403944:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403949:	jmp    40289f <__sprintf_chk@plt+0x14df>
  40394e:	xchg   ax,ax
  403950:	xor    eax,eax
  403952:	mov    esi,0x2383
  403957:	mov    rdi,rbx
  40395a:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40395f:	lea    eax,[rbp-0xc]
  403962:	cmp    eax,0x1
  403965:	ja     403715 <__sprintf_chk@plt+0x2355>
  40396b:	mov    esi,0x253c
  403970:	mov    rdi,rbx
  403973:	xor    eax,eax
  403975:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40397a:	jmp    403715 <__sprintf_chk@plt+0x2355>
  40397f:	mov    esi,0x23de
  403984:	mov    rdi,rbx
  403987:	xor    eax,eax
  403989:	call   404bf0 <__sprintf_chk@plt+0x3830>
  40398e:	mov    edx,0xfffe0000
  403993:	mov    esi,0x23ec
  403998:	jmp    40358e <__sprintf_chk@plt+0x21ce>
  40399d:	mov    edx,0x53
  4039a2:	mov    esi,0x367b
  4039a7:	mov    rdi,rbx
  4039aa:	xor    eax,eax
  4039ac:	call   404bf0 <__sprintf_chk@plt+0x3830>
  4039b1:	jmp    402731 <__sprintf_chk@plt+0x1371>
  4039b6:	mov    rdi,QWORD PTR [rsp+0x40]
  4039bb:	call   401330 <malloc@plt>
  4039c0:	mov    rsi,rax
  4039c3:	mov    rdi,rbx
  4039c6:	mov    QWORD PTR [rsp+0x38],rax
  4039cb:	call   4056d0 <__sprintf_chk@plt+0x4310>
  4039d0:	mov    r12d,eax
  4039d3:	test   eax,eax
  4039d5:	jne    402775 <__sprintf_chk@plt+0x13b5>
  4039db:	mov    edi,DWORD PTR [rsp+0x18]
  4039df:	lea    rdx,[rip+0x56ab]        # 409091 <__sprintf_chk@plt+0x7cd1>
  4039e6:	lea    rsi,[rip+0x5728]        # 409115 <__sprintf_chk@plt+0x7d55>
  4039ed:	call   404700 <__sprintf_chk@plt+0x3340>
  4039f2:	mov    r14d,DWORD PTR [rsp+0x48]
  4039f7:	mov    edi,DWORD PTR [rsp+0x4c]
  4039fb:	mov    QWORD PTR [rsp+0x80],rax
  403a03:	add    edi,r14d
  403a06:	inc    edi
  403a08:	movsxd rdi,edi
  403a0b:	shl    rdi,0x4
  403a0f:	call   401330 <malloc@plt>
  403a14:	movsxd rdi,r14d
  403a17:	shl    rdi,0x2
  403a1b:	mov    QWORD PTR [rsp+0x68],rax
  403a20:	mov    DWORD PTR [rsp+0x50],0x0
  403a28:	call   401330 <malloc@plt>
  403a2d:	mov    QWORD PTR [rsp+0x78],rax
  403a32:	xor    ebp,ebp
  403a34:	lea    r13,[rip+0x5666]        # 4090a1 <__sprintf_chk@plt+0x7ce1>
  403a3b:	test   r14d,r14d
  403a3e:	jg     403a75 <__sprintf_chk@plt+0x26b5>
  403a40:	jmp    403c96 <__sprintf_chk@plt+0x28d6>
  403a45:	nop    DWORD PTR [rax]
  403a48:	mov    rdx,QWORD PTR [rsp+0x78]
  403a4d:	mov    esi,eax
  403a4f:	mov    DWORD PTR [rdx+rbp*4],eax
  403a52:	mov    rdx,0x4122e0
  403a59:	mov    rdi,rbx
  403a5c:	mov    rcx,QWORD PTR [rdx+rbp*8]
  403a60:	mov    rdx,r13
  403a63:	inc    rbp
  403a66:	call   404840 <__sprintf_chk@plt+0x3480>
  403a6b:	cmp    DWORD PTR [rsp+0x48],ebp
  403a6f:	jle    403c96 <__sprintf_chk@plt+0x28d6>
  403a75:	mov    esi,ebp
  403a77:	mov    rdi,rbx
  403a7a:	mov    r14d,ebp
  403a7d:	call   405d20 <__sprintf_chk@plt+0x4960>
  403a82:	test   eax,eax
  403a84:	jns    403a48 <__sprintf_chk@plt+0x2688>
  403a86:	or     r14d,0x22000000
  403a8d:	mov    r12d,r14d
  403a90:	jmp    402775 <__sprintf_chk@plt+0x13b5>
  403a95:	mov    rdi,rbx
  403a98:	xor    eax,eax
  403a9a:	mov    esi,0x37dd
  403a9f:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403aa4:	mov    rdi,rbx
  403aa7:	xor    eax,eax
  403aa9:	mov    ecx,0xfffffffe
  403aae:	mov    edx,0xfffff530
  403ab3:	mov    esi,0x37e9
  403ab8:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403abd:	mov    esi,0x37f3
  403ac2:	mov    rdi,rbx
  403ac5:	xor    eax,eax
  403ac7:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403acc:	jmp    4034e4 <__sprintf_chk@plt+0x2124>
  403ad1:	mov    ecx,0xfffffff5
  403ad6:	mov    edx,0xfffe0000
  403adb:	mov    esi,0x24d0
  403ae0:	mov    rdi,rbx
  403ae3:	xor    eax,eax
  403ae5:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403aea:	jmp    402630 <__sprintf_chk@plt+0x1270>
  403aef:	mov    edx,0x53
  403af4:	mov    esi,0x3710
  403af9:	mov    rdi,rbx
  403afc:	xor    eax,eax
  403afe:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b03:	jmp    403457 <__sprintf_chk@plt+0x2097>
  403b08:	mov    edx,0xfffeffff
  403b0d:	mov    esi,0x2761
  403b12:	mov    rdi,rbx
  403b15:	xor    eax,eax
  403b17:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b1c:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b21:	mov    edx,0xfffeffff
  403b26:	mov    esi,0x2747
  403b2b:	mov    rdi,rbx
  403b2e:	xor    eax,eax
  403b30:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b35:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b3a:	mov    edx,0xfffeffff
  403b3f:	mov    esi,0x270a
  403b44:	mov    rdi,rbx
  403b47:	xor    eax,eax
  403b49:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b4e:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b53:	mov    edx,0xfffeffff
  403b58:	mov    esi,0x26f0
  403b5d:	mov    rdi,rbx
  403b60:	xor    eax,eax
  403b62:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b67:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b6c:	mov    edx,0xfffeffff
  403b71:	mov    esi,0x26b3
  403b76:	mov    rdi,rbx
  403b79:	xor    eax,eax
  403b7b:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b80:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b85:	mov    edx,0xfffeffff
  403b8a:	mov    esi,0x2699
  403b8f:	mov    rdi,rbx
  403b92:	xor    eax,eax
  403b94:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403b99:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403b9e:	mov    edx,0xfffeffff
  403ba3:	mov    esi,0x265c
  403ba8:	mov    rdi,rbx
  403bab:	xor    eax,eax
  403bad:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403bb2:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403bb7:	mov    edx,0xfffeffff
  403bbc:	mov    esi,0x2642
  403bc1:	mov    rdi,rbx
  403bc4:	xor    eax,eax
  403bc6:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403bcb:	jmp    403200 <__sprintf_chk@plt+0x1e40>
  403bd0:	mov    esi,0x3471
  403bd5:	mov    rdi,rbx
  403bd8:	xor    eax,eax
  403bda:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403bdf:	mov    esi,0x347b
  403be4:	mov    rdi,rbx
  403be7:	xor    eax,eax
  403be9:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403bee:	mov    edx,0x10
  403bf3:	mov    esi,0x3486
  403bf8:	mov    ecx,0xffffffd0
  403bfd:	mov    rdi,rbx
  403c00:	xor    eax,eax
  403c02:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c07:	or     edx,0xffffffff
  403c0a:	mov    esi,0x34c1
  403c0f:	jmp    40286d <__sprintf_chk@plt+0x14ad>
  403c14:	mov    edx,0xfffe0000
  403c19:	mov    esi,0x3641
  403c1e:	mov    rdi,rbx
  403c21:	xor    eax,eax
  403c23:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c28:	jmp    40292c <__sprintf_chk@plt+0x156c>
  403c2d:	mov    esi,0x30c1
  403c32:	mov    rdi,rbx
  403c35:	xor    eax,eax
  403c37:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c3c:	jmp    402af0 <__sprintf_chk@plt+0x1730>
  403c41:	mov    edx,0xfffe0000
  403c46:	mov    esi,0x3629
  403c4b:	mov    rdi,rbx
  403c4e:	xor    eax,eax
  403c50:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c55:	jmp    40292c <__sprintf_chk@plt+0x156c>
  403c5a:	mov    esi,0x237e
  403c5f:	mov    rdi,rbx
  403c62:	xor    eax,eax
  403c64:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c69:	jmp    403715 <__sprintf_chk@plt+0x2355>
  403c6e:	mov    esi,0x2388
  403c73:	mov    rdi,rbx
  403c76:	xor    eax,eax
  403c78:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c7d:	jmp    403715 <__sprintf_chk@plt+0x2355>
  403c82:	mov    esi,0x2383
  403c87:	mov    rdi,rbx
  403c8a:	xor    eax,eax
  403c8c:	call   404bf0 <__sprintf_chk@plt+0x3830>
  403c91:	jmp    403715 <__sprintf_chk@plt+0x2355>
  403c96:	xor    r13d,r13d
  403c99:	cmp    DWORD PTR [rsp+0x4c],0x0
  403c9e:	lea    rbp,[rip+0x541f]        # 4090c4 <__sprintf_chk@plt+0x7d04>
  403ca5:	jg     403ccd <__sprintf_chk@plt+0x290d>
  403ca7:	jmp    403d08 <__sprintf_chk@plt+0x2948>
  403ca9:	nop    DWORD PTR [rax+0x0]
  403cb0:	sub    rsi,QWORD PTR [rsp+0x38]
  403cb5:	mov    rcx,r14
  403cb8:	mov    rdx,rbp
  403cbb:	mov    rdi,rbx
  403cbe:	call   404840 <__sprintf_chk@plt+0x3480>
  403cc3:	inc    r13
  403cc6:	cmp    DWORD PTR [rsp+0x4c],r13d
  403ccb:	jle    403d08 <__sprintf_chk@plt+0x2948>
  403ccd:	mov    r14,QWORD PTR [r15+r13*8]
  403cd1:	mov    rdi,r14
  403cd4:	call   401260 <strlen@plt>
  403cd9:	mov    rdx,QWORD PTR [rsp+0x60]
  403cde:	mov    rsi,QWORD PTR [rdx+r13*8]
  403ce2:	test   rsi,rsi
  403ce5:	je     40448e <__sprintf_chk@plt+0x30ce>
  403ceb:	cmp    eax,0x1
  403cee:	jle    403cb0 <__sprintf_chk@plt+0x28f0>
  403cf0:	cdqe   
  403cf2:	cmp    BYTE PTR [r14+rax*1-0x2],0x5f
  403cf8:	jne    403cb0 <__sprintf_chk@plt+0x28f0>
  403cfa:	cmp    BYTE PTR [r14+rax*1-0x1],0x5a
  403d00:	jne    403cb0 <__sprintf_chk@plt+0x28f0>
  403d02:	jmp    403cc3 <__sprintf_chk@plt+0x2903>
  403d04:	nop    DWORD PTR [rax+0x0]
  403d08:	lea    rcx,[rip+0x5406]        # 409115 <__sprintf_chk@plt+0x7d55>
  403d0f:	mov    esi,DWORD PTR [rsp+0x40]
  403d13:	mov    rdx,rcx
  403d16:	mov    rdi,rbx
  403d19:	call   404840 <__sprintf_chk@plt+0x3480>
  403d1e:	mov    rdi,rbx
  403d21:	dec    DWORD PTR [rsp+0x50]
  403d25:	call   4049f0 <__sprintf_chk@plt+0x3630>
  403d2a:	mov    eax,DWORD PTR [rsp+0x18]
  403d2e:	sub    eax,0x3
  403d31:	cmp    eax,0x1
  403d34:	jbe    4042c5 <__sprintf_chk@plt+0x2f05>
  403d3a:	mov    rdi,QWORD PTR [rsp+0x28]
  403d3f:	cmp    BYTE PTR [rdi],0x2d
  403d42:	je     4042db <__sprintf_chk@plt+0x2f1b>
  403d48:	lea    rsi,[rip+0x677b]        # 40a4ca <__sprintf_chk@plt+0x910a>
  403d4f:	call   401360 <fopen@plt>
  403d54:	mov    QWORD PTR [rsp+0x20],rax
  403d59:	test   rax,rax
  403d5c:	je     4044bd <__sprintf_chk@plt+0x30fd>
  403d62:	cmp    DWORD PTR [rsp+0x18],0xa
  403d67:	ja     4040fc <__sprintf_chk@plt+0x2d3c>
  403d6d:	mov    eax,DWORD PTR [rsp+0x18]
  403d71:	lea    rdx,[rip+0x78e0]        # 40b658 <__sprintf_chk@plt+0xa298>
  403d78:	movsxd rax,DWORD PTR [rdx+rax*4]
  403d7c:	add    rax,rdx
  403d7f:	notrack jmp rax
  403d82:	mov    rcx,QWORD PTR [rsp+0x20]
  403d87:	mov    edx,0x2b
  403d8c:	mov    esi,0x1
  403d91:	lea    rdi,[rip+0x74a8]        # 40b240 <__sprintf_chk@plt+0x9e80>
  403d98:	call   401380 <fwrite@plt>
  403d9d:	mov    rcx,QWORD PTR [rsp+0x20]
  403da2:	mov    edx,0xd
  403da7:	mov    esi,0x1
  403dac:	lea    rdi,[rip+0x5340]        # 4090f3 <__sprintf_chk@plt+0x7d33>
  403db3:	call   401380 <fwrite@plt>
  403db8:	mov    rcx,QWORD PTR [rsp+0x20]
  403dbd:	mov    edx,0xb
  403dc2:	mov    esi,0x1
  403dc7:	lea    rdi,[rip+0x5333]        # 409101 <__sprintf_chk@plt+0x7d41>
  403dce:	call   401380 <fwrite@plt>
  403dd3:	mov    rax,0x4122e0
  403dda:	lea    rcx,[rip+0x5281]        # 409062 <__sprintf_chk@plt+0x7ca2>
  403de1:	lea    rbp,[rax+0x8]
  403de5:	lea    r12,[rip+0x5321]        # 40910d <__sprintf_chk@plt+0x7d4d>
  403dec:	nop    DWORD PTR [rax+0x0]
  403df0:	mov    rdi,QWORD PTR [rsp+0x20]
  403df5:	mov    rdx,r12
  403df8:	mov    esi,0x1
  403dfd:	xor    eax,eax
  403dff:	add    rbp,0x8
  403e03:	call   401390 <__fprintf_chk@plt>
  403e08:	mov    rcx,QWORD PTR [rbp-0x8]
  403e0c:	test   rcx,rcx
  403e0f:	jne    403df0 <__sprintf_chk@plt+0x2a30>
  403e11:	mov    rcx,QWORD PTR [rsp+0x20]
  403e16:	mov    edx,0x3
  403e1b:	mov    esi,0x1
  403e20:	lea    rdi,[rip+0x52eb]        # 409112 <__sprintf_chk@plt+0x7d52>
  403e27:	call   401380 <fwrite@plt>
  403e2c:	mov    rcx,QWORD PTR [rsp+0x20]
  403e31:	mov    edx,0xb
  403e36:	mov    esi,0x1
  403e3b:	lea    rdi,[rip+0x52d4]        # 409116 <__sprintf_chk@plt+0x7d56>
  403e42:	call   401380 <fwrite@plt>
  403e47:	mov    rax,0x411fe0
  403e4e:	lea    rcx,[rip+0x5c93]        # 409ae8 <__sprintf_chk@plt+0x8728>
  403e55:	lea    rbp,[rax+0x8]
  403e59:	lea    r12,[rip+0x52ad]        # 40910d <__sprintf_chk@plt+0x7d4d>
  403e60:	mov    rdi,QWORD PTR [rsp+0x20]
  403e65:	mov    rdx,r12
  403e68:	mov    esi,0x1
  403e6d:	xor    eax,eax
  403e6f:	add    rbp,0x8
  403e73:	call   401390 <__fprintf_chk@plt>
  403e78:	mov    rcx,QWORD PTR [rbp-0x8]
  403e7c:	test   rcx,rcx
  403e7f:	jne    403e60 <__sprintf_chk@plt+0x2aa0>
  403e81:	mov    rcx,QWORD PTR [rsp+0x20]
  403e86:	mov    edx,0x3
  403e8b:	mov    esi,0x1
  403e90:	lea    rdi,[rip+0x527b]        # 409112 <__sprintf_chk@plt+0x7d52>
  403e97:	call   401380 <fwrite@plt>
  403e9c:	mov    rcx,QWORD PTR [rsp+0x20]
  403ea1:	mov    edx,0xe
  403ea6:	mov    esi,0x1
  403eab:	lea    rdi,[rip+0x5270]        # 409122 <__sprintf_chk@plt+0x7d62>
  403eb2:	call   401380 <fwrite@plt>
  403eb7:	mov    rax,0x411e80
  403ebe:	lea    rdx,[rip+0x51a2]        # 409067 <__sprintf_chk@plt+0x7ca7>
  403ec5:	lea    r13,[rax+0x8]
  403ec9:	lea    rbp,[rsp+0xa00]
  403ed1:	lea    r12,[rip+0x5259]        # 409131 <__sprintf_chk@plt+0x7d71>
  403ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ee0:	movzx  eax,BYTE PTR [rdx]
  403ee3:	mov    rcx,rbp
  403ee6:	test   al,al
  403ee8:	je     403f0d <__sprintf_chk@plt+0x2b4d>
  403eea:	nop    WORD PTR [rax+rax*1+0x0]
  403ef0:	lea    edi,[rax-0x41]
  403ef3:	cmp    dil,0x1a
  403ef7:	lea    esi,[rax+0x20]
  403efa:	cmovb  eax,esi
  403efd:	inc    rcx
  403f00:	mov    BYTE PTR [rcx-0x1],al
  403f03:	inc    rdx
  403f06:	movzx  eax,BYTE PTR [rdx]
  403f09:	test   al,al
  403f0b:	jne    403ef0 <__sprintf_chk@plt+0x2b30>
  403f0d:	mov    BYTE PTR [rcx],0x0
  403f10:	mov    rdi,QWORD PTR [rsp+0x20]
  403f15:	mov    rdx,r12
  403f18:	mov    rcx,rbp
  403f1b:	mov    esi,0x1
  403f20:	xor    eax,eax
  403f22:	add    r13,0x8
  403f26:	call   401390 <__fprintf_chk@plt>
  403f2b:	mov    rdx,QWORD PTR [r13-0x8]
  403f2f:	test   rdx,rdx
  403f32:	jne    403ee0 <__sprintf_chk@plt+0x2b20>
  403f34:	mov    rcx,QWORD PTR [rsp+0x20]
  403f39:	mov    edx,0x3
  403f3e:	mov    esi,0x1
  403f43:	lea    rdi,[rip+0x51ee]        # 409138 <__sprintf_chk@plt+0x7d78>
  403f4a:	call   401380 <fwrite@plt>
  403f4f:	mov    rcx,QWORD PTR [rsp+0x20]
  403f54:	mov    edx,0x10
  403f59:	mov    esi,0x1
  403f5e:	lea    rdi,[rip+0x51d7]        # 40913c <__sprintf_chk@plt+0x7d7c>
  403f65:	call   401380 <fwrite@plt>
  403f6a:	mov    rax,0x411de0
  403f71:	lea    rdx,[rip+0x50f5]        # 40906d <__sprintf_chk@plt+0x7cad>
  403f78:	lea    r12,[rax+0x8]
  403f7c:	lea    r13,[rip+0x51ae]        # 409131 <__sprintf_chk@plt+0x7d71>
  403f83:	nop    DWORD PTR [rax+rax*1+0x0]
  403f88:	movzx  eax,BYTE PTR [rdx]
  403f8b:	mov    rcx,rbp
  403f8e:	test   al,al
  403f90:	je     403fb5 <__sprintf_chk@plt+0x2bf5>
  403f92:	nop    WORD PTR [rax+rax*1+0x0]
  403f98:	lea    edi,[rax-0x41]
  403f9b:	cmp    dil,0x1a
  403f9f:	lea    esi,[rax+0x20]
  403fa2:	cmovb  eax,esi
  403fa5:	inc    rcx
  403fa8:	mov    BYTE PTR [rcx-0x1],al
  403fab:	inc    rdx
  403fae:	movzx  eax,BYTE PTR [rdx]
  403fb1:	test   al,al
  403fb3:	jne    403f98 <__sprintf_chk@plt+0x2bd8>
  403fb5:	mov    BYTE PTR [rcx],0x0
  403fb8:	mov    esi,0x5f
  403fbd:	mov    rdi,rbp
  403fc0:	call   401280 <strchr@plt>
  403fc5:	test   rax,rax
  403fc8:	je     403fcd <__sprintf_chk@plt+0x2c0d>
  403fca:	mov    BYTE PTR [rax],0x2e
  403fcd:	mov    rdi,QWORD PTR [rsp+0x20]
  403fd2:	mov    rdx,r13
  403fd5:	mov    rcx,rbp
  403fd8:	mov    esi,0x1
  403fdd:	xor    eax,eax
  403fdf:	add    r12,0x8
  403fe3:	call   401390 <__fprintf_chk@plt>
  403fe8:	mov    rdx,QWORD PTR [r12-0x8]
  403fed:	test   rdx,rdx
  403ff0:	jne    403f88 <__sprintf_chk@plt+0x2bc8>
  403ff2:	mov    rcx,QWORD PTR [rsp+0x20]
  403ff7:	mov    edx,0x3
  403ffc:	mov    esi,0x1
  404001:	lea    rdi,[rip+0x5130]        # 409138 <__sprintf_chk@plt+0x7d78>
  404008:	call   401380 <fwrite@plt>
  40400d:	mov    rcx,QWORD PTR [rsp+0x20]
  404012:	mov    edx,0xf
  404017:	mov    esi,0x1
  40401c:	lea    rdi,[rip+0x512a]        # 40914d <__sprintf_chk@plt+0x7d8d>
  404023:	call   401380 <fwrite@plt>
  404028:	mov    rax,0x411b80
  40402f:	lea    rcx,[rip+0x503f]        # 409075 <__sprintf_chk@plt+0x7cb5>
  404036:	lea    rbp,[rax+0x8]
  40403a:	lea    r12,[rip+0x511c]        # 40915d <__sprintf_chk@plt+0x7d9d>
  404041:	nop    DWORD PTR [rax+0x0]
  404048:	mov    rdi,QWORD PTR [rsp+0x20]
  40404d:	mov    rdx,r12
  404050:	mov    esi,0x1
  404055:	xor    eax,eax
  404057:	add    rbp,0x8
  40405b:	call   401390 <__fprintf_chk@plt>
  404060:	mov    rcx,QWORD PTR [rbp-0x8]
  404064:	test   rcx,rcx
  404067:	jne    404048 <__sprintf_chk@plt+0x2c88>
  404069:	mov    rcx,QWORD PTR [rsp+0x20]
  40406e:	mov    edx,0x3
  404073:	mov    esi,0x1
  404078:	lea    rdi,[rip+0x50b9]        # 409138 <__sprintf_chk@plt+0x7d78>
  40407f:	call   401380 <fwrite@plt>
  404084:	mov    rcx,QWORD PTR [rsp+0x20]
  404089:	mov    edx,0x11
  40408e:	mov    esi,0x1
  404093:	lea    rdi,[rip+0x50ca]        # 409164 <__sprintf_chk@plt+0x7da4>
  40409a:	call   401380 <fwrite@plt>
  40409f:	lea    rbp,[rip+0xd9c2]        # 411a68 <__sprintf_chk@plt+0x106a8>
  4040a6:	lea    rcx,[rip+0x6583]        # 40a630 <__sprintf_chk@plt+0x9270>
  4040ad:	lea    r12,[rip+0x50a9]        # 40915d <__sprintf_chk@plt+0x7d9d>
  4040b4:	nop    DWORD PTR [rax+0x0]
  4040b8:	mov    rdi,QWORD PTR [rsp+0x20]
  4040bd:	mov    rdx,r12
  4040c0:	mov    esi,0x1
  4040c5:	xor    eax,eax
  4040c7:	add    rbp,0x8
  4040cb:	call   401390 <__fprintf_chk@plt>
  4040d0:	mov    rcx,QWORD PTR [rbp-0x8]
  4040d4:	test   rcx,rcx
  4040d7:	jne    4040b8 <__sprintf_chk@plt+0x2cf8>
  4040d9:	mov    rcx,QWORD PTR [rsp+0x20]
  4040de:	mov    edx,0x3
  4040e3:	mov    esi,0x1
  4040e8:	lea    rdi,[rip+0x5049]        # 409138 <__sprintf_chk@plt+0x7d78>
  4040ef:	call   401380 <fwrite@plt>
  4040f4:	mov    rdi,rbx
  4040f7:	call   407790 <__sprintf_chk@plt+0x63d0>
  4040fc:	mov    rdi,QWORD PTR [rsp+0x20]
  404101:	call   401340 <fflush@plt>
  404106:	mov    rdi,QWORD PTR [rsp+0x20]
  40410b:	call   401230 <ferror@plt>
  404110:	mov    ebx,eax
  404112:	test   eax,eax
  404114:	jne    4044f8 <__sprintf_chk@plt+0x3138>
  40411a:	mov    rdi,QWORD PTR [rsp+0x20]
  40411f:	call   401250 <fclose@plt>
  404124:	jmp    40279a <__sprintf_chk@plt+0x13da>
  404129:	mov    rdi,rbx
  40412c:	call   406050 <__sprintf_chk@plt+0x4c90>
  404131:	mov    eax,DWORD PTR [rsp+0x18]
  404135:	test   eax,eax
  404137:	je     404337 <__sprintf_chk@plt+0x2f77>
  40413d:	cmp    eax,0x2
  404140:	jne    4040fc <__sprintf_chk@plt+0x2d3c>
  404142:	mov    rcx,QWORD PTR [rsp+0x20]
  404147:	mov    edx,0x4c
  40414c:	mov    esi,0x1
  404151:	lea    rdi,[rip+0x6c10]        # 40ad68 <__sprintf_chk@plt+0x99a8>
  404158:	call   401380 <fwrite@plt>
  40415d:	mov    rcx,QWORD PTR [rsp+0x20]
  404162:	mov    edx,0x11c
  404167:	mov    esi,0x1
  40416c:	lea    rdi,[rip+0x6c45]        # 40adb8 <__sprintf_chk@plt+0x99f8>
  404173:	call   401380 <fwrite@plt>
  404178:	xor    ebx,ebx
  40417a:	mov    r13,QWORD PTR [rsp+0x20]
  40417f:	lea    r14,[rip+0x4f42]        # 4090c8 <__sprintf_chk@plt+0x7d08>
  404186:	jmp    4041bf <__sprintf_chk@plt+0x2dff>
  404188:	push   rdi
  404189:	mov    r9d,ebx
  40418c:	mov    rdi,r13
  40418f:	push   rbx
  404190:	mov    r8d,ebx
  404193:	mov    rcx,r15
  404196:	push   0x50
  404198:	lea    rdx,[rip+0x6d39]        # 40aed8 <__sprintf_chk@plt+0x9b18>
  40419f:	mov    esi,0x1
  4041a4:	push   rbp
  4041a5:	xor    eax,eax
  4041a7:	push   r15
  4041a9:	push   rbx
  4041aa:	push   rbx
  4041ab:	push   rbx
  4041ac:	push   rbx
  4041ad:	push   rbx
  4041ae:	call   401390 <__fprintf_chk@plt>
  4041b3:	add    rsp,0x50
  4041b7:	mov    r13,QWORD PTR [rsp+0x20]
  4041bc:	inc    rbx
  4041bf:	cmp    DWORD PTR [rsp+0x50],ebx
  4041c3:	jle    404310 <__sprintf_chk@plt+0x2f50>
  4041c9:	mov    rcx,QWORD PTR [rsp+0x68]
  4041ce:	mov    rax,rbx
  4041d1:	shl    rax,0x4
  4041d5:	lea    rdx,[rcx+rax*1]
  4041d9:	mov    eax,DWORD PTR [rcx+rax*1+0x18]
  4041dd:	sub    eax,DWORD PTR [rdx+0x8]
  4041e0:	mov    ebp,eax
  4041e2:	je     4041bc <__sprintf_chk@plt+0x2dfc>
  4041e4:	mov    r15,QWORD PTR [rdx]
  4041e7:	mov    rsi,r14
  4041ea:	mov    rdi,r15
  4041ed:	call   4012e0 <strcmp@plt>
  4041f2:	test   eax,eax
  4041f4:	jne    404188 <__sprintf_chk@plt+0x2dc8>
  4041f6:	mov    r12d,ebp
  4041f9:	jmp    4041bc <__sprintf_chk@plt+0x2dfc>
  4041fb:	mov    rdi,rbx
  4041fe:	call   4083a0 <__sprintf_chk@plt+0x6fe0>
  404203:	jmp    4040fc <__sprintf_chk@plt+0x2d3c>
  404208:	mov    rdx,QWORD PTR [rsp+0x40]
  40420d:	mov    rsi,QWORD PTR [rsp+0x38]
  404212:	mov    rdi,rbx
  404215:	call   405e20 <__sprintf_chk@plt+0x4a60>
  40421a:	jmp    4040fc <__sprintf_chk@plt+0x2d3c>
  40421f:	mov    rdi,rbx
  404222:	call   4066f0 <__sprintf_chk@plt+0x5330>
  404227:	jmp    4040fc <__sprintf_chk@plt+0x2d3c>
  40422c:	mov    rcx,QWORD PTR [rsp+0x20]
  404231:	mov    edx,0x2e
  404236:	mov    esi,0x1
  40423b:	lea    rdi,[rip+0x6f9e]        # 40b1e0 <__sprintf_chk@plt+0x9e20>
  404242:	call   401380 <fwrite@plt>
  404247:	mov    rcx,QWORD PTR [rsp+0x20]
  40424c:	mov    edx,0x2a
  404251:	mov    esi,0x1
  404256:	lea    rdi,[rip+0x6fb3]        # 40b210 <__sprintf_chk@plt+0x9e50>
  40425d:	call   401380 <fwrite@plt>
  404262:	xor    ebp,ebp
  404264:	cmp    DWORD PTR [rsp+0x48],0x0
  404269:	lea    r12,[rip+0xae9e]        # 40f10e <__sprintf_chk@plt+0xdd4e>
  404270:	jg     40429b <__sprintf_chk@plt+0x2edb>
  404272:	jmp    4040f4 <__sprintf_chk@plt+0x2d34>
  404277:	nop    WORD PTR [rax+rax*1+0x0]
  404280:	mov    rcx,QWORD PTR [rsp+0x20]
  404285:	mov    edx,0x2
  40428a:	mov    esi,0x1
  40428f:	lea    rdi,[rip+0xaf43]        # 40f1d9 <__sprintf_chk@plt+0xde19>
  404296:	call   401380 <fwrite@plt>
  40429b:	mov    rax,QWORD PTR [rsp+0x78]
  4042a0:	mov    rdi,QWORD PTR [rsp+0x20]
  4042a5:	mov    ecx,DWORD PTR [rax+rbp*4]
  4042a8:	mov    rdx,r12
  4042ab:	mov    esi,0x1
  4042b0:	xor    eax,eax
  4042b2:	inc    rbp
  4042b5:	call   401390 <__fprintf_chk@plt>
  4042ba:	cmp    DWORD PTR [rsp+0x48],ebp
  4042be:	jg     404280 <__sprintf_chk@plt+0x2ec0>
  4042c0:	jmp    4040f4 <__sprintf_chk@plt+0x2d34>
  4042c5:	mov    rdi,QWORD PTR [rsp+0x28]
  4042ca:	cmp    BYTE PTR [rdi],0x2d
  4042cd:	je     4042f9 <__sprintf_chk@plt+0x2f39>
  4042cf:	lea    rsi,[rip+0x4d89]        # 40905f <__sprintf_chk@plt+0x7c9f>
  4042d6:	jmp    403d4f <__sprintf_chk@plt+0x298f>
  4042db:	cmp    BYTE PTR [rdi+0x1],0x0
  4042df:	jne    403d48 <__sprintf_chk@plt+0x2988>
  4042e5:	mov    rax,QWORD PTR [rip+0xece4]        # 412fd0 <__sprintf_chk@plt+0x11c10>
  4042ec:	mov    rax,QWORD PTR [rax]
  4042ef:	mov    QWORD PTR [rsp+0x20],rax
  4042f4:	jmp    403d62 <__sprintf_chk@plt+0x29a2>
  4042f9:	cmp    BYTE PTR [rdi+0x1],0x0
  4042fd:	jne    4042cf <__sprintf_chk@plt+0x2f0f>
  4042ff:	jmp    4042e5 <__sprintf_chk@plt+0x2f25>
  404301:	call   404620 <__sprintf_chk@plt+0x3260>
  404306:	mov    edx,0x1
  40430b:	jmp    4014bb <__sprintf_chk@plt+0xfb>
  404310:	test   r12d,r12d
  404313:	jne    404450 <__sprintf_chk@plt+0x3090>
  404319:	mov    rcx,r13
  40431c:	mov    edx,0x1a
  404321:	mov    esi,0x1
  404326:	lea    rdi,[rip+0x4dab]        # 4090d8 <__sprintf_chk@plt+0x7d18>
  40432d:	call   401380 <fwrite@plt>
  404332:	jmp    4040fc <__sprintf_chk@plt+0x2d3c>
  404337:	mov    rax,QWORD PTR [rsp+0x60]
  40433c:	mov    rcx,QWORD PTR [rsp+0x20]
  404341:	mov    rbx,QWORD PTR [rax+0x4f8]
  404348:	mov    edx,0x24
  40434d:	mov    esi,0x1
  404352:	lea    rdi,[rip+0x6337]        # 40a690 <__sprintf_chk@plt+0x92d0>
  404359:	sub    rbx,QWORD PTR [rsp+0x38]
  40435e:	call   401380 <fwrite@plt>
  404363:	mov    rcx,QWORD PTR [rsp+0x20]
  404368:	mov    edx,0xd2
  40436d:	mov    esi,0x1
  404372:	lea    rdi,[rip+0x633f]        # 40a6b8 <__sprintf_chk@plt+0x92f8>
  404379:	call   401380 <fwrite@plt>
  40437e:	mov    rdi,QWORD PTR [rsp+0x20]
  404383:	mov    r8d,0x50
  404389:	mov    ecx,ebx
  40438b:	lea    rdx,[rip+0x63fe]        # 40a790 <__sprintf_chk@plt+0x93d0>
  404392:	mov    esi,0x1
  404397:	xor    eax,eax
  404399:	call   401390 <__fprintf_chk@plt>
  40439e:	mov    ecx,DWORD PTR [rsp+0x40]
  4043a2:	mov    rdi,QWORD PTR [rsp+0x20]
  4043a7:	sub    ecx,ebx
  4043a9:	lea    rdx,[rip+0x64d0]        # 40a880 <__sprintf_chk@plt+0x94c0>
  4043b0:	mov    esi,0x1
  4043b5:	xor    eax,eax
  4043b7:	call   401390 <__fprintf_chk@plt>
  4043bc:	mov    rcx,QWORD PTR [rsp+0x20]
  4043c1:	mov    edx,0x22
  4043c6:	mov    esi,0x1
  4043cb:	lea    rdi,[rip+0x6586]        # 40a958 <__sprintf_chk@plt+0x9598>
  4043d2:	call   401380 <fwrite@plt>
  4043d7:	mov    rcx,QWORD PTR [rsp+0x20]
  4043dc:	mov    edx,0x10d
  4043e1:	mov    esi,0x1
  4043e6:	lea    rdi,[rip+0x6593]        # 40a980 <__sprintf_chk@plt+0x95c0>
  4043ed:	call   401380 <fwrite@plt>
  4043f2:	mov    rdi,QWORD PTR [rsp+0x20]
  4043f7:	mov    r8d,0x50
  4043fd:	mov    ecx,ebx
  4043ff:	lea    rdx,[rip+0x668a]        # 40aa90 <__sprintf_chk@plt+0x96d0>
  404406:	mov    esi,0x1
  40440b:	xor    eax,eax
  40440d:	call   401390 <__fprintf_chk@plt>
  404412:	mov    rcx,QWORD PTR [rsp+0x20]
  404417:	mov    edx,0xe3
  40441c:	mov    esi,0x1
  404421:	lea    rdi,[rip+0x6768]        # 40ab90 <__sprintf_chk@plt+0x97d0>
  404428:	call   401380 <fwrite@plt>
  40442d:	mov    ecx,DWORD PTR [rsp+0x40]
  404431:	mov    rdi,QWORD PTR [rsp+0x20]
  404436:	sub    ecx,ebx
  404438:	lea    rdx,[rip+0x6839]        # 40ac78 <__sprintf_chk@plt+0x98b8>
  40443f:	mov    esi,0x1
  404444:	xor    eax,eax
  404446:	call   401390 <__fprintf_chk@plt>
  40444b:	jmp    4040fc <__sprintf_chk@plt+0x2d3c>
  404450:	mov    rcx,r13
  404453:	mov    edx,0xe8
  404458:	mov    esi,0x1
  40445d:	lea    rdi,[rip+0x6b84]        # 40afe8 <__sprintf_chk@plt+0x9c28>
  404464:	call   401380 <fwrite@plt>
  404469:	mov    rdi,QWORD PTR [rsp+0x20]
  40446e:	mov    ecx,r12d
  404471:	lea    rdx,[rip+0x6c60]        # 40b0d8 <__sprintf_chk@plt+0x9d18>
  404478:	mov    esi,0x1
  40447d:	xor    eax,eax
  40447f:	call   401390 <__fprintf_chk@plt>
  404484:	mov    r13,QWORD PTR [rsp+0x20]
  404489:	jmp    404319 <__sprintf_chk@plt+0x2f59>
  40448e:	mov    rax,QWORD PTR [rip+0xeb5b]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  404495:	mov    rcx,r14
  404498:	mov    rdi,QWORD PTR [rax]
  40449b:	lea    rdx,[rip+0x4c06]        # 4090a8 <__sprintf_chk@plt+0x7ce8>
  4044a2:	mov    esi,0x1
  4044a7:	xor    eax,eax
  4044a9:	call   401390 <__fprintf_chk@plt>
  4044ae:	mov    edi,0x2
  4044b3:	call   401370 <exit@plt>
  4044b8:	call   401270 <__stack_chk_fail@plt>
  4044bd:	call   401210 <__errno_location@plt>
  4044c2:	mov    edi,DWORD PTR [rax]
  4044c4:	call   4013a0 <strerror@plt>
  4044c9:	mov    r8,rax
  4044cc:	mov    rax,QWORD PTR [rip+0xeb1d]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4044d3:	mov    rcx,QWORD PTR [rsp+0x28]
  4044d8:	mov    rdi,QWORD PTR [rax]
  4044db:	lea    rdx,[rip+0x617e]        # 40a660 <__sprintf_chk@plt+0x92a0>
  4044e2:	mov    esi,0x1
  4044e7:	xor    eax,eax
  4044e9:	call   401390 <__fprintf_chk@plt>
  4044ee:	mov    edi,0x1
  4044f3:	call   401370 <exit@plt>
  4044f8:	call   401210 <__errno_location@plt>
  4044fd:	mov    edi,DWORD PTR [rax]
  4044ff:	call   4013a0 <strerror@plt>
  404504:	mov    rcx,rax
  404507:	mov    rax,QWORD PTR [rip+0xeae2]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  40450e:	lea    rdx,[rip+0x60f3]        # 40a608 <__sprintf_chk@plt+0x9248>
  404515:	mov    rdi,QWORD PTR [rax]
  404518:	mov    esi,0x1
  40451d:	xor    eax,eax
  40451f:	call   401390 <__fprintf_chk@plt>
  404524:	mov    edi,0x1
  404529:	call   401370 <exit@plt>
  40452e:	xchg   ax,ax
  404530:	endbr64 
  404534:	xor    ebp,ebp
  404536:	mov    r9,rdx
  404539:	pop    rsi
  40453a:	mov    rdx,rsp
  40453d:	and    rsp,0xfffffffffffffff0
  404541:	push   rax
  404542:	push   rsp
  404543:	mov    r8,0x408870
  40454a:	mov    rcx,0x408800
  404551:	mov    rdi,0x4013d0
  404558:	call   QWORD PTR [rip+0xea82]        # 412fe0 <__sprintf_chk@plt+0x11c20>
  40455e:	hlt    
  40455f:	nop
  404560:	endbr64 
  404564:	ret    
  404565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40456f:	nop
  404570:	mov    eax,0x413110
  404575:	cmp    rax,0x413110
  40457b:	je     404590 <__sprintf_chk@plt+0x31d0>
  40457d:	mov    eax,0x0
  404582:	test   rax,rax
  404585:	je     404590 <__sprintf_chk@plt+0x31d0>
  404587:	mov    edi,0x413110
  40458c:	jmp    rax
  40458e:	xchg   ax,ax
  404590:	ret    
  404591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40459c:	nop    DWORD PTR [rax+0x0]
  4045a0:	mov    esi,0x413110
  4045a5:	sub    rsi,0x413110
  4045ac:	sar    rsi,0x3
  4045b0:	mov    rax,rsi
  4045b3:	shr    rax,0x3f
  4045b7:	add    rsi,rax
  4045ba:	sar    rsi,1
  4045bd:	je     4045d0 <__sprintf_chk@plt+0x3210>
  4045bf:	mov    eax,0x0
  4045c4:	test   rax,rax
  4045c7:	je     4045d0 <__sprintf_chk@plt+0x3210>
  4045c9:	mov    edi,0x413110
  4045ce:	jmp    rax
  4045d0:	ret    
  4045d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4045dc:	nop    DWORD PTR [rax+0x0]
  4045e0:	endbr64 
  4045e4:	cmp    BYTE PTR [rip+0xeb35],0x0        # 413120 <__sprintf_chk@plt+0x11d60>
  4045eb:	jne    404600 <__sprintf_chk@plt+0x3240>
  4045ed:	push   rbp
  4045ee:	mov    rbp,rsp
  4045f1:	call   404570 <__sprintf_chk@plt+0x31b0>
  4045f6:	mov    BYTE PTR [rip+0xeb23],0x1        # 413120 <__sprintf_chk@plt+0x11d60>
  4045fd:	pop    rbp
  4045fe:	ret    
  4045ff:	nop
  404600:	ret    
  404601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40460c:	nop    DWORD PTR [rax+0x0]
  404610:	endbr64 
  404614:	jmp    4045a0 <__sprintf_chk@plt+0x31e0>
  404616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404620:	push   r13
  404622:	mov    edx,0x19
  404627:	mov    esi,0x1
  40462c:	push   r12
  40462e:	lea    rdi,[rip+0x49d6]        # 40900b <__sprintf_chk@plt+0x7c4b>
  404635:	lea    r12,[rip+0x4a16]        # 409052 <__sprintf_chk@plt+0x7c92>
  40463c:	push   rbp
  40463d:	push   rbx
  40463e:	lea    rbx,[rip+0xd3c3]        # 411a08 <__sprintf_chk@plt+0x10648>
  404645:	lea    r13,[rbx+0x50]
  404649:	sub    rsp,0x8
  40464d:	mov    rbp,QWORD PTR [rip+0xe99c]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  404654:	mov    rcx,QWORD PTR [rbp+0x0]
  404658:	call   401380 <fwrite@plt>
  40465d:	mov    rcx,QWORD PTR [rbp+0x0]
  404661:	mov    edx,0x36
  404666:	mov    esi,0x1
  40466b:	lea    rdi,[rip+0x5eee]        # 40a560 <__sprintf_chk@plt+0x91a0>
  404672:	call   401380 <fwrite@plt>
  404677:	mov    rcx,QWORD PTR [rbp+0x0]
  40467b:	mov    edx,0x1a
  404680:	mov    esi,0x1
  404685:	lea    rdi,[rip+0x4999]        # 409025 <__sprintf_chk@plt+0x7c65>
  40468c:	call   401380 <fwrite@plt>
  404691:	mov    rcx,QWORD PTR [rbp+0x0]
  404695:	mov    edx,0x32
  40469a:	mov    esi,0x1
  40469f:	lea    rdi,[rip+0x5ef2]        # 40a598 <__sprintf_chk@plt+0x91d8>
  4046a6:	call   401380 <fwrite@plt>
  4046ab:	mov    rcx,QWORD PTR [rbp+0x0]
  4046af:	mov    edx,0x11
  4046b4:	mov    esi,0x1
  4046b9:	lea    rdi,[rip+0x4980]        # 409040 <__sprintf_chk@plt+0x7c80>
  4046c0:	call   401380 <fwrite@plt>
  4046c5:	lea    rcx,[rip+0x4938]        # 409004 <__sprintf_chk@plt+0x7c44>
  4046cc:	jmp    4046d7 <__sprintf_chk@plt+0x3317>
  4046ce:	xchg   ax,ax
  4046d0:	mov    rcx,QWORD PTR [rbx]
  4046d3:	add    rbx,0x8
  4046d7:	mov    rdi,QWORD PTR [rbp+0x0]
  4046db:	xor    eax,eax
  4046dd:	mov    rdx,r12
  4046e0:	mov    esi,0x1
  4046e5:	call   401390 <__fprintf_chk@plt>
  4046ea:	cmp    rbx,r13
  4046ed:	jne    4046d0 <__sprintf_chk@plt+0x3310>
  4046ef:	mov    edi,0x1
  4046f4:	call   401370 <exit@plt>
  4046f9:	nop    DWORD PTR [rax+0x0]
  404700:	push   rbp
  404701:	lea    r8,[rip+0xaa4f]        # 40f157 <__sprintf_chk@plt+0xdd97>
  404708:	mov    r9,rsi
  40470b:	push   rbx
  40470c:	lea    rcx,[rip+0x4945]        # 409058 <__sprintf_chk@plt+0x7c98>
  404713:	mov    esi,0x1
  404718:	sub    rsp,0x118
  40471f:	mov    rax,QWORD PTR fs:0x28
  404728:	mov    QWORD PTR [rsp+0x108],rax
  404730:	xor    eax,eax
  404732:	cmp    edi,0x2
  404735:	lea    rax,[rip+0x49d9]        # 409115 <__sprintf_chk@plt+0x7d55>
  40473c:	cmovne r8,rax
  404740:	mov    rbp,rsp
  404743:	sub    rsp,0x8
  404747:	push   rdx
  404748:	mov    rdi,rbp
  40474b:	mov    edx,0x100
  404750:	xor    eax,eax
  404752:	call   4013c0 <__sprintf_chk@plt>
  404757:	mov    esi,0x40
  40475c:	mov    rdi,rbp
  40475f:	call   401280 <strchr@plt>
  404764:	pop    rdx
  404765:	pop    rcx
  404766:	test   rax,rax
  404769:	je     40476e <__sprintf_chk@plt+0x33ae>
  40476b:	mov    BYTE PTR [rax],0x0
  40476e:	mov    rdi,rbp
  404771:	mov    edx,DWORD PTR [rdi]
  404773:	add    rdi,0x4
  404777:	lea    eax,[rdx-0x1010101]
  40477d:	andn   eax,edx,eax
  404782:	and    eax,0x80808080
  404787:	je     404771 <__sprintf_chk@plt+0x33b1>
  404789:	mov    edx,eax
  40478b:	shr    edx,0x10
  40478e:	test   eax,0x8080
  404793:	cmove  eax,edx
  404796:	lea    rdx,[rdi+0x2]
  40479a:	cmove  rdi,rdx
  40479e:	mov    esi,eax
  4047a0:	add    sil,al
  4047a3:	sbb    rdi,0x3
  4047a7:	sub    rdi,rbp
  4047aa:	lea    rbx,[rdi+0x1]
  4047ae:	mov    rdi,rbx
  4047b1:	call   401330 <malloc@plt>
  4047b6:	cmp    ebx,0x8
  4047b9:	jae    4047e8 <__sprintf_chk@plt+0x3428>
  4047bb:	test   bl,0x4
  4047be:	jne    404828 <__sprintf_chk@plt+0x3468>
  4047c0:	test   ebx,ebx
  4047c2:	jne    404808 <__sprintf_chk@plt+0x3448>
  4047c4:	mov    rbx,QWORD PTR [rsp+0x108]
  4047cc:	xor    rbx,QWORD PTR fs:0x28
  4047d5:	jne    404839 <__sprintf_chk@plt+0x3479>
  4047d7:	add    rsp,0x118
  4047de:	pop    rbx
  4047df:	pop    rbp
  4047e0:	ret    
  4047e1:	nop    DWORD PTR [rax+0x0]
  4047e8:	mov    edx,ebx
  4047ea:	mov    rcx,QWORD PTR [rbp+rdx*1-0x8]
  4047ef:	mov    rdi,rax
  4047f2:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
  4047f7:	lea    ecx,[rbx-0x1]
  4047fa:	shr    ecx,0x3
  4047fd:	mov    rsi,rbp
  404800:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404803:	jmp    4047c4 <__sprintf_chk@plt+0x3404>
  404805:	nop    DWORD PTR [rax]
  404808:	movzx  edx,BYTE PTR [rbp+0x0]
  40480c:	mov    BYTE PTR [rax],dl
  40480e:	test   bl,0x2
  404811:	je     4047c4 <__sprintf_chk@plt+0x3404>
  404813:	mov    edi,ebx
  404815:	movzx  edx,WORD PTR [rbp+rdi*1-0x2]
  40481a:	mov    WORD PTR [rax+rdi*1-0x2],dx
  40481f:	jmp    4047c4 <__sprintf_chk@plt+0x3404>
  404821:	nop    DWORD PTR [rax+0x0]
  404828:	mov    edx,DWORD PTR [rbp+0x0]
  40482b:	mov    edi,ebx
  40482d:	mov    DWORD PTR [rax],edx
  40482f:	mov    edx,DWORD PTR [rbp+rdi*1-0x4]
  404833:	mov    DWORD PTR [rax+rdi*1-0x4],edx
  404837:	jmp    4047c4 <__sprintf_chk@plt+0x3404>
  404839:	call   401270 <__stack_chk_fail@plt>
  40483e:	xchg   ax,ax
  404840:	push   r12
  404842:	mov    r12,rdx
  404845:	mov    rdx,rcx
  404848:	push   rbp
  404849:	push   rbx
  40484a:	movsxd r8,DWORD PTR [rdi+0x40]
  40484e:	mov    r9,QWORD PTR [rdi+0x58]
  404852:	lea    eax,[r8+0x1]
  404856:	mov    DWORD PTR [rdi+0x40],eax
  404859:	mov    rax,r8
  40485c:	shl    rax,0x4
  404860:	test   r8,r8
  404863:	jle    4048b9 <__sprintf_chk@plt+0x34f9>
  404865:	mov    r10,r8
  404868:	shl    r10,0x4
  40486c:	lea    r11,[r9+r10*1-0x10]
  404871:	cmp    esi,DWORD PTR [r11+0x8]
  404875:	jge    4048d3 <__sprintf_chk@plt+0x3513>
  404877:	dec    r8
  40487a:	mov    rax,r8
  40487d:	shl    rax,0x4
  404881:	lea    rbp,[r9-0x10]
  404885:	jmp    4048a9 <__sprintf_chk@plt+0x34e9>
  404887:	nop    WORD PTR [rax+rax*1+0x0]
  404890:	lea    r11,[rbp+rax*1+0x0]
  404895:	lea    rbx,[rax-0x10]
  404899:	mov    r10,rax
  40489c:	cmp    DWORD PTR [r9+rax*1-0x8],esi
  4048a1:	jle    4048b9 <__sprintf_chk@plt+0x34f9>
  4048a3:	mov    rax,rbx
  4048a6:	dec    r8
  4048a9:	vmovdqu xmm0,XMMWORD PTR [r11]
  4048ae:	vmovups XMMWORD PTR [r9+r10*1],xmm0
  4048b4:	test   r8,r8
  4048b7:	jne    404890 <__sprintf_chk@plt+0x34d0>
  4048b9:	lea    rbx,[r9+rax*1]
  4048bd:	mov    DWORD PTR [rbx+0x8],esi
  4048c0:	mov    edi,DWORD PTR [rdi+0x8]
  4048c3:	mov    rsi,r12
  4048c6:	call   404700 <__sprintf_chk@plt+0x3340>
  4048cb:	mov    QWORD PTR [rbx],rax
  4048ce:	pop    rbx
  4048cf:	pop    rbp
  4048d0:	pop    r12
  4048d2:	ret    
  4048d3:	mov    rax,r10
  4048d6:	jmp    4048b9 <__sprintf_chk@plt+0x34f9>
  4048d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048e0:	endbr64 
  4048e4:	push   r13
  4048e6:	push   r12
  4048e8:	mov    r12d,esi
  4048eb:	push   rbp
  4048ec:	lea    ebp,[rsi-0x1]
  4048ef:	movsxd rax,ebp
  4048f2:	push   rbx
  4048f3:	lea    rax,[rax+rax*4]
  4048f7:	lea    rbx,[rax*8+0x78]
  4048ff:	sub    rsp,0x8
  404903:	mov    QWORD PTR [rdi],0x0
  40490a:	test   rbx,rbx
  40490d:	je     404950 <__sprintf_chk@plt+0x3590>
  40490f:	mov    r13,rdi
  404912:	cmp    rbx,0x10
  404916:	jbe    4049de <__sprintf_chk@plt+0x361e>
  40491c:	mov    eax,0x10
  404921:	nop    DWORD PTR [rax+0x0]
  404928:	add    rax,rax
  40492b:	cmp    rbx,rax
  40492e:	ja     404928 <__sprintf_chk@plt+0x3568>
  404930:	mov    rbx,rax
  404933:	mov    rdi,rbx
  404936:	call   401330 <malloc@plt>
  40493b:	mov    QWORD PTR [r13+0x0],rax
  40493f:	test   rax,rax
  404942:	jne    404952 <__sprintf_chk@plt+0x3592>
  404944:	mov    edi,0x1
  404949:	call   401370 <exit@plt>
  40494e:	xchg   ax,ax
  404950:	xor    eax,eax
  404952:	mov    QWORD PTR [rax],rbx
  404955:	mov    QWORD PTR [rax+0x10],0x0
  40495d:	mov    QWORD PTR [rax+0x18],0x0
  404965:	mov    QWORD PTR [rax+0x20],0x0
  40496d:	mov    QWORD PTR [rax+0x28],0x0
  404975:	mov    QWORD PTR [rax+0x30],0x0
  40497d:	mov    DWORD PTR [rax+0x48],r12d
  404981:	test   r12d,r12d
  404984:	jle    4049d3 <__sprintf_chk@plt+0x3613>
  404986:	mov    ebp,ebp
  404988:	lea    rcx,[rbp+rbp*4+0x0]
  40498d:	lea    rsi,[rax+rcx*8+0x78]
  404992:	lea    rdx,[rax+0x50]
  404996:	xor    ecx,ecx
  404998:	nop    DWORD PTR [rax+rax*1+0x0]
  4049a0:	movsxd rax,ecx
  4049a3:	shl    rax,0x2
  4049a7:	neg    rax
  4049aa:	mov    QWORD PTR [rdx+0x8],0x0
  4049b2:	mov    QWORD PTR [rdx],rax
  4049b5:	mov    QWORD PTR [rdx+0x10],0x0
  4049bd:	mov    DWORD PTR [rdx+0x1c],0x0
  4049c4:	add    rdx,0x28
  4049c8:	add    ecx,0x1000000
  4049ce:	cmp    rdx,rsi
  4049d1:	jne    4049a0 <__sprintf_chk@plt+0x35e0>
  4049d3:	add    rsp,0x8
  4049d7:	pop    rbx
  4049d8:	pop    rbp
  4049d9:	pop    r12
  4049db:	pop    r13
  4049dd:	ret    
  4049de:	mov    ebx,0x10
  4049e3:	jmp    404933 <__sprintf_chk@plt+0x3573>
  4049e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049f0:	endbr64 
  4049f4:	push   rbp
  4049f5:	push   rbx
  4049f6:	sub    rsp,0x8
  4049fa:	mov    rbp,QWORD PTR [rdi]
  4049fd:	mov    eax,DWORD PTR [rbp+0x48]
  404a00:	test   eax,eax
  404a02:	jle    404a2b <__sprintf_chk@plt+0x366b>
  404a04:	xor    ebx,ebx
  404a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a10:	lea    rax,[rbx+rbx*4]
  404a14:	mov    rdi,QWORD PTR [rbp+rax*8+0x58]
  404a19:	test   rdi,rdi
  404a1c:	je     404a23 <__sprintf_chk@plt+0x3663>
  404a1e:	call   401200 <free@plt>
  404a23:	inc    rbx
  404a26:	cmp    DWORD PTR [rbp+0x48],ebx
  404a29:	jg     404a10 <__sprintf_chk@plt+0x3650>
  404a2b:	mov    rdi,QWORD PTR [rbp+0x20]
  404a2f:	test   rdi,rdi
  404a32:	je     404a39 <__sprintf_chk@plt+0x3679>
  404a34:	call   401200 <free@plt>
  404a39:	mov    rdi,QWORD PTR [rbp+0x10]
  404a3d:	test   rdi,rdi
  404a40:	je     404a47 <__sprintf_chk@plt+0x3687>
  404a42:	call   401200 <free@plt>
  404a47:	add    rsp,0x8
  404a4b:	pop    rbx
  404a4c:	mov    rdi,rbp
  404a4f:	pop    rbp
  404a50:	jmp    401200 <free@plt>
  404a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a60:	endbr64 
  404a64:	push   rbp
  404a65:	lea    eax,[rdx+0xa]
  404a68:	sub    rsi,0x50
  404a6c:	push   rbx
  404a6d:	shl    rax,0x2
  404a71:	sub    rsp,0x8
  404a75:	mov    rbp,QWORD PTR [rdi]
  404a78:	mov    rbx,QWORD PTR [rbp+0x18]
  404a7c:	mov    QWORD PTR [rbp+0x30],rsi
  404a80:	cmp    rbx,rax
  404a83:	jae    404ac1 <__sprintf_chk@plt+0x3701>
  404a85:	cmp    rbx,0x10
  404a89:	mov    edx,0x10
  404a8e:	cmovb  rbx,rdx
  404a92:	cmp    rax,rbx
  404a95:	jbe    404aa8 <__sprintf_chk@plt+0x36e8>
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	add    rbx,rbx
  404aa3:	cmp    rax,rbx
  404aa6:	ja     404aa0 <__sprintf_chk@plt+0x36e0>
  404aa8:	mov    rdi,QWORD PTR [rbp+0x10]
  404aac:	mov    rsi,rbx
  404aaf:	call   401350 <realloc@plt>
  404ab4:	mov    QWORD PTR [rbp+0x10],rax
  404ab8:	test   rax,rax
  404abb:	je     404ac8 <__sprintf_chk@plt+0x3708>
  404abd:	mov    QWORD PTR [rbp+0x18],rbx
  404ac1:	add    rsp,0x8
  404ac5:	pop    rbx
  404ac6:	pop    rbp
  404ac7:	ret    
  404ac8:	mov    edi,0x1
  404acd:	call   401370 <exit@plt>
  404ad2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404add:	nop    DWORD PTR [rax]
  404ae0:	endbr64 
  404ae4:	push   r12
  404ae6:	mov    esi,esi
  404ae8:	shl    rsi,0x2
  404aec:	push   rbp
  404aed:	push   rbx
  404aee:	mov    r12,QWORD PTR [rdi]
  404af1:	mov    rbp,QWORD PTR [r12+0x28]
  404af6:	mov    rdi,QWORD PTR [r12+0x20]
  404afb:	cmp    rbp,rsi
  404afe:	jae    404b50 <__sprintf_chk@plt+0x3790>
  404b00:	cmp    rbp,0x10
  404b04:	mov    ebx,0x10
  404b09:	cmovae rbx,rbp
  404b0d:	cmp    rsi,rbx
  404b10:	jbe    404b20 <__sprintf_chk@plt+0x3760>
  404b12:	nop    WORD PTR [rax+rax*1+0x0]
  404b18:	add    rbx,rbx
  404b1b:	cmp    rsi,rbx
  404b1e:	ja     404b18 <__sprintf_chk@plt+0x3758>
  404b20:	mov    rsi,rbx
  404b23:	call   401350 <realloc@plt>
  404b28:	mov    rdi,rax
  404b2b:	mov    QWORD PTR [r12+0x20],rax
  404b30:	test   rax,rax
  404b33:	je     404b60 <__sprintf_chk@plt+0x37a0>
  404b35:	mov    QWORD PTR [r12+0x28],rbx
  404b3a:	mov    rdx,rbx
  404b3d:	sub    rdx,rbp
  404b40:	pop    rbx
  404b41:	add    rdi,rbp
  404b44:	pop    rbp
  404b45:	xor    esi,esi
  404b47:	pop    r12
  404b49:	jmp    401290 <memset@plt>
  404b4e:	xchg   ax,ax
  404b50:	pop    rbx
  404b51:	add    rdi,rbp
  404b54:	pop    rbp
  404b55:	xor    edx,edx
  404b57:	xor    esi,esi
  404b59:	pop    r12
  404b5b:	jmp    401290 <memset@plt>
  404b60:	mov    edi,0x1
  404b65:	call   401370 <exit@plt>
  404b6a:	nop    WORD PTR [rax+rax*1+0x0]
  404b70:	endbr64 
  404b74:	push   rbx
  404b75:	mov    rbx,QWORD PTR [rdi]
  404b78:	lea    rax,[rbx+0x50]
  404b7c:	mov    QWORD PTR [rbx+0x8],rsi
  404b80:	mov    DWORD PTR [rbx+0x4c],0x0
  404b87:	mov    QWORD PTR [rbx+0x38],rax
  404b8b:	mov    rdi,QWORD PTR [rbx+0x10]
  404b8f:	mov    rdx,QWORD PTR [rbx+0x18]
  404b93:	xor    esi,esi
  404b95:	call   401290 <memset@plt>
  404b9a:	mov    rdi,QWORD PTR [rbx+0x20]
  404b9e:	test   rdi,rdi
  404ba1:	je     404bae <__sprintf_chk@plt+0x37ee>
  404ba3:	mov    rdx,QWORD PTR [rbx+0x28]
  404ba7:	xor    esi,esi
  404ba9:	call   401290 <memset@plt>
  404bae:	mov    edx,DWORD PTR [rbx+0x48]
  404bb1:	test   edx,edx
  404bb3:	jle    404be8 <__sprintf_chk@plt+0x3828>
  404bb5:	dec    edx
  404bb7:	lea    rdx,[rdx+rdx*4]
  404bbb:	lea    rcx,[rbx+rdx*8+0x90]
  404bc3:	lea    rax,[rbx+0x68]
  404bc7:	xor    edx,edx
  404bc9:	nop    DWORD PTR [rax+0x0]
  404bd0:	mov    DWORD PTR [rax],edx
  404bd2:	mov    DWORD PTR [rax+0x8],0x0
  404bd9:	add    rax,0x28
  404bdd:	add    edx,0x1000000
  404be3:	cmp    rax,rcx
  404be6:	jne    404bd0 <__sprintf_chk@plt+0x3810>
  404be8:	pop    rbx
  404be9:	ret    
  404bea:	nop    WORD PTR [rax+rax*1+0x0]
  404bf0:	endbr64 
  404bf4:	push   r15
  404bf6:	push   r14
  404bf8:	push   r13
  404bfa:	push   r12
  404bfc:	push   rbp
  404bfd:	push   rbx
  404bfe:	movsxd rbx,esi
  404c01:	mov    r15,rbx
  404c04:	sub    rsp,0x78
  404c08:	mov    QWORD PTR [rsp+0x50],rdx
  404c0d:	mov    QWORD PTR [rsp+0x58],rcx
  404c12:	mov    QWORD PTR [rsp+0x60],r8
  404c17:	mov    QWORD PTR [rsp+0x68],r9
  404c1c:	mov    r12,QWORD PTR [rdi]
  404c1f:	mov    rax,QWORD PTR fs:0x28
  404c28:	mov    QWORD PTR [rsp+0x38],rax
  404c2d:	xor    eax,eax
  404c2f:	mov    r13,QWORD PTR [r12+0x38]
  404c34:	add    rbx,QWORD PTR [r12+0x8]
  404c39:	movsxd rdx,DWORD PTR [r13+0x18]
  404c3d:	mov    ebp,DWORD PTR [r13+0x20]
  404c41:	cmp    DWORD PTR [r13+0x1c],edx
  404c45:	jg     405248 <__sprintf_chk@plt+0x3e88>
  404c4b:	mov    r14,QWORD PTR [r13+0x10]
  404c4f:	mov    rax,QWORD PTR [r13+0x8]
  404c53:	lea    rcx,[r14+0xc8]
  404c5a:	cmp    r14,rcx
  404c5d:	jb     4051a0 <__sprintf_chk@plt+0x3de0>
  404c63:	mov    esi,edx
  404c65:	and    esi,0xff000000
  404c6b:	mov    ecx,esi
  404c6d:	shl    rcx,0x2
  404c71:	sar    r14d,0x2
  404c75:	sub    rax,rcx
  404c78:	lea    ecx,[r14+rsi*1-0x19]
  404c7d:	mov    QWORD PTR [r13+0x0],rax
  404c81:	mov    DWORD PTR [r13+0x1c],ecx
  404c85:	mov    DWORD PTR [rax+rdx*4],r15d
  404c89:	lea    rdi,[rsp+0xb0]
  404c91:	mov    DWORD PTR [rsp+0x20],0x10
  404c99:	mov    BYTE PTR [rsp+0x17],0x0
  404c9e:	mov    DWORD PTR [rsp+0x10],0x4
  404ca6:	lea    ecx,[rdx+0x1]
  404ca9:	mov    QWORD PTR [rsp+0x28],rdi
  404cae:	movzx  edx,BYTE PTR [rbx]
  404cb1:	lea    rdi,[rsp+0x40]
  404cb6:	mov    QWORD PTR [rsp+0x30],rdi
  404cbb:	mov    QWORD PTR [rsp+0x18],rdi
  404cc0:	mov    r9d,0x10
  404cc6:	lea    r11,[rsp+0xb0]
  404cce:	xor    r15d,r15d
  404cd1:	lea    r10,[rip+0x6708]        # 40b3e0 <__sprintf_chk@plt+0xa020>
  404cd8:	lea    rdi,[rip+0x672d]        # 40b40c <__sprintf_chk@plt+0xa04c>
  404cdf:	mov    r14,r13
  404ce2:	nop    WORD PTR [rax+rax*1+0x0]
  404ce8:	movzx  r8d,dl
  404cec:	lea    rsi,[rbx+0x1]
  404cf0:	cmp    r8d,0xe8
  404cf7:	jg     404d08 <__sprintf_chk@plt+0x3948>
  404cf9:	movzx  edx,BYTE PTR [rbx+0x1]
  404cfd:	inc    ebp
  404cff:	mov    rbx,rsi
  404d02:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404d04:	nop    DWORD PTR [rax+0x0]
  404d08:	cmp    r8d,0xf3
  404d0f:	jg     404d68 <__sprintf_chk@plt+0x39a8>
  404d11:	mov    QWORD PTR [rsp],rsi
  404d15:	cmp    r9d,0x2f
  404d19:	ja     404d80 <__sprintf_chk@plt+0x39c0>
  404d1b:	mov    r8d,r9d
  404d1e:	add    r8,QWORD PTR [rsp+0x18]
  404d23:	add    r9d,0x8
  404d27:	mov    r15d,0x1
  404d2d:	mov    r8d,DWORD PTR [r8]
  404d30:	lea    r13d,[rcx+0x1]
  404d34:	movsxd rcx,ecx
  404d37:	lea    rsi,[rcx*4+0x0]
  404d3f:	add    edx,0x17
  404d42:	mov    QWORD PTR [rsp+0x8],rsi
  404d47:	mov    DWORD PTR [rax+rcx*4],r8d
  404d4b:	cmp    dl,0xa
  404d4e:	ja     405210 <__sprintf_chk@plt+0x3e50>
  404d54:	movzx  edx,dl
  404d57:	movsxd rdx,DWORD PTR [r10+rdx*4]
  404d5b:	add    rdx,r10
  404d5e:	notrack jmp rdx
  404d61:	nop    DWORD PTR [rax+0x0]
  404d68:	add    edx,0xc
  404d6b:	cmp    dl,0xb
  404d6e:	ja     404d98 <__sprintf_chk@plt+0x39d8>
  404d70:	movzx  edx,dl
  404d73:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  404d77:	add    rdx,rdi
  404d7a:	notrack jmp rdx
  404d7d:	nop    DWORD PTR [rax]
  404d80:	mov    r8,r11
  404d83:	mov    BYTE PTR [rsp+0x17],0x1
  404d88:	add    r11,0x8
  404d8c:	jmp    404d2d <__sprintf_chk@plt+0x396d>
  404d8e:	xchg   ax,ax
  404d90:	movzx  edx,BYTE PTR [rbx-0x1]
  404d94:	mov    DWORD PTR [rsp+0x10],edx
  404d98:	movzx  edx,BYTE PTR [rbx+0x1]
  404d9c:	mov    rbx,rsi
  404d9f:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404da4:	nop    DWORD PTR [rax+0x0]
  404da8:	mov    r13,r14
  404dab:	test   r15b,r15b
  404dae:	je     404db5 <__sprintf_chk@plt+0x39f5>
  404db0:	mov    DWORD PTR [rsp+0x20],r9d
  404db5:	cmp    BYTE PTR [rsp+0x17],0x0
  404dba:	je     404dc1 <__sprintf_chk@plt+0x3a01>
  404dbc:	mov    QWORD PTR [rsp+0x28],r11
  404dc1:	movzx  edx,BYTE PTR [rbx+0x1]
  404dc5:	cmp    DWORD PTR [r12+0x48],edx
  404dca:	jg     405288 <__sprintf_chk@plt+0x3ec8>
  404dd0:	sub    rsi,QWORD PTR [r12+0x8]
  404dd5:	lea    eax,[rsi-0x1]
  404dd8:	or     eax,0x12000000
  404ddd:	mov    DWORD PTR [r12+0x4c],eax
  404de2:	jmp    404fc3 <__sprintf_chk@plt+0x3c03>
  404de7:	nop    WORD PTR [rax+rax*1+0x0]
  404df0:	movzx  edx,BYTE PTR [rbx+0x2]
  404df4:	inc    ebp
  404df6:	add    rbx,0x2
  404dfa:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404dff:	nop
  404e00:	movzx  edx,BYTE PTR [rbx+0x3]
  404e04:	add    ebp,0x4
  404e07:	add    rbx,0x3
  404e0b:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404e10:	movzx  edx,BYTE PTR [rbx+0x1]
  404e14:	add    rbx,0x2
  404e18:	add    ebp,edx
  404e1a:	movsxd rdx,ecx
  404e1d:	mov    DWORD PTR [rax+rdx*4],ebp
  404e20:	inc    ecx
  404e22:	movzx  edx,BYTE PTR [rbx]
  404e25:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404e2a:	nop    WORD PTR [rax+rax*1+0x0]
  404e30:	mov    rbx,QWORD PTR [r12+0x20]
  404e35:	cmp    r9d,0x2f
  404e39:	ja     405270 <__sprintf_chk@plt+0x3eb0>
  404e3f:	mov    edx,r9d
  404e42:	add    rdx,QWORD PTR [rsp+0x18]
  404e47:	add    r9d,0x8
  404e4b:	mov    r15d,0x1
  404e51:	movsxd rdx,DWORD PTR [rdx]
  404e54:	shl    rdx,0x2
  404e58:	add    rbx,rdx
  404e5b:	cmp    rdx,QWORD PTR [r12+0x28]
  404e60:	jae    4052ff <__sprintf_chk@plt+0x3f3f>
  404e66:	movsxd rdx,DWORD PTR [rbx]
  404e69:	test   edx,edx
  404e6b:	jle    404e91 <__sprintf_chk@plt+0x3ad1>
  404e6d:	nop    DWORD PTR [rax]
  404e70:	mov    r8d,edx
  404e73:	sar    r8d,0x18
  404e77:	movsxd r8,r8d
  404e7a:	lea    r8,[r8+r8*4]
  404e7e:	mov    r8,QWORD PTR [r12+r8*8+0x50]
  404e83:	lea    r8,[r8+rdx*4]
  404e87:	movsxd rdx,DWORD PTR [r8]
  404e8a:	mov    DWORD PTR [r8],ecx
  404e8d:	test   edx,edx
  404e8f:	jg     404e70 <__sprintf_chk@plt+0x3ab0>
  404e91:	mov    edx,ecx
  404e93:	neg    edx
  404e95:	mov    DWORD PTR [rbx],edx
  404e97:	movsxd rdx,ecx
  404e9a:	mov    DWORD PTR [rax+rdx*4],ebp
  404e9d:	inc    ecx
  404e9f:	mov    rbx,rsi
  404ea2:	movzx  edx,BYTE PTR [rsi]
  404ea5:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404eaa:	nop    WORD PTR [rax+rax*1+0x0]
  404eb0:	movzx  edx,BYTE PTR [rbx+0x1]
  404eb4:	lea    rsi,[rbx+0x2]
  404eb8:	mov    rbx,QWORD PTR [r12+0x10]
  404ebd:	shl    rdx,0x2
  404ec1:	add    rbx,rdx
  404ec4:	cmp    rdx,QWORD PTR [r12+0x18]
  404ec9:	jb     404e66 <__sprintf_chk@plt+0x3aa6>
  404ecb:	test   r15b,r15b
  404ece:	je     404ed5 <__sprintf_chk@plt+0x3b15>
  404ed0:	mov    DWORD PTR [rsp+0x20],r9d
  404ed5:	mov    rax,rsi
  404ed8:	sub    rax,QWORD PTR [r12+0x8]
  404edd:	dec    eax
  404edf:	or     eax,0x13000000
  404ee4:	mov    DWORD PTR [r12+0x4c],eax
  404ee9:	jmp    404fc3 <__sprintf_chk@plt+0x3c03>
  404eee:	xchg   ax,ax
  404ef0:	mov    rdx,QWORD PTR [r12+0x20]
  404ef5:	cmp    r9d,0x2f
  404ef9:	ja     405258 <__sprintf_chk@plt+0x3e98>
  404eff:	mov    ebx,r9d
  404f02:	add    rbx,QWORD PTR [rsp+0x18]
  404f07:	add    r9d,0x8
  404f0b:	mov    r15d,0x1
  404f11:	movsxd rbx,DWORD PTR [rbx]
  404f14:	shl    rbx,0x2
  404f18:	add    rdx,rbx
  404f1b:	cmp    rbx,QWORD PTR [r12+0x28]
  404f20:	jae    4052ff <__sprintf_chk@plt+0x3f3f>
  404f26:	mov    r13d,DWORD PTR [rdx]
  404f29:	test   r13d,r13d
  404f2c:	js     404fa6 <__sprintf_chk@plt+0x3be6>
  404f2e:	movsxd rbx,ecx
  404f31:	mov    DWORD PTR [rax+rbx*4],r13d
  404f35:	mov    DWORD PTR [rdx],ecx
  404f37:	mov    rbx,rsi
  404f3a:	sub    r8d,0xf4
  404f41:	lea    r13d,[rcx+0x1]
  404f45:	add    ebp,0x4
  404f48:	cmp    r8d,0x1
  404f4c:	jbe    405230 <__sprintf_chk@plt+0x3e70>
  404f52:	movzx  edx,BYTE PTR [rsi]
  404f55:	mov    ecx,r13d
  404f58:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  404f5d:	nop    DWORD PTR [rax]
  404f60:	movzx  r13d,BYTE PTR [rbx+0x1]
  404f65:	lea    rsi,[rbx+0x2]
  404f69:	mov    rdx,QWORD PTR [r12+0x10]
  404f6e:	mov    rbx,r13
  404f71:	shl    rbx,0x2
  404f75:	add    rdx,rbx
  404f78:	cmp    r13d,0xf6
  404f7f:	jg     4052dd <__sprintf_chk@plt+0x3f1d>
  404f85:	cmp    r13d,0x9
  404f89:	jg     40529b <__sprintf_chk@plt+0x3edb>
  404f8f:	mov    r13d,DWORD PTR [rdx]
  404f92:	test   r13d,r13d
  404f95:	jns    404ecb <__sprintf_chk@plt+0x3b0b>
  404f9b:	cmp    rbx,QWORD PTR [r12+0x18]
  404fa0:	jae    404ecb <__sprintf_chk@plt+0x3b0b>
  404fa6:	movsxd rdx,ecx
  404fa9:	neg    r13d
  404fac:	mov    DWORD PTR [rax+rdx*4],r13d
  404fb0:	mov    rbx,rsi
  404fb3:	jmp    404f3a <__sprintf_chk@plt+0x3b7a>
  404fb5:	nop    DWORD PTR [rax]
  404fb8:	mov    r13,r14
  404fbb:	mov    DWORD PTR [r13+0x18],ecx
  404fbf:	mov    DWORD PTR [r13+0x20],ebp
  404fc3:	mov    rax,QWORD PTR [rsp+0x38]
  404fc8:	xor    rax,QWORD PTR fs:0x28
  404fd1:	jne    40532c <__sprintf_chk@plt+0x3f6c>
  404fd7:	add    rsp,0x78
  404fdb:	pop    rbx
  404fdc:	pop    rbp
  404fdd:	pop    r12
  404fdf:	pop    r13
  404fe1:	pop    r14
  404fe3:	pop    r15
  404fe5:	ret    
  404fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ff0:	movzx  edx,BYTE PTR [rbx+0x2]
  404ff4:	add    ebp,r8d
  404ff7:	mov    ecx,r13d
  404ffa:	add    rbx,0x2
  404ffe:	mov    DWORD PTR [rsp+0x10],0x4
  405006:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  40500b:	nop    DWORD PTR [rax+rax*1+0x0]
  405010:	test   r8d,0xfffffff8
  405017:	jne    405030 <__sprintf_chk@plt+0x3c70>
  405019:	movzx  ecx,BYTE PTR [rbx+0x1]
  40501d:	cmp    r8d,0x4
  405021:	jne    4051f0 <__sprintf_chk@plt+0x3e30>
  405027:	test   cl,0x1
  40502a:	je     4051f0 <__sprintf_chk@plt+0x3e30>
  405030:	mov    rsi,QWORD PTR [rsp]
  405034:	test   r15b,r15b
  405037:	je     40503e <__sprintf_chk@plt+0x3c7e>
  405039:	mov    DWORD PTR [rsp+0x20],r9d
  40503e:	sub    rsi,QWORD PTR [r12+0x8]
  405043:	lea    eax,[rsi-0x1]
  405046:	or     eax,0x15000000
  40504b:	mov    DWORD PTR [r12+0x4c],eax
  405050:	jmp    404fc3 <__sprintf_chk@plt+0x3c03>
  405055:	nop    DWORD PTR [rax]
  405058:	mov    rsi,QWORD PTR [rsp]
  40505c:	sub    r8d,0xffffff80
  405060:	and    r8d,0xffffff00
  405067:	je     405121 <__sprintf_chk@plt+0x3d61>
  40506d:	add    ebp,0x4
  405070:	movzx  edx,BYTE PTR [rbx+0x1]
  405074:	mov    ecx,r13d
  405077:	mov    rbx,rsi
  40507a:	mov    DWORD PTR [rsp+0x10],0x4
  405082:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  405087:	nop    WORD PTR [rax+rax*1+0x0]
  405090:	mov    rsi,QWORD PTR [rsp]
  405094:	and    r8d,0xffff0000
  40509b:	jne    40517d <__sprintf_chk@plt+0x3dbd>
  4050a1:	movzx  edx,BYTE PTR [rbx+0x1]
  4050a5:	add    ebp,0x2
  4050a8:	mov    ecx,r13d
  4050ab:	mov    rbx,rsi
  4050ae:	mov    DWORD PTR [rsp+0x10],0x4
  4050b6:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  4050bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050c0:	lea    edx,[r8+0x80]
  4050c7:	and    edx,0xffffff00
  4050cd:	mov    rsi,QWORD PTR [rsp]
  4050d1:	jne    405094 <__sprintf_chk@plt+0x3cd4>
  4050d3:	jmp    405121 <__sprintf_chk@plt+0x3d61>
  4050d5:	nop    DWORD PTR [rax]
  4050d8:	mov    rsi,QWORD PTR [rsp]
  4050dc:	jmp    40506d <__sprintf_chk@plt+0x3cad>
  4050de:	xchg   ax,ax
  4050e0:	mov    rcx,QWORD PTR [rsp+0x8]
  4050e5:	mov    rsi,QWORD PTR [rsp]
  4050e9:	mov    DWORD PTR [rax+rcx*1-0x4],0xc0000000
  4050f1:	mov    DWORD PTR [rsp+0x10],0x4
  4050f9:	mov    ecx,r13d
  4050fc:	movzx  edx,BYTE PTR [rbx+0x1]
  405100:	mov    rbx,rsi
  405103:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  405108:	nop    DWORD PTR [rax+rax*1+0x0]
  405110:	sub    r8d,0xffffff80
  405114:	and    r8d,0xffffff00
  40511b:	mov    rsi,QWORD PTR [rsp]
  40511f:	jne    40517d <__sprintf_chk@plt+0x3dbd>
  405121:	movzx  edx,BYTE PTR [rbx+0x1]
  405125:	inc    ebp
  405127:	mov    ecx,r13d
  40512a:	mov    rbx,rsi
  40512d:	mov    DWORD PTR [rsp+0x10],0x4
  405135:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  40513a:	nop    WORD PTR [rax+rax*1+0x0]
  405140:	mov    rsi,QWORD PTR [rsp]
  405144:	test   r8d,r8d
  405147:	jne    40505c <__sprintf_chk@plt+0x3c9c>
  40514d:	mov    edx,DWORD PTR [rsp+0x10]
  405151:	and    edx,0x7
  405154:	cmp    edx,0x4
  405157:	je     4052d1 <__sprintf_chk@plt+0x3f11>
  40515d:	cmp    edx,0x5
  405160:	jne    405070 <__sprintf_chk@plt+0x3cb0>
  405166:	jmp    405121 <__sprintf_chk@plt+0x3d61>
  405168:	nop    DWORD PTR [rax+rax*1+0x0]
  405170:	and    r8d,0xffffff00
  405177:	mov    rsi,QWORD PTR [rsp]
  40517b:	je     405121 <__sprintf_chk@plt+0x3d61>
  40517d:	test   r15b,r15b
  405180:	je     405187 <__sprintf_chk@plt+0x3dc7>
  405182:	mov    DWORD PTR [rsp+0x20],r9d
  405187:	mov    rax,rsi
  40518a:	sub    rax,QWORD PTR [r12+0x8]
  40518f:	dec    eax
  405191:	or     eax,0x11000000
  405196:	mov    DWORD PTR [r12+0x4c],eax
  40519b:	jmp    404fc3 <__sprintf_chk@plt+0x3c03>
  4051a0:	cmp    r14,0x10
  4051a4:	mov    esi,0x10
  4051a9:	cmovb  r14,rsi
  4051ad:	cmp    r14,rcx
  4051b0:	jae    4051c0 <__sprintf_chk@plt+0x3e00>
  4051b2:	nop    WORD PTR [rax+rax*1+0x0]
  4051b8:	add    r14,r14
  4051bb:	cmp    rcx,r14
  4051be:	ja     4051b8 <__sprintf_chk@plt+0x3df8>
  4051c0:	mov    rsi,r14
  4051c3:	mov    rdi,rax
  4051c6:	mov    DWORD PTR [rsp],edx
  4051c9:	call   401350 <realloc@plt>
  4051ce:	test   rax,rax
  4051d1:	mov    QWORD PTR [r13+0x8],rax
  4051d5:	movsxd rdx,DWORD PTR [rsp]
  4051d9:	je     405322 <__sprintf_chk@plt+0x3f62>
  4051df:	mov    QWORD PTR [r13+0x10],r14
  4051e3:	jmp    404c63 <__sprintf_chk@plt+0x38a3>
  4051e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051f0:	lea    rsi,[rbx+0x2]
  4051f4:	movzx  edx,BYTE PTR [rbx+0x2]
  4051f8:	cmp    cl,0x1
  4051fb:	je     4052b0 <__sprintf_chk@plt+0x3ef0>
  405201:	mov    ecx,r13d
  405204:	mov    rbx,rsi
  405207:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  40520c:	nop    DWORD PTR [rax+0x0]
  405210:	mov    rsi,QWORD PTR [rsp]
  405214:	movzx  edx,BYTE PTR [rbx+0x1]
  405218:	mov    ecx,r13d
  40521b:	mov    rbx,rsi
  40521e:	mov    DWORD PTR [rsp+0x10],0x4
  405226:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  40522b:	nop    DWORD PTR [rax+rax*1+0x0]
  405230:	movsxd r13,r13d
  405233:	mov    DWORD PTR [rax+r13*4],ebp
  405237:	add    ecx,0x2
  40523a:	movzx  edx,BYTE PTR [rsi]
  40523d:	jmp    404ce8 <__sprintf_chk@plt+0x3928>
  405242:	nop    WORD PTR [rax+rax*1+0x0]
  405248:	mov    rax,QWORD PTR [r13+0x0]
  40524c:	jmp    404c85 <__sprintf_chk@plt+0x38c5>
  405251:	nop    DWORD PTR [rax+0x0]
  405258:	mov    rbx,r11
  40525b:	mov    BYTE PTR [rsp+0x17],0x1
  405260:	add    r11,0x8
  405264:	jmp    404f11 <__sprintf_chk@plt+0x3b51>
  405269:	nop    DWORD PTR [rax+0x0]
  405270:	mov    rdx,r11
  405273:	mov    BYTE PTR [rsp+0x17],0x1
  405278:	add    r11,0x8
  40527c:	jmp    404e51 <__sprintf_chk@plt+0x3a91>
  405281:	nop    DWORD PTR [rax+0x0]
  405288:	lea    rax,[rdx+rdx*4]
  40528c:	lea    rax,[r12+rax*8+0x50]
  405291:	mov    QWORD PTR [r12+0x38],rax
  405296:	jmp    404fbb <__sprintf_chk@plt+0x3bfb>
  40529b:	cmp    rbx,QWORD PTR [r12+0x18]
  4052a0:	jb     404f26 <__sprintf_chk@plt+0x3b66>
  4052a6:	jmp    404ecb <__sprintf_chk@plt+0x3b0b>
  4052ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4052b0:	cmp    dl,0xe9
  4052b3:	jne    405201 <__sprintf_chk@plt+0x3e41>
  4052b9:	lea    rcx,[rbx+0x3]
  4052bd:	mov    QWORD PTR [rsp],rcx
  4052c1:	mov    DWORD PTR [rsp+0x10],r8d
  4052c6:	mov    ecx,r13d
  4052c9:	mov    rbx,rsi
  4052cc:	jmp    404d15 <__sprintf_chk@plt+0x3955>
  4052d1:	movzx  edx,BYTE PTR [rbx-0x1]
  4052d5:	and    edx,0x7
  4052d8:	jmp    40515d <__sprintf_chk@plt+0x3d9d>
  4052dd:	mov    ebx,DWORD PTR [rdx-0x3d8]
  4052e3:	mov    r13d,0x0
  4052e9:	test   ebx,ebx
  4052eb:	cmovns r13d,DWORD PTR [rdx-0x3d8]
  4052f3:	sub    rdx,0x3d8
  4052fa:	jmp    404f2e <__sprintf_chk@plt+0x3b6e>
  4052ff:	test   r15b,r15b
  405302:	je     405309 <__sprintf_chk@plt+0x3f49>
  405304:	mov    DWORD PTR [rsp+0x20],r9d
  405309:	mov    rax,rsi
  40530c:	sub    rax,QWORD PTR [r12+0x8]
  405311:	dec    eax
  405313:	or     eax,0x14000000
  405318:	mov    DWORD PTR [r12+0x4c],eax
  40531d:	jmp    404fc3 <__sprintf_chk@plt+0x3c03>
  405322:	mov    edi,0x1
  405327:	call   401370 <exit@plt>
  40532c:	call   401270 <__stack_chk_fail@plt>
  405331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40533c:	nop    DWORD PTR [rax+0x0]
  405340:	endbr64 
  405344:	push   r15
  405346:	push   r14
  405348:	push   r13
  40534a:	push   r12
  40534c:	push   rbp
  40534d:	push   rbx
  40534e:	mov    r11,QWORD PTR [rdi]
  405351:	mov    QWORD PTR [rsp-0x8],rsi
  405356:	mov    eax,DWORD PTR [r11+0x4c]
  40535a:	mov    QWORD PTR [rsi],0x0
  405361:	mov    DWORD PTR [rsp-0xc],eax
  405365:	test   eax,eax
  405367:	jne    40545a <__sprintf_chk@plt+0x409a>
  40536d:	mov    rax,QWORD PTR [r11+0x28]
  405371:	test   rax,rax
  405374:	je     4053b6 <__sprintf_chk@plt+0x3ff6>
  405376:	mov    rcx,QWORD PTR [r11+0x20]
  40537a:	mov    r8d,DWORD PTR [rcx]
  40537d:	test   r8d,r8d
  405380:	jg     4056bf <__sprintf_chk@plt+0x42ff>
  405386:	lea    rdx,[rax-0x1]
  40538a:	shr    rdx,0x2
  40538e:	inc    rdx
  405391:	mov    eax,0x1
  405396:	jmp    4053af <__sprintf_chk@plt+0x3fef>
  405398:	nop    DWORD PTR [rax+rax*1+0x0]
  4053a0:	inc    rax
  4053a3:	mov    edi,DWORD PTR [rcx+rax*4-0x4]
  4053a7:	test   edi,edi
  4053a9:	jg     4056a6 <__sprintf_chk@plt+0x42e6>
  4053af:	mov    esi,eax
  4053b1:	cmp    rdx,rax
  4053b4:	jne    4053a0 <__sprintf_chk@plt+0x3fe0>
  4053b6:	mov    rax,QWORD PTR [r11+0x18]
  4053ba:	cmp    rax,0x28
  4053be:	jbe    405469 <__sprintf_chk@plt+0x40a9>
  4053c4:	sub    rax,0x29
  4053c8:	shr    rax,0x2
  4053cc:	mov    r9,QWORD PTR [r11+0x10]
  4053d0:	mov    rdi,rax
  4053d3:	xor    esi,esi
  4053d5:	mov    r8d,0xfffffff6
  4053db:	nop    DWORD PTR [rax+rax*1+0x0]
  4053e0:	movsxd rax,DWORD PTR [r9+rsi*4+0x28]
  4053e5:	mov    ecx,r8d
  4053e8:	sub    ecx,esi
  4053ea:	test   eax,eax
  4053ec:	jle    40540e <__sprintf_chk@plt+0x404e>
  4053ee:	xchg   ax,ax
  4053f0:	mov    edx,eax
  4053f2:	sar    edx,0x18
  4053f5:	movsxd rdx,edx
  4053f8:	lea    rdx,[rdx+rdx*4]
  4053fc:	mov    rdx,QWORD PTR [r11+rdx*8+0x50]
  405401:	lea    rdx,[rdx+rax*4]
  405405:	movsxd rax,DWORD PTR [rdx]
  405408:	mov    DWORD PTR [rdx],ecx
  40540a:	test   eax,eax
  40540c:	jg     4053f0 <__sprintf_chk@plt+0x4030>
  40540e:	lea    rax,[rsi+0x1]
  405412:	cmp    rdi,rsi
  405415:	je     405469 <__sprintf_chk@plt+0x40a9>
  405417:	mov    rsi,rax
  40541a:	jmp    4053e0 <__sprintf_chk@plt+0x4020>
  40541c:	nop    DWORD PTR [rax+0x0]
  405420:	cmp    edx,r13d
  405423:	jne    4054d0 <__sprintf_chk@plt+0x4110>
  405429:	mov    rax,QWORD PTR [rsp-0x28]
  40542e:	inc    r15
  405431:	add    r8d,DWORD PTR [rax]
  405434:	add    rax,0x28
  405438:	add    DWORD PTR [rsp-0x10],0x1000000
  405440:	mov    QWORD PTR [rsp-0x28],rax
  405445:	cmp    DWORD PTR [r11+0x48],r15d
  405449:	jg     4054a0 <__sprintf_chk@plt+0x40e0>
  40544b:	movsxd r8,r8d
  40544e:	mov    rax,QWORD PTR [rsp-0x8]
  405453:	mov    QWORD PTR [r11+0x40],r8
  405457:	mov    QWORD PTR [rax],r8
  40545a:	mov    eax,DWORD PTR [rsp-0xc]
  40545e:	pop    rbx
  40545f:	pop    rbp
  405460:	pop    r12
  405462:	pop    r13
  405464:	pop    r14
  405466:	pop    r15
  405468:	ret    
  405469:	mov    eax,DWORD PTR [r11+0x48]
  40546d:	xor    r8d,r8d
  405470:	test   eax,eax
  405472:	jle    40544e <__sprintf_chk@plt+0x408e>
  405474:	lea    rax,[r11+0x70]
  405478:	mov    QWORD PTR [rsp-0x28],rax
  40547d:	lea    rax,[r11+0x98]
  405484:	mov    DWORD PTR [rsp-0x10],0x0
  40548c:	mov    QWORD PTR [rsp-0x18],rax
  405491:	xor    r8d,r8d
  405494:	xor    r15d,r15d
  405497:	lea    rcx,[rip+0x5f9e]        # 40b43c <__sprintf_chk@plt+0xa07c>
  40549e:	xchg   ax,ax
  4054a0:	mov    rax,QWORD PTR [rsp-0x28]
  4054a5:	mov    ebx,DWORD PTR [rsp-0x10]
  4054a9:	mov    r13d,DWORD PTR [rax-0x8]
  4054ad:	mov    rsi,QWORD PTR [rax-0x20]
  4054b1:	mov    edx,ebx
  4054b3:	cmp    ebx,r13d
  4054b6:	je     405429 <__sprintf_chk@plt+0x4069>
  4054bc:	mov    eax,r15d
  4054bf:	not    eax
  4054c1:	mov    DWORD PTR [rsp-0x1c],eax
  4054c5:	mov    r14,QWORD PTR [r11+0x8]
  4054c9:	nop    DWORD PTR [rax+0x0]
  4054d0:	movsxd rax,edx
  4054d3:	movsxd rax,DWORD PTR [rsi+rax*4]
  4054d7:	inc    edx
  4054d9:	add    rax,r14
  4054dc:	nop    DWORD PTR [rax+0x0]
  4054e0:	lea    r9,[rax+0x1]
  4054e4:	movzx  ebx,BYTE PTR [r9-0x1]
  4054e9:	lea    edi,[rbx+0x17]
  4054ec:	cmp    dil,0x16
  4054f0:	ja     4055f0 <__sprintf_chk@plt+0x4230>
  4054f6:	movzx  edi,dil
  4054fa:	movsxd rdi,DWORD PTR [rcx+rdi*4]
  4054fe:	add    rdi,rcx
  405501:	notrack jmp rdi
  405504:	nop    DWORD PTR [rax+0x0]
  405508:	mov    rax,r9
  40550b:	movsxd rdi,edx
  40550e:	add    DWORD PTR [rsi+rdi*4],r8d
  405512:	inc    edx
  405514:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  405516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405520:	mov    rax,r9
  405523:	inc    edx
  405525:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  405527:	nop    WORD PTR [rax+rax*1+0x0]
  405530:	add    rax,0x2
  405534:	jmp    40550b <__sprintf_chk@plt+0x414b>
  405536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405540:	movzx  edi,BYTE PTR [r9-0x2]
  405545:	mov    rax,r9
  405548:	movsxd r9,edx
  40554b:	lea    r9,[r9*4+0x4]
  405553:	lea    r10,[rsi+r9*1]
  405557:	cmp    edi,0xe9
  40555d:	je     405600 <__sprintf_chk@plt+0x4240>
  405563:	and    edi,0xf0
  405569:	xor    ebx,ebx
  40556b:	cmp    edi,0x80
  405571:	je     405660 <__sprintf_chk@plt+0x42a0>
  405577:	mov    DWORD PTR [r10],ebx
  40557a:	add    edx,0x2
  40557d:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  405582:	nop    WORD PTR [rax+rax*1+0x0]
  405588:	add    rax,0x2
  40558c:	movzx  edi,BYTE PTR [r9-0x2]
  405591:	jmp    405548 <__sprintf_chk@plt+0x4188>
  405593:	nop    DWORD PTR [rax+rax*1+0x0]
  405598:	add    rax,0x2
  40559c:	inc    edx
  40559e:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  4055a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4055a8:	add    rax,0x2
  4055ac:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  4055b1:	nop    DWORD PTR [rax+0x0]
  4055b8:	add    rax,0x3
  4055bc:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  4055c1:	nop    DWORD PTR [rax+0x0]
  4055c8:	movsxd rdi,edx
  4055cb:	mov    ebx,DWORD PTR [rsi+rdi*4]
  4055ce:	movzx  r9d,BYTE PTR [r9]
  4055d2:	add    ebx,r8d
  4055d5:	mov    edi,ebx
  4055d7:	and    edi,r9d
  4055da:	add    rax,0x2
  4055de:	sub    r8d,edi
  4055e1:	inc    edx
  4055e3:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  4055e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055f0:	mov    rax,r9
  4055f3:	jmp    4054e0 <__sprintf_chk@plt+0x4120>
  4055f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405600:	mov    ebx,0x3
  405605:	mov    r9d,DWORD PTR [rsi+r9*1-0x4]
  40560a:	test   r9d,r9d
  40560d:	js     405646 <__sprintf_chk@plt+0x4286>
  40560f:	mov    ebp,r9d
  405612:	sar    ebp,0x18
  405615:	movsxd rdi,ebp
  405618:	lea    rdi,[rdi+rdi*4]
  40561c:	mov    rdi,QWORD PTR [r11+rdi*8+0x50]
  405621:	movsxd r12,r9d
  405624:	mov    edi,DWORD PTR [rdi+r12*4]
  405628:	cmp    edx,r9d
  40562b:	jl     405670 <__sprintf_chk@plt+0x42b0>
  40562d:	sub    edi,r8d
  405630:	mov    r9d,0xffffff80
  405636:	sub    edi,DWORD PTR [r10]
  405639:	sub    r9d,ebx
  40563c:	cmp    r9d,edi
  40563f:	jg     405646 <__sprintf_chk@plt+0x4286>
  405641:	cmp    edi,0x7f
  405644:	jle    405650 <__sprintf_chk@plt+0x4290>
  405646:	xor    ebx,ebx
  405648:	jmp    405577 <__sprintf_chk@plt+0x41b7>
  40564d:	nop    DWORD PTR [rax]
  405650:	sub    r8d,ebx
  405653:	jmp    405577 <__sprintf_chk@plt+0x41b7>
  405658:	nop    DWORD PTR [rax+rax*1+0x0]
  405660:	mov    ebx,0x4
  405665:	jmp    405605 <__sprintf_chk@plt+0x4245>
  405667:	nop    WORD PTR [rax+rax*1+0x0]
  405670:	cmp    ebp,r15d
  405673:	jle    405630 <__sprintf_chk@plt+0x4270>
  405675:	mov    r9d,DWORD PTR [rsp-0x1c]
  40567a:	add    r9d,ebp
  40567d:	add    r9,r15
  405680:	mov    rbp,QWORD PTR [rsp-0x18]
  405685:	lea    r9,[r9+r9*4]
  405689:	lea    rbp,[rbp+r9*8+0x0]
  40568e:	mov    r9,QWORD PTR [rsp-0x28]
  405693:	nop    DWORD PTR [rax+rax*1+0x0]
  405698:	add    edi,DWORD PTR [r9]
  40569b:	add    r9,0x28
  40569f:	cmp    rbp,r9
  4056a2:	jne    405698 <__sprintf_chk@plt+0x42d8>
  4056a4:	jmp    405630 <__sprintf_chk@plt+0x4270>
  4056a6:	or     esi,0x22000000
  4056ac:	mov    DWORD PTR [rsp-0xc],esi
  4056b0:	mov    eax,DWORD PTR [rsp-0xc]
  4056b4:	pop    rbx
  4056b5:	pop    rbp
  4056b6:	pop    r12
  4056b8:	pop    r13
  4056ba:	pop    r14
  4056bc:	pop    r15
  4056be:	ret    
  4056bf:	mov    DWORD PTR [rsp-0xc],0x22000000
  4056c7:	jmp    40545a <__sprintf_chk@plt+0x409a>
  4056cc:	nop    DWORD PTR [rax+0x0]
  4056d0:	endbr64 
  4056d4:	push   r15
  4056d6:	mov    r8,rsi
  4056d9:	push   r14
  4056db:	push   r13
  4056dd:	push   r12
  4056df:	push   rbp
  4056e0:	push   rbx
  4056e1:	sub    rsp,0x48
  4056e5:	mov    r11,QWORD PTR [rdi]
  4056e8:	mov    eax,DWORD PTR [r11+0x48]
  4056ec:	test   eax,eax
  4056ee:	jle    405ce5 <__sprintf_chk@plt+0x4925>
  4056f4:	lea    rax,[r11+0x50]
  4056f8:	mov    QWORD PTR [rsp+0x38],rax
  4056fd:	mov    DWORD PTR [rsp+0x34],0x0
  405705:	mov    rbx,rsi
  405708:	lea    r13,[rip+0x5d89]        # 40b498 <__sprintf_chk@plt+0xa0d8>
  40570f:	mov    r10,rdi
  405712:	mov    r15,rsi
  405715:	mov    rax,QWORD PTR [rsp+0x38]
  40571a:	movsxd rdx,DWORD PTR [rax+0x18]
  40571e:	mov    r12,QWORD PTR [rax+0x8]
  405722:	mov    rax,QWORD PTR [rax]
  405725:	lea    rax,[rax+rdx*4]
  405729:	mov    QWORD PTR [rsp+0x8],rax
  40572e:	cmp    r12,rax
  405731:	je     40595b <__sprintf_chk@plt+0x459b>
  405737:	nop    WORD PTR [rax+rax*1+0x0]
  405740:	movsxd rbp,DWORD PTR [r12]
  405744:	xor    r14d,r14d
  405747:	add    rbp,QWORD PTR [r11+0x8]
  40574b:	movzx  ecx,BYTE PTR [rbp+0x0]
  40574f:	add    r12,0x4
  405753:	xor    r9d,r9d
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	movzx  esi,cl
  405763:	sub    esi,0xe9
  405769:	lea    rdx,[rbp+0x1]
  40576d:	xor    eax,eax
  40576f:	cmp    esi,0x11
  405772:	ja     40577c <__sprintf_chk@plt+0x43bc>
  405774:	movsxd rax,DWORD PTR [r12]
  405778:	add    r12,0x4
  40577c:	lea    esi,[rcx+0x17]
  40577f:	cmp    sil,0x16
  405783:	ja     405938 <__sprintf_chk@plt+0x4578>
  405789:	movzx  esi,sil
  40578d:	movsxd rcx,DWORD PTR [r13+rsi*4+0x0]
  405792:	add    rcx,r13
  405795:	notrack jmp rcx
  405798:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a0:	mov    ecx,eax
  4057a2:	sar    ecx,0x18
  4057a5:	movsxd rcx,ecx
  4057a8:	lea    rcx,[rcx+rcx*4]
  4057ac:	mov    rcx,QWORD PTR [r11+rcx*8+0x50]
  4057b1:	lea    rcx,[rcx+rax*4]
  4057b5:	mov    eax,DWORD PTR [rcx]
  4057b7:	test   eax,eax
  4057b9:	js     405ba0 <__sprintf_chk@plt+0x47e0>
  4057bf:	add    eax,r15d
  4057c2:	movzx  edi,ah
  4057c5:	mov    ecx,eax
  4057c7:	mov    esi,eax
  4057c9:	mov    r8d,edi
  4057cc:	sar    ecx,0x10
  4057cf:	shr    eax,0x18
  4057d2:	mov    rbp,rdx
  4057d5:	lea    rdi,[rbx+0x4]
  4057d9:	mov    BYTE PTR [rbx],sil
  4057dc:	mov    BYTE PTR [rbx+0x1],r8b
  4057e0:	mov    BYTE PTR [rbx+0x2],cl
  4057e3:	mov    BYTE PTR [rbx+0x3],al
  4057e6:	mov    rbx,rdi
  4057e9:	movzx  ecx,BYTE PTR [rbp+0x0]
  4057ed:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  4057f2:	nop    WORD PTR [rax+rax*1+0x0]
  4057f8:	lea    rdx,[rbp+0x2]
  4057fc:	lea    rdi,[r12+0x4]
  405801:	test   eax,eax
  405803:	jns    405885 <__sprintf_chk@plt+0x44c5>
  405809:	neg    eax
  40580b:	mov    rcx,QWORD PTR [r11+0x30]
  40580f:	cdqe   
  405811:	mov    eax,DWORD PTR [rcx+rax*8]
  405814:	mov    r12,rdi
  405817:	lea    rdi,[rbx+0x4]
  40581b:	sub    eax,edi
  40581d:	movzx  ecx,ah
  405820:	mov    r8d,ecx
  405823:	mov    ecx,eax
  405825:	mov    esi,eax
  405827:	sar    ecx,0x10
  40582a:	shr    eax,0x18
  40582d:	mov    rbp,rdx
  405830:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  405832:	nop    WORD PTR [rax+rax*1+0x0]
  405838:	mov    esi,eax
  40583a:	mov    rbp,rdx
  40583d:	mov    rax,rbx
  405840:	inc    rbx
  405843:	mov    BYTE PTR [rax],sil
  405846:	movzx  ecx,BYTE PTR [rdx]
  405849:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  40584e:	xchg   ax,ax
  405850:	mov    esi,eax
  405852:	mov    BYTE PTR [rbx],sil
  405855:	mov    BYTE PTR [rbx+0x1],ah
  405858:	add    rbx,0x2
  40585c:	movzx  ecx,BYTE PTR [rbp+0x1]
  405860:	mov    rbp,rdx
  405863:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405868:	nop    DWORD PTR [rax+rax*1+0x0]
  405870:	movzx  ecx,BYTE PTR [rbp+0x1]
  405874:	mov    rbp,rdx
  405877:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  40587c:	nop    DWORD PTR [rax+0x0]
  405880:	lea    rdi,[r12+0x4]
  405885:	mov    ecx,eax
  405887:	sar    ecx,0x18
  40588a:	movsxd rcx,ecx
  40588d:	lea    rcx,[rcx+rcx*4]
  405891:	mov    rcx,QWORD PTR [r11+rcx*8+0x50]
  405896:	lea    rcx,[rcx+rax*4]
  40589a:	mov    eax,DWORD PTR [rcx]
  40589c:	test   eax,eax
  40589e:	js     405c18 <__sprintf_chk@plt+0x4858>
  4058a4:	mov    rcx,rbx
  4058a7:	mov    r8d,DWORD PTR [r12]
  4058ab:	sub    rcx,r15
  4058ae:	add    ecx,0x4
  4058b1:	sub    ecx,r8d
  4058b4:	sub    eax,ecx
  4058b6:	mov    esi,eax
  4058b8:	test   r8d,r8d
  4058bb:	jne    405bb0 <__sprintf_chk@plt+0x47f0>
  4058c1:	movzx  ecx,ah
  4058c4:	mov    r8d,ecx
  4058c7:	mov    ecx,eax
  4058c9:	mov    r12,rdi
  4058cc:	sar    ecx,0x10
  4058cf:	shr    eax,0x18
  4058d2:	mov    rbp,rdx
  4058d5:	lea    rdi,[rbx+0x4]
  4058d9:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  4058de:	xchg   ax,ax
  4058e0:	lea    rdx,[rbp+0x2]
  4058e4:	test   eax,eax
  4058e6:	jns    4057a0 <__sprintf_chk@plt+0x43e0>
  4058ec:	mov    rcx,QWORD PTR [r11+0x30]
  4058f0:	neg    eax
  4058f2:	cdqe   
  4058f4:	mov    rax,QWORD PTR [rcx+rax*8]
  4058f8:	mov    rbp,rdx
  4058fb:	movzx  edi,ah
  4058fe:	mov    ecx,eax
  405900:	mov    esi,eax
  405902:	mov    r8,rdi
  405905:	sar    ecx,0x10
  405908:	sar    eax,0x18
  40590b:	lea    rdi,[rbx+0x4]
  40590f:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  405914:	nop    DWORD PTR [rax+0x0]
  405918:	movzx  ecx,BYTE PTR [rbp+0x1]
  40591c:	mov    r14,rbx
  40591f:	mov    rbp,rdx
  405922:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405927:	nop    WORD PTR [rax+rax*1+0x0]
  405930:	movzx  ecx,BYTE PTR [rbp+0x1]
  405934:	lea    rdx,[rbp+0x2]
  405938:	mov    BYTE PTR [rbx],cl
  40593a:	mov    rbp,rdx
  40593d:	inc    rbx
  405940:	movzx  ecx,BYTE PTR [rdx]
  405943:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405948:	nop    DWORD PTR [rax+rax*1+0x0]
  405950:	cmp    r12,QWORD PTR [rsp+0x8]
  405955:	jne    405740 <__sprintf_chk@plt+0x4380>
  40595b:	inc    DWORD PTR [rsp+0x34]
  40595f:	add    QWORD PTR [rsp+0x38],0x28
  405965:	mov    eax,DWORD PTR [rsp+0x34]
  405969:	cmp    DWORD PTR [r11+0x48],eax
  40596d:	jg     405715 <__sprintf_chk@plt+0x4355>
  405973:	mov    r8,r15
  405976:	mov    rax,QWORD PTR [r11+0x40]
  40597a:	add    rax,r8
  40597d:	cmp    rbx,rax
  405980:	setne  al
  405983:	add    rsp,0x48
  405987:	pop    rbx
  405988:	pop    rbp
  405989:	pop    r12
  40598b:	pop    r13
  40598d:	movzx  eax,al
  405990:	pop    r14
  405992:	shl    eax,0x19
  405995:	pop    r15
  405997:	ret    
  405998:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	mov    eax,DWORD PTR [r10+0x44]
  4059a4:	movzx  r8d,BYTE PTR [rbp+0x1]
  4059a9:	movzx  ecx,BYTE PTR [rbp+0x2]
  4059ad:	cmp    eax,0xc7
  4059b2:	jg     405ced <__sprintf_chk@plt+0x492d>
  4059b8:	lea    rdi,[rip+0xd781]        # 413140 <__sprintf_chk@plt+0x11d80>
  4059bf:	mov    esi,DWORD PTR [rdi+rcx*4]
  4059c2:	test   esi,esi
  4059c4:	js     405c28 <__sprintf_chk@plt+0x4868>
  4059ca:	movsxd rdx,eax
  4059cd:	lea    rdx,[rdx+rdx*2]
  4059d1:	mov    rcx,rbx
  4059d4:	sub    rcx,QWORD PTR [r10+0x28]
  4059d8:	lea    rdx,[r10+rdx*4]
  4059dc:	inc    eax
  4059de:	mov    DWORD PTR [rdx+0x90],ecx
  4059e4:	mov    DWORD PTR [rdx+0x94],esi
  4059ea:	mov    DWORD PTR [rdx+0x98],r8d
  4059f1:	add    rbp,0x3
  4059f5:	mov    DWORD PTR [r10+0x44],eax
  4059f9:	xor    ecx,ecx
  4059fb:	xor    eax,eax
  4059fd:	xor    r8d,r8d
  405a00:	xor    esi,esi
  405a02:	lea    rdi,[rbx+0x4]
  405a06:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  405a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a10:	movzx  edi,BYTE PTR [rbp+0x1]
  405a14:	test   r14,r14
  405a17:	cmove  r14,rbx
  405a1b:	lea    ecx,[rdi+0x12]
  405a1e:	cmp    cl,0x2
  405a21:	mov    rdi,r9
  405a24:	cmovb  rdi,r14
  405a28:	test   eax,eax
  405a2a:	jne    405be0 <__sprintf_chk@plt+0x4820>
  405a30:	movzx  eax,BYTE PTR [r14-0x1]
  405a35:	mov    ecx,eax
  405a37:	and    ecx,0x7
  405a3a:	cmp    cl,0x4
  405a3d:	jne    405a46 <__sprintf_chk@plt+0x4686>
  405a3f:	movzx  ecx,BYTE PTR [r14]
  405a43:	and    ecx,0x7
  405a46:	cmp    cl,0x5
  405a49:	je     405cde <__sprintf_chk@plt+0x491e>
  405a4f:	add    eax,0xffffff80
  405a52:	mov    BYTE PTR [r14-0x1],al
  405a56:	mov    r14,rdi
  405a59:	movzx  ecx,BYTE PTR [rbp+0x1]
  405a5d:	mov    rbp,rdx
  405a60:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405a65:	nop    DWORD PTR [rax]
  405a68:	lea    r8d,[rax-0x1]
  405a6c:	lea    rdi,[rbp+0x2]
  405a70:	movzx  esi,BYTE PTR [rbp+0x1]
  405a74:	lea    rcx,[rbx+r8*1+0x1]
  405a79:	mov    rdx,rbx
  405a7c:	test   eax,eax
  405a7e:	je     405a91 <__sprintf_chk@plt+0x46d1>
  405a80:	inc    rdx
  405a83:	mov    BYTE PTR [rdx-0x1],sil
  405a87:	cmp    rdx,rcx
  405a8a:	jne    405a80 <__sprintf_chk@plt+0x46c0>
  405a8c:	lea    rbx,[rbx+r8*1+0x1]
  405a91:	movzx  ecx,BYTE PTR [rbp+0x2]
  405a95:	mov    rbp,rdi
  405a98:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405a9d:	nop    DWORD PTR [rax]
  405aa0:	mov    rax,rbx
  405aa3:	movzx  edx,BYTE PTR [rbp+0x1]
  405aa7:	sub    rax,r15
  405aaa:	lea    rsi,[rbp+0x2]
  405aae:	test   rax,rdx
  405ab1:	je     405aca <__sprintf_chk@plt+0x470a>
  405ab3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ab8:	inc    rbx
  405abb:	mov    rax,rbx
  405abe:	sub    rax,r15
  405ac1:	mov    BYTE PTR [rbx-0x1],0x90
  405ac5:	test   rax,rdx
  405ac8:	jne    405ab8 <__sprintf_chk@plt+0x46f8>
  405aca:	movzx  ecx,BYTE PTR [rbp+0x2]
  405ace:	mov    rbp,rsi
  405ad1:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ae0:	movzx  edx,BYTE PTR [rbp+0x1]
  405ae4:	lea    rsi,[rbp+0x2]
  405ae8:	movzx  ecx,BYTE PTR [rbp+0x2]
  405aec:	cmp    dl,0x9
  405aef:	jbe    405bd0 <__sprintf_chk@plt+0x4810>
  405af5:	cmp    cl,0xf2
  405af8:	jne    405afe <__sprintf_chk@plt+0x473e>
  405afa:	movsxd rax,DWORD PTR [r12]
  405afe:	mov    rcx,QWORD PTR [r11+0x30]
  405b02:	add    rax,r15
  405b05:	mov    QWORD PTR [rcx+rdx*8],rax
  405b09:	movzx  ecx,BYTE PTR [rbp+0x2]
  405b0d:	mov    rbp,rsi
  405b10:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405b15:	nop    DWORD PTR [rax]
  405b18:	lea    ecx,[rax+0x80]
  405b1e:	and    ecx,0xffffff00
  405b24:	mov    esi,eax
  405b26:	je     405b80 <__sprintf_chk@plt+0x47c0>
  405b28:	movzx  edi,ah
  405b2b:	mov    ecx,eax
  405b2d:	mov    r8d,edi
  405b30:	sar    ecx,0x10
  405b33:	shr    eax,0x18
  405b36:	mov    rbp,rdx
  405b39:	xor    r14d,r14d
  405b3c:	lea    rdi,[rbx+0x4]
  405b40:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  405b45:	nop    DWORD PTR [rax]
  405b48:	lea    ecx,[rax+0x80]
  405b4e:	and    ecx,0xffffff00
  405b54:	mov    esi,eax
  405b56:	je     405b80 <__sprintf_chk@plt+0x47c0>
  405b58:	xor    r14d,r14d
  405b5b:	jmp    405852 <__sprintf_chk@plt+0x4492>
  405b60:	cmp    BYTE PTR [rbp+0x1],0x1
  405b64:	lea    rdx,[rbp+0x2]
  405b68:	jbe    405b6d <__sprintf_chk@plt+0x47ad>
  405b6a:	shl    eax,0x3
  405b6d:	or     BYTE PTR [rbx-0x1],al
  405b70:	movzx  ecx,BYTE PTR [rbp+0x2]
  405b74:	mov    rbp,rdx
  405b77:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405b7c:	nop    DWORD PTR [rax+0x0]
  405b80:	test   r14,r14
  405b83:	cmove  r14,rbx
  405b87:	mov    rax,rbx
  405b8a:	add    BYTE PTR [r14-0x2],0x2
  405b8f:	mov    rbp,rdx
  405b92:	inc    rbx
  405b95:	xor    r14d,r14d
  405b98:	jmp    405843 <__sprintf_chk@plt+0x4483>
  405b9d:	nop    DWORD PTR [rax]
  405ba0:	mov    eax,DWORD PTR [rcx+0x4]
  405ba3:	jmp    4057c2 <__sprintf_chk@plt+0x4402>
  405ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bb0:	cmp    r8d,0x4
  405bb4:	je     405cc5 <__sprintf_chk@plt+0x4905>
  405bba:	mov    BYTE PTR [rbx-0x1],0xeb
  405bbe:	mov    rax,rbx
  405bc1:	mov    rbp,rdx
  405bc4:	mov    r12,rdi
  405bc7:	inc    rbx
  405bca:	jmp    405843 <__sprintf_chk@plt+0x4483>
  405bcf:	nop
  405bd0:	mov    rbp,rsi
  405bd3:	jmp    405760 <__sprintf_chk@plt+0x43a0>
  405bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  405be0:	lea    ecx,[rax+0x80]
  405be6:	and    ecx,0xffffff00
  405bec:	mov    esi,eax
  405bee:	jne    405ca8 <__sprintf_chk@plt+0x48e8>
  405bf4:	movzx  eax,BYTE PTR [r14-0x1]
  405bf9:	sub    eax,0x40
  405bfc:	mov    BYTE PTR [r14-0x1],al
  405c00:	mov    rbp,rdx
  405c03:	mov    rax,rbx
  405c06:	mov    r14,rdi
  405c09:	inc    rbx
  405c0c:	jmp    405843 <__sprintf_chk@plt+0x4483>
  405c11:	nop    DWORD PTR [rax+0x0]
  405c18:	mov    eax,DWORD PTR [rcx+0x4]
  405c1b:	mov    r12,rdi
  405c1e:	jmp    405817 <__sprintf_chk@plt+0x4457>
  405c23:	nop    DWORD PTR [rax+rax*1+0x0]
  405c28:	movsxd rax,DWORD PTR [r10+0x48]
  405c2c:	mov    rdx,QWORD PTR [r10+0x60]
  405c30:	lea    rsi,[rip+0xc9a9]        # 4125e0 <__sprintf_chk@plt+0x11220>
  405c37:	mov    DWORD PTR [rdi+rcx*4],eax
  405c3a:	lea    rax,[rdx+rax*8]
  405c3e:	mov    edi,DWORD PTR [r10+0x8]
  405c42:	mov    rdx,QWORD PTR [rsi+rcx*8]
  405c46:	lea    rsi,[rip+0x34c8]        # 409115 <__sprintf_chk@plt+0x7d55>
  405c4d:	mov    QWORD PTR [rsp+0x28],r11
  405c52:	mov    DWORD PTR [rsp+0x30],r8d
  405c57:	mov    QWORD PTR [rsp+0x20],rcx
  405c5c:	mov    QWORD PTR [rsp+0x18],r10
  405c61:	mov    QWORD PTR [rsp+0x10],rax
  405c66:	call   404700 <__sprintf_chk@plt+0x3340>
  405c6b:	mov    r10,QWORD PTR [rsp+0x18]
  405c70:	mov    rdx,QWORD PTR [rsp+0x10]
  405c75:	mov    rcx,QWORD PTR [rsp+0x20]
  405c7a:	lea    rdi,[rip+0xd4bf]        # 413140 <__sprintf_chk@plt+0x11d80>
  405c81:	mov    QWORD PTR [rdx],rax
  405c84:	mov    esi,DWORD PTR [rdi+rcx*4]
  405c87:	inc    DWORD PTR [r10+0x48]
  405c8b:	mov    eax,DWORD PTR [r10+0x44]
  405c8f:	mov    r11,QWORD PTR [rsp+0x28]
  405c94:	xor    r9d,r9d
  405c97:	mov    r8d,DWORD PTR [rsp+0x30]
  405c9c:	jmp    4059ca <__sprintf_chk@plt+0x460a>
  405ca1:	nop    DWORD PTR [rax+0x0]
  405ca8:	movzx  ecx,ah
  405cab:	mov    r8d,ecx
  405cae:	mov    ecx,eax
  405cb0:	mov    r14,rdi
  405cb3:	sar    ecx,0x10
  405cb6:	shr    eax,0x18
  405cb9:	mov    rbp,rdx
  405cbc:	lea    rdi,[rbx+0x4]
  405cc0:	jmp    4057d9 <__sprintf_chk@plt+0x4419>
  405cc5:	movzx  ecx,BYTE PTR [rbx-0x1]
  405cc9:	lea    rax,[rbx-0x1]
  405ccd:	sub    ecx,0x10
  405cd0:	mov    BYTE PTR [rbx-0x2],cl
  405cd3:	mov    rbp,rdx
  405cd6:	mov    r12,rdi
  405cd9:	jmp    405843 <__sprintf_chk@plt+0x4483>
  405cde:	xor    esi,esi
  405ce0:	jmp    405bf9 <__sprintf_chk@plt+0x4839>
  405ce5:	mov    rbx,rsi
  405ce8:	jmp    405976 <__sprintf_chk@plt+0x45b6>
  405ced:	mov    rax,QWORD PTR [rip+0xd2fc]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  405cf4:	lea    rdi,[rip+0x48d5]        # 40a5d0 <__sprintf_chk@plt+0x9210>
  405cfb:	mov    rcx,QWORD PTR [rax]
  405cfe:	mov    edx,0x37
  405d03:	mov    esi,0x1
  405d08:	call   401380 <fwrite@plt>
  405d0d:	mov    edi,0x1
  405d12:	call   401370 <exit@plt>
  405d17:	nop    WORD PTR [rax+rax*1+0x0]
  405d20:	endbr64 
  405d24:	mov    esi,esi
  405d26:	mov    rdx,QWORD PTR [rdi]
  405d29:	lea    rax,[rsi*4+0x0]
  405d31:	cmp    rax,QWORD PTR [rdx+0x28]
  405d35:	jae    405d70 <__sprintf_chk@plt+0x49b0>
  405d37:	mov    rax,QWORD PTR [rdx+0x20]
  405d3b:	mov    eax,DWORD PTR [rax+rsi*4]
  405d3e:	test   eax,eax
  405d40:	js     405d50 <__sprintf_chk@plt+0x4990>
  405d42:	setne  al
  405d45:	movzx  eax,al
  405d48:	sub    eax,0x2
  405d4b:	ret    
  405d4c:	nop    DWORD PTR [rax+0x0]
  405d50:	neg    eax
  405d52:	mov    ecx,eax
  405d54:	sar    ecx,0x18
  405d57:	movsxd rcx,ecx
  405d5a:	lea    rcx,[rcx+rcx*4]
  405d5e:	mov    rdx,QWORD PTR [rdx+rcx*8+0x50]
  405d63:	cdqe   
  405d65:	mov    eax,DWORD PTR [rdx+rax*4]
  405d68:	ret    
  405d69:	nop    DWORD PTR [rax+0x0]
  405d70:	mov    eax,0xfffffffe
  405d75:	ret    
  405d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d80:	endbr64 
  405d84:	mov    rdi,QWORD PTR [rdi]
  405d87:	mov    eax,DWORD PTR [rdi+0x4c]
  405d8a:	test   eax,eax
  405d8c:	jne    405e02 <__sprintf_chk@plt+0x4a42>
  405d8e:	mov    rcx,QWORD PTR [rdi+0x10]
  405d92:	mov    edx,0x1
  405d97:	nop    WORD PTR [rax+rax*1+0x0]
  405da0:	mov    r9d,DWORD PTR [rcx+rdx*4]
  405da4:	test   r9d,r9d
  405da7:	jg     405e08 <__sprintf_chk@plt+0x4a48>
  405da9:	mov    DWORD PTR [rcx+rdx*4],0x0
  405db0:	inc    rdx
  405db3:	cmp    rdx,0xa
  405db7:	jne    405da0 <__sprintf_chk@plt+0x49e0>
  405db9:	mov    edx,DWORD PTR [rdi+0x4c]
  405dbc:	test   edx,edx
  405dbe:	jne    405e00 <__sprintf_chk@plt+0x4a40>
  405dc0:	test   esi,esi
  405dc2:	js     405e00 <__sprintf_chk@plt+0x4a40>
  405dc4:	movsxd rsi,esi
  405dc7:	lea    rcx,[rsi+rsi*4]
  405dcb:	mov    rdx,QWORD PTR [rdi+0x38]
  405dcf:	lea    rcx,[rdi+rcx*8+0x50]
  405dd4:	cmp    rdx,rcx
  405dd7:	je     405e02 <__sprintf_chk@plt+0x4a42>
  405dd9:	lea    rax,[rdi+0x50]
  405ddd:	sub    rdx,rax
  405de0:	mov    rax,rdx
  405de3:	sar    rax,0x3
  405de7:	imul   eax,eax,0xcccccccd
  405ded:	or     eax,0x3000000
  405df2:	mov    DWORD PTR [rdi+0x4c],eax
  405df5:	ret    
  405df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e00:	mov    eax,edx
  405e02:	ret    
  405e03:	nop    DWORD PTR [rax+rax*1+0x0]
  405e08:	mov    eax,edx
  405e0a:	or     eax,0x21000000
  405e0f:	mov    DWORD PTR [rdi+0x4c],eax
  405e12:	ret    
  405e13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405e1e:	xchg   ax,ax
  405e20:	endbr64 
  405e24:	push   rbx
  405e25:	mov    rax,rsi
  405e28:	mov    esi,0x1
  405e2d:	mov    rcx,QWORD PTR [rdi+0x10]
  405e31:	mov    rdi,rax
  405e34:	mov    rbx,rdx
  405e37:	call   401380 <fwrite@plt>
  405e3c:	cmp    rax,rbx
  405e3f:	jne    405e43 <__sprintf_chk@plt+0x4a83>
  405e41:	pop    rbx
  405e42:	ret    
  405e43:	call   401210 <__errno_location@plt>
  405e48:	mov    edi,DWORD PTR [rax]
  405e4a:	call   4013a0 <strerror@plt>
  405e4f:	mov    rcx,rax
  405e52:	mov    rax,QWORD PTR [rip+0xd197]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  405e59:	lea    rdx,[rip+0x47a8]        # 40a608 <__sprintf_chk@plt+0x9248>
  405e60:	mov    rdi,QWORD PTR [rax]
  405e63:	mov    esi,0x1
  405e68:	xor    eax,eax
  405e6a:	call   401390 <__fprintf_chk@plt>
  405e6f:	mov    edi,0x1
  405e74:	call   401370 <exit@plt>
  405e79:	nop    DWORD PTR [rax+0x0]
  405e80:	push   rbp
  405e81:	mov    rbp,rsi
  405e84:	push   rbx
  405e85:	mov    rbx,rdx
  405e88:	sub    rsp,0x18
  405e8c:	cmp    edi,0x1
  405e8f:	je     405f08 <__sprintf_chk@plt+0x4b48>
  405e91:	test   edi,edi
  405e93:	je     405ec0 <__sprintf_chk@plt+0x4b00>
  405e95:	cmp    edi,0x2
  405e98:	jne    405efd <__sprintf_chk@plt+0x4b3d>
  405e9a:	mov    rdi,QWORD PTR [rbp+0x0]
  405e9e:	add    rsp,0x18
  405ea2:	pop    rbx
  405ea3:	mov    r9,rdx
  405ea6:	mov    r8,rdx
  405ea9:	mov    rcx,rdx
  405eac:	mov    esi,0x1
  405eb1:	lea    rdx,[rip+0x9168]        # 40f020 <__sprintf_chk@plt+0xdc60>
  405eb8:	xor    eax,eax
  405eba:	pop    rbp
  405ebb:	jmp    401390 <__fprintf_chk@plt>
  405ec0:	push   rbx
  405ec1:	test   r8d,r8d
  405ec4:	lea    rdx,[rip+0x8ff8]        # 40eec3 <__sprintf_chk@plt+0xdb03>
  405ecb:	push   rcx
  405ecc:	lea    rax,[rip+0x8fe7]        # 40eeba <__sprintf_chk@plt+0xdafa>
  405ed3:	cmove  rax,rdx
  405ed7:	push   rbx
  405ed8:	mov    rdi,QWORD PTR [rbp+0x0]
  405edc:	mov    r9,rbx
  405edf:	push   rax
  405ee0:	mov    r8,rbx
  405ee3:	mov    rcx,rbx
  405ee6:	lea    rdx,[rip+0x90cb]        # 40efb8 <__sprintf_chk@plt+0xdbf8>
  405eed:	mov    esi,0x1
  405ef2:	xor    eax,eax
  405ef4:	call   401390 <__fprintf_chk@plt>
  405ef9:	add    rsp,0x20
  405efd:	add    rsp,0x18
  405f01:	pop    rbx
  405f02:	pop    rbp
  405f03:	ret    
  405f04:	nop    DWORD PTR [rax+0x0]
  405f08:	mov    rdi,QWORD PTR [rbp+0x0]
  405f0c:	mov    rcx,rdx
  405f0f:	mov    esi,0x1
  405f14:	lea    rdx,[rip+0x8faf]        # 40eeca <__sprintf_chk@plt+0xdb0a>
  405f1b:	xor    eax,eax
  405f1d:	mov    DWORD PTR [rsp+0xc],r8d
  405f22:	call   401390 <__fprintf_chk@plt>
  405f27:	mov    r8d,DWORD PTR [rsp+0xc]
  405f2c:	test   r8d,r8d
  405f2f:	jne    405f58 <__sprintf_chk@plt+0x4b98>
  405f31:	mov    rdi,QWORD PTR [rbp+0x0]
  405f35:	add    rsp,0x18
  405f39:	mov    rcx,rbx
  405f3c:	pop    rbx
  405f3d:	lea    rdx,[rip+0x8f93]        # 40eed7 <__sprintf_chk@plt+0xdb17>
  405f44:	mov    esi,0x1
  405f49:	xor    eax,eax
  405f4b:	pop    rbp
  405f4c:	jmp    401390 <__fprintf_chk@plt>
  405f51:	nop    DWORD PTR [rax+0x0]
  405f58:	mov    rdi,QWORD PTR [rbp+0x0]
  405f5c:	mov    rcx,rbx
  405f5f:	lea    rdx,[rip+0x9092]        # 40eff8 <__sprintf_chk@plt+0xdc38>
  405f66:	mov    esi,0x1
  405f6b:	xor    eax,eax
  405f6d:	call   401390 <__fprintf_chk@plt>
  405f72:	jmp    405f31 <__sprintf_chk@plt+0x4b71>
  405f74:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405f7f:	nop
  405f80:	push   r15
  405f82:	push   r14
  405f84:	push   r13
  405f86:	push   r12
  405f88:	push   rbp
  405f89:	mov    rbp,rdi
  405f8c:	push   rbx
  405f8d:	sub    rsp,0x18
  405f91:	mov    DWORD PTR [rsp+0xc],edx
  405f95:	test   edx,edx
  405f97:	jle    406010 <__sprintf_chk@plt+0x4c50>
  405f99:	mov    r13,rsi
  405f9c:	lea    r12d,[rdx-0x1]
  405fa0:	xor    ebx,ebx
  405fa2:	lea    r14,[rip+0x8f3d]        # 40eee6 <__sprintf_chk@plt+0xdb26>
  405fa9:	jmp    405fcf <__sprintf_chk@plt+0x4c0f>
  405fab:	nop    DWORD PTR [rax+rax*1+0x0]
  405fb0:	lea    rdx,[rip+0x8f25]        # 40eedc <__sprintf_chk@plt+0xdb1c>
  405fb7:	mov    esi,0x1
  405fbc:	xor    eax,eax
  405fbe:	call   401390 <__fprintf_chk@plt>
  405fc3:	lea    rax,[rbx+0x1]
  405fc7:	cmp    rbx,r12
  405fca:	je     406010 <__sprintf_chk@plt+0x4c50>
  405fcc:	mov    rbx,rax
  405fcf:	mov    r15d,ebx
  405fd2:	movzx  ecx,BYTE PTR [r13+rbx*1+0x0]
  405fd8:	mov    rdi,QWORD PTR [rbp+0x0]
  405fdc:	and    r15d,0xf
  405fe0:	je     405fb0 <__sprintf_chk@plt+0x4bf0>
  405fe2:	xor    eax,eax
  405fe4:	mov    rdx,r14
  405fe7:	mov    esi,0x1
  405fec:	call   401390 <__fprintf_chk@plt>
  405ff1:	cmp    r15d,0xf
  405ff5:	jne    405fc3 <__sprintf_chk@plt+0x4c03>
  405ff7:	mov    rsi,QWORD PTR [rbp+0x0]
  405ffb:	mov    edi,0xa
  406000:	call   4012f0 <putc@plt>
  406005:	lea    rax,[rbx+0x1]
  406009:	cmp    rbx,r12
  40600c:	jne    405fcc <__sprintf_chk@plt+0x4c0c>
  40600e:	xchg   ax,ax
  406010:	test   BYTE PTR [rsp+0xc],0xf
  406015:	jne    406030 <__sprintf_chk@plt+0x4c70>
  406017:	add    rsp,0x18
  40601b:	pop    rbx
  40601c:	pop    rbp
  40601d:	pop    r12
  40601f:	pop    r13
  406021:	pop    r14
  406023:	pop    r15
  406025:	ret    
  406026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406030:	mov    rsi,QWORD PTR [rbp+0x0]
  406034:	add    rsp,0x18
  406038:	pop    rbx
  406039:	pop    rbp
  40603a:	pop    r12
  40603c:	pop    r13
  40603e:	pop    r14
  406040:	mov    edi,0xa
  406045:	pop    r15
  406047:	jmp    4012f0 <putc@plt>
  40604c:	nop    DWORD PTR [rax+0x0]
  406050:	endbr64 
  406054:	push   r15
  406056:	mov    r15,rdi
  406059:	lea    rdx,[rip+0x8e8e]        # 40eeee <__sprintf_chk@plt+0xdb2e>
  406060:	push   r14
  406062:	mov    esi,0x1
  406067:	xor    eax,eax
  406069:	push   r13
  40606b:	push   r12
  40606d:	push   rbp
  40606e:	push   rbx
  40606f:	sub    rsp,0x28
  406073:	mov    rcx,QWORD PTR [rdi+0x88]
  40607a:	mov    rdi,QWORD PTR [rdi+0x10]
  40607e:	call   401390 <__fprintf_chk@plt>
  406083:	mov    rcx,QWORD PTR [r15+0x10]
  406087:	lea    rdi,[rip+0x8e7a]        # 40ef08 <__sprintf_chk@plt+0xdb48>
  40608e:	mov    edx,0x7
  406093:	mov    esi,0x1
  406098:	call   401380 <fwrite@plt>
  40609d:	mov    edi,DWORD PTR [r15+0x8]
  4060a1:	lea    rax,[r15+0x10]
  4060a5:	mov    QWORD PTR [rsp],rax
  4060a9:	cmp    edi,0x1
  4060ac:	jbe    406431 <__sprintf_chk@plt+0x5071>
  4060b2:	cmp    edi,0x2
  4060b5:	jne    4060d7 <__sprintf_chk@plt+0x4d17>
  4060b7:	mov    rdi,QWORD PTR [r15+0x10]
  4060bb:	mov    ecx,0x4
  4060c0:	lea    rdx,[rip+0x8e57]        # 40ef1e <__sprintf_chk@plt+0xdb5e>
  4060c7:	mov    esi,0x1
  4060cc:	xor    eax,eax
  4060ce:	call   401390 <__fprintf_chk@plt>
  4060d3:	mov    edi,DWORD PTR [r15+0x8]
  4060d7:	mov    rdx,QWORD PTR [r15+0x70]
  4060db:	xor    r8d,r8d
  4060de:	xor    ecx,ecx
  4060e0:	lea    rsi,[r15+0x10]
  4060e4:	call   405e80 <__sprintf_chk@plt+0x4ac0>
  4060e9:	cmp    DWORD PTR [r15+0x8],0x2
  4060ee:	je     40610a <__sprintf_chk@plt+0x4d4a>
  4060f0:	mov    rcx,QWORD PTR [r15+0x10]
  4060f4:	mov    edx,0x9
  4060f9:	mov    esi,0x1
  4060fe:	lea    rdi,[rip+0x8e25]        # 40ef2a <__sprintf_chk@plt+0xdb6a>
  406105:	call   401380 <fwrite@plt>
  40610a:	mov    edx,DWORD PTR [r15+0x40]
  40610e:	mov    QWORD PTR [rsp+0x18],0x0
  406117:	xor    r12d,r12d
  40611a:	test   edx,edx
  40611c:	jle    4062bb <__sprintf_chk@plt+0x4efb>
  406122:	nop    WORD PTR [rax+rax*1+0x0]
  406128:	mov    rax,QWORD PTR [rsp+0x18]
  40612d:	mov    rcx,QWORD PTR [r15+0x58]
  406131:	shl    rax,0x4
  406135:	lea    rdx,[rcx+rax*1]
  406139:	mov    r13d,DWORD PTR [rcx+rax*1+0x18]
  40613e:	mov    ebp,DWORD PTR [rdx+0x8]
  406141:	mov    eax,r13d
  406144:	sub    eax,ebp
  406146:	mov    edi,DWORD PTR [r15+0x8]
  40614a:	mov    rdx,QWORD PTR [rdx]
  40614d:	mov    rsi,QWORD PTR [rsp]
  406151:	mov    ecx,eax
  406153:	mov    r8d,0x1
  406159:	mov    DWORD PTR [rsp+0x8],eax
  40615d:	call   405e80 <__sprintf_chk@plt+0x4ac0>
  406162:	cmp    r12d,DWORD PTR [r15+0x44]
  406166:	mov    eax,DWORD PTR [rsp+0x8]
  40616a:	jge    406295 <__sprintf_chk@plt+0x4ed5>
  406170:	movsxd rdx,r12d
  406173:	lea    rdx,[rdx+rdx*2]
  406177:	shl    rdx,0x2
  40617b:	mov    ebx,DWORD PTR [r15+rdx*1+0x90]
  406183:	cmp    r13d,ebx
  406186:	jl     406295 <__sprintf_chk@plt+0x4ed5>
  40618c:	lea    r14,[r15+rdx*1+0x94]
  406194:	jmp    4061dc <__sprintf_chk@plt+0x4e1c>
  406196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061a0:	mov    rdi,QWORD PTR [r15+0x10]
  4061a4:	mov    rcx,r8
  4061a7:	lea    rdx,[rip+0x8d9d]        # 40ef4b <__sprintf_chk@plt+0xdb8b>
  4061ae:	mov    esi,0x1
  4061b3:	xor    eax,eax
  4061b5:	call   401390 <__fprintf_chk@plt>
  4061ba:	inc    r12d
  4061bd:	lea    ebp,[rbx+rbp*1+0x4]
  4061c1:	cmp    DWORD PTR [r15+0x44],r12d
  4061c5:	jle    406290 <__sprintf_chk@plt+0x4ed0>
  4061cb:	add    r14,0xc
  4061cf:	mov    ebx,DWORD PTR [r14-0x4]
  4061d3:	cmp    ebx,r13d
  4061d6:	jg     406290 <__sprintf_chk@plt+0x4ed0>
  4061dc:	movsxd rsi,ebp
  4061df:	sub    ebx,ebp
  4061e1:	add    rsi,QWORD PTR [r15+0x28]
  4061e5:	cmp    DWORD PTR [r15+0x8],0x2
  4061ea:	jne    4061f8 <__sprintf_chk@plt+0x4e38>
  4061ec:	mov    eax,DWORD PTR [r14+0x4]
  4061f0:	test   eax,eax
  4061f2:	jne    406320 <__sprintf_chk@plt+0x4f60>
  4061f8:	mov    rdi,QWORD PTR [rsp]
  4061fc:	mov    edx,ebx
  4061fe:	call   405f80 <__sprintf_chk@plt+0x4bc0>
  406203:	mov    rax,QWORD PTR [r15+0x60]
  406207:	movsxd rdx,DWORD PTR [r14]
  40620a:	mov    r10d,DWORD PTR [r14+0x4]
  40620e:	mov    r8,QWORD PTR [rax+rdx*8]
  406212:	mov    eax,DWORD PTR [r15+0x8]
  406216:	test   eax,eax
  406218:	je     406308 <__sprintf_chk@plt+0x4f48>
  40621e:	cmp    eax,0x1
  406221:	jne    4061a0 <__sprintf_chk@plt+0x4de0>
  406227:	mov    rdi,QWORD PTR [r15+0x10]
  40622b:	mov    rcx,r8
  40622e:	xor    eax,eax
  406230:	lea    rdx,[rip+0x8dc1]        # 40eff8 <__sprintf_chk@plt+0xdc38>
  406237:	mov    esi,0x1
  40623c:	mov    DWORD PTR [rsp+0x10],r10d
  406241:	mov    QWORD PTR [rsp+0x8],r8
  406246:	call   401390 <__fprintf_chk@plt>
  40624b:	mov    r10d,DWORD PTR [rsp+0x10]
  406250:	mov    r8,QWORD PTR [rsp+0x8]
  406255:	test   r10d,r10d
  406258:	mov    rdi,QWORD PTR [r15+0x10]
  40625c:	mov    rcx,r8
  40625f:	je     4061a7 <__sprintf_chk@plt+0x4de7>
  406265:	lea    rdx,[rip+0x8cd0]        # 40ef3c <__sprintf_chk@plt+0xdb7c>
  40626c:	mov    esi,0x1
  406271:	xor    eax,eax
  406273:	inc    r12d
  406276:	call   401390 <__fprintf_chk@plt>
  40627b:	lea    ebp,[rbx+rbp*1+0x4]
  40627f:	cmp    DWORD PTR [r15+0x44],r12d
  406283:	jg     4061cb <__sprintf_chk@plt+0x4e0b>
  406289:	nop    DWORD PTR [rax+0x0]
  406290:	mov    eax,r13d
  406293:	sub    eax,ebp
  406295:	movsxd rsi,ebp
  406298:	mov    rdi,QWORD PTR [rsp]
  40629c:	mov    edx,eax
  40629e:	add    rsi,QWORD PTR [r15+0x28]
  4062a2:	call   405f80 <__sprintf_chk@plt+0x4bc0>
  4062a7:	inc    QWORD PTR [rsp+0x18]
  4062ac:	mov    rax,QWORD PTR [rsp+0x18]
  4062b1:	cmp    DWORD PTR [r15+0x40],eax
  4062b5:	jg     406128 <__sprintf_chk@plt+0x4d68>
  4062bb:	mov    rsi,QWORD PTR [r15+0x10]
  4062bf:	mov    edi,0xa
  4062c4:	call   4012a0 <fputc@plt>
  4062c9:	mov    eax,DWORD PTR [r15+0x8]
  4062cd:	cmp    eax,0x1
  4062d0:	je     40640e <__sprintf_chk@plt+0x504e>
  4062d6:	test   eax,eax
  4062d8:	je     4063f4 <__sprintf_chk@plt+0x5034>
  4062de:	cmp    eax,0x2
  4062e1:	je     4063d1 <__sprintf_chk@plt+0x5011>
  4062e7:	mov    rsi,QWORD PTR [r15+0x10]
  4062eb:	add    rsp,0x28
  4062ef:	pop    rbx
  4062f0:	pop    rbp
  4062f1:	pop    r12
  4062f3:	pop    r13
  4062f5:	pop    r14
  4062f7:	mov    edi,0xa
  4062fc:	pop    r15
  4062fe:	jmp    4012a0 <fputc@plt>
  406303:	nop    DWORD PTR [rax+rax*1+0x0]
  406308:	mov    rdi,QWORD PTR [r15+0x10]
  40630c:	mov    rcx,r8
  40630f:	test   r10d,r10d
  406312:	je     4061a7 <__sprintf_chk@plt+0x4de7>
  406318:	jmp    406265 <__sprintf_chk@plt+0x4ea5>
  40631d:	nop    DWORD PTR [rax]
  406320:	movsxd rdx,DWORD PTR [r14]
  406323:	mov    rax,QWORD PTR [r15+0x60]
  406327:	mov    r8,QWORD PTR [rax+rdx*8]
  40632b:	mov    edx,ebx
  40632d:	dec    edx
  40632f:	js     406456 <__sprintf_chk@plt+0x5096>
  406335:	movsxd rcx,edx
  406338:	movzx  eax,BYTE PTR [rsi+rcx*1]
  40633c:	cmp    al,0xe8
  40633e:	je     4063c8 <__sprintf_chk@plt+0x5008>
  406344:	cmp    al,0xe9
  406346:	je     4063b8 <__sprintf_chk@plt+0x4ff8>
  406348:	lea    edi,[rax-0x80]
  40634b:	cmp    dil,0xf
  40634f:	ja     406456 <__sprintf_chk@plt+0x5096>
  406355:	test   edx,edx
  406357:	je     406456 <__sprintf_chk@plt+0x5096>
  40635d:	cmp    BYTE PTR [rsi+rcx*1-0x1],0xf
  406362:	jne    406456 <__sprintf_chk@plt+0x5096>
  406368:	add    eax,0xffffff80
  40636b:	cdqe   
  40636d:	lea    rcx,[rip+0xc8cc]        # 412c40 <__sprintf_chk@plt+0x11880>
  406374:	mov    rcx,QWORD PTR [rcx+rax*8]
  406378:	lea    edx,[rbx-0x2]
  40637b:	mov    rdi,QWORD PTR [rsp]
  40637f:	mov    QWORD PTR [rsp+0x10],r8
  406384:	mov    QWORD PTR [rsp+0x8],rcx
  406389:	call   405f80 <__sprintf_chk@plt+0x4bc0>
  40638e:	mov    rdi,QWORD PTR [r15+0x10]
  406392:	mov    r8,QWORD PTR [rsp+0x10]
  406397:	mov    rcx,QWORD PTR [rsp+0x8]
  40639c:	lea    rdx,[rip+0x8b91]        # 40ef34 <__sprintf_chk@plt+0xdb74>
  4063a3:	mov    esi,0x1
  4063a8:	xor    eax,eax
  4063aa:	call   401390 <__fprintf_chk@plt>
  4063af:	jmp    4061ba <__sprintf_chk@plt+0x4dfa>
  4063b4:	nop    DWORD PTR [rax+0x0]
  4063b8:	lea    rcx,[rip+0x8b2b]        # 40eeea <__sprintf_chk@plt+0xdb2a>
  4063bf:	jmp    40637b <__sprintf_chk@plt+0x4fbb>
  4063c1:	nop    DWORD PTR [rax+0x0]
  4063c8:	lea    rcx,[rip+0x3830]        # 409bff <__sprintf_chk@plt+0x883f>
  4063cf:	jmp    40637b <__sprintf_chk@plt+0x4fbb>
  4063d1:	mov    rcx,QWORD PTR [r15+0x80]
  4063d8:	mov    rdi,QWORD PTR [r15+0x10]
  4063dc:	lea    rdx,[rip+0x8b81]        # 40ef64 <__sprintf_chk@plt+0xdba4>
  4063e3:	mov    esi,0x1
  4063e8:	xor    eax,eax
  4063ea:	call   401390 <__fprintf_chk@plt>
  4063ef:	jmp    4062e7 <__sprintf_chk@plt+0x4f27>
  4063f4:	mov    rcx,QWORD PTR [r15+0x10]
  4063f8:	mov    edx,0x27
  4063fd:	mov    esi,0x1
  406402:	lea    rdi,[rip+0x8c7f]        # 40f088 <__sprintf_chk@plt+0xdcc8>
  406409:	call   401380 <fwrite@plt>
  40640e:	mov    rcx,QWORD PTR [r15+0x80]
  406415:	mov    rdi,QWORD PTR [r15+0x10]
  406419:	lea    rdx,[rip+0x8b36]        # 40ef56 <__sprintf_chk@plt+0xdb96>
  406420:	mov    esi,0x1
  406425:	xor    eax,eax
  406427:	call   401390 <__fprintf_chk@plt>
  40642c:	jmp    4062e7 <__sprintf_chk@plt+0x4f27>
  406431:	mov    rdi,QWORD PTR [r15+0x10]
  406435:	mov    ecx,0x4
  40643a:	lea    rdx,[rip+0x8acf]        # 40ef10 <__sprintf_chk@plt+0xdb50>
  406441:	mov    esi,0x1
  406446:	xor    eax,eax
  406448:	call   401390 <__fprintf_chk@plt>
  40644d:	mov    edi,DWORD PTR [r15+0x8]
  406451:	jmp    4060d7 <__sprintf_chk@plt+0x4d17>
  406456:	mov    rax,QWORD PTR [rip+0xcb93]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  40645d:	mov    rcx,r8
  406460:	mov    rdi,QWORD PTR [rax]
  406463:	lea    rdx,[rip+0x8be6]        # 40f050 <__sprintf_chk@plt+0xdc90>
  40646a:	mov    esi,0x1
  40646f:	xor    eax,eax
  406471:	call   401390 <__fprintf_chk@plt>
  406476:	mov    edi,0x1
  40647b:	call   401370 <exit@plt>
  406480:	push   r15
  406482:	mov    r15d,edx
  406485:	push   r14
  406487:	mov    r14d,r8d
  40648a:	push   r13
  40648c:	mov    r13d,r9d
  40648f:	push   r12
  406491:	mov    r12,rdi
  406494:	mov    rdi,rsi
  406497:	push   rbp
  406498:	mov    ebp,ecx
  40649a:	push   rbx
  40649b:	sub    rsp,0x38
  40649f:	mov    rax,QWORD PTR fs:0x28
  4064a8:	mov    QWORD PTR [rsp+0x28],rax
  4064ad:	xor    eax,eax
  4064af:	mov    QWORD PTR [rsp],rsi
  4064b3:	call   401260 <strlen@plt>
  4064b8:	mov    r8,QWORD PTR [rip+0xcd21]        # 4131e0 <__sprintf_chk@plt+0x11e20>
  4064bf:	mov    rbx,rax
  4064c2:	test   r8,r8
  4064c5:	mov    rsi,QWORD PTR [rsp]
  4064c9:	je     4065f0 <__sprintf_chk@plt+0x5230>
  4064cf:	cmp    rax,0x8
  4064d3:	jbe    406570 <__sprintf_chk@plt+0x51b0>
  4064d9:	mov    rcx,QWORD PTR [rip+0xccf8]        # 4131d8 <__sprintf_chk@plt+0x11e18>
  4064e0:	mov    rdx,rax
  4064e3:	lea    rdi,[r8+rcx*1]
  4064e7:	mov    DWORD PTR [rsp+0x14],ecx
  4064eb:	mov    QWORD PTR [rsp+0x8],rcx
  4064f0:	mov    QWORD PTR [rsp],r8
  4064f4:	mov    DWORD PTR [rsp+0x10],0x0
  4064fc:	call   401320 <memcpy@plt>
  406501:	mov    rcx,QWORD PTR [rsp+0x8]
  406506:	mov    r8,QWORD PTR [rsp]
  40650a:	add    rbx,rcx
  40650d:	mov    BYTE PTR [r8+rbx*1],0x0
  406512:	inc    rbx
  406515:	mov    QWORD PTR [rip+0xccbc],rbx        # 4131d8 <__sprintf_chk@plt+0x11e18>
  40651c:	lea    r8,[rsp+0x10]
  406521:	inc    ebp
  406523:	mov    edx,0x12
  406528:	mov    rsi,r8
  40652b:	mov    rdi,r12
  40652e:	mov    DWORD PTR [rsp+0x18],r15d
  406533:	mov    WORD PTR [rsp+0x1c],bp
  406538:	mov    WORD PTR [rsp+0x1e],r14w
  40653e:	mov    BYTE PTR [rsp+0x20],r13b
  406543:	mov    BYTE PTR [rsp+0x21],0x0
  406548:	call   405e20 <__sprintf_chk@plt+0x4a60>
  40654d:	mov    rax,QWORD PTR [rsp+0x28]
  406552:	xor    rax,QWORD PTR fs:0x28
  40655b:	jne    40662d <__sprintf_chk@plt+0x526d>
  406561:	add    rsp,0x38
  406565:	pop    rbx
  406566:	pop    rbp
  406567:	pop    r12
  406569:	pop    r13
  40656b:	pop    r14
  40656d:	pop    r15
  40656f:	ret    
  406570:	lea    r8,[rsp+0x10]
  406575:	mov    rdi,r8
  406578:	mov    ecx,0x14
  40657d:	mov    rdx,rax
  406580:	call   401300 <__memcpy_chk@plt>
  406585:	mov    r8,rax
  406588:	mov    eax,0x8
  40658d:	sub    rax,rbx
  406590:	xor    esi,esi
  406592:	add    rbx,r8
  406595:	cmp    eax,0x8
  406598:	jae    4065c0 <__sprintf_chk@plt+0x5200>
  40659a:	test   al,0x4
  40659c:	jne    406618 <__sprintf_chk@plt+0x5258>
  40659e:	test   eax,eax
  4065a0:	je     406521 <__sprintf_chk@plt+0x5161>
  4065a6:	mov    BYTE PTR [rbx],0x0
  4065a9:	test   al,0x2
  4065ab:	je     406521 <__sprintf_chk@plt+0x5161>
  4065b1:	mov    eax,eax
  4065b3:	xor    edx,edx
  4065b5:	mov    WORD PTR [rbx+rax*1-0x2],dx
  4065ba:	jmp    406521 <__sprintf_chk@plt+0x5161>
  4065bf:	nop
  4065c0:	mov    edx,eax
  4065c2:	dec    eax
  4065c4:	mov    QWORD PTR [rbx+rdx*1-0x8],0x0
  4065cd:	cmp    eax,0x8
  4065d0:	jb     406521 <__sprintf_chk@plt+0x5161>
  4065d6:	and    eax,0xfffffff8
  4065d9:	xor    edx,edx
  4065db:	mov    ecx,edx
  4065dd:	add    edx,0x8
  4065e0:	mov    QWORD PTR [rbx+rcx*1],rsi
  4065e4:	cmp    edx,eax
  4065e6:	jb     4065db <__sprintf_chk@plt+0x521b>
  4065e8:	jmp    406521 <__sprintf_chk@plt+0x5161>
  4065ed:	nop    DWORD PTR [rax]
  4065f0:	cmp    rax,0x8
  4065f4:	jbe    40654d <__sprintf_chk@plt+0x518d>
  4065fa:	mov    rax,QWORD PTR [rip+0xcbd7]        # 4131d8 <__sprintf_chk@plt+0x11e18>
  406601:	lea    rax,[rbx+rax*1+0x1]
  406606:	mov    QWORD PTR [rip+0xcbcb],rax        # 4131d8 <__sprintf_chk@plt+0x11e18>
  40660d:	jmp    40654d <__sprintf_chk@plt+0x518d>
  406612:	nop    WORD PTR [rax+rax*1+0x0]
  406618:	mov    eax,eax
  40661a:	mov    DWORD PTR [rbx],0x0
  406620:	mov    DWORD PTR [rbx+rax*1-0x4],0x0
  406628:	jmp    406521 <__sprintf_chk@plt+0x5161>
  40662d:	call   401270 <__stack_chk_fail@plt>
  406632:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40663d:	nop    DWORD PTR [rax]
  406640:	push   rbp
  406641:	mov    rbp,rdi
  406644:	push   rbx
  406645:	sub    rsp,0x48
  406649:	mov    rax,QWORD PTR fs:0x28
  406652:	mov    QWORD PTR [rsp+0x38],rax
  406657:	xor    eax,eax
  406659:	movsxd rax,edx
  40665c:	lea    rax,[rax+rax*4]
  406660:	lea    rbx,[rsi+rax*8]
  406664:	mov    rax,QWORD PTR [rbx]
  406667:	inc    edx
  406669:	mov    rsi,rsp
  40666c:	mov    WORD PTR [rsp+0xc],dx
  406671:	mov    edx,0x12
  406676:	mov    QWORD PTR [rsp],rax
  40667a:	mov    DWORD PTR [rsp+0x8],0x0
  406682:	mov    DWORD PTR [rsp+0xe],0x1030000
  40668a:	call   405e20 <__sprintf_chk@plt+0x4a60>
  40668f:	lea    rsi,[rsp+0x20]
  406694:	xor    eax,eax
  406696:	mov    QWORD PTR [rsp+0x26],0x0
  40669f:	mov    WORD PTR [rsi+0x12],ax
  4066a3:	mov    eax,DWORD PTR [rbx+0x10]
  4066a6:	mov    DWORD PTR [rsi+0xe],0x0
  4066ad:	mov    DWORD PTR [rsp+0x20],eax
  4066b1:	movzx  eax,WORD PTR [rbx+0x20]
  4066b5:	mov    edx,0x12
  4066ba:	mov    rdi,rbp
  4066bd:	mov    WORD PTR [rsp+0x24],ax
  4066c2:	call   405e20 <__sprintf_chk@plt+0x4a60>
  4066c7:	mov    rax,QWORD PTR [rsp+0x38]
  4066cc:	xor    rax,QWORD PTR fs:0x28
  4066d5:	jne    4066de <__sprintf_chk@plt+0x531e>
  4066d7:	add    rsp,0x48
  4066db:	pop    rbx
  4066dc:	pop    rbp
  4066dd:	ret    
  4066de:	call   401270 <__stack_chk_fail@plt>
  4066e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4066ee:	xchg   ax,ax
  4066f0:	endbr64 
  4066f4:	push   r15
  4066f6:	mov    ecx,0x13
  4066fb:	mov    r11d,0x6174
  406701:	push   r14
  406703:	mov    r14d,0x1
  406709:	push   r13
  40670b:	push   r12
  40670d:	mov    r12d,0x6174
  406713:	push   rbp
  406714:	mov    ebp,0x6
  406719:	push   rbx
  40671a:	mov    rbx,rdi
  40671d:	sub    rsp,0x118
  406724:	mov    rax,QWORD PTR fs:0x28
  40672d:	mov    QWORD PTR [rsp+0x108],rax
  406735:	xor    eax,eax
  406737:	lea    r13,[rsp+0x60]
  40673c:	lea    rdi,[r13+0x8]
  406740:	mov    QWORD PTR [rsp+0x64],0x0
  406749:	mov    QWORD PTR [r13+0x98],0x0
  406754:	rep stos QWORD PTR es:[rdi],rax
  406757:	mov    DWORD PTR [rsp+0x88],0x6164702e
  406762:	mov    WORD PTR [rsp+0xa8],bp
  40676a:	mov    WORD PTR [r13+0x2c],r11w
  40676f:	mov    DWORD PTR [rsp+0xb0],0x6164782e
  40677a:	mov    DWORD PTR [rsp+0x60],0x7865742e
  406782:	mov    edx,DWORD PTR [rbx+0x44]
  406785:	mov    rax,QWORD PTR [rbx+0x30]
  406789:	mov    WORD PTR [rsp+0x80],dx
  406791:	movzx  edx,dx
  406794:	mov    DWORD PTR [rsp+0x70],eax
  406798:	lea    edx,[rdx+rdx*4]
  40679b:	add    eax,0xb4
  4067a0:	mov    DWORD PTR [rsp+0x78],eax
  4067a4:	lea    eax,[rax+rdx*2]
  4067a7:	lea    edx,[rax+0x18]
  4067aa:	mov    DWORD PTR [rsp+0xa0],edx
  4067b1:	lea    edx,[rax+0x54]
  4067b4:	mov    DWORD PTR [rsp+0xc4],edx
  4067bb:	lea    edx,[rax+0x74]
  4067be:	mov    DWORD PTR [rsp+0x9c],eax
  4067c5:	mov    WORD PTR [r13+0x54],r12w
  4067ca:	mov    BYTE PTR [rsp+0x64],0x74
  4067cf:	mov    DWORD PTR [rsp+0x74],0xb4
  4067d7:	mov    DWORD PTR [rsp+0x84],0x60500020
  4067e2:	mov    DWORD PTR [rsp+0x98],0x18
  4067ed:	mov    DWORD PTR [rsp+0xac],0x40300040
  4067f8:	mov    DWORD PTR [rsp+0xc0],0x20
  406803:	mov    DWORD PTR [rsp+0xc8],edx
  40680a:	mov    rdi,QWORD PTR [rbx+0x80]
  406811:	lea    ebp,[rax+0x7e]
  406814:	movabs rax,0x5a2461746164722e
  40681e:	mov    WORD PTR [rsp+0xd0],r14w
  406827:	mov    DWORD PTR [rsp+0xd4],0x40300040
  406832:	mov    QWORD PTR [rsp+0xd8],rax
  40683a:	mov    DWORD PTR [rsp+0xec],ebp
  406841:	call   401260 <strlen@plt>
  406846:	inc    eax
  406848:	mov    DWORD PTR [rsp+0xe8],eax
  40684f:	add    eax,ebp
  406851:	mov    DWORD PTR [rsp+0x28],eax
  406855:	mov    r14d,DWORD PTR [rbx+0x48]
  406859:	mov    eax,DWORD PTR [rbx+0x40]
  40685c:	lea    rsi,[rsp+0x20]
  406861:	lea    eax,[r14+rax*1+0xb]
  406866:	mov    edx,0x14
  40686b:	mov    rdi,rbx
  40686e:	mov    DWORD PTR [rsp+0x2c],eax
  406872:	mov    DWORD PTR [rsp+0xfc],0x40300040
  40687d:	mov    QWORD PTR [rsp+0x20],0x48664
  406886:	mov    DWORD PTR [rsp+0x30],0x0
  40688e:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406893:	mov    edx,0xa0
  406898:	mov    rsi,r13
  40689b:	mov    rdi,rbx
  40689e:	call   405e20 <__sprintf_chk@plt+0x4a60>
  4068a3:	mov    rdx,QWORD PTR [rbx+0x30]
  4068a7:	mov    rsi,QWORD PTR [rbx+0x28]
  4068ab:	mov    rdi,rbx
  4068ae:	call   405e20 <__sprintf_chk@plt+0x4a60>
  4068b3:	mov    r15d,DWORD PTR [rbx+0x44]
  4068b7:	lea    r12,[rsp+0x14]
  4068bc:	test   r15d,r15d
  4068bf:	jle    40690f <__sprintf_chk@plt+0x554f>
  4068c1:	lea    rbp,[rbx+0x90]
  4068c8:	xor    r15d,r15d
  4068cb:	lea    r12,[rsp+0x14]
  4068d0:	mov    eax,DWORD PTR [rbp+0x0]
  4068d3:	mov    edx,0xa
  4068d8:	mov    DWORD PTR [rsp+0x14],eax
  4068dc:	mov    eax,DWORD PTR [rbp+0x4]
  4068df:	mov    rsi,r12
  4068e2:	add    eax,0x3
  4068e5:	cmp    DWORD PTR [rbp+0x8],0x1
  4068e9:	mov    DWORD PTR [rsp+0x18],eax
  4068ed:	sbb    eax,eax
  4068ef:	and    eax,0xfffffffe
  4068f2:	add    eax,0x4
  4068f5:	mov    rdi,rbx
  4068f8:	inc    r15d
  4068fb:	mov    WORD PTR [rsp+0x1c],ax
  406900:	add    rbp,0xc
  406904:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406909:	cmp    DWORD PTR [rbx+0x44],r15d
  40690d:	jg     4068d0 <__sprintf_chk@plt+0x5510>
  40690f:	movsxd rax,DWORD PTR [rbx+0x40]
  406913:	lea    r15,[rsp+0x40]
  406918:	shl    rax,0x4
  40691c:	add    rax,QWORD PTR [rbx+0x58]
  406920:	mov    ebp,DWORD PTR [rax-0x8]
  406923:	mov    edx,0xc
  406928:	mov    rsi,r15
  40692b:	mov    rdi,rbx
  40692e:	mov    DWORD PTR [rsp+0x44],ebp
  406932:	mov    DWORD PTR [rsp+0x40],0x0
  40693a:	mov    DWORD PTR [rsp+0x48],0x0
  406942:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406947:	mov    rax,QWORD PTR [rbx+0x30]
  40694b:	mov    edx,0xc
  406950:	mov    rsi,r15
  406953:	mov    rdi,rbx
  406956:	mov    DWORD PTR [rsp+0x44],eax
  40695a:	mov    DWORD PTR [rsp+0x40],ebp
  40695e:	mov    DWORD PTR [rsp+0x48],0x14
  406966:	call   405e20 <__sprintf_chk@plt+0x4a60>
  40696b:	mov    edx,0x3
  406970:	lea    ebp,[r14+0x8]
  406974:	mov    rsi,r12
  406977:	mov    WORD PTR [rsp+0x1c],dx
  40697c:	mov    rdi,rbx
  40697f:	mov    edx,0xa
  406984:	mov    DWORD PTR [rsp+0x18],ebp
  406988:	mov    DWORD PTR [rsp+0x14],0x0
  406990:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406995:	mov    ecx,0x3
  40699a:	mov    rsi,r12
  40699d:	mov    edx,0xa
  4069a2:	mov    rdi,rbx
  4069a5:	mov    WORD PTR [rsp+0x1c],cx
  4069aa:	mov    DWORD PTR [rsp+0x18],ebp
  4069ae:	mov    DWORD PTR [rsp+0x14],0x4
  4069b6:	call   405e20 <__sprintf_chk@plt+0x4a60>
  4069bb:	mov    esi,0x3
  4069c0:	lea    eax,[r14+0x5]
  4069c4:	mov    WORD PTR [rsp+0x1c],si
  4069c9:	mov    edx,0xa
  4069ce:	mov    rsi,r12
  4069d1:	mov    rdi,rbx
  4069d4:	mov    DWORD PTR [rsp+0x18],eax
  4069d8:	mov    DWORD PTR [rsp+0xc],eax
  4069dc:	mov    DWORD PTR [rsp+0x14],0x8
  4069e4:	call   405e20 <__sprintf_chk@plt+0x4a60>
  4069e9:	mov    edi,0x3
  4069ee:	mov    rsi,r12
  4069f1:	mov    WORD PTR [rsp+0x1c],di
  4069f6:	mov    edx,0xa
  4069fb:	mov    rdi,rbx
  4069fe:	mov    DWORD PTR [rsp+0x18],ebp
  406a02:	mov    DWORD PTR [rsp+0x14],0xc
  406a0a:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406a0f:	mov    r8d,0x3
  406a15:	mov    rsi,r12
  406a18:	mov    edx,0xa
  406a1d:	mov    rdi,rbx
  406a20:	mov    WORD PTR [rsp+0x1c],r8w
  406a26:	mov    DWORD PTR [rsp+0x18],ebp
  406a2a:	mov    DWORD PTR [rsp+0x14],0x10
  406a32:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406a37:	mov    eax,DWORD PTR [rsp+0xc]
  406a3b:	mov    r9d,0x3
  406a41:	mov    rsi,r12
  406a44:	mov    edx,0xa
  406a49:	mov    rdi,rbx
  406a4c:	mov    WORD PTR [rsp+0x1c],r9w
  406a52:	mov    DWORD PTR [rsp+0x18],eax
  406a56:	mov    DWORD PTR [rsp+0x14],0x14
  406a5e:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406a63:	movabs rax,0x3000420000050019
  406a6d:	mov    QWORD PTR [rsp+0x40],rax
  406a72:	movabs rax,0x500070006000
  406a7c:	mov    QWORD PTR [rsp+0x48],rax
  406a81:	movabs rax,0x1504000100000000
  406a8b:	mov    QWORD PTR [rsp+0x50],rax
  406a90:	mov    edx,0x20
  406a95:	movabs rax,0x5000300002000300
  406a9f:	mov    rsi,r15
  406aa2:	mov    rdi,rbx
  406aa5:	mov    QWORD PTR [rsp+0x58],rax
  406aaa:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406aaf:	mov    r10d,0x3
  406ab5:	mov    rsi,r12
  406ab8:	lea    eax,[r14+0x7]
  406abc:	mov    edx,0xa
  406ac1:	mov    rdi,rbx
  406ac4:	mov    WORD PTR [rsp+0x1c],r10w
  406aca:	mov    DWORD PTR [rsp+0x18],eax
  406ace:	mov    DWORD PTR [rsp+0x14],0x10
  406ad6:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406adb:	mov    rbp,QWORD PTR [rbx+0x80]
  406ae2:	mov    rdi,rbp
  406ae5:	call   401260 <strlen@plt>
  406aea:	lea    rdx,[rax+0x1]
  406aee:	mov    rsi,rbp
  406af1:	mov    rdi,rbx
  406af4:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406af9:	mov    QWORD PTR [rip+0xc6dc],0x0        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406b04:	lea    eax,[r14-0x1]
  406b08:	lea    r12,[rax*8+0x8]
  406b10:	mov    ebp,0xffffffff
  406b15:	nop    DWORD PTR [rax]
  406b18:	xor    r8d,r8d
  406b1b:	mov    r9d,0x3
  406b21:	mov    ecx,0xfffffffe
  406b26:	mov    edx,0x1
  406b2b:	lea    rsi,[rip+0x857e]        # 40f0b0 <__sprintf_chk@plt+0xdcf0>
  406b32:	mov    rdi,rbx
  406b35:	mov    QWORD PTR [rip+0xc698],0x4        # 4131d8 <__sprintf_chk@plt+0x11e18>
  406b40:	call   406480 <__sprintf_chk@plt+0x50c0>
  406b45:	cmp    QWORD PTR [rip+0xc693],0x0        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406b4d:	je     406c88 <__sprintf_chk@plt+0x58c8>
  406b53:	xor    edx,edx
  406b55:	mov    rsi,r13
  406b58:	mov    rdi,rbx
  406b5b:	call   406640 <__sprintf_chk@plt+0x5280>
  406b60:	test   r14d,r14d
  406b63:	jle    406b99 <__sprintf_chk@plt+0x57d9>
  406b65:	xor    r15d,r15d
  406b68:	nop    DWORD PTR [rax+rax*1+0x0]
  406b70:	mov    rax,QWORD PTR [rbx+0x60]
  406b74:	mov    r9d,0x2
  406b7a:	mov    rsi,QWORD PTR [rax+r15*1]
  406b7e:	mov    r8d,0x20
  406b84:	mov    ecx,ebp
  406b86:	xor    edx,edx
  406b88:	mov    rdi,rbx
  406b8b:	add    r15,0x8
  406b8f:	call   406480 <__sprintf_chk@plt+0x50c0>
  406b94:	cmp    r12,r15
  406b97:	jne    406b70 <__sprintf_chk@plt+0x57b0>
  406b99:	cmp    QWORD PTR [rip+0xc63f],0x0        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406ba1:	je     406bcd <__sprintf_chk@plt+0x580d>
  406ba3:	mov    edx,0x1
  406ba8:	mov    rsi,r13
  406bab:	mov    rdi,rbx
  406bae:	call   406640 <__sprintf_chk@plt+0x5280>
  406bb3:	cmp    QWORD PTR [rip+0xc625],0x0        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406bbb:	je     406bcd <__sprintf_chk@plt+0x580d>
  406bbd:	mov    edx,0x2
  406bc2:	mov    rsi,r13
  406bc5:	mov    rdi,rbx
  406bc8:	call   406640 <__sprintf_chk@plt+0x5280>
  406bcd:	mov    r9d,0x2
  406bd3:	mov    r8d,0x20
  406bd9:	mov    ecx,ebp
  406bdb:	xor    edx,edx
  406bdd:	lea    rsi,[rip+0x84d5]        # 40f0b9 <__sprintf_chk@plt+0xdcf9>
  406be4:	mov    rdi,rbx
  406be7:	call   406480 <__sprintf_chk@plt+0x50c0>
  406bec:	mov    rsi,QWORD PTR [rbx+0x70]
  406bf0:	mov    r9d,0x2
  406bf6:	xor    r8d,r8d
  406bf9:	xor    ecx,ecx
  406bfb:	xor    edx,edx
  406bfd:	mov    rdi,rbx
  406c00:	call   406480 <__sprintf_chk@plt+0x50c0>
  406c05:	mov    eax,DWORD PTR [rbx+0x40]
  406c08:	test   eax,eax
  406c0a:	jle    406c40 <__sprintf_chk@plt+0x5880>
  406c0c:	xor    r15d,r15d
  406c0f:	nop
  406c10:	mov    rax,r15
  406c13:	shl    rax,0x4
  406c17:	add    rax,QWORD PTR [rbx+0x58]
  406c1b:	mov    edx,DWORD PTR [rax+0x8]
  406c1e:	mov    rsi,QWORD PTR [rax]
  406c21:	mov    r9d,0x2
  406c27:	mov    r8d,0x20
  406c2d:	xor    ecx,ecx
  406c2f:	mov    rdi,rbx
  406c32:	inc    r15
  406c35:	call   406480 <__sprintf_chk@plt+0x50c0>
  406c3a:	cmp    DWORD PTR [rbx+0x40],r15d
  406c3e:	jg     406c10 <__sprintf_chk@plt+0x5850>
  406c40:	cmp    QWORD PTR [rip+0xc598],0x0        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406c48:	je     406c66 <__sprintf_chk@plt+0x58a6>
  406c4a:	mov    rsi,r13
  406c4d:	mov    edx,0x3
  406c52:	mov    rdi,rbx
  406c55:	call   406640 <__sprintf_chk@plt+0x5280>
  406c5a:	mov    rsi,QWORD PTR [rip+0xc57f]        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406c61:	test   rsi,rsi
  406c64:	jne    406ca0 <__sprintf_chk@plt+0x58e0>
  406c66:	mov    r15,QWORD PTR [rip+0xc56b]        # 4131d8 <__sprintf_chk@plt+0x11e18>
  406c6d:	mov    rdi,r15
  406c70:	call   401330 <malloc@plt>
  406c75:	mov    QWORD PTR [rip+0xc564],rax        # 4131e0 <__sprintf_chk@plt+0x11e20>
  406c7c:	mov    DWORD PTR [rax],r15d
  406c7f:	jmp    406b18 <__sprintf_chk@plt+0x5758>
  406c84:	nop    DWORD PTR [rax+0x0]
  406c88:	test   r14d,r14d
  406c8b:	jg     406b65 <__sprintf_chk@plt+0x57a5>
  406c91:	jmp    406bcd <__sprintf_chk@plt+0x580d>
  406c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ca0:	mov    rdx,QWORD PTR [rip+0xc531]        # 4131d8 <__sprintf_chk@plt+0x11e18>
  406ca7:	mov    rdi,rbx
  406caa:	call   405e20 <__sprintf_chk@plt+0x4a60>
  406caf:	mov    rax,QWORD PTR [rsp+0x108]
  406cb7:	xor    rax,QWORD PTR fs:0x28
  406cc0:	jne    406cd4 <__sprintf_chk@plt+0x5914>
  406cc2:	add    rsp,0x118
  406cc9:	pop    rbx
  406cca:	pop    rbp
  406ccb:	pop    r12
  406ccd:	pop    r13
  406ccf:	pop    r14
  406cd1:	pop    r15
  406cd3:	ret    
  406cd4:	call   401270 <__stack_chk_fail@plt>
  406cd9:	nop    DWORD PTR [rax+0x0]
  406ce0:	endbr64 
  406ce4:	mov    DWORD PTR [rip+0xc522],edx        # 41320c <__sprintf_chk@plt+0x11e4c>
  406cea:	ret    
  406ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cf0:	push   r13
  406cf2:	push   r12
  406cf4:	mov    r12,rdi
  406cf7:	push   rbp
  406cf8:	mov    ebp,esi
  406cfa:	push   rbx
  406cfb:	sub    rsp,0x8
  406cff:	call   401260 <strlen@plt>
  406d04:	mov    rbx,rax
  406d07:	cmp    ebp,0xc0
  406d0d:	je     406d1b <__sprintf_chk@plt+0x595b>
  406d0f:	mov    r13,QWORD PTR [rip+0xc55a]        # 413270 <__sprintf_chk@plt+0x11eb0>
  406d16:	cmp    r13,rax
  406d19:	jb     406d70 <__sprintf_chk@plt+0x59b0>
  406d1b:	cmp    rbx,0x39
  406d1f:	ja     406d9a <__sprintf_chk@plt+0x59da>
  406d21:	mov    rax,QWORD PTR [rip+0xc5a8]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  406d28:	lea    rdx,[rip+0xe5b1]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  406d2f:	lea    rcx,[rax+rbx*1+0x3]
  406d34:	cmp    rcx,rdx
  406d37:	ja     406dc4 <__sprintf_chk@plt+0x5a04>
  406d3d:	or     ebp,ebx
  406d3f:	mov    BYTE PTR [rax],bpl
  406d42:	lea    r8,[rax+0x1]
  406d46:	mov    rdx,rbx
  406d49:	mov    rsi,r12
  406d4c:	mov    rdi,r8
  406d4f:	call   401320 <memcpy@plt>
  406d54:	add    rbx,rax
  406d57:	mov    QWORD PTR [rip+0xc572],rbx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  406d5e:	add    rsp,0x8
  406d62:	pop    rbx
  406d63:	pop    rbp
  406d64:	pop    r12
  406d66:	pop    r13
  406d68:	ret    
  406d69:	nop    DWORD PTR [rax+0x0]
  406d70:	cmp    BYTE PTR [r12+r13*1],0x5f
  406d75:	jne    406d1b <__sprintf_chk@plt+0x595b>
  406d77:	mov    rdx,r13
  406d7a:	lea    rsi,[rip+0xc4ff]        # 413280 <__sprintf_chk@plt+0x11ec0>
  406d81:	mov    rdi,r12
  406d84:	call   401220 <strncmp@plt>
  406d89:	test   eax,eax
  406d8b:	jne    406d1b <__sprintf_chk@plt+0x595b>
  406d8d:	lea    r12,[r12+r13*1+0x1]
  406d92:	not    r13
  406d95:	add    rbx,r13
  406d98:	jmp    406d1b <__sprintf_chk@plt+0x595b>
  406d9a:	mov    rax,QWORD PTR [rip+0xc24f]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  406da1:	mov    rcx,r12
  406da4:	mov    rdi,QWORD PTR [rax]
  406da7:	lea    rdx,[rip+0x831f]        # 40f0cd <__sprintf_chk@plt+0xdd0d>
  406dae:	mov    esi,0x1
  406db3:	xor    eax,eax
  406db5:	call   401390 <__fprintf_chk@plt>
  406dba:	mov    edi,0x1
  406dbf:	call   401370 <exit@plt>
  406dc4:	mov    rax,QWORD PTR [rip+0xc225]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  406dcb:	lea    rdi,[rip+0x848e]        # 40f260 <__sprintf_chk@plt+0xdea0>
  406dd2:	mov    rcx,QWORD PTR [rax]
  406dd5:	mov    edx,0x1e
  406dda:	mov    esi,0x1
  406ddf:	call   401380 <fwrite@plt>
  406de4:	mov    edi,0x1
  406de9:	call   401370 <exit@plt>
  406dee:	xchg   ax,ax
  406df0:	endbr64 
  406df4:	push   r14
  406df6:	push   r13
  406df8:	push   r12
  406dfa:	mov    r12,rdi
  406dfd:	push   rbp
  406dfe:	mov    rbp,rsi
  406e01:	push   rbx
  406e02:	mov    ebx,edx
  406e04:	test   edx,edx
  406e06:	je     406e0e <__sprintf_chk@plt+0x5a4e>
  406e08:	inc    DWORD PTR [rip+0xc3f2]        # 413200 <__sprintf_chk@plt+0x11e40>
  406e0e:	mov    eax,DWORD PTR [r12+0x8]
  406e13:	cmp    eax,0x7
  406e16:	je     406e60 <__sprintf_chk@plt+0x5aa0>
  406e18:	cmp    eax,0x6
  406e1b:	je     406f50 <__sprintf_chk@plt+0x5b90>
  406e21:	cmp    eax,0x8
  406e24:	je     406f08 <__sprintf_chk@plt+0x5b48>
  406e2a:	cmp    eax,0x9
  406e2d:	je     406f70 <__sprintf_chk@plt+0x5bb0>
  406e33:	test   ebx,ebx
  406e35:	je     406e40 <__sprintf_chk@plt+0x5a80>
  406e37:	cmp    eax,0x5
  406e3a:	je     407000 <__sprintf_chk@plt+0x5c40>
  406e40:	pop    rbx
  406e41:	pop    rbp
  406e42:	pop    r12
  406e44:	pop    r13
  406e46:	inc    DWORD PTR [rip+0xc3bc]        # 413208 <__sprintf_chk@plt+0x11e48>
  406e4c:	mov    DWORD PTR [rip+0xc3b6],0x0        # 41320c <__sprintf_chk@plt+0x11e4c>
  406e56:	pop    r14
  406e58:	ret    
  406e59:	nop    DWORD PTR [rax+0x0]
  406e60:	mov    edx,DWORD PTR [rip+0xc3aa]        # 413210 <__sprintf_chk@plt+0x11e50>
  406e66:	test   edx,edx
  406e68:	je     4070d4 <__sprintf_chk@plt+0x5d14>
  406e6e:	mov    eax,DWORD PTR [rip+0xc398]        # 41320c <__sprintf_chk@plt+0x11e4c>
  406e74:	cmp    eax,0x1
  406e77:	je     406fd0 <__sprintf_chk@plt+0x5c10>
  406e7d:	cmp    ebx,0x80
  406e83:	je     406ee7 <__sprintf_chk@plt+0x5b27>
  406e85:	mov    rdi,QWORD PTR [r12+0x10]
  406e8a:	cmp    edx,0x1
  406e8d:	je     406ead <__sprintf_chk@plt+0x5aed>
  406e8f:	mov    rcx,rdi
  406e92:	mov    edx,0x2
  406e97:	lea    rdi,[rip+0x833b]        # 40f1d9 <__sprintf_chk@plt+0xde19>
  406e9e:	mov    esi,0x1
  406ea3:	call   401380 <fwrite@plt>
  406ea8:	mov    rdi,QWORD PTR [r12+0x10]
  406ead:	test   ebx,ebx
  406eaf:	lea    rax,[rip+0x823d]        # 40f0f3 <__sprintf_chk@plt+0xdd33>
  406eb6:	lea    rcx,[rip+0x822e]        # 40f0eb <__sprintf_chk@plt+0xdd2b>
  406ebd:	cmove  rcx,rax
  406ec1:	mov    r8,rbp
  406ec4:	lea    rdx,[rip+0x822f]        # 40f0fa <__sprintf_chk@plt+0xdd3a>
  406ecb:	mov    esi,0x1
  406ed0:	xor    eax,eax
  406ed2:	mov    DWORD PTR [rip+0xc334],0x2        # 413210 <__sprintf_chk@plt+0x11e50>
  406edc:	call   401390 <__fprintf_chk@plt>
  406ee1:	mov    eax,DWORD PTR [rip+0xc325]        # 41320c <__sprintf_chk@plt+0x11e4c>
  406ee7:	cmp    eax,0x2
  406eea:	je     406f40 <__sprintf_chk@plt+0x5b80>
  406eec:	inc    BYTE PTR [rip+0xc3f0]        # 4132e2 <__sprintf_chk@plt+0x11f22>
  406ef2:	mov    esi,ebx
  406ef4:	mov    rdi,rbp
  406ef7:	call   406cf0 <__sprintf_chk@plt+0x5930>
  406efc:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  406f01:	nop    DWORD PTR [rax+0x0]
  406f08:	mov    rdi,rbp
  406f0b:	call   401260 <strlen@plt>
  406f10:	cmp    rax,0x4f
  406f14:	ja     4070aa <__sprintf_chk@plt+0x5cea>
  406f1a:	lea    rdx,[rax+0x1]
  406f1e:	mov    ecx,0x50
  406f23:	mov    rsi,rbp
  406f26:	lea    rdi,[rip+0xc2f3]        # 413220 <__sprintf_chk@plt+0x11e60>
  406f2d:	call   401300 <__memcpy_chk@plt>
  406f32:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  406f37:	nop    WORD PTR [rax+rax*1+0x0]
  406f40:	lea    rbp,[rip+0x21ce]        # 409115 <__sprintf_chk@plt+0x7d55>
  406f47:	jmp    406ef2 <__sprintf_chk@plt+0x5b32>
  406f49:	nop    DWORD PTR [rax+0x0]
  406f50:	mov    rdi,QWORD PTR [r12+0x10]
  406f55:	mov    rcx,rbp
  406f58:	lea    rdx,[rip+0x81a2]        # 40f101 <__sprintf_chk@plt+0xdd41>
  406f5f:	mov    esi,0x1
  406f64:	xor    eax,eax
  406f66:	call   401390 <__fprintf_chk@plt>
  406f6b:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  406f70:	movzx  edx,BYTE PTR [rbp+0x1]
  406f74:	test   dl,dl
  406f76:	je     406fac <__sprintf_chk@plt+0x5bec>
  406f78:	cmp    BYTE PTR [rip+0xc301],0x0        # 413280 <__sprintf_chk@plt+0x11ec0>
  406f7f:	je     406fac <__sprintf_chk@plt+0x5bec>
  406f81:	mov    eax,0x1
  406f86:	lea    rcx,[rip+0xc2f2]        # 41327f <__sprintf_chk@plt+0x11ebf>
  406f8d:	jmp    406f99 <__sprintf_chk@plt+0x5bd9>
  406f8f:	nop
  406f90:	inc    rax
  406f93:	cmp    BYTE PTR [rax+rcx*1],0x0
  406f97:	je     406fac <__sprintf_chk@plt+0x5bec>
  406f99:	cmp    dl,0x5f
  406f9c:	jne    406fa3 <__sprintf_chk@plt+0x5be3>
  406f9e:	mov    BYTE PTR [rbp+rax*1+0x0],0x2e
  406fa3:	movzx  edx,BYTE PTR [rbp+rax*1+0x1]
  406fa8:	test   dl,dl
  406faa:	jne    406f90 <__sprintf_chk@plt+0x5bd0>
  406fac:	mov    rdi,QWORD PTR [r12+0x10]
  406fb1:	mov    rcx,rbp
  406fb4:	lea    rdx,[rip+0x21a2]        # 40915d <__sprintf_chk@plt+0x7d9d>
  406fbb:	mov    esi,0x1
  406fc0:	xor    eax,eax
  406fc2:	call   401390 <__fprintf_chk@plt>
  406fc7:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  406fcc:	nop    DWORD PTR [rax+0x0]
  406fd0:	mov    rax,QWORD PTR [rip+0xc2f9]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  406fd7:	lea    rcx,[rip+0xe302]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  406fde:	lea    rdx,[rax+0x1]
  406fe2:	cmp    rdx,rcx
  406fe5:	ja     4070e0 <__sprintf_chk@plt+0x5d20>
  406feb:	mov    QWORD PTR [rip+0xc2de],rdx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  406ff2:	mov    BYTE PTR [rax],0xfe
  406ff5:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  406ffa:	nop    WORD PTR [rax+rax*1+0x0]
  407000:	mov    eax,DWORD PTR [r12+0x3c]
  407005:	test   eax,eax
  407007:	jle    407079 <__sprintf_chk@plt+0x5cb9>
  407009:	dec    eax
  40700b:	mov    r14,QWORD PTR [r12+0x78]
  407010:	lea    r13,[rax*8+0x8]
  407018:	xor    ebx,ebx
  40701a:	jmp    407029 <__sprintf_chk@plt+0x5c69>
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	add    rbx,0x8
  407024:	cmp    r13,rbx
  407027:	je     407079 <__sprintf_chk@plt+0x5cb9>
  407029:	mov    rdi,QWORD PTR [r14+rbx*1]
  40702d:	cmp    BYTE PTR [rdi],0x66
  407030:	jne    407020 <__sprintf_chk@plt+0x5c60>
  407032:	cmp    BYTE PTR [rdi+0x1],0x66
  407036:	jne    407020 <__sprintf_chk@plt+0x5c60>
  407038:	cmp    BYTE PTR [rdi+0x2],0x5f
  40703c:	jne    407020 <__sprintf_chk@plt+0x5c60>
  40703e:	add    rdi,0x3
  407042:	mov    rsi,rbp
  407045:	call   4012e0 <strcmp@plt>
  40704a:	test   eax,eax
  40704c:	jne    407020 <__sprintf_chk@plt+0x5c60>
  40704e:	mov    rax,QWORD PTR [r12+0x50]
  407053:	mov    rdi,QWORD PTR [r12+0x10]
  407058:	mov    rcx,QWORD PTR [rax+rbx*1]
  40705c:	lea    rdx,[rip+0x80a9]        # 40f10c <__sprintf_chk@plt+0xdd4c>
  407063:	sub    rcx,QWORD PTR [r12+0x28]
  407068:	mov    esi,0x1
  40706d:	xor    eax,eax
  40706f:	call   401390 <__fprintf_chk@plt>
  407074:	jmp    406e40 <__sprintf_chk@plt+0x5a80>
  407079:	mov    rax,QWORD PTR [rip+0xbf70]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  407080:	mov    r8,rbp
  407083:	mov    rdi,QWORD PTR [rax]
  407086:	lea    rcx,[rip+0x8084]        # 40f111 <__sprintf_chk@plt+0xdd51>
  40708d:	lea    rdx,[rip+0x8244]        # 40f2d8 <__sprintf_chk@plt+0xdf18>
  407094:	mov    esi,0x1
  407099:	xor    eax,eax
  40709b:	call   401390 <__fprintf_chk@plt>
  4070a0:	mov    edi,0x1
  4070a5:	call   401370 <exit@plt>
  4070aa:	mov    rcx,rbp
  4070ad:	lea    rdx,[rip+0x81fc]        # 40f2b0 <__sprintf_chk@plt+0xdef0>
  4070b4:	mov    rax,QWORD PTR [rip+0xbf35]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4070bb:	mov    esi,0x1
  4070c0:	mov    rdi,QWORD PTR [rax]
  4070c3:	xor    eax,eax
  4070c5:	call   401390 <__fprintf_chk@plt>
  4070ca:	mov    edi,0x1
  4070cf:	call   401370 <exit@plt>
  4070d4:	mov    rcx,rbp
  4070d7:	lea    rdx,[rip+0x81a2]        # 40f280 <__sprintf_chk@plt+0xdec0>
  4070de:	jmp    4070b4 <__sprintf_chk@plt+0x5cf4>
  4070e0:	mov    rax,QWORD PTR [rip+0xbf09]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4070e7:	lea    rdi,[rip+0x8172]        # 40f260 <__sprintf_chk@plt+0xdea0>
  4070ee:	mov    rcx,QWORD PTR [rax]
  4070f1:	mov    edx,0x1e
  4070f6:	mov    esi,0x1
  4070fb:	call   401380 <fwrite@plt>
  407100:	mov    edi,0x1
  407105:	call   401370 <exit@plt>
  40710a:	nop    WORD PTR [rax+rax*1+0x0]
  407110:	push   r14
  407112:	push   r13
  407114:	push   r12
  407116:	push   rbp
  407117:	push   rbx
  407118:	sub    rsp,0x60
  40711c:	mov    rax,QWORD PTR fs:0x28
  407125:	mov    QWORD PTR [rsp+0x58],rax
  40712a:	xor    eax,eax
  40712c:	mov    eax,DWORD PTR [rip+0xc0de]        # 413210 <__sprintf_chk@plt+0x11e50>
  407132:	test   eax,eax
  407134:	je     4071d0 <__sprintf_chk@plt+0x5e10>
  40713a:	mov    r13,rdi
  40713d:	mov    rcx,QWORD PTR [rdi]
  407140:	cmp    eax,0x1
  407143:	je     407250 <__sprintf_chk@plt+0x5e90>
  407149:	mov    edx,0x4
  40714e:	mov    esi,0x1
  407153:	lea    rdi,[rip+0x7fd1]        # 40f12b <__sprintf_chk@plt+0xdd6b>
  40715a:	call   401380 <fwrite@plt>
  40715f:	mov    rdi,QWORD PTR [r13+0x0]
  407163:	xor    eax,eax
  407165:	lea    r8,[rip+0xc114]        # 413280 <__sprintf_chk@plt+0x11ec0>
  40716c:	lea    rcx,[rip+0x7fbd]        # 40f130 <__sprintf_chk@plt+0xdd70>
  407173:	lea    rdx,[rip+0x8186]        # 40f300 <__sprintf_chk@plt+0xdf40>
  40717a:	mov    esi,0x1
  40717f:	lea    rbx,[rip+0xc15a]        # 4132e0 <__sprintf_chk@plt+0x11f20>
  407186:	call   401390 <__fprintf_chk@plt>
  40718b:	xor    ebp,ebp
  40718d:	cmp    QWORD PTR [rip+0xc13c],rbx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407194:	mov    BYTE PTR [rsp],0x0
  407198:	mov    r12,rsp
  40719b:	lea    r14,[rip+0x7fac]        # 40f14e <__sprintf_chk@plt+0xdd8e>
  4071a2:	ja     407224 <__sprintf_chk@plt+0x5e64>
  4071a8:	mov    r12,rsp
  4071ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4071b0:	mov    rdi,QWORD PTR [r13+0x0]
  4071b4:	mov    r8d,0xff
  4071ba:	mov    rcx,r12
  4071bd:	lea    rdx,[rip+0x7f79]        # 40f13d <__sprintf_chk@plt+0xdd7d>
  4071c4:	mov    esi,0x1
  4071c9:	xor    eax,eax
  4071cb:	call   401390 <__fprintf_chk@plt>
  4071d0:	mov    rax,QWORD PTR [rsp+0x58]
  4071d5:	xor    rax,QWORD PTR fs:0x28
  4071de:	jne    40726f <__sprintf_chk@plt+0x5eaf>
  4071e4:	add    rsp,0x60
  4071e8:	pop    rbx
  4071e9:	pop    rbp
  4071ea:	pop    r12
  4071ec:	pop    r13
  4071ee:	pop    r14
  4071f0:	ret    
  4071f1:	nop    DWORD PTR [rax+0x0]
  4071f8:	mov    rdi,QWORD PTR [r13+0x0]
  4071fc:	mov    rcx,r12
  4071ff:	lea    rdx,[rip+0x1e4e]        # 409054 <__sprintf_chk@plt+0x7c94>
  407206:	mov    esi,0x1
  40720b:	xor    eax,eax
  40720d:	call   401390 <__fprintf_chk@plt>
  407212:	mov    BYTE PTR [rsp],0x0
  407216:	xor    ebp,ebp
  407218:	inc    rbx
  40721b:	cmp    rbx,QWORD PTR [rip+0xc0ae]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407222:	jae    4071b0 <__sprintf_chk@plt+0x5df0>
  407224:	movsxd rdi,ebp
  407227:	movzx  r8d,BYTE PTR [rbx]
  40722b:	add    rdi,r12
  40722e:	mov    rcx,r14
  407231:	mov    rdx,0xffffffffffffffff
  407238:	mov    esi,0x1
  40723d:	xor    eax,eax
  40723f:	call   4013c0 <__sprintf_chk@plt>
  407244:	add    ebp,eax
  407246:	cmp    ebp,0x4a
  407249:	jle    407218 <__sprintf_chk@plt+0x5e58>
  40724b:	jmp    4071f8 <__sprintf_chk@plt+0x5e38>
  40724d:	nop    DWORD PTR [rax]
  407250:	mov    edx,0x12
  407255:	mov    esi,0x1
  40725a:	lea    rdi,[rip+0x7eb7]        # 40f118 <__sprintf_chk@plt+0xdd58>
  407261:	call   401380 <fwrite@plt>
  407266:	mov    rcx,QWORD PTR [r13+0x0]
  40726a:	jmp    407149 <__sprintf_chk@plt+0x5d89>
  40726f:	call   401270 <__stack_chk_fail@plt>
  407274:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40727f:	nop
  407280:	endbr64 
  407284:	push   rbp
  407285:	push   rbx
  407286:	mov    rbx,rsi
  407289:	sub    rsp,0x8
  40728d:	cmp    DWORD PTR [rdi+0x8],0x7
  407291:	je     4072d0 <__sprintf_chk@plt+0x5f10>
  407293:	mov    rdi,rbx
  407296:	call   401260 <strlen@plt>
  40729b:	mov    QWORD PTR [rip+0xbfce],rax        # 413270 <__sprintf_chk@plt+0x11eb0>
  4072a2:	cmp    rax,0x4f
  4072a6:	ja     40737b <__sprintf_chk@plt+0x5fbb>
  4072ac:	add    rsp,0x8
  4072b0:	mov    rsi,rbx
  4072b3:	pop    rbx
  4072b4:	lea    rdx,[rax+0x1]
  4072b8:	mov    ecx,0x50
  4072bd:	lea    rdi,[rip+0xbfbc]        # 413280 <__sprintf_chk@plt+0x11ec0>
  4072c4:	pop    rbp
  4072c5:	jmp    401300 <__memcpy_chk@plt>
  4072ca:	nop    WORD PTR [rax+rax*1+0x0]
  4072d0:	mov    rbp,rdi
  4072d3:	lea    rdi,[rdi+0x10]
  4072d7:	call   407110 <__sprintf_chk@plt+0x5d50>
  4072dc:	mov    eax,DWORD PTR [rip+0xbf26]        # 413208 <__sprintf_chk@plt+0x11e48>
  4072e2:	mov    rdi,QWORD PTR [rbp+0x10]
  4072e6:	mov    BYTE PTR [rip+0xbff4],al        # 4132e0 <__sprintf_chk@plt+0x11f20>
  4072ec:	mov    eax,DWORD PTR [rip+0xbf0e]        # 413200 <__sprintf_chk@plt+0x11e40>
  4072f2:	mov    r8,rbx
  4072f5:	mov    BYTE PTR [rip+0xbfe6],al        # 4132e1 <__sprintf_chk@plt+0x11f21>
  4072fb:	lea    rax,[rip+0xbfe1]        # 4132e3 <__sprintf_chk@plt+0x11f23>
  407302:	mov    QWORD PTR [rip+0xbfc7],rax        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407309:	lea    rcx,[rip+0x7e42]        # 40f152 <__sprintf_chk@plt+0xdd92>
  407310:	lea    rdx,[rip+0x7e42]        # 40f159 <__sprintf_chk@plt+0xdd99>
  407317:	mov    esi,0x1
  40731c:	xor    eax,eax
  40731e:	mov    BYTE PTR [rip+0xbfbd],0x0        # 4132e2 <__sprintf_chk@plt+0x11f22>
  407325:	mov    DWORD PTR [rip+0xbee1],0x1        # 413210 <__sprintf_chk@plt+0x11e50>
  40732f:	call   401390 <__fprintf_chk@plt>
  407334:	mov    rdi,QWORD PTR [rbp+0x10]
  407338:	mov    r8,rbx
  40733b:	lea    rcx,[rip+0x7e10]        # 40f152 <__sprintf_chk@plt+0xdd92>
  407342:	lea    rdx,[rip+0x7e24]        # 40f16d <__sprintf_chk@plt+0xddad>
  407349:	mov    esi,0x1
  40734e:	xor    eax,eax
  407350:	call   401390 <__fprintf_chk@plt>
  407355:	mov    rdi,QWORD PTR [rbp+0x10]
  407359:	mov    r8,rbx
  40735c:	lea    rcx,[rip+0x7e1e]        # 40f181 <__sprintf_chk@plt+0xddc1>
  407363:	lea    rdx,[rip+0x7fbe]        # 40f328 <__sprintf_chk@plt+0xdf68>
  40736a:	mov    esi,0x1
  40736f:	xor    eax,eax
  407371:	call   401390 <__fprintf_chk@plt>
  407376:	jmp    407293 <__sprintf_chk@plt+0x5ed3>
  40737b:	mov    rax,QWORD PTR [rip+0xbc6e]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  407382:	mov    rcx,rbx
  407385:	mov    rdi,QWORD PTR [rax]
  407388:	lea    rdx,[rip+0x7fc1]        # 40f350 <__sprintf_chk@plt+0xdf90>
  40738f:	mov    esi,0x1
  407394:	xor    eax,eax
  407396:	call   401390 <__fprintf_chk@plt>
  40739b:	mov    edi,0x1
  4073a0:	call   401370 <exit@plt>
  4073a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4073b0:	endbr64 
  4073b4:	cmp    DWORD PTR [rdi+0x8],0x7
  4073b8:	je     4073c0 <__sprintf_chk@plt+0x6000>
  4073ba:	ret    
  4073bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4073c0:	sub    rsp,0x8
  4073c4:	cmp    BYTE PTR [rsi],0x21
  4073c7:	je     407400 <__sprintf_chk@plt+0x6040>
  4073c9:	mov    rdi,rsi
  4073cc:	mov    esi,0xc0
  4073d1:	call   406cf0 <__sprintf_chk@plt+0x5930>
  4073d6:	mov    rax,QWORD PTR [rip+0xbef3]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  4073dd:	mov    BYTE PTR [rax],0xfa
  4073e0:	lea    rdx,[rax+0x1]
  4073e4:	mov    QWORD PTR [rip+0xbee5],rdx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  4073eb:	inc    BYTE PTR [rip+0xbef1]        # 4132e2 <__sprintf_chk@plt+0x11f22>
  4073f1:	add    rsp,0x8
  4073f5:	ret    
  4073f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407400:	cmp    BYTE PTR [rsi+0x1],0x0
  407404:	jne    4073c9 <__sprintf_chk@plt+0x6009>
  407406:	mov    BYTE PTR [rsi],0x0
  407409:	jmp    4073c9 <__sprintf_chk@plt+0x6009>
  40740b:	nop    DWORD PTR [rax+rax*1+0x0]
  407410:	endbr64 
  407414:	push   r12
  407416:	push   rbp
  407417:	push   rbx
  407418:	sub    rsp,0x10
  40741c:	mov    rax,QWORD PTR fs:0x28
  407425:	mov    QWORD PTR [rsp+0x8],rax
  40742a:	xor    eax,eax
  40742c:	cmp    DWORD PTR [rdi+0x8],0x7
  407430:	je     407450 <__sprintf_chk@plt+0x6090>
  407432:	mov    rax,QWORD PTR [rsp+0x8]
  407437:	xor    rax,QWORD PTR fs:0x28
  407440:	jne    407599 <__sprintf_chk@plt+0x61d9>
  407446:	add    rsp,0x10
  40744a:	pop    rbx
  40744b:	pop    rbp
  40744c:	pop    r12
  40744e:	ret    
  40744f:	nop
  407450:	mov    rbx,rsi
  407453:	mov    rdi,rsi
  407456:	call   401260 <strlen@plt>
  40745b:	movzx  edx,BYTE PTR [rbx]
  40745e:	cmp    dl,0x22
  407461:	je     407510 <__sprintf_chk@plt+0x6150>
  407467:	sub    edx,0x30
  40746a:	cmp    dl,0x9
  40746d:	jbe    4074c0 <__sprintf_chk@plt+0x6100>
  40746f:	mov    ecx,0x7
  407474:	lea    rdi,[rip+0x7d11]        # 40f18c <__sprintf_chk@plt+0xddcc>
  40747b:	mov    rsi,rbx
  40747e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407480:	seta   dl
  407483:	sbb    dl,0x0
  407486:	test   dl,dl
  407488:	jne    407540 <__sprintf_chk@plt+0x6180>
  40748e:	mov    rax,QWORD PTR [rip+0xbe3b]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407495:	lea    rcx,[rip+0xde44]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40749c:	lea    rdx,[rax+0x1]
  4074a0:	cmp    rdx,rcx
  4074a3:	ja     4075cf <__sprintf_chk@plt+0x620f>
  4074a9:	mov    QWORD PTR [rip+0xbe20],rdx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  4074b0:	mov    BYTE PTR [rax],0xfd
  4074b3:	jmp    407432 <__sprintf_chk@plt+0x6072>
  4074b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4074c0:	mov    rsi,rsp
  4074c3:	mov    rdi,rbx
  4074c6:	call   401240 <strtod@plt>
  4074cb:	mov    rax,QWORD PTR [rsp]
  4074cf:	cmp    BYTE PTR [rax],0x0
  4074d2:	jne    40759e <__sprintf_chk@plt+0x61de>
  4074d8:	mov    rax,QWORD PTR [rip+0xbdf1]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  4074df:	lea    rcx,[rip+0xddfa]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  4074e6:	lea    rdx,[rax+0x9]
  4074ea:	cmp    rdx,rcx
  4074ed:	ja     4075cf <__sprintf_chk@plt+0x620f>
  4074f3:	mov    BYTE PTR [rax],0xfb
  4074f6:	vmovq  QWORD PTR [rax+0x1],xmm0
  4074fb:	mov    QWORD PTR [rip+0xbdce],rdx        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407502:	jmp    407432 <__sprintf_chk@plt+0x6072>
  407507:	nop    WORD PTR [rax+rax*1+0x0]
  407510:	cmp    eax,0x1
  407513:	jle    40759e <__sprintf_chk@plt+0x61de>
  407519:	cdqe   
  40751b:	lea    rax,[rbx+rax*1-0x1]
  407520:	cmp    BYTE PTR [rax],0x22
  407523:	jne    40759e <__sprintf_chk@plt+0x61de>
  407525:	mov    BYTE PTR [rax],0x0
  407528:	lea    rdi,[rbx+0x1]
  40752c:	mov    esi,0xc0
  407531:	call   406cf0 <__sprintf_chk@plt+0x5930>
  407536:	jmp    407432 <__sprintf_chk@plt+0x6072>
  40753b:	nop    DWORD PTR [rax+rax*1+0x0]
  407540:	cmp    eax,0x4
  407543:	jle    40759e <__sprintf_chk@plt+0x61de>
  407545:	mov    ecx,0x4
  40754a:	lea    rdi,[rip+0x7c42]        # 40f193 <__sprintf_chk@plt+0xddd3>
  407551:	mov    rsi,rbx
  407554:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407556:	seta   al
  407559:	sbb    al,0x0
  40755b:	test   al,al
  40755d:	jne    40759e <__sprintf_chk@plt+0x61de>
  40755f:	mov    rbp,QWORD PTR [rip+0xbd6a]        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407566:	lea    rax,[rip+0xdd73]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40756d:	lea    r12,[rbp+0x2]
  407571:	cmp    r12,rax
  407574:	ja     4075cf <__sprintf_chk@plt+0x620f>
  407576:	mov    BYTE PTR [rbp+0x0],0xfc
  40757a:	lea    rdi,[rbx+0x4]
  40757e:	mov    edx,0xa
  407583:	xor    esi,esi
  407585:	call   401310 <strtol@plt>
  40758a:	mov    BYTE PTR [rbp+0x1],al
  40758d:	mov    QWORD PTR [rip+0xbd3c],r12        # 4132d0 <__sprintf_chk@plt+0x11f10>
  407594:	jmp    407432 <__sprintf_chk@plt+0x6072>
  407599:	call   401270 <__stack_chk_fail@plt>
  40759e:	mov    rax,QWORD PTR [rip+0xba4b]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4075a5:	mov    r8,rbx
  4075a8:	mov    rdi,QWORD PTR [rax]
  4075ab:	lea    rcx,[rip+0x7ba0]        # 40f152 <__sprintf_chk@plt+0xdd92>
  4075b2:	lea    rdx,[rip+0x7dbf]        # 40f378 <__sprintf_chk@plt+0xdfb8>
  4075b9:	mov    esi,0x1
  4075be:	xor    eax,eax
  4075c0:	call   401390 <__fprintf_chk@plt>
  4075c5:	mov    edi,0x1
  4075ca:	call   401370 <exit@plt>
  4075cf:	mov    rax,QWORD PTR [rip+0xba1a]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4075d6:	lea    rdi,[rip+0x7c83]        # 40f260 <__sprintf_chk@plt+0xdea0>
  4075dd:	mov    rcx,QWORD PTR [rax]
  4075e0:	mov    edx,0x1e
  4075e5:	mov    esi,0x1
  4075ea:	call   401380 <fwrite@plt>
  4075ef:	mov    edi,0x1
  4075f4:	call   401370 <exit@plt>
  4075f9:	nop    DWORD PTR [rax+0x0]
  407600:	endbr64 
  407604:	cmp    DWORD PTR [rdi+0x8],0x8
  407608:	je     407610 <__sprintf_chk@plt+0x6250>
  40760a:	ret    
  40760b:	nop    DWORD PTR [rax+rax*1+0x0]
  407610:	push   r14
  407612:	mov    eax,DWORD PTR [rip+0xbbec]        # 413204 <__sprintf_chk@plt+0x11e44>
  407618:	mov    edx,DWORD PTR [rip+0xbbea]        # 413208 <__sprintf_chk@plt+0x11e48>
  40761e:	push   r13
  407620:	inc    eax
  407622:	push   r12
  407624:	mov    r12,rdi
  407627:	push   rbp
  407628:	mov    rbp,rsi
  40762b:	push   rbx
  40762c:	cmp    eax,edx
  40762e:	jge    407673 <__sprintf_chk@plt+0x62b3>
  407630:	lea    rbx,[rip+0x7b61]        # 40f198 <__sprintf_chk@plt+0xddd8>
  407637:	nop    WORD PTR [rax+rax*1+0x0]
  407640:	mov    rcx,QWORD PTR [r12+0x10]
  407645:	mov    edx,0x3
  40764a:	mov    esi,0x1
  40764f:	mov    rdi,rbx
  407652:	call   401380 <fwrite@plt>
  407657:	mov    eax,DWORD PTR [rip+0xbba7]        # 413204 <__sprintf_chk@plt+0x11e44>
  40765d:	lea    edx,[rax+0x1]
  407660:	mov    DWORD PTR [rip+0xbb9e],edx        # 413204 <__sprintf_chk@plt+0x11e44>
  407666:	mov    edx,DWORD PTR [rip+0xbb9c]        # 413208 <__sprintf_chk@plt+0x11e48>
  40766c:	add    eax,0x2
  40766f:	cmp    eax,edx
  407671:	jl     407640 <__sprintf_chk@plt+0x6280>
  407673:	cmp    BYTE PTR [rbp+0x0],0x2e
  407677:	lea    rax,[rip+0xbba2]        # 413220 <__sprintf_chk@plt+0x11e60>
  40767e:	cmove  rbp,rax
  407682:	mov    esi,0x20
  407687:	mov    rdi,rbp
  40768a:	mov    DWORD PTR [rip+0xbb74],edx        # 413204 <__sprintf_chk@plt+0x11e44>
  407690:	call   401280 <strchr@plt>
  407695:	xor    r14d,r14d
  407698:	test   rax,rax
  40769b:	je     4076a4 <__sprintf_chk@plt+0x62e4>
  40769d:	mov    BYTE PTR [rax],0x0
  4076a0:	lea    r14,[rax+0x1]
  4076a4:	cmp    BYTE PTR [rip+0xbc35],0x0        # 4132e0 <__sprintf_chk@plt+0x11f20>
  4076ab:	mov    r13d,0x2
  4076b1:	lea    rbx,[rip+0xbc28]        # 4132e0 <__sprintf_chk@plt+0x11f20>
  4076b8:	jne    4076d5 <__sprintf_chk@plt+0x6315>
  4076ba:	jmp    407710 <__sprintf_chk@plt+0x6350>
  4076bc:	nop    DWORD PTR [rax+0x0]
  4076c0:	mov    rdi,rbx
  4076c3:	call   401260 <strlen@plt>
  4076c8:	lea    rbx,[rbx+rax*1+0x1]
  4076cd:	inc    r13d
  4076d0:	cmp    BYTE PTR [rbx],0x0
  4076d3:	je     407710 <__sprintf_chk@plt+0x6350>
  4076d5:	mov    rsi,rbp
  4076d8:	mov    rdi,rbx
  4076db:	call   4012e0 <strcmp@plt>
  4076e0:	test   eax,eax
  4076e2:	jne    4076c0 <__sprintf_chk@plt+0x6300>
  4076e4:	mov    rdi,QWORD PTR [r12+0x10]
  4076e9:	test   r14,r14
  4076ec:	je     407741 <__sprintf_chk@plt+0x6381>
  4076ee:	pop    rbx
  4076ef:	pop    rbp
  4076f0:	pop    r12
  4076f2:	mov    ecx,r13d
  4076f5:	pop    r13
  4076f7:	mov    r8,r14
  4076fa:	lea    rdx,[rip+0x7a9b]        # 40f19c <__sprintf_chk@plt+0xdddc>
  407701:	mov    esi,0x1
  407706:	xor    eax,eax
  407708:	pop    r14
  40770a:	jmp    401390 <__fprintf_chk@plt>
  40770f:	nop
  407710:	mov    rdi,rbp
  407713:	call   401260 <strlen@plt>
  407718:	lea    rdx,[rax+0x1]
  40771c:	lea    rcx,[rbx+rdx*1]
  407720:	lea    rax,[rip+0xdbb9]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  407727:	cmp    rcx,rax
  40772a:	jae    40775f <__sprintf_chk@plt+0x639f>
  40772c:	mov    rdi,rbx
  40772f:	mov    rsi,rbp
  407732:	call   401320 <memcpy@plt>
  407737:	mov    rdi,QWORD PTR [r12+0x10]
  40773c:	test   r14,r14
  40773f:	jne    4076ee <__sprintf_chk@plt+0x632e>
  407741:	pop    rbx
  407742:	pop    rbp
  407743:	pop    r12
  407745:	mov    ecx,r13d
  407748:	pop    r13
  40774a:	lea    rdx,[rip+0x7a5b]        # 40f1ac <__sprintf_chk@plt+0xddec>
  407751:	mov    esi,0x1
  407756:	xor    eax,eax
  407758:	pop    r14
  40775a:	jmp    401390 <__fprintf_chk@plt>
  40775f:	mov    rax,QWORD PTR [rip+0xb88a]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  407766:	lea    rdi,[rip+0x7af3]        # 40f260 <__sprintf_chk@plt+0xdea0>
  40776d:	mov    rcx,QWORD PTR [rax]
  407770:	mov    edx,0x1e
  407775:	mov    esi,0x1
  40777a:	call   401380 <fwrite@plt>
  40777f:	mov    edi,0x1
  407784:	call   401370 <exit@plt>
  407789:	nop    DWORD PTR [rax+0x0]
  407790:	endbr64 
  407794:	push   r15
  407796:	push   r14
  407798:	mov    r14,rdi
  40779b:	push   r13
  40779d:	push   r12
  40779f:	push   rbp
  4077a0:	push   rbx
  4077a1:	sub    rsp,0x128
  4077a8:	mov    rax,QWORD PTR fs:0x28
  4077b1:	mov    QWORD PTR [rsp+0x118],rax
  4077b9:	xor    eax,eax
  4077bb:	mov    eax,DWORD PTR [rdi+0x8]
  4077be:	lea    edx,[rax-0x6]
  4077c1:	cmp    edx,0x2
  4077c4:	jbe    407aee <__sprintf_chk@plt+0x672e>
  4077ca:	cmp    eax,0x9
  4077cd:	je     407b32 <__sprintf_chk@plt+0x6772>
  4077d3:	mov    rax,QWORD PTR [r14+0x20]
  4077d7:	mov    DWORD PTR [rip+0xba27],0x2        # 413208 <__sprintf_chk@plt+0x11e48>
  4077e1:	mov    rbx,QWORD PTR [rax]
  4077e4:	lea    rdx,[rax+0x8]
  4077e8:	mov    DWORD PTR [rip+0xba12],0x2        # 413204 <__sprintf_chk@plt+0x11e44>
  4077f2:	mov    DWORD PTR [rip+0xba04],0x0        # 413200 <__sprintf_chk@plt+0x11e40>
  4077fc:	mov    QWORD PTR [r14+0x20],rdx
  407800:	lea    r13,[rip+0x79b0]        # 40f1b7 <__sprintf_chk@plt+0xddf7>
  407807:	test   rbx,rbx
  40780a:	je     407a4d <__sprintf_chk@plt+0x668d>
  407810:	cmp    BYTE PTR [rbx],0x2d
  407813:	jne    407aa0 <__sprintf_chk@plt+0x66e0>
  407819:	cmp    BYTE PTR [rbx+0x1],0x0
  40781d:	jne    407aa0 <__sprintf_chk@plt+0x66e0>
  407823:	mov    rax,QWORD PTR [rip+0xb7ae]        # 412fd8 <__sprintf_chk@plt+0x11c18>
  40782a:	mov    rax,QWORD PTR [rax]
  40782d:	mov    QWORD PTR [rsp+0x8],rax
  407832:	lea    rax,[rsp+0x10]
  407837:	mov    DWORD PTR [rip+0xb9cf],0x0        # 413210 <__sprintf_chk@plt+0x11e50>
  407841:	mov    DWORD PTR [rip+0xb9c1],0x0        # 41320c <__sprintf_chk@plt+0x11e4c>
  40784b:	mov    QWORD PTR [rsp],rax
  40784f:	mov    rdx,QWORD PTR [rsp+0x8]
  407854:	mov    rdi,QWORD PTR [rsp]
  407858:	mov    esi,0x100
  40785d:	call   4012c0 <fgets@plt>
  407862:	test   rax,rax
  407865:	je     407a20 <__sprintf_chk@plt+0x6660>
  40786b:	cmp    BYTE PTR [rsp+0x10],0x23
  407870:	jne    40789f <__sprintf_chk@plt+0x64df>
  407872:	cmp    BYTE PTR [rsp+0x11],0x69
  407877:	jne    40789f <__sprintf_chk@plt+0x64df>
  407879:	cmp    BYTE PTR [rsp+0x12],0x66
  40787e:	jne    40789f <__sprintf_chk@plt+0x64df>
  407880:	mov    rsi,QWORD PTR [rsp]
  407884:	mov    ecx,0xb
  407889:	lea    rdi,[rip+0x794c]        # 40f1dc <__sprintf_chk@plt+0xde1c>
  407890:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407892:	seta   al
  407895:	sbb    al,0x0
  407897:	test   al,al
  407899:	je     4079ca <__sprintf_chk@plt+0x660a>
  40789f:	mov    r12,QWORD PTR [rsp]
  4078a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4078a8:	lea    rsi,[rip+0x78a3]        # 40f152 <__sprintf_chk@plt+0xdd92>
  4078af:	mov    rdi,r12
  4078b2:	call   4013b0 <strstr@plt>
  4078b7:	test   rax,rax
  4078ba:	je     40784f <__sprintf_chk@plt+0x648f>
  4078bc:	lea    r12,[rax+0x6]
  4078c0:	mov    ebp,0x7
  4078c5:	lea    rbx,[rip+0xb3f4]        # 412cc0 <__sprintf_chk@plt+0x11900>
  4078cc:	mov    r15,r13
  4078cf:	jmp    4078ef <__sprintf_chk@plt+0x652f>
  4078d1:	nop    DWORD PTR [rax+0x0]
  4078d8:	add    rbx,0x20
  4078dc:	mov    r15,QWORD PTR [rbx]
  4078df:	test   r15,r15
  4078e2:	je     407948 <__sprintf_chk@plt+0x6588>
  4078e4:	mov    rdi,r15
  4078e7:	call   401260 <strlen@plt>
  4078ec:	mov    rbp,rax
  4078ef:	mov    rdx,rbp
  4078f2:	mov    rsi,r15
  4078f5:	mov    rdi,r12
  4078f8:	call   401220 <strncmp@plt>
  4078fd:	test   eax,eax
  4078ff:	jne    4078d8 <__sprintf_chk@plt+0x6518>
  407901:	mov    rsi,QWORD PTR [rbx+0x8]
  407905:	add    r12,rbp
  407908:	test   rsi,rsi
  40790b:	je     4079c0 <__sprintf_chk@plt+0x6600>
  407911:	mov    rdi,r12
  407914:	call   4012b0 <strcspn@plt>
  407919:	mov    rbp,rax
  40791c:	lea    rdx,[r12+rax*1]
  407920:	cmp    BYTE PTR [rdx],0x0
  407923:	je     407939 <__sprintf_chk@plt+0x6579>
  407925:	mov    BYTE PTR [rdx],0x0
  407928:	mov    edx,DWORD PTR [rbx+0x18]
  40792b:	mov    rsi,r12
  40792e:	mov    rdi,r14
  407931:	call   QWORD PTR [rbx+0x10]
  407934:	lea    r12,[r12+rbp*1+0x1]
  407939:	cmp    QWORD PTR [rbx],0x0
  40793d:	jne    4078a8 <__sprintf_chk@plt+0x64e8>
  407943:	nop    DWORD PTR [rax+rax*1+0x0]
  407948:	mov    rdx,QWORD PTR [rsp]
  40794c:	mov    ecx,DWORD PTR [rdx]
  40794e:	add    rdx,0x4
  407952:	lea    eax,[rcx-0x1010101]
  407958:	andn   eax,ecx,eax
  40795d:	and    eax,0x80808080
  407962:	je     40794c <__sprintf_chk@plt+0x658c>
  407964:	mov    ecx,eax
  407966:	shr    ecx,0x10
  407969:	test   eax,0x8080
  40796e:	cmove  eax,ecx
  407971:	lea    rcx,[rdx+0x2]
  407975:	cmove  rdx,rcx
  407979:	mov    ecx,eax
  40797b:	add    cl,al
  40797d:	sbb    rdx,0x3
  407981:	sub    rdx,QWORD PTR [rsp]
  407985:	mov    BYTE PTR [rsp+rdx*1+0xf],0x0
  40798a:	mov    r8,r12
  40798d:	lea    rcx,[rip+0x77be]        # 40f152 <__sprintf_chk@plt+0xdd92>
  407994:	lea    rdx,[rip+0x7a65]        # 40f400 <__sprintf_chk@plt+0xe040>
  40799b:	mov    rax,QWORD PTR [rip+0xb64e]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4079a2:	mov    esi,0x1
  4079a7:	mov    rdi,QWORD PTR [rax]
  4079aa:	xor    eax,eax
  4079ac:	call   401390 <__fprintf_chk@plt>
  4079b1:	mov    edi,0x1
  4079b6:	call   401370 <exit@plt>
  4079bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4079c0:	mov    rdx,r12
  4079c3:	xor    ebp,ebp
  4079c5:	jmp    407920 <__sprintf_chk@plt+0x6560>
  4079ca:	mov    ebx,0x1
  4079cf:	mov    rdx,QWORD PTR [rsp+0x8]
  4079d4:	mov    rdi,QWORD PTR [rsp]
  4079d8:	mov    esi,0x100
  4079dd:	call   4012c0 <fgets@plt>
  4079e2:	test   rax,rax
  4079e5:	je     40784f <__sprintf_chk@plt+0x648f>
  4079eb:	cmp    BYTE PTR [rsp+0x10],0x23
  4079f0:	jne    4079cf <__sprintf_chk@plt+0x660f>
  4079f2:	movzx  eax,BYTE PTR [rsp+0x11]
  4079f7:	cmp    al,0x65
  4079f9:	je     407a0d <__sprintf_chk@plt+0x664d>
  4079fb:	cmp    al,0x69
  4079fd:	jne    4079cf <__sprintf_chk@plt+0x660f>
  4079ff:	xor    eax,eax
  407a01:	cmp    BYTE PTR [rsp+0x12],0x66
  407a06:	sete   al
  407a09:	add    ebx,eax
  407a0b:	jmp    4079cf <__sprintf_chk@plt+0x660f>
  407a0d:	cmp    BYTE PTR [rsp+0x12],0x6e
  407a12:	jne    4079cf <__sprintf_chk@plt+0x660f>
  407a14:	dec    ebx
  407a16:	jne    4079cf <__sprintf_chk@plt+0x660f>
  407a18:	jmp    40784f <__sprintf_chk@plt+0x648f>
  407a1d:	nop    DWORD PTR [rax]
  407a20:	mov    rdi,QWORD PTR [rsp+0x8]
  407a25:	call   401250 <fclose@plt>
  407a2a:	cmp    DWORD PTR [r14+0x8],0x7
  407a2f:	je     407ae0 <__sprintf_chk@plt+0x6720>
  407a35:	mov    rax,QWORD PTR [r14+0x20]
  407a39:	mov    rbx,QWORD PTR [rax]
  407a3c:	lea    rdx,[rax+0x8]
  407a40:	mov    QWORD PTR [r14+0x20],rdx
  407a44:	test   rbx,rbx
  407a47:	jne    407810 <__sprintf_chk@plt+0x6450>
  407a4d:	mov    eax,DWORD PTR [r14+0x8]
  407a51:	cmp    eax,0x6
  407a54:	je     407b4e <__sprintf_chk@plt+0x678e>
  407a5a:	cmp    eax,0x9
  407a5d:	je     407b8a <__sprintf_chk@plt+0x67ca>
  407a63:	cmp    eax,0x5
  407a66:	je     407c42 <__sprintf_chk@plt+0x6882>
  407a6c:	cmp    eax,0x8
  407a6f:	je     407bb0 <__sprintf_chk@plt+0x67f0>
  407a75:	mov    rax,QWORD PTR [rsp+0x118]
  407a7d:	xor    rax,QWORD PTR fs:0x28
  407a86:	jne    407ba9 <__sprintf_chk@plt+0x67e9>
  407a8c:	add    rsp,0x128
  407a93:	pop    rbx
  407a94:	pop    rbp
  407a95:	pop    r12
  407a97:	pop    r13
  407a99:	pop    r14
  407a9b:	pop    r15
  407a9d:	ret    
  407a9e:	xchg   ax,ax
  407aa0:	lea    rsi,[rip+0x2839]        # 40a2e0 <__sprintf_chk@plt+0x8f20>
  407aa7:	mov    rdi,rbx
  407aaa:	call   401360 <fopen@plt>
  407aaf:	mov    QWORD PTR [rsp+0x8],rax
  407ab4:	test   rax,rax
  407ab7:	jne    407832 <__sprintf_chk@plt+0x6472>
  407abd:	call   401210 <__errno_location@plt>
  407ac2:	mov    edi,DWORD PTR [rax]
  407ac4:	call   4013a0 <strerror@plt>
  407ac9:	mov    r8,rax
  407acc:	mov    rcx,rbx
  407acf:	lea    rdx,[rip+0x7902]        # 40f3d8 <__sprintf_chk@plt+0xe018>
  407ad6:	jmp    40799b <__sprintf_chk@plt+0x65db>
  407adb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ae0:	lea    rdi,[r14+0x10]
  407ae4:	call   407110 <__sprintf_chk@plt+0x5d50>
  407ae9:	jmp    407a35 <__sprintf_chk@plt+0x6675>
  407aee:	mov    rcx,QWORD PTR [rdi+0x10]
  407af2:	mov    edx,0x2e
  407af7:	mov    esi,0x1
  407afc:	lea    rdi,[rip+0x36dd]        # 40b1e0 <__sprintf_chk@plt+0x9e20>
  407b03:	call   401380 <fwrite@plt>
  407b08:	cmp    DWORD PTR [r14+0x8],0x8
  407b0d:	jne    4077d3 <__sprintf_chk@plt+0x6413>
  407b13:	mov    rcx,QWORD PTR [r14+0x10]
  407b17:	mov    edx,0x31
  407b1c:	mov    esi,0x1
  407b21:	lea    rdi,[rip+0x7878]        # 40f3a0 <__sprintf_chk@plt+0xdfe0>
  407b28:	call   401380 <fwrite@plt>
  407b2d:	jmp    4077d3 <__sprintf_chk@plt+0x6413>
  407b32:	mov    rcx,QWORD PTR [rdi+0x10]
  407b36:	mov    edx,0x1c
  407b3b:	mov    esi,0x1
  407b40:	lea    rdi,[rip+0x7678]        # 40f1bf <__sprintf_chk@plt+0xddff>
  407b47:	call   401380 <fwrite@plt>
  407b4c:	jmp    407b08 <__sprintf_chk@plt+0x6748>
  407b4e:	mov    rcx,QWORD PTR [r14+0x10]
  407b52:	mov    edx,0xf
  407b57:	mov    esi,0x1
  407b5c:	lea    rdi,[rip+0x7684]        # 40f1e7 <__sprintf_chk@plt+0xde27>
  407b63:	call   401380 <fwrite@plt>
  407b68:	mov    rdi,QWORD PTR [r14+0x10]
  407b6c:	mov    ecx,DWORD PTR [rip+0xb68e]        # 413200 <__sprintf_chk@plt+0x11e40>
  407b72:	lea    rdx,[rip+0x78b7]        # 40f430 <__sprintf_chk@plt+0xe070>
  407b79:	mov    esi,0x1
  407b7e:	xor    eax,eax
  407b80:	call   401390 <__fprintf_chk@plt>
  407b85:	jmp    407a75 <__sprintf_chk@plt+0x66b5>
  407b8a:	mov    rcx,QWORD PTR [r14+0x10]
  407b8e:	mov    edx,0x3
  407b93:	mov    esi,0x1
  407b98:	lea    rdi,[rip+0x1599]        # 409138 <__sprintf_chk@plt+0x7d78>
  407b9f:	call   401380 <fwrite@plt>
  407ba4:	jmp    407a75 <__sprintf_chk@plt+0x66b5>
  407ba9:	call   401270 <__stack_chk_fail@plt>
  407bae:	xchg   ax,ax
  407bb0:	mov    rcx,QWORD PTR [r14+0x10]
  407bb4:	mov    edx,0x5
  407bb9:	mov    esi,0x1
  407bbe:	lea    rdi,[rip+0x764a]        # 40f20f <__sprintf_chk@plt+0xde4f>
  407bc5:	call   401380 <fwrite@plt>
  407bca:	mov    rcx,QWORD PTR [r14+0x10]
  407bce:	mov    edx,0x3b
  407bd3:	mov    esi,0x1
  407bd8:	lea    rdi,[rip+0x78c1]        # 40f4a0 <__sprintf_chk@plt+0xe0e0>
  407bdf:	call   401380 <fwrite@plt>
  407be4:	cmp    BYTE PTR [rip+0xb6f5],0x0        # 4132e0 <__sprintf_chk@plt+0x11f20>
  407beb:	lea    rbx,[rip+0xb6ee]        # 4132e0 <__sprintf_chk@plt+0x11f20>
  407bf2:	lea    rbp,[rip+0x7628]        # 40f221 <__sprintf_chk@plt+0xde61>
  407bf9:	je     407c23 <__sprintf_chk@plt+0x6863>
  407bfb:	mov    rdi,QWORD PTR [r14+0x10]
  407bff:	mov    rcx,rbx
  407c02:	mov    rdx,rbp
  407c05:	mov    esi,0x1
  407c0a:	xor    eax,eax
  407c0c:	call   401390 <__fprintf_chk@plt>
  407c11:	mov    rdi,rbx
  407c14:	call   401260 <strlen@plt>
  407c19:	lea    rbx,[rbx+rax*1+0x1]
  407c1e:	cmp    BYTE PTR [rbx],0x0
  407c21:	jne    407bfb <__sprintf_chk@plt+0x683b>
  407c23:	mov    rcx,QWORD PTR [r14+0x10]
  407c27:	mov    edx,0x5
  407c2c:	mov    esi,0x1
  407c31:	lea    rdi,[rip+0x75d7]        # 40f20f <__sprintf_chk@plt+0xde4f>
  407c38:	call   401380 <fwrite@plt>
  407c3d:	jmp    407a75 <__sprintf_chk@plt+0x66b5>
  407c42:	mov    rcx,QWORD PTR [r14+0x10]
  407c46:	mov    edx,0x5
  407c4b:	mov    esi,0x1
  407c50:	lea    rdi,[rip+0x75b8]        # 40f20f <__sprintf_chk@plt+0xde4f>
  407c57:	call   401380 <fwrite@plt>
  407c5c:	mov    rcx,QWORD PTR [r14+0x10]
  407c60:	mov    edx,0x2b
  407c65:	mov    esi,0x1
  407c6a:	lea    rdi,[rip+0x77ff]        # 40f470 <__sprintf_chk@plt+0xe0b0>
  407c71:	call   401380 <fwrite@plt>
  407c76:	mov    rcx,QWORD PTR [r14+0x10]
  407c7a:	mov    edx,0xe
  407c7f:	mov    esi,0x1
  407c84:	lea    rdi,[rip+0x756c]        # 40f1f7 <__sprintf_chk@plt+0xde37>
  407c8b:	call   401380 <fwrite@plt>
  407c90:	mov    eax,DWORD PTR [rip+0xb56a]        # 413200 <__sprintf_chk@plt+0x11e40>
  407c96:	lea    rbp,[rip+0x7578]        # 40f215 <__sprintf_chk@plt+0xde55>
  407c9d:	lea    ebx,[rax-0x1]
  407ca0:	test   ebx,ebx
  407ca2:	jle    407cbe <__sprintf_chk@plt+0x68fe>
  407ca4:	mov    rcx,QWORD PTR [r14+0x10]
  407ca8:	mov    edx,0xb
  407cad:	mov    esi,0x1
  407cb2:	mov    rdi,rbp
  407cb5:	call   401380 <fwrite@plt>
  407cba:	dec    ebx
  407cbc:	jne    407ca4 <__sprintf_chk@plt+0x68e4>
  407cbe:	mov    rcx,QWORD PTR [r14+0x10]
  407cc2:	mov    edx,0xe
  407cc7:	mov    esi,0x1
  407ccc:	lea    rdi,[rip+0x7533]        # 40f206 <__sprintf_chk@plt+0xde46>
  407cd3:	call   401380 <fwrite@plt>
  407cd8:	jmp    407a75 <__sprintf_chk@plt+0x66b5>
  407cdd:	nop    DWORD PTR [rax]
  407ce0:	push   r15
  407ce2:	push   r14
  407ce4:	push   r13
  407ce6:	push   r12
  407ce8:	push   rbp
  407ce9:	push   rbx
  407cea:	sub    rsp,0x28
  407cee:	mov    rbp,QWORD PTR [rdi]
  407cf1:	test   rbp,rbp
  407cf4:	je     407e68 <__sprintf_chk@plt+0x6aa8>
  407cfa:	mov    r13d,esi
  407cfd:	mov    r12,rdi
  407d00:	mov    esi,0x20
  407d05:	mov    rdi,rbp
  407d08:	mov    ebx,edx
  407d0a:	call   401280 <strchr@plt>
  407d0f:	xor    edx,edx
  407d11:	test   rax,rax
  407d14:	je     407d1d <__sprintf_chk@plt+0x695d>
  407d16:	mov    BYTE PTR [rax],0x0
  407d19:	lea    rdx,[rax+0x1]
  407d1d:	mov    QWORD PTR [r12],rdx
  407d21:	test   r13d,r13d
  407d24:	jne    407d88 <__sprintf_chk@plt+0x69c8>
  407d26:	test   ebx,ebx
  407d28:	je     407d48 <__sprintf_chk@plt+0x6988>
  407d2a:	mov    ecx,0x4
  407d2f:	lea    rsi,[rip+0x77c3]        # 40f4f9 <__sprintf_chk@plt+0xe139>
  407d36:	mov    rdi,rbp
  407d39:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407d3b:	seta   al
  407d3e:	sbb    al,0x0
  407d40:	test   al,al
  407d42:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407d48:	mov    r12,0x411fe0
  407d4f:	mov    rdi,QWORD PTR [r12]
  407d53:	test   rdi,rdi
  407d56:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407d5c:	xor    ebx,ebx
  407d5e:	xchg   ax,ax
  407d60:	mov    rsi,rbp
  407d63:	call   4012e0 <strcmp@plt>
  407d68:	test   eax,eax
  407d6a:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407d70:	lea    eax,[rbx+0x1]
  407d73:	mov    rdi,QWORD PTR [r12+rax*8]
  407d77:	mov    rbx,rax
  407d7a:	test   rdi,rdi
  407d7d:	jne    407d60 <__sprintf_chk@plt+0x69a0>
  407d7f:	jmp    407fd6 <__sprintf_chk@plt+0x6c16>
  407d84:	nop    DWORD PTR [rax+0x0]
  407d88:	mov    ecx,0x6
  407d8d:	lea    rdi,[rip+0x7748]        # 40f4dc <__sprintf_chk@plt+0xe11c>
  407d94:	mov    rsi,rbp
  407d97:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407d99:	seta   al
  407d9c:	sbb    al,0x0
  407d9e:	test   al,al
  407da0:	jne    407de8 <__sprintf_chk@plt+0x6a28>
  407da2:	mov    r13,0x411e80
  407da9:	mov    rdi,QWORD PTR [r13+0x0]
  407dad:	test   rdi,rdi
  407db0:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407db6:	lea    r12,[rbp+0x6]
  407dba:	xor    ebx,ebx
  407dbc:	nop    DWORD PTR [rax+0x0]
  407dc0:	mov    rsi,r12
  407dc3:	call   4012e0 <strcmp@plt>
  407dc8:	test   eax,eax
  407dca:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407dd0:	lea    eax,[rbx+0x1]
  407dd3:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
  407dd8:	mov    rbx,rax
  407ddb:	test   rdi,rdi
  407dde:	jne    407dc0 <__sprintf_chk@plt+0x6a00>
  407de0:	jmp    407fd6 <__sprintf_chk@plt+0x6c16>
  407de5:	nop    DWORD PTR [rax]
  407de8:	mov    ecx,0x5
  407ded:	lea    rdi,[rip+0x76ef]        # 40f4e3 <__sprintf_chk@plt+0xe123>
  407df4:	mov    rsi,rbp
  407df7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407df9:	seta   al
  407dfc:	sbb    al,0x0
  407dfe:	test   al,al
  407e00:	je     407e80 <__sprintf_chk@plt+0x6ac0>
  407e02:	mov    ecx,0x7
  407e07:	lea    rdi,[rip+0x76db]        # 40f4e9 <__sprintf_chk@plt+0xe129>
  407e0e:	mov    rsi,rbp
  407e11:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407e13:	seta   al
  407e16:	sbb    al,0x0
  407e18:	test   al,al
  407e1a:	jne    407ec8 <__sprintf_chk@plt+0x6b08>
  407e20:	mov    r13,0x411b80
  407e27:	mov    rdi,QWORD PTR [r13+0x0]
  407e2b:	test   rdi,rdi
  407e2e:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407e34:	lea    r12,[rbp+0x7]
  407e38:	xor    ebx,ebx
  407e3a:	nop    WORD PTR [rax+rax*1+0x0]
  407e40:	mov    rsi,r12
  407e43:	call   4012e0 <strcmp@plt>
  407e48:	test   eax,eax
  407e4a:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407e4c:	lea    eax,[rbx+0x1]
  407e4f:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
  407e54:	mov    rbx,rax
  407e57:	test   rdi,rdi
  407e5a:	jne    407e40 <__sprintf_chk@plt+0x6a80>
  407e5c:	jmp    407fd6 <__sprintf_chk@plt+0x6c16>
  407e61:	nop    DWORD PTR [rax+0x0]
  407e68:	xor    ebx,ebx
  407e6a:	add    rsp,0x28
  407e6e:	mov    eax,ebx
  407e70:	pop    rbx
  407e71:	pop    rbp
  407e72:	pop    r12
  407e74:	pop    r13
  407e76:	pop    r14
  407e78:	pop    r15
  407e7a:	ret    
  407e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e80:	mov    r13,0x411de0
  407e87:	mov    rdi,QWORD PTR [r13+0x0]
  407e8b:	test   rdi,rdi
  407e8e:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407e94:	lea    r12,[rbp+0x5]
  407e98:	xor    ebx,ebx
  407e9a:	nop    WORD PTR [rax+rax*1+0x0]
  407ea0:	mov    rsi,r12
  407ea3:	call   4012e0 <strcmp@plt>
  407ea8:	test   eax,eax
  407eaa:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407eac:	lea    eax,[rbx+0x1]
  407eaf:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
  407eb4:	mov    rbx,rax
  407eb7:	test   rdi,rdi
  407eba:	jne    407ea0 <__sprintf_chk@plt+0x6ae0>
  407ebc:	jmp    407fd6 <__sprintf_chk@plt+0x6c16>
  407ec1:	nop    DWORD PTR [rax+0x0]
  407ec8:	mov    ecx,0x7
  407ecd:	lea    rdi,[rip+0x761d]        # 40f4f1 <__sprintf_chk@plt+0xe131>
  407ed4:	mov    rsi,rbp
  407ed7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ed9:	seta   al
  407edc:	sbb    al,0x0
  407ede:	test   al,al
  407ee0:	jne    407fa0 <__sprintf_chk@plt+0x6be0>
  407ee6:	mov    r12,0x411f00
  407eed:	mov    rbx,QWORD PTR [r12]
  407ef1:	mov    QWORD PTR [rsp+0x18],rbx
  407ef6:	test   rbx,rbx
  407ef9:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407eff:	lea    rax,[rbp+0x7]
  407f03:	mov    rdi,rax
  407f06:	mov    esi,0x5f
  407f0b:	mov    r15,rax
  407f0e:	mov    QWORD PTR [rsp+0x8],rax
  407f13:	call   401280 <strchr@plt>
  407f18:	mov    rcx,rax
  407f1b:	mov    r14,rax
  407f1e:	sub    rcx,r15
  407f21:	mov    rdi,rbx
  407f24:	mov    QWORD PTR [rsp+0x10],rcx
  407f29:	xor    ebx,ebx
  407f2b:	lea    r13,[r14+0x1]
  407f2f:	jmp    407f4b <__sprintf_chk@plt+0x6b8b>
  407f31:	nop    DWORD PTR [rax+0x0]
  407f38:	lea    eax,[rbx+0x1]
  407f3b:	mov    rdi,QWORD PTR [r12+rax*8]
  407f3f:	mov    rbx,rax
  407f42:	test   rdi,rdi
  407f45:	je     407fd6 <__sprintf_chk@plt+0x6c16>
  407f4b:	test   r14,r14
  407f4e:	je     407f38 <__sprintf_chk@plt+0x6b78>
  407f50:	mov    rdx,QWORD PTR [rsp+0x10]
  407f55:	mov    rsi,QWORD PTR [rsp+0x8]
  407f5a:	call   401220 <strncmp@plt>
  407f5f:	test   eax,eax
  407f61:	jne    407f38 <__sprintf_chk@plt+0x6b78>
  407f63:	mov    rdi,QWORD PTR [rsp+0x18]
  407f68:	xor    r15d,r15d
  407f6b:	jmp    407f80 <__sprintf_chk@plt+0x6bc0>
  407f6d:	nop    DWORD PTR [rax]
  407f70:	lea    eax,[r15+0x1]
  407f74:	mov    rdi,QWORD PTR [r12+rax*8]
  407f78:	mov    r15,rax
  407f7b:	test   rdi,rdi
  407f7e:	je     407f38 <__sprintf_chk@plt+0x6b78>
  407f80:	mov    rsi,r13
  407f83:	call   4012e0 <strcmp@plt>
  407f88:	test   eax,eax
  407f8a:	jne    407f70 <__sprintf_chk@plt+0x6bb0>
  407f8c:	shl    ebx,0x5
  407f8f:	add    ebx,r15d
  407f92:	jmp    407e6a <__sprintf_chk@plt+0x6aaa>
  407f97:	nop    WORD PTR [rax+rax*1+0x0]
  407fa0:	movsx  eax,BYTE PTR [rbp+0x0]
  407fa4:	lea    edx,[rax-0x30]
  407fa7:	cmp    dl,0x9
  407faa:	ja     407d26 <__sprintf_chk@plt+0x6966>
  407fb0:	xor    ebx,ebx
  407fb2:	nop    WORD PTR [rax+rax*1+0x0]
  407fb8:	lea    edx,[rbx+rbx*4]
  407fbb:	inc    rbp
  407fbe:	lea    ebx,[rax+rdx*2-0x30]
  407fc2:	movsx  eax,BYTE PTR [rbp+0x0]
  407fc6:	lea    edx,[rax-0x30]
  407fc9:	cmp    dl,0x9
  407fcc:	jbe    407fb8 <__sprintf_chk@plt+0x6bf8>
  407fce:	test   al,al
  407fd0:	je     407e6a <__sprintf_chk@plt+0x6aaa>
  407fd6:	mov    rax,QWORD PTR [rip+0xb013]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  407fdd:	mov    r8d,DWORD PTR [rip+0x11320]        # 419304 <__sprintf_chk@plt+0x17f44>
  407fe4:	mov    rdi,QWORD PTR [rax]
  407fe7:	mov    rcx,rbp
  407fea:	lea    rdx,[rip+0x752f]        # 40f520 <__sprintf_chk@plt+0xe160>
  407ff1:	mov    esi,0x1
  407ff6:	xor    eax,eax
  407ff8:	call   401390 <__fprintf_chk@plt>
  407ffd:	mov    edi,0x1
  408002:	call   401370 <exit@plt>
  408007:	nop    WORD PTR [rax+rax*1+0x0]
  408010:	push   r15
  408012:	push   r14
  408014:	push   r13
  408016:	push   r12
  408018:	mov    r12d,ecx
  40801b:	push   rbp
  40801c:	mov    ebp,edx
  40801e:	lea    edx,[rsi+0x1]
  408021:	push   rbx
  408022:	shl    rdx,0x2
  408026:	mov    ebx,esi
  408028:	sub    rsp,0x18
  40802c:	mov    esi,0xff
  408031:	call   401290 <memset@plt>
  408036:	mov    r8,rax
  408039:	mov    eax,DWORD PTR [rip+0xd2a1]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40803f:	test   eax,eax
  408041:	je     40812e <__sprintf_chk@plt+0x6d6e>
  408047:	lea    rsi,[rip+0xd2b2]        # 415300 <__sprintf_chk@plt+0x13f40>
  40804e:	lea    edx,[rax-0x1]
  408051:	lea    rax,[rsi+0x4]
  408055:	mov    r13d,ebp
  408058:	lea    r15,[rax+rdx*4]
  40805c:	lea    eax,[rbx-0x1]
  40805f:	shr    r13d,0x5
  408063:	and    ebp,0x1f
  408066:	mov    DWORD PTR [rsp+0xc],eax
  40806a:	jmp    4080f1 <__sprintf_chk@plt+0x6d31>
  40806f:	nop
  408070:	mov    eax,edx
  408072:	mov    ecx,r13d
  408075:	rol    eax,cl
  408077:	sub    eax,edx
  408079:	mov    ecx,ebp
  40807b:	rol    eax,cl
  40807d:	xor    edx,edx
  40807f:	div    ebx
  408081:	mov    eax,edx
  408083:	lea    rax,[r8+rax*4]
  408087:	cmp    DWORD PTR [rax],0xffffffff
  40808a:	je     408123 <__sprintf_chk@plt+0x6d63>
  408090:	lea    eax,[rdx+0x1]
  408093:	lea    r10,[r8+rax*4]
  408097:	mov    r9d,DWORD PTR [r10]
  40809a:	mov    r11,rax
  40809d:	cmp    r9d,0xffffffff
  4080a1:	je     4080e5 <__sprintf_chk@plt+0x6d25>
  4080a3:	cmp    edx,DWORD PTR [rsp+0xc]
  4080a7:	jae    40815d <__sprintf_chk@plt+0x6d9d>
  4080ad:	lea    eax,[rdx+0x2]
  4080b0:	lea    r14,[r8+rax*4]
  4080b4:	cmp    DWORD PTR [r14],0xffffffff
  4080b8:	jne    40815d <__sprintf_chk@plt+0x6d9d>
  4080be:	mov    edx,r9d
  4080c1:	and    edx,0xffffff
  4080c7:	test   r12d,r12d
  4080ca:	je     408148 <__sprintf_chk@plt+0x6d88>
  4080cc:	mov    eax,edx
  4080ce:	mov    ecx,r13d
  4080d1:	rol    eax,cl
  4080d3:	sub    eax,edx
  4080d5:	mov    ecx,ebp
  4080d7:	rol    eax,cl
  4080d9:	xor    edx,edx
  4080db:	div    ebx
  4080dd:	cmp    r11d,edx
  4080e0:	jne    40815d <__sprintf_chk@plt+0x6d9d>
  4080e2:	mov    DWORD PTR [r14],r9d
  4080e5:	add    rsi,0x4
  4080e9:	mov    DWORD PTR [r10],edi
  4080ec:	cmp    r15,rsi
  4080ef:	je     40812e <__sprintf_chk@plt+0x6d6e>
  4080f1:	mov    edi,DWORD PTR [rsi]
  4080f3:	mov    edx,edi
  4080f5:	and    edx,0xffffff
  4080fb:	test   r12d,r12d
  4080fe:	jne    408070 <__sprintf_chk@plt+0x6cb0>
  408104:	shlx   eax,edx,r13d
  408109:	sub    eax,edx
  40810b:	xor    edx,edx
  40810d:	shlx   eax,eax,ebp
  408112:	div    ebx
  408114:	mov    eax,edx
  408116:	lea    rax,[r8+rax*4]
  40811a:	cmp    DWORD PTR [rax],0xffffffff
  40811d:	jne    408090 <__sprintf_chk@plt+0x6cd0>
  408123:	add    rsi,0x4
  408127:	mov    DWORD PTR [rax],edi
  408129:	cmp    r15,rsi
  40812c:	jne    4080f1 <__sprintf_chk@plt+0x6d31>
  40812e:	add    rsp,0x18
  408132:	pop    rbx
  408133:	pop    rbp
  408134:	pop    r12
  408136:	pop    r13
  408138:	pop    r14
  40813a:	mov    eax,0x1
  40813f:	pop    r15
  408141:	ret    
  408142:	nop    WORD PTR [rax+rax*1+0x0]
  408148:	shlx   eax,edx,r13d
  40814d:	sub    eax,edx
  40814f:	xor    edx,edx
  408151:	shlx   eax,eax,ebp
  408156:	div    ebx
  408158:	cmp    r11d,edx
  40815b:	je     4080e2 <__sprintf_chk@plt+0x6d22>
  40815d:	add    rsp,0x18
  408161:	pop    rbx
  408162:	pop    rbp
  408163:	pop    r12
  408165:	pop    r13
  408167:	pop    r14
  408169:	xor    eax,eax
  40816b:	pop    r15
  40816d:	ret    
  40816e:	xchg   ax,ax
  408170:	push   r13
  408172:	xor    eax,eax
  408174:	mov    r13d,edx
  408177:	push   r12
  408179:	mov    r12,rsi
  40817c:	push   rbp
  40817d:	mov    rbp,rdi
  408180:	push   rbx
  408181:	lea    ebx,[rdx+0x1]
  408184:	mov    ecx,ebx
  408186:	sub    rsp,0x8
  40818a:	mov    r8d,DWORD PTR [rsi]
  40818d:	mov    rdi,QWORD PTR [rdi]
  408190:	lea    rdx,[rip+0x73c1]        # 40f558 <__sprintf_chk@plt+0xe198>
  408197:	mov    esi,0x1
  40819c:	call   401390 <__fprintf_chk@plt>
  4081a1:	cmp    ebx,0x1
  4081a4:	je     4081de <__sprintf_chk@plt+0x6e1e>
  4081a6:	lea    eax,[r13-0x1]
  4081aa:	lea    rbx,[r12+0x4]
  4081af:	lea    r13,[r12+rax*4+0x8]
  4081b4:	lea    r12,[rip+0x7342]        # 40f4fd <__sprintf_chk@plt+0xe13d>
  4081bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4081c0:	mov    ecx,DWORD PTR [rbx]
  4081c2:	mov    rdi,QWORD PTR [rbp+0x0]
  4081c6:	mov    rdx,r12
  4081c9:	mov    esi,0x1
  4081ce:	xor    eax,eax
  4081d0:	add    rbx,0x4
  4081d4:	call   401390 <__fprintf_chk@plt>
  4081d9:	cmp    rbx,r13
  4081dc:	jne    4081c0 <__sprintf_chk@plt+0x6e00>
  4081de:	mov    rcx,QWORD PTR [rbp+0x0]
  4081e2:	add    rsp,0x8
  4081e6:	pop    rbx
  4081e7:	pop    rbp
  4081e8:	pop    r12
  4081ea:	mov    edx,0x5
  4081ef:	mov    esi,0x1
  4081f4:	lea    rdi,[rip+0x7014]        # 40f20f <__sprintf_chk@plt+0xde4f>
  4081fb:	pop    r13
  4081fd:	jmp    401380 <fwrite@plt>
  408202:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40820d:	nop    DWORD PTR [rax]
  408210:	push   r15
  408212:	push   r14
  408214:	push   r13
  408216:	push   r12
  408218:	push   rbp
  408219:	push   rbx
  40821a:	lea    r11,[rsp-0x8000]
  408222:	sub    rsp,0x1000
  408229:	or     QWORD PTR [rsp],0x0
  40822e:	cmp    rsp,r11
  408231:	jne    408222 <__sprintf_chk@plt+0x6e62>
  408233:	sub    rsp,0x18
  408237:	mov    ebp,DWORD PTR [rip+0xd0a3]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40823d:	or     ebp,0x1
  408240:	mov    rax,QWORD PTR fs:0x28
  408249:	mov    QWORD PTR [rsp+0x8008],rax
  408251:	xor    eax,eax
  408253:	cmp    ebp,0x1fff
  408259:	ja     40836b <__sprintf_chk@plt+0x6fab>
  40825f:	mov    r13,rdi
  408262:	mov    r12,rsp
  408265:	xor    ebx,ebx
  408267:	jmp    40827a <__sprintf_chk@plt+0x6eba>
  408269:	nop    DWORD PTR [rax+0x0]
  408270:	inc    ebx
  408272:	cmp    ebx,0x400
  408278:	je     4082f0 <__sprintf_chk@plt+0x6f30>
  40827a:	xor    ecx,ecx
  40827c:	mov    edx,ebx
  40827e:	mov    esi,ebp
  408280:	mov    rdi,r12
  408283:	call   408010 <__sprintf_chk@plt+0x6c50>
  408288:	test   eax,eax
  40828a:	je     408270 <__sprintf_chk@plt+0x6eb0>
  40828c:	lea    rdi,[r13+0x10]
  408290:	mov    edx,ebp
  408292:	mov    rsi,r12
  408295:	call   408170 <__sprintf_chk@plt+0x6db0>
  40829a:	mov    ecx,ebx
  40829c:	mov    rdi,QWORD PTR [r13+0x10]
  4082a0:	and    ebx,0x1f
  4082a3:	shr    ecx,0x5
  4082a6:	mov    r9d,ebp
  4082a9:	mov    r8d,ebx
  4082ac:	lea    rdx,[rip+0x72d5]        # 40f588 <__sprintf_chk@plt+0xe1c8>
  4082b3:	mov    esi,0x1
  4082b8:	xor    eax,eax
  4082ba:	call   401390 <__fprintf_chk@plt>
  4082bf:	mov    rax,QWORD PTR [rsp+0x8008]
  4082c7:	xor    rax,QWORD PTR fs:0x28
  4082d0:	jne    408395 <__sprintf_chk@plt+0x6fd5>
  4082d6:	add    rsp,0x8018
  4082dd:	pop    rbx
  4082de:	pop    rbp
  4082df:	pop    r12
  4082e1:	pop    r13
  4082e3:	pop    r14
  4082e5:	pop    r15
  4082e7:	ret    
  4082e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4082f0:	xor    ebx,ebx
  4082f2:	nop    WORD PTR [rax+rax*1+0x0]
  4082f8:	inc    ebx
  4082fa:	cmp    ebx,0x400
  408300:	je     40835c <__sprintf_chk@plt+0x6f9c>
  408302:	mov    r14d,ebx
  408305:	and    r14d,0x1f
  408309:	je     4082f8 <__sprintf_chk@plt+0x6f38>
  40830b:	mov    r15d,ebx
  40830e:	shr    r15d,0x5
  408312:	je     4082f8 <__sprintf_chk@plt+0x6f38>
  408314:	mov    ecx,0x1
  408319:	mov    edx,ebx
  40831b:	mov    esi,ebp
  40831d:	mov    rdi,r12
  408320:	call   408010 <__sprintf_chk@plt+0x6c50>
  408325:	test   eax,eax
  408327:	je     4082f8 <__sprintf_chk@plt+0x6f38>
  408329:	lea    rdi,[r13+0x10]
  40832d:	mov    edx,ebp
  40832f:	mov    rsi,r12
  408332:	call   408170 <__sprintf_chk@plt+0x6db0>
  408337:	mov    rdi,QWORD PTR [r13+0x10]
  40833b:	mov    r9d,ebp
  40833e:	mov    r8d,r14d
  408341:	mov    ecx,r15d
  408344:	lea    rdx,[rip+0x7275]        # 40f5c0 <__sprintf_chk@plt+0xe200>
  40834b:	mov    esi,0x1
  408350:	xor    eax,eax
  408352:	call   401390 <__fprintf_chk@plt>
  408357:	jmp    4082bf <__sprintf_chk@plt+0x6eff>
  40835c:	add    ebp,0x2
  40835f:	cmp    ebp,0x1fff
  408365:	jbe    408265 <__sprintf_chk@plt+0x6ea5>
  40836b:	mov    rax,QWORD PTR [rip+0xac7e]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  408372:	lea    rdi,[rip+0x7287]        # 40f600 <__sprintf_chk@plt+0xe240>
  408379:	mov    rcx,QWORD PTR [rax]
  40837c:	mov    edx,0x26
  408381:	mov    esi,0x1
  408386:	call   401380 <fwrite@plt>
  40838b:	mov    edi,0x1
  408390:	call   401370 <exit@plt>
  408395:	call   401270 <__stack_chk_fail@plt>
  40839a:	nop    WORD PTR [rax+rax*1+0x0]
  4083a0:	endbr64 
  4083a4:	push   r15
  4083a6:	push   r14
  4083a8:	push   r13
  4083aa:	push   r12
  4083ac:	push   rbp
  4083ad:	push   rbx
  4083ae:	sub    rsp,0x138
  4083b5:	mov    rax,QWORD PTR fs:0x28
  4083be:	mov    QWORD PTR [rsp+0x128],rax
  4083c6:	xor    eax,eax
  4083c8:	mov    rax,QWORD PTR [rdi+0x20]
  4083cc:	mov    rbx,QWORD PTR [rax]
  4083cf:	test   rbx,rbx
  4083d2:	je     4087cc <__sprintf_chk@plt+0x740c>
  4083d8:	cmp    BYTE PTR [rbx],0x2d
  4083db:	mov    r13,rdi
  4083de:	jne    4083ea <__sprintf_chk@plt+0x702a>
  4083e0:	cmp    BYTE PTR [rbx+0x1],0x0
  4083e4:	je     4085d0 <__sprintf_chk@plt+0x7210>
  4083ea:	lea    rsi,[rip+0x1eef]        # 40a2e0 <__sprintf_chk@plt+0x8f20>
  4083f1:	mov    rdi,rbx
  4083f4:	call   401360 <fopen@plt>
  4083f9:	mov    rbp,rax
  4083fc:	test   rax,rax
  4083ff:	je     40878e <__sprintf_chk@plt+0x73ce>
  408405:	mov    rcx,QWORD PTR [r13+0x10]
  408409:	mov    edx,0x2e
  40840e:	mov    esi,0x1
  408413:	lea    rdi,[rip+0x2dc6]        # 40b1e0 <__sprintf_chk@plt+0x9e20>
  40841a:	call   401380 <fwrite@plt>
  40841f:	mov    rcx,QWORD PTR [r13+0x10]
  408423:	mov    edx,0x26
  408428:	mov    esi,0x1
  40842d:	lea    rdi,[rip+0x7214]        # 40f648 <__sprintf_chk@plt+0xe288>
  408434:	call   401380 <fwrite@plt>
  408439:	lea    rax,[rsp+0x18]
  40843e:	mov    DWORD PTR [rip+0x10ebc],0x0        # 419304 <__sprintf_chk@plt+0x17f44>
  408448:	mov    DWORD PTR [rip+0x10eae],0x0        # 419300 <__sprintf_chk@plt+0x17f40>
  408452:	mov    DWORD PTR [rip+0xce84],0x0        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40845c:	lea    rbx,[rsp+0x20]
  408461:	lea    r12,[rip+0x709e]        # 40f506 <__sprintf_chk@plt+0xe146>
  408468:	mov    QWORD PTR [rsp],rax
  40846c:	lea    r14,[rip+0xce8d]        # 415300 <__sprintf_chk@plt+0x13f40>
  408473:	jmp    40849f <__sprintf_chk@plt+0x70df>
  408475:	nop    DWORD PTR [rax]
  408478:	mov    ecx,0x6
  40847d:	mov    rsi,rbx
  408480:	mov    rdi,r12
  408483:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408485:	mov    eax,DWORD PTR [rip+0x10e79]        # 419304 <__sprintf_chk@plt+0x17f44>
  40848b:	lea    r15d,[rax+0x1]
  40848f:	mov    DWORD PTR [rip+0x10e6e],r15d        # 419304 <__sprintf_chk@plt+0x17f44>
  408496:	seta   al
  408499:	sbb    al,0x0
  40849b:	test   al,al
  40849d:	je     408510 <__sprintf_chk@plt+0x7150>
  40849f:	mov    rdx,rbp
  4084a2:	mov    esi,0x100
  4084a7:	mov    rdi,rbx
  4084aa:	call   4012c0 <fgets@plt>
  4084af:	test   rax,rax
  4084b2:	jne    408478 <__sprintf_chk@plt+0x70b8>
  4084b4:	mov    rdi,rbp
  4084b7:	call   401250 <fclose@plt>
  4084bc:	mov    rcx,QWORD PTR [r13+0x10]
  4084c0:	mov    edx,0x5
  4084c5:	mov    esi,0x1
  4084ca:	lea    rdi,[rip+0x6d3e]        # 40f20f <__sprintf_chk@plt+0xde4f>
  4084d1:	call   401380 <fwrite@plt>
  4084d6:	mov    rdi,r13
  4084d9:	call   408210 <__sprintf_chk@plt+0x6e50>
  4084de:	mov    rax,QWORD PTR [rsp+0x128]
  4084e6:	xor    rax,QWORD PTR fs:0x28
  4084ef:	jne    4087c7 <__sprintf_chk@plt+0x7407>
  4084f5:	add    rsp,0x138
  4084fc:	pop    rbx
  4084fd:	pop    rbp
  4084fe:	pop    r12
  408500:	pop    r13
  408502:	pop    r14
  408504:	pop    r15
  408506:	ret    
  408507:	nop    WORD PTR [rax+rax*1+0x0]
  408510:	lea    rdi,[rbx+0x6]
  408514:	mov    esi,0x29
  408519:	call   401280 <strchr@plt>
  40851e:	movzx  edx,BYTE PTR [rsp+0x26]
  408523:	cmp    dl,0x28
  408526:	je     4085e0 <__sprintf_chk@plt+0x7220>
  40852c:	cmp    dl,0x46
  40852f:	jne    408580 <__sprintf_chk@plt+0x71c0>
  408531:	cmp    BYTE PTR [rsp+0x27],0x28
  408536:	jne    408585 <__sprintf_chk@plt+0x71c5>
  408538:	test   rax,rax
  40853b:	je     408585 <__sprintf_chk@plt+0x71c5>
  40853d:	mov    BYTE PTR [rax],0x0
  408540:	mov    eax,DWORD PTR [rip+0x10dba]        # 419300 <__sprintf_chk@plt+0x17f40>
  408546:	mov    rdi,QWORD PTR [r13+0x10]
  40854a:	test   eax,eax
  40854c:	jne    408710 <__sprintf_chk@plt+0x7350>
  408552:	cmp    BYTE PTR [rsp+0x26],0x58
  408557:	lea    rcx,[rbx+0x8]
  40855b:	je     4086f8 <__sprintf_chk@plt+0x7338>
  408561:	lea    rdx,[rip+0x6faa]        # 40f512 <__sprintf_chk@plt+0xe152>
  408568:	mov    esi,0x1
  40856d:	xor    eax,eax
  40856f:	call   401390 <__fprintf_chk@plt>
  408574:	inc    DWORD PTR [rip+0x10d86]        # 419300 <__sprintf_chk@plt+0x17f40>
  40857a:	jmp    40849f <__sprintf_chk@plt+0x70df>
  40857f:	nop
  408580:	cmp    dl,0x58
  408583:	je     408531 <__sprintf_chk@plt+0x7171>
  408585:	xor    eax,eax
  408587:	mov    rdi,rbx
  40858a:	or     rcx,0xffffffffffffffff
  40858e:	repnz scas al,BYTE PTR es:[rdi]
  408590:	mov    r9d,r15d
  408593:	lea    r8,[rbx+0x6]
  408597:	lea    rdx,[rip+0x713a]        # 40f6d8 <__sprintf_chk@plt+0xe318>
  40859e:	mov    esi,0x1
  4085a3:	mov    rax,rcx
  4085a6:	not    rax
  4085a9:	mov    BYTE PTR [rsp+rax*1+0x1e],0x0
  4085ae:	mov    rax,QWORD PTR [rip+0xaa3b]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4085b5:	lea    rcx,[rip+0x6f4a]        # 40f506 <__sprintf_chk@plt+0xe146>
  4085bc:	mov    rdi,QWORD PTR [rax]
  4085bf:	xor    eax,eax
  4085c1:	call   401390 <__fprintf_chk@plt>
  4085c6:	mov    edi,0x1
  4085cb:	call   401370 <exit@plt>
  4085d0:	mov    rax,QWORD PTR [rip+0xaa01]        # 412fd8 <__sprintf_chk@plt+0x11c18>
  4085d7:	mov    rbp,QWORD PTR [rax]
  4085da:	jmp    408405 <__sprintf_chk@plt+0x7045>
  4085df:	nop
  4085e0:	test   rax,rax
  4085e3:	je     408585 <__sprintf_chk@plt+0x71c5>
  4085e5:	mov    r15,QWORD PTR [rsp]
  4085e9:	mov    BYTE PTR [rax],0x0
  4085ec:	mov    rdi,r15
  4085ef:	lea    rax,[rbx+0x7]
  4085f3:	xor    edx,edx
  4085f5:	xor    esi,esi
  4085f7:	mov    QWORD PTR [rsp+0x18],rax
  4085fc:	call   407ce0 <__sprintf_chk@plt+0x6920>
  408601:	mov    rdi,r15
  408604:	mov    edx,0x7f
  408609:	xor    esi,esi
  40860b:	mov    QWORD PTR [rsp],r15
  40860f:	mov    DWORD PTR [rsp+0xc],eax
  408613:	call   407ce0 <__sprintf_chk@plt+0x6920>
  408618:	mov    rdi,QWORD PTR [rsp]
  40861c:	mov    edx,0x3ff
  408621:	mov    esi,0x1
  408626:	mov    r15d,eax
  408629:	call   407ce0 <__sprintf_chk@plt+0x6920>
  40862e:	mov    edx,0x18
  408633:	shlx   r8d,DWORD PTR [rip+0x10cc4],edx        # 419300 <__sprintf_chk@plt+0x17f40>
  40863c:	or     r8d,eax
  40863f:	mov    eax,DWORD PTR [rsp+0xc]
  408643:	mov    r9d,DWORD PTR [rip+0xcc96]        # 4152e0 <__sprintf_chk@plt+0x13f20>
  40864a:	shl    eax,0x11
  40864d:	or     r8d,eax
  408650:	mov    eax,r15d
  408653:	shl    eax,0xa
  408656:	or     r8d,eax
  408659:	cmp    r9d,0xfff
  408660:	ja     408764 <__sprintf_chk@plt+0x73a4>
  408666:	test   r9d,r9d
  408669:	je     4086e0 <__sprintf_chk@plt+0x7320>
  40866b:	lea    eax,[r9-0x1]
  40866f:	mov    rdx,rax
  408672:	mov    eax,DWORD PTR [r14+rax*4]
  408676:	mov    r10d,r8d
  408679:	mov    ecx,eax
  40867b:	and    r10d,0xffffff
  408682:	and    ecx,0xffffff
  408688:	cmp    ecx,r10d
  40868b:	jb     408732 <__sprintf_chk@plt+0x7372>
  408691:	mov    ecx,r8d
  408694:	xor    ecx,eax
  408696:	and    ecx,0xffffff
  40869c:	je     408737 <__sprintf_chk@plt+0x7377>
  4086a2:	mov    ecx,r9d
  4086a5:	lea    rcx,[r14+rcx*4]
  4086a9:	jmp    4086da <__sprintf_chk@plt+0x731a>
  4086ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4086b0:	lea    eax,[rdx-0x1]
  4086b3:	mov    rsi,rax
  4086b6:	mov    eax,DWORD PTR [r14+rax*4]
  4086ba:	mov    edi,eax
  4086bc:	and    edi,0xffffff
  4086c2:	cmp    edi,r10d
  4086c5:	jb     4086e2 <__sprintf_chk@plt+0x7322>
  4086c7:	mov    edx,r8d
  4086ca:	xor    edx,eax
  4086cc:	sub    rcx,0x4
  4086d0:	and    edx,0xffffff
  4086d6:	je     408737 <__sprintf_chk@plt+0x7377>
  4086d8:	mov    edx,esi
  4086da:	mov    DWORD PTR [rcx],eax
  4086dc:	test   edx,edx
  4086de:	jne    4086b0 <__sprintf_chk@plt+0x72f0>
  4086e0:	xor    edx,edx
  4086e2:	inc    r9d
  4086e5:	mov    DWORD PTR [r14+rdx*4],r8d
  4086e9:	mov    DWORD PTR [rip+0xcbf0],r9d        # 4152e0 <__sprintf_chk@plt+0x13f20>
  4086f0:	jmp    40849f <__sprintf_chk@plt+0x70df>
  4086f5:	nop    DWORD PTR [rax]
  4086f8:	lea    rdx,[rip+0x6e0e]        # 40f50d <__sprintf_chk@plt+0xe14d>
  4086ff:	mov    esi,0x1
  408704:	xor    eax,eax
  408706:	call   401390 <__fprintf_chk@plt>
  40870b:	jmp    408574 <__sprintf_chk@plt+0x71b4>
  408710:	mov    rcx,rdi
  408713:	mov    edx,0x2
  408718:	lea    rdi,[rip+0x6aba]        # 40f1d9 <__sprintf_chk@plt+0xde19>
  40871f:	mov    esi,0x1
  408724:	call   401380 <fwrite@plt>
  408729:	mov    rdi,QWORD PTR [r13+0x10]
  40872d:	jmp    408552 <__sprintf_chk@plt+0x7192>
  408732:	mov    edx,r9d
  408735:	jmp    4086e2 <__sprintf_chk@plt+0x7322>
  408737:	mov    rax,QWORD PTR [rip+0xa8b2]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  40873e:	mov    ecx,DWORD PTR [rip+0x10bc0]        # 419304 <__sprintf_chk@plt+0x17f44>
  408744:	mov    rdi,QWORD PTR [rax]
  408747:	lea    rdx,[rip+0x6f22]        # 40f670 <__sprintf_chk@plt+0xe2b0>
  40874e:	mov    esi,0x1
  408753:	xor    eax,eax
  408755:	call   401390 <__fprintf_chk@plt>
  40875a:	mov    edi,0x1
  40875f:	call   401370 <exit@plt>
  408764:	mov    rax,QWORD PTR [rip+0xa885]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  40876b:	lea    rdi,[rip+0x6f2e]        # 40f6a0 <__sprintf_chk@plt+0xe2e0>
  408772:	mov    rcx,QWORD PTR [rax]
  408775:	mov    edx,0x35
  40877a:	mov    esi,0x1
  40877f:	call   401380 <fwrite@plt>
  408784:	mov    edi,0x1
  408789:	call   401370 <exit@plt>
  40878e:	call   401210 <__errno_location@plt>
  408793:	mov    edi,DWORD PTR [rax]
  408795:	call   4013a0 <strerror@plt>
  40879a:	mov    r8,rax
  40879d:	mov    rax,QWORD PTR [rip+0xa84c]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4087a4:	mov    rcx,rbx
  4087a7:	mov    rdi,QWORD PTR [rax]
  4087aa:	lea    rdx,[rip+0x6c27]        # 40f3d8 <__sprintf_chk@plt+0xe018>
  4087b1:	mov    esi,0x1
  4087b6:	xor    eax,eax
  4087b8:	call   401390 <__fprintf_chk@plt>
  4087bd:	mov    edi,0x1
  4087c2:	call   401370 <exit@plt>
  4087c7:	call   401270 <__stack_chk_fail@plt>
  4087cc:	mov    rax,QWORD PTR [rip+0xa81d]        # 412ff0 <__sprintf_chk@plt+0x11c30>
  4087d3:	lea    rdi,[rip+0x6e4e]        # 40f628 <__sprintf_chk@plt+0xe268>
  4087da:	mov    rcx,QWORD PTR [rax]
  4087dd:	mov    edx,0x1e
  4087e2:	mov    esi,0x1
  4087e7:	call   401380 <fwrite@plt>
  4087ec:	mov    edi,0x1
  4087f1:	call   401370 <exit@plt>
  4087f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408800:	endbr64 
  408804:	push   r15
  408806:	lea    r15,[rip+0x91e3]        # 4119f0 <__sprintf_chk@plt+0x10630>
  40880d:	push   r14
  40880f:	mov    r14,rdx
  408812:	push   r13
  408814:	mov    r13,rsi
  408817:	push   r12
  408819:	mov    r12d,edi
  40881c:	push   rbp
  40881d:	lea    rbp,[rip+0x91d4]        # 4119f8 <__sprintf_chk@plt+0x10638>
  408824:	push   rbx
  408825:	sub    rbp,r15
  408828:	sub    rsp,0x8
  40882c:	call   401000 <free@plt-0x200>
  408831:	sar    rbp,0x3
  408835:	je     408856 <__sprintf_chk@plt+0x7496>
  408837:	xor    ebx,ebx
  408839:	nop    DWORD PTR [rax+0x0]
  408840:	mov    rdx,r14
  408843:	mov    rsi,r13
  408846:	mov    edi,r12d
  408849:	call   QWORD PTR [r15+rbx*8]
  40884d:	add    rbx,0x1
  408851:	cmp    rbp,rbx
  408854:	jne    408840 <__sprintf_chk@plt+0x7480>
  408856:	add    rsp,0x8
  40885a:	pop    rbx
  40885b:	pop    rbp
  40885c:	pop    r12
  40885e:	pop    r13
  408860:	pop    r14
  408862:	pop    r15
  408864:	ret    
  408865:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408870:	endbr64 
  408874:	ret    

Disassembly of section .fini:

0000000000408878 <.fini>:
  408878:	endbr64 
  40887c:	sub    rsp,0x8
  408880:	add    rsp,0x8
  408884:	ret    
