
../repos/LuaJIT-2.0.5/src/host/buildvm:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x11fd9]        # 412fe8 <strstr@plt+0x11e18>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x11fe2]        # 413008 <strstr@plt+0x11e38>
  401026:	jmp    QWORD PTR [rip+0x11fe4]        # 413010 <strstr@plt+0x11e40>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x11fe2]        # 413018 <strstr@plt+0x11e48>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x11fda]        # 413020 <strstr@plt+0x11e50>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncmp@plt>:
  401050:	jmp    QWORD PTR [rip+0x11fd2]        # 413028 <strstr@plt+0x11e58>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <strcpy@plt>:
  401060:	jmp    QWORD PTR [rip+0x11fca]        # 413030 <strstr@plt+0x11e60>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <ferror@plt>:
  401070:	jmp    QWORD PTR [rip+0x11fc2]        # 413038 <strstr@plt+0x11e68>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <strtod@plt>:
  401080:	jmp    QWORD PTR [rip+0x11fba]        # 413040 <strstr@plt+0x11e70>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <fclose@plt>:
  401090:	jmp    QWORD PTR [rip+0x11fb2]        # 413048 <strstr@plt+0x11e78>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <strlen@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x11faa]        # 413050 <strstr@plt+0x11e80>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <strchr@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x11fa2]        # 413058 <strstr@plt+0x11e88>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <memset@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x11f9a]        # 413060 <strstr@plt+0x11e90>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fputc@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x11f92]        # 413068 <strstr@plt+0x11e98>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <strcspn@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x11f8a]        # 413070 <strstr@plt+0x11ea0>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x11f82]        # 413078 <strstr@plt+0x11ea8>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <strcmp@plt>:
  401100:	jmp    QWORD PTR [rip+0x11f7a]        # 413080 <strstr@plt+0x11eb0>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <putc@plt>:
  401110:	jmp    QWORD PTR [rip+0x11f72]        # 413088 <strstr@plt+0x11eb8>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <fprintf@plt>:
  401120:	jmp    QWORD PTR [rip+0x11f6a]        # 413090 <strstr@plt+0x11ec0>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <strtol@plt>:
  401130:	jmp    QWORD PTR [rip+0x11f62]        # 413098 <strstr@plt+0x11ec8>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <memcpy@plt>:
  401140:	jmp    QWORD PTR [rip+0x11f5a]        # 4130a0 <strstr@plt+0x11ed0>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <malloc@plt>:
  401150:	jmp    QWORD PTR [rip+0x11f52]        # 4130a8 <strstr@plt+0x11ed8>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <fflush@plt>:
  401160:	jmp    QWORD PTR [rip+0x11f4a]        # 4130b0 <strstr@plt+0x11ee0>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <realloc@plt>:
  401170:	jmp    QWORD PTR [rip+0x11f42]        # 4130b8 <strstr@plt+0x11ee8>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <fopen@plt>:
  401180:	jmp    QWORD PTR [rip+0x11f3a]        # 4130c0 <strstr@plt+0x11ef0>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <sprintf@plt>:
  401190:	jmp    QWORD PTR [rip+0x11f32]        # 4130c8 <strstr@plt+0x11ef8>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <exit@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x11f2a]        # 4130d0 <strstr@plt+0x11f00>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <fwrite@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x11f22]        # 4130d8 <strstr@plt+0x11f08>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <strerror@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x11f1a]        # 4130e0 <strstr@plt+0x11f10>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <strstr@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x11f12]        # 4130e8 <strstr@plt+0x11f18>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

00000000004011e0 <.text>:
  4011e0:	endbr64 
  4011e4:	xor    ebp,ebp
  4011e6:	mov    r9,rdx
  4011e9:	pop    rsi
  4011ea:	mov    rdx,rsp
  4011ed:	and    rsp,0xfffffffffffffff0
  4011f1:	push   rax
  4011f2:	push   rsp
  4011f3:	mov    r8,0x408d90
  4011fa:	mov    rcx,0x408d20
  401201:	mov    rdi,0x4029e0
  401208:	call   QWORD PTR [rip+0x11dd2]        # 412fe0 <strstr@plt+0x11e10>
  40120e:	hlt    
  40120f:	nop
  401210:	endbr64 
  401214:	ret    
  401215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40121f:	nop
  401220:	mov    eax,0x413100
  401225:	cmp    rax,0x413100
  40122b:	je     401240 <strstr@plt+0x70>
  40122d:	mov    eax,0x0
  401232:	test   rax,rax
  401235:	je     401240 <strstr@plt+0x70>
  401237:	mov    edi,0x413100
  40123c:	jmp    rax
  40123e:	xchg   ax,ax
  401240:	ret    
  401241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40124c:	nop    DWORD PTR [rax+0x0]
  401250:	mov    esi,0x413100
  401255:	sub    rsi,0x413100
  40125c:	mov    rax,rsi
  40125f:	shr    rsi,0x3f
  401263:	sar    rax,0x3
  401267:	add    rsi,rax
  40126a:	sar    rsi,1
  40126d:	je     401280 <strstr@plt+0xb0>
  40126f:	mov    eax,0x0
  401274:	test   rax,rax
  401277:	je     401280 <strstr@plt+0xb0>
  401279:	mov    edi,0x413100
  40127e:	jmp    rax
  401280:	ret    
  401281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40128c:	nop    DWORD PTR [rax+0x0]
  401290:	endbr64 
  401294:	cmp    BYTE PTR [rip+0x11e65],0x0        # 413100 <strstr@plt+0x11f30>
  40129b:	jne    4012b0 <strstr@plt+0xe0>
  40129d:	push   rbp
  40129e:	mov    rbp,rsp
  4012a1:	call   401220 <strstr@plt+0x50>
  4012a6:	mov    BYTE PTR [rip+0x11e53],0x1        # 413100 <strstr@plt+0x11f30>
  4012ad:	pop    rbp
  4012ae:	ret    
  4012af:	nop
  4012b0:	ret    
  4012b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012bc:	nop    DWORD PTR [rax+0x0]
  4012c0:	endbr64 
  4012c4:	jmp    401250 <strstr@plt+0x80>
  4012c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012d0:	push   r15
  4012d2:	push   r14
  4012d4:	push   rbx
  4012d5:	mov    r15d,esi
  4012d8:	mov    QWORD PTR [rdi],0x0
  4012df:	lea    eax,[r15-0x1]
  4012e3:	cdqe   
  4012e5:	lea    rax,[rax+rax*4]
  4012e9:	shl    rax,0x3
  4012ed:	add    rax,0x78
  4012f1:	je     401325 <strstr@plt+0x155>
  4012f3:	mov    r14,rdi
  4012f6:	mov    ecx,0x10
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401300:	mov    rbx,rcx
  401303:	add    rcx,rcx
  401306:	cmp    rbx,rax
  401309:	jb     401300 <strstr@plt+0x130>
  40130b:	mov    rdi,rbx
  40130e:	call   401150 <malloc@plt>
  401313:	mov    QWORD PTR [r14],rax
  401316:	test   rax,rax
  401319:	jne    401329 <strstr@plt+0x159>
  40131b:	mov    edi,0x1
  401320:	call   4011a0 <exit@plt>
  401325:	xor    eax,eax
  401327:	xor    ebx,ebx
  401329:	mov    QWORD PTR [rax],rbx
  40132c:	vxorps xmm0,xmm0,xmm0
  401330:	vmovups YMMWORD PTR [rax+0x10],ymm0
  401335:	mov    QWORD PTR [rax+0x30],0x0
  40133d:	mov    DWORD PTR [rax+0x48],r15d
  401341:	test   r15d,r15d
  401344:	jle    4013fd <strstr@plt+0x22d>
  40134a:	mov    r9d,r15d
  40134d:	mov    r8d,r9d
  401350:	and    r8d,0x1
  401354:	xor    edx,edx
  401356:	cmp    r15d,0x1
  40135a:	jne    401368 <strstr@plt+0x198>
  40135c:	xor    esi,esi
  40135e:	test   r8,r8
  401361:	jne    4013d5 <strstr@plt+0x205>
  401363:	jmp    4013fd <strstr@plt+0x22d>
  401368:	lea    rbx,[rax+0x94]
  40136f:	sub    r9,r8
  401372:	mov    ecx,0xff000000
  401377:	vxorps xmm0,xmm0,xmm0
  40137b:	xor    esi,esi
  40137d:	nop    DWORD PTR [rax]
  401380:	vmovups XMMWORD PTR [rbx-0x3c],xmm0
  401385:	movsxd rdx,edx
  401388:	mov    rdi,rdx
  40138b:	neg    rdi
  40138e:	shl    rdi,0x2
  401392:	mov    QWORD PTR [rbx-0x44],rdi
  401396:	mov    DWORD PTR [rbx-0x28],0x0
  40139d:	vmovups XMMWORD PTR [rbx-0x14],xmm0
  4013a2:	movsxd rcx,ecx
  4013a5:	lea    rdi,[rcx*4+0x0]
  4013ad:	mov    QWORD PTR [rbx-0x1c],rdi
  4013b1:	mov    DWORD PTR [rbx],0x0
  4013b7:	add    rsi,0x2
  4013bb:	add    rbx,0x50
  4013bf:	add    ecx,0xfe000000
  4013c5:	add    edx,0x2000000
  4013cb:	cmp    r9,rsi
  4013ce:	jne    401380 <strstr@plt+0x1b0>
  4013d0:	test   r8,r8
  4013d3:	je     4013fd <strstr@plt+0x22d>
  4013d5:	lea    rcx,[rsi+rsi*4]
  4013d9:	vxorps xmm0,xmm0,xmm0
  4013dd:	vmovups XMMWORD PTR [rax+rcx*8+0x58],xmm0
  4013e3:	shl    esi,0x18
  4013e6:	movsxd rdx,esi
  4013e9:	neg    rdx
  4013ec:	shl    rdx,0x2
  4013f0:	mov    QWORD PTR [rax+rcx*8+0x50],rdx
  4013f5:	mov    DWORD PTR [rax+rcx*8+0x6c],0x0
  4013fd:	pop    rbx
  4013fe:	pop    r14
  401400:	pop    r15
  401402:	vzeroupper 
  401405:	ret    
  401406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401410:	push   r15
  401412:	push   r14
  401414:	push   rbx
  401415:	mov    r14,QWORD PTR [rdi]
  401418:	mov    eax,DWORD PTR [r14+0x48]
  40141c:	test   eax,eax
  40141e:	jle    401452 <strstr@plt+0x282>
  401420:	lea    r15,[r14+0x58]
  401424:	xor    ebx,ebx
  401426:	jmp    40143f <strstr@plt+0x26f>
  401428:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	inc    rbx
  401433:	movsxd rcx,eax
  401436:	add    r15,0x28
  40143a:	cmp    rbx,rcx
  40143d:	jge    401452 <strstr@plt+0x282>
  40143f:	mov    rdi,QWORD PTR [r15]
  401442:	test   rdi,rdi
  401445:	je     401430 <strstr@plt+0x260>
  401447:	call   401030 <free@plt>
  40144c:	mov    eax,DWORD PTR [r14+0x48]
  401450:	jmp    401430 <strstr@plt+0x260>
  401452:	mov    rdi,QWORD PTR [r14+0x20]
  401456:	test   rdi,rdi
  401459:	je     401460 <strstr@plt+0x290>
  40145b:	call   401030 <free@plt>
  401460:	mov    rdi,QWORD PTR [r14+0x10]
  401464:	test   rdi,rdi
  401467:	je     40146e <strstr@plt+0x29e>
  401469:	call   401030 <free@plt>
  40146e:	mov    rdi,r14
  401471:	pop    rbx
  401472:	pop    r14
  401474:	pop    r15
  401476:	jmp    401030 <free@plt>
  40147b:	nop    DWORD PTR [rax+rax*1+0x0]
  401480:	push   r14
  401482:	push   rbx
  401483:	push   rax
  401484:	mov    r14,QWORD PTR [rdi]
  401487:	add    rsi,0xffffffffffffffb0
  40148b:	mov    QWORD PTR [r14+0x30],rsi
  40148f:	mov    rax,QWORD PTR [r14+0x18]
  401493:	add    edx,0xa
  401496:	shl    rdx,0x2
  40149a:	cmp    rax,rdx
  40149d:	jae    4014d4 <strstr@plt+0x304>
  40149f:	cmp    rax,0x10
  4014a3:	mov    ecx,0x10
  4014a8:	cmova  rcx,rax
  4014ac:	nop    DWORD PTR [rax+0x0]
  4014b0:	mov    rbx,rcx
  4014b3:	add    rcx,rcx
  4014b6:	cmp    rbx,rdx
  4014b9:	jb     4014b0 <strstr@plt+0x2e0>
  4014bb:	mov    rdi,QWORD PTR [r14+0x10]
  4014bf:	mov    rsi,rbx
  4014c2:	call   401170 <realloc@plt>
  4014c7:	mov    QWORD PTR [r14+0x10],rax
  4014cb:	test   rax,rax
  4014ce:	je     4014dc <strstr@plt+0x30c>
  4014d0:	mov    QWORD PTR [r14+0x18],rbx
  4014d4:	add    rsp,0x8
  4014d8:	pop    rbx
  4014d9:	pop    r14
  4014db:	ret    
  4014dc:	mov    edi,0x1
  4014e1:	call   4011a0 <exit@plt>
  4014e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014f0:	push   r15
  4014f2:	push   r14
  4014f4:	push   rbx
  4014f5:	mov    r15,QWORD PTR [rdi]
  4014f8:	mov    r14,QWORD PTR [r15+0x28]
  4014fc:	mov    eax,esi
  4014fe:	shl    rax,0x2
  401502:	cmp    r14,rax
  401505:	jae    401549 <strstr@plt+0x379>
  401507:	cmp    r14,0x10
  40150b:	mov    ecx,0x10
  401510:	cmova  rcx,r14
  401514:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40151e:	xchg   ax,ax
  401520:	mov    rbx,rcx
  401523:	add    rcx,rcx
  401526:	cmp    rbx,rax
  401529:	jb     401520 <strstr@plt+0x350>
  40152b:	mov    rdi,QWORD PTR [r15+0x20]
  40152f:	mov    rsi,rbx
  401532:	call   401170 <realloc@plt>
  401537:	mov    QWORD PTR [r15+0x20],rax
  40153b:	test   rax,rax
  40153e:	je     401565 <strstr@plt+0x395>
  401540:	mov    rdi,rax
  401543:	mov    QWORD PTR [r15+0x28],rbx
  401547:	jmp    401550 <strstr@plt+0x380>
  401549:	mov    rdi,QWORD PTR [r15+0x20]
  40154d:	mov    rbx,r14
  401550:	add    rdi,r14
  401553:	sub    rbx,r14
  401556:	xor    esi,esi
  401558:	mov    rdx,rbx
  40155b:	pop    rbx
  40155c:	pop    r14
  40155e:	pop    r15
  401560:	jmp    4010c0 <memset@plt>
  401565:	mov    edi,0x1
  40156a:	call   4011a0 <exit@plt>
  40156f:	nop
  401570:	push   r14
  401572:	push   rbx
  401573:	push   rax
  401574:	mov    r14,QWORD PTR [rdi]
  401577:	mov    QWORD PTR [r14+0x8],rsi
  40157b:	mov    DWORD PTR [r14+0x4c],0x0
  401583:	lea    rax,[r14+0x50]
  401587:	mov    QWORD PTR [r14+0x38],rax
  40158b:	mov    rdi,QWORD PTR [r14+0x10]
  40158f:	mov    rdx,QWORD PTR [r14+0x18]
  401593:	xor    esi,esi
  401595:	call   4010c0 <memset@plt>
  40159a:	mov    rdi,QWORD PTR [r14+0x20]
  40159e:	test   rdi,rdi
  4015a1:	je     4015ae <strstr@plt+0x3de>
  4015a3:	mov    rdx,QWORD PTR [r14+0x28]
  4015a7:	xor    esi,esi
  4015a9:	call   4010c0 <memset@plt>
  4015ae:	movsxd rdx,DWORD PTR [r14+0x48]
  4015b2:	test   rdx,rdx
  4015b5:	jle    401678 <strstr@plt+0x4a8>
  4015bb:	lea    rcx,[rdx-0x1]
  4015bf:	mov    eax,edx
  4015c1:	and    eax,0x3
  4015c4:	cmp    rcx,0x3
  4015c8:	jae    4015d6 <strstr@plt+0x406>
  4015ca:	xor    ecx,ecx
  4015cc:	test   rax,rax
  4015cf:	jne    401644 <strstr@plt+0x474>
  4015d1:	jmp    401678 <strstr@plt+0x4a8>
  4015d6:	lea    rsi,[r14+0xe8]
  4015dd:	sub    rdx,rax
  4015e0:	mov    edi,0x3000000
  4015e5:	xor    ecx,ecx
  4015e7:	nop    WORD PTR [rax+rax*1+0x0]
  4015f0:	lea    ebx,[rdi-0x3000000]
  4015f6:	mov    DWORD PTR [rsi-0x80],ebx
  4015f9:	mov    DWORD PTR [rsi-0x78],0x0
  401600:	lea    ebx,[rdi-0x2000000]
  401606:	mov    DWORD PTR [rsi-0x58],ebx
  401609:	mov    DWORD PTR [rsi-0x50],0x0
  401610:	lea    ebx,[rdi-0x1000000]
  401616:	mov    DWORD PTR [rsi-0x30],ebx
  401619:	mov    DWORD PTR [rsi-0x28],0x0
  401620:	mov    DWORD PTR [rsi-0x8],edi
  401623:	mov    DWORD PTR [rsi],0x0
  401629:	add    rcx,0x4
  40162d:	add    edi,0x4000000
  401633:	add    rsi,0xa0
  40163a:	cmp    rdx,rcx
  40163d:	jne    4015f0 <strstr@plt+0x420>
  40163f:	test   rax,rax
  401642:	je     401678 <strstr@plt+0x4a8>
  401644:	lea    rdx,[rcx+rcx*4]
  401648:	lea    rdx,[r14+rdx*8]
  40164c:	add    rdx,0x70
  401650:	shl    ecx,0x18
  401653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40165d:	nop    DWORD PTR [rax]
  401660:	mov    DWORD PTR [rdx-0x8],ecx
  401663:	mov    DWORD PTR [rdx],0x0
  401669:	add    rdx,0x28
  40166d:	add    ecx,0x1000000
  401673:	dec    rax
  401676:	jne    401660 <strstr@plt+0x490>
  401678:	add    rsp,0x8
  40167c:	pop    rbx
  40167d:	pop    r14
  40167f:	ret    
  401680:	push   rbp
  401681:	push   r15
  401683:	push   r14
  401685:	push   r13
  401687:	push   r12
  401689:	push   rbx
  40168a:	sub    rsp,0xd8
  401691:	mov    ebp,esi
  401693:	test   al,al
  401695:	je     4016d6 <strstr@plt+0x506>
  401697:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40169d:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4016a3:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4016a9:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4016b2:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4016bb:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4016c4:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4016cd:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4016d6:	mov    QWORD PTR [rsp+0x30],rdx
  4016db:	mov    QWORD PTR [rsp+0x38],rcx
  4016e0:	mov    QWORD PTR [rsp+0x40],r8
  4016e5:	mov    QWORD PTR [rsp+0x48],r9
  4016ea:	mov    r12,QWORD PTR [rdi]
  4016ed:	movsxd r14,ebp
  4016f0:	add    r14,QWORD PTR [r12+0x8]
  4016f5:	mov    r11,QWORD PTR [r12+0x38]
  4016fa:	mov    r15d,DWORD PTR [r11+0x18]
  4016fe:	mov    r13d,DWORD PTR [r11+0x20]
  401702:	cmp    r15d,DWORD PTR [r11+0x1c]
  401706:	jge    40170d <strstr@plt+0x53d>
  401708:	mov    rax,QWORD PTR [r11]
  40170b:	jmp    40178c <strstr@plt+0x5bc>
  40170d:	mov    rbx,QWORD PTR [r11+0x10]
  401711:	mov    rax,rbx
  401714:	sub    rax,0xffffffffffffff38
  40171a:	jae    401764 <strstr@plt+0x594>
  40171c:	cmp    rbx,0x10
  401720:	mov    ecx,0x10
  401725:	cmova  rcx,rbx
  401729:	nop    DWORD PTR [rax+0x0]
  401730:	mov    rbx,rcx
  401733:	add    rcx,rcx
  401736:	cmp    rbx,rax
  401739:	jb     401730 <strstr@plt+0x560>
  40173b:	mov    rdi,QWORD PTR [r11+0x8]
  40173f:	mov    rsi,rbx
  401742:	mov    QWORD PTR [rsp+0x18],r11
  401747:	call   401170 <realloc@plt>
  40174c:	mov    r11,QWORD PTR [rsp+0x18]
  401751:	mov    QWORD PTR [r11+0x8],rax
  401755:	test   rax,rax
  401758:	je     401be2 <strstr@plt+0xa12>
  40175e:	mov    QWORD PTR [r11+0x10],rbx
  401762:	jmp    401768 <strstr@plt+0x598>
  401764:	mov    rax,QWORD PTR [r11+0x8]
  401768:	mov    ecx,r15d
  40176b:	and    ecx,0xff000000
  401771:	movsxd rdx,ebx
  401774:	shr    rdx,0x2
  401778:	lea    edx,[rcx+rdx*1]
  40177b:	add    edx,0xffffffe7
  40177e:	shl    rcx,0x2
  401782:	sub    rax,rcx
  401785:	mov    QWORD PTR [r11],rax
  401788:	mov    DWORD PTR [r11+0x1c],edx
  40178c:	movsxd rcx,r15d
  40178f:	inc    r15d
  401792:	mov    DWORD PTR [rax+rcx*4],ebp
  401795:	lea    rcx,[rsp+0x20]
  40179a:	mov    QWORD PTR [rsp+0x10],rcx
  40179f:	lea    rcx,[rsp+0x110]
  4017a7:	mov    QWORD PTR [rsp+0x8],rcx
  4017ac:	movabs rcx,0x3000000010
  4017b6:	mov    QWORD PTR [rsp],rcx
  4017ba:	mov    esi,0x4
  4017bf:	lea    r8,[rip+0x787a]        # 409040 <strstr@plt+0x7e70>
  4017c6:	lea    r9,[rip+0x7843]        # 409010 <strstr@plt+0x7e40>
  4017cd:	jmp    4017d9 <strstr@plt+0x609>
  4017cf:	nop
  4017d0:	inc    r13d
  4017d3:	mov    esi,r10d
  4017d6:	mov    r15d,edi
  4017d9:	mov    rbp,r14
  4017dc:	mov    edi,r15d
  4017df:	mov    r10d,esi
  4017e2:	inc    r14
  4017e5:	mov    bl,BYTE PTR [rbp+0x0]
  4017e8:	cmp    bl,0xe8
  4017eb:	jbe    4017d0 <strstr@plt+0x600>
  4017ed:	cmp    bl,0xf3
  4017f0:	ja     401810 <strstr@plt+0x640>
  4017f2:	movsxd rdx,DWORD PTR [rsp]
  4017f6:	cmp    rdx,0x28
  4017fa:	ja     401871 <strstr@plt+0x6a1>
  4017fc:	mov    rcx,rdx
  4017ff:	add    rcx,QWORD PTR [rsp+0x10]
  401804:	add    edx,0x8
  401807:	mov    DWORD PTR [rsp],edx
  40180a:	jmp    40187f <strstr@plt+0x6af>
  40180c:	nop    DWORD PTR [rax+0x0]
  401810:	lea    ecx,[rbx+0xc]
  401813:	mov    esi,r10d
  401816:	mov    r15d,edi
  401819:	cmp    cl,0xb
  40181c:	ja     4017d9 <strstr@plt+0x609>
  40181e:	movzx  ecx,cl
  401821:	movsxd rcx,DWORD PTR [r9+rcx*4]
  401825:	add    rcx,r9
  401828:	jmp    rcx
  40182a:	movzx  esi,BYTE PTR [rbp+0x1]
  40182e:	add    rbp,0x2
  401832:	lea    rcx,[rsi*4+0x0]
  40183a:	mov    rdx,QWORD PTR [r12+0x10]
  40183f:	add    rdx,rcx
  401842:	cmp    rsi,0xf6
  401849:	ja     4018f6 <strstr@plt+0x726>
  40184f:	cmp    sil,0x9
  401853:	ja     40185e <strstr@plt+0x68e>
  401855:	cmp    DWORD PTR [rdx],0x0
  401858:	jns    401b9e <strstr@plt+0x9ce>
  40185e:	cmp    rcx,QWORD PTR [r12+0x18]
  401863:	jae    401b9e <strstr@plt+0x9ce>
  401869:	mov    r14,rbp
  40186c:	jmp    40193a <strstr@plt+0x76a>
  401871:	mov    rcx,QWORD PTR [rsp+0x8]
  401876:	lea    rdx,[rcx+0x8]
  40187a:	mov    QWORD PTR [rsp+0x8],rdx
  40187f:	mov    edx,DWORD PTR [rcx]
  401881:	movsxd rcx,edi
  401884:	mov    r15d,edi
  401887:	inc    r15d
  40188a:	mov    DWORD PTR [rax+rcx*4],edx
  40188d:	add    bl,0x17
  401890:	mov    esi,0x4
  401895:	cmp    bl,0xa
  401898:	ja     4017d9 <strstr@plt+0x609>
  40189e:	movzx  esi,bl
  4018a1:	movsxd rsi,DWORD PTR [r8+rsi*4]
  4018a5:	add    rsi,r8
  4018a8:	jmp    rsi
  4018aa:	test   edx,edx
  4018ac:	je     401b0f <strstr@plt+0x93f>
  4018b2:	movsx  ecx,dl
  4018b5:	cmp    ecx,edx
  4018b7:	je     401a46 <strstr@plt+0x876>
  4018bd:	add    r13d,0x4
  4018c1:	mov    esi,0x4
  4018c6:	jmp    4017d9 <strstr@plt+0x609>
  4018cb:	mov    rdx,QWORD PTR [r12+0x20]
  4018d0:	movsxd rsi,DWORD PTR [rsp]
  4018d4:	cmp    rsi,0x28
  4018d8:	ja     401912 <strstr@plt+0x742>
  4018da:	mov    rcx,rsi
  4018dd:	add    rcx,QWORD PTR [rsp+0x10]
  4018e2:	add    esi,0x8
  4018e5:	mov    DWORD PTR [rsp],esi
  4018e8:	jmp    401920 <strstr@plt+0x750>
  4018ea:	movzx  esi,BYTE PTR [rbp-0x1]
  4018ee:	mov    r15d,edi
  4018f1:	jmp    4017d9 <strstr@plt+0x609>
  4018f6:	mov    ecx,DWORD PTR [rdx-0x3d8]
  4018fc:	add    rdx,0xfffffffffffffc28
  401903:	mov    esi,ecx
  401905:	sar    esi,0x1f
  401908:	andn   esi,esi,ecx
  40190d:	mov    r14,rbp
  401910:	jmp    401940 <strstr@plt+0x770>
  401912:	mov    rcx,QWORD PTR [rsp+0x8]
  401917:	lea    rsi,[rcx+0x8]
  40191b:	mov    QWORD PTR [rsp+0x8],rsi
  401920:	movsxd rcx,DWORD PTR [rcx]
  401923:	lea    rsi,[rcx*4+0x0]
  40192b:	cmp    rsi,QWORD PTR [r12+0x28]
  401930:	jae    401b72 <strstr@plt+0x9a2>
  401936:	lea    rdx,[rdx+rcx*4]
  40193a:	mov    esi,DWORD PTR [rdx]
  40193c:	test   esi,esi
  40193e:	js     40194a <strstr@plt+0x77a>
  401940:	movsxd rcx,edi
  401943:	mov    DWORD PTR [rax+rcx*4],esi
  401946:	mov    DWORD PTR [rdx],edi
  401948:	jmp    401952 <strstr@plt+0x782>
  40194a:	neg    esi
  40194c:	movsxd rcx,edi
  40194f:	mov    DWORD PTR [rax+rcx*4],esi
  401952:	lea    r15d,[rdi+0x1]
  401956:	add    r13d,0x4
  40195a:	or     bl,0x1
  40195d:	mov    esi,r10d
  401960:	cmp    bl,0xf5
  401963:	jne    4017d9 <strstr@plt+0x609>
  401969:	add    edi,0x2
  40196c:	movsxd rcx,r15d
  40196f:	mov    DWORD PTR [rax+rcx*4],r13d
  401973:	jmp    4017d3 <strstr@plt+0x603>
  401978:	add    rbp,0x3
  40197c:	add    r13d,0x4
  401980:	jmp    4019c5 <strstr@plt+0x7f5>
  401982:	mov    rdx,QWORD PTR [r12+0x20]
  401987:	movsxd rsi,DWORD PTR [rsp]
  40198b:	cmp    rsi,0x28
  40198f:	ja     401aa7 <strstr@plt+0x8d7>
  401995:	mov    rcx,rsi
  401998:	add    rcx,QWORD PTR [rsp+0x10]
  40199d:	add    esi,0x8
  4019a0:	mov    DWORD PTR [rsp],esi
  4019a3:	jmp    401ab5 <strstr@plt+0x8e5>
  4019a8:	movzx  ecx,BYTE PTR [rbp+0x1]
  4019ac:	add    rbp,0x2
  4019b0:	add    r13d,ecx
  4019b3:	movsxd rcx,edi
  4019b6:	inc    edi
  4019b8:	mov    DWORD PTR [rax+rcx*4],r13d
  4019bc:	jmp    4019c5 <strstr@plt+0x7f5>
  4019be:	add    rbp,0x2
  4019c2:	inc    r13d
  4019c5:	mov    esi,r10d
  4019c8:	mov    r15d,edi
  4019cb:	mov    r14,rbp
  4019ce:	jmp    4017d9 <strstr@plt+0x609>
  4019d3:	movzx  edx,BYTE PTR [rbp+0x1]
  4019d7:	add    rbp,0x2
  4019db:	shl    rdx,0x2
  4019df:	cmp    rdx,QWORD PTR [r12+0x18]
  4019e4:	jae    401b9e <strstr@plt+0x9ce>
  4019ea:	add    rdx,QWORD PTR [r12+0x10]
  4019ef:	mov    r14,rbp
  4019f2:	mov    ecx,DWORD PTR [rdx]
  4019f4:	jmp    401af7 <strstr@plt+0x927>
  4019f9:	movsx  ecx,dl
  4019fc:	cmp    ecx,edx
  4019fe:	je     401a46 <strstr@plt+0x876>
  401a00:	jmp    401b5c <strstr@plt+0x98c>
  401a05:	add    rbp,0x2
  401a09:	add    r13d,edx
  401a0c:	mov    esi,0x4
  401a11:	mov    r14,rbp
  401a14:	jmp    4017d9 <strstr@plt+0x609>
  401a19:	movsx  ecx,dl
  401a1c:	cmp    ecx,edx
  401a1e:	je     401a46 <strstr@plt+0x876>
  401a20:	cmp    edx,0x10000
  401a26:	jae    401b5c <strstr@plt+0x98c>
  401a2c:	add    r13d,0x2
  401a30:	mov    esi,0x4
  401a35:	jmp    4017d9 <strstr@plt+0x609>
  401a3a:	cmp    edx,0x100
  401a40:	jae    401b5c <strstr@plt+0x98c>
  401a46:	inc    r13d
  401a49:	mov    esi,0x4
  401a4e:	jmp    4017d9 <strstr@plt+0x609>
  401a53:	mov    DWORD PTR [rax+rcx*4-0x4],0xc0000000
  401a5b:	mov    esi,0x4
  401a60:	jmp    4017d9 <strstr@plt+0x609>
  401a65:	cmp    edx,0x7
  401a68:	ja     401bb7 <strstr@plt+0x9e7>
  401a6e:	mov    bl,BYTE PTR [r14]
  401a71:	cmp    edx,0x4
  401a74:	jne    401a81 <strstr@plt+0x8b1>
  401a76:	mov    ecx,ebx
  401a78:	and    cl,0x1
  401a7b:	jne    401bb7 <strstr@plt+0x9e7>
  401a81:	add    rbp,0x2
  401a85:	mov    esi,r10d
  401a88:	mov    r14,rbp
  401a8b:	cmp    bl,0x1
  401a8e:	jne    4017d9 <strstr@plt+0x609>
  401a94:	cmp    BYTE PTR [rbp+0x0],0xe9
  401a98:	cmove  r10d,edx
  401a9c:	mov    esi,r10d
  401a9f:	mov    r14,rbp
  401aa2:	jmp    4017d9 <strstr@plt+0x609>
  401aa7:	mov    rcx,QWORD PTR [rsp+0x8]
  401aac:	lea    rsi,[rcx+0x8]
  401ab0:	mov    QWORD PTR [rsp+0x8],rsi
  401ab5:	movsxd rcx,DWORD PTR [rcx]
  401ab8:	lea    rsi,[rcx*4+0x0]
  401ac0:	cmp    rsi,QWORD PTR [r12+0x28]
  401ac5:	jae    401b72 <strstr@plt+0x9a2>
  401acb:	lea    rdx,[rdx+rcx*4]
  401acf:	mov    ecx,DWORD PTR [rdx]
  401ad1:	jmp    401af7 <strstr@plt+0x927>
  401ad3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401add:	nop    DWORD PTR [rax]
  401ae0:	movsxd rsi,ecx
  401ae3:	shr    ecx,0x18
  401ae6:	lea    rcx,[rcx+rcx*4]
  401aea:	mov    rbp,QWORD PTR [r12+rcx*8+0x50]
  401aef:	mov    ecx,DWORD PTR [rbp+rsi*4+0x0]
  401af3:	mov    DWORD PTR [rbp+rsi*4+0x0],edi
  401af7:	test   ecx,ecx
  401af9:	jg     401ae0 <strstr@plt+0x910>
  401afb:	mov    ecx,edi
  401afd:	neg    ecx
  401aff:	mov    DWORD PTR [rdx],ecx
  401b01:	movsxd rcx,edi
  401b04:	inc    edi
  401b06:	mov    DWORD PTR [rax+rcx*4],r13d
  401b0a:	jmp    4017d3 <strstr@plt+0x603>
  401b0f:	and    r10d,0x7
  401b13:	cmp    r10d,0x4
  401b17:	jne    401b22 <strstr@plt+0x952>
  401b19:	movzx  r10d,BYTE PTR [rbp-0x1]
  401b1e:	and    r10d,0x7
  401b22:	mov    esi,0x4
  401b27:	cmp    r10d,0x5
  401b2b:	jne    4017d9 <strstr@plt+0x609>
  401b31:	jmp    401a46 <strstr@plt+0x876>
  401b36:	movzx  eax,BYTE PTR [r14]
  401b3a:	cmp    DWORD PTR [r12+0x48],eax
  401b3f:	jle    401b88 <strstr@plt+0x9b8>
  401b41:	lea    rax,[rax+rax*4]
  401b45:	lea    rax,[r12+rax*8]
  401b49:	add    rax,0x50
  401b4d:	mov    QWORD PTR [r12+0x38],rax
  401b52:	mov    DWORD PTR [r11+0x18],edi
  401b56:	mov    DWORD PTR [r11+0x20],r13d
  401b5a:	jmp    401bd0 <strstr@plt+0xa00>
  401b5c:	mov    eax,0xffffffff
  401b61:	xor    eax,DWORD PTR [r12+0x8]
  401b66:	add    r14d,eax
  401b69:	or     r14d,0x11000000
  401b70:	jmp    401bcb <strstr@plt+0x9fb>
  401b72:	mov    eax,0xffffffff
  401b77:	xor    eax,DWORD PTR [r12+0x8]
  401b7c:	add    r14d,eax
  401b7f:	or     r14d,0x14000000
  401b86:	jmp    401bcb <strstr@plt+0x9fb>
  401b88:	mov    eax,0xffffffff
  401b8d:	xor    eax,DWORD PTR [r12+0x8]
  401b92:	add    r14d,eax
  401b95:	or     r14d,0x12000000
  401b9c:	jmp    401bcb <strstr@plt+0x9fb>
  401b9e:	mov    eax,0xffffffff
  401ba3:	xor    eax,DWORD PTR [r12+0x8]
  401ba8:	add    ebp,eax
  401baa:	or     ebp,0x13000000
  401bb0:	mov    DWORD PTR [r12+0x4c],ebp
  401bb5:	jmp    401bd0 <strstr@plt+0xa00>
  401bb7:	mov    eax,0xffffffff
  401bbc:	xor    eax,DWORD PTR [r12+0x8]
  401bc1:	add    r14d,eax
  401bc4:	or     r14d,0x15000000
  401bcb:	mov    DWORD PTR [r12+0x4c],r14d
  401bd0:	add    rsp,0xd8
  401bd7:	pop    rbx
  401bd8:	pop    r12
  401bda:	pop    r13
  401bdc:	pop    r14
  401bde:	pop    r15
  401be0:	pop    rbp
  401be1:	ret    
  401be2:	mov    edi,0x1
  401be7:	call   4011a0 <exit@plt>
  401bec:	nop    DWORD PTR [rax+0x0]
  401bf0:	push   rbp
  401bf1:	push   r15
  401bf3:	push   r14
  401bf5:	push   r13
  401bf7:	push   r12
  401bf9:	push   rbx
  401bfa:	sub    rsp,0x108
  401c01:	mov    r13,QWORD PTR [rdi]
  401c04:	mov    QWORD PTR [rsi],0x0
  401c0b:	mov    eax,DWORD PTR [r13+0x4c]
  401c0f:	test   eax,eax
  401c11:	jne    4022fa <strstr@plt+0x112a>
  401c17:	mov    rdi,QWORD PTR [r13+0x28]
  401c1b:	test   rdi,rdi
  401c1e:	je     401c45 <strstr@plt+0xa75>
  401c20:	mov    rcx,QWORD PTR [r13+0x20]
  401c24:	xor    edx,edx
  401c26:	xor    eax,eax
  401c28:	nop    DWORD PTR [rax+rax*1+0x0]
  401c30:	cmp    DWORD PTR [rcx+rdx*1],0x0
  401c34:	jg     4022e9 <strstr@plt+0x1119>
  401c3a:	inc    eax
  401c3c:	add    rdx,0x4
  401c40:	cmp    rdx,rdi
  401c43:	jb     401c30 <strstr@plt+0xa60>
  401c45:	mov    rax,QWORD PTR [r13+0x18]
  401c49:	cmp    rax,0x29
  401c4d:	jb     401c9b <strstr@plt+0xacb>
  401c4f:	mov    r8,QWORD PTR [r13+0x10]
  401c53:	mov    edx,0xa
  401c58:	jmp    401c70 <strstr@plt+0xaa0>
  401c5a:	nop    WORD PTR [rax+rax*1+0x0]
  401c60:	lea    rcx,[rdx*4+0x4]
  401c68:	inc    rdx
  401c6b:	cmp    rcx,rax
  401c6e:	jae    401c9b <strstr@plt+0xacb>
  401c70:	mov    ecx,DWORD PTR [r8+rdx*4]
  401c74:	test   ecx,ecx
  401c76:	jle    401c60 <strstr@plt+0xa90>
  401c78:	mov    edi,edx
  401c7a:	neg    edi
  401c7c:	nop    DWORD PTR [rax+0x0]
  401c80:	movsxd rbp,ecx
  401c83:	shr    ecx,0x18
  401c86:	lea    rcx,[rcx+rcx*4]
  401c8a:	mov    rbx,QWORD PTR [r13+rcx*8+0x50]
  401c8f:	mov    ecx,DWORD PTR [rbx+rbp*4]
  401c92:	mov    DWORD PTR [rbx+rbp*4],edi
  401c95:	test   ecx,ecx
  401c97:	jg     401c80 <strstr@plt+0xab0>
  401c99:	jmp    401c60 <strstr@plt+0xa90>
  401c9b:	xor    eax,eax
  401c9d:	cmp    DWORD PTR [r13+0x48],0x0
  401ca2:	jle    4022f0 <strstr@plt+0x1120>
  401ca8:	mov    QWORD PTR [rsp-0x68],rsi
  401cad:	lea    rax,[r13+0x70]
  401cb1:	mov    QWORD PTR [rsp-0x60],rax
  401cb6:	xor    r11d,r11d
  401cb9:	lea    rdi,[rip+0x73ac]        # 40906c <strstr@plt+0x7e9c>
  401cc0:	vpbroadcastq ymm7,QWORD PTR [rip+0xae77]        # 40cb40 <strstr@plt+0xb970>
  401cc9:	xor    eax,eax
  401ccb:	mov    QWORD PTR [rsp-0x70],rax
  401cd0:	xor    ecx,ecx
  401cd2:	xor    r10d,r10d
  401cd5:	vmovdqu YMMWORD PTR [rsp+0x60],ymm7
  401cdb:	jmp    401d0a <strstr@plt+0xb3a>
  401cdd:	nop    DWORD PTR [rax]
  401ce0:	mov    rax,QWORD PTR [rsp-0x48]
  401ce5:	movsxd rax,DWORD PTR [r13+rax*8+0x70]
  401cea:	movsxd r10,r10d
  401ced:	add    r10,rax
  401cf0:	mov    rcx,QWORD PTR [rsp-0x78]
  401cf5:	inc    rcx
  401cf8:	movsxd rax,DWORD PTR [r13+0x48]
  401cfc:	dec    QWORD PTR [rsp-0x70]
  401d01:	cmp    rcx,rax
  401d04:	jge    4022e0 <strstr@plt+0x1110>
  401d0a:	lea    rax,[rcx+rcx*4]
  401d0e:	mov    ebp,ecx
  401d10:	shl    ebp,0x18
  401d13:	mov    r9d,DWORD PTR [r13+rax*8+0x68]
  401d18:	cmp    ebp,r9d
  401d1b:	mov    QWORD PTR [rsp-0x78],rcx
  401d20:	mov    QWORD PTR [rsp-0x48],rax
  401d25:	je     401ce0 <strstr@plt+0xb10>
  401d27:	mov    rbx,QWORD PTR [r13+rax*8+0x50]
  401d2c:	mov    r15,QWORD PTR [r13+0x8]
  401d30:	vmovq  xmm0,rcx
  401d35:	vpbroadcastq ymm0,xmm0
  401d3a:	vpaddq ymm1,ymm0,YMMWORD PTR [rip+0xadbe]        # 40cb00 <strstr@plt+0xb930>
  401d42:	vmovdqu YMMWORD PTR [rsp+0x40],ymm1
  401d48:	vpaddq ymm0,ymm0,YMMWORD PTR [rip+0xadd0]        # 40cb20 <strstr@plt+0xb950>
  401d50:	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
  401d56:	mov    DWORD PTR [rsp-0x7c],r9d
  401d5b:	jmp    401d69 <strstr@plt+0xb99>
  401d5d:	nop    DWORD PTR [rax]
  401d60:	cmp    ebp,r9d
  401d63:	je     401ce0 <strstr@plt+0xb10>
  401d69:	movsxd rax,ebp
  401d6c:	inc    ebp
  401d6e:	movsxd rcx,DWORD PTR [rbx+rax*4]
  401d72:	add    rcx,r15
  401d75:	jmp    401d87 <strstr@plt+0xbb7>
  401d77:	nop    WORD PTR [rax+rax*1+0x0]
  401d80:	add    rax,0x2
  401d84:	mov    rcx,rax
  401d87:	mov    rax,rcx
  401d8a:	inc    rcx
  401d8d:	mov    dl,BYTE PTR [rax]
  401d8f:	add    dl,0x17
  401d92:	movzx  edx,dl
  401d95:	cmp    dl,0x16
  401d98:	ja     401d87 <strstr@plt+0xbb7>
  401d9a:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  401d9e:	add    rdx,rdi
  401da1:	jmp    rdx
  401da3:	add    rax,0x3
  401da7:	mov    rcx,rax
  401daa:	jmp    401d87 <strstr@plt+0xbb7>
  401dac:	add    rax,0x2
  401db0:	inc    ebp
  401db2:	mov    rcx,rax
  401db5:	jmp    401d87 <strstr@plt+0xbb7>
  401db7:	lea    rcx,[rax+0x2]
  401dbb:	mov    dl,BYTE PTR [rax-0x1]
  401dbe:	mov    r8d,0x3
  401dc4:	cmp    dl,0xe9
  401dc7:	je     401ddd <strstr@plt+0xc0d>
  401dc9:	and    dl,0xf0
  401dcc:	xor    eax,eax
  401dce:	mov    r8d,0x4
  401dd4:	cmp    dl,0x80
  401dd7:	jne    401e84 <strstr@plt+0xcb4>
  401ddd:	movsxd r12,ebp
  401de0:	movsxd rsi,DWORD PTR [rbx+r12*4]
  401de4:	test   rsi,rsi
  401de7:	js     401e56 <strstr@plt+0xc86>
  401de9:	mov    r9d,esi
  401dec:	mov    r14,r9
  401def:	shr    r14,0x18
  401df3:	lea    rax,[r14+r14*4]
  401df7:	mov    rax,QWORD PTR [r13+rax*8+0x50]
  401dfc:	mov    eax,DWORD PTR [rax+rsi*4]
  401dff:	cmp    esi,ebp
  401e01:	jle    401e5a <strstr@plt+0xc8a>
  401e03:	mov    rsi,QWORD PTR [rsp-0x78]
  401e08:	cmp    rsi,r14
  401e0b:	jae    401e5d <strstr@plt+0xc8d>
  401e0d:	mov    rdx,r14
  401e10:	sub    rdx,rsi
  401e13:	cmp    rdx,0x10
  401e17:	jae    401e93 <strstr@plt+0xcc3>
  401e19:	mov    r11,rsi
  401e1c:	jmp    4022b2 <strstr@plt+0x10e2>
  401e21:	add    rax,0x2
  401e25:	mov    rcx,rax
  401e28:	movsxd rax,ebp
  401e2b:	add    DWORD PTR [rbx+rax*4],r10d
  401e2f:	inc    ebp
  401e31:	jmp    401d87 <strstr@plt+0xbb7>
  401e36:	movsxd rcx,ebp
  401e39:	inc    ebp
  401e3b:	mov    ecx,DWORD PTR [rbx+rcx*4]
  401e3e:	add    ecx,r10d
  401e41:	movzx  edx,BYTE PTR [rax+0x1]
  401e45:	add    rax,0x2
  401e49:	and    edx,ecx
  401e4b:	sub    r10d,edx
  401e4e:	mov    rcx,rax
  401e51:	jmp    401d87 <strstr@plt+0xbb7>
  401e56:	xor    eax,eax
  401e58:	jmp    401e84 <strstr@plt+0xcb4>
  401e5a:	sub    eax,r10d
  401e5d:	mov    r9d,DWORD PTR [rsp-0x7c]
  401e62:	sub    eax,DWORD PTR [rbx+r12*4+0x4]
  401e67:	mov    edx,0xffffff80
  401e6c:	sub    edx,r8d
  401e6f:	cmp    eax,0x80
  401e74:	cmovge r8d,r11d
  401e78:	cmp    eax,edx
  401e7a:	cmovl  r8d,r11d
  401e7e:	sub    r10d,r8d
  401e81:	mov    eax,r8d
  401e84:	movsxd rdx,ebp
  401e87:	mov    DWORD PTR [rbx+rdx*4+0x4],eax
  401e8b:	add    ebp,0x2
  401e8e:	jmp    401d87 <strstr@plt+0xbb7>
  401e93:	mov    QWORD PTR [rsp-0x58],rdx
  401e98:	mov    rsi,rdx
  401e9b:	and    rsi,0xfffffffffffffff0
  401e9f:	vmovd  xmm9,eax
  401ea3:	mov    QWORD PTR [rsp-0x50],rsi
  401ea8:	add    rsi,0xfffffffffffffff0
  401eac:	mov    rax,rsi
  401eaf:	shr    rax,0x4
  401eb3:	inc    rax
  401eb6:	mov    r11d,eax
  401eb9:	and    r11d,0x3
  401ebd:	vpxor  xmm10,xmm10,xmm10
  401ec2:	cmp    rsi,0x30
  401ec6:	jae    401ed9 <strstr@plt+0xd09>
  401ec8:	vmovdqu ymm6,YMMWORD PTR [rsp+0x20]
  401ece:	vmovdqu ymm8,YMMWORD PTR [rsp+0x40]
  401ed4:	jmp    40217e <strstr@plt+0xfae>
  401ed9:	sub    rax,r11
  401edc:	vpxor  xmm10,xmm10,xmm10
  401ee1:	vmovdqu ymm6,YMMWORD PTR [rsp+0x20]
  401ee7:	vmovdqu ymm8,YMMWORD PTR [rsp+0x40]
  401eed:	nop    DWORD PTR [rax]
  401ef0:	vmovdqu YMMWORD PTR [rsp+0xc0],ymm10
  401ef9:	vmovdqu YMMWORD PTR [rsp+0xe0],ymm9
  401f02:	vpmuludq ymm0,ymm6,ymm7
  401f06:	vpsrlq ymm1,ymm6,0x20
  401f0b:	vpmuludq ymm1,ymm1,ymm7
  401f0f:	vmovq  xmm3,r13
  401f14:	vpsllq ymm1,ymm1,0x20
  401f19:	vpbroadcastq ymm3,xmm3
  401f1e:	vpaddq ymm0,ymm0,ymm3
  401f22:	vpaddq ymm9,ymm1,ymm0
  401f26:	vpbroadcastq ymm0,QWORD PTR [rip+0xac19]        # 40cb48 <strstr@plt+0xb978>
  401f2f:	vpmuludq ymm1,ymm8,ymm7
  401f33:	vpaddq ymm14,ymm9,ymm0
  401f37:	vpsrlq ymm10,ymm8,0x20
  401f3d:	vpmuludq ymm10,ymm10,ymm7
  401f41:	vpsllq ymm10,ymm10,0x20
  401f47:	vpaddq ymm1,ymm1,ymm3
  401f4b:	vpaddq ymm10,ymm10,ymm1
  401f4f:	vpaddq ymm3,ymm10,ymm0
  401f53:	vpbroadcastq ymm0,QWORD PTR [rip+0xabf4]        # 40cb50 <strstr@plt+0xb980>
  401f5c:	vpaddq ymm1,ymm9,ymm0
  401f60:	vmovdqu YMMWORD PTR [rsp-0x20],ymm1
  401f66:	vpcmpeqd xmm4,xmm4,xmm4
  401f6a:	vpcmpeqd xmm13,xmm13,xmm13
  401f6f:	vpcmpeqd xmm15,xmm15,xmm15
  401f74:	vpaddq ymm11,ymm10,ymm0
  401f78:	vpcmpeqd xmm2,xmm2,xmm2
  401f7c:	vpbroadcastq ymm0,QWORD PTR [rip+0xabd3]        # 40cb58 <strstr@plt+0xb988>
  401f85:	vpaddq ymm1,ymm9,ymm0
  401f89:	vmovdqu YMMWORD PTR [rsp-0x40],ymm1
  401f8f:	vpaddq ymm0,ymm10,ymm0
  401f93:	vpbroadcastq ymm5,QWORD PTR [rip+0xabc4]        # 40cb60 <strstr@plt+0xb990>
  401f9c:	vpaddq ymm1,ymm9,ymm5
  401fa0:	vpaddq ymm5,ymm10,ymm5
  401fa4:	vpgatherqd xmm12,DWORD PTR [ymm3*1+0x0],xmm4
  401fae:	vpcmpeqd xmm3,xmm3,xmm3
  401fb2:	vpgatherqd xmm4,DWORD PTR [ymm14*1+0x0],xmm13
  401fbc:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm4
  401fc5:	vpcmpeqd xmm14,xmm14,xmm14
  401fca:	vpgatherqd xmm4,DWORD PTR [ymm11*1+0x0],xmm15
  401fd4:	vmovdqa XMMWORD PTR [rsp+0x10],xmm4
  401fda:	vpcmpeqd xmm7,xmm7,xmm7
  401fde:	vmovdqu ymm11,YMMWORD PTR [rsp-0x20]
  401fe4:	vpgatherqd xmm4,DWORD PTR [ymm11*1+0x0],xmm2
  401fee:	vmovdqu YMMWORD PTR [rsp+0x80],ymm4
  401ff7:	vpcmpeqd xmm2,xmm2,xmm2
  401ffb:	vpgatherqd xmm4,DWORD PTR [ymm0*1+0x0],xmm3
  402005:	vmovdqa XMMWORD PTR [rsp-0x20],xmm4
  40200b:	vpbroadcastq ymm0,QWORD PTR [rip+0xab54]        # 40cb68 <strstr@plt+0xb998>
  402014:	vmovdqu ymm3,YMMWORD PTR [rsp-0x40]
  40201a:	vpgatherqd xmm11,DWORD PTR [ymm3*1+0x0],xmm14
  402024:	vpaddq ymm14,ymm9,ymm0
  402028:	vpgatherqd xmm3,DWORD PTR [ymm5*1+0x0],xmm7
  402032:	vmovdqa XMMWORD PTR [rsp-0x40],xmm3
  402038:	vpaddq ymm0,ymm10,ymm0
  40203c:	vpgatherqd xmm15,DWORD PTR [ymm1*1+0x0],xmm2
  402046:	vpcmpeqd xmm1,xmm1,xmm1
  40204a:	vpgatherqd xmm5,DWORD PTR [ymm0*1+0x0],xmm1
  402054:	vpcmpeqd xmm0,xmm0,xmm0
  402058:	vpgatherqd xmm4,DWORD PTR [ymm14*1+0x0],xmm0
  402062:	vpbroadcastq ymm0,QWORD PTR [rip+0xab05]        # 40cb70 <strstr@plt+0xb9a0>
  40206b:	vpcmpeqd xmm7,xmm7,xmm7
  40206f:	vpaddq ymm14,ymm10,ymm0
  402073:	vpgatherqd xmm3,DWORD PTR [ymm14*1+0x0],xmm7
  40207d:	vpaddq ymm0,ymm9,ymm0
  402081:	vpcmpeqd xmm7,xmm7,xmm7
  402085:	vpgatherqd xmm14,DWORD PTR [ymm0*1+0x0],xmm7
  40208f:	vpbroadcastq ymm0,QWORD PTR [rip+0xaae0]        # 40cb78 <strstr@plt+0xb9a8>
  402098:	vpaddq ymm7,ymm10,ymm0
  40209c:	vpcmpeqd xmm13,xmm13,xmm13
  4020a1:	vpgatherqd xmm2,DWORD PTR [ymm7*1+0x0],xmm13
  4020ab:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  4020b4:	vinserti128 ymm7,ymm1,xmm12,0x1
  4020ba:	vmovdqu ymm1,YMMWORD PTR [rsp+0x80]
  4020c3:	vinserti128 ymm13,ymm1,XMMWORD PTR [rsp+0x10],0x1
  4020cb:	vinserti128 ymm11,ymm11,XMMWORD PTR [rsp-0x20],0x1
  4020d3:	vpaddq ymm0,ymm9,ymm0
  4020d7:	vpcmpeqd xmm12,xmm12,xmm12
  4020dc:	vpaddd ymm7,ymm7,YMMWORD PTR [rsp+0xe0]
  4020e5:	vpgatherqd xmm1,DWORD PTR [ymm0*1+0x0],xmm12
  4020ef:	vpaddd ymm13,ymm13,YMMWORD PTR [rsp+0xc0]
  4020f8:	vinserti128 ymm12,ymm15,XMMWORD PTR [rsp-0x40],0x1
  402100:	vinserti128 ymm4,ymm4,xmm5,0x1
  402106:	vpbroadcastq ymm5,QWORD PTR [rip+0xaa71]        # 40cb80 <strstr@plt+0xb9b0>
  40210f:	vpaddq ymm10,ymm10,ymm5
  402113:	vpcmpeqd xmm0,xmm0,xmm0
  402117:	vpaddd ymm4,ymm11,ymm4
  40211b:	vpgatherqd xmm11,DWORD PTR [ymm10*1+0x0],xmm0
  402125:	vpaddd ymm0,ymm7,ymm4
  402129:	vmovdqu ymm7,YMMWORD PTR [rsp+0x60]
  40212f:	vinserti128 ymm3,ymm14,xmm3,0x1
  402135:	vpaddd ymm3,ymm12,ymm3
  402139:	vpaddq ymm4,ymm9,ymm5
  40213d:	vinserti128 ymm1,ymm1,xmm2,0x1
  402143:	vpcmpeqd xmm2,xmm2,xmm2
  402147:	vpaddd ymm3,ymm13,ymm3
  40214b:	vpgatherqd xmm5,DWORD PTR [ymm4*1+0x0],xmm2
  402155:	vpaddd ymm9,ymm1,ymm0
  402159:	vinserti128 ymm0,ymm5,xmm11,0x1
  40215f:	vpaddd ymm10,ymm0,ymm3
  402163:	vpbroadcastq ymm0,QWORD PTR [rip+0xaa1c]        # 40cb88 <strstr@plt+0xb9b8>
  40216c:	vpaddq ymm6,ymm6,ymm0
  402170:	vpaddq ymm8,ymm8,ymm0
  402174:	add    rax,0xfffffffffffffffc
  402178:	jne    401ef0 <strstr@plt+0xd20>
  40217e:	test   r11,r11
  402181:	mov    r11,QWORD PTR [rsp-0x50]
  402186:	je     402279 <strstr@plt+0x10a9>
  40218c:	shr    r9d,0x18
  402190:	add    r9d,DWORD PTR [rsp-0x70]
  402195:	and    r9b,0x30
  402199:	add    r9b,0xf0
  40219d:	shr    r9b,0x4
  4021a1:	inc    r9b
  4021a4:	movzx  eax,r9b
  4021a8:	and    eax,0x3
  4021ab:	neg    rax
  4021ae:	xchg   ax,ax
  4021b0:	vpmuludq ymm0,ymm6,ymm7
  4021b4:	vpsrlq ymm1,ymm6,0x20
  4021b9:	vpmuludq ymm1,ymm1,ymm7
  4021bd:	vpsllq ymm1,ymm1,0x20
  4021c2:	vmovq  xmm2,r13
  4021c7:	vpbroadcastq ymm2,xmm2
  4021cc:	vpaddq ymm0,ymm0,ymm2
  4021d0:	vpaddq ymm0,ymm1,ymm0
  4021d4:	vpbroadcastq ymm1,QWORD PTR [rip+0xa96b]        # 40cb48 <strstr@plt+0xb978>
  4021dd:	vpaddq ymm3,ymm0,ymm1
  4021e1:	vpmuludq ymm4,ymm8,ymm7
  4021e5:	vpsrlq ymm5,ymm8,0x20
  4021eb:	vpmuludq ymm5,ymm5,ymm7
  4021ef:	vpsllq ymm5,ymm5,0x20
  4021f4:	vpaddq ymm2,ymm4,ymm2
  4021f8:	vpaddq ymm2,ymm5,ymm2
  4021fc:	vpaddq ymm1,ymm2,ymm1
  402200:	vpcmpeqd xmm4,xmm4,xmm4
  402204:	vpgatherqd xmm5,DWORD PTR [ymm1*1+0x0],xmm4
  40220e:	vpcmpeqd xmm1,xmm1,xmm1
  402212:	vpgatherqd xmm4,DWORD PTR [ymm3*1+0x0],xmm1
  40221c:	vpbroadcastq ymm1,QWORD PTR [rip+0xa92b]        # 40cb50 <strstr@plt+0xb980>
  402225:	vpaddq ymm0,ymm0,ymm1
  402229:	vpaddq ymm1,ymm2,ymm1
  40222d:	vinserti128 ymm2,ymm4,xmm5,0x1
  402233:	vpaddd ymm9,ymm2,ymm9
  402238:	vpcmpeqd xmm2,xmm2,xmm2
  40223c:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  402246:	vpcmpeqd xmm1,xmm1,xmm1
  40224a:	vpgatherqd xmm2,DWORD PTR [ymm0*1+0x0],xmm1
  402254:	vinserti128 ymm0,ymm2,xmm3,0x1
  40225a:	vpaddd ymm10,ymm0,ymm10
  40225f:	vpbroadcastq ymm0,QWORD PTR [rip+0xa928]        # 40cb90 <strstr@plt+0xb9c0>
  402268:	vpaddq ymm6,ymm6,ymm0
  40226c:	vpaddq ymm8,ymm8,ymm0
  402270:	inc    rax
  402273:	jne    4021b0 <strstr@plt+0xfe0>
  402279:	vpaddd ymm0,ymm10,ymm9
  40227e:	vextracti128 xmm1,ymm0,0x1
  402284:	vpaddd xmm0,xmm0,xmm1
  402288:	vpshufd xmm1,xmm0,0x4e
  40228d:	vpaddd xmm0,xmm0,xmm1
  402291:	vpshufd xmm1,xmm0,0xe5
  402296:	vpaddd xmm0,xmm0,xmm1
  40229a:	vmovd  eax,xmm0
  40229e:	cmp    QWORD PTR [rsp-0x58],r11
  4022a3:	jne    4022ad <strstr@plt+0x10dd>
  4022a5:	xor    r11d,r11d
  4022a8:	jmp    401e5d <strstr@plt+0xc8d>
  4022ad:	add    r11,QWORD PTR [rsp-0x78]
  4022b2:	mov    r9d,DWORD PTR [rsp-0x7c]
  4022b7:	lea    rsi,[r11+r11*4]
  4022bb:	mov    rdx,QWORD PTR [rsp-0x60]
  4022c0:	lea    rsi,[rdx+rsi*8]
  4022c4:	sub    r14,r11
  4022c7:	xor    r11d,r11d
  4022ca:	nop    WORD PTR [rax+rax*1+0x0]
  4022d0:	add    eax,DWORD PTR [rsi]
  4022d2:	add    rsi,0x28
  4022d6:	dec    r14
  4022d9:	jne    4022d0 <strstr@plt+0x1100>
  4022db:	jmp    401e62 <strstr@plt+0xc92>
  4022e0:	mov    rsi,QWORD PTR [rsp-0x68]
  4022e5:	xor    eax,eax
  4022e7:	jmp    4022f3 <strstr@plt+0x1123>
  4022e9:	or     eax,0x22000000
  4022ee:	jmp    4022fa <strstr@plt+0x112a>
  4022f0:	xor    r10d,r10d
  4022f3:	mov    QWORD PTR [r13+0x40],r10
  4022f7:	mov    QWORD PTR [rsi],r10
  4022fa:	add    rsp,0x108
  402301:	pop    rbx
  402302:	pop    r12
  402304:	pop    r13
  402306:	pop    r14
  402308:	pop    r15
  40230a:	pop    rbp
  40230b:	vzeroupper 
  40230e:	ret    
  40230f:	nop
  402310:	push   rbp
  402311:	push   r15
  402313:	push   r14
  402315:	push   r13
  402317:	push   r12
  402319:	push   rbx
  40231a:	sub    rsp,0x148
  402321:	mov    r8,QWORD PTR [rdi]
  402324:	cmp    DWORD PTR [r8+0x48],0x0
  402329:	mov    r13,rsi
  40232c:	jle    4027e1 <strstr@plt+0x1611>
  402332:	lea    r14,[rip+0x6d8f]        # 4090c8 <strstr@plt+0x7ef8>
  402339:	lea    r9,[rip+0x10dd0]        # 413110 <strstr@plt+0x11f40>
  402340:	xor    ecx,ecx
  402342:	mov    r13,rsi
  402345:	mov    QWORD PTR [rsp+0x18],rsi
  40234a:	mov    QWORD PTR [rsp+0x10],r8
  40234f:	mov    QWORD PTR [rsp+0x8],rdi
  402354:	jmp    402375 <strstr@plt+0x11a5>
  402356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402360:	mov    rcx,QWORD PTR [rsp+0x28]
  402365:	inc    rcx
  402368:	movsxd rax,DWORD PTR [r8+0x48]
  40236c:	cmp    rcx,rax
  40236f:	jge    4027e1 <strstr@plt+0x1611>
  402375:	mov    QWORD PTR [rsp+0x28],rcx
  40237a:	lea    rax,[rcx+rcx*4]
  40237e:	mov    r12,QWORD PTR [r8+rax*8+0x58]
  402383:	movsxd rcx,DWORD PTR [r8+rax*8+0x68]
  402388:	shl    rcx,0x2
  40238c:	add    rcx,QWORD PTR [r8+rax*8+0x50]
  402391:	mov    QWORD PTR [rsp+0x30],rcx
  402396:	cmp    r12,rcx
  402399:	jne    4023a7 <strstr@plt+0x11d7>
  40239b:	jmp    402360 <strstr@plt+0x1190>
  40239d:	nop    DWORD PTR [rax]
  4023a0:	cmp    r12,QWORD PTR [rsp+0x30]
  4023a5:	je     402360 <strstr@plt+0x1190>
  4023a7:	movsxd rbx,DWORD PTR [r12]
  4023ab:	add    r12,0x4
  4023af:	add    rbx,QWORD PTR [r8+0x8]
  4023b3:	xor    r10d,r10d
  4023b6:	jmp    4023d0 <strstr@plt+0x1200>
  4023b8:	mov    ebp,DWORD PTR [rbp+rbx*4+0x4]
  4023bc:	mov    r12,rcx
  4023bf:	sub    ebp,r13d
  4023c2:	add    ebp,0xfffffffc
  4023c5:	mov    DWORD PTR [r13+0x0],ebp
  4023c9:	add    r13,0x4
  4023cd:	mov    rbx,rax
  4023d0:	mov    r15,rbx
  4023d3:	mov    cl,BYTE PTR [rbx]
  4023d5:	lea    edx,[rcx+0x17]
  4023d8:	xor    ebp,ebp
  4023da:	cmp    dl,0x11
  4023dd:	ja     4023e7 <strstr@plt+0x1217>
  4023df:	mov    ebp,DWORD PTR [r12]
  4023e3:	add    r12,0x4
  4023e7:	lea    rax,[r15+0x1]
  4023eb:	movzx  ebx,dl
  4023ee:	cmp    dl,0x16
  4023f1:	ja     402527 <strstr@plt+0x1357>
  4023f7:	movsxd rcx,DWORD PTR [r14+rbx*4]
  4023fb:	add    rcx,r14
  4023fe:	mov    rbx,rax
  402401:	jmp    rcx
  402403:	test   r10,r10
  402406:	cmove  r10,r13
  40240a:	mov    cl,BYTE PTR [rax]
  40240c:	and    cl,0xfe
  40240f:	cmp    cl,0xee
  402412:	mov    ecx,0x0
  402417:	cmove  rcx,r10
  40241b:	test   ebp,ebp
  40241d:	je     40275b <strstr@plt+0x158b>
  402423:	movsx  edx,bpl
  402427:	cmp    edx,ebp
  402429:	je     4027c4 <strstr@plt+0x15f4>
  40242f:	mov    r10,rcx
  402432:	jmp    4023c5 <strstr@plt+0x11f5>
  402434:	mov    rbx,r15
  402437:	add    rbx,0x2
  40243b:	test   ebp,ebp
  40243d:	je     4023d0 <strstr@plt+0x1200>
  40243f:	mov    r15,r10
  402442:	mov    edx,ebp
  402444:	movzx  esi,BYTE PTR [rax]
  402447:	mov    rdi,r13
  40244a:	call   4010c0 <memset@plt>
  40244f:	lea    eax,[rbp-0x1]
  402452:	test   bpl,0x7
  402456:	je     40246c <strstr@plt+0x129c>
  402458:	mov    edx,ebp
  40245a:	and    edx,0x7
  40245d:	xor    ecx,ecx
  40245f:	nop
  402460:	inc    rcx
  402463:	cmp    edx,ecx
  402465:	jne    402460 <strstr@plt+0x1290>
  402467:	add    r13,rcx
  40246a:	sub    ebp,ecx
  40246c:	mov    rsi,QWORD PTR [rsp+0x18]
  402471:	mov    r8,QWORD PTR [rsp+0x10]
  402476:	mov    rdi,QWORD PTR [rsp+0x8]
  40247b:	lea    r9,[rip+0x10c8e]        # 413110 <strstr@plt+0x11f40>
  402482:	mov    r10,r15
  402485:	cmp    eax,0x7
  402488:	jb     4023d0 <strstr@plt+0x1200>
  40248e:	neg    ebp
  402490:	xor    eax,eax
  402492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40249c:	nop    DWORD PTR [rax+0x0]
  4024a0:	add    rax,0xfffffffffffffff8
  4024a4:	cmp    ebp,eax
  4024a6:	jne    4024a0 <strstr@plt+0x12d0>
  4024a8:	sub    r13,rax
  4024ab:	jmp    4023d0 <strstr@plt+0x1200>
  4024b0:	movzx  eax,BYTE PTR [r15+0x1]
  4024b5:	add    r15,0x2
  4024b9:	mov    ecx,r13d
  4024bc:	sub    ecx,esi
  4024be:	mov    rbx,r15
  4024c1:	test   ecx,eax
  4024c3:	je     4023d0 <strstr@plt+0x1200>
  4024c9:	nop    DWORD PTR [rax+0x0]
  4024d0:	mov    BYTE PTR [r13+0x0],0x90
  4024d5:	inc    r13
  4024d8:	mov    ecx,r13d
  4024db:	sub    ecx,esi
  4024dd:	test   ecx,eax
  4024df:	jne    4024d0 <strstr@plt+0x1300>
  4024e1:	mov    rbx,r15
  4024e4:	jmp    4023d0 <strstr@plt+0x1200>
  4024e9:	add    r15,0x2
  4024ed:	test   ebp,ebp
  4024ef:	js     402786 <strstr@plt+0x15b6>
  4024f5:	mov    rax,r15
  4024f8:	movsxd rcx,ebp
  4024fb:	sar    ebp,0x18
  4024fe:	movsxd rdx,ebp
  402501:	lea    rdx,[rdx+rdx*4]
  402505:	mov    rdx,QWORD PTR [r8+rdx*8+0x50]
  40250a:	mov    ebp,DWORD PTR [rdx+rcx*4]
  40250d:	test   ebp,ebp
  40250f:	js     40274a <strstr@plt+0x157a>
  402515:	add    ebp,esi
  402517:	jmp    4023c5 <strstr@plt+0x11f5>
  40251c:	mov    cl,BYTE PTR [r15+0x1]
  402520:	add    r15,0x2
  402524:	mov    rax,r15
  402527:	mov    BYTE PTR [r13+0x0],cl
  40252b:	jmp    4027d6 <strstr@plt+0x1606>
  402530:	movsx  ecx,bpl
  402534:	cmp    ecx,ebp
  402536:	je     402563 <strstr@plt+0x1393>
  402538:	xor    r10d,r10d
  40253b:	mov    WORD PTR [r13+0x0],bp
  402540:	add    r13,0x2
  402544:	mov    rbx,rax
  402547:	jmp    4023d0 <strstr@plt+0x1200>
  40254c:	mov    r10,r13
  40254f:	mov    rbx,rax
  402552:	jmp    4023d0 <strstr@plt+0x1200>
  402557:	movsx  ecx,bpl
  40255b:	cmp    ecx,ebp
  40255d:	jne    402753 <strstr@plt+0x1583>
  402563:	test   r10,r10
  402566:	cmove  r10,r13
  40256a:	add    BYTE PTR [r10-0x2],0x2
  40256f:	xor    r10d,r10d
  402572:	jmp    4027d2 <strstr@plt+0x1602>
  402577:	lea    rbx,[r15+0x2]
  40257b:	cmp    BYTE PTR [r15+0x1],0x1
  402580:	lea    eax,[rbp*8+0x0]
  402587:	cmovbe eax,ebp
  40258a:	or     BYTE PTR [r13-0x1],al
  40258e:	jmp    4023d0 <strstr@plt+0x1200>
  402593:	add    r15,0x2
  402597:	test   ebp,ebp
  402599:	js     40279a <strstr@plt+0x15ca>
  40259f:	mov    rax,r15
  4025a2:	lea    rcx,[r12+0x4]
  4025a7:	movsxd rbx,ebp
  4025aa:	sar    ebp,0x18
  4025ad:	movsxd rdx,ebp
  4025b0:	lea    rdx,[rdx+rdx*4]
  4025b4:	mov    rbp,QWORD PTR [r8+rdx*8+0x50]
  4025b9:	mov    edx,DWORD PTR [rbp+rbx*4+0x0]
  4025bd:	test   edx,edx
  4025bf:	js     4023b8 <strstr@plt+0x11e8>
  4025c5:	mov    ebx,DWORD PTR [r12]
  4025c9:	mov    ebp,esi
  4025cb:	sub    ebp,r13d
  4025ce:	add    ebp,ebx
  4025d0:	lea    ebp,[rdx+rbp*1]
  4025d3:	add    ebp,0xfffffffc
  4025d6:	test   ebx,ebx
  4025d8:	je     4027b2 <strstr@plt+0x15e2>
  4025de:	cmp    ebx,0x4
  4025e1:	jne    4027ba <strstr@plt+0x15ea>
  4025e7:	mov    dl,BYTE PTR [r13-0x1]
  4025eb:	add    dl,0xf0
  4025ee:	mov    BYTE PTR [r13-0x2],dl
  4025f2:	dec    r13
  4025f5:	mov    r12,rcx
  4025f8:	jmp    4027d2 <strstr@plt+0x1602>
  4025fd:	movzx  eax,BYTE PTR [r15+0x1]
  402602:	add    r15,0x2
  402606:	mov    rbx,r15
  402609:	cmp    rax,0xa
  40260d:	jb     4023d0 <strstr@plt+0x1200>
  402613:	cmp    BYTE PTR [r15],0xf2
  402617:	jne    40261d <strstr@plt+0x144d>
  402619:	mov    ebp,DWORD PTR [r12]
  40261d:	movsxd rcx,ebp
  402620:	add    rcx,rsi
  402623:	mov    rdx,QWORD PTR [r8+0x30]
  402627:	mov    QWORD PTR [rdx+rax*8],rcx
  40262b:	mov    rbx,r15
  40262e:	jmp    4023d0 <strstr@plt+0x1200>
  402633:	mov    ecx,DWORD PTR [rdi+0x44]
  402636:	cmp    ecx,0xc8
  40263c:	jge    402802 <strstr@plt+0x1632>
  402642:	movzx  ebx,BYTE PTR [rax]
  402645:	movzx  ebp,BYTE PTR [r15+0x2]
  40264a:	mov    eax,DWORD PTR [r9+rbp*4]
  40264e:	test   eax,eax
  402650:	jns    402713 <strstr@plt+0x1543>
  402656:	mov    DWORD PTR [rsp+0x24],ebx
  40265a:	mov    QWORD PTR [rsp+0x38],r10
  40265f:	mov    eax,DWORD PTR [rdi+0x48]
  402662:	mov    DWORD PTR [r9+rbp*4],eax
  402666:	lea    rax,[rip+0xfe33]        # 4124a0 <strstr@plt+0x112d0>
  40266d:	mov    r8,QWORD PTR [rax+rbp*8]
  402671:	cmp    DWORD PTR [rdi+0x8],0x2
  402675:	lea    rcx,[rip+0xc481]        # 40eafd <strstr@plt+0xd92d>
  40267c:	mov    rdx,rcx
  40267f:	lea    rax,[rip+0xcb7d]        # 40f203 <strstr@plt+0xe033>
  402686:	cmove  rdx,rax
  40268a:	lea    rbx,[rsp+0x40]
  40268f:	mov    rdi,rbx
  402692:	lea    rsi,[rip+0xad46]        # 40d3df <strstr@plt+0xc20f>
  402699:	xor    eax,eax
  40269b:	call   401190 <sprintf@plt>
  4026a0:	mov    rdi,rbx
  4026a3:	mov    esi,0x40
  4026a8:	call   4010b0 <strchr@plt>
  4026ad:	test   rax,rax
  4026b0:	je     4026b5 <strstr@plt+0x14e5>
  4026b2:	mov    BYTE PTR [rax],0x0
  4026b5:	lea    rax,[rsp+0x40]
  4026ba:	mov    rdi,rax
  4026bd:	call   4010a0 <strlen@plt>
  4026c2:	lea    rdi,[rax+0x1]
  4026c6:	call   401150 <malloc@plt>
  4026cb:	mov    rbx,rax
  4026ce:	mov    rdi,rax
  4026d1:	lea    rsi,[rsp+0x40]
  4026d6:	call   401060 <strcpy@plt>
  4026db:	mov    rdi,QWORD PTR [rsp+0x8]
  4026e0:	mov    rax,QWORD PTR [rdi+0x60]
  4026e4:	movsxd rcx,DWORD PTR [rdi+0x48]
  4026e8:	mov    QWORD PTR [rax+rcx*8],rbx
  4026ec:	lea    eax,[rcx+0x1]
  4026ef:	mov    DWORD PTR [rdi+0x48],eax
  4026f2:	mov    ecx,DWORD PTR [rdi+0x44]
  4026f5:	lea    r9,[rip+0x10a14]        # 413110 <strstr@plt+0x11f40>
  4026fc:	mov    eax,DWORD PTR [r9+rbp*4]
  402700:	mov    rsi,QWORD PTR [rsp+0x18]
  402705:	mov    r8,QWORD PTR [rsp+0x10]
  40270a:	mov    r10,QWORD PTR [rsp+0x38]
  40270f:	mov    ebx,DWORD PTR [rsp+0x24]
  402713:	mov    edx,DWORD PTR [rdi+0x28]
  402716:	mov    ebp,r13d
  402719:	sub    ebp,edx
  40271b:	movsxd rcx,ecx
  40271e:	lea    rdx,[rcx+rcx*2]
  402722:	mov    DWORD PTR [rdi+rdx*4+0x90],ebp
  402729:	mov    DWORD PTR [rdi+rdx*4+0x94],eax
  402730:	mov    DWORD PTR [rdi+rdx*4+0x98],ebx
  402737:	inc    ecx
  402739:	mov    DWORD PTR [rdi+0x44],ecx
  40273c:	add    r15,0x3
  402740:	xor    ebp,ebp
  402742:	mov    rax,r15
  402745:	jmp    4023c5 <strstr@plt+0x11f5>
  40274a:	mov    ebp,DWORD PTR [rdx+rcx*4+0x4]
  40274e:	jmp    4023c5 <strstr@plt+0x11f5>
  402753:	xor    r10d,r10d
  402756:	jmp    4023c5 <strstr@plt+0x11f5>
  40275b:	mov    bl,BYTE PTR [r10-0x1]
  40275f:	mov    edx,ebx
  402761:	and    dl,0x7
  402764:	cmp    dl,0x4
  402767:	jne    40276f <strstr@plt+0x159f>
  402769:	mov    dl,BYTE PTR [r10]
  40276c:	and    dl,0x7
  40276f:	cmp    dl,0x5
  402772:	je     4027c8 <strstr@plt+0x15f8>
  402774:	xor    bl,0x80
  402777:	mov    BYTE PTR [r10-0x1],bl
  40277b:	mov    r10,rcx
  40277e:	mov    rbx,rax
  402781:	jmp    4023d0 <strstr@plt+0x1200>
  402786:	mov    rax,QWORD PTR [r8+0x30]
  40278a:	neg    ebp
  40278c:	movsxd rcx,ebp
  40278f:	mov    ebp,DWORD PTR [rax+rcx*8]
  402792:	mov    rax,r15
  402795:	jmp    4023c5 <strstr@plt+0x11f5>
  40279a:	add    r12,0x4
  40279e:	mov    rax,QWORD PTR [r8+0x30]
  4027a2:	neg    ebp
  4027a4:	movsxd rcx,ebp
  4027a7:	mov    ebp,DWORD PTR [rax+rcx*8]
  4027aa:	mov    rax,r15
  4027ad:	jmp    4023bf <strstr@plt+0x11ef>
  4027b2:	mov    r12,rcx
  4027b5:	jmp    4023c5 <strstr@plt+0x11f5>
  4027ba:	mov    BYTE PTR [r13-0x1],0xeb
  4027bf:	mov    r12,rcx
  4027c2:	jmp    4027d2 <strstr@plt+0x1602>
  4027c4:	mov    bl,BYTE PTR [r10-0x1]
  4027c8:	add    bl,0xc0
  4027cb:	mov    BYTE PTR [r10-0x1],bl
  4027cf:	mov    r10,rcx
  4027d2:	mov    BYTE PTR [r13+0x0],bpl
  4027d6:	inc    r13
  4027d9:	mov    rbx,rax
  4027dc:	jmp    4023d0 <strstr@plt+0x1200>
  4027e1:	add    rsi,QWORD PTR [r8+0x40]
  4027e5:	xor    eax,eax
  4027e7:	cmp    rsi,r13
  4027ea:	setne  al
  4027ed:	shl    eax,0x19
  4027f0:	add    rsp,0x148
  4027f7:	pop    rbx
  4027f8:	pop    r12
  4027fa:	pop    r13
  4027fc:	pop    r14
  4027fe:	pop    r15
  402800:	pop    rbp
  402801:	ret    
  402802:	mov    rax,QWORD PTR [rip+0x107e7]        # 412ff0 <strstr@plt+0x11e20>
  402809:	mov    rcx,QWORD PTR [rax]
  40280c:	lea    rdi,[rip+0xab94]        # 40d3a7 <strstr@plt+0xc1d7>
  402813:	mov    esi,0x37
  402818:	mov    edx,0x1
  40281d:	call   4011b0 <fwrite@plt>
  402822:	mov    edi,0x1
  402827:	call   4011a0 <exit@plt>
  40282c:	nop    DWORD PTR [rax+0x0]
  402830:	mov    rax,QWORD PTR [rdi]
  402833:	mov    ecx,esi
  402835:	lea    rdx,[rcx*4+0x0]
  40283d:	cmp    rdx,QWORD PTR [rax+0x28]
  402841:	jae    40285a <strstr@plt+0x168a>
  402843:	mov    rdx,QWORD PTR [rax+0x20]
  402847:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40284b:	test   rcx,rcx
  40284e:	js     402860 <strstr@plt+0x1690>
  402850:	mov    eax,0xffffffff
  402855:	test   ecx,ecx
  402857:	je     40285a <strstr@plt+0x168a>
  402859:	ret    
  40285a:	mov    eax,0xfffffffe
  40285f:	ret    
  402860:	mov    edx,ecx
  402862:	neg    edx
  402864:	sar    edx,0x18
  402867:	movsxd rdx,edx
  40286a:	lea    rdx,[rdx+rdx*4]
  40286e:	mov    rax,QWORD PTR [rax+rdx*8+0x50]
  402873:	shl    rcx,0x2
  402877:	sub    rax,rcx
  40287a:	mov    eax,DWORD PTR [rax]
  40287c:	ret    
  40287d:	nop    DWORD PTR [rax]
  402880:	mov    rcx,QWORD PTR [rdi]
  402883:	mov    eax,DWORD PTR [rcx+0x4c]
  402886:	test   eax,eax
  402888:	jne    402934 <strstr@plt+0x1764>
  40288e:	mov    rdx,QWORD PTR [rcx+0x10]
  402892:	mov    eax,0x21000001
  402897:	cmp    DWORD PTR [rdx+0x4],0x0
  40289b:	jg     402931 <strstr@plt+0x1761>
  4028a1:	mov    DWORD PTR [rdx+0x4],0x0
  4028a8:	mov    eax,0x21000002
  4028ad:	cmp    DWORD PTR [rdx+0x8],0x0
  4028b1:	jg     402931 <strstr@plt+0x1761>
  4028b3:	mov    DWORD PTR [rdx+0x8],0x0
  4028ba:	mov    eax,0x21000003
  4028bf:	cmp    DWORD PTR [rdx+0xc],0x0
  4028c3:	jg     402931 <strstr@plt+0x1761>
  4028c5:	mov    DWORD PTR [rdx+0xc],0x0
  4028cc:	mov    eax,0x21000004
  4028d1:	cmp    DWORD PTR [rdx+0x10],0x0
  4028d5:	jg     402931 <strstr@plt+0x1761>
  4028d7:	mov    DWORD PTR [rdx+0x10],0x0
  4028de:	mov    eax,0x21000005
  4028e3:	cmp    DWORD PTR [rdx+0x14],0x0
  4028e7:	jg     402931 <strstr@plt+0x1761>
  4028e9:	mov    DWORD PTR [rdx+0x14],0x0
  4028f0:	mov    eax,0x21000006
  4028f5:	cmp    DWORD PTR [rdx+0x18],0x0
  4028f9:	jg     402931 <strstr@plt+0x1761>
  4028fb:	mov    DWORD PTR [rdx+0x18],0x0
  402902:	mov    eax,0x21000007
  402907:	cmp    DWORD PTR [rdx+0x1c],0x0
  40290b:	jg     402931 <strstr@plt+0x1761>
  40290d:	mov    DWORD PTR [rdx+0x1c],0x0
  402914:	mov    eax,0x21000008
  402919:	cmp    DWORD PTR [rdx+0x20],0x0
  40291d:	jg     402931 <strstr@plt+0x1761>
  40291f:	mov    DWORD PTR [rdx+0x20],0x0
  402926:	mov    eax,0x21000009
  40292b:	cmp    DWORD PTR [rdx+0x24],0x0
  40292f:	jle    402935 <strstr@plt+0x1765>
  402931:	mov    DWORD PTR [rcx+0x4c],eax
  402934:	ret    
  402935:	mov    DWORD PTR [rdx+0x24],0x0
  40293c:	mov    eax,DWORD PTR [rcx+0x4c]
  40293f:	test   esi,esi
  402941:	js     402934 <strstr@plt+0x1764>
  402943:	test   eax,eax
  402945:	jne    402934 <strstr@plt+0x1764>
  402947:	mov    rax,QWORD PTR [rcx+0x38]
  40294b:	movsxd rdx,esi
  40294e:	lea    rdx,[rdx+rdx*4]
  402952:	lea    rdx,[rcx+rdx*8]
  402956:	add    rdx,0x50
  40295a:	cmp    rax,rdx
  40295d:	je     402977 <strstr@plt+0x17a7>
  40295f:	sub    rax,rcx
  402962:	add    rax,0xffffffffffffffb0
  402966:	shr    rax,0x3
  40296a:	imul   eax,eax,0xcccccccd
  402970:	or     eax,0x3000000
  402975:	jmp    402931 <strstr@plt+0x1761>
  402977:	xor    eax,eax
  402979:	ret    
  40297a:	nop    WORD PTR [rax+rax*1+0x0]
  402980:	push   rbx
  402981:	mov    rbx,rdx
  402984:	mov    rax,rsi
  402987:	mov    rcx,QWORD PTR [rdi+0x10]
  40298b:	mov    esi,0x1
  402990:	mov    rdi,rax
  402993:	call   4011b0 <fwrite@plt>
  402998:	cmp    rax,rbx
  40299b:	jne    40299f <strstr@plt+0x17cf>
  40299d:	pop    rbx
  40299e:	ret    
  40299f:	mov    rax,QWORD PTR [rip+0x1064a]        # 412ff0 <strstr@plt+0x11e20>
  4029a6:	mov    rbx,QWORD PTR [rax]
  4029a9:	call   401040 <__errno_location@plt>
  4029ae:	mov    edi,DWORD PTR [rax]
  4029b0:	call   4011c0 <strerror@plt>
  4029b5:	lea    rsi,[rip+0xa1dc]        # 40cb98 <strstr@plt+0xb9c8>
  4029bc:	mov    rdi,rbx
  4029bf:	mov    rdx,rax
  4029c2:	xor    eax,eax
  4029c4:	call   401120 <fprintf@plt>
  4029c9:	mov    edi,0x1
  4029ce:	call   4011a0 <exit@plt>
  4029d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029dd:	nop    DWORD PTR [rax]
  4029e0:	push   rbp
  4029e1:	push   r15
  4029e3:	push   r14
  4029e5:	push   r13
  4029e7:	push   r12
  4029e9:	push   rbx
  4029ea:	sub    rsp,0xb08
  4029f1:	mov    rbx,rsi
  4029f4:	mov    DWORD PTR [rsp+0x18],0xffffffff
  4029fc:	lea    rax,[rip+0xcad6]        # 40f4d9 <strstr@plt+0xe309>
  402a03:	mov    QWORD PTR [rsp+0x28],rax
  402a08:	mov    rax,QWORD PTR [rsi+0x8]
  402a0c:	test   rax,rax
  402a0f:	je     403b81 <strstr@plt+0x29b1>
  402a15:	mov    r13d,0x1
  402a1b:	mov    ecx,0xffffffff
  402a20:	lea    rsi,[rip+0xabdb]        # 40d602 <strstr@plt+0xc432>
  402a27:	lea    r12,[rip+0xb455]        # 40de83 <strstr@plt+0xccb3>
  402a2e:	lea    r15,[rip+0xabea]        # 40d61f <strstr@plt+0xc44f>
  402a35:	lea    r14,[rip+0xabe9]        # 40d625 <strstr@plt+0xc455>
  402a3c:	cmp    BYTE PTR [rax],0x2d
  402a3f:	jne    402c1b <strstr@plt+0x1a4b>
  402a45:	movsx  edx,BYTE PTR [rax+0x1]
  402a49:	cmp    edx,0x6c
  402a4c:	jle    402c01 <strstr@plt+0x1a31>
  402a52:	cmp    edx,0x6d
  402a55:	jne    402b70 <strstr@plt+0x19a0>
  402a5b:	cmp    BYTE PTR [rax+0x2],0x0
  402a5f:	jne    403b8a <strstr@plt+0x29ba>
  402a65:	inc    r13d
  402a68:	movsxd rax,r13d
  402a6b:	mov    rbp,QWORD PTR [rbx+rax*8]
  402a6f:	test   rbp,rbp
  402a72:	je     403b8a <strstr@plt+0x29ba>
  402a78:	mov    rdi,rbp
  402a7b:	call   401100 <strcmp@plt>
  402a80:	test   eax,eax
  402a82:	je     402b9d <strstr@plt+0x19cd>
  402a88:	mov    rdi,rbp
  402a8b:	lea    rsi,[rip+0xab77]        # 40d609 <strstr@plt+0xc439>
  402a92:	call   401100 <strcmp@plt>
  402a97:	test   eax,eax
  402a99:	je     402ba1 <strstr@plt+0x19d1>
  402a9f:	mov    rdi,rbp
  402aa2:	lea    rsi,[rip+0xab68]        # 40d611 <strstr@plt+0xc441>
  402aa9:	call   401100 <strcmp@plt>
  402aae:	test   eax,eax
  402ab0:	je     402ba8 <strstr@plt+0x19d8>
  402ab6:	mov    rdi,rbp
  402ab9:	lea    rsi,[rip+0xab59]        # 40d619 <strstr@plt+0xc449>
  402ac0:	call   401100 <strcmp@plt>
  402ac5:	test   eax,eax
  402ac7:	je     402baf <strstr@plt+0x19df>
  402acd:	mov    rdi,rbp
  402ad0:	mov    rsi,r12
  402ad3:	call   401100 <strcmp@plt>
  402ad8:	test   eax,eax
  402ada:	je     402bb6 <strstr@plt+0x19e6>
  402ae0:	mov    rdi,rbp
  402ae3:	mov    rsi,r15
  402ae6:	call   401100 <strcmp@plt>
  402aeb:	test   eax,eax
  402aed:	je     402bbd <strstr@plt+0x19ed>
  402af3:	mov    rdi,rbp
  402af6:	mov    rsi,r14
  402af9:	call   401100 <strcmp@plt>
  402afe:	test   eax,eax
  402b00:	je     402bc4 <strstr@plt+0x19f4>
  402b06:	mov    rdi,rbp
  402b09:	lea    rsi,[rip+0xab1b]        # 40d62b <strstr@plt+0xc45b>
  402b10:	call   401100 <strcmp@plt>
  402b15:	test   eax,eax
  402b17:	je     402bcb <strstr@plt+0x19fb>
  402b1d:	mov    rdi,rbp
  402b20:	lea    rsi,[rip+0xab0b]        # 40d632 <strstr@plt+0xc462>
  402b27:	call   401100 <strcmp@plt>
  402b2c:	test   eax,eax
  402b2e:	je     402bd2 <strstr@plt+0x1a02>
  402b34:	mov    rdi,rbp
  402b37:	lea    rsi,[rip+0xaafb]        # 40d639 <strstr@plt+0xc469>
  402b3e:	call   401100 <strcmp@plt>
  402b43:	test   eax,eax
  402b45:	je     402bd9 <strstr@plt+0x1a09>
  402b4b:	mov    rdi,rbp
  402b4e:	lea    rsi,[rip+0xaaea]        # 40d63f <strstr@plt+0xc46f>
  402b55:	call   401100 <strcmp@plt>
  402b5a:	mov    ecx,0xa
  402b5f:	test   eax,eax
  402b61:	je     402be0 <strstr@plt+0x1a10>
  402b63:	jmp    403b8a <strstr@plt+0x29ba>
  402b68:	nop    DWORD PTR [rax+rax*1+0x0]
  402b70:	cmp    edx,0x6f
  402b73:	jne    403b8a <strstr@plt+0x29ba>
  402b79:	cmp    BYTE PTR [rax+0x2],0x0
  402b7d:	jne    403b8a <strstr@plt+0x29ba>
  402b83:	inc    r13d
  402b86:	movsxd rax,r13d
  402b89:	mov    rax,QWORD PTR [rbx+rax*8]
  402b8d:	test   rax,rax
  402b90:	je     403b8a <strstr@plt+0x29ba>
  402b96:	mov    QWORD PTR [rsp+0x28],rax
  402b9b:	jmp    402beb <strstr@plt+0x1a1b>
  402b9d:	xor    ecx,ecx
  402b9f:	jmp    402be0 <strstr@plt+0x1a10>
  402ba1:	mov    ecx,0x1
  402ba6:	jmp    402be0 <strstr@plt+0x1a10>
  402ba8:	mov    ecx,0x2
  402bad:	jmp    402be0 <strstr@plt+0x1a10>
  402baf:	mov    ecx,0x3
  402bb4:	jmp    402be0 <strstr@plt+0x1a10>
  402bb6:	mov    ecx,0x4
  402bbb:	jmp    402be0 <strstr@plt+0x1a10>
  402bbd:	mov    ecx,0x5
  402bc2:	jmp    402be0 <strstr@plt+0x1a10>
  402bc4:	mov    ecx,0x6
  402bc9:	jmp    402be0 <strstr@plt+0x1a10>
  402bcb:	mov    ecx,0x7
  402bd0:	jmp    402be0 <strstr@plt+0x1a10>
  402bd2:	mov    ecx,0x8
  402bd7:	jmp    402be0 <strstr@plt+0x1a10>
  402bd9:	mov    ecx,0x9
  402bde:	xchg   ax,ax
  402be0:	mov    DWORD PTR [rsp+0x18],ecx
  402be4:	lea    rsi,[rip+0xaa17]        # 40d602 <strstr@plt+0xc432>
  402beb:	movsxd rax,r13d
  402bee:	inc    r13d
  402bf1:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  402bf6:	test   rax,rax
  402bf9:	jne    402a3c <strstr@plt+0x186c>
  402bff:	jmp    402c1b <strstr@plt+0x1a4b>
  402c01:	test   edx,edx
  402c03:	je     402c1b <strstr@plt+0x1a4b>
  402c05:	cmp    edx,0x2d
  402c08:	jne    403b8a <strstr@plt+0x29ba>
  402c0e:	cmp    BYTE PTR [rax+0x2],0x0
  402c12:	jne    403b8a <strstr@plt+0x29ba>
  402c18:	inc    r13d
  402c1b:	movsxd rax,r13d
  402c1e:	lea    rax,[rbx+rax*8]
  402c22:	mov    QWORD PTR [rsp+0x30],rax
  402c27:	cmp    ecx,0xffffffff
  402c2a:	je     403b8a <strstr@plt+0x29ba>
  402c30:	mov    DWORD PTR [rsp+0x4c],0xa3
  402c38:	mov    edi,0x518
  402c3d:	call   401150 <malloc@plt>
  402c42:	mov    rbx,rax
  402c45:	mov    QWORD PTR [rsp+0x60],rax
  402c4a:	mov    edx,0x518
  402c4f:	mov    rdi,rax
  402c52:	xor    esi,esi
  402c54:	call   4010c0 <memset@plt>
  402c59:	mov    DWORD PTR [rsp+0x54],0x0
  402c61:	lea    rax,[rip+0xf968]        # 4125d0 <strstr@plt+0x11400>
  402c68:	mov    QWORD PTR [rsp+0x88],rax
  402c70:	mov    edi,0x128
  402c75:	call   401150 <malloc@plt>
  402c7a:	mov    QWORD PTR [rsp+0x70],rax
  402c7f:	vpcmpeqd ymm0,ymm0,ymm0
  402c83:	vmovdqu YMMWORD PTR [rip+0x10485],ymm0        # 413110 <strstr@plt+0x11f40>
  402c8b:	vmovdqu YMMWORD PTR [rip+0x1049d],ymm0        # 413130 <strstr@plt+0x11f60>
  402c93:	vmovdqu YMMWORD PTR [rip+0x104b5],ymm0        # 413150 <strstr@plt+0x11f80>
  402c9b:	mov    DWORD PTR [rsp+0x58],0x0
  402ca3:	vmovdqu YMMWORD PTR [rip+0x104c5],ymm0        # 413170 <strstr@plt+0x11fa0>
  402cab:	vmovdqu YMMWORD PTR [rip+0x104d1],ymm0        # 413184 <strstr@plt+0x11fb4>
  402cb3:	lea    rax,[rip+0xaa51]        # 40d70b <strstr@plt+0xc53b>
  402cba:	vmovq  xmm0,rax
  402cbf:	lea    rax,[rip+0xaa38]        # 40d6fe <strstr@plt+0xc52e>
  402cc6:	vmovq  xmm1,rax
  402ccb:	vpunpcklqdq xmm0,xmm1,xmm0
  402ccf:	vmovdqu XMMWORD PTR [rsp+0x90],xmm0
  402cd8:	mov    edi,0x100
  402cdd:	vzeroupper 
  402ce0:	call   401150 <malloc@plt>
  402ce5:	mov    QWORD PTR [rsp+0x10],rax
  402cea:	test   rax,rax
  402ced:	je     403b77 <strstr@plt+0x29a7>
  402cf3:	mov    rbp,rax
  402cf6:	mov    QWORD PTR [rax],0x100
  402cfd:	vpxor  xmm0,xmm0,xmm0
  402d01:	vmovdqu XMMWORD PTR [rax+0x18],xmm0
  402d06:	mov    QWORD PTR [rax+0x28],0x0
  402d0e:	mov    DWORD PTR [rax+0x48],0x2
  402d15:	mov    DWORD PTR [rax+0x6c],0x0
  402d1c:	vmovdqu XMMWORD PTR [rax+0x80],xmm0
  402d24:	vmovdqu XMMWORD PTR [rax+0x50],xmm0
  402d29:	mov    QWORD PTR [rax+0x60],0x0
  402d31:	mov    QWORD PTR [rax+0x78],0xfffffffffc000000
  402d39:	mov    DWORD PTR [rax+0x94],0x0
  402d43:	add    rbx,0xffffffffffffffb0
  402d47:	mov    QWORD PTR [rax+0x30],rbx
  402d4b:	mov    edi,0x400
  402d50:	call   401150 <malloc@plt>
  402d55:	mov    QWORD PTR [rbp+0x10],rax
  402d59:	test   rax,rax
  402d5c:	je     403b77 <strstr@plt+0x29a7>
  402d62:	mov    QWORD PTR [rbp+0x18],0x400
  402d6a:	lea    rcx,[rip+0x655f]        # 4092d0 <strstr@plt+0x8100>
  402d71:	mov    QWORD PTR [rbp+0x8],rcx
  402d75:	mov    DWORD PTR [rbp+0x4c],0x0
  402d7c:	mov    rcx,rbp
  402d7f:	add    rcx,0x50
  402d83:	mov    QWORD PTR [rbp+0x38],rcx
  402d87:	mov    edx,0x400
  402d8c:	mov    rdi,rax
  402d8f:	xor    esi,esi
  402d91:	call   4010c0 <memset@plt>
  402d96:	mov    DWORD PTR [rbp+0x68],0x0
  402d9d:	mov    DWORD PTR [rbp+0x70],0x0
  402da4:	mov    DWORD PTR [rbp+0x90],0x1000000
  402dae:	mov    DWORD PTR [rbp+0x98],0x0
  402db8:	lea    rdi,[rsp+0x10]
  402dbd:	call   403d50 <strstr@plt+0x2b80>
  402dc2:	mov    DWORD PTR [rsp+0x48],0x5d
  402dca:	mov    rax,QWORD PTR [rsp+0x10]
  402dcf:	cmp    DWORD PTR [rax+0x4c],0x0
  402dd3:	jne    402e87 <strstr@plt+0x1cb7>
  402dd9:	mov    rcx,QWORD PTR [rax+0x10]
  402ddd:	mov    edx,0x21000001
  402de2:	cmp    DWORD PTR [rcx+0x4],0x0
  402de6:	jg     402e84 <strstr@plt+0x1cb4>
  402dec:	mov    DWORD PTR [rcx+0x4],0x0
  402df3:	mov    edx,0x21000002
  402df8:	cmp    DWORD PTR [rcx+0x8],0x0
  402dfc:	jg     402e84 <strstr@plt+0x1cb4>
  402e02:	mov    DWORD PTR [rcx+0x8],0x0
  402e09:	mov    edx,0x21000003
  402e0e:	cmp    DWORD PTR [rcx+0xc],0x0
  402e12:	jg     402e84 <strstr@plt+0x1cb4>
  402e14:	mov    DWORD PTR [rcx+0xc],0x0
  402e1b:	mov    edx,0x21000004
  402e20:	cmp    DWORD PTR [rcx+0x10],0x0
  402e24:	jg     402e84 <strstr@plt+0x1cb4>
  402e26:	mov    DWORD PTR [rcx+0x10],0x0
  402e2d:	mov    edx,0x21000005
  402e32:	cmp    DWORD PTR [rcx+0x14],0x0
  402e36:	jg     402e84 <strstr@plt+0x1cb4>
  402e38:	mov    DWORD PTR [rcx+0x14],0x0
  402e3f:	mov    edx,0x21000006
  402e44:	cmp    DWORD PTR [rcx+0x18],0x0
  402e48:	jg     402e84 <strstr@plt+0x1cb4>
  402e4a:	mov    DWORD PTR [rcx+0x18],0x0
  402e51:	mov    edx,0x21000007
  402e56:	cmp    DWORD PTR [rcx+0x1c],0x0
  402e5a:	jg     402e84 <strstr@plt+0x1cb4>
  402e5c:	mov    DWORD PTR [rcx+0x1c],0x0
  402e63:	mov    edx,0x21000008
  402e68:	cmp    DWORD PTR [rcx+0x20],0x0
  402e6c:	jg     402e84 <strstr@plt+0x1cb4>
  402e6e:	mov    DWORD PTR [rcx+0x20],0x0
  402e75:	mov    edx,0x21000009
  402e7a:	cmp    DWORD PTR [rcx+0x24],0x0
  402e7e:	jle    403b46 <strstr@plt+0x2976>
  402e84:	mov    DWORD PTR [rax+0x4c],edx
  402e87:	lea    rsi,[rsp+0x40]
  402e8c:	lea    rdi,[rsp+0x10]
  402e91:	call   401bf0 <strstr@plt+0xa20>
  402e96:	test   eax,eax
  402e98:	jne    4030ff <strstr@plt+0x1f2f>
  402e9e:	mov    rdi,QWORD PTR [rsp+0x40]
  402ea3:	call   401150 <malloc@plt>
  402ea8:	mov    QWORD PTR [rsp+0x38],rax
  402ead:	lea    rdi,[rsp+0x10]
  402eb2:	mov    rsi,rax
  402eb5:	call   402310 <strstr@plt+0x1140>
  402eba:	test   eax,eax
  402ebc:	jne    4030ff <strstr@plt+0x1f2f>
  402ec2:	cmp    DWORD PTR [rsp+0x18],0x2
  402ec7:	lea    rax,[rip+0xc335]        # 40f203 <strstr@plt+0xe033>
  402ece:	lea    rcx,[rip+0xbc28]        # 40eafd <strstr@plt+0xd92d>
  402ed5:	mov    rdx,rcx
  402ed8:	cmove  rdx,rax
  402edc:	lea    rsi,[rip+0xa4fc]        # 40d3df <strstr@plt+0xc20f>
  402ee3:	lea    r8,[rip+0xa825]        # 40d70f <strstr@plt+0xc53f>
  402eea:	lea    rbx,[rsp+0xa00]
  402ef2:	mov    rdi,rbx
  402ef5:	xor    eax,eax
  402ef7:	call   401190 <sprintf@plt>
  402efc:	mov    rdi,rbx
  402eff:	mov    esi,0x40
  402f04:	call   4010b0 <strchr@plt>
  402f09:	test   rax,rax
  402f0c:	je     402f11 <strstr@plt+0x1d41>
  402f0e:	mov    BYTE PTR [rax],0x0
  402f11:	lea    rbx,[rsp+0xa00]
  402f19:	mov    rdi,rbx
  402f1c:	call   4010a0 <strlen@plt>
  402f21:	lea    rdi,[rax+0x1]
  402f25:	call   401150 <malloc@plt>
  402f2a:	mov    rbp,rax
  402f2d:	mov    rdi,rax
  402f30:	mov    rsi,rbx
  402f33:	call   401060 <strcpy@plt>
  402f38:	mov    QWORD PTR [rsp+0x80],rbp
  402f40:	movsxd r14,DWORD PTR [rsp+0x48]
  402f45:	mov    ebp,DWORD PTR [rsp+0x4c]
  402f49:	lea    eax,[r14+rbp*1]
  402f4d:	add    eax,0x1
  402f50:	movsxd rdi,eax
  402f53:	shl    rdi,0x4
  402f57:	call   401150 <malloc@plt>
  402f5c:	mov    rbx,rax
  402f5f:	mov    QWORD PTR [rsp+0x68],rax
  402f64:	mov    DWORD PTR [rsp+0x50],0x0
  402f6c:	lea    rdi,[r14*4+0x0]
  402f74:	call   401150 <malloc@plt>
  402f79:	mov    QWORD PTR [rsp+0x78],rax
  402f7e:	test   r14,r14
  402f81:	jle    403108 <strstr@plt+0x1f38>
  402f87:	lea    r13,[rip+0xa791]        # 40d71f <strstr@plt+0xc54f>
  402f8e:	lea    r12,[rsp+0xa00]
  402f96:	xor    r14d,r14d
  402f99:	jmp    402fd9 <strstr@plt+0x1e09>
  402f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	mov    rdi,r12
  402fa3:	call   4010a0 <strlen@plt>
  402fa8:	lea    rdi,[rax+0x1]
  402fac:	call   401150 <malloc@plt>
  402fb1:	mov    r15,rax
  402fb4:	mov    rdi,rax
  402fb7:	mov    rsi,r12
  402fba:	call   401060 <strcpy@plt>
  402fbf:	mov    rbx,QWORD PTR [rsp+0x68]
  402fc4:	mov    QWORD PTR [rbx+rbp*1],r15
  402fc8:	inc    r14
  402fcb:	movsxd rax,DWORD PTR [rsp+0x48]
  402fd0:	cmp    r14,rax
  402fd3:	jge    403104 <strstr@plt+0x1f34>
  402fd9:	mov    rax,QWORD PTR [rsp+0x10]
  402fde:	lea    rcx,[r14*4+0x0]
  402fe6:	cmp    rcx,QWORD PTR [rax+0x28]
  402fea:	jae    4030d3 <strstr@plt+0x1f03>
  402ff0:	mov    rcx,QWORD PTR [rax+0x20]
  402ff4:	movsxd rcx,DWORD PTR [rcx+r14*4]
  402ff8:	test   rcx,rcx
  402ffb:	jns    4030d3 <strstr@plt+0x1f03>
  403001:	mov    edx,ecx
  403003:	neg    edx
  403005:	sar    edx,0x18
  403008:	movsxd rdx,edx
  40300b:	lea    rdx,[rdx+rdx*4]
  40300f:	mov    rax,QWORD PTR [rax+rdx*8+0x50]
  403014:	shl    rcx,0x2
  403018:	sub    rax,rcx
  40301b:	mov    eax,DWORD PTR [rax]
  40301d:	test   eax,eax
  40301f:	js     4030d3 <strstr@plt+0x1f03>
  403025:	mov    rcx,QWORD PTR [rsp+0x78]
  40302a:	mov    DWORD PTR [rcx+r14*4],eax
  40302e:	lea    rcx,[rip+0xea5b]        # 411a90 <strstr@plt+0x108c0>
  403035:	mov    r8,QWORD PTR [rcx+r14*8]
  403039:	movsxd rbp,DWORD PTR [rsp+0x50]
  40303e:	lea    ecx,[rbp+0x1]
  403041:	mov    DWORD PTR [rsp+0x50],ecx
  403045:	test   rbp,rbp
  403048:	jle    403082 <strstr@plt+0x1eb2>
  40304a:	mov    rcx,rbp
  40304d:	shl    rcx,0x4
  403051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40305b:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	cmp    DWORD PTR [rbx+rcx*1-0x8],eax
  403064:	jle    403082 <strstr@plt+0x1eb2>
  403066:	dec    rbp
  403069:	vmovdqu xmm0,XMMWORD PTR [rbx+rcx*1-0x10]
  40306f:	vmovdqu XMMWORD PTR [rbx+rcx*1],xmm0
  403074:	mov    rbx,QWORD PTR [rsp+0x68]
  403079:	add    rcx,0xfffffffffffffff0
  40307d:	test   rbp,rbp
  403080:	jg     403060 <strstr@plt+0x1e90>
  403082:	shl    rbp,0x4
  403086:	mov    DWORD PTR [rbx+rbp*1+0x8],eax
  40308a:	cmp    DWORD PTR [rsp+0x18],0x2
  40308f:	lea    rdx,[rip+0xba67]        # 40eafd <strstr@plt+0xd92d>
  403096:	lea    rax,[rip+0xc166]        # 40f203 <strstr@plt+0xe033>
  40309d:	cmove  rdx,rax
  4030a1:	mov    rdi,r12
  4030a4:	lea    rsi,[rip+0xa334]        # 40d3df <strstr@plt+0xc20f>
  4030ab:	mov    rcx,r13
  4030ae:	xor    eax,eax
  4030b0:	call   401190 <sprintf@plt>
  4030b5:	mov    rdi,r12
  4030b8:	mov    esi,0x40
  4030bd:	call   4010b0 <strchr@plt>
  4030c2:	test   rax,rax
  4030c5:	je     402fa0 <strstr@plt+0x1dd0>
  4030cb:	mov    BYTE PTR [rax],0x0
  4030ce:	jmp    402fa0 <strstr@plt+0x1dd0>
  4030d3:	or     r14d,0x22000000
  4030da:	mov    rax,QWORD PTR [rip+0xff0f]        # 412ff0 <strstr@plt+0x11e20>
  4030e1:	mov    rdi,QWORD PTR [rax]
  4030e4:	lea    rsi,[rip+0xa278]        # 40d363 <strstr@plt+0xc193>
  4030eb:	mov    edx,r14d
  4030ee:	xor    eax,eax
  4030f0:	call   401120 <fprintf@plt>
  4030f5:	mov    eax,0x1
  4030fa:	jmp    403a71 <strstr@plt+0x28a1>
  4030ff:	mov    r14d,eax
  403102:	jmp    4030da <strstr@plt+0x1f0a>
  403104:	mov    ebp,DWORD PTR [rsp+0x4c]
  403108:	test   ebp,ebp
  40310a:	jle    403279 <strstr@plt+0x20a9>
  403110:	lea    r12,[rsp+0xa00]
  403118:	xor    r13d,r13d
  40311b:	jmp    40315b <strstr@plt+0x1f8b>
  40311d:	nop    DWORD PTR [rax]
  403120:	mov    rdi,r12
  403123:	call   4010a0 <strlen@plt>
  403128:	lea    rdi,[rax+0x1]
  40312c:	call   401150 <malloc@plt>
  403131:	mov    rbp,rax
  403134:	mov    rdi,rax
  403137:	mov    rsi,r12
  40313a:	call   401060 <strcpy@plt>
  40313f:	mov    rbx,QWORD PTR [rsp+0x68]
  403144:	mov    QWORD PTR [rbx+r15*1],rbp
  403148:	mov    ebp,DWORD PTR [rsp+0x4c]
  40314c:	inc    r13
  40314f:	movsxd rax,ebp
  403152:	cmp    r13,rax
  403155:	jge    403279 <strstr@plt+0x20a9>
  40315b:	lea    rax,[rip+0xf46e]        # 4125d0 <strstr@plt+0x11400>
  403162:	mov    r14,QWORD PTR [rax+r13*8]
  403166:	mov    rdi,r14
  403169:	call   4010a0 <strlen@plt>
  40316e:	mov    rcx,QWORD PTR [rsp+0x60]
  403173:	mov    rcx,QWORD PTR [rcx+r13*8]
  403177:	test   rcx,rcx
  40317a:	je     403b52 <strstr@plt+0x2982>
  403180:	cmp    eax,0x2
  403183:	jl     4031c0 <strstr@plt+0x1ff0>
  403185:	shl    rax,0x20
  403189:	movabs rdx,0xfffffffe00000000
  403193:	add    rdx,rax
  403196:	sar    rdx,0x20
  40319a:	cmp    BYTE PTR [r14+rdx*1],0x5f
  40319f:	jne    4031c0 <strstr@plt+0x1ff0>
  4031a1:	movabs rdx,0xffffffff00000000
  4031ab:	add    rax,rdx
  4031ae:	sar    rax,0x20
  4031b2:	cmp    BYTE PTR [r14+rax*1],0x5a
  4031b7:	je     40314c <strstr@plt+0x1f7c>
  4031b9:	nop    DWORD PTR [rax+0x0]
  4031c0:	sub    ecx,DWORD PTR [rsp+0x38]
  4031c4:	movsxd r15,DWORD PTR [rsp+0x50]
  4031c9:	lea    eax,[r15+0x1]
  4031cd:	mov    DWORD PTR [rsp+0x50],eax
  4031d1:	test   r15,r15
  4031d4:	jle    403220 <strstr@plt+0x2050>
  4031d6:	lea    rdx,[r15-0x1]
  4031da:	mov    rax,rdx
  4031dd:	shl    rax,0x4
  4031e1:	cmp    DWORD PTR [rbx+rax*1+0x8],ecx
  4031e5:	jle    403220 <strstr@plt+0x2050>
  4031e7:	shl    r15,0x4
  4031eb:	mov    rax,r15
  4031ee:	xchg   ax,ax
  4031f0:	mov    r15,rdx
  4031f3:	vmovdqu xmm0,XMMWORD PTR [rbx+rax*1-0x10]
  4031f9:	vmovdqu XMMWORD PTR [rbx+rax*1],xmm0
  4031fe:	mov    rbx,QWORD PTR [rsp+0x68]
  403203:	test   rdx,rdx
  403206:	jle    403220 <strstr@plt+0x2050>
  403208:	lea    rdx,[r15-0x1]
  40320c:	cmp    DWORD PTR [rbx+rax*1-0x18],ecx
  403210:	lea    rax,[rax-0x10]
  403214:	jg     4031f0 <strstr@plt+0x2020>
  403216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403220:	shl    r15,0x4
  403224:	mov    DWORD PTR [rbx+r15*1+0x8],ecx
  403229:	cmp    DWORD PTR [rsp+0x18],0x2
  40322e:	lea    rdx,[rip+0xb8c8]        # 40eafd <strstr@plt+0xd92d>
  403235:	lea    rax,[rip+0xbfc7]        # 40f203 <strstr@plt+0xe033>
  40323c:	cmove  rdx,rax
  403240:	mov    rdi,r12
  403243:	lea    rsi,[rip+0xa195]        # 40d3df <strstr@plt+0xc20f>
  40324a:	lea    rcx,[rip+0xa4f1]        # 40d742 <strstr@plt+0xc572>
  403251:	mov    r8,r14
  403254:	xor    eax,eax
  403256:	call   401190 <sprintf@plt>
  40325b:	mov    rdi,r12
  40325e:	mov    esi,0x40
  403263:	call   4010b0 <strchr@plt>
  403268:	test   rax,rax
  40326b:	je     403120 <strstr@plt+0x1f50>
  403271:	mov    BYTE PTR [rax],0x0
  403274:	jmp    403120 <strstr@plt+0x1f50>
  403279:	mov    eax,DWORD PTR [rsp+0x40]
  40327d:	movsxd rbp,DWORD PTR [rsp+0x50]
  403282:	lea    ecx,[rbp+0x1]
  403285:	mov    DWORD PTR [rsp+0x50],ecx
  403289:	test   rbp,rbp
  40328c:	jle    4032d6 <strstr@plt+0x2106>
  40328e:	lea    rdx,[rbp-0x1]
  403292:	mov    rcx,rdx
  403295:	shl    rcx,0x4
  403299:	cmp    DWORD PTR [rbx+rcx*1+0x8],eax
  40329d:	jle    4032d6 <strstr@plt+0x2106>
  40329f:	shl    rbp,0x4
  4032a3:	mov    rcx,rbp
  4032a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032b0:	mov    rbp,rdx
  4032b3:	vmovdqu xmm0,XMMWORD PTR [rbx+rcx*1-0x10]
  4032b9:	vmovdqu XMMWORD PTR [rbx+rcx*1],xmm0
  4032be:	mov    rbx,QWORD PTR [rsp+0x68]
  4032c3:	test   rdx,rdx
  4032c6:	jle    4032d6 <strstr@plt+0x2106>
  4032c8:	lea    rdx,[rbp-0x1]
  4032cc:	cmp    DWORD PTR [rbx+rcx*1-0x18],eax
  4032d0:	lea    rcx,[rcx-0x10]
  4032d4:	jg     4032b0 <strstr@plt+0x20e0>
  4032d6:	shl    rbp,0x4
  4032da:	mov    DWORD PTR [rbx+rbp*1+0x8],eax
  4032de:	cmp    DWORD PTR [rsp+0x18],0x2
  4032e3:	lea    rcx,[rip+0xb813]        # 40eafd <strstr@plt+0xd92d>
  4032ea:	lea    rdx,[rip+0xbf12]        # 40f203 <strstr@plt+0xe033>
  4032f1:	cmovne rdx,rcx
  4032f5:	lea    rsi,[rip+0xa0e3]        # 40d3df <strstr@plt+0xc20f>
  4032fc:	lea    rbx,[rsp+0xa00]
  403304:	mov    rdi,rbx
  403307:	mov    r8,rcx
  40330a:	xor    eax,eax
  40330c:	call   401190 <sprintf@plt>
  403311:	mov    rdi,rbx
  403314:	mov    esi,0x40
  403319:	call   4010b0 <strchr@plt>
  40331e:	test   rax,rax
  403321:	je     403326 <strstr@plt+0x2156>
  403323:	mov    BYTE PTR [rax],0x0
  403326:	lea    r14,[rsp+0xa00]
  40332e:	mov    rdi,r14
  403331:	call   4010a0 <strlen@plt>
  403336:	lea    rdi,[rax+0x1]
  40333a:	call   401150 <malloc@plt>
  40333f:	mov    rbx,rax
  403342:	mov    rdi,rax
  403345:	mov    rsi,r14
  403348:	call   401060 <strcpy@plt>
  40334d:	mov    rax,QWORD PTR [rsp+0x68]
  403352:	mov    QWORD PTR [rax+rbp*1],rbx
  403356:	dec    DWORD PTR [rsp+0x50]
  40335a:	mov    r15,QWORD PTR [rsp+0x10]
  40335f:	mov    eax,DWORD PTR [r15+0x48]
  403363:	test   eax,eax
  403365:	jle    403392 <strstr@plt+0x21c2>
  403367:	lea    rbx,[r15+0x58]
  40336b:	xor    ebp,ebp
  40336d:	jmp    40337f <strstr@plt+0x21af>
  40336f:	nop
  403370:	inc    rbp
  403373:	movsxd rcx,eax
  403376:	add    rbx,0x28
  40337a:	cmp    rbp,rcx
  40337d:	jge    403392 <strstr@plt+0x21c2>
  40337f:	mov    rdi,QWORD PTR [rbx]
  403382:	test   rdi,rdi
  403385:	je     403370 <strstr@plt+0x21a0>
  403387:	call   401030 <free@plt>
  40338c:	mov    eax,DWORD PTR [r15+0x48]
  403390:	jmp    403370 <strstr@plt+0x21a0>
  403392:	mov    rdi,QWORD PTR [r15+0x20]
  403396:	test   rdi,rdi
  403399:	je     4033a0 <strstr@plt+0x21d0>
  40339b:	call   401030 <free@plt>
  4033a0:	mov    rdi,QWORD PTR [r15+0x10]
  4033a4:	test   rdi,rdi
  4033a7:	je     4033ae <strstr@plt+0x21de>
  4033a9:	call   401030 <free@plt>
  4033ae:	mov    rdi,r15
  4033b1:	call   401030 <free@plt>
  4033b6:	mov    ecx,DWORD PTR [rsp+0x18]
  4033ba:	mov    rdi,QWORD PTR [rsp+0x28]
  4033bf:	cmp    BYTE PTR [rdi],0x2d
  4033c2:	jne    4033ce <strstr@plt+0x21fe>
  4033c4:	cmp    BYTE PTR [rdi+0x1],0x0
  4033c8:	je     403538 <strstr@plt+0x2368>
  4033ce:	add    ecx,0xfffffffd
  4033d1:	cmp    ecx,0x1
  4033d4:	lea    rax,[rip+0xaaaa]        # 40de85 <strstr@plt+0xccb5>
  4033db:	lea    rsi,[rip+0x9f99]        # 40d37b <strstr@plt+0xc1ab>
  4033e2:	cmova  rsi,rax
  4033e6:	call   401180 <fopen@plt>
  4033eb:	mov    QWORD PTR [rsp+0x20],rax
  4033f0:	test   rax,rax
  4033f3:	je     403b8f <strstr@plt+0x29bf>
  4033f9:	mov    ecx,DWORD PTR [rsp+0x18]
  4033fd:	cmp    ecx,0xa
  403400:	ja     403a4c <strstr@plt+0x287c>
  403406:	mov    ecx,ecx
  403408:	lea    rdx,[rip+0x5d15]        # 409124 <strstr@plt+0x7f54>
  40340f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  403413:	add    rcx,rdx
  403416:	jmp    rcx
  403418:	lea    rdi,[rsp+0x10]
  40341d:	call   406000 <strstr@plt+0x4e30>
  403422:	mov    eax,DWORD PTR [rsp+0x18]
  403426:	cmp    eax,0x2
  403429:	je     403555 <strstr@plt+0x2385>
  40342f:	test   eax,eax
  403431:	jne    403a4c <strstr@plt+0x287c>
  403437:	mov    rax,QWORD PTR [rsp+0x60]
  40343c:	mov    ebx,DWORD PTR [rax+0x4f8]
  403442:	sub    ebx,DWORD PTR [rsp+0x38]
  403446:	mov    rcx,QWORD PTR [rsp+0x20]
  40344b:	lea    rdi,[rip+0xaae3]        # 40df35 <strstr@plt+0xcd65>
  403452:	mov    esi,0x24
  403457:	mov    edx,0x1
  40345c:	call   4011b0 <fwrite@plt>
  403461:	mov    rcx,QWORD PTR [rsp+0x20]
  403466:	lea    rdi,[rip+0xaaed]        # 40df5a <strstr@plt+0xcd8a>
  40346d:	mov    esi,0xd2
  403472:	mov    edx,0x1
  403477:	call   4011b0 <fwrite@plt>
  40347c:	mov    rdi,QWORD PTR [rsp+0x20]
  403481:	lea    rsi,[rip+0xaba5]        # 40e02d <strstr@plt+0xce5d>
  403488:	mov    edx,ebx
  40348a:	mov    ecx,0x50
  40348f:	xor    eax,eax
  403491:	call   401120 <fprintf@plt>
  403496:	mov    rdi,QWORD PTR [rsp+0x20]
  40349b:	mov    edx,DWORD PTR [rsp+0x40]
  40349f:	sub    edx,ebx
  4034a1:	lea    rsi,[rip+0xac6e]        # 40e116 <strstr@plt+0xcf46>
  4034a8:	xor    eax,eax
  4034aa:	call   401120 <fprintf@plt>
  4034af:	mov    rcx,QWORD PTR [rsp+0x20]
  4034b4:	lea    rdi,[rip+0xad30]        # 40e1eb <strstr@plt+0xd01b>
  4034bb:	mov    esi,0x22
  4034c0:	mov    edx,0x1
  4034c5:	call   4011b0 <fwrite@plt>
  4034ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4034cf:	lea    rdi,[rip+0xad38]        # 40e20e <strstr@plt+0xd03e>
  4034d6:	mov    esi,0x10d
  4034db:	mov    edx,0x1
  4034e0:	call   4011b0 <fwrite@plt>
  4034e5:	mov    rdi,QWORD PTR [rsp+0x20]
  4034ea:	lea    rsi,[rip+0xae2b]        # 40e31c <strstr@plt+0xd14c>
  4034f1:	mov    edx,ebx
  4034f3:	mov    ecx,0x50
  4034f8:	xor    eax,eax
  4034fa:	call   401120 <fprintf@plt>
  4034ff:	mov    rcx,QWORD PTR [rsp+0x20]
  403504:	lea    rdi,[rip+0xaf11]        # 40e41c <strstr@plt+0xd24c>
  40350b:	mov    esi,0xe3
  403510:	mov    edx,0x1
  403515:	call   4011b0 <fwrite@plt>
  40351a:	mov    rdi,QWORD PTR [rsp+0x20]
  40351f:	mov    edx,DWORD PTR [rsp+0x40]
  403523:	sub    edx,ebx
  403525:	lea    rsi,[rip+0xafd4]        # 40e500 <strstr@plt+0xd330>
  40352c:	xor    eax,eax
  40352e:	call   401120 <fprintf@plt>
  403533:	jmp    403a4c <strstr@plt+0x287c>
  403538:	mov    rax,QWORD PTR [rip+0xfa91]        # 412fd0 <strstr@plt+0x11e00>
  40353f:	mov    rax,QWORD PTR [rax]
  403542:	mov    QWORD PTR [rsp+0x20],rax
  403547:	cmp    ecx,0xa
  40354a:	jbe    403406 <strstr@plt+0x2236>
  403550:	jmp    403a4c <strstr@plt+0x287c>
  403555:	mov    rcx,QWORD PTR [rsp+0x20]
  40355a:	lea    rdi,[rip+0xb08b]        # 40e5ec <strstr@plt+0xd41c>
  403561:	mov    esi,0x4c
  403566:	mov    edx,0x1
  40356b:	call   4011b0 <fwrite@plt>
  403570:	mov    rcx,QWORD PTR [rsp+0x20]
  403575:	lea    rdi,[rip+0xb0bd]        # 40e639 <strstr@plt+0xd469>
  40357c:	mov    esi,0x11c
  403581:	mov    edx,0x1
  403586:	call   4011b0 <fwrite@plt>
  40358b:	mov    r15d,DWORD PTR [rsp+0x50]
  403590:	test   r15d,r15d
  403593:	jle    403b26 <strstr@plt+0x2956>
  403599:	xor    ebp,ebp
  40359b:	xor    r14d,r14d
  40359e:	mov    DWORD PTR [rsp+0xc],0x0
  4035a6:	jmp    4035f5 <strstr@plt+0x2425>
  4035a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035b0:	mov    rdi,QWORD PTR [rsp+0x20]
  4035b5:	lea    rsi,[rip+0xb1aa]        # 40e766 <strstr@plt+0xd596>
  4035bc:	mov    rdx,r13
  4035bf:	mov    ecx,ebx
  4035c1:	mov    r8d,ebx
  4035c4:	mov    r9d,ebx
  4035c7:	mov    eax,0x0
  4035cc:	push   rbx
  4035cd:	push   0x50
  4035cf:	push   r12
  4035d1:	push   r13
  4035d3:	push   rbx
  4035d4:	push   rbx
  4035d5:	push   rbx
  4035d6:	push   rbx
  4035d7:	call   401120 <fprintf@plt>
  4035dc:	add    rsp,0x40
  4035e0:	mov    r15d,DWORD PTR [rsp+0x50]
  4035e5:	movsxd rax,r15d
  4035e8:	add    rbp,0x10
  4035ec:	cmp    r14,rax
  4035ef:	jge    403aee <strstr@plt+0x291e>
  4035f5:	mov    rbx,r14
  4035f8:	mov    rax,QWORD PTR [rsp+0x68]
  4035fd:	inc    r14
  403600:	mov    r12d,DWORD PTR [rax+rbp*1+0x18]
  403605:	sub    r12d,DWORD PTR [rax+rbp*1+0x8]
  40360a:	je     4035e5 <strstr@plt+0x2415>
  40360c:	mov    r13,QWORD PTR [rax+rbp*1]
  403610:	mov    rdi,r13
  403613:	lea    rsi,[rip+0xb13c]        # 40e756 <strstr@plt+0xd586>
  40361a:	call   401100 <strcmp@plt>
  40361f:	test   eax,eax
  403621:	jne    4035b0 <strstr@plt+0x23e0>
  403623:	mov    eax,r12d
  403626:	mov    DWORD PTR [rsp+0xc],r12d
  40362b:	jmp    4035e5 <strstr@plt+0x2415>
  40362d:	lea    rdi,[rip+0xb49e]        # 40ead2 <strstr@plt+0xd902>
  403634:	mov    esi,0x2b
  403639:	mov    edx,0x1
  40363e:	mov    rcx,rax
  403641:	call   4011b0 <fwrite@plt>
  403646:	mov    rcx,QWORD PTR [rsp+0x20]
  40364b:	lea    rdi,[rip+0xb4ac]        # 40eafe <strstr@plt+0xd92e>
  403652:	mov    esi,0xd
  403657:	mov    edx,0x1
  40365c:	call   4011b0 <fwrite@plt>
  403661:	mov    rcx,QWORD PTR [rsp+0x20]
  403666:	lea    rdi,[rip+0xb49f]        # 40eb0c <strstr@plt+0xd93c>
  40366d:	mov    esi,0xb
  403672:	mov    edx,0x1
  403677:	call   4011b0 <fwrite@plt>
  40367c:	mov    rcx,QWORD PTR [rsp+0x20]
  403681:	lea    r15,[rip+0xe408]        # 411a90 <strstr@plt+0x108c0>
  403688:	lea    rbp,[rip+0xb489]        # 40eb18 <strstr@plt+0xd948>
  40368f:	xor    ebx,ebx
  403691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	mov    rdx,QWORD PTR [r15+rbx*8]
  4036a4:	mov    rdi,rcx
  4036a7:	mov    rsi,rbp
  4036aa:	xor    eax,eax
  4036ac:	call   401120 <fprintf@plt>
  4036b1:	inc    rbx
  4036b4:	mov    rcx,QWORD PTR [rsp+0x20]
  4036b9:	cmp    rbx,0x5d
  4036bd:	jne    4036a0 <strstr@plt+0x24d0>
  4036bf:	lea    rdi,[rip+0xb457]        # 40eb1d <strstr@plt+0xd94d>
  4036c6:	mov    esi,0x3
  4036cb:	mov    edx,0x1
  4036d0:	call   4011b0 <fwrite@plt>
  4036d5:	mov    rcx,QWORD PTR [rsp+0x20]
  4036da:	lea    rdi,[rip+0xb440]        # 40eb21 <strstr@plt+0xd951>
  4036e1:	mov    esi,0xb
  4036e6:	mov    edx,0x1
  4036eb:	call   4011b0 <fwrite@plt>
  4036f0:	mov    rcx,QWORD PTR [rsp+0x20]
  4036f5:	lea    r15,[rip+0xe684]        # 411d80 <strstr@plt+0x10bb0>
  4036fc:	lea    rbp,[rip+0xb415]        # 40eb18 <strstr@plt+0xd948>
  403703:	xor    ebx,ebx
  403705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40370f:	nop
  403710:	mov    rdx,QWORD PTR [r15+rbx*8]
  403714:	mov    rdi,rcx
  403717:	mov    rsi,rbp
  40371a:	xor    eax,eax
  40371c:	call   401120 <fprintf@plt>
  403721:	inc    rbx
  403724:	mov    rcx,QWORD PTR [rsp+0x20]
  403729:	cmp    rbx,0x5e
  40372d:	jne    403710 <strstr@plt+0x2540>
  40372f:	lea    rdi,[rip+0xb3e7]        # 40eb1d <strstr@plt+0xd94d>
  403736:	mov    esi,0x3
  40373b:	mov    edx,0x1
  403740:	call   4011b0 <fwrite@plt>
  403745:	mov    rcx,QWORD PTR [rsp+0x20]
  40374a:	lea    rdi,[rip+0xb3dc]        # 40eb2d <strstr@plt+0xd95d>
  403751:	mov    esi,0xe
  403756:	mov    edx,0x1
  40375b:	call   4011b0 <fwrite@plt>
  403760:	mov    rcx,QWORD PTR [rsp+0x20]
  403765:	lea    r15,[rip+0xe9e4]        # 412150 <strstr@plt+0x10f80>
  40376c:	lea    r12,[rip+0xb3c9]        # 40eb3c <strstr@plt+0xd96c>
  403773:	xor    ebx,ebx
  403775:	jmp    4037a1 <strstr@plt+0x25d1>
  403777:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	mov    BYTE PTR [rdx],0x0
  403783:	mov    rdi,rcx
  403786:	mov    rsi,r12
  403789:	mov    rdx,r14
  40378c:	xor    eax,eax
  40378e:	call   401120 <fprintf@plt>
  403793:	inc    rbx
  403796:	mov    rcx,QWORD PTR [rsp+0x20]
  40379b:	cmp    rbx,0xd
  40379f:	je     4037e8 <strstr@plt+0x2618>
  4037a1:	mov    rax,QWORD PTR [r15+rbx*8]
  4037a5:	mov    sil,BYTE PTR [rax]
  4037a8:	mov    rdx,r14
  4037ab:	test   sil,sil
  4037ae:	je     403780 <strstr@plt+0x25b0>
  4037b0:	inc    rax
  4037b3:	mov    rdx,r14
  4037b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037c0:	lea    edi,[rsi-0x41]
  4037c3:	lea    ebp,[rsi+0x20]
  4037c6:	cmp    dil,0x1a
  4037ca:	movzx  esi,sil
  4037ce:	movzx  edi,bpl
  4037d2:	cmovae edi,esi
  4037d5:	mov    BYTE PTR [rdx],dil
  4037d8:	inc    rdx
  4037db:	movzx  esi,BYTE PTR [rax]
  4037de:	inc    rax
  4037e1:	test   sil,sil
  4037e4:	jne    4037c0 <strstr@plt+0x25f0>
  4037e6:	jmp    403780 <strstr@plt+0x25b0>
  4037e8:	lea    rdi,[rip+0xb354]        # 40eb43 <strstr@plt+0xd973>
  4037ef:	mov    esi,0x3
  4037f4:	mov    edx,0x1
  4037f9:	call   4011b0 <fwrite@plt>
  4037fe:	mov    rcx,QWORD PTR [rsp+0x20]
  403803:	lea    rdi,[rip+0xb33d]        # 40eb47 <strstr@plt+0xd977>
  40380a:	mov    esi,0x10
  40380f:	mov    edx,0x1
  403814:	call   4011b0 <fwrite@plt>
  403819:	lea    rbx,[rsp+0xa00]
  403821:	lea    r14,[rip+0xe998]        # 4121c0 <strstr@plt+0x10ff0>
  403828:	lea    r15,[rip+0xb30d]        # 40eb3c <strstr@plt+0xd96c>
  40382f:	xor    ebp,ebp
  403831:	jmp    40385b <strstr@plt+0x268b>
  403833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40383d:	nop    DWORD PTR [rax]
  403840:	mov    rdi,QWORD PTR [rsp+0x20]
  403845:	mov    rsi,r15
  403848:	mov    rdx,rbx
  40384b:	xor    eax,eax
  40384d:	call   401120 <fprintf@plt>
  403852:	inc    rbp
  403855:	cmp    rbp,0x11
  403859:	je     4038ae <strstr@plt+0x26de>
  40385b:	mov    rax,QWORD PTR [r14+rbp*8]
  40385f:	mov    dl,BYTE PTR [rax]
  403861:	mov    rcx,rbx
  403864:	test   dl,dl
  403866:	je     403894 <strstr@plt+0x26c4>
  403868:	inc    rax
  40386b:	mov    rcx,rbx
  40386e:	xchg   ax,ax
  403870:	lea    esi,[rdx-0x41]
  403873:	lea    edi,[rdx+0x20]
  403876:	cmp    sil,0x1a
  40387a:	movzx  edx,dl
  40387d:	movzx  esi,dil
  403881:	cmovae esi,edx
  403884:	mov    BYTE PTR [rcx],sil
  403887:	inc    rcx
  40388a:	movzx  edx,BYTE PTR [rax]
  40388d:	inc    rax
  403890:	test   dl,dl
  403892:	jne    403870 <strstr@plt+0x26a0>
  403894:	mov    BYTE PTR [rcx],0x0
  403897:	mov    rdi,rbx
  40389a:	mov    esi,0x5f
  40389f:	call   4010b0 <strchr@plt>
  4038a4:	test   rax,rax
  4038a7:	je     403840 <strstr@plt+0x2670>
  4038a9:	mov    BYTE PTR [rax],0x2e
  4038ac:	jmp    403840 <strstr@plt+0x2670>
  4038ae:	mov    rcx,QWORD PTR [rsp+0x20]
  4038b3:	lea    rdi,[rip+0xb289]        # 40eb43 <strstr@plt+0xd973>
  4038ba:	mov    esi,0x3
  4038bf:	mov    edx,0x1
  4038c4:	call   4011b0 <fwrite@plt>
  4038c9:	mov    rcx,QWORD PTR [rsp+0x20]
  4038ce:	lea    rdi,[rip+0xb283]        # 40eb58 <strstr@plt+0xd988>
  4038d5:	mov    esi,0xf
  4038da:	mov    edx,0x1
  4038df:	call   4011b0 <fwrite@plt>
  4038e4:	mov    rcx,QWORD PTR [rsp+0x20]
  4038e9:	lea    r14,[rip+0xe960]        # 412250 <strstr@plt+0x11080>
  4038f0:	lea    rbx,[rip+0xb271]        # 40eb68 <strstr@plt+0xd998>
  4038f7:	xor    ebp,ebp
  4038f9:	nop    DWORD PTR [rax+0x0]
  403900:	mov    rdx,QWORD PTR [r14+rbp*8]
  403904:	mov    rdi,rcx
  403907:	mov    rsi,rbx
  40390a:	xor    eax,eax
  40390c:	call   401120 <fprintf@plt>
  403911:	inc    rbp
  403914:	mov    rcx,QWORD PTR [rsp+0x20]
  403919:	cmp    rbp,0x48
  40391d:	jne    403900 <strstr@plt+0x2730>
  40391f:	lea    rdi,[rip+0xb21d]        # 40eb43 <strstr@plt+0xd973>
  403926:	mov    esi,0x3
  40392b:	mov    edx,0x1
  403930:	call   4011b0 <fwrite@plt>
  403935:	mov    rcx,QWORD PTR [rsp+0x20]
  40393a:	lea    rdi,[rip+0xb22e]        # 40eb6f <strstr@plt+0xd99f>
  403941:	mov    esi,0x11
  403946:	mov    edx,0x1
  40394b:	call   4011b0 <fwrite@plt>
  403950:	mov    rcx,QWORD PTR [rsp+0x20]
  403955:	lea    r14,[rip+0xf194]        # 412af0 <strstr@plt+0x11920>
  40395c:	lea    rbx,[rip+0xb205]        # 40eb68 <strstr@plt+0xd998>
  403963:	xor    ebp,ebp
  403965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40396f:	nop
  403970:	mov    rdx,QWORD PTR [rbp+r14*1+0x0]
  403975:	mov    rdi,rcx
  403978:	mov    rsi,rbx
  40397b:	xor    eax,eax
  40397d:	call   401120 <fprintf@plt>
  403982:	mov    rcx,QWORD PTR [rsp+0x20]
  403987:	add    rbp,0x8
  40398b:	cmp    rbp,0x118
  403992:	jne    403970 <strstr@plt+0x27a0>
  403994:	lea    rdi,[rip+0xb1a8]        # 40eb43 <strstr@plt+0xd973>
  40399b:	mov    esi,0x3
  4039a0:	mov    edx,0x1
  4039a5:	call   4011b0 <fwrite@plt>
  4039aa:	jmp    403a42 <strstr@plt+0x2872>
  4039af:	lea    rdi,[rip+0xb0c2]        # 40ea78 <strstr@plt+0xd8a8>
  4039b6:	mov    esi,0x2e
  4039bb:	mov    edx,0x1
  4039c0:	mov    rcx,rax
  4039c3:	call   4011b0 <fwrite@plt>
  4039c8:	mov    rcx,QWORD PTR [rsp+0x20]
  4039cd:	lea    rdi,[rip+0xb0d3]        # 40eaa7 <strstr@plt+0xd8d7>
  4039d4:	mov    esi,0x2a
  4039d9:	mov    edx,0x1
  4039de:	call   4011b0 <fwrite@plt>
  4039e3:	cmp    DWORD PTR [rsp+0x48],0x0
  4039e8:	jle    403a42 <strstr@plt+0x2872>
  4039ea:	lea    rbx,[rip+0xba72]        # 40f463 <strstr@plt+0xe293>
  4039f1:	lea    r14,[rip+0xb79e]        # 40f196 <strstr@plt+0xdfc6>
  4039f8:	xor    ebp,ebp
  4039fa:	test   rbp,rbp
  4039fd:	jne    403a29 <strstr@plt+0x2859>
  4039ff:	nop
  403a00:	mov    rdi,QWORD PTR [rsp+0x20]
  403a05:	mov    rax,QWORD PTR [rsp+0x78]
  403a0a:	mov    edx,DWORD PTR [rax+rbp*4]
  403a0d:	mov    rsi,rbx
  403a10:	xor    eax,eax
  403a12:	call   401120 <fprintf@plt>
  403a17:	inc    rbp
  403a1a:	movsxd rax,DWORD PTR [rsp+0x48]
  403a1f:	cmp    rbp,rax
  403a22:	jge    403a42 <strstr@plt+0x2872>
  403a24:	test   rbp,rbp
  403a27:	je     403a00 <strstr@plt+0x2830>
  403a29:	mov    rcx,QWORD PTR [rsp+0x20]
  403a2e:	mov    esi,0x2
  403a33:	mov    edx,0x1
  403a38:	mov    rdi,r14
  403a3b:	call   4011b0 <fwrite@plt>
  403a40:	jmp    403a00 <strstr@plt+0x2830>
  403a42:	lea    rdi,[rsp+0x10]
  403a47:	call   407070 <strstr@plt+0x5ea0>
  403a4c:	mov    rdi,QWORD PTR [rsp+0x20]
  403a51:	call   401160 <fflush@plt>
  403a56:	mov    rbx,QWORD PTR [rsp+0x20]
  403a5b:	mov    rdi,rbx
  403a5e:	call   401070 <ferror@plt>
  403a63:	test   eax,eax
  403a65:	jne    403aba <strstr@plt+0x28ea>
  403a67:	mov    rdi,rbx
  403a6a:	call   401090 <fclose@plt>
  403a6f:	xor    eax,eax
  403a71:	add    rsp,0xb08
  403a78:	pop    rbx
  403a79:	pop    r12
  403a7b:	pop    r13
  403a7d:	pop    r14
  403a7f:	pop    r15
  403a81:	pop    rbp
  403a82:	ret    
  403a83:	lea    rdi,[rsp+0x10]
  403a88:	call   4081c0 <strstr@plt+0x6ff0>
  403a8d:	jmp    403a4c <strstr@plt+0x287c>
  403a8f:	lea    rdi,[rsp+0x10]
  403a94:	call   4065f0 <strstr@plt+0x5420>
  403a99:	jmp    403a4c <strstr@plt+0x287c>
  403a9b:	mov    rdi,QWORD PTR [rsp+0x38]
  403aa0:	mov    rbx,QWORD PTR [rsp+0x40]
  403aa5:	mov    esi,0x1
  403aaa:	mov    rdx,rbx
  403aad:	mov    rcx,rax
  403ab0:	call   4011b0 <fwrite@plt>
  403ab5:	cmp    rax,rbx
  403ab8:	je     403a4c <strstr@plt+0x287c>
  403aba:	mov    rax,QWORD PTR [rip+0xf52f]        # 412ff0 <strstr@plt+0x11e20>
  403ac1:	mov    rbx,QWORD PTR [rax]
  403ac4:	call   401040 <__errno_location@plt>
  403ac9:	mov    edi,DWORD PTR [rax]
  403acb:	call   4011c0 <strerror@plt>
  403ad0:	lea    rsi,[rip+0x90c1]        # 40cb98 <strstr@plt+0xb9c8>
  403ad7:	mov    rdi,rbx
  403ada:	mov    rdx,rax
  403add:	xor    eax,eax
  403adf:	call   401120 <fprintf@plt>
  403ae4:	mov    edi,0x1
  403ae9:	call   4011a0 <exit@plt>
  403aee:	mov    ebx,DWORD PTR [rsp+0xc]
  403af2:	test   ebx,ebx
  403af4:	je     403b26 <strstr@plt+0x2956>
  403af6:	mov    rcx,QWORD PTR [rsp+0x20]
  403afb:	lea    rdi,[rip+0xad6d]        # 40e86f <strstr@plt+0xd69f>
  403b02:	mov    esi,0xe8
  403b07:	mov    edx,0x1
  403b0c:	call   4011b0 <fwrite@plt>
  403b11:	mov    rdi,QWORD PTR [rsp+0x20]
  403b16:	lea    rsi,[rip+0xae3b]        # 40e958 <strstr@plt+0xd788>
  403b1d:	mov    edx,ebx
  403b1f:	xor    eax,eax
  403b21:	call   401120 <fprintf@plt>
  403b26:	mov    rcx,QWORD PTR [rsp+0x20]
  403b2b:	lea    rdi,[rip+0xaf2b]        # 40ea5d <strstr@plt+0xd88d>
  403b32:	mov    esi,0x1a
  403b37:	mov    edx,0x1
  403b3c:	call   4011b0 <fwrite@plt>
  403b41:	jmp    403a4c <strstr@plt+0x287c>
  403b46:	mov    DWORD PTR [rcx+0x24],0x0
  403b4d:	jmp    402e87 <strstr@plt+0x1cb7>
  403b52:	mov    rax,QWORD PTR [rip+0xf497]        # 412ff0 <strstr@plt+0x11e20>
  403b59:	mov    rdi,QWORD PTR [rax]
  403b5c:	lea    rsi,[rip+0x9bc3]        # 40d726 <strstr@plt+0xc556>
  403b63:	mov    rdx,r14
  403b66:	xor    eax,eax
  403b68:	call   401120 <fprintf@plt>
  403b6d:	mov    edi,0x2
  403b72:	call   4011a0 <exit@plt>
  403b77:	mov    edi,0x1
  403b7c:	call   4011a0 <exit@plt>
  403b81:	add    rbx,0x8
  403b85:	mov    QWORD PTR [rsp+0x30],rbx
  403b8a:	call   403bd0 <strstr@plt+0x2a00>
  403b8f:	mov    rax,QWORD PTR [rip+0xf45a]        # 412ff0 <strstr@plt+0x11e20>
  403b96:	mov    rbx,QWORD PTR [rax]
  403b99:	mov    rbp,QWORD PTR [rsp+0x28]
  403b9e:	call   401040 <__errno_location@plt>
  403ba3:	mov    edi,DWORD PTR [rax]
  403ba5:	call   4011c0 <strerror@plt>
  403baa:	lea    rsi,[rip+0x97cd]        # 40d37e <strstr@plt+0xc1ae>
  403bb1:	mov    rdi,rbx
  403bb4:	mov    rdx,rbp
  403bb7:	mov    rcx,rax
  403bba:	xor    eax,eax
  403bbc:	call   401120 <fprintf@plt>
  403bc1:	mov    edi,0x1
  403bc6:	call   4011a0 <exit@plt>
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403bd0:	push   r14
  403bd2:	push   rbx
  403bd3:	push   rax
  403bd4:	mov    r14,QWORD PTR [rip+0xf415]        # 412ff0 <strstr@plt+0x11e20>
  403bdb:	mov    rcx,QWORD PTR [r14]
  403bde:	lea    rdi,[rip+0x9a62]        # 40d647 <strstr@plt+0xc477>
  403be5:	mov    esi,0x19
  403bea:	mov    edx,0x1
  403bef:	call   4011b0 <fwrite@plt>
  403bf4:	mov    rcx,QWORD PTR [r14]
  403bf7:	lea    rdi,[rip+0x9a63]        # 40d661 <strstr@plt+0xc491>
  403bfe:	mov    esi,0x36
  403c03:	mov    edx,0x1
  403c08:	call   4011b0 <fwrite@plt>
  403c0d:	mov    rcx,QWORD PTR [r14]
  403c10:	lea    rdi,[rip+0x9a81]        # 40d698 <strstr@plt+0xc4c8>
  403c17:	mov    esi,0x1a
  403c1c:	mov    edx,0x1
  403c21:	call   4011b0 <fwrite@plt>
  403c26:	mov    rcx,QWORD PTR [r14]
  403c29:	lea    rdi,[rip+0x9a83]        # 40d6b3 <strstr@plt+0xc4e3>
  403c30:	mov    esi,0x32
  403c35:	mov    edx,0x1
  403c3a:	call   4011b0 <fwrite@plt>
  403c3f:	mov    rcx,QWORD PTR [r14]
  403c42:	lea    rdi,[rip+0x9a9d]        # 40d6e6 <strstr@plt+0xc516>
  403c49:	mov    esi,0x11
  403c4e:	mov    edx,0x1
  403c53:	call   4011b0 <fwrite@plt>
  403c58:	mov    rdi,QWORD PTR [r14]
  403c5b:	lea    rbx,[rip+0x9a96]        # 40d6f8 <strstr@plt+0xc528>
  403c62:	lea    rdx,[rip+0x9999]        # 40d602 <strstr@plt+0xc432>
  403c69:	mov    rsi,rbx
  403c6c:	xor    eax,eax
  403c6e:	call   401120 <fprintf@plt>
  403c73:	mov    rdi,QWORD PTR [r14]
  403c76:	lea    rdx,[rip+0x998c]        # 40d609 <strstr@plt+0xc439>
  403c7d:	mov    rsi,rbx
  403c80:	xor    eax,eax
  403c82:	call   401120 <fprintf@plt>
  403c87:	mov    rdi,QWORD PTR [r14]
  403c8a:	lea    rdx,[rip+0x9980]        # 40d611 <strstr@plt+0xc441>
  403c91:	mov    rsi,rbx
  403c94:	xor    eax,eax
  403c96:	call   401120 <fprintf@plt>
  403c9b:	mov    rdi,QWORD PTR [r14]
  403c9e:	lea    rdx,[rip+0x9974]        # 40d619 <strstr@plt+0xc449>
  403ca5:	mov    rsi,rbx
  403ca8:	xor    eax,eax
  403caa:	call   401120 <fprintf@plt>
  403caf:	mov    rdi,QWORD PTR [r14]
  403cb2:	lea    rdx,[rip+0xa1ca]        # 40de83 <strstr@plt+0xccb3>
  403cb9:	mov    rsi,rbx
  403cbc:	xor    eax,eax
  403cbe:	call   401120 <fprintf@plt>
  403cc3:	mov    rdi,QWORD PTR [r14]
  403cc6:	lea    rdx,[rip+0x9952]        # 40d61f <strstr@plt+0xc44f>
  403ccd:	mov    rsi,rbx
  403cd0:	xor    eax,eax
  403cd2:	call   401120 <fprintf@plt>
  403cd7:	mov    rdi,QWORD PTR [r14]
  403cda:	lea    rdx,[rip+0x9944]        # 40d625 <strstr@plt+0xc455>
  403ce1:	mov    rsi,rbx
  403ce4:	xor    eax,eax
  403ce6:	call   401120 <fprintf@plt>
  403ceb:	mov    rdi,QWORD PTR [r14]
  403cee:	lea    rdx,[rip+0x9936]        # 40d62b <strstr@plt+0xc45b>
  403cf5:	mov    rsi,rbx
  403cf8:	xor    eax,eax
  403cfa:	call   401120 <fprintf@plt>
  403cff:	mov    rdi,QWORD PTR [r14]
  403d02:	lea    rdx,[rip+0x9929]        # 40d632 <strstr@plt+0xc462>
  403d09:	mov    rsi,rbx
  403d0c:	xor    eax,eax
  403d0e:	call   401120 <fprintf@plt>
  403d13:	mov    rdi,QWORD PTR [r14]
  403d16:	lea    rdx,[rip+0x991c]        # 40d639 <strstr@plt+0xc469>
  403d1d:	mov    rsi,rbx
  403d20:	xor    eax,eax
  403d22:	call   401120 <fprintf@plt>
  403d27:	mov    rdi,QWORD PTR [r14]
  403d2a:	lea    rdx,[rip+0x990e]        # 40d63f <strstr@plt+0xc46f>
  403d31:	mov    rsi,rbx
  403d34:	xor    eax,eax
  403d36:	call   401120 <fprintf@plt>
  403d3b:	mov    edi,0x1
  403d40:	call   4011a0 <exit@plt>
  403d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d4f:	nop
  403d50:	push   rbp
  403d51:	push   r15
  403d53:	push   r14
  403d55:	push   r13
  403d57:	push   r12
  403d59:	push   rbx
  403d5a:	push   rax
  403d5b:	mov    r14,rdi
  403d5e:	mov    r15,QWORD PTR [rdi]
  403d61:	mov    rbp,QWORD PTR [r15+0x28]
  403d65:	cmp    rbp,0x174
  403d6c:	jae    403db1 <strstr@plt+0x2be1>
  403d6e:	cmp    rbp,0x10
  403d72:	mov    eax,0x10
  403d77:	cmova  rax,rbp
  403d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	mov    rbx,rax
  403d83:	add    rax,rax
  403d86:	cmp    rbx,0x174
  403d8d:	jb     403d80 <strstr@plt+0x2bb0>
  403d8f:	mov    rdi,QWORD PTR [r15+0x20]
  403d93:	mov    rsi,rbx
  403d96:	call   401170 <realloc@plt>
  403d9b:	mov    QWORD PTR [r15+0x20],rax
  403d9f:	test   rax,rax
  403da2:	je     405ff2 <strstr@plt+0x4e22>
  403da8:	mov    rdi,rax
  403dab:	mov    QWORD PTR [r15+0x28],rbx
  403daf:	jmp    403db8 <strstr@plt+0x2be8>
  403db1:	mov    rdi,QWORD PTR [r15+0x20]
  403db5:	mov    rbx,rbp
  403db8:	add    rdi,rbp
  403dbb:	sub    rbx,rbp
  403dbe:	xor    esi,esi
  403dc0:	mov    rdx,rbx
  403dc3:	call   4010c0 <memset@plt>
  403dc8:	mov    rdi,r14
  403dcb:	xor    esi,esi
  403dcd:	xor    eax,eax
  403dcf:	call   401680 <strstr@plt+0x4b0>
  403dd4:	sub    rsp,0x8
  403dd8:	mov    rdi,r14
  403ddb:	mov    esi,0x2
  403de0:	mov    edx,0x4
  403de5:	mov    ecx,0xfffffffd
  403dea:	mov    r8d,0x3
  403df0:	mov    r9d,0x1
  403df6:	mov    eax,0x0
  403dfb:	push   0xfffffffffffffffe
  403dfd:	push   0xfffffffffffff530
  403e02:	push   0x3
  403e04:	call   401680 <strstr@plt+0x4b0>
  403e09:	add    rsp,0x18
  403e0d:	mov    rdi,r14
  403e10:	mov    esi,0x5c
  403e15:	mov    edx,0x10
  403e1a:	mov    ecx,0x18
  403e1f:	mov    r8d,0x30
  403e25:	mov    r9d,0x20
  403e2b:	xor    eax,eax
  403e2d:	push   0xffffffffffffffff
  403e2f:	call   401680 <strstr@plt+0x4b0>
  403e34:	add    rsp,0x10
  403e38:	mov    rdi,r14
  403e3b:	mov    esi,0xc0
  403e40:	mov    edx,0x18
  403e45:	mov    ecx,0x18
  403e4a:	mov    r8d,0x1
  403e50:	mov    r9d,0x8
  403e56:	mov    eax,0x0
  403e5b:	push   0xfffffffffffffffe
  403e5d:	push   0xe8
  403e62:	call   401680 <strstr@plt+0x4b0>
  403e67:	add    rsp,0x8
  403e6b:	mov    rdi,r14
  403e6e:	mov    esi,0x113
  403e73:	mov    rdx,0xfffffffffffffffc
  403e7a:	mov    ecx,0x2
  403e7f:	mov    r8d,0x10
  403e85:	mov    r9d,0x8
  403e8b:	mov    eax,0x0
  403e90:	push   0x14
  403e92:	push   0xffffffffffffffff
  403e94:	push   0xfffffffffffff530
  403e99:	push   0xfffffffffffffffe
  403e9b:	push   0xbb8
  403ea0:	call   401680 <strstr@plt+0x4b0>
  403ea5:	add    rsp,0x30
  403ea9:	mov    rdi,r14
  403eac:	mov    esi,0x173
  403eb1:	mov    edx,0xffffffc3
  403eb6:	mov    ecx,0x10
  403ebb:	mov    r8d,0x18
  403ec1:	mov    r9d,0x10
  403ec7:	mov    eax,0x0
  403ecc:	push   0x7
  403ece:	push   0x30
  403ed0:	push   0xbb8
  403ed5:	push   0x8
  403ed7:	push   0x1
  403ed9:	push   0x5
  403edb:	push   0x10
  403edd:	push   0x18
  403edf:	call   401680 <strstr@plt+0x4b0>
  403ee4:	add    rsp,0x40
  403ee8:	mov    rdi,r14
  403eeb:	mov    esi,0x20c
  403ef0:	mov    edx,0xfffff530
  403ef5:	mov    ecx,0xffffffff
  403efa:	mov    r8d,0x7
  403f00:	mov    r9d,0x10
  403f06:	mov    eax,0x0
  403f0b:	push   0x30
  403f0d:	push   0x30
  403f0f:	push   0x1
  403f11:	push   0x5
  403f13:	push   0x3
  403f15:	push   0x18
  403f17:	call   401680 <strstr@plt+0x4b0>
  403f1c:	add    rsp,0x30
  403f20:	mov    rdi,r14
  403f23:	mov    esi,0x282
  403f28:	mov    edx,0x8
  403f2d:	mov    ecx,0xbb8
  403f32:	mov    r8d,0xfffff530
  403f38:	mov    r9d,0xffffffff
  403f3e:	mov    eax,0x0
  403f43:	push   0x30
  403f45:	push   0x30
  403f47:	push   0x18
  403f49:	push   0x24
  403f4b:	push   0x10
  403f4d:	push   0xfffffffffffffff7
  403f4f:	push   0x18
  403f51:	push   0x10
  403f53:	call   401680 <strstr@plt+0x4b0>
  403f58:	add    rsp,0x40
  403f5c:	mov    rdi,r14
  403f5f:	mov    esi,0x314
  403f64:	mov    edx,0x5
  403f69:	mov    ecx,0xffffffff
  403f6e:	mov    r8d,0x0
  403f74:	mov    r9d,0x10
  403f7a:	mov    eax,0x0
  403f7f:	push   0x10
  403f81:	push   0xffffffffffffffd0
  403f83:	call   401680 <strstr@plt+0x4b0>
  403f88:	add    rsp,0x10
  403f8c:	mov    rdi,r14
  403f8f:	mov    esi,0x391
  403f94:	mov    edx,0xfffffffb
  403f99:	mov    ecx,0x34
  403f9e:	mov    r8d,0xfffff4e8
  403fa4:	mov    r9d,0xfffffff4
  403faa:	mov    eax,0x0
  403faf:	push   0x10
  403fb1:	push   0x10
  403fb3:	call   401680 <strstr@plt+0x4b0>
  403fb8:	add    rsp,0x8
  403fbc:	mov    rdi,r14
  403fbf:	mov    esi,0x41d
  403fc4:	mov    edx,0x18
  403fc9:	mov    ecx,0x2
  403fce:	mov    r8d,0x3
  403fd4:	mov    r9d,0xfffffffb
  403fda:	mov    eax,0x0
  403fdf:	push   0xfffffffffffffff4
  403fe1:	push   0xfffffffffffff4e8
  403fe6:	push   0x35
  403fe8:	call   401680 <strstr@plt+0x4b0>
  403fed:	add    rsp,0x18
  403ff1:	mov    rdi,r14
  403ff4:	mov    esi,0x4a3
  403ff9:	mov    edx,0x10
  403ffe:	mov    ecx,0x10
  404003:	mov    r8d,0x18
  404009:	mov    r9d,0x2
  40400f:	mov    eax,0x0
  404014:	push   0x10
  404016:	push   0x10
  404018:	push   0x4
  40401a:	call   401680 <strstr@plt+0x4b0>
  40401f:	add    rsp,0x18
  404023:	mov    rdi,r14
  404026:	mov    esi,0x54e
  40402b:	mov    edx,0xfffe0000
  404030:	mov    ecx,0xfffffffe
  404035:	mov    r8d,0xfffffffe
  40403b:	mov    r9d,0x10
  404041:	xor    eax,eax
  404043:	push   0x10
  404045:	call   401680 <strstr@plt+0x4b0>
  40404a:	add    rsp,0x10
  40404e:	mov    rdi,r14
  404051:	mov    esi,0x5d3
  404056:	mov    edx,0x10
  40405b:	mov    ecx,0x10
  404060:	mov    r8d,0x2
  404066:	mov    r9d,0x3
  40406c:	xor    eax,eax
  40406e:	call   401680 <strstr@plt+0x4b0>
  404073:	mov    rdi,r14
  404076:	mov    esi,0x641
  40407b:	mov    edx,0x10
  404080:	mov    ecx,0x10
  404085:	xor    eax,eax
  404087:	call   401680 <strstr@plt+0x4b0>
  40408c:	mov    rdi,r14
  40408f:	mov    esi,0x673
  404094:	xor    eax,eax
  404096:	call   401680 <strstr@plt+0x4b0>
  40409b:	mov    rdi,r14
  40409e:	mov    esi,0x678
  4040a3:	mov    edx,0x10
  4040a8:	mov    ecx,0x10
  4040ad:	mov    r8d,0x10
  4040b3:	mov    r9d,0x10
  4040b9:	mov    eax,0x0
  4040be:	push   0xfffffffffffffffe
  4040c0:	push   0x2
  4040c2:	push   0x4d8
  4040c7:	push   0x10
  4040c9:	call   401680 <strstr@plt+0x4b0>
  4040ce:	add    rsp,0x18
  4040d2:	mov    r8d,0x20
  4040d8:	mov    rdi,r14
  4040db:	mov    esi,0x732
  4040e0:	mov    edx,0x2
  4040e5:	mov    ecx,0xd
  4040ea:	mov    r9d,0xfffffffb
  4040f0:	xor    eax,eax
  4040f2:	push   0x3
  4040f4:	call   401680 <strstr@plt+0x4b0>
  4040f9:	add    rsp,0x8
  4040fd:	mov    rdi,r14
  404100:	mov    esi,0x79a
  404105:	mov    edx,0x2
  40410a:	mov    ecx,0xfffffff4
  40410f:	mov    r8d,0x10
  404115:	mov    r9d,0xffffffff
  40411b:	mov    eax,0x0
  404120:	push   0x18
  404122:	push   0x8
  404124:	push   0x1c
  404126:	push   0xfffffffffffffff4
  404128:	push   0xfffffffffffff58c
  40412d:	call   401680 <strstr@plt+0x4b0>
  404132:	add    rsp,0x30
  404136:	mov    rdi,r14
  404139:	mov    esi,0x7e3
  40413e:	mov    edx,0x14
  404143:	mov    ecx,0xc
  404148:	mov    r8d,0xfffffffb
  40414e:	mov    r9d,0x8
  404154:	mov    eax,0x0
  404159:	push   0xffffffffffffffff
  40415b:	push   0x10
  40415d:	call   401680 <strstr@plt+0x4b0>
  404162:	add    rsp,0x8
  404166:	mov    rdi,r14
  404169:	mov    esi,0x824
  40416e:	mov    edx,0xfffffff3
  404173:	mov    ecx,0xfffffff2
  404178:	mov    r8d,0xfffeffff
  40417e:	mov    r9d,0xfffffffc
  404184:	mov    eax,0x0
  404189:	push   0x3
  40418b:	push   0xfffffffffffff5a0
  404190:	push   0xfffffffffffffff2
  404192:	call   401680 <strstr@plt+0x4b0>
  404197:	add    rsp,0x20
  40419b:	mov    rdi,r14
  40419e:	mov    esi,0x85c
  4041a3:	mov    edx,0xfffffff4
  4041a8:	mov    ecx,0x10
  4041ad:	mov    r8d,0xfffffff4
  4041b3:	mov    r9d,0x10
  4041b9:	mov    eax,0x0
  4041be:	push   0xfffffffffffff484
  4041c3:	push   0xfb
  4041c8:	push   0x4
  4041ca:	push   0x4
  4041cc:	push   0x4
  4041ce:	push   0xfffffffffffffff4
  4041d0:	call   401680 <strstr@plt+0x4b0>
  4041d5:	add    rsp,0x30
  4041d9:	mov    rdi,r14
  4041dc:	mov    esi,0x8a1
  4041e1:	mov    edx,0xfffff484
  4041e6:	mov    ecx,0xc
  4041eb:	mov    r8d,0x3
  4041f1:	mov    r9d,0xfffffff4
  4041f7:	mov    eax,0x0
  4041fc:	push   0xfffffffffffeffff
  404201:	push   0x2
  404203:	call   401680 <strstr@plt+0x4b0>
  404208:	add    rsp,0x8
  40420c:	mov    rdi,r14
  40420f:	mov    esi,0x8f7
  404214:	mov    edx,0x2
  404219:	mov    ecx,0xfffffffb
  40421e:	mov    r8d,0xfffffffb
  404224:	mov    r9d,0xfffeffff
  40422a:	xor    eax,eax
  40422c:	push   0xfffffffffffff5d4
  404231:	call   401680 <strstr@plt+0x4b0>
  404236:	add    rsp,0x10
  40423a:	mov    rdi,r14
  40423d:	mov    esi,0x93d
  404242:	mov    edx,0xfffff468
  404247:	mov    ecx,0xfffff46c
  40424c:	mov    r8d,0x10
  404252:	mov    r9d,0x10
  404258:	mov    eax,0x0
  40425d:	push   0xfffffffffffffff4
  40425f:	push   0x2
  404261:	call   401680 <strstr@plt+0x4b0>
  404266:	add    rsp,0x8
  40426a:	mov    rdi,r14
  40426d:	mov    esi,0x983
  404272:	mov    edx,0x10
  404277:	mov    ecx,0x18
  40427c:	mov    r8d,0x10
  404282:	mov    r9d,0x3
  404288:	mov    eax,0x0
  40428d:	push   0x2
  40428f:	push   0xffffffffffffffff
  404291:	push   0xffffffffffffffff
  404293:	call   401680 <strstr@plt+0x4b0>
  404298:	add    rsp,0x20
  40429c:	mov    rdi,r14
  40429f:	mov    esi,0x9e2
  4042a4:	mov    edx,0xfffffff4
  4042a9:	xor    eax,eax
  4042ab:	call   401680 <strstr@plt+0x4b0>
  4042b0:	mov    rdi,r14
  4042b3:	mov    esi,0x9f7
  4042b8:	mov    edx,0x20
  4042bd:	mov    ecx,0xfffffff7
  4042c2:	mov    r8d,0xffffffff
  4042c8:	mov    r9d,0x4
  4042ce:	mov    eax,0x0
  4042d3:	push   0x18
  4042d5:	push   0x3ff00000
  4042da:	push   0x0
  4042dc:	push   0xfffffffffffeffff
  4042e1:	push   0xfffffffffffffff4
  4042e3:	push   0x3
  4042e5:	call   401680 <strstr@plt+0x4b0>
  4042ea:	add    rsp,0x28
  4042ee:	mov    rdi,r14
  4042f1:	mov    esi,0xa5f
  4042f6:	mov    edx,0x8
  4042fb:	mov    ecx,0xffffffff
  404300:	mov    r8d,0x1c
  404306:	mov    r9d,0x1
  40430c:	xor    eax,eax
  40430e:	push   0x2
  404310:	call   401680 <strstr@plt+0x4b0>
  404315:	add    rsp,0x10
  404319:	mov    rdi,r14
  40431c:	mov    esi,0x9e2
  404321:	mov    edx,0xfffffff4
  404326:	xor    eax,eax
  404328:	call   401680 <strstr@plt+0x4b0>
  40432d:	sub    rsp,0x8
  404331:	mov    rdi,r14
  404334:	mov    esi,0xaab
  404339:	mov    edx,0x20
  40433e:	mov    ecx,0xfffffff7
  404343:	mov    r8d,0x4
  404349:	mov    r9d,0x2
  40434f:	mov    eax,0x0
  404354:	push   0xfffffffffffffff7
  404356:	push   0x3
  404358:	push   0x4
  40435a:	push   0xfffffffffffff4d9
  40435f:	push   0xe
  404361:	call   401680 <strstr@plt+0x4b0>
  404366:	add    rsp,0x28
  40436a:	mov    rdi,r14
  40436d:	mov    esi,0xb05
  404372:	mov    edx,0xfffffff7
  404377:	mov    ecx,0x16
  40437c:	mov    r8d,0x2
  404382:	mov    r9d,0xfffffff9
  404388:	mov    eax,0x0
  40438d:	push   0x1
  40438f:	push   0x7
  404391:	push   0x30
  404393:	call   401680 <strstr@plt+0x4b0>
  404398:	add    rsp,0x20
  40439c:	mov    rdi,r14
  40439f:	mov    esi,0xb5b
  4043a4:	mov    edx,0x18
  4043a9:	mov    ecx,0x10
  4043ae:	mov    r8d,0x20
  4043b4:	mov    r9d,0x18
  4043ba:	mov    eax,0x0
  4043bf:	push   0x18
  4043c1:	push   0x10
  4043c3:	call   401680 <strstr@plt+0x4b0>
  4043c8:	add    rsp,0x8
  4043cc:	mov    rdi,r14
  4043cf:	mov    esi,0xbb4
  4043d4:	mov    edx,0xfffff530
  4043d9:	mov    ecx,0xffffffff
  4043de:	mov    r8d,0x10
  4043e4:	mov    r9d,0x1
  4043ea:	mov    eax,0x0
  4043ef:	push   0xfffffffffffffffd
  4043f1:	push   0x20
  4043f3:	push   0x18
  4043f5:	push   0x18
  4043f7:	push   0x10
  4043f9:	call   401680 <strstr@plt+0x4b0>
  4043fe:	add    rsp,0x28
  404402:	mov    rdi,r14
  404405:	mov    esi,0xc15
  40440a:	mov    edx,0x3
  40440f:	mov    ecx,0xfffffffe
  404414:	mov    r8d,0x18
  40441a:	mov    r9d,0x18
  404420:	mov    eax,0x0
  404425:	push   0x30
  404427:	push   0x20
  404429:	push   0x10
  40442b:	push   0x18
  40442d:	push   0x3
  40442f:	call   401680 <strstr@plt+0x4b0>
  404434:	add    rsp,0x30
  404438:	mov    rdi,r14
  40443b:	mov    esi,0xc87
  404440:	mov    edx,0x7
  404445:	mov    ecx,0x1
  40444a:	mov    r8d,0x18
  404450:	mov    r9d,0x10
  404456:	mov    eax,0x0
  40445b:	push   0x18
  40445d:	push   0x10
  40445f:	push   0x18
  404461:	push   0x20
  404463:	call   401680 <strstr@plt+0x4b0>
  404468:	add    rsp,0x20
  40446c:	mov    rdi,r14
  40446f:	mov    esi,0xccd
  404474:	mov    edx,0xfffff530
  404479:	mov    ecx,0xffffffff
  40447e:	mov    r8d,0x10
  404484:	mov    r9d,0x1
  40448a:	mov    eax,0x0
  40448f:	push   0x20
  404491:	push   0x18
  404493:	push   0x18
  404495:	push   0x10
  404497:	call   401680 <strstr@plt+0x4b0>
  40449c:	add    rsp,0x18
  4044a0:	mov    rdi,r14
  4044a3:	mov    esi,0xd26
  4044a8:	mov    edx,0x3
  4044ad:	mov    ecx,0x18
  4044b2:	mov    r8d,0x10
  4044b8:	mov    r9d,0x30
  4044be:	xor    eax,eax
  4044c0:	push   0x1
  4044c2:	call   401680 <strstr@plt+0x4b0>
  4044c7:	add    rsp,0x8
  4044cb:	mov    rdi,r14
  4044ce:	mov    esi,0xd94
  4044d3:	mov    edx,0x10
  4044d8:	mov    ecx,0x18
  4044dd:	mov    r8d,0x30
  4044e3:	mov    r9d,0x1
  4044e9:	mov    eax,0x0
  4044ee:	push   0x7fffffff
  4044f3:	push   0xffffffffffffffff
  4044f5:	push   0xfffffffffffeffff
  4044fa:	push   0x2
  4044fc:	push   0x7
  4044fe:	call   401680 <strstr@plt+0x4b0>
  404503:	add    rsp,0x30
  404507:	mov    rdi,r14
  40450a:	mov    esi,0xddb
  40450f:	mov    edx,0x2
  404514:	mov    ecx,0x3
  404519:	mov    r8d,0xffffffff
  40451f:	mov    r9d,0xfffeffff
  404525:	xor    eax,eax
  404527:	call   401680 <strstr@plt+0x4b0>
  40452c:	mov    rdi,r14
  40452f:	mov    esi,0xe56
  404534:	mov    edx,0xfffeffff
  404539:	mov    ecx,0x2
  40453e:	mov    r8d,0xfffeffff
  404544:	xor    eax,eax
  404546:	call   401680 <strstr@plt+0x4b0>
  40454b:	mov    rdi,r14
  40454e:	mov    esi,0xe91
  404553:	mov    edx,0x2
  404558:	mov    ecx,0xfffeffff
  40455d:	mov    r8d,0x2
  404563:	mov    r9d,0xfffeffff
  404569:	xor    eax,eax
  40456b:	call   401680 <strstr@plt+0x4b0>
  404570:	mov    rdi,r14
  404573:	mov    esi,0xedb
  404578:	mov    edx,0x2
  40457d:	mov    ecx,0xfffeffff
  404582:	mov    r8d,0x2
  404588:	mov    r9d,0xfffeffff
  40458e:	xor    eax,eax
  404590:	call   401680 <strstr@plt+0x4b0>
  404595:	sub    rsp,0x8
  404599:	mov    rdi,r14
  40459c:	mov    esi,0xf14
  4045a1:	mov    edx,0x2
  4045a6:	mov    ecx,0xfffeffff
  4045ab:	mov    r8d,0x2
  4045b1:	mov    r9d,0xfffeffff
  4045b7:	xor    eax,eax
  4045b9:	push   0x2
  4045bb:	call   401680 <strstr@plt+0x4b0>
  4045c0:	add    rsp,0x8
  4045c4:	mov    rdi,r14
  4045c7:	mov    esi,0xf57
  4045cc:	mov    edx,0xfffeffff
  4045d1:	mov    ecx,0x2
  4045d6:	mov    r8d,0xfffeffff
  4045dc:	mov    r9d,0x2
  4045e2:	xor    eax,eax
  4045e4:	push   0xfffffffffffeffff
  4045e9:	call   401680 <strstr@plt+0x4b0>
  4045ee:	add    rsp,0x10
  4045f2:	mov    rdi,r14
  4045f5:	mov    esi,0xfb1
  4045fa:	mov    edx,0x2
  4045ff:	mov    ecx,0xfffeffff
  404604:	mov    r8d,0x2
  40460a:	mov    r9d,0xfffeffff
  404610:	xor    eax,eax
  404612:	call   401680 <strstr@plt+0x4b0>
  404617:	sub    rsp,0x8
  40461b:	mov    rdi,r14
  40461e:	mov    esi,0x1009
  404623:	mov    edx,0x2
  404628:	mov    ecx,0xfffeffff
  40462d:	mov    r8d,0x2
  404633:	mov    r9d,0xfffeffff
  404639:	xor    eax,eax
  40463b:	push   0x20
  40463d:	call   401680 <strstr@plt+0x4b0>
  404642:	add    rsp,0x10
  404646:	mov    rdi,r14
  404649:	mov    esi,0x1057
  40464e:	mov    edx,0x3
  404653:	mov    ecx,0xfffeffff
  404658:	mov    r8d,0xfffeffff
  40465e:	mov    r9d,0x3
  404664:	mov    eax,0x0
  404669:	push   0xfffffffffffeffff
  40466e:	push   0xfffffffffffeffff
  404673:	call   401680 <strstr@plt+0x4b0>
  404678:	add    rsp,0x10
  40467c:	mov    rdi,r14
  40467f:	mov    esi,0x109a
  404684:	mov    edx,0x2
  404689:	mov    ecx,0xfffeffff
  40468e:	mov    r8d,0x3
  404694:	xor    eax,eax
  404696:	call   401680 <strstr@plt+0x4b0>
  40469b:	mov    rdi,r14
  40469e:	mov    esi,0x1123
  4046a3:	mov    edx,0x0
  4046a8:	mov    ecx,0x43500000
  4046ad:	mov    r8d,0x2
  4046b3:	mov    r9d,0xfffeffff
  4046b9:	xor    eax,eax
  4046bb:	call   401680 <strstr@plt+0x4b0>
  4046c0:	mov    rdi,r14
  4046c3:	mov    esi,0x11ab
  4046c8:	mov    edx,0x3
  4046cd:	mov    ecx,0x3
  4046d2:	mov    r8d,0xfffeffff
  4046d8:	mov    r9d,0xfffeffff
  4046de:	xor    eax,eax
  4046e0:	call   401680 <strstr@plt+0x4b0>
  4046e5:	mov    rdi,r14
  4046e8:	mov    esi,0x11ee
  4046ed:	mov    edx,0x3
  4046f2:	mov    ecx,0xfffeffff
  4046f7:	mov    r8d,0xfffeffff
  4046fd:	mov    r9d,0xfffeffff
  404703:	xor    eax,eax
  404705:	call   401680 <strstr@plt+0x4b0>
  40470a:	mov    rdi,r14
  40470d:	mov    esi,0x123c
  404712:	mov    edx,0xfffeffff
  404717:	mov    ecx,0xfffeffff
  40471c:	mov    r8d,0xfffeffff
  404722:	xor    eax,eax
  404724:	call   401680 <strstr@plt+0x4b0>
  404729:	mov    rdi,r14
  40472c:	mov    esi,0x1295
  404731:	mov    edx,0x2
  404736:	mov    ecx,0xfffffffb
  40473b:	mov    r8d,0xc
  404741:	mov    r9d,0x2
  404747:	xor    eax,eax
  404749:	call   401680 <strstr@plt+0x4b0>
  40474e:	mov    rdi,r14
  404751:	mov    esi,0x12db
  404756:	mov    edx,0xfffffffb
  40475b:	mov    ecx,0xc
  404760:	mov    r8d,0x10
  404766:	mov    r9d,0xfffff468
  40476c:	mov    eax,0x0
  404771:	push   0x2
  404773:	push   0xfffffffffffff46c
  404778:	call   401680 <strstr@plt+0x4b0>
  40477d:	add    rsp,0x8
  404781:	mov    rdi,r14
  404784:	mov    esi,0x131b
  404789:	mov    edx,0xfffeffff
  40478e:	mov    ecx,0x10
  404793:	mov    r8d,0x10
  404799:	mov    r9d,0xfffffffb
  40479f:	mov    eax,0x0
  4047a4:	push   0x3
  4047a6:	push   0xfffffffffffff46c
  4047ab:	push   0xfffffffffffff468
  4047b0:	call   401680 <strstr@plt+0x4b0>
  4047b5:	add    rsp,0x20
  4047b9:	mov    rdi,r14
  4047bc:	mov    esi,0x1399
  4047c1:	mov    edx,0xfffeffff
  4047c6:	mov    ecx,0xfffffffb
  4047cb:	mov    r8d,0xfffeffff
  4047d1:	mov    r9d,0xc
  4047d7:	xor    eax,eax
  4047d9:	call   401680 <strstr@plt+0x4b0>
  4047de:	mov    edx,0xf
  4047e3:	mov    rdi,r14
  4047e6:	mov    esi,0x13ec
  4047eb:	xor    eax,eax
  4047ed:	call   401680 <strstr@plt+0x4b0>
  4047f2:	sub    rsp,0x8
  4047f6:	mov    rdi,r14
  4047f9:	mov    esi,0x1433
  4047fe:	mov    edx,0xfffff468
  404803:	mov    ecx,0xfffff46c
  404808:	mov    r8d,0x3
  40480e:	mov    r9d,0xfffffffb
  404814:	xor    eax,eax
  404816:	push   0xfffffffffffeffff
  40481b:	call   401680 <strstr@plt+0x4b0>
  404820:	add    rsp,0x8
  404824:	mov    rdi,r14
  404827:	mov    esi,0x146e
  40482c:	mov    edx,0xc
  404831:	mov    ecx,0xfffff4ac
  404836:	mov    r8d,0x10
  40483c:	mov    r9d,0xfffff4a0
  404842:	xor    eax,eax
  404844:	push   0xfffffffffffff4a0
  404849:	call   401680 <strstr@plt+0x4b0>
  40484e:	add    rsp,0x8
  404852:	mov    rdi,r14
  404855:	mov    esi,0x14ba
  40485a:	mov    edx,0x2
  40485f:	mov    ecx,0xfffff468
  404864:	mov    r8d,0xfffff46c
  40486a:	mov    r9d,0xfffffffb
  404870:	mov    eax,0x0
  404875:	push   0x10
  404877:	push   0xfffffffffffff4ac
  40487c:	push   0xc
  40487e:	call   401680 <strstr@plt+0x4b0>
  404883:	add    rsp,0x18
  404887:	mov    rdi,r14
  40488a:	mov    esi,0x14f3
  40488f:	mov    edx,0xfffff4a0
  404894:	mov    ecx,0x2
  404899:	mov    r8d,0xfffff468
  40489f:	mov    r9d,0xfffff46c
  4048a5:	xor    eax,eax
  4048a7:	push   0xfffffffffffffffb
  4048a9:	call   401680 <strstr@plt+0x4b0>
  4048ae:	add    rsp,0x10
  4048b2:	mov    r8d,0x10
  4048b8:	mov    rdi,r14
  4048bb:	mov    esi,0x1541
  4048c0:	mov    edx,0xc
  4048c5:	mov    ecx,0xfffff4ac
  4048ca:	mov    r9d,0xfffff4a0
  4048d0:	xor    eax,eax
  4048d2:	call   401680 <strstr@plt+0x4b0>
  4048d7:	mov    rdi,r14
  4048da:	mov    esi,0x1597
  4048df:	mov    edx,0x2
  4048e4:	mov    ecx,0xfffff468
  4048e9:	mov    r8d,0xfffff46c
  4048ef:	mov    r9d,0xfffffffb
  4048f5:	mov    eax,0x0
  4048fa:	push   0xfffffffffffff4a0
  4048ff:	push   0x10
  404901:	push   0xfffffffffffff4ac
  404906:	push   0xc
  404908:	call   401680 <strstr@plt+0x4b0>
  40490d:	add    rsp,0x20
  404911:	mov    rdi,r14
  404914:	mov    esi,0x15dc
  404919:	mov    edx,0x2
  40491e:	mov    ecx,0xfffffff4
  404923:	xor    eax,eax
  404925:	call   401680 <strstr@plt+0x4b0>
  40492a:	mov    rdi,r14
  40492d:	mov    esi,0x1637
  404932:	mov    edx,0x2
  404937:	mov    ecx,0xfffeffff
  40493c:	mov    r8d,0x0
  404942:	mov    r9d,0x43380000
  404948:	mov    eax,0x0
  40494d:	push   0xfffffffffffeffff
  404952:	push   0x43380000
  404957:	push   0x0
  404959:	push   0x2
  40495b:	call   401680 <strstr@plt+0x4b0>
  404960:	add    rsp,0x18
  404964:	mov    rdi,r14
  404967:	mov    esi,0x1682
  40496c:	mov    edx,0xfffeffff
  404971:	mov    ecx,0x2
  404976:	mov    r8d,0x0
  40497c:	mov    r9d,0x43380000
  404982:	xor    eax,eax
  404984:	push   0xfffffffffffeffff
  404989:	call   401680 <strstr@plt+0x4b0>
  40498e:	add    rsp,0x8
  404992:	mov    rdi,r14
  404995:	mov    esi,0x16fb
  40499a:	mov    edx,0xfffeffff
  40499f:	mov    ecx,0x2
  4049a4:	mov    r8d,0x0
  4049aa:	mov    r9d,0x43380000
  4049b0:	xor    eax,eax
  4049b2:	push   0xfffffffffffeffff
  4049b7:	call   401680 <strstr@plt+0x4b0>
  4049bc:	add    rsp,0x10
  4049c0:	mov    rdi,r14
  4049c3:	mov    esi,0x175f
  4049c8:	mov    edx,0xfffeffff
  4049cd:	mov    ecx,0x2
  4049d2:	mov    r8d,0xfffeffff
  4049d8:	mov    r9d,0x0
  4049de:	mov    eax,0x0
  4049e3:	push   0x2
  4049e5:	push   0x43380000
  4049ea:	call   401680 <strstr@plt+0x4b0>
  4049ef:	add    rsp,0x10
  4049f3:	mov    rdi,r14
  4049f6:	mov    esi,0x17bc
  4049fb:	mov    edx,0xfffeffff
  404a00:	mov    ecx,0x0
  404a05:	mov    r8d,0x43380000
  404a0b:	mov    r9d,0x3
  404a11:	mov    eax,0x0
  404a16:	push   0xfffffffffffeffff
  404a1b:	push   0xfffffffffffeffff
  404a20:	call   401680 <strstr@plt+0x4b0>
  404a25:	add    rsp,0x8
  404a29:	mov    rdi,r14
  404a2c:	mov    esi,0x180f
  404a31:	xor    edx,edx
  404a33:	mov    ecx,0x43380000
  404a38:	mov    r8d,0x3
  404a3e:	mov    r9d,0xfffeffff
  404a44:	mov    eax,0x0
  404a49:	push   0x43380000
  404a4e:	push   0x0
  404a50:	push   0xfffffffffffeffff
  404a55:	call   401680 <strstr@plt+0x4b0>
  404a5a:	add    rsp,0x18
  404a5e:	mov    rdi,r14
  404a61:	mov    esi,0x188b
  404a66:	mov    edx,0x3
  404a6b:	mov    ecx,0xfffeffff
  404a70:	mov    r8d,0xfffeffff
  404a76:	mov    r9d,0x0
  404a7c:	mov    eax,0x0
  404a81:	push   0xfffffffffffeffff
  404a86:	push   0x3
  404a88:	push   0x43380000
  404a8d:	call   401680 <strstr@plt+0x4b0>
  404a92:	add    rsp,0x20
  404a96:	mov    rdi,r14
  404a99:	mov    esi,0x18e6
  404a9e:	mov    edx,0xfffeffff
  404aa3:	mov    ecx,0x0
  404aa8:	mov    r8d,0x43380000
  404aae:	mov    r9d,0x3
  404ab4:	mov    eax,0x0
  404ab9:	push   0x43380000
  404abe:	push   0x0
  404ac0:	push   0xfffffffffffeffff
  404ac5:	push   0xfffffffffffeffff
  404aca:	call   401680 <strstr@plt+0x4b0>
  404acf:	add    rsp,0x18
  404ad3:	mov    rdi,r14
  404ad6:	mov    esi,0x1966
  404adb:	mov    edx,0x3
  404ae0:	mov    ecx,0x2
  404ae5:	mov    r8d,0x10
  404aeb:	mov    r9d,0xa0
  404af1:	mov    eax,0x0
  404af6:	push   0x18
  404af8:	push   0x10
  404afa:	push   0x18
  404afc:	push   0x20
  404afe:	push   0x18
  404b00:	call   401680 <strstr@plt+0x4b0>
  404b05:	add    rsp,0x30
  404b09:	mov    rdi,r14
  404b0c:	mov    esi,0x19c0
  404b11:	mov    edx,0x10
  404b16:	mov    ecx,0x3
  404b1b:	mov    r8d,0x14
  404b21:	mov    r9d,0x10
  404b27:	mov    eax,0x0
  404b2c:	push   0x18
  404b2e:	push   0x10
  404b30:	push   0x18
  404b32:	push   0x10
  404b34:	call   401680 <strstr@plt+0x4b0>
  404b39:	add    rsp,0x18
  404b3d:	mov    rdi,r14
  404b40:	mov    esi,0x1a3e
  404b45:	mov    edx,0xfffff4d9
  404b4a:	mov    ecx,0x20
  404b4f:	mov    r8d,0x10
  404b55:	mov    r9d,0xc
  404b5b:	mov    eax,0x0
  404b60:	push   0x10
  404b62:	push   0xfffffffffffff4d9
  404b67:	push   0xfffffffffffff510
  404b6c:	call   401680 <strstr@plt+0x4b0>
  404b71:	add    rsp,0x20
  404b75:	mov    rdi,r14
  404b78:	mov    esi,0x1a83
  404b7d:	mov    edx,0xfffff4d9
  404b82:	mov    ecx,0x10
  404b87:	mov    r8d,0xc
  404b8d:	mov    r9d,0xfffff510
  404b93:	mov    eax,0x0
  404b98:	push   0x4d8
  404b9d:	push   0x10
  404b9f:	push   0x10
  404ba1:	push   0x4
  404ba3:	call   401680 <strstr@plt+0x4b0>
  404ba8:	add    rsp,0x20
  404bac:	mov    rdi,r14
  404baf:	mov    esi,0x1ad8
  404bb4:	mov    edx,0x10
  404bb9:	mov    ecx,0xffffffc7
  404bbe:	mov    r8d,0x10
  404bc4:	mov    r9d,0x18
  404bca:	mov    eax,0x0
  404bcf:	push   0x18
  404bd1:	push   0x10
  404bd3:	push   0x18
  404bd5:	push   0x10
  404bd7:	push   0xfffffffffffff640
  404bdc:	push   0xfffffffffffff5e0
  404be1:	call   401680 <strstr@plt+0x4b0>
  404be6:	add    rsp,0x28
  404bea:	mov    rdi,r14
  404bed:	mov    esi,0x1b59
  404bf2:	mov    edx,0xfffff530
  404bf7:	mov    ecx,0xfffff530
  404bfc:	mov    r8d,0xfffffffc
  404c02:	mov    r9d,0xffffff3c
  404c08:	mov    eax,0x0
  404c0d:	push   0x1c
  404c0f:	push   0x10
  404c11:	push   0x18
  404c13:	push   0xfffffffffffffffc
  404c15:	push   0x30
  404c17:	push   0xfffffffffffff5e0
  404c1c:	push   0x10
  404c1e:	push   0xfffffffffffff53c
  404c23:	push   0xfffffffffffff640
  404c28:	push   0xfffffffffffff540
  404c2d:	push   0xfffffffffffff53c
  404c32:	push   0x80
  404c37:	push   0xffffffffffffff38
  404c3c:	call   401680 <strstr@plt+0x4b0>
  404c41:	add    rsp,0x70
  404c45:	mov    rdi,r14
  404c48:	mov    esi,0x1c5f
  404c4d:	mov    edx,0x10
  404c52:	mov    ecx,0xffffffd0
  404c57:	mov    r8d,0xfffff53c
  404c5d:	mov    r9d,0xfffff530
  404c63:	mov    eax,0x0
  404c68:	push   0x43300000
  404c6d:	push   0x0
  404c6f:	push   0x7fffffff
  404c74:	push   0xffffffffffffffff
  404c76:	push   0x55
  404c78:	push   0xffffffffffffffff
  404c7a:	call   401680 <strstr@plt+0x4b0>
  404c7f:	add    rsp,0x30
  404c83:	mov    rdi,r14
  404c86:	mov    esi,0x1ce8
  404c8b:	mov    edx,0x0
  404c90:	mov    ecx,0x3ff00000
  404c95:	mov    r8d,0xffffffff
  404c9b:	mov    r9d,0x7fffffff
  404ca1:	mov    eax,0x0
  404ca6:	push   0x43300000
  404cab:	push   0x0
  404cad:	push   0x7fffffff
  404cb2:	push   0xffffffffffffffff
  404cb4:	push   0xffffffffbff00000
  404cb9:	push   0x0
  404cbb:	push   0x43300000
  404cc0:	push   0x0
  404cc2:	call   401680 <strstr@plt+0x4b0>
  404cc7:	add    rsp,0x40
  404ccb:	mov    rdi,r14
  404cce:	mov    esi,0x1d7f
  404cd3:	xor    edx,edx
  404cd5:	mov    ecx,0x3ff00000
  404cda:	mov    r8d,0xffffffff
  404ce0:	mov    r9d,0x7fffffff
  404ce6:	mov    eax,0x0
  404ceb:	push   0x3ff00000
  404cf0:	push   0x0
  404cf2:	push   0x43300000
  404cf7:	push   0x0
  404cf9:	call   401680 <strstr@plt+0x4b0>
  404cfe:	add    rsp,0x20
  404d02:	mov    rdi,r14
  404d05:	mov    esi,0x1e77
  404d0a:	xor    eax,eax
  404d0c:	call   401680 <strstr@plt+0x4b0>
  404d11:	mov    rdi,r14
  404d14:	mov    esi,0x1ee5
  404d19:	xor    edx,edx
  404d1b:	mov    ecx,0x3ff00000
  404d20:	xor    eax,eax
  404d22:	call   401680 <strstr@plt+0x4b0>
  404d27:	mov    rdi,r14
  404d2a:	mov    esi,0x1f27
  404d2f:	xor    edx,edx
  404d31:	mov    ecx,0x3ff00000
  404d36:	xor    r8d,r8d
  404d39:	mov    r9d,0x3ff00000
  404d3f:	xor    eax,eax
  404d41:	push   0x3ff00000
  404d46:	push   0x0
  404d48:	push   0x7fffffff
  404d4d:	push   0xffffffffffffffff
  404d4f:	call   401680 <strstr@plt+0x4b0>
  404d54:	add    rsp,0x20
  404d58:	mov    rdi,r14
  404d5b:	mov    esi,0x1fe3
  404d60:	xor    edx,edx
  404d62:	mov    ecx,0x7ff00000
  404d67:	xor    eax,eax
  404d69:	call   401680 <strstr@plt+0x4b0>
  404d6e:	mov    rdi,r14
  404d71:	mov    esi,0x2045
  404d76:	xor    eax,eax
  404d78:	call   401680 <strstr@plt+0x4b0>
  404d7d:	mov    rdi,r14
  404d80:	mov    esi,0x2089
  404d85:	xor    eax,eax
  404d87:	call   401680 <strstr@plt+0x4b0>
  404d8c:	mov    rdi,r14
  404d8f:	mov    esi,0x20d4
  404d94:	xor    eax,eax
  404d96:	call   401680 <strstr@plt+0x4b0>
  404d9b:	mov    rdi,r14
  404d9e:	mov    esi,0x2138
  404da3:	mov    edx,0x0
  404da8:	mov    ecx,0x80000000
  404dad:	mov    r8d,0xffffffff
  404db3:	mov    r9d,0x7fffffff
  404db9:	xor    eax,eax
  404dbb:	call   401680 <strstr@plt+0x4b0>
  404dc0:	mov    rdi,r14
  404dc3:	mov    esi,0x21af
  404dc8:	xor    eax,eax
  404dca:	call   401680 <strstr@plt+0x4b0>
  404dcf:	sub    rsp,0x8
  404dd3:	mov    rdi,r14
  404dd6:	mov    esi,0x21e6
  404ddb:	mov    edx,0xbb8
  404de0:	mov    ecx,0xfc
  404de5:	mov    r8d,0xd0
  404deb:	mov    r9d,0x70
  404df1:	mov    eax,0x0
  404df6:	push   0xb0
  404dfb:	push   0x68
  404dfd:	push   0x60
  404dff:	push   0x58
  404e01:	push   0x50
  404e03:	push   0x98
  404e08:	push   0x90
  404e0d:	push   0x50
  404e0f:	push   0x48
  404e11:	push   0x40
  404e13:	push   0x38
  404e15:	push   0x30
  404e17:	push   0x88
  404e1c:	push   0x80
  404e21:	push   0x78
  404e23:	call   401680 <strstr@plt+0x4b0>
  404e28:	add    rsp,0x78
  404e2c:	mov    rdi,r14
  404e2f:	mov    esi,0x2253
  404e34:	mov    edx,0xfffff530
  404e39:	mov    ecx,0xffffffff
  404e3e:	mov    r8d,0x10
  404e44:	mov    r9d,0x18
  404e4a:	mov    eax,0x0
  404e4f:	push   0xc
  404e51:	push   0x8
  404e53:	push   0x30
  404e55:	push   0x70
  404e57:	push   0x18
  404e59:	push   0x10
  404e5b:	push   0x10
  404e5d:	push   0xfffffffffffff544
  404e62:	push   0x10
  404e64:	call   401680 <strstr@plt+0x4b0>
  404e69:	add    rsp,0x48
  404e6d:	mov    edx,0xc0
  404e72:	mov    rdi,r14
  404e75:	mov    esi,0x22d6
  404e7a:	mov    ecx,0x0
  404e7f:	mov    r8d,0xf
  404e85:	mov    r9d,0x90
  404e8b:	mov    eax,0x0
  404e90:	push   0x40
  404e92:	push   0x30
  404e94:	push   0x20
  404e96:	push   0x10
  404e98:	push   0xb8
  404e9d:	push   0xb0
  404ea2:	push   0xa8
  404ea7:	push   0xa0
  404eac:	push   0x98
  404eb1:	call   401680 <strstr@plt+0x4b0>
  404eb6:	add    rsp,0x48
  404eba:	mov    rdi,r14
  404ebd:	mov    esi,0x2327
  404ec2:	mov    edx,0x50
  404ec7:	mov    ecx,0x60
  404ecc:	mov    r8d,0x70
  404ed2:	mov    r9d,0x80
  404ed8:	mov    eax,0x0
  404edd:	push   0x20
  404edf:	push   0x98
  404ee4:	push   0x10
  404ee6:	push   0x90
  404eeb:	push   0x0
  404eed:	call   401680 <strstr@plt+0x4b0>
  404ef2:	add    rsp,0x30
  404ef6:	mov    rdi,r14
  404ef9:	mov    esi,0x3818
  404efe:	xor    eax,eax
  404f00:	call   401680 <strstr@plt+0x4b0>
  404f05:	lea    r13,[rip+0xa000]        # 40ef0c <strstr@plt+0xdd3c>
  404f0c:	lea    rbp,[rip+0x423d]        # 409150 <strstr@plt+0x7f80>
  404f13:	xor    ebx,ebx
  404f15:	jmp    404f47 <strstr@plt+0x3d77>
  404f17:	mov    esi,0x270a
  404f1c:	mov    edx,0xfffeffff
  404f21:	xor    eax,eax
  404f23:	call   401680 <strstr@plt+0x4b0>
  404f28:	mov    rdi,r14
  404f2b:	mov    esi,0x25a5
  404f30:	xor    eax,eax
  404f32:	call   401680 <strstr@plt+0x4b0>
  404f37:	inc    rbx
  404f3a:	add    r13,0x4
  404f3e:	cmp    ebx,0x5d
  404f41:	je     405fb6 <strstr@plt+0x4de6>
  404f47:	mov    rdi,r14
  404f4a:	mov    esi,0x20a
  404f4f:	mov    edx,ebx
  404f51:	xor    eax,eax
  404f53:	call   401680 <strstr@plt+0x4b0>
  404f58:	cmp    ebx,0x5c
  404f5b:	ja     405fc5 <strstr@plt+0x4df5>
  404f61:	mov    eax,ebx
  404f63:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  404f68:	add    rax,rbp
  404f6b:	jmp    rax
  404f6d:	mov    rdi,r14
  404f70:	mov    esi,0x2355
  404f75:	mov    edx,0xfffeffff
  404f7a:	mov    ecx,0xfffeffff
  404f7f:	xor    eax,eax
  404f81:	call   401680 <strstr@plt+0x4b0>
  404f86:	cmp    ebx,0x3
  404f89:	ja     405022 <strstr@plt+0x3e52>
  404f8f:	mov    esi,DWORD PTR [r13+0x0]
  404f93:	mov    rdi,r14
  404f96:	jmp    40501b <strstr@plt+0x3e4b>
  404f9b:	mov    r12,rbp
  404f9e:	mov    ebp,ebx
  404fa0:	or     ebp,0x1
  404fa3:	mov    rdi,r14
  404fa6:	mov    esi,0x34f9
  404fab:	xor    eax,eax
  404fad:	call   401680 <strstr@plt+0x4b0>
  404fb2:	mov    rdi,r14
  404fb5:	cmp    ebp,0x4d
  404fb8:	jne    40524e <strstr@plt+0x407e>
  404fbe:	mov    esi,0x35eb
  404fc3:	xor    eax,eax
  404fc5:	call   401680 <strstr@plt+0x4b0>
  404fca:	mov    r15d,0x3604
  404fd0:	jmp    40529c <strstr@plt+0x40cc>
  404fd5:	mov    rdi,r14
  404fd8:	mov    esi,0x2530
  404fdd:	mov    edx,0xfffffffe
  404fe2:	xor    eax,eax
  404fe4:	call   401680 <strstr@plt+0x4b0>
  404fe9:	mov    eax,ebx
  404feb:	or     eax,0x2
  404fee:	xor    ecx,ecx
  404ff0:	cmp    eax,0xe
  404ff3:	sete   cl
  404ff6:	lea    esi,[rcx+rcx*4]
  404ff9:	add    esi,0x2383
  404fff:	mov    rdi,r14
  405002:	xor    eax,eax
  405004:	call   401680 <strstr@plt+0x4b0>
  405009:	mov    eax,ebx
  40500b:	or     eax,0x1
  40500e:	cmp    eax,0xd
  405011:	jne    405022 <strstr@plt+0x3e52>
  405013:	mov    rdi,r14
  405016:	mov    esi,0x253c
  40501b:	xor    eax,eax
  40501d:	call   401680 <strstr@plt+0x4b0>
  405022:	mov    rdi,r14
  405025:	mov    esi,0x238d
  40502a:	mov    edx,0xfffe0000
  40502f:	xor    eax,eax
  405031:	call   401680 <strstr@plt+0x4b0>
  405036:	jmp    404f37 <strstr@plt+0x3d67>
  40503b:	mov    rdi,r14
  40503e:	cmp    ebx,0x47
  405041:	je     4055d6 <strstr@plt+0x4406>
  405047:	mov    esi,0x3424
  40504c:	xor    eax,eax
  40504e:	call   401680 <strstr@plt+0x4b0>
  405053:	mov    rdi,r14
  405056:	mov    esi,0x3428
  40505b:	mov    edx,0x3
  405060:	xor    eax,eax
  405062:	call   401680 <strstr@plt+0x4b0>
  405067:	cmp    ebx,0x48
  40506a:	je     405fa2 <strstr@plt+0x4dd2>
  405070:	cmp    ebx,0x47
  405073:	je     4055e7 <strstr@plt+0x4417>
  405079:	cmp    ebx,0x46
  40507c:	jne    40508d <strstr@plt+0x3ebd>
  40507e:	mov    rdi,r14
  405081:	mov    esi,0x343b
  405086:	xor    eax,eax
  405088:	call   401680 <strstr@plt+0x4b0>
  40508d:	mov    rdi,r14
  405090:	mov    esi,0x3486
  405095:	mov    edx,0x10
  40509a:	mov    ecx,0xffffffd0
  40509f:	xor    eax,eax
  4050a1:	call   401680 <strstr@plt+0x4b0>
  4050a6:	mov    rdi,r14
  4050a9:	mov    esi,0x34b6
  4050ae:	mov    edx,0xffffffff
  4050b3:	xor    eax,eax
  4050b5:	call   401680 <strstr@plt+0x4b0>
  4050ba:	mov    rdi,r14
  4050bd:	mov    esi,0x34c8
  4050c2:	mov    edx,0xfffffffd
  4050c7:	mov    ecx,0x7
  4050cc:	xor    eax,eax
  4050ce:	call   401680 <strstr@plt+0x4b0>
  4050d3:	jmp    405641 <strstr@plt+0x4471>
  4050d8:	mov    rdi,r14
  4050db:	mov    esi,0x263a
  4050e0:	xor    eax,eax
  4050e2:	call   401680 <strstr@plt+0x4b0>
  4050e7:	lea    eax,[rbx-0x14]
  4050ea:	cdqe   
  4050ec:	imul   rax,rax,0x66666667
  4050f3:	mov    rcx,rax
  4050f6:	shr    rcx,0x3f
  4050fa:	sar    rax,0x21
  4050fe:	add    eax,ecx
  405100:	mov    rdi,r14
  405103:	cmp    eax,0x1
  405106:	je     404f17 <strstr@plt+0x3d47>
  40510c:	test   eax,eax
  40510e:	jne    405a9b <strstr@plt+0x48cb>
  405114:	mov    esi,0x26f0
  405119:	jmp    404f1c <strstr@plt+0x3d4c>
  40511e:	mov    rdi,r14
  405121:	mov    esi,0x263a
  405126:	xor    eax,eax
  405128:	call   401680 <strstr@plt+0x4b0>
  40512d:	lea    eax,[rbx-0x14]
  405130:	cdqe   
  405132:	imul   rax,rax,0x66666667
  405139:	mov    rcx,rax
  40513c:	shr    rcx,0x3f
  405140:	sar    rax,0x21
  405144:	add    eax,ecx
  405146:	mov    rdi,r14
  405149:	cmp    eax,0x1
  40514c:	je     405a91 <strstr@plt+0x48c1>
  405152:	test   eax,eax
  405154:	jne    405bd7 <strstr@plt+0x4a07>
  40515a:	mov    esi,0x2642
  40515f:	jmp    404f1c <strstr@plt+0x3d4c>
  405164:	mov    rdi,r14
  405167:	mov    esi,0x263a
  40516c:	xor    eax,eax
  40516e:	call   401680 <strstr@plt+0x4b0>
  405173:	lea    eax,[rbx-0x14]
  405176:	cdqe   
  405178:	imul   rax,rax,0x66666667
  40517f:	mov    rcx,rax
  405182:	shr    rcx,0x3f
  405186:	sar    rax,0x21
  40518a:	add    eax,ecx
  40518c:	mov    rdi,r14
  40518f:	cmp    eax,0x1
  405192:	je     405b15 <strstr@plt+0x4945>
  405198:	test   eax,eax
  40519a:	jne    405bde <strstr@plt+0x4a0e>
  4051a0:	mov    esi,0x2747
  4051a5:	jmp    404f1c <strstr@plt+0x3d4c>
  4051aa:	mov    rdi,r14
  4051ad:	mov    esi,0x263a
  4051b2:	xor    eax,eax
  4051b4:	call   401680 <strstr@plt+0x4b0>
  4051b9:	lea    eax,[rbx-0x14]
  4051bc:	cdqe   
  4051be:	imul   rax,rax,0x66666667
  4051c5:	mov    rcx,rax
  4051c8:	shr    rcx,0x3f
  4051cc:	sar    rax,0x21
  4051d0:	add    eax,ecx
  4051d2:	mov    rdi,r14
  4051d5:	cmp    eax,0x1
  4051d8:	je     405b1f <strstr@plt+0x494f>
  4051de:	test   eax,eax
  4051e0:	jne    405be5 <strstr@plt+0x4a15>
  4051e6:	mov    esi,0x2699
  4051eb:	jmp    404f1c <strstr@plt+0x3d4c>
  4051f0:	mov    edx,0x7e
  4051f5:	mov    rdi,r14
  4051f8:	mov    esi,0x34e4
  4051fd:	mov    ecx,0xffffff80
  405202:	mov    r8d,0x2
  405208:	jmp    405c6d <strstr@plt+0x4a9d>
  40520d:	mov    rdi,r14
  405210:	mov    esi,0x36f1
  405215:	mov    edx,0xffffffcc
  40521a:	mov    ecx,0x20
  40521f:	mov    r8d,0xffffffc2
  405225:	xor    eax,eax
  405227:	call   401680 <strstr@plt+0x4b0>
  40522c:	mov    rdi,r14
  40522f:	cmp    ebx,0x57
  405232:	jne    4056eb <strstr@plt+0x451b>
  405238:	mov    esi,0x3710
  40523d:	mov    edx,0x53
  405242:	xor    eax,eax
  405244:	call   401680 <strstr@plt+0x4b0>
  405249:	jmp    4056f7 <strstr@plt+0x4527>
  40524e:	mov    esi,0x35c4
  405253:	mov    edx,0xfffeffff
  405258:	xor    eax,eax
  40525a:	call   401680 <strstr@plt+0x4b0>
  40525f:	mov    rdi,r14
  405262:	mov    esi,0x35ca
  405267:	mov    edx,0xfffeffff
  40526c:	xor    eax,eax
  40526e:	call   401680 <strstr@plt+0x4b0>
  405273:	mov    rdi,r14
  405276:	mov    esi,0x35eb
  40527b:	xor    eax,eax
  40527d:	call   401680 <strstr@plt+0x4b0>
  405282:	mov    rdi,r14
  405285:	mov    esi,0x35ef
  40528a:	mov    edx,0xfffeffff
  40528f:	xor    eax,eax
  405291:	call   401680 <strstr@plt+0x4b0>
  405296:	mov    r15d,0x3617
  40529c:	mov    rdi,r14
  40529f:	mov    esi,0x35f8
  4052a4:	xor    eax,eax
  4052a6:	call   401680 <strstr@plt+0x4b0>
  4052ab:	mov    rdi,r14
  4052ae:	mov    esi,r15d
  4052b1:	xor    eax,eax
  4052b3:	call   401680 <strstr@plt+0x4b0>
  4052b8:	mov    rdi,r14
  4052bb:	mov    esi,0x361c
  4052c0:	xor    eax,eax
  4052c2:	call   401680 <strstr@plt+0x4b0>
  4052c7:	cmp    ebx,0x4c
  4052ca:	mov    rbp,r12
  4052cd:	mov    rdi,r14
  4052d0:	je     40588b <strstr@plt+0x46bb>
  4052d6:	cmp    ebx,0x4a
  4052d9:	je     405873 <strstr@plt+0x46a3>
  4052df:	cmp    ebx,0x49
  4052e2:	jne    405897 <strstr@plt+0x46c7>
  4052e8:	mov    esi,0x3629
  4052ed:	mov    edx,0xfffe0000
  4052f2:	jmp    4058a1 <strstr@plt+0x46d1>
  4052f7:	mov    rdi,r14
  4052fa:	mov    esi,0x366c
  4052ff:	mov    edx,0xffffffff
  405304:	xor    eax,eax
  405306:	call   401680 <strstr@plt+0x4b0>
  40530b:	mov    rdi,r14
  40530e:	cmp    ebx,0x50
  405311:	jne    4059b7 <strstr@plt+0x47e7>
  405317:	mov    esi,0x367b
  40531c:	mov    edx,0x53
  405321:	jmp    4059c1 <strstr@plt+0x47f1>
  405326:	mov    rdi,r14
  405329:	mov    esi,0x23ae
  40532e:	xor    eax,eax
  405330:	call   401680 <strstr@plt+0x4b0>
  405335:	mov    rdi,r14
  405338:	mov    esi,0x23b6
  40533d:	mov    edx,0xfffeffff
  405342:	mov    ecx,0xfffeffff
  405347:	xor    eax,eax
  405349:	call   401680 <strstr@plt+0x4b0>
  40534e:	mov    esi,0x23e3
  405353:	cmp    ebx,0x4
  405356:	je     405497 <strstr@plt+0x42c7>
  40535c:	jmp    4054aa <strstr@plt+0x42da>
  405361:	mov    rdi,r14
  405364:	mov    esi,0x24c2
  405369:	xor    eax,eax
  40536b:	call   401680 <strstr@plt+0x4b0>
  405370:	mov    rdi,r14
  405373:	cmp    ebx,0xa
  405376:	jne    4059d5 <strstr@plt+0x4805>
  40537c:	mov    esi,0x24d0
  405381:	mov    edx,0xfffe0000
  405386:	mov    ecx,0xfffffff5
  40538b:	jmp    405bcb <strstr@plt+0x49fb>
  405390:	mov    rdi,r14
  405393:	mov    esi,0x263e
  405398:	xor    eax,eax
  40539a:	call   401680 <strstr@plt+0x4b0>
  40539f:	cmp    ebx,0x3d
  4053a2:	jne    4053b3 <strstr@plt+0x41e3>
  4053a4:	mov    rdi,r14
  4053a7:	mov    esi,0x30c1
  4053ac:	xor    eax,eax
  4053ae:	call   401680 <strstr@plt+0x4b0>
  4053b3:	mov    rdi,r14
  4053b6:	mov    esi,0x30c6
  4053bb:	mov    edx,0xfffffff7
  4053c0:	jmp    405779 <strstr@plt+0x45a9>
  4053c5:	sub    rsp,0x8
  4053c9:	mov    rdi,r14
  4053cc:	mov    esi,0x37bf
  4053d1:	mov    edx,0x18
  4053d6:	mov    ecx,0x10
  4053db:	mov    r8d,0xa0
  4053e1:	mov    r9d,0x20
  4053e7:	xor    eax,eax
  4053e9:	push   0x18
  4053eb:	call   401680 <strstr@plt+0x4b0>
  4053f0:	add    rsp,0x10
  4053f4:	mov    rdi,r14
  4053f7:	cmp    ebx,0x5b
  4053fa:	jne    405aa5 <strstr@plt+0x48d5>
  405400:	mov    esi,0x37dd
  405405:	xor    eax,eax
  405407:	call   401680 <strstr@plt+0x4b0>
  40540c:	mov    rdi,r14
  40540f:	mov    esi,0x37e9
  405414:	mov    edx,0xfffff530
  405419:	mov    ecx,0xfffffffe
  40541e:	xor    eax,eax
  405420:	call   401680 <strstr@plt+0x4b0>
  405425:	mov    rdi,r14
  405428:	mov    esi,0x37f3
  40542d:	xor    eax,eax
  40542f:	call   401680 <strstr@plt+0x4b0>
  405434:	jmp    405ade <strstr@plt+0x490e>
  405439:	mov    rdi,r14
  40543c:	mov    esi,0x2484
  405441:	mov    edx,0xfffffffb
  405446:	xor    eax,eax
  405448:	call   401680 <strstr@plt+0x4b0>
  40544d:	mov    esi,0x1e72
  405452:	cmp    ebx,0x6
  405455:	jne    4054aa <strstr@plt+0x42da>
  405457:	mov    r15d,0x2464
  40545d:	mov    r12d,0x23ec
  405463:	mov    esi,0x23de
  405468:	jmp    4054b6 <strstr@plt+0x42e6>
  40546a:	mov    rdi,r14
  40546d:	mov    esi,0x249f
  405472:	xor    eax,eax
  405474:	call   401680 <strstr@plt+0x4b0>
  405479:	mov    rdi,r14
  40547c:	mov    esi,0x24a7
  405481:	mov    edx,0xfffeffff
  405486:	xor    eax,eax
  405488:	call   401680 <strstr@plt+0x4b0>
  40548d:	mov    esi,0x23e3
  405492:	cmp    ebx,0x8
  405495:	jne    4054aa <strstr@plt+0x42da>
  405497:	mov    r15d,0x2464
  40549d:	mov    r12d,0x23ec
  4054a3:	mov    esi,0x23da
  4054a8:	jmp    4054b6 <strstr@plt+0x42e6>
  4054aa:	mov    r15d,0x2468
  4054b0:	mov    r12d,0x23fb
  4054b6:	mov    rdi,r14
  4054b9:	xor    eax,eax
  4054bb:	call   401680 <strstr@plt+0x4b0>
  4054c0:	mov    rdi,r14
  4054c3:	mov    esi,r12d
  4054c6:	mov    edx,0xfffe0000
  4054cb:	xor    eax,eax
  4054cd:	call   401680 <strstr@plt+0x4b0>
  4054d2:	mov    rdi,r14
  4054d5:	mov    esi,0x2399
  4054da:	xor    eax,eax
  4054dc:	call   401680 <strstr@plt+0x4b0>
  4054e1:	mov    eax,ebx
  4054e3:	or     eax,0x1
  4054e6:	cmp    eax,0x5
  4054e9:	jne    405553 <strstr@plt+0x4383>
  4054eb:	sub    rsp,0x8
  4054ef:	mov    rdi,r14
  4054f2:	mov    esi,0x240f
  4054f7:	mov    edx,0xfffffff5
  4054fc:	mov    ecx,0xfffffff5
  405501:	mov    r8d,0xfffffffd
  405507:	mov    r9d,0xfffffff4
  40550d:	xor    eax,eax
  40550f:	push   0xfffffffffffffff3
  405511:	call   401680 <strstr@plt+0x4b0>
  405516:	add    rsp,0x10
  40551a:	mov    rdi,r14
  40551d:	mov    esi,0x2450
  405522:	mov    edx,0x10
  405527:	mov    ecx,0x6
  40552c:	mov    r8d,0x10
  405532:	xor    eax,eax
  405534:	call   401680 <strstr@plt+0x4b0>
  405539:	mov    rdi,r14
  40553c:	mov    esi,r15d
  40553f:	xor    eax,eax
  405541:	call   401680 <strstr@plt+0x4b0>
  405546:	mov    rdi,r14
  405549:	mov    esi,0x246e
  40554e:	jmp    404f30 <strstr@plt+0x3d60>
  405553:	mov    rdi,r14
  405556:	mov    esi,0x2473
  40555b:	mov    edx,0xfffffff5
  405560:	xor    eax,eax
  405562:	call   401680 <strstr@plt+0x4b0>
  405567:	mov    rdi,r14
  40556a:	mov    esi,0x245f
  40556f:	xor    eax,eax
  405571:	call   401680 <strstr@plt+0x4b0>
  405576:	mov    rdi,r14
  405579:	mov    esi,0x247f
  40557e:	jmp    404f30 <strstr@plt+0x3d60>
  405583:	mov    rdi,r14
  405586:	mov    esi,0x30c1
  40558b:	jmp    404f30 <strstr@plt+0x3d60>
  405590:	mov    rdi,r14
  405593:	mov    esi,0x263a
  405598:	xor    eax,eax
  40559a:	call   401680 <strstr@plt+0x4b0>
  40559f:	lea    eax,[rbx-0x14]
  4055a2:	cdqe   
  4055a4:	imul   rax,rax,0x66666667
  4055ab:	mov    rcx,rax
  4055ae:	shr    rcx,0x3f
  4055b2:	sar    rax,0x21
  4055b6:	add    eax,ecx
  4055b8:	mov    rdi,r14
  4055bb:	cmp    eax,0x1
  4055be:	je     405f6c <strstr@plt+0x4d9c>
  4055c4:	test   eax,eax
  4055c6:	jne    405f7f <strstr@plt+0x4daf>
  4055cc:	mov    esi,0x279e
  4055d1:	jmp    405f71 <strstr@plt+0x4da1>
  4055d6:	mov    esi,0x3428
  4055db:	mov    edx,0x3
  4055e0:	xor    eax,eax
  4055e2:	call   401680 <strstr@plt+0x4b0>
  4055e7:	mov    rdi,r14
  4055ea:	mov    esi,0x347b
  4055ef:	xor    eax,eax
  4055f1:	call   401680 <strstr@plt+0x4b0>
  4055f6:	mov    rdi,r14
  4055f9:	mov    esi,0x3486
  4055fe:	mov    edx,0x10
  405603:	mov    ecx,0xffffffd0
  405608:	xor    eax,eax
  40560a:	call   401680 <strstr@plt+0x4b0>
  40560f:	mov    rdi,r14
  405612:	mov    esi,0x34c1
  405617:	mov    edx,0xffffffff
  40561c:	xor    eax,eax
  40561e:	call   401680 <strstr@plt+0x4b0>
  405623:	mov    rdi,r14
  405626:	mov    esi,0x34c8
  40562b:	mov    edx,0xfffffffd
  405630:	mov    ecx,0x7
  405635:	xor    eax,eax
  405637:	call   401680 <strstr@plt+0x4b0>
  40563c:	cmp    ebx,0x47
  40563f:	je     405650 <strstr@plt+0x4480>
  405641:	mov    rdi,r14
  405644:	mov    esi,0x34e0
  405649:	xor    eax,eax
  40564b:	call   401680 <strstr@plt+0x4b0>
  405650:	mov    rdi,r14
  405653:	mov    esi,0x2625
  405658:	jmp    404f30 <strstr@plt+0x3d60>
  40565d:	mov    rdi,r14
  405660:	mov    esi,0x3699
  405665:	mov    edx,0xfffff710
  40566a:	mov    ecx,0x40
  40566f:	mov    r8d,0xfffff540
  405675:	mov    r9d,0xfffff53c
  40567b:	jmp    405afc <strstr@plt+0x492c>
  405680:	mov    rdi,r14
  405683:	mov    esi,0x2399
  405688:	jmp    404f30 <strstr@plt+0x3d60>
  40568d:	sub    rsp,0x8
  405691:	mov    rdi,r14
  405694:	mov    esi,0x32c6
  405699:	mov    edx,0xfffffff7
  40569e:	mov    ecx,0xfffffff4
  4056a3:	mov    r8d,0xffffffff
  4056a9:	mov    r9d,0x6
  4056af:	mov    eax,0x0
  4056b4:	push   0x41
  4056b6:	push   0xfffffffffffe0000
  4056bb:	push   0x54
  4056bd:	push   0xfffffffffffe0000
  4056c2:	push   0x4
  4056c4:	call   401680 <strstr@plt+0x4b0>
  4056c9:	jmp    405e83 <strstr@plt+0x4cb3>
  4056ce:	mov    rdi,r14
  4056d1:	mov    esi,0x2ac5
  4056d6:	mov    edx,0x10
  4056db:	mov    ecx,0x10
  4056e0:	mov    r8d,0xfffffff7
  4056e6:	jmp    405ca0 <strstr@plt+0x4ad0>
  4056eb:	mov    esi,0x2399
  4056f0:	xor    eax,eax
  4056f2:	call   401680 <strstr@plt+0x4b0>
  4056f7:	mov    rdi,r14
  4056fa:	mov    esi,0x3719
  4056ff:	mov    edx,0xffffffff
  405704:	jmp    40502f <strstr@plt+0x3e5f>
  405709:	mov    rdi,r14
  40570c:	mov    esi,0x2913
  405711:	mov    edx,0xffffffff
  405716:	jmp    40502f <strstr@plt+0x3e5f>
  40571b:	mov    rdi,r14
  40571e:	mov    esi,0x30f1
  405723:	mov    edx,0xfffffff7
  405728:	mov    ecx,0x3
  40572d:	mov    r8d,0x6
  405733:	mov    r9d,0x10
  405739:	xor    eax,eax
  40573b:	call   401680 <strstr@plt+0x4b0>
  405740:	mov    rdi,r14
  405743:	mov    esi,0x3167
  405748:	mov    edx,0x3
  40574d:	mov    ecx,0x10
  405752:	mov    r8d,0xffffffd0
  405758:	mov    r9d,0x3
  40575e:	mov    eax,0x0
  405763:	push   0x3
  405765:	push   0x7
  405767:	jmp    405f06 <strstr@plt+0x4d36>
  40576c:	mov    rdi,r14
  40576f:	mov    esi,0x2838
  405774:	mov    edx,0x10
  405779:	mov    ecx,0x10
  40577e:	jmp    405bcb <strstr@plt+0x49fb>
  405783:	mov    edx,0x14
  405788:	mov    rdi,r14
  40578b:	mov    esi,0x2a38
  405790:	jmp    40591e <strstr@plt+0x474e>
  405795:	mov    rdi,r14
  405798:	mov    esi,0x2be7
  40579d:	mov    edx,0x8
  4057a2:	jmp    40502f <strstr@plt+0x3e5f>
  4057a7:	sub    rsp,0x8
  4057ab:	mov    r9d,0x18
  4057b1:	mov    rdi,r14
  4057b4:	mov    esi,0x2cb5
  4057b9:	mov    edx,0xfffffff4
  4057be:	mov    ecx,0x1c
  4057c3:	mov    r8d,0x8
  4057c9:	mov    eax,0x0
  4057ce:	push   0xffffffffffffffff
  4057d0:	push   0x8
  4057d2:	push   0xfffffffffffffffb
  4057d4:	push   0xc
  4057d6:	push   0x14
  4057d8:	call   401680 <strstr@plt+0x4b0>
  4057dd:	add    rsp,0x28
  4057e1:	mov    rdi,r14
  4057e4:	mov    esi,0x2d0a
  4057e9:	mov    edx,0xffffffff
  4057ee:	mov    ecx,0x10
  4057f3:	mov    r8d,0x10
  4057f9:	mov    r9d,0x6
  4057ff:	xor    eax,eax
  405801:	push   0x1
  405803:	jmp    405f06 <strstr@plt+0x4d36>
  405808:	mov    rdi,r14
  40580b:	mov    esi,0x263a
  405810:	xor    eax,eax
  405812:	call   401680 <strstr@plt+0x4b0>
  405817:	mov    rdi,r14
  40581a:	mov    esi,0x27d2
  40581f:	mov    edx,0xfffeffff
  405824:	mov    ecx,0xfffeffff
  405829:	xor    eax,eax
  40582b:	call   401680 <strstr@plt+0x4b0>
  405830:	mov    rdi,r14
  405833:	mov    esi,0x281a
  405838:	jmp    404f30 <strstr@plt+0x3d60>
  40583d:	mov    rdi,r14
  405840:	mov    esi,0x3337
  405845:	mov    edx,0xb
  40584a:	mov    ecx,0xffffffff
  40584f:	mov    r8d,0x20
  405855:	xor    eax,eax
  405857:	call   401680 <strstr@plt+0x4b0>
  40585c:	mov    rdi,r14
  40585f:	mov    esi,0x33de
  405864:	mov    edx,0x10
  405869:	mov    ecx,0x18
  40586e:	jmp    405af0 <strstr@plt+0x4920>
  405873:	mov    esi,0x3633
  405878:	mov    edx,0xfffe0000
  40587d:	mov    ecx,0x53
  405882:	xor    eax,eax
  405884:	call   401680 <strstr@plt+0x4b0>
  405889:	jmp    4058a8 <strstr@plt+0x46d8>
  40588b:	mov    esi,0x3641
  405890:	mov    edx,0xfffe0000
  405895:	jmp    4058a1 <strstr@plt+0x46d1>
  405897:	mov    esi,0x363d
  40589c:	mov    edx,0x53
  4058a1:	xor    eax,eax
  4058a3:	call   401680 <strstr@plt+0x4b0>
  4058a8:	mov    rdi,r14
  4058ab:	mov    esi,0x364b
  4058b0:	jmp    404f30 <strstr@plt+0x3d60>
  4058b5:	mov    rdi,r14
  4058b8:	mov    esi,0x31af
  4058bd:	mov    edx,0xfffffff7
  4058c2:	mov    ecx,0x3
  4058c7:	mov    r8d,0x10
  4058cd:	jmp    405ca0 <strstr@plt+0x4ad0>
  4058d2:	mov    rdi,r14
  4058d5:	mov    esi,0x263a
  4058da:	xor    eax,eax
  4058dc:	call   401680 <strstr@plt+0x4b0>
  4058e1:	mov    rdi,r14
  4058e4:	mov    esi,0x279e
  4058e9:	mov    edx,0xfffeffff
  4058ee:	xor    eax,eax
  4058f0:	call   401680 <strstr@plt+0x4b0>
  4058f5:	mov    rdi,r14
  4058f8:	mov    esi,0x27f5
  4058fd:	jmp    404f30 <strstr@plt+0x3d60>
  405902:	mov    edx,0x14
  405907:	mov    rdi,r14
  40590a:	mov    esi,0x2943
  40590f:	jmp    40591e <strstr@plt+0x474e>
  405911:	mov    edx,0x14
  405916:	mov    rdi,r14
  405919:	mov    esi,0x2a65
  40591e:	mov    ecx,0x10
  405923:	xor    eax,eax
  405925:	call   401680 <strstr@plt+0x4b0>
  40592a:	jmp    404f37 <strstr@plt+0x3d67>
  40592f:	sub    rsp,0x8
  405933:	mov    rdi,r14
  405936:	mov    esi,0x2dc3
  40593b:	mov    edx,0xfffffff4
  405940:	mov    ecx,0xfffeffff
  405945:	mov    r8d,0x18
  40594b:	mov    r9d,0x8
  405951:	mov    eax,0x0
  405956:	push   0x4
  405958:	push   0x4
  40595a:	push   0xffffffffffffffff
  40595c:	call   401680 <strstr@plt+0x4b0>
  405961:	add    rsp,0x18
  405965:	mov    rdi,r14
  405968:	mov    esi,0x2e1f
  40596d:	mov    edx,0x10
  405972:	mov    ecx,0x10
  405977:	mov    r8d,0x6
  40597d:	mov    r9d,0x2
  405983:	mov    eax,0x0
  405988:	push   0xfb
  40598d:	push   0x4
  40598f:	push   0xfffffffffffffffb
  405991:	call   401680 <strstr@plt+0x4b0>
  405996:	add    rsp,0x20
  40599a:	mov    rdi,r14
  40599d:	mov    esi,0x2e73
  4059a2:	mov    edx,0xfffff484
  4059a7:	mov    ecx,0xfffff484
  4059ac:	mov    r8d,0xc
  4059b2:	jmp    405ca0 <strstr@plt+0x4ad0>
  4059b7:	mov    esi,0x3689
  4059bc:	mov    edx,0xfffe0000
  4059c1:	xor    eax,eax
  4059c3:	call   401680 <strstr@plt+0x4b0>
  4059c8:	mov    rdi,r14
  4059cb:	mov    esi,0x2397
  4059d0:	jmp    404f30 <strstr@plt+0x3d60>
  4059d5:	mov    esi,0x2503
  4059da:	mov    edx,0xfffffff5
  4059df:	mov    ecx,0xfffe0000
  4059e4:	jmp    405bcb <strstr@plt+0x49fb>
  4059e9:	mov    rdi,r14
  4059ec:	mov    esi,0x2a8d
  4059f1:	mov    edx,0xfffe0000
  4059f6:	mov    ecx,0x28
  4059fb:	mov    r8d,0x10
  405a01:	mov    r9d,0x10
  405a07:	jmp    405afc <strstr@plt+0x492c>
  405a0c:	mov    rdi,r14
  405a0f:	mov    esi,0x28b1
  405a14:	jmp    404f30 <strstr@plt+0x3d60>
  405a19:	sub    rsp,0x8
  405a1d:	mov    rdi,r14
  405a20:	mov    esi,0x2f88
  405a25:	mov    edx,0xfffffff4
  405a2a:	mov    ecx,0x18
  405a2f:	mov    r8d,0x8
  405a35:	mov    r9d,0xffffffff
  405a3b:	mov    eax,0x0
  405a40:	push   0x10
  405a42:	push   0x4
  405a44:	push   0x4
  405a46:	call   401680 <strstr@plt+0x4b0>
  405a4b:	add    rsp,0x20
  405a4f:	mov    rdi,r14
  405a52:	mov    esi,0x2fe7
  405a57:	mov    edx,0x10
  405a5c:	mov    ecx,0x6
  405a61:	mov    r8d,0x2
  405a67:	mov    r9d,0x4
  405a6d:	mov    eax,0x0
  405a72:	push   0xc
  405a74:	push   0xfffffffffffff484
  405a79:	push   0xfffffffffffff484
  405a7e:	push   0xfb
  405a83:	call   401680 <strstr@plt+0x4b0>
  405a88:	add    rsp,0x20
  405a8c:	jmp    404f37 <strstr@plt+0x3d67>
  405a91:	mov    esi,0x265c
  405a96:	jmp    404f1c <strstr@plt+0x3d4c>
  405a9b:	mov    esi,0x2724
  405aa0:	jmp    405bea <strstr@plt+0x4a1a>
  405aa5:	mov    esi,0x37e1
  405aaa:	xor    eax,eax
  405aac:	call   401680 <strstr@plt+0x4b0>
  405ab1:	mov    rdi,r14
  405ab4:	mov    esi,0x37e9
  405ab9:	mov    edx,0xfffff530
  405abe:	mov    ecx,0xfffffffe
  405ac3:	xor    eax,eax
  405ac5:	call   401680 <strstr@plt+0x4b0>
  405aca:	mov    rdi,r14
  405acd:	mov    esi,0x37f8
  405ad2:	mov    edx,0xfffff520
  405ad7:	xor    eax,eax
  405ad9:	call   401680 <strstr@plt+0x4b0>
  405ade:	mov    rdi,r14
  405ae1:	mov    esi,0x37fe
  405ae6:	mov    edx,0xfffff530
  405aeb:	mov    ecx,0xffffffff
  405af0:	mov    r8d,0x10
  405af6:	mov    r9d,0x18
  405afc:	xor    eax,eax
  405afe:	call   401680 <strstr@plt+0x4b0>
  405b03:	jmp    404f37 <strstr@plt+0x3d67>
  405b08:	mov    rdi,r14
  405b0b:	mov    esi,0x2547
  405b10:	jmp    404f30 <strstr@plt+0x3d60>
  405b15:	mov    esi,0x2761
  405b1a:	jmp    404f1c <strstr@plt+0x3d4c>
  405b1f:	mov    esi,0x26b3
  405b24:	jmp    404f1c <strstr@plt+0x3d4c>
  405b29:	mov    rdi,r14
  405b2c:	mov    esi,0x28d4
  405b31:	jmp    404f30 <strstr@plt+0x3d60>
  405b36:	mov    rdi,r14
  405b39:	mov    esi,0x3017
  405b3e:	mov    edx,0x4
  405b43:	mov    ecx,0x4
  405b48:	mov    r8d,0x18
  405b4e:	mov    r9d,0x8
  405b54:	mov    eax,0x0
  405b59:	push   0x10
  405b5b:	push   0x10
  405b5d:	call   401680 <strstr@plt+0x4b0>
  405b62:	add    rsp,0x8
  405b66:	mov    rdi,r14
  405b69:	mov    esi,0x30ad
  405b6e:	mov    edx,0x4
  405b73:	mov    ecx,0xfb
  405b78:	mov    r8d,0xfffff484
  405b7e:	mov    r9d,0xfffff484
  405b84:	xor    eax,eax
  405b86:	push   0xc
  405b88:	jmp    405f06 <strstr@plt+0x4d36>
  405b8d:	mov    rdi,r14
  405b90:	mov    esi,0x25c0
  405b95:	mov    edx,0xfffffffb
  405b9a:	mov    ecx,0xc
  405b9f:	mov    r8d,0xfffffff4
  405ba5:	xor    eax,eax
  405ba7:	call   401680 <strstr@plt+0x4b0>
  405bac:	mov    rdi,r14
  405baf:	mov    esi,0x2610
  405bb4:	jmp    404f30 <strstr@plt+0x3d60>
  405bb9:	mov    rdi,r14
  405bbc:	mov    esi,0x2564
  405bc1:	mov    edx,0xfffffffe
  405bc6:	mov    ecx,0xfffffffd
  405bcb:	xor    eax,eax
  405bcd:	call   401680 <strstr@plt+0x4b0>
  405bd2:	jmp    404f37 <strstr@plt+0x3d67>
  405bd7:	mov    esi,0x2676
  405bdc:	jmp    405bea <strstr@plt+0x4a1a>
  405bde:	mov    esi,0x277b
  405be3:	jmp    405bea <strstr@plt+0x4a1a>
  405be5:	mov    esi,0x26cd
  405bea:	mov    edx,0xfffeffff
  405bef:	mov    ecx,0xfffeffff
  405bf4:	xor    eax,eax
  405bf6:	call   401680 <strstr@plt+0x4b0>
  405bfb:	jmp    404f28 <strstr@plt+0x3d58>
  405c00:	mov    edx,0x14
  405c05:	mov    rdi,r14
  405c08:	mov    esi,0x296c
  405c0d:	mov    ecx,0x6
  405c12:	mov    r8d,0x10
  405c18:	mov    r9d,0xfffffffc
  405c1e:	mov    eax,0x0
  405c23:	push   0xfffffffffffff448
  405c28:	push   0x3
  405c2a:	push   0x4
  405c2c:	push   0xfffffffffffffff6
  405c2e:	push   0xfffffffffffffffc
  405c30:	push   0x4
  405c32:	call   401680 <strstr@plt+0x4b0>
  405c37:	add    rsp,0x30
  405c3b:	mov    rdi,r14
  405c3e:	mov    esi,0x29cc
  405c43:	jmp    404f30 <strstr@plt+0x3d60>
  405c48:	mov    rdi,r14
  405c4b:	mov    esi,0x36c2
  405c50:	jmp    40502a <strstr@plt+0x3e5a>
  405c55:	mov    edx,0x7e
  405c5a:	mov    rdi,r14
  405c5d:	mov    esi,0x36dc
  405c62:	mov    ecx,0xffffff80
  405c67:	mov    r8d,0x1
  405c6d:	xor    eax,eax
  405c6f:	call   401680 <strstr@plt+0x4b0>
  405c74:	jmp    404f37 <strstr@plt+0x3d67>
  405c79:	mov    rdi,r14
  405c7c:	mov    esi,0x288c
  405c81:	mov    edx,0xfffffff5
  405c86:	jmp    40502f <strstr@plt+0x3e5f>
  405c8b:	mov    rdi,r14
  405c8e:	mov    esi,0x2589
  405c93:	mov    edx,0xfffeffff
  405c98:	xor    ecx,ecx
  405c9a:	mov    r8d,0x80000000
  405ca0:	xor    eax,eax
  405ca2:	call   401680 <strstr@plt+0x4b0>
  405ca7:	jmp    404f37 <strstr@plt+0x3d67>
  405cac:	mov    rdi,r14
  405caf:	mov    esi,0x28f6
  405cb4:	jmp    404f30 <strstr@plt+0x3d60>
  405cb9:	mov    rdi,r14
  405cbc:	mov    esi,0x2d52
  405cc1:	mov    edx,0xfffffff4
  405cc6:	mov    ecx,0x18
  405ccb:	mov    r8d,0x8
  405cd1:	mov    r9d,0xffffffff
  405cd7:	mov    eax,0x0
  405cdc:	push   0x1
  405cde:	push   0x6
  405ce0:	push   0x10
  405ce2:	push   0x10
  405ce4:	call   401680 <strstr@plt+0x4b0>
  405ce9:	add    rsp,0x20
  405ced:	mov    rdi,r14
  405cf0:	mov    esi,0x2db2
  405cf5:	mov    edx,0xffffffff
  405cfa:	jmp    40502f <strstr@plt+0x3e5f>
  405cff:	mov    r9d,0x18
  405d05:	mov    rdi,r14
  405d08:	mov    esi,0x2e88
  405d0d:	mov    edx,0xfffffff4
  405d12:	mov    ecx,0x1c
  405d17:	mov    r8d,0x8
  405d1d:	mov    eax,0x0
  405d22:	push   0xffffffffffffffff
  405d24:	push   0x8
  405d26:	push   0xfffffffffffffffb
  405d28:	push   0xc
  405d2a:	push   0x14
  405d2c:	push   0x6
  405d2e:	call   401680 <strstr@plt+0x4b0>
  405d33:	add    rsp,0x28
  405d37:	mov    rdi,r14
  405d3a:	mov    esi,0x2ed5
  405d3f:	mov    edx,0x4
  405d44:	mov    ecx,0x4
  405d49:	mov    r8d,0x10
  405d4f:	mov    r9d,0x10
  405d55:	mov    eax,0x0
  405d5a:	push   0x10
  405d5c:	push   0x2
  405d5e:	push   0x6
  405d60:	call   401680 <strstr@plt+0x4b0>
  405d65:	add    rsp,0x18
  405d69:	mov    rdi,r14
  405d6c:	mov    esi,0x2f2c
  405d71:	mov    edx,0x10
  405d76:	mov    ecx,0x6
  405d7b:	mov    r8d,0x2
  405d81:	mov    r9d,0xfffffffb
  405d87:	mov    eax,0x0
  405d8c:	push   0xc
  405d8e:	push   0xfffffffffffff484
  405d93:	push   0xfffffffffffff484
  405d98:	push   0xfb
  405d9d:	push   0x4
  405d9f:	push   0x10
  405da1:	push   0x10
  405da3:	call   401680 <strstr@plt+0x4b0>
  405da8:	add    rsp,0x40
  405dac:	jmp    404f37 <strstr@plt+0x3d67>
  405db1:	mov    rdi,r14
  405db4:	mov    esi,0x288c
  405db9:	mov    edx,0xfffffffb
  405dbe:	jmp    40502f <strstr@plt+0x3e5f>
  405dc3:	mov    rdi,r14
  405dc6:	mov    esi,0x2bfb
  405dcb:	mov    edx,0x8
  405dd0:	jmp    40502f <strstr@plt+0x3e5f>
  405dd5:	mov    rdi,r14
  405dd8:	mov    esi,0x2c0f
  405ddd:	mov    edx,0xfffffff4
  405de2:	mov    ecx,0xfffeffff
  405de7:	mov    r8d,0x18
  405ded:	mov    r9d,0x8
  405df3:	mov    eax,0x0
  405df8:	push   0x10
  405dfa:	push   0xffffffffffffffff
  405dfc:	call   401680 <strstr@plt+0x4b0>
  405e01:	add    rsp,0x8
  405e05:	mov    rdi,r14
  405e08:	mov    esi,0x2c85
  405e0d:	mov    edx,0x10
  405e12:	mov    ecx,0x6
  405e17:	mov    r8d,0x1
  405e1d:	mov    r9d,0xffffffff
  405e23:	xor    eax,eax
  405e25:	push   0xfffffffffffffffb
  405e27:	jmp    405f06 <strstr@plt+0x4d36>
  405e2c:	sub    rsp,0x8
  405e30:	mov    rdi,r14
  405e33:	mov    esi,0x2b84
  405e38:	mov    edx,0xfffff468
  405e3d:	mov    ecx,0xfffff46c
  405e42:	mov    r8d,0x10
  405e48:	jmp    405ea8 <strstr@plt+0x4cd8>
  405e4a:	sub    rsp,0x8
  405e4e:	mov    edx,0x14
  405e53:	mov    rdi,r14
  405e56:	mov    esi,0x29d8
  405e5b:	mov    ecx,0x10
  405e60:	mov    r8d,0xfffffffb
  405e66:	mov    r9d,0x4
  405e6c:	mov    eax,0x0
  405e71:	push   0xfffffffffffff448
  405e76:	push   0x6
  405e78:	push   0x3
  405e7a:	push   0x4
  405e7c:	push   0x4
  405e7e:	call   401680 <strstr@plt+0x4b0>
  405e83:	add    rsp,0x30
  405e87:	jmp    404f37 <strstr@plt+0x3d67>
  405e8c:	sub    rsp,0x8
  405e90:	mov    rdi,r14
  405e93:	mov    esi,0x2b08
  405e98:	mov    edx,0x10
  405e9d:	mov    ecx,0xfffff468
  405ea2:	mov    r8d,0xfffff46c
  405ea8:	mov    r9d,0x10
  405eae:	xor    eax,eax
  405eb0:	push   0xfffffffffffffff4
  405eb2:	jmp    405f06 <strstr@plt+0x4d36>
  405eb4:	mov    rdi,r14
  405eb7:	mov    esi,0x31f7
  405ebc:	mov    edx,0x18
  405ec1:	mov    ecx,0x8
  405ec6:	mov    r8d,0xffffffff
  405ecc:	mov    r9d,0xfffe0000
  405ed2:	mov    eax,0x0
  405ed7:	push   0x18
  405ed9:	push   0x1c
  405edb:	call   401680 <strstr@plt+0x4b0>
  405ee0:	add    rsp,0x8
  405ee4:	mov    rdi,r14
  405ee7:	mov    esi,0x328f
  405eec:	mov    edx,0x14
  405ef1:	mov    ecx,0x4
  405ef6:	mov    r8d,0xffffffff
  405efc:	mov    r9d,0x8
  405f02:	xor    eax,eax
  405f04:	push   0x0
  405f06:	call   401680 <strstr@plt+0x4b0>
  405f0b:	add    rsp,0x10
  405f0f:	jmp    404f37 <strstr@plt+0x3d67>
  405f14:	mov    rdi,r14
  405f17:	mov    esi,0x21e4
  405f1c:	jmp    404f30 <strstr@plt+0x3d60>
  405f21:	mov    rdi,r14
  405f24:	mov    esi,0x372f
  405f29:	mov    edx,0x3
  405f2e:	mov    ecx,0x20
  405f33:	mov    r8d,0xffffffc2
  405f39:	mov    r9d,0xffffffff
  405f3f:	xor    eax,eax
  405f41:	call   401680 <strstr@plt+0x4b0>
  405f46:	mov    rdi,r14
  405f49:	mov    esi,0x3790
  405f4e:	mov    edx,0xffffffcc
  405f53:	xor    eax,eax
  405f55:	call   401680 <strstr@plt+0x4b0>
  405f5a:	mov    rdi,r14
  405f5d:	mov    esi,0x37a9
  405f62:	mov    edx,0xffffffff
  405f67:	jmp    40502f <strstr@plt+0x3e5f>
  405f6c:	mov    esi,0x27b8
  405f71:	mov    edx,0xfffeffff
  405f76:	xor    eax,eax
  405f78:	call   401680 <strstr@plt+0x4b0>
  405f7d:	jmp    405f95 <strstr@plt+0x4dc5>
  405f7f:	mov    esi,0x27d2
  405f84:	mov    edx,0xfffeffff
  405f89:	mov    ecx,0xfffeffff
  405f8e:	xor    eax,eax
  405f90:	call   401680 <strstr@plt+0x4b0>
  405f95:	mov    rdi,r14
  405f98:	mov    esi,0x2815
  405f9d:	jmp    404f30 <strstr@plt+0x3d60>
  405fa2:	mov    rdi,r14
  405fa5:	mov    esi,0x3471
  405faa:	xor    eax,eax
  405fac:	call   401680 <strstr@plt+0x4b0>
  405fb1:	jmp    4055e7 <strstr@plt+0x4417>
  405fb6:	add    rsp,0x8
  405fba:	pop    rbx
  405fbb:	pop    r12
  405fbd:	pop    r13
  405fbf:	pop    r14
  405fc1:	pop    r15
  405fc3:	pop    rbp
  405fc4:	ret    
  405fc5:	mov    rax,QWORD PTR [rip+0xd024]        # 412ff0 <strstr@plt+0x11e20>
  405fcc:	mov    rdi,QWORD PTR [rax]
  405fcf:	lea    rax,[rip+0xbaba]        # 411a90 <strstr@plt+0x108c0>
  405fd6:	mov    rdx,QWORD PTR [rax+rbx*8]
  405fda:	lea    rsi,[rip+0x7f35]        # 40df16 <strstr@plt+0xcd46>
  405fe1:	xor    eax,eax
  405fe3:	call   401120 <fprintf@plt>
  405fe8:	mov    edi,0x2
  405fed:	call   4011a0 <exit@plt>
  405ff2:	mov    edi,0x1
  405ff7:	call   4011a0 <exit@plt>
  405ffc:	nop    DWORD PTR [rax+0x0]
  406000:	push   rbp
  406001:	push   r15
  406003:	push   r14
  406005:	push   r13
  406007:	push   r12
  406009:	push   rbx
  40600a:	sub    rsp,0x28
  40600e:	mov    r13,rdi
  406011:	mov    rdi,QWORD PTR [rdi+0x10]
  406015:	mov    rdx,QWORD PTR [r13+0x88]
  40601c:	lea    rsi,[rip+0x8ef9]        # 40ef1c <strstr@plt+0xdd4c>
  406023:	xor    eax,eax
  406025:	call   401120 <fprintf@plt>
  40602a:	mov    rcx,QWORD PTR [r13+0x10]
  40602e:	lea    rdi,[rip+0x8f01]        # 40ef36 <strstr@plt+0xdd66>
  406035:	mov    esi,0x7
  40603a:	mov    edx,0x1
  40603f:	call   4011b0 <fwrite@plt>
  406044:	movsxd rax,DWORD PTR [r13+0x8]
  406048:	cmp    rax,0x2
  40604c:	ja     406069 <strstr@plt+0x4e99>
  40604e:	lea    rcx,[rip+0xcc3b]        # 412c90 <strstr@plt+0x11ac0>
  406055:	mov    rsi,QWORD PTR [rcx+rax*8]
  406059:	mov    rdi,QWORD PTR [r13+0x10]
  40605d:	mov    edx,0x4
  406062:	xor    eax,eax
  406064:	call   401120 <fprintf@plt>
  406069:	mov    rsi,QWORD PTR [r13+0x70]
  40606d:	mov    rdi,r13
  406070:	xor    edx,edx
  406072:	xor    ecx,ecx
  406074:	call   406520 <strstr@plt+0x5350>
  406079:	cmp    DWORD PTR [r13+0x8],0x2
  40607e:	je     40609a <strstr@plt+0x4eca>
  406080:	mov    rcx,QWORD PTR [r13+0x10]
  406084:	lea    rdi,[rip+0x8eb3]        # 40ef3e <strstr@plt+0xdd6e>
  40608b:	mov    esi,0x9
  406090:	mov    edx,0x1
  406095:	call   4011b0 <fwrite@plt>
  40609a:	cmp    DWORD PTR [r13+0x40],0x0
  40609f:	jle    40647d <strstr@plt+0x52ad>
  4060a5:	xor    edx,edx
  4060a7:	xor    ebx,ebx
  4060a9:	jmp    4060c6 <strstr@plt+0x4ef6>
  4060ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4060b0:	movsxd rax,DWORD PTR [r13+0x40]
  4060b4:	mov    rdx,QWORD PTR [rsp+0x20]
  4060b9:	cmp    rdx,rax
  4060bc:	mov    rbx,QWORD PTR [rsp]
  4060c0:	jge    40647d <strstr@plt+0x52ad>
  4060c6:	mov    rax,QWORD PTR [r13+0x58]
  4060ca:	mov    rcx,rdx
  4060cd:	shl    rcx,0x4
  4060d1:	mov    ebp,DWORD PTR [rax+rcx*1+0x8]
  4060d5:	inc    rdx
  4060d8:	mov    QWORD PTR [rsp+0x20],rdx
  4060dd:	shl    rdx,0x4
  4060e1:	mov    r14d,DWORD PTR [rax+rdx*1+0x8]
  4060e6:	mov    rsi,QWORD PTR [rax+rcx*1]
  4060ea:	mov    DWORD PTR [rsp+0xc],r14d
  4060ef:	sub    r14d,ebp
  4060f2:	mov    rdi,r13
  4060f5:	mov    edx,r14d
  4060f8:	mov    ecx,0x1
  4060fd:	call   406520 <strstr@plt+0x5350>
  406102:	cmp    ebx,DWORD PTR [r13+0x44]
  406106:	jge    4063d0 <strstr@plt+0x5200>
  40610c:	movsxd rbx,ebx
  40610f:	jmp    40616d <strstr@plt+0x4f9d>
  406111:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40611b:	nop    DWORD PTR [rax+rax*1+0x0]
  406120:	mov    rdi,QWORD PTR [r13+0x10]
  406124:	lea    rsi,[rip+0x8ed5]        # 40f000 <strstr@plt+0xde30>
  40612b:	mov    rdx,r14
  40612e:	xor    eax,eax
  406130:	call   401120 <fprintf@plt>
  406135:	mov    rdi,QWORD PTR [r13+0x10]
  406139:	test   ebx,ebx
  40613b:	mov    ebp,DWORD PTR [rsp+0x8]
  40613f:	je     4062c4 <strstr@plt+0x50f4>
  406145:	lea    rsi,[rip+0x8f8d]        # 40f0d9 <strstr@plt+0xdf09>
  40614c:	mov    rdx,r14
  40614f:	xor    eax,eax
  406151:	call   401120 <fprintf@plt>
  406156:	mov    rbx,QWORD PTR [rsp]
  40615a:	add    ebp,0x4
  40615d:	inc    rbx
  406160:	movsxd rax,DWORD PTR [r13+0x44]
  406164:	cmp    rbx,rax
  406167:	jge    4063e2 <strstr@plt+0x5212>
  40616d:	mov    eax,ebp
  40616f:	lea    rbp,[rbx+rbx*2]
  406173:	mov    esi,DWORD PTR [r13+rbp*4+0x90]
  40617b:	cmp    esi,DWORD PTR [rsp+0xc]
  40617f:	jg     4063e0 <strstr@plt+0x5210>
  406185:	mov    edi,esi
  406187:	sub    edi,eax
  406189:	cmp    DWORD PTR [r13+0x8],0x2
  40618e:	mov    QWORD PTR [rsp],rbx
  406192:	mov    DWORD PTR [rsp+0x8],esi
  406196:	jne    406200 <strstr@plt+0x5030>
  406198:	cmp    DWORD PTR [r13+rbp*4+0x98],0x0
  4061a1:	je     406200 <strstr@plt+0x5030>
  4061a3:	mov    rcx,QWORD PTR [r13+0x60]
  4061a7:	movsxd rdx,DWORD PTR [r13+rbp*4+0x94]
  4061af:	mov    rdx,QWORD PTR [rcx+rdx*8]
  4061b3:	test   edi,edi
  4061b5:	jle    4064f8 <strstr@plt+0x5328>
  4061bb:	movsxd r15,eax
  4061be:	add    r15,QWORD PTR [r13+0x28]
  4061c2:	movsxd rax,edi
  4061c5:	lea    r14,[rax-0x1]
  4061c9:	movzx  ecx,BYTE PTR [r15+r14*1]
  4061ce:	cmp    rcx,0xe8
  4061d5:	mov    QWORD PTR [rsp+0x10],rdx
  4061da:	je     4062d0 <strstr@plt+0x5100>
  4061e0:	cmp    cl,0xe9
  4061e3:	jne    4062e6 <strstr@plt+0x5116>
  4061e9:	lea    rax,[rip+0x8e61]        # 40f051 <strstr@plt+0xde81>
  4061f0:	jmp    4062d7 <strstr@plt+0x5107>
  4061f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061ff:	nop
  406200:	mov    DWORD PTR [rsp+0x10],edi
  406204:	test   edi,edi
  406206:	jle    406270 <strstr@plt+0x50a0>
  406208:	movsxd r15,eax
  40620b:	add    r15,QWORD PTR [r13+0x28]
  40620f:	mov    r12d,DWORD PTR [rsp+0x10]
  406214:	xor    ebx,ebx
  406216:	jmp    406236 <strstr@plt+0x5066>
  406218:	nop    DWORD PTR [rax+rax*1+0x0]
  406220:	lea    rsi,[rip+0x8ea4]        # 40f0cb <strstr@plt+0xdefb>
  406227:	xor    eax,eax
  406229:	call   401120 <fprintf@plt>
  40622e:	inc    rbx
  406231:	cmp    r12,rbx
  406234:	je     406270 <strstr@plt+0x50a0>
  406236:	mov    r14d,ebx
  406239:	mov    rdi,QWORD PTR [r13+0x10]
  40623d:	movzx  edx,BYTE PTR [r15+rbx*1]
  406242:	and    r14d,0xf
  406246:	je     406220 <strstr@plt+0x5050>
  406248:	lea    rsi,[rip+0x8e86]        # 40f0d5 <strstr@plt+0xdf05>
  40624f:	xor    eax,eax
  406251:	call   401120 <fprintf@plt>
  406256:	cmp    r14d,0xf
  40625a:	jne    40622e <strstr@plt+0x505e>
  40625c:	mov    rsi,QWORD PTR [r13+0x10]
  406260:	mov    edi,0xa
  406265:	call   401110 <putc@plt>
  40626a:	jmp    40622e <strstr@plt+0x505e>
  40626c:	nop    DWORD PTR [rax+0x0]
  406270:	test   BYTE PTR [rsp+0x10],0xf
  406275:	je     406285 <strstr@plt+0x50b5>
  406277:	mov    rsi,QWORD PTR [r13+0x10]
  40627b:	mov    edi,0xa
  406280:	call   401110 <putc@plt>
  406285:	mov    ebx,DWORD PTR [r13+rbp*4+0x98]
  40628d:	mov    rax,QWORD PTR [r13+0x60]
  406291:	movsxd rcx,DWORD PTR [r13+rbp*4+0x94]
  406299:	mov    r14,QWORD PTR [rax+rcx*8]
  40629d:	mov    eax,DWORD PTR [r13+0x8]
  4062a1:	cmp    eax,0x1
  4062a4:	je     406120 <strstr@plt+0x4f50>
  4062aa:	test   eax,eax
  4062ac:	mov    ebp,DWORD PTR [rsp+0x8]
  4062b0:	jne    4062c0 <strstr@plt+0x50f0>
  4062b2:	mov    rdi,QWORD PTR [r13+0x10]
  4062b6:	test   ebx,ebx
  4062b8:	jne    406145 <strstr@plt+0x4f75>
  4062be:	jmp    4062c4 <strstr@plt+0x50f4>
  4062c0:	mov    rdi,QWORD PTR [r13+0x10]
  4062c4:	lea    rsi,[rip+0x8e1d]        # 40f0e8 <strstr@plt+0xdf18>
  4062cb:	jmp    40614c <strstr@plt+0x4f7c>
  4062d0:	lea    rax,[rip+0x719f]        # 40d476 <strstr@plt+0xc2a6>
  4062d7:	mov    QWORD PTR [rsp+0x18],rax
  4062dc:	test   r14d,r14d
  4062df:	jg     40632c <strstr@plt+0x515c>
  4062e1:	jmp    406390 <strstr@plt+0x51c0>
  4062e6:	test   cl,cl
  4062e8:	jns    4064f8 <strstr@plt+0x5328>
  4062ee:	test   r14d,r14d
  4062f1:	jle    4064f8 <strstr@plt+0x5328>
  4062f7:	cmp    cl,0x8f
  4062fa:	ja     4064f8 <strstr@plt+0x5328>
  406300:	cmp    BYTE PTR [r15+rax*1-0x2],0xf
  406306:	jne    4064f8 <strstr@plt+0x5328>
  40630c:	add    rax,0xfffffffffffffffe
  406310:	lea    rdx,[rip+0xc8f9]        # 412c10 <strstr@plt+0x11a40>
  406317:	mov    rcx,QWORD PTR [rdx+rcx*8-0x400]
  40631f:	mov    QWORD PTR [rsp+0x18],rcx
  406324:	mov    r14d,eax
  406327:	test   r14d,r14d
  40632a:	jle    406390 <strstr@plt+0x51c0>
  40632c:	mov    r12d,r14d
  40632f:	xor    ebx,ebx
  406331:	jmp    406356 <strstr@plt+0x5186>
  406333:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40633d:	nop    DWORD PTR [rax]
  406340:	lea    rsi,[rip+0x8d84]        # 40f0cb <strstr@plt+0xdefb>
  406347:	xor    eax,eax
  406349:	call   401120 <fprintf@plt>
  40634e:	inc    rbx
  406351:	cmp    r12,rbx
  406354:	je     406390 <strstr@plt+0x51c0>
  406356:	mov    ebp,ebx
  406358:	mov    rdi,QWORD PTR [r13+0x10]
  40635c:	movzx  edx,BYTE PTR [r15+rbx*1]
  406361:	and    ebp,0xf
  406364:	je     406340 <strstr@plt+0x5170>
  406366:	lea    rsi,[rip+0x8d68]        # 40f0d5 <strstr@plt+0xdf05>
  40636d:	xor    eax,eax
  40636f:	call   401120 <fprintf@plt>
  406374:	cmp    ebp,0xf
  406377:	jne    40634e <strstr@plt+0x517e>
  406379:	mov    rsi,QWORD PTR [r13+0x10]
  40637d:	mov    edi,0xa
  406382:	call   401110 <putc@plt>
  406387:	jmp    40634e <strstr@plt+0x517e>
  406389:	nop    DWORD PTR [rax+0x0]
  406390:	test   r14b,0xf
  406394:	je     4063a4 <strstr@plt+0x51d4>
  406396:	mov    rsi,QWORD PTR [r13+0x10]
  40639a:	mov    edi,0xa
  40639f:	call   401110 <putc@plt>
  4063a4:	mov    rdi,QWORD PTR [r13+0x10]
  4063a8:	lea    rsi,[rip+0x8cdb]        # 40f08a <strstr@plt+0xdeba>
  4063af:	mov    rdx,QWORD PTR [rsp+0x18]
  4063b4:	mov    rcx,QWORD PTR [rsp+0x10]
  4063b9:	xor    eax,eax
  4063bb:	call   401120 <fprintf@plt>
  4063c0:	mov    rbx,QWORD PTR [rsp]
  4063c4:	mov    ebp,DWORD PTR [rsp+0x8]
  4063c8:	jmp    40615a <strstr@plt+0x4f8a>
  4063cd:	nop    DWORD PTR [rax]
  4063d0:	mov    QWORD PTR [rsp],rbx
  4063d4:	test   r14d,r14d
  4063d7:	jg     4063f3 <strstr@plt+0x5223>
  4063d9:	jmp    406460 <strstr@plt+0x5290>
  4063de:	xchg   ax,ax
  4063e0:	mov    ebp,eax
  4063e2:	mov    QWORD PTR [rsp],rbx
  4063e6:	mov    r14d,DWORD PTR [rsp+0xc]
  4063eb:	sub    r14d,ebp
  4063ee:	test   r14d,r14d
  4063f1:	jle    406460 <strstr@plt+0x5290>
  4063f3:	movsxd r12,ebp
  4063f6:	add    r12,QWORD PTR [r13+0x28]
  4063fa:	mov    r15d,r14d
  4063fd:	xor    ebx,ebx
  4063ff:	jmp    406426 <strstr@plt+0x5256>
  406401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40640b:	nop    DWORD PTR [rax+rax*1+0x0]
  406410:	lea    rsi,[rip+0x8cb4]        # 40f0cb <strstr@plt+0xdefb>
  406417:	xor    eax,eax
  406419:	call   401120 <fprintf@plt>
  40641e:	inc    rbx
  406421:	cmp    r15,rbx
  406424:	je     406460 <strstr@plt+0x5290>
  406426:	mov    ebp,ebx
  406428:	mov    rdi,QWORD PTR [r13+0x10]
  40642c:	movzx  edx,BYTE PTR [r12+rbx*1]
  406431:	and    ebp,0xf
  406434:	je     406410 <strstr@plt+0x5240>
  406436:	lea    rsi,[rip+0x8c98]        # 40f0d5 <strstr@plt+0xdf05>
  40643d:	xor    eax,eax
  40643f:	call   401120 <fprintf@plt>
  406444:	cmp    ebp,0xf
  406447:	jne    40641e <strstr@plt+0x524e>
  406449:	mov    rsi,QWORD PTR [r13+0x10]
  40644d:	mov    edi,0xa
  406452:	call   401110 <putc@plt>
  406457:	jmp    40641e <strstr@plt+0x524e>
  406459:	nop    DWORD PTR [rax+0x0]
  406460:	test   r14b,0xf
  406464:	je     4060b0 <strstr@plt+0x4ee0>
  40646a:	mov    rsi,QWORD PTR [r13+0x10]
  40646e:	mov    edi,0xa
  406473:	call   401110 <putc@plt>
  406478:	jmp    4060b0 <strstr@plt+0x4ee0>
  40647d:	mov    rsi,QWORD PTR [r13+0x10]
  406481:	mov    edi,0xa
  406486:	call   4010d0 <fputc@plt>
  40648b:	mov    eax,DWORD PTR [r13+0x8]
  40648f:	cmp    eax,0x2
  406492:	je     4064c0 <strstr@plt+0x52f0>
  406494:	lea    rbp,[rip+0x8ad5]        # 40ef70 <strstr@plt+0xdda0>
  40649b:	cmp    eax,0x1
  40649e:	je     4064c7 <strstr@plt+0x52f7>
  4064a0:	test   eax,eax
  4064a2:	jne    4064dc <strstr@plt+0x530c>
  4064a4:	mov    rcx,QWORD PTR [r13+0x10]
  4064a8:	lea    rdi,[rip+0x8a99]        # 40ef48 <strstr@plt+0xdd78>
  4064af:	mov    esi,0x27
  4064b4:	mov    edx,0x1
  4064b9:	call   4011b0 <fwrite@plt>
  4064be:	jmp    4064c7 <strstr@plt+0x52f7>
  4064c0:	lea    rbp,[rip+0x8ab7]        # 40ef7e <strstr@plt+0xddae>
  4064c7:	mov    rdi,QWORD PTR [r13+0x10]
  4064cb:	mov    rdx,QWORD PTR [r13+0x80]
  4064d2:	mov    rsi,rbp
  4064d5:	xor    eax,eax
  4064d7:	call   401120 <fprintf@plt>
  4064dc:	mov    rsi,QWORD PTR [r13+0x10]
  4064e0:	mov    edi,0xa
  4064e5:	add    rsp,0x28
  4064e9:	pop    rbx
  4064ea:	pop    r12
  4064ec:	pop    r13
  4064ee:	pop    r14
  4064f0:	pop    r15
  4064f2:	pop    rbp
  4064f3:	jmp    4010d0 <fputc@plt>
  4064f8:	mov    rax,QWORD PTR [rip+0xcaf1]        # 412ff0 <strstr@plt+0x11e20>
  4064ff:	mov    rdi,QWORD PTR [rax]
  406502:	lea    rsi,[rip+0x8b4c]        # 40f055 <strstr@plt+0xde85>
  406509:	xor    eax,eax
  40650b:	call   401120 <fprintf@plt>
  406510:	mov    edi,0x1
  406515:	call   4011a0 <exit@plt>
  40651a:	nop    WORD PTR [rax+rax*1+0x0]
  406520:	push   rbp
  406521:	push   r14
  406523:	push   rbx
  406524:	mov    r14,rsi
  406527:	mov    rbx,rdi
  40652a:	mov    eax,DWORD PTR [rdi+0x8]
  40652d:	cmp    eax,0x2
  406530:	je     406585 <strstr@plt+0x53b5>
  406532:	mov    ebp,ecx
  406534:	cmp    eax,0x1
  406537:	je     4065a4 <strstr@plt+0x53d4>
  406539:	test   eax,eax
  40653b:	jne    406580 <strstr@plt+0x53b0>
  40653d:	mov    r10d,edx
  406540:	mov    rdi,QWORD PTR [rbx+0x10]
  406544:	test   ebp,ebp
  406546:	lea    rax,[rip+0x8a9f]        # 40efec <strstr@plt+0xde1c>
  40654d:	lea    r9,[rip+0x8725]        # 40ec79 <strstr@plt+0xdaa9>
  406554:	cmove  r9,rax
  406558:	sub    rsp,0x8
  40655c:	lea    rsi,[rip+0x8a4f]        # 40efb2 <strstr@plt+0xdde2>
  406563:	mov    rdx,r14
  406566:	mov    rcx,r14
  406569:	mov    r8,r14
  40656c:	mov    eax,0x0
  406571:	push   r14
  406573:	push   r10
  406575:	push   r14
  406577:	call   401120 <fprintf@plt>
  40657c:	add    rsp,0x20
  406580:	pop    rbx
  406581:	pop    r14
  406583:	pop    rbp
  406584:	ret    
  406585:	mov    rdi,QWORD PTR [rbx+0x10]
  406589:	lea    rsi,[rip+0x8a94]        # 40f024 <strstr@plt+0xde54>
  406590:	mov    rdx,r14
  406593:	mov    rcx,r14
  406596:	mov    r8,r14
  406599:	xor    eax,eax
  40659b:	pop    rbx
  40659c:	pop    r14
  40659e:	pop    rbp
  40659f:	jmp    401120 <fprintf@plt>
  4065a4:	mov    rdi,QWORD PTR [rbx+0x10]
  4065a8:	lea    rsi,[rip+0x8a44]        # 40eff3 <strstr@plt+0xde23>
  4065af:	mov    rdx,r14
  4065b2:	xor    eax,eax
  4065b4:	call   401120 <fprintf@plt>
  4065b9:	test   ebp,ebp
  4065bb:	je     4065d2 <strstr@plt+0x5402>
  4065bd:	mov    rdi,QWORD PTR [rbx+0x10]
  4065c1:	lea    rsi,[rip+0x8a38]        # 40f000 <strstr@plt+0xde30>
  4065c8:	mov    rdx,r14
  4065cb:	xor    eax,eax
  4065cd:	call   401120 <fprintf@plt>
  4065d2:	mov    rdi,QWORD PTR [rbx+0x10]
  4065d6:	lea    rsi,[rip+0x8a0a]        # 40efe7 <strstr@plt+0xde17>
  4065dd:	mov    rdx,r14
  4065e0:	xor    eax,eax
  4065e2:	pop    rbx
  4065e3:	pop    r14
  4065e5:	pop    rbp
  4065e6:	jmp    401120 <fprintf@plt>
  4065eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4065f0:	push   rbp
  4065f1:	mov    rbp,rsp
  4065f4:	push   r15
  4065f6:	push   r14
  4065f8:	push   r13
  4065fa:	push   r12
  4065fc:	push   rbx
  4065fd:	and    rsp,0xffffffffffffffe0
  406601:	sub    rsp,0x140
  406608:	vxorps xmm0,xmm0,xmm0
  40660c:	vmovups YMMWORD PTR [rsp+0x75],ymm0
  406612:	vmovups YMMWORD PTR [rsp+0xec],ymm0
  40661b:	vmovups YMMWORD PTR [rsp+0xd5],ymm0
  406624:	vmovups YMMWORD PTR [rsp+0xb5],ymm0
  40662d:	vmovups YMMWORD PTR [rsp+0x95],ymm0
  406636:	mov    r13,rdi
  406639:	mov    DWORD PTR [rsp+0x70],0x7865742e
  406641:	mov    BYTE PTR [rsp+0x74],0x74
  406646:	mov    DWORD PTR [rsp+0x84],0xb4
  406651:	mov    eax,DWORD PTR [rdi+0x30]
  406654:	mov    DWORD PTR [rsp+0x80],eax
  40665b:	lea    ecx,[rax+0xb4]
  406661:	mov    DWORD PTR [rsp+0x88],ecx
  406668:	mov    ecx,DWORD PTR [rdi+0x44]
  40666b:	movzx  ecx,cx
  40666e:	mov    WORD PTR [rsp+0x90],cx
  406676:	lea    ecx,[rcx+rcx*4]
  406679:	lea    ebx,[rax+rcx*2+0xb4]
  406680:	movabs rdx,0x6164702e60500020
  40668a:	mov    QWORD PTR [rsp+0x94],rdx
  406692:	mov    WORD PTR [rsp+0x9c],0x6174
  40669c:	mov    DWORD PTR [rsp+0xac],ebx
  4066a3:	mov    DWORD PTR [rsp+0xa8],0x18
  4066ae:	lea    edx,[rax+rcx*2+0xcc]
  4066b5:	mov    DWORD PTR [rsp+0xb0],edx
  4066bc:	mov    WORD PTR [rsp+0xb8],0x6
  4066c6:	lea    edx,[rax+rcx*2+0x108]
  4066cd:	movabs rsi,0x6164782e40300040
  4066d7:	mov    QWORD PTR [rsp+0xbc],rsi
  4066df:	mov    WORD PTR [rsp+0xc4],0x6174
  4066e9:	mov    DWORD PTR [rsp+0xd4],edx
  4066f0:	mov    DWORD PTR [rsp+0xd0],0x20
  4066fb:	lea    edx,[rax+rcx*2+0x128]
  406702:	mov    DWORD PTR [rsp+0xd8],edx
  406709:	mov    WORD PTR [rsp+0xe0],0x1
  406713:	lea    eax,[rax+rcx*2+0x132]
  40671a:	mov    DWORD PTR [rsp+0xe4],0x40300040
  406725:	movabs rcx,0x5a2461746164722e
  40672f:	mov    QWORD PTR [rsp+0xe8],rcx
  406737:	mov    DWORD PTR [rsp+0xfc],eax
  40673e:	mov    rdi,QWORD PTR [rdi+0x80]
  406745:	vzeroupper 
  406748:	call   4010a0 <strlen@plt>
  40674d:	lea    ecx,[rax+0x1]
  406750:	mov    DWORD PTR [rsp+0xf8],ecx
  406757:	lea    eax,[rax+rbx*1]
  40675a:	add    eax,0x7f
  40675d:	mov    DWORD PTR [rsp+0x10c],0x40300040
  406768:	mov    QWORD PTR [rsp+0x110],0x48664
  406774:	mov    DWORD PTR [rsp+0x118],eax
  40677b:	mov    DWORD PTR [rsp+0x120],0x0
  406786:	mov    eax,DWORD PTR [r13+0x40]
  40678a:	mov    ecx,DWORD PTR [r13+0x48]
  40678e:	mov    QWORD PTR [rsp+0x68],rcx
  406793:	lea    eax,[rcx+rax*1+0xb]
  406797:	mov    DWORD PTR [rsp+0x11c],eax
  40679e:	lea    rsi,[rsp+0x110]
  4067a6:	mov    edx,0x14
  4067ab:	mov    rdi,r13
  4067ae:	call   402980 <strstr@plt+0x17b0>
  4067b3:	lea    rsi,[rsp+0x70]
  4067b8:	mov    edx,0xa0
  4067bd:	mov    rdi,r13
  4067c0:	call   402980 <strstr@plt+0x17b0>
  4067c5:	mov    rsi,QWORD PTR [r13+0x28]
  4067c9:	mov    rdx,QWORD PTR [r13+0x30]
  4067cd:	mov    rdi,r13
  4067d0:	call   402980 <strstr@plt+0x17b0>
  4067d5:	cmp    DWORD PTR [r13+0x44],0x0
  4067da:	jle    406832 <strstr@plt+0x5662>
  4067dc:	lea    rbx,[r13+0x98]
  4067e3:	xor    r15d,r15d
  4067e6:	lea    r14,[rsp+0x20]
  4067eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4067f0:	mov    eax,DWORD PTR [rbx-0x8]
  4067f3:	mov    DWORD PTR [rsp+0x20],eax
  4067f7:	mov    eax,DWORD PTR [rbx-0x4]
  4067fa:	add    eax,0x3
  4067fd:	mov    DWORD PTR [rsp+0x24],eax
  406801:	xor    eax,eax
  406803:	cmp    DWORD PTR [rbx],0x0
  406806:	setne  al
  406809:	lea    eax,[rax+rax*1+0x2]
  40680d:	mov    WORD PTR [rsp+0x28],ax
  406812:	mov    edx,0xa
  406817:	mov    rdi,r13
  40681a:	mov    rsi,r14
  40681d:	call   402980 <strstr@plt+0x17b0>
  406822:	inc    r15
  406825:	movsxd rax,DWORD PTR [r13+0x44]
  406829:	add    rbx,0xc
  40682d:	cmp    r15,rax
  406830:	jl     4067f0 <strstr@plt+0x5620>
  406832:	mov    rax,QWORD PTR [r13+0x58]
  406836:	movsxd rcx,DWORD PTR [r13+0x40]
  40683a:	shl    rcx,0x4
  40683e:	mov    ebx,DWORD PTR [rcx+rax*1-0x8]
  406842:	mov    DWORD PTR [rsp+0x20],0x0
  40684a:	mov    DWORD PTR [rsp+0x24],ebx
  40684e:	mov    DWORD PTR [rsp+0x28],0x0
  406856:	lea    r14,[rsp+0x20]
  40685b:	mov    edx,0xc
  406860:	mov    rdi,r13
  406863:	mov    rsi,r14
  406866:	call   402980 <strstr@plt+0x17b0>
  40686b:	mov    DWORD PTR [rsp+0x20],ebx
  40686f:	mov    eax,DWORD PTR [r13+0x30]
  406873:	mov    DWORD PTR [rsp+0x24],eax
  406877:	mov    DWORD PTR [rsp+0x28],0x14
  40687f:	mov    edx,0xc
  406884:	mov    rdi,r13
  406887:	mov    rsi,r14
  40688a:	call   402980 <strstr@plt+0x17b0>
  40688f:	mov    DWORD PTR [rsp],0x0
  406896:	mov    rax,QWORD PTR [rsp+0x68]
  40689b:	lea    r15d,[rax+0x5]
  40689f:	lea    r14d,[rax+0x7]
  4068a3:	lea    ebx,[rax+0x8]
  4068a6:	mov    DWORD PTR [rsp+0x4],ebx
  4068aa:	mov    WORD PTR [rsp+0x8],0x3
  4068b1:	mov    r12,rsp
  4068b4:	mov    edx,0xa
  4068b9:	mov    rdi,r13
  4068bc:	mov    rsi,r12
  4068bf:	call   402980 <strstr@plt+0x17b0>
  4068c4:	mov    DWORD PTR [rsp],0x4
  4068cb:	mov    DWORD PTR [rsp+0x4],ebx
  4068cf:	mov    WORD PTR [rsp+0x8],0x3
  4068d6:	mov    edx,0xa
  4068db:	mov    rdi,r13
  4068de:	mov    rsi,r12
  4068e1:	call   402980 <strstr@plt+0x17b0>
  4068e6:	mov    DWORD PTR [rsp],0x8
  4068ed:	mov    DWORD PTR [rsp+0x4],r15d
  4068f2:	mov    WORD PTR [rsp+0x8],0x3
  4068f9:	mov    edx,0xa
  4068fe:	mov    rdi,r13
  406901:	mov    rsi,r12
  406904:	call   402980 <strstr@plt+0x17b0>
  406909:	mov    DWORD PTR [rsp],0xc
  406910:	mov    DWORD PTR [rsp+0x4],ebx
  406914:	mov    WORD PTR [rsp+0x8],0x3
  40691b:	mov    edx,0xa
  406920:	mov    rdi,r13
  406923:	mov    rsi,r12
  406926:	call   402980 <strstr@plt+0x17b0>
  40692b:	mov    DWORD PTR [rsp],0x10
  406932:	mov    DWORD PTR [rsp+0x4],ebx
  406936:	mov    WORD PTR [rsp+0x8],0x3
  40693d:	mov    edx,0xa
  406942:	mov    rdi,r13
  406945:	mov    rsi,r12
  406948:	call   402980 <strstr@plt+0x17b0>
  40694d:	mov    DWORD PTR [rsp],0x14
  406954:	mov    DWORD PTR [rsp+0x4],r15d
  406959:	mov    WORD PTR [rsp+0x8],0x3
  406960:	mov    edx,0xa
  406965:	mov    rdi,r13
  406968:	mov    rsi,r12
  40696b:	call   402980 <strstr@plt+0x17b0>
  406970:	vmovaps ymm0,YMMWORD PTR [rip+0x8788]        # 40f100 <strstr@plt+0xdf30>
  406978:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40697e:	lea    rsi,[rsp+0x20]
  406983:	mov    edx,0x20
  406988:	mov    rdi,r13
  40698b:	vzeroupper 
  40698e:	call   402980 <strstr@plt+0x17b0>
  406993:	mov    DWORD PTR [rsp],0x10
  40699a:	mov    DWORD PTR [rsp+0x4],r14d
  40699f:	mov    WORD PTR [rsp+0x8],0x3
  4069a6:	mov    rsi,rsp
  4069a9:	mov    edx,0xa
  4069ae:	mov    rdi,r13
  4069b1:	call   402980 <strstr@plt+0x17b0>
  4069b6:	mov    rbx,QWORD PTR [r13+0x80]
  4069bd:	mov    rdi,rbx
  4069c0:	call   4010a0 <strlen@plt>
  4069c5:	lea    rdx,[rax+0x1]
  4069c9:	mov    rdi,r13
  4069cc:	mov    rsi,rbx
  4069cf:	call   402980 <strstr@plt+0x17b0>
  4069d4:	mov    QWORD PTR [rip+0xc7c9],0x0        # 4131a8 <strstr@plt+0x11fd8>
  4069df:	xor    eax,eax
  4069e1:	mov    QWORD PTR [rsp+0x50],r13
  4069e6:	jmp    406a08 <strstr@plt+0x5838>
  4069e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	mov    rbx,QWORD PTR [rip+0xc7b9]        # 4131b0 <strstr@plt+0x11fe0>
  4069f7:	mov    rdi,rbx
  4069fa:	call   401150 <malloc@plt>
  4069ff:	mov    QWORD PTR [rip+0xc7a2],rax        # 4131a8 <strstr@plt+0x11fd8>
  406a06:	mov    DWORD PTR [rax],ebx
  406a08:	mov    QWORD PTR [rip+0xc79d],0x4        # 4131b0 <strstr@plt+0x11fe0>
  406a13:	test   rax,rax
  406a16:	je     406d60 <strstr@plt+0x5b90>
  406a1c:	movabs rax,0x30302e7461656640
  406a26:	mov    QWORD PTR [rsp+0x20],rax
  406a2b:	movabs rax,0xffff00000001
  406a35:	mov    QWORD PTR [rsp+0x28],rax
  406a3a:	mov    WORD PTR [rsp+0x30],0x3
  406a41:	mov    edx,0x12
  406a46:	mov    rdi,r13
  406a49:	lea    r15,[rsp+0x20]
  406a4e:	mov    rsi,r15
  406a51:	call   402980 <strstr@plt+0x17b0>
  406a56:	mov    rax,QWORD PTR [rip+0xc74b]        # 4131a8 <strstr@plt+0x11fd8>
  406a5d:	test   rax,rax
  406a60:	je     406aca <strstr@plt+0x58fa>
  406a62:	mov    rax,QWORD PTR [rsp+0x70]
  406a67:	mov    QWORD PTR [rsp+0x20],rax
  406a6c:	movabs rax,0x100000000
  406a76:	mov    QWORD PTR [rsp+0x28],rax
  406a7b:	mov    WORD PTR [rsp+0x30],0x103
  406a82:	mov    edx,0x12
  406a87:	mov    rdi,r13
  406a8a:	mov    rsi,r15
  406a8d:	call   402980 <strstr@plt+0x17b0>
  406a92:	vxorps xmm0,xmm0,xmm0
  406a96:	vmovaps XMMWORD PTR [rsp],xmm0
  406a9b:	mov    DWORD PTR [rsp+0x10],0x0
  406aa3:	mov    eax,DWORD PTR [rsp+0x80]
  406aaa:	mov    DWORD PTR [rsp],eax
  406aad:	movzx  eax,WORD PTR [rsp+0x90]
  406ab5:	mov    WORD PTR [rsp+0x4],ax
  406aba:	mov    edx,0x12
  406abf:	mov    rdi,r13
  406ac2:	mov    rsi,rsp
  406ac5:	call   402980 <strstr@plt+0x17b0>
  406aca:	cmp    DWORD PTR [rsp+0x68],0x0
  406acf:	jle    406bf0 <strstr@plt+0x5a20>
  406ad5:	xor    ebx,ebx
  406ad7:	jmp    406b59 <strstr@plt+0x5989>
  406adc:	nop    DWORD PTR [rax+0x0]
  406ae0:	mov    DWORD PTR [rsp+0x20],0x0
  406ae8:	mov    r12,QWORD PTR [rip+0xc6c1]        # 4131b0 <strstr@plt+0x11fe0>
  406aef:	mov    DWORD PTR [rsp+0x24],r12d
  406af4:	lea    rdi,[r15+r12*1]
  406af8:	mov    rsi,r13
  406afb:	mov    rdx,r14
  406afe:	call   401140 <memcpy@plt>
  406b03:	lea    rax,[r12+r14*1]
  406b07:	mov    BYTE PTR [r15+rax*1],0x0
  406b0c:	lea    rax,[r12+r14*1]
  406b10:	add    rax,0x1
  406b14:	mov    r13,QWORD PTR [rsp+0x50]
  406b19:	mov    QWORD PTR [rip+0xc690],rax        # 4131b0 <strstr@plt+0x11fe0>
  406b20:	lea    r15,[rsp+0x20]
  406b25:	movabs rax,0x20000000000000
  406b2f:	mov    QWORD PTR [rsp+0x28],rax
  406b34:	mov    WORD PTR [rsp+0x30],0x2
  406b3b:	mov    edx,0x12
  406b40:	mov    rdi,r13
  406b43:	mov    rsi,r15
  406b46:	call   402980 <strstr@plt+0x17b0>
  406b4b:	inc    rbx
  406b4e:	cmp    QWORD PTR [rsp+0x68],rbx
  406b53:	je     406bf0 <strstr@plt+0x5a20>
  406b59:	mov    r12,r13
  406b5c:	mov    rax,QWORD PTR [r13+0x60]
  406b60:	mov    r13,QWORD PTR [rax+rbx*8]
  406b64:	mov    rdi,r13
  406b67:	call   4010a0 <strlen@plt>
  406b6c:	mov    r14,rax
  406b6f:	mov    r15,QWORD PTR [rip+0xc632]        # 4131a8 <strstr@plt+0x11fd8>
  406b76:	test   r15,r15
  406b79:	je     406bc0 <strstr@plt+0x59f0>
  406b7b:	cmp    r14,0x8
  406b7f:	ja     406ae0 <strstr@plt+0x5910>
  406b85:	lea    r15,[rsp+0x20]
  406b8a:	mov    rdi,r15
  406b8d:	mov    rsi,r13
  406b90:	mov    rdx,r14
  406b93:	call   401140 <memcpy@plt>
  406b98:	lea    rdi,[rsp+r14*1]
  406b9c:	add    rdi,0x20
  406ba0:	mov    edx,0x8
  406ba5:	sub    rdx,r14
  406ba8:	xor    esi,esi
  406baa:	call   4010c0 <memset@plt>
  406baf:	mov    r13,r12
  406bb2:	jmp    406b25 <strstr@plt+0x5955>
  406bb7:	nop    WORD PTR [rax+rax*1+0x0]
  406bc0:	cmp    r14,0x9
  406bc4:	lea    r15,[rsp+0x20]
  406bc9:	mov    r13,r12
  406bcc:	jb     406b4b <strstr@plt+0x597b>
  406bd2:	mov    rax,QWORD PTR [rip+0xc5d7]        # 4131b0 <strstr@plt+0x11fe0>
  406bd9:	add    rax,r14
  406bdc:	add    rax,0x1
  406be0:	mov    QWORD PTR [rip+0xc5c9],rax        # 4131b0 <strstr@plt+0x11fe0>
  406be7:	jmp    406b4b <strstr@plt+0x597b>
  406bec:	nop    DWORD PTR [rax+0x0]
  406bf0:	cmp    QWORD PTR [rip+0xc5b0],0x0        # 4131a8 <strstr@plt+0x11fd8>
  406bf8:	je     406d80 <strstr@plt+0x5bb0>
  406bfe:	mov    rax,QWORD PTR [rsp+0x98]
  406c06:	mov    QWORD PTR [rsp+0x20],rax
  406c0b:	movabs rax,0x200000000
  406c15:	mov    QWORD PTR [rsp+0x28],rax
  406c1a:	mov    WORD PTR [rsp+0x30],0x103
  406c21:	mov    edx,0x12
  406c26:	mov    rdi,r13
  406c29:	mov    rsi,r15
  406c2c:	call   402980 <strstr@plt+0x17b0>
  406c31:	vxorps xmm0,xmm0,xmm0
  406c35:	vmovaps XMMWORD PTR [rsp],xmm0
  406c3a:	mov    DWORD PTR [rsp+0x10],0x0
  406c42:	mov    eax,DWORD PTR [rsp+0xa8]
  406c49:	mov    DWORD PTR [rsp],eax
  406c4c:	movzx  eax,WORD PTR [rsp+0xb8]
  406c54:	mov    WORD PTR [rsp+0x4],ax
  406c59:	mov    edx,0x12
  406c5e:	mov    rdi,r13
  406c61:	mov    rsi,rsp
  406c64:	call   402980 <strstr@plt+0x17b0>
  406c69:	mov    rax,QWORD PTR [rip+0xc538]        # 4131a8 <strstr@plt+0x11fd8>
  406c70:	test   rax,rax
  406c73:	je     406ce7 <strstr@plt+0x5b17>
  406c75:	mov    rax,QWORD PTR [rsp+0xc0]
  406c7d:	mov    QWORD PTR [rsp+0x20],rax
  406c82:	movabs rax,0x300000000
  406c8c:	mov    QWORD PTR [rsp+0x28],rax
  406c91:	mov    WORD PTR [rsp+0x30],0x103
  406c98:	mov    edx,0x12
  406c9d:	mov    rdi,r13
  406ca0:	mov    rsi,r15
  406ca3:	call   402980 <strstr@plt+0x17b0>
  406ca8:	vxorps xmm0,xmm0,xmm0
  406cac:	vmovaps XMMWORD PTR [rsp],xmm0
  406cb1:	mov    DWORD PTR [rsp+0x10],0x0
  406cb9:	mov    eax,DWORD PTR [rsp+0xd0]
  406cc0:	mov    DWORD PTR [rsp],eax
  406cc3:	movzx  eax,WORD PTR [rsp+0xe0]
  406ccb:	mov    WORD PTR [rsp+0x4],ax
  406cd0:	mov    edx,0x12
  406cd5:	mov    rdi,r13
  406cd8:	mov    rsi,rsp
  406cdb:	call   402980 <strstr@plt+0x17b0>
  406ce0:	mov    rax,QWORD PTR [rip+0xc4c1]        # 4131a8 <strstr@plt+0x11fd8>
  406ce7:	test   rax,rax
  406cea:	je     406d90 <strstr@plt+0x5bc0>
  406cf0:	mov    DWORD PTR [rsp+0x20],0x0
  406cf8:	mov    rcx,QWORD PTR [rip+0xc4b1]        # 4131b0 <strstr@plt+0x11fe0>
  406cff:	mov    DWORD PTR [rsp+0x24],ecx
  406d03:	vmovups xmm0,XMMWORD PTR [rip+0x8439]        # 40f144 <strstr@plt+0xdf74>
  406d0b:	vmovups XMMWORD PTR [rax+rcx*1],xmm0
  406d10:	mov    DWORD PTR [rax+rcx*1+0xf],0x34366e69
  406d18:	mov    BYTE PTR [rax+rcx*1+0x13],0x0
  406d1d:	add    rcx,0x14
  406d21:	mov    QWORD PTR [rip+0xc488],rcx        # 4131b0 <strstr@plt+0x11fe0>
  406d28:	movabs rax,0x20000000000000
  406d32:	mov    QWORD PTR [rsp+0x28],rax
  406d37:	mov    WORD PTR [rsp+0x30],0x2
  406d3e:	mov    edx,0x12
  406d43:	mov    rdi,r13
  406d46:	mov    rsi,r15
  406d49:	call   402980 <strstr@plt+0x17b0>
  406d4e:	mov    r14,QWORD PTR [rip+0xc453]        # 4131a8 <strstr@plt+0x11fd8>
  406d55:	jmp    406d9b <strstr@plt+0x5bcb>
  406d57:	nop    WORD PTR [rax+rax*1+0x0]
  406d60:	xor    eax,eax
  406d62:	lea    r15,[rsp+0x20]
  406d67:	test   rax,rax
  406d6a:	jne    406a62 <strstr@plt+0x5892>
  406d70:	jmp    406aca <strstr@plt+0x58fa>
  406d75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d7f:	nop
  406d80:	xor    eax,eax
  406d82:	test   rax,rax
  406d85:	jne    406c75 <strstr@plt+0x5aa5>
  406d8b:	jmp    406ce7 <strstr@plt+0x5b17>
  406d90:	add    QWORD PTR [rip+0xc418],0x14        # 4131b0 <strstr@plt+0x11fe0>
  406d98:	xor    r14d,r14d
  406d9b:	mov    r12,r13
  406d9e:	mov    r13,QWORD PTR [r13+0x70]
  406da2:	mov    rdi,r13
  406da5:	call   4010a0 <strlen@plt>
  406daa:	mov    rbx,rax
  406dad:	test   r14,r14
  406db0:	je     406de0 <strstr@plt+0x5c10>
  406db2:	cmp    rbx,0x8
  406db6:	ja     406e10 <strstr@plt+0x5c40>
  406db8:	mov    rdi,r15
  406dbb:	mov    rsi,r13
  406dbe:	mov    rdx,rbx
  406dc1:	call   401140 <memcpy@plt>
  406dc6:	lea    rdi,[rsp+rbx*1]
  406dca:	add    rdi,0x20
  406dce:	mov    edx,0x8
  406dd3:	sub    rdx,rbx
  406dd6:	xor    esi,esi
  406dd8:	call   4010c0 <memset@plt>
  406ddd:	jmp    406e50 <strstr@plt+0x5c80>
  406ddf:	nop
  406de0:	cmp    rbx,0x9
  406de4:	mov    r13,r12
  406de7:	jb     406e79 <strstr@plt+0x5ca9>
  406ded:	mov    rax,QWORD PTR [rip+0xc3bc]        # 4131b0 <strstr@plt+0x11fe0>
  406df4:	add    rax,rbx
  406df7:	add    rax,0x1
  406dfb:	mov    QWORD PTR [rip+0xc3ae],rax        # 4131b0 <strstr@plt+0x11fe0>
  406e02:	jmp    406e79 <strstr@plt+0x5ca9>
  406e04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e0e:	xchg   ax,ax
  406e10:	mov    DWORD PTR [rsp+0x20],0x0
  406e18:	mov    r15,QWORD PTR [rip+0xc391]        # 4131b0 <strstr@plt+0x11fe0>
  406e1f:	mov    DWORD PTR [rsp+0x24],r15d
  406e24:	lea    rdi,[r14+r15*1]
  406e28:	mov    rsi,r13
  406e2b:	mov    rdx,rbx
  406e2e:	call   401140 <memcpy@plt>
  406e33:	lea    rax,[r15+rbx*1]
  406e37:	mov    BYTE PTR [r14+rax*1],0x0
  406e3c:	lea    rax,[r15+rbx*1]
  406e40:	add    rax,0x1
  406e44:	lea    r15,[rsp+0x20]
  406e49:	mov    QWORD PTR [rip+0xc360],rax        # 4131b0 <strstr@plt+0x11fe0>
  406e50:	mov    r13,r12
  406e53:	movabs rax,0x100000000
  406e5d:	mov    QWORD PTR [rsp+0x28],rax
  406e62:	mov    WORD PTR [rsp+0x30],0x2
  406e69:	mov    edx,0x12
  406e6e:	mov    rdi,r12
  406e71:	mov    rsi,r15
  406e74:	call   402980 <strstr@plt+0x17b0>
  406e79:	mov    ecx,DWORD PTR [r13+0x40]
  406e7d:	test   ecx,ecx
  406e7f:	jle    406fc0 <strstr@plt+0x5df0>
  406e85:	mov    r15d,0x8
  406e8b:	xor    r14d,r14d
  406e8e:	jmp    406eac <strstr@plt+0x5cdc>
  406e90:	mov    r13,QWORD PTR [rsp+0x50]
  406e95:	mov    ecx,DWORD PTR [rsp+0x60]
  406e99:	inc    r14
  406e9c:	movsxd rax,ecx
  406e9f:	add    r15,0x10
  406ea3:	cmp    r14,rax
  406ea6:	jge    406fc0 <strstr@plt+0x5df0>
  406eac:	mov    DWORD PTR [rsp+0x60],ecx
  406eb0:	mov    rax,QWORD PTR [r13+0x58]
  406eb4:	mov    r13,QWORD PTR [rax+r15*1-0x8]
  406eb9:	mov    eax,DWORD PTR [rax+r15*1]
  406ebd:	mov    DWORD PTR [rsp+0x5c],eax
  406ec1:	mov    rdi,r13
  406ec4:	call   4010a0 <strlen@plt>
  406ec9:	mov    rbx,rax
  406ecc:	mov    r12,QWORD PTR [rip+0xc2d5]        # 4131a8 <strstr@plt+0x11fd8>
  406ed3:	test   r12,r12
  406ed6:	je     406f10 <strstr@plt+0x5d40>
  406ed8:	cmp    rbx,0x8
  406edc:	ja     406f40 <strstr@plt+0x5d70>
  406ede:	lea    r12,[rsp+0x20]
  406ee3:	mov    rdi,r12
  406ee6:	mov    rsi,r13
  406ee9:	mov    rdx,rbx
  406eec:	call   401140 <memcpy@plt>
  406ef1:	lea    rdi,[rsp+rbx*1]
  406ef5:	add    rdi,0x20
  406ef9:	mov    edx,0x8
  406efe:	sub    rdx,rbx
  406f01:	xor    esi,esi
  406f03:	call   4010c0 <memset@plt>
  406f08:	mov    r13,QWORD PTR [rsp+0x50]
  406f0d:	jmp    406f8e <strstr@plt+0x5dbe>
  406f0f:	nop
  406f10:	cmp    rbx,0x9
  406f14:	jb     406e90 <strstr@plt+0x5cc0>
  406f1a:	mov    rax,QWORD PTR [rip+0xc28f]        # 4131b0 <strstr@plt+0x11fe0>
  406f21:	add    rax,rbx
  406f24:	add    rax,0x1
  406f28:	mov    QWORD PTR [rip+0xc281],rax        # 4131b0 <strstr@plt+0x11fe0>
  406f2f:	jmp    406e90 <strstr@plt+0x5cc0>
  406f34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f3e:	xchg   ax,ax
  406f40:	mov    DWORD PTR [rsp+0x20],0x0
  406f48:	mov    rax,QWORD PTR [rip+0xc261]        # 4131b0 <strstr@plt+0x11fe0>
  406f4f:	mov    QWORD PTR [rsp+0x60],rax
  406f54:	mov    DWORD PTR [rsp+0x24],eax
  406f58:	lea    rdi,[r12+rax*1]
  406f5c:	mov    rsi,r13
  406f5f:	mov    rdx,rbx
  406f62:	call   401140 <memcpy@plt>
  406f67:	mov    rcx,QWORD PTR [rsp+0x60]
  406f6c:	lea    rax,[rcx+rbx*1]
  406f70:	mov    BYTE PTR [r12+rax*1],0x0
  406f75:	lea    rax,[rcx+rbx*1]
  406f79:	add    rax,0x1
  406f7d:	mov    QWORD PTR [rip+0xc22c],rax        # 4131b0 <strstr@plt+0x11fe0>
  406f84:	mov    r13,QWORD PTR [rsp+0x50]
  406f89:	lea    r12,[rsp+0x20]
  406f8e:	mov    eax,DWORD PTR [rsp+0x5c]
  406f92:	mov    DWORD PTR [rsp+0x28],eax
  406f96:	mov    DWORD PTR [rsp+0x2c],0x200001
  406f9e:	mov    WORD PTR [rsp+0x30],0x2
  406fa5:	mov    edx,0x12
  406faa:	mov    rdi,r13
  406fad:	mov    rsi,r12
  406fb0:	call   402980 <strstr@plt+0x17b0>
  406fb5:	mov    ecx,DWORD PTR [r13+0x40]
  406fb9:	jmp    406e99 <strstr@plt+0x5cc9>
  406fbe:	xchg   ax,ax
  406fc0:	cmp    QWORD PTR [rip+0xc1e0],0x0        # 4131a8 <strstr@plt+0x11fd8>
  406fc8:	je     4069f0 <strstr@plt+0x5820>
  406fce:	mov    rax,QWORD PTR [rsp+0xe8]
  406fd6:	mov    QWORD PTR [rsp+0x20],rax
  406fdb:	movabs rax,0x400000000
  406fe5:	mov    QWORD PTR [rsp+0x28],rax
  406fea:	mov    WORD PTR [rsp+0x30],0x103
  406ff1:	mov    edx,0x12
  406ff6:	mov    rdi,r13
  406ff9:	lea    rsi,[rsp+0x20]
  406ffe:	call   402980 <strstr@plt+0x17b0>
  407003:	vxorps xmm0,xmm0,xmm0
  407007:	vmovaps XMMWORD PTR [rsp],xmm0
  40700c:	mov    DWORD PTR [rsp+0x10],0x0
  407014:	mov    eax,DWORD PTR [rsp+0xf8]
  40701b:	mov    DWORD PTR [rsp],eax
  40701e:	movzx  eax,WORD PTR [rsp+0x108]
  407026:	mov    WORD PTR [rsp+0x4],ax
  40702b:	mov    edx,0x12
  407030:	mov    rdi,r13
  407033:	mov    rsi,rsp
  407036:	call   402980 <strstr@plt+0x17b0>
  40703b:	mov    rsi,QWORD PTR [rip+0xc166]        # 4131a8 <strstr@plt+0x11fd8>
  407042:	mov    rbx,QWORD PTR [rip+0xc167]        # 4131b0 <strstr@plt+0x11fe0>
  407049:	test   rsi,rsi
  40704c:	je     4069f7 <strstr@plt+0x5827>
  407052:	mov    rdi,r13
  407055:	mov    rdx,rbx
  407058:	call   402980 <strstr@plt+0x17b0>
  40705d:	lea    rsp,[rbp-0x28]
  407061:	pop    rbx
  407062:	pop    r12
  407064:	pop    r13
  407066:	pop    r14
  407068:	pop    r15
  40706a:	pop    rbp
  40706b:	ret    
  40706c:	nop    DWORD PTR [rax+0x0]
  407070:	push   rbp
  407071:	push   r15
  407073:	push   r14
  407075:	push   r13
  407077:	push   r12
  407079:	push   rbx
  40707a:	sub    rsp,0x118
  407081:	mov    rbx,rdi
  407084:	mov    eax,DWORD PTR [rdi+0x8]
  407087:	lea    ecx,[rax-0x6]
  40708a:	cmp    ecx,0x3
  40708d:	jae    4070a1 <strstr@plt+0x5ed1>
  40708f:	mov    rcx,QWORD PTR [rbx+0x10]
  407093:	lea    rdi,[rip+0x79de]        # 40ea78 <strstr@plt+0xd8a8>
  40709a:	mov    esi,0x2e
  40709f:	jmp    4070b6 <strstr@plt+0x5ee6>
  4070a1:	cmp    eax,0x9
  4070a4:	jne    4070e0 <strstr@plt+0x5f10>
  4070a6:	mov    rcx,QWORD PTR [rbx+0x10]
  4070aa:	lea    rdi,[rip+0x80cb]        # 40f17c <strstr@plt+0xdfac>
  4070b1:	mov    esi,0x1c
  4070b6:	mov    edx,0x1
  4070bb:	call   4011b0 <fwrite@plt>
  4070c0:	cmp    DWORD PTR [rbx+0x8],0x8
  4070c4:	jne    4070e0 <strstr@plt+0x5f10>
  4070c6:	mov    rcx,QWORD PTR [rbx+0x10]
  4070ca:	lea    rdi,[rip+0x80c8]        # 40f199 <strstr@plt+0xdfc9>
  4070d1:	mov    esi,0x31
  4070d6:	mov    edx,0x1
  4070db:	call   4011b0 <fwrite@plt>
  4070e0:	mov    DWORD PTR [rip+0xc0d6],0x2        # 4131c0 <strstr@plt+0x11ff0>
  4070ea:	mov    DWORD PTR [rip+0xc0d0],0x2        # 4131c4 <strstr@plt+0x11ff4>
  4070f4:	mov    DWORD PTR [rip+0xc0ca],0x0        # 4131c8 <strstr@plt+0x11ff8>
  4070fe:	mov    rax,QWORD PTR [rbx+0x20]
  407102:	lea    rcx,[rax+0x8]
  407106:	mov    r12,rbx
  407109:	mov    QWORD PTR [rbx+0x20],rcx
  40710d:	mov    r14,QWORD PTR [rax]
  407110:	test   r14,r14
  407113:	je     4074f3 <strstr@plt+0x6323>
  407119:	lea    rbx,[rip+0x80de]        # 40f1fe <strstr@plt+0xe02e>
  407120:	cmp    BYTE PTR [r14],0x2d
  407124:	jne    407159 <strstr@plt+0x5f89>
  407126:	jmp    40714e <strstr@plt+0x5f7e>
  407128:	nop    DWORD PTR [rax+rax*1+0x0]
  407130:	mov    rax,QWORD PTR [rbp+0x20]
  407134:	lea    rcx,[rax+0x8]
  407138:	mov    QWORD PTR [rbp+0x20],rcx
  40713c:	mov    r14,QWORD PTR [rax]
  40713f:	test   r14,r14
  407142:	je     4074f3 <strstr@plt+0x6323>
  407148:	cmp    BYTE PTR [r14],0x2d
  40714c:	jne    407159 <strstr@plt+0x5f89>
  40714e:	cmp    BYTE PTR [r14+0x1],0x0
  407153:	je     4074e4 <strstr@plt+0x6314>
  407159:	mov    rdi,r14
  40715c:	lea    rsi,[rip+0x6b38]        # 40dc9b <strstr@plt+0xcacb>
  407163:	call   401180 <fopen@plt>
  407168:	mov    rbp,rax
  40716b:	test   rax,rax
  40716e:	je     4076e2 <strstr@plt+0x6512>
  407174:	mov    DWORD PTR [rip+0xc04e],0x0        # 4131cc <strstr@plt+0x11ffc>
  40717e:	mov    DWORD PTR [rip+0xc048],0x0        # 4131d0 <strstr@plt+0x12000>
  407188:	lea    rdi,[rsp+0x10]
  40718d:	mov    esi,0x100
  407192:	mov    rdx,rbp
  407195:	call   4010f0 <fgets@plt>
  40719a:	test   rax,rax
  40719d:	je     4074c0 <strstr@plt+0x62f0>
  4071a3:	mov    QWORD PTR [rsp+0x8],rbp
  4071a8:	cmp    BYTE PTR [rsp+0x10],0x23
  4071ad:	je     4071e7 <strstr@plt+0x6017>
  4071af:	jmp    407222 <strstr@plt+0x6052>
  4071b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4071c0:	lea    rdi,[rsp+0x10]
  4071c5:	mov    esi,0x100
  4071ca:	mov    rbp,QWORD PTR [rsp+0x8]
  4071cf:	mov    rdx,rbp
  4071d2:	call   4010f0 <fgets@plt>
  4071d7:	test   rax,rax
  4071da:	je     4074c0 <strstr@plt+0x62f0>
  4071e0:	cmp    BYTE PTR [rsp+0x10],0x23
  4071e5:	jne    407222 <strstr@plt+0x6052>
  4071e7:	cmp    BYTE PTR [rsp+0x11],0x69
  4071ec:	jne    407222 <strstr@plt+0x6052>
  4071ee:	cmp    BYTE PTR [rsp+0x12],0x66
  4071f3:	jne    407222 <strstr@plt+0x6052>
  4071f5:	mov    rax,QWORD PTR [rsp+0x10]
  4071fa:	movabs rcx,0x355f4a4c20666923
  407204:	xor    rax,rcx
  407207:	mov    rcx,QWORD PTR [rsp+0x13]
  40720c:	movabs rdx,0xa32355f4a4c20
  407216:	xor    rcx,rdx
  407219:	or     rcx,rax
  40721c:	je     40743c <strstr@plt+0x626c>
  407222:	lea    r14,[rsp+0x10]
  407227:	jmp    40723b <strstr@plt+0x606b>
  407229:	nop    DWORD PTR [rax+0x0]
  407230:	cmp    QWORD PTR [r13+0x0],0x0
  407235:	je     4076a4 <strstr@plt+0x64d4>
  40723b:	mov    rdi,r14
  40723e:	mov    rsi,rbx
  407241:	call   4011d0 <strstr@plt>
  407246:	test   rax,rax
  407249:	je     4071c0 <strstr@plt+0x5ff0>
  40724f:	mov    r14,rax
  407252:	add    r14,0x6
  407256:	mov    ebp,0x7
  40725b:	mov    edx,0x7
  407260:	mov    rdi,r14
  407263:	lea    rsi,[rip+0x80ae]        # 40f318 <strstr@plt+0xe148>
  40726a:	call   401050 <strncmp@plt>
  40726f:	test   eax,eax
  407271:	je     407390 <strstr@plt+0x61c0>
  407277:	mov    ebp,0x3
  40727c:	mov    edx,0x3
  407281:	mov    rdi,r14
  407284:	lea    rsi,[rip+0x809a]        # 40f325 <strstr@plt+0xe155>
  40728b:	call   401050 <strncmp@plt>
  407290:	test   eax,eax
  407292:	je     4073a0 <strstr@plt+0x61d0>
  407298:	mov    ebp,0x4
  40729d:	mov    edx,0x4
  4072a2:	mov    rdi,r14
  4072a5:	lea    rsi,[rip+0x807d]        # 40f329 <strstr@plt+0xe159>
  4072ac:	call   401050 <strncmp@plt>
  4072b1:	test   eax,eax
  4072b3:	je     4073a9 <strstr@plt+0x61d9>
  4072b9:	mov    ebp,0x5
  4072be:	mov    edx,0x5
  4072c3:	mov    rdi,r14
  4072c6:	lea    rsi,[rip+0x8061]        # 40f32e <strstr@plt+0xe15e>
  4072cd:	call   401050 <strncmp@plt>
  4072d2:	test   eax,eax
  4072d4:	je     4073b2 <strstr@plt+0x61e2>
  4072da:	mov    ebp,0x4
  4072df:	mov    edx,0x4
  4072e4:	mov    rdi,r14
  4072e7:	lea    rsi,[rip+0x8046]        # 40f334 <strstr@plt+0xe164>
  4072ee:	call   401050 <strncmp@plt>
  4072f3:	test   eax,eax
  4072f5:	je     4073bb <strstr@plt+0x61eb>
  4072fb:	mov    ebp,0x5
  407300:	mov    edx,0x5
  407305:	mov    rdi,r14
  407308:	lea    rsi,[rip+0x802a]        # 40f339 <strstr@plt+0xe169>
  40730f:	call   401050 <strncmp@plt>
  407314:	test   eax,eax
  407316:	je     4073c4 <strstr@plt+0x61f4>
  40731c:	mov    ebp,0x4
  407321:	mov    edx,0x4
  407326:	mov    rdi,r14
  407329:	lea    rsi,[rip+0x800f]        # 40f33f <strstr@plt+0xe16f>
  407330:	call   401050 <strncmp@plt>
  407335:	test   eax,eax
  407337:	je     4073cd <strstr@plt+0x61fd>
  40733d:	mov    ebp,0x7
  407342:	mov    edx,0x7
  407347:	mov    rdi,r14
  40734a:	lea    rsi,[rip+0x7ff3]        # 40f344 <strstr@plt+0xe174>
  407351:	call   401050 <strncmp@plt>
  407356:	test   eax,eax
  407358:	je     4073d6 <strstr@plt+0x6206>
  40735a:	mov    ebp,0x5
  40735f:	mov    edx,0x5
  407364:	mov    rdi,r14
  407367:	lea    rsi,[rip+0x7fde]        # 40f34c <strstr@plt+0xe17c>
  40736e:	call   401050 <strncmp@plt>
  407373:	lea    r15,[rip+0xba36]        # 412db0 <strstr@plt+0x11be0>
  40737a:	mov    r13,r15
  40737d:	test   eax,eax
  40737f:	je     4073e3 <strstr@plt+0x6213>
  407381:	jmp    4076a4 <strstr@plt+0x64d4>
  407386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407390:	lea    r15,[rip+0xb919]        # 412cb0 <strstr@plt+0x11ae0>
  407397:	jmp    4073e0 <strstr@plt+0x6210>
  407399:	nop    DWORD PTR [rax+0x0]
  4073a0:	lea    r15,[rip+0xb929]        # 412cd0 <strstr@plt+0x11b00>
  4073a7:	jmp    4073e0 <strstr@plt+0x6210>
  4073a9:	lea    r15,[rip+0xb940]        # 412cf0 <strstr@plt+0x11b20>
  4073b0:	jmp    4073e0 <strstr@plt+0x6210>
  4073b2:	lea    r15,[rip+0xb957]        # 412d10 <strstr@plt+0x11b40>
  4073b9:	jmp    4073e0 <strstr@plt+0x6210>
  4073bb:	lea    r15,[rip+0xb96e]        # 412d30 <strstr@plt+0x11b60>
  4073c2:	jmp    4073e0 <strstr@plt+0x6210>
  4073c4:	lea    r15,[rip+0xb985]        # 412d50 <strstr@plt+0x11b80>
  4073cb:	jmp    4073e0 <strstr@plt+0x6210>
  4073cd:	lea    r15,[rip+0xb99c]        # 412d70 <strstr@plt+0x11ba0>
  4073d4:	jmp    4073e0 <strstr@plt+0x6210>
  4073d6:	lea    r15,[rip+0xb9b3]        # 412d90 <strstr@plt+0x11bc0>
  4073dd:	nop    DWORD PTR [rax]
  4073e0:	mov    r13,r15
  4073e3:	add    r14,rbp
  4073e6:	mov    rsi,QWORD PTR [r15+0x8]
  4073ea:	test   rsi,rsi
  4073ed:	je     407410 <strstr@plt+0x6240>
  4073ef:	mov    rdi,r14
  4073f2:	call   4010e0 <strcspn@plt>
  4073f7:	mov    rbp,rax
  4073fa:	cmp    BYTE PTR [r14+rbp*1],0x0
  4073ff:	jne    40741d <strstr@plt+0x624d>
  407401:	jmp    407230 <strstr@plt+0x6060>
  407406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407410:	xor    ebp,ebp
  407412:	cmp    BYTE PTR [r14+rbp*1],0x0
  407417:	je     407230 <strstr@plt+0x6060>
  40741d:	mov    BYTE PTR [r14+rbp*1],0x0
  407422:	mov    edx,DWORD PTR [r15+0x18]
  407426:	mov    rdi,r12
  407429:	mov    rsi,r14
  40742c:	call   QWORD PTR [r15+0x10]
  407430:	add    r14,rbp
  407433:	add    r14,0x1
  407437:	jmp    407230 <strstr@plt+0x6060>
  40743c:	lea    rdi,[rsp+0x10]
  407441:	mov    esi,0x100
  407446:	mov    rdx,rbp
  407449:	call   4010f0 <fgets@plt>
  40744e:	test   rax,rax
  407451:	je     4071c0 <strstr@plt+0x5ff0>
  407457:	mov    ebp,0x1
  40745c:	jmp    407490 <strstr@plt+0x62c0>
  40745e:	xchg   ax,ax
  407460:	xor    dl,0x23
  407463:	xor    al,0x69
  407465:	or     al,dl
  407467:	xor    cl,0x66
  40746a:	xor    edx,edx
  40746c:	or     cl,al
  40746e:	sete   dl
  407471:	add    ebp,edx
  407473:	lea    rdi,[rsp+0x10]
  407478:	mov    esi,0x100
  40747d:	mov    rdx,QWORD PTR [rsp+0x8]
  407482:	call   4010f0 <fgets@plt>
  407487:	test   rax,rax
  40748a:	je     4071c0 <strstr@plt+0x5ff0>
  407490:	movzx  edx,BYTE PTR [rsp+0x10]
  407495:	movzx  eax,BYTE PTR [rsp+0x11]
  40749a:	movzx  ecx,BYTE PTR [rsp+0x12]
  40749f:	cmp    dl,0x23
  4074a2:	jne    407460 <strstr@plt+0x6290>
  4074a4:	cmp    al,0x65
  4074a6:	jne    407460 <strstr@plt+0x6290>
  4074a8:	cmp    cl,0x6e
  4074ab:	jne    407460 <strstr@plt+0x6290>
  4074ad:	dec    ebp
  4074af:	jne    407473 <strstr@plt+0x62a3>
  4074b1:	jmp    4071c0 <strstr@plt+0x5ff0>
  4074b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074c0:	mov    rdi,rbp
  4074c3:	call   401090 <fclose@plt>
  4074c8:	mov    rbp,r12
  4074cb:	cmp    DWORD PTR [r12+0x8],0x7
  4074d1:	jne    407130 <strstr@plt+0x5f60>
  4074d7:	mov    rdi,rbp
  4074da:	call   407710 <strstr@plt+0x6540>
  4074df:	jmp    407130 <strstr@plt+0x5f60>
  4074e4:	mov    rax,QWORD PTR [rip+0xbaed]        # 412fd8 <strstr@plt+0x11e08>
  4074eb:	mov    rbp,QWORD PTR [rax]
  4074ee:	jmp    407174 <strstr@plt+0x5fa4>
  4074f3:	mov    eax,DWORD PTR [r12+0x8]
  4074f8:	add    eax,0xfffffffb
  4074fb:	cmp    eax,0x4
  4074fe:	ja     407692 <strstr@plt+0x64c2>
  407504:	lea    rcx,[rip+0x7c4d]        # 40f158 <strstr@plt+0xdf88>
  40750b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40750f:	add    rax,rcx
  407512:	jmp    rax
  407514:	mov    rcx,QWORD PTR [r12+0x10]
  407519:	lea    rdi,[rip+0x7dab]        # 40f2cb <strstr@plt+0xe0fb>
  407520:	mov    esi,0x5
  407525:	mov    edx,0x1
  40752a:	call   4011b0 <fwrite@plt>
  40752f:	mov    rcx,QWORD PTR [r12+0x10]
  407534:	lea    rdi,[rip+0x7d40]        # 40f27b <strstr@plt+0xe0ab>
  40753b:	mov    esi,0x2b
  407540:	mov    edx,0x1
  407545:	call   4011b0 <fwrite@plt>
  40754a:	mov    rcx,QWORD PTR [r12+0x10]
  40754f:	lea    rdi,[rip+0x7d51]        # 40f2a7 <strstr@plt+0xe0d7>
  407556:	mov    esi,0xe
  40755b:	mov    edx,0x1
  407560:	call   4011b0 <fwrite@plt>
  407565:	mov    ebp,DWORD PTR [rip+0xbc5d]        # 4131c8 <strstr@plt+0x11ff8>
  40756b:	mov    rcx,QWORD PTR [r12+0x10]
  407570:	dec    ebp
  407572:	jle    40759b <strstr@plt+0x63cb>
  407574:	lea    rbx,[rip+0x7d3b]        # 40f2b6 <strstr@plt+0xe0e6>
  40757b:	nop    DWORD PTR [rax+rax*1+0x0]
  407580:	mov    esi,0xb
  407585:	mov    edx,0x1
  40758a:	mov    rdi,rbx
  40758d:	call   4011b0 <fwrite@plt>
  407592:	mov    rcx,QWORD PTR [r12+0x10]
  407597:	dec    ebp
  407599:	jg     407580 <strstr@plt+0x63b0>
  40759b:	lea    rdi,[rip+0x7d20]        # 40f2c2 <strstr@plt+0xe0f2>
  4075a2:	mov    esi,0xe
  4075a7:	jmp    407688 <strstr@plt+0x64b8>
  4075ac:	mov    rcx,QWORD PTR [r12+0x10]
  4075b1:	lea    rdi,[rip+0x7c79]        # 40f231 <strstr@plt+0xe061>
  4075b8:	mov    esi,0xf
  4075bd:	mov    edx,0x1
  4075c2:	call   4011b0 <fwrite@plt>
  4075c7:	mov    rdi,QWORD PTR [r12+0x10]
  4075cc:	mov    edx,DWORD PTR [rip+0xbbf6]        # 4131c8 <strstr@plt+0x11ff8>
  4075d2:	lea    rsi,[rip+0x7c68]        # 40f241 <strstr@plt+0xe071>
  4075d9:	xor    eax,eax
  4075db:	call   401120 <fprintf@plt>
  4075e0:	jmp    407692 <strstr@plt+0x64c2>
  4075e5:	mov    rcx,QWORD PTR [r12+0x10]
  4075ea:	lea    rdi,[rip+0x7cda]        # 40f2cb <strstr@plt+0xe0fb>
  4075f1:	mov    esi,0x5
  4075f6:	mov    edx,0x1
  4075fb:	call   4011b0 <fwrite@plt>
  407600:	mov    rcx,QWORD PTR [r12+0x10]
  407605:	lea    rdi,[rip+0x7cc5]        # 40f2d1 <strstr@plt+0xe101>
  40760c:	mov    esi,0x3b
  407611:	mov    edx,0x1
  407616:	call   4011b0 <fwrite@plt>
  40761b:	cmp    BYTE PTR [rip+0xbbbe],0x0        # 4131e0 <strstr@plt+0x12010>
  407622:	mov    rcx,QWORD PTR [r12+0x10]
  407627:	je     407669 <strstr@plt+0x6499>
  407629:	lea    rbp,[rip+0xbbb0]        # 4131e0 <strstr@plt+0x12010>
  407630:	lea    rbx,[rip+0x7cd6]        # 40f30d <strstr@plt+0xe13d>
  407637:	nop    WORD PTR [rax+rax*1+0x0]
  407640:	mov    rdi,rcx
  407643:	mov    rsi,rbx
  407646:	mov    rdx,rbp
  407649:	xor    eax,eax
  40764b:	call   401120 <fprintf@plt>
  407650:	mov    rdi,rbp
  407653:	call   4010a0 <strlen@plt>
  407658:	cmp    BYTE PTR [rax+rbp*1+0x1],0x0
  40765d:	lea    rbp,[rax+rbp*1+0x1]
  407662:	mov    rcx,QWORD PTR [r12+0x10]
  407667:	jne    407640 <strstr@plt+0x6470>
  407669:	lea    rdi,[rip+0x7c5b]        # 40f2cb <strstr@plt+0xe0fb>
  407670:	mov    esi,0x5
  407675:	jmp    407688 <strstr@plt+0x64b8>
  407677:	mov    rcx,QWORD PTR [r12+0x10]
  40767c:	lea    rdi,[rip+0x74c0]        # 40eb43 <strstr@plt+0xd973>
  407683:	mov    esi,0x3
  407688:	mov    edx,0x1
  40768d:	call   4011b0 <fwrite@plt>
  407692:	add    rsp,0x118
  407699:	pop    rbx
  40769a:	pop    r12
  40769c:	pop    r13
  40769e:	pop    r14
  4076a0:	pop    r15
  4076a2:	pop    rbp
  4076a3:	ret    
  4076a4:	lea    rbx,[rsp+0x10]
  4076a9:	mov    rdi,rbx
  4076ac:	call   4010a0 <strlen@plt>
  4076b1:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
  4076b6:	mov    rax,QWORD PTR [rip+0xb933]        # 412ff0 <strstr@plt+0x11e20>
  4076bd:	mov    rdi,QWORD PTR [rax]
  4076c0:	lea    rsi,[rip+0x7b3e]        # 40f205 <strstr@plt+0xe035>
  4076c7:	lea    rdx,[rip+0x7b30]        # 40f1fe <strstr@plt+0xe02e>
  4076ce:	mov    rcx,r14
  4076d1:	xor    eax,eax
  4076d3:	call   401120 <fprintf@plt>
  4076d8:	mov    edi,0x1
  4076dd:	call   4011a0 <exit@plt>
  4076e2:	mov    rax,QWORD PTR [rip+0xb907]        # 412ff0 <strstr@plt+0x11e20>
  4076e9:	mov    rbx,QWORD PTR [rax]
  4076ec:	call   401040 <__errno_location@plt>
  4076f1:	mov    edi,DWORD PTR [rax]
  4076f3:	call   4011c0 <strerror@plt>
  4076f8:	lea    rsi,[rip+0x7acc]        # 40f1cb <strstr@plt+0xdffb>
  4076ff:	mov    rdi,rbx
  407702:	mov    rdx,r14
  407705:	mov    rcx,rax
  407708:	jmp    4076d1 <strstr@plt+0x6501>
  40770a:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	push   rbp
  407711:	push   r15
  407713:	push   r14
  407715:	push   r13
  407717:	push   r12
  407719:	push   rbx
  40771a:	sub    rsp,0x58
  40771e:	mov    eax,DWORD PTR [rip+0xbaa8]        # 4131cc <strstr@plt+0x11ffc>
  407724:	test   eax,eax
  407726:	je     40781a <strstr@plt+0x664a>
  40772c:	mov    r14,rdi
  40772f:	cmp    eax,0x1
  407732:	jne    40774e <strstr@plt+0x657e>
  407734:	mov    rcx,QWORD PTR [r14+0x10]
  407738:	lea    rdi,[rip+0x7dbd]        # 40f4fc <strstr@plt+0xe32c>
  40773f:	mov    esi,0x12
  407744:	mov    edx,0x1
  407749:	call   4011b0 <fwrite@plt>
  40774e:	mov    rcx,QWORD PTR [r14+0x10]
  407752:	lea    rdi,[rip+0x7db6]        # 40f50f <strstr@plt+0xe33f>
  407759:	mov    esi,0x4
  40775e:	mov    edx,0x1
  407763:	call   4011b0 <fwrite@plt>
  407768:	mov    rdi,QWORD PTR [r14+0x10]
  40776c:	lea    rsi,[rip+0x7da1]        # 40f514 <strstr@plt+0xe344>
  407773:	lea    rdx,[rip+0x7dbb]        # 40f535 <strstr@plt+0xe365>
  40777a:	lea    rcx,[rip+0xda6f]        # 4151f0 <strstr@plt+0x14020>
  407781:	xor    eax,eax
  407783:	call   401120 <fprintf@plt>
  407788:	mov    BYTE PTR [rsp],0x0
  40778c:	lea    rbx,[rip+0xba4d]        # 4131e0 <strstr@plt+0x12010>
  407793:	cmp    QWORD PTR [rip+0xda46],rbx        # 4151e0 <strstr@plt+0x14010>
  40779a:	jbe    407800 <strstr@plt+0x6630>
  40779c:	lea    r13,[rip+0x7d9f]        # 40f542 <strstr@plt+0xe372>
  4077a3:	lea    r15,[rip+0x5f50]        # 40d6fa <strstr@plt+0xc52a>
  4077aa:	mov    r12,rsp
  4077ad:	xor    ebp,ebp
  4077af:	jmp    4077cc <strstr@plt+0x65fc>
  4077b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077c0:	inc    rbx
  4077c3:	cmp    rbx,QWORD PTR [rip+0xda16]        # 4151e0 <strstr@plt+0x14010>
  4077ca:	jae    407800 <strstr@plt+0x6630>
  4077cc:	movsxd rbp,ebp
  4077cf:	lea    rdi,[rsp+rbp*1]
  4077d3:	movzx  edx,BYTE PTR [rbx]
  4077d6:	mov    rsi,r13
  4077d9:	xor    eax,eax
  4077db:	call   401190 <sprintf@plt>
  4077e0:	add    ebp,eax
  4077e2:	cmp    ebp,0x4b
  4077e5:	jl     4077c0 <strstr@plt+0x65f0>
  4077e7:	mov    rdi,QWORD PTR [r14+0x10]
  4077eb:	xor    ebp,ebp
  4077ed:	mov    rsi,r15
  4077f0:	mov    rdx,r12
  4077f3:	xor    eax,eax
  4077f5:	call   401120 <fprintf@plt>
  4077fa:	mov    BYTE PTR [rsp],0x0
  4077fe:	jmp    4077c0 <strstr@plt+0x65f0>
  407800:	mov    rdi,QWORD PTR [r14+0x10]
  407804:	lea    rsi,[rip+0x7d3b]        # 40f546 <strstr@plt+0xe376>
  40780b:	mov    rdx,rsp
  40780e:	mov    ecx,0xff
  407813:	xor    eax,eax
  407815:	call   401120 <fprintf@plt>
  40781a:	add    rsp,0x58
  40781e:	pop    rbx
  40781f:	pop    r12
  407821:	pop    r13
  407823:	pop    r14
  407825:	pop    r15
  407827:	pop    rbp
  407828:	ret    
  407829:	nop    DWORD PTR [rax+0x0]
  407830:	push   r15
  407832:	push   r14
  407834:	push   rbx
  407835:	mov    r14,rsi
  407838:	cmp    DWORD PTR [rdi+0x8],0x7
  40783c:	jne    4078d4 <strstr@plt+0x6704>
  407842:	mov    rbx,rdi
  407845:	call   407710 <strstr@plt+0x6540>
  40784a:	mov    al,BYTE PTR [rip+0xb970]        # 4131c0 <strstr@plt+0x11ff0>
  407850:	mov    BYTE PTR [rip+0xb98a],al        # 4131e0 <strstr@plt+0x12010>
  407856:	mov    al,BYTE PTR [rip+0xb96c]        # 4131c8 <strstr@plt+0x11ff8>
  40785c:	mov    BYTE PTR [rip+0xb97f],al        # 4131e1 <strstr@plt+0x12011>
  407862:	lea    rax,[rip+0xb97a]        # 4131e3 <strstr@plt+0x12013>
  407869:	mov    QWORD PTR [rip+0xd970],rax        # 4151e0 <strstr@plt+0x14010>
  407870:	mov    BYTE PTR [rip+0xb96b],0x0        # 4131e2 <strstr@plt+0x12012>
  407877:	mov    DWORD PTR [rip+0xb94b],0x1        # 4131cc <strstr@plt+0x11ffc>
  407881:	mov    rdi,QWORD PTR [rbx+0x10]
  407885:	lea    rsi,[rip+0x7ac6]        # 40f352 <strstr@plt+0xe182>
  40788c:	lea    r15,[rip+0x796b]        # 40f1fe <strstr@plt+0xe02e>
  407893:	mov    rdx,r15
  407896:	mov    rcx,r14
  407899:	xor    eax,eax
  40789b:	call   401120 <fprintf@plt>
  4078a0:	mov    rdi,QWORD PTR [rbx+0x10]
  4078a4:	lea    rsi,[rip+0x7abb]        # 40f366 <strstr@plt+0xe196>
  4078ab:	mov    rdx,r15
  4078ae:	mov    rcx,r14
  4078b1:	xor    eax,eax
  4078b3:	call   401120 <fprintf@plt>
  4078b8:	mov    rdi,QWORD PTR [rbx+0x10]
  4078bc:	lea    rsi,[rip+0x7ab7]        # 40f37a <strstr@plt+0xe1aa>
  4078c3:	lea    rdx,[rip+0x7ad7]        # 40f3a1 <strstr@plt+0xe1d1>
  4078ca:	mov    rcx,r14
  4078cd:	xor    eax,eax
  4078cf:	call   401120 <fprintf@plt>
  4078d4:	mov    rdi,r14
  4078d7:	call   4010a0 <strlen@plt>
  4078dc:	mov    QWORD PTR [rip+0xd905],rax        # 4151e8 <strstr@plt+0x14018>
  4078e3:	cmp    rax,0x50
  4078e7:	jae    4078fd <strstr@plt+0x672d>
  4078e9:	lea    rdi,[rip+0xd900]        # 4151f0 <strstr@plt+0x14020>
  4078f0:	mov    rsi,r14
  4078f3:	pop    rbx
  4078f4:	pop    r14
  4078f6:	pop    r15
  4078f8:	jmp    401060 <strcpy@plt>
  4078fd:	mov    rax,QWORD PTR [rip+0xb6ec]        # 412ff0 <strstr@plt+0x11e20>
  407904:	mov    rdi,QWORD PTR [rax]
  407907:	lea    rsi,[rip+0x7a9e]        # 40f3ac <strstr@plt+0xe1dc>
  40790e:	mov    rdx,r14
  407911:	xor    eax,eax
  407913:	call   401120 <fprintf@plt>
  407918:	mov    edi,0x1
  40791d:	call   4011a0 <exit@plt>
  407922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40792c:	nop    DWORD PTR [rax+0x0]
  407930:	push   rbp
  407931:	push   r15
  407933:	push   r14
  407935:	push   r13
  407937:	push   r12
  407939:	push   rbx
  40793a:	push   rax
  40793b:	mov    ebp,edx
  40793d:	mov    r12,rsi
  407940:	mov    r14,rdi
  407943:	test   edx,edx
  407945:	je     40794d <strstr@plt+0x677d>
  407947:	inc    DWORD PTR [rip+0xb87b]        # 4131c8 <strstr@plt+0x11ff8>
  40794d:	mov    eax,DWORD PTR [r14+0x8]
  407951:	lea    ecx,[rax-0x6]
  407954:	cmp    ecx,0x3
  407957:	ja     407a5b <strstr@plt+0x688b>
  40795d:	lea    rax,[rip+0x7808]        # 40f16c <strstr@plt+0xdf9c>
  407964:	movsxd rcx,DWORD PTR [rax+rcx*4]
  407968:	add    rcx,rax
  40796b:	jmp    rcx
  40796d:	mov    rdi,QWORD PTR [r14+0x10]
  407971:	lea    rsi,[rip+0x7ab9]        # 40f431 <strstr@plt+0xe261>
  407978:	jmp    4079ee <strstr@plt+0x681e>
  40797a:	mov    rdi,r12
  40797d:	call   4010a0 <strlen@plt>
  407982:	cmp    rax,0x50
  407986:	jae    407b89 <strstr@plt+0x69b9>
  40798c:	lea    rdi,[rip+0xd8ad]        # 415240 <strstr@plt+0x14070>
  407993:	mov    rsi,r12
  407996:	call   401060 <strcpy@plt>
  40799b:	jmp    4079f8 <strstr@plt+0x6828>
  40799d:	mov    dl,BYTE PTR [r12+0x1]
  4079a2:	test   dl,dl
  4079a4:	je     4079e3 <strstr@plt+0x6813>
  4079a6:	lea    rsi,[r12+0x1]
  4079ab:	xor    eax,eax
  4079ad:	lea    rcx,[rip+0xd83c]        # 4151f0 <strstr@plt+0x14020>
  4079b4:	cmp    BYTE PTR [rax+rcx*1],0x0
  4079b8:	jne    4079d9 <strstr@plt+0x6809>
  4079ba:	jmp    4079e3 <strstr@plt+0x6813>
  4079bc:	nop    DWORD PTR [rax+0x0]
  4079c0:	lea    edx,[rax+0x2]
  4079c3:	lea    rsi,[r12+rdx*1]
  4079c7:	movzx  edx,BYTE PTR [r12+rdx*1]
  4079cc:	inc    rax
  4079cf:	test   dl,dl
  4079d1:	je     4079e3 <strstr@plt+0x6813>
  4079d3:	cmp    BYTE PTR [rax+rcx*1],0x0
  4079d7:	je     4079e3 <strstr@plt+0x6813>
  4079d9:	cmp    dl,0x5f
  4079dc:	jne    4079c0 <strstr@plt+0x67f0>
  4079de:	mov    BYTE PTR [rsi],0x2e
  4079e1:	jmp    4079c0 <strstr@plt+0x67f0>
  4079e3:	mov    rdi,QWORD PTR [r14+0x10]
  4079e7:	lea    rsi,[rip+0x717a]        # 40eb68 <strstr@plt+0xd998>
  4079ee:	mov    rdx,r12
  4079f1:	xor    eax,eax
  4079f3:	call   401120 <fprintf@plt>
  4079f8:	inc    DWORD PTR [rip+0xb7c2]        # 4131c0 <strstr@plt+0x11ff0>
  4079fe:	mov    DWORD PTR [rip+0xb7c8],0x0        # 4131d0 <strstr@plt+0x12000>
  407a08:	add    rsp,0x8
  407a0c:	pop    rbx
  407a0d:	pop    r12
  407a0f:	pop    r13
  407a11:	pop    r14
  407a13:	pop    r15
  407a15:	pop    rbp
  407a16:	ret    
  407a17:	mov    ecx,DWORD PTR [rip+0xb7af]        # 4131cc <strstr@plt+0x11ffc>
  407a1d:	test   ecx,ecx
  407a1f:	je     407b9c <strstr@plt+0x69cc>
  407a25:	mov    eax,DWORD PTR [rip+0xb7a5]        # 4131d0 <strstr@plt+0x12000>
  407a2b:	cmp    eax,0x1
  407a2e:	jne    407ad5 <strstr@plt+0x6905>
  407a34:	mov    rax,QWORD PTR [rip+0xd7a5]        # 4151e0 <strstr@plt+0x14010>
  407a3b:	lea    rcx,[rax+0x1]
  407a3f:	lea    rdx,[rip+0xd79a]        # 4151e0 <strstr@plt+0x14010>
  407a46:	cmp    rcx,rdx
  407a49:	ja     407bc1 <strstr@plt+0x69f1>
  407a4f:	mov    QWORD PTR [rip+0xd78a],rcx        # 4151e0 <strstr@plt+0x14010>
  407a56:	mov    BYTE PTR [rax],0xfe
  407a59:	jmp    4079f8 <strstr@plt+0x6828>
  407a5b:	test   ebp,ebp
  407a5d:	je     4079f8 <strstr@plt+0x6828>
  407a5f:	cmp    eax,0x5
  407a62:	jne    4079f8 <strstr@plt+0x6828>
  407a64:	movsxd r13,DWORD PTR [r14+0x3c]
  407a68:	test   r13,r13
  407a6b:	jle    407b5d <strstr@plt+0x698d>
  407a71:	mov    r15,QWORD PTR [r14+0x10]
  407a75:	mov    rbp,QWORD PTR [r14+0x78]
  407a79:	xor    ebx,ebx
  407a7b:	jmp    407a8c <strstr@plt+0x68bc>
  407a7d:	nop    DWORD PTR [rax]
  407a80:	inc    rbx
  407a83:	cmp    r13,rbx
  407a86:	je     407b5d <strstr@plt+0x698d>
  407a8c:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  407a91:	cmp    BYTE PTR [rdi],0x66
  407a94:	jne    407a80 <strstr@plt+0x68b0>
  407a96:	cmp    BYTE PTR [rdi+0x1],0x66
  407a9a:	jne    407a80 <strstr@plt+0x68b0>
  407a9c:	cmp    BYTE PTR [rdi+0x2],0x5f
  407aa0:	jne    407a80 <strstr@plt+0x68b0>
  407aa2:	add    rdi,0x3
  407aa6:	mov    rsi,r12
  407aa9:	call   401100 <strcmp@plt>
  407aae:	test   eax,eax
  407ab0:	jne    407a80 <strstr@plt+0x68b0>
  407ab2:	mov    eax,ebx
  407ab4:	mov    rcx,QWORD PTR [r14+0x50]
  407ab8:	mov    edx,DWORD PTR [rcx+rax*8]
  407abb:	sub    edx,DWORD PTR [r14+0x28]
  407abf:	lea    rsi,[rip+0x799b]        # 40f461 <strstr@plt+0xe291>
  407ac6:	mov    rdi,r15
  407ac9:	xor    eax,eax
  407acb:	call   401120 <fprintf@plt>
  407ad0:	jmp    4079f8 <strstr@plt+0x6828>
  407ad5:	cmp    ebp,0x80
  407adb:	je     407b35 <strstr@plt+0x6965>
  407add:	cmp    ecx,0x1
  407ae0:	je     407afc <strstr@plt+0x692c>
  407ae2:	mov    rcx,QWORD PTR [r14+0x10]
  407ae6:	lea    rdi,[rip+0x76a9]        # 40f196 <strstr@plt+0xdfc6>
  407aed:	mov    esi,0x2
  407af2:	mov    edx,0x1
  407af7:	call   4011b0 <fwrite@plt>
  407afc:	test   ebp,ebp
  407afe:	mov    DWORD PTR [rip+0xb6c4],0x2        # 4131cc <strstr@plt+0x11ffc>
  407b08:	mov    rdi,QWORD PTR [r14+0x10]
  407b0c:	lea    rax,[rip+0x790f]        # 40f422 <strstr@plt+0xe252>
  407b13:	lea    rdx,[rip+0x7910]        # 40f42a <strstr@plt+0xe25a>
  407b1a:	cmovne rdx,rax
  407b1e:	lea    rsi,[rip+0x78f6]        # 40f41b <strstr@plt+0xe24b>
  407b25:	mov    rcx,r12
  407b28:	xor    eax,eax
  407b2a:	call   401120 <fprintf@plt>
  407b2f:	mov    eax,DWORD PTR [rip+0xb69b]        # 4131d0 <strstr@plt+0x12000>
  407b35:	cmp    eax,0x2
  407b38:	je     407b40 <strstr@plt+0x6970>
  407b3a:	inc    BYTE PTR [rip+0xb6a2]        # 4131e2 <strstr@plt+0x12012>
  407b40:	cmp    eax,0x2
  407b43:	lea    rax,[rip+0x6fb3]        # 40eafd <strstr@plt+0xd92d>
  407b4a:	cmove  r12,rax
  407b4e:	mov    rdi,r12
  407b51:	mov    esi,ebp
  407b53:	call   4080c0 <strstr@plt+0x6ef0>
  407b58:	jmp    4079f8 <strstr@plt+0x6828>
  407b5d:	mov    rax,QWORD PTR [rip+0xb48c]        # 412ff0 <strstr@plt+0x11e20>
  407b64:	mov    rdi,QWORD PTR [rax]
  407b67:	lea    rsi,[rip+0x7916]        # 40f484 <strstr@plt+0xe2b4>
  407b6e:	lea    rdx,[rip+0x7934]        # 40f4a9 <strstr@plt+0xe2d9>
  407b75:	mov    rcx,r12
  407b78:	xor    eax,eax
  407b7a:	call   401120 <fprintf@plt>
  407b7f:	mov    edi,0x1
  407b84:	call   4011a0 <exit@plt>
  407b89:	mov    rax,QWORD PTR [rip+0xb460]        # 412ff0 <strstr@plt+0x11e20>
  407b90:	mov    rdi,QWORD PTR [rax]
  407b93:	lea    rsi,[rip+0x78a2]        # 40f43c <strstr@plt+0xe26c>
  407b9a:	jmp    407bad <strstr@plt+0x69dd>
  407b9c:	mov    rax,QWORD PTR [rip+0xb44d]        # 412ff0 <strstr@plt+0x11e20>
  407ba3:	mov    rdi,QWORD PTR [rax]
  407ba6:	lea    rsi,[rip+0x7822]        # 40f3cf <strstr@plt+0xe1ff>
  407bad:	mov    rdx,r12
  407bb0:	xor    eax,eax
  407bb2:	call   401120 <fprintf@plt>
  407bb7:	mov    edi,0x1
  407bbc:	call   4011a0 <exit@plt>
  407bc1:	mov    rax,QWORD PTR [rip+0xb428]        # 412ff0 <strstr@plt+0x11e20>
  407bc8:	mov    rcx,QWORD PTR [rax]
  407bcb:	lea    rdi,[rip+0x782a]        # 40f3fc <strstr@plt+0xe22c>
  407bd2:	mov    esi,0x1e
  407bd7:	mov    edx,0x1
  407bdc:	call   4011b0 <fwrite@plt>
  407be1:	mov    edi,0x1
  407be6:	call   4011a0 <exit@plt>
  407beb:	nop    DWORD PTR [rax+rax*1+0x0]
  407bf0:	push   rbp
  407bf1:	push   r15
  407bf3:	push   r14
  407bf5:	push   r13
  407bf7:	push   r12
  407bf9:	push   rbx
  407bfa:	push   rax
  407bfb:	cmp    DWORD PTR [rdi+0x8],0x8
  407bff:	jne    407cde <strstr@plt+0x6b0e>
  407c05:	mov    rbp,rsi
  407c08:	mov    r15,rdi
  407c0b:	mov    ecx,DWORD PTR [rip+0xb5b3]        # 4131c4 <strstr@plt+0x11ff4>
  407c11:	inc    ecx
  407c13:	mov    eax,DWORD PTR [rip+0xb5a7]        # 4131c0 <strstr@plt+0x11ff0>
  407c19:	cmp    ecx,eax
  407c1b:	jge    407c62 <strstr@plt+0x6a92>
  407c1d:	lea    rbx,[rip+0x788c]        # 40f4b0 <strstr@plt+0xe2e0>
  407c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c2e:	xchg   ax,ax
  407c30:	mov    rcx,QWORD PTR [r15+0x10]
  407c34:	mov    esi,0x3
  407c39:	mov    edx,0x1
  407c3e:	mov    rdi,rbx
  407c41:	call   4011b0 <fwrite@plt>
  407c46:	mov    ecx,DWORD PTR [rip+0xb578]        # 4131c4 <strstr@plt+0x11ff4>
  407c4c:	lea    eax,[rcx+0x1]
  407c4f:	mov    DWORD PTR [rip+0xb56f],eax        # 4131c4 <strstr@plt+0x11ff4>
  407c55:	add    ecx,0x2
  407c58:	mov    eax,DWORD PTR [rip+0xb562]        # 4131c0 <strstr@plt+0x11ff0>
  407c5e:	cmp    ecx,eax
  407c60:	jl     407c30 <strstr@plt+0x6a60>
  407c62:	mov    DWORD PTR [rip+0xb55c],eax        # 4131c4 <strstr@plt+0x11ff4>
  407c68:	cmp    BYTE PTR [rbp+0x0],0x2e
  407c6c:	lea    r12,[rip+0xd5cd]        # 415240 <strstr@plt+0x14070>
  407c73:	cmovne r12,rbp
  407c77:	mov    rdi,r12
  407c7a:	mov    esi,0x20
  407c7f:	call   4010b0 <strchr@plt>
  407c84:	test   rax,rax
  407c87:	je     407ced <strstr@plt+0x6b1d>
  407c89:	mov    r14,rax
  407c8c:	inc    r14
  407c8f:	mov    BYTE PTR [rax],0x0
  407c92:	cmp    BYTE PTR [rip+0xb547],0x0        # 4131e0 <strstr@plt+0x12010>
  407c99:	je     407cf9 <strstr@plt+0x6b29>
  407c9b:	lea    rbx,[rip+0xb53e]        # 4131e0 <strstr@plt+0x12010>
  407ca2:	mov    r13d,0x2
  407ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  407cb0:	mov    rdi,rbx
  407cb3:	mov    rsi,r12
  407cb6:	call   401100 <strcmp@plt>
  407cbb:	test   eax,eax
  407cbd:	je     407d2c <strstr@plt+0x6b5c>
  407cbf:	mov    rdi,rbx
  407cc2:	call   4010a0 <strlen@plt>
  407cc7:	lea    rbp,[rax+rbx*1]
  407ccb:	add    rbp,0x1
  407ccf:	inc    r13d
  407cd2:	cmp    BYTE PTR [rax+rbx*1+0x1],0x0
  407cd7:	mov    rbx,rbp
  407cda:	jne    407cb0 <strstr@plt+0x6ae0>
  407cdc:	jmp    407d06 <strstr@plt+0x6b36>
  407cde:	add    rsp,0x8
  407ce2:	pop    rbx
  407ce3:	pop    r12
  407ce5:	pop    r13
  407ce7:	pop    r14
  407ce9:	pop    r15
  407ceb:	pop    rbp
  407cec:	ret    
  407ced:	xor    r14d,r14d
  407cf0:	cmp    BYTE PTR [rip+0xb4e9],0x0        # 4131e0 <strstr@plt+0x12010>
  407cf7:	jne    407c9b <strstr@plt+0x6acb>
  407cf9:	lea    rbp,[rip+0xb4e0]        # 4131e0 <strstr@plt+0x12010>
  407d00:	mov    r13d,0x2
  407d06:	mov    rdi,r12
  407d09:	call   4010a0 <strlen@plt>
  407d0e:	add    rax,rbp
  407d11:	add    rax,0x1
  407d15:	lea    rcx,[rip+0xd4c4]        # 4151e0 <strstr@plt+0x14010>
  407d1c:	cmp    rax,rcx
  407d1f:	jae    407d76 <strstr@plt+0x6ba6>
  407d21:	mov    rdi,rbp
  407d24:	mov    rsi,r12
  407d27:	call   401060 <strcpy@plt>
  407d2c:	mov    rdi,QWORD PTR [r15+0x10]
  407d30:	test   r14,r14
  407d33:	je     407d57 <strstr@plt+0x6b87>
  407d35:	lea    rsi,[rip+0x7778]        # 40f4b4 <strstr@plt+0xe2e4>
  407d3c:	mov    edx,r13d
  407d3f:	mov    rcx,r14
  407d42:	xor    eax,eax
  407d44:	add    rsp,0x8
  407d48:	pop    rbx
  407d49:	pop    r12
  407d4b:	pop    r13
  407d4d:	pop    r14
  407d4f:	pop    r15
  407d51:	pop    rbp
  407d52:	jmp    401120 <fprintf@plt>
  407d57:	lea    rsi,[rip+0x7766]        # 40f4c4 <strstr@plt+0xe2f4>
  407d5e:	mov    edx,r13d
  407d61:	xor    eax,eax
  407d63:	add    rsp,0x8
  407d67:	pop    rbx
  407d68:	pop    r12
  407d6a:	pop    r13
  407d6c:	pop    r14
  407d6e:	pop    r15
  407d70:	pop    rbp
  407d71:	jmp    401120 <fprintf@plt>
  407d76:	mov    rax,QWORD PTR [rip+0xb273]        # 412ff0 <strstr@plt+0x11e20>
  407d7d:	mov    rcx,QWORD PTR [rax]
  407d80:	lea    rdi,[rip+0x7675]        # 40f3fc <strstr@plt+0xe22c>
  407d87:	mov    esi,0x1e
  407d8c:	mov    edx,0x1
  407d91:	call   4011b0 <fwrite@plt>
  407d96:	mov    edi,0x1
  407d9b:	call   4011a0 <exit@plt>
  407da0:	push   r14
  407da2:	push   rbx
  407da3:	push   rax
  407da4:	cmp    DWORD PTR [rdi+0x8],0x7
  407da8:	jne    407f47 <strstr@plt+0x6d77>
  407dae:	mov    r14,rsi
  407db1:	mov    rdi,rsi
  407db4:	call   4010a0 <strlen@plt>
  407db9:	mov    rbx,rax
  407dbc:	mov    al,BYTE PTR [r14]
  407dbf:	cmp    al,0x22
  407dc1:	jne    407e53 <strstr@plt+0x6c83>
  407dc7:	cmp    ebx,0x2
  407dca:	jl     407f4f <strstr@plt+0x6d7f>
  407dd0:	shl    rbx,0x20
  407dd4:	movabs rax,0xffffffff00000000
  407dde:	add    rax,rbx
  407de1:	sar    rax,0x20
  407de5:	cmp    BYTE PTR [r14+rax*1],0x22
  407dea:	jne    407f4f <strstr@plt+0x6d7f>
  407df0:	mov    BYTE PTR [r14+rax*1],0x0
  407df5:	inc    r14
  407df8:	mov    rdi,r14
  407dfb:	call   4010a0 <strlen@plt>
  407e00:	cmp    rax,0x3a
  407e04:	jae    407fa5 <strstr@plt+0x6dd5>
  407e0a:	mov    rcx,QWORD PTR [rip+0xd3cf]        # 4151e0 <strstr@plt+0x14010>
  407e11:	lea    rdx,[rcx+rax*1]
  407e15:	add    rdx,0x3
  407e19:	lea    rsi,[rip+0xd3c0]        # 4151e0 <strstr@plt+0x14010>
  407e20:	cmp    rdx,rsi
  407e23:	ja     407f7b <strstr@plt+0x6dab>
  407e29:	lea    rbx,[rcx+rax*1]
  407e2d:	add    rbx,0x1
  407e31:	mov    edx,eax
  407e33:	or     dl,0xc0
  407e36:	mov    BYTE PTR [rcx],dl
  407e38:	lea    rdi,[rcx+0x1]
  407e3c:	mov    rsi,r14
  407e3f:	mov    rdx,rax
  407e42:	call   401140 <memcpy@plt>
  407e47:	mov    QWORD PTR [rip+0xd392],rbx        # 4151e0 <strstr@plt+0x14010>
  407e4e:	jmp    407f47 <strstr@plt+0x6d77>
  407e53:	add    al,0xd0
  407e55:	cmp    al,0x9
  407e57:	ja     407ea0 <strstr@plt+0x6cd0>
  407e59:	mov    rsi,rsp
  407e5c:	mov    rdi,r14
  407e5f:	call   401080 <strtod@plt>
  407e64:	mov    rax,QWORD PTR [rsp]
  407e68:	cmp    BYTE PTR [rax],0x0
  407e6b:	jne    407f4f <strstr@plt+0x6d7f>
  407e71:	mov    rax,QWORD PTR [rip+0xd368]        # 4151e0 <strstr@plt+0x14010>
  407e78:	lea    rcx,[rax+0x9]
  407e7c:	lea    rdx,[rip+0xd35d]        # 4151e0 <strstr@plt+0x14010>
  407e83:	cmp    rcx,rdx
  407e86:	ja     407f7b <strstr@plt+0x6dab>
  407e8c:	mov    BYTE PTR [rax],0xfb
  407e8f:	vmovsd QWORD PTR [rax+0x1],xmm0
  407e94:	mov    QWORD PTR [rip+0xd345],rcx        # 4151e0 <strstr@plt+0x14010>
  407e9b:	jmp    407f47 <strstr@plt+0x6d77>
  407ea0:	lea    rsi,[rip+0x7628]        # 40f4cf <strstr@plt+0xe2ff>
  407ea7:	mov    rdi,r14
  407eaa:	call   401100 <strcmp@plt>
  407eaf:	test   eax,eax
  407eb1:	je     407f26 <strstr@plt+0x6d56>
  407eb3:	cmp    ebx,0x5
  407eb6:	jl     407f4f <strstr@plt+0x6d7f>
  407ebc:	lea    rsi,[rip+0x7613]        # 40f4d6 <strstr@plt+0xe306>
  407ec3:	mov    edx,0x4
  407ec8:	mov    rdi,r14
  407ecb:	call   401050 <strncmp@plt>
  407ed0:	test   eax,eax
  407ed2:	jne    407f4f <strstr@plt+0x6d7f>
  407ed4:	mov    rax,QWORD PTR [rip+0xd305]        # 4151e0 <strstr@plt+0x14010>
  407edb:	lea    rcx,[rax+0x2]
  407edf:	lea    rdx,[rip+0xd2fa]        # 4151e0 <strstr@plt+0x14010>
  407ee6:	cmp    rcx,rdx
  407ee9:	ja     407f7b <strstr@plt+0x6dab>
  407eef:	lea    rcx,[rax+0x1]
  407ef3:	mov    QWORD PTR [rip+0xd2e6],rcx        # 4151e0 <strstr@plt+0x14010>
  407efa:	mov    BYTE PTR [rax],0xfc
  407efd:	add    r14,0x4
  407f01:	mov    rdi,r14
  407f04:	xor    esi,esi
  407f06:	mov    edx,0xa
  407f0b:	call   401130 <strtol@plt>
  407f10:	mov    rcx,QWORD PTR [rip+0xd2c9]        # 4151e0 <strstr@plt+0x14010>
  407f17:	lea    rdx,[rcx+0x1]
  407f1b:	mov    QWORD PTR [rip+0xd2be],rdx        # 4151e0 <strstr@plt+0x14010>
  407f22:	mov    BYTE PTR [rcx],al
  407f24:	jmp    407f47 <strstr@plt+0x6d77>
  407f26:	mov    rax,QWORD PTR [rip+0xd2b3]        # 4151e0 <strstr@plt+0x14010>
  407f2d:	lea    rcx,[rax+0x1]
  407f31:	lea    rdx,[rip+0xd2a8]        # 4151e0 <strstr@plt+0x14010>
  407f38:	cmp    rcx,rdx
  407f3b:	ja     407f7b <strstr@plt+0x6dab>
  407f3d:	mov    QWORD PTR [rip+0xd29c],rcx        # 4151e0 <strstr@plt+0x14010>
  407f44:	mov    BYTE PTR [rax],0xfd
  407f47:	add    rsp,0x8
  407f4b:	pop    rbx
  407f4c:	pop    r14
  407f4e:	ret    
  407f4f:	mov    rax,QWORD PTR [rip+0xb09a]        # 412ff0 <strstr@plt+0x11e20>
  407f56:	mov    rdi,QWORD PTR [rax]
  407f59:	lea    rsi,[rip+0x757b]        # 40f4db <strstr@plt+0xe30b>
  407f60:	lea    rdx,[rip+0x7297]        # 40f1fe <strstr@plt+0xe02e>
  407f67:	mov    rcx,r14
  407f6a:	xor    eax,eax
  407f6c:	call   401120 <fprintf@plt>
  407f71:	mov    edi,0x1
  407f76:	call   4011a0 <exit@plt>
  407f7b:	mov    rax,QWORD PTR [rip+0xb06e]        # 412ff0 <strstr@plt+0x11e20>
  407f82:	mov    rcx,QWORD PTR [rax]
  407f85:	lea    rdi,[rip+0x7470]        # 40f3fc <strstr@plt+0xe22c>
  407f8c:	mov    esi,0x1e
  407f91:	mov    edx,0x1
  407f96:	call   4011b0 <fwrite@plt>
  407f9b:	mov    edi,0x1
  407fa0:	call   4011a0 <exit@plt>
  407fa5:	mov    rax,QWORD PTR [rip+0xb044]        # 412ff0 <strstr@plt+0x11e20>
  407fac:	mov    rdi,QWORD PTR [rax]
  407faf:	lea    rsi,[rip+0x74b0]        # 40f466 <strstr@plt+0xe296>
  407fb6:	mov    rdx,r14
  407fb9:	xor    eax,eax
  407fbb:	call   401120 <fprintf@plt>
  407fc0:	mov    edi,0x1
  407fc5:	call   4011a0 <exit@plt>
  407fca:	nop    WORD PTR [rax+rax*1+0x0]
  407fd0:	push   r15
  407fd2:	push   r14
  407fd4:	push   r12
  407fd6:	push   rbx
  407fd7:	push   rax
  407fd8:	cmp    DWORD PTR [rdi+0x8],0x7
  407fdc:	jne    408050 <strstr@plt+0x6e80>
  407fde:	mov    r14,rsi
  407fe1:	cmp    BYTE PTR [rsi],0x21
  407fe4:	jne    407ff1 <strstr@plt+0x6e21>
  407fe6:	cmp    BYTE PTR [r14+0x1],0x0
  407feb:	jne    407ff1 <strstr@plt+0x6e21>
  407fed:	mov    BYTE PTR [r14],0x0
  407ff1:	mov    rdi,r14
  407ff4:	call   4010a0 <strlen@plt>
  407ff9:	cmp    rax,0x3a
  407ffd:	jae    40805c <strstr@plt+0x6e8c>
  407fff:	mov    rbx,rax
  408002:	mov    r15,QWORD PTR [rip+0xd1d7]        # 4151e0 <strstr@plt+0x14010>
  408009:	add    rax,r15
  40800c:	add    rax,0x3
  408010:	lea    rcx,[rip+0xd1c9]        # 4151e0 <strstr@plt+0x14010>
  408017:	cmp    rax,rcx
  40801a:	ja     408081 <strstr@plt+0x6eb1>
  40801c:	lea    rdi,[r15+0x1]
  408020:	lea    r12,[r15+rbx*1]
  408024:	add    r12,0x1
  408028:	mov    eax,ebx
  40802a:	or     al,0xc0
  40802c:	mov    BYTE PTR [r15],al
  40802f:	mov    rsi,r14
  408032:	mov    rdx,rbx
  408035:	call   401140 <memcpy@plt>
  40803a:	inc    r12
  40803d:	mov    QWORD PTR [rip+0xd19c],r12        # 4151e0 <strstr@plt+0x14010>
  408044:	mov    BYTE PTR [r15+rbx*1+0x1],0xfa
  40804a:	inc    BYTE PTR [rip+0xb192]        # 4131e2 <strstr@plt+0x12012>
  408050:	add    rsp,0x8
  408054:	pop    rbx
  408055:	pop    r12
  408057:	pop    r14
  408059:	pop    r15
  40805b:	ret    
  40805c:	mov    rax,QWORD PTR [rip+0xaf8d]        # 412ff0 <strstr@plt+0x11e20>
  408063:	mov    rdi,QWORD PTR [rax]
  408066:	lea    rsi,[rip+0x73f9]        # 40f466 <strstr@plt+0xe296>
  40806d:	mov    rdx,r14
  408070:	xor    eax,eax
  408072:	call   401120 <fprintf@plt>
  408077:	mov    edi,0x1
  40807c:	call   4011a0 <exit@plt>
  408081:	mov    rax,QWORD PTR [rip+0xaf68]        # 412ff0 <strstr@plt+0x11e20>
  408088:	mov    rcx,QWORD PTR [rax]
  40808b:	lea    rdi,[rip+0x736a]        # 40f3fc <strstr@plt+0xe22c>
  408092:	mov    esi,0x1e
  408097:	mov    edx,0x1
  40809c:	call   4011b0 <fwrite@plt>
  4080a1:	mov    edi,0x1
  4080a6:	call   4011a0 <exit@plt>
  4080ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4080b0:	mov    DWORD PTR [rip+0xb11a],edx        # 4131d0 <strstr@plt+0x12000>
  4080b6:	ret    
  4080b7:	nop    WORD PTR [rax+rax*1+0x0]
  4080c0:	push   rbp
  4080c1:	push   r15
  4080c3:	push   r14
  4080c5:	push   r12
  4080c7:	push   rbx
  4080c8:	mov    r12d,esi
  4080cb:	mov    r14,rdi
  4080ce:	call   4010a0 <strlen@plt>
  4080d3:	mov    rbx,rax
  4080d6:	cmp    r12d,0xc0
  4080dd:	je     408115 <strstr@plt+0x6f45>
  4080df:	mov    r15,QWORD PTR [rip+0xd102]        # 4151e8 <strstr@plt+0x14018>
  4080e6:	cmp    rbx,r15
  4080e9:	jbe    408115 <strstr@plt+0x6f45>
  4080eb:	cmp    BYTE PTR [r14+r15*1],0x5f
  4080f0:	jne    408115 <strstr@plt+0x6f45>
  4080f2:	lea    rsi,[rip+0xd0f7]        # 4151f0 <strstr@plt+0x14020>
  4080f9:	mov    rdi,r14
  4080fc:	mov    rdx,r15
  4080ff:	call   401050 <strncmp@plt>
  408104:	test   eax,eax
  408106:	jne    408115 <strstr@plt+0x6f45>
  408108:	add    r14,r15
  40810b:	add    r14,0x1
  40810f:	inc    r15
  408112:	sub    rbx,r15
  408115:	cmp    rbx,0x3a
  408119:	jae    408163 <strstr@plt+0x6f93>
  40811b:	mov    rax,QWORD PTR [rip+0xd0be]        # 4151e0 <strstr@plt+0x14010>
  408122:	lea    rcx,[rax+rbx*1]
  408126:	add    rcx,0x3
  40812a:	lea    rdx,[rip+0xd0af]        # 4151e0 <strstr@plt+0x14010>
  408131:	cmp    rcx,rdx
  408134:	ja     408188 <strstr@plt+0x6fb8>
  408136:	lea    rbp,[rax+rbx*1]
  40813a:	add    rbp,0x1
  40813e:	or     r12d,ebx
  408141:	mov    BYTE PTR [rax],r12b
  408144:	lea    rdi,[rax+0x1]
  408148:	mov    rsi,r14
  40814b:	mov    rdx,rbx
  40814e:	call   401140 <memcpy@plt>
  408153:	mov    QWORD PTR [rip+0xd086],rbp        # 4151e0 <strstr@plt+0x14010>
  40815a:	pop    rbx
  40815b:	pop    r12
  40815d:	pop    r14
  40815f:	pop    r15
  408161:	pop    rbp
  408162:	ret    
  408163:	mov    rax,QWORD PTR [rip+0xae86]        # 412ff0 <strstr@plt+0x11e20>
  40816a:	mov    rdi,QWORD PTR [rax]
  40816d:	lea    rsi,[rip+0x72f2]        # 40f466 <strstr@plt+0xe296>
  408174:	mov    rdx,r14
  408177:	xor    eax,eax
  408179:	call   401120 <fprintf@plt>
  40817e:	mov    edi,0x1
  408183:	call   4011a0 <exit@plt>
  408188:	mov    rax,QWORD PTR [rip+0xae61]        # 412ff0 <strstr@plt+0x11e20>
  40818f:	mov    rcx,QWORD PTR [rax]
  408192:	lea    rdi,[rip+0x7263]        # 40f3fc <strstr@plt+0xe22c>
  408199:	mov    esi,0x1e
  40819e:	mov    edx,0x1
  4081a3:	call   4011b0 <fwrite@plt>
  4081a8:	mov    edi,0x1
  4081ad:	call   4011a0 <exit@plt>
  4081b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081bc:	nop    DWORD PTR [rax+0x0]
  4081c0:	push   rbp
  4081c1:	push   r15
  4081c3:	push   r14
  4081c5:	push   r13
  4081c7:	push   r12
  4081c9:	push   rbx
  4081ca:	sub    rsp,0x8138
  4081d1:	mov    rax,QWORD PTR [rdi+0x20]
  4081d5:	mov    rbx,QWORD PTR [rax]
  4081d8:	test   rbx,rbx
  4081db:	je     40899a <strstr@plt+0x77ca>
  4081e1:	mov    r13,rdi
  4081e4:	cmp    BYTE PTR [rbx],0x2d
  4081e7:	jne    4081f3 <strstr@plt+0x7023>
  4081e9:	cmp    BYTE PTR [rbx+0x1],0x0
  4081ed:	je     40883a <strstr@plt+0x766a>
  4081f3:	lea    rsi,[rip+0x5aa1]        # 40dc9b <strstr@plt+0xcacb>
  4081fa:	mov    rdi,rbx
  4081fd:	call   401180 <fopen@plt>
  408202:	mov    rbp,rax
  408205:	test   rax,rax
  408208:	je     4089c4 <strstr@plt+0x77f4>
  40820e:	mov    rcx,QWORD PTR [r13+0x10]
  408212:	lea    rdi,[rip+0x685f]        # 40ea78 <strstr@plt+0xd8a8>
  408219:	mov    esi,0x2e
  40821e:	mov    edx,0x1
  408223:	call   4011b0 <fwrite@plt>
  408228:	mov    rcx,QWORD PTR [r13+0x10]
  40822c:	lea    rdi,[rip+0x7343]        # 40f576 <strstr@plt+0xe3a6>
  408233:	mov    esi,0x26
  408238:	mov    edx,0x1
  40823d:	call   4011b0 <fwrite@plt>
  408242:	mov    DWORD PTR [rip+0xd044],0x0        # 415290 <strstr@plt+0x140c0>
  40824c:	mov    DWORD PTR [rip+0xd03e],0x0        # 415294 <strstr@plt+0x140c4>
  408256:	mov    DWORD PTR [rip+0xd038],0x0        # 415298 <strstr@plt+0x140c8>
  408260:	lea    rdi,[rsp+0x30]
  408265:	mov    esi,0x100
  40826a:	mov    rdx,rbp
  40826d:	call   4010f0 <fgets@plt>
  408272:	test   rax,rax
  408275:	mov    QWORD PTR [rsp+0x10],r13
  40827a:	je     4084ba <strstr@plt+0x72ea>
  408280:	lea    rbx,[rsp+0x36]
  408285:	lea    r14,[rsp+0x37]
  40828a:	lea    r12,[rip+0x9aef]        # 411d80 <strstr@plt+0x10bb0>
  408291:	jmp    4082db <strstr@plt+0x710b>
  408293:	cmp    BYTE PTR [rsp+0x36],0x58
  408298:	mov    rdi,QWORD PTR [r13+0x10]
  40829c:	lea    rsi,[rip+0x7306]        # 40f5a9 <strstr@plt+0xe3d9>
  4082a3:	lea    rax,[rip+0x72fa]        # 40f5a4 <strstr@plt+0xe3d4>
  4082aa:	cmove  rsi,rax
  4082ae:	lea    rdx,[rsp+0x38]
  4082b3:	xor    eax,eax
  4082b5:	call   401120 <fprintf@plt>
  4082ba:	inc    DWORD PTR [rip+0xcfd4]        # 415294 <strstr@plt+0x140c4>
  4082c0:	lea    rdi,[rsp+0x30]
  4082c5:	mov    esi,0x100
  4082ca:	mov    rdx,rbp
  4082cd:	call   4010f0 <fgets@plt>
  4082d2:	test   rax,rax
  4082d5:	je     4084ba <strstr@plt+0x72ea>
  4082db:	mov    r15d,DWORD PTR [rip+0xcfae]        # 415290 <strstr@plt+0x140c0>
  4082e2:	inc    r15d
  4082e5:	mov    DWORD PTR [rip+0xcfa4],r15d        # 415290 <strstr@plt+0x140c0>
  4082ec:	mov    eax,DWORD PTR [rsp+0x30]
  4082f0:	mov    ecx,0x4f464a4c
  4082f5:	xor    eax,ecx
  4082f7:	movzx  ecx,WORD PTR [rsp+0x34]
  4082fc:	xor    ecx,0x444c
  408302:	or     ecx,eax
  408304:	jne    4082c0 <strstr@plt+0x70f0>
  408306:	mov    rdi,rbx
  408309:	mov    esi,0x29
  40830e:	call   4010b0 <strchr@plt>
  408313:	mov    cl,BYTE PTR [rsp+0x36]
  408317:	test   rax,rax
  40831a:	je     408349 <strstr@plt+0x7179>
  40831c:	cmp    cl,0x28
  40831f:	jne    408349 <strstr@plt+0x7179>
  408321:	mov    BYTE PTR [rax],0x0
  408324:	mov    QWORD PTR [rsp+0x130],r14
  40832c:	mov    rdi,r14
  40832f:	mov    esi,0x20
  408334:	call   4010b0 <strchr@plt>
  408339:	test   rax,rax
  40833c:	je     40839a <strstr@plt+0x71ca>
  40833e:	mov    rcx,rax
  408341:	inc    rcx
  408344:	mov    BYTE PTR [rax],0x0
  408347:	jmp    40839c <strstr@plt+0x71cc>
  408349:	cmp    cl,0x58
  40834c:	je     408357 <strstr@plt+0x7187>
  40834e:	cmp    cl,0x46
  408351:	jne    408941 <strstr@plt+0x7771>
  408357:	test   rax,rax
  40835a:	je     408941 <strstr@plt+0x7771>
  408360:	cmp    BYTE PTR [rsp+0x37],0x28
  408365:	jne    408941 <strstr@plt+0x7771>
  40836b:	mov    BYTE PTR [rax],0x0
  40836e:	cmp    DWORD PTR [rip+0xcf1f],0x0        # 415294 <strstr@plt+0x140c4>
  408375:	je     408293 <strstr@plt+0x70c3>
  40837b:	mov    rcx,QWORD PTR [r13+0x10]
  40837f:	mov    esi,0x2
  408384:	mov    edx,0x1
  408389:	lea    rdi,[rip+0x6e06]        # 40f196 <strstr@plt+0xdfc6>
  408390:	call   4011b0 <fwrite@plt>
  408395:	jmp    408293 <strstr@plt+0x70c3>
  40839a:	xor    ecx,ecx
  40839c:	mov    QWORD PTR [rsp+0x130],rcx
  4083a4:	mov    rdi,QWORD PTR [r12]
  4083a8:	test   rdi,rdi
  4083ab:	je     4088f1 <strstr@plt+0x7721>
  4083b1:	xor    r13d,r13d
  4083b4:	mov    ebx,0x1
  4083b9:	nop    DWORD PTR [rax+0x0]
  4083c0:	mov    rsi,r14
  4083c3:	call   401100 <strcmp@plt>
  4083c8:	test   eax,eax
  4083ca:	je     4083e5 <strstr@plt+0x7215>
  4083cc:	mov    eax,ebx
  4083ce:	mov    rdi,QWORD PTR [r12+rax*8]
  4083d2:	add    r13d,0x20000
  4083d9:	inc    ebx
  4083db:	test   rdi,rdi
  4083de:	jne    4083c0 <strstr@plt+0x71f0>
  4083e0:	jmp    4088f1 <strstr@plt+0x7721>
  4083e5:	mov    r15,rbp
  4083e8:	lea    rbp,[rsp+0x130]
  4083f0:	mov    rdi,rbp
  4083f3:	xor    esi,esi
  4083f5:	mov    edx,0x7f
  4083fa:	call   408a00 <strstr@plt+0x7830>
  4083ff:	mov    ebx,eax
  408401:	mov    rdi,rbp
  408404:	mov    esi,0x1
  408409:	mov    edx,0x3ff
  40840e:	call   408a00 <strstr@plt+0x7830>
  408413:	mov    r10d,DWORD PTR [rip+0xce7e]        # 415298 <strstr@plt+0x140c8>
  40841a:	cmp    r10,0xfff
  408421:	ja     408982 <strstr@plt+0x77b2>
  408427:	mov    r8d,DWORD PTR [rip+0xce66]        # 415294 <strstr@plt+0x140c4>
  40842e:	shl    ebx,0xa
  408431:	or     ebx,r13d
  408434:	or     ebx,eax
  408436:	test   r10d,r10d
  408439:	mov    rbp,r15
  40843c:	je     40848c <strstr@plt+0x72bc>
  40843e:	mov    r9,rbp
  408441:	mov    esi,ebx
  408443:	and    esi,0xffffff
  408449:	lea    rcx,[rip+0xce50]        # 4152a0 <strstr@plt+0x140d0>
  408450:	lea    rdi,[rcx+r10*4]
  408454:	mov    rax,r10
  408457:	mov    r13,QWORD PTR [rsp+0x10]
  40845c:	nop    DWORD PTR [rax+0x0]
  408460:	lea    edx,[rax-0x1]
  408463:	mov    ebp,DWORD PTR [rcx+rdx*4]
  408466:	mov    edx,ebp
  408468:	and    edx,0xffffff
  40846e:	cmp    edx,esi
  408470:	jb     408487 <strstr@plt+0x72b7>
  408472:	je     408919 <strstr@plt+0x7749>
  408478:	mov    DWORD PTR [rdi],ebp
  40847a:	dec    rax
  40847d:	add    rdi,0xfffffffffffffffc
  408481:	test   eax,eax
  408483:	jne    408460 <strstr@plt+0x7290>
  408485:	xor    eax,eax
  408487:	mov    rbp,r9
  40848a:	jmp    40849a <strstr@plt+0x72ca>
  40848c:	xor    eax,eax
  40848e:	mov    r13,QWORD PTR [rsp+0x10]
  408493:	lea    rcx,[rip+0xce06]        # 4152a0 <strstr@plt+0x140d0>
  40849a:	shl    r8d,0x18
  40849e:	or     ebx,r8d
  4084a1:	mov    eax,eax
  4084a3:	mov    DWORD PTR [rcx+rax*4],ebx
  4084a6:	inc    r10d
  4084a9:	mov    DWORD PTR [rip+0xcde8],r10d        # 415298 <strstr@plt+0x140c8>
  4084b0:	lea    rbx,[rsp+0x36]
  4084b5:	jmp    4082c0 <strstr@plt+0x70f0>
  4084ba:	mov    rdi,rbp
  4084bd:	call   401090 <fclose@plt>
  4084c2:	mov    rcx,QWORD PTR [r13+0x10]
  4084c6:	lea    rdi,[rip+0x6dfe]        # 40f2cb <strstr@plt+0xe0fb>
  4084cd:	mov    esi,0x5
  4084d2:	mov    edx,0x1
  4084d7:	call   4011b0 <fwrite@plt>
  4084dc:	mov    ebx,DWORD PTR [rip+0xcdb6]        # 415298 <strstr@plt+0x140c8>
  4084e2:	mov    r14,rbx
  4084e5:	or     r14,0x1
  4084e9:	cmp    r14d,0x1fff
  4084f0:	ja     40876a <strstr@plt+0x759a>
  4084f6:	lea    eax,[r14+0x1]
  4084fa:	mov    DWORD PTR [rsp+0x4],eax
  4084fe:	lea    r15,[rbx*4+0x0]
  408506:	lea    r13,[rip+0xcd93]        # 4152a0 <strstr@plt+0x140d0>
  40850d:	mov    QWORD PTR [rsp+0x18],rbx
  408512:	lea    eax,[r14+0x1]
  408516:	mov    DWORD PTR [rsp+0x8],eax
  40851a:	mov    eax,r14d
  40851d:	lea    rbp,[rax*4+0x4]
  408525:	lea    eax,[r14-0x1]
  408529:	mov    DWORD PTR [rsp+0xc],eax
  40852d:	xor    r12d,r12d
  408530:	mov    QWORD PTR [rsp+0x28],rbp
  408535:	lea    rdi,[rsp+0x130]
  40853d:	mov    esi,0xff
  408542:	mov    rdx,rbp
  408545:	call   4010c0 <memset@plt>
  40854a:	test   ebx,ebx
  40854c:	je     408849 <strstr@plt+0x7679>
  408552:	mov    r8d,r12d
  408555:	shr    r8d,0x5
  408559:	mov    r9d,r12d
  40855c:	and    r9d,0x1f
  408560:	xor    ebp,ebp
  408562:	mov    r11d,DWORD PTR [rsp+0xc]
  408567:	jmp    40858b <strstr@plt+0x73bb>
  408569:	nop    DWORD PTR [rax+0x0]
  408570:	lea    r10,[rsp+rcx*4]
  408574:	add    r10,0x130
  40857b:	mov    DWORD PTR [r10],ebx
  40857e:	add    rbp,0x4
  408582:	cmp    r15,rbp
  408585:	je     408785 <strstr@plt+0x75b5>
  40858b:	mov    ebx,DWORD PTR [rbp+r13*1+0x0]
  408590:	mov    eax,ebx
  408592:	and    eax,0xffffff
  408597:	shlx   ecx,eax,r8d
  40859c:	sub    ecx,eax
  40859e:	shlx   eax,ecx,r9d
  4085a3:	xor    edx,edx
  4085a5:	div    r14d
  4085a8:	mov    ecx,edx
  4085aa:	cmp    DWORD PTR [rsp+rcx*4+0x130],0xffffffff
  4085b2:	je     408570 <strstr@plt+0x73a0>
  4085b4:	mov    eax,ecx
  4085b6:	lea    r10,[rsp+rax*4]
  4085ba:	add    r10,0x134
  4085c1:	mov    edi,DWORD PTR [rsp+rax*4+0x134]
  4085c8:	cmp    edi,0xffffffff
  4085cb:	je     40857b <strstr@plt+0x73ab>
  4085cd:	cmp    ecx,r11d
  4085d0:	jae    408610 <strstr@plt+0x7440>
  4085d2:	lea    esi,[rcx+0x2]
  4085d5:	cmp    DWORD PTR [rsp+rsi*4+0x130],0xffffffff
  4085dd:	jne    408610 <strstr@plt+0x7440>
  4085df:	mov    eax,edi
  4085e1:	and    eax,0xffffff
  4085e6:	shlx   edx,eax,r8d
  4085eb:	sub    edx,eax
  4085ed:	shlx   eax,edx,r9d
  4085f2:	xor    edx,edx
  4085f4:	div    r14d
  4085f7:	inc    ecx
  4085f9:	cmp    edx,ecx
  4085fb:	jne    408610 <strstr@plt+0x7440>
  4085fd:	mov    DWORD PTR [rsp+rsi*4+0x130],edi
  408604:	jmp    40857b <strstr@plt+0x73ab>
  408609:	nop    DWORD PTR [rax+0x0]
  408610:	inc    r12d
  408613:	cmp    r12d,0x400
  40861a:	mov    rbx,QWORD PTR [rsp+0x18]
  40861f:	mov    rbp,QWORD PTR [rsp+0x28]
  408624:	jne    408535 <strstr@plt+0x7365>
  40862a:	xor    eax,eax
  40862c:	jmp    40863e <strstr@plt+0x746e>
  40862e:	mov    eax,r12d
  408631:	inc    eax
  408633:	cmp    eax,0x400
  408638:	je     40874f <strstr@plt+0x757f>
  40863e:	mov    r12d,eax
  408641:	cmp    eax,0x20
  408644:	jb     40862e <strstr@plt+0x745e>
  408646:	mov    eax,r12d
  408649:	and    eax,0x1f
  40864c:	mov    DWORD PTR [rsp+0x24],eax
  408650:	je     40862e <strstr@plt+0x745e>
  408652:	lea    rdi,[rsp+0x130]
  40865a:	mov    esi,0xff
  40865f:	mov    rdx,QWORD PTR [rsp+0x28]
  408664:	call   4010c0 <memset@plt>
  408669:	mov    ecx,r12d
  40866c:	mov    r8d,r12d
  40866f:	shr    r8d,0x5
  408673:	mov    DWORD PTR [rsp],r8d
  408677:	neg    r8d
  40867a:	and    r8d,0x1f
  40867e:	mov    rdi,r13
  408681:	mov    rbp,QWORD PTR [rsp+0x18]
  408686:	jmp    4086ab <strstr@plt+0x74db>
  408688:	nop    DWORD PTR [rax+rax*1+0x0]
  408690:	lea    r10,[rsp+rsi*4]
  408694:	add    r10,0x130
  40869b:	mov    DWORD PTR [r10],r9d
  40869e:	add    rdi,0x4
  4086a2:	dec    rbp
  4086a5:	je     408857 <strstr@plt+0x7687>
  4086ab:	mov    r9d,DWORD PTR [rdi]
  4086ae:	mov    esi,r9d
  4086b1:	and    esi,0xffffff
  4086b7:	mov    eax,DWORD PTR [rsp]
  4086ba:	shlx   edx,esi,eax
  4086bf:	shrx   eax,esi,r8d
  4086c4:	or     eax,edx
  4086c6:	sub    eax,esi
  4086c8:	rol    eax,cl
  4086ca:	xor    edx,edx
  4086cc:	div    r14d
  4086cf:	mov    esi,edx
  4086d1:	cmp    DWORD PTR [rsp+rsi*4+0x130],0xffffffff
  4086d9:	je     408690 <strstr@plt+0x74c0>
  4086db:	mov    eax,esi
  4086dd:	lea    r10,[rsp+rax*4]
  4086e1:	add    r10,0x134
  4086e8:	mov    r11d,DWORD PTR [rsp+rax*4+0x134]
  4086f0:	cmp    r11d,0xffffffff
  4086f4:	je     40869b <strstr@plt+0x74cb>
  4086f6:	cmp    esi,DWORD PTR [rsp+0xc]
  4086fa:	jae    40862e <strstr@plt+0x745e>
  408700:	lea    ebx,[rsi+0x2]
  408703:	cmp    DWORD PTR [rsp+rbx*4+0x130],0xffffffff
  40870b:	jne    40862e <strstr@plt+0x745e>
  408711:	mov    ecx,r11d
  408714:	and    ecx,0xffffff
  40871a:	mov    eax,DWORD PTR [rsp]
  40871d:	shlx   edx,ecx,eax
  408722:	shrx   eax,ecx,r8d
  408727:	or     eax,edx
  408729:	sub    eax,ecx
  40872b:	mov    ecx,r12d
  40872e:	rol    eax,cl
  408730:	xor    edx,edx
  408732:	div    r14d
  408735:	inc    esi
  408737:	cmp    edx,esi
  408739:	jne    40862e <strstr@plt+0x745e>
  40873f:	mov    DWORD PTR [rsp+rbx*4+0x130],r11d
  408747:	mov    ecx,r12d
  40874a:	jmp    40869b <strstr@plt+0x74cb>
  40874f:	add    r14,0x2
  408753:	add    DWORD PTR [rsp+0x4],0x2
  408758:	cmp    r14,0x2000
  40875f:	mov    rbx,QWORD PTR [rsp+0x18]
  408764:	jb     408512 <strstr@plt+0x7342>
  40876a:	mov    rax,QWORD PTR [rip+0xa87f]        # 412ff0 <strstr@plt+0x11e20>
  408771:	mov    rcx,QWORD PTR [rax]
  408774:	lea    rdi,[rip+0x6f96]        # 40f711 <strstr@plt+0xe541>
  40877b:	mov    esi,0x26
  408780:	jmp    4089b0 <strstr@plt+0x77e0>
  408785:	mov    r15d,r14d
  408788:	mov    r13,QWORD PTR [rsp+0x10]
  40878d:	mov    rdi,QWORD PTR [r13+0x10]
  408791:	mov    ecx,DWORD PTR [rsp+0x130]
  408798:	lea    rsi,[rip+0x6f99]        # 40f738 <strstr@plt+0xe568>
  40879f:	mov    edx,DWORD PTR [rsp+0x8]
  4087a3:	xor    eax,eax
  4087a5:	call   401120 <fprintf@plt>
  4087aa:	mov    rcx,QWORD PTR [r13+0x10]
  4087ae:	test   r14d,r14d
  4087b1:	je     4087f0 <strstr@plt+0x7620>
  4087b3:	mov    ebp,DWORD PTR [rsp+0x4]
  4087b7:	mov    ebx,0x1
  4087bc:	lea    r14,[rip+0x6fa4]        # 40f767 <strstr@plt+0xe597>
  4087c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087cd:	nop    DWORD PTR [rax]
  4087d0:	mov    edx,DWORD PTR [rsp+rbx*4+0x130]
  4087d7:	mov    rdi,rcx
  4087da:	mov    rsi,r14
  4087dd:	xor    eax,eax
  4087df:	call   401120 <fprintf@plt>
  4087e4:	inc    rbx
  4087e7:	mov    rcx,QWORD PTR [r13+0x10]
  4087eb:	cmp    rbp,rbx
  4087ee:	jne    4087d0 <strstr@plt+0x7600>
  4087f0:	lea    rdi,[rip+0x6ad4]        # 40f2cb <strstr@plt+0xe0fb>
  4087f7:	mov    esi,0x5
  4087fc:	mov    edx,0x1
  408801:	call   4011b0 <fwrite@plt>
  408806:	mov    rdi,QWORD PTR [r13+0x10]
  40880a:	mov    edx,r12d
  40880d:	shr    edx,0x5
  408810:	and    r12d,0x1f
  408814:	lea    rsi,[rip+0x6e82]        # 40f69d <strstr@plt+0xe4cd>
  40881b:	mov    ecx,r12d
  40881e:	mov    r8d,r15d
  408821:	xor    eax,eax
  408823:	call   401120 <fprintf@plt>
  408828:	add    rsp,0x8138
  40882f:	pop    rbx
  408830:	pop    r12
  408832:	pop    r13
  408834:	pop    r14
  408836:	pop    r15
  408838:	pop    rbp
  408839:	ret    
  40883a:	mov    rax,QWORD PTR [rip+0xa797]        # 412fd8 <strstr@plt+0x11e08>
  408841:	mov    rbp,QWORD PTR [rax]
  408844:	jmp    40820e <strstr@plt+0x703e>
  408849:	xor    r12d,r12d
  40884c:	mov    r15d,0x1
  408852:	jmp    408788 <strstr@plt+0x75b8>
  408857:	mov    r13d,DWORD PTR [rsp+0x24]
  40885c:	mov    r12,QWORD PTR [rsp+0x10]
  408861:	mov    rdi,QWORD PTR [r12+0x10]
  408866:	mov    ecx,DWORD PTR [rsp+0x130]
  40886d:	lea    rsi,[rip+0x6ec4]        # 40f738 <strstr@plt+0xe568>
  408874:	mov    edx,DWORD PTR [rsp+0x8]
  408878:	xor    eax,eax
  40887a:	call   401120 <fprintf@plt>
  40887f:	mov    rcx,QWORD PTR [r12+0x10]
  408884:	test   r14d,r14d
  408887:	je     4088c1 <strstr@plt+0x76f1>
  408889:	mov    ebx,DWORD PTR [rsp+0x4]
  40888d:	mov    ebp,0x1
  408892:	lea    r15,[rip+0x6ece]        # 40f767 <strstr@plt+0xe597>
  408899:	nop    DWORD PTR [rax+0x0]
  4088a0:	mov    edx,DWORD PTR [rsp+rbp*4+0x130]
  4088a7:	mov    rdi,rcx
  4088aa:	mov    rsi,r15
  4088ad:	xor    eax,eax
  4088af:	call   401120 <fprintf@plt>
  4088b4:	inc    rbp
  4088b7:	mov    rcx,QWORD PTR [r12+0x10]
  4088bc:	cmp    rbx,rbp
  4088bf:	jne    4088a0 <strstr@plt+0x76d0>
  4088c1:	lea    rdi,[rip+0x6a03]        # 40f2cb <strstr@plt+0xe0fb>
  4088c8:	mov    esi,0x5
  4088cd:	mov    edx,0x1
  4088d2:	call   4011b0 <fwrite@plt>
  4088d7:	mov    rdi,QWORD PTR [r12+0x10]
  4088dc:	lea    rsi,[rip+0x6df0]        # 40f6d3 <strstr@plt+0xe503>
  4088e3:	mov    edx,DWORD PTR [rsp]
  4088e6:	mov    ecx,r13d
  4088e9:	mov    r8d,r14d
  4088ec:	jmp    408821 <strstr@plt+0x7651>
  4088f1:	mov    rax,QWORD PTR [rip+0xa6f8]        # 412ff0 <strstr@plt+0x11e20>
  4088f8:	mov    rdi,QWORD PTR [rax]
  4088fb:	lea    rsi,[rip+0x6d69]        # 40f66b <strstr@plt+0xe49b>
  408902:	mov    rdx,r14
  408905:	mov    ecx,r15d
  408908:	xor    eax,eax
  40890a:	call   401120 <fprintf@plt>
  40890f:	mov    edi,0x1
  408914:	call   4011a0 <exit@plt>
  408919:	mov    rax,QWORD PTR [rip+0xa6d0]        # 412ff0 <strstr@plt+0x11e20>
  408920:	mov    rdi,QWORD PTR [rax]
  408923:	mov    edx,DWORD PTR [rip+0xc967]        # 415290 <strstr@plt+0x140c0>
  408929:	lea    rsi,[rip+0x6ced]        # 40f61d <strstr@plt+0xe44d>
  408930:	xor    eax,eax
  408932:	call   401120 <fprintf@plt>
  408937:	mov    edi,0x1
  40893c:	call   4011a0 <exit@plt>
  408941:	lea    rbp,[rsp+0x30]
  408946:	mov    rdi,rbp
  408949:	call   4010a0 <strlen@plt>
  40894e:	mov    BYTE PTR [rax+rbp*1-0x1],0x0
  408953:	mov    rax,QWORD PTR [rip+0xa696]        # 412ff0 <strstr@plt+0x11e20>
  40895a:	mov    rdi,QWORD PTR [rax]
  40895d:	lea    rsi,[rip+0x6c4f]        # 40f5b3 <strstr@plt+0xe3e3>
  408964:	lea    rdx,[rip+0x6c32]        # 40f59d <strstr@plt+0xe3cd>
  40896b:	mov    rcx,rbx
  40896e:	mov    r8d,r15d
  408971:	xor    eax,eax
  408973:	call   401120 <fprintf@plt>
  408978:	mov    edi,0x1
  40897d:	call   4011a0 <exit@plt>
  408982:	mov    rax,QWORD PTR [rip+0xa667]        # 412ff0 <strstr@plt+0x11e20>
  408989:	mov    rcx,QWORD PTR [rax]
  40898c:	lea    rdi,[rip+0x6c54]        # 40f5e7 <strstr@plt+0xe417>
  408993:	mov    esi,0x35
  408998:	jmp    4089b0 <strstr@plt+0x77e0>
  40899a:	mov    rax,QWORD PTR [rip+0xa64f]        # 412ff0 <strstr@plt+0x11e20>
  4089a1:	mov    rcx,QWORD PTR [rax]
  4089a4:	lea    rdi,[rip+0x6bac]        # 40f557 <strstr@plt+0xe387>
  4089ab:	mov    esi,0x1e
  4089b0:	mov    edx,0x1
  4089b5:	call   4011b0 <fwrite@plt>
  4089ba:	mov    edi,0x1
  4089bf:	call   4011a0 <exit@plt>
  4089c4:	mov    rax,QWORD PTR [rip+0xa625]        # 412ff0 <strstr@plt+0x11e20>
  4089cb:	mov    rbp,QWORD PTR [rax]
  4089ce:	call   401040 <__errno_location@plt>
  4089d3:	mov    edi,DWORD PTR [rax]
  4089d5:	call   4011c0 <strerror@plt>
  4089da:	lea    rsi,[rip+0x67ea]        # 40f1cb <strstr@plt+0xdffb>
  4089e1:	mov    rdi,rbp
  4089e4:	mov    rdx,rbx
  4089e7:	mov    rcx,rax
  4089ea:	xor    eax,eax
  4089ec:	call   401120 <fprintf@plt>
  4089f1:	mov    edi,0x1
  4089f6:	call   4011a0 <exit@plt>
  4089fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408a00:	push   rbp
  408a01:	push   r15
  408a03:	push   r14
  408a05:	push   r13
  408a07:	push   r12
  408a09:	push   rbx
  408a0a:	sub    rsp,0x28
  408a0e:	mov    r14,QWORD PTR [rdi]
  408a11:	test   r14,r14
  408a14:	je     408a3b <strstr@plt+0x786b>
  408a16:	mov    ebx,edx
  408a18:	mov    r15d,esi
  408a1b:	mov    rbp,rdi
  408a1e:	mov    rdi,r14
  408a21:	mov    esi,0x20
  408a26:	call   4010b0 <strchr@plt>
  408a2b:	test   rax,rax
  408a2e:	je     408a42 <strstr@plt+0x7872>
  408a30:	mov    rcx,rax
  408a33:	inc    rcx
  408a36:	mov    BYTE PTR [rax],0x0
  408a39:	jmp    408a44 <strstr@plt+0x7874>
  408a3b:	xor    ebx,ebx
  408a3d:	jmp    408cd6 <strstr@plt+0x7b06>
  408a42:	xor    ecx,ecx
  408a44:	mov    QWORD PTR [rbp+0x0],rcx
  408a48:	test   r15d,r15d
  408a4b:	je     408af9 <strstr@plt+0x7929>
  408a51:	lea    rsi,[rip+0x6bf2]        # 40f64a <strstr@plt+0xe47a>
  408a58:	mov    edx,0x6
  408a5d:	mov    rdi,r14
  408a60:	call   401050 <strncmp@plt>
  408a65:	test   eax,eax
  408a67:	je     408b51 <strstr@plt+0x7981>
  408a6d:	lea    rsi,[rip+0x6bdd]        # 40f651 <strstr@plt+0xe481>
  408a74:	mov    edx,0x5
  408a79:	mov    rdi,r14
  408a7c:	call   401050 <strncmp@plt>
  408a81:	test   eax,eax
  408a83:	je     408b90 <strstr@plt+0x79c0>
  408a89:	lea    rsi,[rip+0x6bc7]        # 40f657 <strstr@plt+0xe487>
  408a90:	mov    edx,0x7
  408a95:	mov    rdi,r14
  408a98:	call   401050 <strncmp@plt>
  408a9d:	test   eax,eax
  408a9f:	je     408bd0 <strstr@plt+0x7a00>
  408aa5:	lea    rsi,[rip+0x6bb3]        # 40f65f <strstr@plt+0xe48f>
  408aac:	mov    edx,0x7
  408ab1:	mov    rdi,r14
  408ab4:	call   401050 <strncmp@plt>
  408ab9:	test   eax,eax
  408abb:	je     408c10 <strstr@plt+0x7a40>
  408ac1:	mov    al,BYTE PTR [r14]
  408ac4:	lea    ecx,[rax-0x30]
  408ac7:	cmp    cl,0x9
  408aca:	ja     408af9 <strstr@plt+0x7929>
  408acc:	xor    ebx,ebx
  408ace:	xchg   ax,ax
  408ad0:	movsx  eax,al
  408ad3:	lea    ecx,[rbx+rbx*4]
  408ad6:	lea    ebx,[rax+rcx*2]
  408ad9:	add    ebx,0xffffffd0
  408adc:	movzx  eax,BYTE PTR [r14+0x1]
  408ae1:	inc    r14
  408ae4:	lea    ecx,[rax-0x30]
  408ae7:	cmp    cl,0xa
  408aea:	jb     408ad0 <strstr@plt+0x7900>
  408aec:	test   al,al
  408aee:	je     408cd6 <strstr@plt+0x7b06>
  408af4:	jmp    408ce7 <strstr@plt+0x7b17>
  408af9:	test   ebx,ebx
  408afb:	je     408b14 <strstr@plt+0x7944>
  408afd:	lea    rdi,[rip+0x6b63]        # 40f667 <strstr@plt+0xe497>
  408b04:	mov    rsi,r14
  408b07:	call   401100 <strcmp@plt>
  408b0c:	test   eax,eax
  408b0e:	je     408cd6 <strstr@plt+0x7b06>
  408b14:	lea    rbp,[rip+0x9265]        # 411d80 <strstr@plt+0x10bb0>
  408b1b:	mov    rdi,QWORD PTR [rbp+0x0]
  408b1f:	test   rdi,rdi
  408b22:	je     408ce7 <strstr@plt+0x7b17>
  408b28:	xor    ebx,ebx
  408b2a:	nop    WORD PTR [rax+rax*1+0x0]
  408b30:	mov    rsi,r14
  408b33:	call   401100 <strcmp@plt>
  408b38:	test   eax,eax
  408b3a:	je     408cd6 <strstr@plt+0x7b06>
  408b40:	inc    ebx
  408b42:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  408b47:	test   rdi,rdi
  408b4a:	jne    408b30 <strstr@plt+0x7960>
  408b4c:	jmp    408ce7 <strstr@plt+0x7b17>
  408b51:	lea    r15,[rip+0x95f8]        # 412150 <strstr@plt+0x10f80>
  408b58:	mov    rdi,QWORD PTR [r15]
  408b5b:	test   rdi,rdi
  408b5e:	je     408ce7 <strstr@plt+0x7b17>
  408b64:	lea    rbp,[r14+0x6]
  408b68:	xor    ebx,ebx
  408b6a:	nop    WORD PTR [rax+rax*1+0x0]
  408b70:	mov    rsi,rbp
  408b73:	call   401100 <strcmp@plt>
  408b78:	test   eax,eax
  408b7a:	je     408cd6 <strstr@plt+0x7b06>
  408b80:	inc    ebx
  408b82:	mov    rdi,QWORD PTR [r15+rbx*8]
  408b86:	test   rdi,rdi
  408b89:	jne    408b70 <strstr@plt+0x79a0>
  408b8b:	jmp    408ce7 <strstr@plt+0x7b17>
  408b90:	lea    r15,[rip+0x9629]        # 4121c0 <strstr@plt+0x10ff0>
  408b97:	mov    rdi,QWORD PTR [r15]
  408b9a:	test   rdi,rdi
  408b9d:	je     408ce7 <strstr@plt+0x7b17>
  408ba3:	lea    rbp,[r14+0x5]
  408ba7:	xor    ebx,ebx
  408ba9:	nop    DWORD PTR [rax+0x0]
  408bb0:	mov    rsi,rbp
  408bb3:	call   401100 <strcmp@plt>
  408bb8:	test   eax,eax
  408bba:	je     408cd6 <strstr@plt+0x7b06>
  408bc0:	inc    ebx
  408bc2:	mov    rdi,QWORD PTR [r15+rbx*8]
  408bc6:	test   rdi,rdi
  408bc9:	jne    408bb0 <strstr@plt+0x79e0>
  408bcb:	jmp    408ce7 <strstr@plt+0x7b17>
  408bd0:	lea    r15,[rip+0x9679]        # 412250 <strstr@plt+0x11080>
  408bd7:	mov    rdi,QWORD PTR [r15]
  408bda:	test   rdi,rdi
  408bdd:	je     408ce7 <strstr@plt+0x7b17>
  408be3:	lea    rbp,[r14+0x7]
  408be7:	xor    ebx,ebx
  408be9:	nop    DWORD PTR [rax+0x0]
  408bf0:	mov    rsi,rbp
  408bf3:	call   401100 <strcmp@plt>
  408bf8:	test   eax,eax
  408bfa:	je     408cd6 <strstr@plt+0x7b06>
  408c00:	inc    ebx
  408c02:	mov    rdi,QWORD PTR [r15+rbx*8]
  408c06:	test   rdi,rdi
  408c09:	jne    408bf0 <strstr@plt+0x7a20>
  408c0b:	jmp    408ce7 <strstr@plt+0x7b17>
  408c10:	lea    rax,[rip+0x9469]        # 412080 <strstr@plt+0x10eb0>
  408c17:	mov    rbx,QWORD PTR [rax]
  408c1a:	test   rbx,rbx
  408c1d:	je     408ce7 <strstr@plt+0x7b17>
  408c23:	lea    rbp,[r14+0x7]
  408c27:	mov    rdi,rbp
  408c2a:	mov    esi,0x5f
  408c2f:	call   4010b0 <strchr@plt>
  408c34:	mov    rcx,rax
  408c37:	mov    QWORD PTR [rsp+0x18],rbp
  408c3c:	sub    rcx,rbp
  408c3f:	mov    QWORD PTR [rsp+0x10],rcx
  408c44:	mov    QWORD PTR [rsp+0x20],rax
  408c49:	lea    rbp,[rax+0x1]
  408c4d:	xor    r13d,r13d
  408c50:	mov    QWORD PTR [rsp+0x8],rbx
  408c55:	mov    rdi,rbx
  408c58:	xor    r12d,r12d
  408c5b:	cmp    QWORD PTR [rsp+0x20],0x0
  408c61:	jne    408c8f <strstr@plt+0x7abf>
  408c63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c6d:	nop    DWORD PTR [rax]
  408c70:	inc    r12d
  408c73:	lea    rax,[rip+0x9406]        # 412080 <strstr@plt+0x10eb0>
  408c7a:	mov    rdi,QWORD PTR [rax+r12*8]
  408c7e:	add    r13d,0x20
  408c82:	test   rdi,rdi
  408c85:	je     408ce7 <strstr@plt+0x7b17>
  408c87:	cmp    QWORD PTR [rsp+0x20],0x0
  408c8d:	je     408c70 <strstr@plt+0x7aa0>
  408c8f:	mov    rsi,QWORD PTR [rsp+0x18]
  408c94:	mov    rdx,QWORD PTR [rsp+0x10]
  408c99:	call   401050 <strncmp@plt>
  408c9e:	test   eax,eax
  408ca0:	jne    408c70 <strstr@plt+0x7aa0>
  408ca2:	mov    r15d,0x1
  408ca8:	mov    ebx,r13d
  408cab:	mov    rdi,QWORD PTR [rsp+0x8]
  408cb0:	mov    rsi,rbp
  408cb3:	call   401100 <strcmp@plt>
  408cb8:	test   eax,eax
  408cba:	je     408cd6 <strstr@plt+0x7b06>
  408cbc:	mov    eax,r15d
  408cbf:	lea    rcx,[rip+0x93ba]        # 412080 <strstr@plt+0x10eb0>
  408cc6:	mov    rdi,QWORD PTR [rcx+rax*8]
  408cca:	inc    ebx
  408ccc:	inc    r15d
  408ccf:	test   rdi,rdi
  408cd2:	jne    408cb0 <strstr@plt+0x7ae0>
  408cd4:	jmp    408c70 <strstr@plt+0x7aa0>
  408cd6:	mov    eax,ebx
  408cd8:	add    rsp,0x28
  408cdc:	pop    rbx
  408cdd:	pop    r12
  408cdf:	pop    r13
  408ce1:	pop    r14
  408ce3:	pop    r15
  408ce5:	pop    rbp
  408ce6:	ret    
  408ce7:	mov    rax,QWORD PTR [rip+0xa302]        # 412ff0 <strstr@plt+0x11e20>
  408cee:	mov    rdi,QWORD PTR [rax]
  408cf1:	mov    ecx,DWORD PTR [rip+0xc599]        # 415290 <strstr@plt+0x140c0>
  408cf7:	lea    rsi,[rip+0x696d]        # 40f66b <strstr@plt+0xe49b>
  408cfe:	mov    rdx,r14
  408d01:	xor    eax,eax
  408d03:	call   401120 <fprintf@plt>
  408d08:	mov    edi,0x1
  408d0d:	call   4011a0 <exit@plt>
  408d12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d1c:	nop    DWORD PTR [rax+0x0]
  408d20:	endbr64 
  408d24:	push   r15
  408d26:	lea    r15,[rip+0x8d53]        # 411a80 <strstr@plt+0x108b0>
  408d2d:	push   r14
  408d2f:	mov    r14,rdx
  408d32:	push   r13
  408d34:	mov    r13,rsi
  408d37:	push   r12
  408d39:	mov    r12d,edi
  408d3c:	push   rbp
  408d3d:	lea    rbp,[rip+0x8d44]        # 411a88 <strstr@plt+0x108b8>
  408d44:	push   rbx
  408d45:	sub    rbp,r15
  408d48:	sub    rsp,0x8
  408d4c:	call   401000 <free@plt-0x30>
  408d51:	sar    rbp,0x3
  408d55:	je     408d76 <strstr@plt+0x7ba6>
  408d57:	xor    ebx,ebx
  408d59:	nop    DWORD PTR [rax+0x0]
  408d60:	mov    rdx,r14
  408d63:	mov    rsi,r13
  408d66:	mov    edi,r12d
  408d69:	call   QWORD PTR [r15+rbx*8]
  408d6d:	add    rbx,0x1
  408d71:	cmp    rbp,rbx
  408d74:	jne    408d60 <strstr@plt+0x7b90>
  408d76:	add    rsp,0x8
  408d7a:	pop    rbx
  408d7b:	pop    rbp
  408d7c:	pop    r12
  408d7e:	pop    r13
  408d80:	pop    r14
  408d82:	pop    r15
  408d84:	ret    
  408d85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408d90:	endbr64 
  408d94:	ret    

Disassembly of section .fini:

0000000000408d98 <.fini>:
  408d98:	endbr64 
  408d9c:	sub    rsp,0x8
  408da0:	add    rsp,0x8
  408da4:	ret    
