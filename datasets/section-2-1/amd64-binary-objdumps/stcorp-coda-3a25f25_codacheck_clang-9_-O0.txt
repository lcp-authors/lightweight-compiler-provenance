
../repos/stcorp-coda-3a25f25/codacheck:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe1]        # 403ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <coda_set_option_perform_boundary_checks@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <coda_set_option_perform_boundary_checks@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <coda_set_option_perform_boundary_checks@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <coda_set_option_perform_boundary_checks>
  401036:	push   0x0
  40103b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401040 <coda_set_error@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <coda_set_error>
  401046:	push   0x1
  40104b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401050 <coda_open@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <coda_open>
  401056:	push   0x2
  40105b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401060 <coda_set_option_use_mmap@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <coda_set_option_use_mmap>
  401066:	push   0x3
  40106b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401070 <coda_cursor_print_path@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <coda_cursor_print_path>
  401076:	push   0x4
  40107b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401080 <coda_set_definition_path_conditional@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <coda_set_definition_path_conditional>
  401086:	push   0x5
  40108b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401090 <coda_set_definition_path@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <coda_set_definition_path>
  401096:	push   0x6
  40109b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010a0 <coda_recognize_file@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x2faa]        # 404050 <coda_recognize_file>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010b0 <__assert_fail@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x2fa2]        # 404058 <__assert_fail@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010c0 <coda_type_get_format_name@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x2f9a]        # 404060 <coda_type_get_format_name>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010d0 <coda_done@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x2f92]        # 404068 <coda_done>
  4010d6:	push   0xa
  4010db:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010e0 <strcmp@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x2f8a]        # 404070 <strcmp@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010f0 <coda_product_check@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x2f82]        # 404078 <coda_product_check>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401100 <getchar@plt>:
  401100:	jmp    QWORD PTR [rip+0x2f7a]        # 404080 <getchar@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401110 <fprintf@plt>:
  401110:	jmp    QWORD PTR [rip+0x2f72]        # 404088 <fprintf@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401120 <coda_init@plt>:
  401120:	jmp    QWORD PTR [rip+0x2f6a]        # 404090 <coda_init>
  401126:	push   0xf
  40112b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401130 <coda_set_option_perform_conversions@plt>:
  401130:	jmp    QWORD PTR [rip+0x2f62]        # 404098 <coda_set_option_perform_conversions>
  401136:	push   0x10
  40113b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401140 <fflush@plt>:
  401140:	jmp    QWORD PTR [rip+0x2f5a]        # 4040a0 <fflush@GLIBC_2.2.5>
  401146:	push   0x11
  40114b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401150 <ungetc@plt>:
  401150:	jmp    QWORD PTR [rip+0x2f52]        # 4040a8 <ungetc@GLIBC_2.2.5>
  401156:	push   0x12
  40115b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401160 <coda_close@plt>:
  401160:	jmp    QWORD PTR [rip+0x2f4a]        # 4040b0 <coda_close>
  401166:	push   0x13
  40116b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401170 <coda_errno_to_string@plt>:
  401170:	jmp    QWORD PTR [rip+0x2f42]        # 4040b8 <coda_errno_to_string>
  401176:	push   0x14
  40117b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401180 <exit@plt>:
  401180:	jmp    QWORD PTR [rip+0x2f3a]        # 4040c0 <exit@GLIBC_2.2.5>
  401186:	push   0x15
  40118b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401190 <coda_get_libcoda_version@plt>:
  401190:	jmp    QWORD PTR [rip+0x2f32]        # 4040c8 <coda_get_libcoda_version>
  401196:	push   0x16
  40119b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004011a0 <coda_get_errno@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x2f2a]        # 4040d0 <coda_get_errno>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

Disassembly of section .plt.got:

00000000004011b0 <printf@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x2e2a]        # 403fe0 <printf@GLIBC_2.2.5>
  4011b6:	xchg   ax,ax

Disassembly of section .text:

00000000004011c0 <_start@@Base>:
  4011c0:	endbr64 
  4011c4:	xor    ebp,ebp
  4011c6:	mov    r9,rdx
  4011c9:	pop    rsi
  4011ca:	mov    rdx,rsp
  4011cd:	and    rsp,0xfffffffffffffff0
  4011d1:	push   rax
  4011d2:	push   rsp
  4011d3:	mov    r8,0x401e80
  4011da:	mov    rcx,0x401e10
  4011e1:	mov    rdi,0x4012b0
  4011e8:	call   QWORD PTR [rip+0x2dfa]        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
  4011ee:	hlt    
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	ret    
  4011f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011ff:	nop
  401200:	mov    eax,0x4040e8
  401205:	cmp    rax,0x4040e8
  40120b:	je     401220 <_start@@Base+0x60>
  40120d:	mov    eax,0x0
  401212:	test   rax,rax
  401215:	je     401220 <_start@@Base+0x60>
  401217:	mov    edi,0x4040e8
  40121c:	jmp    rax
  40121e:	xchg   ax,ax
  401220:	ret    
  401221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40122c:	nop    DWORD PTR [rax+0x0]
  401230:	mov    esi,0x4040e8
  401235:	sub    rsi,0x4040e8
  40123c:	mov    rax,rsi
  40123f:	shr    rsi,0x3f
  401243:	sar    rax,0x3
  401247:	add    rsi,rax
  40124a:	sar    rsi,1
  40124d:	je     401260 <_start@@Base+0xa0>
  40124f:	mov    eax,0x0
  401254:	test   rax,rax
  401257:	je     401260 <_start@@Base+0xa0>
  401259:	mov    edi,0x4040e8
  40125e:	jmp    rax
  401260:	ret    
  401261:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40126c:	nop    DWORD PTR [rax+0x0]
  401270:	endbr64 
  401274:	cmp    BYTE PTR [rip+0x2e6d],0x0        # 4040e8 <__bss_start@@Base>
  40127b:	jne    401290 <_start@@Base+0xd0>
  40127d:	push   rbp
  40127e:	mov    rbp,rsp
  401281:	call   401200 <_start@@Base+0x40>
  401286:	mov    BYTE PTR [rip+0x2e5b],0x1        # 4040e8 <__bss_start@@Base>
  40128d:	pop    rbp
  40128e:	ret    
  40128f:	nop
  401290:	ret    
  401291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40129c:	nop    DWORD PTR [rax+0x0]
  4012a0:	endbr64 
  4012a4:	jmp    401230 <_start@@Base+0x70>
  4012a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004012b0 <main@@Base>:
  4012b0:	push   rbp
  4012b1:	mov    rbp,rsp
  4012b4:	sub    rsp,0x450
  4012bb:	lea    rax,[rip+0x2e2a]        # 4040ec <option_require_definition@@Base>
  4012c2:	lea    rcx,[rip+0x2e2f]        # 4040f8 <option_quick@@Base>
  4012c9:	lea    rdx,[rip+0x2e24]        # 4040f4 <option_verbose@@Base>
  4012d0:	mov    DWORD PTR [rbp-0x4],0x0
  4012d7:	mov    DWORD PTR [rbp-0x8],edi
  4012da:	mov    QWORD PTR [rbp-0x10],rsi
  4012de:	mov    DWORD PTR [rbp-0x14],0x0
  4012e5:	mov    DWORD PTR [rdx],0x0
  4012eb:	mov    DWORD PTR [rcx],0x0
  4012f1:	mov    DWORD PTR [rbp-0x18],0x1
  4012f8:	mov    DWORD PTR [rax],0x0
  4012fe:	cmp    DWORD PTR [rbp-0x8],0x1
  401302:	je     401342 <main@@Base+0x92>
  401308:	mov    rax,QWORD PTR [rbp-0x10]
  40130c:	mov    rdi,QWORD PTR [rax+0x8]
  401310:	lea    rsi,[rip+0xced]        # 402004 <_IO_stdin_used@@Base+0x4>
  401317:	call   4010e0 <strcmp@plt>
  40131c:	cmp    eax,0x0
  40131f:	je     401342 <main@@Base+0x92>
  401325:	mov    rax,QWORD PTR [rbp-0x10]
  401329:	mov    rdi,QWORD PTR [rax+0x8]
  40132d:	lea    rsi,[rip+0xcd3]        # 402007 <_IO_stdin_used@@Base+0x7>
  401334:	call   4010e0 <strcmp@plt>
  401339:	cmp    eax,0x0
  40133c:	jne    40134e <main@@Base+0x9e>
  401342:	call   401af0 <main@@Base+0x840>
  401347:	xor    edi,edi
  401349:	call   401180 <exit@plt>
  40134e:	mov    rax,QWORD PTR [rbp-0x10]
  401352:	mov    rdi,QWORD PTR [rax+0x8]
  401356:	lea    rsi,[rip+0xcb1]        # 40200e <_IO_stdin_used@@Base+0xe>
  40135d:	call   4010e0 <strcmp@plt>
  401362:	cmp    eax,0x0
  401365:	je     401388 <main@@Base+0xd8>
  40136b:	mov    rax,QWORD PTR [rbp-0x10]
  40136f:	mov    rdi,QWORD PTR [rax+0x8]
  401373:	lea    rsi,[rip+0xc97]        # 402011 <_IO_stdin_used@@Base+0x11>
  40137a:	call   4010e0 <strcmp@plt>
  40137f:	cmp    eax,0x0
  401382:	jne    401394 <main@@Base+0xe4>
  401388:	call   401d40 <main@@Base+0xa90>
  40138d:	xor    edi,edi
  40138f:	call   401180 <exit@plt>
  401394:	mov    DWORD PTR [rbp-0x1c],0x1
  40139b:	mov    eax,DWORD PTR [rbp-0x1c]
  40139e:	add    eax,0x1
  4013a1:	cmp    eax,DWORD PTR [rbp-0x8]
  4013a4:	jge    4013ef <main@@Base+0x13f>
  4013aa:	mov    rax,QWORD PTR [rbp-0x10]
  4013ae:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4013b2:	mov    rdi,QWORD PTR [rax+rcx*8]
  4013b6:	lea    rsi,[rip+0xc5e]        # 40201b <_IO_stdin_used@@Base+0x1b>
  4013bd:	call   4010e0 <strcmp@plt>
  4013c2:	cmp    eax,0x0
  4013c5:	jne    4013ef <main@@Base+0x13f>
  4013cb:	mov    rax,QWORD PTR [rbp-0x10]
  4013cf:	mov    ecx,DWORD PTR [rbp-0x1c]
  4013d2:	add    ecx,0x1
  4013d5:	movsxd rdx,ecx
  4013d8:	mov    rdi,QWORD PTR [rax+rdx*8]
  4013dc:	call   401090 <coda_set_definition_path@plt>
  4013e1:	mov    ecx,DWORD PTR [rbp-0x1c]
  4013e4:	add    ecx,0x2
  4013e7:	mov    DWORD PTR [rbp-0x1c],ecx
  4013ea:	jmp    401461 <main@@Base+0x1b1>
  4013ef:	xor    eax,eax
  4013f1:	mov    esi,eax
  4013f3:	lea    rcx,[rip+0xc24]        # 40201e <_IO_stdin_used@@Base+0x1e>
  4013fa:	mov    QWORD PTR [rbp-0x28],rcx
  4013fe:	mov    rcx,QWORD PTR [rbp-0x10]
  401402:	mov    rdi,QWORD PTR [rcx]
  401405:	mov    rdx,QWORD PTR [rbp-0x28]
  401409:	call   401080 <coda_set_definition_path_conditional@plt>
  40140e:	cmp    eax,0x0
  401411:	je     40145c <main@@Base+0x1ac>
  401417:	mov    rax,QWORD PTR [rip+0x2bda]        # 403ff8 <stderr@GLIBC_2.2.5>
  40141e:	mov    rdi,QWORD PTR [rax]
  401421:	mov    QWORD PTR [rbp-0x428],rdi
  401428:	call   4011a0 <coda_get_errno@plt>
  40142d:	mov    edi,DWORD PTR [rax]
  40142f:	call   401170 <coda_errno_to_string@plt>
  401434:	mov    rdi,QWORD PTR [rbp-0x428]
  40143b:	lea    rsi,[rip+0x1318]        # 40275a <_IO_stdin_used@@Base+0x75a>
  401442:	mov    rdx,rax
  401445:	mov    al,0x0
  401447:	call   401110 <fprintf@plt>
  40144c:	mov    edi,0x1
  401451:	mov    DWORD PTR [rbp-0x42c],eax
  401457:	call   401180 <exit@plt>
  40145c:	jmp    401461 <main@@Base+0x1b1>
  401461:	jmp    401466 <main@@Base+0x1b6>
  401466:	mov    eax,DWORD PTR [rbp-0x1c]
  401469:	cmp    eax,DWORD PTR [rbp-0x8]
  40146c:	jge    401640 <main@@Base+0x390>
  401472:	mov    rax,QWORD PTR [rbp-0x10]
  401476:	movsxd rcx,DWORD PTR [rbp-0x1c]
  40147a:	mov    rdi,QWORD PTR [rax+rcx*8]
  40147e:	lea    rsi,[rip+0xbb3]        # 402038 <_IO_stdin_used@@Base+0x38>
  401485:	call   4010e0 <strcmp@plt>
  40148a:	cmp    eax,0x0
  40148d:	je     4014b4 <main@@Base+0x204>
  401493:	mov    rax,QWORD PTR [rbp-0x10]
  401497:	movsxd rcx,DWORD PTR [rbp-0x1c]
  40149b:	mov    rdi,QWORD PTR [rax+rcx*8]
  40149f:	lea    rsi,[rip+0xb95]        # 40203b <_IO_stdin_used@@Base+0x3b>
  4014a6:	call   4010e0 <strcmp@plt>
  4014ab:	cmp    eax,0x0
  4014ae:	jne    4014c6 <main@@Base+0x216>
  4014b4:	lea    rax,[rip+0x2c39]        # 4040f4 <option_verbose@@Base>
  4014bb:	mov    DWORD PTR [rax],0x1
  4014c1:	jmp    401632 <main@@Base+0x382>
  4014c6:	mov    rax,QWORD PTR [rbp-0x10]
  4014ca:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4014ce:	mov    rdi,QWORD PTR [rax+rcx*8]
  4014d2:	lea    rsi,[rip+0xb6c]        # 402045 <_IO_stdin_used@@Base+0x45>
  4014d9:	call   4010e0 <strcmp@plt>
  4014de:	cmp    eax,0x0
  4014e1:	je     401508 <main@@Base+0x258>
  4014e7:	mov    rax,QWORD PTR [rbp-0x10]
  4014eb:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4014ef:	mov    rdi,QWORD PTR [rax+rcx*8]
  4014f3:	lea    rsi,[rip+0xb4e]        # 402048 <_IO_stdin_used@@Base+0x48>
  4014fa:	call   4010e0 <strcmp@plt>
  4014ff:	cmp    eax,0x0
  401502:	jne    40151a <main@@Base+0x26a>
  401508:	lea    rax,[rip+0x2be9]        # 4040f8 <option_quick@@Base>
  40150f:	mov    DWORD PTR [rax],0x1
  401515:	jmp    40162d <main@@Base+0x37d>
  40151a:	mov    rax,QWORD PTR [rbp-0x10]
  40151e:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401522:	mov    rdi,QWORD PTR [rax+rcx*8]
  401526:	lea    rsi,[rip+0xb23]        # 402050 <_IO_stdin_used@@Base+0x50>
  40152d:	call   4010e0 <strcmp@plt>
  401532:	cmp    eax,0x0
  401535:	je     40155c <main@@Base+0x2ac>
  40153b:	mov    rax,QWORD PTR [rbp-0x10]
  40153f:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401543:	mov    rdi,QWORD PTR [rax+rcx*8]
  401547:	lea    rsi,[rip+0xb05]        # 402053 <_IO_stdin_used@@Base+0x53>
  40154e:	call   4010e0 <strcmp@plt>
  401553:	cmp    eax,0x0
  401556:	jne    40156e <main@@Base+0x2be>
  40155c:	lea    rax,[rip+0x2b89]        # 4040ec <option_require_definition@@Base>
  401563:	mov    DWORD PTR [rax],0x1
  401569:	jmp    401628 <main@@Base+0x378>
  40156e:	mov    rax,QWORD PTR [rbp-0x10]
  401572:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401576:	mov    rdi,QWORD PTR [rax+rcx*8]
  40157a:	lea    rsi,[rip+0xadf]        # 402060 <_IO_stdin_used@@Base+0x60>
  401581:	call   4010e0 <strcmp@plt>
  401586:	cmp    eax,0x0
  401589:	jne    40159b <main@@Base+0x2eb>
  40158f:	mov    DWORD PTR [rbp-0x18],0x0
  401596:	jmp    401623 <main@@Base+0x373>
  40159b:	mov    rax,QWORD PTR [rbp-0x10]
  40159f:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4015a3:	mov    rdi,QWORD PTR [rax+rcx*8]
  4015a7:	lea    rsi,[rip+0xabc]        # 40206a <_IO_stdin_used@@Base+0x6a>
  4015ae:	call   4010e0 <strcmp@plt>
  4015b3:	cmp    eax,0x0
  4015b6:	jne    4015d9 <main@@Base+0x329>
  4015bc:	mov    eax,DWORD PTR [rbp-0x1c]
  4015bf:	mov    ecx,DWORD PTR [rbp-0x8]
  4015c2:	sub    ecx,0x1
  4015c5:	cmp    eax,ecx
  4015c7:	jne    4015d9 <main@@Base+0x329>
  4015cd:	mov    DWORD PTR [rbp-0x14],0x1
  4015d4:	jmp    401640 <main@@Base+0x390>
  4015d9:	mov    rax,QWORD PTR [rbp-0x10]
  4015dd:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4015e1:	mov    rax,QWORD PTR [rax+rcx*8]
  4015e5:	movsx  edx,BYTE PTR [rax]
  4015e8:	cmp    edx,0x2d
  4015eb:	je     4015f6 <main@@Base+0x346>
  4015f1:	jmp    401640 <main@@Base+0x390>
  4015f6:	mov    rax,QWORD PTR [rip+0x29fb]        # 403ff8 <stderr@GLIBC_2.2.5>
  4015fd:	mov    rdi,QWORD PTR [rax]
  401600:	lea    rsi,[rip+0xa65]        # 40206c <_IO_stdin_used@@Base+0x6c>
  401607:	mov    al,0x0
  401609:	call   401110 <fprintf@plt>
  40160e:	mov    DWORD PTR [rbp-0x430],eax
  401614:	call   401af0 <main@@Base+0x840>
  401619:	mov    edi,0x1
  40161e:	call   401180 <exit@plt>
  401623:	jmp    401628 <main@@Base+0x378>
  401628:	jmp    40162d <main@@Base+0x37d>
  40162d:	jmp    401632 <main@@Base+0x382>
  401632:	mov    eax,DWORD PTR [rbp-0x1c]
  401635:	add    eax,0x1
  401638:	mov    DWORD PTR [rbp-0x1c],eax
  40163b:	jmp    401466 <main@@Base+0x1b6>
  401640:	call   401120 <coda_init@plt>
  401645:	cmp    eax,0x0
  401648:	je     401693 <main@@Base+0x3e3>
  40164e:	mov    rax,QWORD PTR [rip+0x29a3]        # 403ff8 <stderr@GLIBC_2.2.5>
  401655:	mov    rdi,QWORD PTR [rax]
  401658:	mov    QWORD PTR [rbp-0x438],rdi
  40165f:	call   4011a0 <coda_get_errno@plt>
  401664:	mov    edi,DWORD PTR [rax]
  401666:	call   401170 <coda_errno_to_string@plt>
  40166b:	mov    rdi,QWORD PTR [rbp-0x438]
  401672:	lea    rsi,[rip+0x10e1]        # 40275a <_IO_stdin_used@@Base+0x75a>
  401679:	mov    rdx,rax
  40167c:	mov    al,0x0
  40167e:	call   401110 <fprintf@plt>
  401683:	mov    edi,0x1
  401688:	mov    DWORD PTR [rbp-0x43c],eax
  40168e:	call   401180 <exit@plt>
  401693:	xor    edi,edi
  401695:	call   401030 <coda_set_option_perform_boundary_checks@plt>
  40169a:	xor    edi,edi
  40169c:	mov    DWORD PTR [rbp-0x440],eax
  4016a2:	call   401130 <coda_set_option_perform_conversions@plt>
  4016a7:	mov    edi,DWORD PTR [rbp-0x18]
  4016aa:	mov    DWORD PTR [rbp-0x444],eax
  4016b0:	call   401060 <coda_set_option_use_mmap@plt>
  4016b5:	cmp    DWORD PTR [rbp-0x14],0x0
  4016b9:	je     4017fb <main@@Base+0x54b>
  4016bf:	jmp    4016c4 <main@@Base+0x414>
  4016c4:	mov    DWORD PTR [rbp-0x418],0x0
  4016ce:	call   401100 <getchar@plt>
  4016d3:	mov    BYTE PTR [rbp-0x411],al
  4016d9:	movsx  ecx,BYTE PTR [rbp-0x411]
  4016e0:	cmp    ecx,0xd
  4016e3:	jne    40171f <main@@Base+0x46f>
  4016e9:	call   401100 <getchar@plt>
  4016ee:	mov    BYTE PTR [rbp-0x419],al
  4016f4:	movsx  ecx,BYTE PTR [rbp-0x419]
  4016fb:	cmp    ecx,0xa
  4016fe:	je     40171a <main@@Base+0x46a>
  401704:	mov    rax,QWORD PTR [rip+0x28cd]        # 403fd8 <stdin@GLIBC_2.2.5>
  40170b:	movsx  edi,BYTE PTR [rbp-0x419]
  401712:	mov    rsi,QWORD PTR [rax]
  401715:	call   401150 <ungetc@plt>
  40171a:	jmp    40171f <main@@Base+0x46f>
  40171f:	movsx  eax,BYTE PTR [rbp-0x411]
  401726:	cmp    eax,0xffffffff
  401729:	je     40174f <main@@Base+0x49f>
  40172f:	movsx  eax,BYTE PTR [rbp-0x411]
  401736:	cmp    eax,0xa
  401739:	je     40174f <main@@Base+0x49f>
  40173f:	movsx  eax,BYTE PTR [rbp-0x411]
  401746:	cmp    eax,0xd
  401749:	jne    401763 <main@@Base+0x4b3>
  40174f:	movsxd rax,DWORD PTR [rbp-0x418]
  401756:	mov    BYTE PTR [rbp+rax*1-0x410],0x0
  40175e:	jmp    4017bf <main@@Base+0x50f>
  401763:	mov    al,BYTE PTR [rbp-0x411]
  401769:	movsxd rcx,DWORD PTR [rbp-0x418]
  401770:	mov    BYTE PTR [rbp+rcx*1-0x410],al
  401777:	mov    edx,DWORD PTR [rbp-0x418]
  40177d:	add    edx,0x1
  401780:	mov    DWORD PTR [rbp-0x418],edx
  401786:	cmp    DWORD PTR [rbp-0x418],0x3e8
  401790:	jge    40179b <main@@Base+0x4eb>
  401796:	jmp    4017ba <main@@Base+0x50a>
  40179b:	lea    rdi,[rip+0x8e4]        # 402086 <_IO_stdin_used@@Base+0x86>
  4017a2:	lea    rsi,[rip+0x8e6]        # 40208f <_IO_stdin_used@@Base+0x8f>
  4017a9:	mov    edx,0x13c
  4017ae:	lea    rcx,[rip+0x93b]        # 4020f0 <_IO_stdin_used@@Base+0xf0>
  4017b5:	call   4010b0 <__assert_fail@plt>
  4017ba:	jmp    4016ce <main@@Base+0x41e>
  4017bf:	cmp    DWORD PTR [rbp-0x418],0x0
  4017c6:	jle    4017e1 <main@@Base+0x531>
  4017cc:	lea    rdi,[rbp-0x410]
  4017d3:	call   401870 <main@@Base+0x5c0>
  4017d8:	xor    eax,eax
  4017da:	mov    edi,eax
  4017dc:	call   401140 <fflush@plt>
  4017e1:	jmp    4017e6 <main@@Base+0x536>
  4017e6:	movsx  eax,BYTE PTR [rbp-0x411]
  4017ed:	cmp    eax,0xffffffff
  4017f0:	jne    4016c4 <main@@Base+0x414>
  4017f6:	jmp    401839 <main@@Base+0x589>
  4017fb:	jmp    401800 <main@@Base+0x550>
  401800:	mov    eax,DWORD PTR [rbp-0x1c]
  401803:	cmp    eax,DWORD PTR [rbp-0x8]
  401806:	jge    401834 <main@@Base+0x584>
  40180c:	mov    rax,QWORD PTR [rbp-0x10]
  401810:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401814:	mov    rdi,QWORD PTR [rax+rcx*8]
  401818:	call   401870 <main@@Base+0x5c0>
  40181d:	xor    edx,edx
  40181f:	mov    edi,edx
  401821:	call   401140 <fflush@plt>
  401826:	mov    edx,DWORD PTR [rbp-0x1c]
  401829:	add    edx,0x1
  40182c:	mov    DWORD PTR [rbp-0x1c],edx
  40182f:	jmp    401800 <main@@Base+0x550>
  401834:	jmp    401839 <main@@Base+0x589>
  401839:	call   4010d0 <coda_done@plt>
  40183e:	lea    rax,[rip+0x28ab]        # 4040f0 <found_errors@@Base>
  401845:	cmp    DWORD PTR [rax],0x0
  401848:	je     401858 <main@@Base+0x5a8>
  40184e:	mov    edi,0x1
  401853:	call   401180 <exit@plt>
  401858:	xor    eax,eax
  40185a:	add    rsp,0x450
  401861:	pop    rbp
  401862:	ret    
  401863:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40186d:	nop    DWORD PTR [rax]
  401870:	push   rbp
  401871:	mov    rbp,rsp
  401874:	sub    rsp,0x50
  401878:	mov    QWORD PTR [rbp-0x8],rdi
  40187c:	mov    rsi,QWORD PTR [rbp-0x8]
  401880:	lea    rdi,[rip+0xeda]        # 402761 <_IO_stdin_used@@Base+0x761>
  401887:	mov    al,0x0
  401889:	call   4011b0 <printf@plt>
  40188e:	mov    rdi,QWORD PTR [rbp-0x8]
  401892:	lea    rsi,[rbp-0x20]
  401896:	lea    rdx,[rbp-0x14]
  40189a:	lea    rcx,[rbp-0x28]
  40189e:	lea    r8,[rbp-0x30]
  4018a2:	lea    r9,[rbp-0x34]
  4018a6:	mov    DWORD PTR [rbp-0x3c],eax
  4018a9:	call   4010a0 <coda_recognize_file@plt>
  4018ae:	cmp    eax,0x0
  4018b1:	je     4018f6 <main@@Base+0x646>
  4018b7:	call   4011a0 <coda_get_errno@plt>
  4018bc:	mov    edi,DWORD PTR [rax]
  4018be:	call   401170 <coda_errno_to_string@plt>
  4018c3:	lea    rdi,[rip+0xe34]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  4018ca:	mov    rsi,rax
  4018cd:	mov    al,0x0
  4018cf:	call   4011b0 <printf@plt>
  4018d4:	xor    edi,edi
  4018d6:	xor    ecx,ecx
  4018d8:	mov    esi,ecx
  4018da:	mov    DWORD PTR [rbp-0x40],eax
  4018dd:	mov    al,0x0
  4018df:	call   401040 <coda_set_error@plt>
  4018e4:	lea    rdx,[rip+0x2805]        # 4040f0 <found_errors@@Base>
  4018eb:	mov    DWORD PTR [rdx],0x1
  4018f1:	jmp    401ae8 <main@@Base+0x838>
  4018f6:	lea    rax,[rip+0x27ef]        # 4040ec <option_require_definition@@Base>
  4018fd:	cmp    DWORD PTR [rax],0x0
  401900:	je     40193c <main@@Base+0x68c>
  401906:	cmp    QWORD PTR [rbp-0x28],0x0
  40190b:	je     40191c <main@@Base+0x66c>
  401911:	cmp    QWORD PTR [rbp-0x30],0x0
  401916:	jne    40193c <main@@Base+0x68c>
  40191c:	lea    rdi,[rip+0xde9]        # 40270c <_IO_stdin_used@@Base+0x70c>
  401923:	mov    al,0x0
  401925:	call   4011b0 <printf@plt>
  40192a:	lea    rcx,[rip+0x27bf]        # 4040f0 <found_errors@@Base>
  401931:	mov    DWORD PTR [rcx],0x1
  401937:	jmp    401ae8 <main@@Base+0x838>
  40193c:	lea    rax,[rip+0x27b1]        # 4040f4 <option_verbose@@Base>
  401943:	cmp    DWORD PTR [rax],0x0
  401946:	je     4019a2 <main@@Base+0x6f2>
  40194c:	mov    edi,DWORD PTR [rbp-0x14]
  40194f:	call   4010c0 <coda_type_get_format_name@plt>
  401954:	lea    rdi,[rip+0xddd]        # 402738 <_IO_stdin_used@@Base+0x738>
  40195b:	mov    rsi,rax
  40195e:	mov    al,0x0
  401960:	call   4011b0 <printf@plt>
  401965:	cmp    QWORD PTR [rbp-0x28],0x0
  40196a:	je     401994 <main@@Base+0x6e4>
  401970:	cmp    QWORD PTR [rbp-0x30],0x0
  401975:	je     401994 <main@@Base+0x6e4>
  40197b:	mov    rsi,QWORD PTR [rbp-0x28]
  40197f:	mov    rdx,QWORD PTR [rbp-0x30]
  401983:	mov    ecx,DWORD PTR [rbp-0x34]
  401986:	lea    rdi,[rip+0xdc0]        # 40274d <_IO_stdin_used@@Base+0x74d>
  40198d:	mov    al,0x0
  40198f:	call   4011b0 <printf@plt>
  401994:	lea    rdi,[rip+0xd9b]        # 402736 <_IO_stdin_used@@Base+0x736>
  40199b:	mov    al,0x0
  40199d:	call   4011b0 <printf@plt>
  4019a2:	mov    rdi,QWORD PTR [rbp-0x8]
  4019a6:	lea    rsi,[rbp-0x10]
  4019aa:	call   401050 <coda_open@plt>
  4019af:	mov    DWORD PTR [rbp-0x38],eax
  4019b2:	cmp    DWORD PTR [rbp-0x38],0x0
  4019b6:	je     4019ee <main@@Base+0x73e>
  4019bc:	call   4011a0 <coda_get_errno@plt>
  4019c1:	cmp    DWORD PTR [rax],0xffffffeb
  4019c4:	jne    4019ee <main@@Base+0x73e>
  4019ca:	xor    edi,edi
  4019cc:	call   401060 <coda_set_option_use_mmap@plt>
  4019d1:	mov    rdi,QWORD PTR [rbp-0x8]
  4019d5:	lea    rsi,[rbp-0x10]
  4019d9:	mov    DWORD PTR [rbp-0x44],eax
  4019dc:	call   401050 <coda_open@plt>
  4019e1:	mov    DWORD PTR [rbp-0x38],eax
  4019e4:	mov    edi,0x1
  4019e9:	call   401060 <coda_set_option_use_mmap@plt>
  4019ee:	cmp    DWORD PTR [rbp-0x38],0x0
  4019f2:	je     401a27 <main@@Base+0x777>
  4019f8:	call   4011a0 <coda_get_errno@plt>
  4019fd:	mov    edi,DWORD PTR [rax]
  4019ff:	call   401170 <coda_errno_to_string@plt>
  401a04:	lea    rdi,[rip+0xcf3]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  401a0b:	mov    rsi,rax
  401a0e:	mov    al,0x0
  401a10:	call   4011b0 <printf@plt>
  401a15:	lea    rcx,[rip+0x26d4]        # 4040f0 <found_errors@@Base>
  401a1c:	mov    DWORD PTR [rcx],0x1
  401a22:	jmp    401ae8 <main@@Base+0x838>
  401a27:	xor    eax,eax
  401a29:	mov    ecx,eax
  401a2b:	lea    rdx,[rip+0x26c6]        # 4040f8 <option_quick@@Base>
  401a32:	mov    rdi,QWORD PTR [rbp-0x10]
  401a36:	cmp    DWORD PTR [rdx],0x0
  401a39:	setne  sil
  401a3d:	xor    sil,0xff
  401a41:	and    sil,0x1
  401a45:	movzx  esi,sil
  401a49:	lea    rdx,[rip+0x340]        # 401d90 <main@@Base+0xae0>
  401a50:	call   4010f0 <coda_product_check@plt>
  401a55:	cmp    eax,0x0
  401a58:	je     401a99 <main@@Base+0x7e9>
  401a5e:	call   4011a0 <coda_get_errno@plt>
  401a63:	mov    edi,DWORD PTR [rax]
  401a65:	call   401170 <coda_errno_to_string@plt>
  401a6a:	lea    rdi,[rip+0xc8d]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  401a71:	mov    rsi,rax
  401a74:	mov    al,0x0
  401a76:	call   4011b0 <printf@plt>
  401a7b:	lea    rcx,[rip+0x266e]        # 4040f0 <found_errors@@Base>
  401a82:	mov    DWORD PTR [rcx],0x1
  401a88:	mov    rdi,QWORD PTR [rbp-0x10]
  401a8c:	mov    DWORD PTR [rbp-0x48],eax
  401a8f:	call   401160 <coda_close@plt>
  401a94:	jmp    401ae8 <main@@Base+0x838>
  401a99:	mov    rdi,QWORD PTR [rbp-0x10]
  401a9d:	call   401160 <coda_close@plt>
  401aa2:	cmp    eax,0x0
  401aa5:	je     401ada <main@@Base+0x82a>
  401aab:	call   4011a0 <coda_get_errno@plt>
  401ab0:	mov    edi,DWORD PTR [rax]
  401ab2:	call   401170 <coda_errno_to_string@plt>
  401ab7:	lea    rdi,[rip+0xc9a]        # 402758 <_IO_stdin_used@@Base+0x758>
  401abe:	mov    rsi,rax
  401ac1:	mov    al,0x0
  401ac3:	call   4011b0 <printf@plt>
  401ac8:	lea    rcx,[rip+0x2621]        # 4040f0 <found_errors@@Base>
  401acf:	mov    DWORD PTR [rcx],0x1
  401ad5:	jmp    401ae8 <main@@Base+0x838>
  401ada:	lea    rdi,[rip+0xc55]        # 402736 <_IO_stdin_used@@Base+0x736>
  401ae1:	mov    al,0x0
  401ae3:	call   4011b0 <printf@plt>
  401ae8:	add    rsp,0x50
  401aec:	pop    rbp
  401aed:	ret    
  401aee:	xchg   ax,ax
  401af0:	push   rbp
  401af1:	mov    rbp,rsp
  401af4:	sub    rsp,0x80
  401afb:	lea    rdi,[rip+0x605]        # 402107 <_IO_stdin_used@@Base+0x107>
  401b02:	mov    al,0x0
  401b04:	call   4011b0 <printf@plt>
  401b09:	lea    rdi,[rip+0x5ff]        # 40210f <_IO_stdin_used@@Base+0x10f>
  401b10:	mov    DWORD PTR [rbp-0x4],eax
  401b13:	mov    al,0x0
  401b15:	call   4011b0 <printf@plt>
  401b1a:	lea    rdi,[rip+0x625]        # 402146 <_IO_stdin_used@@Base+0x146>
  401b21:	mov    DWORD PTR [rbp-0x8],eax
  401b24:	mov    al,0x0
  401b26:	call   4011b0 <printf@plt>
  401b2b:	lea    rdi,[rip+0x65d]        # 40218f <_IO_stdin_used@@Base+0x18f>
  401b32:	mov    DWORD PTR [rbp-0xc],eax
  401b35:	mov    al,0x0
  401b37:	call   4011b0 <printf@plt>
  401b3c:	lea    rdi,[rip+0x65e]        # 4021a1 <_IO_stdin_used@@Base+0x1a1>
  401b43:	mov    DWORD PTR [rbp-0x10],eax
  401b46:	mov    al,0x0
  401b48:	call   4011b0 <printf@plt>
  401b4d:	lea    rdi,[rip+0x66b]        # 4021bf <_IO_stdin_used@@Base+0x1bf>
  401b54:	mov    DWORD PTR [rbp-0x14],eax
  401b57:	mov    al,0x0
  401b59:	call   4011b0 <printf@plt>
  401b5e:	lea    rdi,[rip+0x6a8]        # 40220d <_IO_stdin_used@@Base+0x20d>
  401b65:	mov    DWORD PTR [rbp-0x18],eax
  401b68:	mov    al,0x0
  401b6a:	call   4011b0 <printf@plt>
  401b6f:	lea    rdi,[rip+0x6dd]        # 402253 <_IO_stdin_used@@Base+0x253>
  401b76:	mov    DWORD PTR [rbp-0x1c],eax
  401b79:	mov    al,0x0
  401b7b:	call   4011b0 <printf@plt>
  401b80:	lea    rdi,[rip+0x719]        # 4022a0 <_IO_stdin_used@@Base+0x2a0>
  401b87:	mov    DWORD PTR [rbp-0x20],eax
  401b8a:	mov    al,0x0
  401b8c:	call   4011b0 <printf@plt>
  401b91:	lea    rdi,[rip+0x721]        # 4022b9 <_IO_stdin_used@@Base+0x2b9>
  401b98:	mov    DWORD PTR [rbp-0x24],eax
  401b9b:	mov    al,0x0
  401b9d:	call   4011b0 <printf@plt>
  401ba2:	lea    rdi,[rip+0x74f]        # 4022f8 <_IO_stdin_used@@Base+0x2f8>
  401ba9:	mov    DWORD PTR [rbp-0x28],eax
  401bac:	mov    al,0x0
  401bae:	call   4011b0 <printf@plt>
  401bb3:	lea    rdi,[rip+0x776]        # 402330 <_IO_stdin_used@@Base+0x330>
  401bba:	mov    DWORD PTR [rbp-0x2c],eax
  401bbd:	mov    al,0x0
  401bbf:	call   4011b0 <printf@plt>
  401bc4:	lea    rdi,[rip+0x780]        # 40234b <_IO_stdin_used@@Base+0x34b>
  401bcb:	mov    DWORD PTR [rbp-0x30],eax
  401bce:	mov    al,0x0
  401bd0:	call   4011b0 <printf@plt>
  401bd5:	lea    rdi,[rip+0x7b5]        # 402391 <_IO_stdin_used@@Base+0x391>
  401bdc:	mov    DWORD PTR [rbp-0x34],eax
  401bdf:	mov    al,0x0
  401be1:	call   4011b0 <printf@plt>
  401be6:	lea    rdi,[rip+0x7bb]        # 4023a8 <_IO_stdin_used@@Base+0x3a8>
  401bed:	mov    DWORD PTR [rbp-0x38],eax
  401bf0:	mov    al,0x0
  401bf2:	call   4011b0 <printf@plt>
  401bf7:	lea    rdi,[rip+0xb38]        # 402736 <_IO_stdin_used@@Base+0x736>
  401bfe:	mov    DWORD PTR [rbp-0x3c],eax
  401c01:	mov    al,0x0
  401c03:	call   4011b0 <printf@plt>
  401c08:	lea    rdi,[rip+0x7d9]        # 4023e8 <_IO_stdin_used@@Base+0x3e8>
  401c0f:	mov    DWORD PTR [rbp-0x40],eax
  401c12:	mov    al,0x0
  401c14:	call   4011b0 <printf@plt>
  401c19:	lea    rdi,[rip+0x817]        # 402437 <_IO_stdin_used@@Base+0x437>
  401c20:	mov    DWORD PTR [rbp-0x44],eax
  401c23:	mov    al,0x0
  401c25:	call   4011b0 <printf@plt>
  401c2a:	lea    rdi,[rip+0xb05]        # 402736 <_IO_stdin_used@@Base+0x736>
  401c31:	mov    DWORD PTR [rbp-0x48],eax
  401c34:	mov    al,0x0
  401c36:	call   4011b0 <printf@plt>
  401c3b:	lea    rdi,[rip+0x812]        # 402454 <_IO_stdin_used@@Base+0x454>
  401c42:	mov    DWORD PTR [rbp-0x4c],eax
  401c45:	mov    al,0x0
  401c47:	call   4011b0 <printf@plt>
  401c4c:	lea    rdi,[rip+0x81b]        # 40246e <_IO_stdin_used@@Base+0x46e>
  401c53:	mov    DWORD PTR [rbp-0x50],eax
  401c56:	mov    al,0x0
  401c58:	call   4011b0 <printf@plt>
  401c5d:	lea    rdi,[rip+0xad2]        # 402736 <_IO_stdin_used@@Base+0x736>
  401c64:	mov    DWORD PTR [rbp-0x54],eax
  401c67:	mov    al,0x0
  401c69:	call   4011b0 <printf@plt>
  401c6e:	lea    rdi,[rip+0x818]        # 40248d <_IO_stdin_used@@Base+0x48d>
  401c75:	mov    DWORD PTR [rbp-0x58],eax
  401c78:	mov    al,0x0
  401c7a:	call   4011b0 <printf@plt>
  401c7f:	lea    rdi,[rip+0x824]        # 4024aa <_IO_stdin_used@@Base+0x4aa>
  401c86:	mov    DWORD PTR [rbp-0x5c],eax
  401c89:	mov    al,0x0
  401c8b:	call   4011b0 <printf@plt>
  401c90:	lea    rdi,[rip+0xa9f]        # 402736 <_IO_stdin_used@@Base+0x736>
  401c97:	mov    DWORD PTR [rbp-0x60],eax
  401c9a:	mov    al,0x0
  401c9c:	call   4011b0 <printf@plt>
  401ca1:	lea    rdi,[rip+0x835]        # 4024dd <_IO_stdin_used@@Base+0x4dd>
  401ca8:	mov    DWORD PTR [rbp-0x64],eax
  401cab:	mov    al,0x0
  401cad:	call   4011b0 <printf@plt>
  401cb2:	lea    rdi,[rip+0x873]        # 40252c <_IO_stdin_used@@Base+0x52c>
  401cb9:	mov    DWORD PTR [rbp-0x68],eax
  401cbc:	mov    al,0x0
  401cbe:	call   4011b0 <printf@plt>
  401cc3:	lea    rdi,[rip+0x8ac]        # 402576 <_IO_stdin_used@@Base+0x576>
  401cca:	mov    DWORD PTR [rbp-0x6c],eax
  401ccd:	mov    al,0x0
  401ccf:	call   4011b0 <printf@plt>
  401cd4:	lea    rdi,[rip+0x8c7]        # 4025a2 <_IO_stdin_used@@Base+0x5a2>
  401cdb:	mov    DWORD PTR [rbp-0x70],eax
  401cde:	mov    al,0x0
  401ce0:	call   4011b0 <printf@plt>
  401ce5:	lea    rdi,[rip+0x903]        # 4025ef <_IO_stdin_used@@Base+0x5ef>
  401cec:	mov    DWORD PTR [rbp-0x74],eax
  401cef:	mov    al,0x0
  401cf1:	call   4011b0 <printf@plt>
  401cf6:	lea    rdi,[rip+0x939]        # 402636 <_IO_stdin_used@@Base+0x636>
  401cfd:	mov    DWORD PTR [rbp-0x78],eax
  401d00:	mov    al,0x0
  401d02:	call   4011b0 <printf@plt>
  401d07:	lea    rdi,[rip+0x968]        # 402676 <_IO_stdin_used@@Base+0x676>
  401d0e:	mov    DWORD PTR [rbp-0x7c],eax
  401d11:	mov    al,0x0
  401d13:	call   4011b0 <printf@plt>
  401d18:	lea    rdi,[rip+0xa17]        # 402736 <_IO_stdin_used@@Base+0x736>
  401d1f:	mov    DWORD PTR [rbp-0x80],eax
  401d22:	mov    al,0x0
  401d24:	call   4011b0 <printf@plt>
  401d29:	add    rsp,0x80
  401d30:	pop    rbp
  401d31:	ret    
  401d32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	push   rbp
  401d41:	mov    rbp,rsp
  401d44:	sub    rsp,0x10
  401d48:	call   401190 <coda_get_libcoda_version@plt>
  401d4d:	lea    rdi,[rip+0x963]        # 4026b7 <_IO_stdin_used@@Base+0x6b7>
  401d54:	mov    rsi,rax
  401d57:	mov    al,0x0
  401d59:	call   4011b0 <printf@plt>
  401d5e:	lea    rdi,[rip+0x968]        # 4026cd <_IO_stdin_used@@Base+0x6cd>
  401d65:	mov    DWORD PTR [rbp-0x4],eax
  401d68:	mov    al,0x0
  401d6a:	call   4011b0 <printf@plt>
  401d6f:	lea    rdi,[rip+0x9c0]        # 402736 <_IO_stdin_used@@Base+0x736>
  401d76:	mov    DWORD PTR [rbp-0x8],eax
  401d79:	mov    al,0x0
  401d7b:	call   4011b0 <printf@plt>
  401d80:	add    rsp,0x10
  401d84:	pop    rbp
  401d85:	ret    
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	push   rbp
  401d91:	mov    rbp,rsp
  401d94:	sub    rsp,0x20
  401d98:	mov    QWORD PTR [rbp-0x8],rdi
  401d9c:	mov    QWORD PTR [rbp-0x10],rsi
  401da0:	mov    QWORD PTR [rbp-0x18],rdx
  401da4:	mov    rsi,QWORD PTR [rbp-0x10]
  401da8:	lea    rdi,[rip+0x9b6]        # 402765 <_IO_stdin_used@@Base+0x765>
  401daf:	mov    al,0x0
  401db1:	call   4011b0 <printf@plt>
  401db6:	cmp    QWORD PTR [rbp-0x8],0x0
  401dbb:	je     401de2 <main@@Base+0xb32>
  401dc1:	lea    rdi,[rip+0x9a9]        # 402771 <_IO_stdin_used@@Base+0x771>
  401dc8:	mov    al,0x0
  401dca:	call   4011b0 <printf@plt>
  401dcf:	mov    rsi,QWORD PTR [rip+0x220a]        # 403fe0 <printf@GLIBC_2.2.5>
  401dd6:	mov    rdi,QWORD PTR [rbp-0x8]
  401dda:	mov    DWORD PTR [rbp-0x1c],eax
  401ddd:	call   401070 <coda_cursor_print_path@plt>
  401de2:	lea    rdi,[rip+0x94d]        # 402736 <_IO_stdin_used@@Base+0x736>
  401de9:	mov    al,0x0
  401deb:	call   4011b0 <printf@plt>
  401df0:	lea    rcx,[rip+0x22f9]        # 4040f0 <found_errors@@Base>
  401df7:	mov    DWORD PTR [rcx],0x1
  401dfd:	add    rsp,0x20
  401e01:	pop    rbp
  401e02:	ret    
  401e03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e0d:	nop    DWORD PTR [rax]

0000000000401e10 <__libc_csu_init@@Base>:
  401e10:	endbr64 
  401e14:	push   r15
  401e16:	lea    r15,[rip+0x1f9b]        # 403db8 <_IO_stdin_used@@Base+0x1db8>
  401e1d:	push   r14
  401e1f:	mov    r14,rdx
  401e22:	push   r13
  401e24:	mov    r13,rsi
  401e27:	push   r12
  401e29:	mov    r12d,edi
  401e2c:	push   rbp
  401e2d:	lea    rbp,[rip+0x1f8c]        # 403dc0 <_IO_stdin_used@@Base+0x1dc0>
  401e34:	push   rbx
  401e35:	sub    rbp,r15
  401e38:	sub    rsp,0x8
  401e3c:	call   401000 <coda_set_option_perform_boundary_checks@plt-0x30>
  401e41:	sar    rbp,0x3
  401e45:	je     401e66 <__libc_csu_init@@Base+0x56>
  401e47:	xor    ebx,ebx
  401e49:	nop    DWORD PTR [rax+0x0]
  401e50:	mov    rdx,r14
  401e53:	mov    rsi,r13
  401e56:	mov    edi,r12d
  401e59:	call   QWORD PTR [r15+rbx*8]
  401e5d:	add    rbx,0x1
  401e61:	cmp    rbp,rbx
  401e64:	jne    401e50 <__libc_csu_init@@Base+0x40>
  401e66:	add    rsp,0x8
  401e6a:	pop    rbx
  401e6b:	pop    rbp
  401e6c:	pop    r12
  401e6e:	pop    r13
  401e70:	pop    r14
  401e72:	pop    r15
  401e74:	ret    
  401e75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401e80 <__libc_csu_fini@@Base>:
  401e80:	endbr64 
  401e84:	ret    

Disassembly of section .fini:

0000000000401e88 <.fini>:
  401e88:	endbr64 
  401e8c:	sub    rsp,0x8
  401e90:	add    rsp,0x8
  401e94:	ret    
