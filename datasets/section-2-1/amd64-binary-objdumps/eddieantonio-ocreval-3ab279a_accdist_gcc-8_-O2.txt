
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 406fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x3dd8>
  401026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 407010 <error@@Base+0x3de0>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x5e1d]        # 407018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x5e15]        # 407020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x5e0d]        # 407028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x5e05]        # 407030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x5dfd]        # 407038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x5df5]        # 407040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x5ded]        # 407048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x5de5]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x5ddd]        # 407058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x5dd5]        # 407060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x5dcd]        # 407068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x5dc5]        # 407070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x5dbd]        # 407078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x5db5]        # 407080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <strcmp@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x5dad]        # 407088 <strcmp@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sysv_signal@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x5da5]        # 407090 <__sysv_signal@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <utf8proc_category@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x5d9d]        # 407098 <utf8proc_category>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__xstat@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x5d95]        # 4070a0 <__xstat@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__isoc99_sscanf@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x5d8d]        # 4070a8 <__isoc99_sscanf@GLIBC_2.7>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x5d85]        # 4070b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x5d7d]        # 4070b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x5d75]        # 4070c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x5d6d]        # 4070c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x5d65]        # 4070d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x5d5d]        # 4070d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x5d55]        # 4070e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x5d4d]        # 4070e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x5d45]        # 4070f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x1e80>:
  4013b0:	endbr64 
  4013b4:	push   rbp
  4013b5:	xor    eax,eax
  4013b7:	xor    ecx,ecx
  4013b9:	push   rbx
  4013ba:	lea    rdx,[rip+0x2c47]        # 404008 <error@@Base+0xdd8>
  4013c1:	mov    rbp,rsi
  4013c4:	sub    rsp,0x18
  4013c8:	mov    DWORD PTR [rsp+0xc],edi
  4013cc:	lea    rdi,[rsp+0xc]
  4013d1:	call   4033b0 <error@@Base+0x180>
  4013d6:	mov    eax,DWORD PTR [rsp+0xc]
  4013da:	test   eax,eax
  4013dc:	jle    4013f5 <__sprintf_chk@plt+0x55>
  4013de:	xor    ebx,ebx
  4013e0:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  4013e5:	xor    eax,eax
  4013e7:	inc    rbx
  4013ea:	call   401500 <__sprintf_chk@plt+0x160>
  4013ef:	cmp    DWORD PTR [rsp+0xc],ebx
  4013f3:	jg     4013e0 <__sprintf_chk@plt+0x40>
  4013f5:	mov    rdi,0x161c960
  4013fc:	xor    eax,eax
  4013fe:	xor    esi,esi
  401400:	call   4022d0 <__sprintf_chk@plt+0xf30>
  401405:	xor    eax,eax
  401407:	call   4031c0 <__sprintf_chk@plt+0x1e20>
  40140c:	nop    DWORD PTR [rax+0x0]
  401410:	endbr64 
  401414:	xor    ebp,ebp
  401416:	mov    r9,rdx
  401419:	pop    rsi
  40141a:	mov    rdx,rsp
  40141d:	and    rsp,0xfffffffffffffff0
  401421:	push   rax
  401422:	push   rsp
  401423:	mov    r8,0x403970
  40142a:	mov    rcx,0x403900
  401431:	mov    rdi,0x4013b0
  401438:	call   QWORD PTR [rip+0x5ba2]        # 406fe0 <error@@Base+0x3db0>
  40143e:	hlt    
  40143f:	nop
  401440:	endbr64 
  401444:	ret    
  401445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40144f:	nop
  401450:	mov    eax,0x407110
  401455:	cmp    rax,0x407110
  40145b:	je     401470 <__sprintf_chk@plt+0xd0>
  40145d:	mov    eax,0x0
  401462:	test   rax,rax
  401465:	je     401470 <__sprintf_chk@plt+0xd0>
  401467:	mov    edi,0x407110
  40146c:	jmp    rax
  40146e:	xchg   ax,ax
  401470:	ret    
  401471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40147c:	nop    DWORD PTR [rax+0x0]
  401480:	mov    esi,0x407110
  401485:	sub    rsi,0x407110
  40148c:	sar    rsi,0x3
  401490:	mov    rax,rsi
  401493:	shr    rax,0x3f
  401497:	add    rsi,rax
  40149a:	sar    rsi,1
  40149d:	je     4014b0 <__sprintf_chk@plt+0x110>
  40149f:	mov    eax,0x0
  4014a4:	test   rax,rax
  4014a7:	je     4014b0 <__sprintf_chk@plt+0x110>
  4014a9:	mov    edi,0x407110
  4014ae:	jmp    rax
  4014b0:	ret    
  4014b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014bc:	nop    DWORD PTR [rax+0x0]
  4014c0:	endbr64 
  4014c4:	cmp    BYTE PTR [rip+0x5c55],0x0        # 407120 <error@@Base+0x3ef0>
  4014cb:	jne    4014e0 <__sprintf_chk@plt+0x140>
  4014cd:	push   rbp
  4014ce:	mov    rbp,rsp
  4014d1:	call   401450 <__sprintf_chk@plt+0xb0>
  4014d6:	mov    BYTE PTR [rip+0x5c43],0x1        # 407120 <error@@Base+0x3ef0>
  4014dd:	pop    rbp
  4014de:	ret    
  4014df:	nop
  4014e0:	ret    
  4014e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014ec:	nop    DWORD PTR [rax+0x0]
  4014f0:	endbr64 
  4014f4:	jmp    401480 <__sprintf_chk@plt+0xe0>
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	endbr64 
  401504:	push   r12
  401506:	mov    rsi,rdi
  401509:	xor    eax,eax
  40150b:	push   rbp
  40150c:	push   rbx
  40150d:	mov    rbx,0x5179e0
  401514:	mov    rdi,rbx
  401517:	mov    rbp,QWORD PTR [rbx]
  40151a:	mov    r12,QWORD PTR [rbx+0x8]
  40151e:	call   401930 <__sprintf_chk@plt+0x590>
  401523:	mov    rsi,QWORD PTR [rbx]
  401526:	mov    rdx,QWORD PTR [rbx+0x8]
  40152a:	pop    rbx
  40152b:	sub    rsi,rbp
  40152e:	mov    rdi,0x161c960
  401535:	pop    rbp
  401536:	sub    rdx,r12
  401539:	xor    eax,eax
  40153b:	pop    r12
  40153d:	jmp    402260 <__sprintf_chk@plt+0xec0>
  401542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40154c:	nop    DWORD PTR [rax+0x0]
  401550:	push   rbp
  401551:	mov    rbp,rdx
  401554:	mov    rdx,rdi
  401557:	push   rbx
  401558:	lea    rdi,[rip+0x5be1]        # 407140 <error@@Base+0x3f10>
  40155f:	mov    rbx,rsi
  401562:	sub    rsp,0x8
  401566:	mov    esi,0x63
  40156b:	call   4012a0 <fgets@plt>
  401570:	test   rax,rax
  401573:	je     401592 <__sprintf_chk@plt+0x1f2>
  401575:	xor    eax,eax
  401577:	mov    rdx,rbx
  40157a:	lea    rsi,[rip+0x2ac1]        # 404042 <error@@Base+0xe12>
  401581:	lea    rdi,[rip+0x5bb8]        # 407140 <error@@Base+0x3f10>
  401588:	call   401310 <__isoc99_sscanf@plt>
  40158d:	cmp    eax,0x1
  401590:	je     4015a0 <__sprintf_chk@plt+0x200>
  401592:	add    rsp,0x8
  401596:	pop    rbx
  401597:	xor    eax,eax
  401599:	pop    rbp
  40159a:	ret    
  40159b:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	mov    rax,QWORD PTR [rbx]
  4015a3:	add    QWORD PTR [rbp+0x0],rax
  4015a7:	add    rsp,0x8
  4015ab:	pop    rbx
  4015ac:	mov    eax,0x1
  4015b1:	pop    rbp
  4015b2:	ret    
  4015b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015be:	xchg   ax,ax
  4015c0:	push   rbx
  4015c1:	mov    rdx,rdi
  4015c4:	mov    rbx,rsi
  4015c7:	sub    rsp,0x30
  4015cb:	mov    esi,0x63
  4015d0:	lea    rdi,[rip+0x5b69]        # 407140 <error@@Base+0x3f10>
  4015d7:	mov    rax,QWORD PTR fs:0x28
  4015e0:	mov    QWORD PTR [rsp+0x28],rax
  4015e5:	xor    eax,eax
  4015e7:	call   4012a0 <fgets@plt>
  4015ec:	test   rax,rax
  4015ef:	je     40161a <__sprintf_chk@plt+0x27a>
  4015f1:	mov    rdx,rsp
  4015f4:	xor    eax,eax
  4015f6:	lea    rcx,[rdx+0x8]
  4015fa:	lea    r9,[rdx+0x18]
  4015fe:	lea    r8,[rdx+0x10]
  401602:	lea    rsi,[rip+0x2a2d]        # 404036 <error@@Base+0xe06>
  401609:	lea    rdi,[rip+0x5b30]        # 407140 <error@@Base+0x3f10>
  401610:	call   401310 <__isoc99_sscanf@plt>
  401615:	cmp    eax,0x4
  401618:	je     401638 <__sprintf_chk@plt+0x298>
  40161a:	xor    eax,eax
  40161c:	mov    rbx,QWORD PTR [rsp+0x28]
  401621:	xor    rbx,QWORD PTR fs:0x28
  40162a:	jne    401661 <__sprintf_chk@plt+0x2c1>
  40162c:	add    rsp,0x30
  401630:	pop    rbx
  401631:	ret    
  401632:	nop    WORD PTR [rax+rax*1+0x0]
  401638:	mov    rax,QWORD PTR [rsp]
  40163c:	add    QWORD PTR [rbx],rax
  40163f:	mov    rax,QWORD PTR [rsp+0x8]
  401644:	add    QWORD PTR [rbx+0x8],rax
  401648:	mov    rax,QWORD PTR [rsp+0x10]
  40164d:	add    QWORD PTR [rbx+0x10],rax
  401651:	mov    rax,QWORD PTR [rsp+0x18]
  401656:	add    QWORD PTR [rbx+0x18],rax
  40165a:	mov    eax,0x1
  40165f:	jmp    40161c <__sprintf_chk@plt+0x27c>
  401661:	call   401260 <__stack_chk_fail@plt>
  401666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401670:	push   rbp
  401671:	mov    rbp,rdx
  401674:	mov    rdx,rdi
  401677:	push   rbx
  401678:	lea    rdi,[rip+0x5ac1]        # 407140 <error@@Base+0x3f10>
  40167f:	mov    rbx,rsi
  401682:	sub    rsp,0x8
  401686:	mov    esi,0x63
  40168b:	call   4012a0 <fgets@plt>
  401690:	xor    edx,edx
  401692:	test   rax,rax
  401695:	je     4016b8 <__sprintf_chk@plt+0x318>
  401697:	mov    rdx,rbx
  40169a:	xor    eax,eax
  40169c:	mov    rcx,rbp
  40169f:	lea    rsi,[rip+0x2998]        # 40403e <error@@Base+0xe0e>
  4016a6:	lea    rdi,[rip+0x5a93]        # 407140 <error@@Base+0x3f10>
  4016ad:	call   401310 <__isoc99_sscanf@plt>
  4016b2:	cmp    eax,0x2
  4016b5:	sete   dl
  4016b8:	add    rsp,0x8
  4016bc:	pop    rbx
  4016bd:	mov    eax,edx
  4016bf:	pop    rbp
  4016c0:	ret    
  4016c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016cc:	nop    DWORD PTR [rax+0x0]
  4016d0:	test   rdx,rdx
  4016d3:	jne    4016f0 <__sprintf_chk@plt+0x350>
  4016d5:	lea    rdx,[rip+0x296a]        # 404046 <error@@Base+0xe16>
  4016dc:	mov    esi,0x1
  4016e1:	xor    eax,eax
  4016e3:	jmp    401360 <__fprintf_chk@plt>
  4016e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	vxorpd xmm0,xmm0,xmm0
  4016f4:	vcvtsi2sd xmm0,xmm0,rsi
  4016f9:	vxorpd xmm1,xmm1,xmm1
  4016fd:	vcvtsi2sd xmm1,xmm1,rdx
  401702:	mov    esi,0x1
  401707:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2b09]        # 404218 <error@@Base+0xfe8>
  40170f:	lea    rdx,[rip+0x2939]        # 40404f <error@@Base+0xe1f>
  401716:	mov    eax,0x1
  40171b:	vdivsd xmm0,xmm0,xmm1
  40171f:	jmp    401360 <__fprintf_chk@plt>
  401724:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40172f:	nop
  401730:	endbr64 
  401734:	mov    rdx,QWORD PTR [rdi+0x18]
  401738:	mov    rax,QWORD PTR [rsi+0x18]
  40173c:	cmp    rdx,rax
  40173f:	jne    40174e <__sprintf_chk@plt+0x3ae>
  401741:	mov    rdx,QWORD PTR [rdi+0x20]
  401745:	mov    rax,QWORD PTR [rsi+0x20]
  401749:	cmp    rdx,rax
  40174c:	je     401758 <__sprintf_chk@plt+0x3b8>
  40174e:	sub    eax,edx
  401750:	ret    
  401751:	nop    DWORD PTR [rax+0x0]
  401758:	mov    rsi,QWORD PTR [rsi+0x10]
  40175c:	mov    rdi,QWORD PTR [rdi+0x10]
  401760:	xor    eax,eax
  401762:	jmp    403050 <__sprintf_chk@plt+0x1cb0>
  401767:	nop    WORD PTR [rax+rax*1+0x0]
  401770:	push   r13
  401772:	mov    r13d,ecx
  401775:	push   r12
  401777:	mov    r12,rdx
  40177a:	lea    rdx,[rip+0x28d4]        # 404055 <error@@Base+0xe25>
  401781:	push   rbp
  401782:	mov    rbp,rdi
  401785:	push   rbx
  401786:	mov    rbx,rsi
  401789:	sub    rsp,0x28
  40178d:	mov    rax,QWORD PTR fs:0x28
  401796:	mov    QWORD PTR [rsp+0x18],rax
  40179b:	xor    eax,eax
  40179d:	mov    r8,QWORD PTR [rsi+0x8]
  4017a1:	mov    rcx,QWORD PTR [rsi]
  4017a4:	mov    esi,0x1
  4017a9:	call   401360 <__fprintf_chk@plt>
  4017ae:	mov    rdx,QWORD PTR [rbx]
  4017b1:	xor    eax,eax
  4017b3:	mov    rsi,rdx
  4017b6:	sub    rsi,QWORD PTR [rbx+0x8]
  4017ba:	mov    rdi,rbp
  4017bd:	call   4016d0 <__sprintf_chk@plt+0x330>
  4017c2:	test   r12,r12
  4017c5:	je     401800 <__sprintf_chk@plt+0x460>
  4017c7:	mov    rcx,r12
  4017ca:	lea    rdx,[rip+0x2927]        # 4040f8 <error@@Base+0xec8>
  4017d1:	mov    esi,0x1
  4017d6:	mov    rdi,rbp
  4017d9:	xor    eax,eax
  4017db:	call   401360 <__fprintf_chk@plt>
  4017e0:	mov    rax,QWORD PTR [rsp+0x18]
  4017e5:	xor    rax,QWORD PTR fs:0x28
  4017ee:	jne    401834 <__sprintf_chk@plt+0x494>
  4017f0:	add    rsp,0x28
  4017f4:	pop    rbx
  4017f5:	pop    rbp
  4017f6:	pop    r12
  4017f8:	pop    r13
  4017fa:	ret    
  4017fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401800:	lea    rbx,[rsp+0xf]
  401805:	mov    rdx,rbx
  401808:	mov    esi,r13d
  40180b:	xor    edi,edi
  40180d:	xor    eax,eax
  40180f:	mov    ecx,0x1
  401814:	call   402c70 <__sprintf_chk@plt+0x18d0>
  401819:	mov    rcx,rbx
  40181c:	lea    rdx,[rip+0x283d]        # 404060 <error@@Base+0xe30>
  401823:	mov    esi,0x1
  401828:	mov    rdi,rbp
  40182b:	xor    eax,eax
  40182d:	call   401360 <__fprintf_chk@plt>
  401832:	jmp    4017e0 <__sprintf_chk@plt+0x440>
  401834:	call   401260 <__stack_chk_fail@plt>
  401839:	nop    DWORD PTR [rax+0x0]
  401840:	endbr64 
  401844:	push   r13
  401846:	xor    eax,eax
  401848:	mov    r13,rdx
  40184b:	push   r12
  40184d:	mov    r12,rcx
  401850:	push   rbp
  401851:	mov    rbp,rdi
  401854:	push   rbx
  401855:	mov    ebx,esi
  401857:	mov    edi,ebx
  401859:	sub    rsp,0x8
  40185d:	call   4021b0 <__sprintf_chk@plt+0xe10>
  401862:	movzx  eax,al
  401865:	shl    rax,0x4
  401869:	lea    rax,[rbp+rax*1+0x88]
  401871:	add    QWORD PTR [rax],r13
  401874:	add    QWORD PTR [rax+0x8],r12
  401878:	shl    rbx,0x4
  40187c:	lea    rax,[rbp+rbx*1+0x4f88]
  401884:	add    QWORD PTR [rbp+0x1088],r13
  40188b:	add    QWORD PTR [rbp+0x1090],r12
  401892:	add    QWORD PTR [rax],r13
  401895:	add    QWORD PTR [rax+0x8],r12
  401899:	add    rsp,0x8
  40189d:	pop    rbx
  40189e:	pop    rbp
  40189f:	pop    r12
  4018a1:	pop    r13
  4018a3:	ret    
  4018a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018af:	nop
  4018b0:	endbr64 
  4018b4:	push   r14
  4018b6:	xor    eax,eax
  4018b8:	push   r13
  4018ba:	mov    r13,rdx
  4018bd:	push   r12
  4018bf:	mov    r12,rcx
  4018c2:	push   rbp
  4018c3:	mov    rbp,rsi
  4018c6:	push   rbx
  4018c7:	lea    rbx,[rdi+0x1098]
  4018ce:	mov    rdi,rbx
  4018d1:	call   402560 <__sprintf_chk@plt+0x11c0>
  4018d6:	test   rax,rax
  4018d9:	je     4018f0 <__sprintf_chk@plt+0x550>
  4018db:	add    QWORD PTR [rax+0x18],r13
  4018df:	add    QWORD PTR [rax+0x20],r12
  4018e3:	pop    rbx
  4018e4:	pop    rbp
  4018e5:	pop    r12
  4018e7:	pop    r13
  4018e9:	pop    r14
  4018eb:	ret    
  4018ec:	nop    DWORD PTR [rax+0x0]
  4018f0:	mov    esi,0x28
  4018f5:	mov    edi,0x1
  4018fa:	xor    eax,eax
  4018fc:	call   403280 <error@@Base+0x50>
  401901:	mov    rdi,rbp
  401904:	mov    r14,rax
  401907:	call   401380 <strdup@plt>
  40190c:	mov    QWORD PTR [r14+0x10],rax
  401910:	mov    QWORD PTR [r14+0x18],r13
  401914:	mov    QWORD PTR [r14+0x20],r12
  401918:	mov    rdi,rbx
  40191b:	mov    rsi,r14
  40191e:	pop    rbx
  40191f:	pop    rbp
  401920:	pop    r12
  401922:	pop    r13
  401924:	xor    eax,eax
  401926:	pop    r14
  401928:	jmp    4025f0 <__sprintf_chk@plt+0x1250>
  40192d:	nop    DWORD PTR [rax]
  401930:	endbr64 
  401934:	push   r14
  401936:	push   r13
  401938:	mov    r13,rsi
  40193b:	lea    rsi,[rip+0x2f0e]        # 404850 <error@@Base+0x1620>
  401942:	push   r12
  401944:	mov    r12,rdi
  401947:	mov    rdi,r13
  40194a:	push   rbp
  40194b:	push   rbx
  40194c:	sub    rsp,0x30
  401950:	mov    rax,QWORD PTR fs:0x28
  401959:	mov    QWORD PTR [rsp+0x28],rax
  40195e:	xor    eax,eax
  401960:	call   403330 <error@@Base+0x100>
  401965:	mov    rdx,rax
  401968:	mov    esi,0x63
  40196d:	lea    rdi,[rip+0x57cc]        # 407140 <error@@Base+0x3f10>
  401974:	mov    rbx,rax
  401977:	call   4012a0 <fgets@plt>
  40197c:	test   rax,rax
  40197f:	je     401ccf <__sprintf_chk@plt+0x92f>
  401985:	lea    rbp,[rip+0x57b4]        # 407140 <error@@Base+0x3f10>
  40198c:	mov    ecx,0x28
  401991:	lea    rdi,[rip+0x27b0]        # 404148 <error@@Base+0xf18>
  401998:	mov    rsi,rbp
  40199b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40199d:	seta   al
  4019a0:	sbb    al,0x0
  4019a2:	test   al,al
  4019a4:	jne    401ccf <__sprintf_chk@plt+0x92f>
  4019aa:	mov    rdx,rbx
  4019ad:	mov    esi,0x63
  4019b2:	mov    rdi,rbp
  4019b5:	call   4012a0 <fgets@plt>
  4019ba:	test   rax,rax
  4019bd:	je     401ccf <__sprintf_chk@plt+0x92f>
  4019c3:	mov    ecx,0x2b
  4019c8:	lea    rdi,[rip+0x27a9]        # 404178 <error@@Base+0xf48>
  4019cf:	mov    rsi,rbp
  4019d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019d4:	seta   al
  4019d7:	sbb    al,0x0
  4019d9:	test   al,al
  4019db:	jne    401ccf <__sprintf_chk@plt+0x92f>
  4019e1:	mov    rsi,rsp
  4019e4:	mov    rdx,r12
  4019e7:	mov    rdi,rbx
  4019ea:	call   401550 <__sprintf_chk@plt+0x1b0>
  4019ef:	test   al,al
  4019f1:	je     401ccf <__sprintf_chk@plt+0x92f>
  4019f7:	xor    eax,eax
  4019f9:	lea    rdx,[r12+0x8]
  4019fe:	lea    rsi,[rsp+0x8]
  401a03:	mov    rdi,rbx
  401a06:	call   401550 <__sprintf_chk@plt+0x1b0>
  401a0b:	test   al,al
  401a0d:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a13:	mov    rdx,rbx
  401a16:	mov    esi,0x63
  401a1b:	mov    rdi,rbp
  401a1e:	call   4012a0 <fgets@plt>
  401a23:	test   rax,rax
  401a26:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a2c:	mov    rdx,rbx
  401a2f:	mov    esi,0x63
  401a34:	mov    rdi,rbp
  401a37:	call   4012a0 <fgets@plt>
  401a3c:	test   rax,rax
  401a3f:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a45:	lea    r14,[rsp+0x10]
  401a4a:	xor    eax,eax
  401a4c:	lea    rdx,[r12+0x10]
  401a51:	mov    rsi,r14
  401a54:	mov    rdi,rbx
  401a57:	call   401550 <__sprintf_chk@plt+0x1b0>
  401a5c:	test   al,al
  401a5e:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a64:	xor    eax,eax
  401a66:	lea    rdx,[r12+0x18]
  401a6b:	mov    rsi,r14
  401a6e:	mov    rdi,rbx
  401a71:	call   401550 <__sprintf_chk@plt+0x1b0>
  401a76:	test   al,al
  401a78:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a7e:	xor    eax,eax
  401a80:	lea    rdx,[r12+0x20]
  401a85:	mov    rsi,r14
  401a88:	mov    rdi,rbx
  401a8b:	call   401550 <__sprintf_chk@plt+0x1b0>
  401a90:	test   al,al
  401a92:	je     401ccf <__sprintf_chk@plt+0x92f>
  401a98:	mov    rdx,rbx
  401a9b:	mov    esi,0x63
  401aa0:	mov    rdi,rbp
  401aa3:	call   4012a0 <fgets@plt>
  401aa8:	test   rax,rax
  401aab:	je     401ccf <__sprintf_chk@plt+0x92f>
  401ab1:	mov    rdx,rbx
  401ab4:	mov    esi,0x63
  401ab9:	mov    rdi,rbp
  401abc:	call   4012a0 <fgets@plt>
  401ac1:	test   rax,rax
  401ac4:	je     401ccf <__sprintf_chk@plt+0x92f>
  401aca:	mov    rdx,rbx
  401acd:	mov    esi,0x63
  401ad2:	mov    rdi,rbp
  401ad5:	call   4012a0 <fgets@plt>
  401ada:	test   rax,rax
  401add:	je     401ccf <__sprintf_chk@plt+0x92f>
  401ae3:	mov    rdx,rbx
  401ae6:	mov    esi,0x63
  401aeb:	mov    rdi,rbp
  401aee:	call   4012a0 <fgets@plt>
  401af3:	test   rax,rax
  401af6:	je     401ccf <__sprintf_chk@plt+0x92f>
  401afc:	xor    eax,eax
  401afe:	lea    rsi,[r12+0x28]
  401b03:	mov    rdi,rbx
  401b06:	call   4015c0 <__sprintf_chk@plt+0x220>
  401b0b:	test   al,al
  401b0d:	je     401ccf <__sprintf_chk@plt+0x92f>
  401b13:	xor    eax,eax
  401b15:	lea    rsi,[r12+0x48]
  401b1a:	mov    rdi,rbx
  401b1d:	call   4015c0 <__sprintf_chk@plt+0x220>
  401b22:	test   al,al
  401b24:	je     401ccf <__sprintf_chk@plt+0x92f>
  401b2a:	xor    eax,eax
  401b2c:	lea    rsi,[r12+0x68]
  401b31:	mov    rdi,rbx
  401b34:	call   4015c0 <__sprintf_chk@plt+0x220>
  401b39:	test   al,al
  401b3b:	je     401ccf <__sprintf_chk@plt+0x92f>
  401b41:	mov    rdx,rbx
  401b44:	mov    esi,0x63
  401b49:	mov    rdi,rbp
  401b4c:	call   4012a0 <fgets@plt>
  401b51:	test   rax,rax
  401b54:	je     401ccf <__sprintf_chk@plt+0x92f>
  401b5a:	mov    r13,rbp
  401b5d:	jmp    401b66 <__sprintf_chk@plt+0x7c6>
  401b5f:	nop
  401b60:	cmp    BYTE PTR [rbp+0x0],0xa
  401b64:	je     401b7b <__sprintf_chk@plt+0x7db>
  401b66:	mov    rdx,rbx
  401b69:	mov    esi,0x63
  401b6e:	mov    rdi,r13
  401b71:	call   4012a0 <fgets@plt>
  401b76:	test   rax,rax
  401b79:	jne    401b60 <__sprintf_chk@plt+0x7c0>
  401b7b:	cmp    QWORD PTR [rsp+0x8],0x0
  401b81:	jg     401bc0 <__sprintf_chk@plt+0x820>
  401b83:	cmp    QWORD PTR [rsp],0x0
  401b88:	jg     401c26 <__sprintf_chk@plt+0x886>
  401b8e:	xor    eax,eax
  401b90:	mov    rdi,rbx
  401b93:	call   4030a0 <__sprintf_chk@plt+0x1d00>
  401b98:	mov    rax,QWORD PTR [rsp+0x28]
  401b9d:	xor    rax,QWORD PTR fs:0x28
  401ba6:	jne    401cee <__sprintf_chk@plt+0x94e>
  401bac:	add    rsp,0x30
  401bb0:	pop    rbx
  401bb1:	pop    rbp
  401bb2:	pop    r12
  401bb4:	pop    r13
  401bb6:	pop    r14
  401bb8:	ret    
  401bb9:	nop    DWORD PTR [rax+0x0]
  401bc0:	mov    rdx,rbx
  401bc3:	mov    esi,0x63
  401bc8:	lea    rdi,[rip+0x5571]        # 407140 <error@@Base+0x3f10>
  401bcf:	call   4012a0 <fgets@plt>
  401bd4:	lea    rbp,[rsp+0x18]
  401bd9:	lea    r13,[rip+0x5574]        # 407154 <error@@Base+0x3f24>
  401be0:	test   rax,rax
  401be3:	jne    401c07 <__sprintf_chk@plt+0x867>
  401be5:	jmp    401b83 <__sprintf_chk@plt+0x7e3>
  401be7:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	mov    rcx,QWORD PTR [rsp+0x18]
  401bf5:	mov    rdx,QWORD PTR [rsp+0x10]
  401bfa:	mov    rsi,r13
  401bfd:	mov    rdi,r12
  401c00:	xor    eax,eax
  401c02:	call   4018b0 <__sprintf_chk@plt+0x510>
  401c07:	xor    eax,eax
  401c09:	mov    rdx,rbp
  401c0c:	mov    rsi,r14
  401c0f:	mov    rdi,rbx
  401c12:	call   401670 <__sprintf_chk@plt+0x2d0>
  401c17:	test   al,al
  401c19:	jne    401bf0 <__sprintf_chk@plt+0x850>
  401c1b:	cmp    QWORD PTR [rsp],0x0
  401c20:	jle    401b8e <__sprintf_chk@plt+0x7ee>
  401c26:	mov    rdx,rbx
  401c29:	mov    esi,0x63
  401c2e:	lea    rdi,[rip+0x550b]        # 407140 <error@@Base+0x3f10>
  401c35:	call   4012a0 <fgets@plt>
  401c3a:	lea    rbp,[rsp+0x18]
  401c3f:	lea    r13,[rsp+0x20]
  401c44:	test   rax,rax
  401c47:	jne    401c76 <__sprintf_chk@plt+0x8d6>
  401c49:	jmp    401b8e <__sprintf_chk@plt+0x7ee>
  401c4e:	xchg   ax,ax
  401c50:	cmp    al,0x5c
  401c52:	jne    401cb0 <__sprintf_chk@plt+0x910>
  401c54:	mov    QWORD PTR [rsp+0x20],0xa
  401c5d:	mov    esi,0xa
  401c62:	mov    rcx,QWORD PTR [rsp+0x18]
  401c67:	mov    rdx,QWORD PTR [rsp+0x10]
  401c6c:	mov    rdi,r12
  401c6f:	xor    eax,eax
  401c71:	call   401840 <__sprintf_chk@plt+0x4a0>
  401c76:	xor    eax,eax
  401c78:	mov    rdx,rbp
  401c7b:	mov    rsi,r14
  401c7e:	mov    rdi,rbx
  401c81:	call   401670 <__sprintf_chk@plt+0x2d0>
  401c86:	test   al,al
  401c88:	je     401b8e <__sprintf_chk@plt+0x7ee>
  401c8e:	movzx  eax,BYTE PTR [rip+0x54ca]        # 40715f <error@@Base+0x3f2f>
  401c95:	cmp    al,0x7d
  401c97:	jne    401c50 <__sprintf_chk@plt+0x8b0>
  401c99:	movsx  rsi,BYTE PTR [rip+0x54bd]        # 40715e <error@@Base+0x3f2e>
  401ca1:	mov    QWORD PTR [rsp+0x20],rsi
  401ca6:	jmp    401c62 <__sprintf_chk@plt+0x8c2>
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	lea    rsi,[rip+0x23b8]        # 40406f <error@@Base+0xe3f>
  401cb7:	mov    rdx,r13
  401cba:	lea    rdi,[rip+0x549e]        # 40715f <error@@Base+0x3f2f>
  401cc1:	xor    eax,eax
  401cc3:	call   401310 <__isoc99_sscanf@plt>
  401cc8:	mov    rsi,QWORD PTR [rsp+0x20]
  401ccd:	jmp    401c62 <__sprintf_chk@plt+0x8c2>
  401ccf:	test   r13,r13
  401cd2:	lea    rax,[rip+0x2390]        # 404069 <error@@Base+0xe39>
  401cd9:	cmove  r13,rax
  401cdd:	lea    rdi,[rip+0x238f]        # 404073 <error@@Base+0xe43>
  401ce4:	mov    rsi,r13
  401ce7:	xor    eax,eax
  401ce9:	call   4032e0 <error@@Base+0xb0>
  401cee:	call   401260 <__stack_chk_fail@plt>
  401cf3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401cfe:	xchg   ax,ax
  401d00:	endbr64 
  401d04:	push   r13
  401d06:	xor    eax,eax
  401d08:	push   r12
  401d0a:	mov    r12,rdi
  401d0d:	mov    rdi,rsi
  401d10:	push   rbp
  401d11:	lea    rsi,[rip+0x26f8]        # 404410 <error@@Base+0x11e0>
  401d18:	lea    rbp,[r12+0x88]
  401d20:	push   rbx
  401d21:	sub    rsp,0x8
  401d25:	call   403330 <error@@Base+0x100>
  401d2a:	mov    r13,rax
  401d2d:	mov    rdi,rax
  401d30:	lea    r8,[rip+0x2441]        # 404178 <error@@Base+0xf48>
  401d37:	lea    rcx,[rip+0x240a]        # 404148 <error@@Base+0xf18>
  401d3e:	lea    rdx,[rip+0x2340]        # 404085 <error@@Base+0xe55>
  401d45:	mov    esi,0x1
  401d4a:	xor    eax,eax
  401d4c:	call   401360 <__fprintf_chk@plt>
  401d51:	mov    rcx,QWORD PTR [r12]
  401d55:	lea    r8,[rip+0x25a6]        # 404302 <error@@Base+0x10d2>
  401d5c:	lea    rdx,[rip+0x2391]        # 4040f4 <error@@Base+0xec4>
  401d63:	mov    esi,0x1
  401d68:	mov    rdi,r13
  401d6b:	xor    eax,eax
  401d6d:	call   401360 <__fprintf_chk@plt>
  401d72:	mov    rcx,QWORD PTR [r12+0x8]
  401d77:	lea    r8,[rip+0x230c]        # 40408a <error@@Base+0xe5a>
  401d7e:	lea    rdx,[rip+0x236f]        # 4040f4 <error@@Base+0xec4>
  401d85:	mov    esi,0x1
  401d8a:	mov    rdi,r13
  401d8d:	xor    eax,eax
  401d8f:	call   401360 <__fprintf_chk@plt>
  401d94:	mov    rdx,QWORD PTR [r12]
  401d98:	xor    eax,eax
  401d9a:	mov    rsi,rdx
  401d9d:	sub    rsi,QWORD PTR [r12+0x8]
  401da2:	mov    rdi,r13
  401da5:	call   4016d0 <__sprintf_chk@plt+0x330>
  401daa:	lea    rdx,[rip+0x22e0]        # 404091 <error@@Base+0xe61>
  401db1:	mov    esi,0x1
  401db6:	mov    rdi,r13
  401db9:	xor    eax,eax
  401dbb:	call   401360 <__fprintf_chk@plt>
  401dc0:	mov    rcx,QWORD PTR [r12+0x10]
  401dc5:	lea    r8,[rip+0x22d4]        # 4040a0 <error@@Base+0xe70>
  401dcc:	lea    rdx,[rip+0x2321]        # 4040f4 <error@@Base+0xec4>
  401dd3:	mov    esi,0x1
  401dd8:	mov    rdi,r13
  401ddb:	xor    eax,eax
  401ddd:	call   401360 <__fprintf_chk@plt>
  401de2:	mov    rcx,QWORD PTR [r12+0x18]
  401de7:	lea    r8,[rip+0x22c4]        # 4040b2 <error@@Base+0xe82>
  401dee:	lea    rdx,[rip+0x22ff]        # 4040f4 <error@@Base+0xec4>
  401df5:	mov    esi,0x1
  401dfa:	mov    rdi,r13
  401dfd:	xor    eax,eax
  401dff:	call   401360 <__fprintf_chk@plt>
  401e04:	mov    rcx,QWORD PTR [r12+0x20]
  401e09:	lea    r8,[rip+0x22b2]        # 4040c2 <error@@Base+0xe92>
  401e10:	lea    rdx,[rip+0x22dd]        # 4040f4 <error@@Base+0xec4>
  401e17:	mov    esi,0x1
  401e1c:	mov    rdi,r13
  401e1f:	xor    eax,eax
  401e21:	call   401360 <__fprintf_chk@plt>
  401e26:	mov    rsi,QWORD PTR [r12+0x18]
  401e2b:	mov    rdx,QWORD PTR [r12]
  401e2f:	add    rsi,QWORD PTR [r12+0x10]
  401e34:	xor    eax,eax
  401e36:	mov    rdi,r13
  401e39:	call   4016d0 <__sprintf_chk@plt+0x330>
  401e3e:	lea    rdx,[rip+0x2289]        # 4040ce <error@@Base+0xe9e>
  401e45:	mov    esi,0x1
  401e4a:	mov    rdi,r13
  401e4d:	xor    eax,eax
  401e4f:	call   401360 <__fprintf_chk@plt>
  401e54:	mov    rdx,QWORD PTR [r12]
  401e58:	xor    eax,eax
  401e5a:	mov    rsi,rdx
  401e5d:	sub    rsi,QWORD PTR [r12+0x60]
  401e62:	mov    rdi,r13
  401e65:	call   4016d0 <__sprintf_chk@plt+0x330>
  401e6a:	lea    rdx,[rip+0x2337]        # 4041a8 <error@@Base+0xf78>
  401e71:	mov    esi,0x1
  401e76:	mov    rdi,r13
  401e79:	xor    eax,eax
  401e7b:	call   401360 <__fprintf_chk@plt>
  401e80:	lea    rdx,[rip+0x2341]        # 4041c8 <error@@Base+0xf98>
  401e87:	mov    esi,0x1
  401e8c:	mov    rdi,r13
  401e8f:	xor    eax,eax
  401e91:	call   401360 <__fprintf_chk@plt>
  401e96:	lea    rax,[rip+0x2262]        # 4040ff <error@@Base+0xecf>
  401e9d:	mov    rcx,QWORD PTR [r12+0x28]
  401ea2:	push   rax
  401ea3:	lea    rdx,[rip+0x223b]        # 4040e5 <error@@Base+0xeb5>
  401eaa:	xor    eax,eax
  401eac:	push   QWORD PTR [r12+0x40]
  401eb1:	mov    esi,0x1
  401eb6:	mov    rdi,r13
  401eb9:	mov    r9,QWORD PTR [r12+0x38]
  401ebe:	mov    r8,QWORD PTR [r12+0x30]
  401ec3:	xor    ebx,ebx
  401ec5:	call   401360 <__fprintf_chk@plt>
  401eca:	lea    rax,[rip+0x2235]        # 404106 <error@@Base+0xed6>
  401ed1:	mov    rcx,QWORD PTR [r12+0x48]
  401ed6:	push   rax
  401ed7:	lea    rdx,[rip+0x2207]        # 4040e5 <error@@Base+0xeb5>
  401ede:	mov    esi,0x1
  401ee3:	push   QWORD PTR [r12+0x60]
  401ee8:	mov    rdi,r13
  401eeb:	xor    eax,eax
  401eed:	mov    r9,QWORD PTR [r12+0x58]
  401ef2:	mov    r8,QWORD PTR [r12+0x50]
  401ef7:	call   401360 <__fprintf_chk@plt>
  401efc:	add    rsp,0x20
  401f00:	lea    rax,[rip+0x2208]        # 40410f <error@@Base+0xedf>
  401f07:	mov    rcx,QWORD PTR [r12+0x68]
  401f0c:	push   rax
  401f0d:	lea    rdx,[rip+0x21d1]        # 4040e5 <error@@Base+0xeb5>
  401f14:	mov    esi,0x1
  401f19:	push   QWORD PTR [r12+0x80]
  401f21:	mov    rdi,r13
  401f24:	xor    eax,eax
  401f26:	mov    r9,QWORD PTR [r12+0x78]
  401f2b:	mov    r8,QWORD PTR [r12+0x70]
  401f30:	call   401360 <__fprintf_chk@plt>
  401f35:	lea    rdx,[rip+0x21d9]        # 404115 <error@@Base+0xee5>
  401f3c:	mov    esi,0x1
  401f41:	mov    rdi,r13
  401f44:	xor    eax,eax
  401f46:	call   401360 <__fprintf_chk@plt>
  401f4b:	pop    rax
  401f4c:	pop    rdx
  401f4d:	nop    DWORD PTR [rax]
  401f50:	cmp    QWORD PTR [rbp+0x0],0x0
  401f55:	jle    401f73 <__sprintf_chk@plt+0xbd3>
  401f57:	mov    rdi,rbx
  401f5a:	xor    eax,eax
  401f5c:	call   402200 <__sprintf_chk@plt+0xe60>
  401f61:	mov    rdx,rax
  401f64:	xor    ecx,ecx
  401f66:	mov    rsi,rbp
  401f69:	mov    rdi,r13
  401f6c:	xor    eax,eax
  401f6e:	call   401770 <__sprintf_chk@plt+0x3d0>
  401f73:	inc    rbx
  401f76:	add    rbp,0x10
  401f7a:	cmp    rbx,0x100
  401f81:	jne    401f50 <__sprintf_chk@plt+0xbb0>
  401f83:	xor    ecx,ecx
  401f85:	xor    eax,eax
  401f87:	lea    rsi,[r12+0x1088]
  401f8f:	lea    rdx,[rip+0x2179]        # 40410f <error@@Base+0xedf>
  401f96:	mov    rdi,r13
  401f99:	call   401770 <__sprintf_chk@plt+0x3d0>
  401f9e:	cmp    QWORD PTR [r12+0x8],0x0
  401fa4:	jg     401fc5 <__sprintf_chk@plt+0xc25>
  401fa6:	cmp    QWORD PTR [r12],0x0
  401fab:	jg     402062 <__sprintf_chk@plt+0xcc2>
  401fb1:	add    rsp,0x8
  401fb5:	pop    rbx
  401fb6:	pop    rbp
  401fb7:	pop    r12
  401fb9:	mov    rdi,r13
  401fbc:	xor    eax,eax
  401fbe:	pop    r13
  401fc0:	jmp    4030a0 <__sprintf_chk@plt+0x1d00>
  401fc5:	xor    eax,eax
  401fc7:	lea    rdi,[r12+0x1098]
  401fcf:	call   4026f0 <__sprintf_chk@plt+0x1350>
  401fd4:	mov    rsi,QWORD PTR [r12+0x4f78]
  401fdc:	mov    rdi,QWORD PTR [r12+0x4f80]
  401fe4:	xor    eax,eax
  401fe6:	lea    rdx,[rip+0xfffffffffffff743]        # 401730 <__sprintf_chk@plt+0x390>
  401fed:	call   4024e0 <__sprintf_chk@plt+0x1140>
  401ff2:	xor    eax,eax
  401ff4:	lea    rdx,[rip+0x21f5]        # 4041f0 <error@@Base+0xfc0>
  401ffb:	mov    esi,0x1
  402000:	mov    rdi,r13
  402003:	call   401360 <__fprintf_chk@plt>
  402008:	cmp    QWORD PTR [r12+0x4f80],0x0
  402011:	jle    401fa6 <__sprintf_chk@plt+0xc06>
  402013:	xor    ebx,ebx
  402015:	lea    rbp,[rip+0x2117]        # 404133 <error@@Base+0xf03>
  40201c:	nop    DWORD PTR [rax+0x0]
  402020:	mov    rax,QWORD PTR [r12+0x4f78]
  402028:	mov    rdx,rbp
  40202b:	mov    rax,QWORD PTR [rax+rbx*8]
  40202f:	mov    esi,0x1
  402034:	mov    rcx,QWORD PTR [rax+0x18]
  402038:	mov    r9,QWORD PTR [rax+0x10]
  40203c:	mov    r8,QWORD PTR [rax+0x20]
  402040:	mov    rdi,r13
  402043:	xor    eax,eax
  402045:	inc    rbx
  402048:	call   401360 <__fprintf_chk@plt>
  40204d:	cmp    QWORD PTR [r12+0x4f80],rbx
  402055:	jg     402020 <__sprintf_chk@plt+0xc80>
  402057:	cmp    QWORD PTR [r12],0x0
  40205c:	jle    401fb1 <__sprintf_chk@plt+0xc11>
  402062:	lea    rdx,[rip+0x20ac]        # 404115 <error@@Base+0xee5>
  402069:	mov    esi,0x1
  40206e:	mov    rdi,r13
  402071:	xor    eax,eax
  402073:	call   401360 <__fprintf_chk@plt>
  402078:	add    r12,0x4f88
  40207f:	xor    ebp,ebp
  402081:	nop    DWORD PTR [rax+0x0]
  402088:	cmp    QWORD PTR [r12],0x0
  40208d:	jle    4020a1 <__sprintf_chk@plt+0xd01>
  40208f:	mov    rcx,rbp
  402092:	xor    edx,edx
  402094:	mov    rsi,r12
  402097:	mov    rdi,r13
  40209a:	xor    eax,eax
  40209c:	call   401770 <__sprintf_chk@plt+0x3d0>
  4020a1:	inc    rbp
  4020a4:	add    r12,0x10
  4020a8:	cmp    rbp,0x10ffff
  4020af:	jne    402088 <__sprintf_chk@plt+0xce8>
  4020b1:	jmp    401fb1 <__sprintf_chk@plt+0xc11>
  4020b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020c0:	push   r15
  4020c2:	lea    r15,[rip+0x1150f7]        # 5171c0 <error@@Base+0x113f90>
  4020c9:	push   r14
  4020cb:	push   r13
  4020cd:	push   r12
  4020cf:	lea    r12,[rip+0x476a]        # 406840 <error@@Base+0x3610>
  4020d6:	push   rbp
  4020d7:	push   rbx
  4020d8:	sub    rsp,0x8
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	movsx  rbx,WORD PTR [rip+0x1158d8]        # 5179c0 <error@@Base+0x114790>
  4020e8:	mov    r13,rbx
  4020eb:	test   rbx,rbx
  4020ee:	jle    402169 <__sprintf_chk@plt+0xdc9>
  4020f0:	mov    rbp,QWORD PTR [r12+0x8]
  4020f5:	xor    r14d,r14d
  4020f8:	jmp    402108 <__sprintf_chk@plt+0xd68>
  4020fa:	nop    WORD PTR [rax+rax*1+0x0]
  402100:	inc    r14
  402103:	cmp    rbx,r14
  402106:	je     402178 <__sprintf_chk@plt+0xdd8>
  402108:	mov    rsi,QWORD PTR [r15+r14*8]
  40210c:	mov    rdi,rbp
  40210f:	call   4012d0 <strcmp@plt>
  402114:	test   eax,eax
  402116:	jne    402100 <__sprintf_chk@plt+0xd60>
  402118:	mov    eax,DWORD PTR [r12]
  40211c:	mov    esi,DWORD PTR [r12+0x4]
  402121:	cmp    eax,esi
  402123:	ja     40214a <__sprintf_chk@plt+0xdaa>
  402125:	lea    rcx,[rip+0x5094]        # 4071c0 <error@@Base+0x3f90>
  40212c:	add    rax,rcx
  40212f:	inc    rcx
  402132:	mov    edx,r14d
  402135:	add    rsi,rcx
  402138:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	mov    BYTE PTR [rax],dl
  402142:	inc    rax
  402145:	cmp    rsi,rax
  402148:	jne    402140 <__sprintf_chk@plt+0xda0>
  40214a:	add    r12,0x10
  40214e:	lea    rax,[rip+0x4c9b]        # 406df0 <error@@Base+0x3bc0>
  402155:	cmp    r12,rax
  402158:	jne    4020e0 <__sprintf_chk@plt+0xd40>
  40215a:	add    rsp,0x8
  40215e:	pop    rbx
  40215f:	pop    rbp
  402160:	pop    r12
  402162:	pop    r13
  402164:	pop    r14
  402166:	pop    r15
  402168:	ret    
  402169:	mov    r14d,0x0
  40216f:	jne    402118 <__sprintf_chk@plt+0xd78>
  402171:	nop    DWORD PTR [rax+0x0]
  402178:	cmp    r13w,0x100
  40217e:	je     402196 <__sprintf_chk@plt+0xdf6>
  402180:	mov    rax,QWORD PTR [r12+0x8]
  402185:	inc    r13d
  402188:	mov    WORD PTR [rip+0x115830],r13w        # 5179c0 <error@@Base+0x114790>
  402190:	mov    QWORD PTR [r15+r14*8],rax
  402194:	jmp    402118 <__sprintf_chk@plt+0xd78>
  402196:	lea    rdi,[rip+0x2083]        # 404220 <error@@Base+0xff0>
  40219d:	xor    eax,eax
  40219f:	call   403230 <error@@Base>
  4021a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	cmp    WORD PTR [rip+0x115804],0x0        # 5179c0 <error@@Base+0x114790>
  4021bc:	je     4021d0 <__sprintf_chk@plt+0xe30>
  4021be:	mov    edi,edi
  4021c0:	lea    rax,[rip+0x4ff9]        # 4071c0 <error@@Base+0x3f90>
  4021c7:	movzx  eax,BYTE PTR [rax+rdi*1]
  4021cb:	ret    
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	sub    rsp,0x18
  4021d4:	xor    eax,eax
  4021d6:	mov    DWORD PTR [rsp+0xc],edi
  4021da:	call   4020c0 <__sprintf_chk@plt+0xd20>
  4021df:	mov    edi,DWORD PTR [rsp+0xc]
  4021e3:	lea    rax,[rip+0x4fd6]        # 4071c0 <error@@Base+0x3f90>
  4021ea:	mov    edi,edi
  4021ec:	movzx  eax,BYTE PTR [rax+rdi*1]
  4021f0:	add    rsp,0x18
  4021f4:	ret    
  4021f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402200:	endbr64 
  402204:	sub    rsp,0x18
  402208:	movsx  eax,WORD PTR [rip+0x1157b1]        # 5179c0 <error@@Base+0x114790>
  40220f:	test   ax,ax
  402212:	je     402230 <__sprintf_chk@plt+0xe90>
  402214:	movzx  edi,dil
  402218:	cmp    edi,eax
  40221a:	jge    402246 <__sprintf_chk@plt+0xea6>
  40221c:	lea    rax,[rip+0x114f9d]        # 5171c0 <error@@Base+0x113f90>
  402223:	mov    rax,QWORD PTR [rax+rdi*8]
  402227:	add    rsp,0x18
  40222b:	ret    
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	mov    DWORD PTR [rsp+0xc],edi
  402234:	call   4020c0 <__sprintf_chk@plt+0xd20>
  402239:	movsx  eax,WORD PTR [rip+0x115780]        # 5179c0 <error@@Base+0x114790>
  402240:	mov    edi,DWORD PTR [rsp+0xc]
  402244:	jmp    402214 <__sprintf_chk@plt+0xe74>
  402246:	lea    rdi,[rip+0x1fee]        # 40423b <error@@Base+0x100b>
  40224d:	xor    eax,eax
  40224f:	call   403230 <error@@Base>
  402254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40225e:	xchg   ax,ax
  402260:	endbr64 
  402264:	test   rsi,rsi
  402267:	je     4022c2 <__sprintf_chk@plt+0xf22>
  402269:	mov    rax,rsi
  40226c:	sub    rax,rdx
  40226f:	vxorpd xmm1,xmm1,xmm1
  402273:	vcvtsi2sd xmm1,xmm1,rax
  402278:	vxorpd xmm0,xmm0,xmm0
  40227c:	vcvtsi2sd xmm0,xmm0,rsi
  402281:	xor    eax,eax
  402283:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x1f8d]        # 404218 <error@@Base+0xfe8>
  40228b:	vdivsd xmm1,xmm1,xmm0
  40228f:	vcomisd xmm1,QWORD PTR [rip+0x2581]        # 404818 <error@@Base+0x15e8>
  402297:	jb     4022bb <__sprintf_chk@plt+0xf1b>
  402299:	nop    DWORD PTR [rax+0x0]
  4022a0:	movsx  rdx,ax
  4022a4:	inc    eax
  4022a6:	add    QWORD PTR [rdi+rdx*8],rsi
  4022aa:	vxorpd xmm0,xmm0,xmm0
  4022ae:	movsx  edx,ax
  4022b1:	vcvtsi2sd xmm0,xmm0,edx
  4022b5:	vcomisd xmm1,xmm0
  4022b9:	jae    4022a0 <__sprintf_chk@plt+0xf00>
  4022bb:	add    QWORD PTR [rdi+0x328],rsi
  4022c2:	ret    
  4022c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022ce:	xchg   ax,ax
  4022d0:	endbr64 
  4022d4:	cmp    QWORD PTR [rdi+0x328],0x0
  4022dc:	jne    4022df <__sprintf_chk@plt+0xf3f>
  4022de:	ret    
  4022df:	push   r13
  4022e1:	xor    eax,eax
  4022e3:	lea    r13,[rip+0x251e]        # 404808 <error@@Base+0x15d8>
  4022ea:	push   r12
  4022ec:	push   rbp
  4022ed:	mov    rbp,rdi
  4022f0:	mov    rdi,rsi
  4022f3:	push   rbx
  4022f4:	lea    rsi,[rip+0x2115]        # 404410 <error@@Base+0x11e0>
  4022fb:	xor    ebx,ebx
  4022fd:	sub    rsp,0x8
  402301:	call   403330 <error@@Base+0x100>
  402306:	mov    r12,rax
  402309:	nop    DWORD PTR [rax+0x0]
  402310:	vxorpd xmm0,xmm0,xmm0
  402314:	vcvtsi2sd xmm0,xmm0,QWORD PTR [rbp+rbx*8+0x0]
  40231b:	vxorpd xmm1,xmm1,xmm1
  40231f:	vcvtsi2sd xmm1,xmm1,QWORD PTR [rbp+0x328]
  402328:	mov    ecx,ebx
  40232a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1ee6]        # 404218 <error@@Base+0xfe8>
  402332:	mov    rdx,r13
  402335:	mov    esi,0x1
  40233a:	mov    rdi,r12
  40233d:	mov    eax,0x1
  402342:	vdivsd xmm0,xmm0,xmm1
  402346:	inc    rbx
  402349:	call   401360 <__fprintf_chk@plt>
  40234e:	cmp    rbx,0x65
  402352:	jne    402310 <__sprintf_chk@plt+0xf70>
  402354:	add    rsp,0x8
  402358:	pop    rbx
  402359:	pop    rbp
  40235a:	mov    rdi,r12
  40235d:	pop    r12
  40235f:	xor    eax,eax
  402361:	pop    r13
  402363:	jmp    4030a0 <__sprintf_chk@plt+0x1d00>
  402368:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	push   r15
  402372:	mov    rax,rsi
  402375:	shl    rax,0x3
  402379:	push   r14
  40237b:	push   r13
  40237d:	mov    r13,rdi
  402380:	push   r12
  402382:	push   rbp
  402383:	push   rbx
  402384:	sub    rsp,0x18
  402388:	mov    QWORD PTR [rsp],rsi
  40238c:	mov    QWORD PTR [rsp+0x8],rax
  402391:	mov    rax,QWORD PTR [rip+0x115638]        # 5179d0 <error@@Base+0x1147a0>
  402398:	mov    rdx,QWORD PTR [rsp]
  40239c:	mov    rbx,QWORD PTR [rax+r13*8]
  4023a0:	mov    r15,rdx
  4023a3:	mov    rbp,r13
  4023a6:	cmp    r13,rdx
  4023a9:	jge    4024c3 <__sprintf_chk@plt+0x1123>
  4023af:	nop
  4023b0:	mov    rsi,QWORD PTR [rax+r15*8]
  4023b4:	mov    rdi,rbx
  4023b7:	xor    eax,eax
  4023b9:	lea    r12,[r15*8+0x0]
  4023c1:	call   QWORD PTR [rip+0x115601]        # 5179c8 <error@@Base+0x114798>
  4023c7:	test   eax,eax
  4023c9:	jns    402468 <__sprintf_chk@plt+0x10c8>
  4023cf:	dec    r15
  4023d2:	mov    rax,QWORD PTR [rip+0x1155f7]        # 5179d0 <error@@Base+0x1147a0>
  4023d9:	lea    r12,[r15*8+0x0]
  4023e1:	cmp    rbp,r15
  4023e4:	jl     4023b0 <__sprintf_chk@plt+0x1010>
  4023e6:	lea    rsi,[rax+r12*1]
  4023ea:	cmp    r15,rbp
  4023ed:	je     40247f <__sprintf_chk@plt+0x10df>
  4023f3:	mov    rsi,QWORD PTR [rsi]
  4023f6:	lea    r14,[rbp+0x1]
  4023fa:	lea    rdi,[rbp*8+0x0]
  402402:	mov    QWORD PTR [rax+rbp*8],rsi
  402406:	cmp    r15,r14
  402409:	jg     40241f <__sprintf_chk@plt+0x107f>
  40240b:	jmp    4024ab <__sprintf_chk@plt+0x110b>
  402410:	inc    r14
  402413:	mov    rax,QWORD PTR [rip+0x1155b6]        # 5179d0 <error@@Base+0x1147a0>
  40241a:	cmp    r15,r14
  40241d:	je     402478 <__sprintf_chk@plt+0x10d8>
  40241f:	mov    rsi,QWORD PTR [rax+r14*8]
  402423:	mov    rdi,rbx
  402426:	xor    eax,eax
  402428:	lea    rbp,[r14*8+0x0]
  402430:	call   QWORD PTR [rip+0x115592]        # 5179c8 <error@@Base+0x114798>
  402436:	test   eax,eax
  402438:	jg     402410 <__sprintf_chk@plt+0x1070>
  40243a:	mov    rax,QWORD PTR [rip+0x11558f]        # 5179d0 <error@@Base+0x1147a0>
  402441:	lea    rsi,[rax+rbp*1]
  402445:	mov    rbp,r14
  402448:	mov    rsi,QWORD PTR [rsi]
  40244b:	dec    r15
  40244e:	mov    QWORD PTR [rax+r12*1],rsi
  402452:	cmp    r15,r14
  402455:	jg     4023b0 <__sprintf_chk@plt+0x1010>
  40245b:	lea    rsi,[rax+r15*8]
  40245f:	jmp    402482 <__sprintf_chk@plt+0x10e2>
  402461:	nop    DWORD PTR [rax+0x0]
  402468:	mov    rax,QWORD PTR [rip+0x115561]        # 5179d0 <error@@Base+0x1147a0>
  40246f:	jmp    4023e6 <__sprintf_chk@plt+0x1046>
  402474:	nop    DWORD PTR [rax+0x0]
  402478:	lea    rsi,[rax+r15*8]
  40247c:	mov    rbp,r15
  40247f:	mov    r15,rbp
  402482:	mov    QWORD PTR [rsi],rbx
  402485:	lea    rsi,[r15-0x1]
  402489:	cmp    r13,rsi
  40248c:	jl     4024b7 <__sprintf_chk@plt+0x1117>
  40248e:	lea    r13,[rbp+0x1]
  402492:	cmp    r13,QWORD PTR [rsp]
  402496:	jl     402391 <__sprintf_chk@plt+0xff1>
  40249c:	add    rsp,0x18
  4024a0:	pop    rbx
  4024a1:	pop    rbp
  4024a2:	pop    r12
  4024a4:	pop    r13
  4024a6:	pop    r14
  4024a8:	pop    r15
  4024aa:	ret    
  4024ab:	lea    rsi,[rax+rdi*1+0x8]
  4024b0:	je     40247c <__sprintf_chk@plt+0x10dc>
  4024b2:	mov    rbp,r14
  4024b5:	jmp    402448 <__sprintf_chk@plt+0x10a8>
  4024b7:	mov    rdi,r13
  4024ba:	xor    eax,eax
  4024bc:	call   402370 <__sprintf_chk@plt+0xfd0>
  4024c1:	jmp    40248e <__sprintf_chk@plt+0x10ee>
  4024c3:	mov    rcx,QWORD PTR [rsp+0x8]
  4024c8:	mov    r15,QWORD PTR [rsp]
  4024cc:	lea    rsi,[rax+rcx*1]
  4024d0:	jmp    402482 <__sprintf_chk@plt+0x10e2>
  4024d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4024dd:	nop    DWORD PTR [rax]
  4024e0:	endbr64 
  4024e4:	cmp    rdi,0x1
  4024e8:	jle    402508 <__sprintf_chk@plt+0x1168>
  4024ea:	mov    QWORD PTR [rip+0x1154df],rsi        # 5179d0 <error@@Base+0x1147a0>
  4024f1:	xor    eax,eax
  4024f3:	lea    rsi,[rdi-0x1]
  4024f7:	xor    edi,edi
  4024f9:	mov    QWORD PTR [rip+0x1154c8],rdx        # 5179c8 <error@@Base+0x114798>
  402500:	jmp    402370 <__sprintf_chk@plt+0xfd0>
  402505:	nop    DWORD PTR [rax]
  402508:	ret    
  402509:	nop    DWORD PTR [rax+0x0]
  402510:	endbr64 
  402514:	push   r12
  402516:	mov    r12,rdi
  402519:	push   rbp
  40251a:	lea    rbp,[rdi+0x3ee0]
  402521:	push   rbx
  402522:	mov    rbx,rdi
  402525:	nop    DWORD PTR [rax]
  402528:	mov    rdi,rbx
  40252b:	xor    eax,eax
  40252d:	add    rbx,0x20
  402531:	call   403680 <error@@Base+0x450>
  402536:	cmp    rbx,rbp
  402539:	jne    402528 <__sprintf_chk@plt+0x1188>
  40253b:	pop    rbx
  40253c:	pop    rbp
  40253d:	mov    QWORD PTR [r12+0x3ee0],0x0
  402549:	mov    QWORD PTR [r12+0x3ee8],0x0
  402555:	pop    r12
  402557:	ret    
  402558:	nop    DWORD PTR [rax+rax*1+0x0]
  402560:	endbr64 
  402564:	push   rbp
  402565:	mov    rbp,rsi
  402568:	push   rbx
  402569:	sub    rsp,0x8
  40256d:	movzx  eax,BYTE PTR [rsi]
  402570:	test   al,al
  402572:	je     4025e8 <__sprintf_chk@plt+0x1248>
  402574:	lea    rdx,[rsi+0x1]
  402578:	xor    ecx,ecx
  40257a:	nop    WORD PTR [rax+rax*1+0x0]
  402580:	inc    rdx
  402583:	add    rcx,rax
  402586:	movzx  eax,BYTE PTR [rdx-0x1]
  40258a:	test   al,al
  40258c:	jne    402580 <__sprintf_chk@plt+0x11e0>
  40258e:	mov    rax,rcx
  402591:	movabs rdx,0x824a4e60b3262bc5
  40259b:	mul    rdx
  40259e:	shr    rdx,0x8
  4025a2:	imul   rdx,rdx,0x1f7
  4025a9:	sub    ecx,edx
  4025ab:	movsxd rcx,ecx
  4025ae:	shl    rcx,0x5
  4025b2:	mov    rbx,QWORD PTR [rdi+rcx*1]
  4025b6:	test   rbx,rbx
  4025b9:	jne    4025c9 <__sprintf_chk@plt+0x1229>
  4025bb:	jmp    4025d9 <__sprintf_chk@plt+0x1239>
  4025bd:	nop    DWORD PTR [rax]
  4025c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4025c4:	test   rbx,rbx
  4025c7:	je     4025d9 <__sprintf_chk@plt+0x1239>
  4025c9:	mov    rsi,QWORD PTR [rbx+0x10]
  4025cd:	mov    rdi,rbp
  4025d0:	call   4012d0 <strcmp@plt>
  4025d5:	test   eax,eax
  4025d7:	jne    4025c0 <__sprintf_chk@plt+0x1220>
  4025d9:	add    rsp,0x8
  4025dd:	mov    rax,rbx
  4025e0:	pop    rbx
  4025e1:	pop    rbp
  4025e2:	ret    
  4025e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e8:	xor    ecx,ecx
  4025ea:	jmp    4025ab <__sprintf_chk@plt+0x120b>
  4025ec:	nop    DWORD PTR [rax+0x0]
  4025f0:	endbr64 
  4025f4:	push   rbx
  4025f5:	mov    rdx,QWORD PTR [rsi+0x10]
  4025f9:	mov    rbx,rdi
  4025fc:	movzx  eax,BYTE PTR [rdx]
  4025ff:	test   al,al
  402601:	je     402643 <__sprintf_chk@plt+0x12a3>
  402603:	inc    rdx
  402606:	xor    edi,edi
  402608:	nop    DWORD PTR [rax+rax*1+0x0]
  402610:	inc    rdx
  402613:	add    rdi,rax
  402616:	movzx  eax,BYTE PTR [rdx-0x1]
  40261a:	test   al,al
  40261c:	jne    402610 <__sprintf_chk@plt+0x1270>
  40261e:	mov    rax,rdi
  402621:	movabs rdx,0x824a4e60b3262bc5
  40262b:	mul    rdx
  40262e:	shr    rdx,0x8
  402632:	imul   rdx,rdx,0x1f7
  402639:	sub    rdi,rdx
  40263c:	shl    rdi,0x5
  402640:	add    rdi,rbx
  402643:	xor    eax,eax
  402645:	call   4036b0 <error@@Base+0x480>
  40264a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402651:	test   rdi,rdi
  402654:	je     402666 <__sprintf_chk@plt+0x12c6>
  402656:	call   4011f0 <free@plt>
  40265b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402666:	inc    QWORD PTR [rbx+0x3ee8]
  40266d:	pop    rbx
  40266e:	ret    
  40266f:	nop
  402670:	endbr64 
  402674:	push   rbx
  402675:	mov    rdx,QWORD PTR [rsi+0x10]
  402679:	mov    rbx,rdi
  40267c:	movzx  eax,BYTE PTR [rdx]
  40267f:	test   al,al
  402681:	je     4026c3 <__sprintf_chk@plt+0x1323>
  402683:	inc    rdx
  402686:	xor    edi,edi
  402688:	nop    DWORD PTR [rax+rax*1+0x0]
  402690:	inc    rdx
  402693:	add    rdi,rax
  402696:	movzx  eax,BYTE PTR [rdx-0x1]
  40269a:	test   al,al
  40269c:	jne    402690 <__sprintf_chk@plt+0x12f0>
  40269e:	mov    rax,rdi
  4026a1:	movabs rdx,0x824a4e60b3262bc5
  4026ab:	mul    rdx
  4026ae:	shr    rdx,0x8
  4026b2:	imul   rdx,rdx,0x1f7
  4026b9:	sub    rdi,rdx
  4026bc:	shl    rdi,0x5
  4026c0:	add    rdi,rbx
  4026c3:	xor    eax,eax
  4026c5:	call   4037f0 <error@@Base+0x5c0>
  4026ca:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  4026d1:	test   rdi,rdi
  4026d4:	je     4026e6 <__sprintf_chk@plt+0x1346>
  4026d6:	call   4011f0 <free@plt>
  4026db:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4026e6:	dec    QWORD PTR [rbx+0x3ee8]
  4026ed:	pop    rbx
  4026ee:	ret    
  4026ef:	nop
  4026f0:	endbr64 
  4026f4:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  4026fc:	je     4026ff <__sprintf_chk@plt+0x135f>
  4026fe:	ret    
  4026ff:	mov    rax,QWORD PTR [rdi+0x3ee8]
  402706:	test   rax,rax
  402709:	je     4026fe <__sprintf_chk@plt+0x135e>
  40270b:	push   rbx
  40270c:	mov    esi,0x8
  402711:	mov    rbx,rdi
  402714:	mov    rdi,rax
  402717:	xor    eax,eax
  402719:	call   403280 <error@@Base+0x50>
  40271e:	mov    QWORD PTR [rbx+0x3ee0],rax
  402725:	mov    rsi,rbx
  402728:	lea    rdi,[rbx+0x3ee0]
  40272f:	xor    ecx,ecx
  402731:	nop    DWORD PTR [rax+0x0]
  402738:	mov    rdx,QWORD PTR [rsi]
  40273b:	test   rdx,rdx
  40273e:	je     402751 <__sprintf_chk@plt+0x13b1>
  402740:	inc    rcx
  402743:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402748:	mov    rdx,QWORD PTR [rdx+0x8]
  40274c:	test   rdx,rdx
  40274f:	jne    402740 <__sprintf_chk@plt+0x13a0>
  402751:	add    rsi,0x20
  402755:	cmp    rsi,rdi
  402758:	jne    402738 <__sprintf_chk@plt+0x1398>
  40275a:	pop    rbx
  40275b:	ret    
  40275c:	nop    DWORD PTR [rax+0x0]
  402760:	endbr64 
  402764:	push   r13
  402766:	mov    r13,rdi
  402769:	push   r12
  40276b:	mov    r12,rsi
  40276e:	push   rbp
  40276f:	lea    rbp,[rdi+0x3ee0]
  402776:	push   rbx
  402777:	mov    rbx,rdi
  40277a:	sub    rsp,0x8
  40277e:	xchg   ax,ax
  402780:	mov    rdi,rbx
  402783:	mov    rsi,r12
  402786:	xor    eax,eax
  402788:	add    rbx,0x20
  40278c:	call   4038b0 <error@@Base+0x680>
  402791:	cmp    rbx,rbp
  402794:	jne    402780 <__sprintf_chk@plt+0x13e0>
  402796:	mov    rdi,QWORD PTR [r13+0x3ee0]
  40279d:	test   rdi,rdi
  4027a0:	je     4027b2 <__sprintf_chk@plt+0x1412>
  4027a2:	call   4011f0 <free@plt>
  4027a7:	mov    QWORD PTR [r13+0x3ee0],0x0
  4027b2:	mov    QWORD PTR [r13+0x3ee8],0x0
  4027bd:	add    rsp,0x8
  4027c1:	pop    rbx
  4027c2:	pop    rbp
  4027c3:	pop    r12
  4027c5:	pop    r13
  4027c7:	ret    
  4027c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027d0:	endbr64 
  4027d4:	push   r12
  4027d6:	xor    eax,eax
  4027d8:	mov    r12d,esi
  4027db:	push   rbp
  4027dc:	mov    esi,0x18
  4027e1:	mov    ebp,edx
  4027e3:	push   rbx
  4027e4:	mov    rbx,rdi
  4027e7:	mov    edi,0x1
  4027ec:	call   403280 <error@@Base+0x50>
  4027f1:	mov    BYTE PTR [rax+0x10],r12b
  4027f5:	mov    DWORD PTR [rax+0x14],ebp
  4027f8:	mov    rdi,rbx
  4027fb:	mov    rsi,rax
  4027fe:	pop    rbx
  4027ff:	pop    rbp
  402800:	xor    eax,eax
  402802:	pop    r12
  402804:	jmp    403700 <error@@Base+0x4d0>
  402809:	nop    DWORD PTR [rax+0x0]
  402810:	endbr64 
  402814:	push   r15
  402816:	push   r14
  402818:	push   r13
  40281a:	push   r12
  40281c:	push   rbp
  40281d:	push   rbx
  40281e:	sub    rsp,0xb8
  402825:	mov    QWORD PTR [rsp+0x8],rdi
  40282a:	mov    QWORD PTR [rsp+0x20],rdx
  40282f:	mov    rdi,rsi
  402832:	mov    rsi,QWORD PTR fs:0x28
  40283b:	mov    QWORD PTR [rsp+0xa8],rsi
  402843:	xor    esi,esi
  402845:	cmp    BYTE PTR [rdx],0x0
  402848:	je     402853 <__sprintf_chk@plt+0x14b3>
  40284a:	test   rdi,rdi
  40284d:	je     402be5 <__sprintf_chk@plt+0x1845>
  402853:	mov    rax,QWORD PTR [rsp+0x8]
  402858:	lea    rsi,[rip+0x1ff1]        # 404850 <error@@Base+0x1620>
  40285f:	mov    rax,QWORD PTR [rax+0x8]
  402863:	mov    QWORD PTR [rsp+0x28],rax
  402868:	xor    eax,eax
  40286a:	call   403330 <error@@Base+0x100>
  40286f:	mov    r12,rax
  402872:	mov    rax,QWORD PTR [rsp+0x20]
  402877:	cmp    BYTE PTR [rax],0x0
  40287a:	jne    402b28 <__sprintf_chk@plt+0x1788>
  402880:	mov    rsi,QWORD PTR [rsp+0x20]
  402885:	mov    eax,0x5e
  40288a:	mov    ecx,DWORD PTR [rsi+0x4]
  40288d:	mov    rdi,r12
  402890:	test   ecx,ecx
  402892:	cmovne eax,ecx
  402895:	movzx  r15d,BYTE PTR [rsi+0x1]
  40289a:	mov    DWORD PTR [rsp+0x14],eax
  40289e:	call   401390 <getc@plt>
  4028a3:	cmp    eax,0xffffffff
  4028a6:	je     402997 <__sprintf_chk@plt+0x15f7>
  4028ac:	mov    rsi,QWORD PTR [rip+0x473d]        # 406ff0 <error@@Base+0x3dc0>
  4028b3:	movsxd rdx,eax
  4028b6:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  4028bb:	mov    rbx,rcx
  4028be:	test   rcx,rcx
  4028c1:	jle    402c12 <__sprintf_chk@plt+0x1872>
  4028c7:	lea    rsi,[rsp+0x3c]
  4028cc:	xor    ebp,ebp
  4028ce:	lea    r13,[rsp+0x40]
  4028d3:	mov    QWORD PTR [rsp+0x18],rsi
  4028d8:	jmp    40291e <__sprintf_chk@plt+0x157e>
  4028da:	nop    WORD PTR [rax+rax*1+0x0]
  4028e0:	mov    rdi,QWORD PTR [rsp+0x8]
  4028e5:	movsx  esi,bpl
  4028e9:	xor    eax,eax
  4028eb:	call   4027d0 <__sprintf_chk@plt+0x1430>
  4028f0:	mov    rdi,r12
  4028f3:	xor    ebp,ebp
  4028f5:	call   401390 <getc@plt>
  4028fa:	cmp    eax,0xffffffff
  4028fd:	je     402997 <__sprintf_chk@plt+0x15f7>
  402903:	mov    rcx,QWORD PTR [rip+0x46e6]        # 406ff0 <error@@Base+0x3dc0>
  40290a:	movsxd rdx,eax
  40290d:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  402912:	mov    rbx,rcx
  402915:	test   rcx,rcx
  402918:	jle    402c12 <__sprintf_chk@plt+0x1872>
  40291e:	mov    BYTE PTR [rsp+0x40],al
  402922:	cmp    rcx,0x1
  402926:	je     402950 <__sprintf_chk@plt+0x15b0>
  402928:	lea    r14,[rcx-0x1]
  40292c:	lea    rdi,[r13+0x1]
  402930:	mov    r8,r12
  402933:	mov    rcx,r14
  402936:	mov    edx,0x1
  40293b:	mov    esi,0x3
  402940:	call   401320 <__fread_chk@plt>
  402945:	cdqe   
  402947:	cmp    r14,rax
  40294a:	jne    402c20 <__sprintf_chk@plt+0x1880>
  402950:	mov    rdx,QWORD PTR [rsp+0x18]
  402955:	mov    esi,0x4
  40295a:	mov    rdi,r13
  40295d:	call   4012b0 <utf8proc_iterate@plt>
  402962:	cmp    eax,ebx
  402964:	jne    402c00 <__sprintf_chk@plt+0x1860>
  40296a:	mov    edx,DWORD PTR [rsp+0x3c]
  40296e:	test   r15b,r15b
  402971:	je     4028e0 <__sprintf_chk@plt+0x1540>
  402977:	cmp    DWORD PTR [rsp+0x14],edx
  40297b:	jne    4028e0 <__sprintf_chk@plt+0x1540>
  402981:	mov    rdi,r12
  402984:	mov    ebp,0x1
  402989:	call   401390 <getc@plt>
  40298e:	cmp    eax,0xffffffff
  402991:	jne    402903 <__sprintf_chk@plt+0x1563>
  402997:	xor    eax,eax
  402999:	mov    rdi,r12
  40299c:	call   4030a0 <__sprintf_chk@plt+0x1d00>
  4029a1:	mov    rax,QWORD PTR [rsp+0x20]
  4029a6:	cmp    BYTE PTR [rax+0x9],0x0
  4029aa:	je     402ab0 <__sprintf_chk@plt+0x1710>
  4029b0:	mov    rax,QWORD PTR [rsp+0x28]
  4029b5:	test   rax,rax
  4029b8:	je     402bd8 <__sprintf_chk@plt+0x1838>
  4029be:	mov    rbp,QWORD PTR [rax+0x8]
  4029c2:	test   rbp,rbp
  4029c5:	je     402ab0 <__sprintf_chk@plt+0x1710>
  4029cb:	mov    r12,rbp
  4029ce:	jmp    4029da <__sprintf_chk@plt+0x163a>
  4029d0:	mov    r12,QWORD PTR [r12+0x8]
  4029d5:	test   r12,r12
  4029d8:	je     402a23 <__sprintf_chk@plt+0x1683>
  4029da:	mov    ebx,DWORD PTR [r12+0x14]
  4029df:	mov    edi,ebx
  4029e1:	call   401210 <utf8proc_get_property@plt>
  4029e6:	cmp    ebx,0xd
  4029e9:	ja     402b10 <__sprintf_chk@plt+0x1770>
  4029ef:	cmp    ebx,0xb
  4029f2:	jae    402a10 <__sprintf_chk@plt+0x1670>
  4029f4:	cmp    ebx,0x9
  4029f7:	je     402a10 <__sprintf_chk@plt+0x1670>
  4029f9:	cmp    ebx,0xa
  4029fc:	je     4029d0 <__sprintf_chk@plt+0x1630>
  4029fe:	movsx  eax,WORD PTR [rax]
  402a01:	sub    eax,0x17
  402a04:	cmp    eax,0x2
  402a07:	ja     4029d0 <__sprintf_chk@plt+0x1630>
  402a09:	nop    DWORD PTR [rax+0x0]
  402a10:	mov    DWORD PTR [r12+0x14],0x20
  402a19:	mov    r12,QWORD PTR [r12+0x8]
  402a1e:	test   r12,r12
  402a21:	jne    4029da <__sprintf_chk@plt+0x163a>
  402a23:	mov    r13,QWORD PTR [rsp+0x8]
  402a28:	jmp    402a49 <__sprintf_chk@plt+0x16a9>
  402a2a:	nop    WORD PTR [rax+rax*1+0x0]
  402a30:	test   r12b,r12b
  402a33:	jne    402a3a <__sprintf_chk@plt+0x169a>
  402a35:	cmp    eax,0xa
  402a38:	je     402a90 <__sprintf_chk@plt+0x16f0>
  402a3a:	cmp    eax,0xa
  402a3d:	setne  r12b
  402a41:	mov    rbp,rbx
  402a44:	test   rbx,rbx
  402a47:	je     402ab0 <__sprintf_chk@plt+0x1710>
  402a49:	mov    eax,DWORD PTR [rbp+0x14]
  402a4c:	mov    rbx,QWORD PTR [rbp+0x8]
  402a50:	cmp    eax,0x20
  402a53:	jne    402a30 <__sprintf_chk@plt+0x1690>
  402a55:	test   r12b,r12b
  402a58:	je     402a70 <__sprintf_chk@plt+0x16d0>
  402a5a:	test   rbx,rbx
  402a5d:	je     402a70 <__sprintf_chk@plt+0x16d0>
  402a5f:	mov    edx,DWORD PTR [rbx+0x14]
  402a62:	cmp    edx,0x20
  402a65:	je     402a70 <__sprintf_chk@plt+0x16d0>
  402a67:	cmp    edx,0xa
  402a6a:	jne    402a3a <__sprintf_chk@plt+0x169a>
  402a6c:	nop    DWORD PTR [rax+0x0]
  402a70:	test   rbx,rbx
  402a73:	je     402a90 <__sprintf_chk@plt+0x16f0>
  402a75:	test   r12b,r12b
  402a78:	je     402a90 <__sprintf_chk@plt+0x16f0>
  402a7a:	cmp    DWORD PTR [rbx+0x14],0x20
  402a7e:	jne    402a90 <__sprintf_chk@plt+0x16f0>
  402a80:	movzx  eax,BYTE PTR [rbp+0x10]
  402a84:	or     BYTE PTR [rbx+0x10],al
  402a87:	nop    WORD PTR [rax+rax*1+0x0]
  402a90:	mov    rsi,rbp
  402a93:	mov    rdi,r13
  402a96:	xor    eax,eax
  402a98:	call   4037f0 <error@@Base+0x5c0>
  402a9d:	mov    rdi,rbp
  402aa0:	call   4011f0 <free@plt>
  402aa5:	mov    rbp,rbx
  402aa8:	test   rbx,rbx
  402aab:	jne    402a49 <__sprintf_chk@plt+0x16a9>
  402aad:	nop    DWORD PTR [rax]
  402ab0:	mov    rax,QWORD PTR [rsp+0x20]
  402ab5:	cmp    BYTE PTR [rax+0xa],0x0
  402ab9:	je     402ae4 <__sprintf_chk@plt+0x1744>
  402abb:	mov    rax,QWORD PTR [rsp+0x28]
  402ac0:	test   rax,rax
  402ac3:	je     402bc8 <__sprintf_chk@plt+0x1828>
  402ac9:	mov    rbx,QWORD PTR [rax+0x8]
  402acd:	jmp    402adf <__sprintf_chk@plt+0x173f>
  402acf:	nop
  402ad0:	mov    edi,DWORD PTR [rbx+0x14]
  402ad3:	call   401280 <utf8proc_tolower@plt>
  402ad8:	mov    DWORD PTR [rbx+0x14],eax
  402adb:	mov    rbx,QWORD PTR [rbx+0x8]
  402adf:	test   rbx,rbx
  402ae2:	jne    402ad0 <__sprintf_chk@plt+0x1730>
  402ae4:	mov    rax,QWORD PTR [rsp+0xa8]
  402aec:	xor    rax,QWORD PTR fs:0x28
  402af5:	jne    402c2e <__sprintf_chk@plt+0x188e>
  402afb:	add    rsp,0xb8
  402b02:	pop    rbx
  402b03:	pop    rbp
  402b04:	pop    r12
  402b06:	pop    r13
  402b08:	pop    r14
  402b0a:	pop    r15
  402b0c:	ret    
  402b0d:	nop    DWORD PTR [rax]
  402b10:	cmp    ebx,0xa0
  402b16:	jne    4029fe <__sprintf_chk@plt+0x165e>
  402b1c:	jmp    402a10 <__sprintf_chk@plt+0x1670>
  402b21:	nop    DWORD PTR [rax+0x0]
  402b28:	lea    r13,[rsp+0x40]
  402b2d:	mov    rdx,r12
  402b30:	mov    esi,0x63
  402b35:	mov    rdi,r13
  402b38:	call   4012a0 <fgets@plt>
  402b3d:	test   rax,rax
  402b40:	je     402b5c <__sprintf_chk@plt+0x17bc>
  402b42:	mov    ecx,0x33
  402b47:	lea    rdi,[rip+0x1d4a]        # 404898 <error@@Base+0x1668>
  402b4e:	mov    rsi,r13
  402b51:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402b53:	seta   al
  402b56:	sbb    al,0x0
  402b58:	test   al,al
  402b5a:	je     402b78 <__sprintf_chk@plt+0x17d8>
  402b5c:	mov    rdi,r12
  402b5f:	call   401270 <rewind@plt>
  402b64:	xor    eax,eax
  402b66:	mov    rsi,QWORD PTR [rsp+0x20]
  402b6b:	mov    BYTE PTR [rsi+0xb],al
  402b6e:	jmp    402880 <__sprintf_chk@plt+0x14e0>
  402b73:	nop    DWORD PTR [rax+rax*1+0x0]
  402b78:	xor    ebx,ebx
  402b7a:	lea    rbp,[rip+0x1d4f]        # 4048d0 <error@@Base+0x16a0>
  402b81:	nop    DWORD PTR [rax+0x0]
  402b88:	mov    rdx,r12
  402b8b:	mov    esi,0x63
  402b90:	mov    rdi,r13
  402b93:	call   4012a0 <fgets@plt>
  402b98:	test   rax,rax
  402b9b:	je     402bbb <__sprintf_chk@plt+0x181b>
  402b9d:	mov    ecx,0x38
  402ba2:	mov    rsi,r13
  402ba5:	mov    rdi,rbp
  402ba8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402baa:	seta   al
  402bad:	sbb    al,0x0
  402baf:	test   al,al
  402bb1:	jne    402b88 <__sprintf_chk@plt+0x17e8>
  402bb3:	inc    ebx
  402bb5:	cmp    bx,0x2
  402bb9:	jne    402b88 <__sprintf_chk@plt+0x17e8>
  402bbb:	mov    eax,0x1
  402bc0:	jmp    402b66 <__sprintf_chk@plt+0x17c6>
  402bc2:	nop    WORD PTR [rax+rax*1+0x0]
  402bc8:	mov    rax,QWORD PTR [rsp+0x8]
  402bcd:	mov    rbx,QWORD PTR [rax]
  402bd0:	jmp    402adf <__sprintf_chk@plt+0x173f>
  402bd5:	nop    DWORD PTR [rax]
  402bd8:	mov    rax,QWORD PTR [rsp+0x8]
  402bdd:	mov    rbp,QWORD PTR [rax]
  402be0:	jmp    4029c2 <__sprintf_chk@plt+0x1622>
  402be5:	lea    rsi,[rip+0x1c34]        # 404820 <error@@Base+0x15f0>
  402bec:	lea    rdi,[rip+0x1c37]        # 40482a <error@@Base+0x15fa>
  402bf3:	xor    eax,eax
  402bf5:	call   4032e0 <error@@Base+0xb0>
  402bfa:	nop    WORD PTR [rax+rax*1+0x0]
  402c00:	movsxd rdi,eax
  402c03:	call   401370 <utf8proc_errmsg@plt>
  402c08:	mov    rdi,rax
  402c0b:	xor    eax,eax
  402c0d:	call   403230 <error@@Base>
  402c12:	lea    rdi,[rip+0x1c21]        # 40483a <error@@Base+0x160a>
  402c19:	xor    eax,eax
  402c1b:	call   403230 <error@@Base>
  402c20:	lea    rdi,[rip+0x1c2b]        # 404852 <error@@Base+0x1622>
  402c27:	xor    eax,eax
  402c29:	call   403230 <error@@Base>
  402c2e:	call   401260 <__stack_chk_fail@plt>
  402c33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c3e:	xchg   ax,ax
  402c40:	endbr64 
  402c44:	sub    rsp,0x8
  402c48:	call   401220 <utf8proc_encode_char@plt>
  402c4d:	test   rax,rax
  402c50:	jle    402c57 <__sprintf_chk@plt+0x18b7>
  402c52:	add    rsp,0x8
  402c56:	ret    
  402c57:	lea    rdi,[rip+0x1c0c]        # 40486a <error@@Base+0x163a>
  402c5e:	xor    eax,eax
  402c60:	call   403230 <error@@Base>
  402c65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c70:	endbr64 
  402c74:	push   r13
  402c76:	xor    r13d,r13d
  402c79:	push   r12
  402c7b:	mov    r12,rdx
  402c7e:	push   rbp
  402c7f:	mov    ebp,esi
  402c81:	push   rbx
  402c82:	mov    rbx,rdx
  402c85:	sub    rsp,0x18
  402c89:	test   dil,dil
  402c8c:	jne    402d88 <__sprintf_chk@plt+0x19e8>
  402c92:	cmp    ebp,0xa
  402c95:	jne    402cd0 <__sprintf_chk@plt+0x1930>
  402c97:	test   cl,cl
  402c99:	lea    rax,[rip+0x13fe]        # 40409e <error@@Base+0xe6e>
  402ca0:	lea    rcx,[rip+0x1bda]        # 404881 <error@@Base+0x1651>
  402ca7:	cmove  rcx,rax
  402cab:	add    rsp,0x18
  402caf:	mov    rdi,rbx
  402cb2:	pop    rbx
  402cb3:	pop    rbp
  402cb4:	pop    r12
  402cb6:	mov    rdx,0xffffffffffffffff
  402cbd:	mov    esi,0x1
  402cc2:	xor    eax,eax
  402cc4:	pop    r13
  402cc6:	jmp    4013a0 <__sprintf_chk@plt>
  402ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd0:	mov    edi,ebp
  402cd2:	call   401210 <utf8proc_get_property@plt>
  402cd7:	cmp    ebp,0x20
  402cda:	je     402cf6 <__sprintf_chk@plt+0x1956>
  402cdc:	movzx  eax,WORD PTR [rax]
  402cdf:	cmp    ax,0x1d
  402ce3:	ja     402d48 <__sprintf_chk@plt+0x19a8>
  402ce5:	mov    edx,0x1
  402cea:	shlx   rax,rdx,rax
  402cef:	test   eax,0x207ffffe
  402cf4:	je     402d48 <__sprintf_chk@plt+0x19a8>
  402cf6:	mov    edi,ebp
  402cf8:	call   4012f0 <utf8proc_category@plt>
  402cfd:	sub    eax,0x6
  402d00:	cmp    eax,0x2
  402d03:	ja     402d20 <__sprintf_chk@plt+0x1980>
  402d05:	mov    rsi,rbx
  402d08:	mov    edi,0x25cc
  402d0d:	xor    eax,eax
  402d0f:	call   402c40 <__sprintf_chk@plt+0x18a0>
  402d14:	cbw    
  402d16:	add    r13d,eax
  402d19:	movsx  rbx,r13w
  402d1d:	add    rbx,r12
  402d20:	mov    rsi,rbx
  402d23:	mov    edi,ebp
  402d25:	xor    eax,eax
  402d27:	call   402c40 <__sprintf_chk@plt+0x18a0>
  402d2c:	cbw    
  402d2e:	add    r13d,eax
  402d31:	movsx  r13,r13w
  402d35:	mov    BYTE PTR [r12+r13*1],0x0
  402d3a:	add    rsp,0x18
  402d3e:	pop    rbx
  402d3f:	pop    rbp
  402d40:	pop    r12
  402d42:	pop    r13
  402d44:	ret    
  402d45:	nop    DWORD PTR [rax]
  402d48:	mov    r8d,ebp
  402d4b:	lea    rcx,[rip+0x1b34]        # 404886 <error@@Base+0x1656>
  402d52:	cmp    ebp,0xff
  402d58:	jbe    402d61 <__sprintf_chk@plt+0x19c1>
  402d5a:	lea    rcx,[rip+0x1b2c]        # 40488d <error@@Base+0x165d>
  402d61:	add    rsp,0x18
  402d65:	mov    rdi,rbx
  402d68:	pop    rbx
  402d69:	pop    rbp
  402d6a:	pop    r12
  402d6c:	mov    rdx,0xffffffffffffffff
  402d73:	mov    esi,0x1
  402d78:	xor    eax,eax
  402d7a:	pop    r13
  402d7c:	jmp    4013a0 <__sprintf_chk@plt>
  402d81:	nop    DWORD PTR [rax+0x0]
  402d88:	mov    rsi,rdx
  402d8b:	mov    edi,0x5e
  402d90:	xor    eax,eax
  402d92:	mov    DWORD PTR [rsp+0xc],ecx
  402d96:	call   402c40 <__sprintf_chk@plt+0x18a0>
  402d9b:	movsx  r13w,al
  402da0:	movsx  rax,al
  402da4:	lea    rbx,[r12+rax*1]
  402da8:	mov    ecx,DWORD PTR [rsp+0xc]
  402dac:	jmp    402c92 <__sprintf_chk@plt+0x18f2>
  402db1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402dbc:	nop    DWORD PTR [rax+0x0]
  402dc0:	endbr64 
  402dc4:	push   r12
  402dc6:	push   rbp
  402dc7:	mov    rbp,rdi
  402dca:	mov    rdi,rsi
  402dcd:	push   rbx
  402dce:	lea    rsi,[rip+0x163b]        # 404410 <error@@Base+0x11e0>
  402dd5:	mov    rbx,rdx
  402dd8:	sub    rsp,0x20
  402ddc:	mov    rax,QWORD PTR fs:0x28
  402de5:	mov    QWORD PTR [rsp+0x18],rax
  402dea:	xor    eax,eax
  402dec:	call   403330 <error@@Base+0x100>
  402df1:	mov    r12,rax
  402df4:	test   rbx,rbx
  402df7:	je     402e4b <__sprintf_chk@plt+0x1aab>
  402df9:	mov    rcx,rax
  402dfc:	mov    edx,0x37
  402e01:	mov    esi,0x1
  402e06:	lea    rdi,[rip+0x1a8b]        # 404898 <error@@Base+0x1668>
  402e0d:	call   401350 <fwrite@plt>
  402e12:	mov    rcx,r12
  402e15:	mov    edx,0x37
  402e1a:	mov    esi,0x1
  402e1f:	lea    rdi,[rip+0x1aaa]        # 4048d0 <error@@Base+0x16a0>
  402e26:	call   401350 <fwrite@plt>
  402e2b:	mov    rdi,r12
  402e2e:	xor    eax,eax
  402e30:	call   rbx
  402e32:	mov    rcx,r12
  402e35:	mov    edx,0x37
  402e3a:	mov    esi,0x1
  402e3f:	lea    rdi,[rip+0x1a8a]        # 4048d0 <error@@Base+0x16a0>
  402e46:	call   401350 <fwrite@plt>
  402e4b:	mov    rbx,QWORD PTR [rbp+0x0]
  402e4f:	test   rbx,rbx
  402e52:	je     402e87 <__sprintf_chk@plt+0x1ae7>
  402e54:	lea    rbp,[rsp+0xf]
  402e59:	nop    DWORD PTR [rax+0x0]
  402e60:	mov    esi,DWORD PTR [rbx+0x14]
  402e63:	movsx  edi,BYTE PTR [rbx+0x10]
  402e67:	xor    ecx,ecx
  402e69:	mov    rdx,rbp
  402e6c:	xor    eax,eax
  402e6e:	call   402c70 <__sprintf_chk@plt+0x18d0>
  402e73:	mov    rsi,r12
  402e76:	mov    rdi,rbp
  402e79:	call   401290 <fputs@plt>
  402e7e:	mov    rbx,QWORD PTR [rbx+0x8]
  402e82:	test   rbx,rbx
  402e85:	jne    402e60 <__sprintf_chk@plt+0x1ac0>
  402e87:	xor    eax,eax
  402e89:	mov    rdi,r12
  402e8c:	call   4030a0 <__sprintf_chk@plt+0x1d00>
  402e91:	mov    rax,QWORD PTR [rsp+0x18]
  402e96:	xor    rax,QWORD PTR fs:0x28
  402e9f:	jne    402eaa <__sprintf_chk@plt+0x1b0a>
  402ea1:	add    rsp,0x20
  402ea5:	pop    rbx
  402ea6:	pop    rbp
  402ea7:	pop    r12
  402ea9:	ret    
  402eaa:	call   401260 <__stack_chk_fail@plt>
  402eaf:	nop
  402eb0:	endbr64 
  402eb4:	push   r14
  402eb6:	push   r13
  402eb8:	push   r12
  402eba:	push   rbp
  402ebb:	push   rbx
  402ebc:	sub    rsp,0x10
  402ec0:	mov    rax,QWORD PTR fs:0x28
  402ec9:	mov    QWORD PTR [rsp+0x8],rax
  402ece:	xor    eax,eax
  402ed0:	cmp    BYTE PTR [rsi],0x0
  402ed3:	mov    DWORD PTR [rsp+0x4],0x0
  402edb:	je     402f30 <__sprintf_chk@plt+0x1b90>
  402edd:	mov    r14,rdi
  402ee0:	mov    rbp,rsi
  402ee3:	lea    r13,[rsp+0x4]
  402ee8:	mov    r12,0xffffffffffffffff
  402eef:	jmp    402f14 <__sprintf_chk@plt+0x1b74>
  402ef1:	nop    DWORD PTR [rax+0x0]
  402ef8:	mov    edx,DWORD PTR [rsp+0x4]
  402efc:	movsxd rbx,ebx
  402eff:	xor    esi,esi
  402f01:	xor    eax,eax
  402f03:	mov    rdi,r14
  402f06:	add    rbp,rbx
  402f09:	call   4027d0 <__sprintf_chk@plt+0x1430>
  402f0e:	cmp    BYTE PTR [rbp+0x0],0x0
  402f12:	je     402f30 <__sprintf_chk@plt+0x1b90>
  402f14:	mov    rdx,r13
  402f17:	mov    rsi,r12
  402f1a:	mov    rdi,rbp
  402f1d:	call   4012b0 <utf8proc_iterate@plt>
  402f22:	mov    rbx,rax
  402f25:	test   eax,eax
  402f27:	jg     402ef8 <__sprintf_chk@plt+0x1b58>
  402f29:	xor    eax,eax
  402f2b:	jmp    402f35 <__sprintf_chk@plt+0x1b95>
  402f2d:	nop    DWORD PTR [rax]
  402f30:	mov    eax,0x1
  402f35:	mov    rcx,QWORD PTR [rsp+0x8]
  402f3a:	xor    rcx,QWORD PTR fs:0x28
  402f43:	jne    402f52 <__sprintf_chk@plt+0x1bb2>
  402f45:	add    rsp,0x10
  402f49:	pop    rbx
  402f4a:	pop    rbp
  402f4b:	pop    r12
  402f4d:	pop    r13
  402f4f:	pop    r14
  402f51:	ret    
  402f52:	call   401260 <__stack_chk_fail@plt>
  402f57:	nop    WORD PTR [rax+rax*1+0x0]
  402f60:	push   rbp
  402f61:	push   rbx
  402f62:	mov    ebx,edi
  402f64:	movsx  ebx,bx
  402f67:	sub    rsp,0x78
  402f6b:	mov    rax,QWORD PTR fs:0x28
  402f74:	mov    QWORD PTR [rsp+0x68],rax
  402f79:	xor    eax,eax
  402f7b:	mov    rbp,rsp
  402f7e:	call   401230 <getpid@plt>
  402f83:	mov    r9d,eax
  402f86:	sub    rsp,0x8
  402f8a:	mov    rax,0x161cc98
  402f91:	push   rbx
  402f92:	mov    r8,QWORD PTR [rax]
  402f95:	lea    rcx,[rip+0x196c]        # 404908 <error@@Base+0x16d8>
  402f9c:	mov    edx,0x64
  402fa1:	mov    esi,0x1
  402fa6:	mov    rdi,rbp
  402fa9:	xor    eax,eax
  402fab:	call   4013a0 <__sprintf_chk@plt>
  402fb0:	mov    rdi,rbp
  402fb3:	call   401380 <strdup@plt>
  402fb8:	pop    rdx
  402fb9:	pop    rcx
  402fba:	mov    rdx,QWORD PTR [rsp+0x68]
  402fbf:	xor    rdx,QWORD PTR fs:0x28
  402fc8:	jne    402fd1 <__sprintf_chk@plt+0x1c31>
  402fca:	add    rsp,0x78
  402fce:	pop    rbx
  402fcf:	pop    rbp
  402fd0:	ret    
  402fd1:	call   401260 <__stack_chk_fail@plt>
  402fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fe0:	push   r12
  402fe2:	mov    rax,0x161cca0
  402fe9:	mov    r12d,edi
  402fec:	push   rbp
  402fed:	push   rbx
  402fee:	mov    rdx,QWORD PTR [rax]
  402ff1:	test   rdx,rdx
  402ff4:	je     402ffa <__sprintf_chk@plt+0x1c5a>
  402ff6:	xor    eax,eax
  402ff8:	call   rdx
  402ffa:	cmp    WORD PTR [rip+0x1149d8],0x0        # 5179da <error@@Base+0x1147aa>
  403002:	jle    40303a <__sprintf_chk@plt+0x1c9a>
  403004:	mov    ebx,0x1
  403009:	nop    DWORD PTR [rax+0x0]
  403010:	movsx  edi,bx
  403013:	xor    eax,eax
  403015:	call   402f60 <__sprintf_chk@plt+0x1bc0>
  40301a:	mov    rdi,rax
  40301d:	mov    rbp,rax
  403020:	xor    eax,eax
  403022:	call   401200 <unlink@plt>
  403027:	inc    ebx
  403029:	mov    rdi,rbp
  40302c:	call   4011f0 <free@plt>
  403031:	cmp    bx,WORD PTR [rip+0x1149a2]        # 5179da <error@@Base+0x1147aa>
  403038:	jle    403010 <__sprintf_chk@plt+0x1c70>
  40303a:	mov    edi,r12d
  40303d:	call   401340 <exit@plt>
  403042:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40304d:	nop    DWORD PTR [rax]
  403050:	endbr64 
  403054:	movzx  edx,BYTE PTR [rdi]
  403057:	movzx  ecx,BYTE PTR [rsi]
  40305a:	test   dl,dl
  40305c:	je     403083 <__sprintf_chk@plt+0x1ce3>
  40305e:	cmp    cl,dl
  403060:	jne    403089 <__sprintf_chk@plt+0x1ce9>
  403062:	xor    eax,eax
  403064:	jmp    403074 <__sprintf_chk@plt+0x1cd4>
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	cmp    dl,cl
  403072:	jne    403089 <__sprintf_chk@plt+0x1ce9>
  403074:	inc    rax
  403077:	movzx  edx,BYTE PTR [rdi+rax*1]
  40307b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40307f:	test   dl,dl
  403081:	jne    403070 <__sprintf_chk@plt+0x1cd0>
  403083:	test   cl,cl
  403085:	je     403098 <__sprintf_chk@plt+0x1cf8>
  403087:	xor    edx,edx
  403089:	cmp    dl,cl
  40308b:	sbb    eax,eax
  40308d:	or     eax,0x1
  403090:	ret    
  403091:	nop    DWORD PTR [rax+0x0]
  403098:	xor    eax,eax
  40309a:	ret    
  40309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4030a0:	endbr64 
  4030a4:	mov    rax,QWORD PTR [rip+0x3f2d]        # 406fd8 <error@@Base+0x3da8>
  4030ab:	cmp    QWORD PTR [rax],rdi
  4030ae:	je     4030c8 <__sprintf_chk@plt+0x1d28>
  4030b0:	mov    rax,QWORD PTR [rip+0x3f19]        # 406fd0 <error@@Base+0x3da0>
  4030b7:	cmp    QWORD PTR [rax],rdi
  4030ba:	je     4030c8 <__sprintf_chk@plt+0x1d28>
  4030bc:	jmp    401240 <fclose@plt>
  4030c1:	nop    DWORD PTR [rax+0x0]
  4030c8:	ret    
  4030c9:	nop    DWORD PTR [rax+0x0]
  4030d0:	endbr64 
  4030d4:	sub    rsp,0xa8
  4030db:	mov    rsi,rdi
  4030de:	mov    rdx,rsp
  4030e1:	mov    edi,0x1
  4030e6:	mov    rax,QWORD PTR fs:0x28
  4030ef:	mov    QWORD PTR [rsp+0x98],rax
  4030f7:	xor    eax,eax
  4030f9:	call   401300 <__xstat@plt>
  4030fe:	test   eax,eax
  403100:	sete   al
  403103:	mov    rcx,QWORD PTR [rsp+0x98]
  40310b:	xor    rcx,QWORD PTR fs:0x28
  403114:	jne    40311e <__sprintf_chk@plt+0x1d7e>
  403116:	add    rsp,0xa8
  40311d:	ret    
  40311e:	call   401260 <__stack_chk_fail@plt>
  403123:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40312e:	xchg   ax,ax
  403130:	endbr64 
  403134:	movzx  eax,WORD PTR [rip+0x11489f]        # 5179da <error@@Base+0x1147aa>
  40313b:	push   rbx
  40313c:	lea    edi,[rax+0x1]
  40313f:	mov    WORD PTR [rip+0x114894],di        # 5179da <error@@Base+0x1147aa>
  403146:	xor    eax,eax
  403148:	movsx  edi,di
  40314b:	call   402f60 <__sprintf_chk@plt+0x1bc0>
  403150:	mov    rbx,rax
  403153:	mov    rdi,rax
  403156:	xor    eax,eax
  403158:	call   401200 <unlink@plt>
  40315d:	mov    rax,rbx
  403160:	pop    rbx
  403161:	ret    
  403162:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316d:	nop    DWORD PTR [rax]
  403170:	endbr64 
  403174:	push   rbx
  403175:	mov    rbx,rdi
  403178:	call   401250 <strlen@plt>
  40317d:	lea    ecx,[rax-0x1]
  403180:	movsx  rdx,cx
  403184:	test   cx,cx
  403187:	js     4031b3 <__sprintf_chk@plt+0x1e13>
  403189:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40318d:	je     4031b3 <__sprintf_chk@plt+0x1e13>
  40318f:	sub    eax,0x2
  403192:	movsx  rdx,ax
  403196:	jmp    4031ae <__sprintf_chk@plt+0x1e0e>
  403198:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	lea    rax,[rdx-0x1]
  4031a4:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  4031a9:	je     4031b3 <__sprintf_chk@plt+0x1e13>
  4031ab:	mov    rdx,rax
  4031ae:	test   dx,dx
  4031b1:	jns    4031a0 <__sprintf_chk@plt+0x1e00>
  4031b3:	lea    rax,[rbx+rdx*1+0x1]
  4031b8:	pop    rbx
  4031b9:	ret    
  4031ba:	nop    WORD PTR [rax+rax*1+0x0]
  4031c0:	endbr64 
  4031c4:	push   rax
  4031c5:	pop    rax
  4031c6:	xor    edi,edi
  4031c8:	xor    eax,eax
  4031ca:	sub    rsp,0x8
  4031ce:	call   402fe0 <__sprintf_chk@plt+0x1c40>
  4031d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031de:	xchg   ax,ax
  4031e0:	push   rax
  4031e1:	pop    rax
  4031e2:	sub    rsp,0x8
  4031e6:	mov    rax,0x161cc90
  4031ed:	mov    rdx,QWORD PTR [rax]
  4031f0:	test   rdx,rdx
  4031f3:	je     403200 <__sprintf_chk@plt+0x1e60>
  4031f5:	xor    eax,eax
  4031f7:	call   rdx
  4031f9:	xor    eax,eax
  4031fb:	call   4031c0 <__sprintf_chk@plt+0x1e20>
  403200:	mov    rax,0x161cc98
  403207:	mov    r8,rdi
  40320a:	mov    rcx,QWORD PTR [rax]
  40320d:	mov    rax,QWORD PTR [rip+0x3de4]        # 406ff8 <error@@Base+0x3dc8>
  403214:	lea    rdx,[rip+0x16fb]        # 404916 <error@@Base+0x16e6>
  40321b:	mov    rdi,QWORD PTR [rax]
  40321e:	mov    esi,0x1
  403223:	xor    eax,eax
  403225:	call   401360 <__fprintf_chk@plt>
  40322a:	jmp    4031f9 <__sprintf_chk@plt+0x1e59>
  40322c:	nop    DWORD PTR [rax+0x0]

0000000000403230 <error@@Base>:
  403230:	endbr64 
  403234:	push   rax
  403235:	pop    rax
  403236:	lea    rdx,[rip+0x16e8]        # 404925 <error@@Base+0x16f5>
  40323d:	mov    esi,0x1
  403242:	sub    rsp,0x8
  403246:	mov    rax,0x161cc98
  40324d:	mov    r8,rdi
  403250:	mov    rcx,QWORD PTR [rax]
  403253:	mov    rax,QWORD PTR [rip+0x3d9e]        # 406ff8 <error@@Base+0x3dc8>
  40325a:	mov    rdi,QWORD PTR [rax]
  40325d:	xor    eax,eax
  40325f:	call   401360 <__fprintf_chk@plt>
  403264:	mov    rax,0x407108
  40326b:	mov    edi,DWORD PTR [rax]
  40326d:	xor    eax,eax
  40326f:	call   402fe0 <__sprintf_chk@plt+0x1c40>
  403274:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40327f:	nop
  403280:	endbr64 
  403284:	sub    rsp,0x8
  403288:	call   4012c0 <calloc@plt>
  40328d:	test   rax,rax
  403290:	je     403297 <error@@Base+0x67>
  403292:	add    rsp,0x8
  403296:	ret    
  403297:	lea    rdi,[rip+0x168f]        # 40492d <error@@Base+0x16fd>
  40329e:	call   403230 <error@@Base>
  4032a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032ae:	xchg   ax,ax
  4032b0:	endbr64 
  4032b4:	cmp    BYTE PTR [rip+0x11471d],0x0        # 5179d8 <error@@Base+0x1147a8>
  4032bb:	je     4032be <error@@Base+0x8e>
  4032bd:	ret    
  4032be:	push   rax
  4032bf:	lea    rdi,[rip+0x1681]        # 404947 <error@@Base+0x1717>
  4032c6:	xor    eax,eax
  4032c8:	mov    BYTE PTR [rip+0x114709],0x1        # 5179d8 <error@@Base+0x1147a8>
  4032cf:	call   403230 <error@@Base>
  4032d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032df:	nop
  4032e0:	endbr64 
  4032e4:	push   rax
  4032e5:	pop    rax
  4032e6:	lea    rdx,[rip+0x1669]        # 404956 <error@@Base+0x1726>
  4032ed:	sub    rsp,0x8
  4032f1:	mov    rax,0x161cc98
  4032f8:	mov    r8,rdi
  4032fb:	mov    rcx,QWORD PTR [rax]
  4032fe:	mov    rax,QWORD PTR [rip+0x3cf3]        # 406ff8 <error@@Base+0x3dc8>
  403305:	mov    r9,rsi
  403308:	mov    rdi,QWORD PTR [rax]
  40330b:	mov    esi,0x1
  403310:	xor    eax,eax
  403312:	call   401360 <__fprintf_chk@plt>
  403317:	mov    rax,0x407108
  40331e:	mov    edi,DWORD PTR [rax]
  403320:	xor    eax,eax
  403322:	call   402fe0 <__sprintf_chk@plt+0x1c40>
  403327:	nop    WORD PTR [rax+rax*1+0x0]
  403330:	endbr64 
  403334:	test   rdi,rdi
  403337:	je     403380 <error@@Base+0x150>
  403339:	push   rbp
  40333a:	mov    rbp,rsi
  40333d:	push   rbx
  40333e:	mov    rbx,rdi
  403341:	sub    rsp,0x8
  403345:	call   401330 <fopen@plt>
  40334a:	test   rax,rax
  40334d:	je     403360 <error@@Base+0x130>
  40334f:	add    rsp,0x8
  403353:	pop    rbx
  403354:	pop    rbp
  403355:	ret    
  403356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403360:	cmp    BYTE PTR [rbp+0x0],0x77
  403364:	mov    rsi,rbx
  403367:	je     403390 <error@@Base+0x160>
  403369:	lea    rdi,[rip+0x1609]        # 404979 <error@@Base+0x1749>
  403370:	xor    eax,eax
  403372:	call   4032e0 <error@@Base+0xb0>
  403377:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	cmp    BYTE PTR [rsi],0x72
  403383:	je     4033a0 <error@@Base+0x170>
  403385:	mov    rax,QWORD PTR [rip+0x3c44]        # 406fd0 <error@@Base+0x3da0>
  40338c:	mov    rax,QWORD PTR [rax]
  40338f:	ret    
  403390:	lea    rdi,[rip+0x15cc]        # 404963 <error@@Base+0x1733>
  403397:	call   4032e0 <error@@Base+0xb0>
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	mov    rax,QWORD PTR [rip+0x3c31]        # 406fd8 <error@@Base+0x3da8>
  4033a7:	mov    rax,QWORD PTR [rax]
  4033aa:	ret    
  4033ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	endbr64 
  4033b4:	push   r15
  4033b6:	xor    eax,eax
  4033b8:	push   r14
  4033ba:	mov    r14,rsi
  4033bd:	push   r13
  4033bf:	push   r12
  4033c1:	push   rbp
  4033c2:	push   rbx
  4033c3:	sub    rsp,0x38
  4033c7:	mov    QWORD PTR [rsp+0x8],rdi
  4033cc:	mov    rdi,QWORD PTR [rsi]
  4033cf:	mov    QWORD PTR [rsp+0x28],rdx
  4033d4:	mov    QWORD PTR [rsp+0x10],rcx
  4033d9:	call   403170 <__sprintf_chk@plt+0x1dd0>
  4033de:	mov    rcx,0x161cc98
  4033e5:	lea    rsi,[rip+0xfffffffffffffec4]        # 4032b0 <error@@Base+0x80>
  4033ec:	mov    edi,0x2
  4033f1:	mov    QWORD PTR [rcx],rax
  4033f4:	call   4012e0 <__sysv_signal@plt>
  4033f9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 4032b0 <error@@Base+0x80>
  403400:	mov    edi,0xf
  403405:	call   4012e0 <__sysv_signal@plt>
  40340a:	mov    r9,QWORD PTR [rsp+0x8]
  40340f:	mov    r15d,DWORD PTR [r9]
  403412:	cmp    r15d,0x1
  403416:	je     4035e0 <error@@Base+0x3b0>
  40341c:	mov    rdx,QWORD PTR [rsp+0x10]
  403421:	jle    4035ec <error@@Base+0x3bc>
  403427:	mov    r8d,r15d
  40342a:	xor    r12d,r12d
  40342d:	mov    r15,rdx
  403430:	mov    r13d,0x1
  403436:	mov    ebx,0x1
  40343b:	mov    rdx,r14
  40343e:	jmp    40345a <error@@Base+0x22a>
  403440:	movsx  rax,r12w
  403444:	mov    QWORD PTR [rdx+rax*8],rbp
  403448:	inc    ebx
  40344a:	inc    r12d
  40344d:	movsx  r13d,bx
  403451:	cmp    r13d,r8d
  403454:	jge    403580 <error@@Base+0x350>
  40345a:	movsx  rax,bx
  40345e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403462:	lea    r10,[rax*8+0x0]
  40346a:	cmp    BYTE PTR [rbp+0x0],0x2d
  40346e:	jne    403440 <error@@Base+0x210>
  403470:	movzx  r14d,BYTE PTR [rbp+0x1]
  403475:	mov    QWORD PTR [rsp+0x20],r10
  40347a:	test   r14b,r14b
  40347d:	je     403440 <error@@Base+0x210>
  40347f:	mov    rdi,rbp
  403482:	mov    DWORD PTR [rsp+0x1c],r8d
  403487:	mov    QWORD PTR [rsp+0x10],rdx
  40348c:	mov    QWORD PTR [rsp+0x8],r9
  403491:	call   401250 <strlen@plt>
  403496:	cmp    rax,0x6
  40349a:	mov    ecx,0x6
  40349f:	cmovle rcx,rax
  4034a3:	lea    rsi,[rip+0x14e3]        # 40498d <error@@Base+0x175d>
  4034aa:	cmp    rcx,rcx
  4034ad:	mov    rdi,rbp
  4034b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4034b2:	seta   al
  4034b5:	sbb    al,0x0
  4034b7:	test   al,al
  4034b9:	je     403610 <error@@Base+0x3e0>
  4034bf:	mov    r8d,DWORD PTR [rsp+0x1c]
  4034c4:	inc    r13d
  4034c7:	xor    eax,eax
  4034c9:	cmp    r13d,r8d
  4034cc:	mov    r9,QWORD PTR [rsp+0x8]
  4034d1:	mov    rdx,QWORD PTR [rsp+0x10]
  4034d6:	jge    4034e2 <error@@Base+0x2b2>
  4034d8:	mov    r10,QWORD PTR [rsp+0x20]
  4034dd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  4034e2:	test   r15,r15
  4034e5:	je     40351b <error@@Base+0x2eb>
  4034e7:	movzx  ecx,BYTE PTR [r15]
  4034eb:	test   cl,cl
  4034ed:	je     40351b <error@@Base+0x2eb>
  4034ef:	cmp    r14b,cl
  4034f2:	je     403530 <error@@Base+0x300>
  4034f4:	xor    ecx,ecx
  4034f6:	jmp    403505 <error@@Base+0x2d5>
  4034f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403500:	cmp    r14b,dil
  403503:	je     403538 <error@@Base+0x308>
  403505:	inc    ecx
  403507:	movsx  rsi,cx
  40350b:	lea    rsi,[rsi+rsi*2]
  40350f:	lea    rsi,[r15+rsi*8]
  403513:	movzx  edi,BYTE PTR [rsi]
  403516:	test   dil,dil
  403519:	jne    403500 <error@@Base+0x2d0>
  40351b:	mov    rsi,rbp
  40351e:	lea    rdi,[rip+0x146e]        # 404993 <error@@Base+0x1763>
  403525:	xor    eax,eax
  403527:	call   4032e0 <error@@Base+0xb0>
  40352c:	nop    DWORD PTR [rax+0x0]
  403530:	mov    rsi,r15
  403533:	nop    DWORD PTR [rax+rax*1+0x0]
  403538:	mov    rcx,QWORD PTR [rsi+0x8]
  40353c:	test   rcx,rcx
  40353f:	je     4035b0 <error@@Base+0x380>
  403541:	cmp    BYTE PTR [rbp+0x2],0x0
  403545:	jne    4035a0 <error@@Base+0x370>
  403547:	test   rax,rax
  40354a:	je     4035f8 <error@@Base+0x3c8>
  403550:	cmp    QWORD PTR [rcx],0x0
  403554:	jne    403620 <error@@Base+0x3f0>
  40355a:	mov    QWORD PTR [rcx],rax
  40355d:	mov    eax,ebx
  40355f:	inc    ebx
  403561:	cmp    BYTE PTR [rbp+0x2],0x0
  403565:	jne    40344d <error@@Base+0x21d>
  40356b:	lea    ebx,[rax+0x2]
  40356e:	movsx  r13d,bx
  403572:	cmp    r13d,r8d
  403575:	jl     40345a <error@@Base+0x22a>
  40357b:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	movsx  r12d,r12w
  403584:	mov    DWORD PTR [r9],r12d
  403587:	add    rsp,0x38
  40358b:	pop    rbx
  40358c:	pop    rbp
  40358d:	pop    r12
  40358f:	pop    r13
  403591:	pop    r14
  403593:	pop    r15
  403595:	ret    
  403596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035a0:	cmp    QWORD PTR [rcx],0x0
  4035a4:	jne    403620 <error@@Base+0x3f0>
  4035a6:	lea    rax,[rbp+0x2]
  4035aa:	jmp    40355a <error@@Base+0x32a>
  4035ac:	nop    DWORD PTR [rax+0x0]
  4035b0:	mov    rax,QWORD PTR [rsi+0x10]
  4035b4:	test   rax,rax
  4035b7:	je     40351b <error@@Base+0x2eb>
  4035bd:	cmp    BYTE PTR [rbp+0x2],0x0
  4035c1:	jne    40351b <error@@Base+0x2eb>
  4035c7:	cmp    BYTE PTR [rax],0x0
  4035ca:	jne    403620 <error@@Base+0x3f0>
  4035cc:	mov    BYTE PTR [rax],0x1
  4035cf:	inc    ebx
  4035d1:	mov    r8d,DWORD PTR [r9]
  4035d4:	jmp    40344d <error@@Base+0x21d>
  4035d9:	nop    DWORD PTR [rax+0x0]
  4035e0:	mov    rax,0x40710c
  4035e7:	cmp    BYTE PTR [rax],0x0
  4035ea:	jne    403610 <error@@Base+0x3e0>
  4035ec:	xor    r12d,r12d
  4035ef:	jmp    403584 <error@@Base+0x354>
  4035f1:	nop    DWORD PTR [rax+0x0]
  4035f8:	mov    rax,QWORD PTR [rsi+0x10]
  4035fc:	test   rax,rax
  4035ff:	jne    4035c7 <error@@Base+0x397>
  403601:	jmp    40351b <error@@Base+0x2eb>
  403606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403610:	mov    rdi,QWORD PTR [rsp+0x28]
  403615:	xor    eax,eax
  403617:	call   4031e0 <__sprintf_chk@plt+0x1e40>
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    rsi,rbp
  403623:	lea    rdi,[rip+0x1378]        # 4049a2 <error@@Base+0x1772>
  40362a:	xor    eax,eax
  40362c:	call   4032e0 <error@@Base+0xb0>
  403631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	endbr64 
  403644:	mov    rax,0x161cc98
  40364b:	mov    r8,rdi
  40364e:	mov    rcx,QWORD PTR [rax]
  403651:	mov    rax,QWORD PTR [rip+0x39a0]        # 406ff8 <error@@Base+0x3dc8>
  403658:	mov    r9,rsi
  40365b:	mov    rdi,QWORD PTR [rax]
  40365e:	lea    rdx,[rip+0x12f1]        # 404956 <error@@Base+0x1726>
  403665:	mov    esi,0x1
  40366a:	xor    eax,eax
  40366c:	jmp    401360 <__fprintf_chk@plt>
  403671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40367b:	nop    DWORD PTR [rax+rax*1+0x0]
  403680:	endbr64 
  403684:	mov    QWORD PTR [rdi+0x8],0x0
  40368c:	mov    QWORD PTR [rdi],0x0
  403693:	mov    QWORD PTR [rdi+0x10],0x0
  40369b:	mov    QWORD PTR [rdi+0x18],0x0
  4036a3:	ret    
  4036a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036af:	nop
  4036b0:	endbr64 
  4036b4:	push   rbx
  4036b5:	mov    rbx,rdi
  4036b8:	mov    rax,QWORD PTR [rdi]
  4036bb:	mov    QWORD PTR [rsi],0x0
  4036c2:	mov    QWORD PTR [rsi+0x8],rax
  4036c6:	mov    QWORD PTR [rdi],rsi
  4036c9:	test   rax,rax
  4036cc:	je     4036f0 <error@@Base+0x4c0>
  4036ce:	mov    QWORD PTR [rax],rsi
  4036d1:	mov    rdi,QWORD PTR [rbx+0x10]
  4036d5:	test   rdi,rdi
  4036d8:	je     4036e7 <error@@Base+0x4b7>
  4036da:	call   4011f0 <free@plt>
  4036df:	mov    QWORD PTR [rbx+0x10],0x0
  4036e7:	inc    QWORD PTR [rbx+0x18]
  4036eb:	pop    rbx
  4036ec:	ret    
  4036ed:	nop    DWORD PTR [rax]
  4036f0:	mov    QWORD PTR [rdi+0x8],rsi
  4036f4:	jmp    4036d1 <error@@Base+0x4a1>
  4036f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403700:	endbr64 
  403704:	push   rbx
  403705:	mov    rbx,rdi
  403708:	mov    rax,QWORD PTR [rdi+0x8]
  40370c:	mov    QWORD PTR [rsi+0x8],0x0
  403714:	mov    QWORD PTR [rsi],rax
  403717:	test   rax,rax
  40371a:	je     403740 <error@@Base+0x510>
  40371c:	mov    QWORD PTR [rax+0x8],rsi
  403720:	mov    rdi,QWORD PTR [rbx+0x10]
  403724:	mov    QWORD PTR [rbx+0x8],rsi
  403728:	test   rdi,rdi
  40372b:	je     40373a <error@@Base+0x50a>
  40372d:	call   4011f0 <free@plt>
  403732:	mov    QWORD PTR [rbx+0x10],0x0
  40373a:	inc    QWORD PTR [rbx+0x18]
  40373e:	pop    rbx
  40373f:	ret    
  403740:	mov    QWORD PTR [rdi],rsi
  403743:	jmp    403720 <error@@Base+0x4f0>
  403745:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403750:	endbr64 
  403754:	mov    rax,QWORD PTR [rdx]
  403757:	push   rbx
  403758:	mov    QWORD PTR [rsi],rax
  40375b:	mov    rbx,rdi
  40375e:	mov    QWORD PTR [rsi+0x8],rdx
  403762:	test   rax,rax
  403765:	je     403790 <error@@Base+0x560>
  403767:	mov    QWORD PTR [rax+0x8],rsi
  40376b:	mov    rdi,QWORD PTR [rbx+0x10]
  40376f:	mov    QWORD PTR [rdx],rsi
  403772:	test   rdi,rdi
  403775:	je     403784 <error@@Base+0x554>
  403777:	call   4011f0 <free@plt>
  40377c:	mov    QWORD PTR [rbx+0x10],0x0
  403784:	inc    QWORD PTR [rbx+0x18]
  403788:	pop    rbx
  403789:	ret    
  40378a:	nop    WORD PTR [rax+rax*1+0x0]
  403790:	mov    QWORD PTR [rdi],rsi
  403793:	jmp    40376b <error@@Base+0x53b>
  403795:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037a0:	endbr64 
  4037a4:	mov    rax,QWORD PTR [rsi+0x8]
  4037a8:	push   rbx
  4037a9:	mov    QWORD PTR [rdx],rsi
  4037ac:	mov    QWORD PTR [rdx+0x8],rax
  4037b0:	mov    rbx,rdi
  4037b3:	mov    QWORD PTR [rsi+0x8],rdx
  4037b7:	test   rax,rax
  4037ba:	je     4037e0 <error@@Base+0x5b0>
  4037bc:	mov    QWORD PTR [rax],rdx
  4037bf:	mov    rdi,QWORD PTR [rbx+0x10]
  4037c3:	test   rdi,rdi
  4037c6:	je     4037d5 <error@@Base+0x5a5>
  4037c8:	call   4011f0 <free@plt>
  4037cd:	mov    QWORD PTR [rbx+0x10],0x0
  4037d5:	inc    QWORD PTR [rbx+0x18]
  4037d9:	pop    rbx
  4037da:	ret    
  4037db:	nop    DWORD PTR [rax+rax*1+0x0]
  4037e0:	mov    QWORD PTR [rdi+0x8],rdx
  4037e4:	jmp    4037bf <error@@Base+0x58f>
  4037e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037f0:	endbr64 
  4037f4:	mov    rdx,QWORD PTR [rsi]
  4037f7:	push   rbx
  4037f8:	mov    rax,QWORD PTR [rsi+0x8]
  4037fc:	mov    rbx,rdi
  4037ff:	test   rdx,rdx
  403802:	je     403840 <error@@Base+0x610>
  403804:	mov    QWORD PTR [rdx+0x8],rax
  403808:	mov    rax,QWORD PTR [rsi+0x8]
  40380c:	test   rax,rax
  40380f:	je     403848 <error@@Base+0x618>
  403811:	mov    QWORD PTR [rax],rdx
  403814:	mov    rdi,QWORD PTR [rbx+0x10]
  403818:	mov    QWORD PTR [rsi+0x8],0x0
  403820:	mov    QWORD PTR [rsi],0x0
  403827:	test   rdi,rdi
  40382a:	je     403839 <error@@Base+0x609>
  40382c:	call   4011f0 <free@plt>
  403831:	mov    QWORD PTR [rbx+0x10],0x0
  403839:	dec    QWORD PTR [rbx+0x18]
  40383d:	pop    rbx
  40383e:	ret    
  40383f:	nop
  403840:	mov    QWORD PTR [rdi],rax
  403843:	test   rax,rax
  403846:	jne    403811 <error@@Base+0x5e1>
  403848:	mov    QWORD PTR [rbx+0x8],rdx
  40384c:	jmp    403814 <error@@Base+0x5e4>
  40384e:	xchg   ax,ax
  403850:	endbr64 
  403854:	cmp    QWORD PTR [rdi+0x10],0x0
  403859:	je     403860 <error@@Base+0x630>
  40385b:	ret    
  40385c:	nop    DWORD PTR [rax+0x0]
  403860:	mov    rax,QWORD PTR [rdi+0x18]
  403864:	test   rax,rax
  403867:	je     40385b <error@@Base+0x62b>
  403869:	push   rbx
  40386a:	mov    esi,0x8
  40386f:	mov    rbx,rdi
  403872:	mov    rdi,rax
  403875:	xor    eax,eax
  403877:	call   403280 <error@@Base+0x50>
  40387c:	mov    rdx,QWORD PTR [rbx]
  40387f:	mov    QWORD PTR [rbx+0x10],rax
  403883:	test   rdx,rdx
  403886:	je     4038a0 <error@@Base+0x670>
  403888:	nop    DWORD PTR [rax+rax*1+0x0]
  403890:	mov    QWORD PTR [rax],rdx
  403893:	add    rax,0x8
  403897:	mov    rdx,QWORD PTR [rdx+0x8]
  40389b:	test   rdx,rdx
  40389e:	jne    403890 <error@@Base+0x660>
  4038a0:	pop    rbx
  4038a1:	ret    
  4038a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4038ad:	nop    DWORD PTR [rax]
  4038b0:	endbr64 
  4038b4:	push   r12
  4038b6:	push   rbp
  4038b7:	push   rbx
  4038b8:	mov    rbx,QWORD PTR [rdi]
  4038bb:	test   rbx,rbx
  4038be:	je     4038ee <error@@Base+0x6be>
  4038c0:	mov    rbp,rdi
  4038c3:	mov    r12,rsi
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	mov    rsi,rbx
  4038d3:	mov    rdi,rbp
  4038d6:	xor    eax,eax
  4038d8:	call   4037f0 <error@@Base+0x5c0>
  4038dd:	mov    rdi,rbx
  4038e0:	xor    eax,eax
  4038e2:	call   r12
  4038e5:	mov    rbx,QWORD PTR [rbp+0x0]
  4038e9:	test   rbx,rbx
  4038ec:	jne    4038d0 <error@@Base+0x6a0>
  4038ee:	pop    rbx
  4038ef:	pop    rbp
  4038f0:	pop    r12
  4038f2:	ret    
  4038f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038fd:	nop    DWORD PTR [rax]
  403900:	endbr64 
  403904:	push   r15
  403906:	lea    r15,[rip+0x2f23]        # 406830 <error@@Base+0x3600>
  40390d:	push   r14
  40390f:	mov    r14,rdx
  403912:	push   r13
  403914:	mov    r13,rsi
  403917:	push   r12
  403919:	mov    r12d,edi
  40391c:	push   rbp
  40391d:	lea    rbp,[rip+0x2f14]        # 406838 <error@@Base+0x3608>
  403924:	push   rbx
  403925:	sub    rbp,r15
  403928:	sub    rsp,0x8
  40392c:	call   401000 <free@plt-0x1f0>
  403931:	sar    rbp,0x3
  403935:	je     403956 <error@@Base+0x726>
  403937:	xor    ebx,ebx
  403939:	nop    DWORD PTR [rax+0x0]
  403940:	mov    rdx,r14
  403943:	mov    rsi,r13
  403946:	mov    edi,r12d
  403949:	call   QWORD PTR [r15+rbx*8]
  40394d:	add    rbx,0x1
  403951:	cmp    rbp,rbx
  403954:	jne    403940 <error@@Base+0x710>
  403956:	add    rsp,0x8
  40395a:	pop    rbx
  40395b:	pop    rbp
  40395c:	pop    r12
  40395e:	pop    r13
  403960:	pop    r14
  403962:	pop    r15
  403964:	ret    
  403965:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403970:	endbr64 
  403974:	ret    

Disassembly of section .fini:

0000000000403978 <.fini>:
  403978:	endbr64 
  40397c:	sub    rsp,0x8
  403980:	add    rsp,0x8
  403984:	ret    
