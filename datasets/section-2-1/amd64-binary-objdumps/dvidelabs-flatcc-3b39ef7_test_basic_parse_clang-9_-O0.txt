
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_basic_parse:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x15fe1]        # 418ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x15fe2]        # 419008 <flatcc_builder_padding_base@@Base+0x6c98>
  403026:	jmp    QWORD PTR [rip+0x15fe4]        # 419010 <flatcc_builder_padding_base@@Base+0x6ca0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x15fe2]        # 419018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strtod@plt>:
  403040:	jmp    QWORD PTR [rip+0x15fda]        # 419020 <strtod@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0x15fd2]        # 419028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__assert_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0x15fca]        # 419030 <__assert_fail@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <memset@plt>:
  403070:	jmp    QWORD PTR [rip+0x15fc2]        # 419038 <memset@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memchr@plt>:
  403080:	jmp    QWORD PTR [rip+0x15fba]        # 419040 <memchr@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memcmp@plt>:
  403090:	jmp    QWORD PTR [rip+0x15fb2]        # 419048 <memcmp@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <fprintf@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x15faa]        # 419050 <fprintf@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memcpy@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x15fa2]        # 419058 <memcpy@GLIBC_2.14>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x15f9a]        # 419060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <realloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x15f92]        # 419068 <realloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <posix_memalign@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x15f8a]        # 419070 <posix_memalign@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030f0 <_start@@Base>:
  4030f0:	endbr64 
  4030f4:	xor    ebp,ebp
  4030f6:	mov    r9,rdx
  4030f9:	pop    rsi
  4030fa:	mov    rdx,rsp
  4030fd:	and    rsp,0xfffffffffffffff0
  403101:	push   rax
  403102:	push   rsp
  403103:	mov    r8,0x411970
  40310a:	mov    rcx,0x411900
  403111:	mov    rdi,0x404b50
  403118:	call   QWORD PTR [rip+0x15eca]        # 418fe8 <__libc_start_main@GLIBC_2.2.5>
  40311e:	hlt    
  40311f:	nop
  403120:	endbr64 
  403124:	ret    
  403125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40312f:	nop
  403130:	mov    eax,0x419100
  403135:	cmp    rax,0x419100
  40313b:	je     403150 <_start@@Base+0x60>
  40313d:	mov    eax,0x0
  403142:	test   rax,rax
  403145:	je     403150 <_start@@Base+0x60>
  403147:	mov    edi,0x419100
  40314c:	jmp    rax
  40314e:	xchg   ax,ax
  403150:	ret    
  403151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40315c:	nop    DWORD PTR [rax+0x0]
  403160:	mov    esi,0x419100
  403165:	sub    rsi,0x419100
  40316c:	mov    rax,rsi
  40316f:	shr    rsi,0x3f
  403173:	sar    rax,0x3
  403177:	add    rsi,rax
  40317a:	sar    rsi,1
  40317d:	je     403190 <_start@@Base+0xa0>
  40317f:	mov    eax,0x0
  403184:	test   rax,rax
  403187:	je     403190 <_start@@Base+0xa0>
  403189:	mov    edi,0x419100
  40318e:	jmp    rax
  403190:	ret    
  403191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	endbr64 
  4031a4:	cmp    BYTE PTR [rip+0x15f55],0x0        # 419100 <__bss_start@@Base>
  4031ab:	jne    4031c0 <_start@@Base+0xd0>
  4031ad:	push   rbp
  4031ae:	mov    rbp,rsp
  4031b1:	call   403130 <_start@@Base+0x40>
  4031b6:	mov    BYTE PTR [rip+0x15f43],0x1        # 419100 <__bss_start@@Base>
  4031bd:	pop    rbp
  4031be:	ret    
  4031bf:	nop
  4031c0:	ret    
  4031c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031cc:	nop    DWORD PTR [rax+0x0]
  4031d0:	endbr64 
  4031d4:	jmp    403160 <_start@@Base+0x70>
  4031d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031e0 <test@@Base>:
  4031e0:	push   rbp
  4031e1:	mov    rbp,rsp
  4031e4:	sub    rsp,0x110
  4031eb:	xor    eax,eax
  4031ed:	mov    QWORD PTR [rbp-0x8],rdi
  4031f1:	mov    QWORD PTR [rbp-0x10],rsi
  4031f5:	mov    QWORD PTR [rbp-0x18],rdx
  4031f9:	mov    QWORD PTR [rbp-0x20],rcx
  4031fd:	mov    DWORD PTR [rbp-0x74],0x0
  403204:	lea    rcx,[rbp-0x68]
  403208:	mov    QWORD PTR [rbp-0x70],rcx
  40320c:	mov    rcx,QWORD PTR [rbp-0x70]
  403210:	mov    rdi,rcx
  403213:	mov    esi,eax
  403215:	mov    edx,0x48
  40321a:	mov    DWORD PTR [rbp-0xac],eax
  403220:	call   403070 <memset@plt>
  403225:	mov    rcx,QWORD PTR [rbp-0x70]
  403229:	mov    DWORD PTR [rcx+0x18],0x1
  403230:	mov    rcx,QWORD PTR [rbp-0x10]
  403234:	mov    rdx,QWORD PTR [rbp-0x70]
  403238:	mov    QWORD PTR [rdx+0x8],rcx
  40323c:	mov    rdi,QWORD PTR [rbp-0x8]
  403240:	lea    rsi,[rip+0xf07f]        # 4122c6 <g_data@@Base+0x286>
  403247:	mov    edx,DWORD PTR [rbp-0xac]
  40324d:	mov    ecx,DWORD PTR [rbp-0xac]
  403253:	call   406470 <flatcc_builder_start_buffer@@Base>
  403258:	mov    rdi,QWORD PTR [rbp-0x70]
  40325c:	mov    rsi,QWORD PTR [rbp-0x10]
  403260:	mov    rdx,QWORD PTR [rbp-0x18]
  403264:	mov    DWORD PTR [rbp-0xb0],eax
  40326a:	call   404470 <test@@Base+0x1290>
  40326f:	mov    QWORD PTR [rbp-0x10],rax
  403273:	mov    rax,QWORD PTR [rbp-0x10]
  403277:	cmp    rax,QWORD PTR [rbp-0x18]
  40327b:	jne    40329e <test@@Base+0xbe>
  403281:	mov    rax,QWORD PTR [rip+0x15d70]        # 418ff8 <stderr@GLIBC_2.2.5>
  403288:	mov    rdi,QWORD PTR [rax]
  40328b:	lea    rsi,[rip+0xf039]        # 4122cb <g_data@@Base+0x28b>
  403292:	mov    al,0x0
  403294:	call   4030a0 <fprintf@plt>
  403299:	jmp    4043a8 <test@@Base+0x11c8>
  40329e:	mov    rax,QWORD PTR [rbp-0x18]
  4032a2:	cmp    rax,QWORD PTR [rbp-0x10]
  4032a6:	jbe    4032cf <test@@Base+0xef>
  4032ac:	mov    rax,QWORD PTR [rbp-0x10]
  4032b0:	movsx  ecx,BYTE PTR [rax]
  4032b3:	cmp    ecx,0x7b
  4032b6:	jne    4032cf <test@@Base+0xef>
  4032bc:	mov    rax,QWORD PTR [rbp-0x10]
  4032c0:	add    rax,0x1
  4032c6:	mov    QWORD PTR [rbp-0x10],rax
  4032ca:	jmp    403311 <test@@Base+0x131>
  4032cf:	mov    rax,QWORD PTR [rip+0x15d22]        # 418ff8 <stderr@GLIBC_2.2.5>
  4032d6:	mov    rdi,QWORD PTR [rax]
  4032d9:	lea    rsi,[rip+0xeff9]        # 4122d9 <g_data@@Base+0x299>
  4032e0:	mov    edx,0x7b
  4032e5:	mov    al,0x0
  4032e7:	call   4030a0 <fprintf@plt>
  4032ec:	mov    rdi,QWORD PTR [rbp-0x70]
  4032f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4032f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4032f8:	mov    ecx,0x11
  4032fd:	mov    DWORD PTR [rbp-0xb4],eax
  403303:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403308:	mov    QWORD PTR [rbp-0x10],rax
  40330c:	jmp    4043a8 <test@@Base+0x11c8>
  403311:	mov    rdi,QWORD PTR [rbp-0x70]
  403315:	mov    rsi,QWORD PTR [rbp-0x10]
  403319:	mov    rdx,QWORD PTR [rbp-0x18]
  40331d:	call   404470 <test@@Base+0x1290>
  403322:	mov    QWORD PTR [rbp-0x10],rax
  403326:	mov    rax,QWORD PTR [rbp-0x10]
  40332a:	cmp    rax,QWORD PTR [rbp-0x18]
  40332e:	jne    403351 <test@@Base+0x171>
  403334:	mov    rax,QWORD PTR [rip+0x15cbd]        # 418ff8 <stderr@GLIBC_2.2.5>
  40333b:	mov    rdi,QWORD PTR [rax]
  40333e:	lea    rsi,[rip+0xef86]        # 4122cb <g_data@@Base+0x28b>
  403345:	mov    al,0x0
  403347:	call   4030a0 <fprintf@plt>
  40334c:	jmp    4043a8 <test@@Base+0x11c8>
  403351:	mov    rdi,QWORD PTR [rbp-0x8]
  403355:	mov    esi,0xb
  40335a:	call   407ab0 <flatcc_builder_start_table@@Base>
  40335f:	mov    rdi,QWORD PTR [rbp-0x70]
  403363:	mov    rsi,QWORD PTR [rbp-0x10]
  403367:	mov    rdx,QWORD PTR [rbp-0x18]
  40336b:	call   404510 <test@@Base+0x1330>
  403370:	mov    QWORD PTR [rbp-0x10],rax
  403374:	mov    rdi,QWORD PTR [rbp-0x10]
  403378:	mov    rsi,QWORD PTR [rbp-0x18]
  40337c:	call   4045c0 <test@@Base+0x13e0>
  403381:	mov    QWORD PTR [rbp-0x88],rax
  403388:	mov    rax,QWORD PTR [rbp-0x18]
  40338c:	mov    rcx,QWORD PTR [rbp-0x10]
  403390:	sub    rax,rcx
  403393:	cmp    rax,0x8
  403397:	jle    4033b3 <test@@Base+0x1d3>
  40339d:	mov    rax,QWORD PTR [rbp-0x10]
  4033a1:	add    rax,0x8
  4033a7:	mov    QWORD PTR [rbp-0xc0],rax
  4033ae:	jmp    4033be <test@@Base+0x1de>
  4033b3:	mov    rax,QWORD PTR [rbp-0x18]
  4033b7:	mov    QWORD PTR [rbp-0xc0],rax
  4033be:	mov    rax,QWORD PTR [rbp-0xc0]
  4033c5:	mov    QWORD PTR [rbp-0x90],rax
  4033cc:	mov    rax,QWORD PTR [rbp-0x88]
  4033d3:	and    rax,0xffffffffffff0000
  4033d9:	movsx  rcx,BYTE PTR [rip+0xef0e]        # 4122ef <g_data@@Base+0x2af>
  4033e1:	shl    rcx,0x38
  4033e5:	movsx  rdx,BYTE PTR [rip+0xef03]        # 4122f0 <g_data@@Base+0x2b0>
  4033ed:	shl    rdx,0x30
  4033f1:	or     rcx,rdx
  4033f4:	movsx  rdx,BYTE PTR [rip+0xeef5]        # 4122f1 <g_data@@Base+0x2b1>
  4033fc:	shl    rdx,0x28
  403400:	or     rcx,rdx
  403403:	movsx  rdx,BYTE PTR [rip+0xeee7]        # 4122f2 <g_data@@Base+0x2b2>
  40340b:	shl    rdx,0x20
  40340f:	or     rcx,rdx
  403412:	movsx  rdx,BYTE PTR [rip+0xeed9]        # 4122f3 <g_data@@Base+0x2b3>
  40341a:	shl    rdx,0x18
  40341e:	or     rcx,rdx
  403421:	movsx  rdx,BYTE PTR [rip+0xeecb]        # 4122f4 <g_data@@Base+0x2b4>
  403429:	shl    rdx,0x10
  40342d:	or     rcx,rdx
  403430:	cmp    rax,rcx
  403433:	jae    40363d <test@@Base+0x45d>
  403439:	mov    rax,QWORD PTR [rbp-0x88]
  403440:	and    rax,0xffffffffff000000
  403446:	movsx  rcx,BYTE PTR [rip+0xeea8]        # 4122f6 <g_data@@Base+0x2b6>
  40344e:	shl    rcx,0x38
  403452:	movsx  rdx,BYTE PTR [rip+0xee9d]        # 4122f7 <g_data@@Base+0x2b7>
  40345a:	shl    rdx,0x30
  40345e:	or     rcx,rdx
  403461:	movsx  rdx,BYTE PTR [rip+0xee8f]        # 4122f8 <g_data@@Base+0x2b8>
  403469:	shl    rdx,0x28
  40346d:	or     rcx,rdx
  403470:	movsx  rdx,BYTE PTR [rip+0xee81]        # 4122f9 <g_data@@Base+0x2b9>
  403478:	shl    rdx,0x20
  40347c:	or     rcx,rdx
  40347f:	movsx  rdx,BYTE PTR [rip+0xee73]        # 4122fa <g_data@@Base+0x2ba>
  403487:	shl    rdx,0x18
  40348b:	or     rcx,rdx
  40348e:	cmp    rax,rcx
  403491:	je     4034b6 <test@@Base+0x2d6>
  403497:	mov    rdi,QWORD PTR [rbp-0x70]
  40349b:	mov    rsi,QWORD PTR [rbp-0x10]
  40349f:	mov    rdx,QWORD PTR [rbp-0x18]
  4034a3:	mov    ecx,0xd
  4034a8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  4034ad:	mov    QWORD PTR [rbp-0x10],rax
  4034b1:	jmp    4043a8 <test@@Base+0x11c8>
  4034b6:	mov    rdi,QWORD PTR [rbp-0x70]
  4034ba:	mov    rax,QWORD PTR [rbp-0x10]
  4034be:	add    rax,0x5
  4034c4:	mov    rdx,QWORD PTR [rbp-0x18]
  4034c8:	mov    rsi,rax
  4034cb:	call   404620 <test@@Base+0x1440>
  4034d0:	mov    QWORD PTR [rbp-0x10],rax
  4034d4:	mov    rdi,QWORD PTR [rbp-0x70]
  4034d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4034dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4034e0:	call   404470 <test@@Base+0x1290>
  4034e5:	mov    QWORD PTR [rbp-0x10],rax
  4034e9:	mov    rax,QWORD PTR [rbp-0x10]
  4034ed:	cmp    rax,QWORD PTR [rbp-0x18]
  4034f1:	jne    403514 <test@@Base+0x334>
  4034f7:	mov    rax,QWORD PTR [rip+0x15afa]        # 418ff8 <stderr@GLIBC_2.2.5>
  4034fe:	mov    rdi,QWORD PTR [rax]
  403501:	lea    rsi,[rip+0xedc3]        # 4122cb <g_data@@Base+0x28b>
  403508:	mov    al,0x0
  40350a:	call   4030a0 <fprintf@plt>
  40350f:	jmp    4043a8 <test@@Base+0x11c8>
  403514:	mov    rax,QWORD PTR [rbp-0x18]
  403518:	cmp    rax,QWORD PTR [rbp-0x10]
  40351c:	jbe    403545 <test@@Base+0x365>
  403522:	mov    rax,QWORD PTR [rbp-0x10]
  403526:	movsx  ecx,BYTE PTR [rax]
  403529:	cmp    ecx,0x3a
  40352c:	jne    403545 <test@@Base+0x365>
  403532:	mov    rax,QWORD PTR [rbp-0x10]
  403536:	add    rax,0x1
  40353c:	mov    QWORD PTR [rbp-0x10],rax
  403540:	jmp    403587 <test@@Base+0x3a7>
  403545:	mov    rax,QWORD PTR [rip+0x15aac]        # 418ff8 <stderr@GLIBC_2.2.5>
  40354c:	mov    rdi,QWORD PTR [rax]
  40354f:	lea    rsi,[rip+0xed83]        # 4122d9 <g_data@@Base+0x299>
  403556:	mov    edx,0x3a
  40355b:	mov    al,0x0
  40355d:	call   4030a0 <fprintf@plt>
  403562:	mov    rdi,QWORD PTR [rbp-0x70]
  403566:	mov    rsi,QWORD PTR [rbp-0x10]
  40356a:	mov    rdx,QWORD PTR [rbp-0x18]
  40356e:	mov    ecx,0x11
  403573:	mov    DWORD PTR [rbp-0xc4],eax
  403579:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40357e:	mov    QWORD PTR [rbp-0x10],rax
  403582:	jmp    4043a8 <test@@Base+0x11c8>
  403587:	mov    rdi,QWORD PTR [rbp-0x70]
  40358b:	mov    rsi,QWORD PTR [rbp-0x10]
  40358f:	mov    rdx,QWORD PTR [rbp-0x18]
  403593:	call   404470 <test@@Base+0x1290>
  403598:	mov    QWORD PTR [rbp-0x10],rax
  40359c:	mov    rax,QWORD PTR [rbp-0x10]
  4035a0:	cmp    rax,QWORD PTR [rbp-0x18]
  4035a4:	jne    4035c7 <test@@Base+0x3e7>
  4035aa:	mov    rax,QWORD PTR [rip+0x15a47]        # 418ff8 <stderr@GLIBC_2.2.5>
  4035b1:	mov    rdi,QWORD PTR [rax]
  4035b4:	lea    rsi,[rip+0xed10]        # 4122cb <g_data@@Base+0x28b>
  4035bb:	mov    al,0x0
  4035bd:	call   4030a0 <fprintf@plt>
  4035c2:	jmp    4043a8 <test@@Base+0x11c8>
  4035c7:	xor    esi,esi
  4035c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4035cd:	mov    edx,0x1
  4035d2:	mov    ecx,0x1
  4035d7:	call   409380 <flatcc_builder_table_add@@Base>
  4035dc:	mov    QWORD PTR [rbp-0xa8],rax
  4035e3:	cmp    QWORD PTR [rbp-0xa8],0x0
  4035eb:	jne    4035f6 <test@@Base+0x416>
  4035f1:	jmp    4043a8 <test@@Base+0x11c8>
  4035f6:	mov    rax,QWORD PTR [rbp-0x10]
  4035fa:	mov    QWORD PTR [rbp-0x90],rax
  403601:	mov    rdi,QWORD PTR [rbp-0x70]
  403605:	mov    rsi,QWORD PTR [rbp-0x10]
  403609:	mov    rdx,QWORD PTR [rbp-0x18]
  40360d:	mov    rcx,QWORD PTR [rbp-0xa8]
  403614:	call   404830 <test@@Base+0x1650>
  403619:	mov    QWORD PTR [rbp-0x10],rax
  40361d:	mov    rax,QWORD PTR [rbp-0x90]
  403624:	cmp    rax,QWORD PTR [rbp-0x10]
  403628:	jne    403633 <test@@Base+0x453>
  40362e:	jmp    4043a8 <test@@Base+0x11c8>
  403633:	jmp    403638 <test@@Base+0x458>
  403638:	jmp    40421a <test@@Base+0x103a>
  40363d:	movabs rax,0xffffffff00000000
  403647:	and    rax,QWORD PTR [rbp-0x88]
  40364e:	movsx  rcx,BYTE PTR [rip+0xeca6]        # 4122fc <g_data@@Base+0x2bc>
  403656:	shl    rcx,0x38
  40365a:	movsx  rdx,BYTE PTR [rip+0xec9b]        # 4122fd <g_data@@Base+0x2bd>
  403662:	shl    rdx,0x30
  403666:	or     rcx,rdx
  403669:	movsx  rdx,BYTE PTR [rip+0xec8d]        # 4122fe <g_data@@Base+0x2be>
  403671:	shl    rdx,0x28
  403675:	or     rcx,rdx
  403678:	movsx  rdx,BYTE PTR [rip+0xec7f]        # 4122ff <g_data@@Base+0x2bf>
  403680:	shl    rdx,0x20
  403684:	or     rcx,rdx
  403687:	cmp    rax,rcx
  40368a:	jae    403ea1 <test@@Base+0xcc1>
  403690:	mov    rax,QWORD PTR [rbp-0x88]
  403697:	and    rax,0xffffffffffffffff
  40369d:	movsx  rcx,BYTE PTR [rip+0xec5c]        # 412301 <g_data@@Base+0x2c1>
  4036a5:	shl    rcx,0x38
  4036a9:	movsx  rdx,BYTE PTR [rip+0xec51]        # 412302 <g_data@@Base+0x2c2>
  4036b1:	shl    rdx,0x30
  4036b5:	or     rcx,rdx
  4036b8:	movsx  rdx,BYTE PTR [rip+0xec43]        # 412303 <g_data@@Base+0x2c3>
  4036c0:	shl    rdx,0x28
  4036c4:	or     rcx,rdx
  4036c7:	movsx  rdx,BYTE PTR [rip+0xec35]        # 412304 <g_data@@Base+0x2c4>
  4036cf:	shl    rdx,0x20
  4036d3:	or     rcx,rdx
  4036d6:	movsx  rdx,BYTE PTR [rip+0xec27]        # 412305 <g_data@@Base+0x2c5>
  4036de:	shl    rdx,0x18
  4036e2:	or     rcx,rdx
  4036e5:	movsx  rdx,BYTE PTR [rip+0xec19]        # 412306 <g_data@@Base+0x2c6>
  4036ed:	shl    rdx,0x10
  4036f1:	or     rcx,rdx
  4036f4:	movsx  rdx,BYTE PTR [rip+0xec0b]        # 412307 <g_data@@Base+0x2c7>
  4036fc:	shl    rdx,0x8
  403700:	or     rcx,rdx
  403703:	movsx  rdx,BYTE PTR [rip+0xebfd]        # 412308 <g_data@@Base+0x2c8>
  40370b:	shl    rdx,0x0
  40370f:	or     rcx,rdx
  403712:	cmp    rax,rcx
  403715:	jae    403934 <test@@Base+0x754>
  40371b:	mov    rax,QWORD PTR [rbp-0x88]
  403722:	and    rax,0xffffffffffff0000
  403728:	movsx  rcx,BYTE PTR [rip+0xebbf]        # 4122ef <g_data@@Base+0x2af>
  403730:	shl    rcx,0x38
  403734:	movsx  rdx,BYTE PTR [rip+0xebb4]        # 4122f0 <g_data@@Base+0x2b0>
  40373c:	shl    rdx,0x30
  403740:	or     rcx,rdx
  403743:	movsx  rdx,BYTE PTR [rip+0xeba6]        # 4122f1 <g_data@@Base+0x2b1>
  40374b:	shl    rdx,0x28
  40374f:	or     rcx,rdx
  403752:	movsx  rdx,BYTE PTR [rip+0xeb98]        # 4122f2 <g_data@@Base+0x2b2>
  40375a:	shl    rdx,0x20
  40375e:	or     rcx,rdx
  403761:	movsx  rdx,BYTE PTR [rip+0xeb8a]        # 4122f3 <g_data@@Base+0x2b3>
  403769:	shl    rdx,0x18
  40376d:	or     rcx,rdx
  403770:	movsx  rdx,BYTE PTR [rip+0xeb7c]        # 4122f4 <g_data@@Base+0x2b4>
  403778:	shl    rdx,0x10
  40377c:	or     rcx,rdx
  40377f:	cmp    rax,rcx
  403782:	je     4037a7 <test@@Base+0x5c7>
  403788:	mov    rdi,QWORD PTR [rbp-0x70]
  40378c:	mov    rsi,QWORD PTR [rbp-0x10]
  403790:	mov    rdx,QWORD PTR [rbp-0x18]
  403794:	mov    ecx,0xd
  403799:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40379e:	mov    QWORD PTR [rbp-0x10],rax
  4037a2:	jmp    4043a8 <test@@Base+0x11c8>
  4037a7:	mov    rdi,QWORD PTR [rbp-0x70]
  4037ab:	mov    rax,QWORD PTR [rbp-0x10]
  4037af:	add    rax,0x6
  4037b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4037b9:	mov    rsi,rax
  4037bc:	call   404620 <test@@Base+0x1440>
  4037c1:	mov    QWORD PTR [rbp-0x10],rax
  4037c5:	mov    rdi,QWORD PTR [rbp-0x70]
  4037c9:	mov    rsi,QWORD PTR [rbp-0x10]
  4037cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4037d1:	call   404470 <test@@Base+0x1290>
  4037d6:	mov    QWORD PTR [rbp-0x10],rax
  4037da:	mov    rax,QWORD PTR [rbp-0x10]
  4037de:	cmp    rax,QWORD PTR [rbp-0x18]
  4037e2:	jne    403805 <test@@Base+0x625>
  4037e8:	mov    rax,QWORD PTR [rip+0x15809]        # 418ff8 <stderr@GLIBC_2.2.5>
  4037ef:	mov    rdi,QWORD PTR [rax]
  4037f2:	lea    rsi,[rip+0xead2]        # 4122cb <g_data@@Base+0x28b>
  4037f9:	mov    al,0x0
  4037fb:	call   4030a0 <fprintf@plt>
  403800:	jmp    4043a8 <test@@Base+0x11c8>
  403805:	mov    rax,QWORD PTR [rbp-0x18]
  403809:	cmp    rax,QWORD PTR [rbp-0x10]
  40380d:	jbe    403836 <test@@Base+0x656>
  403813:	mov    rax,QWORD PTR [rbp-0x10]
  403817:	movsx  ecx,BYTE PTR [rax]
  40381a:	cmp    ecx,0x3a
  40381d:	jne    403836 <test@@Base+0x656>
  403823:	mov    rax,QWORD PTR [rbp-0x10]
  403827:	add    rax,0x1
  40382d:	mov    QWORD PTR [rbp-0x10],rax
  403831:	jmp    403878 <test@@Base+0x698>
  403836:	mov    rax,QWORD PTR [rip+0x157bb]        # 418ff8 <stderr@GLIBC_2.2.5>
  40383d:	mov    rdi,QWORD PTR [rax]
  403840:	lea    rsi,[rip+0xea92]        # 4122d9 <g_data@@Base+0x299>
  403847:	mov    edx,0x3a
  40384c:	mov    al,0x0
  40384e:	call   4030a0 <fprintf@plt>
  403853:	mov    rdi,QWORD PTR [rbp-0x70]
  403857:	mov    rsi,QWORD PTR [rbp-0x10]
  40385b:	mov    rdx,QWORD PTR [rbp-0x18]
  40385f:	mov    ecx,0x11
  403864:	mov    DWORD PTR [rbp-0xc8],eax
  40386a:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40386f:	mov    QWORD PTR [rbp-0x10],rax
  403873:	jmp    4043a8 <test@@Base+0x11c8>
  403878:	mov    rdi,QWORD PTR [rbp-0x70]
  40387c:	mov    rsi,QWORD PTR [rbp-0x10]
  403880:	mov    rdx,QWORD PTR [rbp-0x18]
  403884:	call   404470 <test@@Base+0x1290>
  403889:	mov    QWORD PTR [rbp-0x10],rax
  40388d:	mov    rax,QWORD PTR [rbp-0x10]
  403891:	cmp    rax,QWORD PTR [rbp-0x18]
  403895:	jne    4038b8 <test@@Base+0x6d8>
  40389b:	mov    rax,QWORD PTR [rip+0x15756]        # 418ff8 <stderr@GLIBC_2.2.5>
  4038a2:	mov    rdi,QWORD PTR [rax]
  4038a5:	lea    rsi,[rip+0xea1f]        # 4122cb <g_data@@Base+0x28b>
  4038ac:	mov    al,0x0
  4038ae:	call   4030a0 <fprintf@plt>
  4038b3:	jmp    4043a8 <test@@Base+0x11c8>
  4038b8:	mov    rdi,QWORD PTR [rbp-0x8]
  4038bc:	mov    esi,0x1
  4038c1:	mov    edx,0x8
  4038c6:	mov    ecx,0x8
  4038cb:	call   409380 <flatcc_builder_table_add@@Base>
  4038d0:	mov    QWORD PTR [rbp-0xa8],rax
  4038d7:	cmp    QWORD PTR [rbp-0xa8],0x0
  4038df:	jne    4038ea <test@@Base+0x70a>
  4038e5:	jmp    4043a8 <test@@Base+0x11c8>
  4038ea:	mov    rax,QWORD PTR [rbp-0x10]
  4038ee:	mov    QWORD PTR [rbp-0x90],rax
  4038f5:	mov    rdi,QWORD PTR [rbp-0x70]
  4038f9:	mov    rsi,QWORD PTR [rbp-0x10]
  4038fd:	mov    rdx,QWORD PTR [rbp-0x18]
  403901:	mov    rax,QWORD PTR [rbp-0xa8]
  403908:	mov    rcx,rax
  40390b:	call   40dbf0 <flatcc_json_parser_double@@Base>
  403910:	mov    QWORD PTR [rbp-0x10],rax
  403914:	mov    rax,QWORD PTR [rbp-0x90]
  40391b:	cmp    rax,QWORD PTR [rbp-0x10]
  40391f:	jne    40392a <test@@Base+0x74a>
  403925:	jmp    4043a8 <test@@Base+0x11c8>
  40392a:	jmp    40392f <test@@Base+0x74f>
  40392f:	jmp    403e9c <test@@Base+0xcbc>
  403934:	mov    rax,QWORD PTR [rbp-0x88]
  40393b:	and    rax,0xffffffffffffffff
  403941:	movsx  rcx,BYTE PTR [rip+0xe9b8]        # 412301 <g_data@@Base+0x2c1>
  403949:	shl    rcx,0x38
  40394d:	movsx  rdx,BYTE PTR [rip+0xe9ad]        # 412302 <g_data@@Base+0x2c2>
  403955:	shl    rdx,0x30
  403959:	or     rcx,rdx
  40395c:	movsx  rdx,BYTE PTR [rip+0xe99f]        # 412303 <g_data@@Base+0x2c3>
  403964:	shl    rdx,0x28
  403968:	or     rcx,rdx
  40396b:	movsx  rdx,BYTE PTR [rip+0xe991]        # 412304 <g_data@@Base+0x2c4>
  403973:	shl    rdx,0x20
  403977:	or     rcx,rdx
  40397a:	movsx  rdx,BYTE PTR [rip+0xe983]        # 412305 <g_data@@Base+0x2c5>
  403982:	shl    rdx,0x18
  403986:	or     rcx,rdx
  403989:	movsx  rdx,BYTE PTR [rip+0xe975]        # 412306 <g_data@@Base+0x2c6>
  403991:	shl    rdx,0x10
  403995:	or     rcx,rdx
  403998:	movsx  rdx,BYTE PTR [rip+0xe967]        # 412307 <g_data@@Base+0x2c7>
  4039a0:	shl    rdx,0x8
  4039a4:	or     rcx,rdx
  4039a7:	movsx  rdx,BYTE PTR [rip+0xe959]        # 412308 <g_data@@Base+0x2c8>
  4039af:	shl    rdx,0x0
  4039b3:	or     rcx,rdx
  4039b6:	cmp    rax,rcx
  4039b9:	je     4039de <test@@Base+0x7fe>
  4039bf:	mov    rdi,QWORD PTR [rbp-0x70]
  4039c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4039c7:	mov    rdx,QWORD PTR [rbp-0x18]
  4039cb:	mov    ecx,0xd
  4039d0:	call   40c440 <flatcc_json_parser_set_error@@Base>
  4039d5:	mov    QWORD PTR [rbp-0x10],rax
  4039d9:	jmp    4043a8 <test@@Base+0x11c8>
  4039de:	mov    rax,QWORD PTR [rbp-0x90]
  4039e5:	mov    QWORD PTR [rbp-0x10],rax
  4039e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4039ed:	mov    rsi,QWORD PTR [rbp-0x18]
  4039f1:	call   4045c0 <test@@Base+0x13e0>
  4039f6:	mov    QWORD PTR [rbp-0x88],rax
  4039fd:	mov    rax,QWORD PTR [rbp-0x18]
  403a01:	mov    rcx,QWORD PTR [rbp-0x10]
  403a05:	sub    rax,rcx
  403a08:	cmp    rax,0x8
  403a0c:	jle    403a28 <test@@Base+0x848>
  403a12:	mov    rax,QWORD PTR [rbp-0x10]
  403a16:	add    rax,0x8
  403a1c:	mov    QWORD PTR [rbp-0xd0],rax
  403a23:	jmp    403a33 <test@@Base+0x853>
  403a28:	mov    rax,QWORD PTR [rbp-0x18]
  403a2c:	mov    QWORD PTR [rbp-0xd0],rax
  403a33:	mov    rax,QWORD PTR [rbp-0xd0]
  403a3a:	mov    QWORD PTR [rbp-0x90],rax
  403a41:	movabs rax,0xffffffff00000000
  403a4b:	and    rax,QWORD PTR [rbp-0x88]
  403a52:	movsx  rcx,BYTE PTR [rip+0xe8b0]        # 41230a <g_data@@Base+0x2ca>
  403a5a:	shl    rcx,0x38
  403a5e:	movsx  rdx,BYTE PTR [rip+0xe8a5]        # 41230b <g_data@@Base+0x2cb>
  403a66:	shl    rdx,0x30
  403a6a:	or     rcx,rdx
  403a6d:	movsx  rdx,BYTE PTR [rip+0xe897]        # 41230c <g_data@@Base+0x2cc>
  403a75:	shl    rdx,0x28
  403a79:	or     rcx,rdx
  403a7c:	movsx  rdx,BYTE PTR [rip+0xe889]        # 41230d <g_data@@Base+0x2cd>
  403a84:	shl    rdx,0x20
  403a88:	or     rcx,rdx
  403a8b:	cmp    rax,rcx
  403a8e:	jae    403c93 <test@@Base+0xab3>
  403a94:	movabs rax,0xffffffff00000000
  403a9e:	and    rax,QWORD PTR [rbp-0x88]
  403aa5:	movsx  rcx,BYTE PTR [rip+0xe862]        # 41230f <g_data@@Base+0x2cf>
  403aad:	shl    rcx,0x38
  403ab1:	movsx  rdx,BYTE PTR [rip+0xe857]        # 412310 <g_data@@Base+0x2d0>
  403ab9:	shl    rdx,0x30
  403abd:	or     rcx,rdx
  403ac0:	movsx  rdx,BYTE PTR [rip+0xe849]        # 412311 <g_data@@Base+0x2d1>
  403ac8:	shl    rdx,0x28
  403acc:	or     rcx,rdx
  403acf:	movsx  rdx,BYTE PTR [rip+0xe83b]        # 412312 <g_data@@Base+0x2d2>
  403ad7:	shl    rdx,0x20
  403adb:	or     rcx,rdx
  403ade:	cmp    rax,rcx
  403ae1:	je     403b06 <test@@Base+0x926>
  403ae7:	mov    rdi,QWORD PTR [rbp-0x70]
  403aeb:	mov    rsi,QWORD PTR [rbp-0x10]
  403aef:	mov    rdx,QWORD PTR [rbp-0x18]
  403af3:	mov    ecx,0xd
  403af8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403afd:	mov    QWORD PTR [rbp-0x10],rax
  403b01:	jmp    4043a8 <test@@Base+0x11c8>
  403b06:	mov    rdi,QWORD PTR [rbp-0x70]
  403b0a:	mov    rax,QWORD PTR [rbp-0x10]
  403b0e:	add    rax,0x4
  403b14:	mov    rdx,QWORD PTR [rbp-0x18]
  403b18:	mov    rsi,rax
  403b1b:	call   404620 <test@@Base+0x1440>
  403b20:	mov    QWORD PTR [rbp-0x10],rax
  403b24:	mov    rdi,QWORD PTR [rbp-0x70]
  403b28:	mov    rsi,QWORD PTR [rbp-0x10]
  403b2c:	mov    rdx,QWORD PTR [rbp-0x18]
  403b30:	call   404470 <test@@Base+0x1290>
  403b35:	mov    QWORD PTR [rbp-0x10],rax
  403b39:	mov    rax,QWORD PTR [rbp-0x10]
  403b3d:	cmp    rax,QWORD PTR [rbp-0x18]
  403b41:	jne    403b64 <test@@Base+0x984>
  403b47:	mov    rax,QWORD PTR [rip+0x154aa]        # 418ff8 <stderr@GLIBC_2.2.5>
  403b4e:	mov    rdi,QWORD PTR [rax]
  403b51:	lea    rsi,[rip+0xe773]        # 4122cb <g_data@@Base+0x28b>
  403b58:	mov    al,0x0
  403b5a:	call   4030a0 <fprintf@plt>
  403b5f:	jmp    4043a8 <test@@Base+0x11c8>
  403b64:	mov    rax,QWORD PTR [rbp-0x18]
  403b68:	cmp    rax,QWORD PTR [rbp-0x10]
  403b6c:	jbe    403b95 <test@@Base+0x9b5>
  403b72:	mov    rax,QWORD PTR [rbp-0x10]
  403b76:	movsx  ecx,BYTE PTR [rax]
  403b79:	cmp    ecx,0x3a
  403b7c:	jne    403b95 <test@@Base+0x9b5>
  403b82:	mov    rax,QWORD PTR [rbp-0x10]
  403b86:	add    rax,0x1
  403b8c:	mov    QWORD PTR [rbp-0x10],rax
  403b90:	jmp    403bd7 <test@@Base+0x9f7>
  403b95:	mov    rax,QWORD PTR [rip+0x1545c]        # 418ff8 <stderr@GLIBC_2.2.5>
  403b9c:	mov    rdi,QWORD PTR [rax]
  403b9f:	lea    rsi,[rip+0xe733]        # 4122d9 <g_data@@Base+0x299>
  403ba6:	mov    edx,0x3a
  403bab:	mov    al,0x0
  403bad:	call   4030a0 <fprintf@plt>
  403bb2:	mov    rdi,QWORD PTR [rbp-0x70]
  403bb6:	mov    rsi,QWORD PTR [rbp-0x10]
  403bba:	mov    rdx,QWORD PTR [rbp-0x18]
  403bbe:	mov    ecx,0x11
  403bc3:	mov    DWORD PTR [rbp-0xd4],eax
  403bc9:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403bce:	mov    QWORD PTR [rbp-0x10],rax
  403bd2:	jmp    4043a8 <test@@Base+0x11c8>
  403bd7:	mov    rdi,QWORD PTR [rbp-0x70]
  403bdb:	mov    rsi,QWORD PTR [rbp-0x10]
  403bdf:	mov    rdx,QWORD PTR [rbp-0x18]
  403be3:	call   404470 <test@@Base+0x1290>
  403be8:	mov    QWORD PTR [rbp-0x10],rax
  403bec:	mov    rax,QWORD PTR [rbp-0x10]
  403bf0:	cmp    rax,QWORD PTR [rbp-0x18]
  403bf4:	jne    403c17 <test@@Base+0xa37>
  403bfa:	mov    rax,QWORD PTR [rip+0x153f7]        # 418ff8 <stderr@GLIBC_2.2.5>
  403c01:	mov    rdi,QWORD PTR [rax]
  403c04:	lea    rsi,[rip+0xe6c0]        # 4122cb <g_data@@Base+0x28b>
  403c0b:	mov    al,0x0
  403c0d:	call   4030a0 <fprintf@plt>
  403c12:	jmp    4043a8 <test@@Base+0x11c8>
  403c17:	mov    rdi,QWORD PTR [rbp-0x8]
  403c1b:	mov    esi,0x3
  403c20:	mov    edx,0x8
  403c25:	mov    ecx,0x8
  403c2a:	call   409380 <flatcc_builder_table_add@@Base>
  403c2f:	mov    QWORD PTR [rbp-0xa8],rax
  403c36:	cmp    QWORD PTR [rbp-0xa8],0x0
  403c3e:	jne    403c49 <test@@Base+0xa69>
  403c44:	jmp    4043a8 <test@@Base+0x11c8>
  403c49:	mov    rax,QWORD PTR [rbp-0x10]
  403c4d:	mov    QWORD PTR [rbp-0x90],rax
  403c54:	mov    rdi,QWORD PTR [rbp-0x70]
  403c58:	mov    rsi,QWORD PTR [rbp-0x10]
  403c5c:	mov    rdx,QWORD PTR [rbp-0x18]
  403c60:	mov    rax,QWORD PTR [rbp-0xa8]
  403c67:	mov    rcx,rax
  403c6a:	call   4048f0 <test@@Base+0x1710>
  403c6f:	mov    QWORD PTR [rbp-0x10],rax
  403c73:	mov    rax,QWORD PTR [rbp-0x90]
  403c7a:	cmp    rax,QWORD PTR [rbp-0x10]
  403c7e:	jne    403c89 <test@@Base+0xaa9>
  403c84:	jmp    4043a8 <test@@Base+0x11c8>
  403c89:	jmp    403c8e <test@@Base+0xaae>
  403c8e:	jmp    403e92 <test@@Base+0xcb2>
  403c93:	movabs rax,0xffffffff00000000
  403c9d:	and    rax,QWORD PTR [rbp-0x88]
  403ca4:	movsx  rcx,BYTE PTR [rip+0xe65e]        # 41230a <g_data@@Base+0x2ca>
  403cac:	shl    rcx,0x38
  403cb0:	movsx  rdx,BYTE PTR [rip+0xe653]        # 41230b <g_data@@Base+0x2cb>
  403cb8:	shl    rdx,0x30
  403cbc:	or     rcx,rdx
  403cbf:	movsx  rdx,BYTE PTR [rip+0xe645]        # 41230c <g_data@@Base+0x2cc>
  403cc7:	shl    rdx,0x28
  403ccb:	or     rcx,rdx
  403cce:	movsx  rdx,BYTE PTR [rip+0xe637]        # 41230d <g_data@@Base+0x2cd>
  403cd6:	shl    rdx,0x20
  403cda:	or     rcx,rdx
  403cdd:	cmp    rax,rcx
  403ce0:	je     403d05 <test@@Base+0xb25>
  403ce6:	mov    rdi,QWORD PTR [rbp-0x70]
  403cea:	mov    rsi,QWORD PTR [rbp-0x10]
  403cee:	mov    rdx,QWORD PTR [rbp-0x18]
  403cf2:	mov    ecx,0xd
  403cf7:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403cfc:	mov    QWORD PTR [rbp-0x10],rax
  403d00:	jmp    4043a8 <test@@Base+0x11c8>
  403d05:	mov    rdi,QWORD PTR [rbp-0x70]
  403d09:	mov    rax,QWORD PTR [rbp-0x10]
  403d0d:	add    rax,0x4
  403d13:	mov    rdx,QWORD PTR [rbp-0x18]
  403d17:	mov    rsi,rax
  403d1a:	call   404620 <test@@Base+0x1440>
  403d1f:	mov    QWORD PTR [rbp-0x10],rax
  403d23:	mov    rdi,QWORD PTR [rbp-0x70]
  403d27:	mov    rsi,QWORD PTR [rbp-0x10]
  403d2b:	mov    rdx,QWORD PTR [rbp-0x18]
  403d2f:	call   404470 <test@@Base+0x1290>
  403d34:	mov    QWORD PTR [rbp-0x10],rax
  403d38:	mov    rax,QWORD PTR [rbp-0x10]
  403d3c:	cmp    rax,QWORD PTR [rbp-0x18]
  403d40:	jne    403d63 <test@@Base+0xb83>
  403d46:	mov    rax,QWORD PTR [rip+0x152ab]        # 418ff8 <stderr@GLIBC_2.2.5>
  403d4d:	mov    rdi,QWORD PTR [rax]
  403d50:	lea    rsi,[rip+0xe574]        # 4122cb <g_data@@Base+0x28b>
  403d57:	mov    al,0x0
  403d59:	call   4030a0 <fprintf@plt>
  403d5e:	jmp    4043a8 <test@@Base+0x11c8>
  403d63:	mov    rax,QWORD PTR [rbp-0x18]
  403d67:	cmp    rax,QWORD PTR [rbp-0x10]
  403d6b:	jbe    403d94 <test@@Base+0xbb4>
  403d71:	mov    rax,QWORD PTR [rbp-0x10]
  403d75:	movsx  ecx,BYTE PTR [rax]
  403d78:	cmp    ecx,0x3a
  403d7b:	jne    403d94 <test@@Base+0xbb4>
  403d81:	mov    rax,QWORD PTR [rbp-0x10]
  403d85:	add    rax,0x1
  403d8b:	mov    QWORD PTR [rbp-0x10],rax
  403d8f:	jmp    403dd6 <test@@Base+0xbf6>
  403d94:	mov    rax,QWORD PTR [rip+0x1525d]        # 418ff8 <stderr@GLIBC_2.2.5>
  403d9b:	mov    rdi,QWORD PTR [rax]
  403d9e:	lea    rsi,[rip+0xe534]        # 4122d9 <g_data@@Base+0x299>
  403da5:	mov    edx,0x3a
  403daa:	mov    al,0x0
  403dac:	call   4030a0 <fprintf@plt>
  403db1:	mov    rdi,QWORD PTR [rbp-0x70]
  403db5:	mov    rsi,QWORD PTR [rbp-0x10]
  403db9:	mov    rdx,QWORD PTR [rbp-0x18]
  403dbd:	mov    ecx,0x11
  403dc2:	mov    DWORD PTR [rbp-0xd8],eax
  403dc8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403dcd:	mov    QWORD PTR [rbp-0x10],rax
  403dd1:	jmp    4043a8 <test@@Base+0x11c8>
  403dd6:	mov    rdi,QWORD PTR [rbp-0x70]
  403dda:	mov    rsi,QWORD PTR [rbp-0x10]
  403dde:	mov    rdx,QWORD PTR [rbp-0x18]
  403de2:	call   404470 <test@@Base+0x1290>
  403de7:	mov    QWORD PTR [rbp-0x10],rax
  403deb:	mov    rax,QWORD PTR [rbp-0x10]
  403def:	cmp    rax,QWORD PTR [rbp-0x18]
  403df3:	jne    403e16 <test@@Base+0xc36>
  403df9:	mov    rax,QWORD PTR [rip+0x151f8]        # 418ff8 <stderr@GLIBC_2.2.5>
  403e00:	mov    rdi,QWORD PTR [rax]
  403e03:	lea    rsi,[rip+0xe4c1]        # 4122cb <g_data@@Base+0x28b>
  403e0a:	mov    al,0x0
  403e0c:	call   4030a0 <fprintf@plt>
  403e11:	jmp    4043a8 <test@@Base+0x11c8>
  403e16:	mov    rdi,QWORD PTR [rbp-0x8]
  403e1a:	mov    esi,0x2
  403e1f:	mov    edx,0x4
  403e24:	mov    ecx,0x4
  403e29:	call   409380 <flatcc_builder_table_add@@Base>
  403e2e:	mov    QWORD PTR [rbp-0xa8],rax
  403e35:	cmp    QWORD PTR [rbp-0xa8],0x0
  403e3d:	jne    403e48 <test@@Base+0xc68>
  403e43:	jmp    4043a8 <test@@Base+0x11c8>
  403e48:	mov    rax,QWORD PTR [rbp-0x10]
  403e4c:	mov    QWORD PTR [rbp-0x90],rax
  403e53:	mov    rdi,QWORD PTR [rbp-0x70]
  403e57:	mov    rsi,QWORD PTR [rbp-0x10]
  403e5b:	mov    rdx,QWORD PTR [rbp-0x18]
  403e5f:	mov    rax,QWORD PTR [rbp-0xa8]
  403e66:	mov    rcx,rax
  403e69:	call   4049b0 <test@@Base+0x17d0>
  403e6e:	mov    QWORD PTR [rbp-0x10],rax
  403e72:	mov    rax,QWORD PTR [rbp-0x90]
  403e79:	cmp    rax,QWORD PTR [rbp-0x10]
  403e7d:	jne    403e88 <test@@Base+0xca8>
  403e83:	jmp    4043a8 <test@@Base+0x11c8>
  403e88:	jmp    403e8d <test@@Base+0xcad>
  403e8d:	jmp    403e92 <test@@Base+0xcb2>
  403e92:	jmp    403e97 <test@@Base+0xcb7>
  403e97:	jmp    403e9c <test@@Base+0xcbc>
  403e9c:	jmp    404215 <test@@Base+0x1035>
  403ea1:	movabs rax,0xffffffff00000000
  403eab:	and    rax,QWORD PTR [rbp-0x88]
  403eb2:	movsx  rcx,BYTE PTR [rip+0xe442]        # 4122fc <g_data@@Base+0x2bc>
  403eba:	shl    rcx,0x38
  403ebe:	movsx  rdx,BYTE PTR [rip+0xe437]        # 4122fd <g_data@@Base+0x2bd>
  403ec6:	shl    rdx,0x30
  403eca:	or     rcx,rdx
  403ecd:	movsx  rdx,BYTE PTR [rip+0xe429]        # 4122fe <g_data@@Base+0x2be>
  403ed5:	shl    rdx,0x28
  403ed9:	or     rcx,rdx
  403edc:	movsx  rdx,BYTE PTR [rip+0xe41b]        # 4122ff <g_data@@Base+0x2bf>
  403ee4:	shl    rdx,0x20
  403ee8:	or     rcx,rdx
  403eeb:	cmp    rax,rcx
  403eee:	je     403f13 <test@@Base+0xd33>
  403ef4:	mov    rdi,QWORD PTR [rbp-0x70]
  403ef8:	mov    rsi,QWORD PTR [rbp-0x10]
  403efc:	mov    rdx,QWORD PTR [rbp-0x18]
  403f00:	mov    ecx,0xd
  403f05:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403f0a:	mov    QWORD PTR [rbp-0x10],rax
  403f0e:	jmp    4043a8 <test@@Base+0x11c8>
  403f13:	mov    rdi,QWORD PTR [rbp-0x70]
  403f17:	mov    rax,QWORD PTR [rbp-0x10]
  403f1b:	add    rax,0x4
  403f21:	mov    rdx,QWORD PTR [rbp-0x18]
  403f25:	mov    rsi,rax
  403f28:	call   404620 <test@@Base+0x1440>
  403f2d:	mov    QWORD PTR [rbp-0x10],rax
  403f31:	mov    rdi,QWORD PTR [rbp-0x70]
  403f35:	mov    rsi,QWORD PTR [rbp-0x10]
  403f39:	mov    rdx,QWORD PTR [rbp-0x18]
  403f3d:	call   404470 <test@@Base+0x1290>
  403f42:	mov    QWORD PTR [rbp-0x10],rax
  403f46:	mov    rax,QWORD PTR [rbp-0x10]
  403f4a:	cmp    rax,QWORD PTR [rbp-0x18]
  403f4e:	jne    403f71 <test@@Base+0xd91>
  403f54:	mov    rax,QWORD PTR [rip+0x1509d]        # 418ff8 <stderr@GLIBC_2.2.5>
  403f5b:	mov    rdi,QWORD PTR [rax]
  403f5e:	lea    rsi,[rip+0xe366]        # 4122cb <g_data@@Base+0x28b>
  403f65:	mov    al,0x0
  403f67:	call   4030a0 <fprintf@plt>
  403f6c:	jmp    4043a8 <test@@Base+0x11c8>
  403f71:	mov    rax,QWORD PTR [rbp-0x18]
  403f75:	cmp    rax,QWORD PTR [rbp-0x10]
  403f79:	jbe    403fa2 <test@@Base+0xdc2>
  403f7f:	mov    rax,QWORD PTR [rbp-0x10]
  403f83:	movsx  ecx,BYTE PTR [rax]
  403f86:	cmp    ecx,0x3a
  403f89:	jne    403fa2 <test@@Base+0xdc2>
  403f8f:	mov    rax,QWORD PTR [rbp-0x10]
  403f93:	add    rax,0x1
  403f99:	mov    QWORD PTR [rbp-0x10],rax
  403f9d:	jmp    403fe4 <test@@Base+0xe04>
  403fa2:	mov    rax,QWORD PTR [rip+0x1504f]        # 418ff8 <stderr@GLIBC_2.2.5>
  403fa9:	mov    rdi,QWORD PTR [rax]
  403fac:	lea    rsi,[rip+0xe326]        # 4122d9 <g_data@@Base+0x299>
  403fb3:	mov    edx,0x3a
  403fb8:	mov    al,0x0
  403fba:	call   4030a0 <fprintf@plt>
  403fbf:	mov    rdi,QWORD PTR [rbp-0x70]
  403fc3:	mov    rsi,QWORD PTR [rbp-0x10]
  403fc7:	mov    rdx,QWORD PTR [rbp-0x18]
  403fcb:	mov    ecx,0x11
  403fd0:	mov    DWORD PTR [rbp-0xdc],eax
  403fd6:	call   40c440 <flatcc_json_parser_set_error@@Base>
  403fdb:	mov    QWORD PTR [rbp-0x10],rax
  403fdf:	jmp    4043a8 <test@@Base+0x11c8>
  403fe4:	mov    rdi,QWORD PTR [rbp-0x70]
  403fe8:	mov    rsi,QWORD PTR [rbp-0x10]
  403fec:	mov    rdx,QWORD PTR [rbp-0x18]
  403ff0:	call   404470 <test@@Base+0x1290>
  403ff5:	mov    QWORD PTR [rbp-0x10],rax
  403ff9:	mov    rax,QWORD PTR [rbp-0x10]
  403ffd:	cmp    rax,QWORD PTR [rbp-0x18]
  404001:	jne    404024 <test@@Base+0xe44>
  404007:	mov    rax,QWORD PTR [rip+0x14fea]        # 418ff8 <stderr@GLIBC_2.2.5>
  40400e:	mov    rdi,QWORD PTR [rax]
  404011:	lea    rsi,[rip+0xe2b3]        # 4122cb <g_data@@Base+0x28b>
  404018:	mov    al,0x0
  40401a:	call   4030a0 <fprintf@plt>
  40401f:	jmp    4043a8 <test@@Base+0x11c8>
  404024:	mov    rdi,QWORD PTR [rbp-0x70]
  404028:	mov    rsi,QWORD PTR [rbp-0x10]
  40402c:	mov    rdx,QWORD PTR [rbp-0x18]
  404030:	call   404a70 <test@@Base+0x1890>
  404035:	mov    QWORD PTR [rbp-0x10],rax
  404039:	mov    rax,QWORD PTR [rbp-0x10]
  40403d:	mov    QWORD PTR [rbp-0x90],rax
  404044:	mov    rdi,QWORD PTR [rbp-0x70]
  404048:	mov    rsi,QWORD PTR [rbp-0x10]
  40404c:	mov    rdx,QWORD PTR [rbp-0x18]
  404050:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  404055:	mov    QWORD PTR [rbp-0x10],rax
  404059:	mov    rax,QWORD PTR [rbp-0x10]
  40405d:	cmp    rax,QWORD PTR [rbp-0x18]
  404061:	jne    40406c <test@@Base+0xe8c>
  404067:	jmp    4043a8 <test@@Base+0x11c8>
  40406c:	mov    rax,QWORD PTR [rbp-0x10]
  404070:	movsx  ecx,BYTE PTR [rax]
  404073:	cmp    ecx,0x22
  404076:	jne    4040a5 <test@@Base+0xec5>
  40407c:	mov    rdi,QWORD PTR [rbp-0x8]
  404080:	mov    rsi,QWORD PTR [rbp-0x90]
  404087:	mov    rax,QWORD PTR [rbp-0x10]
  40408b:	mov    rcx,QWORD PTR [rbp-0x90]
  404092:	sub    rax,rcx
  404095:	mov    rdx,rax
  404098:	call   409d00 <flatcc_builder_create_string@@Base>
  40409d:	mov    DWORD PTR [rbp-0x78],eax
  4040a0:	jmp    4041c1 <test@@Base+0xfe1>
  4040a5:	mov    rdi,QWORD PTR [rbp-0x8]
  4040a9:	call   4078e0 <flatcc_builder_start_string@@Base>
  4040ae:	mov    rdi,QWORD PTR [rbp-0x8]
  4040b2:	mov    rcx,QWORD PTR [rbp-0x10]
  4040b6:	mov    rdx,QWORD PTR [rbp-0x90]
  4040bd:	sub    rcx,rdx
  4040c0:	mov    rsi,rcx
  4040c3:	mov    DWORD PTR [rbp-0xe0],eax
  4040c9:	call   407100 <flatcc_builder_extend_string@@Base>
  4040ce:	mov    QWORD PTR [rbp-0x98],rax
  4040d5:	cmp    QWORD PTR [rbp-0x98],0x0
  4040dd:	jne    4040e8 <test@@Base+0xf08>
  4040e3:	jmp    4043a8 <test@@Base+0x11c8>
  4040e8:	mov    rdi,QWORD PTR [rbp-0x98]
  4040ef:	mov    rsi,QWORD PTR [rbp-0x90]
  4040f6:	mov    rax,QWORD PTR [rbp-0x10]
  4040fa:	mov    rcx,QWORD PTR [rbp-0x90]
  404101:	sub    rax,rcx
  404104:	mov    rdx,rax
  404107:	call   4030b0 <memcpy@plt>
  40410c:	lea    rcx,[rbp-0x9c]
  404113:	mov    rdi,QWORD PTR [rbp-0x70]
  404117:	mov    rsi,QWORD PTR [rbp-0x10]
  40411b:	mov    rdx,QWORD PTR [rbp-0x18]
  40411f:	call   40c7c0 <flatcc_json_parser_string_escape@@Base>
  404124:	lea    rcx,[rbp-0x9c]
  40412b:	mov    QWORD PTR [rbp-0x10],rax
  40412f:	mov    rdi,QWORD PTR [rbp-0x8]
  404133:	add    rcx,0x1
  40413a:	movsx  rdx,BYTE PTR [rbp-0x9c]
  404142:	mov    rsi,rcx
  404145:	call   407190 <flatcc_builder_append_string@@Base>
  40414a:	mov    rcx,QWORD PTR [rbp-0x10]
  40414e:	mov    QWORD PTR [rbp-0x90],rcx
  404155:	mov    rdi,QWORD PTR [rbp-0x70]
  404159:	mov    rsi,QWORD PTR [rbp-0x10]
  40415d:	mov    rdx,QWORD PTR [rbp-0x18]
  404161:	mov    QWORD PTR [rbp-0xe8],rax
  404168:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  40416d:	mov    QWORD PTR [rbp-0x10],rax
  404171:	mov    rax,QWORD PTR [rbp-0x10]
  404175:	cmp    rax,QWORD PTR [rbp-0x18]
  404179:	jne    404184 <test@@Base+0xfa4>
  40417f:	jmp    4043a8 <test@@Base+0x11c8>
  404184:	mov    rdi,QWORD PTR [rbp-0x8]
  404188:	mov    rsi,QWORD PTR [rbp-0x90]
  40418f:	mov    rax,QWORD PTR [rbp-0x10]
  404193:	mov    rcx,QWORD PTR [rbp-0x90]
  40419a:	sub    rax,rcx
  40419d:	mov    rdx,rax
  4041a0:	call   407190 <flatcc_builder_append_string@@Base>
  4041a5:	mov    rax,QWORD PTR [rbp-0x10]
  4041a9:	movsx  ecx,BYTE PTR [rax]
  4041ac:	cmp    ecx,0x22
  4041af:	jne    40410c <test@@Base+0xf2c>
  4041b5:	mov    rdi,QWORD PTR [rbp-0x8]
  4041b9:	call   409f80 <flatcc_builder_end_string@@Base>
  4041be:	mov    DWORD PTR [rbp-0x78],eax
  4041c1:	cmp    DWORD PTR [rbp-0x78],0x0
  4041c5:	jne    4041d0 <test@@Base+0xff0>
  4041cb:	jmp    4043a8 <test@@Base+0x11c8>
  4041d0:	mov    rdi,QWORD PTR [rbp-0x8]
  4041d4:	mov    esi,0xa
  4041d9:	call   409290 <flatcc_builder_table_add_offset@@Base>
  4041de:	mov    QWORD PTR [rbp-0x80],rax
  4041e2:	cmp    QWORD PTR [rbp-0x80],0x0
  4041e7:	jne    4041f2 <test@@Base+0x1012>
  4041ed:	jmp    4043a8 <test@@Base+0x11c8>
  4041f2:	mov    eax,DWORD PTR [rbp-0x78]
  4041f5:	mov    rcx,QWORD PTR [rbp-0x80]
  4041f9:	mov    DWORD PTR [rcx],eax
  4041fb:	mov    rdi,QWORD PTR [rbp-0x70]
  4041ff:	mov    rsi,QWORD PTR [rbp-0x10]
  404203:	mov    rdx,QWORD PTR [rbp-0x18]
  404207:	call   404ae0 <test@@Base+0x1900>
  40420c:	mov    QWORD PTR [rbp-0x10],rax
  404210:	jmp    404215 <test@@Base+0x1035>
  404215:	jmp    40421a <test@@Base+0x103a>
  40421a:	mov    rdi,QWORD PTR [rbp-0x70]
  40421e:	mov    rsi,QWORD PTR [rbp-0x10]
  404222:	mov    rdx,QWORD PTR [rbp-0x18]
  404226:	call   404470 <test@@Base+0x1290>
  40422b:	mov    QWORD PTR [rbp-0x10],rax
  40422f:	mov    rax,QWORD PTR [rbp-0x10]
  404233:	cmp    rax,QWORD PTR [rbp-0x18]
  404237:	jne    40425a <test@@Base+0x107a>
  40423d:	mov    rax,QWORD PTR [rip+0x14db4]        # 418ff8 <stderr@GLIBC_2.2.5>
  404244:	mov    rdi,QWORD PTR [rax]
  404247:	lea    rsi,[rip+0xe07d]        # 4122cb <g_data@@Base+0x28b>
  40424e:	mov    al,0x0
  404250:	call   4030a0 <fprintf@plt>
  404255:	jmp    4043a8 <test@@Base+0x11c8>
  40425a:	mov    rax,QWORD PTR [rbp-0x10]
  40425e:	movsx  ecx,BYTE PTR [rax]
  404261:	cmp    ecx,0x2c
  404264:	jne    4042d2 <test@@Base+0x10f2>
  40426a:	mov    rax,QWORD PTR [rbp-0x10]
  40426e:	add    rax,0x1
  404274:	mov    QWORD PTR [rbp-0x10],rax
  404278:	mov    rdi,QWORD PTR [rbp-0x70]
  40427c:	mov    rsi,QWORD PTR [rbp-0x10]
  404280:	mov    rdx,QWORD PTR [rbp-0x18]
  404284:	call   404470 <test@@Base+0x1290>
  404289:	mov    QWORD PTR [rbp-0x10],rax
  40428d:	mov    rax,QWORD PTR [rbp-0x10]
  404291:	cmp    rax,QWORD PTR [rbp-0x18]
  404295:	jne    4042b8 <test@@Base+0x10d8>
  40429b:	mov    rax,QWORD PTR [rip+0x14d56]        # 418ff8 <stderr@GLIBC_2.2.5>
  4042a2:	mov    rdi,QWORD PTR [rax]
  4042a5:	lea    rsi,[rip+0xe01f]        # 4122cb <g_data@@Base+0x28b>
  4042ac:	mov    al,0x0
  4042ae:	call   4030a0 <fprintf@plt>
  4042b3:	jmp    4043a8 <test@@Base+0x11c8>
  4042b8:	mov    rax,QWORD PTR [rbp-0x10]
  4042bc:	movsx  ecx,BYTE PTR [rax]
  4042bf:	cmp    ecx,0x7d
  4042c2:	je     4042cd <test@@Base+0x10ed>
  4042c8:	jmp    40335f <test@@Base+0x17f>
  4042cd:	jmp    4042d2 <test@@Base+0x10f2>
  4042d2:	mov    rax,QWORD PTR [rbp-0x18]
  4042d6:	cmp    rax,QWORD PTR [rbp-0x10]
  4042da:	jbe    404303 <test@@Base+0x1123>
  4042e0:	mov    rax,QWORD PTR [rbp-0x10]
  4042e4:	movsx  ecx,BYTE PTR [rax]
  4042e7:	cmp    ecx,0x7d
  4042ea:	jne    404303 <test@@Base+0x1123>
  4042f0:	mov    rax,QWORD PTR [rbp-0x10]
  4042f4:	add    rax,0x1
  4042fa:	mov    QWORD PTR [rbp-0x10],rax
  4042fe:	jmp    404345 <test@@Base+0x1165>
  404303:	mov    rax,QWORD PTR [rip+0x14cee]        # 418ff8 <stderr@GLIBC_2.2.5>
  40430a:	mov    rdi,QWORD PTR [rax]
  40430d:	lea    rsi,[rip+0xdfc5]        # 4122d9 <g_data@@Base+0x299>
  404314:	mov    edx,0x7d
  404319:	mov    al,0x0
  40431b:	call   4030a0 <fprintf@plt>
  404320:	mov    rdi,QWORD PTR [rbp-0x70]
  404324:	mov    rsi,QWORD PTR [rbp-0x10]
  404328:	mov    rdx,QWORD PTR [rbp-0x18]
  40432c:	mov    ecx,0x11
  404331:	mov    DWORD PTR [rbp-0xec],eax
  404337:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40433c:	mov    QWORD PTR [rbp-0x10],rax
  404340:	jmp    4043a8 <test@@Base+0x11c8>
  404345:	mov    rdi,QWORD PTR [rbp-0x8]
  404349:	call   408730 <flatcc_builder_end_table@@Base>
  40434e:	mov    DWORD PTR [rbp-0x74],eax
  404351:	mov    rdi,QWORD PTR [rbp-0x8]
  404355:	mov    esi,DWORD PTR [rbp-0x74]
  404358:	call   4067a0 <flatcc_builder_end_buffer@@Base>
  40435d:	mov    rdi,QWORD PTR [rbp-0x70]
  404361:	mov    rsi,QWORD PTR [rbp-0x10]
  404365:	mov    rdx,QWORD PTR [rbp-0x18]
  404369:	mov    DWORD PTR [rbp-0xf0],eax
  40436f:	call   404470 <test@@Base+0x1290>
  404374:	mov    QWORD PTR [rbp-0x10],rax
  404378:	mov    rax,QWORD PTR [rbp-0x10]
  40437c:	cmp    rax,QWORD PTR [rbp-0x18]
  404380:	je     4043a3 <test@@Base+0x11c3>
  404386:	mov    rax,QWORD PTR [rip+0x14c6b]        # 418ff8 <stderr@GLIBC_2.2.5>
  40438d:	mov    rdi,QWORD PTR [rax]
  404390:	lea    rsi,[rip+0xdf7d]        # 412314 <g_data@@Base+0x2d4>
  404397:	mov    al,0x0
  404399:	call   4030a0 <fprintf@plt>
  40439e:	jmp    4043a8 <test@@Base+0x11c8>
  4043a3:	jmp    4043a8 <test@@Base+0x11c8>
  4043a8:	mov    rax,QWORD PTR [rbp-0x70]
  4043ac:	cmp    DWORD PTR [rax+0x20],0x0
  4043b0:	je     404439 <test@@Base+0x1259>
  4043b6:	mov    rax,QWORD PTR [rip+0x14c3b]        # 418ff8 <stderr@GLIBC_2.2.5>
  4043bd:	mov    rdi,QWORD PTR [rax]
  4043c0:	mov    rax,QWORD PTR [rbp-0x70]
  4043c4:	mov    edx,DWORD PTR [rax+0x18]
  4043c7:	mov    rax,QWORD PTR [rbp-0x70]
  4043cb:	mov    rax,QWORD PTR [rax+0x38]
  4043cf:	mov    rcx,QWORD PTR [rbp-0x70]
  4043d3:	mov    rcx,QWORD PTR [rcx+0x8]
  4043d7:	sub    rax,rcx
  4043da:	add    rax,0x1
  4043e0:	mov    rcx,QWORD PTR [rbp-0x70]
  4043e4:	mov    esi,DWORD PTR [rcx+0x20]
  4043e7:	mov    QWORD PTR [rbp-0xf8],rdi
  4043ee:	mov    edi,esi
  4043f0:	mov    DWORD PTR [rbp-0xfc],edx
  4043f6:	mov    DWORD PTR [rbp-0x100],eax
  4043fc:	call   40c1c0 <flatcc_json_parser_error_string@@Base>
  404401:	mov    rdi,QWORD PTR [rbp-0xf8]
  404408:	lea    rsi,[rip+0xdf20]        # 41232f <g_data@@Base+0x2ef>
  40440f:	mov    edx,DWORD PTR [rbp-0xfc]
  404415:	mov    ecx,DWORD PTR [rbp-0x100]
  40441b:	mov    r8,rax
  40441e:	mov    al,0x0
  404420:	call   4030a0 <fprintf@plt>
  404425:	mov    rdi,QWORD PTR [rbp-0x8]
  404429:	mov    DWORD PTR [rbp-0x104],eax
  40442f:	call   405450 <flatcc_builder_reset@@Base>
  404434:	jmp    404451 <test@@Base+0x1271>
  404439:	mov    rax,QWORD PTR [rip+0x14bb8]        # 418ff8 <stderr@GLIBC_2.2.5>
  404440:	mov    rdi,QWORD PTR [rax]
  404443:	lea    rsi,[rip+0xdef0]        # 41233a <g_data@@Base+0x2fa>
  40444a:	mov    al,0x0
  40444c:	call   4030a0 <fprintf@plt>
  404451:	mov    rax,QWORD PTR [rbp-0x70]
  404455:	mov    ecx,DWORD PTR [rax+0x20]
  404458:	mov    rax,QWORD PTR [rbp-0x20]
  40445c:	mov    DWORD PTR [rax],ecx
  40445e:	mov    rax,QWORD PTR [rbp-0x10]
  404462:	add    rsp,0x110
  404469:	pop    rbp
  40446a:	ret    
  40446b:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	push   rbp
  404471:	mov    rbp,rsp
  404474:	sub    rsp,0x20
  404478:	mov    QWORD PTR [rbp-0x10],rdi
  40447c:	mov    QWORD PTR [rbp-0x18],rsi
  404480:	mov    QWORD PTR [rbp-0x20],rdx
  404484:	mov    rax,QWORD PTR [rbp-0x20]
  404488:	mov    rcx,QWORD PTR [rbp-0x18]
  40448c:	sub    rax,rcx
  40448f:	cmp    rax,0x1
  404493:	jle    4044ef <test@@Base+0x130f>
  404499:	mov    rax,QWORD PTR [rbp-0x18]
  40449d:	movsx  ecx,BYTE PTR [rax]
  4044a0:	cmp    ecx,0x20
  4044a3:	jle    4044b6 <test@@Base+0x12d6>
  4044a9:	mov    rax,QWORD PTR [rbp-0x18]
  4044ad:	mov    QWORD PTR [rbp-0x8],rax
  4044b1:	jmp    404504 <test@@Base+0x1324>
  4044b6:	mov    rax,QWORD PTR [rbp-0x18]
  4044ba:	movsx  ecx,BYTE PTR [rax]
  4044bd:	cmp    ecx,0x20
  4044c0:	jne    4044ea <test@@Base+0x130a>
  4044c6:	mov    rax,QWORD PTR [rbp-0x18]
  4044ca:	movsx  ecx,BYTE PTR [rax+0x1]
  4044ce:	cmp    ecx,0x20
  4044d1:	jle    4044ea <test@@Base+0x130a>
  4044d7:	mov    rax,QWORD PTR [rbp-0x18]
  4044db:	add    rax,0x1
  4044e1:	mov    QWORD PTR [rbp-0x8],rax
  4044e5:	jmp    404504 <test@@Base+0x1324>
  4044ea:	jmp    4044ef <test@@Base+0x130f>
  4044ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4044f3:	mov    rsi,QWORD PTR [rbp-0x18]
  4044f7:	mov    rdx,QWORD PTR [rbp-0x20]
  4044fb:	call   40c5b0 <flatcc_json_parser_space_ext@@Base>
  404500:	mov    QWORD PTR [rbp-0x8],rax
  404504:	mov    rax,QWORD PTR [rbp-0x8]
  404508:	add    rsp,0x20
  40450c:	pop    rbp
  40450d:	ret    
  40450e:	xchg   ax,ax
  404510:	push   rbp
  404511:	mov    rbp,rsp
  404514:	sub    rsp,0x20
  404518:	mov    QWORD PTR [rbp-0x10],rdi
  40451c:	mov    QWORD PTR [rbp-0x18],rsi
  404520:	mov    QWORD PTR [rbp-0x20],rdx
  404524:	mov    rax,QWORD PTR [rbp-0x18]
  404528:	cmp    rax,QWORD PTR [rbp-0x20]
  40452c:	jne    40453f <test@@Base+0x135f>
  404532:	mov    rax,QWORD PTR [rbp-0x18]
  404536:	mov    QWORD PTR [rbp-0x8],rax
  40453a:	jmp    4045af <test@@Base+0x13cf>
  40453f:	mov    rax,QWORD PTR [rbp-0x18]
  404543:	movsx  ecx,BYTE PTR [rax]
  404546:	cmp    ecx,0x22
  404549:	jne    40456d <test@@Base+0x138d>
  40454f:	mov    rax,QWORD PTR [rbp-0x18]
  404553:	add    rax,0x1
  404559:	mov    QWORD PTR [rbp-0x18],rax
  40455d:	mov    rax,QWORD PTR [rbp-0x10]
  404561:	mov    DWORD PTR [rax+0x14],0x0
  404568:	jmp    4045a7 <test@@Base+0x13c7>
  40456d:	mov    rax,QWORD PTR [rbp-0x18]
  404571:	movsx  ecx,BYTE PTR [rax]
  404574:	cmp    ecx,0x2e
  404577:	jne    40459c <test@@Base+0x13bc>
  40457d:	mov    rdi,QWORD PTR [rbp-0x10]
  404581:	mov    rsi,QWORD PTR [rbp-0x18]
  404585:	mov    rdx,QWORD PTR [rbp-0x20]
  404589:	mov    ecx,0x5
  40458e:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404593:	mov    QWORD PTR [rbp-0x8],rax
  404597:	jmp    4045af <test@@Base+0x13cf>
  40459c:	mov    rax,QWORD PTR [rbp-0x10]
  4045a0:	mov    DWORD PTR [rax+0x14],0x1
  4045a7:	mov    rax,QWORD PTR [rbp-0x18]
  4045ab:	mov    QWORD PTR [rbp-0x8],rax
  4045af:	mov    rax,QWORD PTR [rbp-0x8]
  4045b3:	add    rsp,0x20
  4045b7:	pop    rbp
  4045b8:	ret    
  4045b9:	nop    DWORD PTR [rax+0x0]
  4045c0:	push   rbp
  4045c1:	mov    rbp,rsp
  4045c4:	sub    rsp,0x20
  4045c8:	mov    QWORD PTR [rbp-0x10],rdi
  4045cc:	mov    QWORD PTR [rbp-0x18],rsi
  4045d0:	mov    rax,QWORD PTR [rbp-0x18]
  4045d4:	mov    rcx,QWORD PTR [rbp-0x10]
  4045d8:	sub    rax,rcx
  4045db:	mov    QWORD PTR [rbp-0x20],rax
  4045df:	cmp    QWORD PTR [rbp-0x20],0x8
  4045e4:	jb     4045fd <test@@Base+0x141d>
  4045ea:	mov    rax,QWORD PTR [rbp-0x10]
  4045ee:	mov    rax,QWORD PTR [rax]
  4045f1:	bswap  rax
  4045f4:	mov    QWORD PTR [rbp-0x8],rax
  4045f8:	jmp    40460e <test@@Base+0x142e>
  4045fd:	mov    rdi,QWORD PTR [rbp-0x10]
  404601:	mov    rsi,QWORD PTR [rbp-0x18]
  404605:	call   404bc0 <main@@Base+0x70>
  40460a:	mov    QWORD PTR [rbp-0x8],rax
  40460e:	mov    rax,QWORD PTR [rbp-0x8]
  404612:	add    rsp,0x20
  404616:	pop    rbp
  404617:	ret    
  404618:	nop    DWORD PTR [rax+rax*1+0x0]
  404620:	push   rbp
  404621:	mov    rbp,rsp
  404624:	sub    rsp,0x30
  404628:	mov    QWORD PTR [rbp-0x10],rdi
  40462c:	mov    QWORD PTR [rbp-0x18],rsi
  404630:	mov    QWORD PTR [rbp-0x20],rdx
  404634:	mov    BYTE PTR [rbp-0x22],0x0
  404638:	mov    rax,QWORD PTR [rbp-0x10]
  40463c:	cmp    DWORD PTR [rax+0x14],0x0
  404640:	je     404750 <test@@Base+0x1570>
  404646:	jmp    40464b <test@@Base+0x146b>
  40464b:	xor    eax,eax
  40464d:	mov    rcx,QWORD PTR [rbp-0x18]
  404651:	cmp    rcx,QWORD PTR [rbp-0x20]
  404655:	mov    BYTE PTR [rbp-0x23],al
  404658:	je     40466e <test@@Base+0x148e>
  40465e:	mov    rax,QWORD PTR [rbp-0x18]
  404662:	movsx  ecx,BYTE PTR [rax]
  404665:	cmp    ecx,0x20
  404668:	setg   dl
  40466b:	mov    BYTE PTR [rbp-0x23],dl
  40466e:	mov    al,BYTE PTR [rbp-0x23]
  404671:	test   al,0x1
  404673:	jne    40467e <test@@Base+0x149e>
  404679:	jmp    40471f <test@@Base+0x153f>
  40467e:	mov    rax,QWORD PTR [rbp-0x18]
  404682:	mov    cl,BYTE PTR [rax]
  404684:	mov    BYTE PTR [rbp-0x21],cl
  404687:	mov    BYTE PTR [rbp-0x22],cl
  40468a:	movsx  edx,BYTE PTR [rbp-0x21]
  40468e:	cmp    edx,0x5f
  404691:	je     4046d0 <test@@Base+0x14f0>
  404697:	movsx  eax,BYTE PTR [rbp-0x21]
  40469b:	cmp    eax,0x2e
  40469e:	je     4046d0 <test@@Base+0x14f0>
  4046a4:	movsx  eax,BYTE PTR [rbp-0x21]
  4046a8:	and    eax,0x80
  4046ad:	cmp    eax,0x0
  4046b0:	jne    4046d0 <test@@Base+0x14f0>
  4046b6:	movsx  eax,BYTE PTR [rbp-0x21]
  4046ba:	cmp    eax,0x30
  4046bd:	jl     4046e3 <test@@Base+0x1503>
  4046c3:	movsx  eax,BYTE PTR [rbp-0x21]
  4046c7:	cmp    eax,0x39
  4046ca:	jg     4046e3 <test@@Base+0x1503>
  4046d0:	mov    rax,QWORD PTR [rbp-0x18]
  4046d4:	add    rax,0x1
  4046da:	mov    QWORD PTR [rbp-0x18],rax
  4046de:	jmp    40464b <test@@Base+0x146b>
  4046e3:	movsx  eax,BYTE PTR [rbp-0x21]
  4046e7:	or     eax,0x20
  4046ea:	mov    BYTE PTR [rbp-0x21],al
  4046ed:	movsx  ecx,BYTE PTR [rbp-0x21]
  4046f1:	cmp    ecx,0x61
  4046f4:	jl     40471a <test@@Base+0x153a>
  4046fa:	movsx  eax,BYTE PTR [rbp-0x21]
  4046fe:	cmp    eax,0x7a
  404701:	jg     40471a <test@@Base+0x153a>
  404707:	mov    rax,QWORD PTR [rbp-0x18]
  40470b:	add    rax,0x1
  404711:	mov    QWORD PTR [rbp-0x18],rax
  404715:	jmp    40464b <test@@Base+0x146b>
  40471a:	jmp    40471f <test@@Base+0x153f>
  40471f:	movsx  eax,BYTE PTR [rbp-0x22]
  404723:	cmp    eax,0x2e
  404726:	jne    40474b <test@@Base+0x156b>
  40472c:	mov    rdi,QWORD PTR [rbp-0x10]
  404730:	mov    rsi,QWORD PTR [rbp-0x18]
  404734:	mov    rdx,QWORD PTR [rbp-0x20]
  404738:	mov    ecx,0x5
  40473d:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404742:	mov    QWORD PTR [rbp-0x8],rax
  404746:	jmp    404826 <test@@Base+0x1646>
  40474b:	jmp    40481e <test@@Base+0x163e>
  404750:	jmp    404755 <test@@Base+0x1575>
  404755:	xor    eax,eax
  404757:	mov    rcx,QWORD PTR [rbp-0x18]
  40475b:	cmp    rcx,QWORD PTR [rbp-0x20]
  40475f:	mov    BYTE PTR [rbp-0x24],al
  404762:	je     404778 <test@@Base+0x1598>
  404768:	mov    rax,QWORD PTR [rbp-0x18]
  40476c:	movsx  ecx,BYTE PTR [rax]
  40476f:	cmp    ecx,0x22
  404772:	setne  dl
  404775:	mov    BYTE PTR [rbp-0x24],dl
  404778:	mov    al,BYTE PTR [rbp-0x24]
  40477b:	test   al,0x1
  40477d:	jne    404788 <test@@Base+0x15a8>
  404783:	jmp    4047d3 <test@@Base+0x15f3>
  404788:	mov    rax,QWORD PTR [rbp-0x18]
  40478c:	movsx  ecx,BYTE PTR [rax]
  40478f:	cmp    ecx,0x5c
  404792:	jne    4047c0 <test@@Base+0x15e0>
  404798:	mov    rax,QWORD PTR [rbp-0x20]
  40479c:	mov    rcx,QWORD PTR [rbp-0x18]
  4047a0:	sub    rax,rcx
  4047a3:	cmp    rax,0x2
  4047a7:	jge    4047b2 <test@@Base+0x15d2>
  4047ad:	jmp    4047d3 <test@@Base+0x15f3>
  4047b2:	mov    rax,QWORD PTR [rbp-0x18]
  4047b6:	add    rax,0x1
  4047bc:	mov    QWORD PTR [rbp-0x18],rax
  4047c0:	mov    rax,QWORD PTR [rbp-0x18]
  4047c4:	add    rax,0x1
  4047ca:	mov    QWORD PTR [rbp-0x18],rax
  4047ce:	jmp    404755 <test@@Base+0x1575>
  4047d3:	mov    rax,QWORD PTR [rbp-0x18]
  4047d7:	cmp    rax,QWORD PTR [rbp-0x20]
  4047db:	je     4047f1 <test@@Base+0x1611>
  4047e1:	mov    rax,QWORD PTR [rbp-0x18]
  4047e5:	movsx  ecx,BYTE PTR [rax]
  4047e8:	cmp    ecx,0x22
  4047eb:	je     404810 <test@@Base+0x1630>
  4047f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4047f5:	mov    rsi,QWORD PTR [rbp-0x18]
  4047f9:	mov    rdx,QWORD PTR [rbp-0x20]
  4047fd:	mov    ecx,0x14
  404802:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404807:	mov    QWORD PTR [rbp-0x8],rax
  40480b:	jmp    404826 <test@@Base+0x1646>
  404810:	mov    rax,QWORD PTR [rbp-0x18]
  404814:	add    rax,0x1
  40481a:	mov    QWORD PTR [rbp-0x18],rax
  40481e:	mov    rax,QWORD PTR [rbp-0x18]
  404822:	mov    QWORD PTR [rbp-0x8],rax
  404826:	mov    rax,QWORD PTR [rbp-0x8]
  40482a:	add    rsp,0x30
  40482e:	pop    rbp
  40482f:	ret    
  404830:	push   rbp
  404831:	mov    rbp,rsp
  404834:	sub    rsp,0x40
  404838:	mov    QWORD PTR [rbp-0x10],rdi
  40483c:	mov    QWORD PTR [rbp-0x18],rsi
  404840:	mov    QWORD PTR [rbp-0x20],rdx
  404844:	mov    QWORD PTR [rbp-0x28],rcx
  404848:	mov    QWORD PTR [rbp-0x30],0x0
  404850:	mov    DWORD PTR [rbp-0x34],0x0
  404857:	mov    rax,QWORD PTR [rbp-0x18]
  40485b:	mov    QWORD PTR [rbp-0x40],rax
  40485f:	mov    rax,QWORD PTR [rbp-0x28]
  404863:	mov    BYTE PTR [rax],0x0
  404866:	mov    rax,QWORD PTR [rbp-0x18]
  40486a:	cmp    rax,QWORD PTR [rbp-0x20]
  40486e:	jne    404881 <test@@Base+0x16a1>
  404874:	mov    rax,QWORD PTR [rbp-0x18]
  404878:	mov    QWORD PTR [rbp-0x8],rax
  40487c:	jmp    4048d9 <test@@Base+0x16f9>
  404881:	mov    rdi,QWORD PTR [rbp-0x10]
  404885:	mov    rsi,QWORD PTR [rbp-0x18]
  404889:	mov    rdx,QWORD PTR [rbp-0x20]
  40488d:	lea    rcx,[rbp-0x34]
  404891:	lea    r8,[rbp-0x30]
  404895:	call   40e940 <flatcc_json_parser_integer@@Base>
  40489a:	mov    QWORD PTR [rbp-0x18],rax
  40489e:	mov    rax,QWORD PTR [rbp-0x18]
  4048a2:	cmp    rax,QWORD PTR [rbp-0x40]
  4048a6:	je     4048d1 <test@@Base+0x16f1>
  4048ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4048b0:	mov    rsi,QWORD PTR [rbp-0x18]
  4048b4:	mov    rdx,QWORD PTR [rbp-0x20]
  4048b8:	mov    ecx,DWORD PTR [rbp-0x34]
  4048bb:	mov    r8,QWORD PTR [rbp-0x30]
  4048bf:	mov    r9,QWORD PTR [rbp-0x28]
  4048c3:	call   404ce0 <main@@Base+0x190>
  4048c8:	mov    QWORD PTR [rbp-0x8],rax
  4048cc:	jmp    4048d9 <test@@Base+0x16f9>
  4048d1:	mov    rax,QWORD PTR [rbp-0x18]
  4048d5:	mov    QWORD PTR [rbp-0x8],rax
  4048d9:	mov    rax,QWORD PTR [rbp-0x8]
  4048dd:	add    rsp,0x40
  4048e1:	pop    rbp
  4048e2:	ret    
  4048e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ed:	nop    DWORD PTR [rax]
  4048f0:	push   rbp
  4048f1:	mov    rbp,rsp
  4048f4:	sub    rsp,0x40
  4048f8:	mov    QWORD PTR [rbp-0x10],rdi
  4048fc:	mov    QWORD PTR [rbp-0x18],rsi
  404900:	mov    QWORD PTR [rbp-0x20],rdx
  404904:	mov    QWORD PTR [rbp-0x28],rcx
  404908:	mov    QWORD PTR [rbp-0x30],0x0
  404910:	mov    DWORD PTR [rbp-0x34],0x0
  404917:	mov    rax,QWORD PTR [rbp-0x18]
  40491b:	mov    QWORD PTR [rbp-0x40],rax
  40491f:	mov    rax,QWORD PTR [rbp-0x28]
  404923:	mov    QWORD PTR [rax],0x0
  40492a:	mov    rax,QWORD PTR [rbp-0x18]
  40492e:	cmp    rax,QWORD PTR [rbp-0x20]
  404932:	jne    404945 <test@@Base+0x1765>
  404938:	mov    rax,QWORD PTR [rbp-0x18]
  40493c:	mov    QWORD PTR [rbp-0x8],rax
  404940:	jmp    40499d <test@@Base+0x17bd>
  404945:	mov    rdi,QWORD PTR [rbp-0x10]
  404949:	mov    rsi,QWORD PTR [rbp-0x18]
  40494d:	mov    rdx,QWORD PTR [rbp-0x20]
  404951:	lea    rcx,[rbp-0x34]
  404955:	lea    r8,[rbp-0x30]
  404959:	call   40e940 <flatcc_json_parser_integer@@Base>
  40495e:	mov    QWORD PTR [rbp-0x18],rax
  404962:	mov    rax,QWORD PTR [rbp-0x18]
  404966:	cmp    rax,QWORD PTR [rbp-0x40]
  40496a:	je     404995 <test@@Base+0x17b5>
  404970:	mov    rdi,QWORD PTR [rbp-0x10]
  404974:	mov    rsi,QWORD PTR [rbp-0x18]
  404978:	mov    rdx,QWORD PTR [rbp-0x20]
  40497c:	mov    ecx,DWORD PTR [rbp-0x34]
  40497f:	mov    r8,QWORD PTR [rbp-0x30]
  404983:	mov    r9,QWORD PTR [rbp-0x28]
  404987:	call   404d80 <main@@Base+0x230>
  40498c:	mov    QWORD PTR [rbp-0x8],rax
  404990:	jmp    40499d <test@@Base+0x17bd>
  404995:	mov    rax,QWORD PTR [rbp-0x18]
  404999:	mov    QWORD PTR [rbp-0x8],rax
  40499d:	mov    rax,QWORD PTR [rbp-0x8]
  4049a1:	add    rsp,0x40
  4049a5:	pop    rbp
  4049a6:	ret    
  4049a7:	nop    WORD PTR [rax+rax*1+0x0]
  4049b0:	push   rbp
  4049b1:	mov    rbp,rsp
  4049b4:	sub    rsp,0x40
  4049b8:	mov    QWORD PTR [rbp-0x10],rdi
  4049bc:	mov    QWORD PTR [rbp-0x18],rsi
  4049c0:	mov    QWORD PTR [rbp-0x20],rdx
  4049c4:	mov    QWORD PTR [rbp-0x28],rcx
  4049c8:	mov    QWORD PTR [rbp-0x30],0x0
  4049d0:	mov    DWORD PTR [rbp-0x34],0x0
  4049d7:	mov    rax,QWORD PTR [rbp-0x18]
  4049db:	mov    QWORD PTR [rbp-0x40],rax
  4049df:	mov    rax,QWORD PTR [rbp-0x28]
  4049e3:	mov    DWORD PTR [rax],0x0
  4049e9:	mov    rax,QWORD PTR [rbp-0x18]
  4049ed:	cmp    rax,QWORD PTR [rbp-0x20]
  4049f1:	jne    404a04 <test@@Base+0x1824>
  4049f7:	mov    rax,QWORD PTR [rbp-0x18]
  4049fb:	mov    QWORD PTR [rbp-0x8],rax
  4049ff:	jmp    404a5c <test@@Base+0x187c>
  404a04:	mov    rdi,QWORD PTR [rbp-0x10]
  404a08:	mov    rsi,QWORD PTR [rbp-0x18]
  404a0c:	mov    rdx,QWORD PTR [rbp-0x20]
  404a10:	lea    rcx,[rbp-0x34]
  404a14:	lea    r8,[rbp-0x30]
  404a18:	call   40e940 <flatcc_json_parser_integer@@Base>
  404a1d:	mov    QWORD PTR [rbp-0x18],rax
  404a21:	mov    rax,QWORD PTR [rbp-0x18]
  404a25:	cmp    rax,QWORD PTR [rbp-0x40]
  404a29:	je     404a54 <test@@Base+0x1874>
  404a2f:	mov    rdi,QWORD PTR [rbp-0x10]
  404a33:	mov    rsi,QWORD PTR [rbp-0x18]
  404a37:	mov    rdx,QWORD PTR [rbp-0x20]
  404a3b:	mov    ecx,DWORD PTR [rbp-0x34]
  404a3e:	mov    r8,QWORD PTR [rbp-0x30]
  404a42:	mov    r9,QWORD PTR [rbp-0x28]
  404a46:	call   404e40 <main@@Base+0x2f0>
  404a4b:	mov    QWORD PTR [rbp-0x8],rax
  404a4f:	jmp    404a5c <test@@Base+0x187c>
  404a54:	mov    rax,QWORD PTR [rbp-0x18]
  404a58:	mov    QWORD PTR [rbp-0x8],rax
  404a5c:	mov    rax,QWORD PTR [rbp-0x8]
  404a60:	add    rsp,0x40
  404a64:	pop    rbp
  404a65:	ret    
  404a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a70:	push   rbp
  404a71:	mov    rbp,rsp
  404a74:	sub    rsp,0x20
  404a78:	mov    QWORD PTR [rbp-0x10],rdi
  404a7c:	mov    QWORD PTR [rbp-0x18],rsi
  404a80:	mov    QWORD PTR [rbp-0x20],rdx
  404a84:	mov    rax,QWORD PTR [rbp-0x18]
  404a88:	cmp    rax,QWORD PTR [rbp-0x20]
  404a8c:	je     404aa2 <test@@Base+0x18c2>
  404a92:	mov    rax,QWORD PTR [rbp-0x18]
  404a96:	movsx  ecx,BYTE PTR [rax]
  404a99:	cmp    ecx,0x22
  404a9c:	je     404ac1 <test@@Base+0x18e1>
  404aa2:	mov    rdi,QWORD PTR [rbp-0x10]
  404aa6:	mov    rsi,QWORD PTR [rbp-0x18]
  404aaa:	mov    rdx,QWORD PTR [rbp-0x20]
  404aae:	mov    ecx,0x10
  404ab3:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404ab8:	mov    QWORD PTR [rbp-0x8],rax
  404abc:	jmp    404ad3 <test@@Base+0x18f3>
  404ac1:	mov    rax,QWORD PTR [rbp-0x18]
  404ac5:	add    rax,0x1
  404acb:	mov    QWORD PTR [rbp-0x18],rax
  404acf:	mov    QWORD PTR [rbp-0x8],rax
  404ad3:	mov    rax,QWORD PTR [rbp-0x8]
  404ad7:	add    rsp,0x20
  404adb:	pop    rbp
  404adc:	ret    
  404add:	nop    DWORD PTR [rax]
  404ae0:	push   rbp
  404ae1:	mov    rbp,rsp
  404ae4:	sub    rsp,0x20
  404ae8:	mov    QWORD PTR [rbp-0x10],rdi
  404aec:	mov    QWORD PTR [rbp-0x18],rsi
  404af0:	mov    QWORD PTR [rbp-0x20],rdx
  404af4:	mov    rax,QWORD PTR [rbp-0x18]
  404af8:	cmp    rax,QWORD PTR [rbp-0x20]
  404afc:	je     404b12 <test@@Base+0x1932>
  404b02:	mov    rax,QWORD PTR [rbp-0x18]
  404b06:	movsx  ecx,BYTE PTR [rax]
  404b09:	cmp    ecx,0x22
  404b0c:	je     404b31 <test@@Base+0x1951>
  404b12:	mov    rdi,QWORD PTR [rbp-0x10]
  404b16:	mov    rsi,QWORD PTR [rbp-0x18]
  404b1a:	mov    rdx,QWORD PTR [rbp-0x20]
  404b1e:	mov    ecx,0x14
  404b23:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404b28:	mov    QWORD PTR [rbp-0x8],rax
  404b2c:	jmp    404b43 <test@@Base+0x1963>
  404b31:	mov    rax,QWORD PTR [rbp-0x18]
  404b35:	add    rax,0x1
  404b3b:	mov    QWORD PTR [rbp-0x18],rax
  404b3f:	mov    QWORD PTR [rbp-0x8],rax
  404b43:	mov    rax,QWORD PTR [rbp-0x8]
  404b47:	add    rsp,0x20
  404b4b:	pop    rbp
  404b4c:	ret    
  404b4d:	nop    DWORD PTR [rax]

0000000000404b50 <main@@Base>:
  404b50:	push   rbp
  404b51:	mov    rbp,rsp
  404b54:	sub    rsp,0x1a0
  404b5b:	mov    DWORD PTR [rbp-0x4],0x0
  404b62:	mov    DWORD PTR [rbp-0x8],0xffffffff
  404b69:	lea    rdi,[rbp-0x190]
  404b70:	call   4051d0 <flatcc_builder_init@@Base>
  404b75:	lea    rcx,[rip+0xd4c4]        # 412040 <g_data@@Base>
  404b7c:	mov    rdx,rcx
  404b7f:	add    rdx,0x285
  404b86:	lea    rdi,[rbp-0x190]
  404b8d:	mov    rsi,rcx
  404b90:	lea    rcx,[rbp-0x8]
  404b94:	mov    DWORD PTR [rbp-0x194],eax
  404b9a:	call   4031e0 <test@@Base>
  404b9f:	lea    rdi,[rbp-0x190]
  404ba6:	mov    QWORD PTR [rbp-0x1a0],rax
  404bad:	call   405480 <flatcc_builder_clear@@Base>
  404bb2:	mov    eax,DWORD PTR [rbp-0x8]
  404bb5:	add    rsp,0x1a0
  404bbc:	pop    rbp
  404bbd:	ret    
  404bbe:	xchg   ax,ax
  404bc0:	push   rbp
  404bc1:	mov    rbp,rsp
  404bc4:	mov    QWORD PTR [rbp-0x8],rdi
  404bc8:	mov    QWORD PTR [rbp-0x10],rsi
  404bcc:	mov    QWORD PTR [rbp-0x18],0x0
  404bd4:	mov    rax,QWORD PTR [rbp-0x10]
  404bd8:	mov    rcx,QWORD PTR [rbp-0x8]
  404bdc:	sub    rax,rcx
  404bdf:	mov    QWORD PTR [rbp-0x20],rax
  404be3:	cmp    QWORD PTR [rbp-0x20],0x8
  404be8:	jbe    404bf6 <main@@Base+0xa6>
  404bee:	mov    QWORD PTR [rbp-0x20],0x8
  404bf6:	mov    rax,QWORD PTR [rbp-0x20]
  404bfa:	mov    rcx,rax
  404bfd:	sub    rcx,0x8
  404c01:	mov    QWORD PTR [rbp-0x28],rax
  404c05:	ja     404ccb <main@@Base+0x17b>
  404c0b:	lea    rax,[rip+0xd3fe]        # 412010 <_IO_stdin_used@@Base+0x10>
  404c12:	mov    rcx,QWORD PTR [rbp-0x28]
  404c16:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404c1a:	add    rdx,rax
  404c1d:	jmp    rdx
  404c1f:	mov    rax,QWORD PTR [rbp-0x8]
  404c23:	movsx  rax,BYTE PTR [rax+0x7]
  404c28:	shl    rax,0x0
  404c2c:	or     rax,QWORD PTR [rbp-0x18]
  404c30:	mov    QWORD PTR [rbp-0x18],rax
  404c34:	mov    rax,QWORD PTR [rbp-0x8]
  404c38:	movsx  rax,BYTE PTR [rax+0x6]
  404c3d:	shl    rax,0x8
  404c41:	or     rax,QWORD PTR [rbp-0x18]
  404c45:	mov    QWORD PTR [rbp-0x18],rax
  404c49:	mov    rax,QWORD PTR [rbp-0x8]
  404c4d:	movsx  rax,BYTE PTR [rax+0x5]
  404c52:	shl    rax,0x10
  404c56:	or     rax,QWORD PTR [rbp-0x18]
  404c5a:	mov    QWORD PTR [rbp-0x18],rax
  404c5e:	mov    rax,QWORD PTR [rbp-0x8]
  404c62:	movsx  rax,BYTE PTR [rax+0x4]
  404c67:	shl    rax,0x18
  404c6b:	or     rax,QWORD PTR [rbp-0x18]
  404c6f:	mov    QWORD PTR [rbp-0x18],rax
  404c73:	mov    rax,QWORD PTR [rbp-0x8]
  404c77:	movsx  rax,BYTE PTR [rax+0x3]
  404c7c:	shl    rax,0x20
  404c80:	or     rax,QWORD PTR [rbp-0x18]
  404c84:	mov    QWORD PTR [rbp-0x18],rax
  404c88:	mov    rax,QWORD PTR [rbp-0x8]
  404c8c:	movsx  rax,BYTE PTR [rax+0x2]
  404c91:	shl    rax,0x28
  404c95:	or     rax,QWORD PTR [rbp-0x18]
  404c99:	mov    QWORD PTR [rbp-0x18],rax
  404c9d:	mov    rax,QWORD PTR [rbp-0x8]
  404ca1:	movsx  rax,BYTE PTR [rax+0x1]
  404ca6:	shl    rax,0x30
  404caa:	or     rax,QWORD PTR [rbp-0x18]
  404cae:	mov    QWORD PTR [rbp-0x18],rax
  404cb2:	mov    rax,QWORD PTR [rbp-0x8]
  404cb6:	movsx  rax,BYTE PTR [rax]
  404cba:	shl    rax,0x38
  404cbe:	or     rax,QWORD PTR [rbp-0x18]
  404cc2:	mov    QWORD PTR [rbp-0x18],rax
  404cc6:	jmp    404ccb <main@@Base+0x17b>
  404ccb:	mov    rax,QWORD PTR [rbp-0x18]
  404ccf:	pop    rbp
  404cd0:	ret    
  404cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  404ce0:	push   rbp
  404ce1:	mov    rbp,rsp
  404ce4:	sub    rsp,0x40
  404ce8:	mov    QWORD PTR [rbp-0x10],rdi
  404cec:	mov    QWORD PTR [rbp-0x18],rsi
  404cf0:	mov    QWORD PTR [rbp-0x20],rdx
  404cf4:	mov    DWORD PTR [rbp-0x24],ecx
  404cf7:	mov    QWORD PTR [rbp-0x30],r8
  404cfb:	mov    QWORD PTR [rbp-0x38],r9
  404cff:	cmp    DWORD PTR [rbp-0x24],0x0
  404d03:	je     404d28 <main@@Base+0x1d8>
  404d09:	mov    rdi,QWORD PTR [rbp-0x10]
  404d0d:	mov    rsi,QWORD PTR [rbp-0x18]
  404d11:	mov    rdx,QWORD PTR [rbp-0x20]
  404d15:	mov    ecx,0x8
  404d1a:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404d1f:	mov    QWORD PTR [rbp-0x8],rax
  404d23:	jmp    404d67 <main@@Base+0x217>
  404d28:	cmp    QWORD PTR [rbp-0x30],0xff
  404d30:	jbe    404d55 <main@@Base+0x205>
  404d36:	mov    rdi,QWORD PTR [rbp-0x10]
  404d3a:	mov    rsi,QWORD PTR [rbp-0x18]
  404d3e:	mov    rdx,QWORD PTR [rbp-0x20]
  404d42:	mov    ecx,0x7
  404d47:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404d4c:	mov    QWORD PTR [rbp-0x8],rax
  404d50:	jmp    404d67 <main@@Base+0x217>
  404d55:	mov    rax,QWORD PTR [rbp-0x30]
  404d59:	mov    rcx,QWORD PTR [rbp-0x38]
  404d5d:	mov    BYTE PTR [rcx],al
  404d5f:	mov    rcx,QWORD PTR [rbp-0x18]
  404d63:	mov    QWORD PTR [rbp-0x8],rcx
  404d67:	mov    rax,QWORD PTR [rbp-0x8]
  404d6b:	add    rsp,0x40
  404d6f:	pop    rbp
  404d70:	ret    
  404d71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d80:	push   rbp
  404d81:	mov    rbp,rsp
  404d84:	sub    rsp,0x40
  404d88:	mov    QWORD PTR [rbp-0x10],rdi
  404d8c:	mov    QWORD PTR [rbp-0x18],rsi
  404d90:	mov    QWORD PTR [rbp-0x20],rdx
  404d94:	mov    DWORD PTR [rbp-0x24],ecx
  404d97:	mov    QWORD PTR [rbp-0x30],r8
  404d9b:	mov    QWORD PTR [rbp-0x38],r9
  404d9f:	cmp    DWORD PTR [rbp-0x24],0x0
  404da3:	je     404df0 <main@@Base+0x2a0>
  404da9:	movabs rax,0x8000000000000000
  404db3:	cmp    QWORD PTR [rbp-0x30],rax
  404db7:	jbe    404ddc <main@@Base+0x28c>
  404dbd:	mov    rdi,QWORD PTR [rbp-0x10]
  404dc1:	mov    rsi,QWORD PTR [rbp-0x18]
  404dc5:	mov    rdx,QWORD PTR [rbp-0x20]
  404dc9:	mov    ecx,0x8
  404dce:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404dd3:	mov    QWORD PTR [rbp-0x8],rax
  404dd7:	jmp    404e36 <main@@Base+0x2e6>
  404ddc:	xor    eax,eax
  404dde:	mov    ecx,eax
  404de0:	sub    rcx,QWORD PTR [rbp-0x30]
  404de4:	mov    rdx,QWORD PTR [rbp-0x38]
  404de8:	mov    QWORD PTR [rdx],rcx
  404deb:	jmp    404e2e <main@@Base+0x2de>
  404df0:	movabs rax,0x7fffffffffffffff
  404dfa:	cmp    QWORD PTR [rbp-0x30],rax
  404dfe:	jbe    404e23 <main@@Base+0x2d3>
  404e04:	mov    rdi,QWORD PTR [rbp-0x10]
  404e08:	mov    rsi,QWORD PTR [rbp-0x18]
  404e0c:	mov    rdx,QWORD PTR [rbp-0x20]
  404e10:	mov    ecx,0x7
  404e15:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404e1a:	mov    QWORD PTR [rbp-0x8],rax
  404e1e:	jmp    404e36 <main@@Base+0x2e6>
  404e23:	mov    rax,QWORD PTR [rbp-0x30]
  404e27:	mov    rcx,QWORD PTR [rbp-0x38]
  404e2b:	mov    QWORD PTR [rcx],rax
  404e2e:	mov    rax,QWORD PTR [rbp-0x18]
  404e32:	mov    QWORD PTR [rbp-0x8],rax
  404e36:	mov    rax,QWORD PTR [rbp-0x8]
  404e3a:	add    rsp,0x40
  404e3e:	pop    rbp
  404e3f:	ret    
  404e40:	push   rbp
  404e41:	mov    rbp,rsp
  404e44:	sub    rsp,0x40
  404e48:	mov    QWORD PTR [rbp-0x10],rdi
  404e4c:	mov    QWORD PTR [rbp-0x18],rsi
  404e50:	mov    QWORD PTR [rbp-0x20],rdx
  404e54:	mov    DWORD PTR [rbp-0x24],ecx
  404e57:	mov    QWORD PTR [rbp-0x30],r8
  404e5b:	mov    QWORD PTR [rbp-0x38],r9
  404e5f:	cmp    DWORD PTR [rbp-0x24],0x0
  404e63:	je     404e88 <main@@Base+0x338>
  404e69:	mov    rdi,QWORD PTR [rbp-0x10]
  404e6d:	mov    rsi,QWORD PTR [rbp-0x18]
  404e71:	mov    rdx,QWORD PTR [rbp-0x20]
  404e75:	mov    ecx,0x8
  404e7a:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404e7f:	mov    QWORD PTR [rbp-0x8],rax
  404e83:	jmp    404ec8 <main@@Base+0x378>
  404e88:	mov    eax,0xffffffff
  404e8d:	cmp    QWORD PTR [rbp-0x30],rax
  404e91:	jbe    404eb6 <main@@Base+0x366>
  404e97:	mov    rdi,QWORD PTR [rbp-0x10]
  404e9b:	mov    rsi,QWORD PTR [rbp-0x18]
  404e9f:	mov    rdx,QWORD PTR [rbp-0x20]
  404ea3:	mov    ecx,0x7
  404ea8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  404ead:	mov    QWORD PTR [rbp-0x8],rax
  404eb1:	jmp    404ec8 <main@@Base+0x378>
  404eb6:	mov    rax,QWORD PTR [rbp-0x30]
  404eba:	mov    rcx,QWORD PTR [rbp-0x38]
  404ebe:	mov    DWORD PTR [rcx],eax
  404ec0:	mov    rcx,QWORD PTR [rbp-0x18]
  404ec4:	mov    QWORD PTR [rbp-0x8],rcx
  404ec8:	mov    rax,QWORD PTR [rbp-0x8]
  404ecc:	add    rsp,0x40
  404ed0:	pop    rbp
  404ed1:	ret    
  404ed2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404edc:	nop    DWORD PTR [rax+0x0]

0000000000404ee0 <flatcc_builder_default_alloc@@Base>:
  404ee0:	push   rbp
  404ee1:	mov    rbp,rsp
  404ee4:	sub    rsp,0x40
  404ee8:	mov    QWORD PTR [rbp-0x10],rdi
  404eec:	mov    QWORD PTR [rbp-0x18],rsi
  404ef0:	mov    QWORD PTR [rbp-0x20],rdx
  404ef4:	mov    DWORD PTR [rbp-0x24],ecx
  404ef7:	mov    DWORD PTR [rbp-0x28],r8d
  404efb:	cmp    QWORD PTR [rbp-0x20],0x0
  404f00:	jne    404f43 <flatcc_builder_default_alloc@@Base+0x63>
  404f06:	mov    rax,QWORD PTR [rbp-0x18]
  404f0a:	cmp    QWORD PTR [rax],0x0
  404f0e:	je     404f37 <flatcc_builder_default_alloc@@Base+0x57>
  404f14:	mov    rax,QWORD PTR [rbp-0x18]
  404f18:	mov    rdi,QWORD PTR [rax]
  404f1b:	call   403030 <free@plt>
  404f20:	mov    rax,QWORD PTR [rbp-0x18]
  404f24:	mov    QWORD PTR [rax],0x0
  404f2b:	mov    rax,QWORD PTR [rbp-0x18]
  404f2f:	mov    QWORD PTR [rax+0x8],0x0
  404f37:	mov    DWORD PTR [rbp-0x4],0x0
  404f3e:	jmp    405088 <flatcc_builder_default_alloc@@Base+0x1a8>
  404f43:	mov    eax,DWORD PTR [rbp-0x28]
  404f46:	dec    eax
  404f48:	mov    ecx,eax
  404f4a:	sub    eax,0x6
  404f4d:	mov    QWORD PTR [rbp-0x40],rcx
  404f51:	ja     404f9f <flatcc_builder_default_alloc@@Base+0xbf>
  404f57:	lea    rax,[rip+0xd3f2]        # 412350 <g_data@@Base+0x310>
  404f5e:	mov    rcx,QWORD PTR [rbp-0x40]
  404f62:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404f66:	add    rdx,rax
  404f69:	jmp    rdx
  404f6b:	mov    QWORD PTR [rbp-0x38],0x100
  404f73:	jmp    404fa7 <flatcc_builder_default_alloc@@Base+0xc7>
  404f78:	mov    rax,QWORD PTR [rbp-0x20]
  404f7c:	mov    QWORD PTR [rbp-0x38],rax
  404f80:	jmp    404fa7 <flatcc_builder_default_alloc@@Base+0xc7>
  404f85:	mov    QWORD PTR [rbp-0x38],0x120
  404f8d:	jmp    404fa7 <flatcc_builder_default_alloc@@Base+0xc7>
  404f92:	mov    QWORD PTR [rbp-0x38],0x40
  404f9a:	jmp    404fa7 <flatcc_builder_default_alloc@@Base+0xc7>
  404f9f:	mov    QWORD PTR [rbp-0x38],0x20
  404fa7:	jmp    404fac <flatcc_builder_default_alloc@@Base+0xcc>
  404fac:	mov    rax,QWORD PTR [rbp-0x38]
  404fb0:	cmp    rax,QWORD PTR [rbp-0x20]
  404fb4:	jae    404fcb <flatcc_builder_default_alloc@@Base+0xeb>
  404fba:	mov    rax,QWORD PTR [rbp-0x38]
  404fbe:	shl    rax,0x1
  404fc2:	mov    QWORD PTR [rbp-0x38],rax
  404fc6:	jmp    404fac <flatcc_builder_default_alloc@@Base+0xcc>
  404fcb:	mov    rax,QWORD PTR [rbp-0x20]
  404fcf:	mov    rcx,QWORD PTR [rbp-0x18]
  404fd3:	cmp    rax,QWORD PTR [rcx+0x8]
  404fd7:	ja     404fff <flatcc_builder_default_alloc@@Base+0x11f>
  404fdd:	mov    rax,QWORD PTR [rbp-0x18]
  404fe1:	mov    rax,QWORD PTR [rax+0x8]
  404fe5:	shr    rax,0x1
  404fe9:	cmp    rax,QWORD PTR [rbp-0x38]
  404fed:	jb     404fff <flatcc_builder_default_alloc@@Base+0x11f>
  404ff3:	mov    DWORD PTR [rbp-0x4],0x0
  404ffa:	jmp    405088 <flatcc_builder_default_alloc@@Base+0x1a8>
  404fff:	mov    rax,QWORD PTR [rbp-0x18]
  405003:	mov    rdi,QWORD PTR [rax]
  405006:	mov    rsi,QWORD PTR [rbp-0x38]
  40500a:	call   4030d0 <realloc@plt>
  40500f:	mov    QWORD PTR [rbp-0x30],rax
  405013:	cmp    rax,0x0
  405017:	jne    405029 <flatcc_builder_default_alloc@@Base+0x149>
  40501d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405024:	jmp    405088 <flatcc_builder_default_alloc@@Base+0x1a8>
  405029:	cmp    DWORD PTR [rbp-0x24],0x0
  40502d:	je     40506a <flatcc_builder_default_alloc@@Base+0x18a>
  405033:	mov    rax,QWORD PTR [rbp-0x18]
  405037:	mov    rax,QWORD PTR [rax+0x8]
  40503b:	cmp    rax,QWORD PTR [rbp-0x38]
  40503f:	jae    40506a <flatcc_builder_default_alloc@@Base+0x18a>
  405045:	xor    esi,esi
  405047:	mov    rax,QWORD PTR [rbp-0x30]
  40504b:	mov    rcx,QWORD PTR [rbp-0x18]
  40504f:	add    rax,QWORD PTR [rcx+0x8]
  405053:	mov    rcx,QWORD PTR [rbp-0x38]
  405057:	mov    rdx,QWORD PTR [rbp-0x18]
  40505b:	sub    rcx,QWORD PTR [rdx+0x8]
  40505f:	mov    rdi,rax
  405062:	mov    rdx,rcx
  405065:	call   403070 <memset@plt>
  40506a:	mov    rax,QWORD PTR [rbp-0x30]
  40506e:	mov    rcx,QWORD PTR [rbp-0x18]
  405072:	mov    QWORD PTR [rcx],rax
  405075:	mov    rax,QWORD PTR [rbp-0x38]
  405079:	mov    rcx,QWORD PTR [rbp-0x18]
  40507d:	mov    QWORD PTR [rcx+0x8],rax
  405081:	mov    DWORD PTR [rbp-0x4],0x0
  405088:	mov    eax,DWORD PTR [rbp-0x4]
  40508b:	add    rsp,0x40
  40508f:	pop    rbp
  405090:	ret    
  405091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40509b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004050a0 <flatcc_builder_flush_vtable_cache@@Base>:
  4050a0:	push   rbp
  4050a1:	mov    rbp,rsp
  4050a4:	sub    rsp,0x10
  4050a8:	mov    QWORD PTR [rbp-0x8],rdi
  4050ac:	mov    rax,QWORD PTR [rbp-0x8]
  4050b0:	add    rax,0x58
  4050b6:	add    rax,0x50
  4050bc:	mov    QWORD PTR [rbp-0x10],rax
  4050c0:	mov    rax,QWORD PTR [rbp-0x8]
  4050c4:	cmp    QWORD PTR [rax+0xd8],0x0
  4050cc:	jne    4050d7 <flatcc_builder_flush_vtable_cache@@Base+0x37>
  4050d2:	jmp    405109 <flatcc_builder_flush_vtable_cache@@Base+0x69>
  4050d7:	xor    esi,esi
  4050d9:	mov    rax,QWORD PTR [rbp-0x10]
  4050dd:	mov    rdi,QWORD PTR [rax]
  4050e0:	mov    rax,QWORD PTR [rbp-0x10]
  4050e4:	mov    rdx,QWORD PTR [rax+0x8]
  4050e8:	call   403070 <memset@plt>
  4050ed:	mov    rax,QWORD PTR [rbp-0x8]
  4050f1:	mov    DWORD PTR [rax+0xe4],0x10
  4050fb:	mov    rax,QWORD PTR [rbp-0x8]
  4050ff:	mov    DWORD PTR [rax+0xe0],0x0
  405109:	add    rsp,0x10
  40510d:	pop    rbp
  40510e:	ret    
  40510f:	nop

0000000000405110 <flatcc_builder_custom_init@@Base>:
  405110:	push   rbp
  405111:	mov    rbp,rsp
  405114:	sub    rsp,0x30
  405118:	xor    eax,eax
  40511a:	mov    QWORD PTR [rbp-0x8],rdi
  40511e:	mov    QWORD PTR [rbp-0x10],rsi
  405122:	mov    QWORD PTR [rbp-0x18],rdx
  405126:	mov    QWORD PTR [rbp-0x20],rcx
  40512a:	mov    QWORD PTR [rbp-0x28],r8
  40512e:	mov    rcx,QWORD PTR [rbp-0x8]
  405132:	mov    rdi,rcx
  405135:	mov    esi,eax
  405137:	mov    edx,0x188
  40513c:	call   403070 <memset@plt>
  405141:	cmp    QWORD PTR [rbp-0x10],0x0
  405146:	jne    405173 <flatcc_builder_custom_init@@Base+0x63>
  40514c:	lea    rax,[rip+0x5e5d]        # 40afb0 <flatcc_emitter@@Base>
  405153:	mov    rcx,QWORD PTR [rbp-0x8]
  405157:	mov    DWORD PTR [rcx+0x128],0x1
  405161:	mov    QWORD PTR [rbp-0x10],rax
  405165:	mov    rax,QWORD PTR [rbp-0x8]
  405169:	add    rax,0x130
  40516f:	mov    QWORD PTR [rbp-0x18],rax
  405173:	cmp    QWORD PTR [rbp-0x20],0x0
  405178:	jne    405189 <flatcc_builder_custom_init@@Base+0x79>
  40517e:	lea    rax,[rip+0xfffffffffffffd5b]        # 404ee0 <flatcc_builder_default_alloc@@Base>
  405185:	mov    QWORD PTR [rbp-0x20],rax
  405189:	xor    eax,eax
  40518b:	mov    rcx,QWORD PTR [rbp-0x28]
  40518f:	mov    rdx,QWORD PTR [rbp-0x8]
  405193:	mov    QWORD PTR [rdx+0x40],rcx
  405197:	mov    rcx,QWORD PTR [rbp-0x20]
  40519b:	mov    rdx,QWORD PTR [rbp-0x8]
  40519f:	mov    QWORD PTR [rdx+0x50],rcx
  4051a3:	mov    rcx,QWORD PTR [rbp-0x18]
  4051a7:	mov    rdx,QWORD PTR [rbp-0x8]
  4051ab:	mov    QWORD PTR [rdx+0x38],rcx
  4051af:	mov    rcx,QWORD PTR [rbp-0x10]
  4051b3:	mov    rdx,QWORD PTR [rbp-0x8]
  4051b7:	mov    QWORD PTR [rdx+0x48],rcx
  4051bb:	add    rsp,0x30
  4051bf:	pop    rbp
  4051c0:	ret    
  4051c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004051d0 <flatcc_builder_init@@Base>:
  4051d0:	push   rbp
  4051d1:	mov    rbp,rsp
  4051d4:	sub    rsp,0x10
  4051d8:	xor    eax,eax
  4051da:	mov    ecx,eax
  4051dc:	mov    QWORD PTR [rbp-0x8],rdi
  4051e0:	mov    rdi,QWORD PTR [rbp-0x8]
  4051e4:	mov    rsi,rcx
  4051e7:	mov    rdx,rcx
  4051ea:	mov    QWORD PTR [rbp-0x10],rcx
  4051ee:	mov    r8,QWORD PTR [rbp-0x10]
  4051f2:	call   405110 <flatcc_builder_custom_init@@Base>
  4051f7:	add    rsp,0x10
  4051fb:	pop    rbp
  4051fc:	ret    
  4051fd:	nop    DWORD PTR [rax]

0000000000405200 <flatcc_builder_custom_reset@@Base>:
  405200:	push   rbp
  405201:	mov    rbp,rsp
  405204:	sub    rsp,0x30
  405208:	mov    QWORD PTR [rbp-0x10],rdi
  40520c:	mov    DWORD PTR [rbp-0x14],esi
  40520f:	mov    DWORD PTR [rbp-0x18],edx
  405212:	mov    DWORD PTR [rbp-0x24],0x0
  405219:	cmp    DWORD PTR [rbp-0x24],0x8
  40521d:	jge    4052fd <flatcc_builder_custom_reset@@Base+0xfd>
  405223:	mov    rax,QWORD PTR [rbp-0x10]
  405227:	add    rax,0x58
  40522d:	movsxd rcx,DWORD PTR [rbp-0x24]
  405231:	shl    rcx,0x4
  405235:	add    rax,rcx
  405238:	mov    QWORD PTR [rbp-0x20],rax
  40523c:	mov    rax,QWORD PTR [rbp-0x20]
  405240:	cmp    QWORD PTR [rax],0x0
  405244:	je     4052b2 <flatcc_builder_custom_reset@@Base+0xb2>
  40524a:	cmp    DWORD PTR [rbp-0x24],0x5
  40524e:	je     405297 <flatcc_builder_custom_reset@@Base+0x97>
  405254:	cmp    DWORD PTR [rbp-0x18],0x0
  405258:	je     405297 <flatcc_builder_custom_reset@@Base+0x97>
  40525e:	mov    rax,QWORD PTR [rbp-0x10]
  405262:	mov    rax,QWORD PTR [rax+0x50]
  405266:	mov    rcx,QWORD PTR [rbp-0x10]
  40526a:	mov    rdi,QWORD PTR [rcx+0x40]
  40526e:	mov    rsi,QWORD PTR [rbp-0x20]
  405272:	mov    r8d,DWORD PTR [rbp-0x24]
  405276:	mov    edx,0x1
  40527b:	mov    ecx,0x1
  405280:	call   rax
  405282:	cmp    eax,0x0
  405285:	je     405297 <flatcc_builder_custom_reset@@Base+0x97>
  40528b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405292:	jmp    40543e <flatcc_builder_custom_reset@@Base+0x23e>
  405297:	xor    esi,esi
  405299:	mov    rax,QWORD PTR [rbp-0x20]
  40529d:	mov    rdi,QWORD PTR [rax]
  4052a0:	mov    rax,QWORD PTR [rbp-0x20]
  4052a4:	mov    rdx,QWORD PTR [rax+0x8]
  4052a8:	call   403070 <memset@plt>
  4052ad:	jmp    4052ea <flatcc_builder_custom_reset@@Base+0xea>
  4052b2:	mov    rax,QWORD PTR [rbp-0x20]
  4052b6:	cmp    QWORD PTR [rax+0x8],0x0
  4052bb:	jne    4052c6 <flatcc_builder_custom_reset@@Base+0xc6>
  4052c1:	jmp    4052e5 <flatcc_builder_custom_reset@@Base+0xe5>
  4052c6:	lea    rdi,[rip+0xd2a3]        # 412570 <flatcc_builder_padding_base@@Base+0x200>
  4052cd:	lea    rsi,[rip+0xd2ae]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4052d4:	mov    edx,0x1b2
  4052d9:	lea    rcx,[rip+0xd302]        # 4125e2 <flatcc_builder_padding_base@@Base+0x272>
  4052e0:	call   403060 <__assert_fail@plt>
  4052e5:	jmp    4052ea <flatcc_builder_custom_reset@@Base+0xea>
  4052ea:	jmp    4052ef <flatcc_builder_custom_reset@@Base+0xef>
  4052ef:	mov    eax,DWORD PTR [rbp-0x24]
  4052f2:	add    eax,0x1
  4052f5:	mov    DWORD PTR [rbp-0x24],eax
  4052f8:	jmp    405219 <flatcc_builder_custom_reset@@Base+0x19>
  4052fd:	mov    rax,QWORD PTR [rbp-0x10]
  405301:	mov    DWORD PTR [rax+0xe0],0x0
  40530b:	mov    rax,QWORD PTR [rbp-0x10]
  40530f:	cmp    DWORD PTR [rax+0xe4],0x0
  405316:	jbe    40532a <flatcc_builder_custom_reset@@Base+0x12a>
  40531c:	mov    rax,QWORD PTR [rbp-0x10]
  405320:	mov    DWORD PTR [rax+0xe4],0x10
  40532a:	mov    rax,QWORD PTR [rbp-0x10]
  40532e:	mov    WORD PTR [rax+0xe8],0x0
  405337:	mov    rax,QWORD PTR [rbp-0x10]
  40533b:	mov    DWORD PTR [rax+0xf0],0x0
  405345:	mov    rax,QWORD PTR [rbp-0x10]
  405349:	mov    DWORD PTR [rax+0xf4],0x0
  405353:	mov    rax,QWORD PTR [rbp-0x10]
  405357:	mov    DWORD PTR [rax+0x104],0x0
  405361:	mov    rax,QWORD PTR [rbp-0x10]
  405365:	mov    DWORD PTR [rax+0x108],0x0
  40536f:	mov    rax,QWORD PTR [rbp-0x10]
  405373:	mov    DWORD PTR [rax+0x20],0x0
  40537a:	mov    rax,QWORD PTR [rbp-0x10]
  40537e:	mov    DWORD PTR [rax+0x24],0x0
  405385:	mov    rax,QWORD PTR [rbp-0x10]
  405389:	mov    DWORD PTR [rax+0xfc],0x0
  405393:	mov    rax,QWORD PTR [rbp-0x10]
  405397:	mov    DWORD PTR [rax+0x100],0x0
  4053a1:	mov    rax,QWORD PTR [rbp-0x10]
  4053a5:	mov    rax,QWORD PTR [rax+0x68]
  4053a9:	mov    rcx,QWORD PTR [rbp-0x10]
  4053ad:	mov    QWORD PTR [rcx+0x18],rax
  4053b1:	mov    rax,QWORD PTR [rbp-0x10]
  4053b5:	mov    rax,QWORD PTR [rax+0x88]
  4053bc:	mov    rcx,QWORD PTR [rbp-0x10]
  4053c0:	mov    QWORD PTR [rcx],rax
  4053c3:	mov    rax,QWORD PTR [rbp-0x10]
  4053c7:	mov    rax,QWORD PTR [rax+0x58]
  4053cb:	mov    rcx,QWORD PTR [rbp-0x10]
  4053cf:	mov    QWORD PTR [rcx+0x8],rax
  4053d3:	mov    rax,QWORD PTR [rbp-0x10]
  4053d7:	mov    QWORD PTR [rax+0x30],0x0
  4053df:	cmp    DWORD PTR [rbp-0x14],0x0
  4053e3:	je     405414 <flatcc_builder_custom_reset@@Base+0x214>
  4053e9:	mov    rax,QWORD PTR [rbp-0x10]
  4053ed:	mov    QWORD PTR [rax+0x118],0x0
  4053f8:	mov    rax,QWORD PTR [rbp-0x10]
  4053fc:	mov    DWORD PTR [rax+0x120],0x0
  405406:	mov    rax,QWORD PTR [rbp-0x10]
  40540a:	mov    DWORD PTR [rax+0x124],0x0
  405414:	mov    rax,QWORD PTR [rbp-0x10]
  405418:	cmp    DWORD PTR [rax+0x128],0x0
  40541f:	je     405437 <flatcc_builder_custom_reset@@Base+0x237>
  405425:	mov    rax,QWORD PTR [rbp-0x10]
  405429:	add    rax,0x130
  40542f:	mov    rdi,rax
  405432:	call   40ad70 <flatcc_emitter_reset@@Base>
  405437:	mov    DWORD PTR [rbp-0x4],0x0
  40543e:	mov    eax,DWORD PTR [rbp-0x4]
  405441:	add    rsp,0x30
  405445:	pop    rbp
  405446:	ret    
  405447:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405450 <flatcc_builder_reset@@Base>:
  405450:	push   rbp
  405451:	mov    rbp,rsp
  405454:	sub    rsp,0x10
  405458:	xor    eax,eax
  40545a:	mov    QWORD PTR [rbp-0x8],rdi
  40545e:	mov    rdi,QWORD PTR [rbp-0x8]
  405462:	mov    esi,eax
  405464:	mov    edx,eax
  405466:	call   405200 <flatcc_builder_custom_reset@@Base>
  40546b:	add    rsp,0x10
  40546f:	pop    rbp
  405470:	ret    
  405471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40547b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405480 <flatcc_builder_clear@@Base>:
  405480:	push   rbp
  405481:	mov    rbp,rsp
  405484:	sub    rsp,0x20
  405488:	mov    QWORD PTR [rbp-0x8],rdi
  40548c:	mov    DWORD PTR [rbp-0x14],0x0
  405493:	cmp    DWORD PTR [rbp-0x14],0x8
  405497:	jge    4054f3 <flatcc_builder_clear@@Base+0x73>
  40549d:	xor    eax,eax
  40549f:	mov    edx,eax
  4054a1:	xor    ecx,ecx
  4054a3:	mov    rsi,QWORD PTR [rbp-0x8]
  4054a7:	add    rsi,0x58
  4054ae:	movsxd rdi,DWORD PTR [rbp-0x14]
  4054b2:	shl    rdi,0x4
  4054b6:	add    rsi,rdi
  4054b9:	mov    QWORD PTR [rbp-0x10],rsi
  4054bd:	mov    rsi,QWORD PTR [rbp-0x8]
  4054c1:	mov    rsi,QWORD PTR [rsi+0x50]
  4054c5:	mov    rdi,QWORD PTR [rbp-0x8]
  4054c9:	mov    rdi,QWORD PTR [rdi+0x40]
  4054cd:	mov    r8,QWORD PTR [rbp-0x10]
  4054d1:	mov    eax,DWORD PTR [rbp-0x14]
  4054d4:	mov    QWORD PTR [rbp-0x20],rsi
  4054d8:	mov    rsi,r8
  4054db:	mov    r8d,eax
  4054de:	mov    r9,QWORD PTR [rbp-0x20]
  4054e2:	call   r9
  4054e5:	mov    eax,DWORD PTR [rbp-0x14]
  4054e8:	add    eax,0x1
  4054eb:	mov    DWORD PTR [rbp-0x14],eax
  4054ee:	jmp    405493 <flatcc_builder_clear@@Base+0x13>
  4054f3:	mov    rax,QWORD PTR [rbp-0x8]
  4054f7:	cmp    DWORD PTR [rax+0x128],0x0
  4054fe:	je     405516 <flatcc_builder_clear@@Base+0x96>
  405504:	mov    rax,QWORD PTR [rbp-0x8]
  405508:	add    rax,0x130
  40550e:	mov    rdi,rax
  405511:	call   40af10 <flatcc_emitter_clear@@Base>
  405516:	xor    esi,esi
  405518:	mov    rax,QWORD PTR [rbp-0x8]
  40551c:	mov    rdi,rax
  40551f:	mov    edx,0x188
  405524:	call   403070 <memset@plt>
  405529:	add    rsp,0x20
  40552d:	pop    rbp
  40552e:	ret    
  40552f:	nop

0000000000405530 <flatcc_builder_enter_user_frame_ptr@@Base>:
  405530:	push   rbp
  405531:	mov    rbp,rsp
  405534:	sub    rsp,0x20
  405538:	xor    r8d,r8d
  40553b:	mov    QWORD PTR [rbp-0x10],rdi
  40553f:	mov    QWORD PTR [rbp-0x18],rsi
  405543:	mov    rax,QWORD PTR [rbp-0x18]
  405547:	add    rax,0x8
  40554d:	sub    rax,0x1
  405553:	and    rax,0xfffffffffffffff8
  405559:	add    rax,0x8
  40555f:	mov    QWORD PTR [rbp-0x18],rax
  405563:	mov    rdi,QWORD PTR [rbp-0x10]
  405567:	mov    rax,QWORD PTR [rbp-0x10]
  40556b:	mov    rdx,QWORD PTR [rax+0x180]
  405572:	mov    rcx,QWORD PTR [rbp-0x18]
  405576:	mov    esi,0x7
  40557b:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  405580:	mov    QWORD PTR [rbp-0x20],rax
  405584:	cmp    rax,0x0
  405588:	jne    40559b <flatcc_builder_enter_user_frame_ptr@@Base+0x6b>
  40558e:	mov    QWORD PTR [rbp-0x8],0x0
  405596:	jmp    405607 <flatcc_builder_enter_user_frame_ptr@@Base+0xd7>
  40559b:	xor    esi,esi
  40559d:	mov    rax,QWORD PTR [rbp-0x20]
  4055a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4055a5:	mov    rdi,rax
  4055a8:	call   403070 <memset@plt>
  4055ad:	mov    rax,QWORD PTR [rbp-0x10]
  4055b1:	mov    rax,QWORD PTR [rax+0x178]
  4055b8:	mov    rcx,QWORD PTR [rbp-0x20]
  4055bc:	mov    rdx,rcx
  4055bf:	add    rdx,0x8
  4055c6:	mov    QWORD PTR [rbp-0x20],rdx
  4055ca:	mov    QWORD PTR [rcx],rax
  4055cd:	mov    rax,QWORD PTR [rbp-0x10]
  4055d1:	mov    rax,QWORD PTR [rax+0x180]
  4055d8:	add    rax,0x8
  4055de:	mov    rcx,QWORD PTR [rbp-0x10]
  4055e2:	mov    QWORD PTR [rcx+0x178],rax
  4055e9:	mov    rax,QWORD PTR [rbp-0x18]
  4055ed:	mov    rcx,QWORD PTR [rbp-0x10]
  4055f1:	add    rax,QWORD PTR [rcx+0x180]
  4055f8:	mov    QWORD PTR [rcx+0x180],rax
  4055ff:	mov    rax,QWORD PTR [rbp-0x20]
  405603:	mov    QWORD PTR [rbp-0x8],rax
  405607:	mov    rax,QWORD PTR [rbp-0x8]
  40560b:	add    rsp,0x20
  40560f:	pop    rbp
  405610:	ret    
  405611:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40561b:	nop    DWORD PTR [rax+rax*1+0x0]
  405620:	push   rbp
  405621:	mov    rbp,rsp
  405624:	sub    rsp,0x40
  405628:	mov    QWORD PTR [rbp-0x8],rdi
  40562c:	mov    DWORD PTR [rbp-0xc],esi
  40562f:	mov    QWORD PTR [rbp-0x18],rdx
  405633:	mov    QWORD PTR [rbp-0x20],rcx
  405637:	mov    DWORD PTR [rbp-0x24],r8d
  40563b:	mov    rax,QWORD PTR [rbp-0x8]
  40563f:	add    rax,0x58
  405645:	movsxd rcx,DWORD PTR [rbp-0xc]
  405649:	shl    rcx,0x4
  40564d:	add    rax,rcx
  405650:	mov    QWORD PTR [rbp-0x30],rax
  405654:	mov    rax,QWORD PTR [rbp-0x18]
  405658:	add    rax,QWORD PTR [rbp-0x20]
  40565c:	mov    rcx,QWORD PTR [rbp-0x30]
  405660:	cmp    rax,QWORD PTR [rcx+0x8]
  405664:	jbe    4056c5 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  40566a:	mov    rax,QWORD PTR [rbp-0x8]
  40566e:	mov    rax,QWORD PTR [rax+0x50]
  405672:	mov    rcx,QWORD PTR [rbp-0x8]
  405676:	mov    rdi,QWORD PTR [rcx+0x40]
  40567a:	mov    rsi,QWORD PTR [rbp-0x30]
  40567e:	mov    rcx,QWORD PTR [rbp-0x18]
  405682:	add    rcx,QWORD PTR [rbp-0x20]
  405686:	mov    edx,DWORD PTR [rbp-0x24]
  405689:	mov    r8d,DWORD PTR [rbp-0xc]
  40568d:	mov    DWORD PTR [rbp-0x34],edx
  405690:	mov    rdx,rcx
  405693:	mov    ecx,DWORD PTR [rbp-0x34]
  405696:	call   rax
  405698:	cmp    eax,0x0
  40569b:	je     4056c0 <flatcc_builder_enter_user_frame_ptr@@Base+0x190>
  4056a1:	lea    rdi,[rip+0xe09a]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  4056a8:	lea    rsi,[rip+0xced3]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4056af:	mov    edx,0x134
  4056b4:	lea    rcx,[rip+0xdec1]        # 41357c <flatcc_builder_padding_base@@Base+0x120c>
  4056bb:	call   403060 <__assert_fail@plt>
  4056c0:	jmp    4056c5 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  4056c5:	mov    rax,QWORD PTR [rbp-0x30]
  4056c9:	mov    rax,QWORD PTR [rax]
  4056cc:	add    rax,QWORD PTR [rbp-0x18]
  4056d0:	add    rsp,0x40
  4056d4:	pop    rbp
  4056d5:	ret    
  4056d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004056e0 <flatcc_builder_enter_user_frame@@Base>:
  4056e0:	push   rbp
  4056e1:	mov    rbp,rsp
  4056e4:	sub    rsp,0x20
  4056e8:	xor    r8d,r8d
  4056eb:	mov    QWORD PTR [rbp-0x10],rdi
  4056ef:	mov    QWORD PTR [rbp-0x18],rsi
  4056f3:	mov    rax,QWORD PTR [rbp-0x18]
  4056f7:	add    rax,0x8
  4056fd:	sub    rax,0x1
  405703:	and    rax,0xfffffffffffffff8
  405709:	add    rax,0x8
  40570f:	mov    QWORD PTR [rbp-0x18],rax
  405713:	mov    rdi,QWORD PTR [rbp-0x10]
  405717:	mov    rax,QWORD PTR [rbp-0x10]
  40571b:	mov    rdx,QWORD PTR [rax+0x180]
  405722:	mov    rcx,QWORD PTR [rbp-0x18]
  405726:	mov    esi,0x7
  40572b:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  405730:	mov    QWORD PTR [rbp-0x20],rax
  405734:	cmp    rax,0x0
  405738:	jne    40574b <flatcc_builder_enter_user_frame@@Base+0x6b>
  40573e:	mov    QWORD PTR [rbp-0x8],0x0
  405746:	jmp    4057be <flatcc_builder_enter_user_frame@@Base+0xde>
  40574b:	xor    esi,esi
  40574d:	mov    rax,QWORD PTR [rbp-0x20]
  405751:	mov    rdx,QWORD PTR [rbp-0x18]
  405755:	mov    rdi,rax
  405758:	call   403070 <memset@plt>
  40575d:	mov    rax,QWORD PTR [rbp-0x10]
  405761:	mov    rax,QWORD PTR [rax+0x178]
  405768:	mov    rcx,QWORD PTR [rbp-0x20]
  40576c:	mov    rdx,rcx
  40576f:	add    rdx,0x8
  405776:	mov    QWORD PTR [rbp-0x20],rdx
  40577a:	mov    QWORD PTR [rcx],rax
  40577d:	mov    rax,QWORD PTR [rbp-0x10]
  405781:	mov    rax,QWORD PTR [rax+0x180]
  405788:	add    rax,0x8
  40578e:	mov    rcx,QWORD PTR [rbp-0x10]
  405792:	mov    QWORD PTR [rcx+0x178],rax
  405799:	mov    rax,QWORD PTR [rbp-0x18]
  40579d:	mov    rcx,QWORD PTR [rbp-0x10]
  4057a1:	add    rax,QWORD PTR [rcx+0x180]
  4057a8:	mov    QWORD PTR [rcx+0x180],rax
  4057af:	mov    rax,QWORD PTR [rbp-0x10]
  4057b3:	mov    rax,QWORD PTR [rax+0x178]
  4057ba:	mov    QWORD PTR [rbp-0x8],rax
  4057be:	mov    rax,QWORD PTR [rbp-0x8]
  4057c2:	add    rsp,0x20
  4057c6:	pop    rbp
  4057c7:	ret    
  4057c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004057d0 <flatcc_builder_exit_user_frame@@Base>:
  4057d0:	push   rbp
  4057d1:	mov    rbp,rsp
  4057d4:	sub    rsp,0x10
  4057d8:	mov    QWORD PTR [rbp-0x8],rdi
  4057dc:	mov    rax,QWORD PTR [rbp-0x8]
  4057e0:	cmp    QWORD PTR [rax+0x178],0x0
  4057e8:	jbe    4057f3 <flatcc_builder_exit_user_frame@@Base+0x23>
  4057ee:	jmp    405812 <flatcc_builder_exit_user_frame@@Base+0x42>
  4057f3:	lea    rdi,[rip+0xce26]        # 412620 <flatcc_builder_padding_base@@Base+0x2b0>
  4057fa:	lea    rsi,[rip+0xcd81]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405801:	mov    edx,0x21e
  405806:	lea    rcx,[rip+0xce2c]        # 412639 <flatcc_builder_padding_base@@Base+0x2c9>
  40580d:	call   403060 <__assert_fail@plt>
  405812:	mov    rax,QWORD PTR [rbp-0x8]
  405816:	mov    rax,QWORD PTR [rax+0xc8]
  40581d:	mov    rcx,QWORD PTR [rbp-0x8]
  405821:	mov    rcx,QWORD PTR [rcx+0x178]
  405828:	mov    ecx,ecx
  40582a:	mov    edx,ecx
  40582c:	add    rax,rdx
  40582f:	mov    QWORD PTR [rbp-0x10],rax
  405833:	mov    rax,QWORD PTR [rbp-0x8]
  405837:	mov    rax,QWORD PTR [rax+0x178]
  40583e:	sub    rax,0x8
  405844:	mov    rdx,QWORD PTR [rbp-0x8]
  405848:	mov    QWORD PTR [rdx+0x180],rax
  40584f:	mov    rax,QWORD PTR [rbp-0x10]
  405853:	mov    rax,QWORD PTR [rax-0x8]
  405857:	mov    rdx,QWORD PTR [rbp-0x8]
  40585b:	mov    QWORD PTR [rdx+0x178],rax
  405862:	add    rsp,0x10
  405866:	pop    rbp
  405867:	ret    
  405868:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405870 <flatcc_builder_exit_user_frame_at@@Base>:
  405870:	push   rbp
  405871:	mov    rbp,rsp
  405874:	sub    rsp,0x10
  405878:	mov    QWORD PTR [rbp-0x8],rdi
  40587c:	mov    QWORD PTR [rbp-0x10],rsi
  405880:	mov    rax,QWORD PTR [rbp-0x8]
  405884:	mov    rax,QWORD PTR [rax+0x178]
  40588b:	cmp    rax,QWORD PTR [rbp-0x10]
  40588f:	jb     40589a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  405895:	jmp    4058b9 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  40589a:	lea    rdi,[rip+0xcdd2]        # 412673 <flatcc_builder_padding_base@@Base+0x303>
  4058a1:	lea    rsi,[rip+0xccda]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4058a8:	mov    edx,0x227
  4058ad:	lea    rcx,[rip+0xcdde]        # 412692 <flatcc_builder_padding_base@@Base+0x322>
  4058b4:	call   403060 <__assert_fail@plt>
  4058b9:	mov    rax,QWORD PTR [rbp-0x10]
  4058bd:	mov    rcx,QWORD PTR [rbp-0x8]
  4058c1:	mov    QWORD PTR [rcx+0x178],rax
  4058c8:	mov    rdi,QWORD PTR [rbp-0x8]
  4058cc:	call   4057d0 <flatcc_builder_exit_user_frame@@Base>
  4058d1:	add    rsp,0x10
  4058d5:	pop    rbp
  4058d6:	ret    
  4058d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004058e0 <flatcc_builder_get_current_user_frame@@Base>:
  4058e0:	push   rbp
  4058e1:	mov    rbp,rsp
  4058e4:	mov    QWORD PTR [rbp-0x8],rdi
  4058e8:	mov    rax,QWORD PTR [rbp-0x8]
  4058ec:	mov    rax,QWORD PTR [rax+0x178]
  4058f3:	pop    rbp
  4058f4:	ret    
  4058f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058ff:	nop

0000000000405900 <flatcc_builder_get_user_frame_ptr@@Base>:
  405900:	push   rbp
  405901:	mov    rbp,rsp
  405904:	mov    QWORD PTR [rbp-0x8],rdi
  405908:	mov    QWORD PTR [rbp-0x10],rsi
  40590c:	mov    rax,QWORD PTR [rbp-0x8]
  405910:	mov    rax,QWORD PTR [rax+0xc8]
  405917:	mov    rcx,QWORD PTR [rbp-0x10]
  40591b:	mov    ecx,ecx
  40591d:	mov    edx,ecx
  40591f:	add    rax,rdx
  405922:	pop    rbp
  405923:	ret    
  405924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40592e:	xchg   ax,ax

0000000000405930 <flatcc_builder_embed_buffer@@Base>:
  405930:	push   rbp
  405931:	mov    rbp,rsp
  405934:	sub    rsp,0xd0
  40593b:	mov    QWORD PTR [rbp-0x10],rdi
  40593f:	mov    WORD PTR [rbp-0x12],si
  405943:	mov    QWORD PTR [rbp-0x20],rdx
  405947:	mov    QWORD PTR [rbp-0x28],rcx
  40594b:	mov    WORD PTR [rbp-0x2a],r8w
  405950:	mov    DWORD PTR [rbp-0x30],r9d
  405954:	mov    eax,DWORD PTR [rbp-0x30]
  405957:	and    eax,0x2
  40595a:	mov    DWORD PTR [rbp-0xcc],eax
  405960:	mov    rdi,QWORD PTR [rbp-0x10]
  405964:	mov    si,WORD PTR [rbp-0x12]
  405968:	mov    rcx,QWORD PTR [rbp-0x10]
  40596c:	cmp    DWORD PTR [rcx+0x100],0x0
  405973:	sete   r10b
  405977:	xor    r10b,0xff
  40597b:	and    r10b,0x1
  40597f:	movzx  ecx,r10b
  405983:	lea    rdx,[rbp-0x2a]
  405987:	mov    WORD PTR [rbp-0xce],si
  40598e:	mov    rsi,rdx
  405991:	mov    r8w,WORD PTR [rbp-0xce]
  405999:	movzx  edx,r8w
  40599d:	call   405b90 <flatcc_builder_embed_buffer@@Base+0x260>
  4059a2:	cmp    eax,0x0
  4059a5:	je     4059b7 <flatcc_builder_embed_buffer@@Base+0x87>
  4059ab:	mov    DWORD PTR [rbp-0x4],0x0
  4059b2:	jmp    405b7c <flatcc_builder_embed_buffer@@Base+0x24c>
  4059b7:	xor    eax,eax
  4059b9:	mov    ecx,eax
  4059bb:	mov    rdi,QWORD PTR [rbp-0x10]
  4059bf:	mov    rdx,QWORD PTR [rbp-0x28]
  4059c3:	mov    eax,edx
  4059c5:	mov    esi,eax
  4059c7:	mov    eax,DWORD PTR [rbp-0xcc]
  4059cd:	cmp    eax,0x0
  4059d0:	mov    r8d,0x4
  4059d6:	cmovne rcx,r8
  4059da:	add    rsi,rcx
  4059dd:	movzx  edx,WORD PTR [rbp-0x2a]
  4059e1:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  4059e6:	mov    DWORD PTR [rbp-0x38],eax
  4059e9:	mov    rcx,QWORD PTR [rbp-0x28]
  4059ed:	add    ecx,DWORD PTR [rbp-0x38]
  4059f0:	mov    edi,ecx
  4059f2:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  4059f7:	mov    DWORD PTR [rbp-0x34],eax
  4059fa:	mov    QWORD PTR [rbp-0xc8],0x0
  405a05:	mov    DWORD PTR [rbp-0xc0],0x0
  405a0f:	mov    r8,QWORD PTR [rbp-0x10]
  405a13:	cmp    DWORD PTR [r8+0x100],0x0
  405a1b:	je     405a87 <flatcc_builder_embed_buffer@@Base+0x157>
  405a21:	mov    rax,QWORD PTR [rbp-0xc8]
  405a28:	add    rax,0x4
  405a2e:	mov    QWORD PTR [rbp-0xc8],rax
  405a35:	lea    rax,[rbp-0x34]
  405a39:	lea    rcx,[rbp-0xc8]
  405a40:	mov    rdx,rcx
  405a43:	add    rdx,0x10
  405a4a:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405a51:	shl    rsi,0x4
  405a55:	add    rdx,rsi
  405a58:	mov    QWORD PTR [rdx],rax
  405a5b:	add    rcx,0x10
  405a62:	movsxd rax,DWORD PTR [rbp-0xc0]
  405a69:	shl    rax,0x4
  405a6d:	add    rcx,rax
  405a70:	mov    QWORD PTR [rcx+0x8],0x4
  405a78:	mov    edi,DWORD PTR [rbp-0xc0]
  405a7e:	add    edi,0x1
  405a81:	mov    DWORD PTR [rbp-0xc0],edi
  405a87:	cmp    QWORD PTR [rbp-0x28],0x0
  405a8c:	jbe    405af6 <flatcc_builder_embed_buffer@@Base+0x1c6>
  405a92:	mov    rax,QWORD PTR [rbp-0x28]
  405a96:	add    rax,QWORD PTR [rbp-0xc8]
  405a9d:	mov    QWORD PTR [rbp-0xc8],rax
  405aa4:	mov    rax,QWORD PTR [rbp-0x20]
  405aa8:	lea    rcx,[rbp-0xc8]
  405aaf:	mov    rdx,rcx
  405ab2:	add    rdx,0x10
  405ab9:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405ac0:	shl    rsi,0x4
  405ac4:	add    rdx,rsi
  405ac7:	mov    QWORD PTR [rdx],rax
  405aca:	mov    rax,QWORD PTR [rbp-0x28]
  405ace:	add    rcx,0x10
  405ad5:	movsxd rdx,DWORD PTR [rbp-0xc0]
  405adc:	shl    rdx,0x4
  405ae0:	add    rcx,rdx
  405ae3:	mov    QWORD PTR [rcx+0x8],rax
  405ae7:	mov    edi,DWORD PTR [rbp-0xc0]
  405aed:	add    edi,0x1
  405af0:	mov    DWORD PTR [rbp-0xc0],edi
  405af6:	cmp    DWORD PTR [rbp-0x38],0x0
  405afa:	jbe    405b69 <flatcc_builder_embed_buffer@@Base+0x239>
  405b00:	lea    rax,[rip+0xc869]        # 412370 <flatcc_builder_padding_base@@Base>
  405b07:	mov    ecx,DWORD PTR [rbp-0x38]
  405b0a:	mov    edx,ecx
  405b0c:	add    rdx,QWORD PTR [rbp-0xc8]
  405b13:	mov    QWORD PTR [rbp-0xc8],rdx
  405b1a:	lea    rdx,[rbp-0xc8]
  405b21:	mov    rsi,rdx
  405b24:	add    rsi,0x10
  405b2b:	movsxd rdi,DWORD PTR [rbp-0xc0]
  405b32:	shl    rdi,0x4
  405b36:	add    rsi,rdi
  405b39:	mov    QWORD PTR [rsi],rax
  405b3c:	mov    ecx,DWORD PTR [rbp-0x38]
  405b3f:	mov    eax,ecx
  405b41:	add    rdx,0x10
  405b48:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405b4f:	shl    rsi,0x4
  405b53:	add    rdx,rsi
  405b56:	mov    QWORD PTR [rdx+0x8],rax
  405b5a:	mov    ecx,DWORD PTR [rbp-0xc0]
  405b60:	add    ecx,0x1
  405b63:	mov    DWORD PTR [rbp-0xc0],ecx
  405b69:	mov    rdi,QWORD PTR [rbp-0x10]
  405b6d:	lea    rsi,[rbp-0xc8]
  405b74:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  405b79:	mov    DWORD PTR [rbp-0x4],eax
  405b7c:	mov    eax,DWORD PTR [rbp-0x4]
  405b7f:	add    rsp,0xd0
  405b86:	pop    rbp
  405b87:	ret    
  405b88:	nop    DWORD PTR [rax+rax*1+0x0]
  405b90:	push   rbp
  405b91:	mov    rbp,rsp
  405b94:	sub    rsp,0xc0
  405b9b:	mov    QWORD PTR [rbp-0x8],rdi
  405b9f:	mov    QWORD PTR [rbp-0x10],rsi
  405ba3:	mov    WORD PTR [rbp-0x12],dx
  405ba7:	mov    DWORD PTR [rbp-0x18],ecx
  405baa:	movzx  eax,WORD PTR [rbp-0x12]
  405bae:	cmp    eax,0x0
  405bb1:	je     405bc6 <flatcc_builder_embed_buffer@@Base+0x296>
  405bb7:	movzx  eax,WORD PTR [rbp-0x12]
  405bbb:	mov    DWORD PTR [rbp-0xb4],eax
  405bc1:	jmp    405c0c <flatcc_builder_embed_buffer@@Base+0x2dc>
  405bc6:	mov    rax,QWORD PTR [rbp-0x8]
  405bca:	movzx  ecx,WORD PTR [rax+0xec]
  405bd1:	cmp    ecx,0x0
  405bd4:	je     405bf0 <flatcc_builder_embed_buffer@@Base+0x2c0>
  405bda:	mov    rax,QWORD PTR [rbp-0x8]
  405bde:	movzx  ecx,WORD PTR [rax+0xec]
  405be5:	mov    DWORD PTR [rbp-0xb8],ecx
  405beb:	jmp    405c00 <flatcc_builder_embed_buffer@@Base+0x2d0>
  405bf0:	mov    eax,0x1
  405bf5:	mov    DWORD PTR [rbp-0xb8],eax
  405bfb:	jmp    405c00 <flatcc_builder_embed_buffer@@Base+0x2d0>
  405c00:	mov    eax,DWORD PTR [rbp-0xb8]
  405c06:	mov    DWORD PTR [rbp-0xb4],eax
  405c0c:	mov    eax,DWORD PTR [rbp-0xb4]
  405c12:	mov    WORD PTR [rbp-0x12],ax
  405c16:	mov    rdi,QWORD PTR [rbp-0x10]
  405c1a:	mov    esi,0x4
  405c1f:	call   407700 <flatcc_builder_start_vector@@Base+0xb0>
  405c24:	mov    rdi,QWORD PTR [rbp-0x10]
  405c28:	movzx  esi,WORD PTR [rbp-0x12]
  405c2c:	call   407700 <flatcc_builder_start_vector@@Base+0xb0>
  405c31:	cmp    DWORD PTR [rbp-0x18],0x0
  405c35:	jne    405d25 <flatcc_builder_embed_buffer@@Base+0x3f5>
  405c3b:	mov    rdi,QWORD PTR [rbp-0x8]
  405c3f:	movzx  esi,WORD PTR [rbp-0x12]
  405c43:	call   40aa60 <flatcc_builder_get_emit_context@@Base+0x20>
  405c48:	mov    eax,eax
  405c4a:	mov    ecx,eax
  405c4c:	mov    QWORD PTR [rbp-0x20],rcx
  405c50:	cmp    QWORD PTR [rbp-0x20],0x0
  405c55:	je     405d20 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405c5b:	mov    QWORD PTR [rbp-0xb0],0x0
  405c66:	mov    DWORD PTR [rbp-0xa8],0x0
  405c70:	cmp    QWORD PTR [rbp-0x20],0x0
  405c75:	jbe    405ce2 <flatcc_builder_embed_buffer@@Base+0x3b2>
  405c7b:	lea    rax,[rip+0xc6ee]        # 412370 <flatcc_builder_padding_base@@Base>
  405c82:	mov    rcx,QWORD PTR [rbp-0x20]
  405c86:	add    rcx,QWORD PTR [rbp-0xb0]
  405c8d:	mov    QWORD PTR [rbp-0xb0],rcx
  405c94:	lea    rcx,[rbp-0xb0]
  405c9b:	mov    rdx,rcx
  405c9e:	add    rdx,0x10
  405ca5:	movsxd rsi,DWORD PTR [rbp-0xa8]
  405cac:	shl    rsi,0x4
  405cb0:	add    rdx,rsi
  405cb3:	mov    QWORD PTR [rdx],rax
  405cb6:	mov    rax,QWORD PTR [rbp-0x20]
  405cba:	add    rcx,0x10
  405cc1:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405cc8:	shl    rdx,0x4
  405ccc:	add    rcx,rdx
  405ccf:	mov    QWORD PTR [rcx+0x8],rax
  405cd3:	mov    edi,DWORD PTR [rbp-0xa8]
  405cd9:	add    edi,0x1
  405cdc:	mov    DWORD PTR [rbp-0xa8],edi
  405ce2:	mov    rdi,QWORD PTR [rbp-0x8]
  405ce6:	lea    rsi,[rbp-0xb0]
  405ced:	call   407d00 <flatcc_builder_create_vtable@@Base+0x140>
  405cf2:	xor    ecx,ecx
  405cf4:	cmp    ecx,eax
  405cf6:	jne    405d1b <flatcc_builder_embed_buffer@@Base+0x3eb>
  405cfc:	lea    rdi,[rip+0xda3f]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405d03:	lea    rsi,[rip+0xc878]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405d0a:	mov    edx,0x2be
  405d0f:	lea    rcx,[rip+0xd8a9]        # 4135bf <flatcc_builder_padding_base@@Base+0x124f>
  405d16:	call   403060 <__assert_fail@plt>
  405d1b:	jmp    405d20 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405d20:	jmp    405d25 <flatcc_builder_embed_buffer@@Base+0x3f5>
  405d25:	xor    eax,eax
  405d27:	add    rsp,0xc0
  405d2e:	pop    rbp
  405d2f:	ret    
  405d30:	push   rbp
  405d31:	mov    rbp,rsp
  405d34:	mov    QWORD PTR [rbp-0x8],rdi
  405d38:	mov    DWORD PTR [rbp-0xc],esi
  405d3b:	mov    WORD PTR [rbp-0xe],dx
  405d3f:	mov    rax,QWORD PTR [rbp-0x8]
  405d43:	mov    ecx,DWORD PTR [rax+0xf0]
  405d49:	sub    ecx,DWORD PTR [rbp-0xc]
  405d4c:	movzx  esi,WORD PTR [rbp-0xe]
  405d50:	sub    esi,0x1
  405d53:	and    ecx,esi
  405d55:	mov    eax,ecx
  405d57:	pop    rbp
  405d58:	ret    
  405d59:	nop    DWORD PTR [rax+0x0]
  405d60:	push   rbp
  405d61:	mov    rbp,rsp
  405d64:	mov    DWORD PTR [rbp-0x4],edi
  405d67:	mov    eax,DWORD PTR [rbp-0x4]
  405d6a:	pop    rbp
  405d6b:	ret    
  405d6c:	nop    DWORD PTR [rax+0x0]
  405d70:	push   rbp
  405d71:	mov    rbp,rsp
  405d74:	sub    rsp,0x20
  405d78:	mov    QWORD PTR [rbp-0x8],rdi
  405d7c:	mov    QWORD PTR [rbp-0x10],rsi
  405d80:	mov    rax,QWORD PTR [rbp-0x8]
  405d84:	mov    ecx,DWORD PTR [rax+0xf0]
  405d8a:	mov    rax,QWORD PTR [rbp-0x10]
  405d8e:	mov    rax,QWORD PTR [rax]
  405d91:	sub    ecx,eax
  405d93:	mov    DWORD PTR [rbp-0x14],ecx
  405d96:	mov    rdx,QWORD PTR [rbp-0x10]
  405d9a:	cmp    QWORD PTR [rdx],0x10
  405d9e:	jbe    405dbf <flatcc_builder_embed_buffer@@Base+0x48f>
  405da4:	mov    rax,QWORD PTR [rbp-0x10]
  405da8:	mov    rax,QWORD PTR [rax]
  405dab:	sub    rax,0x10
  405db1:	mov    ecx,0xffffffff
  405db6:	cmp    rax,rcx
  405db9:	ja     405dd2 <flatcc_builder_embed_buffer@@Base+0x4a2>
  405dbf:	mov    eax,DWORD PTR [rbp-0x14]
  405dc2:	mov    rcx,QWORD PTR [rbp-0x8]
  405dc6:	cmp    eax,DWORD PTR [rcx+0xf0]
  405dcc:	jl     405df1 <flatcc_builder_embed_buffer@@Base+0x4c1>
  405dd2:	lea    rdi,[rip+0xd969]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405dd9:	lea    rsi,[rip+0xc7a2]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405de0:	mov    edx,0x287
  405de5:	lea    rcx,[rip+0xd815]        # 413601 <flatcc_builder_padding_base@@Base+0x1291>
  405dec:	call   403060 <__assert_fail@plt>
  405df1:	mov    rax,QWORD PTR [rbp-0x8]
  405df5:	mov    rax,QWORD PTR [rax+0x48]
  405df9:	mov    rcx,QWORD PTR [rbp-0x8]
  405dfd:	mov    rdi,QWORD PTR [rcx+0x38]
  405e01:	mov    rcx,QWORD PTR [rbp-0x10]
  405e05:	add    rcx,0x10
  405e0c:	mov    rdx,QWORD PTR [rbp-0x10]
  405e10:	mov    edx,DWORD PTR [rdx+0x8]
  405e13:	mov    esi,DWORD PTR [rbp-0x14]
  405e16:	mov    r8,QWORD PTR [rbp-0x10]
  405e1a:	mov    r8,QWORD PTR [r8]
  405e1d:	mov    DWORD PTR [rbp-0x18],esi
  405e20:	mov    rsi,rcx
  405e23:	mov    ecx,DWORD PTR [rbp-0x18]
  405e26:	call   rax
  405e28:	cmp    eax,0x0
  405e2b:	je     405e50 <flatcc_builder_embed_buffer@@Base+0x520>
  405e31:	lea    rdi,[rip+0xd90a]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405e38:	lea    rsi,[rip+0xc743]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405e3f:	mov    edx,0x28b
  405e44:	lea    rcx,[rip+0xd7b6]        # 413601 <flatcc_builder_padding_base@@Base+0x1291>
  405e4b:	call   403060 <__assert_fail@plt>
  405e50:	mov    eax,DWORD PTR [rbp-0x14]
  405e53:	mov    rcx,QWORD PTR [rbp-0x8]
  405e57:	mov    DWORD PTR [rcx+0xf0],eax
  405e5d:	add    rsp,0x20
  405e61:	pop    rbp
  405e62:	ret    
  405e63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e6d:	nop    DWORD PTR [rax]

0000000000405e70 <flatcc_builder_create_buffer@@Base>:
  405e70:	push   rbp
  405e71:	mov    rbp,rsp
  405e74:	sub    rsp,0xf0
  405e7b:	mov    QWORD PTR [rbp-0x10],rdi
  405e7f:	mov    QWORD PTR [rbp-0x18],rsi
  405e83:	mov    WORD PTR [rbp-0x1a],dx
  405e87:	mov    DWORD PTR [rbp-0x20],ecx
  405e8a:	mov    WORD PTR [rbp-0x22],r8w
  405e8f:	mov    DWORD PTR [rbp-0x28],r9d
  405e93:	mov    DWORD PTR [rbp-0x34],0x0
  405e9a:	mov    DWORD PTR [rbp-0xd4],0x0
  405ea4:	mov    eax,DWORD PTR [rbp-0x28]
  405ea7:	and    eax,0x1
  405eaa:	cmp    eax,0x0
  405ead:	setne  r10b
  405eb1:	and    r10b,0x1
  405eb5:	movzx  eax,r10b
  405eb9:	mov    DWORD PTR [rbp-0xd8],eax
  405ebf:	mov    eax,DWORD PTR [rbp-0x28]
  405ec2:	and    eax,0x2
  405ec5:	cmp    eax,0x0
  405ec8:	setne  r10b
  405ecc:	and    r10b,0x1
  405ed0:	movzx  eax,r10b
  405ed4:	mov    DWORD PTR [rbp-0xdc],eax
  405eda:	mov    rdi,QWORD PTR [rbp-0x10]
  405ede:	mov    dx,WORD PTR [rbp-0x1a]
  405ee2:	mov    ecx,DWORD PTR [rbp-0xd8]
  405ee8:	lea    rsi,[rbp-0x22]
  405eec:	movzx  edx,dx
  405eef:	call   405b90 <flatcc_builder_embed_buffer@@Base+0x260>
  405ef4:	cmp    eax,0x0
  405ef7:	je     405f09 <flatcc_builder_create_buffer@@Base+0x99>
  405efd:	mov    DWORD PTR [rbp-0x4],0x0
  405f04:	jmp    406275 <flatcc_builder_create_buffer@@Base+0x405>
  405f09:	mov    rdi,QWORD PTR [rbp-0x10]
  405f0d:	movzx  esi,WORD PTR [rbp-0x22]
  405f11:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  405f16:	cmp    QWORD PTR [rbp-0x18],0x0
  405f1b:	je     405f4f <flatcc_builder_create_buffer@@Base+0xdf>
  405f21:	mov    rax,QWORD PTR [rbp-0x18]
  405f25:	mov    ecx,DWORD PTR [rax]
  405f27:	mov    DWORD PTR [rbp-0xd4],ecx
  405f2d:	mov    edi,DWORD PTR [rbp-0xd4]
  405f33:	call   4062d0 <flatcc_builder_create_buffer@@Base+0x460>
  405f38:	mov    DWORD PTR [rbp-0xd4],eax
  405f3e:	mov    edi,DWORD PTR [rbp-0xd4]
  405f44:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  405f49:	mov    DWORD PTR [rbp-0xd4],eax
  405f4f:	xor    eax,eax
  405f51:	mov    ecx,eax
  405f53:	xor    eax,eax
  405f55:	mov    edx,DWORD PTR [rbp-0xd4]
  405f5b:	cmp    edx,0x0
  405f5e:	mov    edx,0x4
  405f63:	cmovne eax,edx
  405f66:	mov    DWORD PTR [rbp-0x34],eax
  405f69:	mov    rdi,QWORD PTR [rbp-0x10]
  405f6d:	mov    eax,DWORD PTR [rbp-0x34]
  405f70:	mov    esi,eax
  405f72:	add    rsi,0x4
  405f79:	mov    eax,DWORD PTR [rbp-0xdc]
  405f7f:	cmp    eax,0x0
  405f82:	mov    r8d,0x4
  405f88:	cmovne rcx,r8
  405f8c:	add    rsi,rcx
  405f8f:	movzx  edx,WORD PTR [rbp-0x22]
  405f93:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  405f98:	mov    DWORD PTR [rbp-0x30],eax
  405f9b:	mov    QWORD PTR [rbp-0xd0],0x0
  405fa6:	mov    DWORD PTR [rbp-0xc8],0x0
  405fb0:	cmp    DWORD PTR [rbp-0xd8],0x0
  405fb7:	jne    405fca <flatcc_builder_create_buffer@@Base+0x15a>
  405fbd:	cmp    DWORD PTR [rbp-0xdc],0x0
  405fc4:	je     406030 <flatcc_builder_create_buffer@@Base+0x1c0>
  405fca:	mov    rax,QWORD PTR [rbp-0xd0]
  405fd1:	add    rax,0x4
  405fd7:	mov    QWORD PTR [rbp-0xd0],rax
  405fde:	lea    rax,[rbp-0x3c]
  405fe2:	lea    rcx,[rbp-0xd0]
  405fe9:	mov    rdx,rcx
  405fec:	add    rdx,0x10
  405ff3:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405ffa:	shl    rsi,0x4
  405ffe:	add    rdx,rsi
  406001:	mov    QWORD PTR [rdx],rax
  406004:	add    rcx,0x10
  40600b:	movsxd rax,DWORD PTR [rbp-0xc8]
  406012:	shl    rax,0x4
  406016:	add    rcx,rax
  406019:	mov    QWORD PTR [rcx+0x8],0x4
  406021:	mov    edi,DWORD PTR [rbp-0xc8]
  406027:	add    edi,0x1
  40602a:	mov    DWORD PTR [rbp-0xc8],edi
  406030:	mov    rax,QWORD PTR [rbp-0xd0]
  406037:	add    rax,0x4
  40603d:	mov    QWORD PTR [rbp-0xd0],rax
  406044:	lea    rax,[rbp-0x38]
  406048:	lea    rcx,[rbp-0xd0]
  40604f:	mov    rdx,rcx
  406052:	add    rdx,0x10
  406059:	movsxd rsi,DWORD PTR [rbp-0xc8]
  406060:	shl    rsi,0x4
  406064:	add    rdx,rsi
  406067:	mov    QWORD PTR [rdx],rax
  40606a:	add    rcx,0x10
  406071:	movsxd rax,DWORD PTR [rbp-0xc8]
  406078:	shl    rax,0x4
  40607c:	add    rcx,rax
  40607f:	mov    QWORD PTR [rcx+0x8],0x4
  406087:	mov    edi,DWORD PTR [rbp-0xc8]
  40608d:	add    edi,0x1
  406090:	mov    DWORD PTR [rbp-0xc8],edi
  406096:	cmp    DWORD PTR [rbp-0x34],0x0
  40609a:	jbe    406109 <flatcc_builder_create_buffer@@Base+0x299>
  4060a0:	mov    eax,DWORD PTR [rbp-0x34]
  4060a3:	mov    ecx,eax
  4060a5:	add    rcx,QWORD PTR [rbp-0xd0]
  4060ac:	mov    QWORD PTR [rbp-0xd0],rcx
  4060b3:	lea    rcx,[rbp-0xd4]
  4060ba:	lea    rdx,[rbp-0xd0]
  4060c1:	mov    rsi,rdx
  4060c4:	add    rsi,0x10
  4060cb:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4060d2:	shl    rdi,0x4
  4060d6:	add    rsi,rdi
  4060d9:	mov    QWORD PTR [rsi],rcx
  4060dc:	mov    eax,DWORD PTR [rbp-0x34]
  4060df:	mov    ecx,eax
  4060e1:	add    rdx,0x10
  4060e8:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4060ef:	shl    rsi,0x4
  4060f3:	add    rdx,rsi
  4060f6:	mov    QWORD PTR [rdx+0x8],rcx
  4060fa:	mov    eax,DWORD PTR [rbp-0xc8]
  406100:	add    eax,0x1
  406103:	mov    DWORD PTR [rbp-0xc8],eax
  406109:	cmp    DWORD PTR [rbp-0x30],0x0
  40610d:	jbe    40617c <flatcc_builder_create_buffer@@Base+0x30c>
  406113:	lea    rax,[rip+0xc256]        # 412370 <flatcc_builder_padding_base@@Base>
  40611a:	mov    ecx,DWORD PTR [rbp-0x30]
  40611d:	mov    edx,ecx
  40611f:	add    rdx,QWORD PTR [rbp-0xd0]
  406126:	mov    QWORD PTR [rbp-0xd0],rdx
  40612d:	lea    rdx,[rbp-0xd0]
  406134:	mov    rsi,rdx
  406137:	add    rsi,0x10
  40613e:	movsxd rdi,DWORD PTR [rbp-0xc8]
  406145:	shl    rdi,0x4
  406149:	add    rsi,rdi
  40614c:	mov    QWORD PTR [rsi],rax
  40614f:	mov    ecx,DWORD PTR [rbp-0x30]
  406152:	mov    eax,ecx
  406154:	add    rdx,0x10
  40615b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  406162:	shl    rsi,0x4
  406166:	add    rdx,rsi
  406169:	mov    QWORD PTR [rdx+0x8],rax
  40616d:	mov    ecx,DWORD PTR [rbp-0xc8]
  406173:	add    ecx,0x1
  406176:	mov    DWORD PTR [rbp-0xc8],ecx
  40617c:	mov    rax,QWORD PTR [rbp-0x10]
  406180:	mov    ecx,DWORD PTR [rax+0xf0]
  406186:	mov    rax,QWORD PTR [rbp-0xd0]
  40618d:	sub    ecx,eax
  40618f:	mov    eax,ecx
  406191:	mov    edx,eax
  406193:	cmp    DWORD PTR [rbp-0xd8],0x0
  40619a:	mov    sil,0x1
  40619d:	mov    QWORD PTR [rbp-0xe8],rdx
  4061a4:	mov    BYTE PTR [rbp-0xe9],sil
  4061ab:	jne    4061c1 <flatcc_builder_create_buffer@@Base+0x351>
  4061b1:	cmp    DWORD PTR [rbp-0xdc],0x0
  4061b8:	setne  al
  4061bb:	mov    BYTE PTR [rbp-0xe9],al
  4061c1:	mov    al,BYTE PTR [rbp-0xe9]
  4061c7:	xor    ecx,ecx
  4061c9:	mov    edx,ecx
  4061cb:	test   al,0x1
  4061cd:	mov    esi,0x4
  4061d2:	cmovne rdx,rsi
  4061d6:	mov    rsi,QWORD PTR [rbp-0xe8]
  4061dd:	add    rsi,rdx
  4061e0:	mov    DWORD PTR [rbp-0x40],esi
  4061e3:	cmp    DWORD PTR [rbp-0xd8],0x0
  4061ea:	je     40620c <flatcc_builder_create_buffer@@Base+0x39c>
  4061f0:	mov    rax,QWORD PTR [rbp-0x10]
  4061f4:	mov    ecx,DWORD PTR [rax+0xf8]
  4061fa:	sub    ecx,DWORD PTR [rbp-0x40]
  4061fd:	mov    edi,ecx
  4061ff:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  406204:	mov    DWORD PTR [rbp-0x3c],eax
  406207:	jmp    406223 <flatcc_builder_create_buffer@@Base+0x3b3>
  40620c:	mov    rax,QWORD PTR [rbp-0x10]
  406210:	mov    ecx,DWORD PTR [rax+0xf4]
  406216:	sub    ecx,DWORD PTR [rbp-0x40]
  406219:	mov    edi,ecx
  40621b:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  406220:	mov    DWORD PTR [rbp-0x3c],eax
  406223:	mov    eax,DWORD PTR [rbp-0x20]
  406226:	sub    eax,DWORD PTR [rbp-0x40]
  406229:	mov    edi,eax
  40622b:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  406230:	mov    DWORD PTR [rbp-0x38],eax
  406233:	mov    rdi,QWORD PTR [rbp-0x10]
  406237:	lea    rsi,[rbp-0xd0]
  40623e:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  406243:	xor    ecx,ecx
  406245:	mov    DWORD PTR [rbp-0x2c],eax
  406248:	cmp    ecx,eax
  40624a:	jne    40626f <flatcc_builder_create_buffer@@Base+0x3ff>
  406250:	lea    rdi,[rip+0xd4eb]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  406257:	lea    rsi,[rip+0xc324]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40625e:	mov    edx,0x304
  406263:	lea    rcx,[rip+0xc46d]        # 4126d7 <flatcc_builder_padding_base@@Base+0x367>
  40626a:	call   403060 <__assert_fail@plt>
  40626f:	mov    eax,DWORD PTR [rbp-0x2c]
  406272:	mov    DWORD PTR [rbp-0x4],eax
  406275:	mov    eax,DWORD PTR [rbp-0x4]
  406278:	add    rsp,0xf0
  40627f:	pop    rbp
  406280:	ret    
  406281:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40628b:	nop    DWORD PTR [rax+rax*1+0x0]
  406290:	push   rbp
  406291:	mov    rbp,rsp
  406294:	mov    QWORD PTR [rbp-0x8],rdi
  406298:	mov    WORD PTR [rbp-0xa],si
  40629c:	mov    rax,QWORD PTR [rbp-0x8]
  4062a0:	movzx  ecx,WORD PTR [rax+0xe8]
  4062a7:	movzx  edx,WORD PTR [rbp-0xa]
  4062ab:	cmp    ecx,edx
  4062ad:	jge    4062c2 <flatcc_builder_create_buffer@@Base+0x452>
  4062b3:	mov    ax,WORD PTR [rbp-0xa]
  4062b7:	mov    rcx,QWORD PTR [rbp-0x8]
  4062bb:	mov    WORD PTR [rcx+0xe8],ax
  4062c2:	pop    rbp
  4062c3:	ret    
  4062c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062ce:	xchg   ax,ax
  4062d0:	push   rbp
  4062d1:	mov    rbp,rsp
  4062d4:	mov    DWORD PTR [rbp-0x4],edi
  4062d7:	mov    eax,DWORD PTR [rbp-0x4]
  4062da:	pop    rbp
  4062db:	ret    
  4062dc:	nop    DWORD PTR [rax+0x0]

00000000004062e0 <flatcc_builder_create_struct@@Base>:
  4062e0:	push   rbp
  4062e1:	mov    rbp,rsp
  4062e4:	sub    rsp,0xc0
  4062eb:	mov    QWORD PTR [rbp-0x8],rdi
  4062ef:	mov    QWORD PTR [rbp-0x10],rsi
  4062f3:	mov    QWORD PTR [rbp-0x18],rdx
  4062f7:	mov    WORD PTR [rbp-0x1a],cx
  4062fb:	movzx  eax,WORD PTR [rbp-0x1a]
  4062ff:	cmp    eax,0x1
  406302:	jl     40630d <flatcc_builder_create_struct@@Base+0x2d>
  406308:	jmp    40632c <flatcc_builder_create_struct@@Base+0x4c>
  40630d:	lea    rdi,[rip+0xc446]        # 41275a <flatcc_builder_padding_base@@Base+0x3ea>
  406314:	lea    rsi,[rip+0xc267]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40631b:	mov    edx,0x30f
  406320:	lea    rcx,[rip+0xc43e]        # 412765 <flatcc_builder_padding_base@@Base+0x3f5>
  406327:	call   403060 <__assert_fail@plt>
  40632c:	mov    rdi,QWORD PTR [rbp-0x8]
  406330:	movzx  esi,WORD PTR [rbp-0x1a]
  406334:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  406339:	mov    rdi,QWORD PTR [rbp-0x8]
  40633d:	mov    rax,QWORD PTR [rbp-0x18]
  406341:	mov    esi,eax
  406343:	movzx  edx,WORD PTR [rbp-0x1a]
  406347:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  40634c:	mov    eax,eax
  40634e:	mov    ecx,eax
  406350:	mov    QWORD PTR [rbp-0x28],rcx
  406354:	mov    QWORD PTR [rbp-0xb8],0x0
  40635f:	mov    DWORD PTR [rbp-0xb0],0x0
  406369:	cmp    QWORD PTR [rbp-0x18],0x0
  40636e:	jbe    4063d8 <flatcc_builder_create_struct@@Base+0xf8>
  406374:	mov    rax,QWORD PTR [rbp-0x18]
  406378:	add    rax,QWORD PTR [rbp-0xb8]
  40637f:	mov    QWORD PTR [rbp-0xb8],rax
  406386:	mov    rax,QWORD PTR [rbp-0x10]
  40638a:	lea    rcx,[rbp-0xb8]
  406391:	mov    rdx,rcx
  406394:	add    rdx,0x10
  40639b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4063a2:	shl    rsi,0x4
  4063a6:	add    rdx,rsi
  4063a9:	mov    QWORD PTR [rdx],rax
  4063ac:	mov    rax,QWORD PTR [rbp-0x18]
  4063b0:	add    rcx,0x10
  4063b7:	movsxd rdx,DWORD PTR [rbp-0xb0]
  4063be:	shl    rdx,0x4
  4063c2:	add    rcx,rdx
  4063c5:	mov    QWORD PTR [rcx+0x8],rax
  4063c9:	mov    edi,DWORD PTR [rbp-0xb0]
  4063cf:	add    edi,0x1
  4063d2:	mov    DWORD PTR [rbp-0xb0],edi
  4063d8:	cmp    QWORD PTR [rbp-0x28],0x0
  4063dd:	jbe    40644a <flatcc_builder_create_struct@@Base+0x16a>
  4063e3:	lea    rax,[rip+0xbf86]        # 412370 <flatcc_builder_padding_base@@Base>
  4063ea:	mov    rcx,QWORD PTR [rbp-0x28]
  4063ee:	add    rcx,QWORD PTR [rbp-0xb8]
  4063f5:	mov    QWORD PTR [rbp-0xb8],rcx
  4063fc:	lea    rcx,[rbp-0xb8]
  406403:	mov    rdx,rcx
  406406:	add    rdx,0x10
  40640d:	movsxd rsi,DWORD PTR [rbp-0xb0]
  406414:	shl    rsi,0x4
  406418:	add    rdx,rsi
  40641b:	mov    QWORD PTR [rdx],rax
  40641e:	mov    rax,QWORD PTR [rbp-0x28]
  406422:	add    rcx,0x10
  406429:	movsxd rdx,DWORD PTR [rbp-0xb0]
  406430:	shl    rdx,0x4
  406434:	add    rcx,rdx
  406437:	mov    QWORD PTR [rcx+0x8],rax
  40643b:	mov    edi,DWORD PTR [rbp-0xb0]
  406441:	add    edi,0x1
  406444:	mov    DWORD PTR [rbp-0xb0],edi
  40644a:	mov    rdi,QWORD PTR [rbp-0x8]
  40644e:	lea    rsi,[rbp-0xb8]
  406455:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  40645a:	add    rsp,0xc0
  406461:	pop    rbp
  406462:	ret    
  406463:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40646d:	nop    DWORD PTR [rax]

0000000000406470 <flatcc_builder_start_buffer@@Base>:
  406470:	push   rbp
  406471:	mov    rbp,rsp
  406474:	sub    rsp,0x30
  406478:	mov    QWORD PTR [rbp-0x10],rdi
  40647c:	mov    QWORD PTR [rbp-0x18],rsi
  406480:	mov    WORD PTR [rbp-0x1a],dx
  406484:	mov    DWORD PTR [rbp-0x20],ecx
  406487:	mov    rdi,QWORD PTR [rbp-0x10]
  40648b:	mov    rax,QWORD PTR [rbp-0x10]
  40648f:	movzx  esi,WORD PTR [rax+0xe8]
  406496:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  40649b:	cmp    eax,0x0
  40649e:	je     4064b0 <flatcc_builder_start_buffer@@Base+0x40>
  4064a4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4064ab:	jmp    4065d1 <flatcc_builder_start_buffer@@Base+0x161>
  4064b0:	mov    rax,QWORD PTR [rbp-0x10]
  4064b4:	mov    WORD PTR [rax+0xe8],0x1
  4064bd:	mov    rax,QWORD PTR [rbp-0x10]
  4064c1:	mov    cx,WORD PTR [rax+0xec]
  4064c8:	mov    rax,QWORD PTR [rbp-0x10]
  4064cc:	mov    rax,QWORD PTR [rax+0x30]
  4064d0:	mov    WORD PTR [rax+0x22],cx
  4064d4:	mov    cx,WORD PTR [rbp-0x1a]
  4064d8:	mov    rax,QWORD PTR [rbp-0x10]
  4064dc:	mov    WORD PTR [rax+0xec],cx
  4064e3:	mov    rax,QWORD PTR [rbp-0x10]
  4064e7:	mov    cx,WORD PTR [rax+0x10c]
  4064ee:	mov    rax,QWORD PTR [rbp-0x10]
  4064f2:	mov    rax,QWORD PTR [rax+0x30]
  4064f6:	mov    WORD PTR [rax+0x20],cx
  4064fa:	mov    edx,DWORD PTR [rbp-0x20]
  4064fd:	mov    rax,QWORD PTR [rbp-0x10]
  406501:	mov    WORD PTR [rax+0x10c],dx
  406508:	mov    rax,QWORD PTR [rbp-0x10]
  40650c:	mov    esi,DWORD PTR [rax+0xf8]
  406512:	mov    rax,QWORD PTR [rbp-0x10]
  406516:	mov    rax,QWORD PTR [rax+0x30]
  40651a:	mov    DWORD PTR [rax+0x14],esi
  40651d:	mov    rax,QWORD PTR [rbp-0x10]
  406521:	mov    esi,DWORD PTR [rax+0x100]
  406527:	mov    rax,QWORD PTR [rbp-0x10]
  40652b:	mov    rax,QWORD PTR [rax+0x30]
  40652f:	mov    DWORD PTR [rax+0x1c],esi
  406532:	mov    rax,QWORD PTR [rbp-0x10]
  406536:	mov    esi,DWORD PTR [rax+0xf0]
  40653c:	mov    rax,QWORD PTR [rbp-0x10]
  406540:	mov    DWORD PTR [rax+0xf8],esi
  406546:	mov    rax,QWORD PTR [rbp-0x10]
  40654a:	mov    esi,DWORD PTR [rax+0xfc]
  406550:	mov    edi,esi
  406552:	add    edi,0x1
  406555:	mov    DWORD PTR [rax+0xfc],edi
  40655b:	mov    rax,QWORD PTR [rbp-0x10]
  40655f:	mov    DWORD PTR [rax+0x100],esi
  406565:	mov    rax,QWORD PTR [rbp-0x10]
  406569:	mov    esi,DWORD PTR [rax+0x110]
  40656f:	mov    rax,QWORD PTR [rbp-0x10]
  406573:	mov    rax,QWORD PTR [rax+0x30]
  406577:	mov    DWORD PTR [rax+0x10],esi
  40657a:	mov    rax,QWORD PTR [rbp-0x10]
  40657e:	add    rax,0x110
  406584:	cmp    QWORD PTR [rbp-0x18],0x0
  406589:	mov    QWORD PTR [rbp-0x28],rax
  40658d:	je     4065a0 <flatcc_builder_start_buffer@@Base+0x130>
  406593:	mov    rax,QWORD PTR [rbp-0x18]
  406597:	mov    QWORD PTR [rbp-0x30],rax
  40659b:	jmp    4065b0 <flatcc_builder_start_buffer@@Base+0x140>
  4065a0:	lea    rax,[rip+0xbdc9]        # 412370 <flatcc_builder_padding_base@@Base>
  4065a7:	mov    QWORD PTR [rbp-0x30],rax
  4065ab:	jmp    4065b0 <flatcc_builder_start_buffer@@Base+0x140>
  4065b0:	mov    rax,QWORD PTR [rbp-0x30]
  4065b4:	mov    ecx,DWORD PTR [rax]
  4065b6:	mov    rax,QWORD PTR [rbp-0x28]
  4065ba:	mov    DWORD PTR [rax],ecx
  4065bc:	mov    rdx,QWORD PTR [rbp-0x10]
  4065c0:	mov    rdx,QWORD PTR [rdx+0x30]
  4065c4:	mov    WORD PTR [rdx+0xe],0x1
  4065ca:	mov    DWORD PTR [rbp-0x4],0x0
  4065d1:	mov    eax,DWORD PTR [rbp-0x4]
  4065d4:	add    rsp,0x30
  4065d8:	pop    rbp
  4065d9:	ret    
  4065da:	nop    WORD PTR [rax+rax*1+0x0]
  4065e0:	push   rbp
  4065e1:	mov    rbp,rsp
  4065e4:	sub    rsp,0x20
  4065e8:	mov    QWORD PTR [rbp-0x10],rdi
  4065ec:	mov    WORD PTR [rbp-0x12],si
  4065f0:	mov    rax,QWORD PTR [rbp-0x10]
  4065f4:	mov    ecx,DWORD PTR [rax+0x104]
  4065fa:	add    ecx,0x1
  4065fd:	mov    DWORD PTR [rax+0x104],ecx
  406603:	mov    rax,QWORD PTR [rbp-0x10]
  406607:	cmp    ecx,DWORD PTR [rax+0x108]
  40660d:	jle    4066fa <flatcc_builder_start_buffer@@Base+0x28a>
  406613:	mov    rax,QWORD PTR [rbp-0x10]
  406617:	cmp    DWORD PTR [rax+0x120],0x0
  40661e:	jle    40664a <flatcc_builder_start_buffer@@Base+0x1da>
  406624:	mov    rax,QWORD PTR [rbp-0x10]
  406628:	mov    ecx,DWORD PTR [rax+0x104]
  40662e:	mov    rax,QWORD PTR [rbp-0x10]
  406632:	cmp    ecx,DWORD PTR [rax+0x120]
  406638:	jle    40664a <flatcc_builder_start_buffer@@Base+0x1da>
  40663e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406645:	jmp    406795 <flatcc_builder_start_buffer@@Base+0x325>
  40664a:	xor    r8d,r8d
  40664d:	mov    rdi,QWORD PTR [rbp-0x10]
  406651:	mov    rax,QWORD PTR [rbp-0x10]
  406655:	mov    ecx,DWORD PTR [rax+0x104]
  40665b:	sub    ecx,0x1
  40665e:	movsxd rax,ecx
  406661:	imul   rdx,rax,0x24
  406668:	mov    esi,0x4
  40666d:	mov    ecx,0x24
  406672:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  406677:	mov    rcx,QWORD PTR [rbp-0x10]
  40667b:	mov    QWORD PTR [rcx+0x30],rax
  40667f:	cmp    rax,0x0
  406683:	jne    406695 <flatcc_builder_start_buffer@@Base+0x225>
  406689:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406690:	jmp    406795 <flatcc_builder_start_buffer@@Base+0x325>
  406695:	mov    rax,QWORD PTR [rbp-0x10]
  406699:	mov    rax,QWORD PTR [rax+0xa0]
  4066a0:	xor    ecx,ecx
  4066a2:	mov    edx,ecx
  4066a4:	mov    esi,0x24
  4066a9:	div    rsi
  4066ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4066b0:	mov    DWORD PTR [rsi+0x108],eax
  4066b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4066ba:	cmp    DWORD PTR [rsi+0x120],0x0
  4066c1:	jle    4066f5 <flatcc_builder_start_buffer@@Base+0x285>
  4066c7:	mov    rax,QWORD PTR [rbp-0x10]
  4066cb:	mov    ecx,DWORD PTR [rax+0x120]
  4066d1:	mov    rax,QWORD PTR [rbp-0x10]
  4066d5:	cmp    ecx,DWORD PTR [rax+0x108]
  4066db:	jge    4066f5 <flatcc_builder_start_buffer@@Base+0x285>
  4066e1:	mov    rax,QWORD PTR [rbp-0x10]
  4066e5:	mov    ecx,DWORD PTR [rax+0x120]
  4066eb:	mov    rax,QWORD PTR [rbp-0x10]
  4066ef:	mov    DWORD PTR [rax+0x108],ecx
  4066f5:	jmp    40670d <flatcc_builder_start_buffer@@Base+0x29d>
  4066fa:	mov    rax,QWORD PTR [rbp-0x10]
  4066fe:	mov    rcx,QWORD PTR [rax+0x30]
  406702:	add    rcx,0x24
  406709:	mov    QWORD PTR [rax+0x30],rcx
  40670d:	mov    rax,QWORD PTR [rbp-0x10]
  406711:	mov    ecx,DWORD PTR [rax+0x20]
  406714:	mov    rax,QWORD PTR [rbp-0x10]
  406718:	mov    rax,QWORD PTR [rax+0x30]
  40671c:	mov    DWORD PTR [rax+0x8],ecx
  40671f:	mov    rax,QWORD PTR [rbp-0x10]
  406723:	mov    dx,WORD PTR [rax+0xea]
  40672a:	mov    rax,QWORD PTR [rbp-0x10]
  40672e:	mov    rax,QWORD PTR [rax+0x30]
  406732:	mov    WORD PTR [rax+0xc],dx
  406736:	mov    dx,WORD PTR [rbp-0x12]
  40673a:	mov    rax,QWORD PTR [rbp-0x10]
  40673e:	mov    WORD PTR [rax+0xea],dx
  406745:	mov    rax,QWORD PTR [rbp-0x10]
  406749:	mov    ecx,DWORD PTR [rax+0x28]
  40674c:	mov    rax,QWORD PTR [rbp-0x10]
  406750:	mov    rax,QWORD PTR [rax+0x30]
  406754:	mov    DWORD PTR [rax],ecx
  406756:	mov    rax,QWORD PTR [rbp-0x10]
  40675a:	mov    rax,QWORD PTR [rax+0x30]
  40675e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  406765:	mov    rax,QWORD PTR [rbp-0x10]
  406769:	mov    ecx,DWORD PTR [rax+0x28]
  40676c:	mov    rax,QWORD PTR [rbp-0x10]
  406770:	add    ecx,DWORD PTR [rax+0x20]
  406773:	add    ecx,0x8
  406776:	sub    ecx,0x1
  406779:	and    ecx,0xfffffff8
  40677c:	mov    rax,QWORD PTR [rbp-0x10]
  406780:	mov    DWORD PTR [rax+0x28],ecx
  406783:	mov    rax,QWORD PTR [rbp-0x10]
  406787:	mov    DWORD PTR [rax+0x20],0x0
  40678e:	mov    DWORD PTR [rbp-0x4],0x0
  406795:	mov    eax,DWORD PTR [rbp-0x4]
  406798:	add    rsp,0x20
  40679c:	pop    rbp
  40679d:	ret    
  40679e:	xchg   ax,ax

00000000004067a0 <flatcc_builder_end_buffer@@Base>:
  4067a0:	push   rbp
  4067a1:	mov    rbp,rsp
  4067a4:	sub    rsp,0x20
  4067a8:	xor    eax,eax
  4067aa:	mov    QWORD PTR [rbp-0x10],rdi
  4067ae:	mov    DWORD PTR [rbp-0x14],esi
  4067b1:	mov    rcx,QWORD PTR [rbp-0x10]
  4067b5:	movzx  edx,WORD PTR [rcx+0x10c]
  4067bc:	and    edx,0x2
  4067bf:	mov    DWORD PTR [rbp-0x1c],edx
  4067c2:	mov    rcx,QWORD PTR [rbp-0x10]
  4067c6:	mov    edx,DWORD PTR [rcx+0x100]
  4067cc:	cmp    edx,0x0
  4067cf:	mov    edx,0x1
  4067d4:	cmove  edx,eax
  4067d7:	or     edx,DWORD PTR [rbp-0x1c]
  4067da:	mov    DWORD PTR [rbp-0x1c],edx
  4067dd:	mov    rcx,QWORD PTR [rbp-0x10]
  4067e1:	mov    rcx,QWORD PTR [rcx+0x30]
  4067e5:	movzx  eax,WORD PTR [rcx+0xe]
  4067e9:	cmp    eax,0x1
  4067ec:	jne    4067f7 <flatcc_builder_end_buffer@@Base+0x57>
  4067f2:	jmp    406816 <flatcc_builder_end_buffer@@Base+0x76>
  4067f7:	lea    rdi,[rip+0xbfcd]        # 4127cb <flatcc_builder_padding_base@@Base+0x45b>
  4067fe:	lea    rsi,[rip+0xbd7d]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406805:	mov    edx,0x346
  40680a:	lea    rcx,[rip+0xbfe6]        # 4127f7 <flatcc_builder_padding_base@@Base+0x487>
  406811:	call   403060 <__assert_fail@plt>
  406816:	mov    rdi,QWORD PTR [rbp-0x10]
  40681a:	mov    rax,QWORD PTR [rbp-0x10]
  40681e:	movzx  esi,WORD PTR [rax+0xec]
  406825:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  40682a:	mov    rdi,QWORD PTR [rbp-0x10]
  40682e:	mov    rax,QWORD PTR [rbp-0x10]
  406832:	add    rax,0x110
  406838:	mov    rcx,QWORD PTR [rbp-0x10]
  40683c:	mov    dx,WORD PTR [rcx+0xec]
  406843:	mov    ecx,DWORD PTR [rbp-0x14]
  406846:	mov    r8,QWORD PTR [rbp-0x10]
  40684a:	mov    r9w,WORD PTR [r8+0xe8]
  406852:	mov    esi,DWORD PTR [rbp-0x1c]
  406855:	mov    DWORD PTR [rbp-0x20],esi
  406858:	mov    rsi,rax
  40685b:	movzx  edx,dx
  40685e:	movzx  r8d,r9w
  406862:	mov    r9d,DWORD PTR [rbp-0x20]
  406866:	call   405e70 <flatcc_builder_create_buffer@@Base>
  40686b:	xor    ecx,ecx
  40686d:	mov    DWORD PTR [rbp-0x18],eax
  406870:	cmp    ecx,eax
  406872:	jne    406884 <flatcc_builder_end_buffer@@Base+0xe4>
  406878:	mov    DWORD PTR [rbp-0x4],0x0
  40687f:	jmp    4068e9 <flatcc_builder_end_buffer@@Base+0x149>
  406884:	mov    rax,QWORD PTR [rbp-0x10]
  406888:	mov    rax,QWORD PTR [rax+0x30]
  40688c:	mov    ecx,DWORD PTR [rax+0x14]
  40688f:	mov    rax,QWORD PTR [rbp-0x10]
  406893:	mov    DWORD PTR [rax+0xf8],ecx
  406899:	mov    rax,QWORD PTR [rbp-0x10]
  40689d:	mov    rax,QWORD PTR [rax+0x30]
  4068a1:	mov    ecx,DWORD PTR [rax+0x1c]
  4068a4:	mov    rax,QWORD PTR [rbp-0x10]
  4068a8:	mov    DWORD PTR [rax+0x100],ecx
  4068ae:	mov    rax,QWORD PTR [rbp-0x10]
  4068b2:	mov    rax,QWORD PTR [rax+0x30]
  4068b6:	mov    ecx,DWORD PTR [rax+0x10]
  4068b9:	mov    rax,QWORD PTR [rbp-0x10]
  4068bd:	mov    DWORD PTR [rax+0x110],ecx
  4068c3:	mov    rax,QWORD PTR [rbp-0x10]
  4068c7:	mov    rax,QWORD PTR [rax+0x30]
  4068cb:	mov    dx,WORD PTR [rax+0x20]
  4068cf:	mov    rax,QWORD PTR [rbp-0x10]
  4068d3:	mov    WORD PTR [rax+0x10c],dx
  4068da:	mov    rdi,QWORD PTR [rbp-0x10]
  4068de:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  4068e3:	mov    ecx,DWORD PTR [rbp-0x18]
  4068e6:	mov    DWORD PTR [rbp-0x4],ecx
  4068e9:	mov    eax,DWORD PTR [rbp-0x4]
  4068ec:	add    rsp,0x20
  4068f0:	pop    rbp
  4068f1:	ret    
  4068f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068fc:	nop    DWORD PTR [rax+0x0]
  406900:	push   rbp
  406901:	mov    rbp,rsp
  406904:	sub    rsp,0x10
  406908:	xor    esi,esi
  40690a:	mov    QWORD PTR [rbp-0x8],rdi
  40690e:	mov    rax,QWORD PTR [rbp-0x8]
  406912:	mov    rdi,QWORD PTR [rax+0x18]
  406916:	mov    rax,QWORD PTR [rbp-0x8]
  40691a:	mov    ecx,DWORD PTR [rax+0x20]
  40691d:	mov    edx,ecx
  40691f:	call   403070 <memset@plt>
  406924:	mov    rax,QWORD PTR [rbp-0x8]
  406928:	mov    rax,QWORD PTR [rax+0x30]
  40692c:	mov    ecx,DWORD PTR [rax+0x8]
  40692f:	mov    rax,QWORD PTR [rbp-0x8]
  406933:	mov    DWORD PTR [rax+0x20],ecx
  406936:	mov    rax,QWORD PTR [rbp-0x8]
  40693a:	mov    rax,QWORD PTR [rax+0x30]
  40693e:	mov    ecx,DWORD PTR [rax]
  406940:	mov    rax,QWORD PTR [rbp-0x8]
  406944:	mov    DWORD PTR [rax+0x28],ecx
  406947:	mov    rdi,QWORD PTR [rbp-0x8]
  40694b:	mov    rax,QWORD PTR [rbp-0x8]
  40694f:	mov    rax,QWORD PTR [rax+0x30]
  406953:	mov    esi,DWORD PTR [rax+0x4]
  406956:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  40695b:	mov    rdi,QWORD PTR [rbp-0x8]
  40695f:	mov    rax,QWORD PTR [rbp-0x8]
  406963:	movzx  esi,WORD PTR [rax+0xea]
  40696a:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  40696f:	mov    rax,QWORD PTR [rbp-0x8]
  406973:	mov    rax,QWORD PTR [rax+0x30]
  406977:	mov    r8w,WORD PTR [rax+0xc]
  40697c:	mov    rax,QWORD PTR [rbp-0x8]
  406980:	mov    WORD PTR [rax+0xea],r8w
  406988:	mov    rax,QWORD PTR [rbp-0x8]
  40698c:	mov    rdx,QWORD PTR [rax+0x30]
  406990:	add    rdx,0xffffffffffffffdc
  406997:	mov    QWORD PTR [rax+0x30],rdx
  40699b:	mov    rax,QWORD PTR [rbp-0x8]
  40699f:	mov    ecx,DWORD PTR [rax+0x104]
  4069a5:	add    ecx,0xffffffff
  4069a8:	mov    DWORD PTR [rax+0x104],ecx
  4069ae:	add    rsp,0x10
  4069b2:	pop    rbp
  4069b3:	ret    
  4069b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069be:	xchg   ax,ax

00000000004069c0 <flatcc_builder_start_struct@@Base>:
  4069c0:	push   rbp
  4069c1:	mov    rbp,rsp
  4069c4:	sub    rsp,0x20
  4069c8:	mov    QWORD PTR [rbp-0x10],rdi
  4069cc:	mov    QWORD PTR [rbp-0x18],rsi
  4069d0:	mov    WORD PTR [rbp-0x1a],dx
  4069d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4069d8:	movzx  esi,WORD PTR [rbp-0x1a]
  4069dc:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  4069e1:	cmp    eax,0x0
  4069e4:	je     4069f7 <flatcc_builder_start_struct@@Base+0x37>
  4069ea:	mov    QWORD PTR [rbp-0x8],0x0
  4069f2:	jmp    406a26 <flatcc_builder_start_struct@@Base+0x66>
  4069f7:	mov    rax,QWORD PTR [rbp-0x10]
  4069fb:	mov    rax,QWORD PTR [rax+0x30]
  4069ff:	mov    WORD PTR [rax+0xe],0x2
  406a05:	mov    rdi,QWORD PTR [rbp-0x10]
  406a09:	mov    esi,0xfffffffc
  406a0e:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  406a13:	mov    rdi,QWORD PTR [rbp-0x10]
  406a17:	mov    rax,QWORD PTR [rbp-0x18]
  406a1b:	mov    esi,eax
  406a1d:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  406a22:	mov    QWORD PTR [rbp-0x8],rax
  406a26:	mov    rax,QWORD PTR [rbp-0x8]
  406a2a:	add    rsp,0x20
  406a2e:	pop    rbp
  406a2f:	ret    
  406a30:	push   rbp
  406a31:	mov    rbp,rsp
  406a34:	mov    QWORD PTR [rbp-0x8],rdi
  406a38:	mov    DWORD PTR [rbp-0xc],esi
  406a3b:	mov    rax,QWORD PTR [rbp-0x8]
  406a3f:	add    rax,0x58
  406a45:	add    rax,0x10
  406a4b:	mov    QWORD PTR [rbp-0x18],rax
  406a4f:	mov    rax,QWORD PTR [rbp-0x8]
  406a53:	mov    rax,QWORD PTR [rax+0x68]
  406a57:	mov    rcx,QWORD PTR [rbp-0x8]
  406a5b:	mov    edx,DWORD PTR [rcx+0x28]
  406a5e:	mov    ecx,edx
  406a60:	add    rax,rcx
  406a63:	mov    rcx,QWORD PTR [rbp-0x8]
  406a67:	mov    QWORD PTR [rcx+0x18],rax
  406a6b:	mov    rax,QWORD PTR [rbp-0x18]
  406a6f:	mov    rax,QWORD PTR [rax+0x8]
  406a73:	mov    rcx,QWORD PTR [rbp-0x8]
  406a77:	sub    eax,DWORD PTR [rcx+0x28]
  406a7a:	mov    rcx,QWORD PTR [rbp-0x8]
  406a7e:	mov    DWORD PTR [rcx+0x24],eax
  406a81:	mov    rcx,QWORD PTR [rbp-0x8]
  406a85:	mov    eax,DWORD PTR [rcx+0x24]
  406a88:	cmp    eax,DWORD PTR [rbp-0xc]
  406a8b:	jbe    406a9b <flatcc_builder_start_struct@@Base+0xdb>
  406a91:	mov    eax,DWORD PTR [rbp-0xc]
  406a94:	mov    rcx,QWORD PTR [rbp-0x8]
  406a98:	mov    DWORD PTR [rcx+0x24],eax
  406a9b:	mov    eax,DWORD PTR [rbp-0xc]
  406a9e:	mov    rcx,QWORD PTR [rbp-0x8]
  406aa2:	mov    rcx,QWORD PTR [rcx+0x30]
  406aa6:	mov    DWORD PTR [rcx+0x4],eax
  406aa9:	pop    rbp
  406aaa:	ret    
  406aab:	nop    DWORD PTR [rax+rax*1+0x0]
  406ab0:	push   rbp
  406ab1:	mov    rbp,rsp
  406ab4:	sub    rsp,0x20
  406ab8:	mov    QWORD PTR [rbp-0x10],rdi
  406abc:	mov    DWORD PTR [rbp-0x14],esi
  406abf:	mov    rax,QWORD PTR [rbp-0x10]
  406ac3:	mov    ecx,DWORD PTR [rax+0x20]
  406ac6:	mov    eax,ecx
  406ac8:	mov    QWORD PTR [rbp-0x20],rax
  406acc:	mov    ecx,DWORD PTR [rbp-0x14]
  406acf:	mov    rax,QWORD PTR [rbp-0x10]
  406ad3:	add    ecx,DWORD PTR [rax+0x20]
  406ad6:	mov    DWORD PTR [rax+0x20],ecx
  406ad9:	mov    rax,QWORD PTR [rbp-0x10]
  406add:	cmp    ecx,DWORD PTR [rax+0x24]
  406ae0:	jb     406b1d <flatcc_builder_start_struct@@Base+0x15d>
  406ae6:	mov    rdi,QWORD PTR [rbp-0x10]
  406aea:	mov    rax,QWORD PTR [rbp-0x10]
  406aee:	mov    ecx,DWORD PTR [rax+0x20]
  406af1:	add    ecx,0x1
  406af4:	mov    ecx,ecx
  406af6:	mov    esi,ecx
  406af8:	mov    edx,0xfffffffc
  406afd:	call   40aa90 <flatcc_builder_get_emit_context@@Base+0x50>
  406b02:	cmp    eax,0x0
  406b05:	je     406b18 <flatcc_builder_start_struct@@Base+0x158>
  406b0b:	mov    QWORD PTR [rbp-0x8],0x0
  406b13:	jmp    406b2d <flatcc_builder_start_struct@@Base+0x16d>
  406b18:	jmp    406b1d <flatcc_builder_start_struct@@Base+0x15d>
  406b1d:	mov    rax,QWORD PTR [rbp-0x10]
  406b21:	mov    rax,QWORD PTR [rax+0x18]
  406b25:	add    rax,QWORD PTR [rbp-0x20]
  406b29:	mov    QWORD PTR [rbp-0x8],rax
  406b2d:	mov    rax,QWORD PTR [rbp-0x8]
  406b31:	add    rsp,0x20
  406b35:	pop    rbp
  406b36:	ret    
  406b37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406b40 <flatcc_builder_struct_edit@@Base>:
  406b40:	push   rbp
  406b41:	mov    rbp,rsp
  406b44:	mov    QWORD PTR [rbp-0x8],rdi
  406b48:	mov    rax,QWORD PTR [rbp-0x8]
  406b4c:	mov    rax,QWORD PTR [rax+0x18]
  406b50:	pop    rbp
  406b51:	ret    
  406b52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b5c:	nop    DWORD PTR [rax+0x0]

0000000000406b60 <flatcc_builder_end_struct@@Base>:
  406b60:	push   rbp
  406b61:	mov    rbp,rsp
  406b64:	sub    rsp,0x20
  406b68:	mov    QWORD PTR [rbp-0x10],rdi
  406b6c:	mov    rax,QWORD PTR [rbp-0x10]
  406b70:	mov    rax,QWORD PTR [rax+0x30]
  406b74:	movzx  ecx,WORD PTR [rax+0xe]
  406b78:	cmp    ecx,0x2
  406b7b:	jne    406b86 <flatcc_builder_end_struct@@Base+0x26>
  406b81:	jmp    406ba5 <flatcc_builder_end_struct@@Base+0x45>
  406b86:	lea    rdi,[rip+0xbcc3]        # 412850 <flatcc_builder_padding_base@@Base+0x4e0>
  406b8d:	lea    rsi,[rip+0xb9ee]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406b94:	mov    edx,0x368
  406b99:	lea    rcx,[rip+0xbcdc]        # 41287c <flatcc_builder_padding_base@@Base+0x50c>
  406ba0:	call   403060 <__assert_fail@plt>
  406ba5:	mov    rdi,QWORD PTR [rbp-0x10]
  406ba9:	mov    rax,QWORD PTR [rbp-0x10]
  406bad:	mov    rsi,QWORD PTR [rax+0x18]
  406bb1:	mov    rax,QWORD PTR [rbp-0x10]
  406bb5:	mov    ecx,DWORD PTR [rax+0x20]
  406bb8:	mov    edx,ecx
  406bba:	mov    rax,QWORD PTR [rbp-0x10]
  406bbe:	movzx  ecx,WORD PTR [rax+0xea]
  406bc5:	call   4062e0 <flatcc_builder_create_struct@@Base>
  406bca:	xor    ecx,ecx
  406bcc:	mov    DWORD PTR [rbp-0x14],eax
  406bcf:	cmp    ecx,eax
  406bd1:	jne    406be3 <flatcc_builder_end_struct@@Base+0x83>
  406bd7:	mov    DWORD PTR [rbp-0x4],0x0
  406bde:	jmp    406bf2 <flatcc_builder_end_struct@@Base+0x92>
  406be3:	mov    rdi,QWORD PTR [rbp-0x10]
  406be7:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  406bec:	mov    eax,DWORD PTR [rbp-0x14]
  406bef:	mov    DWORD PTR [rbp-0x4],eax
  406bf2:	mov    eax,DWORD PTR [rbp-0x4]
  406bf5:	add    rsp,0x20
  406bf9:	pop    rbp
  406bfa:	ret    
  406bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406c00 <flatcc_builder_extend_vector@@Base>:
  406c00:	push   rbp
  406c01:	mov    rbp,rsp
  406c04:	sub    rsp,0x20
  406c08:	mov    QWORD PTR [rbp-0x10],rdi
  406c0c:	mov    QWORD PTR [rbp-0x18],rsi
  406c10:	mov    rdi,QWORD PTR [rbp-0x10]
  406c14:	mov    rax,QWORD PTR [rbp-0x18]
  406c18:	mov    rcx,QWORD PTR [rbp-0x10]
  406c1c:	mov    rcx,QWORD PTR [rcx+0x30]
  406c20:	mov    edx,DWORD PTR [rcx+0x18]
  406c23:	mov    esi,eax
  406c25:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  406c2a:	cmp    eax,0x0
  406c2d:	je     406c40 <flatcc_builder_extend_vector@@Base+0x40>
  406c33:	mov    QWORD PTR [rbp-0x8],0x0
  406c3b:	jmp    406c61 <flatcc_builder_extend_vector@@Base+0x61>
  406c40:	mov    rdi,QWORD PTR [rbp-0x10]
  406c44:	mov    rax,QWORD PTR [rbp-0x10]
  406c48:	mov    rax,QWORD PTR [rax+0x30]
  406c4c:	mov    ecx,DWORD PTR [rax+0x10]
  406c4f:	mov    rax,QWORD PTR [rbp-0x18]
  406c53:	imul   ecx,eax
  406c56:	mov    esi,ecx
  406c58:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  406c5d:	mov    QWORD PTR [rbp-0x8],rax
  406c61:	mov    rax,QWORD PTR [rbp-0x8]
  406c65:	add    rsp,0x20
  406c69:	pop    rbp
  406c6a:	ret    
  406c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	push   rbp
  406c71:	mov    rbp,rsp
  406c74:	sub    rsp,0x20
  406c78:	mov    QWORD PTR [rbp-0x10],rdi
  406c7c:	mov    DWORD PTR [rbp-0x14],esi
  406c7f:	mov    DWORD PTR [rbp-0x18],edx
  406c82:	mov    rax,QWORD PTR [rbp-0x10]
  406c86:	mov    rax,QWORD PTR [rax+0x30]
  406c8a:	mov    ecx,DWORD PTR [rax+0x14]
  406c8d:	mov    DWORD PTR [rbp-0x1c],ecx
  406c90:	mov    ecx,DWORD PTR [rbp-0x1c]
  406c93:	add    ecx,DWORD PTR [rbp-0x14]
  406c96:	mov    DWORD PTR [rbp-0x20],ecx
  406c99:	mov    ecx,DWORD PTR [rbp-0x1c]
  406c9c:	cmp    ecx,DWORD PTR [rbp-0x20]
  406c9f:	ja     406cb1 <flatcc_builder_extend_vector@@Base+0xb1>
  406ca5:	mov    eax,DWORD PTR [rbp-0x20]
  406ca8:	cmp    eax,DWORD PTR [rbp-0x18]
  406cab:	jbe    406cf9 <flatcc_builder_extend_vector@@Base+0xf9>
  406cb1:	mov    eax,DWORD PTR [rbp-0x1c]
  406cb4:	cmp    eax,DWORD PTR [rbp-0x20]
  406cb7:	ja     406cce <flatcc_builder_extend_vector@@Base+0xce>
  406cbd:	mov    eax,DWORD PTR [rbp-0x20]
  406cc0:	cmp    eax,DWORD PTR [rbp-0x18]
  406cc3:	ja     406cce <flatcc_builder_extend_vector@@Base+0xce>
  406cc9:	jmp    406ced <flatcc_builder_extend_vector@@Base+0xed>
  406cce:	lea    rdi,[rip+0xc976]        # 41364b <flatcc_builder_padding_base@@Base+0x12db>
  406cd5:	lea    rsi,[rip+0xb8a6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406cdc:	mov    edx,0x37c
  406ce1:	lea    rcx,[rip+0xc97e]        # 413666 <flatcc_builder_padding_base@@Base+0x12f6>
  406ce8:	call   403060 <__assert_fail@plt>
  406ced:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cf4:	jmp    406d0e <flatcc_builder_extend_vector@@Base+0x10e>
  406cf9:	mov    eax,DWORD PTR [rbp-0x20]
  406cfc:	mov    rcx,QWORD PTR [rbp-0x10]
  406d00:	mov    rcx,QWORD PTR [rcx+0x30]
  406d04:	mov    DWORD PTR [rcx+0x14],eax
  406d07:	mov    DWORD PTR [rbp-0x4],0x0
  406d0e:	mov    eax,DWORD PTR [rbp-0x4]
  406d11:	add    rsp,0x20
  406d15:	pop    rbp
  406d16:	ret    
  406d17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406d20 <flatcc_builder_vector_push@@Base>:
  406d20:	push   rbp
  406d21:	mov    rbp,rsp
  406d24:	sub    rsp,0x20
  406d28:	mov    QWORD PTR [rbp-0x10],rdi
  406d2c:	mov    QWORD PTR [rbp-0x18],rsi
  406d30:	mov    rax,QWORD PTR [rbp-0x10]
  406d34:	mov    rax,QWORD PTR [rax+0x30]
  406d38:	movzx  ecx,WORD PTR [rax+0xe]
  406d3c:	cmp    ecx,0x4
  406d3f:	jne    406d4a <flatcc_builder_vector_push@@Base+0x2a>
  406d45:	jmp    406d69 <flatcc_builder_vector_push@@Base+0x49>
  406d4a:	lea    rdi,[rip+0xbb6e]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  406d51:	lea    rsi,[rip+0xb82a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406d58:	mov    edx,0x38b
  406d5d:	lea    rcx,[rip+0xbb87]        # 4128eb <flatcc_builder_padding_base@@Base+0x57b>
  406d64:	call   403060 <__assert_fail@plt>
  406d69:	mov    rax,QWORD PTR [rbp-0x10]
  406d6d:	mov    rax,QWORD PTR [rax+0x30]
  406d71:	mov    ecx,DWORD PTR [rax+0x14]
  406d74:	mov    rax,QWORD PTR [rbp-0x10]
  406d78:	mov    rax,QWORD PTR [rax+0x30]
  406d7c:	cmp    ecx,DWORD PTR [rax+0x18]
  406d7f:	jbe    406dd2 <flatcc_builder_vector_push@@Base+0xb2>
  406d85:	mov    rax,QWORD PTR [rbp-0x10]
  406d89:	mov    rax,QWORD PTR [rax+0x30]
  406d8d:	mov    ecx,DWORD PTR [rax+0x14]
  406d90:	mov    rax,QWORD PTR [rbp-0x10]
  406d94:	mov    rax,QWORD PTR [rax+0x30]
  406d98:	cmp    ecx,DWORD PTR [rax+0x18]
  406d9b:	ja     406da6 <flatcc_builder_vector_push@@Base+0x86>
  406da1:	jmp    406dc5 <flatcc_builder_vector_push@@Base+0xa5>
  406da6:	lea    rdi,[rip+0xbb81]        # 41292e <flatcc_builder_padding_base@@Base+0x5be>
  406dad:	lea    rsi,[rip+0xb7ce]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406db4:	mov    edx,0x38c
  406db9:	lea    rcx,[rip+0xbb2b]        # 4128eb <flatcc_builder_padding_base@@Base+0x57b>
  406dc0:	call   403060 <__assert_fail@plt>
  406dc5:	mov    QWORD PTR [rbp-0x8],0x0
  406dcd:	jmp    406dff <flatcc_builder_vector_push@@Base+0xdf>
  406dd2:	mov    rax,QWORD PTR [rbp-0x10]
  406dd6:	mov    rax,QWORD PTR [rax+0x30]
  406dda:	mov    ecx,DWORD PTR [rax+0x14]
  406ddd:	add    ecx,0x1
  406de0:	mov    DWORD PTR [rax+0x14],ecx
  406de3:	mov    rdi,QWORD PTR [rbp-0x10]
  406de7:	mov    rsi,QWORD PTR [rbp-0x18]
  406deb:	mov    rax,QWORD PTR [rbp-0x10]
  406def:	mov    rax,QWORD PTR [rax+0x30]
  406df3:	mov    edx,DWORD PTR [rax+0x10]
  406df6:	call   406e10 <flatcc_builder_vector_push@@Base+0xf0>
  406dfb:	mov    QWORD PTR [rbp-0x8],rax
  406dff:	mov    rax,QWORD PTR [rbp-0x8]
  406e03:	add    rsp,0x20
  406e07:	pop    rbp
  406e08:	ret    
  406e09:	nop    DWORD PTR [rax+0x0]
  406e10:	push   rbp
  406e11:	mov    rbp,rsp
  406e14:	sub    rsp,0x30
  406e18:	mov    QWORD PTR [rbp-0x10],rdi
  406e1c:	mov    QWORD PTR [rbp-0x18],rsi
  406e20:	mov    DWORD PTR [rbp-0x1c],edx
  406e23:	mov    rdi,QWORD PTR [rbp-0x10]
  406e27:	mov    esi,DWORD PTR [rbp-0x1c]
  406e2a:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  406e2f:	mov    QWORD PTR [rbp-0x28],rax
  406e33:	cmp    rax,0x0
  406e37:	jne    406e4a <flatcc_builder_vector_push@@Base+0x12a>
  406e3d:	mov    QWORD PTR [rbp-0x8],0x0
  406e45:	jmp    406e64 <flatcc_builder_vector_push@@Base+0x144>
  406e4a:	mov    rdi,QWORD PTR [rbp-0x28]
  406e4e:	mov    rsi,QWORD PTR [rbp-0x18]
  406e52:	mov    eax,DWORD PTR [rbp-0x1c]
  406e55:	mov    edx,eax
  406e57:	call   4030b0 <memcpy@plt>
  406e5c:	mov    rcx,QWORD PTR [rbp-0x28]
  406e60:	mov    QWORD PTR [rbp-0x8],rcx
  406e64:	mov    rax,QWORD PTR [rbp-0x8]
  406e68:	add    rsp,0x30
  406e6c:	pop    rbp
  406e6d:	ret    
  406e6e:	xchg   ax,ax

0000000000406e70 <flatcc_builder_append_vector@@Base>:
  406e70:	push   rbp
  406e71:	mov    rbp,rsp
  406e74:	sub    rsp,0x20
  406e78:	mov    QWORD PTR [rbp-0x10],rdi
  406e7c:	mov    QWORD PTR [rbp-0x18],rsi
  406e80:	mov    QWORD PTR [rbp-0x20],rdx
  406e84:	mov    rax,QWORD PTR [rbp-0x10]
  406e88:	mov    rax,QWORD PTR [rax+0x30]
  406e8c:	movzx  ecx,WORD PTR [rax+0xe]
  406e90:	cmp    ecx,0x4
  406e93:	jne    406e9e <flatcc_builder_append_vector@@Base+0x2e>
  406e99:	jmp    406ebd <flatcc_builder_append_vector@@Base+0x4d>
  406e9e:	lea    rdi,[rip+0xba1a]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  406ea5:	lea    rsi,[rip+0xb6d6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406eac:	mov    edx,0x393
  406eb1:	lea    rcx,[rip+0xbab3]        # 41296b <flatcc_builder_padding_base@@Base+0x5fb>
  406eb8:	call   403060 <__assert_fail@plt>
  406ebd:	mov    rdi,QWORD PTR [rbp-0x10]
  406ec1:	mov    rax,QWORD PTR [rbp-0x20]
  406ec5:	mov    rcx,QWORD PTR [rbp-0x10]
  406ec9:	mov    rcx,QWORD PTR [rcx+0x30]
  406ecd:	mov    edx,DWORD PTR [rcx+0x18]
  406ed0:	mov    esi,eax
  406ed2:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  406ed7:	cmp    eax,0x0
  406eda:	je     406eed <flatcc_builder_append_vector@@Base+0x7d>
  406ee0:	mov    QWORD PTR [rbp-0x8],0x0
  406ee8:	jmp    406f12 <flatcc_builder_append_vector@@Base+0xa2>
  406eed:	mov    rdi,QWORD PTR [rbp-0x10]
  406ef1:	mov    rsi,QWORD PTR [rbp-0x18]
  406ef5:	mov    rax,QWORD PTR [rbp-0x10]
  406ef9:	mov    rax,QWORD PTR [rax+0x30]
  406efd:	mov    ecx,DWORD PTR [rax+0x10]
  406f00:	mov    rax,QWORD PTR [rbp-0x20]
  406f04:	imul   ecx,eax
  406f07:	mov    edx,ecx
  406f09:	call   406e10 <flatcc_builder_vector_push@@Base+0xf0>
  406f0e:	mov    QWORD PTR [rbp-0x8],rax
  406f12:	mov    rax,QWORD PTR [rbp-0x8]
  406f16:	add    rsp,0x20
  406f1a:	pop    rbp
  406f1b:	ret    
  406f1c:	nop    DWORD PTR [rax+0x0]

0000000000406f20 <flatcc_builder_extend_offset_vector@@Base>:
  406f20:	push   rbp
  406f21:	mov    rbp,rsp
  406f24:	sub    rsp,0x20
  406f28:	mov    QWORD PTR [rbp-0x10],rdi
  406f2c:	mov    QWORD PTR [rbp-0x18],rsi
  406f30:	mov    rdi,QWORD PTR [rbp-0x10]
  406f34:	mov    rax,QWORD PTR [rbp-0x18]
  406f38:	mov    esi,eax
  406f3a:	mov    edx,0x3fffffff
  406f3f:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  406f44:	cmp    eax,0x0
  406f47:	je     406f5a <flatcc_builder_extend_offset_vector@@Base+0x3a>
  406f4d:	mov    QWORD PTR [rbp-0x8],0x0
  406f55:	jmp    406f75 <flatcc_builder_extend_offset_vector@@Base+0x55>
  406f5a:	mov    rdi,QWORD PTR [rbp-0x10]
  406f5e:	mov    rax,QWORD PTR [rbp-0x18]
  406f62:	mov    eax,eax
  406f64:	mov    ecx,eax
  406f66:	shl    rcx,0x2
  406f6a:	mov    esi,ecx
  406f6c:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  406f71:	mov    QWORD PTR [rbp-0x8],rax
  406f75:	mov    rax,QWORD PTR [rbp-0x8]
  406f79:	add    rsp,0x20
  406f7d:	pop    rbp
  406f7e:	ret    
  406f7f:	nop

0000000000406f80 <flatcc_builder_offset_vector_push@@Base>:
  406f80:	push   rbp
  406f81:	mov    rbp,rsp
  406f84:	sub    rsp,0x20
  406f88:	mov    QWORD PTR [rbp-0x10],rdi
  406f8c:	mov    DWORD PTR [rbp-0x14],esi
  406f8f:	mov    rax,QWORD PTR [rbp-0x10]
  406f93:	mov    rax,QWORD PTR [rax+0x30]
  406f97:	movzx  ecx,WORD PTR [rax+0xe]
  406f9b:	cmp    ecx,0x5
  406f9e:	jne    406fa9 <flatcc_builder_offset_vector_push@@Base+0x29>
  406fa4:	jmp    406fc8 <flatcc_builder_offset_vector_push@@Base+0x48>
  406fa9:	lea    rdi,[rip+0xba08]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  406fb0:	lea    rsi,[rip+0xb5cb]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406fb7:	mov    edx,0x3a6
  406fbc:	lea    rcx,[rip+0xba28]        # 4129eb <flatcc_builder_padding_base@@Base+0x67b>
  406fc3:	call   403060 <__assert_fail@plt>
  406fc8:	mov    rax,QWORD PTR [rbp-0x10]
  406fcc:	mov    rax,QWORD PTR [rax+0x30]
  406fd0:	mov    ecx,DWORD PTR [rax+0x14]
  406fd3:	mov    eax,ecx
  406fd5:	cmp    rax,0x3fffffff
  406fdb:	jne    406fee <flatcc_builder_offset_vector_push@@Base+0x6e>
  406fe1:	mov    QWORD PTR [rbp-0x8],0x0
  406fe9:	jmp    40703c <flatcc_builder_offset_vector_push@@Base+0xbc>
  406fee:	mov    rax,QWORD PTR [rbp-0x10]
  406ff2:	mov    rax,QWORD PTR [rax+0x30]
  406ff6:	mov    ecx,DWORD PTR [rax+0x14]
  406ff9:	add    ecx,0x1
  406ffc:	mov    DWORD PTR [rax+0x14],ecx
  406fff:	mov    rdi,QWORD PTR [rbp-0x10]
  407003:	mov    esi,0x4
  407008:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  40700d:	xor    ecx,ecx
  40700f:	mov    edx,ecx
  407011:	mov    QWORD PTR [rbp-0x20],rax
  407015:	cmp    rdx,rax
  407018:	jne    40702b <flatcc_builder_offset_vector_push@@Base+0xab>
  40701e:	mov    QWORD PTR [rbp-0x8],0x0
  407026:	jmp    40703c <flatcc_builder_offset_vector_push@@Base+0xbc>
  40702b:	mov    eax,DWORD PTR [rbp-0x14]
  40702e:	mov    rcx,QWORD PTR [rbp-0x20]
  407032:	mov    DWORD PTR [rcx],eax
  407034:	mov    rcx,QWORD PTR [rbp-0x20]
  407038:	mov    QWORD PTR [rbp-0x8],rcx
  40703c:	mov    rax,QWORD PTR [rbp-0x8]
  407040:	add    rsp,0x20
  407044:	pop    rbp
  407045:	ret    
  407046:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407050 <flatcc_builder_append_offset_vector@@Base>:
  407050:	push   rbp
  407051:	mov    rbp,rsp
  407054:	sub    rsp,0x20
  407058:	mov    QWORD PTR [rbp-0x10],rdi
  40705c:	mov    QWORD PTR [rbp-0x18],rsi
  407060:	mov    QWORD PTR [rbp-0x20],rdx
  407064:	mov    rax,QWORD PTR [rbp-0x10]
  407068:	mov    rax,QWORD PTR [rax+0x30]
  40706c:	movzx  ecx,WORD PTR [rax+0xe]
  407070:	cmp    ecx,0x5
  407073:	jne    40707e <flatcc_builder_append_offset_vector@@Base+0x2e>
  407079:	jmp    40709d <flatcc_builder_append_offset_vector@@Base+0x4d>
  40707e:	lea    rdi,[rip+0xb933]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  407085:	lea    rsi,[rip+0xb4f6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40708c:	mov    edx,0x3b4
  407091:	lea    rcx,[rip+0xb9b5]        # 412a4d <flatcc_builder_padding_base@@Base+0x6dd>
  407098:	call   403060 <__assert_fail@plt>
  40709d:	mov    rdi,QWORD PTR [rbp-0x10]
  4070a1:	mov    rax,QWORD PTR [rbp-0x20]
  4070a5:	mov    esi,eax
  4070a7:	mov    edx,0x3fffffff
  4070ac:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  4070b1:	cmp    eax,0x0
  4070b4:	je     4070c7 <flatcc_builder_append_offset_vector@@Base+0x77>
  4070ba:	mov    QWORD PTR [rbp-0x8],0x0
  4070c2:	jmp    4070e7 <flatcc_builder_append_offset_vector@@Base+0x97>
  4070c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4070cb:	mov    rax,QWORD PTR [rbp-0x18]
  4070cf:	mov    rcx,QWORD PTR [rbp-0x20]
  4070d3:	mov    ecx,ecx
  4070d5:	mov    edx,ecx
  4070d7:	shl    rdx,0x2
  4070db:	mov    rsi,rax
  4070de:	call   406e10 <flatcc_builder_vector_push@@Base+0xf0>
  4070e3:	mov    QWORD PTR [rbp-0x8],rax
  4070e7:	mov    rax,QWORD PTR [rbp-0x8]
  4070eb:	add    rsp,0x20
  4070ef:	pop    rbp
  4070f0:	ret    
  4070f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407100 <flatcc_builder_extend_string@@Base>:
  407100:	push   rbp
  407101:	mov    rbp,rsp
  407104:	sub    rsp,0x20
  407108:	mov    QWORD PTR [rbp-0x10],rdi
  40710c:	mov    QWORD PTR [rbp-0x18],rsi
  407110:	mov    rax,QWORD PTR [rbp-0x10]
  407114:	mov    rax,QWORD PTR [rax+0x30]
  407118:	movzx  ecx,WORD PTR [rax+0xe]
  40711c:	cmp    ecx,0x6
  40711f:	jne    40712a <flatcc_builder_extend_string@@Base+0x2a>
  407125:	jmp    407149 <flatcc_builder_extend_string@@Base+0x49>
  40712a:	lea    rdi,[rip+0xb990]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  407131:	lea    rsi,[rip+0xb44a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407138:	mov    edx,0x3bd
  40713d:	lea    rcx,[rip+0xb9a9]        # 412aed <flatcc_builder_padding_base@@Base+0x77d>
  407144:	call   403060 <__assert_fail@plt>
  407149:	mov    rdi,QWORD PTR [rbp-0x10]
  40714d:	mov    rax,QWORD PTR [rbp-0x18]
  407151:	mov    esi,eax
  407153:	mov    edx,0xffffffff
  407158:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  40715d:	cmp    eax,0x0
  407160:	je     407173 <flatcc_builder_extend_string@@Base+0x73>
  407166:	mov    QWORD PTR [rbp-0x8],0x0
  40716e:	jmp    407186 <flatcc_builder_extend_string@@Base+0x86>
  407173:	mov    rdi,QWORD PTR [rbp-0x10]
  407177:	mov    rax,QWORD PTR [rbp-0x18]
  40717b:	mov    esi,eax
  40717d:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  407182:	mov    QWORD PTR [rbp-0x8],rax
  407186:	mov    rax,QWORD PTR [rbp-0x8]
  40718a:	add    rsp,0x20
  40718e:	pop    rbp
  40718f:	ret    

0000000000407190 <flatcc_builder_append_string@@Base>:
  407190:	push   rbp
  407191:	mov    rbp,rsp
  407194:	sub    rsp,0x20
  407198:	mov    QWORD PTR [rbp-0x10],rdi
  40719c:	mov    QWORD PTR [rbp-0x18],rsi
  4071a0:	mov    QWORD PTR [rbp-0x20],rdx
  4071a4:	mov    rax,QWORD PTR [rbp-0x10]
  4071a8:	mov    rax,QWORD PTR [rax+0x30]
  4071ac:	movzx  ecx,WORD PTR [rax+0xe]
  4071b0:	cmp    ecx,0x6
  4071b3:	jne    4071be <flatcc_builder_append_string@@Base+0x2e>
  4071b9:	jmp    4071dd <flatcc_builder_append_string@@Base+0x4d>
  4071be:	lea    rdi,[rip+0xb8fc]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  4071c5:	lea    rsi,[rip+0xb3b6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4071cc:	mov    edx,0x3c6
  4071d1:	lea    rcx,[rip+0xb954]        # 412b2c <flatcc_builder_padding_base@@Base+0x7bc>
  4071d8:	call   403060 <__assert_fail@plt>
  4071dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4071e1:	mov    rax,QWORD PTR [rbp-0x20]
  4071e5:	mov    esi,eax
  4071e7:	mov    edx,0xffffffff
  4071ec:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  4071f1:	cmp    eax,0x0
  4071f4:	je     407207 <flatcc_builder_append_string@@Base+0x77>
  4071fa:	mov    QWORD PTR [rbp-0x8],0x0
  407202:	jmp    40721e <flatcc_builder_append_string@@Base+0x8e>
  407207:	mov    rdi,QWORD PTR [rbp-0x10]
  40720b:	mov    rsi,QWORD PTR [rbp-0x18]
  40720f:	mov    rax,QWORD PTR [rbp-0x20]
  407213:	mov    edx,eax
  407215:	call   406e10 <flatcc_builder_vector_push@@Base+0xf0>
  40721a:	mov    QWORD PTR [rbp-0x8],rax
  40721e:	mov    rax,QWORD PTR [rbp-0x8]
  407222:	add    rsp,0x20
  407226:	pop    rbp
  407227:	ret    
  407228:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407230 <flatcc_builder_append_string_str@@Base>:
  407230:	push   rbp
  407231:	mov    rbp,rsp
  407234:	sub    rsp,0x20
  407238:	mov    QWORD PTR [rbp-0x8],rdi
  40723c:	mov    QWORD PTR [rbp-0x10],rsi
  407240:	mov    rdi,QWORD PTR [rbp-0x8]
  407244:	mov    rsi,QWORD PTR [rbp-0x10]
  407248:	mov    rax,QWORD PTR [rbp-0x10]
  40724c:	mov    QWORD PTR [rbp-0x18],rdi
  407250:	mov    rdi,rax
  407253:	mov    QWORD PTR [rbp-0x20],rsi
  407257:	call   403050 <strlen@plt>
  40725c:	mov    rdi,QWORD PTR [rbp-0x18]
  407260:	mov    rsi,QWORD PTR [rbp-0x20]
  407264:	mov    rdx,rax
  407267:	call   407190 <flatcc_builder_append_string@@Base>
  40726c:	add    rsp,0x20
  407270:	pop    rbp
  407271:	ret    
  407272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40727c:	nop    DWORD PTR [rax+0x0]

0000000000407280 <flatcc_builder_append_string_strn@@Base>:
  407280:	push   rbp
  407281:	mov    rbp,rsp
  407284:	sub    rsp,0x30
  407288:	mov    QWORD PTR [rbp-0x8],rdi
  40728c:	mov    QWORD PTR [rbp-0x10],rsi
  407290:	mov    QWORD PTR [rbp-0x18],rdx
  407294:	mov    rdi,QWORD PTR [rbp-0x8]
  407298:	mov    rsi,QWORD PTR [rbp-0x10]
  40729c:	mov    rax,QWORD PTR [rbp-0x10]
  4072a0:	mov    rcx,QWORD PTR [rbp-0x18]
  4072a4:	mov    QWORD PTR [rbp-0x20],rdi
  4072a8:	mov    rdi,rax
  4072ab:	mov    QWORD PTR [rbp-0x28],rsi
  4072af:	mov    rsi,rcx
  4072b2:	call   4072d0 <flatcc_builder_append_string_strn@@Base+0x50>
  4072b7:	mov    rdi,QWORD PTR [rbp-0x20]
  4072bb:	mov    rsi,QWORD PTR [rbp-0x28]
  4072bf:	mov    rdx,rax
  4072c2:	call   407190 <flatcc_builder_append_string@@Base>
  4072c7:	add    rsp,0x30
  4072cb:	pop    rbp
  4072cc:	ret    
  4072cd:	nop    DWORD PTR [rax]
  4072d0:	push   rbp
  4072d1:	mov    rbp,rsp
  4072d4:	sub    rsp,0x20
  4072d8:	mov    QWORD PTR [rbp-0x8],rdi
  4072dc:	mov    QWORD PTR [rbp-0x10],rsi
  4072e0:	mov    rdi,QWORD PTR [rbp-0x8]
  4072e4:	mov    rdx,QWORD PTR [rbp-0x10]
  4072e8:	xor    esi,esi
  4072ea:	call   403080 <memchr@plt>
  4072ef:	mov    QWORD PTR [rbp-0x18],rax
  4072f3:	cmp    QWORD PTR [rbp-0x18],0x0
  4072f8:	je     407312 <flatcc_builder_append_string_strn@@Base+0x92>
  4072fe:	mov    rax,QWORD PTR [rbp-0x18]
  407302:	mov    rcx,QWORD PTR [rbp-0x8]
  407306:	sub    rax,rcx
  407309:	mov    QWORD PTR [rbp-0x20],rax
  40730d:	jmp    40731a <flatcc_builder_append_string_strn@@Base+0x9a>
  407312:	mov    rax,QWORD PTR [rbp-0x10]
  407316:	mov    QWORD PTR [rbp-0x20],rax
  40731a:	mov    rax,QWORD PTR [rbp-0x20]
  40731e:	add    rsp,0x20
  407322:	pop    rbp
  407323:	ret    
  407324:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40732e:	xchg   ax,ax

0000000000407330 <flatcc_builder_truncate_vector@@Base>:
  407330:	push   rbp
  407331:	mov    rbp,rsp
  407334:	sub    rsp,0x20
  407338:	mov    QWORD PTR [rbp-0x10],rdi
  40733c:	mov    QWORD PTR [rbp-0x18],rsi
  407340:	mov    rax,QWORD PTR [rbp-0x10]
  407344:	mov    rax,QWORD PTR [rax+0x30]
  407348:	movzx  ecx,WORD PTR [rax+0xe]
  40734c:	cmp    ecx,0x4
  40734f:	jne    40735a <flatcc_builder_truncate_vector@@Base+0x2a>
  407355:	jmp    407379 <flatcc_builder_truncate_vector@@Base+0x49>
  40735a:	lea    rdi,[rip+0xb55e]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  407361:	lea    rsi,[rip+0xb21a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407368:	mov    edx,0x3d9
  40736d:	lea    rcx,[rip+0xb805]        # 412b79 <flatcc_builder_padding_base@@Base+0x809>
  407374:	call   403060 <__assert_fail@plt>
  407379:	mov    rax,QWORD PTR [rbp-0x10]
  40737d:	mov    rax,QWORD PTR [rax+0x30]
  407381:	mov    ecx,DWORD PTR [rax+0x14]
  407384:	mov    eax,ecx
  407386:	cmp    rax,QWORD PTR [rbp-0x18]
  40738a:	jae    4073d7 <flatcc_builder_truncate_vector@@Base+0xa7>
  407390:	mov    rax,QWORD PTR [rbp-0x10]
  407394:	mov    rax,QWORD PTR [rax+0x30]
  407398:	mov    ecx,DWORD PTR [rax+0x14]
  40739b:	mov    eax,ecx
  40739d:	cmp    rax,QWORD PTR [rbp-0x18]
  4073a1:	jb     4073ac <flatcc_builder_truncate_vector@@Base+0x7c>
  4073a7:	jmp    4073cb <flatcc_builder_truncate_vector@@Base+0x9b>
  4073ac:	lea    rdi,[rip+0xb805]        # 412bb8 <flatcc_builder_padding_base@@Base+0x848>
  4073b3:	lea    rsi,[rip+0xb1c8]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4073ba:	mov    edx,0x3da
  4073bf:	lea    rcx,[rip+0xb7b3]        # 412b79 <flatcc_builder_padding_base@@Base+0x809>
  4073c6:	call   403060 <__assert_fail@plt>
  4073cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073d2:	jmp    40740f <flatcc_builder_truncate_vector@@Base+0xdf>
  4073d7:	mov    rax,QWORD PTR [rbp-0x18]
  4073db:	mov    rcx,QWORD PTR [rbp-0x10]
  4073df:	mov    rcx,QWORD PTR [rcx+0x30]
  4073e3:	mov    edx,DWORD PTR [rcx+0x14]
  4073e6:	sub    edx,eax
  4073e8:	mov    DWORD PTR [rcx+0x14],edx
  4073eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4073ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4073f3:	mov    rcx,QWORD PTR [rcx+0x30]
  4073f7:	mov    eax,DWORD PTR [rcx+0x10]
  4073fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4073fe:	imul   eax,ecx
  407401:	mov    esi,eax
  407403:	call   407420 <flatcc_builder_truncate_vector@@Base+0xf0>
  407408:	mov    DWORD PTR [rbp-0x4],0x0
  40740f:	mov    eax,DWORD PTR [rbp-0x4]
  407412:	add    rsp,0x20
  407416:	pop    rbp
  407417:	ret    
  407418:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	push   rbp
  407421:	mov    rbp,rsp
  407424:	sub    rsp,0x20
  407428:	xor    eax,eax
  40742a:	mov    QWORD PTR [rbp-0x8],rdi
  40742e:	mov    DWORD PTR [rbp-0xc],esi
  407431:	mov    ecx,DWORD PTR [rbp-0xc]
  407434:	mov    rdx,QWORD PTR [rbp-0x8]
  407438:	mov    esi,DWORD PTR [rdx+0x20]
  40743b:	sub    esi,ecx
  40743d:	mov    DWORD PTR [rdx+0x20],esi
  407440:	mov    rdx,QWORD PTR [rbp-0x8]
  407444:	mov    rdx,QWORD PTR [rdx+0x18]
  407448:	mov    rdi,QWORD PTR [rbp-0x8]
  40744c:	mov    ecx,DWORD PTR [rdi+0x20]
  40744f:	mov    edi,ecx
  407451:	add    rdx,rdi
  407454:	mov    ecx,DWORD PTR [rbp-0xc]
  407457:	mov    edi,ecx
  407459:	mov    QWORD PTR [rbp-0x18],rdi
  40745d:	mov    rdi,rdx
  407460:	mov    esi,eax
  407462:	mov    rdx,QWORD PTR [rbp-0x18]
  407466:	call   403070 <memset@plt>
  40746b:	add    rsp,0x20
  40746f:	pop    rbp
  407470:	ret    
  407471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40747b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407480 <flatcc_builder_truncate_offset_vector@@Base>:
  407480:	push   rbp
  407481:	mov    rbp,rsp
  407484:	sub    rsp,0x20
  407488:	mov    QWORD PTR [rbp-0x10],rdi
  40748c:	mov    QWORD PTR [rbp-0x18],rsi
  407490:	mov    rax,QWORD PTR [rbp-0x10]
  407494:	mov    rax,QWORD PTR [rax+0x30]
  407498:	movzx  ecx,WORD PTR [rax+0xe]
  40749c:	cmp    ecx,0x5
  40749f:	jne    4074aa <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  4074a5:	jmp    4074c9 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  4074aa:	lea    rdi,[rip+0xb507]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  4074b1:	lea    rsi,[rip+0xb0ca]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4074b8:	mov    edx,0x3e2
  4074bd:	lea    rcx,[rip+0xb718]        # 412bdc <flatcc_builder_padding_base@@Base+0x86c>
  4074c4:	call   403060 <__assert_fail@plt>
  4074c9:	mov    rax,QWORD PTR [rbp-0x10]
  4074cd:	mov    rax,QWORD PTR [rax+0x30]
  4074d1:	mov    ecx,DWORD PTR [rax+0x14]
  4074d4:	mov    rax,QWORD PTR [rbp-0x18]
  4074d8:	cmp    ecx,eax
  4074da:	jae    407527 <flatcc_builder_truncate_offset_vector@@Base+0xa7>
  4074e0:	mov    rax,QWORD PTR [rbp-0x10]
  4074e4:	mov    rax,QWORD PTR [rax+0x30]
  4074e8:	mov    ecx,DWORD PTR [rax+0x14]
  4074eb:	mov    rax,QWORD PTR [rbp-0x18]
  4074ef:	cmp    ecx,eax
  4074f1:	jb     4074fc <flatcc_builder_truncate_offset_vector@@Base+0x7c>
  4074f7:	jmp    40751b <flatcc_builder_truncate_offset_vector@@Base+0x9b>
  4074fc:	lea    rdi,[rip+0xb71f]        # 412c22 <flatcc_builder_padding_base@@Base+0x8b2>
  407503:	lea    rsi,[rip+0xb078]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40750a:	mov    edx,0x3e3
  40750f:	lea    rcx,[rip+0xb6c6]        # 412bdc <flatcc_builder_padding_base@@Base+0x86c>
  407516:	call   403060 <__assert_fail@plt>
  40751b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407522:	jmp    40755f <flatcc_builder_truncate_offset_vector@@Base+0xdf>
  407527:	mov    rax,QWORD PTR [rbp-0x18]
  40752b:	mov    rcx,QWORD PTR [rbp-0x10]
  40752f:	mov    rcx,QWORD PTR [rcx+0x30]
  407533:	mov    edx,DWORD PTR [rcx+0x14]
  407536:	sub    edx,eax
  407538:	mov    DWORD PTR [rcx+0x14],edx
  40753b:	mov    rdi,QWORD PTR [rbp-0x10]
  40753f:	mov    rcx,QWORD PTR [rbp-0x10]
  407543:	mov    rcx,QWORD PTR [rcx+0x30]
  407547:	mov    eax,DWORD PTR [rcx+0x10]
  40754a:	mov    rcx,QWORD PTR [rbp-0x18]
  40754e:	imul   eax,ecx
  407551:	mov    esi,eax
  407553:	call   407420 <flatcc_builder_truncate_vector@@Base+0xf0>
  407558:	mov    DWORD PTR [rbp-0x4],0x0
  40755f:	mov    eax,DWORD PTR [rbp-0x4]
  407562:	add    rsp,0x20
  407566:	pop    rbp
  407567:	ret    
  407568:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407570 <flatcc_builder_truncate_string@@Base>:
  407570:	push   rbp
  407571:	mov    rbp,rsp
  407574:	sub    rsp,0x20
  407578:	mov    QWORD PTR [rbp-0x10],rdi
  40757c:	mov    QWORD PTR [rbp-0x18],rsi
  407580:	mov    rax,QWORD PTR [rbp-0x10]
  407584:	mov    rax,QWORD PTR [rax+0x30]
  407588:	movzx  ecx,WORD PTR [rax+0xe]
  40758c:	cmp    ecx,0x6
  40758f:	jne    40759a <flatcc_builder_truncate_string@@Base+0x2a>
  407595:	jmp    4075b9 <flatcc_builder_truncate_string@@Base+0x49>
  40759a:	lea    rdi,[rip+0xb520]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  4075a1:	lea    rsi,[rip+0xafda]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4075a8:	mov    edx,0x3eb
  4075ad:	lea    rcx,[rip+0xb6a9]        # 412c5d <flatcc_builder_padding_base@@Base+0x8ed>
  4075b4:	call   403060 <__assert_fail@plt>
  4075b9:	mov    rax,QWORD PTR [rbp-0x10]
  4075bd:	mov    rax,QWORD PTR [rax+0x30]
  4075c1:	mov    ecx,DWORD PTR [rax+0x14]
  4075c4:	mov    eax,ecx
  4075c6:	cmp    rax,QWORD PTR [rbp-0x18]
  4075ca:	jae    407617 <flatcc_builder_truncate_string@@Base+0xa7>
  4075d0:	mov    rax,QWORD PTR [rbp-0x10]
  4075d4:	mov    rax,QWORD PTR [rax+0x30]
  4075d8:	mov    ecx,DWORD PTR [rax+0x14]
  4075db:	mov    eax,ecx
  4075dd:	cmp    rax,QWORD PTR [rbp-0x18]
  4075e1:	jb     4075ec <flatcc_builder_truncate_string@@Base+0x7c>
  4075e7:	jmp    40760b <flatcc_builder_truncate_string@@Base+0x9b>
  4075ec:	lea    rdi,[rip+0xb6a9]        # 412c9c <flatcc_builder_padding_base@@Base+0x92c>
  4075f3:	lea    rsi,[rip+0xaf88]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4075fa:	mov    edx,0x3ec
  4075ff:	lea    rcx,[rip+0xb657]        # 412c5d <flatcc_builder_padding_base@@Base+0x8ed>
  407606:	call   403060 <__assert_fail@plt>
  40760b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407612:	jmp    407641 <flatcc_builder_truncate_string@@Base+0xd1>
  407617:	mov    rax,QWORD PTR [rbp-0x18]
  40761b:	mov    rcx,QWORD PTR [rbp-0x10]
  40761f:	mov    rcx,QWORD PTR [rcx+0x30]
  407623:	mov    edx,DWORD PTR [rcx+0x14]
  407626:	sub    edx,eax
  407628:	mov    DWORD PTR [rcx+0x14],edx
  40762b:	mov    rdi,QWORD PTR [rbp-0x10]
  40762f:	mov    rcx,QWORD PTR [rbp-0x18]
  407633:	mov    esi,ecx
  407635:	call   407420 <flatcc_builder_truncate_vector@@Base+0xf0>
  40763a:	mov    DWORD PTR [rbp-0x4],0x0
  407641:	mov    eax,DWORD PTR [rbp-0x4]
  407644:	add    rsp,0x20
  407648:	pop    rbp
  407649:	ret    
  40764a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407650 <flatcc_builder_start_vector@@Base>:
  407650:	push   rbp
  407651:	mov    rbp,rsp
  407654:	sub    rsp,0x30
  407658:	mov    QWORD PTR [rbp-0x10],rdi
  40765c:	mov    QWORD PTR [rbp-0x18],rsi
  407660:	mov    WORD PTR [rbp-0x1a],dx
  407664:	mov    QWORD PTR [rbp-0x28],rcx
  407668:	lea    rdi,[rbp-0x1a]
  40766c:	mov    esi,0x4
  407671:	call   407700 <flatcc_builder_start_vector@@Base+0xb0>
  407676:	mov    rdi,QWORD PTR [rbp-0x10]
  40767a:	movzx  esi,WORD PTR [rbp-0x1a]
  40767e:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  407683:	cmp    eax,0x0
  407686:	je     407698 <flatcc_builder_start_vector@@Base+0x48>
  40768c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407693:	jmp    4076e8 <flatcc_builder_start_vector@@Base+0x98>
  407698:	mov    rax,QWORD PTR [rbp-0x18]
  40769c:	mov    rcx,QWORD PTR [rbp-0x10]
  4076a0:	mov    rcx,QWORD PTR [rcx+0x30]
  4076a4:	mov    DWORD PTR [rcx+0x10],eax
  4076a7:	mov    rcx,QWORD PTR [rbp-0x10]
  4076ab:	mov    rcx,QWORD PTR [rcx+0x30]
  4076af:	mov    DWORD PTR [rcx+0x14],0x0
  4076b6:	mov    rcx,QWORD PTR [rbp-0x28]
  4076ba:	mov    rdx,QWORD PTR [rbp-0x10]
  4076be:	mov    rdx,QWORD PTR [rdx+0x30]
  4076c2:	mov    DWORD PTR [rdx+0x18],ecx
  4076c5:	mov    rdx,QWORD PTR [rbp-0x10]
  4076c9:	mov    rdx,QWORD PTR [rdx+0x30]
  4076cd:	mov    WORD PTR [rdx+0xe],0x4
  4076d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4076d7:	mov    esi,0xfffffffc
  4076dc:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  4076e1:	mov    DWORD PTR [rbp-0x4],0x0
  4076e8:	mov    eax,DWORD PTR [rbp-0x4]
  4076eb:	add    rsp,0x30
  4076ef:	pop    rbp
  4076f0:	ret    
  4076f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407700:	push   rbp
  407701:	mov    rbp,rsp
  407704:	mov    QWORD PTR [rbp-0x8],rdi
  407708:	mov    WORD PTR [rbp-0xa],si
  40770c:	mov    rax,QWORD PTR [rbp-0x8]
  407710:	movzx  ecx,WORD PTR [rax]
  407713:	movzx  edx,WORD PTR [rbp-0xa]
  407717:	cmp    ecx,edx
  407719:	jge    40772a <flatcc_builder_start_vector@@Base+0xda>
  40771f:	mov    ax,WORD PTR [rbp-0xa]
  407723:	mov    rcx,QWORD PTR [rbp-0x8]
  407727:	mov    WORD PTR [rcx],ax
  40772a:	pop    rbp
  40772b:	ret    
  40772c:	nop    DWORD PTR [rax+0x0]

0000000000407730 <flatcc_builder_start_offset_vector@@Base>:
  407730:	push   rbp
  407731:	mov    rbp,rsp
  407734:	sub    rsp,0x10
  407738:	mov    QWORD PTR [rbp-0x10],rdi
  40773c:	mov    rdi,QWORD PTR [rbp-0x10]
  407740:	mov    esi,0x4
  407745:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  40774a:	cmp    eax,0x0
  40774d:	je     40775f <flatcc_builder_start_offset_vector@@Base+0x2f>
  407753:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40775a:	jmp    4077a0 <flatcc_builder_start_offset_vector@@Base+0x70>
  40775f:	mov    rax,QWORD PTR [rbp-0x10]
  407763:	mov    rax,QWORD PTR [rax+0x30]
  407767:	mov    DWORD PTR [rax+0x10],0x4
  40776e:	mov    rax,QWORD PTR [rbp-0x10]
  407772:	mov    rax,QWORD PTR [rax+0x30]
  407776:	mov    DWORD PTR [rax+0x14],0x0
  40777d:	mov    rax,QWORD PTR [rbp-0x10]
  407781:	mov    rax,QWORD PTR [rax+0x30]
  407785:	mov    WORD PTR [rax+0xe],0x5
  40778b:	mov    rdi,QWORD PTR [rbp-0x10]
  40778f:	mov    esi,0xfffffffc
  407794:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  407799:	mov    DWORD PTR [rbp-0x4],0x0
  4077a0:	mov    eax,DWORD PTR [rbp-0x4]
  4077a3:	add    rsp,0x10
  4077a7:	pop    rbp
  4077a8:	ret    
  4077a9:	nop    DWORD PTR [rax+0x0]

00000000004077b0 <flatcc_builder_create_offset_vector@@Base>:
  4077b0:	push   rbp
  4077b1:	mov    rbp,rsp
  4077b4:	sub    rsp,0x30
  4077b8:	mov    QWORD PTR [rbp-0x10],rdi
  4077bc:	mov    QWORD PTR [rbp-0x18],rsi
  4077c0:	mov    QWORD PTR [rbp-0x20],rdx
  4077c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4077c8:	call   407730 <flatcc_builder_start_offset_vector@@Base>
  4077cd:	cmp    eax,0x0
  4077d0:	je     4077e2 <flatcc_builder_create_offset_vector@@Base+0x32>
  4077d6:	mov    DWORD PTR [rbp-0x4],0x0
  4077dd:	jmp    407830 <flatcc_builder_create_offset_vector@@Base+0x80>
  4077e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4077e6:	mov    rsi,QWORD PTR [rbp-0x20]
  4077ea:	call   406f20 <flatcc_builder_extend_offset_vector@@Base>
  4077ef:	mov    QWORD PTR [rbp-0x28],rax
  4077f3:	cmp    rax,0x0
  4077f7:	jne    407809 <flatcc_builder_create_offset_vector@@Base+0x59>
  4077fd:	mov    DWORD PTR [rbp-0x4],0x0
  407804:	jmp    407830 <flatcc_builder_create_offset_vector@@Base+0x80>
  407809:	mov    rax,QWORD PTR [rbp-0x28]
  40780d:	mov    rcx,QWORD PTR [rbp-0x18]
  407811:	mov    rdx,QWORD PTR [rbp-0x20]
  407815:	shl    rdx,0x2
  407819:	mov    rdi,rax
  40781c:	mov    rsi,rcx
  40781f:	call   4030b0 <memcpy@plt>
  407824:	mov    rdi,QWORD PTR [rbp-0x10]
  407828:	call   407840 <flatcc_builder_end_offset_vector@@Base>
  40782d:	mov    DWORD PTR [rbp-0x4],eax
  407830:	mov    eax,DWORD PTR [rbp-0x4]
  407833:	add    rsp,0x30
  407837:	pop    rbp
  407838:	ret    
  407839:	nop    DWORD PTR [rax+0x0]

0000000000407840 <flatcc_builder_end_offset_vector@@Base>:
  407840:	push   rbp
  407841:	mov    rbp,rsp
  407844:	sub    rsp,0x20
  407848:	mov    QWORD PTR [rbp-0x10],rdi
  40784c:	mov    rax,QWORD PTR [rbp-0x10]
  407850:	mov    rax,QWORD PTR [rax+0x30]
  407854:	movzx  ecx,WORD PTR [rax+0xe]
  407858:	cmp    ecx,0x5
  40785b:	jne    407866 <flatcc_builder_end_offset_vector@@Base+0x26>
  407861:	jmp    407885 <flatcc_builder_end_offset_vector@@Base+0x45>
  407866:	lea    rdi,[rip+0xb14b]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  40786d:	lea    rsi,[rip+0xad0e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407874:	mov    edx,0x5c8
  407879:	lea    rcx,[rip+0xb767]        # 412fe7 <flatcc_builder_padding_base@@Base+0xc77>
  407880:	call   403060 <__assert_fail@plt>
  407885:	mov    rdi,QWORD PTR [rbp-0x10]
  407889:	mov    rax,QWORD PTR [rbp-0x10]
  40788d:	mov    rax,QWORD PTR [rax+0x18]
  407891:	mov    rcx,QWORD PTR [rbp-0x10]
  407895:	mov    rcx,QWORD PTR [rcx+0x30]
  407899:	mov    edx,DWORD PTR [rcx+0x14]
  40789c:	mov    rsi,rax
  40789f:	call   408c90 <flatcc_builder_create_offset_vector_direct@@Base>
  4078a4:	xor    r8d,r8d
  4078a7:	mov    DWORD PTR [rbp-0x14],eax
  4078aa:	cmp    r8d,eax
  4078ad:	jne    4078bf <flatcc_builder_end_offset_vector@@Base+0x7f>
  4078b3:	mov    DWORD PTR [rbp-0x4],0x0
  4078ba:	jmp    4078ce <flatcc_builder_end_offset_vector@@Base+0x8e>
  4078bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4078c3:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  4078c8:	mov    eax,DWORD PTR [rbp-0x14]
  4078cb:	mov    DWORD PTR [rbp-0x4],eax
  4078ce:	mov    eax,DWORD PTR [rbp-0x4]
  4078d1:	add    rsp,0x20
  4078d5:	pop    rbp
  4078d6:	ret    
  4078d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004078e0 <flatcc_builder_start_string@@Base>:
  4078e0:	push   rbp
  4078e1:	mov    rbp,rsp
  4078e4:	sub    rsp,0x10
  4078e8:	mov    QWORD PTR [rbp-0x10],rdi
  4078ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4078f0:	mov    esi,0x1
  4078f5:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  4078fa:	cmp    eax,0x0
  4078fd:	je     40790f <flatcc_builder_start_string@@Base+0x2f>
  407903:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40790a:	jmp    407950 <flatcc_builder_start_string@@Base+0x70>
  40790f:	mov    rax,QWORD PTR [rbp-0x10]
  407913:	mov    rax,QWORD PTR [rax+0x30]
  407917:	mov    DWORD PTR [rax+0x10],0x1
  40791e:	mov    rax,QWORD PTR [rbp-0x10]
  407922:	mov    rax,QWORD PTR [rax+0x30]
  407926:	mov    DWORD PTR [rax+0x14],0x0
  40792d:	mov    rax,QWORD PTR [rbp-0x10]
  407931:	mov    rax,QWORD PTR [rax+0x30]
  407935:	mov    WORD PTR [rax+0xe],0x6
  40793b:	mov    rdi,QWORD PTR [rbp-0x10]
  40793f:	mov    esi,0xfffffffc
  407944:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  407949:	mov    DWORD PTR [rbp-0x4],0x0
  407950:	mov    eax,DWORD PTR [rbp-0x4]
  407953:	add    rsp,0x10
  407957:	pop    rbp
  407958:	ret    
  407959:	nop    DWORD PTR [rax+0x0]

0000000000407960 <flatcc_builder_reserve_table@@Base>:
  407960:	push   rbp
  407961:	mov    rbp,rsp
  407964:	sub    rsp,0x10
  407968:	mov    QWORD PTR [rbp-0x8],rdi
  40796c:	mov    DWORD PTR [rbp-0xc],esi
  40796f:	cmp    DWORD PTR [rbp-0xc],0x0
  407973:	jl     40797e <flatcc_builder_reserve_table@@Base+0x1e>
  407979:	jmp    40799d <flatcc_builder_reserve_table@@Base+0x3d>
  40797e:	lea    rdi,[rip+0xb37a]        # 412cff <flatcc_builder_padding_base@@Base+0x98f>
  407985:	lea    rsi,[rip+0xabf6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40798c:	mov    edx,0x429
  407991:	lea    rcx,[rip+0xb326]        # 412cbe <flatcc_builder_padding_base@@Base+0x94e>
  407998:	call   403060 <__assert_fail@plt>
  40799d:	mov    rdi,QWORD PTR [rbp-0x8]
  4079a1:	mov    esi,DWORD PTR [rbp-0xc]
  4079a4:	call   4079b0 <flatcc_builder_reserve_table@@Base+0x50>
  4079a9:	add    rsp,0x10
  4079ad:	pop    rbp
  4079ae:	ret    
  4079af:	nop
  4079b0:	push   rbp
  4079b1:	mov    rbp,rsp
  4079b4:	sub    rsp,0x20
  4079b8:	xor    eax,eax
  4079ba:	mov    QWORD PTR [rbp-0x10],rdi
  4079be:	mov    DWORD PTR [rbp-0x14],esi
  4079c1:	mov    rcx,QWORD PTR [rbp-0x10]
  4079c5:	mov    rcx,QWORD PTR [rcx+0x30]
  4079c9:	mov    edx,DWORD PTR [rcx+0x10]
  4079cc:	mov    ecx,edx
  4079ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4079d2:	mov    rdi,QWORD PTR [rdi+0x30]
  4079d6:	movzx  edx,WORD PTR [rdi+0x1c]
  4079da:	mov    edi,edx
  4079dc:	shl    rdi,0x1
  4079e0:	add    rcx,rdi
  4079e3:	mov    DWORD PTR [rbp-0x18],ecx
  4079e6:	mov    ecx,DWORD PTR [rbp-0x14]
  4079e9:	add    ecx,0x2
  4079ec:	movsxd rdi,ecx
  4079ef:	shl    rdi,0x1
  4079f3:	mov    DWORD PTR [rbp-0x1c],edi
  4079f6:	mov    rdi,QWORD PTR [rbp-0x10]
  4079fa:	mov    ecx,DWORD PTR [rbp-0x18]
  4079fd:	mov    edx,ecx
  4079ff:	mov    ecx,DWORD PTR [rbp-0x1c]
  407a02:	mov    esi,eax
  407a04:	mov    r8d,0x1
  407a0a:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  407a0f:	mov    rcx,QWORD PTR [rbp-0x10]
  407a13:	mov    QWORD PTR [rcx+0x8],rax
  407a17:	cmp    rax,0x0
  407a1b:	jne    407a2d <flatcc_builder_reserve_table@@Base+0xcd>
  407a21:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a28:	jmp    407a9e <flatcc_builder_reserve_table@@Base+0x13e>
  407a2d:	xor    r8d,r8d
  407a30:	mov    rax,QWORD PTR [rbp-0x10]
  407a34:	mov    rcx,QWORD PTR [rax+0x8]
  407a38:	add    rcx,0x4
  407a3f:	mov    QWORD PTR [rax+0x8],rcx
  407a43:	mov    rax,QWORD PTR [rbp-0x10]
  407a47:	mov    rax,QWORD PTR [rax+0x30]
  407a4b:	mov    edx,DWORD PTR [rax+0x14]
  407a4e:	mov    DWORD PTR [rbp-0x18],edx
  407a51:	movsxd rax,DWORD PTR [rbp-0x14]
  407a55:	shl    rax,0x1
  407a59:	add    rax,0x1
  407a5f:	mov    DWORD PTR [rbp-0x1c],eax
  407a62:	mov    rdi,QWORD PTR [rbp-0x10]
  407a66:	mov    eax,DWORD PTR [rbp-0x18]
  407a69:	mov    edx,eax
  407a6b:	mov    eax,DWORD PTR [rbp-0x1c]
  407a6e:	mov    ecx,eax
  407a70:	mov    esi,0x3
  407a75:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  407a7a:	mov    rcx,QWORD PTR [rbp-0x10]
  407a7e:	mov    QWORD PTR [rcx],rax
  407a81:	cmp    rax,0x0
  407a85:	jne    407a97 <flatcc_builder_reserve_table@@Base+0x137>
  407a8b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a92:	jmp    407a9e <flatcc_builder_reserve_table@@Base+0x13e>
  407a97:	mov    DWORD PTR [rbp-0x4],0x0
  407a9e:	mov    eax,DWORD PTR [rbp-0x4]
  407aa1:	add    rsp,0x20
  407aa5:	pop    rbp
  407aa6:	ret    
  407aa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407ab0 <flatcc_builder_start_table@@Base>:
  407ab0:	push   rbp
  407ab1:	mov    rbp,rsp
  407ab4:	sub    rsp,0x20
  407ab8:	mov    QWORD PTR [rbp-0x10],rdi
  407abc:	mov    DWORD PTR [rbp-0x14],esi
  407abf:	mov    rdi,QWORD PTR [rbp-0x10]
  407ac3:	mov    esi,0x4
  407ac8:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  407acd:	cmp    eax,0x0
  407ad0:	je     407ae2 <flatcc_builder_start_table@@Base+0x32>
  407ad6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407add:	jmp    407baa <flatcc_builder_start_table@@Base+0xfa>
  407ae2:	mov    rax,QWORD PTR [rbp-0x10]
  407ae6:	mov    rax,QWORD PTR [rax+0x8]
  407aea:	mov    rcx,QWORD PTR [rbp-0x10]
  407aee:	mov    rcx,QWORD PTR [rcx+0x58]
  407af2:	sub    rax,rcx
  407af5:	mov    rcx,QWORD PTR [rbp-0x10]
  407af9:	mov    rcx,QWORD PTR [rcx+0x30]
  407afd:	mov    DWORD PTR [rcx+0x10],eax
  407b00:	mov    rcx,QWORD PTR [rbp-0x10]
  407b04:	mov    rcx,QWORD PTR [rcx]
  407b07:	mov    rdx,QWORD PTR [rbp-0x10]
  407b0b:	mov    rdx,QWORD PTR [rdx+0x88]
  407b12:	sub    rcx,rdx
  407b15:	mov    rdx,QWORD PTR [rbp-0x10]
  407b19:	mov    rdx,QWORD PTR [rdx+0x30]
  407b1d:	mov    DWORD PTR [rdx+0x14],ecx
  407b20:	mov    rdx,QWORD PTR [rbp-0x10]
  407b24:	mov    eax,DWORD PTR [rdx+0x14]
  407b27:	mov    rdx,QWORD PTR [rbp-0x10]
  407b2b:	mov    rdx,QWORD PTR [rdx+0x30]
  407b2f:	mov    DWORD PTR [rdx+0x18],eax
  407b32:	mov    rdx,QWORD PTR [rbp-0x10]
  407b36:	mov    si,WORD PTR [rdx+0x10]
  407b3a:	mov    rdx,QWORD PTR [rbp-0x10]
  407b3e:	mov    rdx,QWORD PTR [rdx+0x30]
  407b42:	mov    WORD PTR [rdx+0x1c],si
  407b46:	mov    rdx,QWORD PTR [rbp-0x10]
  407b4a:	mov    DWORD PTR [rdx+0x14],0x0
  407b51:	mov    rdx,QWORD PTR [rbp-0x10]
  407b55:	mov    DWORD PTR [rdx+0x14],0x2f693b52
  407b5c:	mov    rdx,QWORD PTR [rbp-0x10]
  407b60:	mov    WORD PTR [rdx+0x10],0x0
  407b66:	mov    rdx,QWORD PTR [rbp-0x10]
  407b6a:	mov    rdx,QWORD PTR [rdx+0x30]
  407b6e:	mov    WORD PTR [rdx+0xe],0x3
  407b74:	mov    rdi,QWORD PTR [rbp-0x10]
  407b78:	mov    esi,DWORD PTR [rbp-0x14]
  407b7b:	call   4079b0 <flatcc_builder_reserve_table@@Base+0x50>
  407b80:	cmp    eax,0x0
  407b83:	je     407b95 <flatcc_builder_start_table@@Base+0xe5>
  407b89:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b90:	jmp    407baa <flatcc_builder_start_table@@Base+0xfa>
  407b95:	mov    rdi,QWORD PTR [rbp-0x10]
  407b99:	mov    esi,0xfffc
  407b9e:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  407ba3:	mov    DWORD PTR [rbp-0x4],0x0
  407baa:	mov    eax,DWORD PTR [rbp-0x4]
  407bad:	add    rsp,0x20
  407bb1:	pop    rbp
  407bb2:	ret    
  407bb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bbd:	nop    DWORD PTR [rax]

0000000000407bc0 <flatcc_builder_create_vtable@@Base>:
  407bc0:	push   rbp
  407bc1:	mov    rbp,rsp
  407bc4:	sub    rsp,0xc0
  407bcb:	mov    QWORD PTR [rbp-0x10],rdi
  407bcf:	mov    QWORD PTR [rbp-0x18],rsi
  407bd3:	mov    WORD PTR [rbp-0x1a],dx
  407bd7:	mov    QWORD PTR [rbp-0xb0],0x0
  407be2:	mov    DWORD PTR [rbp-0xa8],0x0
  407bec:	movzx  eax,WORD PTR [rbp-0x1a]
  407bf0:	cmp    eax,0x0
  407bf3:	jle    407c61 <flatcc_builder_create_vtable@@Base+0xa1>
  407bf9:	movzx  eax,WORD PTR [rbp-0x1a]
  407bfd:	mov    ecx,eax
  407bff:	add    rcx,QWORD PTR [rbp-0xb0]
  407c06:	mov    QWORD PTR [rbp-0xb0],rcx
  407c0d:	mov    rcx,QWORD PTR [rbp-0x18]
  407c11:	lea    rdx,[rbp-0xb0]
  407c18:	mov    rsi,rdx
  407c1b:	add    rsi,0x10
  407c22:	movsxd rdi,DWORD PTR [rbp-0xa8]
  407c29:	shl    rdi,0x4
  407c2d:	add    rsi,rdi
  407c30:	mov    QWORD PTR [rsi],rcx
  407c33:	movzx  eax,WORD PTR [rbp-0x1a]
  407c37:	mov    ecx,eax
  407c39:	add    rdx,0x10
  407c40:	movsxd rsi,DWORD PTR [rbp-0xa8]
  407c47:	shl    rsi,0x4
  407c4b:	add    rdx,rsi
  407c4e:	mov    QWORD PTR [rdx+0x8],rcx
  407c52:	mov    eax,DWORD PTR [rbp-0xa8]
  407c58:	add    eax,0x1
  407c5b:	mov    DWORD PTR [rbp-0xa8],eax
  407c61:	mov    rax,QWORD PTR [rbp-0x10]
  407c65:	cmp    DWORD PTR [rax+0x100],0x0
  407c6c:	jne    407cb1 <flatcc_builder_create_vtable@@Base+0xf1>
  407c72:	mov    rax,QWORD PTR [rbp-0x10]
  407c76:	cmp    DWORD PTR [rax+0x124],0x0
  407c7d:	jne    407cb1 <flatcc_builder_create_vtable@@Base+0xf1>
  407c83:	mov    rdi,QWORD PTR [rbp-0x10]
  407c87:	lea    rsi,[rbp-0xb0]
  407c8e:	call   407d00 <flatcc_builder_create_vtable@@Base+0x140>
  407c93:	xor    ecx,ecx
  407c95:	mov    DWORD PTR [rbp-0x20],eax
  407c98:	cmp    ecx,eax
  407c9a:	jne    407cac <flatcc_builder_create_vtable@@Base+0xec>
  407ca0:	mov    DWORD PTR [rbp-0x4],0x0
  407ca7:	jmp    407ce9 <flatcc_builder_create_vtable@@Base+0x129>
  407cac:	jmp    407ce3 <flatcc_builder_create_vtable@@Base+0x123>
  407cb1:	mov    rdi,QWORD PTR [rbp-0x10]
  407cb5:	lea    rsi,[rbp-0xb0]
  407cbc:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  407cc1:	xor    ecx,ecx
  407cc3:	mov    DWORD PTR [rbp-0x20],eax
  407cc6:	cmp    ecx,eax
  407cc8:	jne    407cda <flatcc_builder_create_vtable@@Base+0x11a>
  407cce:	mov    DWORD PTR [rbp-0x4],0x0
  407cd5:	jmp    407ce9 <flatcc_builder_create_vtable@@Base+0x129>
  407cda:	mov    eax,DWORD PTR [rbp-0x20]
  407cdd:	add    eax,0x1
  407ce0:	mov    DWORD PTR [rbp-0x20],eax
  407ce3:	mov    eax,DWORD PTR [rbp-0x20]
  407ce6:	mov    DWORD PTR [rbp-0x4],eax
  407ce9:	mov    eax,DWORD PTR [rbp-0x4]
  407cec:	add    rsp,0xc0
  407cf3:	pop    rbp
  407cf4:	ret    
  407cf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cff:	nop
  407d00:	push   rbp
  407d01:	mov    rbp,rsp
  407d04:	sub    rsp,0x20
  407d08:	mov    QWORD PTR [rbp-0x8],rdi
  407d0c:	mov    QWORD PTR [rbp-0x10],rsi
  407d10:	mov    rax,QWORD PTR [rbp-0x8]
  407d14:	mov    ecx,DWORD PTR [rax+0xf4]
  407d1a:	mov    DWORD PTR [rbp-0x14],ecx
  407d1d:	mov    ecx,DWORD PTR [rbp-0x14]
  407d20:	mov    rax,QWORD PTR [rbp-0x10]
  407d24:	mov    rax,QWORD PTR [rax]
  407d27:	add    ecx,eax
  407d29:	mov    rdx,QWORD PTR [rbp-0x8]
  407d2d:	mov    DWORD PTR [rdx+0xf4],ecx
  407d33:	mov    rdx,QWORD PTR [rbp-0x8]
  407d37:	mov    eax,DWORD PTR [rdx+0xf4]
  407d3d:	cmp    eax,DWORD PTR [rbp-0x14]
  407d40:	jge    407d65 <flatcc_builder_create_vtable@@Base+0x1a5>
  407d46:	lea    rdi,[rip+0xb9f5]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  407d4d:	lea    rsi,[rip+0xa82e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407d54:	mov    edx,0x2a1
  407d59:	lea    rcx,[rip+0xb95d]        # 4136bd <flatcc_builder_padding_base@@Base+0x134d>
  407d60:	call   403060 <__assert_fail@plt>
  407d65:	mov    rax,QWORD PTR [rbp-0x8]
  407d69:	mov    rax,QWORD PTR [rax+0x48]
  407d6d:	mov    rcx,QWORD PTR [rbp-0x8]
  407d71:	mov    rdi,QWORD PTR [rcx+0x38]
  407d75:	mov    rcx,QWORD PTR [rbp-0x10]
  407d79:	add    rcx,0x10
  407d80:	mov    rdx,QWORD PTR [rbp-0x10]
  407d84:	mov    edx,DWORD PTR [rdx+0x8]
  407d87:	mov    esi,DWORD PTR [rbp-0x14]
  407d8a:	mov    r8,QWORD PTR [rbp-0x10]
  407d8e:	mov    r8,QWORD PTR [r8]
  407d91:	mov    DWORD PTR [rbp-0x18],esi
  407d94:	mov    rsi,rcx
  407d97:	mov    ecx,DWORD PTR [rbp-0x18]
  407d9a:	call   rax
  407d9c:	cmp    eax,0x0
  407d9f:	je     407dc4 <flatcc_builder_create_vtable@@Base+0x204>
  407da5:	lea    rdi,[rip+0xb996]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  407dac:	lea    rsi,[rip+0xa7cf]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407db3:	mov    edx,0x2a5
  407db8:	lea    rcx,[rip+0xb8fe]        # 4136bd <flatcc_builder_padding_base@@Base+0x134d>
  407dbf:	call   403060 <__assert_fail@plt>
  407dc4:	mov    eax,DWORD PTR [rbp-0x14]
  407dc7:	add    eax,0x1
  407dca:	add    rsp,0x20
  407dce:	pop    rbp
  407dcf:	ret    

0000000000407dd0 <flatcc_builder_create_cached_vtable@@Base>:
  407dd0:	push   rbp
  407dd1:	mov    rbp,rsp
  407dd4:	sub    rsp,0x70
  407dd8:	mov    QWORD PTR [rbp-0x10],rdi
  407ddc:	mov    QWORD PTR [rbp-0x18],rsi
  407de0:	mov    WORD PTR [rbp-0x1a],dx
  407de4:	mov    DWORD PTR [rbp-0x20],ecx
  407de7:	mov    rdi,QWORD PTR [rbp-0x10]
  407deb:	mov    esi,DWORD PTR [rbp-0x20]
  407dee:	call   408100 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407df3:	mov    QWORD PTR [rbp-0x40],rax
  407df7:	cmp    rax,0x0
  407dfb:	jne    407e0d <flatcc_builder_create_cached_vtable@@Base+0x3d>
  407e01:	mov    DWORD PTR [rbp-0x4],0x0
  407e08:	jmp    4080e8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407e0d:	mov    rax,QWORD PTR [rbp-0x40]
  407e11:	mov    QWORD PTR [rbp-0x38],rax
  407e15:	mov    rax,QWORD PTR [rbp-0x38]
  407e19:	mov    ecx,DWORD PTR [rax]
  407e1b:	mov    DWORD PTR [rbp-0x44],ecx
  407e1e:	mov    QWORD PTR [rbp-0x30],0x0
  407e26:	cmp    DWORD PTR [rbp-0x44],0x0
  407e2a:	je     407f3d <flatcc_builder_create_cached_vtable@@Base+0x16d>
  407e30:	mov    rax,QWORD PTR [rbp-0x10]
  407e34:	mov    rax,QWORD PTR [rax+0xb8]
  407e3b:	mov    ecx,DWORD PTR [rbp-0x44]
  407e3e:	mov    edx,ecx
  407e40:	add    rax,rdx
  407e43:	mov    QWORD PTR [rbp-0x28],rax
  407e47:	mov    rax,QWORD PTR [rbp-0x10]
  407e4b:	mov    rax,QWORD PTR [rax+0x78]
  407e4f:	mov    rdx,QWORD PTR [rbp-0x28]
  407e53:	mov    ecx,DWORD PTR [rdx+0x8]
  407e56:	mov    edx,ecx
  407e58:	add    rax,rdx
  407e5b:	mov    QWORD PTR [rbp-0x50],rax
  407e5f:	mov    rax,QWORD PTR [rbp-0x50]
  407e63:	movzx  ecx,WORD PTR [rax]
  407e66:	movzx  esi,WORD PTR [rbp-0x1a]
  407e6a:	cmp    ecx,esi
  407e6c:	jne    407ea5 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  407e72:	xor    eax,eax
  407e74:	mov    rcx,QWORD PTR [rbp-0x18]
  407e78:	mov    rdx,QWORD PTR [rbp-0x50]
  407e7c:	movzx  esi,WORD PTR [rbp-0x1a]
  407e80:	mov    edi,esi
  407e82:	mov    QWORD PTR [rbp-0x58],rdi
  407e86:	mov    rdi,rcx
  407e89:	mov    rsi,rdx
  407e8c:	mov    rdx,QWORD PTR [rbp-0x58]
  407e90:	mov    DWORD PTR [rbp-0x5c],eax
  407e93:	call   403090 <memcmp@plt>
  407e98:	mov    r8d,DWORD PTR [rbp-0x5c]
  407e9c:	cmp    r8d,eax
  407e9f:	je     407ec2 <flatcc_builder_create_cached_vtable@@Base+0xf2>
  407ea5:	mov    rax,QWORD PTR [rbp-0x28]
  407ea9:	add    rax,0xc
  407eaf:	mov    QWORD PTR [rbp-0x38],rax
  407eb3:	mov    rax,QWORD PTR [rbp-0x28]
  407eb7:	mov    ecx,DWORD PTR [rax+0xc]
  407eba:	mov    DWORD PTR [rbp-0x44],ecx
  407ebd:	jmp    407e26 <flatcc_builder_create_cached_vtable@@Base+0x56>
  407ec2:	mov    rax,QWORD PTR [rbp-0x28]
  407ec6:	mov    ecx,DWORD PTR [rax+0x4]
  407ec9:	mov    rax,QWORD PTR [rbp-0x10]
  407ecd:	cmp    ecx,DWORD PTR [rax+0x100]
  407ed3:	je     407efe <flatcc_builder_create_cached_vtable@@Base+0x12e>
  407ed9:	mov    rax,QWORD PTR [rbp-0x28]
  407edd:	mov    QWORD PTR [rbp-0x30],rax
  407ee1:	mov    rax,QWORD PTR [rbp-0x28]
  407ee5:	add    rax,0xc
  407eeb:	mov    QWORD PTR [rbp-0x38],rax
  407eef:	mov    rax,QWORD PTR [rbp-0x28]
  407ef3:	mov    ecx,DWORD PTR [rax+0xc]
  407ef6:	mov    DWORD PTR [rbp-0x44],ecx
  407ef9:	jmp    407e26 <flatcc_builder_create_cached_vtable@@Base+0x56>
  407efe:	mov    rax,QWORD PTR [rbp-0x38]
  407f02:	cmp    rax,QWORD PTR [rbp-0x40]
  407f06:	je     407f2f <flatcc_builder_create_cached_vtable@@Base+0x15f>
  407f0c:	mov    rax,QWORD PTR [rbp-0x28]
  407f10:	mov    ecx,DWORD PTR [rax+0xc]
  407f13:	mov    rax,QWORD PTR [rbp-0x38]
  407f17:	mov    DWORD PTR [rax],ecx
  407f19:	mov    rax,QWORD PTR [rbp-0x40]
  407f1d:	mov    ecx,DWORD PTR [rax]
  407f1f:	mov    rax,QWORD PTR [rbp-0x28]
  407f23:	mov    DWORD PTR [rax+0xc],ecx
  407f26:	mov    ecx,DWORD PTR [rbp-0x44]
  407f29:	mov    rax,QWORD PTR [rbp-0x40]
  407f2d:	mov    DWORD PTR [rax],ecx
  407f2f:	mov    rax,QWORD PTR [rbp-0x28]
  407f33:	mov    ecx,DWORD PTR [rax]
  407f35:	mov    DWORD PTR [rbp-0x4],ecx
  407f38:	jmp    4080e8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407f3d:	xor    r8d,r8d
  407f40:	mov    rdi,QWORD PTR [rbp-0x10]
  407f44:	mov    rax,QWORD PTR [rbp-0x10]
  407f48:	mov    ecx,DWORD PTR [rax+0xe4]
  407f4e:	mov    edx,ecx
  407f50:	mov    esi,0x6
  407f55:	mov    ecx,0x10
  407f5a:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  407f5f:	mov    QWORD PTR [rbp-0x28],rax
  407f63:	cmp    rax,0x0
  407f67:	jne    407f79 <flatcc_builder_create_cached_vtable@@Base+0x1a9>
  407f6d:	mov    DWORD PTR [rbp-0x4],0x0
  407f74:	jmp    4080e8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407f79:	mov    rax,QWORD PTR [rbp-0x10]
  407f7d:	mov    ecx,DWORD PTR [rax+0xe4]
  407f83:	mov    DWORD PTR [rbp-0x44],ecx
  407f86:	mov    rax,QWORD PTR [rbp-0x10]
  407f8a:	mov    ecx,DWORD PTR [rax+0xe4]
  407f90:	mov    edx,ecx
  407f92:	add    rdx,0x10
  407f99:	mov    DWORD PTR [rax+0xe4],edx
  407f9f:	mov    rax,QWORD PTR [rbp-0x10]
  407fa3:	mov    ecx,DWORD PTR [rax+0x100]
  407fa9:	mov    rax,QWORD PTR [rbp-0x28]
  407fad:	mov    DWORD PTR [rax+0x4],ecx
  407fb0:	mov    rax,QWORD PTR [rbp-0x40]
  407fb4:	mov    ecx,DWORD PTR [rax]
  407fb6:	mov    rax,QWORD PTR [rbp-0x28]
  407fba:	mov    DWORD PTR [rax+0xc],ecx
  407fbd:	mov    ecx,DWORD PTR [rbp-0x44]
  407fc0:	mov    rax,QWORD PTR [rbp-0x40]
  407fc4:	mov    DWORD PTR [rax],ecx
  407fc6:	mov    rdi,QWORD PTR [rbp-0x10]
  407fca:	mov    rsi,QWORD PTR [rbp-0x18]
  407fce:	movzx  edx,WORD PTR [rbp-0x1a]
  407fd2:	call   407bc0 <flatcc_builder_create_vtable@@Base>
  407fd7:	xor    ecx,ecx
  407fd9:	mov    rsi,QWORD PTR [rbp-0x28]
  407fdd:	mov    DWORD PTR [rsi],eax
  407fdf:	cmp    ecx,eax
  407fe1:	jne    407ff3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  407fe7:	mov    DWORD PTR [rbp-0x4],0x0
  407fee:	jmp    4080e8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407ff3:	cmp    QWORD PTR [rbp-0x30],0x0
  407ff8:	je     408011 <flatcc_builder_create_cached_vtable@@Base+0x241>
  407ffe:	mov    rax,QWORD PTR [rbp-0x30]
  408002:	mov    ecx,DWORD PTR [rax+0x8]
  408005:	mov    rax,QWORD PTR [rbp-0x28]
  408009:	mov    DWORD PTR [rax+0x8],ecx
  40800c:	jmp    4080df <flatcc_builder_create_cached_vtable@@Base+0x30f>
  408011:	mov    rax,QWORD PTR [rbp-0x10]
  408015:	cmp    QWORD PTR [rax+0x118],0x0
  40801d:	je     408059 <flatcc_builder_create_cached_vtable@@Base+0x289>
  408023:	mov    rax,QWORD PTR [rbp-0x10]
  408027:	mov    rax,QWORD PTR [rax+0x118]
  40802e:	mov    rcx,QWORD PTR [rbp-0x10]
  408032:	mov    edx,DWORD PTR [rcx+0xe0]
  408038:	movzx  esi,WORD PTR [rbp-0x1a]
  40803c:	add    edx,esi
  40803e:	mov    edx,edx
  408040:	mov    ecx,edx
  408042:	cmp    rax,rcx
  408045:	jae    408059 <flatcc_builder_create_cached_vtable@@Base+0x289>
  40804b:	mov    rdi,QWORD PTR [rbp-0x10]
  40804f:	call   4050a0 <flatcc_builder_flush_vtable_cache@@Base>
  408054:	jmp    4080da <flatcc_builder_create_cached_vtable@@Base+0x30a>
  408059:	xor    r8d,r8d
  40805c:	mov    rdi,QWORD PTR [rbp-0x10]
  408060:	mov    rax,QWORD PTR [rbp-0x10]
  408064:	mov    ecx,DWORD PTR [rax+0xe0]
  40806a:	mov    edx,ecx
  40806c:	movzx  ecx,WORD PTR [rbp-0x1a]
  408070:	mov    esi,0x2
  408075:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40807a:	mov    QWORD PTR [rbp-0x50],rax
  40807e:	cmp    rax,0x0
  408082:	jne    408094 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  408088:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40808f:	jmp    4080e8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  408094:	mov    rax,QWORD PTR [rbp-0x10]
  408098:	mov    ecx,DWORD PTR [rax+0xe0]
  40809e:	mov    rax,QWORD PTR [rbp-0x28]
  4080a2:	mov    DWORD PTR [rax+0x8],ecx
  4080a5:	movzx  ecx,WORD PTR [rbp-0x1a]
  4080a9:	mov    rax,QWORD PTR [rbp-0x10]
  4080ad:	add    ecx,DWORD PTR [rax+0xe0]
  4080b3:	mov    DWORD PTR [rax+0xe0],ecx
  4080b9:	mov    rax,QWORD PTR [rbp-0x50]
  4080bd:	mov    rdx,QWORD PTR [rbp-0x18]
  4080c1:	movzx  ecx,WORD PTR [rbp-0x1a]
  4080c5:	mov    esi,ecx
  4080c7:	mov    rdi,rax
  4080ca:	mov    QWORD PTR [rbp-0x68],rsi
  4080ce:	mov    rsi,rdx
  4080d1:	mov    rdx,QWORD PTR [rbp-0x68]
  4080d5:	call   4030b0 <memcpy@plt>
  4080da:	jmp    4080df <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4080df:	mov    rax,QWORD PTR [rbp-0x28]
  4080e3:	mov    ecx,DWORD PTR [rax]
  4080e5:	mov    DWORD PTR [rbp-0x4],ecx
  4080e8:	mov    eax,DWORD PTR [rbp-0x4]
  4080eb:	add    rsp,0x70
  4080ef:	pop    rbp
  4080f0:	ret    
  4080f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408100:	push   rbp
  408101:	mov    rbp,rsp
  408104:	sub    rsp,0x30
  408108:	mov    QWORD PTR [rbp-0x10],rdi
  40810c:	mov    DWORD PTR [rbp-0x14],esi
  40810f:	mov    rax,QWORD PTR [rbp-0x10]
  408113:	cmp    QWORD PTR [rax+0xd8],0x0
  40811b:	jne    408145 <flatcc_builder_create_cached_vtable@@Base+0x375>
  408121:	mov    rdi,QWORD PTR [rbp-0x10]
  408125:	call   40ab20 <flatcc_builder_get_emit_context@@Base+0xe0>
  40812a:	cmp    eax,0x0
  40812d:	je     408140 <flatcc_builder_create_cached_vtable@@Base+0x370>
  408133:	mov    QWORD PTR [rbp-0x8],0x0
  40813b:	jmp    408184 <flatcc_builder_create_cached_vtable@@Base+0x3b4>
  408140:	jmp    408145 <flatcc_builder_create_cached_vtable@@Base+0x375>
  408145:	mov    rax,QWORD PTR [rbp-0x10]
  408149:	mov    rax,QWORD PTR [rax+0xa8]
  408150:	mov    QWORD PTR [rbp-0x20],rax
  408154:	mov    rax,QWORD PTR [rbp-0x20]
  408158:	mov    ecx,DWORD PTR [rbp-0x14]
  40815b:	mov    rdx,QWORD PTR [rbp-0x10]
  40815f:	mov    esi,0x20
  408164:	sub    rsi,QWORD PTR [rdx+0xd8]
  40816b:	mov    DWORD PTR [rbp-0x24],ecx
  40816e:	mov    ecx,esi
  408170:	mov    esi,DWORD PTR [rbp-0x24]
  408173:	shr    esi,cl
  408175:	mov    esi,esi
  408177:	mov    edx,esi
  408179:	shl    rdx,0x2
  40817d:	add    rax,rdx
  408180:	mov    QWORD PTR [rbp-0x8],rax
  408184:	mov    rax,QWORD PTR [rbp-0x8]
  408188:	add    rsp,0x30
  40818c:	pop    rbp
  40818d:	ret    
  40818e:	xchg   ax,ax

0000000000408190 <flatcc_builder_create_table@@Base>:
  408190:	push   rbp
  408191:	mov    rbp,rsp
  408194:	sub    rsp,0xf0
  40819b:	mov    eax,DWORD PTR [rbp+0x10]
  40819e:	mov    QWORD PTR [rbp-0x10],rdi
  4081a2:	mov    QWORD PTR [rbp-0x18],rsi
  4081a6:	mov    QWORD PTR [rbp-0x20],rdx
  4081aa:	mov    WORD PTR [rbp-0x22],cx
  4081ae:	mov    QWORD PTR [rbp-0x30],r8
  4081b2:	mov    DWORD PTR [rbp-0x34],r9d
  4081b6:	cmp    DWORD PTR [rbp-0x34],0x0
  4081ba:	jl     4081c5 <flatcc_builder_create_table@@Base+0x35>
  4081c0:	jmp    4081e4 <flatcc_builder_create_table@@Base+0x54>
  4081c5:	lea    rdi,[rip+0xab2c]        # 412cf8 <flatcc_builder_padding_base@@Base+0x988>
  4081cc:	lea    rsi,[rip+0xa3af]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4081d3:	mov    edx,0x4d5
  4081d8:	lea    rcx,[rip+0xab2b]        # 412d0a <flatcc_builder_padding_base@@Base+0x99a>
  4081df:	call   403060 <__assert_fail@plt>
  4081e4:	mov    eax,DWORD PTR [rbp+0x10]
  4081e7:	and    eax,0x1
  4081ea:	cmp    eax,0x0
  4081ed:	je     4081f8 <flatcc_builder_create_table@@Base+0x68>
  4081f3:	jmp    408217 <flatcc_builder_create_table@@Base+0x87>
  4081f8:	lea    rdi,[rip+0xaba7]        # 412da6 <flatcc_builder_padding_base@@Base+0xa36>
  4081ff:	lea    rsi,[rip+0xa37c]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408206:	mov    edx,0x4db
  40820b:	lea    rcx,[rip+0xaaf8]        # 412d0a <flatcc_builder_padding_base@@Base+0x99a>
  408212:	call   403060 <__assert_fail@plt>
  408217:	lea    rdi,[rbp-0x22]
  40821b:	mov    esi,0x4
  408220:	call   407700 <flatcc_builder_start_vector@@Base+0xb0>
  408225:	mov    rdi,QWORD PTR [rbp-0x10]
  408229:	movzx  esi,WORD PTR [rbp-0x22]
  40822d:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  408232:	mov    rdi,QWORD PTR [rbp-0x10]
  408236:	mov    rax,QWORD PTR [rbp-0x20]
  40823a:	mov    esi,eax
  40823c:	movzx  edx,WORD PTR [rbp-0x22]
  408240:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  408245:	mov    DWORD PTR [rbp-0x3c],eax
  408248:	mov    rcx,QWORD PTR [rbp-0x10]
  40824c:	mov    eax,DWORD PTR [rcx+0xf0]
  408252:	mov    edx,DWORD PTR [rbp-0x3c]
  408255:	mov    ecx,edx
  408257:	add    rcx,QWORD PTR [rbp-0x20]
  40825b:	add    rcx,0x4
  408262:	sub    eax,ecx
  408264:	mov    DWORD PTR [rbp-0x4c],eax
  408267:	mov    eax,DWORD PTR [rbp+0x10]
  40826a:	sub    eax,0x1
  40826d:	mov    DWORD PTR [rbp-0x48],eax
  408270:	mov    eax,DWORD PTR [rbp-0x4c]
  408273:	sub    eax,DWORD PTR [rbp-0x48]
  408276:	mov    DWORD PTR [rbp-0x40],eax
  408279:	mov    eax,DWORD PTR [rbp-0x4c]
  40827c:	sub    eax,DWORD PTR [rbp-0x40]
  40827f:	cmp    eax,DWORD PTR [rbp-0x48]
  408282:	je     408294 <flatcc_builder_create_table@@Base+0x104>
  408288:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40828f:	jmp    40847b <flatcc_builder_create_table@@Base+0x2eb>
  408294:	mov    edi,DWORD PTR [rbp-0x40]
  408297:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  40829c:	mov    DWORD PTR [rbp-0x44],eax
  40829f:	mov    DWORD PTR [rbp-0x38],0x0
  4082a6:	mov    eax,DWORD PTR [rbp-0x38]
  4082a9:	cmp    eax,DWORD PTR [rbp-0x34]
  4082ac:	jge    40830b <flatcc_builder_create_table@@Base+0x17b>
  4082b2:	mov    rax,QWORD PTR [rbp-0x18]
  4082b6:	mov    rcx,QWORD PTR [rbp-0x30]
  4082ba:	movsxd rdx,DWORD PTR [rbp-0x38]
  4082be:	movzx  esi,WORD PTR [rcx+rdx*2]
  4082c2:	mov    ecx,esi
  4082c4:	add    rax,rcx
  4082c7:	mov    QWORD PTR [rbp-0x58],rax
  4082cb:	mov    rax,QWORD PTR [rbp-0x58]
  4082cf:	mov    esi,DWORD PTR [rax]
  4082d1:	sub    esi,DWORD PTR [rbp-0x4c]
  4082d4:	mov    rax,QWORD PTR [rbp-0x30]
  4082d8:	movsxd rcx,DWORD PTR [rbp-0x38]
  4082dc:	movzx  edi,WORD PTR [rax+rcx*2]
  4082e0:	sub    esi,edi
  4082e2:	mov    esi,esi
  4082e4:	mov    eax,esi
  4082e6:	sub    rax,0x4
  4082ec:	mov    DWORD PTR [rbp-0x50],eax
  4082ef:	mov    edi,DWORD PTR [rbp-0x50]
  4082f2:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  4082f7:	mov    rcx,QWORD PTR [rbp-0x58]
  4082fb:	mov    DWORD PTR [rcx],eax
  4082fd:	mov    eax,DWORD PTR [rbp-0x38]
  408300:	add    eax,0x1
  408303:	mov    DWORD PTR [rbp-0x38],eax
  408306:	jmp    4082a6 <flatcc_builder_create_table@@Base+0x116>
  40830b:	mov    QWORD PTR [rbp-0xe8],0x0
  408316:	mov    DWORD PTR [rbp-0xe0],0x0
  408320:	mov    rax,QWORD PTR [rbp-0xe8]
  408327:	add    rax,0x4
  40832d:	mov    QWORD PTR [rbp-0xe8],rax
  408334:	lea    rax,[rbp-0x44]
  408338:	lea    rcx,[rbp-0xe8]
  40833f:	mov    rdx,rcx
  408342:	add    rdx,0x10
  408349:	movsxd rsi,DWORD PTR [rbp-0xe0]
  408350:	shl    rsi,0x4
  408354:	add    rdx,rsi
  408357:	mov    QWORD PTR [rdx],rax
  40835a:	add    rcx,0x10
  408361:	movsxd rax,DWORD PTR [rbp-0xe0]
  408368:	shl    rax,0x4
  40836c:	add    rcx,rax
  40836f:	mov    QWORD PTR [rcx+0x8],0x4
  408377:	mov    edi,DWORD PTR [rbp-0xe0]
  40837d:	add    edi,0x1
  408380:	mov    DWORD PTR [rbp-0xe0],edi
  408386:	cmp    QWORD PTR [rbp-0x20],0x0
  40838b:	jbe    4083f5 <flatcc_builder_create_table@@Base+0x265>
  408391:	mov    rax,QWORD PTR [rbp-0x20]
  408395:	add    rax,QWORD PTR [rbp-0xe8]
  40839c:	mov    QWORD PTR [rbp-0xe8],rax
  4083a3:	mov    rax,QWORD PTR [rbp-0x18]
  4083a7:	lea    rcx,[rbp-0xe8]
  4083ae:	mov    rdx,rcx
  4083b1:	add    rdx,0x10
  4083b8:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4083bf:	shl    rsi,0x4
  4083c3:	add    rdx,rsi
  4083c6:	mov    QWORD PTR [rdx],rax
  4083c9:	mov    rax,QWORD PTR [rbp-0x20]
  4083cd:	add    rcx,0x10
  4083d4:	movsxd rdx,DWORD PTR [rbp-0xe0]
  4083db:	shl    rdx,0x4
  4083df:	add    rcx,rdx
  4083e2:	mov    QWORD PTR [rcx+0x8],rax
  4083e6:	mov    edi,DWORD PTR [rbp-0xe0]
  4083ec:	add    edi,0x1
  4083ef:	mov    DWORD PTR [rbp-0xe0],edi
  4083f5:	cmp    DWORD PTR [rbp-0x3c],0x0
  4083f9:	jbe    408468 <flatcc_builder_create_table@@Base+0x2d8>
  4083ff:	lea    rax,[rip+0x9f6a]        # 412370 <flatcc_builder_padding_base@@Base>
  408406:	mov    ecx,DWORD PTR [rbp-0x3c]
  408409:	mov    edx,ecx
  40840b:	add    rdx,QWORD PTR [rbp-0xe8]
  408412:	mov    QWORD PTR [rbp-0xe8],rdx
  408419:	lea    rdx,[rbp-0xe8]
  408420:	mov    rsi,rdx
  408423:	add    rsi,0x10
  40842a:	movsxd rdi,DWORD PTR [rbp-0xe0]
  408431:	shl    rdi,0x4
  408435:	add    rsi,rdi
  408438:	mov    QWORD PTR [rsi],rax
  40843b:	mov    ecx,DWORD PTR [rbp-0x3c]
  40843e:	mov    eax,ecx
  408440:	add    rdx,0x10
  408447:	movsxd rsi,DWORD PTR [rbp-0xe0]
  40844e:	shl    rsi,0x4
  408452:	add    rdx,rsi
  408455:	mov    QWORD PTR [rdx+0x8],rax
  408459:	mov    ecx,DWORD PTR [rbp-0xe0]
  40845f:	add    ecx,0x1
  408462:	mov    DWORD PTR [rbp-0xe0],ecx
  408468:	mov    rdi,QWORD PTR [rbp-0x10]
  40846c:	lea    rsi,[rbp-0xe8]
  408473:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  408478:	mov    DWORD PTR [rbp-0x4],eax
  40847b:	mov    eax,DWORD PTR [rbp-0x4]
  40847e:	add    rsp,0xf0
  408485:	pop    rbp
  408486:	ret    
  408487:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408490 <flatcc_builder_check_required_field@@Base>:
  408490:	push   rbp
  408491:	mov    rbp,rsp
  408494:	sub    rsp,0x10
  408498:	mov    QWORD PTR [rbp-0x8],rdi
  40849c:	mov    WORD PTR [rbp-0xa],si
  4084a0:	mov    rax,QWORD PTR [rbp-0x8]
  4084a4:	mov    rax,QWORD PTR [rax+0x30]
  4084a8:	movzx  ecx,WORD PTR [rax+0xe]
  4084ac:	cmp    ecx,0x3
  4084af:	jne    4084ba <flatcc_builder_check_required_field@@Base+0x2a>
  4084b5:	jmp    4084d9 <flatcc_builder_check_required_field@@Base+0x49>
  4084ba:	lea    rdi,[rip+0xa8f0]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  4084c1:	lea    rsi,[rip+0xa0ba]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4084c8:	mov    edx,0x4f8
  4084cd:	lea    rcx,[rip+0xa908]        # 412ddc <flatcc_builder_padding_base@@Base+0xa6c>
  4084d4:	call   403060 <__assert_fail@plt>
  4084d9:	xor    eax,eax
  4084db:	movzx  ecx,WORD PTR [rbp-0xa]
  4084df:	mov    rdx,QWORD PTR [rbp-0x8]
  4084e3:	movzx  esi,WORD PTR [rdx+0x10]
  4084e7:	cmp    ecx,esi
  4084e9:	mov    BYTE PTR [rbp-0xb],al
  4084ec:	jge    40850f <flatcc_builder_check_required_field@@Base+0x7f>
  4084f2:	mov    rax,QWORD PTR [rbp-0x8]
  4084f6:	mov    rax,QWORD PTR [rax+0x8]
  4084fa:	movzx  ecx,WORD PTR [rbp-0xa]
  4084fe:	mov    edx,ecx
  408500:	movzx  ecx,WORD PTR [rax+rdx*2]
  408504:	cmp    ecx,0x0
  408507:	setne  sil
  40850b:	mov    BYTE PTR [rbp-0xb],sil
  40850f:	mov    al,BYTE PTR [rbp-0xb]
  408512:	and    al,0x1
  408514:	movzx  eax,al
  408517:	add    rsp,0x10
  40851b:	pop    rbp
  40851c:	ret    
  40851d:	nop    DWORD PTR [rax]

0000000000408520 <flatcc_builder_check_union_field@@Base>:
  408520:	push   rbp
  408521:	mov    rbp,rsp
  408524:	sub    rsp,0x20
  408528:	mov    QWORD PTR [rbp-0x10],rdi
  40852c:	mov    WORD PTR [rbp-0x12],si
  408530:	mov    rax,QWORD PTR [rbp-0x10]
  408534:	mov    rax,QWORD PTR [rax+0x30]
  408538:	movzx  ecx,WORD PTR [rax+0xe]
  40853c:	cmp    ecx,0x3
  40853f:	jne    40854a <flatcc_builder_check_union_field@@Base+0x2a>
  408545:	jmp    408569 <flatcc_builder_check_union_field@@Base+0x49>
  40854a:	lea    rdi,[rip+0xa860]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  408551:	lea    rsi,[rip+0xa02a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408558:	mov    edx,0x4ff
  40855d:	lea    rcx,[rip+0xa8cb]        # 412e2f <flatcc_builder_padding_base@@Base+0xabf>
  408564:	call   403060 <__assert_fail@plt>
  408569:	movzx  eax,WORD PTR [rbp-0x12]
  40856d:	cmp    eax,0x0
  408570:	je     40858a <flatcc_builder_check_union_field@@Base+0x6a>
  408576:	movzx  eax,WORD PTR [rbp-0x12]
  40857a:	mov    rcx,QWORD PTR [rbp-0x10]
  40857e:	movzx  edx,WORD PTR [rcx+0x10]
  408582:	cmp    eax,edx
  408584:	jl     408596 <flatcc_builder_check_union_field@@Base+0x76>
  40858a:	mov    DWORD PTR [rbp-0x4],0x0
  408591:	jmp    408656 <flatcc_builder_check_union_field@@Base+0x136>
  408596:	mov    rax,QWORD PTR [rbp-0x10]
  40859a:	mov    rax,QWORD PTR [rax+0x8]
  40859e:	movzx  ecx,WORD PTR [rbp-0x12]
  4085a2:	sub    ecx,0x1
  4085a5:	movsxd rdx,ecx
  4085a8:	movzx  ecx,WORD PTR [rax+rdx*2]
  4085ac:	cmp    ecx,0x0
  4085af:	jne    4085de <flatcc_builder_check_union_field@@Base+0xbe>
  4085b5:	mov    rax,QWORD PTR [rbp-0x10]
  4085b9:	mov    rax,QWORD PTR [rax+0x8]
  4085bd:	movzx  ecx,WORD PTR [rbp-0x12]
  4085c1:	mov    edx,ecx
  4085c3:	movzx  ecx,WORD PTR [rax+rdx*2]
  4085c7:	cmp    ecx,0x0
  4085ca:	sete   sil
  4085ce:	and    sil,0x1
  4085d2:	movzx  ecx,sil
  4085d6:	mov    DWORD PTR [rbp-0x4],ecx
  4085d9:	jmp    408656 <flatcc_builder_check_union_field@@Base+0x136>
  4085de:	mov    rax,QWORD PTR [rbp-0x10]
  4085e2:	mov    rax,QWORD PTR [rax+0x18]
  4085e6:	mov    rcx,QWORD PTR [rbp-0x10]
  4085ea:	mov    rcx,QWORD PTR [rcx+0x8]
  4085ee:	movzx  edx,WORD PTR [rbp-0x12]
  4085f2:	sub    edx,0x1
  4085f5:	movsxd rsi,edx
  4085f8:	movzx  edx,WORD PTR [rcx+rsi*2]
  4085fc:	movsxd rcx,edx
  4085ff:	cmp    BYTE PTR [rax+rcx*1],0x0
  408603:	je     408632 <flatcc_builder_check_union_field@@Base+0x112>
  408609:	mov    rax,QWORD PTR [rbp-0x10]
  40860d:	mov    rax,QWORD PTR [rax+0x8]
  408611:	movzx  ecx,WORD PTR [rbp-0x12]
  408615:	mov    edx,ecx
  408617:	movzx  ecx,WORD PTR [rax+rdx*2]
  40861b:	cmp    ecx,0x0
  40861e:	setne  sil
  408622:	and    sil,0x1
  408626:	movzx  ecx,sil
  40862a:	mov    DWORD PTR [rbp-0x4],ecx
  40862d:	jmp    408656 <flatcc_builder_check_union_field@@Base+0x136>
  408632:	mov    rax,QWORD PTR [rbp-0x10]
  408636:	mov    rax,QWORD PTR [rax+0x8]
  40863a:	movzx  ecx,WORD PTR [rbp-0x12]
  40863e:	mov    edx,ecx
  408640:	movzx  ecx,WORD PTR [rax+rdx*2]
  408644:	cmp    ecx,0x0
  408647:	sete   sil
  40864b:	and    sil,0x1
  40864f:	movzx  ecx,sil
  408653:	mov    DWORD PTR [rbp-0x4],ecx
  408656:	mov    eax,DWORD PTR [rbp-0x4]
  408659:	add    rsp,0x20
  40865d:	pop    rbp
  40865e:	ret    
  40865f:	nop

0000000000408660 <flatcc_builder_check_required@@Base>:
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0x20
  408668:	mov    QWORD PTR [rbp-0x10],rdi
  40866c:	mov    QWORD PTR [rbp-0x18],rsi
  408670:	mov    DWORD PTR [rbp-0x1c],edx
  408673:	mov    rax,QWORD PTR [rbp-0x10]
  408677:	mov    rax,QWORD PTR [rax+0x30]
  40867b:	movzx  ecx,WORD PTR [rax+0xe]
  40867f:	cmp    ecx,0x3
  408682:	jne    40868d <flatcc_builder_check_required@@Base+0x2d>
  408688:	jmp    4086ac <flatcc_builder_check_required@@Base+0x4c>
  40868d:	lea    rdi,[rip+0xa71d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  408694:	lea    rsi,[rip+0x9ee7]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40869b:	mov    edx,0x511
  4086a0:	lea    rcx,[rip+0xa7d8]        # 412e7f <flatcc_builder_padding_base@@Base+0xb0f>
  4086a7:	call   403060 <__assert_fail@plt>
  4086ac:	mov    rax,QWORD PTR [rbp-0x10]
  4086b0:	movzx  ecx,WORD PTR [rax+0x10]
  4086b4:	cmp    ecx,DWORD PTR [rbp-0x1c]
  4086b7:	jge    4086c9 <flatcc_builder_check_required@@Base+0x69>
  4086bd:	mov    DWORD PTR [rbp-0x4],0x0
  4086c4:	jmp    408725 <flatcc_builder_check_required@@Base+0xc5>
  4086c9:	mov    DWORD PTR [rbp-0x20],0x0
  4086d0:	mov    eax,DWORD PTR [rbp-0x20]
  4086d3:	cmp    eax,DWORD PTR [rbp-0x1c]
  4086d6:	jge    40871e <flatcc_builder_check_required@@Base+0xbe>
  4086dc:	mov    rax,QWORD PTR [rbp-0x10]
  4086e0:	mov    rax,QWORD PTR [rax+0x8]
  4086e4:	mov    rcx,QWORD PTR [rbp-0x18]
  4086e8:	movsxd rdx,DWORD PTR [rbp-0x20]
  4086ec:	movzx  esi,WORD PTR [rcx+rdx*2]
  4086f0:	mov    ecx,esi
  4086f2:	movzx  esi,WORD PTR [rax+rcx*2]
  4086f6:	cmp    esi,0x0
  4086f9:	jne    40870b <flatcc_builder_check_required@@Base+0xab>
  4086ff:	mov    DWORD PTR [rbp-0x4],0x0
  408706:	jmp    408725 <flatcc_builder_check_required@@Base+0xc5>
  40870b:	jmp    408710 <flatcc_builder_check_required@@Base+0xb0>
  408710:	mov    eax,DWORD PTR [rbp-0x20]
  408713:	add    eax,0x1
  408716:	mov    DWORD PTR [rbp-0x20],eax
  408719:	jmp    4086d0 <flatcc_builder_check_required@@Base+0x70>
  40871e:	mov    DWORD PTR [rbp-0x4],0x1
  408725:	mov    eax,DWORD PTR [rbp-0x4]
  408728:	add    rsp,0x20
  40872c:	pop    rbp
  40872d:	ret    
  40872e:	xchg   ax,ax

0000000000408730 <flatcc_builder_end_table@@Base>:
  408730:	push   rbp
  408731:	mov    rbp,rsp
  408734:	sub    rsp,0x40
  408738:	mov    QWORD PTR [rbp-0x10],rdi
  40873c:	mov    rax,QWORD PTR [rbp-0x10]
  408740:	mov    rax,QWORD PTR [rax+0x30]
  408744:	movzx  ecx,WORD PTR [rax+0xe]
  408748:	cmp    ecx,0x3
  40874b:	jne    408756 <flatcc_builder_end_table@@Base+0x26>
  408751:	jmp    408775 <flatcc_builder_end_table@@Base+0x45>
  408756:	lea    rdi,[rip+0xa654]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  40875d:	lea    rsi,[rip+0x9e1e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408764:	mov    edx,0x525
  408769:	lea    rcx,[rip+0xa769]        # 412ed9 <flatcc_builder_padding_base@@Base+0xb69>
  408770:	call   403060 <__assert_fail@plt>
  408775:	mov    rax,QWORD PTR [rbp-0x10]
  408779:	mov    rax,QWORD PTR [rax+0x8]
  40877d:	add    rax,0xfffffffffffffffc
  408783:	mov    QWORD PTR [rbp-0x18],rax
  408787:	mov    rax,QWORD PTR [rbp-0x10]
  40878b:	movzx  ecx,WORD PTR [rax+0x10]
  40878f:	add    ecx,0x2
  408792:	movsxd rax,ecx
  408795:	shl    rax,0x1
  408799:	mov    WORD PTR [rbp-0x1a],ax
  40879d:	mov    ax,WORD PTR [rbp-0x1a]
  4087a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4087a5:	mov    WORD PTR [rdx],ax
  4087a8:	mov    rdx,QWORD PTR [rbp-0x10]
  4087ac:	mov    ecx,DWORD PTR [rdx+0x20]
  4087af:	movzx  esi,cx
  4087b2:	mov    edx,esi
  4087b4:	add    rdx,0x4
  4087bb:	mov    rdi,QWORD PTR [rbp-0x18]
  4087bf:	mov    WORD PTR [rdi+0x2],dx
  4087c3:	mov    rdi,QWORD PTR [rbp-0x18]
  4087c7:	movzx  esi,WORD PTR [rdi]
  4087ca:	mov    rdi,QWORD PTR [rbp-0x10]
  4087ce:	xor    esi,DWORD PTR [rdi+0x14]
  4087d1:	imul   esi,esi,0x9e3779b1
  4087d7:	mov    rdi,QWORD PTR [rbp-0x18]
  4087db:	movzx  r8d,WORD PTR [rdi+0x2]
  4087e0:	xor    esi,r8d
  4087e3:	imul   esi,esi,0x9e3779b1
  4087e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4087ed:	mov    DWORD PTR [rdi+0x14],esi
  4087f0:	mov    rdi,QWORD PTR [rbp-0x10]
  4087f4:	mov    rsi,QWORD PTR [rbp-0x18]
  4087f8:	mov    ax,WORD PTR [rbp-0x1a]
  4087fc:	mov    r9,QWORD PTR [rbp-0x10]
  408800:	mov    ecx,DWORD PTR [r9+0x14]
  408804:	movzx  edx,ax
  408807:	call   407dd0 <flatcc_builder_create_cached_vtable@@Base>
  40880c:	mov    DWORD PTR [rbp-0x24],eax
  40880f:	cmp    eax,0x0
  408812:	jne    408824 <flatcc_builder_end_table@@Base+0xf4>
  408818:	mov    DWORD PTR [rbp-0x4],0x0
  40881f:	jmp    40893f <flatcc_builder_end_table@@Base+0x20f>
  408824:	xor    esi,esi
  408826:	mov    rax,QWORD PTR [rbp-0x18]
  40882a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40882e:	mov    edx,ecx
  408830:	mov    rdi,rax
  408833:	call   403070 <memset@plt>
  408838:	mov    rax,QWORD PTR [rbp-0x10]
  40883c:	mov    rax,QWORD PTR [rax+0x88]
  408843:	mov    rdx,QWORD PTR [rbp-0x10]
  408847:	mov    rdx,QWORD PTR [rdx+0x30]
  40884b:	mov    ecx,DWORD PTR [rdx+0x14]
  40884e:	mov    edx,ecx
  408850:	add    rax,rdx
  408853:	mov    QWORD PTR [rbp-0x30],rax
  408857:	mov    rax,QWORD PTR [rbp-0x10]
  40885b:	mov    rax,QWORD PTR [rax]
  40885e:	mov    rdx,QWORD PTR [rbp-0x30]
  408862:	sub    rax,rdx
  408865:	sar    rax,0x1
  408869:	mov    DWORD PTR [rbp-0x28],eax
  40886c:	mov    rdi,QWORD PTR [rbp-0x10]
  408870:	mov    rdx,QWORD PTR [rbp-0x10]
  408874:	mov    rsi,QWORD PTR [rdx+0x18]
  408878:	mov    rdx,QWORD PTR [rbp-0x10]
  40887c:	mov    eax,DWORD PTR [rdx+0x20]
  40887f:	mov    edx,eax
  408881:	mov    r8,QWORD PTR [rbp-0x10]
  408885:	mov    r9w,WORD PTR [r8+0xea]
  40888d:	mov    r8,QWORD PTR [rbp-0x30]
  408891:	mov    eax,DWORD PTR [rbp-0x28]
  408894:	mov    ecx,DWORD PTR [rbp-0x24]
  408897:	movzx  r10d,r9w
  40889b:	mov    DWORD PTR [rbp-0x34],ecx
  40889e:	mov    ecx,r10d
  4088a1:	mov    r9d,eax
  4088a4:	mov    eax,DWORD PTR [rbp-0x34]
  4088a7:	mov    DWORD PTR [rsp],eax
  4088aa:	call   408190 <flatcc_builder_create_table@@Base>
  4088af:	xor    ecx,ecx
  4088b1:	mov    DWORD PTR [rbp-0x20],eax
  4088b4:	cmp    ecx,eax
  4088b6:	jne    4088c8 <flatcc_builder_end_table@@Base+0x198>
  4088bc:	mov    DWORD PTR [rbp-0x4],0x0
  4088c3:	jmp    40893f <flatcc_builder_end_table@@Base+0x20f>
  4088c8:	mov    rax,QWORD PTR [rbp-0x10]
  4088cc:	mov    rax,QWORD PTR [rax+0x30]
  4088d0:	mov    ecx,DWORD PTR [rax+0x18]
  4088d3:	mov    rax,QWORD PTR [rbp-0x10]
  4088d7:	mov    DWORD PTR [rax+0x14],ecx
  4088da:	mov    rax,QWORD PTR [rbp-0x10]
  4088de:	mov    rax,QWORD PTR [rax+0x30]
  4088e2:	mov    dx,WORD PTR [rax+0x1c]
  4088e6:	mov    rax,QWORD PTR [rbp-0x10]
  4088ea:	mov    WORD PTR [rax+0x10],dx
  4088ee:	mov    rax,QWORD PTR [rbp-0x10]
  4088f2:	mov    rax,QWORD PTR [rax+0x58]
  4088f6:	mov    rsi,QWORD PTR [rbp-0x10]
  4088fa:	mov    rsi,QWORD PTR [rsi+0x30]
  4088fe:	mov    ecx,DWORD PTR [rsi+0x10]
  408901:	mov    esi,ecx
  408903:	add    rax,rsi
  408906:	mov    rsi,QWORD PTR [rbp-0x10]
  40890a:	mov    QWORD PTR [rsi+0x8],rax
  40890e:	mov    rax,QWORD PTR [rbp-0x10]
  408912:	mov    rax,QWORD PTR [rax+0x88]
  408919:	mov    rsi,QWORD PTR [rbp-0x10]
  40891d:	mov    rsi,QWORD PTR [rsi+0x30]
  408921:	mov    ecx,DWORD PTR [rsi+0x14]
  408924:	mov    esi,ecx
  408926:	add    rax,rsi
  408929:	mov    rsi,QWORD PTR [rbp-0x10]
  40892d:	mov    QWORD PTR [rsi],rax
  408930:	mov    rdi,QWORD PTR [rbp-0x10]
  408934:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  408939:	mov    ecx,DWORD PTR [rbp-0x20]
  40893c:	mov    DWORD PTR [rbp-0x4],ecx
  40893f:	mov    eax,DWORD PTR [rbp-0x4]
  408942:	add    rsp,0x40
  408946:	pop    rbp
  408947:	ret    
  408948:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408950 <flatcc_builder_create_vector@@Base>:
  408950:	push   rbp
  408951:	mov    rbp,rsp
  408954:	sub    rsp,0xe0
  40895b:	mov    QWORD PTR [rbp-0x10],rdi
  40895f:	mov    QWORD PTR [rbp-0x18],rsi
  408963:	mov    QWORD PTR [rbp-0x20],rdx
  408967:	mov    QWORD PTR [rbp-0x28],rcx
  40896b:	mov    WORD PTR [rbp-0x2a],r8w
  408970:	mov    QWORD PTR [rbp-0x38],r9
  408974:	mov    rax,QWORD PTR [rbp-0x20]
  408978:	cmp    rax,QWORD PTR [rbp-0x38]
  40897c:	jbe    4089c0 <flatcc_builder_create_vector@@Base+0x70>
  408982:	mov    rax,QWORD PTR [rbp-0x20]
  408986:	cmp    rax,QWORD PTR [rbp-0x38]
  40898a:	ja     408995 <flatcc_builder_create_vector@@Base+0x45>
  408990:	jmp    4089b4 <flatcc_builder_create_vector@@Base+0x64>
  408995:	lea    rdi,[rip+0xa57f]        # 412f1b <flatcc_builder_padding_base@@Base+0xbab>
  40899c:	lea    rsi,[rip+0x9bdf]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4089a3:	mov    edx,0x555
  4089a8:	lea    rcx,[rip+0xa57f]        # 412f2e <flatcc_builder_padding_base@@Base+0xbbe>
  4089af:	call   403060 <__assert_fail@plt>
  4089b4:	mov    DWORD PTR [rbp-0x4],0x0
  4089bb:	jmp    408b7c <flatcc_builder_create_vector@@Base+0x22c>
  4089c0:	lea    rdi,[rbp-0x2a]
  4089c4:	mov    esi,0x4
  4089c9:	call   407700 <flatcc_builder_start_vector@@Base+0xb0>
  4089ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4089d2:	movzx  esi,WORD PTR [rbp-0x2a]
  4089d6:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  4089db:	mov    rax,QWORD PTR [rbp-0x20]
  4089df:	mov    rcx,QWORD PTR [rbp-0x28]
  4089e3:	imul   eax,ecx
  4089e6:	mov    DWORD PTR [rbp-0x3c],eax
  4089e9:	mov    rdx,QWORD PTR [rbp-0x20]
  4089ed:	mov    edi,edx
  4089ef:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  4089f4:	mov    DWORD PTR [rbp-0x44],eax
  4089f7:	mov    rdi,QWORD PTR [rbp-0x10]
  4089fb:	mov    esi,DWORD PTR [rbp-0x3c]
  4089fe:	movzx  edx,WORD PTR [rbp-0x2a]
  408a02:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  408a07:	mov    DWORD PTR [rbp-0x40],eax
  408a0a:	mov    QWORD PTR [rbp-0xd8],0x0
  408a15:	mov    DWORD PTR [rbp-0xd0],0x0
  408a1f:	mov    rdi,QWORD PTR [rbp-0xd8]
  408a26:	add    rdi,0x4
  408a2d:	mov    QWORD PTR [rbp-0xd8],rdi
  408a34:	lea    rdi,[rbp-0x44]
  408a38:	lea    r8,[rbp-0xd8]
  408a3f:	mov    r9,r8
  408a42:	add    r9,0x10
  408a49:	movsxd r10,DWORD PTR [rbp-0xd0]
  408a50:	shl    r10,0x4
  408a54:	add    r9,r10
  408a57:	mov    QWORD PTR [r9],rdi
  408a5a:	add    r8,0x10
  408a61:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408a68:	shl    rdi,0x4
  408a6c:	add    r8,rdi
  408a6f:	mov    QWORD PTR [r8+0x8],0x4
  408a77:	mov    eax,DWORD PTR [rbp-0xd0]
  408a7d:	add    eax,0x1
  408a80:	mov    DWORD PTR [rbp-0xd0],eax
  408a86:	cmp    DWORD PTR [rbp-0x3c],0x0
  408a8a:	jbe    408af6 <flatcc_builder_create_vector@@Base+0x1a6>
  408a90:	mov    eax,DWORD PTR [rbp-0x3c]
  408a93:	mov    ecx,eax
  408a95:	add    rcx,QWORD PTR [rbp-0xd8]
  408a9c:	mov    QWORD PTR [rbp-0xd8],rcx
  408aa3:	mov    rcx,QWORD PTR [rbp-0x18]
  408aa7:	lea    rdx,[rbp-0xd8]
  408aae:	mov    rsi,rdx
  408ab1:	add    rsi,0x10
  408ab8:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408abf:	shl    rdi,0x4
  408ac3:	add    rsi,rdi
  408ac6:	mov    QWORD PTR [rsi],rcx
  408ac9:	mov    eax,DWORD PTR [rbp-0x3c]
  408acc:	mov    ecx,eax
  408ace:	add    rdx,0x10
  408ad5:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408adc:	shl    rsi,0x4
  408ae0:	add    rdx,rsi
  408ae3:	mov    QWORD PTR [rdx+0x8],rcx
  408ae7:	mov    eax,DWORD PTR [rbp-0xd0]
  408aed:	add    eax,0x1
  408af0:	mov    DWORD PTR [rbp-0xd0],eax
  408af6:	cmp    DWORD PTR [rbp-0x40],0x0
  408afa:	jbe    408b69 <flatcc_builder_create_vector@@Base+0x219>
  408b00:	lea    rax,[rip+0x9869]        # 412370 <flatcc_builder_padding_base@@Base>
  408b07:	mov    ecx,DWORD PTR [rbp-0x40]
  408b0a:	mov    edx,ecx
  408b0c:	add    rdx,QWORD PTR [rbp-0xd8]
  408b13:	mov    QWORD PTR [rbp-0xd8],rdx
  408b1a:	lea    rdx,[rbp-0xd8]
  408b21:	mov    rsi,rdx
  408b24:	add    rsi,0x10
  408b2b:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408b32:	shl    rdi,0x4
  408b36:	add    rsi,rdi
  408b39:	mov    QWORD PTR [rsi],rax
  408b3c:	mov    ecx,DWORD PTR [rbp-0x40]
  408b3f:	mov    eax,ecx
  408b41:	add    rdx,0x10
  408b48:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408b4f:	shl    rsi,0x4
  408b53:	add    rdx,rsi
  408b56:	mov    QWORD PTR [rdx+0x8],rax
  408b5a:	mov    ecx,DWORD PTR [rbp-0xd0]
  408b60:	add    ecx,0x1
  408b63:	mov    DWORD PTR [rbp-0xd0],ecx
  408b69:	mov    rdi,QWORD PTR [rbp-0x10]
  408b6d:	lea    rsi,[rbp-0xd8]
  408b74:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  408b79:	mov    DWORD PTR [rbp-0x4],eax
  408b7c:	mov    eax,DWORD PTR [rbp-0x4]
  408b7f:	add    rsp,0xe0
  408b86:	pop    rbp
  408b87:	ret    
  408b88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408b90 <flatcc_builder_end_vector@@Base>:
  408b90:	push   rbp
  408b91:	mov    rbp,rsp
  408b94:	sub    rsp,0x20
  408b98:	mov    QWORD PTR [rbp-0x10],rdi
  408b9c:	mov    rax,QWORD PTR [rbp-0x10]
  408ba0:	mov    rax,QWORD PTR [rax+0x30]
  408ba4:	movzx  ecx,WORD PTR [rax+0xe]
  408ba8:	cmp    ecx,0x4
  408bab:	jne    408bb6 <flatcc_builder_end_vector@@Base+0x26>
  408bb1:	jmp    408bd5 <flatcc_builder_end_vector@@Base+0x45>
  408bb6:	lea    rdi,[rip+0x9d02]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  408bbd:	lea    rsi,[rip+0x99be]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408bc4:	mov    edx,0x578
  408bc9:	lea    rcx,[rip+0xa3d4]        # 412fa4 <flatcc_builder_padding_base@@Base+0xc34>
  408bd0:	call   403060 <__assert_fail@plt>
  408bd5:	mov    rdi,QWORD PTR [rbp-0x10]
  408bd9:	mov    rax,QWORD PTR [rbp-0x10]
  408bdd:	mov    rsi,QWORD PTR [rax+0x18]
  408be1:	mov    rax,QWORD PTR [rbp-0x10]
  408be5:	mov    rax,QWORD PTR [rax+0x30]
  408be9:	mov    ecx,DWORD PTR [rax+0x14]
  408bec:	mov    edx,ecx
  408bee:	mov    rax,QWORD PTR [rbp-0x10]
  408bf2:	mov    rax,QWORD PTR [rax+0x30]
  408bf6:	mov    ecx,DWORD PTR [rax+0x10]
  408bf9:	mov    rax,QWORD PTR [rbp-0x10]
  408bfd:	mov    r8w,WORD PTR [rax+0xea]
  408c05:	mov    rax,QWORD PTR [rbp-0x10]
  408c09:	mov    rax,QWORD PTR [rax+0x30]
  408c0d:	mov    r9d,DWORD PTR [rax+0x18]
  408c11:	movzx  r8d,r8w
  408c15:	call   408950 <flatcc_builder_create_vector@@Base>
  408c1a:	xor    r8d,r8d
  408c1d:	mov    DWORD PTR [rbp-0x14],eax
  408c20:	cmp    r8d,eax
  408c23:	jne    408c35 <flatcc_builder_end_vector@@Base+0xa5>
  408c29:	mov    DWORD PTR [rbp-0x4],0x0
  408c30:	jmp    408c44 <flatcc_builder_end_vector@@Base+0xb4>
  408c35:	mov    rdi,QWORD PTR [rbp-0x10]
  408c39:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  408c3e:	mov    eax,DWORD PTR [rbp-0x14]
  408c41:	mov    DWORD PTR [rbp-0x4],eax
  408c44:	mov    eax,DWORD PTR [rbp-0x4]
  408c47:	add    rsp,0x20
  408c4b:	pop    rbp
  408c4c:	ret    
  408c4d:	nop    DWORD PTR [rax]

0000000000408c50 <flatcc_builder_vector_count@@Base>:
  408c50:	push   rbp
  408c51:	mov    rbp,rsp
  408c54:	mov    QWORD PTR [rbp-0x8],rdi
  408c58:	mov    rax,QWORD PTR [rbp-0x8]
  408c5c:	mov    rax,QWORD PTR [rax+0x30]
  408c60:	mov    ecx,DWORD PTR [rax+0x14]
  408c63:	mov    eax,ecx
  408c65:	pop    rbp
  408c66:	ret    
  408c67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408c70 <flatcc_builder_vector_edit@@Base>:
  408c70:	push   rbp
  408c71:	mov    rbp,rsp
  408c74:	mov    QWORD PTR [rbp-0x8],rdi
  408c78:	mov    rax,QWORD PTR [rbp-0x8]
  408c7c:	mov    rax,QWORD PTR [rax+0x18]
  408c80:	pop    rbp
  408c81:	ret    
  408c82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c8c:	nop    DWORD PTR [rax+0x0]

0000000000408c90 <flatcc_builder_create_offset_vector_direct@@Base>:
  408c90:	push   rbp
  408c91:	mov    rbp,rsp
  408c94:	sub    rsp,0x20
  408c98:	xor    eax,eax
  408c9a:	mov    ecx,eax
  408c9c:	mov    QWORD PTR [rbp-0x8],rdi
  408ca0:	mov    QWORD PTR [rbp-0x10],rsi
  408ca4:	mov    QWORD PTR [rbp-0x18],rdx
  408ca8:	mov    rdi,QWORD PTR [rbp-0x8]
  408cac:	mov    rsi,QWORD PTR [rbp-0x10]
  408cb0:	mov    rdx,QWORD PTR [rbp-0x18]
  408cb4:	call   408cc0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408cb9:	add    rsp,0x20
  408cbd:	pop    rbp
  408cbe:	ret    
  408cbf:	nop
  408cc0:	push   rbp
  408cc1:	mov    rbp,rsp
  408cc4:	sub    rsp,0xd0
  408ccb:	mov    QWORD PTR [rbp-0x10],rdi
  408ccf:	mov    QWORD PTR [rbp-0x18],rsi
  408cd3:	mov    QWORD PTR [rbp-0x20],rdx
  408cd7:	mov    QWORD PTR [rbp-0x28],rcx
  408cdb:	mov    rax,QWORD PTR [rbp-0x20]
  408cdf:	mov    eax,eax
  408ce1:	mov    ecx,eax
  408ce3:	cmp    rcx,0x3fffffff
  408cea:	jbe    408cfc <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
  408cf0:	mov    DWORD PTR [rbp-0x4],0x0
  408cf7:	jmp    408ff8 <flatcc_builder_create_offset_vector_direct@@Base+0x368>
  408cfc:	mov    rdi,QWORD PTR [rbp-0x10]
  408d00:	mov    esi,0x4
  408d05:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  408d0a:	mov    rax,QWORD PTR [rbp-0x20]
  408d0e:	mov    eax,eax
  408d10:	mov    ecx,eax
  408d12:	shl    rcx,0x2
  408d16:	mov    DWORD PTR [rbp-0x2c],ecx
  408d19:	mov    rdx,QWORD PTR [rbp-0x20]
  408d1d:	mov    edi,edx
  408d1f:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  408d24:	mov    DWORD PTR [rbp-0x34],eax
  408d27:	mov    rdi,QWORD PTR [rbp-0x10]
  408d2b:	mov    esi,DWORD PTR [rbp-0x2c]
  408d2e:	mov    edx,0x4
  408d33:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  408d38:	mov    DWORD PTR [rbp-0x30],eax
  408d3b:	mov    QWORD PTR [rbp-0xd0],0x0
  408d46:	mov    DWORD PTR [rbp-0xc8],0x0
  408d50:	mov    rdi,QWORD PTR [rbp-0xd0]
  408d57:	add    rdi,0x4
  408d5e:	mov    QWORD PTR [rbp-0xd0],rdi
  408d65:	lea    rdi,[rbp-0x34]
  408d69:	lea    r8,[rbp-0xd0]
  408d70:	mov    r9,r8
  408d73:	add    r9,0x10
  408d7a:	movsxd r10,DWORD PTR [rbp-0xc8]
  408d81:	shl    r10,0x4
  408d85:	add    r9,r10
  408d88:	mov    QWORD PTR [r9],rdi
  408d8b:	add    r8,0x10
  408d92:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408d99:	shl    rdi,0x4
  408d9d:	add    r8,rdi
  408da0:	mov    QWORD PTR [r8+0x8],0x4
  408da8:	mov    eax,DWORD PTR [rbp-0xc8]
  408dae:	add    eax,0x1
  408db1:	mov    DWORD PTR [rbp-0xc8],eax
  408db7:	cmp    DWORD PTR [rbp-0x2c],0x0
  408dbb:	jbe    408e27 <flatcc_builder_create_offset_vector_direct@@Base+0x197>
  408dc1:	mov    eax,DWORD PTR [rbp-0x2c]
  408dc4:	mov    ecx,eax
  408dc6:	add    rcx,QWORD PTR [rbp-0xd0]
  408dcd:	mov    QWORD PTR [rbp-0xd0],rcx
  408dd4:	mov    rcx,QWORD PTR [rbp-0x18]
  408dd8:	lea    rdx,[rbp-0xd0]
  408ddf:	mov    rsi,rdx
  408de2:	add    rsi,0x10
  408de9:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408df0:	shl    rdi,0x4
  408df4:	add    rsi,rdi
  408df7:	mov    QWORD PTR [rsi],rcx
  408dfa:	mov    eax,DWORD PTR [rbp-0x2c]
  408dfd:	mov    ecx,eax
  408dff:	add    rdx,0x10
  408e06:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408e0d:	shl    rsi,0x4
  408e11:	add    rdx,rsi
  408e14:	mov    QWORD PTR [rdx+0x8],rcx
  408e18:	mov    eax,DWORD PTR [rbp-0xc8]
  408e1e:	add    eax,0x1
  408e21:	mov    DWORD PTR [rbp-0xc8],eax
  408e27:	cmp    DWORD PTR [rbp-0x30],0x0
  408e2b:	jbe    408e9a <flatcc_builder_create_offset_vector_direct@@Base+0x20a>
  408e31:	lea    rax,[rip+0x9538]        # 412370 <flatcc_builder_padding_base@@Base>
  408e38:	mov    ecx,DWORD PTR [rbp-0x30]
  408e3b:	mov    edx,ecx
  408e3d:	add    rdx,QWORD PTR [rbp-0xd0]
  408e44:	mov    QWORD PTR [rbp-0xd0],rdx
  408e4b:	lea    rdx,[rbp-0xd0]
  408e52:	mov    rsi,rdx
  408e55:	add    rsi,0x10
  408e5c:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408e63:	shl    rdi,0x4
  408e67:	add    rsi,rdi
  408e6a:	mov    QWORD PTR [rsi],rax
  408e6d:	mov    ecx,DWORD PTR [rbp-0x30]
  408e70:	mov    eax,ecx
  408e72:	add    rdx,0x10
  408e79:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408e80:	shl    rsi,0x4
  408e84:	add    rdx,rsi
  408e87:	mov    QWORD PTR [rdx+0x8],rax
  408e8b:	mov    ecx,DWORD PTR [rbp-0xc8]
  408e91:	add    ecx,0x1
  408e94:	mov    DWORD PTR [rbp-0xc8],ecx
  408e9a:	mov    rax,QWORD PTR [rbp-0x10]
  408e9e:	mov    ecx,DWORD PTR [rax+0xf0]
  408ea4:	mov    rax,QWORD PTR [rbp-0xd0]
  408eab:	sub    ecx,eax
  408ead:	mov    DWORD PTR [rbp-0x38],ecx
  408eb0:	mov    DWORD PTR [rbp-0x40],0x0
  408eb7:	mov    eax,DWORD PTR [rbp-0x40]
  408eba:	mov    rcx,QWORD PTR [rbp-0x20]
  408ebe:	cmp    eax,ecx
  408ec0:	jae    408fe5 <flatcc_builder_create_offset_vector_direct@@Base+0x355>
  408ec6:	mov    rax,QWORD PTR [rbp-0x18]
  408eca:	mov    ecx,DWORD PTR [rbp-0x40]
  408ecd:	mov    edx,ecx
  408ecf:	cmp    DWORD PTR [rax+rdx*4],0x0
  408ed3:	je     408f64 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
  408ed9:	mov    rax,QWORD PTR [rbp-0x18]
  408edd:	mov    ecx,DWORD PTR [rbp-0x40]
  408ee0:	mov    edx,ecx
  408ee2:	mov    ecx,DWORD PTR [rax+rdx*4]
  408ee5:	sub    ecx,DWORD PTR [rbp-0x38]
  408ee8:	mov    ecx,ecx
  408eea:	mov    eax,ecx
  408eec:	mov    ecx,DWORD PTR [rbp-0x40]
  408eef:	mov    edx,ecx
  408ef1:	shl    rdx,0x2
  408ef5:	sub    rax,rdx
  408ef8:	sub    rax,0x4
  408efe:	mov    DWORD PTR [rbp-0x3c],eax
  408f01:	mov    edi,DWORD PTR [rbp-0x3c]
  408f04:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  408f09:	mov    rdx,QWORD PTR [rbp-0x18]
  408f0d:	mov    ecx,DWORD PTR [rbp-0x40]
  408f10:	mov    esi,ecx
  408f12:	mov    DWORD PTR [rdx+rsi*4],eax
  408f15:	cmp    QWORD PTR [rbp-0x28],0x0
  408f1a:	je     408f5f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  408f20:	mov    rax,QWORD PTR [rbp-0x28]
  408f24:	mov    ecx,DWORD PTR [rbp-0x40]
  408f27:	mov    edx,ecx
  408f29:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408f2d:	cmp    ecx,0x0
  408f30:	je     408f3b <flatcc_builder_create_offset_vector_direct@@Base+0x2ab>
  408f36:	jmp    408f5a <flatcc_builder_create_offset_vector_direct@@Base+0x2ca>
  408f3b:	lea    rdi,[rip+0xa7f4]        # 413736 <flatcc_builder_padding_base@@Base+0x13c6>
  408f42:	lea    rsi,[rip+0x9639]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408f49:	mov    edx,0x5b1
  408f4e:	lea    rcx,[rip+0xa7ef]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  408f55:	call   403060 <__assert_fail@plt>
  408f5a:	jmp    408f5f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  408f5f:	jmp    408fd2 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  408f64:	cmp    QWORD PTR [rbp-0x28],0x0
  408f69:	je     408fae <flatcc_builder_create_offset_vector_direct@@Base+0x31e>
  408f6f:	mov    rax,QWORD PTR [rbp-0x28]
  408f73:	mov    ecx,DWORD PTR [rbp-0x40]
  408f76:	mov    edx,ecx
  408f78:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408f7c:	cmp    ecx,0x0
  408f7f:	jne    408f8a <flatcc_builder_create_offset_vector_direct@@Base+0x2fa>
  408f85:	jmp    408fa9 <flatcc_builder_create_offset_vector_direct@@Base+0x319>
  408f8a:	lea    rdi,[rip+0xa836]        # 4137c7 <flatcc_builder_padding_base@@Base+0x1457>
  408f91:	lea    rsi,[rip+0x95ea]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408f98:	mov    edx,0x5b5
  408f9d:	lea    rcx,[rip+0xa7a0]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  408fa4:	call   403060 <__assert_fail@plt>
  408fa9:	jmp    408fcd <flatcc_builder_create_offset_vector_direct@@Base+0x33d>
  408fae:	lea    rdi,[rip+0xa78d]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  408fb5:	lea    rsi,[rip+0x95c6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408fbc:	mov    edx,0x5b7
  408fc1:	lea    rcx,[rip+0xa77c]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  408fc8:	call   403060 <__assert_fail@plt>
  408fcd:	jmp    408fd2 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  408fd2:	jmp    408fd7 <flatcc_builder_create_offset_vector_direct@@Base+0x347>
  408fd7:	mov    eax,DWORD PTR [rbp-0x40]
  408fda:	add    eax,0x1
  408fdd:	mov    DWORD PTR [rbp-0x40],eax
  408fe0:	jmp    408eb7 <flatcc_builder_create_offset_vector_direct@@Base+0x227>
  408fe5:	mov    rdi,QWORD PTR [rbp-0x10]
  408fe9:	lea    rsi,[rbp-0xd0]
  408ff0:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  408ff5:	mov    DWORD PTR [rbp-0x4],eax
  408ff8:	mov    eax,DWORD PTR [rbp-0x4]
  408ffb:	add    rsp,0xd0
  409002:	pop    rbp
  409003:	ret    
  409004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40900e:	xchg   ax,ax

0000000000409010 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  409010:	push   rbp
  409011:	mov    rbp,rsp
  409014:	sub    rsp,0x20
  409018:	mov    QWORD PTR [rbp-0x10],rdi
  40901c:	mov    QWORD PTR [rbp-0x18],rsi
  409020:	mov    rax,QWORD PTR [rbp-0x10]
  409024:	mov    rax,QWORD PTR [rax+0x30]
  409028:	movzx  ecx,WORD PTR [rax+0xe]
  40902c:	cmp    ecx,0x5
  40902f:	jne    40903a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  409035:	jmp    409059 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  40903a:	lea    rdi,[rip+0x9977]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  409041:	lea    rsi,[rip+0x953a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409048:	mov    edx,0x5d5
  40904d:	lea    rcx,[rip+0x9fdd]        # 413031 <flatcc_builder_padding_base@@Base+0xcc1>
  409054:	call   403060 <__assert_fail@plt>
  409059:	mov    rdi,QWORD PTR [rbp-0x10]
  40905d:	mov    rax,QWORD PTR [rbp-0x10]
  409061:	mov    rax,QWORD PTR [rax+0x18]
  409065:	mov    rcx,QWORD PTR [rbp-0x10]
  409069:	mov    rcx,QWORD PTR [rcx+0x30]
  40906d:	mov    edx,DWORD PTR [rcx+0x14]
  409070:	mov    rcx,QWORD PTR [rbp-0x18]
  409074:	mov    rsi,rax
  409077:	call   408cc0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40907c:	xor    r8d,r8d
  40907f:	mov    DWORD PTR [rbp-0x1c],eax
  409082:	cmp    r8d,eax
  409085:	jne    409097 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  40908b:	mov    DWORD PTR [rbp-0x4],0x0
  409092:	jmp    4090a6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  409097:	mov    rdi,QWORD PTR [rbp-0x10]
  40909b:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  4090a0:	mov    eax,DWORD PTR [rbp-0x1c]
  4090a3:	mov    DWORD PTR [rbp-0x4],eax
  4090a6:	mov    eax,DWORD PTR [rbp-0x4]
  4090a9:	add    rsp,0x20
  4090ad:	pop    rbp
  4090ae:	ret    
  4090af:	nop

00000000004090b0 <flatcc_builder_offset_vector_edit@@Base>:
  4090b0:	push   rbp
  4090b1:	mov    rbp,rsp
  4090b4:	mov    QWORD PTR [rbp-0x8],rdi
  4090b8:	mov    rax,QWORD PTR [rbp-0x8]
  4090bc:	mov    rax,QWORD PTR [rax+0x18]
  4090c0:	pop    rbp
  4090c1:	ret    
  4090c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090cc:	nop    DWORD PTR [rax+0x0]

00000000004090d0 <flatcc_builder_offset_vector_count@@Base>:
  4090d0:	push   rbp
  4090d1:	mov    rbp,rsp
  4090d4:	mov    QWORD PTR [rbp-0x8],rdi
  4090d8:	mov    rax,QWORD PTR [rbp-0x8]
  4090dc:	mov    rax,QWORD PTR [rax+0x30]
  4090e0:	mov    ecx,DWORD PTR [rax+0x14]
  4090e3:	mov    eax,ecx
  4090e5:	pop    rbp
  4090e6:	ret    
  4090e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004090f0 <flatcc_builder_table_add_union@@Base>:
  4090f0:	push   rbp
  4090f1:	mov    rbp,rsp
  4090f4:	sub    rsp,0x30
  4090f8:	mov    QWORD PTR [rbp-0x10],rdx
  4090fc:	mov    QWORD PTR [rbp-0x18],rdi
  409100:	mov    DWORD PTR [rbp-0x1c],esi
  409103:	mov    rax,QWORD PTR [rbp-0x18]
  409107:	mov    rax,QWORD PTR [rax+0x30]
  40910b:	movzx  ecx,WORD PTR [rax+0xe]
  40910f:	cmp    ecx,0x3
  409112:	jne    40911d <flatcc_builder_table_add_union@@Base+0x2d>
  409118:	jmp    40913c <flatcc_builder_table_add_union@@Base+0x4c>
  40911d:	lea    rdi,[rip+0x9c8d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  409124:	lea    rsi,[rip+0x9457]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40912b:	mov    edx,0x5ee
  409130:	lea    rcx,[rip+0x9f6c]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  409137:	call   403060 <__assert_fail@plt>
  40913c:	movzx  eax,BYTE PTR [rbp-0x10]
  409140:	cmp    eax,0x0
  409143:	jne    40919a <flatcc_builder_table_add_union@@Base+0xaa>
  409149:	cmp    DWORD PTR [rbp-0xc],0x0
  40914d:	je     40919a <flatcc_builder_table_add_union@@Base+0xaa>
  409153:	movzx  eax,BYTE PTR [rbp-0x10]
  409157:	cmp    eax,0x0
  40915a:	jne    40916a <flatcc_builder_table_add_union@@Base+0x7a>
  409160:	cmp    DWORD PTR [rbp-0xc],0x0
  409164:	jne    40916f <flatcc_builder_table_add_union@@Base+0x7f>
  40916a:	jmp    40918e <flatcc_builder_table_add_union@@Base+0x9e>
  40916f:	lea    rdi,[rip+0x9f85]        # 4130fb <flatcc_builder_padding_base@@Base+0xd8b>
  409176:	lea    rsi,[rip+0x9405]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40917d:	mov    edx,0x5ef
  409182:	lea    rcx,[rip+0x9f1a]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  409189:	call   403060 <__assert_fail@plt>
  40918e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409195:	jmp    40927e <flatcc_builder_table_add_union@@Base+0x18e>
  40919a:	cmp    DWORD PTR [rbp-0xc],0x0
  40919e:	je     409203 <flatcc_builder_table_add_union@@Base+0x113>
  4091a4:	mov    rdi,QWORD PTR [rbp-0x18]
  4091a8:	mov    esi,DWORD PTR [rbp-0x1c]
  4091ab:	call   409290 <flatcc_builder_table_add_offset@@Base>
  4091b0:	mov    QWORD PTR [rbp-0x28],rax
  4091b4:	cmp    QWORD PTR [rbp-0x28],0x0
  4091b9:	jne    4091fa <flatcc_builder_table_add_union@@Base+0x10a>
  4091bf:	cmp    QWORD PTR [rbp-0x28],0x0
  4091c4:	je     4091cf <flatcc_builder_table_add_union@@Base+0xdf>
  4091ca:	jmp    4091ee <flatcc_builder_table_add_union@@Base+0xfe>
  4091cf:	lea    rdi,[rip+0x9f47]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  4091d6:	lea    rsi,[rip+0x93a5]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4091dd:	mov    edx,0x5f2
  4091e2:	lea    rcx,[rip+0x9eba]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  4091e9:	call   403060 <__assert_fail@plt>
  4091ee:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4091f5:	jmp    40927e <flatcc_builder_table_add_union@@Base+0x18e>
  4091fa:	mov    eax,DWORD PTR [rbp-0xc]
  4091fd:	mov    rcx,QWORD PTR [rbp-0x28]
  409201:	mov    DWORD PTR [rcx],eax
  409203:	mov    rdi,QWORD PTR [rbp-0x18]
  409207:	mov    eax,DWORD PTR [rbp-0x1c]
  40920a:	sub    eax,0x1
  40920d:	mov    esi,eax
  40920f:	mov    edx,0x1
  409214:	mov    ecx,0x1
  409219:	call   409380 <flatcc_builder_table_add@@Base>
  40921e:	mov    QWORD PTR [rbp-0x30],rax
  409222:	cmp    QWORD PTR [rbp-0x30],0x0
  409227:	jne    409268 <flatcc_builder_table_add_union@@Base+0x178>
  40922d:	cmp    QWORD PTR [rbp-0x30],0x0
  409232:	je     40923d <flatcc_builder_table_add_union@@Base+0x14d>
  409238:	jmp    40925c <flatcc_builder_table_add_union@@Base+0x16c>
  40923d:	lea    rdi,[rip+0x9ee3]        # 413127 <flatcc_builder_padding_base@@Base+0xdb7>
  409244:	lea    rsi,[rip+0x9337]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40924b:	mov    edx,0x5f6
  409250:	lea    rcx,[rip+0x9e4c]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  409257:	call   403060 <__assert_fail@plt>
  40925c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409263:	jmp    40927e <flatcc_builder_table_add_union@@Base+0x18e>
  409268:	movzx  edi,BYTE PTR [rbp-0x10]
  40926c:	call   4094c0 <flatcc_builder_table_add@@Base+0x140>
  409271:	mov    rcx,QWORD PTR [rbp-0x30]
  409275:	mov    BYTE PTR [rcx],al
  409277:	mov    DWORD PTR [rbp-0x4],0x0
  40927e:	mov    eax,DWORD PTR [rbp-0x4]
  409281:	add    rsp,0x30
  409285:	pop    rbp
  409286:	ret    
  409287:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409290 <flatcc_builder_table_add_offset@@Base>:
  409290:	push   rbp
  409291:	mov    rbp,rsp
  409294:	sub    rsp,0x10
  409298:	mov    QWORD PTR [rbp-0x8],rdi
  40929c:	mov    DWORD PTR [rbp-0xc],esi
  40929f:	mov    rax,QWORD PTR [rbp-0x8]
  4092a3:	mov    rax,QWORD PTR [rax+0x30]
  4092a7:	movzx  ecx,WORD PTR [rax+0xe]
  4092ab:	cmp    ecx,0x3
  4092ae:	jne    4092b9 <flatcc_builder_table_add_offset@@Base+0x29>
  4092b4:	jmp    4092d8 <flatcc_builder_table_add_offset@@Base+0x48>
  4092b9:	lea    rdi,[rip+0x9af1]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  4092c0:	lea    rsi,[rip+0x92bb]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4092c7:	mov    edx,0x713
  4092cc:	lea    rcx,[rip+0xa1d2]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  4092d3:	call   403060 <__assert_fail@plt>
  4092d8:	cmp    DWORD PTR [rbp-0xc],0x0
  4092dc:	jl     4092f4 <flatcc_builder_table_add_offset@@Base+0x64>
  4092e2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4092e9:	jg     4092f4 <flatcc_builder_table_add_offset@@Base+0x64>
  4092ef:	jmp    409313 <flatcc_builder_table_add_offset@@Base+0x83>
  4092f4:	lea    rdi,[rip+0xa12a]        # 413425 <flatcc_builder_padding_base@@Base+0x10b5>
  4092fb:	lea    rsi,[rip+0x9280]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409302:	mov    edx,0x714
  409307:	lea    rcx,[rip+0xa197]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  40930e:	call   403060 <__assert_fail@plt>
  409313:	mov    rax,QWORD PTR [rbp-0x8]
  409317:	mov    rax,QWORD PTR [rax+0x8]
  40931b:	movsxd rcx,DWORD PTR [rbp-0xc]
  40931f:	movzx  edx,WORD PTR [rax+rcx*2]
  409323:	cmp    edx,0x0
  409326:	je     40934b <flatcc_builder_table_add_offset@@Base+0xbb>
  40932c:	lea    rdi,[rip+0xa40f]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  409333:	lea    rsi,[rip+0x9248]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40933a:	mov    edx,0x71b
  40933f:	lea    rcx,[rip+0xa15f]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  409346:	call   403060 <__assert_fail@plt>
  40934b:	mov    eax,DWORD PTR [rbp-0xc]
  40934e:	mov    rcx,QWORD PTR [rbp-0x8]
  409352:	xor    eax,DWORD PTR [rcx+0x14]
  409355:	imul   eax,eax,0x9e3779b1
  40935b:	xor    eax,0x4
  40935e:	imul   eax,eax,0x9e3779b1
  409364:	mov    rcx,QWORD PTR [rbp-0x8]
  409368:	mov    DWORD PTR [rcx+0x14],eax
  40936b:	mov    rdi,QWORD PTR [rbp-0x8]
  40936f:	mov    eax,DWORD PTR [rbp-0xc]
  409372:	movzx  esi,ax
  409375:	call   40a260 <flatcc_builder_table_add_copy@@Base+0x60>
  40937a:	add    rsp,0x10
  40937e:	pop    rbp
  40937f:	ret    

0000000000409380 <flatcc_builder_table_add@@Base>:
  409380:	push   rbp
  409381:	mov    rbp,rsp
  409384:	sub    rsp,0x20
  409388:	mov    QWORD PTR [rbp-0x8],rdi
  40938c:	mov    DWORD PTR [rbp-0xc],esi
  40938f:	mov    QWORD PTR [rbp-0x18],rdx
  409393:	mov    WORD PTR [rbp-0x1a],cx
  409397:	mov    rax,QWORD PTR [rbp-0x8]
  40939b:	mov    rax,QWORD PTR [rax+0x30]
  40939f:	movzx  esi,WORD PTR [rax+0xe]
  4093a3:	cmp    esi,0x3
  4093a6:	jne    4093b1 <flatcc_builder_table_add@@Base+0x31>
  4093ac:	jmp    4093d0 <flatcc_builder_table_add@@Base+0x50>
  4093b1:	lea    rdi,[rip+0x99f9]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  4093b8:	lea    rsi,[rip+0x91c3]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4093bf:	mov    edx,0x6ed
  4093c4:	lea    rcx,[rip+0xa010]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  4093cb:	call   403060 <__assert_fail@plt>
  4093d0:	cmp    DWORD PTR [rbp-0xc],0x0
  4093d4:	jl     4093ec <flatcc_builder_table_add@@Base+0x6c>
  4093da:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4093e1:	jg     4093ec <flatcc_builder_table_add@@Base+0x6c>
  4093e7:	jmp    40940b <flatcc_builder_table_add@@Base+0x8b>
  4093ec:	lea    rdi,[rip+0xa032]        # 413425 <flatcc_builder_padding_base@@Base+0x10b5>
  4093f3:	lea    rsi,[rip+0x9188]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4093fa:	mov    edx,0x6ee
  4093ff:	lea    rcx,[rip+0x9fd5]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  409406:	call   403060 <__assert_fail@plt>
  40940b:	movzx  eax,WORD PTR [rbp-0x1a]
  40940f:	mov    rcx,QWORD PTR [rbp-0x8]
  409413:	movzx  edx,WORD PTR [rcx+0xea]
  40941a:	cmp    eax,edx
  40941c:	jle    409431 <flatcc_builder_table_add@@Base+0xb1>
  409422:	mov    ax,WORD PTR [rbp-0x1a]
  409426:	mov    rcx,QWORD PTR [rbp-0x8]
  40942a:	mov    WORD PTR [rcx+0xea],ax
  409431:	mov    rax,QWORD PTR [rbp-0x8]
  409435:	mov    rax,QWORD PTR [rax+0x8]
  409439:	movsxd rcx,DWORD PTR [rbp-0xc]
  40943d:	movzx  edx,WORD PTR [rax+rcx*2]
  409441:	cmp    edx,0x0
  409444:	je     409469 <flatcc_builder_table_add@@Base+0xe9>
  40944a:	lea    rdi,[rip+0xa2f1]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  409451:	lea    rsi,[rip+0x912a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409458:	mov    edx,0x6f8
  40945d:	lea    rcx,[rip+0x9f77]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  409464:	call   403060 <__assert_fail@plt>
  409469:	mov    eax,DWORD PTR [rbp-0xc]
  40946c:	mov    rcx,QWORD PTR [rbp-0x8]
  409470:	xor    eax,DWORD PTR [rcx+0x14]
  409473:	imul   eax,eax,0x9e3779b1
  409479:	mov    rcx,QWORD PTR [rbp-0x18]
  40947d:	xor    eax,ecx
  40947f:	imul   eax,eax,0x9e3779b1
  409485:	mov    rdx,QWORD PTR [rbp-0x8]
  409489:	mov    DWORD PTR [rdx+0x14],eax
  40948c:	mov    rdi,QWORD PTR [rbp-0x8]
  409490:	mov    rdx,QWORD PTR [rbp-0x18]
  409494:	mov    si,WORD PTR [rbp-0x1a]
  409498:	mov    eax,DWORD PTR [rbp-0xc]
  40949b:	mov    WORD PTR [rbp-0x1c],si
  40949f:	mov    esi,edx
  4094a1:	mov    r8w,WORD PTR [rbp-0x1c]
  4094a6:	movzx  edx,r8w
  4094aa:	movzx  ecx,ax
  4094ad:	call   40a090 <flatcc_builder_string_len@@Base+0x20>
  4094b2:	add    rsp,0x20
  4094b6:	pop    rbp
  4094b7:	ret    
  4094b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094c0:	push   rbp
  4094c1:	mov    rbp,rsp
  4094c4:	mov    BYTE PTR [rbp-0x1],dil
  4094c8:	movzx  eax,BYTE PTR [rbp-0x1]
  4094cc:	pop    rbp
  4094cd:	ret    
  4094ce:	xchg   ax,ax

00000000004094d0 <flatcc_builder_table_add_union_vector@@Base>:
  4094d0:	push   rbp
  4094d1:	mov    rbp,rsp
  4094d4:	sub    rsp,0x30
  4094d8:	mov    QWORD PTR [rbp-0x10],rdx
  4094dc:	mov    QWORD PTR [rbp-0x18],rdi
  4094e0:	mov    DWORD PTR [rbp-0x1c],esi
  4094e3:	mov    rax,QWORD PTR [rbp-0x18]
  4094e7:	mov    rax,QWORD PTR [rax+0x30]
  4094eb:	movzx  ecx,WORD PTR [rax+0xe]
  4094ef:	cmp    ecx,0x3
  4094f2:	jne    4094fd <flatcc_builder_table_add_union_vector@@Base+0x2d>
  4094f8:	jmp    40951c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  4094fd:	lea    rdi,[rip+0x98ad]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  409504:	lea    rsi,[rip+0x9077]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40950b:	mov    edx,0x600
  409510:	lea    rcx,[rip+0x9c1c]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  409517:	call   403060 <__assert_fail@plt>
  40951c:	cmp    DWORD PTR [rbp-0x10],0x0
  409520:	sete   al
  409523:	and    al,0x1
  409525:	movzx  ecx,al
  409528:	cmp    DWORD PTR [rbp-0xc],0x0
  40952c:	sete   al
  40952f:	and    al,0x1
  409531:	movzx  edx,al
  409534:	cmp    ecx,edx
  409536:	je     40958c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  40953c:	cmp    DWORD PTR [rbp-0x10],0x0
  409540:	sete   al
  409543:	and    al,0x1
  409545:	movzx  ecx,al
  409548:	cmp    DWORD PTR [rbp-0xc],0x0
  40954c:	sete   al
  40954f:	and    al,0x1
  409551:	movzx  edx,al
  409554:	cmp    ecx,edx
  409556:	jne    409561 <flatcc_builder_table_add_union_vector@@Base+0x91>
  40955c:	jmp    409580 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  409561:	lea    rdi,[rip+0x9c2e]        # 413196 <flatcc_builder_padding_base@@Base+0xe26>
  409568:	lea    rsi,[rip+0x9013]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40956f:	mov    edx,0x601
  409574:	lea    rcx,[rip+0x9bb8]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  40957b:	call   403060 <__assert_fail@plt>
  409580:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409587:	jmp    409660 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40958c:	cmp    DWORD PTR [rbp-0x10],0x0
  409590:	je     409659 <flatcc_builder_table_add_union_vector@@Base+0x189>
  409596:	mov    rdi,QWORD PTR [rbp-0x18]
  40959a:	mov    eax,DWORD PTR [rbp-0x1c]
  40959d:	sub    eax,0x1
  4095a0:	mov    esi,eax
  4095a2:	call   409290 <flatcc_builder_table_add_offset@@Base>
  4095a7:	mov    QWORD PTR [rbp-0x28],rax
  4095ab:	cmp    QWORD PTR [rbp-0x28],0x0
  4095b0:	jne    4095f1 <flatcc_builder_table_add_union_vector@@Base+0x121>
  4095b6:	cmp    QWORD PTR [rbp-0x28],0x0
  4095bb:	je     4095c6 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  4095c1:	jmp    4095e5 <flatcc_builder_table_add_union_vector@@Base+0x115>
  4095c6:	lea    rdi,[rip+0x9b50]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  4095cd:	lea    rsi,[rip+0x8fae]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4095d4:	mov    edx,0x604
  4095d9:	lea    rcx,[rip+0x9b53]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  4095e0:	call   403060 <__assert_fail@plt>
  4095e5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4095ec:	jmp    409660 <flatcc_builder_table_add_union_vector@@Base+0x190>
  4095f1:	mov    eax,DWORD PTR [rbp-0x10]
  4095f4:	mov    rcx,QWORD PTR [rbp-0x28]
  4095f8:	mov    DWORD PTR [rcx],eax
  4095fa:	mov    rdi,QWORD PTR [rbp-0x18]
  4095fe:	mov    esi,DWORD PTR [rbp-0x1c]
  409601:	call   409290 <flatcc_builder_table_add_offset@@Base>
  409606:	mov    QWORD PTR [rbp-0x28],rax
  40960a:	cmp    QWORD PTR [rbp-0x28],0x0
  40960f:	jne    409650 <flatcc_builder_table_add_union_vector@@Base+0x180>
  409615:	cmp    QWORD PTR [rbp-0x28],0x0
  40961a:	je     409625 <flatcc_builder_table_add_union_vector@@Base+0x155>
  409620:	jmp    409644 <flatcc_builder_table_add_union_vector@@Base+0x174>
  409625:	lea    rdi,[rip+0x9af1]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  40962c:	lea    rsi,[rip+0x8f4f]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409633:	mov    edx,0x608
  409638:	lea    rcx,[rip+0x9af4]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  40963f:	call   403060 <__assert_fail@plt>
  409644:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40964b:	jmp    409660 <flatcc_builder_table_add_union_vector@@Base+0x190>
  409650:	mov    eax,DWORD PTR [rbp-0xc]
  409653:	mov    rcx,QWORD PTR [rbp-0x28]
  409657:	mov    DWORD PTR [rcx],eax
  409659:	mov    DWORD PTR [rbp-0x4],0x0
  409660:	mov    eax,DWORD PTR [rbp-0x4]
  409663:	add    rsp,0x30
  409667:	pop    rbp
  409668:	ret    
  409669:	nop    DWORD PTR [rax+0x0]

0000000000409670 <flatcc_builder_create_union_vector@@Base>:
  409670:	push   rbp
  409671:	mov    rbp,rsp
  409674:	sub    rsp,0x40
  409678:	xor    eax,eax
  40967a:	mov    QWORD PTR [rbp-0x10],rdi
  40967e:	mov    QWORD PTR [rbp-0x18],rsi
  409682:	mov    QWORD PTR [rbp-0x20],rdx
  409686:	lea    rcx,[rbp-0x8]
  40968a:	mov    rdi,rcx
  40968d:	mov    esi,eax
  40968f:	mov    edx,0x8
  409694:	call   403070 <memset@plt>
  409699:	mov    rdi,QWORD PTR [rbp-0x10]
  40969d:	call   407730 <flatcc_builder_start_offset_vector@@Base>
  4096a2:	cmp    eax,0x0
  4096a5:	je     4096b0 <flatcc_builder_create_union_vector@@Base+0x40>
  4096ab:	jmp    409785 <flatcc_builder_create_union_vector@@Base+0x115>
  4096b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4096b4:	mov    rsi,QWORD PTR [rbp-0x20]
  4096b8:	call   406f20 <flatcc_builder_extend_offset_vector@@Base>
  4096bd:	xor    ecx,ecx
  4096bf:	mov    edx,ecx
  4096c1:	cmp    rdx,rax
  4096c4:	jne    4096cf <flatcc_builder_create_union_vector@@Base+0x5f>
  4096ca:	jmp    409785 <flatcc_builder_create_union_vector@@Base+0x115>
  4096cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4096d3:	mov    rax,QWORD PTR [rbp-0x20]
  4096d7:	shl    rax,0x0
  4096db:	mov    esi,eax
  4096dd:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  4096e2:	xor    ecx,ecx
  4096e4:	mov    edx,ecx
  4096e6:	mov    QWORD PTR [rbp-0x28],rax
  4096ea:	cmp    rdx,rax
  4096ed:	jne    4096f8 <flatcc_builder_create_union_vector@@Base+0x88>
  4096f3:	jmp    409785 <flatcc_builder_create_union_vector@@Base+0x115>
  4096f8:	mov    rdi,QWORD PTR [rbp-0x10]
  4096fc:	call   4090b0 <flatcc_builder_offset_vector_edit@@Base>
  409701:	mov    QWORD PTR [rbp-0x30],rax
  409705:	mov    QWORD PTR [rbp-0x38],0x0
  40970d:	mov    rax,QWORD PTR [rbp-0x38]
  409711:	cmp    rax,QWORD PTR [rbp-0x20]
  409715:	jae    40975b <flatcc_builder_create_union_vector@@Base+0xeb>
  40971b:	mov    rax,QWORD PTR [rbp-0x18]
  40971f:	mov    rcx,QWORD PTR [rbp-0x38]
  409723:	mov    dl,BYTE PTR [rax+rcx*8]
  409726:	mov    rax,QWORD PTR [rbp-0x28]
  40972a:	mov    rcx,QWORD PTR [rbp-0x38]
  40972e:	mov    BYTE PTR [rax+rcx*1],dl
  409731:	mov    rax,QWORD PTR [rbp-0x18]
  409735:	mov    rcx,QWORD PTR [rbp-0x38]
  409739:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  40973d:	mov    rax,QWORD PTR [rbp-0x30]
  409741:	mov    rcx,QWORD PTR [rbp-0x38]
  409745:	mov    DWORD PTR [rax+rcx*4],esi
  409748:	mov    rax,QWORD PTR [rbp-0x38]
  40974c:	add    rax,0x1
  409752:	mov    QWORD PTR [rbp-0x38],rax
  409756:	jmp    40970d <flatcc_builder_create_union_vector@@Base+0x9d>
  40975b:	mov    rdi,QWORD PTR [rbp-0x10]
  40975f:	mov    rsi,QWORD PTR [rbp-0x28]
  409763:	mov    rdx,QWORD PTR [rbp-0x30]
  409767:	mov    rcx,QWORD PTR [rbp-0x20]
  40976b:	call   409790 <flatcc_builder_create_union_vector_direct@@Base>
  409770:	mov    QWORD PTR [rbp-0x40],rax
  409774:	mov    rax,QWORD PTR [rbp-0x40]
  409778:	mov    QWORD PTR [rbp-0x8],rax
  40977c:	mov    rdi,QWORD PTR [rbp-0x10]
  409780:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  409785:	mov    rax,QWORD PTR [rbp-0x8]
  409789:	add    rsp,0x40
  40978d:	pop    rbp
  40978e:	ret    
  40978f:	nop

0000000000409790 <flatcc_builder_create_union_vector_direct@@Base>:
  409790:	push   rbp
  409791:	mov    rbp,rsp
  409794:	sub    rsp,0x30
  409798:	xor    eax,eax
  40979a:	mov    QWORD PTR [rbp-0x10],rdi
  40979e:	mov    QWORD PTR [rbp-0x18],rsi
  4097a2:	mov    QWORD PTR [rbp-0x20],rdx
  4097a6:	mov    QWORD PTR [rbp-0x28],rcx
  4097aa:	lea    rcx,[rbp-0x8]
  4097ae:	mov    rdi,rcx
  4097b1:	mov    esi,eax
  4097b3:	mov    edx,0x8
  4097b8:	call   403070 <memset@plt>
  4097bd:	mov    rdi,QWORD PTR [rbp-0x10]
  4097c1:	mov    rsi,QWORD PTR [rbp-0x20]
  4097c5:	mov    rdx,QWORD PTR [rbp-0x28]
  4097c9:	mov    rcx,QWORD PTR [rbp-0x18]
  4097cd:	call   408cc0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  4097d2:	xor    r8d,r8d
  4097d5:	mov    DWORD PTR [rbp-0x4],eax
  4097d8:	cmp    r8d,eax
  4097db:	jne    4097e6 <flatcc_builder_create_union_vector_direct@@Base+0x56>
  4097e1:	jmp    409821 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  4097e6:	mov    rdi,QWORD PTR [rbp-0x10]
  4097ea:	mov    rsi,QWORD PTR [rbp-0x18]
  4097ee:	mov    rdx,QWORD PTR [rbp-0x28]
  4097f2:	mov    ecx,0x1
  4097f7:	mov    r8d,0x1
  4097fd:	mov    r9d,0xffffffff
  409803:	call   408950 <flatcc_builder_create_vector@@Base>
  409808:	xor    r8d,r8d
  40980b:	mov    DWORD PTR [rbp-0x8],eax
  40980e:	cmp    r8d,eax
  409811:	jne    40981c <flatcc_builder_create_union_vector_direct@@Base+0x8c>
  409817:	jmp    409821 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  40981c:	jmp    409821 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  409821:	mov    rax,QWORD PTR [rbp-0x8]
  409825:	add    rsp,0x30
  409829:	pop    rbp
  40982a:	ret    
  40982b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409830 <flatcc_builder_start_union_vector@@Base>:
  409830:	push   rbp
  409831:	mov    rbp,rsp
  409834:	sub    rsp,0x10
  409838:	mov    QWORD PTR [rbp-0x10],rdi
  40983c:	mov    rdi,QWORD PTR [rbp-0x10]
  409840:	mov    esi,0x4
  409845:	call   4065e0 <flatcc_builder_start_buffer@@Base+0x170>
  40984a:	cmp    eax,0x0
  40984d:	je     40985f <flatcc_builder_start_union_vector@@Base+0x2f>
  409853:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40985a:	jmp    4098a0 <flatcc_builder_start_union_vector@@Base+0x70>
  40985f:	mov    rax,QWORD PTR [rbp-0x10]
  409863:	mov    rax,QWORD PTR [rax+0x30]
  409867:	mov    DWORD PTR [rax+0x10],0x8
  40986e:	mov    rax,QWORD PTR [rbp-0x10]
  409872:	mov    rax,QWORD PTR [rax+0x30]
  409876:	mov    DWORD PTR [rax+0x14],0x0
  40987d:	mov    rax,QWORD PTR [rbp-0x10]
  409881:	mov    rax,QWORD PTR [rax+0x30]
  409885:	mov    WORD PTR [rax+0xe],0x7
  40988b:	mov    rdi,QWORD PTR [rbp-0x10]
  40988f:	mov    esi,0xfffffffc
  409894:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  409899:	mov    DWORD PTR [rbp-0x4],0x0
  4098a0:	mov    eax,DWORD PTR [rbp-0x4]
  4098a3:	add    rsp,0x10
  4098a7:	pop    rbp
  4098a8:	ret    
  4098a9:	nop    DWORD PTR [rax+0x0]

00000000004098b0 <flatcc_builder_end_union_vector@@Base>:
  4098b0:	push   rbp
  4098b1:	mov    rbp,rsp
  4098b4:	sub    rsp,0x40
  4098b8:	xor    esi,esi
  4098ba:	mov    QWORD PTR [rbp-0x10],rdi
  4098be:	lea    rax,[rbp-0x8]
  4098c2:	mov    rdi,rax
  4098c5:	mov    edx,0x8
  4098ca:	call   403070 <memset@plt>
  4098cf:	mov    rax,QWORD PTR [rbp-0x10]
  4098d3:	mov    rax,QWORD PTR [rax+0x30]
  4098d7:	movzx  ecx,WORD PTR [rax+0xe]
  4098db:	cmp    ecx,0x7
  4098de:	jne    4098e9 <flatcc_builder_end_union_vector@@Base+0x39>
  4098e4:	jmp    409908 <flatcc_builder_end_union_vector@@Base+0x58>
  4098e9:	lea    rdi,[rip+0x98ce]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  4098f0:	lea    rsi,[rip+0x8c8b]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4098f7:	mov    edx,0x651
  4098fc:	lea    rcx,[rip+0x98ed]        # 4131f0 <flatcc_builder_padding_base@@Base+0xe80>
  409903:	call   403060 <__assert_fail@plt>
  409908:	mov    rdi,QWORD PTR [rbp-0x10]
  40990c:	call   4099f0 <flatcc_builder_union_vector_count@@Base>
  409911:	mov    QWORD PTR [rbp-0x38],rax
  409915:	mov    rdi,QWORD PTR [rbp-0x10]
  409919:	imul   rax,QWORD PTR [rbp-0x38],0x5
  409921:	mov    esi,eax
  409923:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  409928:	xor    ecx,ecx
  40992a:	mov    edx,ecx
  40992c:	mov    QWORD PTR [rbp-0x28],rax
  409930:	cmp    rdx,rax
  409933:	jne    40993e <flatcc_builder_end_union_vector@@Base+0x8e>
  409939:	jmp    4099de <flatcc_builder_end_union_vector@@Base+0x12e>
  40993e:	mov    rax,QWORD PTR [rbp-0x28]
  409942:	mov    rcx,QWORD PTR [rbp-0x38]
  409946:	shl    rcx,0x2
  40994a:	add    rax,rcx
  40994d:	mov    QWORD PTR [rbp-0x18],rax
  409951:	mov    rdi,QWORD PTR [rbp-0x10]
  409955:	call   409a10 <flatcc_builder_union_vector_edit@@Base>
  40995a:	mov    QWORD PTR [rbp-0x20],rax
  40995e:	mov    QWORD PTR [rbp-0x30],0x0
  409966:	mov    rax,QWORD PTR [rbp-0x30]
  40996a:	cmp    rax,QWORD PTR [rbp-0x38]
  40996e:	jae    4099b4 <flatcc_builder_end_union_vector@@Base+0x104>
  409974:	mov    rax,QWORD PTR [rbp-0x20]
  409978:	mov    rcx,QWORD PTR [rbp-0x30]
  40997c:	mov    dl,BYTE PTR [rax+rcx*8]
  40997f:	mov    rax,QWORD PTR [rbp-0x18]
  409983:	mov    rcx,QWORD PTR [rbp-0x30]
  409987:	mov    BYTE PTR [rax+rcx*1],dl
  40998a:	mov    rax,QWORD PTR [rbp-0x20]
  40998e:	mov    rcx,QWORD PTR [rbp-0x30]
  409992:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409996:	mov    rax,QWORD PTR [rbp-0x28]
  40999a:	mov    rcx,QWORD PTR [rbp-0x30]
  40999e:	mov    DWORD PTR [rax+rcx*4],esi
  4099a1:	mov    rax,QWORD PTR [rbp-0x30]
  4099a5:	add    rax,0x1
  4099ab:	mov    QWORD PTR [rbp-0x30],rax
  4099af:	jmp    409966 <flatcc_builder_end_union_vector@@Base+0xb6>
  4099b4:	mov    rdi,QWORD PTR [rbp-0x10]
  4099b8:	mov    rsi,QWORD PTR [rbp-0x18]
  4099bc:	mov    rdx,QWORD PTR [rbp-0x28]
  4099c0:	mov    rcx,QWORD PTR [rbp-0x38]
  4099c4:	call   409790 <flatcc_builder_create_union_vector_direct@@Base>
  4099c9:	mov    QWORD PTR [rbp-0x40],rax
  4099cd:	mov    rax,QWORD PTR [rbp-0x40]
  4099d1:	mov    QWORD PTR [rbp-0x8],rax
  4099d5:	mov    rdi,QWORD PTR [rbp-0x10]
  4099d9:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  4099de:	mov    rax,QWORD PTR [rbp-0x8]
  4099e2:	add    rsp,0x40
  4099e6:	pop    rbp
  4099e7:	ret    
  4099e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004099f0 <flatcc_builder_union_vector_count@@Base>:
  4099f0:	push   rbp
  4099f1:	mov    rbp,rsp
  4099f4:	mov    QWORD PTR [rbp-0x8],rdi
  4099f8:	mov    rax,QWORD PTR [rbp-0x8]
  4099fc:	mov    rax,QWORD PTR [rax+0x30]
  409a00:	mov    ecx,DWORD PTR [rax+0x14]
  409a03:	mov    eax,ecx
  409a05:	pop    rbp
  409a06:	ret    
  409a07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a10 <flatcc_builder_union_vector_edit@@Base>:
  409a10:	push   rbp
  409a11:	mov    rbp,rsp
  409a14:	mov    QWORD PTR [rbp-0x8],rdi
  409a18:	mov    rax,QWORD PTR [rbp-0x8]
  409a1c:	mov    rax,QWORD PTR [rax+0x18]
  409a20:	pop    rbp
  409a21:	ret    
  409a22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a2c:	nop    DWORD PTR [rax+0x0]

0000000000409a30 <flatcc_builder_extend_union_vector@@Base>:
  409a30:	push   rbp
  409a31:	mov    rbp,rsp
  409a34:	sub    rsp,0x20
  409a38:	mov    QWORD PTR [rbp-0x10],rdi
  409a3c:	mov    QWORD PTR [rbp-0x18],rsi
  409a40:	mov    rdi,QWORD PTR [rbp-0x10]
  409a44:	mov    rax,QWORD PTR [rbp-0x18]
  409a48:	mov    esi,eax
  409a4a:	mov    edx,0x1fffffff
  409a4f:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  409a54:	cmp    eax,0x0
  409a57:	je     409a6a <flatcc_builder_extend_union_vector@@Base+0x3a>
  409a5d:	mov    QWORD PTR [rbp-0x8],0x0
  409a65:	jmp    409a85 <flatcc_builder_extend_union_vector@@Base+0x55>
  409a6a:	mov    rdi,QWORD PTR [rbp-0x10]
  409a6e:	mov    rax,QWORD PTR [rbp-0x18]
  409a72:	mov    eax,eax
  409a74:	mov    ecx,eax
  409a76:	shl    rcx,0x3
  409a7a:	mov    esi,ecx
  409a7c:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  409a81:	mov    QWORD PTR [rbp-0x8],rax
  409a85:	mov    rax,QWORD PTR [rbp-0x8]
  409a89:	add    rsp,0x20
  409a8d:	pop    rbp
  409a8e:	ret    
  409a8f:	nop

0000000000409a90 <flatcc_builder_truncate_union_vector@@Base>:
  409a90:	push   rbp
  409a91:	mov    rbp,rsp
  409a94:	sub    rsp,0x20
  409a98:	mov    QWORD PTR [rbp-0x10],rdi
  409a9c:	mov    QWORD PTR [rbp-0x18],rsi
  409aa0:	mov    rax,QWORD PTR [rbp-0x10]
  409aa4:	mov    rax,QWORD PTR [rax+0x30]
  409aa8:	movzx  ecx,WORD PTR [rax+0xe]
  409aac:	cmp    ecx,0x7
  409aaf:	jne    409aba <flatcc_builder_truncate_union_vector@@Base+0x2a>
  409ab5:	jmp    409ad9 <flatcc_builder_truncate_union_vector@@Base+0x49>
  409aba:	lea    rdi,[rip+0x96fd]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409ac1:	lea    rsi,[rip+0x8aba]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409ac8:	mov    edx,0x681
  409acd:	lea    rcx,[rip+0x976f]        # 413243 <flatcc_builder_padding_base@@Base+0xed3>
  409ad4:	call   403060 <__assert_fail@plt>
  409ad9:	mov    rax,QWORD PTR [rbp-0x10]
  409add:	mov    rax,QWORD PTR [rax+0x30]
  409ae1:	mov    ecx,DWORD PTR [rax+0x14]
  409ae4:	mov    rax,QWORD PTR [rbp-0x18]
  409ae8:	cmp    ecx,eax
  409aea:	jae    409b37 <flatcc_builder_truncate_union_vector@@Base+0xa7>
  409af0:	mov    rax,QWORD PTR [rbp-0x10]
  409af4:	mov    rax,QWORD PTR [rax+0x30]
  409af8:	mov    ecx,DWORD PTR [rax+0x14]
  409afb:	mov    rax,QWORD PTR [rbp-0x18]
  409aff:	cmp    ecx,eax
  409b01:	jb     409b0c <flatcc_builder_truncate_union_vector@@Base+0x7c>
  409b07:	jmp    409b2b <flatcc_builder_truncate_union_vector@@Base+0x9b>
  409b0c:	lea    rdi,[rip+0x910f]        # 412c22 <flatcc_builder_padding_base@@Base+0x8b2>
  409b13:	lea    rsi,[rip+0x8a68]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409b1a:	mov    edx,0x682
  409b1f:	lea    rcx,[rip+0x971d]        # 413243 <flatcc_builder_padding_base@@Base+0xed3>
  409b26:	call   403060 <__assert_fail@plt>
  409b2b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409b32:	jmp    409b6f <flatcc_builder_truncate_union_vector@@Base+0xdf>
  409b37:	mov    rax,QWORD PTR [rbp-0x18]
  409b3b:	mov    rcx,QWORD PTR [rbp-0x10]
  409b3f:	mov    rcx,QWORD PTR [rcx+0x30]
  409b43:	mov    edx,DWORD PTR [rcx+0x14]
  409b46:	sub    edx,eax
  409b48:	mov    DWORD PTR [rcx+0x14],edx
  409b4b:	mov    rdi,QWORD PTR [rbp-0x10]
  409b4f:	mov    rcx,QWORD PTR [rbp-0x10]
  409b53:	mov    rcx,QWORD PTR [rcx+0x30]
  409b57:	mov    eax,DWORD PTR [rcx+0x10]
  409b5a:	mov    rcx,QWORD PTR [rbp-0x18]
  409b5e:	imul   eax,ecx
  409b61:	mov    esi,eax
  409b63:	call   407420 <flatcc_builder_truncate_vector@@Base+0xf0>
  409b68:	mov    DWORD PTR [rbp-0x4],0x0
  409b6f:	mov    eax,DWORD PTR [rbp-0x4]
  409b72:	add    rsp,0x20
  409b76:	pop    rbp
  409b77:	ret    
  409b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409b80 <flatcc_builder_union_vector_push@@Base>:
  409b80:	push   rbp
  409b81:	mov    rbp,rsp
  409b84:	sub    rsp,0x20
  409b88:	mov    QWORD PTR [rbp-0x10],rsi
  409b8c:	mov    QWORD PTR [rbp-0x18],rdi
  409b90:	mov    rax,QWORD PTR [rbp-0x18]
  409b94:	mov    rax,QWORD PTR [rax+0x30]
  409b98:	movzx  ecx,WORD PTR [rax+0xe]
  409b9c:	cmp    ecx,0x7
  409b9f:	jne    409baa <flatcc_builder_union_vector_push@@Base+0x2a>
  409ba5:	jmp    409bc9 <flatcc_builder_union_vector_push@@Base+0x49>
  409baa:	lea    rdi,[rip+0x960d]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409bb1:	lea    rsi,[rip+0x89ca]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409bb8:	mov    edx,0x68d
  409bbd:	lea    rcx,[rip+0x96c4]        # 413288 <flatcc_builder_padding_base@@Base+0xf18>
  409bc4:	call   403060 <__assert_fail@plt>
  409bc9:	mov    rax,QWORD PTR [rbp-0x18]
  409bcd:	mov    rax,QWORD PTR [rax+0x30]
  409bd1:	mov    ecx,DWORD PTR [rax+0x14]
  409bd4:	mov    eax,ecx
  409bd6:	cmp    rax,0x1fffffff
  409bdc:	jne    409bef <flatcc_builder_union_vector_push@@Base+0x6f>
  409be2:	mov    QWORD PTR [rbp-0x8],0x0
  409bea:	jmp    409c3f <flatcc_builder_union_vector_push@@Base+0xbf>
  409bef:	mov    rax,QWORD PTR [rbp-0x18]
  409bf3:	mov    rax,QWORD PTR [rax+0x30]
  409bf7:	mov    ecx,DWORD PTR [rax+0x14]
  409bfa:	add    ecx,0x1
  409bfd:	mov    DWORD PTR [rax+0x14],ecx
  409c00:	mov    rdi,QWORD PTR [rbp-0x18]
  409c04:	mov    esi,0x8
  409c09:	call   406ab0 <flatcc_builder_start_struct@@Base+0xf0>
  409c0e:	xor    ecx,ecx
  409c10:	mov    edx,ecx
  409c12:	mov    QWORD PTR [rbp-0x20],rax
  409c16:	cmp    rdx,rax
  409c19:	jne    409c2c <flatcc_builder_union_vector_push@@Base+0xac>
  409c1f:	mov    QWORD PTR [rbp-0x8],0x0
  409c27:	jmp    409c3f <flatcc_builder_union_vector_push@@Base+0xbf>
  409c2c:	mov    rax,QWORD PTR [rbp-0x20]
  409c30:	mov    rcx,QWORD PTR [rbp-0x10]
  409c34:	mov    QWORD PTR [rax],rcx
  409c37:	mov    rax,QWORD PTR [rbp-0x20]
  409c3b:	mov    QWORD PTR [rbp-0x8],rax
  409c3f:	mov    rax,QWORD PTR [rbp-0x8]
  409c43:	add    rsp,0x20
  409c47:	pop    rbp
  409c48:	ret    
  409c49:	nop    DWORD PTR [rax+0x0]

0000000000409c50 <flatcc_builder_append_union_vector@@Base>:
  409c50:	push   rbp
  409c51:	mov    rbp,rsp
  409c54:	sub    rsp,0x20
  409c58:	mov    QWORD PTR [rbp-0x10],rdi
  409c5c:	mov    QWORD PTR [rbp-0x18],rsi
  409c60:	mov    QWORD PTR [rbp-0x20],rdx
  409c64:	mov    rax,QWORD PTR [rbp-0x10]
  409c68:	mov    rax,QWORD PTR [rax+0x30]
  409c6c:	movzx  ecx,WORD PTR [rax+0xe]
  409c70:	cmp    ecx,0x7
  409c73:	jne    409c7e <flatcc_builder_append_union_vector@@Base+0x2e>
  409c79:	jmp    409c9d <flatcc_builder_append_union_vector@@Base+0x4d>
  409c7e:	lea    rdi,[rip+0x9539]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409c85:	lea    rsi,[rip+0x88f6]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409c8c:	mov    edx,0x69c
  409c91:	lea    rcx,[rip+0x965d]        # 4132f5 <flatcc_builder_padding_base@@Base+0xf85>
  409c98:	call   403060 <__assert_fail@plt>
  409c9d:	mov    rdi,QWORD PTR [rbp-0x10]
  409ca1:	mov    rax,QWORD PTR [rbp-0x20]
  409ca5:	mov    esi,eax
  409ca7:	mov    edx,0x1fffffff
  409cac:	call   406c70 <flatcc_builder_extend_vector@@Base+0x70>
  409cb1:	cmp    eax,0x0
  409cb4:	je     409cc7 <flatcc_builder_append_union_vector@@Base+0x77>
  409cba:	mov    QWORD PTR [rbp-0x8],0x0
  409cc2:	jmp    409ce7 <flatcc_builder_append_union_vector@@Base+0x97>
  409cc7:	mov    rdi,QWORD PTR [rbp-0x10]
  409ccb:	mov    rax,QWORD PTR [rbp-0x18]
  409ccf:	mov    rcx,QWORD PTR [rbp-0x20]
  409cd3:	mov    ecx,ecx
  409cd5:	mov    edx,ecx
  409cd7:	shl    rdx,0x3
  409cdb:	mov    rsi,rax
  409cde:	call   406e10 <flatcc_builder_vector_push@@Base+0xf0>
  409ce3:	mov    QWORD PTR [rbp-0x8],rax
  409ce7:	mov    rax,QWORD PTR [rbp-0x8]
  409ceb:	add    rsp,0x20
  409cef:	pop    rbp
  409cf0:	ret    
  409cf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409d00 <flatcc_builder_create_string@@Base>:
  409d00:	push   rbp
  409d01:	mov    rbp,rsp
  409d04:	sub    rsp,0xc0
  409d0b:	mov    QWORD PTR [rbp-0x10],rdi
  409d0f:	mov    QWORD PTR [rbp-0x18],rsi
  409d13:	mov    QWORD PTR [rbp-0x20],rdx
  409d17:	mov    eax,0xffffffff
  409d1c:	cmp    QWORD PTR [rbp-0x20],rax
  409d20:	jbe    409d32 <flatcc_builder_create_string@@Base+0x32>
  409d26:	mov    DWORD PTR [rbp-0x4],0x0
  409d2d:	jmp    409ece <flatcc_builder_create_string@@Base+0x1ce>
  409d32:	mov    rax,QWORD PTR [rbp-0x20]
  409d36:	mov    edi,eax
  409d38:	call   405d60 <flatcc_builder_embed_buffer@@Base+0x430>
  409d3d:	mov    DWORD PTR [rbp-0x28],eax
  409d40:	mov    rdi,QWORD PTR [rbp-0x10]
  409d44:	mov    rcx,QWORD PTR [rbp-0x20]
  409d48:	add    ecx,0x1
  409d4b:	mov    esi,ecx
  409d4d:	mov    edx,0x4
  409d52:	call   405d30 <flatcc_builder_embed_buffer@@Base+0x400>
  409d57:	add    eax,0x1
  409d5a:	mov    DWORD PTR [rbp-0x24],eax
  409d5d:	mov    QWORD PTR [rbp-0xb8],0x0
  409d68:	mov    DWORD PTR [rbp-0xb0],0x0
  409d72:	mov    rdi,QWORD PTR [rbp-0xb8]
  409d79:	add    rdi,0x4
  409d80:	mov    QWORD PTR [rbp-0xb8],rdi
  409d87:	lea    rdi,[rbp-0x28]
  409d8b:	lea    r8,[rbp-0xb8]
  409d92:	mov    r9,r8
  409d95:	add    r9,0x10
  409d9c:	movsxd r10,DWORD PTR [rbp-0xb0]
  409da3:	shl    r10,0x4
  409da7:	add    r9,r10
  409daa:	mov    QWORD PTR [r9],rdi
  409dad:	add    r8,0x10
  409db4:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409dbb:	shl    rdi,0x4
  409dbf:	add    r8,rdi
  409dc2:	mov    QWORD PTR [r8+0x8],0x4
  409dca:	mov    eax,DWORD PTR [rbp-0xb0]
  409dd0:	add    eax,0x1
  409dd3:	mov    DWORD PTR [rbp-0xb0],eax
  409dd9:	cmp    QWORD PTR [rbp-0x20],0x0
  409dde:	jbe    409e48 <flatcc_builder_create_string@@Base+0x148>
  409de4:	mov    rax,QWORD PTR [rbp-0x20]
  409de8:	add    rax,QWORD PTR [rbp-0xb8]
  409def:	mov    QWORD PTR [rbp-0xb8],rax
  409df6:	mov    rax,QWORD PTR [rbp-0x18]
  409dfa:	lea    rcx,[rbp-0xb8]
  409e01:	mov    rdx,rcx
  409e04:	add    rdx,0x10
  409e0b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409e12:	shl    rsi,0x4
  409e16:	add    rdx,rsi
  409e19:	mov    QWORD PTR [rdx],rax
  409e1c:	mov    rax,QWORD PTR [rbp-0x20]
  409e20:	add    rcx,0x10
  409e27:	movsxd rdx,DWORD PTR [rbp-0xb0]
  409e2e:	shl    rdx,0x4
  409e32:	add    rcx,rdx
  409e35:	mov    QWORD PTR [rcx+0x8],rax
  409e39:	mov    edi,DWORD PTR [rbp-0xb0]
  409e3f:	add    edi,0x1
  409e42:	mov    DWORD PTR [rbp-0xb0],edi
  409e48:	cmp    DWORD PTR [rbp-0x24],0x0
  409e4c:	jbe    409ebb <flatcc_builder_create_string@@Base+0x1bb>
  409e52:	lea    rax,[rip+0x8517]        # 412370 <flatcc_builder_padding_base@@Base>
  409e59:	mov    ecx,DWORD PTR [rbp-0x24]
  409e5c:	mov    edx,ecx
  409e5e:	add    rdx,QWORD PTR [rbp-0xb8]
  409e65:	mov    QWORD PTR [rbp-0xb8],rdx
  409e6c:	lea    rdx,[rbp-0xb8]
  409e73:	mov    rsi,rdx
  409e76:	add    rsi,0x10
  409e7d:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409e84:	shl    rdi,0x4
  409e88:	add    rsi,rdi
  409e8b:	mov    QWORD PTR [rsi],rax
  409e8e:	mov    ecx,DWORD PTR [rbp-0x24]
  409e91:	mov    eax,ecx
  409e93:	add    rdx,0x10
  409e9a:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409ea1:	shl    rsi,0x4
  409ea5:	add    rdx,rsi
  409ea8:	mov    QWORD PTR [rdx+0x8],rax
  409eac:	mov    ecx,DWORD PTR [rbp-0xb0]
  409eb2:	add    ecx,0x1
  409eb5:	mov    DWORD PTR [rbp-0xb0],ecx
  409ebb:	mov    rdi,QWORD PTR [rbp-0x10]
  409ebf:	lea    rsi,[rbp-0xb8]
  409ec6:	call   405d70 <flatcc_builder_embed_buffer@@Base+0x440>
  409ecb:	mov    DWORD PTR [rbp-0x4],eax
  409ece:	mov    eax,DWORD PTR [rbp-0x4]
  409ed1:	add    rsp,0xc0
  409ed8:	pop    rbp
  409ed9:	ret    
  409eda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409ee0 <flatcc_builder_create_string_str@@Base>:
  409ee0:	push   rbp
  409ee1:	mov    rbp,rsp
  409ee4:	sub    rsp,0x20
  409ee8:	mov    QWORD PTR [rbp-0x8],rdi
  409eec:	mov    QWORD PTR [rbp-0x10],rsi
  409ef0:	mov    rdi,QWORD PTR [rbp-0x8]
  409ef4:	mov    rsi,QWORD PTR [rbp-0x10]
  409ef8:	mov    rax,QWORD PTR [rbp-0x10]
  409efc:	mov    QWORD PTR [rbp-0x18],rdi
  409f00:	mov    rdi,rax
  409f03:	mov    QWORD PTR [rbp-0x20],rsi
  409f07:	call   403050 <strlen@plt>
  409f0c:	mov    rdi,QWORD PTR [rbp-0x18]
  409f10:	mov    rsi,QWORD PTR [rbp-0x20]
  409f14:	mov    rdx,rax
  409f17:	call   409d00 <flatcc_builder_create_string@@Base>
  409f1c:	add    rsp,0x20
  409f20:	pop    rbp
  409f21:	ret    
  409f22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f2c:	nop    DWORD PTR [rax+0x0]

0000000000409f30 <flatcc_builder_create_string_strn@@Base>:
  409f30:	push   rbp
  409f31:	mov    rbp,rsp
  409f34:	sub    rsp,0x30
  409f38:	mov    QWORD PTR [rbp-0x8],rdi
  409f3c:	mov    QWORD PTR [rbp-0x10],rsi
  409f40:	mov    QWORD PTR [rbp-0x18],rdx
  409f44:	mov    rdi,QWORD PTR [rbp-0x8]
  409f48:	mov    rsi,QWORD PTR [rbp-0x10]
  409f4c:	mov    rax,QWORD PTR [rbp-0x10]
  409f50:	mov    rcx,QWORD PTR [rbp-0x18]
  409f54:	mov    QWORD PTR [rbp-0x20],rdi
  409f58:	mov    rdi,rax
  409f5b:	mov    QWORD PTR [rbp-0x28],rsi
  409f5f:	mov    rsi,rcx
  409f62:	call   4072d0 <flatcc_builder_append_string_strn@@Base+0x50>
  409f67:	mov    rdi,QWORD PTR [rbp-0x20]
  409f6b:	mov    rsi,QWORD PTR [rbp-0x28]
  409f6f:	mov    rdx,rax
  409f72:	call   409d00 <flatcc_builder_create_string@@Base>
  409f77:	add    rsp,0x30
  409f7b:	pop    rbp
  409f7c:	ret    
  409f7d:	nop    DWORD PTR [rax]

0000000000409f80 <flatcc_builder_end_string@@Base>:
  409f80:	push   rbp
  409f81:	mov    rbp,rsp
  409f84:	sub    rsp,0x20
  409f88:	mov    QWORD PTR [rbp-0x10],rdi
  409f8c:	mov    rax,QWORD PTR [rbp-0x10]
  409f90:	mov    rax,QWORD PTR [rax+0x30]
  409f94:	movzx  ecx,WORD PTR [rax+0xe]
  409f98:	cmp    ecx,0x6
  409f9b:	jne    409fa6 <flatcc_builder_end_string@@Base+0x26>
  409fa1:	jmp    409fc5 <flatcc_builder_end_string@@Base+0x45>
  409fa6:	lea    rdi,[rip+0x8b14]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  409fad:	lea    rsi,[rip+0x85ce]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409fb4:	mov    edx,0x6c4
  409fb9:	lea    rcx,[rip+0x93b4]        # 413374 <flatcc_builder_padding_base@@Base+0x1004>
  409fc0:	call   403060 <__assert_fail@plt>
  409fc5:	mov    rax,QWORD PTR [rbp-0x10]
  409fc9:	mov    rax,QWORD PTR [rax+0x30]
  409fcd:	mov    ecx,DWORD PTR [rax+0x14]
  409fd0:	mov    rax,QWORD PTR [rbp-0x10]
  409fd4:	cmp    ecx,DWORD PTR [rax+0x20]
  409fd7:	jne    409fe2 <flatcc_builder_end_string@@Base+0x62>
  409fdd:	jmp    40a001 <flatcc_builder_end_string@@Base+0x81>
  409fe2:	lea    rdi,[rip+0x93ce]        # 4133b7 <flatcc_builder_padding_base@@Base+0x1047>
  409fe9:	lea    rsi,[rip+0x8592]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409ff0:	mov    edx,0x6c5
  409ff5:	lea    rcx,[rip+0x9378]        # 413374 <flatcc_builder_padding_base@@Base+0x1004>
  409ffc:	call   403060 <__assert_fail@plt>
  40a001:	mov    rdi,QWORD PTR [rbp-0x10]
  40a005:	mov    rax,QWORD PTR [rbp-0x10]
  40a009:	mov    rsi,QWORD PTR [rax+0x18]
  40a00d:	mov    rax,QWORD PTR [rbp-0x10]
  40a011:	mov    ecx,DWORD PTR [rax+0x20]
  40a014:	mov    edx,ecx
  40a016:	call   409d00 <flatcc_builder_create_string@@Base>
  40a01b:	xor    ecx,ecx
  40a01d:	mov    DWORD PTR [rbp-0x14],eax
  40a020:	cmp    ecx,eax
  40a022:	jne    40a034 <flatcc_builder_end_string@@Base+0xb4>
  40a028:	mov    DWORD PTR [rbp-0x4],0x0
  40a02f:	jmp    40a043 <flatcc_builder_end_string@@Base+0xc3>
  40a034:	mov    rdi,QWORD PTR [rbp-0x10]
  40a038:	call   406900 <flatcc_builder_end_buffer@@Base+0x160>
  40a03d:	mov    eax,DWORD PTR [rbp-0x14]
  40a040:	mov    DWORD PTR [rbp-0x4],eax
  40a043:	mov    eax,DWORD PTR [rbp-0x4]
  40a046:	add    rsp,0x20
  40a04a:	pop    rbp
  40a04b:	ret    
  40a04c:	nop    DWORD PTR [rax+0x0]

000000000040a050 <flatcc_builder_string_edit@@Base>:
  40a050:	push   rbp
  40a051:	mov    rbp,rsp
  40a054:	mov    QWORD PTR [rbp-0x8],rdi
  40a058:	mov    rax,QWORD PTR [rbp-0x8]
  40a05c:	mov    rax,QWORD PTR [rax+0x18]
  40a060:	pop    rbp
  40a061:	ret    
  40a062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a06c:	nop    DWORD PTR [rax+0x0]

000000000040a070 <flatcc_builder_string_len@@Base>:
  40a070:	push   rbp
  40a071:	mov    rbp,rsp
  40a074:	mov    QWORD PTR [rbp-0x8],rdi
  40a078:	mov    rax,QWORD PTR [rbp-0x8]
  40a07c:	mov    rax,QWORD PTR [rax+0x30]
  40a080:	mov    ecx,DWORD PTR [rax+0x14]
  40a083:	mov    eax,ecx
  40a085:	pop    rbp
  40a086:	ret    
  40a087:	nop    WORD PTR [rax+rax*1+0x0]
  40a090:	push   rbp
  40a091:	mov    rbp,rsp
  40a094:	sub    rsp,0x20
  40a098:	mov    QWORD PTR [rbp-0x10],rdi
  40a09c:	mov    DWORD PTR [rbp-0x14],esi
  40a09f:	mov    WORD PTR [rbp-0x16],dx
  40a0a3:	mov    WORD PTR [rbp-0x18],cx
  40a0a7:	mov    rax,QWORD PTR [rbp-0x10]
  40a0ab:	mov    esi,DWORD PTR [rax+0x20]
  40a0ae:	movzx  r8d,WORD PTR [rbp-0x16]
  40a0b3:	add    esi,r8d
  40a0b6:	sub    esi,0x1
  40a0b9:	movzx  r8d,WORD PTR [rbp-0x16]
  40a0be:	sub    r8d,0x1
  40a0c2:	xor    r8d,0xffffffff
  40a0c6:	and    esi,r8d
  40a0c9:	mov    DWORD PTR [rbp-0x1c],esi
  40a0cc:	mov    esi,DWORD PTR [rbp-0x1c]
  40a0cf:	add    esi,DWORD PTR [rbp-0x14]
  40a0d2:	mov    rax,QWORD PTR [rbp-0x10]
  40a0d6:	mov    DWORD PTR [rax+0x20],esi
  40a0d9:	mov    rax,QWORD PTR [rbp-0x10]
  40a0dd:	cmp    esi,DWORD PTR [rax+0x24]
  40a0e0:	jb     40a11d <flatcc_builder_string_len@@Base+0xad>
  40a0e6:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0ea:	mov    rax,QWORD PTR [rbp-0x10]
  40a0ee:	mov    ecx,DWORD PTR [rax+0x20]
  40a0f1:	add    ecx,0x1
  40a0f4:	mov    ecx,ecx
  40a0f6:	mov    esi,ecx
  40a0f8:	mov    edx,0xfffc
  40a0fd:	call   40aa90 <flatcc_builder_get_emit_context@@Base+0x50>
  40a102:	cmp    eax,0x0
  40a105:	je     40a118 <flatcc_builder_string_len@@Base+0xa8>
  40a10b:	mov    QWORD PTR [rbp-0x8],0x0
  40a113:	jmp    40a172 <flatcc_builder_string_len@@Base+0x102>
  40a118:	jmp    40a11d <flatcc_builder_string_len@@Base+0xad>
  40a11d:	mov    eax,DWORD PTR [rbp-0x1c]
  40a120:	mov    ecx,eax
  40a122:	add    rcx,0x4
  40a129:	mov    rdx,QWORD PTR [rbp-0x10]
  40a12d:	mov    rdx,QWORD PTR [rdx+0x8]
  40a131:	movzx  eax,WORD PTR [rbp-0x18]
  40a135:	mov    esi,eax
  40a137:	mov    WORD PTR [rdx+rsi*2],cx
  40a13b:	movzx  eax,WORD PTR [rbp-0x18]
  40a13f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a143:	movzx  edi,WORD PTR [rdx+0x10]
  40a147:	cmp    eax,edi
  40a149:	jl     40a15e <flatcc_builder_string_len@@Base+0xee>
  40a14f:	movzx  eax,WORD PTR [rbp-0x18]
  40a153:	add    eax,0x1
  40a156:	mov    rcx,QWORD PTR [rbp-0x10]
  40a15a:	mov    WORD PTR [rcx+0x10],ax
  40a15e:	mov    rax,QWORD PTR [rbp-0x10]
  40a162:	mov    rax,QWORD PTR [rax+0x18]
  40a166:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a169:	mov    edx,ecx
  40a16b:	add    rax,rdx
  40a16e:	mov    QWORD PTR [rbp-0x8],rax
  40a172:	mov    rax,QWORD PTR [rbp-0x8]
  40a176:	add    rsp,0x20
  40a17a:	pop    rbp
  40a17b:	ret    
  40a17c:	nop    DWORD PTR [rax+0x0]

000000000040a180 <flatcc_builder_table_edit@@Base>:
  40a180:	push   rbp
  40a181:	mov    rbp,rsp
  40a184:	sub    rsp,0x10
  40a188:	mov    QWORD PTR [rbp-0x8],rdi
  40a18c:	mov    QWORD PTR [rbp-0x10],rsi
  40a190:	mov    rax,QWORD PTR [rbp-0x8]
  40a194:	mov    rax,QWORD PTR [rax+0x30]
  40a198:	movzx  ecx,WORD PTR [rax+0xe]
  40a19c:	cmp    ecx,0x3
  40a19f:	jne    40a1aa <flatcc_builder_table_edit@@Base+0x2a>
  40a1a5:	jmp    40a1c9 <flatcc_builder_table_edit@@Base+0x49>
  40a1aa:	lea    rdi,[rip+0x8c00]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  40a1b1:	lea    rsi,[rip+0x83ca]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a1b8:	mov    edx,0x702
  40a1bd:	lea    rcx,[rip+0x92a5]        # 413469 <flatcc_builder_padding_base@@Base+0x10f9>
  40a1c4:	call   403060 <__assert_fail@plt>
  40a1c9:	xor    eax,eax
  40a1cb:	mov    ecx,eax
  40a1cd:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1d1:	mov    rdx,QWORD PTR [rdx+0x18]
  40a1d5:	mov    rsi,QWORD PTR [rbp-0x8]
  40a1d9:	mov    eax,DWORD PTR [rsi+0x20]
  40a1dc:	mov    esi,eax
  40a1de:	add    rdx,rsi
  40a1e1:	sub    rcx,QWORD PTR [rbp-0x10]
  40a1e5:	add    rdx,rcx
  40a1e8:	mov    rax,rdx
  40a1eb:	add    rsp,0x10
  40a1ef:	pop    rbp
  40a1f0:	ret    
  40a1f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a200 <flatcc_builder_table_add_copy@@Base>:
  40a200:	push   rbp
  40a201:	mov    rbp,rsp
  40a204:	sub    rsp,0x30
  40a208:	mov    QWORD PTR [rbp-0x8],rdi
  40a20c:	mov    DWORD PTR [rbp-0xc],esi
  40a20f:	mov    QWORD PTR [rbp-0x18],rdx
  40a213:	mov    QWORD PTR [rbp-0x20],rcx
  40a217:	mov    WORD PTR [rbp-0x22],r8w
  40a21c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a220:	mov    esi,DWORD PTR [rbp-0xc]
  40a223:	mov    rdx,QWORD PTR [rbp-0x20]
  40a227:	movzx  ecx,WORD PTR [rbp-0x22]
  40a22b:	call   409380 <flatcc_builder_table_add@@Base>
  40a230:	mov    QWORD PTR [rbp-0x30],rax
  40a234:	cmp    rax,0x0
  40a238:	je     40a24f <flatcc_builder_table_add_copy@@Base+0x4f>
  40a23e:	mov    rdi,QWORD PTR [rbp-0x30]
  40a242:	mov    rsi,QWORD PTR [rbp-0x18]
  40a246:	mov    rdx,QWORD PTR [rbp-0x20]
  40a24a:	call   4030b0 <memcpy@plt>
  40a24f:	mov    rax,QWORD PTR [rbp-0x30]
  40a253:	add    rsp,0x30
  40a257:	pop    rbp
  40a258:	ret    
  40a259:	nop    DWORD PTR [rax+0x0]
  40a260:	push   rbp
  40a261:	mov    rbp,rsp
  40a264:	sub    rsp,0x20
  40a268:	mov    QWORD PTR [rbp-0x10],rdi
  40a26c:	mov    WORD PTR [rbp-0x12],si
  40a270:	mov    rax,QWORD PTR [rbp-0x10]
  40a274:	mov    ecx,DWORD PTR [rax+0x20]
  40a277:	mov    eax,ecx
  40a279:	add    rax,0x4
  40a27f:	sub    rax,0x1
  40a285:	and    rax,0xfffffffffffffffc
  40a28b:	mov    DWORD PTR [rbp-0x18],eax
  40a28e:	mov    eax,DWORD PTR [rbp-0x18]
  40a291:	mov    edx,eax
  40a293:	add    rdx,0x4
  40a29a:	mov    rdi,QWORD PTR [rbp-0x10]
  40a29e:	mov    DWORD PTR [rdi+0x20],edx
  40a2a1:	mov    rdi,QWORD PTR [rbp-0x10]
  40a2a5:	cmp    edx,DWORD PTR [rdi+0x24]
  40a2a8:	jbe    40a2e0 <flatcc_builder_table_add_copy@@Base+0xe0>
  40a2ae:	mov    rdi,QWORD PTR [rbp-0x10]
  40a2b2:	mov    rax,QWORD PTR [rbp-0x10]
  40a2b6:	mov    ecx,DWORD PTR [rax+0x20]
  40a2b9:	mov    esi,ecx
  40a2bb:	mov    edx,0xfffc
  40a2c0:	call   40aa90 <flatcc_builder_get_emit_context@@Base+0x50>
  40a2c5:	cmp    eax,0x0
  40a2c8:	je     40a2db <flatcc_builder_table_add_copy@@Base+0xdb>
  40a2ce:	mov    QWORD PTR [rbp-0x8],0x0
  40a2d6:	jmp    40a34f <flatcc_builder_table_add_copy@@Base+0x14f>
  40a2db:	jmp    40a2e0 <flatcc_builder_table_add_copy@@Base+0xe0>
  40a2e0:	mov    eax,DWORD PTR [rbp-0x18]
  40a2e3:	mov    ecx,eax
  40a2e5:	add    rcx,0x4
  40a2ec:	mov    rdx,QWORD PTR [rbp-0x10]
  40a2f0:	mov    rdx,QWORD PTR [rdx+0x8]
  40a2f4:	movzx  eax,WORD PTR [rbp-0x12]
  40a2f8:	mov    esi,eax
  40a2fa:	mov    WORD PTR [rdx+rsi*2],cx
  40a2fe:	movzx  eax,WORD PTR [rbp-0x12]
  40a302:	mov    rdx,QWORD PTR [rbp-0x10]
  40a306:	movzx  edi,WORD PTR [rdx+0x10]
  40a30a:	cmp    eax,edi
  40a30c:	jl     40a321 <flatcc_builder_table_add_copy@@Base+0x121>
  40a312:	movzx  eax,WORD PTR [rbp-0x12]
  40a316:	add    eax,0x1
  40a319:	mov    rcx,QWORD PTR [rbp-0x10]
  40a31d:	mov    WORD PTR [rcx+0x10],ax
  40a321:	mov    eax,DWORD PTR [rbp-0x18]
  40a324:	mov    rcx,QWORD PTR [rbp-0x10]
  40a328:	mov    rdx,QWORD PTR [rcx]
  40a32b:	mov    rsi,rdx
  40a32e:	add    rsi,0x2
  40a335:	mov    QWORD PTR [rcx],rsi
  40a338:	mov    WORD PTR [rdx],ax
  40a33b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a33f:	mov    rcx,QWORD PTR [rcx+0x18]
  40a343:	mov    edi,DWORD PTR [rbp-0x18]
  40a346:	mov    edx,edi
  40a348:	add    rcx,rdx
  40a34b:	mov    QWORD PTR [rbp-0x8],rcx
  40a34f:	mov    rax,QWORD PTR [rbp-0x8]
  40a353:	add    rsp,0x20
  40a357:	pop    rbp
  40a358:	ret    
  40a359:	nop    DWORD PTR [rax+0x0]

000000000040a360 <flatcc_builder_push_buffer_alignment@@Base>:
  40a360:	push   rbp
  40a361:	mov    rbp,rsp
  40a364:	mov    QWORD PTR [rbp-0x8],rdi
  40a368:	mov    rax,QWORD PTR [rbp-0x8]
  40a36c:	mov    cx,WORD PTR [rax+0xe8]
  40a373:	mov    WORD PTR [rbp-0xa],cx
  40a377:	mov    rax,QWORD PTR [rbp-0x8]
  40a37b:	mov    WORD PTR [rax+0xe8],0x4
  40a384:	movzx  eax,WORD PTR [rbp-0xa]
  40a388:	pop    rbp
  40a389:	ret    
  40a38a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a390 <flatcc_builder_pop_buffer_alignment@@Base>:
  40a390:	push   rbp
  40a391:	mov    rbp,rsp
  40a394:	sub    rsp,0x10
  40a398:	mov    QWORD PTR [rbp-0x8],rdi
  40a39c:	mov    WORD PTR [rbp-0xa],si
  40a3a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3a4:	movzx  esi,WORD PTR [rbp-0xa]
  40a3a8:	call   406290 <flatcc_builder_create_buffer@@Base+0x420>
  40a3ad:	add    rsp,0x10
  40a3b1:	pop    rbp
  40a3b2:	ret    
  40a3b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3bd:	nop    DWORD PTR [rax]

000000000040a3c0 <flatcc_builder_get_buffer_alignment@@Base>:
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	mov    QWORD PTR [rbp-0x8],rdi
  40a3c8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3cc:	movzx  eax,WORD PTR [rax+0xe8]
  40a3d3:	pop    rbp
  40a3d4:	ret    
  40a3d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3df:	nop

000000000040a3e0 <flatcc_builder_set_vtable_clustering@@Base>:
  40a3e0:	push   rbp
  40a3e1:	mov    rbp,rsp
  40a3e4:	mov    QWORD PTR [rbp-0x8],rdi
  40a3e8:	mov    DWORD PTR [rbp-0xc],esi
  40a3eb:	cmp    DWORD PTR [rbp-0xc],0x0
  40a3ef:	setne  al
  40a3f2:	xor    al,0xff
  40a3f4:	and    al,0x1
  40a3f6:	movzx  ecx,al
  40a3f9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3fd:	mov    DWORD PTR [rdx+0x124],ecx
  40a403:	pop    rbp
  40a404:	ret    
  40a405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a40f:	nop

000000000040a410 <flatcc_builder_set_block_align@@Base>:
  40a410:	push   rbp
  40a411:	mov    rbp,rsp
  40a414:	mov    QWORD PTR [rbp-0x8],rdi
  40a418:	mov    WORD PTR [rbp-0xa],si
  40a41c:	mov    ax,WORD PTR [rbp-0xa]
  40a420:	mov    rcx,QWORD PTR [rbp-0x8]
  40a424:	mov    WORD PTR [rcx+0xec],ax
  40a42b:	pop    rbp
  40a42c:	ret    
  40a42d:	nop    DWORD PTR [rax]

000000000040a430 <flatcc_builder_get_level@@Base>:
  40a430:	push   rbp
  40a431:	mov    rbp,rsp
  40a434:	mov    QWORD PTR [rbp-0x8],rdi
  40a438:	mov    rax,QWORD PTR [rbp-0x8]
  40a43c:	mov    eax,DWORD PTR [rax+0x104]
  40a442:	pop    rbp
  40a443:	ret    
  40a444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a44e:	xchg   ax,ax

000000000040a450 <flatcc_builder_set_max_level@@Base>:
  40a450:	push   rbp
  40a451:	mov    rbp,rsp
  40a454:	mov    QWORD PTR [rbp-0x8],rdi
  40a458:	mov    DWORD PTR [rbp-0xc],esi
  40a45b:	mov    eax,DWORD PTR [rbp-0xc]
  40a45e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a462:	mov    DWORD PTR [rcx+0x120],eax
  40a468:	mov    rcx,QWORD PTR [rbp-0x8]
  40a46c:	mov    eax,DWORD PTR [rcx+0x108]
  40a472:	mov    rcx,QWORD PTR [rbp-0x8]
  40a476:	cmp    eax,DWORD PTR [rcx+0x120]
  40a47c:	jge    40a496 <flatcc_builder_set_max_level@@Base+0x46>
  40a482:	mov    rax,QWORD PTR [rbp-0x8]
  40a486:	mov    ecx,DWORD PTR [rax+0x120]
  40a48c:	mov    rax,QWORD PTR [rbp-0x8]
  40a490:	mov    DWORD PTR [rax+0x108],ecx
  40a496:	pop    rbp
  40a497:	ret    
  40a498:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a4a0 <flatcc_builder_get_buffer_size@@Base>:
  40a4a0:	push   rbp
  40a4a1:	mov    rbp,rsp
  40a4a4:	mov    QWORD PTR [rbp-0x8],rdi
  40a4a8:	mov    rax,QWORD PTR [rbp-0x8]
  40a4ac:	mov    ecx,DWORD PTR [rax+0xf4]
  40a4b2:	mov    rax,QWORD PTR [rbp-0x8]
  40a4b6:	sub    ecx,DWORD PTR [rax+0xf0]
  40a4bc:	movsxd rax,ecx
  40a4bf:	pop    rbp
  40a4c0:	ret    
  40a4c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a4d0 <flatcc_builder_get_buffer_start@@Base>:
  40a4d0:	push   rbp
  40a4d1:	mov    rbp,rsp
  40a4d4:	mov    QWORD PTR [rbp-0x8],rdi
  40a4d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a4dc:	mov    eax,DWORD PTR [rax+0xf0]
  40a4e2:	pop    rbp
  40a4e3:	ret    
  40a4e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4ee:	xchg   ax,ax

000000000040a4f0 <flatcc_builder_get_buffer_end@@Base>:
  40a4f0:	push   rbp
  40a4f1:	mov    rbp,rsp
  40a4f4:	mov    QWORD PTR [rbp-0x8],rdi
  40a4f8:	mov    rax,QWORD PTR [rbp-0x8]
  40a4fc:	mov    eax,DWORD PTR [rax+0xf4]
  40a502:	pop    rbp
  40a503:	ret    
  40a504:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a50e:	xchg   ax,ax

000000000040a510 <flatcc_builder_set_vtable_cache_limit@@Base>:
  40a510:	push   rbp
  40a511:	mov    rbp,rsp
  40a514:	mov    QWORD PTR [rbp-0x8],rdi
  40a518:	mov    QWORD PTR [rbp-0x10],rsi
  40a51c:	mov    rax,QWORD PTR [rbp-0x10]
  40a520:	mov    rcx,QWORD PTR [rbp-0x8]
  40a524:	mov    QWORD PTR [rcx+0x118],rax
  40a52b:	pop    rbp
  40a52c:	ret    
  40a52d:	nop    DWORD PTR [rax]

000000000040a530 <flatcc_builder_set_identifier@@Base>:
  40a530:	push   rbp
  40a531:	mov    rbp,rsp
  40a534:	mov    QWORD PTR [rbp-0x8],rdi
  40a538:	mov    QWORD PTR [rbp-0x10],rsi
  40a53c:	mov    rax,QWORD PTR [rbp-0x8]
  40a540:	add    rax,0x110
  40a546:	cmp    QWORD PTR [rbp-0x10],0x0
  40a54b:	mov    QWORD PTR [rbp-0x18],rax
  40a54f:	je     40a562 <flatcc_builder_set_identifier@@Base+0x32>
  40a555:	mov    rax,QWORD PTR [rbp-0x10]
  40a559:	mov    QWORD PTR [rbp-0x20],rax
  40a55d:	jmp    40a572 <flatcc_builder_set_identifier@@Base+0x42>
  40a562:	lea    rax,[rip+0x7e07]        # 412370 <flatcc_builder_padding_base@@Base>
  40a569:	mov    QWORD PTR [rbp-0x20],rax
  40a56d:	jmp    40a572 <flatcc_builder_set_identifier@@Base+0x42>
  40a572:	mov    rax,QWORD PTR [rbp-0x20]
  40a576:	mov    ecx,DWORD PTR [rax]
  40a578:	mov    rax,QWORD PTR [rbp-0x18]
  40a57c:	mov    DWORD PTR [rax],ecx
  40a57e:	pop    rbp
  40a57f:	ret    

000000000040a580 <flatcc_builder_get_type@@Base>:
  40a580:	push   rbp
  40a581:	mov    rbp,rsp
  40a584:	mov    QWORD PTR [rbp-0x8],rdi
  40a588:	mov    rax,QWORD PTR [rbp-0x8]
  40a58c:	cmp    QWORD PTR [rax+0x30],0x0
  40a591:	je     40a5ab <flatcc_builder_get_type@@Base+0x2b>
  40a597:	mov    rax,QWORD PTR [rbp-0x8]
  40a59b:	mov    rax,QWORD PTR [rax+0x30]
  40a59f:	movzx  ecx,WORD PTR [rax+0xe]
  40a5a3:	mov    DWORD PTR [rbp-0xc],ecx
  40a5a6:	jmp    40a5b5 <flatcc_builder_get_type@@Base+0x35>
  40a5ab:	xor    eax,eax
  40a5ad:	mov    DWORD PTR [rbp-0xc],eax
  40a5b0:	jmp    40a5b5 <flatcc_builder_get_type@@Base+0x35>
  40a5b5:	mov    eax,DWORD PTR [rbp-0xc]
  40a5b8:	pop    rbp
  40a5b9:	ret    
  40a5ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a5c0 <flatcc_builder_get_type_at@@Base>:
  40a5c0:	push   rbp
  40a5c1:	mov    rbp,rsp
  40a5c4:	mov    QWORD PTR [rbp-0x10],rdi
  40a5c8:	mov    DWORD PTR [rbp-0x14],esi
  40a5cb:	cmp    DWORD PTR [rbp-0x14],0x1
  40a5cf:	jl     40a5e8 <flatcc_builder_get_type_at@@Base+0x28>
  40a5d5:	mov    eax,DWORD PTR [rbp-0x14]
  40a5d8:	mov    rcx,QWORD PTR [rbp-0x10]
  40a5dc:	cmp    eax,DWORD PTR [rcx+0x104]
  40a5e2:	jle    40a5f4 <flatcc_builder_get_type_at@@Base+0x34>
  40a5e8:	mov    DWORD PTR [rbp-0x4],0x0
  40a5ef:	jmp    40a61d <flatcc_builder_get_type_at@@Base+0x5d>
  40a5f4:	mov    rax,QWORD PTR [rbp-0x10]
  40a5f8:	mov    rax,QWORD PTR [rax+0x30]
  40a5fc:	mov    ecx,DWORD PTR [rbp-0x14]
  40a5ff:	mov    rdx,QWORD PTR [rbp-0x10]
  40a603:	sub    ecx,DWORD PTR [rdx+0x104]
  40a609:	movsxd rdx,ecx
  40a60c:	imul   rdx,rdx,0x24
  40a613:	add    rax,rdx
  40a616:	movzx  ecx,WORD PTR [rax+0xe]
  40a61a:	mov    DWORD PTR [rbp-0x4],ecx
  40a61d:	mov    eax,DWORD PTR [rbp-0x4]
  40a620:	pop    rbp
  40a621:	ret    
  40a622:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a62c:	nop    DWORD PTR [rax+0x0]

000000000040a630 <flatcc_builder_get_direct_buffer@@Base>:
  40a630:	push   rbp
  40a631:	mov    rbp,rsp
  40a634:	sub    rsp,0x20
  40a638:	mov    QWORD PTR [rbp-0x10],rdi
  40a63c:	mov    QWORD PTR [rbp-0x18],rsi
  40a640:	mov    rax,QWORD PTR [rbp-0x10]
  40a644:	cmp    DWORD PTR [rax+0x128],0x0
  40a64b:	je     40a670 <flatcc_builder_get_direct_buffer@@Base+0x40>
  40a651:	mov    rax,QWORD PTR [rbp-0x10]
  40a655:	add    rax,0x130
  40a65b:	mov    rsi,QWORD PTR [rbp-0x18]
  40a65f:	mov    rdi,rax
  40a662:	call   40a6a0 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40a667:	mov    QWORD PTR [rbp-0x8],rax
  40a66b:	jmp    40a693 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40a670:	cmp    QWORD PTR [rbp-0x18],0x0
  40a675:	je     40a686 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40a67b:	mov    rax,QWORD PTR [rbp-0x18]
  40a67f:	mov    QWORD PTR [rax],0x0
  40a686:	jmp    40a68b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40a68b:	mov    QWORD PTR [rbp-0x8],0x0
  40a693:	mov    rax,QWORD PTR [rbp-0x8]
  40a697:	add    rsp,0x20
  40a69b:	pop    rbp
  40a69c:	ret    
  40a69d:	nop    DWORD PTR [rax]
  40a6a0:	push   rbp
  40a6a1:	mov    rbp,rsp
  40a6a4:	mov    QWORD PTR [rbp-0x10],rdi
  40a6a8:	mov    QWORD PTR [rbp-0x18],rsi
  40a6ac:	mov    rax,QWORD PTR [rbp-0x10]
  40a6b0:	mov    rax,QWORD PTR [rax]
  40a6b3:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6b7:	cmp    rax,QWORD PTR [rcx+0x8]
  40a6bb:	jne    40a6ec <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40a6c1:	cmp    QWORD PTR [rbp-0x18],0x0
  40a6c6:	je     40a6db <flatcc_builder_get_direct_buffer@@Base+0xab>
  40a6cc:	mov    rax,QWORD PTR [rbp-0x10]
  40a6d0:	mov    rax,QWORD PTR [rax+0x30]
  40a6d4:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6d8:	mov    QWORD PTR [rcx],rax
  40a6db:	mov    rax,QWORD PTR [rbp-0x10]
  40a6df:	mov    rax,QWORD PTR [rax+0x10]
  40a6e3:	mov    QWORD PTR [rbp-0x8],rax
  40a6e7:	jmp    40a70a <flatcc_builder_get_direct_buffer@@Base+0xda>
  40a6ec:	cmp    QWORD PTR [rbp-0x18],0x0
  40a6f1:	je     40a702 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40a6f7:	mov    rax,QWORD PTR [rbp-0x18]
  40a6fb:	mov    QWORD PTR [rax],0x0
  40a702:	mov    QWORD PTR [rbp-0x8],0x0
  40a70a:	mov    rax,QWORD PTR [rbp-0x8]
  40a70e:	pop    rbp
  40a70f:	ret    

000000000040a710 <flatcc_builder_copy_buffer@@Base>:
  40a710:	push   rbp
  40a711:	mov    rbp,rsp
  40a714:	sub    rsp,0x20
  40a718:	mov    QWORD PTR [rbp-0x10],rdi
  40a71c:	mov    QWORD PTR [rbp-0x18],rsi
  40a720:	mov    QWORD PTR [rbp-0x20],rdx
  40a724:	mov    rax,QWORD PTR [rbp-0x10]
  40a728:	cmp    DWORD PTR [rax+0x128],0x0
  40a72f:	jne    40a742 <flatcc_builder_copy_buffer@@Base+0x32>
  40a735:	mov    QWORD PTR [rbp-0x8],0x0
  40a73d:	jmp    40a797 <flatcc_builder_copy_buffer@@Base+0x87>
  40a742:	mov    rax,QWORD PTR [rbp-0x10]
  40a746:	add    rax,0x130
  40a74c:	mov    rsi,QWORD PTR [rbp-0x18]
  40a750:	mov    rdx,QWORD PTR [rbp-0x20]
  40a754:	mov    rdi,rax
  40a757:	call   40b3a0 <flatcc_emitter_copy_buffer@@Base>
  40a75c:	mov    QWORD PTR [rbp-0x18],rax
  40a760:	cmp    QWORD PTR [rbp-0x18],0x0
  40a765:	je     40a770 <flatcc_builder_copy_buffer@@Base+0x60>
  40a76b:	jmp    40a78f <flatcc_builder_copy_buffer@@Base+0x7f>
  40a770:	lea    rdi,[rip+0x8079]        # 4127f0 <flatcc_builder_padding_base@@Base+0x480>
  40a777:	lea    rsi,[rip+0x7e04]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a77e:	mov    edx,0x786
  40a783:	lea    rcx,[rip+0x8d6a]        # 4134f4 <flatcc_builder_padding_base@@Base+0x1184>
  40a78a:	call   403060 <__assert_fail@plt>
  40a78f:	mov    rax,QWORD PTR [rbp-0x18]
  40a793:	mov    QWORD PTR [rbp-0x8],rax
  40a797:	mov    rax,QWORD PTR [rbp-0x8]
  40a79b:	add    rsp,0x20
  40a79f:	pop    rbp
  40a7a0:	ret    
  40a7a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a7b0 <flatcc_builder_finalize_buffer@@Base>:
  40a7b0:	push   rbp
  40a7b1:	mov    rbp,rsp
  40a7b4:	sub    rsp,0x20
  40a7b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7bc:	mov    QWORD PTR [rbp-0x10],rsi
  40a7c0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7c4:	call   40a4a0 <flatcc_builder_get_buffer_size@@Base>
  40a7c9:	mov    QWORD PTR [rbp-0x20],rax
  40a7cd:	cmp    QWORD PTR [rbp-0x10],0x0
  40a7d2:	je     40a7e3 <flatcc_builder_finalize_buffer@@Base+0x33>
  40a7d8:	mov    rax,QWORD PTR [rbp-0x20]
  40a7dc:	mov    rcx,QWORD PTR [rbp-0x10]
  40a7e0:	mov    QWORD PTR [rcx],rax
  40a7e3:	mov    rdi,QWORD PTR [rbp-0x20]
  40a7e7:	call   4030c0 <malloc@plt>
  40a7ec:	mov    QWORD PTR [rbp-0x18],rax
  40a7f0:	cmp    QWORD PTR [rbp-0x18],0x0
  40a7f5:	jne    40a81a <flatcc_builder_finalize_buffer@@Base+0x6a>
  40a7fb:	lea    rdi,[rip+0x8f40]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  40a802:	lea    rsi,[rip+0x7d79]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a809:	mov    edx,0x798
  40a80e:	lea    rcx,[rip+0x8d24]        # 413539 <flatcc_builder_padding_base@@Base+0x11c9>
  40a815:	call   403060 <__assert_fail@plt>
  40a81a:	mov    rdi,QWORD PTR [rbp-0x8]
  40a81e:	mov    rsi,QWORD PTR [rbp-0x18]
  40a822:	mov    rdx,QWORD PTR [rbp-0x20]
  40a826:	call   40a710 <flatcc_builder_copy_buffer@@Base>
  40a82b:	cmp    rax,0x0
  40a82f:	jne    40a854 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40a835:	lea    rdi,[rip+0x8f06]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  40a83c:	lea    rsi,[rip+0x7d3f]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a843:	mov    edx,0x79c
  40a848:	lea    rcx,[rip+0x8cea]        # 413539 <flatcc_builder_padding_base@@Base+0x11c9>
  40a84f:	call   403060 <__assert_fail@plt>
  40a854:	jmp    40a859 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40a859:	cmp    QWORD PTR [rbp-0x18],0x0
  40a85e:	jne    40a87a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a864:	cmp    QWORD PTR [rbp-0x10],0x0
  40a869:	je     40a87a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a86f:	mov    rax,QWORD PTR [rbp-0x10]
  40a873:	mov    QWORD PTR [rax],0x0
  40a87a:	mov    rax,QWORD PTR [rbp-0x18]
  40a87e:	add    rsp,0x20
  40a882:	pop    rbp
  40a883:	ret    
  40a884:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a88e:	xchg   ax,ax

000000000040a890 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40a890:	push   rbp
  40a891:	mov    rbp,rsp
  40a894:	sub    rsp,0x30
  40a898:	mov    QWORD PTR [rbp-0x8],rdi
  40a89c:	mov    QWORD PTR [rbp-0x10],rsi
  40a8a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8a4:	call   40a4a0 <flatcc_builder_get_buffer_size@@Base>
  40a8a9:	mov    QWORD PTR [rbp-0x28],rax
  40a8ad:	cmp    QWORD PTR [rbp-0x10],0x0
  40a8b2:	je     40a8c3 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40a8b8:	mov    rax,QWORD PTR [rbp-0x28]
  40a8bc:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8c0:	mov    QWORD PTR [rcx],rax
  40a8c3:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8c7:	call   40a3c0 <flatcc_builder_get_buffer_alignment@@Base>
  40a8cc:	movzx  ecx,ax
  40a8cf:	mov    edx,ecx
  40a8d1:	mov    QWORD PTR [rbp-0x20],rdx
  40a8d5:	mov    rdx,QWORD PTR [rbp-0x28]
  40a8d9:	add    rdx,QWORD PTR [rbp-0x20]
  40a8dd:	sub    rdx,0x1
  40a8e4:	mov    rsi,QWORD PTR [rbp-0x20]
  40a8e8:	sub    rsi,0x1
  40a8ef:	xor    rsi,0xffffffffffffffff
  40a8f6:	and    rdx,rsi
  40a8f9:	mov    QWORD PTR [rbp-0x28],rdx
  40a8fd:	mov    rdi,QWORD PTR [rbp-0x20]
  40a901:	mov    rsi,QWORD PTR [rbp-0x28]
  40a905:	call   40a980 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a90a:	mov    QWORD PTR [rbp-0x18],rax
  40a90e:	cmp    QWORD PTR [rbp-0x18],0x0
  40a913:	jne    40a91e <flatcc_builder_finalize_aligned_buffer@@Base+0x8e>
  40a919:	jmp    40a954 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a91e:	mov    rdi,QWORD PTR [rbp-0x8]
  40a922:	mov    rsi,QWORD PTR [rbp-0x18]
  40a926:	mov    rdx,QWORD PTR [rbp-0x28]
  40a92a:	call   40a710 <flatcc_builder_copy_buffer@@Base>
  40a92f:	cmp    rax,0x0
  40a933:	jne    40a94f <flatcc_builder_finalize_aligned_buffer@@Base+0xbf>
  40a939:	mov    rdi,QWORD PTR [rbp-0x18]
  40a93d:	call   403030 <free@plt>
  40a942:	mov    QWORD PTR [rbp-0x18],0x0
  40a94a:	jmp    40a954 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a94f:	jmp    40a954 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a954:	cmp    QWORD PTR [rbp-0x18],0x0
  40a959:	jne    40a975 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40a95f:	cmp    QWORD PTR [rbp-0x10],0x0
  40a964:	je     40a975 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40a96a:	mov    rax,QWORD PTR [rbp-0x10]
  40a96e:	mov    QWORD PTR [rax],0x0
  40a975:	mov    rax,QWORD PTR [rbp-0x18]
  40a979:	add    rsp,0x30
  40a97d:	pop    rbp
  40a97e:	ret    
  40a97f:	nop
  40a980:	push   rbp
  40a981:	mov    rbp,rsp
  40a984:	sub    rsp,0x20
  40a988:	mov    QWORD PTR [rbp-0x8],rdi
  40a98c:	mov    QWORD PTR [rbp-0x10],rsi
  40a990:	mov    QWORD PTR [rbp-0x20],0x0
  40a998:	cmp    QWORD PTR [rbp-0x8],0x8
  40a99d:	jae    40a9ab <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40a9a3:	mov    QWORD PTR [rbp-0x8],0x8
  40a9ab:	mov    rsi,QWORD PTR [rbp-0x8]
  40a9af:	mov    rdx,QWORD PTR [rbp-0x10]
  40a9b3:	lea    rdi,[rbp-0x20]
  40a9b7:	call   4030e0 <posix_memalign@plt>
  40a9bc:	mov    DWORD PTR [rbp-0x14],eax
  40a9bf:	cmp    DWORD PTR [rbp-0x14],0x0
  40a9c3:	je     40a9e5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a9c9:	cmp    QWORD PTR [rbp-0x20],0x0
  40a9ce:	je     40a9e5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a9d4:	mov    rdi,QWORD PTR [rbp-0x20]
  40a9d8:	call   403030 <free@plt>
  40a9dd:	mov    QWORD PTR [rbp-0x20],0x0
  40a9e5:	mov    rax,QWORD PTR [rbp-0x20]
  40a9e9:	add    rsp,0x20
  40a9ed:	pop    rbp
  40a9ee:	ret    
  40a9ef:	nop

000000000040a9f0 <flatcc_builder_aligned_alloc@@Base>:
  40a9f0:	push   rbp
  40a9f1:	mov    rbp,rsp
  40a9f4:	sub    rsp,0x10
  40a9f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a9fc:	mov    QWORD PTR [rbp-0x10],rsi
  40aa00:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa04:	mov    rsi,QWORD PTR [rbp-0x10]
  40aa08:	call   40a980 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40aa0d:	add    rsp,0x10
  40aa11:	pop    rbp
  40aa12:	ret    
  40aa13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa1d:	nop    DWORD PTR [rax]

000000000040aa20 <flatcc_builder_aligned_free@@Base>:
  40aa20:	push   rbp
  40aa21:	mov    rbp,rsp
  40aa24:	sub    rsp,0x10
  40aa28:	mov    QWORD PTR [rbp-0x8],rdi
  40aa2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa30:	call   403030 <free@plt>
  40aa35:	add    rsp,0x10
  40aa39:	pop    rbp
  40aa3a:	ret    
  40aa3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040aa40 <flatcc_builder_get_emit_context@@Base>:
  40aa40:	push   rbp
  40aa41:	mov    rbp,rsp
  40aa44:	mov    QWORD PTR [rbp-0x8],rdi
  40aa48:	mov    rax,QWORD PTR [rbp-0x8]
  40aa4c:	mov    rax,QWORD PTR [rax+0x38]
  40aa50:	pop    rbp
  40aa51:	ret    
  40aa52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa5c:	nop    DWORD PTR [rax+0x0]
  40aa60:	push   rbp
  40aa61:	mov    rbp,rsp
  40aa64:	mov    QWORD PTR [rbp-0x8],rdi
  40aa68:	mov    WORD PTR [rbp-0xa],si
  40aa6c:	mov    rax,QWORD PTR [rbp-0x8]
  40aa70:	mov    ecx,DWORD PTR [rax+0xf4]
  40aa76:	movzx  edx,WORD PTR [rbp-0xa]
  40aa7a:	sub    edx,0x1
  40aa7d:	and    ecx,edx
  40aa7f:	mov    eax,ecx
  40aa81:	pop    rbp
  40aa82:	ret    
  40aa83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa8d:	nop    DWORD PTR [rax]
  40aa90:	push   rbp
  40aa91:	mov    rbp,rsp
  40aa94:	sub    rsp,0x30
  40aa98:	mov    QWORD PTR [rbp-0x10],rdi
  40aa9c:	mov    QWORD PTR [rbp-0x18],rsi
  40aaa0:	mov    DWORD PTR [rbp-0x1c],edx
  40aaa3:	mov    rax,QWORD PTR [rbp-0x10]
  40aaa7:	add    rax,0x58
  40aaad:	add    rax,0x10
  40aab3:	mov    QWORD PTR [rbp-0x28],rax
  40aab7:	mov    rax,QWORD PTR [rbp-0x10]
  40aabb:	mov    rax,QWORD PTR [rax+0x50]
  40aabf:	mov    rcx,QWORD PTR [rbp-0x10]
  40aac3:	mov    rdi,QWORD PTR [rcx+0x40]
  40aac7:	mov    rsi,QWORD PTR [rbp-0x28]
  40aacb:	mov    rcx,QWORD PTR [rbp-0x10]
  40aacf:	mov    edx,DWORD PTR [rcx+0x28]
  40aad2:	mov    ecx,edx
  40aad4:	add    rcx,QWORD PTR [rbp-0x18]
  40aad8:	mov    rdx,rcx
  40aadb:	mov    r8d,0x1
  40aae1:	mov    ecx,r8d
  40aae4:	call   rax
  40aae6:	cmp    eax,0x0
  40aae9:	je     40aafb <flatcc_builder_get_emit_context@@Base+0xbb>
  40aaef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aaf6:	jmp    40ab0e <flatcc_builder_get_emit_context@@Base+0xce>
  40aafb:	mov    rdi,QWORD PTR [rbp-0x10]
  40aaff:	mov    esi,DWORD PTR [rbp-0x1c]
  40ab02:	call   406a30 <flatcc_builder_start_struct@@Base+0x70>
  40ab07:	mov    DWORD PTR [rbp-0x4],0x0
  40ab0e:	mov    eax,DWORD PTR [rbp-0x4]
  40ab11:	add    rsp,0x30
  40ab15:	pop    rbp
  40ab16:	ret    
  40ab17:	nop    WORD PTR [rax+rax*1+0x0]
  40ab20:	push   rbp
  40ab21:	mov    rbp,rsp
  40ab24:	sub    rsp,0x30
  40ab28:	mov    QWORD PTR [rbp-0x10],rdi
  40ab2c:	mov    rax,QWORD PTR [rbp-0x10]
  40ab30:	add    rax,0x58
  40ab36:	add    rax,0x50
  40ab3c:	mov    QWORD PTR [rbp-0x18],rax
  40ab40:	mov    rax,QWORD PTR [rbp-0x10]
  40ab44:	cmp    DWORD PTR [rax+0xe4],0x0
  40ab4b:	jne    40ab56 <flatcc_builder_get_emit_context@@Base+0x116>
  40ab51:	jmp    40ab75 <flatcc_builder_get_emit_context@@Base+0x135>
  40ab56:	lea    rdi,[rip+0x8ba9]        # 413706 <flatcc_builder_padding_base@@Base+0x1396>
  40ab5d:	lea    rsi,[rip+0x7a1e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40ab64:	mov    edx,0x156
  40ab69:	lea    rcx,[rip+0x8ba5]        # 413715 <flatcc_builder_padding_base@@Base+0x13a5>
  40ab70:	call   403060 <__assert_fail@plt>
  40ab75:	xor    r8d,r8d
  40ab78:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab7c:	mov    rax,QWORD PTR [rbp-0x10]
  40ab80:	mov    ecx,DWORD PTR [rax+0xe4]
  40ab86:	mov    edx,ecx
  40ab88:	mov    esi,0x6
  40ab8d:	mov    ecx,0x10
  40ab92:	call   405620 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40ab97:	cmp    rax,0x0
  40ab9b:	jne    40abad <flatcc_builder_get_emit_context@@Base+0x16d>
  40aba1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aba8:	jmp    40ac81 <flatcc_builder_get_emit_context@@Base+0x241>
  40abad:	mov    rax,QWORD PTR [rbp-0x10]
  40abb1:	mov    DWORD PTR [rax+0xe4],0x10
  40abbb:	mov    QWORD PTR [rbp-0x20],0x100
  40abc3:	mov    rax,QWORD PTR [rbp-0x10]
  40abc7:	mov    rax,QWORD PTR [rax+0x50]
  40abcb:	mov    rcx,QWORD PTR [rbp-0x10]
  40abcf:	mov    rdi,QWORD PTR [rcx+0x40]
  40abd3:	mov    rsi,QWORD PTR [rbp-0x18]
  40abd7:	mov    rdx,QWORD PTR [rbp-0x20]
  40abdb:	mov    ecx,0x1
  40abe0:	mov    r8d,0x5
  40abe6:	call   rax
  40abe8:	cmp    eax,0x0
  40abeb:	je     40abfd <flatcc_builder_get_emit_context@@Base+0x1bd>
  40abf1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40abf8:	jmp    40ac81 <flatcc_builder_get_emit_context@@Base+0x241>
  40abfd:	jmp    40ac02 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40ac02:	mov    rax,QWORD PTR [rbp-0x20]
  40ac06:	shl    rax,0x1
  40ac0a:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac0e:	cmp    rax,QWORD PTR [rcx+0x8]
  40ac12:	ja     40ac29 <flatcc_builder_get_emit_context@@Base+0x1e9>
  40ac18:	mov    rax,QWORD PTR [rbp-0x20]
  40ac1c:	shl    rax,0x1
  40ac20:	mov    QWORD PTR [rbp-0x20],rax
  40ac24:	jmp    40ac02 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40ac29:	mov    rax,QWORD PTR [rbp-0x20]
  40ac2d:	shr    rax,0x2
  40ac31:	mov    QWORD PTR [rbp-0x20],rax
  40ac35:	mov    QWORD PTR [rbp-0x28],0x0
  40ac3d:	mov    rcx,QWORD PTR [rbp-0x28]
  40ac41:	mov    eax,0x1
  40ac46:	shl    rax,cl
  40ac49:	cmp    rax,QWORD PTR [rbp-0x20]
  40ac4d:	jae    40ac6b <flatcc_builder_get_emit_context@@Base+0x22b>
  40ac53:	jmp    40ac58 <flatcc_builder_get_emit_context@@Base+0x218>
  40ac58:	mov    rax,QWORD PTR [rbp-0x28]
  40ac5c:	add    rax,0x1
  40ac62:	mov    QWORD PTR [rbp-0x28],rax
  40ac66:	jmp    40ac3d <flatcc_builder_get_emit_context@@Base+0x1fd>
  40ac6b:	mov    rax,QWORD PTR [rbp-0x28]
  40ac6f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac73:	mov    QWORD PTR [rcx+0xd8],rax
  40ac7a:	mov    DWORD PTR [rbp-0x4],0x0
  40ac81:	mov    eax,DWORD PTR [rbp-0x4]
  40ac84:	add    rsp,0x30
  40ac88:	pop    rbp
  40ac89:	ret    
  40ac8a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ac90 <flatcc_emitter_recycle_page@@Base>:
  40ac90:	push   rbp
  40ac91:	mov    rbp,rsp
  40ac94:	mov    QWORD PTR [rbp-0x10],rdi
  40ac98:	mov    QWORD PTR [rbp-0x18],rsi
  40ac9c:	mov    rax,QWORD PTR [rbp-0x18]
  40aca0:	mov    rcx,QWORD PTR [rbp-0x10]
  40aca4:	cmp    rax,QWORD PTR [rcx]
  40aca7:	je     40acbf <flatcc_emitter_recycle_page@@Base+0x2f>
  40acad:	mov    rax,QWORD PTR [rbp-0x18]
  40acb1:	mov    rcx,QWORD PTR [rbp-0x10]
  40acb5:	cmp    rax,QWORD PTR [rcx+0x8]
  40acb9:	jne    40accb <flatcc_emitter_recycle_page@@Base+0x3b>
  40acbf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40acc6:	jmp    40ad63 <flatcc_emitter_recycle_page@@Base+0xd3>
  40accb:	mov    rax,QWORD PTR [rbp-0x18]
  40accf:	mov    rax,QWORD PTR [rax+0xb88]
  40acd6:	mov    rcx,QWORD PTR [rbp-0x18]
  40acda:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ace1:	mov    QWORD PTR [rcx+0xb88],rax
  40ace8:	mov    rax,QWORD PTR [rbp-0x18]
  40acec:	mov    rax,QWORD PTR [rax+0xb80]
  40acf3:	mov    rcx,QWORD PTR [rbp-0x18]
  40acf7:	mov    rcx,QWORD PTR [rcx+0xb88]
  40acfe:	mov    QWORD PTR [rcx+0xb80],rax
  40ad05:	mov    rax,QWORD PTR [rbp-0x10]
  40ad09:	mov    rax,QWORD PTR [rax]
  40ad0c:	mov    rax,QWORD PTR [rax+0xb88]
  40ad13:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad17:	mov    QWORD PTR [rcx+0xb88],rax
  40ad1e:	mov    rax,QWORD PTR [rbp-0x10]
  40ad22:	mov    rax,QWORD PTR [rax]
  40ad25:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad29:	mov    QWORD PTR [rcx+0xb80],rax
  40ad30:	mov    rax,QWORD PTR [rbp-0x18]
  40ad34:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad38:	mov    rcx,QWORD PTR [rcx+0xb88]
  40ad3f:	mov    QWORD PTR [rcx+0xb80],rax
  40ad46:	mov    rax,QWORD PTR [rbp-0x18]
  40ad4a:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad4e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ad55:	mov    QWORD PTR [rcx+0xb88],rax
  40ad5c:	mov    DWORD PTR [rbp-0x4],0x0
  40ad63:	mov    eax,DWORD PTR [rbp-0x4]
  40ad66:	pop    rbp
  40ad67:	ret    
  40ad68:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ad70 <flatcc_emitter_reset@@Base>:
  40ad70:	push   rbp
  40ad71:	mov    rbp,rsp
  40ad74:	sub    rsp,0x20
  40ad78:	mov    QWORD PTR [rbp-0x8],rdi
  40ad7c:	mov    rax,QWORD PTR [rbp-0x8]
  40ad80:	mov    rax,QWORD PTR [rax]
  40ad83:	mov    QWORD PTR [rbp-0x10],rax
  40ad87:	mov    rax,QWORD PTR [rbp-0x8]
  40ad8b:	cmp    QWORD PTR [rax],0x0
  40ad8f:	jne    40ad9a <flatcc_emitter_reset@@Base+0x2a>
  40ad95:	jmp    40af08 <flatcc_emitter_reset@@Base+0x198>
  40ad9a:	xor    eax,eax
  40ad9c:	mov    rcx,QWORD PTR [rbp-0x8]
  40ada0:	mov    rcx,QWORD PTR [rcx]
  40ada3:	mov    rdx,QWORD PTR [rbp-0x8]
  40ada7:	mov    QWORD PTR [rdx+0x8],rcx
  40adab:	mov    rcx,QWORD PTR [rbp-0x8]
  40adaf:	mov    rcx,QWORD PTR [rcx]
  40adb2:	add    rcx,0x5c0
  40adb9:	mov    rdx,QWORD PTR [rbp-0x8]
  40adbd:	mov    QWORD PTR [rdx+0x10],rcx
  40adc1:	mov    rcx,QWORD PTR [rbp-0x8]
  40adc5:	mov    rcx,QWORD PTR [rcx+0x10]
  40adc9:	mov    rdx,QWORD PTR [rbp-0x8]
  40adcd:	mov    QWORD PTR [rdx+0x20],rcx
  40add1:	mov    rcx,QWORD PTR [rbp-0x8]
  40add5:	mov    QWORD PTR [rcx+0x18],0x5c0
  40addd:	mov    rcx,QWORD PTR [rbp-0x8]
  40ade1:	mov    QWORD PTR [rcx+0x28],0x5c0
  40ade9:	mov    rcx,QWORD PTR [rbp-0x8]
  40aded:	mov    rcx,QWORD PTR [rcx+0x18]
  40adf1:	sub    eax,ecx
  40adf3:	mov    rdx,QWORD PTR [rbp-0x8]
  40adf7:	mov    rdx,QWORD PTR [rdx]
  40adfa:	mov    DWORD PTR [rdx+0xb90],eax
  40ae00:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae04:	cmp    QWORD PTR [rdx+0x40],0x0
  40ae09:	jne    40ae1f <flatcc_emitter_reset@@Base+0xaf>
  40ae0f:	mov    rax,QWORD PTR [rbp-0x8]
  40ae13:	mov    rax,QWORD PTR [rax+0x30]
  40ae17:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae1b:	mov    QWORD PTR [rcx+0x40],rax
  40ae1f:	mov    rax,QWORD PTR [rbp-0x8]
  40ae23:	imul   rax,QWORD PTR [rax+0x40],0x3
  40ae2b:	shr    rax,0x2
  40ae2f:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae33:	mov    rcx,QWORD PTR [rcx+0x30]
  40ae37:	shr    rcx,0x2
  40ae3b:	add    rax,rcx
  40ae3e:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae42:	mov    QWORD PTR [rcx+0x40],rax
  40ae46:	mov    rax,QWORD PTR [rbp-0x8]
  40ae4a:	mov    QWORD PTR [rax+0x30],0x0
  40ae52:	xor    eax,eax
  40ae54:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae58:	mov    rcx,QWORD PTR [rcx+0x40]
  40ae5c:	shl    rcx,0x1
  40ae60:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae64:	cmp    rcx,QWORD PTR [rdx+0x38]
  40ae68:	mov    BYTE PTR [rbp-0x11],al
  40ae6b:	jae    40ae8d <flatcc_emitter_reset@@Base+0x11d>
  40ae71:	mov    rax,QWORD PTR [rbp-0x8]
  40ae75:	mov    rax,QWORD PTR [rax+0x8]
  40ae79:	mov    rax,QWORD PTR [rax+0xb80]
  40ae80:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae84:	cmp    rax,QWORD PTR [rcx]
  40ae87:	setne  dl
  40ae8a:	mov    BYTE PTR [rbp-0x11],dl
  40ae8d:	mov    al,BYTE PTR [rbp-0x11]
  40ae90:	test   al,0x1
  40ae92:	jne    40ae9d <flatcc_emitter_reset@@Base+0x12d>
  40ae98:	jmp    40af08 <flatcc_emitter_reset@@Base+0x198>
  40ae9d:	mov    rax,QWORD PTR [rbp-0x8]
  40aea1:	mov    rax,QWORD PTR [rax+0x8]
  40aea5:	mov    rax,QWORD PTR [rax+0xb80]
  40aeac:	mov    QWORD PTR [rbp-0x10],rax
  40aeb0:	mov    rax,QWORD PTR [rbp-0x10]
  40aeb4:	mov    rax,QWORD PTR [rax+0xb80]
  40aebb:	mov    rcx,QWORD PTR [rbp-0x8]
  40aebf:	mov    rcx,QWORD PTR [rcx+0x8]
  40aec3:	mov    QWORD PTR [rcx+0xb80],rax
  40aeca:	mov    rax,QWORD PTR [rbp-0x8]
  40aece:	mov    rax,QWORD PTR [rax+0x8]
  40aed2:	mov    rcx,QWORD PTR [rbp-0x10]
  40aed6:	mov    rcx,QWORD PTR [rcx+0xb80]
  40aedd:	mov    QWORD PTR [rcx+0xb88],rax
  40aee4:	mov    rax,QWORD PTR [rbp-0x10]
  40aee8:	mov    rdi,rax
  40aeeb:	call   403030 <free@plt>
  40aef0:	mov    rax,QWORD PTR [rbp-0x8]
  40aef4:	mov    rcx,QWORD PTR [rax+0x38]
  40aef8:	sub    rcx,0xb80
  40aeff:	mov    QWORD PTR [rax+0x38],rcx
  40af03:	jmp    40ae52 <flatcc_emitter_reset@@Base+0xe2>
  40af08:	add    rsp,0x20
  40af0c:	pop    rbp
  40af0d:	ret    
  40af0e:	xchg   ax,ax

000000000040af10 <flatcc_emitter_clear@@Base>:
  40af10:	push   rbp
  40af11:	mov    rbp,rsp
  40af14:	sub    rsp,0x10
  40af18:	mov    QWORD PTR [rbp-0x8],rdi
  40af1c:	mov    rax,QWORD PTR [rbp-0x8]
  40af20:	mov    rax,QWORD PTR [rax]
  40af23:	mov    QWORD PTR [rbp-0x10],rax
  40af27:	cmp    QWORD PTR [rbp-0x10],0x0
  40af2c:	jne    40af37 <flatcc_emitter_clear@@Base+0x27>
  40af32:	jmp    40afa5 <flatcc_emitter_clear@@Base+0x95>
  40af37:	mov    rax,QWORD PTR [rbp-0x10]
  40af3b:	mov    rax,QWORD PTR [rax+0xb88]
  40af42:	mov    QWORD PTR [rax+0xb80],0x0
  40af4d:	mov    rax,QWORD PTR [rbp-0x10]
  40af51:	cmp    QWORD PTR [rax+0xb80],0x0
  40af59:	je     40af86 <flatcc_emitter_clear@@Base+0x76>
  40af5f:	mov    rax,QWORD PTR [rbp-0x10]
  40af63:	mov    rax,QWORD PTR [rax+0xb80]
  40af6a:	mov    QWORD PTR [rbp-0x10],rax
  40af6e:	mov    rax,QWORD PTR [rbp-0x10]
  40af72:	mov    rax,QWORD PTR [rax+0xb88]
  40af79:	mov    rdi,rax
  40af7c:	call   403030 <free@plt>
  40af81:	jmp    40af4d <flatcc_emitter_clear@@Base+0x3d>
  40af86:	mov    rax,QWORD PTR [rbp-0x10]
  40af8a:	mov    rdi,rax
  40af8d:	call   403030 <free@plt>
  40af92:	xor    esi,esi
  40af94:	mov    rax,QWORD PTR [rbp-0x8]
  40af98:	mov    rdi,rax
  40af9b:	mov    edx,0x48
  40afa0:	call   403070 <memset@plt>
  40afa5:	add    rsp,0x10
  40afa9:	pop    rbp
  40afaa:	ret    
  40afab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040afb0 <flatcc_emitter@@Base>:
  40afb0:	push   rbp
  40afb1:	mov    rbp,rsp
  40afb4:	sub    rsp,0x40
  40afb8:	mov    QWORD PTR [rbp-0x10],rdi
  40afbc:	mov    QWORD PTR [rbp-0x18],rsi
  40afc0:	mov    DWORD PTR [rbp-0x1c],edx
  40afc3:	mov    DWORD PTR [rbp-0x20],ecx
  40afc6:	mov    QWORD PTR [rbp-0x28],r8
  40afca:	mov    rax,QWORD PTR [rbp-0x10]
  40afce:	mov    QWORD PTR [rbp-0x30],rax
  40afd2:	mov    rax,QWORD PTR [rbp-0x28]
  40afd6:	mov    rsi,QWORD PTR [rbp-0x30]
  40afda:	add    rax,QWORD PTR [rsi+0x30]
  40afde:	mov    QWORD PTR [rsi+0x30],rax
  40afe2:	cmp    DWORD PTR [rbp-0x20],0x0
  40afe6:	jge    40b0aa <flatcc_emitter@@Base+0xfa>
  40afec:	mov    rax,QWORD PTR [rbp-0x28]
  40aff0:	mov    rcx,QWORD PTR [rbp-0x30]
  40aff4:	cmp    rax,QWORD PTR [rcx+0x18]
  40aff8:	ja     40b03c <flatcc_emitter@@Base+0x8c>
  40affe:	xor    eax,eax
  40b000:	mov    ecx,eax
  40b002:	mov    rdx,QWORD PTR [rbp-0x28]
  40b006:	mov    rsi,QWORD PTR [rbp-0x30]
  40b00a:	mov    rdi,QWORD PTR [rsi+0x10]
  40b00e:	sub    rcx,rdx
  40b011:	add    rdi,rcx
  40b014:	mov    QWORD PTR [rsi+0x10],rdi
  40b018:	mov    rcx,QWORD PTR [rbp-0x28]
  40b01c:	mov    rdx,QWORD PTR [rbp-0x30]
  40b020:	mov    rsi,QWORD PTR [rdx+0x18]
  40b024:	sub    rsi,rcx
  40b027:	mov    QWORD PTR [rdx+0x18],rsi
  40b02b:	mov    rcx,QWORD PTR [rbp-0x30]
  40b02f:	mov    rcx,QWORD PTR [rcx+0x10]
  40b033:	mov    QWORD PTR [rbp-0x38],rcx
  40b037:	jmp    40b15a <flatcc_emitter@@Base+0x1aa>
  40b03c:	mov    eax,DWORD PTR [rbp-0x1c]
  40b03f:	mov    rcx,QWORD PTR [rbp-0x18]
  40b043:	movsxd rdx,eax
  40b046:	shl    rdx,0x4
  40b04a:	add    rcx,rdx
  40b04d:	mov    QWORD PTR [rbp-0x18],rcx
  40b051:	mov    eax,DWORD PTR [rbp-0x1c]
  40b054:	mov    ecx,eax
  40b056:	add    ecx,0xffffffff
  40b059:	mov    DWORD PTR [rbp-0x1c],ecx
  40b05c:	cmp    eax,0x0
  40b05f:	je     40b0a5 <flatcc_emitter@@Base+0xf5>
  40b065:	mov    rax,QWORD PTR [rbp-0x18]
  40b069:	add    rax,0xfffffffffffffff0
  40b06f:	mov    QWORD PTR [rbp-0x18],rax
  40b073:	mov    rdi,QWORD PTR [rbp-0x30]
  40b077:	mov    rax,QWORD PTR [rbp-0x18]
  40b07b:	mov    rsi,QWORD PTR [rax]
  40b07e:	mov    rax,QWORD PTR [rbp-0x18]
  40b082:	mov    rdx,QWORD PTR [rax+0x8]
  40b086:	call   40b1c0 <flatcc_emitter@@Base+0x210>
  40b08b:	cmp    eax,0x0
  40b08e:	je     40b0a0 <flatcc_emitter@@Base+0xf0>
  40b094:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b09b:	jmp    40b1b5 <flatcc_emitter@@Base+0x205>
  40b0a0:	jmp    40b051 <flatcc_emitter@@Base+0xa1>
  40b0a5:	jmp    40b14e <flatcc_emitter@@Base+0x19e>
  40b0aa:	mov    rax,QWORD PTR [rbp-0x28]
  40b0ae:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0b2:	cmp    rax,QWORD PTR [rcx+0x28]
  40b0b6:	ja     40b0f0 <flatcc_emitter@@Base+0x140>
  40b0bc:	mov    rax,QWORD PTR [rbp-0x30]
  40b0c0:	mov    rax,QWORD PTR [rax+0x20]
  40b0c4:	mov    QWORD PTR [rbp-0x38],rax
  40b0c8:	mov    rax,QWORD PTR [rbp-0x28]
  40b0cc:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0d0:	add    rax,QWORD PTR [rcx+0x20]
  40b0d4:	mov    QWORD PTR [rcx+0x20],rax
  40b0d8:	mov    rax,QWORD PTR [rbp-0x28]
  40b0dc:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0e0:	mov    rdx,QWORD PTR [rcx+0x28]
  40b0e4:	sub    rdx,rax
  40b0e7:	mov    QWORD PTR [rcx+0x28],rdx
  40b0eb:	jmp    40b15a <flatcc_emitter@@Base+0x1aa>
  40b0f0:	jmp    40b0f5 <flatcc_emitter@@Base+0x145>
  40b0f5:	mov    eax,DWORD PTR [rbp-0x1c]
  40b0f8:	mov    ecx,eax
  40b0fa:	add    ecx,0xffffffff
  40b0fd:	mov    DWORD PTR [rbp-0x1c],ecx
  40b100:	cmp    eax,0x0
  40b103:	je     40b149 <flatcc_emitter@@Base+0x199>
  40b109:	mov    rdi,QWORD PTR [rbp-0x30]
  40b10d:	mov    rax,QWORD PTR [rbp-0x18]
  40b111:	mov    rsi,QWORD PTR [rax]
  40b114:	mov    rax,QWORD PTR [rbp-0x18]
  40b118:	mov    rdx,QWORD PTR [rax+0x8]
  40b11c:	call   40b2c0 <flatcc_emitter@@Base+0x310>
  40b121:	cmp    eax,0x0
  40b124:	je     40b136 <flatcc_emitter@@Base+0x186>
  40b12a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b131:	jmp    40b1b5 <flatcc_emitter@@Base+0x205>
  40b136:	mov    rax,QWORD PTR [rbp-0x18]
  40b13a:	add    rax,0x10
  40b140:	mov    QWORD PTR [rbp-0x18],rax
  40b144:	jmp    40b0f5 <flatcc_emitter@@Base+0x145>
  40b149:	jmp    40b14e <flatcc_emitter@@Base+0x19e>
  40b14e:	mov    DWORD PTR [rbp-0x4],0x0
  40b155:	jmp    40b1b5 <flatcc_emitter@@Base+0x205>
  40b15a:	jmp    40b15f <flatcc_emitter@@Base+0x1af>
  40b15f:	mov    eax,DWORD PTR [rbp-0x1c]
  40b162:	mov    ecx,eax
  40b164:	add    ecx,0xffffffff
  40b167:	mov    DWORD PTR [rbp-0x1c],ecx
  40b16a:	cmp    eax,0x0
  40b16d:	je     40b1ae <flatcc_emitter@@Base+0x1fe>
  40b173:	mov    rdi,QWORD PTR [rbp-0x38]
  40b177:	mov    rax,QWORD PTR [rbp-0x18]
  40b17b:	mov    rsi,QWORD PTR [rax]
  40b17e:	mov    rax,QWORD PTR [rbp-0x18]
  40b182:	mov    rdx,QWORD PTR [rax+0x8]
  40b186:	call   4030b0 <memcpy@plt>
  40b18b:	mov    rax,QWORD PTR [rbp-0x18]
  40b18f:	mov    rax,QWORD PTR [rax+0x8]
  40b193:	add    rax,QWORD PTR [rbp-0x38]
  40b197:	mov    QWORD PTR [rbp-0x38],rax
  40b19b:	mov    rax,QWORD PTR [rbp-0x18]
  40b19f:	add    rax,0x10
  40b1a5:	mov    QWORD PTR [rbp-0x18],rax
  40b1a9:	jmp    40b15f <flatcc_emitter@@Base+0x1af>
  40b1ae:	mov    DWORD PTR [rbp-0x4],0x0
  40b1b5:	mov    eax,DWORD PTR [rbp-0x4]
  40b1b8:	add    rsp,0x40
  40b1bc:	pop    rbp
  40b1bd:	ret    
  40b1be:	xchg   ax,ax
  40b1c0:	push   rbp
  40b1c1:	mov    rbp,rsp
  40b1c4:	sub    rsp,0x30
  40b1c8:	mov    QWORD PTR [rbp-0x10],rdi
  40b1cc:	mov    QWORD PTR [rbp-0x18],rsi
  40b1d0:	mov    QWORD PTR [rbp-0x20],rdx
  40b1d4:	mov    rax,QWORD PTR [rbp-0x20]
  40b1d8:	add    rax,QWORD PTR [rbp-0x18]
  40b1dc:	mov    QWORD PTR [rbp-0x18],rax
  40b1e0:	cmp    QWORD PTR [rbp-0x20],0x0
  40b1e5:	je     40b2af <flatcc_emitter@@Base+0x2ff>
  40b1eb:	mov    rax,QWORD PTR [rbp-0x20]
  40b1ef:	mov    QWORD PTR [rbp-0x28],rax
  40b1f3:	mov    rax,QWORD PTR [rbp-0x28]
  40b1f7:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1fb:	cmp    rax,QWORD PTR [rcx+0x18]
  40b1ff:	jbe    40b244 <flatcc_emitter@@Base+0x294>
  40b205:	mov    rax,QWORD PTR [rbp-0x10]
  40b209:	mov    rax,QWORD PTR [rax+0x18]
  40b20d:	mov    QWORD PTR [rbp-0x28],rax
  40b211:	cmp    QWORD PTR [rbp-0x28],0x0
  40b216:	jne    40b23f <flatcc_emitter@@Base+0x28f>
  40b21c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b220:	call   40b4f0 <flatcc_emitter_copy_buffer@@Base+0x150>
  40b225:	cmp    eax,0x0
  40b228:	je     40b23a <flatcc_emitter@@Base+0x28a>
  40b22e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b235:	jmp    40b2b6 <flatcc_emitter@@Base+0x306>
  40b23a:	jmp    40b1e0 <flatcc_emitter@@Base+0x230>
  40b23f:	jmp    40b244 <flatcc_emitter@@Base+0x294>
  40b244:	xor    eax,eax
  40b246:	mov    ecx,eax
  40b248:	mov    rdx,QWORD PTR [rbp-0x28]
  40b24c:	mov    rsi,QWORD PTR [rbp-0x10]
  40b250:	mov    rdi,QWORD PTR [rsi+0x10]
  40b254:	mov    r8,rcx
  40b257:	sub    r8,rdx
  40b25a:	add    rdi,r8
  40b25d:	mov    QWORD PTR [rsi+0x10],rdi
  40b261:	mov    rdx,QWORD PTR [rbp-0x28]
  40b265:	mov    rsi,QWORD PTR [rbp-0x10]
  40b269:	mov    rdi,QWORD PTR [rsi+0x18]
  40b26d:	sub    rdi,rdx
  40b270:	mov    QWORD PTR [rsi+0x18],rdi
  40b274:	mov    rdx,QWORD PTR [rbp-0x28]
  40b278:	mov    rsi,QWORD PTR [rbp-0x18]
  40b27c:	sub    rcx,rdx
  40b27f:	add    rsi,rcx
  40b282:	mov    QWORD PTR [rbp-0x18],rsi
  40b286:	mov    rcx,QWORD PTR [rbp-0x28]
  40b28a:	mov    rdx,QWORD PTR [rbp-0x20]
  40b28e:	sub    rdx,rcx
  40b291:	mov    QWORD PTR [rbp-0x20],rdx
  40b295:	mov    rcx,QWORD PTR [rbp-0x10]
  40b299:	mov    rdi,QWORD PTR [rcx+0x10]
  40b29d:	mov    rsi,QWORD PTR [rbp-0x18]
  40b2a1:	mov    rdx,QWORD PTR [rbp-0x28]
  40b2a5:	call   4030b0 <memcpy@plt>
  40b2aa:	jmp    40b1e0 <flatcc_emitter@@Base+0x230>
  40b2af:	mov    DWORD PTR [rbp-0x4],0x0
  40b2b6:	mov    eax,DWORD PTR [rbp-0x4]
  40b2b9:	add    rsp,0x30
  40b2bd:	pop    rbp
  40b2be:	ret    
  40b2bf:	nop
  40b2c0:	push   rbp
  40b2c1:	mov    rbp,rsp
  40b2c4:	sub    rsp,0x30
  40b2c8:	mov    QWORD PTR [rbp-0x10],rdi
  40b2cc:	mov    QWORD PTR [rbp-0x18],rsi
  40b2d0:	mov    QWORD PTR [rbp-0x20],rdx
  40b2d4:	cmp    QWORD PTR [rbp-0x20],0x0
  40b2d9:	je     40b390 <flatcc_emitter@@Base+0x3e0>
  40b2df:	mov    rax,QWORD PTR [rbp-0x20]
  40b2e3:	mov    QWORD PTR [rbp-0x28],rax
  40b2e7:	mov    rax,QWORD PTR [rbp-0x28]
  40b2eb:	mov    rcx,QWORD PTR [rbp-0x10]
  40b2ef:	cmp    rax,QWORD PTR [rcx+0x28]
  40b2f3:	jbe    40b338 <flatcc_emitter@@Base+0x388>
  40b2f9:	mov    rax,QWORD PTR [rbp-0x10]
  40b2fd:	mov    rax,QWORD PTR [rax+0x28]
  40b301:	mov    QWORD PTR [rbp-0x28],rax
  40b305:	cmp    QWORD PTR [rbp-0x28],0x0
  40b30a:	jne    40b333 <flatcc_emitter@@Base+0x383>
  40b310:	mov    rdi,QWORD PTR [rbp-0x10]
  40b314:	call   40b710 <flatcc_emitter_copy_buffer@@Base+0x370>
  40b319:	cmp    eax,0x0
  40b31c:	je     40b32e <flatcc_emitter@@Base+0x37e>
  40b322:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b329:	jmp    40b397 <flatcc_emitter@@Base+0x3e7>
  40b32e:	jmp    40b2d4 <flatcc_emitter@@Base+0x324>
  40b333:	jmp    40b338 <flatcc_emitter@@Base+0x388>
  40b338:	mov    rax,QWORD PTR [rbp-0x10]
  40b33c:	mov    rdi,QWORD PTR [rax+0x20]
  40b340:	mov    rsi,QWORD PTR [rbp-0x18]
  40b344:	mov    rdx,QWORD PTR [rbp-0x28]
  40b348:	call   4030b0 <memcpy@plt>
  40b34d:	mov    rax,QWORD PTR [rbp-0x28]
  40b351:	mov    rcx,QWORD PTR [rbp-0x20]
  40b355:	sub    rcx,rax
  40b358:	mov    QWORD PTR [rbp-0x20],rcx
  40b35c:	mov    rax,QWORD PTR [rbp-0x28]
  40b360:	add    rax,QWORD PTR [rbp-0x18]
  40b364:	mov    QWORD PTR [rbp-0x18],rax
  40b368:	mov    rax,QWORD PTR [rbp-0x28]
  40b36c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b370:	add    rax,QWORD PTR [rcx+0x20]
  40b374:	mov    QWORD PTR [rcx+0x20],rax
  40b378:	mov    rax,QWORD PTR [rbp-0x28]
  40b37c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b380:	mov    rdx,QWORD PTR [rcx+0x28]
  40b384:	sub    rdx,rax
  40b387:	mov    QWORD PTR [rcx+0x28],rdx
  40b38b:	jmp    40b2d4 <flatcc_emitter@@Base+0x324>
  40b390:	mov    DWORD PTR [rbp-0x4],0x0
  40b397:	mov    eax,DWORD PTR [rbp-0x4]
  40b39a:	add    rsp,0x30
  40b39e:	pop    rbp
  40b39f:	ret    

000000000040b3a0 <flatcc_emitter_copy_buffer@@Base>:
  40b3a0:	push   rbp
  40b3a1:	mov    rbp,rsp
  40b3a4:	sub    rsp,0x30
  40b3a8:	mov    QWORD PTR [rbp-0x10],rdi
  40b3ac:	mov    QWORD PTR [rbp-0x18],rsi
  40b3b0:	mov    QWORD PTR [rbp-0x20],rdx
  40b3b4:	mov    rax,QWORD PTR [rbp-0x20]
  40b3b8:	mov    rcx,QWORD PTR [rbp-0x10]
  40b3bc:	cmp    rax,QWORD PTR [rcx+0x30]
  40b3c0:	jae    40b3d3 <flatcc_emitter_copy_buffer@@Base+0x33>
  40b3c6:	mov    QWORD PTR [rbp-0x8],0x0
  40b3ce:	jmp    40b4d8 <flatcc_emitter_copy_buffer@@Base+0x138>
  40b3d3:	mov    rax,QWORD PTR [rbp-0x10]
  40b3d7:	cmp    QWORD PTR [rax],0x0
  40b3db:	jne    40b3ee <flatcc_emitter_copy_buffer@@Base+0x4e>
  40b3e1:	mov    QWORD PTR [rbp-0x8],0x0
  40b3e9:	jmp    40b4d8 <flatcc_emitter_copy_buffer@@Base+0x138>
  40b3ee:	mov    rax,QWORD PTR [rbp-0x10]
  40b3f2:	mov    rax,QWORD PTR [rax]
  40b3f5:	mov    rcx,QWORD PTR [rbp-0x10]
  40b3f9:	cmp    rax,QWORD PTR [rcx+0x8]
  40b3fd:	jne    40b429 <flatcc_emitter_copy_buffer@@Base+0x89>
  40b403:	mov    rdi,QWORD PTR [rbp-0x18]
  40b407:	mov    rax,QWORD PTR [rbp-0x10]
  40b40b:	mov    rsi,QWORD PTR [rax+0x10]
  40b40f:	mov    rax,QWORD PTR [rbp-0x10]
  40b413:	mov    rdx,QWORD PTR [rax+0x30]
  40b417:	call   4030b0 <memcpy@plt>
  40b41c:	mov    rax,QWORD PTR [rbp-0x18]
  40b420:	mov    QWORD PTR [rbp-0x8],rax
  40b424:	jmp    40b4d8 <flatcc_emitter_copy_buffer@@Base+0x138>
  40b429:	mov    rax,QWORD PTR [rbp-0x10]
  40b42d:	mov    ecx,0xb80
  40b432:	sub    rcx,QWORD PTR [rax+0x18]
  40b436:	mov    QWORD PTR [rbp-0x30],rcx
  40b43a:	mov    rdi,QWORD PTR [rbp-0x18]
  40b43e:	mov    rax,QWORD PTR [rbp-0x10]
  40b442:	mov    rsi,QWORD PTR [rax+0x10]
  40b446:	mov    rdx,QWORD PTR [rbp-0x30]
  40b44a:	call   4030b0 <memcpy@plt>
  40b44f:	mov    rax,QWORD PTR [rbp-0x18]
  40b453:	add    rax,QWORD PTR [rbp-0x30]
  40b457:	mov    QWORD PTR [rbp-0x18],rax
  40b45b:	mov    rax,QWORD PTR [rbp-0x10]
  40b45f:	mov    rax,QWORD PTR [rax]
  40b462:	mov    rax,QWORD PTR [rax+0xb80]
  40b469:	mov    QWORD PTR [rbp-0x28],rax
  40b46d:	mov    rax,QWORD PTR [rbp-0x28]
  40b471:	mov    rcx,QWORD PTR [rbp-0x10]
  40b475:	cmp    rax,QWORD PTR [rcx+0x8]
  40b479:	je     40b4b3 <flatcc_emitter_copy_buffer@@Base+0x113>
  40b47f:	mov    rdi,QWORD PTR [rbp-0x18]
  40b483:	mov    rsi,QWORD PTR [rbp-0x28]
  40b487:	mov    edx,0xb80
  40b48c:	call   4030b0 <memcpy@plt>
  40b491:	mov    rax,QWORD PTR [rbp-0x18]
  40b495:	add    rax,0xb80
  40b49b:	mov    QWORD PTR [rbp-0x18],rax
  40b49f:	mov    rax,QWORD PTR [rbp-0x28]
  40b4a3:	mov    rax,QWORD PTR [rax+0xb80]
  40b4aa:	mov    QWORD PTR [rbp-0x28],rax
  40b4ae:	jmp    40b46d <flatcc_emitter_copy_buffer@@Base+0xcd>
  40b4b3:	mov    rdi,QWORD PTR [rbp-0x18]
  40b4b7:	mov    rsi,QWORD PTR [rbp-0x28]
  40b4bb:	mov    rax,QWORD PTR [rbp-0x10]
  40b4bf:	mov    ecx,0xb80
  40b4c4:	sub    rcx,QWORD PTR [rax+0x28]
  40b4c8:	mov    rdx,rcx
  40b4cb:	call   4030b0 <memcpy@plt>
  40b4d0:	mov    rax,QWORD PTR [rbp-0x18]
  40b4d4:	mov    QWORD PTR [rbp-0x8],rax
  40b4d8:	mov    rax,QWORD PTR [rbp-0x8]
  40b4dc:	add    rsp,0x30
  40b4e0:	pop    rbp
  40b4e1:	ret    
  40b4e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4ec:	nop    DWORD PTR [rax+0x0]
  40b4f0:	push   rbp
  40b4f1:	mov    rbp,rsp
  40b4f4:	sub    rsp,0x20
  40b4f8:	mov    QWORD PTR [rbp-0x10],rdi
  40b4fc:	mov    QWORD PTR [rbp-0x18],0x0
  40b504:	mov    rax,QWORD PTR [rbp-0x10]
  40b508:	cmp    QWORD PTR [rax],0x0
  40b50c:	je     40b56f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40b512:	mov    rax,QWORD PTR [rbp-0x10]
  40b516:	mov    rax,QWORD PTR [rax]
  40b519:	mov    rax,QWORD PTR [rax+0xb88]
  40b520:	mov    rcx,QWORD PTR [rbp-0x10]
  40b524:	cmp    rax,QWORD PTR [rcx+0x8]
  40b528:	je     40b56f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40b52e:	mov    rax,QWORD PTR [rbp-0x10]
  40b532:	mov    rax,QWORD PTR [rax]
  40b535:	mov    ecx,DWORD PTR [rax+0xb90]
  40b53b:	sub    ecx,0xb80
  40b541:	mov    rax,QWORD PTR [rbp-0x10]
  40b545:	mov    rax,QWORD PTR [rax]
  40b548:	mov    rax,QWORD PTR [rax+0xb88]
  40b54f:	mov    DWORD PTR [rax+0xb90],ecx
  40b555:	mov    rax,QWORD PTR [rbp-0x10]
  40b559:	mov    rax,QWORD PTR [rax]
  40b55c:	mov    rax,QWORD PTR [rax+0xb88]
  40b563:	mov    rdx,QWORD PTR [rbp-0x10]
  40b567:	mov    QWORD PTR [rdx],rax
  40b56a:	jmp    40b6ac <flatcc_emitter_copy_buffer@@Base+0x30c>
  40b56f:	mov    edi,0xb98
  40b574:	call   4030c0 <malloc@plt>
  40b579:	mov    QWORD PTR [rbp-0x18],rax
  40b57d:	cmp    rax,0x0
  40b581:	jne    40b593 <flatcc_emitter_copy_buffer@@Base+0x1f3>
  40b587:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b58e:	jmp    40b6fb <flatcc_emitter_copy_buffer@@Base+0x35b>
  40b593:	mov    rax,QWORD PTR [rbp-0x10]
  40b597:	mov    rcx,QWORD PTR [rax+0x38]
  40b59b:	add    rcx,0xb80
  40b5a2:	mov    QWORD PTR [rax+0x38],rcx
  40b5a6:	mov    rax,QWORD PTR [rbp-0x10]
  40b5aa:	cmp    QWORD PTR [rax],0x0
  40b5ae:	je     40b60e <flatcc_emitter_copy_buffer@@Base+0x26e>
  40b5b4:	mov    rax,QWORD PTR [rbp-0x10]
  40b5b8:	mov    rax,QWORD PTR [rax+0x8]
  40b5bc:	mov    rcx,QWORD PTR [rbp-0x18]
  40b5c0:	mov    QWORD PTR [rcx+0xb88],rax
  40b5c7:	mov    rax,QWORD PTR [rbp-0x10]
  40b5cb:	mov    rax,QWORD PTR [rax]
  40b5ce:	mov    rcx,QWORD PTR [rbp-0x18]
  40b5d2:	mov    QWORD PTR [rcx+0xb80],rax
  40b5d9:	mov    rax,QWORD PTR [rbp-0x18]
  40b5dd:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5e1:	mov    rcx,QWORD PTR [rcx]
  40b5e4:	mov    QWORD PTR [rcx+0xb88],rax
  40b5eb:	mov    rax,QWORD PTR [rbp-0x18]
  40b5ef:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5f3:	mov    rcx,QWORD PTR [rcx+0x8]
  40b5f7:	mov    QWORD PTR [rcx+0xb80],rax
  40b5fe:	mov    rax,QWORD PTR [rbp-0x18]
  40b602:	mov    rcx,QWORD PTR [rbp-0x10]
  40b606:	mov    QWORD PTR [rcx],rax
  40b609:	jmp    40b6ac <flatcc_emitter_copy_buffer@@Base+0x30c>
  40b60e:	xor    eax,eax
  40b610:	mov    rcx,QWORD PTR [rbp-0x18]
  40b614:	mov    rdx,QWORD PTR [rbp-0x10]
  40b618:	mov    QWORD PTR [rdx],rcx
  40b61b:	mov    rcx,QWORD PTR [rbp-0x18]
  40b61f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b623:	mov    QWORD PTR [rdx+0x8],rcx
  40b627:	mov    rcx,QWORD PTR [rbp-0x18]
  40b62b:	mov    rdx,QWORD PTR [rbp-0x18]
  40b62f:	mov    QWORD PTR [rdx+0xb80],rcx
  40b636:	mov    rcx,QWORD PTR [rbp-0x18]
  40b63a:	mov    rdx,QWORD PTR [rbp-0x18]
  40b63e:	mov    QWORD PTR [rdx+0xb88],rcx
  40b645:	mov    rcx,QWORD PTR [rbp-0x10]
  40b649:	mov    rcx,QWORD PTR [rcx]
  40b64c:	add    rcx,0x5c0
  40b653:	mov    rdx,QWORD PTR [rbp-0x10]
  40b657:	mov    QWORD PTR [rdx+0x10],rcx
  40b65b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b65f:	mov    rcx,QWORD PTR [rcx+0x10]
  40b663:	mov    rdx,QWORD PTR [rbp-0x10]
  40b667:	mov    QWORD PTR [rdx+0x20],rcx
  40b66b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b66f:	mov    QWORD PTR [rcx+0x18],0x5c0
  40b677:	mov    rcx,QWORD PTR [rbp-0x10]
  40b67b:	mov    edx,0xb80
  40b680:	sub    rdx,QWORD PTR [rcx+0x18]
  40b684:	mov    rcx,QWORD PTR [rbp-0x10]
  40b688:	mov    QWORD PTR [rcx+0x28],rdx
  40b68c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b690:	mov    rcx,QWORD PTR [rcx+0x18]
  40b694:	sub    eax,ecx
  40b696:	mov    rdx,QWORD PTR [rbp-0x18]
  40b69a:	mov    DWORD PTR [rdx+0xb90],eax
  40b6a0:	mov    DWORD PTR [rbp-0x4],0x0
  40b6a7:	jmp    40b6fb <flatcc_emitter_copy_buffer@@Base+0x35b>
  40b6ac:	mov    rax,QWORD PTR [rbp-0x10]
  40b6b0:	mov    rax,QWORD PTR [rax]
  40b6b3:	add    rax,0xb80
  40b6b9:	mov    rcx,QWORD PTR [rbp-0x10]
  40b6bd:	mov    QWORD PTR [rcx+0x10],rax
  40b6c1:	mov    rax,QWORD PTR [rbp-0x10]
  40b6c5:	mov    QWORD PTR [rax+0x18],0xb80
  40b6cd:	mov    rax,QWORD PTR [rbp-0x10]
  40b6d1:	mov    rax,QWORD PTR [rax]
  40b6d4:	mov    rax,QWORD PTR [rax+0xb80]
  40b6db:	mov    edx,DWORD PTR [rax+0xb90]
  40b6e1:	sub    edx,0xb80
  40b6e7:	mov    rax,QWORD PTR [rbp-0x10]
  40b6eb:	mov    rax,QWORD PTR [rax]
  40b6ee:	mov    DWORD PTR [rax+0xb90],edx
  40b6f4:	mov    DWORD PTR [rbp-0x4],0x0
  40b6fb:	mov    eax,DWORD PTR [rbp-0x4]
  40b6fe:	add    rsp,0x20
  40b702:	pop    rbp
  40b703:	ret    
  40b704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b70e:	xchg   ax,ax
  40b710:	push   rbp
  40b711:	mov    rbp,rsp
  40b714:	sub    rsp,0x20
  40b718:	mov    QWORD PTR [rbp-0x10],rdi
  40b71c:	mov    QWORD PTR [rbp-0x18],0x0
  40b724:	mov    rax,QWORD PTR [rbp-0x10]
  40b728:	cmp    QWORD PTR [rax+0x8],0x0
  40b72d:	je     40b76b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b733:	mov    rax,QWORD PTR [rbp-0x10]
  40b737:	mov    rax,QWORD PTR [rax+0x8]
  40b73b:	mov    rax,QWORD PTR [rax+0xb80]
  40b742:	mov    rcx,QWORD PTR [rbp-0x10]
  40b746:	cmp    rax,QWORD PTR [rcx]
  40b749:	je     40b76b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b74f:	mov    rax,QWORD PTR [rbp-0x10]
  40b753:	mov    rax,QWORD PTR [rax+0x8]
  40b757:	mov    rax,QWORD PTR [rax+0xb80]
  40b75e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b762:	mov    QWORD PTR [rcx+0x8],rax
  40b766:	jmp    40b8aa <flatcc_emitter_copy_buffer@@Base+0x50a>
  40b76b:	mov    edi,0xb98
  40b770:	call   4030c0 <malloc@plt>
  40b775:	mov    QWORD PTR [rbp-0x18],rax
  40b779:	cmp    rax,0x0
  40b77d:	jne    40b78f <flatcc_emitter_copy_buffer@@Base+0x3ef>
  40b783:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b78a:	jmp    40b8f6 <flatcc_emitter_copy_buffer@@Base+0x556>
  40b78f:	mov    rax,QWORD PTR [rbp-0x10]
  40b793:	mov    rcx,QWORD PTR [rax+0x38]
  40b797:	add    rcx,0xb80
  40b79e:	mov    QWORD PTR [rax+0x38],rcx
  40b7a2:	mov    rax,QWORD PTR [rbp-0x10]
  40b7a6:	cmp    QWORD PTR [rax+0x8],0x0
  40b7ab:	je     40b80c <flatcc_emitter_copy_buffer@@Base+0x46c>
  40b7b1:	mov    rax,QWORD PTR [rbp-0x10]
  40b7b5:	mov    rax,QWORD PTR [rax+0x8]
  40b7b9:	mov    rcx,QWORD PTR [rbp-0x18]
  40b7bd:	mov    QWORD PTR [rcx+0xb88],rax
  40b7c4:	mov    rax,QWORD PTR [rbp-0x10]
  40b7c8:	mov    rax,QWORD PTR [rax]
  40b7cb:	mov    rcx,QWORD PTR [rbp-0x18]
  40b7cf:	mov    QWORD PTR [rcx+0xb80],rax
  40b7d6:	mov    rax,QWORD PTR [rbp-0x18]
  40b7da:	mov    rcx,QWORD PTR [rbp-0x10]
  40b7de:	mov    rcx,QWORD PTR [rcx]
  40b7e1:	mov    QWORD PTR [rcx+0xb88],rax
  40b7e8:	mov    rax,QWORD PTR [rbp-0x18]
  40b7ec:	mov    rcx,QWORD PTR [rbp-0x10]
  40b7f0:	mov    rcx,QWORD PTR [rcx+0x8]
  40b7f4:	mov    QWORD PTR [rcx+0xb80],rax
  40b7fb:	mov    rax,QWORD PTR [rbp-0x18]
  40b7ff:	mov    rcx,QWORD PTR [rbp-0x10]
  40b803:	mov    QWORD PTR [rcx+0x8],rax
  40b807:	jmp    40b8aa <flatcc_emitter_copy_buffer@@Base+0x50a>
  40b80c:	xor    eax,eax
  40b80e:	mov    rcx,QWORD PTR [rbp-0x18]
  40b812:	mov    rdx,QWORD PTR [rbp-0x10]
  40b816:	mov    QWORD PTR [rdx],rcx
  40b819:	mov    rcx,QWORD PTR [rbp-0x18]
  40b81d:	mov    rdx,QWORD PTR [rbp-0x10]
  40b821:	mov    QWORD PTR [rdx+0x8],rcx
  40b825:	mov    rcx,QWORD PTR [rbp-0x18]
  40b829:	mov    rdx,QWORD PTR [rbp-0x18]
  40b82d:	mov    QWORD PTR [rdx+0xb80],rcx
  40b834:	mov    rcx,QWORD PTR [rbp-0x18]
  40b838:	mov    rdx,QWORD PTR [rbp-0x18]
  40b83c:	mov    QWORD PTR [rdx+0xb88],rcx
  40b843:	mov    rcx,QWORD PTR [rbp-0x10]
  40b847:	mov    rcx,QWORD PTR [rcx]
  40b84a:	add    rcx,0x5c0
  40b851:	mov    rdx,QWORD PTR [rbp-0x10]
  40b855:	mov    QWORD PTR [rdx+0x10],rcx
  40b859:	mov    rcx,QWORD PTR [rbp-0x10]
  40b85d:	mov    rcx,QWORD PTR [rcx+0x10]
  40b861:	mov    rdx,QWORD PTR [rbp-0x10]
  40b865:	mov    QWORD PTR [rdx+0x20],rcx
  40b869:	mov    rcx,QWORD PTR [rbp-0x10]
  40b86d:	mov    QWORD PTR [rcx+0x18],0x5c0
  40b875:	mov    rcx,QWORD PTR [rbp-0x10]
  40b879:	mov    edx,0xb80
  40b87e:	sub    rdx,QWORD PTR [rcx+0x18]
  40b882:	mov    rcx,QWORD PTR [rbp-0x10]
  40b886:	mov    QWORD PTR [rcx+0x28],rdx
  40b88a:	mov    rcx,QWORD PTR [rbp-0x10]
  40b88e:	mov    rcx,QWORD PTR [rcx+0x18]
  40b892:	sub    eax,ecx
  40b894:	mov    rdx,QWORD PTR [rbp-0x18]
  40b898:	mov    DWORD PTR [rdx+0xb90],eax
  40b89e:	mov    DWORD PTR [rbp-0x4],0x0
  40b8a5:	jmp    40b8f6 <flatcc_emitter_copy_buffer@@Base+0x556>
  40b8aa:	mov    rax,QWORD PTR [rbp-0x10]
  40b8ae:	mov    rax,QWORD PTR [rax+0x8]
  40b8b2:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8b6:	mov    QWORD PTR [rcx+0x20],rax
  40b8ba:	mov    rax,QWORD PTR [rbp-0x10]
  40b8be:	mov    QWORD PTR [rax+0x28],0xb80
  40b8c6:	mov    rax,QWORD PTR [rbp-0x10]
  40b8ca:	mov    rax,QWORD PTR [rax+0x8]
  40b8ce:	mov    rax,QWORD PTR [rax+0xb88]
  40b8d5:	mov    edx,DWORD PTR [rax+0xb90]
  40b8db:	add    edx,0xb80
  40b8e1:	mov    rax,QWORD PTR [rbp-0x10]
  40b8e5:	mov    rax,QWORD PTR [rax+0x8]
  40b8e9:	mov    DWORD PTR [rax+0xb90],edx
  40b8ef:	mov    DWORD PTR [rbp-0x4],0x0
  40b8f6:	mov    eax,DWORD PTR [rbp-0x4]
  40b8f9:	add    rsp,0x20
  40b8fd:	pop    rbp
  40b8fe:	ret    
  40b8ff:	nop

000000000040b900 <grisu3_diy_fp_encode_double@@Base>:
  40b900:	push   rbp
  40b901:	mov    rbp,rsp
  40b904:	sub    rsp,0x100
  40b90b:	xor    eax,eax
  40b90d:	mov    QWORD PTR [rbp-0x8],rdi
  40b911:	mov    DWORD PTR [rbp-0xc],esi
  40b914:	mov    DWORD PTR [rbp-0x10],edx
  40b917:	mov    DWORD PTR [rbp-0x14],ecx
  40b91a:	mov    QWORD PTR [rbp-0x20],r8
  40b91e:	mov    DWORD PTR [rbp-0x24],0x3
  40b925:	mov    DWORD PTR [rbp-0x28],0x8
  40b92c:	mov    DWORD PTR [rbp-0x2c],0xfffffbce
  40b933:	movabs rdi,0x10000000000000
  40b93d:	mov    QWORD PTR [rbp-0x38],rdi
  40b941:	mov    DWORD PTR [rbp-0x3c],0x40
  40b948:	mov    DWORD PTR [rbp-0x40],0x13
  40b94f:	mov    ecx,DWORD PTR [rbp-0x14]
  40b952:	cmp    ecx,0x0
  40b955:	mov    ecx,0x4
  40b95a:	cmovne eax,ecx
  40b95d:	mov    DWORD PTR [rbp-0x44],eax
  40b960:	mov    eax,DWORD PTR [rbp-0xc]
  40b963:	sub    eax,DWORD PTR [rbp-0x10]
  40b966:	mov    DWORD PTR [rbp-0x48],eax
  40b969:	mov    rdi,QWORD PTR [rbp-0x8]
  40b96d:	mov    QWORD PTR [rbp-0x60],rdi
  40b971:	mov    DWORD PTR [rbp-0x58],0x0
  40b978:	mov    rdi,QWORD PTR [rbp-0x60]
  40b97c:	mov    esi,DWORD PTR [rbp-0x58]
  40b97f:	call   40bd40 <grisu3_diy_fp_encode_double@@Base+0x440>
  40b984:	xor    ecx,ecx
  40b986:	mov    QWORD PTR [rbp-0xa0],rax
  40b98d:	mov    DWORD PTR [rbp-0x98],edx
  40b993:	mov    rax,QWORD PTR [rbp-0xa0]
  40b99a:	mov    QWORD PTR [rbp-0x60],rax
  40b99e:	mov    rax,QWORD PTR [rbp-0x98]
  40b9a5:	mov    QWORD PTR [rbp-0x58],rax
  40b9a9:	sub    ecx,DWORD PTR [rbp-0x58]
  40b9ac:	mov    edx,DWORD PTR [rbp-0x44]
  40b9af:	shl    edx,cl
  40b9b1:	mov    DWORD PTR [rbp-0x44],edx
  40b9b4:	mov    edi,DWORD PTR [rbp-0x48]
  40b9b7:	lea    rsi,[rbp-0x70]
  40b9bb:	call   40be20 <grisu3_diy_fp_encode_double@@Base+0x520>
  40b9c0:	mov    DWORD PTR [rbp-0x4c],eax
  40b9c3:	mov    eax,DWORD PTR [rbp-0x4c]
  40b9c6:	cmp    eax,DWORD PTR [rbp-0x48]
  40b9c9:	je     40ba89 <grisu3_diy_fp_encode_double@@Base+0x189>
  40b9cf:	mov    eax,DWORD PTR [rbp-0x48]
  40b9d2:	sub    eax,DWORD PTR [rbp-0x4c]
  40b9d5:	sub    eax,0x1
  40b9d8:	mov    DWORD PTR [rbp-0xa4],eax
  40b9de:	cmp    DWORD PTR [rbp-0xa4],0x0
  40b9e5:	jl     40b9fd <grisu3_diy_fp_encode_double@@Base+0xfd>
  40b9eb:	cmp    DWORD PTR [rbp-0xa4],0x7
  40b9f2:	jge    40b9fd <grisu3_diy_fp_encode_double@@Base+0xfd>
  40b9f8:	jmp    40ba1c <grisu3_diy_fp_encode_double@@Base+0x11c>
  40b9fd:	lea    rdi,[rip+0x8cc4]        # 4146c8 <flatcc_builder_padding_base@@Base+0x2358>
  40ba04:	lea    rsi,[rip+0x8cd9]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40ba0b:	mov    edx,0xb9
  40ba10:	lea    rcx,[rip+0x8d3e]        # 414755 <flatcc_builder_padding_base@@Base+0x23e5>
  40ba17:	call   403060 <__assert_fail@plt>
  40ba1c:	movsxd rax,DWORD PTR [rbp-0xa4]
  40ba23:	shl    rax,0x4
  40ba27:	lea    rcx,[rip+0xd662]        # 419090 <__data_start@@Base+0x10>
  40ba2e:	add    rcx,rax
  40ba31:	mov    rdi,QWORD PTR [rbp-0x60]
  40ba35:	mov    esi,DWORD PTR [rbp-0x58]
  40ba38:	mov    rdx,QWORD PTR [rcx]
  40ba3b:	mov    ecx,DWORD PTR [rcx+0x8]
  40ba3e:	call   40bf70 <grisu3_diy_fp_encode_double@@Base+0x670>
  40ba43:	mov    QWORD PTR [rbp-0xb8],rax
  40ba4a:	mov    DWORD PTR [rbp-0xb0],edx
  40ba50:	mov    rax,QWORD PTR [rbp-0xb8]
  40ba57:	mov    QWORD PTR [rbp-0x60],rax
  40ba5b:	mov    rax,QWORD PTR [rbp-0xb0]
  40ba62:	mov    QWORD PTR [rbp-0x58],rax
  40ba66:	mov    ecx,DWORD PTR [rbp-0x10]
  40ba69:	add    ecx,0x1
  40ba6c:	add    ecx,DWORD PTR [rbp-0xa4]
  40ba72:	cmp    ecx,0x13
  40ba75:	jle    40ba84 <grisu3_diy_fp_encode_double@@Base+0x184>
  40ba7b:	mov    eax,DWORD PTR [rbp-0x44]
  40ba7e:	add    eax,0x4
  40ba81:	mov    DWORD PTR [rbp-0x44],eax
  40ba84:	jmp    40ba89 <grisu3_diy_fp_encode_double@@Base+0x189>
  40ba89:	mov    rdi,QWORD PTR [rbp-0x60]
  40ba8d:	mov    esi,DWORD PTR [rbp-0x58]
  40ba90:	mov    rdx,QWORD PTR [rbp-0x70]
  40ba94:	mov    ecx,DWORD PTR [rbp-0x68]
  40ba97:	call   40bf70 <grisu3_diy_fp_encode_double@@Base+0x670>
  40ba9c:	xor    ecx,ecx
  40ba9e:	mov    QWORD PTR [rbp-0xc8],rax
  40baa5:	mov    DWORD PTR [rbp-0xc0],edx
  40baab:	mov    rax,QWORD PTR [rbp-0xc8]
  40bab2:	mov    QWORD PTR [rbp-0x60],rax
  40bab6:	mov    rax,QWORD PTR [rbp-0xc0]
  40babd:	mov    QWORD PTR [rbp-0x58],rax
  40bac1:	mov    edx,DWORD PTR [rbp-0x44]
  40bac4:	cmp    edx,0x0
  40bac7:	mov    edx,0x1
  40bacc:	cmovne ecx,edx
  40bacf:	add    ecx,0x8
  40bad2:	add    ecx,DWORD PTR [rbp-0x44]
  40bad5:	mov    DWORD PTR [rbp-0x44],ecx
  40bad8:	mov    ecx,DWORD PTR [rbp-0x58]
  40badb:	mov    DWORD PTR [rbp-0x50],ecx
  40bade:	mov    rdi,QWORD PTR [rbp-0x60]
  40bae2:	mov    esi,DWORD PTR [rbp-0x58]
  40bae5:	call   40bd40 <grisu3_diy_fp_encode_double@@Base+0x440>
  40baea:	mov    QWORD PTR [rbp-0xd8],rax
  40baf1:	mov    DWORD PTR [rbp-0xd0],edx
  40baf7:	mov    rax,QWORD PTR [rbp-0xd8]
  40bafe:	mov    QWORD PTR [rbp-0x60],rax
  40bb02:	mov    rax,QWORD PTR [rbp-0xd0]
  40bb09:	mov    QWORD PTR [rbp-0x58],rax
  40bb0d:	mov    ecx,DWORD PTR [rbp-0x50]
  40bb10:	sub    ecx,DWORD PTR [rbp-0x58]
  40bb13:	mov    edx,DWORD PTR [rbp-0x44]
  40bb16:	shl    edx,cl
  40bb18:	mov    DWORD PTR [rbp-0x44],edx
  40bb1b:	mov    edx,DWORD PTR [rbp-0x58]
  40bb1e:	add    edx,0x40
  40bb21:	mov    DWORD PTR [rbp-0x84],edx
  40bb27:	cmp    DWORD PTR [rbp-0x84],0xfffffc0e
  40bb31:	jl     40bb47 <grisu3_diy_fp_encode_double@@Base+0x247>
  40bb37:	mov    eax,0x40
  40bb3c:	mov    DWORD PTR [rbp-0xe0],eax
  40bb42:	jmp    40bb81 <grisu3_diy_fp_encode_double@@Base+0x281>
  40bb47:	cmp    DWORD PTR [rbp-0x84],0xfffffbce
  40bb51:	jg     40bb64 <grisu3_diy_fp_encode_double@@Base+0x264>
  40bb57:	xor    eax,eax
  40bb59:	mov    DWORD PTR [rbp-0xe4],eax
  40bb5f:	jmp    40bb75 <grisu3_diy_fp_encode_double@@Base+0x275>
  40bb64:	mov    eax,DWORD PTR [rbp-0x84]
  40bb6a:	sub    eax,0xfffffbce
  40bb6f:	mov    DWORD PTR [rbp-0xe4],eax
  40bb75:	mov    eax,DWORD PTR [rbp-0xe4]
  40bb7b:	mov    DWORD PTR [rbp-0xe0],eax
  40bb81:	mov    eax,DWORD PTR [rbp-0xe0]
  40bb87:	mov    DWORD PTR [rbp-0x84],eax
  40bb8d:	mov    eax,0x40
  40bb92:	sub    eax,DWORD PTR [rbp-0x84]
  40bb98:	mov    DWORD PTR [rbp-0x88],eax
  40bb9e:	mov    eax,DWORD PTR [rbp-0x88]
  40bba4:	add    eax,0x3
  40bba7:	cmp    eax,0x40
  40bbaa:	jl     40bc1f <grisu3_diy_fp_encode_double@@Base+0x31f>
  40bbb0:	mov    eax,DWORD PTR [rbp-0x88]
  40bbb6:	add    eax,0x3
  40bbb9:	sub    eax,0x40
  40bbbc:	sub    eax,0x1
  40bbbf:	mov    DWORD PTR [rbp-0xdc],eax
  40bbc5:	mov    eax,DWORD PTR [rbp-0xdc]
  40bbcb:	mov    rcx,QWORD PTR [rbp-0x60]
  40bbcf:	mov    eax,eax
  40bbd1:	mov    edx,eax
  40bbd3:	mov    QWORD PTR [rbp-0xf0],rcx
  40bbda:	mov    rcx,rdx
  40bbdd:	mov    rdx,QWORD PTR [rbp-0xf0]
  40bbe4:	shr    rdx,cl
  40bbe7:	mov    QWORD PTR [rbp-0x60],rdx
  40bbeb:	mov    eax,DWORD PTR [rbp-0xdc]
  40bbf1:	add    eax,DWORD PTR [rbp-0x58]
  40bbf4:	mov    DWORD PTR [rbp-0x58],eax
  40bbf7:	mov    eax,DWORD PTR [rbp-0x44]
  40bbfa:	mov    ecx,DWORD PTR [rbp-0xdc]
  40bc00:	sar    eax,cl
  40bc02:	add    eax,0x1
  40bc05:	add    eax,0x8
  40bc08:	mov    DWORD PTR [rbp-0x44],eax
  40bc0b:	mov    eax,DWORD PTR [rbp-0xdc]
  40bc11:	mov    esi,DWORD PTR [rbp-0x88]
  40bc17:	sub    esi,eax
  40bc19:	mov    DWORD PTR [rbp-0x88],esi
  40bc1f:	mov    rax,QWORD PTR [rbp-0x60]
  40bc23:	mov    ecx,DWORD PTR [rbp-0x88]
  40bc29:	shr    rax,cl
  40bc2c:	mov    QWORD PTR [rbp-0x80],rax
  40bc30:	mov    edx,DWORD PTR [rbp-0x58]
  40bc33:	add    edx,DWORD PTR [rbp-0x88]
  40bc39:	mov    DWORD PTR [rbp-0x78],edx
  40bc3c:	mov    rax,QWORD PTR [rbp-0x60]
  40bc40:	mov    edx,DWORD PTR [rbp-0x88]
  40bc46:	sub    edx,0x1
  40bc49:	mov    edx,edx
  40bc4b:	mov    ecx,edx
  40bc4d:	mov    esi,0x1
  40bc52:	mov    rdi,rsi
  40bc55:	shl    rdi,cl
  40bc58:	and    rax,rdi
  40bc5b:	shl    rax,0x3
  40bc5f:	mov    DWORD PTR [rbp-0x8c],eax
  40bc65:	mov    eax,DWORD PTR [rbp-0x88]
  40bc6b:	sub    eax,0x1
  40bc6e:	mov    eax,eax
  40bc70:	mov    ecx,eax
  40bc72:	shl    rsi,cl
  40bc75:	shl    rsi,0x3
  40bc79:	mov    DWORD PTR [rbp-0x90],esi
  40bc7f:	mov    eax,DWORD PTR [rbp-0x88]
  40bc85:	mov    edx,DWORD PTR [rbp-0x90]
  40bc8b:	add    edx,DWORD PTR [rbp-0x44]
  40bc8e:	cmp    eax,edx
  40bc90:	jl     40bcd6 <grisu3_diy_fp_encode_double@@Base+0x3d6>
  40bc96:	mov    rax,QWORD PTR [rbp-0x80]
  40bc9a:	add    rax,0x1
  40bca0:	mov    QWORD PTR [rbp-0x80],rax
  40bca4:	movabs rax,0x20000000000000
  40bcae:	and    rax,QWORD PTR [rbp-0x80]
  40bcb2:	cmp    rax,0x0
  40bcb6:	je     40bcd1 <grisu3_diy_fp_encode_double@@Base+0x3d1>
  40bcbc:	mov    rax,QWORD PTR [rbp-0x80]
  40bcc0:	shr    rax,0x1
  40bcc4:	mov    QWORD PTR [rbp-0x80],rax
  40bcc8:	mov    ecx,DWORD PTR [rbp-0x78]
  40bccb:	add    ecx,0x1
  40bcce:	mov    DWORD PTR [rbp-0x78],ecx
  40bcd1:	jmp    40bcd6 <grisu3_diy_fp_encode_double@@Base+0x3d6>
  40bcd6:	mov    rdi,QWORD PTR [rbp-0x80]
  40bcda:	mov    esi,DWORD PTR [rbp-0x78]
  40bcdd:	call   40c050 <grisu3_diy_fp_encode_double@@Base+0x750>
  40bce2:	mov    rax,QWORD PTR [rbp-0x20]
  40bce6:	vmovsd QWORD PTR [rax],xmm0
  40bcea:	mov    ecx,DWORD PTR [rbp-0x90]
  40bcf0:	sub    ecx,DWORD PTR [rbp-0x44]
  40bcf3:	cmp    ecx,DWORD PTR [rbp-0x8c]
  40bcf9:	mov    dl,0x1
  40bcfb:	mov    BYTE PTR [rbp-0xf1],dl
  40bd01:	jge    40bd21 <grisu3_diy_fp_encode_double@@Base+0x421>
  40bd07:	mov    eax,DWORD PTR [rbp-0x8c]
  40bd0d:	mov    ecx,DWORD PTR [rbp-0x90]
  40bd13:	add    ecx,DWORD PTR [rbp-0x44]
  40bd16:	cmp    eax,ecx
  40bd18:	setge  dl
  40bd1b:	mov    BYTE PTR [rbp-0xf1],dl
  40bd21:	mov    al,BYTE PTR [rbp-0xf1]
  40bd27:	and    al,0x1
  40bd29:	movzx  eax,al
  40bd2c:	add    rsp,0x100
  40bd33:	pop    rbp
  40bd34:	ret    
  40bd35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd3f:	nop
  40bd40:	push   rbp
  40bd41:	mov    rbp,rsp
  40bd44:	sub    rsp,0x20
  40bd48:	mov    QWORD PTR [rbp-0x20],rdi
  40bd4c:	mov    DWORD PTR [rbp-0x18],esi
  40bd4f:	cmp    QWORD PTR [rbp-0x20],0x0
  40bd54:	je     40bd5f <grisu3_diy_fp_encode_double@@Base+0x45f>
  40bd5a:	jmp    40bd7e <grisu3_diy_fp_encode_double@@Base+0x47e>
  40bd5f:	lea    rdi,[rip+0x8ef5]        # 414c5b <flatcc_builder_padding_base@@Base+0x28eb>
  40bd66:	lea    rsi,[rip+0x8ef7]        # 414c64 <flatcc_builder_padding_base@@Base+0x28f4>
  40bd6d:	mov    edx,0x104
  40bd72:	lea    rcx,[rip+0x8f5b]        # 414cd4 <flatcc_builder_padding_base@@Base+0x2964>
  40bd79:	call   403060 <__assert_fail@plt>
  40bd7e:	jmp    40bd83 <grisu3_diy_fp_encode_double@@Base+0x483>
  40bd83:	movabs rax,0xffc0000000000000
  40bd8d:	and    rax,QWORD PTR [rbp-0x20]
  40bd91:	cmp    rax,0x0
  40bd95:	setne  cl
  40bd98:	xor    cl,0xff
  40bd9b:	test   cl,0x1
  40bd9e:	jne    40bda9 <grisu3_diy_fp_encode_double@@Base+0x4a9>
  40bda4:	jmp    40bdc3 <grisu3_diy_fp_encode_double@@Base+0x4c3>
  40bda9:	mov    rax,QWORD PTR [rbp-0x20]
  40bdad:	shl    rax,0xa
  40bdb1:	mov    QWORD PTR [rbp-0x20],rax
  40bdb5:	mov    ecx,DWORD PTR [rbp-0x18]
  40bdb8:	sub    ecx,0xa
  40bdbb:	mov    DWORD PTR [rbp-0x18],ecx
  40bdbe:	jmp    40bd83 <grisu3_diy_fp_encode_double@@Base+0x483>
  40bdc3:	jmp    40bdc8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
  40bdc8:	movabs rax,0x8000000000000000
  40bdd2:	and    rax,QWORD PTR [rbp-0x20]
  40bdd6:	cmp    rax,0x0
  40bdda:	setne  cl
  40bddd:	xor    cl,0xff
  40bde0:	test   cl,0x1
  40bde3:	jne    40bdee <grisu3_diy_fp_encode_double@@Base+0x4ee>
  40bde9:	jmp    40be08 <grisu3_diy_fp_encode_double@@Base+0x508>
  40bdee:	mov    rax,QWORD PTR [rbp-0x20]
  40bdf2:	shl    rax,0x1
  40bdf6:	mov    QWORD PTR [rbp-0x20],rax
  40bdfa:	mov    ecx,DWORD PTR [rbp-0x18]
  40bdfd:	add    ecx,0xffffffff
  40be00:	mov    DWORD PTR [rbp-0x18],ecx
  40be03:	jmp    40bdc8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
  40be08:	vmovdqu xmm0,XMMWORD PTR [rbp-0x20]
  40be0d:	vmovdqa XMMWORD PTR [rbp-0x10],xmm0
  40be12:	mov    rax,QWORD PTR [rbp-0x10]
  40be16:	mov    edx,DWORD PTR [rbp-0x8]
  40be19:	add    rsp,0x20
  40be1d:	pop    rbp
  40be1e:	ret    
  40be1f:	nop
  40be20:	push   rbp
  40be21:	mov    rbp,rsp
  40be24:	sub    rsp,0x20
  40be28:	mov    DWORD PTR [rbp-0x4],edi
  40be2b:	mov    QWORD PTR [rbp-0x10],rsi
  40be2f:	mov    DWORD PTR [rbp-0x14],0x15c
  40be36:	mov    DWORD PTR [rbp-0x18],0x8
  40be3d:	mov    eax,0xfffffea4
  40be42:	cmp    eax,DWORD PTR [rbp-0x4]
  40be45:	jg     40be50 <grisu3_diy_fp_encode_double@@Base+0x550>
  40be4b:	jmp    40be6f <grisu3_diy_fp_encode_double@@Base+0x56f>
  40be50:	lea    rdi,[rip+0x8eb6]        # 414d0d <flatcc_builder_padding_base@@Base+0x299d>
  40be57:	lea    rsi,[rip+0x8886]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40be5e:	mov    edx,0x50
  40be63:	lea    rcx,[rip+0x8ec2]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40be6a:	call   403060 <__assert_fail@plt>
  40be6f:	cmp    DWORD PTR [rbp-0x4],0x15c
  40be76:	jge    40be81 <grisu3_diy_fp_encode_double@@Base+0x581>
  40be7c:	jmp    40bea0 <grisu3_diy_fp_encode_double@@Base+0x5a0>
  40be81:	lea    rdi,[rip+0x8edd]        # 414d65 <flatcc_builder_padding_base@@Base+0x29f5>
  40be88:	lea    rsi,[rip+0x8855]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40be8f:	mov    edx,0x51
  40be94:	lea    rcx,[rip+0x8e91]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40be9b:	call   403060 <__assert_fail@plt>
  40bea0:	mov    eax,DWORD PTR [rbp-0x4]
  40bea3:	add    eax,0x15c
  40bea8:	cdq    
  40bea9:	mov    ecx,0x8
  40beae:	idiv   ecx
  40beb0:	mov    DWORD PTR [rbp-0x1c],eax
  40beb3:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40beb7:	shl    rsi,0x4
  40bebb:	lea    rdi,[rip+0x7d8e]        # 413c50 <flatcc_builder_padding_base@@Base+0x18e0>
  40bec2:	mov    r8,rdi
  40bec5:	add    r8,rsi
  40bec8:	movsx  eax,WORD PTR [r8+0xa]
  40becd:	mov    DWORD PTR [rbp-0x20],eax
  40bed0:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40bed4:	shl    rsi,0x4
  40bed8:	mov    r8,rdi
  40bedb:	add    r8,rsi
  40bede:	mov    rsi,QWORD PTR [r8]
  40bee1:	mov    r8,QWORD PTR [rbp-0x10]
  40bee5:	mov    QWORD PTR [r8],rsi
  40bee8:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40beec:	shl    rsi,0x4
  40bef0:	add    rdi,rsi
  40bef3:	movsx  eax,WORD PTR [rdi+0x8]
  40bef7:	mov    rsi,QWORD PTR [rbp-0x10]
  40befb:	mov    DWORD PTR [rsi+0x8],eax
  40befe:	mov    eax,DWORD PTR [rbp-0x20]
  40bf01:	cmp    eax,DWORD PTR [rbp-0x4]
  40bf04:	jg     40bf0f <grisu3_diy_fp_encode_double@@Base+0x60f>
  40bf0a:	jmp    40bf2e <grisu3_diy_fp_encode_double@@Base+0x62e>
  40bf0f:	lea    rdi,[rip+0x8e7a]        # 414d90 <flatcc_builder_padding_base@@Base+0x2a20>
  40bf16:	lea    rsi,[rip+0x87c7]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bf1d:	mov    edx,0x58
  40bf22:	lea    rcx,[rip+0x8e03]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40bf29:	call   403060 <__assert_fail@plt>
  40bf2e:	mov    eax,DWORD PTR [rbp-0x4]
  40bf31:	mov    ecx,DWORD PTR [rbp-0x20]
  40bf34:	add    ecx,0x8
  40bf37:	cmp    eax,ecx
  40bf39:	jge    40bf44 <grisu3_diy_fp_encode_double@@Base+0x644>
  40bf3f:	jmp    40bf63 <grisu3_diy_fp_encode_double@@Base+0x663>
  40bf44:	lea    rdi,[rip+0x8e54]        # 414d9f <flatcc_builder_padding_base@@Base+0x2a2f>
  40bf4b:	lea    rsi,[rip+0x8792]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bf52:	mov    edx,0x59
  40bf57:	lea    rcx,[rip+0x8dce]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40bf5e:	call   403060 <__assert_fail@plt>
  40bf63:	mov    eax,DWORD PTR [rbp-0x20]
  40bf66:	add    rsp,0x20
  40bf6a:	pop    rbp
  40bf6b:	ret    
  40bf6c:	nop    DWORD PTR [rax+0x0]
  40bf70:	push   rbp
  40bf71:	mov    rbp,rsp
  40bf74:	mov    QWORD PTR [rbp-0x20],rdi
  40bf78:	mov    DWORD PTR [rbp-0x18],esi
  40bf7b:	mov    QWORD PTR [rbp-0x30],rdx
  40bf7f:	mov    DWORD PTR [rbp-0x28],ecx
  40bf82:	mov    eax,DWORD PTR [rbp-0x1c]
  40bf85:	mov    edx,eax
  40bf87:	mov    QWORD PTR [rbp-0x38],rdx
  40bf8b:	mov    eax,DWORD PTR [rbp-0x20]
  40bf8e:	mov    edx,eax
  40bf90:	mov    QWORD PTR [rbp-0x40],rdx
  40bf94:	mov    eax,DWORD PTR [rbp-0x2c]
  40bf97:	mov    edx,eax
  40bf99:	mov    QWORD PTR [rbp-0x48],rdx
  40bf9d:	mov    eax,DWORD PTR [rbp-0x30]
  40bfa0:	mov    edx,eax
  40bfa2:	mov    QWORD PTR [rbp-0x50],rdx
  40bfa6:	mov    rdx,QWORD PTR [rbp-0x38]
  40bfaa:	mov    rdi,QWORD PTR [rbp-0x48]
  40bfae:	imul   rdx,rdi
  40bfb2:	mov    QWORD PTR [rbp-0x58],rdx
  40bfb6:	mov    rdx,QWORD PTR [rbp-0x40]
  40bfba:	mov    rdi,QWORD PTR [rbp-0x48]
  40bfbe:	imul   rdx,rdi
  40bfc2:	mov    QWORD PTR [rbp-0x60],rdx
  40bfc6:	mov    rdx,QWORD PTR [rbp-0x38]
  40bfca:	mov    rdi,QWORD PTR [rbp-0x50]
  40bfce:	imul   rdx,rdi
  40bfd2:	mov    QWORD PTR [rbp-0x68],rdx
  40bfd6:	mov    rdx,QWORD PTR [rbp-0x40]
  40bfda:	mov    rdi,QWORD PTR [rbp-0x50]
  40bfde:	imul   rdx,rdi
  40bfe2:	mov    QWORD PTR [rbp-0x70],rdx
  40bfe6:	mov    eax,DWORD PTR [rbp-0x6c]
  40bfe9:	mov    edx,eax
  40bfeb:	mov    eax,DWORD PTR [rbp-0x68]
  40bfee:	mov    edi,eax
  40bff0:	add    rdx,rdi
  40bff3:	mov    eax,DWORD PTR [rbp-0x60]
  40bff6:	mov    edi,eax
  40bff8:	add    rdx,rdi
  40bffb:	mov    QWORD PTR [rbp-0x78],rdx
  40bfff:	mov    rdx,QWORD PTR [rbp-0x78]
  40c003:	sub    rdx,0xffffffff80000000
  40c00a:	mov    QWORD PTR [rbp-0x78],rdx
  40c00e:	mov    rdx,QWORD PTR [rbp-0x58]
  40c012:	mov    eax,DWORD PTR [rbp-0x64]
  40c015:	mov    edi,eax
  40c017:	add    rdx,rdi
  40c01a:	mov    eax,DWORD PTR [rbp-0x5c]
  40c01d:	mov    edi,eax
  40c01f:	add    rdx,rdi
  40c022:	mov    eax,DWORD PTR [rbp-0x74]
  40c025:	mov    edi,eax
  40c027:	add    rdx,rdi
  40c02a:	mov    QWORD PTR [rbp-0x10],rdx
  40c02e:	mov    eax,DWORD PTR [rbp-0x18]
  40c031:	mov    ecx,DWORD PTR [rbp-0x28]
  40c034:	mov    edx,ecx
  40c036:	mov    edi,eax
  40c038:	lea    eax,[rdi+rdx*1+0x40]
  40c03c:	mov    DWORD PTR [rbp-0x8],eax
  40c03f:	mov    rax,QWORD PTR [rbp-0x10]
  40c043:	mov    edx,DWORD PTR [rbp-0x8]
  40c046:	pop    rbp
  40c047:	ret    
  40c048:	nop    DWORD PTR [rax+rax*1+0x0]
  40c050:	push   rbp
  40c051:	mov    rbp,rsp
  40c054:	sub    rsp,0x60
  40c058:	mov    QWORD PTR [rbp-0x18],rdi
  40c05c:	mov    DWORD PTR [rbp-0x10],esi
  40c05f:	movabs rax,0x10000000000000
  40c069:	mov    QWORD PTR [rbp-0x20],rax
  40c06d:	movabs rax,0xfffffffffffff
  40c077:	mov    QWORD PTR [rbp-0x28],rax
  40c07b:	mov    DWORD PTR [rbp-0x2c],0xfffffbce
  40c082:	mov    DWORD PTR [rbp-0x30],0x433
  40c089:	mov    DWORD PTR [rbp-0x34],0x34
  40c090:	mov    rax,QWORD PTR [rbp-0x18]
  40c094:	mov    QWORD PTR [rbp-0x48],rax
  40c098:	mov    rax,QWORD PTR [rbp-0x10]
  40c09c:	mov    QWORD PTR [rbp-0x40],rax
  40c0a0:	movabs rax,0x1fffffffffffff
  40c0aa:	cmp    QWORD PTR [rbp-0x48],rax
  40c0ae:	jbe    40c0ce <grisu3_diy_fp_encode_double@@Base+0x7ce>
  40c0b4:	mov    rax,QWORD PTR [rbp-0x48]
  40c0b8:	shr    rax,0x1
  40c0bc:	mov    QWORD PTR [rbp-0x48],rax
  40c0c0:	mov    ecx,DWORD PTR [rbp-0x40]
  40c0c3:	add    ecx,0x1
  40c0c6:	mov    DWORD PTR [rbp-0x40],ecx
  40c0c9:	jmp    40c0a0 <grisu3_diy_fp_encode_double@@Base+0x7a0>
  40c0ce:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c0d5:	jge    40c0e9 <grisu3_diy_fp_encode_double@@Base+0x7e9>
  40c0db:	vxorps xmm0,xmm0,xmm0
  40c0df:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40c0e4:	jmp    40c1a9 <grisu3_diy_fp_encode_double@@Base+0x8a9>
  40c0e9:	jmp    40c0ee <grisu3_diy_fp_encode_double@@Base+0x7ee>
  40c0ee:	xor    eax,eax
  40c0f0:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c0f7:	mov    BYTE PTR [rbp-0x51],al
  40c0fa:	jle    40c118 <grisu3_diy_fp_encode_double@@Base+0x818>
  40c100:	movabs rax,0x10000000000000
  40c10a:	and    rax,QWORD PTR [rbp-0x48]
  40c10e:	cmp    rax,0x0
  40c112:	sete   cl
  40c115:	mov    BYTE PTR [rbp-0x51],cl
  40c118:	mov    al,BYTE PTR [rbp-0x51]
  40c11b:	test   al,0x1
  40c11d:	jne    40c128 <grisu3_diy_fp_encode_double@@Base+0x828>
  40c123:	jmp    40c142 <grisu3_diy_fp_encode_double@@Base+0x842>
  40c128:	mov    rax,QWORD PTR [rbp-0x48]
  40c12c:	shl    rax,0x1
  40c130:	mov    QWORD PTR [rbp-0x48],rax
  40c134:	mov    ecx,DWORD PTR [rbp-0x40]
  40c137:	add    ecx,0xffffffff
  40c13a:	mov    DWORD PTR [rbp-0x40],ecx
  40c13d:	jmp    40c0ee <grisu3_diy_fp_encode_double@@Base+0x7ee>
  40c142:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c149:	jne    40c174 <grisu3_diy_fp_encode_double@@Base+0x874>
  40c14f:	movabs rax,0x10000000000000
  40c159:	and    rax,QWORD PTR [rbp-0x48]
  40c15d:	cmp    rax,0x0
  40c161:	jne    40c174 <grisu3_diy_fp_encode_double@@Base+0x874>
  40c167:	mov    QWORD PTR [rbp-0x50],0x0
  40c16f:	jmp    40c183 <grisu3_diy_fp_encode_double@@Base+0x883>
  40c174:	mov    eax,DWORD PTR [rbp-0x40]
  40c177:	add    eax,0x433
  40c17c:	movsxd rcx,eax
  40c17f:	mov    QWORD PTR [rbp-0x50],rcx
  40c183:	movabs rax,0xfffffffffffff
  40c18d:	and    rax,QWORD PTR [rbp-0x48]
  40c191:	mov    rcx,QWORD PTR [rbp-0x50]
  40c195:	shl    rcx,0x34
  40c199:	or     rax,rcx
  40c19c:	mov    rdi,rax
  40c19f:	call   410920 <flatcc_json_parser_struct_as_root@@Base+0x150>
  40c1a4:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40c1a9:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40c1ae:	add    rsp,0x60
  40c1b2:	pop    rbp
  40c1b3:	ret    
  40c1b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1be:	xchg   ax,ax

000000000040c1c0 <flatcc_json_parser_error_string@@Base>:
  40c1c0:	push   rbp
  40c1c1:	mov    rbp,rsp
  40c1c4:	mov    DWORD PTR [rbp-0xc],edi
  40c1c7:	mov    eax,DWORD PTR [rbp-0xc]
  40c1ca:	mov    ecx,eax
  40c1cc:	mov    rdx,rcx
  40c1cf:	sub    rdx,0x22
  40c1d3:	mov    QWORD PTR [rbp-0x18],rcx
  40c1d7:	ja     40c421 <flatcc_json_parser_error_string@@Base+0x261>
  40c1dd:	lea    rax,[rip+0x75fc]        # 4137e0 <flatcc_builder_padding_base@@Base+0x1470>
  40c1e4:	mov    rcx,QWORD PTR [rbp-0x18]
  40c1e8:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c1ec:	add    rdx,rax
  40c1ef:	jmp    rdx
  40c1f1:	lea    rax,[rip+0x85a0]        # 414798 <flatcc_builder_padding_base@@Base+0x2428>
  40c1f8:	mov    QWORD PTR [rbp-0x8],rax
  40c1fc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c201:	lea    rax,[rip+0x8593]        # 41479b <flatcc_builder_padding_base@@Base+0x242b>
  40c208:	mov    QWORD PTR [rbp-0x8],rax
  40c20c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c211:	lea    rax,[rip+0x8587]        # 41479f <flatcc_builder_padding_base@@Base+0x242f>
  40c218:	mov    QWORD PTR [rbp-0x8],rax
  40c21c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c221:	lea    rax,[rip+0x8584]        # 4147ac <flatcc_builder_padding_base@@Base+0x243c>
  40c228:	mov    QWORD PTR [rbp-0x8],rax
  40c22c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c231:	lea    rax,[rip+0x8583]        # 4147bb <flatcc_builder_padding_base@@Base+0x244b>
  40c238:	mov    QWORD PTR [rbp-0x8],rax
  40c23c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c241:	lea    rax,[rip+0x8582]        # 4147ca <flatcc_builder_padding_base@@Base+0x245a>
  40c248:	mov    QWORD PTR [rbp-0x8],rax
  40c24c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c251:	lea    rax,[rip+0x8587]        # 4147df <flatcc_builder_padding_base@@Base+0x246f>
  40c258:	mov    QWORD PTR [rbp-0x8],rax
  40c25c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c261:	lea    rax,[rip+0x8587]        # 4147ef <flatcc_builder_padding_base@@Base+0x247f>
  40c268:	mov    QWORD PTR [rbp-0x8],rax
  40c26c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c271:	lea    rax,[rip+0x8580]        # 4147f8 <flatcc_builder_padding_base@@Base+0x2488>
  40c278:	mov    QWORD PTR [rbp-0x8],rax
  40c27c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c281:	lea    rax,[rip+0x857a]        # 414802 <flatcc_builder_padding_base@@Base+0x2492>
  40c288:	mov    QWORD PTR [rbp-0x8],rax
  40c28c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c291:	lea    rax,[rip+0x857b]        # 414813 <flatcc_builder_padding_base@@Base+0x24a3>
  40c298:	mov    QWORD PTR [rbp-0x8],rax
  40c29c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2a1:	lea    rax,[rip+0x857d]        # 414825 <flatcc_builder_padding_base@@Base+0x24b5>
  40c2a8:	mov    QWORD PTR [rbp-0x8],rax
  40c2ac:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2b1:	lea    rax,[rip+0x857c]        # 414834 <flatcc_builder_padding_base@@Base+0x24c4>
  40c2b8:	mov    QWORD PTR [rbp-0x8],rax
  40c2bc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2c1:	lea    rax,[rip+0x857d]        # 414845 <flatcc_builder_padding_base@@Base+0x24d5>
  40c2c8:	mov    QWORD PTR [rbp-0x8],rax
  40c2cc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2d1:	lea    rax,[rip+0x857c]        # 414854 <flatcc_builder_padding_base@@Base+0x24e4>
  40c2d8:	mov    QWORD PTR [rbp-0x8],rax
  40c2dc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2e1:	lea    rax,[rip+0x8585]        # 41486d <flatcc_builder_padding_base@@Base+0x24fd>
  40c2e8:	mov    QWORD PTR [rbp-0x8],rax
  40c2ec:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c2f1:	lea    rax,[rip+0x8588]        # 414880 <flatcc_builder_padding_base@@Base+0x2510>
  40c2f8:	mov    QWORD PTR [rbp-0x8],rax
  40c2fc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c301:	lea    rax,[rip+0x8588]        # 414890 <flatcc_builder_padding_base@@Base+0x2520>
  40c308:	mov    QWORD PTR [rbp-0x8],rax
  40c30c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c311:	lea    rax,[rip+0x858a]        # 4148a2 <flatcc_builder_padding_base@@Base+0x2532>
  40c318:	mov    QWORD PTR [rbp-0x8],rax
  40c31c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c321:	lea    rax,[rip+0x8589]        # 4148b1 <flatcc_builder_padding_base@@Base+0x2541>
  40c328:	mov    QWORD PTR [rbp-0x8],rax
  40c32c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c331:	lea    rax,[rip+0x8586]        # 4148be <flatcc_builder_padding_base@@Base+0x254e>
  40c338:	mov    QWORD PTR [rbp-0x8],rax
  40c33c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c341:	lea    rax,[rip+0x858a]        # 4148d2 <flatcc_builder_padding_base@@Base+0x2562>
  40c348:	mov    QWORD PTR [rbp-0x8],rax
  40c34c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c351:	lea    rax,[rip+0x858a]        # 4148e2 <flatcc_builder_padding_base@@Base+0x2572>
  40c358:	mov    QWORD PTR [rbp-0x8],rax
  40c35c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c361:	lea    rax,[rip+0x8589]        # 4148f1 <flatcc_builder_padding_base@@Base+0x2581>
  40c368:	mov    QWORD PTR [rbp-0x8],rax
  40c36c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c371:	lea    rax,[rip+0x859d]        # 414915 <flatcc_builder_padding_base@@Base+0x25a5>
  40c378:	mov    QWORD PTR [rbp-0x8],rax
  40c37c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c381:	lea    rax,[rip+0x85a1]        # 414929 <flatcc_builder_padding_base@@Base+0x25b9>
  40c388:	mov    QWORD PTR [rbp-0x8],rax
  40c38c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c391:	lea    rax,[rip+0x85ae]        # 414946 <flatcc_builder_padding_base@@Base+0x25d6>
  40c398:	mov    QWORD PTR [rbp-0x8],rax
  40c39c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3a1:	lea    rax,[rip+0x85bd]        # 414965 <flatcc_builder_padding_base@@Base+0x25f5>
  40c3a8:	mov    QWORD PTR [rbp-0x8],rax
  40c3ac:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3b1:	lea    rax,[rip+0x85c8]        # 414980 <flatcc_builder_padding_base@@Base+0x2610>
  40c3b8:	mov    QWORD PTR [rbp-0x8],rax
  40c3bc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3c1:	lea    rax,[rip+0x85d2]        # 41499a <flatcc_builder_padding_base@@Base+0x262a>
  40c3c8:	mov    QWORD PTR [rbp-0x8],rax
  40c3cc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3d1:	lea    rax,[rip+0x85d9]        # 4149b1 <flatcc_builder_padding_base@@Base+0x2641>
  40c3d8:	mov    QWORD PTR [rbp-0x8],rax
  40c3dc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3e1:	lea    rax,[rip+0x85e6]        # 4149ce <flatcc_builder_padding_base@@Base+0x265e>
  40c3e8:	mov    QWORD PTR [rbp-0x8],rax
  40c3ec:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c3f1:	lea    rax,[rip+0x85ed]        # 4149e5 <flatcc_builder_padding_base@@Base+0x2675>
  40c3f8:	mov    QWORD PTR [rbp-0x8],rax
  40c3fc:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c401:	lea    rax,[rip+0x85f7]        # 4149ff <flatcc_builder_padding_base@@Base+0x268f>
  40c408:	mov    QWORD PTR [rbp-0x8],rax
  40c40c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c411:	lea    rax,[rip+0x85f5]        # 414a0d <flatcc_builder_padding_base@@Base+0x269d>
  40c418:	mov    QWORD PTR [rbp-0x8],rax
  40c41c:	jmp    40c42c <flatcc_json_parser_error_string@@Base+0x26c>
  40c421:	lea    rax,[rip+0x85f3]        # 414a1b <flatcc_builder_padding_base@@Base+0x26ab>
  40c428:	mov    QWORD PTR [rbp-0x8],rax
  40c42c:	mov    rax,QWORD PTR [rbp-0x8]
  40c430:	pop    rbp
  40c431:	ret    
  40c432:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c43c:	nop    DWORD PTR [rax+0x0]

000000000040c440 <flatcc_json_parser_set_error@@Base>:
  40c440:	push   rbp
  40c441:	mov    rbp,rsp
  40c444:	mov    QWORD PTR [rbp-0x8],rdi
  40c448:	mov    QWORD PTR [rbp-0x10],rsi
  40c44c:	mov    QWORD PTR [rbp-0x18],rdx
  40c450:	mov    DWORD PTR [rbp-0x1c],ecx
  40c453:	mov    rax,QWORD PTR [rbp-0x8]
  40c457:	cmp    DWORD PTR [rax+0x20],0x0
  40c45b:	jne    40c494 <flatcc_json_parser_set_error@@Base+0x54>
  40c461:	mov    eax,DWORD PTR [rbp-0x1c]
  40c464:	mov    rcx,QWORD PTR [rbp-0x8]
  40c468:	mov    DWORD PTR [rcx+0x20],eax
  40c46b:	mov    rcx,QWORD PTR [rbp-0x10]
  40c46f:	mov    rdx,QWORD PTR [rbp-0x8]
  40c473:	mov    rdx,QWORD PTR [rdx+0x8]
  40c477:	sub    rcx,rdx
  40c47a:	add    rcx,0x1
  40c481:	mov    rdx,QWORD PTR [rbp-0x8]
  40c485:	mov    DWORD PTR [rdx+0x1c],ecx
  40c488:	mov    rdx,QWORD PTR [rbp-0x10]
  40c48c:	mov    rsi,QWORD PTR [rbp-0x8]
  40c490:	mov    QWORD PTR [rsi+0x38],rdx
  40c494:	mov    rax,QWORD PTR [rbp-0x18]
  40c498:	pop    rbp
  40c499:	ret    
  40c49a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c4a0 <flatcc_json_parser_string_part@@Base>:
  40c4a0:	push   rbp
  40c4a1:	mov    rbp,rsp
  40c4a4:	sub    rsp,0x30
  40c4a8:	mov    QWORD PTR [rbp-0x10],rdi
  40c4ac:	mov    QWORD PTR [rbp-0x18],rsi
  40c4b0:	mov    QWORD PTR [rbp-0x20],rdx
  40c4b4:	xor    eax,eax
  40c4b6:	mov    rcx,QWORD PTR [rbp-0x18]
  40c4ba:	cmp    rcx,QWORD PTR [rbp-0x20]
  40c4be:	mov    BYTE PTR [rbp-0x21],al
  40c4c1:	je     40c501 <flatcc_json_parser_string_part@@Base+0x61>
  40c4c7:	xor    eax,eax
  40c4c9:	mov    rcx,QWORD PTR [rbp-0x18]
  40c4cd:	movsx  edx,BYTE PTR [rcx]
  40c4d0:	cmp    edx,0x22
  40c4d3:	mov    BYTE PTR [rbp-0x21],al
  40c4d6:	je     40c501 <flatcc_json_parser_string_part@@Base+0x61>
  40c4dc:	xor    eax,eax
  40c4de:	mov    rcx,QWORD PTR [rbp-0x18]
  40c4e2:	movzx  edx,BYTE PTR [rcx]
  40c4e5:	cmp    edx,0x20
  40c4e8:	mov    BYTE PTR [rbp-0x21],al
  40c4eb:	jl     40c501 <flatcc_json_parser_string_part@@Base+0x61>
  40c4f1:	mov    rax,QWORD PTR [rbp-0x18]
  40c4f5:	movsx  ecx,BYTE PTR [rax]
  40c4f8:	cmp    ecx,0x5c
  40c4fb:	setne  dl
  40c4fe:	mov    BYTE PTR [rbp-0x21],dl
  40c501:	mov    al,BYTE PTR [rbp-0x21]
  40c504:	test   al,0x1
  40c506:	jne    40c511 <flatcc_json_parser_string_part@@Base+0x71>
  40c50c:	jmp    40c524 <flatcc_json_parser_string_part@@Base+0x84>
  40c511:	mov    rax,QWORD PTR [rbp-0x18]
  40c515:	add    rax,0x1
  40c51b:	mov    QWORD PTR [rbp-0x18],rax
  40c51f:	jmp    40c4b4 <flatcc_json_parser_string_part@@Base+0x14>
  40c524:	mov    rax,QWORD PTR [rbp-0x18]
  40c528:	cmp    rax,QWORD PTR [rbp-0x20]
  40c52c:	jne    40c551 <flatcc_json_parser_string_part@@Base+0xb1>
  40c532:	mov    rdi,QWORD PTR [rbp-0x10]
  40c536:	mov    rsi,QWORD PTR [rbp-0x18]
  40c53a:	mov    rdx,QWORD PTR [rbp-0x20]
  40c53e:	mov    ecx,0x14
  40c543:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c548:	mov    QWORD PTR [rbp-0x8],rax
  40c54c:	jmp    40c5a5 <flatcc_json_parser_string_part@@Base+0x105>
  40c551:	mov    rax,QWORD PTR [rbp-0x18]
  40c555:	movsx  ecx,BYTE PTR [rax]
  40c558:	cmp    ecx,0x22
  40c55b:	jne    40c56e <flatcc_json_parser_string_part@@Base+0xce>
  40c561:	mov    rax,QWORD PTR [rbp-0x18]
  40c565:	mov    QWORD PTR [rbp-0x8],rax
  40c569:	jmp    40c5a5 <flatcc_json_parser_string_part@@Base+0x105>
  40c56e:	mov    rax,QWORD PTR [rbp-0x18]
  40c572:	movsx  ecx,BYTE PTR [rax]
  40c575:	cmp    ecx,0x20
  40c578:	jge    40c59d <flatcc_json_parser_string_part@@Base+0xfd>
  40c57e:	mov    rdi,QWORD PTR [rbp-0x10]
  40c582:	mov    rsi,QWORD PTR [rbp-0x18]
  40c586:	mov    rdx,QWORD PTR [rbp-0x20]
  40c58a:	mov    ecx,0x11
  40c58f:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c594:	mov    QWORD PTR [rbp-0x8],rax
  40c598:	jmp    40c5a5 <flatcc_json_parser_string_part@@Base+0x105>
  40c59d:	mov    rax,QWORD PTR [rbp-0x18]
  40c5a1:	mov    QWORD PTR [rbp-0x8],rax
  40c5a5:	mov    rax,QWORD PTR [rbp-0x8]
  40c5a9:	add    rsp,0x30
  40c5ad:	pop    rbp
  40c5ae:	ret    
  40c5af:	nop

000000000040c5b0 <flatcc_json_parser_space_ext@@Base>:
  40c5b0:	push   rbp
  40c5b1:	mov    rbp,rsp
  40c5b4:	sub    rsp,0x40
  40c5b8:	mov    QWORD PTR [rbp-0x10],rdi
  40c5bc:	mov    QWORD PTR [rbp-0x18],rsi
  40c5c0:	mov    QWORD PTR [rbp-0x20],rdx
  40c5c4:	jmp    40c5c9 <flatcc_json_parser_space_ext@@Base+0x19>
  40c5c9:	mov    rax,QWORD PTR [rbp-0x20]
  40c5cd:	mov    rcx,QWORD PTR [rbp-0x18]
  40c5d1:	sub    rax,rcx
  40c5d4:	cmp    rax,0x10
  40c5d8:	jl     40c65c <flatcc_json_parser_space_ext@@Base+0xac>
  40c5de:	mov    rax,QWORD PTR [rbp-0x18]
  40c5e2:	movsx  ecx,BYTE PTR [rax]
  40c5e5:	cmp    ecx,0x20
  40c5e8:	jle    40c5fb <flatcc_json_parser_space_ext@@Base+0x4b>
  40c5ee:	mov    rax,QWORD PTR [rbp-0x18]
  40c5f2:	mov    QWORD PTR [rbp-0x8],rax
  40c5f6:	jmp    40c7b4 <flatcc_json_parser_space_ext@@Base+0x204>
  40c5fb:	mov    rax,QWORD PTR [rbp-0x18]
  40c5ff:	movzx  ecx,WORD PTR [rax]
  40c602:	cmp    ecx,0x2020
  40c608:	jne    40c61c <flatcc_json_parser_space_ext@@Base+0x6c>
  40c60e:	mov    rax,QWORD PTR [rbp-0x18]
  40c612:	add    rax,0x2
  40c618:	mov    QWORD PTR [rbp-0x18],rax
  40c61c:	mov    rax,QWORD PTR [rbp-0x18]
  40c620:	movsx  ecx,BYTE PTR [rax]
  40c623:	cmp    ecx,0x20
  40c626:	jne    40c63a <flatcc_json_parser_space_ext@@Base+0x8a>
  40c62c:	mov    rax,QWORD PTR [rbp-0x18]
  40c630:	add    rax,0x1
  40c636:	mov    QWORD PTR [rbp-0x18],rax
  40c63a:	mov    rax,QWORD PTR [rbp-0x18]
  40c63e:	movsx  ecx,BYTE PTR [rax]
  40c641:	cmp    ecx,0x20
  40c644:	jle    40c657 <flatcc_json_parser_space_ext@@Base+0xa7>
  40c64a:	mov    rax,QWORD PTR [rbp-0x18]
  40c64e:	mov    QWORD PTR [rbp-0x8],rax
  40c652:	jmp    40c7b4 <flatcc_json_parser_space_ext@@Base+0x204>
  40c657:	jmp    40c65c <flatcc_json_parser_space_ext@@Base+0xac>
  40c65c:	jmp    40c661 <flatcc_json_parser_space_ext@@Base+0xb1>
  40c661:	xor    eax,eax
  40c663:	mov    rcx,QWORD PTR [rbp-0x18]
  40c667:	cmp    rcx,QWORD PTR [rbp-0x20]
  40c66b:	mov    BYTE PTR [rbp-0x21],al
  40c66e:	je     40c684 <flatcc_json_parser_space_ext@@Base+0xd4>
  40c674:	mov    rax,QWORD PTR [rbp-0x18]
  40c678:	movsx  ecx,BYTE PTR [rax]
  40c67b:	cmp    ecx,0x20
  40c67e:	sete   dl
  40c681:	mov    BYTE PTR [rbp-0x21],dl
  40c684:	mov    al,BYTE PTR [rbp-0x21]
  40c687:	test   al,0x1
  40c689:	jne    40c694 <flatcc_json_parser_space_ext@@Base+0xe4>
  40c68f:	jmp    40c6a7 <flatcc_json_parser_space_ext@@Base+0xf7>
  40c694:	mov    rax,QWORD PTR [rbp-0x18]
  40c698:	add    rax,0x1
  40c69e:	mov    QWORD PTR [rbp-0x18],rax
  40c6a2:	jmp    40c661 <flatcc_json_parser_space_ext@@Base+0xb1>
  40c6a7:	jmp    40c6ac <flatcc_json_parser_space_ext@@Base+0xfc>
  40c6ac:	xor    eax,eax
  40c6ae:	mov    rcx,QWORD PTR [rbp-0x18]
  40c6b2:	cmp    rcx,QWORD PTR [rbp-0x20]
  40c6b6:	mov    BYTE PTR [rbp-0x22],al
  40c6b9:	je     40c6cf <flatcc_json_parser_space_ext@@Base+0x11f>
  40c6bf:	mov    rax,QWORD PTR [rbp-0x18]
  40c6c3:	movsx  ecx,BYTE PTR [rax]
  40c6c6:	cmp    ecx,0x20
  40c6c9:	setle  dl
  40c6cc:	mov    BYTE PTR [rbp-0x22],dl
  40c6cf:	mov    al,BYTE PTR [rbp-0x22]
  40c6d2:	test   al,0x1
  40c6d4:	jne    40c6df <flatcc_json_parser_space_ext@@Base+0x12f>
  40c6da:	jmp    40c7ac <flatcc_json_parser_space_ext@@Base+0x1fc>
  40c6df:	mov    rax,QWORD PTR [rbp-0x18]
  40c6e3:	movsx  ecx,BYTE PTR [rax]
  40c6e6:	add    ecx,0xfffffff7
  40c6e9:	mov    eax,ecx
  40c6eb:	sub    ecx,0x17
  40c6ee:	mov    QWORD PTR [rbp-0x30],rax
  40c6f2:	ja     40c78d <flatcc_json_parser_space_ext@@Base+0x1dd>
  40c6f8:	lea    rax,[rip+0x716d]        # 41386c <flatcc_builder_padding_base@@Base+0x14fc>
  40c6ff:	mov    rcx,QWORD PTR [rbp-0x30]
  40c703:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c707:	add    rdx,rax
  40c70a:	jmp    rdx
  40c70c:	xor    eax,eax
  40c70e:	mov    rcx,QWORD PTR [rbp-0x20]
  40c712:	mov    rdx,QWORD PTR [rbp-0x18]
  40c716:	sub    rcx,rdx
  40c719:	cmp    rcx,0x1
  40c71d:	mov    BYTE PTR [rbp-0x31],al
  40c720:	jle    40c737 <flatcc_json_parser_space_ext@@Base+0x187>
  40c726:	mov    rax,QWORD PTR [rbp-0x18]
  40c72a:	movsx  ecx,BYTE PTR [rax+0x1]
  40c72e:	cmp    ecx,0xa
  40c731:	sete   dl
  40c734:	mov    BYTE PTR [rbp-0x31],dl
  40c737:	mov    al,BYTE PTR [rbp-0x31]
  40c73a:	and    al,0x1
  40c73c:	movzx  ecx,al
  40c73f:	mov    rdx,QWORD PTR [rbp-0x18]
  40c743:	movsxd rsi,ecx
  40c746:	add    rdx,rsi
  40c749:	mov    QWORD PTR [rbp-0x18],rdx
  40c74d:	mov    rax,QWORD PTR [rbp-0x10]
  40c751:	mov    ecx,DWORD PTR [rax+0x18]
  40c754:	add    ecx,0x1
  40c757:	mov    DWORD PTR [rax+0x18],ecx
  40c75a:	mov    rax,QWORD PTR [rbp-0x18]
  40c75e:	add    rax,0x1
  40c764:	mov    QWORD PTR [rbp-0x18],rax
  40c768:	mov    rdx,QWORD PTR [rbp-0x10]
  40c76c:	mov    QWORD PTR [rdx+0x8],rax
  40c770:	jmp    40c6ac <flatcc_json_parser_space_ext@@Base+0xfc>
  40c775:	mov    rax,QWORD PTR [rbp-0x18]
  40c779:	add    rax,0x1
  40c77f:	mov    QWORD PTR [rbp-0x18],rax
  40c783:	jmp    40c6ac <flatcc_json_parser_space_ext@@Base+0xfc>
  40c788:	jmp    40c5c4 <flatcc_json_parser_space_ext@@Base+0x14>
  40c78d:	mov    rdi,QWORD PTR [rbp-0x10]
  40c791:	mov    rsi,QWORD PTR [rbp-0x18]
  40c795:	mov    rdx,QWORD PTR [rbp-0x20]
  40c799:	mov    ecx,0x5
  40c79e:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c7a3:	mov    QWORD PTR [rbp-0x8],rax
  40c7a7:	jmp    40c7b4 <flatcc_json_parser_space_ext@@Base+0x204>
  40c7ac:	mov    rax,QWORD PTR [rbp-0x18]
  40c7b0:	mov    QWORD PTR [rbp-0x8],rax
  40c7b4:	mov    rax,QWORD PTR [rbp-0x8]
  40c7b8:	add    rsp,0x40
  40c7bc:	pop    rbp
  40c7bd:	ret    
  40c7be:	xchg   ax,ax

000000000040c7c0 <flatcc_json_parser_string_escape@@Base>:
  40c7c0:	push   rbp
  40c7c1:	mov    rbp,rsp
  40c7c4:	sub    rsp,0x40
  40c7c8:	mov    QWORD PTR [rbp-0x10],rdi
  40c7cc:	mov    QWORD PTR [rbp-0x18],rsi
  40c7d0:	mov    QWORD PTR [rbp-0x20],rdx
  40c7d4:	mov    QWORD PTR [rbp-0x28],rcx
  40c7d8:	mov    rax,QWORD PTR [rbp-0x20]
  40c7dc:	mov    rcx,QWORD PTR [rbp-0x18]
  40c7e0:	sub    rax,rcx
  40c7e3:	cmp    rax,0x2
  40c7e7:	jl     40c7fd <flatcc_json_parser_string_escape@@Base+0x3d>
  40c7ed:	mov    rax,QWORD PTR [rbp-0x18]
  40c7f1:	movsx  ecx,BYTE PTR [rax]
  40c7f4:	cmp    ecx,0x5c
  40c7f7:	je     40c823 <flatcc_json_parser_string_escape@@Base+0x63>
  40c7fd:	mov    rax,QWORD PTR [rbp-0x28]
  40c801:	mov    BYTE PTR [rax],0x0
  40c804:	mov    rdi,QWORD PTR [rbp-0x10]
  40c808:	mov    rsi,QWORD PTR [rbp-0x18]
  40c80c:	mov    rdx,QWORD PTR [rbp-0x20]
  40c810:	mov    ecx,0x12
  40c815:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c81a:	mov    QWORD PTR [rbp-0x8],rax
  40c81e:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40c823:	mov    rax,QWORD PTR [rbp-0x18]
  40c827:	movsx  ecx,BYTE PTR [rax+0x1]
  40c82b:	add    ecx,0xffffffde
  40c82e:	mov    eax,ecx
  40c830:	sub    ecx,0x56
  40c833:	mov    QWORD PTR [rbp-0x38],rax
  40c837:	ja     40cee6 <flatcc_json_parser_string_escape@@Base+0x726>
  40c83d:	lea    rax,[rip+0x7088]        # 4138cc <flatcc_builder_padding_base@@Base+0x155c>
  40c844:	mov    rcx,QWORD PTR [rbp-0x38]
  40c848:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c84c:	add    rdx,rax
  40c84f:	jmp    rdx
  40c851:	mov    BYTE PTR [rbp-0x2a],0x0
  40c855:	mov    rax,QWORD PTR [rbp-0x28]
  40c859:	mov    BYTE PTR [rax],0x1
  40c85c:	mov    rax,QWORD PTR [rbp-0x20]
  40c860:	mov    rcx,QWORD PTR [rbp-0x18]
  40c864:	sub    rax,rcx
  40c867:	cmp    rax,0x4
  40c86b:	jge    40c897 <flatcc_json_parser_string_escape@@Base+0xd7>
  40c871:	mov    rax,QWORD PTR [rbp-0x28]
  40c875:	mov    BYTE PTR [rax],0x0
  40c878:	mov    rdi,QWORD PTR [rbp-0x10]
  40c87c:	mov    rsi,QWORD PTR [rbp-0x18]
  40c880:	mov    rdx,QWORD PTR [rbp-0x20]
  40c884:	mov    ecx,0x12
  40c889:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c88e:	mov    QWORD PTR [rbp-0x8],rax
  40c892:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40c897:	mov    rax,QWORD PTR [rbp-0x18]
  40c89b:	mov    cl,BYTE PTR [rax+0x2]
  40c89e:	mov    BYTE PTR [rbp-0x29],cl
  40c8a1:	movsx  edx,BYTE PTR [rbp-0x29]
  40c8a5:	cmp    edx,0x30
  40c8a8:	jl     40c8d3 <flatcc_json_parser_string_escape@@Base+0x113>
  40c8ae:	movsx  eax,BYTE PTR [rbp-0x29]
  40c8b2:	cmp    eax,0x39
  40c8b5:	jg     40c8d3 <flatcc_json_parser_string_escape@@Base+0x113>
  40c8bb:	movsx  eax,BYTE PTR [rbp-0x29]
  40c8bf:	sub    eax,0x30
  40c8c2:	shl    eax,0x4
  40c8c5:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c8c9:	or     ecx,eax
  40c8cb:	mov    BYTE PTR [rbp-0x2a],cl
  40c8ce:	jmp    40c93d <flatcc_json_parser_string_escape@@Base+0x17d>
  40c8d3:	movsx  eax,BYTE PTR [rbp-0x29]
  40c8d7:	or     eax,0x20
  40c8da:	mov    BYTE PTR [rbp-0x29],al
  40c8dd:	movsx  ecx,BYTE PTR [rbp-0x29]
  40c8e1:	cmp    ecx,0x61
  40c8e4:	jl     40c912 <flatcc_json_parser_string_escape@@Base+0x152>
  40c8ea:	movsx  eax,BYTE PTR [rbp-0x29]
  40c8ee:	cmp    eax,0x66
  40c8f1:	jg     40c912 <flatcc_json_parser_string_escape@@Base+0x152>
  40c8f7:	movsx  eax,BYTE PTR [rbp-0x29]
  40c8fb:	sub    eax,0x61
  40c8fe:	add    eax,0xa
  40c901:	shl    eax,0x4
  40c904:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c908:	or     ecx,eax
  40c90a:	mov    BYTE PTR [rbp-0x2a],cl
  40c90d:	jmp    40c938 <flatcc_json_parser_string_escape@@Base+0x178>
  40c912:	mov    rax,QWORD PTR [rbp-0x28]
  40c916:	mov    BYTE PTR [rax],0x0
  40c919:	mov    rdi,QWORD PTR [rbp-0x10]
  40c91d:	mov    rsi,QWORD PTR [rbp-0x18]
  40c921:	mov    rdx,QWORD PTR [rbp-0x20]
  40c925:	mov    ecx,0x12
  40c92a:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c92f:	mov    QWORD PTR [rbp-0x8],rax
  40c933:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40c938:	jmp    40c93d <flatcc_json_parser_string_escape@@Base+0x17d>
  40c93d:	mov    rax,QWORD PTR [rbp-0x18]
  40c941:	mov    cl,BYTE PTR [rax+0x3]
  40c944:	mov    BYTE PTR [rbp-0x29],cl
  40c947:	movsx  edx,BYTE PTR [rbp-0x29]
  40c94b:	cmp    edx,0x30
  40c94e:	jl     40c976 <flatcc_json_parser_string_escape@@Base+0x1b6>
  40c954:	movsx  eax,BYTE PTR [rbp-0x29]
  40c958:	cmp    eax,0x39
  40c95b:	jg     40c976 <flatcc_json_parser_string_escape@@Base+0x1b6>
  40c961:	movsx  eax,BYTE PTR [rbp-0x29]
  40c965:	sub    eax,0x30
  40c968:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c96c:	or     ecx,eax
  40c96e:	mov    BYTE PTR [rbp-0x2a],cl
  40c971:	jmp    40c9dd <flatcc_json_parser_string_escape@@Base+0x21d>
  40c976:	movsx  eax,BYTE PTR [rbp-0x29]
  40c97a:	or     eax,0x20
  40c97d:	mov    BYTE PTR [rbp-0x29],al
  40c980:	movsx  ecx,BYTE PTR [rbp-0x29]
  40c984:	cmp    ecx,0x61
  40c987:	jl     40c9b2 <flatcc_json_parser_string_escape@@Base+0x1f2>
  40c98d:	movsx  eax,BYTE PTR [rbp-0x29]
  40c991:	cmp    eax,0x66
  40c994:	jg     40c9b2 <flatcc_json_parser_string_escape@@Base+0x1f2>
  40c99a:	movsx  eax,BYTE PTR [rbp-0x29]
  40c99e:	sub    eax,0x61
  40c9a1:	add    eax,0xa
  40c9a4:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c9a8:	or     ecx,eax
  40c9aa:	mov    BYTE PTR [rbp-0x2a],cl
  40c9ad:	jmp    40c9d8 <flatcc_json_parser_string_escape@@Base+0x218>
  40c9b2:	mov    rax,QWORD PTR [rbp-0x28]
  40c9b6:	mov    BYTE PTR [rax],0x0
  40c9b9:	mov    rdi,QWORD PTR [rbp-0x10]
  40c9bd:	mov    rsi,QWORD PTR [rbp-0x18]
  40c9c1:	mov    rdx,QWORD PTR [rbp-0x20]
  40c9c5:	mov    ecx,0x12
  40c9ca:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40c9cf:	mov    QWORD PTR [rbp-0x8],rax
  40c9d3:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40c9d8:	jmp    40c9dd <flatcc_json_parser_string_escape@@Base+0x21d>
  40c9dd:	mov    al,BYTE PTR [rbp-0x2a]
  40c9e0:	mov    rcx,QWORD PTR [rbp-0x28]
  40c9e4:	mov    BYTE PTR [rcx+0x1],al
  40c9e7:	mov    rcx,QWORD PTR [rbp-0x18]
  40c9eb:	add    rcx,0x4
  40c9f2:	mov    QWORD PTR [rbp-0x8],rcx
  40c9f6:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40c9fb:	mov    rax,QWORD PTR [rbp-0x20]
  40c9ff:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca03:	sub    rax,rcx
  40ca06:	cmp    rax,0x6
  40ca0a:	jge    40ca36 <flatcc_json_parser_string_escape@@Base+0x276>
  40ca10:	mov    rax,QWORD PTR [rbp-0x28]
  40ca14:	mov    BYTE PTR [rax],0x0
  40ca17:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca1b:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca1f:	mov    rdx,QWORD PTR [rbp-0x20]
  40ca23:	mov    ecx,0x12
  40ca28:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40ca2d:	mov    QWORD PTR [rbp-0x8],rax
  40ca31:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40ca36:	mov    WORD PTR [rbp-0x2c],0x0
  40ca3c:	mov    rax,QWORD PTR [rbp-0x18]
  40ca40:	mov    cl,BYTE PTR [rax+0x2]
  40ca43:	mov    BYTE PTR [rbp-0x29],cl
  40ca46:	movsx  edx,BYTE PTR [rbp-0x29]
  40ca4a:	cmp    edx,0x30
  40ca4d:	jl     40ca7b <flatcc_json_parser_string_escape@@Base+0x2bb>
  40ca53:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca57:	cmp    eax,0x39
  40ca5a:	jg     40ca7b <flatcc_json_parser_string_escape@@Base+0x2bb>
  40ca60:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca64:	sub    eax,0x30
  40ca67:	mov    WORD PTR [rbp-0x2e],ax
  40ca6b:	movzx  ecx,WORD PTR [rbp-0x2e]
  40ca6f:	shl    ecx,0xc
  40ca72:	mov    WORD PTR [rbp-0x2c],cx
  40ca76:	jmp    40caee <flatcc_json_parser_string_escape@@Base+0x32e>
  40ca7b:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca7f:	or     eax,0x20
  40ca82:	mov    BYTE PTR [rbp-0x29],al
  40ca85:	movsx  ecx,BYTE PTR [rbp-0x29]
  40ca89:	cmp    ecx,0x61
  40ca8c:	jl     40cac3 <flatcc_json_parser_string_escape@@Base+0x303>
  40ca92:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca96:	cmp    eax,0x66
  40ca99:	jg     40cac3 <flatcc_json_parser_string_escape@@Base+0x303>
  40ca9f:	movsx  eax,BYTE PTR [rbp-0x29]
  40caa3:	sub    eax,0x61
  40caa6:	add    eax,0xa
  40caa9:	mov    WORD PTR [rbp-0x2e],ax
  40caad:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cab1:	shl    ecx,0xc
  40cab4:	movzx  edx,WORD PTR [rbp-0x2c]
  40cab8:	or     edx,ecx
  40caba:	mov    WORD PTR [rbp-0x2c],dx
  40cabe:	jmp    40cae9 <flatcc_json_parser_string_escape@@Base+0x329>
  40cac3:	mov    rax,QWORD PTR [rbp-0x28]
  40cac7:	mov    BYTE PTR [rax],0x0
  40caca:	mov    rdi,QWORD PTR [rbp-0x10]
  40cace:	mov    rsi,QWORD PTR [rbp-0x18]
  40cad2:	mov    rdx,QWORD PTR [rbp-0x20]
  40cad6:	mov    ecx,0x12
  40cadb:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40cae0:	mov    QWORD PTR [rbp-0x8],rax
  40cae4:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cae9:	jmp    40caee <flatcc_json_parser_string_escape@@Base+0x32e>
  40caee:	mov    rax,QWORD PTR [rbp-0x18]
  40caf2:	mov    cl,BYTE PTR [rax+0x3]
  40caf5:	mov    BYTE PTR [rbp-0x29],cl
  40caf8:	movsx  edx,BYTE PTR [rbp-0x29]
  40cafc:	cmp    edx,0x30
  40caff:	jl     40cb33 <flatcc_json_parser_string_escape@@Base+0x373>
  40cb05:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb09:	cmp    eax,0x39
  40cb0c:	jg     40cb33 <flatcc_json_parser_string_escape@@Base+0x373>
  40cb12:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb16:	sub    eax,0x30
  40cb19:	mov    WORD PTR [rbp-0x2e],ax
  40cb1d:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cb21:	shl    ecx,0x8
  40cb24:	movzx  edx,WORD PTR [rbp-0x2c]
  40cb28:	or     edx,ecx
  40cb2a:	mov    WORD PTR [rbp-0x2c],dx
  40cb2e:	jmp    40cba6 <flatcc_json_parser_string_escape@@Base+0x3e6>
  40cb33:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb37:	or     eax,0x20
  40cb3a:	mov    BYTE PTR [rbp-0x29],al
  40cb3d:	movsx  ecx,BYTE PTR [rbp-0x29]
  40cb41:	cmp    ecx,0x61
  40cb44:	jl     40cb7b <flatcc_json_parser_string_escape@@Base+0x3bb>
  40cb4a:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb4e:	cmp    eax,0x66
  40cb51:	jg     40cb7b <flatcc_json_parser_string_escape@@Base+0x3bb>
  40cb57:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb5b:	sub    eax,0x61
  40cb5e:	add    eax,0xa
  40cb61:	mov    WORD PTR [rbp-0x2e],ax
  40cb65:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cb69:	shl    ecx,0x8
  40cb6c:	movzx  edx,WORD PTR [rbp-0x2c]
  40cb70:	or     edx,ecx
  40cb72:	mov    WORD PTR [rbp-0x2c],dx
  40cb76:	jmp    40cba1 <flatcc_json_parser_string_escape@@Base+0x3e1>
  40cb7b:	mov    rax,QWORD PTR [rbp-0x28]
  40cb7f:	mov    BYTE PTR [rax],0x0
  40cb82:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb86:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb8a:	mov    rdx,QWORD PTR [rbp-0x20]
  40cb8e:	mov    ecx,0x12
  40cb93:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40cb98:	mov    QWORD PTR [rbp-0x8],rax
  40cb9c:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cba1:	jmp    40cba6 <flatcc_json_parser_string_escape@@Base+0x3e6>
  40cba6:	mov    rax,QWORD PTR [rbp-0x18]
  40cbaa:	mov    cl,BYTE PTR [rax+0x4]
  40cbad:	mov    BYTE PTR [rbp-0x29],cl
  40cbb0:	movsx  edx,BYTE PTR [rbp-0x29]
  40cbb4:	cmp    edx,0x30
  40cbb7:	jl     40cbeb <flatcc_json_parser_string_escape@@Base+0x42b>
  40cbbd:	movsx  eax,BYTE PTR [rbp-0x29]
  40cbc1:	cmp    eax,0x39
  40cbc4:	jg     40cbeb <flatcc_json_parser_string_escape@@Base+0x42b>
  40cbca:	movsx  eax,BYTE PTR [rbp-0x29]
  40cbce:	sub    eax,0x30
  40cbd1:	mov    WORD PTR [rbp-0x2e],ax
  40cbd5:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cbd9:	shl    ecx,0x4
  40cbdc:	movzx  edx,WORD PTR [rbp-0x2c]
  40cbe0:	or     edx,ecx
  40cbe2:	mov    WORD PTR [rbp-0x2c],dx
  40cbe6:	jmp    40cc5e <flatcc_json_parser_string_escape@@Base+0x49e>
  40cbeb:	movsx  eax,BYTE PTR [rbp-0x29]
  40cbef:	or     eax,0x20
  40cbf2:	mov    BYTE PTR [rbp-0x29],al
  40cbf5:	movsx  ecx,BYTE PTR [rbp-0x29]
  40cbf9:	cmp    ecx,0x61
  40cbfc:	jl     40cc33 <flatcc_json_parser_string_escape@@Base+0x473>
  40cc02:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc06:	cmp    eax,0x66
  40cc09:	jg     40cc33 <flatcc_json_parser_string_escape@@Base+0x473>
  40cc0f:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc13:	sub    eax,0x61
  40cc16:	add    eax,0xa
  40cc19:	mov    WORD PTR [rbp-0x2e],ax
  40cc1d:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cc21:	shl    ecx,0x4
  40cc24:	movzx  edx,WORD PTR [rbp-0x2c]
  40cc28:	or     edx,ecx
  40cc2a:	mov    WORD PTR [rbp-0x2c],dx
  40cc2e:	jmp    40cc59 <flatcc_json_parser_string_escape@@Base+0x499>
  40cc33:	mov    rax,QWORD PTR [rbp-0x28]
  40cc37:	mov    BYTE PTR [rax],0x0
  40cc3a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc3e:	mov    rsi,QWORD PTR [rbp-0x18]
  40cc42:	mov    rdx,QWORD PTR [rbp-0x20]
  40cc46:	mov    ecx,0x12
  40cc4b:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40cc50:	mov    QWORD PTR [rbp-0x8],rax
  40cc54:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cc59:	jmp    40cc5e <flatcc_json_parser_string_escape@@Base+0x49e>
  40cc5e:	mov    rax,QWORD PTR [rbp-0x18]
  40cc62:	mov    cl,BYTE PTR [rax+0x5]
  40cc65:	mov    BYTE PTR [rbp-0x29],cl
  40cc68:	movsx  edx,BYTE PTR [rbp-0x29]
  40cc6c:	cmp    edx,0x30
  40cc6f:	jl     40cca0 <flatcc_json_parser_string_escape@@Base+0x4e0>
  40cc75:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc79:	cmp    eax,0x39
  40cc7c:	jg     40cca0 <flatcc_json_parser_string_escape@@Base+0x4e0>
  40cc82:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc86:	sub    eax,0x30
  40cc89:	mov    WORD PTR [rbp-0x2e],ax
  40cc8d:	movzx  ecx,WORD PTR [rbp-0x2e]
  40cc91:	movzx  edx,WORD PTR [rbp-0x2c]
  40cc95:	or     edx,ecx
  40cc97:	mov    WORD PTR [rbp-0x2c],dx
  40cc9b:	jmp    40cd10 <flatcc_json_parser_string_escape@@Base+0x550>
  40cca0:	movsx  eax,BYTE PTR [rbp-0x29]
  40cca4:	or     eax,0x20
  40cca7:	mov    BYTE PTR [rbp-0x29],al
  40ccaa:	movsx  ecx,BYTE PTR [rbp-0x29]
  40ccae:	cmp    ecx,0x61
  40ccb1:	jl     40cce5 <flatcc_json_parser_string_escape@@Base+0x525>
  40ccb7:	movsx  eax,BYTE PTR [rbp-0x29]
  40ccbb:	cmp    eax,0x66
  40ccbe:	jg     40cce5 <flatcc_json_parser_string_escape@@Base+0x525>
  40ccc4:	movsx  eax,BYTE PTR [rbp-0x29]
  40ccc8:	sub    eax,0x61
  40cccb:	add    eax,0xa
  40ccce:	mov    WORD PTR [rbp-0x2e],ax
  40ccd2:	movzx  ecx,WORD PTR [rbp-0x2e]
  40ccd6:	movzx  edx,WORD PTR [rbp-0x2c]
  40ccda:	or     edx,ecx
  40ccdc:	mov    WORD PTR [rbp-0x2c],dx
  40cce0:	jmp    40cd0b <flatcc_json_parser_string_escape@@Base+0x54b>
  40cce5:	mov    rax,QWORD PTR [rbp-0x28]
  40cce9:	mov    BYTE PTR [rax],0x0
  40ccec:	mov    rdi,QWORD PTR [rbp-0x10]
  40ccf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40ccf4:	mov    rdx,QWORD PTR [rbp-0x20]
  40ccf8:	mov    ecx,0x12
  40ccfd:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40cd02:	mov    QWORD PTR [rbp-0x8],rax
  40cd06:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cd0b:	jmp    40cd10 <flatcc_json_parser_string_escape@@Base+0x550>
  40cd10:	movzx  eax,WORD PTR [rbp-0x2c]
  40cd14:	cmp    eax,0x7f
  40cd17:	jg     40cd34 <flatcc_json_parser_string_escape@@Base+0x574>
  40cd1d:	mov    rax,QWORD PTR [rbp-0x28]
  40cd21:	mov    BYTE PTR [rax],0x1
  40cd24:	mov    cx,WORD PTR [rbp-0x2c]
  40cd28:	mov    rax,QWORD PTR [rbp-0x28]
  40cd2c:	mov    BYTE PTR [rax+0x1],cl
  40cd2f:	jmp    40cdc3 <flatcc_json_parser_string_escape@@Base+0x603>
  40cd34:	movzx  eax,WORD PTR [rbp-0x2c]
  40cd38:	cmp    eax,0x7ff
  40cd3d:	jg     40cd77 <flatcc_json_parser_string_escape@@Base+0x5b7>
  40cd43:	mov    rax,QWORD PTR [rbp-0x28]
  40cd47:	mov    BYTE PTR [rax],0x2
  40cd4a:	movzx  ecx,WORD PTR [rbp-0x2c]
  40cd4e:	sar    ecx,0x6
  40cd51:	or     ecx,0xc0
  40cd57:	mov    rax,QWORD PTR [rbp-0x28]
  40cd5b:	mov    BYTE PTR [rax+0x1],cl
  40cd5e:	movzx  edx,WORD PTR [rbp-0x2c]
  40cd62:	and    edx,0x3f
  40cd65:	or     edx,0x80
  40cd6b:	mov    rax,QWORD PTR [rbp-0x28]
  40cd6f:	mov    BYTE PTR [rax+0x2],dl
  40cd72:	jmp    40cdbe <flatcc_json_parser_string_escape@@Base+0x5fe>
  40cd77:	mov    rax,QWORD PTR [rbp-0x28]
  40cd7b:	mov    BYTE PTR [rax],0x3
  40cd7e:	movzx  ecx,WORD PTR [rbp-0x2c]
  40cd82:	sar    ecx,0xc
  40cd85:	or     ecx,0xe0
  40cd8b:	mov    rax,QWORD PTR [rbp-0x28]
  40cd8f:	mov    BYTE PTR [rax+0x1],cl
  40cd92:	movzx  edx,WORD PTR [rbp-0x2c]
  40cd96:	sar    edx,0x6
  40cd99:	and    edx,0x3f
  40cd9c:	or     edx,0x80
  40cda2:	mov    rax,QWORD PTR [rbp-0x28]
  40cda6:	mov    BYTE PTR [rax+0x2],dl
  40cda9:	movzx  esi,WORD PTR [rbp-0x2c]
  40cdad:	and    esi,0x3f
  40cdb0:	or     esi,0x80
  40cdb6:	mov    rax,QWORD PTR [rbp-0x28]
  40cdba:	mov    BYTE PTR [rax+0x3],sil
  40cdbe:	jmp    40cdc3 <flatcc_json_parser_string_escape@@Base+0x603>
  40cdc3:	mov    rax,QWORD PTR [rbp-0x18]
  40cdc7:	add    rax,0x6
  40cdcd:	mov    QWORD PTR [rbp-0x8],rax
  40cdd1:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cdd6:	mov    rax,QWORD PTR [rbp-0x28]
  40cdda:	mov    BYTE PTR [rax],0x1
  40cddd:	mov    rax,QWORD PTR [rbp-0x28]
  40cde1:	mov    BYTE PTR [rax+0x1],0x9
  40cde5:	mov    rax,QWORD PTR [rbp-0x18]
  40cde9:	add    rax,0x2
  40cdef:	mov    QWORD PTR [rbp-0x8],rax
  40cdf3:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cdf8:	mov    rax,QWORD PTR [rbp-0x28]
  40cdfc:	mov    BYTE PTR [rax],0x1
  40cdff:	mov    rax,QWORD PTR [rbp-0x28]
  40ce03:	mov    BYTE PTR [rax+0x1],0xa
  40ce07:	mov    rax,QWORD PTR [rbp-0x18]
  40ce0b:	add    rax,0x2
  40ce11:	mov    QWORD PTR [rbp-0x8],rax
  40ce15:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40ce1a:	mov    rax,QWORD PTR [rbp-0x28]
  40ce1e:	mov    BYTE PTR [rax],0x1
  40ce21:	mov    rax,QWORD PTR [rbp-0x28]
  40ce25:	mov    BYTE PTR [rax+0x1],0xd
  40ce29:	mov    rax,QWORD PTR [rbp-0x18]
  40ce2d:	add    rax,0x2
  40ce33:	mov    QWORD PTR [rbp-0x8],rax
  40ce37:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40ce3c:	mov    rax,QWORD PTR [rbp-0x28]
  40ce40:	mov    BYTE PTR [rax],0x1
  40ce43:	mov    rax,QWORD PTR [rbp-0x28]
  40ce47:	mov    BYTE PTR [rax+0x1],0x8
  40ce4b:	mov    rax,QWORD PTR [rbp-0x18]
  40ce4f:	add    rax,0x2
  40ce55:	mov    QWORD PTR [rbp-0x8],rax
  40ce59:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40ce5e:	mov    rax,QWORD PTR [rbp-0x28]
  40ce62:	mov    BYTE PTR [rax],0x1
  40ce65:	mov    rax,QWORD PTR [rbp-0x28]
  40ce69:	mov    BYTE PTR [rax+0x1],0xc
  40ce6d:	mov    rax,QWORD PTR [rbp-0x18]
  40ce71:	add    rax,0x2
  40ce77:	mov    QWORD PTR [rbp-0x8],rax
  40ce7b:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40ce80:	mov    rax,QWORD PTR [rbp-0x28]
  40ce84:	mov    BYTE PTR [rax],0x1
  40ce87:	mov    rax,QWORD PTR [rbp-0x28]
  40ce8b:	mov    BYTE PTR [rax+0x1],0x22
  40ce8f:	mov    rax,QWORD PTR [rbp-0x18]
  40ce93:	add    rax,0x2
  40ce99:	mov    QWORD PTR [rbp-0x8],rax
  40ce9d:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cea2:	mov    rax,QWORD PTR [rbp-0x28]
  40cea6:	mov    BYTE PTR [rax],0x1
  40cea9:	mov    rax,QWORD PTR [rbp-0x28]
  40cead:	mov    BYTE PTR [rax+0x1],0x5c
  40ceb1:	mov    rax,QWORD PTR [rbp-0x18]
  40ceb5:	add    rax,0x2
  40cebb:	mov    QWORD PTR [rbp-0x8],rax
  40cebf:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cec4:	mov    rax,QWORD PTR [rbp-0x28]
  40cec8:	mov    BYTE PTR [rax],0x1
  40cecb:	mov    rax,QWORD PTR [rbp-0x28]
  40cecf:	mov    BYTE PTR [rax+0x1],0x2f
  40ced3:	mov    rax,QWORD PTR [rbp-0x18]
  40ced7:	add    rax,0x2
  40cedd:	mov    QWORD PTR [rbp-0x8],rax
  40cee1:	jmp    40cf07 <flatcc_json_parser_string_escape@@Base+0x747>
  40cee6:	mov    rax,QWORD PTR [rbp-0x28]
  40ceea:	mov    BYTE PTR [rax],0x0
  40ceed:	mov    rdi,QWORD PTR [rbp-0x10]
  40cef1:	mov    rsi,QWORD PTR [rbp-0x18]
  40cef5:	mov    rdx,QWORD PTR [rbp-0x20]
  40cef9:	mov    ecx,0x12
  40cefe:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40cf03:	mov    QWORD PTR [rbp-0x8],rax
  40cf07:	mov    rax,QWORD PTR [rbp-0x8]
  40cf0b:	add    rsp,0x40
  40cf0f:	pop    rbp
  40cf10:	ret    
  40cf11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040cf20 <flatcc_json_parser_skip_constant@@Base>:
  40cf20:	push   rbp
  40cf21:	mov    rbp,rsp
  40cf24:	sub    rsp,0x30
  40cf28:	mov    QWORD PTR [rbp-0x10],rdi
  40cf2c:	mov    QWORD PTR [rbp-0x18],rsi
  40cf30:	mov    QWORD PTR [rbp-0x20],rdx
  40cf34:	mov    rax,QWORD PTR [rbp-0x18]
  40cf38:	cmp    rax,QWORD PTR [rbp-0x20]
  40cf3c:	je     40d018 <flatcc_json_parser_skip_constant@@Base+0xf8>
  40cf42:	mov    rax,QWORD PTR [rbp-0x18]
  40cf46:	mov    cl,BYTE PTR [rax]
  40cf48:	mov    BYTE PTR [rbp-0x21],cl
  40cf4b:	movsx  edx,BYTE PTR [rbp-0x21]
  40cf4f:	and    edx,0x80
  40cf55:	cmp    edx,0x0
  40cf58:	jne    40cf92 <flatcc_json_parser_skip_constant@@Base+0x72>
  40cf5e:	movsx  eax,BYTE PTR [rbp-0x21]
  40cf62:	cmp    eax,0x5f
  40cf65:	je     40cf92 <flatcc_json_parser_skip_constant@@Base+0x72>
  40cf6b:	movsx  eax,BYTE PTR [rbp-0x21]
  40cf6f:	cmp    eax,0x30
  40cf72:	jl     40cf85 <flatcc_json_parser_skip_constant@@Base+0x65>
  40cf78:	movsx  eax,BYTE PTR [rbp-0x21]
  40cf7c:	cmp    eax,0x39
  40cf7f:	jle    40cf92 <flatcc_json_parser_skip_constant@@Base+0x72>
  40cf85:	movsx  eax,BYTE PTR [rbp-0x21]
  40cf89:	cmp    eax,0x2e
  40cf8c:	jne    40cfa5 <flatcc_json_parser_skip_constant@@Base+0x85>
  40cf92:	mov    rax,QWORD PTR [rbp-0x18]
  40cf96:	add    rax,0x1
  40cf9c:	mov    QWORD PTR [rbp-0x18],rax
  40cfa0:	jmp    40cf34 <flatcc_json_parser_skip_constant@@Base+0x14>
  40cfa5:	movsx  eax,BYTE PTR [rbp-0x21]
  40cfa9:	or     eax,0x20
  40cfac:	mov    BYTE PTR [rbp-0x21],al
  40cfaf:	movsx  ecx,BYTE PTR [rbp-0x21]
  40cfb3:	cmp    ecx,0x61
  40cfb6:	jl     40cfdc <flatcc_json_parser_skip_constant@@Base+0xbc>
  40cfbc:	movsx  eax,BYTE PTR [rbp-0x21]
  40cfc0:	cmp    eax,0x7a
  40cfc3:	jg     40cfdc <flatcc_json_parser_skip_constant@@Base+0xbc>
  40cfc9:	mov    rax,QWORD PTR [rbp-0x18]
  40cfcd:	add    rax,0x1
  40cfd3:	mov    QWORD PTR [rbp-0x18],rax
  40cfd7:	jmp    40cf34 <flatcc_json_parser_skip_constant@@Base+0x14>
  40cfdc:	mov    rdi,QWORD PTR [rbp-0x10]
  40cfe0:	mov    rax,QWORD PTR [rbp-0x18]
  40cfe4:	mov    QWORD PTR [rbp-0x30],rax
  40cfe8:	mov    rdx,QWORD PTR [rbp-0x20]
  40cfec:	mov    rsi,rax
  40cfef:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40cff4:	mov    QWORD PTR [rbp-0x18],rax
  40cff8:	mov    rax,QWORD PTR [rbp-0x18]
  40cffc:	cmp    rax,QWORD PTR [rbp-0x30]
  40d000:	jne    40d013 <flatcc_json_parser_skip_constant@@Base+0xf3>
  40d006:	mov    rax,QWORD PTR [rbp-0x18]
  40d00a:	mov    QWORD PTR [rbp-0x8],rax
  40d00e:	jmp    40d020 <flatcc_json_parser_skip_constant@@Base+0x100>
  40d013:	jmp    40cf34 <flatcc_json_parser_skip_constant@@Base+0x14>
  40d018:	mov    rax,QWORD PTR [rbp-0x18]
  40d01c:	mov    QWORD PTR [rbp-0x8],rax
  40d020:	mov    rax,QWORD PTR [rbp-0x8]
  40d024:	add    rsp,0x30
  40d028:	pop    rbp
  40d029:	ret    
  40d02a:	nop    WORD PTR [rax+rax*1+0x0]
  40d030:	push   rbp
  40d031:	mov    rbp,rsp
  40d034:	sub    rsp,0x20
  40d038:	mov    QWORD PTR [rbp-0x10],rdi
  40d03c:	mov    QWORD PTR [rbp-0x18],rsi
  40d040:	mov    QWORD PTR [rbp-0x20],rdx
  40d044:	mov    rax,QWORD PTR [rbp-0x20]
  40d048:	mov    rcx,QWORD PTR [rbp-0x18]
  40d04c:	sub    rax,rcx
  40d04f:	cmp    rax,0x1
  40d053:	jle    40d0af <flatcc_json_parser_skip_constant@@Base+0x18f>
  40d059:	mov    rax,QWORD PTR [rbp-0x18]
  40d05d:	movsx  ecx,BYTE PTR [rax]
  40d060:	cmp    ecx,0x20
  40d063:	jle    40d076 <flatcc_json_parser_skip_constant@@Base+0x156>
  40d069:	mov    rax,QWORD PTR [rbp-0x18]
  40d06d:	mov    QWORD PTR [rbp-0x8],rax
  40d071:	jmp    40d0c4 <flatcc_json_parser_skip_constant@@Base+0x1a4>
  40d076:	mov    rax,QWORD PTR [rbp-0x18]
  40d07a:	movsx  ecx,BYTE PTR [rax]
  40d07d:	cmp    ecx,0x20
  40d080:	jne    40d0aa <flatcc_json_parser_skip_constant@@Base+0x18a>
  40d086:	mov    rax,QWORD PTR [rbp-0x18]
  40d08a:	movsx  ecx,BYTE PTR [rax+0x1]
  40d08e:	cmp    ecx,0x20
  40d091:	jle    40d0aa <flatcc_json_parser_skip_constant@@Base+0x18a>
  40d097:	mov    rax,QWORD PTR [rbp-0x18]
  40d09b:	add    rax,0x1
  40d0a1:	mov    QWORD PTR [rbp-0x8],rax
  40d0a5:	jmp    40d0c4 <flatcc_json_parser_skip_constant@@Base+0x1a4>
  40d0aa:	jmp    40d0af <flatcc_json_parser_skip_constant@@Base+0x18f>
  40d0af:	mov    rdi,QWORD PTR [rbp-0x10]
  40d0b3:	mov    rsi,QWORD PTR [rbp-0x18]
  40d0b7:	mov    rdx,QWORD PTR [rbp-0x20]
  40d0bb:	call   40c5b0 <flatcc_json_parser_space_ext@@Base>
  40d0c0:	mov    QWORD PTR [rbp-0x8],rax
  40d0c4:	mov    rax,QWORD PTR [rbp-0x8]
  40d0c8:	add    rsp,0x20
  40d0cc:	pop    rbp
  40d0cd:	ret    
  40d0ce:	xchg   ax,ax

000000000040d0d0 <flatcc_json_parser_match_constant@@Base>:
  40d0d0:	push   rbp
  40d0d1:	mov    rbp,rsp
  40d0d4:	sub    rsp,0x50
  40d0d8:	mov    QWORD PTR [rbp-0x10],rdi
  40d0dc:	mov    QWORD PTR [rbp-0x18],rsi
  40d0e0:	mov    QWORD PTR [rbp-0x20],rdx
  40d0e4:	mov    DWORD PTR [rbp-0x24],ecx
  40d0e7:	mov    QWORD PTR [rbp-0x30],r8
  40d0eb:	mov    rax,QWORD PTR [rbp-0x18]
  40d0ef:	mov    QWORD PTR [rbp-0x38],rax
  40d0f3:	mov    rax,QWORD PTR [rbp-0x18]
  40d0f7:	movsxd rdx,DWORD PTR [rbp-0x24]
  40d0fb:	add    rax,rdx
  40d0fe:	mov    QWORD PTR [rbp-0x40],rax
  40d102:	mov    rax,QWORD PTR [rbp-0x20]
  40d106:	mov    rdx,QWORD PTR [rbp-0x18]
  40d10a:	sub    rax,rdx
  40d10d:	movsxd rdx,DWORD PTR [rbp-0x24]
  40d111:	cmp    rax,rdx
  40d114:	jg     40d131 <flatcc_json_parser_match_constant@@Base+0x61>
  40d11a:	mov    rax,QWORD PTR [rbp-0x30]
  40d11e:	mov    DWORD PTR [rax],0x0
  40d124:	mov    rax,QWORD PTR [rbp-0x18]
  40d128:	mov    QWORD PTR [rbp-0x8],rax
  40d12c:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d131:	mov    rax,QWORD PTR [rbp-0x10]
  40d135:	cmp    DWORD PTR [rax+0x14],0x0
  40d139:	je     40d25a <flatcc_json_parser_match_constant@@Base+0x18a>
  40d13f:	mov    rdi,QWORD PTR [rbp-0x10]
  40d143:	mov    rsi,QWORD PTR [rbp-0x40]
  40d147:	mov    rdx,QWORD PTR [rbp-0x20]
  40d14b:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d150:	mov    QWORD PTR [rbp-0x18],rax
  40d154:	mov    rax,QWORD PTR [rbp-0x18]
  40d158:	cmp    rax,QWORD PTR [rbp-0x20]
  40d15c:	jne    40d179 <flatcc_json_parser_match_constant@@Base+0xa9>
  40d162:	mov    rax,QWORD PTR [rbp-0x30]
  40d166:	mov    DWORD PTR [rax],0x0
  40d16c:	mov    rax,QWORD PTR [rbp-0x18]
  40d170:	mov    QWORD PTR [rbp-0x8],rax
  40d174:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d179:	mov    rax,QWORD PTR [rbp-0x18]
  40d17d:	cmp    rax,QWORD PTR [rbp-0x40]
  40d181:	je     40d206 <flatcc_json_parser_match_constant@@Base+0x136>
  40d187:	mov    rax,QWORD PTR [rbp-0x18]
  40d18b:	mov    cl,BYTE PTR [rax]
  40d18d:	mov    BYTE PTR [rbp-0x41],cl
  40d190:	movsx  edx,BYTE PTR [rbp-0x41]
  40d194:	cmp    edx,0x5f
  40d197:	je     40d1af <flatcc_json_parser_match_constant@@Base+0xdf>
  40d19d:	movsx  eax,BYTE PTR [rbp-0x41]
  40d1a1:	and    eax,0x80
  40d1a6:	cmp    eax,0x0
  40d1a9:	je     40d1c6 <flatcc_json_parser_match_constant@@Base+0xf6>
  40d1af:	mov    rax,QWORD PTR [rbp-0x30]
  40d1b3:	mov    DWORD PTR [rax],0x1
  40d1b9:	mov    rax,QWORD PTR [rbp-0x18]
  40d1bd:	mov    QWORD PTR [rbp-0x8],rax
  40d1c1:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d1c6:	movsx  eax,BYTE PTR [rbp-0x41]
  40d1ca:	or     eax,0x20
  40d1cd:	mov    BYTE PTR [rbp-0x41],al
  40d1d0:	movsx  ecx,BYTE PTR [rbp-0x41]
  40d1d4:	cmp    ecx,0x61
  40d1d7:	jl     40d201 <flatcc_json_parser_match_constant@@Base+0x131>
  40d1dd:	movsx  eax,BYTE PTR [rbp-0x41]
  40d1e1:	cmp    eax,0x7a
  40d1e4:	jg     40d201 <flatcc_json_parser_match_constant@@Base+0x131>
  40d1ea:	mov    rax,QWORD PTR [rbp-0x30]
  40d1ee:	mov    DWORD PTR [rax],0x1
  40d1f4:	mov    rax,QWORD PTR [rbp-0x18]
  40d1f8:	mov    QWORD PTR [rbp-0x8],rax
  40d1fc:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d201:	jmp    40d206 <flatcc_json_parser_match_constant@@Base+0x136>
  40d206:	mov    rax,QWORD PTR [rbp-0x30]
  40d20a:	mov    DWORD PTR [rax],0x0
  40d210:	mov    rax,QWORD PTR [rbp-0x18]
  40d214:	movsx  ecx,BYTE PTR [rax]
  40d217:	cmp    ecx,0x2c
  40d21a:	je     40d240 <flatcc_json_parser_match_constant@@Base+0x170>
  40d220:	mov    rax,QWORD PTR [rbp-0x18]
  40d224:	movsx  ecx,BYTE PTR [rax]
  40d227:	cmp    ecx,0x7d
  40d22a:	je     40d240 <flatcc_json_parser_match_constant@@Base+0x170>
  40d230:	mov    rax,QWORD PTR [rbp-0x18]
  40d234:	movsx  ecx,BYTE PTR [rax]
  40d237:	cmp    ecx,0x5d
  40d23a:	jne    40d24d <flatcc_json_parser_match_constant@@Base+0x17d>
  40d240:	mov    rax,QWORD PTR [rbp-0x18]
  40d244:	mov    QWORD PTR [rbp-0x8],rax
  40d248:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d24d:	mov    rax,QWORD PTR [rbp-0x38]
  40d251:	mov    QWORD PTR [rbp-0x8],rax
  40d255:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d25a:	mov    rax,QWORD PTR [rbp-0x40]
  40d25e:	mov    QWORD PTR [rbp-0x18],rax
  40d262:	mov    rax,QWORD PTR [rbp-0x18]
  40d266:	movsx  ecx,BYTE PTR [rax]
  40d269:	cmp    ecx,0x20
  40d26c:	jne    40d317 <flatcc_json_parser_match_constant@@Base+0x247>
  40d272:	mov    rax,QWORD PTR [rbp-0x18]
  40d276:	add    rax,0x1
  40d27c:	mov    QWORD PTR [rbp-0x18],rax
  40d280:	xor    eax,eax
  40d282:	mov    rcx,QWORD PTR [rbp-0x18]
  40d286:	cmp    rcx,QWORD PTR [rbp-0x20]
  40d28a:	mov    BYTE PTR [rbp-0x42],al
  40d28d:	je     40d2a3 <flatcc_json_parser_match_constant@@Base+0x1d3>
  40d293:	mov    rax,QWORD PTR [rbp-0x18]
  40d297:	movsx  ecx,BYTE PTR [rax]
  40d29a:	cmp    ecx,0x20
  40d29d:	sete   dl
  40d2a0:	mov    BYTE PTR [rbp-0x42],dl
  40d2a3:	mov    al,BYTE PTR [rbp-0x42]
  40d2a6:	test   al,0x1
  40d2a8:	jne    40d2b3 <flatcc_json_parser_match_constant@@Base+0x1e3>
  40d2ae:	jmp    40d2c6 <flatcc_json_parser_match_constant@@Base+0x1f6>
  40d2b3:	mov    rax,QWORD PTR [rbp-0x18]
  40d2b7:	add    rax,0x1
  40d2bd:	mov    QWORD PTR [rbp-0x18],rax
  40d2c1:	jmp    40d280 <flatcc_json_parser_match_constant@@Base+0x1b0>
  40d2c6:	mov    rax,QWORD PTR [rbp-0x18]
  40d2ca:	cmp    rax,QWORD PTR [rbp-0x20]
  40d2ce:	jne    40d2eb <flatcc_json_parser_match_constant@@Base+0x21b>
  40d2d4:	mov    rax,QWORD PTR [rbp-0x30]
  40d2d8:	mov    DWORD PTR [rax],0x0
  40d2de:	mov    rax,QWORD PTR [rbp-0x18]
  40d2e2:	mov    QWORD PTR [rbp-0x8],rax
  40d2e6:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d2eb:	mov    rax,QWORD PTR [rbp-0x18]
  40d2ef:	movsx  ecx,BYTE PTR [rax]
  40d2f2:	cmp    ecx,0x22
  40d2f5:	je     40d312 <flatcc_json_parser_match_constant@@Base+0x242>
  40d2fb:	mov    rax,QWORD PTR [rbp-0x30]
  40d2ff:	mov    DWORD PTR [rax],0x1
  40d305:	mov    rax,QWORD PTR [rbp-0x18]
  40d309:	mov    QWORD PTR [rbp-0x8],rax
  40d30d:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d312:	jmp    40d317 <flatcc_json_parser_match_constant@@Base+0x247>
  40d317:	mov    rax,QWORD PTR [rbp-0x18]
  40d31b:	movsx  ecx,BYTE PTR [rax]
  40d31e:	mov    edx,ecx
  40d320:	sub    edx,0x22
  40d323:	mov    DWORD PTR [rbp-0x48],ecx
  40d326:	je     40d36b <flatcc_json_parser_match_constant@@Base+0x29b>
  40d32c:	jmp    40d331 <flatcc_json_parser_match_constant@@Base+0x261>
  40d331:	mov    eax,DWORD PTR [rbp-0x48]
  40d334:	sub    eax,0x5c
  40d337:	jne    40d3a1 <flatcc_json_parser_match_constant@@Base+0x2d1>
  40d33d:	jmp    40d342 <flatcc_json_parser_match_constant@@Base+0x272>
  40d342:	mov    rax,QWORD PTR [rbp-0x30]
  40d346:	mov    DWORD PTR [rax],0x0
  40d34c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d350:	mov    rsi,QWORD PTR [rbp-0x18]
  40d354:	mov    rdx,QWORD PTR [rbp-0x20]
  40d358:	mov    ecx,0x12
  40d35d:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d362:	mov    QWORD PTR [rbp-0x8],rax
  40d366:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d36b:	xor    eax,eax
  40d36d:	mov    edx,eax
  40d36f:	mov    rdi,QWORD PTR [rbp-0x10]
  40d373:	mov    rcx,QWORD PTR [rbp-0x18]
  40d377:	add    rcx,0x1
  40d37e:	mov    rsi,rcx
  40d381:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d386:	mov    QWORD PTR [rbp-0x18],rax
  40d38a:	mov    rax,QWORD PTR [rbp-0x30]
  40d38e:	mov    DWORD PTR [rax],0x0
  40d394:	mov    rax,QWORD PTR [rbp-0x18]
  40d398:	mov    QWORD PTR [rbp-0x8],rax
  40d39c:	jmp    40d3b3 <flatcc_json_parser_match_constant@@Base+0x2e3>
  40d3a1:	mov    rax,QWORD PTR [rbp-0x30]
  40d3a5:	mov    DWORD PTR [rax],0x0
  40d3ab:	mov    rax,QWORD PTR [rbp-0x38]
  40d3af:	mov    QWORD PTR [rbp-0x8],rax
  40d3b3:	mov    rax,QWORD PTR [rbp-0x8]
  40d3b7:	add    rsp,0x50
  40d3bb:	pop    rbp
  40d3bc:	ret    
  40d3bd:	nop    DWORD PTR [rax]

000000000040d3c0 <flatcc_json_parser_unmatched_symbol@@Base>:
  40d3c0:	push   rbp
  40d3c1:	mov    rbp,rsp
  40d3c4:	sub    rsp,0x20
  40d3c8:	mov    QWORD PTR [rbp-0x10],rdi
  40d3cc:	mov    QWORD PTR [rbp-0x18],rsi
  40d3d0:	mov    QWORD PTR [rbp-0x20],rdx
  40d3d4:	mov    rax,QWORD PTR [rbp-0x10]
  40d3d8:	mov    ecx,DWORD PTR [rax+0x10]
  40d3db:	and    ecx,0x1
  40d3de:	cmp    ecx,0x0
  40d3e1:	je     40d490 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  40d3e7:	mov    rdi,QWORD PTR [rbp-0x10]
  40d3eb:	mov    rsi,QWORD PTR [rbp-0x18]
  40d3ef:	mov    rdx,QWORD PTR [rbp-0x20]
  40d3f3:	call   40d4c0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
  40d3f8:	mov    QWORD PTR [rbp-0x18],rax
  40d3fc:	mov    rdi,QWORD PTR [rbp-0x10]
  40d400:	mov    rsi,QWORD PTR [rbp-0x18]
  40d404:	mov    rdx,QWORD PTR [rbp-0x20]
  40d408:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d40d:	mov    QWORD PTR [rbp-0x18],rax
  40d411:	mov    rax,QWORD PTR [rbp-0x18]
  40d415:	cmp    rax,QWORD PTR [rbp-0x20]
  40d419:	je     40d457 <flatcc_json_parser_unmatched_symbol@@Base+0x97>
  40d41f:	mov    rax,QWORD PTR [rbp-0x18]
  40d423:	movsx  ecx,BYTE PTR [rax]
  40d426:	cmp    ecx,0x3a
  40d429:	jne    40d457 <flatcc_json_parser_unmatched_symbol@@Base+0x97>
  40d42f:	mov    rax,QWORD PTR [rbp-0x18]
  40d433:	add    rax,0x1
  40d439:	mov    QWORD PTR [rbp-0x18],rax
  40d43d:	mov    rdi,QWORD PTR [rbp-0x10]
  40d441:	mov    rsi,QWORD PTR [rbp-0x18]
  40d445:	mov    rdx,QWORD PTR [rbp-0x20]
  40d449:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d44e:	mov    QWORD PTR [rbp-0x18],rax
  40d452:	jmp    40d476 <flatcc_json_parser_unmatched_symbol@@Base+0xb6>
  40d457:	mov    rdi,QWORD PTR [rbp-0x10]
  40d45b:	mov    rsi,QWORD PTR [rbp-0x18]
  40d45f:	mov    rdx,QWORD PTR [rbp-0x20]
  40d463:	mov    ecx,0x4
  40d468:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d46d:	mov    QWORD PTR [rbp-0x8],rax
  40d471:	jmp    40d4aa <flatcc_json_parser_unmatched_symbol@@Base+0xea>
  40d476:	mov    rdi,QWORD PTR [rbp-0x10]
  40d47a:	mov    rsi,QWORD PTR [rbp-0x18]
  40d47e:	mov    rdx,QWORD PTR [rbp-0x20]
  40d482:	call   40d6d0 <flatcc_json_parser_generic_json@@Base>
  40d487:	mov    QWORD PTR [rbp-0x8],rax
  40d48b:	jmp    40d4aa <flatcc_json_parser_unmatched_symbol@@Base+0xea>
  40d490:	mov    rdi,QWORD PTR [rbp-0x10]
  40d494:	mov    rsi,QWORD PTR [rbp-0x18]
  40d498:	mov    rdx,QWORD PTR [rbp-0x20]
  40d49c:	mov    ecx,0xd
  40d4a1:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d4a6:	mov    QWORD PTR [rbp-0x8],rax
  40d4aa:	mov    rax,QWORD PTR [rbp-0x8]
  40d4ae:	add    rsp,0x20
  40d4b2:	pop    rbp
  40d4b3:	ret    
  40d4b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4be:	xchg   ax,ax
  40d4c0:	push   rbp
  40d4c1:	mov    rbp,rsp
  40d4c4:	sub    rsp,0x30
  40d4c8:	mov    QWORD PTR [rbp-0x10],rdi
  40d4cc:	mov    QWORD PTR [rbp-0x18],rsi
  40d4d0:	mov    QWORD PTR [rbp-0x20],rdx
  40d4d4:	mov    BYTE PTR [rbp-0x22],0x0
  40d4d8:	mov    rax,QWORD PTR [rbp-0x10]
  40d4dc:	cmp    DWORD PTR [rax+0x14],0x0
  40d4e0:	je     40d5f0 <flatcc_json_parser_unmatched_symbol@@Base+0x230>
  40d4e6:	jmp    40d4eb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d4eb:	xor    eax,eax
  40d4ed:	mov    rcx,QWORD PTR [rbp-0x18]
  40d4f1:	cmp    rcx,QWORD PTR [rbp-0x20]
  40d4f5:	mov    BYTE PTR [rbp-0x23],al
  40d4f8:	je     40d50e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  40d4fe:	mov    rax,QWORD PTR [rbp-0x18]
  40d502:	movsx  ecx,BYTE PTR [rax]
  40d505:	cmp    ecx,0x20
  40d508:	setg   dl
  40d50b:	mov    BYTE PTR [rbp-0x23],dl
  40d50e:	mov    al,BYTE PTR [rbp-0x23]
  40d511:	test   al,0x1
  40d513:	jne    40d51e <flatcc_json_parser_unmatched_symbol@@Base+0x15e>
  40d519:	jmp    40d5bf <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  40d51e:	mov    rax,QWORD PTR [rbp-0x18]
  40d522:	mov    cl,BYTE PTR [rax]
  40d524:	mov    BYTE PTR [rbp-0x21],cl
  40d527:	mov    BYTE PTR [rbp-0x22],cl
  40d52a:	movsx  edx,BYTE PTR [rbp-0x21]
  40d52e:	cmp    edx,0x5f
  40d531:	je     40d570 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
  40d537:	movsx  eax,BYTE PTR [rbp-0x21]
  40d53b:	cmp    eax,0x2e
  40d53e:	je     40d570 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
  40d544:	movsx  eax,BYTE PTR [rbp-0x21]
  40d548:	and    eax,0x80
  40d54d:	cmp    eax,0x0
  40d550:	jne    40d570 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
  40d556:	movsx  eax,BYTE PTR [rbp-0x21]
  40d55a:	cmp    eax,0x30
  40d55d:	jl     40d583 <flatcc_json_parser_unmatched_symbol@@Base+0x1c3>
  40d563:	movsx  eax,BYTE PTR [rbp-0x21]
  40d567:	cmp    eax,0x39
  40d56a:	jg     40d583 <flatcc_json_parser_unmatched_symbol@@Base+0x1c3>
  40d570:	mov    rax,QWORD PTR [rbp-0x18]
  40d574:	add    rax,0x1
  40d57a:	mov    QWORD PTR [rbp-0x18],rax
  40d57e:	jmp    40d4eb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d583:	movsx  eax,BYTE PTR [rbp-0x21]
  40d587:	or     eax,0x20
  40d58a:	mov    BYTE PTR [rbp-0x21],al
  40d58d:	movsx  ecx,BYTE PTR [rbp-0x21]
  40d591:	cmp    ecx,0x61
  40d594:	jl     40d5ba <flatcc_json_parser_unmatched_symbol@@Base+0x1fa>
  40d59a:	movsx  eax,BYTE PTR [rbp-0x21]
  40d59e:	cmp    eax,0x7a
  40d5a1:	jg     40d5ba <flatcc_json_parser_unmatched_symbol@@Base+0x1fa>
  40d5a7:	mov    rax,QWORD PTR [rbp-0x18]
  40d5ab:	add    rax,0x1
  40d5b1:	mov    QWORD PTR [rbp-0x18],rax
  40d5b5:	jmp    40d4eb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d5ba:	jmp    40d5bf <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  40d5bf:	movsx  eax,BYTE PTR [rbp-0x22]
  40d5c3:	cmp    eax,0x2e
  40d5c6:	jne    40d5eb <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  40d5cc:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5d0:	mov    rsi,QWORD PTR [rbp-0x18]
  40d5d4:	mov    rdx,QWORD PTR [rbp-0x20]
  40d5d8:	mov    ecx,0x5
  40d5dd:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d5e2:	mov    QWORD PTR [rbp-0x8],rax
  40d5e6:	jmp    40d6c6 <flatcc_json_parser_unmatched_symbol@@Base+0x306>
  40d5eb:	jmp    40d6be <flatcc_json_parser_unmatched_symbol@@Base+0x2fe>
  40d5f0:	jmp    40d5f5 <flatcc_json_parser_unmatched_symbol@@Base+0x235>
  40d5f5:	xor    eax,eax
  40d5f7:	mov    rcx,QWORD PTR [rbp-0x18]
  40d5fb:	cmp    rcx,QWORD PTR [rbp-0x20]
  40d5ff:	mov    BYTE PTR [rbp-0x24],al
  40d602:	je     40d618 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
  40d608:	mov    rax,QWORD PTR [rbp-0x18]
  40d60c:	movsx  ecx,BYTE PTR [rax]
  40d60f:	cmp    ecx,0x22
  40d612:	setne  dl
  40d615:	mov    BYTE PTR [rbp-0x24],dl
  40d618:	mov    al,BYTE PTR [rbp-0x24]
  40d61b:	test   al,0x1
  40d61d:	jne    40d628 <flatcc_json_parser_unmatched_symbol@@Base+0x268>
  40d623:	jmp    40d673 <flatcc_json_parser_unmatched_symbol@@Base+0x2b3>
  40d628:	mov    rax,QWORD PTR [rbp-0x18]
  40d62c:	movsx  ecx,BYTE PTR [rax]
  40d62f:	cmp    ecx,0x5c
  40d632:	jne    40d660 <flatcc_json_parser_unmatched_symbol@@Base+0x2a0>
  40d638:	mov    rax,QWORD PTR [rbp-0x20]
  40d63c:	mov    rcx,QWORD PTR [rbp-0x18]
  40d640:	sub    rax,rcx
  40d643:	cmp    rax,0x2
  40d647:	jge    40d652 <flatcc_json_parser_unmatched_symbol@@Base+0x292>
  40d64d:	jmp    40d673 <flatcc_json_parser_unmatched_symbol@@Base+0x2b3>
  40d652:	mov    rax,QWORD PTR [rbp-0x18]
  40d656:	add    rax,0x1
  40d65c:	mov    QWORD PTR [rbp-0x18],rax
  40d660:	mov    rax,QWORD PTR [rbp-0x18]
  40d664:	add    rax,0x1
  40d66a:	mov    QWORD PTR [rbp-0x18],rax
  40d66e:	jmp    40d5f5 <flatcc_json_parser_unmatched_symbol@@Base+0x235>
  40d673:	mov    rax,QWORD PTR [rbp-0x18]
  40d677:	cmp    rax,QWORD PTR [rbp-0x20]
  40d67b:	je     40d691 <flatcc_json_parser_unmatched_symbol@@Base+0x2d1>
  40d681:	mov    rax,QWORD PTR [rbp-0x18]
  40d685:	movsx  ecx,BYTE PTR [rax]
  40d688:	cmp    ecx,0x22
  40d68b:	je     40d6b0 <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
  40d691:	mov    rdi,QWORD PTR [rbp-0x10]
  40d695:	mov    rsi,QWORD PTR [rbp-0x18]
  40d699:	mov    rdx,QWORD PTR [rbp-0x20]
  40d69d:	mov    ecx,0x14
  40d6a2:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d6a7:	mov    QWORD PTR [rbp-0x8],rax
  40d6ab:	jmp    40d6c6 <flatcc_json_parser_unmatched_symbol@@Base+0x306>
  40d6b0:	mov    rax,QWORD PTR [rbp-0x18]
  40d6b4:	add    rax,0x1
  40d6ba:	mov    QWORD PTR [rbp-0x18],rax
  40d6be:	mov    rax,QWORD PTR [rbp-0x18]
  40d6c2:	mov    QWORD PTR [rbp-0x8],rax
  40d6c6:	mov    rax,QWORD PTR [rbp-0x8]
  40d6ca:	add    rsp,0x30
  40d6ce:	pop    rbp
  40d6cf:	ret    

000000000040d6d0 <flatcc_json_parser_generic_json@@Base>:
  40d6d0:	push   rbp
  40d6d1:	mov    rbp,rsp
  40d6d4:	sub    rsp,0x250
  40d6db:	lea    rax,[rbp-0x220]
  40d6e2:	mov    QWORD PTR [rbp-0x10],rdi
  40d6e6:	mov    QWORD PTR [rbp-0x18],rsi
  40d6ea:	mov    QWORD PTR [rbp-0x20],rdx
  40d6ee:	mov    DWORD PTR [rbp-0x240],0x0
  40d6f8:	mov    QWORD PTR [rbp-0x228],rax
  40d6ff:	mov    rax,QWORD PTR [rbp-0x228]
  40d706:	add    rax,0x200
  40d70c:	mov    QWORD PTR [rbp-0x230],rax
  40d713:	mov    rax,QWORD PTR [rbp-0x18]
  40d717:	cmp    rax,QWORD PTR [rbp-0x20]
  40d71b:	jne    40d72e <flatcc_json_parser_generic_json@@Base+0x5e>
  40d721:	mov    rax,QWORD PTR [rbp-0x18]
  40d725:	mov    QWORD PTR [rbp-0x8],rax
  40d729:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40d72e:	lea    rax,[rbp-0x220]
  40d735:	mov    rcx,QWORD PTR [rbp-0x228]
  40d73c:	cmp    rcx,rax
  40d73f:	je     40d812 <flatcc_json_parser_generic_json@@Base+0x142>
  40d745:	mov    rax,QWORD PTR [rbp-0x228]
  40d74c:	movsx  ecx,BYTE PTR [rax-0x1]
  40d750:	cmp    ecx,0x7d
  40d753:	jne    40d812 <flatcc_json_parser_generic_json@@Base+0x142>
  40d759:	mov    rdi,QWORD PTR [rbp-0x10]
  40d75d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d761:	mov    rdx,QWORD PTR [rbp-0x20]
  40d765:	call   40e080 <flatcc_json_parser_float@@Base+0x2b0>
  40d76a:	mov    QWORD PTR [rbp-0x18],rax
  40d76e:	mov    rdi,QWORD PTR [rbp-0x10]
  40d772:	mov    rsi,QWORD PTR [rbp-0x18]
  40d776:	mov    rdx,QWORD PTR [rbp-0x20]
  40d77a:	call   40d4c0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
  40d77f:	mov    QWORD PTR [rbp-0x18],rax
  40d783:	mov    rdi,QWORD PTR [rbp-0x10]
  40d787:	mov    rsi,QWORD PTR [rbp-0x18]
  40d78b:	mov    rdx,QWORD PTR [rbp-0x20]
  40d78f:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d794:	mov    QWORD PTR [rbp-0x18],rax
  40d798:	mov    rax,QWORD PTR [rbp-0x18]
  40d79c:	cmp    rax,QWORD PTR [rbp-0x20]
  40d7a0:	jne    40d7c5 <flatcc_json_parser_generic_json@@Base+0xf5>
  40d7a6:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7aa:	mov    rsi,QWORD PTR [rbp-0x18]
  40d7ae:	mov    rdx,QWORD PTR [rbp-0x20]
  40d7b2:	mov    ecx,0xa
  40d7b7:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d7bc:	mov    QWORD PTR [rbp-0x8],rax
  40d7c0:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40d7c5:	mov    rax,QWORD PTR [rbp-0x18]
  40d7c9:	movsx  ecx,BYTE PTR [rax]
  40d7cc:	cmp    ecx,0x3a
  40d7cf:	je     40d7f4 <flatcc_json_parser_generic_json@@Base+0x124>
  40d7d5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7d9:	mov    rsi,QWORD PTR [rbp-0x18]
  40d7dd:	mov    rdx,QWORD PTR [rbp-0x20]
  40d7e1:	mov    ecx,0x4
  40d7e6:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d7eb:	mov    QWORD PTR [rbp-0x8],rax
  40d7ef:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40d7f4:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7f8:	mov    rax,QWORD PTR [rbp-0x18]
  40d7fc:	add    rax,0x1
  40d802:	mov    rdx,QWORD PTR [rbp-0x20]
  40d806:	mov    rsi,rax
  40d809:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d80e:	mov    QWORD PTR [rbp-0x18],rax
  40d812:	mov    rax,QWORD PTR [rbp-0x18]
  40d816:	movsx  ecx,BYTE PTR [rax]
  40d819:	add    ecx,0xffffffde
  40d81c:	mov    eax,ecx
  40d81e:	sub    ecx,0x59
  40d821:	mov    QWORD PTR [rbp-0x248],rax
  40d828:	ja     40da4b <flatcc_json_parser_generic_json@@Base+0x37b>
  40d82e:	lea    rax,[rip+0x61f3]        # 413a28 <flatcc_builder_padding_base@@Base+0x16b8>
  40d835:	mov    rcx,QWORD PTR [rbp-0x248]
  40d83c:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40d840:	add    rdx,rax
  40d843:	jmp    rdx
  40d845:	mov    rdi,QWORD PTR [rbp-0x10]
  40d849:	mov    rsi,QWORD PTR [rbp-0x18]
  40d84d:	mov    rdx,QWORD PTR [rbp-0x20]
  40d851:	call   40e130 <flatcc_json_parser_float@@Base+0x360>
  40d856:	mov    QWORD PTR [rbp-0x18],rax
  40d85a:	xor    eax,eax
  40d85c:	mov    rcx,QWORD PTR [rbp-0x18]
  40d860:	cmp    rcx,QWORD PTR [rbp-0x20]
  40d864:	mov    BYTE PTR [rbp-0x249],al
  40d86a:	je     40d883 <flatcc_json_parser_generic_json@@Base+0x1b3>
  40d870:	mov    rax,QWORD PTR [rbp-0x18]
  40d874:	movsx  ecx,BYTE PTR [rax]
  40d877:	cmp    ecx,0x22
  40d87a:	setne  dl
  40d87d:	mov    BYTE PTR [rbp-0x249],dl
  40d883:	mov    al,BYTE PTR [rbp-0x249]
  40d889:	test   al,0x1
  40d88b:	jne    40d896 <flatcc_json_parser_generic_json@@Base+0x1c6>
  40d891:	jmp    40d8ef <flatcc_json_parser_generic_json@@Base+0x21f>
  40d896:	mov    rdi,QWORD PTR [rbp-0x10]
  40d89a:	mov    rsi,QWORD PTR [rbp-0x18]
  40d89e:	mov    rdx,QWORD PTR [rbp-0x20]
  40d8a2:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  40d8a7:	mov    QWORD PTR [rbp-0x18],rax
  40d8ab:	mov    rax,QWORD PTR [rbp-0x18]
  40d8af:	cmp    rax,QWORD PTR [rbp-0x20]
  40d8b3:	je     40d8ce <flatcc_json_parser_generic_json@@Base+0x1fe>
  40d8b9:	mov    rax,QWORD PTR [rbp-0x18]
  40d8bd:	movsx  ecx,BYTE PTR [rax]
  40d8c0:	cmp    ecx,0x22
  40d8c3:	jne    40d8ce <flatcc_json_parser_generic_json@@Base+0x1fe>
  40d8c9:	jmp    40d8ef <flatcc_json_parser_generic_json@@Base+0x21f>
  40d8ce:	lea    rcx,[rbp-0x23c]
  40d8d5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8d9:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8dd:	mov    rdx,QWORD PTR [rbp-0x20]
  40d8e1:	call   40c7c0 <flatcc_json_parser_string_escape@@Base>
  40d8e6:	mov    QWORD PTR [rbp-0x18],rax
  40d8ea:	jmp    40d85a <flatcc_json_parser_generic_json@@Base+0x18a>
  40d8ef:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8f3:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8f7:	mov    rdx,QWORD PTR [rbp-0x20]
  40d8fb:	call   40e1a0 <flatcc_json_parser_float@@Base+0x3d0>
  40d900:	mov    QWORD PTR [rbp-0x18],rax
  40d904:	jmp    40da9f <flatcc_json_parser_generic_json@@Base+0x3cf>
  40d909:	mov    rdi,QWORD PTR [rbp-0x10]
  40d90d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d911:	mov    rdx,QWORD PTR [rbp-0x20]
  40d915:	call   40e210 <flatcc_json_parser_float@@Base+0x440>
  40d91a:	mov    QWORD PTR [rbp-0x18],rax
  40d91e:	jmp    40da9f <flatcc_json_parser_generic_json@@Base+0x3cf>
  40d923:	mov    rax,QWORD PTR [rbp-0x228]
  40d92a:	cmp    rax,QWORD PTR [rbp-0x230]
  40d931:	jne    40d956 <flatcc_json_parser_generic_json@@Base+0x286>
  40d937:	mov    rdi,QWORD PTR [rbp-0x10]
  40d93b:	mov    rsi,QWORD PTR [rbp-0x18]
  40d93f:	mov    rdx,QWORD PTR [rbp-0x20]
  40d943:	mov    ecx,0x2
  40d948:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d94d:	mov    QWORD PTR [rbp-0x8],rax
  40d951:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40d956:	mov    rax,QWORD PTR [rbp-0x228]
  40d95d:	mov    rcx,rax
  40d960:	add    rcx,0x1
  40d967:	mov    QWORD PTR [rbp-0x228],rcx
  40d96e:	mov    BYTE PTR [rax],0x5d
  40d971:	mov    rdi,QWORD PTR [rbp-0x10]
  40d975:	mov    rax,QWORD PTR [rbp-0x18]
  40d979:	add    rax,0x1
  40d97f:	mov    rdx,QWORD PTR [rbp-0x20]
  40d983:	mov    rsi,rax
  40d986:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d98b:	mov    QWORD PTR [rbp-0x18],rax
  40d98f:	mov    rax,QWORD PTR [rbp-0x18]
  40d993:	cmp    rax,QWORD PTR [rbp-0x20]
  40d997:	je     40d9b2 <flatcc_json_parser_generic_json@@Base+0x2e2>
  40d99d:	mov    rax,QWORD PTR [rbp-0x18]
  40d9a1:	movsx  ecx,BYTE PTR [rax]
  40d9a4:	cmp    ecx,0x5d
  40d9a7:	jne    40d9b2 <flatcc_json_parser_generic_json@@Base+0x2e2>
  40d9ad:	jmp    40da9f <flatcc_json_parser_generic_json@@Base+0x3cf>
  40d9b2:	jmp    40d713 <flatcc_json_parser_generic_json@@Base+0x43>
  40d9b7:	mov    rax,QWORD PTR [rbp-0x228]
  40d9be:	cmp    rax,QWORD PTR [rbp-0x230]
  40d9c5:	jne    40d9ea <flatcc_json_parser_generic_json@@Base+0x31a>
  40d9cb:	mov    rdi,QWORD PTR [rbp-0x10]
  40d9cf:	mov    rsi,QWORD PTR [rbp-0x18]
  40d9d3:	mov    rdx,QWORD PTR [rbp-0x20]
  40d9d7:	mov    ecx,0x2
  40d9dc:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40d9e1:	mov    QWORD PTR [rbp-0x8],rax
  40d9e5:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40d9ea:	mov    rax,QWORD PTR [rbp-0x228]
  40d9f1:	mov    rcx,rax
  40d9f4:	add    rcx,0x1
  40d9fb:	mov    QWORD PTR [rbp-0x228],rcx
  40da02:	mov    BYTE PTR [rax],0x7d
  40da05:	mov    rdi,QWORD PTR [rbp-0x10]
  40da09:	mov    rax,QWORD PTR [rbp-0x18]
  40da0d:	add    rax,0x1
  40da13:	mov    rdx,QWORD PTR [rbp-0x20]
  40da17:	mov    rsi,rax
  40da1a:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40da1f:	mov    QWORD PTR [rbp-0x18],rax
  40da23:	mov    rax,QWORD PTR [rbp-0x18]
  40da27:	cmp    rax,QWORD PTR [rbp-0x20]
  40da2b:	je     40da46 <flatcc_json_parser_generic_json@@Base+0x376>
  40da31:	mov    rax,QWORD PTR [rbp-0x18]
  40da35:	movsx  ecx,BYTE PTR [rax]
  40da38:	cmp    ecx,0x7d
  40da3b:	jne    40da46 <flatcc_json_parser_generic_json@@Base+0x376>
  40da41:	jmp    40da9f <flatcc_json_parser_generic_json@@Base+0x3cf>
  40da46:	jmp    40d713 <flatcc_json_parser_generic_json@@Base+0x43>
  40da4b:	mov    rdi,QWORD PTR [rbp-0x10]
  40da4f:	mov    rax,QWORD PTR [rbp-0x18]
  40da53:	mov    QWORD PTR [rbp-0x238],rax
  40da5a:	mov    rdx,QWORD PTR [rbp-0x20]
  40da5e:	mov    rsi,rax
  40da61:	call   40cf20 <flatcc_json_parser_skip_constant@@Base>
  40da66:	mov    QWORD PTR [rbp-0x18],rax
  40da6a:	mov    rax,QWORD PTR [rbp-0x238]
  40da71:	cmp    rax,QWORD PTR [rbp-0x18]
  40da75:	jne    40da9a <flatcc_json_parser_generic_json@@Base+0x3ca>
  40da7b:	mov    rdi,QWORD PTR [rbp-0x10]
  40da7f:	mov    rsi,QWORD PTR [rbp-0x18]
  40da83:	mov    rdx,QWORD PTR [rbp-0x20]
  40da87:	mov    ecx,0x5
  40da8c:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40da91:	mov    QWORD PTR [rbp-0x8],rax
  40da95:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40da9a:	jmp    40da9f <flatcc_json_parser_generic_json@@Base+0x3cf>
  40da9f:	jmp    40daa4 <flatcc_json_parser_generic_json@@Base+0x3d4>
  40daa4:	xor    eax,eax
  40daa6:	mov    rcx,QWORD PTR [rbp-0x18]
  40daaa:	cmp    rcx,QWORD PTR [rbp-0x20]
  40daae:	mov    BYTE PTR [rbp-0x24a],al
  40dab4:	je     40dad4 <flatcc_json_parser_generic_json@@Base+0x404>
  40daba:	lea    rax,[rbp-0x220]
  40dac1:	mov    rcx,QWORD PTR [rbp-0x228]
  40dac8:	cmp    rcx,rax
  40dacb:	setne  dl
  40dace:	mov    BYTE PTR [rbp-0x24a],dl
  40dad4:	mov    al,BYTE PTR [rbp-0x24a]
  40dada:	test   al,0x1
  40dadc:	jne    40dae7 <flatcc_json_parser_generic_json@@Base+0x417>
  40dae2:	jmp    40db76 <flatcc_json_parser_generic_json@@Base+0x4a6>
  40dae7:	mov    rax,QWORD PTR [rbp-0x228]
  40daee:	add    rax,0xffffffffffffffff
  40daf4:	mov    QWORD PTR [rbp-0x228],rax
  40dafb:	mov    rax,QWORD PTR [rbp-0x228]
  40db02:	movsx  ecx,BYTE PTR [rax]
  40db05:	cmp    ecx,0x5d
  40db08:	jne    40db2f <flatcc_json_parser_generic_json@@Base+0x45f>
  40db0e:	mov    rdi,QWORD PTR [rbp-0x10]
  40db12:	mov    rsi,QWORD PTR [rbp-0x18]
  40db16:	mov    rdx,QWORD PTR [rbp-0x20]
  40db1a:	lea    rcx,[rbp-0x240]
  40db21:	call   40e660 <flatcc_json_parser_float@@Base+0x890>
  40db26:	mov    QWORD PTR [rbp-0x18],rax
  40db2a:	jmp    40db4b <flatcc_json_parser_generic_json@@Base+0x47b>
  40db2f:	mov    rdi,QWORD PTR [rbp-0x10]
  40db33:	mov    rsi,QWORD PTR [rbp-0x18]
  40db37:	mov    rdx,QWORD PTR [rbp-0x20]
  40db3b:	lea    rcx,[rbp-0x240]
  40db42:	call   40e7d0 <flatcc_json_parser_float@@Base+0xa00>
  40db47:	mov    QWORD PTR [rbp-0x18],rax
  40db4b:	cmp    DWORD PTR [rbp-0x240],0x0
  40db52:	je     40db71 <flatcc_json_parser_generic_json@@Base+0x4a1>
  40db58:	mov    rax,QWORD PTR [rbp-0x228]
  40db5f:	add    rax,0x1
  40db65:	mov    QWORD PTR [rbp-0x228],rax
  40db6c:	jmp    40d713 <flatcc_json_parser_generic_json@@Base+0x43>
  40db71:	jmp    40daa4 <flatcc_json_parser_generic_json@@Base+0x3d4>
  40db76:	mov    rax,QWORD PTR [rbp-0x18]
  40db7a:	cmp    rax,QWORD PTR [rbp-0x20]
  40db7e:	jne    40dbd5 <flatcc_json_parser_generic_json@@Base+0x505>
  40db84:	lea    rax,[rbp-0x220]
  40db8b:	mov    rcx,QWORD PTR [rbp-0x228]
  40db92:	cmp    rcx,rax
  40db95:	je     40dbd5 <flatcc_json_parser_generic_json@@Base+0x505>
  40db9b:	mov    rdi,QWORD PTR [rbp-0x10]
  40db9f:	mov    rsi,QWORD PTR [rbp-0x18]
  40dba3:	mov    rdx,QWORD PTR [rbp-0x20]
  40dba7:	mov    rax,QWORD PTR [rbp-0x228]
  40dbae:	movsx  ecx,BYTE PTR [rax-0x1]
  40dbb2:	cmp    ecx,0x5d
  40dbb5:	mov    ecx,0x9
  40dbba:	mov    r8d,0xa
  40dbc0:	cmove  r8d,ecx
  40dbc4:	mov    ecx,r8d
  40dbc7:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40dbcc:	mov    QWORD PTR [rbp-0x8],rax
  40dbd0:	jmp    40dbdd <flatcc_json_parser_generic_json@@Base+0x50d>
  40dbd5:	mov    rax,QWORD PTR [rbp-0x18]
  40dbd9:	mov    QWORD PTR [rbp-0x8],rax
  40dbdd:	mov    rax,QWORD PTR [rbp-0x8]
  40dbe1:	add    rsp,0x250
  40dbe8:	pop    rbp
  40dbe9:	ret    
  40dbea:	nop    WORD PTR [rax+rax*1+0x0]

000000000040dbf0 <flatcc_json_parser_double@@Base>:
  40dbf0:	push   rbp
  40dbf1:	mov    rbp,rsp
  40dbf4:	sub    rsp,0x40
  40dbf8:	mov    QWORD PTR [rbp-0x10],rdi
  40dbfc:	mov    QWORD PTR [rbp-0x18],rsi
  40dc00:	mov    QWORD PTR [rbp-0x20],rdx
  40dc04:	mov    QWORD PTR [rbp-0x28],rcx
  40dc08:	mov    rax,QWORD PTR [rbp-0x28]
  40dc0c:	vxorps xmm0,xmm0,xmm0
  40dc10:	vmovsd QWORD PTR [rax],xmm0
  40dc14:	mov    rax,QWORD PTR [rbp-0x18]
  40dc18:	cmp    rax,QWORD PTR [rbp-0x20]
  40dc1c:	jne    40dc2f <flatcc_json_parser_double@@Base+0x3f>
  40dc22:	mov    rax,QWORD PTR [rbp-0x18]
  40dc26:	mov    QWORD PTR [rbp-0x8],rax
  40dc2a:	jmp    40dd8a <flatcc_json_parser_double@@Base+0x19a>
  40dc2f:	mov    rax,QWORD PTR [rbp-0x18]
  40dc33:	mov    QWORD PTR [rbp-0x38],rax
  40dc37:	mov    rax,QWORD PTR [rbp-0x18]
  40dc3b:	movsx  ecx,BYTE PTR [rax]
  40dc3e:	cmp    ecx,0x2d
  40dc41:	jne    40dc55 <flatcc_json_parser_double@@Base+0x65>
  40dc47:	mov    rax,QWORD PTR [rbp-0x38]
  40dc4b:	add    rax,0x1
  40dc51:	mov    QWORD PTR [rbp-0x38],rax
  40dc55:	mov    rax,QWORD PTR [rbp-0x20]
  40dc59:	mov    rcx,QWORD PTR [rbp-0x38]
  40dc5d:	sub    rax,rcx
  40dc60:	cmp    rax,0x1
  40dc64:	jle    40dcba <flatcc_json_parser_double@@Base+0xca>
  40dc6a:	mov    rax,QWORD PTR [rbp-0x38]
  40dc6e:	movsx  ecx,BYTE PTR [rax]
  40dc71:	cmp    ecx,0x2e
  40dc74:	je     40dc9b <flatcc_json_parser_double@@Base+0xab>
  40dc7a:	mov    rax,QWORD PTR [rbp-0x38]
  40dc7e:	movsx  ecx,BYTE PTR [rax]
  40dc81:	cmp    ecx,0x30
  40dc84:	jne    40dcba <flatcc_json_parser_double@@Base+0xca>
  40dc8a:	mov    rax,QWORD PTR [rbp-0x38]
  40dc8e:	movsx  ecx,BYTE PTR [rax+0x1]
  40dc92:	cmp    ecx,0x30
  40dc95:	jne    40dcba <flatcc_json_parser_double@@Base+0xca>
  40dc9b:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc9f:	mov    rsi,QWORD PTR [rbp-0x18]
  40dca3:	mov    rdx,QWORD PTR [rbp-0x20]
  40dca7:	mov    ecx,0x6
  40dcac:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40dcb1:	mov    QWORD PTR [rbp-0x8],rax
  40dcb5:	jmp    40dd8a <flatcc_json_parser_double@@Base+0x19a>
  40dcba:	mov    rdi,QWORD PTR [rbp-0x18]
  40dcbe:	mov    rax,QWORD PTR [rbp-0x20]
  40dcc2:	mov    rcx,QWORD PTR [rbp-0x18]
  40dcc6:	sub    rax,rcx
  40dcc9:	mov    rdx,QWORD PTR [rbp-0x28]
  40dccd:	mov    esi,eax
  40dccf:	call   40dda0 <flatcc_json_parser_double@@Base+0x1b0>
  40dcd4:	mov    QWORD PTR [rbp-0x30],rax
  40dcd8:	cmp    QWORD PTR [rbp-0x30],0x0
  40dcdd:	je     40dcf1 <flatcc_json_parser_double@@Base+0x101>
  40dce3:	mov    rax,QWORD PTR [rbp-0x30]
  40dce7:	cmp    rax,QWORD PTR [rbp-0x18]
  40dceb:	jne    40dd82 <flatcc_json_parser_double@@Base+0x192>
  40dcf1:	vmovsd xmm0,QWORD PTR [rip+0x68d7]        # 4145d0 <flatcc_builder_padding_base@@Base+0x2260>
  40dcf9:	xor    eax,eax
  40dcfb:	mov    rcx,QWORD PTR [rbp-0x28]
  40dcff:	vmovsd xmm1,QWORD PTR [rcx]
  40dd03:	vmovaps xmm2,xmm1
  40dd07:	vmovdqa xmm3,XMMWORD PTR [rip+0x6981]        # 414690 <flatcc_builder_padding_base@@Base+0x2320>
  40dd0f:	vpand  xmm2,xmm2,xmm3
  40dd13:	vmovq  rcx,xmm1
  40dd18:	cmp    rcx,0x0
  40dd1c:	mov    edx,0xffffffff
  40dd21:	mov    esi,0x1
  40dd26:	cmovl  esi,edx
  40dd29:	vucomisd xmm2,xmm0
  40dd2d:	setnp  dil
  40dd31:	sete   r8b
  40dd35:	test   r8b,dil
  40dd38:	cmovne eax,esi
  40dd3b:	cmp    eax,0x0
  40dd3e:	je     40dd63 <flatcc_json_parser_double@@Base+0x173>
  40dd44:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd48:	mov    rsi,QWORD PTR [rbp-0x18]
  40dd4c:	mov    rdx,QWORD PTR [rbp-0x20]
  40dd50:	mov    ecx,0x7
  40dd55:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40dd5a:	mov    QWORD PTR [rbp-0x8],rax
  40dd5e:	jmp    40dd8a <flatcc_json_parser_double@@Base+0x19a>
  40dd63:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd67:	mov    rsi,QWORD PTR [rbp-0x18]
  40dd6b:	mov    rdx,QWORD PTR [rbp-0x20]
  40dd6f:	mov    ecx,0x6
  40dd74:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40dd79:	mov    QWORD PTR [rbp-0x8],rax
  40dd7d:	jmp    40dd8a <flatcc_json_parser_double@@Base+0x19a>
  40dd82:	mov    rax,QWORD PTR [rbp-0x30]
  40dd86:	mov    QWORD PTR [rbp-0x8],rax
  40dd8a:	mov    rax,QWORD PTR [rbp-0x8]
  40dd8e:	add    rsp,0x40
  40dd92:	pop    rbp
  40dd93:	ret    
  40dd94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd9e:	xchg   ax,ax
  40dda0:	push   rbp
  40dda1:	mov    rbp,rsp
  40dda4:	sub    rsp,0x20
  40dda8:	mov    QWORD PTR [rbp-0x8],rdi
  40ddac:	mov    DWORD PTR [rbp-0xc],esi
  40ddaf:	mov    QWORD PTR [rbp-0x18],rdx
  40ddb3:	mov    rdi,QWORD PTR [rbp-0x8]
  40ddb7:	mov    esi,DWORD PTR [rbp-0xc]
  40ddba:	mov    rdx,QWORD PTR [rbp-0x18]
  40ddbe:	call   410940 <flatcc_json_parser_struct_as_root@@Base+0x170>
  40ddc3:	add    rsp,0x20
  40ddc7:	pop    rbp
  40ddc8:	ret    
  40ddc9:	nop    DWORD PTR [rax+0x0]

000000000040ddd0 <flatcc_json_parser_float@@Base>:
  40ddd0:	push   rbp
  40ddd1:	mov    rbp,rsp
  40ddd4:	sub    rsp,0x40
  40ddd8:	mov    QWORD PTR [rbp-0x10],rdi
  40dddc:	mov    QWORD PTR [rbp-0x18],rsi
  40dde0:	mov    QWORD PTR [rbp-0x20],rdx
  40dde4:	mov    QWORD PTR [rbp-0x28],rcx
  40dde8:	mov    rax,QWORD PTR [rbp-0x28]
  40ddec:	vxorps xmm0,xmm0,xmm0
  40ddf0:	vmovss DWORD PTR [rax],xmm0
  40ddf4:	mov    rax,QWORD PTR [rbp-0x18]
  40ddf8:	cmp    rax,QWORD PTR [rbp-0x20]
  40ddfc:	jne    40de0f <flatcc_json_parser_float@@Base+0x3f>
  40de02:	mov    rax,QWORD PTR [rbp-0x18]
  40de06:	mov    QWORD PTR [rbp-0x8],rax
  40de0a:	jmp    40df69 <flatcc_json_parser_float@@Base+0x199>
  40de0f:	mov    rax,QWORD PTR [rbp-0x18]
  40de13:	mov    QWORD PTR [rbp-0x38],rax
  40de17:	mov    rax,QWORD PTR [rbp-0x18]
  40de1b:	movsx  ecx,BYTE PTR [rax]
  40de1e:	cmp    ecx,0x2d
  40de21:	jne    40de35 <flatcc_json_parser_float@@Base+0x65>
  40de27:	mov    rax,QWORD PTR [rbp-0x38]
  40de2b:	add    rax,0x1
  40de31:	mov    QWORD PTR [rbp-0x38],rax
  40de35:	mov    rax,QWORD PTR [rbp-0x20]
  40de39:	mov    rcx,QWORD PTR [rbp-0x38]
  40de3d:	sub    rax,rcx
  40de40:	cmp    rax,0x1
  40de44:	jle    40de9a <flatcc_json_parser_float@@Base+0xca>
  40de4a:	mov    rax,QWORD PTR [rbp-0x38]
  40de4e:	movsx  ecx,BYTE PTR [rax]
  40de51:	cmp    ecx,0x2e
  40de54:	je     40de7b <flatcc_json_parser_float@@Base+0xab>
  40de5a:	mov    rax,QWORD PTR [rbp-0x38]
  40de5e:	movsx  ecx,BYTE PTR [rax]
  40de61:	cmp    ecx,0x30
  40de64:	jne    40de9a <flatcc_json_parser_float@@Base+0xca>
  40de6a:	mov    rax,QWORD PTR [rbp-0x38]
  40de6e:	movsx  ecx,BYTE PTR [rax+0x1]
  40de72:	cmp    ecx,0x30
  40de75:	jne    40de9a <flatcc_json_parser_float@@Base+0xca>
  40de7b:	mov    rdi,QWORD PTR [rbp-0x10]
  40de7f:	mov    rsi,QWORD PTR [rbp-0x18]
  40de83:	mov    rdx,QWORD PTR [rbp-0x20]
  40de87:	mov    ecx,0x6
  40de8c:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40de91:	mov    QWORD PTR [rbp-0x8],rax
  40de95:	jmp    40df69 <flatcc_json_parser_float@@Base+0x199>
  40de9a:	mov    rdi,QWORD PTR [rbp-0x18]
  40de9e:	mov    rax,QWORD PTR [rbp-0x20]
  40dea2:	mov    rcx,QWORD PTR [rbp-0x18]
  40dea6:	sub    rax,rcx
  40dea9:	mov    rdx,QWORD PTR [rbp-0x28]
  40dead:	mov    esi,eax
  40deaf:	call   40df80 <flatcc_json_parser_float@@Base+0x1b0>
  40deb4:	mov    QWORD PTR [rbp-0x30],rax
  40deb8:	cmp    QWORD PTR [rbp-0x30],0x0
  40debd:	je     40ded1 <flatcc_json_parser_float@@Base+0x101>
  40dec3:	mov    rax,QWORD PTR [rbp-0x30]
  40dec7:	cmp    rax,QWORD PTR [rbp-0x18]
  40decb:	jne    40df61 <flatcc_json_parser_float@@Base+0x191>
  40ded1:	vmovss xmm0,DWORD PTR [rip+0x67e7]        # 4146c0 <flatcc_builder_padding_base@@Base+0x2350>
  40ded9:	xor    eax,eax
  40dedb:	mov    rcx,QWORD PTR [rbp-0x28]
  40dedf:	vmovss xmm1,DWORD PTR [rcx]
  40dee3:	vmovaps xmm2,xmm1
  40dee7:	vbroadcastss xmm3,DWORD PTR [rip+0x67d4]        # 4146c4 <flatcc_builder_padding_base@@Base+0x2354>
  40def0:	vpand  xmm2,xmm2,xmm3
  40def4:	vmovd  edx,xmm1
  40def8:	cmp    edx,0x0
  40defb:	mov    edx,0xffffffff
  40df00:	mov    esi,0x1
  40df05:	cmovl  esi,edx
  40df08:	vucomiss xmm2,xmm0
  40df0c:	setnp  dil
  40df10:	sete   r8b
  40df14:	test   r8b,dil
  40df17:	cmovne eax,esi
  40df1a:	cmp    eax,0x0
  40df1d:	je     40df42 <flatcc_json_parser_float@@Base+0x172>
  40df23:	mov    rdi,QWORD PTR [rbp-0x10]
  40df27:	mov    rsi,QWORD PTR [rbp-0x18]
  40df2b:	mov    rdx,QWORD PTR [rbp-0x20]
  40df2f:	mov    ecx,0x7
  40df34:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40df39:	mov    QWORD PTR [rbp-0x8],rax
  40df3d:	jmp    40df69 <flatcc_json_parser_float@@Base+0x199>
  40df42:	mov    rdi,QWORD PTR [rbp-0x10]
  40df46:	mov    rsi,QWORD PTR [rbp-0x18]
  40df4a:	mov    rdx,QWORD PTR [rbp-0x20]
  40df4e:	mov    ecx,0x6
  40df53:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40df58:	mov    QWORD PTR [rbp-0x8],rax
  40df5c:	jmp    40df69 <flatcc_json_parser_float@@Base+0x199>
  40df61:	mov    rax,QWORD PTR [rbp-0x30]
  40df65:	mov    QWORD PTR [rbp-0x8],rax
  40df69:	mov    rax,QWORD PTR [rbp-0x8]
  40df6d:	add    rsp,0x40
  40df71:	pop    rbp
  40df72:	ret    
  40df73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df7d:	nop    DWORD PTR [rax]
  40df80:	push   rbp
  40df81:	mov    rbp,rsp
  40df84:	sub    rsp,0x40
  40df88:	mov    QWORD PTR [rbp-0x10],rdi
  40df8c:	mov    DWORD PTR [rbp-0x14],esi
  40df8f:	mov    QWORD PTR [rbp-0x20],rdx
  40df93:	mov    DWORD PTR [rbp-0x38],0x7f800000
  40df9a:	mov    rdi,QWORD PTR [rbp-0x10]
  40df9e:	mov    esi,DWORD PTR [rbp-0x14]
  40dfa1:	lea    rdx,[rbp-0x30]
  40dfa5:	call   40dda0 <flatcc_json_parser_double@@Base+0x1b0>
  40dfaa:	vmovss xmm0,DWORD PTR [rip+0x670e]        # 4146c0 <flatcc_builder_padding_base@@Base+0x2350>
  40dfb2:	xor    ecx,ecx
  40dfb4:	mov    QWORD PTR [rbp-0x28],rax
  40dfb8:	vmovsd xmm1,QWORD PTR [rbp-0x30]
  40dfbd:	vcvtsd2ss xmm1,xmm2,xmm1
  40dfc1:	mov    rax,QWORD PTR [rbp-0x20]
  40dfc5:	vmovss DWORD PTR [rax],xmm1
  40dfc9:	mov    rax,QWORD PTR [rbp-0x20]
  40dfcd:	vmovss xmm1,DWORD PTR [rax]
  40dfd1:	vmovaps xmm2,xmm1
  40dfd5:	vbroadcastss xmm3,DWORD PTR [rip+0x66e6]        # 4146c4 <flatcc_builder_padding_base@@Base+0x2354>
  40dfde:	vpand  xmm2,xmm2,xmm3
  40dfe2:	vmovd  esi,xmm1
  40dfe6:	cmp    esi,0x0
  40dfe9:	mov    esi,0xffffffff
  40dfee:	mov    r8d,0x1
  40dff4:	cmovl  r8d,esi
  40dff8:	vucomiss xmm2,xmm0
  40dffc:	setnp  r9b
  40e000:	sete   r10b
  40e004:	test   r10b,r9b
  40e007:	cmovne ecx,r8d
  40e00b:	cmp    ecx,0x0
  40e00e:	je     40e063 <flatcc_json_parser_float@@Base+0x293>
  40e014:	vxorps xmm0,xmm0,xmm0
  40e018:	vucomisd xmm0,QWORD PTR [rbp-0x30]
  40e01d:	jbe    40e03f <flatcc_json_parser_float@@Base+0x26f>
  40e023:	vmovss xmm0,DWORD PTR [rbp-0x38]
  40e028:	vmovd  eax,xmm0
  40e02c:	xor    eax,0x80000000
  40e031:	vmovd  xmm0,eax
  40e035:	vmovss DWORD PTR [rbp-0x3c],xmm0
  40e03a:	jmp    40e049 <flatcc_json_parser_float@@Base+0x279>
  40e03f:	vmovss xmm0,DWORD PTR [rbp-0x38]
  40e044:	vmovss DWORD PTR [rbp-0x3c],xmm0
  40e049:	vmovss xmm0,DWORD PTR [rbp-0x3c]
  40e04e:	mov    rax,QWORD PTR [rbp-0x20]
  40e052:	vmovss DWORD PTR [rax],xmm0
  40e056:	mov    rax,QWORD PTR [rbp-0x10]
  40e05a:	mov    QWORD PTR [rbp-0x8],rax
  40e05e:	jmp    40e06b <flatcc_json_parser_float@@Base+0x29b>
  40e063:	mov    rax,QWORD PTR [rbp-0x28]
  40e067:	mov    QWORD PTR [rbp-0x8],rax
  40e06b:	mov    rax,QWORD PTR [rbp-0x8]
  40e06f:	add    rsp,0x40
  40e073:	pop    rbp
  40e074:	ret    
  40e075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e07f:	nop
  40e080:	push   rbp
  40e081:	mov    rbp,rsp
  40e084:	sub    rsp,0x20
  40e088:	mov    QWORD PTR [rbp-0x10],rdi
  40e08c:	mov    QWORD PTR [rbp-0x18],rsi
  40e090:	mov    QWORD PTR [rbp-0x20],rdx
  40e094:	mov    rax,QWORD PTR [rbp-0x18]
  40e098:	cmp    rax,QWORD PTR [rbp-0x20]
  40e09c:	jne    40e0af <flatcc_json_parser_float@@Base+0x2df>
  40e0a2:	mov    rax,QWORD PTR [rbp-0x18]
  40e0a6:	mov    QWORD PTR [rbp-0x8],rax
  40e0aa:	jmp    40e11f <flatcc_json_parser_float@@Base+0x34f>
  40e0af:	mov    rax,QWORD PTR [rbp-0x18]
  40e0b3:	movsx  ecx,BYTE PTR [rax]
  40e0b6:	cmp    ecx,0x22
  40e0b9:	jne    40e0dd <flatcc_json_parser_float@@Base+0x30d>
  40e0bf:	mov    rax,QWORD PTR [rbp-0x18]
  40e0c3:	add    rax,0x1
  40e0c9:	mov    QWORD PTR [rbp-0x18],rax
  40e0cd:	mov    rax,QWORD PTR [rbp-0x10]
  40e0d1:	mov    DWORD PTR [rax+0x14],0x0
  40e0d8:	jmp    40e117 <flatcc_json_parser_float@@Base+0x347>
  40e0dd:	mov    rax,QWORD PTR [rbp-0x18]
  40e0e1:	movsx  ecx,BYTE PTR [rax]
  40e0e4:	cmp    ecx,0x2e
  40e0e7:	jne    40e10c <flatcc_json_parser_float@@Base+0x33c>
  40e0ed:	mov    rdi,QWORD PTR [rbp-0x10]
  40e0f1:	mov    rsi,QWORD PTR [rbp-0x18]
  40e0f5:	mov    rdx,QWORD PTR [rbp-0x20]
  40e0f9:	mov    ecx,0x5
  40e0fe:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e103:	mov    QWORD PTR [rbp-0x8],rax
  40e107:	jmp    40e11f <flatcc_json_parser_float@@Base+0x34f>
  40e10c:	mov    rax,QWORD PTR [rbp-0x10]
  40e110:	mov    DWORD PTR [rax+0x14],0x1
  40e117:	mov    rax,QWORD PTR [rbp-0x18]
  40e11b:	mov    QWORD PTR [rbp-0x8],rax
  40e11f:	mov    rax,QWORD PTR [rbp-0x8]
  40e123:	add    rsp,0x20
  40e127:	pop    rbp
  40e128:	ret    
  40e129:	nop    DWORD PTR [rax+0x0]
  40e130:	push   rbp
  40e131:	mov    rbp,rsp
  40e134:	sub    rsp,0x20
  40e138:	mov    QWORD PTR [rbp-0x10],rdi
  40e13c:	mov    QWORD PTR [rbp-0x18],rsi
  40e140:	mov    QWORD PTR [rbp-0x20],rdx
  40e144:	mov    rax,QWORD PTR [rbp-0x18]
  40e148:	cmp    rax,QWORD PTR [rbp-0x20]
  40e14c:	je     40e162 <flatcc_json_parser_float@@Base+0x392>
  40e152:	mov    rax,QWORD PTR [rbp-0x18]
  40e156:	movsx  ecx,BYTE PTR [rax]
  40e159:	cmp    ecx,0x22
  40e15c:	je     40e181 <flatcc_json_parser_float@@Base+0x3b1>
  40e162:	mov    rdi,QWORD PTR [rbp-0x10]
  40e166:	mov    rsi,QWORD PTR [rbp-0x18]
  40e16a:	mov    rdx,QWORD PTR [rbp-0x20]
  40e16e:	mov    ecx,0x10
  40e173:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e178:	mov    QWORD PTR [rbp-0x8],rax
  40e17c:	jmp    40e193 <flatcc_json_parser_float@@Base+0x3c3>
  40e181:	mov    rax,QWORD PTR [rbp-0x18]
  40e185:	add    rax,0x1
  40e18b:	mov    QWORD PTR [rbp-0x18],rax
  40e18f:	mov    QWORD PTR [rbp-0x8],rax
  40e193:	mov    rax,QWORD PTR [rbp-0x8]
  40e197:	add    rsp,0x20
  40e19b:	pop    rbp
  40e19c:	ret    
  40e19d:	nop    DWORD PTR [rax]
  40e1a0:	push   rbp
  40e1a1:	mov    rbp,rsp
  40e1a4:	sub    rsp,0x20
  40e1a8:	mov    QWORD PTR [rbp-0x10],rdi
  40e1ac:	mov    QWORD PTR [rbp-0x18],rsi
  40e1b0:	mov    QWORD PTR [rbp-0x20],rdx
  40e1b4:	mov    rax,QWORD PTR [rbp-0x18]
  40e1b8:	cmp    rax,QWORD PTR [rbp-0x20]
  40e1bc:	je     40e1d2 <flatcc_json_parser_float@@Base+0x402>
  40e1c2:	mov    rax,QWORD PTR [rbp-0x18]
  40e1c6:	movsx  ecx,BYTE PTR [rax]
  40e1c9:	cmp    ecx,0x22
  40e1cc:	je     40e1f1 <flatcc_json_parser_float@@Base+0x421>
  40e1d2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1d6:	mov    rsi,QWORD PTR [rbp-0x18]
  40e1da:	mov    rdx,QWORD PTR [rbp-0x20]
  40e1de:	mov    ecx,0x14
  40e1e3:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e1e8:	mov    QWORD PTR [rbp-0x8],rax
  40e1ec:	jmp    40e203 <flatcc_json_parser_float@@Base+0x433>
  40e1f1:	mov    rax,QWORD PTR [rbp-0x18]
  40e1f5:	add    rax,0x1
  40e1fb:	mov    QWORD PTR [rbp-0x18],rax
  40e1ff:	mov    QWORD PTR [rbp-0x8],rax
  40e203:	mov    rax,QWORD PTR [rbp-0x8]
  40e207:	add    rsp,0x20
  40e20b:	pop    rbp
  40e20c:	ret    
  40e20d:	nop    DWORD PTR [rax]
  40e210:	push   rbp
  40e211:	mov    rbp,rsp
  40e214:	sub    rsp,0x30
  40e218:	mov    QWORD PTR [rbp-0x10],rdi
  40e21c:	mov    QWORD PTR [rbp-0x18],rsi
  40e220:	mov    QWORD PTR [rbp-0x20],rdx
  40e224:	mov    rax,QWORD PTR [rbp-0x18]
  40e228:	cmp    rax,QWORD PTR [rbp-0x20]
  40e22c:	jne    40e23f <flatcc_json_parser_float@@Base+0x46f>
  40e232:	mov    rax,QWORD PTR [rbp-0x18]
  40e236:	mov    QWORD PTR [rbp-0x8],rax
  40e23a:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e23f:	mov    rax,QWORD PTR [rbp-0x18]
  40e243:	movsx  ecx,BYTE PTR [rax]
  40e246:	cmp    ecx,0x2d
  40e249:	jne    40e28f <flatcc_json_parser_float@@Base+0x4bf>
  40e24f:	mov    rax,QWORD PTR [rbp-0x18]
  40e253:	add    rax,0x1
  40e259:	mov    QWORD PTR [rbp-0x18],rax
  40e25d:	mov    rax,QWORD PTR [rbp-0x18]
  40e261:	cmp    rax,QWORD PTR [rbp-0x20]
  40e265:	jne    40e28a <flatcc_json_parser_float@@Base+0x4ba>
  40e26b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e26f:	mov    rsi,QWORD PTR [rbp-0x18]
  40e273:	mov    rdx,QWORD PTR [rbp-0x20]
  40e277:	mov    ecx,0x6
  40e27c:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e281:	mov    QWORD PTR [rbp-0x8],rax
  40e285:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e28a:	jmp    40e28f <flatcc_json_parser_float@@Base+0x4bf>
  40e28f:	mov    rax,QWORD PTR [rbp-0x18]
  40e293:	movsx  ecx,BYTE PTR [rax]
  40e296:	cmp    ecx,0x30
  40e299:	jne    40e2b2 <flatcc_json_parser_float@@Base+0x4e2>
  40e29f:	mov    rax,QWORD PTR [rbp-0x18]
  40e2a3:	add    rax,0x1
  40e2a9:	mov    QWORD PTR [rbp-0x18],rax
  40e2ad:	jmp    40e35f <flatcc_json_parser_float@@Base+0x58f>
  40e2b2:	mov    rax,QWORD PTR [rbp-0x18]
  40e2b6:	movsx  ecx,BYTE PTR [rax]
  40e2b9:	cmp    ecx,0x31
  40e2bc:	jl     40e2d2 <flatcc_json_parser_float@@Base+0x502>
  40e2c2:	mov    rax,QWORD PTR [rbp-0x18]
  40e2c6:	movsx  ecx,BYTE PTR [rax]
  40e2c9:	cmp    ecx,0x39
  40e2cc:	jle    40e2f1 <flatcc_json_parser_float@@Base+0x521>
  40e2d2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e2d6:	mov    rsi,QWORD PTR [rbp-0x18]
  40e2da:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2de:	mov    ecx,0x6
  40e2e3:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e2e8:	mov    QWORD PTR [rbp-0x8],rax
  40e2ec:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e2f1:	mov    rax,QWORD PTR [rbp-0x18]
  40e2f5:	add    rax,0x1
  40e2fb:	mov    QWORD PTR [rbp-0x18],rax
  40e2ff:	xor    eax,eax
  40e301:	mov    rcx,QWORD PTR [rbp-0x18]
  40e305:	cmp    rcx,QWORD PTR [rbp-0x20]
  40e309:	mov    BYTE PTR [rbp-0x21],al
  40e30c:	je     40e337 <flatcc_json_parser_float@@Base+0x567>
  40e312:	xor    eax,eax
  40e314:	mov    rcx,QWORD PTR [rbp-0x18]
  40e318:	movsx  edx,BYTE PTR [rcx]
  40e31b:	cmp    edx,0x30
  40e31e:	mov    BYTE PTR [rbp-0x21],al
  40e321:	jl     40e337 <flatcc_json_parser_float@@Base+0x567>
  40e327:	mov    rax,QWORD PTR [rbp-0x18]
  40e32b:	movsx  ecx,BYTE PTR [rax]
  40e32e:	cmp    ecx,0x39
  40e331:	setle  dl
  40e334:	mov    BYTE PTR [rbp-0x21],dl
  40e337:	mov    al,BYTE PTR [rbp-0x21]
  40e33a:	test   al,0x1
  40e33c:	jne    40e347 <flatcc_json_parser_float@@Base+0x577>
  40e342:	jmp    40e35a <flatcc_json_parser_float@@Base+0x58a>
  40e347:	mov    rax,QWORD PTR [rbp-0x18]
  40e34b:	add    rax,0x1
  40e351:	mov    QWORD PTR [rbp-0x18],rax
  40e355:	jmp    40e2ff <flatcc_json_parser_float@@Base+0x52f>
  40e35a:	jmp    40e35f <flatcc_json_parser_float@@Base+0x58f>
  40e35f:	mov    rax,QWORD PTR [rbp-0x18]
  40e363:	cmp    rax,QWORD PTR [rbp-0x20]
  40e367:	je     40e43d <flatcc_json_parser_float@@Base+0x66d>
  40e36d:	mov    rax,QWORD PTR [rbp-0x18]
  40e371:	movsx  ecx,BYTE PTR [rax]
  40e374:	cmp    ecx,0x2e
  40e377:	jne    40e438 <flatcc_json_parser_float@@Base+0x668>
  40e37d:	mov    rax,QWORD PTR [rbp-0x18]
  40e381:	add    rax,0x1
  40e387:	mov    QWORD PTR [rbp-0x18],rax
  40e38b:	mov    rax,QWORD PTR [rbp-0x18]
  40e38f:	movsx  ecx,BYTE PTR [rax]
  40e392:	cmp    ecx,0x30
  40e395:	jl     40e3ab <flatcc_json_parser_float@@Base+0x5db>
  40e39b:	mov    rax,QWORD PTR [rbp-0x18]
  40e39f:	movsx  ecx,BYTE PTR [rax]
  40e3a2:	cmp    ecx,0x39
  40e3a5:	jle    40e3ca <flatcc_json_parser_float@@Base+0x5fa>
  40e3ab:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3af:	mov    rsi,QWORD PTR [rbp-0x18]
  40e3b3:	mov    rdx,QWORD PTR [rbp-0x20]
  40e3b7:	mov    ecx,0x6
  40e3bc:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e3c1:	mov    QWORD PTR [rbp-0x8],rax
  40e3c5:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e3ca:	mov    rax,QWORD PTR [rbp-0x18]
  40e3ce:	add    rax,0x1
  40e3d4:	mov    QWORD PTR [rbp-0x18],rax
  40e3d8:	xor    eax,eax
  40e3da:	mov    rcx,QWORD PTR [rbp-0x18]
  40e3de:	cmp    rcx,QWORD PTR [rbp-0x20]
  40e3e2:	mov    BYTE PTR [rbp-0x22],al
  40e3e5:	je     40e410 <flatcc_json_parser_float@@Base+0x640>
  40e3eb:	xor    eax,eax
  40e3ed:	mov    rcx,QWORD PTR [rbp-0x18]
  40e3f1:	movsx  edx,BYTE PTR [rcx]
  40e3f4:	cmp    edx,0x30
  40e3f7:	mov    BYTE PTR [rbp-0x22],al
  40e3fa:	jl     40e410 <flatcc_json_parser_float@@Base+0x640>
  40e400:	mov    rax,QWORD PTR [rbp-0x18]
  40e404:	movsx  ecx,BYTE PTR [rax]
  40e407:	cmp    ecx,0x39
  40e40a:	setle  dl
  40e40d:	mov    BYTE PTR [rbp-0x22],dl
  40e410:	mov    al,BYTE PTR [rbp-0x22]
  40e413:	test   al,0x1
  40e415:	jne    40e420 <flatcc_json_parser_float@@Base+0x650>
  40e41b:	jmp    40e433 <flatcc_json_parser_float@@Base+0x663>
  40e420:	mov    rax,QWORD PTR [rbp-0x18]
  40e424:	add    rax,0x1
  40e42a:	mov    QWORD PTR [rbp-0x18],rax
  40e42e:	jmp    40e3d8 <flatcc_json_parser_float@@Base+0x608>
  40e433:	jmp    40e438 <flatcc_json_parser_float@@Base+0x668>
  40e438:	jmp    40e43d <flatcc_json_parser_float@@Base+0x66d>
  40e43d:	mov    rax,QWORD PTR [rbp-0x18]
  40e441:	cmp    rax,QWORD PTR [rbp-0x20]
  40e445:	je     40e58f <flatcc_json_parser_float@@Base+0x7bf>
  40e44b:	mov    rax,QWORD PTR [rbp-0x18]
  40e44f:	movsx  ecx,BYTE PTR [rax]
  40e452:	cmp    ecx,0x65
  40e455:	je     40e46b <flatcc_json_parser_float@@Base+0x69b>
  40e45b:	mov    rax,QWORD PTR [rbp-0x18]
  40e45f:	movsx  ecx,BYTE PTR [rax]
  40e462:	cmp    ecx,0x45
  40e465:	jne    40e58f <flatcc_json_parser_float@@Base+0x7bf>
  40e46b:	mov    rax,QWORD PTR [rbp-0x18]
  40e46f:	add    rax,0x1
  40e475:	mov    QWORD PTR [rbp-0x18],rax
  40e479:	mov    rax,QWORD PTR [rbp-0x18]
  40e47d:	cmp    rax,QWORD PTR [rbp-0x20]
  40e481:	jne    40e4a6 <flatcc_json_parser_float@@Base+0x6d6>
  40e487:	mov    rdi,QWORD PTR [rbp-0x10]
  40e48b:	mov    rsi,QWORD PTR [rbp-0x18]
  40e48f:	mov    rdx,QWORD PTR [rbp-0x20]
  40e493:	mov    ecx,0x6
  40e498:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e49d:	mov    QWORD PTR [rbp-0x8],rax
  40e4a1:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e4a6:	mov    rax,QWORD PTR [rbp-0x18]
  40e4aa:	movsx  ecx,BYTE PTR [rax]
  40e4ad:	cmp    ecx,0x2b
  40e4b0:	je     40e4c6 <flatcc_json_parser_float@@Base+0x6f6>
  40e4b6:	mov    rax,QWORD PTR [rbp-0x18]
  40e4ba:	movsx  ecx,BYTE PTR [rax]
  40e4bd:	cmp    ecx,0x2d
  40e4c0:	jne    40e4d4 <flatcc_json_parser_float@@Base+0x704>
  40e4c6:	mov    rax,QWORD PTR [rbp-0x18]
  40e4ca:	add    rax,0x1
  40e4d0:	mov    QWORD PTR [rbp-0x18],rax
  40e4d4:	mov    rax,QWORD PTR [rbp-0x18]
  40e4d8:	cmp    rax,QWORD PTR [rbp-0x20]
  40e4dc:	je     40e502 <flatcc_json_parser_float@@Base+0x732>
  40e4e2:	mov    rax,QWORD PTR [rbp-0x18]
  40e4e6:	movsx  ecx,BYTE PTR [rax]
  40e4e9:	cmp    ecx,0x30
  40e4ec:	jl     40e502 <flatcc_json_parser_float@@Base+0x732>
  40e4f2:	mov    rax,QWORD PTR [rbp-0x18]
  40e4f6:	movsx  ecx,BYTE PTR [rax]
  40e4f9:	cmp    ecx,0x39
  40e4fc:	jle    40e521 <flatcc_json_parser_float@@Base+0x751>
  40e502:	mov    rdi,QWORD PTR [rbp-0x10]
  40e506:	mov    rsi,QWORD PTR [rbp-0x18]
  40e50a:	mov    rdx,QWORD PTR [rbp-0x20]
  40e50e:	mov    ecx,0x6
  40e513:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e518:	mov    QWORD PTR [rbp-0x8],rax
  40e51c:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e521:	mov    rax,QWORD PTR [rbp-0x18]
  40e525:	add    rax,0x1
  40e52b:	mov    QWORD PTR [rbp-0x18],rax
  40e52f:	xor    eax,eax
  40e531:	mov    rcx,QWORD PTR [rbp-0x18]
  40e535:	cmp    rcx,QWORD PTR [rbp-0x20]
  40e539:	mov    BYTE PTR [rbp-0x23],al
  40e53c:	je     40e567 <flatcc_json_parser_float@@Base+0x797>
  40e542:	xor    eax,eax
  40e544:	mov    rcx,QWORD PTR [rbp-0x18]
  40e548:	movsx  edx,BYTE PTR [rcx]
  40e54b:	cmp    edx,0x30
  40e54e:	mov    BYTE PTR [rbp-0x23],al
  40e551:	jl     40e567 <flatcc_json_parser_float@@Base+0x797>
  40e557:	mov    rax,QWORD PTR [rbp-0x18]
  40e55b:	movsx  ecx,BYTE PTR [rax]
  40e55e:	cmp    ecx,0x39
  40e561:	setle  dl
  40e564:	mov    BYTE PTR [rbp-0x23],dl
  40e567:	mov    al,BYTE PTR [rbp-0x23]
  40e56a:	test   al,0x1
  40e56c:	jne    40e577 <flatcc_json_parser_float@@Base+0x7a7>
  40e572:	jmp    40e58a <flatcc_json_parser_float@@Base+0x7ba>
  40e577:	mov    rax,QWORD PTR [rbp-0x18]
  40e57b:	add    rax,0x1
  40e581:	mov    QWORD PTR [rbp-0x18],rax
  40e585:	jmp    40e52f <flatcc_json_parser_float@@Base+0x75f>
  40e58a:	jmp    40e58f <flatcc_json_parser_float@@Base+0x7bf>
  40e58f:	mov    rax,QWORD PTR [rbp-0x18]
  40e593:	cmp    rax,QWORD PTR [rbp-0x20]
  40e597:	je     40e632 <flatcc_json_parser_float@@Base+0x862>
  40e59d:	mov    rax,QWORD PTR [rbp-0x18]
  40e5a1:	movsx  ecx,BYTE PTR [rax]
  40e5a4:	mov    edx,ecx
  40e5a6:	add    edx,0xfffffff7
  40e5a9:	sub    edx,0x3
  40e5ac:	mov    DWORD PTR [rbp-0x28],ecx
  40e5af:	jb     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e5b5:	jmp    40e5ba <flatcc_json_parser_float@@Base+0x7ea>
  40e5ba:	mov    eax,DWORD PTR [rbp-0x28]
  40e5bd:	sub    eax,0xd
  40e5c0:	je     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e5c6:	jmp    40e5cb <flatcc_json_parser_float@@Base+0x7fb>
  40e5cb:	mov    eax,DWORD PTR [rbp-0x28]
  40e5ce:	sub    eax,0x20
  40e5d1:	je     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e5d7:	jmp    40e5dc <flatcc_json_parser_float@@Base+0x80c>
  40e5dc:	mov    eax,DWORD PTR [rbp-0x28]
  40e5df:	sub    eax,0x2c
  40e5e2:	je     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e5e8:	jmp    40e5ed <flatcc_json_parser_float@@Base+0x81d>
  40e5ed:	mov    eax,DWORD PTR [rbp-0x28]
  40e5f0:	sub    eax,0x3a
  40e5f3:	je     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e5f9:	jmp    40e5fe <flatcc_json_parser_float@@Base+0x82e>
  40e5fe:	mov    eax,DWORD PTR [rbp-0x28]
  40e601:	sub    eax,0x5d
  40e604:	je     40e620 <flatcc_json_parser_float@@Base+0x850>
  40e60a:	jmp    40e60f <flatcc_json_parser_float@@Base+0x83f>
  40e60f:	mov    eax,DWORD PTR [rbp-0x28]
  40e612:	sub    eax,0x7d
  40e615:	jne    40e62d <flatcc_json_parser_float@@Base+0x85d>
  40e61b:	jmp    40e620 <flatcc_json_parser_float@@Base+0x850>
  40e620:	mov    rax,QWORD PTR [rbp-0x18]
  40e624:	mov    QWORD PTR [rbp-0x8],rax
  40e628:	jmp    40e64c <flatcc_json_parser_float@@Base+0x87c>
  40e62d:	jmp    40e632 <flatcc_json_parser_float@@Base+0x862>
  40e632:	mov    rdi,QWORD PTR [rbp-0x10]
  40e636:	mov    rsi,QWORD PTR [rbp-0x18]
  40e63a:	mov    rdx,QWORD PTR [rbp-0x20]
  40e63e:	mov    ecx,0x6
  40e643:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e648:	mov    QWORD PTR [rbp-0x8],rax
  40e64c:	mov    rax,QWORD PTR [rbp-0x8]
  40e650:	add    rsp,0x30
  40e654:	pop    rbp
  40e655:	ret    
  40e656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e660:	push   rbp
  40e661:	mov    rbp,rsp
  40e664:	sub    rsp,0x30
  40e668:	mov    QWORD PTR [rbp-0x10],rdi
  40e66c:	mov    QWORD PTR [rbp-0x18],rsi
  40e670:	mov    QWORD PTR [rbp-0x20],rdx
  40e674:	mov    QWORD PTR [rbp-0x28],rcx
  40e678:	mov    rdi,QWORD PTR [rbp-0x10]
  40e67c:	mov    rsi,QWORD PTR [rbp-0x18]
  40e680:	mov    rdx,QWORD PTR [rbp-0x20]
  40e684:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e689:	mov    QWORD PTR [rbp-0x18],rax
  40e68d:	mov    rax,QWORD PTR [rbp-0x18]
  40e691:	cmp    rax,QWORD PTR [rbp-0x20]
  40e695:	jne    40e6b2 <flatcc_json_parser_float@@Base+0x8e2>
  40e69b:	mov    rax,QWORD PTR [rbp-0x28]
  40e69f:	mov    DWORD PTR [rax],0x0
  40e6a5:	mov    rax,QWORD PTR [rbp-0x18]
  40e6a9:	mov    QWORD PTR [rbp-0x8],rax
  40e6ad:	jmp    40e7c2 <flatcc_json_parser_float@@Base+0x9f2>
  40e6b2:	mov    rax,QWORD PTR [rbp-0x18]
  40e6b6:	movsx  ecx,BYTE PTR [rax]
  40e6b9:	cmp    ecx,0x2c
  40e6bc:	je     40e71e <flatcc_json_parser_float@@Base+0x94e>
  40e6c2:	mov    rax,QWORD PTR [rbp-0x28]
  40e6c6:	mov    DWORD PTR [rax],0x0
  40e6cc:	mov    rax,QWORD PTR [rbp-0x18]
  40e6d0:	movsx  ecx,BYTE PTR [rax]
  40e6d3:	cmp    ecx,0x5d
  40e6d6:	je     40e6fb <flatcc_json_parser_float@@Base+0x92b>
  40e6dc:	mov    rdi,QWORD PTR [rbp-0x10]
  40e6e0:	mov    rsi,QWORD PTR [rbp-0x18]
  40e6e4:	mov    rdx,QWORD PTR [rbp-0x20]
  40e6e8:	mov    ecx,0x9
  40e6ed:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e6f2:	mov    QWORD PTR [rbp-0x8],rax
  40e6f6:	jmp    40e7c2 <flatcc_json_parser_float@@Base+0x9f2>
  40e6fb:	mov    rdi,QWORD PTR [rbp-0x10]
  40e6ff:	mov    rax,QWORD PTR [rbp-0x18]
  40e703:	add    rax,0x1
  40e709:	mov    rdx,QWORD PTR [rbp-0x20]
  40e70d:	mov    rsi,rax
  40e710:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e715:	mov    QWORD PTR [rbp-0x8],rax
  40e719:	jmp    40e7c2 <flatcc_json_parser_float@@Base+0x9f2>
  40e71e:	mov    rdi,QWORD PTR [rbp-0x10]
  40e722:	mov    rax,QWORD PTR [rbp-0x18]
  40e726:	add    rax,0x1
  40e72c:	mov    rdx,QWORD PTR [rbp-0x20]
  40e730:	mov    rsi,rax
  40e733:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e738:	mov    QWORD PTR [rbp-0x18],rax
  40e73c:	mov    rax,QWORD PTR [rbp-0x18]
  40e740:	cmp    rax,QWORD PTR [rbp-0x20]
  40e744:	jne    40e773 <flatcc_json_parser_float@@Base+0x9a3>
  40e74a:	mov    rax,QWORD PTR [rbp-0x28]
  40e74e:	mov    DWORD PTR [rax],0x0
  40e754:	mov    rdi,QWORD PTR [rbp-0x10]
  40e758:	mov    rsi,QWORD PTR [rbp-0x18]
  40e75c:	mov    rdx,QWORD PTR [rbp-0x20]
  40e760:	mov    ecx,0x9
  40e765:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e76a:	mov    QWORD PTR [rbp-0x8],rax
  40e76e:	jmp    40e7c2 <flatcc_json_parser_float@@Base+0x9f2>
  40e773:	mov    rax,QWORD PTR [rbp-0x18]
  40e777:	movsx  ecx,BYTE PTR [rax]
  40e77a:	cmp    ecx,0x5d
  40e77d:	jne    40e7b0 <flatcc_json_parser_float@@Base+0x9e0>
  40e783:	mov    rax,QWORD PTR [rbp-0x28]
  40e787:	mov    DWORD PTR [rax],0x0
  40e78d:	mov    rdi,QWORD PTR [rbp-0x10]
  40e791:	mov    rax,QWORD PTR [rbp-0x18]
  40e795:	add    rax,0x1
  40e79b:	mov    rdx,QWORD PTR [rbp-0x20]
  40e79f:	mov    rsi,rax
  40e7a2:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e7a7:	mov    QWORD PTR [rbp-0x8],rax
  40e7ab:	jmp    40e7c2 <flatcc_json_parser_float@@Base+0x9f2>
  40e7b0:	mov    rax,QWORD PTR [rbp-0x28]
  40e7b4:	mov    DWORD PTR [rax],0x1
  40e7ba:	mov    rax,QWORD PTR [rbp-0x18]
  40e7be:	mov    QWORD PTR [rbp-0x8],rax
  40e7c2:	mov    rax,QWORD PTR [rbp-0x8]
  40e7c6:	add    rsp,0x30
  40e7ca:	pop    rbp
  40e7cb:	ret    
  40e7cc:	nop    DWORD PTR [rax+0x0]
  40e7d0:	push   rbp
  40e7d1:	mov    rbp,rsp
  40e7d4:	sub    rsp,0x30
  40e7d8:	mov    QWORD PTR [rbp-0x10],rdi
  40e7dc:	mov    QWORD PTR [rbp-0x18],rsi
  40e7e0:	mov    QWORD PTR [rbp-0x20],rdx
  40e7e4:	mov    QWORD PTR [rbp-0x28],rcx
  40e7e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40e7ec:	mov    rsi,QWORD PTR [rbp-0x18]
  40e7f0:	mov    rdx,QWORD PTR [rbp-0x20]
  40e7f4:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e7f9:	mov    QWORD PTR [rbp-0x18],rax
  40e7fd:	mov    rax,QWORD PTR [rbp-0x18]
  40e801:	cmp    rax,QWORD PTR [rbp-0x20]
  40e805:	jne    40e822 <flatcc_json_parser_float@@Base+0xa52>
  40e80b:	mov    rax,QWORD PTR [rbp-0x28]
  40e80f:	mov    DWORD PTR [rax],0x0
  40e815:	mov    rax,QWORD PTR [rbp-0x18]
  40e819:	mov    QWORD PTR [rbp-0x8],rax
  40e81d:	jmp    40e932 <flatcc_json_parser_float@@Base+0xb62>
  40e822:	mov    rax,QWORD PTR [rbp-0x18]
  40e826:	movsx  ecx,BYTE PTR [rax]
  40e829:	cmp    ecx,0x2c
  40e82c:	je     40e88e <flatcc_json_parser_float@@Base+0xabe>
  40e832:	mov    rax,QWORD PTR [rbp-0x28]
  40e836:	mov    DWORD PTR [rax],0x0
  40e83c:	mov    rax,QWORD PTR [rbp-0x18]
  40e840:	movsx  ecx,BYTE PTR [rax]
  40e843:	cmp    ecx,0x7d
  40e846:	je     40e86b <flatcc_json_parser_float@@Base+0xa9b>
  40e84c:	mov    rdi,QWORD PTR [rbp-0x10]
  40e850:	mov    rsi,QWORD PTR [rbp-0x18]
  40e854:	mov    rdx,QWORD PTR [rbp-0x20]
  40e858:	mov    ecx,0xa
  40e85d:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e862:	mov    QWORD PTR [rbp-0x8],rax
  40e866:	jmp    40e932 <flatcc_json_parser_float@@Base+0xb62>
  40e86b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e86f:	mov    rax,QWORD PTR [rbp-0x18]
  40e873:	add    rax,0x1
  40e879:	mov    rdx,QWORD PTR [rbp-0x20]
  40e87d:	mov    rsi,rax
  40e880:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e885:	mov    QWORD PTR [rbp-0x8],rax
  40e889:	jmp    40e932 <flatcc_json_parser_float@@Base+0xb62>
  40e88e:	mov    rdi,QWORD PTR [rbp-0x10]
  40e892:	mov    rax,QWORD PTR [rbp-0x18]
  40e896:	add    rax,0x1
  40e89c:	mov    rdx,QWORD PTR [rbp-0x20]
  40e8a0:	mov    rsi,rax
  40e8a3:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e8a8:	mov    QWORD PTR [rbp-0x18],rax
  40e8ac:	mov    rax,QWORD PTR [rbp-0x18]
  40e8b0:	cmp    rax,QWORD PTR [rbp-0x20]
  40e8b4:	jne    40e8e3 <flatcc_json_parser_float@@Base+0xb13>
  40e8ba:	mov    rax,QWORD PTR [rbp-0x28]
  40e8be:	mov    DWORD PTR [rax],0x0
  40e8c4:	mov    rdi,QWORD PTR [rbp-0x10]
  40e8c8:	mov    rsi,QWORD PTR [rbp-0x18]
  40e8cc:	mov    rdx,QWORD PTR [rbp-0x20]
  40e8d0:	mov    ecx,0xa
  40e8d5:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40e8da:	mov    QWORD PTR [rbp-0x8],rax
  40e8de:	jmp    40e932 <flatcc_json_parser_float@@Base+0xb62>
  40e8e3:	mov    rax,QWORD PTR [rbp-0x18]
  40e8e7:	movsx  ecx,BYTE PTR [rax]
  40e8ea:	cmp    ecx,0x7d
  40e8ed:	jne    40e920 <flatcc_json_parser_float@@Base+0xb50>
  40e8f3:	mov    rax,QWORD PTR [rbp-0x28]
  40e8f7:	mov    DWORD PTR [rax],0x0
  40e8fd:	mov    rdi,QWORD PTR [rbp-0x10]
  40e901:	mov    rax,QWORD PTR [rbp-0x18]
  40e905:	add    rax,0x1
  40e90b:	mov    rdx,QWORD PTR [rbp-0x20]
  40e90f:	mov    rsi,rax
  40e912:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e917:	mov    QWORD PTR [rbp-0x8],rax
  40e91b:	jmp    40e932 <flatcc_json_parser_float@@Base+0xb62>
  40e920:	mov    rax,QWORD PTR [rbp-0x28]
  40e924:	mov    DWORD PTR [rax],0x1
  40e92a:	mov    rax,QWORD PTR [rbp-0x18]
  40e92e:	mov    QWORD PTR [rbp-0x8],rax
  40e932:	mov    rax,QWORD PTR [rbp-0x8]
  40e936:	add    rsp,0x30
  40e93a:	pop    rbp
  40e93b:	ret    
  40e93c:	nop    DWORD PTR [rax+0x0]

000000000040e940 <flatcc_json_parser_integer@@Base>:
  40e940:	push   rbp
  40e941:	mov    rbp,rsp
  40e944:	sub    rsp,0x50
  40e948:	mov    QWORD PTR [rbp-0x10],rdi
  40e94c:	mov    QWORD PTR [rbp-0x18],rsi
  40e950:	mov    QWORD PTR [rbp-0x20],rdx
  40e954:	mov    QWORD PTR [rbp-0x28],rcx
  40e958:	mov    QWORD PTR [rbp-0x30],r8
  40e95c:	mov    QWORD PTR [rbp-0x40],0x0
  40e964:	mov    rax,QWORD PTR [rbp-0x18]
  40e968:	cmp    rax,QWORD PTR [rbp-0x20]
  40e96c:	jne    40e97f <flatcc_json_parser_integer@@Base+0x3f>
  40e972:	mov    rax,QWORD PTR [rbp-0x18]
  40e976:	mov    QWORD PTR [rbp-0x8],rax
  40e97a:	jmp    40eb01 <flatcc_json_parser_integer@@Base+0x1c1>
  40e97f:	mov    rax,QWORD PTR [rbp-0x18]
  40e983:	mov    QWORD PTR [rbp-0x48],rax
  40e987:	mov    rax,QWORD PTR [rbp-0x18]
  40e98b:	movsx  ecx,BYTE PTR [rax]
  40e98e:	cmp    ecx,0x2d
  40e991:	sete   dl
  40e994:	and    dl,0x1
  40e997:	movzx  ecx,dl
  40e99a:	mov    rax,QWORD PTR [rbp-0x28]
  40e99e:	mov    DWORD PTR [rax],ecx
  40e9a0:	mov    rax,QWORD PTR [rbp-0x28]
  40e9a4:	mov    ecx,DWORD PTR [rax]
  40e9a6:	mov    rax,QWORD PTR [rbp-0x18]
  40e9aa:	movsxd rsi,ecx
  40e9ad:	add    rax,rsi
  40e9b0:	mov    QWORD PTR [rbp-0x18],rax
  40e9b4:	xor    eax,eax
  40e9b6:	mov    rcx,QWORD PTR [rbp-0x18]
  40e9ba:	cmp    rcx,QWORD PTR [rbp-0x20]
  40e9be:	mov    BYTE PTR [rbp-0x49],al
  40e9c1:	je     40e9ec <flatcc_json_parser_integer@@Base+0xac>
  40e9c7:	xor    eax,eax
  40e9c9:	mov    rcx,QWORD PTR [rbp-0x18]
  40e9cd:	movsx  edx,BYTE PTR [rcx]
  40e9d0:	cmp    edx,0x30
  40e9d3:	mov    BYTE PTR [rbp-0x49],al
  40e9d6:	jl     40e9ec <flatcc_json_parser_integer@@Base+0xac>
  40e9dc:	mov    rax,QWORD PTR [rbp-0x18]
  40e9e0:	movsx  ecx,BYTE PTR [rax]
  40e9e3:	cmp    ecx,0x39
  40e9e6:	setle  dl
  40e9e9:	mov    BYTE PTR [rbp-0x49],dl
  40e9ec:	mov    al,BYTE PTR [rbp-0x49]
  40e9ef:	test   al,0x1
  40e9f1:	jne    40e9fc <flatcc_json_parser_integer@@Base+0xbc>
  40e9f7:	jmp    40ea76 <flatcc_json_parser_integer@@Base+0x136>
  40e9fc:	mov    rax,QWORD PTR [rbp-0x40]
  40ea00:	mov    QWORD PTR [rbp-0x38],rax
  40ea04:	imul   rax,QWORD PTR [rbp-0x40],0xa
  40ea0c:	mov    rcx,QWORD PTR [rbp-0x18]
  40ea10:	movsx  rcx,BYTE PTR [rcx]
  40ea14:	add    rax,rcx
  40ea17:	sub    rax,0x30
  40ea1d:	mov    QWORD PTR [rbp-0x40],rax
  40ea21:	mov    rax,QWORD PTR [rbp-0x38]
  40ea25:	cmp    rax,QWORD PTR [rbp-0x40]
  40ea29:	jbe    40ea63 <flatcc_json_parser_integer@@Base+0x123>
  40ea2f:	mov    rdi,QWORD PTR [rbp-0x10]
  40ea33:	mov    rsi,QWORD PTR [rbp-0x18]
  40ea37:	mov    rdx,QWORD PTR [rbp-0x20]
  40ea3b:	mov    rax,QWORD PTR [rbp-0x28]
  40ea3f:	cmp    rax,0x0
  40ea43:	mov    ecx,0x8
  40ea48:	mov    r8d,0x7
  40ea4e:	cmovne r8d,ecx
  40ea52:	mov    ecx,r8d
  40ea55:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40ea5a:	mov    QWORD PTR [rbp-0x8],rax
  40ea5e:	jmp    40eb01 <flatcc_json_parser_integer@@Base+0x1c1>
  40ea63:	mov    rax,QWORD PTR [rbp-0x18]
  40ea67:	add    rax,0x1
  40ea6d:	mov    QWORD PTR [rbp-0x18],rax
  40ea71:	jmp    40e9b4 <flatcc_json_parser_integer@@Base+0x74>
  40ea76:	mov    rax,QWORD PTR [rbp-0x18]
  40ea7a:	cmp    rax,QWORD PTR [rbp-0x48]
  40ea7e:	jne    40ea91 <flatcc_json_parser_integer@@Base+0x151>
  40ea84:	mov    rax,QWORD PTR [rbp-0x18]
  40ea88:	mov    QWORD PTR [rbp-0x8],rax
  40ea8c:	jmp    40eb01 <flatcc_json_parser_integer@@Base+0x1c1>
  40ea91:	mov    rax,QWORD PTR [rbp-0x18]
  40ea95:	cmp    rax,QWORD PTR [rbp-0x20]
  40ea99:	je     40eaee <flatcc_json_parser_integer@@Base+0x1ae>
  40ea9f:	mov    rax,QWORD PTR [rbp-0x18]
  40eaa3:	movsx  ecx,BYTE PTR [rax]
  40eaa6:	cmp    ecx,0x65
  40eaa9:	je     40eacf <flatcc_json_parser_integer@@Base+0x18f>
  40eaaf:	mov    rax,QWORD PTR [rbp-0x18]
  40eab3:	movsx  ecx,BYTE PTR [rax]
  40eab6:	cmp    ecx,0x45
  40eab9:	je     40eacf <flatcc_json_parser_integer@@Base+0x18f>
  40eabf:	mov    rax,QWORD PTR [rbp-0x18]
  40eac3:	movsx  ecx,BYTE PTR [rax]
  40eac6:	cmp    ecx,0x2e
  40eac9:	jne    40eaee <flatcc_json_parser_integer@@Base+0x1ae>
  40eacf:	mov    rdi,QWORD PTR [rbp-0x10]
  40ead3:	mov    rsi,QWORD PTR [rbp-0x18]
  40ead7:	mov    rdx,QWORD PTR [rbp-0x20]
  40eadb:	mov    ecx,0xc
  40eae0:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40eae5:	mov    QWORD PTR [rbp-0x8],rax
  40eae9:	jmp    40eb01 <flatcc_json_parser_integer@@Base+0x1c1>
  40eaee:	mov    rax,QWORD PTR [rbp-0x40]
  40eaf2:	mov    rcx,QWORD PTR [rbp-0x30]
  40eaf6:	mov    QWORD PTR [rcx],rax
  40eaf9:	mov    rax,QWORD PTR [rbp-0x18]
  40eafd:	mov    QWORD PTR [rbp-0x8],rax
  40eb01:	mov    rax,QWORD PTR [rbp-0x8]
  40eb05:	add    rsp,0x50
  40eb09:	pop    rbp
  40eb0a:	ret    
  40eb0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040eb10 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  40eb10:	push   rbp
  40eb11:	mov    rbp,rsp
  40eb14:	sub    rsp,0x60
  40eb18:	xor    eax,eax
  40eb1a:	mov    QWORD PTR [rbp-0x10],rdi
  40eb1e:	mov    QWORD PTR [rbp-0x18],rsi
  40eb22:	mov    QWORD PTR [rbp-0x20],rdx
  40eb26:	mov    QWORD PTR [rbp-0x28],rcx
  40eb2a:	mov    DWORD PTR [rbp-0x2c],r8d
  40eb2e:	mov    r8d,DWORD PTR [rbp-0x2c]
  40eb32:	cmp    r8d,0x0
  40eb36:	mov    r8d,0x1
  40eb3c:	cmovne eax,r8d
  40eb40:	mov    DWORD PTR [rbp-0x5c],eax
  40eb43:	mov    rdi,QWORD PTR [rbp-0x10]
  40eb47:	mov    rsi,QWORD PTR [rbp-0x18]
  40eb4b:	mov    rdx,QWORD PTR [rbp-0x20]
  40eb4f:	call   40e130 <flatcc_json_parser_float@@Base+0x360>
  40eb54:	mov    QWORD PTR [rbp-0x18],rax
  40eb58:	mov    rdi,QWORD PTR [rbp-0x10]
  40eb5c:	mov    rax,QWORD PTR [rbp-0x18]
  40eb60:	mov    QWORD PTR [rbp-0x38],rax
  40eb64:	mov    rdx,QWORD PTR [rbp-0x20]
  40eb68:	mov    rsi,rax
  40eb6b:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  40eb70:	mov    QWORD PTR [rbp-0x18],rax
  40eb74:	mov    rax,QWORD PTR [rbp-0x18]
  40eb78:	cmp    rax,QWORD PTR [rbp-0x20]
  40eb7c:	je     40eb92 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x82>
  40eb82:	mov    rax,QWORD PTR [rbp-0x18]
  40eb86:	movsx  ecx,BYTE PTR [rax]
  40eb89:	cmp    ecx,0x22
  40eb8c:	je     40eb97 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  40eb92:	jmp    40ed0b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fb>
  40eb97:	mov    rax,QWORD PTR [rbp-0x18]
  40eb9b:	mov    rcx,QWORD PTR [rbp-0x38]
  40eb9f:	sub    rax,rcx
  40eba2:	mov    rdi,rax
  40eba5:	call   40ed50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x240>
  40ebaa:	mov    QWORD PTR [rbp-0x48],rax
  40ebae:	mov    rax,QWORD PTR [rbp-0x10]
  40ebb2:	mov    rdi,QWORD PTR [rax]
  40ebb5:	mov    esi,0x1
  40ebba:	mov    edx,0x1
  40ebbf:	mov    ecx,0xffffffff
  40ebc4:	call   407650 <flatcc_builder_start_vector@@Base>
  40ebc9:	cmp    eax,0x0
  40ebcc:	je     40ebd7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc7>
  40ebd2:	jmp    40ece2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  40ebd7:	mov    rax,QWORD PTR [rbp-0x10]
  40ebdb:	mov    rdi,QWORD PTR [rax]
  40ebde:	mov    rsi,QWORD PTR [rbp-0x48]
  40ebe2:	call   406c00 <flatcc_builder_extend_vector@@Base>
  40ebe7:	mov    QWORD PTR [rbp-0x40],rax
  40ebeb:	cmp    rax,0x0
  40ebef:	jne    40ebfa <flatcc_json_parser_build_uint8_vector_base64@@Base+0xea>
  40ebf5:	jmp    40ece2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  40ebfa:	mov    rax,QWORD PTR [rbp-0x18]
  40ebfe:	mov    rcx,QWORD PTR [rbp-0x38]
  40ec02:	sub    rax,rcx
  40ec05:	mov    QWORD PTR [rbp-0x58],rax
  40ec09:	mov    rax,QWORD PTR [rbp-0x48]
  40ec0d:	mov    QWORD PTR [rbp-0x50],rax
  40ec11:	mov    rdi,QWORD PTR [rbp-0x40]
  40ec15:	mov    rsi,QWORD PTR [rbp-0x38]
  40ec19:	mov    r8d,DWORD PTR [rbp-0x5c]
  40ec1d:	lea    rdx,[rbp-0x50]
  40ec21:	lea    rcx,[rbp-0x58]
  40ec25:	call   40edf0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
  40ec2a:	mov    DWORD PTR [rbp-0x60],eax
  40ec2d:	cmp    eax,0x0
  40ec30:	je     40ec47 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x137>
  40ec36:	mov    rax,QWORD PTR [rbp-0x38]
  40ec3a:	add    rax,QWORD PTR [rbp-0x58]
  40ec3e:	mov    QWORD PTR [rbp-0x18],rax
  40ec42:	jmp    40ed0b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fb>
  40ec47:	mov    rax,QWORD PTR [rbp-0x58]
  40ec4b:	mov    rcx,QWORD PTR [rbp-0x18]
  40ec4f:	mov    rdx,QWORD PTR [rbp-0x38]
  40ec53:	sub    rcx,rdx
  40ec56:	cmp    rax,rcx
  40ec59:	je     40ec70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
  40ec5f:	mov    rax,QWORD PTR [rbp-0x38]
  40ec63:	add    rax,QWORD PTR [rbp-0x58]
  40ec67:	mov    QWORD PTR [rbp-0x18],rax
  40ec6b:	jmp    40ed0b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fb>
  40ec70:	mov    rax,QWORD PTR [rbp-0x50]
  40ec74:	cmp    rax,QWORD PTR [rbp-0x48]
  40ec78:	jae    40eca8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x198>
  40ec7e:	mov    rax,QWORD PTR [rbp-0x10]
  40ec82:	mov    rdi,QWORD PTR [rax]
  40ec85:	mov    rax,QWORD PTR [rbp-0x48]
  40ec89:	sub    rax,QWORD PTR [rbp-0x50]
  40ec8d:	mov    rsi,rax
  40ec90:	call   407330 <flatcc_builder_truncate_vector@@Base>
  40ec95:	cmp    eax,0x0
  40ec98:	je     40eca3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x193>
  40ec9e:	jmp    40ece2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  40eca3:	jmp    40eca8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x198>
  40eca8:	mov    rax,QWORD PTR [rbp-0x10]
  40ecac:	mov    rdi,QWORD PTR [rax]
  40ecaf:	call   408b90 <flatcc_builder_end_vector@@Base>
  40ecb4:	mov    rcx,QWORD PTR [rbp-0x28]
  40ecb8:	mov    DWORD PTR [rcx],eax
  40ecba:	cmp    eax,0x0
  40ecbd:	jne    40ecc8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
  40ecc3:	jmp    40ece2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  40ecc8:	mov    rdi,QWORD PTR [rbp-0x10]
  40eccc:	mov    rsi,QWORD PTR [rbp-0x18]
  40ecd0:	mov    rdx,QWORD PTR [rbp-0x20]
  40ecd4:	call   40e1a0 <flatcc_json_parser_float@@Base+0x3d0>
  40ecd9:	mov    QWORD PTR [rbp-0x8],rax
  40ecdd:	jmp    40ed42 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x232>
  40ece2:	mov    rax,QWORD PTR [rbp-0x28]
  40ece6:	mov    DWORD PTR [rax],0x0
  40ecec:	mov    rdi,QWORD PTR [rbp-0x10]
  40ecf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40ecf4:	mov    rdx,QWORD PTR [rbp-0x20]
  40ecf8:	mov    ecx,0x21
  40ecfd:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40ed02:	mov    QWORD PTR [rbp-0x8],rax
  40ed06:	jmp    40ed42 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x232>
  40ed0b:	mov    rax,QWORD PTR [rbp-0x28]
  40ed0f:	mov    DWORD PTR [rax],0x0
  40ed15:	mov    rdi,QWORD PTR [rbp-0x10]
  40ed19:	mov    rsi,QWORD PTR [rbp-0x18]
  40ed1d:	mov    rdx,QWORD PTR [rbp-0x20]
  40ed21:	mov    ecx,DWORD PTR [rbp-0x2c]
  40ed24:	cmp    ecx,0x0
  40ed27:	mov    ecx,0x20
  40ed2c:	mov    r8d,0x1f
  40ed32:	cmovne r8d,ecx
  40ed36:	mov    ecx,r8d
  40ed39:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40ed3e:	mov    QWORD PTR [rbp-0x8],rax
  40ed42:	mov    rax,QWORD PTR [rbp-0x8]
  40ed46:	add    rsp,0x60
  40ed4a:	pop    rbp
  40ed4b:	ret    
  40ed4c:	nop    DWORD PTR [rax+0x0]
  40ed50:	push   rbp
  40ed51:	mov    rbp,rsp
  40ed54:	mov    QWORD PTR [rbp-0x10],rdi
  40ed58:	mov    rax,QWORD PTR [rbp-0x10]
  40ed5c:	and    eax,0x3
  40ed5f:	mov    ecx,eax
  40ed61:	mov    QWORD PTR [rbp-0x18],rcx
  40ed65:	mov    rcx,QWORD PTR [rbp-0x10]
  40ed69:	shr    rcx,0x2
  40ed6d:	lea    rcx,[rcx+rcx*2]
  40ed71:	mov    QWORD PTR [rbp-0x20],rcx
  40ed75:	mov    rcx,QWORD PTR [rbp-0x18]
  40ed79:	mov    rdx,rcx
  40ed7c:	sub    rdx,0x2
  40ed80:	mov    QWORD PTR [rbp-0x28],rcx
  40ed84:	jb     40eddb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2cb>
  40ed8a:	jmp    40ed8f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x27f>
  40ed8f:	mov    rax,QWORD PTR [rbp-0x28]
  40ed93:	sub    rax,0x2
  40ed97:	je     40edc8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
  40ed9d:	jmp    40eda2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  40eda2:	mov    rax,QWORD PTR [rbp-0x28]
  40eda6:	sub    rax,0x3
  40edaa:	jne    40ede0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
  40edb0:	jmp    40edb5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a5>
  40edb5:	mov    rax,QWORD PTR [rbp-0x20]
  40edb9:	add    rax,0x2
  40edbf:	mov    QWORD PTR [rbp-0x8],rax
  40edc3:	jmp    40ede8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
  40edc8:	mov    rax,QWORD PTR [rbp-0x20]
  40edcc:	add    rax,0x1
  40edd2:	mov    QWORD PTR [rbp-0x8],rax
  40edd6:	jmp    40ede8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
  40eddb:	jmp    40ede0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
  40ede0:	mov    rax,QWORD PTR [rbp-0x20]
  40ede4:	mov    QWORD PTR [rbp-0x8],rax
  40ede8:	mov    rax,QWORD PTR [rbp-0x8]
  40edec:	pop    rbp
  40eded:	ret    
  40edee:	xchg   ax,ax
  40edf0:	push   rbp
  40edf1:	mov    rbp,rsp
  40edf4:	mov    QWORD PTR [rbp-0x8],rdi
  40edf8:	mov    QWORD PTR [rbp-0x10],rsi
  40edfc:	mov    QWORD PTR [rbp-0x18],rdx
  40ee00:	mov    QWORD PTR [rbp-0x20],rcx
  40ee04:	mov    DWORD PTR [rbp-0x24],r8d
  40ee08:	mov    DWORD PTR [rbp-0x28],0x0
  40ee0f:	mov    rax,QWORD PTR [rbp-0x8]
  40ee13:	mov    QWORD PTR [rbp-0x48],rax
  40ee17:	mov    QWORD PTR [rbp-0x50],0xffffffffffffffff
  40ee1f:	mov    QWORD PTR [rbp-0x58],0xffffffffffffffff
  40ee27:	lea    rax,[rip+0x53a2]        # 4141d0 <flatcc_builder_padding_base@@Base+0x1e60>
  40ee2e:	mov    QWORD PTR [rbp-0x68],rax
  40ee32:	mov    r8d,DWORD PTR [rbp-0x24]
  40ee36:	and    r8d,0x20
  40ee3a:	mov    DWORD PTR [rbp-0x6c],r8d
  40ee3e:	cmp    QWORD PTR [rbp-0x20],0x0
  40ee43:	je     40ee54 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x344>
  40ee49:	mov    rax,QWORD PTR [rbp-0x20]
  40ee4d:	mov    rax,QWORD PTR [rax]
  40ee50:	mov    QWORD PTR [rbp-0x58],rax
  40ee54:	mov    rax,QWORD PTR [rbp-0x58]
  40ee58:	mov    QWORD PTR [rbp-0x60],rax
  40ee5c:	mov    cl,BYTE PTR [rbp-0x24]
  40ee5f:	and    cl,0x1f
  40ee62:	mov    BYTE PTR [rbp-0x24],cl
  40ee65:	mov    edx,DWORD PTR [rbp-0x24]
  40ee68:	test   edx,edx
  40ee6a:	mov    DWORD PTR [rbp-0x70],edx
  40ee6d:	je     40ee89 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x379>
  40ee73:	jmp    40ee78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x368>
  40ee78:	mov    eax,DWORD PTR [rbp-0x70]
  40ee7b:	sub    eax,0x1
  40ee7e:	je     40eeaa <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39a>
  40ee84:	jmp    40eecb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3bb>
  40ee89:	mov    eax,DWORD PTR [rbp-0x6c]
  40ee8c:	cmp    eax,0x0
  40ee8f:	lea    rcx,[rip+0x553a]        # 4143d0 <flatcc_builder_padding_base@@Base+0x2060>
  40ee96:	lea    rdx,[rip+0x5333]        # 4141d0 <flatcc_builder_padding_base@@Base+0x1e60>
  40ee9d:	cmovne rdx,rcx
  40eea1:	mov    QWORD PTR [rbp-0x68],rdx
  40eea5:	jmp    40eed7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c7>
  40eeaa:	mov    eax,DWORD PTR [rbp-0x6c]
  40eead:	cmp    eax,0x0
  40eeb0:	lea    rcx,[rip+0x5619]        # 4144d0 <flatcc_builder_padding_base@@Base+0x2160>
  40eeb7:	lea    rdx,[rip+0x5412]        # 4142d0 <flatcc_builder_padding_base@@Base+0x1f60>
  40eebe:	cmovne rdx,rcx
  40eec2:	mov    QWORD PTR [rbp-0x68],rdx
  40eec6:	jmp    40eed7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c7>
  40eecb:	mov    DWORD PTR [rbp-0x28],0x3
  40eed2:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40eed7:	cmp    QWORD PTR [rbp-0x18],0x0
  40eedc:	je     40eefb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3eb>
  40eee2:	mov    rax,QWORD PTR [rbp-0x18]
  40eee6:	cmp    QWORD PTR [rax],0x0
  40eeea:	jbe    40eefb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3eb>
  40eef0:	mov    rax,QWORD PTR [rbp-0x18]
  40eef4:	mov    rax,QWORD PTR [rax]
  40eef7:	mov    QWORD PTR [rbp-0x50],rax
  40eefb:	jmp    40ef00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f0>
  40ef00:	cmp    QWORD PTR [rbp-0x50],0x0
  40ef05:	jbe    40f12d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x61d>
  40ef0b:	mov    QWORD PTR [rbp-0x30],0x0
  40ef13:	cmp    QWORD PTR [rbp-0x30],0x4
  40ef18:	jae    40f092 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x582>
  40ef1e:	mov    rax,QWORD PTR [rbp-0x58]
  40ef22:	cmp    rax,QWORD PTR [rbp-0x30]
  40ef26:	jne    40ef48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x438>
  40ef2c:	mov    rax,QWORD PTR [rbp-0x30]
  40ef30:	mov    QWORD PTR [rbp-0x38],rax
  40ef34:	mov    rax,QWORD PTR [rbp-0x30]
  40ef38:	mov    rcx,QWORD PTR [rbp-0x58]
  40ef3c:	sub    rcx,rax
  40ef3f:	mov    QWORD PTR [rbp-0x58],rcx
  40ef43:	jmp    40f170 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x660>
  40ef48:	mov    rax,QWORD PTR [rbp-0x68]
  40ef4c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ef50:	mov    rdx,QWORD PTR [rbp-0x30]
  40ef54:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40ef58:	mov    ecx,esi
  40ef5a:	mov    dil,BYTE PTR [rax+rcx*1]
  40ef5e:	mov    rax,QWORD PTR [rbp-0x30]
  40ef62:	mov    BYTE PTR [rbp+rax*1-0x3c],dil
  40ef67:	movzx  esi,dil
  40ef6b:	cmp    esi,0x40
  40ef6e:	jl     40f07a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x56a>
  40ef74:	mov    rax,QWORD PTR [rbp-0x30]
  40ef78:	movzx  ecx,BYTE PTR [rbp+rax*1-0x3c]
  40ef7d:	cmp    ecx,0x41
  40ef80:	jne    40efb5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4a5>
  40ef86:	mov    rax,QWORD PTR [rbp-0x10]
  40ef8a:	add    rax,0x1
  40ef90:	mov    QWORD PTR [rbp-0x10],rax
  40ef94:	mov    rax,QWORD PTR [rbp-0x58]
  40ef98:	add    rax,0xffffffffffffffff
  40ef9e:	mov    QWORD PTR [rbp-0x58],rax
  40efa2:	mov    rax,QWORD PTR [rbp-0x30]
  40efa6:	add    rax,0xffffffffffffffff
  40efac:	mov    QWORD PTR [rbp-0x30],rax
  40efb0:	jmp    40f07f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x56f>
  40efb5:	mov    rax,QWORD PTR [rbp-0x30]
  40efb9:	mov    QWORD PTR [rbp-0x38],rax
  40efbd:	mov    rax,QWORD PTR [rbp-0x30]
  40efc1:	movzx  ecx,BYTE PTR [rbp+rax*1-0x3c]
  40efc6:	cmp    ecx,0x42
  40efc9:	jne    40f066 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x556>
  40efcf:	mov    rax,QWORD PTR [rbp-0x30]
  40efd3:	add    rax,0x1
  40efd9:	mov    QWORD PTR [rbp-0x30],rax
  40efdd:	xor    eax,eax
  40efdf:	mov    rcx,QWORD PTR [rbp-0x30]
  40efe3:	cmp    rcx,QWORD PTR [rbp-0x58]
  40efe7:	mov    BYTE PTR [rbp-0x71],al
  40efea:	jae    40effb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4eb>
  40eff0:	cmp    QWORD PTR [rbp-0x30],0x8
  40eff5:	setb   al
  40eff8:	mov    BYTE PTR [rbp-0x71],al
  40effb:	mov    al,BYTE PTR [rbp-0x71]
  40effe:	test   al,0x1
  40f000:	jne    40f00b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4fb>
  40f006:	jmp    40f061 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x551>
  40f00b:	mov    rax,QWORD PTR [rbp-0x68]
  40f00f:	mov    rcx,QWORD PTR [rbp-0x10]
  40f013:	mov    rdx,QWORD PTR [rbp-0x30]
  40f017:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40f01b:	mov    ecx,esi
  40f01d:	movzx  esi,BYTE PTR [rax+rcx*1]
  40f021:	cmp    esi,0x42
  40f024:	je     40f04e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x53e>
  40f02a:	mov    rax,QWORD PTR [rbp-0x68]
  40f02e:	mov    rcx,QWORD PTR [rbp-0x10]
  40f032:	mov    rdx,QWORD PTR [rbp-0x30]
  40f036:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40f03a:	mov    ecx,esi
  40f03c:	movzx  esi,BYTE PTR [rax+rcx*1]
  40f040:	cmp    esi,0x41
  40f043:	je     40f04e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x53e>
  40f049:	jmp    40f061 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x551>
  40f04e:	mov    rax,QWORD PTR [rbp-0x30]
  40f052:	add    rax,0x1
  40f058:	mov    QWORD PTR [rbp-0x30],rax
  40f05c:	jmp    40efdd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4cd>
  40f061:	jmp    40f066 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x556>
  40f066:	mov    rax,QWORD PTR [rbp-0x30]
  40f06a:	mov    rcx,QWORD PTR [rbp-0x58]
  40f06e:	sub    rcx,rax
  40f071:	mov    QWORD PTR [rbp-0x58],rcx
  40f075:	jmp    40f170 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x660>
  40f07a:	jmp    40f07f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x56f>
  40f07f:	mov    rax,QWORD PTR [rbp-0x30]
  40f083:	add    rax,0x1
  40f089:	mov    QWORD PTR [rbp-0x30],rax
  40f08d:	jmp    40ef13 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x403>
  40f092:	cmp    QWORD PTR [rbp-0x50],0x3
  40f097:	jae    40f0a2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x592>
  40f09d:	jmp    40f295 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x785>
  40f0a2:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f0a6:	shl    eax,0x2
  40f0a9:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f0ad:	sar    ecx,0x4
  40f0b0:	or     eax,ecx
  40f0b2:	mov    rdx,QWORD PTR [rbp-0x8]
  40f0b6:	mov    BYTE PTR [rdx],al
  40f0b8:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f0bc:	shl    ecx,0x4
  40f0bf:	movzx  esi,BYTE PTR [rbp-0x3a]
  40f0c3:	sar    esi,0x2
  40f0c6:	or     ecx,esi
  40f0c8:	mov    rdx,QWORD PTR [rbp-0x8]
  40f0cc:	mov    BYTE PTR [rdx+0x1],cl
  40f0cf:	movzx  esi,BYTE PTR [rbp-0x3a]
  40f0d3:	shl    esi,0x6
  40f0d6:	movzx  edi,BYTE PTR [rbp-0x39]
  40f0da:	or     esi,edi
  40f0dc:	mov    rdx,QWORD PTR [rbp-0x8]
  40f0e0:	mov    BYTE PTR [rdx+0x2],sil
  40f0e4:	mov    rdx,QWORD PTR [rbp-0x8]
  40f0e8:	add    rdx,0x3
  40f0ef:	mov    QWORD PTR [rbp-0x8],rdx
  40f0f3:	mov    rdx,QWORD PTR [rbp-0x10]
  40f0f7:	add    rdx,0x4
  40f0fe:	mov    QWORD PTR [rbp-0x10],rdx
  40f102:	mov    rdx,QWORD PTR [rbp-0x50]
  40f106:	sub    rdx,0x3
  40f10d:	mov    QWORD PTR [rbp-0x50],rdx
  40f111:	mov    rdx,QWORD PTR [rbp-0x58]
  40f115:	sub    rdx,0x4
  40f11c:	mov    QWORD PTR [rbp-0x58],rdx
  40f120:	mov    rdx,QWORD PTR [rbp-0x58]
  40f124:	mov    QWORD PTR [rbp-0x60],rdx
  40f128:	jmp    40ef00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f0>
  40f12d:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40f132:	cmp    QWORD PTR [rbp-0x18],0x0
  40f137:	je     40f14f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x63f>
  40f13d:	mov    rax,QWORD PTR [rbp-0x8]
  40f141:	mov    rcx,QWORD PTR [rbp-0x48]
  40f145:	sub    rax,rcx
  40f148:	mov    rcx,QWORD PTR [rbp-0x18]
  40f14c:	mov    QWORD PTR [rcx],rax
  40f14f:	cmp    QWORD PTR [rbp-0x20],0x0
  40f154:	je     40f16b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x65b>
  40f15a:	mov    rax,QWORD PTR [rbp-0x60]
  40f15e:	mov    rcx,QWORD PTR [rbp-0x20]
  40f162:	mov    rdx,QWORD PTR [rcx]
  40f165:	sub    rdx,rax
  40f168:	mov    QWORD PTR [rcx],rdx
  40f16b:	mov    eax,DWORD PTR [rbp-0x28]
  40f16e:	pop    rbp
  40f16f:	ret    
  40f170:	mov    rax,QWORD PTR [rbp-0x38]
  40f174:	test   rax,rax
  40f177:	mov    QWORD PTR [rbp-0x80],rax
  40f17b:	je     40f1ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69c>
  40f181:	jmp    40f186 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x676>
  40f186:	mov    rax,QWORD PTR [rbp-0x80]
  40f18a:	sub    rax,0x2
  40f18e:	je     40f1b1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a1>
  40f194:	jmp    40f199 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x689>
  40f199:	mov    rax,QWORD PTR [rbp-0x80]
  40f19d:	sub    rax,0x3
  40f1a1:	je     40f205 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6f5>
  40f1a7:	jmp    40f270 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x760>
  40f1ac:	jmp    40f27c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x76c>
  40f1b1:	movzx  eax,BYTE PTR [rbp-0x3b]
  40f1b5:	shl    eax,0x4
  40f1b8:	and    eax,0xff
  40f1bd:	cmp    eax,0x0
  40f1c0:	je     40f1cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6bb>
  40f1c6:	jmp    40f289 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x779>
  40f1cb:	cmp    QWORD PTR [rbp-0x50],0x1
  40f1d0:	jae    40f1db <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6cb>
  40f1d6:	jmp    40f295 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x785>
  40f1db:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f1df:	shl    eax,0x2
  40f1e2:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f1e6:	sar    ecx,0x4
  40f1e9:	or     eax,ecx
  40f1eb:	mov    rdx,QWORD PTR [rbp-0x8]
  40f1ef:	mov    BYTE PTR [rdx],al
  40f1f1:	mov    rdx,QWORD PTR [rbp-0x8]
  40f1f5:	add    rdx,0x1
  40f1fc:	mov    QWORD PTR [rbp-0x8],rdx
  40f200:	jmp    40f27c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x76c>
  40f205:	movzx  eax,BYTE PTR [rbp-0x3a]
  40f209:	shl    eax,0x6
  40f20c:	and    eax,0xff
  40f211:	cmp    eax,0x0
  40f214:	je     40f21f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x70f>
  40f21a:	jmp    40f289 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x779>
  40f21f:	cmp    QWORD PTR [rbp-0x50],0x2
  40f224:	jae    40f22f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x71f>
  40f22a:	jmp    40f295 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x785>
  40f22f:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f233:	shl    eax,0x2
  40f236:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f23a:	sar    ecx,0x4
  40f23d:	or     eax,ecx
  40f23f:	mov    rdx,QWORD PTR [rbp-0x8]
  40f243:	mov    BYTE PTR [rdx],al
  40f245:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f249:	shl    ecx,0x4
  40f24c:	movzx  esi,BYTE PTR [rbp-0x3a]
  40f250:	sar    esi,0x2
  40f253:	or     ecx,esi
  40f255:	mov    rdx,QWORD PTR [rbp-0x8]
  40f259:	mov    BYTE PTR [rdx+0x1],cl
  40f25c:	mov    rdx,QWORD PTR [rbp-0x8]
  40f260:	add    rdx,0x2
  40f267:	mov    QWORD PTR [rbp-0x8],rdx
  40f26b:	jmp    40f27c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x76c>
  40f270:	mov    DWORD PTR [rbp-0x28],0x4
  40f277:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40f27c:	mov    rax,QWORD PTR [rbp-0x58]
  40f280:	mov    QWORD PTR [rbp-0x60],rax
  40f284:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40f289:	mov    DWORD PTR [rbp-0x28],0x5
  40f290:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40f295:	mov    DWORD PTR [rbp-0x28],0x1
  40f29c:	jmp    40f132 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x622>
  40f2a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f2ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040f2b0 <flatcc_json_parser_build_string@@Base>:
  40f2b0:	push   rbp
  40f2b1:	mov    rbp,rsp
  40f2b4:	sub    rsp,0x50
  40f2b8:	mov    QWORD PTR [rbp-0x10],rdi
  40f2bc:	mov    QWORD PTR [rbp-0x18],rsi
  40f2c0:	mov    QWORD PTR [rbp-0x20],rdx
  40f2c4:	mov    QWORD PTR [rbp-0x28],rcx
  40f2c8:	mov    rdi,QWORD PTR [rbp-0x10]
  40f2cc:	mov    rsi,QWORD PTR [rbp-0x18]
  40f2d0:	mov    rdx,QWORD PTR [rbp-0x20]
  40f2d4:	call   40e130 <flatcc_json_parser_float@@Base+0x360>
  40f2d9:	mov    QWORD PTR [rbp-0x18],rax
  40f2dd:	mov    rdi,QWORD PTR [rbp-0x10]
  40f2e1:	mov    rax,QWORD PTR [rbp-0x18]
  40f2e5:	mov    QWORD PTR [rbp-0x38],rax
  40f2e9:	mov    rdx,QWORD PTR [rbp-0x20]
  40f2ed:	mov    rsi,rax
  40f2f0:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  40f2f5:	mov    QWORD PTR [rbp-0x18],rax
  40f2f9:	mov    rax,QWORD PTR [rbp-0x18]
  40f2fd:	cmp    rax,QWORD PTR [rbp-0x20]
  40f301:	je     40f340 <flatcc_json_parser_build_string@@Base+0x90>
  40f307:	mov    rax,QWORD PTR [rbp-0x18]
  40f30b:	movsx  ecx,BYTE PTR [rax]
  40f30e:	cmp    ecx,0x22
  40f311:	jne    40f340 <flatcc_json_parser_build_string@@Base+0x90>
  40f317:	mov    rax,QWORD PTR [rbp-0x10]
  40f31b:	mov    rdi,QWORD PTR [rax]
  40f31e:	mov    rsi,QWORD PTR [rbp-0x38]
  40f322:	mov    rax,QWORD PTR [rbp-0x18]
  40f326:	mov    rcx,QWORD PTR [rbp-0x38]
  40f32a:	sub    rax,rcx
  40f32d:	mov    rdx,rax
  40f330:	call   409d00 <flatcc_builder_create_string@@Base>
  40f335:	mov    rcx,QWORD PTR [rbp-0x28]
  40f339:	mov    DWORD PTR [rcx],eax
  40f33b:	jmp    40f48a <flatcc_json_parser_build_string@@Base+0x1da>
  40f340:	mov    rax,QWORD PTR [rbp-0x10]
  40f344:	mov    rdi,QWORD PTR [rax]
  40f347:	call   4078e0 <flatcc_builder_start_string@@Base>
  40f34c:	cmp    eax,0x0
  40f34f:	jne    40f382 <flatcc_json_parser_build_string@@Base+0xd2>
  40f355:	mov    rax,QWORD PTR [rbp-0x10]
  40f359:	mov    rdi,QWORD PTR [rax]
  40f35c:	mov    rsi,QWORD PTR [rbp-0x38]
  40f360:	mov    rax,QWORD PTR [rbp-0x18]
  40f364:	mov    rcx,QWORD PTR [rbp-0x38]
  40f368:	sub    rax,rcx
  40f36b:	mov    rdx,rax
  40f36e:	call   407190 <flatcc_builder_append_string@@Base>
  40f373:	xor    r8d,r8d
  40f376:	mov    ecx,r8d
  40f379:	cmp    rcx,rax
  40f37c:	jne    40f387 <flatcc_json_parser_build_string@@Base+0xd7>
  40f382:	jmp    40f4a4 <flatcc_json_parser_build_string@@Base+0x1f4>
  40f387:	jmp    40f38c <flatcc_json_parser_build_string@@Base+0xdc>
  40f38c:	xor    eax,eax
  40f38e:	mov    rcx,QWORD PTR [rbp-0x18]
  40f392:	cmp    rcx,QWORD PTR [rbp-0x20]
  40f396:	mov    BYTE PTR [rbp-0x39],al
  40f399:	je     40f3af <flatcc_json_parser_build_string@@Base+0xff>
  40f39f:	mov    rax,QWORD PTR [rbp-0x18]
  40f3a3:	movsx  ecx,BYTE PTR [rax]
  40f3a6:	cmp    ecx,0x22
  40f3a9:	setne  dl
  40f3ac:	mov    BYTE PTR [rbp-0x39],dl
  40f3af:	mov    al,BYTE PTR [rbp-0x39]
  40f3b2:	test   al,0x1
  40f3b4:	jne    40f3bf <flatcc_json_parser_build_string@@Base+0x10f>
  40f3ba:	jmp    40f478 <flatcc_json_parser_build_string@@Base+0x1c8>
  40f3bf:	lea    rcx,[rbp-0x2c]
  40f3c3:	mov    rdi,QWORD PTR [rbp-0x10]
  40f3c7:	mov    rsi,QWORD PTR [rbp-0x18]
  40f3cb:	mov    rdx,QWORD PTR [rbp-0x20]
  40f3cf:	call   40c7c0 <flatcc_json_parser_string_escape@@Base>
  40f3d4:	lea    rcx,[rbp-0x2c]
  40f3d8:	mov    QWORD PTR [rbp-0x18],rax
  40f3dc:	mov    rax,QWORD PTR [rbp-0x10]
  40f3e0:	mov    rdi,QWORD PTR [rax]
  40f3e3:	add    rcx,0x1
  40f3ea:	movsx  rdx,BYTE PTR [rbp-0x2c]
  40f3ef:	mov    rsi,rcx
  40f3f2:	call   407190 <flatcc_builder_append_string@@Base>
  40f3f7:	xor    r8d,r8d
  40f3fa:	mov    ecx,r8d
  40f3fd:	cmp    rcx,rax
  40f400:	jne    40f40b <flatcc_json_parser_build_string@@Base+0x15b>
  40f406:	jmp    40f4a4 <flatcc_json_parser_build_string@@Base+0x1f4>
  40f40b:	mov    rax,QWORD PTR [rbp-0x20]
  40f40f:	mov    rdi,QWORD PTR [rbp-0x10]
  40f413:	mov    rcx,QWORD PTR [rbp-0x18]
  40f417:	mov    QWORD PTR [rbp-0x38],rcx
  40f41b:	mov    rdx,QWORD PTR [rbp-0x20]
  40f41f:	mov    rsi,rcx
  40f422:	mov    QWORD PTR [rbp-0x48],rax
  40f426:	call   40c4a0 <flatcc_json_parser_string_part@@Base>
  40f42b:	mov    QWORD PTR [rbp-0x18],rax
  40f42f:	mov    rcx,QWORD PTR [rbp-0x48]
  40f433:	cmp    rcx,rax
  40f436:	je     40f473 <flatcc_json_parser_build_string@@Base+0x1c3>
  40f43c:	mov    rax,QWORD PTR [rbp-0x10]
  40f440:	mov    rdi,QWORD PTR [rax]
  40f443:	mov    rsi,QWORD PTR [rbp-0x38]
  40f447:	mov    rax,QWORD PTR [rbp-0x18]
  40f44b:	mov    rcx,QWORD PTR [rbp-0x38]
  40f44f:	sub    rax,rcx
  40f452:	mov    rdx,rax
  40f455:	call   407190 <flatcc_builder_append_string@@Base>
  40f45a:	xor    r8d,r8d
  40f45d:	mov    ecx,r8d
  40f460:	cmp    rcx,rax
  40f463:	jne    40f46e <flatcc_json_parser_build_string@@Base+0x1be>
  40f469:	jmp    40f4a4 <flatcc_json_parser_build_string@@Base+0x1f4>
  40f46e:	jmp    40f473 <flatcc_json_parser_build_string@@Base+0x1c3>
  40f473:	jmp    40f38c <flatcc_json_parser_build_string@@Base+0xdc>
  40f478:	mov    rax,QWORD PTR [rbp-0x10]
  40f47c:	mov    rdi,QWORD PTR [rax]
  40f47f:	call   409f80 <flatcc_builder_end_string@@Base>
  40f484:	mov    rcx,QWORD PTR [rbp-0x28]
  40f488:	mov    DWORD PTR [rcx],eax
  40f48a:	mov    rdi,QWORD PTR [rbp-0x10]
  40f48e:	mov    rsi,QWORD PTR [rbp-0x18]
  40f492:	mov    rdx,QWORD PTR [rbp-0x20]
  40f496:	call   40e1a0 <flatcc_json_parser_float@@Base+0x3d0>
  40f49b:	mov    QWORD PTR [rbp-0x8],rax
  40f49f:	jmp    40f4b6 <flatcc_json_parser_build_string@@Base+0x206>
  40f4a4:	mov    rax,QWORD PTR [rbp-0x28]
  40f4a8:	mov    DWORD PTR [rax],0x0
  40f4ae:	mov    rax,QWORD PTR [rbp-0x18]
  40f4b2:	mov    QWORD PTR [rbp-0x8],rax
  40f4b6:	mov    rax,QWORD PTR [rbp-0x8]
  40f4ba:	add    rsp,0x50
  40f4be:	pop    rbp
  40f4bf:	ret    

000000000040f4c0 <flatcc_json_parser_prepare_unions@@Base>:
  40f4c0:	push   rbp
  40f4c1:	mov    rbp,rsp
  40f4c4:	sub    rsp,0x40
  40f4c8:	mov    QWORD PTR [rbp-0x10],rdi
  40f4cc:	mov    QWORD PTR [rbp-0x18],rsi
  40f4d0:	mov    QWORD PTR [rbp-0x20],rdx
  40f4d4:	mov    QWORD PTR [rbp-0x28],rcx
  40f4d8:	mov    QWORD PTR [rbp-0x30],r8
  40f4dc:	mov    rax,QWORD PTR [rbp-0x10]
  40f4e0:	mov    rdi,QWORD PTR [rax]
  40f4e3:	mov    rax,QWORD PTR [rbp-0x28]
  40f4e7:	sub    rax,0x1
  40f4ed:	imul   rax,rax,0x28
  40f4f4:	add    rax,0x38
  40f4fa:	mov    rsi,rax
  40f4fd:	call   4056e0 <flatcc_builder_enter_user_frame@@Base>
  40f502:	mov    rcx,QWORD PTR [rbp-0x30]
  40f506:	mov    QWORD PTR [rcx],rax
  40f509:	cmp    rax,0x0
  40f50d:	jne    40f532 <flatcc_json_parser_prepare_unions@@Base+0x72>
  40f513:	mov    rdi,QWORD PTR [rbp-0x10]
  40f517:	mov    rsi,QWORD PTR [rbp-0x18]
  40f51b:	mov    rdx,QWORD PTR [rbp-0x20]
  40f51f:	mov    ecx,0x21
  40f524:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f529:	mov    QWORD PTR [rbp-0x8],rax
  40f52d:	jmp    40f55c <flatcc_json_parser_prepare_unions@@Base+0x9c>
  40f532:	mov    rax,QWORD PTR [rbp-0x10]
  40f536:	mov    rdi,QWORD PTR [rax]
  40f539:	mov    rax,QWORD PTR [rbp-0x30]
  40f53d:	mov    rsi,QWORD PTR [rax]
  40f540:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40f545:	mov    QWORD PTR [rbp-0x38],rax
  40f549:	mov    rax,QWORD PTR [rbp-0x28]
  40f54d:	mov    rcx,QWORD PTR [rbp-0x38]
  40f551:	mov    QWORD PTR [rcx],rax
  40f554:	mov    rax,QWORD PTR [rbp-0x18]
  40f558:	mov    QWORD PTR [rbp-0x8],rax
  40f55c:	mov    rax,QWORD PTR [rbp-0x8]
  40f560:	add    rsp,0x40
  40f564:	pop    rbp
  40f565:	ret    
  40f566:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040f570 <flatcc_json_parser_finalize_unions@@Base>:
  40f570:	push   rbp
  40f571:	mov    rbp,rsp
  40f574:	sub    rsp,0x30
  40f578:	mov    QWORD PTR [rbp-0x8],rdi
  40f57c:	mov    QWORD PTR [rbp-0x10],rsi
  40f580:	mov    QWORD PTR [rbp-0x18],rdx
  40f584:	mov    QWORD PTR [rbp-0x20],rcx
  40f588:	mov    rax,QWORD PTR [rbp-0x8]
  40f58c:	mov    rdi,QWORD PTR [rax]
  40f58f:	mov    rsi,QWORD PTR [rbp-0x20]
  40f593:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40f598:	mov    QWORD PTR [rbp-0x28],rax
  40f59c:	mov    rax,QWORD PTR [rbp-0x28]
  40f5a0:	cmp    QWORD PTR [rax+0x8],0x0
  40f5a5:	je     40f5c5 <flatcc_json_parser_finalize_unions@@Base+0x55>
  40f5ab:	mov    rdi,QWORD PTR [rbp-0x8]
  40f5af:	mov    rsi,QWORD PTR [rbp-0x10]
  40f5b3:	mov    rdx,QWORD PTR [rbp-0x18]
  40f5b7:	mov    ecx,0x1b
  40f5bc:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f5c1:	mov    QWORD PTR [rbp-0x10],rax
  40f5c5:	mov    rax,QWORD PTR [rbp-0x8]
  40f5c9:	mov    rdi,QWORD PTR [rax]
  40f5cc:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5d0:	call   405870 <flatcc_builder_exit_user_frame_at@@Base>
  40f5d5:	mov    rcx,QWORD PTR [rbp-0x10]
  40f5d9:	mov    QWORD PTR [rbp-0x30],rax
  40f5dd:	mov    rax,rcx
  40f5e0:	add    rsp,0x30
  40f5e4:	pop    rbp
  40f5e5:	ret    
  40f5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040f5f0 <flatcc_json_parser_union@@Base>:
  40f5f0:	push   rbp
  40f5f1:	mov    rbp,rsp
  40f5f4:	sub    rsp,0x60
  40f5f8:	mov    rax,QWORD PTR [rbp+0x10]
  40f5fc:	mov    QWORD PTR [rbp-0x10],rdi
  40f600:	mov    QWORD PTR [rbp-0x18],rsi
  40f604:	mov    QWORD PTR [rbp-0x20],rdx
  40f608:	mov    QWORD PTR [rbp-0x28],rcx
  40f60c:	mov    WORD PTR [rbp-0x2a],r8w
  40f611:	mov    QWORD PTR [rbp-0x38],r9
  40f615:	mov    rcx,QWORD PTR [rbp-0x10]
  40f619:	mov    rdi,QWORD PTR [rcx]
  40f61c:	mov    rsi,QWORD PTR [rbp-0x38]
  40f620:	mov    QWORD PTR [rbp-0x58],rax
  40f624:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40f629:	mov    QWORD PTR [rbp-0x40],rax
  40f62d:	mov    rax,QWORD PTR [rbp-0x40]
  40f631:	add    rax,0x10
  40f637:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40f63f:	add    rax,rcx
  40f642:	mov    QWORD PTR [rbp-0x48],rax
  40f646:	mov    rax,QWORD PTR [rbp-0x48]
  40f64a:	cmp    QWORD PTR [rax],0x0
  40f64e:	je     40f673 <flatcc_json_parser_union@@Base+0x83>
  40f654:	mov    rdi,QWORD PTR [rbp-0x10]
  40f658:	mov    rsi,QWORD PTR [rbp-0x18]
  40f65c:	mov    rdx,QWORD PTR [rbp-0x20]
  40f660:	mov    ecx,0x1c
  40f665:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f66a:	mov    QWORD PTR [rbp-0x8],rax
  40f66e:	jmp    40f7b7 <flatcc_json_parser_union@@Base+0x1c7>
  40f673:	mov    rax,QWORD PTR [rbp-0x48]
  40f677:	cmp    BYTE PTR [rax+0x14],0x0
  40f67b:	jne    40f6d6 <flatcc_json_parser_union@@Base+0xe6>
  40f681:	mov    rax,QWORD PTR [rbp-0x40]
  40f685:	mov    rcx,QWORD PTR [rax+0x8]
  40f689:	add    rcx,0x1
  40f690:	mov    QWORD PTR [rax+0x8],rcx
  40f694:	mov    rax,QWORD PTR [rbp-0x10]
  40f698:	mov    edx,DWORD PTR [rax+0x18]
  40f69b:	mov    rax,QWORD PTR [rbp-0x48]
  40f69f:	mov    DWORD PTR [rax+0x10],edx
  40f6a2:	mov    rax,QWORD PTR [rbp-0x10]
  40f6a6:	mov    rax,QWORD PTR [rax+0x8]
  40f6aa:	mov    rcx,QWORD PTR [rbp-0x48]
  40f6ae:	mov    QWORD PTR [rcx+0x8],rax
  40f6b2:	mov    rdi,QWORD PTR [rbp-0x10]
  40f6b6:	mov    rax,QWORD PTR [rbp-0x18]
  40f6ba:	mov    rcx,QWORD PTR [rbp-0x48]
  40f6be:	mov    QWORD PTR [rcx],rax
  40f6c1:	mov    rdx,QWORD PTR [rbp-0x20]
  40f6c5:	mov    rsi,rax
  40f6c8:	call   40d6d0 <flatcc_json_parser_generic_json@@Base>
  40f6cd:	mov    QWORD PTR [rbp-0x18],rax
  40f6d1:	jmp    40f7af <flatcc_json_parser_union@@Base+0x1bf>
  40f6d6:	mov    rax,QWORD PTR [rbp-0x48]
  40f6da:	mov    cl,BYTE PTR [rax+0x15]
  40f6dd:	mov    BYTE PTR [rbp-0x50],cl
  40f6e0:	mov    rax,QWORD PTR [rbp-0x48]
  40f6e4:	movzx  edx,BYTE PTR [rax+0x15]
  40f6e8:	cmp    edx,0x0
  40f6eb:	jne    40f710 <flatcc_json_parser_union@@Base+0x120>
  40f6f1:	mov    rdi,QWORD PTR [rbp-0x10]
  40f6f5:	mov    rsi,QWORD PTR [rbp-0x18]
  40f6f9:	mov    rdx,QWORD PTR [rbp-0x20]
  40f6fd:	mov    ecx,0x19
  40f702:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f707:	mov    QWORD PTR [rbp-0x8],rax
  40f70b:	jmp    40f7b7 <flatcc_json_parser_union@@Base+0x1c7>
  40f710:	mov    rax,QWORD PTR [rbp-0x40]
  40f714:	mov    rcx,QWORD PTR [rax+0x8]
  40f718:	add    rcx,0xffffffffffffffff
  40f71f:	mov    QWORD PTR [rax+0x8],rcx
  40f723:	mov    rax,QWORD PTR [rbp+0x10]
  40f727:	mov    rdi,QWORD PTR [rbp-0x10]
  40f72b:	mov    rsi,QWORD PTR [rbp-0x18]
  40f72f:	mov    rdx,QWORD PTR [rbp-0x20]
  40f733:	mov    rcx,QWORD PTR [rbp-0x48]
  40f737:	mov    r8b,BYTE PTR [rcx+0x15]
  40f73b:	lea    rcx,[rbp-0x50]
  40f73f:	add    rcx,0x4
  40f746:	movzx  r9d,r8b
  40f74a:	mov    QWORD PTR [rbp-0x60],rcx
  40f74e:	mov    ecx,r9d
  40f751:	mov    r8,QWORD PTR [rbp-0x60]
  40f755:	call   rax
  40f757:	mov    QWORD PTR [rbp-0x18],rax
  40f75b:	mov    rax,QWORD PTR [rbp-0x18]
  40f75f:	cmp    rax,QWORD PTR [rbp-0x20]
  40f763:	je     40f7aa <flatcc_json_parser_union@@Base+0x1ba>
  40f769:	mov    rax,QWORD PTR [rbp-0x10]
  40f76d:	mov    rdi,QWORD PTR [rax]
  40f770:	movzx  esi,WORD PTR [rbp-0x2a]
  40f774:	mov    rdx,QWORD PTR [rbp-0x50]
  40f778:	call   4090f0 <flatcc_builder_table_add_union@@Base>
  40f77d:	cmp    eax,0x0
  40f780:	je     40f7a5 <flatcc_json_parser_union@@Base+0x1b5>
  40f786:	mov    rdi,QWORD PTR [rbp-0x10]
  40f78a:	mov    rsi,QWORD PTR [rbp-0x18]
  40f78e:	mov    rdx,QWORD PTR [rbp-0x20]
  40f792:	mov    ecx,0x1c
  40f797:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f79c:	mov    QWORD PTR [rbp-0x8],rax
  40f7a0:	jmp    40f7b7 <flatcc_json_parser_union@@Base+0x1c7>
  40f7a5:	jmp    40f7aa <flatcc_json_parser_union@@Base+0x1ba>
  40f7aa:	jmp    40f7af <flatcc_json_parser_union@@Base+0x1bf>
  40f7af:	mov    rax,QWORD PTR [rbp-0x18]
  40f7b3:	mov    QWORD PTR [rbp-0x8],rax
  40f7b7:	mov    rax,QWORD PTR [rbp-0x8]
  40f7bb:	add    rsp,0x60
  40f7bf:	pop    rbp
  40f7c0:	ret    
  40f7c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040f7d0 <flatcc_json_parser_union_type@@Base>:
  40f7d0:	push   rbp
  40f7d1:	mov    rbp,rsp
  40f7d4:	sub    rsp,0x90
  40f7db:	mov    rax,QWORD PTR [rbp+0x18]
  40f7df:	mov    r10,QWORD PTR [rbp+0x10]
  40f7e3:	mov    QWORD PTR [rbp-0x10],rdi
  40f7e7:	mov    QWORD PTR [rbp-0x18],rsi
  40f7eb:	mov    QWORD PTR [rbp-0x20],rdx
  40f7ef:	mov    QWORD PTR [rbp-0x28],rcx
  40f7f3:	mov    WORD PTR [rbp-0x2a],r8w
  40f7f8:	mov    QWORD PTR [rbp-0x38],r9
  40f7fc:	mov    rcx,QWORD PTR [rbp-0x10]
  40f800:	mov    rdi,QWORD PTR [rcx]
  40f803:	mov    rsi,QWORD PTR [rbp-0x38]
  40f807:	mov    QWORD PTR [rbp-0x70],rax
  40f80b:	mov    QWORD PTR [rbp-0x78],r10
  40f80f:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40f814:	mov    QWORD PTR [rbp-0x40],rax
  40f818:	mov    rax,QWORD PTR [rbp-0x40]
  40f81c:	add    rax,0x10
  40f822:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40f82a:	add    rax,rcx
  40f82d:	mov    QWORD PTR [rbp-0x48],rax
  40f831:	mov    rax,QWORD PTR [rbp-0x48]
  40f835:	cmp    BYTE PTR [rax+0x14],0x0
  40f839:	je     40f85e <flatcc_json_parser_union_type@@Base+0x8e>
  40f83f:	mov    rdi,QWORD PTR [rbp-0x10]
  40f843:	mov    rsi,QWORD PTR [rbp-0x18]
  40f847:	mov    rdx,QWORD PTR [rbp-0x20]
  40f84b:	mov    ecx,0x1c
  40f850:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40f855:	mov    QWORD PTR [rbp-0x8],rax
  40f859:	jmp    40fa3f <flatcc_json_parser_union_type@@Base+0x26f>
  40f85e:	mov    rax,QWORD PTR [rbp-0x48]
  40f862:	mov    BYTE PTR [rax+0x14],0x1
  40f866:	mov    rdi,QWORD PTR [rbp-0x10]
  40f86a:	mov    rax,QWORD PTR [rbp-0x18]
  40f86e:	mov    QWORD PTR [rbp-0x58],rax
  40f872:	mov    rdx,QWORD PTR [rbp-0x20]
  40f876:	mov    rcx,QWORD PTR [rbp-0x48]
  40f87a:	add    rcx,0x15
  40f881:	mov    rsi,rax
  40f884:	call   40fa50 <flatcc_json_parser_union_type@@Base+0x280>
  40f889:	mov    QWORD PTR [rbp-0x18],rax
  40f88d:	mov    rax,QWORD PTR [rbp-0x58]
  40f891:	cmp    rax,QWORD PTR [rbp-0x18]
  40f895:	jne    40f8c1 <flatcc_json_parser_union_type@@Base+0xf1>
  40f89b:	mov    rdi,QWORD PTR [rbp-0x10]
  40f89f:	mov    rsi,QWORD PTR [rbp-0x18]
  40f8a3:	mov    rdx,QWORD PTR [rbp-0x20]
  40f8a7:	mov    rcx,QWORD PTR [rbp+0x10]
  40f8ab:	mov    rax,QWORD PTR [rbp-0x48]
  40f8af:	add    rax,0x15
  40f8b5:	mov    r8,rax
  40f8b8:	call   40fb10 <flatcc_json_parser_union_type@@Base+0x340>
  40f8bd:	mov    QWORD PTR [rbp-0x18],rax
  40f8c1:	mov    rax,QWORD PTR [rbp-0x48]
  40f8c5:	cmp    QWORD PTR [rax],0x0
  40f8c9:	jne    40f8ff <flatcc_json_parser_union_type@@Base+0x12f>
  40f8cf:	mov    rax,QWORD PTR [rbp-0x48]
  40f8d3:	movzx  ecx,BYTE PTR [rax+0x15]
  40f8d7:	cmp    ecx,0x0
  40f8da:	setne  dl
  40f8dd:	and    dl,0x1
  40f8e0:	movzx  ecx,dl
  40f8e3:	movsxd rax,ecx
  40f8e6:	mov    rsi,QWORD PTR [rbp-0x40]
  40f8ea:	add    rax,QWORD PTR [rsi+0x8]
  40f8ee:	mov    QWORD PTR [rsi+0x8],rax
  40f8f2:	mov    rax,QWORD PTR [rbp-0x18]
  40f8f6:	mov    QWORD PTR [rbp-0x8],rax
  40f8fa:	jmp    40fa3f <flatcc_json_parser_union_type@@Base+0x26f>
  40f8ff:	mov    rax,QWORD PTR [rbp-0x40]
  40f903:	cmp    QWORD PTR [rax+0x8],0x0
  40f908:	je     40f913 <flatcc_json_parser_union_type@@Base+0x143>
  40f90e:	jmp    40f932 <flatcc_json_parser_union_type@@Base+0x162>
  40f913:	lea    rdi,[rip+0x5109]        # 414a23 <flatcc_builder_padding_base@@Base+0x26b3>
  40f91a:	lea    rsi,[rip+0x5111]        # 414a32 <flatcc_builder_padding_base@@Base+0x26c2>
  40f921:	mov    edx,0x3c5
  40f926:	lea    rcx,[rip+0x5169]        # 414a96 <flatcc_builder_padding_base@@Base+0x2726>
  40f92d:	call   403060 <__assert_fail@plt>
  40f932:	mov    rax,QWORD PTR [rbp-0x40]
  40f936:	mov    rcx,QWORD PTR [rax+0x8]
  40f93a:	add    rcx,0xffffffffffffffff
  40f941:	mov    QWORD PTR [rax+0x8],rcx
  40f945:	mov    rax,QWORD PTR [rbp-0x10]
  40f949:	mov    edx,DWORD PTR [rax+0x18]
  40f94c:	mov    DWORD PTR [rbp-0x5c],edx
  40f94f:	mov    rax,QWORD PTR [rbp-0x10]
  40f953:	mov    rax,QWORD PTR [rax+0x8]
  40f957:	mov    QWORD PTR [rbp-0x68],rax
  40f95b:	mov    rax,QWORD PTR [rbp-0x48]
  40f95f:	mov    edx,DWORD PTR [rax+0x10]
  40f962:	mov    rax,QWORD PTR [rbp-0x10]
  40f966:	mov    DWORD PTR [rax+0x18],edx
  40f969:	mov    rax,QWORD PTR [rbp-0x48]
  40f96d:	mov    rax,QWORD PTR [rax+0x8]
  40f971:	mov    rcx,QWORD PTR [rbp-0x10]
  40f975:	mov    QWORD PTR [rcx+0x8],rax
  40f979:	mov    rax,QWORD PTR [rbp-0x48]
  40f97d:	mov    sil,BYTE PTR [rax+0x15]
  40f981:	mov    BYTE PTR [rbp-0x50],sil
  40f985:	mov    rax,QWORD PTR [rbp-0x20]
  40f989:	mov    rcx,QWORD PTR [rbp+0x18]
  40f98d:	mov    rdi,QWORD PTR [rbp-0x10]
  40f991:	mov    r8,QWORD PTR [rbp-0x48]
  40f995:	mov    rsi,QWORD PTR [r8]
  40f998:	mov    rdx,QWORD PTR [rbp-0x20]
  40f99c:	mov    r8,QWORD PTR [rbp-0x48]
  40f9a0:	mov    r9b,BYTE PTR [r8+0x15]
  40f9a4:	lea    r8,[rbp-0x50]
  40f9a8:	add    r8,0x4
  40f9af:	movzx  r10d,r9b
  40f9b3:	mov    QWORD PTR [rbp-0x80],rcx
  40f9b7:	mov    ecx,r10d
  40f9ba:	mov    r11,QWORD PTR [rbp-0x80]
  40f9be:	mov    QWORD PTR [rbp-0x88],rax
  40f9c5:	call   r11
  40f9c8:	mov    rdx,QWORD PTR [rbp-0x88]
  40f9cf:	cmp    rdx,rax
  40f9d2:	jne    40f9e5 <flatcc_json_parser_union_type@@Base+0x215>
  40f9d8:	mov    rax,QWORD PTR [rbp-0x20]
  40f9dc:	mov    QWORD PTR [rbp-0x8],rax
  40f9e0:	jmp    40fa3f <flatcc_json_parser_union_type@@Base+0x26f>
  40f9e5:	mov    rax,QWORD PTR [rbp-0x10]
  40f9e9:	mov    rdi,QWORD PTR [rax]
  40f9ec:	movzx  esi,WORD PTR [rbp-0x2a]
  40f9f0:	mov    rdx,QWORD PTR [rbp-0x50]
  40f9f4:	call   4090f0 <flatcc_builder_table_add_union@@Base>
  40f9f9:	cmp    eax,0x0
  40f9fc:	je     40fa21 <flatcc_json_parser_union_type@@Base+0x251>
  40fa02:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa06:	mov    rsi,QWORD PTR [rbp-0x18]
  40fa0a:	mov    rdx,QWORD PTR [rbp-0x20]
  40fa0e:	mov    ecx,0x1c
  40fa13:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40fa18:	mov    QWORD PTR [rbp-0x8],rax
  40fa1c:	jmp    40fa3f <flatcc_json_parser_union_type@@Base+0x26f>
  40fa21:	mov    eax,DWORD PTR [rbp-0x5c]
  40fa24:	mov    rcx,QWORD PTR [rbp-0x10]
  40fa28:	mov    DWORD PTR [rcx+0x18],eax
  40fa2b:	mov    rcx,QWORD PTR [rbp-0x68]
  40fa2f:	mov    rdx,QWORD PTR [rbp-0x10]
  40fa33:	mov    QWORD PTR [rdx+0x8],rcx
  40fa37:	mov    rcx,QWORD PTR [rbp-0x18]
  40fa3b:	mov    QWORD PTR [rbp-0x8],rcx
  40fa3f:	mov    rax,QWORD PTR [rbp-0x8]
  40fa43:	add    rsp,0x90
  40fa4a:	pop    rbp
  40fa4b:	ret    
  40fa4c:	nop    DWORD PTR [rax+0x0]
  40fa50:	push   rbp
  40fa51:	mov    rbp,rsp
  40fa54:	sub    rsp,0x40
  40fa58:	mov    QWORD PTR [rbp-0x10],rdi
  40fa5c:	mov    QWORD PTR [rbp-0x18],rsi
  40fa60:	mov    QWORD PTR [rbp-0x20],rdx
  40fa64:	mov    QWORD PTR [rbp-0x28],rcx
  40fa68:	mov    QWORD PTR [rbp-0x30],0x0
  40fa70:	mov    DWORD PTR [rbp-0x34],0x0
  40fa77:	mov    rax,QWORD PTR [rbp-0x18]
  40fa7b:	mov    QWORD PTR [rbp-0x40],rax
  40fa7f:	mov    rax,QWORD PTR [rbp-0x28]
  40fa83:	mov    BYTE PTR [rax],0x0
  40fa86:	mov    rax,QWORD PTR [rbp-0x18]
  40fa8a:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa8e:	jne    40faa1 <flatcc_json_parser_union_type@@Base+0x2d1>
  40fa94:	mov    rax,QWORD PTR [rbp-0x18]
  40fa98:	mov    QWORD PTR [rbp-0x8],rax
  40fa9c:	jmp    40faf9 <flatcc_json_parser_union_type@@Base+0x329>
  40faa1:	mov    rdi,QWORD PTR [rbp-0x10]
  40faa5:	mov    rsi,QWORD PTR [rbp-0x18]
  40faa9:	mov    rdx,QWORD PTR [rbp-0x20]
  40faad:	lea    rcx,[rbp-0x34]
  40fab1:	lea    r8,[rbp-0x30]
  40fab5:	call   40e940 <flatcc_json_parser_integer@@Base>
  40faba:	mov    QWORD PTR [rbp-0x18],rax
  40fabe:	mov    rax,QWORD PTR [rbp-0x18]
  40fac2:	cmp    rax,QWORD PTR [rbp-0x40]
  40fac6:	je     40faf1 <flatcc_json_parser_union_type@@Base+0x321>
  40facc:	mov    rdi,QWORD PTR [rbp-0x10]
  40fad0:	mov    rsi,QWORD PTR [rbp-0x18]
  40fad4:	mov    rdx,QWORD PTR [rbp-0x20]
  40fad8:	mov    ecx,DWORD PTR [rbp-0x34]
  40fadb:	mov    r8,QWORD PTR [rbp-0x30]
  40fadf:	mov    r9,QWORD PTR [rbp-0x28]
  40fae3:	call   4117f0 <flatcc_json_parser_struct_as_root@@Base+0x1020>
  40fae8:	mov    QWORD PTR [rbp-0x8],rax
  40faec:	jmp    40faf9 <flatcc_json_parser_union_type@@Base+0x329>
  40faf1:	mov    rax,QWORD PTR [rbp-0x18]
  40faf5:	mov    QWORD PTR [rbp-0x8],rax
  40faf9:	mov    rax,QWORD PTR [rbp-0x8]
  40fafd:	add    rsp,0x40
  40fb01:	pop    rbp
  40fb02:	ret    
  40fb03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb0d:	nop    DWORD PTR [rax]
  40fb10:	push   rbp
  40fb11:	mov    rbp,rsp
  40fb14:	sub    rsp,0x70
  40fb18:	mov    QWORD PTR [rbp-0x10],rdi
  40fb1c:	mov    QWORD PTR [rbp-0x18],rsi
  40fb20:	mov    QWORD PTR [rbp-0x20],rdx
  40fb24:	mov    QWORD PTR [rbp-0x28],rcx
  40fb28:	mov    QWORD PTR [rbp-0x30],r8
  40fb2c:	mov    BYTE PTR [rbp-0x41],0x0
  40fb30:	mov    DWORD PTR [rbp-0x5c],0x0
  40fb37:	mov    rax,QWORD PTR [rbp-0x30]
  40fb3b:	mov    BYTE PTR [rax],0x0
  40fb3e:	mov    rdi,QWORD PTR [rbp-0x10]
  40fb42:	mov    rsi,QWORD PTR [rbp-0x18]
  40fb46:	mov    rdx,QWORD PTR [rbp-0x20]
  40fb4a:	call   411890 <flatcc_json_parser_struct_as_root@@Base+0x10c0>
  40fb4f:	mov    QWORD PTR [rbp-0x18],rax
  40fb53:	mov    rax,QWORD PTR [rbp-0x18]
  40fb57:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb5b:	jne    40fb6e <flatcc_json_parser_union_type@@Base+0x39e>
  40fb61:	mov    rax,QWORD PTR [rbp-0x18]
  40fb65:	mov    QWORD PTR [rbp-0x8],rax
  40fb69:	jmp    40fccf <flatcc_json_parser_union_type@@Base+0x4ff>
  40fb6e:	jmp    40fb73 <flatcc_json_parser_union_type@@Base+0x3a3>
  40fb73:	mov    rax,QWORD PTR [rbp-0x28]
  40fb77:	mov    QWORD PTR [rbp-0x38],rax
  40fb7b:	mov    rax,QWORD PTR [rbp-0x38]
  40fb7f:	mov    rax,QWORD PTR [rax]
  40fb82:	mov    rdi,QWORD PTR [rbp-0x10]
  40fb86:	mov    rcx,QWORD PTR [rbp-0x18]
  40fb8a:	mov    QWORD PTR [rbp-0x40],rcx
  40fb8e:	mov    rdx,QWORD PTR [rbp-0x20]
  40fb92:	mov    rsi,rcx
  40fb95:	lea    rcx,[rbp-0x54]
  40fb99:	lea    r8,[rbp-0x50]
  40fb9d:	lea    r9,[rbp-0x58]
  40fba1:	call   rax
  40fba3:	mov    QWORD PTR [rbp-0x18],rax
  40fba7:	mov    rax,QWORD PTR [rbp-0x18]
  40fbab:	cmp    rax,QWORD PTR [rbp-0x20]
  40fbaf:	jne    40fbc2 <flatcc_json_parser_union_type@@Base+0x3f2>
  40fbb5:	mov    rax,QWORD PTR [rbp-0x18]
  40fbb9:	mov    QWORD PTR [rbp-0x8],rax
  40fbbd:	jmp    40fccf <flatcc_json_parser_union_type@@Base+0x4ff>
  40fbc2:	jmp    40fbc7 <flatcc_json_parser_union_type@@Base+0x3f7>
  40fbc7:	xor    eax,eax
  40fbc9:	mov    rcx,QWORD PTR [rbp-0x18]
  40fbcd:	cmp    rcx,QWORD PTR [rbp-0x40]
  40fbd1:	mov    BYTE PTR [rbp-0x5d],al
  40fbd4:	jne    40fbf7 <flatcc_json_parser_union_type@@Base+0x427>
  40fbda:	mov    rax,QWORD PTR [rbp-0x38]
  40fbde:	mov    rcx,rax
  40fbe1:	add    rcx,0x8
  40fbe8:	mov    QWORD PTR [rbp-0x38],rcx
  40fbec:	cmp    QWORD PTR [rax+0x8],0x0
  40fbf1:	setne  dl
  40fbf4:	mov    BYTE PTR [rbp-0x5d],dl
  40fbf7:	mov    al,BYTE PTR [rbp-0x5d]
  40fbfa:	test   al,0x1
  40fbfc:	jne    40fb7b <flatcc_json_parser_union_type@@Base+0x3ab>
  40fc02:	mov    rax,QWORD PTR [rbp-0x40]
  40fc06:	cmp    rax,QWORD PTR [rbp-0x18]
  40fc0a:	jne    40fc2f <flatcc_json_parser_union_type@@Base+0x45f>
  40fc10:	mov    rdi,QWORD PTR [rbp-0x10]
  40fc14:	mov    rsi,QWORD PTR [rbp-0x18]
  40fc18:	mov    rdx,QWORD PTR [rbp-0x20]
  40fc1c:	mov    ecx,0x17
  40fc21:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40fc26:	mov    QWORD PTR [rbp-0x8],rax
  40fc2a:	jmp    40fccf <flatcc_json_parser_union_type@@Base+0x4ff>
  40fc2f:	mov    eax,DWORD PTR [rbp-0x5c]
  40fc32:	mov    ecx,eax
  40fc34:	add    ecx,0x1
  40fc37:	mov    DWORD PTR [rbp-0x5c],ecx
  40fc3a:	cmp    eax,0x0
  40fc3d:	je     40fc70 <flatcc_json_parser_union_type@@Base+0x4a0>
  40fc43:	mov    rax,QWORD PTR [rbp-0x10]
  40fc47:	cmp    DWORD PTR [rax+0x14],0x0
  40fc4b:	je     40fc70 <flatcc_json_parser_union_type@@Base+0x4a0>
  40fc51:	mov    rdi,QWORD PTR [rbp-0x10]
  40fc55:	mov    rsi,QWORD PTR [rbp-0x18]
  40fc59:	mov    rdx,QWORD PTR [rbp-0x20]
  40fc5d:	mov    ecx,0xe
  40fc62:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40fc67:	mov    QWORD PTR [rbp-0x8],rax
  40fc6b:	jmp    40fccf <flatcc_json_parser_union_type@@Base+0x4ff>
  40fc70:	mov    rax,QWORD PTR [rbp-0x20]
  40fc74:	mov    rdi,QWORD PTR [rbp-0x10]
  40fc78:	mov    rsi,QWORD PTR [rbp-0x18]
  40fc7c:	mov    rdx,QWORD PTR [rbp-0x20]
  40fc80:	mov    ecx,DWORD PTR [rbp-0x54]
  40fc83:	mov    r8,QWORD PTR [rbp-0x50]
  40fc87:	lea    r9,[rbp-0x41]
  40fc8b:	mov    QWORD PTR [rbp-0x68],rax
  40fc8f:	call   4117f0 <flatcc_json_parser_struct_as_root@@Base+0x1020>
  40fc94:	mov    rdx,QWORD PTR [rbp-0x68]
  40fc98:	cmp    rdx,rax
  40fc9b:	jne    40fcae <flatcc_json_parser_union_type@@Base+0x4de>
  40fca1:	mov    rax,QWORD PTR [rbp-0x20]
  40fca5:	mov    QWORD PTR [rbp-0x8],rax
  40fca9:	jmp    40fccf <flatcc_json_parser_union_type@@Base+0x4ff>
  40fcae:	movzx  eax,BYTE PTR [rbp-0x41]
  40fcb2:	mov    rcx,QWORD PTR [rbp-0x30]
  40fcb6:	movzx  edx,BYTE PTR [rcx]
  40fcb9:	add    edx,eax
  40fcbb:	mov    BYTE PTR [rcx],dl
  40fcbd:	cmp    DWORD PTR [rbp-0x58],0x0
  40fcc1:	jne    40fb73 <flatcc_json_parser_union_type@@Base+0x3a3>
  40fcc7:	mov    rax,QWORD PTR [rbp-0x18]
  40fccb:	mov    QWORD PTR [rbp-0x8],rax
  40fccf:	mov    rax,QWORD PTR [rbp-0x8]
  40fcd3:	add    rsp,0x70
  40fcd7:	pop    rbp
  40fcd8:	ret    
  40fcd9:	nop    DWORD PTR [rax+0x0]

000000000040fce0 <flatcc_json_parser_union_vector@@Base>:
  40fce0:	push   rbp
  40fce1:	mov    rbp,rsp
  40fce4:	sub    rsp,0x60
  40fce8:	mov    rax,QWORD PTR [rbp+0x10]
  40fcec:	mov    QWORD PTR [rbp-0x10],rdi
  40fcf0:	mov    QWORD PTR [rbp-0x18],rsi
  40fcf4:	mov    QWORD PTR [rbp-0x20],rdx
  40fcf8:	mov    QWORD PTR [rbp-0x28],rcx
  40fcfc:	mov    WORD PTR [rbp-0x2a],r8w
  40fd01:	mov    QWORD PTR [rbp-0x38],r9
  40fd05:	mov    rcx,QWORD PTR [rbp-0x10]
  40fd09:	mov    rdi,QWORD PTR [rcx]
  40fd0c:	mov    rsi,QWORD PTR [rbp-0x38]
  40fd10:	mov    QWORD PTR [rbp-0x50],rax
  40fd14:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40fd19:	mov    QWORD PTR [rbp-0x40],rax
  40fd1d:	mov    rax,QWORD PTR [rbp-0x40]
  40fd21:	add    rax,0x10
  40fd27:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40fd2f:	add    rax,rcx
  40fd32:	mov    QWORD PTR [rbp-0x48],rax
  40fd36:	mov    rax,QWORD PTR [rbp-0x48]
  40fd3a:	cmp    QWORD PTR [rax],0x0
  40fd3e:	je     40fd63 <flatcc_json_parser_union_vector@@Base+0x83>
  40fd44:	mov    rdi,QWORD PTR [rbp-0x10]
  40fd48:	mov    rsi,QWORD PTR [rbp-0x18]
  40fd4c:	mov    rdx,QWORD PTR [rbp-0x20]
  40fd50:	mov    ecx,0x1c
  40fd55:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40fd5a:	mov    QWORD PTR [rbp-0x8],rax
  40fd5e:	jmp    40fe17 <flatcc_json_parser_union_vector@@Base+0x137>
  40fd63:	mov    rax,QWORD PTR [rbp-0x48]
  40fd67:	cmp    BYTE PTR [rax+0x14],0x0
  40fd6b:	jne    40fdc6 <flatcc_json_parser_union_vector@@Base+0xe6>
  40fd71:	mov    rax,QWORD PTR [rbp-0x40]
  40fd75:	mov    rcx,QWORD PTR [rax+0x8]
  40fd79:	add    rcx,0x1
  40fd80:	mov    QWORD PTR [rax+0x8],rcx
  40fd84:	mov    rax,QWORD PTR [rbp-0x10]
  40fd88:	mov    edx,DWORD PTR [rax+0x18]
  40fd8b:	mov    rax,QWORD PTR [rbp-0x48]
  40fd8f:	mov    DWORD PTR [rax+0x10],edx
  40fd92:	mov    rax,QWORD PTR [rbp-0x10]
  40fd96:	mov    rax,QWORD PTR [rax+0x8]
  40fd9a:	mov    rcx,QWORD PTR [rbp-0x48]
  40fd9e:	mov    QWORD PTR [rcx+0x8],rax
  40fda2:	mov    rdi,QWORD PTR [rbp-0x10]
  40fda6:	mov    rax,QWORD PTR [rbp-0x18]
  40fdaa:	mov    rcx,QWORD PTR [rbp-0x48]
  40fdae:	mov    QWORD PTR [rcx],rax
  40fdb1:	mov    rdx,QWORD PTR [rbp-0x20]
  40fdb5:	mov    rsi,rax
  40fdb8:	call   40d6d0 <flatcc_json_parser_generic_json@@Base>
  40fdbd:	mov    QWORD PTR [rbp-0x18],rax
  40fdc1:	jmp    40fe0f <flatcc_json_parser_union_vector@@Base+0x12f>
  40fdc6:	mov    rax,QWORD PTR [rbp-0x40]
  40fdca:	mov    rcx,QWORD PTR [rax+0x8]
  40fdce:	add    rcx,0xffffffffffffffff
  40fdd5:	mov    QWORD PTR [rax+0x8],rcx
  40fdd9:	mov    rdi,QWORD PTR [rbp-0x10]
  40fddd:	mov    rsi,QWORD PTR [rbp-0x18]
  40fde1:	mov    rdx,QWORD PTR [rbp-0x20]
  40fde5:	mov    rax,QWORD PTR [rbp-0x48]
  40fde9:	mov    rcx,QWORD PTR [rax+0x20]
  40fded:	mov    rax,QWORD PTR [rbp-0x48]
  40fdf1:	mov    r8d,DWORD PTR [rax+0x18]
  40fdf5:	mov    r9w,WORD PTR [rbp-0x2a]
  40fdfa:	mov    rax,QWORD PTR [rbp+0x10]
  40fdfe:	movzx  r9d,r9w
  40fe02:	mov    QWORD PTR [rsp],rax
  40fe06:	call   40fe30 <flatcc_json_parser_union_vector@@Base+0x150>
  40fe0b:	mov    QWORD PTR [rbp-0x18],rax
  40fe0f:	mov    rax,QWORD PTR [rbp-0x18]
  40fe13:	mov    QWORD PTR [rbp-0x8],rax
  40fe17:	mov    rax,QWORD PTR [rbp-0x8]
  40fe1b:	add    rsp,0x60
  40fe1f:	pop    rbp
  40fe20:	ret    
  40fe21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe30:	push   rbp
  40fe31:	mov    rbp,rsp
  40fe34:	sub    rsp,0x60
  40fe38:	mov    rax,QWORD PTR [rbp+0x10]
  40fe3c:	mov    QWORD PTR [rbp-0x10],rdi
  40fe40:	mov    QWORD PTR [rbp-0x18],rsi
  40fe44:	mov    QWORD PTR [rbp-0x20],rdx
  40fe48:	mov    QWORD PTR [rbp-0x28],rcx
  40fe4c:	mov    DWORD PTR [rbp-0x2c],r8d
  40fe50:	mov    WORD PTR [rbp-0x2e],r9w
  40fe55:	mov    DWORD PTR [rbp-0x34],0x0
  40fe5c:	mov    rcx,QWORD PTR [rbp-0x10]
  40fe60:	mov    rdi,QWORD PTR [rcx]
  40fe63:	mov    QWORD PTR [rbp-0x60],rax
  40fe67:	call   407730 <flatcc_builder_start_offset_vector@@Base>
  40fe6c:	cmp    eax,0x0
  40fe6f:	je     40fe7a <flatcc_json_parser_union_vector@@Base+0x19a>
  40fe75:	jmp    410024 <flatcc_json_parser_union_vector@@Base+0x344>
  40fe7a:	mov    rdi,QWORD PTR [rbp-0x10]
  40fe7e:	mov    rsi,QWORD PTR [rbp-0x18]
  40fe82:	mov    rdx,QWORD PTR [rbp-0x20]
  40fe86:	lea    rcx,[rbp-0x4c]
  40fe8a:	call   4104d0 <flatcc_json_parser_union_type_vector@@Base+0x480>
  40fe8f:	mov    QWORD PTR [rbp-0x18],rax
  40fe93:	mov    QWORD PTR [rbp-0x58],0x0
  40fe9b:	cmp    DWORD PTR [rbp-0x4c],0x0
  40fe9f:	je     40ff85 <flatcc_json_parser_union_vector@@Base+0x2a5>
  40fea5:	mov    rax,QWORD PTR [rbp-0x58]
  40fea9:	mov    ecx,DWORD PTR [rbp-0x2c]
  40feac:	mov    edx,ecx
  40feae:	cmp    rax,rdx
  40feb1:	jne    40fed6 <flatcc_json_parser_union_vector@@Base+0x1f6>
  40feb7:	mov    rdi,QWORD PTR [rbp-0x10]
  40febb:	mov    rsi,QWORD PTR [rbp-0x18]
  40febf:	mov    rdx,QWORD PTR [rbp-0x20]
  40fec3:	mov    ecx,0x1e
  40fec8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40fecd:	mov    QWORD PTR [rbp-0x8],rax
  40fed1:	jmp    41003e <flatcc_json_parser_union_vector@@Base+0x35e>
  40fed6:	mov    rax,QWORD PTR [rbp-0x10]
  40feda:	mov    rdi,QWORD PTR [rax]
  40fedd:	mov    rsi,QWORD PTR [rbp-0x28]
  40fee1:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40fee6:	mov    QWORD PTR [rbp-0x48],rax
  40feea:	mov    rax,QWORD PTR [rbp+0x10]
  40feee:	mov    rdi,QWORD PTR [rbp-0x10]
  40fef2:	mov    rsi,QWORD PTR [rbp-0x18]
  40fef6:	mov    rdx,QWORD PTR [rbp-0x20]
  40fefa:	mov    rcx,QWORD PTR [rbp-0x48]
  40fefe:	mov    r8,QWORD PTR [rbp-0x58]
  40ff02:	movzx  ecx,BYTE PTR [rcx+r8*1]
  40ff07:	lea    r8,[rbp-0x34]
  40ff0b:	call   rax
  40ff0d:	mov    QWORD PTR [rbp-0x18],rax
  40ff11:	mov    rax,QWORD PTR [rbp-0x18]
  40ff15:	cmp    rax,QWORD PTR [rbp-0x20]
  40ff19:	jne    40ff2c <flatcc_json_parser_union_vector@@Base+0x24c>
  40ff1f:	mov    rax,QWORD PTR [rbp-0x18]
  40ff23:	mov    QWORD PTR [rbp-0x8],rax
  40ff27:	jmp    41003e <flatcc_json_parser_union_vector@@Base+0x35e>
  40ff2c:	mov    rax,QWORD PTR [rbp-0x10]
  40ff30:	mov    rdi,QWORD PTR [rax]
  40ff33:	mov    esi,0x1
  40ff38:	call   406f20 <flatcc_builder_extend_offset_vector@@Base>
  40ff3d:	mov    QWORD PTR [rbp-0x40],rax
  40ff41:	cmp    rax,0x0
  40ff45:	jne    40ff50 <flatcc_json_parser_union_vector@@Base+0x270>
  40ff4b:	jmp    410024 <flatcc_json_parser_union_vector@@Base+0x344>
  40ff50:	mov    eax,DWORD PTR [rbp-0x34]
  40ff53:	mov    rcx,QWORD PTR [rbp-0x40]
  40ff57:	mov    DWORD PTR [rcx],eax
  40ff59:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff5d:	mov    rsi,QWORD PTR [rbp-0x18]
  40ff61:	mov    rdx,QWORD PTR [rbp-0x20]
  40ff65:	lea    rcx,[rbp-0x4c]
  40ff69:	call   40e660 <flatcc_json_parser_float@@Base+0x890>
  40ff6e:	mov    QWORD PTR [rbp-0x18],rax
  40ff72:	mov    rax,QWORD PTR [rbp-0x58]
  40ff76:	add    rax,0x1
  40ff7c:	mov    QWORD PTR [rbp-0x58],rax
  40ff80:	jmp    40fe9b <flatcc_json_parser_union_vector@@Base+0x1bb>
  40ff85:	mov    rax,QWORD PTR [rbp-0x58]
  40ff89:	mov    ecx,DWORD PTR [rbp-0x2c]
  40ff8c:	mov    edx,ecx
  40ff8e:	cmp    rax,rdx
  40ff91:	je     40ffb6 <flatcc_json_parser_union_vector@@Base+0x2d6>
  40ff97:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff9b:	mov    rsi,QWORD PTR [rbp-0x18]
  40ff9f:	mov    rdx,QWORD PTR [rbp-0x20]
  40ffa3:	mov    ecx,0x1e
  40ffa8:	call   40c440 <flatcc_json_parser_set_error@@Base>
  40ffad:	mov    QWORD PTR [rbp-0x8],rax
  40ffb1:	jmp    41003e <flatcc_json_parser_union_vector@@Base+0x35e>
  40ffb6:	mov    rax,QWORD PTR [rbp-0x10]
  40ffba:	mov    rdi,QWORD PTR [rax]
  40ffbd:	mov    rsi,QWORD PTR [rbp-0x28]
  40ffc1:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  40ffc6:	mov    QWORD PTR [rbp-0x48],rax
  40ffca:	mov    rax,QWORD PTR [rbp-0x10]
  40ffce:	mov    rdi,QWORD PTR [rax]
  40ffd1:	mov    rsi,QWORD PTR [rbp-0x48]
  40ffd5:	call   409010 <flatcc_builder_end_offset_vector_for_unions@@Base>
  40ffda:	mov    DWORD PTR [rbp-0x34],eax
  40ffdd:	cmp    eax,0x0
  40ffe0:	jne    40ffeb <flatcc_json_parser_union_vector@@Base+0x30b>
  40ffe6:	jmp    410024 <flatcc_json_parser_union_vector@@Base+0x344>
  40ffeb:	mov    rax,QWORD PTR [rbp-0x10]
  40ffef:	mov    rdi,QWORD PTR [rax]
  40fff2:	movzx  esi,WORD PTR [rbp-0x2e]
  40fff6:	call   409290 <flatcc_builder_table_add_offset@@Base>
  40fffb:	mov    QWORD PTR [rbp-0x40],rax
  40ffff:	cmp    rax,0x0
  410003:	jne    41000e <flatcc_json_parser_union_vector@@Base+0x32e>
  410009:	jmp    410024 <flatcc_json_parser_union_vector@@Base+0x344>
  41000e:	mov    eax,DWORD PTR [rbp-0x34]
  410011:	mov    rcx,QWORD PTR [rbp-0x40]
  410015:	mov    DWORD PTR [rcx],eax
  410017:	mov    rcx,QWORD PTR [rbp-0x18]
  41001b:	mov    QWORD PTR [rbp-0x8],rcx
  41001f:	jmp    41003e <flatcc_json_parser_union_vector@@Base+0x35e>
  410024:	mov    rdi,QWORD PTR [rbp-0x10]
  410028:	mov    rsi,QWORD PTR [rbp-0x18]
  41002c:	mov    rdx,QWORD PTR [rbp-0x20]
  410030:	mov    ecx,0x21
  410035:	call   40c440 <flatcc_json_parser_set_error@@Base>
  41003a:	mov    QWORD PTR [rbp-0x8],rax
  41003e:	mov    rax,QWORD PTR [rbp-0x8]
  410042:	add    rsp,0x60
  410046:	pop    rbp
  410047:	ret    
  410048:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410050 <flatcc_json_parser_union_type_vector@@Base>:
  410050:	push   rbp
  410051:	mov    rbp,rsp
  410054:	sub    rsp,0xd0
  41005b:	mov    rax,QWORD PTR [rbp+0x20]
  41005f:	mov    r10,QWORD PTR [rbp+0x18]
  410063:	mov    r11,QWORD PTR [rbp+0x10]
  410067:	mov    QWORD PTR [rbp-0x10],rdi
  41006b:	mov    QWORD PTR [rbp-0x18],rsi
  41006f:	mov    QWORD PTR [rbp-0x20],rdx
  410073:	mov    QWORD PTR [rbp-0x28],rcx
  410077:	mov    WORD PTR [rbp-0x2a],r8w
  41007c:	mov    QWORD PTR [rbp-0x38],r9
  410080:	mov    rcx,QWORD PTR [rbp-0x10]
  410084:	mov    rdi,QWORD PTR [rcx]
  410087:	mov    rsi,QWORD PTR [rbp-0x38]
  41008b:	mov    QWORD PTR [rbp-0xa8],rax
  410092:	mov    QWORD PTR [rbp-0xb0],r10
  410099:	mov    QWORD PTR [rbp-0xb8],r11
  4100a0:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  4100a5:	mov    QWORD PTR [rbp-0x40],rax
  4100a9:	mov    rax,QWORD PTR [rbp-0x40]
  4100ad:	add    rax,0x10
  4100b3:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  4100bb:	add    rax,rcx
  4100be:	mov    QWORD PTR [rbp-0x48],rax
  4100c2:	mov    rax,QWORD PTR [rbp-0x48]
  4100c6:	cmp    BYTE PTR [rax+0x14],0x0
  4100ca:	je     4100ef <flatcc_json_parser_union_type_vector@@Base+0x9f>
  4100d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4100d4:	mov    rsi,QWORD PTR [rbp-0x18]
  4100d8:	mov    rdx,QWORD PTR [rbp-0x20]
  4100dc:	mov    ecx,0x1c
  4100e1:	call   40c440 <flatcc_json_parser_set_error@@Base>
  4100e6:	mov    QWORD PTR [rbp-0x8],rax
  4100ea:	jmp    4104b6 <flatcc_json_parser_union_type_vector@@Base+0x466>
  4100ef:	mov    rax,QWORD PTR [rbp-0x48]
  4100f3:	mov    BYTE PTR [rax+0x14],0x1
  4100f7:	mov    rax,QWORD PTR [rbp-0x10]
  4100fb:	mov    rdi,QWORD PTR [rax]
  4100fe:	mov    esi,0x1
  410103:	mov    edx,0x1
  410108:	mov    ecx,0xffffffff
  41010d:	call   407650 <flatcc_builder_start_vector@@Base>
  410112:	cmp    eax,0x0
  410115:	je     410120 <flatcc_json_parser_union_type_vector@@Base+0xd0>
  41011b:	jmp    41049c <flatcc_json_parser_union_type_vector@@Base+0x44c>
  410120:	mov    rdi,QWORD PTR [rbp-0x10]
  410124:	mov    rsi,QWORD PTR [rbp-0x18]
  410128:	mov    rdx,QWORD PTR [rbp-0x20]
  41012c:	lea    rcx,[rbp-0x64]
  410130:	call   4104d0 <flatcc_json_parser_union_type_vector@@Base+0x480>
  410135:	mov    QWORD PTR [rbp-0x18],rax
  410139:	cmp    DWORD PTR [rbp-0x64],0x0
  41013d:	je     410253 <flatcc_json_parser_union_type_vector@@Base+0x203>
  410143:	mov    rax,QWORD PTR [rbp-0x10]
  410147:	mov    rdi,QWORD PTR [rax]
  41014a:	mov    esi,0x1
  41014f:	call   406c00 <flatcc_builder_extend_vector@@Base>
  410154:	mov    QWORD PTR [rbp-0x70],rax
  410158:	cmp    rax,0x0
  41015c:	jne    410167 <flatcc_json_parser_union_type_vector@@Base+0x117>
  410162:	jmp    41049c <flatcc_json_parser_union_type_vector@@Base+0x44c>
  410167:	mov    rdi,QWORD PTR [rbp-0x10]
  41016b:	mov    rax,QWORD PTR [rbp-0x18]
  41016f:	mov    QWORD PTR [rbp-0x50],rax
  410173:	mov    rdx,QWORD PTR [rbp-0x20]
  410177:	mov    rsi,rax
  41017a:	lea    rcx,[rbp-0x65]
  41017e:	call   40fa50 <flatcc_json_parser_union_type@@Base+0x280>
  410183:	mov    QWORD PTR [rbp-0x18],rax
  410187:	mov    rax,QWORD PTR [rbp-0x50]
  41018b:	cmp    rax,QWORD PTR [rbp-0x18]
  41018f:	jne    4101df <flatcc_json_parser_union_type_vector@@Base+0x18f>
  410195:	mov    rdi,QWORD PTR [rbp-0x10]
  410199:	mov    rax,QWORD PTR [rbp-0x18]
  41019d:	mov    QWORD PTR [rbp-0x50],rax
  4101a1:	mov    rdx,QWORD PTR [rbp-0x20]
  4101a5:	mov    rcx,QWORD PTR [rbp+0x10]
  4101a9:	mov    rsi,rax
  4101ac:	lea    r8,[rbp-0x65]
  4101b0:	call   40fb10 <flatcc_json_parser_union_type@@Base+0x340>
  4101b5:	mov    QWORD PTR [rbp-0x18],rax
  4101b9:	mov    rax,QWORD PTR [rbp-0x18]
  4101bd:	cmp    rax,QWORD PTR [rbp-0x50]
  4101c1:	je     4101d5 <flatcc_json_parser_union_type_vector@@Base+0x185>
  4101c7:	mov    rax,QWORD PTR [rbp-0x18]
  4101cb:	cmp    rax,QWORD PTR [rbp-0x20]
  4101cf:	jne    4101da <flatcc_json_parser_union_type_vector@@Base+0x18a>
  4101d5:	jmp    41049c <flatcc_json_parser_union_type_vector@@Base+0x44c>
  4101da:	jmp    4101df <flatcc_json_parser_union_type_vector@@Base+0x18f>
  4101df:	mov    rax,QWORD PTR [rbp+0x20]
  4101e3:	movzx  edi,BYTE PTR [rbp-0x65]
  4101e7:	call   rax
  4101e9:	cmp    eax,0x0
  4101ec:	jne    410228 <flatcc_json_parser_union_type_vector@@Base+0x1d8>
  4101f2:	mov    rax,QWORD PTR [rbp-0x10]
  4101f6:	mov    ecx,DWORD PTR [rax+0x10]
  4101f9:	and    ecx,0x1
  4101fc:	cmp    ecx,0x0
  4101ff:	jne    410224 <flatcc_json_parser_union_type_vector@@Base+0x1d4>
  410205:	mov    rdi,QWORD PTR [rbp-0x10]
  410209:	mov    rsi,QWORD PTR [rbp-0x18]
  41020d:	mov    rdx,QWORD PTR [rbp-0x20]
  410211:	mov    ecx,0xf
  410216:	call   40c440 <flatcc_json_parser_set_error@@Base>
  41021b:	mov    QWORD PTR [rbp-0x8],rax
  41021f:	jmp    4104b6 <flatcc_json_parser_union_type_vector@@Base+0x466>
  410224:	mov    BYTE PTR [rbp-0x65],0x0
  410228:	mov    rdi,QWORD PTR [rbp-0x70]
  41022c:	movzx  esi,BYTE PTR [rbp-0x65]
  410230:	call   4105c0 <flatcc_json_parser_union_type_vector@@Base+0x570>
  410235:	mov    rdi,QWORD PTR [rbp-0x10]
  410239:	mov    rsi,QWORD PTR [rbp-0x18]
  41023d:	mov    rdx,QWORD PTR [rbp-0x20]
  410241:	lea    rcx,[rbp-0x64]
  410245:	call   40e660 <flatcc_json_parser_float@@Base+0x890>
  41024a:	mov    QWORD PTR [rbp-0x18],rax
  41024e:	jmp    410139 <flatcc_json_parser_union_type_vector@@Base+0xe9>
  410253:	mov    rax,QWORD PTR [rbp-0x10]
  410257:	mov    rdi,QWORD PTR [rax]
  41025a:	call   408c50 <flatcc_builder_vector_count@@Base>
  41025f:	mov    DWORD PTR [rbp-0x9c],eax
  410265:	mov    eax,DWORD PTR [rbp-0x9c]
  41026b:	mov    rcx,QWORD PTR [rbp-0x48]
  41026f:	mov    DWORD PTR [rcx+0x18],eax
  410272:	mov    eax,DWORD PTR [rbp-0x9c]
  410278:	mov    ecx,eax
  41027a:	shl    rcx,0x0
  41027e:	mov    QWORD PTR [rbp-0x90],rcx
  410285:	mov    rcx,QWORD PTR [rbp-0x10]
  410289:	mov    rdi,QWORD PTR [rcx]
  41028c:	mov    rsi,QWORD PTR [rbp-0x90]
  410293:	call   4056e0 <flatcc_builder_enter_user_frame@@Base>
  410298:	mov    QWORD PTR [rbp-0x98],rax
  41029f:	mov    rax,QWORD PTR [rbp-0x10]
  4102a3:	mov    rdi,QWORD PTR [rax]
  4102a6:	mov    rsi,QWORD PTR [rbp-0x98]
  4102ad:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  4102b2:	mov    QWORD PTR [rbp-0x88],rax
  4102b9:	mov    rdi,QWORD PTR [rbp-0x88]
  4102c0:	mov    rax,QWORD PTR [rbp-0x10]
  4102c4:	mov    rax,QWORD PTR [rax]
  4102c7:	mov    QWORD PTR [rbp-0xc0],rdi
  4102ce:	mov    rdi,rax
  4102d1:	call   408c70 <flatcc_builder_vector_edit@@Base>
  4102d6:	mov    rdx,QWORD PTR [rbp-0x90]
  4102dd:	mov    rdi,QWORD PTR [rbp-0xc0]
  4102e4:	mov    rsi,rax
  4102e7:	call   4030b0 <memcpy@plt>
  4102ec:	mov    rax,QWORD PTR [rbp-0x10]
  4102f0:	mov    rdi,QWORD PTR [rax]
  4102f3:	call   408b90 <flatcc_builder_end_vector@@Base>
  4102f8:	mov    DWORD PTR [rbp-0x74],eax
  4102fb:	cmp    eax,0x0
  4102fe:	jne    410309 <flatcc_json_parser_union_type_vector@@Base+0x2b9>
  410304:	jmp    41049c <flatcc_json_parser_union_type_vector@@Base+0x44c>
  410309:	mov    rax,QWORD PTR [rbp-0x10]
  41030d:	mov    rdi,QWORD PTR [rax]
  410310:	movzx  ecx,WORD PTR [rbp-0x2a]
  410314:	sub    ecx,0x1
  410317:	mov    esi,ecx
  410319:	call   409290 <flatcc_builder_table_add_offset@@Base>
  41031e:	mov    QWORD PTR [rbp-0x80],rax
  410322:	cmp    rax,0x0
  410326:	jne    410331 <flatcc_json_parser_union_type_vector@@Base+0x2e1>
  41032c:	jmp    41049c <flatcc_json_parser_union_type_vector@@Base+0x44c>
  410331:	mov    eax,DWORD PTR [rbp-0x74]
  410334:	mov    rcx,QWORD PTR [rbp-0x80]
  410338:	mov    DWORD PTR [rcx],eax
  41033a:	mov    rcx,QWORD PTR [rbp-0x10]
  41033e:	mov    rdi,QWORD PTR [rcx]
  410341:	mov    rsi,QWORD PTR [rbp-0x38]
  410345:	call   405900 <flatcc_builder_get_user_frame_ptr@@Base>
  41034a:	mov    QWORD PTR [rbp-0x40],rax
  41034e:	mov    rax,QWORD PTR [rbp-0x40]
  410352:	add    rax,0x10
  410358:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  410360:	add    rax,rcx
  410363:	mov    QWORD PTR [rbp-0x48],rax
  410367:	mov    rax,QWORD PTR [rbp-0x98]
  41036e:	mov    rcx,QWORD PTR [rbp-0x48]
  410372:	mov    QWORD PTR [rcx+0x20],rax
  410376:	mov    rax,QWORD PTR [rbp-0x48]
  41037a:	cmp    QWORD PTR [rax],0x0
  41037e:	jne    4103a4 <flatcc_json_parser_union_type_vector@@Base+0x354>
  410384:	mov    rax,QWORD PTR [rbp-0x40]
  410388:	mov    rcx,QWORD PTR [rax+0x8]
  41038c:	add    rcx,0x1
  410393:	mov    QWORD PTR [rax+0x8],rcx
  410397:	mov    rax,QWORD PTR [rbp-0x18]
  41039b:	mov    QWORD PTR [rbp-0x8],rax
  41039f:	jmp    4104b6 <flatcc_json_parser_union_type_vector@@Base+0x466>
  4103a4:	mov    rax,QWORD PTR [rbp-0x40]
  4103a8:	cmp    QWORD PTR [rax+0x8],0x0
  4103ad:	je     4103b8 <flatcc_json_parser_union_type_vector@@Base+0x368>
  4103b3:	jmp    4103d7 <flatcc_json_parser_union_type_vector@@Base+0x387>
  4103b8:	lea    rdi,[rip+0x4664]        # 414a23 <flatcc_builder_padding_base@@Base+0x26b3>
  4103bf:	lea    rsi,[rip+0x466c]        # 414a32 <flatcc_builder_padding_base@@Base+0x26c2>
  4103c6:	mov    edx,0x462
  4103cb:	lea    rcx,[rip+0x4790]        # 414b62 <flatcc_builder_padding_base@@Base+0x27f2>
  4103d2:	call   403060 <__assert_fail@plt>
  4103d7:	mov    rax,QWORD PTR [rbp-0x40]
  4103db:	mov    rcx,QWORD PTR [rax+0x8]
  4103df:	add    rcx,0xffffffffffffffff
  4103e6:	mov    QWORD PTR [rax+0x8],rcx
  4103ea:	mov    rax,QWORD PTR [rbp-0x10]
  4103ee:	mov    edx,DWORD PTR [rax+0x18]
  4103f1:	mov    DWORD PTR [rbp-0x54],edx
  4103f4:	mov    rax,QWORD PTR [rbp-0x10]
  4103f8:	mov    rax,QWORD PTR [rax+0x8]
  4103fc:	mov    QWORD PTR [rbp-0x60],rax
  410400:	mov    rax,QWORD PTR [rbp-0x48]
  410404:	mov    edx,DWORD PTR [rax+0x10]
  410407:	mov    rax,QWORD PTR [rbp-0x10]
  41040b:	mov    DWORD PTR [rax+0x18],edx
  41040e:	mov    rax,QWORD PTR [rbp-0x48]
  410412:	mov    rax,QWORD PTR [rax+0x8]
  410416:	mov    rcx,QWORD PTR [rbp-0x10]
  41041a:	mov    QWORD PTR [rcx+0x8],rax
  41041e:	mov    rax,QWORD PTR [rbp-0x20]
  410422:	mov    rdi,QWORD PTR [rbp-0x10]
  410426:	mov    rcx,QWORD PTR [rbp-0x48]
  41042a:	mov    rsi,QWORD PTR [rcx]
  41042d:	mov    rdx,QWORD PTR [rbp-0x20]
  410431:	mov    rcx,QWORD PTR [rbp-0x98]
  410438:	mov    r8d,DWORD PTR [rbp-0x9c]
  41043f:	mov    r9w,WORD PTR [rbp-0x2a]
  410444:	mov    r10,QWORD PTR [rbp+0x18]
  410448:	movzx  r9d,r9w
  41044c:	mov    QWORD PTR [rsp],r10
  410450:	mov    QWORD PTR [rbp-0xc8],rax
  410457:	call   40fe30 <flatcc_json_parser_union_vector@@Base+0x150>
  41045c:	mov    rcx,QWORD PTR [rbp-0xc8]
  410463:	cmp    rcx,rax
  410466:	jne    410479 <flatcc_json_parser_union_type_vector@@Base+0x429>
  41046c:	mov    rax,QWORD PTR [rbp-0x20]
  410470:	mov    QWORD PTR [rbp-0x8],rax
  410474:	jmp    4104b6 <flatcc_json_parser_union_type_vector@@Base+0x466>
  410479:	mov    eax,DWORD PTR [rbp-0x54]
  41047c:	mov    rcx,QWORD PTR [rbp-0x10]
  410480:	mov    DWORD PTR [rcx+0x18],eax
  410483:	mov    rcx,QWORD PTR [rbp-0x60]
  410487:	mov    rdx,QWORD PTR [rbp-0x10]
  41048b:	mov    QWORD PTR [rdx+0x8],rcx
  41048f:	mov    rcx,QWORD PTR [rbp-0x18]
  410493:	mov    QWORD PTR [rbp-0x8],rcx
  410497:	jmp    4104b6 <flatcc_json_parser_union_type_vector@@Base+0x466>
  41049c:	mov    rdi,QWORD PTR [rbp-0x10]
  4104a0:	mov    rsi,QWORD PTR [rbp-0x18]
  4104a4:	mov    rdx,QWORD PTR [rbp-0x20]
  4104a8:	mov    ecx,0x21
  4104ad:	call   40c440 <flatcc_json_parser_set_error@@Base>
  4104b2:	mov    QWORD PTR [rbp-0x8],rax
  4104b6:	mov    rax,QWORD PTR [rbp-0x8]
  4104ba:	add    rsp,0xd0
  4104c1:	pop    rbp
  4104c2:	ret    
  4104c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104cd:	nop    DWORD PTR [rax]
  4104d0:	push   rbp
  4104d1:	mov    rbp,rsp
  4104d4:	sub    rsp,0x30
  4104d8:	mov    QWORD PTR [rbp-0x10],rdi
  4104dc:	mov    QWORD PTR [rbp-0x18],rsi
  4104e0:	mov    QWORD PTR [rbp-0x20],rdx
  4104e4:	mov    QWORD PTR [rbp-0x28],rcx
  4104e8:	mov    rax,QWORD PTR [rbp-0x18]
  4104ec:	cmp    rax,QWORD PTR [rbp-0x20]
  4104f0:	je     410506 <flatcc_json_parser_union_type_vector@@Base+0x4b6>
  4104f6:	mov    rax,QWORD PTR [rbp-0x18]
  4104fa:	movsx  ecx,BYTE PTR [rax]
  4104fd:	cmp    ecx,0x5b
  410500:	je     41052f <flatcc_json_parser_union_type_vector@@Base+0x4df>
  410506:	mov    rax,QWORD PTR [rbp-0x28]
  41050a:	mov    DWORD PTR [rax],0x0
  410510:	mov    rdi,QWORD PTR [rbp-0x10]
  410514:	mov    rsi,QWORD PTR [rbp-0x18]
  410518:	mov    rdx,QWORD PTR [rbp-0x20]
  41051c:	mov    ecx,0x16
  410521:	call   40c440 <flatcc_json_parser_set_error@@Base>
  410526:	mov    QWORD PTR [rbp-0x8],rax
  41052a:	jmp    4105aa <flatcc_json_parser_union_type_vector@@Base+0x55a>
  41052f:	mov    rdi,QWORD PTR [rbp-0x10]
  410533:	mov    rax,QWORD PTR [rbp-0x18]
  410537:	add    rax,0x1
  41053d:	mov    rdx,QWORD PTR [rbp-0x20]
  410541:	mov    rsi,rax
  410544:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  410549:	mov    QWORD PTR [rbp-0x18],rax
  41054d:	mov    rax,QWORD PTR [rbp-0x18]
  410551:	cmp    rax,QWORD PTR [rbp-0x20]
  410555:	je     410598 <flatcc_json_parser_union_type_vector@@Base+0x548>
  41055b:	mov    rax,QWORD PTR [rbp-0x18]
  41055f:	movsx  ecx,BYTE PTR [rax]
  410562:	cmp    ecx,0x5d
  410565:	jne    410598 <flatcc_json_parser_union_type_vector@@Base+0x548>
  41056b:	mov    rax,QWORD PTR [rbp-0x28]
  41056f:	mov    DWORD PTR [rax],0x0
  410575:	mov    rdi,QWORD PTR [rbp-0x10]
  410579:	mov    rax,QWORD PTR [rbp-0x18]
  41057d:	add    rax,0x1
  410583:	mov    rdx,QWORD PTR [rbp-0x20]
  410587:	mov    rsi,rax
  41058a:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  41058f:	mov    QWORD PTR [rbp-0x8],rax
  410593:	jmp    4105aa <flatcc_json_parser_union_type_vector@@Base+0x55a>
  410598:	mov    rax,QWORD PTR [rbp-0x28]
  41059c:	mov    DWORD PTR [rax],0x1
  4105a2:	mov    rax,QWORD PTR [rbp-0x18]
  4105a6:	mov    QWORD PTR [rbp-0x8],rax
  4105aa:	mov    rax,QWORD PTR [rbp-0x8]
  4105ae:	add    rsp,0x30
  4105b2:	pop    rbp
  4105b3:	ret    
  4105b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105be:	xchg   ax,ax
  4105c0:	push   rbp
  4105c1:	mov    rbp,rsp
  4105c4:	sub    rsp,0x10
  4105c8:	mov    QWORD PTR [rbp-0x8],rdi
  4105cc:	mov    BYTE PTR [rbp-0x9],sil
  4105d0:	movzx  edi,BYTE PTR [rbp-0x9]
  4105d4:	call   4118f0 <flatcc_json_parser_struct_as_root@@Base+0x1120>
  4105d9:	mov    rcx,QWORD PTR [rbp-0x8]
  4105dd:	mov    BYTE PTR [rcx],al
  4105df:	add    rsp,0x10
  4105e3:	pop    rbp
  4105e4:	ret    
  4105e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105ef:	nop

00000000004105f0 <flatcc_json_parser_table_as_root@@Base>:
  4105f0:	push   rbp
  4105f1:	mov    rbp,rsp
  4105f4:	sub    rsp,0x90
  4105fb:	mov    rax,QWORD PTR [rbp+0x10]
  4105ff:	xor    r10d,r10d
  410602:	mov    QWORD PTR [rbp-0x10],rdi
  410606:	mov    QWORD PTR [rbp-0x18],rsi
  41060a:	mov    QWORD PTR [rbp-0x20],rdx
  41060e:	mov    QWORD PTR [rbp-0x28],rcx
  410612:	mov    DWORD PTR [rbp-0x2c],r8d
  410616:	mov    QWORD PTR [rbp-0x38],r9
  41061a:	mov    r8d,DWORD PTR [rbp-0x2c]
  41061e:	and    r8d,0x4
  410622:	cmp    r8d,0x0
  410626:	mov    r8d,0x2
  41062c:	cmovne r10d,r8d
  410630:	mov    DWORD PTR [rbp-0x88],r10d
  410637:	cmp    QWORD PTR [rbp-0x18],0x0
  41063c:	je     410652 <flatcc_json_parser_table_as_root@@Base+0x62>
  410642:	mov    rax,QWORD PTR [rbp-0x18]
  410646:	mov    QWORD PTR [rbp-0x90],rax
  41064d:	jmp    410662 <flatcc_json_parser_table_as_root@@Base+0x72>
  410652:	lea    rax,[rbp-0x80]
  410656:	mov    QWORD PTR [rbp-0x90],rax
  41065d:	jmp    410662 <flatcc_json_parser_table_as_root@@Base+0x72>
  410662:	mov    rax,QWORD PTR [rbp-0x90]
  410669:	mov    QWORD PTR [rbp-0x18],rax
  41066d:	mov    rdi,QWORD PTR [rbp-0x18]
  410671:	mov    rsi,QWORD PTR [rbp-0x10]
  410675:	mov    rdx,QWORD PTR [rbp-0x20]
  410679:	mov    rax,QWORD PTR [rbp-0x20]
  41067d:	add    rax,QWORD PTR [rbp-0x28]
  410681:	mov    r8d,DWORD PTR [rbp-0x2c]
  410685:	mov    rcx,rax
  410688:	call   410740 <flatcc_json_parser_table_as_root@@Base+0x150>
  41068d:	xor    edx,edx
  41068f:	mov    rdi,QWORD PTR [rbp-0x10]
  410693:	mov    rsi,QWORD PTR [rbp-0x38]
  410697:	mov    ecx,DWORD PTR [rbp-0x88]
  41069d:	call   406470 <flatcc_builder_start_buffer@@Base>
  4106a2:	cmp    eax,0x0
  4106a5:	je     4106b7 <flatcc_json_parser_table_as_root@@Base+0xc7>
  4106ab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4106b2:	jmp    41072b <flatcc_json_parser_table_as_root@@Base+0x13b>
  4106b7:	mov    rax,QWORD PTR [rbp+0x10]
  4106bb:	mov    rdi,QWORD PTR [rbp-0x18]
  4106bf:	mov    rsi,QWORD PTR [rbp-0x20]
  4106c3:	mov    rcx,QWORD PTR [rbp-0x20]
  4106c7:	add    rcx,QWORD PTR [rbp-0x28]
  4106cb:	mov    rdx,rcx
  4106ce:	lea    rcx,[rbp-0x84]
  4106d5:	call   rax
  4106d7:	mov    rcx,QWORD PTR [rbp-0x18]
  4106db:	cmp    DWORD PTR [rcx+0x20],0x0
  4106df:	je     4106f4 <flatcc_json_parser_table_as_root@@Base+0x104>
  4106e5:	mov    rax,QWORD PTR [rbp-0x18]
  4106e9:	mov    ecx,DWORD PTR [rax+0x20]
  4106ec:	mov    DWORD PTR [rbp-0x4],ecx
  4106ef:	jmp    41072b <flatcc_json_parser_table_as_root@@Base+0x13b>
  4106f4:	mov    rdi,QWORD PTR [rbp-0x10]
  4106f8:	mov    esi,DWORD PTR [rbp-0x84]
  4106fe:	call   4067a0 <flatcc_builder_end_buffer@@Base>
  410703:	cmp    eax,0x0
  410706:	jne    410718 <flatcc_json_parser_table_as_root@@Base+0x128>
  41070c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410713:	jmp    41072b <flatcc_json_parser_table_as_root@@Base+0x13b>
  410718:	mov    rax,QWORD PTR [rbp-0x20]
  41071c:	mov    rcx,QWORD PTR [rbp-0x18]
  410720:	mov    QWORD PTR [rcx+0x40],rax
  410724:	mov    DWORD PTR [rbp-0x4],0x0
  41072b:	mov    eax,DWORD PTR [rbp-0x4]
  41072e:	add    rsp,0x90
  410735:	pop    rbp
  410736:	ret    
  410737:	nop    WORD PTR [rax+rax*1+0x0]
  410740:	push   rbp
  410741:	mov    rbp,rsp
  410744:	sub    rsp,0x30
  410748:	xor    eax,eax
  41074a:	mov    QWORD PTR [rbp-0x8],rdi
  41074e:	mov    QWORD PTR [rbp-0x10],rsi
  410752:	mov    QWORD PTR [rbp-0x18],rdx
  410756:	mov    QWORD PTR [rbp-0x20],rcx
  41075a:	mov    DWORD PTR [rbp-0x24],r8d
  41075e:	mov    rcx,QWORD PTR [rbp-0x8]
  410762:	mov    rdi,rcx
  410765:	mov    esi,eax
  410767:	mov    edx,0x48
  41076c:	call   403070 <memset@plt>
  410771:	mov    rcx,QWORD PTR [rbp-0x10]
  410775:	mov    rdx,QWORD PTR [rbp-0x8]
  410779:	mov    QWORD PTR [rdx],rcx
  41077c:	mov    rcx,QWORD PTR [rbp-0x18]
  410780:	mov    rdx,QWORD PTR [rbp-0x8]
  410784:	mov    QWORD PTR [rdx+0x8],rcx
  410788:	mov    rcx,QWORD PTR [rbp-0x8]
  41078c:	mov    DWORD PTR [rcx+0x18],0x1
  410793:	mov    eax,DWORD PTR [rbp-0x24]
  410796:	mov    rcx,QWORD PTR [rbp-0x8]
  41079a:	mov    DWORD PTR [rcx+0x10],eax
  41079d:	mov    rcx,QWORD PTR [rbp-0x18]
  4107a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4107a5:	mov    QWORD PTR [rdx+0x28],rcx
  4107a9:	mov    rcx,QWORD PTR [rbp-0x20]
  4107ad:	mov    rdx,QWORD PTR [rbp-0x8]
  4107b1:	mov    QWORD PTR [rdx+0x30],rcx
  4107b5:	mov    rcx,QWORD PTR [rbp-0x18]
  4107b9:	mov    rdx,QWORD PTR [rbp-0x8]
  4107bd:	mov    QWORD PTR [rdx+0x38],rcx
  4107c1:	add    rsp,0x30
  4107c5:	pop    rbp
  4107c6:	ret    
  4107c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004107d0 <flatcc_json_parser_struct_as_root@@Base>:
  4107d0:	push   rbp
  4107d1:	mov    rbp,rsp
  4107d4:	sub    rsp,0x90
  4107db:	mov    rax,QWORD PTR [rbp+0x10]
  4107df:	xor    r10d,r10d
  4107e2:	mov    QWORD PTR [rbp-0x10],rdi
  4107e6:	mov    QWORD PTR [rbp-0x18],rsi
  4107ea:	mov    QWORD PTR [rbp-0x20],rdx
  4107ee:	mov    QWORD PTR [rbp-0x28],rcx
  4107f2:	mov    DWORD PTR [rbp-0x2c],r8d
  4107f6:	mov    QWORD PTR [rbp-0x38],r9
  4107fa:	mov    r8d,DWORD PTR [rbp-0x2c]
  4107fe:	and    r8d,0x4
  410802:	cmp    r8d,0x0
  410806:	mov    r8d,0x2
  41080c:	cmovne r10d,r8d
  410810:	mov    DWORD PTR [rbp-0x88],r10d
  410817:	cmp    QWORD PTR [rbp-0x18],0x0
  41081c:	je     410832 <flatcc_json_parser_struct_as_root@@Base+0x62>
  410822:	mov    rax,QWORD PTR [rbp-0x18]
  410826:	mov    QWORD PTR [rbp-0x90],rax
  41082d:	jmp    410842 <flatcc_json_parser_struct_as_root@@Base+0x72>
  410832:	lea    rax,[rbp-0x80]
  410836:	mov    QWORD PTR [rbp-0x90],rax
  41083d:	jmp    410842 <flatcc_json_parser_struct_as_root@@Base+0x72>
  410842:	mov    rax,QWORD PTR [rbp-0x90]
  410849:	mov    QWORD PTR [rbp-0x18],rax
  41084d:	mov    rdi,QWORD PTR [rbp-0x18]
  410851:	mov    rsi,QWORD PTR [rbp-0x10]
  410855:	mov    rdx,QWORD PTR [rbp-0x20]
  410859:	mov    rax,QWORD PTR [rbp-0x20]
  41085d:	add    rax,QWORD PTR [rbp-0x28]
  410861:	mov    r8d,DWORD PTR [rbp-0x2c]
  410865:	mov    rcx,rax
  410868:	call   410740 <flatcc_json_parser_table_as_root@@Base+0x150>
  41086d:	xor    edx,edx
  41086f:	mov    rdi,QWORD PTR [rbp-0x10]
  410873:	mov    rsi,QWORD PTR [rbp-0x38]
  410877:	mov    ecx,DWORD PTR [rbp-0x88]
  41087d:	call   406470 <flatcc_builder_start_buffer@@Base>
  410882:	cmp    eax,0x0
  410885:	je     410897 <flatcc_json_parser_struct_as_root@@Base+0xc7>
  41088b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410892:	jmp    41090b <flatcc_json_parser_struct_as_root@@Base+0x13b>
  410897:	mov    rax,QWORD PTR [rbp+0x10]
  41089b:	mov    rdi,QWORD PTR [rbp-0x18]
  41089f:	mov    rsi,QWORD PTR [rbp-0x20]
  4108a3:	mov    rcx,QWORD PTR [rbp-0x20]
  4108a7:	add    rcx,QWORD PTR [rbp-0x28]
  4108ab:	mov    rdx,rcx
  4108ae:	lea    rcx,[rbp-0x84]
  4108b5:	call   rax
  4108b7:	mov    rcx,QWORD PTR [rbp-0x18]
  4108bb:	cmp    DWORD PTR [rcx+0x20],0x0
  4108bf:	je     4108d4 <flatcc_json_parser_struct_as_root@@Base+0x104>
  4108c5:	mov    rax,QWORD PTR [rbp-0x18]
  4108c9:	mov    ecx,DWORD PTR [rax+0x20]
  4108cc:	mov    DWORD PTR [rbp-0x4],ecx
  4108cf:	jmp    41090b <flatcc_json_parser_struct_as_root@@Base+0x13b>
  4108d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4108d8:	mov    esi,DWORD PTR [rbp-0x84]
  4108de:	call   4067a0 <flatcc_builder_end_buffer@@Base>
  4108e3:	cmp    eax,0x0
  4108e6:	jne    4108f8 <flatcc_json_parser_struct_as_root@@Base+0x128>
  4108ec:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4108f3:	jmp    41090b <flatcc_json_parser_struct_as_root@@Base+0x13b>
  4108f8:	mov    rax,QWORD PTR [rbp-0x20]
  4108fc:	mov    rcx,QWORD PTR [rbp-0x18]
  410900:	mov    QWORD PTR [rcx+0x40],rax
  410904:	mov    DWORD PTR [rbp-0x4],0x0
  41090b:	mov    eax,DWORD PTR [rbp-0x4]
  41090e:	add    rsp,0x90
  410915:	pop    rbp
  410916:	ret    
  410917:	nop    WORD PTR [rax+rax*1+0x0]
  410920:	push   rbp
  410921:	mov    rbp,rsp
  410924:	mov    QWORD PTR [rbp-0x8],rdi
  410928:	mov    rax,QWORD PTR [rbp-0x8]
  41092c:	mov    QWORD PTR [rbp-0x10],rax
  410930:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  410935:	pop    rbp
  410936:	ret    
  410937:	nop    WORD PTR [rax+rax*1+0x0]
  410940:	push   rbp
  410941:	mov    rbp,rsp
  410944:	sub    rsp,0x90
  41094b:	mov    QWORD PTR [rbp-0x10],rdi
  41094f:	mov    DWORD PTR [rbp-0x14],esi
  410952:	mov    QWORD PTR [rbp-0x20],rdx
  410956:	mov    DWORD PTR [rbp-0x3c],0x0
  41095d:	mov    DWORD PTR [rbp-0x40],0x0
  410964:	mov    QWORD PTR [rbp-0x48],0x0
  41096c:	mov    DWORD PTR [rbp-0x4c],0x0
  410973:	mov    DWORD PTR [rbp-0x50],0x0
  41097a:	mov    DWORD PTR [rbp-0x54],0x0
  410981:	mov    DWORD PTR [rbp-0x58],0x0
  410988:	mov    rax,QWORD PTR [rbp-0x20]
  41098c:	vxorps xmm0,xmm0,xmm0
  410990:	vmovsd QWORD PTR [rax],xmm0
  410994:	mov    rax,QWORD PTR [rbp-0x10]
  410998:	movsxd rcx,DWORD PTR [rbp-0x14]
  41099c:	add    rax,rcx
  41099f:	add    rax,0x1
  4109a5:	mov    QWORD PTR [rbp-0x38],rax
  4109a9:	cmp    DWORD PTR [rbp-0x14],0x3e8
  4109b0:	jle    4109ca <flatcc_json_parser_struct_as_root@@Base+0x1fa>
  4109b6:	mov    rax,QWORD PTR [rbp-0x10]
  4109ba:	add    rax,0x3e8
  4109c0:	add    rax,0x1
  4109c6:	mov    QWORD PTR [rbp-0x38],rax
  4109ca:	mov    rax,QWORD PTR [rbp-0x10]
  4109ce:	cmp    rax,QWORD PTR [rbp-0x38]
  4109d2:	jne    4109e5 <flatcc_json_parser_struct_as_root@@Base+0x215>
  4109d8:	mov    rax,QWORD PTR [rbp-0x10]
  4109dc:	mov    QWORD PTR [rbp-0x8],rax
  4109e0:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  4109e5:	mov    rax,QWORD PTR [rbp-0x10]
  4109e9:	mov    QWORD PTR [rbp-0x28],rax
  4109ed:	mov    rax,QWORD PTR [rbp-0x10]
  4109f1:	movsx  ecx,BYTE PTR [rax]
  4109f4:	cmp    ecx,0x2d
  4109f7:	jne    410a32 <flatcc_json_parser_struct_as_root@@Base+0x262>
  4109fd:	mov    rax,QWORD PTR [rbp-0x10]
  410a01:	add    rax,0x1
  410a07:	mov    QWORD PTR [rbp-0x10],rax
  410a0b:	mov    DWORD PTR [rbp-0x3c],0x1
  410a12:	mov    rax,QWORD PTR [rbp-0x10]
  410a16:	cmp    rax,QWORD PTR [rbp-0x38]
  410a1a:	jne    410a2d <flatcc_json_parser_struct_as_root@@Base+0x25d>
  410a20:	mov    QWORD PTR [rbp-0x8],0x0
  410a28:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410a2d:	jmp    410a32 <flatcc_json_parser_struct_as_root@@Base+0x262>
  410a32:	mov    rax,QWORD PTR [rbp-0x10]
  410a36:	movsx  ecx,BYTE PTR [rax]
  410a39:	cmp    ecx,0x30
  410a3c:	jne    410b01 <flatcc_json_parser_struct_as_root@@Base+0x331>
  410a42:	mov    rax,QWORD PTR [rbp-0x10]
  410a46:	add    rax,0x1
  410a4c:	mov    QWORD PTR [rbp-0x10],rax
  410a50:	mov    rax,QWORD PTR [rbp-0x10]
  410a54:	cmp    rax,QWORD PTR [rbp-0x38]
  410a58:	je     410ab1 <flatcc_json_parser_struct_as_root@@Base+0x2e1>
  410a5e:	mov    rax,QWORD PTR [rbp-0x10]
  410a62:	movsx  ecx,BYTE PTR [rax]
  410a65:	or     ecx,0x20
  410a68:	cmp    ecx,0x78
  410a6b:	jne    410ab1 <flatcc_json_parser_struct_as_root@@Base+0x2e1>
  410a71:	mov    rdi,QWORD PTR [rbp-0x10]
  410a75:	mov    rsi,QWORD PTR [rbp-0x38]
  410a79:	mov    edx,DWORD PTR [rbp-0x3c]
  410a7c:	mov    rcx,QWORD PTR [rbp-0x20]
  410a80:	call   4111b0 <flatcc_json_parser_struct_as_root@@Base+0x9e0>
  410a85:	mov    QWORD PTR [rbp-0x30],rax
  410a89:	mov    rax,QWORD PTR [rbp-0x30]
  410a8d:	cmp    rax,QWORD PTR [rbp-0x10]
  410a91:	jne    410aa4 <flatcc_json_parser_struct_as_root@@Base+0x2d4>
  410a97:	mov    rax,QWORD PTR [rbp-0x28]
  410a9b:	mov    QWORD PTR [rbp-0x8],rax
  410a9f:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410aa4:	mov    rax,QWORD PTR [rbp-0x30]
  410aa8:	mov    QWORD PTR [rbp-0x8],rax
  410aac:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410ab1:	jmp    410ab6 <flatcc_json_parser_struct_as_root@@Base+0x2e6>
  410ab6:	xor    eax,eax
  410ab8:	mov    rcx,QWORD PTR [rbp-0x10]
  410abc:	cmp    rcx,QWORD PTR [rbp-0x38]
  410ac0:	mov    BYTE PTR [rbp-0x59],al
  410ac3:	je     410ad9 <flatcc_json_parser_struct_as_root@@Base+0x309>
  410ac9:	mov    rax,QWORD PTR [rbp-0x10]
  410acd:	movsx  ecx,BYTE PTR [rax]
  410ad0:	cmp    ecx,0x30
  410ad3:	sete   dl
  410ad6:	mov    BYTE PTR [rbp-0x59],dl
  410ad9:	mov    al,BYTE PTR [rbp-0x59]
  410adc:	test   al,0x1
  410ade:	jne    410ae9 <flatcc_json_parser_struct_as_root@@Base+0x319>
  410ae4:	jmp    410afc <flatcc_json_parser_struct_as_root@@Base+0x32c>
  410ae9:	mov    rax,QWORD PTR [rbp-0x10]
  410aed:	add    rax,0x1
  410af3:	mov    QWORD PTR [rbp-0x10],rax
  410af7:	jmp    410ab6 <flatcc_json_parser_struct_as_root@@Base+0x2e6>
  410afc:	jmp    410b6c <flatcc_json_parser_struct_as_root@@Base+0x39c>
  410b01:	mov    rax,QWORD PTR [rbp-0x10]
  410b05:	movsx  ecx,BYTE PTR [rax]
  410b08:	cmp    ecx,0x31
  410b0b:	jl     410b21 <flatcc_json_parser_struct_as_root@@Base+0x351>
  410b11:	mov    rax,QWORD PTR [rbp-0x10]
  410b15:	movsx  ecx,BYTE PTR [rax]
  410b18:	cmp    ecx,0x39
  410b1b:	jle    410b4d <flatcc_json_parser_struct_as_root@@Base+0x37d>
  410b21:	cmp    DWORD PTR [rbp-0x3c],0x0
  410b25:	je     410b38 <flatcc_json_parser_struct_as_root@@Base+0x368>
  410b2b:	xor    eax,eax
  410b2d:	mov    ecx,eax
  410b2f:	mov    QWORD PTR [rbp-0x68],rcx
  410b33:	jmp    410b40 <flatcc_json_parser_struct_as_root@@Base+0x370>
  410b38:	mov    rax,QWORD PTR [rbp-0x28]
  410b3c:	mov    QWORD PTR [rbp-0x68],rax
  410b40:	mov    rax,QWORD PTR [rbp-0x68]
  410b44:	mov    QWORD PTR [rbp-0x8],rax
  410b48:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410b4d:	mov    rax,QWORD PTR [rbp-0x10]
  410b51:	mov    rcx,rax
  410b54:	add    rcx,0x1
  410b5b:	mov    QWORD PTR [rbp-0x10],rcx
  410b5f:	movsx  edx,BYTE PTR [rax]
  410b62:	sub    edx,0x30
  410b65:	movsxd rax,edx
  410b68:	mov    QWORD PTR [rbp-0x48],rax
  410b6c:	mov    rax,QWORD PTR [rbp-0x10]
  410b70:	mov    QWORD PTR [rbp-0x30],rax
  410b74:	xor    eax,eax
  410b76:	mov    rcx,QWORD PTR [rbp-0x10]
  410b7a:	cmp    rcx,QWORD PTR [rbp-0x38]
  410b7e:	mov    BYTE PTR [rbp-0x69],al
  410b81:	je     410bac <flatcc_json_parser_struct_as_root@@Base+0x3dc>
  410b87:	xor    eax,eax
  410b89:	mov    rcx,QWORD PTR [rbp-0x10]
  410b8d:	movsx  edx,BYTE PTR [rcx]
  410b90:	cmp    edx,0x30
  410b93:	mov    BYTE PTR [rbp-0x69],al
  410b96:	jl     410bac <flatcc_json_parser_struct_as_root@@Base+0x3dc>
  410b9c:	mov    rax,QWORD PTR [rbp-0x10]
  410ba0:	movsx  ecx,BYTE PTR [rax]
  410ba3:	cmp    ecx,0x39
  410ba6:	setle  dl
  410ba9:	mov    BYTE PTR [rbp-0x69],dl
  410bac:	mov    al,BYTE PTR [rbp-0x69]
  410baf:	test   al,0x1
  410bb1:	jne    410bbc <flatcc_json_parser_struct_as_root@@Base+0x3ec>
  410bb7:	jmp    410c2a <flatcc_json_parser_struct_as_root@@Base+0x45a>
  410bbc:	movabs rax,0x1999999999999999
  410bc6:	cmp    QWORD PTR [rbp-0x48],rax
  410bca:	jb     410bfa <flatcc_json_parser_struct_as_root@@Base+0x42a>
  410bd0:	mov    rax,QWORD PTR [rbp-0x10]
  410bd4:	movsx  ecx,BYTE PTR [rax]
  410bd7:	cmp    ecx,0x35
  410bda:	setge  dl
  410bdd:	and    dl,0x1
  410be0:	movzx  ecx,dl
  410be3:	movsxd rax,ecx
  410be6:	add    rax,QWORD PTR [rbp-0x48]
  410bea:	mov    QWORD PTR [rbp-0x48],rax
  410bee:	mov    DWORD PTR [rbp-0x58],0x1
  410bf5:	jmp    410c2a <flatcc_json_parser_struct_as_root@@Base+0x45a>
  410bfa:	imul   rax,QWORD PTR [rbp-0x48],0xa
  410c02:	mov    rcx,QWORD PTR [rbp-0x10]
  410c06:	mov    rdx,rcx
  410c09:	add    rdx,0x1
  410c10:	mov    QWORD PTR [rbp-0x10],rdx
  410c14:	movsx  rcx,BYTE PTR [rcx]
  410c18:	add    rax,rcx
  410c1b:	sub    rax,0x30
  410c21:	mov    QWORD PTR [rbp-0x48],rax
  410c25:	jmp    410b74 <flatcc_json_parser_struct_as_root@@Base+0x3a4>
  410c2a:	mov    rax,QWORD PTR [rbp-0x10]
  410c2e:	mov    rcx,QWORD PTR [rbp-0x30]
  410c32:	sub    rax,rcx
  410c35:	mov    DWORD PTR [rbp-0x54],eax
  410c38:	xor    eax,eax
  410c3a:	mov    rcx,QWORD PTR [rbp-0x10]
  410c3e:	cmp    rcx,QWORD PTR [rbp-0x38]
  410c42:	mov    BYTE PTR [rbp-0x6a],al
  410c45:	je     410c5b <flatcc_json_parser_struct_as_root@@Base+0x48b>
  410c4b:	mov    rax,QWORD PTR [rbp-0x10]
  410c4f:	movsx  ecx,BYTE PTR [rax]
  410c52:	cmp    ecx,0x30
  410c55:	sete   dl
  410c58:	mov    BYTE PTR [rbp-0x6a],dl
  410c5b:	mov    al,BYTE PTR [rbp-0x6a]
  410c5e:	test   al,0x1
  410c60:	jne    410c6b <flatcc_json_parser_struct_as_root@@Base+0x49b>
  410c66:	jmp    410c88 <flatcc_json_parser_struct_as_root@@Base+0x4b8>
  410c6b:	mov    eax,DWORD PTR [rbp-0x4c]
  410c6e:	add    eax,0x1
  410c71:	mov    DWORD PTR [rbp-0x4c],eax
  410c74:	mov    rcx,QWORD PTR [rbp-0x10]
  410c78:	add    rcx,0x1
  410c7f:	mov    QWORD PTR [rbp-0x10],rcx
  410c83:	jmp    410c38 <flatcc_json_parser_struct_as_root@@Base+0x468>
  410c88:	mov    rax,QWORD PTR [rbp-0x10]
  410c8c:	cmp    rax,QWORD PTR [rbp-0x38]
  410c90:	je     410d3f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410c96:	mov    rax,QWORD PTR [rbp-0x10]
  410c9a:	movsx  ecx,BYTE PTR [rax]
  410c9d:	cmp    ecx,0x31
  410ca0:	jl     410d3f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410ca6:	mov    rax,QWORD PTR [rbp-0x10]
  410caa:	movsx  ecx,BYTE PTR [rax]
  410cad:	cmp    ecx,0x39
  410cb0:	jg     410d3f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410cb6:	mov    DWORD PTR [rbp-0x58],0x1
  410cbd:	mov    eax,DWORD PTR [rbp-0x4c]
  410cc0:	add    eax,0x1
  410cc3:	mov    DWORD PTR [rbp-0x4c],eax
  410cc6:	mov    rcx,QWORD PTR [rbp-0x10]
  410cca:	add    rcx,0x1
  410cd1:	mov    QWORD PTR [rbp-0x10],rcx
  410cd5:	xor    eax,eax
  410cd7:	mov    rcx,QWORD PTR [rbp-0x10]
  410cdb:	cmp    rcx,QWORD PTR [rbp-0x38]
  410cdf:	mov    BYTE PTR [rbp-0x6b],al
  410ce2:	je     410d0d <flatcc_json_parser_struct_as_root@@Base+0x53d>
  410ce8:	xor    eax,eax
  410cea:	mov    rcx,QWORD PTR [rbp-0x10]
  410cee:	movsx  edx,BYTE PTR [rcx]
  410cf1:	cmp    edx,0x30
  410cf4:	mov    BYTE PTR [rbp-0x6b],al
  410cf7:	jl     410d0d <flatcc_json_parser_struct_as_root@@Base+0x53d>
  410cfd:	mov    rax,QWORD PTR [rbp-0x10]
  410d01:	movsx  ecx,BYTE PTR [rax]
  410d04:	cmp    ecx,0x39
  410d07:	setle  dl
  410d0a:	mov    BYTE PTR [rbp-0x6b],dl
  410d0d:	mov    al,BYTE PTR [rbp-0x6b]
  410d10:	test   al,0x1
  410d12:	jne    410d1d <flatcc_json_parser_struct_as_root@@Base+0x54d>
  410d18:	jmp    410d3a <flatcc_json_parser_struct_as_root@@Base+0x56a>
  410d1d:	mov    eax,DWORD PTR [rbp-0x4c]
  410d20:	add    eax,0x1
  410d23:	mov    DWORD PTR [rbp-0x4c],eax
  410d26:	mov    rcx,QWORD PTR [rbp-0x10]
  410d2a:	add    rcx,0x1
  410d31:	mov    QWORD PTR [rbp-0x10],rcx
  410d35:	jmp    410cd5 <flatcc_json_parser_struct_as_root@@Base+0x505>
  410d3a:	jmp    410d3f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410d3f:	mov    rax,QWORD PTR [rbp-0x10]
  410d43:	cmp    rax,QWORD PTR [rbp-0x38]
  410d47:	je     410f77 <flatcc_json_parser_struct_as_root@@Base+0x7a7>
  410d4d:	mov    rax,QWORD PTR [rbp-0x10]
  410d51:	movsx  ecx,BYTE PTR [rax]
  410d54:	cmp    ecx,0x2e
  410d57:	jne    410f77 <flatcc_json_parser_struct_as_root@@Base+0x7a7>
  410d5d:	mov    rax,QWORD PTR [rbp-0x10]
  410d61:	add    rax,0x1
  410d67:	mov    QWORD PTR [rbp-0x10],rax
  410d6b:	mov    rax,QWORD PTR [rbp-0x10]
  410d6f:	mov    QWORD PTR [rbp-0x30],rax
  410d73:	mov    rax,QWORD PTR [rbp-0x10]
  410d77:	movsx  ecx,BYTE PTR [rax]
  410d7a:	cmp    ecx,0x30
  410d7d:	jl     410d93 <flatcc_json_parser_struct_as_root@@Base+0x5c3>
  410d83:	mov    rax,QWORD PTR [rbp-0x10]
  410d87:	movsx  ecx,BYTE PTR [rax]
  410d8a:	cmp    ecx,0x39
  410d8d:	jle    410da0 <flatcc_json_parser_struct_as_root@@Base+0x5d0>
  410d93:	mov    QWORD PTR [rbp-0x8],0x0
  410d9b:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410da0:	jmp    410da5 <flatcc_json_parser_struct_as_root@@Base+0x5d5>
  410da5:	xor    eax,eax
  410da7:	mov    rcx,QWORD PTR [rbp-0x10]
  410dab:	cmp    rcx,QWORD PTR [rbp-0x38]
  410daf:	mov    BYTE PTR [rbp-0x6c],al
  410db2:	je     410ddd <flatcc_json_parser_struct_as_root@@Base+0x60d>
  410db8:	xor    eax,eax
  410dba:	mov    rcx,QWORD PTR [rbp-0x10]
  410dbe:	movsx  edx,BYTE PTR [rcx]
  410dc1:	cmp    edx,0x30
  410dc4:	mov    BYTE PTR [rbp-0x6c],al
  410dc7:	jl     410ddd <flatcc_json_parser_struct_as_root@@Base+0x60d>
  410dcd:	mov    rax,QWORD PTR [rbp-0x10]
  410dd1:	movsx  ecx,BYTE PTR [rax]
  410dd4:	cmp    ecx,0x39
  410dd7:	setle  dl
  410dda:	mov    BYTE PTR [rbp-0x6c],dl
  410ddd:	mov    al,BYTE PTR [rbp-0x6c]
  410de0:	test   al,0x1
  410de2:	jne    410ded <flatcc_json_parser_struct_as_root@@Base+0x61d>
  410de8:	jmp    410e6e <flatcc_json_parser_struct_as_root@@Base+0x69e>
  410ded:	movabs rax,0x1999999999999999
  410df7:	cmp    QWORD PTR [rbp-0x48],rax
  410dfb:	jb     410e35 <flatcc_json_parser_struct_as_root@@Base+0x665>
  410e01:	cmp    DWORD PTR [rbp-0x58],0x0
  410e05:	jne    410e30 <flatcc_json_parser_struct_as_root@@Base+0x660>
  410e0b:	mov    rax,QWORD PTR [rbp-0x10]
  410e0f:	movsx  ecx,BYTE PTR [rax]
  410e12:	cmp    ecx,0x35
  410e15:	setge  dl
  410e18:	and    dl,0x1
  410e1b:	movzx  ecx,dl
  410e1e:	movsxd rax,ecx
  410e21:	add    rax,QWORD PTR [rbp-0x48]
  410e25:	mov    QWORD PTR [rbp-0x48],rax
  410e29:	mov    DWORD PTR [rbp-0x58],0x1
  410e30:	jmp    410e6e <flatcc_json_parser_struct_as_root@@Base+0x69e>
  410e35:	imul   rax,QWORD PTR [rbp-0x48],0xa
  410e3d:	mov    rcx,QWORD PTR [rbp-0x10]
  410e41:	mov    rdx,rcx
  410e44:	add    rdx,0x1
  410e4b:	mov    QWORD PTR [rbp-0x10],rdx
  410e4f:	movsx  rcx,BYTE PTR [rcx]
  410e53:	add    rax,rcx
  410e56:	sub    rax,0x30
  410e5c:	mov    QWORD PTR [rbp-0x48],rax
  410e60:	mov    esi,DWORD PTR [rbp-0x4c]
  410e63:	add    esi,0xffffffff
  410e66:	mov    DWORD PTR [rbp-0x4c],esi
  410e69:	jmp    410da5 <flatcc_json_parser_struct_as_root@@Base+0x5d5>
  410e6e:	mov    rax,QWORD PTR [rbp-0x10]
  410e72:	mov    rcx,QWORD PTR [rbp-0x30]
  410e76:	sub    rax,rcx
  410e79:	add    eax,DWORD PTR [rbp-0x54]
  410e7c:	mov    DWORD PTR [rbp-0x54],eax
  410e7f:	xor    eax,eax
  410e81:	mov    rcx,QWORD PTR [rbp-0x10]
  410e85:	cmp    rcx,QWORD PTR [rbp-0x38]
  410e89:	mov    BYTE PTR [rbp-0x6d],al
  410e8c:	je     410ea2 <flatcc_json_parser_struct_as_root@@Base+0x6d2>
  410e92:	mov    rax,QWORD PTR [rbp-0x10]
  410e96:	movsx  ecx,BYTE PTR [rax]
  410e99:	cmp    ecx,0x30
  410e9c:	sete   dl
  410e9f:	mov    BYTE PTR [rbp-0x6d],dl
  410ea2:	mov    al,BYTE PTR [rbp-0x6d]
  410ea5:	test   al,0x1
  410ea7:	jne    410eb2 <flatcc_json_parser_struct_as_root@@Base+0x6e2>
  410ead:	jmp    410ecf <flatcc_json_parser_struct_as_root@@Base+0x6ff>
  410eb2:	mov    eax,DWORD PTR [rbp-0x4c]
  410eb5:	add    eax,0x1
  410eb8:	mov    DWORD PTR [rbp-0x4c],eax
  410ebb:	mov    rcx,QWORD PTR [rbp-0x10]
  410ebf:	add    rcx,0x1
  410ec6:	mov    QWORD PTR [rbp-0x10],rcx
  410eca:	jmp    410e7f <flatcc_json_parser_struct_as_root@@Base+0x6af>
  410ecf:	mov    rax,QWORD PTR [rbp-0x10]
  410ed3:	cmp    rax,QWORD PTR [rbp-0x38]
  410ed7:	je     410f72 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410edd:	mov    rax,QWORD PTR [rbp-0x10]
  410ee1:	movsx  ecx,BYTE PTR [rax]
  410ee4:	cmp    ecx,0x31
  410ee7:	jl     410f72 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410eed:	mov    rax,QWORD PTR [rbp-0x10]
  410ef1:	movsx  ecx,BYTE PTR [rax]
  410ef4:	cmp    ecx,0x39
  410ef7:	jg     410f72 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410efd:	mov    DWORD PTR [rbp-0x58],0x1
  410f04:	mov    rax,QWORD PTR [rbp-0x10]
  410f08:	add    rax,0x1
  410f0e:	mov    QWORD PTR [rbp-0x10],rax
  410f12:	xor    eax,eax
  410f14:	mov    rcx,QWORD PTR [rbp-0x10]
  410f18:	cmp    rcx,QWORD PTR [rbp-0x38]
  410f1c:	mov    BYTE PTR [rbp-0x6e],al
  410f1f:	je     410f4a <flatcc_json_parser_struct_as_root@@Base+0x77a>
  410f25:	xor    eax,eax
  410f27:	mov    rcx,QWORD PTR [rbp-0x10]
  410f2b:	movsx  edx,BYTE PTR [rcx]
  410f2e:	cmp    edx,0x30
  410f31:	mov    BYTE PTR [rbp-0x6e],al
  410f34:	jl     410f4a <flatcc_json_parser_struct_as_root@@Base+0x77a>
  410f3a:	mov    rax,QWORD PTR [rbp-0x10]
  410f3e:	movsx  ecx,BYTE PTR [rax]
  410f41:	cmp    ecx,0x39
  410f44:	setle  dl
  410f47:	mov    BYTE PTR [rbp-0x6e],dl
  410f4a:	mov    al,BYTE PTR [rbp-0x6e]
  410f4d:	test   al,0x1
  410f4f:	jne    410f5a <flatcc_json_parser_struct_as_root@@Base+0x78a>
  410f55:	jmp    410f6d <flatcc_json_parser_struct_as_root@@Base+0x79d>
  410f5a:	mov    rax,QWORD PTR [rbp-0x10]
  410f5e:	add    rax,0x1
  410f64:	mov    QWORD PTR [rbp-0x10],rax
  410f68:	jmp    410f12 <flatcc_json_parser_struct_as_root@@Base+0x742>
  410f6d:	jmp    410f72 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410f72:	jmp    410f77 <flatcc_json_parser_struct_as_root@@Base+0x7a7>
  410f77:	mov    eax,DWORD PTR [rbp-0x54]
  410f7a:	add    eax,DWORD PTR [rbp-0x4c]
  410f7d:	mov    DWORD PTR [rbp-0x4c],eax
  410f80:	mov    rcx,QWORD PTR [rbp-0x10]
  410f84:	cmp    rcx,QWORD PTR [rbp-0x38]
  410f88:	je     411121 <flatcc_json_parser_struct_as_root@@Base+0x951>
  410f8e:	mov    rax,QWORD PTR [rbp-0x10]
  410f92:	movsx  ecx,BYTE PTR [rax]
  410f95:	or     ecx,0x20
  410f98:	cmp    ecx,0x65
  410f9b:	jne    411121 <flatcc_json_parser_struct_as_root@@Base+0x951>
  410fa1:	mov    rax,QWORD PTR [rbp-0x38]
  410fa5:	mov    rcx,QWORD PTR [rbp-0x10]
  410fa9:	sub    rax,rcx
  410fac:	cmp    rax,0x2
  410fb0:	jge    410fc3 <flatcc_json_parser_struct_as_root@@Base+0x7f3>
  410fb6:	mov    QWORD PTR [rbp-0x8],0x0
  410fbe:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  410fc3:	mov    rax,QWORD PTR [rbp-0x10]
  410fc7:	add    rax,0x1
  410fcd:	mov    QWORD PTR [rbp-0x10],rax
  410fd1:	mov    rax,QWORD PTR [rbp-0x10]
  410fd5:	movsx  ecx,BYTE PTR [rax]
  410fd8:	cmp    ecx,0x2b
  410fdb:	jne    41100f <flatcc_json_parser_struct_as_root@@Base+0x83f>
  410fe1:	mov    rax,QWORD PTR [rbp-0x10]
  410fe5:	add    rax,0x1
  410feb:	mov    QWORD PTR [rbp-0x10],rax
  410fef:	mov    rax,QWORD PTR [rbp-0x10]
  410ff3:	cmp    rax,QWORD PTR [rbp-0x38]
  410ff7:	jne    41100a <flatcc_json_parser_struct_as_root@@Base+0x83a>
  410ffd:	mov    QWORD PTR [rbp-0x8],0x0
  411005:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  41100a:	jmp    411059 <flatcc_json_parser_struct_as_root@@Base+0x889>
  41100f:	mov    rax,QWORD PTR [rbp-0x10]
  411013:	movsx  ecx,BYTE PTR [rax]
  411016:	cmp    ecx,0x2d
  411019:	jne    411054 <flatcc_json_parser_struct_as_root@@Base+0x884>
  41101f:	mov    DWORD PTR [rbp-0x40],0x1
  411026:	mov    rax,QWORD PTR [rbp-0x10]
  41102a:	add    rax,0x1
  411030:	mov    QWORD PTR [rbp-0x10],rax
  411034:	mov    rax,QWORD PTR [rbp-0x10]
  411038:	cmp    rax,QWORD PTR [rbp-0x38]
  41103c:	jne    41104f <flatcc_json_parser_struct_as_root@@Base+0x87f>
  411042:	mov    QWORD PTR [rbp-0x8],0x0
  41104a:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  41104f:	jmp    411054 <flatcc_json_parser_struct_as_root@@Base+0x884>
  411054:	jmp    411059 <flatcc_json_parser_struct_as_root@@Base+0x889>
  411059:	mov    rax,QWORD PTR [rbp-0x10]
  41105d:	movsx  ecx,BYTE PTR [rax]
  411060:	cmp    ecx,0x30
  411063:	jl     411079 <flatcc_json_parser_struct_as_root@@Base+0x8a9>
  411069:	mov    rax,QWORD PTR [rbp-0x10]
  41106d:	movsx  ecx,BYTE PTR [rax]
  411070:	cmp    ecx,0x39
  411073:	jle    411086 <flatcc_json_parser_struct_as_root@@Base+0x8b6>
  411079:	mov    QWORD PTR [rbp-0x8],0x0
  411081:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  411086:	mov    rax,QWORD PTR [rbp-0x10]
  41108a:	mov    rcx,rax
  41108d:	add    rcx,0x1
  411094:	mov    QWORD PTR [rbp-0x10],rcx
  411098:	movsx  edx,BYTE PTR [rax]
  41109b:	sub    edx,0x30
  41109e:	mov    DWORD PTR [rbp-0x50],edx
  4110a1:	xor    eax,eax
  4110a3:	mov    rcx,QWORD PTR [rbp-0x10]
  4110a7:	cmp    rcx,QWORD PTR [rbp-0x38]
  4110ab:	mov    BYTE PTR [rbp-0x6f],al
  4110ae:	je     4110d9 <flatcc_json_parser_struct_as_root@@Base+0x909>
  4110b4:	xor    eax,eax
  4110b6:	mov    rcx,QWORD PTR [rbp-0x10]
  4110ba:	movsx  edx,BYTE PTR [rcx]
  4110bd:	cmp    edx,0x30
  4110c0:	mov    BYTE PTR [rbp-0x6f],al
  4110c3:	jl     4110d9 <flatcc_json_parser_struct_as_root@@Base+0x909>
  4110c9:	mov    rax,QWORD PTR [rbp-0x10]
  4110cd:	movsx  ecx,BYTE PTR [rax]
  4110d0:	cmp    ecx,0x39
  4110d3:	setle  dl
  4110d6:	mov    BYTE PTR [rbp-0x6f],dl
  4110d9:	mov    al,BYTE PTR [rbp-0x6f]
  4110dc:	test   al,0x1
  4110de:	jne    4110e9 <flatcc_json_parser_struct_as_root@@Base+0x919>
  4110e4:	jmp    41111c <flatcc_json_parser_struct_as_root@@Base+0x94c>
  4110e9:	cmp    DWORD PTR [rbp-0x50],0x7fff
  4110f0:	jg     411109 <flatcc_json_parser_struct_as_root@@Base+0x939>
  4110f6:	imul   eax,DWORD PTR [rbp-0x50],0xa
  4110fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4110fe:	movsx  edx,BYTE PTR [rcx]
  411101:	add    eax,edx
  411103:	sub    eax,0x30
  411106:	mov    DWORD PTR [rbp-0x50],eax
  411109:	mov    rax,QWORD PTR [rbp-0x10]
  41110d:	add    rax,0x1
  411113:	mov    QWORD PTR [rbp-0x10],rax
  411117:	jmp    4110a1 <flatcc_json_parser_struct_as_root@@Base+0x8d1>
  41111c:	jmp    411121 <flatcc_json_parser_struct_as_root@@Base+0x951>
  411121:	mov    eax,DWORD PTR [rbp-0x4c]
  411124:	cmp    DWORD PTR [rbp-0x40],0x0
  411128:	mov    DWORD PTR [rbp-0x74],eax
  41112b:	je     41113e <flatcc_json_parser_struct_as_root@@Base+0x96e>
  411131:	xor    eax,eax
  411133:	sub    eax,DWORD PTR [rbp-0x50]
  411136:	mov    DWORD PTR [rbp-0x78],eax
  411139:	jmp    411144 <flatcc_json_parser_struct_as_root@@Base+0x974>
  41113e:	mov    eax,DWORD PTR [rbp-0x50]
  411141:	mov    DWORD PTR [rbp-0x78],eax
  411144:	mov    eax,DWORD PTR [rbp-0x78]
  411147:	mov    ecx,DWORD PTR [rbp-0x74]
  41114a:	add    ecx,eax
  41114c:	mov    DWORD PTR [rbp-0x4c],ecx
  41114f:	mov    rdx,QWORD PTR [rbp-0x10]
  411153:	cmp    rdx,QWORD PTR [rbp-0x38]
  411157:	jne    41116a <flatcc_json_parser_struct_as_root@@Base+0x99a>
  41115d:	mov    QWORD PTR [rbp-0x8],0x0
  411165:	jmp    411199 <flatcc_json_parser_struct_as_root@@Base+0x9c9>
  41116a:	mov    rdi,QWORD PTR [rbp-0x28]
  41116e:	mov    rsi,QWORD PTR [rbp-0x10]
  411172:	mov    edx,DWORD PTR [rbp-0x3c]
  411175:	mov    rcx,QWORD PTR [rbp-0x48]
  411179:	mov    r8d,DWORD PTR [rbp-0x4c]
  41117d:	mov    r9d,DWORD PTR [rbp-0x54]
  411181:	mov    eax,DWORD PTR [rbp-0x58]
  411184:	mov    r10,QWORD PTR [rbp-0x20]
  411188:	mov    DWORD PTR [rsp],eax
  41118b:	mov    QWORD PTR [rsp+0x8],r10
  411190:	call   4111e0 <flatcc_json_parser_struct_as_root@@Base+0xa10>
  411195:	mov    QWORD PTR [rbp-0x8],rax
  411199:	mov    rax,QWORD PTR [rbp-0x8]
  41119d:	add    rsp,0x90
  4111a4:	pop    rbp
  4111a5:	ret    
  4111a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111b0:	push   rbp
  4111b1:	mov    rbp,rsp
  4111b4:	mov    QWORD PTR [rbp-0x8],rdi
  4111b8:	mov    QWORD PTR [rbp-0x10],rsi
  4111bc:	mov    DWORD PTR [rbp-0x14],edx
  4111bf:	mov    QWORD PTR [rbp-0x20],rcx
  4111c3:	mov    rax,QWORD PTR [rbp-0x20]
  4111c7:	vxorps xmm0,xmm0,xmm0
  4111cb:	vmovsd QWORD PTR [rax],xmm0
  4111cf:	mov    rax,QWORD PTR [rbp-0x8]
  4111d3:	pop    rbp
  4111d4:	ret    
  4111d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111df:	nop
  4111e0:	push   rbp
  4111e1:	mov    rbp,rsp
  4111e4:	sub    rsp,0x50
  4111e8:	mov    rax,QWORD PTR [rbp+0x18]
  4111ec:	mov    r10d,DWORD PTR [rbp+0x10]
  4111f0:	mov    QWORD PTR [rbp-0x10],rdi
  4111f4:	mov    QWORD PTR [rbp-0x18],rsi
  4111f8:	mov    DWORD PTR [rbp-0x1c],edx
  4111fb:	mov    QWORD PTR [rbp-0x28],rcx
  4111ff:	mov    DWORD PTR [rbp-0x2c],r8d
  411203:	mov    DWORD PTR [rbp-0x30],r9d
  411207:	mov    DWORD PTR [rbp-0x34],0x135
  41120e:	mov    DWORD PTR [rbp-0x38],0xfffffebc
  411215:	cmp    QWORD PTR [rbp-0x28],0x0
  41121a:	je     41122d <flatcc_json_parser_struct_as_root@@Base+0xa5d>
  411220:	cmp    DWORD PTR [rbp-0x2c],0xfffffebc
  411227:	jge    41123e <flatcc_json_parser_struct_as_root@@Base+0xa6e>
  41122d:	mov    rax,QWORD PTR [rbp+0x18]
  411231:	vxorps xmm0,xmm0,xmm0
  411235:	vmovsd QWORD PTR [rax],xmm0
  411239:	jmp    4117a6 <flatcc_json_parser_struct_as_root@@Base+0xfd6>
  41123e:	mov    eax,DWORD PTR [rbp-0x2c]
  411241:	sub    eax,0x1
  411244:	cmp    eax,0x135
  411249:	jle    41126b <flatcc_json_parser_struct_as_root@@Base+0xa9b>
  41124f:	movabs rdi,0x7ff0000000000000
  411259:	call   410920 <flatcc_json_parser_struct_as_root@@Base+0x150>
  41125e:	mov    rax,QWORD PTR [rbp+0x18]
  411262:	vmovsd QWORD PTR [rax],xmm0
  411266:	jmp    4117a6 <flatcc_json_parser_struct_as_root@@Base+0xfd6>
  41126b:	movabs rax,0x20000000000000
  411275:	cmp    QWORD PTR [rbp-0x28],rax
  411279:	jae    411745 <flatcc_json_parser_struct_as_root@@Base+0xf75>
  41127f:	cmp    DWORD PTR [rbp-0x2c],0x0
  411283:	jl     411745 <flatcc_json_parser_struct_as_root@@Base+0xf75>
  411289:	cmp    DWORD PTR [rbp-0x2c],0x16
  41128d:	jg     411745 <flatcc_json_parser_struct_as_root@@Base+0xf75>
  411293:	vmovdqa xmm0,XMMWORD PTR [rip+0x3405]        # 4146a0 <flatcc_builder_padding_base@@Base+0x2330>
  41129b:	vmovq  xmm1,QWORD PTR [rbp-0x28]
  4112a0:	vpunpckldq xmm0,xmm1,xmm0
  4112a4:	vmovapd xmm1,XMMWORD PTR [rip+0x3404]        # 4146b0 <flatcc_builder_padding_base@@Base+0x2340>
  4112ac:	vsubpd xmm0,xmm0,xmm1
  4112b0:	vhaddpd xmm0,xmm0,xmm0
  4112b4:	vmovlpd QWORD PTR [rbp-0x48],xmm0
  4112b9:	mov    eax,DWORD PTR [rbp-0x2c]
  4112bc:	mov    ecx,DWORD PTR [rbp-0x30]
  4112bf:	sub    eax,ecx
  4112c1:	add    eax,0x16
  4112c4:	mov    edx,eax
  4112c6:	sub    eax,0x2c
  4112c9:	mov    QWORD PTR [rbp-0x50],rdx
  4112cd:	ja     411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4112d3:	lea    rax,[rip+0x28b6]        # 413b90 <flatcc_builder_padding_base@@Base+0x1820>
  4112da:	mov    rcx,QWORD PTR [rbp-0x50]
  4112de:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4112e2:	add    rdx,rax
  4112e5:	jmp    rdx
  4112e7:	vmovsd xmm0,QWORD PTR [rip+0x32e9]        # 4145d8 <flatcc_builder_padding_base@@Base+0x2268>
  4112ef:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4112f4:	vdivsd xmm0,xmm1,xmm0
  4112f8:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4112fd:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411302:	vmovsd xmm0,QWORD PTR [rip+0x32d6]        # 4145e0 <flatcc_builder_padding_base@@Base+0x2270>
  41130a:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41130f:	vdivsd xmm0,xmm1,xmm0
  411313:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411318:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41131d:	vmovsd xmm0,QWORD PTR [rip+0x32c3]        # 4145e8 <flatcc_builder_padding_base@@Base+0x2278>
  411325:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41132a:	vdivsd xmm0,xmm1,xmm0
  41132e:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411333:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411338:	vmovsd xmm0,QWORD PTR [rip+0x32b0]        # 4145f0 <flatcc_builder_padding_base@@Base+0x2280>
  411340:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411345:	vdivsd xmm0,xmm1,xmm0
  411349:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41134e:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411353:	vmovsd xmm0,QWORD PTR [rip+0x329d]        # 4145f8 <flatcc_builder_padding_base@@Base+0x2288>
  41135b:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411360:	vdivsd xmm0,xmm1,xmm0
  411364:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411369:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41136e:	vmovsd xmm0,QWORD PTR [rip+0x328a]        # 414600 <flatcc_builder_padding_base@@Base+0x2290>
  411376:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41137b:	vdivsd xmm0,xmm1,xmm0
  41137f:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411384:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411389:	vmovsd xmm0,QWORD PTR [rip+0x3277]        # 414608 <flatcc_builder_padding_base@@Base+0x2298>
  411391:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411396:	vdivsd xmm0,xmm1,xmm0
  41139a:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41139f:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4113a4:	vmovsd xmm0,QWORD PTR [rip+0x3264]        # 414610 <flatcc_builder_padding_base@@Base+0x22a0>
  4113ac:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4113b1:	vdivsd xmm0,xmm1,xmm0
  4113b5:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4113ba:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4113bf:	vmovsd xmm0,QWORD PTR [rip+0x3251]        # 414618 <flatcc_builder_padding_base@@Base+0x22a8>
  4113c7:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4113cc:	vdivsd xmm0,xmm1,xmm0
  4113d0:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4113d5:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4113da:	vmovsd xmm0,QWORD PTR [rip+0x323e]        # 414620 <flatcc_builder_padding_base@@Base+0x22b0>
  4113e2:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4113e7:	vdivsd xmm0,xmm1,xmm0
  4113eb:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4113f0:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4113f5:	vmovsd xmm0,QWORD PTR [rip+0x322b]        # 414628 <flatcc_builder_padding_base@@Base+0x22b8>
  4113fd:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411402:	vdivsd xmm0,xmm1,xmm0
  411406:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41140b:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411410:	vmovsd xmm0,QWORD PTR [rip+0x3218]        # 414630 <flatcc_builder_padding_base@@Base+0x22c0>
  411418:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41141d:	vdivsd xmm0,xmm1,xmm0
  411421:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411426:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41142b:	vmovsd xmm0,QWORD PTR [rip+0x3205]        # 414638 <flatcc_builder_padding_base@@Base+0x22c8>
  411433:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411438:	vdivsd xmm0,xmm1,xmm0
  41143c:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411441:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411446:	vmovsd xmm0,QWORD PTR [rip+0x31f2]        # 414640 <flatcc_builder_padding_base@@Base+0x22d0>
  41144e:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411453:	vdivsd xmm0,xmm1,xmm0
  411457:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41145c:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411461:	vmovsd xmm0,QWORD PTR [rip+0x31df]        # 414648 <flatcc_builder_padding_base@@Base+0x22d8>
  411469:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41146e:	vdivsd xmm0,xmm1,xmm0
  411472:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411477:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41147c:	vmovsd xmm0,QWORD PTR [rip+0x31cc]        # 414650 <flatcc_builder_padding_base@@Base+0x22e0>
  411484:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411489:	vdivsd xmm0,xmm1,xmm0
  41148d:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411492:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411497:	vmovsd xmm0,QWORD PTR [rip+0x31b9]        # 414658 <flatcc_builder_padding_base@@Base+0x22e8>
  41149f:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114a4:	vdivsd xmm0,xmm1,xmm0
  4114a8:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114ad:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4114b2:	vmovsd xmm0,QWORD PTR [rip+0x31a6]        # 414660 <flatcc_builder_padding_base@@Base+0x22f0>
  4114ba:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114bf:	vdivsd xmm0,xmm1,xmm0
  4114c3:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114c8:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4114cd:	vmovsd xmm0,QWORD PTR [rip+0x3193]        # 414668 <flatcc_builder_padding_base@@Base+0x22f8>
  4114d5:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114da:	vdivsd xmm0,xmm1,xmm0
  4114de:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114e3:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4114e8:	vmovsd xmm0,QWORD PTR [rip+0x3180]        # 414670 <flatcc_builder_padding_base@@Base+0x2300>
  4114f0:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114f5:	vdivsd xmm0,xmm1,xmm0
  4114f9:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114fe:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411503:	vmovsd xmm0,QWORD PTR [rip+0x316d]        # 414678 <flatcc_builder_padding_base@@Base+0x2308>
  41150b:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411510:	vdivsd xmm0,xmm1,xmm0
  411514:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411519:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41151e:	vmovsd xmm0,QWORD PTR [rip+0x315a]        # 414680 <flatcc_builder_padding_base@@Base+0x2310>
  411526:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41152b:	vdivsd xmm0,xmm1,xmm0
  41152f:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411534:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411539:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41153e:	vmovsd xmm0,QWORD PTR [rip+0x313a]        # 414680 <flatcc_builder_padding_base@@Base+0x2310>
  411546:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41154b:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411550:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411555:	vmovsd xmm0,QWORD PTR [rip+0x311b]        # 414678 <flatcc_builder_padding_base@@Base+0x2308>
  41155d:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411562:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411567:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41156c:	vmovsd xmm0,QWORD PTR [rip+0x30fc]        # 414670 <flatcc_builder_padding_base@@Base+0x2300>
  411574:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411579:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41157e:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411583:	vmovsd xmm0,QWORD PTR [rip+0x30dd]        # 414668 <flatcc_builder_padding_base@@Base+0x22f8>
  41158b:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411590:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411595:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41159a:	vmovsd xmm0,QWORD PTR [rip+0x30be]        # 414660 <flatcc_builder_padding_base@@Base+0x22f0>
  4115a2:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4115a7:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115ac:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4115b1:	vmovsd xmm0,QWORD PTR [rip+0x309f]        # 414658 <flatcc_builder_padding_base@@Base+0x22e8>
  4115b9:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4115be:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115c3:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4115c8:	vmovsd xmm0,QWORD PTR [rip+0x3080]        # 414650 <flatcc_builder_padding_base@@Base+0x22e0>
  4115d0:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4115d5:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115da:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4115df:	vmovsd xmm0,QWORD PTR [rip+0x3061]        # 414648 <flatcc_builder_padding_base@@Base+0x22d8>
  4115e7:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4115ec:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115f1:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4115f6:	vmovsd xmm0,QWORD PTR [rip+0x3042]        # 414640 <flatcc_builder_padding_base@@Base+0x22d0>
  4115fe:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411603:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411608:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41160d:	vmovsd xmm0,QWORD PTR [rip+0x3023]        # 414638 <flatcc_builder_padding_base@@Base+0x22c8>
  411615:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41161a:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41161f:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411624:	vmovsd xmm0,QWORD PTR [rip+0x3004]        # 414630 <flatcc_builder_padding_base@@Base+0x22c0>
  41162c:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411631:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411636:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41163b:	vmovsd xmm0,QWORD PTR [rip+0x2fe5]        # 414628 <flatcc_builder_padding_base@@Base+0x22b8>
  411643:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411648:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41164d:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411652:	vmovsd xmm0,QWORD PTR [rip+0x2fc6]        # 414620 <flatcc_builder_padding_base@@Base+0x22b0>
  41165a:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41165f:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411664:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411669:	vmovsd xmm0,QWORD PTR [rip+0x2fa7]        # 414618 <flatcc_builder_padding_base@@Base+0x22a8>
  411671:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411676:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41167b:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411680:	vmovsd xmm0,QWORD PTR [rip+0x2f88]        # 414610 <flatcc_builder_padding_base@@Base+0x22a0>
  411688:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41168d:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411692:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411697:	vmovsd xmm0,QWORD PTR [rip+0x2f69]        # 414608 <flatcc_builder_padding_base@@Base+0x2298>
  41169f:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116a4:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116a9:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4116ae:	vmovsd xmm0,QWORD PTR [rip+0x2f4a]        # 414600 <flatcc_builder_padding_base@@Base+0x2290>
  4116b6:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116bb:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116c0:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4116c5:	vmovsd xmm0,QWORD PTR [rip+0x2f2b]        # 4145f8 <flatcc_builder_padding_base@@Base+0x2288>
  4116cd:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116d2:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116d7:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4116dc:	vmovsd xmm0,QWORD PTR [rip+0x2f0c]        # 4145f0 <flatcc_builder_padding_base@@Base+0x2280>
  4116e4:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116e9:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116ee:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  4116f3:	vmovsd xmm0,QWORD PTR [rip+0x2eed]        # 4145e8 <flatcc_builder_padding_base@@Base+0x2278>
  4116fb:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411700:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411705:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  41170a:	vmovsd xmm0,QWORD PTR [rip+0x2ece]        # 4145e0 <flatcc_builder_padding_base@@Base+0x2270>
  411712:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411717:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41171c:	jmp    411733 <flatcc_json_parser_struct_as_root@@Base+0xf63>
  411721:	vmovsd xmm0,QWORD PTR [rip+0x2eaf]        # 4145d8 <flatcc_builder_padding_base@@Base+0x2268>
  411729:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41172e:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411733:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  411738:	mov    rax,QWORD PTR [rbp+0x18]
  41173c:	vmovsd QWORD PTR [rax],xmm0
  411740:	jmp    4117a6 <flatcc_json_parser_struct_as_root@@Base+0xfd6>
  411745:	mov    rdi,QWORD PTR [rbp-0x28]
  411749:	mov    esi,DWORD PTR [rbp-0x2c]
  41174c:	mov    edx,DWORD PTR [rbp-0x30]
  41174f:	mov    ecx,DWORD PTR [rbp+0x10]
  411752:	mov    r8,QWORD PTR [rbp+0x18]
  411756:	call   40b900 <grisu3_diy_fp_encode_double@@Base>
  41175b:	cmp    eax,0x0
  41175e:	je     411769 <flatcc_json_parser_struct_as_root@@Base+0xf99>
  411764:	jmp    4117a6 <flatcc_json_parser_struct_as_root@@Base+0xfd6>
  411769:	mov    rdi,QWORD PTR [rbp-0x10]
  41176d:	lea    rsi,[rbp-0x40]
  411771:	call   403040 <strtod@plt>
  411776:	mov    rax,QWORD PTR [rbp+0x18]
  41177a:	vmovsd QWORD PTR [rax],xmm0
  41177e:	mov    rax,QWORD PTR [rbp-0x40]
  411782:	cmp    rax,QWORD PTR [rbp-0x18]
  411786:	jae    411799 <flatcc_json_parser_struct_as_root@@Base+0xfc9>
  41178c:	mov    rax,QWORD PTR [rbp-0x40]
  411790:	mov    QWORD PTR [rbp-0x8],rax
  411794:	jmp    4117df <flatcc_json_parser_struct_as_root@@Base+0x100f>
  411799:	mov    rax,QWORD PTR [rbp-0x18]
  41179d:	mov    QWORD PTR [rbp-0x8],rax
  4117a1:	jmp    4117df <flatcc_json_parser_struct_as_root@@Base+0x100f>
  4117a6:	cmp    DWORD PTR [rbp-0x1c],0x0
  4117aa:	je     4117d7 <flatcc_json_parser_struct_as_root@@Base+0x1007>
  4117b0:	mov    rax,QWORD PTR [rbp+0x18]
  4117b4:	vmovsd xmm0,QWORD PTR [rax]
  4117b8:	vmovq  rax,xmm0
  4117bd:	movabs rcx,0x8000000000000000
  4117c7:	xor    rax,rcx
  4117ca:	vmovq  xmm0,rax
  4117cf:	mov    rax,QWORD PTR [rbp+0x18]
  4117d3:	vmovsd QWORD PTR [rax],xmm0
  4117d7:	mov    rax,QWORD PTR [rbp-0x18]
  4117db:	mov    QWORD PTR [rbp-0x8],rax
  4117df:	mov    rax,QWORD PTR [rbp-0x8]
  4117e3:	add    rsp,0x50
  4117e7:	pop    rbp
  4117e8:	ret    
  4117e9:	nop    DWORD PTR [rax+0x0]
  4117f0:	push   rbp
  4117f1:	mov    rbp,rsp
  4117f4:	sub    rsp,0x40
  4117f8:	mov    QWORD PTR [rbp-0x10],rdi
  4117fc:	mov    QWORD PTR [rbp-0x18],rsi
  411800:	mov    QWORD PTR [rbp-0x20],rdx
  411804:	mov    DWORD PTR [rbp-0x24],ecx
  411807:	mov    QWORD PTR [rbp-0x30],r8
  41180b:	mov    QWORD PTR [rbp-0x38],r9
  41180f:	cmp    DWORD PTR [rbp-0x24],0x0
  411813:	je     411838 <flatcc_json_parser_struct_as_root@@Base+0x1068>
  411819:	mov    rdi,QWORD PTR [rbp-0x10]
  41181d:	mov    rsi,QWORD PTR [rbp-0x18]
  411821:	mov    rdx,QWORD PTR [rbp-0x20]
  411825:	mov    ecx,0x8
  41182a:	call   40c440 <flatcc_json_parser_set_error@@Base>
  41182f:	mov    QWORD PTR [rbp-0x8],rax
  411833:	jmp    411877 <flatcc_json_parser_struct_as_root@@Base+0x10a7>
  411838:	cmp    QWORD PTR [rbp-0x30],0xff
  411840:	jbe    411865 <flatcc_json_parser_struct_as_root@@Base+0x1095>
  411846:	mov    rdi,QWORD PTR [rbp-0x10]
  41184a:	mov    rsi,QWORD PTR [rbp-0x18]
  41184e:	mov    rdx,QWORD PTR [rbp-0x20]
  411852:	mov    ecx,0x7
  411857:	call   40c440 <flatcc_json_parser_set_error@@Base>
  41185c:	mov    QWORD PTR [rbp-0x8],rax
  411860:	jmp    411877 <flatcc_json_parser_struct_as_root@@Base+0x10a7>
  411865:	mov    rax,QWORD PTR [rbp-0x30]
  411869:	mov    rcx,QWORD PTR [rbp-0x38]
  41186d:	mov    BYTE PTR [rcx],al
  41186f:	mov    rcx,QWORD PTR [rbp-0x18]
  411873:	mov    QWORD PTR [rbp-0x8],rcx
  411877:	mov    rax,QWORD PTR [rbp-0x8]
  41187b:	add    rsp,0x40
  41187f:	pop    rbp
  411880:	ret    
  411881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41188b:	nop    DWORD PTR [rax+rax*1+0x0]
  411890:	push   rbp
  411891:	mov    rbp,rsp
  411894:	sub    rsp,0x20
  411898:	mov    QWORD PTR [rbp-0x8],rdi
  41189c:	mov    QWORD PTR [rbp-0x10],rsi
  4118a0:	mov    QWORD PTR [rbp-0x18],rdx
  4118a4:	mov    rdi,QWORD PTR [rbp-0x8]
  4118a8:	mov    rsi,QWORD PTR [rbp-0x10]
  4118ac:	mov    rdx,QWORD PTR [rbp-0x18]
  4118b0:	call   40e080 <flatcc_json_parser_float@@Base+0x2b0>
  4118b5:	mov    QWORD PTR [rbp-0x10],rax
  4118b9:	mov    rax,QWORD PTR [rbp-0x8]
  4118bd:	cmp    DWORD PTR [rax+0x14],0x0
  4118c1:	jne    4118dc <flatcc_json_parser_struct_as_root@@Base+0x110c>
  4118c7:	mov    rdi,QWORD PTR [rbp-0x8]
  4118cb:	mov    rsi,QWORD PTR [rbp-0x10]
  4118cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4118d3:	call   40d030 <flatcc_json_parser_skip_constant@@Base+0x110>
  4118d8:	mov    QWORD PTR [rbp-0x10],rax
  4118dc:	mov    rax,QWORD PTR [rbp-0x10]
  4118e0:	add    rsp,0x20
  4118e4:	pop    rbp
  4118e5:	ret    
  4118e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118f0:	push   rbp
  4118f1:	mov    rbp,rsp
  4118f4:	mov    BYTE PTR [rbp-0x1],dil
  4118f8:	movzx  eax,BYTE PTR [rbp-0x1]
  4118fc:	pop    rbp
  4118fd:	ret    
  4118fe:	xchg   ax,ax

0000000000411900 <__libc_csu_init@@Base>:
  411900:	endbr64 
  411904:	push   r15
  411906:	lea    r15,[rip+0x74eb]        # 418df8 <flatcc_builder_padding_base@@Base+0x6a88>
  41190d:	push   r14
  41190f:	mov    r14,rdx
  411912:	push   r13
  411914:	mov    r13,rsi
  411917:	push   r12
  411919:	mov    r12d,edi
  41191c:	push   rbp
  41191d:	lea    rbp,[rip+0x74dc]        # 418e00 <flatcc_builder_padding_base@@Base+0x6a90>
  411924:	push   rbx
  411925:	sub    rbp,r15
  411928:	sub    rsp,0x8
  41192c:	call   403000 <free@plt-0x30>
  411931:	sar    rbp,0x3
  411935:	je     411956 <__libc_csu_init@@Base+0x56>
  411937:	xor    ebx,ebx
  411939:	nop    DWORD PTR [rax+0x0]
  411940:	mov    rdx,r14
  411943:	mov    rsi,r13
  411946:	mov    edi,r12d
  411949:	call   QWORD PTR [r15+rbx*8]
  41194d:	add    rbx,0x1
  411951:	cmp    rbp,rbx
  411954:	jne    411940 <__libc_csu_init@@Base+0x40>
  411956:	add    rsp,0x8
  41195a:	pop    rbx
  41195b:	pop    rbp
  41195c:	pop    r12
  41195e:	pop    r13
  411960:	pop    r14
  411962:	pop    r15
  411964:	ret    
  411965:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411970 <__libc_csu_fini@@Base>:
  411970:	endbr64 
  411974:	ret    

Disassembly of section .fini:

0000000000411978 <.fini>:
  411978:	endbr64 
  41197c:	sub    rsp,0x8
  411980:	add    rsp,0x8
  411984:	ret    
