
../repos/prog2/0.11.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__stack_chk_fail@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__stack_chk_fail@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  401036:	push   0x0
  40103b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401040 <printf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <printf@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <__stack_chk_fail@plt-0x10>

Disassembly of section .text:

0000000000401060 <_start@@Base>:
  401060:	endbr64 
  401064:	xor    ebp,ebp
  401066:	mov    r9,rdx
  401069:	pop    rsi
  40106a:	mov    rdx,rsp
  40106d:	and    rsp,0xfffffffffffffff0
  401071:	push   rax
  401072:	push   rsp
  401073:	mov    r8,0x401300
  40107a:	mov    rcx,0x401290
  401081:	mov    rdi,0x4011d1
  401088:	call   QWORD PTR [rip+0x2f62]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40108e:	hlt    
  40108f:	nop
  401090:	endbr64 
  401094:	ret    
  401095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40109f:	nop
  4010a0:	mov    eax,0x404047
  4010a5:	push   rbp
  4010a6:	sub    rax,0x404040
  4010ac:	cmp    rax,0xe
  4010b0:	mov    rbp,rsp
  4010b3:	jbe    4010d0 <_start@@Base+0x70>
  4010b5:	mov    eax,0x0
  4010ba:	test   rax,rax
  4010bd:	je     4010d0 <_start@@Base+0x70>
  4010bf:	pop    rbp
  4010c0:	mov    edi,0x404040
  4010c5:	jmp    rax
  4010c7:	nop    WORD PTR [rax+rax*1+0x0]
  4010d0:	pop    rbp
  4010d1:	ret    
  4010d2:	nop    DWORD PTR [rax+0x0]
  4010d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010e0:	mov    esi,0x404040
  4010e5:	push   rbp
  4010e6:	sub    rsi,0x404040
  4010ed:	sar    rsi,0x3
  4010f1:	mov    rbp,rsp
  4010f4:	mov    rax,rsi
  4010f7:	shr    rax,0x3f
  4010fb:	add    rsi,rax
  4010fe:	sar    rsi,1
  401101:	je     401118 <_start@@Base+0xb8>
  401103:	mov    eax,0x0
  401108:	test   rax,rax
  40110b:	je     401118 <_start@@Base+0xb8>
  40110d:	pop    rbp
  40110e:	mov    edi,0x404040
  401113:	jmp    rax
  401115:	nop    DWORD PTR [rax]
  401118:	pop    rbp
  401119:	ret    
  40111a:	nop    WORD PTR [rax+rax*1+0x0]
  401120:	cmp    BYTE PTR [rip+0x2f19],0x0        # 404040 <__bss_start@@Base>
  401127:	jne    40113a <_start@@Base+0xda>
  401129:	push   rbp
  40112a:	mov    rbp,rsp
  40112d:	call   4010a0 <_start@@Base+0x40>
  401132:	pop    rbp
  401133:	mov    BYTE PTR [rip+0x2f06],0x1        # 404040 <__bss_start@@Base>
  40113a:	repz ret 
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	mov    edi,0x403e18
  401145:	cmp    QWORD PTR [rdi],0x0
  401149:	jne    401150 <_start@@Base+0xf0>
  40114b:	jmp    4010e0 <_start@@Base+0x80>
  40114d:	nop    DWORD PTR [rax]
  401150:	mov    eax,0x0
  401155:	test   rax,rax
  401158:	je     40114b <_start@@Base+0xeb>
  40115a:	push   rbp
  40115b:	mov    rbp,rsp
  40115e:	call   rax
  401160:	pop    rbp
  401161:	jmp    4010e0 <_start@@Base+0x80>

0000000000401166 <invert@@Base>:
  401166:	push   rbp
  401167:	mov    rbp,rsp
  40116a:	mov    DWORD PTR [rbp-0x14],edi
  40116d:	mov    DWORD PTR [rbp-0x4],0x0
  401174:	jmp    4011c6 <invert@@Base+0x60>
  401176:	mov    edx,DWORD PTR [rbp-0x4]
  401179:	mov    eax,edx
  40117b:	shl    eax,0x2
  40117e:	add    eax,edx
  401180:	add    eax,eax
  401182:	mov    DWORD PTR [rbp-0x4],eax
  401185:	mov    ecx,DWORD PTR [rbp-0x14]
  401188:	mov    edx,0x66666667
  40118d:	mov    eax,ecx
  40118f:	imul   edx
  401191:	sar    edx,0x2
  401194:	mov    eax,ecx
  401196:	sar    eax,0x1f
  401199:	sub    edx,eax
  40119b:	mov    eax,edx
  40119d:	shl    eax,0x2
  4011a0:	add    eax,edx
  4011a2:	add    eax,eax
  4011a4:	sub    ecx,eax
  4011a6:	mov    edx,ecx
  4011a8:	add    DWORD PTR [rbp-0x4],edx
  4011ab:	mov    ecx,DWORD PTR [rbp-0x14]
  4011ae:	mov    edx,0x66666667
  4011b3:	mov    eax,ecx
  4011b5:	imul   edx
  4011b7:	sar    edx,0x2
  4011ba:	mov    eax,ecx
  4011bc:	sar    eax,0x1f
  4011bf:	sub    edx,eax
  4011c1:	mov    eax,edx
  4011c3:	mov    DWORD PTR [rbp-0x14],eax
  4011c6:	cmp    DWORD PTR [rbp-0x14],0x0
  4011ca:	jne    401176 <invert@@Base+0x10>
  4011cc:	mov    eax,DWORD PTR [rbp-0x4]
  4011cf:	pop    rbp
  4011d0:	ret    

00000000004011d1 <main@@Base>:
  4011d1:	push   rbp
  4011d2:	mov    rbp,rsp
  4011d5:	push   rbx
  4011d6:	sub    rsp,0x28
  4011da:	mov    rax,QWORD PTR fs:0x28
  4011e3:	mov    QWORD PTR [rbp-0x18],rax
  4011e7:	xor    eax,eax
  4011e9:	lea    rax,[rbp-0x28]
  4011ed:	mov    rsi,rax
  4011f0:	lea    rdi,[rip+0xe0d]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011f7:	mov    eax,0x0
  4011fc:	call   401050 <__isoc99_scanf@plt>
  401201:	mov    DWORD PTR [rbp-0x1c],0x0
  401208:	jmp    40125c <main@@Base+0x8b>
  40120a:	lea    rdx,[rbp-0x20]
  40120e:	lea    rax,[rbp-0x24]
  401212:	mov    rsi,rax
  401215:	lea    rdi,[rip+0xdeb]        # 402007 <_IO_stdin_used@@Base+0x7>
  40121c:	mov    eax,0x0
  401221:	call   401050 <__isoc99_scanf@plt>
  401226:	mov    eax,DWORD PTR [rbp-0x24]
  401229:	mov    edi,eax
  40122b:	call   401166 <invert@@Base>
  401230:	mov    ebx,eax
  401232:	mov    eax,DWORD PTR [rbp-0x20]
  401235:	mov    edi,eax
  401237:	call   401166 <invert@@Base>
  40123c:	add    eax,ebx
  40123e:	mov    edi,eax
  401240:	call   401166 <invert@@Base>
  401245:	mov    esi,eax
  401247:	lea    rdi,[rip+0xdbf]        # 40200d <_IO_stdin_used@@Base+0xd>
  40124e:	mov    eax,0x0
  401253:	call   401040 <printf@plt>
  401258:	add    DWORD PTR [rbp-0x1c],0x1
  40125c:	mov    eax,DWORD PTR [rbp-0x28]
  40125f:	cmp    DWORD PTR [rbp-0x1c],eax
  401262:	jl     40120a <main@@Base+0x39>
  401264:	mov    eax,0x0
  401269:	mov    rcx,QWORD PTR [rbp-0x18]
  40126d:	xor    rcx,QWORD PTR fs:0x28
  401276:	je     40127d <main@@Base+0xac>
  401278:	call   401030 <__stack_chk_fail@plt>
  40127d:	add    rsp,0x28
  401281:	pop    rbx
  401282:	pop    rbp
  401283:	ret    
  401284:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40128e:	xchg   ax,ax

0000000000401290 <__libc_csu_init@@Base>:
  401290:	endbr64 
  401294:	push   r15
  401296:	lea    r15,[rip+0x2b6b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40129d:	push   r14
  40129f:	mov    r14,rdx
  4012a2:	push   r13
  4012a4:	mov    r13,rsi
  4012a7:	push   r12
  4012a9:	mov    r12d,edi
  4012ac:	push   rbp
  4012ad:	lea    rbp,[rip+0x2b5c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4012b4:	push   rbx
  4012b5:	sub    rbp,r15
  4012b8:	sub    rsp,0x8
  4012bc:	call   401000 <__stack_chk_fail@plt-0x30>
  4012c1:	sar    rbp,0x3
  4012c5:	je     4012e6 <__libc_csu_init@@Base+0x56>
  4012c7:	xor    ebx,ebx
  4012c9:	nop    DWORD PTR [rax+0x0]
  4012d0:	mov    rdx,r14
  4012d3:	mov    rsi,r13
  4012d6:	mov    edi,r12d
  4012d9:	call   QWORD PTR [r15+rbx*8]
  4012dd:	add    rbx,0x1
  4012e1:	cmp    rbp,rbx
  4012e4:	jne    4012d0 <__libc_csu_init@@Base+0x40>
  4012e6:	add    rsp,0x8
  4012ea:	pop    rbx
  4012eb:	pop    rbp
  4012ec:	pop    r12
  4012ee:	pop    r13
  4012f0:	pop    r14
  4012f2:	pop    r15
  4012f4:	ret    
  4012f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401300 <__libc_csu_fini@@Base>:
  401300:	endbr64 
  401304:	ret    

Disassembly of section .fini:

0000000000401308 <.fini>:
  401308:	endbr64 
  40130c:	sub    rsp,0x8
  401310:	add    rsp,0x8
  401314:	ret    
