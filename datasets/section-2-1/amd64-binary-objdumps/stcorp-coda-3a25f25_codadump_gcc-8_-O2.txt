
../repos/stcorp-coda-3a25f25/codadump:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <coda_cursor_get_byte_size@plt-0x62a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <_IO_stdin_used@@Base+0x4008>
  403026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 410010 <_IO_stdin_used@@Base+0x4010>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40318f:	nop
  403190:	endbr64 
  403194:	push   0x16
  403199:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40319f:	nop
  4031a0:	endbr64 
  4031a4:	push   0x17
  4031a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031af:	nop
  4031b0:	endbr64 
  4031b4:	push   0x18
  4031b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031bf:	nop
  4031c0:	endbr64 
  4031c4:	push   0x19
  4031c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031cf:	nop
  4031d0:	endbr64 
  4031d4:	push   0x1a
  4031d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	push   0x1b
  4031e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031ef:	nop
  4031f0:	endbr64 
  4031f4:	push   0x1c
  4031f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031ff:	nop
  403200:	endbr64 
  403204:	push   0x1d
  403209:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40320f:	nop
  403210:	endbr64 
  403214:	push   0x1e
  403219:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40321f:	nop
  403220:	endbr64 
  403224:	push   0x1f
  403229:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40322f:	nop
  403230:	endbr64 
  403234:	push   0x20
  403239:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40323f:	nop
  403240:	endbr64 
  403244:	push   0x21
  403249:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40324f:	nop
  403250:	endbr64 
  403254:	push   0x22
  403259:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40325f:	nop
  403260:	endbr64 
  403264:	push   0x23
  403269:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40326f:	nop
  403270:	endbr64 
  403274:	push   0x24
  403279:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40327f:	nop
  403280:	endbr64 
  403284:	push   0x25
  403289:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40328f:	nop
  403290:	endbr64 
  403294:	push   0x26
  403299:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40329f:	nop
  4032a0:	endbr64 
  4032a4:	push   0x27
  4032a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032af:	nop
  4032b0:	endbr64 
  4032b4:	push   0x28
  4032b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	push   0x29
  4032c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	push   0x2a
  4032d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032df:	nop
  4032e0:	endbr64 
  4032e4:	push   0x2b
  4032e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032ef:	nop
  4032f0:	endbr64 
  4032f4:	push   0x2c
  4032f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032ff:	nop
  403300:	endbr64 
  403304:	push   0x2d
  403309:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40330f:	nop
  403310:	endbr64 
  403314:	push   0x2e
  403319:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40331f:	nop
  403320:	endbr64 
  403324:	push   0x2f
  403329:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40332f:	nop
  403330:	endbr64 
  403334:	push   0x30
  403339:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40333f:	nop
  403340:	endbr64 
  403344:	push   0x31
  403349:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40334f:	nop
  403350:	endbr64 
  403354:	push   0x32
  403359:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40335f:	nop
  403360:	endbr64 
  403364:	push   0x33
  403369:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40336f:	nop
  403370:	endbr64 
  403374:	push   0x34
  403379:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40337f:	nop
  403380:	endbr64 
  403384:	push   0x35
  403389:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40338f:	nop
  403390:	endbr64 
  403394:	push   0x36
  403399:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40339f:	nop
  4033a0:	endbr64 
  4033a4:	push   0x37
  4033a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033af:	nop
  4033b0:	endbr64 
  4033b4:	push   0x38
  4033b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033bf:	nop
  4033c0:	endbr64 
  4033c4:	push   0x39
  4033c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033cf:	nop
  4033d0:	endbr64 
  4033d4:	push   0x3a
  4033d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033df:	nop
  4033e0:	endbr64 
  4033e4:	push   0x3b
  4033e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033ef:	nop
  4033f0:	endbr64 
  4033f4:	push   0x3c
  4033f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033ff:	nop
  403400:	endbr64 
  403404:	push   0x3d
  403409:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40340f:	nop
  403410:	endbr64 
  403414:	push   0x3e
  403419:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40341f:	nop
  403420:	endbr64 
  403424:	push   0x3f
  403429:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40342f:	nop
  403430:	endbr64 
  403434:	push   0x40
  403439:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40343f:	nop
  403440:	endbr64 
  403444:	push   0x41
  403449:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40344f:	nop
  403450:	endbr64 
  403454:	push   0x42
  403459:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40345f:	nop
  403460:	endbr64 
  403464:	push   0x43
  403469:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40346f:	nop
  403470:	endbr64 
  403474:	push   0x44
  403479:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40347f:	nop
  403480:	endbr64 
  403484:	push   0x45
  403489:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40348f:	nop
  403490:	endbr64 
  403494:	push   0x46
  403499:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40349f:	nop
  4034a0:	endbr64 
  4034a4:	push   0x47
  4034a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034af:	nop
  4034b0:	endbr64 
  4034b4:	push   0x48
  4034b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034bf:	nop
  4034c0:	endbr64 
  4034c4:	push   0x49
  4034c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034cf:	nop
  4034d0:	endbr64 
  4034d4:	push   0x4a
  4034d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034df:	nop
  4034e0:	endbr64 
  4034e4:	push   0x4b
  4034e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034ef:	nop
  4034f0:	endbr64 
  4034f4:	push   0x4c
  4034f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034ff:	nop
  403500:	endbr64 
  403504:	push   0x4d
  403509:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40350f:	nop
  403510:	endbr64 
  403514:	push   0x4e
  403519:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40351f:	nop
  403520:	endbr64 
  403524:	push   0x4f
  403529:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40352f:	nop
  403530:	endbr64 
  403534:	push   0x50
  403539:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40353f:	nop
  403540:	endbr64 
  403544:	push   0x51
  403549:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40354f:	nop
  403550:	endbr64 
  403554:	push   0x52
  403559:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40355f:	nop
  403560:	endbr64 
  403564:	push   0x53
  403569:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40356f:	nop
  403570:	endbr64 
  403574:	push   0x54
  403579:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40357f:	nop
  403580:	endbr64 
  403584:	push   0x55
  403589:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40358f:	nop
  403590:	endbr64 
  403594:	push   0x56
  403599:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40359f:	nop
  4035a0:	endbr64 
  4035a4:	push   0x57
  4035a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035af:	nop
  4035b0:	endbr64 
  4035b4:	push   0x58
  4035b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035bf:	nop
  4035c0:	endbr64 
  4035c4:	push   0x59
  4035c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035cf:	nop
  4035d0:	endbr64 
  4035d4:	push   0x5a
  4035d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035df:	nop
  4035e0:	endbr64 
  4035e4:	push   0x5b
  4035e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035ef:	nop
  4035f0:	endbr64 
  4035f4:	push   0x5c
  4035f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035ff:	nop
  403600:	endbr64 
  403604:	push   0x5d
  403609:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40360f:	nop
  403610:	endbr64 
  403614:	push   0x5e
  403619:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40361f:	nop
  403620:	endbr64 
  403624:	push   0x5f
  403629:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40362f:	nop
  403630:	endbr64 
  403634:	push   0x60
  403639:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40363f:	nop

Disassembly of section .plt.sec:

0000000000403640 <coda_cursor_get_byte_size@plt>:
  403640:	endbr64 
  403644:	bnd jmp QWORD PTR [rip+0xc9cd]        # 410018 <coda_cursor_get_byte_size>
  40364b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403650 <coda_type_get_special_type_name@plt>:
  403650:	endbr64 
  403654:	bnd jmp QWORD PTR [rip+0xc9c5]        # 410020 <coda_type_get_special_type_name>
  40365b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403660 <coda_set_option_use_fast_size_expressions@plt>:
  403660:	endbr64 
  403664:	bnd jmp QWORD PTR [rip+0xc9bd]        # 410028 <coda_set_option_use_fast_size_expressions>
  40366b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403670 <coda_get_option_bypass_special_types@plt>:
  403670:	endbr64 
  403674:	bnd jmp QWORD PTR [rip+0xc9b5]        # 410030 <coda_get_option_bypass_special_types>
  40367b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403680 <free@plt>:
  403680:	endbr64 
  403684:	bnd jmp QWORD PTR [rip+0xc9ad]        # 410038 <free@GLIBC_2.2.5>
  40368b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403690 <putchar@plt>:
  403690:	endbr64 
  403694:	bnd jmp QWORD PTR [rip+0xc9a5]        # 410040 <putchar@GLIBC_2.2.5>
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036a0 <coda_set_option_perform_boundary_checks@plt>:
  4036a0:	endbr64 
  4036a4:	bnd jmp QWORD PTR [rip+0xc99d]        # 410048 <coda_set_option_perform_boundary_checks>
  4036ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036b0 <__vfprintf_chk@plt>:
  4036b0:	endbr64 
  4036b4:	bnd jmp QWORD PTR [rip+0xc995]        # 410050 <__vfprintf_chk@GLIBC_2.3.4>
  4036bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036c0 <strncpy@plt>:
  4036c0:	endbr64 
  4036c4:	bnd jmp QWORD PTR [rip+0xc98d]        # 410058 <strncpy@GLIBC_2.2.5>
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036d0 <coda_type_get_record_field_hidden_status@plt>:
  4036d0:	endbr64 
  4036d4:	bnd jmp QWORD PTR [rip+0xc985]        # 410060 <coda_type_get_record_field_hidden_status>
  4036db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036e0 <coda_cursor_get_record_field_available_status@plt>:
  4036e0:	endbr64 
  4036e4:	bnd jmp QWORD PTR [rip+0xc97d]        # 410068 <coda_cursor_get_record_field_available_status>
  4036eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036f0 <coda_set_error@plt>:
  4036f0:	endbr64 
  4036f4:	bnd jmp QWORD PTR [rip+0xc975]        # 410070 <coda_set_error>
  4036fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403700 <coda_open@plt>:
  403700:	endbr64 
  403704:	bnd jmp QWORD PTR [rip+0xc96d]        # 410078 <coda_open>
  40370b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403710 <coda_time_double_to_string@plt>:
  403710:	endbr64 
  403714:	bnd jmp QWORD PTR [rip+0xc965]        # 410080 <coda_time_double_to_string>
  40371b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403720 <puts@plt>:
  403720:	endbr64 
  403724:	bnd jmp QWORD PTR [rip+0xc95d]        # 410088 <puts@GLIBC_2.2.5>
  40372b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403730 <coda_cursor_get_num_elements@plt>:
  403730:	endbr64 
  403734:	bnd jmp QWORD PTR [rip+0xc955]        # 410090 <coda_cursor_get_num_elements>
  40373b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403740 <coda_str64u@plt>:
  403740:	endbr64 
  403744:	bnd jmp QWORD PTR [rip+0xc94d]        # 410098 <coda_str64u>
  40374b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403750 <coda_set_option_use_mmap@plt>:
  403750:	endbr64 
  403754:	bnd jmp QWORD PTR [rip+0xc945]        # 4100a0 <coda_set_option_use_mmap>
  40375b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403760 <coda_set_definition_path_conditional@plt>:
  403760:	endbr64 
  403764:	bnd jmp QWORD PTR [rip+0xc93d]        # 4100a8 <coda_set_definition_path_conditional>
  40376b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403770 <coda_cursor_read_uint32@plt>:
  403770:	endbr64 
  403774:	bnd jmp QWORD PTR [rip+0xc935]        # 4100b0 <coda_cursor_read_uint32>
  40377b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403780 <coda_set_option_bypass_special_types@plt>:
  403780:	endbr64 
  403784:	bnd jmp QWORD PTR [rip+0xc92d]        # 4100b8 <coda_set_option_bypass_special_types>
  40378b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403790 <coda_type_get_record_field_type@plt>:
  403790:	endbr64 
  403794:	bnd jmp QWORD PTR [rip+0xc925]        # 4100c0 <coda_type_get_record_field_type>
  40379b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037a0 <coda_cursor_get_type@plt>:
  4037a0:	endbr64 
  4037a4:	bnd jmp QWORD PTR [rip+0xc91d]        # 4100c8 <coda_cursor_get_type>
  4037ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037b0 <coda_isInf@plt>:
  4037b0:	endbr64 
  4037b4:	bnd jmp QWORD PTR [rip+0xc915]        # 4100d0 <coda_isInf>
  4037bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037c0 <coda_type_get_bit_size@plt>:
  4037c0:	endbr64 
  4037c4:	bnd jmp QWORD PTR [rip+0xc90d]        # 4100d8 <coda_type_get_bit_size>
  4037cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037d0 <coda_type_get_record_field_available_status@plt>:
  4037d0:	endbr64 
  4037d4:	bnd jmp QWORD PTR [rip+0xc905]        # 4100e0 <coda_type_get_record_field_available_status>
  4037db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037e0 <fclose@plt>:
  4037e0:	endbr64 
  4037e4:	bnd jmp QWORD PTR [rip+0xc8fd]        # 4100e8 <fclose@GLIBC_2.2.5>
  4037eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037f0 <coda_cursor_has_attributes@plt>:
  4037f0:	endbr64 
  4037f4:	bnd jmp QWORD PTR [rip+0xc8f5]        # 4100f0 <coda_cursor_has_attributes>
  4037fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403800 <coda_cursor_get_type_class@plt>:
  403800:	endbr64 
  403804:	bnd jmp QWORD PTR [rip+0xc8ed]        # 4100f8 <coda_cursor_get_type_class>
  40380b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403810 <coda_set_definition_path@plt>:
  403810:	endbr64 
  403814:	bnd jmp QWORD PTR [rip+0xc8e5]        # 410100 <coda_set_definition_path>
  40381b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403820 <coda_get_product_format@plt>:
  403820:	endbr64 
  403824:	bnd jmp QWORD PTR [rip+0xc8dd]        # 410108 <coda_get_product_format>
  40382b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403830 <coda_type_get_unit@plt>:
  403830:	endbr64 
  403834:	bnd jmp QWORD PTR [rip+0xc8d5]        # 410110 <coda_type_get_unit>
  40383b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403840 <coda_type_get_description@plt>:
  403840:	endbr64 
  403844:	bnd jmp QWORD PTR [rip+0xc8cd]        # 410118 <coda_type_get_description>
  40384b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403850 <__stack_chk_fail@plt>:
  403850:	endbr64 
  403854:	bnd jmp QWORD PTR [rip+0xc8c5]        # 410120 <__stack_chk_fail@GLIBC_2.4>
  40385b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403860 <__assert_fail@plt>:
  403860:	endbr64 
  403864:	bnd jmp QWORD PTR [rip+0xc8bd]        # 410128 <__assert_fail@GLIBC_2.2.5>
  40386b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403870 <fputs@plt>:
  403870:	endbr64 
  403874:	bnd jmp QWORD PTR [rip+0xc8b5]        # 410130 <fputs@GLIBC_2.2.5>
  40387b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403880 <coda_cursor_get_special_type@plt>:
  403880:	endbr64 
  403884:	bnd jmp QWORD PTR [rip+0xc8ad]        # 410138 <coda_cursor_get_special_type>
  40388b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403890 <coda_cursor_goto_first_array_element@plt>:
  403890:	endbr64 
  403894:	bnd jmp QWORD PTR [rip+0xc8a5]        # 410140 <coda_cursor_goto_first_array_element>
  40389b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038a0 <memset@plt>:
  4038a0:	endbr64 
  4038a4:	bnd jmp QWORD PTR [rip+0xc89d]        # 410148 <memset@GLIBC_2.2.5>
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038b0 <coda_cursor_set_product@plt>:
  4038b0:	endbr64 
  4038b4:	bnd jmp QWORD PTR [rip+0xc895]        # 410150 <coda_cursor_set_product>
  4038bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038c0 <coda_cursor_goto_first_record_field@plt>:
  4038c0:	endbr64 
  4038c4:	bnd jmp QWORD PTR [rip+0xc88d]        # 410158 <coda_cursor_goto_first_record_field>
  4038cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038d0 <fputc@plt>:
  4038d0:	endbr64 
  4038d4:	bnd jmp QWORD PTR [rip+0xc885]        # 410160 <fputc@GLIBC_2.2.5>
  4038db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038e0 <coda_cursor_goto_record_field_by_index@plt>:
  4038e0:	endbr64 
  4038e4:	bnd jmp QWORD PTR [rip+0xc87d]        # 410168 <coda_cursor_goto_record_field_by_index>
  4038eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038f0 <coda_done@plt>:
  4038f0:	endbr64 
  4038f4:	bnd jmp QWORD PTR [rip+0xc875]        # 410170 <coda_done>
  4038fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403900 <coda_cursor_get_read_type@plt>:
  403900:	endbr64 
  403904:	bnd jmp QWORD PTR [rip+0xc86d]        # 410178 <coda_cursor_get_read_type>
  40390b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403910 <strcmp@plt>:
  403910:	endbr64 
  403914:	bnd jmp QWORD PTR [rip+0xc865]        # 410180 <strcmp@GLIBC_2.2.5>
  40391b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403920 <coda_cursor_read_string@plt>:
  403920:	endbr64 
  403924:	bnd jmp QWORD PTR [rip+0xc85d]        # 410188 <coda_cursor_read_string>
  40392b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403930 <coda_cursor_goto_parent@plt>:
  403930:	endbr64 
  403934:	bnd jmp QWORD PTR [rip+0xc855]        # 410190 <coda_cursor_goto_parent>
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403940 <strtol@plt>:
  403940:	endbr64 
  403944:	bnd jmp QWORD PTR [rip+0xc84d]        # 410198 <strtol@GLIBC_2.2.5>
  40394b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403950 <coda_type_get_num_record_fields@plt>:
  403950:	endbr64 
  403954:	bnd jmp QWORD PTR [rip+0xc845]        # 4101a0 <coda_type_get_num_record_fields>
  40395b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403960 <memcpy@plt>:
  403960:	endbr64 
  403964:	bnd jmp QWORD PTR [rip+0xc83d]        # 4101a8 <memcpy@GLIBC_2.14>
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403970 <coda_type_get_read_type@plt>:
  403970:	endbr64 
  403974:	bnd jmp QWORD PTR [rip+0xc835]        # 4101b0 <coda_type_get_read_type>
  40397b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403980 <coda_cursor_get_string_length@plt>:
  403980:	endbr64 
  403984:	bnd jmp QWORD PTR [rip+0xc82d]        # 4101b8 <coda_cursor_get_string_length>
  40398b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403990 <coda_cursor_read_uint64@plt>:
  403990:	endbr64 
  403994:	bnd jmp QWORD PTR [rip+0xc825]        # 4101c0 <coda_cursor_read_uint64>
  40399b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039a0 <coda_cursor_read_double@plt>:
  4039a0:	endbr64 
  4039a4:	bnd jmp QWORD PTR [rip+0xc81d]        # 4101c8 <coda_cursor_read_double>
  4039ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039b0 <coda_isNaN@plt>:
  4039b0:	endbr64 
  4039b4:	bnd jmp QWORD PTR [rip+0xc815]        # 4101d0 <coda_isNaN>
  4039bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039c0 <coda_cursor_goto_next_array_element@plt>:
  4039c0:	endbr64 
  4039c4:	bnd jmp QWORD PTR [rip+0xc80d]        # 4101d8 <coda_cursor_goto_next_array_element>
  4039cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039d0 <coda_open_as@plt>:
  4039d0:	endbr64 
  4039d4:	bnd jmp QWORD PTR [rip+0xc805]        # 4101e0 <coda_open_as>
  4039db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039e0 <coda_init@plt>:
  4039e0:	endbr64 
  4039e4:	bnd jmp QWORD PTR [rip+0xc7fd]        # 4101e8 <coda_init>
  4039eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039f0 <coda_set_option_perform_conversions@plt>:
  4039f0:	endbr64 
  4039f4:	bnd jmp QWORD PTR [rip+0xc7f5]        # 4101f0 <coda_set_option_perform_conversions>
  4039fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a00 <malloc@plt>:
  403a00:	endbr64 
  403a04:	bnd jmp QWORD PTR [rip+0xc7ed]        # 4101f8 <malloc@GLIBC_2.2.5>
  403a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a10 <fflush@plt>:
  403a10:	endbr64 
  403a14:	bnd jmp QWORD PTR [rip+0xc7e5]        # 410200 <fflush@GLIBC_2.2.5>
  403a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a20 <coda_cursor_goto_attributes@plt>:
  403a20:	endbr64 
  403a24:	bnd jmp QWORD PTR [rip+0xc7dd]        # 410208 <coda_cursor_goto_attributes>
  403a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a30 <coda_cursor_read_char@plt>:
  403a30:	endbr64 
  403a34:	bnd jmp QWORD PTR [rip+0xc7d5]        # 410210 <coda_cursor_read_char>
  403a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a40 <coda_type_get_special_type@plt>:
  403a40:	endbr64 
  403a44:	bnd jmp QWORD PTR [rip+0xc7cd]        # 410218 <coda_type_get_special_type>
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a50 <coda_type_get_record_union_status@plt>:
  403a50:	endbr64 
  403a54:	bnd jmp QWORD PTR [rip+0xc7c5]        # 410220 <coda_type_get_record_union_status>
  403a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a60 <coda_cursor_read_complex_double_split@plt>:
  403a60:	endbr64 
  403a64:	bnd jmp QWORD PTR [rip+0xc7bd]        # 410228 <coda_cursor_read_complex_double_split>
  403a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a70 <coda_type_get_array_base_type@plt>:
  403a70:	endbr64 
  403a74:	bnd jmp QWORD PTR [rip+0xc7b5]        # 410230 <coda_type_get_array_base_type>
  403a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a80 <coda_type_get_string_length@plt>:
  403a80:	endbr64 
  403a84:	bnd jmp QWORD PTR [rip+0xc7ad]        # 410238 <coda_type_get_string_length>
  403a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a90 <coda_type_get_native_type_name@plt>:
  403a90:	endbr64 
  403a94:	bnd jmp QWORD PTR [rip+0xc7a5]        # 410240 <coda_type_get_native_type_name>
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403aa0 <__printf_chk@plt>:
  403aa0:	endbr64 
  403aa4:	bnd jmp QWORD PTR [rip+0xc79d]        # 410248 <__printf_chk@GLIBC_2.3.4>
  403aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ab0 <coda_cursor_get_array_dim@plt>:
  403ab0:	endbr64 
  403ab4:	bnd jmp QWORD PTR [rip+0xc795]        # 410250 <coda_cursor_get_array_dim>
  403abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ac0 <coda_cursor_has_ascii_content@plt>:
  403ac0:	endbr64 
  403ac4:	bnd jmp QWORD PTR [rip+0xc78d]        # 410258 <coda_cursor_has_ascii_content>
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ad0 <coda_close@plt>:
  403ad0:	endbr64 
  403ad4:	bnd jmp QWORD PTR [rip+0xc785]        # 410260 <coda_close>
  403adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ae0 <coda_cursor_read_int64@plt>:
  403ae0:	endbr64 
  403ae4:	bnd jmp QWORD PTR [rip+0xc77d]        # 410268 <coda_cursor_read_int64>
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403af0 <coda_cursor_goto@plt>:
  403af0:	endbr64 
  403af4:	bnd jmp QWORD PTR [rip+0xc775]        # 410270 <coda_cursor_goto>
  403afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b00 <coda_type_get_record_field_index_from_name@plt>:
  403b00:	endbr64 
  403b04:	bnd jmp QWORD PTR [rip+0xc76d]        # 410278 <coda_type_get_record_field_index_from_name>
  403b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b10 <coda_cursor_read_complex_double_pair@plt>:
  403b10:	endbr64 
  403b14:	bnd jmp QWORD PTR [rip+0xc765]        # 410280 <coda_cursor_read_complex_double_pair>
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b20 <coda_cursor_goto_next_record_field@plt>:
  403b20:	endbr64 
  403b24:	bnd jmp QWORD PTR [rip+0xc75d]        # 410288 <coda_cursor_goto_next_record_field>
  403b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b30 <fopen@plt>:
  403b30:	endbr64 
  403b34:	bnd jmp QWORD PTR [rip+0xc755]        # 410290 <fopen@GLIBC_2.2.5>
  403b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b40 <coda_type_get_array_dim@plt>:
  403b40:	endbr64 
  403b44:	bnd jmp QWORD PTR [rip+0xc74d]        # 410298 <coda_type_get_array_dim>
  403b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b50 <coda_cursor_get_bit_size@plt>:
  403b50:	endbr64 
  403b54:	bnd jmp QWORD PTR [rip+0xc745]        # 4102a0 <coda_cursor_get_bit_size>
  403b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b60 <coda_errno_to_string@plt>:
  403b60:	endbr64 
  403b64:	bnd jmp QWORD PTR [rip+0xc73d]        # 4102a8 <coda_errno_to_string>
  403b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b70 <coda_cursor_use_base_type_of_special_type@plt>:
  403b70:	endbr64 
  403b74:	bnd jmp QWORD PTR [rip+0xc735]        # 4102b0 <coda_cursor_use_base_type_of_special_type>
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b80 <coda_cursor_get_available_union_field_index@plt>:
  403b80:	endbr64 
  403b84:	bnd jmp QWORD PTR [rip+0xc72d]        # 4102b8 <coda_cursor_get_available_union_field_index>
  403b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b90 <exit@plt>:
  403b90:	endbr64 
  403b94:	bnd jmp QWORD PTR [rip+0xc725]        # 4102c0 <exit@GLIBC_2.2.5>
  403b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ba0 <coda_cursor_read_int32@plt>:
  403ba0:	endbr64 
  403ba4:	bnd jmp QWORD PTR [rip+0xc71d]        # 4102c8 <coda_cursor_read_int32>
  403bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bb0 <fwrite@plt>:
  403bb0:	endbr64 
  403bb4:	bnd jmp QWORD PTR [rip+0xc715]        # 4102d0 <fwrite@GLIBC_2.2.5>
  403bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bc0 <__fprintf_chk@plt>:
  403bc0:	endbr64 
  403bc4:	bnd jmp QWORD PTR [rip+0xc70d]        # 4102d8 <__fprintf_chk@GLIBC_2.3.4>
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bd0 <coda_cursor_get_file_bit_offset@plt>:
  403bd0:	endbr64 
  403bd4:	bnd jmp QWORD PTR [rip+0xc705]        # 4102e0 <coda_cursor_get_file_bit_offset>
  403bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403be0 <coda_get_libcoda_version@plt>:
  403be0:	endbr64 
  403be4:	bnd jmp QWORD PTR [rip+0xc6fd]        # 4102e8 <coda_get_libcoda_version>
  403beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bf0 <coda_get_errno@plt>:
  403bf0:	endbr64 
  403bf4:	bnd jmp QWORD PTR [rip+0xc6f5]        # 4102f0 <coda_get_errno>
  403bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c00 <coda_type_get_special_base_type@plt>:
  403c00:	endbr64 
  403c04:	bnd jmp QWORD PTR [rip+0xc6ed]        # 4102f8 <coda_type_get_special_base_type>
  403c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c10 <coda_type_get_record_field_name@plt>:
  403c10:	endbr64 
  403c14:	bnd jmp QWORD PTR [rip+0xc6e5]        # 410300 <coda_type_get_record_field_name>
  403c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c20 <coda_cursor_read_bits@plt>:
  403c20:	endbr64 
  403c24:	bnd jmp QWORD PTR [rip+0xc6dd]        # 410308 <coda_cursor_read_bits>
  403c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c30 <coda_str64@plt>:
  403c30:	endbr64 
  403c34:	bnd jmp QWORD PTR [rip+0xc6d5]        # 410310 <coda_str64>
  403c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c40 <coda_type_get_class@plt>:
  403c40:	endbr64 
  403c44:	bnd jmp QWORD PTR [rip+0xc6cd]        # 410318 <coda_type_get_class>
  403c4b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403c50 <main@@Base>:
  403c50:	endbr64 
  403c54:	push   r15
  403c56:	push   r14
  403c58:	push   r13
  403c5a:	push   r12
  403c5c:	push   rbp
  403c5d:	push   rbx
  403c5e:	sub    rsp,0x58
  403c62:	cmp    edi,0x1
  403c65:	je     403c8a <main@@Base+0x3a>
  403c67:	mov    r12,QWORD PTR [rsi+0x8]
  403c6b:	mov    ebx,edi
  403c6d:	mov    rbp,rsi
  403c70:	mov    ecx,0x3
  403c75:	lea    rdi,[rip+0x8f04]        # 40cb80 <_IO_stdin_used@@Base+0xb80>
  403c7c:	mov    rsi,r12
  403c7f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403c81:	seta   al
  403c84:	sbb    al,0x0
  403c86:	test   al,al
  403c88:	jne    403c98 <main@@Base+0x48>
  403c8a:	xor    eax,eax
  403c8c:	call   40b700 <print_yaml_data@@Base+0x120>
  403c91:	xor    edi,edi
  403c93:	call   403b90 <exit@plt>
  403c98:	lea    rsi,[rip+0x8e96]        # 40cb35 <_IO_stdin_used@@Base+0xb35>
  403c9f:	mov    rdi,r12
  403ca2:	call   403910 <strcmp@plt>
  403ca7:	test   eax,eax
  403ca9:	je     403c8a <main@@Base+0x3a>
  403cab:	lea    rsi,[rip+0x8ed1]        # 40cb83 <_IO_stdin_used@@Base+0xb83>
  403cb2:	mov    rdi,r12
  403cb5:	call   403910 <strcmp@plt>
  403cba:	test   eax,eax
  403cbc:	je     403ef4 <main@@Base+0x2a4>
  403cc2:	lea    rsi,[rip+0x8ea2]        # 40cb6b <_IO_stdin_used@@Base+0xb6b>
  403cc9:	mov    rdi,r12
  403ccc:	call   403910 <strcmp@plt>
  403cd1:	test   eax,eax
  403cd3:	je     403ef4 <main@@Base+0x2a4>
  403cd9:	cmp    ebx,0x2
  403cdc:	jle    403d02 <main@@Base+0xb2>
  403cde:	lea    rsi,[rip+0x8eb6]        # 40cb9b <_IO_stdin_used@@Base+0xb9b>
  403ce5:	mov    rdi,r12
  403ce8:	call   403910 <strcmp@plt>
  403ced:	test   eax,eax
  403cef:	jne    403d02 <main@@Base+0xb2>
  403cf1:	mov    rdi,QWORD PTR [rbp+0x10]
  403cf5:	mov    r12d,0x3
  403cfb:	call   403810 <coda_set_definition_path@plt>
  403d00:	jmp    403d22 <main@@Base+0xd2>
  403d02:	mov    rdi,QWORD PTR [rbp+0x0]
  403d06:	lea    rdx,[rip+0x8e91]        # 40cb9e <_IO_stdin_used@@Base+0xb9e>
  403d0d:	xor    esi,esi
  403d0f:	call   403760 <coda_set_definition_path_conditional@plt>
  403d14:	mov    r12d,0x1
  403d1a:	test   eax,eax
  403d1c:	jne    404e68 <main@@Base+0x1218>
  403d22:	movsxd rax,r12d
  403d25:	mov    r13,QWORD PTR [rbp+rax*8+0x0]
  403d2a:	lea    rsi,[rip+0x8e87]        # 40cbb8 <_IO_stdin_used@@Base+0xbb8>
  403d31:	mov    rdi,r13
  403d34:	lea    r14,[rax*8+0x0]
  403d3c:	call   403910 <strcmp@plt>
  403d41:	mov    r15d,eax
  403d44:	test   eax,eax
  403d46:	je     403f2c <main@@Base+0x2dc>
  403d4c:	lea    rsi,[rip+0x8ec5]        # 40cc18 <_IO_stdin_used@@Base+0xc18>
  403d53:	mov    rdi,r13
  403d56:	call   403910 <strcmp@plt>
  403d5b:	mov    r15d,eax
  403d5e:	test   eax,eax
  403d60:	je     40433b <main@@Base+0x6eb>
  403d66:	lea    rsi,[rip+0x8eff]        # 40cc6c <_IO_stdin_used@@Base+0xc6c>
  403d6d:	mov    rdi,r13
  403d70:	call   403910 <strcmp@plt>
  403d75:	mov    r15d,eax
  403d78:	test   eax,eax
  403d7a:	je     4046f5 <main@@Base+0xaa5>
  403d80:	lea    rsi,[rip+0x8ef7]        # 40cc7e <_IO_stdin_used@@Base+0xc7e>
  403d87:	mov    rdi,r13
  403d8a:	call   403910 <strcmp@plt>
  403d8f:	mov    r15d,eax
  403d92:	test   eax,eax
  403d94:	je     4049b6 <main@@Base+0xd66>
  403d9a:	lea    rsi,[rip+0x8ee2]        # 40cc83 <_IO_stdin_used@@Base+0xc83>
  403da1:	mov    rdi,r13
  403da4:	call   403910 <strcmp@plt>
  403da9:	mov    DWORD PTR [rsp+0x38],eax
  403dad:	test   eax,eax
  403daf:	jne    404d8f <main@@Base+0x113f>
  403db5:	mov    rax,0x4114dc
  403dbc:	mov    rdx,0x4114c0
  403dc3:	mov    DWORD PTR [rax],0x5
  403dc9:	mov    rax,0x410380
  403dd0:	inc    r12d
  403dd3:	mov    QWORD PTR [rax],0x0
  403dda:	mov    QWORD PTR [rsp],rax
  403dde:	mov    rax,0x410368
  403de5:	sub    ebx,r12d
  403de8:	mov    QWORD PTR [rax],0x0
  403def:	mov    QWORD PTR [rsp+0x8],rax
  403df4:	mov    rax,0x4114e0
  403dfb:	mov    QWORD PTR [rsp+0x18],rdx
  403e00:	mov    QWORD PTR [rax],0x0
  403e07:	mov    QWORD PTR [rsp+0x20],rax
  403e0c:	mov    rax,QWORD PTR [rip+0xc1cd]        # 40ffe0 <stdout@GLIBC_2.2.5>
  403e13:	mov    QWORD PTR [rsp+0x30],0x0
  403e1c:	mov    rax,QWORD PTR [rax]
  403e1f:	mov    QWORD PTR [rsp+0x28],0x0
  403e28:	mov    QWORD PTR [rdx],rax
  403e2b:	lea    eax,[rbx-0x1]
  403e2e:	mov    DWORD PTR [rsp+0x14],eax
  403e32:	lea    r13,[rbp+r14*1+0x8]
  403e37:	mov    r15d,0x1
  403e3d:	xor    ebp,ebp
  403e3f:	cmp    ebx,ebp
  403e41:	jle    404626 <main@@Base+0x9d6>
  403e47:	movsxd rax,ebp
  403e4a:	mov    r12,QWORD PTR [r13+rax*8+0x0]
  403e4f:	lea    rsi,[rip+0x8d84]        # 40cbda <_IO_stdin_used@@Base+0xbda>
  403e56:	mov    rdi,r12
  403e59:	lea    r14,[rax*8+0x0]
  403e61:	call   403910 <strcmp@plt>
  403e66:	test   eax,eax
  403e68:	je     4040cb <main@@Base+0x47b>
  403e6e:	lea    rsi,[rip+0x9853]        # 40d6c8 <_IO_stdin_used@@Base+0x16c8>
  403e75:	mov    rdi,r12
  403e78:	call   403910 <strcmp@plt>
  403e7d:	test   eax,eax
  403e7f:	je     4040cb <main@@Base+0x47b>
  403e85:	lea    rsi,[rip+0x8d98]        # 40cc24 <_IO_stdin_used@@Base+0xc24>
  403e8c:	mov    rdi,r12
  403e8f:	call   403910 <strcmp@plt>
  403e94:	test   eax,eax
  403e96:	je     4040df <main@@Base+0x48f>
  403e9c:	lea    rsi,[rip+0x8d84]        # 40cc27 <_IO_stdin_used@@Base+0xc27>
  403ea3:	mov    rdi,r12
  403ea6:	call   403910 <strcmp@plt>
  403eab:	test   eax,eax
  403ead:	je     4040df <main@@Base+0x48f>
  403eb3:	lea    rsi,[rip+0x8dba]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  403eba:	mov    rdi,r12
  403ebd:	call   403910 <strcmp@plt>
  403ec2:	test   eax,eax
  403ec4:	jne    404241 <main@@Base+0x5f1>
  403eca:	lea    edx,[rbp+0x1]
  403ecd:	cmp    ebx,edx
  403ecf:	jle    404109 <main@@Base+0x4b9>
  403ed5:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  403eda:	cmp    BYTE PTR [rax],0x2d
  403edd:	je     404109 <main@@Base+0x4b9>
  403ee3:	mov    rcx,QWORD PTR [rsp+0x20]
  403ee8:	mov    ebp,edx
  403eea:	mov    QWORD PTR [rcx],rax
  403eed:	inc    ebp
  403eef:	jmp    403e3f <main@@Base+0x1ef>
  403ef4:	call   403be0 <coda_get_libcoda_version@plt>
  403ef9:	mov    rdx,rax
  403efc:	lea    rsi,[rip+0x8c83]        # 40cb86 <_IO_stdin_used@@Base+0xb86>
  403f03:	mov    edi,0x1
  403f08:	xor    eax,eax
  403f0a:	call   403aa0 <__printf_chk@plt>
  403f0f:	lea    rdi,[rip+0x9bb2]        # 40dac8 <_IO_stdin_used@@Base+0x1ac8>
  403f16:	call   403720 <puts@plt>
  403f1b:	mov    edi,0xa
  403f20:	call   403690 <putchar@plt>
  403f25:	xor    edi,edi
  403f27:	call   403b90 <exit@plt>
  403f2c:	mov    rax,0x4114dc
  403f33:	lea    rbp,[rbp+r14*1+0x8]
  403f38:	mov    DWORD PTR [rax],0x0
  403f3e:	mov    rax,0x410380
  403f45:	inc    r12d
  403f48:	mov    QWORD PTR [rax],0x0
  403f4f:	mov    QWORD PTR [rsp],rax
  403f53:	mov    QWORD PTR [rax+0x428],0x0
  403f5e:	mov    rax,0x410360
  403f65:	mov    r14,0x410378
  403f6c:	mov    DWORD PTR [rax],0x1
  403f72:	mov    rax,0x410364
  403f79:	sub    ebx,r12d
  403f7c:	mov    DWORD PTR [rax],0x0
  403f82:	mov    rax,0x4114d0
  403f89:	mov    DWORD PTR [r14],0x0
  403f90:	mov    DWORD PTR [rax],0x0
  403f96:	mov    rax,0x410374
  403f9d:	mov    DWORD PTR [rax],0x0
  403fa3:	mov    rax,0x4114d4
  403faa:	mov    DWORD PTR [rax],0x0
  403fb0:	test   ebx,ebx
  403fb2:	jle    404d8f <main@@Base+0x113f>
  403fb8:	lea    eax,[rbx-0x1]
  403fbb:	mov    DWORD PTR [rsp+0x8],0x1
  403fc3:	mov    DWORD PTR [rsp+0x14],0x1
  403fcb:	mov    DWORD PTR [rsp+0x20],eax
  403fcf:	jmp    404094 <main@@Base+0x444>
  403fd4:	lea    rsi,[rip+0x8a11]        # 40c9ec <_IO_stdin_used@@Base+0x9ec>
  403fdb:	mov    rdi,r13
  403fde:	call   403910 <strcmp@plt>
  403fe3:	test   eax,eax
  403fe5:	je     4040c2 <main@@Base+0x472>
  403feb:	lea    rsi,[rip+0x8be8]        # 40cbda <_IO_stdin_used@@Base+0xbda>
  403ff2:	mov    rdi,r13
  403ff5:	call   403910 <strcmp@plt>
  403ffa:	test   eax,eax
  403ffc:	je     4040d5 <main@@Base+0x485>
  404002:	lea    rsi,[rip+0x8bd4]        # 40cbdd <_IO_stdin_used@@Base+0xbdd>
  404009:	mov    rdi,r13
  40400c:	call   403910 <strcmp@plt>
  404011:	test   eax,eax
  404013:	je     4040d5 <main@@Base+0x485>
  404019:	lea    rsi,[rip+0x8bd3]        # 40cbf3 <_IO_stdin_used@@Base+0xbf3>
  404020:	mov    rdi,r13
  404023:	call   403910 <strcmp@plt>
  404028:	test   eax,eax
  40402a:	je     404043 <main@@Base+0x3f3>
  40402c:	lea    rsi,[rip+0x8bc3]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  404033:	mov    rdi,r13
  404036:	call   403910 <strcmp@plt>
  40403b:	test   eax,eax
  40403d:	jne    4041a5 <main@@Base+0x555>
  404043:	lea    ecx,[r15+0x1]
  404047:	cmp    ebx,ecx
  404049:	mov    DWORD PTR [rsp+0x18],ecx
  40404d:	jle    4041a5 <main@@Base+0x555>
  404053:	mov    rdi,QWORD PTR [rbp+r12*1+0x8]
  404058:	cmp    BYTE PTR [rdi],0x2d
  40405b:	je     4041a5 <main@@Base+0x555>
  404061:	call   408a90 <codadump_filter_create@@Base>
  404066:	mov    rdx,QWORD PTR [rsp]
  40406a:	test   rax,rax
  40406d:	mov    QWORD PTR [rdx+0x428],rax
  404074:	mov    ecx,DWORD PTR [rsp+0x18]
  404078:	je     404e19 <main@@Base+0x11c9>
  40407e:	mov    r15d,ecx
  404081:	nop    DWORD PTR [rax+0x0]
  404088:	inc    r15d
  40408b:	cmp    ebx,r15d
  40408e:	jle    4042c0 <main@@Base+0x670>
  404094:	movsxd rax,r15d
  404097:	mov    r13,QWORD PTR [rbp+rax*8+0x0]
  40409c:	mov    ecx,0x3
  4040a1:	mov    rsi,r13
  4040a4:	lea    rdi,[rip+0x8b2c]        # 40cbd7 <_IO_stdin_used@@Base+0xbd7>
  4040ab:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4040ad:	lea    r12,[rax*8+0x0]
  4040b5:	seta   al
  4040b8:	sbb    al,0x0
  4040ba:	test   al,al
  4040bc:	jne    403fd4 <main@@Base+0x384>
  4040c2:	mov    DWORD PTR [r14],0x1
  4040c9:	jmp    404088 <main@@Base+0x438>
  4040cb:	xor    r15d,r15d
  4040ce:	inc    ebp
  4040d0:	jmp    403e3f <main@@Base+0x1ef>
  4040d5:	mov    DWORD PTR [rsp+0x8],0x0
  4040dd:	jmp    404088 <main@@Base+0x438>
  4040df:	lea    edx,[rbp+0x1]
  4040e2:	cmp    ebx,edx
  4040e4:	jle    40422a <main@@Base+0x5da>
  4040ea:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  4040ef:	cmp    BYTE PTR [rax],0x2d
  4040f2:	je     4046ba <main@@Base+0xa6a>
  4040f8:	mov    rcx,QWORD PTR [rsp+0x8]
  4040fd:	mov    ebp,edx
  4040ff:	mov    QWORD PTR [rcx],rax
  404102:	inc    ebp
  404104:	jmp    403e3f <main@@Base+0x1ef>
  404109:	lea    rsi,[rip+0x8b85]        # 40cc95 <_IO_stdin_used@@Base+0xc95>
  404110:	mov    rdi,r12
  404113:	call   403910 <strcmp@plt>
  404118:	test   eax,eax
  40411a:	jne    404182 <main@@Base+0x532>
  40411c:	lea    ecx,[rbp+0x3]
  40411f:	cmp    ebx,ecx
  404121:	mov    DWORD PTR [rsp+0x3c],ecx
  404125:	jle    404182 <main@@Base+0x532>
  404127:	mov    r8,QWORD PTR [r13+r14*1+0x8]
  40412c:	cmp    BYTE PTR [r8],0x2d
  404130:	mov    QWORD PTR [rsp+0x40],r8
  404135:	je     404182 <main@@Base+0x532>
  404137:	mov    r9,QWORD PTR [r13+r14*1+0x10]
  40413c:	cmp    BYTE PTR [r9],0x2d
  404140:	mov    QWORD PTR [rsp+0x48],r9
  404145:	je     404182 <main@@Base+0x532>
  404147:	mov    rdi,QWORD PTR [r13+r14*1+0x18]
  40414c:	cmp    BYTE PTR [rdi],0x2d
  40414f:	je     404182 <main@@Base+0x532>
  404151:	mov    edx,0xa
  404156:	xor    esi,esi
  404158:	call   403940 <strtol@plt>
  40415d:	mov    ecx,DWORD PTR [rsp+0x3c]
  404161:	mov    r9,QWORD PTR [rsp+0x48]
  404166:	mov    r8,QWORD PTR [rsp+0x40]
  40416b:	mov    ebp,ecx
  40416d:	mov    DWORD PTR [rsp+0x38],eax
  404171:	mov    QWORD PTR [rsp+0x30],r9
  404176:	mov    QWORD PTR [rsp+0x28],r8
  40417b:	inc    ebp
  40417d:	jmp    403e3f <main@@Base+0x1ef>
  404182:	cmp    ebp,DWORD PTR [rsp+0x14]
  404186:	jne    404d8f <main@@Base+0x113f>
  40418c:	cmp    BYTE PTR [r12],0x2d
  404191:	je     404d8f <main@@Base+0x113f>
  404197:	mov    rax,QWORD PTR [rsp]
  40419b:	inc    ebp
  40419d:	mov    QWORD PTR [rax],r12
  4041a0:	jmp    403e3f <main@@Base+0x1ef>
  4041a5:	lea    rsi,[rip+0x8a53]        # 40cbff <_IO_stdin_used@@Base+0xbff>
  4041ac:	mov    rdi,r13
  4041af:	call   403910 <strcmp@plt>
  4041b4:	test   eax,eax
  4041b6:	je     4042ae <main@@Base+0x65e>
  4041bc:	lea    rsi,[rip+0x8844]        # 40ca07 <_IO_stdin_used@@Base+0xa07>
  4041c3:	mov    rdi,r13
  4041c6:	call   403910 <strcmp@plt>
  4041cb:	test   eax,eax
  4041cd:	je     4042ae <main@@Base+0x65e>
  4041d3:	lea    rsi,[rip+0x8a28]        # 40cc02 <_IO_stdin_used@@Base+0xc02>
  4041da:	mov    rdi,r13
  4041dd:	call   403910 <strcmp@plt>
  4041e2:	test   eax,eax
  4041e4:	je     4049a4 <main@@Base+0xd54>
  4041ea:	lea    rsi,[rip+0x882d]        # 40ca1e <_IO_stdin_used@@Base+0xa1e>
  4041f1:	mov    rdi,r13
  4041f4:	call   403910 <strcmp@plt>
  4041f9:	test   eax,eax
  4041fb:	je     4049a4 <main@@Base+0xd54>
  404201:	lea    rsi,[rip+0x8829]        # 40ca31 <_IO_stdin_used@@Base+0xa31>
  404208:	mov    rdi,r13
  40420b:	call   403910 <strcmp@plt>
  404210:	test   eax,eax
  404212:	jne    404d09 <main@@Base+0x10b9>
  404218:	mov    rax,0x4114d4
  40421f:	mov    DWORD PTR [rax],0x1
  404225:	jmp    404088 <main@@Base+0x438>
  40422a:	lea    rsi,[rip+0x8a43]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  404231:	mov    rdi,r12
  404234:	call   403910 <strcmp@plt>
  404239:	test   eax,eax
  40423b:	je     404109 <main@@Base+0x4b9>
  404241:	lea    rsi,[rip+0x8a2f]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  404248:	mov    rdi,r12
  40424b:	call   403910 <strcmp@plt>
  404250:	test   eax,eax
  404252:	je     403eca <main@@Base+0x27a>
  404258:	lea    rsi,[rip+0x8a2a]        # 40cc89 <_IO_stdin_used@@Base+0xc89>
  40425f:	mov    rdi,r12
  404262:	call   403910 <strcmp@plt>
  404267:	test   eax,eax
  404269:	jne    404109 <main@@Base+0x4b9>
  40426f:	lea    ecx,[rbp+0x1]
  404272:	cmp    ebx,ecx
  404274:	mov    DWORD PTR [rsp+0x3c],ecx
  404278:	jle    404109 <main@@Base+0x4b9>
  40427e:	mov    rdi,QWORD PTR [r13+r14*1+0x8]
  404283:	cmp    BYTE PTR [rdi],0x2d
  404286:	je     404109 <main@@Base+0x4b9>
  40428c:	mov    edx,0xa
  404291:	xor    esi,esi
  404293:	call   403940 <strtol@plt>
  404298:	mov    ecx,DWORD PTR [rsp+0x3c]
  40429c:	mov    rdx,0x410338
  4042a3:	mov    ebp,ecx
  4042a5:	mov    DWORD PTR [rdx],eax
  4042a7:	inc    ebp
  4042a9:	jmp    403e3f <main@@Base+0x1ef>
  4042ae:	mov    rax,0x4114d0
  4042b5:	mov    DWORD PTR [rax],0x1
  4042bb:	jmp    404088 <main@@Base+0x438>
  4042c0:	mov    rax,QWORD PTR [rsp]
  4042c4:	mov    rax,QWORD PTR [rax]
  4042c7:	test   rax,rax
  4042ca:	je     404d8f <main@@Base+0x113f>
  4042d0:	cmp    BYTE PTR [rax],0x0
  4042d3:	je     404d8f <main@@Base+0x113f>
  4042d9:	call   4039e0 <coda_init@plt>
  4042de:	test   eax,eax
  4042e0:	jne    404e68 <main@@Base+0x1218>
  4042e6:	mov    edi,DWORD PTR [rsp+0x14]
  4042ea:	xor    edi,0x1
  4042ed:	call   403780 <coda_set_option_bypass_special_types@plt>
  4042f2:	xor    edi,edi
  4042f4:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  4042f9:	mov    edi,DWORD PTR [rsp+0x8]
  4042fd:	call   4039f0 <coda_set_option_perform_conversions@plt>
  404302:	xor    eax,eax
  404304:	call   40a680 <traverse_info_init@@Base>
  404309:	xor    eax,eax
  40430b:	call   407970 <dim_info_init@@Base>
  404310:	xor    eax,eax
  404312:	call   40a700 <traverse_product@@Base>
  404317:	xor    eax,eax
  404319:	call   407990 <dim_info_done@@Base>
  40431e:	xor    eax,eax
  404320:	call   40a6c0 <traverse_info_done@@Base>
  404325:	call   4038f0 <coda_done@plt>
  40432a:	add    rsp,0x58
  40432e:	pop    rbx
  40432f:	pop    rbp
  404330:	pop    r12
  404332:	pop    r13
  404334:	pop    r14
  404336:	xor    eax,eax
  404338:	pop    r15
  40433a:	ret    
  40433b:	mov    rax,0x4114dc
  404342:	lea    rdx,[rip+0x7eb9]        # 40c202 <_IO_stdin_used@@Base+0x202>
  404349:	mov    DWORD PTR [rax],0x1
  40434f:	mov    rax,0x410380
  404356:	inc    r12d
  404359:	mov    QWORD PTR [rax],0x0
  404360:	mov    QWORD PTR [rsp],rax
  404364:	mov    QWORD PTR [rax+0x428],0x0
  40436f:	mov    rax,0x410368
  404376:	sub    ebx,r12d
  404379:	mov    QWORD PTR [rax],0x0
  404380:	mov    QWORD PTR [rsp+0x8],rax
  404385:	mov    rax,0x4114c8
  40438c:	lea    r13,[rbp+r14*1+0x8]
  404391:	mov    QWORD PTR [rax],rdx
  404394:	mov    rax,QWORD PTR [rip+0xbc45]        # 40ffe0 <stdout@GLIBC_2.2.5>
  40439b:	mov    rdx,0x4114c0
  4043a2:	mov    rax,QWORD PTR [rax]
  4043a5:	mov    QWORD PTR [rsp+0x18],rdx
  4043aa:	mov    QWORD PTR [rdx],rax
  4043ad:	mov    rax,0x410360
  4043b4:	mov    r14d,0x1
  4043ba:	mov    DWORD PTR [rax],0x1
  4043c0:	mov    rax,0x410378
  4043c7:	mov    DWORD PTR [rsp+0x20],0x1
  4043cf:	mov    DWORD PTR [rax],0x1
  4043d5:	mov    rax,0x4114d8
  4043dc:	mov    DWORD PTR [rax],0x0
  4043e2:	mov    rax,0x411690
  4043e9:	mov    DWORD PTR [rax],0x0
  4043ef:	mov    rax,0x411694
  4043f6:	mov    DWORD PTR [rax],0x0
  4043fc:	mov    rax,0x410370
  404403:	mov    DWORD PTR [rax],0x0
  404409:	lea    eax,[rbx-0x1]
  40440c:	mov    DWORD PTR [rsp+0x28],eax
  404410:	jmp    404488 <main@@Base+0x838>
  404412:	lea    rsi,[rip+0x87c4]        # 40cbdd <_IO_stdin_used@@Base+0xbdd>
  404419:	mov    rdi,rbp
  40441c:	call   403910 <strcmp@plt>
  404421:	test   eax,eax
  404423:	je     4044b8 <main@@Base+0x868>
  404429:	lea    rsi,[rip+0x87c3]        # 40cbf3 <_IO_stdin_used@@Base+0xbf3>
  404430:	mov    rdi,rbp
  404433:	call   403910 <strcmp@plt>
  404438:	test   eax,eax
  40443a:	je     40444f <main@@Base+0x7ff>
  40443c:	lea    rsi,[rip+0x87b3]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  404443:	mov    rdi,rbp
  404446:	call   403910 <strcmp@plt>
  40444b:	test   eax,eax
  40444d:	jne    4044bd <main@@Base+0x86d>
  40444f:	lea    edx,[r15+0x1]
  404453:	cmp    ebx,edx
  404455:	mov    DWORD PTR [rsp+0x14],edx
  404459:	jle    4044bd <main@@Base+0x86d>
  40445b:	mov    rdi,QWORD PTR [r13+r12*1+0x8]
  404460:	cmp    BYTE PTR [rdi],0x2d
  404463:	je     4044bd <main@@Base+0x86d>
  404465:	call   408a90 <codadump_filter_create@@Base>
  40446a:	mov    rdx,QWORD PTR [rsp]
  40446e:	test   rax,rax
  404471:	mov    QWORD PTR [rdx+0x428],rax
  404478:	mov    edx,DWORD PTR [rsp+0x14]
  40447c:	je     404e19 <main@@Base+0x11c9>
  404482:	mov    r15d,edx
  404485:	inc    r15d
  404488:	cmp    ebx,r15d
  40448b:	jle    404585 <main@@Base+0x935>
  404491:	movsxd rax,r15d
  404494:	mov    rbp,QWORD PTR [r13+rax*8+0x0]
  404499:	lea    rsi,[rip+0x873a]        # 40cbda <_IO_stdin_used@@Base+0xbda>
  4044a0:	mov    rdi,rbp
  4044a3:	lea    r12,[rax*8+0x0]
  4044ab:	call   403910 <strcmp@plt>
  4044b0:	test   eax,eax
  4044b2:	jne    404412 <main@@Base+0x7c2>
  4044b8:	xor    r14d,r14d
  4044bb:	jmp    404485 <main@@Base+0x835>
  4044bd:	lea    rsi,[rip+0x875a]        # 40cc1e <_IO_stdin_used@@Base+0xc1e>
  4044c4:	mov    rdi,rbp
  4044c7:	call   403910 <strcmp@plt>
  4044cc:	test   eax,eax
  4044ce:	je     404561 <main@@Base+0x911>
  4044d4:	lea    rsi,[rip+0x85ab]        # 40ca86 <_IO_stdin_used@@Base+0xa86>
  4044db:	mov    rdi,rbp
  4044de:	call   403910 <strcmp@plt>
  4044e3:	test   eax,eax
  4044e5:	je     404561 <main@@Base+0x911>
  4044e7:	lea    rsi,[rip+0x8733]        # 40cc21 <_IO_stdin_used@@Base+0xc21>
  4044ee:	mov    rdi,rbp
  4044f1:	call   403910 <strcmp@plt>
  4044f6:	test   eax,eax
  4044f8:	je     404573 <main@@Base+0x923>
  4044fa:	lea    rsi,[rip+0x859d]        # 40ca9e <_IO_stdin_used@@Base+0xa9e>
  404501:	mov    rdi,rbp
  404504:	call   403910 <strcmp@plt>
  404509:	test   eax,eax
  40450b:	je     404573 <main@@Base+0x923>
  40450d:	lea    rsi,[rip+0x8710]        # 40cc24 <_IO_stdin_used@@Base+0xc24>
  404514:	mov    rdi,rbp
  404517:	call   403910 <strcmp@plt>
  40451c:	test   eax,eax
  40451e:	je     404537 <main@@Base+0x8e7>
  404520:	lea    rsi,[rip+0x8700]        # 40cc27 <_IO_stdin_used@@Base+0xc27>
  404527:	mov    rdi,rbp
  40452a:	call   403910 <strcmp@plt>
  40452f:	test   eax,eax
  404531:	jne    404c65 <main@@Base+0x1015>
  404537:	lea    eax,[r15+0x1]
  40453b:	cmp    ebx,eax
  40453d:	jle    404c65 <main@@Base+0x1015>
  404543:	mov    rdx,QWORD PTR [r13+r12*1+0x8]
  404548:	cmp    BYTE PTR [rdx],0x2d
  40454b:	je     404c65 <main@@Base+0x1015>
  404551:	mov    rcx,QWORD PTR [rsp+0x8]
  404556:	mov    r15d,eax
  404559:	mov    QWORD PTR [rcx],rdx
  40455c:	jmp    404485 <main@@Base+0x835>
  404561:	mov    rax,0x4114d8
  404568:	mov    DWORD PTR [rax],0x1
  40456e:	jmp    404485 <main@@Base+0x835>
  404573:	mov    rax,0x411690
  40457a:	mov    DWORD PTR [rax],0x1
  404580:	jmp    404485 <main@@Base+0x835>
  404585:	mov    rax,QWORD PTR [rsp]
  404589:	mov    rax,QWORD PTR [rax]
  40458c:	test   rax,rax
  40458f:	je     404d8f <main@@Base+0x113f>
  404595:	cmp    BYTE PTR [rax],0x0
  404598:	je     404d8f <main@@Base+0x113f>
  40459e:	call   4039e0 <coda_init@plt>
  4045a3:	test   eax,eax
  4045a5:	jne    404e68 <main@@Base+0x1218>
  4045ab:	mov    edi,DWORD PTR [rsp+0x20]
  4045af:	xor    edi,0x1
  4045b2:	call   403780 <coda_set_option_bypass_special_types@plt>
  4045b7:	xor    edi,edi
  4045b9:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  4045be:	mov    edi,r14d
  4045c1:	call   4039f0 <coda_set_option_perform_conversions@plt>
  4045c6:	xor    eax,eax
  4045c8:	call   40a680 <traverse_info_init@@Base>
  4045cd:	xor    eax,eax
  4045cf:	call   407970 <dim_info_init@@Base>
  4045d4:	mov    rax,QWORD PTR [rsp+0x8]
  4045d9:	mov    rdi,QWORD PTR [rax]
  4045dc:	test   rdi,rdi
  4045df:	je     4045fe <main@@Base+0x9ae>
  4045e1:	lea    rsi,[rip+0x8682]        # 40cc6a <_IO_stdin_used@@Base+0xc6a>
  4045e8:	call   403b30 <fopen@plt>
  4045ed:	mov    rdx,QWORD PTR [rsp+0x18]
  4045f2:	mov    QWORD PTR [rdx],rax
  4045f5:	test   rax,rax
  4045f8:	je     404e39 <main@@Base+0x11e9>
  4045fe:	xor    eax,eax
  404600:	call   40a700 <traverse_product@@Base>
  404605:	mov    rax,QWORD PTR [rsp+0x8]
  40460a:	cmp    QWORD PTR [rax],0x0
  40460e:	je     404317 <main@@Base+0x6c7>
  404614:	mov    rax,QWORD PTR [rsp+0x18]
  404619:	mov    rdi,QWORD PTR [rax]
  40461c:	call   4037e0 <fclose@plt>
  404621:	jmp    404317 <main@@Base+0x6c7>
  404626:	mov    rax,QWORD PTR [rsp]
  40462a:	mov    rax,QWORD PTR [rax]
  40462d:	test   rax,rax
  404630:	je     404d8f <main@@Base+0x113f>
  404636:	cmp    BYTE PTR [rax],0x0
  404639:	je     404d8f <main@@Base+0x113f>
  40463f:	call   4039e0 <coda_init@plt>
  404644:	test   eax,eax
  404646:	jne    404e68 <main@@Base+0x1218>
  40464c:	xor    edi,edi
  40464e:	call   4039f0 <coda_set_option_perform_conversions@plt>
  404653:	mov    edi,r15d
  404656:	call   403660 <coda_set_option_use_fast_size_expressions@plt>
  40465b:	mov    rax,QWORD PTR [rsp+0x8]
  404660:	mov    rdi,QWORD PTR [rax]
  404663:	test   rdi,rdi
  404666:	je     404685 <main@@Base+0xa35>
  404668:	lea    rsi,[rip+0x85fb]        # 40cc6a <_IO_stdin_used@@Base+0xc6a>
  40466f:	call   403b30 <fopen@plt>
  404674:	mov    rdx,QWORD PTR [rsp+0x18]
  404679:	mov    QWORD PTR [rdx],rax
  40467c:	test   rax,rax
  40467f:	je     404e39 <main@@Base+0x11e9>
  404685:	mov    edx,DWORD PTR [rsp+0x38]
  404689:	mov    rsi,QWORD PTR [rsp+0x30]
  40468e:	mov    rdi,QWORD PTR [rsp+0x28]
  404693:	call   406f00 <print_debug_data@@Base>
  404698:	mov    rax,QWORD PTR [rsp+0x8]
  40469d:	cmp    QWORD PTR [rax],0x0
  4046a1:	je     4046b0 <main@@Base+0xa60>
  4046a3:	mov    rax,QWORD PTR [rsp+0x18]
  4046a8:	mov    rdi,QWORD PTR [rax]
  4046ab:	call   4037e0 <fclose@plt>
  4046b0:	call   4038f0 <coda_done@plt>
  4046b5:	jmp    40432a <main@@Base+0x6da>
  4046ba:	lea    rsi,[rip+0x85b3]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  4046c1:	mov    rdi,r12
  4046c4:	mov    DWORD PTR [rsp+0x3c],edx
  4046c8:	call   403910 <strcmp@plt>
  4046cd:	test   eax,eax
  4046cf:	je     404109 <main@@Base+0x4b9>
  4046d5:	lea    rsi,[rip+0x859b]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  4046dc:	mov    rdi,r12
  4046df:	call   403910 <strcmp@plt>
  4046e4:	mov    edx,DWORD PTR [rsp+0x3c]
  4046e8:	test   eax,eax
  4046ea:	je     403ed5 <main@@Base+0x285>
  4046f0:	jmp    404258 <main@@Base+0x608>
  4046f5:	mov    rax,0x4114dc
  4046fc:	mov    rdx,0x4114c0
  404703:	mov    DWORD PTR [rax],0x3
  404709:	mov    rax,0x410380
  404710:	inc    r12d
  404713:	mov    QWORD PTR [rax],0x0
  40471a:	mov    QWORD PTR [rsp],rax
  40471e:	mov    rax,0x410368
  404725:	sub    ebx,r12d
  404728:	mov    QWORD PTR [rax],0x0
  40472f:	mov    QWORD PTR [rsp+0x8],rax
  404734:	mov    rax,0x4114e0
  40473b:	mov    QWORD PTR [rsp+0x18],rdx
  404740:	mov    QWORD PTR [rax],0x0
  404747:	mov    QWORD PTR [rsp+0x20],rax
  40474c:	mov    rax,QWORD PTR [rip+0xb88d]        # 40ffe0 <stdout@GLIBC_2.2.5>
  404753:	mov    DWORD PTR [rsp+0x14],0x1
  40475b:	mov    rax,QWORD PTR [rax]
  40475e:	mov    DWORD PTR [rsp+0x28],0x1
  404766:	mov    QWORD PTR [rdx],rax
  404769:	lea    eax,[rbx-0x1]
  40476c:	mov    DWORD PTR [rsp+0x30],eax
  404770:	lea    r13,[rbp+r14*1+0x8]
  404775:	xor    ebp,ebp
  404777:	cmp    ebx,ebp
  404779:	jle    4048af <main@@Base+0xc5f>
  40477f:	movsxd rax,ebp
  404782:	mov    r12,QWORD PTR [r13+rax*8+0x0]
  404787:	lea    rsi,[rip+0x84e3]        # 40cc71 <_IO_stdin_used@@Base+0xc71>
  40478e:	mov    rdi,r12
  404791:	lea    r14,[rax*8+0x0]
  404799:	call   403910 <strcmp@plt>
  40479e:	test   eax,eax
  4047a0:	je     404869 <main@@Base+0xc19>
  4047a6:	lea    rsi,[rip+0x831f]        # 40cacc <_IO_stdin_used@@Base+0xacc>
  4047ad:	mov    rdi,r12
  4047b0:	call   403910 <strcmp@plt>
  4047b5:	test   eax,eax
  4047b7:	je     404869 <main@@Base+0xc19>
  4047bd:	lea    rsi,[rip+0x8416]        # 40cbda <_IO_stdin_used@@Base+0xbda>
  4047c4:	mov    rdi,r12
  4047c7:	call   403910 <strcmp@plt>
  4047cc:	test   eax,eax
  4047ce:	je     404876 <main@@Base+0xc26>
  4047d4:	lea    rsi,[rip+0x8402]        # 40cbdd <_IO_stdin_used@@Base+0xbdd>
  4047db:	mov    rdi,r12
  4047de:	call   403910 <strcmp@plt>
  4047e3:	test   eax,eax
  4047e5:	je     404876 <main@@Base+0xc26>
  4047eb:	lea    rsi,[rip+0x8432]        # 40cc24 <_IO_stdin_used@@Base+0xc24>
  4047f2:	mov    rdi,r12
  4047f5:	call   403910 <strcmp@plt>
  4047fa:	test   eax,eax
  4047fc:	je     404885 <main@@Base+0xc35>
  404802:	lea    rsi,[rip+0x841e]        # 40cc27 <_IO_stdin_used@@Base+0xc27>
  404809:	mov    rdi,r12
  40480c:	call   403910 <strcmp@plt>
  404811:	test   eax,eax
  404813:	je     404885 <main@@Base+0xc35>
  404815:	lea    rsi,[rip+0x8458]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  40481c:	mov    rdi,r12
  40481f:	call   403910 <strcmp@plt>
  404824:	test   eax,eax
  404826:	je     40483f <main@@Base+0xbef>
  404828:	lea    rsi,[rip+0x8448]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  40482f:	mov    rdi,r12
  404832:	call   403910 <strcmp@plt>
  404837:	test   eax,eax
  404839:	jne    40496a <main@@Base+0xd1a>
  40483f:	lea    edx,[rbp+0x1]
  404842:	cmp    ebx,edx
  404844:	jle    40496a <main@@Base+0xd1a>
  40484a:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  40484f:	cmp    BYTE PTR [rax],0x2d
  404852:	je     40496a <main@@Base+0xd1a>
  404858:	mov    rcx,QWORD PTR [rsp+0x20]
  40485d:	mov    ebp,edx
  40485f:	mov    QWORD PTR [rcx],rax
  404862:	inc    ebp
  404864:	jmp    404777 <main@@Base+0xb27>
  404869:	mov    r15d,0x1
  40486f:	inc    ebp
  404871:	jmp    404777 <main@@Base+0xb27>
  404876:	mov    DWORD PTR [rsp+0x14],0x0
  40487e:	inc    ebp
  404880:	jmp    404777 <main@@Base+0xb27>
  404885:	lea    edx,[rbp+0x1]
  404888:	cmp    ebx,edx
  40488a:	jle    40496a <main@@Base+0xd1a>
  404890:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  404895:	cmp    BYTE PTR [rax],0x2d
  404898:	je     404930 <main@@Base+0xce0>
  40489e:	mov    rcx,QWORD PTR [rsp+0x8]
  4048a3:	mov    ebp,edx
  4048a5:	mov    QWORD PTR [rcx],rax
  4048a8:	inc    ebp
  4048aa:	jmp    404777 <main@@Base+0xb27>
  4048af:	mov    rax,QWORD PTR [rsp]
  4048b3:	mov    rax,QWORD PTR [rax]
  4048b6:	test   rax,rax
  4048b9:	je     404d8f <main@@Base+0x113f>
  4048bf:	cmp    BYTE PTR [rax],0x0
  4048c2:	je     404d8f <main@@Base+0x113f>
  4048c8:	call   4039e0 <coda_init@plt>
  4048cd:	test   eax,eax
  4048cf:	jne    404e68 <main@@Base+0x1218>
  4048d5:	mov    edi,DWORD PTR [rsp+0x28]
  4048d9:	xor    edi,0x1
  4048dc:	call   403780 <coda_set_option_bypass_special_types@plt>
  4048e1:	mov    edi,DWORD PTR [rsp+0x14]
  4048e5:	call   4039f0 <coda_set_option_perform_conversions@plt>
  4048ea:	mov    rax,QWORD PTR [rsp+0x8]
  4048ef:	mov    rdi,QWORD PTR [rax]
  4048f2:	test   rdi,rdi
  4048f5:	je     404914 <main@@Base+0xcc4>
  4048f7:	lea    rsi,[rip+0x836c]        # 40cc6a <_IO_stdin_used@@Base+0xc6a>
  4048fe:	call   403b30 <fopen@plt>
  404903:	mov    rdx,QWORD PTR [rsp+0x18]
  404908:	mov    QWORD PTR [rdx],rax
  40490b:	test   rax,rax
  40490e:	je     404e39 <main@@Base+0x11e9>
  404914:	mov    edi,r15d
  404917:	call   409860 <print_json_data@@Base>
  40491c:	mov    rax,QWORD PTR [rsp+0x8]
  404921:	cmp    QWORD PTR [rax],0x0
  404925:	jne    4046a3 <main@@Base+0xa53>
  40492b:	jmp    4046b0 <main@@Base+0xa60>
  404930:	lea    rsi,[rip+0x833d]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  404937:	mov    rdi,r12
  40493a:	mov    DWORD PTR [rsp+0x38],edx
  40493e:	call   403910 <strcmp@plt>
  404943:	test   eax,eax
  404945:	mov    edx,DWORD PTR [rsp+0x38]
  404949:	je     40496a <main@@Base+0xd1a>
  40494b:	lea    rsi,[rip+0x8325]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  404952:	mov    rdi,r12
  404955:	mov    DWORD PTR [rsp+0x38],edx
  404959:	call   403910 <strcmp@plt>
  40495e:	test   eax,eax
  404960:	mov    edx,DWORD PTR [rsp+0x38]
  404964:	je     40484a <main@@Base+0xbfa>
  40496a:	lea    rsi,[rip+0x8294]        # 40cc05 <_IO_stdin_used@@Base+0xc05>
  404971:	mov    rdi,r12
  404974:	call   403910 <strcmp@plt>
  404979:	test   eax,eax
  40497b:	je     404cd9 <main@@Base+0x1089>
  404981:	cmp    ebp,DWORD PTR [rsp+0x30]
  404985:	jne    404d8f <main@@Base+0x113f>
  40498b:	cmp    BYTE PTR [r12],0x2d
  404990:	je     404d8f <main@@Base+0x113f>
  404996:	mov    rax,QWORD PTR [rsp]
  40499a:	inc    ebp
  40499c:	mov    QWORD PTR [rax],r12
  40499f:	jmp    404777 <main@@Base+0xb27>
  4049a4:	mov    rax,0x410374
  4049ab:	mov    DWORD PTR [rax],0x1
  4049b1:	jmp    404088 <main@@Base+0x438>
  4049b6:	mov    rax,0x4114dc
  4049bd:	mov    rdx,0x4114c0
  4049c4:	mov    DWORD PTR [rax],0x4
  4049ca:	mov    rax,0x410380
  4049d1:	inc    r12d
  4049d4:	mov    QWORD PTR [rax],0x0
  4049db:	mov    QWORD PTR [rsp],rax
  4049df:	mov    rax,0x410368
  4049e6:	sub    ebx,r12d
  4049e9:	mov    QWORD PTR [rax],0x0
  4049f0:	mov    QWORD PTR [rsp+0x8],rax
  4049f5:	mov    rax,0x4114e0
  4049fc:	mov    QWORD PTR [rsp+0x18],rdx
  404a01:	mov    QWORD PTR [rax],0x0
  404a08:	mov    QWORD PTR [rsp+0x20],rax
  404a0d:	mov    rax,QWORD PTR [rip+0xb5cc]        # 40ffe0 <stdout@GLIBC_2.2.5>
  404a14:	mov    DWORD PTR [rsp+0x14],0x1
  404a1c:	mov    rax,QWORD PTR [rax]
  404a1f:	mov    DWORD PTR [rsp+0x28],0x1
  404a27:	mov    QWORD PTR [rdx],rax
  404a2a:	lea    eax,[rbx-0x1]
  404a2d:	mov    DWORD PTR [rsp+0x30],eax
  404a31:	lea    r13,[rbp+r14*1+0x8]
  404a36:	xor    ebp,ebp
  404a38:	cmp    ebx,ebp
  404a3a:	jle    404b70 <main@@Base+0xf20>
  404a40:	movsxd rax,ebp
  404a43:	mov    r12,QWORD PTR [r13+rax*8+0x0]
  404a48:	lea    rsi,[rip+0x8222]        # 40cc71 <_IO_stdin_used@@Base+0xc71>
  404a4f:	mov    rdi,r12
  404a52:	lea    r14,[rax*8+0x0]
  404a5a:	call   403910 <strcmp@plt>
  404a5f:	test   eax,eax
  404a61:	je     404b2a <main@@Base+0xeda>
  404a67:	lea    rsi,[rip+0x805e]        # 40cacc <_IO_stdin_used@@Base+0xacc>
  404a6e:	mov    rdi,r12
  404a71:	call   403910 <strcmp@plt>
  404a76:	test   eax,eax
  404a78:	je     404b2a <main@@Base+0xeda>
  404a7e:	lea    rsi,[rip+0x8155]        # 40cbda <_IO_stdin_used@@Base+0xbda>
  404a85:	mov    rdi,r12
  404a88:	call   403910 <strcmp@plt>
  404a8d:	test   eax,eax
  404a8f:	je     404b37 <main@@Base+0xee7>
  404a95:	lea    rsi,[rip+0x8141]        # 40cbdd <_IO_stdin_used@@Base+0xbdd>
  404a9c:	mov    rdi,r12
  404a9f:	call   403910 <strcmp@plt>
  404aa4:	test   eax,eax
  404aa6:	je     404b37 <main@@Base+0xee7>
  404aac:	lea    rsi,[rip+0x8171]        # 40cc24 <_IO_stdin_used@@Base+0xc24>
  404ab3:	mov    rdi,r12
  404ab6:	call   403910 <strcmp@plt>
  404abb:	test   eax,eax
  404abd:	je     404b46 <main@@Base+0xef6>
  404ac3:	lea    rsi,[rip+0x815d]        # 40cc27 <_IO_stdin_used@@Base+0xc27>
  404aca:	mov    rdi,r12
  404acd:	call   403910 <strcmp@plt>
  404ad2:	test   eax,eax
  404ad4:	je     404b46 <main@@Base+0xef6>
  404ad6:	lea    rsi,[rip+0x8197]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  404add:	mov    rdi,r12
  404ae0:	call   403910 <strcmp@plt>
  404ae5:	test   eax,eax
  404ae7:	je     404b00 <main@@Base+0xeb0>
  404ae9:	lea    rsi,[rip+0x8187]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  404af0:	mov    rdi,r12
  404af3:	call   403910 <strcmp@plt>
  404af8:	test   eax,eax
  404afa:	jne    404c2b <main@@Base+0xfdb>
  404b00:	lea    edx,[rbp+0x1]
  404b03:	cmp    ebx,edx
  404b05:	jle    404c2b <main@@Base+0xfdb>
  404b0b:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  404b10:	cmp    BYTE PTR [rax],0x2d
  404b13:	je     404c2b <main@@Base+0xfdb>
  404b19:	mov    rcx,QWORD PTR [rsp+0x20]
  404b1e:	mov    ebp,edx
  404b20:	mov    QWORD PTR [rcx],rax
  404b23:	inc    ebp
  404b25:	jmp    404a38 <main@@Base+0xde8>
  404b2a:	mov    r15d,0x1
  404b30:	inc    ebp
  404b32:	jmp    404a38 <main@@Base+0xde8>
  404b37:	mov    DWORD PTR [rsp+0x14],0x0
  404b3f:	inc    ebp
  404b41:	jmp    404a38 <main@@Base+0xde8>
  404b46:	lea    edx,[rbp+0x1]
  404b49:	cmp    ebx,edx
  404b4b:	jle    404c2b <main@@Base+0xfdb>
  404b51:	mov    rax,QWORD PTR [r13+r14*1+0x8]
  404b56:	cmp    BYTE PTR [rax],0x2d
  404b59:	je     404bf1 <main@@Base+0xfa1>
  404b5f:	mov    rcx,QWORD PTR [rsp+0x8]
  404b64:	mov    ebp,edx
  404b66:	mov    QWORD PTR [rcx],rax
  404b69:	inc    ebp
  404b6b:	jmp    404a38 <main@@Base+0xde8>
  404b70:	mov    rax,QWORD PTR [rsp]
  404b74:	mov    rax,QWORD PTR [rax]
  404b77:	test   rax,rax
  404b7a:	je     404d8f <main@@Base+0x113f>
  404b80:	cmp    BYTE PTR [rax],0x0
  404b83:	je     404d8f <main@@Base+0x113f>
  404b89:	call   4039e0 <coda_init@plt>
  404b8e:	test   eax,eax
  404b90:	jne    404e68 <main@@Base+0x1218>
  404b96:	mov    edi,DWORD PTR [rsp+0x28]
  404b9a:	xor    edi,0x1
  404b9d:	call   403780 <coda_set_option_bypass_special_types@plt>
  404ba2:	mov    edi,DWORD PTR [rsp+0x14]
  404ba6:	call   4039f0 <coda_set_option_perform_conversions@plt>
  404bab:	mov    rax,QWORD PTR [rsp+0x8]
  404bb0:	mov    rdi,QWORD PTR [rax]
  404bb3:	test   rdi,rdi
  404bb6:	je     404bd5 <main@@Base+0xf85>
  404bb8:	lea    rsi,[rip+0x80ab]        # 40cc6a <_IO_stdin_used@@Base+0xc6a>
  404bbf:	call   403b30 <fopen@plt>
  404bc4:	mov    rdx,QWORD PTR [rsp+0x18]
  404bc9:	mov    QWORD PTR [rdx],rax
  404bcc:	test   rax,rax
  404bcf:	je     404e39 <main@@Base+0x11e9>
  404bd5:	mov    edi,r15d
  404bd8:	call   40b5e0 <print_yaml_data@@Base>
  404bdd:	mov    rax,QWORD PTR [rsp+0x8]
  404be2:	cmp    QWORD PTR [rax],0x0
  404be6:	jne    4046a3 <main@@Base+0xa53>
  404bec:	jmp    4046b0 <main@@Base+0xa60>
  404bf1:	lea    rsi,[rip+0x807c]        # 40cc74 <_IO_stdin_used@@Base+0xc74>
  404bf8:	mov    rdi,r12
  404bfb:	mov    DWORD PTR [rsp+0x38],edx
  404bff:	call   403910 <strcmp@plt>
  404c04:	test   eax,eax
  404c06:	mov    edx,DWORD PTR [rsp+0x38]
  404c0a:	je     404c2b <main@@Base+0xfdb>
  404c0c:	lea    rsi,[rip+0x8064]        # 40cc77 <_IO_stdin_used@@Base+0xc77>
  404c13:	mov    rdi,r12
  404c16:	mov    DWORD PTR [rsp+0x38],edx
  404c1a:	call   403910 <strcmp@plt>
  404c1f:	test   eax,eax
  404c21:	mov    edx,DWORD PTR [rsp+0x38]
  404c25:	je     404b0b <main@@Base+0xebb>
  404c2b:	lea    rsi,[rip+0x7fd3]        # 40cc05 <_IO_stdin_used@@Base+0xc05>
  404c32:	mov    rdi,r12
  404c35:	call   403910 <strcmp@plt>
  404c3a:	test   eax,eax
  404c3c:	je     404cfa <main@@Base+0x10aa>
  404c42:	cmp    ebp,DWORD PTR [rsp+0x30]
  404c46:	jne    404d8f <main@@Base+0x113f>
  404c4c:	cmp    BYTE PTR [r12],0x2d
  404c51:	je     404d8f <main@@Base+0x113f>
  404c57:	mov    rax,QWORD PTR [rsp]
  404c5b:	inc    ebp
  404c5d:	mov    QWORD PTR [rax],r12
  404c60:	jmp    404a38 <main@@Base+0xde8>
  404c65:	lea    rsi,[rip+0x7fc4]        # 40cc30 <_IO_stdin_used@@Base+0xc30>
  404c6c:	mov    rdi,rbp
  404c6f:	call   403910 <strcmp@plt>
  404c74:	test   eax,eax
  404c76:	je     404ce8 <main@@Base+0x1098>
  404c78:	lea    rsi,[rip+0x7fb4]        # 40cc33 <_IO_stdin_used@@Base+0xc33>
  404c7f:	mov    rdi,rbp
  404c82:	call   403910 <strcmp@plt>
  404c87:	test   eax,eax
  404c89:	je     404ce8 <main@@Base+0x1098>
  404c8b:	lea    rsi,[rip+0x7fb1]        # 40cc43 <_IO_stdin_used@@Base+0xc43>
  404c92:	mov    rdi,rbp
  404c95:	call   403910 <strcmp@plt>
  404c9a:	test   eax,eax
  404c9c:	je     404cb5 <main@@Base+0x1065>
  404c9e:	lea    rsi,[rip+0x7fa1]        # 40cc46 <_IO_stdin_used@@Base+0xc46>
  404ca5:	mov    rdi,rbp
  404ca8:	call   403910 <strcmp@plt>
  404cad:	test   eax,eax
  404caf:	jne    404d39 <main@@Base+0x10e9>
  404cb5:	lea    eax,[r15+0x1]
  404cb9:	cmp    ebx,eax
  404cbb:	jle    404d39 <main@@Base+0x10e9>
  404cbd:	mov    rdx,QWORD PTR [r13+r12*1+0x8]
  404cc2:	cmp    BYTE PTR [rdx],0x2d
  404cc5:	je     404d39 <main@@Base+0x10e9>
  404cc7:	mov    rcx,0x4114c8
  404cce:	mov    r15d,eax
  404cd1:	mov    QWORD PTR [rcx],rdx
  404cd4:	jmp    404485 <main@@Base+0x835>
  404cd9:	mov    DWORD PTR [rsp+0x28],0x0
  404ce1:	inc    ebp
  404ce3:	jmp    404777 <main@@Base+0xb27>
  404ce8:	mov    rax,0x411694
  404cef:	mov    DWORD PTR [rax],0x1
  404cf5:	jmp    404485 <main@@Base+0x835>
  404cfa:	mov    DWORD PTR [rsp+0x28],0x0
  404d02:	inc    ebp
  404d04:	jmp    404a38 <main@@Base+0xde8>
  404d09:	lea    rsi,[rip+0x7d3b]        # 40ca4b <_IO_stdin_used@@Base+0xa4b>
  404d10:	mov    rdi,r13
  404d13:	call   403910 <strcmp@plt>
  404d18:	test   eax,eax
  404d1a:	jne    404dd2 <main@@Base+0x1182>
  404d20:	mov    rax,0x410364
  404d27:	mov    DWORD PTR [r14],0x1
  404d2e:	mov    DWORD PTR [rax],0x1
  404d34:	jmp    404088 <main@@Base+0x438>
  404d39:	lea    rsi,[rip+0x7ebf]        # 40cbff <_IO_stdin_used@@Base+0xbff>
  404d40:	mov    rdi,rbp
  404d43:	call   403910 <strcmp@plt>
  404d48:	test   eax,eax
  404d4a:	je     404dc0 <main@@Base+0x1170>
  404d4c:	lea    rsi,[rip+0x7f06]        # 40cc59 <_IO_stdin_used@@Base+0xc59>
  404d53:	mov    rdi,rbp
  404d56:	call   403910 <strcmp@plt>
  404d5b:	test   eax,eax
  404d5d:	je     404dc0 <main@@Base+0x1170>
  404d5f:	lea    rsi,[rip+0x7e9f]        # 40cc05 <_IO_stdin_used@@Base+0xc05>
  404d66:	mov    rdi,rbp
  404d69:	call   403910 <strcmp@plt>
  404d6e:	test   eax,eax
  404d70:	je     404e0c <main@@Base+0x11bc>
  404d76:	cmp    r15d,DWORD PTR [rsp+0x28]
  404d7b:	jne    404d8f <main@@Base+0x113f>
  404d7d:	cmp    BYTE PTR [rbp+0x0],0x2d
  404d81:	je     404d8f <main@@Base+0x113f>
  404d83:	mov    rax,QWORD PTR [rsp]
  404d87:	mov    QWORD PTR [rax],rbp
  404d8a:	jmp    404485 <main@@Base+0x835>
  404d8f:	mov    rax,QWORD PTR [rip+0xb262]        # 40fff8 <stderr@GLIBC_2.2.5>
  404d96:	mov    edx,0x19
  404d9b:	mov    rcx,QWORD PTR [rax]
  404d9e:	mov    esi,0x1
  404da3:	lea    rdi,[rip+0x7e13]        # 40cbbd <_IO_stdin_used@@Base+0xbbd>
  404daa:	call   403bb0 <fwrite@plt>
  404daf:	xor    eax,eax
  404db1:	call   40b700 <print_yaml_data@@Base+0x120>
  404db6:	mov    edi,0x1
  404dbb:	call   403b90 <exit@plt>
  404dc0:	mov    rax,0x410370
  404dc7:	mov    DWORD PTR [rax],0x1
  404dcd:	jmp    404485 <main@@Base+0x835>
  404dd2:	lea    rsi,[rip+0x7e2c]        # 40cc05 <_IO_stdin_used@@Base+0xc05>
  404dd9:	mov    rdi,r13
  404ddc:	call   403910 <strcmp@plt>
  404de1:	test   eax,eax
  404de3:	je     404dff <main@@Base+0x11af>
  404de5:	cmp    DWORD PTR [rsp+0x20],r15d
  404dea:	jne    404d8f <main@@Base+0x113f>
  404dec:	cmp    BYTE PTR [r13+0x0],0x2d
  404df1:	je     404d8f <main@@Base+0x113f>
  404df3:	mov    rax,QWORD PTR [rsp]
  404df7:	mov    QWORD PTR [rax],r13
  404dfa:	jmp    404088 <main@@Base+0x438>
  404dff:	mov    DWORD PTR [rsp+0x14],0x0
  404e07:	jmp    404088 <main@@Base+0x438>
  404e0c:	mov    DWORD PTR [rsp+0x20],0x0
  404e14:	jmp    404485 <main@@Base+0x835>
  404e19:	mov    rax,QWORD PTR [rip+0xb1d8]        # 40fff8 <stderr@GLIBC_2.2.5>
  404e20:	mov    edx,0x28
  404e25:	mov    rcx,QWORD PTR [rax]
  404e28:	mov    esi,0x1
  404e2d:	lea    rdi,[rip+0x8cc4]        # 40daf8 <_IO_stdin_used@@Base+0x1af8>
  404e34:	jmp    404daa <main@@Base+0x115a>
  404e39:	mov    rax,QWORD PTR [rsp+0x8]
  404e3e:	lea    rdx,[rip+0x8ce3]        # 40db28 <_IO_stdin_used@@Base+0x1b28>
  404e45:	mov    rcx,QWORD PTR [rax]
  404e48:	mov    rax,QWORD PTR [rip+0xb1a9]        # 40fff8 <stderr@GLIBC_2.2.5>
  404e4f:	mov    esi,0x1
  404e54:	mov    rdi,QWORD PTR [rax]
  404e57:	xor    eax,eax
  404e59:	call   403bc0 <__fprintf_chk@plt>
  404e5e:	mov    edi,0x1
  404e63:	call   403b90 <exit@plt>
  404e68:	call   403bf0 <coda_get_errno@plt>
  404e6d:	mov    edi,DWORD PTR [rax]
  404e6f:	call   403b60 <coda_errno_to_string@plt>
  404e74:	mov    rcx,rax
  404e77:	lea    rdx,[rip+0x7cf7]        # 40cb75 <_IO_stdin_used@@Base+0xb75>
  404e7e:	jmp    404e48 <main@@Base+0x11f8>

0000000000404e80 <_start@@Base>:
  404e80:	endbr64 
  404e84:	xor    ebp,ebp
  404e86:	mov    r9,rdx
  404e89:	pop    rsi
  404e8a:	mov    rdx,rsp
  404e8d:	and    rsp,0xfffffffffffffff0
  404e91:	push   rax
  404e92:	push   rsp
  404e93:	mov    r8,0x40bd40
  404e9a:	mov    rcx,0x40bcd0
  404ea1:	mov    rdi,0x403c50
  404ea8:	call   QWORD PTR [rip+0xb13a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  404eae:	hlt    
  404eaf:	nop
  404eb0:	endbr64 
  404eb4:	ret    
  404eb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ebf:	nop
  404ec0:	mov    eax,0x410340
  404ec5:	cmp    rax,0x410340
  404ecb:	je     404ee0 <_start@@Base+0x60>
  404ecd:	mov    eax,0x0
  404ed2:	test   rax,rax
  404ed5:	je     404ee0 <_start@@Base+0x60>
  404ed7:	mov    edi,0x410340
  404edc:	jmp    rax
  404ede:	xchg   ax,ax
  404ee0:	ret    
  404ee1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404eec:	nop    DWORD PTR [rax+0x0]
  404ef0:	mov    esi,0x410340
  404ef5:	sub    rsi,0x410340
  404efc:	sar    rsi,0x3
  404f00:	mov    rax,rsi
  404f03:	shr    rax,0x3f
  404f07:	add    rsi,rax
  404f0a:	sar    rsi,1
  404f0d:	je     404f20 <_start@@Base+0xa0>
  404f0f:	mov    eax,0x0
  404f14:	test   rax,rax
  404f17:	je     404f20 <_start@@Base+0xa0>
  404f19:	mov    edi,0x410340
  404f1e:	jmp    rax
  404f20:	ret    
  404f21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f2c:	nop    DWORD PTR [rax+0x0]
  404f30:	endbr64 
  404f34:	cmp    BYTE PTR [rip+0xb405],0x0        # 410340 <__bss_start@@Base+0x4>
  404f3b:	jne    404f50 <_start@@Base+0xd0>
  404f3d:	push   rbp
  404f3e:	mov    rbp,rsp
  404f41:	call   404ec0 <_start@@Base+0x40>
  404f46:	mov    BYTE PTR [rip+0xb3f3],0x1        # 410340 <__bss_start@@Base+0x4>
  404f4d:	pop    rbp
  404f4e:	ret    
  404f4f:	nop
  404f50:	ret    
  404f51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f5c:	nop    DWORD PTR [rax+0x0]
  404f60:	endbr64 
  404f64:	jmp    404ef0 <_start@@Base+0x70>
  404f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f70:	push   r15
  404f72:	mov    r15,rdi
  404f75:	push   r14
  404f77:	push   r13
  404f79:	push   r12
  404f7b:	mov    r12d,edx
  404f7e:	push   rbp
  404f7f:	movsxd rbp,esi
  404f82:	push   rbx
  404f83:	mov    rbx,rbp
  404f86:	sub    rsp,0xb8
  404f8d:	mov    r14,0x410380
  404f94:	mov    DWORD PTR [rsp+0x8],ecx
  404f98:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  404f9d:	lea    rsi,[rsp+0x4c]
  404fa2:	mov    rax,QWORD PTR fs:0x28
  404fab:	mov    QWORD PTR [rsp+0xa8],rax
  404fb3:	xor    eax,eax
  404fb5:	call   403c40 <coda_type_get_class@plt>
  404fba:	test   eax,eax
  404fbc:	jne    405220 <_start@@Base+0x3a0>
  404fc2:	mov    eax,DWORD PTR [rsp+0x4c]
  404fc6:	test   eax,eax
  404fc8:	je     4050a0 <_start@@Base+0x220>
  404fce:	cmp    eax,0x1
  404fd1:	jne    405100 <_start@@Base+0x280>
  404fd7:	movsxd r13,r12d
  404fda:	lea    rax,[r13+r13*4+0x0]
  404fdf:	shl    rax,0x4
  404fe3:	movsxd rdx,DWORD PTR [rax+r14*1+0x534]
  404feb:	test   r12d,r12d
  404fee:	jne    404ffb <_start@@Base+0x17b>
  404ff0:	mov    DWORD PTR [r14+0x560],0x0
  404ffb:	lea    rax,[r13+r13*4+0x0]
  405000:	shl    rax,0x4
  405004:	mov    rdi,0x411500
  40500b:	add    rax,r14
  40500e:	mov    esi,DWORD PTR [rax+0x538]
  405014:	mov    ecx,DWORD PTR [rdi+0x68]
  405017:	lea    r10d,[rsi+rdx*1]
  40501b:	mov    DWORD PTR [rsp+0x10],ecx
  40501f:	mov    DWORD PTR [rsp+0x1c],r10d
  405024:	cmp    ecx,r10d
  405027:	jge    4052d0 <_start@@Base+0x450>
  40502d:	test   esi,esi
  40502f:	jle    4059bc <_start@@Base+0xb3c>
  405035:	lea    rcx,[rdi+rdx*4]
  405039:	lea    r11,[rdi+rdx*8]
  40503d:	lea    rdx,[r13+r13*4+0x0]
  405042:	shl    rdx,0x4
  405046:	add    rdx,r14
  405049:	xor    eax,eax
  40504b:	mov    ebp,0x1
  405050:	lea    rdi,[rsp+0x60]
  405055:	mov    r10,rdx
  405058:	jmp    40508e <_start@@Base+0x20e>
  40505a:	nop    WORD PTR [rax+rax*1+0x0]
  405060:	movsxd r9,DWORD PTR [r10+0x560]
  405067:	mov    r8,QWORD PTR [r11+rax*8+0x70]
  40506c:	mov    r8d,DWORD PTR [r8+r9*4]
  405070:	mov    DWORD PTR [rdi+rax*4],r8d
  405074:	mov    DWORD PTR [rdx+rax*4+0x564],0x0
  40507f:	inc    rax
  405082:	imul   ebp,r8d
  405086:	cmp    esi,eax
  405088:	jle    405230 <_start@@Base+0x3b0>
  40508e:	mov    r8d,DWORD PTR [rcx+rax*4+0x48]
  405093:	test   r8d,r8d
  405096:	jne    405060 <_start@@Base+0x1e0>
  405098:	mov    r8d,DWORD PTR [rcx+rax*4+0x4]
  40509d:	jmp    405070 <_start@@Base+0x1f0>
  40509f:	nop
  4050a0:	movsxd rbp,DWORD PTR [rsp+0x8]
  4050a5:	lea    rdx,[rsp+0x58]
  4050aa:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  4050b2:	lea    rdi,[r14+0x118]
  4050b9:	call   4036e0 <coda_cursor_get_record_field_available_status@plt>
  4050be:	test   eax,eax
  4050c0:	jne    405618 <_start@@Base+0x798>
  4050c6:	mov    r11d,DWORD PTR [rsp+0x58]
  4050cb:	test   r11d,r11d
  4050ce:	jne    4055d0 <_start@@Base+0x750>
  4050d4:	mov    rax,QWORD PTR [rsp+0xa8]
  4050dc:	xor    rax,QWORD PTR fs:0x28
  4050e5:	jne    405c4a <_start@@Base+0xdca>
  4050eb:	add    rsp,0xb8
  4050f2:	pop    rbx
  4050f3:	pop    rbp
  4050f4:	pop    r12
  4050f6:	pop    r13
  4050f8:	pop    r14
  4050fa:	pop    r15
  4050fc:	ret    
  4050fd:	nop    DWORD PTR [rax]
  405100:	mov    rax,0x4114d8
  405107:	mov    r10d,DWORD PTR [rax]
  40510a:	test   r10d,r10d
  40510d:	jne    4054f0 <_start@@Base+0x670>
  405113:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  405118:	lea    rsi,[rsp+0x50]
  40511d:	call   403c40 <coda_type_get_class@plt>
  405122:	test   eax,eax
  405124:	jne    4055c0 <_start@@Base+0x740>
  40512a:	cmp    DWORD PTR [rsp+0x50],0x6
  40512f:	ja     405208 <_start@@Base+0x388>
  405135:	mov    eax,DWORD PTR [rsp+0x50]
  405139:	lea    rdx,[rip+0x6fc0]        # 40c100 <_IO_stdin_used@@Base+0x100>
  405140:	movsxd rax,DWORD PTR [rdx+rax*4]
  405144:	add    rax,rdx
  405147:	notrack jmp rax
  40514a:	nop    WORD PTR [rax+rax*1+0x0]
  405150:	lea    rsi,[rsp+0x58]
  405155:	lea    rdi,[r14+0x118]
  40515c:	call   4039a0 <coda_cursor_read_double@plt>
  405161:	test   eax,eax
  405163:	jne    4059d7 <_start@@Base+0xb57>
  405169:	cmp    DWORD PTR [rsp+0x54],0x2
  40516e:	vmovsd xmm0,QWORD PTR [rsp+0x58]
  405174:	jne    40573f <_start@@Base+0x8bf>
  40517a:	mov    rax,0x410370
  405181:	mov    ecx,DWORD PTR [rax]
  405183:	test   ecx,ecx
  405185:	je     40573f <_start@@Base+0x8bf>
  40518b:	call   4039b0 <coda_isNaN@plt>
  405190:	test   eax,eax
  405192:	je     405c06 <_start@@Base+0xd86>
  405198:	movabs rax,0x2020202020202020
  4051a2:	mov    edx,0x2020
  4051a7:	vmovdqa xmm0,XMMWORD PTR [rip+0x6fd1]        # 40c180 <_IO_stdin_used@@Base+0x180>
  4051af:	mov    QWORD PTR [rsp+0x90],rax
  4051b7:	mov    WORD PTR [rsp+0x98],dx
  4051bf:	mov    BYTE PTR [rsp+0x9a],0x0
  4051c7:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  4051d0:	lea    rbx,[rsp+0x80]
  4051d8:	mov    rax,0x411694
  4051df:	mov    eax,DWORD PTR [rax]
  4051e1:	test   eax,eax
  4051e3:	je     405b8a <_start@@Base+0xd0a>
  4051e9:	mov    rcx,rbx
  4051ec:	lea    rdx,[rip+0x75dc]        # 40c7cf <_IO_stdin_used@@Base+0x7cf>
  4051f3:	mov    esi,0x1
  4051f8:	mov    rdi,r15
  4051fb:	xor    eax,eax
  4051fd:	call   403bc0 <__fprintf_chk@plt>
  405202:	nop    WORD PTR [rax+rax*1+0x0]
  405208:	mov    rsi,r15
  40520b:	mov    edi,0xa
  405210:	call   4038d0 <fputc@plt>
  405215:	jmp    4050d4 <_start@@Base+0x254>
  40521a:	nop    WORD PTR [rax+rax*1+0x0]
  405220:	xor    eax,eax
  405222:	call   40bc80 <handle_coda_error@@Base>
  405227:	jmp    404fc2 <_start@@Base+0x142>
  40522c:	nop    DWORD PTR [rax+0x0]
  405230:	test   ebp,ebp
  405232:	je     4050d4 <_start@@Base+0x254>
  405238:	lea    rdi,[r14+0x118]
  40523f:	call   403890 <coda_cursor_goto_first_array_element@plt>
  405244:	test   eax,eax
  405246:	jne    405980 <_start@@Base+0xb00>
  40524c:	lea    eax,[r12+0x1]
  405251:	mov    DWORD PTR [rsp+0x20],eax
  405255:	test   ebp,ebp
  405257:	jle    4052bf <_start@@Base+0x43f>
  405259:	lea    eax,[rbp-0x1]
  40525c:	mov    edx,eax
  40525e:	lea    r13,[r13+r13*4+0x0]
  405263:	lea    eax,[rbx+0x1]
  405266:	mov    DWORD PTR [rsp+0x18],eax
  40526a:	lea    rax,[r13*4+0x0]
  405272:	mov    QWORD PTR [rsp+0x38],rax
  405277:	mov    rax,r13
  40527a:	shl    rax,0x4
  40527e:	add    rax,r14
  405281:	xor    ebx,ebx
  405283:	mov    QWORD PTR [rsp+0x28],rax
  405288:	mov    QWORD PTR [rsp+0x30],r13
  40528d:	mov    r13d,ebx
  405290:	mov    ebx,DWORD PTR [rsp+0x20]
  405294:	mov    DWORD PTR [rsp+0x24],r12d
  405299:	mov    r12d,edx
  40529c:	mov    ecx,DWORD PTR [rsp+0x8]
  4052a0:	mov    esi,DWORD PTR [rsp+0x18]
  4052a4:	mov    edx,ebx
  4052a6:	mov    rdi,r15
  4052a9:	call   404f70 <_start@@Base+0xf0>
  4052ae:	cmp    r13d,r12d
  4052b1:	jl     405408 <_start@@Base+0x588>
  4052b7:	inc    r13d
  4052ba:	cmp    r13d,ebp
  4052bd:	jl     40529c <_start@@Base+0x41c>
  4052bf:	lea    rdi,[r14+0x118]
  4052c6:	call   403930 <coda_cursor_goto_parent@plt>
  4052cb:	jmp    4050d4 <_start@@Base+0x254>
  4052d0:	mov    ecx,DWORD PTR [r14+0xf34]
  4052d7:	dec    ecx
  4052d9:	cmp    ecx,r12d
  4052dc:	jle    40502d <_start@@Base+0x1ad>
  4052e2:	mov    r8d,DWORD PTR [rax+0x560]
  4052e9:	lea    ecx,[r12+0x1]
  4052ee:	mov    DWORD PTR [rsp+0x20],ecx
  4052f2:	imul   r8d,DWORD PTR [rax+0x55c]
  4052fa:	movsxd rcx,ecx
  4052fd:	lea    rcx,[rcx+rcx*4]
  405301:	shl    rcx,0x4
  405305:	mov    DWORD PTR [rcx+r14*1+0x560],r8d
  40530d:	test   esi,esi
  40530f:	jg     405035 <_start@@Base+0x1b5>
  405315:	lea    rdi,[r14+0x118]
  40531c:	call   403890 <coda_cursor_goto_first_array_element@plt>
  405321:	mov    edx,eax
  405323:	mov    ebp,0x1
  405328:	test   eax,eax
  40532a:	je     40525e <_start@@Base+0x3de>
  405330:	xor    eax,eax
  405332:	call   40bc80 <handle_coda_error@@Base>
  405337:	jmp    405259 <_start@@Base+0x3d9>
  40533c:	nop    DWORD PTR [rax+0x0]
  405340:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  405345:	lea    rsi,[rsp+0x54]
  40534a:	call   403970 <coda_type_get_read_type@plt>
  40534f:	test   eax,eax
  405351:	jne    4059a0 <_start@@Base+0xb20>
  405357:	mov    eax,DWORD PTR [rsp+0x54]
  40535b:	inc    eax
  40535d:	cmp    eax,0xd
  405360:	ja     405208 <_start@@Base+0x388>
  405366:	lea    rdx,[rip+0x6daf]        # 40c11c <_IO_stdin_used@@Base+0x11c>
  40536d:	movsxd rax,DWORD PTR [rdx+rax*4]
  405371:	add    rax,rdx
  405374:	notrack jmp rax
  405377:	nop    WORD PTR [rax+rax*1+0x0]
  405380:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  405385:	lea    rsi,[rsp+0x54]
  40538a:	call   403a40 <coda_type_get_special_type@plt>
  40538f:	test   eax,eax
  405391:	jne    405990 <_start@@Base+0xb10>
  405397:	mov    eax,DWORD PTR [rsp+0x54]
  40539b:	test   eax,eax
  40539d:	je     405208 <_start@@Base+0x388>
  4053a3:	cmp    eax,0x2
  4053a6:	jbe    405150 <_start@@Base+0x2d0>
  4053ac:	cmp    eax,0x3
  4053af:	jne    405208 <_start@@Base+0x388>
  4053b5:	lea    rsi,[rsp+0x60]
  4053ba:	lea    rdi,[r14+0x118]
  4053c1:	call   403b10 <coda_cursor_read_complex_double_pair@plt>
  4053c6:	test   eax,eax
  4053c8:	jne    405955 <_start@@Base+0xad5>
  4053ce:	mov    rax,0x4114c8
  4053d5:	vmovsd xmm1,QWORD PTR [rsp+0x68]
  4053db:	mov    rcx,QWORD PTR [rax]
  4053de:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  4053e4:	lea    rdx,[rip+0x6c6c]        # 40c057 <_IO_stdin_used@@Base+0x57>
  4053eb:	mov    esi,0x1
  4053f0:	mov    rdi,r15
  4053f3:	mov    eax,0x2
  4053f8:	call   403bc0 <__fprintf_chk@plt>
  4053fd:	jmp    405208 <_start@@Base+0x388>
  405402:	nop    WORD PTR [rax+rax*1+0x0]
  405408:	lea    rdi,[r14+0x118]
  40540f:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  405414:	test   eax,eax
  405416:	jne    405638 <_start@@Base+0x7b8>
  40541c:	mov    edx,DWORD PTR [rsp+0x1c]
  405420:	cmp    DWORD PTR [rsp+0x10],edx
  405424:	jl     405448 <_start@@Base+0x5c8>
  405426:	mov    eax,DWORD PTR [r14+0xf34]
  40542d:	dec    eax
  40542f:	cmp    eax,DWORD PTR [rsp+0x24]
  405433:	jle    405448 <_start@@Base+0x5c8>
  405435:	movsxd rax,ebx
  405438:	lea    rax,[rax+rax*4]
  40543c:	shl    rax,0x4
  405440:	inc    DWORD PTR [rax+r14*1+0x560]
  405448:	mov    rax,0x4114d8
  40544f:	mov    eax,DWORD PTR [rax]
  405451:	test   eax,eax
  405453:	je     4052b7 <_start@@Base+0x437>
  405459:	mov    rax,QWORD PTR [rsp+0x28]
  40545e:	mov    eax,DWORD PTR [rax+0x538]
  405464:	mov    esi,eax
  405466:	dec    esi
  405468:	js     4052b7 <_start@@Base+0x437>
  40546e:	mov    rdx,QWORD PTR [rsp+0x30]
  405473:	movsxd rcx,esi
  405476:	lea    rdi,[rcx+rdx*4+0x150]
  40547e:	mov    edx,DWORD PTR [r14+rdi*4+0x24]
  405483:	inc    edx
  405485:	mov    DWORD PTR [r14+rdi*4+0x24],edx
  40548a:	cmp    DWORD PTR [rsp+rcx*4+0x60],edx
  40548e:	jne    4052b7 <_start@@Base+0x437>
  405494:	movsxd rdx,eax
  405497:	mov    rax,QWORD PTR [rsp+0x38]
  40549c:	lea    rcx,[rsp+rdx*4+0x60]
  4054a1:	mov    esi,esi
  4054a3:	lea    rax,[rdx+rax*1+0x157]
  4054ab:	shl    rsi,0x2
  4054af:	mov    rdi,rcx
  4054b2:	lea    rax,[r14+rax*4]
  4054b6:	sub    rdi,rsi
  4054b9:	jmp    4054d9 <_start@@Base+0x659>
  4054bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4054c0:	mov    edx,DWORD PTR [rax]
  4054c2:	mov    esi,DWORD PTR [rcx-0x8]
  4054c5:	inc    edx
  4054c7:	mov    DWORD PTR [rax],edx
  4054c9:	sub    rcx,0x4
  4054cd:	sub    rax,0x4
  4054d1:	cmp    edx,esi
  4054d3:	jne    4052b7 <_start@@Base+0x437>
  4054d9:	mov    DWORD PTR [rax+0x4],0x0
  4054e0:	cmp    rcx,rdi
  4054e3:	jne    4054c0 <_start@@Base+0x640>
  4054e5:	jmp    4052b7 <_start@@Base+0x437>
  4054ea:	nop    WORD PTR [rax+rax*1+0x0]
  4054f0:	mov    r9d,DWORD PTR [r14+0x110]
  4054f7:	test   r9d,r9d
  4054fa:	jle    405113 <_start@@Base+0x293>
  405500:	lea    rax,[rsp+0x58]
  405505:	xor    ebx,ebx
  405507:	mov    DWORD PTR [rsp+0x18],0x0
  40550f:	mov    QWORD PTR [rsp+0x8],rax
  405514:	mov    QWORD PTR [rsp+0x10],rbp
  405519:	jmp    405537 <_start@@Base+0x6b7>
  40551b:	nop    DWORD PTR [rax+rax*1+0x0]
  405520:	cmp    DWORD PTR [rsp+0x58],0x1
  405525:	je     405558 <_start@@Base+0x6d8>
  405527:	inc    rbx
  40552a:	cmp    DWORD PTR [r14+0x110],ebx
  405531:	jle    405628 <_start@@Base+0x7a8>
  405537:	mov    rdi,QWORD PTR [r14+rbx*8+0x10]
  40553c:	mov    rsi,QWORD PTR [rsp+0x8]
  405541:	call   403c40 <coda_type_get_class@plt>
  405546:	test   eax,eax
  405548:	je     405520 <_start@@Base+0x6a0>
  40554a:	xor    eax,eax
  40554c:	call   40bc80 <handle_coda_error@@Base>
  405551:	cmp    DWORD PTR [rsp+0x58],0x1
  405556:	jne    405527 <_start@@Base+0x6a7>
  405558:	movsxd rax,DWORD PTR [rsp+0x18]
  40555d:	xor    r13d,r13d
  405560:	lea    rbp,[rax+rax*4]
  405564:	shl    rbp,0x4
  405568:	add    rbp,r14
  40556b:	mov    r8d,DWORD PTR [rbp+0x538]
  405572:	mov    r12,rbp
  405575:	test   r8d,r8d
  405578:	jle    4055b5 <_start@@Base+0x735>
  40557a:	nop    WORD PTR [rax+rax*1+0x0]
  405580:	mov    rax,0x4114c8
  405587:	movsxd rcx,DWORD PTR [rbp+r13*4+0x564]
  40558f:	mov    r8,QWORD PTR [rax]
  405592:	lea    rdx,[rip+0x6a6b]        # 40c004 <_IO_stdin_used@@Base+0x4>
  405599:	mov    esi,0x1
  40559e:	mov    rdi,r15
  4055a1:	xor    eax,eax
  4055a3:	inc    r13
  4055a6:	call   403bc0 <__fprintf_chk@plt>
  4055ab:	cmp    DWORD PTR [r12+0x538],r13d
  4055b3:	jg     405580 <_start@@Base+0x700>
  4055b5:	inc    DWORD PTR [rsp+0x18]
  4055b9:	jmp    405527 <_start@@Base+0x6a7>
  4055be:	xchg   ax,ax
  4055c0:	xor    eax,eax
  4055c2:	call   40bc80 <handle_coda_error@@Base>
  4055c7:	jmp    40512a <_start@@Base+0x2aa>
  4055cc:	nop    DWORD PTR [rax+0x0]
  4055d0:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  4055d8:	lea    rdi,[r14+0x118]
  4055df:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  4055e4:	test   eax,eax
  4055e6:	jne    4059b0 <_start@@Base+0xb30>
  4055ec:	mov    ecx,DWORD PTR [rsp+0x8]
  4055f0:	mov    rdi,r15
  4055f3:	inc    ecx
  4055f5:	lea    esi,[rbx+0x1]
  4055f8:	mov    edx,r12d
  4055fb:	call   404f70 <_start@@Base+0xf0>
  405600:	lea    rdi,[r14+0x118]
  405607:	call   403930 <coda_cursor_goto_parent@plt>
  40560c:	jmp    4050d4 <_start@@Base+0x254>
  405611:	nop    DWORD PTR [rax+0x0]
  405618:	xor    eax,eax
  40561a:	call   40bc80 <handle_coda_error@@Base>
  40561f:	jmp    4050c6 <_start@@Base+0x246>
  405624:	nop    DWORD PTR [rax+0x0]
  405628:	mov    rbp,QWORD PTR [rsp+0x10]
  40562d:	jmp    405113 <_start@@Base+0x293>
  405632:	nop    WORD PTR [rax+rax*1+0x0]
  405638:	xor    eax,eax
  40563a:	call   40bc80 <handle_coda_error@@Base>
  40563f:	jmp    40541c <_start@@Base+0x59c>
  405644:	lea    rsi,[rsp+0x58]
  405649:	lea    rdi,[r14+0x118]
  405650:	call   403980 <coda_cursor_get_string_length@plt>
  405655:	test   eax,eax
  405657:	jne    405b66 <_start@@Base+0xce6>
  40565d:	mov    rax,QWORD PTR [rsp+0x58]
  405662:	lea    rbx,[rax+0x1]
  405666:	mov    rdi,rbx
  405669:	call   403a00 <malloc@plt>
  40566e:	mov    rbp,rax
  405671:	test   rax,rax
  405674:	je     405b9a <_start@@Base+0xd1a>
  40567a:	mov    rdx,rbx
  40567d:	mov    rsi,rbp
  405680:	lea    rdi,[r14+0x118]
  405687:	call   403920 <coda_cursor_read_string@plt>
  40568c:	test   eax,eax
  40568e:	jne    405b5a <_start@@Base+0xcda>
  405694:	mov    rax,0x411694
  40569b:	mov    esi,DWORD PTR [rax]
  40569d:	test   esi,esi
  40569f:	je     405ac9 <_start@@Base+0xc49>
  4056a5:	mov    rcx,rbp
  4056a8:	lea    rdx,[rip+0x7120]        # 40c7cf <_IO_stdin_used@@Base+0x7cf>
  4056af:	mov    esi,0x1
  4056b4:	mov    rdi,r15
  4056b7:	xor    eax,eax
  4056b9:	call   403bc0 <__fprintf_chk@plt>
  4056be:	mov    rdi,rbp
  4056c1:	call   403680 <free@plt>
  4056c6:	jmp    405208 <_start@@Base+0x388>
  4056cb:	lea    rsi,[rsp+0x58]
  4056d0:	lea    rdi,[r14+0x118]
  4056d7:	call   403a30 <coda_cursor_read_char@plt>
  4056dc:	test   eax,eax
  4056de:	jne    405b4e <_start@@Base+0xcce>
  4056e4:	mov    rax,0x411694
  4056eb:	movsx  ecx,BYTE PTR [rsp+0x58]
  4056f0:	mov    edi,DWORD PTR [rax]
  4056f2:	test   edi,edi
  4056f4:	je     405aba <_start@@Base+0xc3a>
  4056fa:	lea    rdx,[rip+0x6909]        # 40c00a <_IO_stdin_used@@Base+0xa>
  405701:	mov    esi,0x1
  405706:	mov    rdi,r15
  405709:	xor    eax,eax
  40570b:	call   403bc0 <__fprintf_chk@plt>
  405710:	jmp    405208 <_start@@Base+0x388>
  405715:	lea    rsi,[rsp+0x58]
  40571a:	lea    rdi,[r14+0x118]
  405721:	call   4039a0 <coda_cursor_read_double@plt>
  405726:	test   eax,eax
  405728:	jne    405b12 <_start@@Base+0xc92>
  40572e:	cmp    DWORD PTR [rsp+0x54],0x8
  405733:	vmovsd xmm0,QWORD PTR [rsp+0x58]
  405739:	je     405af4 <_start@@Base+0xc74>
  40573f:	lea    rdx,[rip+0x68f0]        # 40c036 <_IO_stdin_used@@Base+0x36>
  405746:	mov    esi,0x1
  40574b:	mov    rdi,r15
  40574e:	mov    eax,0x1
  405753:	call   403bc0 <__fprintf_chk@plt>
  405758:	jmp    405208 <_start@@Base+0x388>
  40575d:	lea    rsi,[rsp+0x58]
  405762:	lea    rdi,[r14+0x118]
  405769:	call   403990 <coda_cursor_read_uint64@plt>
  40576e:	test   eax,eax
  405770:	jne    405b42 <_start@@Base+0xcc2>
  405776:	lea    rbx,[rsp+0x80]
  40577e:	mov    rdi,QWORD PTR [rsp+0x58]
  405783:	mov    rsi,rbx
  405786:	call   403740 <coda_str64u@plt>
  40578b:	mov    rsi,r15
  40578e:	mov    rdi,rbx
  405791:	call   403870 <fputs@plt>
  405796:	jmp    405208 <_start@@Base+0x388>
  40579b:	lea    rsi,[rsp+0x58]
  4057a0:	lea    rdi,[r14+0x118]
  4057a7:	call   403b50 <coda_cursor_get_bit_size@plt>
  4057ac:	test   eax,eax
  4057ae:	jne    405b1e <_start@@Base+0xc9e>
  4057b4:	mov    rbx,QWORD PTR [rsp+0x58]
  4057b9:	xor    ebp,ebp
  4057bb:	mov    rax,rbx
  4057be:	test   bl,0x7
  4057c1:	setne  bpl
  4057c5:	sar    rax,0x3
  4057c9:	add    rbp,rax
  4057cc:	mov    rdi,rbp
  4057cf:	call   403a00 <malloc@plt>
  4057d4:	mov    r12,rax
  4057d7:	test   rax,rax
  4057da:	je     405bd2 <_start@@Base+0xd52>
  4057e0:	xor    edx,edx
  4057e2:	mov    rcx,rbx
  4057e5:	mov    rsi,r12
  4057e8:	lea    rdi,[r14+0x118]
  4057ef:	call   403c20 <coda_cursor_read_bits@plt>
  4057f4:	test   eax,eax
  4057f6:	jne    405b72 <_start@@Base+0xcf2>
  4057fc:	mov    r14,r12
  4057ff:	lea    rbx,[r12+rbp*1]
  405803:	lea    r13,[rip+0x680e]        # 40c018 <_IO_stdin_used@@Base+0x18>
  40580a:	test   rbp,rbp
  40580d:	jg     405864 <_start@@Base+0x9e4>
  40580f:	jmp    4059ca <_start@@Base+0xb4a>
  405814:	nop    DWORD PTR [rax+0x0]
  405818:	cmp    cl,0xc
  40581b:	je     405a9c <_start@@Base+0xc1c>
  405821:	jb     405a7e <_start@@Base+0xbfe>
  405827:	cmp    cl,0xd
  40582a:	je     405a60 <_start@@Base+0xbe0>
  405830:	cmp    cl,0x5c
  405833:	jne    405a40 <_start@@Base+0xbc0>
  405839:	mov    rcx,r15
  40583c:	mov    edx,0x2
  405841:	mov    esi,0x1
  405846:	lea    rdi,[rip+0x67d7]        # 40c024 <_IO_stdin_used@@Base+0x24>
  40584d:	call   403bb0 <fwrite@plt>
  405852:	nop    WORD PTR [rax+rax*1+0x0]
  405858:	inc    r14
  40585b:	cmp    r14,rbx
  40585e:	je     4059ca <_start@@Base+0xb4a>
  405864:	movzx  ecx,BYTE PTR [r14]
  405868:	cmp    cl,0xa
  40586b:	je     405a24 <_start@@Base+0xba4>
  405871:	ja     405818 <_start@@Base+0x998>
  405873:	cmp    cl,0x8
  405876:	je     405a06 <_start@@Base+0xb86>
  40587c:	ja     4059e8 <_start@@Base+0xb68>
  405882:	cmp    cl,0x7
  405885:	jne    405a40 <_start@@Base+0xbc0>
  40588b:	mov    rcx,r15
  40588e:	mov    edx,0x2
  405893:	mov    esi,0x1
  405898:	lea    rdi,[rip+0x6770]        # 40c00f <_IO_stdin_used@@Base+0xf>
  40589f:	call   403bb0 <fwrite@plt>
  4058a4:	jmp    405858 <_start@@Base+0x9d8>
  4058a6:	lea    rsi,[rsp+0x58]
  4058ab:	lea    rdi,[r14+0x118]
  4058b2:	call   403ae0 <coda_cursor_read_int64@plt>
  4058b7:	test   eax,eax
  4058b9:	jne    405b36 <_start@@Base+0xcb6>
  4058bf:	lea    rbx,[rsp+0x80]
  4058c7:	mov    rdi,QWORD PTR [rsp+0x58]
  4058cc:	mov    rsi,rbx
  4058cf:	call   403c30 <coda_str64@plt>
  4058d4:	mov    rsi,r15
  4058d7:	mov    rdi,rbx
  4058da:	call   403870 <fputs@plt>
  4058df:	jmp    405208 <_start@@Base+0x388>
  4058e4:	lea    rsi,[rsp+0x58]
  4058e9:	lea    rdi,[r14+0x118]
  4058f0:	call   403770 <coda_cursor_read_uint32@plt>
  4058f5:	test   eax,eax
  4058f7:	jne    405b7e <_start@@Base+0xcfe>
  4058fd:	mov    ecx,DWORD PTR [rsp+0x58]
  405901:	lea    rdx,[rip+0x6725]        # 40c02d <_IO_stdin_used@@Base+0x2d>
  405908:	mov    esi,0x1
  40590d:	mov    rdi,r15
  405910:	xor    eax,eax
  405912:	call   403bc0 <__fprintf_chk@plt>
  405917:	jmp    405208 <_start@@Base+0x388>
  40591c:	lea    rsi,[rsp+0x58]
  405921:	lea    rdi,[r14+0x118]
  405928:	call   403ba0 <coda_cursor_read_int32@plt>
  40592d:	test   eax,eax
  40592f:	jne    405b2a <_start@@Base+0xcaa>
  405935:	movsxd rcx,DWORD PTR [rsp+0x58]
  40593a:	lea    rdx,[rip+0x6e5b]        # 40c79c <_IO_stdin_used@@Base+0x79c>
  405941:	mov    esi,0x1
  405946:	mov    rdi,r15
  405949:	xor    eax,eax
  40594b:	call   403bc0 <__fprintf_chk@plt>
  405950:	jmp    405208 <_start@@Base+0x388>
  405955:	xor    eax,eax
  405957:	call   40bc80 <handle_coda_error@@Base>
  40595c:	jmp    4053ce <_start@@Base+0x54e>
  405961:	lea    rcx,[rip+0x67f8]        # 40c160 <_IO_stdin_used@@Base+0x160>
  405968:	mov    edx,0x170
  40596d:	lea    rsi,[rip+0x66ec]        # 40c060 <_IO_stdin_used@@Base+0x60>
  405974:	lea    rdi,[rip+0x6884]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  40597b:	call   403860 <__assert_fail@plt>
  405980:	xor    eax,eax
  405982:	call   40bc80 <handle_coda_error@@Base>
  405987:	jmp    40524c <_start@@Base+0x3cc>
  40598c:	nop    DWORD PTR [rax+0x0]
  405990:	xor    eax,eax
  405992:	call   40bc80 <handle_coda_error@@Base>
  405997:	jmp    405397 <_start@@Base+0x517>
  40599c:	nop    DWORD PTR [rax+0x0]
  4059a0:	xor    eax,eax
  4059a2:	call   40bc80 <handle_coda_error@@Base>
  4059a7:	jmp    405357 <_start@@Base+0x4d7>
  4059ac:	nop    DWORD PTR [rax+0x0]
  4059b0:	xor    eax,eax
  4059b2:	call   40bc80 <handle_coda_error@@Base>
  4059b7:	jmp    4055ec <_start@@Base+0x76c>
  4059bc:	lea    eax,[r12+0x1]
  4059c1:	mov    DWORD PTR [rsp+0x20],eax
  4059c5:	jmp    405315 <_start@@Base+0x495>
  4059ca:	mov    rdi,r12
  4059cd:	call   403680 <free@plt>
  4059d2:	jmp    405208 <_start@@Base+0x388>
  4059d7:	xor    eax,eax
  4059d9:	call   40bc80 <handle_coda_error@@Base>
  4059de:	jmp    405169 <_start@@Base+0x2e9>
  4059e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e8:	mov    rcx,r15
  4059eb:	mov    edx,0x2
  4059f0:	mov    esi,0x1
  4059f5:	lea    rdi,[rip+0x6619]        # 40c015 <_IO_stdin_used@@Base+0x15>
  4059fc:	call   403bb0 <fwrite@plt>
  405a01:	jmp    405858 <_start@@Base+0x9d8>
  405a06:	mov    rcx,r15
  405a09:	mov    edx,0x2
  405a0e:	mov    esi,0x1
  405a13:	lea    rdi,[rip+0x65f8]        # 40c012 <_IO_stdin_used@@Base+0x12>
  405a1a:	call   403bb0 <fwrite@plt>
  405a1f:	jmp    405858 <_start@@Base+0x9d8>
  405a24:	mov    rcx,r15
  405a27:	mov    edx,0x2
  405a2c:	mov    esi,0x1
  405a31:	mov    rdi,r13
  405a34:	call   403bb0 <fwrite@plt>
  405a39:	jmp    405858 <_start@@Base+0x9d8>
  405a3e:	xchg   ax,ax
  405a40:	lea    eax,[rcx-0x20]
  405a43:	cmp    al,0x5e
  405a45:	ja     405ad9 <_start@@Base+0xc59>
  405a4b:	mov    rsi,r15
  405a4e:	movzx  edi,cl
  405a51:	call   4038d0 <fputc@plt>
  405a56:	jmp    405858 <_start@@Base+0x9d8>
  405a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a60:	mov    rcx,r15
  405a63:	mov    edx,0x2
  405a68:	mov    esi,0x1
  405a6d:	lea    rdi,[rip+0x65ad]        # 40c021 <_IO_stdin_used@@Base+0x21>
  405a74:	call   403bb0 <fwrite@plt>
  405a79:	jmp    405858 <_start@@Base+0x9d8>
  405a7e:	mov    rcx,r15
  405a81:	mov    edx,0x2
  405a86:	mov    esi,0x1
  405a8b:	lea    rdi,[rip+0x6589]        # 40c01b <_IO_stdin_used@@Base+0x1b>
  405a92:	call   403bb0 <fwrite@plt>
  405a97:	jmp    405858 <_start@@Base+0x9d8>
  405a9c:	mov    rcx,r15
  405a9f:	mov    edx,0x2
  405aa4:	mov    esi,0x1
  405aa9:	lea    rdi,[rip+0x656e]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  405ab0:	call   403bb0 <fwrite@plt>
  405ab5:	jmp    405858 <_start@@Base+0x9d8>
  405aba:	mov    rsi,r15
  405abd:	mov    edi,ecx
  405abf:	call   4038d0 <fputc@plt>
  405ac4:	jmp    405208 <_start@@Base+0x388>
  405ac9:	mov    rsi,r15
  405acc:	mov    rdi,rbp
  405acf:	call   403870 <fputs@plt>
  405ad4:	jmp    4056be <_start@@Base+0x83e>
  405ad9:	lea    rdx,[rip+0x6547]        # 40c027 <_IO_stdin_used@@Base+0x27>
  405ae0:	mov    esi,0x1
  405ae5:	mov    rdi,r15
  405ae8:	xor    eax,eax
  405aea:	call   403bc0 <__fprintf_chk@plt>
  405aef:	jmp    405858 <_start@@Base+0x9d8>
  405af4:	lea    rdx,[rip+0x6536]        # 40c031 <_IO_stdin_used@@Base+0x31>
  405afb:	mov    esi,0x1
  405b00:	mov    rdi,r15
  405b03:	mov    eax,0x1
  405b08:	call   403bc0 <__fprintf_chk@plt>
  405b0d:	jmp    405208 <_start@@Base+0x388>
  405b12:	xor    eax,eax
  405b14:	call   40bc80 <handle_coda_error@@Base>
  405b19:	jmp    40572e <_start@@Base+0x8ae>
  405b1e:	xor    eax,eax
  405b20:	call   40bc80 <handle_coda_error@@Base>
  405b25:	jmp    4057b4 <_start@@Base+0x934>
  405b2a:	xor    eax,eax
  405b2c:	call   40bc80 <handle_coda_error@@Base>
  405b31:	jmp    405935 <_start@@Base+0xab5>
  405b36:	xor    eax,eax
  405b38:	call   40bc80 <handle_coda_error@@Base>
  405b3d:	jmp    4058bf <_start@@Base+0xa3f>
  405b42:	xor    eax,eax
  405b44:	call   40bc80 <handle_coda_error@@Base>
  405b49:	jmp    405776 <_start@@Base+0x8f6>
  405b4e:	xor    eax,eax
  405b50:	call   40bc80 <handle_coda_error@@Base>
  405b55:	jmp    4056e4 <_start@@Base+0x864>
  405b5a:	xor    eax,eax
  405b5c:	call   40bc80 <handle_coda_error@@Base>
  405b61:	jmp    405694 <_start@@Base+0x814>
  405b66:	xor    eax,eax
  405b68:	call   40bc80 <handle_coda_error@@Base>
  405b6d:	jmp    40565d <_start@@Base+0x7dd>
  405b72:	xor    eax,eax
  405b74:	call   40bc80 <handle_coda_error@@Base>
  405b79:	jmp    4057fc <_start@@Base+0x97c>
  405b7e:	xor    eax,eax
  405b80:	call   40bc80 <handle_coda_error@@Base>
  405b85:	jmp    4058fd <_start@@Base+0xa7d>
  405b8a:	mov    rsi,r15
  405b8d:	mov    rdi,rbx
  405b90:	call   403870 <fputs@plt>
  405b95:	jmp    405208 <_start@@Base+0x388>
  405b9a:	mov    rdx,rbx
  405b9d:	mov    r8d,0x7e
  405ba3:	lea    rcx,[rip+0x64b6]        # 40c060 <_IO_stdin_used@@Base+0x60>
  405baa:	lea    rsi,[rip+0x6517]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  405bb1:	mov    edi,0xffffffff
  405bb6:	xor    eax,eax
  405bb8:	call   4036f0 <coda_set_error@plt>
  405bbd:	xor    eax,eax
  405bbf:	call   40bc80 <handle_coda_error@@Base>
  405bc4:	mov    rax,QWORD PTR [rsp+0x58]
  405bc9:	lea    rbx,[rax+0x1]
  405bcd:	jmp    40567a <_start@@Base+0x7fa>
  405bd2:	mov    r8d,0xa3
  405bd8:	lea    rcx,[rip+0x6481]        # 40c060 <_IO_stdin_used@@Base+0x60>
  405bdf:	mov    rdx,rbp
  405be2:	lea    rsi,[rip+0x64df]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  405be9:	mov    edi,0xffffffff
  405bee:	xor    eax,eax
  405bf0:	call   4036f0 <coda_set_error@plt>
  405bf5:	xor    eax,eax
  405bf7:	call   40bc80 <handle_coda_error@@Base>
  405bfc:	mov    rbx,QWORD PTR [rsp+0x58]
  405c01:	jmp    4057e0 <_start@@Base+0x960>
  405c06:	vmovsd xmm0,QWORD PTR [rsp+0x58]
  405c0c:	call   4037b0 <coda_isInf@plt>
  405c11:	test   eax,eax
  405c13:	jne    405198 <_start@@Base+0x318>
  405c19:	lea    rbx,[rsp+0x80]
  405c21:	vmovsd xmm0,QWORD PTR [rsp+0x58]
  405c27:	mov    rsi,rbx
  405c2a:	lea    rdi,[rip+0x640b]        # 40c03c <_IO_stdin_used@@Base+0x3c>
  405c31:	call   403710 <coda_time_double_to_string@plt>
  405c36:	test   eax,eax
  405c38:	je     4051d8 <_start@@Base+0x358>
  405c3e:	xor    eax,eax
  405c40:	call   40bc80 <handle_coda_error@@Base>
  405c45:	jmp    4051d8 <_start@@Base+0x358>
  405c4a:	call   403850 <__stack_chk_fail@plt>
  405c4f:	lea    rcx,[rip+0x650a]        # 40c160 <_IO_stdin_used@@Base+0x160>
  405c56:	mov    edx,0x126
  405c5b:	lea    rsi,[rip+0x63fe]        # 40c060 <_IO_stdin_used@@Base+0x60>
  405c62:	lea    rdi,[rip+0x6596]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  405c69:	call   403860 <__assert_fail@plt>
  405c6e:	xchg   ax,ax

0000000000405c70 <export_data_element_to_ascii@@Base>:
  405c70:	endbr64 
  405c74:	mov    edx,DWORD PTR [rip+0xa6b6]        # 410330 <__data_start@@Base+0x10>
  405c7a:	push   rbx
  405c7b:	test   edx,edx
  405c7d:	je     405d00 <export_data_element_to_ascii@@Base+0x90>
  405c83:	mov    DWORD PTR [rip+0xa6a3],0x0        # 410330 <__data_start@@Base+0x10>
  405c8d:	mov    rax,0x411690
  405c94:	mov    eax,DWORD PTR [rax]
  405c96:	test   eax,eax
  405c98:	jne    405cd8 <export_data_element_to_ascii@@Base+0x68>
  405c9a:	mov    rdx,0x411500
  405ca1:	mov    eax,DWORD PTR [rdx]
  405ca3:	test   eax,eax
  405ca5:	jle    405cb6 <export_data_element_to_ascii@@Base+0x46>
  405ca7:	dec    eax
  405ca9:	cdqe   
  405cab:	cmp    QWORD PTR [rdx+rax*8+0x150],0x0
  405cb4:	je     405cd0 <export_data_element_to_ascii@@Base+0x60>
  405cb6:	mov    rax,0x4114c0
  405cbd:	xor    ecx,ecx
  405cbf:	mov    rdi,QWORD PTR [rax]
  405cc2:	xor    edx,edx
  405cc4:	xor    esi,esi
  405cc6:	pop    rbx
  405cc7:	jmp    404f70 <_start@@Base+0xf0>
  405ccc:	nop    DWORD PTR [rax+0x0]
  405cd0:	pop    rbx
  405cd1:	ret    
  405cd2:	nop    WORD PTR [rax+rax*1+0x0]
  405cd8:	mov    rbx,0x4114c0
  405cdf:	xor    edx,edx
  405ce1:	mov    rdi,QWORD PTR [rbx]
  405ce4:	mov    esi,0x2
  405ce9:	call   409a90 <print_full_field_name@@Base>
  405cee:	mov    rsi,QWORD PTR [rbx]
  405cf1:	mov    edi,0xa
  405cf6:	call   4038d0 <fputc@plt>
  405cfb:	jmp    405c9a <export_data_element_to_ascii@@Base+0x2a>
  405cfd:	nop    DWORD PTR [rax]
  405d00:	mov    rax,0x4114c0
  405d07:	mov    edi,0xa
  405d0c:	mov    rsi,QWORD PTR [rax]
  405d0f:	call   4038d0 <fputc@plt>
  405d14:	jmp    405c8d <export_data_element_to_ascii@@Base+0x1d>
  405d19:	nop    DWORD PTR [rax+0x0]
  405d20:	push   r13
  405d22:	push   r12
  405d24:	mov    r12,rdi
  405d27:	push   rbp
  405d28:	push   rbx
  405d29:	sub    rsp,0xd8
  405d30:	mov    QWORD PTR [rsp+0x28],rsi
  405d35:	mov    QWORD PTR [rsp+0x30],rdx
  405d3a:	mov    QWORD PTR [rsp+0x38],rcx
  405d3f:	mov    QWORD PTR [rsp+0x40],r8
  405d44:	mov    QWORD PTR [rsp+0x48],r9
  405d49:	test   al,al
  405d4b:	je     405d8c <export_data_element_to_ascii@@Base+0x11c>
  405d4d:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  405d53:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  405d59:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405d5f:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  405d68:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405d71:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  405d7a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  405d83:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  405d8c:	mov    ebx,DWORD PTR [rip+0xa5b2]        # 410344 <__bss_start@@Base+0x8>
  405d92:	mov    rax,QWORD PTR fs:0x28
  405d9b:	mov    QWORD PTR [rsp+0x18],rax
  405da0:	xor    eax,eax
  405da2:	test   ebx,ebx
  405da4:	js     405e32 <export_data_element_to_ascii@@Base+0x1c2>
  405daa:	mov    rbp,0x4114c0
  405db1:	lea    r13,[rip+0x6449]        # 40c201 <_IO_stdin_used@@Base+0x201>
  405db8:	je     405dda <export_data_element_to_ascii@@Base+0x16a>
  405dba:	nop    WORD PTR [rax+rax*1+0x0]
  405dc0:	mov    rcx,QWORD PTR [rbp+0x0]
  405dc4:	mov    edx,0x2
  405dc9:	mov    esi,0x1
  405dce:	mov    rdi,r13
  405dd1:	call   403bb0 <fwrite@plt>
  405dd6:	dec    ebx
  405dd8:	jne    405dc0 <export_data_element_to_ascii@@Base+0x150>
  405dda:	lea    rax,[rsp+0x100]
  405de2:	mov    rdi,QWORD PTR [rbp+0x0]
  405de6:	mov    QWORD PTR [rsp+0x8],rax
  405deb:	mov    rdx,r12
  405dee:	lea    rax,[rsp+0x20]
  405df3:	mov    rcx,rsp
  405df6:	mov    esi,0x1
  405dfb:	mov    DWORD PTR [rsp],0x8
  405e02:	mov    DWORD PTR [rsp+0x4],0x30
  405e0a:	mov    QWORD PTR [rsp+0x10],rax
  405e0f:	call   4036b0 <__vfprintf_chk@plt>
  405e14:	mov    rdx,QWORD PTR [rsp+0x18]
  405e19:	xor    rdx,QWORD PTR fs:0x28
  405e22:	jne    405e51 <export_data_element_to_ascii@@Base+0x1e1>
  405e24:	add    rsp,0xd8
  405e2b:	pop    rbx
  405e2c:	pop    rbp
  405e2d:	pop    r12
  405e2f:	pop    r13
  405e31:	ret    
  405e32:	lea    rcx,[rip+0x64ab]        # 40c2e4 <_IO_stdin_used@@Base+0x2e4>
  405e39:	mov    edx,0x2c
  405e3e:	lea    rsi,[rip+0x634b]        # 40c190 <_IO_stdin_used@@Base+0x190>
  405e45:	lea    rdi,[rip+0x63a9]        # 40c1f5 <_IO_stdin_used@@Base+0x1f5>
  405e4c:	call   403860 <__assert_fail@plt>
  405e51:	call   403850 <__stack_chk_fail@plt>
  405e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e60:	sub    rsp,0xd8
  405e67:	mov    QWORD PTR [rsp+0x28],rsi
  405e6c:	mov    QWORD PTR [rsp+0x30],rdx
  405e71:	mov    QWORD PTR [rsp+0x38],rcx
  405e76:	mov    QWORD PTR [rsp+0x40],r8
  405e7b:	mov    QWORD PTR [rsp+0x48],r9
  405e80:	test   al,al
  405e82:	je     405ec3 <export_data_element_to_ascii@@Base+0x253>
  405e84:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  405e8a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  405e90:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405e96:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  405e9f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405ea8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  405eb1:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  405eba:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  405ec3:	mov    rax,QWORD PTR fs:0x28
  405ecc:	mov    QWORD PTR [rsp+0x18],rax
  405ed1:	xor    eax,eax
  405ed3:	lea    rax,[rsp+0xe0]
  405edb:	mov    QWORD PTR [rsp+0x8],rax
  405ee0:	lea    rax,[rsp+0x20]
  405ee5:	mov    QWORD PTR [rsp+0x10],rax
  405eea:	mov    rax,0x4114c0
  405ef1:	mov    rdx,rdi
  405ef4:	mov    rdi,QWORD PTR [rax]
  405ef7:	mov    rcx,rsp
  405efa:	mov    esi,0x1
  405eff:	mov    DWORD PTR [rsp],0x8
  405f06:	mov    DWORD PTR [rsp+0x4],0x30
  405f0e:	call   4036b0 <__vfprintf_chk@plt>
  405f13:	mov    rdx,QWORD PTR [rsp+0x18]
  405f18:	xor    rdx,QWORD PTR fs:0x28
  405f21:	jne    405f2b <export_data_element_to_ascii@@Base+0x2bb>
  405f23:	add    rsp,0xd8
  405f2a:	ret    
  405f2b:	call   403850 <__stack_chk_fail@plt>
  405f30:	test   rsi,rsi
  405f33:	jle    406080 <export_data_element_to_ascii@@Base+0x410>
  405f39:	push   r12
  405f3b:	lea    r12,[rip+0x60d6]        # 40c018 <_IO_stdin_used@@Base+0x18>
  405f42:	push   rbp
  405f43:	lea    rbp,[rdi+rsi*1]
  405f47:	push   rbx
  405f48:	mov    rbx,rdi
  405f4b:	jmp    405f90 <export_data_element_to_ascii@@Base+0x320>
  405f4d:	nop    DWORD PTR [rax]
  405f50:	cmp    sil,0xc
  405f54:	je     406050 <export_data_element_to_ascii@@Base+0x3e0>
  405f5a:	jl     406038 <export_data_element_to_ascii@@Base+0x3c8>
  405f60:	cmp    sil,0xd
  405f64:	je     406020 <export_data_element_to_ascii@@Base+0x3b0>
  405f6a:	cmp    sil,0x5c
  405f6e:	jne    406000 <export_data_element_to_ascii@@Base+0x390>
  405f74:	lea    rdi,[rip+0x60a9]        # 40c024 <_IO_stdin_used@@Base+0x24>
  405f7b:	xor    eax,eax
  405f7d:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  405f82:	nop    WORD PTR [rax+rax*1+0x0]
  405f88:	inc    rbx
  405f8b:	cmp    rbx,rbp
  405f8e:	je     405fbf <export_data_element_to_ascii@@Base+0x34f>
  405f90:	movsx  esi,BYTE PTR [rbx]
  405f93:	cmp    sil,0xa
  405f97:	je     405fc8 <export_data_element_to_ascii@@Base+0x358>
  405f99:	jg     405f50 <export_data_element_to_ascii@@Base+0x2e0>
  405f9b:	cmp    sil,0x8
  405f9f:	je     405ff0 <export_data_element_to_ascii@@Base+0x380>
  405fa1:	jg     405fd8 <export_data_element_to_ascii@@Base+0x368>
  405fa3:	cmp    sil,0x7
  405fa7:	jne    406000 <export_data_element_to_ascii@@Base+0x390>
  405fa9:	lea    rdi,[rip+0x605f]        # 40c00f <_IO_stdin_used@@Base+0xf>
  405fb0:	xor    eax,eax
  405fb2:	inc    rbx
  405fb5:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  405fba:	cmp    rbx,rbp
  405fbd:	jne    405f90 <export_data_element_to_ascii@@Base+0x320>
  405fbf:	pop    rbx
  405fc0:	pop    rbp
  405fc1:	pop    r12
  405fc3:	ret    
  405fc4:	nop    DWORD PTR [rax+0x0]
  405fc8:	mov    rdi,r12
  405fcb:	xor    eax,eax
  405fcd:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  405fd2:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  405fd4:	nop    DWORD PTR [rax+0x0]
  405fd8:	lea    rdi,[rip+0x6036]        # 40c015 <_IO_stdin_used@@Base+0x15>
  405fdf:	xor    eax,eax
  405fe1:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  405fe6:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  405fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	lea    rdi,[rip+0x601b]        # 40c012 <_IO_stdin_used@@Base+0x12>
  405ff7:	xor    eax,eax
  405ff9:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  405ffe:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  406000:	lea    eax,[rsi-0x20]
  406003:	cmp    al,0x5e
  406005:	ja     406068 <export_data_element_to_ascii@@Base+0x3f8>
  406007:	lea    rdi,[rip+0x61f6]        # 40c204 <_IO_stdin_used@@Base+0x204>
  40600e:	xor    eax,eax
  406010:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406015:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  40601a:	nop    WORD PTR [rax+rax*1+0x0]
  406020:	lea    rdi,[rip+0x5ffa]        # 40c021 <_IO_stdin_used@@Base+0x21>
  406027:	xor    eax,eax
  406029:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40602e:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  406033:	nop    DWORD PTR [rax+rax*1+0x0]
  406038:	lea    rdi,[rip+0x5fdc]        # 40c01b <_IO_stdin_used@@Base+0x1b>
  40603f:	xor    eax,eax
  406041:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406046:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  40604b:	nop    DWORD PTR [rax+rax*1+0x0]
  406050:	lea    rdi,[rip+0x5fc7]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  406057:	xor    eax,eax
  406059:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40605e:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  406063:	nop    DWORD PTR [rax+rax*1+0x0]
  406068:	movzx  esi,sil
  40606c:	lea    rdi,[rip+0x5fb4]        # 40c027 <_IO_stdin_used@@Base+0x27>
  406073:	xor    eax,eax
  406075:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40607a:	jmp    405f88 <export_data_element_to_ascii@@Base+0x318>
  40607f:	nop
  406080:	ret    
  406081:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40608c:	nop    DWORD PTR [rax+0x0]
  406090:	push   r15
  406092:	push   r14
  406094:	push   r13
  406096:	push   r12
  406098:	push   rbp
  406099:	mov    ebp,esi
  40609b:	push   rbx
  40609c:	mov    rbx,rdi
  40609f:	sub    rsp,0x3d8
  4060a6:	lea    rsi,[rsp+0x40]
  4060ab:	mov    rax,QWORD PTR fs:0x28
  4060b4:	mov    QWORD PTR [rsp+0x3c8],rax
  4060bc:	xor    eax,eax
  4060be:	call   4037f0 <coda_cursor_has_attributes@plt>
  4060c3:	test   eax,eax
  4060c5:	jne    4062a8 <export_data_element_to_ascii@@Base+0x638>
  4060cb:	mov    r10d,DWORD PTR [rsp+0x40]
  4060d0:	test   r10d,r10d
  4060d3:	jne    406260 <export_data_element_to_ascii@@Base+0x5f0>
  4060d9:	lea    rsi,[rsp+0x3c]
  4060de:	mov    rdi,rbx
  4060e1:	call   403800 <coda_cursor_get_type_class@plt>
  4060e6:	test   eax,eax
  4060e8:	jne    406250 <export_data_element_to_ascii@@Base+0x5e0>
  4060ee:	cmp    DWORD PTR [rsp+0x3c],0x6
  4060f3:	ja     406220 <export_data_element_to_ascii@@Base+0x5b0>
  4060f9:	mov    eax,DWORD PTR [rsp+0x3c]
  4060fd:	lea    rdx,[rip+0x618c]        # 40c290 <_IO_stdin_used@@Base+0x290>
  406104:	movsxd rax,DWORD PTR [rdx+rax*4]
  406108:	add    rax,rdx
  40610b:	notrack jmp rax
  40610e:	xchg   ax,ax
  406110:	lea    rsi,[rsp+0x48]
  406115:	mov    rdi,rbx
  406118:	call   403730 <coda_cursor_get_num_elements@plt>
  40611d:	test   eax,eax
  40611f:	jne    4065d8 <export_data_element_to_ascii@@Base+0x968>
  406125:	cmp    QWORD PTR [rsp+0x48],0x0
  40612b:	jle    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406131:	lea    rsi,[rsp+0x50]
  406136:	mov    rdi,rbx
  406139:	call   4037a0 <coda_cursor_get_type@plt>
  40613e:	test   eax,eax
  406140:	jne    406c98 <export_data_element_to_ascii@@Base+0x1028>
  406146:	mov    rdi,QWORD PTR [rsp+0x50]
  40614b:	lea    rsi,[rsp+0x44]
  406150:	call   403a50 <coda_type_get_record_union_status@plt>
  406155:	test   eax,eax
  406157:	jne    406c88 <export_data_element_to_ascii@@Base+0x1018>
  40615d:	mov    r9d,DWORD PTR [rsp+0x44]
  406162:	test   r9d,r9d
  406165:	je     4066f8 <export_data_element_to_ascii@@Base+0xa88>
  40616b:	lea    rsi,[rsp+0x58]
  406170:	mov    rdi,rbx
  406173:	call   403b80 <coda_cursor_get_available_union_field_index@plt>
  406178:	test   eax,eax
  40617a:	jne    406d72 <export_data_element_to_ascii@@Base+0x1102>
  406180:	mov    rsi,QWORD PTR [rsp+0x58]
  406185:	mov    rdi,QWORD PTR [rsp+0x50]
  40618a:	lea    rdx,[rsp+0x60]
  40618f:	call   403c10 <coda_type_get_record_field_name@plt>
  406194:	test   eax,eax
  406196:	jne    406d66 <export_data_element_to_ascii@@Base+0x10f6>
  40619c:	mov    rsi,QWORD PTR [rsp+0x58]
  4061a1:	mov    rdi,rbx
  4061a4:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  4061a9:	test   eax,eax
  4061ab:	jne    406d5a <export_data_element_to_ascii@@Base+0x10ea>
  4061b1:	mov    rsi,QWORD PTR [rsp+0x60]
  4061b6:	lea    rdi,[rip+0x660c]        # 40c7c9 <_IO_stdin_used@@Base+0x7c9>
  4061bd:	xor    eax,eax
  4061bf:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  4061c4:	mov    r8d,DWORD PTR [rip+0xa169]        # 410334 <__data_start@@Base+0x14>
  4061cb:	test   r8d,r8d
  4061ce:	jne    406cee <export_data_element_to_ascii@@Base+0x107e>
  4061d4:	lea    rdi,[rip+0x671a]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  4061db:	xor    eax,eax
  4061dd:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4061e2:	mov    rax,0x410338
  4061e9:	inc    DWORD PTR [rip+0xa155]        # 410344 <__bss_start@@Base+0x8>
  4061ef:	mov    eax,DWORD PTR [rax]
  4061f1:	cmp    eax,ebp
  4061f3:	jg     4061fd <export_data_element_to_ascii@@Base+0x58d>
  4061f5:	test   eax,eax
  4061f7:	jns    406dda <export_data_element_to_ascii@@Base+0x116a>
  4061fd:	lea    esi,[rbp+0x1]
  406200:	mov    rdi,rbx
  406203:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  406208:	mov    rdi,rbx
  40620b:	dec    DWORD PTR [rip+0xa133]        # 410344 <__bss_start@@Base+0x8>
  406211:	call   403930 <coda_cursor_goto_parent@plt>
  406216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406220:	mov    rax,QWORD PTR [rsp+0x3c8]
  406228:	xor    rax,QWORD PTR fs:0x28
  406231:	jne    406ef4 <export_data_element_to_ascii@@Base+0x1284>
  406237:	add    rsp,0x3d8
  40623e:	pop    rbx
  40623f:	pop    rbp
  406240:	pop    r12
  406242:	pop    r13
  406244:	pop    r14
  406246:	pop    r15
  406248:	ret    
  406249:	nop    DWORD PTR [rax+0x0]
  406250:	xor    eax,eax
  406252:	call   40bc80 <handle_coda_error@@Base>
  406257:	jmp    4060ee <export_data_element_to_ascii@@Base+0x47e>
  40625c:	nop    DWORD PTR [rax+0x0]
  406260:	mov    rdi,rbx
  406263:	call   403a20 <coda_cursor_goto_attributes@plt>
  406268:	test   eax,eax
  40626a:	jne    4065c8 <export_data_element_to_ascii@@Base+0x958>
  406270:	lea    rdi,[rip+0x5f90]        # 40c207 <_IO_stdin_used@@Base+0x207>
  406277:	xor    eax,eax
  406279:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  40627e:	mov    rdi,rbx
  406281:	mov    esi,ebp
  406283:	inc    DWORD PTR [rip+0xa0bb]        # 410344 <__bss_start@@Base+0x8>
  406289:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  40628e:	mov    rdi,rbx
  406291:	dec    DWORD PTR [rip+0xa0ad]        # 410344 <__bss_start@@Base+0x8>
  406297:	call   403930 <coda_cursor_goto_parent@plt>
  40629c:	jmp    4060d9 <export_data_element_to_ascii@@Base+0x469>
  4062a1:	nop    DWORD PTR [rax+0x0]
  4062a8:	xor    eax,eax
  4062aa:	call   40bc80 <handle_coda_error@@Base>
  4062af:	jmp    4060cb <export_data_element_to_ascii@@Base+0x45b>
  4062b4:	nop    DWORD PTR [rax+0x0]
  4062b8:	lea    rsi,[rsp+0x60]
  4062bd:	mov    rdi,rbx
  4062c0:	call   403ac0 <coda_cursor_has_ascii_content@plt>
  4062c5:	test   eax,eax
  4062c7:	jne    406690 <export_data_element_to_ascii@@Base+0xa20>
  4062cd:	mov    edx,DWORD PTR [rsp+0x60]
  4062d1:	test   edx,edx
  4062d3:	jne    406608 <export_data_element_to_ascii@@Base+0x998>
  4062d9:	lea    rsi,[rsp+0x58]
  4062de:	mov    rdi,rbx
  4062e1:	call   403900 <coda_cursor_get_read_type@plt>
  4062e6:	test   eax,eax
  4062e8:	jne    4065f8 <export_data_element_to_ascii@@Base+0x988>
  4062ee:	mov    eax,DWORD PTR [rsp+0x58]
  4062f2:	inc    eax
  4062f4:	cmp    eax,0xd
  4062f7:	ja     406220 <export_data_element_to_ascii@@Base+0x5b0>
  4062fd:	lea    rdx,[rip+0x5fa8]        # 40c2ac <_IO_stdin_used@@Base+0x2ac>
  406304:	movsxd rax,DWORD PTR [rdx+rax*4]
  406308:	add    rax,rdx
  40630b:	notrack jmp rax
  40630e:	xchg   ax,ax
  406310:	lea    rsi,[rsp+0x58]
  406315:	mov    rdi,rbx
  406318:	call   403880 <coda_cursor_get_special_type@plt>
  40631d:	test   eax,eax
  40631f:	jne    4066e8 <export_data_element_to_ascii@@Base+0xa78>
  406325:	mov    edi,DWORD PTR [rsp+0x58]
  406329:	test   edi,edi
  40632b:	jne    4066a0 <export_data_element_to_ascii@@Base+0xa30>
  406331:	call   403650 <coda_type_get_special_type_name@plt>
  406336:	mov    rsi,rax
  406339:	lea    rdi,[rip+0x5f1d]        # 40c25d <_IO_stdin_used@@Base+0x25d>
  406340:	xor    eax,eax
  406342:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406347:	mov    eax,DWORD PTR [rsp+0x58]
  40634b:	cmp    eax,0x1
  40634e:	je     406bc8 <export_data_element_to_ascii@@Base+0xf58>
  406354:	test   eax,eax
  406356:	je     406c00 <export_data_element_to_ascii@@Base+0xf90>
  40635c:	cmp    eax,0x2
  40635f:	je     406c18 <export_data_element_to_ascii@@Base+0xfa8>
  406365:	cmp    eax,0x3
  406368:	jne    406220 <export_data_element_to_ascii@@Base+0x5b0>
  40636e:	lea    rdx,[rsp+0x68]
  406373:	lea    rsi,[rsp+0x60]
  406378:	mov    rdi,rbx
  40637b:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  406380:	test   eax,eax
  406382:	jne    406a6c <export_data_element_to_ascii@@Base+0xdfc>
  406388:	vmovsd xmm1,QWORD PTR [rsp+0x68]
  40638e:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  406394:	lea    rdi,[rip+0x5eea]        # 40c285 <_IO_stdin_used@@Base+0x285>
  40639b:	mov    eax,0x2
  4063a0:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4063a5:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  4063aa:	nop    WORD PTR [rax+rax*1+0x0]
  4063b0:	lea    rax,[rsp+0x90]
  4063b8:	lea    rsi,[rsp+0x60]
  4063bd:	mov    rdx,rax
  4063c0:	mov    rdi,rbx
  4063c3:	mov    QWORD PTR [rsp],rax
  4063c7:	call   403ab0 <coda_cursor_get_array_dim@plt>
  4063cc:	test   eax,eax
  4063ce:	jne    4065e8 <export_data_element_to_ascii@@Base+0x978>
  4063d4:	mov    eax,DWORD PTR [rsp+0x60]
  4063d8:	test   eax,eax
  4063da:	js     406220 <export_data_element_to_ascii@@Base+0x5b0>
  4063e0:	je     406cb4 <export_data_element_to_ascii@@Base+0x1044>
  4063e6:	mov    rdi,QWORD PTR [rsp]
  4063ea:	lea    esi,[rax-0x1]
  4063ed:	lea    rax,[rdi+0x8]
  4063f1:	mov    rcx,rdi
  4063f4:	lea    rdx,[rsp+0x70]
  4063f9:	lea    rsi,[rax+rsi*8]
  4063fd:	mov    r12d,0x1
  406403:	jmp    40640c <export_data_element_to_ascii@@Base+0x79c>
  406405:	nop    DWORD PTR [rax]
  406408:	add    rax,0x8
  40640c:	imul   r12,QWORD PTR [rcx]
  406410:	mov    DWORD PTR [rdx],0x0
  406416:	mov    rcx,rax
  406419:	add    rdx,0x4
  40641d:	cmp    rsi,rax
  406420:	jne    406408 <export_data_element_to_ascii@@Base+0x798>
  406422:	test   r12,r12
  406425:	jle    406220 <export_data_element_to_ascii@@Base+0x5b0>
  40642b:	mov    rdi,rbx
  40642e:	call   403890 <coda_cursor_goto_first_array_element@plt>
  406433:	test   eax,eax
  406435:	jne    406cca <export_data_element_to_ascii@@Base+0x105a>
  40643b:	lea    rax,[r12-0x1]
  406440:	mov    QWORD PTR [rsp+0x8],rax
  406445:	mov    rax,0x410338
  40644c:	mov    DWORD PTR [rsp+0x18],ebp
  406450:	mov    QWORD PTR [rsp+0x10],rax
  406455:	lea    rax,[rsp+0x68]
  40645a:	mov    QWORD PTR [rsp+0x20],rax
  40645f:	lea    rax,[rsp+0x3a0]
  406467:	mov    QWORD PTR [rsp+0x28],rax
  40646c:	lea    eax,[rbp+0x1]
  40646f:	mov    DWORD PTR [rsp+0x1c],eax
  406473:	xor    r15d,r15d
  406476:	lea    r14,[rip+0x5d9d]        # 40c21a <_IO_stdin_used@@Base+0x21a>
  40647d:	lea    rdi,[rip+0x5fca]        # 40c44e <_IO_stdin_used@@Base+0x44e>
  406484:	xor    eax,eax
  406486:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  40648b:	mov    esi,DWORD PTR [rsp+0x60]
  40648f:	xor    ebp,ebp
  406491:	lea    r13,[rsp+0x70]
  406496:	test   esi,esi
  406498:	jg     4064a7 <export_data_element_to_ascii@@Base+0x837>
  40649a:	jmp    4064da <export_data_element_to_ascii@@Base+0x86a>
  40649c:	nop    DWORD PTR [rax+0x0]
  4064a0:	inc    rbp
  4064a3:	cmp    eax,ebp
  4064a5:	jle    4064da <export_data_element_to_ascii@@Base+0x86a>
  4064a7:	mov    esi,DWORD PTR [r13+rbp*4+0x0]
  4064ac:	mov    rdi,r14
  4064af:	xor    eax,eax
  4064b1:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4064b6:	mov    eax,DWORD PTR [rsp+0x60]
  4064ba:	lea    edx,[rax-0x1]
  4064bd:	cmp    edx,ebp
  4064bf:	jle    4064a0 <export_data_element_to_ascii@@Base+0x830>
  4064c1:	lea    rdi,[rip+0x5f7a]        # 40c442 <_IO_stdin_used@@Base+0x442>
  4064c8:	xor    eax,eax
  4064ca:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4064cf:	mov    eax,DWORD PTR [rsp+0x60]
  4064d3:	inc    rbp
  4064d6:	cmp    eax,ebp
  4064d8:	jg     4064a7 <export_data_element_to_ascii@@Base+0x837>
  4064da:	lea    rdi,[rip+0x5f65]        # 40c446 <_IO_stdin_used@@Base+0x446>
  4064e1:	xor    eax,eax
  4064e3:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4064e8:	mov    ecx,DWORD PTR [rip+0x9e46]        # 410334 <__data_start@@Base+0x14>
  4064ee:	test   ecx,ecx
  4064f0:	jne    406aa0 <export_data_element_to_ascii@@Base+0xe30>
  4064f6:	lea    rdi,[rip+0x63f8]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  4064fd:	xor    eax,eax
  4064ff:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406504:	mov    rax,QWORD PTR [rsp+0x10]
  406509:	inc    DWORD PTR [rip+0x9e35]        # 410344 <__bss_start@@Base+0x8>
  40650f:	mov    eax,DWORD PTR [rax]
  406511:	cmp    eax,DWORD PTR [rsp+0x18]
  406515:	jg     40651f <export_data_element_to_ascii@@Base+0x8af>
  406517:	test   eax,eax
  406519:	jns    406bb0 <export_data_element_to_ascii@@Base+0xf40>
  40651f:	mov    esi,DWORD PTR [rsp+0x1c]
  406523:	mov    rdi,rbx
  406526:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  40652b:	mov    edx,DWORD PTR [rsp+0x60]
  40652f:	dec    DWORD PTR [rip+0x9e0f]        # 410344 <__bss_start@@Base+0x8>
  406535:	mov    esi,edx
  406537:	dec    esi
  406539:	js     40659d <export_data_element_to_ascii@@Base+0x92d>
  40653b:	movsxd rcx,esi
  40653e:	mov    eax,DWORD PTR [rsp+rcx*4+0x70]
  406542:	inc    eax
  406544:	mov    DWORD PTR [rsp+rcx*4+0x70],eax
  406548:	cdqe   
  40654a:	cmp    QWORD PTR [rsp+rcx*8+0x90],rax
  406552:	jne    40659d <export_data_element_to_ascii@@Base+0x92d>
  406554:	mov    rcx,QWORD PTR [rsp]
  406558:	movsxd rax,edx
  40655b:	lea    rcx,[rcx+rax*8]
  40655f:	mov    esi,esi
  406561:	shl    rsi,0x3
  406565:	mov    rdi,rcx
  406568:	lea    rdx,[rsp+rax*4+0x68]
  40656d:	sub    rdi,rsi
  406570:	jmp    406591 <export_data_element_to_ascii@@Base+0x921>
  406572:	nop    WORD PTR [rax+rax*1+0x0]
  406578:	mov    eax,DWORD PTR [rdx]
  40657a:	mov    rsi,QWORD PTR [rcx-0x10]
  40657e:	inc    eax
  406580:	mov    DWORD PTR [rdx],eax
  406582:	cdqe   
  406584:	sub    rdx,0x4
  406588:	sub    rcx,0x8
  40658c:	cmp    rax,rsi
  40658f:	jne    40659d <export_data_element_to_ascii@@Base+0x92d>
  406591:	mov    DWORD PTR [rdx+0x4],0x0
  406598:	cmp    rdi,rcx
  40659b:	jne    406578 <export_data_element_to_ascii@@Base+0x908>
  40659d:	cmp    r15,QWORD PTR [rsp+0x8]
  4065a2:	jl     406a80 <export_data_element_to_ascii@@Base+0xe10>
  4065a8:	inc    r15
  4065ab:	cmp    r15,r12
  4065ae:	jl     40647d <export_data_element_to_ascii@@Base+0x80d>
  4065b4:	mov    rdi,rbx
  4065b7:	call   403930 <coda_cursor_goto_parent@plt>
  4065bc:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  4065c1:	nop    DWORD PTR [rax+0x0]
  4065c8:	xor    eax,eax
  4065ca:	call   40bc80 <handle_coda_error@@Base>
  4065cf:	jmp    406270 <export_data_element_to_ascii@@Base+0x600>
  4065d4:	nop    DWORD PTR [rax+0x0]
  4065d8:	xor    eax,eax
  4065da:	call   40bc80 <handle_coda_error@@Base>
  4065df:	jmp    406125 <export_data_element_to_ascii@@Base+0x4b5>
  4065e4:	nop    DWORD PTR [rax+0x0]
  4065e8:	xor    eax,eax
  4065ea:	call   40bc80 <handle_coda_error@@Base>
  4065ef:	jmp    4063d4 <export_data_element_to_ascii@@Base+0x764>
  4065f4:	nop    DWORD PTR [rax+0x0]
  4065f8:	xor    eax,eax
  4065fa:	call   40bc80 <handle_coda_error@@Base>
  4065ff:	jmp    4062ee <export_data_element_to_ascii@@Base+0x67e>
  406604:	nop    DWORD PTR [rax+0x0]
  406608:	lea    rsi,[rsp+0x68]
  40660d:	mov    rdi,rbx
  406610:	call   403980 <coda_cursor_get_string_length@plt>
  406615:	test   eax,eax
  406617:	jne    406a40 <export_data_element_to_ascii@@Base+0xdd0>
  40661d:	mov    rax,QWORD PTR [rsp+0x68]
  406622:	lea    rbp,[rax+0x1]
  406626:	mov    rdi,rbp
  406629:	call   403a00 <malloc@plt>
  40662e:	mov    r12,rax
  406631:	test   rax,rax
  406634:	je     406da2 <export_data_element_to_ascii@@Base+0x1132>
  40663a:	mov    rdx,rbp
  40663d:	mov    rsi,r12
  406640:	mov    rdi,rbx
  406643:	call   403920 <coda_cursor_read_string@plt>
  406648:	test   eax,eax
  40664a:	jne    406a60 <export_data_element_to_ascii@@Base+0xdf0>
  406650:	lea    rdi,[rip+0x601a]        # 40c671 <_IO_stdin_used@@Base+0x671>
  406657:	xor    eax,eax
  406659:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  40665e:	mov    rsi,QWORD PTR [rsp+0x68]
  406663:	mov    rdi,r12
  406666:	call   405f30 <export_data_element_to_ascii@@Base+0x2c0>
  40666b:	mov    rsi,QWORD PTR [rsp+0x68]
  406670:	lea    rdi,[rip+0x5bab]        # 40c222 <_IO_stdin_used@@Base+0x222>
  406677:	xor    eax,eax
  406679:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40667e:	mov    rdi,r12
  406681:	call   403680 <free@plt>
  406686:	jmp    4062d9 <export_data_element_to_ascii@@Base+0x669>
  40668b:	nop    DWORD PTR [rax+rax*1+0x0]
  406690:	xor    eax,eax
  406692:	call   40bc80 <handle_coda_error@@Base>
  406697:	jmp    4062cd <export_data_element_to_ascii@@Base+0x65d>
  40669c:	nop    DWORD PTR [rax+0x0]
  4066a0:	lea    rax,[rsp+0x90]
  4066a8:	mov    r14,rax
  4066ab:	mov    rdi,rax
  4066ae:	mov    edx,0x310
  4066b3:	mov    rsi,rbx
  4066b6:	mov    QWORD PTR [rsp],rax
  4066ba:	call   403960 <memcpy@plt>
  4066bf:	mov    rdi,r14
  4066c2:	call   403b70 <coda_cursor_use_base_type_of_special_type@plt>
  4066c7:	test   eax,eax
  4066c9:	jne    406a50 <export_data_element_to_ascii@@Base+0xde0>
  4066cf:	mov    rdi,QWORD PTR [rsp]
  4066d3:	mov    esi,ebp
  4066d5:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  4066da:	mov    edi,DWORD PTR [rsp+0x58]
  4066de:	jmp    406331 <export_data_element_to_ascii@@Base+0x6c1>
  4066e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4066e8:	xor    eax,eax
  4066ea:	call   40bc80 <handle_coda_error@@Base>
  4066ef:	jmp    406325 <export_data_element_to_ascii@@Base+0x6b5>
  4066f4:	nop    DWORD PTR [rax+0x0]
  4066f8:	mov    rdi,rbx
  4066fb:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  406700:	test   eax,eax
  406702:	jne    406d7e <export_data_element_to_ascii@@Base+0x110e>
  406708:	cmp    QWORD PTR [rsp+0x48],0x0
  40670e:	mov    QWORD PTR [rsp+0x58],0x0
  406717:	jle    4065b4 <export_data_element_to_ascii@@Base+0x944>
  40671d:	lea    rcx,[rsp+0x3a0]
  406725:	mov    rax,0x410338
  40672c:	mov    QWORD PTR [rsp+0x8],rcx
  406731:	lea    r15,[rsp+0x68]
  406736:	mov    QWORD PTR [rsp],r15
  40673a:	xor    esi,esi
  40673c:	lea    r13,[rsp+0x60]
  406741:	lea    r12,[rip+0x6081]        # 40c7c9 <_IO_stdin_used@@Base+0x7c9>
  406748:	lea    r14d,[rbp+0x1]
  40674c:	mov    r15,rax
  40674f:	mov    rdi,QWORD PTR [rsp+0x50]
  406754:	mov    rdx,r13
  406757:	call   403c10 <coda_type_get_record_field_name@plt>
  40675c:	test   eax,eax
  40675e:	jne    406b10 <export_data_element_to_ascii@@Base+0xea0>
  406764:	mov    rsi,QWORD PTR [rsp+0x60]
  406769:	mov    rdi,r12
  40676c:	xor    eax,eax
  40676e:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406773:	mov    edi,DWORD PTR [rip+0x9bbb]        # 410334 <__data_start@@Base+0x14>
  406779:	test   edi,edi
  40677b:	jne    406b20 <export_data_element_to_ascii@@Base+0xeb0>
  406781:	lea    rdi,[rip+0x616d]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  406788:	xor    eax,eax
  40678a:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40678f:	mov    eax,DWORD PTR [r15]
  406792:	inc    DWORD PTR [rip+0x9bac]        # 410344 <__bss_start@@Base+0x8>
  406798:	cmp    eax,ebp
  40679a:	jg     4067a4 <export_data_element_to_ascii@@Base+0xb34>
  40679c:	test   eax,eax
  40679e:	jns    406c70 <export_data_element_to_ascii@@Base+0x1000>
  4067a4:	mov    esi,r14d
  4067a7:	mov    rdi,rbx
  4067aa:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  4067af:	mov    rax,QWORD PTR [rsp+0x48]
  4067b4:	mov    rsi,QWORD PTR [rsp+0x58]
  4067b9:	lea    rdx,[rax-0x1]
  4067bd:	dec    DWORD PTR [rip+0x9b81]        # 410344 <__bss_start@@Base+0x8>
  4067c3:	cmp    rdx,rsi
  4067c6:	jg     406b90 <export_data_element_to_ascii@@Base+0xf20>
  4067cc:	inc    rsi
  4067cf:	mov    QWORD PTR [rsp+0x58],rsi
  4067d4:	cmp    rsi,rax
  4067d7:	jl     40674f <export_data_element_to_ascii@@Base+0xadf>
  4067dd:	jmp    4065b4 <export_data_element_to_ascii@@Base+0x944>
  4067e2:	nop    WORD PTR [rax+rax*1+0x0]
  4067e8:	lea    rsi,[rsp+0x68]
  4067ed:	mov    rdi,rbx
  4067f0:	call   4039a0 <coda_cursor_read_double@plt>
  4067f5:	test   eax,eax
  4067f7:	jne    406e0f <export_data_element_to_ascii@@Base+0x119f>
  4067fd:	cmp    DWORD PTR [rsp+0x58],0x8
  406802:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406808:	je     406ded <export_data_element_to_ascii@@Base+0x117d>
  40680e:	lea    rdi,[rip+0x5a4e]        # 40c263 <_IO_stdin_used@@Base+0x263>
  406815:	mov    eax,0x1
  40681a:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  40681f:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406824:	nop    DWORD PTR [rax+0x0]
  406828:	lea    rsi,[rsp+0x68]
  40682d:	mov    rdi,rbx
  406830:	call   403990 <coda_cursor_read_uint64@plt>
  406835:	test   eax,eax
  406837:	jne    406e52 <export_data_element_to_ascii@@Base+0x11e2>
  40683d:	lea    rbx,[rsp+0x3a0]
  406845:	mov    rdi,QWORD PTR [rsp+0x68]
  40684a:	mov    rsi,rbx
  40684d:	call   403740 <coda_str64u@plt>
  406852:	mov    rsi,rbx
  406855:	lea    rdi,[rip+0x6320]        # 40cb7c <_IO_stdin_used@@Base+0xb7c>
  40685c:	xor    eax,eax
  40685e:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406863:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406868:	nop    DWORD PTR [rax+rax*1+0x0]
  406870:	lea    rsi,[rsp+0x68]
  406875:	mov    rdi,rbx
  406878:	call   403ba0 <coda_cursor_read_int32@plt>
  40687d:	test   eax,eax
  40687f:	jne    406e03 <export_data_element_to_ascii@@Base+0x1193>
  406885:	movsxd rsi,DWORD PTR [rsp+0x68]
  40688a:	lea    rdi,[rip+0x59aa]        # 40c23b <_IO_stdin_used@@Base+0x23b>
  406891:	xor    eax,eax
  406893:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406898:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  40689d:	nop    DWORD PTR [rax]
  4068a0:	lea    rsi,[rsp+0x68]
  4068a5:	mov    rdi,rbx
  4068a8:	call   403ae0 <coda_cursor_read_int64@plt>
  4068ad:	test   eax,eax
  4068af:	jne    406e46 <export_data_element_to_ascii@@Base+0x11d6>
  4068b5:	lea    rbx,[rsp+0x3a0]
  4068bd:	mov    rdi,QWORD PTR [rsp+0x68]
  4068c2:	mov    rsi,rbx
  4068c5:	call   403c30 <coda_str64@plt>
  4068ca:	mov    rsi,rbx
  4068cd:	lea    rdi,[rip+0x62a8]        # 40cb7c <_IO_stdin_used@@Base+0xb7c>
  4068d4:	xor    eax,eax
  4068d6:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  4068db:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  4068e0:	lea    rsi,[rsp+0x68]
  4068e5:	mov    rdi,rbx
  4068e8:	call   403b50 <coda_cursor_get_bit_size@plt>
  4068ed:	test   eax,eax
  4068ef:	jne    406e3a <export_data_element_to_ascii@@Base+0x11ca>
  4068f5:	mov    r13,QWORD PTR [rsp+0x68]
  4068fa:	xor    ebp,ebp
  4068fc:	mov    rax,r13
  4068ff:	test   r13b,0x7
  406903:	setne  bpl
  406907:	sar    rax,0x3
  40690b:	add    rbp,rax
  40690e:	mov    rdi,rbp
  406911:	call   403a00 <malloc@plt>
  406916:	mov    r12,rax
  406919:	test   rax,rax
  40691c:	je     406eaa <export_data_element_to_ascii@@Base+0x123a>
  406922:	xor    edx,edx
  406924:	mov    rcx,r13
  406927:	mov    rsi,r12
  40692a:	mov    rdi,rbx
  40692d:	call   403c20 <coda_cursor_read_bits@plt>
  406932:	test   eax,eax
  406934:	jne    406e2e <export_data_element_to_ascii@@Base+0x11be>
  40693a:	lea    rdi,[rip+0x5d30]        # 40c671 <_IO_stdin_used@@Base+0x671>
  406941:	xor    eax,eax
  406943:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406948:	mov    rsi,rbp
  40694b:	mov    rdi,r12
  40694e:	call   405f30 <export_data_element_to_ascii@@Base+0x2c0>
  406953:	lea    rbx,[rsp+0x3a0]
  40695b:	lea    rdi,[rip+0x58d0]        # 40c232 <_IO_stdin_used@@Base+0x232>
  406962:	xor    eax,eax
  406964:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406969:	mov    eax,0x3
  40696e:	mov    rsi,rbx
  406971:	sarx   rdi,QWORD PTR [rsp+0x68],rax
  406978:	call   403c30 <coda_str64@plt>
  40697d:	mov    rsi,rbx
  406980:	lea    rdi,[rip+0x5e21]        # 40c7a8 <_IO_stdin_used@@Base+0x7a8>
  406987:	xor    eax,eax
  406989:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  40698e:	mov    rsi,QWORD PTR [rsp+0x68]
  406993:	and    esi,0x7
  406996:	jne    406e1b <export_data_element_to_ascii@@Base+0x11ab>
  40699c:	xor    eax,eax
  40699e:	lea    rdi,[rip+0x588a]        # 40c22f <_IO_stdin_used@@Base+0x22f>
  4069a5:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  4069aa:	mov    rax,QWORD PTR [rsp+0x3c8]
  4069b2:	xor    rax,QWORD PTR fs:0x28
  4069bb:	jne    406ef4 <export_data_element_to_ascii@@Base+0x1284>
  4069c1:	add    rsp,0x3d8
  4069c8:	pop    rbx
  4069c9:	pop    rbp
  4069ca:	mov    rdi,r12
  4069cd:	pop    r12
  4069cf:	pop    r13
  4069d1:	pop    r14
  4069d3:	pop    r15
  4069d5:	jmp    403680 <free@plt>
  4069da:	nop    WORD PTR [rax+rax*1+0x0]
  4069e0:	lea    rsi,[rsp+0x68]
  4069e5:	mov    rdi,rbx
  4069e8:	call   403770 <coda_cursor_read_uint32@plt>
  4069ed:	test   eax,eax
  4069ef:	jne    406e5e <export_data_element_to_ascii@@Base+0x11ee>
  4069f5:	mov    esi,DWORD PTR [rsp+0x68]
  4069f9:	lea    rdi,[rip+0x5840]        # 40c240 <_IO_stdin_used@@Base+0x240>
  406a00:	xor    eax,eax
  406a02:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406a07:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406a0c:	nop    DWORD PTR [rax+0x0]
  406a10:	mov    eax,DWORD PTR [rsp+0x60]
  406a14:	test   eax,eax
  406a16:	jne    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406a1c:	lea    rcx,[rip+0x58cd]        # 40c2f0 <_IO_stdin_used@@Base+0x2f0>
  406a23:	mov    edx,0x224
  406a28:	lea    rsi,[rip+0x5761]        # 40c190 <_IO_stdin_used@@Base+0x190>
  406a2f:	lea    rdi,[rip+0x5815]        # 40c24b <_IO_stdin_used@@Base+0x24b>
  406a36:	call   403860 <__assert_fail@plt>
  406a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a40:	xor    eax,eax
  406a42:	call   40bc80 <handle_coda_error@@Base>
  406a47:	jmp    40661d <export_data_element_to_ascii@@Base+0x9ad>
  406a4c:	nop    DWORD PTR [rax+0x0]
  406a50:	xor    eax,eax
  406a52:	call   40bc80 <handle_coda_error@@Base>
  406a57:	jmp    4066cf <export_data_element_to_ascii@@Base+0xa5f>
  406a5c:	nop    DWORD PTR [rax+0x0]
  406a60:	xor    eax,eax
  406a62:	call   40bc80 <handle_coda_error@@Base>
  406a67:	jmp    406650 <export_data_element_to_ascii@@Base+0x9e0>
  406a6c:	xor    eax,eax
  406a6e:	call   40bc80 <handle_coda_error@@Base>
  406a73:	jmp    406388 <export_data_element_to_ascii@@Base+0x718>
  406a78:	nop    DWORD PTR [rax+rax*1+0x0]
  406a80:	mov    rdi,rbx
  406a83:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  406a88:	test   eax,eax
  406a8a:	je     4065a8 <export_data_element_to_ascii@@Base+0x938>
  406a90:	xor    eax,eax
  406a92:	call   40bc80 <handle_coda_error@@Base>
  406a97:	jmp    4065a8 <export_data_element_to_ascii@@Base+0x938>
  406a9c:	nop    DWORD PTR [rax+0x0]
  406aa0:	mov    rsi,QWORD PTR [rsp+0x20]
  406aa5:	mov    rdi,rbx
  406aa8:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  406aad:	test   eax,eax
  406aaf:	jne    406ca8 <export_data_element_to_ascii@@Base+0x1038>
  406ab5:	mov    rax,QWORD PTR [rsp+0x68]
  406aba:	test   rax,rax
  406abd:	js     4064f6 <export_data_element_to_ascii@@Base+0x886>
  406ac3:	mov    rbp,QWORD PTR [rsp+0x28]
  406ac8:	sar    rax,0x3
  406acc:	mov    rdi,rax
  406acf:	mov    rsi,rbp
  406ad2:	call   403c30 <coda_str64@plt>
  406ad7:	mov    rsi,rbp
  406ada:	lea    rdi,[rip+0x5734]        # 40c215 <_IO_stdin_used@@Base+0x215>
  406ae1:	xor    eax,eax
  406ae3:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406ae8:	mov    rsi,QWORD PTR [rsp+0x68]
  406aed:	and    esi,0x7
  406af0:	je     4064f6 <export_data_element_to_ascii@@Base+0x886>
  406af6:	lea    rdi,[rip+0x571c]        # 40c219 <_IO_stdin_used@@Base+0x219>
  406afd:	xor    eax,eax
  406aff:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406b04:	jmp    4064f6 <export_data_element_to_ascii@@Base+0x886>
  406b09:	nop    DWORD PTR [rax+0x0]
  406b10:	xor    eax,eax
  406b12:	call   40bc80 <handle_coda_error@@Base>
  406b17:	jmp    406764 <export_data_element_to_ascii@@Base+0xaf4>
  406b1c:	nop    DWORD PTR [rax+0x0]
  406b20:	mov    rsi,QWORD PTR [rsp]
  406b24:	mov    rdi,rbx
  406b27:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  406b2c:	test   eax,eax
  406b2e:	jne    406ce2 <export_data_element_to_ascii@@Base+0x1072>
  406b34:	mov    rax,QWORD PTR [rsp+0x68]
  406b39:	test   rax,rax
  406b3c:	js     406781 <export_data_element_to_ascii@@Base+0xb11>
  406b42:	sar    rax,0x3
  406b46:	mov    rsi,QWORD PTR [rsp+0x8]
  406b4b:	mov    rdi,rax
  406b4e:	call   403c30 <coda_str64@plt>
  406b53:	mov    rsi,QWORD PTR [rsp+0x8]
  406b58:	lea    rdi,[rip+0x56b6]        # 40c215 <_IO_stdin_used@@Base+0x215>
  406b5f:	xor    eax,eax
  406b61:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406b66:	mov    rsi,QWORD PTR [rsp+0x68]
  406b6b:	and    esi,0x7
  406b6e:	je     406781 <export_data_element_to_ascii@@Base+0xb11>
  406b74:	lea    rdi,[rip+0x569e]        # 40c219 <_IO_stdin_used@@Base+0x219>
  406b7b:	xor    eax,eax
  406b7d:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406b82:	jmp    406781 <export_data_element_to_ascii@@Base+0xb11>
  406b87:	nop    WORD PTR [rax+rax*1+0x0]
  406b90:	mov    rdi,rbx
  406b93:	call   403b20 <coda_cursor_goto_next_record_field@plt>
  406b98:	test   eax,eax
  406b9a:	jne    406cd6 <export_data_element_to_ascii@@Base+0x1066>
  406ba0:	mov    rsi,QWORD PTR [rsp+0x58]
  406ba5:	mov    rax,QWORD PTR [rsp+0x48]
  406baa:	jmp    4067cc <export_data_element_to_ascii@@Base+0xb5c>
  406baf:	nop
  406bb0:	lea    rdi,[rip+0x5666]        # 40c21d <_IO_stdin_used@@Base+0x21d>
  406bb7:	xor    eax,eax
  406bb9:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406bbe:	jmp    40652b <export_data_element_to_ascii@@Base+0x8bb>
  406bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  406bc8:	lea    rsi,[rsp+0x68]
  406bcd:	mov    rdi,rbx
  406bd0:	call   4039a0 <coda_cursor_read_double@plt>
  406bd5:	test   eax,eax
  406bd7:	jne    406d96 <export_data_element_to_ascii@@Base+0x1126>
  406bdd:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406be3:	lea    rdi,[rip+0x5679]        # 40c263 <_IO_stdin_used@@Base+0x263>
  406bea:	mov    eax,0x1
  406bef:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406bf4:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	lea    rdi,[rip+0x5cee]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  406c07:	xor    eax,eax
  406c09:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406c0e:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406c13:	nop    DWORD PTR [rax+rax*1+0x0]
  406c18:	lea    rsi,[rsp+0x68]
  406c1d:	mov    rdi,rbx
  406c20:	call   4039a0 <coda_cursor_read_double@plt>
  406c25:	test   eax,eax
  406c27:	jne    406d8a <export_data_element_to_ascii@@Base+0x111a>
  406c2d:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406c33:	call   4039b0 <coda_isNaN@plt>
  406c38:	test   eax,eax
  406c3a:	jne    406c4f <export_data_element_to_ascii@@Base+0xfdf>
  406c3c:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406c42:	call   4037b0 <coda_isInf@plt>
  406c47:	test   eax,eax
  406c49:	je     406e6a <export_data_element_to_ascii@@Base+0x11fa>
  406c4f:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406c55:	lea    rdi,[rip+0x5606]        # 40c262 <_IO_stdin_used@@Base+0x262>
  406c5c:	mov    eax,0x1
  406c61:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406c66:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	lea    rdi,[rip+0x55a6]        # 40c21d <_IO_stdin_used@@Base+0x21d>
  406c77:	xor    eax,eax
  406c79:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406c7e:	jmp    4067af <export_data_element_to_ascii@@Base+0xb3f>
  406c83:	nop    DWORD PTR [rax+rax*1+0x0]
  406c88:	xor    eax,eax
  406c8a:	call   40bc80 <handle_coda_error@@Base>
  406c8f:	jmp    40615d <export_data_element_to_ascii@@Base+0x4ed>
  406c94:	nop    DWORD PTR [rax+0x0]
  406c98:	xor    eax,eax
  406c9a:	call   40bc80 <handle_coda_error@@Base>
  406c9f:	jmp    406146 <export_data_element_to_ascii@@Base+0x4d6>
  406ca4:	nop    DWORD PTR [rax+0x0]
  406ca8:	xor    eax,eax
  406caa:	call   40bc80 <handle_coda_error@@Base>
  406caf:	jmp    406ab5 <export_data_element_to_ascii@@Base+0xe45>
  406cb4:	mov    rdi,rbx
  406cb7:	call   403890 <coda_cursor_goto_first_array_element@plt>
  406cbc:	mov    r12d,0x1
  406cc2:	test   eax,eax
  406cc4:	je     40643b <export_data_element_to_ascii@@Base+0x7cb>
  406cca:	xor    eax,eax
  406ccc:	call   40bc80 <handle_coda_error@@Base>
  406cd1:	jmp    40643b <export_data_element_to_ascii@@Base+0x7cb>
  406cd6:	xor    eax,eax
  406cd8:	call   40bc80 <handle_coda_error@@Base>
  406cdd:	jmp    406ba0 <export_data_element_to_ascii@@Base+0xf30>
  406ce2:	xor    eax,eax
  406ce4:	call   40bc80 <handle_coda_error@@Base>
  406ce9:	jmp    406b34 <export_data_element_to_ascii@@Base+0xec4>
  406cee:	lea    rsi,[rsp+0x68]
  406cf3:	mov    rdi,rbx
  406cf6:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  406cfb:	test   eax,eax
  406cfd:	jne    406e9e <export_data_element_to_ascii@@Base+0x122e>
  406d03:	mov    rax,QWORD PTR [rsp+0x68]
  406d08:	test   rax,rax
  406d0b:	js     4061d4 <export_data_element_to_ascii@@Base+0x564>
  406d11:	sar    rax,0x3
  406d15:	lea    r12,[rsp+0x3a0]
  406d1d:	mov    rdi,rax
  406d20:	mov    rsi,r12
  406d23:	call   403c30 <coda_str64@plt>
  406d28:	mov    rsi,r12
  406d2b:	lea    rdi,[rip+0x54e3]        # 40c215 <_IO_stdin_used@@Base+0x215>
  406d32:	xor    eax,eax
  406d34:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406d39:	mov    rsi,QWORD PTR [rsp+0x68]
  406d3e:	and    esi,0x7
  406d41:	je     4061d4 <export_data_element_to_ascii@@Base+0x564>
  406d47:	lea    rdi,[rip+0x54cb]        # 40c219 <_IO_stdin_used@@Base+0x219>
  406d4e:	xor    eax,eax
  406d50:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406d55:	jmp    4061d4 <export_data_element_to_ascii@@Base+0x564>
  406d5a:	xor    eax,eax
  406d5c:	call   40bc80 <handle_coda_error@@Base>
  406d61:	jmp    4061b1 <export_data_element_to_ascii@@Base+0x541>
  406d66:	xor    eax,eax
  406d68:	call   40bc80 <handle_coda_error@@Base>
  406d6d:	jmp    40619c <export_data_element_to_ascii@@Base+0x52c>
  406d72:	xor    eax,eax
  406d74:	call   40bc80 <handle_coda_error@@Base>
  406d79:	jmp    406180 <export_data_element_to_ascii@@Base+0x510>
  406d7e:	xor    eax,eax
  406d80:	call   40bc80 <handle_coda_error@@Base>
  406d85:	jmp    406708 <export_data_element_to_ascii@@Base+0xa98>
  406d8a:	xor    eax,eax
  406d8c:	call   40bc80 <handle_coda_error@@Base>
  406d91:	jmp    406c2d <export_data_element_to_ascii@@Base+0xfbd>
  406d96:	xor    eax,eax
  406d98:	call   40bc80 <handle_coda_error@@Base>
  406d9d:	jmp    406bdd <export_data_element_to_ascii@@Base+0xf6d>
  406da2:	mov    rdx,rbp
  406da5:	mov    r8d,0x19a
  406dab:	lea    rcx,[rip+0x53de]        # 40c190 <_IO_stdin_used@@Base+0x190>
  406db2:	lea    rsi,[rip+0x530f]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  406db9:	mov    edi,0xffffffff
  406dbe:	xor    eax,eax
  406dc0:	call   4036f0 <coda_set_error@plt>
  406dc5:	xor    eax,eax
  406dc7:	call   40bc80 <handle_coda_error@@Base>
  406dcc:	mov    rax,QWORD PTR [rsp+0x68]
  406dd1:	lea    rbp,[rax+0x1]
  406dd5:	jmp    40663a <export_data_element_to_ascii@@Base+0x9ca>
  406dda:	lea    rdi,[rip+0x543c]        # 40c21d <_IO_stdin_used@@Base+0x21d>
  406de1:	xor    eax,eax
  406de3:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406de8:	jmp    406208 <export_data_element_to_ascii@@Base+0x598>
  406ded:	lea    rdi,[rip+0x5451]        # 40c245 <_IO_stdin_used@@Base+0x245>
  406df4:	mov    eax,0x1
  406df9:	call   405d20 <export_data_element_to_ascii@@Base+0xb0>
  406dfe:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406e03:	xor    eax,eax
  406e05:	call   40bc80 <handle_coda_error@@Base>
  406e0a:	jmp    406885 <export_data_element_to_ascii@@Base+0xc15>
  406e0f:	xor    eax,eax
  406e11:	call   40bc80 <handle_coda_error@@Base>
  406e16:	jmp    4067fd <export_data_element_to_ascii@@Base+0xb8d>
  406e1b:	lea    rdi,[rip+0x53f7]        # 40c219 <_IO_stdin_used@@Base+0x219>
  406e22:	xor    eax,eax
  406e24:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406e29:	jmp    40699c <export_data_element_to_ascii@@Base+0xd2c>
  406e2e:	xor    eax,eax
  406e30:	call   40bc80 <handle_coda_error@@Base>
  406e35:	jmp    40693a <export_data_element_to_ascii@@Base+0xcca>
  406e3a:	xor    eax,eax
  406e3c:	call   40bc80 <handle_coda_error@@Base>
  406e41:	jmp    4068f5 <export_data_element_to_ascii@@Base+0xc85>
  406e46:	xor    eax,eax
  406e48:	call   40bc80 <handle_coda_error@@Base>
  406e4d:	jmp    4068b5 <export_data_element_to_ascii@@Base+0xc45>
  406e52:	xor    eax,eax
  406e54:	call   40bc80 <handle_coda_error@@Base>
  406e59:	jmp    40683d <export_data_element_to_ascii@@Base+0xbcd>
  406e5e:	xor    eax,eax
  406e60:	call   40bc80 <handle_coda_error@@Base>
  406e65:	jmp    4069f5 <export_data_element_to_ascii@@Base+0xd85>
  406e6a:	lea    rbx,[rsp+0x3a0]
  406e72:	vmovsd xmm0,QWORD PTR [rsp+0x68]
  406e78:	mov    rsi,rbx
  406e7b:	lea    rdi,[rip+0x51ba]        # 40c03c <_IO_stdin_used@@Base+0x3c>
  406e82:	call   403710 <coda_time_double_to_string@plt>
  406e87:	test   eax,eax
  406e89:	je     406ede <export_data_element_to_ascii@@Base+0x126e>
  406e8b:	lea    rdi,[rip+0x53d8]        # 40c26a <_IO_stdin_used@@Base+0x26a>
  406e92:	xor    eax,eax
  406e94:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406e99:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406e9e:	xor    eax,eax
  406ea0:	call   40bc80 <handle_coda_error@@Base>
  406ea5:	jmp    406d03 <export_data_element_to_ascii@@Base+0x1093>
  406eaa:	mov    r8d,0x1bf
  406eb0:	lea    rcx,[rip+0x52d9]        # 40c190 <_IO_stdin_used@@Base+0x190>
  406eb7:	mov    rdx,rbp
  406eba:	lea    rsi,[rip+0x5207]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  406ec1:	mov    edi,0xffffffff
  406ec6:	xor    eax,eax
  406ec8:	call   4036f0 <coda_set_error@plt>
  406ecd:	xor    eax,eax
  406ecf:	call   40bc80 <handle_coda_error@@Base>
  406ed4:	mov    r13,QWORD PTR [rsp+0x68]
  406ed9:	jmp    406922 <export_data_element_to_ascii@@Base+0xcb2>
  406ede:	mov    rsi,rbx
  406ee1:	lea    rdi,[rip+0x5c93]        # 40cb7b <_IO_stdin_used@@Base+0xb7b>
  406ee8:	xor    eax,eax
  406eea:	call   405e60 <export_data_element_to_ascii@@Base+0x1f0>
  406eef:	jmp    406220 <export_data_element_to_ascii@@Base+0x5b0>
  406ef4:	call   403850 <__stack_chk_fail@plt>
  406ef9:	nop    DWORD PTR [rax+0x0]

0000000000406f00 <print_debug_data@@Base>:
  406f00:	endbr64 
  406f04:	push   r14
  406f06:	mov    r14d,edx
  406f09:	push   r13
  406f0b:	mov    r13,rsi
  406f0e:	push   r12
  406f10:	push   rbp
  406f11:	push   rbx
  406f12:	mov    rbx,rdi
  406f15:	sub    rsp,0x330
  406f1c:	mov    rbp,0x410380
  406f23:	mov    rax,QWORD PTR fs:0x28
  406f2c:	mov    QWORD PTR [rsp+0x328],rax
  406f34:	xor    eax,eax
  406f36:	mov    rdi,QWORD PTR [rbp+0x0]
  406f3a:	lea    r12,[rsp+0x8]
  406f3f:	test   rbx,rbx
  406f42:	je     407040 <print_debug_data@@Base+0x140>
  406f48:	mov    ecx,edx
  406f4a:	mov    r8,r12
  406f4d:	mov    rdx,rsi
  406f50:	mov    rsi,rbx
  406f53:	call   4039d0 <coda_open_as@plt>
  406f58:	test   eax,eax
  406f5a:	jne    407020 <print_debug_data@@Base+0x120>
  406f60:	mov    rdi,QWORD PTR [rsp+0x8]
  406f65:	lea    rsi,[rsp+0x4]
  406f6a:	call   403820 <coda_get_product_format@plt>
  406f6f:	test   eax,eax
  406f71:	jne    407010 <print_debug_data@@Base+0x110>
  406f77:	xor    eax,eax
  406f79:	lea    rbx,[rsp+0x10]
  406f7e:	cmp    DWORD PTR [rsp+0x4],0x2
  406f83:	mov    rsi,QWORD PTR [rsp+0x8]
  406f88:	setbe  al
  406f8b:	mov    rdi,rbx
  406f8e:	mov    DWORD PTR [rip+0x93a0],eax        # 410334 <__data_start@@Base+0x14>
  406f94:	call   4038b0 <coda_cursor_set_product@plt>
  406f99:	test   eax,eax
  406f9b:	jne    407000 <print_debug_data@@Base+0x100>
  406f9d:	mov    rax,0x4114e0
  406fa4:	mov    rsi,QWORD PTR [rax]
  406fa7:	test   rsi,rsi
  406faa:	je     406fbc <print_debug_data@@Base+0xbc>
  406fac:	mov    rdi,rbx
  406faf:	call   403af0 <coda_cursor_goto@plt>
  406fb4:	test   eax,eax
  406fb6:	jne    407050 <print_debug_data@@Base+0x150>
  406fbc:	xor    edi,edi
  406fbe:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  406fc3:	xor    esi,esi
  406fc5:	mov    rdi,rbx
  406fc8:	call   406090 <export_data_element_to_ascii@@Base+0x420>
  406fcd:	mov    rdi,QWORD PTR [rsp+0x8]
  406fd2:	call   403ad0 <coda_close@plt>
  406fd7:	mov    rax,QWORD PTR [rsp+0x328]
  406fdf:	xor    rax,QWORD PTR fs:0x28
  406fe8:	jne    4070b0 <print_debug_data@@Base+0x1b0>
  406fee:	add    rsp,0x330
  406ff5:	pop    rbx
  406ff6:	pop    rbp
  406ff7:	pop    r12
  406ff9:	pop    r13
  406ffb:	pop    r14
  406ffd:	ret    
  406ffe:	xchg   ax,ax
  407000:	xor    eax,eax
  407002:	call   40bc80 <handle_coda_error@@Base>
  407007:	jmp    406f9d <print_debug_data@@Base+0x9d>
  407009:	nop    DWORD PTR [rax+0x0]
  407010:	xor    eax,eax
  407012:	call   40bc80 <handle_coda_error@@Base>
  407017:	jmp    406f77 <print_debug_data@@Base+0x77>
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	call   403bf0 <coda_get_errno@plt>
  407025:	cmp    DWORD PTR [rax],0xffffffeb
  407028:	je     407060 <print_debug_data@@Base+0x160>
  40702a:	xor    eax,eax
  40702c:	call   40bc80 <handle_coda_error@@Base>
  407031:	jmp    406f60 <print_debug_data@@Base+0x60>
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	mov    rsi,r12
  407043:	call   403700 <coda_open@plt>
  407048:	jmp    406f58 <print_debug_data@@Base+0x58>
  40704d:	nop    DWORD PTR [rax]
  407050:	xor    eax,eax
  407052:	call   40bc80 <handle_coda_error@@Base>
  407057:	jmp    406fbc <print_debug_data@@Base+0xbc>
  40705c:	nop    DWORD PTR [rax+0x0]
  407060:	xor    edi,edi
  407062:	call   403750 <coda_set_option_use_mmap@plt>
  407067:	test   rbx,rbx
  40706a:	je     4070a0 <print_debug_data@@Base+0x1a0>
  40706c:	mov    rdi,QWORD PTR [rbp+0x0]
  407070:	mov    rsi,rbx
  407073:	mov    r8,r12
  407076:	mov    ecx,r14d
  407079:	mov    rdx,r13
  40707c:	call   4039d0 <coda_open_as@plt>
  407081:	mov    ebx,eax
  407083:	mov    edi,0x1
  407088:	call   403750 <coda_set_option_use_mmap@plt>
  40708d:	test   ebx,ebx
  40708f:	jne    40702a <print_debug_data@@Base+0x12a>
  407091:	jmp    406f60 <print_debug_data@@Base+0x60>
  407096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070a0:	mov    rdi,QWORD PTR [rbp+0x0]
  4070a4:	mov    rsi,r12
  4070a7:	call   403700 <coda_open@plt>
  4070ac:	mov    ebx,eax
  4070ae:	jmp    407083 <print_debug_data@@Base+0x183>
  4070b0:	call   403850 <__stack_chk_fail@plt>
  4070b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070bf:	nop
  4070c0:	push   r15
  4070c2:	push   r14
  4070c4:	push   r13
  4070c6:	mov    r13d,edx
  4070c9:	push   r12
  4070cb:	mov    r12d,edi
  4070ce:	push   rbp
  4070cf:	mov    ebp,esi
  4070d1:	push   rbx
  4070d2:	sub    rsp,0x28
  4070d6:	mov    rbx,0x410380
  4070dd:	lea    rsi,[rsp+0x10]
  4070e2:	lea    rdi,[rbx+0x118]
  4070e9:	mov    rax,QWORD PTR fs:0x28
  4070f2:	mov    QWORD PTR [rsp+0x18],rax
  4070f7:	xor    eax,eax
  4070f9:	call   403800 <coda_cursor_get_type_class@plt>
  4070fe:	test   eax,eax
  407100:	jne    4072b0 <print_debug_data@@Base+0x3b0>
  407106:	mov    eax,DWORD PTR [rsp+0x10]
  40710a:	test   eax,eax
  40710c:	je     407210 <print_debug_data@@Base+0x310>
  407112:	cmp    eax,0x1
  407115:	jne    40739c <print_debug_data@@Base+0x49c>
  40711b:	movsxd rdx,ebp
  40711e:	lea    rax,[rdx+rdx*4]
  407122:	shl    rax,0x4
  407126:	movsxd rax,DWORD PTR [rax+rbx*1+0x534]
  40712e:	cmp    DWORD PTR [rbx+0xf34],ebp
  407134:	jle    4073c0 <print_debug_data@@Base+0x4c0>
  40713a:	test   ebp,ebp
  40713c:	jne    407148 <print_debug_data@@Base+0x248>
  40713e:	mov    DWORD PTR [rbx+0x560],0x0
  407148:	lea    rdi,[rdx+rdx*4]
  40714c:	shl    rdi,0x4
  407150:	add    rdi,rbx
  407153:	mov    edx,DWORD PTR [rdi+0x560]
  407159:	lea    ecx,[rbp+0x1]
  40715c:	movsxd r14,ecx
  40715f:	imul   edx,DWORD PTR [rdi+0x55c]
  407166:	mov    r8d,DWORD PTR [rdi+0x538]
  40716d:	mov    DWORD PTR [rsp+0x8],ecx
  407171:	lea    rcx,[r14+r14*4]
  407175:	shl    rcx,0x4
  407179:	add    r8d,eax
  40717c:	mov    DWORD PTR [rcx+rbx*1+0x560],edx
  407183:	mov    ebp,0x1
  407188:	cmp    r8d,eax
  40718b:	jle    4072c0 <print_debug_data@@Base+0x3c0>
  407191:	mov    rsi,0x411500
  407198:	jmp    4071b9 <print_debug_data@@Base+0x2b9>
  40719a:	nop    WORD PTR [rax+rax*1+0x0]
  4071a0:	mov    rdx,QWORD PTR [rsi+rax*8+0x70]
  4071a5:	movsxd r9,DWORD PTR [rdi+0x560]
  4071ac:	inc    rax
  4071af:	imul   ebp,DWORD PTR [rdx+r9*4]
  4071b4:	cmp    r8d,eax
  4071b7:	jle    4071d6 <print_debug_data@@Base+0x2d6>
  4071b9:	lea    rdx,[rax*4+0x0]
  4071c1:	mov    ecx,DWORD PTR [rdx+rsi*1+0x48]
  4071c5:	test   ecx,ecx
  4071c7:	jne    4071a0 <print_debug_data@@Base+0x2a0>
  4071c9:	inc    rax
  4071cc:	imul   ebp,DWORD PTR [rdx+rsi*1+0x4]
  4071d1:	cmp    r8d,eax
  4071d4:	jg     4071b9 <print_debug_data@@Base+0x2b9>
  4071d6:	xor    r15d,r15d
  4071d9:	test   ebp,ebp
  4071db:	jg     4072c0 <print_debug_data@@Base+0x3c0>
  4071e1:	mov    rcx,QWORD PTR [rsp+0x18]
  4071e6:	xor    rcx,QWORD PTR fs:0x28
  4071ef:	mov    eax,r15d
  4071f2:	jne    4073bb <print_debug_data@@Base+0x4bb>
  4071f8:	add    rsp,0x28
  4071fc:	pop    rbx
  4071fd:	pop    rbp
  4071fe:	pop    r12
  407200:	pop    r13
  407202:	pop    r14
  407204:	pop    r15
  407206:	ret    
  407207:	nop    WORD PTR [rax+rax*1+0x0]
  407210:	movsxd r14,r13d
  407213:	movsxd rsi,DWORD PTR [rbx+r14*4+0xfb8]
  40721b:	lea    rdx,[rsp+0x14]
  407220:	lea    rdi,[rbx+0x118]
  407227:	call   4036e0 <coda_cursor_get_record_field_available_status@plt>
  40722c:	test   eax,eax
  40722e:	jne    407350 <print_debug_data@@Base+0x450>
  407234:	mov    edx,DWORD PTR [rsp+0x14]
  407238:	test   edx,edx
  40723a:	je     4072a0 <print_debug_data@@Base+0x3a0>
  40723c:	mov    eax,DWORD PTR [rbx+0x1138]
  407242:	dec    eax
  407244:	cmp    eax,r13d
  407247:	je     40728d <print_debug_data@@Base+0x38d>
  407249:	movsxd rsi,DWORD PTR [rbx+r14*4+0xfb8]
  407251:	lea    rdi,[rbx+0x118]
  407258:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  40725d:	test   eax,eax
  40725f:	jne    407390 <print_debug_data@@Base+0x490>
  407265:	lea    edx,[r13+0x1]
  407269:	lea    edi,[r12+0x1]
  40726e:	mov    esi,ebp
  407270:	call   4070c0 <print_debug_data@@Base+0x1c0>
  407275:	lea    rdi,[rbx+0x118]
  40727c:	mov    DWORD PTR [rsp+0x14],eax
  407280:	call   403930 <coda_cursor_goto_parent@plt>
  407285:	mov    eax,DWORD PTR [rsp+0x14]
  407289:	test   eax,eax
  40728b:	je     4072a0 <print_debug_data@@Base+0x3a0>
  40728d:	mov    r15d,0x1
  407293:	jmp    4071e1 <print_debug_data@@Base+0x2e1>
  407298:	nop    DWORD PTR [rax+rax*1+0x0]
  4072a0:	xor    r15d,r15d
  4072a3:	jmp    4071e1 <print_debug_data@@Base+0x2e1>
  4072a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	xor    eax,eax
  4072b2:	call   40bc80 <handle_coda_error@@Base>
  4072b7:	jmp    407106 <print_debug_data@@Base+0x206>
  4072bc:	nop    DWORD PTR [rax+0x0]
  4072c0:	lea    rdi,[rbx+0x118]
  4072c7:	call   403890 <coda_cursor_goto_first_array_element@plt>
  4072cc:	test   eax,eax
  4072ce:	jne    407340 <print_debug_data@@Base+0x440>
  4072d0:	lea    eax,[r12+0x1]
  4072d5:	lea    r14,[r14+r14*4]
  4072d9:	mov    DWORD PTR [rsp+0xc],eax
  4072dd:	shl    r14,0x4
  4072e1:	xor    r12d,r12d
  4072e4:	add    r14,rbx
  4072e7:	mov    esi,DWORD PTR [rsp+0x8]
  4072eb:	mov    edi,DWORD PTR [rsp+0xc]
  4072ef:	mov    edx,r13d
  4072f2:	call   4070c0 <print_debug_data@@Base+0x1c0>
  4072f7:	mov    r15d,eax
  4072fa:	test   eax,eax
  4072fc:	jne    407370 <print_debug_data@@Base+0x470>
  4072fe:	lea    eax,[rbp-0x1]
  407301:	cmp    eax,r12d
  407304:	jg     407320 <print_debug_data@@Base+0x420>
  407306:	inc    r12d
  407309:	cmp    ebp,r12d
  40730c:	jg     4072e7 <print_debug_data@@Base+0x3e7>
  40730e:	lea    rdi,[rbx+0x118]
  407315:	call   403930 <coda_cursor_goto_parent@plt>
  40731a:	jmp    4071e1 <print_debug_data@@Base+0x2e1>
  40731f:	nop
  407320:	lea    rdi,[rbx+0x118]
  407327:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  40732c:	test   eax,eax
  40732e:	jne    407360 <print_debug_data@@Base+0x460>
  407330:	inc    DWORD PTR [r14+0x560]
  407337:	jmp    407306 <print_debug_data@@Base+0x406>
  407339:	nop    DWORD PTR [rax+0x0]
  407340:	xor    eax,eax
  407342:	call   40bc80 <handle_coda_error@@Base>
  407347:	jmp    4072d0 <print_debug_data@@Base+0x3d0>
  407349:	nop    DWORD PTR [rax+0x0]
  407350:	xor    eax,eax
  407352:	call   40bc80 <handle_coda_error@@Base>
  407357:	jmp    407234 <print_debug_data@@Base+0x334>
  40735c:	nop    DWORD PTR [rax+0x0]
  407360:	xor    eax,eax
  407362:	call   40bc80 <handle_coda_error@@Base>
  407367:	jmp    407330 <print_debug_data@@Base+0x430>
  407369:	nop    DWORD PTR [rax+0x0]
  407370:	lea    rdi,[rbx+0x118]
  407377:	call   403930 <coda_cursor_goto_parent@plt>
  40737c:	mov    r15d,0x1
  407382:	jmp    4071e1 <print_debug_data@@Base+0x2e1>
  407387:	nop    WORD PTR [rax+rax*1+0x0]
  407390:	xor    eax,eax
  407392:	call   40bc80 <handle_coda_error@@Base>
  407397:	jmp    407265 <print_debug_data@@Base+0x365>
  40739c:	lea    rcx,[rip+0x50dd]        # 40c480 <_IO_stdin_used@@Base+0x480>
  4073a3:	mov    edx,0x2d9
  4073a8:	lea    rsi,[rip+0x4f51]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4073af:	lea    rdi,[rip+0x4e49]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  4073b6:	call   403860 <__assert_fail@plt>
  4073bb:	call   403850 <__stack_chk_fail@plt>
  4073c0:	lea    rcx,[rip+0x50b9]        # 40c480 <_IO_stdin_used@@Base+0x480>
  4073c7:	mov    edx,0x27e
  4073cc:	lea    rsi,[rip+0x4f2d]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4073d3:	lea    rdi,[rip+0x4f8e]        # 40c368 <_IO_stdin_used@@Base+0x368>
  4073da:	call   403860 <__assert_fail@plt>
  4073df:	nop
  4073e0:	push   r15
  4073e2:	push   r14
  4073e4:	mov    r14d,edi
  4073e7:	push   r13
  4073e9:	mov    r13d,edx
  4073ec:	push   r12
  4073ee:	movsxd r12,esi
  4073f1:	push   rbp
  4073f2:	push   rbx
  4073f3:	sub    rsp,0x88
  4073fa:	mov    rbp,0x410380
  407401:	lea    rsi,[rsp+0x1c]
  407406:	lea    rdi,[rbp+0x118]
  40740d:	mov    rax,QWORD PTR fs:0x28
  407416:	mov    QWORD PTR [rsp+0x78],rax
  40741b:	xor    eax,eax
  40741d:	call   403800 <coda_cursor_get_type_class@plt>
  407422:	test   eax,eax
  407424:	jne    4076f0 <print_debug_data@@Base+0x7f0>
  40742a:	mov    eax,DWORD PTR [rsp+0x1c]
  40742e:	cmp    eax,0x1
  407431:	je     4075c8 <print_debug_data@@Base+0x6c8>
  407437:	test   eax,eax
  407439:	je     407500 <print_debug_data@@Base+0x600>
  40743f:	lea    edx,[rax-0x4]
  407442:	cmp    edx,0x1
  407445:	ja     407923 <print_debug_data@@Base+0xa23>
  40744b:	cmp    DWORD PTR [rbp+0xf34],r12d
  407452:	jne    4078c0 <print_debug_data@@Base+0x9c0>
  407458:	cmp    eax,0x4
  40745b:	je     407760 <print_debug_data@@Base+0x860>
  407461:	lea    rsi,[rsp+0x20]
  407466:	lea    rdi,[rbp+0x118]
  40746d:	call   403640 <coda_cursor_get_byte_size@plt>
  407472:	test   eax,eax
  407474:	jne    407720 <print_debug_data@@Base+0x820>
  40747a:	mov    rcx,QWORD PTR [rsp+0x20]
  40747f:	lea    rax,[r12+r12*4]
  407483:	shl    rax,0x4
  407487:	add    rbp,rax
  40748a:	movsxd rax,DWORD PTR [rbp+0x534]
  407491:	mov    rdx,0x411500
  407498:	movsxd rdi,DWORD PTR [rbp+0x560]
  40749f:	mov    rsi,QWORD PTR [rdx+rax*8+0x70]
  4074a4:	mov    r8d,ecx
  4074a7:	mov    DWORD PTR [rsi+rdi*4],ecx
  4074aa:	movsxd rsi,DWORD PTR [rdx+rax*4+0x4]
  4074af:	cmp    esi,0xffffffff
  4074b2:	je     407750 <print_debug_data@@Base+0x850>
  4074b8:	cmp    rsi,rcx
  4074bb:	jge    4074c1 <print_debug_data@@Base+0x5c1>
  4074bd:	mov    DWORD PTR [rdx+rax*4+0x4],ecx
  4074c1:	add    rax,0x8
  4074c5:	movsxd rsi,DWORD PTR [rdx+rax*4+0x4]
  4074ca:	cmp    rsi,rcx
  4074cd:	jg     407710 <print_debug_data@@Base+0x810>
  4074d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4074d8:	mov    rax,QWORD PTR [rsp+0x78]
  4074dd:	xor    rax,QWORD PTR fs:0x28
  4074e6:	jne    407942 <print_debug_data@@Base+0xa42>
  4074ec:	add    rsp,0x88
  4074f3:	pop    rbx
  4074f4:	pop    rbp
  4074f5:	pop    r12
  4074f7:	pop    r13
  4074f9:	pop    r14
  4074fb:	pop    r15
  4074fd:	ret    
  4074fe:	xchg   ax,ax
  407500:	movsxd rbx,r13d
  407503:	movsxd rsi,DWORD PTR [rbp+rbx*4+0xfb8]
  40750b:	lea    rdx,[rsp+0x28]
  407510:	lea    rdi,[rbp+0x118]
  407517:	call   4036e0 <coda_cursor_get_record_field_available_status@plt>
  40751c:	test   eax,eax
  40751e:	jne    4077d0 <print_debug_data@@Base+0x8d0>
  407524:	mov    ecx,DWORD PTR [rsp+0x28]
  407528:	test   ecx,ecx
  40752a:	jne    407790 <print_debug_data@@Base+0x890>
  407530:	movsxd rax,DWORD PTR [rbp+0xf34]
  407537:	lea    rax,[rax+rax*4]
  40753b:	shl    rax,0x4
  40753f:	add    rbp,rax
  407542:	mov    edx,DWORD PTR [rbp+0x538]
  407548:	mov    r9d,DWORD PTR [rbp+0x534]
  40754f:	xor    eax,eax
  407551:	mov    rsi,rbp
  407554:	test   edx,edx
  407556:	jle    4074d8 <print_debug_data@@Base+0x5d8>
  40755c:	cmp    DWORD PTR [rbp+rax*4+0x53c],0xffffffff
  407564:	je     407589 <print_debug_data@@Base+0x689>
  407566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407570:	inc    rax
  407573:	cmp    DWORD PTR [rsi+0x538],eax
  407579:	jle    4074d8 <print_debug_data@@Base+0x5d8>
  40757f:	cmp    DWORD PTR [rbp+rax*4+0x53c],0xffffffff
  407587:	jne    407570 <print_debug_data@@Base+0x670>
  407589:	mov    rdx,0x411500
  407590:	lea    ecx,[r9+rax*1]
  407594:	movsxd rcx,ecx
  407597:	movsxd r8,DWORD PTR [rsi+0x560]
  40759e:	mov    rdi,QWORD PTR [rdx+rcx*8+0x70]
  4075a3:	mov    DWORD PTR [rdi+r8*4],0x0
  4075ab:	cmp    DWORD PTR [rdx+rcx*4+0x4],0xffffffff
  4075b0:	jne    4075ba <print_debug_data@@Base+0x6ba>
  4075b2:	mov    DWORD PTR [rdx+rcx*4+0x4],0x0
  4075ba:	mov    DWORD PTR [rdx+rcx*4+0x24],0x0
  4075c2:	jmp    407570 <print_debug_data@@Base+0x670>
  4075c4:	nop    DWORD PTR [rax+0x0]
  4075c8:	movsxd r15,r12d
  4075cb:	lea    rax,[r15+r15*4]
  4075cf:	shl    rax,0x4
  4075d3:	mov    ebx,DWORD PTR [rbp+rax*1+0x534]
  4075da:	cmp    DWORD PTR [rbp+0xf34],r12d
  4075e1:	je     4077e0 <print_debug_data@@Base+0x8e0>
  4075e7:	test   r12d,r12d
  4075ea:	je     407700 <print_debug_data@@Base+0x800>
  4075f0:	lea    rsi,[r15+r15*4]
  4075f4:	shl    rsi,0x4
  4075f8:	add    rsi,rbp
  4075fb:	mov    edx,DWORD PTR [rsi+0x560]
  407601:	inc    r12d
  407604:	movsxd r9,r12d
  407607:	imul   edx,DWORD PTR [rsi+0x55c]
  40760e:	mov    edi,DWORD PTR [rsi+0x538]
  407614:	lea    rax,[r9+r9*4]
  407618:	shl    rax,0x4
  40761c:	add    edi,ebx
  40761e:	mov    DWORD PTR [rbp+rax*1+0x560],edx
  407625:	cmp    ebx,edi
  407627:	jge    407910 <print_debug_data@@Base+0xa10>
  40762d:	movsxd rax,ebx
  407630:	mov    r15d,0x1
  407636:	mov    rdx,0x411500
  40763d:	jmp    407658 <print_debug_data@@Base+0x758>
  40763f:	nop
  407640:	mov    rcx,QWORD PTR [rdx+rax*8+0x70]
  407645:	movsxd r10,DWORD PTR [rsi+0x560]
  40764c:	inc    rax
  40764f:	imul   r15d,DWORD PTR [rcx+r10*4]
  407654:	cmp    edi,eax
  407656:	jle    407677 <print_debug_data@@Base+0x777>
  407658:	lea    rcx,[rax*4+0x0]
  407660:	mov    r8d,DWORD PTR [rdx+rcx*1+0x48]
  407665:	test   r8d,r8d
  407668:	jne    407640 <print_debug_data@@Base+0x740>
  40766a:	inc    rax
  40766d:	imul   r15d,DWORD PTR [rdx+rcx*1+0x4]
  407673:	cmp    edi,eax
  407675:	jg     407658 <print_debug_data@@Base+0x758>
  407677:	test   r15d,r15d
  40767a:	jle    4074d8 <print_debug_data@@Base+0x5d8>
  407680:	lea    eax,[r15-0x1]
  407684:	mov    DWORD PTR [rsp+0xc],eax
  407688:	lea    rdi,[rbp+0x118]
  40768f:	mov    QWORD PTR [rsp],r9
  407693:	call   403890 <coda_cursor_goto_first_array_element@plt>
  407698:	test   eax,eax
  40769a:	mov    r9,QWORD PTR [rsp]
  40769e:	jne    4078f0 <print_debug_data@@Base+0x9f0>
  4076a4:	lea    eax,[r14+0x1]
  4076a8:	lea    rbx,[r9+r9*4]
  4076ac:	mov    DWORD PTR [rsp],eax
  4076af:	shl    rbx,0x4
  4076b3:	xor    r14d,r14d
  4076b6:	add    rbx,rbp
  4076b9:	mov    edi,DWORD PTR [rsp]
  4076bc:	mov    edx,r13d
  4076bf:	mov    esi,r12d
  4076c2:	call   4073e0 <print_debug_data@@Base+0x4e0>
  4076c7:	cmp    r14d,DWORD PTR [rsp+0xc]
  4076cc:	jl     407730 <print_debug_data@@Base+0x830>
  4076ce:	inc    r14d
  4076d1:	cmp    r15d,r14d
  4076d4:	jg     4076b9 <print_debug_data@@Base+0x7b9>
  4076d6:	lea    rdi,[rbp+0x118]
  4076dd:	call   403930 <coda_cursor_goto_parent@plt>
  4076e2:	jmp    4074d8 <print_debug_data@@Base+0x5d8>
  4076e7:	nop    WORD PTR [rax+rax*1+0x0]
  4076f0:	xor    eax,eax
  4076f2:	call   40bc80 <handle_coda_error@@Base>
  4076f7:	jmp    40742a <print_debug_data@@Base+0x52a>
  4076fc:	nop    DWORD PTR [rax+0x0]
  407700:	mov    DWORD PTR [rbp+0x560],0x0
  40770a:	jmp    4075f0 <print_debug_data@@Base+0x6f0>
  40770f:	nop
  407710:	mov    DWORD PTR [rdx+rax*4+0x4],r8d
  407715:	jmp    4074d8 <print_debug_data@@Base+0x5d8>
  40771a:	nop    WORD PTR [rax+rax*1+0x0]
  407720:	xor    eax,eax
  407722:	call   40bc80 <handle_coda_error@@Base>
  407727:	jmp    40747a <print_debug_data@@Base+0x57a>
  40772c:	nop    DWORD PTR [rax+0x0]
  407730:	lea    rdi,[rbp+0x118]
  407737:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  40773c:	test   eax,eax
  40773e:	jne    4078a8 <print_debug_data@@Base+0x9a8>
  407744:	inc    DWORD PTR [rbx+0x560]
  40774a:	jmp    4076ce <print_debug_data@@Base+0x7ce>
  40774c:	nop    DWORD PTR [rax+0x0]
  407750:	mov    DWORD PTR [rdx+rax*4+0x4],ecx
  407754:	mov    DWORD PTR [rdx+rax*4+0x24],ecx
  407758:	jmp    4074d8 <print_debug_data@@Base+0x5d8>
  40775d:	nop    DWORD PTR [rax]
  407760:	lea    rsi,[rsp+0x28]
  407765:	lea    rdi,[rbp+0x118]
  40776c:	call   403980 <coda_cursor_get_string_length@plt>
  407771:	test   eax,eax
  407773:	jne    4078e0 <print_debug_data@@Base+0x9e0>
  407779:	mov    rcx,QWORD PTR [rsp+0x28]
  40777e:	mov    QWORD PTR [rsp+0x20],rcx
  407783:	jmp    40747f <print_debug_data@@Base+0x57f>
  407788:	nop    DWORD PTR [rax+rax*1+0x0]
  407790:	movsxd rsi,DWORD PTR [rbp+rbx*4+0xfb8]
  407798:	lea    rdi,[rbp+0x118]
  40779f:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  4077a4:	test   eax,eax
  4077a6:	jne    407900 <print_debug_data@@Base+0xa00>
  4077ac:	lea    edi,[r14+0x1]
  4077b0:	lea    edx,[r13+0x1]
  4077b4:	mov    esi,r12d
  4077b7:	call   4073e0 <print_debug_data@@Base+0x4e0>
  4077bc:	lea    rdi,[rbp+0x118]
  4077c3:	call   403930 <coda_cursor_goto_parent@plt>
  4077c8:	jmp    4074d8 <print_debug_data@@Base+0x5d8>
  4077cd:	nop    DWORD PTR [rax]
  4077d0:	xor    eax,eax
  4077d2:	call   40bc80 <handle_coda_error@@Base>
  4077d7:	jmp    407524 <print_debug_data@@Base+0x624>
  4077dc:	nop    DWORD PTR [rax+0x0]
  4077e0:	lea    r12,[rsp+0x30]
  4077e5:	lea    rsi,[rsp+0x28]
  4077ea:	mov    rdx,r12
  4077ed:	lea    rdi,[rbp+0x118]
  4077f4:	call   403ab0 <coda_cursor_get_array_dim@plt>
  4077f9:	test   eax,eax
  4077fb:	jne    4078b4 <print_debug_data@@Base+0x9b4>
  407801:	lea    rax,[r15+r15*4]
  407805:	shl    rax,0x4
  407809:	add    rbp,rax
  40780c:	mov    edx,DWORD PTR [rbp+0x538]
  407812:	cmp    edx,DWORD PTR [rsp+0x28]
  407816:	jne    407947 <print_debug_data@@Base+0xa47>
  40781c:	xor    eax,eax
  40781e:	mov    rdi,rbp
  407821:	test   edx,edx
  407823:	jg     40783f <print_debug_data@@Base+0x93f>
  407825:	jmp    4074d8 <print_debug_data@@Base+0x5d8>
  40782a:	nop    WORD PTR [rax+rax*1+0x0]
  407830:	inc    rax
  407833:	cmp    DWORD PTR [rdi+0x538],eax
  407839:	jle    4074d8 <print_debug_data@@Base+0x5d8>
  40783f:	cmp    DWORD PTR [rbp+rax*4+0x53c],0xffffffff
  407847:	jne    407830 <print_debug_data@@Base+0x930>
  407849:	mov    rdx,0x411500
  407850:	lea    ecx,[rbx+rax*1]
  407853:	movsxd rcx,ecx
  407856:	mov    r8,QWORD PTR [rdx+rcx*8+0x70]
  40785b:	mov    rsi,QWORD PTR [r12+rax*8]
  40785f:	movsxd r9,DWORD PTR [rdi+0x560]
  407866:	mov    DWORD PTR [r8+r9*4],esi
  40786a:	movsxd r8,DWORD PTR [rdx+rcx*4+0x4]
  40786f:	cmp    r8d,0xffffffff
  407873:	je     407898 <print_debug_data@@Base+0x998>
  407875:	cmp    rsi,r8
  407878:	jle    40787e <print_debug_data@@Base+0x97e>
  40787a:	mov    DWORD PTR [rdx+rcx*4+0x4],esi
  40787e:	add    rcx,0x8
  407882:	movsxd r8,DWORD PTR [rdx+rcx*4+0x4]
  407887:	cmp    rsi,r8
  40788a:	jge    407830 <print_debug_data@@Base+0x930>
  40788c:	mov    DWORD PTR [rdx+rcx*4+0x4],esi
  407890:	jmp    407830 <print_debug_data@@Base+0x930>
  407892:	nop    WORD PTR [rax+rax*1+0x0]
  407898:	mov    DWORD PTR [rdx+rcx*4+0x4],esi
  40789c:	mov    DWORD PTR [rdx+rcx*4+0x24],esi
  4078a0:	jmp    407830 <print_debug_data@@Base+0x930>
  4078a2:	nop    WORD PTR [rax+rax*1+0x0]
  4078a8:	xor    eax,eax
  4078aa:	call   40bc80 <handle_coda_error@@Base>
  4078af:	jmp    407744 <print_debug_data@@Base+0x844>
  4078b4:	xor    eax,eax
  4078b6:	call   40bc80 <handle_coda_error@@Base>
  4078bb:	jmp    407801 <print_debug_data@@Base+0x901>
  4078c0:	lea    rcx,[rip+0x4bf9]        # 40c4c0 <_IO_stdin_used@@Base+0x4c0>
  4078c7:	mov    edx,0xfc
  4078cc:	lea    rsi,[rip+0x4a2d]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4078d3:	lea    rdi,[rip+0x4ade]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  4078da:	call   403860 <__assert_fail@plt>
  4078df:	nop
  4078e0:	xor    eax,eax
  4078e2:	call   40bc80 <handle_coda_error@@Base>
  4078e7:	jmp    407779 <print_debug_data@@Base+0x879>
  4078ec:	nop    DWORD PTR [rax+0x0]
  4078f0:	xor    eax,eax
  4078f2:	call   40bc80 <handle_coda_error@@Base>
  4078f7:	mov    r9,QWORD PTR [rsp]
  4078fb:	jmp    4076a4 <print_debug_data@@Base+0x7a4>
  407900:	xor    eax,eax
  407902:	call   40bc80 <handle_coda_error@@Base>
  407907:	jmp    4077ac <print_debug_data@@Base+0x8ac>
  40790c:	nop    DWORD PTR [rax+0x0]
  407910:	mov    DWORD PTR [rsp+0xc],0x0
  407918:	mov    r15d,0x1
  40791e:	jmp    407688 <print_debug_data@@Base+0x788>
  407923:	lea    rcx,[rip+0x4b96]        # 40c4c0 <_IO_stdin_used@@Base+0x4c0>
  40792a:	mov    edx,0x126
  40792f:	lea    rsi,[rip+0x49ca]        # 40c300 <_IO_stdin_used@@Base+0x300>
  407936:	lea    rdi,[rip+0x48c2]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  40793d:	call   403860 <__assert_fail@plt>
  407942:	call   403850 <__stack_chk_fail@plt>
  407947:	lea    rcx,[rip+0x4b72]        # 40c4c0 <_IO_stdin_used@@Base+0x4c0>
  40794e:	mov    edx,0x7d
  407953:	lea    rsi,[rip+0x49a6]        # 40c300 <_IO_stdin_used@@Base+0x300>
  40795a:	lea    rdi,[rip+0x4a2f]        # 40c390 <_IO_stdin_used@@Base+0x390>
  407961:	call   403860 <__assert_fail@plt>
  407966:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407970 <dim_info_init@@Base>:
  407970:	endbr64 
  407974:	mov    rax,0x411500
  40797b:	mov    DWORD PTR [rax],0x0
  407981:	mov    DWORD PTR [rax+0x44],0x0
  407988:	mov    DWORD PTR [rax+0x68],0xffffffff
  40798f:	ret    

0000000000407990 <dim_info_done@@Base>:
  407990:	endbr64 
  407994:	ret    
  407995:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004079a0 <print_all_distinct_dims@@Base>:
  4079a0:	endbr64 
  4079a4:	push   r14
  4079a6:	push   r13
  4079a8:	push   r12
  4079aa:	mov    r12,0x411500
  4079b1:	push   rbp
  4079b2:	push   rbx
  4079b3:	cmp    DWORD PTR [r12],edi
  4079b7:	jle    407b66 <print_all_distinct_dims@@Base+0x1c6>
  4079bd:	movsxd r13,edi
  4079c0:	mov    edx,DWORD PTR [r12+r13*4+0x48]
  4079c5:	mov    r14d,edi
  4079c8:	test   edx,edx
  4079ca:	jne    4079d8 <print_all_distinct_dims@@Base+0x38>
  4079cc:	pop    rbx
  4079cd:	pop    rbp
  4079ce:	pop    r12
  4079d0:	pop    r13
  4079d2:	pop    r14
  4079d4:	ret    
  4079d5:	nop    DWORD PTR [rax]
  4079d8:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  4079dd:	lea    ebx,[rax+0x1]
  4079e0:	movsxd rbx,ebx
  4079e3:	shl    rbx,0x2
  4079e7:	mov    rdi,rbx
  4079ea:	call   403a00 <malloc@plt>
  4079ef:	mov    rbp,rax
  4079f2:	test   rax,rax
  4079f5:	je     407b28 <print_all_distinct_dims@@Base+0x188>
  4079fb:	mov    rdx,rbx
  4079fe:	xor    esi,esi
  407a00:	mov    rdi,rbp
  407a03:	call   4038a0 <memset@plt>
  407a08:	mov    eax,DWORD PTR [r12+r13*4+0xb0]
  407a10:	dec    eax
  407a12:	cdqe   
  407a14:	mov    rax,QWORD PTR [r12+rax*8+0x110]
  407a1c:	test   rax,rax
  407a1f:	jle    407a44 <print_all_distinct_dims@@Base+0xa4>
  407a21:	mov    rcx,QWORD PTR [r12+r13*8+0x70]
  407a26:	lea    rdx,[rcx+rax*4]
  407a2a:	nop    WORD PTR [rax+rax*1+0x0]
  407a30:	movsxd rax,DWORD PTR [rcx]
  407a33:	test   eax,eax
  407a35:	js     407a3b <print_all_distinct_dims@@Base+0x9b>
  407a37:	inc    DWORD PTR [rbp+rax*4+0x0]
  407a3b:	add    rcx,0x4
  407a3f:	cmp    rdx,rcx
  407a42:	jne    407a30 <print_all_distinct_dims@@Base+0x90>
  407a44:	lea    edx,[r14+0x1]
  407a48:	lea    rsi,[rip+0x49e5]        # 40c434 <_IO_stdin_used@@Base+0x434>
  407a4f:	mov    edi,0x1
  407a54:	xor    eax,eax
  407a56:	call   403aa0 <__printf_chk@plt>
  407a5b:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  407a60:	mov    edx,DWORD PTR [r12+r13*4+0x4]
  407a65:	lea    r14,[rip+0x49d4]        # 40c440 <_IO_stdin_used@@Base+0x440>
  407a6c:	cmp    ebx,edx
  407a6e:	jge    407a95 <print_all_distinct_dims@@Base+0xf5>
  407a70:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  407a74:	test   eax,eax
  407a76:	jle    407a89 <print_all_distinct_dims@@Base+0xe9>
  407a78:	mov    edx,ebx
  407a7a:	mov    rsi,r14
  407a7d:	mov    edi,0x1
  407a82:	xor    eax,eax
  407a84:	call   403aa0 <__printf_chk@plt>
  407a89:	mov    edx,DWORD PTR [r12+r13*4+0x4]
  407a8e:	inc    rbx
  407a91:	cmp    edx,ebx
  407a93:	jg     407a70 <print_all_distinct_dims@@Base+0xd0>
  407a95:	lea    rsi,[rip+0x49a8]        # 40c444 <_IO_stdin_used@@Base+0x444>
  407a9c:	mov    edi,0x1
  407aa1:	xor    eax,eax
  407aa3:	call   403aa0 <__printf_chk@plt>
  407aa8:	lea    rsi,[rip+0x4999]        # 40c448 <_IO_stdin_used@@Base+0x448>
  407aaf:	mov    edi,0x1
  407ab4:	xor    eax,eax
  407ab6:	call   403aa0 <__printf_chk@plt>
  407abb:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  407ac0:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  407ac5:	cmp    ebx,eax
  407ac7:	jge    407af3 <print_all_distinct_dims@@Base+0x153>
  407ac9:	lea    r14,[rip+0x4970]        # 40c440 <_IO_stdin_used@@Base+0x440>
  407ad0:	mov    edx,DWORD PTR [rbp+rbx*4+0x0]
  407ad4:	test   edx,edx
  407ad6:	jle    407ae7 <print_all_distinct_dims@@Base+0x147>
  407ad8:	mov    rsi,r14
  407adb:	mov    edi,0x1
  407ae0:	xor    eax,eax
  407ae2:	call   403aa0 <__printf_chk@plt>
  407ae7:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  407aec:	inc    rbx
  407aef:	cmp    eax,ebx
  407af1:	jg     407ad0 <print_all_distinct_dims@@Base+0x130>
  407af3:	mov    edx,DWORD PTR [rbp+rax*4+0x0]
  407af7:	lea    rsi,[rip+0x4946]        # 40c444 <_IO_stdin_used@@Base+0x444>
  407afe:	mov    edi,0x1
  407b03:	xor    eax,eax
  407b05:	call   403aa0 <__printf_chk@plt>
  407b0a:	mov    edi,0xa
  407b0f:	call   403690 <putchar@plt>
  407b14:	pop    rbx
  407b15:	mov    rdi,rbp
  407b18:	pop    rbp
  407b19:	pop    r12
  407b1b:	pop    r13
  407b1d:	pop    r14
  407b1f:	jmp    403680 <free@plt>
  407b24:	nop    DWORD PTR [rax+0x0]
  407b28:	mov    rdx,rbx
  407b2b:	mov    r8d,0x3d
  407b31:	lea    rcx,[rip+0x47c8]        # 40c300 <_IO_stdin_used@@Base+0x300>
  407b38:	lea    rsi,[rip+0x4589]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  407b3f:	mov    edi,0xffffffff
  407b44:	xor    eax,eax
  407b46:	call   4036f0 <coda_set_error@plt>
  407b4b:	xor    eax,eax
  407b4d:	call   40bc80 <handle_coda_error@@Base>
  407b52:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  407b57:	lea    ebx,[rax+0x1]
  407b5a:	movsxd rbx,ebx
  407b5d:	shl    rbx,0x2
  407b61:	jmp    4079fb <print_all_distinct_dims@@Base+0x5b>
  407b66:	lea    rcx,[rip+0x4983]        # 40c4f0 <_IO_stdin_used@@Base+0x4f0>
  407b6d:	mov    edx,0x32
  407b72:	lea    rsi,[rip+0x4787]        # 40c300 <_IO_stdin_used@@Base+0x300>
  407b79:	lea    rdi,[rip+0x4899]        # 40c419 <_IO_stdin_used@@Base+0x419>
  407b80:	call   403860 <__assert_fail@plt>
  407b85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000407b90 <dim_enter_array@@Base>:
  407b90:	endbr64 
  407b94:	push   r15
  407b96:	push   r14
  407b98:	push   r13
  407b9a:	push   r12
  407b9c:	push   rbp
  407b9d:	push   rbx
  407b9e:	sub    rsp,0xa8
  407ba5:	mov    r12,0x410380
  407bac:	mov    rax,QWORD PTR fs:0x28
  407bb5:	mov    QWORD PTR [rsp+0x98],rax
  407bbd:	xor    eax,eax
  407bbf:	movsxd rax,DWORD PTR [r12+0x110]
  407bc7:	lea    rsi,[rsp+0x44]
  407bcc:	mov    rdi,QWORD PTR [r12+rax*8+0x10]
  407bd1:	movsxd rbp,DWORD PTR [r12+0xf34]
  407bd9:	call   403c40 <coda_type_get_class@plt>
  407bde:	test   eax,eax
  407be0:	jne    4081a8 <dim_enter_array@@Base+0x618>
  407be6:	mov    eax,DWORD PTR [rsp+0x44]
  407bea:	cmp    eax,0x4
  407bed:	je     4081bc <dim_enter_array@@Base+0x62c>
  407bf3:	jbe    408010 <dim_enter_array@@Base+0x480>
  407bf9:	cmp    eax,0x5
  407bfc:	je     408280 <dim_enter_array@@Base+0x6f0>
  407c02:	cmp    eax,0x6
  407c05:	jne    4084cd <dim_enter_array@@Base+0x93d>
  407c0b:	movsxd rax,DWORD PTR [r12+0x110]
  407c13:	lea    rsi,[rsp+0x48]
  407c18:	mov    rdi,QWORD PTR [r12+rax*8+0x10]
  407c1d:	call   403a40 <coda_type_get_special_type@plt>
  407c22:	test   eax,eax
  407c24:	jne    4083a1 <dim_enter_array@@Base+0x811>
  407c2a:	cmp    DWORD PTR [rsp+0x48],0x3
  407c2f:	jne    40848f <dim_enter_array@@Base+0x8ff>
  407c35:	lea    rax,[rbp+rbp*4+0x0]
  407c3a:	shl    rax,0x4
  407c3e:	movabs rbx,0x200000001
  407c48:	mov    QWORD PTR [r12+rax*1+0x538],rbx
  407c50:	mov    rax,0x410378
  407c57:	mov    eax,DWORD PTR [rax]
  407c59:	test   eax,eax
  407c5b:	je     408083 <dim_enter_array@@Base+0x4f3>
  407c61:	lea    rax,[rbp+rbp*4+0x0]
  407c66:	mov    rbx,0x411500
  407c6d:	shl    rax,0x4
  407c71:	add    rax,r12
  407c74:	mov    r11d,DWORD PTR [rbx]
  407c77:	mov    ecx,DWORD PTR [rax+0x538]
  407c7d:	mov    DWORD PTR [rax+0x534],r11d
  407c84:	lea    esi,[rcx+r11*1]
  407c88:	cmp    esi,0x8
  407c8b:	jg     4084ae <dim_enter_array@@Base+0x91e>
  407c91:	mov    DWORD PTR [rbx],esi
  407c93:	test   r11d,r11d
  407c96:	jle    408260 <dim_enter_array@@Base+0x6d0>
  407c9c:	lea    eax,[r11-0x1]
  407ca0:	cdqe   
  407ca2:	mov    rdi,QWORD PTR [rbx+rax*8+0x110]
  407caa:	mov    rax,QWORD PTR [rbx+rax*8+0x150]
  407cb2:	mov    QWORD PTR [rsp],rdi
  407cb6:	mov    QWORD PTR [rsp+0x8],rax
  407cbb:	test   rax,rax
  407cbe:	jle    40834c <dim_enter_array@@Base+0x7bc>
  407cc4:	test   ecx,ecx
  407cc6:	jle    40837e <dim_enter_array@@Base+0x7ee>
  407ccc:	movsxd r8,r11d
  407ccf:	lea    r9,[rbp+rbp*4+0x0]
  407cd4:	dec    ecx
  407cd6:	lea    rdi,[r8*4+0x48]
  407cde:	add    rcx,r8
  407ce1:	shl    r9,0x4
  407ce5:	lea    rdx,[r12+r9*1+0x53c]
  407ced:	lea    rax,[rbx+rdi*1]
  407cf1:	lea    r10,[rbx+rcx*4+0x4c]
  407cf6:	xor    r15d,r15d
  407cf9:	mov    r8d,0x1
  407cff:	nop
  407d00:	mov    ecx,DWORD PTR [rdx]
  407d02:	mov    DWORD PTR [rax],0x0
  407d08:	cmp    ecx,0xffffffff
  407d0b:	cmove  r15d,r8d
  407d0f:	mov    DWORD PTR [rax-0x44],ecx
  407d12:	add    rax,0x4
  407d16:	add    rdx,0x4
  407d1a:	cmp    rax,r10
  407d1d:	jne    407d00 <dim_enter_array@@Base+0x170>
  407d1f:	xor    r14d,r14d
  407d22:	test   r15d,r15d
  407d25:	je     407e55 <dim_enter_array@@Base+0x2c5>
  407d2b:	mov    rax,QWORD PTR [rsp]
  407d2f:	mov    DWORD PTR [rsp+0x10],r11d
  407d34:	shl    rax,0x2
  407d38:	mov    QWORD PTR [rsp+0x18],rax
  407d3d:	lea    rax,[rbp+rbp*4+0x0]
  407d42:	mov    r10,rax
  407d45:	mov    QWORD PTR [rsp+0x20],rax
  407d4a:	shl    r10,0x4
  407d4e:	lea    r13,[rbx+rdi*1+0x68]
  407d53:	add    r9,r12
  407d56:	xor    r14d,r14d
  407d59:	add    r10,r12
  407d5c:	nop    DWORD PTR [rax+0x0]
  407d60:	cmp    DWORD PTR [r9+r14*4+0x53c],0xffffffff
  407d69:	je     4082dc <dim_enter_array@@Base+0x74c>
  407d6f:	mov    rax,rbx
  407d72:	neg    rax
  407d75:	mov    DWORD PTR [r13+0x0],0x0
  407d7d:	mov    QWORD PTR [rax+r13*2-0xf0],0x0
  407d89:	inc    r14
  407d8c:	add    r13,0x4
  407d90:	cmp    DWORD PTR [r10+0x538],r14d
  407d97:	jg     407d60 <dim_enter_array@@Base+0x1d0>
  407d99:	mov    rax,QWORD PTR [rsp+0x20]
  407d9e:	mov    r11d,DWORD PTR [rsp+0x10]
  407da3:	shl    rax,0x4
  407da7:	add    rax,r12
  407daa:	mov    DWORD PTR [rax+0x560],0x0
  407db4:	xor    edx,edx
  407db6:	xor    esi,esi
  407db8:	xor    edi,edi
  407dba:	mov    DWORD PTR [rsp+0x18],r11d
  407dbf:	mov    QWORD PTR [rsp+0x10],rax
  407dc4:	mov    QWORD PTR [rsp+0x28],r9
  407dc9:	call   4073e0 <print_debug_data@@Base+0x4e0>
  407dce:	mov    rax,QWORD PTR [rsp+0x10]
  407dd3:	xor    r13d,r13d
  407dd6:	mov    eax,DWORD PTR [rax+0x538]
  407ddc:	xor    r14d,r14d
  407ddf:	test   eax,eax
  407de1:	mov    r11d,DWORD PTR [rsp+0x18]
  407de6:	jle    407e53 <dim_enter_array@@Base+0x2c3>
  407de8:	lea    rdx,[rbp+rbp*4+0x0]
  407ded:	shl    rdx,0x4
  407df1:	mov    QWORD PTR [rsp+0x10],rbp
  407df6:	add    rdx,r12
  407df9:	mov    r9,QWORD PTR [rsp+0x28]
  407dfe:	mov    ebp,r15d
  407e01:	jmp    407e14 <dim_enter_array@@Base+0x284>
  407e03:	nop    DWORD PTR [rax+rax*1+0x0]
  407e08:	inc    r13
  407e0b:	cmp    DWORD PTR [rdx+0x538],r13d
  407e12:	jle    407e4e <dim_enter_array@@Base+0x2be>
  407e14:	cmp    DWORD PTR [r9+r13*4+0x53c],0xffffffff
  407e1d:	jne    407e08 <dim_enter_array@@Base+0x278>
  407e1f:	lea    eax,[r11+r13*1]
  407e23:	movsxd r15,eax
  407e26:	mov    eax,DWORD PTR [rbx+r15*4+0x24]
  407e2b:	cmp    DWORD PTR [rbx+r15*4+0x4],eax
  407e30:	je     4083c5 <dim_enter_array@@Base+0x835>
  407e36:	inc    r13
  407e39:	mov    DWORD PTR [rbx+r15*4+0x48],0x1
  407e42:	mov    r14d,ebp
  407e45:	cmp    DWORD PTR [rdx+0x538],r13d
  407e4c:	jg     407e14 <dim_enter_array@@Base+0x284>
  407e4e:	mov    rbp,QWORD PTR [rsp+0x10]
  407e53:	mov    esi,DWORD PTR [rbx]
  407e55:	mov    DWORD PTR [rbx+0x44],0x0
  407e5c:	mov    DWORD PTR [rbx+0x68],0xffffffff
  407e63:	test   esi,esi
  407e65:	jle    407ead <dim_enter_array@@Base+0x31d>
  407e67:	xor    eax,eax
  407e69:	mov    edi,0xffffffff
  407e6e:	xor    ecx,ecx
  407e70:	xor    r8d,r8d
  407e73:	mov    r10d,0x1
  407e79:	mov    r9d,0x1
  407e7f:	nop
  407e80:	lea    rdx,[rax*4+0x0]
  407e88:	mov    r13d,DWORD PTR [rbx+rdx*1+0x48]
  407e8d:	test   r13d,r13d
  407e90:	cmovne edi,eax
  407e93:	cmovne ecx,r10d
  407e97:	cmovne r8d,r9d
  407e9b:	inc    rax
  407e9e:	cmp    esi,eax
  407ea0:	jg     407e80 <dim_enter_array@@Base+0x2f0>
  407ea2:	test   cl,cl
  407ea4:	je     407ead <dim_enter_array@@Base+0x31d>
  407ea6:	mov    DWORD PTR [rbx+0x44],r8d
  407eaa:	mov    DWORD PTR [rbx+0x68],edi
  407ead:	lea    rax,[rbp+rbp*4+0x0]
  407eb2:	shl    rax,0x4
  407eb6:	add    rax,r12
  407eb9:	mov    ecx,DWORD PTR [rax+0x538]
  407ebf:	mov    DWORD PTR [rax+0x55c],0x1
  407ec9:	test   ecx,ecx
  407ecb:	jle    40841e <dim_enter_array@@Base+0x88e>
  407ed1:	movsxd rdi,r11d
  407ed4:	lea    rax,[rdi*8+0x0]
  407edc:	mov    QWORD PTR [rsp+0x10],rax
  407ee1:	lea    r13,[rbx+rax*1]
  407ee5:	lea    r9,[rbx+rdi*4]
  407ee9:	xor    eax,eax
  407eeb:	mov    esi,0x1
  407ef0:	lea    r15d,[r11-0x1]
  407ef4:	lea    r10,[rdi+0x20]
  407ef8:	jmp    407f16 <dim_enter_array@@Base+0x386>
  407efa:	nop    WORD PTR [rax+rax*1+0x0]
  407f00:	movsxd rdx,DWORD PTR [rbx+rdi*4+0x4]
  407f05:	inc    rax
  407f08:	imul   rdx,QWORD PTR [rsp]
  407f0d:	mov    QWORD PTR [rbx+r10*8+0x10],rdx
  407f12:	cmp    ecx,eax
  407f14:	jle    407f42 <dim_enter_array@@Base+0x3b2>
  407f16:	movsxd rdx,DWORD PTR [r9+rax*4+0x4]
  407f1b:	imul   esi,edx
  407f1e:	test   rax,rax
  407f21:	je     407f00 <dim_enter_array@@Base+0x370>
  407f23:	lea    r8d,[r15+rax*1]
  407f27:	movsxd r8,r8d
  407f2a:	imul   rdx,QWORD PTR [rbx+r8*8+0x110]
  407f33:	mov    QWORD PTR [r13+rax*8+0x110],rdx
  407f3b:	inc    rax
  407f3e:	cmp    ecx,eax
  407f40:	jg     407f16 <dim_enter_array@@Base+0x386>
  407f42:	lea    rax,[rbp+rbp*4+0x0]
  407f47:	shl    rax,0x4
  407f4b:	mov    DWORD PTR [r12+rax*1+0x55c],esi
  407f53:	test   r14d,r14d
  407f56:	je     408208 <dim_enter_array@@Base+0x678>
  407f5c:	lea    edx,[rcx-0x1]
  407f5f:	mov    rax,QWORD PTR [rsp+0x10]
  407f64:	add    rdi,rdx
  407f67:	lea    rax,[rbx+rax*1+0x150]
  407f6f:	lea    rdx,[rbx+rdi*8+0x158]
  407f77:	nop    WORD PTR [rax+rax*1+0x0]
  407f80:	mov    QWORD PTR [rax],0x0
  407f87:	add    rax,0x8
  407f8b:	cmp    rax,rdx
  407f8e:	jne    407f80 <dim_enter_array@@Base+0x3f0>
  407f90:	mov    rax,QWORD PTR [rsp]
  407f94:	test   rax,rax
  407f97:	jle    4080dd <dim_enter_array@@Base+0x54d>
  407f9d:	movsxd rdx,r11d
  407fa0:	mov    r13,rax
  407fa3:	lea    eax,[rcx-0x1]
  407fa6:	add    rax,rdx
  407fa9:	shl    r13,0x2
  407fad:	lea    r14,[rbx+rdx*4+0x4]
  407fb2:	lea    r10,[rbx+rdx*8+0x150]
  407fba:	lea    r8,[rbx+rax*8+0x158]
  407fc2:	xor    r9d,r9d
  407fc5:	nop    DWORD PTR [rax]
  407fc8:	mov    rax,r10
  407fcb:	mov    rdx,r14
  407fce:	mov    esi,0x1
  407fd3:	test   ecx,ecx
  407fd5:	jg     408003 <dim_enter_array@@Base+0x473>
  407fd7:	jmp    4080d0 <dim_enter_array@@Base+0x540>
  407fdc:	nop    DWORD PTR [rax+0x0]
  407fe0:	mov    rdi,QWORD PTR [rax-0xe0]
  407fe7:	imul   esi,DWORD PTR [rdi+r9*1]
  407fec:	movsxd rdi,esi
  407fef:	add    QWORD PTR [rax],rdi
  407ff2:	add    rax,0x8
  407ff6:	add    rdx,0x4
  407ffa:	cmp    r8,rax
  407ffd:	je     4080d0 <dim_enter_array@@Base+0x540>
  408003:	mov    edi,DWORD PTR [rdx+0x44]
  408006:	test   edi,edi
  408008:	jne    407fe0 <dim_enter_array@@Base+0x450>
  40800a:	imul   esi,DWORD PTR [rdx]
  40800d:	jmp    407fec <dim_enter_array@@Base+0x45c>
  40800f:	nop
  408010:	cmp    eax,0x1
  408013:	jne    4084cd <dim_enter_array@@Base+0x93d>
  408019:	movsxd rax,DWORD PTR [r12+0x110]
  408021:	lea    rbx,[rsp+0x50]
  408026:	mov    rdi,QWORD PTR [r12+rax*8+0x10]
  40802b:	lea    rsi,[rsp+0x48]
  408030:	mov    rdx,rbx
  408033:	call   403b40 <coda_type_get_array_dim@plt>
  408038:	test   eax,eax
  40803a:	jne    408395 <dim_enter_array@@Base+0x805>
  408040:	lea    rcx,[rbp+rbp*4+0x0]
  408045:	mov    esi,DWORD PTR [rsp+0x48]
  408049:	shl    rcx,0x4
  40804d:	add    rcx,r12
  408050:	mov    DWORD PTR [rcx+0x538],esi
  408056:	xor    eax,eax
  408058:	test   esi,esi
  40805a:	jle    407c50 <dim_enter_array@@Base+0xc0>
  408060:	mov    rdx,QWORD PTR [rbx+rax*8]
  408064:	mov    DWORD PTR [rcx+rax*4+0x53c],edx
  40806b:	inc    rax
  40806e:	cmp    esi,eax
  408070:	jg     408060 <dim_enter_array@@Base+0x4d0>
  408072:	mov    rax,0x410378
  408079:	mov    eax,DWORD PTR [rax]
  40807b:	test   eax,eax
  40807d:	jne    407c61 <dim_enter_array@@Base+0xd1>
  408083:	lea    rax,[rbp+rbp*4+0x0]
  408088:	shl    rax,0x4
  40808c:	mov    DWORD PTR [r12+rax*1+0x534],0xffffffff
  408098:	mov    QWORD PTR [r12+rax*1+0x55c],0x0
  4080a4:	mov    rax,QWORD PTR [rsp+0x98]
  4080ac:	xor    rax,QWORD PTR fs:0x28
  4080b5:	jne    4084ec <dim_enter_array@@Base+0x95c>
  4080bb:	add    rsp,0xa8
  4080c2:	pop    rbx
  4080c3:	pop    rbp
  4080c4:	pop    r12
  4080c6:	pop    r13
  4080c8:	pop    r14
  4080ca:	pop    r15
  4080cc:	ret    
  4080cd:	nop    DWORD PTR [rax]
  4080d0:	add    r9,0x4
  4080d4:	cmp    r13,r9
  4080d7:	jne    407fc8 <dim_enter_array@@Base+0x438>
  4080dd:	lea    rax,[rbp+rbp*4+0x0]
  4080e2:	shl    rax,0x4
  4080e6:	mov    eax,DWORD PTR [r12+rax*1+0x538]
  4080ee:	lea    edx,[rax+r11*1-0x1]
  4080f3:	movsxd rdx,edx
  4080f6:	cmp    QWORD PTR [rbx+rdx*8+0x150],0x0
  4080ff:	jle    4080a4 <dim_enter_array@@Base+0x514>
  408101:	mov    ecx,DWORD PTR [rbx]
  408103:	sub    eax,0x2
  408106:	lea    edx,[rcx-0x1]
  408109:	movsxd rdx,edx
  40810c:	movsxd rcx,DWORD PTR [rbx+rdx*4+0x4]
  408111:	mov    QWORD PTR [rbx+rdx*8+0xd0],rcx
  408119:	mov    edx,eax
  40811b:	js     408159 <dim_enter_array@@Base+0x5c9>
  40811d:	lea    esi,[r11+rdx*1]
  408121:	movsxd rsi,esi
  408124:	lea    rcx,[rbx+rsi*4+0x4]
  408129:	lea    rax,[rbx+rsi*8+0xd0]
  408131:	sub    rsi,rdx
  408134:	lea    rsi,[rbx+rsi*8+0xc8]
  40813c:	nop    DWORD PTR [rax+0x0]
  408140:	movsxd rdx,DWORD PTR [rcx]
  408143:	sub    rax,0x8
  408147:	imul   rdx,QWORD PTR [rax+0x10]
  40814c:	sub    rcx,0x4
  408150:	mov    QWORD PTR [rax+0x8],rdx
  408154:	cmp    rax,rsi
  408157:	jne    408140 <dim_enter_array@@Base+0x5b0>
  408159:	test   r11d,r11d
  40815c:	jle    4080a4 <dim_enter_array@@Base+0x514>
  408162:	movsxd rdi,r11d
  408165:	mov    rcx,rdi
  408168:	lea    edx,[r11-0x1]
  40816c:	sub    rcx,rdx
  40816f:	lea    rax,[rbx+rdi*8+0xc8]
  408177:	lea    rcx,[rbx+rcx*8+0xc0]
  40817f:	add    rdi,0x18
  408183:	nop    DWORD PTR [rax+rax*1+0x0]
  408188:	mov    rdx,QWORD PTR [rax]
  40818b:	sub    rax,0x8
  40818f:	imul   rdx,QWORD PTR [rbx+rdi*8+0x10]
  408195:	mov    QWORD PTR [rax+0x8],rdx
  408199:	cmp    rcx,rax
  40819c:	jne    408188 <dim_enter_array@@Base+0x5f8>
  40819e:	jmp    4080a4 <dim_enter_array@@Base+0x514>
  4081a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4081a8:	xor    eax,eax
  4081aa:	call   40bc80 <handle_coda_error@@Base>
  4081af:	mov    eax,DWORD PTR [rsp+0x44]
  4081b3:	cmp    eax,0x4
  4081b6:	jne    407bf3 <dim_enter_array@@Base+0x63>
  4081bc:	movsxd rax,DWORD PTR [r12+0x110]
  4081c4:	lea    rsi,[rsp+0x48]
  4081c9:	mov    rdi,QWORD PTR [r12+rax*8+0x10]
  4081ce:	call   403a80 <coda_type_get_string_length@plt>
  4081d3:	test   eax,eax
  4081d5:	jne    4083b9 <dim_enter_array@@Base+0x829>
  4081db:	lea    rax,[rbp+rbp*4+0x0]
  4081e0:	shl    rax,0x4
  4081e4:	mov    rdx,QWORD PTR [rsp+0x48]
  4081e9:	add    rax,r12
  4081ec:	mov    DWORD PTR [rax+0x538],0x1
  4081f6:	mov    DWORD PTR [rax+0x53c],edx
  4081fc:	jmp    407c50 <dim_enter_array@@Base+0xc0>
  408201:	nop    DWORD PTR [rax+0x0]
  408208:	movsxd rax,DWORD PTR [rbx+rdi*4+0x4]
  40820d:	imul   rax,QWORD PTR [rsp+0x8]
  408213:	mov    QWORD PTR [rbx+rdi*8+0x150],rax
  40821b:	cmp    ecx,0x1
  40821e:	je     4080dd <dim_enter_array@@Base+0x54d>
  408224:	lea    rsi,[rbx+rdi*8]
  408228:	mov    eax,0x1
  40822d:	lea    rdi,[rbx+rdi*4]
  408231:	nop    DWORD PTR [rax+0x0]
  408238:	movsxd rdx,DWORD PTR [rdi+rax*4+0x4]
  40823d:	imul   rdx,QWORD PTR [rsi+rax*8+0x148]
  408246:	mov    QWORD PTR [rsi+rax*8+0x150],rdx
  40824e:	inc    rax
  408251:	cmp    ecx,eax
  408253:	jg     408238 <dim_enter_array@@Base+0x6a8>
  408255:	jmp    4080dd <dim_enter_array@@Base+0x54d>
  40825a:	nop    WORD PTR [rax+rax*1+0x0]
  408260:	mov    QWORD PTR [rsp+0x8],0x1
  408269:	mov    QWORD PTR [rsp],0x1
  408271:	jmp    407cc4 <dim_enter_array@@Base+0x134>
  408276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408280:	movsxd rax,DWORD PTR [r12+0x110]
  408288:	lea    rsi,[rsp+0x48]
  40828d:	mov    rdi,QWORD PTR [r12+rax*8+0x10]
  408292:	call   4037c0 <coda_type_get_bit_size@plt>
  408297:	test   eax,eax
  408299:	jne    4083ad <dim_enter_array@@Base+0x81d>
  40829f:	lea    rax,[rbp+rbp*4+0x0]
  4082a4:	shl    rax,0x4
  4082a8:	mov    rdx,QWORD PTR [rsp+0x48]
  4082ad:	add    rax,r12
  4082b0:	mov    DWORD PTR [rax+0x538],0x1
  4082ba:	test   rdx,rdx
  4082bd:	js     408386 <dim_enter_array@@Base+0x7f6>
  4082c3:	xor    ecx,ecx
  4082c5:	test   dl,0x7
  4082c8:	setne  cl
  4082cb:	sar    rdx,0x3
  4082cf:	add    edx,ecx
  4082d1:	mov    DWORD PTR [rax+0x53c],edx
  4082d7:	jmp    407c50 <dim_enter_array@@Base+0xc0>
  4082dc:	mov    eax,DWORD PTR [rsp+0x10]
  4082e0:	mov    rdi,QWORD PTR [rsp+0x18]
  4082e5:	mov    DWORD PTR [r13+0x0],eax
  4082e9:	mov    QWORD PTR [rsp+0x30],r10
  4082ee:	mov    QWORD PTR [rsp+0x28],r9
  4082f3:	call   403a00 <malloc@plt>
  4082f8:	mov    r11,rbx
  4082fb:	neg    r11
  4082fe:	test   rax,rax
  408301:	mov    QWORD PTR [r11+r13*2-0xf0],rax
  408309:	mov    r9,QWORD PTR [rsp+0x28]
  40830e:	mov    r10,QWORD PTR [rsp+0x30]
  408313:	je     408442 <dim_enter_array@@Base+0x8b2>
  408319:	cmp    QWORD PTR [rsp],0x0
  40831e:	jle    407d89 <dim_enter_array@@Base+0x1f9>
  408324:	mov    rax,QWORD PTR [r11+r13*2-0xf0]
  40832c:	mov    rcx,QWORD PTR [rsp+0x18]
  408331:	lea    rdx,[rcx+rax*1]
  408335:	nop    DWORD PTR [rax]
  408338:	mov    DWORD PTR [rax],0xffffffff
  40833e:	add    rax,0x4
  408342:	cmp    rax,rdx
  408345:	jne    408338 <dim_enter_array@@Base+0x7a8>
  408347:	jmp    407d89 <dim_enter_array@@Base+0x1f9>
  40834c:	test   ecx,ecx
  40834e:	jle    40837e <dim_enter_array@@Base+0x7ee>
  408350:	movsxd rdi,r11d
  408353:	lea    edx,[rcx-0x1]
  408356:	add    rdx,rdi
  408359:	lea    rax,[rbx+rdi*4+0x4]
  40835e:	lea    rdx,[rbx+rdx*4+0x8]
  408363:	nop    DWORD PTR [rax+rax*1+0x0]
  408368:	mov    DWORD PTR [rax],0x0
  40836e:	mov    DWORD PTR [rax+0x44],0x0
  408375:	add    rax,0x4
  408379:	cmp    rax,rdx
  40837c:	jne    408368 <dim_enter_array@@Base+0x7d8>
  40837e:	xor    r14d,r14d
  408381:	jmp    407e55 <dim_enter_array@@Base+0x2c5>
  408386:	mov    DWORD PTR [rax+0x53c],0xffffffff
  408390:	jmp    407c50 <dim_enter_array@@Base+0xc0>
  408395:	xor    eax,eax
  408397:	call   40bc80 <handle_coda_error@@Base>
  40839c:	jmp    408040 <dim_enter_array@@Base+0x4b0>
  4083a1:	xor    eax,eax
  4083a3:	call   40bc80 <handle_coda_error@@Base>
  4083a8:	jmp    407c2a <dim_enter_array@@Base+0x9a>
  4083ad:	xor    eax,eax
  4083af:	call   40bc80 <handle_coda_error@@Base>
  4083b4:	jmp    40829f <dim_enter_array@@Base+0x70f>
  4083b9:	xor    eax,eax
  4083bb:	call   40bc80 <handle_coda_error@@Base>
  4083c0:	jmp    4081db <dim_enter_array@@Base+0x64b>
  4083c5:	lea    rax,[r15+0xc]
  4083c9:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  4083ce:	mov    QWORD PTR [rsp+0x30],rdx
  4083d3:	mov    QWORD PTR [rsp+0x28],r9
  4083d8:	mov    DWORD PTR [rsp+0x20],r11d
  4083dd:	mov    QWORD PTR [rsp+0x18],rax
  4083e2:	mov    DWORD PTR [rbx+r15*4+0x48],0x0
  4083eb:	call   403680 <free@plt>
  4083f0:	mov    rax,QWORD PTR [rsp+0x18]
  4083f5:	mov    DWORD PTR [rbx+r15*4+0xb0],0x0
  408401:	mov    QWORD PTR [rbx+rax*8+0x10],0x0
  40840a:	mov    rdx,QWORD PTR [rsp+0x30]
  40840f:	mov    r9,QWORD PTR [rsp+0x28]
  408414:	mov    r11d,DWORD PTR [rsp+0x20]
  408419:	jmp    407e08 <dim_enter_array@@Base+0x278>
  40841e:	test   r14d,r14d
  408421:	jne    407f90 <dim_enter_array@@Base+0x400>
  408427:	movsxd rdx,r11d
  40842a:	movsxd rax,DWORD PTR [rbx+rdx*4+0x4]
  40842f:	imul   rax,QWORD PTR [rsp+0x8]
  408435:	mov    QWORD PTR [rbx+rdx*8+0x150],rax
  40843d:	jmp    4080dd <dim_enter_array@@Base+0x54d>
  408442:	mov    rdx,QWORD PTR [rsp+0x18]
  408447:	mov    r8d,0x1c8
  40844d:	lea    rcx,[rip+0x3eac]        # 40c300 <_IO_stdin_used@@Base+0x300>
  408454:	lea    rsi,[rip+0x3c6d]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  40845b:	mov    edi,0xffffffff
  408460:	mov    QWORD PTR [rsp+0x38],r10
  408465:	mov    QWORD PTR [rsp+0x30],r9
  40846a:	mov    QWORD PTR [rsp+0x28],r11
  40846f:	call   4036f0 <coda_set_error@plt>
  408474:	xor    eax,eax
  408476:	call   40bc80 <handle_coda_error@@Base>
  40847b:	mov    r11,QWORD PTR [rsp+0x28]
  408480:	mov    r9,QWORD PTR [rsp+0x30]
  408485:	mov    r10,QWORD PTR [rsp+0x38]
  40848a:	jmp    408319 <dim_enter_array@@Base+0x789>
  40848f:	lea    rcx,[rip+0x404a]        # 40c4e0 <_IO_stdin_used@@Base+0x4e0>
  408496:	mov    edx,0x15d
  40849b:	lea    rsi,[rip+0x3e5e]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4084a2:	lea    rdi,[rip+0x3d56]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  4084a9:	call   403860 <__assert_fail@plt>
  4084ae:	lea    rcx,[rip+0x402b]        # 40c4e0 <_IO_stdin_used@@Base+0x4e0>
  4084b5:	mov    edx,0x192
  4084ba:	lea    rsi,[rip+0x3e3f]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4084c1:	lea    rdi,[rip+0x3f18]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  4084c8:	call   403860 <__assert_fail@plt>
  4084cd:	lea    rcx,[rip+0x400c]        # 40c4e0 <_IO_stdin_used@@Base+0x4e0>
  4084d4:	mov    edx,0x182
  4084d9:	lea    rsi,[rip+0x3e20]        # 40c300 <_IO_stdin_used@@Base+0x300>
  4084e0:	lea    rdi,[rip+0x3d18]        # 40c1ff <_IO_stdin_used@@Base+0x1ff>
  4084e7:	call   403860 <__assert_fail@plt>
  4084ec:	call   403850 <__stack_chk_fail@plt>
  4084f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4084fc:	nop    DWORD PTR [rax+0x0]

0000000000408500 <dim_leave_array@@Base>:
  408500:	endbr64 
  408504:	push   r14
  408506:	mov    r14,0x410380
  40850d:	push   r13
  40850f:	push   r12
  408511:	push   rbp
  408512:	push   rbx
  408513:	movsxd rax,DWORD PTR [r14+0xf34]
  40851a:	test   eax,eax
  40851c:	js     408648 <dim_leave_array@@Base+0x148>
  408522:	lea    rax,[rax+rax*4]
  408526:	mov    rbx,0x411500
  40852d:	shl    rax,0x4
  408531:	add    r14,rax
  408534:	mov    r9d,DWORD PTR [rbx]
  408537:	mov    ecx,DWORD PTR [r14+0x538]
  40853e:	mov    r13d,DWORD PTR [r14+0x534]
  408545:	sub    r9d,ecx
  408548:	mov    DWORD PTR [rbx],r9d
  40854b:	test   ecx,ecx
  40854d:	jle    408593 <dim_leave_array@@Base+0x93>
  40854f:	movsxd rax,r13d
  408552:	lea    rbp,[rbx+rax*4+0x48]
  408557:	xor    r12d,r12d
  40855a:	jmp    408573 <dim_leave_array@@Base+0x73>
  40855c:	nop    DWORD PTR [rax+0x0]
  408560:	mov    ecx,DWORD PTR [r14+0x538]
  408567:	inc    r12d
  40856a:	add    rbp,0x4
  40856e:	cmp    ecx,r12d
  408571:	jle    408590 <dim_leave_array@@Base+0x90>
  408573:	mov    ecx,DWORD PTR [rbp+0x0]
  408576:	test   ecx,ecx
  408578:	je     408560 <dim_leave_array@@Base+0x60>
  40857a:	mov    rax,rbx
  40857d:	neg    rax
  408580:	mov    rdi,QWORD PTR [rax+rbp*2-0x20]
  408585:	call   403680 <free@plt>
  40858a:	jmp    408560 <dim_leave_array@@Base+0x60>
  40858c:	nop    DWORD PTR [rax+0x0]
  408590:	mov    r9d,DWORD PTR [rbx]
  408593:	mov    DWORD PTR [rbx+0x44],0x0
  40859a:	mov    DWORD PTR [rbx+0x68],0xffffffff
  4085a1:	test   r9d,r9d
  4085a4:	jle    4085ed <dim_leave_array@@Base+0xed>
  4085a6:	xor    eax,eax
  4085a8:	mov    edi,0xffffffff
  4085ad:	xor    esi,esi
  4085af:	xor    r8d,r8d
  4085b2:	mov    r11d,0x1
  4085b8:	mov    r10d,0x1
  4085be:	xchg   ax,ax
  4085c0:	lea    rdx,[rax*4+0x0]
  4085c8:	mov    edx,DWORD PTR [rbx+rdx*1+0x48]
  4085cc:	test   edx,edx
  4085ce:	cmovne edi,eax
  4085d1:	cmovne esi,r11d
  4085d5:	cmovne r8d,r10d
  4085d9:	inc    rax
  4085dc:	cmp    r9d,eax
  4085df:	jg     4085c0 <dim_leave_array@@Base+0xc0>
  4085e1:	test   sil,sil
  4085e4:	je     4085ed <dim_leave_array@@Base+0xed>
  4085e6:	mov    DWORD PTR [rbx+0x44],r8d
  4085ea:	mov    DWORD PTR [rbx+0x68],edi
  4085ed:	lea    eax,[rcx+r13*1-0x1]
  4085f2:	cdqe   
  4085f4:	cmp    QWORD PTR [rbx+rax*8+0x150],0x0
  4085fd:	jle    40863f <dim_leave_array@@Base+0x13f>
  4085ff:	test   r13d,r13d
  408602:	jle    40863f <dim_leave_array@@Base+0x13f>
  408604:	movsxd rsi,r13d
  408607:	mov    rdi,rsi
  40860a:	lea    eax,[r13-0x1]
  40860e:	sub    rdi,rax
  408611:	lea    rcx,[rbx+rsi*8+0xc8]
  408619:	lea    rdi,[rbx+rdi*8+0xc0]
  408621:	add    rsi,0x18
  408625:	nop    DWORD PTR [rax]
  408628:	mov    rax,QWORD PTR [rcx]
  40862b:	sub    rcx,0x8
  40862f:	cqo    
  408631:	idiv   QWORD PTR [rbx+rsi*8+0x10]
  408636:	mov    QWORD PTR [rcx+0x8],rax
  40863a:	cmp    rdi,rcx
  40863d:	jne    408628 <dim_leave_array@@Base+0x128>
  40863f:	pop    rbx
  408640:	pop    rbp
  408641:	pop    r12
  408643:	pop    r13
  408645:	pop    r14
  408647:	ret    
  408648:	lea    rcx,[rip+0x3e61]        # 40c4b0 <_IO_stdin_used@@Base+0x4b0>
  40864f:	mov    edx,0x243
  408654:	lea    rsi,[rip+0x3ca5]        # 40c300 <_IO_stdin_used@@Base+0x300>
  40865b:	lea    rdi,[rip+0x3dee]        # 40c450 <_IO_stdin_used@@Base+0x450>
  408662:	call   403860 <__assert_fail@plt>
  408667:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408670 <dim_record_field_available@@Base>:
  408670:	endbr64 
  408674:	xor    edx,edx
  408676:	xor    esi,esi
  408678:	xor    edi,edi
  40867a:	jmp    4070c0 <print_debug_data@@Base+0x1c0>
  40867f:	nop

0000000000408680 <codadump_filter_remove@@Base>:
  408680:	endbr64 
  408684:	push   rbx
  408685:	test   rdi,rdi
  408688:	je     4086e3 <codadump_filter_remove@@Base+0x63>
  40868a:	mov    rbx,rdi
  40868d:	mov    rdi,QWORD PTR [rdi]
  408690:	test   rdi,rdi
  408693:	je     4086e1 <codadump_filter_remove@@Base+0x61>
  408695:	cmp    QWORD PTR [rdi+0x10],0x0
  40869a:	je     4086a8 <codadump_filter_remove@@Base+0x28>
  40869c:	add    rdi,0x10
  4086a0:	call   408680 <codadump_filter_remove@@Base>
  4086a5:	mov    rdi,QWORD PTR [rbx]
  4086a8:	cmp    QWORD PTR [rdi+0x8],0x0
  4086ad:	je     4086bb <codadump_filter_remove@@Base+0x3b>
  4086af:	add    rdi,0x8
  4086b3:	call   408680 <codadump_filter_remove@@Base>
  4086b8:	mov    rdi,QWORD PTR [rbx]
  4086bb:	mov    rax,QWORD PTR [rdi]
  4086be:	test   rax,rax
  4086c1:	je     4086d5 <codadump_filter_remove@@Base+0x55>
  4086c3:	mov    rdi,rax
  4086c6:	call   403680 <free@plt>
  4086cb:	mov    rdi,QWORD PTR [rbx]
  4086ce:	mov    QWORD PTR [rdi],0x0
  4086d5:	call   403680 <free@plt>
  4086da:	mov    QWORD PTR [rbx],0x0
  4086e1:	pop    rbx
  4086e2:	ret    
  4086e3:	lea    rcx,[rip+0x3f56]        # 40c640 <_IO_stdin_used@@Base+0x640>
  4086ea:	mov    edx,0xc0
  4086ef:	lea    rsi,[rip+0x3e12]        # 40c508 <_IO_stdin_used@@Base+0x508>
  4086f6:	lea    rdi,[rip+0x3ea7]        # 40c5a4 <_IO_stdin_used@@Base+0x5a4>
  4086fd:	call   403860 <__assert_fail@plt>
  408702:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40870d:	nop    DWORD PTR [rax]
  408710:	push   r15
  408712:	push   r14
  408714:	push   r13
  408716:	push   r12
  408718:	push   rbp
  408719:	push   rbx
  40871a:	sub    rsp,0x28
  40871e:	mov    QWORD PTR [rsp+0x10],rdx
  408723:	test   rdi,rdi
  408726:	je     4089b3 <codadump_filter_remove@@Base+0x333>
  40872c:	mov    r14,rsi
  40872f:	test   rsi,rsi
  408732:	je     408994 <codadump_filter_remove@@Base+0x314>
  408738:	movzx  eax,BYTE PTR [rdi]
  40873b:	mov    rbp,rdi
  40873e:	lea    edx,[rax-0x9]
  408741:	cmp    dl,0x1
  408744:	ja     40875f <codadump_filter_remove@@Base+0xdf>
  408746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408750:	inc    rbp
  408753:	movzx  eax,BYTE PTR [rbp+0x0]
  408757:	lea    edx,[rax-0x9]
  40875a:	cmp    dl,0x1
  40875d:	jbe    408750 <codadump_filter_remove@@Base+0xd0>
  40875f:	cmp    al,0x20
  408761:	je     408750 <codadump_filter_remove@@Base+0xd0>
  408763:	cmp    al,0x3b
  408765:	jbe    4088a0 <codadump_filter_remove@@Base+0x220>
  40876b:	mov    ebx,0x1
  408770:	movabs rdx,0x800500000000001
  40877a:	nop    WORD PTR [rax+rax*1+0x0]
  408780:	movzx  eax,BYTE PTR [rbp+rbx*1+0x0]
  408785:	mov    r13d,ebx
  408788:	lea    r15,[rbp+rbx*1+0x0]
  40878d:	cmp    al,0x3b
  40878f:	jbe    4087a0 <codadump_filter_remove@@Base+0x120>
  408791:	inc    rbx
  408794:	jmp    408780 <codadump_filter_remove@@Base+0x100>
  408796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087a0:	bt     rdx,rax
  4087a4:	lea    r12,[rbx+0x1]
  4087a8:	jb     4087b0 <codadump_filter_remove@@Base+0x130>
  4087aa:	mov    rbx,r12
  4087ad:	jmp    408780 <codadump_filter_remove@@Base+0x100>
  4087af:	nop
  4087b0:	mov    edi,0x18
  4087b5:	mov    DWORD PTR [rsp+0x8],ebx
  4087b9:	call   403a00 <malloc@plt>
  4087be:	test   rax,rax
  4087c1:	mov    rdx,rax
  4087c4:	mov    QWORD PTR [r14],rax
  4087c7:	mov    r10d,DWORD PTR [rsp+0x8]
  4087cc:	je     40895b <codadump_filter_remove@@Base+0x2db>
  4087d2:	inc    r13d
  4087d5:	movsxd rdi,r13d
  4087d8:	mov    DWORD PTR [rsp+0x1c],r10d
  4087dd:	mov    QWORD PTR [rsp+0x8],rdx
  4087e2:	call   403a00 <malloc@plt>
  4087e7:	mov    rdx,QWORD PTR [rsp+0x8]
  4087ec:	test   rax,rax
  4087ef:	mov    QWORD PTR [rdx],rax
  4087f2:	mov    r10d,DWORD PTR [rsp+0x1c]
  4087f7:	je     4088e4 <codadump_filter_remove@@Base+0x264>
  4087fd:	mov    rdx,rbx
  408800:	mov    rsi,rbp
  408803:	mov    rdi,rax
  408806:	mov    DWORD PTR [rsp+0x8],r10d
  40880b:	call   4036c0 <strncpy@plt>
  408810:	mov    rax,QWORD PTR [r14]
  408813:	mov    r10d,DWORD PTR [rsp+0x8]
  408818:	mov    QWORD PTR [rax+0x8],0x0
  408820:	mov    rax,QWORD PTR [r14]
  408823:	mov    QWORD PTR [rax+0x10],0x0
  40882b:	mov    rax,QWORD PTR [r14]
  40882e:	mov    rsi,QWORD PTR [rax]
  408831:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  408836:	lea    edx,[rax-0x9]
  408839:	cmp    dl,0x1
  40883c:	jbe    408842 <codadump_filter_remove@@Base+0x1c2>
  40883e:	cmp    al,0x20
  408840:	jne    408868 <codadump_filter_remove@@Base+0x1e8>
  408842:	lea    ebx,[r10-0x1]
  408846:	movsxd rbx,ebx
  408849:	jmp    408853 <codadump_filter_remove@@Base+0x1d3>
  40884b:	nop    DWORD PTR [rax+rax*1+0x0]
  408850:	mov    rbx,rcx
  408853:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  408858:	lea    rcx,[rbx-0x1]
  40885c:	lea    edx,[rax-0x9]
  40885f:	cmp    dl,0x1
  408862:	jbe    408850 <codadump_filter_remove@@Base+0x1d0>
  408864:	cmp    al,0x20
  408866:	je     408850 <codadump_filter_remove@@Base+0x1d0>
  408868:	mov    BYTE PTR [rsi+rbx*1],0x0
  40886c:	movzx  eax,BYTE PTR [r15]
  408870:	cmp    al,0x2e
  408872:	je     408921 <codadump_filter_remove@@Base+0x2a1>
  408878:	cmp    al,0x3b
  40887a:	je     4088ca <codadump_filter_remove@@Base+0x24a>
  40887c:	cmp    al,0x2c
  40887e:	je     4088ca <codadump_filter_remove@@Base+0x24a>
  408880:	mov    rax,QWORD PTR [rsp+0x10]
  408885:	mov    QWORD PTR [rax],r15
  408888:	add    rsp,0x28
  40888c:	pop    rbx
  40888d:	pop    rbp
  40888e:	pop    r12
  408890:	pop    r13
  408892:	pop    r14
  408894:	pop    r15
  408896:	ret    
  408897:	nop    WORD PTR [rax+rax*1+0x0]
  4088a0:	movabs rdx,0x800500000000001
  4088aa:	bt     rdx,rax
  4088ae:	jae    40876b <codadump_filter_remove@@Base+0xeb>
  4088b4:	mov    QWORD PTR [r14],0x0
  4088bb:	add    rsp,0x28
  4088bf:	pop    rbx
  4088c0:	pop    rbp
  4088c1:	pop    r12
  4088c3:	pop    r13
  4088c5:	pop    r14
  4088c7:	pop    r15
  4088c9:	ret    
  4088ca:	mov    rax,QWORD PTR [rsp+0x10]
  4088cf:	add    rbp,r12
  4088d2:	mov    QWORD PTR [rax],rbp
  4088d5:	add    rsp,0x28
  4088d9:	pop    rbx
  4088da:	pop    rbp
  4088db:	pop    r12
  4088dd:	pop    r13
  4088df:	pop    r14
  4088e1:	pop    r15
  4088e3:	ret    
  4088e4:	mov    r8d,0x4c
  4088ea:	lea    rcx,[rip+0x3c17]        # 40c508 <_IO_stdin_used@@Base+0x508>
  4088f1:	mov    edx,r13d
  4088f4:	lea    rsi,[rip+0x3c75]        # 40c570 <_IO_stdin_used@@Base+0x570>
  4088fb:	mov    edi,0xffffffff
  408900:	mov    DWORD PTR [rsp+0x8],r10d
  408905:	call   4036f0 <coda_set_error@plt>
  40890a:	xor    eax,eax
  40890c:	call   40bc80 <handle_coda_error@@Base>
  408911:	mov    rax,QWORD PTR [r14]
  408914:	mov    r10d,DWORD PTR [rsp+0x8]
  408919:	mov    rax,QWORD PTR [rax]
  40891c:	jmp    4087fd <codadump_filter_remove@@Base+0x17d>
  408921:	mov    rax,QWORD PTR [r14]
  408924:	mov    rdx,QWORD PTR [rsp+0x10]
  408929:	lea    rsi,[rax+0x8]
  40892d:	lea    rdi,[rbp+r12*1+0x0]
  408932:	call   408710 <codadump_filter_remove@@Base+0x90>
  408937:	mov    rax,QWORD PTR [r14]
  40893a:	cmp    QWORD PTR [rax+0x8],0x0
  40893f:	jne    4088bb <codadump_filter_remove@@Base+0x23b>
  408945:	add    rsp,0x28
  408949:	pop    rbx
  40894a:	pop    rbp
  40894b:	pop    r12
  40894d:	pop    r13
  40894f:	mov    rdi,r14
  408952:	pop    r14
  408954:	pop    r15
  408956:	jmp    408680 <codadump_filter_remove@@Base>
  40895b:	mov    edx,0x18
  408960:	mov    r8d,0x45
  408966:	lea    rcx,[rip+0x3b9b]        # 40c508 <_IO_stdin_used@@Base+0x508>
  40896d:	lea    rsi,[rip+0x3754]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  408974:	mov    edi,0xffffffff
  408979:	xor    eax,eax
  40897b:	call   4036f0 <coda_set_error@plt>
  408980:	xor    eax,eax
  408982:	call   40bc80 <handle_coda_error@@Base>
  408987:	mov    rdx,QWORD PTR [r14]
  40898a:	mov    r10d,DWORD PTR [rsp+0x8]
  40898f:	jmp    4087d2 <codadump_filter_remove@@Base+0x152>
  408994:	lea    rcx,[rip+0x3cc5]        # 40c660 <_IO_stdin_used@@Base+0x660>
  40899b:	mov    edx,0x2d
  4089a0:	lea    rsi,[rip+0x3b61]        # 40c508 <_IO_stdin_used@@Base+0x508>
  4089a7:	lea    rdi,[rip+0x3bf6]        # 40c5a4 <_IO_stdin_used@@Base+0x5a4>
  4089ae:	call   403860 <__assert_fail@plt>
  4089b3:	lea    rcx,[rip+0x3ca6]        # 40c660 <_IO_stdin_used@@Base+0x660>
  4089ba:	mov    edx,0x2c
  4089bf:	lea    rsi,[rip+0x3b42]        # 40c508 <_IO_stdin_used@@Base+0x508>
  4089c6:	lea    rdi,[rip+0x3be6]        # 40c5b3 <_IO_stdin_used@@Base+0x5b3>
  4089cd:	call   403860 <__assert_fail@plt>
  4089d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4089dd:	nop    DWORD PTR [rax]
  4089e0:	push   rbp
  4089e1:	push   rbx
  4089e2:	sub    rsp,0x18
  4089e6:	mov    QWORD PTR [rsp+0x8],rsi
  4089eb:	test   rsi,rsi
  4089ee:	je     408a1e <codadump_filter_remove@@Base+0x39e>
  4089f0:	mov    rbp,QWORD PTR [rdi]
  4089f3:	mov    rbx,rsi
  4089f6:	test   rbp,rbp
  4089f9:	je     408a70 <codadump_filter_remove@@Base+0x3f0>
  4089fb:	mov    rsi,QWORD PTR [rsi]
  4089fe:	mov    rdi,QWORD PTR [rbp+0x0]
  408a02:	call   403910 <strcmp@plt>
  408a07:	test   eax,eax
  408a09:	je     408a28 <codadump_filter_remove@@Base+0x3a8>
  408a0b:	cmp    QWORD PTR [rbp+0x10],0x0
  408a10:	je     408a60 <codadump_filter_remove@@Base+0x3e0>
  408a12:	lea    rdi,[rbp+0x10]
  408a16:	mov    rsi,rbx
  408a19:	call   4089e0 <codadump_filter_remove@@Base+0x360>
  408a1e:	add    rsp,0x18
  408a22:	pop    rbx
  408a23:	pop    rbp
  408a24:	ret    
  408a25:	nop    DWORD PTR [rax]
  408a28:	cmp    QWORD PTR [rbp+0x8],0x0
  408a2d:	je     408a4e <codadump_filter_remove@@Base+0x3ce>
  408a2f:	mov    rsi,QWORD PTR [rbx+0x8]
  408a33:	lea    rdi,[rbp+0x8]
  408a37:	test   rsi,rsi
  408a3a:	je     408a80 <codadump_filter_remove@@Base+0x400>
  408a3c:	call   4089e0 <codadump_filter_remove@@Base+0x360>
  408a41:	mov    rax,QWORD PTR [rsp+0x8]
  408a46:	mov    QWORD PTR [rax+0x8],0x0
  408a4e:	lea    rdi,[rsp+0x8]
  408a53:	call   408680 <codadump_filter_remove@@Base>
  408a58:	add    rsp,0x18
  408a5c:	pop    rbx
  408a5d:	pop    rbp
  408a5e:	ret    
  408a5f:	nop
  408a60:	mov    QWORD PTR [rbp+0x10],rbx
  408a64:	add    rsp,0x18
  408a68:	pop    rbx
  408a69:	pop    rbp
  408a6a:	ret    
  408a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	mov    QWORD PTR [rdi],rsi
  408a73:	add    rsp,0x18
  408a77:	pop    rbx
  408a78:	pop    rbp
  408a79:	ret    
  408a7a:	nop    WORD PTR [rax+rax*1+0x0]
  408a80:	call   408680 <codadump_filter_remove@@Base>
  408a85:	jmp    408a4e <codadump_filter_remove@@Base+0x3ce>
  408a87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408a90 <codadump_filter_create@@Base>:
  408a90:	endbr64 
  408a94:	push   r12
  408a96:	push   rbp
  408a97:	push   rbx
  408a98:	sub    rsp,0x20
  408a9c:	mov    rax,QWORD PTR fs:0x28
  408aa5:	mov    QWORD PTR [rsp+0x18],rax
  408aaa:	xor    eax,eax
  408aac:	mov    QWORD PTR [rsp],0x0
  408ab4:	mov    QWORD PTR [rsp+0x8],0x0
  408abd:	mov    QWORD PTR [rsp+0x10],rdi
  408ac2:	test   rdi,rdi
  408ac5:	je     408b40 <codadump_filter_create@@Base+0xb0>
  408ac7:	cmp    BYTE PTR [rdi],0x0
  408aca:	je     408b40 <codadump_filter_create@@Base+0xb0>
  408acc:	lea    r12,[rsp+0x10]
  408ad1:	lea    rbp,[rsp+0x8]
  408ad6:	mov    rbx,rsp
  408ad9:	jmp    408af8 <codadump_filter_create@@Base+0x68>
  408adb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae0:	call   4089e0 <codadump_filter_remove@@Base+0x360>
  408ae5:	mov    QWORD PTR [rsp+0x8],0x0
  408aee:	mov    rdi,QWORD PTR [rsp+0x10]
  408af3:	cmp    BYTE PTR [rdi],0x0
  408af6:	je     408b38 <codadump_filter_create@@Base+0xa8>
  408af8:	mov    rsi,rbp
  408afb:	mov    rdx,r12
  408afe:	call   408710 <codadump_filter_remove@@Base+0x90>
  408b03:	mov    rsi,QWORD PTR [rsp+0x8]
  408b08:	mov    rdi,rbx
  408b0b:	test   rsi,rsi
  408b0e:	jne    408ae0 <codadump_filter_create@@Base+0x50>
  408b10:	call   408680 <codadump_filter_remove@@Base>
  408b15:	mov    rax,QWORD PTR [rsp]
  408b19:	mov    rcx,QWORD PTR [rsp+0x18]
  408b1e:	xor    rcx,QWORD PTR fs:0x28
  408b27:	jne    408b44 <codadump_filter_create@@Base+0xb4>
  408b29:	add    rsp,0x20
  408b2d:	pop    rbx
  408b2e:	pop    rbp
  408b2f:	pop    r12
  408b31:	ret    
  408b32:	nop    WORD PTR [rax+rax*1+0x0]
  408b38:	mov    rax,QWORD PTR [rsp]
  408b3c:	jmp    408b19 <codadump_filter_create@@Base+0x89>
  408b3e:	xchg   ax,ax
  408b40:	xor    eax,eax
  408b42:	jmp    408b19 <codadump_filter_create@@Base+0x89>
  408b44:	call   403850 <__stack_chk_fail@plt>
  408b49:	nop    DWORD PTR [rax+0x0]

0000000000408b50 <codadump_filter_get_fieldname@@Base>:
  408b50:	endbr64 
  408b54:	test   rdi,rdi
  408b57:	je     408b5d <codadump_filter_get_fieldname@@Base+0xd>
  408b59:	mov    rax,QWORD PTR [rdi]
  408b5c:	ret    
  408b5d:	push   rax
  408b5e:	lea    rcx,[rip+0x3abb]        # 40c620 <_IO_stdin_used@@Base+0x620>
  408b65:	mov    edx,0xd8
  408b6a:	lea    rsi,[rip+0x3997]        # 40c508 <_IO_stdin_used@@Base+0x508>
  408b71:	lea    rdi,[rip+0x3a2c]        # 40c5a4 <_IO_stdin_used@@Base+0x5a4>
  408b78:	call   403860 <__assert_fail@plt>
  408b7d:	nop    DWORD PTR [rax]

0000000000408b80 <codadump_filter_get_subfilter@@Base>:
  408b80:	endbr64 
  408b84:	test   rdi,rdi
  408b87:	je     408b8e <codadump_filter_get_subfilter@@Base+0xe>
  408b89:	mov    rax,QWORD PTR [rdi+0x8]
  408b8d:	ret    
  408b8e:	push   rax
  408b8f:	lea    rcx,[rip+0x3a6a]        # 40c600 <_IO_stdin_used@@Base+0x600>
  408b96:	mov    edx,0xdf
  408b9b:	lea    rsi,[rip+0x3966]        # 40c508 <_IO_stdin_used@@Base+0x508>
  408ba2:	lea    rdi,[rip+0x39fb]        # 40c5a4 <_IO_stdin_used@@Base+0x5a4>
  408ba9:	call   403860 <__assert_fail@plt>
  408bae:	xchg   ax,ax

0000000000408bb0 <codadump_filter_get_next_filter@@Base>:
  408bb0:	endbr64 
  408bb4:	test   rdi,rdi
  408bb7:	je     408bbe <codadump_filter_get_next_filter@@Base+0xe>
  408bb9:	mov    rax,QWORD PTR [rdi+0x10]
  408bbd:	ret    
  408bbe:	push   rax
  408bbf:	lea    rcx,[rip+0x3a1a]        # 40c5e0 <_IO_stdin_used@@Base+0x5e0>
  408bc6:	mov    edx,0xe6
  408bcb:	lea    rsi,[rip+0x3936]        # 40c508 <_IO_stdin_used@@Base+0x508>
  408bd2:	lea    rdi,[rip+0x39cb]        # 40c5a4 <_IO_stdin_used@@Base+0x5a4>
  408bd9:	call   403860 <__assert_fail@plt>
  408bde:	xchg   ax,ax
  408be0:	sub    rsp,0xd8
  408be7:	mov    QWORD PTR [rsp+0x28],rsi
  408bec:	mov    QWORD PTR [rsp+0x30],rdx
  408bf1:	mov    QWORD PTR [rsp+0x38],rcx
  408bf6:	mov    QWORD PTR [rsp+0x40],r8
  408bfb:	mov    QWORD PTR [rsp+0x48],r9
  408c00:	test   al,al
  408c02:	je     408c43 <codadump_filter_get_next_filter@@Base+0x93>
  408c04:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  408c0a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  408c10:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  408c16:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  408c1f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  408c28:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  408c31:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  408c3a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  408c43:	mov    rax,QWORD PTR fs:0x28
  408c4c:	mov    QWORD PTR [rsp+0x18],rax
  408c51:	xor    eax,eax
  408c53:	lea    rax,[rsp+0xe0]
  408c5b:	mov    QWORD PTR [rsp+0x8],rax
  408c60:	lea    rax,[rsp+0x20]
  408c65:	mov    QWORD PTR [rsp+0x10],rax
  408c6a:	mov    rax,0x4114c0
  408c71:	mov    rdx,rdi
  408c74:	mov    rdi,QWORD PTR [rax]
  408c77:	mov    rcx,rsp
  408c7a:	mov    esi,0x1
  408c7f:	mov    DWORD PTR [rsp],0x8
  408c86:	mov    DWORD PTR [rsp+0x4],0x30
  408c8e:	call   4036b0 <__vfprintf_chk@plt>
  408c93:	mov    rdx,QWORD PTR [rsp+0x18]
  408c98:	xor    rdx,QWORD PTR fs:0x28
  408ca1:	jne    408cab <codadump_filter_get_next_filter@@Base+0xfb>
  408ca3:	add    rsp,0xd8
  408caa:	ret    
  408cab:	call   403850 <__stack_chk_fail@plt>
  408cb0:	test   rsi,rsi
  408cb3:	jle    408de0 <codadump_filter_get_next_filter@@Base+0x230>
  408cb9:	push   r12
  408cbb:	lea    r12,[rip+0x335c]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  408cc2:	push   rbp
  408cc3:	lea    rbp,[rdi+rsi*1]
  408cc7:	push   rbx
  408cc8:	mov    rbx,rdi
  408ccb:	jmp    408d18 <codadump_filter_get_next_filter@@Base+0x168>
  408ccd:	nop    DWORD PTR [rax]
  408cd0:	cmp    sil,0x9
  408cd4:	je     408da8 <codadump_filter_get_next_filter@@Base+0x1f8>
  408cda:	cmp    sil,0xa
  408cde:	je     408d90 <codadump_filter_get_next_filter@@Base+0x1e0>
  408ce4:	cmp    sil,0x8
  408ce8:	je     408d80 <codadump_filter_get_next_filter@@Base+0x1d0>
  408cee:	lea    eax,[rsi-0x20]
  408cf1:	cmp    al,0x5e
  408cf3:	ja     408dc0 <codadump_filter_get_next_filter@@Base+0x210>
  408cf9:	lea    rdi,[rip+0x3504]        # 40c204 <_IO_stdin_used@@Base+0x204>
  408d00:	xor    eax,eax
  408d02:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d07:	nop    WORD PTR [rax+rax*1+0x0]
  408d10:	inc    rbx
  408d13:	cmp    rbp,rbx
  408d16:	je     408d4b <codadump_filter_get_next_filter@@Base+0x19b>
  408d18:	movsx  esi,BYTE PTR [rbx]
  408d1b:	cmp    sil,0xc
  408d1f:	je     408d50 <codadump_filter_get_next_filter@@Base+0x1a0>
  408d21:	jle    408cd0 <codadump_filter_get_next_filter@@Base+0x120>
  408d23:	cmp    sil,0x22
  408d27:	je     408d70 <codadump_filter_get_next_filter@@Base+0x1c0>
  408d29:	cmp    sil,0x5c
  408d2d:	je     408d60 <codadump_filter_get_next_filter@@Base+0x1b0>
  408d2f:	cmp    sil,0xd
  408d33:	jne    408cee <codadump_filter_get_next_filter@@Base+0x13e>
  408d35:	lea    rdi,[rip+0x32e5]        # 40c021 <_IO_stdin_used@@Base+0x21>
  408d3c:	xor    eax,eax
  408d3e:	inc    rbx
  408d41:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d46:	cmp    rbp,rbx
  408d49:	jne    408d18 <codadump_filter_get_next_filter@@Base+0x168>
  408d4b:	pop    rbx
  408d4c:	pop    rbp
  408d4d:	pop    r12
  408d4f:	ret    
  408d50:	mov    rdi,r12
  408d53:	xor    eax,eax
  408d55:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d5a:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408d5c:	nop    DWORD PTR [rax+0x0]
  408d60:	lea    rdi,[rip+0x32bd]        # 40c024 <_IO_stdin_used@@Base+0x24>
  408d67:	xor    eax,eax
  408d69:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d6e:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408d70:	lea    rdi,[rip+0x38f9]        # 40c670 <_IO_stdin_used@@Base+0x670>
  408d77:	xor    eax,eax
  408d79:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d7e:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408d80:	lea    rdi,[rip+0x328b]        # 40c012 <_IO_stdin_used@@Base+0x12>
  408d87:	xor    eax,eax
  408d89:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d8e:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408d90:	lea    rdi,[rip+0x3281]        # 40c018 <_IO_stdin_used@@Base+0x18>
  408d97:	xor    eax,eax
  408d99:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408d9e:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408da3:	nop    DWORD PTR [rax+rax*1+0x0]
  408da8:	lea    rdi,[rip+0x3266]        # 40c015 <_IO_stdin_used@@Base+0x15>
  408daf:	xor    eax,eax
  408db1:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408db6:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	movzx  esi,sil
  408dc4:	lea    rdi,[rip+0x38a8]        # 40c673 <_IO_stdin_used@@Base+0x673>
  408dcb:	xor    eax,eax
  408dcd:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408dd2:	jmp    408d10 <codadump_filter_get_next_filter@@Base+0x160>
  408dd7:	nop    WORD PTR [rax+rax*1+0x0]
  408de0:	ret    
  408de1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408dec:	nop    DWORD PTR [rax+0x0]
  408df0:	push   r14
  408df2:	push   r13
  408df4:	push   r12
  408df6:	push   rbp
  408df7:	push   rbx
  408df8:	mov    rbx,rdi
  408dfb:	sub    rsp,0xa0
  408e02:	mov    edi,DWORD PTR [rip+0x7540]        # 410348 <__bss_start@@Base+0xc>
  408e08:	mov    rax,QWORD PTR fs:0x28
  408e11:	mov    QWORD PTR [rsp+0x98],rax
  408e19:	xor    eax,eax
  408e1b:	mov    DWORD PTR [rsp+0x4],0x0
  408e23:	test   edi,edi
  408e25:	jne    408f18 <codadump_filter_get_next_filter@@Base+0x368>
  408e2b:	mov    rsi,rsp
  408e2e:	mov    rdi,rbx
  408e31:	call   403800 <coda_cursor_get_type_class@plt>
  408e36:	test   eax,eax
  408e38:	jne    408f08 <codadump_filter_get_next_filter@@Base+0x358>
  408e3e:	cmp    DWORD PTR [rsp],0x6
  408e42:	ja     408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  408e48:	mov    eax,DWORD PTR [rsp]
  408e4b:	lea    rdx,[rip+0x38f2]        # 40c744 <_IO_stdin_used@@Base+0x744>
  408e52:	movsxd rax,DWORD PTR [rdx+rax*4]
  408e56:	add    rax,rdx
  408e59:	notrack jmp rax
  408e5c:	nop    DWORD PTR [rax+0x0]
  408e60:	lea    rsi,[rsp+0x28]
  408e65:	mov    rdi,rbx
  408e68:	call   4039a0 <coda_cursor_read_double@plt>
  408e6d:	test   eax,eax
  408e6f:	jne    409720 <codadump_filter_get_next_filter@@Base+0xb70>
  408e75:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  408e7b:	call   4039b0 <coda_isNaN@plt>
  408e80:	test   eax,eax
  408e82:	jne    4095e5 <codadump_filter_get_next_filter@@Base+0xa35>
  408e88:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  408e8e:	call   4037b0 <coda_isInf@plt>
  408e93:	test   eax,eax
  408e95:	jne    4095e5 <codadump_filter_get_next_filter@@Base+0xa35>
  408e9b:	lea    rbx,[rsp+0x70]
  408ea0:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  408ea6:	mov    rsi,rbx
  408ea9:	lea    rdi,[rip+0x37eb]        # 40c69b <_IO_stdin_used@@Base+0x69b>
  408eb0:	call   403710 <coda_time_double_to_string@plt>
  408eb5:	test   eax,eax
  408eb7:	je     409836 <codadump_filter_get_next_filter@@Base+0xc86>
  408ebd:	lea    rdi,[rip+0x37f4]        # 40c6b8 <_IO_stdin_used@@Base+0x6b8>
  408ec4:	xor    eax,eax
  408ec6:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ed0:	mov    eax,DWORD PTR [rsp+0x4]
  408ed4:	test   eax,eax
  408ed6:	jne    408f80 <codadump_filter_get_next_filter@@Base+0x3d0>
  408edc:	mov    rax,QWORD PTR [rsp+0x98]
  408ee4:	xor    rax,QWORD PTR fs:0x28
  408eed:	jne    40984c <codadump_filter_get_next_filter@@Base+0xc9c>
  408ef3:	add    rsp,0xa0
  408efa:	pop    rbx
  408efb:	pop    rbp
  408efc:	pop    r12
  408efe:	pop    r13
  408f00:	pop    r14
  408f02:	ret    
  408f03:	nop    DWORD PTR [rax+rax*1+0x0]
  408f08:	xor    eax,eax
  408f0a:	call   40bc80 <handle_coda_error@@Base>
  408f0f:	jmp    408e3e <codadump_filter_get_next_filter@@Base+0x28e>
  408f14:	nop    DWORD PTR [rax+0x0]
  408f18:	lea    rsi,[rsp+0x4]
  408f1d:	mov    rdi,rbx
  408f20:	call   4037f0 <coda_cursor_has_attributes@plt>
  408f25:	test   eax,eax
  408f27:	jne    409138 <codadump_filter_get_next_filter@@Base+0x588>
  408f2d:	mov    esi,DWORD PTR [rsp+0x4]
  408f31:	test   esi,esi
  408f33:	je     408e2b <codadump_filter_get_next_filter@@Base+0x27b>
  408f39:	lea    rdi,[rip+0x373a]        # 40c67a <_IO_stdin_used@@Base+0x67a>
  408f40:	xor    eax,eax
  408f42:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408f47:	mov    rdi,rbx
  408f4a:	call   403a20 <coda_cursor_goto_attributes@plt>
  408f4f:	test   eax,eax
  408f51:	jne    4095f0 <codadump_filter_get_next_filter@@Base+0xa40>
  408f57:	mov    rdi,rbx
  408f5a:	call   408df0 <codadump_filter_get_next_filter@@Base+0x240>
  408f5f:	mov    rdi,rbx
  408f62:	call   403930 <coda_cursor_goto_parent@plt>
  408f67:	lea    rdi,[rip+0x3715]        # 40c683 <_IO_stdin_used@@Base+0x683>
  408f6e:	xor    eax,eax
  408f70:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408f75:	jmp    408e2b <codadump_filter_get_next_filter@@Base+0x27b>
  408f7a:	nop    WORD PTR [rax+rax*1+0x0]
  408f80:	lea    rdi,[rip+0x370d]        # 40c694 <_IO_stdin_used@@Base+0x694>
  408f87:	xor    eax,eax
  408f89:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  408f8e:	jmp    408edc <codadump_filter_get_next_filter@@Base+0x32c>
  408f93:	nop    DWORD PTR [rax+rax*1+0x0]
  408f98:	lea    rsi,[rsp+0x20]
  408f9d:	mov    rdi,rbx
  408fa0:	call   403900 <coda_cursor_get_read_type@plt>
  408fa5:	test   eax,eax
  408fa7:	jne    409270 <codadump_filter_get_next_filter@@Base+0x6c0>
  408fad:	mov    eax,DWORD PTR [rsp+0x20]
  408fb1:	inc    eax
  408fb3:	cmp    eax,0xd
  408fb6:	ja     408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  408fbc:	lea    rdx,[rip+0x379d]        # 40c760 <_IO_stdin_used@@Base+0x760>
  408fc3:	movsxd rax,DWORD PTR [rdx+rax*4]
  408fc7:	add    rax,rdx
  408fca:	notrack jmp rax
  408fcd:	nop    DWORD PTR [rax]
  408fd0:	lea    rsi,[rsp+0x18]
  408fd5:	mov    rdi,rbx
  408fd8:	call   403880 <coda_cursor_get_special_type@plt>
  408fdd:	test   eax,eax
  408fdf:	jne    409280 <codadump_filter_get_next_filter@@Base+0x6d0>
  408fe5:	mov    eax,DWORD PTR [rsp+0x18]
  408fe9:	cmp    eax,0x1
  408fec:	je     4095d0 <codadump_filter_get_next_filter@@Base+0xa20>
  408ff2:	test   eax,eax
  408ff4:	je     409120 <codadump_filter_get_next_filter@@Base+0x570>
  408ffa:	cmp    eax,0x2
  408ffd:	je     408e60 <codadump_filter_get_next_filter@@Base+0x2b0>
  409003:	cmp    eax,0x3
  409006:	jne    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40900c:	lea    rdx,[rsp+0x28]
  409011:	lea    rsi,[rsp+0x20]
  409016:	mov    rdi,rbx
  409019:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  40901e:	test   eax,eax
  409020:	jne    409590 <codadump_filter_get_next_filter@@Base+0x9e0>
  409026:	vmovsd xmm1,QWORD PTR [rsp+0x28]
  40902c:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  409032:	lea    rdi,[rip+0x369a]        # 40c6d3 <_IO_stdin_used@@Base+0x6d3>
  409039:	mov    eax,0x2
  40903e:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409043:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409048:	nop    DWORD PTR [rax+rax*1+0x0]
  409050:	lea    rdi,[rip+0x3635]        # 40c68c <_IO_stdin_used@@Base+0x68c>
  409057:	xor    eax,eax
  409059:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40905e:	lea    rsi,[rsp+0x10]
  409063:	mov    rdi,rbx
  409066:	call   403730 <coda_cursor_get_num_elements@plt>
  40906b:	test   eax,eax
  40906d:	jne    409250 <codadump_filter_get_next_filter@@Base+0x6a0>
  409073:	cmp    QWORD PTR [rsp+0x10],0x0
  409079:	jg     409148 <codadump_filter_get_next_filter@@Base+0x598>
  40907f:	lea    rdi,[rip+0x360e]        # 40c694 <_IO_stdin_used@@Base+0x694>
  409086:	xor    eax,eax
  409088:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40908d:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409092:	nop    WORD PTR [rax+rax*1+0x0]
  409098:	lea    rdi,[rip+0x3706]        # 40c7a5 <_IO_stdin_used@@Base+0x7a5>
  40909f:	xor    eax,eax
  4090a1:	lea    rbp,[rsp+0x30]
  4090a6:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4090ab:	lea    rsi,[rsp+0x28]
  4090b0:	mov    rdx,rbp
  4090b3:	mov    rdi,rbx
  4090b6:	call   403ab0 <coda_cursor_get_array_dim@plt>
  4090bb:	test   eax,eax
  4090bd:	jne    409260 <codadump_filter_get_next_filter@@Base+0x6b0>
  4090c3:	mov    eax,DWORD PTR [rsp+0x28]
  4090c7:	test   eax,eax
  4090c9:	js     409109 <codadump_filter_get_next_filter@@Base+0x559>
  4090cb:	je     4096a8 <codadump_filter_get_next_filter@@Base+0xaf8>
  4090d1:	lea    ecx,[rax-0x1]
  4090d4:	lea    rax,[rbp+0x8]
  4090d8:	mov    rdx,rbp
  4090db:	lea    rcx,[rax+rcx*8]
  4090df:	mov    ebp,0x1
  4090e4:	jmp    4090f4 <codadump_filter_get_next_filter@@Base+0x544>
  4090e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090f0:	add    rax,0x8
  4090f4:	imul   rbp,QWORD PTR [rdx]
  4090f8:	mov    rdx,rax
  4090fb:	cmp    rcx,rax
  4090fe:	jne    4090f0 <codadump_filter_get_next_filter@@Base+0x540>
  409100:	test   rbp,rbp
  409103:	jg     409600 <codadump_filter_get_next_filter@@Base+0xa50>
  409109:	lea    rdi,[rip+0x36bc]        # 40c7cc <_IO_stdin_used@@Base+0x7cc>
  409110:	xor    eax,eax
  409112:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409117:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40911c:	nop    DWORD PTR [rax+0x0]
  409120:	lea    rdi,[rip+0x356f]        # 40c696 <_IO_stdin_used@@Base+0x696>
  409127:	xor    eax,eax
  409129:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40912e:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409133:	nop    DWORD PTR [rax+rax*1+0x0]
  409138:	xor    eax,eax
  40913a:	call   40bc80 <handle_coda_error@@Base>
  40913f:	jmp    408f2d <codadump_filter_get_next_filter@@Base+0x37d>
  409144:	nop    DWORD PTR [rax+0x0]
  409148:	lea    rsi,[rsp+0x18]
  40914d:	mov    rdi,rbx
  409150:	call   4037a0 <coda_cursor_get_type@plt>
  409155:	test   eax,eax
  409157:	jne    409670 <codadump_filter_get_next_filter@@Base+0xac0>
  40915d:	mov    rdi,QWORD PTR [rsp+0x18]
  409162:	lea    rsi,[rsp+0x8]
  409167:	call   403a50 <coda_type_get_record_union_status@plt>
  40916c:	test   eax,eax
  40916e:	jne    409660 <codadump_filter_get_next_filter@@Base+0xab0>
  409174:	mov    ecx,DWORD PTR [rsp+0x8]
  409178:	test   ecx,ecx
  40917a:	jne    409290 <codadump_filter_get_next_filter@@Base+0x6e0>
  409180:	mov    rdi,rbx
  409183:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  409188:	test   eax,eax
  40918a:	jne    409710 <codadump_filter_get_next_filter@@Base+0xb60>
  409190:	cmp    QWORD PTR [rsp+0x10],0x0
  409196:	mov    QWORD PTR [rsp+0x20],0x0
  40919f:	jle    40923d <codadump_filter_get_next_filter@@Base+0x68d>
  4091a5:	mov    r12d,0x1
  4091ab:	xor    esi,esi
  4091ad:	lea    rbp,[rsp+0xc]
  4091b2:	lea    r13,[rsp+0x28]
  4091b7:	mov    rdi,QWORD PTR [rsp+0x18]
  4091bc:	mov    rdx,rbp
  4091bf:	call   4036d0 <coda_type_get_record_field_hidden_status@plt>
  4091c4:	test   eax,eax
  4091c6:	jne    4095c0 <codadump_filter_get_next_filter@@Base+0xa10>
  4091cc:	mov    edx,DWORD PTR [rsp+0xc]
  4091d0:	test   edx,edx
  4091d2:	jne    409215 <codadump_filter_get_next_filter@@Base+0x665>
  4091d4:	test   r12d,r12d
  4091d7:	je     409690 <codadump_filter_get_next_filter@@Base+0xae0>
  4091dd:	mov    rsi,QWORD PTR [rsp+0x20]
  4091e2:	mov    rdi,QWORD PTR [rsp+0x18]
  4091e7:	mov    rdx,r13
  4091ea:	call   403c10 <coda_type_get_record_field_name@plt>
  4091ef:	test   eax,eax
  4091f1:	jne    409680 <codadump_filter_get_next_filter@@Base+0xad0>
  4091f7:	mov    rsi,QWORD PTR [rsp+0x28]
  4091fc:	lea    rdi,[rip+0x348b]        # 40c68e <_IO_stdin_used@@Base+0x68e>
  409203:	xor    eax,eax
  409205:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40920a:	mov    rdi,rbx
  40920d:	call   408df0 <codadump_filter_get_next_filter@@Base+0x240>
  409212:	xor    r12d,r12d
  409215:	mov    rax,QWORD PTR [rsp+0x10]
  40921a:	mov    rsi,QWORD PTR [rsp+0x20]
  40921f:	lea    rdx,[rax-0x1]
  409223:	cmp    rdx,rsi
  409226:	jg     4095a0 <codadump_filter_get_next_filter@@Base+0x9f0>
  40922c:	inc    rsi
  40922f:	mov    QWORD PTR [rsp+0x20],rsi
  409234:	cmp    rsi,rax
  409237:	jl     4091b7 <codadump_filter_get_next_filter@@Base+0x607>
  40923d:	mov    rdi,rbx
  409240:	call   403930 <coda_cursor_goto_parent@plt>
  409245:	jmp    40907f <codadump_filter_get_next_filter@@Base+0x4cf>
  40924a:	nop    WORD PTR [rax+rax*1+0x0]
  409250:	xor    eax,eax
  409252:	call   40bc80 <handle_coda_error@@Base>
  409257:	jmp    409073 <codadump_filter_get_next_filter@@Base+0x4c3>
  40925c:	nop    DWORD PTR [rax+0x0]
  409260:	xor    eax,eax
  409262:	call   40bc80 <handle_coda_error@@Base>
  409267:	jmp    4090c3 <codadump_filter_get_next_filter@@Base+0x513>
  40926c:	nop    DWORD PTR [rax+0x0]
  409270:	xor    eax,eax
  409272:	call   40bc80 <handle_coda_error@@Base>
  409277:	jmp    408fad <codadump_filter_get_next_filter@@Base+0x3fd>
  40927c:	nop    DWORD PTR [rax+0x0]
  409280:	xor    eax,eax
  409282:	call   40bc80 <handle_coda_error@@Base>
  409287:	jmp    408fe5 <codadump_filter_get_next_filter@@Base+0x435>
  40928c:	nop    DWORD PTR [rax+0x0]
  409290:	lea    rsi,[rsp+0x20]
  409295:	mov    rdi,rbx
  409298:	call   403b80 <coda_cursor_get_available_union_field_index@plt>
  40929d:	test   eax,eax
  40929f:	jne    409700 <codadump_filter_get_next_filter@@Base+0xb50>
  4092a5:	mov    rsi,QWORD PTR [rsp+0x20]
  4092aa:	mov    rdi,QWORD PTR [rsp+0x18]
  4092af:	lea    rdx,[rsp+0x28]
  4092b4:	call   403c10 <coda_type_get_record_field_name@plt>
  4092b9:	test   eax,eax
  4092bb:	jne    4096f0 <codadump_filter_get_next_filter@@Base+0xb40>
  4092c1:	mov    rsi,QWORD PTR [rsp+0x20]
  4092c6:	mov    rdi,rbx
  4092c9:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  4092ce:	test   eax,eax
  4092d0:	jne    4096e0 <codadump_filter_get_next_filter@@Base+0xb30>
  4092d6:	mov    rsi,QWORD PTR [rsp+0x28]
  4092db:	lea    rdi,[rip+0x33ac]        # 40c68e <_IO_stdin_used@@Base+0x68e>
  4092e2:	xor    eax,eax
  4092e4:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4092e9:	mov    rdi,rbx
  4092ec:	call   408df0 <codadump_filter_get_next_filter@@Base+0x240>
  4092f1:	mov    rdi,rbx
  4092f4:	call   403930 <coda_cursor_goto_parent@plt>
  4092f9:	jmp    40907f <codadump_filter_get_next_filter@@Base+0x4cf>
  4092fe:	xchg   ax,ax
  409300:	lea    rsi,[rsp+0x28]
  409305:	mov    rdi,rbx
  409308:	call   403980 <coda_cursor_get_string_length@plt>
  40930d:	test   eax,eax
  40930f:	jne    409752 <codadump_filter_get_next_filter@@Base+0xba2>
  409315:	mov    rax,QWORD PTR [rsp+0x28]
  40931a:	lea    rbp,[rax+0x1]
  40931e:	mov    rdi,rbp
  409321:	call   403a00 <malloc@plt>
  409326:	mov    r12,rax
  409329:	test   rax,rax
  40932c:	je     4097ca <codadump_filter_get_next_filter@@Base+0xc1a>
  409332:	mov    rdx,rbp
  409335:	mov    rsi,r12
  409338:	mov    rdi,rbx
  40933b:	call   403920 <coda_cursor_read_string@plt>
  409340:	test   eax,eax
  409342:	jne    40978e <codadump_filter_get_next_filter@@Base+0xbde>
  409348:	lea    rdi,[rip+0x3322]        # 40c671 <_IO_stdin_used@@Base+0x671>
  40934f:	xor    eax,eax
  409351:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409356:	mov    rsi,QWORD PTR [rsp+0x28]
  40935b:	mov    rdi,r12
  40935e:	call   408cb0 <codadump_filter_get_next_filter@@Base+0x100>
  409363:	mov    rsi,QWORD PTR [rsp+0x28]
  409368:	lea    rdi,[rip+0x3302]        # 40c671 <_IO_stdin_used@@Base+0x671>
  40936f:	xor    eax,eax
  409371:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409376:	mov    rdi,r12
  409379:	call   403680 <free@plt>
  40937e:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409383:	nop    DWORD PTR [rax+rax*1+0x0]
  409388:	lea    rbp,[rsp+0x28]
  40938d:	mov    rsi,rbp
  409390:	mov    rdi,rbx
  409393:	call   403a30 <coda_cursor_read_char@plt>
  409398:	test   eax,eax
  40939a:	jne    40975e <codadump_filter_get_next_filter@@Base+0xbae>
  4093a0:	lea    rdi,[rip+0x32ca]        # 40c671 <_IO_stdin_used@@Base+0x671>
  4093a7:	xor    eax,eax
  4093a9:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4093ae:	mov    rdi,rbp
  4093b1:	mov    esi,0x1
  4093b6:	call   408cb0 <codadump_filter_get_next_filter@@Base+0x100>
  4093bb:	lea    rdi,[rip+0x32af]        # 40c671 <_IO_stdin_used@@Base+0x671>
  4093c2:	xor    eax,eax
  4093c4:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4093c9:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  4093ce:	xchg   ax,ax
  4093d0:	lea    rsi,[rsp+0x28]
  4093d5:	mov    rdi,rbx
  4093d8:	call   4039a0 <coda_cursor_read_double@plt>
  4093dd:	test   eax,eax
  4093df:	jne    40979a <codadump_filter_get_next_filter@@Base+0xbea>
  4093e5:	cmp    DWORD PTR [rsp+0x20],0x8
  4093ea:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  4093f0:	je     40973c <codadump_filter_get_next_filter@@Base+0xb8c>
  4093f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409400:	lea    rdi,[rip+0x2c2f]        # 40c036 <_IO_stdin_used@@Base+0x36>
  409407:	mov    eax,0x1
  40940c:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409411:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409420:	lea    rsi,[rsp+0x28]
  409425:	mov    rdi,rbx
  409428:	call   403ba0 <coda_cursor_read_int32@plt>
  40942d:	test   eax,eax
  40942f:	jne    409776 <codadump_filter_get_next_filter@@Base+0xbc6>
  409435:	movsxd rsi,DWORD PTR [rsp+0x28]
  40943a:	lea    rdi,[rip+0x335b]        # 40c79c <_IO_stdin_used@@Base+0x79c>
  409441:	xor    eax,eax
  409443:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409448:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40944d:	nop    DWORD PTR [rax]
  409450:	lea    rsi,[rsp+0x28]
  409455:	mov    rdi,rbx
  409458:	call   403b50 <coda_cursor_get_bit_size@plt>
  40945d:	test   eax,eax
  40945f:	jne    4097a6 <codadump_filter_get_next_filter@@Base+0xbf6>
  409465:	mov    r13,QWORD PTR [rsp+0x28]
  40946a:	xor    ebp,ebp
  40946c:	mov    rax,r13
  40946f:	test   r13b,0x7
  409473:	setne  bpl
  409477:	sar    rax,0x3
  40947b:	add    rbp,rax
  40947e:	mov    rdi,rbp
  409481:	call   403a00 <malloc@plt>
  409486:	mov    r12,rax
  409489:	test   rax,rax
  40948c:	je     409802 <codadump_filter_get_next_filter@@Base+0xc52>
  409492:	xor    edx,edx
  409494:	mov    rcx,r13
  409497:	mov    rsi,r12
  40949a:	mov    rdi,rbx
  40949d:	call   403c20 <coda_cursor_read_bits@plt>
  4094a2:	test   eax,eax
  4094a4:	jne    4097b2 <codadump_filter_get_next_filter@@Base+0xc02>
  4094aa:	lea    rdi,[rip+0x31c0]        # 40c671 <_IO_stdin_used@@Base+0x671>
  4094b1:	xor    eax,eax
  4094b3:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4094b8:	mov    rsi,rbp
  4094bb:	mov    rdi,r12
  4094be:	call   408cb0 <codadump_filter_get_next_filter@@Base+0x100>
  4094c3:	lea    rdi,[rip+0x31a7]        # 40c671 <_IO_stdin_used@@Base+0x671>
  4094ca:	xor    eax,eax
  4094cc:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4094d1:	mov    rdi,r12
  4094d4:	call   403680 <free@plt>
  4094d9:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  4094de:	xchg   ax,ax
  4094e0:	lea    rsi,[rsp+0x28]
  4094e5:	mov    rdi,rbx
  4094e8:	call   403ae0 <coda_cursor_read_int64@plt>
  4094ed:	test   eax,eax
  4094ef:	jne    40976a <codadump_filter_get_next_filter@@Base+0xbba>
  4094f5:	lea    rbx,[rsp+0x70]
  4094fa:	mov    rdi,QWORD PTR [rsp+0x28]
  4094ff:	mov    rsi,rbx
  409502:	call   403c30 <coda_str64@plt>
  409507:	mov    rsi,rbx
  40950a:	lea    rdi,[rip+0x3297]        # 40c7a8 <_IO_stdin_used@@Base+0x7a8>
  409511:	xor    eax,eax
  409513:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409518:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40951d:	nop    DWORD PTR [rax]
  409520:	lea    rsi,[rsp+0x28]
  409525:	mov    rdi,rbx
  409528:	call   403990 <coda_cursor_read_uint64@plt>
  40952d:	test   eax,eax
  40952f:	jne    4097be <codadump_filter_get_next_filter@@Base+0xc0e>
  409535:	lea    rbx,[rsp+0x70]
  40953a:	mov    rdi,QWORD PTR [rsp+0x28]
  40953f:	mov    rsi,rbx
  409542:	call   403740 <coda_str64u@plt>
  409547:	mov    rsi,rbx
  40954a:	lea    rdi,[rip+0x3257]        # 40c7a8 <_IO_stdin_used@@Base+0x7a8>
  409551:	xor    eax,eax
  409553:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409558:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40955d:	nop    DWORD PTR [rax]
  409560:	lea    rsi,[rsp+0x28]
  409565:	mov    rdi,rbx
  409568:	call   403770 <coda_cursor_read_uint32@plt>
  40956d:	test   eax,eax
  40956f:	jne    409782 <codadump_filter_get_next_filter@@Base+0xbd2>
  409575:	mov    esi,DWORD PTR [rsp+0x28]
  409579:	lea    rdi,[rip+0x2aad]        # 40c02d <_IO_stdin_used@@Base+0x2d>
  409580:	xor    eax,eax
  409582:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409587:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40958c:	nop    DWORD PTR [rax+0x0]
  409590:	xor    eax,eax
  409592:	call   40bc80 <handle_coda_error@@Base>
  409597:	jmp    409026 <codadump_filter_get_next_filter@@Base+0x476>
  40959c:	nop    DWORD PTR [rax+0x0]
  4095a0:	mov    rdi,rbx
  4095a3:	call   403b20 <coda_cursor_goto_next_record_field@plt>
  4095a8:	test   eax,eax
  4095aa:	jne    4096d0 <codadump_filter_get_next_filter@@Base+0xb20>
  4095b0:	mov    rsi,QWORD PTR [rsp+0x20]
  4095b5:	mov    rax,QWORD PTR [rsp+0x10]
  4095ba:	jmp    40922c <codadump_filter_get_next_filter@@Base+0x67c>
  4095bf:	nop
  4095c0:	xor    eax,eax
  4095c2:	call   40bc80 <handle_coda_error@@Base>
  4095c7:	jmp    4091cc <codadump_filter_get_next_filter@@Base+0x61c>
  4095cc:	nop    DWORD PTR [rax+0x0]
  4095d0:	lea    rsi,[rsp+0x28]
  4095d5:	mov    rdi,rbx
  4095d8:	call   4039a0 <coda_cursor_read_double@plt>
  4095dd:	test   eax,eax
  4095df:	jne    409730 <codadump_filter_get_next_filter@@Base+0xb80>
  4095e5:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  4095eb:	jmp    409400 <codadump_filter_get_next_filter@@Base+0x850>
  4095f0:	xor    eax,eax
  4095f2:	call   40bc80 <handle_coda_error@@Base>
  4095f7:	jmp    408f57 <codadump_filter_get_next_filter@@Base+0x3a7>
  4095fc:	nop    DWORD PTR [rax+0x0]
  409600:	mov    rdi,rbx
  409603:	call   403890 <coda_cursor_goto_first_array_element@plt>
  409608:	test   eax,eax
  40960a:	jne    4096bd <codadump_filter_get_next_filter@@Base+0xb0d>
  409610:	lea    r13,[rbp-0x1]
  409614:	xor    r12d,r12d
  409617:	lea    r14,[rip+0x2e24]        # 40c442 <_IO_stdin_used@@Base+0x442>
  40961e:	mov    rdi,rbx
  409621:	call   408df0 <codadump_filter_get_next_filter@@Base+0x240>
  409626:	cmp    r12,r13
  409629:	jl     409640 <codadump_filter_get_next_filter@@Base+0xa90>
  40962b:	inc    r12
  40962e:	cmp    rbp,r12
  409631:	jg     40961e <codadump_filter_get_next_filter@@Base+0xa6e>
  409633:	mov    rdi,rbx
  409636:	call   403930 <coda_cursor_goto_parent@plt>
  40963b:	jmp    409109 <codadump_filter_get_next_filter@@Base+0x559>
  409640:	mov    rdi,r14
  409643:	xor    eax,eax
  409645:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40964a:	mov    rdi,rbx
  40964d:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  409652:	test   eax,eax
  409654:	je     40962b <codadump_filter_get_next_filter@@Base+0xa7b>
  409656:	xor    eax,eax
  409658:	call   40bc80 <handle_coda_error@@Base>
  40965d:	jmp    40962b <codadump_filter_get_next_filter@@Base+0xa7b>
  40965f:	nop
  409660:	xor    eax,eax
  409662:	call   40bc80 <handle_coda_error@@Base>
  409667:	jmp    409174 <codadump_filter_get_next_filter@@Base+0x5c4>
  40966c:	nop    DWORD PTR [rax+0x0]
  409670:	xor    eax,eax
  409672:	call   40bc80 <handle_coda_error@@Base>
  409677:	jmp    40915d <codadump_filter_get_next_filter@@Base+0x5ad>
  40967c:	nop    DWORD PTR [rax+0x0]
  409680:	xor    eax,eax
  409682:	call   40bc80 <handle_coda_error@@Base>
  409687:	jmp    4091f7 <codadump_filter_get_next_filter@@Base+0x647>
  40968c:	nop    DWORD PTR [rax+0x0]
  409690:	lea    rdi,[rip+0x2dab]        # 40c442 <_IO_stdin_used@@Base+0x442>
  409697:	xor    eax,eax
  409699:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40969e:	jmp    4091dd <codadump_filter_get_next_filter@@Base+0x62d>
  4096a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4096a8:	mov    rdi,rbx
  4096ab:	call   403890 <coda_cursor_goto_first_array_element@plt>
  4096b0:	mov    ebp,0x1
  4096b5:	test   eax,eax
  4096b7:	je     409610 <codadump_filter_get_next_filter@@Base+0xa60>
  4096bd:	xor    eax,eax
  4096bf:	call   40bc80 <handle_coda_error@@Base>
  4096c4:	jmp    409610 <codadump_filter_get_next_filter@@Base+0xa60>
  4096c9:	nop    DWORD PTR [rax+0x0]
  4096d0:	xor    eax,eax
  4096d2:	call   40bc80 <handle_coda_error@@Base>
  4096d7:	jmp    4095b0 <codadump_filter_get_next_filter@@Base+0xa00>
  4096dc:	nop    DWORD PTR [rax+0x0]
  4096e0:	xor    eax,eax
  4096e2:	call   40bc80 <handle_coda_error@@Base>
  4096e7:	jmp    4092d6 <codadump_filter_get_next_filter@@Base+0x726>
  4096ec:	nop    DWORD PTR [rax+0x0]
  4096f0:	xor    eax,eax
  4096f2:	call   40bc80 <handle_coda_error@@Base>
  4096f7:	jmp    4092c1 <codadump_filter_get_next_filter@@Base+0x711>
  4096fc:	nop    DWORD PTR [rax+0x0]
  409700:	xor    eax,eax
  409702:	call   40bc80 <handle_coda_error@@Base>
  409707:	jmp    4092a5 <codadump_filter_get_next_filter@@Base+0x6f5>
  40970c:	nop    DWORD PTR [rax+0x0]
  409710:	xor    eax,eax
  409712:	call   40bc80 <handle_coda_error@@Base>
  409717:	jmp    409190 <codadump_filter_get_next_filter@@Base+0x5e0>
  40971c:	nop    DWORD PTR [rax+0x0]
  409720:	xor    eax,eax
  409722:	call   40bc80 <handle_coda_error@@Base>
  409727:	jmp    408e75 <codadump_filter_get_next_filter@@Base+0x2c5>
  40972c:	nop    DWORD PTR [rax+0x0]
  409730:	xor    eax,eax
  409732:	call   40bc80 <handle_coda_error@@Base>
  409737:	jmp    4095e5 <codadump_filter_get_next_filter@@Base+0xa35>
  40973c:	lea    rdi,[rip+0x28ee]        # 40c031 <_IO_stdin_used@@Base+0x31>
  409743:	mov    eax,0x1
  409748:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  40974d:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  409752:	xor    eax,eax
  409754:	call   40bc80 <handle_coda_error@@Base>
  409759:	jmp    409315 <codadump_filter_get_next_filter@@Base+0x765>
  40975e:	xor    eax,eax
  409760:	call   40bc80 <handle_coda_error@@Base>
  409765:	jmp    4093a0 <codadump_filter_get_next_filter@@Base+0x7f0>
  40976a:	xor    eax,eax
  40976c:	call   40bc80 <handle_coda_error@@Base>
  409771:	jmp    4094f5 <codadump_filter_get_next_filter@@Base+0x945>
  409776:	xor    eax,eax
  409778:	call   40bc80 <handle_coda_error@@Base>
  40977d:	jmp    409435 <codadump_filter_get_next_filter@@Base+0x885>
  409782:	xor    eax,eax
  409784:	call   40bc80 <handle_coda_error@@Base>
  409789:	jmp    409575 <codadump_filter_get_next_filter@@Base+0x9c5>
  40978e:	xor    eax,eax
  409790:	call   40bc80 <handle_coda_error@@Base>
  409795:	jmp    409348 <codadump_filter_get_next_filter@@Base+0x798>
  40979a:	xor    eax,eax
  40979c:	call   40bc80 <handle_coda_error@@Base>
  4097a1:	jmp    4093e5 <codadump_filter_get_next_filter@@Base+0x835>
  4097a6:	xor    eax,eax
  4097a8:	call   40bc80 <handle_coda_error@@Base>
  4097ad:	jmp    409465 <codadump_filter_get_next_filter@@Base+0x8b5>
  4097b2:	xor    eax,eax
  4097b4:	call   40bc80 <handle_coda_error@@Base>
  4097b9:	jmp    4094aa <codadump_filter_get_next_filter@@Base+0x8fa>
  4097be:	xor    eax,eax
  4097c0:	call   40bc80 <handle_coda_error@@Base>
  4097c5:	jmp    409535 <codadump_filter_get_next_filter@@Base+0x985>
  4097ca:	mov    rdx,rbp
  4097cd:	mov    r8d,0x12f
  4097d3:	lea    rcx,[rip+0x2f06]        # 40c6e0 <_IO_stdin_used@@Base+0x6e0>
  4097da:	lea    rsi,[rip+0x28e7]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  4097e1:	mov    edi,0xffffffff
  4097e6:	xor    eax,eax
  4097e8:	call   4036f0 <coda_set_error@plt>
  4097ed:	xor    eax,eax
  4097ef:	call   40bc80 <handle_coda_error@@Base>
  4097f4:	mov    rax,QWORD PTR [rsp+0x28]
  4097f9:	lea    rbp,[rax+0x1]
  4097fd:	jmp    409332 <codadump_filter_get_next_filter@@Base+0x782>
  409802:	mov    r8d,0x14e
  409808:	lea    rcx,[rip+0x2ed1]        # 40c6e0 <_IO_stdin_used@@Base+0x6e0>
  40980f:	mov    rdx,rbp
  409812:	lea    rsi,[rip+0x28af]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  409819:	mov    edi,0xffffffff
  40981e:	xor    eax,eax
  409820:	call   4036f0 <coda_set_error@plt>
  409825:	xor    eax,eax
  409827:	call   40bc80 <handle_coda_error@@Base>
  40982c:	mov    r13,QWORD PTR [rsp+0x28]
  409831:	jmp    409492 <codadump_filter_get_next_filter@@Base+0x8e2>
  409836:	mov    rsi,rbx
  409839:	lea    rdi,[rip+0x2f8f]        # 40c7cf <_IO_stdin_used@@Base+0x7cf>
  409840:	xor    eax,eax
  409842:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  409847:	jmp    408ed0 <codadump_filter_get_next_filter@@Base+0x320>
  40984c:	call   403850 <__stack_chk_fail@plt>
  409851:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40985c:	nop    DWORD PTR [rax+0x0]

0000000000409860 <print_json_data@@Base>:
  409860:	endbr64 
  409864:	push   rbp
  409865:	push   rbx
  409866:	sub    rsp,0x338
  40986d:	mov    rbx,0x410380
  409874:	mov    rax,QWORD PTR fs:0x28
  40987d:	mov    QWORD PTR [rsp+0x328],rax
  409885:	xor    eax,eax
  409887:	lea    rbp,[rsp+0x8]
  40988c:	mov    DWORD PTR [rip+0x6ab6],edi        # 410348 <__bss_start@@Base+0xc>
  409892:	mov    rdi,QWORD PTR [rbx]
  409895:	mov    rsi,rbp
  409898:	call   403700 <coda_open@plt>
  40989d:	test   eax,eax
  40989f:	jne    409930 <print_json_data@@Base+0xd0>
  4098a5:	lea    rbx,[rsp+0x10]
  4098aa:	mov    rsi,QWORD PTR [rsp+0x8]
  4098af:	mov    rdi,rbx
  4098b2:	call   4038b0 <coda_cursor_set_product@plt>
  4098b7:	test   eax,eax
  4098b9:	jne    409920 <print_json_data@@Base+0xc0>
  4098bb:	mov    rax,0x4114e0
  4098c2:	mov    rsi,QWORD PTR [rax]
  4098c5:	test   rsi,rsi
  4098c8:	je     4098d6 <print_json_data@@Base+0x76>
  4098ca:	mov    rdi,rbx
  4098cd:	call   403af0 <coda_cursor_goto@plt>
  4098d2:	test   eax,eax
  4098d4:	jne    409950 <print_json_data@@Base+0xf0>
  4098d6:	xor    edi,edi
  4098d8:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  4098dd:	mov    rdi,rbx
  4098e0:	call   408df0 <codadump_filter_get_next_filter@@Base+0x240>
  4098e5:	lea    rdi,[rip+0x3009]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  4098ec:	xor    eax,eax
  4098ee:	call   408be0 <codadump_filter_get_next_filter@@Base+0x30>
  4098f3:	mov    rdi,QWORD PTR [rsp+0x8]
  4098f8:	call   403ad0 <coda_close@plt>
  4098fd:	mov    rax,QWORD PTR [rsp+0x328]
  409905:	xor    rax,QWORD PTR fs:0x28
  40990e:	jne    409987 <print_json_data@@Base+0x127>
  409910:	add    rsp,0x338
  409917:	pop    rbx
  409918:	pop    rbp
  409919:	ret    
  40991a:	nop    WORD PTR [rax+rax*1+0x0]
  409920:	xor    eax,eax
  409922:	call   40bc80 <handle_coda_error@@Base>
  409927:	jmp    4098bb <print_json_data@@Base+0x5b>
  409929:	nop    DWORD PTR [rax+0x0]
  409930:	call   403bf0 <coda_get_errno@plt>
  409935:	cmp    DWORD PTR [rax],0xffffffeb
  409938:	je     409960 <print_json_data@@Base+0x100>
  40993a:	xor    eax,eax
  40993c:	call   40bc80 <handle_coda_error@@Base>
  409941:	jmp    4098a5 <print_json_data@@Base+0x45>
  409946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409950:	xor    eax,eax
  409952:	call   40bc80 <handle_coda_error@@Base>
  409957:	jmp    4098d6 <print_json_data@@Base+0x76>
  40995c:	nop    DWORD PTR [rax+0x0]
  409960:	xor    edi,edi
  409962:	call   403750 <coda_set_option_use_mmap@plt>
  409967:	mov    rdi,QWORD PTR [rbx]
  40996a:	mov    rsi,rbp
  40996d:	call   403700 <coda_open@plt>
  409972:	mov    ebx,eax
  409974:	mov    edi,0x1
  409979:	call   403750 <coda_set_option_use_mmap@plt>
  40997e:	test   ebx,ebx
  409980:	jne    40993a <print_json_data@@Base+0xda>
  409982:	jmp    4098a5 <print_json_data@@Base+0x45>
  409987:	call   403850 <__stack_chk_fail@plt>
  40998c:	nop    DWORD PTR [rax+0x0]
  409990:	push   r14
  409992:	movsxd rsi,esi
  409995:	push   r13
  409997:	lea    r13,[rsi+rsi*4]
  40999b:	shl    r13,0x4
  40999f:	push   r12
  4099a1:	add    r13,0x410380
  4099a8:	push   rbp
  4099a9:	push   rbx
  4099aa:	mov    r8d,DWORD PTR [r13+0x538]
  4099b1:	test   r8d,r8d
  4099b4:	jle    409a62 <print_json_data@@Base+0x202>
  4099ba:	mov    rbp,rdi
  4099bd:	mov    ebx,0x1
  4099c2:	mov    r14,0x410378
  4099c9:	mov    r12,r13
  4099cc:	jmp    409a2b <print_json_data@@Base+0x1cb>
  4099ce:	xchg   ax,ax
  4099d0:	mov    rdx,0x411500
  4099d7:	add    eax,DWORD PTR [r12+0x534]
  4099df:	cdqe   
  4099e1:	mov    ecx,DWORD PTR [rdx+rax*4+0x48]
  4099e5:	movsxd r8,DWORD PTR [rdx+rax*4+0x4]
  4099ea:	test   ecx,ecx
  4099ec:	je     409a70 <print_json_data@@Base+0x210>
  4099f2:	movsxd rcx,DWORD PTR [rdx+rax*4+0x24]
  4099f7:	mov    esi,0x1
  4099fc:	lea    rdx,[rip+0x2d95]        # 40c798 <_IO_stdin_used@@Base+0x798>
  409a03:	mov    rdi,rbp
  409a06:	xor    eax,eax
  409a08:	call   403bc0 <__fprintf_chk@plt>
  409a0d:	cmp    ebx,DWORD PTR [r12+0x538]
  409a15:	jge    409a62 <print_json_data@@Base+0x202>
  409a17:	test   ebx,ebx
  409a19:	jle    409a28 <print_json_data@@Base+0x1c8>
  409a1b:	mov    rsi,rbp
  409a1e:	mov    edi,0x2c
  409a23:	call   4038d0 <fputc@plt>
  409a28:	inc    rbx
  409a2b:	mov    esi,DWORD PTR [r14]
  409a2e:	lea    eax,[rbx-0x1]
  409a31:	test   esi,esi
  409a33:	jne    4099d0 <print_json_data@@Base+0x170>
  409a35:	movsxd rcx,DWORD PTR [r13+rbx*4+0x538]
  409a3d:	cmp    ecx,0xffffffff
  409a40:	je     409a78 <print_json_data@@Base+0x218>
  409a42:	xor    eax,eax
  409a44:	lea    rdx,[rip+0x2d51]        # 40c79c <_IO_stdin_used@@Base+0x79c>
  409a4b:	mov    esi,0x1
  409a50:	mov    rdi,rbp
  409a53:	call   403bc0 <__fprintf_chk@plt>
  409a58:	cmp    ebx,DWORD PTR [r12+0x538]
  409a60:	jl     409a17 <print_json_data@@Base+0x1b7>
  409a62:	pop    rbx
  409a63:	pop    rbp
  409a64:	pop    r12
  409a66:	pop    r13
  409a68:	pop    r14
  409a6a:	ret    
  409a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a70:	mov    rcx,r8
  409a73:	jmp    409a42 <print_json_data@@Base+0x1e2>
  409a75:	nop    DWORD PTR [rax]
  409a78:	mov    rsi,rbp
  409a7b:	mov    edi,0x3f
  409a80:	call   4038d0 <fputc@plt>
  409a85:	jmp    409a0d <print_json_data@@Base+0x1ad>
  409a87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a90 <print_full_field_name@@Base>:
  409a90:	endbr64 
  409a94:	push   r15
  409a96:	push   r14
  409a98:	push   r13
  409a9a:	push   r12
  409a9c:	push   rbp
  409a9d:	push   rbx
  409a9e:	mov    rbx,rdi
  409aa1:	sub    rsp,0x28
  409aa5:	mov    DWORD PTR [rsp+0xc],edx
  409aa9:	mov    rax,QWORD PTR fs:0x28
  409ab2:	mov    QWORD PTR [rsp+0x18],rax
  409ab7:	xor    eax,eax
  409ab9:	cmp    esi,0x1
  409abc:	je     409c40 <print_full_field_name@@Base+0x1b0>
  409ac2:	mov    r14,0x410380
  409ac9:	mov    r12d,esi
  409acc:	mov    r13d,DWORD PTR [r14+0x1138]
  409ad3:	mov    ebp,0x1
  409ad8:	test   r13d,r13d
  409adb:	jg     409af0 <print_full_field_name@@Base+0x60>
  409add:	jmp    409b09 <print_full_field_name@@Base+0x79>
  409adf:	nop
  409ae0:	mov    rsi,rbx
  409ae3:	mov    edi,0x2e
  409ae8:	call   4038d0 <fputc@plt>
  409aed:	inc    rbp
  409af0:	mov    rdi,QWORD PTR [r14+rbp*8+0x1030]
  409af8:	mov    rsi,rbx
  409afb:	call   403870 <fputs@plt>
  409b00:	cmp    DWORD PTR [r14+0x1138],ebp
  409b07:	jg     409ae0 <print_full_field_name@@Base+0x50>
  409b09:	cmp    r12d,0x2
  409b0d:	je     409b38 <print_full_field_name@@Base+0xa8>
  409b0f:	mov    rax,QWORD PTR [rsp+0x18]
  409b14:	xor    rax,QWORD PTR fs:0x28
  409b1d:	jne    409e0d <print_full_field_name@@Base+0x37d>
  409b23:	add    rsp,0x28
  409b27:	pop    rbx
  409b28:	pop    rbp
  409b29:	pop    r12
  409b2b:	pop    r13
  409b2d:	pop    r14
  409b2f:	pop    r15
  409b31:	ret    
  409b32:	nop    WORD PTR [rax+rax*1+0x0]
  409b38:	mov    r9d,DWORD PTR [r14+0x110]
  409b3f:	test   r9d,r9d
  409b42:	jle    409de0 <print_full_field_name@@Base+0x350>
  409b48:	xor    r15d,r15d
  409b4b:	xor    r12d,r12d
  409b4e:	lea    rbp,[rsp+0x14]
  409b53:	lea    r13,[rip+0x2c4a]        # 40c7a4 <_IO_stdin_used@@Base+0x7a4>
  409b5a:	jmp    409b6c <print_full_field_name@@Base+0xdc>
  409b5c:	nop    DWORD PTR [rax+0x0]
  409b60:	inc    r15
  409b63:	cmp    DWORD PTR [r14+0x110],r15d
  409b6a:	jle    409bdd <print_full_field_name@@Base+0x14d>
  409b6c:	mov    rdi,QWORD PTR [r14+r15*8+0x10]
  409b71:	mov    rsi,rbp
  409b74:	call   403c40 <coda_type_get_class@plt>
  409b79:	test   eax,eax
  409b7b:	jne    409d88 <print_full_field_name@@Base+0x2f8>
  409b81:	cmp    DWORD PTR [rsp+0x14],0x1
  409b86:	jne    409b60 <print_full_field_name@@Base+0xd0>
  409b88:	movsxd rax,r12d
  409b8b:	lea    rax,[rax+rax*4]
  409b8f:	shl    rax,0x4
  409b93:	add    rax,r14
  409b96:	mov    edi,DWORD PTR [rax+0x538]
  409b9c:	test   edi,edi
  409b9e:	jle    409b60 <print_full_field_name@@Base+0xd0>
  409ba0:	mov    esi,DWORD PTR [rax+0x534]
  409ba6:	test   esi,esi
  409ba8:	jne    409db0 <print_full_field_name@@Base+0x320>
  409bae:	mov    rcx,rbx
  409bb1:	mov    edx,0x2
  409bb6:	mov    esi,0x1
  409bbb:	mov    rdi,r13
  409bbe:	call   403bb0 <fwrite@plt>
  409bc3:	mov    esi,r12d
  409bc6:	mov    rdi,rbx
  409bc9:	inc    r15
  409bcc:	call   409990 <print_json_data@@Base+0x130>
  409bd1:	inc    r12d
  409bd4:	cmp    DWORD PTR [r14+0x110],r15d
  409bdb:	jg     409b6c <print_full_field_name@@Base+0xdc>
  409bdd:	mov    ecx,DWORD PTR [rsp+0xc]
  409be1:	test   ecx,ecx
  409be3:	je     409d98 <print_full_field_name@@Base+0x308>
  409be9:	cmp    DWORD PTR [r14+0xf34],r12d
  409bf0:	jle    409d98 <print_full_field_name@@Base+0x308>
  409bf6:	movsxd rax,r12d
  409bf9:	lea    rax,[rax+rax*4]
  409bfd:	shl    rax,0x4
  409c01:	mov    edx,DWORD PTR [r14+rax*1+0x534]
  409c09:	test   edx,edx
  409c0b:	je     409dc2 <print_full_field_name@@Base+0x332>
  409c11:	mov    rsi,rbx
  409c14:	mov    edi,0x2c
  409c19:	call   4038d0 <fputc@plt>
  409c1e:	mov    esi,r12d
  409c21:	mov    rdi,rbx
  409c24:	call   409990 <print_json_data@@Base+0x130>
  409c29:	mov    rsi,rbx
  409c2c:	mov    edi,0x5d
  409c31:	call   4038d0 <fputc@plt>
  409c36:	jmp    409b0f <print_full_field_name@@Base+0x7f>
  409c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c40:	mov    r14,0x410380
  409c47:	mov    ebp,DWORD PTR [r14+0x110]
  409c4e:	test   ebp,ebp
  409c50:	jle    409e05 <print_full_field_name@@Base+0x375>
  409c56:	xor    r15d,r15d
  409c59:	xor    r12d,r12d
  409c5c:	xor    r13d,r13d
  409c5f:	lea    rbp,[rsp+0x14]
  409c64:	jmp    409cca <print_full_field_name@@Base+0x23a>
  409c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c70:	cmp    eax,0x1
  409c73:	jne    409cbe <print_full_field_name@@Base+0x22e>
  409c75:	test   r15,r15
  409c78:	je     409d70 <print_full_field_name@@Base+0x2e0>
  409c7e:	movsxd rax,r12d
  409c81:	lea    rax,[rax+rax*4]
  409c85:	shl    rax,0x4
  409c89:	mov    r11d,DWORD PTR [r14+rax*1+0x538]
  409c91:	test   r11d,r11d
  409c94:	jle    409cbb <print_full_field_name@@Base+0x22b>
  409c96:	mov    rsi,rbx
  409c99:	mov    edi,0x5b
  409c9e:	call   4038d0 <fputc@plt>
  409ca3:	mov    esi,r12d
  409ca6:	mov    rdi,rbx
  409ca9:	call   409990 <print_json_data@@Base+0x130>
  409cae:	mov    rsi,rbx
  409cb1:	mov    edi,0x5d
  409cb6:	call   4038d0 <fputc@plt>
  409cbb:	inc    r12d
  409cbe:	inc    r15
  409cc1:	cmp    DWORD PTR [r14+0x110],r15d
  409cc8:	jle    409d17 <print_full_field_name@@Base+0x287>
  409cca:	mov    rdi,QWORD PTR [r14+r15*8+0x10]
  409ccf:	mov    rsi,rbp
  409cd2:	call   403c40 <coda_type_get_class@plt>
  409cd7:	test   eax,eax
  409cd9:	jne    409d60 <print_full_field_name@@Base+0x2d0>
  409cdf:	mov    eax,DWORD PTR [rsp+0x14]
  409ce3:	test   eax,eax
  409ce5:	jne    409c70 <print_full_field_name@@Base+0x1e0>
  409ce7:	movsxd rax,r13d
  409cea:	mov    rcx,QWORD PTR [r14+rax*8+0x1038]
  409cf2:	lea    rdx,[rip+0x2aa7]        # 40c7a0 <_IO_stdin_used@@Base+0x7a0>
  409cf9:	mov    esi,0x1
  409cfe:	mov    rdi,rbx
  409d01:	xor    eax,eax
  409d03:	inc    r15
  409d06:	call   403bc0 <__fprintf_chk@plt>
  409d0b:	inc    r13d
  409d0e:	cmp    DWORD PTR [r14+0x110],r15d
  409d15:	jg     409cca <print_full_field_name@@Base+0x23a>
  409d17:	mov    r10d,DWORD PTR [rsp+0xc]
  409d1c:	test   r10d,r10d
  409d1f:	je     409b0f <print_full_field_name@@Base+0x7f>
  409d25:	cmp    DWORD PTR [r14+0xf34],r12d
  409d2c:	jle    409b0f <print_full_field_name@@Base+0x7f>
  409d32:	mov    rsi,rbx
  409d35:	mov    edi,0x5b
  409d3a:	call   4038d0 <fputc@plt>
  409d3f:	mov    esi,r12d
  409d42:	mov    rdi,rbx
  409d45:	call   409990 <print_json_data@@Base+0x130>
  409d4a:	mov    rsi,rbx
  409d4d:	mov    edi,0x5d
  409d52:	call   4038d0 <fputc@plt>
  409d57:	jmp    409b0f <print_full_field_name@@Base+0x7f>
  409d5c:	nop    DWORD PTR [rax+0x0]
  409d60:	xor    eax,eax
  409d62:	call   40bc80 <handle_coda_error@@Base>
  409d67:	jmp    409cdf <print_full_field_name@@Base+0x24f>
  409d6c:	nop    DWORD PTR [rax+0x0]
  409d70:	mov    rsi,rbx
  409d73:	mov    edi,0x2f
  409d78:	call   4038d0 <fputc@plt>
  409d7d:	jmp    409c7e <print_full_field_name@@Base+0x1ee>
  409d82:	nop    WORD PTR [rax+rax*1+0x0]
  409d88:	xor    eax,eax
  409d8a:	call   40bc80 <handle_coda_error@@Base>
  409d8f:	jmp    409b81 <print_full_field_name@@Base+0xf1>
  409d94:	nop    DWORD PTR [rax+0x0]
  409d98:	test   r12d,r12d
  409d9b:	je     409b0f <print_full_field_name@@Base+0x7f>
  409da1:	jmp    409c29 <print_full_field_name@@Base+0x199>
  409da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409db0:	mov    rsi,rbx
  409db3:	mov    edi,0x2c
  409db8:	call   4038d0 <fputc@plt>
  409dbd:	jmp    409bc3 <print_full_field_name@@Base+0x133>
  409dc2:	mov    rcx,rbx
  409dc5:	mov    edx,0x2
  409dca:	mov    esi,0x1
  409dcf:	lea    rdi,[rip+0x29ce]        # 40c7a4 <_IO_stdin_used@@Base+0x7a4>
  409dd6:	call   403bb0 <fwrite@plt>
  409ddb:	jmp    409c1e <print_full_field_name@@Base+0x18e>
  409de0:	mov    r8d,DWORD PTR [rsp+0xc]
  409de5:	test   r8d,r8d
  409de8:	je     409b0f <print_full_field_name@@Base+0x7f>
  409dee:	mov    eax,DWORD PTR [r14+0xf34]
  409df5:	test   eax,eax
  409df7:	jle    409b0f <print_full_field_name@@Base+0x7f>
  409dfd:	xor    r12d,r12d
  409e00:	jmp    409bf6 <print_full_field_name@@Base+0x166>
  409e05:	xor    r12d,r12d
  409e08:	jmp    409d17 <print_full_field_name@@Base+0x287>
  409e0d:	call   403850 <__stack_chk_fail@plt>
  409e12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409e1d:	nop    DWORD PTR [rax]
  409e20:	push   rbp
  409e21:	push   rbx
  409e22:	sub    rsp,0x28
  409e26:	mov    rax,QWORD PTR fs:0x28
  409e2f:	mov    QWORD PTR [rsp+0x18],rax
  409e34:	xor    eax,eax
  409e36:	mov    rax,0x4114dc
  409e3d:	mov    eax,DWORD PTR [rax]
  409e3f:	test   eax,eax
  409e41:	je     409e70 <print_full_field_name@@Base+0x3e0>
  409e43:	cmp    eax,0x1
  409e46:	je     409ef8 <print_full_field_name@@Base+0x468>
  409e4c:	mov    rax,QWORD PTR [rsp+0x18]
  409e51:	xor    rax,QWORD PTR fs:0x28
  409e5a:	jne    40a0d5 <print_full_field_name@@Base+0x645>
  409e60:	add    rsp,0x28
  409e64:	pop    rbx
  409e65:	pop    rbp
  409e66:	ret    
  409e67:	nop    WORD PTR [rax+rax*1+0x0]
  409e70:	mov    rbx,QWORD PTR [rip+0x6169]        # 40ffe0 <stdout@GLIBC_2.2.5>
  409e77:	xor    edx,edx
  409e79:	mov    rdi,QWORD PTR [rbx]
  409e7c:	mov    esi,0x1
  409e81:	call   409a90 <print_full_field_name@@Base>
  409e86:	mov    rax,0x4114d0
  409e8d:	mov    edi,DWORD PTR [rax]
  409e8f:	test   edi,edi
  409e91:	jne    409fb8 <print_full_field_name@@Base+0x528>
  409e97:	mov    rax,0x410374
  409e9e:	mov    esi,DWORD PTR [rax]
  409ea0:	test   esi,esi
  409ea2:	jne    409f60 <print_full_field_name@@Base+0x4d0>
  409ea8:	mov    rax,0x4114d4
  409eaf:	mov    ecx,DWORD PTR [rax]
  409eb1:	test   ecx,ecx
  409eb3:	jne    409f08 <print_full_field_name@@Base+0x478>
  409eb5:	mov    edi,0xa
  409eba:	call   403690 <putchar@plt>
  409ebf:	mov    rax,0x410364
  409ec6:	mov    edx,DWORD PTR [rax]
  409ec8:	test   edx,edx
  409eca:	je     409e4c <print_full_field_name@@Base+0x3bc>
  409ecc:	mov    rbp,0x411500
  409ed3:	mov    eax,DWORD PTR [rbp+0x0]
  409ed6:	test   eax,eax
  409ed8:	jle    409e4c <print_full_field_name@@Base+0x3bc>
  409ede:	xor    ebx,ebx
  409ee0:	mov    edi,ebx
  409ee2:	inc    ebx
  409ee4:	call   4079a0 <print_all_distinct_dims@@Base>
  409ee9:	cmp    ebx,DWORD PTR [rbp+0x0]
  409eec:	jl     409ee0 <print_full_field_name@@Base+0x450>
  409eee:	jmp    409e4c <print_full_field_name@@Base+0x3bc>
  409ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  409ef8:	xor    eax,eax
  409efa:	call   405c70 <export_data_element_to_ascii@@Base>
  409eff:	jmp    409e4c <print_full_field_name@@Base+0x3bc>
  409f04:	nop    DWORD PTR [rax+0x0]
  409f08:	mov    rax,0x410380
  409f0f:	lea    rsi,[rsp+0x10]
  409f14:	movsxd rdx,DWORD PTR [rax+0x110]
  409f1b:	mov    rdi,QWORD PTR [rax+rdx*8+0x10]
  409f20:	call   403840 <coda_type_get_description@plt>
  409f25:	test   eax,eax
  409f27:	jne    40a0b0 <print_full_field_name@@Base+0x620>
  409f2d:	mov    rdx,QWORD PTR [rsp+0x10]
  409f32:	test   rdx,rdx
  409f35:	je     409eb5 <print_full_field_name@@Base+0x425>
  409f3b:	cmp    BYTE PTR [rdx],0x0
  409f3e:	je     409eb5 <print_full_field_name@@Base+0x425>
  409f44:	lea    rsi,[rip+0x2883]        # 40c7ce <_IO_stdin_used@@Base+0x7ce>
  409f4b:	mov    edi,0x1
  409f50:	xor    eax,eax
  409f52:	call   403aa0 <__printf_chk@plt>
  409f57:	jmp    409eb5 <print_full_field_name@@Base+0x425>
  409f5c:	nop    DWORD PTR [rax+0x0]
  409f60:	mov    rax,0x410380
  409f67:	lea    rsi,[rsp+0x10]
  409f6c:	movsxd rdx,DWORD PTR [rax+0x110]
  409f73:	mov    rdi,QWORD PTR [rax+rdx*8+0x10]
  409f78:	call   403830 <coda_type_get_unit@plt>
  409f7d:	test   eax,eax
  409f7f:	jne    40a0a0 <print_full_field_name@@Base+0x610>
  409f85:	mov    rdx,QWORD PTR [rsp+0x10]
  409f8a:	test   rdx,rdx
  409f8d:	je     409ea8 <print_full_field_name@@Base+0x418>
  409f93:	cmp    BYTE PTR [rdx],0x0
  409f96:	je     409ea8 <print_full_field_name@@Base+0x418>
  409f9c:	lea    rsi,[rip+0x2825]        # 40c7c8 <_IO_stdin_used@@Base+0x7c8>
  409fa3:	mov    edi,0x1
  409fa8:	xor    eax,eax
  409faa:	call   403aa0 <__printf_chk@plt>
  409faf:	jmp    409ea8 <print_full_field_name@@Base+0x418>
  409fb4:	nop    DWORD PTR [rax+0x0]
  409fb8:	mov    rbp,0x410380
  409fbf:	lea    rsi,[rsp+0xc]
  409fc4:	movsxd rax,DWORD PTR [rbp+0x110]
  409fcb:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  409fd0:	call   403c40 <coda_type_get_class@plt>
  409fd5:	test   eax,eax
  409fd7:	jne    40a0c0 <print_full_field_name@@Base+0x630>
  409fdd:	movsxd rax,DWORD PTR [rbp+0x110]
  409fe4:	cmp    DWORD PTR [rsp+0xc],0x6
  409fe9:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  409fee:	lea    rsi,[rsp+0x10]
  409ff3:	je     40a070 <print_full_field_name@@Base+0x5e0>
  409ff5:	call   403970 <coda_type_get_read_type@plt>
  409ffa:	test   eax,eax
  409ffc:	jne    40a060 <print_full_field_name@@Base+0x5d0>
  409ffe:	mov    edi,DWORD PTR [rsp+0x10]
  40a002:	call   403a90 <coda_type_get_native_type_name@plt>
  40a007:	mov    rdx,rax
  40a00a:	lea    rsi,[rip+0x2796]        # 40c7a7 <_IO_stdin_used@@Base+0x7a7>
  40a011:	mov    edi,0x1
  40a016:	xor    eax,eax
  40a018:	call   403aa0 <__printf_chk@plt>
  40a01d:	mov    eax,DWORD PTR [rsp+0x10]
  40a021:	sub    eax,0xb
  40a024:	cmp    eax,0x1
  40a027:	ja     409e97 <print_full_field_name@@Base+0x407>
  40a02d:	mov    edi,0x28
  40a032:	call   403690 <putchar@plt>
  40a037:	mov    eax,DWORD PTR [rbp+0xf34]
  40a03d:	test   eax,eax
  40a03f:	jle    40a0da <print_full_field_name@@Base+0x64a>
  40a045:	mov    rdi,QWORD PTR [rbx]
  40a048:	lea    esi,[rax-0x1]
  40a04b:	call   409990 <print_json_data@@Base+0x130>
  40a050:	mov    edi,0x29
  40a055:	call   403690 <putchar@plt>
  40a05a:	jmp    409e97 <print_full_field_name@@Base+0x407>
  40a05f:	nop
  40a060:	xor    eax,eax
  40a062:	call   40bc80 <handle_coda_error@@Base>
  40a067:	jmp    409ffe <print_full_field_name@@Base+0x56e>
  40a069:	nop    DWORD PTR [rax+0x0]
  40a070:	call   403a40 <coda_type_get_special_type@plt>
  40a075:	test   eax,eax
  40a077:	jne    40a0cc <print_full_field_name@@Base+0x63c>
  40a079:	mov    edi,DWORD PTR [rsp+0x10]
  40a07d:	call   403650 <coda_type_get_special_type_name@plt>
  40a082:	mov    rdx,rax
  40a085:	lea    rsi,[rip+0x271b]        # 40c7a7 <_IO_stdin_used@@Base+0x7a7>
  40a08c:	mov    edi,0x1
  40a091:	xor    eax,eax
  40a093:	call   403aa0 <__printf_chk@plt>
  40a098:	jmp    409e97 <print_full_field_name@@Base+0x407>
  40a09d:	nop    DWORD PTR [rax]
  40a0a0:	xor    eax,eax
  40a0a2:	call   40bc80 <handle_coda_error@@Base>
  40a0a7:	jmp    409f85 <print_full_field_name@@Base+0x4f5>
  40a0ac:	nop    DWORD PTR [rax+0x0]
  40a0b0:	xor    eax,eax
  40a0b2:	call   40bc80 <handle_coda_error@@Base>
  40a0b7:	jmp    409f2d <print_full_field_name@@Base+0x49d>
  40a0bc:	nop    DWORD PTR [rax+0x0]
  40a0c0:	xor    eax,eax
  40a0c2:	call   40bc80 <handle_coda_error@@Base>
  40a0c7:	jmp    409fdd <print_full_field_name@@Base+0x54d>
  40a0cc:	xor    eax,eax
  40a0ce:	call   40bc80 <handle_coda_error@@Base>
  40a0d3:	jmp    40a079 <print_full_field_name@@Base+0x5e9>
  40a0d5:	call   403850 <__stack_chk_fail@plt>
  40a0da:	lea    rcx,[rip+0x27cf]        # 40c8b0 <_IO_stdin_used@@Base+0x8b0>
  40a0e1:	mov    edx,0xee
  40a0e6:	lea    rsi,[rip+0x26fb]        # 40c7e8 <_IO_stdin_used@@Base+0x7e8>
  40a0ed:	lea    rdi,[rip+0x26b7]        # 40c7ab <_IO_stdin_used@@Base+0x7ab>
  40a0f4:	call   403860 <__assert_fail@plt>
  40a0f9:	nop    DWORD PTR [rax+0x0]
  40a100:	push   r13
  40a102:	push   r12
  40a104:	push   rbp
  40a105:	push   rbx
  40a106:	sub    rsp,0x28
  40a10a:	mov    rbx,0x410380
  40a111:	mov    rax,QWORD PTR fs:0x28
  40a11a:	mov    QWORD PTR [rsp+0x18],rax
  40a11f:	xor    eax,eax
  40a121:	movsxd rax,DWORD PTR [rbx+0x110]
  40a128:	lea    rsi,[rsp+0x4]
  40a12d:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a132:	call   403c40 <coda_type_get_class@plt>
  40a137:	test   eax,eax
  40a139:	jne    40a3a0 <print_full_field_name@@Base+0x910>
  40a13f:	cmp    DWORD PTR [rsp+0x4],0x6
  40a144:	ja     40a2a0 <print_full_field_name@@Base+0x810>
  40a14a:	mov    eax,DWORD PTR [rsp+0x4]
  40a14e:	lea    rdx,[rip+0x273b]        # 40c890 <_IO_stdin_used@@Base+0x890>
  40a155:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a159:	add    rax,rdx
  40a15c:	notrack jmp rax
  40a15f:	nop
  40a160:	movsxd rax,DWORD PTR [rbx+0x110]
  40a167:	cmp    eax,0x1e
  40a16a:	jg     40a2a0 <print_full_field_name@@Base+0x810>
  40a170:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a175:	lea    rsi,[rsp+0x8]
  40a17a:	inc    DWORD PTR [rbx+0x1138]
  40a180:	call   403950 <coda_type_get_num_record_fields@plt>
  40a185:	test   eax,eax
  40a187:	je     40a190 <print_full_field_name@@Base+0x700>
  40a189:	xor    eax,eax
  40a18b:	call   40bc80 <handle_coda_error@@Base>
  40a190:	mov    eax,DWORD PTR [rbx+0x110]
  40a196:	lea    edx,[rax+0x1]
  40a199:	mov    DWORD PTR [rbx+0x110],edx
  40a19f:	movsxd rdx,DWORD PTR [rbx+0x530]
  40a1a6:	mov    r13,QWORD PTR [rbx+rdx*8+0x428]
  40a1ae:	test   r13,r13
  40a1b1:	je     40a440 <print_full_field_name@@Base+0x9b0>
  40a1b7:	mov    rdi,r13
  40a1ba:	lea    r12,[rsp+0x10]
  40a1bf:	nop
  40a1c0:	call   408b50 <codadump_filter_get_fieldname@@Base>
  40a1c5:	mov    rbp,rax
  40a1c8:	test   rax,rax
  40a1cb:	je     40a49c <print_full_field_name@@Base+0xa0c>
  40a1d1:	mov    eax,DWORD PTR [rbx+0x110]
  40a1d7:	mov    rdx,r12
  40a1da:	dec    eax
  40a1dc:	cdqe   
  40a1de:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a1e3:	mov    rsi,rbp
  40a1e6:	call   403b00 <coda_type_get_record_field_index_from_name@plt>
  40a1eb:	test   eax,eax
  40a1ed:	je     40a204 <print_full_field_name@@Base+0x774>
  40a1ef:	call   403bf0 <coda_get_errno@plt>
  40a1f4:	cmp    DWORD PTR [rax],0xffffff9a
  40a1f7:	je     40a4c0 <print_full_field_name@@Base+0xa30>
  40a1fd:	xor    eax,eax
  40a1ff:	call   40bc80 <handle_coda_error@@Base>
  40a204:	movsxd rax,DWORD PTR [rbx+0x530]
  40a20b:	mov    rdi,QWORD PTR [rbx+rax*8+0x428]
  40a213:	mov    rbp,rax
  40a216:	inc    ebp
  40a218:	call   408b80 <codadump_filter_get_subfilter@@Base>
  40a21d:	mov    edi,DWORD PTR [rsp+0x10]
  40a221:	movsxd rbp,ebp
  40a224:	mov    esi,0x1
  40a229:	mov    QWORD PTR [rbx+rbp*8+0x428],rax
  40a231:	inc    DWORD PTR [rbx+0x530]
  40a237:	call   40a4f0 <print_full_field_name@@Base+0xa60>
  40a23c:	mov    eax,DWORD PTR [rbx+0x530]
  40a242:	lea    ebp,[rax-0x1]
  40a245:	mov    DWORD PTR [rbx+0x530],ebp
  40a24b:	movsxd rbp,ebp
  40a24e:	add    rbp,0x84
  40a255:	mov    rdi,QWORD PTR [rbx+rbp*8+0x8]
  40a25a:	call   408bb0 <codadump_filter_get_next_filter@@Base>
  40a25f:	mov    QWORD PTR [rbx+rbp*8+0x8],rax
  40a264:	movsxd rax,DWORD PTR [rbx+0x530]
  40a26b:	add    rax,0x84
  40a271:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  40a276:	test   rdi,rdi
  40a279:	jne    40a1c0 <print_full_field_name@@Base+0x730>
  40a27f:	mov    QWORD PTR [rbx+rax*8+0x8],r13
  40a284:	mov    eax,DWORD PTR [rbx+0x110]
  40a28a:	dec    eax
  40a28c:	dec    DWORD PTR [rbx+0x1138]
  40a292:	mov    DWORD PTR [rbx+0x110],eax
  40a298:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2a0:	mov    rax,QWORD PTR [rsp+0x18]
  40a2a5:	xor    rax,QWORD PTR fs:0x28
  40a2ae:	jne    40a4bb <print_full_field_name@@Base+0xa2b>
  40a2b4:	add    rsp,0x28
  40a2b8:	pop    rbx
  40a2b9:	pop    rbp
  40a2ba:	pop    r12
  40a2bc:	pop    r13
  40a2be:	ret    
  40a2bf:	nop
  40a2c0:	movsxd rax,DWORD PTR [rbx+0x110]
  40a2c7:	lea    rsi,[rsp+0x10]
  40a2cc:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a2d1:	call   403970 <coda_type_get_read_type@plt>
  40a2d6:	test   eax,eax
  40a2d8:	jne    40a410 <print_full_field_name@@Base+0x980>
  40a2de:	mov    eax,DWORD PTR [rsp+0x10]
  40a2e2:	sub    eax,0xb
  40a2e5:	cmp    eax,0x1
  40a2e8:	mov    eax,0x0
  40a2ed:	jbe    40a3bb <print_full_field_name@@Base+0x92b>
  40a2f3:	call   409e20 <print_full_field_name@@Base+0x390>
  40a2f8:	jmp    40a2a0 <print_full_field_name@@Base+0x810>
  40a2fa:	nop    WORD PTR [rax+rax*1+0x0]
  40a300:	cmp    DWORD PTR [rbx+0x110],0x1e
  40a307:	jg     40a2a0 <print_full_field_name@@Base+0x810>
  40a309:	xor    eax,eax
  40a30b:	call   407b90 <dim_enter_array@@Base>
  40a310:	movsxd rax,DWORD PTR [rbx+0x110]
  40a317:	inc    DWORD PTR [rbx+0xf34]
  40a31d:	lea    edx,[rax+0x1]
  40a320:	mov    DWORD PTR [rbx+0x110],edx
  40a326:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a32b:	movsxd rdx,edx
  40a32e:	lea    rsi,[rbx+rdx*8+0x10]
  40a333:	call   403a70 <coda_type_get_array_base_type@plt>
  40a338:	test   eax,eax
  40a33a:	jne    40a430 <print_full_field_name@@Base+0x9a0>
  40a340:	xor    eax,eax
  40a342:	call   40a100 <print_full_field_name@@Base+0x670>
  40a347:	xor    eax,eax
  40a349:	dec    DWORD PTR [rbx+0x110]
  40a34f:	dec    DWORD PTR [rbx+0xf34]
  40a355:	call   408500 <dim_leave_array@@Base>
  40a35a:	jmp    40a2a0 <print_full_field_name@@Base+0x810>
  40a35f:	nop
  40a360:	call   403670 <coda_get_option_bypass_special_types@plt>
  40a365:	test   eax,eax
  40a367:	jne    40a3e0 <print_full_field_name@@Base+0x950>
  40a369:	movsxd rax,DWORD PTR [rbx+0x110]
  40a370:	lea    rsi,[rsp+0x10]
  40a375:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a37a:	call   403a40 <coda_type_get_special_type@plt>
  40a37f:	test   eax,eax
  40a381:	jne    40a490 <print_full_field_name@@Base+0xa00>
  40a387:	mov    eax,DWORD PTR [rsp+0x10]
  40a38b:	cmp    eax,0x2
  40a38e:	ja     40a3b0 <print_full_field_name@@Base+0x920>
  40a390:	test   eax,eax
  40a392:	je     40a2a0 <print_full_field_name@@Base+0x810>
  40a398:	xor    eax,eax
  40a39a:	jmp    40a2f3 <print_full_field_name@@Base+0x863>
  40a39f:	nop
  40a3a0:	xor    eax,eax
  40a3a2:	call   40bc80 <handle_coda_error@@Base>
  40a3a7:	jmp    40a13f <print_full_field_name@@Base+0x6af>
  40a3ac:	nop    DWORD PTR [rax+0x0]
  40a3b0:	cmp    eax,0x3
  40a3b3:	jne    40a2a0 <print_full_field_name@@Base+0x810>
  40a3b9:	xor    eax,eax
  40a3bb:	call   407b90 <dim_enter_array@@Base>
  40a3c0:	xor    eax,eax
  40a3c2:	inc    DWORD PTR [rbx+0xf34]
  40a3c8:	call   409e20 <print_full_field_name@@Base+0x390>
  40a3cd:	xor    eax,eax
  40a3cf:	dec    DWORD PTR [rbx+0xf34]
  40a3d5:	call   408500 <dim_leave_array@@Base>
  40a3da:	jmp    40a2a0 <print_full_field_name@@Base+0x810>
  40a3df:	nop
  40a3e0:	movsxd rax,DWORD PTR [rbx+0x110]
  40a3e7:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a3ec:	lea    rsi,[rbx+rax*8+0x10]
  40a3f1:	call   403c00 <coda_type_get_special_base_type@plt>
  40a3f6:	test   eax,eax
  40a3f8:	jne    40a420 <print_full_field_name@@Base+0x990>
  40a3fa:	xor    eax,eax
  40a3fc:	call   40a100 <print_full_field_name@@Base+0x670>
  40a401:	jmp    40a2a0 <print_full_field_name@@Base+0x810>
  40a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a410:	xor    eax,eax
  40a412:	call   40bc80 <handle_coda_error@@Base>
  40a417:	jmp    40a2de <print_full_field_name@@Base+0x84e>
  40a41c:	nop    DWORD PTR [rax+0x0]
  40a420:	xor    eax,eax
  40a422:	call   40bc80 <handle_coda_error@@Base>
  40a427:	jmp    40a3fa <print_full_field_name@@Base+0x96a>
  40a429:	nop    DWORD PTR [rax+0x0]
  40a430:	xor    eax,eax
  40a432:	call   40bc80 <handle_coda_error@@Base>
  40a437:	jmp    40a340 <print_full_field_name@@Base+0x8b0>
  40a43c:	nop    DWORD PTR [rax+0x0]
  40a440:	cmp    QWORD PTR [rsp+0x8],0x0
  40a446:	mov    QWORD PTR [rsp+0x10],0x0
  40a44f:	jle    40a28c <print_full_field_name@@Base+0x7fc>
  40a455:	xor    edi,edi
  40a457:	nop    WORD PTR [rax+rax*1+0x0]
  40a460:	xor    esi,esi
  40a462:	call   40a4f0 <print_full_field_name@@Base+0xa60>
  40a467:	mov    rax,QWORD PTR [rsp+0x10]
  40a46c:	lea    rdi,[rax+0x1]
  40a470:	mov    QWORD PTR [rsp+0x10],rdi
  40a475:	cmp    rdi,QWORD PTR [rsp+0x8]
  40a47a:	jl     40a460 <print_full_field_name@@Base+0x9d0>
  40a47c:	mov    eax,DWORD PTR [rbx+0x110]
  40a482:	dec    eax
  40a484:	jmp    40a28c <print_full_field_name@@Base+0x7fc>
  40a489:	nop    DWORD PTR [rax+0x0]
  40a490:	xor    eax,eax
  40a492:	call   40bc80 <handle_coda_error@@Base>
  40a497:	jmp    40a387 <print_full_field_name@@Base+0x8f7>
  40a49c:	lea    rcx,[rip+0x2425]        # 40c8c8 <_IO_stdin_used@@Base+0x8c8>
  40a4a3:	mov    edx,0x189
  40a4a8:	lea    rsi,[rip+0x2339]        # 40c7e8 <_IO_stdin_used@@Base+0x7e8>
  40a4af:	lea    rdi,[rip+0x231e]        # 40c7d4 <_IO_stdin_used@@Base+0x7d4>
  40a4b6:	call   403860 <__assert_fail@plt>
  40a4bb:	call   403850 <__stack_chk_fail@plt>
  40a4c0:	mov    rax,QWORD PTR [rip+0x5b31]        # 40fff8 <stderr@GLIBC_2.2.5>
  40a4c7:	mov    rcx,rbp
  40a4ca:	mov    rdi,QWORD PTR [rax]
  40a4cd:	lea    rdx,[rip+0x237c]        # 40c850 <_IO_stdin_used@@Base+0x850>
  40a4d4:	mov    esi,0x1
  40a4d9:	xor    eax,eax
  40a4db:	call   403bc0 <__fprintf_chk@plt>
  40a4e0:	mov    edi,0x1
  40a4e5:	call   403b90 <exit@plt>
  40a4ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a4f0:	push   r12
  40a4f2:	mov    r12d,esi
  40a4f5:	push   rbp
  40a4f6:	movsxd rbp,edi
  40a4f9:	mov    rsi,rbp
  40a4fc:	push   rbx
  40a4fd:	sub    rsp,0x10
  40a501:	mov    rbx,0x410380
  40a508:	mov    rax,QWORD PTR fs:0x28
  40a511:	mov    QWORD PTR [rsp+0x8],rax
  40a516:	xor    eax,eax
  40a518:	mov    eax,DWORD PTR [rbx+0x1138]
  40a51e:	mov    rdx,rsp
  40a521:	dec    eax
  40a523:	cdqe   
  40a525:	mov    DWORD PTR [rbx+rax*4+0xfb8],edi
  40a52c:	mov    eax,DWORD PTR [rbx+0x110]
  40a532:	dec    eax
  40a534:	cdqe   
  40a536:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a53b:	call   4036d0 <coda_type_get_record_field_hidden_status@plt>
  40a540:	test   eax,eax
  40a542:	jne    40a618 <print_full_field_name@@Base+0xb88>
  40a548:	mov    edx,DWORD PTR [rsp]
  40a54b:	test   edx,edx
  40a54d:	je     40a555 <print_full_field_name@@Base+0xac5>
  40a54f:	and    r12d,0x1
  40a553:	je     40a5be <print_full_field_name@@Base+0xb2e>
  40a555:	mov    eax,DWORD PTR [rbx+0x110]
  40a55b:	dec    eax
  40a55d:	cdqe   
  40a55f:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a564:	mov    rax,0x410378
  40a56b:	mov    eax,DWORD PTR [rax]
  40a56d:	test   eax,eax
  40a56f:	jne    40a5e0 <print_full_field_name@@Base+0xb50>
  40a571:	mov    eax,DWORD PTR [rbx+0x1138]
  40a577:	mov    rsi,rbp
  40a57a:	dec    eax
  40a57c:	cdqe   
  40a57e:	lea    rdx,[rbx+rax*8+0x1038]
  40a586:	call   403c10 <coda_type_get_record_field_name@plt>
  40a58b:	test   eax,eax
  40a58d:	jne    40a638 <print_full_field_name@@Base+0xba8>
  40a593:	movsxd rdx,DWORD PTR [rbx+0x110]
  40a59a:	mov    rsi,rbp
  40a59d:	mov    rax,rdx
  40a5a0:	dec    eax
  40a5a2:	cdqe   
  40a5a4:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a5a9:	lea    rdx,[rbx+rdx*8+0x10]
  40a5ae:	call   403790 <coda_type_get_record_field_type@plt>
  40a5b3:	test   eax,eax
  40a5b5:	jne    40a628 <print_full_field_name@@Base+0xb98>
  40a5b7:	xor    eax,eax
  40a5b9:	call   40a100 <print_full_field_name@@Base+0x670>
  40a5be:	mov    rax,QWORD PTR [rsp+0x8]
  40a5c3:	xor    rax,QWORD PTR fs:0x28
  40a5cc:	jne    40a66d <print_full_field_name@@Base+0xbdd>
  40a5d2:	add    rsp,0x10
  40a5d6:	pop    rbx
  40a5d7:	pop    rbp
  40a5d8:	pop    r12
  40a5da:	ret    
  40a5db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5e0:	lea    rdx,[rsp+0x4]
  40a5e5:	mov    rsi,rbp
  40a5e8:	call   4037d0 <coda_type_get_record_field_available_status@plt>
  40a5ed:	test   eax,eax
  40a5ef:	jne    40a648 <print_full_field_name@@Base+0xbb8>
  40a5f1:	mov    edx,DWORD PTR [rsp+0x4]
  40a5f5:	cmp    edx,0xffffffff
  40a5f8:	je     40a658 <print_full_field_name@@Base+0xbc8>
  40a5fa:	mov    eax,DWORD PTR [rbx+0x110]
  40a600:	dec    eax
  40a602:	cdqe   
  40a604:	mov    DWORD PTR [rbx+rax*4+0xf38],edx
  40a60b:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40a610:	jmp    40a571 <print_full_field_name@@Base+0xae1>
  40a615:	nop    DWORD PTR [rax]
  40a618:	xor    eax,eax
  40a61a:	call   40bc80 <handle_coda_error@@Base>
  40a61f:	jmp    40a548 <print_full_field_name@@Base+0xab8>
  40a624:	nop    DWORD PTR [rax+0x0]
  40a628:	xor    eax,eax
  40a62a:	call   40bc80 <handle_coda_error@@Base>
  40a62f:	jmp    40a5b7 <print_full_field_name@@Base+0xb27>
  40a631:	nop    DWORD PTR [rax+0x0]
  40a638:	xor    eax,eax
  40a63a:	call   40bc80 <handle_coda_error@@Base>
  40a63f:	jmp    40a593 <print_full_field_name@@Base+0xb03>
  40a644:	nop    DWORD PTR [rax+0x0]
  40a648:	xor    eax,eax
  40a64a:	call   40bc80 <handle_coda_error@@Base>
  40a64f:	jmp    40a5f1 <print_full_field_name@@Base+0xb61>
  40a651:	nop    DWORD PTR [rax+0x0]
  40a658:	xor    eax,eax
  40a65a:	call   408670 <dim_record_field_available@@Base>
  40a65f:	test   eax,eax
  40a661:	je     40a5be <print_full_field_name@@Base+0xb2e>
  40a667:	mov    edx,DWORD PTR [rsp+0x4]
  40a66b:	jmp    40a5fa <print_full_field_name@@Base+0xb6a>
  40a66d:	call   403850 <__stack_chk_fail@plt>
  40a672:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a67d:	nop    DWORD PTR [rax]

000000000040a680 <traverse_info_init@@Base>:
  40a680:	endbr64 
  40a684:	mov    rax,0x410380
  40a68b:	mov    QWORD PTR [rax+0x8],0x0
  40a693:	mov    DWORD PTR [rax+0x110],0x0
  40a69d:	mov    DWORD PTR [rax+0xf34],0x0
  40a6a7:	mov    DWORD PTR [rax+0x1138],0x0
  40a6b1:	ret    
  40a6b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a6bd:	nop    DWORD PTR [rax]

000000000040a6c0 <traverse_info_done@@Base>:
  40a6c0:	endbr64 
  40a6c4:	push   rbx
  40a6c5:	mov    rbx,0x410380
  40a6cc:	mov    rdi,QWORD PTR [rbx+0x8]
  40a6d0:	test   rdi,rdi
  40a6d3:	je     40a6da <traverse_info_done@@Base+0x1a>
  40a6d5:	call   403ad0 <coda_close@plt>
  40a6da:	cmp    QWORD PTR [rbx+0x428],0x0
  40a6e2:	je     40a6f8 <traverse_info_done@@Base+0x38>
  40a6e4:	lea    rdi,[rbx+0x428]
  40a6eb:	pop    rbx
  40a6ec:	jmp    408680 <codadump_filter_remove@@Base>
  40a6f1:	nop    DWORD PTR [rax+0x0]
  40a6f8:	pop    rbx
  40a6f9:	ret    
  40a6fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a700 <traverse_product@@Base>:
  40a700:	endbr64 
  40a704:	push   rbp
  40a705:	push   rbx
  40a706:	sub    rsp,0x8
  40a70a:	mov    rbx,0x410380
  40a711:	mov    rdi,QWORD PTR [rbx]
  40a714:	lea    rsi,[rbx+0x8]
  40a718:	call   403700 <coda_open@plt>
  40a71d:	test   eax,eax
  40a71f:	jne    40a770 <traverse_product@@Base+0x70>
  40a721:	mov    rsi,QWORD PTR [rbx+0x8]
  40a725:	lea    rdi,[rbx+0x118]
  40a72c:	call   4038b0 <coda_cursor_set_product@plt>
  40a731:	test   eax,eax
  40a733:	jne    40a798 <traverse_product@@Base+0x98>
  40a735:	movsxd rax,DWORD PTR [rbx+0x110]
  40a73c:	lea    rdi,[rbx+0x118]
  40a743:	lea    rsi,[rbx+rax*8+0x10]
  40a748:	call   4037a0 <coda_cursor_get_type@plt>
  40a74d:	test   eax,eax
  40a74f:	jne    40a788 <traverse_product@@Base+0x88>
  40a751:	xor    eax,eax
  40a753:	call   40a100 <print_full_field_name@@Base+0x670>
  40a758:	mov    rdi,QWORD PTR [rbx+0x8]
  40a75c:	call   403ad0 <coda_close@plt>
  40a761:	mov    QWORD PTR [rbx+0x8],0x0
  40a769:	add    rsp,0x8
  40a76d:	pop    rbx
  40a76e:	pop    rbp
  40a76f:	ret    
  40a770:	call   403bf0 <coda_get_errno@plt>
  40a775:	cmp    DWORD PTR [rax],0xffffffeb
  40a778:	je     40a7a8 <traverse_product@@Base+0xa8>
  40a77a:	xor    eax,eax
  40a77c:	call   40bc80 <handle_coda_error@@Base>
  40a781:	jmp    40a721 <traverse_product@@Base+0x21>
  40a783:	nop    DWORD PTR [rax+rax*1+0x0]
  40a788:	xor    eax,eax
  40a78a:	call   40bc80 <handle_coda_error@@Base>
  40a78f:	jmp    40a751 <traverse_product@@Base+0x51>
  40a791:	nop    DWORD PTR [rax+0x0]
  40a798:	xor    eax,eax
  40a79a:	call   40bc80 <handle_coda_error@@Base>
  40a79f:	jmp    40a735 <traverse_product@@Base+0x35>
  40a7a1:	nop    DWORD PTR [rax+0x0]
  40a7a8:	xor    edi,edi
  40a7aa:	call   403750 <coda_set_option_use_mmap@plt>
  40a7af:	mov    rdi,QWORD PTR [rbx]
  40a7b2:	lea    rsi,[rbx+0x8]
  40a7b6:	call   403700 <coda_open@plt>
  40a7bb:	mov    ebp,eax
  40a7bd:	mov    edi,0x1
  40a7c2:	call   403750 <coda_set_option_use_mmap@plt>
  40a7c7:	test   ebp,ebp
  40a7c9:	jne    40a77a <traverse_product@@Base+0x7a>
  40a7cb:	jmp    40a721 <traverse_product@@Base+0x21>
  40a7d0:	sub    rsp,0xd8
  40a7d7:	mov    QWORD PTR [rsp+0x28],rsi
  40a7dc:	mov    QWORD PTR [rsp+0x30],rdx
  40a7e1:	mov    QWORD PTR [rsp+0x38],rcx
  40a7e6:	mov    QWORD PTR [rsp+0x40],r8
  40a7eb:	mov    QWORD PTR [rsp+0x48],r9
  40a7f0:	test   al,al
  40a7f2:	je     40a833 <traverse_product@@Base+0x133>
  40a7f4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40a7fa:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40a800:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40a806:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40a80f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40a818:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40a821:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40a82a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40a833:	mov    rax,QWORD PTR fs:0x28
  40a83c:	mov    QWORD PTR [rsp+0x18],rax
  40a841:	xor    eax,eax
  40a843:	lea    rax,[rsp+0xe0]
  40a84b:	mov    QWORD PTR [rsp+0x8],rax
  40a850:	lea    rax,[rsp+0x20]
  40a855:	mov    QWORD PTR [rsp+0x10],rax
  40a85a:	mov    rax,0x4114c0
  40a861:	mov    rdx,rdi
  40a864:	mov    rdi,QWORD PTR [rax]
  40a867:	mov    rcx,rsp
  40a86a:	mov    esi,0x1
  40a86f:	mov    DWORD PTR [rsp],0x8
  40a876:	mov    DWORD PTR [rsp+0x4],0x30
  40a87e:	call   4036b0 <__vfprintf_chk@plt>
  40a883:	mov    rdx,QWORD PTR [rsp+0x18]
  40a888:	xor    rdx,QWORD PTR fs:0x28
  40a891:	jne    40a89b <traverse_product@@Base+0x19b>
  40a893:	add    rsp,0xd8
  40a89a:	ret    
  40a89b:	call   403850 <__stack_chk_fail@plt>
  40a8a0:	test   rsi,rsi
  40a8a3:	jle    40a9d0 <traverse_product@@Base+0x2d0>
  40a8a9:	push   r12
  40a8ab:	lea    r12,[rip+0x176c]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  40a8b2:	push   rbp
  40a8b3:	lea    rbp,[rdi+rsi*1]
  40a8b7:	push   rbx
  40a8b8:	mov    rbx,rdi
  40a8bb:	jmp    40a908 <traverse_product@@Base+0x208>
  40a8bd:	nop    DWORD PTR [rax]
  40a8c0:	cmp    sil,0x9
  40a8c4:	je     40a998 <traverse_product@@Base+0x298>
  40a8ca:	cmp    sil,0xa
  40a8ce:	je     40a980 <traverse_product@@Base+0x280>
  40a8d4:	cmp    sil,0x8
  40a8d8:	je     40a970 <traverse_product@@Base+0x270>
  40a8de:	lea    eax,[rsi-0x20]
  40a8e1:	cmp    al,0x5e
  40a8e3:	ja     40a9b0 <traverse_product@@Base+0x2b0>
  40a8e9:	lea    rdi,[rip+0x1914]        # 40c204 <_IO_stdin_used@@Base+0x204>
  40a8f0:	xor    eax,eax
  40a8f2:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a8f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a900:	inc    rbx
  40a903:	cmp    rbp,rbx
  40a906:	je     40a93b <traverse_product@@Base+0x23b>
  40a908:	movsx  esi,BYTE PTR [rbx]
  40a90b:	cmp    sil,0xc
  40a90f:	je     40a940 <traverse_product@@Base+0x240>
  40a911:	jle    40a8c0 <traverse_product@@Base+0x1c0>
  40a913:	cmp    sil,0x22
  40a917:	je     40a960 <traverse_product@@Base+0x260>
  40a919:	cmp    sil,0x5c
  40a91d:	je     40a950 <traverse_product@@Base+0x250>
  40a91f:	cmp    sil,0xd
  40a923:	jne    40a8de <traverse_product@@Base+0x1de>
  40a925:	lea    rdi,[rip+0x16f5]        # 40c021 <_IO_stdin_used@@Base+0x21>
  40a92c:	xor    eax,eax
  40a92e:	inc    rbx
  40a931:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a936:	cmp    rbp,rbx
  40a939:	jne    40a908 <traverse_product@@Base+0x208>
  40a93b:	pop    rbx
  40a93c:	pop    rbp
  40a93d:	pop    r12
  40a93f:	ret    
  40a940:	mov    rdi,r12
  40a943:	xor    eax,eax
  40a945:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a94a:	jmp    40a900 <traverse_product@@Base+0x200>
  40a94c:	nop    DWORD PTR [rax+0x0]
  40a950:	lea    rdi,[rip+0x16cd]        # 40c024 <_IO_stdin_used@@Base+0x24>
  40a957:	xor    eax,eax
  40a959:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a95e:	jmp    40a900 <traverse_product@@Base+0x200>
  40a960:	lea    rdi,[rip+0x1d09]        # 40c670 <_IO_stdin_used@@Base+0x670>
  40a967:	xor    eax,eax
  40a969:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a96e:	jmp    40a900 <traverse_product@@Base+0x200>
  40a970:	lea    rdi,[rip+0x169b]        # 40c012 <_IO_stdin_used@@Base+0x12>
  40a977:	xor    eax,eax
  40a979:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a97e:	jmp    40a900 <traverse_product@@Base+0x200>
  40a980:	lea    rdi,[rip+0x1691]        # 40c018 <_IO_stdin_used@@Base+0x18>
  40a987:	xor    eax,eax
  40a989:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a98e:	jmp    40a900 <traverse_product@@Base+0x200>
  40a993:	nop    DWORD PTR [rax+rax*1+0x0]
  40a998:	lea    rdi,[rip+0x1676]        # 40c015 <_IO_stdin_used@@Base+0x15>
  40a99f:	xor    eax,eax
  40a9a1:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a9a6:	jmp    40a900 <traverse_product@@Base+0x200>
  40a9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9b0:	movzx  esi,sil
  40a9b4:	lea    rdi,[rip+0x1cb8]        # 40c673 <_IO_stdin_used@@Base+0x673>
  40a9bb:	xor    eax,eax
  40a9bd:	call   40a7d0 <traverse_product@@Base+0xd0>
  40a9c2:	jmp    40a900 <traverse_product@@Base+0x200>
  40a9c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a9d0:	ret    
  40a9d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a9dc:	nop    DWORD PTR [rax+0x0]
  40a9e0:	push   r12
  40a9e2:	push   rbp
  40a9e3:	push   rbx
  40a9e4:	mov    ebx,DWORD PTR [rip+0x5966]        # 410350 <__bss_start@@Base+0x14>
  40a9ea:	test   ebx,ebx
  40a9ec:	js     40aa1f <traverse_product@@Base+0x31f>
  40a9ee:	je     40aa1a <traverse_product@@Base+0x31a>
  40a9f0:	mov    r12,0x4114c0
  40a9f7:	lea    rbp,[rip+0x1803]        # 40c201 <_IO_stdin_used@@Base+0x201>
  40a9fe:	xchg   ax,ax
  40aa00:	mov    rcx,QWORD PTR [r12]
  40aa04:	mov    edx,0x2
  40aa09:	mov    esi,0x1
  40aa0e:	mov    rdi,rbp
  40aa11:	call   403bb0 <fwrite@plt>
  40aa16:	dec    ebx
  40aa18:	jne    40aa00 <traverse_product@@Base+0x300>
  40aa1a:	pop    rbx
  40aa1b:	pop    rbp
  40aa1c:	pop    r12
  40aa1e:	ret    
  40aa1f:	lea    rcx,[rip+0x1f92]        # 40c9b8 <_IO_stdin_used@@Base+0x9b8>
  40aa26:	mov    edx,0x2c
  40aa2b:	lea    rsi,[rip+0x1ece]        # 40c900 <_IO_stdin_used@@Base+0x900>
  40aa32:	lea    rdi,[rip+0x17bc]        # 40c1f5 <_IO_stdin_used@@Base+0x1f5>
  40aa39:	call   403860 <__assert_fail@plt>
  40aa3e:	xchg   ax,ax
  40aa40:	push   rbx
  40aa41:	mov    rbx,rdi
  40aa44:	sub    rsp,0xd0
  40aa4b:	mov    QWORD PTR [rsp+0x28],rsi
  40aa50:	mov    QWORD PTR [rsp+0x30],rdx
  40aa55:	mov    QWORD PTR [rsp+0x38],rcx
  40aa5a:	mov    QWORD PTR [rsp+0x40],r8
  40aa5f:	mov    QWORD PTR [rsp+0x48],r9
  40aa64:	test   al,al
  40aa66:	je     40aaa7 <traverse_product@@Base+0x3a7>
  40aa68:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40aa6e:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40aa74:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40aa7a:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40aa83:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40aa8c:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40aa95:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40aa9e:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40aaa7:	mov    rax,QWORD PTR fs:0x28
  40aab0:	mov    QWORD PTR [rsp+0x18],rax
  40aab5:	xor    eax,eax
  40aab7:	call   40a9e0 <traverse_product@@Base+0x2e0>
  40aabc:	lea    rax,[rsp+0xe0]
  40aac4:	mov    QWORD PTR [rsp+0x8],rax
  40aac9:	lea    rax,[rsp+0x20]
  40aace:	mov    QWORD PTR [rsp+0x10],rax
  40aad3:	mov    rax,0x4114c0
  40aada:	mov    rdx,rbx
  40aadd:	mov    rdi,QWORD PTR [rax]
  40aae0:	mov    rcx,rsp
  40aae3:	mov    esi,0x1
  40aae8:	mov    DWORD PTR [rsp],0x8
  40aaef:	mov    DWORD PTR [rsp+0x4],0x30
  40aaf7:	call   4036b0 <__vfprintf_chk@plt>
  40aafc:	mov    rdx,QWORD PTR [rsp+0x18]
  40ab01:	xor    rdx,QWORD PTR fs:0x28
  40ab0a:	jne    40ab15 <traverse_product@@Base+0x415>
  40ab0c:	add    rsp,0xd0
  40ab13:	pop    rbx
  40ab14:	ret    
  40ab15:	call   403850 <__stack_chk_fail@plt>
  40ab1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ab20:	push   r14
  40ab22:	push   r13
  40ab24:	push   r12
  40ab26:	push   rbp
  40ab27:	mov    ebp,esi
  40ab29:	push   rbx
  40ab2a:	mov    rbx,rdi
  40ab2d:	sub    rsp,0xa0
  40ab34:	mov    edi,DWORD PTR [rip+0x5812]        # 41034c <__bss_start@@Base+0x10>
  40ab3a:	mov    rax,QWORD PTR fs:0x28
  40ab43:	mov    QWORD PTR [rsp+0x98],rax
  40ab4b:	xor    eax,eax
  40ab4d:	mov    DWORD PTR [rsp+0x4],0x0
  40ab55:	test   edi,edi
  40ab57:	jne    40aeb8 <traverse_product@@Base+0x7b8>
  40ab5d:	mov    rsi,rsp
  40ab60:	mov    rdi,rbx
  40ab63:	call   403800 <coda_cursor_get_type_class@plt>
  40ab68:	test   eax,eax
  40ab6a:	jne    40aea8 <traverse_product@@Base+0x7a8>
  40ab70:	cmp    DWORD PTR [rsp],0x6
  40ab74:	ja     40ac20 <traverse_product@@Base+0x520>
  40ab7a:	mov    eax,DWORD PTR [rsp]
  40ab7d:	lea    rdx,[rip+0x1de0]        # 40c964 <_IO_stdin_used@@Base+0x964>
  40ab84:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ab88:	add    rax,rdx
  40ab8b:	notrack jmp rax
  40ab8e:	xchg   ax,ax
  40ab90:	lea    rsi,[rsp+0x18]
  40ab95:	mov    rdi,rbx
  40ab98:	call   403880 <coda_cursor_get_special_type@plt>
  40ab9d:	test   eax,eax
  40ab9f:	je     40aba8 <traverse_product@@Base+0x4a8>
  40aba1:	xor    eax,eax
  40aba3:	call   40bc80 <handle_coda_error@@Base>
  40aba8:	mov    eax,DWORD PTR [rsp+0x18]
  40abac:	cmp    eax,0x1
  40abaf:	je     40b120 <traverse_product@@Base+0xa20>
  40abb5:	test   eax,eax
  40abb7:	je     40afa8 <traverse_product@@Base+0x8a8>
  40abbd:	cmp    eax,0x2
  40abc0:	jne    40ae60 <traverse_product@@Base+0x760>
  40abc6:	lea    rsi,[rsp+0x28]
  40abcb:	mov    rdi,rbx
  40abce:	call   4039a0 <coda_cursor_read_double@plt>
  40abd3:	test   eax,eax
  40abd5:	jne    40b482 <traverse_product@@Base+0xd82>
  40abdb:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  40abe1:	call   4039b0 <coda_isNaN@plt>
  40abe6:	test   eax,eax
  40abe8:	jne    40ac00 <traverse_product@@Base+0x500>
  40abea:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  40abf0:	call   4037b0 <coda_isInf@plt>
  40abf5:	test   eax,eax
  40abf7:	je     40b4a6 <traverse_product@@Base+0xda6>
  40abfd:	nop    DWORD PTR [rax]
  40ac00:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  40ac06:	lea    rdi,[rip+0x1656]        # 40c263 <_IO_stdin_used@@Base+0x263>
  40ac0d:	mov    eax,0x1
  40ac12:	call   40a7d0 <traverse_product@@Base+0xd0>
  40ac17:	nop    WORD PTR [rax+rax*1+0x0]
  40ac20:	mov    eax,DWORD PTR [rsp+0x4]
  40ac24:	test   eax,eax
  40ac26:	jne    40ac50 <traverse_product@@Base+0x550>
  40ac28:	mov    rax,QWORD PTR [rsp+0x98]
  40ac30:	xor    rax,QWORD PTR fs:0x28
  40ac39:	jne    40b5d5 <traverse_product@@Base+0xed5>
  40ac3f:	add    rsp,0xa0
  40ac46:	pop    rbx
  40ac47:	pop    rbp
  40ac48:	pop    r12
  40ac4a:	pop    r13
  40ac4c:	pop    r14
  40ac4e:	ret    
  40ac4f:	nop
  40ac50:	dec    DWORD PTR [rip+0x56fa]        # 410350 <__bss_start@@Base+0x14>
  40ac56:	jmp    40ac28 <traverse_product@@Base+0x528>
  40ac58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac60:	lea    rsi,[rsp+0x20]
  40ac65:	mov    rdi,rbx
  40ac68:	call   403900 <coda_cursor_get_read_type@plt>
  40ac6d:	test   eax,eax
  40ac6f:	jne    40af60 <traverse_product@@Base+0x860>
  40ac75:	mov    eax,DWORD PTR [rsp+0x20]
  40ac79:	inc    eax
  40ac7b:	cmp    eax,0xd
  40ac7e:	ja     40ac20 <traverse_product@@Base+0x520>
  40ac80:	lea    rdx,[rip+0x1cf9]        # 40c980 <_IO_stdin_used@@Base+0x980>
  40ac87:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ac8b:	add    rax,rdx
  40ac8e:	notrack jmp rax
  40ac91:	nop    DWORD PTR [rax+0x0]
  40ac98:	lea    rbp,[rsp+0x30]
  40ac9d:	lea    rsi,[rsp+0x28]
  40aca2:	mov    rdx,rbp
  40aca5:	mov    rdi,rbx
  40aca8:	call   403ab0 <coda_cursor_get_array_dim@plt>
  40acad:	test   eax,eax
  40acaf:	jne    40af50 <traverse_product@@Base+0x850>
  40acb5:	mov    eax,DWORD PTR [rsp+0x28]
  40acb9:	test   eax,eax
  40acbb:	js     40af70 <traverse_product@@Base+0x870>
  40acc1:	je     40b478 <traverse_product@@Base+0xd78>
  40acc7:	lea    ecx,[rax-0x1]
  40acca:	lea    rax,[rbp+0x8]
  40acce:	mov    rdx,rbp
  40acd1:	lea    rcx,[rax+rcx*8]
  40acd5:	mov    ebp,0x1
  40acda:	jmp    40ace4 <traverse_product@@Base+0x5e4>
  40acdc:	nop    DWORD PTR [rax+0x0]
  40ace0:	add    rax,0x8
  40ace4:	imul   rbp,QWORD PTR [rdx]
  40ace8:	mov    rdx,rax
  40aceb:	cmp    rcx,rax
  40acee:	jne    40ace0 <traverse_product@@Base+0x5e0>
  40acf0:	test   rbp,rbp
  40acf3:	jle    40af70 <traverse_product@@Base+0x870>
  40acf9:	lea    rdi,[rip+0x1bf5]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  40ad00:	xor    eax,eax
  40ad02:	call   40a7d0 <traverse_product@@Base+0xd0>
  40ad07:	mov    rdi,rbx
  40ad0a:	call   403890 <coda_cursor_goto_first_array_element@plt>
  40ad0f:	test   eax,eax
  40ad11:	jne    40b49a <traverse_product@@Base+0xd9a>
  40ad17:	lea    r14,[rbp-0x1]
  40ad1b:	xor    r12d,r12d
  40ad1e:	lea    r13,[rip+0x1bc8]        # 40c8ed <_IO_stdin_used@@Base+0x8ed>
  40ad25:	mov    rdi,r13
  40ad28:	xor    eax,eax
  40ad2a:	call   40aa40 <traverse_product@@Base+0x340>
  40ad2f:	xor    esi,esi
  40ad31:	mov    rdi,rbx
  40ad34:	inc    DWORD PTR [rip+0x5616]        # 410350 <__bss_start@@Base+0x14>
  40ad3a:	call   40ab20 <traverse_product@@Base+0x420>
  40ad3f:	dec    DWORD PTR [rip+0x560b]        # 410350 <__bss_start@@Base+0x14>
  40ad45:	cmp    r12,r14
  40ad48:	jl     40afc0 <traverse_product@@Base+0x8c0>
  40ad4e:	inc    r12
  40ad51:	cmp    rbp,r12
  40ad54:	jg     40ad25 <traverse_product@@Base+0x625>
  40ad56:	mov    rdi,rbx
  40ad59:	call   403930 <coda_cursor_goto_parent@plt>
  40ad5e:	mov    eax,DWORD PTR [rsp+0x4]
  40ad62:	test   eax,eax
  40ad64:	je     40ac28 <traverse_product@@Base+0x528>
  40ad6a:	jmp    40ac50 <traverse_product@@Base+0x550>
  40ad6f:	nop
  40ad70:	lea    rsi,[rsp+0x10]
  40ad75:	mov    rdi,rbx
  40ad78:	call   403730 <coda_cursor_get_num_elements@plt>
  40ad7d:	test   eax,eax
  40ad7f:	jne    40af40 <traverse_product@@Base+0x840>
  40ad85:	cmp    QWORD PTR [rsp+0x10],0x0
  40ad8b:	jle    40af90 <traverse_product@@Base+0x890>
  40ad91:	test   ebp,ebp
  40ad93:	jne    40b430 <traverse_product@@Base+0xd30>
  40ad99:	lea    rsi,[rsp+0x18]
  40ad9e:	mov    rdi,rbx
  40ada1:	call   4037a0 <coda_cursor_get_type@plt>
  40ada6:	test   eax,eax
  40ada8:	jne    40b420 <traverse_product@@Base+0xd20>
  40adae:	mov    rdi,QWORD PTR [rsp+0x18]
  40adb3:	lea    rsi,[rsp+0x8]
  40adb8:	call   403a50 <coda_type_get_record_union_status@plt>
  40adbd:	test   eax,eax
  40adbf:	jne    40b448 <traverse_product@@Base+0xd48>
  40adc5:	mov    ecx,DWORD PTR [rsp+0x8]
  40adc9:	test   ecx,ecx
  40adcb:	je     40aff0 <traverse_product@@Base+0x8f0>
  40add1:	lea    rsi,[rsp+0x20]
  40add6:	mov    rdi,rbx
  40add9:	call   403b80 <coda_cursor_get_available_union_field_index@plt>
  40adde:	test   eax,eax
  40ade0:	jne    40b188 <traverse_product@@Base+0xa88>
  40ade6:	mov    rsi,QWORD PTR [rsp+0x20]
  40adeb:	mov    rdi,QWORD PTR [rsp+0x18]
  40adf0:	lea    rdx,[rsp+0x28]
  40adf5:	call   403c10 <coda_type_get_record_field_name@plt>
  40adfa:	test   eax,eax
  40adfc:	jne    40b178 <traverse_product@@Base+0xa78>
  40ae02:	mov    rsi,QWORD PTR [rsp+0x20]
  40ae07:	mov    rdi,rbx
  40ae0a:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  40ae0f:	test   eax,eax
  40ae11:	jne    40b168 <traverse_product@@Base+0xa68>
  40ae17:	test   ebp,ebp
  40ae19:	jne    40b158 <traverse_product@@Base+0xa58>
  40ae1f:	mov    rsi,QWORD PTR [rsp+0x28]
  40ae24:	lea    rdi,[rip+0x1ab9]        # 40c8e4 <_IO_stdin_used@@Base+0x8e4>
  40ae2b:	xor    eax,eax
  40ae2d:	call   40a7d0 <traverse_product@@Base+0xd0>
  40ae32:	mov    rdi,rbx
  40ae35:	mov    esi,0x1
  40ae3a:	inc    DWORD PTR [rip+0x5510]        # 410350 <__bss_start@@Base+0x14>
  40ae40:	call   40ab20 <traverse_product@@Base+0x420>
  40ae45:	mov    rdi,rbx
  40ae48:	dec    DWORD PTR [rip+0x5502]        # 410350 <__bss_start@@Base+0x14>
  40ae4e:	call   403930 <coda_cursor_goto_parent@plt>
  40ae53:	jmp    40ac20 <traverse_product@@Base+0x520>
  40ae58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae60:	cmp    eax,0x3
  40ae63:	jne    40ac20 <traverse_product@@Base+0x520>
  40ae69:	lea    rdx,[rsp+0x28]
  40ae6e:	lea    rsi,[rsp+0x20]
  40ae73:	mov    rdi,rbx
  40ae76:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  40ae7b:	test   eax,eax
  40ae7d:	jne    40b48e <traverse_product@@Base+0xd8e>
  40ae83:	vmovsd xmm1,QWORD PTR [rsp+0x28]
  40ae89:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  40ae8f:	lea    rdi,[rip+0x13f0]        # 40c286 <_IO_stdin_used@@Base+0x286>
  40ae96:	mov    eax,0x2
  40ae9b:	call   40a7d0 <traverse_product@@Base+0xd0>
  40aea0:	jmp    40ac20 <traverse_product@@Base+0x520>
  40aea5:	nop    DWORD PTR [rax]
  40aea8:	xor    eax,eax
  40aeaa:	call   40bc80 <handle_coda_error@@Base>
  40aeaf:	jmp    40ab70 <traverse_product@@Base+0x470>
  40aeb4:	nop    DWORD PTR [rax+0x0]
  40aeb8:	lea    rsi,[rsp+0x4]
  40aebd:	mov    rdi,rbx
  40aec0:	call   4037f0 <coda_cursor_has_attributes@plt>
  40aec5:	test   eax,eax
  40aec7:	jne    40afe0 <traverse_product@@Base+0x8e0>
  40aecd:	mov    esi,DWORD PTR [rsp+0x4]
  40aed1:	test   esi,esi
  40aed3:	je     40ab5d <traverse_product@@Base+0x45d>
  40aed9:	test   ebp,ebp
  40aedb:	jne    40b108 <traverse_product@@Base+0xa08>
  40aee1:	lea    rdi,[rip+0x19ee]        # 40c8d6 <_IO_stdin_used@@Base+0x8d6>
  40aee8:	xor    eax,eax
  40aeea:	call   40a7d0 <traverse_product@@Base+0xd0>
  40aeef:	mov    rdi,rbx
  40aef2:	call   403a20 <coda_cursor_goto_attributes@plt>
  40aef7:	test   eax,eax
  40aef9:	jne    40b0f8 <traverse_product@@Base+0x9f8>
  40aeff:	mov    esi,0x1
  40af04:	mov    rdi,rbx
  40af07:	inc    DWORD PTR [rip+0x5443]        # 410350 <__bss_start@@Base+0x14>
  40af0d:	call   40ab20 <traverse_product@@Base+0x420>
  40af12:	mov    rdi,rbx
  40af15:	dec    DWORD PTR [rip+0x5435]        # 410350 <__bss_start@@Base+0x14>
  40af1b:	call   403930 <coda_cursor_goto_parent@plt>
  40af20:	lea    rdi,[rip+0x19b6]        # 40c8dd <_IO_stdin_used@@Base+0x8dd>
  40af27:	xor    eax,eax
  40af29:	call   40aa40 <traverse_product@@Base+0x340>
  40af2e:	inc    DWORD PTR [rip+0x541c]        # 410350 <__bss_start@@Base+0x14>
  40af34:	jmp    40ab5d <traverse_product@@Base+0x45d>
  40af39:	nop    DWORD PTR [rax+0x0]
  40af40:	xor    eax,eax
  40af42:	call   40bc80 <handle_coda_error@@Base>
  40af47:	jmp    40ad85 <traverse_product@@Base+0x685>
  40af4c:	nop    DWORD PTR [rax+0x0]
  40af50:	xor    eax,eax
  40af52:	call   40bc80 <handle_coda_error@@Base>
  40af57:	jmp    40acb5 <traverse_product@@Base+0x5b5>
  40af5c:	nop    DWORD PTR [rax+0x0]
  40af60:	xor    eax,eax
  40af62:	call   40bc80 <handle_coda_error@@Base>
  40af67:	jmp    40ac75 <traverse_product@@Base+0x575>
  40af6c:	nop    DWORD PTR [rax+0x0]
  40af70:	lea    rdi,[rip+0x1979]        # 40c8f0 <_IO_stdin_used@@Base+0x8f0>
  40af77:	xor    eax,eax
  40af79:	call   40a7d0 <traverse_product@@Base+0xd0>
  40af7e:	mov    eax,DWORD PTR [rsp+0x4]
  40af82:	test   eax,eax
  40af84:	je     40ac28 <traverse_product@@Base+0x528>
  40af8a:	jmp    40ac50 <traverse_product@@Base+0x550>
  40af8f:	nop
  40af90:	lea    rdi,[rip+0x1952]        # 40c8e9 <_IO_stdin_used@@Base+0x8e9>
  40af97:	xor    eax,eax
  40af99:	call   40a7d0 <traverse_product@@Base+0xd0>
  40af9e:	jmp    40ac20 <traverse_product@@Base+0x520>
  40afa3:	nop    DWORD PTR [rax+rax*1+0x0]
  40afa8:	lea    rdi,[rip+0x1948]        # 40c8f7 <_IO_stdin_used@@Base+0x8f7>
  40afaf:	xor    eax,eax
  40afb1:	call   40a7d0 <traverse_product@@Base+0xd0>
  40afb6:	jmp    40ac20 <traverse_product@@Base+0x520>
  40afbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40afc0:	mov    rdi,rbx
  40afc3:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  40afc8:	test   eax,eax
  40afca:	je     40ad4e <traverse_product@@Base+0x64e>
  40afd0:	xor    eax,eax
  40afd2:	call   40bc80 <handle_coda_error@@Base>
  40afd7:	jmp    40ad4e <traverse_product@@Base+0x64e>
  40afdc:	nop    DWORD PTR [rax+0x0]
  40afe0:	xor    eax,eax
  40afe2:	call   40bc80 <handle_coda_error@@Base>
  40afe7:	jmp    40aecd <traverse_product@@Base+0x7cd>
  40afec:	nop    DWORD PTR [rax+0x0]
  40aff0:	mov    rdi,rbx
  40aff3:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  40aff8:	test   eax,eax
  40affa:	jne    40b148 <traverse_product@@Base+0xa48>
  40b000:	cmp    QWORD PTR [rsp+0x10],0x0
  40b006:	mov    QWORD PTR [rsp+0x20],0x0
  40b00f:	jle    40ad56 <traverse_product@@Base+0x656>
  40b015:	mov    r12d,0x1
  40b01b:	xor    esi,esi
  40b01d:	lea    r13,[rsp+0xc]
  40b022:	lea    r14,[rsp+0x28]
  40b027:	mov    rdi,QWORD PTR [rsp+0x18]
  40b02c:	mov    rdx,r13
  40b02f:	call   4036d0 <coda_type_get_record_field_hidden_status@plt>
  40b034:	test   eax,eax
  40b036:	jne    40b068 <traverse_product@@Base+0x968>
  40b038:	mov    edx,DWORD PTR [rsp+0xc]
  40b03c:	mov    rsi,QWORD PTR [rsp+0x20]
  40b041:	test   edx,edx
  40b043:	je     40b098 <traverse_product@@Base+0x998>
  40b045:	mov    rax,QWORD PTR [rsp+0x10]
  40b04a:	lea    rdx,[rax-0x1]
  40b04e:	cmp    rdx,rsi
  40b051:	jg     40b078 <traverse_product@@Base+0x978>
  40b053:	inc    rsi
  40b056:	mov    QWORD PTR [rsp+0x20],rsi
  40b05b:	cmp    rsi,rax
  40b05e:	jl     40b027 <traverse_product@@Base+0x927>
  40b060:	jmp    40ad56 <traverse_product@@Base+0x656>
  40b065:	nop    DWORD PTR [rax]
  40b068:	xor    eax,eax
  40b06a:	call   40bc80 <handle_coda_error@@Base>
  40b06f:	jmp    40b038 <traverse_product@@Base+0x938>
  40b071:	nop    DWORD PTR [rax+0x0]
  40b078:	mov    rdi,rbx
  40b07b:	call   403b20 <coda_cursor_goto_next_record_field@plt>
  40b080:	test   eax,eax
  40b082:	jne    40b468 <traverse_product@@Base+0xd68>
  40b088:	mov    rsi,QWORD PTR [rsp+0x20]
  40b08d:	mov    rax,QWORD PTR [rsp+0x10]
  40b092:	jmp    40b053 <traverse_product@@Base+0x953>
  40b094:	nop    DWORD PTR [rax+0x0]
  40b098:	mov    rdi,QWORD PTR [rsp+0x18]
  40b09d:	mov    rdx,r14
  40b0a0:	call   403c10 <coda_type_get_record_field_name@plt>
  40b0a5:	test   eax,eax
  40b0a7:	jne    40b458 <traverse_product@@Base+0xd58>
  40b0ad:	xor    r12d,0x1
  40b0b1:	or     r12d,ebp
  40b0b4:	je     40b0bb <traverse_product@@Base+0x9bb>
  40b0b6:	call   40a9e0 <traverse_product@@Base+0x2e0>
  40b0bb:	mov    rsi,QWORD PTR [rsp+0x28]
  40b0c0:	lea    rdi,[rip+0x181d]        # 40c8e4 <_IO_stdin_used@@Base+0x8e4>
  40b0c7:	xor    eax,eax
  40b0c9:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b0ce:	mov    esi,0x1
  40b0d3:	mov    rdi,rbx
  40b0d6:	inc    DWORD PTR [rip+0x5274]        # 410350 <__bss_start@@Base+0x14>
  40b0dc:	xor    r12d,r12d
  40b0df:	call   40ab20 <traverse_product@@Base+0x420>
  40b0e4:	dec    DWORD PTR [rip+0x5266]        # 410350 <__bss_start@@Base+0x14>
  40b0ea:	mov    rsi,QWORD PTR [rsp+0x20]
  40b0ef:	jmp    40b045 <traverse_product@@Base+0x945>
  40b0f4:	nop    DWORD PTR [rax+0x0]
  40b0f8:	xor    eax,eax
  40b0fa:	call   40bc80 <handle_coda_error@@Base>
  40b0ff:	jmp    40aeff <traverse_product@@Base+0x7ff>
  40b104:	nop    DWORD PTR [rax+0x0]
  40b108:	lea    rdi,[rip+0x17e6]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  40b10f:	xor    eax,eax
  40b111:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b116:	call   40a9e0 <traverse_product@@Base+0x2e0>
  40b11b:	jmp    40aee1 <traverse_product@@Base+0x7e1>
  40b120:	lea    rsi,[rsp+0x28]
  40b125:	mov    rdi,rbx
  40b128:	call   4039a0 <coda_cursor_read_double@plt>
  40b12d:	test   eax,eax
  40b12f:	je     40ac00 <traverse_product@@Base+0x500>
  40b135:	xor    eax,eax
  40b137:	call   40bc80 <handle_coda_error@@Base>
  40b13c:	jmp    40ac00 <traverse_product@@Base+0x500>
  40b141:	nop    DWORD PTR [rax+0x0]
  40b148:	xor    eax,eax
  40b14a:	call   40bc80 <handle_coda_error@@Base>
  40b14f:	jmp    40b000 <traverse_product@@Base+0x900>
  40b154:	nop    DWORD PTR [rax+0x0]
  40b158:	call   40a9e0 <traverse_product@@Base+0x2e0>
  40b15d:	jmp    40ae1f <traverse_product@@Base+0x71f>
  40b162:	nop    WORD PTR [rax+rax*1+0x0]
  40b168:	xor    eax,eax
  40b16a:	call   40bc80 <handle_coda_error@@Base>
  40b16f:	jmp    40ae17 <traverse_product@@Base+0x717>
  40b174:	nop    DWORD PTR [rax+0x0]
  40b178:	xor    eax,eax
  40b17a:	call   40bc80 <handle_coda_error@@Base>
  40b17f:	jmp    40ae02 <traverse_product@@Base+0x702>
  40b184:	nop    DWORD PTR [rax+0x0]
  40b188:	xor    eax,eax
  40b18a:	call   40bc80 <handle_coda_error@@Base>
  40b18f:	jmp    40ade6 <traverse_product@@Base+0x6e6>
  40b194:	nop    DWORD PTR [rax+0x0]
  40b198:	lea    rsi,[rsp+0x28]
  40b19d:	mov    rdi,rbx
  40b1a0:	call   403980 <coda_cursor_get_string_length@plt>
  40b1a5:	test   eax,eax
  40b1a7:	jne    40b517 <traverse_product@@Base+0xe17>
  40b1ad:	mov    rax,QWORD PTR [rsp+0x28]
  40b1b2:	lea    rbp,[rax+0x1]
  40b1b6:	mov    rdi,rbp
  40b1b9:	call   403a00 <malloc@plt>
  40b1be:	mov    r12,rax
  40b1c1:	test   rax,rax
  40b1c4:	je     40b553 <traverse_product@@Base+0xe53>
  40b1ca:	mov    rdx,rbp
  40b1cd:	mov    rsi,r12
  40b1d0:	mov    rdi,rbx
  40b1d3:	call   403920 <coda_cursor_read_string@plt>
  40b1d8:	test   eax,eax
  40b1da:	jne    40b50b <traverse_product@@Base+0xe0b>
  40b1e0:	lea    rdi,[rip+0x148a]        # 40c671 <_IO_stdin_used@@Base+0x671>
  40b1e7:	xor    eax,eax
  40b1e9:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b1ee:	mov    rsi,QWORD PTR [rsp+0x28]
  40b1f3:	mov    rdi,r12
  40b1f6:	call   40a8a0 <traverse_product@@Base+0x1a0>
  40b1fb:	mov    rsi,QWORD PTR [rsp+0x28]
  40b200:	lea    rdi,[rip+0x16ed]        # 40c8f4 <_IO_stdin_used@@Base+0x8f4>
  40b207:	xor    eax,eax
  40b209:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b20e:	mov    rdi,r12
  40b211:	call   403680 <free@plt>
  40b216:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b21b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b220:	lea    rbp,[rsp+0x28]
  40b225:	mov    rsi,rbp
  40b228:	mov    rdi,rbx
  40b22b:	call   403a30 <coda_cursor_read_char@plt>
  40b230:	test   eax,eax
  40b232:	jne    40b4db <traverse_product@@Base+0xddb>
  40b238:	lea    rdi,[rip+0x1432]        # 40c671 <_IO_stdin_used@@Base+0x671>
  40b23f:	xor    eax,eax
  40b241:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b246:	mov    rdi,rbp
  40b249:	mov    esi,0x1
  40b24e:	call   40a8a0 <traverse_product@@Base+0x1a0>
  40b253:	lea    rdi,[rip+0x169a]        # 40c8f4 <_IO_stdin_used@@Base+0x8f4>
  40b25a:	xor    eax,eax
  40b25c:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b261:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b270:	lea    rsi,[rsp+0x28]
  40b275:	mov    rdi,rbx
  40b278:	call   4039a0 <coda_cursor_read_double@plt>
  40b27d:	test   eax,eax
  40b27f:	jne    40b4f3 <traverse_product@@Base+0xdf3>
  40b285:	cmp    DWORD PTR [rsp+0x20],0x8
  40b28a:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  40b290:	jne    40ac06 <traverse_product@@Base+0x506>
  40b296:	lea    rdi,[rip+0xfa8]        # 40c245 <_IO_stdin_used@@Base+0x245>
  40b29d:	mov    eax,0x1
  40b2a2:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b2a7:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b2ac:	nop    DWORD PTR [rax+0x0]
  40b2b0:	lea    rsi,[rsp+0x28]
  40b2b5:	mov    rdi,rbx
  40b2b8:	call   403990 <coda_cursor_read_uint64@plt>
  40b2bd:	test   eax,eax
  40b2bf:	jne    40b523 <traverse_product@@Base+0xe23>
  40b2c5:	lea    rbx,[rsp+0x70]
  40b2ca:	mov    rdi,QWORD PTR [rsp+0x28]
  40b2cf:	mov    rsi,rbx
  40b2d2:	call   403740 <coda_str64u@plt>
  40b2d7:	mov    rsi,rbx
  40b2da:	lea    rdi,[rip+0x189b]        # 40cb7c <_IO_stdin_used@@Base+0xb7c>
  40b2e1:	xor    eax,eax
  40b2e3:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b2e8:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b2ed:	nop    DWORD PTR [rax]
  40b2f0:	lea    rsi,[rsp+0x28]
  40b2f5:	mov    rdi,rbx
  40b2f8:	call   403ae0 <coda_cursor_read_int64@plt>
  40b2fd:	test   eax,eax
  40b2ff:	jne    40b53b <traverse_product@@Base+0xe3b>
  40b305:	lea    rbx,[rsp+0x70]
  40b30a:	mov    rdi,QWORD PTR [rsp+0x28]
  40b30f:	mov    rsi,rbx
  40b312:	call   403c30 <coda_str64@plt>
  40b317:	mov    rsi,rbx
  40b31a:	lea    rdi,[rip+0x185b]        # 40cb7c <_IO_stdin_used@@Base+0xb7c>
  40b321:	xor    eax,eax
  40b323:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b328:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b32d:	nop    DWORD PTR [rax]
  40b330:	lea    rsi,[rsp+0x28]
  40b335:	mov    rdi,rbx
  40b338:	call   403ba0 <coda_cursor_read_int32@plt>
  40b33d:	test   eax,eax
  40b33f:	jne    40b52f <traverse_product@@Base+0xe2f>
  40b345:	movsxd rsi,DWORD PTR [rsp+0x28]
  40b34a:	lea    rdi,[rip+0xeea]        # 40c23b <_IO_stdin_used@@Base+0x23b>
  40b351:	xor    eax,eax
  40b353:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b358:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b35d:	nop    DWORD PTR [rax]
  40b360:	lea    rsi,[rsp+0x28]
  40b365:	mov    rdi,rbx
  40b368:	call   403770 <coda_cursor_read_uint32@plt>
  40b36d:	test   eax,eax
  40b36f:	jne    40b547 <traverse_product@@Base+0xe47>
  40b375:	mov    esi,DWORD PTR [rsp+0x28]
  40b379:	lea    rdi,[rip+0xec0]        # 40c240 <_IO_stdin_used@@Base+0x240>
  40b380:	xor    eax,eax
  40b382:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b387:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b38c:	nop    DWORD PTR [rax+0x0]
  40b390:	lea    rsi,[rsp+0x28]
  40b395:	mov    rdi,rbx
  40b398:	call   403b50 <coda_cursor_get_bit_size@plt>
  40b39d:	test   eax,eax
  40b39f:	jne    40b4e7 <traverse_product@@Base+0xde7>
  40b3a5:	mov    r13,QWORD PTR [rsp+0x28]
  40b3aa:	xor    ebp,ebp
  40b3ac:	mov    rax,r13
  40b3af:	test   r13b,0x7
  40b3b3:	setne  bpl
  40b3b7:	sar    rax,0x3
  40b3bb:	add    rbp,rax
  40b3be:	mov    rdi,rbp
  40b3c1:	call   403a00 <malloc@plt>
  40b3c6:	mov    r12,rax
  40b3c9:	test   rax,rax
  40b3cc:	je     40b58b <traverse_product@@Base+0xe8b>
  40b3d2:	xor    edx,edx
  40b3d4:	mov    rcx,r13
  40b3d7:	mov    rsi,r12
  40b3da:	mov    rdi,rbx
  40b3dd:	call   403c20 <coda_cursor_read_bits@plt>
  40b3e2:	test   eax,eax
  40b3e4:	jne    40b4ff <traverse_product@@Base+0xdff>
  40b3ea:	lea    rdi,[rip+0x1280]        # 40c671 <_IO_stdin_used@@Base+0x671>
  40b3f1:	xor    eax,eax
  40b3f3:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b3f8:	mov    rsi,rbp
  40b3fb:	mov    rdi,r12
  40b3fe:	call   40a8a0 <traverse_product@@Base+0x1a0>
  40b403:	lea    rdi,[rip+0x14ea]        # 40c8f4 <_IO_stdin_used@@Base+0x8f4>
  40b40a:	xor    eax,eax
  40b40c:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b411:	mov    rdi,r12
  40b414:	call   403680 <free@plt>
  40b419:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b41e:	xchg   ax,ax
  40b420:	xor    eax,eax
  40b422:	call   40bc80 <handle_coda_error@@Base>
  40b427:	jmp    40adae <traverse_product@@Base+0x6ae>
  40b42c:	nop    DWORD PTR [rax+0x0]
  40b430:	lea    rdi,[rip+0x14be]        # 40c8f5 <_IO_stdin_used@@Base+0x8f5>
  40b437:	xor    eax,eax
  40b439:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b43e:	jmp    40ad99 <traverse_product@@Base+0x699>
  40b443:	nop    DWORD PTR [rax+rax*1+0x0]
  40b448:	xor    eax,eax
  40b44a:	call   40bc80 <handle_coda_error@@Base>
  40b44f:	jmp    40adc5 <traverse_product@@Base+0x6c5>
  40b454:	nop    DWORD PTR [rax+0x0]
  40b458:	xor    eax,eax
  40b45a:	call   40bc80 <handle_coda_error@@Base>
  40b45f:	jmp    40b0ad <traverse_product@@Base+0x9ad>
  40b464:	nop    DWORD PTR [rax+0x0]
  40b468:	xor    eax,eax
  40b46a:	call   40bc80 <handle_coda_error@@Base>
  40b46f:	jmp    40b088 <traverse_product@@Base+0x988>
  40b474:	nop    DWORD PTR [rax+0x0]
  40b478:	mov    ebp,0x1
  40b47d:	jmp    40acf9 <traverse_product@@Base+0x5f9>
  40b482:	xor    eax,eax
  40b484:	call   40bc80 <handle_coda_error@@Base>
  40b489:	jmp    40abdb <traverse_product@@Base+0x4db>
  40b48e:	xor    eax,eax
  40b490:	call   40bc80 <handle_coda_error@@Base>
  40b495:	jmp    40ae83 <traverse_product@@Base+0x783>
  40b49a:	xor    eax,eax
  40b49c:	call   40bc80 <handle_coda_error@@Base>
  40b4a1:	jmp    40ad17 <traverse_product@@Base+0x617>
  40b4a6:	lea    rbx,[rsp+0x70]
  40b4ab:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  40b4b1:	mov    rsi,rbx
  40b4b4:	lea    rdi,[rip+0x11e0]        # 40c69b <_IO_stdin_used@@Base+0x69b>
  40b4bb:	call   403710 <coda_time_double_to_string@plt>
  40b4c0:	test   eax,eax
  40b4c2:	je     40b5bf <traverse_product@@Base+0xebf>
  40b4c8:	lea    rdi,[rip+0x11e9]        # 40c6b8 <_IO_stdin_used@@Base+0x6b8>
  40b4cf:	xor    eax,eax
  40b4d1:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b4d6:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b4db:	xor    eax,eax
  40b4dd:	call   40bc80 <handle_coda_error@@Base>
  40b4e2:	jmp    40b238 <traverse_product@@Base+0xb38>
  40b4e7:	xor    eax,eax
  40b4e9:	call   40bc80 <handle_coda_error@@Base>
  40b4ee:	jmp    40b3a5 <traverse_product@@Base+0xca5>
  40b4f3:	xor    eax,eax
  40b4f5:	call   40bc80 <handle_coda_error@@Base>
  40b4fa:	jmp    40b285 <traverse_product@@Base+0xb85>
  40b4ff:	xor    eax,eax
  40b501:	call   40bc80 <handle_coda_error@@Base>
  40b506:	jmp    40b3ea <traverse_product@@Base+0xcea>
  40b50b:	xor    eax,eax
  40b50d:	call   40bc80 <handle_coda_error@@Base>
  40b512:	jmp    40b1e0 <traverse_product@@Base+0xae0>
  40b517:	xor    eax,eax
  40b519:	call   40bc80 <handle_coda_error@@Base>
  40b51e:	jmp    40b1ad <traverse_product@@Base+0xaad>
  40b523:	xor    eax,eax
  40b525:	call   40bc80 <handle_coda_error@@Base>
  40b52a:	jmp    40b2c5 <traverse_product@@Base+0xbc5>
  40b52f:	xor    eax,eax
  40b531:	call   40bc80 <handle_coda_error@@Base>
  40b536:	jmp    40b345 <traverse_product@@Base+0xc45>
  40b53b:	xor    eax,eax
  40b53d:	call   40bc80 <handle_coda_error@@Base>
  40b542:	jmp    40b305 <traverse_product@@Base+0xc05>
  40b547:	xor    eax,eax
  40b549:	call   40bc80 <handle_coda_error@@Base>
  40b54e:	jmp    40b375 <traverse_product@@Base+0xc75>
  40b553:	mov    rdx,rbp
  40b556:	mov    r8d,0x169
  40b55c:	lea    rcx,[rip+0x139d]        # 40c900 <_IO_stdin_used@@Base+0x900>
  40b563:	lea    rsi,[rip+0xb5e]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  40b56a:	mov    edi,0xffffffff
  40b56f:	xor    eax,eax
  40b571:	call   4036f0 <coda_set_error@plt>
  40b576:	xor    eax,eax
  40b578:	call   40bc80 <handle_coda_error@@Base>
  40b57d:	mov    rax,QWORD PTR [rsp+0x28]
  40b582:	lea    rbp,[rax+0x1]
  40b586:	jmp    40b1ca <traverse_product@@Base+0xaca>
  40b58b:	mov    r8d,0x188
  40b591:	lea    rcx,[rip+0x1368]        # 40c900 <_IO_stdin_used@@Base+0x900>
  40b598:	mov    rdx,rbp
  40b59b:	lea    rsi,[rip+0xb26]        # 40c0c8 <_IO_stdin_used@@Base+0xc8>
  40b5a2:	mov    edi,0xffffffff
  40b5a7:	xor    eax,eax
  40b5a9:	call   4036f0 <coda_set_error@plt>
  40b5ae:	xor    eax,eax
  40b5b0:	call   40bc80 <handle_coda_error@@Base>
  40b5b5:	mov    r13,QWORD PTR [rsp+0x28]
  40b5ba:	jmp    40b3d2 <traverse_product@@Base+0xcd2>
  40b5bf:	mov    rsi,rbx
  40b5c2:	lea    rdi,[rip+0x15b3]        # 40cb7c <_IO_stdin_used@@Base+0xb7c>
  40b5c9:	xor    eax,eax
  40b5cb:	call   40a7d0 <traverse_product@@Base+0xd0>
  40b5d0:	jmp    40ac20 <traverse_product@@Base+0x520>
  40b5d5:	call   403850 <__stack_chk_fail@plt>
  40b5da:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b5e0 <print_yaml_data@@Base>:
  40b5e0:	endbr64 
  40b5e4:	push   rbp
  40b5e5:	push   rbx
  40b5e6:	sub    rsp,0x338
  40b5ed:	mov    rbx,0x410380
  40b5f4:	mov    rax,QWORD PTR fs:0x28
  40b5fd:	mov    QWORD PTR [rsp+0x328],rax
  40b605:	xor    eax,eax
  40b607:	lea    rbp,[rsp+0x8]
  40b60c:	mov    DWORD PTR [rip+0x4d3a],edi        # 41034c <__bss_start@@Base+0x10>
  40b612:	mov    rdi,QWORD PTR [rbx]
  40b615:	mov    rsi,rbp
  40b618:	call   403700 <coda_open@plt>
  40b61d:	test   eax,eax
  40b61f:	jne    40b6a0 <print_yaml_data@@Base+0xc0>
  40b621:	lea    rbx,[rsp+0x10]
  40b626:	mov    rsi,QWORD PTR [rsp+0x8]
  40b62b:	mov    rdi,rbx
  40b62e:	call   4038b0 <coda_cursor_set_product@plt>
  40b633:	test   eax,eax
  40b635:	jne    40b690 <print_yaml_data@@Base+0xb0>
  40b637:	mov    rax,0x4114e0
  40b63e:	mov    rsi,QWORD PTR [rax]
  40b641:	test   rsi,rsi
  40b644:	je     40b652 <print_yaml_data@@Base+0x72>
  40b646:	mov    rdi,rbx
  40b649:	call   403af0 <coda_cursor_goto@plt>
  40b64e:	test   eax,eax
  40b650:	jne    40b6c0 <print_yaml_data@@Base+0xe0>
  40b652:	xor    edi,edi
  40b654:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  40b659:	xor    esi,esi
  40b65b:	mov    rdi,rbx
  40b65e:	call   40ab20 <traverse_product@@Base+0x420>
  40b663:	mov    rdi,QWORD PTR [rsp+0x8]
  40b668:	call   403ad0 <coda_close@plt>
  40b66d:	mov    rax,QWORD PTR [rsp+0x328]
  40b675:	xor    rax,QWORD PTR fs:0x28
  40b67e:	jne    40b6f7 <print_yaml_data@@Base+0x117>
  40b680:	add    rsp,0x338
  40b687:	pop    rbx
  40b688:	pop    rbp
  40b689:	ret    
  40b68a:	nop    WORD PTR [rax+rax*1+0x0]
  40b690:	xor    eax,eax
  40b692:	call   40bc80 <handle_coda_error@@Base>
  40b697:	jmp    40b637 <print_yaml_data@@Base+0x57>
  40b699:	nop    DWORD PTR [rax+0x0]
  40b6a0:	call   403bf0 <coda_get_errno@plt>
  40b6a5:	cmp    DWORD PTR [rax],0xffffffeb
  40b6a8:	je     40b6d0 <print_yaml_data@@Base+0xf0>
  40b6aa:	xor    eax,eax
  40b6ac:	call   40bc80 <handle_coda_error@@Base>
  40b6b1:	jmp    40b621 <print_yaml_data@@Base+0x41>
  40b6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b6c0:	xor    eax,eax
  40b6c2:	call   40bc80 <handle_coda_error@@Base>
  40b6c7:	jmp    40b652 <print_yaml_data@@Base+0x72>
  40b6c9:	nop    DWORD PTR [rax+0x0]
  40b6d0:	xor    edi,edi
  40b6d2:	call   403750 <coda_set_option_use_mmap@plt>
  40b6d7:	mov    rdi,QWORD PTR [rbx]
  40b6da:	mov    rsi,rbp
  40b6dd:	call   403700 <coda_open@plt>
  40b6e2:	mov    ebx,eax
  40b6e4:	mov    edi,0x1
  40b6e9:	call   403750 <coda_set_option_use_mmap@plt>
  40b6ee:	test   ebx,ebx
  40b6f0:	jne    40b6aa <print_yaml_data@@Base+0xca>
  40b6f2:	jmp    40b621 <print_yaml_data@@Base+0x41>
  40b6f7:	call   403850 <__stack_chk_fail@plt>
  40b6fc:	nop    DWORD PTR [rax+0x0]
  40b700:	sub    rsp,0x8
  40b704:	lea    rdi,[rip+0x12b4]        # 40c9bf <_IO_stdin_used@@Base+0x9bf>
  40b70b:	call   403720 <puts@plt>
  40b710:	lea    rdi,[rip+0x1589]        # 40cca0 <_IO_stdin_used@@Base+0xca0>
  40b717:	call   403720 <puts@plt>
  40b71c:	lea    rdi,[rip+0x15c5]        # 40cce8 <_IO_stdin_used@@Base+0xce8>
  40b723:	call   403720 <puts@plt>
  40b728:	lea    rdi,[rip+0x1297]        # 40c9c6 <_IO_stdin_used@@Base+0x9c6>
  40b72f:	call   403720 <puts@plt>
  40b734:	lea    rdi,[rip+0x12a1]        # 40c9dc <_IO_stdin_used@@Base+0x9dc>
  40b73b:	call   403720 <puts@plt>
  40b740:	lea    rdi,[rip+0x15d1]        # 40cd18 <_IO_stdin_used@@Base+0xd18>
  40b747:	call   403720 <puts@plt>
  40b74c:	lea    rdi,[rip+0x15fd]        # 40cd50 <_IO_stdin_used@@Base+0xd50>
  40b753:	call   403720 <puts@plt>
  40b758:	lea    rdi,[rip+0x1619]        # 40cd78 <_IO_stdin_used@@Base+0xd78>
  40b75f:	call   403720 <puts@plt>
  40b764:	lea    rdi,[rip+0x164d]        # 40cdb8 <_IO_stdin_used@@Base+0xdb8>
  40b76b:	call   403720 <puts@plt>
  40b770:	lea    rdi,[rip+0x1671]        # 40cde8 <_IO_stdin_used@@Base+0xde8>
  40b777:	call   403720 <puts@plt>
  40b77c:	lea    rdi,[rip+0x1274]        # 40c9f7 <_IO_stdin_used@@Base+0x9f7>
  40b783:	call   403720 <puts@plt>
  40b788:	lea    rdi,[rip+0x16a1]        # 40ce30 <_IO_stdin_used@@Base+0xe30>
  40b78f:	call   403720 <puts@plt>
  40b794:	lea    rdi,[rip+0x1273]        # 40ca0e <_IO_stdin_used@@Base+0xa0e>
  40b79b:	call   403720 <puts@plt>
  40b7a0:	lea    rdi,[rip+0x16b9]        # 40ce60 <_IO_stdin_used@@Base+0xe60>
  40b7a7:	call   403720 <puts@plt>
  40b7ac:	lea    rdi,[rip+0x1272]        # 40ca25 <_IO_stdin_used@@Base+0xa25>
  40b7b3:	call   403720 <puts@plt>
  40b7b8:	lea    rdi,[rip+0x16d1]        # 40ce90 <_IO_stdin_used@@Base+0xe90>
  40b7bf:	call   403720 <puts@plt>
  40b7c4:	lea    rdi,[rip+0x1274]        # 40ca3f <_IO_stdin_used@@Base+0xa3f>
  40b7cb:	call   403720 <puts@plt>
  40b7d0:	lea    rdi,[rip+0x16f1]        # 40cec8 <_IO_stdin_used@@Base+0xec8>
  40b7d7:	call   403720 <puts@plt>
  40b7dc:	lea    rdi,[rip+0x172d]        # 40cf10 <_IO_stdin_used@@Base+0xf10>
  40b7e3:	call   403720 <puts@plt>
  40b7e8:	lea    rdi,[rip+0x1751]        # 40cf40 <_IO_stdin_used@@Base+0xf40>
  40b7ef:	call   403720 <puts@plt>
  40b7f4:	lea    rdi,[rip+0x1765]        # 40cf60 <_IO_stdin_used@@Base+0xf60>
  40b7fb:	call   403720 <puts@plt>
  40b800:	lea    rdi,[rip+0x17a9]        # 40cfb0 <_IO_stdin_used@@Base+0xfb0>
  40b807:	call   403720 <puts@plt>
  40b80c:	lea    rdi,[rip+0x1245]        # 40ca58 <_IO_stdin_used@@Base+0xa58>
  40b813:	call   403720 <puts@plt>
  40b818:	mov    edi,0xa
  40b81d:	call   403690 <putchar@plt>
  40b822:	lea    rdi,[rip+0x17d7]        # 40d000 <_IO_stdin_used@@Base+0x1000>
  40b829:	call   403720 <puts@plt>
  40b82e:	lea    rdi,[rip+0x1813]        # 40d048 <_IO_stdin_used@@Base+0x1048>
  40b835:	call   403720 <puts@plt>
  40b83a:	lea    rdi,[rip+0x1185]        # 40c9c6 <_IO_stdin_used@@Base+0x9c6>
  40b841:	call   403720 <puts@plt>
  40b846:	lea    rdi,[rip+0x1503]        # 40cd50 <_IO_stdin_used@@Base+0xd50>
  40b84d:	call   403720 <puts@plt>
  40b852:	lea    rdi,[rip+0x151f]        # 40cd78 <_IO_stdin_used@@Base+0xd78>
  40b859:	call   403720 <puts@plt>
  40b85e:	lea    rdi,[rip+0x1553]        # 40cdb8 <_IO_stdin_used@@Base+0xdb8>
  40b865:	call   403720 <puts@plt>
  40b86a:	lea    rdi,[rip+0x1577]        # 40cde8 <_IO_stdin_used@@Base+0xde8>
  40b871:	call   403720 <puts@plt>
  40b876:	lea    rdi,[rip+0x11f9]        # 40ca76 <_IO_stdin_used@@Base+0xa76>
  40b87d:	call   403720 <puts@plt>
  40b882:	lea    rdi,[rip+0x17ff]        # 40d088 <_IO_stdin_used@@Base+0x1088>
  40b889:	call   403720 <puts@plt>
  40b88e:	lea    rdi,[rip+0x11f9]        # 40ca8e <_IO_stdin_used@@Base+0xa8e>
  40b895:	call   403720 <puts@plt>
  40b89a:	lea    rdi,[rip+0x182f]        # 40d0d0 <_IO_stdin_used@@Base+0x10d0>
  40b8a1:	call   403720 <puts@plt>
  40b8a6:	lea    rdi,[rip+0x1873]        # 40d120 <_IO_stdin_used@@Base+0x1120>
  40b8ad:	call   403720 <puts@plt>
  40b8b2:	lea    rdi,[rip+0x188f]        # 40d148 <_IO_stdin_used@@Base+0x1148>
  40b8b9:	call   403720 <puts@plt>
  40b8be:	lea    rdi,[rip+0x18bb]        # 40d180 <_IO_stdin_used@@Base+0x1180>
  40b8c5:	call   403720 <puts@plt>
  40b8ca:	lea    rdi,[rip+0x18cf]        # 40d1a0 <_IO_stdin_used@@Base+0x11a0>
  40b8d1:	call   403720 <puts@plt>
  40b8d6:	lea    rdi,[rip+0x1913]        # 40d1f0 <_IO_stdin_used@@Base+0x11f0>
  40b8dd:	call   403720 <puts@plt>
  40b8e2:	lea    rdi,[rip+0x193f]        # 40d228 <_IO_stdin_used@@Base+0x1228>
  40b8e9:	call   403720 <puts@plt>
  40b8ee:	lea    rdi,[rip+0x1983]        # 40d278 <_IO_stdin_used@@Base+0x1278>
  40b8f5:	call   403720 <puts@plt>
  40b8fa:	lea    rdi,[rip+0x199f]        # 40d2a0 <_IO_stdin_used@@Base+0x12a0>
  40b901:	call   403720 <puts@plt>
  40b906:	lea    rdi,[rip+0x1633]        # 40cf40 <_IO_stdin_used@@Base+0xf40>
  40b90d:	call   403720 <puts@plt>
  40b912:	lea    rdi,[rip+0x1647]        # 40cf60 <_IO_stdin_used@@Base+0xf60>
  40b919:	call   403720 <puts@plt>
  40b91e:	lea    rdi,[rip+0x168b]        # 40cfb0 <_IO_stdin_used@@Base+0xfb0>
  40b925:	call   403720 <puts@plt>
  40b92a:	lea    rdi,[rip+0x1127]        # 40ca58 <_IO_stdin_used@@Base+0xa58>
  40b931:	call   403720 <puts@plt>
  40b936:	mov    edi,0xa
  40b93b:	call   403690 <putchar@plt>
  40b940:	lea    rdi,[rip+0x19a9]        # 40d2f0 <_IO_stdin_used@@Base+0x12f0>
  40b947:	call   403720 <puts@plt>
  40b94c:	lea    rdi,[rip+0x19e5]        # 40d338 <_IO_stdin_used@@Base+0x1338>
  40b953:	call   403720 <puts@plt>
  40b958:	lea    rdi,[rip+0x1147]        # 40caa6 <_IO_stdin_used@@Base+0xaa6>
  40b95f:	call   403720 <puts@plt>
  40b964:	lea    rdi,[rip+0x1151]        # 40cabc <_IO_stdin_used@@Base+0xabc>
  40b96b:	call   403720 <puts@plt>
  40b970:	lea    rdi,[rip+0x1a01]        # 40d378 <_IO_stdin_used@@Base+0x1378>
  40b977:	call   403720 <puts@plt>
  40b97c:	lea    rdi,[rip+0x1a3d]        # 40d3c0 <_IO_stdin_used@@Base+0x13c0>
  40b983:	call   403720 <puts@plt>
  40b988:	lea    rdi,[rip+0x13c1]        # 40cd50 <_IO_stdin_used@@Base+0xd50>
  40b98f:	call   403720 <puts@plt>
  40b994:	lea    rdi,[rip+0x13dd]        # 40cd78 <_IO_stdin_used@@Base+0xd78>
  40b99b:	call   403720 <puts@plt>
  40b9a0:	lea    rdi,[rip+0x1779]        # 40d120 <_IO_stdin_used@@Base+0x1120>
  40b9a7:	call   403720 <puts@plt>
  40b9ac:	lea    rdi,[rip+0x1795]        # 40d148 <_IO_stdin_used@@Base+0x1148>
  40b9b3:	call   403720 <puts@plt>
  40b9b8:	lea    rdi,[rip+0x111a]        # 40cad9 <_IO_stdin_used@@Base+0xad9>
  40b9bf:	call   403720 <puts@plt>
  40b9c4:	lea    rdi,[rip+0x1a45]        # 40d410 <_IO_stdin_used@@Base+0x1410>
  40b9cb:	call   403720 <puts@plt>
  40b9d0:	lea    rdi,[rip+0x1a81]        # 40d458 <_IO_stdin_used@@Base+0x1458>
  40b9d7:	call   403720 <puts@plt>
  40b9dc:	lea    rdi,[rip+0x155d]        # 40cf40 <_IO_stdin_used@@Base+0xf40>
  40b9e3:	call   403720 <puts@plt>
  40b9e8:	lea    rdi,[rip+0x1571]        # 40cf60 <_IO_stdin_used@@Base+0xf60>
  40b9ef:	call   403720 <puts@plt>
  40b9f4:	lea    rdi,[rip+0x15b5]        # 40cfb0 <_IO_stdin_used@@Base+0xfb0>
  40b9fb:	call   403720 <puts@plt>
  40ba00:	lea    rdi,[rip+0x1051]        # 40ca58 <_IO_stdin_used@@Base+0xa58>
  40ba07:	call   403720 <puts@plt>
  40ba0c:	mov    edi,0xa
  40ba11:	call   403690 <putchar@plt>
  40ba16:	lea    rdi,[rip+0x1a8b]        # 40d4a8 <_IO_stdin_used@@Base+0x14a8>
  40ba1d:	call   403720 <puts@plt>
  40ba22:	lea    rdi,[rip+0x1ac7]        # 40d4f0 <_IO_stdin_used@@Base+0x14f0>
  40ba29:	call   403720 <puts@plt>
  40ba2e:	lea    rdi,[rip+0x10c2]        # 40caf7 <_IO_stdin_used@@Base+0xaf7>
  40ba35:	call   403720 <puts@plt>
  40ba3a:	lea    rdi,[rip+0x107b]        # 40cabc <_IO_stdin_used@@Base+0xabc>
  40ba41:	call   403720 <puts@plt>
  40ba46:	lea    rdi,[rip+0x192b]        # 40d378 <_IO_stdin_used@@Base+0x1378>
  40ba4d:	call   403720 <puts@plt>
  40ba52:	lea    rdi,[rip+0x1ad7]        # 40d530 <_IO_stdin_used@@Base+0x1530>
  40ba59:	call   403720 <puts@plt>
  40ba5e:	lea    rdi,[rip+0x1b1b]        # 40d580 <_IO_stdin_used@@Base+0x1580>
  40ba65:	call   403720 <puts@plt>
  40ba6a:	lea    rdi,[rip+0x12df]        # 40cd50 <_IO_stdin_used@@Base+0xd50>
  40ba71:	call   403720 <puts@plt>
  40ba76:	lea    rdi,[rip+0x12fb]        # 40cd78 <_IO_stdin_used@@Base+0xd78>
  40ba7d:	call   403720 <puts@plt>
  40ba82:	lea    rdi,[rip+0x1697]        # 40d120 <_IO_stdin_used@@Base+0x1120>
  40ba89:	call   403720 <puts@plt>
  40ba8e:	lea    rdi,[rip+0x16b3]        # 40d148 <_IO_stdin_used@@Base+0x1148>
  40ba95:	call   403720 <puts@plt>
  40ba9a:	lea    rdi,[rip+0x1038]        # 40cad9 <_IO_stdin_used@@Base+0xad9>
  40baa1:	call   403720 <puts@plt>
  40baa6:	lea    rdi,[rip+0x1963]        # 40d410 <_IO_stdin_used@@Base+0x1410>
  40baad:	call   403720 <puts@plt>
  40bab2:	lea    rdi,[rip+0x199f]        # 40d458 <_IO_stdin_used@@Base+0x1458>
  40bab9:	call   403720 <puts@plt>
  40babe:	lea    rdi,[rip+0x147b]        # 40cf40 <_IO_stdin_used@@Base+0xf40>
  40bac5:	call   403720 <puts@plt>
  40baca:	lea    rdi,[rip+0x148f]        # 40cf60 <_IO_stdin_used@@Base+0xf60>
  40bad1:	call   403720 <puts@plt>
  40bad6:	lea    rdi,[rip+0x14d3]        # 40cfb0 <_IO_stdin_used@@Base+0xfb0>
  40badd:	call   403720 <puts@plt>
  40bae2:	lea    rdi,[rip+0xf6f]        # 40ca58 <_IO_stdin_used@@Base+0xa58>
  40bae9:	call   403720 <puts@plt>
  40baee:	mov    edi,0xa
  40baf3:	call   403690 <putchar@plt>
  40baf8:	lea    rdi,[rip+0x1aa1]        # 40d5a0 <_IO_stdin_used@@Base+0x15a0>
  40baff:	call   403720 <puts@plt>
  40bb04:	lea    rdi,[rip+0x1add]        # 40d5e8 <_IO_stdin_used@@Base+0x15e8>
  40bb0b:	call   403720 <puts@plt>
  40bb10:	lea    rdi,[rip+0x1b21]        # 40d638 <_IO_stdin_used@@Base+0x1638>
  40bb17:	call   403720 <puts@plt>
  40bb1c:	lea    rdi,[rip+0x1b65]        # 40d688 <_IO_stdin_used@@Base+0x1688>
  40bb23:	call   403720 <puts@plt>
  40bb28:	lea    rdi,[rip+0xfde]        # 40cb0d <_IO_stdin_used@@Base+0xb0d>
  40bb2f:	call   403720 <puts@plt>
  40bb34:	lea    rdi,[rip+0x1b7d]        # 40d6b8 <_IO_stdin_used@@Base+0x16b8>
  40bb3b:	call   403720 <puts@plt>
  40bb40:	lea    rdi,[rip+0x1ba1]        # 40d6e8 <_IO_stdin_used@@Base+0x16e8>
  40bb47:	call   403720 <puts@plt>
  40bb4c:	lea    rdi,[rip+0x15cd]        # 40d120 <_IO_stdin_used@@Base+0x1120>
  40bb53:	call   403720 <puts@plt>
  40bb58:	lea    rdi,[rip+0x15e9]        # 40d148 <_IO_stdin_used@@Base+0x1148>
  40bb5f:	call   403720 <puts@plt>
  40bb64:	lea    rdi,[rip+0xf6e]        # 40cad9 <_IO_stdin_used@@Base+0xad9>
  40bb6b:	call   403720 <puts@plt>
  40bb70:	lea    rdi,[rip+0x1899]        # 40d410 <_IO_stdin_used@@Base+0x1410>
  40bb77:	call   403720 <puts@plt>
  40bb7c:	lea    rdi,[rip+0x18d5]        # 40d458 <_IO_stdin_used@@Base+0x1458>
  40bb83:	call   403720 <puts@plt>
  40bb88:	lea    rdi,[rip+0x1b91]        # 40d720 <_IO_stdin_used@@Base+0x1720>
  40bb8f:	call   403720 <puts@plt>
  40bb94:	lea    rdi,[rip+0x1ba5]        # 40d740 <_IO_stdin_used@@Base+0x1740>
  40bb9b:	call   403720 <puts@plt>
  40bba0:	lea    rdi,[rip+0x1be9]        # 40d790 <_IO_stdin_used@@Base+0x1790>
  40bba7:	call   403720 <puts@plt>
  40bbac:	lea    rdi,[rip+0x1c2d]        # 40d7e0 <_IO_stdin_used@@Base+0x17e0>
  40bbb3:	call   403720 <puts@plt>
  40bbb8:	lea    rdi,[rip+0x1c61]        # 40d820 <_IO_stdin_used@@Base+0x1820>
  40bbbf:	call   403720 <puts@plt>
  40bbc4:	lea    rdi,[rip+0x1ca5]        # 40d870 <_IO_stdin_used@@Base+0x1870>
  40bbcb:	call   403720 <puts@plt>
  40bbd0:	mov    edi,0xa
  40bbd5:	call   403690 <putchar@plt>
  40bbda:	lea    rdi,[rip+0xf43]        # 40cb24 <_IO_stdin_used@@Base+0xb24>
  40bbe1:	call   403720 <puts@plt>
  40bbe6:	lea    rdi,[rip+0xf4f]        # 40cb3c <_IO_stdin_used@@Base+0xb3c>
  40bbed:	call   403720 <puts@plt>
  40bbf2:	mov    edi,0xa
  40bbf7:	call   403690 <putchar@plt>
  40bbfc:	lea    rdi,[rip+0xf57]        # 40cb5a <_IO_stdin_used@@Base+0xb5a>
  40bc03:	call   403720 <puts@plt>
  40bc08:	lea    rdi,[rip+0x1c99]        # 40d8a8 <_IO_stdin_used@@Base+0x18a8>
  40bc0f:	call   403720 <puts@plt>
  40bc14:	mov    edi,0xa
  40bc19:	call   403690 <putchar@plt>
  40bc1e:	lea    rdi,[rip+0x1cbb]        # 40d8e0 <_IO_stdin_used@@Base+0x18e0>
  40bc25:	call   403720 <puts@plt>
  40bc2a:	lea    rdi,[rip+0x1cff]        # 40d930 <_IO_stdin_used@@Base+0x1930>
  40bc31:	call   403720 <puts@plt>
  40bc36:	lea    rdi,[rip+0x1d43]        # 40d980 <_IO_stdin_used@@Base+0x1980>
  40bc3d:	call   403720 <puts@plt>
  40bc42:	lea    rdi,[rip+0x1d67]        # 40d9b0 <_IO_stdin_used@@Base+0x19b0>
  40bc49:	call   403720 <puts@plt>
  40bc4e:	lea    rdi,[rip+0x1dab]        # 40da00 <_IO_stdin_used@@Base+0x1a00>
  40bc55:	call   403720 <puts@plt>
  40bc5a:	lea    rdi,[rip+0x1de7]        # 40da48 <_IO_stdin_used@@Base+0x1a48>
  40bc61:	call   403720 <puts@plt>
  40bc66:	lea    rdi,[rip+0x1e1b]        # 40da88 <_IO_stdin_used@@Base+0x1a88>
  40bc6d:	call   403720 <puts@plt>
  40bc72:	mov    edi,0xa
  40bc77:	add    rsp,0x8
  40bc7b:	jmp    403690 <putchar@plt>

000000000040bc80 <handle_coda_error@@Base>:
  40bc80:	endbr64 
  40bc84:	push   rbx
  40bc85:	call   403bf0 <coda_get_errno@plt>
  40bc8a:	mov    edi,DWORD PTR [rax]
  40bc8c:	call   403b60 <coda_errno_to_string@plt>
  40bc91:	mov    rbx,QWORD PTR [rip+0x4360]        # 40fff8 <stderr@GLIBC_2.2.5>
  40bc98:	mov    rcx,rax
  40bc9b:	mov    rdi,QWORD PTR [rbx]
  40bc9e:	lea    rdx,[rip+0xed0]        # 40cb75 <_IO_stdin_used@@Base+0xb75>
  40bca5:	mov    esi,0x1
  40bcaa:	xor    eax,eax
  40bcac:	call   403bc0 <__fprintf_chk@plt>
  40bcb1:	mov    rdi,QWORD PTR [rbx]
  40bcb4:	call   403a10 <fflush@plt>
  40bcb9:	mov    edi,0x1
  40bcbe:	call   403b90 <exit@plt>
  40bcc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bccd:	nop    DWORD PTR [rax]

000000000040bcd0 <__libc_csu_init@@Base>:
  40bcd0:	endbr64 
  40bcd4:	push   r15
  40bcd6:	lea    r15,[rip+0x40f3]        # 40fdd0 <_IO_stdin_used@@Base+0x3dd0>
  40bcdd:	push   r14
  40bcdf:	mov    r14,rdx
  40bce2:	push   r13
  40bce4:	mov    r13,rsi
  40bce7:	push   r12
  40bce9:	mov    r12d,edi
  40bcec:	push   rbp
  40bced:	lea    rbp,[rip+0x40e4]        # 40fdd8 <_IO_stdin_used@@Base+0x3dd8>
  40bcf4:	push   rbx
  40bcf5:	sub    rbp,r15
  40bcf8:	sub    rsp,0x8
  40bcfc:	call   403000 <coda_cursor_get_byte_size@plt-0x640>
  40bd01:	sar    rbp,0x3
  40bd05:	je     40bd26 <__libc_csu_init@@Base+0x56>
  40bd07:	xor    ebx,ebx
  40bd09:	nop    DWORD PTR [rax+0x0]
  40bd10:	mov    rdx,r14
  40bd13:	mov    rsi,r13
  40bd16:	mov    edi,r12d
  40bd19:	call   QWORD PTR [r15+rbx*8]
  40bd1d:	add    rbx,0x1
  40bd21:	cmp    rbp,rbx
  40bd24:	jne    40bd10 <__libc_csu_init@@Base+0x40>
  40bd26:	add    rsp,0x8
  40bd2a:	pop    rbx
  40bd2b:	pop    rbp
  40bd2c:	pop    r12
  40bd2e:	pop    r13
  40bd30:	pop    r14
  40bd32:	pop    r15
  40bd34:	ret    
  40bd35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040bd40 <__libc_csu_fini@@Base>:
  40bd40:	endbr64 
  40bd44:	ret    

Disassembly of section .fini:

000000000040bd48 <.fini>:
  40bd48:	endbr64 
  40bd4c:	sub    rsp,0x8
  40bd50:	add    rsp,0x8
  40bd54:	ret    
