
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <__snprintf_chk@plt-0x10a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <__snprintf_chk@plt-0x100>
  40311f:	nop

Disassembly of section .plt.sec:

0000000000403120 <__snprintf_chk@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0x6eed]        # 40a018 <__snprintf_chk@GLIBC_2.3.4>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <free@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0x6ee5]        # 40a020 <free@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <strncpy@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0x6edd]        # 40a028 <strncpy@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <strcpy@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0x6ed5]        # 40a030 <strcpy@GLIBC_2.2.5>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <strlen@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0x6ecd]        # 40a038 <strlen@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <__stack_chk_fail@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0x6ec5]        # 40a040 <__stack_chk_fail@GLIBC_2.4>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <snprintf@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0x6ebd]        # 40a048 <snprintf@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <srand@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0x6eb5]        # 40a050 <srand@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <strcmp@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0x6ead]        # 40a058 <strcmp@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <time@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0x6ea5]        # 40a060 <time@GLIBC_2.2.5>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <malloc@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0x6e9d]        # 40a068 <malloc@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <__isoc99_sscanf@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0x6e95]        # 40a070 <__isoc99_sscanf@GLIBC_2.7>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <realloc@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0x6e8d]        # 40a078 <realloc@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031f0 <__printf_chk@plt>:
  4031f0:	endbr64 
  4031f4:	bnd jmp QWORD PTR [rip+0x6e85]        # 40a080 <__printf_chk@GLIBC_2.3.4>
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403200 <rand@plt>:
  403200:	endbr64 
  403204:	bnd jmp QWORD PTR [rip+0x6e7d]        # 40a088 <rand@GLIBC_2.2.5>
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403210 <main@@Base>:
  403210:	endbr64 
  403214:	push   r15
  403216:	push   r14
  403218:	push   r13
  40321a:	push   r12
  40321c:	push   rbp
  40321d:	push   rbx
  40321e:	lea    r11,[rsp-0x18000]
  403226:	sub    rsp,0x1000
  40322d:	or     QWORD PTR [rsp],0x0
  403232:	cmp    rsp,r11
  403235:	jne    403226 <main@@Base+0x16>
  403237:	sub    rsp,0x758
  40323e:	lea    r13,[rip+0x3dc8]        # 40700d <_IO_stdin_used@@Base+0xd>
  403245:	lea    rdi,[rsp+0x28]
  40324a:	mov    rax,QWORD PTR fs:0x28
  403253:	mov    QWORD PTR [rsp+0x18748],rax
  40325b:	xor    eax,eax
  40325d:	call   4031b0 <time@plt>
  403262:	mov    edi,eax
  403264:	lea    rbp,[rsp+0x30]
  403269:	call   403190 <srand@plt>
  40326e:	call   403200 <rand@plt>
  403273:	mov    rdi,rbp
  403276:	mov    ebx,eax
  403278:	call   403a00 <table_init@@Base>
  40327d:	xor    edx,edx
  40327f:	lea    rsi,[rip+0x3d7e]        # 407004 <_IO_stdin_used@@Base+0x4>
  403286:	mov    rdi,rbp
  403289:	call   404340 <table_add_column@@Base>
  40328e:	mov    edx,0x15
  403293:	lea    rsi,[rip+0x3d6d]        # 407007 <_IO_stdin_used@@Base+0x7>
  40329a:	mov    rdi,rbp
  40329d:	mov    r15d,eax
  4032a0:	call   404340 <table_add_column@@Base>
  4032a5:	mov    r14d,eax
  4032a8:	mov    edx,0x51eb851f
  4032ad:	mov    eax,ebx
  4032af:	imul   edx
  4032b1:	mov    eax,ebx
  4032b3:	sar    eax,0x1f
  4032b6:	sar    edx,0x5
  4032b9:	sub    edx,eax
  4032bb:	imul   eax,edx,0x64
  4032be:	lea    r12,[rsp+0xa0]
  4032c6:	sub    ebx,eax
  4032c8:	lea    eax,[rbx+0x64]
  4032cb:	mov    DWORD PTR [rsp+0x8],eax
  4032cf:	xor    ebx,ebx
  4032d1:	nop    DWORD PTR [rax+0x0]
  4032d8:	mov    r9d,ebx
  4032db:	mov    r8,r13
  4032de:	mov    ecx,0xff
  4032e3:	mov    edx,0x1
  4032e8:	mov    esi,0xff
  4032ed:	mov    rdi,r12
  4032f0:	xor    eax,eax
  4032f2:	call   403120 <__snprintf_chk@plt>
  4032f7:	mov    rdi,rbp
  4032fa:	call   4051e0 <table_add_row@@Base>
  4032ff:	mov    ecx,ebx
  403301:	mov    esi,ebx
  403303:	mov    edx,r15d
  403306:	mov    rdi,rbp
  403309:	call   4057d0 <table_set_int@@Base>
  40330e:	mov    esi,ebx
  403310:	mov    rcx,r12
  403313:	mov    edx,r14d
  403316:	mov    rdi,rbp
  403319:	inc    ebx
  40331b:	call   405b40 <table_set_string@@Base>
  403320:	cmp    ebx,DWORD PTR [rsp+0x8]
  403324:	jne    4032d8 <main@@Base+0xc8>
  403326:	mov    edx,0x186a0
  40332b:	mov    rsi,r12
  40332e:	mov    rdi,rbp
  403331:	call   405bc0 <table_serialize@@Base>
  403336:	mov    esi,0x186a0
  40333b:	mov    rdi,r12
  40333e:	call   405e10 <table_deserialize@@Base>
  403343:	mov    r15,rax
  403346:	mov    rdi,rbp
  403349:	call   405190 <table_get_row_length@@Base>
  40334e:	mov    rdi,r15
  403351:	mov    ebx,eax
  403353:	call   405190 <table_get_row_length@@Base>
  403358:	mov    DWORD PTR [rsp+0x8],eax
  40335c:	cmp    ebx,eax
  40335e:	jne    4038a5 <main@@Base+0x695>
  403364:	mov    rdi,rbp
  403367:	call   4042b0 <table_get_column_length@@Base>
  40336c:	mov    rdi,r15
  40336f:	mov    r12d,eax
  403372:	call   4042b0 <table_get_column_length@@Base>
  403377:	mov    r14d,eax
  40337a:	cmp    r12d,eax
  40337d:	jne    4038d7 <main@@Base+0x6c7>
  403383:	mov    DWORD PTR [rsp+0xc],0x0
  40338b:	xor    r12d,r12d
  40338e:	test   ebx,ebx
  403390:	jle    403411 <main@@Base+0x201>
  403392:	lea    r13,[rip+0x3d2b]        # 4070c4 <_IO_stdin_used@@Base+0xc4>
  403399:	nop    DWORD PTR [rax+0x0]
  4033a0:	xor    ebx,ebx
  4033a2:	test   r14d,r14d
  4033a5:	jle    403407 <main@@Base+0x1f7>
  4033a7:	nop    WORD PTR [rax+rax*1+0x0]
  4033b0:	mov    esi,ebx
  4033b2:	mov    rdi,rbp
  4033b5:	call   404650 <table_get_column_data_type@@Base>
  4033ba:	cmp    eax,0x17
  4033bd:	ja     403400 <main@@Base+0x1f0>
  4033bf:	mov    eax,eax
  4033c1:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4033c6:	mov    edx,ebx
  4033c8:	add    rax,r13
  4033cb:	mov    esi,r12d
  4033ce:	notrack jmp rax
  4033d1:	nop    DWORD PTR [rax+0x0]
  4033d8:	mov    rdi,rbp
  4033db:	call   404f30 <table_get_bool@@Base>
  4033e0:	mov    edx,ebx
  4033e2:	mov    esi,r12d
  4033e5:	mov    rdi,r15
  4033e8:	mov    BYTE PTR [rsp+0x10],al
  4033ec:	call   404f30 <table_get_bool@@Base>
  4033f1:	xor    al,BYTE PTR [rsp+0x10]
  4033f5:	nop    DWORD PTR [rax]
  4033f8:	test   al,al
  4033fa:	jne    403488 <main@@Base+0x278>
  403400:	inc    ebx
  403402:	cmp    ebx,r14d
  403405:	jne    4033b0 <main@@Base+0x1a0>
  403407:	inc    r12d
  40340a:	cmp    DWORD PTR [rsp+0x8],r12d
  40340f:	jne    4033a0 <main@@Base+0x190>
  403411:	mov    rdi,rbp
  403414:	call   403aa0 <table_destroy@@Base>
  403419:	mov    rdi,r15
  40341c:	call   403b70 <table_delete@@Base>
  403421:	mov    rcx,QWORD PTR [rsp+0x18748]
  403429:	xor    rcx,QWORD PTR fs:0x28
  403432:	mov    eax,DWORD PTR [rsp+0xc]
  403436:	jne    40390a <main@@Base+0x6fa>
  40343c:	add    rsp,0x18758
  403443:	pop    rbx
  403444:	pop    rbp
  403445:	pop    r12
  403447:	pop    r13
  403449:	pop    r14
  40344b:	pop    r15
  40344d:	ret    
  40344e:	xchg   ax,ax
  403450:	mov    rdi,r15
  403453:	call   405170 <table_get_string@@Base>
  403458:	mov    edx,ebx
  40345a:	mov    esi,r12d
  40345d:	mov    rdi,rbp
  403460:	mov    QWORD PTR [rsp+0x10],rax
  403465:	call   405170 <table_get_string@@Base>
  40346a:	mov    rsi,QWORD PTR [rsp+0x10]
  40346f:	mov    rdi,rax
  403472:	call   4031a0 <strcmp@plt>
  403477:	test   eax,eax
  403479:	setne  al
  40347c:	test   al,al
  40347e:	je     403400 <main@@Base+0x1f0>
  403484:	nop    DWORD PTR [rax+0x0]
  403488:	mov    edx,r12d
  40348b:	mov    ecx,ebx
  40348d:	lea    rsi,[rip+0x3bfc]        # 407090 <_IO_stdin_used@@Base+0x90>
  403494:	mov    edi,0x1
  403499:	xor    eax,eax
  40349b:	inc    r12d
  40349e:	call   4031f0 <__printf_chk@plt>
  4034a3:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4034ab:	cmp    DWORD PTR [rsp+0x8],r12d
  4034b0:	jne    4033a0 <main@@Base+0x190>
  4034b6:	jmp    403411 <main@@Base+0x201>
  4034bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4034c0:	mov    rdi,rbp
  4034c3:	call   405150 <table_get_char@@Base>
  4034c8:	mov    edx,ebx
  4034ca:	mov    esi,r12d
  4034cd:	mov    rdi,r15
  4034d0:	mov    BYTE PTR [rsp+0x10],al
  4034d4:	call   405150 <table_get_char@@Base>
  4034d9:	cmp    BYTE PTR [rsp+0x10],al
  4034dd:	setne  al
  4034e0:	jmp    4033f8 <main@@Base+0x1e8>
  4034e5:	nop    DWORD PTR [rax]
  4034e8:	mov    rdi,rbp
  4034eb:	call   405130 <table_get_ldouble@@Base>
  4034f0:	fstp   TBYTE PTR [rsp+0x10]
  4034f4:	mov    edx,ebx
  4034f6:	mov    esi,r12d
  4034f9:	mov    rdi,r15
  4034fc:	call   405130 <table_get_ldouble@@Base>
  403501:	fld    TBYTE PTR [rsp+0x10]
  403505:	mov    ecx,0x1
  40350a:	fucomip st,st(1)
  40350c:	fstp   st(0)
  40350e:	setp   al
  403511:	cmovne eax,ecx
  403514:	jmp    4033f8 <main@@Base+0x1e8>
  403519:	nop    DWORD PTR [rax+0x0]
  403520:	mov    rdi,rbp
  403523:	call   405160 <table_get_uchar@@Base>
  403528:	mov    edx,ebx
  40352a:	mov    esi,r12d
  40352d:	mov    rdi,r15
  403530:	mov    BYTE PTR [rsp+0x10],al
  403534:	call   405160 <table_get_uchar@@Base>
  403539:	cmp    BYTE PTR [rsp+0x10],al
  40353d:	setne  al
  403540:	jmp    4033f8 <main@@Base+0x1e8>
  403545:	nop    DWORD PTR [rax]
  403548:	mov    rdi,rbp
  40354b:	call   405110 <table_get_double@@Base>
  403550:	mov    edx,ebx
  403552:	mov    esi,r12d
  403555:	mov    rdi,r15
  403558:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40355e:	call   405110 <table_get_double@@Base>
  403563:	vmovsd xmm1,QWORD PTR [rsp+0x10]
  403569:	mov    ecx,0x1
  40356e:	vucomisd xmm1,xmm0
  403572:	setp   al
  403575:	cmovne eax,ecx
  403578:	jmp    4033f8 <main@@Base+0x1e8>
  40357d:	nop    DWORD PTR [rax]
  403580:	mov    rdi,rbp
  403583:	call   4050f0 <table_get_float@@Base>
  403588:	mov    edx,ebx
  40358a:	mov    esi,r12d
  40358d:	mov    rdi,r15
  403590:	vmovss DWORD PTR [rsp+0x10],xmm0
  403596:	call   4050f0 <table_get_float@@Base>
  40359b:	vmovss xmm1,DWORD PTR [rsp+0x10]
  4035a1:	mov    ecx,0x1
  4035a6:	vucomiss xmm1,xmm0
  4035aa:	setp   al
  4035ad:	cmovne eax,ecx
  4035b0:	jmp    4033f8 <main@@Base+0x1e8>
  4035b5:	nop    DWORD PTR [rax]
  4035b8:	mov    rdi,rbp
  4035bb:	call   4050d0 <table_get_ullong@@Base>
  4035c0:	mov    edx,ebx
  4035c2:	mov    esi,r12d
  4035c5:	mov    rdi,r15
  4035c8:	mov    QWORD PTR [rsp+0x10],rax
  4035cd:	call   4050d0 <table_get_ullong@@Base>
  4035d2:	cmp    QWORD PTR [rsp+0x10],rax
  4035d7:	setne  al
  4035da:	jmp    4033f8 <main@@Base+0x1e8>
  4035df:	nop
  4035e0:	mov    rdi,rbp
  4035e3:	call   4050b0 <table_get_llong@@Base>
  4035e8:	mov    edx,ebx
  4035ea:	mov    esi,r12d
  4035ed:	mov    rdi,r15
  4035f0:	mov    QWORD PTR [rsp+0x10],rax
  4035f5:	call   4050b0 <table_get_llong@@Base>
  4035fa:	cmp    QWORD PTR [rsp+0x10],rax
  4035ff:	setne  al
  403602:	jmp    4033f8 <main@@Base+0x1e8>
  403607:	nop    WORD PTR [rax+rax*1+0x0]
  403610:	mov    rdi,rbp
  403613:	call   4050a0 <table_get_ulong@@Base>
  403618:	mov    edx,ebx
  40361a:	mov    esi,r12d
  40361d:	mov    rdi,r15
  403620:	mov    QWORD PTR [rsp+0x10],rax
  403625:	call   4050a0 <table_get_ulong@@Base>
  40362a:	cmp    QWORD PTR [rsp+0x10],rax
  40362f:	setne  al
  403632:	jmp    4033f8 <main@@Base+0x1e8>
  403637:	nop    WORD PTR [rax+rax*1+0x0]
  403640:	mov    rdi,rbp
  403643:	call   405090 <table_get_long@@Base>
  403648:	mov    edx,ebx
  40364a:	mov    esi,r12d
  40364d:	mov    rdi,r15
  403650:	mov    QWORD PTR [rsp+0x10],rax
  403655:	call   405090 <table_get_long@@Base>
  40365a:	cmp    QWORD PTR [rsp+0x10],rax
  40365f:	setne  al
  403662:	jmp    4033f8 <main@@Base+0x1e8>
  403667:	nop    WORD PTR [rax+rax*1+0x0]
  403670:	mov    rdi,rbp
  403673:	call   405080 <table_get_ushort@@Base>
  403678:	mov    edx,ebx
  40367a:	mov    esi,r12d
  40367d:	mov    rdi,r15
  403680:	mov    WORD PTR [rsp+0x10],ax
  403685:	call   405080 <table_get_ushort@@Base>
  40368a:	cmp    WORD PTR [rsp+0x10],ax
  40368f:	setne  al
  403692:	jmp    4033f8 <main@@Base+0x1e8>
  403697:	nop    WORD PTR [rax+rax*1+0x0]
  4036a0:	mov    rdi,rbp
  4036a3:	call   405070 <table_get_short@@Base>
  4036a8:	mov    edx,ebx
  4036aa:	mov    esi,r12d
  4036ad:	mov    rdi,r15
  4036b0:	mov    WORD PTR [rsp+0x10],ax
  4036b5:	call   405070 <table_get_short@@Base>
  4036ba:	cmp    WORD PTR [rsp+0x10],ax
  4036bf:	setne  al
  4036c2:	jmp    4033f8 <main@@Base+0x1e8>
  4036c7:	nop    WORD PTR [rax+rax*1+0x0]
  4036d0:	mov    rdi,rbp
  4036d3:	call   405050 <table_get_uint64@@Base>
  4036d8:	mov    edx,ebx
  4036da:	mov    esi,r12d
  4036dd:	mov    rdi,r15
  4036e0:	mov    QWORD PTR [rsp+0x10],rax
  4036e5:	call   405050 <table_get_uint64@@Base>
  4036ea:	cmp    QWORD PTR [rsp+0x10],rax
  4036ef:	setne  al
  4036f2:	jmp    4033f8 <main@@Base+0x1e8>
  4036f7:	nop    WORD PTR [rax+rax*1+0x0]
  403700:	mov    rdi,rbp
  403703:	call   405030 <table_get_int64@@Base>
  403708:	mov    edx,ebx
  40370a:	mov    esi,r12d
  40370d:	mov    rdi,r15
  403710:	mov    QWORD PTR [rsp+0x10],rax
  403715:	call   405030 <table_get_int64@@Base>
  40371a:	cmp    QWORD PTR [rsp+0x10],rax
  40371f:	setne  al
  403722:	jmp    4033f8 <main@@Base+0x1e8>
  403727:	nop    WORD PTR [rax+rax*1+0x0]
  403730:	mov    rdi,rbp
  403733:	call   405020 <table_get_uint32@@Base>
  403738:	mov    edx,ebx
  40373a:	mov    esi,r12d
  40373d:	mov    rdi,r15
  403740:	mov    DWORD PTR [rsp+0x10],eax
  403744:	call   405020 <table_get_uint32@@Base>
  403749:	cmp    DWORD PTR [rsp+0x10],eax
  40374d:	setne  al
  403750:	jmp    4033f8 <main@@Base+0x1e8>
  403755:	nop    DWORD PTR [rax]
  403758:	mov    rdi,rbp
  40375b:	call   405010 <table_get_int32@@Base>
  403760:	mov    edx,ebx
  403762:	mov    esi,r12d
  403765:	mov    rdi,r15
  403768:	mov    DWORD PTR [rsp+0x10],eax
  40376c:	call   405010 <table_get_int32@@Base>
  403771:	cmp    DWORD PTR [rsp+0x10],eax
  403775:	setne  al
  403778:	jmp    4033f8 <main@@Base+0x1e8>
  40377d:	nop    DWORD PTR [rax]
  403780:	mov    rdi,rbp
  403783:	call   404ff0 <table_get_uint16@@Base>
  403788:	mov    edx,ebx
  40378a:	mov    esi,r12d
  40378d:	mov    rdi,r15
  403790:	mov    WORD PTR [rsp+0x10],ax
  403795:	call   404ff0 <table_get_uint16@@Base>
  40379a:	cmp    WORD PTR [rsp+0x10],ax
  40379f:	setne  al
  4037a2:	jmp    4033f8 <main@@Base+0x1e8>
  4037a7:	nop    WORD PTR [rax+rax*1+0x0]
  4037b0:	mov    rdi,rbp
  4037b3:	call   404fd0 <table_get_int16@@Base>
  4037b8:	mov    edx,ebx
  4037ba:	mov    esi,r12d
  4037bd:	mov    rdi,r15
  4037c0:	mov    WORD PTR [rsp+0x10],ax
  4037c5:	call   404fd0 <table_get_int16@@Base>
  4037ca:	cmp    WORD PTR [rsp+0x10],ax
  4037cf:	setne  al
  4037d2:	jmp    4033f8 <main@@Base+0x1e8>
  4037d7:	nop    WORD PTR [rax+rax*1+0x0]
  4037e0:	mov    rdi,rbp
  4037e3:	call   404fb0 <table_get_uint8@@Base>
  4037e8:	mov    edx,ebx
  4037ea:	mov    esi,r12d
  4037ed:	mov    rdi,r15
  4037f0:	mov    BYTE PTR [rsp+0x10],al
  4037f4:	call   404fb0 <table_get_uint8@@Base>
  4037f9:	cmp    BYTE PTR [rsp+0x10],al
  4037fd:	setne  al
  403800:	jmp    4033f8 <main@@Base+0x1e8>
  403805:	nop    DWORD PTR [rax]
  403808:	mov    rdi,rbp
  40380b:	call   404f90 <table_get_int8@@Base>
  403810:	mov    edx,ebx
  403812:	mov    esi,r12d
  403815:	mov    rdi,r15
  403818:	mov    BYTE PTR [rsp+0x10],al
  40381c:	call   404f90 <table_get_int8@@Base>
  403821:	cmp    BYTE PTR [rsp+0x10],al
  403825:	setne  al
  403828:	jmp    4033f8 <main@@Base+0x1e8>
  40382d:	nop    DWORD PTR [rax]
  403830:	mov    rdi,rbp
  403833:	call   404f70 <table_get_uint@@Base>
  403838:	mov    edx,ebx
  40383a:	mov    esi,r12d
  40383d:	mov    rdi,r15
  403840:	mov    DWORD PTR [rsp+0x10],eax
  403844:	call   404f70 <table_get_uint@@Base>
  403849:	cmp    DWORD PTR [rsp+0x10],eax
  40384d:	setne  al
  403850:	jmp    4033f8 <main@@Base+0x1e8>
  403855:	nop    DWORD PTR [rax]
  403858:	mov    rdi,rbp
  40385b:	call   405180 <table_get_ptr@@Base>
  403860:	mov    edx,ebx
  403862:	mov    esi,r12d
  403865:	mov    rdi,r15
  403868:	mov    QWORD PTR [rsp+0x10],rax
  40386d:	call   405180 <table_get_ptr@@Base>
  403872:	cmp    QWORD PTR [rsp+0x10],rax
  403877:	setne  al
  40387a:	jmp    4033f8 <main@@Base+0x1e8>
  40387f:	nop
  403880:	mov    rdi,rbp
  403883:	call   404f50 <table_get_int@@Base>
  403888:	mov    edx,ebx
  40388a:	mov    esi,r12d
  40388d:	mov    rdi,r15
  403890:	mov    DWORD PTR [rsp+0x10],eax
  403894:	call   404f50 <table_get_int@@Base>
  403899:	cmp    DWORD PTR [rsp+0x10],eax
  40389d:	setne  al
  4038a0:	jmp    4033f8 <main@@Base+0x1e8>
  4038a5:	mov    ecx,eax
  4038a7:	mov    edx,ebx
  4038a9:	lea    rsi,[rip+0x3760]        # 407010 <_IO_stdin_used@@Base+0x10>
  4038b0:	mov    edi,0x1
  4038b5:	xor    eax,eax
  4038b7:	call   4031f0 <__printf_chk@plt>
  4038bc:	mov    rdi,rbp
  4038bf:	call   4042b0 <table_get_column_length@@Base>
  4038c4:	mov    rdi,r15
  4038c7:	mov    r12d,eax
  4038ca:	call   4042b0 <table_get_column_length@@Base>
  4038cf:	mov    r14d,eax
  4038d2:	cmp    eax,r12d
  4038d5:	je     4038fd <main@@Base+0x6ed>
  4038d7:	mov    ecx,r14d
  4038da:	mov    edx,r12d
  4038dd:	lea    rsi,[rip+0x376c]        # 407050 <_IO_stdin_used@@Base+0x50>
  4038e4:	mov    edi,0x1
  4038e9:	xor    eax,eax
  4038eb:	call   4031f0 <__printf_chk@plt>
  4038f0:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4038f8:	jmp    403411 <main@@Base+0x201>
  4038fd:	mov    DWORD PTR [rsp+0xc],0xffffffff
  403905:	jmp    403411 <main@@Base+0x201>
  40390a:	call   403170 <__stack_chk_fail@plt>
  40390f:	nop

0000000000403910 <_start@@Base>:
  403910:	endbr64 
  403914:	xor    ebp,ebp
  403916:	mov    r9,rdx
  403919:	pop    rsi
  40391a:	mov    rdx,rsp
  40391d:	and    rsp,0xfffffffffffffff0
  403921:	push   rax
  403922:	push   rsp
  403923:	mov    r8,0x406d30
  40392a:	mov    rcx,0x406cc0
  403931:	mov    rdi,0x403210
  403938:	call   QWORD PTR [rip+0x66b2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  40393e:	hlt    
  40393f:	nop
  403940:	endbr64 
  403944:	ret    
  403945:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40394f:	nop
  403950:	mov    eax,0x40a0a0
  403955:	cmp    rax,0x40a0a0
  40395b:	je     403970 <_start@@Base+0x60>
  40395d:	mov    eax,0x0
  403962:	test   rax,rax
  403965:	je     403970 <_start@@Base+0x60>
  403967:	mov    edi,0x40a0a0
  40396c:	jmp    rax
  40396e:	xchg   ax,ax
  403970:	ret    
  403971:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40397c:	nop    DWORD PTR [rax+0x0]
  403980:	mov    esi,0x40a0a0
  403985:	sub    rsi,0x40a0a0
  40398c:	sar    rsi,0x3
  403990:	mov    rax,rsi
  403993:	shr    rax,0x3f
  403997:	add    rsi,rax
  40399a:	sar    rsi,1
  40399d:	je     4039b0 <_start@@Base+0xa0>
  40399f:	mov    eax,0x0
  4039a4:	test   rax,rax
  4039a7:	je     4039b0 <_start@@Base+0xa0>
  4039a9:	mov    edi,0x40a0a0
  4039ae:	jmp    rax
  4039b0:	ret    
  4039b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039bc:	nop    DWORD PTR [rax+0x0]
  4039c0:	endbr64 
  4039c4:	cmp    BYTE PTR [rip+0x66d5],0x0        # 40a0a0 <__bss_start@@Base>
  4039cb:	jne    4039e0 <_start@@Base+0xd0>
  4039cd:	push   rbp
  4039ce:	mov    rbp,rsp
  4039d1:	call   403950 <_start@@Base+0x40>
  4039d6:	mov    BYTE PTR [rip+0x66c3],0x1        # 40a0a0 <__bss_start@@Base>
  4039dd:	pop    rbp
  4039de:	ret    
  4039df:	nop
  4039e0:	ret    
  4039e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039ec:	nop    DWORD PTR [rax+0x0]
  4039f0:	endbr64 
  4039f4:	jmp    403980 <_start@@Base+0x70>
  4039f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403a00 <table_init@@Base>:
  403a00:	endbr64 
  403a04:	mov    QWORD PTR [rdi],0x0
  403a0b:	mov    DWORD PTR [rdi+0x8],0x0
  403a12:	mov    QWORD PTR [rdi+0x18],0x0
  403a1a:	mov    QWORD PTR [rdi+0x10],0xa
  403a22:	mov    QWORD PTR [rdi+0x20],0x0
  403a2a:	mov    DWORD PTR [rdi+0x28],0x0
  403a31:	mov    QWORD PTR [rdi+0x38],0x0
  403a39:	mov    QWORD PTR [rdi+0x30],0x14
  403a41:	mov    QWORD PTR [rdi+0x48],0x0
  403a49:	mov    QWORD PTR [rdi+0x50],0x0
  403a51:	mov    QWORD PTR [rdi+0x58],0x0
  403a59:	mov    DWORD PTR [rdi+0x40],0x0
  403a60:	mov    QWORD PTR [rdi+0x68],0x0
  403a68:	mov    QWORD PTR [rdi+0x60],0xa
  403a70:	ret    
  403a71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a7c:	nop    DWORD PTR [rax+0x0]

0000000000403a80 <table_new@@Base>:
  403a80:	endbr64 
  403a84:	push   rbx
  403a85:	mov    edi,0x70
  403a8a:	call   4031c0 <malloc@plt>
  403a8f:	mov    rbx,rax
  403a92:	mov    rdi,rax
  403a95:	call   403a00 <table_init@@Base>
  403a9a:	mov    rax,rbx
  403a9d:	pop    rbx
  403a9e:	ret    
  403a9f:	nop

0000000000403aa0 <table_destroy@@Base>:
  403aa0:	endbr64 
  403aa4:	test   rdi,rdi
  403aa7:	je     403b68 <table_destroy@@Base+0xc8>
  403aad:	push   r12
  403aaf:	mov    edx,0xffffffff
  403ab4:	mov    ecx,0x40
  403ab9:	push   rbp
  403aba:	mov    esi,edx
  403abc:	push   rbx
  403abd:	mov    rbx,rdi
  403ac0:	call   404240 <table_notify@@Base>
  403ac5:	mov    rdi,rbx
  403ac8:	call   405190 <table_get_row_length@@Base>
  403acd:	mov    r12d,eax
  403ad0:	test   eax,eax
  403ad2:	jle    403af1 <table_destroy@@Base+0x51>
  403ad4:	xor    ebp,ebp
  403ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ae0:	mov    esi,ebp
  403ae2:	mov    rdi,rbx
  403ae5:	inc    ebp
  403ae7:	call   4052a0 <table_row_destroy@@Base>
  403aec:	cmp    r12d,ebp
  403aef:	jne    403ae0 <table_destroy@@Base+0x40>
  403af1:	mov    rdi,QWORD PTR [rbx+0x20]
  403af5:	test   rdi,rdi
  403af8:	je     403aff <table_destroy@@Base+0x5f>
  403afa:	call   403130 <free@plt>
  403aff:	mov    rdi,rbx
  403b02:	call   4042b0 <table_get_column_length@@Base>
  403b07:	mov    r12d,eax
  403b0a:	test   eax,eax
  403b0c:	jle    403b21 <table_destroy@@Base+0x81>
  403b0e:	xor    ebp,ebp
  403b10:	mov    esi,ebp
  403b12:	mov    rdi,rbx
  403b15:	inc    ebp
  403b17:	call   404470 <table_column_destroy@@Base>
  403b1c:	cmp    r12d,ebp
  403b1f:	jne    403b10 <table_destroy@@Base+0x70>
  403b21:	mov    rdi,QWORD PTR [rbx]
  403b24:	test   rdi,rdi
  403b27:	je     403b2e <table_destroy@@Base+0x8e>
  403b29:	call   403130 <free@plt>
  403b2e:	mov    rdi,QWORD PTR [rbx+0x48]
  403b32:	test   rdi,rdi
  403b35:	je     403b3c <table_destroy@@Base+0x9c>
  403b37:	call   403130 <free@plt>
  403b3c:	mov    rdi,QWORD PTR [rbx+0x50]
  403b40:	test   rdi,rdi
  403b43:	je     403b4a <table_destroy@@Base+0xaa>
  403b45:	call   403130 <free@plt>
  403b4a:	mov    rdi,QWORD PTR [rbx+0x58]
  403b4e:	test   rdi,rdi
  403b51:	je     403b60 <table_destroy@@Base+0xc0>
  403b53:	pop    rbx
  403b54:	pop    rbp
  403b55:	pop    r12
  403b57:	jmp    403130 <free@plt>
  403b5c:	nop    DWORD PTR [rax+0x0]
  403b60:	pop    rbx
  403b61:	pop    rbp
  403b62:	pop    r12
  403b64:	ret    
  403b65:	nop    DWORD PTR [rax]
  403b68:	ret    
  403b69:	nop    DWORD PTR [rax+0x0]

0000000000403b70 <table_delete@@Base>:
  403b70:	endbr64 
  403b74:	push   rbx
  403b75:	mov    rbx,rdi
  403b78:	call   403aa0 <table_destroy@@Base>
  403b7d:	mov    rdi,rbx
  403b80:	pop    rbx
  403b81:	jmp    403130 <free@plt>
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403b90 <table_dupe@@Base>:
  403b90:	endbr64 
  403b94:	push   r15
  403b96:	push   r14
  403b98:	push   r13
  403b9a:	push   r12
  403b9c:	mov    r12,rdi
  403b9f:	push   rbp
  403ba0:	push   rbx
  403ba1:	sub    rsp,0x28
  403ba5:	mov    rax,QWORD PTR fs:0x28
  403bae:	mov    QWORD PTR [rsp+0x18],rax
  403bb3:	xor    eax,eax
  403bb5:	call   405190 <table_get_row_length@@Base>
  403bba:	mov    rdi,r12
  403bbd:	mov    DWORD PTR [rsp+0x4],eax
  403bc1:	call   4042b0 <table_get_column_length@@Base>
  403bc6:	mov    r14d,eax
  403bc9:	call   403a80 <table_new@@Base>
  403bce:	mov    r15,rax
  403bd1:	test   r14d,r14d
  403bd4:	jle    403c0b <table_dupe@@Base+0x7b>
  403bd6:	xor    ebx,ebx
  403bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403be0:	mov    esi,ebx
  403be2:	mov    rdi,r12
  403be5:	call   404670 <table_get_column_name@@Base>
  403bea:	mov    esi,ebx
  403bec:	mov    rdi,r12
  403bef:	mov    rbp,rax
  403bf2:	call   404650 <table_get_column_data_type@@Base>
  403bf7:	mov    edx,eax
  403bf9:	mov    rsi,rbp
  403bfc:	mov    rdi,r15
  403bff:	inc    ebx
  403c01:	call   404340 <table_add_column@@Base>
  403c06:	cmp    r14d,ebx
  403c09:	jne    403be0 <table_dupe@@Base+0x50>
  403c0b:	mov    ecx,DWORD PTR [rsp+0x4]
  403c0f:	test   ecx,ecx
  403c11:	jle    403c8f <table_dupe@@Base+0xff>
  403c13:	lea    rax,[rsp+0x10]
  403c18:	mov    QWORD PTR [rsp+0x8],rax
  403c1d:	xor    ebp,ebp
  403c1f:	lea    r13,[rip+0x34fe]        # 407124 <_IO_stdin_used@@Base+0x124>
  403c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c30:	mov    rdi,r15
  403c33:	call   4051e0 <table_add_row@@Base>
  403c38:	test   r14d,r14d
  403c3b:	jle    403c87 <table_dupe@@Base+0xf7>
  403c3d:	xor    ebx,ebx
  403c3f:	nop
  403c40:	mov    esi,ebx
  403c42:	mov    rdi,r12
  403c45:	call   404650 <table_get_column_data_type@@Base>
  403c4a:	cmp    eax,0x17
  403c4d:	ja     403c80 <table_dupe@@Base+0xf0>
  403c4f:	mov    eax,eax
  403c51:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  403c56:	mov    edx,ebx
  403c58:	add    rax,r13
  403c5b:	mov    esi,ebp
  403c5d:	mov    rdi,r12
  403c60:	notrack jmp rax
  403c63:	nop    DWORD PTR [rax+rax*1+0x0]
  403c68:	call   404f30 <table_get_bool@@Base>
  403c6d:	movzx  ecx,al
  403c70:	mov    edx,ebx
  403c72:	mov    esi,ebp
  403c74:	mov    rdi,r15
  403c77:	call   4057a0 <table_set_bool@@Base>
  403c7c:	nop    DWORD PTR [rax+0x0]
  403c80:	inc    ebx
  403c82:	cmp    r14d,ebx
  403c85:	jne    403c40 <table_dupe@@Base+0xb0>
  403c87:	inc    ebp
  403c89:	cmp    DWORD PTR [rsp+0x4],ebp
  403c8d:	jne    403c30 <table_dupe@@Base+0xa0>
  403c8f:	mov    rcx,QWORD PTR [rsp+0x18]
  403c94:	xor    rcx,QWORD PTR fs:0x28
  403c9d:	mov    rax,r15
  403ca0:	jne    403f89 <table_dupe@@Base+0x3f9>
  403ca6:	add    rsp,0x28
  403caa:	pop    rbx
  403cab:	pop    rbp
  403cac:	pop    r12
  403cae:	pop    r13
  403cb0:	pop    r14
  403cb2:	pop    r15
  403cb4:	ret    
  403cb5:	nop    DWORD PTR [rax]
  403cb8:	call   405170 <table_get_string@@Base>
  403cbd:	mov    rcx,rax
  403cc0:	mov    edx,ebx
  403cc2:	mov    esi,ebp
  403cc4:	mov    rdi,r15
  403cc7:	call   405b40 <table_set_string@@Base>
  403ccc:	jmp    403c80 <table_dupe@@Base+0xf0>
  403cce:	xchg   ax,ax
  403cd0:	call   405160 <table_get_uchar@@Base>
  403cd5:	movzx  ecx,al
  403cd8:	mov    edx,ebx
  403cda:	mov    esi,ebp
  403cdc:	mov    rdi,r15
  403cdf:	call   405b80 <table_set_uchar@@Base>
  403ce4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cf0:	call   405180 <table_get_ptr@@Base>
  403cf5:	mov    rcx,QWORD PTR [rsp+0x8]
  403cfa:	mov    edx,ebx
  403cfc:	mov    esi,ebp
  403cfe:	mov    rdi,r15
  403d01:	mov    QWORD PTR [rsp+0x10],rax
  403d06:	call   405bb0 <table_set_ptr@@Base>
  403d0b:	jmp    403c80 <table_dupe@@Base+0xf0>
  403d10:	call   405150 <table_get_char@@Base>
  403d15:	movsx  ecx,al
  403d18:	mov    edx,ebx
  403d1a:	mov    esi,ebp
  403d1c:	mov    rdi,r15
  403d1f:	call   405b50 <table_set_char@@Base>
  403d24:	jmp    403c80 <table_dupe@@Base+0xf0>
  403d29:	nop    DWORD PTR [rax+0x0]
  403d30:	call   405130 <table_get_ldouble@@Base>
  403d35:	sub    rsp,0x10
  403d39:	mov    edx,ebx
  403d3b:	mov    esi,ebp
  403d3d:	mov    rdi,r15
  403d40:	fstp   TBYTE PTR [rsp]
  403d43:	call   405b20 <table_set_ldouble@@Base>
  403d48:	pop    rax
  403d49:	pop    rdx
  403d4a:	jmp    403c80 <table_dupe@@Base+0xf0>
  403d4f:	nop
  403d50:	call   405110 <table_get_double@@Base>
  403d55:	mov    edx,ebx
  403d57:	mov    esi,ebp
  403d59:	mov    rdi,r15
  403d5c:	call   405af0 <table_set_double@@Base>
  403d61:	jmp    403c80 <table_dupe@@Base+0xf0>
  403d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d70:	call   4050f0 <table_get_float@@Base>
  403d75:	mov    edx,ebx
  403d77:	mov    esi,ebp
  403d79:	mov    rdi,r15
  403d7c:	call   405ac0 <table_set_float@@Base>
  403d81:	jmp    403c80 <table_dupe@@Base+0xf0>
  403d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d90:	call   4050d0 <table_get_ullong@@Base>
  403d95:	mov    rcx,rax
  403d98:	mov    edx,ebx
  403d9a:	mov    esi,ebp
  403d9c:	mov    rdi,r15
  403d9f:	call   405a90 <table_set_ullong@@Base>
  403da4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403da9:	nop    DWORD PTR [rax+0x0]
  403db0:	call   4050b0 <table_get_llong@@Base>
  403db5:	mov    rcx,rax
  403db8:	mov    edx,ebx
  403dba:	mov    esi,ebp
  403dbc:	mov    rdi,r15
  403dbf:	call   405a60 <table_set_llong@@Base>
  403dc4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403dc9:	nop    DWORD PTR [rax+0x0]
  403dd0:	call   4050a0 <table_get_ulong@@Base>
  403dd5:	mov    rcx,rax
  403dd8:	mov    edx,ebx
  403dda:	mov    esi,ebp
  403ddc:	mov    rdi,r15
  403ddf:	call   405a30 <table_set_ulong@@Base>
  403de4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403de9:	nop    DWORD PTR [rax+0x0]
  403df0:	call   405090 <table_get_long@@Base>
  403df5:	mov    rcx,rax
  403df8:	mov    edx,ebx
  403dfa:	mov    esi,ebp
  403dfc:	mov    rdi,r15
  403dff:	call   405a00 <table_set_long@@Base>
  403e04:	jmp    403c80 <table_dupe@@Base+0xf0>
  403e09:	nop    DWORD PTR [rax+0x0]
  403e10:	call   405080 <table_get_ushort@@Base>
  403e15:	movzx  ecx,ax
  403e18:	mov    edx,ebx
  403e1a:	mov    esi,ebp
  403e1c:	mov    rdi,r15
  403e1f:	call   4059d0 <table_set_ushort@@Base>
  403e24:	jmp    403c80 <table_dupe@@Base+0xf0>
  403e29:	nop    DWORD PTR [rax+0x0]
  403e30:	call   405070 <table_get_short@@Base>
  403e35:	movsx  ecx,ax
  403e38:	mov    edx,ebx
  403e3a:	mov    esi,ebp
  403e3c:	mov    rdi,r15
  403e3f:	call   4059a0 <table_set_short@@Base>
  403e44:	jmp    403c80 <table_dupe@@Base+0xf0>
  403e49:	nop    DWORD PTR [rax+0x0]
  403e50:	call   405050 <table_get_uint64@@Base>
  403e55:	mov    rcx,rax
  403e58:	mov    edx,ebx
  403e5a:	mov    esi,ebp
  403e5c:	mov    rdi,r15
  403e5f:	call   405970 <table_set_uint64@@Base>
  403e64:	jmp    403c80 <table_dupe@@Base+0xf0>
  403e69:	nop    DWORD PTR [rax+0x0]
  403e70:	call   405030 <table_get_int64@@Base>
  403e75:	mov    rcx,rax
  403e78:	mov    edx,ebx
  403e7a:	mov    esi,ebp
  403e7c:	mov    rdi,r15
  403e7f:	call   405940 <table_set_int64@@Base>
  403e84:	jmp    403c80 <table_dupe@@Base+0xf0>
  403e89:	nop    DWORD PTR [rax+0x0]
  403e90:	call   404fb0 <table_get_uint8@@Base>
  403e95:	movzx  ecx,al
  403e98:	mov    edx,ebx
  403e9a:	mov    esi,ebp
  403e9c:	mov    rdi,r15
  403e9f:	call   405850 <table_set_uint8@@Base>
  403ea4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403ea9:	nop    DWORD PTR [rax+0x0]
  403eb0:	call   404f90 <table_get_int8@@Base>
  403eb5:	movsx  ecx,al
  403eb8:	mov    edx,ebx
  403eba:	mov    esi,ebp
  403ebc:	mov    rdi,r15
  403ebf:	call   405820 <table_set_int8@@Base>
  403ec4:	jmp    403c80 <table_dupe@@Base+0xf0>
  403ec9:	nop    DWORD PTR [rax+0x0]
  403ed0:	call   404f70 <table_get_uint@@Base>
  403ed5:	mov    ecx,eax
  403ed7:	mov    edx,ebx
  403ed9:	mov    esi,ebp
  403edb:	mov    rdi,r15
  403ede:	call   4057f0 <table_set_uint@@Base>
  403ee3:	jmp    403c80 <table_dupe@@Base+0xf0>
  403ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ef0:	call   404f50 <table_get_int@@Base>
  403ef5:	mov    ecx,eax
  403ef7:	mov    edx,ebx
  403ef9:	mov    esi,ebp
  403efb:	mov    rdi,r15
  403efe:	call   4057d0 <table_set_int@@Base>
  403f03:	jmp    403c80 <table_dupe@@Base+0xf0>
  403f08:	nop    DWORD PTR [rax+rax*1+0x0]
  403f10:	call   405020 <table_get_uint32@@Base>
  403f15:	mov    ecx,eax
  403f17:	mov    edx,ebx
  403f19:	mov    esi,ebp
  403f1b:	mov    rdi,r15
  403f1e:	call   405910 <table_set_uint32@@Base>
  403f23:	jmp    403c80 <table_dupe@@Base+0xf0>
  403f28:	nop    DWORD PTR [rax+rax*1+0x0]
  403f30:	call   405010 <table_get_int32@@Base>
  403f35:	mov    ecx,eax
  403f37:	mov    edx,ebx
  403f39:	mov    esi,ebp
  403f3b:	mov    rdi,r15
  403f3e:	call   4058e0 <table_set_int32@@Base>
  403f43:	jmp    403c80 <table_dupe@@Base+0xf0>
  403f48:	nop    DWORD PTR [rax+rax*1+0x0]
  403f50:	call   404ff0 <table_get_uint16@@Base>
  403f55:	movzx  ecx,ax
  403f58:	mov    edx,ebx
  403f5a:	mov    esi,ebp
  403f5c:	mov    rdi,r15
  403f5f:	call   4058b0 <table_set_uint16@@Base>
  403f64:	jmp    403c80 <table_dupe@@Base+0xf0>
  403f69:	nop    DWORD PTR [rax+0x0]
  403f70:	call   404fd0 <table_get_int16@@Base>
  403f75:	movsx  ecx,ax
  403f78:	mov    edx,ebx
  403f7a:	mov    esi,ebp
  403f7c:	mov    rdi,r15
  403f7f:	call   405880 <table_set_int16@@Base>
  403f84:	jmp    403c80 <table_dupe@@Base+0xf0>
  403f89:	call   403170 <__stack_chk_fail@plt>
  403f8e:	xchg   ax,ax

0000000000403f90 <table_get_major_version@@Base>:
  403f90:	endbr64 
  403f94:	xor    eax,eax
  403f96:	ret    
  403f97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403fa0 <table_get_minor_version@@Base>:
  403fa0:	endbr64 
  403fa4:	xor    eax,eax
  403fa6:	ret    
  403fa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403fb0 <table_get_patch_version@@Base>:
  403fb0:	endbr64 
  403fb4:	xor    eax,eax
  403fb6:	ret    
  403fb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403fc0 <table_get_version@@Base>:
  403fc0:	endbr64 
  403fc4:	lea    rax,[rip+0x3366]        # 407331 <_IO_stdin_used@@Base+0x331>
  403fcb:	ret    
  403fcc:	nop    DWORD PTR [rax+0x0]

0000000000403fd0 <table_get_callback_length@@Base>:
  403fd0:	endbr64 
  403fd4:	mov    eax,DWORD PTR [rdi+0x40]
  403fd7:	ret    
  403fd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403fe0 <table_register_callback@@Base>:
  403fe0:	endbr64 
  403fe4:	push   r13
  403fe6:	push   r12
  403fe8:	push   rbp
  403fe9:	push   rbx
  403fea:	sub    rsp,0x8
  403fee:	movsxd rax,DWORD PTR [rdi+0x40]
  403ff2:	test   eax,eax
  403ff4:	jle    404040 <table_register_callback@@Base+0x60>
  403ff6:	mov    r10,QWORD PTR [rdi+0x48]
  403ffa:	lea    r11d,[rax-0x1]
  403ffe:	xor    r8d,r8d
  404001:	jmp    404014 <table_register_callback@@Base+0x34>
  404003:	nop    DWORD PTR [rax+rax*1+0x0]
  404008:	lea    r9,[r8+0x1]
  40400c:	cmp    r8,r11
  40400f:	je     404040 <table_register_callback@@Base+0x60>
  404011:	mov    r8,r9
  404014:	cmp    rsi,QWORD PTR [r10+r8*8]
  404018:	jne    404008 <table_register_callback@@Base+0x28>
  40401a:	mov    rbx,QWORD PTR [rdi+0x50]
  40401e:	cmp    rdx,QWORD PTR [rbx+r8*8]
  404022:	jne    404008 <table_register_callback@@Base+0x28>
  404024:	test   r8d,r8d
  404027:	je     404040 <table_register_callback@@Base+0x60>
  404029:	mov    rax,QWORD PTR [rdi+0x58]
  40402d:	or     DWORD PTR [rax+r8*4],ecx
  404031:	add    rsp,0x8
  404035:	pop    rbx
  404036:	pop    rbp
  404037:	pop    r12
  404039:	pop    r13
  40403b:	ret    
  40403c:	nop    DWORD PTR [rax+0x0]
  404040:	mov    r13d,ecx
  404043:	mov    rcx,QWORD PTR [rdi+0x60]
  404047:	mov    r12,rdx
  40404a:	xor    edx,edx
  40404c:	div    rcx
  40404f:	mov    rbx,rsi
  404052:	mov    rbp,rdi
  404055:	test   rdx,rdx
  404058:	je     404090 <table_register_callback@@Base+0xb0>
  40405a:	mov    rdi,rbp
  40405d:	call   403fd0 <table_get_callback_length@@Base>
  404062:	mov    rdx,QWORD PTR [rbp+0x48]
  404066:	cdqe   
  404068:	mov    QWORD PTR [rdx+rax*8],rbx
  40406c:	mov    rdx,QWORD PTR [rbp+0x50]
  404070:	mov    QWORD PTR [rdx+rax*8],r12
  404074:	mov    rdx,QWORD PTR [rbp+0x58]
  404078:	mov    DWORD PTR [rdx+rax*4],r13d
  40407c:	inc    DWORD PTR [rbp+0x40]
  40407f:	add    rsp,0x8
  404083:	pop    rbx
  404084:	pop    rbp
  404085:	pop    r12
  404087:	pop    r13
  404089:	ret    
  40408a:	nop    WORD PTR [rax+rax*1+0x0]
  404090:	add    rcx,QWORD PTR [rdi+0x68]
  404094:	mov    QWORD PTR [rdi+0x68],rcx
  404098:	mov    rdi,QWORD PTR [rdi+0x48]
  40409c:	lea    rsi,[rcx*8+0x0]
  4040a4:	call   4031e0 <realloc@plt>
  4040a9:	mov    QWORD PTR [rbp+0x48],rax
  4040ad:	mov    rax,QWORD PTR [rbp+0x68]
  4040b1:	mov    rdi,QWORD PTR [rbp+0x50]
  4040b5:	lea    rsi,[rax*8+0x0]
  4040bd:	call   4031e0 <realloc@plt>
  4040c2:	mov    QWORD PTR [rbp+0x50],rax
  4040c6:	mov    rax,QWORD PTR [rbp+0x68]
  4040ca:	mov    rdi,QWORD PTR [rbp+0x58]
  4040ce:	lea    rsi,[rax*4+0x0]
  4040d6:	call   4031e0 <realloc@plt>
  4040db:	mov    QWORD PTR [rbp+0x58],rax
  4040df:	jmp    40405a <table_register_callback@@Base+0x7a>
  4040e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4040ef:	nop

00000000004040f0 <table_unregister_callback@@Base>:
  4040f0:	endbr64 
  4040f4:	mov    eax,DWORD PTR [rdi+0x40]
  4040f7:	test   eax,eax
  4040f9:	jle    404208 <table_unregister_callback@@Base+0x118>
  4040ff:	lea    r10d,[rax-0x1]
  404103:	mov    r9,QWORD PTR [rdi+0x48]
  404107:	mov    rcx,r10
  40410a:	xor    eax,eax
  40410c:	jmp    404120 <table_unregister_callback@@Base+0x30>
  40410e:	xchg   ax,ax
  404110:	lea    r8,[rax+0x1]
  404114:	cmp    r10,rax
  404117:	je     404200 <table_unregister_callback@@Base+0x110>
  40411d:	mov    rax,r8
  404120:	mov    r8d,eax
  404123:	cmp    rsi,QWORD PTR [r9+rax*8]
  404127:	jne    404110 <table_unregister_callback@@Base+0x20>
  404129:	mov    r11,QWORD PTR [rdi+0x50]
  40412d:	cmp    rdx,QWORD PTR [r11+rax*8]
  404131:	jne    404110 <table_unregister_callback@@Base+0x20>
  404133:	mov    eax,ecx
  404135:	cmp    ecx,r8d
  404138:	jle    40418a <table_unregister_callback@@Base+0x9a>
  40413a:	movsxd rcx,r8d
  40413d:	inc    rcx
  404140:	lea    rdx,[rcx*8+0x0]
  404148:	shl    rcx,0x2
  40414c:	jmp    404154 <table_unregister_callback@@Base+0x64>
  40414e:	xchg   ax,ax
  404150:	mov    r9,QWORD PTR [rdi+0x48]
  404154:	mov    rax,QWORD PTR [r9+rdx*1]
  404158:	inc    r8d
  40415b:	mov    QWORD PTR [r9+rdx*1-0x8],rax
  404160:	mov    rax,QWORD PTR [rdi+0x50]
  404164:	mov    rsi,QWORD PTR [rax+rdx*1]
  404168:	mov    QWORD PTR [rax+rdx*1-0x8],rsi
  40416d:	add    rdx,0x8
  404171:	mov    rax,QWORD PTR [rdi+0x58]
  404175:	mov    esi,DWORD PTR [rax+rcx*1]
  404178:	mov    DWORD PTR [rax+rcx*1-0x4],esi
  40417c:	add    rcx,0x4
  404180:	mov    eax,DWORD PTR [rdi+0x40]
  404183:	dec    eax
  404185:	cmp    eax,r8d
  404188:	jg     404150 <table_unregister_callback@@Base+0x60>
  40418a:	mov    rcx,QWORD PTR [rdi+0x60]
  40418e:	mov    DWORD PTR [rdi+0x40],eax
  404191:	xor    edx,edx
  404193:	cdqe   
  404195:	div    rcx
  404198:	test   rdx,rdx
  40419b:	jne    404208 <table_unregister_callback@@Base+0x118>
  40419d:	push   rbx
  40419e:	mov    rbx,rdi
  4041a1:	mov    rax,QWORD PTR [rdi+0x68]
  4041a5:	sub    rax,rcx
  4041a8:	mov    QWORD PTR [rdi+0x68],rax
  4041ac:	mov    rdi,QWORD PTR [rdi+0x48]
  4041b0:	je     404209 <table_unregister_callback@@Base+0x119>
  4041b2:	lea    rsi,[rax*8+0x0]
  4041ba:	call   4031e0 <realloc@plt>
  4041bf:	mov    QWORD PTR [rbx+0x48],rax
  4041c3:	mov    rax,QWORD PTR [rbx+0x68]
  4041c7:	mov    rdi,QWORD PTR [rbx+0x50]
  4041cb:	lea    rsi,[rax*8+0x0]
  4041d3:	call   4031e0 <realloc@plt>
  4041d8:	mov    QWORD PTR [rbx+0x50],rax
  4041dc:	mov    rax,QWORD PTR [rbx+0x68]
  4041e0:	mov    rdi,QWORD PTR [rbx+0x58]
  4041e4:	lea    rsi,[rax*4+0x0]
  4041ec:	call   4031e0 <realloc@plt>
  4041f1:	mov    QWORD PTR [rbx+0x58],rax
  4041f5:	pop    rbx
  4041f6:	ret    
  4041f7:	nop    WORD PTR [rax+rax*1+0x0]
  404200:	ret    
  404201:	nop    DWORD PTR [rax+0x0]
  404208:	ret    
  404209:	call   403130 <free@plt>
  40420e:	mov    rdi,QWORD PTR [rbx+0x50]
  404212:	call   403130 <free@plt>
  404217:	mov    rdi,QWORD PTR [rbx+0x58]
  40421b:	call   403130 <free@plt>
  404220:	mov    QWORD PTR [rbx+0x48],0x0
  404228:	mov    QWORD PTR [rbx+0x50],0x0
  404230:	mov    QWORD PTR [rbx+0x58],0x0
  404238:	pop    rbx
  404239:	ret    
  40423a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404240 <table_notify@@Base>:
  404240:	endbr64 
  404244:	mov    eax,DWORD PTR [rdi+0x40]
  404247:	test   eax,eax
  404249:	jle    4042a0 <table_notify@@Base+0x60>
  40424b:	push   r14
  40424d:	mov    r14d,ecx
  404250:	push   r13
  404252:	mov    r13d,edx
  404255:	push   r12
  404257:	mov    r12d,esi
  40425a:	push   rbp
  40425b:	mov    rbp,rdi
  40425e:	push   rbx
  40425f:	xor    ebx,ebx
  404261:	nop    DWORD PTR [rax+0x0]
  404268:	mov    rax,QWORD PTR [rbp+0x58]
  40426c:	test   DWORD PTR [rax+rbx*4],r14d
  404270:	je     40428d <table_notify@@Base+0x4d>
  404272:	mov    rdx,QWORD PTR [rbp+0x50]
  404276:	mov    rax,QWORD PTR [rbp+0x48]
  40427a:	mov    r8,QWORD PTR [rdx+rbx*8]
  40427e:	mov    ecx,r14d
  404281:	mov    edx,r13d
  404284:	mov    esi,r12d
  404287:	mov    rdi,rbp
  40428a:	call   QWORD PTR [rax+rbx*8]
  40428d:	inc    rbx
  404290:	cmp    DWORD PTR [rbp+0x40],ebx
  404293:	jg     404268 <table_notify@@Base+0x28>
  404295:	pop    rbx
  404296:	pop    rbp
  404297:	pop    r12
  404299:	pop    r13
  40429b:	pop    r14
  40429d:	ret    
  40429e:	xchg   ax,ax
  4042a0:	ret    
  4042a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042b0 <table_get_column_length@@Base>:
  4042b0:	endbr64 
  4042b4:	mov    eax,DWORD PTR [rdi+0x8]
  4042b7:	ret    
  4042b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042c0 <table_get_col_ptr@@Base>:
  4042c0:	endbr64 
  4042c4:	movsxd rsi,esi
  4042c7:	mov    rax,QWORD PTR [rdi]
  4042ca:	lea    rdx,[rsi+rsi*2]
  4042ce:	lea    rax,[rax+rdx*8]
  4042d2:	ret    
  4042d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4042de:	xchg   ax,ax

00000000004042e0 <table_column_init@@Base>:
  4042e0:	endbr64 
  4042e4:	push   r13
  4042e6:	mov    r13,r8
  4042e9:	push   r12
  4042eb:	mov    r12d,ecx
  4042ee:	push   rbp
  4042ef:	mov    rbp,rdx
  4042f2:	push   rbx
  4042f3:	sub    rsp,0x8
  4042f7:	call   4042c0 <table_get_col_ptr@@Base>
  4042fc:	mov    rdi,rbp
  4042ff:	mov    rbx,rax
  404302:	call   403160 <strlen@plt>
  404307:	lea    rdi,[rax+0x1]
  40430b:	call   4031c0 <malloc@plt>
  404310:	mov    QWORD PTR [rbx],rax
  404313:	test   rax,rax
  404316:	je     404323 <table_column_init@@Base+0x43>
  404318:	mov    rsi,rbp
  40431b:	mov    rdi,rax
  40431e:	call   403150 <strcpy@plt>
  404323:	mov    DWORD PTR [rbx+0x8],r12d
  404327:	mov    QWORD PTR [rbx+0x10],r13
  40432b:	add    rsp,0x8
  40432f:	pop    rbx
  404330:	pop    rbp
  404331:	pop    r12
  404333:	pop    r13
  404335:	ret    
  404336:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404340 <table_add_column@@Base>:
  404340:	endbr64 
  404344:	push   r15
  404346:	push   r14
  404348:	push   r13
  40434a:	push   r12
  40434c:	mov    r12,rsi
  40434f:	push   rbp
  404350:	mov    ebp,edx
  404352:	push   rbx
  404353:	mov    rbx,rdi
  404356:	sub    rsp,0x8
  40435a:	call   4042b0 <table_get_column_length@@Base>
  40435f:	mov    rcx,QWORD PTR [rbx+0x10]
  404363:	cdqe   
  404365:	xor    edx,edx
  404367:	div    rcx
  40436a:	test   rdx,rdx
  40436d:	je     404400 <table_add_column@@Base+0xc0>
  404373:	mov    rdi,rbx
  404376:	call   405190 <table_get_row_length@@Base>
  40437b:	mov    rdi,rbx
  40437e:	mov    r13d,eax
  404381:	call   4042b0 <table_get_column_length@@Base>
  404386:	mov    edi,ebp
  404388:	mov    r14d,eax
  40438b:	call   404d70 <table_get_default_compare_function_for_data_type@@Base>
  404390:	mov    r8,rax
  404393:	mov    ecx,ebp
  404395:	mov    rdx,r12
  404398:	mov    esi,r14d
  40439b:	mov    rdi,rbx
  40439e:	call   4042e0 <table_column_init@@Base>
  4043a3:	test   r13d,r13d
  4043a6:	jle    4043c4 <table_add_column@@Base+0x84>
  4043a8:	xor    ebp,ebp
  4043aa:	nop    WORD PTR [rax+rax*1+0x0]
  4043b0:	mov    esi,ebp
  4043b2:	mov    edx,r14d
  4043b5:	mov    rdi,rbx
  4043b8:	inc    ebp
  4043ba:	call   406c20 <table_cell_init@@Base>
  4043bf:	cmp    r13d,ebp
  4043c2:	jne    4043b0 <table_add_column@@Base+0x70>
  4043c4:	mov    rdi,rbx
  4043c7:	call   4042b0 <table_get_column_length@@Base>
  4043cc:	mov    edx,eax
  4043ce:	mov    rdi,rbx
  4043d1:	mov    ecx,0x8
  4043d6:	mov    esi,0xffffffff
  4043db:	call   404240 <table_notify@@Base>
  4043e0:	mov    eax,DWORD PTR [rbx+0x8]
  4043e3:	lea    edx,[rax+0x1]
  4043e6:	mov    DWORD PTR [rbx+0x8],edx
  4043e9:	add    rsp,0x8
  4043ed:	pop    rbx
  4043ee:	pop    rbp
  4043ef:	pop    r12
  4043f1:	pop    r13
  4043f3:	pop    r14
  4043f5:	pop    r15
  4043f7:	ret    
  4043f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404400:	add    rcx,QWORD PTR [rbx+0x18]
  404404:	mov    QWORD PTR [rbx+0x18],rcx
  404408:	lea    rsi,[rcx+rcx*2]
  40440c:	mov    rdi,QWORD PTR [rbx]
  40440f:	shl    rsi,0x3
  404413:	call   4031e0 <realloc@plt>
  404418:	mov    QWORD PTR [rbx],rax
  40441b:	mov    rdi,rbx
  40441e:	call   405190 <table_get_row_length@@Base>
  404423:	mov    r14d,eax
  404426:	test   eax,eax
  404428:	jle    404373 <table_add_column@@Base+0x33>
  40442e:	xor    r13d,r13d
  404431:	nop    DWORD PTR [rax+0x0]
  404438:	mov    esi,r13d
  40443b:	mov    rdi,rbx
  40443e:	call   4051a0 <table_get_row_ptr@@Base>
  404443:	mov    r15,rax
  404446:	mov    rax,QWORD PTR [rbx+0x18]
  40444a:	mov    rdi,QWORD PTR [r15]
  40444d:	lea    rsi,[rax*8+0x0]
  404455:	call   4031e0 <realloc@plt>
  40445a:	inc    r13d
  40445d:	mov    QWORD PTR [r15],rax
  404460:	cmp    r14d,r13d
  404463:	jne    404438 <table_add_column@@Base+0xf8>
  404465:	jmp    404373 <table_add_column@@Base+0x33>
  40446a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404470 <table_column_destroy@@Base>:
  404470:	endbr64 
  404474:	sub    rsp,0x8
  404478:	call   4042c0 <table_get_col_ptr@@Base>
  40447d:	mov    rdi,QWORD PTR [rax]
  404480:	test   rdi,rdi
  404483:	je     404490 <table_column_destroy@@Base+0x20>
  404485:	add    rsp,0x8
  404489:	jmp    403130 <free@plt>
  40448e:	xchg   ax,ax
  404490:	add    rsp,0x8
  404494:	ret    
  404495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004044a0 <table_remove_column@@Base>:
  4044a0:	endbr64 
  4044a4:	push   r15
  4044a6:	push   r14
  4044a8:	push   r13
  4044aa:	push   r12
  4044ac:	push   rbp
  4044ad:	mov    ebp,esi
  4044af:	push   rbx
  4044b0:	mov    rbx,rdi
  4044b3:	sub    rsp,0x18
  4044b7:	call   404470 <table_column_destroy@@Base>
  4044bc:	mov    rdi,rbx
  4044bf:	call   4042b0 <table_get_column_length@@Base>
  4044c4:	lea    r12d,[rax-0x1]
  4044c8:	mov    r13d,eax
  4044cb:	cmp    ebp,r12d
  4044ce:	jge    40451c <table_remove_column@@Base+0x7c>
  4044d0:	mov    edx,r13d
  4044d3:	sub    edx,ebp
  4044d5:	movsxd rcx,ebp
  4044d8:	sub    edx,0x2
  4044db:	add    rdx,rcx
  4044de:	lea    rax,[rcx+rcx*2+0x3]
  4044e3:	lea    rdx,[rdx+rdx*2]
  4044e7:	shl    rax,0x3
  4044eb:	lea    rsi,[rdx*8+0x30]
  4044f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4044f8:	mov    rdx,QWORD PTR [rbx]
  4044fb:	lea    rcx,[rdx+rax*1-0x18]
  404500:	add    rdx,rax
  404503:	vmovdqu xmm0,XMMWORD PTR [rdx]
  404507:	add    rax,0x18
  40450b:	vmovups XMMWORD PTR [rcx],xmm0
  40450f:	mov    rdx,QWORD PTR [rdx+0x10]
  404513:	mov    QWORD PTR [rcx+0x10],rdx
  404517:	cmp    rax,rsi
  40451a:	jne    4044f8 <table_remove_column@@Base+0x58>
  40451c:	mov    rdi,rbx
  40451f:	call   405190 <table_get_row_length@@Base>
  404524:	mov    r14d,eax
  404527:	test   eax,eax
  404529:	jle    404595 <table_remove_column@@Base+0xf5>
  40452b:	movsxd rax,ebp
  40452e:	sub    r13d,ebp
  404531:	lea    rcx,[rax*8+0x8]
  404539:	lea    edx,[r13-0x2]
  40453d:	mov    QWORD PTR [rsp+0x8],rcx
  404542:	lea    r13,[rax+rdx*1+0x2]
  404547:	shl    r13,0x3
  40454b:	xor    r15d,r15d
  40454e:	xchg   ax,ax
  404550:	mov    esi,r15d
  404553:	mov    rdi,rbx
  404556:	mov    edx,ebp
  404558:	call   406c40 <table_cell_destroy@@Base>
  40455d:	mov    esi,r15d
  404560:	mov    rdi,rbx
  404563:	call   4051a0 <table_get_row_ptr@@Base>
  404568:	cmp    ebp,r12d
  40456b:	jge    40458d <table_remove_column@@Base+0xed>
  40456d:	mov    rdx,QWORD PTR [rsp+0x8]
  404572:	nop    WORD PTR [rax+rax*1+0x0]
  404578:	mov    rsi,QWORD PTR [rax]
  40457b:	mov    rdi,QWORD PTR [rsi+rdx*1]
  40457f:	mov    QWORD PTR [rsi+rdx*1-0x8],rdi
  404584:	add    rdx,0x8
  404588:	cmp    r13,rdx
  40458b:	jne    404578 <table_remove_column@@Base+0xd8>
  40458d:	inc    r15d
  404590:	cmp    r14d,r15d
  404593:	jne    404550 <table_remove_column@@Base+0xb0>
  404595:	dec    DWORD PTR [rbx+0x8]
  404598:	mov    rdi,rbx
  40459b:	call   4042b0 <table_get_column_length@@Base>
  4045a0:	mov    rcx,QWORD PTR [rbx+0x10]
  4045a4:	cdqe   
  4045a6:	xor    edx,edx
  4045a8:	div    rcx
  4045ab:	test   rdx,rdx
  4045ae:	je     4045d8 <table_remove_column@@Base+0x138>
  4045b0:	mov    edx,ebp
  4045b2:	mov    rdi,rbx
  4045b5:	mov    ecx,0x10
  4045ba:	mov    esi,0xffffffff
  4045bf:	call   404240 <table_notify@@Base>
  4045c4:	add    rsp,0x18
  4045c8:	pop    rbx
  4045c9:	pop    rbp
  4045ca:	pop    r12
  4045cc:	pop    r13
  4045ce:	pop    r14
  4045d0:	xor    eax,eax
  4045d2:	pop    r15
  4045d4:	ret    
  4045d5:	nop    DWORD PTR [rax]
  4045d8:	mov    rax,QWORD PTR [rbx+0x18]
  4045dc:	mov    rdi,QWORD PTR [rbx]
  4045df:	sub    rax,rcx
  4045e2:	mov    QWORD PTR [rbx+0x18],rax
  4045e6:	lea    rsi,[rax+rax*2]
  4045ea:	shl    rsi,0x3
  4045ee:	call   4031e0 <realloc@plt>
  4045f3:	mov    QWORD PTR [rbx],rax
  4045f6:	mov    rdi,rbx
  4045f9:	call   405190 <table_get_row_length@@Base>
  4045fe:	mov    r14d,eax
  404601:	test   eax,eax
  404603:	jle    4045b0 <table_remove_column@@Base+0x110>
  404605:	xor    r12d,r12d
  404608:	nop    DWORD PTR [rax+rax*1+0x0]
  404610:	mov    esi,r12d
  404613:	mov    rdi,rbx
  404616:	call   4051a0 <table_get_row_ptr@@Base>
  40461b:	mov    r13,rax
  40461e:	mov    rax,QWORD PTR [rbx+0x18]
  404622:	mov    rdi,QWORD PTR [r13+0x0]
  404626:	lea    rsi,[rax*8+0x0]
  40462e:	call   4031e0 <realloc@plt>
  404633:	inc    r12d
  404636:	mov    QWORD PTR [r13+0x0],rax
  40463a:	cmp    r14d,r12d
  40463d:	jne    404610 <table_remove_column@@Base+0x170>
  40463f:	jmp    4045b0 <table_remove_column@@Base+0x110>
  404644:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40464f:	nop

0000000000404650 <table_get_column_data_type@@Base>:
  404650:	endbr64 
  404654:	sub    rsp,0x8
  404658:	call   4042c0 <table_get_col_ptr@@Base>
  40465d:	mov    eax,DWORD PTR [rax+0x8]
  404660:	add    rsp,0x8
  404664:	ret    
  404665:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404670 <table_get_column_name@@Base>:
  404670:	endbr64 
  404674:	sub    rsp,0x8
  404678:	call   4042c0 <table_get_col_ptr@@Base>
  40467d:	mov    rax,QWORD PTR [rax]
  404680:	add    rsp,0x8
  404684:	ret    
  404685:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404690 <table_get_column@@Base>:
  404690:	endbr64 
  404694:	push   r13
  404696:	mov    r13,rsi
  404699:	push   r12
  40469b:	push   rbp
  40469c:	mov    rbp,rdi
  40469f:	push   rbx
  4046a0:	sub    rsp,0x8
  4046a4:	call   4042b0 <table_get_column_length@@Base>
  4046a9:	test   eax,eax
  4046ab:	jle    4046e8 <table_get_column@@Base+0x58>
  4046ad:	mov    r12d,eax
  4046b0:	xor    ebx,ebx
  4046b2:	jmp    4046bf <table_get_column@@Base+0x2f>
  4046b4:	nop    DWORD PTR [rax+0x0]
  4046b8:	inc    ebx
  4046ba:	cmp    r12d,ebx
  4046bd:	je     404700 <table_get_column@@Base+0x70>
  4046bf:	mov    esi,ebx
  4046c1:	mov    rdi,rbp
  4046c4:	call   404670 <table_get_column_name@@Base>
  4046c9:	mov    rdi,rax
  4046cc:	mov    rsi,r13
  4046cf:	call   4031a0 <strcmp@plt>
  4046d4:	test   eax,eax
  4046d6:	jne    4046b8 <table_get_column@@Base+0x28>
  4046d8:	add    rsp,0x8
  4046dc:	mov    eax,ebx
  4046de:	pop    rbx
  4046df:	pop    rbp
  4046e0:	pop    r12
  4046e2:	pop    r13
  4046e4:	ret    
  4046e5:	nop    DWORD PTR [rax]
  4046e8:	sete   bl
  4046eb:	movzx  ebx,bl
  4046ee:	add    rsp,0x8
  4046f2:	neg    ebx
  4046f4:	mov    eax,ebx
  4046f6:	pop    rbx
  4046f7:	pop    rbp
  4046f8:	pop    r12
  4046fa:	pop    r13
  4046fc:	ret    
  4046fd:	nop    DWORD PTR [rax]
  404700:	add    rsp,0x8
  404704:	mov    ebx,0xffffffff
  404709:	mov    eax,ebx
  40470b:	pop    rbx
  40470c:	pop    rbp
  40470d:	pop    r12
  40470f:	pop    r13
  404711:	ret    
  404712:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40471d:	nop    DWORD PTR [rax]

0000000000404720 <table_get_column_compare_function@@Base>:
  404720:	endbr64 
  404724:	sub    rsp,0x8
  404728:	call   4042c0 <table_get_col_ptr@@Base>
  40472d:	mov    rax,QWORD PTR [rax+0x10]
  404731:	add    rsp,0x8
  404735:	ret    
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404740 <table_set_column_compare_function@@Base>:
  404740:	endbr64 
  404744:	push   rbx
  404745:	mov    rbx,rdx
  404748:	call   4042c0 <table_get_col_ptr@@Base>
  40474d:	mov    QWORD PTR [rax+0x10],rbx
  404751:	pop    rbx
  404752:	ret    
  404753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40475d:	nop    DWORD PTR [rax]

0000000000404760 <table_compare_ptr@@Base>:
  404760:	endbr64 
  404764:	cmp    rdi,rsi
  404767:	sbb    eax,eax
  404769:	mov    edx,0x1
  40476e:	cmp    rdi,rsi
  404771:	cmova  eax,edx
  404774:	ret    
  404775:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404780 <table_compare_string@@Base>:
  404780:	endbr64 
  404784:	test   rdi,rdi
  404787:	je     404798 <table_compare_string@@Base+0x18>
  404789:	test   rsi,rsi
  40478c:	je     4047a8 <table_compare_string@@Base+0x28>
  40478e:	jmp    4031a0 <strcmp@plt>
  404793:	nop    DWORD PTR [rax+rax*1+0x0]
  404798:	xor    eax,eax
  40479a:	test   rsi,rsi
  40479d:	setne  al
  4047a0:	neg    eax
  4047a2:	ret    
  4047a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4047a8:	mov    eax,0x1
  4047ad:	ret    
  4047ae:	xchg   ax,ax

00000000004047b0 <table_compare_bool@@Base>:
  4047b0:	endbr64 
  4047b4:	test   rdi,rdi
  4047b7:	je     4047d8 <table_compare_bool@@Base+0x28>
  4047b9:	mov    eax,0x1
  4047be:	test   rsi,rsi
  4047c1:	je     4047d0 <table_compare_bool@@Base+0x20>
  4047c3:	movzx  edx,BYTE PTR [rsi]
  4047c6:	cmp    BYTE PTR [rdi],dl
  4047c8:	ja     4047d0 <table_compare_bool@@Base+0x20>
  4047ca:	sbb    eax,eax
  4047cc:	ret    
  4047cd:	nop    DWORD PTR [rax]
  4047d0:	ret    
  4047d1:	nop    DWORD PTR [rax+0x0]
  4047d8:	xor    eax,eax
  4047da:	test   rsi,rsi
  4047dd:	setne  al
  4047e0:	neg    eax
  4047e2:	ret    
  4047e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4047ee:	xchg   ax,ax

00000000004047f0 <table_compare_int32@@Base>:
  4047f0:	endbr64 
  4047f4:	test   rdi,rdi
  4047f7:	je     404820 <table_compare_int32@@Base+0x30>
  4047f9:	mov    eax,0x1
  4047fe:	test   rsi,rsi
  404801:	je     404818 <table_compare_int32@@Base+0x28>
  404803:	mov    edx,DWORD PTR [rsi]
  404805:	cmp    DWORD PTR [rdi],edx
  404807:	jg     404818 <table_compare_int32@@Base+0x28>
  404809:	setl   al
  40480c:	movzx  eax,al
  40480f:	neg    eax
  404811:	ret    
  404812:	nop    WORD PTR [rax+rax*1+0x0]
  404818:	ret    
  404819:	nop    DWORD PTR [rax+0x0]
  404820:	xor    eax,eax
  404822:	test   rsi,rsi
  404825:	setne  al
  404828:	neg    eax
  40482a:	ret    
  40482b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404830 <table_compare_uint32@@Base>:
  404830:	endbr64 
  404834:	test   rdi,rdi
  404837:	je     404858 <table_compare_uint32@@Base+0x28>
  404839:	mov    eax,0x1
  40483e:	test   rsi,rsi
  404841:	je     404850 <table_compare_uint32@@Base+0x20>
  404843:	mov    edx,DWORD PTR [rsi]
  404845:	cmp    DWORD PTR [rdi],edx
  404847:	ja     404850 <table_compare_uint32@@Base+0x20>
  404849:	sbb    eax,eax
  40484b:	ret    
  40484c:	nop    DWORD PTR [rax+0x0]
  404850:	ret    
  404851:	nop    DWORD PTR [rax+0x0]
  404858:	xor    eax,eax
  40485a:	test   rsi,rsi
  40485d:	setne  al
  404860:	neg    eax
  404862:	ret    
  404863:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40486e:	xchg   ax,ax

0000000000404870 <table_compare_char@@Base>:
  404870:	endbr64 
  404874:	test   rdi,rdi
  404877:	je     4048a0 <table_compare_char@@Base+0x30>
  404879:	mov    eax,0x1
  40487e:	test   rsi,rsi
  404881:	je     404898 <table_compare_char@@Base+0x28>
  404883:	movzx  edx,BYTE PTR [rsi]
  404886:	cmp    BYTE PTR [rdi],dl
  404888:	jg     404898 <table_compare_char@@Base+0x28>
  40488a:	setl   al
  40488d:	movzx  eax,al
  404890:	neg    eax
  404892:	ret    
  404893:	nop    DWORD PTR [rax+rax*1+0x0]
  404898:	ret    
  404899:	nop    DWORD PTR [rax+0x0]
  4048a0:	xor    eax,eax
  4048a2:	test   rsi,rsi
  4048a5:	setne  al
  4048a8:	neg    eax
  4048aa:	ret    
  4048ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004048b0 <table_compare_uint8@@Base>:
  4048b0:	endbr64 
  4048b4:	test   rdi,rdi
  4048b7:	je     4048d8 <table_compare_uint8@@Base+0x28>
  4048b9:	mov    eax,0x1
  4048be:	test   rsi,rsi
  4048c1:	je     4048d0 <table_compare_uint8@@Base+0x20>
  4048c3:	movzx  edx,BYTE PTR [rsi]
  4048c6:	cmp    BYTE PTR [rdi],dl
  4048c8:	ja     4048d0 <table_compare_uint8@@Base+0x20>
  4048ca:	sbb    eax,eax
  4048cc:	ret    
  4048cd:	nop    DWORD PTR [rax]
  4048d0:	ret    
  4048d1:	nop    DWORD PTR [rax+0x0]
  4048d8:	xor    eax,eax
  4048da:	test   rsi,rsi
  4048dd:	setne  al
  4048e0:	neg    eax
  4048e2:	ret    
  4048e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048ee:	xchg   ax,ax

00000000004048f0 <table_compare_short@@Base>:
  4048f0:	endbr64 
  4048f4:	test   rdi,rdi
  4048f7:	je     404920 <table_compare_short@@Base+0x30>
  4048f9:	mov    eax,0x1
  4048fe:	test   rsi,rsi
  404901:	je     404918 <table_compare_short@@Base+0x28>
  404903:	movzx  edx,WORD PTR [rsi]
  404906:	cmp    WORD PTR [rdi],dx
  404909:	jg     404918 <table_compare_short@@Base+0x28>
  40490b:	setl   al
  40490e:	movzx  eax,al
  404911:	neg    eax
  404913:	ret    
  404914:	nop    DWORD PTR [rax+0x0]
  404918:	ret    
  404919:	nop    DWORD PTR [rax+0x0]
  404920:	xor    eax,eax
  404922:	test   rsi,rsi
  404925:	setne  al
  404928:	neg    eax
  40492a:	ret    
  40492b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404930 <table_compare_ushort@@Base>:
  404930:	endbr64 
  404934:	test   rdi,rdi
  404937:	je     404958 <table_compare_ushort@@Base+0x28>
  404939:	mov    eax,0x1
  40493e:	test   rsi,rsi
  404941:	je     404950 <table_compare_ushort@@Base+0x20>
  404943:	movzx  edx,WORD PTR [rsi]
  404946:	cmp    WORD PTR [rdi],dx
  404949:	ja     404950 <table_compare_ushort@@Base+0x20>
  40494b:	sbb    eax,eax
  40494d:	ret    
  40494e:	xchg   ax,ax
  404950:	ret    
  404951:	nop    DWORD PTR [rax+0x0]
  404958:	xor    eax,eax
  40495a:	test   rsi,rsi
  40495d:	setne  al
  404960:	neg    eax
  404962:	ret    
  404963:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40496e:	xchg   ax,ax

0000000000404970 <table_compare_long@@Base>:
  404970:	endbr64 
  404974:	test   rdi,rdi
  404977:	je     4049a0 <table_compare_long@@Base+0x30>
  404979:	mov    eax,0x1
  40497e:	test   rsi,rsi
  404981:	je     404998 <table_compare_long@@Base+0x28>
  404983:	mov    rdx,QWORD PTR [rsi]
  404986:	cmp    QWORD PTR [rdi],rdx
  404989:	jg     404998 <table_compare_long@@Base+0x28>
  40498b:	setl   al
  40498e:	movzx  eax,al
  404991:	neg    eax
  404993:	ret    
  404994:	nop    DWORD PTR [rax+0x0]
  404998:	ret    
  404999:	nop    DWORD PTR [rax+0x0]
  4049a0:	xor    eax,eax
  4049a2:	test   rsi,rsi
  4049a5:	setne  al
  4049a8:	neg    eax
  4049aa:	ret    
  4049ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004049b0 <table_compare_ullong@@Base>:
  4049b0:	endbr64 
  4049b4:	test   rdi,rdi
  4049b7:	je     4049d8 <table_compare_ullong@@Base+0x28>
  4049b9:	mov    eax,0x1
  4049be:	test   rsi,rsi
  4049c1:	je     4049d0 <table_compare_ullong@@Base+0x20>
  4049c3:	mov    rdx,QWORD PTR [rsi]
  4049c6:	cmp    QWORD PTR [rdi],rdx
  4049c9:	ja     4049d0 <table_compare_ullong@@Base+0x20>
  4049cb:	sbb    eax,eax
  4049cd:	ret    
  4049ce:	xchg   ax,ax
  4049d0:	ret    
  4049d1:	nop    DWORD PTR [rax+0x0]
  4049d8:	xor    eax,eax
  4049da:	test   rsi,rsi
  4049dd:	setne  al
  4049e0:	neg    eax
  4049e2:	ret    
  4049e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4049ee:	xchg   ax,ax

00000000004049f0 <table_compare_llong@@Base>:
  4049f0:	endbr64 
  4049f4:	test   rdi,rdi
  4049f7:	je     404a20 <table_compare_llong@@Base+0x30>
  4049f9:	mov    eax,0x1
  4049fe:	test   rsi,rsi
  404a01:	je     404a18 <table_compare_llong@@Base+0x28>
  404a03:	mov    rdx,QWORD PTR [rsi]
  404a06:	cmp    QWORD PTR [rdi],rdx
  404a09:	jg     404a18 <table_compare_llong@@Base+0x28>
  404a0b:	setl   al
  404a0e:	movzx  eax,al
  404a11:	neg    eax
  404a13:	ret    
  404a14:	nop    DWORD PTR [rax+0x0]
  404a18:	ret    
  404a19:	nop    DWORD PTR [rax+0x0]
  404a20:	xor    eax,eax
  404a22:	test   rsi,rsi
  404a25:	setne  al
  404a28:	neg    eax
  404a2a:	ret    
  404a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a30 <table_compare_float@@Base>:
  404a30:	endbr64 
  404a34:	test   rdi,rdi
  404a37:	je     404a70 <table_compare_float@@Base+0x40>
  404a39:	test   rsi,rsi
  404a3c:	je     404a60 <table_compare_float@@Base+0x30>
  404a3e:	vmovss xmm0,DWORD PTR [rdi]
  404a42:	vmovss xmm1,DWORD PTR [rsi]
  404a46:	mov    eax,0x1
  404a4b:	vcomiss xmm0,xmm1
  404a4f:	ja     404a65 <table_compare_float@@Base+0x35>
  404a51:	xor    eax,eax
  404a53:	vcomiss xmm1,xmm0
  404a57:	seta   al
  404a5a:	neg    eax
  404a5c:	ret    
  404a5d:	nop    DWORD PTR [rax]
  404a60:	mov    eax,0x1
  404a65:	ret    
  404a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a70:	xor    eax,eax
  404a72:	test   rsi,rsi
  404a75:	setne  al
  404a78:	neg    eax
  404a7a:	ret    
  404a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a80 <table_compare_double@@Base>:
  404a80:	endbr64 
  404a84:	test   rdi,rdi
  404a87:	je     404ac0 <table_compare_double@@Base+0x40>
  404a89:	test   rsi,rsi
  404a8c:	je     404ab0 <table_compare_double@@Base+0x30>
  404a8e:	vmovsd xmm0,QWORD PTR [rdi]
  404a92:	vmovsd xmm1,QWORD PTR [rsi]
  404a96:	mov    eax,0x1
  404a9b:	vcomisd xmm0,xmm1
  404a9f:	ja     404ab5 <table_compare_double@@Base+0x35>
  404aa1:	xor    eax,eax
  404aa3:	vcomisd xmm1,xmm0
  404aa7:	seta   al
  404aaa:	neg    eax
  404aac:	ret    
  404aad:	nop    DWORD PTR [rax]
  404ab0:	mov    eax,0x1
  404ab5:	ret    
  404ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ac0:	xor    eax,eax
  404ac2:	test   rsi,rsi
  404ac5:	setne  al
  404ac8:	neg    eax
  404aca:	ret    
  404acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ad0 <table_compare_ldouble@@Base>:
  404ad0:	endbr64 
  404ad4:	test   rdi,rdi
  404ad7:	je     404b18 <table_compare_ldouble@@Base+0x48>
  404ad9:	test   rsi,rsi
  404adc:	je     404b00 <table_compare_ldouble@@Base+0x30>
  404ade:	fld    TBYTE PTR [rsi]
  404ae0:	fld    TBYTE PTR [rdi]
  404ae2:	mov    eax,0x1
  404ae7:	fcomi  st,st(1)
  404ae9:	ja     404b10 <table_compare_ldouble@@Base+0x40>
  404aeb:	fxch   st(1)
  404aed:	xor    eax,eax
  404aef:	fcomip st,st(1)
  404af1:	fstp   st(0)
  404af3:	seta   al
  404af6:	neg    eax
  404af8:	ret    
  404af9:	nop    DWORD PTR [rax+0x0]
  404b00:	mov    eax,0x1
  404b05:	jmp    404b14 <table_compare_ldouble@@Base+0x44>
  404b07:	nop    WORD PTR [rax+rax*1+0x0]
  404b10:	fstp   st(0)
  404b12:	fstp   st(0)
  404b14:	ret    
  404b15:	nop    DWORD PTR [rax]
  404b18:	xor    eax,eax
  404b1a:	test   rsi,rsi
  404b1d:	setne  al
  404b20:	neg    eax
  404b22:	ret    
  404b23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b2e:	xchg   ax,ax

0000000000404b30 <table_compare_uchar@@Base>:
  404b30:	endbr64 
  404b34:	test   rdi,rdi
  404b37:	je     404b58 <table_compare_uchar@@Base+0x28>
  404b39:	mov    eax,0x1
  404b3e:	test   rsi,rsi
  404b41:	je     404b50 <table_compare_uchar@@Base+0x20>
  404b43:	movzx  edx,BYTE PTR [rsi]
  404b46:	cmp    BYTE PTR [rdi],dl
  404b48:	ja     404b50 <table_compare_uchar@@Base+0x20>
  404b4a:	sbb    eax,eax
  404b4c:	ret    
  404b4d:	nop    DWORD PTR [rax]
  404b50:	ret    
  404b51:	nop    DWORD PTR [rax+0x0]
  404b58:	xor    eax,eax
  404b5a:	test   rsi,rsi
  404b5d:	setne  al
  404b60:	neg    eax
  404b62:	ret    
  404b63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b6e:	xchg   ax,ax

0000000000404b70 <table_compare_int@@Base>:
  404b70:	endbr64 
  404b74:	test   rdi,rdi
  404b77:	je     404ba0 <table_compare_int@@Base+0x30>
  404b79:	mov    eax,0x1
  404b7e:	test   rsi,rsi
  404b81:	je     404b98 <table_compare_int@@Base+0x28>
  404b83:	mov    edx,DWORD PTR [rsi]
  404b85:	cmp    DWORD PTR [rdi],edx
  404b87:	jg     404b98 <table_compare_int@@Base+0x28>
  404b89:	setl   al
  404b8c:	movzx  eax,al
  404b8f:	neg    eax
  404b91:	ret    
  404b92:	nop    WORD PTR [rax+rax*1+0x0]
  404b98:	ret    
  404b99:	nop    DWORD PTR [rax+0x0]
  404ba0:	xor    eax,eax
  404ba2:	test   rsi,rsi
  404ba5:	setne  al
  404ba8:	neg    eax
  404baa:	ret    
  404bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404bb0 <table_compare_uint@@Base>:
  404bb0:	endbr64 
  404bb4:	test   rdi,rdi
  404bb7:	je     404bd8 <table_compare_uint@@Base+0x28>
  404bb9:	mov    eax,0x1
  404bbe:	test   rsi,rsi
  404bc1:	je     404bd0 <table_compare_uint@@Base+0x20>
  404bc3:	mov    edx,DWORD PTR [rsi]
  404bc5:	cmp    DWORD PTR [rdi],edx
  404bc7:	ja     404bd0 <table_compare_uint@@Base+0x20>
  404bc9:	sbb    eax,eax
  404bcb:	ret    
  404bcc:	nop    DWORD PTR [rax+0x0]
  404bd0:	ret    
  404bd1:	nop    DWORD PTR [rax+0x0]
  404bd8:	xor    eax,eax
  404bda:	test   rsi,rsi
  404bdd:	setne  al
  404be0:	neg    eax
  404be2:	ret    
  404be3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404bee:	xchg   ax,ax

0000000000404bf0 <table_compare_int8@@Base>:
  404bf0:	endbr64 
  404bf4:	test   rdi,rdi
  404bf7:	je     404c20 <table_compare_int8@@Base+0x30>
  404bf9:	mov    eax,0x1
  404bfe:	test   rsi,rsi
  404c01:	je     404c18 <table_compare_int8@@Base+0x28>
  404c03:	movzx  edx,BYTE PTR [rsi]
  404c06:	cmp    BYTE PTR [rdi],dl
  404c08:	jg     404c18 <table_compare_int8@@Base+0x28>
  404c0a:	setl   al
  404c0d:	movzx  eax,al
  404c10:	neg    eax
  404c12:	ret    
  404c13:	nop    DWORD PTR [rax+rax*1+0x0]
  404c18:	ret    
  404c19:	nop    DWORD PTR [rax+0x0]
  404c20:	xor    eax,eax
  404c22:	test   rsi,rsi
  404c25:	setne  al
  404c28:	neg    eax
  404c2a:	ret    
  404c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c30 <table_compare_int16@@Base>:
  404c30:	endbr64 
  404c34:	test   rdi,rdi
  404c37:	je     404c60 <table_compare_int16@@Base+0x30>
  404c39:	mov    eax,0x1
  404c3e:	test   rsi,rsi
  404c41:	je     404c58 <table_compare_int16@@Base+0x28>
  404c43:	movzx  edx,WORD PTR [rsi]
  404c46:	cmp    WORD PTR [rdi],dx
  404c49:	jg     404c58 <table_compare_int16@@Base+0x28>
  404c4b:	setl   al
  404c4e:	movzx  eax,al
  404c51:	neg    eax
  404c53:	ret    
  404c54:	nop    DWORD PTR [rax+0x0]
  404c58:	ret    
  404c59:	nop    DWORD PTR [rax+0x0]
  404c60:	xor    eax,eax
  404c62:	test   rsi,rsi
  404c65:	setne  al
  404c68:	neg    eax
  404c6a:	ret    
  404c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c70 <table_compare_uint16@@Base>:
  404c70:	endbr64 
  404c74:	test   rdi,rdi
  404c77:	je     404c98 <table_compare_uint16@@Base+0x28>
  404c79:	mov    eax,0x1
  404c7e:	test   rsi,rsi
  404c81:	je     404c90 <table_compare_uint16@@Base+0x20>
  404c83:	movzx  edx,WORD PTR [rsi]
  404c86:	cmp    WORD PTR [rdi],dx
  404c89:	ja     404c90 <table_compare_uint16@@Base+0x20>
  404c8b:	sbb    eax,eax
  404c8d:	ret    
  404c8e:	xchg   ax,ax
  404c90:	ret    
  404c91:	nop    DWORD PTR [rax+0x0]
  404c98:	xor    eax,eax
  404c9a:	test   rsi,rsi
  404c9d:	setne  al
  404ca0:	neg    eax
  404ca2:	ret    
  404ca3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404cae:	xchg   ax,ax

0000000000404cb0 <table_compare_int64@@Base>:
  404cb0:	endbr64 
  404cb4:	test   rdi,rdi
  404cb7:	je     404ce0 <table_compare_int64@@Base+0x30>
  404cb9:	mov    eax,0x1
  404cbe:	test   rsi,rsi
  404cc1:	je     404cd8 <table_compare_int64@@Base+0x28>
  404cc3:	mov    rdx,QWORD PTR [rsi]
  404cc6:	cmp    QWORD PTR [rdi],rdx
  404cc9:	jg     404cd8 <table_compare_int64@@Base+0x28>
  404ccb:	setl   al
  404cce:	movzx  eax,al
  404cd1:	neg    eax
  404cd3:	ret    
  404cd4:	nop    DWORD PTR [rax+0x0]
  404cd8:	ret    
  404cd9:	nop    DWORD PTR [rax+0x0]
  404ce0:	xor    eax,eax
  404ce2:	test   rsi,rsi
  404ce5:	setne  al
  404ce8:	neg    eax
  404cea:	ret    
  404ceb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404cf0 <table_compare_uint64@@Base>:
  404cf0:	endbr64 
  404cf4:	test   rdi,rdi
  404cf7:	je     404d18 <table_compare_uint64@@Base+0x28>
  404cf9:	mov    eax,0x1
  404cfe:	test   rsi,rsi
  404d01:	je     404d10 <table_compare_uint64@@Base+0x20>
  404d03:	mov    rdx,QWORD PTR [rsi]
  404d06:	cmp    QWORD PTR [rdi],rdx
  404d09:	ja     404d10 <table_compare_uint64@@Base+0x20>
  404d0b:	sbb    eax,eax
  404d0d:	ret    
  404d0e:	xchg   ax,ax
  404d10:	ret    
  404d11:	nop    DWORD PTR [rax+0x0]
  404d18:	xor    eax,eax
  404d1a:	test   rsi,rsi
  404d1d:	setne  al
  404d20:	neg    eax
  404d22:	ret    
  404d23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d2e:	xchg   ax,ax

0000000000404d30 <table_compare_ulong@@Base>:
  404d30:	endbr64 
  404d34:	test   rdi,rdi
  404d37:	je     404d58 <table_compare_ulong@@Base+0x28>
  404d39:	mov    eax,0x1
  404d3e:	test   rsi,rsi
  404d41:	je     404d50 <table_compare_ulong@@Base+0x20>
  404d43:	mov    rdx,QWORD PTR [rsi]
  404d46:	cmp    QWORD PTR [rdi],rdx
  404d49:	ja     404d50 <table_compare_ulong@@Base+0x20>
  404d4b:	sbb    eax,eax
  404d4d:	ret    
  404d4e:	xchg   ax,ax
  404d50:	ret    
  404d51:	nop    DWORD PTR [rax+0x0]
  404d58:	xor    eax,eax
  404d5a:	test   rsi,rsi
  404d5d:	setne  al
  404d60:	neg    eax
  404d62:	ret    
  404d63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d6e:	xchg   ax,ax

0000000000404d70 <table_get_default_compare_function_for_data_type@@Base>:
  404d70:	endbr64 
  404d74:	cmp    edi,0x17
  404d77:	ja     404f08 <table_get_default_compare_function_for_data_type@@Base+0x198>
  404d7d:	lea    rdx,[rip+0x2400]        # 407184 <_IO_stdin_used@@Base+0x184>
  404d84:	mov    edi,edi
  404d86:	movsxd rax,DWORD PTR [rdx+rdi*4]
  404d8a:	add    rax,rdx
  404d8d:	notrack jmp rax
  404d90:	mov    rax,0x4047b0
  404d97:	ret    
  404d98:	nop    DWORD PTR [rax+rax*1+0x0]
  404da0:	mov    rax,0x404780
  404da7:	ret    
  404da8:	nop    DWORD PTR [rax+rax*1+0x0]
  404db0:	mov    rax,0x404b30
  404db7:	ret    
  404db8:	nop    DWORD PTR [rax+rax*1+0x0]
  404dc0:	mov    rax,0x404870
  404dc7:	ret    
  404dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  404dd0:	mov    rax,0x404ad0
  404dd7:	ret    
  404dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  404de0:	mov    rax,0x404a80
  404de7:	ret    
  404de8:	nop    DWORD PTR [rax+rax*1+0x0]
  404df0:	mov    rax,0x404a30
  404df7:	ret    
  404df8:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	mov    rax,0x4049b0
  404e07:	ret    
  404e08:	nop    DWORD PTR [rax+rax*1+0x0]
  404e10:	mov    rax,0x4049f0
  404e17:	ret    
  404e18:	nop    DWORD PTR [rax+rax*1+0x0]
  404e20:	mov    rax,0x404d30
  404e27:	ret    
  404e28:	nop    DWORD PTR [rax+rax*1+0x0]
  404e30:	mov    rax,0x404970
  404e37:	ret    
  404e38:	nop    DWORD PTR [rax+rax*1+0x0]
  404e40:	mov    rax,0x404930
  404e47:	ret    
  404e48:	nop    DWORD PTR [rax+rax*1+0x0]
  404e50:	mov    rax,0x4048f0
  404e57:	ret    
  404e58:	nop    DWORD PTR [rax+rax*1+0x0]
  404e60:	mov    rax,0x404cf0
  404e67:	ret    
  404e68:	nop    DWORD PTR [rax+rax*1+0x0]
  404e70:	mov    rax,0x404cb0
  404e77:	ret    
  404e78:	nop    DWORD PTR [rax+rax*1+0x0]
  404e80:	mov    rax,0x404830
  404e87:	ret    
  404e88:	nop    DWORD PTR [rax+rax*1+0x0]
  404e90:	mov    rax,0x4047f0
  404e97:	ret    
  404e98:	nop    DWORD PTR [rax+rax*1+0x0]
  404ea0:	mov    rax,0x404c70
  404ea7:	ret    
  404ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  404eb0:	mov    rax,0x404c30
  404eb7:	ret    
  404eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ec0:	mov    rax,0x4048b0
  404ec7:	ret    
  404ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ed0:	mov    rax,0x404bf0
  404ed7:	ret    
  404ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ee0:	mov    rax,0x404bb0
  404ee7:	ret    
  404ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ef0:	mov    rax,0x404b70
  404ef7:	ret    
  404ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  404f00:	mov    rax,0x404760
  404f07:	ret    
  404f08:	xor    eax,eax
  404f0a:	ret    
  404f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f10 <table_get@@Base>:
  404f10:	endbr64 
  404f14:	sub    rsp,0x8
  404f18:	call   406c00 <table_get_cell_ptr@@Base>
  404f1d:	mov    rax,QWORD PTR [rax]
  404f20:	add    rsp,0x8
  404f24:	ret    
  404f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404f30 <table_get_bool@@Base>:
  404f30:	endbr64 
  404f34:	sub    rsp,0x8
  404f38:	call   404f10 <table_get@@Base>
  404f3d:	movzx  eax,BYTE PTR [rax]
  404f40:	add    rsp,0x8
  404f44:	ret    
  404f45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404f50 <table_get_int@@Base>:
  404f50:	endbr64 
  404f54:	sub    rsp,0x8
  404f58:	call   404f10 <table_get@@Base>
  404f5d:	mov    eax,DWORD PTR [rax]
  404f5f:	add    rsp,0x8
  404f63:	ret    
  404f64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f6f:	nop

0000000000404f70 <table_get_uint@@Base>:
  404f70:	endbr64 
  404f74:	sub    rsp,0x8
  404f78:	call   404f10 <table_get@@Base>
  404f7d:	mov    eax,DWORD PTR [rax]
  404f7f:	add    rsp,0x8
  404f83:	ret    
  404f84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f8f:	nop

0000000000404f90 <table_get_int8@@Base>:
  404f90:	endbr64 
  404f94:	sub    rsp,0x8
  404f98:	call   404f10 <table_get@@Base>
  404f9d:	movzx  eax,BYTE PTR [rax]
  404fa0:	add    rsp,0x8
  404fa4:	ret    
  404fa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404fb0 <table_get_uint8@@Base>:
  404fb0:	endbr64 
  404fb4:	sub    rsp,0x8
  404fb8:	call   404f10 <table_get@@Base>
  404fbd:	movzx  eax,BYTE PTR [rax]
  404fc0:	add    rsp,0x8
  404fc4:	ret    
  404fc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404fd0 <table_get_int16@@Base>:
  404fd0:	endbr64 
  404fd4:	sub    rsp,0x8
  404fd8:	call   404f10 <table_get@@Base>
  404fdd:	movzx  eax,WORD PTR [rax]
  404fe0:	add    rsp,0x8
  404fe4:	ret    
  404fe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404ff0 <table_get_uint16@@Base>:
  404ff0:	endbr64 
  404ff4:	sub    rsp,0x8
  404ff8:	call   404f10 <table_get@@Base>
  404ffd:	movzx  eax,WORD PTR [rax]
  405000:	add    rsp,0x8
  405004:	ret    
  405005:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405010 <table_get_int32@@Base>:
  405010:	endbr64 
  405014:	jmp    404f50 <table_get_int@@Base>
  405019:	nop    DWORD PTR [rax+0x0]

0000000000405020 <table_get_uint32@@Base>:
  405020:	endbr64 
  405024:	jmp    404f70 <table_get_uint@@Base>
  405029:	nop    DWORD PTR [rax+0x0]

0000000000405030 <table_get_int64@@Base>:
  405030:	endbr64 
  405034:	sub    rsp,0x8
  405038:	call   404f10 <table_get@@Base>
  40503d:	mov    rax,QWORD PTR [rax]
  405040:	add    rsp,0x8
  405044:	ret    
  405045:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405050 <table_get_uint64@@Base>:
  405050:	endbr64 
  405054:	sub    rsp,0x8
  405058:	call   404f10 <table_get@@Base>
  40505d:	mov    rax,QWORD PTR [rax]
  405060:	add    rsp,0x8
  405064:	ret    
  405065:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405070 <table_get_short@@Base>:
  405070:	endbr64 
  405074:	jmp    404fd0 <table_get_int16@@Base>
  405079:	nop    DWORD PTR [rax+0x0]

0000000000405080 <table_get_ushort@@Base>:
  405080:	endbr64 
  405084:	jmp    404ff0 <table_get_uint16@@Base>
  405089:	nop    DWORD PTR [rax+0x0]

0000000000405090 <table_get_long@@Base>:
  405090:	endbr64 
  405094:	jmp    405030 <table_get_int64@@Base>
  405096:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004050a0 <table_get_ulong@@Base>:
  4050a0:	endbr64 
  4050a4:	jmp    405050 <table_get_uint64@@Base>
  4050a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004050b0 <table_get_llong@@Base>:
  4050b0:	endbr64 
  4050b4:	sub    rsp,0x8
  4050b8:	call   404f10 <table_get@@Base>
  4050bd:	mov    rax,QWORD PTR [rax]
  4050c0:	add    rsp,0x8
  4050c4:	ret    
  4050c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004050d0 <table_get_ullong@@Base>:
  4050d0:	endbr64 
  4050d4:	sub    rsp,0x8
  4050d8:	call   404f10 <table_get@@Base>
  4050dd:	mov    rax,QWORD PTR [rax]
  4050e0:	add    rsp,0x8
  4050e4:	ret    
  4050e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004050f0 <table_get_float@@Base>:
  4050f0:	endbr64 
  4050f4:	sub    rsp,0x8
  4050f8:	call   404f10 <table_get@@Base>
  4050fd:	vmovss xmm0,DWORD PTR [rax]
  405101:	add    rsp,0x8
  405105:	ret    
  405106:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405110 <table_get_double@@Base>:
  405110:	endbr64 
  405114:	sub    rsp,0x8
  405118:	call   404f10 <table_get@@Base>
  40511d:	vmovsd xmm0,QWORD PTR [rax]
  405121:	add    rsp,0x8
  405125:	ret    
  405126:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405130 <table_get_ldouble@@Base>:
  405130:	endbr64 
  405134:	sub    rsp,0x8
  405138:	call   404f10 <table_get@@Base>
  40513d:	fld    TBYTE PTR [rax]
  40513f:	add    rsp,0x8
  405143:	ret    
  405144:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40514f:	nop

0000000000405150 <table_get_char@@Base>:
  405150:	endbr64 
  405154:	jmp    404f90 <table_get_int8@@Base>
  405159:	nop    DWORD PTR [rax+0x0]

0000000000405160 <table_get_uchar@@Base>:
  405160:	endbr64 
  405164:	jmp    404fb0 <table_get_uint8@@Base>
  405169:	nop    DWORD PTR [rax+0x0]

0000000000405170 <table_get_string@@Base>:
  405170:	endbr64 
  405174:	jmp    404f10 <table_get@@Base>
  405179:	nop    DWORD PTR [rax+0x0]

0000000000405180 <table_get_ptr@@Base>:
  405180:	endbr64 
  405184:	jmp    404f10 <table_get@@Base>
  405189:	nop    DWORD PTR [rax+0x0]

0000000000405190 <table_get_row_length@@Base>:
  405190:	endbr64 
  405194:	mov    eax,DWORD PTR [rdi+0x28]
  405197:	ret    
  405198:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004051a0 <table_get_row_ptr@@Base>:
  4051a0:	endbr64 
  4051a4:	mov    rax,QWORD PTR [rdi+0x20]
  4051a8:	movsxd rsi,esi
  4051ab:	lea    rax,[rax+rsi*8]
  4051af:	ret    

00000000004051b0 <table_row_init@@Base>:
  4051b0:	endbr64 
  4051b4:	push   rbp
  4051b5:	push   rbx
  4051b6:	mov    rbx,rdi
  4051b9:	sub    rsp,0x8
  4051bd:	call   4051a0 <table_get_row_ptr@@Base>
  4051c2:	mov    rdi,QWORD PTR [rbx+0x18]
  4051c6:	mov    rbp,rax
  4051c9:	shl    rdi,0x3
  4051cd:	call   4031c0 <malloc@plt>
  4051d2:	mov    QWORD PTR [rbp+0x0],rax
  4051d6:	add    rsp,0x8
  4051da:	pop    rbx
  4051db:	pop    rbp
  4051dc:	ret    
  4051dd:	nop    DWORD PTR [rax]

00000000004051e0 <table_add_row@@Base>:
  4051e0:	endbr64 
  4051e4:	push   r13
  4051e6:	push   r12
  4051e8:	push   rbp
  4051e9:	push   rbx
  4051ea:	mov    rbx,rdi
  4051ed:	sub    rsp,0x8
  4051f1:	call   405190 <table_get_row_length@@Base>
  4051f6:	mov    rsi,QWORD PTR [rbx+0x30]
  4051fa:	cdqe   
  4051fc:	xor    edx,edx
  4051fe:	div    rsi
  405201:	test   rdx,rdx
  405204:	je     405278 <table_add_row@@Base+0x98>
  405206:	mov    rdi,rbx
  405209:	call   405190 <table_get_row_length@@Base>
  40520e:	mov    rdi,rbx
  405211:	mov    r12d,eax
  405214:	call   4042b0 <table_get_column_length@@Base>
  405219:	mov    r13d,eax
  40521c:	mov    esi,r12d
  40521f:	mov    rdi,rbx
  405222:	call   4051b0 <table_row_init@@Base>
  405227:	test   r13d,r13d
  40522a:	jle    405244 <table_add_row@@Base+0x64>
  40522c:	xor    ebp,ebp
  40522e:	xchg   ax,ax
  405230:	mov    edx,ebp
  405232:	mov    esi,r12d
  405235:	mov    rdi,rbx
  405238:	inc    ebp
  40523a:	call   406c20 <table_cell_init@@Base>
  40523f:	cmp    r13d,ebp
  405242:	jne    405230 <table_add_row@@Base+0x50>
  405244:	mov    rdi,rbx
  405247:	call   405190 <table_get_row_length@@Base>
  40524c:	mov    esi,eax
  40524e:	mov    edx,0xffffffff
  405253:	mov    rdi,rbx
  405256:	mov    ecx,0x2
  40525b:	call   404240 <table_notify@@Base>
  405260:	mov    eax,DWORD PTR [rbx+0x28]
  405263:	lea    edx,[rax+0x1]
  405266:	mov    DWORD PTR [rbx+0x28],edx
  405269:	add    rsp,0x8
  40526d:	pop    rbx
  40526e:	pop    rbp
  40526f:	pop    r12
  405271:	pop    r13
  405273:	ret    
  405274:	nop    DWORD PTR [rax+0x0]
  405278:	add    rsi,QWORD PTR [rbx+0x38]
  40527c:	mov    QWORD PTR [rbx+0x38],rsi
  405280:	mov    rdi,QWORD PTR [rbx+0x20]
  405284:	shl    rsi,0x3
  405288:	call   4031e0 <realloc@plt>
  40528d:	mov    QWORD PTR [rbx+0x20],rax
  405291:	jmp    405206 <table_add_row@@Base+0x26>
  405296:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004052a0 <table_row_destroy@@Base>:
  4052a0:	endbr64 
  4052a4:	push   r14
  4052a6:	push   r13
  4052a8:	mov    r13d,esi
  4052ab:	push   r12
  4052ad:	push   rbp
  4052ae:	mov    rbp,rdi
  4052b1:	push   rbx
  4052b2:	call   4042b0 <table_get_column_length@@Base>
  4052b7:	mov    esi,r13d
  4052ba:	mov    rdi,rbp
  4052bd:	mov    r12d,eax
  4052c0:	call   4051a0 <table_get_row_ptr@@Base>
  4052c5:	mov    r14,rax
  4052c8:	test   r12d,r12d
  4052cb:	jle    4052e4 <table_row_destroy@@Base+0x44>
  4052cd:	xor    ebx,ebx
  4052cf:	nop
  4052d0:	mov    edx,ebx
  4052d2:	mov    esi,r13d
  4052d5:	mov    rdi,rbp
  4052d8:	inc    ebx
  4052da:	call   406c40 <table_cell_destroy@@Base>
  4052df:	cmp    r12d,ebx
  4052e2:	jne    4052d0 <table_row_destroy@@Base+0x30>
  4052e4:	mov    rdi,QWORD PTR [r14]
  4052e7:	test   rdi,rdi
  4052ea:	je     405300 <table_row_destroy@@Base+0x60>
  4052ec:	pop    rbx
  4052ed:	pop    rbp
  4052ee:	pop    r12
  4052f0:	pop    r13
  4052f2:	pop    r14
  4052f4:	jmp    403130 <free@plt>
  4052f9:	nop    DWORD PTR [rax+0x0]
  405300:	pop    rbx
  405301:	pop    rbp
  405302:	pop    r12
  405304:	pop    r13
  405306:	pop    r14
  405308:	ret    
  405309:	nop    DWORD PTR [rax+0x0]

0000000000405310 <table_remove_row@@Base>:
  405310:	endbr64 
  405314:	push   r14
  405316:	push   r13
  405318:	push   r12
  40531a:	push   rbp
  40531b:	mov    ebp,esi
  40531d:	push   rbx
  40531e:	mov    rbx,rdi
  405321:	call   405190 <table_get_row_length@@Base>
  405326:	mov    rdi,rbx
  405329:	mov    r13d,eax
  40532c:	call   4042b0 <table_get_column_length@@Base>
  405331:	test   eax,eax
  405333:	jle    405372 <table_remove_row@@Base+0x62>
  405335:	mov    r14d,eax
  405338:	xor    r12d,r12d
  40533b:	nop    DWORD PTR [rax+rax*1+0x0]
  405340:	mov    esi,r12d
  405343:	mov    rdi,rbx
  405346:	call   404650 <table_get_column_data_type@@Base>
  40534b:	cmp    eax,0x17
  40534e:	je     40536a <table_remove_row@@Base+0x5a>
  405350:	mov    rdi,rbx
  405353:	mov    edx,r12d
  405356:	mov    esi,ebp
  405358:	call   406c00 <table_get_cell_ptr@@Base>
  40535d:	mov    rdi,QWORD PTR [rax]
  405360:	test   rdi,rdi
  405363:	je     40536a <table_remove_row@@Base+0x5a>
  405365:	call   403130 <free@plt>
  40536a:	inc    r12d
  40536d:	cmp    r14d,r12d
  405370:	jne    405340 <table_remove_row@@Base+0x30>
  405372:	mov    rdi,rbx
  405375:	mov    esi,ebp
  405377:	call   4051a0 <table_get_row_ptr@@Base>
  40537c:	mov    rdi,QWORD PTR [rax]
  40537f:	test   rdi,rdi
  405382:	je     405389 <table_remove_row@@Base+0x79>
  405384:	call   403130 <free@plt>
  405389:	lea    eax,[r13-0x1]
  40538d:	cmp    ebp,eax
  40538f:	jge    4053c6 <table_remove_row@@Base+0xb6>
  405391:	sub    r13d,ebp
  405394:	movsxd rax,ebp
  405397:	lea    ecx,[r13-0x2]
  40539b:	lea    rdx,[rax*8+0x8]
  4053a3:	lea    rax,[rax+rcx*1+0x2]
  4053a8:	shl    rax,0x3
  4053ac:	nop    DWORD PTR [rax+0x0]
  4053b0:	mov    rcx,QWORD PTR [rbx+0x20]
  4053b4:	mov    rsi,QWORD PTR [rcx+rdx*1]
  4053b8:	mov    QWORD PTR [rcx+rdx*1-0x8],rsi
  4053bd:	add    rdx,0x8
  4053c1:	cmp    rax,rdx
  4053c4:	jne    4053b0 <table_remove_row@@Base+0xa0>
  4053c6:	dec    DWORD PTR [rbx+0x28]
  4053c9:	mov    rdi,rbx
  4053cc:	call   405190 <table_get_row_length@@Base>
  4053d1:	mov    rcx,QWORD PTR [rbx+0x30]
  4053d5:	cdqe   
  4053d7:	xor    edx,edx
  4053d9:	div    rcx
  4053dc:	test   rdx,rdx
  4053df:	je     405400 <table_remove_row@@Base+0xf0>
  4053e1:	mov    esi,ebp
  4053e3:	mov    rdi,rbx
  4053e6:	mov    ecx,0x4
  4053eb:	mov    edx,0xffffffff
  4053f0:	call   404240 <table_notify@@Base>
  4053f5:	pop    rbx
  4053f6:	pop    rbp
  4053f7:	pop    r12
  4053f9:	pop    r13
  4053fb:	xor    eax,eax
  4053fd:	pop    r14
  4053ff:	ret    
  405400:	mov    rsi,QWORD PTR [rbx+0x38]
  405404:	mov    rdi,QWORD PTR [rbx+0x20]
  405408:	sub    rsi,rcx
  40540b:	mov    QWORD PTR [rbx+0x38],rsi
  40540f:	shl    rsi,0x3
  405413:	call   4031e0 <realloc@plt>
  405418:	mov    QWORD PTR [rbx+0x20],rax
  40541c:	jmp    4053e1 <table_remove_row@@Base+0xd1>
  40541e:	xchg   ax,ax

0000000000405420 <table_set_row_ptr@@Base>:
  405420:	endbr64 
  405424:	mov    rax,QWORD PTR [rdi+0x20]
  405428:	mov    rdx,QWORD PTR [rdx]
  40542b:	movsxd rsi,esi
  40542e:	mov    QWORD PTR [rax+rsi*8],rdx
  405432:	ret    
  405433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40543d:	nop    DWORD PTR [rax]

0000000000405440 <table_set@@Base>:
  405440:	endbr64 
  405444:	push   r15
  405446:	mov    r15,rcx
  405449:	push   r14
  40544b:	mov    r14d,esi
  40544e:	push   r13
  405450:	push   r12
  405452:	mov    r12d,edx
  405455:	push   rbp
  405456:	mov    rbp,rdi
  405459:	push   rbx
  40545a:	mov    ebx,r8d
  40545d:	sub    rsp,0x8
  405461:	call   406c00 <table_get_cell_ptr@@Base>
  405466:	mov    esi,r12d
  405469:	mov    rdi,rbp
  40546c:	mov    r13,rax
  40546f:	call   4042c0 <table_get_col_ptr@@Base>
  405474:	cmp    ebx,0x17
  405477:	ja     40549a <table_set@@Base+0x5a>
  405479:	lea    rsi,[rip+0x1d64]        # 4071e4 <_IO_stdin_used@@Base+0x1e4>
  405480:	movsxd rdx,DWORD PTR [rsi+rbx*4]
  405484:	add    rdx,rsi
  405487:	notrack jmp rdx
  40548a:	nop    WORD PTR [rax+rax*1+0x0]
  405490:	cmp    DWORD PTR [rax+0x8],0xd
  405494:	je     405588 <table_set@@Base+0x148>
  40549a:	add    rsp,0x8
  40549e:	pop    rbx
  40549f:	pop    rbp
  4054a0:	pop    r12
  4054a2:	pop    r13
  4054a4:	pop    r14
  4054a6:	mov    eax,0xffffffff
  4054ab:	pop    r15
  4054ad:	ret    
  4054ae:	xchg   ax,ax
  4054b0:	cmp    DWORD PTR [rax+0x8],0x16
  4054b4:	jne    40549a <table_set@@Base+0x5a>
  4054b6:	mov    rax,QWORD PTR [r13+0x0]
  4054ba:	test   rax,rax
  4054bd:	je     405760 <table_set@@Base+0x320>
  4054c3:	movzx  edx,BYTE PTR [r15]
  4054c7:	mov    BYTE PTR [rax],dl
  4054c9:	mov    edx,r12d
  4054cc:	mov    esi,r14d
  4054cf:	mov    rdi,rbp
  4054d2:	mov    ecx,0x1
  4054d7:	call   404240 <table_notify@@Base>
  4054dc:	add    rsp,0x8
  4054e0:	pop    rbx
  4054e1:	pop    rbp
  4054e2:	pop    r12
  4054e4:	pop    r13
  4054e6:	pop    r14
  4054e8:	xor    eax,eax
  4054ea:	pop    r15
  4054ec:	ret    
  4054ed:	nop    DWORD PTR [rax]
  4054f0:	cmp    DWORD PTR [rax+0x8],0x15
  4054f4:	jne    40549a <table_set@@Base+0x5a>
  4054f6:	mov    rdi,r15
  4054f9:	call   403160 <strlen@plt>
  4054fe:	mov    rdi,QWORD PTR [r13+0x0]
  405502:	lea    rsi,[rax+0x1]
  405506:	call   4031e0 <realloc@plt>
  40550b:	mov    QWORD PTR [r13+0x0],rax
  40550f:	test   rax,rax
  405512:	je     40549a <table_set@@Base+0x5a>
  405514:	mov    rsi,r15
  405517:	mov    rdi,rax
  40551a:	call   403150 <strcpy@plt>
  40551f:	jmp    4054c9 <table_set@@Base+0x89>
  405521:	nop    DWORD PTR [rax+0x0]
  405528:	cmp    DWORD PTR [rax+0x8],0x14
  40552c:	jne    40549a <table_set@@Base+0x5a>
  405532:	jmp    4054b6 <table_set@@Base+0x76>
  405534:	nop    DWORD PTR [rax+0x0]
  405538:	cmp    DWORD PTR [rax+0x8],0x13
  40553c:	jne    40549a <table_set@@Base+0x5a>
  405542:	jmp    4054b6 <table_set@@Base+0x76>
  405547:	nop    WORD PTR [rax+rax*1+0x0]
  405550:	cmp    DWORD PTR [rax+0x8],0x12
  405554:	jne    40549a <table_set@@Base+0x5a>
  40555a:	mov    rax,QWORD PTR [r13+0x0]
  40555e:	test   rax,rax
  405561:	je     40577c <table_set@@Base+0x33c>
  405567:	vmovdqu xmm0,XMMWORD PTR [r15]
  40556c:	vmovups XMMWORD PTR [rax],xmm0
  405570:	jmp    4054c9 <table_set@@Base+0x89>
  405575:	nop    DWORD PTR [rax]
  405578:	cmp    DWORD PTR [rax+0x8],0x11
  40557c:	jne    40549a <table_set@@Base+0x5a>
  405582:	nop    WORD PTR [rax+rax*1+0x0]
  405588:	mov    rax,QWORD PTR [r13+0x0]
  40558c:	test   rax,rax
  40558f:	je     405740 <table_set@@Base+0x300>
  405595:	mov    rdx,QWORD PTR [r15]
  405598:	mov    QWORD PTR [rax],rdx
  40559b:	jmp    4054c9 <table_set@@Base+0x89>
  4055a0:	cmp    DWORD PTR [rax+0x8],0x10
  4055a4:	jne    40549a <table_set@@Base+0x5a>
  4055aa:	nop    WORD PTR [rax+rax*1+0x0]
  4055b0:	mov    rax,QWORD PTR [r13+0x0]
  4055b4:	test   rax,rax
  4055b7:	je     405700 <table_set@@Base+0x2c0>
  4055bd:	mov    edx,DWORD PTR [r15]
  4055c0:	mov    DWORD PTR [rax],edx
  4055c2:	jmp    4054c9 <table_set@@Base+0x89>
  4055c7:	nop    WORD PTR [rax+rax*1+0x0]
  4055d0:	cmp    DWORD PTR [rax+0x8],0xf
  4055d4:	jne    40549a <table_set@@Base+0x5a>
  4055da:	jmp    405588 <table_set@@Base+0x148>
  4055dc:	nop    DWORD PTR [rax+0x0]
  4055e0:	cmp    DWORD PTR [rax+0x8],0xe
  4055e4:	jne    40549a <table_set@@Base+0x5a>
  4055ea:	jmp    405588 <table_set@@Base+0x148>
  4055ec:	nop    DWORD PTR [rax+0x0]
  4055f0:	cmp    DWORD PTR [rax+0x8],0xc
  4055f4:	jne    40549a <table_set@@Base+0x5a>
  4055fa:	jmp    405588 <table_set@@Base+0x148>
  4055fc:	nop    DWORD PTR [rax+0x0]
  405600:	cmp    DWORD PTR [rax+0x8],0xb
  405604:	jne    40549a <table_set@@Base+0x5a>
  40560a:	mov    rax,QWORD PTR [r13+0x0]
  40560e:	test   rax,rax
  405611:	je     405720 <table_set@@Base+0x2e0>
  405617:	movzx  edx,WORD PTR [r15]
  40561b:	mov    WORD PTR [rax],dx
  40561e:	jmp    4054c9 <table_set@@Base+0x89>
  405623:	nop    DWORD PTR [rax+rax*1+0x0]
  405628:	cmp    DWORD PTR [rax+0x8],0xa
  40562c:	je     40560a <table_set@@Base+0x1ca>
  40562e:	jmp    40549a <table_set@@Base+0x5a>
  405633:	nop    DWORD PTR [rax+rax*1+0x0]
  405638:	cmp    DWORD PTR [rax+0x8],0x6
  40563c:	je     4055b0 <table_set@@Base+0x170>
  405642:	jmp    40549a <table_set@@Base+0x5a>
  405647:	nop    WORD PTR [rax+rax*1+0x0]
  405650:	cmp    DWORD PTR [rax+0x8],0x5
  405654:	je     40560a <table_set@@Base+0x1ca>
  405656:	jmp    40549a <table_set@@Base+0x5a>
  40565b:	nop    DWORD PTR [rax+rax*1+0x0]
  405660:	cmp    DWORD PTR [rax+0x8],0x4
  405664:	je     40560a <table_set@@Base+0x1ca>
  405666:	jmp    40549a <table_set@@Base+0x5a>
  40566b:	nop    DWORD PTR [rax+rax*1+0x0]
  405670:	cmp    DWORD PTR [rax+0x8],0x3
  405674:	je     4054b6 <table_set@@Base+0x76>
  40567a:	jmp    40549a <table_set@@Base+0x5a>
  40567f:	nop
  405680:	cmp    DWORD PTR [rax+0x8],0x2
  405684:	je     4054b6 <table_set@@Base+0x76>
  40568a:	jmp    40549a <table_set@@Base+0x5a>
  40568f:	nop
  405690:	cmp    DWORD PTR [rax+0x8],0x1
  405694:	je     4055b0 <table_set@@Base+0x170>
  40569a:	jmp    40549a <table_set@@Base+0x5a>
  40569f:	nop
  4056a0:	mov    eax,DWORD PTR [rax+0x8]
  4056a3:	test   eax,eax
  4056a5:	je     4055b0 <table_set@@Base+0x170>
  4056ab:	jmp    40549a <table_set@@Base+0x5a>
  4056b0:	cmp    DWORD PTR [rax+0x8],0x17
  4056b4:	jne    40549a <table_set@@Base+0x5a>
  4056ba:	mov    QWORD PTR [r13+0x0],r15
  4056be:	jmp    4054c9 <table_set@@Base+0x89>
  4056c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4056c8:	cmp    DWORD PTR [rax+0x8],0x8
  4056cc:	je     405588 <table_set@@Base+0x148>
  4056d2:	jmp    40549a <table_set@@Base+0x5a>
  4056d7:	nop    WORD PTR [rax+rax*1+0x0]
  4056e0:	cmp    DWORD PTR [rax+0x8],0x7
  4056e4:	je     4055b0 <table_set@@Base+0x170>
  4056ea:	jmp    40549a <table_set@@Base+0x5a>
  4056ef:	nop
  4056f0:	cmp    DWORD PTR [rax+0x8],0x9
  4056f4:	je     405588 <table_set@@Base+0x148>
  4056fa:	jmp    40549a <table_set@@Base+0x5a>
  4056ff:	nop
  405700:	mov    edi,0x4
  405705:	call   4031c0 <malloc@plt>
  40570a:	mov    QWORD PTR [r13+0x0],rax
  40570e:	test   rax,rax
  405711:	jne    4055bd <table_set@@Base+0x17d>
  405717:	jmp    40549a <table_set@@Base+0x5a>
  40571c:	nop    DWORD PTR [rax+0x0]
  405720:	mov    edi,0x2
  405725:	call   4031c0 <malloc@plt>
  40572a:	mov    QWORD PTR [r13+0x0],rax
  40572e:	test   rax,rax
  405731:	jne    405617 <table_set@@Base+0x1d7>
  405737:	jmp    40549a <table_set@@Base+0x5a>
  40573c:	nop    DWORD PTR [rax+0x0]
  405740:	mov    edi,0x8
  405745:	call   4031c0 <malloc@plt>
  40574a:	mov    QWORD PTR [r13+0x0],rax
  40574e:	test   rax,rax
  405751:	jne    405595 <table_set@@Base+0x155>
  405757:	jmp    40549a <table_set@@Base+0x5a>
  40575c:	nop    DWORD PTR [rax+0x0]
  405760:	mov    edi,0x1
  405765:	call   4031c0 <malloc@plt>
  40576a:	mov    QWORD PTR [r13+0x0],rax
  40576e:	test   rax,rax
  405771:	jne    4054c3 <table_set@@Base+0x83>
  405777:	jmp    40549a <table_set@@Base+0x5a>
  40577c:	mov    edi,0x10
  405781:	call   4031c0 <malloc@plt>
  405786:	mov    QWORD PTR [r13+0x0],rax
  40578a:	test   rax,rax
  40578d:	jne    405567 <table_set@@Base+0x127>
  405793:	jmp    40549a <table_set@@Base+0x5a>
  405798:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004057a0 <table_set_bool@@Base>:
  4057a0:	endbr64 
  4057a4:	sub    rsp,0x18
  4057a8:	mov    BYTE PTR [rsp+0xc],cl
  4057ac:	mov    r8d,0x16
  4057b2:	lea    rcx,[rsp+0xc]
  4057b7:	call   405440 <table_set@@Base>
  4057bc:	add    rsp,0x18
  4057c0:	ret    
  4057c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4057cc:	nop    DWORD PTR [rax+0x0]

00000000004057d0 <table_set_int@@Base>:
  4057d0:	endbr64 
  4057d4:	sub    rsp,0x18
  4057d8:	mov    DWORD PTR [rsp+0xc],ecx
  4057dc:	xor    r8d,r8d
  4057df:	lea    rcx,[rsp+0xc]
  4057e4:	call   405440 <table_set@@Base>
  4057e9:	add    rsp,0x18
  4057ed:	ret    
  4057ee:	xchg   ax,ax

00000000004057f0 <table_set_uint@@Base>:
  4057f0:	endbr64 
  4057f4:	sub    rsp,0x18
  4057f8:	mov    DWORD PTR [rsp+0xc],ecx
  4057fc:	mov    r8d,0x1
  405802:	lea    rcx,[rsp+0xc]
  405807:	call   405440 <table_set@@Base>
  40580c:	add    rsp,0x18
  405810:	ret    
  405811:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40581c:	nop    DWORD PTR [rax+0x0]

0000000000405820 <table_set_int8@@Base>:
  405820:	endbr64 
  405824:	sub    rsp,0x18
  405828:	mov    BYTE PTR [rsp+0xc],cl
  40582c:	mov    r8d,0x2
  405832:	lea    rcx,[rsp+0xc]
  405837:	call   405440 <table_set@@Base>
  40583c:	add    rsp,0x18
  405840:	ret    
  405841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40584c:	nop    DWORD PTR [rax+0x0]

0000000000405850 <table_set_uint8@@Base>:
  405850:	endbr64 
  405854:	sub    rsp,0x18
  405858:	mov    BYTE PTR [rsp+0xc],cl
  40585c:	mov    r8d,0x3
  405862:	lea    rcx,[rsp+0xc]
  405867:	call   405440 <table_set@@Base>
  40586c:	add    rsp,0x18
  405870:	ret    
  405871:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40587c:	nop    DWORD PTR [rax+0x0]

0000000000405880 <table_set_int16@@Base>:
  405880:	endbr64 
  405884:	sub    rsp,0x18
  405888:	mov    WORD PTR [rsp+0xc],cx
  40588d:	mov    r8d,0x4
  405893:	lea    rcx,[rsp+0xc]
  405898:	call   405440 <table_set@@Base>
  40589d:	add    rsp,0x18
  4058a1:	ret    
  4058a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058ad:	nop    DWORD PTR [rax]

00000000004058b0 <table_set_uint16@@Base>:
  4058b0:	endbr64 
  4058b4:	sub    rsp,0x18
  4058b8:	mov    WORD PTR [rsp+0xc],cx
  4058bd:	mov    r8d,0x5
  4058c3:	lea    rcx,[rsp+0xc]
  4058c8:	call   405440 <table_set@@Base>
  4058cd:	add    rsp,0x18
  4058d1:	ret    
  4058d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058dd:	nop    DWORD PTR [rax]

00000000004058e0 <table_set_int32@@Base>:
  4058e0:	endbr64 
  4058e4:	sub    rsp,0x18
  4058e8:	mov    DWORD PTR [rsp+0xc],ecx
  4058ec:	mov    r8d,0x6
  4058f2:	lea    rcx,[rsp+0xc]
  4058f7:	call   405440 <table_set@@Base>
  4058fc:	add    rsp,0x18
  405900:	ret    
  405901:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40590c:	nop    DWORD PTR [rax+0x0]

0000000000405910 <table_set_uint32@@Base>:
  405910:	endbr64 
  405914:	sub    rsp,0x18
  405918:	mov    DWORD PTR [rsp+0xc],ecx
  40591c:	mov    r8d,0x7
  405922:	lea    rcx,[rsp+0xc]
  405927:	call   405440 <table_set@@Base>
  40592c:	add    rsp,0x18
  405930:	ret    
  405931:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40593c:	nop    DWORD PTR [rax+0x0]

0000000000405940 <table_set_int64@@Base>:
  405940:	endbr64 
  405944:	sub    rsp,0x18
  405948:	mov    QWORD PTR [rsp+0x8],rcx
  40594d:	mov    r8d,0x8
  405953:	lea    rcx,[rsp+0x8]
  405958:	call   405440 <table_set@@Base>
  40595d:	add    rsp,0x18
  405961:	ret    
  405962:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40596d:	nop    DWORD PTR [rax]

0000000000405970 <table_set_uint64@@Base>:
  405970:	endbr64 
  405974:	sub    rsp,0x18
  405978:	mov    QWORD PTR [rsp+0x8],rcx
  40597d:	mov    r8d,0x9
  405983:	lea    rcx,[rsp+0x8]
  405988:	call   405440 <table_set@@Base>
  40598d:	add    rsp,0x18
  405991:	ret    
  405992:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40599d:	nop    DWORD PTR [rax]

00000000004059a0 <table_set_short@@Base>:
  4059a0:	endbr64 
  4059a4:	sub    rsp,0x18
  4059a8:	mov    WORD PTR [rsp+0xc],cx
  4059ad:	mov    r8d,0xa
  4059b3:	lea    rcx,[rsp+0xc]
  4059b8:	call   405440 <table_set@@Base>
  4059bd:	add    rsp,0x18
  4059c1:	ret    
  4059c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4059cd:	nop    DWORD PTR [rax]

00000000004059d0 <table_set_ushort@@Base>:
  4059d0:	endbr64 
  4059d4:	sub    rsp,0x18
  4059d8:	mov    WORD PTR [rsp+0xc],cx
  4059dd:	mov    r8d,0xb
  4059e3:	lea    rcx,[rsp+0xc]
  4059e8:	call   405440 <table_set@@Base>
  4059ed:	add    rsp,0x18
  4059f1:	ret    
  4059f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4059fd:	nop    DWORD PTR [rax]

0000000000405a00 <table_set_long@@Base>:
  405a00:	endbr64 
  405a04:	sub    rsp,0x18
  405a08:	mov    QWORD PTR [rsp+0x8],rcx
  405a0d:	mov    r8d,0xc
  405a13:	lea    rcx,[rsp+0x8]
  405a18:	call   405440 <table_set@@Base>
  405a1d:	add    rsp,0x18
  405a21:	ret    
  405a22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a2d:	nop    DWORD PTR [rax]

0000000000405a30 <table_set_ulong@@Base>:
  405a30:	endbr64 
  405a34:	sub    rsp,0x18
  405a38:	mov    QWORD PTR [rsp+0x8],rcx
  405a3d:	mov    r8d,0xd
  405a43:	lea    rcx,[rsp+0x8]
  405a48:	call   405440 <table_set@@Base>
  405a4d:	add    rsp,0x18
  405a51:	ret    
  405a52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a5d:	nop    DWORD PTR [rax]

0000000000405a60 <table_set_llong@@Base>:
  405a60:	endbr64 
  405a64:	sub    rsp,0x18
  405a68:	mov    QWORD PTR [rsp+0x8],rcx
  405a6d:	mov    r8d,0xe
  405a73:	lea    rcx,[rsp+0x8]
  405a78:	call   405440 <table_set@@Base>
  405a7d:	add    rsp,0x18
  405a81:	ret    
  405a82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a8d:	nop    DWORD PTR [rax]

0000000000405a90 <table_set_ullong@@Base>:
  405a90:	endbr64 
  405a94:	sub    rsp,0x18
  405a98:	mov    QWORD PTR [rsp+0x8],rcx
  405a9d:	mov    r8d,0xf
  405aa3:	lea    rcx,[rsp+0x8]
  405aa8:	call   405440 <table_set@@Base>
  405aad:	add    rsp,0x18
  405ab1:	ret    
  405ab2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405abd:	nop    DWORD PTR [rax]

0000000000405ac0 <table_set_float@@Base>:
  405ac0:	endbr64 
  405ac4:	sub    rsp,0x18
  405ac8:	lea    rcx,[rsp+0xc]
  405acd:	mov    r8d,0x10
  405ad3:	vmovss DWORD PTR [rsp+0xc],xmm0
  405ad9:	call   405440 <table_set@@Base>
  405ade:	add    rsp,0x18
  405ae2:	ret    
  405ae3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405aee:	xchg   ax,ax

0000000000405af0 <table_set_double@@Base>:
  405af0:	endbr64 
  405af4:	sub    rsp,0x18
  405af8:	lea    rcx,[rsp+0x8]
  405afd:	mov    r8d,0x11
  405b03:	vmovsd QWORD PTR [rsp+0x8],xmm0
  405b09:	call   405440 <table_set@@Base>
  405b0e:	add    rsp,0x18
  405b12:	ret    
  405b13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b1e:	xchg   ax,ax

0000000000405b20 <table_set_ldouble@@Base>:
  405b20:	endbr64 
  405b24:	sub    rsp,0x8
  405b28:	lea    rcx,[rsp+0x10]
  405b2d:	mov    r8d,0x12
  405b33:	call   405440 <table_set@@Base>
  405b38:	add    rsp,0x8
  405b3c:	ret    
  405b3d:	nop    DWORD PTR [rax]

0000000000405b40 <table_set_string@@Base>:
  405b40:	endbr64 
  405b44:	mov    r8d,0x15
  405b4a:	jmp    405440 <table_set@@Base>
  405b4f:	nop

0000000000405b50 <table_set_char@@Base>:
  405b50:	endbr64 
  405b54:	sub    rsp,0x18
  405b58:	mov    BYTE PTR [rsp+0xc],cl
  405b5c:	mov    r8d,0x13
  405b62:	lea    rcx,[rsp+0xc]
  405b67:	call   405440 <table_set@@Base>
  405b6c:	add    rsp,0x18
  405b70:	ret    
  405b71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b7c:	nop    DWORD PTR [rax+0x0]

0000000000405b80 <table_set_uchar@@Base>:
  405b80:	endbr64 
  405b84:	sub    rsp,0x18
  405b88:	mov    BYTE PTR [rsp+0xc],cl
  405b8c:	mov    r8d,0x14
  405b92:	lea    rcx,[rsp+0xc]
  405b97:	call   405440 <table_set@@Base>
  405b9c:	add    rsp,0x18
  405ba0:	ret    
  405ba1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405bac:	nop    DWORD PTR [rax+0x0]

0000000000405bb0 <table_set_ptr@@Base>:
  405bb0:	endbr64 
  405bb4:	mov    r8d,0x17
  405bba:	jmp    405440 <table_set@@Base>
  405bbf:	nop

0000000000405bc0 <table_serialize@@Base>:
  405bc0:	endbr64 
  405bc4:	push   r15
  405bc6:	push   r14
  405bc8:	push   r13
  405bca:	push   r12
  405bcc:	push   rbp
  405bcd:	mov    rbp,rdi
  405bd0:	push   rbx
  405bd1:	mov    rbx,rsi
  405bd4:	add    rbx,0xc
  405bd8:	sub    rsp,0x28
  405bdc:	call   405190 <table_get_row_length@@Base>
  405be1:	mov    rdi,rbp
  405be4:	mov    DWORD PTR [rsp+0xc],eax
  405be8:	call   4042b0 <table_get_column_length@@Base>
  405bed:	mov    DWORD PTR [rbx-0xc],eax
  405bf0:	mov    r14d,eax
  405bf3:	mov    rax,QWORD PTR [rbp+0x10]
  405bf7:	mov    QWORD PTR [rbx-0x8],rax
  405bfb:	test   r14d,r14d
  405bfe:	jle    405c4c <table_serialize@@Base+0x8c>
  405c00:	xor    r13d,r13d
  405c03:	nop    DWORD PTR [rax+rax*1+0x0]
  405c08:	mov    esi,r13d
  405c0b:	mov    rdi,rbp
  405c0e:	call   404670 <table_get_column_name@@Base>
  405c13:	mov    rdi,rax
  405c16:	mov    r15,rax
  405c19:	call   403160 <strlen@plt>
  405c1e:	mov    esi,r13d
  405c21:	mov    rdi,rbp
  405c24:	lea    r12,[rax+0x1]
  405c28:	call   404650 <table_get_column_data_type@@Base>
  405c2d:	mov    DWORD PTR [rbx],eax
  405c2f:	add    rbx,0x4
  405c33:	mov    rdi,rbx
  405c36:	mov    rdx,r12
  405c39:	mov    rsi,r15
  405c3c:	inc    r13d
  405c3f:	call   403140 <strncpy@plt>
  405c44:	add    rbx,r12
  405c47:	cmp    r14d,r13d
  405c4a:	jne    405c08 <table_serialize@@Base+0x48>
  405c4c:	mov    ecx,DWORD PTR [rsp+0xc]
  405c50:	mov    rax,QWORD PTR [rbp+0x30]
  405c54:	mov    DWORD PTR [rbx],ecx
  405c56:	mov    QWORD PTR [rbx+0x4],rax
  405c5a:	xor    r13d,r13d
  405c5d:	add    rbx,0xc
  405c61:	lea    r12,[rip+0x15dc]        # 407244 <_IO_stdin_used@@Base+0x244>
  405c68:	test   ecx,ecx
  405c6a:	jle    405cca <table_serialize@@Base+0x10a>
  405c6c:	nop    DWORD PTR [rax+0x0]
  405c70:	xor    r15d,r15d
  405c73:	test   r14d,r14d
  405c76:	jle    405cc0 <table_serialize@@Base+0x100>
  405c78:	nop    DWORD PTR [rax+rax*1+0x0]
  405c80:	mov    esi,r15d
  405c83:	mov    rdi,rbp
  405c86:	call   404650 <table_get_column_data_type@@Base>
  405c8b:	cmp    eax,0x17
  405c8e:	ja     405cb8 <table_serialize@@Base+0xf8>
  405c90:	mov    eax,eax
  405c92:	movsxd rax,DWORD PTR [r12+rax*4]
  405c96:	mov    edx,r15d
  405c99:	add    rax,r12
  405c9c:	mov    esi,r13d
  405c9f:	mov    rdi,rbp
  405ca2:	notrack jmp rax
  405ca5:	nop    DWORD PTR [rax]
  405ca8:	call   404f10 <table_get@@Base>
  405cad:	mov    rax,QWORD PTR [rax]
  405cb0:	add    rbx,0x8
  405cb4:	mov    QWORD PTR [rbx-0x8],rax
  405cb8:	inc    r15d
  405cbb:	cmp    r14d,r15d
  405cbe:	jne    405c80 <table_serialize@@Base+0xc0>
  405cc0:	inc    r13d
  405cc3:	cmp    DWORD PTR [rsp+0xc],r13d
  405cc8:	jne    405c70 <table_serialize@@Base+0xb0>
  405cca:	mov    eax,DWORD PTR [rbp+0x40]
  405ccd:	add    rbx,0xc
  405cd1:	mov    DWORD PTR [rbx-0xc],eax
  405cd4:	mov    rax,QWORD PTR [rbp+0x60]
  405cd8:	mov    QWORD PTR [rbx-0x8],rax
  405cdc:	mov    eax,DWORD PTR [rbp+0x40]
  405cdf:	test   eax,eax
  405ce1:	jle    405d16 <table_serialize@@Base+0x156>
  405ce3:	xor    eax,eax
  405ce5:	nop    DWORD PTR [rax]
  405ce8:	mov    rdx,QWORD PTR [rbp+0x48]
  405cec:	add    rbx,0x14
  405cf0:	mov    rdx,QWORD PTR [rdx+rax*8]
  405cf4:	mov    QWORD PTR [rbx-0x14],rdx
  405cf8:	mov    rdx,QWORD PTR [rbp+0x50]
  405cfc:	mov    rdx,QWORD PTR [rdx+rax*8]
  405d00:	mov    QWORD PTR [rbx-0xc],rdx
  405d04:	mov    rdx,QWORD PTR [rbp+0x58]
  405d08:	mov    edx,DWORD PTR [rdx+rax*4]
  405d0b:	inc    rax
  405d0e:	mov    DWORD PTR [rbx-0x4],edx
  405d11:	cmp    DWORD PTR [rbp+0x40],eax
  405d14:	jg     405ce8 <table_serialize@@Base+0x128>
  405d16:	add    rsp,0x28
  405d1a:	pop    rbx
  405d1b:	pop    rbp
  405d1c:	pop    r12
  405d1e:	pop    r13
  405d20:	pop    r14
  405d22:	pop    r15
  405d24:	ret    
  405d25:	nop    DWORD PTR [rax]
  405d28:	call   404f10 <table_get@@Base>
  405d2d:	movzx  eax,BYTE PTR [rax]
  405d30:	inc    rbx
  405d33:	mov    BYTE PTR [rbx-0x1],al
  405d36:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405d38:	nop    DWORD PTR [rax+rax*1+0x0]
  405d40:	call   404f10 <table_get@@Base>
  405d45:	mov    eax,DWORD PTR [rax]
  405d47:	add    rbx,0x4
  405d4b:	mov    DWORD PTR [rbx-0x4],eax
  405d4e:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405d53:	nop    DWORD PTR [rax+rax*1+0x0]
  405d58:	call   404f10 <table_get@@Base>
  405d5d:	movzx  eax,WORD PTR [rax]
  405d60:	add    rbx,0x2
  405d64:	mov    WORD PTR [rbx-0x2],ax
  405d68:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405d6d:	nop    DWORD PTR [rax]
  405d70:	call   405170 <table_get_string@@Base>
  405d75:	mov    rdi,rax
  405d78:	mov    QWORD PTR [rsp+0x18],rax
  405d7d:	call   403160 <strlen@plt>
  405d82:	lea    r8,[rax+0x1]
  405d86:	mov    rsi,QWORD PTR [rsp+0x18]
  405d8b:	mov    rdx,r8
  405d8e:	mov    rdi,rbx
  405d91:	mov    QWORD PTR [rsp+0x10],r8
  405d96:	call   403140 <strncpy@plt>
  405d9b:	mov    r8,QWORD PTR [rsp+0x10]
  405da0:	add    rbx,r8
  405da3:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405da8:	nop    DWORD PTR [rax+rax*1+0x0]
  405db0:	call   404f10 <table_get@@Base>
  405db5:	vmovss xmm0,DWORD PTR [rax]
  405db9:	add    rbx,0x4
  405dbd:	vmovss DWORD PTR [rbx-0x4],xmm0
  405dc2:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405dc7:	nop    WORD PTR [rax+rax*1+0x0]
  405dd0:	call   404f10 <table_get@@Base>
  405dd5:	vmovsd xmm0,QWORD PTR [rax]
  405dd9:	add    rbx,0x8
  405ddd:	vmovsd QWORD PTR [rbx-0x8],xmm0
  405de2:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405de7:	nop    WORD PTR [rax+rax*1+0x0]
  405df0:	call   404f10 <table_get@@Base>
  405df5:	fld    TBYTE PTR [rax]
  405df7:	add    rbx,0x10
  405dfb:	fstp   TBYTE PTR [rbx-0x10]
  405dfe:	jmp    405cb8 <table_serialize@@Base+0xf8>
  405e03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e0d:	nop    DWORD PTR [rax]

0000000000405e10 <table_deserialize@@Base>:
  405e10:	endbr64 
  405e14:	push   r15
  405e16:	push   r14
  405e18:	push   r13
  405e1a:	push   r12
  405e1c:	push   rbp
  405e1d:	push   rbx
  405e1e:	mov    rbx,rdi
  405e21:	add    rbx,0xc
  405e25:	sub    rsp,0x18
  405e29:	call   403a80 <table_new@@Base>
  405e2e:	mov    rbp,rax
  405e31:	mov    r14d,DWORD PTR [rbx-0xc]
  405e35:	mov    rax,QWORD PTR [rbx-0x8]
  405e39:	mov    QWORD PTR [rbp+0x10],rax
  405e3d:	test   r14d,r14d
  405e40:	jle    405e6e <table_deserialize@@Base+0x5e>
  405e42:	xor    r13d,r13d
  405e45:	nop    DWORD PTR [rax]
  405e48:	lea    r12,[rbx+0x4]
  405e4c:	mov    edx,DWORD PTR [rbx]
  405e4e:	mov    rsi,r12
  405e51:	mov    rdi,rbp
  405e54:	call   404340 <table_add_column@@Base>
  405e59:	mov    rdi,r12
  405e5c:	call   403160 <strlen@plt>
  405e61:	inc    r13d
  405e64:	lea    rbx,[r12+rax*1+0x1]
  405e69:	cmp    r14d,r13d
  405e6c:	jne    405e48 <table_deserialize@@Base+0x38>
  405e6e:	mov    edx,DWORD PTR [rbx]
  405e70:	mov    rax,QWORD PTR [rbx+0x4]
  405e74:	mov    DWORD PTR [rsp+0xc],edx
  405e78:	mov    QWORD PTR [rbp+0x30],rax
  405e7c:	add    rbx,0xc
  405e80:	test   edx,edx
  405e82:	jle    405eea <table_deserialize@@Base+0xda>
  405e84:	xor    r13d,r13d
  405e87:	lea    r12,[rip+0x1416]        # 4072a4 <_IO_stdin_used@@Base+0x2a4>
  405e8e:	xchg   ax,ax
  405e90:	mov    rdi,rbp
  405e93:	call   4051e0 <table_add_row@@Base>
  405e98:	test   r14d,r14d
  405e9b:	jle    405ee0 <table_deserialize@@Base+0xd0>
  405e9d:	xor    r15d,r15d
  405ea0:	mov    esi,r15d
  405ea3:	mov    rdi,rbp
  405ea6:	call   404650 <table_get_column_data_type@@Base>
  405eab:	cmp    eax,0x17
  405eae:	ja     405ed8 <table_deserialize@@Base+0xc8>
  405eb0:	mov    eax,eax
  405eb2:	movsxd rax,DWORD PTR [r12+rax*4]
  405eb6:	add    rax,r12
  405eb9:	notrack jmp rax
  405ebc:	nop    DWORD PTR [rax+0x0]
  405ec0:	movzx  ecx,BYTE PTR [rbx]
  405ec3:	mov    edx,r15d
  405ec6:	mov    esi,r13d
  405ec9:	mov    rdi,rbp
  405ecc:	inc    rbx
  405ecf:	call   4057a0 <table_set_bool@@Base>
  405ed4:	nop    DWORD PTR [rax+0x0]
  405ed8:	inc    r15d
  405edb:	cmp    r14d,r15d
  405ede:	jne    405ea0 <table_deserialize@@Base+0x90>
  405ee0:	inc    r13d
  405ee3:	cmp    DWORD PTR [rsp+0xc],r13d
  405ee8:	jne    405e90 <table_deserialize@@Base+0x80>
  405eea:	mov    eax,DWORD PTR [rbx]
  405eec:	mov    rdx,QWORD PTR [rbx+0x4]
  405ef0:	lea    r12,[rbx+0xc]
  405ef4:	mov    QWORD PTR [rbp+0x60],rdx
  405ef8:	test   eax,eax
  405efa:	jle    405f2f <table_deserialize@@Base+0x11f>
  405efc:	dec    eax
  405efe:	lea    rax,[rax+rax*4]
  405f02:	lea    rbx,[rbx+rax*4+0x20]
  405f07:	nop    WORD PTR [rax+rax*1+0x0]
  405f10:	mov    rsi,QWORD PTR [r12]
  405f14:	mov    rdx,QWORD PTR [r12+0x8]
  405f19:	mov    ecx,DWORD PTR [r12+0x10]
  405f1e:	mov    rdi,rbp
  405f21:	add    r12,0x14
  405f25:	call   403fe0 <table_register_callback@@Base>
  405f2a:	cmp    rbx,r12
  405f2d:	jne    405f10 <table_deserialize@@Base+0x100>
  405f2f:	add    rsp,0x18
  405f33:	pop    rbx
  405f34:	mov    rax,rbp
  405f37:	pop    rbp
  405f38:	pop    r12
  405f3a:	pop    r13
  405f3c:	pop    r14
  405f3e:	pop    r15
  405f40:	ret    
  405f41:	nop    DWORD PTR [rax+0x0]
  405f48:	mov    rcx,rbx
  405f4b:	mov    edx,r15d
  405f4e:	mov    esi,r13d
  405f51:	mov    rdi,rbp
  405f54:	call   405b40 <table_set_string@@Base>
  405f59:	mov    rdi,rbx
  405f5c:	call   403160 <strlen@plt>
  405f61:	lea    rbx,[rbx+rax*1+0x1]
  405f66:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  405f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f70:	movzx  ecx,BYTE PTR [rbx]
  405f73:	mov    edx,r15d
  405f76:	mov    esi,r13d
  405f79:	mov    rdi,rbp
  405f7c:	inc    rbx
  405f7f:	call   405b80 <table_set_uchar@@Base>
  405f84:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  405f89:	nop    DWORD PTR [rax+0x0]
  405f90:	mov    rcx,QWORD PTR [rbx]
  405f93:	mov    edx,r15d
  405f96:	mov    esi,r13d
  405f99:	mov    rdi,rbp
  405f9c:	add    rbx,0x8
  405fa0:	call   405bb0 <table_set_ptr@@Base>
  405fa5:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  405faa:	nop    WORD PTR [rax+rax*1+0x0]
  405fb0:	movsx  ecx,BYTE PTR [rbx]
  405fb3:	mov    edx,r15d
  405fb6:	mov    esi,r13d
  405fb9:	mov    rdi,rbp
  405fbc:	inc    rbx
  405fbf:	call   405b50 <table_set_char@@Base>
  405fc4:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  405fc9:	nop    DWORD PTR [rax+0x0]
  405fd0:	fld    TBYTE PTR [rbx]
  405fd2:	sub    rsp,0x10
  405fd6:	mov    edx,r15d
  405fd9:	mov    esi,r13d
  405fdc:	mov    rdi,rbp
  405fdf:	fstp   TBYTE PTR [rsp]
  405fe2:	call   405b20 <table_set_ldouble@@Base>
  405fe7:	pop    rax
  405fe8:	add    rbx,0x10
  405fec:	pop    rdx
  405fed:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  405ff2:	nop    WORD PTR [rax+rax*1+0x0]
  405ff8:	vmovsd xmm0,QWORD PTR [rbx]
  405ffc:	mov    edx,r15d
  405fff:	mov    esi,r13d
  406002:	mov    rdi,rbp
  406005:	add    rbx,0x8
  406009:	call   405af0 <table_set_double@@Base>
  40600e:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406013:	nop    DWORD PTR [rax+rax*1+0x0]
  406018:	vmovss xmm0,DWORD PTR [rbx]
  40601c:	mov    edx,r15d
  40601f:	mov    esi,r13d
  406022:	mov    rdi,rbp
  406025:	add    rbx,0x4
  406029:	call   405ac0 <table_set_float@@Base>
  40602e:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406033:	nop    DWORD PTR [rax+rax*1+0x0]
  406038:	mov    rcx,QWORD PTR [rbx]
  40603b:	mov    edx,r15d
  40603e:	mov    esi,r13d
  406041:	mov    rdi,rbp
  406044:	add    rbx,0x8
  406048:	call   405a90 <table_set_ullong@@Base>
  40604d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406052:	nop    WORD PTR [rax+rax*1+0x0]
  406058:	mov    rcx,QWORD PTR [rbx]
  40605b:	mov    edx,r15d
  40605e:	mov    esi,r13d
  406061:	mov    rdi,rbp
  406064:	add    rbx,0x8
  406068:	call   405a60 <table_set_llong@@Base>
  40606d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406072:	nop    WORD PTR [rax+rax*1+0x0]
  406078:	mov    rcx,QWORD PTR [rbx]
  40607b:	mov    edx,r15d
  40607e:	mov    esi,r13d
  406081:	mov    rdi,rbp
  406084:	add    rbx,0x8
  406088:	call   405a30 <table_set_ulong@@Base>
  40608d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406092:	nop    WORD PTR [rax+rax*1+0x0]
  406098:	mov    rcx,QWORD PTR [rbx]
  40609b:	mov    edx,r15d
  40609e:	mov    esi,r13d
  4060a1:	mov    rdi,rbp
  4060a4:	add    rbx,0x8
  4060a8:	call   405a00 <table_set_long@@Base>
  4060ad:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4060b2:	nop    WORD PTR [rax+rax*1+0x0]
  4060b8:	movzx  ecx,WORD PTR [rbx]
  4060bb:	mov    edx,r15d
  4060be:	mov    esi,r13d
  4060c1:	mov    rdi,rbp
  4060c4:	add    rbx,0x2
  4060c8:	call   4059d0 <table_set_ushort@@Base>
  4060cd:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4060d2:	nop    WORD PTR [rax+rax*1+0x0]
  4060d8:	movsx  ecx,WORD PTR [rbx]
  4060db:	mov    edx,r15d
  4060de:	mov    esi,r13d
  4060e1:	mov    rdi,rbp
  4060e4:	add    rbx,0x2
  4060e8:	call   4059a0 <table_set_short@@Base>
  4060ed:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4060f2:	nop    WORD PTR [rax+rax*1+0x0]
  4060f8:	mov    rcx,QWORD PTR [rbx]
  4060fb:	mov    edx,r15d
  4060fe:	mov    esi,r13d
  406101:	mov    rdi,rbp
  406104:	add    rbx,0x8
  406108:	call   405970 <table_set_uint64@@Base>
  40610d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406112:	nop    WORD PTR [rax+rax*1+0x0]
  406118:	mov    rcx,QWORD PTR [rbx]
  40611b:	mov    edx,r15d
  40611e:	mov    esi,r13d
  406121:	mov    rdi,rbp
  406124:	add    rbx,0x8
  406128:	call   405940 <table_set_int64@@Base>
  40612d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406132:	nop    WORD PTR [rax+rax*1+0x0]
  406138:	movzx  ecx,BYTE PTR [rbx]
  40613b:	mov    edx,r15d
  40613e:	mov    esi,r13d
  406141:	mov    rdi,rbp
  406144:	inc    rbx
  406147:	call   405850 <table_set_uint8@@Base>
  40614c:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406151:	nop    DWORD PTR [rax+0x0]
  406158:	movsx  ecx,BYTE PTR [rbx]
  40615b:	mov    edx,r15d
  40615e:	mov    esi,r13d
  406161:	mov    rdi,rbp
  406164:	inc    rbx
  406167:	call   405820 <table_set_int8@@Base>
  40616c:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406171:	nop    DWORD PTR [rax+0x0]
  406178:	mov    ecx,DWORD PTR [rbx]
  40617a:	mov    edx,r15d
  40617d:	mov    esi,r13d
  406180:	mov    rdi,rbp
  406183:	add    rbx,0x4
  406187:	call   4057f0 <table_set_uint@@Base>
  40618c:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406191:	nop    DWORD PTR [rax+0x0]
  406198:	mov    ecx,DWORD PTR [rbx]
  40619a:	mov    edx,r15d
  40619d:	mov    esi,r13d
  4061a0:	mov    rdi,rbp
  4061a3:	add    rbx,0x4
  4061a7:	call   4057d0 <table_set_int@@Base>
  4061ac:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4061b1:	nop    DWORD PTR [rax+0x0]
  4061b8:	mov    ecx,DWORD PTR [rbx]
  4061ba:	mov    edx,r15d
  4061bd:	mov    esi,r13d
  4061c0:	mov    rdi,rbp
  4061c3:	add    rbx,0x4
  4061c7:	call   405910 <table_set_uint32@@Base>
  4061cc:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4061d1:	nop    DWORD PTR [rax+0x0]
  4061d8:	mov    ecx,DWORD PTR [rbx]
  4061da:	mov    edx,r15d
  4061dd:	mov    esi,r13d
  4061e0:	mov    rdi,rbp
  4061e3:	add    rbx,0x4
  4061e7:	call   4058e0 <table_set_int32@@Base>
  4061ec:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  4061f1:	nop    DWORD PTR [rax+0x0]
  4061f8:	movzx  ecx,WORD PTR [rbx]
  4061fb:	mov    edx,r15d
  4061fe:	mov    esi,r13d
  406201:	mov    rdi,rbp
  406204:	add    rbx,0x2
  406208:	call   4058b0 <table_set_uint16@@Base>
  40620d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406212:	nop    WORD PTR [rax+rax*1+0x0]
  406218:	movsx  ecx,WORD PTR [rbx]
  40621b:	mov    edx,r15d
  40621e:	mov    esi,r13d
  406221:	mov    rdi,rbp
  406224:	add    rbx,0x2
  406228:	call   405880 <table_set_int16@@Base>
  40622d:	jmp    405ed8 <table_deserialize@@Base+0xc8>
  406232:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40623c:	nop    DWORD PTR [rax+0x0]

0000000000406240 <table_cell_to_buffer@@Base>:
  406240:	endbr64 
  406244:	push   r14
  406246:	mov    r14d,edx
  406249:	push   r13
  40624b:	mov    r13,rdi
  40624e:	push   r12
  406250:	mov    r12d,esi
  406253:	mov    esi,edx
  406255:	push   rbp
  406256:	mov    rbp,r8
  406259:	push   rbx
  40625a:	mov    rbx,rcx
  40625d:	call   404650 <table_get_column_data_type@@Base>
  406262:	cmp    eax,0x17
  406265:	ja     4062b9 <table_cell_to_buffer@@Base+0x79>
  406267:	lea    rdx,[rip+0x10d2]        # 407340 <_IO_stdin_used@@Base+0x340>
  40626e:	mov    eax,eax
  406270:	movsxd rax,DWORD PTR [rdx+rax*4]
  406274:	mov    esi,r12d
  406277:	add    rax,rdx
  40627a:	mov    rdi,r13
  40627d:	mov    edx,r14d
  406280:	notrack jmp rax
  406283:	nop    DWORD PTR [rax+rax*1+0x0]
  406288:	call   4050d0 <table_get_ullong@@Base>
  40628d:	mov    r9,rax
  406290:	lea    r8,[rip+0x1085]        # 40731c <_IO_stdin_used@@Base+0x31c>
  406297:	nop    WORD PTR [rax+rax*1+0x0]
  4062a0:	mov    rcx,0xffffffffffffffff
  4062a7:	mov    edx,0x1
  4062ac:	mov    rsi,rbp
  4062af:	mov    rdi,rbx
  4062b2:	xor    eax,eax
  4062b4:	call   403120 <__snprintf_chk@plt>
  4062b9:	pop    rbx
  4062ba:	pop    rbp
  4062bb:	pop    r12
  4062bd:	pop    r13
  4062bf:	xor    eax,eax
  4062c1:	pop    r14
  4062c3:	ret    
  4062c4:	nop    DWORD PTR [rax+0x0]
  4062c8:	call   404f30 <table_get_bool@@Base>
  4062cd:	movzx  r9d,al
  4062d1:	lea    r8,[rip+0xd35]        # 40700d <_IO_stdin_used@@Base+0xd>
  4062d8:	mov    rsi,rbp
  4062db:	mov    rdi,rbx
  4062de:	mov    rcx,0xffffffffffffffff
  4062e5:	mov    edx,0x1
  4062ea:	xor    eax,eax
  4062ec:	call   403120 <__snprintf_chk@plt>
  4062f1:	pop    rbx
  4062f2:	pop    rbp
  4062f3:	pop    r12
  4062f5:	pop    r13
  4062f7:	xor    eax,eax
  4062f9:	pop    r14
  4062fb:	ret    
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	call   405170 <table_get_string@@Base>
  406305:	mov    rcx,rax
  406308:	lea    rdx,[rip+0x1012]        # 407321 <_IO_stdin_used@@Base+0x321>
  40630f:	mov    rsi,rbp
  406312:	mov    rdi,rbx
  406315:	xor    eax,eax
  406317:	call   403180 <snprintf@plt>
  40631c:	jmp    4062b9 <table_cell_to_buffer@@Base+0x79>
  40631e:	xchg   ax,ax
  406320:	call   405160 <table_get_uchar@@Base>
  406325:	movzx  r9d,al
  406329:	lea    r8,[rip+0xfff]        # 40732f <_IO_stdin_used@@Base+0x32f>
  406330:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  406332:	nop    WORD PTR [rax+rax*1+0x0]
  406338:	call   405150 <table_get_char@@Base>
  40633d:	movsx  r9d,al
  406341:	lea    r8,[rip+0xfe7]        # 40732f <_IO_stdin_used@@Base+0x32f>
  406348:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  40634a:	nop    WORD PTR [rax+rax*1+0x0]
  406350:	call   405130 <table_get_ldouble@@Base>
  406355:	sub    rsp,0x10
  406359:	mov    edx,0x1
  40635e:	lea    r8,[rip+0xfc6]        # 40732b <_IO_stdin_used@@Base+0x32b>
  406365:	mov    rcx,0xffffffffffffffff
  40636c:	mov    rsi,rbp
  40636f:	mov    rdi,rbx
  406372:	xor    eax,eax
  406374:	fstp   TBYTE PTR [rsp]
  406377:	call   403120 <__snprintf_chk@plt>
  40637c:	pop    rax
  40637d:	pop    rdx
  40637e:	jmp    4062b9 <table_cell_to_buffer@@Base+0x79>
  406383:	nop    DWORD PTR [rax+rax*1+0x0]
  406388:	call   405110 <table_get_double@@Base>
  40638d:	lea    r8,[rip+0xf93]        # 407327 <_IO_stdin_used@@Base+0x327>
  406394:	mov    rcx,0xffffffffffffffff
  40639b:	mov    edx,0x1
  4063a0:	mov    rsi,rbp
  4063a3:	mov    rdi,rbx
  4063a6:	mov    eax,0x1
  4063ab:	call   403120 <__snprintf_chk@plt>
  4063b0:	jmp    4062b9 <table_cell_to_buffer@@Base+0x79>
  4063b5:	nop    DWORD PTR [rax]
  4063b8:	call   4050f0 <table_get_float@@Base>
  4063bd:	vcvtss2sd xmm0,xmm0,xmm0
  4063c1:	lea    r8,[rip+0xf5c]        # 407324 <_IO_stdin_used@@Base+0x324>
  4063c8:	jmp    406394 <table_cell_to_buffer@@Base+0x154>
  4063ca:	nop    WORD PTR [rax+rax*1+0x0]
  4063d0:	call   4050b0 <table_get_llong@@Base>
  4063d5:	mov    r9,rax
  4063d8:	lea    r8,[rip+0xf38]        # 407317 <_IO_stdin_used@@Base+0x317>
  4063df:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  4063e4:	nop    DWORD PTR [rax+0x0]
  4063e8:	call   4050a0 <table_get_ulong@@Base>
  4063ed:	mov    r9,rax
  4063f0:	lea    r8,[rip+0xf14]        # 40730b <_IO_stdin_used@@Base+0x30b>
  4063f7:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  4063fc:	nop    DWORD PTR [rax+0x0]
  406400:	call   405090 <table_get_long@@Base>
  406405:	mov    r9,rax
  406408:	lea    r8,[rip+0xef8]        # 407307 <_IO_stdin_used@@Base+0x307>
  40640f:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  406414:	nop    DWORD PTR [rax+0x0]
  406418:	call   405080 <table_get_ushort@@Base>
  40641d:	movzx  r9d,ax
  406421:	lea    r8,[rip+0xeeb]        # 407313 <_IO_stdin_used@@Base+0x313>
  406428:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  40642d:	nop    DWORD PTR [rax]
  406430:	call   405070 <table_get_short@@Base>
  406435:	movsx  r9d,ax
  406439:	lea    r8,[rip+0xecf]        # 40730f <_IO_stdin_used@@Base+0x30f>
  406440:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  406445:	nop    DWORD PTR [rax]
  406448:	call   405050 <table_get_uint64@@Base>
  40644d:	mov    r9,rax
  406450:	lea    r8,[rip+0xeb4]        # 40730b <_IO_stdin_used@@Base+0x30b>
  406457:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  40645c:	nop    DWORD PTR [rax+0x0]
  406460:	call   405030 <table_get_int64@@Base>
  406465:	mov    r9,rax
  406468:	lea    r8,[rip+0xe98]        # 407307 <_IO_stdin_used@@Base+0x307>
  40646f:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  406474:	nop    DWORD PTR [rax+0x0]
  406478:	call   405020 <table_get_uint32@@Base>
  40647d:	mov    r9d,eax
  406480:	lea    r8,[rip+0xe7d]        # 407304 <_IO_stdin_used@@Base+0x304>
  406487:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  40648c:	nop    DWORD PTR [rax+0x0]
  406490:	call   405010 <table_get_int32@@Base>
  406495:	mov    r9d,eax
  406498:	lea    r8,[rip+0xb6e]        # 40700d <_IO_stdin_used@@Base+0xd>
  40649f:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  4064a4:	nop    DWORD PTR [rax+0x0]
  4064a8:	call   404ff0 <table_get_uint16@@Base>
  4064ad:	movzx  r9d,ax
  4064b1:	jmp    406480 <table_cell_to_buffer@@Base+0x240>
  4064b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4064b8:	call   404fd0 <table_get_int16@@Base>
  4064bd:	movsx  r9d,ax
  4064c1:	lea    r8,[rip+0xb45]        # 40700d <_IO_stdin_used@@Base+0xd>
  4064c8:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  4064cd:	nop    DWORD PTR [rax]
  4064d0:	call   404fb0 <table_get_uint8@@Base>
  4064d5:	movzx  r9d,al
  4064d9:	jmp    406480 <table_cell_to_buffer@@Base+0x240>
  4064db:	nop    DWORD PTR [rax+rax*1+0x0]
  4064e0:	call   404f90 <table_get_int8@@Base>
  4064e5:	movsx  r9d,al
  4064e9:	lea    r8,[rip+0xb1d]        # 40700d <_IO_stdin_used@@Base+0xd>
  4064f0:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  4064f5:	nop    DWORD PTR [rax]
  4064f8:	call   404f70 <table_get_uint@@Base>
  4064fd:	jmp    40647d <table_cell_to_buffer@@Base+0x23d>
  406502:	nop    WORD PTR [rax+rax*1+0x0]
  406508:	call   404f50 <table_get_int@@Base>
  40650d:	mov    r9d,eax
  406510:	lea    r8,[rip+0xaf6]        # 40700d <_IO_stdin_used@@Base+0xd>
  406517:	jmp    4062d8 <table_cell_to_buffer@@Base+0x98>
  40651c:	nop    DWORD PTR [rax+0x0]
  406520:	call   405180 <table_get_ptr@@Base>
  406525:	mov    r9,rax
  406528:	lea    r8,[rip+0xe03]        # 407332 <_IO_stdin_used@@Base+0x332>
  40652f:	jmp    4062a0 <table_cell_to_buffer@@Base+0x60>
  406534:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40653f:	nop

0000000000406540 <table_cell_from_buffer@@Base>:
  406540:	endbr64 
  406544:	push   r14
  406546:	push   r13
  406548:	mov    r13,rcx
  40654b:	push   r12
  40654d:	mov    r12d,esi
  406550:	mov    esi,edx
  406552:	push   rbp
  406553:	mov    ebp,edx
  406555:	push   rbx
  406556:	mov    rbx,rdi
  406559:	sub    rsp,0x120
  406560:	mov    rax,QWORD PTR fs:0x28
  406569:	mov    QWORD PTR [rsp+0x118],rax
  406571:	xor    eax,eax
  406573:	call   404650 <table_get_column_data_type@@Base>
  406578:	cmp    eax,0x17
  40657b:	ja     406bf0 <table_cell_from_buffer@@Base+0x6b0>
  406581:	lea    rdx,[rip+0xe18]        # 4073a0 <_IO_stdin_used@@Base+0x3a0>
  406588:	mov    eax,eax
  40658a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40658e:	add    rax,rdx
  406591:	notrack jmp rax
  406594:	nop    DWORD PTR [rax+0x0]
  406598:	mov    rdi,r13
  40659b:	mov    rdx,rsp
  40659e:	lea    rsi,[rip+0xa68]        # 40700d <_IO_stdin_used@@Base+0xd>
  4065a5:	xor    eax,eax
  4065a7:	call   4031d0 <__isoc99_sscanf@plt>
  4065ac:	mov    r13d,0xffffffff
  4065b2:	cmp    eax,0x1
  4065b5:	je     406bb4 <table_cell_from_buffer@@Base+0x674>
  4065bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4065c0:	mov    rcx,QWORD PTR [rsp+0x118]
  4065c8:	xor    rcx,QWORD PTR fs:0x28
  4065d1:	mov    eax,r13d
  4065d4:	jne    406beb <table_cell_from_buffer@@Base+0x6ab>
  4065da:	add    rsp,0x120
  4065e1:	pop    rbx
  4065e2:	pop    rbp
  4065e3:	pop    r12
  4065e5:	pop    r13
  4065e7:	pop    r14
  4065e9:	ret    
  4065ea:	nop    WORD PTR [rax+rax*1+0x0]
  4065f0:	lea    r14,[rsp+0x10]
  4065f5:	mov    rdi,r13
  4065f8:	mov    rdx,r14
  4065fb:	lea    rsi,[rip+0xd1f]        # 407321 <_IO_stdin_used@@Base+0x321>
  406602:	xor    eax,eax
  406604:	call   4031d0 <__isoc99_sscanf@plt>
  406609:	mov    r13d,0xffffffff
  40660f:	cmp    eax,0x1
  406612:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406614:	mov    rcx,r14
  406617:	mov    edx,ebp
  406619:	mov    esi,r12d
  40661c:	mov    rdi,rbx
  40661f:	call   405b40 <table_set_string@@Base>
  406624:	xor    r13d,r13d
  406627:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406629:	nop    DWORD PTR [rax+0x0]
  406630:	mov    rdi,r13
  406633:	mov    rdx,rsp
  406636:	lea    rsi,[rip+0xcee]        # 40732b <_IO_stdin_used@@Base+0x32b>
  40663d:	xor    eax,eax
  40663f:	call   4031d0 <__isoc99_sscanf@plt>
  406644:	mov    r13d,0xffffffff
  40664a:	cmp    eax,0x1
  40664d:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406653:	push   QWORD PTR [rsp+0x8]
  406657:	mov    edx,ebp
  406659:	mov    esi,r12d
  40665c:	push   QWORD PTR [rsp+0x8]
  406660:	mov    rdi,rbx
  406663:	xor    r13d,r13d
  406666:	call   405b20 <table_set_ldouble@@Base>
  40666b:	pop    rax
  40666c:	pop    rdx
  40666d:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406672:	nop    WORD PTR [rax+rax*1+0x0]
  406678:	mov    rdi,r13
  40667b:	mov    rdx,rsp
  40667e:	lea    rsi,[rip+0xca2]        # 407327 <_IO_stdin_used@@Base+0x327>
  406685:	xor    eax,eax
  406687:	call   4031d0 <__isoc99_sscanf@plt>
  40668c:	mov    r13d,0xffffffff
  406692:	cmp    eax,0x1
  406695:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40669b:	vmovsd xmm0,QWORD PTR [rsp]
  4066a0:	mov    edx,ebp
  4066a2:	mov    esi,r12d
  4066a5:	mov    rdi,rbx
  4066a8:	call   405af0 <table_set_double@@Base>
  4066ad:	xor    r13d,r13d
  4066b0:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4066b5:	nop    DWORD PTR [rax]
  4066b8:	mov    rdi,r13
  4066bb:	mov    rdx,rsp
  4066be:	lea    rsi,[rip+0xc5f]        # 407324 <_IO_stdin_used@@Base+0x324>
  4066c5:	xor    eax,eax
  4066c7:	call   4031d0 <__isoc99_sscanf@plt>
  4066cc:	mov    r13d,0xffffffff
  4066d2:	cmp    eax,0x1
  4066d5:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  4066db:	vmovss xmm0,DWORD PTR [rsp]
  4066e0:	mov    edx,ebp
  4066e2:	mov    esi,r12d
  4066e5:	mov    rdi,rbx
  4066e8:	call   405ac0 <table_set_float@@Base>
  4066ed:	xor    r13d,r13d
  4066f0:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4066f5:	nop    DWORD PTR [rax]
  4066f8:	mov    rdi,r13
  4066fb:	mov    rdx,rsp
  4066fe:	lea    rsi,[rip+0xc17]        # 40731c <_IO_stdin_used@@Base+0x31c>
  406705:	xor    eax,eax
  406707:	call   4031d0 <__isoc99_sscanf@plt>
  40670c:	mov    r13d,0xffffffff
  406712:	cmp    eax,0x1
  406715:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40671b:	mov    rcx,QWORD PTR [rsp]
  40671f:	mov    edx,ebp
  406721:	mov    esi,r12d
  406724:	mov    rdi,rbx
  406727:	call   405a90 <table_set_ullong@@Base>
  40672c:	xor    r13d,r13d
  40672f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406734:	nop    DWORD PTR [rax+0x0]
  406738:	mov    rdi,r13
  40673b:	mov    rdx,rsp
  40673e:	lea    rsi,[rip+0xbea]        # 40732f <_IO_stdin_used@@Base+0x32f>
  406745:	xor    eax,eax
  406747:	call   4031d0 <__isoc99_sscanf@plt>
  40674c:	mov    r13d,0xffffffff
  406752:	cmp    eax,0x1
  406755:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40675b:	movzx  ecx,BYTE PTR [rsp]
  40675f:	mov    edx,ebp
  406761:	mov    esi,r12d
  406764:	mov    rdi,rbx
  406767:	call   405b80 <table_set_uchar@@Base>
  40676c:	xor    r13d,r13d
  40676f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406774:	nop    DWORD PTR [rax+0x0]
  406778:	mov    rdi,r13
  40677b:	mov    rdx,rsp
  40677e:	lea    rsi,[rip+0xbaa]        # 40732f <_IO_stdin_used@@Base+0x32f>
  406785:	xor    eax,eax
  406787:	call   4031d0 <__isoc99_sscanf@plt>
  40678c:	mov    r13d,0xffffffff
  406792:	cmp    eax,0x1
  406795:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40679b:	movsx  ecx,BYTE PTR [rsp]
  40679f:	mov    edx,ebp
  4067a1:	mov    esi,r12d
  4067a4:	mov    rdi,rbx
  4067a7:	call   405b50 <table_set_char@@Base>
  4067ac:	xor    r13d,r13d
  4067af:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4067b4:	nop    DWORD PTR [rax+0x0]
  4067b8:	mov    rdi,r13
  4067bb:	mov    rdx,rsp
  4067be:	lea    rsi,[rip+0xb52]        # 407317 <_IO_stdin_used@@Base+0x317>
  4067c5:	xor    eax,eax
  4067c7:	call   4031d0 <__isoc99_sscanf@plt>
  4067cc:	mov    r13d,0xffffffff
  4067d2:	cmp    eax,0x1
  4067d5:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  4067db:	mov    rcx,QWORD PTR [rsp]
  4067df:	mov    edx,ebp
  4067e1:	mov    esi,r12d
  4067e4:	mov    rdi,rbx
  4067e7:	call   405a60 <table_set_llong@@Base>
  4067ec:	xor    r13d,r13d
  4067ef:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4067f4:	nop    DWORD PTR [rax+0x0]
  4067f8:	mov    rdi,r13
  4067fb:	mov    rdx,rsp
  4067fe:	lea    rsi,[rip+0xb06]        # 40730b <_IO_stdin_used@@Base+0x30b>
  406805:	xor    eax,eax
  406807:	call   4031d0 <__isoc99_sscanf@plt>
  40680c:	mov    r13d,0xffffffff
  406812:	cmp    eax,0x1
  406815:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40681b:	mov    rcx,QWORD PTR [rsp]
  40681f:	mov    edx,ebp
  406821:	mov    esi,r12d
  406824:	mov    rdi,rbx
  406827:	call   405a30 <table_set_ulong@@Base>
  40682c:	xor    r13d,r13d
  40682f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406834:	nop    DWORD PTR [rax+0x0]
  406838:	mov    rdi,r13
  40683b:	mov    rdx,rsp
  40683e:	lea    rsi,[rip+0xac2]        # 407307 <_IO_stdin_used@@Base+0x307>
  406845:	xor    eax,eax
  406847:	call   4031d0 <__isoc99_sscanf@plt>
  40684c:	mov    r13d,0xffffffff
  406852:	cmp    eax,0x1
  406855:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40685b:	mov    rcx,QWORD PTR [rsp]
  40685f:	mov    edx,ebp
  406861:	mov    esi,r12d
  406864:	mov    rdi,rbx
  406867:	call   405a00 <table_set_long@@Base>
  40686c:	xor    r13d,r13d
  40686f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406874:	nop    DWORD PTR [rax+0x0]
  406878:	mov    rdi,r13
  40687b:	mov    rdx,rsp
  40687e:	lea    rsi,[rip+0xa8e]        # 407313 <_IO_stdin_used@@Base+0x313>
  406885:	xor    eax,eax
  406887:	call   4031d0 <__isoc99_sscanf@plt>
  40688c:	mov    r13d,0xffffffff
  406892:	cmp    eax,0x1
  406895:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40689b:	movzx  ecx,WORD PTR [rsp]
  40689f:	mov    edx,ebp
  4068a1:	mov    esi,r12d
  4068a4:	mov    rdi,rbx
  4068a7:	call   4059d0 <table_set_ushort@@Base>
  4068ac:	xor    r13d,r13d
  4068af:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4068b4:	nop    DWORD PTR [rax+0x0]
  4068b8:	mov    rdi,r13
  4068bb:	mov    rdx,rsp
  4068be:	lea    rsi,[rip+0xa4a]        # 40730f <_IO_stdin_used@@Base+0x30f>
  4068c5:	xor    eax,eax
  4068c7:	call   4031d0 <__isoc99_sscanf@plt>
  4068cc:	mov    r13d,0xffffffff
  4068d2:	cmp    eax,0x1
  4068d5:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  4068db:	movsx  ecx,WORD PTR [rsp]
  4068df:	mov    edx,ebp
  4068e1:	mov    esi,r12d
  4068e4:	mov    rdi,rbx
  4068e7:	call   4059a0 <table_set_short@@Base>
  4068ec:	xor    r13d,r13d
  4068ef:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4068f4:	nop    DWORD PTR [rax+0x0]
  4068f8:	mov    rdi,r13
  4068fb:	mov    rdx,rsp
  4068fe:	lea    rsi,[rip+0xa06]        # 40730b <_IO_stdin_used@@Base+0x30b>
  406905:	xor    eax,eax
  406907:	call   4031d0 <__isoc99_sscanf@plt>
  40690c:	mov    r13d,0xffffffff
  406912:	cmp    eax,0x1
  406915:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40691b:	mov    rcx,QWORD PTR [rsp]
  40691f:	mov    edx,ebp
  406921:	mov    esi,r12d
  406924:	mov    rdi,rbx
  406927:	call   405970 <table_set_uint64@@Base>
  40692c:	xor    r13d,r13d
  40692f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406934:	nop    DWORD PTR [rax+0x0]
  406938:	mov    rdi,r13
  40693b:	mov    rdx,rsp
  40693e:	lea    rsi,[rip+0x9c2]        # 407307 <_IO_stdin_used@@Base+0x307>
  406945:	xor    eax,eax
  406947:	call   4031d0 <__isoc99_sscanf@plt>
  40694c:	mov    r13d,0xffffffff
  406952:	cmp    eax,0x1
  406955:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40695b:	mov    rcx,QWORD PTR [rsp]
  40695f:	mov    edx,ebp
  406961:	mov    esi,r12d
  406964:	mov    rdi,rbx
  406967:	call   405940 <table_set_int64@@Base>
  40696c:	xor    r13d,r13d
  40696f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406974:	nop    DWORD PTR [rax+0x0]
  406978:	mov    rdi,r13
  40697b:	mov    rdx,rsp
  40697e:	lea    rsi,[rip+0x97f]        # 407304 <_IO_stdin_used@@Base+0x304>
  406985:	xor    eax,eax
  406987:	call   4031d0 <__isoc99_sscanf@plt>
  40698c:	mov    r13d,0xffffffff
  406992:	cmp    eax,0x1
  406995:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  40699b:	mov    ecx,DWORD PTR [rsp]
  40699e:	mov    edx,ebp
  4069a0:	mov    esi,r12d
  4069a3:	mov    rdi,rbx
  4069a6:	call   405910 <table_set_uint32@@Base>
  4069ab:	xor    r13d,r13d
  4069ae:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4069b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4069b8:	mov    rdi,r13
  4069bb:	mov    rdx,rsp
  4069be:	lea    rsi,[rip+0x648]        # 40700d <_IO_stdin_used@@Base+0xd>
  4069c5:	xor    eax,eax
  4069c7:	call   4031d0 <__isoc99_sscanf@plt>
  4069cc:	mov    r13d,0xffffffff
  4069d2:	cmp    eax,0x1
  4069d5:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  4069db:	mov    ecx,DWORD PTR [rsp]
  4069de:	mov    edx,ebp
  4069e0:	mov    esi,r12d
  4069e3:	mov    rdi,rbx
  4069e6:	call   4058e0 <table_set_int32@@Base>
  4069eb:	xor    r13d,r13d
  4069ee:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  4069f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f8:	mov    rdi,r13
  4069fb:	mov    rdx,rsp
  4069fe:	lea    rsi,[rip+0x90e]        # 407313 <_IO_stdin_used@@Base+0x313>
  406a05:	xor    eax,eax
  406a07:	call   4031d0 <__isoc99_sscanf@plt>
  406a0c:	mov    r13d,0xffffffff
  406a12:	cmp    eax,0x1
  406a15:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406a1b:	movzx  ecx,WORD PTR [rsp]
  406a1f:	mov    edx,ebp
  406a21:	mov    esi,r12d
  406a24:	mov    rdi,rbx
  406a27:	call   4058b0 <table_set_uint16@@Base>
  406a2c:	xor    r13d,r13d
  406a2f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406a34:	nop    DWORD PTR [rax+0x0]
  406a38:	mov    rdi,r13
  406a3b:	mov    rdx,rsp
  406a3e:	lea    rsi,[rip+0x8ca]        # 40730f <_IO_stdin_used@@Base+0x30f>
  406a45:	xor    eax,eax
  406a47:	call   4031d0 <__isoc99_sscanf@plt>
  406a4c:	mov    r13d,0xffffffff
  406a52:	cmp    eax,0x1
  406a55:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406a5b:	movsx  ecx,WORD PTR [rsp]
  406a5f:	mov    edx,ebp
  406a61:	mov    esi,r12d
  406a64:	mov    rdi,rbx
  406a67:	call   405880 <table_set_int16@@Base>
  406a6c:	xor    r13d,r13d
  406a6f:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406a74:	nop    DWORD PTR [rax+0x0]
  406a78:	mov    rdi,r13
  406a7b:	mov    rdx,rsp
  406a7e:	lea    rsi,[rip+0x8b5]        # 40733a <_IO_stdin_used@@Base+0x33a>
  406a85:	xor    eax,eax
  406a87:	call   4031d0 <__isoc99_sscanf@plt>
  406a8c:	mov    r13d,0xffffffff
  406a92:	cmp    eax,0x1
  406a95:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406a9b:	movzx  ecx,BYTE PTR [rsp]
  406a9f:	mov    edx,ebp
  406aa1:	mov    esi,r12d
  406aa4:	mov    rdi,rbx
  406aa7:	call   405850 <table_set_uint8@@Base>
  406aac:	xor    r13d,r13d
  406aaf:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406ab4:	nop    DWORD PTR [rax+0x0]
  406ab8:	mov    rdi,r13
  406abb:	mov    rdx,rsp
  406abe:	lea    rsi,[rip+0x870]        # 407335 <_IO_stdin_used@@Base+0x335>
  406ac5:	xor    eax,eax
  406ac7:	call   4031d0 <__isoc99_sscanf@plt>
  406acc:	mov    r13d,0xffffffff
  406ad2:	cmp    eax,0x1
  406ad5:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406adb:	movsx  ecx,BYTE PTR [rsp]
  406adf:	mov    edx,ebp
  406ae1:	mov    esi,r12d
  406ae4:	mov    rdi,rbx
  406ae7:	call   405820 <table_set_int8@@Base>
  406aec:	xor    r13d,r13d
  406aef:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406af4:	nop    DWORD PTR [rax+0x0]
  406af8:	mov    rdi,r13
  406afb:	mov    rdx,rsp
  406afe:	lea    rsi,[rip+0x7ff]        # 407304 <_IO_stdin_used@@Base+0x304>
  406b05:	xor    eax,eax
  406b07:	call   4031d0 <__isoc99_sscanf@plt>
  406b0c:	mov    r13d,0xffffffff
  406b12:	cmp    eax,0x1
  406b15:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406b1b:	mov    ecx,DWORD PTR [rsp]
  406b1e:	mov    edx,ebp
  406b20:	mov    esi,r12d
  406b23:	mov    rdi,rbx
  406b26:	call   4057f0 <table_set_uint@@Base>
  406b2b:	xor    r13d,r13d
  406b2e:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406b33:	nop    DWORD PTR [rax+rax*1+0x0]
  406b38:	mov    rdi,r13
  406b3b:	mov    rdx,rsp
  406b3e:	lea    rsi,[rip+0x4c8]        # 40700d <_IO_stdin_used@@Base+0xd>
  406b45:	xor    eax,eax
  406b47:	call   4031d0 <__isoc99_sscanf@plt>
  406b4c:	mov    r13d,0xffffffff
  406b52:	cmp    eax,0x1
  406b55:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406b5b:	mov    ecx,DWORD PTR [rsp]
  406b5e:	mov    edx,ebp
  406b60:	mov    esi,r12d
  406b63:	mov    rdi,rbx
  406b66:	call   4057d0 <table_set_int@@Base>
  406b6b:	xor    r13d,r13d
  406b6e:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406b73:	nop    DWORD PTR [rax+rax*1+0x0]
  406b78:	mov    rdi,r13
  406b7b:	mov    rdx,rsp
  406b7e:	lea    rsi,[rip+0x7ad]        # 407332 <_IO_stdin_used@@Base+0x332>
  406b85:	xor    eax,eax
  406b87:	call   4031d0 <__isoc99_sscanf@plt>
  406b8c:	mov    r13d,0xffffffff
  406b92:	cmp    eax,0x1
  406b95:	jne    4065c0 <table_cell_from_buffer@@Base+0x80>
  406b9b:	mov    rcx,QWORD PTR [rsp]
  406b9f:	mov    edx,ebp
  406ba1:	mov    esi,r12d
  406ba4:	mov    rdi,rbx
  406ba7:	call   405bb0 <table_set_ptr@@Base>
  406bac:	xor    r13d,r13d
  406baf:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406bb4:	mov    r13d,DWORD PTR [rsp]
  406bb8:	test   r13d,r13d
  406bbb:	je     406bd7 <table_cell_from_buffer@@Base+0x697>
  406bbd:	mov    ecx,0x1
  406bc2:	mov    edx,ebp
  406bc4:	mov    esi,r12d
  406bc7:	mov    rdi,rbx
  406bca:	call   4057a0 <table_set_bool@@Base>
  406bcf:	xor    r13d,r13d
  406bd2:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406bd7:	xor    ecx,ecx
  406bd9:	mov    edx,ebp
  406bdb:	mov    esi,r12d
  406bde:	mov    rdi,rbx
  406be1:	call   4057a0 <table_set_bool@@Base>
  406be6:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406beb:	call   403170 <__stack_chk_fail@plt>
  406bf0:	xor    r13d,r13d
  406bf3:	jmp    4065c0 <table_cell_from_buffer@@Base+0x80>
  406bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406c00 <table_get_cell_ptr@@Base>:
  406c00:	endbr64 
  406c04:	push   rbx
  406c05:	movsxd rbx,edx
  406c08:	call   4051a0 <table_get_row_ptr@@Base>
  406c0d:	mov    rax,QWORD PTR [rax]
  406c10:	lea    rax,[rax+rbx*8]
  406c14:	pop    rbx
  406c15:	ret    
  406c16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406c20 <table_cell_init@@Base>:
  406c20:	endbr64 
  406c24:	sub    rsp,0x8
  406c28:	call   406c00 <table_get_cell_ptr@@Base>
  406c2d:	mov    QWORD PTR [rax],0x0
  406c34:	add    rsp,0x8
  406c38:	ret    
  406c39:	nop    DWORD PTR [rax+0x0]

0000000000406c40 <table_cell_destroy@@Base>:
  406c40:	endbr64 
  406c44:	push   r12
  406c46:	mov    r12d,esi
  406c49:	mov    esi,edx
  406c4b:	push   rbp
  406c4c:	mov    ebp,edx
  406c4e:	push   rbx
  406c4f:	mov    rbx,rdi
  406c52:	call   404650 <table_get_column_data_type@@Base>
  406c57:	cmp    eax,0x17
  406c5a:	jne    406c68 <table_cell_destroy@@Base+0x28>
  406c5c:	pop    rbx
  406c5d:	pop    rbp
  406c5e:	pop    r12
  406c60:	ret    
  406c61:	nop    DWORD PTR [rax+0x0]
  406c68:	mov    rdi,rbx
  406c6b:	mov    edx,ebp
  406c6d:	mov    esi,r12d
  406c70:	call   406c00 <table_get_cell_ptr@@Base>
  406c75:	mov    rdi,QWORD PTR [rax]
  406c78:	test   rdi,rdi
  406c7b:	je     406c5c <table_cell_destroy@@Base+0x1c>
  406c7d:	pop    rbx
  406c7e:	pop    rbp
  406c7f:	pop    r12
  406c81:	jmp    403130 <free@plt>
  406c86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406c90 <table_cell_nullify@@Base>:
  406c90:	endbr64 
  406c94:	push   rbx
  406c95:	call   406c00 <table_get_cell_ptr@@Base>
  406c9a:	mov    rdi,QWORD PTR [rax]
  406c9d:	test   rdi,rdi
  406ca0:	je     406cb1 <table_cell_nullify@@Base+0x21>
  406ca2:	mov    rbx,rax
  406ca5:	call   403130 <free@plt>
  406caa:	mov    QWORD PTR [rbx],0x0
  406cb1:	xor    eax,eax
  406cb3:	pop    rbx
  406cb4:	ret    
  406cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cbf:	nop

0000000000406cc0 <__libc_csu_init@@Base>:
  406cc0:	endbr64 
  406cc4:	push   r15
  406cc6:	lea    r15,[rip+0x3143]        # 409e10 <_IO_stdin_used@@Base+0x2e10>
  406ccd:	push   r14
  406ccf:	mov    r14,rdx
  406cd2:	push   r13
  406cd4:	mov    r13,rsi
  406cd7:	push   r12
  406cd9:	mov    r12d,edi
  406cdc:	push   rbp
  406cdd:	lea    rbp,[rip+0x3134]        # 409e18 <_IO_stdin_used@@Base+0x2e18>
  406ce4:	push   rbx
  406ce5:	sub    rbp,r15
  406ce8:	sub    rsp,0x8
  406cec:	call   403000 <__snprintf_chk@plt-0x120>
  406cf1:	sar    rbp,0x3
  406cf5:	je     406d16 <__libc_csu_init@@Base+0x56>
  406cf7:	xor    ebx,ebx
  406cf9:	nop    DWORD PTR [rax+0x0]
  406d00:	mov    rdx,r14
  406d03:	mov    rsi,r13
  406d06:	mov    edi,r12d
  406d09:	call   QWORD PTR [r15+rbx*8]
  406d0d:	add    rbx,0x1
  406d11:	cmp    rbp,rbx
  406d14:	jne    406d00 <__libc_csu_init@@Base+0x40>
  406d16:	add    rsp,0x8
  406d1a:	pop    rbx
  406d1b:	pop    rbp
  406d1c:	pop    r12
  406d1e:	pop    r13
  406d20:	pop    r14
  406d22:	pop    r15
  406d24:	ret    
  406d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406d30 <__libc_csu_fini@@Base>:
  406d30:	endbr64 
  406d34:	ret    

Disassembly of section .fini:

0000000000406d38 <.fini>:
  406d38:	endbr64 
  406d3c:	sub    rsp,0x8
  406d40:	add    rsp,0x8
  406d44:	ret    
