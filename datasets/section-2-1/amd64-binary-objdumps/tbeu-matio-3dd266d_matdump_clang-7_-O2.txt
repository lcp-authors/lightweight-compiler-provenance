
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x7fe1]        # 409ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x7fe2]        # 40a008 <getopt_long_only@@Base+0x3fc8>
  402026:	jmp    QWORD PTR [rip+0x7fe4]        # 40a010 <getopt_long_only@@Base+0x3fd0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x7fe2]        # 40a018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x7fda]        # 40a020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <Mat_SetVerbose@plt>:
  402050:	jmp    QWORD PTR [rip+0x7fd2]        # 40a028 <Mat_SetVerbose>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <free@plt>:
  402060:	jmp    QWORD PTR [rip+0x7fca]        # 40a030 <free@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_LogClose@plt>:
  402070:	jmp    QWORD PTR [rip+0x7fc2]        # 40a038 <Mat_LogClose>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <putchar@plt>:
  402080:	jmp    QWORD PTR [rip+0x7fba]        # 40a040 <putchar@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <Mat_VarReadNext@plt>:
  402090:	jmp    QWORD PTR [rip+0x7fb2]        # 40a048 <Mat_VarReadNext>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_Open@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x7faa]        # 40a050 <Mat_Open>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <strncmp@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x7fa2]        # 40a058 <strncmp@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <Mat_VarGetCells@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x7f9a]        # 40a060 <Mat_VarGetCells>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <puts@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x7f92]        # 40a068 <puts@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_VarGetCell@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x7f8a]        # 40a070 <Mat_VarGetCell>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarCreate@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x7f82]        # 40a078 <Mat_VarCreate>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_Warning@plt>:
  402100:	jmp    QWORD PTR [rip+0x7f7a]        # 40a080 <Mat_Warning>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_VarReadDataLinear@plt>:
  402110:	jmp    QWORD PTR [rip+0x7f72]        # 40a088 <Mat_VarReadDataLinear>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <Mat_Message@plt>:
  402120:	jmp    QWORD PTR [rip+0x7f6a]        # 40a090 <Mat_Message>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <strlen@plt>:
  402130:	jmp    QWORD PTR [rip+0x7f62]        # 40a098 <strlen@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <Mat_VarReadData@plt>:
  402140:	jmp    QWORD PTR [rip+0x7f5a]        # 40a0a0 <Mat_VarReadData>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <strchr@plt>:
  402150:	jmp    QWORD PTR [rip+0x7f52]        # 40a0a8 <strchr@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <printf@plt>:
  402160:	jmp    QWORD PTR [rip+0x7f4a]        # 40a0b0 <printf@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x7f42]        # 40a0b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadDataAll@plt>:
  402180:	jmp    QWORD PTR [rip+0x7f3a]        # 40a0c0 <Mat_VarReadDataAll>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_VarReadInfo@plt>:
  402190:	jmp    QWORD PTR [rip+0x7f32]        # 40a0c8 <Mat_VarReadInfo>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <memset@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x7f2a]        # 40a0d0 <memset@GLIBC_2.2.5>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <Mat_VarGetStructFieldnames@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x7f22]        # 40a0d8 <Mat_VarGetStructFieldnames>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <strcmp@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x7f1a]        # 40a0e0 <strcmp@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <log10@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x7f12]        # 40a0e8 <log10@GLIBC_2.2.5>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <fprintf@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x7f0a]        # 40a0f0 <fprintf@GLIBC_2.2.5>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <strtol@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x7f02]        # 40a0f8 <strtol@GLIBC_2.2.5>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_VarFree@plt>:
  402200:	jmp    QWORD PTR [rip+0x7efa]        # 40a100 <Mat_VarFree>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <Mat_SizeOf@plt>:
  402210:	jmp    QWORD PTR [rip+0x7ef2]        # 40a108 <Mat_SizeOf>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <Mat_GetLibraryVersion@plt>:
  402220:	jmp    QWORD PTR [rip+0x7eea]        # 40a110 <Mat_GetLibraryVersion>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <malloc@plt>:
  402230:	jmp    QWORD PTR [rip+0x7ee2]        # 40a118 <malloc@GLIBC_2.2.5>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_VarPrint@plt>:
  402240:	jmp    QWORD PTR [rip+0x7eda]        # 40a120 <Mat_VarPrint>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <Mat_Close@plt>:
  402250:	jmp    QWORD PTR [rip+0x7ed2]        # 40a128 <Mat_Close>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_Critical@plt>:
  402260:	jmp    QWORD PTR [rip+0x7eca]        # 40a130 <Mat_Critical>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <Mat_LogInitFunc@plt>:
  402270:	jmp    QWORD PTR [rip+0x7ec2]        # 40a138 <Mat_LogInitFunc>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <Mat_VerbMessage@plt>:
  402280:	jmp    QWORD PTR [rip+0x7eba]        # 40a140 <Mat_VerbMessage>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_VarGetCellsLinear@plt>:
  402290:	jmp    QWORD PTR [rip+0x7eb2]        # 40a148 <Mat_VarGetCellsLinear>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <Mat_Help@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x7eaa]        # 40a150 <Mat_Help>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_VarGetStructFieldByName@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x7ea2]        # 40a158 <Mat_VarGetStructFieldByName>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <sprintf@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x7e9a]        # 40a160 <sprintf@GLIBC_2.2.5>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <Mat_SizeOfClass@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x7e92]        # 40a168 <Mat_SizeOfClass>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <exit@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x7e8a]        # 40a170 <exit@GLIBC_2.2.5>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <fwrite@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x7e82]        # 40a178 <fwrite@GLIBC_2.2.5>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarGetSize@plt>:
  402300:	jmp    QWORD PTR [rip+0x7e7a]        # 40a180 <Mat_VarGetSize>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <Mat_VarDuplicate@plt>:
  402310:	jmp    QWORD PTR [rip+0x7e72]        # 40a188 <Mat_VarDuplicate>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarReadNextInfo@plt>:
  402320:	jmp    QWORD PTR [rip+0x7e6a]        # 40a190 <Mat_VarReadNextInfo>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

0000000000402330 <getopt@@Base-0x32d0>:
  402330:	endbr64 
  402334:	xor    ebp,ebp
  402336:	mov    r9,rdx
  402339:	pop    rsi
  40233a:	mov    rdx,rsp
  40233d:	and    rsp,0xfffffffffffffff0
  402341:	push   rax
  402342:	push   rsp
  402343:	mov    r8,0x406480
  40234a:	mov    rcx,0x406410
  402351:	mov    rdi,0x402420
  402358:	call   QWORD PTR [rip+0x7c8a]        # 409fe8 <getopt_long_only@@Base+0x3fa8>
  40235e:	hlt    
  40235f:	nop
  402360:	endbr64 
  402364:	ret    
  402365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40236f:	nop
  402370:	mov    eax,0x40a348
  402375:	cmp    rax,0x40a348
  40237b:	je     402390 <Mat_VarReadNextInfo@plt+0x70>
  40237d:	mov    eax,0x0
  402382:	test   rax,rax
  402385:	je     402390 <Mat_VarReadNextInfo@plt+0x70>
  402387:	mov    edi,0x40a348
  40238c:	jmp    rax
  40238e:	xchg   ax,ax
  402390:	ret    
  402391:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40239c:	nop    DWORD PTR [rax+0x0]
  4023a0:	mov    esi,0x40a348
  4023a5:	sub    rsi,0x40a348
  4023ac:	mov    rax,rsi
  4023af:	shr    rsi,0x3f
  4023b3:	sar    rax,0x3
  4023b7:	add    rsi,rax
  4023ba:	sar    rsi,1
  4023bd:	je     4023d0 <Mat_VarReadNextInfo@plt+0xb0>
  4023bf:	mov    eax,0x0
  4023c4:	test   rax,rax
  4023c7:	je     4023d0 <Mat_VarReadNextInfo@plt+0xb0>
  4023c9:	mov    edi,0x40a348
  4023ce:	jmp    rax
  4023d0:	ret    
  4023d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023dc:	nop    DWORD PTR [rax+0x0]
  4023e0:	endbr64 
  4023e4:	cmp    BYTE PTR [rip+0x7f5d],0x0        # 40a348 <optopt@@Base+0x20>
  4023eb:	jne    402400 <Mat_VarReadNextInfo@plt+0xe0>
  4023ed:	push   rbp
  4023ee:	mov    rbp,rsp
  4023f1:	call   402370 <Mat_VarReadNextInfo@plt+0x50>
  4023f6:	mov    BYTE PTR [rip+0x7f4b],0x1        # 40a348 <optopt@@Base+0x20>
  4023fd:	pop    rbp
  4023fe:	ret    
  4023ff:	nop
  402400:	ret    
  402401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	endbr64 
  402414:	jmp    4023a0 <Mat_VarReadNextInfo@plt+0x80>
  402416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402420:	push   rbp
  402421:	push   r15
  402423:	push   r14
  402425:	push   r13
  402427:	push   r12
  402429:	push   rbx
  40242a:	sub    rsp,0xc8
  402431:	mov    r12,rsi
  402434:	mov    DWORD PTR [rsp+0x5c],edi
  402438:	lea    rsi,[rsp+0x78]
  40243d:	lea    rdx,[rsp+0x7c]
  402442:	lea    rdi,[rsp+0x74]
  402447:	call   402220 <Mat_GetLibraryVersion@plt>
  40244c:	cmp    DWORD PTR [rsp+0x74],0x1
  402451:	jne    403c92 <Mat_VarReadNextInfo@plt+0x1972>
  402457:	cmp    DWORD PTR [rsp+0x78],0x5
  40245c:	jne    403c92 <Mat_VarReadNextInfo@plt+0x1972>
  402462:	cmp    DWORD PTR [rsp+0x7c],0xf
  402467:	jne    403c92 <Mat_VarReadNextInfo@plt+0x1972>
  40246d:	lea    rdi,[rip+0x4d3c]        # 4071b0 <getopt_long_only@@Base+0x1170>
  402474:	lea    rsi,[rip+0x1875]        # 403cf0 <Mat_VarReadNextInfo@plt+0x19d0>
  40247b:	call   402270 <Mat_LogInitFunc@plt>
  402480:	lea    rax,[rip+0x18b9]        # 403d40 <Mat_VarReadNextInfo@plt+0x1a20>
  402487:	mov    QWORD PTR [rip+0x7ec2],rax        # 40a350 <optopt@@Base+0x28>
  40248e:	lea    rbx,[rip+0x4f31]        # 4073c6 <getopt_long_only@@Base+0x1386>
  402495:	lea    rbp,[rip+0x7d14]        # 40a1b0 <getopt_long_only@@Base+0x4170>
  40249c:	lea    r14,[rip+0x4e19]        # 4072bc <getopt_long_only@@Base+0x127c>
  4024a3:	lea    r13,[rip+0x4b9a]        # 407044 <getopt_long_only@@Base+0x1004>
  4024aa:	lea    r15,[rip+0x7ebf]        # 40a370 <optarg@@Base>
  4024b1:	mov    QWORD PTR [rsp+0x48],r12
  4024b6:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  4024b8:	xor    eax,eax
  4024ba:	mov    rdi,r14
  4024bd:	mov    esi,ecx
  4024bf:	call   402160 <printf@plt>
  4024c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024ce:	xchg   ax,ax
  4024d0:	xor    r8d,r8d
  4024d3:	mov    edi,DWORD PTR [rsp+0x5c]
  4024d7:	mov    rsi,r12
  4024da:	mov    rdx,rbx
  4024dd:	mov    rcx,rbp
  4024e0:	call   406030 <getopt_long@@Base>
  4024e5:	mov    ecx,eax
  4024e7:	lea    eax,[rcx-0x48]
  4024ea:	cmp    eax,0x2e
  4024ed:	ja     402520 <Mat_VarReadNextInfo@plt+0x200>
  4024ef:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4024f4:	add    rax,r13
  4024f7:	jmp    rax
  4024f9:	mov    BYTE PTR [rip+0x7e58],0x1        # 40a358 <optopt@@Base+0x30>
  402500:	mov    edi,0x1
  402505:	xor    eax,eax
  402507:	lea    rsi,[rip+0x4ce2]        # 4071f0 <getopt_long_only@@Base+0x11b0>
  40250e:	call   402280 <Mat_VerbMessage@plt>
  402513:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  402515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40251f:	nop
  402520:	cmp    ecx,0xffffffff
  402523:	je     4025ab <Mat_VarReadNextInfo@plt+0x28b>
  402529:	jmp    4024b8 <Mat_VarReadNextInfo@plt+0x198>
  40252b:	mov    BYTE PTR [rip+0x7e2a],0x1        # 40a35c <optopt@@Base+0x34>
  402532:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  402534:	mov    r12,QWORD PTR [r15]
  402537:	test   r12,r12
  40253a:	je     40257b <Mat_VarReadNextInfo@plt+0x25b>
  40253c:	mov    rdi,r12
  40253f:	lea    rsi,[rip+0x4cb9]        # 4071ff <getopt_long_only@@Base+0x11bf>
  402546:	call   4021c0 <strcmp@plt>
  40254b:	test   eax,eax
  40254d:	je     402593 <Mat_VarReadNextInfo@plt+0x273>
  40254f:	xor    eax,eax
  402551:	lea    rdi,[rip+0x4cac]        # 407204 <getopt_long_only@@Base+0x11c4>
  402558:	mov    rsi,r12
  40255b:	call   402100 <Mat_Warning@plt>
  402560:	mov    r12,QWORD PTR [rsp+0x48]
  402565:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  40256a:	mov    edi,0x1
  40256f:	xor    esi,esi
  402571:	call   402050 <Mat_SetVerbose@plt>
  402576:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  40257b:	xor    eax,eax
  40257d:	lea    rdi,[rip+0x4cb5]        # 407239 <getopt_long_only@@Base+0x11f9>
  402584:	call   402100 <Mat_Warning@plt>
  402589:	mov    r12,QWORD PTR [rsp+0x48]
  40258e:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  402593:	lea    rax,[rip+0x25d6]        # 404b70 <Mat_VarReadNextInfo@plt+0x2850>
  40259a:	mov    QWORD PTR [rip+0x7daf],rax        # 40a350 <optopt@@Base+0x28>
  4025a1:	mov    r12,QWORD PTR [rsp+0x48]
  4025a6:	jmp    4024d0 <Mat_VarReadNextInfo@plt+0x1b0>
  4025ab:	lea    rbx,[rip+0x7d72]        # 40a324 <optind@@Base>
  4025b2:	movsxd rax,DWORD PTR [rbx]
  4025b5:	cmp    eax,DWORD PTR [rsp+0x5c]
  4025b9:	jge    403bb5 <Mat_VarReadNextInfo@plt+0x1895>
  4025bf:	mov    rdi,QWORD PTR [r12+rax*8]
  4025c3:	xor    esi,esi
  4025c5:	call   4020a0 <Mat_Open@plt>
  4025ca:	mov    r13,rax
  4025cd:	movsxd rax,DWORD PTR [rbx]
  4025d0:	test   r13,r13
  4025d3:	je     403bcd <Mat_VarReadNextInfo@plt+0x18ad>
  4025d9:	add    eax,0x1
  4025dc:	mov    DWORD PTR [rbx],eax
  4025de:	cmp    eax,DWORD PTR [rsp+0x5c]
  4025e2:	jge    403be9 <Mat_VarReadNextInfo@plt+0x18c9>
  4025e8:	movsxd r15,eax
  4025eb:	mov    eax,0x1
  4025f0:	vbroadcastss ymm0,DWORD PTR [rip+0x4a47]        # 407040 <getopt_long_only@@Base+0x1000>
  4025f9:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  402602:	vmovd  xmm0,eax
  402606:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm0
  40260f:	mov    QWORD PTR [rsp+0x60],r13
  402614:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40261e:	xchg   ax,ax
  402620:	mov    rbp,QWORD PTR [r12+r15*8]
  402624:	mov    rdi,rbp
  402627:	vzeroupper 
  40262a:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  40262f:	mov    rbx,rax
  402632:	cmp    rax,rbp
  402635:	je     402650 <Mat_VarReadNextInfo@plt+0x330>
  402637:	mov    r14b,BYTE PTR [rbx]
  40263a:	mov    BYTE PTR [rbx],0x0
  40263d:	mov    rbp,QWORD PTR [r12+r15*8]
  402641:	jmp    402653 <Mat_VarReadNextInfo@plt+0x333>
  402643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40264d:	nop    DWORD PTR [rax]
  402650:	xor    r14d,r14d
  402653:	mov    rdi,r13
  402656:	mov    rsi,rbp
  402659:	call   402190 <Mat_VarReadInfo@plt>
  40265e:	test   rax,rax
  402661:	je     4026a0 <Mat_VarReadNextInfo@plt+0x380>
  402663:	mov    rbp,rax
  402666:	cmp    BYTE PTR [rip+0x7ceb],0x1        # 40a358 <optopt@@Base+0x30>
  40266d:	jne    4026c0 <Mat_VarReadNextInfo@plt+0x3a0>
  40266f:	test   r14b,r14b
  402672:	je     4026c8 <Mat_VarReadNextInfo@plt+0x3a8>
  402674:	mov    BYTE PTR [rbx],r14b
  402677:	mov    rdi,rbx
  40267a:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  40267f:	mov    rbx,rax
  402682:	mov    dl,BYTE PTR [rax]
  402684:	mov    QWORD PTR [rsp+0x68],r15
  402689:	mov    r14,rbp
  40268c:	jmp    402740 <Mat_VarReadNextInfo@plt+0x420>
  402691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]
  4026a0:	mov    rsi,QWORD PTR [r12+r15*8]
  4026a4:	xor    eax,eax
  4026a6:	lea    rdi,[rip+0x4c5b]        # 407308 <getopt_long_only@@Base+0x12c8>
  4026ad:	call   402100 <Mat_Warning@plt>
  4026b2:	jmp    403ba1 <Mat_VarReadNextInfo@plt+0x1881>
  4026b7:	nop    WORD PTR [rax+rax*1+0x0]
  4026c0:	mov    r14,rbp
  4026c3:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4026c8:	mov    rdi,r13
  4026cb:	mov    r14,rbp
  4026ce:	mov    rsi,rbp
  4026d1:	call   402180 <Mat_VarReadDataAll@plt>
  4026d6:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4026db:	mov    rax,QWORD PTR [rip+0x7916]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4026e2:	mov    rcx,QWORD PTR [rax]
  4026e5:	mov    esi,0x18
  4026ea:	mov    edx,0x1
  4026ef:	lea    rdi,[rip+0x51b6]        # 4078ac <getopt_long_only@@Base+0x186c>
  4026f6:	call   4022f0 <fwrite@plt>
  4026fb:	xor    r15d,r15d
  4026fe:	mov    r14,rbp
  402701:	jmp    4031f8 <Mat_VarReadNextInfo@plt+0xed8>
  402706:	mov    rax,QWORD PTR [rip+0x78eb]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  40270d:	mov    rcx,QWORD PTR [rax]
  402710:	mov    esi,0x1f
  402715:	mov    edx,0x1
  40271a:	lea    rdi,[rip+0x516b]        # 40788c <getopt_long_only@@Base+0x184c>
  402721:	vzeroupper 
  402724:	call   4022f0 <fwrite@plt>
  402729:	xor    r15d,r15d
  40272c:	jmp    4031f8 <Mat_VarReadNextInfo@plt+0xed8>
  402731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]
  402740:	xor    ecx,ecx
  402742:	cmp    dl,0x2e
  402745:	mov    QWORD PTR [rsp+0x30],r14
  40274a:	je     4027c0 <Mat_VarReadNextInfo@plt+0x4a0>
  40274c:	cmp    dl,0x7b
  40274f:	je     402770 <Mat_VarReadNextInfo@plt+0x450>
  402751:	cmp    dl,0x28
  402754:	je     403247 <Mat_VarReadNextInfo@plt+0xf27>
  40275a:	mov    rax,rbx
  40275d:	jmp    403237 <Mat_VarReadNextInfo@plt+0xf17>
  402762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40276c:	nop    DWORD PTR [rax+0x0]
  402770:	cmp    DWORD PTR [r14+0x14],0x1
  402775:	jne    403488 <Mat_VarReadNextInfo@plt+0x1168>
  40277b:	mov    QWORD PTR [rsp+0x50],rbx
  402780:	lea    rbx,[rbx+0x1]
  402784:	mov    esi,0x7d
  402789:	mov    rdi,rbx
  40278c:	call   402150 <strchr@plt>
  402791:	mov    r15,rax
  402794:	lea    rdi,[rax+0x1]
  402798:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  40279d:	mov    cl,BYTE PTR [rax]
  40279f:	mov    r14d,0x1
  4027a5:	test   cl,cl
  4027a7:	mov    QWORD PTR [rsp+0x28],rax
  4027ac:	je     402821 <Mat_VarReadNextInfo@plt+0x501>
  4027ae:	mov    BYTE PTR [rsp+0x27],cl
  4027b2:	mov    BYTE PTR [rax],0x0
  4027b5:	xor    r8d,r8d
  4027b8:	jmp    40282c <Mat_VarReadNextInfo@plt+0x50c>
  4027ba:	nop    WORD PTR [rax+rax*1+0x0]
  4027c0:	add    rbx,0x1
  4027c4:	mov    eax,DWORD PTR [r14+0x14]
  4027c8:	cmp    eax,0x1
  4027cb:	je     4027fd <Mat_VarReadNextInfo@plt+0x4dd>
  4027cd:	cmp    eax,0x2
  4027d0:	jne    4034ad <Mat_VarReadNextInfo@plt+0x118d>
  4027d6:	mov    rbp,r14
  4027d9:	mov    rdi,rbx
  4027dc:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  4027e1:	cmp    rax,rbx
  4027e4:	mov    QWORD PTR [rsp+0x28],rax
  4027e9:	je     402ae2 <Mat_VarReadNextInfo@plt+0x7c2>
  4027ef:	mov    r14b,BYTE PTR [rax]
  4027f2:	mov    BYTE PTR [rax],0x0
  4027f5:	xor    r12d,r12d
  4027f8:	jmp    402aeb <Mat_VarReadNextInfo@plt+0x7cb>
  4027fd:	mov    rax,QWORD PTR [r14]
  402800:	movsxd rcx,DWORD PTR [r14+0x10]
  402804:	mov    rdx,rax
  402807:	or     rdx,rcx
  40280a:	shr    rdx,0x20
  40280e:	je     402b41 <Mat_VarReadNextInfo@plt+0x821>
  402814:	xor    edx,edx
  402816:	div    rcx
  402819:	mov    rbp,rax
  40281c:	jmp    402b47 <Mat_VarReadNextInfo@plt+0x827>
  402821:	mov    BYTE PTR [rsp+0x27],0x7b
  402826:	mov    r8d,0x1
  40282c:	vmovdqa xmm0,XMMWORD PTR [rip+0x47dc]        # 407010 <getopt_long_only@@Base+0xfd0>
  402834:	cmp    rbx,r15
  402837:	je     402a44 <Mat_VarReadNextInfo@plt+0x724>
  40283d:	mov    rax,r15
  402840:	sub    rax,QWORD PTR [rsp+0x50]
  402845:	add    rax,0xffffffffffffffff
  402849:	mov    r14d,0x1
  40284f:	cmp    rax,0x20
  402853:	jb     402a30 <Mat_VarReadNextInfo@plt+0x710>
  402859:	mov    rcx,rax
  40285c:	and    rcx,0xffffffffffffffe0
  402860:	lea    rdi,[rcx-0x20]
  402864:	mov    rdx,rdi
  402867:	shr    rdx,0x5
  40286b:	add    rdx,0x1
  40286f:	mov    esi,edx
  402871:	and    esi,0x1
  402874:	test   rdi,rdi
  402877:	je     402f47 <Mat_VarReadNextInfo@plt+0xc27>
  40287d:	mov    edi,0x1
  402882:	sub    rdi,rdx
  402885:	add    rdi,rsi
  402888:	add    rdi,0xffffffffffffffff
  40288c:	vpxor  xmm9,xmm9,xmm9
  402891:	xor    edx,edx
  402893:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  40289c:	vpxor  xmm2,xmm2,xmm2
  4028a0:	vpxor  xmm3,xmm3,xmm3
  4028a4:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  4028ad:	mov    rbp,QWORD PTR [rsp+0x50]
  4028b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028bc:	nop    DWORD PTR [rax+0x0]
  4028c0:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x1]
  4028c7:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x9]
  4028ce:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x11]
  4028d5:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x19]
  4028dc:	vpcmpeqw xmm4,xmm4,xmm0
  4028e0:	vpmovzxwd ymm4,xmm4
  4028e5:	vpand  ymm4,ymm4,ymm8
  4028ea:	vpaddd ymm1,ymm1,ymm4
  4028ee:	vpcmpeqw xmm4,xmm5,xmm0
  4028f2:	vpmovzxwd ymm4,xmm4
  4028f7:	vpand  ymm4,ymm4,ymm8
  4028fc:	vpaddd ymm9,ymm9,ymm4
  402900:	vpcmpeqw xmm4,xmm6,xmm0
  402904:	vpmovzxwd ymm4,xmm4
  402909:	vpand  ymm4,ymm4,ymm8
  40290e:	vpaddd ymm2,ymm2,ymm4
  402912:	vpcmpeqw xmm4,xmm7,xmm0
  402916:	vpmovzxwd ymm4,xmm4
  40291b:	vpand  ymm4,ymm4,ymm8
  402920:	vpaddd ymm3,ymm3,ymm4
  402924:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x21]
  40292b:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x29]
  402932:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x31]
  402939:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x39]
  402940:	vpcmpeqw xmm4,xmm4,xmm0
  402944:	vpmovzxwd ymm4,xmm4
  402949:	vpand  ymm4,ymm4,ymm8
  40294e:	vpaddd ymm1,ymm1,ymm4
  402952:	vpcmpeqw xmm4,xmm5,xmm0
  402956:	vpmovzxwd ymm4,xmm4
  40295b:	vpand  ymm4,ymm4,ymm8
  402960:	vpaddd ymm9,ymm9,ymm4
  402964:	vpcmpeqw xmm4,xmm6,xmm0
  402968:	vpmovzxwd ymm4,xmm4
  40296d:	vpand  ymm4,ymm4,ymm8
  402972:	vpaddd ymm2,ymm2,ymm4
  402976:	vpcmpeqw xmm4,xmm7,xmm0
  40297a:	vpmovzxwd ymm4,xmm4
  40297f:	vpand  ymm4,ymm4,ymm8
  402984:	vpaddd ymm3,ymm3,ymm4
  402988:	add    rdx,0x40
  40298c:	add    rdi,0x2
  402990:	jne    4028c0 <Mat_VarReadNextInfo@plt+0x5a0>
  402996:	test   rsi,rsi
  402999:	je     4029fe <Mat_VarReadNextInfo@plt+0x6de>
  40299b:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x18]
  4029a2:	vpcmpeqw xmm4,xmm4,xmm0
  4029a6:	vpmovzxwd ymm4,xmm4
  4029ab:	vpand  ymm4,ymm4,ymm8
  4029b0:	vpaddd ymm3,ymm3,ymm4
  4029b4:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x10]
  4029bb:	vpcmpeqw xmm4,xmm4,xmm0
  4029bf:	vpmovzxwd ymm4,xmm4
  4029c4:	vpand  ymm4,ymm4,ymm8
  4029c9:	vpaddd ymm2,ymm2,ymm4
  4029cd:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x8]
  4029d4:	vpcmpeqw xmm4,xmm4,xmm0
  4029d8:	vpmovzxwd ymm4,xmm4
  4029dd:	vpand  ymm4,ymm4,ymm8
  4029e2:	vpaddd ymm9,ymm9,ymm4
  4029e6:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1]
  4029ec:	vpcmpeqw xmm4,xmm4,xmm0
  4029f0:	vpmovzxwd ymm4,xmm4
  4029f5:	vpand  ymm4,ymm4,ymm8
  4029fa:	vpaddd ymm1,ymm1,ymm4
  4029fe:	vpaddd ymm0,ymm9,ymm3
  402a02:	vpaddd ymm1,ymm1,ymm2
  402a06:	vpaddd ymm0,ymm1,ymm0
  402a0a:	vextracti128 xmm1,ymm0,0x1
  402a10:	vpaddd ymm0,ymm0,ymm1
  402a14:	vpshufd xmm1,xmm0,0x4e
  402a19:	vpaddd ymm0,ymm0,ymm1
  402a1d:	vphaddd ymm0,ymm0,ymm0
  402a22:	vmovd  r14d,xmm0
  402a27:	cmp    rcx,rax
  402a2a:	je     402a44 <Mat_VarReadNextInfo@plt+0x724>
  402a2c:	add    rbx,rcx
  402a2f:	nop
  402a30:	xor    eax,eax
  402a32:	cmp    BYTE PTR [rbx],0x2c
  402a35:	sete   al
  402a38:	add    r14d,eax
  402a3b:	add    rbx,0x1
  402a3f:	cmp    r15,rbx
  402a42:	jne    402a30 <Mat_VarReadNextInfo@plt+0x710>
  402a44:	mov    DWORD PTR [rsp+0x44],r8d
  402a49:	movsxd rbp,r14d
  402a4c:	lea    rbx,[rbp*4+0x0]
  402a54:	mov    rdi,rbx
  402a57:	vzeroupper 
  402a5a:	call   402230 <malloc@plt>
  402a5f:	mov    QWORD PTR [rsp+0x38],rax
  402a64:	mov    rdi,rbx
  402a67:	call   402230 <malloc@plt>
  402a6c:	mov    r12,rax
  402a6f:	mov    rdi,rbx
  402a72:	call   402230 <malloc@plt>
  402a77:	mov    r13,rax
  402a7a:	test   ebp,ebp
  402a7c:	jle    402e0a <Mat_VarReadNextInfo@plt+0xaea>
  402a82:	mov    ebx,r14d
  402a85:	lea    rdx,[rbx*4+0x0]
  402a8d:	xor    esi,esi
  402a8f:	mov    rdi,QWORD PTR [rsp+0x38]
  402a94:	call   4021a0 <memset@plt>
  402a99:	cmp    r14d,0x20
  402a9d:	jae    402aa6 <Mat_VarReadNextInfo@plt+0x786>
  402a9f:	xor    eax,eax
  402aa1:	jmp    402df0 <Mat_VarReadNextInfo@plt+0xad0>
  402aa6:	mov    eax,ebx
  402aa8:	and    eax,0xffffffe0
  402aab:	lea    rsi,[rax-0x20]
  402aaf:	mov    rdx,rsi
  402ab2:	shr    rdx,0x5
  402ab6:	add    rdx,0x1
  402aba:	mov    ecx,edx
  402abc:	and    ecx,0x3
  402abf:	cmp    rsi,0x60
  402ac3:	vmovdqu ymm0,YMMWORD PTR [rsp+0x80]
  402acc:	jae    402c30 <Mat_VarReadNextInfo@plt+0x910>
  402ad2:	xor    edx,edx
  402ad4:	test   rcx,rcx
  402ad7:	jne    402d8a <Mat_VarReadNextInfo@plt+0xa6a>
  402add:	jmp    402de7 <Mat_VarReadNextInfo@plt+0xac7>
  402ae2:	mov    r14b,0x2e
  402ae5:	mov    r12d,0x1
  402aeb:	xor    edx,edx
  402aed:	mov    r13,rbp
  402af0:	mov    rdi,rbp
  402af3:	mov    rsi,rbx
  402af6:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402afb:	test   rax,rax
  402afe:	je     403574 <Mat_VarReadNextInfo@plt+0x1254>
  402b04:	mov    esi,0x1
  402b09:	mov    rdi,rax
  402b0c:	call   402310 <Mat_VarDuplicate@plt>
  402b11:	mov    rbx,rax
  402b14:	mov    rdi,r13
  402b17:	call   402200 <Mat_VarFree@plt>
  402b1c:	test   r12d,r12d
  402b1f:	jne    4038c8 <Mat_VarReadNextInfo@plt+0x15a8>
  402b25:	mov    edx,r14d
  402b28:	mov    r14,rbx
  402b2b:	xor    ecx,ecx
  402b2d:	mov    rax,QWORD PTR [rsp+0x28]
  402b32:	mov    r12,QWORD PTR [rsp+0x48]
  402b37:	mov    r13,QWORD PTR [rsp+0x60]
  402b3c:	jmp    403237 <Mat_VarReadNextInfo@plt+0xf17>
  402b41:	xor    edx,edx
  402b43:	div    ecx
  402b45:	mov    ebp,eax
  402b47:	mov    r13,QWORD PTR [r14+0x38]
  402b4b:	mov    rdi,rbx
  402b4e:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  402b53:	cmp    rax,rbx
  402b56:	je     402b61 <Mat_VarReadNextInfo@plt+0x841>
  402b58:	mov    dl,BYTE PTR [rax]
  402b5a:	mov    BYTE PTR [rax],0x0
  402b5d:	xor    ecx,ecx
  402b5f:	jmp    402b68 <Mat_VarReadNextInfo@plt+0x848>
  402b61:	mov    dl,0x2e
  402b63:	mov    ecx,0x1
  402b68:	test   ebp,ebp
  402b6a:	mov    QWORD PTR [rsp+0x38],rbp
  402b6f:	jle    402c05 <Mat_VarReadNextInfo@plt+0x8e5>
  402b75:	mov    QWORD PTR [rsp+0x28],rax
  402b7a:	mov    DWORD PTR [rsp+0x44],ecx
  402b7e:	mov    BYTE PTR [rsp+0x27],dl
  402b82:	mov    r12,rbx
  402b85:	mov    rdi,r14
  402b88:	movsxd r14,ebp
  402b8b:	xor    ebp,ebp
  402b8d:	nop    DWORD PTR [rax]
  402b90:	mov    esi,ebp
  402b92:	call   4020e0 <Mat_VarGetCell@plt>
  402b97:	test   rax,rax
  402b9a:	je     402c0c <Mat_VarReadNextInfo@plt+0x8ec>
  402b9c:	mov    rbx,rax
  402b9f:	cmp    DWORD PTR [rax+0x14],0x2
  402ba3:	jne    402c0c <Mat_VarReadNextInfo@plt+0x8ec>
  402ba5:	xor    edx,edx
  402ba7:	mov    rdi,rbx
  402baa:	mov    rsi,r12
  402bad:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402bb2:	test   rax,rax
  402bb5:	je     402f76 <Mat_VarReadNextInfo@plt+0xc56>
  402bbb:	mov    esi,0x1
  402bc0:	mov    rdi,rax
  402bc3:	call   402310 <Mat_VarDuplicate@plt>
  402bc8:	mov    r15,rax
  402bcb:	mov    rdi,rbx
  402bce:	call   402200 <Mat_VarFree@plt>
  402bd3:	mov    QWORD PTR [r13+rbp*8+0x0],r15
  402bd8:	mov    r15,QWORD PTR [rsp+0x68]
  402bdd:	add    rbp,0x1
  402be1:	cmp    rbp,r14
  402be4:	mov    rdi,QWORD PTR [rsp+0x30]
  402be9:	jl     402b90 <Mat_VarReadNextInfo@plt+0x870>
  402beb:	mov    r12,QWORD PTR [rsp+0x48]
  402bf0:	mov    dl,BYTE PTR [rsp+0x27]
  402bf4:	mov    ecx,DWORD PTR [rsp+0x44]
  402bf8:	mov    rax,QWORD PTR [rsp+0x28]
  402bfd:	mov    r14,rdi
  402c00:	jmp    402fac <Mat_VarReadNextInfo@plt+0xc8c>
  402c05:	xor    ebp,ebp
  402c07:	jmp    402fac <Mat_VarReadNextInfo@plt+0xc8c>
  402c0c:	mov    rax,QWORD PTR [rip+0x73e5]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  402c13:	mov    rdi,QWORD PTR [rax]
  402c16:	xor    eax,eax
  402c18:	lea    rsi,[rip+0x4c13]        # 407832 <getopt_long_only@@Base+0x17f2>
  402c1f:	mov    edx,ebp
  402c21:	call   4021e0 <fprintf@plt>
  402c26:	mov    r14,QWORD PTR [rsp+0x30]
  402c2b:	jmp    402f9a <Mat_VarReadNextInfo@plt+0xc7a>
  402c30:	mov    esi,0x1
  402c35:	sub    rsi,rdx
  402c38:	add    rsi,rcx
  402c3b:	add    rsi,0xffffffffffffffff
  402c3f:	xor    edx,edx
  402c41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c50:	vmovdqu YMMWORD PTR [r12+rdx*4],ymm0
  402c56:	vmovdqu YMMWORD PTR [r12+rdx*4+0x20],ymm0
  402c5d:	vmovdqu YMMWORD PTR [r12+rdx*4+0x40],ymm0
  402c64:	vmovdqu YMMWORD PTR [r12+rdx*4+0x60],ymm0
  402c6b:	vmovdqu YMMWORD PTR [r13+rdx*4+0x0],ymm0
  402c72:	vmovdqu YMMWORD PTR [r13+rdx*4+0x20],ymm0
  402c79:	vmovdqu YMMWORD PTR [r13+rdx*4+0x40],ymm0
  402c80:	vmovdqu YMMWORD PTR [r13+rdx*4+0x60],ymm0
  402c87:	vmovdqu YMMWORD PTR [r12+rdx*4+0x80],ymm0
  402c91:	vmovdqu YMMWORD PTR [r12+rdx*4+0xa0],ymm0
  402c9b:	vmovdqu YMMWORD PTR [r12+rdx*4+0xc0],ymm0
  402ca5:	vmovdqu YMMWORD PTR [r12+rdx*4+0xe0],ymm0
  402caf:	vmovdqu YMMWORD PTR [r13+rdx*4+0x80],ymm0
  402cb9:	vmovdqu YMMWORD PTR [r13+rdx*4+0xa0],ymm0
  402cc3:	vmovdqu YMMWORD PTR [r13+rdx*4+0xc0],ymm0
  402ccd:	vmovdqu YMMWORD PTR [r13+rdx*4+0xe0],ymm0
  402cd7:	vmovdqu YMMWORD PTR [r12+rdx*4+0x100],ymm0
  402ce1:	vmovdqu YMMWORD PTR [r12+rdx*4+0x120],ymm0
  402ceb:	vmovdqu YMMWORD PTR [r12+rdx*4+0x140],ymm0
  402cf5:	vmovdqu YMMWORD PTR [r12+rdx*4+0x160],ymm0
  402cff:	vmovdqu YMMWORD PTR [r13+rdx*4+0x100],ymm0
  402d09:	vmovdqu YMMWORD PTR [r13+rdx*4+0x120],ymm0
  402d13:	vmovdqu YMMWORD PTR [r13+rdx*4+0x140],ymm0
  402d1d:	vmovdqu YMMWORD PTR [r13+rdx*4+0x160],ymm0
  402d27:	vmovdqu YMMWORD PTR [r12+rdx*4+0x180],ymm0
  402d31:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1a0],ymm0
  402d3b:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1c0],ymm0
  402d45:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1e0],ymm0
  402d4f:	vmovdqu YMMWORD PTR [r13+rdx*4+0x180],ymm0
  402d59:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1a0],ymm0
  402d63:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1c0],ymm0
  402d6d:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1e0],ymm0
  402d77:	sub    rdx,0xffffffffffffff80
  402d7b:	add    rsi,0x4
  402d7f:	jne    402c50 <Mat_VarReadNextInfo@plt+0x930>
  402d85:	test   rcx,rcx
  402d88:	je     402de7 <Mat_VarReadNextInfo@plt+0xac7>
  402d8a:	lea    rsi,[rdx*4+0x60]
  402d92:	add    rsi,r13
  402d95:	lea    rdx,[r12+rdx*4]
  402d99:	add    rdx,0x60
  402d9d:	shl    rcx,0x7
  402da1:	xor    edi,edi
  402da3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dad:	nop    DWORD PTR [rax]
  402db0:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x60],ymm0
  402db6:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x40],ymm0
  402dbc:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x20],ymm0
  402dc2:	vmovdqu YMMWORD PTR [rdx+rdi*1],ymm0
  402dc7:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x60],ymm0
  402dcd:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x40],ymm0
  402dd3:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x20],ymm0
  402dd9:	vmovdqu YMMWORD PTR [rsi+rdi*1],ymm0
  402dde:	sub    rdi,0xffffffffffffff80
  402de2:	cmp    rcx,rdi
  402de5:	jne    402db0 <Mat_VarReadNextInfo@plt+0xa90>
  402de7:	cmp    rax,rbx
  402dea:	je     402e0a <Mat_VarReadNextInfo@plt+0xaea>
  402dec:	nop    DWORD PTR [rax+0x0]
  402df0:	mov    DWORD PTR [r12+rax*4],0x1
  402df8:	mov    DWORD PTR [r13+rax*4+0x0],0x1
  402e01:	add    rax,0x1
  402e05:	cmp    rbx,rax
  402e08:	jne    402df0 <Mat_VarReadNextInfo@plt+0xad0>
  402e0a:	mov    rdi,QWORD PTR [rsp+0x50]
  402e0f:	mov    rsi,r15
  402e12:	mov    rbx,QWORD PTR [rsp+0x38]
  402e17:	mov    rdx,rbx
  402e1a:	mov    rcx,r12
  402e1d:	mov    r8,r13
  402e20:	vzeroupper 
  402e23:	call   404f30 <Mat_VarReadNextInfo@plt+0x2c10>
  402e28:	mov    edi,r14d
  402e2b:	mov    rsi,rbx
  402e2e:	mov    rdx,r12
  402e31:	mov    rcx,r13
  402e34:	mov    r8,QWORD PTR [rsp+0x30]
  402e39:	mov    rbp,r8
  402e3c:	call   4051a0 <Mat_VarReadNextInfo@plt+0x2e80>
  402e41:	test   eax,eax
  402e43:	je     4026db <Mat_VarReadNextInfo@plt+0x3bb>
  402e49:	mov    ebx,eax
  402e4b:	cmp    r14d,0x1
  402e4f:	jne    402e9c <Mat_VarReadNextInfo@plt+0xb7c>
  402e51:	mov    rax,QWORD PTR [rsp+0x38]
  402e56:	mov    esi,DWORD PTR [rax]
  402e58:	mov    edx,DWORD PTR [r12]
  402e5c:	mov    ecx,DWORD PTR [r13+0x0]
  402e60:	mov    r14,rbp
  402e63:	mov    rdi,rbp
  402e66:	call   402290 <Mat_VarGetCellsLinear@plt>
  402e6b:	mov    r15,rax
  402e6e:	cmp    DWORD PTR [rbp+0x8],0x2
  402e72:	mov    rax,QWORD PTR [rbp+0x28]
  402e76:	jne    402f2a <Mat_VarReadNextInfo@plt+0xc0a>
  402e7c:	cmp    QWORD PTR [rax],0x1
  402e80:	jne    402f23 <Mat_VarReadNextInfo@plt+0xc03>
  402e86:	movsxd rcx,DWORD PTR [r13+0x0]
  402e8a:	mov    QWORD PTR [rax+0x8],rcx
  402e8e:	test   r15,r15
  402e91:	jne    40318b <Mat_VarReadNextInfo@plt+0xe6b>
  402e97:	jmp    402706 <Mat_VarReadNextInfo@plt+0x3e6>
  402e9c:	mov    DWORD PTR [rsp+0x50],ebx
  402ea0:	mov    rbx,rbp
  402ea3:	mov    rdi,rbp
  402ea6:	mov    rsi,QWORD PTR [rsp+0x38]
  402eab:	mov    rdx,r12
  402eae:	mov    rcx,r13
  402eb1:	call   4020c0 <Mat_VarGetCells@plt>
  402eb6:	mov    r15,rax
  402eb9:	test   r14d,r14d
  402ebc:	jle    402ed9 <Mat_VarReadNextInfo@plt+0xbb9>
  402ebe:	mov    rax,QWORD PTR [rbx+0x28]
  402ec2:	mov    ecx,r14d
  402ec5:	cmp    r14d,0x10
  402ec9:	jae    402eee <Mat_VarReadNextInfo@plt+0xbce>
  402ecb:	xor    edx,edx
  402ecd:	mov    r14,rbp
  402ed0:	mov    ebx,DWORD PTR [rsp+0x50]
  402ed4:	jmp    403170 <Mat_VarReadNextInfo@plt+0xe50>
  402ed9:	mov    r14,rbx
  402edc:	mov    ebx,DWORD PTR [rsp+0x50]
  402ee0:	test   r15,r15
  402ee3:	jne    40318b <Mat_VarReadNextInfo@plt+0xe6b>
  402ee9:	jmp    402706 <Mat_VarReadNextInfo@plt+0x3e6>
  402eee:	mov    edx,ecx
  402ef0:	and    edx,0xfffffff0
  402ef3:	lea    rdi,[rdx-0x10]
  402ef7:	mov    rsi,rdi
  402efa:	shr    rsi,0x4
  402efe:	add    rsi,0x1
  402f02:	mov    r8d,esi
  402f05:	and    r8d,0x3
  402f09:	cmp    rdi,0x30
  402f0d:	jae    402fc0 <Mat_VarReadNextInfo@plt+0xca0>
  402f13:	xor    edi,edi
  402f15:	test   r8,r8
  402f18:	jne    4030fe <Mat_VarReadNextInfo@plt+0xdde>
  402f1e:	jmp    40315b <Mat_VarReadNextInfo@plt+0xe3b>
  402f23:	cmp    QWORD PTR [rax+0x8],0x1
  402f28:	je     402f32 <Mat_VarReadNextInfo@plt+0xc12>
  402f2a:	mov    DWORD PTR [r14+0x8],0x1
  402f32:	movsxd rcx,DWORD PTR [r13+0x0]
  402f36:	mov    QWORD PTR [rax],rcx
  402f39:	test   r15,r15
  402f3c:	jne    40318b <Mat_VarReadNextInfo@plt+0xe6b>
  402f42:	jmp    402706 <Mat_VarReadNextInfo@plt+0x3e6>
  402f47:	vpxor  xmm9,xmm9,xmm9
  402f4c:	xor    edx,edx
  402f4e:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  402f57:	vpxor  xmm2,xmm2,xmm2
  402f5b:	vpxor  xmm3,xmm3,xmm3
  402f5f:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  402f68:	test   rsi,rsi
  402f6b:	jne    40299b <Mat_VarReadNextInfo@plt+0x67b>
  402f71:	jmp    4029fe <Mat_VarReadNextInfo@plt+0x6de>
  402f76:	mov    rax,QWORD PTR [rip+0x707b]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  402f7d:	mov    rdi,QWORD PTR [rax]
  402f80:	mov    r14,QWORD PTR [rsp+0x30]
  402f85:	mov    rcx,QWORD PTR [r14+0x30]
  402f89:	xor    eax,eax
  402f8b:	lea    rsi,[rip+0x4879]        # 40780b <getopt_long_only@@Base+0x17cb>
  402f92:	mov    rdx,r12
  402f95:	call   4021e0 <fprintf@plt>
  402f9a:	mov    r12,QWORD PTR [rsp+0x48]
  402f9f:	mov    dl,BYTE PTR [rsp+0x27]
  402fa3:	mov    ecx,DWORD PTR [rsp+0x44]
  402fa7:	mov    rax,QWORD PTR [rsp+0x28]
  402fac:	cmp    ebp,DWORD PTR [rsp+0x38]
  402fb0:	mov    r13,QWORD PTR [rsp+0x60]
  402fb5:	je     403237 <Mat_VarReadNextInfo@plt+0xf17>
  402fbb:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  402fc0:	mov    edi,0x1
  402fc5:	sub    rdi,rsi
  402fc8:	lea    rsi,[r8+rdi*1]
  402fcc:	add    rsi,0xffffffffffffffff
  402fd0:	xor    edi,edi
  402fd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fdc:	nop    DWORD PTR [rax+0x0]
  402fe0:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x0]
  402fe7:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x10]
  402fee:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0x20]
  402ff5:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0x30]
  402ffc:	vmovdqu YMMWORD PTR [rax+rdi*8],ymm0
  403001:	vmovdqu YMMWORD PTR [rax+rdi*8+0x20],ymm1
  403007:	vmovdqu YMMWORD PTR [rax+rdi*8+0x40],ymm2
  40300d:	vmovdqu YMMWORD PTR [rax+rdi*8+0x60],ymm3
  403013:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x40]
  40301a:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x50]
  403021:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0x60]
  403028:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0x70]
  40302f:	vmovdqu YMMWORD PTR [rax+rdi*8+0x80],ymm0
  403038:	vmovdqu YMMWORD PTR [rax+rdi*8+0xa0],ymm1
  403041:	vmovdqu YMMWORD PTR [rax+rdi*8+0xc0],ymm2
  40304a:	vmovdqu YMMWORD PTR [rax+rdi*8+0xe0],ymm3
  403053:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x80]
  40305d:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x90]
  403067:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0xa0]
  403071:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0xb0]
  40307b:	vmovdqu YMMWORD PTR [rax+rdi*8+0x100],ymm0
  403084:	vmovdqu YMMWORD PTR [rax+rdi*8+0x120],ymm1
  40308d:	vmovdqu YMMWORD PTR [rax+rdi*8+0x140],ymm2
  403096:	vmovdqu YMMWORD PTR [rax+rdi*8+0x160],ymm3
  40309f:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0xc0]
  4030a9:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0xd0]
  4030b3:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0xe0]
  4030bd:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0xf0]
  4030c7:	vmovdqu YMMWORD PTR [rax+rdi*8+0x180],ymm0
  4030d0:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1a0],ymm1
  4030d9:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1c0],ymm2
  4030e2:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1e0],ymm3
  4030eb:	add    rdi,0x40
  4030ef:	add    rsi,0x4
  4030f3:	jne    402fe0 <Mat_VarReadNextInfo@plt+0xcc0>
  4030f9:	test   r8,r8
  4030fc:	je     40315b <Mat_VarReadNextInfo@plt+0xe3b>
  4030fe:	lea    rsi,[rax+rdi*8]
  403102:	add    rsi,0x60
  403106:	lea    rdi,[rdi*4+0x30]
  40310e:	add    rdi,r13
  403111:	shl    r8,0x6
  403115:	xor    ebx,ebx
  403117:	nop    WORD PTR [rax+rax*1+0x0]
  403120:	vpmovsxdq ymm0,XMMWORD PTR [rdi+rbx*1-0x30]
  403127:	vpmovsxdq ymm1,XMMWORD PTR [rdi+rbx*1-0x20]
  40312e:	vpmovsxdq ymm2,XMMWORD PTR [rdi+rbx*1-0x10]
  403135:	vpmovsxdq ymm3,XMMWORD PTR [rdi+rbx*1]
  40313b:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x60],ymm0
  403141:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x40],ymm1
  403147:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x20],ymm2
  40314d:	vmovdqu YMMWORD PTR [rsi+rbx*2],ymm3
  403152:	add    rbx,0x40
  403156:	cmp    r8,rbx
  403159:	jne    403120 <Mat_VarReadNextInfo@plt+0xe00>
  40315b:	cmp    rdx,rcx
  40315e:	mov    r14,QWORD PTR [rsp+0x30]
  403163:	mov    ebx,DWORD PTR [rsp+0x50]
  403167:	je     403182 <Mat_VarReadNextInfo@plt+0xe62>
  403169:	nop    DWORD PTR [rax+0x0]
  403170:	movsxd rsi,DWORD PTR [r13+rdx*4+0x0]
  403175:	mov    QWORD PTR [rax+rdx*8],rsi
  403179:	add    rdx,0x1
  40317d:	cmp    rcx,rdx
  403180:	jne    403170 <Mat_VarReadNextInfo@plt+0xe50>
  403182:	test   r15,r15
  403185:	je     402706 <Mat_VarReadNextInfo@plt+0x3e6>
  40318b:	test   ebx,ebx
  40318d:	jle    4031be <Mat_VarReadNextInfo@plt+0xe9e>
  40318f:	mov    ebp,ebx
  403191:	xor    ebx,ebx
  403193:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40319d:	nop    DWORD PTR [rax]
  4031a0:	mov    rdi,QWORD PTR [r15+rbx*8]
  4031a4:	mov    esi,0x1
  4031a9:	vzeroupper 
  4031ac:	call   402310 <Mat_VarDuplicate@plt>
  4031b1:	mov    QWORD PTR [r15+rbx*8],rax
  4031b5:	add    rbx,0x1
  4031b9:	cmp    rbp,rbx
  4031bc:	jne    4031a0 <Mat_VarReadNextInfo@plt+0xe80>
  4031be:	mov    rbx,QWORD PTR [rsp+0x30]
  4031c3:	mov    rdi,QWORD PTR [rbx+0x30]
  4031c7:	mov    ecx,DWORD PTR [rbx+0x8]
  4031ca:	mov    r8,QWORD PTR [rbx+0x28]
  4031ce:	mov    DWORD PTR [rsp],0x1
  4031d5:	mov    esi,0x1
  4031da:	mov    edx,0x15
  4031df:	mov    r9,r15
  4031e2:	vzeroupper 
  4031e5:	call   4020f0 <Mat_VarCreate@plt>
  4031ea:	mov    r14,rax
  4031ed:	mov    rdi,rbx
  4031f0:	call   402200 <Mat_VarFree@plt>
  4031f5:	mov    r15b,0x1
  4031f8:	mov    rdi,QWORD PTR [rsp+0x38]
  4031fd:	call   402060 <free@plt>
  403202:	mov    rdi,r12
  403205:	call   402060 <free@plt>
  40320a:	mov    rdi,r13
  40320d:	call   402060 <free@plt>
  403212:	test   r15b,r15b
  403215:	mov    r12,QWORD PTR [rsp+0x48]
  40321a:	mov    r13,QWORD PTR [rsp+0x60]
  40321f:	mov    r15,QWORD PTR [rsp+0x68]
  403224:	mov    dl,BYTE PTR [rsp+0x27]
  403228:	mov    ecx,DWORD PTR [rsp+0x44]
  40322c:	mov    rax,QWORD PTR [rsp+0x28]
  403231:	je     403b90 <Mat_VarReadNextInfo@plt+0x1870>
  403237:	mov    rbx,rax
  40323a:	test   ecx,ecx
  40323c:	je     402740 <Mat_VarReadNextInfo@plt+0x420>
  403242:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  403247:	lea    r13,[rbx+0x1]
  40324b:	mov    esi,0x29
  403250:	mov    rdi,r13
  403253:	call   402150 <strchr@plt>
  403258:	mov    rbp,rax
  40325b:	lea    r14,[rax+0x1]
  40325f:	mov    rdi,r14
  403262:	call   404db0 <Mat_VarReadNextInfo@plt+0x2a90>
  403267:	cmp    rax,r14
  40326a:	jne    40397f <Mat_VarReadNextInfo@plt+0x165f>
  403270:	cmp    r13,rbp
  403273:	mov    rcx,rbp
  403276:	mov    QWORD PTR [rsp+0x50],rbx
  40327b:	je     4034cd <Mat_VarReadNextInfo@plt+0x11ad>
  403281:	mov    rax,rcx
  403284:	sub    rax,rbx
  403287:	add    rax,0xffffffffffffffff
  40328b:	mov    r14d,0x1
  403291:	cmp    rax,0x20
  403295:	jb     403470 <Mat_VarReadNextInfo@plt+0x1150>
  40329b:	mov    rbx,rax
  40329e:	and    rbx,0xffffffffffffffe0
  4032a2:	lea    rdi,[rbx-0x20]
  4032a6:	mov    rdx,rdi
  4032a9:	shr    rdx,0x5
  4032ad:	add    rdx,0x1
  4032b1:	mov    esi,edx
  4032b3:	and    esi,0x1
  4032b6:	test   rdi,rdi
  4032b9:	je     4038e5 <Mat_VarReadNextInfo@plt+0x15c5>
  4032bf:	mov    edi,0x1
  4032c4:	sub    rdi,rdx
  4032c7:	add    rdi,rsi
  4032ca:	add    rdi,0xffffffffffffffff
  4032ce:	vpxor  xmm9,xmm9,xmm9
  4032d3:	xor    edx,edx
  4032d5:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  4032de:	vpxor  xmm2,xmm2,xmm2
  4032e2:	vpxor  xmm3,xmm3,xmm3
  4032e6:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  4032ef:	vmovdqa xmm0,XMMWORD PTR [rip+0x3d19]        # 407010 <getopt_long_only@@Base+0xfd0>
  4032f7:	mov    rbp,QWORD PTR [rsp+0x50]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x1]
  403307:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x9]
  40330e:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x11]
  403315:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x19]
  40331c:	vpcmpeqw xmm4,xmm4,xmm0
  403320:	vpmovzxwd ymm4,xmm4
  403325:	vpand  ymm4,ymm4,ymm8
  40332a:	vpaddd ymm1,ymm1,ymm4
  40332e:	vpcmpeqw xmm4,xmm5,xmm0
  403332:	vpmovzxwd ymm4,xmm4
  403337:	vpand  ymm4,ymm4,ymm8
  40333c:	vpaddd ymm9,ymm9,ymm4
  403340:	vpcmpeqw xmm4,xmm6,xmm0
  403344:	vpmovzxwd ymm4,xmm4
  403349:	vpand  ymm4,ymm4,ymm8
  40334e:	vpaddd ymm2,ymm2,ymm4
  403352:	vpcmpeqw xmm4,xmm7,xmm0
  403356:	vpmovzxwd ymm4,xmm4
  40335b:	vpand  ymm4,ymm4,ymm8
  403360:	vpaddd ymm3,ymm3,ymm4
  403364:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x21]
  40336b:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x29]
  403372:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x31]
  403379:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x39]
  403380:	vpcmpeqw xmm4,xmm4,xmm0
  403384:	vpmovzxwd ymm4,xmm4
  403389:	vpand  ymm4,ymm4,ymm8
  40338e:	vpaddd ymm1,ymm1,ymm4
  403392:	vpcmpeqw xmm4,xmm5,xmm0
  403396:	vpmovzxwd ymm4,xmm4
  40339b:	vpand  ymm4,ymm4,ymm8
  4033a0:	vpaddd ymm9,ymm9,ymm4
  4033a4:	vpcmpeqw xmm4,xmm6,xmm0
  4033a8:	vpmovzxwd ymm4,xmm4
  4033ad:	vpand  ymm4,ymm4,ymm8
  4033b2:	vpaddd ymm2,ymm2,ymm4
  4033b6:	vpcmpeqw xmm4,xmm7,xmm0
  4033ba:	vpmovzxwd ymm4,xmm4
  4033bf:	vpand  ymm4,ymm4,ymm8
  4033c4:	vpaddd ymm3,ymm3,ymm4
  4033c8:	add    rdx,0x40
  4033cc:	add    rdi,0x2
  4033d0:	jne    403300 <Mat_VarReadNextInfo@plt+0xfe0>
  4033d6:	test   rsi,rsi
  4033d9:	je     40343f <Mat_VarReadNextInfo@plt+0x111f>
  4033db:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x18]
  4033e2:	vpcmpeqw xmm4,xmm4,xmm0
  4033e6:	vpmovzxwd ymm4,xmm4
  4033eb:	vpand  ymm4,ymm4,ymm8
  4033f0:	vpaddd ymm3,ymm3,ymm4
  4033f4:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x10]
  4033fb:	vpcmpeqw xmm4,xmm4,xmm0
  4033ff:	vpmovzxwd ymm4,xmm4
  403404:	vpand  ymm4,ymm4,ymm8
  403409:	vpaddd ymm2,ymm2,ymm4
  40340d:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x8]
  403414:	vpcmpeqw xmm4,xmm4,xmm0
  403418:	vpmovzxwd ymm4,xmm4
  40341d:	vpand  ymm4,ymm4,ymm8
  403422:	vpaddd ymm9,ymm9,ymm4
  403426:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x0]
  40342d:	vpcmpeqw xmm4,xmm4,xmm0
  403431:	vpmovzxwd ymm4,xmm4
  403436:	vpand  ymm4,ymm4,ymm8
  40343b:	vpaddd ymm1,ymm1,ymm4
  40343f:	vpaddd ymm0,ymm9,ymm3
  403443:	vpaddd ymm1,ymm1,ymm2
  403447:	vpaddd ymm0,ymm1,ymm0
  40344b:	vextracti128 xmm1,ymm0,0x1
  403451:	vpaddd ymm0,ymm0,ymm1
  403455:	vpshufd xmm1,xmm0,0x4e
  40345a:	vpaddd ymm0,ymm0,ymm1
  40345e:	vphaddd ymm0,ymm0,ymm0
  403463:	vmovd  r14d,xmm0
  403468:	cmp    rbx,rax
  40346b:	je     4034d3 <Mat_VarReadNextInfo@plt+0x11b3>
  40346d:	add    r13,rbx
  403470:	xor    eax,eax
  403472:	cmp    BYTE PTR [r13+0x0],0x2c
  403477:	sete   al
  40347a:	add    r14d,eax
  40347d:	add    r13,0x1
  403481:	cmp    rcx,r13
  403484:	jne    403470 <Mat_VarReadNextInfo@plt+0x1150>
  403486:	jmp    4034d3 <Mat_VarReadNextInfo@plt+0x11b3>
  403488:	mov    rax,QWORD PTR [rip+0x6b69]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  40348f:	mov    rcx,QWORD PTR [rax]
  403492:	mov    esi,0x22
  403497:	mov    edx,0x1
  40349c:	lea    rdi,[rip+0x43c6]        # 407869 <getopt_long_only@@Base+0x1829>
  4034a3:	call   4022f0 <fwrite@plt>
  4034a8:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4034ad:	mov    rax,QWORD PTR [rip+0x6b44]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4034b4:	mov    rdi,QWORD PTR [rax]
  4034b7:	xor    eax,eax
  4034b9:	lea    rsi,[rip+0x4393]        # 407853 <getopt_long_only@@Base+0x1813>
  4034c0:	mov    rdx,rbx
  4034c3:	call   4021e0 <fprintf@plt>
  4034c8:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4034cd:	mov    r14d,0x1
  4034d3:	mov    QWORD PTR [rsp+0x28],rcx
  4034d8:	movsxd r15,r14d
  4034db:	lea    rbx,[r15*4+0x0]
  4034e3:	mov    rdi,rbx
  4034e6:	vzeroupper 
  4034e9:	call   402230 <malloc@plt>
  4034ee:	mov    QWORD PTR [rsp+0x38],rax
  4034f3:	mov    rdi,rbx
  4034f6:	call   402230 <malloc@plt>
  4034fb:	mov    rbp,rax
  4034fe:	mov    rdi,rbx
  403501:	call   402230 <malloc@plt>
  403506:	mov    rbx,rax
  403509:	test   r15d,r15d
  40350c:	mov    r13,QWORD PTR [rsp+0x60]
  403511:	jle    403758 <Mat_VarReadNextInfo@plt+0x1438>
  403517:	mov    r15d,r14d
  40351a:	lea    rdx,[r15*4+0x0]
  403522:	xor    esi,esi
  403524:	mov    rdi,QWORD PTR [rsp+0x38]
  403529:	call   4021a0 <memset@plt>
  40352e:	cmp    r14d,0x20
  403532:	jae    40353b <Mat_VarReadNextInfo@plt+0x121b>
  403534:	xor    eax,eax
  403536:	jmp    403740 <Mat_VarReadNextInfo@plt+0x1420>
  40353b:	mov    eax,r15d
  40353e:	and    eax,0xffffffe0
  403541:	lea    rsi,[rax-0x20]
  403545:	mov    rdx,rsi
  403548:	shr    rdx,0x5
  40354c:	add    rdx,0x1
  403550:	mov    ecx,edx
  403552:	and    ecx,0x3
  403555:	cmp    rsi,0x60
  403559:	vmovdqu ymm0,YMMWORD PTR [rsp+0x80]
  403562:	jae    4035a5 <Mat_VarReadNextInfo@plt+0x1285>
  403564:	xor    edx,edx
  403566:	test   rcx,rcx
  403569:	jne    4036da <Mat_VarReadNextInfo@plt+0x13ba>
  40356f:	jmp    403737 <Mat_VarReadNextInfo@plt+0x1417>
  403574:	mov    rax,QWORD PTR [rip+0x6a7d]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  40357b:	mov    rdi,QWORD PTR [rax]
  40357e:	mov    rcx,QWORD PTR [r13+0x30]
  403582:	xor    eax,eax
  403584:	lea    rsi,[rip+0x4280]        # 40780b <getopt_long_only@@Base+0x17cb>
  40358b:	mov    rdx,rbx
  40358e:	call   4021e0 <fprintf@plt>
  403593:	mov    r12,QWORD PTR [rsp+0x48]
  403598:	mov    r14,r13
  40359b:	mov    r13,QWORD PTR [rsp+0x60]
  4035a0:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4035a5:	mov    esi,0x1
  4035aa:	sub    rsi,rdx
  4035ad:	add    rsi,rcx
  4035b0:	add    rsi,0xffffffffffffffff
  4035b4:	xor    edx,edx
  4035b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035c0:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x0],ymm0
  4035c6:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x20],ymm0
  4035cc:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x40],ymm0
  4035d2:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x60],ymm0
  4035d8:	vmovdqu YMMWORD PTR [rbx+rdx*4],ymm0
  4035dd:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x20],ymm0
  4035e3:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x40],ymm0
  4035e9:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x60],ymm0
  4035ef:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x80],ymm0
  4035f8:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xa0],ymm0
  403601:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xc0],ymm0
  40360a:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xe0],ymm0
  403613:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x80],ymm0
  40361c:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xa0],ymm0
  403625:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xc0],ymm0
  40362e:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xe0],ymm0
  403637:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x100],ymm0
  403640:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x120],ymm0
  403649:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x140],ymm0
  403652:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x160],ymm0
  40365b:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x100],ymm0
  403664:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x120],ymm0
  40366d:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x140],ymm0
  403676:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x160],ymm0
  40367f:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x180],ymm0
  403688:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1a0],ymm0
  403691:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1c0],ymm0
  40369a:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1e0],ymm0
  4036a3:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x180],ymm0
  4036ac:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1a0],ymm0
  4036b5:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1c0],ymm0
  4036be:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1e0],ymm0
  4036c7:	sub    rdx,0xffffffffffffff80
  4036cb:	add    rsi,0x4
  4036cf:	jne    4035c0 <Mat_VarReadNextInfo@plt+0x12a0>
  4036d5:	test   rcx,rcx
  4036d8:	je     403737 <Mat_VarReadNextInfo@plt+0x1417>
  4036da:	lea    rsi,[rbx+rdx*4]
  4036de:	add    rsi,0x60
  4036e2:	lea    rdx,[rdx*4+0x60]
  4036ea:	add    rdx,rbp
  4036ed:	shl    rcx,0x7
  4036f1:	xor    edi,edi
  4036f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036fd:	nop    DWORD PTR [rax]
  403700:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x60],ymm0
  403706:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x40],ymm0
  40370c:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x20],ymm0
  403712:	vmovdqu YMMWORD PTR [rdx+rdi*1],ymm0
  403717:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x60],ymm0
  40371d:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x40],ymm0
  403723:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x20],ymm0
  403729:	vmovdqu YMMWORD PTR [rsi+rdi*1],ymm0
  40372e:	sub    rdi,0xffffffffffffff80
  403732:	cmp    rcx,rdi
  403735:	jne    403700 <Mat_VarReadNextInfo@plt+0x13e0>
  403737:	cmp    rax,r15
  40373a:	je     403758 <Mat_VarReadNextInfo@plt+0x1438>
  40373c:	nop    DWORD PTR [rax+0x0]
  403740:	mov    DWORD PTR [rbp+rax*4+0x0],0x1
  403748:	mov    DWORD PTR [rbx+rax*4],0x1
  40374f:	add    rax,0x1
  403753:	cmp    r15,rax
  403756:	jne    403740 <Mat_VarReadNextInfo@plt+0x1420>
  403758:	mov    rdi,QWORD PTR [rsp+0x50]
  40375d:	mov    rsi,QWORD PTR [rsp+0x28]
  403762:	mov    r15,QWORD PTR [rsp+0x38]
  403767:	mov    rdx,r15
  40376a:	mov    rcx,rbp
  40376d:	mov    r8,rbx
  403770:	vzeroupper 
  403773:	call   404f30 <Mat_VarReadNextInfo@plt+0x2c10>
  403778:	mov    edi,r14d
  40377b:	mov    rsi,r15
  40377e:	mov    rdx,rbp
  403781:	mov    rcx,rbx
  403784:	mov    r8,QWORD PTR [rsp+0x30]
  403789:	call   4051a0 <Mat_VarReadNextInfo@plt+0x2e80>
  40378e:	test   eax,eax
  403790:	je     403b61 <Mat_VarReadNextInfo@plt+0x1841>
  403796:	mov    r15,QWORD PTR [rsp+0x30]
  40379b:	mov    edi,DWORD PTR [r15+0x14]
  40379f:	mov    DWORD PTR [rsp+0x28],eax
  4037a3:	call   4022d0 <Mat_SizeOfClass@plt>
  4037a8:	mov    DWORD PTR [r15+0x10],eax
  4037ac:	movsxd rcx,DWORD PTR [rsp+0x28]
  4037b1:	movsxd rdi,eax
  4037b4:	imul   rdi,rcx
  4037b8:	mov    QWORD PTR [r15],rdi
  4037bb:	cmp    DWORD PTR [r15+0x18],0x0
  4037c0:	je     40388e <Mat_VarReadNextInfo@plt+0x156e>
  4037c6:	mov    edi,0x10
  4037cb:	call   402230 <malloc@plt>
  4037d0:	mov    QWORD PTR [rsp+0x28],rax
  4037d5:	mov    QWORD PTR [r15+0x38],rax
  4037d9:	mov    rdi,QWORD PTR [r15]
  4037dc:	call   402230 <malloc@plt>
  4037e1:	mov    rcx,QWORD PTR [rsp+0x28]
  4037e6:	mov    QWORD PTR [rcx],rax
  4037e9:	mov    rdi,QWORD PTR [r15]
  4037ec:	call   402230 <malloc@plt>
  4037f1:	mov    rcx,QWORD PTR [rsp+0x28]
  4037f6:	mov    QWORD PTR [rcx+0x8],rax
  4037fa:	mov    rdx,QWORD PTR [r15+0x38]
  4037fe:	test   rdx,rdx
  403801:	je     4038a3 <Mat_VarReadNextInfo@plt+0x1583>
  403807:	cmp    r14d,0x1
  40380b:	jne    403850 <Mat_VarReadNextInfo@plt+0x1530>
  40380d:	mov    rax,QWORD PTR [rsp+0x38]
  403812:	mov    ecx,DWORD PTR [rax]
  403814:	mov    r8d,DWORD PTR [rbp+0x0]
  403818:	mov    r9d,DWORD PTR [rbx]
  40381b:	mov    rdi,r13
  40381e:	mov    r14,QWORD PTR [rsp+0x30]
  403823:	mov    rsi,r14
  403826:	call   402110 <Mat_VarReadDataLinear@plt>
  40382b:	cmp    DWORD PTR [r14+0x8],0x2
  403830:	mov    rax,QWORD PTR [r14+0x28]
  403834:	jne    403960 <Mat_VarReadNextInfo@plt+0x1640>
  40383a:	cmp    QWORD PTR [rax],0x1
  40383e:	jne    40394e <Mat_VarReadNextInfo@plt+0x162e>
  403844:	movsxd rcx,DWORD PTR [rbx]
  403847:	mov    QWORD PTR [rax+0x8],rcx
  40384b:	jmp    403b61 <Mat_VarReadNextInfo@plt+0x1841>
  403850:	mov    rdi,r13
  403853:	mov    rsi,QWORD PTR [rsp+0x30]
  403858:	mov    rcx,QWORD PTR [rsp+0x38]
  40385d:	mov    r8,rbp
  403860:	mov    r9,rbx
  403863:	call   402140 <Mat_VarReadData@plt>
  403868:	test   r14d,r14d
  40386b:	jle    403b61 <Mat_VarReadNextInfo@plt+0x1841>
  403871:	mov    rax,QWORD PTR [rsp+0x30]
  403876:	mov    rax,QWORD PTR [rax+0x28]
  40387a:	mov    r9d,r14d
  40387d:	cmp    r14d,0x10
  403881:	jae    40391c <Mat_VarReadNextInfo@plt+0x15fc>
  403887:	xor    edx,edx
  403889:	jmp    403b50 <Mat_VarReadNextInfo@plt+0x1830>
  40388e:	call   402230 <malloc@plt>
  403893:	mov    rdx,rax
  403896:	mov    QWORD PTR [r15+0x38],rax
  40389a:	test   rdx,rdx
  40389d:	jne    403807 <Mat_VarReadNextInfo@plt+0x14e7>
  4038a3:	mov    rax,QWORD PTR [rip+0x674e]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4038aa:	mov    rcx,QWORD PTR [rax]
  4038ad:	mov    esi,0x25
  4038b2:	mov    edx,0x1
  4038b7:	lea    rdi,[rip+0x3f27]        # 4077e5 <getopt_long_only@@Base+0x17a5>
  4038be:	call   4022f0 <fwrite@plt>
  4038c3:	jmp    403b61 <Mat_VarReadNextInfo@plt+0x1841>
  4038c8:	mov    r13,QWORD PTR [rsp+0x60]
  4038cd:	mov    rdi,r13
  4038d0:	mov    rsi,rbx
  4038d3:	call   402180 <Mat_VarReadDataAll@plt>
  4038d8:	mov    r14,rbx
  4038db:	mov    r12,QWORD PTR [rsp+0x48]
  4038e0:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4038e5:	vpxor  xmm9,xmm9,xmm9
  4038ea:	xor    edx,edx
  4038ec:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  4038f5:	vpxor  xmm2,xmm2,xmm2
  4038f9:	vpxor  xmm3,xmm3,xmm3
  4038fd:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  403906:	vmovdqa xmm0,XMMWORD PTR [rip+0x3702]        # 407010 <getopt_long_only@@Base+0xfd0>
  40390e:	test   rsi,rsi
  403911:	jne    4033db <Mat_VarReadNextInfo@plt+0x10bb>
  403917:	jmp    40343f <Mat_VarReadNextInfo@plt+0x111f>
  40391c:	mov    edx,r9d
  40391f:	and    edx,0xfffffff0
  403922:	lea    rsi,[rdx-0x10]
  403926:	mov    rcx,rsi
  403929:	shr    rcx,0x4
  40392d:	add    rcx,0x1
  403931:	mov    r8d,ecx
  403934:	and    r8d,0x3
  403938:	cmp    rsi,0x30
  40393c:	jae    4039b1 <Mat_VarReadNextInfo@plt+0x1691>
  40393e:	xor    edi,edi
  403940:	test   r8,r8
  403943:	jne    403aed <Mat_VarReadNextInfo@plt+0x17cd>
  403949:	jmp    403b4b <Mat_VarReadNextInfo@plt+0x182b>
  40394e:	cmp    QWORD PTR [rax+0x8],0x1
  403953:	jne    403960 <Mat_VarReadNextInfo@plt+0x1640>
  403955:	movsxd rcx,DWORD PTR [rbx]
  403958:	mov    QWORD PTR [rax],rcx
  40395b:	jmp    403b61 <Mat_VarReadNextInfo@plt+0x1841>
  403960:	mov    rcx,QWORD PTR [rsp+0x30]
  403965:	mov    DWORD PTR [rcx+0x8],0x2
  40396c:	movsxd rcx,DWORD PTR [rbx]
  40396f:	mov    QWORD PTR [rax],rcx
  403972:	mov    QWORD PTR [rax+0x8],0x1
  40397a:	jmp    403b61 <Mat_VarReadNextInfo@plt+0x1841>
  40397f:	mov    BYTE PTR [rax],0x0
  403982:	mov    rax,QWORD PTR [rip+0x666f]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  403989:	mov    rcx,QWORD PTR [rax]
  40398c:	mov    esi,0x38
  403991:	mov    edx,0x1
  403996:	lea    rdi,[rip+0x3e0f]        # 4077ac <getopt_long_only@@Base+0x176c>
  40399d:	call   4022f0 <fwrite@plt>
  4039a2:	mov    r14,QWORD PTR [rsp+0x30]
  4039a7:	mov    r13,QWORD PTR [rsp+0x60]
  4039ac:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  4039b1:	mov    esi,0x1
  4039b6:	sub    rsi,rcx
  4039b9:	add    rsi,r8
  4039bc:	add    rsi,0xffffffffffffffff
  4039c0:	xor    edi,edi
  4039c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4]
  4039d6:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x10]
  4039dd:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0x20]
  4039e4:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0x30]
  4039eb:	vmovdqu YMMWORD PTR [rax+rdi*8],ymm0
  4039f0:	vmovdqu YMMWORD PTR [rax+rdi*8+0x20],ymm1
  4039f6:	vmovdqu YMMWORD PTR [rax+rdi*8+0x40],ymm2
  4039fc:	vmovdqu YMMWORD PTR [rax+rdi*8+0x60],ymm3
  403a02:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0x40]
  403a09:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x50]
  403a10:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0x60]
  403a17:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0x70]
  403a1e:	vmovdqu YMMWORD PTR [rax+rdi*8+0x80],ymm0
  403a27:	vmovdqu YMMWORD PTR [rax+rdi*8+0xa0],ymm1
  403a30:	vmovdqu YMMWORD PTR [rax+rdi*8+0xc0],ymm2
  403a39:	vmovdqu YMMWORD PTR [rax+rdi*8+0xe0],ymm3
  403a42:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0x80]
  403a4c:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x90]
  403a56:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0xa0]
  403a60:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0xb0]
  403a6a:	vmovdqu YMMWORD PTR [rax+rdi*8+0x100],ymm0
  403a73:	vmovdqu YMMWORD PTR [rax+rdi*8+0x120],ymm1
  403a7c:	vmovdqu YMMWORD PTR [rax+rdi*8+0x140],ymm2
  403a85:	vmovdqu YMMWORD PTR [rax+rdi*8+0x160],ymm3
  403a8e:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0xc0]
  403a98:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0xd0]
  403aa2:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0xe0]
  403aac:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0xf0]
  403ab6:	vmovdqu YMMWORD PTR [rax+rdi*8+0x180],ymm0
  403abf:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1a0],ymm1
  403ac8:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1c0],ymm2
  403ad1:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1e0],ymm3
  403ada:	add    rdi,0x40
  403ade:	add    rsi,0x4
  403ae2:	jne    4039d0 <Mat_VarReadNextInfo@plt+0x16b0>
  403ae8:	test   r8,r8
  403aeb:	je     403b4b <Mat_VarReadNextInfo@plt+0x182b>
  403aed:	lea    rsi,[rax+rdi*8]
  403af1:	add    rsi,0x60
  403af5:	lea    rdi,[rbx+rdi*4]
  403af9:	add    rdi,0x30
  403afd:	shl    r8,0x6
  403b01:	xor    ecx,ecx
  403b03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b0d:	nop    DWORD PTR [rax]
  403b10:	vpmovsxdq ymm0,XMMWORD PTR [rdi+rcx*1-0x30]
  403b17:	vpmovsxdq ymm1,XMMWORD PTR [rdi+rcx*1-0x20]
  403b1e:	vpmovsxdq ymm2,XMMWORD PTR [rdi+rcx*1-0x10]
  403b25:	vpmovsxdq ymm3,XMMWORD PTR [rdi+rcx*1]
  403b2b:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x60],ymm0
  403b31:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x40],ymm1
  403b37:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x20],ymm2
  403b3d:	vmovdqu YMMWORD PTR [rsi+rcx*2],ymm3
  403b42:	add    rcx,0x40
  403b46:	cmp    r8,rcx
  403b49:	jne    403b10 <Mat_VarReadNextInfo@plt+0x17f0>
  403b4b:	cmp    rdx,r9
  403b4e:	je     403b61 <Mat_VarReadNextInfo@plt+0x1841>
  403b50:	movsxd rcx,DWORD PTR [rbx+rdx*4]
  403b54:	mov    QWORD PTR [rax+rdx*8],rcx
  403b58:	add    rdx,0x1
  403b5c:	cmp    r9,rdx
  403b5f:	jne    403b50 <Mat_VarReadNextInfo@plt+0x1830>
  403b61:	mov    rdi,QWORD PTR [rsp+0x38]
  403b66:	vzeroupper 
  403b69:	call   402060 <free@plt>
  403b6e:	mov    rdi,rbp
  403b71:	call   402060 <free@plt>
  403b76:	mov    rdi,rbx
  403b79:	call   402060 <free@plt>
  403b7e:	mov    r15,QWORD PTR [rsp+0x68]
  403b83:	mov    r14,QWORD PTR [rsp+0x30]
  403b88:	nop    DWORD PTR [rax+rax*1+0x0]
  403b90:	mov    rdi,r14
  403b93:	call   QWORD PTR [rip+0x67b7]        # 40a350 <optopt@@Base+0x28>
  403b99:	mov    rdi,r14
  403b9c:	call   402200 <Mat_VarFree@plt>
  403ba1:	add    r15,0x1
  403ba5:	cmp    r15d,DWORD PTR [rsp+0x5c]
  403baa:	jne    402620 <Mat_VarReadNextInfo@plt+0x300>
  403bb0:	jmp    403c71 <Mat_VarReadNextInfo@plt+0x1951>
  403bb5:	lea    rdi,[rip+0x3717]        # 4072d3 <getopt_long_only@@Base+0x1293>
  403bbc:	xor    eax,eax
  403bbe:	call   402260 <Mat_Critical@plt>
  403bc3:	mov    eax,0x1
  403bc8:	jmp    403c80 <Mat_VarReadNextInfo@plt+0x1960>
  403bcd:	mov    rsi,QWORD PTR [r12+rax*8]
  403bd1:	lea    rdi,[rip+0x371e]        # 4072f6 <getopt_long_only@@Base+0x12b6>
  403bd8:	xor    eax,eax
  403bda:	call   402260 <Mat_Critical@plt>
  403bdf:	mov    eax,0x1
  403be4:	jmp    403c80 <Mat_VarReadNextInfo@plt+0x1960>
  403be9:	cmp    BYTE PTR [rip+0x6768],0x0        # 40a358 <optopt@@Base+0x30>
  403bf0:	je     403c33 <Mat_VarReadNextInfo@plt+0x1913>
  403bf2:	mov    rdi,r13
  403bf5:	call   402090 <Mat_VarReadNext@plt>
  403bfa:	test   rax,rax
  403bfd:	je     403c71 <Mat_VarReadNextInfo@plt+0x1951>
  403bff:	mov    rbx,rax
  403c02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c0c:	nop    DWORD PTR [rax+0x0]
  403c10:	mov    rdi,rbx
  403c13:	call   QWORD PTR [rip+0x6737]        # 40a350 <optopt@@Base+0x28>
  403c19:	mov    rdi,rbx
  403c1c:	call   402200 <Mat_VarFree@plt>
  403c21:	mov    rdi,r13
  403c24:	call   402090 <Mat_VarReadNext@plt>
  403c29:	mov    rbx,rax
  403c2c:	test   rax,rax
  403c2f:	jne    403c10 <Mat_VarReadNextInfo@plt+0x18f0>
  403c31:	jmp    403c71 <Mat_VarReadNextInfo@plt+0x1951>
  403c33:	mov    rdi,r13
  403c36:	call   402320 <Mat_VarReadNextInfo@plt>
  403c3b:	test   rax,rax
  403c3e:	je     403c71 <Mat_VarReadNextInfo@plt+0x1951>
  403c40:	mov    rbx,rax
  403c43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c4d:	nop    DWORD PTR [rax]
  403c50:	mov    rdi,rbx
  403c53:	call   QWORD PTR [rip+0x66f7]        # 40a350 <optopt@@Base+0x28>
  403c59:	mov    rdi,rbx
  403c5c:	call   402200 <Mat_VarFree@plt>
  403c61:	mov    rdi,r13
  403c64:	call   402320 <Mat_VarReadNextInfo@plt>
  403c69:	mov    rbx,rax
  403c6c:	test   rax,rax
  403c6f:	jne    403c50 <Mat_VarReadNextInfo@plt+0x1930>
  403c71:	mov    rdi,r13
  403c74:	call   402250 <Mat_Close@plt>
  403c79:	call   402070 <Mat_LogClose@plt>
  403c7e:	xor    eax,eax
  403c80:	add    rsp,0xc8
  403c87:	pop    rbx
  403c88:	pop    r12
  403c8a:	pop    r13
  403c8c:	pop    r14
  403c8e:	pop    r15
  403c90:	pop    rbp
  403c91:	ret    
  403c92:	mov    rax,QWORD PTR [rip+0x635f]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  403c99:	mov    rcx,QWORD PTR [rax]
  403c9c:	lea    rdi,[rip+0x3515]        # 4071b8 <getopt_long_only@@Base+0x1178>
  403ca3:	mov    esi,0x37
  403ca8:	mov    edx,0x1
  403cad:	call   4022f0 <fwrite@plt>
  403cb2:	mov    eax,0x1
  403cb7:	jmp    403c80 <Mat_VarReadNextInfo@plt+0x1960>
  403cb9:	lea    rdi,[rip+0x65d0]        # 40a290 <getopt_long_only@@Base+0x4250>
  403cc0:	call   4022a0 <Mat_Help@plt>
  403cc5:	xor    edi,edi
  403cc7:	call   4022e0 <exit@plt>
  403ccc:	lea    rdi,[rip+0x358c]        # 40725f <getopt_long_only@@Base+0x121f>
  403cd3:	lea    rsi,[rip+0x34d6]        # 4071b0 <getopt_long_only@@Base+0x1170>
  403cda:	lea    rdx,[rip+0x35d4]        # 4072b5 <getopt_long_only@@Base+0x1275>
  403ce1:	xor    eax,eax
  403ce3:	call   402160 <printf@plt>
  403ce8:	xor    edi,edi
  403cea:	call   4022e0 <exit@plt>
  403cef:	nop
  403cf0:	push   rbp
  403cf1:	push   r14
  403cf3:	push   rbx
  403cf4:	mov    r14,rsi
  403cf7:	cmp    DWORD PTR [rip+0x6662],0x0        # 40a360 <optopt@@Base+0x38>
  403cfe:	jle    403d25 <Mat_VarReadNextInfo@plt+0x1a05>
  403d00:	lea    rbx,[rip+0x374d]        # 407454 <getopt_long_only@@Base+0x1414>
  403d07:	xor    ebp,ebp
  403d09:	nop    DWORD PTR [rax+0x0]
  403d10:	xor    eax,eax
  403d12:	mov    rdi,rbx
  403d15:	call   402160 <printf@plt>
  403d1a:	add    ebp,0x1
  403d1d:	cmp    ebp,DWORD PTR [rip+0x663d]        # 40a360 <optopt@@Base+0x38>
  403d23:	jl     403d10 <Mat_VarReadNextInfo@plt+0x19f0>
  403d25:	mov    rdi,r14
  403d28:	pop    rbx
  403d29:	pop    r14
  403d2b:	pop    rbp
  403d2c:	jmp    4020d0 <puts@plt>
  403d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d40:	push   rbp
  403d41:	push   r15
  403d43:	push   r14
  403d45:	push   r13
  403d47:	push   r12
  403d49:	push   rbx
  403d4a:	sub    rsp,0x28
  403d4e:	test   rdi,rdi
  403d51:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403d57:	mov    eax,DWORD PTR [rdi+0x14]
  403d5a:	lea    ecx,[rax-0x6]
  403d5d:	cmp    ecx,0xa
  403d60:	mov    rbx,rdi
  403d63:	mov    QWORD PTR [rsp],rdi
  403d67:	jae    403e61 <Mat_VarReadNextInfo@plt+0x1b41>
  403d6d:	mov    eax,DWORD PTR [rbx+0x8]
  403d70:	cmp    eax,0x3
  403d73:	je     403efa <Mat_VarReadNextInfo@plt+0x1bda>
  403d79:	cmp    eax,0x2
  403d7c:	jne    40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403d82:	cmp    QWORD PTR [rbx+0x38],0x0
  403d87:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403d8d:	mov    edi,DWORD PTR [rbx+0xc]
  403d90:	call   402210 <Mat_SizeOf@plt>
  403d95:	mov    QWORD PTR [rsp+0x8],rax
  403d9a:	cmp    DWORD PTR [rbx+0x18],0x0
  403d9e:	mov    rcx,rbx
  403da1:	je     404141 <Mat_VarReadNextInfo@plt+0x1e21>
  403da7:	mov    rax,QWORD PTR [rcx+0x28]
  403dab:	mov    rbx,QWORD PTR [rax]
  403dae:	test   rbx,rbx
  403db1:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403db7:	mov    rcx,QWORD PTR [rcx+0x38]
  403dbb:	mov    r13,QWORD PTR [rcx]
  403dbe:	mov    rbp,QWORD PTR [rcx+0x8]
  403dc2:	xor    r14d,r14d
  403dc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dcf:	nop
  403dd0:	cmp    QWORD PTR [rax+0x8],0x0
  403dd5:	je     403e3a <Mat_VarReadNextInfo@plt+0x1b1a>
  403dd7:	xor    r12d,r12d
  403dda:	jmp    403de3 <Mat_VarReadNextInfo@plt+0x1ac3>
  403ddc:	nop    DWORD PTR [rax+0x0]
  403de0:	mov    rbx,QWORD PTR [rax]
  403de3:	imul   rbx,r12
  403de7:	add    rbx,r14
  403dea:	mov    r15,QWORD PTR [rsp]
  403dee:	mov    edi,DWORD PTR [r15+0xc]
  403df2:	imul   rbx,QWORD PTR [rsp+0x8]
  403df8:	lea    rsi,[rbx+r13*1]
  403dfc:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  403e01:	xor    eax,eax
  403e03:	lea    rdi,[rip+0x3586]        # 407390 <getopt_long_only@@Base+0x1350>
  403e0a:	call   402160 <printf@plt>
  403e0f:	mov    edi,DWORD PTR [r15+0xc]
  403e13:	add    rbx,rbp
  403e16:	mov    rsi,rbx
  403e19:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  403e1e:	xor    eax,eax
  403e20:	lea    rdi,[rip+0x356d]        # 407394 <getopt_long_only@@Base+0x1354>
  403e27:	call   402160 <printf@plt>
  403e2c:	add    r12,0x1
  403e30:	mov    rax,QWORD PTR [r15+0x28]
  403e34:	cmp    r12,QWORD PTR [rax+0x8]
  403e38:	jb     403de0 <Mat_VarReadNextInfo@plt+0x1ac0>
  403e3a:	mov    edi,0xa
  403e3f:	call   402080 <putchar@plt>
  403e44:	add    r14,0x1
  403e48:	mov    rax,QWORD PTR [rsp]
  403e4c:	mov    rax,QWORD PTR [rax+0x28]
  403e50:	mov    rbx,QWORD PTR [rax]
  403e53:	cmp    r14,rbx
  403e56:	jb     403dd0 <Mat_VarReadNextInfo@plt+0x1ab0>
  403e5c:	jmp    40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403e61:	lea    ecx,[rax-0x4]
  403e64:	cmp    ecx,0x2
  403e67:	jb     4040b6 <Mat_VarReadNextInfo@plt+0x1d96>
  403e6d:	cmp    eax,0x1
  403e70:	je     4040d3 <Mat_VarReadNextInfo@plt+0x1db3>
  403e76:	cmp    eax,0x2
  403e79:	jne    404135 <Mat_VarReadNextInfo@plt+0x1e15>
  403e7f:	mov    rsi,QWORD PTR [rbx+0x30]
  403e83:	test   rsi,rsi
  403e86:	je     403e96 <Mat_VarReadNextInfo@plt+0x1b76>
  403e88:	lea    rdi,[rip+0x34a3]        # 407332 <getopt_long_only@@Base+0x12f2>
  403e8f:	xor    eax,eax
  403e91:	call   402120 <Mat_Message@plt>
  403e96:	mov    esi,DWORD PTR [rbx+0x8]
  403e99:	lea    rdi,[rip+0x34a1]        # 407341 <getopt_long_only@@Base+0x1301>
  403ea0:	xor    eax,eax
  403ea2:	call   402120 <Mat_Message@plt>
  403ea7:	cmp    DWORD PTR [rbx+0x8],0x0
  403eab:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403eb1:	mov    rbp,rbx
  403eb4:	lea    rdi,[rip+0x3495]        # 407350 <getopt_long_only@@Base+0x1310>
  403ebb:	xor    eax,eax
  403ebd:	call   402120 <Mat_Message@plt>
  403ec2:	mov    rdi,rbx
  403ec5:	call   402030 <Mat_VarGetNumberOfFields@plt>
  403eca:	mov    r14d,eax
  403ecd:	mov    rax,QWORD PTR [rbx+0x28]
  403ed1:	mov    rbx,QWORD PTR [rax]
  403ed4:	movsxd r9,DWORD PTR [rbp+0x8]
  403ed8:	cmp    r9,0x2
  403edc:	jl     404a6e <Mat_VarReadNextInfo@plt+0x274e>
  403ee2:	lea    r8,[r9-0x1]
  403ee6:	cmp    r8,0x10
  403eea:	jae    404331 <Mat_VarReadNextInfo@plt+0x2011>
  403ef0:	mov    edx,0x1
  403ef5:	jmp    404a60 <Mat_VarReadNextInfo@plt+0x2740>
  403efa:	cmp    QWORD PTR [rbx+0x38],0x0
  403eff:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403f05:	mov    edi,DWORD PTR [rbx+0xc]
  403f08:	call   402210 <Mat_SizeOf@plt>
  403f0d:	mov    QWORD PTR [rsp+0x18],rax
  403f12:	cmp    DWORD PTR [rbx+0x18],0x0
  403f16:	je     4041f1 <Mat_VarReadNextInfo@plt+0x1ed1>
  403f1c:	mov    rax,QWORD PTR [rbx+0x28]
  403f20:	cmp    QWORD PTR [rax+0x10],0x0
  403f25:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  403f2b:	mov    r12,rbx
  403f2e:	mov    rax,QWORD PTR [rbx+0x38]
  403f32:	mov    rbx,QWORD PTR [rax]
  403f35:	mov    r14,QWORD PTR [rax+0x8]
  403f39:	xor    ecx,ecx
  403f3b:	mov    QWORD PTR [rsp],rbx
  403f3f:	mov    QWORD PTR [rsp+0x8],r14
  403f44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f4e:	xchg   ax,ax
  403f50:	mov    rsi,QWORD PTR [r12+0x30]
  403f55:	xor    eax,eax
  403f57:	lea    rdi,[rip+0x3459]        # 4073b7 <getopt_long_only@@Base+0x1377>
  403f5e:	mov    QWORD PTR [rsp+0x10],rcx
  403f63:	mov    rdx,rcx
  403f66:	call   402120 <Mat_Message@plt>
  403f6b:	mov    ecx,DWORD PTR [rip+0x63ef]        # 40a360 <optopt@@Base+0x38>
  403f71:	add    ecx,0x1
  403f74:	mov    DWORD PTR [rip+0x63e6],ecx        # 40a360 <optopt@@Base+0x38>
  403f7a:	mov    rax,QWORD PTR [r12+0x28]
  403f7f:	cmp    QWORD PTR [rax],0x0
  403f83:	je     404080 <Mat_VarReadNextInfo@plt+0x1d60>
  403f89:	xor    r13d,r13d
  403f8c:	nop    DWORD PTR [rax+0x0]
  403f90:	mov    QWORD PTR [rsp+0x20],r13
  403f95:	test   ecx,ecx
  403f97:	je     403fcf <Mat_VarReadNextInfo@plt+0x1caf>
  403f99:	xor    ebx,ebx
  403f9b:	lea    r13,[rip+0x34b2]        # 407454 <getopt_long_only@@Base+0x1414>
  403fa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fac:	nop    DWORD PTR [rax+0x0]
  403fb0:	xor    eax,eax
  403fb2:	mov    rdi,r13
  403fb5:	call   402160 <printf@plt>
  403fba:	add    rbx,0x1
  403fbe:	movsxd rax,DWORD PTR [rip+0x639b]        # 40a360 <optopt@@Base+0x38>
  403fc5:	cmp    rbx,rax
  403fc8:	jb     403fb0 <Mat_VarReadNextInfo@plt+0x1c90>
  403fca:	mov    rax,QWORD PTR [r12+0x28]
  403fcf:	mov    rbx,QWORD PTR [rax+0x8]
  403fd3:	test   rbx,rbx
  403fd6:	mov    r15,QWORD PTR [rsp+0x18]
  403fdb:	mov    r14,QWORD PTR [rsp+0x10]
  403fe0:	mov    r13,QWORD PTR [rsp+0x20]
  403fe5:	je     404054 <Mat_VarReadNextInfo@plt+0x1d34>
  403fe7:	xor    ebp,ebp
  403fe9:	nop    DWORD PTR [rax+0x0]
  403ff0:	imul   rbx,r14
  403ff4:	add    rbx,rbp
  403ff7:	imul   rbx,QWORD PTR [rax]
  403ffb:	add    rbx,r13
  403ffe:	mov    edi,DWORD PTR [r12+0xc]
  404003:	imul   rbx,r15
  404007:	mov    rax,QWORD PTR [rsp]
  40400b:	lea    rsi,[rax+rbx*1]
  40400f:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  404014:	xor    eax,eax
  404016:	lea    rdi,[rip+0x3373]        # 407390 <getopt_long_only@@Base+0x1350>
  40401d:	call   402160 <printf@plt>
  404022:	mov    edi,DWORD PTR [r12+0xc]
  404027:	add    rbx,QWORD PTR [rsp+0x8]
  40402c:	mov    rsi,rbx
  40402f:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  404034:	xor    eax,eax
  404036:	lea    rdi,[rip+0x3357]        # 407394 <getopt_long_only@@Base+0x1354>
  40403d:	call   402160 <printf@plt>
  404042:	add    rbp,0x1
  404046:	mov    rax,QWORD PTR [r12+0x28]
  40404b:	mov    rbx,QWORD PTR [rax+0x8]
  40404f:	cmp    rbp,rbx
  404052:	jb     403ff0 <Mat_VarReadNextInfo@plt+0x1cd0>
  404054:	mov    edi,0xa
  404059:	call   402080 <putchar@plt>
  40405e:	add    r13,0x1
  404062:	mov    rax,QWORD PTR [r12+0x28]
  404067:	mov    ecx,DWORD PTR [rip+0x62f3]        # 40a360 <optopt@@Base+0x38>
  40406d:	cmp    r13,QWORD PTR [rax]
  404070:	mov    rdx,QWORD PTR [rsp]
  404074:	jb     403f90 <Mat_VarReadNextInfo@plt+0x1c70>
  40407a:	jmp    404083 <Mat_VarReadNextInfo@plt+0x1d63>
  40407c:	nop    DWORD PTR [rax+0x0]
  404080:	mov    rdx,rbx
  404083:	mov    rbx,rdx
  404086:	add    ecx,0xffffffff
  404089:	mov    DWORD PTR [rip+0x62d1],ecx        # 40a360 <optopt@@Base+0x38>
  40408f:	mov    edi,0xa
  404094:	call   402080 <putchar@plt>
  404099:	mov    rcx,QWORD PTR [rsp+0x10]
  40409e:	add    rcx,0x1
  4040a2:	mov    rax,QWORD PTR [r12+0x28]
  4040a7:	cmp    rcx,QWORD PTR [rax+0x10]
  4040ab:	jb     403f50 <Mat_VarReadNextInfo@plt+0x1c30>
  4040b1:	jmp    40431f <Mat_VarReadNextInfo@plt+0x1fff>
  4040b6:	movzx  esi,BYTE PTR [rip+0x629b]        # 40a358 <optopt@@Base+0x30>
  4040bd:	mov    rdi,rbx
  4040c0:	add    rsp,0x28
  4040c4:	pop    rbx
  4040c5:	pop    r12
  4040c7:	pop    r13
  4040c9:	pop    r14
  4040cb:	pop    r15
  4040cd:	pop    rbp
  4040ce:	jmp    402240 <Mat_VarPrint@plt>
  4040d3:	mov    rsi,QWORD PTR [rbx+0x30]
  4040d7:	test   rsi,rsi
  4040da:	je     4040ea <Mat_VarReadNextInfo@plt+0x1dca>
  4040dc:	lea    rdi,[rip+0x324f]        # 407332 <getopt_long_only@@Base+0x12f2>
  4040e3:	xor    eax,eax
  4040e5:	call   402120 <Mat_Message@plt>
  4040ea:	mov    esi,DWORD PTR [rbx+0x8]
  4040ed:	lea    rdi,[rip+0x324d]        # 407341 <getopt_long_only@@Base+0x1301>
  4040f4:	xor    eax,eax
  4040f6:	call   402120 <Mat_Message@plt>
  4040fb:	mov    eax,DWORD PTR [rbx+0x8]
  4040fe:	test   rax,rax
  404101:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  404107:	mov    rdx,rbx
  40410a:	mov    rcx,QWORD PTR [rbx+0x28]
  40410e:	mov    rbx,QWORD PTR [rcx]
  404111:	cmp    eax,0x2
  404114:	mov    rbp,rdx
  404117:	jl     40455e <Mat_VarReadNextInfo@plt+0x223e>
  40411d:	lea    rdi,[rax-0x1]
  404121:	cmp    rdi,0x10
  404125:	jae    40438f <Mat_VarReadNextInfo@plt+0x206f>
  40412b:	mov    edx,0x1
  404130:	jmp    404550 <Mat_VarReadNextInfo@plt+0x2230>
  404135:	lea    rdi,[rip+0x324e]        # 40738a <getopt_long_only@@Base+0x134a>
  40413c:	jmp    404b4d <Mat_VarReadNextInfo@plt+0x282d>
  404141:	mov    rax,QWORD PTR [rcx+0x28]
  404145:	cmp    QWORD PTR [rax],0x0
  404149:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  40414f:	mov    rbp,rcx
  404152:	mov    r14,QWORD PTR [rcx+0x38]
  404156:	xor    r12d,r12d
  404159:	nop    DWORD PTR [rax+0x0]
  404160:	cmp    QWORD PTR [rax+0x8],0x0
  404165:	mov    r15,QWORD PTR [rsp+0x8]
  40416a:	je     4041d1 <Mat_VarReadNextInfo@plt+0x1eb1>
  40416c:	mov    edi,DWORD PTR [rbp+0xc]
  40416f:	mov    rsi,r12
  404172:	imul   rsi,r15
  404176:	add    rsi,r14
  404179:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  40417e:	mov    edi,0x20
  404183:	call   402080 <putchar@plt>
  404188:	mov    rax,QWORD PTR [rbp+0x28]
  40418c:	cmp    QWORD PTR [rax+0x8],0x2
  404191:	jb     4041d1 <Mat_VarReadNextInfo@plt+0x1eb1>
  404193:	mov    ebx,0x1
  404198:	nop    DWORD PTR [rax+rax*1+0x0]
  4041a0:	mov    rsi,QWORD PTR [rax]
  4041a3:	imul   rsi,rbx
  4041a7:	add    rsi,r12
  4041aa:	mov    edi,DWORD PTR [rbp+0xc]
  4041ad:	imul   rsi,r15
  4041b1:	add    rsi,r14
  4041b4:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  4041b9:	mov    edi,0x20
  4041be:	call   402080 <putchar@plt>
  4041c3:	add    rbx,0x1
  4041c7:	mov    rax,QWORD PTR [rbp+0x28]
  4041cb:	cmp    rbx,QWORD PTR [rax+0x8]
  4041cf:	jb     4041a0 <Mat_VarReadNextInfo@plt+0x1e80>
  4041d1:	mov    edi,0xa
  4041d6:	call   402080 <putchar@plt>
  4041db:	add    r12,0x1
  4041df:	mov    rax,QWORD PTR [rbp+0x28]
  4041e3:	cmp    r12,QWORD PTR [rax]
  4041e6:	jb     404160 <Mat_VarReadNextInfo@plt+0x1e40>
  4041ec:	jmp    40431f <Mat_VarReadNextInfo@plt+0x1fff>
  4041f1:	mov    rax,QWORD PTR [rbx+0x28]
  4041f5:	cmp    QWORD PTR [rax+0x10],0x0
  4041fa:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  404200:	mov    r14,rbx
  404203:	mov    rax,QWORD PTR [rbx+0x38]
  404207:	mov    QWORD PTR [rsp+0x8],rax
  40420c:	xor    r15d,r15d
  40420f:	nop
  404210:	mov    rsi,QWORD PTR [r14+0x30]
  404214:	xor    eax,eax
  404216:	lea    rdi,[rip+0x319a]        # 4073b7 <getopt_long_only@@Base+0x1377>
  40421d:	mov    rdx,r15
  404220:	call   402120 <Mat_Message@plt>
  404225:	mov    ecx,DWORD PTR [rip+0x6135]        # 40a360 <optopt@@Base+0x38>
  40422b:	add    ecx,0x1
  40422e:	mov    DWORD PTR [rip+0x612c],ecx        # 40a360 <optopt@@Base+0x38>
  404234:	mov    rax,QWORD PTR [r14+0x28]
  404238:	cmp    QWORD PTR [rax],0x0
  40423c:	je     4042fa <Mat_VarReadNextInfo@plt+0x1fda>
  404242:	xor    r13d,r13d
  404245:	mov    rbx,QWORD PTR [rsp+0x8]
  40424a:	nop    WORD PTR [rax+rax*1+0x0]
  404250:	test   ecx,ecx
  404252:	je     404287 <Mat_VarReadNextInfo@plt+0x1f67>
  404254:	xor    ebp,ebp
  404256:	lea    rbx,[rip+0x31f7]        # 407454 <getopt_long_only@@Base+0x1414>
  40425d:	nop    DWORD PTR [rax]
  404260:	xor    eax,eax
  404262:	mov    rdi,rbx
  404265:	call   402160 <printf@plt>
  40426a:	add    rbp,0x1
  40426e:	movsxd rax,DWORD PTR [rip+0x60eb]        # 40a360 <optopt@@Base+0x38>
  404275:	cmp    rbp,rax
  404278:	jb     404260 <Mat_VarReadNextInfo@plt+0x1f40>
  40427a:	mov    rax,QWORD PTR [rsp]
  40427e:	mov    rax,QWORD PTR [rax+0x28]
  404282:	mov    rbx,QWORD PTR [rsp+0x8]
  404287:	mov    rsi,QWORD PTR [rax+0x8]
  40428b:	test   rsi,rsi
  40428e:	mov    r14,QWORD PTR [rsp]
  404292:	mov    r12,QWORD PTR [rsp+0x18]
  404297:	je     4042d9 <Mat_VarReadNextInfo@plt+0x1fb9>
  404299:	xor    ebp,ebp
  40429b:	nop    DWORD PTR [rax+rax*1+0x0]
  4042a0:	imul   rsi,r15
  4042a4:	add    rsi,rbp
  4042a7:	imul   rsi,QWORD PTR [rax]
  4042ab:	add    rsi,r13
  4042ae:	mov    edi,DWORD PTR [r14+0xc]
  4042b2:	imul   rsi,r12
  4042b6:	add    rsi,rbx
  4042b9:	call   404e70 <Mat_VarReadNextInfo@plt+0x2b50>
  4042be:	mov    edi,0x20
  4042c3:	call   402080 <putchar@plt>
  4042c8:	add    rbp,0x1
  4042cc:	mov    rax,QWORD PTR [r14+0x28]
  4042d0:	mov    rsi,QWORD PTR [rax+0x8]
  4042d4:	cmp    rbp,rsi
  4042d7:	jb     4042a0 <Mat_VarReadNextInfo@plt+0x1f80>
  4042d9:	mov    edi,0xa
  4042de:	call   402080 <putchar@plt>
  4042e3:	add    r13,0x1
  4042e7:	mov    rax,QWORD PTR [r14+0x28]
  4042eb:	mov    ecx,DWORD PTR [rip+0x606f]        # 40a360 <optopt@@Base+0x38>
  4042f1:	cmp    r13,QWORD PTR [rax]
  4042f4:	jb     404250 <Mat_VarReadNextInfo@plt+0x1f30>
  4042fa:	add    ecx,0xffffffff
  4042fd:	mov    DWORD PTR [rip+0x605d],ecx        # 40a360 <optopt@@Base+0x38>
  404303:	mov    edi,0xa
  404308:	call   402080 <putchar@plt>
  40430d:	add    r15,0x1
  404311:	mov    rax,QWORD PTR [r14+0x28]
  404315:	cmp    r15,QWORD PTR [rax+0x10]
  404319:	jb     404210 <Mat_VarReadNextInfo@plt+0x1ef0>
  40431f:	add    rsp,0x28
  404323:	pop    rbx
  404324:	pop    r12
  404326:	pop    r13
  404328:	pop    r14
  40432a:	pop    r15
  40432c:	pop    rbp
  40432d:	vzeroupper 
  404330:	ret    
  404331:	mov    rdx,r8
  404334:	and    rdx,0xfffffffffffffff0
  404338:	vmovdqa ymm0,YMMWORD PTR [rip+0x2e00]        # 407140 <getopt_long_only@@Base+0x1100>
  404340:	vpinsrq xmm1,xmm0,rbx,0x0
  404346:	vpblendd ymm0,ymm0,ymm1,0xf
  40434c:	lea    rbp,[rdx-0x10]
  404350:	mov    rsi,rbp
  404353:	shr    rsi,0x4
  404357:	add    rsi,0x1
  40435b:	mov    ecx,esi
  40435d:	and    ecx,0x3
  404360:	cmp    rbp,0x30
  404364:	jae    4045c7 <Mat_VarReadNextInfo@plt+0x22a7>
  40436a:	vpbroadcastq ymm1,QWORD PTR [rip+0x2e0d]        # 407180 <getopt_long_only@@Base+0x1140>
  404373:	xor    ebx,ebx
  404375:	vmovdqa ymm3,ymm1
  404379:	vmovdqa ymm2,ymm1
  40437d:	mov    rbp,QWORD PTR [rsp]
  404381:	test   rcx,rcx
  404384:	jne    4048cd <Mat_VarReadNextInfo@plt+0x25ad>
  40438a:	jmp    404992 <Mat_VarReadNextInfo@plt+0x2672>
  40438f:	lea    esi,[rax-0x1]
  404392:	and    esi,0xf
  404395:	sub    rdi,rsi
  404398:	lea    rdx,[rdi+0x1]
  40439c:	vmovdqa ymm0,YMMWORD PTR [rip+0x2d9c]        # 407140 <getopt_long_only@@Base+0x1100>
  4043a4:	vpinsrq xmm1,xmm0,rbx,0x0
  4043aa:	vpblendd ymm2,ymm0,ymm1,0xf
  4043b0:	vpbroadcastq ymm3,QWORD PTR [rip+0x2dc7]        # 407180 <getopt_long_only@@Base+0x1140>
  4043b9:	xor    ebp,ebp
  4043bb:	vmovdqa ymm1,ymm3
  4043bf:	vmovdqa ymm0,ymm3
  4043c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043cd:	nop    DWORD PTR [rax]
  4043d0:	vmovdqu ymm4,YMMWORD PTR [rcx+rbp*8+0x8]
  4043d6:	vmovdqu ymm5,YMMWORD PTR [rcx+rbp*8+0x28]
  4043dc:	vmovdqu ymm6,YMMWORD PTR [rcx+rbp*8+0x48]
  4043e2:	vmovdqu ymm7,YMMWORD PTR [rcx+rbp*8+0x68]
  4043e8:	vpsrlq ymm8,ymm2,0x20
  4043ed:	vpmuludq ymm8,ymm4,ymm8
  4043f2:	vpsrlq ymm9,ymm4,0x20
  4043f7:	vpmuludq ymm9,ymm9,ymm2
  4043fb:	vpaddq ymm8,ymm8,ymm9
  404400:	vpsllq ymm8,ymm8,0x20
  404406:	vpmuludq ymm2,ymm4,ymm2
  40440a:	vpaddq ymm2,ymm2,ymm8
  40440f:	vpsrlq ymm4,ymm3,0x20
  404414:	vpmuludq ymm4,ymm5,ymm4
  404418:	vpsrlq ymm8,ymm5,0x20
  40441d:	vpmuludq ymm8,ymm8,ymm3
  404421:	vpaddq ymm4,ymm4,ymm8
  404426:	vpsllq ymm4,ymm4,0x20
  40442b:	vpmuludq ymm3,ymm5,ymm3
  40442f:	vpaddq ymm3,ymm3,ymm4
  404433:	vpsrlq ymm4,ymm1,0x20
  404438:	vpmuludq ymm4,ymm6,ymm4
  40443c:	vpsrlq ymm5,ymm6,0x20
  404441:	vpmuludq ymm5,ymm5,ymm1
  404445:	vpaddq ymm4,ymm4,ymm5
  404449:	vpsllq ymm4,ymm4,0x20
  40444e:	vpmuludq ymm1,ymm6,ymm1
  404452:	vpaddq ymm1,ymm1,ymm4
  404456:	vpsrlq ymm4,ymm0,0x20
  40445b:	vpmuludq ymm4,ymm7,ymm4
  40445f:	vpsrlq ymm5,ymm7,0x20
  404464:	vpmuludq ymm5,ymm5,ymm0
  404468:	vpaddq ymm4,ymm4,ymm5
  40446c:	vpsllq ymm4,ymm4,0x20
  404471:	vpmuludq ymm0,ymm7,ymm0
  404475:	vpaddq ymm0,ymm0,ymm4
  404479:	add    rbp,0x10
  40447d:	cmp    rdi,rbp
  404480:	jne    4043d0 <Mat_VarReadNextInfo@plt+0x20b0>
  404486:	vpsrlq ymm4,ymm3,0x20
  40448b:	vpmuludq ymm4,ymm4,ymm2
  40448f:	vpsrlq ymm5,ymm2,0x20
  404494:	vpmuludq ymm5,ymm3,ymm5
  404498:	vpaddq ymm4,ymm5,ymm4
  40449c:	vpsllq ymm4,ymm4,0x20
  4044a1:	vpmuludq ymm2,ymm3,ymm2
  4044a5:	vpaddq ymm2,ymm2,ymm4
  4044a9:	vpsrlq ymm3,ymm1,0x20
  4044ae:	vpmuludq ymm3,ymm3,ymm2
  4044b2:	vpsrlq ymm4,ymm2,0x20
  4044b7:	vpmuludq ymm4,ymm1,ymm4
  4044bb:	vpaddq ymm3,ymm4,ymm3
  4044bf:	vpsllq ymm3,ymm3,0x20
  4044c4:	vpmuludq ymm1,ymm1,ymm2
  4044c8:	vpaddq ymm1,ymm1,ymm3
  4044cc:	vpsrlq ymm2,ymm0,0x20
  4044d1:	vpmuludq ymm2,ymm2,ymm1
  4044d5:	vpsrlq ymm3,ymm1,0x20
  4044da:	vpmuludq ymm3,ymm0,ymm3
  4044de:	vpaddq ymm2,ymm3,ymm2
  4044e2:	vpsllq ymm2,ymm2,0x20
  4044e7:	vpmuludq ymm0,ymm0,ymm1
  4044eb:	vpaddq ymm0,ymm0,ymm2
  4044ef:	vextracti128 xmm1,ymm0,0x1
  4044f5:	vpsrlq ymm2,ymm0,0x20
  4044fa:	vpmuludq ymm2,ymm2,ymm1
  4044fe:	vpsrlq ymm3,ymm1,0x20
  404503:	vpmuludq ymm3,ymm0,ymm3
  404507:	vpaddq ymm2,ymm3,ymm2
  40450b:	vpsllq ymm2,ymm2,0x20
  404510:	vpmuludq ymm0,ymm0,ymm1
  404514:	vpaddq ymm0,ymm0,ymm2
  404518:	vpshufd xmm1,xmm0,0x4e
  40451d:	vpsrlq ymm2,ymm0,0x20
  404522:	vpmuludq ymm2,ymm2,ymm1
  404526:	vpsrlq ymm3,ymm1,0x20
  40452b:	vpmuludq ymm3,ymm0,ymm3
  40452f:	vpaddq ymm2,ymm3,ymm2
  404533:	vpsllq ymm2,ymm2,0x20
  404538:	vpmuludq ymm0,ymm0,ymm1
  40453c:	vpaddq ymm0,ymm0,ymm2
  404540:	vmovq  rbx,xmm0
  404545:	test   esi,esi
  404547:	mov    rbp,QWORD PTR [rsp]
  40454b:	je     40455e <Mat_VarReadNextInfo@plt+0x223e>
  40454d:	nop    DWORD PTR [rax]
  404550:	imul   rbx,QWORD PTR [rcx+rdx*8]
  404555:	add    rdx,0x1
  404559:	cmp    rax,rdx
  40455c:	jne    404550 <Mat_VarReadNextInfo@plt+0x2230>
  40455e:	lea    rdi,[rip+0x2e0e]        # 407373 <getopt_long_only@@Base+0x1333>
  404565:	xor    eax,eax
  404567:	vzeroupper 
  40456a:	call   402120 <Mat_Message@plt>
  40456f:	lea    rdi,[rip+0x2dfb]        # 407371 <getopt_long_only@@Base+0x1331>
  404576:	xor    eax,eax
  404578:	call   402120 <Mat_Message@plt>
  40457d:	mov    eax,DWORD PTR [rip+0x5ddd]        # 40a360 <optopt@@Base+0x38>
  404583:	add    eax,0x1
  404586:	mov    DWORD PTR [rip+0x5dd4],eax        # 40a360 <optopt@@Base+0x38>
  40458c:	mov    r14,QWORD PTR [rbp+0x38]
  404590:	test   r14,r14
  404593:	je     404b3d <Mat_VarReadNextInfo@plt+0x281d>
  404599:	test   rbx,rbx
  40459c:	je     404b3d <Mat_VarReadNextInfo@plt+0x281d>
  4045a2:	xor    ebp,ebp
  4045a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ae:	xchg   ax,ax
  4045b0:	mov    rdi,QWORD PTR [r14+rbp*8]
  4045b4:	call   403d40 <Mat_VarReadNextInfo@plt+0x1a20>
  4045b9:	add    rbp,0x1
  4045bd:	cmp    rbx,rbp
  4045c0:	jne    4045b0 <Mat_VarReadNextInfo@plt+0x2290>
  4045c2:	jmp    404b37 <Mat_VarReadNextInfo@plt+0x2817>
  4045c7:	mov    ebp,0x1
  4045cc:	sub    rbp,rsi
  4045cf:	lea    rsi,[rcx+rbp*1]
  4045d3:	add    rsi,0xffffffffffffffff
  4045d7:	vpbroadcastq ymm1,QWORD PTR [rip+0x2ba0]        # 407180 <getopt_long_only@@Base+0x1140>
  4045e0:	xor    ebx,ebx
  4045e2:	vmovdqa ymm3,ymm1
  4045e6:	vmovdqa ymm2,ymm1
  4045ea:	mov    rbp,QWORD PTR [rsp]
  4045ee:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x8]
  4045f4:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x28]
  4045fa:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x48]
  404600:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x68]
  404606:	vpsrlq ymm8,ymm0,0x20
  40460b:	vpmuludq ymm8,ymm4,ymm8
  404610:	vpsrlq ymm9,ymm4,0x20
  404615:	vpmuludq ymm9,ymm9,ymm0
  404619:	vpaddq ymm8,ymm8,ymm9
  40461e:	vpsllq ymm8,ymm8,0x20
  404624:	vpmuludq ymm0,ymm4,ymm0
  404628:	vpaddq ymm0,ymm0,ymm8
  40462d:	vpsrlq ymm4,ymm1,0x20
  404632:	vpmuludq ymm4,ymm5,ymm4
  404636:	vpsrlq ymm8,ymm5,0x20
  40463b:	vpmuludq ymm8,ymm8,ymm1
  40463f:	vpaddq ymm4,ymm4,ymm8
  404644:	vpsllq ymm4,ymm4,0x20
  404649:	vpmuludq ymm1,ymm5,ymm1
  40464d:	vpaddq ymm1,ymm1,ymm4
  404651:	vpsrlq ymm4,ymm3,0x20
  404656:	vpmuludq ymm4,ymm6,ymm4
  40465a:	vpsrlq ymm5,ymm6,0x20
  40465f:	vpmuludq ymm5,ymm5,ymm3
  404663:	vpaddq ymm4,ymm4,ymm5
  404667:	vpsllq ymm4,ymm4,0x20
  40466c:	vpmuludq ymm3,ymm6,ymm3
  404670:	vpaddq ymm3,ymm3,ymm4
  404674:	vpsrlq ymm4,ymm2,0x20
  404679:	vpmuludq ymm4,ymm7,ymm4
  40467d:	vpsrlq ymm5,ymm7,0x20
  404682:	vpmuludq ymm5,ymm5,ymm2
  404686:	vpaddq ymm4,ymm4,ymm5
  40468a:	vpsllq ymm4,ymm4,0x20
  40468f:	vpmuludq ymm2,ymm7,ymm2
  404693:	vpaddq ymm2,ymm2,ymm4
  404697:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x88]
  4046a0:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0xa8]
  4046a9:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0xc8]
  4046b2:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0xe8]
  4046bb:	vpsrlq ymm8,ymm4,0x20
  4046c0:	vpmuludq ymm8,ymm8,ymm0
  4046c4:	vpsrlq ymm9,ymm0,0x20
  4046c9:	vpmuludq ymm9,ymm4,ymm9
  4046ce:	vpaddq ymm8,ymm9,ymm8
  4046d3:	vpsllq ymm8,ymm8,0x20
  4046d9:	vpmuludq ymm0,ymm4,ymm0
  4046dd:	vpaddq ymm0,ymm0,ymm8
  4046e2:	vpsrlq ymm4,ymm5,0x20
  4046e7:	vpmuludq ymm4,ymm4,ymm1
  4046eb:	vpsrlq ymm8,ymm1,0x20
  4046f0:	vpmuludq ymm8,ymm5,ymm8
  4046f5:	vpaddq ymm4,ymm8,ymm4
  4046f9:	vpsllq ymm4,ymm4,0x20
  4046fe:	vpmuludq ymm1,ymm5,ymm1
  404702:	vpaddq ymm1,ymm1,ymm4
  404706:	vpsrlq ymm4,ymm6,0x20
  40470b:	vpmuludq ymm4,ymm4,ymm3
  40470f:	vpsrlq ymm5,ymm3,0x20
  404714:	vpmuludq ymm5,ymm6,ymm5
  404718:	vpaddq ymm4,ymm5,ymm4
  40471c:	vpsllq ymm4,ymm4,0x20
  404721:	vpmuludq ymm3,ymm6,ymm3
  404725:	vpaddq ymm3,ymm3,ymm4
  404729:	vpsrlq ymm4,ymm7,0x20
  40472e:	vpmuludq ymm4,ymm4,ymm2
  404732:	vpsrlq ymm5,ymm2,0x20
  404737:	vpmuludq ymm5,ymm7,ymm5
  40473b:	vpaddq ymm4,ymm5,ymm4
  40473f:	vpsllq ymm4,ymm4,0x20
  404744:	vpmuludq ymm2,ymm7,ymm2
  404748:	vpaddq ymm2,ymm2,ymm4
  40474c:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x108]
  404755:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x128]
  40475e:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x148]
  404767:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x168]
  404770:	vpsrlq ymm8,ymm4,0x20
  404775:	vpmuludq ymm8,ymm8,ymm0
  404779:	vpsrlq ymm9,ymm0,0x20
  40477e:	vpmuludq ymm9,ymm4,ymm9
  404783:	vpaddq ymm8,ymm9,ymm8
  404788:	vpsllq ymm8,ymm8,0x20
  40478e:	vpmuludq ymm0,ymm4,ymm0
  404792:	vpaddq ymm0,ymm0,ymm8
  404797:	vpsrlq ymm4,ymm5,0x20
  40479c:	vpmuludq ymm4,ymm4,ymm1
  4047a0:	vpsrlq ymm8,ymm1,0x20
  4047a5:	vpmuludq ymm8,ymm5,ymm8
  4047aa:	vpaddq ymm4,ymm8,ymm4
  4047ae:	vpsllq ymm4,ymm4,0x20
  4047b3:	vpmuludq ymm1,ymm5,ymm1
  4047b7:	vpaddq ymm1,ymm1,ymm4
  4047bb:	vpsrlq ymm4,ymm6,0x20
  4047c0:	vpmuludq ymm4,ymm4,ymm3
  4047c4:	vpsrlq ymm5,ymm3,0x20
  4047c9:	vpmuludq ymm5,ymm6,ymm5
  4047cd:	vpaddq ymm4,ymm5,ymm4
  4047d1:	vpsllq ymm4,ymm4,0x20
  4047d6:	vpmuludq ymm3,ymm6,ymm3
  4047da:	vpaddq ymm3,ymm3,ymm4
  4047de:	vpsrlq ymm4,ymm7,0x20
  4047e3:	vpmuludq ymm4,ymm4,ymm2
  4047e7:	vpsrlq ymm5,ymm2,0x20
  4047ec:	vpmuludq ymm5,ymm7,ymm5
  4047f0:	vpaddq ymm4,ymm5,ymm4
  4047f4:	vpsllq ymm4,ymm4,0x20
  4047f9:	vpmuludq ymm2,ymm7,ymm2
  4047fd:	vpaddq ymm2,ymm2,ymm4
  404801:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x188]
  40480a:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x1a8]
  404813:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x1c8]
  40481c:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x1e8]
  404825:	vpsrlq ymm8,ymm4,0x20
  40482a:	vpmuludq ymm8,ymm8,ymm0
  40482e:	vpsrlq ymm9,ymm0,0x20
  404833:	vpmuludq ymm9,ymm4,ymm9
  404838:	vpaddq ymm8,ymm9,ymm8
  40483d:	vpsllq ymm8,ymm8,0x20
  404843:	vpmuludq ymm0,ymm4,ymm0
  404847:	vpaddq ymm0,ymm0,ymm8
  40484c:	vpsrlq ymm4,ymm5,0x20
  404851:	vpmuludq ymm4,ymm4,ymm1
  404855:	vpsrlq ymm8,ymm1,0x20
  40485a:	vpmuludq ymm8,ymm5,ymm8
  40485f:	vpaddq ymm4,ymm8,ymm4
  404863:	vpsllq ymm4,ymm4,0x20
  404868:	vpmuludq ymm1,ymm5,ymm1
  40486c:	vpaddq ymm1,ymm1,ymm4
  404870:	vpsrlq ymm4,ymm6,0x20
  404875:	vpmuludq ymm4,ymm4,ymm3
  404879:	vpsrlq ymm5,ymm3,0x20
  40487e:	vpmuludq ymm5,ymm6,ymm5
  404882:	vpaddq ymm4,ymm5,ymm4
  404886:	vpsllq ymm4,ymm4,0x20
  40488b:	vpmuludq ymm3,ymm6,ymm3
  40488f:	vpaddq ymm3,ymm3,ymm4
  404893:	vpsrlq ymm4,ymm7,0x20
  404898:	vpmuludq ymm4,ymm4,ymm2
  40489c:	vpsrlq ymm5,ymm2,0x20
  4048a1:	vpmuludq ymm5,ymm7,ymm5
  4048a5:	vpaddq ymm4,ymm5,ymm4
  4048a9:	vpsllq ymm4,ymm4,0x20
  4048ae:	vpmuludq ymm2,ymm7,ymm2
  4048b2:	vpaddq ymm2,ymm2,ymm4
  4048b6:	add    rbx,0x40
  4048ba:	add    rsi,0x4
  4048be:	jne    4045ee <Mat_VarReadNextInfo@plt+0x22ce>
  4048c4:	test   rcx,rcx
  4048c7:	je     404992 <Mat_VarReadNextInfo@plt+0x2672>
  4048cd:	neg    rcx
  4048d0:	lea    rsi,[rbx*8+0x0]
  4048d8:	or     rsi,0x8
  4048dc:	vmovdqu ymm4,YMMWORD PTR [rax+rsi*1]
  4048e1:	vmovdqu ymm5,YMMWORD PTR [rax+rsi*1+0x20]
  4048e7:	vmovdqu ymm6,YMMWORD PTR [rax+rsi*1+0x40]
  4048ed:	vmovdqu ymm7,YMMWORD PTR [rax+rsi*1+0x60]
  4048f3:	vpsrlq ymm8,ymm0,0x20
  4048f8:	vpmuludq ymm8,ymm4,ymm8
  4048fd:	vpsrlq ymm9,ymm4,0x20
  404902:	vpmuludq ymm9,ymm9,ymm0
  404906:	vpaddq ymm8,ymm8,ymm9
  40490b:	vpsllq ymm8,ymm8,0x20
  404911:	vpmuludq ymm0,ymm4,ymm0
  404915:	vpaddq ymm0,ymm0,ymm8
  40491a:	vpsrlq ymm4,ymm1,0x20
  40491f:	vpmuludq ymm4,ymm5,ymm4
  404923:	vpsrlq ymm8,ymm5,0x20
  404928:	vpmuludq ymm8,ymm8,ymm1
  40492c:	vpaddq ymm4,ymm4,ymm8
  404931:	vpsllq ymm4,ymm4,0x20
  404936:	vpmuludq ymm1,ymm5,ymm1
  40493a:	vpaddq ymm1,ymm1,ymm4
  40493e:	vpsrlq ymm4,ymm3,0x20
  404943:	vpmuludq ymm4,ymm6,ymm4
  404947:	vpsrlq ymm5,ymm6,0x20
  40494c:	vpmuludq ymm5,ymm5,ymm3
  404950:	vpaddq ymm4,ymm4,ymm5
  404954:	vpsllq ymm4,ymm4,0x20
  404959:	vpmuludq ymm3,ymm6,ymm3
  40495d:	vpaddq ymm3,ymm3,ymm4
  404961:	vpsrlq ymm4,ymm2,0x20
  404966:	vpmuludq ymm4,ymm7,ymm4
  40496a:	vpsrlq ymm5,ymm7,0x20
  40496f:	vpmuludq ymm5,ymm5,ymm2
  404973:	vpaddq ymm4,ymm4,ymm5
  404977:	vpsllq ymm4,ymm4,0x20
  40497c:	vpmuludq ymm2,ymm7,ymm2
  404980:	vpaddq ymm2,ymm2,ymm4
  404984:	add    rbx,0x10
  404988:	add    rcx,0x1
  40498c:	jne    4048d0 <Mat_VarReadNextInfo@plt+0x25b0>
  404992:	vpsrlq ymm4,ymm1,0x20
  404997:	vpmuludq ymm4,ymm4,ymm0
  40499b:	vpsrlq ymm5,ymm0,0x20
  4049a0:	vpmuludq ymm5,ymm1,ymm5
  4049a4:	vpaddq ymm4,ymm5,ymm4
  4049a8:	vpsllq ymm4,ymm4,0x20
  4049ad:	vpmuludq ymm0,ymm1,ymm0
  4049b1:	vpaddq ymm0,ymm0,ymm4
  4049b5:	vpsrlq ymm1,ymm3,0x20
  4049ba:	vpmuludq ymm1,ymm1,ymm0
  4049be:	vpsrlq ymm4,ymm0,0x20
  4049c3:	vpmuludq ymm4,ymm3,ymm4
  4049c7:	vpaddq ymm1,ymm4,ymm1
  4049cb:	vpsllq ymm1,ymm1,0x20
  4049d0:	vpmuludq ymm0,ymm3,ymm0
  4049d4:	vpaddq ymm0,ymm0,ymm1
  4049d8:	vpsrlq ymm1,ymm2,0x20
  4049dd:	vpmuludq ymm1,ymm1,ymm0
  4049e1:	vpsrlq ymm3,ymm0,0x20
  4049e6:	vpmuludq ymm3,ymm2,ymm3
  4049ea:	vpaddq ymm1,ymm3,ymm1
  4049ee:	vpsllq ymm1,ymm1,0x20
  4049f3:	vpmuludq ymm0,ymm2,ymm0
  4049f7:	vpaddq ymm0,ymm0,ymm1
  4049fb:	vextracti128 xmm1,ymm0,0x1
  404a01:	vpsrlq ymm2,ymm0,0x20
  404a06:	vpmuludq ymm2,ymm2,ymm1
  404a0a:	vpsrlq ymm3,ymm1,0x20
  404a0f:	vpmuludq ymm3,ymm0,ymm3
  404a13:	vpaddq ymm2,ymm3,ymm2
  404a17:	vpsllq ymm2,ymm2,0x20
  404a1c:	vpmuludq ymm0,ymm0,ymm1
  404a20:	vpaddq ymm0,ymm0,ymm2
  404a24:	vpshufd xmm1,xmm0,0x4e
  404a29:	vpsrlq ymm2,ymm0,0x20
  404a2e:	vpmuludq ymm2,ymm2,ymm1
  404a32:	vpsrlq ymm3,ymm1,0x20
  404a37:	vpmuludq ymm3,ymm0,ymm3
  404a3b:	vpaddq ymm2,ymm3,ymm2
  404a3f:	vpsllq ymm2,ymm2,0x20
  404a44:	vpmuludq ymm0,ymm0,ymm1
  404a48:	vpaddq ymm0,ymm0,ymm2
  404a4c:	vmovq  rbx,xmm0
  404a51:	cmp    r8,rdx
  404a54:	je     404a6e <Mat_VarReadNextInfo@plt+0x274e>
  404a56:	or     rdx,0x1
  404a5a:	nop    WORD PTR [rax+rax*1+0x0]
  404a60:	imul   rbx,QWORD PTR [rax+rdx*8]
  404a65:	add    rdx,0x1
  404a69:	cmp    rdx,r9
  404a6c:	jl     404a60 <Mat_VarReadNextInfo@plt+0x2740>
  404a6e:	test   r14d,r14d
  404a71:	jle    404ad9 <Mat_VarReadNextInfo@plt+0x27b9>
  404a73:	test   rbx,rbx
  404a76:	jne    404ad9 <Mat_VarReadNextInfo@plt+0x27b9>
  404a78:	mov    rdi,rbp
  404a7b:	vzeroupper 
  404a7e:	call   4021b0 <Mat_VarGetStructFieldnames@plt>
  404a83:	mov    r15,rax
  404a86:	lea    rdi,[rip+0x28d9]        # 407366 <getopt_long_only@@Base+0x1326>
  404a8d:	xor    eax,eax
  404a8f:	mov    esi,r14d
  404a92:	call   402120 <Mat_Message@plt>
  404a97:	mov    eax,DWORD PTR [rip+0x58c3]        # 40a360 <optopt@@Base+0x38>
  404a9d:	add    eax,0x1
  404aa0:	mov    DWORD PTR [rip+0x58ba],eax        # 40a360 <optopt@@Base+0x38>
  404aa6:	test   r15,r15
  404aa9:	je     404b3d <Mat_VarReadNextInfo@plt+0x281d>
  404aaf:	mov    ebp,r14d
  404ab2:	lea    r14,[rip+0x287b]        # 407334 <getopt_long_only@@Base+0x12f4>
  404ab9:	xor    ebx,ebx
  404abb:	nop    DWORD PTR [rax+rax*1+0x0]
  404ac0:	mov    rsi,QWORD PTR [r15+rbx*8]
  404ac4:	xor    eax,eax
  404ac6:	mov    rdi,r14
  404ac9:	call   402120 <Mat_Message@plt>
  404ace:	add    rbx,0x1
  404ad2:	cmp    rbp,rbx
  404ad5:	jne    404ac0 <Mat_VarReadNextInfo@plt+0x27a0>
  404ad7:	jmp    404b37 <Mat_VarReadNextInfo@plt+0x2817>
  404ad9:	test   r14d,r14d
  404adc:	jle    40431f <Mat_VarReadNextInfo@plt+0x1fff>
  404ae2:	test   rbx,rbx
  404ae5:	je     40431f <Mat_VarReadNextInfo@plt+0x1fff>
  404aeb:	lea    rdi,[rip+0x2874]        # 407366 <getopt_long_only@@Base+0x1326>
  404af2:	xor    eax,eax
  404af4:	mov    esi,r14d
  404af7:	vzeroupper 
  404afa:	call   402120 <Mat_Message@plt>
  404aff:	mov    eax,DWORD PTR [rip+0x585b]        # 40a360 <optopt@@Base+0x38>
  404b05:	add    eax,0x1
  404b08:	mov    DWORD PTR [rip+0x5852],eax        # 40a360 <optopt@@Base+0x38>
  404b0e:	mov    r15,QWORD PTR [rbp+0x38]
  404b12:	test   r15,r15
  404b15:	je     404b3d <Mat_VarReadNextInfo@plt+0x281d>
  404b17:	movsxd rcx,r14d
  404b1a:	imul   rbx,rcx
  404b1e:	test   rbx,rbx
  404b21:	je     404b3d <Mat_VarReadNextInfo@plt+0x281d>
  404b23:	xor    ebp,ebp
  404b25:	mov    rdi,QWORD PTR [r15+rbp*8]
  404b29:	call   403d40 <Mat_VarReadNextInfo@plt+0x1a20>
  404b2e:	add    rbp,0x1
  404b32:	cmp    rbx,rbp
  404b35:	jne    404b25 <Mat_VarReadNextInfo@plt+0x2805>
  404b37:	mov    eax,DWORD PTR [rip+0x5823]        # 40a360 <optopt@@Base+0x38>
  404b3d:	add    eax,0xffffffff
  404b40:	mov    DWORD PTR [rip+0x581a],eax        # 40a360 <optopt@@Base+0x38>
  404b46:	lea    rdi,[rip+0x2d3d]        # 40788a <getopt_long_only@@Base+0x184a>
  404b4d:	xor    eax,eax
  404b4f:	add    rsp,0x28
  404b53:	pop    rbx
  404b54:	pop    r12
  404b56:	pop    r13
  404b58:	pop    r14
  404b5a:	pop    r15
  404b5c:	pop    rbp
  404b5d:	jmp    402120 <Mat_Message@plt>
  404b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b6c:	nop    DWORD PTR [rax+0x0]
  404b70:	push   rbp
  404b71:	mov    rbp,rsp
  404b74:	push   r15
  404b76:	push   r14
  404b78:	push   r12
  404b7a:	push   rbx
  404b7b:	and    rsp,0xffffffffffffffe0
  404b7f:	sub    rsp,0x40
  404b83:	mov    r15,rdi
  404b86:	vxorpd xmm0,xmm0,xmm0
  404b8a:	vmovapd YMMWORD PTR [rsp],ymm0
  404b8f:	cmp    BYTE PTR [rip+0x57ce],0x0        # 40a364 <optopt@@Base+0x3c>
  404b96:	jne    404bcc <Mat_VarReadNextInfo@plt+0x28ac>
  404b98:	lea    rdi,[rip+0x2851]        # 4073f0 <getopt_long_only@@Base+0x13b0>
  404b9f:	lea    rsi,[rip+0x2872]        # 407418 <getopt_long_only@@Base+0x13d8>
  404ba6:	lea    rdx,[rip+0x2870]        # 40741d <getopt_long_only@@Base+0x13dd>
  404bad:	lea    rcx,[rip+0x286e]        # 407422 <getopt_long_only@@Base+0x13e2>
  404bb4:	lea    r8,[rip+0x286d]        # 407428 <getopt_long_only@@Base+0x13e8>
  404bbb:	xor    eax,eax
  404bbd:	vzeroupper 
  404bc0:	call   402160 <printf@plt>
  404bc5:	mov    BYTE PTR [rip+0x5798],0x1        # 40a364 <optopt@@Base+0x3c>
  404bcc:	mov    rsi,QWORD PTR [r15+0x30]
  404bd0:	lea    rdi,[rip+0x2857]        # 40742e <getopt_long_only@@Base+0x13ee>
  404bd7:	xor    eax,eax
  404bd9:	vzeroupper 
  404bdc:	call   402160 <printf@plt>
  404be1:	cmp    DWORD PTR [r15+0x8],0x0
  404be6:	jle    404c9a <Mat_VarReadNextInfo@plt+0x297a>
  404bec:	mov    rax,QWORD PTR [r15+0x28]
  404bf0:	mov    rsi,QWORD PTR [rax]
  404bf3:	lea    rdi,[rip+0x283a]        # 407434 <getopt_long_only@@Base+0x13f4>
  404bfa:	xor    eax,eax
  404bfc:	call   402160 <printf@plt>
  404c01:	cmp    DWORD PTR [r15+0x8],0x2
  404c06:	jl     404c87 <Mat_VarReadNextInfo@plt+0x2967>
  404c0c:	mov    ebx,0x1
  404c11:	lea    r14,[rip+0x2821]        # 407439 <getopt_long_only@@Base+0x13f9>
  404c18:	xor    r12d,r12d
  404c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c20:	mov    rax,QWORD PTR [r15+0x28]
  404c24:	vmovsd xmm0,QWORD PTR [rax+rbx*8]
  404c29:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x23ef]        # 407020 <getopt_long_only@@Base+0xfe0>
  404c31:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x23f7]        # 407030 <getopt_long_only@@Base+0xff0>
  404c39:	vhaddpd xmm0,xmm0,xmm0
  404c3d:	call   4021d0 <log10@plt>
  404c42:	vroundsd xmm0,xmm0,xmm0,0xa
  404c48:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x2538]        # 407188 <getopt_long_only@@Base+0x1148>
  404c50:	vmovsd xmm1,QWORD PTR [rip+0x2538]        # 407190 <getopt_long_only@@Base+0x1150>
  404c58:	vucomisd xmm1,xmm0
  404c5c:	jbe    404c7a <Mat_VarReadNextInfo@plt+0x295a>
  404c5e:	movsxd r12,r12d
  404c61:	lea    rdi,[rsp+r12*1]
  404c65:	mov    rax,QWORD PTR [r15+0x28]
  404c69:	mov    rdx,QWORD PTR [rax+rbx*8]
  404c6d:	xor    eax,eax
  404c6f:	mov    rsi,r14
  404c72:	call   4022c0 <sprintf@plt>
  404c77:	add    r12d,eax
  404c7a:	add    rbx,0x1
  404c7e:	movsxd rax,DWORD PTR [r15+0x8]
  404c82:	cmp    rbx,rax
  404c85:	jl     404c20 <Mat_VarReadNextInfo@plt+0x2900>
  404c87:	lea    rdi,[rip+0x27b0]        # 40743e <getopt_long_only@@Base+0x13fe>
  404c8e:	mov    rsi,rsp
  404c91:	xor    eax,eax
  404c93:	call   402160 <printf@plt>
  404c98:	jmp    404ca8 <Mat_VarReadNextInfo@plt+0x2988>
  404c9a:	lea    rdi,[rip+0x27a3]        # 407444 <getopt_long_only@@Base+0x1404>
  404ca1:	xor    eax,eax
  404ca3:	call   402160 <printf@plt>
  404ca8:	mov    rdi,r15
  404cab:	call   402300 <Mat_VarGetSize@plt>
  404cb0:	mov    rcx,rax
  404cb3:	cmp    BYTE PTR [rip+0x56a2],0x1        # 40a35c <optopt@@Base+0x34>
  404cba:	jne    404cef <Mat_VarReadNextInfo@plt+0x29cf>
  404cbc:	cmp    rcx,0x40000001
  404cc3:	jb     404d02 <Mat_VarReadNextInfo@plt+0x29e2>
  404cc5:	vmovq  xmm0,rcx
  404cca:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x234e]        # 407020 <getopt_long_only@@Base+0xfe0>
  404cd2:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2356]        # 407030 <getopt_long_only@@Base+0xff0>
  404cda:	vhaddpd xmm0,xmm0,xmm0
  404cde:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x24c2]        # 4071a8 <getopt_long_only@@Base+0x1168>
  404ce6:	lea    rdi,[rip+0x276c]        # 407459 <getopt_long_only@@Base+0x1419>
  404ced:	jmp    404d66 <Mat_VarReadNextInfo@plt+0x2a46>
  404cef:	lea    rdi,[rip+0x2786]        # 40747c <getopt_long_only@@Base+0x143c>
  404cf6:	xor    eax,eax
  404cf8:	mov    rsi,rcx
  404cfb:	call   402160 <printf@plt>
  404d00:	jmp    404d6d <Mat_VarReadNextInfo@plt+0x2a4d>
  404d02:	cmp    rcx,0x100001
  404d09:	jb     404d35 <Mat_VarReadNextInfo@plt+0x2a15>
  404d0b:	vmovq  xmm0,rcx
  404d10:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x2308]        # 407020 <getopt_long_only@@Base+0xfe0>
  404d18:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2310]        # 407030 <getopt_long_only@@Base+0xff0>
  404d20:	vhaddpd xmm0,xmm0,xmm0
  404d24:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2474]        # 4071a0 <getopt_long_only@@Base+0x1160>
  404d2c:	lea    rdi,[rip+0x272f]        # 407462 <getopt_long_only@@Base+0x1422>
  404d33:	jmp    404d66 <Mat_VarReadNextInfo@plt+0x2a46>
  404d35:	cmp    rcx,0x401
  404d3c:	jb     404d97 <Mat_VarReadNextInfo@plt+0x2a77>
  404d3e:	vmovq  xmm0,rcx
  404d43:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x22d5]        # 407020 <getopt_long_only@@Base+0xfe0>
  404d4b:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x22dd]        # 407030 <getopt_long_only@@Base+0xff0>
  404d53:	vhaddpd xmm0,xmm0,xmm0
  404d57:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2439]        # 407198 <getopt_long_only@@Base+0x1158>
  404d5f:	lea    rdi,[rip+0x2705]        # 40746b <getopt_long_only@@Base+0x142b>
  404d66:	mov    al,0x1
  404d68:	call   402160 <printf@plt>
  404d6d:	mov    eax,DWORD PTR [r15+0x14]
  404d71:	lea    rcx,[rip+0x4fb8]        # 409d30 <getopt_long_only@@Base+0x3cf0>
  404d78:	mov    rsi,QWORD PTR [rcx+rax*8]
  404d7c:	lea    rdi,[rip+0x2701]        # 407484 <getopt_long_only@@Base+0x1444>
  404d83:	xor    eax,eax
  404d85:	call   402160 <printf@plt>
  404d8a:	lea    rsp,[rbp-0x20]
  404d8e:	pop    rbx
  404d8f:	pop    r12
  404d91:	pop    r14
  404d93:	pop    r15
  404d95:	pop    rbp
  404d96:	ret    
  404d97:	lea    rdi,[rip+0x26d6]        # 407474 <getopt_long_only@@Base+0x1434>
  404d9e:	jmp    404cf6 <Mat_VarReadNextInfo@plt+0x29d6>
  404da3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dad:	nop    DWORD PTR [rax]
  404db0:	push   r14
  404db2:	push   rbx
  404db3:	push   rax
  404db4:	mov    r14,rdi
  404db7:	mov    esi,0x28
  404dbc:	call   402150 <strchr@plt>
  404dc1:	mov    rbx,rax
  404dc4:	mov    esi,0x29
  404dc9:	mov    rdi,r14
  404dcc:	call   402150 <strchr@plt>
  404dd1:	test   rax,rax
  404dd4:	je     404de7 <Mat_VarReadNextInfo@plt+0x2ac7>
  404dd6:	test   rbx,rbx
  404dd9:	je     404de4 <Mat_VarReadNextInfo@plt+0x2ac4>
  404ddb:	cmp    rax,rbx
  404dde:	cmovb  rbx,rax
  404de2:	jmp    404de7 <Mat_VarReadNextInfo@plt+0x2ac7>
  404de4:	mov    rbx,rax
  404de7:	mov    esi,0x7b
  404dec:	mov    rdi,r14
  404def:	call   402150 <strchr@plt>
  404df4:	test   rax,rax
  404df7:	je     404e0a <Mat_VarReadNextInfo@plt+0x2aea>
  404df9:	test   rbx,rbx
  404dfc:	je     404e07 <Mat_VarReadNextInfo@plt+0x2ae7>
  404dfe:	cmp    rax,rbx
  404e01:	cmovb  rbx,rax
  404e05:	jmp    404e0a <Mat_VarReadNextInfo@plt+0x2aea>
  404e07:	mov    rbx,rax
  404e0a:	mov    esi,0x7d
  404e0f:	mov    rdi,r14
  404e12:	call   402150 <strchr@plt>
  404e17:	test   rax,rax
  404e1a:	je     404e2d <Mat_VarReadNextInfo@plt+0x2b0d>
  404e1c:	test   rbx,rbx
  404e1f:	je     404e2a <Mat_VarReadNextInfo@plt+0x2b0a>
  404e21:	cmp    rax,rbx
  404e24:	cmovb  rbx,rax
  404e28:	jmp    404e2d <Mat_VarReadNextInfo@plt+0x2b0d>
  404e2a:	mov    rbx,rax
  404e2d:	mov    esi,0x2e
  404e32:	mov    rdi,r14
  404e35:	call   402150 <strchr@plt>
  404e3a:	test   rax,rax
  404e3d:	je     404e50 <Mat_VarReadNextInfo@plt+0x2b30>
  404e3f:	test   rbx,rbx
  404e42:	je     404e4d <Mat_VarReadNextInfo@plt+0x2b2d>
  404e44:	cmp    rax,rbx
  404e47:	cmovb  rbx,rax
  404e4b:	jmp    404e50 <Mat_VarReadNextInfo@plt+0x2b30>
  404e4d:	mov    rbx,rax
  404e50:	test   rbx,rbx
  404e53:	cmovne r14,rbx
  404e57:	mov    rax,r14
  404e5a:	add    rsp,0x8
  404e5e:	pop    rbx
  404e5f:	pop    r14
  404e61:	ret    
  404e62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e6c:	nop    DWORD PTR [rax+0x0]
  404e70:	add    edi,0xffffffff
  404e73:	cmp    edi,0xc
  404e76:	ja     404ef6 <Mat_VarReadNextInfo@plt+0x2bd6>
  404e78:	lea    rax,[rip+0x2281]        # 407100 <getopt_long_only@@Base+0x10c0>
  404e7f:	movsxd rcx,DWORD PTR [rax+rdi*4]
  404e83:	add    rcx,rax
  404e86:	jmp    rcx
  404e88:	movsx  esi,BYTE PTR [rsi]
  404e8b:	lea    rdi,[rip+0x251b]        # 4073ad <getopt_long_only@@Base+0x136d>
  404e92:	xor    eax,eax
  404e94:	jmp    402160 <printf@plt>
  404e99:	movzx  esi,BYTE PTR [rsi]
  404e9c:	lea    rdi,[rip+0x250f]        # 4073b2 <getopt_long_only@@Base+0x1372>
  404ea3:	xor    eax,eax
  404ea5:	jmp    402160 <printf@plt>
  404eaa:	movsx  esi,WORD PTR [rsi]
  404ead:	lea    rdi,[rip+0x24f1]        # 4073a5 <getopt_long_only@@Base+0x1365>
  404eb4:	xor    eax,eax
  404eb6:	jmp    402160 <printf@plt>
  404ebb:	movzx  esi,WORD PTR [rsi]
  404ebe:	lea    rdi,[rip+0x24e4]        # 4073a9 <getopt_long_only@@Base+0x1369>
  404ec5:	xor    eax,eax
  404ec7:	jmp    402160 <printf@plt>
  404ecc:	mov    esi,DWORD PTR [rsi]
  404ece:	lea    rdi,[rip+0x2478]        # 40734d <getopt_long_only@@Base+0x130d>
  404ed5:	xor    eax,eax
  404ed7:	jmp    402160 <printf@plt>
  404edc:	mov    esi,DWORD PTR [rsi]
  404ede:	lea    rdi,[rip+0x24bd]        # 4073a2 <getopt_long_only@@Base+0x1362>
  404ee5:	xor    eax,eax
  404ee7:	jmp    402160 <printf@plt>
  404eec:	vmovss xmm0,DWORD PTR [rsi]
  404ef0:	vcvtss2sd xmm0,xmm0,xmm0
  404ef4:	jmp    404efb <Mat_VarReadNextInfo@plt+0x2bdb>
  404ef6:	ret    
  404ef7:	vmovsd xmm0,QWORD PTR [rsi]
  404efb:	lea    rdi,[rip+0x2495]        # 407397 <getopt_long_only@@Base+0x1357>
  404f02:	mov    al,0x1
  404f04:	jmp    402160 <printf@plt>
  404f09:	mov    rsi,QWORD PTR [rsi]
  404f0c:	lea    rdi,[rip+0x2487]        # 40739a <getopt_long_only@@Base+0x135a>
  404f13:	xor    eax,eax
  404f15:	jmp    402160 <printf@plt>
  404f1a:	mov    rsi,QWORD PTR [rsi]
  404f1d:	lea    rdi,[rip+0x247a]        # 40739e <getopt_long_only@@Base+0x135e>
  404f24:	xor    eax,eax
  404f26:	jmp    402160 <printf@plt>
  404f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f30:	push   rbp
  404f31:	push   r15
  404f33:	push   r14
  404f35:	push   r13
  404f37:	push   r12
  404f39:	push   rbx
  404f3a:	sub    rsp,0x18
  404f3e:	mov    QWORD PTR [rsp],r8
  404f42:	mov    QWORD PTR [rsp+0x10],rcx
  404f47:	mov    QWORD PTR [rsp+0x8],rdx
  404f4c:	mov    r13,rsi
  404f4f:	mov    rbp,rdi
  404f52:	lea    r14,[rdi+0x1]
  404f56:	xor    r12d,r12d
  404f59:	xor    r15d,r15d
  404f5c:	nop    DWORD PTR [rax+0x0]
  404f60:	mov    rbx,rbp
  404f63:	lea    rbp,[rbp+0x1]
  404f67:	movzx  eax,BYTE PTR [rbx+0x1]
  404f6b:	cmp    al,0x39
  404f6d:	jg     404fd0 <Mat_VarReadNextInfo@plt+0x2cb0>
  404f6f:	cmp    al,0x29
  404f71:	je     404fdc <Mat_VarReadNextInfo@plt+0x2cbc>
  404f73:	cmp    al,0x2c
  404f75:	jne    405186 <Mat_VarReadNextInfo@plt+0x2e66>
  404f7b:	test   r12d,r12d
  404f7e:	je     4050f7 <Mat_VarReadNextInfo@plt+0x2dd7>
  404f84:	cmp    r12d,0x1
  404f88:	je     404f94 <Mat_VarReadNextInfo@plt+0x2c74>
  404f8a:	cmp    r12d,0x2
  404f8e:	jne    405178 <Mat_VarReadNextInfo@plt+0x2e58>
  404f94:	mov    BYTE PTR [rbx+0x1],0x0
  404f98:	mov    rdi,r14
  404f9b:	lea    rsi,[rip+0x2923]        # 4078c5 <getopt_long_only@@Base+0x1885>
  404fa2:	call   4021c0 <strcmp@plt>
  404fa7:	test   eax,eax
  404fa9:	je     40513a <Mat_VarReadNextInfo@plt+0x2e1a>
  404faf:	xor    esi,esi
  404fb1:	mov    edx,0xa
  404fb6:	mov    rdi,r14
  404fb9:	call   4021f0 <strtol@plt>
  404fbe:	movsxd rcx,r15d
  404fc1:	jmp    405171 <Mat_VarReadNextInfo@plt+0x2e51>
  404fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fd0:	cmp    al,0x3a
  404fd2:	je     405040 <Mat_VarReadNextInfo@plt+0x2d20>
  404fd4:	cmp    al,0x7d
  404fd6:	jne    405186 <Mat_VarReadNextInfo@plt+0x2e66>
  404fdc:	mov    BYTE PTR [rbx+0x1],0x0
  404fe0:	mov    rdi,r14
  404fe3:	lea    rsi,[rip+0x28db]        # 4078c5 <getopt_long_only@@Base+0x1885>
  404fea:	call   4021c0 <strcmp@plt>
  404fef:	test   eax,eax
  404ff1:	je     40509b <Mat_VarReadNextInfo@plt+0x2d7b>
  404ff7:	xor    esi,esi
  404ff9:	mov    edx,0xa
  404ffe:	mov    rdi,r14
  405001:	call   4021f0 <strtol@plt>
  405006:	cmp    r12d,0x2
  40500a:	je     40508f <Mat_VarReadNextInfo@plt+0x2d6f>
  405010:	cmp    r12d,0x1
  405014:	je     40508f <Mat_VarReadNextInfo@plt+0x2d6f>
  405016:	test   r12d,r12d
  405019:	jne    40513f <Mat_VarReadNextInfo@plt+0x2e1f>
  40501f:	lea    ecx,[rax-0x1]
  405022:	movsxd rdx,r15d
  405025:	mov    rsi,QWORD PTR [rsp+0x8]
  40502a:	mov    DWORD PTR [rsi+rdx*4],ecx
  40502d:	mov    rcx,QWORD PTR [rsp]
  405031:	mov    DWORD PTR [rcx+rdx*4],eax
  405034:	jmp    4050ea <Mat_VarReadNextInfo@plt+0x2dca>
  405039:	nop    DWORD PTR [rax+0x0]
  405040:	mov    BYTE PTR [rbx+0x1],0x0
  405044:	mov    rdi,r14
  405047:	lea    rsi,[rip+0x2877]        # 4078c5 <getopt_long_only@@Base+0x1885>
  40504e:	call   4021c0 <strcmp@plt>
  405053:	test   eax,eax
  405055:	je     4050c1 <Mat_VarReadNextInfo@plt+0x2da1>
  405057:	xor    esi,esi
  405059:	mov    edx,0xa
  40505e:	mov    rdi,r14
  405061:	call   4021f0 <strtol@plt>
  405066:	cmp    r12d,0x2
  40506a:	je     40508f <Mat_VarReadNextInfo@plt+0x2d6f>
  40506c:	cmp    r12d,0x1
  405070:	je     40512d <Mat_VarReadNextInfo@plt+0x2e0d>
  405076:	test   r12d,r12d
  405079:	jne    40513f <Mat_VarReadNextInfo@plt+0x2e1f>
  40507f:	add    eax,0xffffffff
  405082:	movsxd rcx,r15d
  405085:	mov    rdx,QWORD PTR [rsp+0x8]
  40508a:	mov    DWORD PTR [rdx+rcx*4],eax
  40508d:	jmp    4050ea <Mat_VarReadNextInfo@plt+0x2dca>
  40508f:	movsxd rcx,r15d
  405092:	mov    rdx,QWORD PTR [rsp]
  405096:	mov    DWORD PTR [rdx+rcx*4],eax
  405099:	jmp    4050ea <Mat_VarReadNextInfo@plt+0x2dca>
  40509b:	cmp    r12d,0x2
  40509f:	je     4050dc <Mat_VarReadNextInfo@plt+0x2dbc>
  4050a1:	cmp    r12d,0x1
  4050a5:	je     4050dc <Mat_VarReadNextInfo@plt+0x2dbc>
  4050a7:	test   r12d,r12d
  4050aa:	jne    40513f <Mat_VarReadNextInfo@plt+0x2e1f>
  4050b0:	movsxd rax,r15d
  4050b3:	mov    rcx,QWORD PTR [rsp+0x8]
  4050b8:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  4050bf:	jmp    4050df <Mat_VarReadNextInfo@plt+0x2dbf>
  4050c1:	cmp    r12d,0x2
  4050c5:	je     4050dc <Mat_VarReadNextInfo@plt+0x2dbc>
  4050c7:	cmp    r12d,0x1
  4050cb:	je     4050dc <Mat_VarReadNextInfo@plt+0x2dbc>
  4050cd:	test   r12d,r12d
  4050d0:	jne    40513f <Mat_VarReadNextInfo@plt+0x2e1f>
  4050d2:	movsxd rax,r15d
  4050d5:	mov    rcx,QWORD PTR [rsp+0x8]
  4050da:	jmp    4050e3 <Mat_VarReadNextInfo@plt+0x2dc3>
  4050dc:	movsxd rax,r15d
  4050df:	mov    rcx,QWORD PTR [rsp]
  4050e3:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  4050ea:	add    r12d,0x1
  4050ee:	add    rbx,0x2
  4050f2:	jmp    405183 <Mat_VarReadNextInfo@plt+0x2e63>
  4050f7:	mov    BYTE PTR [rbx+0x1],0x0
  4050fb:	mov    rdi,r14
  4050fe:	lea    rsi,[rip+0x27c0]        # 4078c5 <getopt_long_only@@Base+0x1885>
  405105:	call   4021c0 <strcmp@plt>
  40510a:	test   eax,eax
  40510c:	je     40515d <Mat_VarReadNextInfo@plt+0x2e3d>
  40510e:	xor    esi,esi
  405110:	mov    edx,0xa
  405115:	mov    rdi,r14
  405118:	call   4021f0 <strtol@plt>
  40511d:	lea    edx,[rax-0x1]
  405120:	movsxd rcx,r15d
  405123:	mov    rsi,QWORD PTR [rsp+0x8]
  405128:	mov    DWORD PTR [rsi+rcx*4],edx
  40512b:	jmp    405171 <Mat_VarReadNextInfo@plt+0x2e51>
  40512d:	movsxd rcx,r15d
  405130:	mov    rdx,QWORD PTR [rsp+0x10]
  405135:	mov    DWORD PTR [rdx+rcx*4],eax
  405138:	jmp    4050ea <Mat_VarReadNextInfo@plt+0x2dca>
  40513a:	movsxd rcx,r15d
  40513d:	jmp    40516c <Mat_VarReadNextInfo@plt+0x2e4c>
  40513f:	mov    rax,QWORD PTR [rip+0x4eb2]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  405146:	mov    rdi,QWORD PTR [rax]
  405149:	lea    edx,[r15+0x1]
  40514d:	xor    eax,eax
  40514f:	lea    rsi,[rip+0x2773]        # 4078c9 <getopt_long_only@@Base+0x1889>
  405156:	call   4021e0 <fprintf@plt>
  40515b:	jmp    4050ea <Mat_VarReadNextInfo@plt+0x2dca>
  40515d:	movsxd rcx,r15d
  405160:	mov    rax,QWORD PTR [rsp+0x8]
  405165:	mov    DWORD PTR [rax+rcx*4],0xffffffff
  40516c:	mov    eax,0xffffffff
  405171:	mov    rdx,QWORD PTR [rsp]
  405175:	mov    DWORD PTR [rdx+rcx*4],eax
  405178:	add    r15d,0x1
  40517c:	add    rbx,0x2
  405180:	xor    r12d,r12d
  405183:	mov    r14,rbx
  405186:	cmp    r13,rbp
  405189:	jne    404f60 <Mat_VarReadNextInfo@plt+0x2c40>
  40518f:	add    rsp,0x18
  405193:	pop    rbx
  405194:	pop    r12
  405196:	pop    r13
  405198:	pop    r14
  40519a:	pop    r15
  40519c:	pop    rbp
  40519d:	ret    
  40519e:	xchg   ax,ax
  4051a0:	push   rbp
  4051a1:	push   r14
  4051a3:	push   rbx
  4051a4:	mov    r9d,DWORD PTR [r8+0x8]
  4051a8:	xor    r14d,r14d
  4051ab:	cmp    edi,0x1
  4051ae:	je     4051c0 <Mat_VarReadNextInfo@plt+0x2ea0>
  4051b0:	cmp    r9d,edi
  4051b3:	je     4051c0 <Mat_VarReadNextInfo@plt+0x2ea0>
  4051b5:	mov    eax,r14d
  4051b8:	pop    rbx
  4051b9:	pop    r14
  4051bb:	pop    rbp
  4051bc:	vzeroupper 
  4051bf:	ret    
  4051c0:	cmp    edi,0x1
  4051c3:	jne    4051e8 <Mat_VarReadNextInfo@plt+0x2ec8>
  4051c5:	test   r9d,r9d
  4051c8:	jle    405317 <Mat_VarReadNextInfo@plt+0x2ff7>
  4051ce:	mov    rdi,QWORD PTR [r8+0x28]
  4051d2:	cmp    r9d,0x10
  4051d6:	jae    40532c <Mat_VarReadNextInfo@plt+0x300c>
  4051dc:	mov    ebp,0x1
  4051e1:	xor    eax,eax
  4051e3:	jmp    405460 <Mat_VarReadNextInfo@plt+0x3140>
  4051e8:	test   edi,edi
  4051ea:	jle    405321 <Mat_VarReadNextInfo@plt+0x3001>
  4051f0:	movsxd r9,edi
  4051f3:	mov    r14d,0x1
  4051f9:	xor    ebx,ebx
  4051fb:	vmovdqa xmm0,XMMWORD PTR [rip+0x1e1d]        # 407020 <getopt_long_only@@Base+0xfe0>
  405203:	vmovapd xmm1,XMMWORD PTR [rip+0x1e25]        # 407030 <getopt_long_only@@Base+0xff0>
  40520b:	nop    DWORD PTR [rax+rax*1+0x0]
  405210:	mov    edi,DWORD PTR [rdx+rbx*4]
  405213:	test   edi,edi
  405215:	jle    4054d9 <Mat_VarReadNextInfo@plt+0x31b9>
  40521b:	movsxd rbp,DWORD PTR [rcx+rbx*4]
  40521f:	cmp    rbp,0xffffffffffffffff
  405223:	je     405270 <Mat_VarReadNextInfo@plt+0x2f50>
  405225:	test   ebp,ebp
  405227:	js     405276 <Mat_VarReadNextInfo@plt+0x2f56>
  405229:	mov    rax,QWORD PTR [r8+0x28]
  40522d:	mov    rax,QWORD PTR [rax+rbx*8]
  405231:	cmp    rax,rbp
  405234:	jb     405567 <Mat_VarReadNextInfo@plt+0x3247>
  40523a:	movsxd r10,DWORD PTR [rsi+rbx*4]
  40523e:	cmp    rax,r10
  405241:	jbe    405501 <Mat_VarReadNextInfo@plt+0x31e1>
  405247:	test   ebp,ebp
  405249:	jle    405254 <Mat_VarReadNextInfo@plt+0x2f34>
  40524b:	cmp    r10d,ebp
  40524e:	jg     405501 <Mat_VarReadNextInfo@plt+0x31e1>
  405254:	lea    eax,[r10+0x1]
  405258:	cmp    ebp,eax
  40525a:	jne    4052bd <Mat_VarReadNextInfo@plt+0x2f9d>
  40525c:	mov    DWORD PTR [rcx+rbx*4],0x1
  405263:	jmp    405300 <Mat_VarReadNextInfo@plt+0x2fe0>
  405268:	nop    DWORD PTR [rax+rax*1+0x0]
  405270:	cmp    DWORD PTR [rsi+rbx*4],0xffffffff
  405274:	je     4052e6 <Mat_VarReadNextInfo@plt+0x2fc6>
  405276:	mov    rax,QWORD PTR [r8+0x28]
  40527a:	mov    rax,QWORD PTR [rax+rbx*8]
  40527e:	cmp    edi,0x1
  405281:	jne    4052a0 <Mat_VarReadNextInfo@plt+0x2f80>
  405283:	mov    DWORD PTR [rcx+rbx*4],eax
  405286:	cmp    DWORD PTR [rsi+rbx*4],0x0
  40528a:	jns    405300 <Mat_VarReadNextInfo@plt+0x2fe0>
  40528c:	mov    DWORD PTR [rsi+rbx*4],0x0
  405293:	jmp    405300 <Mat_VarReadNextInfo@plt+0x2fe0>
  405295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40529f:	nop
  4052a0:	movsxd rbp,DWORD PTR [rsi+rbx*4]
  4052a4:	not    rbp
  4052a7:	add    rax,rbp
  4052aa:	vmovq  xmm2,rax
  4052af:	vpunpckldq xmm2,xmm2,xmm0
  4052b3:	vsubpd xmm2,xmm2,xmm1
  4052b7:	vhaddpd xmm2,xmm2,xmm2
  4052bb:	jmp    4052cc <Mat_VarReadNextInfo@plt+0x2fac>
  4052bd:	test   ebp,ebp
  4052bf:	jle    405300 <Mat_VarReadNextInfo@plt+0x2fe0>
  4052c1:	not    r10d
  4052c4:	add    r10d,ebp
  4052c7:	vcvtsi2sd xmm2,xmm4,r10d
  4052cc:	vcvtsi2sd xmm3,xmm4,edi
  4052d0:	vdivsd xmm2,xmm2,xmm3
  4052d4:	vroundsd xmm2,xmm2,xmm2,0x9
  4052da:	vcvttsd2si eax,xmm2
  4052de:	add    eax,0x1
  4052e1:	mov    DWORD PTR [rcx+rbx*4],eax
  4052e4:	jmp    405300 <Mat_VarReadNextInfo@plt+0x2fe0>
  4052e6:	mov    DWORD PTR [rcx+rbx*4],0x1
  4052ed:	mov    rax,QWORD PTR [r8+0x28]
  4052f1:	mov    eax,DWORD PTR [rax+rbx*8]
  4052f4:	add    eax,0xffffffff
  4052f7:	mov    DWORD PTR [rsi+rbx*4],eax
  4052fa:	nop    WORD PTR [rax+rax*1+0x0]
  405300:	imul   r14d,DWORD PTR [rcx+rbx*4]
  405305:	add    rbx,0x1
  405309:	cmp    rbx,r9
  40530c:	jl     405210 <Mat_VarReadNextInfo@plt+0x2ef0>
  405312:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  405317:	mov    ebp,0x1
  40531c:	jmp    40546d <Mat_VarReadNextInfo@plt+0x314d>
  405321:	mov    r14d,0x1
  405327:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  40532c:	mov    eax,r9d
  40532f:	and    eax,0xfffffff0
  405332:	lea    rbx,[rax-0x10]
  405336:	mov    rbp,rbx
  405339:	shr    rbp,0x4
  40533d:	add    rbp,0x1
  405341:	mov    r8d,ebp
  405344:	and    r8d,0x1
  405348:	test   rbx,rbx
  40534b:	je     405517 <Mat_VarReadNextInfo@plt+0x31f7>
  405351:	mov    ebx,0x1
  405356:	sub    rbx,rbp
  405359:	add    rbx,r8
  40535c:	add    rbx,0xffffffffffffffff
  405360:	vpbroadcastd xmm0,DWORD PTR [rip+0x1cd7]        # 407040 <getopt_long_only@@Base+0x1000>
  405369:	xor    ebp,ebp
  40536b:	vmovdqa ymm4,YMMWORD PTR [rip+0x1ded]        # 407160 <getopt_long_only@@Base+0x1120>
  405373:	vmovdqa xmm1,xmm0
  405377:	vmovdqa xmm2,xmm0
  40537b:	vmovdqa xmm3,xmm0
  40537f:	nop
  405380:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8]
  405386:	vpermd ymm6,ymm4,YMMWORD PTR [rdi+rbp*8+0x20]
  40538d:	vpermd ymm7,ymm4,YMMWORD PTR [rdi+rbp*8+0x40]
  405394:	vpermd ymm8,ymm4,YMMWORD PTR [rdi+rbp*8+0x60]
  40539b:	vpmulld xmm0,xmm0,xmm5
  4053a0:	vpmulld xmm1,xmm1,xmm6
  4053a5:	vpmulld xmm2,xmm2,xmm7
  4053aa:	vpmulld xmm3,xmm3,xmm8
  4053af:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x80]
  4053b9:	vpermd ymm6,ymm4,YMMWORD PTR [rdi+rbp*8+0xa0]
  4053c3:	vpermd ymm7,ymm4,YMMWORD PTR [rdi+rbp*8+0xc0]
  4053cd:	vpermd ymm8,ymm4,YMMWORD PTR [rdi+rbp*8+0xe0]
  4053d7:	vpmulld xmm0,xmm0,xmm5
  4053dc:	vpmulld xmm1,xmm1,xmm6
  4053e1:	vpmulld xmm2,xmm2,xmm7
  4053e6:	vpmulld xmm3,xmm3,xmm8
  4053eb:	add    rbp,0x20
  4053ef:	add    rbx,0x2
  4053f3:	jne    405380 <Mat_VarReadNextInfo@plt+0x3060>
  4053f5:	test   r8,r8
  4053f8:	je     405431 <Mat_VarReadNextInfo@plt+0x3111>
  4053fa:	vmovdqa ymm4,YMMWORD PTR [rip+0x1d5e]        # 407160 <getopt_long_only@@Base+0x1120>
  405402:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x60]
  405409:	vpmulld xmm3,xmm3,xmm5
  40540e:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x40]
  405415:	vpmulld xmm2,xmm2,xmm5
  40541a:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x20]
  405421:	vpmulld xmm1,xmm1,xmm5
  405426:	vpermd ymm4,ymm4,YMMWORD PTR [rdi+rbp*8]
  40542c:	vpmulld xmm0,xmm0,xmm4
  405431:	vpmulld xmm1,xmm1,xmm3
  405436:	vpmulld xmm0,xmm0,xmm2
  40543b:	vpmulld xmm0,xmm0,xmm1
  405440:	vpshufd xmm1,xmm0,0x4e
  405445:	vpmulld xmm0,xmm0,xmm1
  40544a:	vpshufd xmm1,xmm0,0xe5
  40544f:	vpmulld xmm0,xmm0,xmm1
  405454:	vmovd  ebp,xmm0
  405458:	cmp    rax,r9
  40545b:	je     40546d <Mat_VarReadNextInfo@plt+0x314d>
  40545d:	nop    DWORD PTR [rax]
  405460:	imul   ebp,DWORD PTR [rdi+rax*8]
  405464:	add    rax,0x1
  405468:	cmp    r9,rax
  40546b:	jne    405460 <Mat_VarReadNextInfo@plt+0x3140>
  40546d:	mov    eax,DWORD PTR [rdx]
  40546f:	test   eax,eax
  405471:	jle    4055b3 <Mat_VarReadNextInfo@plt+0x3293>
  405477:	mov    edi,DWORD PTR [rcx]
  405479:	cmp    edi,ebp
  40547b:	jg     4055cb <Mat_VarReadNextInfo@plt+0x32ab>
  405481:	mov    ebx,DWORD PTR [rsi]
  405483:	cmp    ebx,ebp
  405485:	jge    40554f <Mat_VarReadNextInfo@plt+0x322f>
  40548b:	test   edi,edi
  40548d:	jle    405497 <Mat_VarReadNextInfo@plt+0x3177>
  40548f:	cmp    ebx,edi
  405491:	jg     40554f <Mat_VarReadNextInfo@plt+0x322f>
  405497:	cmp    edi,0xffffffff
  40549a:	je     4054b1 <Mat_VarReadNextInfo@plt+0x3191>
  40549c:	test   edi,edi
  40549e:	jle    4054d1 <Mat_VarReadNextInfo@plt+0x31b1>
  4054a0:	not    ebx
  4054a2:	add    edi,ebx
  4054a4:	vcvtsi2sd xmm0,xmm9,edi
  4054a8:	vcvtsi2sd xmm1,xmm9,eax
  4054ac:	jmp    405598 <Mat_VarReadNextInfo@plt+0x3278>
  4054b1:	cmp    ebx,0xffffffff
  4054b4:	je     40553c <Mat_VarReadNextInfo@plt+0x321c>
  4054ba:	mov    DWORD PTR [rcx],ebp
  4054bc:	mov    edi,DWORD PTR [rsi]
  4054be:	cmp    eax,0x1
  4054c1:	jne    40558c <Mat_VarReadNextInfo@plt+0x326c>
  4054c7:	test   edi,edi
  4054c9:	jns    4054d1 <Mat_VarReadNextInfo@plt+0x31b1>
  4054cb:	mov    DWORD PTR [rsi],0x0
  4054d1:	mov    r14d,DWORD PTR [rcx]
  4054d4:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  4054d9:	mov    rax,QWORD PTR [rip+0x4b18]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4054e0:	mov    rcx,QWORD PTR [rax]
  4054e3:	lea    rdi,[rip+0x23f9]        # 4078e3 <getopt_long_only@@Base+0x18a3>
  4054ea:	mov    esi,0x17
  4054ef:	mov    edx,0x1
  4054f4:	call   4022f0 <fwrite@plt>
  4054f9:	xor    r14d,r14d
  4054fc:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  405501:	mov    rax,QWORD PTR [rip+0x4af0]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  405508:	mov    rdi,QWORD PTR [rax]
  40550b:	add    ebx,0x1
  40550e:	lea    rsi,[rip+0x242d]        # 407942 <getopt_long_only@@Base+0x1902>
  405515:	jmp    40557b <Mat_VarReadNextInfo@plt+0x325b>
  405517:	vpbroadcastd xmm0,DWORD PTR [rip+0x1b20]        # 407040 <getopt_long_only@@Base+0x1000>
  405520:	xor    ebp,ebp
  405522:	vmovdqa xmm1,xmm0
  405526:	vmovdqa xmm2,xmm0
  40552a:	vmovdqa xmm3,xmm0
  40552e:	test   r8,r8
  405531:	jne    4053fa <Mat_VarReadNextInfo@plt+0x30da>
  405537:	jmp    405431 <Mat_VarReadNextInfo@plt+0x3111>
  40553c:	mov    DWORD PTR [rcx],0x1
  405542:	add    ebp,0xffffffff
  405545:	mov    DWORD PTR [rsi],ebp
  405547:	mov    r14d,DWORD PTR [rcx]
  40554a:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  40554f:	mov    rax,QWORD PTR [rip+0x4aa2]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  405556:	mov    rcx,QWORD PTR [rax]
  405559:	lea    rdi,[rip+0x23ad]        # 40790d <getopt_long_only@@Base+0x18cd>
  405560:	mov    esi,0x12
  405565:	jmp    4055e1 <Mat_VarReadNextInfo@plt+0x32c1>
  405567:	mov    rax,QWORD PTR [rip+0x4a8a]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  40556e:	mov    rdi,QWORD PTR [rax]
  405571:	add    ebx,0x1
  405574:	lea    rsi,[rip+0x23a5]        # 407920 <getopt_long_only@@Base+0x18e0>
  40557b:	xor    r14d,r14d
  40557e:	xor    eax,eax
  405580:	mov    edx,ebx
  405582:	call   4021e0 <fprintf@plt>
  405587:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  40558c:	not    edi
  40558e:	add    ebp,edi
  405590:	vcvtsi2sd xmm0,xmm9,ebp
  405594:	vcvtsi2sd xmm1,xmm9,DWORD PTR [rdx]
  405598:	vdivsd xmm0,xmm0,xmm1
  40559c:	vroundsd xmm0,xmm0,xmm0,0x9
  4055a2:	vcvttsd2si eax,xmm0
  4055a6:	add    eax,0x1
  4055a9:	mov    DWORD PTR [rcx],eax
  4055ab:	mov    r14d,DWORD PTR [rcx]
  4055ae:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  4055b3:	mov    rax,QWORD PTR [rip+0x4a3e]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4055ba:	mov    rcx,QWORD PTR [rax]
  4055bd:	lea    rdi,[rip+0x231f]        # 4078e3 <getopt_long_only@@Base+0x18a3>
  4055c4:	mov    esi,0x17
  4055c9:	jmp    4055e1 <Mat_VarReadNextInfo@plt+0x32c1>
  4055cb:	mov    rax,QWORD PTR [rip+0x4a26]        # 409ff8 <getopt_long_only@@Base+0x3fb8>
  4055d2:	mov    rcx,QWORD PTR [rax]
  4055d5:	lea    rdi,[rip+0x231f]        # 4078fb <getopt_long_only@@Base+0x18bb>
  4055dc:	mov    esi,0x11
  4055e1:	mov    edx,0x1
  4055e6:	vzeroupper 
  4055e9:	call   4022f0 <fwrite@plt>
  4055ee:	jmp    4051b5 <Mat_VarReadNextInfo@plt+0x2e95>
  4055f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055fd:	nop    DWORD PTR [rax]

0000000000405600 <getopt@@Base>:
  405600:	xor    ecx,ecx
  405602:	xor    r8d,r8d
  405605:	xor    r9d,r9d
  405608:	jmp    405610 <getopt@@Base+0x10>
  40560a:	nop    WORD PTR [rax+rax*1+0x0]
  405610:	push   rbp
  405611:	push   r15
  405613:	push   r14
  405615:	push   r13
  405617:	push   r12
  405619:	push   rbx
  40561a:	sub    rsp,0x58
  40561e:	mov    eax,0xffffffff
  405623:	test   rdx,rdx
  405626:	je     405f1a <getopt@@Base+0x91a>
  40562c:	mov    r13d,r9d
  40562f:	mov    rbp,rdx
  405632:	mov    rbx,rsi
  405635:	mov    r12d,edi
  405638:	mov    QWORD PTR [rsp+0x38],rcx
  40563d:	mov    QWORD PTR [rsp+0x48],r8
  405642:	lea    rdi,[rip+0x231c]        # 407965 <getopt_long_only@@Base+0x1925>
  405649:	call   402040 <getenv@plt>
  40564e:	mov    cl,BYTE PTR [rbp+0x0]
  405651:	cmp    cl,0x2d
  405654:	mov    QWORD PTR [rsp+0x50],rax
  405659:	jne    405664 <getopt@@Base+0x64>
  40565b:	or     r13d,0x2
  40565f:	mov    edx,r13d
  405662:	jmp    40567d <getopt@@Base+0x7d>
  405664:	mov    edx,r13d
  405667:	and    edx,0xfffffffe
  40566a:	cmp    cl,0x2b
  40566d:	cmove  r13d,edx
  405671:	test   rax,rax
  405674:	cmovne r13d,edx
  405678:	cmp    cl,0x2b
  40567b:	jne    405684 <getopt@@Base+0x84>
  40567d:	add    rbp,0x1
  405681:	mov    r13d,edx
  405684:	lea    r15,[rip+0x4c99]        # 40a324 <optind@@Base>
  40568b:	mov    esi,DWORD PTR [r15]
  40568e:	lea    rax,[rip+0x4cd3]        # 40a368 <optopt@@Base+0x40>
  405695:	test   esi,esi
  405697:	je     4056b1 <getopt@@Base+0xb1>
  405699:	mov    eax,DWORD PTR [rax]
  40569b:	lea    rcx,[rip+0x4cce]        # 40a370 <optarg@@Base>
  4056a2:	mov    QWORD PTR [rcx],0x0
  4056a9:	test   eax,eax
  4056ab:	jne    4056d6 <getopt@@Base+0xd6>
  4056ad:	xor    eax,eax
  4056af:	jmp    4056ea <getopt@@Base+0xea>
  4056b1:	mov    DWORD PTR [rax],0x1
  4056b7:	mov    DWORD PTR [r15],0x1
  4056be:	lea    rax,[rip+0x4cab]        # 40a370 <optarg@@Base>
  4056c5:	mov    QWORD PTR [rax],0x0
  4056cc:	mov    esi,0x1
  4056d1:	mov    eax,0x1
  4056d6:	mov    DWORD PTR [rip+0x4c4c],0xffffffff        # 40a32c <optopt@@Base+0x4>
  4056e0:	mov    DWORD PTR [rip+0x4c46],0xffffffff        # 40a330 <optopt@@Base+0x8>
  4056ea:	mov    QWORD PTR [rsp+0x20],rbp
  4056ef:	lea    rdx,[rip+0x4c72]        # 40a368 <optopt@@Base+0x40>
  4056f6:	lea    rcx,[rip+0x1d1a]        # 407417 <getopt_long_only@@Base+0x13d7>
  4056fd:	mov    r11,rbx
  405700:	mov    DWORD PTR [rsp+0x28],r12d
  405705:	mov    DWORD PTR [rsp+0x44],r13d
  40570a:	test   eax,eax
  40570c:	jne    405730 <getopt@@Base+0x130>
  40570e:	jmp    40571c <getopt@@Base+0x11c>
  405710:	add    esi,0x1
  405713:	mov    DWORD PTR [r15],esi
  405716:	xor    eax,eax
  405718:	test   eax,eax
  40571a:	jne    405730 <getopt@@Base+0x130>
  40571c:	mov    rbp,QWORD PTR [rip+0x4c15]        # 40a338 <optopt@@Base+0x10>
  405723:	mov    r14b,BYTE PTR [rbp+0x0]
  405727:	test   r14b,r14b
  40572a:	jne    405b78 <getopt@@Base+0x578>
  405730:	mov    DWORD PTR [rdx],0x0
  405736:	cmp    esi,r12d
  405739:	jge    40596b <getopt@@Base+0x36b>
  40573f:	movsxd rax,esi
  405742:	mov    rax,QWORD PTR [rbx+rax*8]
  405746:	mov    QWORD PTR [rip+0x4beb],rax        # 40a338 <optopt@@Base+0x10>
  40574d:	cmp    BYTE PTR [rax],0x2d
  405750:	jne    40575f <getopt@@Base+0x15f>
  405752:	mov    r14b,BYTE PTR [rax+0x1]
  405756:	test   r14b,r14b
  405759:	jne    405b39 <getopt@@Base+0x539>
  40575f:	mov    QWORD PTR [rip+0x4bd2],rcx        # 40a338 <optopt@@Base+0x10>
  405766:	test   r13b,0x2
  40576a:	jne    405b15 <getopt@@Base+0x515>
  405770:	test   r13b,0x1
  405774:	je     405b2f <getopt@@Base+0x52f>
  40577a:	mov    edi,DWORD PTR [rip+0x4bb0]        # 40a330 <optopt@@Base+0x8>
  405780:	cmp    edi,0xffffffff
  405783:	je     405960 <getopt@@Base+0x360>
  405789:	movsxd rbp,DWORD PTR [rip+0x4b9c]        # 40a32c <optopt@@Base+0x4>
  405790:	cmp    rbp,0xffffffffffffffff
  405794:	je     405710 <getopt@@Base+0x110>
  40579a:	mov    r9d,esi
  40579d:	sub    r9d,ebp
  4057a0:	mov    r10d,ebp
  4057a3:	sub    r10d,edi
  4057a6:	mov    eax,r10d
  4057a9:	cdq    
  4057aa:	idiv   r9d
  4057ad:	mov    ecx,r9d
  4057b0:	test   edx,edx
  4057b2:	je     4057cb <getopt@@Base+0x1cb>
  4057b4:	mov    eax,r9d
  4057b7:	nop    WORD PTR [rax+rax*1+0x0]
  4057c0:	mov    ecx,edx
  4057c2:	cdq    
  4057c3:	idiv   ecx
  4057c5:	mov    eax,ecx
  4057c7:	test   edx,edx
  4057c9:	jne    4057c0 <getopt@@Base+0x1c0>
  4057cb:	mov    DWORD PTR [rsp+0x10],esi
  4057cf:	mov    DWORD PTR [rsp+0x2c],edi
  4057d3:	sub    esi,edi
  4057d5:	mov    eax,esi
  4057d7:	cdq    
  4057d8:	idiv   ecx
  4057da:	test   ecx,ecx
  4057dc:	jle    405911 <getopt@@Base+0x311>
  4057e2:	neg    r10d
  4057e5:	mov    ecx,ecx
  4057e7:	mov    QWORD PTR [rsp+0x8],rcx
  4057ec:	lea    ecx,[rax-0x1]
  4057ef:	mov    DWORD PTR [rsp+0x30],ecx
  4057f3:	mov    ecx,eax
  4057f5:	and    ecx,0x3
  4057f8:	mov    edx,ecx
  4057fa:	sub    edx,eax
  4057fc:	mov    DWORD PTR [rsp+0x14],edx
  405800:	mov    DWORD PTR [rsp+0x1c],ecx
  405804:	neg    ecx
  405806:	mov    DWORD PTR [rsp+0x18],ecx
  40580a:	xor    r8d,r8d
  40580d:	nop    DWORD PTR [rax]
  405810:	test   eax,eax
  405812:	jle    405902 <getopt@@Base+0x302>
  405818:	lea    r13,[r8+rbp*1]
  40581c:	mov    r12,QWORD PTR [rbx+r13*8]
  405820:	cmp    DWORD PTR [rsp+0x30],0x3
  405825:	jae    405840 <getopt@@Base+0x240>
  405827:	mov    ecx,r13d
  40582a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40582f:	jne    4058cf <getopt@@Base+0x2cf>
  405835:	jmp    405902 <getopt@@Base+0x302>
  40583a:	nop    WORD PTR [rax+rax*1+0x0]
  405840:	mov    r15d,DWORD PTR [rsp+0x14]
  405845:	mov    ecx,r13d
  405848:	nop    DWORD PTR [rax+rax*1+0x0]
  405850:	mov    edi,r9d
  405853:	cmp    ecx,ebp
  405855:	jl     40585a <getopt@@Base+0x25a>
  405857:	mov    edi,r10d
  40585a:	add    edi,ecx
  40585c:	movsxd rdx,edi
  40585f:	mov    r14,QWORD PTR [rbx+rdx*8]
  405863:	mov    QWORD PTR [rbx+rdx*8],r12
  405867:	mov    QWORD PTR [rbx+r13*8],r14
  40586b:	mov    ecx,r9d
  40586e:	cmp    edx,ebp
  405870:	jl     405875 <getopt@@Base+0x275>
  405872:	mov    ecx,r10d
  405875:	add    ecx,edi
  405877:	movsxd rsi,ecx
  40587a:	mov    rdx,QWORD PTR [rbx+rsi*8]
  40587e:	mov    QWORD PTR [rbx+rsi*8],r14
  405882:	mov    QWORD PTR [rbx+r13*8],rdx
  405886:	mov    edi,r9d
  405889:	cmp    esi,ebp
  40588b:	jl     405890 <getopt@@Base+0x290>
  40588d:	mov    edi,r10d
  405890:	add    edi,ecx
  405892:	movsxd rbx,edi
  405895:	mov    rcx,r11
  405898:	mov    rsi,QWORD PTR [r11+rbx*8]
  40589c:	mov    QWORD PTR [r11+rbx*8],rdx
  4058a0:	mov    QWORD PTR [r11+r13*8],rsi
  4058a4:	mov    ecx,r9d
  4058a7:	cmp    ebx,ebp
  4058a9:	jl     4058ae <getopt@@Base+0x2ae>
  4058ab:	mov    ecx,r10d
  4058ae:	add    ecx,edi
  4058b0:	movsxd rdx,ecx
  4058b3:	mov    rbx,r11
  4058b6:	mov    r12,QWORD PTR [r11+rdx*8]
  4058ba:	mov    QWORD PTR [r11+rdx*8],rsi
  4058be:	mov    QWORD PTR [r11+r13*8],r12
  4058c2:	add    r15d,0x4
  4058c6:	jne    405850 <getopt@@Base+0x250>
  4058c8:	cmp    DWORD PTR [rsp+0x1c],0x0
  4058cd:	je     405902 <getopt@@Base+0x302>
  4058cf:	mov    edi,DWORD PTR [rsp+0x18]
  4058d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058dd:	nop    DWORD PTR [rax]
  4058e0:	cmp    ecx,ebp
  4058e2:	mov    edx,r10d
  4058e5:	cmovl  edx,r9d
  4058e9:	add    ecx,edx
  4058eb:	movsxd rdx,ecx
  4058ee:	mov    rsi,QWORD PTR [rbx+rdx*8]
  4058f2:	mov    QWORD PTR [rbx+rdx*8],r12
  4058f6:	mov    QWORD PTR [rbx+r13*8],rsi
  4058fa:	mov    r12,rsi
  4058fd:	add    edi,0x1
  405900:	jne    4058e0 <getopt@@Base+0x2e0>
  405902:	add    r8,0x1
  405906:	cmp    r8,QWORD PTR [rsp+0x8]
  40590b:	jne    405810 <getopt@@Base+0x210>
  405911:	mov    esi,DWORD PTR [rsp+0x10]
  405915:	mov    eax,DWORD PTR [rsp+0x2c]
  405919:	add    eax,esi
  40591b:	sub    eax,ebp
  40591d:	mov    DWORD PTR [rip+0x4a0d],eax        # 40a330 <optopt@@Base+0x8>
  405923:	mov    DWORD PTR [rip+0x49ff],0xffffffff        # 40a32c <optopt@@Base+0x4>
  40592d:	lea    r15,[rip+0x49f0]        # 40a324 <optind@@Base>
  405934:	mov    r12d,DWORD PTR [rsp+0x28]
  405939:	mov    r13d,DWORD PTR [rsp+0x44]
  40593e:	lea    rcx,[rip+0x1ad2]        # 407417 <getopt_long_only@@Base+0x13d7>
  405945:	lea    rdx,[rip+0x4a1c]        # 40a368 <optopt@@Base+0x40>
  40594c:	jmp    405710 <getopt@@Base+0x110>
  405951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40595b:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	mov    DWORD PTR [rip+0x49ca],esi        # 40a330 <optopt@@Base+0x8>
  405966:	jmp    405710 <getopt@@Base+0x110>
  40596b:	mov    QWORD PTR [rip+0x49c6],rcx        # 40a338 <optopt@@Base+0x10>
  405972:	movsxd r9,DWORD PTR [rip+0x49b3]        # 40a32c <optopt@@Base+0x4>
  405979:	mov    edi,DWORD PTR [rip+0x49b1]        # 40a330 <optopt@@Base+0x8>
  40597f:	cmp    r9,0xffffffffffffffff
  405983:	je     405be3 <getopt@@Base+0x5e3>
  405989:	mov    r10d,esi
  40598c:	sub    r10d,r9d
  40598f:	mov    r13d,r9d
  405992:	sub    r13d,edi
  405995:	mov    eax,r13d
  405998:	cdq    
  405999:	idiv   r10d
  40599c:	mov    ecx,r10d
  40599f:	test   edx,edx
  4059a1:	je     4059bb <getopt@@Base+0x3bb>
  4059a3:	mov    eax,r10d
  4059a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059b0:	mov    ecx,edx
  4059b2:	cdq    
  4059b3:	idiv   ecx
  4059b5:	mov    eax,ecx
  4059b7:	test   edx,edx
  4059b9:	jne    4059b0 <getopt@@Base+0x3b0>
  4059bb:	mov    DWORD PTR [rsp+0x10],edi
  4059bf:	sub    esi,edi
  4059c1:	mov    eax,esi
  4059c3:	cdq    
  4059c4:	idiv   ecx
  4059c6:	test   ecx,ecx
  4059c8:	jle    405b02 <getopt@@Base+0x502>
  4059ce:	neg    r13d
  4059d1:	mov    ecx,ecx
  4059d3:	mov    QWORD PTR [rsp+0x8],rcx
  4059d8:	lea    ecx,[rax-0x1]
  4059db:	mov    DWORD PTR [rsp+0x30],ecx
  4059df:	mov    ecx,eax
  4059e1:	and    ecx,0x3
  4059e4:	mov    edx,ecx
  4059e6:	sub    edx,eax
  4059e8:	mov    DWORD PTR [rsp+0x14],edx
  4059ec:	mov    DWORD PTR [rsp+0x1c],ecx
  4059f0:	neg    ecx
  4059f2:	mov    DWORD PTR [rsp+0x18],ecx
  4059f6:	xor    r12d,r12d
  4059f9:	nop    DWORD PTR [rax+0x0]
  405a00:	test   eax,eax
  405a02:	jle    405af3 <getopt@@Base+0x4f3>
  405a08:	lea    r14,[r12+r9*1]
  405a0c:	mov    r8,QWORD PTR [rbx+r14*8]
  405a10:	cmp    DWORD PTR [rsp+0x30],0x3
  405a15:	jae    405a30 <getopt@@Base+0x430>
  405a17:	mov    edi,r14d
  405a1a:	cmp    DWORD PTR [rsp+0x1c],0x0
  405a1f:	jne    405abd <getopt@@Base+0x4bd>
  405a25:	jmp    405af3 <getopt@@Base+0x4f3>
  405a2a:	nop    WORD PTR [rax+rax*1+0x0]
  405a30:	mov    r15d,DWORD PTR [rsp+0x14]
  405a35:	mov    edi,r14d
  405a38:	nop    DWORD PTR [rax+rax*1+0x0]
  405a40:	mov    esi,r10d
  405a43:	cmp    edi,r9d
  405a46:	jl     405a4b <getopt@@Base+0x44b>
  405a48:	mov    esi,r13d
  405a4b:	add    esi,edi
  405a4d:	movsxd rcx,esi
  405a50:	mov    r11,QWORD PTR [rbx+rcx*8]
  405a54:	mov    QWORD PTR [rbx+rcx*8],r8
  405a58:	mov    QWORD PTR [rbx+r14*8],r11
  405a5c:	mov    edi,r10d
  405a5f:	cmp    ecx,r9d
  405a62:	jl     405a67 <getopt@@Base+0x467>
  405a64:	mov    edi,r13d
  405a67:	add    edi,esi
  405a69:	movsxd rcx,edi
  405a6c:	mov    rbp,QWORD PTR [rbx+rcx*8]
  405a70:	mov    QWORD PTR [rbx+rcx*8],r11
  405a74:	mov    QWORD PTR [rbx+r14*8],rbp
  405a78:	mov    esi,r10d
  405a7b:	cmp    ecx,r9d
  405a7e:	jl     405a83 <getopt@@Base+0x483>
  405a80:	mov    esi,r13d
  405a83:	add    esi,edi
  405a85:	movsxd rdx,esi
  405a88:	mov    rcx,QWORD PTR [rbx+rdx*8]
  405a8c:	mov    QWORD PTR [rbx+rdx*8],rbp
  405a90:	mov    QWORD PTR [rbx+r14*8],rcx
  405a94:	mov    edi,r10d
  405a97:	cmp    edx,r9d
  405a9a:	jl     405a9f <getopt@@Base+0x49f>
  405a9c:	mov    edi,r13d
  405a9f:	add    edi,esi
  405aa1:	movsxd rdx,edi
  405aa4:	mov    r8,QWORD PTR [rbx+rdx*8]
  405aa8:	mov    QWORD PTR [rbx+rdx*8],rcx
  405aac:	mov    QWORD PTR [rbx+r14*8],r8
  405ab0:	add    r15d,0x4
  405ab4:	jne    405a40 <getopt@@Base+0x440>
  405ab6:	cmp    DWORD PTR [rsp+0x1c],0x0
  405abb:	je     405af3 <getopt@@Base+0x4f3>
  405abd:	mov    edx,DWORD PTR [rsp+0x18]
  405ac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405acb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ad0:	cmp    edi,r9d
  405ad3:	mov    ecx,r13d
  405ad6:	cmovl  ecx,r10d
  405ada:	add    edi,ecx
  405adc:	movsxd rcx,edi
  405adf:	mov    rsi,QWORD PTR [rbx+rcx*8]
  405ae3:	mov    QWORD PTR [rbx+rcx*8],r8
  405ae7:	mov    QWORD PTR [rbx+r14*8],rsi
  405aeb:	mov    r8,rsi
  405aee:	add    edx,0x1
  405af1:	jne    405ad0 <getopt@@Base+0x4d0>
  405af3:	add    r12,0x1
  405af7:	cmp    r12,QWORD PTR [rsp+0x8]
  405afc:	jne    405a00 <getopt@@Base+0x400>
  405b02:	mov    edi,DWORD PTR [rsp+0x10]
  405b06:	add    edi,r10d
  405b09:	lea    r15,[rip+0x4814]        # 40a324 <optind@@Base>
  405b10:	jmp    405be8 <getopt@@Base+0x5e8>
  405b15:	add    esi,0x1
  405b18:	mov    DWORD PTR [r15],esi
  405b1b:	lea    rcx,[rip+0x484e]        # 40a370 <optarg@@Base>
  405b22:	mov    QWORD PTR [rcx],rax
  405b25:	mov    eax,0x1
  405b2a:	jmp    405f1a <getopt@@Base+0x91a>
  405b2f:	mov    eax,0xffffffff
  405b34:	jmp    405f1a <getopt@@Base+0x91a>
  405b39:	lea    rbp,[rax+0x1]
  405b3d:	mov    edi,DWORD PTR [rip+0x47ed]        # 40a330 <optopt@@Base+0x8>
  405b43:	mov    r8d,DWORD PTR [rip+0x47e2]        # 40a32c <optopt@@Base+0x4>
  405b4a:	cmp    edi,0xffffffff
  405b4d:	je     405b5e <getopt@@Base+0x55e>
  405b4f:	cmp    r8d,0xffffffff
  405b53:	jne    405b5e <getopt@@Base+0x55e>
  405b55:	mov    DWORD PTR [rip+0x47d1],esi        # 40a32c <optopt@@Base+0x4>
  405b5b:	mov    r8d,esi
  405b5e:	mov    QWORD PTR [rip+0x47d3],rbp        # 40a338 <optopt@@Base+0x10>
  405b65:	cmp    r14b,0x2d
  405b69:	jne    405b78 <getopt@@Base+0x578>
  405b6b:	mov    r14b,0x2d
  405b6e:	cmp    BYTE PTR [rax+0x2],0x0
  405b72:	je     405c09 <getopt@@Base+0x609>
  405b78:	mov    rdx,QWORD PTR [rsp+0x38]
  405b7d:	test   rdx,rdx
  405b80:	je     405df9 <getopt@@Base+0x7f9>
  405b86:	movsxd rax,esi
  405b89:	cmp    rbp,QWORD PTR [rbx+rax*8]
  405b8d:	je     405df9 <getopt@@Base+0x7f9>
  405b93:	test   r13b,0x4
  405b97:	jne    405ba3 <getopt@@Base+0x5a3>
  405b99:	cmp    r14b,0x2d
  405b9d:	jne    405df9 <getopt@@Base+0x7f9>
  405ba3:	mov    DWORD PTR [rip+0x4793],0x0        # 40a340 <optopt@@Base+0x18>
  405bad:	xor    r8d,r8d
  405bb0:	cmp    r14b,0x3a
  405bb4:	je     405dab <getopt@@Base+0x7ab>
  405bba:	cmp    r14b,0x2d
  405bbe:	jne    405db2 <getopt@@Base+0x7b2>
  405bc4:	add    rbp,0x1
  405bc8:	mov    QWORD PTR [rip+0x4769],rbp        # 40a338 <optopt@@Base+0x10>
  405bcf:	mov    DWORD PTR [rip+0x4767],0x1        # 40a340 <optopt@@Base+0x18>
  405bd9:	mov    rbp,QWORD PTR [rsp+0x20]
  405bde:	jmp    405dd2 <getopt@@Base+0x7d2>
  405be3:	cmp    edi,0xffffffff
  405be6:	je     405beb <getopt@@Base+0x5eb>
  405be8:	mov    DWORD PTR [r15],edi
  405beb:	mov    DWORD PTR [rip+0x4737],0xffffffff        # 40a32c <optopt@@Base+0x4>
  405bf5:	mov    DWORD PTR [rip+0x4731],0xffffffff        # 40a330 <optopt@@Base+0x8>
  405bff:	mov    eax,0xffffffff
  405c04:	jmp    405f1a <getopt@@Base+0x91a>
  405c09:	add    esi,0x1
  405c0c:	mov    DWORD PTR [r15],esi
  405c0f:	mov    QWORD PTR [rip+0x4722],rcx        # 40a338 <optopt@@Base+0x10>
  405c16:	cmp    r8d,0xffffffff
  405c1a:	je     405beb <getopt@@Base+0x5eb>
  405c1c:	mov    r9d,r8d
  405c1f:	sub    r9d,edi
  405c22:	mov    r12d,esi
  405c25:	sub    r12d,r8d
  405c28:	mov    eax,r9d
  405c2b:	cdq    
  405c2c:	idiv   r12d
  405c2f:	mov    ecx,r12d
  405c32:	test   edx,edx
  405c34:	je     405c44 <getopt@@Base+0x644>
  405c36:	mov    eax,r12d
  405c39:	mov    ecx,edx
  405c3b:	cdq    
  405c3c:	idiv   ecx
  405c3e:	mov    eax,ecx
  405c40:	test   edx,edx
  405c42:	jne    405c39 <getopt@@Base+0x639>
  405c44:	mov    DWORD PTR [rsp+0x10],esi
  405c48:	mov    DWORD PTR [rsp+0x28],edi
  405c4c:	sub    esi,edi
  405c4e:	mov    eax,esi
  405c50:	cdq    
  405c51:	idiv   ecx
  405c53:	test   ecx,ecx
  405c55:	jle    405d92 <getopt@@Base+0x792>
  405c5b:	neg    r9d
  405c5e:	movsxd rdx,r8d
  405c61:	mov    QWORD PTR [rsp+0x30],rdx
  405c66:	mov    ecx,ecx
  405c68:	mov    QWORD PTR [rsp+0x8],rcx
  405c6d:	lea    ecx,[rax-0x1]
  405c70:	mov    DWORD PTR [rsp+0x1c],ecx
  405c74:	mov    ecx,eax
  405c76:	and    ecx,0x3
  405c79:	mov    edx,ecx
  405c7b:	sub    edx,eax
  405c7d:	mov    DWORD PTR [rsp+0x2c],edx
  405c81:	mov    DWORD PTR [rsp+0x18],ecx
  405c85:	neg    ecx
  405c87:	mov    DWORD PTR [rsp+0x14],ecx
  405c8b:	xor    r10d,r10d
  405c8e:	test   eax,eax
  405c90:	jle    405d83 <getopt@@Base+0x783>
  405c96:	mov    rcx,QWORD PTR [rsp+0x30]
  405c9b:	lea    rbp,[r10+rcx*1]
  405c9f:	mov    r15,QWORD PTR [rbx+rbp*8]
  405ca3:	cmp    DWORD PTR [rsp+0x1c],0x3
  405ca8:	jae    405cbc <getopt@@Base+0x6bc>
  405caa:	mov    ecx,ebp
  405cac:	cmp    DWORD PTR [rsp+0x18],0x0
  405cb1:	jne    405d53 <getopt@@Base+0x753>
  405cb7:	jmp    405d83 <getopt@@Base+0x783>
  405cbc:	mov    r14d,DWORD PTR [rsp+0x2c]
  405cc1:	mov    ecx,ebp
  405cc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ccd:	nop    DWORD PTR [rax]
  405cd0:	mov    edx,r12d
  405cd3:	cmp    ecx,r8d
  405cd6:	jl     405cdb <getopt@@Base+0x6db>
  405cd8:	mov    edx,r9d
  405cdb:	add    edx,ecx
  405cdd:	movsxd rsi,edx
  405ce0:	mov    r13,QWORD PTR [rbx+rsi*8]
  405ce4:	mov    QWORD PTR [rbx+rsi*8],r15
  405ce8:	mov    QWORD PTR [rbx+rbp*8],r13
  405cec:	mov    ecx,r12d
  405cef:	cmp    esi,r8d
  405cf2:	jl     405cf7 <getopt@@Base+0x6f7>
  405cf4:	mov    ecx,r9d
  405cf7:	add    ecx,edx
  405cf9:	movsxd rsi,ecx
  405cfc:	mov    rdi,QWORD PTR [rbx+rsi*8]
  405d00:	mov    QWORD PTR [rbx+rsi*8],r13
  405d04:	mov    QWORD PTR [rbx+rbp*8],rdi
  405d08:	mov    edx,r12d
  405d0b:	cmp    esi,r8d
  405d0e:	jl     405d13 <getopt@@Base+0x713>
  405d10:	mov    edx,r9d
  405d13:	add    edx,ecx
  405d15:	movsxd rbx,edx
  405d18:	mov    rcx,r11
  405d1b:	mov    rsi,QWORD PTR [r11+rbx*8]
  405d1f:	mov    QWORD PTR [r11+rbx*8],rdi
  405d23:	mov    QWORD PTR [r11+rbp*8],rsi
  405d27:	mov    ecx,r12d
  405d2a:	cmp    ebx,r8d
  405d2d:	jl     405d32 <getopt@@Base+0x732>
  405d2f:	mov    ecx,r9d
  405d32:	add    ecx,edx
  405d34:	movsxd rdx,ecx
  405d37:	mov    rbx,r11
  405d3a:	mov    r15,QWORD PTR [r11+rdx*8]
  405d3e:	mov    QWORD PTR [r11+rdx*8],rsi
  405d42:	mov    QWORD PTR [r11+rbp*8],r15
  405d46:	add    r14d,0x4
  405d4a:	jne    405cd0 <getopt@@Base+0x6d0>
  405d4c:	cmp    DWORD PTR [rsp+0x18],0x0
  405d51:	je     405d83 <getopt@@Base+0x783>
  405d53:	mov    edx,DWORD PTR [rsp+0x14]
  405d57:	nop    WORD PTR [rax+rax*1+0x0]
  405d60:	cmp    ecx,r8d
  405d63:	mov    esi,r9d
  405d66:	cmovl  esi,r12d
  405d6a:	add    ecx,esi
  405d6c:	movsxd rsi,ecx
  405d6f:	mov    rdi,QWORD PTR [rbx+rsi*8]
  405d73:	mov    QWORD PTR [rbx+rsi*8],r15
  405d77:	mov    QWORD PTR [rbx+rbp*8],rdi
  405d7b:	mov    r15,rdi
  405d7e:	add    edx,0x1
  405d81:	jne    405d60 <getopt@@Base+0x760>
  405d83:	add    r10,0x1
  405d87:	cmp    r10,QWORD PTR [rsp+0x8]
  405d8c:	jne    405c8e <getopt@@Base+0x68e>
  405d92:	mov    ecx,DWORD PTR [rsp+0x28]
  405d96:	add    ecx,DWORD PTR [rsp+0x10]
  405d9a:	sub    ecx,r8d
  405d9d:	lea    rax,[rip+0x4580]        # 40a324 <optind@@Base>
  405da4:	mov    DWORD PTR [rax],ecx
  405da6:	jmp    405beb <getopt@@Base+0x5eb>
  405dab:	mov    rbp,QWORD PTR [rsp+0x20]
  405db0:	jmp    405dd2 <getopt@@Base+0x7d2>
  405db2:	movsx  esi,r14b
  405db6:	mov    rbp,QWORD PTR [rsp+0x20]
  405dbb:	mov    rdi,rbp
  405dbe:	call   402150 <strchr@plt>
  405dc3:	mov    rdx,QWORD PTR [rsp+0x38]
  405dc8:	xor    r8d,r8d
  405dcb:	test   rax,rax
  405dce:	setne  r8b
  405dd2:	mov    rdi,rbx
  405dd5:	mov    rsi,rbp
  405dd8:	mov    rcx,QWORD PTR [rsp+0x48]
  405ddd:	mov    r9d,r13d
  405de0:	call   406050 <getopt_long_only@@Base+0x10>
  405de5:	cmp    eax,0xffffffff
  405de8:	jne    405ea2 <getopt@@Base+0x8a2>
  405dee:	mov    rbp,QWORD PTR [rip+0x4543]        # 40a338 <optopt@@Base+0x10>
  405df5:	mov    r14b,BYTE PTR [rbp+0x0]
  405df9:	add    rbp,0x1
  405dfd:	mov    QWORD PTR [rip+0x4534],rbp        # 40a338 <optopt@@Base+0x10>
  405e04:	movsx  esi,r14b
  405e08:	cmp    sil,0x3a
  405e0c:	je     405ec9 <getopt@@Base+0x8c9>
  405e12:	cmp    r14b,0x2d
  405e16:	jne    405e22 <getopt@@Base+0x822>
  405e18:	cmp    BYTE PTR [rbp+0x0],0x0
  405e1c:	jne    405ed3 <getopt@@Base+0x8d3>
  405e22:	mov    rdi,QWORD PTR [rsp+0x20]
  405e27:	mov    DWORD PTR [rsp+0x8],esi
  405e2b:	call   402150 <strchr@plt>
  405e30:	test   rax,rax
  405e33:	je     405eb2 <getopt@@Base+0x8b2>
  405e35:	mov    cl,BYTE PTR [rax+0x1]
  405e38:	mov    rdx,QWORD PTR [rsp+0x38]
  405e3d:	test   rdx,rdx
  405e40:	je     405f29 <getopt@@Base+0x929>
  405e46:	cmp    r14b,0x57
  405e4a:	jne    405f29 <getopt@@Base+0x929>
  405e50:	cmp    cl,0x3b
  405e53:	jne    405f29 <getopt@@Base+0x929>
  405e59:	cmp    BYTE PTR [rbp+0x0],0x0
  405e5d:	mov    rbp,QWORD PTR [rsp+0x20]
  405e62:	jne    405e82 <getopt@@Base+0x882>
  405e64:	movsxd rax,DWORD PTR [r15]
  405e67:	lea    ecx,[rax+0x1]
  405e6a:	mov    DWORD PTR [r15],ecx
  405e6d:	cmp    ecx,r12d
  405e70:	jge    405f53 <getopt@@Base+0x953>
  405e76:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  405e7b:	mov    QWORD PTR [rip+0x44b6],rax        # 40a338 <optopt@@Base+0x10>
  405e82:	mov    DWORD PTR [rip+0x44b4],0x2        # 40a340 <optopt@@Base+0x18>
  405e8c:	xor    r8d,r8d
  405e8f:	mov    rdi,rbx
  405e92:	mov    rsi,rbp
  405e95:	mov    rcx,QWORD PTR [rsp+0x48]
  405e9a:	mov    r9d,r13d
  405e9d:	call   406050 <getopt_long_only@@Base+0x10>
  405ea2:	lea    rcx,[rip+0x156e]        # 407417 <getopt_long_only@@Base+0x13d7>
  405ea9:	mov    QWORD PTR [rip+0x4488],rcx        # 40a338 <optopt@@Base+0x10>
  405eb0:	jmp    405f1a <getopt@@Base+0x91a>
  405eb2:	cmp    r14b,0x2d
  405eb6:	mov    eax,0xffffffff
  405ebb:	mov    esi,DWORD PTR [rsp+0x8]
  405ebf:	jne    405ec9 <getopt@@Base+0x8c9>
  405ec1:	cmp    BYTE PTR [rbp+0x0],0x0
  405ec5:	jne    405ed3 <getopt@@Base+0x8d3>
  405ec7:	jmp    405f1a <getopt@@Base+0x91a>
  405ec9:	cmp    BYTE PTR [rbp+0x0],0x0
  405ecd:	jne    405ed3 <getopt@@Base+0x8d3>
  405ecf:	add    DWORD PTR [r15],0x1
  405ed3:	lea    rax,[rip+0x4446]        # 40a320 <opterr@@Base>
  405eda:	cmp    DWORD PTR [rax],0x0
  405edd:	je     405f0c <getopt@@Base+0x90c>
  405edf:	mov    rax,QWORD PTR [rsp+0x20]
  405ee4:	cmp    BYTE PTR [rax],0x3a
  405ee7:	je     405f0c <getopt@@Base+0x90c>
  405ee9:	cmp    QWORD PTR [rsp+0x50],0x0
  405eef:	lea    rax,[rip+0x1a8a]        # 407980 <getopt_long_only@@Base+0x1940>
  405ef6:	lea    rdi,[rip+0x1aa3]        # 4079a0 <getopt_long_only@@Base+0x1960>
  405efd:	cmovne rdi,rax
  405f01:	xor    eax,eax
  405f03:	mov    ebx,esi
  405f05:	call   402170 <warnx@plt>
  405f0a:	mov    esi,ebx
  405f0c:	lea    rax,[rip+0x4415]        # 40a328 <optopt@@Base>
  405f13:	mov    DWORD PTR [rax],esi
  405f15:	mov    eax,0x3f
  405f1a:	add    rsp,0x58
  405f1e:	pop    rbx
  405f1f:	pop    r12
  405f21:	pop    r13
  405f23:	pop    r14
  405f25:	pop    r15
  405f27:	pop    rbp
  405f28:	ret    
  405f29:	cmp    cl,0x3a
  405f2c:	jne    405f47 <getopt@@Base+0x947>
  405f2e:	lea    rcx,[rip+0x443b]        # 40a370 <optarg@@Base>
  405f35:	mov    QWORD PTR [rcx],0x0
  405f3c:	cmp    BYTE PTR [rbp+0x0],0x0
  405f40:	je     405fa6 <getopt@@Base+0x9a6>
  405f42:	mov    QWORD PTR [rcx],rbp
  405f45:	jmp    405fc2 <getopt@@Base+0x9c2>
  405f47:	cmp    BYTE PTR [rbp+0x0],0x0
  405f4b:	jne    405fd4 <getopt@@Base+0x9d4>
  405f51:	jmp    405fd0 <getopt@@Base+0x9d0>
  405f53:	lea    rax,[rip+0x14bd]        # 407417 <getopt_long_only@@Base+0x13d7>
  405f5a:	mov    QWORD PTR [rip+0x43d7],rax        # 40a338 <optopt@@Base+0x10>
  405f61:	lea    rax,[rip+0x43b8]        # 40a320 <opterr@@Base>
  405f68:	cmp    DWORD PTR [rax],0x0
  405f6b:	je     405f85 <getopt@@Base+0x985>
  405f6d:	cmp    BYTE PTR [rbp+0x0],0x3a
  405f71:	je     405f85 <getopt@@Base+0x985>
  405f73:	lea    rdi,[rip+0x1a46]        # 4079c0 <getopt_long_only@@Base+0x1980>
  405f7a:	xor    eax,eax
  405f7c:	mov    esi,DWORD PTR [rsp+0x8]
  405f80:	call   402170 <warnx@plt>
  405f85:	lea    rax,[rip+0x439c]        # 40a328 <optopt@@Base>
  405f8c:	mov    ecx,DWORD PTR [rsp+0x8]
  405f90:	mov    DWORD PTR [rax],ecx
  405f92:	xor    eax,eax
  405f94:	cmp    BYTE PTR [rbp+0x0],0x3a
  405f98:	setne  al
  405f9b:	lea    eax,[rax+rax*4]
  405f9e:	add    eax,0x3a
  405fa1:	jmp    405f1a <getopt@@Base+0x91a>
  405fa6:	cmp    BYTE PTR [rax+0x2],0x3a
  405faa:	je     405fc2 <getopt@@Base+0x9c2>
  405fac:	movsxd rax,DWORD PTR [r15]
  405faf:	lea    edx,[rax+0x1]
  405fb2:	mov    DWORD PTR [r15],edx
  405fb5:	cmp    edx,r12d
  405fb8:	jge    405fdd <getopt@@Base+0x9dd>
  405fba:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  405fbf:	mov    QWORD PTR [rcx],rax
  405fc2:	lea    rax,[rip+0x144e]        # 407417 <getopt_long_only@@Base+0x13d7>
  405fc9:	mov    QWORD PTR [rip+0x4368],rax        # 40a338 <optopt@@Base+0x10>
  405fd0:	add    DWORD PTR [r15],0x1
  405fd4:	mov    eax,DWORD PTR [rsp+0x8]
  405fd8:	jmp    405f1a <getopt@@Base+0x91a>
  405fdd:	lea    rax,[rip+0x1433]        # 407417 <getopt_long_only@@Base+0x13d7>
  405fe4:	mov    QWORD PTR [rip+0x434d],rax        # 40a338 <optopt@@Base+0x10>
  405feb:	lea    rax,[rip+0x432e]        # 40a320 <opterr@@Base>
  405ff2:	cmp    DWORD PTR [rax],0x0
  405ff5:	mov    rbx,QWORD PTR [rsp+0x20]
  405ffa:	je     406013 <getopt@@Base+0xa13>
  405ffc:	cmp    BYTE PTR [rbx],0x3a
  405fff:	je     406013 <getopt@@Base+0xa13>
  406001:	lea    rdi,[rip+0x19b8]        # 4079c0 <getopt_long_only@@Base+0x1980>
  406008:	xor    eax,eax
  40600a:	mov    esi,DWORD PTR [rsp+0x8]
  40600e:	call   402170 <warnx@plt>
  406013:	lea    rax,[rip+0x430e]        # 40a328 <optopt@@Base>
  40601a:	mov    ecx,DWORD PTR [rsp+0x8]
  40601e:	mov    DWORD PTR [rax],ecx
  406020:	xor    eax,eax
  406022:	cmp    BYTE PTR [rbx],0x3a
  406025:	jmp    405f98 <getopt@@Base+0x998>
  40602a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406030 <getopt_long@@Base>:
  406030:	mov    r9d,0x1
  406036:	jmp    405610 <getopt@@Base+0x10>
  40603b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406040 <getopt_long_only@@Base>:
  406040:	mov    r9d,0x5
  406046:	jmp    405610 <getopt@@Base+0x10>
  40604b:	nop    DWORD PTR [rax+rax*1+0x0]
  406050:	push   rbp
  406051:	push   r15
  406053:	push   r14
  406055:	push   r13
  406057:	push   r12
  406059:	push   rbx
  40605a:	sub    rsp,0x58
  40605e:	mov    DWORD PTR [rsp+0x3c],r9d
  406063:	mov    DWORD PTR [rsp+0x10],r8d
  406068:	mov    QWORD PTR [rsp+0x50],rcx
  40606d:	mov    r12,rdx
  406070:	mov    r13,rsi
  406073:	mov    rbp,rdi
  406076:	mov    rbx,QWORD PTR [rip+0x42bb]        # 40a338 <optopt@@Base+0x10>
  40607d:	movsxd rax,DWORD PTR [rip+0x42bc]        # 40a340 <optopt@@Base+0x18>
  406084:	cmp    rax,0x2
  406088:	ja     406097 <getopt_long_only@@Base+0x57>
  40608a:	lea    rcx,[rip+0x3d2f]        # 409dc0 <getopt_long_only@@Base+0x3d80>
  406091:	mov    r15,QWORD PTR [rcx+rax*8]
  406095:	jmp    40609e <getopt_long_only@@Base+0x5e>
  406097:	lea    r15,[rip+0x1379]        # 407417 <getopt_long_only@@Base+0x13d7>
  40609e:	lea    rcx,[rip+0x427f]        # 40a324 <optind@@Base>
  4060a5:	mov    eax,DWORD PTR [rcx]
  4060a7:	mov    QWORD PTR [rsp+0x30],rax
  4060ac:	lea    eax,[rax+0x1]
  4060af:	mov    DWORD PTR [rcx],eax
  4060b1:	mov    esi,0x3d
  4060b6:	mov    rdi,rbx
  4060b9:	call   402150 <strchr@plt>
  4060be:	test   rax,rax
  4060c1:	mov    QWORD PTR [rsp+0x48],rbp
  4060c6:	je     4060d4 <getopt_long_only@@Base+0x94>
  4060c8:	mov    r14,rax
  4060cb:	sub    r14,rbx
  4060ce:	add    rax,0x1
  4060d2:	jmp    4060e1 <getopt_long_only@@Base+0xa1>
  4060d4:	mov    rdi,rbx
  4060d7:	call   402130 <strlen@plt>
  4060dc:	mov    r14,rax
  4060df:	xor    eax,eax
  4060e1:	mov    QWORD PTR [rsp+0x28],rax
  4060e6:	mov    rbp,QWORD PTR [r12]
  4060ea:	test   rbp,rbp
  4060ed:	je     4062aa <getopt_long_only@@Base+0x26a>
  4060f3:	mov    QWORD PTR [rsp+0x20],r13
  4060f8:	mov    QWORD PTR [rsp+0x18],r15
  4060fd:	movsxd rax,DWORD PTR [rsp+0x30]
  406102:	mov    QWORD PTR [rsp+0x40],rax
  406107:	cmp    DWORD PTR [rsp+0x10],0x0
  40610c:	setne  al
  40610f:	cmp    r14,0x1
  406113:	sete   r15b
  406117:	and    r15b,al
  40611a:	mov    QWORD PTR [rsp+0x8],r12
  40611f:	lea    r12,[r12+0x20]
  406124:	mov    DWORD PTR [rsp+0x4],0xffffffff
  40612c:	xor    r13d,r13d
  40612f:	mov    DWORD PTR [rsp+0x14],0x0
  406137:	nop    WORD PTR [rax+rax*1+0x0]
  406140:	mov    rdi,rbx
  406143:	mov    rsi,rbp
  406146:	mov    rdx,r14
  406149:	call   4020b0 <strncmp@plt>
  40614e:	test   eax,eax
  406150:	jne    4061c0 <getopt_long_only@@Base+0x180>
  406152:	mov    rdi,rbp
  406155:	call   402130 <strlen@plt>
  40615a:	cmp    rax,r14
  40615d:	je     406218 <getopt_long_only@@Base+0x1d8>
  406163:	test   r15b,r15b
  406166:	jne    4061c0 <getopt_long_only@@Base+0x180>
  406168:	mov    eax,DWORD PTR [rsp+0x4]
  40616c:	cmp    eax,0xffffffff
  40616f:	je     4061b9 <getopt_long_only@@Base+0x179>
  406171:	test   BYTE PTR [rsp+0x3c],0x4
  406176:	jne    4061af <getopt_long_only@@Base+0x16f>
  406178:	mov    ecx,DWORD PTR [r12-0x18]
  40617d:	cdqe   
  40617f:	shl    rax,0x5
  406183:	mov    rdx,QWORD PTR [rsp+0x8]
  406188:	cmp    ecx,DWORD PTR [rdx+rax*1+0x8]
  40618c:	jne    4061af <getopt_long_only@@Base+0x16f>
  40618e:	mov    rcx,QWORD PTR [r12-0x10]
  406193:	mov    rdx,QWORD PTR [rsp+0x8]
  406198:	cmp    rcx,QWORD PTR [rdx+rax*1+0x10]
  40619d:	jne    4061af <getopt_long_only@@Base+0x16f>
  40619f:	mov    ecx,DWORD PTR [r12-0x8]
  4061a4:	mov    rdx,QWORD PTR [rsp+0x8]
  4061a9:	cmp    ecx,DWORD PTR [rdx+rax*1+0x18]
  4061ad:	je     4061c0 <getopt_long_only@@Base+0x180>
  4061af:	mov    DWORD PTR [rsp+0x14],0x1
  4061b7:	jmp    4061c0 <getopt_long_only@@Base+0x180>
  4061b9:	mov    DWORD PTR [rsp+0x4],r13d
  4061be:	xchg   ax,ax
  4061c0:	mov    rbp,QWORD PTR [r12]
  4061c4:	add    r13d,0x1
  4061c8:	add    r12,0x20
  4061cc:	test   rbp,rbp
  4061cf:	jne    406140 <getopt_long_only@@Base+0x100>
  4061d5:	cmp    DWORD PTR [rsp+0x14],0x0
  4061da:	je     40622c <getopt_long_only@@Base+0x1ec>
  4061dc:	lea    rax,[rip+0x413d]        # 40a320 <opterr@@Base>
  4061e3:	cmp    DWORD PTR [rax],0x0
  4061e6:	je     4062ed <getopt_long_only@@Base+0x2ad>
  4061ec:	mov    rax,QWORD PTR [rsp+0x20]
  4061f1:	cmp    BYTE PTR [rax],0x3a
  4061f4:	je     4062ed <getopt_long_only@@Base+0x2ad>
  4061fa:	lea    rdi,[rip+0x17ef]        # 4079f0 <getopt_long_only@@Base+0x19b0>
  406201:	xor    eax,eax
  406203:	mov    rsi,QWORD PTR [rsp+0x18]
  406208:	mov    edx,r14d
  40620b:	mov    rcx,rbx
  40620e:	call   402170 <warnx@plt>
  406213:	jmp    4062ed <getopt_long_only@@Base+0x2ad>
  406218:	mov    eax,r13d
  40621b:	mov    r15,QWORD PTR [rsp+0x18]
  406220:	mov    r12,QWORD PTR [rsp+0x8]
  406225:	mov    r13,QWORD PTR [rsp+0x20]
  40622a:	jmp    406244 <getopt_long_only@@Base+0x204>
  40622c:	mov    eax,DWORD PTR [rsp+0x4]
  406230:	cmp    eax,0xffffffff
  406233:	mov    r15,QWORD PTR [rsp+0x18]
  406238:	mov    r12,QWORD PTR [rsp+0x8]
  40623d:	mov    r13,QWORD PTR [rsp+0x20]
  406242:	je     4062aa <getopt_long_only@@Base+0x26a>
  406244:	mov    esi,eax
  406246:	movsxd rbp,eax
  406249:	shl    rbp,0x5
  40624d:	mov    eax,DWORD PTR [r12+rbp*1+0x8]
  406252:	cmp    QWORD PTR [rsp+0x28],0x0
  406258:	je     40630e <getopt_long_only@@Base+0x2ce>
  40625e:	test   eax,eax
  406260:	jne    40630e <getopt_long_only@@Base+0x2ce>
  406266:	lea    rax,[rip+0x40b3]        # 40a320 <opterr@@Base>
  40626d:	cmp    DWORD PTR [rax],0x0
  406270:	je     406290 <getopt_long_only@@Base+0x250>
  406272:	cmp    BYTE PTR [r13+0x0],0x3a
  406277:	je     406290 <getopt_long_only@@Base+0x250>
  406279:	lea    rdi,[rip+0x1790]        # 407a10 <getopt_long_only@@Base+0x19d0>
  406280:	xor    eax,eax
  406282:	mov    rsi,r15
  406285:	mov    edx,r14d
  406288:	mov    rcx,rbx
  40628b:	call   402170 <warnx@plt>
  406290:	xor    eax,eax
  406292:	cmp    QWORD PTR [r12+rbp*1+0x10],0x0
  406298:	jne    40629f <getopt_long_only@@Base+0x25f>
  40629a:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  40629f:	lea    rcx,[rip+0x4082]        # 40a328 <optopt@@Base>
  4062a6:	mov    DWORD PTR [rcx],eax
  4062a8:	jmp    4062fa <getopt_long_only@@Base+0x2ba>
  4062aa:	cmp    DWORD PTR [rsp+0x10],0x0
  4062af:	je     4062c6 <getopt_long_only@@Base+0x286>
  4062b1:	lea    rax,[rip+0x406c]        # 40a324 <optind@@Base>
  4062b8:	mov    rcx,QWORD PTR [rsp+0x30]
  4062bd:	mov    DWORD PTR [rax],ecx
  4062bf:	mov    eax,0xffffffff
  4062c4:	jmp    4062ff <getopt_long_only@@Base+0x2bf>
  4062c6:	lea    rax,[rip+0x4053]        # 40a320 <opterr@@Base>
  4062cd:	cmp    DWORD PTR [rax],0x0
  4062d0:	je     4062ed <getopt_long_only@@Base+0x2ad>
  4062d2:	cmp    BYTE PTR [r13+0x0],0x3a
  4062d7:	je     4062ed <getopt_long_only@@Base+0x2ad>
  4062d9:	lea    rdi,[rip+0x1790]        # 407a70 <getopt_long_only@@Base+0x1a30>
  4062e0:	xor    eax,eax
  4062e2:	mov    rsi,r15
  4062e5:	mov    rdx,rbx
  4062e8:	call   402170 <warnx@plt>
  4062ed:	lea    rax,[rip+0x4034]        # 40a328 <optopt@@Base>
  4062f4:	mov    DWORD PTR [rax],0x0
  4062fa:	mov    eax,0x3f
  4062ff:	add    rsp,0x58
  406303:	pop    rbx
  406304:	pop    r12
  406306:	pop    r13
  406308:	pop    r14
  40630a:	pop    r15
  40630c:	pop    rbp
  40630d:	ret    
  40630e:	lea    ecx,[rax-0x1]
  406311:	cmp    ecx,0x1
  406314:	ja     4063e7 <getopt_long_only@@Base+0x3a7>
  40631a:	mov    rdx,QWORD PTR [rsp+0x28]
  40631f:	test   rdx,rdx
  406322:	je     406338 <getopt_long_only@@Base+0x2f8>
  406324:	lea    rcx,[rip+0x4045]        # 40a370 <optarg@@Base>
  40632b:	mov    QWORD PTR [rcx],rdx
  40632e:	cmp    eax,0x1
  406331:	je     40637a <getopt_long_only@@Base+0x33a>
  406333:	jmp    4063e7 <getopt_long_only@@Base+0x3a7>
  406338:	cmp    eax,0x1
  40633b:	jne    4063e7 <getopt_long_only@@Base+0x3a7>
  406341:	lea    rax,[r12+rbp*1]
  406345:	add    rax,0x8
  406349:	mov    rdx,QWORD PTR [rsp+0x30]
  40634e:	add    edx,0x2
  406351:	lea    rcx,[rip+0x3fcc]        # 40a324 <optind@@Base>
  406358:	mov    DWORD PTR [rcx],edx
  40635a:	mov    rcx,QWORD PTR [rsp+0x48]
  40635f:	mov    rdx,QWORD PTR [rsp+0x40]
  406364:	mov    rcx,QWORD PTR [rcx+rdx*8+0x8]
  406369:	lea    rdx,[rip+0x4000]        # 40a370 <optarg@@Base>
  406370:	mov    QWORD PTR [rdx],rcx
  406373:	mov    eax,DWORD PTR [rax]
  406375:	cmp    eax,0x1
  406378:	jne    4063e7 <getopt_long_only@@Base+0x3a7>
  40637a:	lea    rax,[rip+0x3fef]        # 40a370 <optarg@@Base>
  406381:	mov    rax,QWORD PTR [rax]
  406384:	test   rax,rax
  406387:	jne    4063e7 <getopt_long_only@@Base+0x3a7>
  406389:	lea    rax,[rip+0x3f90]        # 40a320 <opterr@@Base>
  406390:	cmp    DWORD PTR [rax],0x0
  406393:	je     4063b0 <getopt_long_only@@Base+0x370>
  406395:	cmp    BYTE PTR [r13+0x0],0x3a
  40639a:	je     4063b0 <getopt_long_only@@Base+0x370>
  40639c:	lea    rdi,[rip+0x169d]        # 407a40 <getopt_long_only@@Base+0x1a00>
  4063a3:	xor    eax,eax
  4063a5:	mov    rsi,r15
  4063a8:	mov    rdx,rbx
  4063ab:	call   402170 <warnx@plt>
  4063b0:	xor    eax,eax
  4063b2:	cmp    QWORD PTR [r12+rbp*1+0x10],0x0
  4063b8:	jne    4063bf <getopt_long_only@@Base+0x37f>
  4063ba:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  4063bf:	lea    rcx,[rip+0x3f62]        # 40a328 <optopt@@Base>
  4063c6:	lea    rdx,[rip+0x3f57]        # 40a324 <optind@@Base>
  4063cd:	add    DWORD PTR [rdx],0xffffffff
  4063d0:	mov    DWORD PTR [rcx],eax
  4063d2:	xor    eax,eax
  4063d4:	cmp    BYTE PTR [r13+0x0],0x3a
  4063d9:	setne  al
  4063dc:	lea    eax,[rax+rax*4]
  4063df:	add    eax,0x3a
  4063e2:	jmp    4062ff <getopt_long_only@@Base+0x2bf>
  4063e7:	mov    rax,QWORD PTR [rsp+0x50]
  4063ec:	test   rax,rax
  4063ef:	je     4063f3 <getopt_long_only@@Base+0x3b3>
  4063f1:	mov    DWORD PTR [rax],esi
  4063f3:	mov    rcx,QWORD PTR [r12+rbp*1+0x10]
  4063f8:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  4063fd:	test   rcx,rcx
  406400:	je     4062ff <getopt_long_only@@Base+0x2bf>
  406406:	mov    DWORD PTR [rcx],eax
  406408:	xor    eax,eax
  40640a:	jmp    4062ff <getopt_long_only@@Base+0x2bf>
  40640f:	nop
  406410:	endbr64 
  406414:	push   r15
  406416:	lea    r15,[rip+0x3903]        # 409d20 <getopt_long_only@@Base+0x3ce0>
  40641d:	push   r14
  40641f:	mov    r14,rdx
  406422:	push   r13
  406424:	mov    r13,rsi
  406427:	push   r12
  406429:	mov    r12d,edi
  40642c:	push   rbp
  40642d:	lea    rbp,[rip+0x38f4]        # 409d28 <getopt_long_only@@Base+0x3ce8>
  406434:	push   rbx
  406435:	sub    rbp,r15
  406438:	sub    rsp,0x8
  40643c:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  406441:	sar    rbp,0x3
  406445:	je     406466 <getopt_long_only@@Base+0x426>
  406447:	xor    ebx,ebx
  406449:	nop    DWORD PTR [rax+0x0]
  406450:	mov    rdx,r14
  406453:	mov    rsi,r13
  406456:	mov    edi,r12d
  406459:	call   QWORD PTR [r15+rbx*8]
  40645d:	add    rbx,0x1
  406461:	cmp    rbp,rbx
  406464:	jne    406450 <getopt_long_only@@Base+0x410>
  406466:	add    rsp,0x8
  40646a:	pop    rbx
  40646b:	pop    rbp
  40646c:	pop    r12
  40646e:	pop    r13
  406470:	pop    r14
  406472:	pop    r15
  406474:	ret    
  406475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406480:	endbr64 
  406484:	ret    

Disassembly of section .fini:

0000000000406488 <.fini>:
  406488:	endbr64 
  40648c:	sub    rsp,0x8
  406490:	add    rsp,0x8
  406494:	ret    
