
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 408ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x6fe4]        # 409010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x6fe2]        # 409018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x6fda]        # 409020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x6fd2]        # 409028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x6fca]        # 409030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x6fc2]        # 409038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x6fba]        # 409040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x6fb2]        # 409048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x6faa]        # 409050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x6fa2]        # 409058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x6f9a]        # 409060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x6f92]        # 409068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x6f8a]        # 409070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x6f82]        # 409078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <malloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x6f7a]        # 409080 <malloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <realloc@plt>:
  402110:	jmp    QWORD PTR [rip+0x6f72]        # 409088 <realloc@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <munmap@plt>:
  402120:	jmp    QWORD PTR [rip+0x6f6a]        # 409090 <munmap@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x6f62]        # 409098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x6f5a]        # 4090a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <fn_vv@plt>:
  402150:	jmp    QWORD PTR [rip+0x6e72]        # 408fc8 <fn_vv>
  402156:	xchg   ax,ax

0000000000402158 <fn_ii@plt>:
  402158:	jmp    QWORD PTR [rip+0x6e72]        # 408fd0 <fn_ii>
  40215e:	xchg   ax,ax

0000000000402160 <fn_ii_va@plt>:
  402160:	jmp    QWORD PTR [rip+0x6e72]        # 408fd8 <fn_ii_va>
  402166:	xchg   ax,ax

Disassembly of section .text:

0000000000402170 <_start@@Base>:
  402170:	endbr64 
  402174:	xor    ebp,ebp
  402176:	mov    r9,rdx
  402179:	pop    rsi
  40217a:	mov    rdx,rsp
  40217d:	and    rsp,0xfffffffffffffff0
  402181:	push   rax
  402182:	push   rsp
  402183:	mov    r8,0x405e60
  40218a:	mov    rcx,0x405df0
  402191:	mov    rdi,0x402270
  402198:	call   QWORD PTR [rip+0x6e4a]        # 408fe8 <__libc_start_main@GLIBC_2.2.5>
  40219e:	hlt    
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	ret    
  4021a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021af:	nop
  4021b0:	mov    eax,0x4090c0
  4021b5:	cmp    rax,0x4090c0
  4021bb:	je     4021d0 <_start@@Base+0x60>
  4021bd:	mov    eax,0x0
  4021c2:	test   rax,rax
  4021c5:	je     4021d0 <_start@@Base+0x60>
  4021c7:	mov    edi,0x4090c0
  4021cc:	jmp    rax
  4021ce:	xchg   ax,ax
  4021d0:	ret    
  4021d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	mov    esi,0x4090c0
  4021e5:	sub    rsi,0x4090c0
  4021ec:	mov    rax,rsi
  4021ef:	shr    rsi,0x3f
  4021f3:	sar    rax,0x3
  4021f7:	add    rsi,rax
  4021fa:	sar    rsi,1
  4021fd:	je     402210 <_start@@Base+0xa0>
  4021ff:	mov    eax,0x0
  402204:	test   rax,rax
  402207:	je     402210 <_start@@Base+0xa0>
  402209:	mov    edi,0x4090c0
  40220e:	jmp    rax
  402210:	ret    
  402211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40221c:	nop    DWORD PTR [rax+0x0]
  402220:	endbr64 
  402224:	cmp    BYTE PTR [rip+0x6e95],0x0        # 4090c0 <__bss_start@@Base>
  40222b:	jne    402240 <_start@@Base+0xd0>
  40222d:	push   rbp
  40222e:	mov    rbp,rsp
  402231:	call   4021b0 <_start@@Base+0x40>
  402236:	mov    BYTE PTR [rip+0x6e83],0x1        # 4090c0 <__bss_start@@Base>
  40223d:	pop    rbp
  40223e:	ret    
  40223f:	nop
  402240:	ret    
  402241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	endbr64 
  402254:	jmp    4021e0 <_start@@Base+0x70>
  402256:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402260 <set_valid@@Base>:
  402260:	push   rbp
  402261:	mov    rbp,rsp
  402264:	mov    DWORD PTR [rip+0x6e56],0x1        # 4090c4 <__bss_start@@Base+0x4>
  40226e:	pop    rbp
  40226f:	ret    

0000000000402270 <main@@Base>:
  402270:	push   rbp
  402271:	mov    rbp,rsp
  402274:	sub    rsp,0x3c0
  40227b:	mov    DWORD PTR [rbp-0x4],0x0
  402282:	lea    rdi,[rip+0x3d7b]        # 406004 <_IO_stdin_used@@Base+0x4>
  402289:	call   403000 <main@@Base+0xd90>
  40228e:	xor    edi,edi
  402290:	mov    QWORD PTR [rbp-0x308],rax
  402297:	call   404770 <mmk_matcher_init@@Base>
  40229c:	lea    rax,[rip+0xffffffffffffffbd]        # 402260 <set_valid@@Base>
  4022a3:	xor    esi,esi
  4022a5:	lea    rcx,[rbp-0x28]
  4022a9:	mov    rdx,rcx
  4022ac:	mov    rdi,rdx
  4022af:	mov    edx,0x20
  4022b4:	mov    QWORD PTR [rbp-0x310],rax
  4022bb:	mov    QWORD PTR [rbp-0x318],rcx
  4022c2:	call   4020b0 <memset@plt>
  4022c7:	mov    rax,QWORD PTR [rbp-0x310]
  4022ce:	mov    QWORD PTR [rbp-0x18],rax
  4022d2:	mov    rdi,QWORD PTR [rbp-0x318]
  4022d9:	call   405ca0 <mmk_when_init@@Base>
  4022de:	call   402150 <fn_vv@plt>
  4022e3:	call   4047b0 <mmk_matcher_term@@Base>
  4022e8:	mov    edi,0x1
  4022ed:	call   404770 <mmk_matcher_init@@Base>
  4022f2:	call   402150 <fn_vv@plt>
  4022f7:	call   4047b0 <mmk_matcher_term@@Base>
  4022fc:	xor    esi,esi
  4022fe:	lea    rax,[rbp-0x50]
  402302:	mov    rcx,rax
  402305:	mov    rdi,rcx
  402308:	mov    edx,0x28
  40230d:	mov    QWORD PTR [rbp-0x320],rax
  402314:	call   4020b0 <memset@plt>
  402319:	mov    DWORD PTR [rbp-0x50],0x1
  402320:	mov    DWORD PTR [rbp-0x4c],0x1
  402327:	mov    rdi,QWORD PTR [rbp-0x320]
  40232e:	call   405530 <mmk_verify_times@@Base>
  402333:	cmp    eax,0x0
  402336:	jne    402372 <main@@Base+0x102>
  40233c:	mov    rax,QWORD PTR [rip+0x6cb5]        # 408ff8 <stderr@GLIBC_2.2.5>
  402343:	mov    rdi,QWORD PTR [rax]
  402346:	lea    rsi,[rip+0x3cbd]        # 40600a <_IO_stdin_used@@Base+0xa>
  40234d:	lea    rdx,[rip+0x3cd3]        # 406027 <_IO_stdin_used@@Base+0x27>
  402354:	mov    ecx,0x2a
  402359:	lea    r8,[rip+0x3dba]        # 40611a <_IO_stdin_used@@Base+0x11a>
  402360:	mov    al,0x0
  402362:	call   4020e0 <fprintf@plt>
  402367:	mov    DWORD PTR [rbp-0x324],eax
  40236d:	call   402040 <abort@plt>
  402372:	jmp    402377 <main@@Base+0x107>
  402377:	jmp    40237c <main@@Base+0x10c>
  40237c:	mov    edi,0x1
  402381:	call   404770 <mmk_matcher_init@@Base>
  402386:	call   402150 <fn_vv@plt>
  40238b:	call   4047b0 <mmk_matcher_term@@Base>
  402390:	mov    DWORD PTR [rbp-0x78],0x1
  402397:	mov    DWORD PTR [rbp-0x74],0x0
  40239e:	mov    QWORD PTR [rbp-0x70],0x0
  4023a6:	mov    QWORD PTR [rbp-0x68],0x1
  4023ae:	mov    QWORD PTR [rbp-0x60],0x0
  4023b6:	mov    QWORD PTR [rbp-0x58],0x0
  4023be:	lea    rdi,[rbp-0x78]
  4023c2:	call   405530 <mmk_verify_times@@Base>
  4023c7:	cmp    eax,0x0
  4023ca:	jne    402406 <main@@Base+0x196>
  4023d0:	mov    rax,QWORD PTR [rip+0x6c21]        # 408ff8 <stderr@GLIBC_2.2.5>
  4023d7:	mov    rdi,QWORD PTR [rax]
  4023da:	lea    rsi,[rip+0x3c29]        # 40600a <_IO_stdin_used@@Base+0xa>
  4023e1:	lea    rdx,[rip+0x3c3f]        # 406027 <_IO_stdin_used@@Base+0x27>
  4023e8:	mov    ecx,0x2b
  4023ed:	lea    r8,[rip+0x3c86]        # 40607a <_IO_stdin_used@@Base+0x7a>
  4023f4:	mov    al,0x0
  4023f6:	call   4020e0 <fprintf@plt>
  4023fb:	mov    DWORD PTR [rbp-0x328],eax
  402401:	call   402040 <abort@plt>
  402406:	jmp    40240b <main@@Base+0x19b>
  40240b:	jmp    402410 <main@@Base+0x1a0>
  402410:	mov    edi,0x1
  402415:	call   404770 <mmk_matcher_init@@Base>
  40241a:	call   402150 <fn_vv@plt>
  40241f:	call   4047b0 <mmk_matcher_term@@Base>
  402424:	mov    DWORD PTR [rbp-0xa0],0x1
  40242e:	mov    DWORD PTR [rbp-0x9c],0x0
  402438:	mov    QWORD PTR [rbp-0x98],0x0
  402443:	mov    QWORD PTR [rbp-0x90],0x0
  40244e:	mov    QWORD PTR [rbp-0x88],0x1
  402459:	mov    QWORD PTR [rbp-0x80],0x0
  402461:	lea    rdi,[rbp-0xa0]
  402468:	call   405530 <mmk_verify_times@@Base>
  40246d:	cmp    eax,0x0
  402470:	je     4024ac <main@@Base+0x23c>
  402476:	mov    rax,QWORD PTR [rip+0x6b7b]        # 408ff8 <stderr@GLIBC_2.2.5>
  40247d:	mov    rdi,QWORD PTR [rax]
  402480:	lea    rsi,[rip+0x3b83]        # 40600a <_IO_stdin_used@@Base+0xa>
  402487:	lea    rdx,[rip+0x3b99]        # 406027 <_IO_stdin_used@@Base+0x27>
  40248e:	mov    ecx,0x2d
  402493:	lea    r8,[rip+0x3c02]        # 40609c <_IO_stdin_used@@Base+0x9c>
  40249a:	mov    al,0x0
  40249c:	call   4020e0 <fprintf@plt>
  4024a1:	mov    DWORD PTR [rbp-0x32c],eax
  4024a7:	call   402040 <abort@plt>
  4024ac:	jmp    4024b1 <main@@Base+0x241>
  4024b1:	jmp    4024b6 <main@@Base+0x246>
  4024b6:	mov    edi,0x1
  4024bb:	call   404770 <mmk_matcher_init@@Base>
  4024c0:	call   402150 <fn_vv@plt>
  4024c5:	call   4047b0 <mmk_matcher_term@@Base>
  4024ca:	mov    DWORD PTR [rbp-0xc8],0x1
  4024d4:	mov    DWORD PTR [rbp-0xc4],0x0
  4024de:	mov    QWORD PTR [rbp-0xc0],0x1
  4024e9:	mov    QWORD PTR [rbp-0xb8],0x0
  4024f4:	mov    QWORD PTR [rbp-0xb0],0x0
  4024ff:	mov    QWORD PTR [rbp-0xa8],0x0
  40250a:	lea    rdi,[rbp-0xc8]
  402511:	call   405530 <mmk_verify_times@@Base>
  402516:	cmp    eax,0x0
  402519:	je     402555 <main@@Base+0x2e5>
  40251f:	mov    rax,QWORD PTR [rip+0x6ad2]        # 408ff8 <stderr@GLIBC_2.2.5>
  402526:	mov    rdi,QWORD PTR [rax]
  402529:	lea    rsi,[rip+0x3ada]        # 40600a <_IO_stdin_used@@Base+0xa>
  402530:	lea    rdx,[rip+0x3af0]        # 406027 <_IO_stdin_used@@Base+0x27>
  402537:	mov    ecx,0x2e
  40253c:	lea    r8,[rip+0x3b7a]        # 4060bd <_IO_stdin_used@@Base+0xbd>
  402543:	mov    al,0x0
  402545:	call   4020e0 <fprintf@plt>
  40254a:	mov    DWORD PTR [rbp-0x330],eax
  402550:	call   402040 <abort@plt>
  402555:	jmp    40255a <main@@Base+0x2ea>
  40255a:	jmp    40255f <main@@Base+0x2ef>
  40255f:	mov    edi,0x1
  402564:	call   404770 <mmk_matcher_init@@Base>
  402569:	call   402150 <fn_vv@plt>
  40256e:	call   4047b0 <mmk_matcher_term@@Base>
  402573:	mov    DWORD PTR [rbp-0xf0],0x1
  40257d:	mov    DWORD PTR [rbp-0xec],0x0
  402587:	mov    QWORD PTR [rbp-0xe8],0x1
  402592:	mov    QWORD PTR [rbp-0xe0],0x1
  40259d:	mov    QWORD PTR [rbp-0xd8],0x0
  4025a8:	mov    QWORD PTR [rbp-0xd0],0x0
  4025b3:	lea    rdi,[rbp-0xf0]
  4025ba:	call   405530 <mmk_verify_times@@Base>
  4025bf:	cmp    eax,0x0
  4025c2:	je     4025fe <main@@Base+0x38e>
  4025c8:	mov    rax,QWORD PTR [rip+0x6a29]        # 408ff8 <stderr@GLIBC_2.2.5>
  4025cf:	mov    rdi,QWORD PTR [rax]
  4025d2:	lea    rsi,[rip+0x3a31]        # 40600a <_IO_stdin_used@@Base+0xa>
  4025d9:	lea    rdx,[rip+0x3a47]        # 406027 <_IO_stdin_used@@Base+0x27>
  4025e0:	mov    ecx,0x2f
  4025e5:	lea    r8,[rip+0x3af5]        # 4060e1 <_IO_stdin_used@@Base+0xe1>
  4025ec:	mov    al,0x0
  4025ee:	call   4020e0 <fprintf@plt>
  4025f3:	mov    DWORD PTR [rbp-0x334],eax
  4025f9:	call   402040 <abort@plt>
  4025fe:	jmp    402603 <main@@Base+0x393>
  402603:	call   402150 <fn_vv@plt>
  402608:	cmp    DWORD PTR [rip+0x6ab5],0x0        # 4090c4 <__bss_start@@Base+0x4>
  40260f:	jne    40264b <main@@Base+0x3db>
  402615:	mov    rax,QWORD PTR [rip+0x69dc]        # 408ff8 <stderr@GLIBC_2.2.5>
  40261c:	mov    rdi,QWORD PTR [rax]
  40261f:	lea    rsi,[rip+0x39e4]        # 40600a <_IO_stdin_used@@Base+0xa>
  402626:	lea    rdx,[rip+0x39fa]        # 406027 <_IO_stdin_used@@Base+0x27>
  40262d:	mov    ecx,0x32
  402632:	lea    r8,[rip+0x3ada]        # 406113 <_IO_stdin_used@@Base+0x113>
  402639:	mov    al,0x0
  40263b:	call   4020e0 <fprintf@plt>
  402640:	mov    DWORD PTR [rbp-0x338],eax
  402646:	call   402040 <abort@plt>
  40264b:	jmp    402650 <main@@Base+0x3e0>
  402650:	jmp    402655 <main@@Base+0x3e5>
  402655:	mov    edi,0x1
  40265a:	call   404770 <mmk_matcher_init@@Base>
  40265f:	call   402150 <fn_vv@plt>
  402664:	call   4047b0 <mmk_matcher_term@@Base>
  402669:	mov    DWORD PTR [rbp-0x118],0x1
  402673:	mov    DWORD PTR [rbp-0x114],0x0
  40267d:	mov    QWORD PTR [rbp-0x110],0x0
  402688:	mov    QWORD PTR [rbp-0x108],0x0
  402693:	mov    QWORD PTR [rbp-0x100],0x1
  40269e:	mov    QWORD PTR [rbp-0xf8],0x0
  4026a9:	lea    rdi,[rbp-0x118]
  4026b0:	call   405530 <mmk_verify_times@@Base>
  4026b5:	cmp    eax,0x0
  4026b8:	jne    4026f4 <main@@Base+0x484>
  4026be:	mov    rax,QWORD PTR [rip+0x6933]        # 408ff8 <stderr@GLIBC_2.2.5>
  4026c5:	mov    rdi,QWORD PTR [rax]
  4026c8:	lea    rsi,[rip+0x393b]        # 40600a <_IO_stdin_used@@Base+0xa>
  4026cf:	lea    rdx,[rip+0x3951]        # 406027 <_IO_stdin_used@@Base+0x27>
  4026d6:	mov    ecx,0x33
  4026db:	lea    r8,[rip+0x39bb]        # 40609d <_IO_stdin_used@@Base+0x9d>
  4026e2:	mov    al,0x0
  4026e4:	call   4020e0 <fprintf@plt>
  4026e9:	mov    DWORD PTR [rbp-0x33c],eax
  4026ef:	call   402040 <abort@plt>
  4026f4:	jmp    4026f9 <main@@Base+0x489>
  4026f9:	jmp    4026fe <main@@Base+0x48e>
  4026fe:	mov    edi,0x1
  402703:	call   404770 <mmk_matcher_init@@Base>
  402708:	call   402150 <fn_vv@plt>
  40270d:	call   4047b0 <mmk_matcher_term@@Base>
  402712:	mov    DWORD PTR [rbp-0x140],0x1
  40271c:	mov    DWORD PTR [rbp-0x13c],0x0
  402726:	mov    QWORD PTR [rbp-0x138],0x1
  402731:	mov    QWORD PTR [rbp-0x130],0x0
  40273c:	mov    QWORD PTR [rbp-0x128],0x0
  402747:	mov    QWORD PTR [rbp-0x120],0x0
  402752:	lea    rdi,[rbp-0x140]
  402759:	call   405530 <mmk_verify_times@@Base>
  40275e:	cmp    eax,0x0
  402761:	jne    40279d <main@@Base+0x52d>
  402767:	mov    rax,QWORD PTR [rip+0x688a]        # 408ff8 <stderr@GLIBC_2.2.5>
  40276e:	mov    rdi,QWORD PTR [rax]
  402771:	lea    rsi,[rip+0x3892]        # 40600a <_IO_stdin_used@@Base+0xa>
  402778:	lea    rdx,[rip+0x38a8]        # 406027 <_IO_stdin_used@@Base+0x27>
  40277f:	mov    ecx,0x34
  402784:	lea    r8,[rip+0x3933]        # 4060be <_IO_stdin_used@@Base+0xbe>
  40278b:	mov    al,0x0
  40278d:	call   4020e0 <fprintf@plt>
  402792:	mov    DWORD PTR [rbp-0x340],eax
  402798:	call   402040 <abort@plt>
  40279d:	jmp    4027a2 <main@@Base+0x532>
  4027a2:	jmp    4027a7 <main@@Base+0x537>
  4027a7:	mov    edi,0x1
  4027ac:	call   404770 <mmk_matcher_init@@Base>
  4027b1:	call   402150 <fn_vv@plt>
  4027b6:	call   4047b0 <mmk_matcher_term@@Base>
  4027bb:	mov    DWORD PTR [rbp-0x168],0x1
  4027c5:	mov    DWORD PTR [rbp-0x164],0x0
  4027cf:	mov    QWORD PTR [rbp-0x160],0x0
  4027da:	mov    QWORD PTR [rbp-0x158],0x1
  4027e5:	mov    QWORD PTR [rbp-0x150],0x0
  4027f0:	mov    QWORD PTR [rbp-0x148],0x0
  4027fb:	lea    rdi,[rbp-0x168]
  402802:	call   405530 <mmk_verify_times@@Base>
  402807:	cmp    eax,0x0
  40280a:	jne    402846 <main@@Base+0x5d6>
  402810:	mov    rax,QWORD PTR [rip+0x67e1]        # 408ff8 <stderr@GLIBC_2.2.5>
  402817:	mov    rdi,QWORD PTR [rax]
  40281a:	lea    rsi,[rip+0x37e9]        # 40600a <_IO_stdin_used@@Base+0xa>
  402821:	lea    rdx,[rip+0x37ff]        # 406027 <_IO_stdin_used@@Base+0x27>
  402828:	mov    ecx,0x35
  40282d:	lea    r8,[rip+0x3846]        # 40607a <_IO_stdin_used@@Base+0x7a>
  402834:	mov    al,0x0
  402836:	call   4020e0 <fprintf@plt>
  40283b:	mov    DWORD PTR [rbp-0x344],eax
  402841:	call   402040 <abort@plt>
  402846:	jmp    40284b <main@@Base+0x5db>
  40284b:	jmp    402850 <main@@Base+0x5e0>
  402850:	mov    edi,0x1
  402855:	call   404770 <mmk_matcher_init@@Base>
  40285a:	call   402150 <fn_vv@plt>
  40285f:	call   4047b0 <mmk_matcher_term@@Base>
  402864:	mov    DWORD PTR [rbp-0x190],0x1
  40286e:	mov    DWORD PTR [rbp-0x18c],0x0
  402878:	mov    QWORD PTR [rbp-0x188],0x1
  402883:	mov    QWORD PTR [rbp-0x180],0x1
  40288e:	mov    QWORD PTR [rbp-0x178],0x0
  402899:	mov    QWORD PTR [rbp-0x170],0x0
  4028a4:	lea    rdi,[rbp-0x190]
  4028ab:	call   405530 <mmk_verify_times@@Base>
  4028b0:	cmp    eax,0x0
  4028b3:	jne    4028ef <main@@Base+0x67f>
  4028b9:	mov    rax,QWORD PTR [rip+0x6738]        # 408ff8 <stderr@GLIBC_2.2.5>
  4028c0:	mov    rdi,QWORD PTR [rax]
  4028c3:	lea    rsi,[rip+0x3740]        # 40600a <_IO_stdin_used@@Base+0xa>
  4028ca:	lea    rdx,[rip+0x3756]        # 406027 <_IO_stdin_used@@Base+0x27>
  4028d1:	mov    ecx,0x36
  4028d6:	lea    r8,[rip+0x3805]        # 4060e2 <_IO_stdin_used@@Base+0xe2>
  4028dd:	mov    al,0x0
  4028df:	call   4020e0 <fprintf@plt>
  4028e4:	mov    DWORD PTR [rbp-0x348],eax
  4028ea:	call   402040 <abort@plt>
  4028ef:	jmp    4028f4 <main@@Base+0x684>
  4028f4:	jmp    4028f9 <main@@Base+0x689>
  4028f9:	mov    edi,0x1
  4028fe:	call   404770 <mmk_matcher_init@@Base>
  402903:	call   402150 <fn_vv@plt>
  402908:	call   4047b0 <mmk_matcher_term@@Base>
  40290d:	xor    esi,esi
  40290f:	lea    rax,[rbp-0x1b8]
  402916:	mov    rcx,rax
  402919:	mov    rdi,rcx
  40291c:	mov    edx,0x28
  402921:	mov    QWORD PTR [rbp-0x350],rax
  402928:	call   4020b0 <memset@plt>
  40292d:	mov    DWORD PTR [rbp-0x1b8],0x1
  402937:	mov    DWORD PTR [rbp-0x1b4],0x1
  402941:	mov    rdi,QWORD PTR [rbp-0x350]
  402948:	call   405530 <mmk_verify_times@@Base>
  40294d:	cmp    eax,0x0
  402950:	je     40298c <main@@Base+0x71c>
  402956:	mov    rax,QWORD PTR [rip+0x669b]        # 408ff8 <stderr@GLIBC_2.2.5>
  40295d:	mov    rdi,QWORD PTR [rax]
  402960:	lea    rsi,[rip+0x36a3]        # 40600a <_IO_stdin_used@@Base+0xa>
  402967:	lea    rdx,[rip+0x36b9]        # 406027 <_IO_stdin_used@@Base+0x27>
  40296e:	mov    ecx,0x37
  402973:	lea    r8,[rip+0x379f]        # 406119 <_IO_stdin_used@@Base+0x119>
  40297a:	mov    al,0x0
  40297c:	call   4020e0 <fprintf@plt>
  402981:	mov    DWORD PTR [rbp-0x354],eax
  402987:	call   402040 <abort@plt>
  40298c:	jmp    402991 <main@@Base+0x721>
  402991:	jmp    402996 <main@@Base+0x726>
  402996:	mov    edi,0x1
  40299b:	call   404770 <mmk_matcher_init@@Base>
  4029a0:	call   402150 <fn_vv@plt>
  4029a5:	call   4047b0 <mmk_matcher_term@@Base>
  4029aa:	mov    DWORD PTR [rbp-0x1e0],0x1
  4029b4:	mov    DWORD PTR [rbp-0x1dc],0x0
  4029be:	mov    QWORD PTR [rbp-0x1d8],0x0
  4029c9:	mov    QWORD PTR [rbp-0x1d0],0x0
  4029d4:	mov    QWORD PTR [rbp-0x1c8],0x2
  4029df:	mov    QWORD PTR [rbp-0x1c0],0x0
  4029ea:	lea    rdi,[rbp-0x1e0]
  4029f1:	call   405530 <mmk_verify_times@@Base>
  4029f6:	cmp    eax,0x0
  4029f9:	je     402a35 <main@@Base+0x7c5>
  4029ff:	mov    rax,QWORD PTR [rip+0x65f2]        # 408ff8 <stderr@GLIBC_2.2.5>
  402a06:	mov    rdi,QWORD PTR [rax]
  402a09:	lea    rsi,[rip+0x35fa]        # 40600a <_IO_stdin_used@@Base+0xa>
  402a10:	lea    rdx,[rip+0x3610]        # 406027 <_IO_stdin_used@@Base+0x27>
  402a17:	mov    ecx,0x38
  402a1c:	lea    r8,[rip+0x3717]        # 40613a <_IO_stdin_used@@Base+0x13a>
  402a23:	mov    al,0x0
  402a25:	call   4020e0 <fprintf@plt>
  402a2a:	mov    DWORD PTR [rbp-0x358],eax
  402a30:	call   402040 <abort@plt>
  402a35:	jmp    402a3a <main@@Base+0x7ca>
  402a3a:	jmp    402a3f <main@@Base+0x7cf>
  402a3f:	mov    edi,0x1
  402a44:	call   404770 <mmk_matcher_init@@Base>
  402a49:	call   402150 <fn_vv@plt>
  402a4e:	call   4047b0 <mmk_matcher_term@@Base>
  402a53:	mov    DWORD PTR [rbp-0x208],0x1
  402a5d:	mov    DWORD PTR [rbp-0x204],0x0
  402a67:	mov    QWORD PTR [rbp-0x200],0x2
  402a72:	mov    QWORD PTR [rbp-0x1f8],0x0
  402a7d:	mov    QWORD PTR [rbp-0x1f0],0x0
  402a88:	mov    QWORD PTR [rbp-0x1e8],0x0
  402a93:	lea    rdi,[rbp-0x208]
  402a9a:	call   405530 <mmk_verify_times@@Base>
  402a9f:	cmp    eax,0x0
  402aa2:	je     402ade <main@@Base+0x86e>
  402aa8:	mov    rax,QWORD PTR [rip+0x6549]        # 408ff8 <stderr@GLIBC_2.2.5>
  402aaf:	mov    rdi,QWORD PTR [rax]
  402ab2:	lea    rsi,[rip+0x3551]        # 40600a <_IO_stdin_used@@Base+0xa>
  402ab9:	lea    rdx,[rip+0x3567]        # 406027 <_IO_stdin_used@@Base+0x27>
  402ac0:	mov    ecx,0x39
  402ac5:	lea    r8,[rip+0x368f]        # 40615b <_IO_stdin_used@@Base+0x15b>
  402acc:	mov    al,0x0
  402ace:	call   4020e0 <fprintf@plt>
  402ad3:	mov    DWORD PTR [rbp-0x35c],eax
  402ad9:	call   402040 <abort@plt>
  402ade:	jmp    402ae3 <main@@Base+0x873>
  402ae3:	mov    rdi,QWORD PTR [rip+0x64de]        # 408fc8 <fn_vv>
  402aea:	call   404750 <mmk_reset@@Base>
  402aef:	mov    DWORD PTR [rbp-0x20c],0xfefefefe
  402af9:	lea    rdi,[rip+0x367f]        # 40617f <_IO_stdin_used@@Base+0x17f>
  402b00:	call   403030 <main@@Base+0xdc0>
  402b05:	xor    edi,edi
  402b07:	mov    QWORD PTR [rbp-0x368],rax
  402b0e:	call   404770 <mmk_matcher_init@@Base>
  402b13:	mov    DWORD PTR [rbp-0x230],0x0
  402b1d:	mov    ecx,DWORD PTR [rbp-0x20c]
  402b23:	mov    DWORD PTR [rbp-0x22c],ecx
  402b29:	mov    DWORD PTR [rbp-0x234],0x1
  402b33:	lea    rax,[rbp-0x234]
  402b3a:	mov    QWORD PTR [rbp-0x228],rax
  402b41:	mov    QWORD PTR [rbp-0x220],0x0
  402b4c:	mov    QWORD PTR [rbp-0x218],0x0
  402b57:	lea    rdi,[rbp-0x230]
  402b5e:	call   405ca0 <mmk_when_init@@Base>
  402b63:	mov    edi,0x1
  402b68:	call   402158 <fn_ii@plt>
  402b6d:	mov    DWORD PTR [rbp-0x36c],eax
  402b73:	call   4047b0 <mmk_matcher_term@@Base>
  402b78:	mov    edi,0x1
  402b7d:	call   402158 <fn_ii@plt>
  402b82:	cmp    eax,0x1
  402b85:	jne    402b9e <main@@Base+0x92e>
  402b8b:	call   402050 <__errno_location@plt>
  402b90:	mov    ecx,DWORD PTR [rax]
  402b92:	cmp    ecx,DWORD PTR [rbp-0x20c]
  402b98:	je     402bd4 <main@@Base+0x964>
  402b9e:	mov    rax,QWORD PTR [rip+0x6453]        # 408ff8 <stderr@GLIBC_2.2.5>
  402ba5:	mov    rdi,QWORD PTR [rax]
  402ba8:	lea    rsi,[rip+0x345b]        # 40600a <_IO_stdin_used@@Base+0xa>
  402baf:	lea    rdx,[rip+0x3471]        # 406027 <_IO_stdin_used@@Base+0x27>
  402bb6:	mov    ecx,0x40
  402bbb:	lea    r8,[rip+0x35c3]        # 406185 <_IO_stdin_used@@Base+0x185>
  402bc2:	mov    al,0x0
  402bc4:	call   4020e0 <fprintf@plt>
  402bc9:	mov    DWORD PTR [rbp-0x370],eax
  402bcf:	call   402040 <abort@plt>
  402bd4:	jmp    402bd9 <main@@Base+0x969>
  402bd9:	jmp    402bde <main@@Base+0x96e>
  402bde:	mov    edi,0x2a
  402be3:	call   402158 <fn_ii@plt>
  402be8:	cmp    eax,0x0
  402beb:	je     402c27 <main@@Base+0x9b7>
  402bf1:	mov    rax,QWORD PTR [rip+0x6400]        # 408ff8 <stderr@GLIBC_2.2.5>
  402bf8:	mov    rdi,QWORD PTR [rax]
  402bfb:	lea    rsi,[rip+0x3408]        # 40600a <_IO_stdin_used@@Base+0xa>
  402c02:	lea    rdx,[rip+0x341e]        # 406027 <_IO_stdin_used@@Base+0x27>
  402c09:	mov    ecx,0x41
  402c0e:	lea    r8,[rip+0x358e]        # 4061a3 <_IO_stdin_used@@Base+0x1a3>
  402c15:	mov    al,0x0
  402c17:	call   4020e0 <fprintf@plt>
  402c1c:	mov    DWORD PTR [rbp-0x374],eax
  402c22:	call   402040 <abort@plt>
  402c27:	jmp    402c2c <main@@Base+0x9bc>
  402c2c:	jmp    402c31 <main@@Base+0x9c1>
  402c31:	mov    edi,0x1
  402c36:	call   404770 <mmk_matcher_init@@Base>
  402c3b:	xor    eax,eax
  402c3d:	mov    edi,eax
  402c3f:	mov    esi,eax
  402c41:	call   4047f0 <mmk_matcher_add@@Base>
  402c46:	mov    DWORD PTR [rbp-0x238],0x0
  402c50:	mov    edi,DWORD PTR [rbp-0x238]
  402c56:	call   402158 <fn_ii@plt>
  402c5b:	mov    DWORD PTR [rbp-0x378],eax
  402c61:	call   4047b0 <mmk_matcher_term@@Base>
  402c66:	mov    DWORD PTR [rbp-0x260],0x1
  402c70:	mov    DWORD PTR [rbp-0x25c],0x0
  402c7a:	mov    QWORD PTR [rbp-0x258],0x0
  402c85:	mov    QWORD PTR [rbp-0x250],0x0
  402c90:	mov    QWORD PTR [rbp-0x248],0x2
  402c9b:	mov    QWORD PTR [rbp-0x240],0x0
  402ca6:	lea    rdi,[rbp-0x260]
  402cad:	call   405530 <mmk_verify_times@@Base>
  402cb2:	cmp    eax,0x0
  402cb5:	jne    402cf1 <main@@Base+0xa81>
  402cbb:	mov    rax,QWORD PTR [rip+0x6336]        # 408ff8 <stderr@GLIBC_2.2.5>
  402cc2:	mov    rdi,QWORD PTR [rax]
  402cc5:	lea    rsi,[rip+0x333e]        # 40600a <_IO_stdin_used@@Base+0xa>
  402ccc:	lea    rdx,[rip+0x3354]        # 406027 <_IO_stdin_used@@Base+0x27>
  402cd3:	mov    ecx,0x43
  402cd8:	lea    r8,[rip+0x34d3]        # 4061b2 <_IO_stdin_used@@Base+0x1b2>
  402cdf:	mov    al,0x0
  402ce1:	call   4020e0 <fprintf@plt>
  402ce6:	mov    DWORD PTR [rbp-0x37c],eax
  402cec:	call   402040 <abort@plt>
  402cf1:	jmp    402cf6 <main@@Base+0xa86>
  402cf6:	jmp    402cfb <main@@Base+0xa8b>
  402cfb:	mov    edi,0x1
  402d00:	call   404770 <mmk_matcher_init@@Base>
  402d05:	mov    edi,0x1
  402d0a:	call   402158 <fn_ii@plt>
  402d0f:	mov    DWORD PTR [rbp-0x380],eax
  402d15:	call   4047b0 <mmk_matcher_term@@Base>
  402d1a:	mov    DWORD PTR [rbp-0x288],0x1
  402d24:	mov    DWORD PTR [rbp-0x284],0x0
  402d2e:	mov    QWORD PTR [rbp-0x280],0x0
  402d39:	mov    QWORD PTR [rbp-0x278],0x0
  402d44:	mov    QWORD PTR [rbp-0x270],0x1
  402d4f:	mov    QWORD PTR [rbp-0x268],0x0
  402d5a:	lea    rdi,[rbp-0x288]
  402d61:	call   405530 <mmk_verify_times@@Base>
  402d66:	cmp    eax,0x0
  402d69:	jne    402da5 <main@@Base+0xb35>
  402d6f:	mov    rax,QWORD PTR [rip+0x6282]        # 408ff8 <stderr@GLIBC_2.2.5>
  402d76:	mov    rdi,QWORD PTR [rax]
  402d79:	lea    rsi,[rip+0x328a]        # 40600a <_IO_stdin_used@@Base+0xa>
  402d80:	lea    rdx,[rip+0x32a0]        # 406027 <_IO_stdin_used@@Base+0x27>
  402d87:	mov    ecx,0x44
  402d8c:	lea    r8,[rip+0x344b]        # 4061de <_IO_stdin_used@@Base+0x1de>
  402d93:	mov    al,0x0
  402d95:	call   4020e0 <fprintf@plt>
  402d9a:	mov    DWORD PTR [rbp-0x384],eax
  402da0:	call   402040 <abort@plt>
  402da5:	jmp    402daa <main@@Base+0xb3a>
  402daa:	jmp    402daf <main@@Base+0xb3f>
  402daf:	mov    edi,0x1
  402db4:	call   404770 <mmk_matcher_init@@Base>
  402db9:	mov    edi,0x2a
  402dbe:	call   402158 <fn_ii@plt>
  402dc3:	mov    DWORD PTR [rbp-0x388],eax
  402dc9:	call   4047b0 <mmk_matcher_term@@Base>
  402dce:	mov    DWORD PTR [rbp-0x2b0],0x1
  402dd8:	mov    DWORD PTR [rbp-0x2ac],0x0
  402de2:	mov    QWORD PTR [rbp-0x2a8],0x0
  402ded:	mov    QWORD PTR [rbp-0x2a0],0x0
  402df8:	mov    QWORD PTR [rbp-0x298],0x1
  402e03:	mov    QWORD PTR [rbp-0x290],0x0
  402e0e:	lea    rdi,[rbp-0x2b0]
  402e15:	call   405530 <mmk_verify_times@@Base>
  402e1a:	cmp    eax,0x0
  402e1d:	jne    402e59 <main@@Base+0xbe9>
  402e23:	mov    rax,QWORD PTR [rip+0x61ce]        # 408ff8 <stderr@GLIBC_2.2.5>
  402e2a:	mov    rdi,QWORD PTR [rax]
  402e2d:	lea    rsi,[rip+0x31d6]        # 40600a <_IO_stdin_used@@Base+0xa>
  402e34:	lea    rdx,[rip+0x31ec]        # 406027 <_IO_stdin_used@@Base+0x27>
  402e3b:	mov    ecx,0x45
  402e40:	lea    r8,[rip+0x33b8]        # 4061ff <_IO_stdin_used@@Base+0x1ff>
  402e47:	mov    al,0x0
  402e49:	call   4020e0 <fprintf@plt>
  402e4e:	mov    DWORD PTR [rbp-0x38c],eax
  402e54:	call   402040 <abort@plt>
  402e59:	jmp    402e5e <main@@Base+0xbee>
  402e5e:	jmp    402e63 <main@@Base+0xbf3>
  402e63:	mov    edi,0x1
  402e68:	call   404770 <mmk_matcher_init@@Base>
  402e6d:	mov    edi,0xc
  402e72:	call   402158 <fn_ii@plt>
  402e77:	mov    DWORD PTR [rbp-0x390],eax
  402e7d:	call   4047b0 <mmk_matcher_term@@Base>
  402e82:	xor    esi,esi
  402e84:	lea    rcx,[rbp-0x2d8]
  402e8b:	mov    rdx,rcx
  402e8e:	mov    rdi,rdx
  402e91:	mov    edx,0x28
  402e96:	mov    QWORD PTR [rbp-0x398],rcx
  402e9d:	call   4020b0 <memset@plt>
  402ea2:	mov    DWORD PTR [rbp-0x2d8],0x1
  402eac:	mov    DWORD PTR [rbp-0x2d4],0x1
  402eb6:	mov    rdi,QWORD PTR [rbp-0x398]
  402ebd:	call   405530 <mmk_verify_times@@Base>
  402ec2:	cmp    eax,0x0
  402ec5:	jne    402f01 <main@@Base+0xc91>
  402ecb:	mov    rax,QWORD PTR [rip+0x6126]        # 408ff8 <stderr@GLIBC_2.2.5>
  402ed2:	mov    rdi,QWORD PTR [rax]
  402ed5:	lea    rsi,[rip+0x312e]        # 40600a <_IO_stdin_used@@Base+0xa>
  402edc:	lea    rdx,[rip+0x3144]        # 406027 <_IO_stdin_used@@Base+0x27>
  402ee3:	mov    ecx,0x46
  402ee8:	lea    r8,[rip+0x3332]        # 406221 <_IO_stdin_used@@Base+0x221>
  402eef:	mov    al,0x0
  402ef1:	call   4020e0 <fprintf@plt>
  402ef6:	mov    DWORD PTR [rbp-0x39c],eax
  402efc:	call   402040 <abort@plt>
  402f01:	jmp    402f06 <main@@Base+0xc96>
  402f06:	mov    rax,QWORD PTR [rip+0x60c3]        # 408fd0 <fn_ii>
  402f0d:	mov    rdi,rax
  402f10:	call   404750 <mmk_reset@@Base>
  402f15:	lea    rdi,[rip+0x3327]        # 406243 <_IO_stdin_used@@Base+0x243>
  402f1c:	call   403060 <main@@Base+0xdf0>
  402f21:	xor    edi,edi
  402f23:	mov    QWORD PTR [rbp-0x3a8],rax
  402f2a:	call   404770 <mmk_matcher_init@@Base>
  402f2f:	xor    esi,esi
  402f31:	lea    rax,[rbp-0x2f8]
  402f38:	mov    rcx,rax
  402f3b:	mov    rdi,rcx
  402f3e:	mov    edx,0x20
  402f43:	mov    QWORD PTR [rbp-0x3b0],rax
  402f4a:	call   4020b0 <memset@plt>
  402f4f:	mov    DWORD PTR [rbp-0x2fc],0x1
  402f59:	lea    rax,[rbp-0x2fc]
  402f60:	mov    QWORD PTR [rbp-0x2f0],rax
  402f67:	mov    rdi,QWORD PTR [rbp-0x3b0]
  402f6e:	call   405ca0 <mmk_when_init@@Base>
  402f73:	mov    edi,0x1
  402f78:	mov    esi,0x2a
  402f7d:	mov    al,0x0
  402f7f:	call   402160 <fn_ii_va@plt>
  402f84:	mov    DWORD PTR [rbp-0x3b4],eax
  402f8a:	call   4047b0 <mmk_matcher_term@@Base>
  402f8f:	mov    edi,0x1
  402f94:	mov    esi,0x2a
  402f99:	mov    al,0x0
  402f9b:	call   402160 <fn_ii_va@plt>
  402fa0:	cmp    eax,0x1
  402fa3:	je     402fdf <main@@Base+0xd6f>
  402fa9:	mov    rax,QWORD PTR [rip+0x6048]        # 408ff8 <stderr@GLIBC_2.2.5>
  402fb0:	mov    rdi,QWORD PTR [rax]
  402fb3:	lea    rsi,[rip+0x3050]        # 40600a <_IO_stdin_used@@Base+0xa>
  402fba:	lea    rdx,[rip+0x3066]        # 406027 <_IO_stdin_used@@Base+0x27>
  402fc1:	mov    ecx,0x4d
  402fc6:	lea    r8,[rip+0x327f]        # 40624c <_IO_stdin_used@@Base+0x24c>
  402fcd:	mov    al,0x0
  402fcf:	call   4020e0 <fprintf@plt>
  402fd4:	mov    DWORD PTR [rbp-0x3b8],eax
  402fda:	call   402040 <abort@plt>
  402fdf:	jmp    402fe4 <main@@Base+0xd74>
  402fe4:	mov    rax,QWORD PTR [rip+0x5fed]        # 408fd8 <fn_ii_va>
  402feb:	mov    rdi,rax
  402fee:	call   404750 <mmk_reset@@Base>
  402ff3:	xor    eax,eax
  402ff5:	add    rsp,0x3c0
  402ffc:	pop    rbp
  402ffd:	ret    
  402ffe:	xchg   ax,ax
  403000:	push   rbp
  403001:	mov    rbp,rsp
  403004:	sub    rsp,0x10
  403008:	mov    QWORD PTR [rbp-0x8],rdi
  40300c:	mov    rdi,QWORD PTR [rbp-0x8]
  403010:	lea    rsi,[rip+0x79]        # 403090 <main@@Base+0xe20>
  403017:	call   404860 <mmk_mock_create_internal@@Base>
  40301c:	add    rsp,0x10
  403020:	pop    rbp
  403021:	ret    
  403022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40302c:	nop    DWORD PTR [rax+0x0]
  403030:	push   rbp
  403031:	mov    rbp,rsp
  403034:	sub    rsp,0x10
  403038:	lea    rax,[rip+0x311]        # 403350 <main@@Base+0x10e0>
  40303f:	mov    QWORD PTR [rbp-0x8],rdi
  403043:	mov    rdi,QWORD PTR [rbp-0x8]
  403047:	mov    rsi,rax
  40304a:	call   404860 <mmk_mock_create_internal@@Base>
  40304f:	add    rsp,0x10
  403053:	pop    rbp
  403054:	ret    
  403055:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40305f:	nop
  403060:	push   rbp
  403061:	mov    rbp,rsp
  403064:	sub    rsp,0x10
  403068:	lea    rax,[rip+0x901]        # 403970 <main@@Base+0x1700>
  40306f:	mov    QWORD PTR [rbp-0x8],rdi
  403073:	mov    rdi,QWORD PTR [rbp-0x8]
  403077:	mov    rsi,rax
  40307a:	call   404860 <mmk_mock_create_internal@@Base>
  40307f:	add    rsp,0x10
  403083:	pop    rbp
  403084:	ret    
  403085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40308f:	nop
  403090:	push   rbp
  403091:	mov    rbp,rsp
  403094:	sub    rsp,0x90
  40309b:	jmp    4030a0 <main@@Base+0xe30>
  4030a0:	jmp    4030a5 <main@@Base+0xe35>
  4030a5:	jmp    4030aa <main@@Base+0xe3a>
  4030aa:	call   4047d0 <mmk_matcher_ctx@@Base>
  4030af:	mov    QWORD PTR [rbp-0x8],rax
  4030b3:	cmp    QWORD PTR [rbp-0x8],0x0
  4030b8:	je     4031f0 <main@@Base+0xf80>
  4030be:	call   405300 <mmk_ctx@@Base>
  4030c3:	mov    rdi,rax
  4030c6:	call   405160 <mmk_stub_context@@Base>
  4030cb:	mov    QWORD PTR [rbp-0x10],rax
  4030cf:	mov    rax,QWORD PTR [rbp-0x8]
  4030d3:	cmp    DWORD PTR [rax],0x0
  4030d6:	jne    403134 <main@@Base+0xec4>
  4030dc:	mov    edi,0x48
  4030e1:	call   405b70 <mmk_malloc@@Base>
  4030e6:	mov    QWORD PTR [rbp-0x18],rax
  4030ea:	mov    rax,QWORD PTR [rbp-0x18]
  4030ee:	mov    QWORD PTR [rbp-0x80],rax
  4030f2:	call   405cc0 <mmk_when_get_result@@Base>
  4030f7:	mov    rcx,QWORD PTR [rax]
  4030fa:	mov    rdx,QWORD PTR [rbp-0x80]
  4030fe:	mov    QWORD PTR [rdx+0x10],rcx
  403102:	mov    rcx,QWORD PTR [rax+0x8]
  403106:	mov    QWORD PTR [rdx+0x18],rcx
  40310a:	mov    rcx,QWORD PTR [rax+0x10]
  40310e:	mov    QWORD PTR [rdx+0x20],rcx
  403112:	mov    rax,QWORD PTR [rax+0x18]
  403116:	mov    QWORD PTR [rdx+0x28],rax
  40311a:	jmp    40311f <main@@Base+0xeaf>
  40311f:	mov    rdi,QWORD PTR [rbp-0x10]
  403123:	mov    rax,QWORD PTR [rbp-0x18]
  403127:	mov    rsi,rax
  40312a:	call   405ce0 <mmk_when_impl@@Base>
  40312f:	jmp    4031e1 <main@@Base+0xf71>
  403134:	mov    rax,QWORD PTR [rbp-0x8]
  403138:	cmp    DWORD PTR [rax],0x1
  40313b:	jne    4031dc <main@@Base+0xf6c>
  403141:	mov    QWORD PTR [rbp-0x20],0x0
  403149:	mov    rdi,QWORD PTR [rbp-0x10]
  40314d:	call   404a50 <mmk_mock_params_begin@@Base>
  403152:	mov    QWORD PTR [rbp-0x28],rax
  403156:	cmp    QWORD PTR [rbp-0x28],0x0
  40315b:	je     40319b <main@@Base+0xf2b>
  403161:	mov    rax,QWORD PTR [rbp-0x8]
  403165:	mov    QWORD PTR [rbp-0x30],rax
  403169:	jmp    40316e <main@@Base+0xefe>
  40316e:	mov    rax,QWORD PTR [rbp-0x28]
  403172:	mov    rax,QWORD PTR [rax]
  403175:	add    rax,QWORD PTR [rbp-0x20]
  403179:	mov    QWORD PTR [rbp-0x20],rax
  40317d:	jmp    403182 <main@@Base+0xf12>
  403182:	mov    rdi,QWORD PTR [rbp-0x10]
  403186:	mov    rax,QWORD PTR [rbp-0x28]
  40318a:	mov    rsi,rax
  40318d:	call   404a70 <mmk_mock_params_next@@Base>
  403192:	mov    QWORD PTR [rbp-0x28],rax
  403196:	jmp    403156 <main@@Base+0xee6>
  40319b:	mov    rax,QWORD PTR [rbp-0x8]
  40319f:	mov    QWORD PTR [rbp-0x38],rax
  4031a3:	cmp    QWORD PTR [rbp-0x38],0x0
  4031a8:	je     4031d3 <main@@Base+0xf63>
  4031ae:	mov    rax,QWORD PTR [rbp-0x38]
  4031b2:	mov    rax,QWORD PTR [rax+0x10]
  4031b6:	mov    QWORD PTR [rbp-0x40],rax
  4031ba:	mov    rax,QWORD PTR [rbp-0x38]
  4031be:	mov    rdi,rax
  4031c1:	call   405b90 <mmk_free@@Base>
  4031c6:	mov    rax,QWORD PTR [rbp-0x40]
  4031ca:	mov    QWORD PTR [rbp-0x38],rax
  4031ce:	jmp    4031a3 <main@@Base+0xf33>
  4031d3:	mov    rdi,QWORD PTR [rbp-0x20]
  4031d7:	call   405510 <mmk_verify_set_times@@Base>
  4031dc:	jmp    4031e1 <main@@Base+0xf71>
  4031e1:	jmp    4031e6 <main@@Base+0xf76>
  4031e6:	jmp    4031eb <main@@Base+0xf7b>
  4031eb:	jmp    40333c <main@@Base+0x10cc>
  4031f0:	mov    QWORD PTR [rbp-0x60],0x0
  4031f8:	mov    QWORD PTR [rbp-0x58],0x0
  403200:	mov    QWORD PTR [rbp-0x50],0x0
  403208:	lea    rax,[rbp-0x60]
  40320c:	mov    QWORD PTR [rbp-0x48],rax
  403210:	jmp    403215 <main@@Base+0xfa5>
  403215:	mov    rax,QWORD PTR [rbp-0x48]
  403219:	mov    rdi,rax
  40321c:	mov    esi,0x18
  403221:	call   4055a0 <mmk_verify_register_call@@Base>
  403226:	call   404a90 <mmk_mock_get_params@@Base>
  40322b:	mov    QWORD PTR [rbp-0x68],rax
  40322f:	cmp    QWORD PTR [rbp-0x68],0x0
  403234:	je     40332d <main@@Base+0x10bd>
  40323a:	mov    rax,QWORD PTR [rbp-0x68]
  40323e:	mov    QWORD PTR [rbp-0x70],rax
  403242:	mov    rax,QWORD PTR [rbp-0x68]
  403246:	mov    rax,QWORD PTR [rax]
  403249:	mov    QWORD PTR [rbp-0x78],rax
  40324d:	mov    rax,QWORD PTR [rbp-0x70]
  403251:	cmp    DWORD PTR [rax+0x14],0x0
  403255:	je     403275 <main@@Base+0x1005>
  40325b:	mov    rax,QWORD PTR [rbp-0x70]
  40325f:	mov    ecx,DWORD PTR [rax+0x14]
  403262:	mov    DWORD PTR [rbp-0x84],ecx
  403268:	call   402050 <__errno_location@plt>
  40326d:	mov    ecx,DWORD PTR [rbp-0x84]
  403273:	mov    DWORD PTR [rax],ecx
  403275:	mov    rax,QWORD PTR [rbp-0x70]
  403279:	cmp    QWORD PTR [rax+0x20],0x0
  40327e:	je     4032bd <main@@Base+0x104d>
  403284:	mov    rax,QWORD PTR [rbp-0x70]
  403288:	cmp    QWORD PTR [rax+0x18],0x0
  40328d:	jne    4032bd <main@@Base+0x104d>
  403293:	jmp    403298 <main@@Base+0x1028>
  403298:	jmp    40329d <main@@Base+0x102d>
  40329d:	jmp    4032a2 <main@@Base+0x1032>
  4032a2:	mov    rax,QWORD PTR [rbp-0x70]
  4032a6:	call   QWORD PTR [rax+0x20]
  4032a9:	jmp    4032ae <main@@Base+0x103e>
  4032ae:	jmp    4032b3 <main@@Base+0x1043>
  4032b3:	jmp    4032b8 <main@@Base+0x1048>
  4032b8:	jmp    40333c <main@@Base+0x10cc>
  4032bd:	mov    rax,QWORD PTR [rbp-0x70]
  4032c1:	cmp    QWORD PTR [rax+0x20],0x0
  4032c6:	je     403300 <main@@Base+0x1090>
  4032cc:	mov    rax,QWORD PTR [rbp-0x70]
  4032d0:	cmp    QWORD PTR [rax+0x18],0x0
  4032d5:	je     403300 <main@@Base+0x1090>
  4032db:	jmp    4032e0 <main@@Base+0x1070>
  4032e0:	jmp    4032e5 <main@@Base+0x1075>
  4032e5:	mov    rax,QWORD PTR [rbp-0x70]
  4032e9:	call   QWORD PTR [rax+0x20]
  4032ec:	jmp    4032f1 <main@@Base+0x1081>
  4032f1:	jmp    4032f6 <main@@Base+0x1086>
  4032f6:	jmp    4032fb <main@@Base+0x108b>
  4032fb:	jmp    40333c <main@@Base+0x10cc>
  403300:	mov    rax,QWORD PTR [rbp-0x70]
  403304:	cmp    QWORD PTR [rax+0x18],0x0
  403309:	je     40331e <main@@Base+0x10ae>
  40330f:	jmp    403314 <main@@Base+0x10a4>
  403314:	jmp    403319 <main@@Base+0x10a9>
  403319:	jmp    40333c <main@@Base+0x10cc>
  40331e:	jmp    403323 <main@@Base+0x10b3>
  403323:	jmp    403328 <main@@Base+0x10b8>
  403328:	jmp    40333c <main@@Base+0x10cc>
  40332d:	jmp    403332 <main@@Base+0x10c2>
  403332:	jmp    403337 <main@@Base+0x10c7>
  403337:	jmp    40333c <main@@Base+0x10cc>
  40333c:	add    rsp,0x90
  403343:	pop    rbp
  403344:	ret    
  403345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40334f:	nop
  403350:	push   rbp
  403351:	mov    rbp,rsp
  403354:	sub    rsp,0xc0
  40335b:	mov    DWORD PTR [rbp-0x8],edi
  40335e:	jmp    403363 <main@@Base+0x10f3>
  403363:	call   4047d0 <mmk_matcher_ctx@@Base>
  403368:	mov    QWORD PTR [rbp-0x10],rax
  40336c:	cmp    QWORD PTR [rbp-0x10],0x0
  403371:	je     40360c <main@@Base+0x139c>
  403377:	call   405300 <mmk_ctx@@Base>
  40337c:	mov    rdi,rax
  40337f:	call   405160 <mmk_stub_context@@Base>
  403384:	mov    QWORD PTR [rbp-0x18],rax
  403388:	mov    rax,QWORD PTR [rbp-0x10]
  40338c:	cmp    DWORD PTR [rax],0x0
  40338f:	jne    4033fd <main@@Base+0x118d>
  403395:	mov    edi,0x50
  40339a:	call   405b70 <mmk_malloc@@Base>
  40339f:	mov    QWORD PTR [rbp-0x20],rax
  4033a3:	mov    rax,QWORD PTR [rbp-0x20]
  4033a7:	mov    QWORD PTR [rbp-0xb8],rax
  4033ae:	call   405cc0 <mmk_when_get_result@@Base>
  4033b3:	mov    rcx,QWORD PTR [rax]
  4033b6:	mov    rdx,QWORD PTR [rbp-0xb8]
  4033bd:	mov    QWORD PTR [rdx+0x10],rcx
  4033c1:	mov    rcx,QWORD PTR [rax+0x8]
  4033c5:	mov    QWORD PTR [rdx+0x18],rcx
  4033c9:	mov    rcx,QWORD PTR [rax+0x10]
  4033cd:	mov    QWORD PTR [rdx+0x20],rcx
  4033d1:	mov    rax,QWORD PTR [rax+0x18]
  4033d5:	mov    QWORD PTR [rdx+0x28],rax
  4033d9:	mov    esi,DWORD PTR [rbp-0x8]
  4033dc:	mov    rax,QWORD PTR [rbp-0x20]
  4033e0:	mov    DWORD PTR [rax+0x48],esi
  4033e3:	jmp    4033e8 <main@@Base+0x1178>
  4033e8:	mov    rdi,QWORD PTR [rbp-0x18]
  4033ec:	mov    rax,QWORD PTR [rbp-0x20]
  4033f0:	mov    rsi,rax
  4033f3:	call   405ce0 <mmk_when_impl@@Base>
  4033f8:	jmp    4035f4 <main@@Base+0x1384>
  4033fd:	mov    rax,QWORD PTR [rbp-0x10]
  403401:	cmp    DWORD PTR [rax],0x1
  403404:	jne    4035ef <main@@Base+0x137f>
  40340a:	mov    QWORD PTR [rbp-0x28],0x0
  403412:	mov    rdi,QWORD PTR [rbp-0x18]
  403416:	call   404a50 <mmk_mock_params_begin@@Base>
  40341b:	mov    QWORD PTR [rbp-0x30],rax
  40341f:	cmp    QWORD PTR [rbp-0x30],0x0
  403424:	je     4035ae <main@@Base+0x133e>
  40342a:	mov    rax,QWORD PTR [rbp-0x10]
  40342e:	mov    QWORD PTR [rbp-0x38],rax
  403432:	mov    rax,QWORD PTR [rbp-0x38]
  403436:	cmp    QWORD PTR [rax+0x10],0x0
  40343b:	je     403546 <main@@Base+0x12d6>
  403441:	mov    rax,QWORD PTR [rbp-0x38]
  403445:	mov    rax,QWORD PTR [rax+0x10]
  403449:	mov    QWORD PTR [rbp-0x38],rax
  40344d:	mov    rax,QWORD PTR [rbp-0x38]
  403451:	cmp    DWORD PTR [rax],0x0
  403454:	jne    40345f <main@@Base+0x11ef>
  40345a:	jmp    403541 <main@@Base+0x12d1>
  40345f:	mov    rax,QWORD PTR [rbp-0x38]
  403463:	mov    ecx,DWORD PTR [rax]
  403465:	and    ecx,0x80000000
  40346b:	cmp    ecx,0x0
  40346e:	je     4034fd <main@@Base+0x128d>
  403474:	mov    rax,QWORD PTR [rbp-0x30]
  403478:	add    rax,0x18
  40347e:	lea    rcx,[rbp-0x8]
  403482:	mov    rdi,rax
  403485:	mov    rsi,rcx
  403488:	mov    edx,0x4
  40348d:	call   405760 <mmk_memcmp@@Base>
  403492:	mov    DWORD PTR [rbp-0x3c],eax
  403495:	cmp    DWORD PTR [rbp-0x3c],0x0
  403499:	jne    4034b6 <main@@Base+0x1246>
  40349f:	mov    rax,QWORD PTR [rbp-0x38]
  4034a3:	mov    ecx,DWORD PTR [rax]
  4034a5:	and    ecx,0x2
  4034a8:	cmp    ecx,0x0
  4034ab:	jne    4034b6 <main@@Base+0x1246>
  4034b1:	jmp    403590 <main@@Base+0x1320>
  4034b6:	cmp    DWORD PTR [rbp-0x3c],0x0
  4034ba:	jge    4034d7 <main@@Base+0x1267>
  4034c0:	mov    rax,QWORD PTR [rbp-0x38]
  4034c4:	mov    ecx,DWORD PTR [rax]
  4034c6:	and    ecx,0x4
  4034c9:	cmp    ecx,0x0
  4034cc:	jne    4034d7 <main@@Base+0x1267>
  4034d2:	jmp    403590 <main@@Base+0x1320>
  4034d7:	cmp    DWORD PTR [rbp-0x3c],0x0
  4034db:	jle    4034f8 <main@@Base+0x1288>
  4034e1:	mov    rax,QWORD PTR [rbp-0x38]
  4034e5:	mov    ecx,DWORD PTR [rax]
  4034e7:	and    ecx,0x8
  4034ea:	cmp    ecx,0x0
  4034ed:	jne    4034f8 <main@@Base+0x1288>
  4034f3:	jmp    403590 <main@@Base+0x1320>
  4034f8:	jmp    40353c <main@@Base+0x12cc>
  4034fd:	mov    rax,QWORD PTR [rbp-0x38]
  403501:	cmp    DWORD PTR [rax],0x1
  403504:	jne    403537 <main@@Base+0x12c7>
  40350a:	mov    rdi,QWORD PTR [rbp-0x38]
  40350e:	call   404850 <mmk_matcher_get_predicate@@Base>
  403513:	mov    QWORD PTR [rbp-0x48],rax
  403517:	mov    rax,QWORD PTR [rbp-0x48]
  40351b:	mov    rcx,QWORD PTR [rbp-0x30]
  40351f:	mov    edi,DWORD PTR [rcx+0x18]
  403522:	call   rax
  403524:	cmp    eax,0x0
  403527:	jne    403532 <main@@Base+0x12c2>
  40352d:	jmp    403590 <main@@Base+0x1320>
  403532:	jmp    403537 <main@@Base+0x12c7>
  403537:	jmp    40353c <main@@Base+0x12cc>
  40353c:	jmp    403541 <main@@Base+0x12d1>
  403541:	jmp    403577 <main@@Base+0x1307>
  403546:	mov    rax,QWORD PTR [rbp-0x30]
  40354a:	add    rax,0x18
  403550:	lea    rcx,[rbp-0x8]
  403554:	mov    rdi,rax
  403557:	mov    rsi,rcx
  40355a:	mov    edx,0x4
  40355f:	call   405760 <mmk_memcmp@@Base>
  403564:	cmp    eax,0x0
  403567:	je     403572 <main@@Base+0x1302>
  40356d:	jmp    403590 <main@@Base+0x1320>
  403572:	jmp    403577 <main@@Base+0x1307>
  403577:	jmp    40357c <main@@Base+0x130c>
  40357c:	jmp    403581 <main@@Base+0x1311>
  403581:	mov    rax,QWORD PTR [rbp-0x30]
  403585:	mov    rax,QWORD PTR [rax]
  403588:	add    rax,QWORD PTR [rbp-0x28]
  40358c:	mov    QWORD PTR [rbp-0x28],rax
  403590:	jmp    403595 <main@@Base+0x1325>
  403595:	mov    rdi,QWORD PTR [rbp-0x18]
  403599:	mov    rax,QWORD PTR [rbp-0x30]
  40359d:	mov    rsi,rax
  4035a0:	call   404a70 <mmk_mock_params_next@@Base>
  4035a5:	mov    QWORD PTR [rbp-0x30],rax
  4035a9:	jmp    40341f <main@@Base+0x11af>
  4035ae:	mov    rax,QWORD PTR [rbp-0x10]
  4035b2:	mov    QWORD PTR [rbp-0x50],rax
  4035b6:	cmp    QWORD PTR [rbp-0x50],0x0
  4035bb:	je     4035e6 <main@@Base+0x1376>
  4035c1:	mov    rax,QWORD PTR [rbp-0x50]
  4035c5:	mov    rax,QWORD PTR [rax+0x10]
  4035c9:	mov    QWORD PTR [rbp-0x58],rax
  4035cd:	mov    rax,QWORD PTR [rbp-0x50]
  4035d1:	mov    rdi,rax
  4035d4:	call   405b90 <mmk_free@@Base>
  4035d9:	mov    rax,QWORD PTR [rbp-0x58]
  4035dd:	mov    QWORD PTR [rbp-0x50],rax
  4035e1:	jmp    4035b6 <main@@Base+0x1346>
  4035e6:	mov    rdi,QWORD PTR [rbp-0x28]
  4035ea:	call   405510 <mmk_verify_set_times@@Base>
  4035ef:	jmp    4035f4 <main@@Base+0x1384>
  4035f4:	jmp    4035f9 <main@@Base+0x1389>
  4035f9:	jmp    4035fe <main@@Base+0x138e>
  4035fe:	mov    eax,DWORD PTR [rip+0x5ac4]        # 4090c8 <__bss_start@@Base+0x8>
  403604:	mov    DWORD PTR [rbp-0x4],eax
  403607:	jmp    40395f <main@@Base+0x16ef>
  40360c:	mov    QWORD PTR [rbp-0x80],0x0
  403614:	mov    QWORD PTR [rbp-0x78],0x0
  40361c:	mov    QWORD PTR [rbp-0x70],0x0
  403624:	mov    eax,DWORD PTR [rbp-0x8]
  403627:	mov    DWORD PTR [rbp-0x68],eax
  40362a:	lea    rcx,[rbp-0x80]
  40362e:	mov    QWORD PTR [rbp-0x60],rcx
  403632:	jmp    403637 <main@@Base+0x13c7>
  403637:	mov    rax,QWORD PTR [rbp-0x60]
  40363b:	mov    rdi,rax
  40363e:	mov    esi,0x20
  403643:	call   4055a0 <mmk_verify_register_call@@Base>
  403648:	call   404a90 <mmk_mock_get_params@@Base>
  40364d:	mov    QWORD PTR [rbp-0x88],rax
  403654:	cmp    QWORD PTR [rbp-0x88],0x0
  40365c:	je     40394c <main@@Base+0x16dc>
  403662:	mov    rax,QWORD PTR [rbp-0x88]
  403669:	mov    QWORD PTR [rbp-0x90],rax
  403670:	mov    rax,QWORD PTR [rbp-0x88]
  403677:	mov    rax,QWORD PTR [rax]
  40367a:	mov    QWORD PTR [rbp-0x98],rax
  403681:	mov    rax,QWORD PTR [rbp-0x98]
  403688:	cmp    QWORD PTR [rax+0x10],0x0
  40368d:	je     4037ba <main@@Base+0x154a>
  403693:	mov    rax,QWORD PTR [rbp-0x98]
  40369a:	mov    rax,QWORD PTR [rax+0x10]
  40369e:	mov    QWORD PTR [rbp-0x98],rax
  4036a5:	mov    rax,QWORD PTR [rbp-0x98]
  4036ac:	cmp    DWORD PTR [rax],0x0
  4036af:	jne    4036ba <main@@Base+0x144a>
  4036b5:	jmp    4037b5 <main@@Base+0x1545>
  4036ba:	mov    rax,QWORD PTR [rbp-0x98]
  4036c1:	mov    ecx,DWORD PTR [rax]
  4036c3:	and    ecx,0x80000000
  4036c9:	cmp    ecx,0x0
  4036cc:	je     403769 <main@@Base+0x14f9>
  4036d2:	lea    rax,[rbp-0x8]
  4036d6:	mov    rcx,rax
  4036d9:	mov    rdi,rcx
  4036dc:	mov    rsi,rax
  4036df:	mov    edx,0x4
  4036e4:	call   405760 <mmk_memcmp@@Base>
  4036e9:	mov    DWORD PTR [rbp-0x9c],eax
  4036ef:	cmp    DWORD PTR [rbp-0x9c],0x0
  4036f6:	jne    403716 <main@@Base+0x14a6>
  4036fc:	mov    rax,QWORD PTR [rbp-0x98]
  403703:	mov    ecx,DWORD PTR [rax]
  403705:	and    ecx,0x2
  403708:	cmp    ecx,0x0
  40370b:	jne    403716 <main@@Base+0x14a6>
  403711:	jmp    403935 <main@@Base+0x16c5>
  403716:	cmp    DWORD PTR [rbp-0x9c],0x0
  40371d:	jge    40373d <main@@Base+0x14cd>
  403723:	mov    rax,QWORD PTR [rbp-0x98]
  40372a:	mov    ecx,DWORD PTR [rax]
  40372c:	and    ecx,0x4
  40372f:	cmp    ecx,0x0
  403732:	jne    40373d <main@@Base+0x14cd>
  403738:	jmp    403935 <main@@Base+0x16c5>
  40373d:	cmp    DWORD PTR [rbp-0x9c],0x0
  403744:	jle    403764 <main@@Base+0x14f4>
  40374a:	mov    rax,QWORD PTR [rbp-0x98]
  403751:	mov    ecx,DWORD PTR [rax]
  403753:	and    ecx,0x8
  403756:	cmp    ecx,0x0
  403759:	jne    403764 <main@@Base+0x14f4>
  40375f:	jmp    403935 <main@@Base+0x16c5>
  403764:	jmp    4037b0 <main@@Base+0x1540>
  403769:	mov    rax,QWORD PTR [rbp-0x98]
  403770:	cmp    DWORD PTR [rax],0x1
  403773:	jne    4037ab <main@@Base+0x153b>
  403779:	mov    rdi,QWORD PTR [rbp-0x98]
  403780:	call   404850 <mmk_matcher_get_predicate@@Base>
  403785:	mov    QWORD PTR [rbp-0xa8],rax
  40378c:	mov    rax,QWORD PTR [rbp-0xa8]
  403793:	mov    edi,DWORD PTR [rbp-0x8]
  403796:	call   rax
  403798:	cmp    eax,0x0
  40379b:	jne    4037a6 <main@@Base+0x1536>
  4037a1:	jmp    403935 <main@@Base+0x16c5>
  4037a6:	jmp    4037ab <main@@Base+0x153b>
  4037ab:	jmp    4037b0 <main@@Base+0x1540>
  4037b0:	jmp    4037b5 <main@@Base+0x1545>
  4037b5:	jmp    4037f6 <main@@Base+0x1586>
  4037ba:	lea    rax,[rbp-0x8]
  4037be:	mov    rcx,QWORD PTR [rbp-0x90]
  4037c5:	add    rcx,0x30
  4037cc:	add    rcx,0x18
  4037d3:	mov    rdi,rax
  4037d6:	mov    rsi,rcx
  4037d9:	mov    edx,0x4
  4037de:	call   405760 <mmk_memcmp@@Base>
  4037e3:	cmp    eax,0x0
  4037e6:	je     4037f1 <main@@Base+0x1581>
  4037ec:	jmp    403935 <main@@Base+0x16c5>
  4037f1:	jmp    4037f6 <main@@Base+0x1586>
  4037f6:	mov    rax,QWORD PTR [rbp-0x90]
  4037fd:	cmp    DWORD PTR [rax+0x14],0x0
  403801:	je     403824 <main@@Base+0x15b4>
  403807:	mov    rax,QWORD PTR [rbp-0x90]
  40380e:	mov    ecx,DWORD PTR [rax+0x14]
  403811:	mov    DWORD PTR [rbp-0xbc],ecx
  403817:	call   402050 <__errno_location@plt>
  40381c:	mov    ecx,DWORD PTR [rbp-0xbc]
  403822:	mov    DWORD PTR [rax],ecx
  403824:	mov    rax,QWORD PTR [rbp-0x90]
  40382b:	cmp    QWORD PTR [rax+0x20],0x0
  403830:	je     40388a <main@@Base+0x161a>
  403836:	mov    rax,QWORD PTR [rbp-0x90]
  40383d:	cmp    QWORD PTR [rax+0x18],0x0
  403842:	jne    40388a <main@@Base+0x161a>
  403848:	jmp    40384d <main@@Base+0x15dd>
  40384d:	jmp    403852 <main@@Base+0x15e2>
  403852:	jmp    403857 <main@@Base+0x15e7>
  403857:	mov    rax,QWORD PTR [rbp-0x90]
  40385e:	mov    rax,QWORD PTR [rax+0x20]
  403862:	mov    edi,DWORD PTR [rbp-0x8]
  403865:	call   rax
  403867:	mov    DWORD PTR [rbp-0xac],eax
  40386d:	jmp    403872 <main@@Base+0x1602>
  403872:	jmp    403877 <main@@Base+0x1607>
  403877:	jmp    40387c <main@@Base+0x160c>
  40387c:	mov    eax,DWORD PTR [rbp-0xac]
  403882:	mov    DWORD PTR [rbp-0x4],eax
  403885:	jmp    40395f <main@@Base+0x16ef>
  40388a:	mov    rax,QWORD PTR [rbp-0x90]
  403891:	cmp    QWORD PTR [rax+0x20],0x0
  403896:	je     4038ec <main@@Base+0x167c>
  40389c:	mov    rax,QWORD PTR [rbp-0x90]
  4038a3:	cmp    QWORD PTR [rax+0x18],0x0
  4038a8:	je     4038ec <main@@Base+0x167c>
  4038ae:	jmp    4038b3 <main@@Base+0x1643>
  4038b3:	jmp    4038b8 <main@@Base+0x1648>
  4038b8:	mov    rax,QWORD PTR [rbp-0x90]
  4038bf:	mov    rax,QWORD PTR [rax+0x20]
  4038c3:	mov    edi,DWORD PTR [rbp-0x8]
  4038c6:	call   rax
  4038c8:	jmp    4038cd <main@@Base+0x165d>
  4038cd:	jmp    4038d2 <main@@Base+0x1662>
  4038d2:	jmp    4038d7 <main@@Base+0x1667>
  4038d7:	mov    rax,QWORD PTR [rbp-0x90]
  4038de:	mov    rax,QWORD PTR [rax+0x18]
  4038e2:	mov    ecx,DWORD PTR [rax]
  4038e4:	mov    DWORD PTR [rbp-0x4],ecx
  4038e7:	jmp    40395f <main@@Base+0x16ef>
  4038ec:	mov    rax,QWORD PTR [rbp-0x90]
  4038f3:	cmp    QWORD PTR [rax+0x18],0x0
  4038f8:	je     40391d <main@@Base+0x16ad>
  4038fe:	jmp    403903 <main@@Base+0x1693>
  403903:	jmp    403908 <main@@Base+0x1698>
  403908:	mov    rax,QWORD PTR [rbp-0x90]
  40390f:	mov    rax,QWORD PTR [rax+0x18]
  403913:	mov    ecx,DWORD PTR [rax]
  403915:	mov    DWORD PTR [rbp-0x4],ecx
  403918:	jmp    40395f <main@@Base+0x16ef>
  40391d:	jmp    403922 <main@@Base+0x16b2>
  403922:	jmp    403927 <main@@Base+0x16b7>
  403927:	mov    eax,DWORD PTR [rip+0x579b]        # 4090c8 <__bss_start@@Base+0x8>
  40392d:	mov    DWORD PTR [rbp-0x4],eax
  403930:	jmp    40395f <main@@Base+0x16ef>
  403935:	mov    rax,QWORD PTR [rbp-0x88]
  40393c:	mov    rax,QWORD PTR [rax+0x8]
  403940:	mov    QWORD PTR [rbp-0x88],rax
  403947:	jmp    403654 <main@@Base+0x13e4>
  40394c:	jmp    403951 <main@@Base+0x16e1>
  403951:	jmp    403956 <main@@Base+0x16e6>
  403956:	mov    eax,DWORD PTR [rip+0x576c]        # 4090c8 <__bss_start@@Base+0x8>
  40395c:	mov    DWORD PTR [rbp-0x4],eax
  40395f:	mov    eax,DWORD PTR [rbp-0x4]
  403962:	add    rsp,0xc0
  403969:	pop    rbp
  40396a:	ret    
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]
  403970:	push   rbp
  403971:	mov    rbp,rsp
  403974:	sub    rsp,0x300
  40397b:	test   al,al
  40397d:	vmovaps XMMWORD PTR [rbp-0x230],xmm7
  403985:	vmovaps XMMWORD PTR [rbp-0x240],xmm6
  40398d:	vmovaps XMMWORD PTR [rbp-0x250],xmm5
  403995:	vmovaps XMMWORD PTR [rbp-0x260],xmm4
  40399d:	vmovaps XMMWORD PTR [rbp-0x270],xmm3
  4039a5:	vmovaps XMMWORD PTR [rbp-0x280],xmm2
  4039ad:	vmovaps XMMWORD PTR [rbp-0x290],xmm1
  4039b5:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm0
  4039bd:	mov    QWORD PTR [rbp-0x2a8],r9
  4039c4:	mov    QWORD PTR [rbp-0x2b0],r8
  4039cb:	mov    QWORD PTR [rbp-0x2b8],rcx
  4039d2:	mov    QWORD PTR [rbp-0x2c0],rdx
  4039d9:	mov    QWORD PTR [rbp-0x2c8],rsi
  4039e0:	mov    DWORD PTR [rbp-0x2cc],edi
  4039e6:	je     403a6c <main@@Base+0x17fc>
  4039ec:	vmovaps xmm0,XMMWORD PTR [rbp-0x2a0]
  4039f4:	vmovaps XMMWORD PTR [rbp-0x1f0],xmm0
  4039fc:	vmovaps xmm1,XMMWORD PTR [rbp-0x290]
  403a04:	vmovaps XMMWORD PTR [rbp-0x1e0],xmm1
  403a0c:	vmovaps xmm2,XMMWORD PTR [rbp-0x280]
  403a14:	vmovaps XMMWORD PTR [rbp-0x1d0],xmm2
  403a1c:	vmovaps xmm3,XMMWORD PTR [rbp-0x270]
  403a24:	vmovaps XMMWORD PTR [rbp-0x1c0],xmm3
  403a2c:	vmovaps xmm4,XMMWORD PTR [rbp-0x260]
  403a34:	vmovaps XMMWORD PTR [rbp-0x1b0],xmm4
  403a3c:	vmovaps xmm5,XMMWORD PTR [rbp-0x250]
  403a44:	vmovaps XMMWORD PTR [rbp-0x1a0],xmm5
  403a4c:	vmovaps xmm6,XMMWORD PTR [rbp-0x240]
  403a54:	vmovaps XMMWORD PTR [rbp-0x190],xmm6
  403a5c:	vmovaps xmm7,XMMWORD PTR [rbp-0x230]
  403a64:	vmovaps XMMWORD PTR [rbp-0x180],xmm7
  403a6c:	mov    rax,QWORD PTR [rbp-0x2a8]
  403a73:	mov    QWORD PTR [rbp-0x1f8],rax
  403a7a:	mov    rcx,QWORD PTR [rbp-0x2b0]
  403a81:	mov    QWORD PTR [rbp-0x200],rcx
  403a88:	mov    rdx,QWORD PTR [rbp-0x2b8]
  403a8f:	mov    QWORD PTR [rbp-0x208],rdx
  403a96:	mov    rsi,QWORD PTR [rbp-0x2c0]
  403a9d:	mov    QWORD PTR [rbp-0x210],rsi
  403aa4:	mov    rdi,QWORD PTR [rbp-0x2c8]
  403aab:	mov    QWORD PTR [rbp-0x218],rdi
  403ab2:	lea    r8,[rbp-0x30]
  403ab6:	mov    r9d,DWORD PTR [rbp-0x2cc]
  403abd:	mov    DWORD PTR [rbp-0x8],r9d
  403ac1:	lea    r10,[rip+0xa98]        # 404560 <main@@Base+0x22f0>
  403ac8:	mov    QWORD PTR [rbp-0x10],r10
  403acc:	lea    r10,[rbp-0x220]
  403ad3:	mov    QWORD PTR [r8+0x10],r10
  403ad7:	lea    r10,[rbp+0x10]
  403adb:	mov    QWORD PTR [r8+0x8],r10
  403adf:	mov    DWORD PTR [r8+0x4],0x30
  403ae7:	mov    DWORD PTR [r8],0x8
  403aee:	call   4047d0 <mmk_matcher_ctx@@Base>
  403af3:	mov    QWORD PTR [rbp-0x58],rax
  403af7:	cmp    QWORD PTR [rbp-0x58],0x0
  403afc:	je     404145 <main@@Base+0x1ed5>
  403b02:	call   405300 <mmk_ctx@@Base>
  403b07:	mov    rdi,rax
  403b0a:	call   405160 <mmk_stub_context@@Base>
  403b0f:	mov    QWORD PTR [rbp-0x60],rax
  403b13:	mov    rax,QWORD PTR [rbp-0x58]
  403b17:	cmp    DWORD PTR [rax],0x0
  403b1a:	jne    403c01 <main@@Base+0x1991>
  403b20:	mov    edi,0x50
  403b25:	call   405b70 <mmk_malloc@@Base>
  403b2a:	mov    QWORD PTR [rbp-0x68],rax
  403b2e:	mov    rax,QWORD PTR [rbp-0x68]
  403b32:	mov    QWORD PTR [rbp-0x2d8],rax
  403b39:	call   405cc0 <mmk_when_get_result@@Base>
  403b3e:	mov    rcx,QWORD PTR [rax]
  403b41:	mov    rdx,QWORD PTR [rbp-0x2d8]
  403b48:	mov    QWORD PTR [rdx+0x10],rcx
  403b4c:	mov    rcx,QWORD PTR [rax+0x8]
  403b50:	mov    QWORD PTR [rdx+0x18],rcx
  403b54:	mov    rcx,QWORD PTR [rax+0x10]
  403b58:	mov    QWORD PTR [rdx+0x20],rcx
  403b5c:	mov    rax,QWORD PTR [rax+0x18]
  403b60:	mov    QWORD PTR [rdx+0x28],rax
  403b64:	mov    esi,DWORD PTR [rbp-0x8]
  403b67:	mov    rax,QWORD PTR [rbp-0x68]
  403b6b:	mov    DWORD PTR [rax+0x48],esi
  403b6e:	lea    rax,[rbp-0x50]
  403b72:	lea    rcx,[rbp-0x30]
  403b76:	mov    QWORD PTR [rbp-0x70],0x0
  403b7e:	mov    QWORD PTR [rbp-0x78],0x0
  403b86:	mov    rdx,rax
  403b89:	mov    rsi,QWORD PTR [rcx+0x10]
  403b8d:	mov    QWORD PTR [rdx+0x10],rsi
  403b91:	vmovdqu xmm0,XMMWORD PTR [rcx]
  403b95:	vmovdqu XMMWORD PTR [rdx],xmm0
  403b99:	mov    rcx,QWORD PTR [rbp-0x10]
  403b9d:	mov    edi,DWORD PTR [rbp-0x8]
  403ba0:	mov    rsi,rax
  403ba3:	lea    rdx,[rbp-0x70]
  403ba7:	lea    rax,[rbp-0x78]
  403bab:	mov    QWORD PTR [rbp-0x2e0],rcx
  403bb2:	mov    rcx,rax
  403bb5:	mov    rax,QWORD PTR [rbp-0x2e0]
  403bbc:	call   rax
  403bbe:	lea    rcx,[rbp-0x50]
  403bc2:	mov    DWORD PTR [rbp-0x7c],eax
  403bc5:	cmp    DWORD PTR [rbp-0x7c],0x0
  403bc9:	je     403be7 <main@@Base+0x1977>
  403bcf:	mov    rax,QWORD PTR [rbp-0x70]
  403bd3:	mov    rcx,QWORD PTR [rbp-0x68]
  403bd7:	mov    QWORD PTR [rcx+0x38],rax
  403bdb:	mov    rax,QWORD PTR [rbp-0x78]
  403bdf:	mov    rcx,QWORD PTR [rbp-0x68]
  403be3:	mov    QWORD PTR [rcx+0x40],rax
  403be7:	jmp    403bec <main@@Base+0x197c>
  403bec:	mov    rdi,QWORD PTR [rbp-0x60]
  403bf0:	mov    rax,QWORD PTR [rbp-0x68]
  403bf4:	mov    rsi,rax
  403bf7:	call   405ce0 <mmk_when_impl@@Base>
  403bfc:	jmp    404133 <main@@Base+0x1ec3>
  403c01:	mov    rax,QWORD PTR [rbp-0x58]
  403c05:	cmp    DWORD PTR [rax],0x1
  403c08:	jne    40412e <main@@Base+0x1ebe>
  403c0e:	mov    QWORD PTR [rbp-0x88],0x0
  403c19:	mov    rdi,QWORD PTR [rbp-0x60]
  403c1d:	call   404a50 <mmk_mock_params_begin@@Base>
  403c22:	mov    QWORD PTR [rbp-0x90],rax
  403c29:	cmp    QWORD PTR [rbp-0x90],0x0
  403c31:	je     4040d5 <main@@Base+0x1e65>
  403c37:	mov    rax,QWORD PTR [rbp-0x58]
  403c3b:	mov    QWORD PTR [rbp-0x98],rax
  403c42:	mov    rax,QWORD PTR [rbp-0x98]
  403c49:	cmp    QWORD PTR [rax+0x10],0x0
  403c4e:	je     403d8c <main@@Base+0x1b1c>
  403c54:	mov    rax,QWORD PTR [rbp-0x98]
  403c5b:	mov    rax,QWORD PTR [rax+0x10]
  403c5f:	mov    QWORD PTR [rbp-0x98],rax
  403c66:	mov    rax,QWORD PTR [rbp-0x98]
  403c6d:	cmp    DWORD PTR [rax],0x0
  403c70:	jne    403c7b <main@@Base+0x1a0b>
  403c76:	jmp    403d87 <main@@Base+0x1b17>
  403c7b:	mov    rax,QWORD PTR [rbp-0x98]
  403c82:	mov    ecx,DWORD PTR [rax]
  403c84:	and    ecx,0x80000000
  403c8a:	cmp    ecx,0x0
  403c8d:	je     403d34 <main@@Base+0x1ac4>
  403c93:	mov    rax,QWORD PTR [rbp-0x90]
  403c9a:	add    rax,0x18
  403ca0:	lea    rcx,[rbp-0x8]
  403ca4:	mov    rdi,rax
  403ca7:	mov    rsi,rcx
  403caa:	mov    edx,0x4
  403caf:	call   405760 <mmk_memcmp@@Base>
  403cb4:	mov    DWORD PTR [rbp-0x9c],eax
  403cba:	cmp    DWORD PTR [rbp-0x9c],0x0
  403cc1:	jne    403ce1 <main@@Base+0x1a71>
  403cc7:	mov    rax,QWORD PTR [rbp-0x98]
  403cce:	mov    ecx,DWORD PTR [rax]
  403cd0:	and    ecx,0x2
  403cd3:	cmp    ecx,0x0
  403cd6:	jne    403ce1 <main@@Base+0x1a71>
  403cdc:	jmp    4040b1 <main@@Base+0x1e41>
  403ce1:	cmp    DWORD PTR [rbp-0x9c],0x0
  403ce8:	jge    403d08 <main@@Base+0x1a98>
  403cee:	mov    rax,QWORD PTR [rbp-0x98]
  403cf5:	mov    ecx,DWORD PTR [rax]
  403cf7:	and    ecx,0x4
  403cfa:	cmp    ecx,0x0
  403cfd:	jne    403d08 <main@@Base+0x1a98>
  403d03:	jmp    4040b1 <main@@Base+0x1e41>
  403d08:	cmp    DWORD PTR [rbp-0x9c],0x0
  403d0f:	jle    403d2f <main@@Base+0x1abf>
  403d15:	mov    rax,QWORD PTR [rbp-0x98]
  403d1c:	mov    ecx,DWORD PTR [rax]
  403d1e:	and    ecx,0x8
  403d21:	cmp    ecx,0x0
  403d24:	jne    403d2f <main@@Base+0x1abf>
  403d2a:	jmp    4040b1 <main@@Base+0x1e41>
  403d2f:	jmp    403d82 <main@@Base+0x1b12>
  403d34:	mov    rax,QWORD PTR [rbp-0x98]
  403d3b:	cmp    DWORD PTR [rax],0x1
  403d3e:	jne    403d7d <main@@Base+0x1b0d>
  403d44:	mov    rdi,QWORD PTR [rbp-0x98]
  403d4b:	call   404850 <mmk_matcher_get_predicate@@Base>
  403d50:	mov    QWORD PTR [rbp-0xa8],rax
  403d57:	mov    rax,QWORD PTR [rbp-0xa8]
  403d5e:	mov    rcx,QWORD PTR [rbp-0x90]
  403d65:	mov    edi,DWORD PTR [rcx+0x18]
  403d68:	call   rax
  403d6a:	cmp    eax,0x0
  403d6d:	jne    403d78 <main@@Base+0x1b08>
  403d73:	jmp    4040b1 <main@@Base+0x1e41>
  403d78:	jmp    403d7d <main@@Base+0x1b0d>
  403d7d:	jmp    403d82 <main@@Base+0x1b12>
  403d82:	jmp    403d87 <main@@Base+0x1b17>
  403d87:	jmp    403dc0 <main@@Base+0x1b50>
  403d8c:	mov    rax,QWORD PTR [rbp-0x90]
  403d93:	add    rax,0x18
  403d99:	lea    rcx,[rbp-0x8]
  403d9d:	mov    rdi,rax
  403da0:	mov    rsi,rcx
  403da3:	mov    edx,0x4
  403da8:	call   405760 <mmk_memcmp@@Base>
  403dad:	cmp    eax,0x0
  403db0:	je     403dbb <main@@Base+0x1b4b>
  403db6:	jmp    4040b1 <main@@Base+0x1e41>
  403dbb:	jmp    403dc0 <main@@Base+0x1b50>
  403dc0:	jmp    403dc5 <main@@Base+0x1b55>
  403dc5:	lea    rax,[rbp-0x50]
  403dc9:	lea    rcx,[rbp-0x30]
  403dcd:	mov    QWORD PTR [rbp-0xb0],0x0
  403dd8:	mov    QWORD PTR [rbp-0xb8],0x0
  403de3:	mov    rdx,rax
  403de6:	mov    rsi,QWORD PTR [rcx+0x10]
  403dea:	mov    QWORD PTR [rdx+0x10],rsi
  403dee:	vmovdqu xmm0,XMMWORD PTR [rcx]
  403df2:	vmovdqu XMMWORD PTR [rdx],xmm0
  403df6:	mov    rcx,QWORD PTR [rbp-0x10]
  403dfa:	mov    edi,DWORD PTR [rbp-0x8]
  403dfd:	mov    rsi,rax
  403e00:	lea    rdx,[rbp-0xb0]
  403e07:	lea    rax,[rbp-0xb8]
  403e0e:	mov    QWORD PTR [rbp-0x2e8],rcx
  403e15:	mov    rcx,rax
  403e18:	mov    rax,QWORD PTR [rbp-0x2e8]
  403e1f:	call   rax
  403e21:	lea    rcx,[rbp-0x50]
  403e25:	mov    DWORD PTR [rbp-0xbc],eax
  403e2b:	cmp    DWORD PTR [rbp-0xbc],0x0
  403e32:	je     403e50 <main@@Base+0x1be0>
  403e38:	mov    rax,QWORD PTR [rbp-0x90]
  403e3f:	mov    rax,QWORD PTR [rax+0x8]
  403e43:	cmp    rax,QWORD PTR [rbp-0xb0]
  403e4a:	je     403e55 <main@@Base+0x1be5>
  403e50:	jmp    4040b1 <main@@Base+0x1e41>
  403e55:	mov    QWORD PTR [rbp-0xc8],0x0
  403e60:	mov    rax,QWORD PTR [rbp-0xc8]
  403e67:	cmp    rax,QWORD PTR [rbp-0xb0]
  403e6e:	jae    40408a <main@@Base+0x1e1a>
  403e74:	mov    rax,QWORD PTR [rbp-0x90]
  403e7b:	mov    rax,QWORD PTR [rax+0x10]
  403e7f:	mov    rcx,QWORD PTR [rbp-0xc8]
  403e86:	mov    rax,QWORD PTR [rax+rcx*8]
  403e8a:	mov    QWORD PTR [rbp-0xd0],rax
  403e91:	mov    rax,QWORD PTR [rbp-0xb8]
  403e98:	mov    rcx,QWORD PTR [rbp-0xc8]
  403e9f:	mov    rax,QWORD PTR [rax+rcx*8]
  403ea3:	mov    QWORD PTR [rbp-0xd8],rax
  403eaa:	mov    rax,QWORD PTR [rbp-0xd0]
  403eb1:	mov    rax,QWORD PTR [rax]
  403eb4:	mov    rcx,QWORD PTR [rbp-0xd8]
  403ebb:	cmp    rax,QWORD PTR [rcx]
  403ebe:	je     403ec9 <main@@Base+0x1c59>
  403ec4:	jmp    4040b1 <main@@Base+0x1e41>
  403ec9:	mov    rax,QWORD PTR [rbp-0x98]
  403ed0:	cmp    QWORD PTR [rax+0x10],0x0
  403ed5:	je     40401f <main@@Base+0x1daf>
  403edb:	mov    rax,QWORD PTR [rbp-0x98]
  403ee2:	mov    rax,QWORD PTR [rax+0x10]
  403ee6:	mov    QWORD PTR [rbp-0x98],rax
  403eed:	mov    rax,QWORD PTR [rbp-0x98]
  403ef4:	cmp    DWORD PTR [rax],0x0
  403ef7:	jne    403f02 <main@@Base+0x1c92>
  403efd:	jmp    40401a <main@@Base+0x1daa>
  403f02:	mov    rax,QWORD PTR [rbp-0x98]
  403f09:	mov    ecx,DWORD PTR [rax]
  403f0b:	and    ecx,0x80000000
  403f11:	cmp    ecx,0x0
  403f14:	je     403fca <main@@Base+0x1d5a>
  403f1a:	mov    rax,QWORD PTR [rbp-0xd0]
  403f21:	add    rax,0x8
  403f27:	mov    rcx,QWORD PTR [rbp-0xd8]
  403f2e:	add    rcx,0x8
  403f35:	mov    rdx,QWORD PTR [rbp-0xd8]
  403f3c:	mov    rdx,QWORD PTR [rdx]
  403f3f:	mov    rdi,rax
  403f42:	mov    rsi,rcx
  403f45:	call   405760 <mmk_memcmp@@Base>
  403f4a:	mov    DWORD PTR [rbp-0xdc],eax
  403f50:	cmp    DWORD PTR [rbp-0xdc],0x0
  403f57:	jne    403f77 <main@@Base+0x1d07>
  403f5d:	mov    rax,QWORD PTR [rbp-0x98]
  403f64:	mov    ecx,DWORD PTR [rax]
  403f66:	and    ecx,0x2
  403f69:	cmp    ecx,0x0
  403f6c:	jne    403f77 <main@@Base+0x1d07>
  403f72:	jmp    4040b1 <main@@Base+0x1e41>
  403f77:	cmp    DWORD PTR [rbp-0xdc],0x0
  403f7e:	jge    403f9e <main@@Base+0x1d2e>
  403f84:	mov    rax,QWORD PTR [rbp-0x98]
  403f8b:	mov    ecx,DWORD PTR [rax]
  403f8d:	and    ecx,0x4
  403f90:	cmp    ecx,0x0
  403f93:	jne    403f9e <main@@Base+0x1d2e>
  403f99:	jmp    4040b1 <main@@Base+0x1e41>
  403f9e:	cmp    DWORD PTR [rbp-0xdc],0x0
  403fa5:	jle    403fc5 <main@@Base+0x1d55>
  403fab:	mov    rax,QWORD PTR [rbp-0x98]
  403fb2:	mov    ecx,DWORD PTR [rax]
  403fb4:	and    ecx,0x8
  403fb7:	cmp    ecx,0x0
  403fba:	jne    403fc5 <main@@Base+0x1d55>
  403fc0:	jmp    4040b1 <main@@Base+0x1e41>
  403fc5:	jmp    404015 <main@@Base+0x1da5>
  403fca:	mov    rax,QWORD PTR [rbp-0x98]
  403fd1:	cmp    DWORD PTR [rax],0x1
  403fd4:	jne    404010 <main@@Base+0x1da0>
  403fda:	mov    rdi,QWORD PTR [rbp-0x98]
  403fe1:	call   404850 <mmk_matcher_get_predicate@@Base>
  403fe6:	mov    QWORD PTR [rbp-0xe8],rax
  403fed:	mov    rax,QWORD PTR [rbp-0xe8]
  403ff4:	mov    rdi,QWORD PTR [rbp-0xd0]
  403ffb:	call   rax
  403ffd:	cmp    eax,0x0
  404000:	jne    40400b <main@@Base+0x1d9b>
  404006:	jmp    4040b1 <main@@Base+0x1e41>
  40400b:	jmp    404010 <main@@Base+0x1da0>
  404010:	jmp    404015 <main@@Base+0x1da5>
  404015:	jmp    40401a <main@@Base+0x1daa>
  40401a:	jmp    404062 <main@@Base+0x1df2>
  40401f:	mov    rax,QWORD PTR [rbp-0xd0]
  404026:	add    rax,0x8
  40402c:	mov    rcx,QWORD PTR [rbp-0xd8]
  404033:	add    rcx,0x8
  40403a:	mov    rdx,QWORD PTR [rbp-0xd8]
  404041:	mov    rdx,QWORD PTR [rdx]
  404044:	mov    rdi,rax
  404047:	mov    rsi,rcx
  40404a:	call   405760 <mmk_memcmp@@Base>
  40404f:	cmp    eax,0x0
  404052:	je     40405d <main@@Base+0x1ded>
  404058:	jmp    4040b1 <main@@Base+0x1e41>
  40405d:	jmp    404062 <main@@Base+0x1df2>
  404062:	mov    rax,QWORD PTR [rbp-0xd8]
  404069:	mov    rdi,rax
  40406c:	call   405b90 <mmk_free@@Base>
  404071:	mov    rax,QWORD PTR [rbp-0xc8]
  404078:	add    rax,0x1
  40407e:	mov    QWORD PTR [rbp-0xc8],rax
  404085:	jmp    403e60 <main@@Base+0x1bf0>
  40408a:	mov    rax,QWORD PTR [rbp-0xb8]
  404091:	mov    rdi,rax
  404094:	call   405b90 <mmk_free@@Base>
  404099:	mov    rax,QWORD PTR [rbp-0x90]
  4040a0:	mov    rax,QWORD PTR [rax]
  4040a3:	add    rax,QWORD PTR [rbp-0x88]
  4040aa:	mov    QWORD PTR [rbp-0x88],rax
  4040b1:	jmp    4040b6 <main@@Base+0x1e46>
  4040b6:	mov    rdi,QWORD PTR [rbp-0x60]
  4040ba:	mov    rax,QWORD PTR [rbp-0x90]
  4040c1:	mov    rsi,rax
  4040c4:	call   404a70 <mmk_mock_params_next@@Base>
  4040c9:	mov    QWORD PTR [rbp-0x90],rax
  4040d0:	jmp    403c29 <main@@Base+0x19b9>
  4040d5:	mov    rax,QWORD PTR [rbp-0x58]
  4040d9:	mov    QWORD PTR [rbp-0xf0],rax
  4040e0:	cmp    QWORD PTR [rbp-0xf0],0x0
  4040e8:	je     404122 <main@@Base+0x1eb2>
  4040ee:	mov    rax,QWORD PTR [rbp-0xf0]
  4040f5:	mov    rax,QWORD PTR [rax+0x10]
  4040f9:	mov    QWORD PTR [rbp-0xf8],rax
  404100:	mov    rax,QWORD PTR [rbp-0xf0]
  404107:	mov    rdi,rax
  40410a:	call   405b90 <mmk_free@@Base>
  40410f:	mov    rax,QWORD PTR [rbp-0xf8]
  404116:	mov    QWORD PTR [rbp-0xf0],rax
  40411d:	jmp    4040e0 <main@@Base+0x1e70>
  404122:	mov    rdi,QWORD PTR [rbp-0x88]
  404129:	call   405510 <mmk_verify_set_times@@Base>
  40412e:	jmp    404133 <main@@Base+0x1ec3>
  404133:	lea    rax,[rbp-0x30]
  404137:	mov    ecx,DWORD PTR [rip+0x4f8f]        # 4090cc <__bss_start@@Base+0xc>
  40413d:	mov    DWORD PTR [rbp-0x4],ecx
  404140:	jmp    40454c <main@@Base+0x22dc>
  404145:	mov    QWORD PTR [rbp-0x120],0x0
  404150:	mov    QWORD PTR [rbp-0x118],0x0
  40415b:	mov    QWORD PTR [rbp-0x110],0x0
  404166:	mov    eax,DWORD PTR [rbp-0x8]
  404169:	mov    DWORD PTR [rbp-0x108],eax
  40416f:	lea    rcx,[rbp-0x120]
  404176:	mov    QWORD PTR [rbp-0x100],rcx
  40417d:	lea    rax,[rbp-0x50]
  404181:	lea    rcx,[rbp-0x30]
  404185:	mov    QWORD PTR [rbp-0x128],0x0
  404190:	mov    QWORD PTR [rbp-0x130],0x0
  40419b:	mov    rdx,rax
  40419e:	mov    rsi,QWORD PTR [rcx+0x10]
  4041a2:	mov    QWORD PTR [rdx+0x10],rsi
  4041a6:	vmovdqu xmm0,XMMWORD PTR [rcx]
  4041aa:	vmovdqu XMMWORD PTR [rdx],xmm0
  4041ae:	mov    rcx,QWORD PTR [rbp-0x10]
  4041b2:	mov    edi,DWORD PTR [rbp-0x8]
  4041b5:	mov    rsi,rax
  4041b8:	lea    rdx,[rbp-0x128]
  4041bf:	lea    rax,[rbp-0x130]
  4041c6:	mov    QWORD PTR [rbp-0x2f0],rcx
  4041cd:	mov    rcx,rax
  4041d0:	mov    rax,QWORD PTR [rbp-0x2f0]
  4041d7:	call   rax
  4041d9:	lea    rcx,[rbp-0x50]
  4041dd:	mov    DWORD PTR [rbp-0x134],eax
  4041e3:	cmp    DWORD PTR [rbp-0x134],0x0
  4041ea:	je     404214 <main@@Base+0x1fa4>
  4041f0:	mov    rax,QWORD PTR [rbp-0x128]
  4041f7:	mov    rcx,QWORD PTR [rbp-0x100]
  4041fe:	mov    QWORD PTR [rcx+0x8],rax
  404202:	mov    rax,QWORD PTR [rbp-0x130]
  404209:	mov    rcx,QWORD PTR [rbp-0x100]
  404210:	mov    QWORD PTR [rcx+0x10],rax
  404214:	jmp    404219 <main@@Base+0x1fa9>
  404219:	mov    rax,QWORD PTR [rbp-0x100]
  404220:	mov    rdi,rax
  404223:	mov    esi,0x20
  404228:	call   4055a0 <mmk_verify_register_call@@Base>
  40422d:	call   404a90 <mmk_mock_get_params@@Base>
  404232:	mov    QWORD PTR [rbp-0x140],rax
  404239:	cmp    QWORD PTR [rbp-0x140],0x0
  404241:	je     40453f <main@@Base+0x22cf>
  404247:	mov    rax,QWORD PTR [rbp-0x140]
  40424e:	mov    QWORD PTR [rbp-0x148],rax
  404255:	mov    rax,QWORD PTR [rbp-0x140]
  40425c:	mov    rax,QWORD PTR [rax]
  40425f:	mov    QWORD PTR [rbp-0x150],rax
  404266:	mov    rax,QWORD PTR [rbp-0x150]
  40426d:	cmp    QWORD PTR [rax+0x10],0x0
  404272:	je     40439f <main@@Base+0x212f>
  404278:	mov    rax,QWORD PTR [rbp-0x150]
  40427f:	mov    rax,QWORD PTR [rax+0x10]
  404283:	mov    QWORD PTR [rbp-0x150],rax
  40428a:	mov    rax,QWORD PTR [rbp-0x150]
  404291:	cmp    DWORD PTR [rax],0x0
  404294:	jne    40429f <main@@Base+0x202f>
  40429a:	jmp    40439a <main@@Base+0x212a>
  40429f:	mov    rax,QWORD PTR [rbp-0x150]
  4042a6:	mov    ecx,DWORD PTR [rax]
  4042a8:	and    ecx,0x80000000
  4042ae:	cmp    ecx,0x0
  4042b1:	je     40434e <main@@Base+0x20de>
  4042b7:	lea    rax,[rbp-0x8]
  4042bb:	mov    rcx,rax
  4042be:	mov    rdi,rcx
  4042c1:	mov    rsi,rax
  4042c4:	mov    edx,0x4
  4042c9:	call   405760 <mmk_memcmp@@Base>
  4042ce:	mov    DWORD PTR [rbp-0x154],eax
  4042d4:	cmp    DWORD PTR [rbp-0x154],0x0
  4042db:	jne    4042fb <main@@Base+0x208b>
  4042e1:	mov    rax,QWORD PTR [rbp-0x150]
  4042e8:	mov    ecx,DWORD PTR [rax]
  4042ea:	and    ecx,0x2
  4042ed:	cmp    ecx,0x0
  4042f0:	jne    4042fb <main@@Base+0x208b>
  4042f6:	jmp    404528 <main@@Base+0x22b8>
  4042fb:	cmp    DWORD PTR [rbp-0x154],0x0
  404302:	jge    404322 <main@@Base+0x20b2>
  404308:	mov    rax,QWORD PTR [rbp-0x150]
  40430f:	mov    ecx,DWORD PTR [rax]
  404311:	and    ecx,0x4
  404314:	cmp    ecx,0x0
  404317:	jne    404322 <main@@Base+0x20b2>
  40431d:	jmp    404528 <main@@Base+0x22b8>
  404322:	cmp    DWORD PTR [rbp-0x154],0x0
  404329:	jle    404349 <main@@Base+0x20d9>
  40432f:	mov    rax,QWORD PTR [rbp-0x150]
  404336:	mov    ecx,DWORD PTR [rax]
  404338:	and    ecx,0x8
  40433b:	cmp    ecx,0x0
  40433e:	jne    404349 <main@@Base+0x20d9>
  404344:	jmp    404528 <main@@Base+0x22b8>
  404349:	jmp    404395 <main@@Base+0x2125>
  40434e:	mov    rax,QWORD PTR [rbp-0x150]
  404355:	cmp    DWORD PTR [rax],0x1
  404358:	jne    404390 <main@@Base+0x2120>
  40435e:	mov    rdi,QWORD PTR [rbp-0x150]
  404365:	call   404850 <mmk_matcher_get_predicate@@Base>
  40436a:	mov    QWORD PTR [rbp-0x160],rax
  404371:	mov    rax,QWORD PTR [rbp-0x160]
  404378:	mov    edi,DWORD PTR [rbp-0x8]
  40437b:	call   rax
  40437d:	cmp    eax,0x0
  404380:	jne    40438b <main@@Base+0x211b>
  404386:	jmp    404528 <main@@Base+0x22b8>
  40438b:	jmp    404390 <main@@Base+0x2120>
  404390:	jmp    404395 <main@@Base+0x2125>
  404395:	jmp    40439a <main@@Base+0x212a>
  40439a:	jmp    4043db <main@@Base+0x216b>
  40439f:	lea    rax,[rbp-0x8]
  4043a3:	mov    rcx,QWORD PTR [rbp-0x148]
  4043aa:	add    rcx,0x30
  4043b1:	add    rcx,0x18
  4043b8:	mov    rdi,rax
  4043bb:	mov    rsi,rcx
  4043be:	mov    edx,0x4
  4043c3:	call   405760 <mmk_memcmp@@Base>
  4043c8:	cmp    eax,0x0
  4043cb:	je     4043d6 <main@@Base+0x2166>
  4043d1:	jmp    404528 <main@@Base+0x22b8>
  4043d6:	jmp    4043db <main@@Base+0x216b>
  4043db:	mov    rax,QWORD PTR [rbp-0x148]
  4043e2:	cmp    DWORD PTR [rax+0x14],0x0
  4043e6:	je     404409 <main@@Base+0x2199>
  4043ec:	mov    rax,QWORD PTR [rbp-0x148]
  4043f3:	mov    ecx,DWORD PTR [rax+0x14]
  4043f6:	mov    DWORD PTR [rbp-0x2f4],ecx
  4043fc:	call   402050 <__errno_location@plt>
  404401:	mov    ecx,DWORD PTR [rbp-0x2f4]
  404407:	mov    DWORD PTR [rax],ecx
  404409:	mov    rax,QWORD PTR [rbp-0x148]
  404410:	cmp    QWORD PTR [rax+0x20],0x0
  404415:	je     40447c <main@@Base+0x220c>
  40441b:	mov    rax,QWORD PTR [rbp-0x148]
  404422:	cmp    QWORD PTR [rax+0x18],0x0
  404427:	jne    40447c <main@@Base+0x220c>
  40442d:	jmp    404432 <main@@Base+0x21c2>
  404432:	lea    rax,[rbp-0x50]
  404436:	lea    rcx,[rbp-0x30]
  40443a:	mov    rdx,rax
  40443d:	mov    rsi,QWORD PTR [rcx+0x10]
  404441:	mov    QWORD PTR [rdx+0x10],rsi
  404445:	vmovdqu xmm0,XMMWORD PTR [rcx]
  404449:	vmovdqu XMMWORD PTR [rdx],xmm0
  40444d:	mov    rcx,QWORD PTR [rbp-0x148]
  404454:	mov    rcx,QWORD PTR [rcx+0x20]
  404458:	mov    edi,DWORD PTR [rbp-0x8]
  40445b:	mov    rsi,rax
  40445e:	call   rcx
  404460:	lea    rcx,[rbp-0x30]
  404464:	lea    rdx,[rbp-0x50]
  404468:	mov    DWORD PTR [rbp-0x164],eax
  40446e:	mov    eax,DWORD PTR [rbp-0x164]
  404474:	mov    DWORD PTR [rbp-0x4],eax
  404477:	jmp    40454c <main@@Base+0x22dc>
  40447c:	mov    rax,QWORD PTR [rbp-0x148]
  404483:	cmp    QWORD PTR [rax+0x20],0x0
  404488:	je     4044eb <main@@Base+0x227b>
  40448e:	mov    rax,QWORD PTR [rbp-0x148]
  404495:	cmp    QWORD PTR [rax+0x18],0x0
  40449a:	je     4044eb <main@@Base+0x227b>
  4044a0:	lea    rax,[rbp-0x50]
  4044a4:	lea    rcx,[rbp-0x30]
  4044a8:	mov    rdx,rax
  4044ab:	mov    rsi,QWORD PTR [rcx+0x10]
  4044af:	mov    QWORD PTR [rdx+0x10],rsi
  4044b3:	vmovdqu xmm0,XMMWORD PTR [rcx]
  4044b7:	vmovdqu XMMWORD PTR [rdx],xmm0
  4044bb:	mov    rcx,QWORD PTR [rbp-0x148]
  4044c2:	mov    rcx,QWORD PTR [rcx+0x20]
  4044c6:	mov    edi,DWORD PTR [rbp-0x8]
  4044c9:	mov    rsi,rax
  4044cc:	call   rcx
  4044ce:	lea    rcx,[rbp-0x30]
  4044d2:	lea    rdx,[rbp-0x50]
  4044d6:	mov    rsi,QWORD PTR [rbp-0x148]
  4044dd:	mov    rsi,QWORD PTR [rsi+0x18]
  4044e1:	mov    edi,DWORD PTR [rsi]
  4044e3:	mov    DWORD PTR [rbp-0x4],edi
  4044e6:	jmp    40454c <main@@Base+0x22dc>
  4044eb:	mov    rax,QWORD PTR [rbp-0x148]
  4044f2:	cmp    QWORD PTR [rax+0x18],0x0
  4044f7:	je     404516 <main@@Base+0x22a6>
  4044fd:	lea    rax,[rbp-0x30]
  404501:	mov    rcx,QWORD PTR [rbp-0x148]
  404508:	mov    rcx,QWORD PTR [rcx+0x18]
  40450c:	mov    edx,DWORD PTR [rcx]
  40450e:	mov    DWORD PTR [rbp-0x4],edx
  404511:	jmp    40454c <main@@Base+0x22dc>
  404516:	lea    rax,[rbp-0x30]
  40451a:	mov    ecx,DWORD PTR [rip+0x4bac]        # 4090cc <__bss_start@@Base+0xc>
  404520:	mov    DWORD PTR [rbp-0x4],ecx
  404523:	jmp    40454c <main@@Base+0x22dc>
  404528:	mov    rax,QWORD PTR [rbp-0x140]
  40452f:	mov    rax,QWORD PTR [rax+0x8]
  404533:	mov    QWORD PTR [rbp-0x140],rax
  40453a:	jmp    404239 <main@@Base+0x1fc9>
  40453f:	lea    rax,[rbp-0x30]
  404543:	mov    ecx,DWORD PTR [rip+0x4b83]        # 4090cc <__bss_start@@Base+0xc>
  404549:	mov    DWORD PTR [rbp-0x4],ecx
  40454c:	mov    eax,DWORD PTR [rbp-0x4]
  40454f:	add    rsp,0x300
  404556:	pop    rbp
  404557:	ret    
  404558:	nop    DWORD PTR [rax+rax*1+0x0]
  404560:	push   rbp
  404561:	mov    rbp,rsp
  404564:	sub    rsp,0x50
  404568:	mov    DWORD PTR [rbp-0x8],edi
  40456b:	mov    QWORD PTR [rbp-0x10],rsi
  40456f:	mov    QWORD PTR [rbp-0x18],rdx
  404573:	mov    QWORD PTR [rbp-0x20],rcx
  404577:	cmp    DWORD PTR [rbp-0x8],0x0
  40457b:	jg     40458d <main@@Base+0x231d>
  404581:	mov    DWORD PTR [rbp-0x4],0x0
  404588:	jmp    40468d <main@@Base+0x241d>
  40458d:	movsxd rax,DWORD PTR [rbp-0x8]
  404591:	shl    rax,0x3
  404595:	mov    rdi,rax
  404598:	call   405b70 <mmk_malloc@@Base>
  40459d:	mov    QWORD PTR [rbp-0x28],rax
  4045a1:	mov    DWORD PTR [rbp-0x2c],0x0
  4045a8:	mov    eax,DWORD PTR [rbp-0x2c]
  4045ab:	cmp    eax,DWORD PTR [rbp-0x8]
  4045ae:	jge    404670 <main@@Base+0x2400>
  4045b4:	jmp    4045b9 <main@@Base+0x2349>
  4045b9:	mov    edi,0xc
  4045be:	call   405b70 <mmk_malloc@@Base>
  4045c3:	mov    rcx,QWORD PTR [rbp-0x28]
  4045c7:	movsxd rdx,DWORD PTR [rbp-0x2c]
  4045cb:	mov    QWORD PTR [rcx+rdx*8],rax
  4045cf:	mov    rax,QWORD PTR [rbp-0x28]
  4045d3:	movsxd rcx,DWORD PTR [rbp-0x2c]
  4045d7:	mov    rax,QWORD PTR [rax+rcx*8]
  4045db:	mov    QWORD PTR [rax],0x4
  4045e2:	mov    rax,QWORD PTR [rbp-0x10]
  4045e6:	mov    esi,DWORD PTR [rax]
  4045e8:	cmp    esi,0x28
  4045eb:	mov    QWORD PTR [rbp-0x38],rax
  4045ef:	mov    DWORD PTR [rbp-0x3c],esi
  4045f2:	ja     404614 <main@@Base+0x23a4>
  4045f8:	mov    eax,DWORD PTR [rbp-0x3c]
  4045fb:	movsxd rcx,eax
  4045fe:	mov    rdx,QWORD PTR [rbp-0x38]
  404602:	add    rcx,QWORD PTR [rdx+0x10]
  404606:	add    eax,0x8
  404609:	mov    DWORD PTR [rdx],eax
  40460b:	mov    QWORD PTR [rbp-0x48],rcx
  40460f:	jmp    40462e <main@@Base+0x23be>
  404614:	mov    rax,QWORD PTR [rbp-0x38]
  404618:	mov    rcx,QWORD PTR [rax+0x8]
  40461c:	mov    rdx,rcx
  40461f:	add    rcx,0x8
  404626:	mov    QWORD PTR [rax+0x8],rcx
  40462a:	mov    QWORD PTR [rbp-0x48],rdx
  40462e:	mov    rax,QWORD PTR [rbp-0x48]
  404632:	mov    ecx,DWORD PTR [rax]
  404634:	mov    DWORD PTR [rbp-0x30],ecx
  404637:	mov    rax,QWORD PTR [rbp-0x28]
  40463b:	movsxd rdx,DWORD PTR [rbp-0x2c]
  40463f:	mov    rax,QWORD PTR [rax+rdx*8]
  404643:	add    rax,0x8
  404649:	lea    rdx,[rbp-0x30]
  40464d:	mov    rdi,rax
  404650:	mov    rsi,rdx
  404653:	mov    edx,0x4
  404658:	call   4057a0 <mmk_memcpy@@Base>
  40465d:	jmp    404662 <main@@Base+0x23f2>
  404662:	mov    eax,DWORD PTR [rbp-0x2c]
  404665:	add    eax,0x1
  404668:	mov    DWORD PTR [rbp-0x2c],eax
  40466b:	jmp    4045a8 <main@@Base+0x2338>
  404670:	movsxd rax,DWORD PTR [rbp-0x8]
  404674:	mov    rcx,QWORD PTR [rbp-0x18]
  404678:	mov    QWORD PTR [rcx],rax
  40467b:	mov    rax,QWORD PTR [rbp-0x28]
  40467f:	mov    rcx,QWORD PTR [rbp-0x20]
  404683:	mov    QWORD PTR [rcx],rax
  404686:	mov    DWORD PTR [rbp-0x4],0x1
  40468d:	mov    eax,DWORD PTR [rbp-0x4]
  404690:	add    rsp,0x50
  404694:	pop    rbp
  404695:	ret    
  404696:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004046a0 <mmk_init@@Base>:
  4046a0:	push   rax
  4046a1:	cmp    BYTE PTR [rip+0x4a28],0x0        # 4090d0 <__bss_start@@Base+0x10>
  4046a8:	jne    4046cb <mmk_init@@Base+0x2b>
  4046aa:	call   404ab0 <plt_init_ctx@@Base>
  4046af:	mov    QWORD PTR [rip+0x4a22],rax        # 4090d8 <__bss_start@@Base+0x18>
  4046b6:	cmp    rax,0xffffffffffffffff
  4046ba:	je     4046cd <mmk_init@@Base+0x2d>
  4046bc:	mov    rdi,rax
  4046bf:	call   405ba0 <mmk_init_vital_functions@@Base>
  4046c4:	mov    BYTE PTR [rip+0x4a05],0x1        # 4090d0 <__bss_start@@Base+0x10>
  4046cb:	pop    rax
  4046cc:	ret    
  4046cd:	mov    rax,QWORD PTR [rip+0x4924]        # 408ff8 <stderr@GLIBC_2.2.5>
  4046d4:	mov    rdi,QWORD PTR [rax]
  4046d7:	lea    rsi,[rip+0x192c]        # 40600a <_IO_stdin_used@@Base+0xa>
  4046de:	lea    rdx,[rip+0x1b7c]        # 406261 <_IO_stdin_used@@Base+0x261>
  4046e5:	lea    r8,[rip+0x1bc7]        # 4062b3 <_IO_stdin_used@@Base+0x2b3>
  4046ec:	mov    ecx,0x2d
  4046f1:	xor    eax,eax
  4046f3:	call   4020e0 <fprintf@plt>
  4046f8:	call   402040 <abort@plt>
  4046fd:	nop    DWORD PTR [rax]

0000000000404700 <mmk_plt_ctx@@Base>:
  404700:	push   rax
  404701:	cmp    BYTE PTR [rip+0x49c8],0x0        # 4090d0 <__bss_start@@Base+0x10>
  404708:	je     404713 <mmk_plt_ctx@@Base+0x13>
  40470a:	mov    rax,QWORD PTR [rip+0x49c7]        # 4090d8 <__bss_start@@Base+0x18>
  404711:	pop    rcx
  404712:	ret    
  404713:	mov    rax,QWORD PTR [rip+0x48de]        # 408ff8 <stderr@GLIBC_2.2.5>
  40471a:	mov    rdi,QWORD PTR [rax]
  40471d:	lea    rsi,[rip+0x18e6]        # 40600a <_IO_stdin_used@@Base+0xa>
  404724:	lea    rdx,[rip+0x1b36]        # 406261 <_IO_stdin_used@@Base+0x261>
  40472b:	lea    r8,[rip+0x1b98]        # 4062ca <_IO_stdin_used@@Base+0x2ca>
  404732:	mov    ecx,0x36
  404737:	xor    eax,eax
  404739:	call   4020e0 <fprintf@plt>
  40473e:	call   402040 <abort@plt>
  404743:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40474d:	nop    DWORD PTR [rax]

0000000000404750 <mmk_reset@@Base>:
  404750:	test   rdi,rdi
  404753:	je     40476c <mmk_reset@@Base+0x1c>
  404755:	push   rax
  404756:	call   4053f0 <mmk_ask_ctx@@Base>
  40475b:	mov    rdi,rax
  40475e:	call   405160 <mmk_stub_context@@Base>
  404763:	mov    rdi,rax
  404766:	pop    rax
  404767:	jmp    4049b0 <mmk_mock_destroy_internal@@Base>
  40476c:	ret    
  40476d:	nop    DWORD PTR [rax]

0000000000404770 <mmk_matcher_init@@Base>:
  404770:	push   rbp
  404771:	push   rbx
  404772:	push   rax
  404773:	mov    ebp,edi
  404775:	mov    edi,0x18
  40477a:	call   405b70 <mmk_malloc@@Base>
  40477f:	mov    rbx,rax
  404782:	mov    DWORD PTR [rax],ebp
  404784:	vxorps xmm0,xmm0,xmm0
  404788:	vmovups XMMWORD PTR [rax+0x4],xmm0
  40478d:	mov    DWORD PTR [rax+0x14],0x0
  404794:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4047a0:	mov    QWORD PTR [rax-0x28],rbx
  4047a7:	add    rsp,0x8
  4047ab:	pop    rbx
  4047ac:	pop    rbp
  4047ad:	ret    
  4047ae:	xchg   ax,ax

00000000004047b0 <mmk_matcher_term@@Base>:
  4047b0:	push   rax
  4047b1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4047bd:	mov    QWORD PTR [rax-0x28],0x0
  4047c8:	pop    rax
  4047c9:	ret    
  4047ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004047d0 <mmk_matcher_ctx@@Base>:
  4047d0:	push   rax
  4047d1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4047dd:	mov    rax,QWORD PTR [rax-0x28]
  4047e4:	pop    rcx
  4047e5:	ret    
  4047e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004047f0 <mmk_matcher_add@@Base>:
  4047f0:	push   rbp
  4047f1:	push   r14
  4047f3:	push   rbx
  4047f4:	mov    ebp,esi
  4047f6:	mov    r14d,edi
  4047f9:	mov    edi,0x18
  4047fe:	call   405b70 <mmk_malloc@@Base>
  404803:	mov    rbx,rax
  404806:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404812:	mov    rax,QWORD PTR [rax-0x28]
  404819:	movsxd rcx,ebp
  40481c:	mov    DWORD PTR [rbx],r14d
  40481f:	mov    QWORD PTR [rbx+0x8],rcx
  404823:	mov    QWORD PTR [rbx+0x10],0x0
  40482b:	nop    DWORD PTR [rax+rax*1+0x0]
  404830:	mov    rdx,rax
  404833:	mov    rax,QWORD PTR [rax+0x10]
  404837:	test   rax,rax
  40483a:	je     404842 <mmk_matcher_add@@Base+0x52>
  40483c:	cmp    QWORD PTR [rax+0x8],rcx
  404840:	jb     404830 <mmk_matcher_add@@Base+0x40>
  404842:	mov    QWORD PTR [rbx+0x10],rax
  404846:	mov    QWORD PTR [rdx+0x10],rbx
  40484a:	pop    rbx
  40484b:	pop    r14
  40484d:	pop    rbp
  40484e:	ret    
  40484f:	nop

0000000000404850 <mmk_matcher_get_predicate@@Base>:
  404850:	lea    rax,[rdi+0x18]
  404854:	ret    
  404855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40485f:	nop

0000000000404860 <mmk_mock_create_internal@@Base>:
  404860:	push   rbp
  404861:	push   r15
  404863:	push   r14
  404865:	push   r13
  404867:	push   r12
  404869:	push   rbx
  40486a:	push   rax
  40486b:	mov    r15,rsi
  40486e:	mov    r14,rdi
  404871:	call   4046a0 <mmk_init@@Base>
  404876:	mov    edi,0x28
  40487b:	call   405b70 <mmk_malloc@@Base>
  404880:	test   rax,rax
  404883:	je     40495b <mmk_mock_create_internal@@Base+0xfb>
  404889:	mov    r13,rax
  40488c:	vxorps xmm0,xmm0,xmm0
  404890:	vmovups YMMWORD PTR [rax],ymm0
  404894:	mov    QWORD PTR [rax+0x20],0x0
  40489c:	mov    rdi,r14
  40489f:	mov    esi,0x40
  4048a4:	vzeroupper 
  4048a7:	call   405a80 <mmk_strchr@@Base>
  4048ac:	mov    rbx,rax
  4048af:	test   rax,rax
  4048b2:	je     4048bc <mmk_mock_create_internal@@Base+0x5c>
  4048b4:	mov    rbp,rbx
  4048b7:	sub    rbp,r14
  4048ba:	jmp    4048c7 <mmk_mock_create_internal@@Base+0x67>
  4048bc:	mov    rdi,r14
  4048bf:	call   405b20 <mmk_strlen@@Base>
  4048c4:	mov    rbp,rax
  4048c7:	lea    rdi,[rbp+0x1]
  4048cb:	call   405b70 <mmk_malloc@@Base>
  4048d0:	mov    r12,rax
  4048d3:	mov    rdi,rax
  4048d6:	mov    rsi,r14
  4048d9:	mov    rdx,rbp
  4048dc:	call   405ae0 <mmk_strncpy@@Base>
  4048e1:	mov    BYTE PTR [r12+rbp*1],0x0
  4048e6:	test   rbx,rbx
  4048e9:	je     404909 <mmk_mock_create_internal@@Base+0xa9>
  4048eb:	inc    rbx
  4048ee:	lea    rsi,[rip+0x1a3c]        # 406331 <_IO_stdin_used@@Base+0x331>
  4048f5:	mov    edx,0x4
  4048fa:	mov    rdi,rbx
  4048fd:	call   405a30 <mmk_strneq@@Base>
  404902:	test   eax,eax
  404904:	setne  bl
  404907:	jmp    40490b <mmk_mock_create_internal@@Base+0xab>
  404909:	mov    bl,0x1
  40490b:	mov    rdi,r14
  40490e:	mov    rsi,r15
  404911:	mov    rdx,r13
  404914:	call   405320 <mmk_stub_create@@Base>
  404919:	mov    QWORD PTR [r13+0x8],rax
  40491d:	test   rax,rax
  404920:	je     40498b <mmk_mock_create_internal@@Base+0x12b>
  404922:	test   bl,bl
  404924:	jne    40493c <mmk_mock_create_internal@@Base+0xdc>
  404926:	mov    rdi,r12
  404929:	mov    rsi,r15
  40492c:	mov    rdx,r13
  40492f:	call   405320 <mmk_stub_create@@Base>
  404934:	mov    rcx,QWORD PTR [r13+0x8]
  404938:	mov    QWORD PTR [rcx+0x48],rax
  40493c:	mov    rdi,r12
  40493f:	call   405b90 <mmk_free@@Base>
  404944:	mov    rax,QWORD PTR [r13+0x8]
  404948:	mov    rax,QWORD PTR [rax+0x40]
  40494c:	add    rsp,0x8
  404950:	pop    rbx
  404951:	pop    r12
  404953:	pop    r13
  404955:	pop    r14
  404957:	pop    r15
  404959:	pop    rbp
  40495a:	ret    
  40495b:	mov    rax,QWORD PTR [rip+0x4696]        # 408ff8 <stderr@GLIBC_2.2.5>
  404962:	mov    rdi,QWORD PTR [rax]
  404965:	lea    rsi,[rip+0x169e]        # 40600a <_IO_stdin_used@@Base+0xa>
  40496c:	lea    rdx,[rip+0x1968]        # 4062db <_IO_stdin_used@@Base+0x2db>
  404973:	lea    r8,[rip+0x19b3]        # 40632d <_IO_stdin_used@@Base+0x32d>
  40497a:	mov    ecx,0x24
  40497f:	xor    eax,eax
  404981:	call   4020e0 <fprintf@plt>
  404986:	call   402040 <abort@plt>
  40498b:	mov    rax,QWORD PTR [rip+0x4666]        # 408ff8 <stderr@GLIBC_2.2.5>
  404992:	mov    rdi,QWORD PTR [rax]
  404995:	lea    rsi,[rip+0x199a]        # 406336 <_IO_stdin_used@@Base+0x336>
  40499c:	mov    rdx,r14
  40499f:	xor    eax,eax
  4049a1:	call   4020e0 <fprintf@plt>
  4049a6:	call   402040 <abort@plt>
  4049ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004049b0 <mmk_mock_destroy_internal@@Base>:
  4049b0:	push   r15
  4049b2:	push   r14
  4049b4:	push   r12
  4049b6:	push   rbx
  4049b7:	push   rax
  4049b8:	mov    r14,rdi
  4049bb:	mov    rdi,QWORD PTR [rdi+0x8]
  4049bf:	test   rdi,rdi
  4049c2:	je     4049e1 <mmk_mock_destroy_internal@@Base+0x31>
  4049c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049ce:	xchg   ax,ax
  4049d0:	mov    rbx,QWORD PTR [rdi+0x48]
  4049d4:	call   4053b0 <mmk_stub_destroy@@Base>
  4049d9:	mov    rdi,rbx
  4049dc:	test   rbx,rbx
  4049df:	jne    4049d0 <mmk_mock_destroy_internal@@Base+0x20>
  4049e1:	mov    rdi,QWORD PTR [r14+0x10]
  4049e5:	call   405b90 <mmk_free@@Base>
  4049ea:	mov    r12,QWORD PTR [r14]
  4049ed:	test   r12,r12
  4049f0:	jne    404a10 <mmk_mock_destroy_internal@@Base+0x60>
  4049f2:	jmp    404a33 <mmk_mock_destroy_internal@@Base+0x83>
  4049f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049fe:	xchg   ax,ax
  404a00:	mov    rdi,r12
  404a03:	call   405b90 <mmk_free@@Base>
  404a08:	mov    r12,r15
  404a0b:	test   r15,r15
  404a0e:	je     404a33 <mmk_mock_destroy_internal@@Base+0x83>
  404a10:	mov    rdi,QWORD PTR [r12]
  404a14:	mov    r15,QWORD PTR [r12+0x8]
  404a19:	test   rdi,rdi
  404a1c:	je     404a00 <mmk_mock_destroy_internal@@Base+0x50>
  404a1e:	xchg   ax,ax
  404a20:	mov    rbx,QWORD PTR [rdi+0x10]
  404a24:	call   405b90 <mmk_free@@Base>
  404a29:	mov    rdi,rbx
  404a2c:	test   rbx,rbx
  404a2f:	jne    404a20 <mmk_mock_destroy_internal@@Base+0x70>
  404a31:	jmp    404a00 <mmk_mock_destroy_internal@@Base+0x50>
  404a33:	mov    rdi,r14
  404a36:	add    rsp,0x8
  404a3a:	pop    rbx
  404a3b:	pop    r12
  404a3d:	pop    r14
  404a3f:	pop    r15
  404a41:	jmp    405b90 <mmk_free@@Base>
  404a46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404a50 <mmk_mock_params_begin@@Base>:
  404a50:	mov    rax,QWORD PTR [rdi+0x10]
  404a54:	test   rax,rax
  404a57:	je     404a69 <mmk_mock_params_begin@@Base+0x19>
  404a59:	mov    rcx,QWORD PTR [rdi+0x18]
  404a5d:	add    rax,0x8
  404a61:	test   rcx,rcx
  404a64:	cmove  rax,rcx
  404a68:	ret    
  404a69:	xor    eax,eax
  404a6b:	ret    
  404a6c:	nop    DWORD PTR [rax+0x0]

0000000000404a70 <mmk_mock_params_next@@Base>:
  404a70:	mov    rax,QWORD PTR [rsi-0x8]
  404a74:	lea    rcx,[rax+rsi*1]
  404a78:	add    rcx,0x8
  404a7c:	mov    rdx,QWORD PTR [rdi+0x10]
  404a80:	add    rdx,QWORD PTR [rdi+0x18]
  404a84:	xor    eax,eax
  404a86:	cmp    rcx,rdx
  404a89:	cmovb  rax,rcx
  404a8d:	ret    
  404a8e:	xchg   ax,ax

0000000000404a90 <mmk_mock_get_params@@Base>:
  404a90:	push   rax
  404a91:	call   405300 <mmk_ctx@@Base>
  404a96:	mov    rdi,rax
  404a99:	call   405160 <mmk_stub_context@@Base>
  404a9e:	mov    rax,QWORD PTR [rax]
  404aa1:	pop    rcx
  404aa2:	ret    
  404aa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aad:	nop    DWORD PTR [rax]

0000000000404ab0 <plt_init_ctx@@Base>:
  404ab0:	mov    rax,QWORD PTR [rip+0x4601]        # 4090b8 <__data_start@@Base+0x10>
  404ab7:	cmp    rax,0xffffffffffffffff
  404abb:	je     404abe <plt_init_ctx@@Base+0xe>
  404abd:	ret    
  404abe:	mov    rax,QWORD PTR [rip+0x44fb]        # 408fc0 <_r_debug@GLIBC_2.2.5>
  404ac5:	mov    QWORD PTR [rip+0x45ec],rax        # 4090b8 <__data_start@@Base+0x10>
  404acc:	ret    
  404acd:	nop    DWORD PTR [rax]

0000000000404ad0 <plt_get_lib@@Base>:
  404ad0:	push   rbp
  404ad1:	mov    rbp,rsp
  404ad4:	push   r15
  404ad6:	push   r14
  404ad8:	push   r13
  404ada:	push   r12
  404adc:	push   rbx
  404add:	sub    rsp,0x28
  404ae1:	mov    r14,rdi
  404ae4:	test   rsi,rsi
  404ae7:	lea    rbx,[rip+0x1843]        # 406331 <_IO_stdin_used@@Base+0x331>
  404aee:	cmovne rbx,rsi
  404af2:	lea    rsi,[rip+0x1870]        # 406369 <_IO_stdin_used@@Base+0x369>
  404af9:	mov    edx,0x4
  404afe:	mov    rdi,rbx
  404b01:	call   402060 <strncmp@plt>
  404b06:	test   eax,eax
  404b08:	je     404b61 <plt_get_lib@@Base+0x91>
  404b0a:	lea    rsi,[rip+0x185d]        # 40636e <_IO_stdin_used@@Base+0x36e>
  404b11:	mov    edx,0x5
  404b16:	mov    rdi,rbx
  404b19:	call   402060 <strncmp@plt>
  404b1e:	test   eax,eax
  404b20:	je     404b69 <plt_get_lib@@Base+0x99>
  404b22:	lea    rsi,[rip+0x184b]        # 406374 <_IO_stdin_used@@Base+0x374>
  404b29:	mov    edx,0x4
  404b2e:	mov    rdi,rbx
  404b31:	call   402060 <strncmp@plt>
  404b36:	test   eax,eax
  404b38:	je     404b71 <plt_get_lib@@Base+0xa1>
  404b3a:	lea    rsi,[rip+0x17f0]        # 406331 <_IO_stdin_used@@Base+0x331>
  404b41:	mov    rdi,rbx
  404b44:	call   4020d0 <strcmp@plt>
  404b49:	test   eax,eax
  404b4b:	jne    404cb5 <plt_get_lib@@Base+0x1e5>
  404b51:	xor    r12d,r12d
  404b54:	lea    r15,[rip+0x1862]        # 4063bd <_IO_stdin_used@@Base+0x3bd>
  404b5b:	mov    QWORD PTR [rbp-0x38],r15
  404b5f:	jmp    404b8e <plt_get_lib@@Base+0xbe>
  404b61:	mov    r12d,0x1
  404b67:	jmp    404b77 <plt_get_lib@@Base+0xa7>
  404b69:	mov    r12d,0x2
  404b6f:	jmp    404b77 <plt_get_lib@@Base+0xa7>
  404b71:	mov    r12d,0x3
  404b77:	mov    QWORD PTR [rbp-0x38],rbx
  404b7b:	mov    rdi,rbx
  404b7e:	mov    esi,0x3a
  404b83:	call   402090 <strchr@plt>
  404b88:	mov    r15,rax
  404b8b:	inc    r15
  404b8e:	mov    rdi,r15
  404b91:	call   402070 <strlen@plt>
  404b96:	mov    r13,rax
  404b99:	lea    rsi,[rip+0x1890]        # 406430 <_IO_stdin_used@@Base+0x430>
  404ba0:	mov    QWORD PTR [rbp-0x40],r15
  404ba4:	mov    rdi,r15
  404ba7:	call   4020d0 <strcmp@plt>
  404bac:	mov    DWORD PTR [rbp-0x2c],eax
  404baf:	mov    rbx,QWORD PTR [r14+0x8]
  404bb3:	test   rbx,rbx
  404bb6:	je     404ca1 <plt_get_lib@@Base+0x1d1>
  404bbc:	add    r13,0x8
  404bc0:	lea    rax,[r13+0xf]
  404bc4:	and    rax,0xfffffffffffffff0
  404bc8:	mov    QWORD PTR [rbp-0x48],rax
  404bcc:	cmp    r12d,0x1
  404bd0:	jne    404c50 <plt_get_lib@@Base+0x180>
  404bd2:	jmp    404c08 <plt_get_lib@@Base+0x138>
  404bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bde:	xchg   ax,ax
  404be0:	mov    rsi,QWORD PTR [rbx+0x8]
  404be4:	mov    rdi,QWORD PTR [rbp-0x38]
  404be8:	call   4020d0 <strcmp@plt>
  404bed:	test   eax,eax
  404bef:	je     404ca3 <plt_get_lib@@Base+0x1d3>
  404bf5:	mov    rbx,QWORD PTR [rbx+0x18]
  404bf9:	test   rbx,rbx
  404bfc:	je     404ca1 <plt_get_lib@@Base+0x1d1>
  404c02:	cmp    r12d,0x1
  404c06:	jne    404c50 <plt_get_lib@@Base+0x180>
  404c08:	cmp    DWORD PTR [rbp-0x2c],0x0
  404c0c:	je     404c6f <plt_get_lib@@Base+0x19f>
  404c0e:	mov    r15,rsp
  404c11:	mov    r14,rsp
  404c14:	sub    r14,QWORD PTR [rbp-0x48]
  404c18:	mov    rsp,r14
  404c1b:	mov    rdi,r14
  404c1e:	mov    rsi,r13
  404c21:	lea    rdx,[rip+0x17a8]        # 4063d0 <_IO_stdin_used@@Base+0x3d0>
  404c28:	mov    rcx,QWORD PTR [rbp-0x40]
  404c2c:	xor    eax,eax
  404c2e:	call   4020a0 <snprintf@plt>
  404c33:	mov    rdi,QWORD PTR [rbx+0x8]
  404c37:	mov    rsi,r14
  404c3a:	call   402140 <strstr@plt>
  404c3f:	test   rax,rax
  404c42:	mov    rsp,r15
  404c45:	je     404bf5 <plt_get_lib@@Base+0x125>
  404c47:	jmp    404ca3 <plt_get_lib@@Base+0x1d3>
  404c49:	nop    DWORD PTR [rax+0x0]
  404c50:	test   r12b,0x1
  404c54:	je     404be0 <plt_get_lib@@Base+0x110>
  404c56:	cmp    r12d,0x3
  404c5a:	jne    404bf5 <plt_get_lib@@Base+0x125>
  404c5c:	mov    rdi,rbx
  404c5f:	mov    rsi,QWORD PTR [rbp-0x40]
  404c63:	call   404d20 <plt_get_lib@@Base+0x250>
  404c68:	test   rax,rax
  404c6b:	je     404bf5 <plt_get_lib@@Base+0x125>
  404c6d:	jmp    404ca3 <plt_get_lib@@Base+0x1d3>
  404c6f:	mov    r14,QWORD PTR [rbx+0x8]
  404c73:	mov    rdi,r14
  404c76:	lea    rsi,[rip+0x1741]        # 4063be <_IO_stdin_used@@Base+0x3be>
  404c7d:	call   402140 <strstr@plt>
  404c82:	test   rax,rax
  404c85:	jne    404ca3 <plt_get_lib@@Base+0x1d3>
  404c87:	mov    rdi,r14
  404c8a:	lea    rsi,[rip+0x1736]        # 4063c7 <_IO_stdin_used@@Base+0x3c7>
  404c91:	call   402140 <strstr@plt>
  404c96:	test   rax,rax
  404c99:	je     404bf5 <plt_get_lib@@Base+0x125>
  404c9f:	jmp    404ca3 <plt_get_lib@@Base+0x1d3>
  404ca1:	xor    ebx,ebx
  404ca3:	mov    rax,rbx
  404ca6:	lea    rsp,[rbp-0x28]
  404caa:	pop    rbx
  404cab:	pop    r12
  404cad:	pop    r13
  404caf:	pop    r14
  404cb1:	pop    r15
  404cb3:	pop    rbp
  404cb4:	ret    
  404cb5:	mov    r14,rbx
  404cb8:	mov    rdi,rbx
  404cbb:	mov    esi,0x3a
  404cc0:	call   402090 <strchr@plt>
  404cc5:	test   rax,rax
  404cc8:	jne    404cea <plt_get_lib@@Base+0x21a>
  404cca:	mov    rax,QWORD PTR [rip+0x4327]        # 408ff8 <stderr@GLIBC_2.2.5>
  404cd1:	mov    rdi,QWORD PTR [rax]
  404cd4:	lea    rsi,[rip+0x16c0]        # 40639b <_IO_stdin_used@@Base+0x39b>
  404cdb:	mov    rdx,r14
  404cde:	xor    eax,eax
  404ce0:	call   4020e0 <fprintf@plt>
  404ce5:	call   402040 <abort@plt>
  404cea:	sub    eax,r14d
  404ced:	mov    rcx,QWORD PTR [rip+0x4304]        # 408ff8 <stderr@GLIBC_2.2.5>
  404cf4:	mov    rdi,QWORD PTR [rcx]
  404cf7:	inc    eax
  404cf9:	lea    rsi,[rip+0x1679]        # 406379 <_IO_stdin_used@@Base+0x379>
  404d00:	mov    edx,eax
  404d02:	mov    rcx,r14
  404d05:	xor    eax,eax
  404d07:	call   4020e0 <fprintf@plt>
  404d0c:	call   402040 <abort@plt>
  404d11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d20:	push   rbp
  404d21:	push   r15
  404d23:	push   r14
  404d25:	push   r13
  404d27:	push   r12
  404d29:	push   rbx
  404d2a:	sub    rsp,0x18
  404d2e:	mov    QWORD PTR [rsp+0x10],rsi
  404d33:	mov    rbx,QWORD PTR [rdi]
  404d36:	mov    rax,QWORD PTR [rdi+0x10]
  404d3a:	mov    rcx,QWORD PTR [rax]
  404d3d:	test   rcx,rcx
  404d40:	je     404d64 <plt_get_lib@@Base+0x294>
  404d42:	lea    rdx,[rax+0x10]
  404d46:	xor    r8d,r8d
  404d49:	mov    rsi,rcx
  404d4c:	nop    DWORD PTR [rax+0x0]
  404d50:	cmp    rsi,0x6
  404d54:	je     404d7c <plt_get_lib@@Base+0x2ac>
  404d56:	mov    rsi,QWORD PTR [rdx]
  404d59:	add    rdx,0x10
  404d5d:	test   rsi,rsi
  404d60:	jne    404d50 <plt_get_lib@@Base+0x280>
  404d62:	jmp    404d8d <plt_get_lib@@Base+0x2bd>
  404d64:	xor    eax,eax
  404d66:	mov    QWORD PTR [rsp],rax
  404d6a:	xor    edx,edx
  404d6c:	xor    r8d,r8d
  404d6f:	xor    r9d,r9d
  404d72:	xor    ebp,ebp
  404d74:	xor    r15d,r15d
  404d77:	jmp    404e87 <plt_get_lib@@Base+0x3b7>
  404d7c:	mov    r8,QWORD PTR [rdx-0x8]
  404d80:	cmp    r8,rbx
  404d83:	jb     404d8a <plt_get_lib@@Base+0x2ba>
  404d85:	test   r8,r8
  404d88:	jns    404d8d <plt_get_lib@@Base+0x2bd>
  404d8a:	add    r8,rbx
  404d8d:	lea    rdx,[rax+0x10]
  404d91:	xor    r9d,r9d
  404d94:	mov    rsi,rcx
  404d97:	nop    WORD PTR [rax+rax*1+0x0]
  404da0:	cmp    rsi,0x5
  404da4:	je     404db4 <plt_get_lib@@Base+0x2e4>
  404da6:	mov    rsi,QWORD PTR [rdx]
  404da9:	add    rdx,0x10
  404dad:	test   rsi,rsi
  404db0:	jne    404da0 <plt_get_lib@@Base+0x2d0>
  404db2:	jmp    404dc5 <plt_get_lib@@Base+0x2f5>
  404db4:	mov    r9,QWORD PTR [rdx-0x8]
  404db8:	cmp    r9,rbx
  404dbb:	jb     404dc2 <plt_get_lib@@Base+0x2f2>
  404dbd:	test   r9,r9
  404dc0:	jns    404dc5 <plt_get_lib@@Base+0x2f5>
  404dc2:	add    r9,rbx
  404dc5:	lea    rsi,[rax+0x10]
  404dc9:	xor    edx,edx
  404dcb:	mov    rdi,rcx
  404dce:	xchg   ax,ax
  404dd0:	cmp    rdi,0x14
  404dd4:	je     404de4 <plt_get_lib@@Base+0x314>
  404dd6:	mov    rdi,QWORD PTR [rsi]
  404dd9:	add    rsi,0x10
  404ddd:	test   rdi,rdi
  404de0:	jne    404dd0 <plt_get_lib@@Base+0x300>
  404de2:	jmp    404de8 <plt_get_lib@@Base+0x318>
  404de4:	mov    rdx,QWORD PTR [rsi-0x8]
  404de8:	lea    rsi,[rax+0x10]
  404dec:	xor    ebp,ebp
  404dee:	mov    rdi,rcx
  404df1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	cmp    rdi,0x17
  404e04:	je     404e14 <plt_get_lib@@Base+0x344>
  404e06:	mov    rdi,QWORD PTR [rsi]
  404e09:	add    rsi,0x10
  404e0d:	test   rdi,rdi
  404e10:	jne    404e00 <plt_get_lib@@Base+0x330>
  404e12:	jmp    404e25 <plt_get_lib@@Base+0x355>
  404e14:	mov    rbp,QWORD PTR [rsi-0x8]
  404e18:	cmp    rbp,rbx
  404e1b:	jb     404e22 <plt_get_lib@@Base+0x352>
  404e1d:	test   rbp,rbp
  404e20:	jns    404e25 <plt_get_lib@@Base+0x355>
  404e22:	add    rbp,rbx
  404e25:	lea    rsi,[rax+0x10]
  404e29:	xor    edi,edi
  404e2b:	mov    QWORD PTR [rsp],rdi
  404e2f:	mov    rdi,rcx
  404e32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e3c:	nop    DWORD PTR [rax+0x0]
  404e40:	cmp    rdi,0x2
  404e44:	je     404e54 <plt_get_lib@@Base+0x384>
  404e46:	mov    rdi,QWORD PTR [rsi]
  404e49:	add    rsi,0x10
  404e4d:	test   rdi,rdi
  404e50:	jne    404e40 <plt_get_lib@@Base+0x370>
  404e52:	jmp    404e5c <plt_get_lib@@Base+0x38c>
  404e54:	mov    rsi,QWORD PTR [rsi-0x8]
  404e58:	mov    QWORD PTR [rsp],rsi
  404e5c:	lea    rsi,[rdx+0x2]
  404e60:	add    rax,0x10
  404e64:	xor    r15d,r15d
  404e67:	nop    WORD PTR [rax+rax*1+0x0]
  404e70:	cmp    rcx,rsi
  404e73:	je     404e83 <plt_get_lib@@Base+0x3b3>
  404e75:	mov    rcx,QWORD PTR [rax]
  404e78:	add    rax,0x10
  404e7c:	test   rcx,rcx
  404e7f:	jne    404e70 <plt_get_lib@@Base+0x3a0>
  404e81:	jmp    404e87 <plt_get_lib@@Base+0x3b7>
  404e83:	mov    r15,QWORD PTR [rax-0x8]
  404e87:	xor    eax,eax
  404e89:	test   r15,r15
  404e8c:	je     404f3e <plt_get_lib@@Base+0x46e>
  404e92:	cmp    QWORD PTR [rsp],0x0
  404e97:	je     404f3e <plt_get_lib@@Base+0x46e>
  404e9d:	test   rbp,rbp
  404ea0:	je     404f3e <plt_get_lib@@Base+0x46e>
  404ea6:	test   rdx,rdx
  404ea9:	je     404f3e <plt_get_lib@@Base+0x46e>
  404eaf:	test   r8,r8
  404eb2:	je     404f3e <plt_get_lib@@Base+0x46e>
  404eb8:	test   r9,r9
  404ebb:	je     404f3e <plt_get_lib@@Base+0x46e>
  404ec1:	mov    QWORD PTR [rsp+0x8],rbx
  404ec6:	cmp    r15,QWORD PTR [rsp]
  404eca:	ja     404f3c <plt_get_lib@@Base+0x46c>
  404ecc:	add    rbp,0x8
  404ed0:	xor    r14d,r14d
  404ed3:	mov    rbx,QWORD PTR [rsp]
  404ed7:	or     rbx,r15
  404eda:	shr    rbx,0x20
  404ede:	jmp    404ef7 <plt_get_lib@@Base+0x427>
  404ee0:	mov    rax,QWORD PTR [rsp]
  404ee4:	xor    edx,edx
  404ee6:	div    r15
  404ee9:	mov    r8,r13
  404eec:	mov    r9,r12
  404eef:	add    rbp,r15
  404ef2:	cmp    r14,rax
  404ef5:	jae    404f3c <plt_get_lib@@Base+0x46c>
  404ef7:	mov    eax,DWORD PTR [rbp+0x4]
  404efa:	lea    rax,[rax+rax*2]
  404efe:	mov    r13,r8
  404f01:	mov    edi,DWORD PTR [r8+rax*8]
  404f05:	mov    r12,r9
  404f08:	add    rdi,r9
  404f0b:	mov    rsi,QWORD PTR [rsp+0x10]
  404f10:	call   4020d0 <strcmp@plt>
  404f15:	test   eax,eax
  404f17:	je     404f2c <plt_get_lib@@Base+0x45c>
  404f19:	inc    r14
  404f1c:	test   rbx,rbx
  404f1f:	jne    404ee0 <plt_get_lib@@Base+0x410>
  404f21:	mov    rax,QWORD PTR [rsp]
  404f25:	xor    edx,edx
  404f27:	div    r15d
  404f2a:	jmp    404ee9 <plt_get_lib@@Base+0x419>
  404f2c:	mov    rax,QWORD PTR [rbp-0x8]
  404f30:	test   rax,rax
  404f33:	je     404f3c <plt_get_lib@@Base+0x46c>
  404f35:	add    rax,QWORD PTR [rsp+0x8]
  404f3a:	jmp    404f3e <plt_get_lib@@Base+0x46e>
  404f3c:	xor    eax,eax
  404f3e:	add    rsp,0x18
  404f42:	pop    rbx
  404f43:	pop    r12
  404f45:	pop    r13
  404f47:	pop    r14
  404f49:	pop    r15
  404f4b:	pop    rbp
  404f4c:	ret    
  404f4d:	nop    DWORD PTR [rax]

0000000000404f50 <plt_get_offsets@@Base>:
  404f50:	push   r14
  404f52:	push   rbx
  404f53:	push   rax
  404f54:	mov    r14,rdx
  404f57:	call   404d20 <plt_get_lib@@Base+0x250>
  404f5c:	test   rax,rax
  404f5f:	je     404f82 <plt_get_offsets@@Base+0x32>
  404f61:	mov    rbx,rax
  404f64:	mov    edi,0x10
  404f69:	call   405b70 <mmk_malloc@@Base>
  404f6e:	mov    QWORD PTR [r14],0x1
  404f75:	mov    QWORD PTR [rax],rbx
  404f78:	mov    QWORD PTR [rax+0x8],0x0
  404f80:	jmp    404f84 <plt_get_offsets@@Base+0x34>
  404f82:	xor    eax,eax
  404f84:	add    rsp,0x8
  404f88:	pop    rbx
  404f89:	pop    r14
  404f8b:	ret    
  404f8c:	nop    DWORD PTR [rax+0x0]

0000000000404f90 <plt_set_offsets@@Base>:
  404f90:	test   rsi,rsi
  404f93:	je     405038 <plt_set_offsets@@Base+0xa8>
  404f99:	mov    r8d,esi
  404f9c:	and    r8d,0x1
  404fa0:	cmp    rsi,0x1
  404fa4:	jne    404fab <plt_set_offsets@@Base+0x1b>
  404fa6:	xor    r10d,r10d
  404fa9:	jmp    40500a <plt_set_offsets@@Base+0x7a>
  404fab:	sub    rsi,r8
  404fae:	lea    rcx,[rdi+0x18]
  404fb2:	xor    r10d,r10d
  404fb5:	cmp    QWORD PTR [rcx-0x10],0x0
  404fba:	jne    404fe1 <plt_set_offsets@@Base+0x51>
  404fbc:	jmp    404ff0 <plt_set_offsets@@Base+0x60>
  404fbe:	xchg   ax,ax
  404fc0:	mov    r9,QWORD PTR [rcx-0x8]
  404fc4:	mov    rax,QWORD PTR [r9]
  404fc7:	mov    QWORD PTR [rcx],rax
  404fca:	mov    QWORD PTR [r9],rdx
  404fcd:	add    r10,0x2
  404fd1:	add    rcx,0x20
  404fd5:	cmp    rsi,r10
  404fd8:	je     40500a <plt_set_offsets@@Base+0x7a>
  404fda:	cmp    QWORD PTR [rcx-0x10],0x0
  404fdf:	je     404ff0 <plt_set_offsets@@Base+0x60>
  404fe1:	mov    r9,QWORD PTR [rcx-0x18]
  404fe5:	jmp    404ffb <plt_set_offsets@@Base+0x6b>
  404fe7:	nop    WORD PTR [rax+rax*1+0x0]
  404ff0:	mov    r9,QWORD PTR [rcx-0x18]
  404ff4:	mov    rax,QWORD PTR [r9]
  404ff7:	mov    QWORD PTR [rcx-0x10],rax
  404ffb:	mov    QWORD PTR [r9],rdx
  404ffe:	cmp    QWORD PTR [rcx],0x0
  405002:	je     404fc0 <plt_set_offsets@@Base+0x30>
  405004:	mov    r9,QWORD PTR [rcx-0x8]
  405008:	jmp    404fca <plt_set_offsets@@Base+0x3a>
  40500a:	test   r8,r8
  40500d:	je     405038 <plt_set_offsets@@Base+0xa8>
  40500f:	shl    r10,0x4
  405013:	lea    rcx,[rdi+r10*1]
  405017:	cmp    QWORD PTR [rdi+r10*1+0x8],0x0
  40501d:	je     405024 <plt_set_offsets@@Base+0x94>
  40501f:	mov    rax,QWORD PTR [rcx]
  405022:	jmp    405035 <plt_set_offsets@@Base+0xa5>
  405024:	lea    rsi,[rdi+r10*1]
  405028:	add    rsi,0x8
  40502c:	mov    rax,QWORD PTR [rcx]
  40502f:	mov    rcx,QWORD PTR [rax]
  405032:	mov    QWORD PTR [rsi],rcx
  405035:	mov    QWORD PTR [rax],rdx
  405038:	ret    
  405039:	nop    DWORD PTR [rax+0x0]

0000000000405040 <plt_reset_offsets@@Base>:
  405040:	test   rsi,rsi
  405043:	je     405103 <plt_reset_offsets@@Base+0xc3>
  405049:	lea    rcx,[rsi-0x1]
  40504d:	mov    r9d,esi
  405050:	and    r9d,0x7
  405054:	cmp    rcx,0x7
  405058:	jae    405066 <plt_reset_offsets@@Base+0x26>
  40505a:	xor    ecx,ecx
  40505c:	test   r9,r9
  40505f:	jne    4050d9 <plt_reset_offsets@@Base+0x99>
  405061:	jmp    405103 <plt_reset_offsets@@Base+0xc3>
  405066:	sub    rsi,r9
  405069:	lea    rdx,[rdi+0x78]
  40506d:	xor    ecx,ecx
  40506f:	nop
  405070:	mov    r8,QWORD PTR [rdx-0x78]
  405074:	mov    rax,QWORD PTR [rdx-0x70]
  405078:	mov    QWORD PTR [r8],rax
  40507b:	mov    r8,QWORD PTR [rdx-0x68]
  40507f:	mov    rax,QWORD PTR [rdx-0x60]
  405083:	mov    QWORD PTR [r8],rax
  405086:	mov    r8,QWORD PTR [rdx-0x58]
  40508a:	mov    rax,QWORD PTR [rdx-0x50]
  40508e:	mov    QWORD PTR [r8],rax
  405091:	mov    r8,QWORD PTR [rdx-0x48]
  405095:	mov    rax,QWORD PTR [rdx-0x40]
  405099:	mov    QWORD PTR [r8],rax
  40509c:	mov    r8,QWORD PTR [rdx-0x38]
  4050a0:	mov    rax,QWORD PTR [rdx-0x30]
  4050a4:	mov    QWORD PTR [r8],rax
  4050a7:	mov    r8,QWORD PTR [rdx-0x28]
  4050ab:	mov    rax,QWORD PTR [rdx-0x20]
  4050af:	mov    QWORD PTR [r8],rax
  4050b2:	mov    r8,QWORD PTR [rdx-0x18]
  4050b6:	mov    rax,QWORD PTR [rdx-0x10]
  4050ba:	mov    QWORD PTR [r8],rax
  4050bd:	mov    r8,QWORD PTR [rdx-0x8]
  4050c1:	mov    rax,QWORD PTR [rdx]
  4050c4:	mov    QWORD PTR [r8],rax
  4050c7:	add    rcx,0x8
  4050cb:	sub    rdx,0xffffffffffffff80
  4050cf:	cmp    rsi,rcx
  4050d2:	jne    405070 <plt_reset_offsets@@Base+0x30>
  4050d4:	test   r9,r9
  4050d7:	je     405103 <plt_reset_offsets@@Base+0xc3>
  4050d9:	shl    rcx,0x4
  4050dd:	add    rcx,rdi
  4050e0:	add    rcx,0x8
  4050e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ee:	xchg   ax,ax
  4050f0:	mov    rdx,QWORD PTR [rcx-0x8]
  4050f4:	mov    rsi,QWORD PTR [rcx]
  4050f7:	mov    QWORD PTR [rdx],rsi
  4050fa:	add    rcx,0x10
  4050fe:	dec    r9
  405101:	jne    4050f0 <plt_reset_offsets@@Base+0xb0>
  405103:	ret    
  405104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40510e:	xchg   ax,ax

0000000000405110 <plt_get_real_fn@@Base>:
  405110:	push   r15
  405112:	push   r14
  405114:	push   rbx
  405115:	mov    rbx,QWORD PTR [rdi+0x8]
  405119:	test   rbx,rbx
  40511c:	je     40514b <plt_get_real_fn@@Base+0x3b>
  40511e:	mov    r15,rsi
  405121:	xor    r14d,r14d
  405124:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40512e:	xchg   ax,ax
  405130:	mov    rdi,rbx
  405133:	mov    rsi,r15
  405136:	call   404d20 <plt_get_lib@@Base+0x250>
  40513b:	test   rax,rax
  40513e:	jne    405150 <plt_get_real_fn@@Base+0x40>
  405140:	mov    rbx,QWORD PTR [rbx+0x18]
  405144:	test   rbx,rbx
  405147:	jne    405130 <plt_get_real_fn@@Base+0x20>
  405149:	jmp    405153 <plt_get_real_fn@@Base+0x43>
  40514b:	xor    r14d,r14d
  40514e:	jmp    405153 <plt_get_real_fn@@Base+0x43>
  405150:	mov    r14,QWORD PTR [rax]
  405153:	mov    rax,r14
  405156:	pop    rbx
  405157:	pop    r14
  405159:	pop    r15
  40515b:	ret    
  40515c:	nop    DWORD PTR [rax+0x0]

0000000000405160 <mmk_stub_context@@Base>:
  405160:	test   rdi,rdi
  405163:	je     40516a <mmk_stub_context@@Base+0xa>
  405165:	mov    rax,QWORD PTR [rdi+0x18]
  405169:	ret    
  40516a:	xor    eax,eax
  40516c:	ret    
  40516d:	nop    DWORD PTR [rax]

0000000000405170 <mmk_stub_create_static@@Base>:
  405170:	push   rbp
  405171:	push   r15
  405173:	push   r14
  405175:	push   r13
  405177:	push   r12
  405179:	push   rbx
  40517a:	push   rax
  40517b:	mov    r15,rcx
  40517e:	mov    r14,rdx
  405181:	mov    rbx,rsi
  405184:	mov    r12,rdi
  405187:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405193:	mov    BYTE PTR [rax-0x20],0x0
  40519a:	mov    QWORD PTR [rax-0x18],0x0
  4051a5:	mov    rdi,rbx
  4051a8:	call   405b20 <mmk_strlen@@Base>
  4051ad:	lea    rdi,[rax+0x1]
  4051b1:	call   405b70 <mmk_malloc@@Base>
  4051b6:	test   rax,rax
  4051b9:	je     4051e6 <mmk_stub_create_static@@Base+0x76>
  4051bb:	mov    r13,rax
  4051be:	mov    rdi,rax
  4051c1:	mov    rsi,rbx
  4051c4:	call   405ab0 <mmk_strcpy@@Base>
  4051c9:	mov    rdi,r13
  4051cc:	mov    esi,0x40
  4051d1:	call   405a80 <mmk_strchr@@Base>
  4051d6:	test   rax,rax
  4051d9:	je     4051f0 <mmk_stub_create_static@@Base+0x80>
  4051db:	mov    rbx,rax
  4051de:	mov    BYTE PTR [rax],0x0
  4051e1:	inc    rbx
  4051e4:	jmp    4051f2 <mmk_stub_create_static@@Base+0x82>
  4051e6:	mov    eax,0xfffffff4
  4051eb:	jmp    4052a6 <mmk_stub_create_static@@Base+0x136>
  4051f0:	xor    ebx,ebx
  4051f2:	call   404700 <mmk_plt_ctx@@Base>
  4051f7:	mov    rdi,rax
  4051fa:	mov    rsi,rbx
  4051fd:	call   404ad0 <plt_get_lib@@Base>
  405202:	test   rax,rax
  405205:	je     4052a1 <mmk_stub_create_static@@Base+0x131>
  40520b:	mov    QWORD PTR [rsp],0x0
  405213:	mov    rdx,rsp
  405216:	mov    rdi,rax
  405219:	mov    rsi,r13
  40521c:	call   404f50 <plt_get_offsets@@Base>
  405221:	mov    rbp,rax
  405224:	mov    eax,0xfffffffe
  405229:	test   rbp,rbp
  40522c:	je     4052a6 <mmk_stub_create_static@@Base+0x136>
  40522e:	mov    rcx,QWORD PTR [rsp]
  405232:	test   rcx,rcx
  405235:	je     4052a6 <mmk_stub_create_static@@Base+0x136>
  405237:	lea    rax,[rip+0x82]        # 4052c0 <mmk_ctx_asked@@Base>
  40523e:	mov    QWORD PTR [r12],rax
  405242:	lea    rax,[rip+0x97]        # 4052e0 <mmk_set_ctx@@Base>
  405249:	mov    QWORD PTR [r12+0x8],rax
  40524e:	lea    rax,[rip+0xab]        # 405300 <mmk_ctx@@Base>
  405255:	mov    QWORD PTR [r12+0x10],rax
  40525a:	mov    QWORD PTR [r12+0x18],r15
  40525f:	mov    QWORD PTR [r12+0x20],r13
  405264:	mov    QWORD PTR [r12+0x28],rbx
  405269:	mov    QWORD PTR [r12+0x30],rbp
  40526e:	mov    QWORD PTR [r12+0x38],rcx
  405273:	vxorps xmm0,xmm0,xmm0
  405277:	vmovups XMMWORD PTR [r12+0x40],xmm0
  40527e:	mov    rdi,r12
  405281:	mov    rsi,r14
  405284:	call   405410 <create_trampoline@@Base>
  405289:	mov    QWORD PTR [r12+0x40],rax
  40528e:	mov    rsi,QWORD PTR [rsp]
  405292:	mov    rdi,rbp
  405295:	mov    rdx,rax
  405298:	call   404f90 <plt_set_offsets@@Base>
  40529d:	xor    eax,eax
  40529f:	jmp    4052a6 <mmk_stub_create_static@@Base+0x136>
  4052a1:	mov    eax,0xfffffffe
  4052a6:	add    rsp,0x8
  4052aa:	pop    rbx
  4052ab:	pop    r12
  4052ad:	pop    r13
  4052af:	pop    r14
  4052b1:	pop    r15
  4052b3:	pop    rbp
  4052b4:	ret    
  4052b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052bf:	nop

00000000004052c0 <mmk_ctx_asked@@Base>:
  4052c0:	push   rax
  4052c1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4052cd:	movzx  ecx,BYTE PTR [rax-0x20]
  4052d4:	mov    BYTE PTR [rax-0x20],0x0
  4052db:	mov    eax,ecx
  4052dd:	pop    rcx
  4052de:	ret    
  4052df:	nop

00000000004052e0 <mmk_set_ctx@@Base>:
  4052e0:	push   rbx
  4052e1:	mov    rbx,rdi
  4052e4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4052f0:	mov    QWORD PTR [rax-0x18],rbx
  4052f7:	pop    rbx
  4052f8:	ret    
  4052f9:	nop    DWORD PTR [rax+0x0]

0000000000405300 <mmk_ctx@@Base>:
  405300:	push   rax
  405301:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40530d:	mov    rax,QWORD PTR [rax-0x18]
  405314:	pop    rcx
  405315:	ret    
  405316:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405320 <mmk_stub_create@@Base>:
  405320:	push   rbp
  405321:	push   r15
  405323:	push   r14
  405325:	push   rbx
  405326:	push   rax
  405327:	mov    r14,rdx
  40532a:	mov    r15,rsi
  40532d:	mov    rbp,rdi
  405330:	call   4046a0 <mmk_init@@Base>
  405335:	mov    edi,0x50
  40533a:	call   405b70 <mmk_malloc@@Base>
  40533f:	mov    rbx,rax
  405342:	mov    rdi,rax
  405345:	mov    rsi,rbp
  405348:	mov    rdx,r15
  40534b:	mov    rcx,r14
  40534e:	call   405170 <mmk_stub_create_static@@Base>
  405353:	test   eax,eax
  405355:	jns    40536a <mmk_stub_create@@Base+0x4a>
  405357:	mov    ebp,eax
  405359:	mov    rdi,rbx
  40535c:	call   405b90 <mmk_free@@Base>
  405361:	call   402050 <__errno_location@plt>
  405366:	mov    DWORD PTR [rax],ebp
  405368:	xor    ebx,ebx
  40536a:	mov    rax,rbx
  40536d:	add    rsp,0x8
  405371:	pop    rbx
  405372:	pop    r14
  405374:	pop    r15
  405376:	pop    rbp
  405377:	ret    
  405378:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405380 <mmk_stub_destroy_static@@Base>:
  405380:	push   rbx
  405381:	mov    rbx,rdi
  405384:	mov    rdi,QWORD PTR [rdi+0x30]
  405388:	mov    rsi,QWORD PTR [rbx+0x38]
  40538c:	call   405040 <plt_reset_offsets@@Base>
  405391:	mov    rdi,QWORD PTR [rbx+0x30]
  405395:	call   405b90 <mmk_free@@Base>
  40539a:	mov    rdi,QWORD PTR [rbx+0x40]
  40539e:	call   405500 <destroy_trampoline@@Base>
  4053a3:	mov    rdi,QWORD PTR [rbx+0x20]
  4053a7:	pop    rbx
  4053a8:	jmp    405b90 <mmk_free@@Base>
  4053ad:	nop    DWORD PTR [rax]

00000000004053b0 <mmk_stub_destroy@@Base>:
  4053b0:	push   rbx
  4053b1:	mov    rbx,rdi
  4053b4:	mov    rdi,QWORD PTR [rdi+0x30]
  4053b8:	mov    rsi,QWORD PTR [rbx+0x38]
  4053bc:	call   405040 <plt_reset_offsets@@Base>
  4053c1:	mov    rdi,QWORD PTR [rbx+0x30]
  4053c5:	call   405b90 <mmk_free@@Base>
  4053ca:	mov    rdi,QWORD PTR [rbx+0x40]
  4053ce:	call   405500 <destroy_trampoline@@Base>
  4053d3:	mov    rdi,QWORD PTR [rbx+0x20]
  4053d7:	call   405b90 <mmk_free@@Base>
  4053dc:	mov    rdi,rbx
  4053df:	pop    rbx
  4053e0:	jmp    405b90 <mmk_free@@Base>
  4053e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053ef:	nop

00000000004053f0 <mmk_ask_ctx@@Base>:
  4053f0:	push   rbx
  4053f1:	mov    rbx,rdi
  4053f4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405400:	mov    BYTE PTR [rax-0x20],0x1
  405407:	mov    rax,rbx
  40540a:	pop    rbx
  40540b:	jmp    rax
  40540d:	nop    DWORD PTR [rax]

0000000000405410 <create_trampoline@@Base>:
  405410:	push   r15
  405412:	push   r14
  405414:	push   r12
  405416:	push   rbx
  405417:	push   rax
  405418:	lea    r12,[rip+0x9c1]        # 405de0 <mmk_trampoline_end@@Base>
  40541f:	mov    rax,r12
  405422:	sub    rax,QWORD PTR [rip+0x3bb7]        # 408fe0 <mmk_trampoline@@Base+0x32dc>
  405429:	cmp    rax,0x1000
  40542f:	jae    4054a6 <create_trampoline@@Base+0x96>
  405431:	mov    r14,rsi
  405434:	mov    r15,rdi
  405437:	mov    esi,0x1000
  40543c:	mov    edi,0x0
  405441:	mov    edx,0x7
  405446:	mov    ecx,0x22
  40544b:	mov    r8d,0xffffffff
  405451:	xor    r9d,r9d
  405454:	call   402080 <mmap@plt>
  405459:	cmp    rax,0xffffffffffffffff
  40545d:	je     4054cc <create_trampoline@@Base+0xbc>
  40545f:	mov    rbx,rax
  405462:	mov    QWORD PTR [rax],r15
  405465:	mov    QWORD PTR [rax+0x8],r14
  405469:	mov    r14,rax
  40546c:	add    r14,0x10
  405470:	lea    rsi,[rip+0x88d]        # 405d04 <mmk_trampoline@@Base>
  405477:	sub    r12,rsi
  40547a:	mov    rdi,r14
  40547d:	mov    rdx,r12
  405480:	call   4020f0 <memcpy@plt>
  405485:	mov    esi,0x1000
  40548a:	mov    rdi,rbx
  40548d:	mov    edx,0x5
  405492:	call   402130 <mprotect@plt>
  405497:	mov    rax,r14
  40549a:	add    rsp,0x8
  40549e:	pop    rbx
  40549f:	pop    r12
  4054a1:	pop    r14
  4054a3:	pop    r15
  4054a5:	ret    
  4054a6:	mov    rax,QWORD PTR [rip+0x3b4b]        # 408ff8 <stderr@GLIBC_2.2.5>
  4054ad:	mov    rdi,QWORD PTR [rax]
  4054b0:	lea    rsi,[rip+0xb53]        # 40600a <_IO_stdin_used@@Base+0xa>
  4054b7:	lea    rdx,[rip+0xf1c]        # 4063da <_IO_stdin_used@@Base+0x3da>
  4054be:	lea    r8,[rip+0xf6d]        # 406432 <_IO_stdin_used@@Base+0x432>
  4054c5:	mov    ecx,0x2d
  4054ca:	jmp    4054f0 <create_trampoline@@Base+0xe0>
  4054cc:	mov    rax,QWORD PTR [rip+0x3b25]        # 408ff8 <stderr@GLIBC_2.2.5>
  4054d3:	mov    rdi,QWORD PTR [rax]
  4054d6:	lea    rsi,[rip+0xb2d]        # 40600a <_IO_stdin_used@@Base+0xa>
  4054dd:	lea    rdx,[rip+0xef6]        # 4063da <_IO_stdin_used@@Base+0x3da>
  4054e4:	lea    r8,[rip+0xf61]        # 40644c <_IO_stdin_used@@Base+0x44c>
  4054eb:	mov    ecx,0x45
  4054f0:	xor    eax,eax
  4054f2:	call   4020e0 <fprintf@plt>
  4054f7:	call   402040 <abort@plt>
  4054fc:	nop    DWORD PTR [rax+0x0]

0000000000405500 <destroy_trampoline@@Base>:
  405500:	add    rdi,0xfffffffffffffff0
  405504:	mov    esi,0x1000
  405509:	jmp    402120 <munmap@plt>
  40550e:	xchg   ax,ax

0000000000405510 <mmk_verify_set_times@@Base>:
  405510:	push   rbx
  405511:	mov    rbx,rdi
  405514:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405520:	mov    QWORD PTR [rax-0x10],rbx
  405527:	pop    rbx
  405528:	ret    
  405529:	nop    DWORD PTR [rax+0x0]

0000000000405530 <mmk_verify_times@@Base>:
  405530:	push   rbx
  405531:	mov    rbx,rdi
  405534:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405540:	mov    rdi,QWORD PTR [rax-0x10]
  405547:	cmp    DWORD PTR [rbx+0x4],0x0
  40554b:	je     405557 <mmk_verify_times@@Base+0x27>
  40554d:	xor    eax,eax
  40554f:	test   rdi,rdi
  405552:	sete   al
  405555:	pop    rbx
  405556:	ret    
  405557:	mov    rcx,QWORD PTR [rbx+0x8]
  40555b:	mov    rax,QWORD PTR [rbx+0x10]
  40555f:	mov    rdx,rcx
  405562:	or     rdx,rax
  405565:	je     405581 <mmk_verify_times@@Base+0x51>
  405567:	test   rax,rax
  40556a:	cmove  rax,rdi
  40556e:	cmp    rdi,rcx
  405571:	setae  cl
  405574:	cmp    rdi,rax
  405577:	setbe  al
  40557a:	and    al,cl
  40557c:	movzx  eax,al
  40557f:	pop    rbx
  405580:	ret    
  405581:	mov    rax,QWORD PTR [rbx+0x20]
  405585:	test   rax,rax
  405588:	je     40558d <mmk_verify_times@@Base+0x5d>
  40558a:	pop    rbx
  40558b:	jmp    rax
  40558d:	xor    eax,eax
  40558f:	cmp    QWORD PTR [rbx+0x18],rdi
  405593:	jmp    405552 <mmk_verify_times@@Base+0x22>
  405595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40559f:	nop

00000000004055a0 <mmk_verify_register_call@@Base>:
  4055a0:	push   rbp
  4055a1:	push   r15
  4055a3:	push   r14
  4055a5:	push   r13
  4055a7:	push   r12
  4055a9:	push   rbx
  4055aa:	sub    rsp,0x18
  4055ae:	mov    r12,rsi
  4055b1:	mov    QWORD PTR [rsp+0x10],rdi
  4055b6:	mov    QWORD PTR [rsp+0x8],rsi
  4055bb:	call   405300 <mmk_ctx@@Base>
  4055c0:	mov    rdi,rax
  4055c3:	call   405160 <mmk_stub_context@@Base>
  4055c8:	mov    r15,rax
  4055cb:	mov    r13,rax
  4055ce:	cmp    QWORD PTR [rax+0x10],0x0
  4055d3:	jne    4055f4 <mmk_verify_register_call@@Base+0x54>
  4055d5:	mov    edi,0x1000
  4055da:	call   405b70 <mmk_malloc@@Base>
  4055df:	mov    QWORD PTR [r13+0x10],rax
  4055e3:	test   rax,rax
  4055e6:	je     405700 <mmk_verify_register_call@@Base+0x160>
  4055ec:	mov    QWORD PTR [r13+0x20],0x1000
  4055f4:	mov    rdi,r13
  4055f7:	call   404a50 <mmk_mock_params_begin@@Base>
  4055fc:	test   rax,rax
  4055ff:	je     40564a <mmk_verify_register_call@@Base+0xaa>
  405601:	mov    rbx,rax
  405604:	mov    rax,QWORD PTR [rsp+0x10]
  405609:	lea    rbp,[rax+0x8]
  40560d:	lea    r14,[r12-0x8]
  405612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40561c:	nop    DWORD PTR [rax+0x0]
  405620:	lea    rdi,[rbx+0x8]
  405624:	mov    rsi,rbp
  405627:	mov    rdx,r14
  40562a:	call   405760 <mmk_memcmp@@Base>
  40562f:	test   eax,eax
  405631:	je     4056e0 <mmk_verify_register_call@@Base+0x140>
  405637:	mov    rdi,r13
  40563a:	mov    rsi,rbx
  40563d:	call   404a70 <mmk_mock_params_next@@Base>
  405642:	mov    rbx,rax
  405645:	test   rax,rax
  405648:	jne    405620 <mmk_verify_register_call@@Base+0x80>
  40564a:	add    r15,0x18
  40564e:	mov    rdi,QWORD PTR [r13+0x18]
  405652:	mov    rsi,QWORD PTR [r13+0x20]
  405656:	lea    rax,[rdi+r12*1]
  40565a:	add    rax,0x8
  40565e:	cmp    rax,rsi
  405661:	jae    405670 <mmk_verify_register_call@@Base+0xd0>
  405663:	mov    rax,QWORD PTR [r13+0x10]
  405667:	jmp    405699 <mmk_verify_register_call@@Base+0xf9>
  405669:	nop    DWORD PTR [rax+0x0]
  405670:	add    rsi,0x1000
  405677:	cmp    rax,rsi
  40567a:	jae    405670 <mmk_verify_register_call@@Base+0xd0>
  40567c:	mov    QWORD PTR [r13+0x20],rsi
  405680:	mov    rdi,QWORD PTR [r13+0x10]
  405684:	call   405b80 <mmk_realloc@@Base>
  405689:	mov    QWORD PTR [r13+0x10],rax
  40568d:	test   rax,rax
  405690:	je     405726 <mmk_verify_register_call@@Base+0x186>
  405696:	mov    rdi,QWORD PTR [r15]
  405699:	add    rdi,rax
  40569c:	lea    rsi,[rsp+0x8]
  4056a1:	mov    edx,0x8
  4056a6:	call   4057a0 <mmk_memcpy@@Base>
  4056ab:	mov    rax,QWORD PTR [r13+0x10]
  4056af:	mov    rcx,QWORD PTR [r13+0x18]
  4056b3:	lea    rdi,[rax+rcx*1]
  4056b7:	add    rdi,0x8
  4056bb:	mov    rdx,QWORD PTR [rsp+0x8]
  4056c0:	mov    rsi,QWORD PTR [rsp+0x10]
  4056c5:	call   4057a0 <mmk_memcpy@@Base>
  4056ca:	mov    QWORD PTR [rax],0x1
  4056d1:	mov    rax,QWORD PTR [rsp+0x8]
  4056d6:	add    rax,0x8
  4056da:	mov    rcx,QWORD PTR [r13+0x18]
  4056de:	jmp    4056eb <mmk_verify_register_call@@Base+0x14b>
  4056e0:	mov    rax,QWORD PTR [rbx]
  4056e3:	mov    ecx,0x1
  4056e8:	mov    r15,rbx
  4056eb:	add    rcx,rax
  4056ee:	mov    QWORD PTR [r15],rcx
  4056f1:	add    rsp,0x18
  4056f5:	pop    rbx
  4056f6:	pop    r12
  4056f8:	pop    r13
  4056fa:	pop    r14
  4056fc:	pop    r15
  4056fe:	pop    rbp
  4056ff:	ret    
  405700:	mov    rax,QWORD PTR [rip+0x38f1]        # 408ff8 <stderr@GLIBC_2.2.5>
  405707:	mov    rdi,QWORD PTR [rax]
  40570a:	lea    rsi,[rip+0x8f9]        # 40600a <_IO_stdin_used@@Base+0xa>
  405711:	lea    rdx,[rip+0xd46]        # 40645e <_IO_stdin_used@@Base+0x45e>
  405718:	lea    r8,[rip+0xd93]        # 4064b2 <_IO_stdin_used@@Base+0x4b2>
  40571f:	mov    ecx,0x4f
  405724:	jmp    40574a <mmk_verify_register_call@@Base+0x1aa>
  405726:	mov    rax,QWORD PTR [rip+0x38cb]        # 408ff8 <stderr@GLIBC_2.2.5>
  40572d:	mov    rdi,QWORD PTR [rax]
  405730:	lea    rsi,[rip+0x8d3]        # 40600a <_IO_stdin_used@@Base+0xa>
  405737:	lea    rdx,[rip+0xd20]        # 40645e <_IO_stdin_used@@Base+0x45e>
  40573e:	lea    r8,[rip+0xd6d]        # 4064b2 <_IO_stdin_used@@Base+0x4b2>
  405745:	mov    ecx,0x5b
  40574a:	xor    eax,eax
  40574c:	call   4020e0 <fprintf@plt>
  405751:	call   402040 <abort@plt>
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405760 <mmk_memcmp@@Base>:
  405760:	test   rdx,rdx
  405763:	je     405781 <mmk_memcmp@@Base+0x21>
  405765:	xor    eax,eax
  405767:	nop    WORD PTR [rax+rax*1+0x0]
  405770:	movzx  ecx,BYTE PTR [rsi+rax*1]
  405774:	cmp    BYTE PTR [rdi+rax*1],cl
  405777:	jne    405784 <mmk_memcmp@@Base+0x24>
  405779:	inc    rax
  40577c:	cmp    rdx,rax
  40577f:	jne    405770 <mmk_memcmp@@Base+0x10>
  405781:	xor    eax,eax
  405783:	ret    
  405784:	setge  al
  405787:	movzx  eax,al
  40578a:	lea    eax,[rax+rax*1]
  40578d:	add    eax,0xffffffff
  405790:	ret    
  405791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40579b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004057a0 <mmk_memcpy@@Base>:
  4057a0:	mov    rax,rdi
  4057a3:	test   rdx,rdx
  4057a6:	je     405a1c <mmk_memcpy@@Base+0x27c>
  4057ac:	cmp    rdx,0x7f
  4057b0:	jbe    4057cc <mmk_memcpy@@Base+0x2c>
  4057b2:	lea    rcx,[rsi+rdx*1]
  4057b6:	cmp    rcx,rax
  4057b9:	jbe    40586c <mmk_memcpy@@Base+0xcc>
  4057bf:	lea    rcx,[rax+rdx*1]
  4057c3:	cmp    rcx,rsi
  4057c6:	jbe    40586c <mmk_memcpy@@Base+0xcc>
  4057cc:	mov    r10,rax
  4057cf:	lea    r8,[rdx-0x1]
  4057d3:	mov    r9,rdx
  4057d6:	and    r9,0x7
  4057da:	je     4057f9 <mmk_memcpy@@Base+0x59>
  4057dc:	xor    edi,edi
  4057de:	xchg   ax,ax
  4057e0:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  4057e4:	mov    BYTE PTR [r10+rdi*1],cl
  4057e8:	inc    rdi
  4057eb:	cmp    r9,rdi
  4057ee:	jne    4057e0 <mmk_memcpy@@Base+0x40>
  4057f0:	add    r10,rdi
  4057f3:	add    rsi,rdi
  4057f6:	sub    rdx,rdi
  4057f9:	cmp    r8,0x7
  4057fd:	jb     405a1c <mmk_memcpy@@Base+0x27c>
  405803:	xor    edi,edi
  405805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40580f:	nop
  405810:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  405814:	mov    BYTE PTR [r10+rdi*1],cl
  405818:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x1]
  40581d:	mov    BYTE PTR [r10+rdi*1+0x1],cl
  405822:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x2]
  405827:	mov    BYTE PTR [r10+rdi*1+0x2],cl
  40582c:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x3]
  405831:	mov    BYTE PTR [r10+rdi*1+0x3],cl
  405836:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x4]
  40583b:	mov    BYTE PTR [r10+rdi*1+0x4],cl
  405840:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x5]
  405845:	mov    BYTE PTR [r10+rdi*1+0x5],cl
  40584a:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x6]
  40584f:	mov    BYTE PTR [r10+rdi*1+0x6],cl
  405854:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x7]
  405859:	mov    BYTE PTR [r10+rdi*1+0x7],cl
  40585e:	add    rdi,0x8
  405862:	cmp    rdx,rdi
  405865:	jne    405810 <mmk_memcpy@@Base+0x70>
  405867:	jmp    405a1c <mmk_memcpy@@Base+0x27c>
  40586c:	mov    r8,rdx
  40586f:	and    r8,0xffffffffffffff80
  405873:	lea    rcx,[r8-0x80]
  405877:	mov    rdi,rcx
  40587a:	shr    rdi,0x7
  40587e:	inc    rdi
  405881:	mov    r9d,edi
  405884:	and    r9d,0x3
  405888:	cmp    rcx,0x180
  40588f:	jae    4058a1 <mmk_memcpy@@Base+0x101>
  405891:	xor    ecx,ecx
  405893:	test   r9,r9
  405896:	jne    4059cc <mmk_memcpy@@Base+0x22c>
  40589c:	jmp    405a17 <mmk_memcpy@@Base+0x277>
  4058a1:	sub    rdi,r9
  4058a4:	xor    ecx,ecx
  4058a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058b0:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1]
  4058b5:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x20]
  4058bb:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x40]
  4058c1:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x60]
  4058c7:	vmovups YMMWORD PTR [rax+rcx*1],ymm0
  4058cc:	vmovups YMMWORD PTR [rax+rcx*1+0x20],ymm1
  4058d2:	vmovups YMMWORD PTR [rax+rcx*1+0x40],ymm2
  4058d8:	vmovups YMMWORD PTR [rax+rcx*1+0x60],ymm3
  4058de:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x80]
  4058e7:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0xa0]
  4058f0:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0xc0]
  4058f9:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0xe0]
  405902:	vmovups YMMWORD PTR [rax+rcx*1+0x80],ymm0
  40590b:	vmovups YMMWORD PTR [rax+rcx*1+0xa0],ymm1
  405914:	vmovups YMMWORD PTR [rax+rcx*1+0xc0],ymm2
  40591d:	vmovups YMMWORD PTR [rax+rcx*1+0xe0],ymm3
  405926:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x100]
  40592f:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x120]
  405938:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x140]
  405941:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x160]
  40594a:	vmovups YMMWORD PTR [rax+rcx*1+0x100],ymm0
  405953:	vmovups YMMWORD PTR [rax+rcx*1+0x120],ymm1
  40595c:	vmovups YMMWORD PTR [rax+rcx*1+0x140],ymm2
  405965:	vmovups YMMWORD PTR [rax+rcx*1+0x160],ymm3
  40596e:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x180]
  405977:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x1a0]
  405980:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x1c0]
  405989:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x1e0]
  405992:	vmovups YMMWORD PTR [rax+rcx*1+0x180],ymm0
  40599b:	vmovups YMMWORD PTR [rax+rcx*1+0x1a0],ymm1
  4059a4:	vmovups YMMWORD PTR [rax+rcx*1+0x1c0],ymm2
  4059ad:	vmovups YMMWORD PTR [rax+rcx*1+0x1e0],ymm3
  4059b6:	add    rcx,0x200
  4059bd:	add    rdi,0xfffffffffffffffc
  4059c1:	jne    4058b0 <mmk_memcpy@@Base+0x110>
  4059c7:	test   r9,r9
  4059ca:	je     405a17 <mmk_memcpy@@Base+0x277>
  4059cc:	add    rcx,0x60
  4059d0:	neg    r9
  4059d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059dd:	nop    DWORD PTR [rax]
  4059e0:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1-0x60]
  4059e6:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1-0x40]
  4059ec:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1-0x20]
  4059f2:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1]
  4059f7:	vmovups YMMWORD PTR [rax+rcx*1-0x60],ymm0
  4059fd:	vmovups YMMWORD PTR [rax+rcx*1-0x40],ymm1
  405a03:	vmovups YMMWORD PTR [rax+rcx*1-0x20],ymm2
  405a09:	vmovups YMMWORD PTR [rax+rcx*1],ymm3
  405a0e:	sub    rcx,0xffffffffffffff80
  405a12:	inc    r9
  405a15:	jne    4059e0 <mmk_memcpy@@Base+0x240>
  405a17:	cmp    r8,rdx
  405a1a:	jne    405a20 <mmk_memcpy@@Base+0x280>
  405a1c:	vzeroupper 
  405a1f:	ret    
  405a20:	lea    r10,[rax+r8*1]
  405a24:	add    rsi,r8
  405a27:	sub    rdx,r8
  405a2a:	jmp    4057cf <mmk_memcpy@@Base+0x2f>
  405a2f:	nop

0000000000405a30 <mmk_strneq@@Base>:
  405a30:	mov    al,BYTE PTR [rdi]
  405a32:	test   al,al
  405a34:	je     405a60 <mmk_strneq@@Base+0x30>
  405a36:	inc    rdi
  405a39:	nop    DWORD PTR [rax+0x0]
  405a40:	test   rdx,rdx
  405a43:	je     405a60 <mmk_strneq@@Base+0x30>
  405a45:	movzx  ecx,BYTE PTR [rsi]
  405a48:	test   cl,cl
  405a4a:	je     405a60 <mmk_strneq@@Base+0x30>
  405a4c:	cmp    al,cl
  405a4e:	jne    405a74 <mmk_strneq@@Base+0x44>
  405a50:	inc    rsi
  405a53:	dec    rdx
  405a56:	movzx  eax,BYTE PTR [rdi]
  405a59:	inc    rdi
  405a5c:	test   al,al
  405a5e:	jne    405a40 <mmk_strneq@@Base+0x10>
  405a60:	test   rdx,rdx
  405a63:	je     405a6e <mmk_strneq@@Base+0x3e>
  405a65:	xor    eax,eax
  405a67:	cmp    BYTE PTR [rsi],0x0
  405a6a:	sete   al
  405a6d:	ret    
  405a6e:	mov    eax,0x1
  405a73:	ret    
  405a74:	xor    eax,eax
  405a76:	ret    
  405a77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405a80 <mmk_strchr@@Base>:
  405a80:	mov    cl,BYTE PTR [rdi]
  405a82:	test   cl,cl
  405a84:	je     405aa2 <mmk_strchr@@Base+0x22>
  405a86:	mov    rax,rdi
  405a89:	nop    DWORD PTR [rax+0x0]
  405a90:	movsx  ecx,cl
  405a93:	cmp    ecx,esi
  405a95:	je     405aa4 <mmk_strchr@@Base+0x24>
  405a97:	movzx  ecx,BYTE PTR [rax+0x1]
  405a9b:	inc    rax
  405a9e:	test   cl,cl
  405aa0:	jne    405a90 <mmk_strchr@@Base+0x10>
  405aa2:	xor    eax,eax
  405aa4:	ret    
  405aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aaf:	nop

0000000000405ab0 <mmk_strcpy@@Base>:
  405ab0:	mov    rax,rdi
  405ab3:	mov    cl,BYTE PTR [rsi]
  405ab5:	test   cl,cl
  405ab7:	je     405acf <mmk_strcpy@@Base+0x1f>
  405ab9:	inc    rsi
  405abc:	nop    DWORD PTR [rax+0x0]
  405ac0:	mov    BYTE PTR [rax],cl
  405ac2:	inc    rax
  405ac5:	movzx  ecx,BYTE PTR [rsi]
  405ac8:	inc    rsi
  405acb:	test   cl,cl
  405acd:	jne    405ac0 <mmk_strcpy@@Base+0x10>
  405acf:	mov    BYTE PTR [rax],0x0
  405ad2:	ret    
  405ad3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405add:	nop    DWORD PTR [rax]

0000000000405ae0 <mmk_strncpy@@Base>:
  405ae0:	mov    rax,rdi
  405ae3:	test   rdx,rdx
  405ae6:	je     405b1b <mmk_strncpy@@Base+0x3b>
  405ae8:	mov    cl,BYTE PTR [rsi]
  405aea:	test   cl,cl
  405aec:	je     405b1b <mmk_strncpy@@Base+0x3b>
  405aee:	dec    rdx
  405af1:	xor    edi,edi
  405af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405afd:	nop    DWORD PTR [rax]
  405b00:	mov    BYTE PTR [rax+rdi*1],cl
  405b03:	lea    r8,[rdi+0x1]
  405b07:	cmp    rdx,rdi
  405b0a:	je     405b18 <mmk_strncpy@@Base+0x38>
  405b0c:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x1]
  405b11:	mov    rdi,r8
  405b14:	test   cl,cl
  405b16:	jne    405b00 <mmk_strncpy@@Base+0x20>
  405b18:	add    rax,r8
  405b1b:	mov    BYTE PTR [rax],0x0
  405b1e:	ret    
  405b1f:	nop

0000000000405b20 <mmk_strlen@@Base>:
  405b20:	cmp    BYTE PTR [rdi],0x0
  405b23:	je     405b3c <mmk_strlen@@Base+0x1c>
  405b25:	xor    eax,eax
  405b27:	nop    WORD PTR [rax+rax*1+0x0]
  405b30:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
  405b35:	lea    rax,[rax+0x1]
  405b39:	jne    405b30 <mmk_strlen@@Base+0x10>
  405b3b:	ret    
  405b3c:	xor    eax,eax
  405b3e:	ret    
  405b3f:	nop

0000000000405b40 <mmk_isspace@@Base>:
  405b40:	cmp    edi,0x20
  405b43:	ja     405b5d <mmk_isspace@@Base+0x1d>
  405b45:	mov    eax,0x1
  405b4a:	mov    ecx,edi
  405b4c:	movabs rdx,0x100002200
  405b56:	bt     rdx,rcx
  405b5a:	jae    405b5d <mmk_isspace@@Base+0x1d>
  405b5c:	ret    
  405b5d:	xor    eax,eax
  405b5f:	cmp    edi,0xa
  405b62:	sete   al
  405b65:	ret    
  405b66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405b70 <mmk_malloc@@Base>:
  405b70:	lea    rax,[rip+0x3579]        # 4090f0 <mmk_malloc_@@Base>
  405b77:	jmp    QWORD PTR [rax]
  405b79:	nop    DWORD PTR [rax+0x0]

0000000000405b80 <mmk_realloc@@Base>:
  405b80:	lea    rax,[rip+0x3559]        # 4090e0 <mmk_realloc_@@Base>
  405b87:	mov    rax,QWORD PTR [rax]
  405b8a:	jmp    rax
  405b8c:	nop    DWORD PTR [rax+0x0]

0000000000405b90 <mmk_free@@Base>:
  405b90:	lea    rax,[rip+0x3551]        # 4090e8 <mmk_free_@@Base>
  405b97:	jmp    QWORD PTR [rax]
  405b99:	nop    DWORD PTR [rax+0x0]

0000000000405ba0 <mmk_init_vital_functions@@Base>:
  405ba0:	push   rbx
  405ba1:	mov    rbx,rdi
  405ba4:	xor    edi,edi
  405ba6:	call   402100 <malloc@plt>
  405bab:	mov    rdi,rax
  405bae:	xor    esi,esi
  405bb0:	call   402110 <realloc@plt>
  405bb5:	mov    rdi,rax
  405bb8:	call   402030 <free@plt>
  405bbd:	lea    rsi,[rip+0x8fe]        # 4064c2 <_IO_stdin_used@@Base+0x4c2>
  405bc4:	mov    rdi,rbx
  405bc7:	call   405110 <plt_get_real_fn@@Base>
  405bcc:	lea    rcx,[rip+0x351d]        # 4090f0 <mmk_malloc_@@Base>
  405bd3:	mov    QWORD PTR [rcx],rax
  405bd6:	test   rax,rax
  405bd9:	je     405c19 <mmk_init_vital_functions@@Base+0x79>
  405bdb:	lea    rsi,[rip+0x971]        # 406553 <_IO_stdin_used@@Base+0x553>
  405be2:	mov    rdi,rbx
  405be5:	call   405110 <plt_get_real_fn@@Base>
  405bea:	lea    rcx,[rip+0x34ef]        # 4090e0 <mmk_realloc_@@Base>
  405bf1:	mov    QWORD PTR [rcx],rax
  405bf4:	test   rax,rax
  405bf7:	je     405c3f <mmk_init_vital_functions@@Base+0x9f>
  405bf9:	lea    rsi,[rip+0x993]        # 406593 <_IO_stdin_used@@Base+0x593>
  405c00:	mov    rdi,rbx
  405c03:	call   405110 <plt_get_real_fn@@Base>
  405c08:	lea    rcx,[rip+0x34d9]        # 4090e8 <mmk_free_@@Base>
  405c0f:	mov    QWORD PTR [rcx],rax
  405c12:	test   rax,rax
  405c15:	je     405c65 <mmk_init_vital_functions@@Base+0xc5>
  405c17:	pop    rbx
  405c18:	ret    
  405c19:	mov    rax,QWORD PTR [rip+0x33d8]        # 408ff8 <stderr@GLIBC_2.2.5>
  405c20:	mov    rdi,QWORD PTR [rax]
  405c23:	lea    rsi,[rip+0x3e0]        # 40600a <_IO_stdin_used@@Base+0xa>
  405c2a:	lea    rdx,[rip+0x898]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405c31:	lea    r8,[rip+0x8e5]        # 40651d <_IO_stdin_used@@Base+0x51d>
  405c38:	mov    ecx,0x58
  405c3d:	jmp    405c89 <mmk_init_vital_functions@@Base+0xe9>
  405c3f:	mov    rax,QWORD PTR [rip+0x33b2]        # 408ff8 <stderr@GLIBC_2.2.5>
  405c46:	mov    rdi,QWORD PTR [rax]
  405c49:	lea    rsi,[rip+0x3ba]        # 40600a <_IO_stdin_used@@Base+0xa>
  405c50:	lea    rdx,[rip+0x872]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405c57:	lea    r8,[rip+0x8fd]        # 40655b <_IO_stdin_used@@Base+0x55b>
  405c5e:	mov    ecx,0x59
  405c63:	jmp    405c89 <mmk_init_vital_functions@@Base+0xe9>
  405c65:	mov    rax,QWORD PTR [rip+0x338c]        # 408ff8 <stderr@GLIBC_2.2.5>
  405c6c:	mov    rdi,QWORD PTR [rax]
  405c6f:	lea    rsi,[rip+0x394]        # 40600a <_IO_stdin_used@@Base+0xa>
  405c76:	lea    rdx,[rip+0x84c]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405c7d:	lea    r8,[rip+0x914]        # 406598 <_IO_stdin_used@@Base+0x598>
  405c84:	mov    ecx,0x5a
  405c89:	xor    eax,eax
  405c8b:	call   4020e0 <fprintf@plt>
  405c90:	call   402040 <abort@plt>
  405c95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c9f:	nop

0000000000405ca0 <mmk_when_init@@Base>:
  405ca0:	push   rbx
  405ca1:	mov    rbx,rdi
  405ca4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405cb0:	mov    QWORD PTR [rax-0x8],rbx
  405cb7:	pop    rbx
  405cb8:	ret    
  405cb9:	nop    DWORD PTR [rax+0x0]

0000000000405cc0 <mmk_when_get_result@@Base>:
  405cc0:	push   rax
  405cc1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405ccd:	mov    rax,QWORD PTR [rax-0x8]
  405cd4:	pop    rcx
  405cd5:	ret    
  405cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405ce0 <mmk_when_impl@@Base>:
  405ce0:	push   r14
  405ce2:	push   rbx
  405ce3:	push   rax
  405ce4:	mov    rbx,rsi
  405ce7:	mov    r14,rdi
  405cea:	call   4047d0 <mmk_matcher_ctx@@Base>
  405cef:	mov    QWORD PTR [rbx],rax
  405cf2:	mov    rax,QWORD PTR [r14]
  405cf5:	mov    QWORD PTR [rbx+0x8],rax
  405cf9:	mov    QWORD PTR [r14],rbx
  405cfc:	add    rsp,0x8
  405d00:	pop    rbx
  405d01:	pop    r14
  405d03:	ret    

0000000000405d04 <mmk_trampoline@@Base>:
  405d04:	call   405d09 <mmk_trampoline@@Base+0x5>
  405d09:	pop    rax
  405d0a:	push   rax
  405d0b:	mov    rax,QWORD PTR [rax-0x15]
  405d12:	push   rdi
  405d13:	push   rsi
  405d14:	push   rdx
  405d15:	push   rcx
  405d16:	push   r8
  405d18:	push   r9
  405d1a:	sub    rsp,0x10
  405d1e:	movdqu XMMWORD PTR [rsp],xmm0
  405d23:	sub    rsp,0x10
  405d27:	movdqu XMMWORD PTR [rsp],xmm1
  405d2c:	sub    rsp,0x10
  405d30:	movdqu XMMWORD PTR [rsp],xmm2
  405d35:	sub    rsp,0x10
  405d39:	movdqu XMMWORD PTR [rsp],xmm3
  405d3e:	sub    rsp,0x10
  405d42:	movdqu XMMWORD PTR [rsp],xmm4
  405d47:	sub    rsp,0x10
  405d4b:	movdqu XMMWORD PTR [rsp],xmm5
  405d50:	sub    rsp,0x10
  405d54:	movdqu XMMWORD PTR [rsp],xmm6
  405d59:	sub    rsp,0x10
  405d5d:	movdqu XMMWORD PTR [rsp],xmm7
  405d62:	mov    rdi,rax
  405d65:	push   rax
  405d66:	mov    rax,QWORD PTR [rax+0x8]
  405d6a:	call   rax
  405d6c:	pop    rax
  405d6d:	mov    rax,QWORD PTR [rax]
  405d70:	call   rax
  405d72:	movdqu xmm7,XMMWORD PTR [rsp]
  405d77:	add    rsp,0x10
  405d7b:	movdqu xmm6,XMMWORD PTR [rsp]
  405d80:	add    rsp,0x10
  405d84:	movdqu xmm5,XMMWORD PTR [rsp]
  405d89:	add    rsp,0x10
  405d8d:	movdqu xmm4,XMMWORD PTR [rsp]
  405d92:	add    rsp,0x10
  405d96:	movdqu xmm3,XMMWORD PTR [rsp]
  405d9b:	add    rsp,0x10
  405d9f:	movdqu xmm2,XMMWORD PTR [rsp]
  405da4:	add    rsp,0x10
  405da8:	movdqu xmm1,XMMWORD PTR [rsp]
  405dad:	add    rsp,0x10
  405db1:	movdqu xmm0,XMMWORD PTR [rsp]
  405db6:	add    rsp,0x10
  405dba:	pop    r9
  405dbc:	pop    r8
  405dbe:	pop    rcx
  405dbf:	pop    rdx
  405dc0:	pop    rsi
  405dc1:	pop    rdi
  405dc2:	test   rax,rax
  405dc5:	jne    405dd1 <mmk_trampoline@@Base+0xcd>
  405dc7:	pop    rax
  405dc8:	mov    rax,QWORD PTR [rax-0xd]
  405dcf:	jmp    rax
  405dd1:	pop    rax
  405dd2:	mov    rax,QWORD PTR [rax-0x15]
  405dd9:	mov    rax,QWORD PTR [rax+0x10]
  405ddd:	call   rax
  405ddf:	ret    

0000000000405de0 <mmk_trampoline_end@@Base>:
  405de0:	nop
  405de1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405df0 <__libc_csu_init@@Base>:
  405df0:	endbr64 
  405df4:	push   r15
  405df6:	lea    r15,[rip+0x2fa3]        # 408da0 <_IO_stdin_used@@Base+0x2da0>
  405dfd:	push   r14
  405dff:	mov    r14,rdx
  405e02:	push   r13
  405e04:	mov    r13,rsi
  405e07:	push   r12
  405e09:	mov    r12d,edi
  405e0c:	push   rbp
  405e0d:	lea    rbp,[rip+0x2f94]        # 408da8 <_IO_stdin_used@@Base+0x2da8>
  405e14:	push   rbx
  405e15:	sub    rbp,r15
  405e18:	sub    rsp,0x8
  405e1c:	call   402000 <free@plt-0x30>
  405e21:	sar    rbp,0x3
  405e25:	je     405e46 <__libc_csu_init@@Base+0x56>
  405e27:	xor    ebx,ebx
  405e29:	nop    DWORD PTR [rax+0x0]
  405e30:	mov    rdx,r14
  405e33:	mov    rsi,r13
  405e36:	mov    edi,r12d
  405e39:	call   QWORD PTR [r15+rbx*8]
  405e3d:	add    rbx,0x1
  405e41:	cmp    rbp,rbx
  405e44:	jne    405e30 <__libc_csu_init@@Base+0x40>
  405e46:	add    rsp,0x8
  405e4a:	pop    rbx
  405e4b:	pop    rbp
  405e4c:	pop    r12
  405e4e:	pop    r13
  405e50:	pop    r14
  405e52:	pop    r15
  405e54:	ret    
  405e55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405e60 <__libc_csu_fini@@Base>:
  405e60:	endbr64 
  405e64:	ret    

Disassembly of section .fini:

0000000000405e68 <.fini>:
  405e68:	endbr64 
  405e6c:	sub    rsp,0x8
  405e70:	add    rsp,0x8
  405e74:	ret    
