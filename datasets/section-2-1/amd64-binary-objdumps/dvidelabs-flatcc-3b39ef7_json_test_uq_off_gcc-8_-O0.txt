
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x3efd1]        # 444fe0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x14a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <.plt>:
  406020:	push   QWORD PTR [rip+0x3efe2]        # 445008 <flatcc_builder_padding_base@@Base+0xbda8>
  406026:	bnd jmp QWORD PTR [rip+0x3efe3]        # 445010 <flatcc_builder_padding_base@@Base+0xbdb0>
  40602d:	nop    DWORD PTR [rax]
  406030:	endbr64 
  406034:	push   0x0
  406039:	bnd jmp 406020 <free@plt-0x140>
  40603f:	nop
  406040:	endbr64 
  406044:	push   0x1
  406049:	bnd jmp 406020 <free@plt-0x140>
  40604f:	nop
  406050:	endbr64 
  406054:	push   0x2
  406059:	bnd jmp 406020 <free@plt-0x140>
  40605f:	nop
  406060:	endbr64 
  406064:	push   0x3
  406069:	bnd jmp 406020 <free@plt-0x140>
  40606f:	nop
  406070:	endbr64 
  406074:	push   0x4
  406079:	bnd jmp 406020 <free@plt-0x140>
  40607f:	nop
  406080:	endbr64 
  406084:	push   0x5
  406089:	bnd jmp 406020 <free@plt-0x140>
  40608f:	nop
  406090:	endbr64 
  406094:	push   0x6
  406099:	bnd jmp 406020 <free@plt-0x140>
  40609f:	nop
  4060a0:	endbr64 
  4060a4:	push   0x7
  4060a9:	bnd jmp 406020 <free@plt-0x140>
  4060af:	nop
  4060b0:	endbr64 
  4060b4:	push   0x8
  4060b9:	bnd jmp 406020 <free@plt-0x140>
  4060bf:	nop
  4060c0:	endbr64 
  4060c4:	push   0x9
  4060c9:	bnd jmp 406020 <free@plt-0x140>
  4060cf:	nop
  4060d0:	endbr64 
  4060d4:	push   0xa
  4060d9:	bnd jmp 406020 <free@plt-0x140>
  4060df:	nop
  4060e0:	endbr64 
  4060e4:	push   0xb
  4060e9:	bnd jmp 406020 <free@plt-0x140>
  4060ef:	nop
  4060f0:	endbr64 
  4060f4:	push   0xc
  4060f9:	bnd jmp 406020 <free@plt-0x140>
  4060ff:	nop
  406100:	endbr64 
  406104:	push   0xd
  406109:	bnd jmp 406020 <free@plt-0x140>
  40610f:	nop
  406110:	endbr64 
  406114:	push   0xe
  406119:	bnd jmp 406020 <free@plt-0x140>
  40611f:	nop
  406120:	endbr64 
  406124:	push   0xf
  406129:	bnd jmp 406020 <free@plt-0x140>
  40612f:	nop
  406130:	endbr64 
  406134:	push   0x10
  406139:	bnd jmp 406020 <free@plt-0x140>
  40613f:	nop
  406140:	endbr64 
  406144:	push   0x11
  406149:	bnd jmp 406020 <free@plt-0x140>
  40614f:	nop
  406150:	endbr64 
  406154:	push   0x12
  406159:	bnd jmp 406020 <free@plt-0x140>
  40615f:	nop

Disassembly of section .plt.sec:

0000000000406160 <free@plt>:
  406160:	endbr64 
  406164:	bnd jmp QWORD PTR [rip+0x3eead]        # 445018 <free@GLIBC_2.2.5>
  40616b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406170 <strncpy@plt>:
  406170:	endbr64 
  406174:	bnd jmp QWORD PTR [rip+0x3eea5]        # 445020 <strncpy@GLIBC_2.2.5>
  40617b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406180 <strtod@plt>:
  406180:	endbr64 
  406184:	bnd jmp QWORD PTR [rip+0x3ee9d]        # 445028 <strtod@GLIBC_2.2.5>
  40618b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406190 <strlen@plt>:
  406190:	endbr64 
  406194:	bnd jmp QWORD PTR [rip+0x3ee95]        # 445030 <strlen@GLIBC_2.2.5>
  40619b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061a0 <__stack_chk_fail@plt>:
  4061a0:	endbr64 
  4061a4:	bnd jmp QWORD PTR [rip+0x3ee8d]        # 445038 <__stack_chk_fail@GLIBC_2.4>
  4061ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061b0 <__assert_fail@plt>:
  4061b0:	endbr64 
  4061b4:	bnd jmp QWORD PTR [rip+0x3ee85]        # 445040 <__assert_fail@GLIBC_2.2.5>
  4061bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061c0 <memset@plt>:
  4061c0:	endbr64 
  4061c4:	bnd jmp QWORD PTR [rip+0x3ee7d]        # 445048 <memset@GLIBC_2.2.5>
  4061cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061d0 <fputc@plt>:
  4061d0:	endbr64 
  4061d4:	bnd jmp QWORD PTR [rip+0x3ee75]        # 445050 <fputc@GLIBC_2.2.5>
  4061db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061e0 <memchr@plt>:
  4061e0:	endbr64 
  4061e4:	bnd jmp QWORD PTR [rip+0x3ee6d]        # 445058 <memchr@GLIBC_2.2.5>
  4061eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061f0 <memcmp@plt>:
  4061f0:	endbr64 
  4061f4:	bnd jmp QWORD PTR [rip+0x3ee65]        # 445060 <memcmp@GLIBC_2.2.5>
  4061fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406200 <strcmp@plt>:
  406200:	endbr64 
  406204:	bnd jmp QWORD PTR [rip+0x3ee5d]        # 445068 <strcmp@GLIBC_2.2.5>
  40620b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406210 <fprintf@plt>:
  406210:	endbr64 
  406214:	bnd jmp QWORD PTR [rip+0x3ee55]        # 445070 <fprintf@GLIBC_2.2.5>
  40621b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406220 <memcpy@plt>:
  406220:	endbr64 
  406224:	bnd jmp QWORD PTR [rip+0x3ee4d]        # 445078 <memcpy@GLIBC_2.14>
  40622b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406230 <malloc@plt>:
  406230:	endbr64 
  406234:	bnd jmp QWORD PTR [rip+0x3ee45]        # 445080 <malloc@GLIBC_2.2.5>
  40623b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406240 <realloc@plt>:
  406240:	endbr64 
  406244:	bnd jmp QWORD PTR [rip+0x3ee3d]        # 445088 <realloc@GLIBC_2.2.5>
  40624b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406250 <memmove@plt>:
  406250:	endbr64 
  406254:	bnd jmp QWORD PTR [rip+0x3ee35]        # 445090 <memmove@GLIBC_2.2.5>
  40625b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406260 <sprintf@plt>:
  406260:	endbr64 
  406264:	bnd jmp QWORD PTR [rip+0x3ee2d]        # 445098 <sprintf@GLIBC_2.2.5>
  40626b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406270 <fwrite@plt>:
  406270:	endbr64 
  406274:	bnd jmp QWORD PTR [rip+0x3ee25]        # 4450a0 <fwrite@GLIBC_2.2.5>
  40627b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406280 <posix_memalign@plt>:
  406280:	endbr64 
  406284:	bnd jmp QWORD PTR [rip+0x3ee1d]        # 4450a8 <posix_memalign@GLIBC_2.2.5>
  40628b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000406290 <_start@@Base>:
  406290:	endbr64 
  406294:	xor    ebp,ebp
  406296:	mov    r9,rdx
  406299:	pop    rsi
  40629a:	mov    rdx,rsp
  40629d:	and    rsp,0xfffffffffffffff0
  4062a1:	push   rax
  4062a2:	push   rsp
  4062a3:	mov    r8,0x435c20
  4062aa:	mov    rcx,0x435bb0
  4062b1:	mov    rdi,0x41ab43
  4062b8:	call   QWORD PTR [rip+0x3ed1a]        # 444fd8 <__libc_start_main@GLIBC_2.2.5>
  4062be:	hlt    
  4062bf:	nop
  4062c0:	endbr64 
  4062c4:	ret    
  4062c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062cf:	nop
  4062d0:	mov    eax,0x445a70
  4062d5:	cmp    rax,0x445a70
  4062db:	je     4062f0 <_start@@Base+0x60>
  4062dd:	mov    eax,0x0
  4062e2:	test   rax,rax
  4062e5:	je     4062f0 <_start@@Base+0x60>
  4062e7:	mov    edi,0x445a70
  4062ec:	jmp    rax
  4062ee:	xchg   ax,ax
  4062f0:	ret    
  4062f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	mov    esi,0x445a70
  406305:	sub    rsi,0x445a70
  40630c:	sar    rsi,0x3
  406310:	mov    rax,rsi
  406313:	shr    rax,0x3f
  406317:	add    rsi,rax
  40631a:	sar    rsi,1
  40631d:	je     406330 <_start@@Base+0xa0>
  40631f:	mov    eax,0x0
  406324:	test   rax,rax
  406327:	je     406330 <_start@@Base+0xa0>
  406329:	mov    edi,0x445a70
  40632e:	jmp    rax
  406330:	ret    
  406331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40633c:	nop    DWORD PTR [rax+0x0]
  406340:	endbr64 
  406344:	cmp    BYTE PTR [rip+0x3f725],0x0        # 445a70 <__bss_start@@Base>
  40634b:	jne    406360 <_start@@Base+0xd0>
  40634d:	push   rbp
  40634e:	mov    rbp,rsp
  406351:	call   4062d0 <_start@@Base+0x40>
  406356:	mov    BYTE PTR [rip+0x3f713],0x1        # 445a70 <__bss_start@@Base>
  40635d:	pop    rbp
  40635e:	ret    
  40635f:	nop
  406360:	ret    
  406361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40636c:	nop    DWORD PTR [rax+0x0]
  406370:	endbr64 
  406374:	jmp    406300 <_start@@Base+0x70>
  406376:	push   rbp
  406377:	mov    rbp,rsp
  40637a:	mov    eax,edi
  40637c:	mov    BYTE PTR [rbp-0x4],al
  40637f:	movzx  eax,BYTE PTR [rbp-0x4]
  406383:	pop    rbp
  406384:	ret    
  406385:	push   rbp
  406386:	mov    rbp,rsp
  406389:	sub    rsp,0x10
  40638d:	mov    QWORD PTR [rbp-0x8],rdi
  406391:	mov    eax,esi
  406393:	mov    BYTE PTR [rbp-0xc],al
  406396:	movzx  eax,BYTE PTR [rbp-0xc]
  40639a:	mov    edi,eax
  40639c:	call   406376 <_start@@Base+0xe6>
  4063a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4063a5:	mov    BYTE PTR [rdx],al
  4063a7:	nop
  4063a8:	leave  
  4063a9:	ret    
  4063aa:	push   rbp
  4063ab:	mov    rbp,rsp
  4063ae:	mov    eax,edi
  4063b0:	mov    WORD PTR [rbp-0x4],ax
  4063b4:	movzx  eax,WORD PTR [rbp-0x4]
  4063b8:	pop    rbp
  4063b9:	ret    
  4063ba:	push   rbp
  4063bb:	mov    rbp,rsp
  4063be:	sub    rsp,0x10
  4063c2:	mov    QWORD PTR [rbp-0x8],rdi
  4063c6:	mov    eax,esi
  4063c8:	mov    WORD PTR [rbp-0xc],ax
  4063cc:	movzx  eax,WORD PTR [rbp-0xc]
  4063d0:	mov    edi,eax
  4063d2:	call   4063aa <_start@@Base+0x11a>
  4063d7:	mov    edx,eax
  4063d9:	mov    rax,QWORD PTR [rbp-0x8]
  4063dd:	mov    WORD PTR [rax],dx
  4063e0:	nop
  4063e1:	leave  
  4063e2:	ret    
  4063e3:	push   rbp
  4063e4:	mov    rbp,rsp
  4063e7:	mov    DWORD PTR [rbp-0x4],edi
  4063ea:	mov    eax,DWORD PTR [rbp-0x4]
  4063ed:	pop    rbp
  4063ee:	ret    
  4063ef:	push   rbp
  4063f0:	mov    rbp,rsp
  4063f3:	sub    rsp,0x10
  4063f7:	mov    QWORD PTR [rbp-0x8],rdi
  4063fb:	mov    DWORD PTR [rbp-0xc],esi
  4063fe:	mov    eax,DWORD PTR [rbp-0xc]
  406401:	mov    edi,eax
  406403:	call   4063e3 <_start@@Base+0x153>
  406408:	mov    edx,eax
  40640a:	mov    rax,QWORD PTR [rbp-0x8]
  40640e:	mov    DWORD PTR [rax],edx
  406410:	nop
  406411:	leave  
  406412:	ret    
  406413:	push   rbp
  406414:	mov    rbp,rsp
  406417:	mov    QWORD PTR [rbp-0x8],rdi
  40641b:	mov    rax,QWORD PTR [rbp-0x8]
  40641f:	pop    rbp
  406420:	ret    
  406421:	push   rbp
  406422:	mov    rbp,rsp
  406425:	sub    rsp,0x10
  406429:	mov    QWORD PTR [rbp-0x8],rdi
  40642d:	mov    QWORD PTR [rbp-0x10],rsi
  406431:	mov    rax,QWORD PTR [rbp-0x10]
  406435:	mov    rdi,rax
  406438:	call   406413 <_start@@Base+0x183>
  40643d:	mov    rdx,rax
  406440:	mov    rax,QWORD PTR [rbp-0x8]
  406444:	mov    QWORD PTR [rax],rdx
  406447:	nop
  406448:	leave  
  406449:	ret    
  40644a:	push   rbp
  40644b:	mov    rbp,rsp
  40644e:	mov    eax,edi
  406450:	mov    BYTE PTR [rbp-0x4],al
  406453:	movzx  eax,BYTE PTR [rbp-0x4]
  406457:	pop    rbp
  406458:	ret    
  406459:	push   rbp
  40645a:	mov    rbp,rsp
  40645d:	sub    rsp,0x10
  406461:	mov    QWORD PTR [rbp-0x8],rdi
  406465:	mov    eax,esi
  406467:	mov    BYTE PTR [rbp-0xc],al
  40646a:	movsx  eax,BYTE PTR [rbp-0xc]
  40646e:	mov    edi,eax
  406470:	call   40644a <_start@@Base+0x1ba>
  406475:	mov    rdx,QWORD PTR [rbp-0x8]
  406479:	mov    BYTE PTR [rdx],al
  40647b:	nop
  40647c:	leave  
  40647d:	ret    
  40647e:	push   rbp
  40647f:	mov    rbp,rsp
  406482:	mov    eax,edi
  406484:	mov    WORD PTR [rbp-0x4],ax
  406488:	movzx  eax,WORD PTR [rbp-0x4]
  40648c:	pop    rbp
  40648d:	ret    
  40648e:	push   rbp
  40648f:	mov    rbp,rsp
  406492:	sub    rsp,0x10
  406496:	mov    QWORD PTR [rbp-0x8],rdi
  40649a:	mov    eax,esi
  40649c:	mov    WORD PTR [rbp-0xc],ax
  4064a0:	movsx  eax,WORD PTR [rbp-0xc]
  4064a4:	mov    edi,eax
  4064a6:	call   40647e <_start@@Base+0x1ee>
  4064ab:	mov    edx,eax
  4064ad:	mov    rax,QWORD PTR [rbp-0x8]
  4064b1:	mov    WORD PTR [rax],dx
  4064b4:	nop
  4064b5:	leave  
  4064b6:	ret    
  4064b7:	push   rbp
  4064b8:	mov    rbp,rsp
  4064bb:	mov    DWORD PTR [rbp-0x4],edi
  4064be:	mov    eax,DWORD PTR [rbp-0x4]
  4064c1:	pop    rbp
  4064c2:	ret    
  4064c3:	push   rbp
  4064c4:	mov    rbp,rsp
  4064c7:	sub    rsp,0x10
  4064cb:	mov    QWORD PTR [rbp-0x8],rdi
  4064cf:	mov    DWORD PTR [rbp-0xc],esi
  4064d2:	mov    eax,DWORD PTR [rbp-0xc]
  4064d5:	mov    edi,eax
  4064d7:	call   4064b7 <_start@@Base+0x227>
  4064dc:	mov    edx,eax
  4064de:	mov    rax,QWORD PTR [rbp-0x8]
  4064e2:	mov    DWORD PTR [rax],edx
  4064e4:	nop
  4064e5:	leave  
  4064e6:	ret    
  4064e7:	push   rbp
  4064e8:	mov    rbp,rsp
  4064eb:	mov    QWORD PTR [rbp-0x8],rdi
  4064ef:	mov    rax,QWORD PTR [rbp-0x8]
  4064f3:	pop    rbp
  4064f4:	ret    
  4064f5:	push   rbp
  4064f6:	mov    rbp,rsp
  4064f9:	sub    rsp,0x10
  4064fd:	mov    QWORD PTR [rbp-0x8],rdi
  406501:	mov    QWORD PTR [rbp-0x10],rsi
  406505:	mov    rax,QWORD PTR [rbp-0x10]
  406509:	mov    rdi,rax
  40650c:	call   4064e7 <_start@@Base+0x257>
  406511:	mov    rdx,rax
  406514:	mov    rax,QWORD PTR [rbp-0x8]
  406518:	mov    QWORD PTR [rax],rdx
  40651b:	nop
  40651c:	leave  
  40651d:	ret    
  40651e:	push   rbp
  40651f:	mov    rbp,rsp
  406522:	vmovss DWORD PTR [rbp-0x14],xmm0
  406527:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40652c:	vmovss DWORD PTR [rbp-0x4],xmm0
  406531:	mov    eax,DWORD PTR [rbp-0x4]
  406534:	mov    DWORD PTR [rbp-0x4],eax
  406537:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40653c:	pop    rbp
  40653d:	ret    
  40653e:	push   rbp
  40653f:	mov    rbp,rsp
  406542:	sub    rsp,0x10
  406546:	mov    QWORD PTR [rbp-0x8],rdi
  40654a:	vmovss DWORD PTR [rbp-0xc],xmm0
  40654f:	mov    eax,DWORD PTR [rbp-0xc]
  406552:	vmovd  xmm0,eax
  406556:	call   40651e <_start@@Base+0x28e>
  40655b:	vmovd  eax,xmm0
  40655f:	mov    rdx,QWORD PTR [rbp-0x8]
  406563:	mov    DWORD PTR [rdx],eax
  406565:	nop
  406566:	leave  
  406567:	ret    
  406568:	push   rbp
  406569:	mov    rbp,rsp
  40656c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  406571:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  406576:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40657b:	mov    rax,QWORD PTR [rbp-0x8]
  40657f:	mov    QWORD PTR [rbp-0x8],rax
  406583:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  406588:	vmovq  rax,xmm0
  40658d:	vmovq  xmm0,rax
  406592:	pop    rbp
  406593:	ret    
  406594:	push   rbp
  406595:	mov    rbp,rsp
  406598:	sub    rsp,0x10
  40659c:	mov    QWORD PTR [rbp-0x8],rdi
  4065a0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4065a5:	mov    rax,QWORD PTR [rbp-0x10]
  4065a9:	vmovq  xmm0,rax
  4065ae:	call   406568 <_start@@Base+0x2d8>
  4065b3:	vmovq  rax,xmm0
  4065b8:	mov    rdx,QWORD PTR [rbp-0x8]
  4065bc:	mov    QWORD PTR [rdx],rax
  4065bf:	nop
  4065c0:	leave  
  4065c1:	ret    
  4065c2:	push   rbp
  4065c3:	mov    rbp,rsp
  4065c6:	mov    eax,edi
  4065c8:	mov    BYTE PTR [rbp-0x4],al
  4065cb:	movzx  eax,BYTE PTR [rbp-0x4]
  4065cf:	pop    rbp
  4065d0:	ret    
  4065d1:	push   rbp
  4065d2:	mov    rbp,rsp
  4065d5:	sub    rsp,0x10
  4065d9:	mov    QWORD PTR [rbp-0x8],rdi
  4065dd:	mov    eax,esi
  4065df:	mov    BYTE PTR [rbp-0xc],al
  4065e2:	movzx  eax,BYTE PTR [rbp-0xc]
  4065e6:	mov    edi,eax
  4065e8:	call   4065c2 <_start@@Base+0x332>
  4065ed:	mov    rdx,QWORD PTR [rbp-0x8]
  4065f1:	mov    BYTE PTR [rdx],al
  4065f3:	nop
  4065f4:	leave  
  4065f5:	ret    
  4065f6:	push   rbp
  4065f7:	mov    rbp,rsp
  4065fa:	sub    rsp,0x30
  4065fe:	mov    QWORD PTR [rbp-0x8],rdi
  406602:	mov    QWORD PTR [rbp-0x10],rsi
  406606:	mov    QWORD PTR [rbp-0x18],rdx
  40660a:	mov    QWORD PTR [rbp-0x20],rcx
  40660e:	mov    DWORD PTR [rbp-0x24],r8d
  406612:	mov    rax,QWORD PTR [rbp-0x8]
  406616:	mov    edx,0x40
  40661b:	mov    esi,0x0
  406620:	mov    rdi,rax
  406623:	call   4061c0 <memset@plt>
  406628:	mov    rax,QWORD PTR [rbp-0x8]
  40662c:	mov    rdx,QWORD PTR [rbp-0x10]
  406630:	mov    QWORD PTR [rax],rdx
  406633:	mov    rax,QWORD PTR [rbp-0x8]
  406637:	mov    rdx,QWORD PTR [rbp-0x18]
  40663b:	mov    QWORD PTR [rax+0x8],rdx
  40663f:	mov    rax,QWORD PTR [rbp-0x8]
  406643:	mov    DWORD PTR [rax+0x14],0x1
  40664a:	mov    rax,QWORD PTR [rbp-0x8]
  40664e:	mov    edx,DWORD PTR [rbp-0x24]
  406651:	mov    DWORD PTR [rax+0x10],edx
  406654:	mov    rax,QWORD PTR [rbp-0x8]
  406658:	mov    rdx,QWORD PTR [rbp-0x18]
  40665c:	mov    QWORD PTR [rax+0x20],rdx
  406660:	mov    rax,QWORD PTR [rbp-0x8]
  406664:	mov    rdx,QWORD PTR [rbp-0x20]
  406668:	mov    QWORD PTR [rax+0x28],rdx
  40666c:	mov    rax,QWORD PTR [rbp-0x8]
  406670:	mov    rdx,QWORD PTR [rbp-0x18]
  406674:	mov    QWORD PTR [rax+0x30],rdx
  406678:	nop
  406679:	leave  
  40667a:	ret    
  40667b:	push   rbp
  40667c:	mov    rbp,rsp
  40667f:	sub    rsp,0x20
  406683:	mov    QWORD PTR [rbp-0x8],rdi
  406687:	mov    QWORD PTR [rbp-0x10],rsi
  40668b:	mov    QWORD PTR [rbp-0x18],rdx
  40668f:	mov    rax,QWORD PTR [rbp-0x18]
  406693:	sub    rax,QWORD PTR [rbp-0x10]
  406697:	cmp    rax,0x1
  40669b:	jle    4066d0 <_start@@Base+0x440>
  40669d:	mov    rax,QWORD PTR [rbp-0x10]
  4066a1:	movzx  eax,BYTE PTR [rax]
  4066a4:	cmp    al,0x20
  4066a6:	jle    4066ae <_start@@Base+0x41e>
  4066a8:	mov    rax,QWORD PTR [rbp-0x10]
  4066ac:	jmp    4066e7 <_start@@Base+0x457>
  4066ae:	mov    rax,QWORD PTR [rbp-0x10]
  4066b2:	movzx  eax,BYTE PTR [rax]
  4066b5:	cmp    al,0x20
  4066b7:	jne    4066d0 <_start@@Base+0x440>
  4066b9:	mov    rax,QWORD PTR [rbp-0x10]
  4066bd:	inc    rax
  4066c0:	movzx  eax,BYTE PTR [rax]
  4066c3:	cmp    al,0x20
  4066c5:	jle    4066d0 <_start@@Base+0x440>
  4066c7:	mov    rax,QWORD PTR [rbp-0x10]
  4066cb:	inc    rax
  4066ce:	jmp    4066e7 <_start@@Base+0x457>
  4066d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4066d4:	mov    rcx,QWORD PTR [rbp-0x10]
  4066d8:	mov    rax,QWORD PTR [rbp-0x8]
  4066dc:	mov    rsi,rcx
  4066df:	mov    rdi,rax
  4066e2:	call   42735d <flatcc_json_parser_space_ext@@Base>
  4066e7:	leave  
  4066e8:	ret    
  4066e9:	push   rbp
  4066ea:	mov    rbp,rsp
  4066ed:	sub    rsp,0x20
  4066f1:	mov    QWORD PTR [rbp-0x8],rdi
  4066f5:	mov    QWORD PTR [rbp-0x10],rsi
  4066f9:	mov    QWORD PTR [rbp-0x18],rdx
  4066fd:	mov    rax,QWORD PTR [rbp-0x10]
  406701:	cmp    rax,QWORD PTR [rbp-0x18]
  406705:	jne    40670d <_start@@Base+0x47d>
  406707:	mov    rax,QWORD PTR [rbp-0x10]
  40670b:	jmp    40673b <_start@@Base+0x4ab>
  40670d:	mov    rax,QWORD PTR [rbp-0x10]
  406711:	movzx  eax,BYTE PTR [rax]
  406714:	cmp    al,0x22
  406716:	jne    406722 <_start@@Base+0x492>
  406718:	inc    QWORD PTR [rbp-0x10]
  40671c:	mov    rax,QWORD PTR [rbp-0x10]
  406720:	jmp    40673b <_start@@Base+0x4ab>
  406722:	mov    rdx,QWORD PTR [rbp-0x18]
  406726:	mov    rsi,QWORD PTR [rbp-0x10]
  40672a:	mov    rax,QWORD PTR [rbp-0x8]
  40672e:	mov    ecx,0x5
  406733:	mov    rdi,rax
  406736:	call   427257 <flatcc_json_parser_set_error@@Base>
  40673b:	leave  
  40673c:	ret    
  40673d:	push   rbp
  40673e:	mov    rbp,rsp
  406741:	mov    QWORD PTR [rbp-0x18],rdi
  406745:	mov    QWORD PTR [rbp-0x20],rsi
  406749:	mov    QWORD PTR [rbp-0x10],0x0
  406751:	mov    rax,QWORD PTR [rbp-0x20]
  406755:	sub    rax,QWORD PTR [rbp-0x18]
  406759:	mov    QWORD PTR [rbp-0x8],rax
  40675d:	cmp    QWORD PTR [rbp-0x8],0x8
  406762:	jbe    40676c <_start@@Base+0x4dc>
  406764:	mov    QWORD PTR [rbp-0x8],0x8
  40676c:	cmp    QWORD PTR [rbp-0x8],0x8
  406771:	ja     40684d <_start@@Base+0x5bd>
  406777:	mov    rax,QWORD PTR [rbp-0x8]
  40677b:	lea    rdx,[rax*4+0x0]
  406783:	lea    rax,[rip+0x2f88a]        # 436014 <_IO_stdin_used@@Base+0x14>
  40678a:	mov    eax,DWORD PTR [rdx+rax*1]
  40678d:	movsxd rdx,eax
  406790:	lea    rax,[rip+0x2f87d]        # 436014 <_IO_stdin_used@@Base+0x14>
  406797:	add    rax,rdx
  40679a:	notrack jmp rax
  40679d:	mov    rax,QWORD PTR [rbp-0x18]
  4067a1:	add    rax,0x7
  4067a5:	movzx  eax,BYTE PTR [rax]
  4067a8:	movsx  rax,al
  4067ac:	or     QWORD PTR [rbp-0x10],rax
  4067b0:	mov    rax,QWORD PTR [rbp-0x18]
  4067b4:	add    rax,0x6
  4067b8:	movzx  eax,BYTE PTR [rax]
  4067bb:	movsx  rax,al
  4067bf:	shl    rax,0x8
  4067c3:	or     QWORD PTR [rbp-0x10],rax
  4067c7:	mov    rax,QWORD PTR [rbp-0x18]
  4067cb:	add    rax,0x5
  4067cf:	movzx  eax,BYTE PTR [rax]
  4067d2:	movsx  rax,al
  4067d6:	shl    rax,0x10
  4067da:	or     QWORD PTR [rbp-0x10],rax
  4067de:	mov    rax,QWORD PTR [rbp-0x18]
  4067e2:	add    rax,0x4
  4067e6:	movzx  eax,BYTE PTR [rax]
  4067e9:	movsx  rax,al
  4067ed:	shl    rax,0x18
  4067f1:	or     QWORD PTR [rbp-0x10],rax
  4067f5:	mov    rax,QWORD PTR [rbp-0x18]
  4067f9:	add    rax,0x3
  4067fd:	movzx  eax,BYTE PTR [rax]
  406800:	movsx  rax,al
  406804:	shl    rax,0x20
  406808:	or     QWORD PTR [rbp-0x10],rax
  40680c:	mov    rax,QWORD PTR [rbp-0x18]
  406810:	add    rax,0x2
  406814:	movzx  eax,BYTE PTR [rax]
  406817:	movsx  rax,al
  40681b:	shl    rax,0x28
  40681f:	or     QWORD PTR [rbp-0x10],rax
  406823:	mov    rax,QWORD PTR [rbp-0x18]
  406827:	inc    rax
  40682a:	movzx  eax,BYTE PTR [rax]
  40682d:	movsx  rax,al
  406831:	shl    rax,0x30
  406835:	or     QWORD PTR [rbp-0x10],rax
  406839:	mov    rax,QWORD PTR [rbp-0x18]
  40683d:	movzx  eax,BYTE PTR [rax]
  406840:	movsx  rax,al
  406844:	shl    rax,0x38
  406848:	or     QWORD PTR [rbp-0x10],rax
  40684c:	nop
  40684d:	mov    rax,QWORD PTR [rbp-0x10]
  406851:	pop    rbp
  406852:	ret    
  406853:	push   rbp
  406854:	mov    rbp,rsp
  406857:	sub    rsp,0x20
  40685b:	mov    QWORD PTR [rbp-0x18],rdi
  40685f:	mov    QWORD PTR [rbp-0x20],rsi
  406863:	mov    rax,QWORD PTR [rbp-0x20]
  406867:	sub    rax,QWORD PTR [rbp-0x18]
  40686b:	mov    QWORD PTR [rbp-0x8],rax
  40686f:	cmp    QWORD PTR [rbp-0x8],0x7
  406874:	jbe    406882 <_start@@Base+0x5f2>
  406876:	mov    rax,QWORD PTR [rbp-0x18]
  40687a:	mov    rax,QWORD PTR [rax]
  40687d:	bswap  rax
  406880:	jmp    406895 <_start@@Base+0x605>
  406882:	mov    rdx,QWORD PTR [rbp-0x20]
  406886:	mov    rax,QWORD PTR [rbp-0x18]
  40688a:	mov    rsi,rdx
  40688d:	mov    rdi,rax
  406890:	call   40673d <_start@@Base+0x4ad>
  406895:	leave  
  406896:	ret    
  406897:	push   rbp
  406898:	mov    rbp,rsp
  40689b:	mov    QWORD PTR [rbp-0x18],rdi
  40689f:	mov    QWORD PTR [rbp-0x20],rsi
  4068a3:	mov    QWORD PTR [rbp-0x28],rdx
  4068a7:	mov    DWORD PTR [rbp-0x2c],ecx
  4068aa:	mov    rax,QWORD PTR [rbp-0x20]
  4068ae:	mov    QWORD PTR [rbp-0x8],rax
  4068b2:	mov    rax,QWORD PTR [rbp-0x28]
  4068b6:	sub    rax,QWORD PTR [rbp-0x20]
  4068ba:	mov    rdx,rax
  4068bd:	mov    eax,DWORD PTR [rbp-0x2c]
  4068c0:	cdqe   
  4068c2:	cmp    rdx,rax
  4068c5:	jg     4068cd <_start@@Base+0x63d>
  4068c7:	mov    rax,QWORD PTR [rbp-0x8]
  4068cb:	jmp    4068f7 <_start@@Base+0x667>
  4068cd:	mov    eax,DWORD PTR [rbp-0x2c]
  4068d0:	movsxd rdx,eax
  4068d3:	mov    rax,QWORD PTR [rbp-0x20]
  4068d7:	add    rax,rdx
  4068da:	movzx  eax,BYTE PTR [rax]
  4068dd:	cmp    al,0x2e
  4068df:	je     4068e7 <_start@@Base+0x657>
  4068e1:	mov    rax,QWORD PTR [rbp-0x8]
  4068e5:	jmp    4068f7 <_start@@Base+0x667>
  4068e7:	mov    eax,DWORD PTR [rbp-0x2c]
  4068ea:	cdqe   
  4068ec:	lea    rdx,[rax+0x1]
  4068f0:	mov    rax,QWORD PTR [rbp-0x20]
  4068f4:	add    rax,rdx
  4068f7:	pop    rbp
  4068f8:	ret    
  4068f9:	push   rbp
  4068fa:	mov    rbp,rsp
  4068fd:	sub    rsp,0x20
  406901:	mov    QWORD PTR [rbp-0x8],rdi
  406905:	mov    QWORD PTR [rbp-0x10],rsi
  406909:	mov    QWORD PTR [rbp-0x18],rdx
  40690d:	mov    rdx,QWORD PTR [rbp-0x18]
  406911:	mov    rcx,QWORD PTR [rbp-0x10]
  406915:	mov    rax,QWORD PTR [rbp-0x8]
  406919:	mov    rsi,rcx
  40691c:	mov    rdi,rax
  40691f:	call   4066e9 <_start@@Base+0x459>
  406924:	mov    QWORD PTR [rbp-0x10],rax
  406928:	mov    rdx,QWORD PTR [rbp-0x18]
  40692c:	mov    rcx,QWORD PTR [rbp-0x10]
  406930:	mov    rax,QWORD PTR [rbp-0x8]
  406934:	mov    rsi,rcx
  406937:	mov    rdi,rax
  40693a:	call   40667b <_start@@Base+0x3eb>
  40693f:	mov    QWORD PTR [rbp-0x10],rax
  406943:	mov    rax,QWORD PTR [rbp-0x10]
  406947:	leave  
  406948:	ret    
  406949:	push   rbp
  40694a:	mov    rbp,rsp
  40694d:	sub    rsp,0x20
  406951:	mov    QWORD PTR [rbp-0x8],rdi
  406955:	mov    QWORD PTR [rbp-0x10],rsi
  406959:	mov    QWORD PTR [rbp-0x18],rdx
  40695d:	mov    QWORD PTR [rbp-0x20],rcx
  406961:	mov    rax,QWORD PTR [rbp-0x10]
  406965:	cmp    rax,QWORD PTR [rbp-0x18]
  406969:	je     406976 <_start@@Base+0x6e6>
  40696b:	mov    rax,QWORD PTR [rbp-0x10]
  40696f:	movzx  eax,BYTE PTR [rax]
  406972:	cmp    al,0x7b
  406974:	je     40699b <_start@@Base+0x70b>
  406976:	mov    rax,QWORD PTR [rbp-0x20]
  40697a:	mov    DWORD PTR [rax],0x0
  406980:	mov    rdx,QWORD PTR [rbp-0x18]
  406984:	mov    rsi,QWORD PTR [rbp-0x10]
  406988:	mov    rax,QWORD PTR [rbp-0x8]
  40698c:	mov    ecx,0x15
  406991:	mov    rdi,rax
  406994:	call   427257 <flatcc_json_parser_set_error@@Base>
  406999:	jmp    406a04 <_start@@Base+0x774>
  40699b:	mov    rax,QWORD PTR [rbp-0x10]
  40699f:	lea    rcx,[rax+0x1]
  4069a3:	mov    rdx,QWORD PTR [rbp-0x18]
  4069a7:	mov    rax,QWORD PTR [rbp-0x8]
  4069ab:	mov    rsi,rcx
  4069ae:	mov    rdi,rax
  4069b1:	call   40667b <_start@@Base+0x3eb>
  4069b6:	mov    QWORD PTR [rbp-0x10],rax
  4069ba:	mov    rax,QWORD PTR [rbp-0x10]
  4069be:	cmp    rax,QWORD PTR [rbp-0x18]
  4069c2:	je     4069f6 <_start@@Base+0x766>
  4069c4:	mov    rax,QWORD PTR [rbp-0x10]
  4069c8:	movzx  eax,BYTE PTR [rax]
  4069cb:	cmp    al,0x7d
  4069cd:	jne    4069f6 <_start@@Base+0x766>
  4069cf:	mov    rax,QWORD PTR [rbp-0x20]
  4069d3:	mov    DWORD PTR [rax],0x0
  4069d9:	mov    rax,QWORD PTR [rbp-0x10]
  4069dd:	lea    rcx,[rax+0x1]
  4069e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4069e5:	mov    rax,QWORD PTR [rbp-0x8]
  4069e9:	mov    rsi,rcx
  4069ec:	mov    rdi,rax
  4069ef:	call   40667b <_start@@Base+0x3eb>
  4069f4:	jmp    406a04 <_start@@Base+0x774>
  4069f6:	mov    rax,QWORD PTR [rbp-0x20]
  4069fa:	mov    DWORD PTR [rax],0x1
  406a00:	mov    rax,QWORD PTR [rbp-0x10]
  406a04:	leave  
  406a05:	ret    
  406a06:	push   rbp
  406a07:	mov    rbp,rsp
  406a0a:	sub    rsp,0x20
  406a0e:	mov    QWORD PTR [rbp-0x8],rdi
  406a12:	mov    QWORD PTR [rbp-0x10],rsi
  406a16:	mov    QWORD PTR [rbp-0x18],rdx
  406a1a:	mov    QWORD PTR [rbp-0x20],rcx
  406a1e:	mov    rdx,QWORD PTR [rbp-0x18]
  406a22:	mov    rcx,QWORD PTR [rbp-0x10]
  406a26:	mov    rax,QWORD PTR [rbp-0x8]
  406a2a:	mov    rsi,rcx
  406a2d:	mov    rdi,rax
  406a30:	call   40667b <_start@@Base+0x3eb>
  406a35:	mov    QWORD PTR [rbp-0x10],rax
  406a39:	mov    rax,QWORD PTR [rbp-0x10]
  406a3d:	cmp    rax,QWORD PTR [rbp-0x18]
  406a41:	jne    406a56 <_start@@Base+0x7c6>
  406a43:	mov    rax,QWORD PTR [rbp-0x20]
  406a47:	mov    DWORD PTR [rax],0x0
  406a4d:	mov    rax,QWORD PTR [rbp-0x10]
  406a51:	jmp    406b42 <_start@@Base+0x8b2>
  406a56:	mov    rax,QWORD PTR [rbp-0x10]
  406a5a:	movzx  eax,BYTE PTR [rax]
  406a5d:	cmp    al,0x2c
  406a5f:	je     406ab4 <_start@@Base+0x824>
  406a61:	mov    rax,QWORD PTR [rbp-0x20]
  406a65:	mov    DWORD PTR [rax],0x0
  406a6b:	mov    rax,QWORD PTR [rbp-0x10]
  406a6f:	movzx  eax,BYTE PTR [rax]
  406a72:	cmp    al,0x7d
  406a74:	je     406a94 <_start@@Base+0x804>
  406a76:	mov    rdx,QWORD PTR [rbp-0x18]
  406a7a:	mov    rsi,QWORD PTR [rbp-0x10]
  406a7e:	mov    rax,QWORD PTR [rbp-0x8]
  406a82:	mov    ecx,0xa
  406a87:	mov    rdi,rax
  406a8a:	call   427257 <flatcc_json_parser_set_error@@Base>
  406a8f:	jmp    406b42 <_start@@Base+0x8b2>
  406a94:	mov    rax,QWORD PTR [rbp-0x10]
  406a98:	lea    rcx,[rax+0x1]
  406a9c:	mov    rdx,QWORD PTR [rbp-0x18]
  406aa0:	mov    rax,QWORD PTR [rbp-0x8]
  406aa4:	mov    rsi,rcx
  406aa7:	mov    rdi,rax
  406aaa:	call   40667b <_start@@Base+0x3eb>
  406aaf:	jmp    406b42 <_start@@Base+0x8b2>
  406ab4:	mov    rax,QWORD PTR [rbp-0x10]
  406ab8:	lea    rcx,[rax+0x1]
  406abc:	mov    rdx,QWORD PTR [rbp-0x18]
  406ac0:	mov    rax,QWORD PTR [rbp-0x8]
  406ac4:	mov    rsi,rcx
  406ac7:	mov    rdi,rax
  406aca:	call   40667b <_start@@Base+0x3eb>
  406acf:	mov    QWORD PTR [rbp-0x10],rax
  406ad3:	mov    rax,QWORD PTR [rbp-0x10]
  406ad7:	cmp    rax,QWORD PTR [rbp-0x18]
  406adb:	jne    406b02 <_start@@Base+0x872>
  406add:	mov    rax,QWORD PTR [rbp-0x20]
  406ae1:	mov    DWORD PTR [rax],0x0
  406ae7:	mov    rdx,QWORD PTR [rbp-0x18]
  406aeb:	mov    rsi,QWORD PTR [rbp-0x10]
  406aef:	mov    rax,QWORD PTR [rbp-0x8]
  406af3:	mov    ecx,0xa
  406af8:	mov    rdi,rax
  406afb:	call   427257 <flatcc_json_parser_set_error@@Base>
  406b00:	jmp    406b42 <_start@@Base+0x8b2>
  406b02:	mov    rax,QWORD PTR [rbp-0x10]
  406b06:	movzx  eax,BYTE PTR [rax]
  406b09:	cmp    al,0x7d
  406b0b:	jne    406b34 <_start@@Base+0x8a4>
  406b0d:	mov    rax,QWORD PTR [rbp-0x20]
  406b11:	mov    DWORD PTR [rax],0x0
  406b17:	mov    rax,QWORD PTR [rbp-0x10]
  406b1b:	lea    rcx,[rax+0x1]
  406b1f:	mov    rdx,QWORD PTR [rbp-0x18]
  406b23:	mov    rax,QWORD PTR [rbp-0x8]
  406b27:	mov    rsi,rcx
  406b2a:	mov    rdi,rax
  406b2d:	call   40667b <_start@@Base+0x3eb>
  406b32:	jmp    406b42 <_start@@Base+0x8b2>
  406b34:	mov    rax,QWORD PTR [rbp-0x20]
  406b38:	mov    DWORD PTR [rax],0x1
  406b3e:	mov    rax,QWORD PTR [rbp-0x10]
  406b42:	leave  
  406b43:	ret    
  406b44:	push   rbp
  406b45:	mov    rbp,rsp
  406b48:	sub    rsp,0x20
  406b4c:	mov    QWORD PTR [rbp-0x8],rdi
  406b50:	mov    QWORD PTR [rbp-0x10],rsi
  406b54:	mov    QWORD PTR [rbp-0x18],rdx
  406b58:	mov    QWORD PTR [rbp-0x20],rcx
  406b5c:	mov    rax,QWORD PTR [rbp-0x10]
  406b60:	cmp    rax,QWORD PTR [rbp-0x18]
  406b64:	je     406b71 <_start@@Base+0x8e1>
  406b66:	mov    rax,QWORD PTR [rbp-0x10]
  406b6a:	movzx  eax,BYTE PTR [rax]
  406b6d:	cmp    al,0x5b
  406b6f:	je     406b96 <_start@@Base+0x906>
  406b71:	mov    rax,QWORD PTR [rbp-0x20]
  406b75:	mov    DWORD PTR [rax],0x0
  406b7b:	mov    rdx,QWORD PTR [rbp-0x18]
  406b7f:	mov    rsi,QWORD PTR [rbp-0x10]
  406b83:	mov    rax,QWORD PTR [rbp-0x8]
  406b87:	mov    ecx,0x16
  406b8c:	mov    rdi,rax
  406b8f:	call   427257 <flatcc_json_parser_set_error@@Base>
  406b94:	jmp    406bff <_start@@Base+0x96f>
  406b96:	mov    rax,QWORD PTR [rbp-0x10]
  406b9a:	lea    rcx,[rax+0x1]
  406b9e:	mov    rdx,QWORD PTR [rbp-0x18]
  406ba2:	mov    rax,QWORD PTR [rbp-0x8]
  406ba6:	mov    rsi,rcx
  406ba9:	mov    rdi,rax
  406bac:	call   40667b <_start@@Base+0x3eb>
  406bb1:	mov    QWORD PTR [rbp-0x10],rax
  406bb5:	mov    rax,QWORD PTR [rbp-0x10]
  406bb9:	cmp    rax,QWORD PTR [rbp-0x18]
  406bbd:	je     406bf1 <_start@@Base+0x961>
  406bbf:	mov    rax,QWORD PTR [rbp-0x10]
  406bc3:	movzx  eax,BYTE PTR [rax]
  406bc6:	cmp    al,0x5d
  406bc8:	jne    406bf1 <_start@@Base+0x961>
  406bca:	mov    rax,QWORD PTR [rbp-0x20]
  406bce:	mov    DWORD PTR [rax],0x0
  406bd4:	mov    rax,QWORD PTR [rbp-0x10]
  406bd8:	lea    rcx,[rax+0x1]
  406bdc:	mov    rdx,QWORD PTR [rbp-0x18]
  406be0:	mov    rax,QWORD PTR [rbp-0x8]
  406be4:	mov    rsi,rcx
  406be7:	mov    rdi,rax
  406bea:	call   40667b <_start@@Base+0x3eb>
  406bef:	jmp    406bff <_start@@Base+0x96f>
  406bf1:	mov    rax,QWORD PTR [rbp-0x20]
  406bf5:	mov    DWORD PTR [rax],0x1
  406bfb:	mov    rax,QWORD PTR [rbp-0x10]
  406bff:	leave  
  406c00:	ret    
  406c01:	push   rbp
  406c02:	mov    rbp,rsp
  406c05:	sub    rsp,0x20
  406c09:	mov    QWORD PTR [rbp-0x8],rdi
  406c0d:	mov    QWORD PTR [rbp-0x10],rsi
  406c11:	mov    QWORD PTR [rbp-0x18],rdx
  406c15:	mov    QWORD PTR [rbp-0x20],rcx
  406c19:	mov    rdx,QWORD PTR [rbp-0x18]
  406c1d:	mov    rcx,QWORD PTR [rbp-0x10]
  406c21:	mov    rax,QWORD PTR [rbp-0x8]
  406c25:	mov    rsi,rcx
  406c28:	mov    rdi,rax
  406c2b:	call   40667b <_start@@Base+0x3eb>
  406c30:	mov    QWORD PTR [rbp-0x10],rax
  406c34:	mov    rax,QWORD PTR [rbp-0x10]
  406c38:	cmp    rax,QWORD PTR [rbp-0x18]
  406c3c:	jne    406c51 <_start@@Base+0x9c1>
  406c3e:	mov    rax,QWORD PTR [rbp-0x20]
  406c42:	mov    DWORD PTR [rax],0x0
  406c48:	mov    rax,QWORD PTR [rbp-0x10]
  406c4c:	jmp    406d3d <_start@@Base+0xaad>
  406c51:	mov    rax,QWORD PTR [rbp-0x10]
  406c55:	movzx  eax,BYTE PTR [rax]
  406c58:	cmp    al,0x2c
  406c5a:	je     406caf <_start@@Base+0xa1f>
  406c5c:	mov    rax,QWORD PTR [rbp-0x20]
  406c60:	mov    DWORD PTR [rax],0x0
  406c66:	mov    rax,QWORD PTR [rbp-0x10]
  406c6a:	movzx  eax,BYTE PTR [rax]
  406c6d:	cmp    al,0x5d
  406c6f:	je     406c8f <_start@@Base+0x9ff>
  406c71:	mov    rdx,QWORD PTR [rbp-0x18]
  406c75:	mov    rsi,QWORD PTR [rbp-0x10]
  406c79:	mov    rax,QWORD PTR [rbp-0x8]
  406c7d:	mov    ecx,0x9
  406c82:	mov    rdi,rax
  406c85:	call   427257 <flatcc_json_parser_set_error@@Base>
  406c8a:	jmp    406d3d <_start@@Base+0xaad>
  406c8f:	mov    rax,QWORD PTR [rbp-0x10]
  406c93:	lea    rcx,[rax+0x1]
  406c97:	mov    rdx,QWORD PTR [rbp-0x18]
  406c9b:	mov    rax,QWORD PTR [rbp-0x8]
  406c9f:	mov    rsi,rcx
  406ca2:	mov    rdi,rax
  406ca5:	call   40667b <_start@@Base+0x3eb>
  406caa:	jmp    406d3d <_start@@Base+0xaad>
  406caf:	mov    rax,QWORD PTR [rbp-0x10]
  406cb3:	lea    rcx,[rax+0x1]
  406cb7:	mov    rdx,QWORD PTR [rbp-0x18]
  406cbb:	mov    rax,QWORD PTR [rbp-0x8]
  406cbf:	mov    rsi,rcx
  406cc2:	mov    rdi,rax
  406cc5:	call   40667b <_start@@Base+0x3eb>
  406cca:	mov    QWORD PTR [rbp-0x10],rax
  406cce:	mov    rax,QWORD PTR [rbp-0x10]
  406cd2:	cmp    rax,QWORD PTR [rbp-0x18]
  406cd6:	jne    406cfd <_start@@Base+0xa6d>
  406cd8:	mov    rax,QWORD PTR [rbp-0x20]
  406cdc:	mov    DWORD PTR [rax],0x0
  406ce2:	mov    rdx,QWORD PTR [rbp-0x18]
  406ce6:	mov    rsi,QWORD PTR [rbp-0x10]
  406cea:	mov    rax,QWORD PTR [rbp-0x8]
  406cee:	mov    ecx,0x9
  406cf3:	mov    rdi,rax
  406cf6:	call   427257 <flatcc_json_parser_set_error@@Base>
  406cfb:	jmp    406d3d <_start@@Base+0xaad>
  406cfd:	mov    rax,QWORD PTR [rbp-0x10]
  406d01:	movzx  eax,BYTE PTR [rax]
  406d04:	cmp    al,0x5d
  406d06:	jne    406d2f <_start@@Base+0xa9f>
  406d08:	mov    rax,QWORD PTR [rbp-0x20]
  406d0c:	mov    DWORD PTR [rax],0x0
  406d12:	mov    rax,QWORD PTR [rbp-0x10]
  406d16:	lea    rcx,[rax+0x1]
  406d1a:	mov    rdx,QWORD PTR [rbp-0x18]
  406d1e:	mov    rax,QWORD PTR [rbp-0x8]
  406d22:	mov    rsi,rcx
  406d25:	mov    rdi,rax
  406d28:	call   40667b <_start@@Base+0x3eb>
  406d2d:	jmp    406d3d <_start@@Base+0xaad>
  406d2f:	mov    rax,QWORD PTR [rbp-0x20]
  406d33:	mov    DWORD PTR [rax],0x1
  406d39:	mov    rax,QWORD PTR [rbp-0x10]
  406d3d:	leave  
  406d3e:	ret    
  406d3f:	push   rbp
  406d40:	mov    rbp,rsp
  406d43:	sub    rsp,0x30
  406d47:	mov    QWORD PTR [rbp-0x18],rdi
  406d4b:	mov    QWORD PTR [rbp-0x20],rsi
  406d4f:	mov    QWORD PTR [rbp-0x28],rdx
  406d53:	mov    DWORD PTR [rbp-0x2c],ecx
  406d56:	mov    rax,QWORD PTR [rbp-0x20]
  406d5a:	mov    QWORD PTR [rbp-0x8],rax
  406d5e:	mov    rax,QWORD PTR [rbp-0x28]
  406d62:	sub    rax,QWORD PTR [rbp-0x20]
  406d66:	mov    rdx,rax
  406d69:	mov    eax,DWORD PTR [rbp-0x2c]
  406d6c:	cdqe   
  406d6e:	cmp    rdx,rax
  406d71:	jg     406d7c <_start@@Base+0xaec>
  406d73:	mov    rax,QWORD PTR [rbp-0x8]
  406d77:	jmp    406e08 <_start@@Base+0xb78>
  406d7c:	mov    eax,DWORD PTR [rbp-0x2c]
  406d7f:	movsxd rdx,eax
  406d82:	mov    rax,QWORD PTR [rbp-0x20]
  406d86:	add    rax,rdx
  406d89:	movzx  eax,BYTE PTR [rax]
  406d8c:	cmp    al,0x22
  406d8e:	je     406d96 <_start@@Base+0xb06>
  406d90:	mov    rax,QWORD PTR [rbp-0x8]
  406d94:	jmp    406e08 <_start@@Base+0xb78>
  406d96:	mov    eax,DWORD PTR [rbp-0x2c]
  406d99:	cdqe   
  406d9b:	inc    rax
  406d9e:	add    QWORD PTR [rbp-0x20],rax
  406da2:	mov    rdx,QWORD PTR [rbp-0x28]
  406da6:	mov    rcx,QWORD PTR [rbp-0x20]
  406daa:	mov    rax,QWORD PTR [rbp-0x18]
  406dae:	mov    rsi,rcx
  406db1:	mov    rdi,rax
  406db4:	call   40667b <_start@@Base+0x3eb>
  406db9:	mov    QWORD PTR [rbp-0x20],rax
  406dbd:	mov    rax,QWORD PTR [rbp-0x20]
  406dc1:	cmp    rax,QWORD PTR [rbp-0x28]
  406dc5:	je     406def <_start@@Base+0xb5f>
  406dc7:	mov    rax,QWORD PTR [rbp-0x20]
  406dcb:	movzx  eax,BYTE PTR [rax]
  406dce:	cmp    al,0x3a
  406dd0:	jne    406def <_start@@Base+0xb5f>
  406dd2:	inc    QWORD PTR [rbp-0x20]
  406dd6:	mov    rdx,QWORD PTR [rbp-0x28]
  406dda:	mov    rcx,QWORD PTR [rbp-0x20]
  406dde:	mov    rax,QWORD PTR [rbp-0x18]
  406de2:	mov    rsi,rcx
  406de5:	mov    rdi,rax
  406de8:	call   40667b <_start@@Base+0x3eb>
  406ded:	jmp    406e08 <_start@@Base+0xb78>
  406def:	mov    rdx,QWORD PTR [rbp-0x28]
  406df3:	mov    rsi,QWORD PTR [rbp-0x20]
  406df7:	mov    rax,QWORD PTR [rbp-0x18]
  406dfb:	mov    ecx,0x4
  406e00:	mov    rdi,rax
  406e03:	call   427257 <flatcc_json_parser_set_error@@Base>
  406e08:	leave  
  406e09:	ret    
  406e0a:	push   rbp
  406e0b:	mov    rbp,rsp
  406e0e:	sub    rsp,0x30
  406e12:	mov    QWORD PTR [rbp-0x8],rdi
  406e16:	mov    QWORD PTR [rbp-0x10],rsi
  406e1a:	mov    QWORD PTR [rbp-0x18],rdx
  406e1e:	mov    DWORD PTR [rbp-0x1c],ecx
  406e21:	mov    QWORD PTR [rbp-0x28],r8
  406e25:	mov    QWORD PTR [rbp-0x30],r9
  406e29:	cmp    DWORD PTR [rbp-0x1c],0x0
  406e2d:	je     406e4a <_start@@Base+0xbba>
  406e2f:	mov    rdx,QWORD PTR [rbp-0x18]
  406e33:	mov    rsi,QWORD PTR [rbp-0x10]
  406e37:	mov    rax,QWORD PTR [rbp-0x8]
  406e3b:	mov    ecx,0x8
  406e40:	mov    rdi,rax
  406e43:	call   427257 <flatcc_json_parser_set_error@@Base>
  406e48:	jmp    406e59 <_start@@Base+0xbc9>
  406e4a:	mov    rax,QWORD PTR [rbp-0x30]
  406e4e:	mov    rdx,QWORD PTR [rbp-0x28]
  406e52:	mov    QWORD PTR [rax],rdx
  406e55:	mov    rax,QWORD PTR [rbp-0x10]
  406e59:	leave  
  406e5a:	ret    
  406e5b:	push   rbp
  406e5c:	mov    rbp,rsp
  406e5f:	sub    rsp,0x30
  406e63:	mov    QWORD PTR [rbp-0x8],rdi
  406e67:	mov    QWORD PTR [rbp-0x10],rsi
  406e6b:	mov    QWORD PTR [rbp-0x18],rdx
  406e6f:	mov    DWORD PTR [rbp-0x1c],ecx
  406e72:	mov    QWORD PTR [rbp-0x28],r8
  406e76:	mov    QWORD PTR [rbp-0x30],r9
  406e7a:	cmp    DWORD PTR [rbp-0x1c],0x0
  406e7e:	je     406e9b <_start@@Base+0xc0b>
  406e80:	mov    rdx,QWORD PTR [rbp-0x18]
  406e84:	mov    rsi,QWORD PTR [rbp-0x10]
  406e88:	mov    rax,QWORD PTR [rbp-0x8]
  406e8c:	mov    ecx,0x8
  406e91:	mov    rdi,rax
  406e94:	call   427257 <flatcc_json_parser_set_error@@Base>
  406e99:	jmp    406eaf <_start@@Base+0xc1f>
  406e9b:	cmp    QWORD PTR [rbp-0x28],0x0
  406ea0:	setne  al
  406ea3:	mov    edx,eax
  406ea5:	mov    rax,QWORD PTR [rbp-0x30]
  406ea9:	mov    BYTE PTR [rax],dl
  406eab:	mov    rax,QWORD PTR [rbp-0x10]
  406eaf:	leave  
  406eb0:	ret    
  406eb1:	push   rbp
  406eb2:	mov    rbp,rsp
  406eb5:	sub    rsp,0x30
  406eb9:	mov    QWORD PTR [rbp-0x8],rdi
  406ebd:	mov    QWORD PTR [rbp-0x10],rsi
  406ec1:	mov    QWORD PTR [rbp-0x18],rdx
  406ec5:	mov    DWORD PTR [rbp-0x1c],ecx
  406ec8:	mov    QWORD PTR [rbp-0x28],r8
  406ecc:	mov    QWORD PTR [rbp-0x30],r9
  406ed0:	cmp    DWORD PTR [rbp-0x1c],0x0
  406ed4:	je     406ef1 <_start@@Base+0xc61>
  406ed6:	mov    rdx,QWORD PTR [rbp-0x18]
  406eda:	mov    rsi,QWORD PTR [rbp-0x10]
  406ede:	mov    rax,QWORD PTR [rbp-0x8]
  406ee2:	mov    ecx,0x8
  406ee7:	mov    rdi,rax
  406eea:	call   427257 <flatcc_json_parser_set_error@@Base>
  406eef:	jmp    406f27 <_start@@Base+0xc97>
  406ef1:	mov    eax,0xffffffff
  406ef6:	cmp    QWORD PTR [rbp-0x28],rax
  406efa:	jbe    406f17 <_start@@Base+0xc87>
  406efc:	mov    rdx,QWORD PTR [rbp-0x18]
  406f00:	mov    rsi,QWORD PTR [rbp-0x10]
  406f04:	mov    rax,QWORD PTR [rbp-0x8]
  406f08:	mov    ecx,0x7
  406f0d:	mov    rdi,rax
  406f10:	call   427257 <flatcc_json_parser_set_error@@Base>
  406f15:	jmp    406f27 <_start@@Base+0xc97>
  406f17:	mov    rax,QWORD PTR [rbp-0x28]
  406f1b:	mov    edx,eax
  406f1d:	mov    rax,QWORD PTR [rbp-0x30]
  406f21:	mov    DWORD PTR [rax],edx
  406f23:	mov    rax,QWORD PTR [rbp-0x10]
  406f27:	leave  
  406f28:	ret    
  406f29:	push   rbp
  406f2a:	mov    rbp,rsp
  406f2d:	sub    rsp,0x30
  406f31:	mov    QWORD PTR [rbp-0x8],rdi
  406f35:	mov    QWORD PTR [rbp-0x10],rsi
  406f39:	mov    QWORD PTR [rbp-0x18],rdx
  406f3d:	mov    DWORD PTR [rbp-0x1c],ecx
  406f40:	mov    QWORD PTR [rbp-0x28],r8
  406f44:	mov    QWORD PTR [rbp-0x30],r9
  406f48:	cmp    DWORD PTR [rbp-0x1c],0x0
  406f4c:	je     406f69 <_start@@Base+0xcd9>
  406f4e:	mov    rdx,QWORD PTR [rbp-0x18]
  406f52:	mov    rsi,QWORD PTR [rbp-0x10]
  406f56:	mov    rax,QWORD PTR [rbp-0x8]
  406f5a:	mov    ecx,0x8
  406f5f:	mov    rdi,rax
  406f62:	call   427257 <flatcc_json_parser_set_error@@Base>
  406f67:	jmp    406f9f <_start@@Base+0xd0f>
  406f69:	cmp    QWORD PTR [rbp-0x28],0xffff
  406f71:	jbe    406f8e <_start@@Base+0xcfe>
  406f73:	mov    rdx,QWORD PTR [rbp-0x18]
  406f77:	mov    rsi,QWORD PTR [rbp-0x10]
  406f7b:	mov    rax,QWORD PTR [rbp-0x8]
  406f7f:	mov    ecx,0x7
  406f84:	mov    rdi,rax
  406f87:	call   427257 <flatcc_json_parser_set_error@@Base>
  406f8c:	jmp    406f9f <_start@@Base+0xd0f>
  406f8e:	mov    rax,QWORD PTR [rbp-0x28]
  406f92:	mov    edx,eax
  406f94:	mov    rax,QWORD PTR [rbp-0x30]
  406f98:	mov    WORD PTR [rax],dx
  406f9b:	mov    rax,QWORD PTR [rbp-0x10]
  406f9f:	leave  
  406fa0:	ret    
  406fa1:	push   rbp
  406fa2:	mov    rbp,rsp
  406fa5:	sub    rsp,0x30
  406fa9:	mov    QWORD PTR [rbp-0x8],rdi
  406fad:	mov    QWORD PTR [rbp-0x10],rsi
  406fb1:	mov    QWORD PTR [rbp-0x18],rdx
  406fb5:	mov    DWORD PTR [rbp-0x1c],ecx
  406fb8:	mov    QWORD PTR [rbp-0x28],r8
  406fbc:	mov    QWORD PTR [rbp-0x30],r9
  406fc0:	cmp    DWORD PTR [rbp-0x1c],0x0
  406fc4:	je     406fe1 <_start@@Base+0xd51>
  406fc6:	mov    rdx,QWORD PTR [rbp-0x18]
  406fca:	mov    rsi,QWORD PTR [rbp-0x10]
  406fce:	mov    rax,QWORD PTR [rbp-0x8]
  406fd2:	mov    ecx,0x8
  406fd7:	mov    rdi,rax
  406fda:	call   427257 <flatcc_json_parser_set_error@@Base>
  406fdf:	jmp    407016 <_start@@Base+0xd86>
  406fe1:	cmp    QWORD PTR [rbp-0x28],0xff
  406fe9:	jbe    407006 <_start@@Base+0xd76>
  406feb:	mov    rdx,QWORD PTR [rbp-0x18]
  406fef:	mov    rsi,QWORD PTR [rbp-0x10]
  406ff3:	mov    rax,QWORD PTR [rbp-0x8]
  406ff7:	mov    ecx,0x7
  406ffc:	mov    rdi,rax
  406fff:	call   427257 <flatcc_json_parser_set_error@@Base>
  407004:	jmp    407016 <_start@@Base+0xd86>
  407006:	mov    rax,QWORD PTR [rbp-0x28]
  40700a:	mov    edx,eax
  40700c:	mov    rax,QWORD PTR [rbp-0x30]
  407010:	mov    BYTE PTR [rax],dl
  407012:	mov    rax,QWORD PTR [rbp-0x10]
  407016:	leave  
  407017:	ret    
  407018:	push   rbp
  407019:	mov    rbp,rsp
  40701c:	sub    rsp,0x30
  407020:	mov    QWORD PTR [rbp-0x8],rdi
  407024:	mov    QWORD PTR [rbp-0x10],rsi
  407028:	mov    QWORD PTR [rbp-0x18],rdx
  40702c:	mov    DWORD PTR [rbp-0x1c],ecx
  40702f:	mov    QWORD PTR [rbp-0x28],r8
  407033:	mov    QWORD PTR [rbp-0x30],r9
  407037:	cmp    DWORD PTR [rbp-0x1c],0x0
  40703b:	je     40707b <_start@@Base+0xdeb>
  40703d:	movabs rax,0x8000000000000000
  407047:	cmp    QWORD PTR [rbp-0x28],rax
  40704b:	jbe    407068 <_start@@Base+0xdd8>
  40704d:	mov    rdx,QWORD PTR [rbp-0x18]
  407051:	mov    rsi,QWORD PTR [rbp-0x10]
  407055:	mov    rax,QWORD PTR [rbp-0x8]
  407059:	mov    ecx,0x8
  40705e:	mov    rdi,rax
  407061:	call   427257 <flatcc_json_parser_set_error@@Base>
  407066:	jmp    4070ae <_start@@Base+0xe1e>
  407068:	mov    rax,QWORD PTR [rbp-0x28]
  40706c:	neg    rax
  40706f:	mov    rdx,rax
  407072:	mov    rax,QWORD PTR [rbp-0x30]
  407076:	mov    QWORD PTR [rax],rdx
  407079:	jmp    4070aa <_start@@Base+0xe1a>
  40707b:	mov    rax,QWORD PTR [rbp-0x28]
  40707f:	test   rax,rax
  407082:	jns    40709f <_start@@Base+0xe0f>
  407084:	mov    rdx,QWORD PTR [rbp-0x18]
  407088:	mov    rsi,QWORD PTR [rbp-0x10]
  40708c:	mov    rax,QWORD PTR [rbp-0x8]
  407090:	mov    ecx,0x7
  407095:	mov    rdi,rax
  407098:	call   427257 <flatcc_json_parser_set_error@@Base>
  40709d:	jmp    4070ae <_start@@Base+0xe1e>
  40709f:	mov    rdx,QWORD PTR [rbp-0x28]
  4070a3:	mov    rax,QWORD PTR [rbp-0x30]
  4070a7:	mov    QWORD PTR [rax],rdx
  4070aa:	mov    rax,QWORD PTR [rbp-0x10]
  4070ae:	leave  
  4070af:	ret    
  4070b0:	push   rbp
  4070b1:	mov    rbp,rsp
  4070b4:	sub    rsp,0x30
  4070b8:	mov    QWORD PTR [rbp-0x8],rdi
  4070bc:	mov    QWORD PTR [rbp-0x10],rsi
  4070c0:	mov    QWORD PTR [rbp-0x18],rdx
  4070c4:	mov    DWORD PTR [rbp-0x1c],ecx
  4070c7:	mov    QWORD PTR [rbp-0x28],r8
  4070cb:	mov    QWORD PTR [rbp-0x30],r9
  4070cf:	cmp    DWORD PTR [rbp-0x1c],0x0
  4070d3:	je     40710b <_start@@Base+0xe7b>
  4070d5:	mov    eax,0x80000000
  4070da:	cmp    QWORD PTR [rbp-0x28],rax
  4070de:	jbe    4070fb <_start@@Base+0xe6b>
  4070e0:	mov    rdx,QWORD PTR [rbp-0x18]
  4070e4:	mov    rsi,QWORD PTR [rbp-0x10]
  4070e8:	mov    rax,QWORD PTR [rbp-0x8]
  4070ec:	mov    ecx,0x8
  4070f1:	mov    rdi,rax
  4070f4:	call   427257 <flatcc_json_parser_set_error@@Base>
  4070f9:	jmp    407140 <_start@@Base+0xeb0>
  4070fb:	mov    rax,QWORD PTR [rbp-0x28]
  4070ff:	neg    eax
  407101:	mov    edx,eax
  407103:	mov    rax,QWORD PTR [rbp-0x30]
  407107:	mov    DWORD PTR [rax],edx
  407109:	jmp    40713c <_start@@Base+0xeac>
  40710b:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  407113:	jbe    407130 <_start@@Base+0xea0>
  407115:	mov    rdx,QWORD PTR [rbp-0x18]
  407119:	mov    rsi,QWORD PTR [rbp-0x10]
  40711d:	mov    rax,QWORD PTR [rbp-0x8]
  407121:	mov    ecx,0x7
  407126:	mov    rdi,rax
  407129:	call   427257 <flatcc_json_parser_set_error@@Base>
  40712e:	jmp    407140 <_start@@Base+0xeb0>
  407130:	mov    rax,QWORD PTR [rbp-0x28]
  407134:	mov    edx,eax
  407136:	mov    rax,QWORD PTR [rbp-0x30]
  40713a:	mov    DWORD PTR [rax],edx
  40713c:	mov    rax,QWORD PTR [rbp-0x10]
  407140:	leave  
  407141:	ret    
  407142:	push   rbp
  407143:	mov    rbp,rsp
  407146:	sub    rsp,0x30
  40714a:	mov    QWORD PTR [rbp-0x8],rdi
  40714e:	mov    QWORD PTR [rbp-0x10],rsi
  407152:	mov    QWORD PTR [rbp-0x18],rdx
  407156:	mov    DWORD PTR [rbp-0x1c],ecx
  407159:	mov    QWORD PTR [rbp-0x28],r8
  40715d:	mov    QWORD PTR [rbp-0x30],r9
  407161:	cmp    DWORD PTR [rbp-0x1c],0x0
  407165:	je     40719d <_start@@Base+0xf0d>
  407167:	cmp    QWORD PTR [rbp-0x28],0x8000
  40716f:	jbe    40718c <_start@@Base+0xefc>
  407171:	mov    rdx,QWORD PTR [rbp-0x18]
  407175:	mov    rsi,QWORD PTR [rbp-0x10]
  407179:	mov    rax,QWORD PTR [rbp-0x8]
  40717d:	mov    ecx,0x8
  407182:	mov    rdi,rax
  407185:	call   427257 <flatcc_json_parser_set_error@@Base>
  40718a:	jmp    4071d3 <_start@@Base+0xf43>
  40718c:	mov    rax,QWORD PTR [rbp-0x28]
  407190:	neg    eax
  407192:	mov    edx,eax
  407194:	mov    rax,QWORD PTR [rbp-0x30]
  407198:	mov    WORD PTR [rax],dx
  40719b:	jmp    4071cf <_start@@Base+0xf3f>
  40719d:	cmp    QWORD PTR [rbp-0x28],0x7fff
  4071a5:	jbe    4071c2 <_start@@Base+0xf32>
  4071a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4071ab:	mov    rsi,QWORD PTR [rbp-0x10]
  4071af:	mov    rax,QWORD PTR [rbp-0x8]
  4071b3:	mov    ecx,0x7
  4071b8:	mov    rdi,rax
  4071bb:	call   427257 <flatcc_json_parser_set_error@@Base>
  4071c0:	jmp    4071d3 <_start@@Base+0xf43>
  4071c2:	mov    rax,QWORD PTR [rbp-0x28]
  4071c6:	mov    edx,eax
  4071c8:	mov    rax,QWORD PTR [rbp-0x30]
  4071cc:	mov    WORD PTR [rax],dx
  4071cf:	mov    rax,QWORD PTR [rbp-0x10]
  4071d3:	leave  
  4071d4:	ret    
  4071d5:	push   rbp
  4071d6:	mov    rbp,rsp
  4071d9:	sub    rsp,0x30
  4071dd:	mov    QWORD PTR [rbp-0x8],rdi
  4071e1:	mov    QWORD PTR [rbp-0x10],rsi
  4071e5:	mov    QWORD PTR [rbp-0x18],rdx
  4071e9:	mov    DWORD PTR [rbp-0x1c],ecx
  4071ec:	mov    QWORD PTR [rbp-0x28],r8
  4071f0:	mov    QWORD PTR [rbp-0x30],r9
  4071f4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4071f8:	je     40722f <_start@@Base+0xf9f>
  4071fa:	cmp    QWORD PTR [rbp-0x28],0x80
  407202:	jbe    40721f <_start@@Base+0xf8f>
  407204:	mov    rdx,QWORD PTR [rbp-0x18]
  407208:	mov    rsi,QWORD PTR [rbp-0x10]
  40720c:	mov    rax,QWORD PTR [rbp-0x8]
  407210:	mov    ecx,0x8
  407215:	mov    rdi,rax
  407218:	call   427257 <flatcc_json_parser_set_error@@Base>
  40721d:	jmp    407261 <_start@@Base+0xfd1>
  40721f:	mov    rax,QWORD PTR [rbp-0x28]
  407223:	neg    eax
  407225:	mov    edx,eax
  407227:	mov    rax,QWORD PTR [rbp-0x30]
  40722b:	mov    BYTE PTR [rax],dl
  40722d:	jmp    40725d <_start@@Base+0xfcd>
  40722f:	cmp    QWORD PTR [rbp-0x28],0x7f
  407234:	jbe    407251 <_start@@Base+0xfc1>
  407236:	mov    rdx,QWORD PTR [rbp-0x18]
  40723a:	mov    rsi,QWORD PTR [rbp-0x10]
  40723e:	mov    rax,QWORD PTR [rbp-0x8]
  407242:	mov    ecx,0x7
  407247:	mov    rdi,rax
  40724a:	call   427257 <flatcc_json_parser_set_error@@Base>
  40724f:	jmp    407261 <_start@@Base+0xfd1>
  407251:	mov    rax,QWORD PTR [rbp-0x28]
  407255:	mov    edx,eax
  407257:	mov    rax,QWORD PTR [rbp-0x30]
  40725b:	mov    BYTE PTR [rax],dl
  40725d:	mov    rax,QWORD PTR [rbp-0x10]
  407261:	leave  
  407262:	ret    
  407263:	push   rbp
  407264:	mov    rbp,rsp
  407267:	mov    QWORD PTR [rbp-0x8],rdi
  40726b:	mov    QWORD PTR [rbp-0x10],rsi
  40726f:	mov    QWORD PTR [rbp-0x18],rdx
  407273:	mov    DWORD PTR [rbp-0x1c],ecx
  407276:	mov    QWORD PTR [rbp-0x28],r8
  40727a:	mov    QWORD PTR [rbp-0x30],r9
  40727e:	cmp    DWORD PTR [rbp-0x1c],0x0
  407282:	je     4072b7 <_start@@Base+0x1027>
  407284:	mov    rax,QWORD PTR [rbp-0x28]
  407288:	test   rax,rax
  40728b:	js     407294 <_start@@Base+0x1004>
  40728d:	vcvtsi2ss xmm0,xmm0,rax
  407292:	jmp    4072a9 <_start@@Base+0x1019>
  407294:	mov    rdx,rax
  407297:	shr    rdx,1
  40729a:	and    eax,0x1
  40729d:	or     rdx,rax
  4072a0:	vcvtsi2ss xmm0,xmm0,rdx
  4072a5:	vaddss xmm0,xmm0,xmm0
  4072a9:	vmovss xmm1,DWORD PTR [rip+0x31f4f]        # 439200 <_IO_stdin_used@@Base+0x3200>
  4072b1:	vxorps xmm0,xmm0,xmm1
  4072b5:	jmp    4072dc <_start@@Base+0x104c>
  4072b7:	mov    rax,QWORD PTR [rbp-0x28]
  4072bb:	test   rax,rax
  4072be:	js     4072c7 <_start@@Base+0x1037>
  4072c0:	vcvtsi2ss xmm0,xmm0,rax
  4072c5:	jmp    4072dc <_start@@Base+0x104c>
  4072c7:	mov    rdx,rax
  4072ca:	shr    rdx,1
  4072cd:	and    eax,0x1
  4072d0:	or     rdx,rax
  4072d3:	vcvtsi2ss xmm0,xmm0,rdx
  4072d8:	vaddss xmm0,xmm0,xmm0
  4072dc:	mov    rax,QWORD PTR [rbp-0x30]
  4072e0:	vmovss DWORD PTR [rax],xmm0
  4072e4:	mov    rax,QWORD PTR [rbp-0x10]
  4072e8:	pop    rbp
  4072e9:	ret    
  4072ea:	push   rbp
  4072eb:	mov    rbp,rsp
  4072ee:	mov    QWORD PTR [rbp-0x8],rdi
  4072f2:	mov    QWORD PTR [rbp-0x10],rsi
  4072f6:	mov    QWORD PTR [rbp-0x18],rdx
  4072fa:	mov    DWORD PTR [rbp-0x1c],ecx
  4072fd:	mov    QWORD PTR [rbp-0x28],r8
  407301:	mov    QWORD PTR [rbp-0x30],r9
  407305:	cmp    DWORD PTR [rbp-0x1c],0x0
  407309:	je     40733e <_start@@Base+0x10ae>
  40730b:	mov    rax,QWORD PTR [rbp-0x28]
  40730f:	test   rax,rax
  407312:	js     40731b <_start@@Base+0x108b>
  407314:	vcvtsi2sd xmm0,xmm0,rax
  407319:	jmp    407330 <_start@@Base+0x10a0>
  40731b:	mov    rdx,rax
  40731e:	shr    rdx,1
  407321:	and    eax,0x1
  407324:	or     rdx,rax
  407327:	vcvtsi2sd xmm0,xmm0,rdx
  40732c:	vaddsd xmm0,xmm0,xmm0
  407330:	vmovq  xmm1,QWORD PTR [rip+0x31ed8]        # 439210 <_IO_stdin_used@@Base+0x3210>
  407338:	vxorpd xmm0,xmm0,xmm1
  40733c:	jmp    407363 <_start@@Base+0x10d3>
  40733e:	mov    rax,QWORD PTR [rbp-0x28]
  407342:	test   rax,rax
  407345:	js     40734e <_start@@Base+0x10be>
  407347:	vcvtsi2sd xmm0,xmm0,rax
  40734c:	jmp    407363 <_start@@Base+0x10d3>
  40734e:	mov    rdx,rax
  407351:	shr    rdx,1
  407354:	and    eax,0x1
  407357:	or     rdx,rax
  40735a:	vcvtsi2sd xmm0,xmm0,rdx
  40735f:	vaddsd xmm0,xmm0,xmm0
  407363:	mov    rax,QWORD PTR [rbp-0x30]
  407367:	vmovsd QWORD PTR [rax],xmm0
  40736b:	mov    rax,QWORD PTR [rbp-0x10]
  40736f:	pop    rbp
  407370:	ret    
  407371:	push   rbp
  407372:	mov    rbp,rsp
  407375:	sub    rsp,0x20
  407379:	mov    QWORD PTR [rbp-0x8],rdi
  40737d:	mov    QWORD PTR [rbp-0x10],rsi
  407381:	mov    QWORD PTR [rbp-0x18],rdx
  407385:	mov    rax,QWORD PTR [rbp-0x18]
  407389:	sub    rax,QWORD PTR [rbp-0x10]
  40738d:	cmp    rax,0x3
  407391:	jle    4073b9 <_start@@Base+0x1129>
  407393:	mov    rax,QWORD PTR [rbp-0x10]
  407397:	mov    edx,0x4
  40739c:	lea    rsi,[rip+0x2ec95]        # 436038 <_IO_stdin_used@@Base+0x38>
  4073a3:	mov    rdi,rax
  4073a6:	call   4061f0 <memcmp@plt>
  4073ab:	test   eax,eax
  4073ad:	jne    4073b9 <_start@@Base+0x1129>
  4073af:	mov    rax,QWORD PTR [rbp-0x10]
  4073b3:	add    rax,0x4
  4073b7:	jmp    4073d2 <_start@@Base+0x1142>
  4073b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4073bd:	mov    rsi,QWORD PTR [rbp-0x10]
  4073c1:	mov    rax,QWORD PTR [rbp-0x8]
  4073c5:	mov    ecx,0x1a
  4073ca:	mov    rdi,rax
  4073cd:	call   427257 <flatcc_json_parser_set_error@@Base>
  4073d2:	leave  
  4073d3:	ret    
  4073d4:	push   rbp
  4073d5:	mov    rbp,rsp
  4073d8:	sub    rsp,0x40
  4073dc:	mov    QWORD PTR [rbp-0x28],rdi
  4073e0:	mov    QWORD PTR [rbp-0x30],rsi
  4073e4:	mov    QWORD PTR [rbp-0x38],rdx
  4073e8:	mov    QWORD PTR [rbp-0x40],rcx
  4073ec:	mov    rax,QWORD PTR fs:0x28
  4073f5:	mov    QWORD PTR [rbp-0x8],rax
  4073f9:	xor    eax,eax
  4073fb:	mov    QWORD PTR [rbp-0x18],0x0
  407403:	mov    DWORD PTR [rbp-0x1c],0x0
  40740a:	mov    rax,QWORD PTR [rbp-0x30]
  40740e:	mov    QWORD PTR [rbp-0x10],rax
  407412:	mov    rax,QWORD PTR [rbp-0x40]
  407416:	mov    QWORD PTR [rax],0x0
  40741d:	mov    rax,QWORD PTR [rbp-0x30]
  407421:	cmp    rax,QWORD PTR [rbp-0x38]
  407425:	jne    40742d <_start@@Base+0x119d>
  407427:	mov    rax,QWORD PTR [rbp-0x30]
  40742b:	jmp    407485 <_start@@Base+0x11f5>
  40742d:	lea    rdi,[rbp-0x18]
  407431:	lea    rcx,[rbp-0x1c]
  407435:	mov    rdx,QWORD PTR [rbp-0x38]
  407439:	mov    rsi,QWORD PTR [rbp-0x30]
  40743d:	mov    rax,QWORD PTR [rbp-0x28]
  407441:	mov    r8,rdi
  407444:	mov    rdi,rax
  407447:	call   4288db <flatcc_json_parser_integer@@Base>
  40744c:	mov    QWORD PTR [rbp-0x30],rax
  407450:	mov    rax,QWORD PTR [rbp-0x30]
  407454:	cmp    rax,QWORD PTR [rbp-0x10]
  407458:	je     407481 <_start@@Base+0x11f1>
  40745a:	mov    rdi,QWORD PTR [rbp-0x18]
  40745e:	mov    ecx,DWORD PTR [rbp-0x1c]
  407461:	mov    r8,QWORD PTR [rbp-0x40]
  407465:	mov    rdx,QWORD PTR [rbp-0x38]
  407469:	mov    rsi,QWORD PTR [rbp-0x30]
  40746d:	mov    rax,QWORD PTR [rbp-0x28]
  407471:	mov    r9,r8
  407474:	mov    r8,rdi
  407477:	mov    rdi,rax
  40747a:	call   406e0a <_start@@Base+0xb7a>
  40747f:	jmp    407485 <_start@@Base+0x11f5>
  407481:	mov    rax,QWORD PTR [rbp-0x30]
  407485:	mov    rdx,QWORD PTR [rbp-0x8]
  407489:	xor    rdx,QWORD PTR fs:0x28
  407492:	je     407499 <_start@@Base+0x1209>
  407494:	call   4061a0 <__stack_chk_fail@plt>
  407499:	leave  
  40749a:	ret    
  40749b:	push   rbp
  40749c:	mov    rbp,rsp
  40749f:	sub    rsp,0x40
  4074a3:	mov    QWORD PTR [rbp-0x28],rdi
  4074a7:	mov    QWORD PTR [rbp-0x30],rsi
  4074ab:	mov    QWORD PTR [rbp-0x38],rdx
  4074af:	mov    QWORD PTR [rbp-0x40],rcx
  4074b3:	mov    rax,QWORD PTR fs:0x28
  4074bc:	mov    QWORD PTR [rbp-0x8],rax
  4074c0:	xor    eax,eax
  4074c2:	mov    QWORD PTR [rbp-0x18],0x0
  4074ca:	mov    DWORD PTR [rbp-0x1c],0x0
  4074d1:	mov    rax,QWORD PTR [rbp-0x30]
  4074d5:	mov    QWORD PTR [rbp-0x10],rax
  4074d9:	mov    rax,QWORD PTR [rbp-0x40]
  4074dd:	mov    DWORD PTR [rax],0x0
  4074e3:	mov    rax,QWORD PTR [rbp-0x30]
  4074e7:	cmp    rax,QWORD PTR [rbp-0x38]
  4074eb:	jne    4074f3 <_start@@Base+0x1263>
  4074ed:	mov    rax,QWORD PTR [rbp-0x30]
  4074f1:	jmp    40754b <_start@@Base+0x12bb>
  4074f3:	lea    rdi,[rbp-0x18]
  4074f7:	lea    rcx,[rbp-0x1c]
  4074fb:	mov    rdx,QWORD PTR [rbp-0x38]
  4074ff:	mov    rsi,QWORD PTR [rbp-0x30]
  407503:	mov    rax,QWORD PTR [rbp-0x28]
  407507:	mov    r8,rdi
  40750a:	mov    rdi,rax
  40750d:	call   4288db <flatcc_json_parser_integer@@Base>
  407512:	mov    QWORD PTR [rbp-0x30],rax
  407516:	mov    rax,QWORD PTR [rbp-0x30]
  40751a:	cmp    rax,QWORD PTR [rbp-0x10]
  40751e:	je     407547 <_start@@Base+0x12b7>
  407520:	mov    rdi,QWORD PTR [rbp-0x18]
  407524:	mov    ecx,DWORD PTR [rbp-0x1c]
  407527:	mov    r8,QWORD PTR [rbp-0x40]
  40752b:	mov    rdx,QWORD PTR [rbp-0x38]
  40752f:	mov    rsi,QWORD PTR [rbp-0x30]
  407533:	mov    rax,QWORD PTR [rbp-0x28]
  407537:	mov    r9,r8
  40753a:	mov    r8,rdi
  40753d:	mov    rdi,rax
  407540:	call   406eb1 <_start@@Base+0xc21>
  407545:	jmp    40754b <_start@@Base+0x12bb>
  407547:	mov    rax,QWORD PTR [rbp-0x30]
  40754b:	mov    rdx,QWORD PTR [rbp-0x8]
  40754f:	xor    rdx,QWORD PTR fs:0x28
  407558:	je     40755f <_start@@Base+0x12cf>
  40755a:	call   4061a0 <__stack_chk_fail@plt>
  40755f:	leave  
  407560:	ret    
  407561:	push   rbp
  407562:	mov    rbp,rsp
  407565:	sub    rsp,0x40
  407569:	mov    QWORD PTR [rbp-0x28],rdi
  40756d:	mov    QWORD PTR [rbp-0x30],rsi
  407571:	mov    QWORD PTR [rbp-0x38],rdx
  407575:	mov    QWORD PTR [rbp-0x40],rcx
  407579:	mov    rax,QWORD PTR fs:0x28
  407582:	mov    QWORD PTR [rbp-0x8],rax
  407586:	xor    eax,eax
  407588:	mov    QWORD PTR [rbp-0x18],0x0
  407590:	mov    DWORD PTR [rbp-0x1c],0x0
  407597:	mov    rax,QWORD PTR [rbp-0x30]
  40759b:	mov    QWORD PTR [rbp-0x10],rax
  40759f:	mov    rax,QWORD PTR [rbp-0x40]
  4075a3:	mov    WORD PTR [rax],0x0
  4075a8:	mov    rax,QWORD PTR [rbp-0x30]
  4075ac:	cmp    rax,QWORD PTR [rbp-0x38]
  4075b0:	jne    4075b8 <_start@@Base+0x1328>
  4075b2:	mov    rax,QWORD PTR [rbp-0x30]
  4075b6:	jmp    407610 <_start@@Base+0x1380>
  4075b8:	lea    rdi,[rbp-0x18]
  4075bc:	lea    rcx,[rbp-0x1c]
  4075c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4075c4:	mov    rsi,QWORD PTR [rbp-0x30]
  4075c8:	mov    rax,QWORD PTR [rbp-0x28]
  4075cc:	mov    r8,rdi
  4075cf:	mov    rdi,rax
  4075d2:	call   4288db <flatcc_json_parser_integer@@Base>
  4075d7:	mov    QWORD PTR [rbp-0x30],rax
  4075db:	mov    rax,QWORD PTR [rbp-0x30]
  4075df:	cmp    rax,QWORD PTR [rbp-0x10]
  4075e3:	je     40760c <_start@@Base+0x137c>
  4075e5:	mov    rdi,QWORD PTR [rbp-0x18]
  4075e9:	mov    ecx,DWORD PTR [rbp-0x1c]
  4075ec:	mov    r8,QWORD PTR [rbp-0x40]
  4075f0:	mov    rdx,QWORD PTR [rbp-0x38]
  4075f4:	mov    rsi,QWORD PTR [rbp-0x30]
  4075f8:	mov    rax,QWORD PTR [rbp-0x28]
  4075fc:	mov    r9,r8
  4075ff:	mov    r8,rdi
  407602:	mov    rdi,rax
  407605:	call   406f29 <_start@@Base+0xc99>
  40760a:	jmp    407610 <_start@@Base+0x1380>
  40760c:	mov    rax,QWORD PTR [rbp-0x30]
  407610:	mov    rdx,QWORD PTR [rbp-0x8]
  407614:	xor    rdx,QWORD PTR fs:0x28
  40761d:	je     407624 <_start@@Base+0x1394>
  40761f:	call   4061a0 <__stack_chk_fail@plt>
  407624:	leave  
  407625:	ret    
  407626:	push   rbp
  407627:	mov    rbp,rsp
  40762a:	sub    rsp,0x40
  40762e:	mov    QWORD PTR [rbp-0x28],rdi
  407632:	mov    QWORD PTR [rbp-0x30],rsi
  407636:	mov    QWORD PTR [rbp-0x38],rdx
  40763a:	mov    QWORD PTR [rbp-0x40],rcx
  40763e:	mov    rax,QWORD PTR fs:0x28
  407647:	mov    QWORD PTR [rbp-0x8],rax
  40764b:	xor    eax,eax
  40764d:	mov    QWORD PTR [rbp-0x18],0x0
  407655:	mov    DWORD PTR [rbp-0x1c],0x0
  40765c:	mov    rax,QWORD PTR [rbp-0x30]
  407660:	mov    QWORD PTR [rbp-0x10],rax
  407664:	mov    rax,QWORD PTR [rbp-0x40]
  407668:	mov    BYTE PTR [rax],0x0
  40766b:	mov    rax,QWORD PTR [rbp-0x30]
  40766f:	cmp    rax,QWORD PTR [rbp-0x38]
  407673:	jne    40767b <_start@@Base+0x13eb>
  407675:	mov    rax,QWORD PTR [rbp-0x30]
  407679:	jmp    4076d3 <_start@@Base+0x1443>
  40767b:	lea    rdi,[rbp-0x18]
  40767f:	lea    rcx,[rbp-0x1c]
  407683:	mov    rdx,QWORD PTR [rbp-0x38]
  407687:	mov    rsi,QWORD PTR [rbp-0x30]
  40768b:	mov    rax,QWORD PTR [rbp-0x28]
  40768f:	mov    r8,rdi
  407692:	mov    rdi,rax
  407695:	call   4288db <flatcc_json_parser_integer@@Base>
  40769a:	mov    QWORD PTR [rbp-0x30],rax
  40769e:	mov    rax,QWORD PTR [rbp-0x30]
  4076a2:	cmp    rax,QWORD PTR [rbp-0x10]
  4076a6:	je     4076cf <_start@@Base+0x143f>
  4076a8:	mov    rdi,QWORD PTR [rbp-0x18]
  4076ac:	mov    ecx,DWORD PTR [rbp-0x1c]
  4076af:	mov    r8,QWORD PTR [rbp-0x40]
  4076b3:	mov    rdx,QWORD PTR [rbp-0x38]
  4076b7:	mov    rsi,QWORD PTR [rbp-0x30]
  4076bb:	mov    rax,QWORD PTR [rbp-0x28]
  4076bf:	mov    r9,r8
  4076c2:	mov    r8,rdi
  4076c5:	mov    rdi,rax
  4076c8:	call   406fa1 <_start@@Base+0xd11>
  4076cd:	jmp    4076d3 <_start@@Base+0x1443>
  4076cf:	mov    rax,QWORD PTR [rbp-0x30]
  4076d3:	mov    rdx,QWORD PTR [rbp-0x8]
  4076d7:	xor    rdx,QWORD PTR fs:0x28
  4076e0:	je     4076e7 <_start@@Base+0x1457>
  4076e2:	call   4061a0 <__stack_chk_fail@plt>
  4076e7:	leave  
  4076e8:	ret    
  4076e9:	push   rbp
  4076ea:	mov    rbp,rsp
  4076ed:	sub    rsp,0x40
  4076f1:	mov    QWORD PTR [rbp-0x28],rdi
  4076f5:	mov    QWORD PTR [rbp-0x30],rsi
  4076f9:	mov    QWORD PTR [rbp-0x38],rdx
  4076fd:	mov    QWORD PTR [rbp-0x40],rcx
  407701:	mov    rax,QWORD PTR fs:0x28
  40770a:	mov    QWORD PTR [rbp-0x8],rax
  40770e:	xor    eax,eax
  407710:	mov    QWORD PTR [rbp-0x18],0x0
  407718:	mov    DWORD PTR [rbp-0x1c],0x0
  40771f:	mov    rax,QWORD PTR [rbp-0x30]
  407723:	mov    QWORD PTR [rbp-0x10],rax
  407727:	mov    rax,QWORD PTR [rbp-0x40]
  40772b:	mov    QWORD PTR [rax],0x0
  407732:	mov    rax,QWORD PTR [rbp-0x30]
  407736:	cmp    rax,QWORD PTR [rbp-0x38]
  40773a:	jne    407742 <_start@@Base+0x14b2>
  40773c:	mov    rax,QWORD PTR [rbp-0x30]
  407740:	jmp    40779a <_start@@Base+0x150a>
  407742:	lea    rdi,[rbp-0x18]
  407746:	lea    rcx,[rbp-0x1c]
  40774a:	mov    rdx,QWORD PTR [rbp-0x38]
  40774e:	mov    rsi,QWORD PTR [rbp-0x30]
  407752:	mov    rax,QWORD PTR [rbp-0x28]
  407756:	mov    r8,rdi
  407759:	mov    rdi,rax
  40775c:	call   4288db <flatcc_json_parser_integer@@Base>
  407761:	mov    QWORD PTR [rbp-0x30],rax
  407765:	mov    rax,QWORD PTR [rbp-0x30]
  407769:	cmp    rax,QWORD PTR [rbp-0x10]
  40776d:	je     407796 <_start@@Base+0x1506>
  40776f:	mov    rdi,QWORD PTR [rbp-0x18]
  407773:	mov    ecx,DWORD PTR [rbp-0x1c]
  407776:	mov    r8,QWORD PTR [rbp-0x40]
  40777a:	mov    rdx,QWORD PTR [rbp-0x38]
  40777e:	mov    rsi,QWORD PTR [rbp-0x30]
  407782:	mov    rax,QWORD PTR [rbp-0x28]
  407786:	mov    r9,r8
  407789:	mov    r8,rdi
  40778c:	mov    rdi,rax
  40778f:	call   407018 <_start@@Base+0xd88>
  407794:	jmp    40779a <_start@@Base+0x150a>
  407796:	mov    rax,QWORD PTR [rbp-0x30]
  40779a:	mov    rdx,QWORD PTR [rbp-0x8]
  40779e:	xor    rdx,QWORD PTR fs:0x28
  4077a7:	je     4077ae <_start@@Base+0x151e>
  4077a9:	call   4061a0 <__stack_chk_fail@plt>
  4077ae:	leave  
  4077af:	ret    
  4077b0:	push   rbp
  4077b1:	mov    rbp,rsp
  4077b4:	sub    rsp,0x40
  4077b8:	mov    QWORD PTR [rbp-0x28],rdi
  4077bc:	mov    QWORD PTR [rbp-0x30],rsi
  4077c0:	mov    QWORD PTR [rbp-0x38],rdx
  4077c4:	mov    QWORD PTR [rbp-0x40],rcx
  4077c8:	mov    rax,QWORD PTR fs:0x28
  4077d1:	mov    QWORD PTR [rbp-0x8],rax
  4077d5:	xor    eax,eax
  4077d7:	mov    QWORD PTR [rbp-0x18],0x0
  4077df:	mov    DWORD PTR [rbp-0x1c],0x0
  4077e6:	mov    rax,QWORD PTR [rbp-0x30]
  4077ea:	mov    QWORD PTR [rbp-0x10],rax
  4077ee:	mov    rax,QWORD PTR [rbp-0x40]
  4077f2:	mov    DWORD PTR [rax],0x0
  4077f8:	mov    rax,QWORD PTR [rbp-0x30]
  4077fc:	cmp    rax,QWORD PTR [rbp-0x38]
  407800:	jne    407808 <_start@@Base+0x1578>
  407802:	mov    rax,QWORD PTR [rbp-0x30]
  407806:	jmp    407860 <_start@@Base+0x15d0>
  407808:	lea    rdi,[rbp-0x18]
  40780c:	lea    rcx,[rbp-0x1c]
  407810:	mov    rdx,QWORD PTR [rbp-0x38]
  407814:	mov    rsi,QWORD PTR [rbp-0x30]
  407818:	mov    rax,QWORD PTR [rbp-0x28]
  40781c:	mov    r8,rdi
  40781f:	mov    rdi,rax
  407822:	call   4288db <flatcc_json_parser_integer@@Base>
  407827:	mov    QWORD PTR [rbp-0x30],rax
  40782b:	mov    rax,QWORD PTR [rbp-0x30]
  40782f:	cmp    rax,QWORD PTR [rbp-0x10]
  407833:	je     40785c <_start@@Base+0x15cc>
  407835:	mov    rdi,QWORD PTR [rbp-0x18]
  407839:	mov    ecx,DWORD PTR [rbp-0x1c]
  40783c:	mov    r8,QWORD PTR [rbp-0x40]
  407840:	mov    rdx,QWORD PTR [rbp-0x38]
  407844:	mov    rsi,QWORD PTR [rbp-0x30]
  407848:	mov    rax,QWORD PTR [rbp-0x28]
  40784c:	mov    r9,r8
  40784f:	mov    r8,rdi
  407852:	mov    rdi,rax
  407855:	call   4070b0 <_start@@Base+0xe20>
  40785a:	jmp    407860 <_start@@Base+0x15d0>
  40785c:	mov    rax,QWORD PTR [rbp-0x30]
  407860:	mov    rdx,QWORD PTR [rbp-0x8]
  407864:	xor    rdx,QWORD PTR fs:0x28
  40786d:	je     407874 <_start@@Base+0x15e4>
  40786f:	call   4061a0 <__stack_chk_fail@plt>
  407874:	leave  
  407875:	ret    
  407876:	push   rbp
  407877:	mov    rbp,rsp
  40787a:	sub    rsp,0x40
  40787e:	mov    QWORD PTR [rbp-0x28],rdi
  407882:	mov    QWORD PTR [rbp-0x30],rsi
  407886:	mov    QWORD PTR [rbp-0x38],rdx
  40788a:	mov    QWORD PTR [rbp-0x40],rcx
  40788e:	mov    rax,QWORD PTR fs:0x28
  407897:	mov    QWORD PTR [rbp-0x8],rax
  40789b:	xor    eax,eax
  40789d:	mov    QWORD PTR [rbp-0x18],0x0
  4078a5:	mov    DWORD PTR [rbp-0x1c],0x0
  4078ac:	mov    rax,QWORD PTR [rbp-0x30]
  4078b0:	mov    QWORD PTR [rbp-0x10],rax
  4078b4:	mov    rax,QWORD PTR [rbp-0x40]
  4078b8:	mov    WORD PTR [rax],0x0
  4078bd:	mov    rax,QWORD PTR [rbp-0x30]
  4078c1:	cmp    rax,QWORD PTR [rbp-0x38]
  4078c5:	jne    4078cd <_start@@Base+0x163d>
  4078c7:	mov    rax,QWORD PTR [rbp-0x30]
  4078cb:	jmp    407925 <_start@@Base+0x1695>
  4078cd:	lea    rdi,[rbp-0x18]
  4078d1:	lea    rcx,[rbp-0x1c]
  4078d5:	mov    rdx,QWORD PTR [rbp-0x38]
  4078d9:	mov    rsi,QWORD PTR [rbp-0x30]
  4078dd:	mov    rax,QWORD PTR [rbp-0x28]
  4078e1:	mov    r8,rdi
  4078e4:	mov    rdi,rax
  4078e7:	call   4288db <flatcc_json_parser_integer@@Base>
  4078ec:	mov    QWORD PTR [rbp-0x30],rax
  4078f0:	mov    rax,QWORD PTR [rbp-0x30]
  4078f4:	cmp    rax,QWORD PTR [rbp-0x10]
  4078f8:	je     407921 <_start@@Base+0x1691>
  4078fa:	mov    rdi,QWORD PTR [rbp-0x18]
  4078fe:	mov    ecx,DWORD PTR [rbp-0x1c]
  407901:	mov    r8,QWORD PTR [rbp-0x40]
  407905:	mov    rdx,QWORD PTR [rbp-0x38]
  407909:	mov    rsi,QWORD PTR [rbp-0x30]
  40790d:	mov    rax,QWORD PTR [rbp-0x28]
  407911:	mov    r9,r8
  407914:	mov    r8,rdi
  407917:	mov    rdi,rax
  40791a:	call   407142 <_start@@Base+0xeb2>
  40791f:	jmp    407925 <_start@@Base+0x1695>
  407921:	mov    rax,QWORD PTR [rbp-0x30]
  407925:	mov    rdx,QWORD PTR [rbp-0x8]
  407929:	xor    rdx,QWORD PTR fs:0x28
  407932:	je     407939 <_start@@Base+0x16a9>
  407934:	call   4061a0 <__stack_chk_fail@plt>
  407939:	leave  
  40793a:	ret    
  40793b:	push   rbp
  40793c:	mov    rbp,rsp
  40793f:	sub    rsp,0x40
  407943:	mov    QWORD PTR [rbp-0x28],rdi
  407947:	mov    QWORD PTR [rbp-0x30],rsi
  40794b:	mov    QWORD PTR [rbp-0x38],rdx
  40794f:	mov    QWORD PTR [rbp-0x40],rcx
  407953:	mov    rax,QWORD PTR fs:0x28
  40795c:	mov    QWORD PTR [rbp-0x8],rax
  407960:	xor    eax,eax
  407962:	mov    QWORD PTR [rbp-0x18],0x0
  40796a:	mov    DWORD PTR [rbp-0x1c],0x0
  407971:	mov    rax,QWORD PTR [rbp-0x30]
  407975:	mov    QWORD PTR [rbp-0x10],rax
  407979:	mov    rax,QWORD PTR [rbp-0x40]
  40797d:	mov    BYTE PTR [rax],0x0
  407980:	mov    rax,QWORD PTR [rbp-0x30]
  407984:	cmp    rax,QWORD PTR [rbp-0x38]
  407988:	jne    407990 <_start@@Base+0x1700>
  40798a:	mov    rax,QWORD PTR [rbp-0x30]
  40798e:	jmp    4079e8 <_start@@Base+0x1758>
  407990:	lea    rdi,[rbp-0x18]
  407994:	lea    rcx,[rbp-0x1c]
  407998:	mov    rdx,QWORD PTR [rbp-0x38]
  40799c:	mov    rsi,QWORD PTR [rbp-0x30]
  4079a0:	mov    rax,QWORD PTR [rbp-0x28]
  4079a4:	mov    r8,rdi
  4079a7:	mov    rdi,rax
  4079aa:	call   4288db <flatcc_json_parser_integer@@Base>
  4079af:	mov    QWORD PTR [rbp-0x30],rax
  4079b3:	mov    rax,QWORD PTR [rbp-0x30]
  4079b7:	cmp    rax,QWORD PTR [rbp-0x10]
  4079bb:	je     4079e4 <_start@@Base+0x1754>
  4079bd:	mov    rdi,QWORD PTR [rbp-0x18]
  4079c1:	mov    ecx,DWORD PTR [rbp-0x1c]
  4079c4:	mov    r8,QWORD PTR [rbp-0x40]
  4079c8:	mov    rdx,QWORD PTR [rbp-0x38]
  4079cc:	mov    rsi,QWORD PTR [rbp-0x30]
  4079d0:	mov    rax,QWORD PTR [rbp-0x28]
  4079d4:	mov    r9,r8
  4079d7:	mov    r8,rdi
  4079da:	mov    rdi,rax
  4079dd:	call   4071d5 <_start@@Base+0xf45>
  4079e2:	jmp    4079e8 <_start@@Base+0x1758>
  4079e4:	mov    rax,QWORD PTR [rbp-0x30]
  4079e8:	mov    rdx,QWORD PTR [rbp-0x8]
  4079ec:	xor    rdx,QWORD PTR fs:0x28
  4079f5:	je     4079fc <_start@@Base+0x176c>
  4079f7:	call   4061a0 <__stack_chk_fail@plt>
  4079fc:	leave  
  4079fd:	ret    
  4079fe:	push   rbp
  4079ff:	mov    rbp,rsp
  407a02:	sub    rsp,0x40
  407a06:	mov    QWORD PTR [rbp-0x28],rdi
  407a0a:	mov    QWORD PTR [rbp-0x30],rsi
  407a0e:	mov    QWORD PTR [rbp-0x38],rdx
  407a12:	mov    QWORD PTR [rbp-0x40],rcx
  407a16:	mov    rax,QWORD PTR fs:0x28
  407a1f:	mov    QWORD PTR [rbp-0x8],rax
  407a23:	xor    eax,eax
  407a25:	mov    rax,QWORD PTR [rbp-0x30]
  407a29:	mov    QWORD PTR [rbp-0x10],rax
  407a2d:	mov    rax,QWORD PTR [rbp-0x38]
  407a31:	sub    rax,QWORD PTR [rbp-0x30]
  407a35:	cmp    rax,0x3
  407a39:	jle    407a68 <_start@@Base+0x17d8>
  407a3b:	mov    rax,QWORD PTR [rbp-0x30]
  407a3f:	mov    edx,0x4
  407a44:	lea    rsi,[rip+0x2e5f2]        # 43603d <_IO_stdin_used@@Base+0x3d>
  407a4b:	mov    rdi,rax
  407a4e:	call   4061f0 <memcmp@plt>
  407a53:	test   eax,eax
  407a55:	jne    407a68 <_start@@Base+0x17d8>
  407a57:	mov    rax,QWORD PTR [rbp-0x40]
  407a5b:	mov    BYTE PTR [rax],0x1
  407a5e:	mov    rax,QWORD PTR [rbp-0x10]
  407a62:	add    rax,0x4
  407a66:	jmp    407ad4 <_start@@Base+0x1844>
  407a68:	mov    rax,QWORD PTR [rbp-0x38]
  407a6c:	sub    rax,QWORD PTR [rbp-0x30]
  407a70:	cmp    rax,0x4
  407a74:	jle    407aa3 <_start@@Base+0x1813>
  407a76:	mov    rax,QWORD PTR [rbp-0x30]
  407a7a:	mov    edx,0x5
  407a7f:	lea    rsi,[rip+0x2e5bc]        # 436042 <_IO_stdin_used@@Base+0x42>
  407a86:	mov    rdi,rax
  407a89:	call   4061f0 <memcmp@plt>
  407a8e:	test   eax,eax
  407a90:	jne    407aa3 <_start@@Base+0x1813>
  407a92:	mov    rax,QWORD PTR [rbp-0x40]
  407a96:	mov    BYTE PTR [rax],0x0
  407a99:	mov    rax,QWORD PTR [rbp-0x10]
  407a9d:	add    rax,0x5
  407aa1:	jmp    407ad4 <_start@@Base+0x1844>
  407aa3:	lea    rcx,[rbp-0x11]
  407aa7:	mov    rdx,QWORD PTR [rbp-0x38]
  407aab:	mov    rsi,QWORD PTR [rbp-0x30]
  407aaf:	mov    rax,QWORD PTR [rbp-0x28]
  407ab3:	mov    rdi,rax
  407ab6:	call   407626 <_start@@Base+0x1396>
  407abb:	mov    QWORD PTR [rbp-0x30],rax
  407abf:	movzx  eax,BYTE PTR [rbp-0x11]
  407ac3:	test   al,al
  407ac5:	setne  al
  407ac8:	mov    edx,eax
  407aca:	mov    rax,QWORD PTR [rbp-0x40]
  407ace:	mov    BYTE PTR [rax],dl
  407ad0:	mov    rax,QWORD PTR [rbp-0x30]
  407ad4:	mov    rcx,QWORD PTR [rbp-0x8]
  407ad8:	xor    rcx,QWORD PTR fs:0x28
  407ae1:	je     407ae8 <_start@@Base+0x1858>
  407ae3:	call   4061a0 <__stack_chk_fail@plt>
  407ae8:	leave  
  407ae9:	ret    
  407aea:	endbr64 
  407aee:	push   rbp
  407aef:	mov    rbp,rsp
  407af2:	sub    rsp,0x60
  407af6:	mov    QWORD PTR [rbp-0x38],rdi
  407afa:	mov    QWORD PTR [rbp-0x40],rsi
  407afe:	mov    QWORD PTR [rbp-0x48],rdx
  407b02:	mov    QWORD PTR [rbp-0x50],rcx
  407b06:	mov    QWORD PTR [rbp-0x58],r8
  407b0a:	mov    rax,QWORD PTR fs:0x28
  407b13:	mov    QWORD PTR [rbp-0x8],rax
  407b17:	xor    eax,eax
  407b19:	mov    QWORD PTR [rbp-0x28],0x0
  407b21:	mov    rax,QWORD PTR [rbp-0x58]
  407b25:	mov    QWORD PTR [rax],0x0
  407b2c:	mov    rdx,QWORD PTR [rbp-0x48]
  407b30:	mov    rcx,QWORD PTR [rbp-0x40]
  407b34:	mov    rax,QWORD PTR [rbp-0x38]
  407b38:	mov    rsi,rcx
  407b3b:	mov    rdi,rax
  407b3e:	call   4068f9 <_start@@Base+0x669>
  407b43:	mov    QWORD PTR [rbp-0x40],rax
  407b47:	mov    rax,QWORD PTR [rbp-0x40]
  407b4b:	cmp    rax,QWORD PTR [rbp-0x48]
  407b4f:	jne    407b5a <_start@@Base+0x18ca>
  407b51:	mov    rax,QWORD PTR [rbp-0x40]
  407b55:	jmp    407c37 <_start@@Base+0x19a7>
  407b5a:	mov    rax,QWORD PTR [rbp-0x50]
  407b5e:	mov    QWORD PTR [rbp-0x18],rax
  407b62:	mov    rax,QWORD PTR [rbp-0x18]
  407b66:	mov    rax,QWORD PTR [rax]
  407b69:	mov    rdx,QWORD PTR [rbp-0x40]
  407b6d:	mov    QWORD PTR [rbp-0x10],rdx
  407b71:	lea    r9,[rbp-0x2c]
  407b75:	lea    r8,[rbp-0x20]
  407b79:	lea    rcx,[rbp-0x30]
  407b7d:	mov    rdx,QWORD PTR [rbp-0x48]
  407b81:	mov    rsi,QWORD PTR [rbp-0x10]
  407b85:	mov    rdi,QWORD PTR [rbp-0x38]
  407b89:	call   rax
  407b8b:	mov    QWORD PTR [rbp-0x40],rax
  407b8f:	mov    rax,QWORD PTR [rbp-0x40]
  407b93:	cmp    rax,QWORD PTR [rbp-0x48]
  407b97:	jne    407ba2 <_start@@Base+0x1912>
  407b99:	mov    rax,QWORD PTR [rbp-0x40]
  407b9d:	jmp    407c37 <_start@@Base+0x19a7>
  407ba2:	mov    rax,QWORD PTR [rbp-0x40]
  407ba6:	cmp    rax,QWORD PTR [rbp-0x10]
  407baa:	jne    407bbd <_start@@Base+0x192d>
  407bac:	add    QWORD PTR [rbp-0x18],0x8
  407bb1:	mov    rax,QWORD PTR [rbp-0x18]
  407bb5:	mov    rax,QWORD PTR [rax]
  407bb8:	test   rax,rax
  407bbb:	jne    407b62 <_start@@Base+0x18d2>
  407bbd:	mov    rax,QWORD PTR [rbp-0x10]
  407bc1:	cmp    rax,QWORD PTR [rbp-0x40]
  407bc5:	jne    407be2 <_start@@Base+0x1952>
  407bc7:	mov    rdx,QWORD PTR [rbp-0x48]
  407bcb:	mov    rsi,QWORD PTR [rbp-0x40]
  407bcf:	mov    rax,QWORD PTR [rbp-0x38]
  407bd3:	mov    ecx,0x17
  407bd8:	mov    rdi,rax
  407bdb:	call   427257 <flatcc_json_parser_set_error@@Base>
  407be0:	jmp    407c37 <_start@@Base+0x19a7>
  407be2:	mov    rdi,QWORD PTR [rbp-0x20]
  407be6:	mov    ecx,DWORD PTR [rbp-0x30]
  407be9:	lea    r8,[rbp-0x28]
  407bed:	mov    rdx,QWORD PTR [rbp-0x48]
  407bf1:	mov    rsi,QWORD PTR [rbp-0x40]
  407bf5:	mov    rax,QWORD PTR [rbp-0x38]
  407bf9:	mov    r9,r8
  407bfc:	mov    r8,rdi
  407bff:	mov    rdi,rax
  407c02:	call   406e0a <_start@@Base+0xb7a>
  407c07:	cmp    QWORD PTR [rbp-0x48],rax
  407c0b:	jne    407c13 <_start@@Base+0x1983>
  407c0d:	mov    rax,QWORD PTR [rbp-0x48]
  407c11:	jmp    407c37 <_start@@Base+0x19a7>
  407c13:	mov    rax,QWORD PTR [rbp-0x58]
  407c17:	mov    rdx,QWORD PTR [rax]
  407c1a:	mov    rax,QWORD PTR [rbp-0x28]
  407c1e:	add    rdx,rax
  407c21:	mov    rax,QWORD PTR [rbp-0x58]
  407c25:	mov    QWORD PTR [rax],rdx
  407c28:	mov    eax,DWORD PTR [rbp-0x2c]
  407c2b:	test   eax,eax
  407c2d:	jne    407b5a <_start@@Base+0x18ca>
  407c33:	mov    rax,QWORD PTR [rbp-0x40]
  407c37:	mov    rdi,QWORD PTR [rbp-0x8]
  407c3b:	xor    rdi,QWORD PTR fs:0x28
  407c44:	je     407c4b <_start@@Base+0x19bb>
  407c46:	call   4061a0 <__stack_chk_fail@plt>
  407c4b:	leave  
  407c4c:	ret    
  407c4d:	endbr64 
  407c51:	push   rbp
  407c52:	mov    rbp,rsp
  407c55:	sub    rsp,0x60
  407c59:	mov    QWORD PTR [rbp-0x38],rdi
  407c5d:	mov    QWORD PTR [rbp-0x40],rsi
  407c61:	mov    QWORD PTR [rbp-0x48],rdx
  407c65:	mov    QWORD PTR [rbp-0x50],rcx
  407c69:	mov    QWORD PTR [rbp-0x58],r8
  407c6d:	mov    rax,QWORD PTR fs:0x28
  407c76:	mov    QWORD PTR [rbp-0x8],rax
  407c7a:	xor    eax,eax
  407c7c:	mov    DWORD PTR [rbp-0x2c],0x0
  407c83:	mov    rax,QWORD PTR [rbp-0x58]
  407c87:	mov    DWORD PTR [rax],0x0
  407c8d:	mov    rdx,QWORD PTR [rbp-0x48]
  407c91:	mov    rcx,QWORD PTR [rbp-0x40]
  407c95:	mov    rax,QWORD PTR [rbp-0x38]
  407c99:	mov    rsi,rcx
  407c9c:	mov    rdi,rax
  407c9f:	call   4068f9 <_start@@Base+0x669>
  407ca4:	mov    QWORD PTR [rbp-0x40],rax
  407ca8:	mov    rax,QWORD PTR [rbp-0x40]
  407cac:	cmp    rax,QWORD PTR [rbp-0x48]
  407cb0:	jne    407cbb <_start@@Base+0x1a2b>
  407cb2:	mov    rax,QWORD PTR [rbp-0x40]
  407cb6:	jmp    407d94 <_start@@Base+0x1b04>
  407cbb:	mov    rax,QWORD PTR [rbp-0x50]
  407cbf:	mov    QWORD PTR [rbp-0x18],rax
  407cc3:	mov    rax,QWORD PTR [rbp-0x18]
  407cc7:	mov    rax,QWORD PTR [rax]
  407cca:	mov    rdx,QWORD PTR [rbp-0x40]
  407cce:	mov    QWORD PTR [rbp-0x10],rdx
  407cd2:	lea    r9,[rbp-0x24]
  407cd6:	lea    r8,[rbp-0x20]
  407cda:	lea    rcx,[rbp-0x28]
  407cde:	mov    rdx,QWORD PTR [rbp-0x48]
  407ce2:	mov    rsi,QWORD PTR [rbp-0x10]
  407ce6:	mov    rdi,QWORD PTR [rbp-0x38]
  407cea:	call   rax
  407cec:	mov    QWORD PTR [rbp-0x40],rax
  407cf0:	mov    rax,QWORD PTR [rbp-0x40]
  407cf4:	cmp    rax,QWORD PTR [rbp-0x48]
  407cf8:	jne    407d03 <_start@@Base+0x1a73>
  407cfa:	mov    rax,QWORD PTR [rbp-0x40]
  407cfe:	jmp    407d94 <_start@@Base+0x1b04>
  407d03:	mov    rax,QWORD PTR [rbp-0x40]
  407d07:	cmp    rax,QWORD PTR [rbp-0x10]
  407d0b:	jne    407d1e <_start@@Base+0x1a8e>
  407d0d:	add    QWORD PTR [rbp-0x18],0x8
  407d12:	mov    rax,QWORD PTR [rbp-0x18]
  407d16:	mov    rax,QWORD PTR [rax]
  407d19:	test   rax,rax
  407d1c:	jne    407cc3 <_start@@Base+0x1a33>
  407d1e:	mov    rax,QWORD PTR [rbp-0x10]
  407d22:	cmp    rax,QWORD PTR [rbp-0x40]
  407d26:	jne    407d43 <_start@@Base+0x1ab3>
  407d28:	mov    rdx,QWORD PTR [rbp-0x48]
  407d2c:	mov    rsi,QWORD PTR [rbp-0x40]
  407d30:	mov    rax,QWORD PTR [rbp-0x38]
  407d34:	mov    ecx,0x17
  407d39:	mov    rdi,rax
  407d3c:	call   427257 <flatcc_json_parser_set_error@@Base>
  407d41:	jmp    407d94 <_start@@Base+0x1b04>
  407d43:	mov    rdi,QWORD PTR [rbp-0x20]
  407d47:	mov    ecx,DWORD PTR [rbp-0x28]
  407d4a:	lea    r8,[rbp-0x2c]
  407d4e:	mov    rdx,QWORD PTR [rbp-0x48]
  407d52:	mov    rsi,QWORD PTR [rbp-0x40]
  407d56:	mov    rax,QWORD PTR [rbp-0x38]
  407d5a:	mov    r9,r8
  407d5d:	mov    r8,rdi
  407d60:	mov    rdi,rax
  407d63:	call   406eb1 <_start@@Base+0xc21>
  407d68:	cmp    QWORD PTR [rbp-0x48],rax
  407d6c:	jne    407d74 <_start@@Base+0x1ae4>
  407d6e:	mov    rax,QWORD PTR [rbp-0x48]
  407d72:	jmp    407d94 <_start@@Base+0x1b04>
  407d74:	mov    rax,QWORD PTR [rbp-0x58]
  407d78:	mov    edx,DWORD PTR [rax]
  407d7a:	mov    eax,DWORD PTR [rbp-0x2c]
  407d7d:	add    edx,eax
  407d7f:	mov    rax,QWORD PTR [rbp-0x58]
  407d83:	mov    DWORD PTR [rax],edx
  407d85:	mov    eax,DWORD PTR [rbp-0x24]
  407d88:	test   eax,eax
  407d8a:	jne    407cbb <_start@@Base+0x1a2b>
  407d90:	mov    rax,QWORD PTR [rbp-0x40]
  407d94:	mov    rdi,QWORD PTR [rbp-0x8]
  407d98:	xor    rdi,QWORD PTR fs:0x28
  407da1:	je     407da8 <_start@@Base+0x1b18>
  407da3:	call   4061a0 <__stack_chk_fail@plt>
  407da8:	leave  
  407da9:	ret    
  407daa:	endbr64 
  407dae:	push   rbp
  407daf:	mov    rbp,rsp
  407db2:	sub    rsp,0x60
  407db6:	mov    QWORD PTR [rbp-0x38],rdi
  407dba:	mov    QWORD PTR [rbp-0x40],rsi
  407dbe:	mov    QWORD PTR [rbp-0x48],rdx
  407dc2:	mov    QWORD PTR [rbp-0x50],rcx
  407dc6:	mov    QWORD PTR [rbp-0x58],r8
  407dca:	mov    rax,QWORD PTR fs:0x28
  407dd3:	mov    QWORD PTR [rbp-0x8],rax
  407dd7:	xor    eax,eax
  407dd9:	mov    WORD PTR [rbp-0x2a],0x0
  407ddf:	mov    rax,QWORD PTR [rbp-0x58]
  407de3:	mov    WORD PTR [rax],0x0
  407de8:	mov    rdx,QWORD PTR [rbp-0x48]
  407dec:	mov    rcx,QWORD PTR [rbp-0x40]
  407df0:	mov    rax,QWORD PTR [rbp-0x38]
  407df4:	mov    rsi,rcx
  407df7:	mov    rdi,rax
  407dfa:	call   4068f9 <_start@@Base+0x669>
  407dff:	mov    QWORD PTR [rbp-0x40],rax
  407e03:	mov    rax,QWORD PTR [rbp-0x40]
  407e07:	cmp    rax,QWORD PTR [rbp-0x48]
  407e0b:	jne    407e16 <_start@@Base+0x1b86>
  407e0d:	mov    rax,QWORD PTR [rbp-0x40]
  407e11:	jmp    407ef2 <_start@@Base+0x1c62>
  407e16:	mov    rax,QWORD PTR [rbp-0x50]
  407e1a:	mov    QWORD PTR [rbp-0x18],rax
  407e1e:	mov    rax,QWORD PTR [rbp-0x18]
  407e22:	mov    rax,QWORD PTR [rax]
  407e25:	mov    rdx,QWORD PTR [rbp-0x40]
  407e29:	mov    QWORD PTR [rbp-0x10],rdx
  407e2d:	lea    r9,[rbp-0x24]
  407e31:	lea    r8,[rbp-0x20]
  407e35:	lea    rcx,[rbp-0x28]
  407e39:	mov    rdx,QWORD PTR [rbp-0x48]
  407e3d:	mov    rsi,QWORD PTR [rbp-0x10]
  407e41:	mov    rdi,QWORD PTR [rbp-0x38]
  407e45:	call   rax
  407e47:	mov    QWORD PTR [rbp-0x40],rax
  407e4b:	mov    rax,QWORD PTR [rbp-0x40]
  407e4f:	cmp    rax,QWORD PTR [rbp-0x48]
  407e53:	jne    407e5e <_start@@Base+0x1bce>
  407e55:	mov    rax,QWORD PTR [rbp-0x40]
  407e59:	jmp    407ef2 <_start@@Base+0x1c62>
  407e5e:	mov    rax,QWORD PTR [rbp-0x40]
  407e62:	cmp    rax,QWORD PTR [rbp-0x10]
  407e66:	jne    407e79 <_start@@Base+0x1be9>
  407e68:	add    QWORD PTR [rbp-0x18],0x8
  407e6d:	mov    rax,QWORD PTR [rbp-0x18]
  407e71:	mov    rax,QWORD PTR [rax]
  407e74:	test   rax,rax
  407e77:	jne    407e1e <_start@@Base+0x1b8e>
  407e79:	mov    rax,QWORD PTR [rbp-0x10]
  407e7d:	cmp    rax,QWORD PTR [rbp-0x40]
  407e81:	jne    407e9e <_start@@Base+0x1c0e>
  407e83:	mov    rdx,QWORD PTR [rbp-0x48]
  407e87:	mov    rsi,QWORD PTR [rbp-0x40]
  407e8b:	mov    rax,QWORD PTR [rbp-0x38]
  407e8f:	mov    ecx,0x17
  407e94:	mov    rdi,rax
  407e97:	call   427257 <flatcc_json_parser_set_error@@Base>
  407e9c:	jmp    407ef2 <_start@@Base+0x1c62>
  407e9e:	mov    rdi,QWORD PTR [rbp-0x20]
  407ea2:	mov    ecx,DWORD PTR [rbp-0x28]
  407ea5:	lea    r8,[rbp-0x2a]
  407ea9:	mov    rdx,QWORD PTR [rbp-0x48]
  407ead:	mov    rsi,QWORD PTR [rbp-0x40]
  407eb1:	mov    rax,QWORD PTR [rbp-0x38]
  407eb5:	mov    r9,r8
  407eb8:	mov    r8,rdi
  407ebb:	mov    rdi,rax
  407ebe:	call   406f29 <_start@@Base+0xc99>
  407ec3:	cmp    QWORD PTR [rbp-0x48],rax
  407ec7:	jne    407ecf <_start@@Base+0x1c3f>
  407ec9:	mov    rax,QWORD PTR [rbp-0x48]
  407ecd:	jmp    407ef2 <_start@@Base+0x1c62>
  407ecf:	mov    rax,QWORD PTR [rbp-0x58]
  407ed3:	movzx  edx,WORD PTR [rax]
  407ed6:	movzx  eax,WORD PTR [rbp-0x2a]
  407eda:	add    eax,edx
  407edc:	mov    rdx,QWORD PTR [rbp-0x58]
  407ee0:	mov    WORD PTR [rdx],ax
  407ee3:	mov    eax,DWORD PTR [rbp-0x24]
  407ee6:	test   eax,eax
  407ee8:	jne    407e16 <_start@@Base+0x1b86>
  407eee:	mov    rax,QWORD PTR [rbp-0x40]
  407ef2:	mov    rdi,QWORD PTR [rbp-0x8]
  407ef6:	xor    rdi,QWORD PTR fs:0x28
  407eff:	je     407f06 <_start@@Base+0x1c76>
  407f01:	call   4061a0 <__stack_chk_fail@plt>
  407f06:	leave  
  407f07:	ret    
  407f08:	endbr64 
  407f0c:	push   rbp
  407f0d:	mov    rbp,rsp
  407f10:	sub    rsp,0x60
  407f14:	mov    QWORD PTR [rbp-0x38],rdi
  407f18:	mov    QWORD PTR [rbp-0x40],rsi
  407f1c:	mov    QWORD PTR [rbp-0x48],rdx
  407f20:	mov    QWORD PTR [rbp-0x50],rcx
  407f24:	mov    QWORD PTR [rbp-0x58],r8
  407f28:	mov    rax,QWORD PTR fs:0x28
  407f31:	mov    QWORD PTR [rbp-0x8],rax
  407f35:	xor    eax,eax
  407f37:	mov    BYTE PTR [rbp-0x29],0x0
  407f3b:	mov    rax,QWORD PTR [rbp-0x58]
  407f3f:	mov    BYTE PTR [rax],0x0
  407f42:	mov    rdx,QWORD PTR [rbp-0x48]
  407f46:	mov    rcx,QWORD PTR [rbp-0x40]
  407f4a:	mov    rax,QWORD PTR [rbp-0x38]
  407f4e:	mov    rsi,rcx
  407f51:	mov    rdi,rax
  407f54:	call   4068f9 <_start@@Base+0x669>
  407f59:	mov    QWORD PTR [rbp-0x40],rax
  407f5d:	mov    rax,QWORD PTR [rbp-0x40]
  407f61:	cmp    rax,QWORD PTR [rbp-0x48]
  407f65:	jne    407f70 <_start@@Base+0x1ce0>
  407f67:	mov    rax,QWORD PTR [rbp-0x40]
  407f6b:	jmp    40804b <_start@@Base+0x1dbb>
  407f70:	mov    rax,QWORD PTR [rbp-0x50]
  407f74:	mov    QWORD PTR [rbp-0x18],rax
  407f78:	mov    rax,QWORD PTR [rbp-0x18]
  407f7c:	mov    rax,QWORD PTR [rax]
  407f7f:	mov    rdx,QWORD PTR [rbp-0x40]
  407f83:	mov    QWORD PTR [rbp-0x10],rdx
  407f87:	lea    r9,[rbp-0x24]
  407f8b:	lea    r8,[rbp-0x20]
  407f8f:	lea    rcx,[rbp-0x28]
  407f93:	mov    rdx,QWORD PTR [rbp-0x48]
  407f97:	mov    rsi,QWORD PTR [rbp-0x10]
  407f9b:	mov    rdi,QWORD PTR [rbp-0x38]
  407f9f:	call   rax
  407fa1:	mov    QWORD PTR [rbp-0x40],rax
  407fa5:	mov    rax,QWORD PTR [rbp-0x40]
  407fa9:	cmp    rax,QWORD PTR [rbp-0x48]
  407fad:	jne    407fb8 <_start@@Base+0x1d28>
  407faf:	mov    rax,QWORD PTR [rbp-0x40]
  407fb3:	jmp    40804b <_start@@Base+0x1dbb>
  407fb8:	mov    rax,QWORD PTR [rbp-0x40]
  407fbc:	cmp    rax,QWORD PTR [rbp-0x10]
  407fc0:	jne    407fd3 <_start@@Base+0x1d43>
  407fc2:	add    QWORD PTR [rbp-0x18],0x8
  407fc7:	mov    rax,QWORD PTR [rbp-0x18]
  407fcb:	mov    rax,QWORD PTR [rax]
  407fce:	test   rax,rax
  407fd1:	jne    407f78 <_start@@Base+0x1ce8>
  407fd3:	mov    rax,QWORD PTR [rbp-0x10]
  407fd7:	cmp    rax,QWORD PTR [rbp-0x40]
  407fdb:	jne    407ff8 <_start@@Base+0x1d68>
  407fdd:	mov    rdx,QWORD PTR [rbp-0x48]
  407fe1:	mov    rsi,QWORD PTR [rbp-0x40]
  407fe5:	mov    rax,QWORD PTR [rbp-0x38]
  407fe9:	mov    ecx,0x17
  407fee:	mov    rdi,rax
  407ff1:	call   427257 <flatcc_json_parser_set_error@@Base>
  407ff6:	jmp    40804b <_start@@Base+0x1dbb>
  407ff8:	mov    rdi,QWORD PTR [rbp-0x20]
  407ffc:	mov    ecx,DWORD PTR [rbp-0x28]
  407fff:	lea    r8,[rbp-0x29]
  408003:	mov    rdx,QWORD PTR [rbp-0x48]
  408007:	mov    rsi,QWORD PTR [rbp-0x40]
  40800b:	mov    rax,QWORD PTR [rbp-0x38]
  40800f:	mov    r9,r8
  408012:	mov    r8,rdi
  408015:	mov    rdi,rax
  408018:	call   406fa1 <_start@@Base+0xd11>
  40801d:	cmp    QWORD PTR [rbp-0x48],rax
  408021:	jne    408029 <_start@@Base+0x1d99>
  408023:	mov    rax,QWORD PTR [rbp-0x48]
  408027:	jmp    40804b <_start@@Base+0x1dbb>
  408029:	mov    rax,QWORD PTR [rbp-0x58]
  40802d:	movzx  edx,BYTE PTR [rax]
  408030:	movzx  eax,BYTE PTR [rbp-0x29]
  408034:	add    eax,edx
  408036:	mov    rdx,QWORD PTR [rbp-0x58]
  40803a:	mov    BYTE PTR [rdx],al
  40803c:	mov    eax,DWORD PTR [rbp-0x24]
  40803f:	test   eax,eax
  408041:	jne    407f70 <_start@@Base+0x1ce0>
  408047:	mov    rax,QWORD PTR [rbp-0x40]
  40804b:	mov    rdi,QWORD PTR [rbp-0x8]
  40804f:	xor    rdi,QWORD PTR fs:0x28
  408058:	je     40805f <_start@@Base+0x1dcf>
  40805a:	call   4061a0 <__stack_chk_fail@plt>
  40805f:	leave  
  408060:	ret    
  408061:	endbr64 
  408065:	push   rbp
  408066:	mov    rbp,rsp
  408069:	sub    rsp,0x60
  40806d:	mov    QWORD PTR [rbp-0x38],rdi
  408071:	mov    QWORD PTR [rbp-0x40],rsi
  408075:	mov    QWORD PTR [rbp-0x48],rdx
  408079:	mov    QWORD PTR [rbp-0x50],rcx
  40807d:	mov    QWORD PTR [rbp-0x58],r8
  408081:	mov    rax,QWORD PTR fs:0x28
  40808a:	mov    QWORD PTR [rbp-0x8],rax
  40808e:	xor    eax,eax
  408090:	mov    QWORD PTR [rbp-0x28],0x0
  408098:	mov    rax,QWORD PTR [rbp-0x58]
  40809c:	mov    QWORD PTR [rax],0x0
  4080a3:	mov    rdx,QWORD PTR [rbp-0x48]
  4080a7:	mov    rcx,QWORD PTR [rbp-0x40]
  4080ab:	mov    rax,QWORD PTR [rbp-0x38]
  4080af:	mov    rsi,rcx
  4080b2:	mov    rdi,rax
  4080b5:	call   4068f9 <_start@@Base+0x669>
  4080ba:	mov    QWORD PTR [rbp-0x40],rax
  4080be:	mov    rax,QWORD PTR [rbp-0x40]
  4080c2:	cmp    rax,QWORD PTR [rbp-0x48]
  4080c6:	jne    4080d1 <_start@@Base+0x1e41>
  4080c8:	mov    rax,QWORD PTR [rbp-0x40]
  4080cc:	jmp    4081ae <_start@@Base+0x1f1e>
  4080d1:	mov    rax,QWORD PTR [rbp-0x50]
  4080d5:	mov    QWORD PTR [rbp-0x18],rax
  4080d9:	mov    rax,QWORD PTR [rbp-0x18]
  4080dd:	mov    rax,QWORD PTR [rax]
  4080e0:	mov    rdx,QWORD PTR [rbp-0x40]
  4080e4:	mov    QWORD PTR [rbp-0x10],rdx
  4080e8:	lea    r9,[rbp-0x2c]
  4080ec:	lea    r8,[rbp-0x20]
  4080f0:	lea    rcx,[rbp-0x30]
  4080f4:	mov    rdx,QWORD PTR [rbp-0x48]
  4080f8:	mov    rsi,QWORD PTR [rbp-0x10]
  4080fc:	mov    rdi,QWORD PTR [rbp-0x38]
  408100:	call   rax
  408102:	mov    QWORD PTR [rbp-0x40],rax
  408106:	mov    rax,QWORD PTR [rbp-0x40]
  40810a:	cmp    rax,QWORD PTR [rbp-0x48]
  40810e:	jne    408119 <_start@@Base+0x1e89>
  408110:	mov    rax,QWORD PTR [rbp-0x40]
  408114:	jmp    4081ae <_start@@Base+0x1f1e>
  408119:	mov    rax,QWORD PTR [rbp-0x40]
  40811d:	cmp    rax,QWORD PTR [rbp-0x10]
  408121:	jne    408134 <_start@@Base+0x1ea4>
  408123:	add    QWORD PTR [rbp-0x18],0x8
  408128:	mov    rax,QWORD PTR [rbp-0x18]
  40812c:	mov    rax,QWORD PTR [rax]
  40812f:	test   rax,rax
  408132:	jne    4080d9 <_start@@Base+0x1e49>
  408134:	mov    rax,QWORD PTR [rbp-0x10]
  408138:	cmp    rax,QWORD PTR [rbp-0x40]
  40813c:	jne    408159 <_start@@Base+0x1ec9>
  40813e:	mov    rdx,QWORD PTR [rbp-0x48]
  408142:	mov    rsi,QWORD PTR [rbp-0x40]
  408146:	mov    rax,QWORD PTR [rbp-0x38]
  40814a:	mov    ecx,0x17
  40814f:	mov    rdi,rax
  408152:	call   427257 <flatcc_json_parser_set_error@@Base>
  408157:	jmp    4081ae <_start@@Base+0x1f1e>
  408159:	mov    rdi,QWORD PTR [rbp-0x20]
  40815d:	mov    ecx,DWORD PTR [rbp-0x30]
  408160:	lea    r8,[rbp-0x28]
  408164:	mov    rdx,QWORD PTR [rbp-0x48]
  408168:	mov    rsi,QWORD PTR [rbp-0x40]
  40816c:	mov    rax,QWORD PTR [rbp-0x38]
  408170:	mov    r9,r8
  408173:	mov    r8,rdi
  408176:	mov    rdi,rax
  408179:	call   407018 <_start@@Base+0xd88>
  40817e:	cmp    QWORD PTR [rbp-0x48],rax
  408182:	jne    40818a <_start@@Base+0x1efa>
  408184:	mov    rax,QWORD PTR [rbp-0x48]
  408188:	jmp    4081ae <_start@@Base+0x1f1e>
  40818a:	mov    rax,QWORD PTR [rbp-0x58]
  40818e:	mov    rdx,QWORD PTR [rax]
  408191:	mov    rax,QWORD PTR [rbp-0x28]
  408195:	add    rdx,rax
  408198:	mov    rax,QWORD PTR [rbp-0x58]
  40819c:	mov    QWORD PTR [rax],rdx
  40819f:	mov    eax,DWORD PTR [rbp-0x2c]
  4081a2:	test   eax,eax
  4081a4:	jne    4080d1 <_start@@Base+0x1e41>
  4081aa:	mov    rax,QWORD PTR [rbp-0x40]
  4081ae:	mov    rdi,QWORD PTR [rbp-0x8]
  4081b2:	xor    rdi,QWORD PTR fs:0x28
  4081bb:	je     4081c2 <_start@@Base+0x1f32>
  4081bd:	call   4061a0 <__stack_chk_fail@plt>
  4081c2:	leave  
  4081c3:	ret    
  4081c4:	endbr64 
  4081c8:	push   rbp
  4081c9:	mov    rbp,rsp
  4081cc:	sub    rsp,0x60
  4081d0:	mov    QWORD PTR [rbp-0x38],rdi
  4081d4:	mov    QWORD PTR [rbp-0x40],rsi
  4081d8:	mov    QWORD PTR [rbp-0x48],rdx
  4081dc:	mov    QWORD PTR [rbp-0x50],rcx
  4081e0:	mov    QWORD PTR [rbp-0x58],r8
  4081e4:	mov    rax,QWORD PTR fs:0x28
  4081ed:	mov    QWORD PTR [rbp-0x8],rax
  4081f1:	xor    eax,eax
  4081f3:	mov    DWORD PTR [rbp-0x2c],0x0
  4081fa:	mov    rax,QWORD PTR [rbp-0x58]
  4081fe:	mov    DWORD PTR [rax],0x0
  408204:	mov    rdx,QWORD PTR [rbp-0x48]
  408208:	mov    rcx,QWORD PTR [rbp-0x40]
  40820c:	mov    rax,QWORD PTR [rbp-0x38]
  408210:	mov    rsi,rcx
  408213:	mov    rdi,rax
  408216:	call   4068f9 <_start@@Base+0x669>
  40821b:	mov    QWORD PTR [rbp-0x40],rax
  40821f:	mov    rax,QWORD PTR [rbp-0x40]
  408223:	cmp    rax,QWORD PTR [rbp-0x48]
  408227:	jne    408232 <_start@@Base+0x1fa2>
  408229:	mov    rax,QWORD PTR [rbp-0x40]
  40822d:	jmp    40830b <_start@@Base+0x207b>
  408232:	mov    rax,QWORD PTR [rbp-0x50]
  408236:	mov    QWORD PTR [rbp-0x18],rax
  40823a:	mov    rax,QWORD PTR [rbp-0x18]
  40823e:	mov    rax,QWORD PTR [rax]
  408241:	mov    rdx,QWORD PTR [rbp-0x40]
  408245:	mov    QWORD PTR [rbp-0x10],rdx
  408249:	lea    r9,[rbp-0x24]
  40824d:	lea    r8,[rbp-0x20]
  408251:	lea    rcx,[rbp-0x28]
  408255:	mov    rdx,QWORD PTR [rbp-0x48]
  408259:	mov    rsi,QWORD PTR [rbp-0x10]
  40825d:	mov    rdi,QWORD PTR [rbp-0x38]
  408261:	call   rax
  408263:	mov    QWORD PTR [rbp-0x40],rax
  408267:	mov    rax,QWORD PTR [rbp-0x40]
  40826b:	cmp    rax,QWORD PTR [rbp-0x48]
  40826f:	jne    40827a <_start@@Base+0x1fea>
  408271:	mov    rax,QWORD PTR [rbp-0x40]
  408275:	jmp    40830b <_start@@Base+0x207b>
  40827a:	mov    rax,QWORD PTR [rbp-0x40]
  40827e:	cmp    rax,QWORD PTR [rbp-0x10]
  408282:	jne    408295 <_start@@Base+0x2005>
  408284:	add    QWORD PTR [rbp-0x18],0x8
  408289:	mov    rax,QWORD PTR [rbp-0x18]
  40828d:	mov    rax,QWORD PTR [rax]
  408290:	test   rax,rax
  408293:	jne    40823a <_start@@Base+0x1faa>
  408295:	mov    rax,QWORD PTR [rbp-0x10]
  408299:	cmp    rax,QWORD PTR [rbp-0x40]
  40829d:	jne    4082ba <_start@@Base+0x202a>
  40829f:	mov    rdx,QWORD PTR [rbp-0x48]
  4082a3:	mov    rsi,QWORD PTR [rbp-0x40]
  4082a7:	mov    rax,QWORD PTR [rbp-0x38]
  4082ab:	mov    ecx,0x17
  4082b0:	mov    rdi,rax
  4082b3:	call   427257 <flatcc_json_parser_set_error@@Base>
  4082b8:	jmp    40830b <_start@@Base+0x207b>
  4082ba:	mov    rdi,QWORD PTR [rbp-0x20]
  4082be:	mov    ecx,DWORD PTR [rbp-0x28]
  4082c1:	lea    r8,[rbp-0x2c]
  4082c5:	mov    rdx,QWORD PTR [rbp-0x48]
  4082c9:	mov    rsi,QWORD PTR [rbp-0x40]
  4082cd:	mov    rax,QWORD PTR [rbp-0x38]
  4082d1:	mov    r9,r8
  4082d4:	mov    r8,rdi
  4082d7:	mov    rdi,rax
  4082da:	call   4070b0 <_start@@Base+0xe20>
  4082df:	cmp    QWORD PTR [rbp-0x48],rax
  4082e3:	jne    4082eb <_start@@Base+0x205b>
  4082e5:	mov    rax,QWORD PTR [rbp-0x48]
  4082e9:	jmp    40830b <_start@@Base+0x207b>
  4082eb:	mov    rax,QWORD PTR [rbp-0x58]
  4082ef:	mov    edx,DWORD PTR [rax]
  4082f1:	mov    eax,DWORD PTR [rbp-0x2c]
  4082f4:	add    edx,eax
  4082f6:	mov    rax,QWORD PTR [rbp-0x58]
  4082fa:	mov    DWORD PTR [rax],edx
  4082fc:	mov    eax,DWORD PTR [rbp-0x24]
  4082ff:	test   eax,eax
  408301:	jne    408232 <_start@@Base+0x1fa2>
  408307:	mov    rax,QWORD PTR [rbp-0x40]
  40830b:	mov    rdi,QWORD PTR [rbp-0x8]
  40830f:	xor    rdi,QWORD PTR fs:0x28
  408318:	je     40831f <_start@@Base+0x208f>
  40831a:	call   4061a0 <__stack_chk_fail@plt>
  40831f:	leave  
  408320:	ret    
  408321:	endbr64 
  408325:	push   rbp
  408326:	mov    rbp,rsp
  408329:	sub    rsp,0x60
  40832d:	mov    QWORD PTR [rbp-0x38],rdi
  408331:	mov    QWORD PTR [rbp-0x40],rsi
  408335:	mov    QWORD PTR [rbp-0x48],rdx
  408339:	mov    QWORD PTR [rbp-0x50],rcx
  40833d:	mov    QWORD PTR [rbp-0x58],r8
  408341:	mov    rax,QWORD PTR fs:0x28
  40834a:	mov    QWORD PTR [rbp-0x8],rax
  40834e:	xor    eax,eax
  408350:	mov    WORD PTR [rbp-0x2a],0x0
  408356:	mov    rax,QWORD PTR [rbp-0x58]
  40835a:	mov    WORD PTR [rax],0x0
  40835f:	mov    rdx,QWORD PTR [rbp-0x48]
  408363:	mov    rcx,QWORD PTR [rbp-0x40]
  408367:	mov    rax,QWORD PTR [rbp-0x38]
  40836b:	mov    rsi,rcx
  40836e:	mov    rdi,rax
  408371:	call   4068f9 <_start@@Base+0x669>
  408376:	mov    QWORD PTR [rbp-0x40],rax
  40837a:	mov    rax,QWORD PTR [rbp-0x40]
  40837e:	cmp    rax,QWORD PTR [rbp-0x48]
  408382:	jne    40838d <_start@@Base+0x20fd>
  408384:	mov    rax,QWORD PTR [rbp-0x40]
  408388:	jmp    40846d <_start@@Base+0x21dd>
  40838d:	mov    rax,QWORD PTR [rbp-0x50]
  408391:	mov    QWORD PTR [rbp-0x18],rax
  408395:	mov    rax,QWORD PTR [rbp-0x18]
  408399:	mov    rax,QWORD PTR [rax]
  40839c:	mov    rdx,QWORD PTR [rbp-0x40]
  4083a0:	mov    QWORD PTR [rbp-0x10],rdx
  4083a4:	lea    r9,[rbp-0x24]
  4083a8:	lea    r8,[rbp-0x20]
  4083ac:	lea    rcx,[rbp-0x28]
  4083b0:	mov    rdx,QWORD PTR [rbp-0x48]
  4083b4:	mov    rsi,QWORD PTR [rbp-0x10]
  4083b8:	mov    rdi,QWORD PTR [rbp-0x38]
  4083bc:	call   rax
  4083be:	mov    QWORD PTR [rbp-0x40],rax
  4083c2:	mov    rax,QWORD PTR [rbp-0x40]
  4083c6:	cmp    rax,QWORD PTR [rbp-0x48]
  4083ca:	jne    4083d5 <_start@@Base+0x2145>
  4083cc:	mov    rax,QWORD PTR [rbp-0x40]
  4083d0:	jmp    40846d <_start@@Base+0x21dd>
  4083d5:	mov    rax,QWORD PTR [rbp-0x40]
  4083d9:	cmp    rax,QWORD PTR [rbp-0x10]
  4083dd:	jne    4083f0 <_start@@Base+0x2160>
  4083df:	add    QWORD PTR [rbp-0x18],0x8
  4083e4:	mov    rax,QWORD PTR [rbp-0x18]
  4083e8:	mov    rax,QWORD PTR [rax]
  4083eb:	test   rax,rax
  4083ee:	jne    408395 <_start@@Base+0x2105>
  4083f0:	mov    rax,QWORD PTR [rbp-0x10]
  4083f4:	cmp    rax,QWORD PTR [rbp-0x40]
  4083f8:	jne    408415 <_start@@Base+0x2185>
  4083fa:	mov    rdx,QWORD PTR [rbp-0x48]
  4083fe:	mov    rsi,QWORD PTR [rbp-0x40]
  408402:	mov    rax,QWORD PTR [rbp-0x38]
  408406:	mov    ecx,0x17
  40840b:	mov    rdi,rax
  40840e:	call   427257 <flatcc_json_parser_set_error@@Base>
  408413:	jmp    40846d <_start@@Base+0x21dd>
  408415:	mov    rdi,QWORD PTR [rbp-0x20]
  408419:	mov    ecx,DWORD PTR [rbp-0x28]
  40841c:	lea    r8,[rbp-0x2a]
  408420:	mov    rdx,QWORD PTR [rbp-0x48]
  408424:	mov    rsi,QWORD PTR [rbp-0x40]
  408428:	mov    rax,QWORD PTR [rbp-0x38]
  40842c:	mov    r9,r8
  40842f:	mov    r8,rdi
  408432:	mov    rdi,rax
  408435:	call   407142 <_start@@Base+0xeb2>
  40843a:	cmp    QWORD PTR [rbp-0x48],rax
  40843e:	jne    408446 <_start@@Base+0x21b6>
  408440:	mov    rax,QWORD PTR [rbp-0x48]
  408444:	jmp    40846d <_start@@Base+0x21dd>
  408446:	mov    rax,QWORD PTR [rbp-0x58]
  40844a:	movzx  eax,WORD PTR [rax]
  40844d:	mov    edx,eax
  40844f:	movzx  eax,WORD PTR [rbp-0x2a]
  408453:	add    eax,edx
  408455:	mov    edx,eax
  408457:	mov    rax,QWORD PTR [rbp-0x58]
  40845b:	mov    WORD PTR [rax],dx
  40845e:	mov    eax,DWORD PTR [rbp-0x24]
  408461:	test   eax,eax
  408463:	jne    40838d <_start@@Base+0x20fd>
  408469:	mov    rax,QWORD PTR [rbp-0x40]
  40846d:	mov    rdi,QWORD PTR [rbp-0x8]
  408471:	xor    rdi,QWORD PTR fs:0x28
  40847a:	je     408481 <_start@@Base+0x21f1>
  40847c:	call   4061a0 <__stack_chk_fail@plt>
  408481:	leave  
  408482:	ret    
  408483:	endbr64 
  408487:	push   rbp
  408488:	mov    rbp,rsp
  40848b:	sub    rsp,0x60
  40848f:	mov    QWORD PTR [rbp-0x38],rdi
  408493:	mov    QWORD PTR [rbp-0x40],rsi
  408497:	mov    QWORD PTR [rbp-0x48],rdx
  40849b:	mov    QWORD PTR [rbp-0x50],rcx
  40849f:	mov    QWORD PTR [rbp-0x58],r8
  4084a3:	mov    rax,QWORD PTR fs:0x28
  4084ac:	mov    QWORD PTR [rbp-0x8],rax
  4084b0:	xor    eax,eax
  4084b2:	mov    BYTE PTR [rbp-0x29],0x0
  4084b6:	mov    rax,QWORD PTR [rbp-0x58]
  4084ba:	mov    BYTE PTR [rax],0x0
  4084bd:	mov    rdx,QWORD PTR [rbp-0x48]
  4084c1:	mov    rcx,QWORD PTR [rbp-0x40]
  4084c5:	mov    rax,QWORD PTR [rbp-0x38]
  4084c9:	mov    rsi,rcx
  4084cc:	mov    rdi,rax
  4084cf:	call   4068f9 <_start@@Base+0x669>
  4084d4:	mov    QWORD PTR [rbp-0x40],rax
  4084d8:	mov    rax,QWORD PTR [rbp-0x40]
  4084dc:	cmp    rax,QWORD PTR [rbp-0x48]
  4084e0:	jne    4084eb <_start@@Base+0x225b>
  4084e2:	mov    rax,QWORD PTR [rbp-0x40]
  4084e6:	jmp    4085ca <_start@@Base+0x233a>
  4084eb:	mov    rax,QWORD PTR [rbp-0x50]
  4084ef:	mov    QWORD PTR [rbp-0x18],rax
  4084f3:	mov    rax,QWORD PTR [rbp-0x18]
  4084f7:	mov    rax,QWORD PTR [rax]
  4084fa:	mov    rdx,QWORD PTR [rbp-0x40]
  4084fe:	mov    QWORD PTR [rbp-0x10],rdx
  408502:	lea    r9,[rbp-0x24]
  408506:	lea    r8,[rbp-0x20]
  40850a:	lea    rcx,[rbp-0x28]
  40850e:	mov    rdx,QWORD PTR [rbp-0x48]
  408512:	mov    rsi,QWORD PTR [rbp-0x10]
  408516:	mov    rdi,QWORD PTR [rbp-0x38]
  40851a:	call   rax
  40851c:	mov    QWORD PTR [rbp-0x40],rax
  408520:	mov    rax,QWORD PTR [rbp-0x40]
  408524:	cmp    rax,QWORD PTR [rbp-0x48]
  408528:	jne    408533 <_start@@Base+0x22a3>
  40852a:	mov    rax,QWORD PTR [rbp-0x40]
  40852e:	jmp    4085ca <_start@@Base+0x233a>
  408533:	mov    rax,QWORD PTR [rbp-0x40]
  408537:	cmp    rax,QWORD PTR [rbp-0x10]
  40853b:	jne    40854e <_start@@Base+0x22be>
  40853d:	add    QWORD PTR [rbp-0x18],0x8
  408542:	mov    rax,QWORD PTR [rbp-0x18]
  408546:	mov    rax,QWORD PTR [rax]
  408549:	test   rax,rax
  40854c:	jne    4084f3 <_start@@Base+0x2263>
  40854e:	mov    rax,QWORD PTR [rbp-0x10]
  408552:	cmp    rax,QWORD PTR [rbp-0x40]
  408556:	jne    408573 <_start@@Base+0x22e3>
  408558:	mov    rdx,QWORD PTR [rbp-0x48]
  40855c:	mov    rsi,QWORD PTR [rbp-0x40]
  408560:	mov    rax,QWORD PTR [rbp-0x38]
  408564:	mov    ecx,0x17
  408569:	mov    rdi,rax
  40856c:	call   427257 <flatcc_json_parser_set_error@@Base>
  408571:	jmp    4085ca <_start@@Base+0x233a>
  408573:	mov    rdi,QWORD PTR [rbp-0x20]
  408577:	mov    ecx,DWORD PTR [rbp-0x28]
  40857a:	lea    r8,[rbp-0x29]
  40857e:	mov    rdx,QWORD PTR [rbp-0x48]
  408582:	mov    rsi,QWORD PTR [rbp-0x40]
  408586:	mov    rax,QWORD PTR [rbp-0x38]
  40858a:	mov    r9,r8
  40858d:	mov    r8,rdi
  408590:	mov    rdi,rax
  408593:	call   4071d5 <_start@@Base+0xf45>
  408598:	cmp    QWORD PTR [rbp-0x48],rax
  40859c:	jne    4085a4 <_start@@Base+0x2314>
  40859e:	mov    rax,QWORD PTR [rbp-0x48]
  4085a2:	jmp    4085ca <_start@@Base+0x233a>
  4085a4:	mov    rax,QWORD PTR [rbp-0x58]
  4085a8:	movzx  eax,BYTE PTR [rax]
  4085ab:	mov    edx,eax
  4085ad:	movzx  eax,BYTE PTR [rbp-0x29]
  4085b1:	add    eax,edx
  4085b3:	mov    edx,eax
  4085b5:	mov    rax,QWORD PTR [rbp-0x58]
  4085b9:	mov    BYTE PTR [rax],dl
  4085bb:	mov    eax,DWORD PTR [rbp-0x24]
  4085be:	test   eax,eax
  4085c0:	jne    4084eb <_start@@Base+0x225b>
  4085c6:	mov    rax,QWORD PTR [rbp-0x40]
  4085ca:	mov    rdi,QWORD PTR [rbp-0x8]
  4085ce:	xor    rdi,QWORD PTR fs:0x28
  4085d7:	je     4085de <_start@@Base+0x234e>
  4085d9:	call   4061a0 <__stack_chk_fail@plt>
  4085de:	leave  
  4085df:	ret    
  4085e0:	endbr64 
  4085e4:	push   rbp
  4085e5:	mov    rbp,rsp
  4085e8:	sub    rsp,0x60
  4085ec:	mov    QWORD PTR [rbp-0x38],rdi
  4085f0:	mov    QWORD PTR [rbp-0x40],rsi
  4085f4:	mov    QWORD PTR [rbp-0x48],rdx
  4085f8:	mov    QWORD PTR [rbp-0x50],rcx
  4085fc:	mov    QWORD PTR [rbp-0x58],r8
  408600:	mov    rax,QWORD PTR fs:0x28
  408609:	mov    QWORD PTR [rbp-0x8],rax
  40860d:	xor    eax,eax
  40860f:	mov    BYTE PTR [rbp-0x29],0x0
  408613:	mov    rax,QWORD PTR [rbp-0x58]
  408617:	mov    BYTE PTR [rax],0x0
  40861a:	mov    rdx,QWORD PTR [rbp-0x48]
  40861e:	mov    rcx,QWORD PTR [rbp-0x40]
  408622:	mov    rax,QWORD PTR [rbp-0x38]
  408626:	mov    rsi,rcx
  408629:	mov    rdi,rax
  40862c:	call   4068f9 <_start@@Base+0x669>
  408631:	mov    QWORD PTR [rbp-0x40],rax
  408635:	mov    rax,QWORD PTR [rbp-0x40]
  408639:	cmp    rax,QWORD PTR [rbp-0x48]
  40863d:	jne    408648 <_start@@Base+0x23b8>
  40863f:	mov    rax,QWORD PTR [rbp-0x40]
  408643:	jmp    408723 <_start@@Base+0x2493>
  408648:	mov    rax,QWORD PTR [rbp-0x50]
  40864c:	mov    QWORD PTR [rbp-0x18],rax
  408650:	mov    rax,QWORD PTR [rbp-0x18]
  408654:	mov    rax,QWORD PTR [rax]
  408657:	mov    rdx,QWORD PTR [rbp-0x40]
  40865b:	mov    QWORD PTR [rbp-0x10],rdx
  40865f:	lea    r9,[rbp-0x24]
  408663:	lea    r8,[rbp-0x20]
  408667:	lea    rcx,[rbp-0x28]
  40866b:	mov    rdx,QWORD PTR [rbp-0x48]
  40866f:	mov    rsi,QWORD PTR [rbp-0x10]
  408673:	mov    rdi,QWORD PTR [rbp-0x38]
  408677:	call   rax
  408679:	mov    QWORD PTR [rbp-0x40],rax
  40867d:	mov    rax,QWORD PTR [rbp-0x40]
  408681:	cmp    rax,QWORD PTR [rbp-0x48]
  408685:	jne    408690 <_start@@Base+0x2400>
  408687:	mov    rax,QWORD PTR [rbp-0x40]
  40868b:	jmp    408723 <_start@@Base+0x2493>
  408690:	mov    rax,QWORD PTR [rbp-0x40]
  408694:	cmp    rax,QWORD PTR [rbp-0x10]
  408698:	jne    4086ab <_start@@Base+0x241b>
  40869a:	add    QWORD PTR [rbp-0x18],0x8
  40869f:	mov    rax,QWORD PTR [rbp-0x18]
  4086a3:	mov    rax,QWORD PTR [rax]
  4086a6:	test   rax,rax
  4086a9:	jne    408650 <_start@@Base+0x23c0>
  4086ab:	mov    rax,QWORD PTR [rbp-0x10]
  4086af:	cmp    rax,QWORD PTR [rbp-0x40]
  4086b3:	jne    4086d0 <_start@@Base+0x2440>
  4086b5:	mov    rdx,QWORD PTR [rbp-0x48]
  4086b9:	mov    rsi,QWORD PTR [rbp-0x40]
  4086bd:	mov    rax,QWORD PTR [rbp-0x38]
  4086c1:	mov    ecx,0x17
  4086c6:	mov    rdi,rax
  4086c9:	call   427257 <flatcc_json_parser_set_error@@Base>
  4086ce:	jmp    408723 <_start@@Base+0x2493>
  4086d0:	mov    rdi,QWORD PTR [rbp-0x20]
  4086d4:	mov    ecx,DWORD PTR [rbp-0x28]
  4086d7:	lea    r8,[rbp-0x29]
  4086db:	mov    rdx,QWORD PTR [rbp-0x48]
  4086df:	mov    rsi,QWORD PTR [rbp-0x40]
  4086e3:	mov    rax,QWORD PTR [rbp-0x38]
  4086e7:	mov    r9,r8
  4086ea:	mov    r8,rdi
  4086ed:	mov    rdi,rax
  4086f0:	call   406e5b <_start@@Base+0xbcb>
  4086f5:	cmp    QWORD PTR [rbp-0x48],rax
  4086f9:	jne    408701 <_start@@Base+0x2471>
  4086fb:	mov    rax,QWORD PTR [rbp-0x48]
  4086ff:	jmp    408723 <_start@@Base+0x2493>
  408701:	mov    rax,QWORD PTR [rbp-0x58]
  408705:	movzx  edx,BYTE PTR [rax]
  408708:	movzx  eax,BYTE PTR [rbp-0x29]
  40870c:	add    eax,edx
  40870e:	mov    rdx,QWORD PTR [rbp-0x58]
  408712:	mov    BYTE PTR [rdx],al
  408714:	mov    eax,DWORD PTR [rbp-0x24]
  408717:	test   eax,eax
  408719:	jne    408648 <_start@@Base+0x23b8>
  40871f:	mov    rax,QWORD PTR [rbp-0x40]
  408723:	mov    rdi,QWORD PTR [rbp-0x8]
  408727:	xor    rdi,QWORD PTR fs:0x28
  408730:	je     408737 <_start@@Base+0x24a7>
  408732:	call   4061a0 <__stack_chk_fail@plt>
  408737:	leave  
  408738:	ret    
  408739:	endbr64 
  40873d:	push   rbp
  40873e:	mov    rbp,rsp
  408741:	sub    rsp,0x60
  408745:	mov    QWORD PTR [rbp-0x38],rdi
  408749:	mov    QWORD PTR [rbp-0x40],rsi
  40874d:	mov    QWORD PTR [rbp-0x48],rdx
  408751:	mov    QWORD PTR [rbp-0x50],rcx
  408755:	mov    QWORD PTR [rbp-0x58],r8
  408759:	mov    rax,QWORD PTR fs:0x28
  408762:	mov    QWORD PTR [rbp-0x8],rax
  408766:	xor    eax,eax
  408768:	vxorps xmm0,xmm0,xmm0
  40876c:	vmovss DWORD PTR [rbp-0x2c],xmm0
  408771:	mov    rax,QWORD PTR [rbp-0x58]
  408775:	vxorps xmm0,xmm0,xmm0
  408779:	vmovss DWORD PTR [rax],xmm0
  40877d:	mov    rdx,QWORD PTR [rbp-0x48]
  408781:	mov    rcx,QWORD PTR [rbp-0x40]
  408785:	mov    rax,QWORD PTR [rbp-0x38]
  408789:	mov    rsi,rcx
  40878c:	mov    rdi,rax
  40878f:	call   4068f9 <_start@@Base+0x669>
  408794:	mov    QWORD PTR [rbp-0x40],rax
  408798:	mov    rax,QWORD PTR [rbp-0x40]
  40879c:	cmp    rax,QWORD PTR [rbp-0x48]
  4087a0:	jne    4087ab <_start@@Base+0x251b>
  4087a2:	mov    rax,QWORD PTR [rbp-0x40]
  4087a6:	jmp    40888c <_start@@Base+0x25fc>
  4087ab:	mov    rax,QWORD PTR [rbp-0x50]
  4087af:	mov    QWORD PTR [rbp-0x18],rax
  4087b3:	mov    rax,QWORD PTR [rbp-0x18]
  4087b7:	mov    rax,QWORD PTR [rax]
  4087ba:	mov    rdx,QWORD PTR [rbp-0x40]
  4087be:	mov    QWORD PTR [rbp-0x10],rdx
  4087c2:	lea    r9,[rbp-0x24]
  4087c6:	lea    r8,[rbp-0x20]
  4087ca:	lea    rcx,[rbp-0x28]
  4087ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4087d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4087d6:	mov    rdi,QWORD PTR [rbp-0x38]
  4087da:	call   rax
  4087dc:	mov    QWORD PTR [rbp-0x40],rax
  4087e0:	mov    rax,QWORD PTR [rbp-0x40]
  4087e4:	cmp    rax,QWORD PTR [rbp-0x48]
  4087e8:	jne    4087f3 <_start@@Base+0x2563>
  4087ea:	mov    rax,QWORD PTR [rbp-0x40]
  4087ee:	jmp    40888c <_start@@Base+0x25fc>
  4087f3:	mov    rax,QWORD PTR [rbp-0x40]
  4087f7:	cmp    rax,QWORD PTR [rbp-0x10]
  4087fb:	jne    40880e <_start@@Base+0x257e>
  4087fd:	add    QWORD PTR [rbp-0x18],0x8
  408802:	mov    rax,QWORD PTR [rbp-0x18]
  408806:	mov    rax,QWORD PTR [rax]
  408809:	test   rax,rax
  40880c:	jne    4087b3 <_start@@Base+0x2523>
  40880e:	mov    rax,QWORD PTR [rbp-0x10]
  408812:	cmp    rax,QWORD PTR [rbp-0x40]
  408816:	jne    408833 <_start@@Base+0x25a3>
  408818:	mov    rdx,QWORD PTR [rbp-0x48]
  40881c:	mov    rsi,QWORD PTR [rbp-0x40]
  408820:	mov    rax,QWORD PTR [rbp-0x38]
  408824:	mov    ecx,0x17
  408829:	mov    rdi,rax
  40882c:	call   427257 <flatcc_json_parser_set_error@@Base>
  408831:	jmp    40888c <_start@@Base+0x25fc>
  408833:	mov    rdi,QWORD PTR [rbp-0x20]
  408837:	mov    ecx,DWORD PTR [rbp-0x28]
  40883a:	lea    r8,[rbp-0x2c]
  40883e:	mov    rdx,QWORD PTR [rbp-0x48]
  408842:	mov    rsi,QWORD PTR [rbp-0x40]
  408846:	mov    rax,QWORD PTR [rbp-0x38]
  40884a:	mov    r9,r8
  40884d:	mov    r8,rdi
  408850:	mov    rdi,rax
  408853:	call   407263 <_start@@Base+0xfd3>
  408858:	cmp    QWORD PTR [rbp-0x48],rax
  40885c:	jne    408864 <_start@@Base+0x25d4>
  40885e:	mov    rax,QWORD PTR [rbp-0x48]
  408862:	jmp    40888c <_start@@Base+0x25fc>
  408864:	mov    rax,QWORD PTR [rbp-0x58]
  408868:	vmovss xmm1,DWORD PTR [rax]
  40886c:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  408871:	vaddss xmm0,xmm1,xmm0
  408875:	mov    rax,QWORD PTR [rbp-0x58]
  408879:	vmovss DWORD PTR [rax],xmm0
  40887d:	mov    eax,DWORD PTR [rbp-0x24]
  408880:	test   eax,eax
  408882:	jne    4087ab <_start@@Base+0x251b>
  408888:	mov    rax,QWORD PTR [rbp-0x40]
  40888c:	mov    rdi,QWORD PTR [rbp-0x8]
  408890:	xor    rdi,QWORD PTR fs:0x28
  408899:	je     4088a0 <_start@@Base+0x2610>
  40889b:	call   4061a0 <__stack_chk_fail@plt>
  4088a0:	leave  
  4088a1:	ret    
  4088a2:	endbr64 
  4088a6:	push   rbp
  4088a7:	mov    rbp,rsp
  4088aa:	sub    rsp,0x60
  4088ae:	mov    QWORD PTR [rbp-0x38],rdi
  4088b2:	mov    QWORD PTR [rbp-0x40],rsi
  4088b6:	mov    QWORD PTR [rbp-0x48],rdx
  4088ba:	mov    QWORD PTR [rbp-0x50],rcx
  4088be:	mov    QWORD PTR [rbp-0x58],r8
  4088c2:	mov    rax,QWORD PTR fs:0x28
  4088cb:	mov    QWORD PTR [rbp-0x8],rax
  4088cf:	xor    eax,eax
  4088d1:	vxorpd xmm0,xmm0,xmm0
  4088d5:	vmovsd QWORD PTR [rbp-0x28],xmm0
  4088da:	mov    rax,QWORD PTR [rbp-0x58]
  4088de:	vxorpd xmm0,xmm0,xmm0
  4088e2:	vmovsd QWORD PTR [rax],xmm0
  4088e6:	mov    rdx,QWORD PTR [rbp-0x48]
  4088ea:	mov    rcx,QWORD PTR [rbp-0x40]
  4088ee:	mov    rax,QWORD PTR [rbp-0x38]
  4088f2:	mov    rsi,rcx
  4088f5:	mov    rdi,rax
  4088f8:	call   4068f9 <_start@@Base+0x669>
  4088fd:	mov    QWORD PTR [rbp-0x40],rax
  408901:	mov    rax,QWORD PTR [rbp-0x40]
  408905:	cmp    rax,QWORD PTR [rbp-0x48]
  408909:	jne    408914 <_start@@Base+0x2684>
  40890b:	mov    rax,QWORD PTR [rbp-0x40]
  40890f:	jmp    4089f5 <_start@@Base+0x2765>
  408914:	mov    rax,QWORD PTR [rbp-0x50]
  408918:	mov    QWORD PTR [rbp-0x18],rax
  40891c:	mov    rax,QWORD PTR [rbp-0x18]
  408920:	mov    rax,QWORD PTR [rax]
  408923:	mov    rdx,QWORD PTR [rbp-0x40]
  408927:	mov    QWORD PTR [rbp-0x10],rdx
  40892b:	lea    r9,[rbp-0x2c]
  40892f:	lea    r8,[rbp-0x20]
  408933:	lea    rcx,[rbp-0x30]
  408937:	mov    rdx,QWORD PTR [rbp-0x48]
  40893b:	mov    rsi,QWORD PTR [rbp-0x10]
  40893f:	mov    rdi,QWORD PTR [rbp-0x38]
  408943:	call   rax
  408945:	mov    QWORD PTR [rbp-0x40],rax
  408949:	mov    rax,QWORD PTR [rbp-0x40]
  40894d:	cmp    rax,QWORD PTR [rbp-0x48]
  408951:	jne    40895c <_start@@Base+0x26cc>
  408953:	mov    rax,QWORD PTR [rbp-0x40]
  408957:	jmp    4089f5 <_start@@Base+0x2765>
  40895c:	mov    rax,QWORD PTR [rbp-0x40]
  408960:	cmp    rax,QWORD PTR [rbp-0x10]
  408964:	jne    408977 <_start@@Base+0x26e7>
  408966:	add    QWORD PTR [rbp-0x18],0x8
  40896b:	mov    rax,QWORD PTR [rbp-0x18]
  40896f:	mov    rax,QWORD PTR [rax]
  408972:	test   rax,rax
  408975:	jne    40891c <_start@@Base+0x268c>
  408977:	mov    rax,QWORD PTR [rbp-0x10]
  40897b:	cmp    rax,QWORD PTR [rbp-0x40]
  40897f:	jne    40899c <_start@@Base+0x270c>
  408981:	mov    rdx,QWORD PTR [rbp-0x48]
  408985:	mov    rsi,QWORD PTR [rbp-0x40]
  408989:	mov    rax,QWORD PTR [rbp-0x38]
  40898d:	mov    ecx,0x17
  408992:	mov    rdi,rax
  408995:	call   427257 <flatcc_json_parser_set_error@@Base>
  40899a:	jmp    4089f5 <_start@@Base+0x2765>
  40899c:	mov    rdi,QWORD PTR [rbp-0x20]
  4089a0:	mov    ecx,DWORD PTR [rbp-0x30]
  4089a3:	lea    r8,[rbp-0x28]
  4089a7:	mov    rdx,QWORD PTR [rbp-0x48]
  4089ab:	mov    rsi,QWORD PTR [rbp-0x40]
  4089af:	mov    rax,QWORD PTR [rbp-0x38]
  4089b3:	mov    r9,r8
  4089b6:	mov    r8,rdi
  4089b9:	mov    rdi,rax
  4089bc:	call   4072ea <_start@@Base+0x105a>
  4089c1:	cmp    QWORD PTR [rbp-0x48],rax
  4089c5:	jne    4089cd <_start@@Base+0x273d>
  4089c7:	mov    rax,QWORD PTR [rbp-0x48]
  4089cb:	jmp    4089f5 <_start@@Base+0x2765>
  4089cd:	mov    rax,QWORD PTR [rbp-0x58]
  4089d1:	vmovsd xmm1,QWORD PTR [rax]
  4089d5:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  4089da:	vaddsd xmm0,xmm1,xmm0
  4089de:	mov    rax,QWORD PTR [rbp-0x58]
  4089e2:	vmovsd QWORD PTR [rax],xmm0
  4089e6:	mov    eax,DWORD PTR [rbp-0x2c]
  4089e9:	test   eax,eax
  4089eb:	jne    408914 <_start@@Base+0x2684>
  4089f1:	mov    rax,QWORD PTR [rbp-0x40]
  4089f5:	mov    rdi,QWORD PTR [rbp-0x8]
  4089f9:	xor    rdi,QWORD PTR fs:0x28
  408a02:	je     408a09 <_start@@Base+0x2779>
  408a04:	call   4061a0 <__stack_chk_fail@plt>
  408a09:	leave  
  408a0a:	ret    
  408a0b:	endbr64 
  408a0f:	push   rbp
  408a10:	mov    rbp,rsp
  408a13:	sub    rsp,0x50
  408a17:	mov    QWORD PTR [rbp-0x28],rdi
  408a1b:	mov    QWORD PTR [rbp-0x30],rsi
  408a1f:	mov    QWORD PTR [rbp-0x38],rdx
  408a23:	mov    QWORD PTR [rbp-0x40],rcx
  408a27:	mov    QWORD PTR [rbp-0x48],r8
  408a2b:	mov    QWORD PTR [rbp-0x50],r9
  408a2f:	mov    rax,QWORD PTR [rbp-0x30]
  408a33:	mov    QWORD PTR [rbp-0x18],rax
  408a37:	mov    rdx,QWORD PTR [rbp-0x38]
  408a3b:	mov    rax,QWORD PTR [rbp-0x30]
  408a3f:	mov    rsi,rdx
  408a42:	mov    rdi,rax
  408a45:	call   406853 <_start@@Base+0x5c3>
  408a4a:	mov    QWORD PTR [rbp-0x10],rax
  408a4e:	movabs rax,0xffffff0000000000
  408a58:	and    rax,QWORD PTR [rbp-0x10]
  408a5c:	mov    rdx,rax
  408a5f:	movabs rax,0x466f6f0000000000
  408a69:	cmp    rdx,rax
  408a6c:	jne    408abe <_start@@Base+0x282e>
  408a6e:	mov    rax,QWORD PTR [rbp-0x30]
  408a72:	mov    QWORD PTR [rbp-0x8],rax
  408a76:	mov    rcx,QWORD PTR [rbp-0x50]
  408a7a:	mov    rdx,QWORD PTR [rbp-0x38]
  408a7e:	mov    rsi,QWORD PTR [rbp-0x8]
  408a82:	mov    rax,QWORD PTR [rbp-0x28]
  408a86:	mov    r8,rcx
  408a89:	mov    ecx,0x3
  408a8e:	mov    rdi,rax
  408a91:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  408a96:	mov    QWORD PTR [rbp-0x30],rax
  408a9a:	mov    rax,QWORD PTR [rbp-0x30]
  408a9e:	cmp    rax,QWORD PTR [rbp-0x8]
  408aa2:	je     408ac1 <_start@@Base+0x2831>
  408aa4:	mov    rax,QWORD PTR [rbp-0x48]
  408aa8:	mov    QWORD PTR [rax],0x11
  408aaf:	mov    rax,QWORD PTR [rbp-0x40]
  408ab3:	mov    DWORD PTR [rax],0x0
  408ab9:	jmp    408b71 <_start@@Base+0x28e1>
  408abe:	nop
  408abf:	jmp    408ac2 <_start@@Base+0x2832>
  408ac1:	nop
  408ac2:	movabs rax,0x496e636c75646556
  408acc:	cmp    QWORD PTR [rbp-0x10],rax
  408ad0:	jne    408b6b <_start@@Base+0x28db>
  408ad6:	add    QWORD PTR [rbp-0x30],0x8
  408adb:	mov    rdx,QWORD PTR [rbp-0x38]
  408adf:	mov    rax,QWORD PTR [rbp-0x30]
  408ae3:	mov    rsi,rdx
  408ae6:	mov    rdi,rax
  408ae9:	call   406853 <_start@@Base+0x5c3>
  408aee:	mov    QWORD PTR [rbp-0x10],rax
  408af2:	movabs rax,0xffff000000000000
  408afc:	and    rax,QWORD PTR [rbp-0x10]
  408b00:	mov    rdx,rax
  408b03:	movabs rax,0x616c000000000000
  408b0d:	cmp    rdx,rax
  408b10:	jne    408b65 <_start@@Base+0x28d5>
  408b12:	mov    rax,QWORD PTR [rbp-0x30]
  408b16:	mov    QWORD PTR [rbp-0x8],rax
  408b1a:	mov    rcx,QWORD PTR [rbp-0x50]
  408b1e:	mov    rdx,QWORD PTR [rbp-0x38]
  408b22:	mov    rsi,QWORD PTR [rbp-0x8]
  408b26:	mov    rax,QWORD PTR [rbp-0x28]
  408b2a:	mov    r8,rcx
  408b2d:	mov    ecx,0x2
  408b32:	mov    rdi,rax
  408b35:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  408b3a:	mov    QWORD PTR [rbp-0x30],rax
  408b3e:	mov    rax,QWORD PTR [rbp-0x30]
  408b42:	cmp    rax,QWORD PTR [rbp-0x8]
  408b46:	je     408b5f <_start@@Base+0x28cf>
  408b48:	mov    rax,QWORD PTR [rbp-0x48]
  408b4c:	mov    QWORD PTR [rax],0x0
  408b53:	mov    rax,QWORD PTR [rbp-0x40]
  408b57:	mov    DWORD PTR [rax],0x0
  408b5d:	jmp    408b71 <_start@@Base+0x28e1>
  408b5f:	mov    rax,QWORD PTR [rbp-0x18]
  408b63:	jmp    408b75 <_start@@Base+0x28e5>
  408b65:	mov    rax,QWORD PTR [rbp-0x18]
  408b69:	jmp    408b75 <_start@@Base+0x28e5>
  408b6b:	mov    rax,QWORD PTR [rbp-0x18]
  408b6f:	jmp    408b75 <_start@@Base+0x28e5>
  408b71:	mov    rax,QWORD PTR [rbp-0x30]
  408b75:	leave  
  408b76:	ret    
  408b77:	endbr64 
  408b7b:	push   rbp
  408b7c:	mov    rbp,rsp
  408b7f:	sub    rsp,0x30
  408b83:	mov    QWORD PTR [rbp-0x18],rdi
  408b87:	mov    QWORD PTR [rbp-0x20],rsi
  408b8b:	mov    QWORD PTR [rbp-0x28],rdx
  408b8f:	mov    QWORD PTR [rbp-0x30],rcx
  408b93:	mov    rax,QWORD PTR fs:0x28
  408b9c:	mov    QWORD PTR [rbp-0x8],rax
  408ba0:	xor    eax,eax
  408ba2:	lea    rcx,[rbp-0xc]
  408ba6:	mov    rdx,QWORD PTR [rbp-0x28]
  408baa:	mov    rsi,QWORD PTR [rbp-0x20]
  408bae:	mov    rax,QWORD PTR [rbp-0x18]
  408bb2:	mov    rdi,rax
  408bb5:	call   406949 <_start@@Base+0x6b9>
  408bba:	mov    QWORD PTR [rbp-0x20],rax
  408bbe:	jmp    408bf7 <_start@@Base+0x2967>
  408bc0:	mov    rdx,QWORD PTR [rbp-0x28]
  408bc4:	mov    rcx,QWORD PTR [rbp-0x20]
  408bc8:	mov    rax,QWORD PTR [rbp-0x18]
  408bcc:	mov    rsi,rcx
  408bcf:	mov    rdi,rax
  408bd2:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  408bd7:	mov    QWORD PTR [rbp-0x20],rax
  408bdb:	lea    rcx,[rbp-0xc]
  408bdf:	mov    rdx,QWORD PTR [rbp-0x28]
  408be3:	mov    rsi,QWORD PTR [rbp-0x20]
  408be7:	mov    rax,QWORD PTR [rbp-0x18]
  408beb:	mov    rdi,rax
  408bee:	call   406a06 <_start@@Base+0x776>
  408bf3:	mov    QWORD PTR [rbp-0x20],rax
  408bf7:	mov    eax,DWORD PTR [rbp-0xc]
  408bfa:	test   eax,eax
  408bfc:	jne    408bc0 <_start@@Base+0x2930>
  408bfe:	mov    rax,QWORD PTR [rbp-0x20]
  408c02:	mov    rdi,QWORD PTR [rbp-0x8]
  408c06:	xor    rdi,QWORD PTR fs:0x28
  408c0f:	je     408c16 <_start@@Base+0x2986>
  408c11:	call   4061a0 <__stack_chk_fail@plt>
  408c16:	leave  
  408c17:	ret    
  408c18:	endbr64 
  408c1c:	push   rbp
  408c1d:	mov    rbp,rsp
  408c20:	sub    rsp,0x30
  408c24:	mov    QWORD PTR [rbp-0x18],rdi
  408c28:	mov    QWORD PTR [rbp-0x20],rsi
  408c2c:	mov    QWORD PTR [rbp-0x28],rdx
  408c30:	mov    QWORD PTR [rbp-0x30],rcx
  408c34:	mov    rax,QWORD PTR [rbp-0x30]
  408c38:	mov    DWORD PTR [rax],0x0
  408c3e:	mov    rax,QWORD PTR [rbp-0x18]
  408c42:	mov    rax,QWORD PTR [rax]
  408c45:	mov    edx,0x1
  408c4a:	mov    esi,0x0
  408c4f:	mov    rdi,rax
  408c52:	call   41d6fb <flatcc_builder_start_struct@@Base>
  408c57:	mov    QWORD PTR [rbp-0x8],rax
  408c5b:	cmp    QWORD PTR [rbp-0x8],0x0
  408c60:	je     408caf <_start@@Base+0x2a1f>
  408c62:	mov    rcx,QWORD PTR [rbp-0x8]
  408c66:	mov    rdx,QWORD PTR [rbp-0x28]
  408c6a:	mov    rsi,QWORD PTR [rbp-0x20]
  408c6e:	mov    rax,QWORD PTR [rbp-0x18]
  408c72:	mov    rdi,rax
  408c75:	call   408b77 <_start@@Base+0x28e7>
  408c7a:	mov    QWORD PTR [rbp-0x20],rax
  408c7e:	mov    rax,QWORD PTR [rbp-0x20]
  408c82:	cmp    rax,QWORD PTR [rbp-0x28]
  408c86:	je     408cb2 <_start@@Base+0x2a22>
  408c88:	mov    rax,QWORD PTR [rbp-0x18]
  408c8c:	mov    rax,QWORD PTR [rax]
  408c8f:	mov    rdi,rax
  408c92:	call   41d77d <flatcc_builder_end_struct@@Base>
  408c97:	mov    edx,eax
  408c99:	mov    rax,QWORD PTR [rbp-0x30]
  408c9d:	mov    DWORD PTR [rax],edx
  408c9f:	mov    rax,QWORD PTR [rbp-0x30]
  408ca3:	mov    eax,DWORD PTR [rax]
  408ca5:	test   eax,eax
  408ca7:	je     408cb2 <_start@@Base+0x2a22>
  408ca9:	mov    rax,QWORD PTR [rbp-0x20]
  408cad:	jmp    408ccc <_start@@Base+0x2a3c>
  408caf:	nop
  408cb0:	jmp    408cb3 <_start@@Base+0x2a23>
  408cb2:	nop
  408cb3:	mov    rdx,QWORD PTR [rbp-0x28]
  408cb7:	mov    rsi,QWORD PTR [rbp-0x20]
  408cbb:	mov    rax,QWORD PTR [rbp-0x18]
  408cbf:	mov    ecx,0x21
  408cc4:	mov    rdi,rax
  408cc7:	call   427257 <flatcc_json_parser_set_error@@Base>
  408ccc:	leave  
  408ccd:	ret    
  408cce:	endbr64 
  408cd2:	push   rbp
  408cd3:	mov    rbp,rsp
  408cd6:	mov    QWORD PTR [rbp-0x8],rdi
  408cda:	mov    QWORD PTR [rbp-0x10],rsi
  408cde:	mov    QWORD PTR [rbp-0x18],rdx
  408ce2:	mov    QWORD PTR [rbp-0x20],rcx
  408ce6:	mov    QWORD PTR [rbp-0x28],r8
  408cea:	mov    QWORD PTR [rbp-0x30],r9
  408cee:	mov    rax,QWORD PTR [rbp-0x10]
  408cf2:	pop    rbp
  408cf3:	ret    
  408cf4:	endbr64 
  408cf8:	push   rbp
  408cf9:	mov    rbp,rsp
  408cfc:	mov    QWORD PTR [rbp-0x8],rdi
  408d00:	mov    QWORD PTR [rbp-0x10],rsi
  408d04:	mov    QWORD PTR [rbp-0x18],rdx
  408d08:	mov    QWORD PTR [rbp-0x20],rcx
  408d0c:	mov    QWORD PTR [rbp-0x28],r8
  408d10:	mov    QWORD PTR [rbp-0x30],r9
  408d14:	mov    rax,QWORD PTR [rbp-0x10]
  408d18:	pop    rbp
  408d19:	ret    
  408d1a:	endbr64 
  408d1e:	push   rbp
  408d1f:	mov    rbp,rsp
  408d22:	mov    QWORD PTR [rbp-0x8],rdi
  408d26:	mov    QWORD PTR [rbp-0x10],rsi
  408d2a:	mov    QWORD PTR [rbp-0x18],rdx
  408d2e:	mov    QWORD PTR [rbp-0x20],rcx
  408d32:	mov    QWORD PTR [rbp-0x28],r8
  408d36:	mov    QWORD PTR [rbp-0x30],r9
  408d3a:	mov    rax,QWORD PTR [rbp-0x10]
  408d3e:	pop    rbp
  408d3f:	ret    
  408d40:	endbr64 
  408d44:	push   rbp
  408d45:	mov    rbp,rsp
  408d48:	mov    QWORD PTR [rbp-0x8],rdi
  408d4c:	mov    QWORD PTR [rbp-0x10],rsi
  408d50:	mov    QWORD PTR [rbp-0x18],rdx
  408d54:	mov    QWORD PTR [rbp-0x20],rcx
  408d58:	mov    QWORD PTR [rbp-0x28],r8
  408d5c:	mov    QWORD PTR [rbp-0x30],r9
  408d60:	mov    rax,QWORD PTR [rbp-0x10]
  408d64:	pop    rbp
  408d65:	ret    
  408d66:	endbr64 
  408d6a:	push   rbp
  408d6b:	mov    rbp,rsp
  408d6e:	mov    QWORD PTR [rbp-0x8],rdi
  408d72:	mov    QWORD PTR [rbp-0x10],rsi
  408d76:	mov    QWORD PTR [rbp-0x18],rdx
  408d7a:	mov    QWORD PTR [rbp-0x20],rcx
  408d7e:	mov    QWORD PTR [rbp-0x28],r8
  408d82:	mov    QWORD PTR [rbp-0x30],r9
  408d86:	mov    rax,QWORD PTR [rbp-0x10]
  408d8a:	pop    rbp
  408d8b:	ret    
  408d8c:	endbr64 
  408d90:	push   rbp
  408d91:	mov    rbp,rsp
  408d94:	sub    rsp,0x50
  408d98:	mov    QWORD PTR [rbp-0x28],rdi
  408d9c:	mov    QWORD PTR [rbp-0x30],rsi
  408da0:	mov    QWORD PTR [rbp-0x38],rdx
  408da4:	mov    QWORD PTR [rbp-0x40],rcx
  408da8:	mov    QWORD PTR [rbp-0x48],r8
  408dac:	mov    QWORD PTR [rbp-0x50],r9
  408db0:	mov    rax,QWORD PTR [rbp-0x30]
  408db4:	mov    QWORD PTR [rbp-0x18],rax
  408db8:	mov    rdx,QWORD PTR [rbp-0x38]
  408dbc:	mov    rax,QWORD PTR [rbp-0x30]
  408dc0:	mov    rsi,rdx
  408dc3:	mov    rdi,rax
  408dc6:	call   406853 <_start@@Base+0x5c3>
  408dcb:	mov    QWORD PTR [rbp-0x10],rax
  408dcf:	movabs rax,0x46726f6d496e636c
  408dd9:	cmp    QWORD PTR [rbp-0x10],rax
  408ddd:	jne    408e8a <_start@@Base+0x2bfa>
  408de3:	add    QWORD PTR [rbp-0x30],0x8
  408de8:	mov    rdx,QWORD PTR [rbp-0x38]
  408dec:	mov    rax,QWORD PTR [rbp-0x30]
  408df0:	mov    rsi,rdx
  408df3:	mov    rdi,rax
  408df6:	call   406853 <_start@@Base+0x5c3>
  408dfb:	mov    QWORD PTR [rbp-0x10],rax
  408dff:	movabs rax,0xffffff0000000000
  408e09:	and    rax,QWORD PTR [rbp-0x10]
  408e0d:	mov    rdx,rax
  408e10:	movabs rax,0x7564650000000000
  408e1a:	cmp    rdx,rax
  408e1d:	jne    408e84 <_start@@Base+0x2bf4>
  408e1f:	mov    rax,QWORD PTR [rbp-0x30]
  408e23:	mov    QWORD PTR [rbp-0x8],rax
  408e27:	mov    rdx,QWORD PTR [rbp-0x38]
  408e2b:	mov    rsi,QWORD PTR [rbp-0x8]
  408e2f:	mov    rax,QWORD PTR [rbp-0x28]
  408e33:	mov    ecx,0x3
  408e38:	mov    rdi,rax
  408e3b:	call   406897 <_start@@Base+0x607>
  408e40:	mov    QWORD PTR [rbp-0x30],rax
  408e44:	mov    rax,QWORD PTR [rbp-0x30]
  408e48:	cmp    rax,QWORD PTR [rbp-0x8]
  408e4c:	je     408e7e <_start@@Base+0x2bee>
  408e4e:	mov    r8,QWORD PTR [rbp-0x50]
  408e52:	mov    rdi,QWORD PTR [rbp-0x48]
  408e56:	mov    rcx,QWORD PTR [rbp-0x40]
  408e5a:	mov    rdx,QWORD PTR [rbp-0x38]
  408e5e:	mov    rsi,QWORD PTR [rbp-0x30]
  408e62:	mov    rax,QWORD PTR [rbp-0x28]
  408e66:	mov    r9,r8
  408e69:	mov    r8,rdi
  408e6c:	mov    rdi,rax
  408e6f:	call   408a0b <_start@@Base+0x277b>
  408e74:	mov    QWORD PTR [rbp-0x30],rax
  408e78:	mov    rax,QWORD PTR [rbp-0x30]
  408e7c:	jmp    408e8e <_start@@Base+0x2bfe>
  408e7e:	mov    rax,QWORD PTR [rbp-0x18]
  408e82:	jmp    408e8e <_start@@Base+0x2bfe>
  408e84:	mov    rax,QWORD PTR [rbp-0x18]
  408e88:	jmp    408e8e <_start@@Base+0x2bfe>
  408e8a:	mov    rax,QWORD PTR [rbp-0x18]
  408e8e:	leave  
  408e8f:	ret    
  408e90:	endbr64 
  408e94:	push   rbp
  408e95:	mov    rbp,rsp
  408e98:	sub    rsp,0x50
  408e9c:	mov    QWORD PTR [rbp-0x28],rdi
  408ea0:	mov    QWORD PTR [rbp-0x30],rsi
  408ea4:	mov    QWORD PTR [rbp-0x38],rdx
  408ea8:	mov    QWORD PTR [rbp-0x40],rcx
  408eac:	mov    QWORD PTR [rbp-0x48],r8
  408eb0:	mov    QWORD PTR [rbp-0x50],r9
  408eb4:	mov    rax,QWORD PTR [rbp-0x30]
  408eb8:	mov    QWORD PTR [rbp-0x18],rax
  408ebc:	mov    rdx,QWORD PTR [rbp-0x38]
  408ec0:	mov    rax,QWORD PTR [rbp-0x30]
  408ec4:	mov    rsi,rdx
  408ec7:	mov    rdi,rax
  408eca:	call   406853 <_start@@Base+0x5c3>
  408ecf:	mov    QWORD PTR [rbp-0x10],rax
  408ed3:	movabs rax,0x4d7947616d652e4f
  408edd:	cmp    QWORD PTR [rbp-0x10],rax
  408ee1:	jne    409030 <_start@@Base+0x2da0>
  408ee7:	add    QWORD PTR [rbp-0x30],0x8
  408eec:	mov    rdx,QWORD PTR [rbp-0x38]
  408ef0:	mov    rax,QWORD PTR [rbp-0x30]
  408ef4:	mov    rsi,rdx
  408ef7:	mov    rdi,rax
  408efa:	call   406853 <_start@@Base+0x5c3>
  408eff:	mov    QWORD PTR [rbp-0x10],rax
  408f03:	movabs rax,0x746865724e616d65
  408f0d:	cmp    QWORD PTR [rbp-0x10],rax
  408f11:	jne    40902a <_start@@Base+0x2d9a>
  408f17:	add    QWORD PTR [rbp-0x30],0x8
  408f1c:	mov    rdx,QWORD PTR [rbp-0x38]
  408f20:	mov    rax,QWORD PTR [rbp-0x30]
  408f24:	mov    rsi,rdx
  408f27:	mov    rdi,rax
  408f2a:	call   406853 <_start@@Base+0x5c3>
  408f2f:	mov    QWORD PTR [rbp-0x10],rax
  408f33:	movabs rax,0x53706163652e4672
  408f3d:	cmp    QWORD PTR [rbp-0x10],rax
  408f41:	jne    409024 <_start@@Base+0x2d94>
  408f47:	add    QWORD PTR [rbp-0x30],0x8
  408f4c:	mov    rdx,QWORD PTR [rbp-0x38]
  408f50:	mov    rax,QWORD PTR [rbp-0x30]
  408f54:	mov    rsi,rdx
  408f57:	mov    rdi,rax
  408f5a:	call   406853 <_start@@Base+0x5c3>
  408f5f:	mov    QWORD PTR [rbp-0x10],rax
  408f63:	movabs rax,0x6f6d496e636c7564
  408f6d:	cmp    QWORD PTR [rbp-0x10],rax
  408f71:	jne    40901e <_start@@Base+0x2d8e>
  408f77:	add    QWORD PTR [rbp-0x30],0x8
  408f7c:	mov    rdx,QWORD PTR [rbp-0x38]
  408f80:	mov    rax,QWORD PTR [rbp-0x30]
  408f84:	mov    rsi,rdx
  408f87:	mov    rdi,rax
  408f8a:	call   406853 <_start@@Base+0x5c3>
  408f8f:	mov    QWORD PTR [rbp-0x10],rax
  408f93:	movabs rax,0xff00000000000000
  408f9d:	and    rax,QWORD PTR [rbp-0x10]
  408fa1:	mov    rdx,rax
  408fa4:	movabs rax,0x6500000000000000
  408fae:	cmp    rdx,rax
  408fb1:	jne    409018 <_start@@Base+0x2d88>
  408fb3:	mov    rax,QWORD PTR [rbp-0x30]
  408fb7:	mov    QWORD PTR [rbp-0x8],rax
  408fbb:	mov    rdx,QWORD PTR [rbp-0x38]
  408fbf:	mov    rsi,QWORD PTR [rbp-0x8]
  408fc3:	mov    rax,QWORD PTR [rbp-0x28]
  408fc7:	mov    ecx,0x1
  408fcc:	mov    rdi,rax
  408fcf:	call   406897 <_start@@Base+0x607>
  408fd4:	mov    QWORD PTR [rbp-0x30],rax
  408fd8:	mov    rax,QWORD PTR [rbp-0x30]
  408fdc:	cmp    rax,QWORD PTR [rbp-0x8]
  408fe0:	je     409012 <_start@@Base+0x2d82>
  408fe2:	mov    r8,QWORD PTR [rbp-0x50]
  408fe6:	mov    rdi,QWORD PTR [rbp-0x48]
  408fea:	mov    rcx,QWORD PTR [rbp-0x40]
  408fee:	mov    rdx,QWORD PTR [rbp-0x38]
  408ff2:	mov    rsi,QWORD PTR [rbp-0x30]
  408ff6:	mov    rax,QWORD PTR [rbp-0x28]
  408ffa:	mov    r9,r8
  408ffd:	mov    r8,rdi
  409000:	mov    rdi,rax
  409003:	call   408a0b <_start@@Base+0x277b>
  409008:	mov    QWORD PTR [rbp-0x30],rax
  40900c:	mov    rax,QWORD PTR [rbp-0x30]
  409010:	jmp    409034 <_start@@Base+0x2da4>
  409012:	mov    rax,QWORD PTR [rbp-0x18]
  409016:	jmp    409034 <_start@@Base+0x2da4>
  409018:	mov    rax,QWORD PTR [rbp-0x18]
  40901c:	jmp    409034 <_start@@Base+0x2da4>
  40901e:	mov    rax,QWORD PTR [rbp-0x18]
  409022:	jmp    409034 <_start@@Base+0x2da4>
  409024:	mov    rax,QWORD PTR [rbp-0x18]
  409028:	jmp    409034 <_start@@Base+0x2da4>
  40902a:	mov    rax,QWORD PTR [rbp-0x18]
  40902e:	jmp    409034 <_start@@Base+0x2da4>
  409030:	mov    rax,QWORD PTR [rbp-0x18]
  409034:	leave  
  409035:	ret    
  409036:	endbr64 
  40903a:	push   rbp
  40903b:	mov    rbp,rsp
  40903e:	mov    QWORD PTR [rbp-0x8],rdi
  409042:	mov    QWORD PTR [rbp-0x10],rsi
  409046:	mov    QWORD PTR [rbp-0x18],rdx
  40904a:	mov    QWORD PTR [rbp-0x20],rcx
  40904e:	mov    QWORD PTR [rbp-0x28],r8
  409052:	mov    QWORD PTR [rbp-0x30],r9
  409056:	mov    rax,QWORD PTR [rbp-0x10]
  40905a:	pop    rbp
  40905b:	ret    
  40905c:	endbr64 
  409060:	push   rbp
  409061:	mov    rbp,rsp
  409064:	mov    QWORD PTR [rbp-0x8],rdi
  409068:	mov    QWORD PTR [rbp-0x10],rsi
  40906c:	mov    QWORD PTR [rbp-0x18],rdx
  409070:	mov    QWORD PTR [rbp-0x20],rcx
  409074:	mov    QWORD PTR [rbp-0x28],r8
  409078:	mov    QWORD PTR [rbp-0x30],r9
  40907c:	mov    rax,QWORD PTR [rbp-0x10]
  409080:	pop    rbp
  409081:	ret    
  409082:	endbr64 
  409086:	push   rbp
  409087:	mov    rbp,rsp
  40908a:	mov    QWORD PTR [rbp-0x8],rdi
  40908e:	mov    QWORD PTR [rbp-0x10],rsi
  409092:	mov    QWORD PTR [rbp-0x18],rdx
  409096:	mov    QWORD PTR [rbp-0x20],rcx
  40909a:	mov    QWORD PTR [rbp-0x28],r8
  40909e:	mov    QWORD PTR [rbp-0x30],r9
  4090a2:	mov    rax,QWORD PTR [rbp-0x10]
  4090a6:	pop    rbp
  4090a7:	ret    
  4090a8:	endbr64 
  4090ac:	push   rbp
  4090ad:	mov    rbp,rsp
  4090b0:	mov    QWORD PTR [rbp-0x8],rdi
  4090b4:	mov    QWORD PTR [rbp-0x10],rsi
  4090b8:	mov    QWORD PTR [rbp-0x18],rdx
  4090bc:	mov    QWORD PTR [rbp-0x20],rcx
  4090c0:	mov    QWORD PTR [rbp-0x28],r8
  4090c4:	mov    QWORD PTR [rbp-0x30],r9
  4090c8:	mov    rax,QWORD PTR [rbp-0x10]
  4090cc:	pop    rbp
  4090cd:	ret    
  4090ce:	endbr64 
  4090d2:	push   rbp
  4090d3:	mov    rbp,rsp
  4090d6:	mov    QWORD PTR [rbp-0x8],rdi
  4090da:	mov    QWORD PTR [rbp-0x10],rsi
  4090de:	mov    QWORD PTR [rbp-0x18],rdx
  4090e2:	mov    QWORD PTR [rbp-0x20],rcx
  4090e6:	mov    QWORD PTR [rbp-0x28],r8
  4090ea:	mov    QWORD PTR [rbp-0x30],r9
  4090ee:	mov    rax,QWORD PTR [rbp-0x10]
  4090f2:	pop    rbp
  4090f3:	ret    
  4090f4:	endbr64 
  4090f8:	push   rbp
  4090f9:	mov    rbp,rsp
  4090fc:	sub    rsp,0x50
  409100:	mov    QWORD PTR [rbp-0x28],rdi
  409104:	mov    QWORD PTR [rbp-0x30],rsi
  409108:	mov    QWORD PTR [rbp-0x38],rdx
  40910c:	mov    QWORD PTR [rbp-0x40],rcx
  409110:	mov    QWORD PTR [rbp-0x48],r8
  409114:	mov    QWORD PTR [rbp-0x50],r9
  409118:	mov    rax,QWORD PTR [rbp-0x30]
  40911c:	mov    QWORD PTR [rbp-0x18],rax
  409120:	mov    rdx,QWORD PTR [rbp-0x38]
  409124:	mov    rax,QWORD PTR [rbp-0x30]
  409128:	mov    rsi,rdx
  40912b:	mov    rdi,rax
  40912e:	call   406853 <_start@@Base+0x5c3>
  409133:	mov    QWORD PTR [rbp-0x10],rax
  409137:	movabs rax,0x46726f6d496e636c
  409141:	cmp    QWORD PTR [rbp-0x10],rax
  409145:	jne    4091f2 <_start@@Base+0x2f62>
  40914b:	add    QWORD PTR [rbp-0x30],0x8
  409150:	mov    rdx,QWORD PTR [rbp-0x38]
  409154:	mov    rax,QWORD PTR [rbp-0x30]
  409158:	mov    rsi,rdx
  40915b:	mov    rdi,rax
  40915e:	call   406853 <_start@@Base+0x5c3>
  409163:	mov    QWORD PTR [rbp-0x10],rax
  409167:	movabs rax,0xffffff0000000000
  409171:	and    rax,QWORD PTR [rbp-0x10]
  409175:	mov    rdx,rax
  409178:	movabs rax,0x7564650000000000
  409182:	cmp    rdx,rax
  409185:	jne    4091ec <_start@@Base+0x2f5c>
  409187:	mov    rax,QWORD PTR [rbp-0x30]
  40918b:	mov    QWORD PTR [rbp-0x8],rax
  40918f:	mov    rdx,QWORD PTR [rbp-0x38]
  409193:	mov    rsi,QWORD PTR [rbp-0x8]
  409197:	mov    rax,QWORD PTR [rbp-0x28]
  40919b:	mov    ecx,0x3
  4091a0:	mov    rdi,rax
  4091a3:	call   406897 <_start@@Base+0x607>
  4091a8:	mov    QWORD PTR [rbp-0x30],rax
  4091ac:	mov    rax,QWORD PTR [rbp-0x30]
  4091b0:	cmp    rax,QWORD PTR [rbp-0x8]
  4091b4:	je     4091e6 <_start@@Base+0x2f56>
  4091b6:	mov    r8,QWORD PTR [rbp-0x50]
  4091ba:	mov    rdi,QWORD PTR [rbp-0x48]
  4091be:	mov    rcx,QWORD PTR [rbp-0x40]
  4091c2:	mov    rdx,QWORD PTR [rbp-0x38]
  4091c6:	mov    rsi,QWORD PTR [rbp-0x30]
  4091ca:	mov    rax,QWORD PTR [rbp-0x28]
  4091ce:	mov    r9,r8
  4091d1:	mov    r8,rdi
  4091d4:	mov    rdi,rax
  4091d7:	call   408a0b <_start@@Base+0x277b>
  4091dc:	mov    QWORD PTR [rbp-0x30],rax
  4091e0:	mov    rax,QWORD PTR [rbp-0x30]
  4091e4:	jmp    4091f6 <_start@@Base+0x2f66>
  4091e6:	mov    rax,QWORD PTR [rbp-0x18]
  4091ea:	jmp    4091f6 <_start@@Base+0x2f66>
  4091ec:	mov    rax,QWORD PTR [rbp-0x18]
  4091f0:	jmp    4091f6 <_start@@Base+0x2f66>
  4091f2:	mov    rax,QWORD PTR [rbp-0x18]
  4091f6:	leave  
  4091f7:	ret    
  4091f8:	endbr64 
  4091fc:	push   rbp
  4091fd:	mov    rbp,rsp
  409200:	sub    rsp,0x50
  409204:	mov    QWORD PTR [rbp-0x28],rdi
  409208:	mov    QWORD PTR [rbp-0x30],rsi
  40920c:	mov    QWORD PTR [rbp-0x38],rdx
  409210:	mov    QWORD PTR [rbp-0x40],rcx
  409214:	mov    QWORD PTR [rbp-0x48],r8
  409218:	mov    QWORD PTR [rbp-0x50],r9
  40921c:	mov    rax,QWORD PTR [rbp-0x30]
  409220:	mov    QWORD PTR [rbp-0x18],rax
  409224:	mov    rdx,QWORD PTR [rbp-0x38]
  409228:	mov    rax,QWORD PTR [rbp-0x30]
  40922c:	mov    rsi,rdx
  40922f:	mov    rdi,rax
  409232:	call   406853 <_start@@Base+0x5c3>
  409237:	mov    QWORD PTR [rbp-0x10],rax
  40923b:	movabs rax,0x4d7947616d652e4f
  409245:	cmp    QWORD PTR [rbp-0x10],rax
  409249:	jne    409398 <_start@@Base+0x3108>
  40924f:	add    QWORD PTR [rbp-0x30],0x8
  409254:	mov    rdx,QWORD PTR [rbp-0x38]
  409258:	mov    rax,QWORD PTR [rbp-0x30]
  40925c:	mov    rsi,rdx
  40925f:	mov    rdi,rax
  409262:	call   406853 <_start@@Base+0x5c3>
  409267:	mov    QWORD PTR [rbp-0x10],rax
  40926b:	movabs rax,0x746865724e616d65
  409275:	cmp    QWORD PTR [rbp-0x10],rax
  409279:	jne    409392 <_start@@Base+0x3102>
  40927f:	add    QWORD PTR [rbp-0x30],0x8
  409284:	mov    rdx,QWORD PTR [rbp-0x38]
  409288:	mov    rax,QWORD PTR [rbp-0x30]
  40928c:	mov    rsi,rdx
  40928f:	mov    rdi,rax
  409292:	call   406853 <_start@@Base+0x5c3>
  409297:	mov    QWORD PTR [rbp-0x10],rax
  40929b:	movabs rax,0x53706163652e4672
  4092a5:	cmp    QWORD PTR [rbp-0x10],rax
  4092a9:	jne    40938c <_start@@Base+0x30fc>
  4092af:	add    QWORD PTR [rbp-0x30],0x8
  4092b4:	mov    rdx,QWORD PTR [rbp-0x38]
  4092b8:	mov    rax,QWORD PTR [rbp-0x30]
  4092bc:	mov    rsi,rdx
  4092bf:	mov    rdi,rax
  4092c2:	call   406853 <_start@@Base+0x5c3>
  4092c7:	mov    QWORD PTR [rbp-0x10],rax
  4092cb:	movabs rax,0x6f6d496e636c7564
  4092d5:	cmp    QWORD PTR [rbp-0x10],rax
  4092d9:	jne    409386 <_start@@Base+0x30f6>
  4092df:	add    QWORD PTR [rbp-0x30],0x8
  4092e4:	mov    rdx,QWORD PTR [rbp-0x38]
  4092e8:	mov    rax,QWORD PTR [rbp-0x30]
  4092ec:	mov    rsi,rdx
  4092ef:	mov    rdi,rax
  4092f2:	call   406853 <_start@@Base+0x5c3>
  4092f7:	mov    QWORD PTR [rbp-0x10],rax
  4092fb:	movabs rax,0xff00000000000000
  409305:	and    rax,QWORD PTR [rbp-0x10]
  409309:	mov    rdx,rax
  40930c:	movabs rax,0x6500000000000000
  409316:	cmp    rdx,rax
  409319:	jne    409380 <_start@@Base+0x30f0>
  40931b:	mov    rax,QWORD PTR [rbp-0x30]
  40931f:	mov    QWORD PTR [rbp-0x8],rax
  409323:	mov    rdx,QWORD PTR [rbp-0x38]
  409327:	mov    rsi,QWORD PTR [rbp-0x8]
  40932b:	mov    rax,QWORD PTR [rbp-0x28]
  40932f:	mov    ecx,0x1
  409334:	mov    rdi,rax
  409337:	call   406897 <_start@@Base+0x607>
  40933c:	mov    QWORD PTR [rbp-0x30],rax
  409340:	mov    rax,QWORD PTR [rbp-0x30]
  409344:	cmp    rax,QWORD PTR [rbp-0x8]
  409348:	je     40937a <_start@@Base+0x30ea>
  40934a:	mov    r8,QWORD PTR [rbp-0x50]
  40934e:	mov    rdi,QWORD PTR [rbp-0x48]
  409352:	mov    rcx,QWORD PTR [rbp-0x40]
  409356:	mov    rdx,QWORD PTR [rbp-0x38]
  40935a:	mov    rsi,QWORD PTR [rbp-0x30]
  40935e:	mov    rax,QWORD PTR [rbp-0x28]
  409362:	mov    r9,r8
  409365:	mov    r8,rdi
  409368:	mov    rdi,rax
  40936b:	call   408a0b <_start@@Base+0x277b>
  409370:	mov    QWORD PTR [rbp-0x30],rax
  409374:	mov    rax,QWORD PTR [rbp-0x30]
  409378:	jmp    40939c <_start@@Base+0x310c>
  40937a:	mov    rax,QWORD PTR [rbp-0x18]
  40937e:	jmp    40939c <_start@@Base+0x310c>
  409380:	mov    rax,QWORD PTR [rbp-0x18]
  409384:	jmp    40939c <_start@@Base+0x310c>
  409386:	mov    rax,QWORD PTR [rbp-0x18]
  40938a:	jmp    40939c <_start@@Base+0x310c>
  40938c:	mov    rax,QWORD PTR [rbp-0x18]
  409390:	jmp    40939c <_start@@Base+0x310c>
  409392:	mov    rax,QWORD PTR [rbp-0x18]
  409396:	jmp    40939c <_start@@Base+0x310c>
  409398:	mov    rax,QWORD PTR [rbp-0x18]
  40939c:	leave  
  40939d:	ret    
  40939e:	endbr64 
  4093a2:	push   rbp
  4093a3:	mov    rbp,rsp
  4093a6:	mov    QWORD PTR [rbp-0x8],rdi
  4093aa:	mov    QWORD PTR [rbp-0x10],rsi
  4093ae:	mov    QWORD PTR [rbp-0x18],rdx
  4093b2:	mov    QWORD PTR [rbp-0x20],rcx
  4093b6:	mov    QWORD PTR [rbp-0x28],r8
  4093ba:	mov    QWORD PTR [rbp-0x30],r9
  4093be:	mov    rax,QWORD PTR [rbp-0x10]
  4093c2:	pop    rbp
  4093c3:	ret    
  4093c4:	endbr64 
  4093c8:	push   rbp
  4093c9:	mov    rbp,rsp
  4093cc:	mov    QWORD PTR [rbp-0x8],rdi
  4093d0:	mov    QWORD PTR [rbp-0x10],rsi
  4093d4:	mov    QWORD PTR [rbp-0x18],rdx
  4093d8:	mov    QWORD PTR [rbp-0x20],rcx
  4093dc:	mov    QWORD PTR [rbp-0x28],r8
  4093e0:	mov    QWORD PTR [rbp-0x30],r9
  4093e4:	mov    rax,QWORD PTR [rbp-0x10]
  4093e8:	pop    rbp
  4093e9:	ret    
  4093ea:	endbr64 
  4093ee:	push   rbp
  4093ef:	mov    rbp,rsp
  4093f2:	mov    QWORD PTR [rbp-0x8],rdi
  4093f6:	mov    QWORD PTR [rbp-0x10],rsi
  4093fa:	mov    QWORD PTR [rbp-0x18],rdx
  4093fe:	mov    QWORD PTR [rbp-0x20],rcx
  409402:	mov    QWORD PTR [rbp-0x28],r8
  409406:	mov    QWORD PTR [rbp-0x30],r9
  40940a:	mov    rax,QWORD PTR [rbp-0x10]
  40940e:	pop    rbp
  40940f:	ret    
  409410:	endbr64 
  409414:	push   rbp
  409415:	mov    rbp,rsp
  409418:	mov    QWORD PTR [rbp-0x8],rdi
  40941c:	mov    QWORD PTR [rbp-0x10],rsi
  409420:	mov    QWORD PTR [rbp-0x18],rdx
  409424:	mov    QWORD PTR [rbp-0x20],rcx
  409428:	mov    QWORD PTR [rbp-0x28],r8
  40942c:	mov    QWORD PTR [rbp-0x30],r9
  409430:	mov    rax,QWORD PTR [rbp-0x10]
  409434:	pop    rbp
  409435:	ret    
  409436:	endbr64 
  40943a:	push   rbp
  40943b:	mov    rbp,rsp
  40943e:	mov    QWORD PTR [rbp-0x8],rdi
  409442:	mov    QWORD PTR [rbp-0x10],rsi
  409446:	mov    QWORD PTR [rbp-0x18],rdx
  40944a:	mov    QWORD PTR [rbp-0x20],rcx
  40944e:	mov    QWORD PTR [rbp-0x28],r8
  409452:	mov    QWORD PTR [rbp-0x30],r9
  409456:	mov    rax,QWORD PTR [rbp-0x10]
  40945a:	pop    rbp
  40945b:	ret    
  40945c:	endbr64 
  409460:	push   rbp
  409461:	mov    rbp,rsp
  409464:	mov    QWORD PTR [rbp-0x8],rdi
  409468:	mov    QWORD PTR [rbp-0x10],rsi
  40946c:	mov    QWORD PTR [rbp-0x18],rdx
  409470:	mov    QWORD PTR [rbp-0x20],rcx
  409474:	mov    QWORD PTR [rbp-0x28],r8
  409478:	mov    QWORD PTR [rbp-0x30],r9
  40947c:	mov    rax,QWORD PTR [rbp-0x10]
  409480:	pop    rbp
  409481:	ret    
  409482:	endbr64 
  409486:	push   rbp
  409487:	mov    rbp,rsp
  40948a:	mov    QWORD PTR [rbp-0x8],rdi
  40948e:	mov    QWORD PTR [rbp-0x10],rsi
  409492:	mov    QWORD PTR [rbp-0x18],rdx
  409496:	mov    QWORD PTR [rbp-0x20],rcx
  40949a:	mov    QWORD PTR [rbp-0x28],r8
  40949e:	mov    QWORD PTR [rbp-0x30],r9
  4094a2:	mov    rax,QWORD PTR [rbp-0x10]
  4094a6:	pop    rbp
  4094a7:	ret    
  4094a8:	endbr64 
  4094ac:	push   rbp
  4094ad:	mov    rbp,rsp
  4094b0:	sub    rsp,0x30
  4094b4:	mov    QWORD PTR [rbp-0x18],rdi
  4094b8:	mov    QWORD PTR [rbp-0x20],rsi
  4094bc:	mov    QWORD PTR [rbp-0x28],rdx
  4094c0:	mov    QWORD PTR [rbp-0x30],rcx
  4094c4:	mov    rax,QWORD PTR fs:0x28
  4094cd:	mov    QWORD PTR [rbp-0x8],rax
  4094d1:	xor    eax,eax
  4094d3:	lea    rcx,[rbp-0xc]
  4094d7:	mov    rdx,QWORD PTR [rbp-0x28]
  4094db:	mov    rsi,QWORD PTR [rbp-0x20]
  4094df:	mov    rax,QWORD PTR [rbp-0x18]
  4094e3:	mov    rdi,rax
  4094e6:	call   406949 <_start@@Base+0x6b9>
  4094eb:	mov    QWORD PTR [rbp-0x20],rax
  4094ef:	jmp    409528 <_start@@Base+0x3298>
  4094f1:	mov    rdx,QWORD PTR [rbp-0x28]
  4094f5:	mov    rcx,QWORD PTR [rbp-0x20]
  4094f9:	mov    rax,QWORD PTR [rbp-0x18]
  4094fd:	mov    rsi,rcx
  409500:	mov    rdi,rax
  409503:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  409508:	mov    QWORD PTR [rbp-0x20],rax
  40950c:	lea    rcx,[rbp-0xc]
  409510:	mov    rdx,QWORD PTR [rbp-0x28]
  409514:	mov    rsi,QWORD PTR [rbp-0x20]
  409518:	mov    rax,QWORD PTR [rbp-0x18]
  40951c:	mov    rdi,rax
  40951f:	call   406a06 <_start@@Base+0x776>
  409524:	mov    QWORD PTR [rbp-0x20],rax
  409528:	mov    eax,DWORD PTR [rbp-0xc]
  40952b:	test   eax,eax
  40952d:	jne    4094f1 <_start@@Base+0x3261>
  40952f:	mov    rax,QWORD PTR [rbp-0x20]
  409533:	mov    rdi,QWORD PTR [rbp-0x8]
  409537:	xor    rdi,QWORD PTR fs:0x28
  409540:	je     409547 <_start@@Base+0x32b7>
  409542:	call   4061a0 <__stack_chk_fail@plt>
  409547:	leave  
  409548:	ret    
  409549:	endbr64 
  40954d:	push   rbp
  40954e:	mov    rbp,rsp
  409551:	sub    rsp,0x30
  409555:	mov    QWORD PTR [rbp-0x18],rdi
  409559:	mov    QWORD PTR [rbp-0x20],rsi
  40955d:	mov    QWORD PTR [rbp-0x28],rdx
  409561:	mov    QWORD PTR [rbp-0x30],rcx
  409565:	mov    rax,QWORD PTR [rbp-0x30]
  409569:	mov    DWORD PTR [rax],0x0
  40956f:	mov    rax,QWORD PTR [rbp-0x18]
  409573:	mov    rax,QWORD PTR [rax]
  409576:	mov    edx,0x1
  40957b:	mov    esi,0x0
  409580:	mov    rdi,rax
  409583:	call   41d6fb <flatcc_builder_start_struct@@Base>
  409588:	mov    QWORD PTR [rbp-0x8],rax
  40958c:	cmp    QWORD PTR [rbp-0x8],0x0
  409591:	je     4095e0 <_start@@Base+0x3350>
  409593:	mov    rcx,QWORD PTR [rbp-0x8]
  409597:	mov    rdx,QWORD PTR [rbp-0x28]
  40959b:	mov    rsi,QWORD PTR [rbp-0x20]
  40959f:	mov    rax,QWORD PTR [rbp-0x18]
  4095a3:	mov    rdi,rax
  4095a6:	call   4094a8 <_start@@Base+0x3218>
  4095ab:	mov    QWORD PTR [rbp-0x20],rax
  4095af:	mov    rax,QWORD PTR [rbp-0x20]
  4095b3:	cmp    rax,QWORD PTR [rbp-0x28]
  4095b7:	je     4095e3 <_start@@Base+0x3353>
  4095b9:	mov    rax,QWORD PTR [rbp-0x18]
  4095bd:	mov    rax,QWORD PTR [rax]
  4095c0:	mov    rdi,rax
  4095c3:	call   41d77d <flatcc_builder_end_struct@@Base>
  4095c8:	mov    edx,eax
  4095ca:	mov    rax,QWORD PTR [rbp-0x30]
  4095ce:	mov    DWORD PTR [rax],edx
  4095d0:	mov    rax,QWORD PTR [rbp-0x30]
  4095d4:	mov    eax,DWORD PTR [rax]
  4095d6:	test   eax,eax
  4095d8:	je     4095e3 <_start@@Base+0x3353>
  4095da:	mov    rax,QWORD PTR [rbp-0x20]
  4095de:	jmp    4095fd <_start@@Base+0x336d>
  4095e0:	nop
  4095e1:	jmp    4095e4 <_start@@Base+0x3354>
  4095e3:	nop
  4095e4:	mov    rdx,QWORD PTR [rbp-0x28]
  4095e8:	mov    rsi,QWORD PTR [rbp-0x20]
  4095ec:	mov    rax,QWORD PTR [rbp-0x18]
  4095f0:	mov    ecx,0x21
  4095f5:	mov    rdi,rax
  4095f8:	call   427257 <flatcc_json_parser_set_error@@Base>
  4095fd:	leave  
  4095fe:	ret    
  4095ff:	endbr64 
  409603:	push   rbp
  409604:	mov    rbp,rsp
  409607:	sub    rsp,0x30
  40960b:	mov    QWORD PTR [rbp-0x18],rdi
  40960f:	mov    QWORD PTR [rbp-0x20],rsi
  409613:	mov    QWORD PTR [rbp-0x28],rdx
  409617:	mov    QWORD PTR [rbp-0x30],rcx
  40961b:	mov    rax,QWORD PTR fs:0x28
  409624:	mov    QWORD PTR [rbp-0x8],rax
  409628:	xor    eax,eax
  40962a:	mov    rax,QWORD PTR [rbp-0x30]
  40962e:	mov    DWORD PTR [rax],0x0
  409634:	mov    rax,QWORD PTR [rbp-0x18]
  409638:	mov    rax,QWORD PTR [rax]
  40963b:	mov    esi,0x0
  409640:	mov    rdi,rax
  409643:	call   41e233 <flatcc_builder_start_table@@Base>
  409648:	test   eax,eax
  40964a:	jne    4096f9 <_start@@Base+0x3469>
  409650:	lea    rcx,[rbp-0xc]
  409654:	mov    rdx,QWORD PTR [rbp-0x28]
  409658:	mov    rsi,QWORD PTR [rbp-0x20]
  40965c:	mov    rax,QWORD PTR [rbp-0x18]
  409660:	mov    rdi,rax
  409663:	call   406949 <_start@@Base+0x6b9>
  409668:	mov    QWORD PTR [rbp-0x20],rax
  40966c:	jmp    4096c0 <_start@@Base+0x3430>
  40966e:	mov    rdx,QWORD PTR [rbp-0x28]
  409672:	mov    rcx,QWORD PTR [rbp-0x20]
  409676:	mov    rax,QWORD PTR [rbp-0x18]
  40967a:	mov    rsi,rcx
  40967d:	mov    rdi,rax
  409680:	call   4066e9 <_start@@Base+0x459>
  409685:	mov    QWORD PTR [rbp-0x20],rax
  409689:	mov    rdx,QWORD PTR [rbp-0x28]
  40968d:	mov    rcx,QWORD PTR [rbp-0x20]
  409691:	mov    rax,QWORD PTR [rbp-0x18]
  409695:	mov    rsi,rcx
  409698:	mov    rdi,rax
  40969b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4096a0:	mov    QWORD PTR [rbp-0x20],rax
  4096a4:	lea    rcx,[rbp-0xc]
  4096a8:	mov    rdx,QWORD PTR [rbp-0x28]
  4096ac:	mov    rsi,QWORD PTR [rbp-0x20]
  4096b0:	mov    rax,QWORD PTR [rbp-0x18]
  4096b4:	mov    rdi,rax
  4096b7:	call   406a06 <_start@@Base+0x776>
  4096bc:	mov    QWORD PTR [rbp-0x20],rax
  4096c0:	mov    eax,DWORD PTR [rbp-0xc]
  4096c3:	test   eax,eax
  4096c5:	jne    40966e <_start@@Base+0x33de>
  4096c7:	mov    rax,QWORD PTR [rbp-0x18]
  4096cb:	mov    eax,DWORD PTR [rax+0x1c]
  4096ce:	test   eax,eax
  4096d0:	jne    4096fc <_start@@Base+0x346c>
  4096d2:	mov    rax,QWORD PTR [rbp-0x18]
  4096d6:	mov    rax,QWORD PTR [rax]
  4096d9:	mov    rdi,rax
  4096dc:	call   41ed42 <flatcc_builder_end_table@@Base>
  4096e1:	mov    edx,eax
  4096e3:	mov    rax,QWORD PTR [rbp-0x30]
  4096e7:	mov    DWORD PTR [rax],edx
  4096e9:	mov    rax,QWORD PTR [rbp-0x30]
  4096ed:	mov    eax,DWORD PTR [rax]
  4096ef:	test   eax,eax
  4096f1:	je     4096ff <_start@@Base+0x346f>
  4096f3:	mov    rax,QWORD PTR [rbp-0x20]
  4096f7:	jmp    409719 <_start@@Base+0x3489>
  4096f9:	nop
  4096fa:	jmp    409700 <_start@@Base+0x3470>
  4096fc:	nop
  4096fd:	jmp    409700 <_start@@Base+0x3470>
  4096ff:	nop
  409700:	mov    rdx,QWORD PTR [rbp-0x28]
  409704:	mov    rsi,QWORD PTR [rbp-0x20]
  409708:	mov    rax,QWORD PTR [rbp-0x18]
  40970c:	mov    ecx,0x21
  409711:	mov    rdi,rax
  409714:	call   427257 <flatcc_json_parser_set_error@@Base>
  409719:	mov    rdi,QWORD PTR [rbp-0x8]
  40971d:	xor    rdi,QWORD PTR fs:0x28
  409726:	je     40972d <_start@@Base+0x349d>
  409728:	call   4061a0 <__stack_chk_fail@plt>
  40972d:	leave  
  40972e:	ret    
  40972f:	endbr64 
  409733:	push   rbp
  409734:	mov    rbp,rsp
  409737:	sub    rsp,0x30
  40973b:	mov    QWORD PTR [rbp-0x18],rdi
  40973f:	mov    QWORD PTR [rbp-0x20],rsi
  409743:	mov    QWORD PTR [rbp-0x28],rdx
  409747:	mov    QWORD PTR [rbp-0x30],rcx
  40974b:	mov    rax,QWORD PTR fs:0x28
  409754:	mov    QWORD PTR [rbp-0x8],rax
  409758:	xor    eax,eax
  40975a:	mov    rax,QWORD PTR [rbp-0x30]
  40975e:	mov    DWORD PTR [rax],0x0
  409764:	mov    rax,QWORD PTR [rbp-0x18]
  409768:	mov    rax,QWORD PTR [rax]
  40976b:	mov    esi,0x0
  409770:	mov    rdi,rax
  409773:	call   41e233 <flatcc_builder_start_table@@Base>
  409778:	test   eax,eax
  40977a:	jne    409829 <_start@@Base+0x3599>
  409780:	lea    rcx,[rbp-0xc]
  409784:	mov    rdx,QWORD PTR [rbp-0x28]
  409788:	mov    rsi,QWORD PTR [rbp-0x20]
  40978c:	mov    rax,QWORD PTR [rbp-0x18]
  409790:	mov    rdi,rax
  409793:	call   406949 <_start@@Base+0x6b9>
  409798:	mov    QWORD PTR [rbp-0x20],rax
  40979c:	jmp    4097f0 <_start@@Base+0x3560>
  40979e:	mov    rdx,QWORD PTR [rbp-0x28]
  4097a2:	mov    rcx,QWORD PTR [rbp-0x20]
  4097a6:	mov    rax,QWORD PTR [rbp-0x18]
  4097aa:	mov    rsi,rcx
  4097ad:	mov    rdi,rax
  4097b0:	call   4066e9 <_start@@Base+0x459>
  4097b5:	mov    QWORD PTR [rbp-0x20],rax
  4097b9:	mov    rdx,QWORD PTR [rbp-0x28]
  4097bd:	mov    rcx,QWORD PTR [rbp-0x20]
  4097c1:	mov    rax,QWORD PTR [rbp-0x18]
  4097c5:	mov    rsi,rcx
  4097c8:	mov    rdi,rax
  4097cb:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4097d0:	mov    QWORD PTR [rbp-0x20],rax
  4097d4:	lea    rcx,[rbp-0xc]
  4097d8:	mov    rdx,QWORD PTR [rbp-0x28]
  4097dc:	mov    rsi,QWORD PTR [rbp-0x20]
  4097e0:	mov    rax,QWORD PTR [rbp-0x18]
  4097e4:	mov    rdi,rax
  4097e7:	call   406a06 <_start@@Base+0x776>
  4097ec:	mov    QWORD PTR [rbp-0x20],rax
  4097f0:	mov    eax,DWORD PTR [rbp-0xc]
  4097f3:	test   eax,eax
  4097f5:	jne    40979e <_start@@Base+0x350e>
  4097f7:	mov    rax,QWORD PTR [rbp-0x18]
  4097fb:	mov    eax,DWORD PTR [rax+0x1c]
  4097fe:	test   eax,eax
  409800:	jne    40982c <_start@@Base+0x359c>
  409802:	mov    rax,QWORD PTR [rbp-0x18]
  409806:	mov    rax,QWORD PTR [rax]
  409809:	mov    rdi,rax
  40980c:	call   41ed42 <flatcc_builder_end_table@@Base>
  409811:	mov    edx,eax
  409813:	mov    rax,QWORD PTR [rbp-0x30]
  409817:	mov    DWORD PTR [rax],edx
  409819:	mov    rax,QWORD PTR [rbp-0x30]
  40981d:	mov    eax,DWORD PTR [rax]
  40981f:	test   eax,eax
  409821:	je     40982f <_start@@Base+0x359f>
  409823:	mov    rax,QWORD PTR [rbp-0x20]
  409827:	jmp    409849 <_start@@Base+0x35b9>
  409829:	nop
  40982a:	jmp    409830 <_start@@Base+0x35a0>
  40982c:	nop
  40982d:	jmp    409830 <_start@@Base+0x35a0>
  40982f:	nop
  409830:	mov    rdx,QWORD PTR [rbp-0x28]
  409834:	mov    rsi,QWORD PTR [rbp-0x20]
  409838:	mov    rax,QWORD PTR [rbp-0x18]
  40983c:	mov    ecx,0x21
  409841:	mov    rdi,rax
  409844:	call   427257 <flatcc_json_parser_set_error@@Base>
  409849:	mov    rdi,QWORD PTR [rbp-0x8]
  40984d:	xor    rdi,QWORD PTR fs:0x28
  409856:	je     40985d <_start@@Base+0x35cd>
  409858:	call   4061a0 <__stack_chk_fail@plt>
  40985d:	leave  
  40985e:	ret    
  40985f:	endbr64 
  409863:	push   rbp
  409864:	mov    rbp,rsp
  409867:	sub    rsp,0x30
  40986b:	mov    QWORD PTR [rbp-0x8],rdi
  40986f:	mov    QWORD PTR [rbp-0x10],rsi
  409873:	mov    QWORD PTR [rbp-0x18],rdx
  409877:	mov    eax,ecx
  409879:	mov    QWORD PTR [rbp-0x28],r8
  40987d:	mov    BYTE PTR [rbp-0x1c],al
  409880:	mov    rax,QWORD PTR [rbp-0x28]
  409884:	mov    DWORD PTR [rax],0x0
  40988a:	movzx  eax,BYTE PTR [rbp-0x1c]
  40988e:	test   eax,eax
  409890:	je     409899 <_start@@Base+0x3609>
  409892:	cmp    eax,0x1
  409895:	je     4098b5 <_start@@Base+0x3625>
  409897:	jmp    4098df <_start@@Base+0x364f>
  409899:	mov    rdx,QWORD PTR [rbp-0x18]
  40989d:	mov    rcx,QWORD PTR [rbp-0x10]
  4098a1:	mov    rax,QWORD PTR [rbp-0x8]
  4098a5:	mov    rsi,rcx
  4098a8:	mov    rdi,rax
  4098ab:	call   407371 <_start@@Base+0x10e1>
  4098b0:	jmp    409950 <_start@@Base+0x36c0>
  4098b5:	mov    rcx,QWORD PTR [rbp-0x28]
  4098b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4098bd:	mov    rsi,QWORD PTR [rbp-0x10]
  4098c1:	mov    rax,QWORD PTR [rbp-0x8]
  4098c5:	mov    rdi,rax
  4098c8:	call   4095ff <_start@@Base+0x336f>
  4098cd:	mov    QWORD PTR [rbp-0x10],rax
  4098d1:	nop
  4098d2:	mov    rax,QWORD PTR [rbp-0x8]
  4098d6:	mov    eax,DWORD PTR [rax+0x1c]
  4098d9:	test   eax,eax
  4098db:	je     409927 <_start@@Base+0x3697>
  4098dd:	jmp    409921 <_start@@Base+0x3691>
  4098df:	mov    rax,QWORD PTR [rbp-0x8]
  4098e3:	mov    eax,DWORD PTR [rax+0x10]
  4098e6:	and    eax,0x1
  4098e9:	test   eax,eax
  4098eb:	jne    409908 <_start@@Base+0x3678>
  4098ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4098f1:	mov    rsi,QWORD PTR [rbp-0x10]
  4098f5:	mov    rax,QWORD PTR [rbp-0x8]
  4098f9:	mov    ecx,0xf
  4098fe:	mov    rdi,rax
  409901:	call   427257 <flatcc_json_parser_set_error@@Base>
  409906:	jmp    409950 <_start@@Base+0x36c0>
  409908:	mov    rdx,QWORD PTR [rbp-0x18]
  40990c:	mov    rcx,QWORD PTR [rbp-0x10]
  409910:	mov    rax,QWORD PTR [rbp-0x8]
  409914:	mov    rsi,rcx
  409917:	mov    rdi,rax
  40991a:	call   42825c <flatcc_json_parser_generic_json@@Base>
  40991f:	jmp    409950 <_start@@Base+0x36c0>
  409921:	mov    rax,QWORD PTR [rbp-0x10]
  409925:	jmp    409950 <_start@@Base+0x36c0>
  409927:	mov    rax,QWORD PTR [rbp-0x28]
  40992b:	mov    eax,DWORD PTR [rax]
  40992d:	test   eax,eax
  40992f:	jne    40994c <_start@@Base+0x36bc>
  409931:	mov    rdx,QWORD PTR [rbp-0x18]
  409935:	mov    rsi,QWORD PTR [rbp-0x10]
  409939:	mov    rax,QWORD PTR [rbp-0x8]
  40993d:	mov    ecx,0x21
  409942:	mov    rdi,rax
  409945:	call   427257 <flatcc_json_parser_set_error@@Base>
  40994a:	jmp    409950 <_start@@Base+0x36c0>
  40994c:	mov    rax,QWORD PTR [rbp-0x10]
  409950:	leave  
  409951:	ret    
  409952:	endbr64 
  409956:	push   rbp
  409957:	mov    rbp,rsp
  40995a:	mov    eax,edi
  40995c:	mov    BYTE PTR [rbp-0x4],al
  40995f:	movzx  eax,BYTE PTR [rbp-0x4]
  409963:	test   eax,eax
  409965:	je     40996e <_start@@Base+0x36de>
  409967:	cmp    eax,0x1
  40996a:	je     409975 <_start@@Base+0x36e5>
  40996c:	jmp    40997c <_start@@Base+0x36ec>
  40996e:	mov    eax,0x1
  409973:	jmp    409981 <_start@@Base+0x36f1>
  409975:	mov    eax,0x1
  40997a:	jmp    409981 <_start@@Base+0x36f1>
  40997c:	mov    eax,0x0
  409981:	pop    rbp
  409982:	ret    
  409983:	endbr64 
  409987:	push   rbp
  409988:	mov    rbp,rsp
  40998b:	sub    rsp,0x50
  40998f:	mov    QWORD PTR [rbp-0x28],rdi
  409993:	mov    QWORD PTR [rbp-0x30],rsi
  409997:	mov    QWORD PTR [rbp-0x38],rdx
  40999b:	mov    QWORD PTR [rbp-0x40],rcx
  40999f:	mov    QWORD PTR [rbp-0x48],r8
  4099a3:	mov    QWORD PTR [rbp-0x50],r9
  4099a7:	mov    rax,QWORD PTR [rbp-0x30]
  4099ab:	mov    QWORD PTR [rbp-0x18],rax
  4099af:	mov    rdx,QWORD PTR [rbp-0x38]
  4099b3:	mov    rax,QWORD PTR [rbp-0x30]
  4099b7:	mov    rsi,rdx
  4099ba:	mov    rdi,rax
  4099bd:	call   406853 <_start@@Base+0x5c3>
  4099c2:	mov    QWORD PTR [rbp-0x10],rax
  4099c6:	movabs rax,0x496e506172656e74
  4099d0:	cmp    QWORD PTR [rbp-0x10],rax
  4099d4:	jne    409aae <_start@@Base+0x381e>
  4099da:	add    QWORD PTR [rbp-0x30],0x8
  4099df:	mov    rdx,QWORD PTR [rbp-0x38]
  4099e3:	mov    rax,QWORD PTR [rbp-0x30]
  4099e7:	mov    rsi,rdx
  4099ea:	mov    rdi,rax
  4099ed:	call   406853 <_start@@Base+0x5c3>
  4099f2:	mov    QWORD PTR [rbp-0x10],rax
  4099f6:	movabs rax,0x4e616d6573706163
  409a00:	cmp    QWORD PTR [rbp-0x10],rax
  409a04:	jne    409aa8 <_start@@Base+0x3818>
  409a0a:	add    QWORD PTR [rbp-0x30],0x8
  409a0f:	mov    rdx,QWORD PTR [rbp-0x38]
  409a13:	mov    rax,QWORD PTR [rbp-0x30]
  409a17:	mov    rsi,rdx
  409a1a:	mov    rdi,rax
  409a1d:	call   406853 <_start@@Base+0x5c3>
  409a22:	mov    QWORD PTR [rbp-0x10],rax
  409a26:	movabs rax,0xff00000000000000
  409a30:	and    rax,QWORD PTR [rbp-0x10]
  409a34:	mov    rdx,rax
  409a37:	movabs rax,0x6500000000000000
  409a41:	cmp    rdx,rax
  409a44:	jne    409a9f <_start@@Base+0x380f>
  409a46:	mov    rax,QWORD PTR [rbp-0x30]
  409a4a:	mov    QWORD PTR [rbp-0x8],rax
  409a4e:	mov    rcx,QWORD PTR [rbp-0x50]
  409a52:	mov    rdx,QWORD PTR [rbp-0x38]
  409a56:	mov    rsi,QWORD PTR [rbp-0x8]
  409a5a:	mov    rax,QWORD PTR [rbp-0x28]
  409a5e:	mov    r8,rcx
  409a61:	mov    ecx,0x1
  409a66:	mov    rdi,rax
  409a69:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409a6e:	mov    QWORD PTR [rbp-0x30],rax
  409a72:	mov    rax,QWORD PTR [rbp-0x30]
  409a76:	cmp    rax,QWORD PTR [rbp-0x8]
  409a7a:	je     409a96 <_start@@Base+0x3806>
  409a7c:	mov    rax,QWORD PTR [rbp-0x48]
  409a80:	mov    QWORD PTR [rax],0x1
  409a87:	mov    rax,QWORD PTR [rbp-0x40]
  409a8b:	mov    DWORD PTR [rax],0x0
  409a91:	jmp    409b27 <_start@@Base+0x3897>
  409a96:	mov    rax,QWORD PTR [rbp-0x18]
  409a9a:	jmp    409b2b <_start@@Base+0x389b>
  409a9f:	mov    rax,QWORD PTR [rbp-0x18]
  409aa3:	jmp    409b2b <_start@@Base+0x389b>
  409aa8:	mov    rax,QWORD PTR [rbp-0x18]
  409aac:	jmp    409b2b <_start@@Base+0x389b>
  409aae:	movabs rax,0xffffffff00000000
  409ab8:	and    rax,QWORD PTR [rbp-0x10]
  409abc:	mov    rdx,rax
  409abf:	movabs rax,0x4e4f4e4500000000
  409ac9:	cmp    rdx,rax
  409acc:	jne    409b21 <_start@@Base+0x3891>
  409ace:	mov    rax,QWORD PTR [rbp-0x30]
  409ad2:	mov    QWORD PTR [rbp-0x8],rax
  409ad6:	mov    rcx,QWORD PTR [rbp-0x50]
  409ada:	mov    rdx,QWORD PTR [rbp-0x38]
  409ade:	mov    rsi,QWORD PTR [rbp-0x8]
  409ae2:	mov    rax,QWORD PTR [rbp-0x28]
  409ae6:	mov    r8,rcx
  409ae9:	mov    ecx,0x4
  409aee:	mov    rdi,rax
  409af1:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409af6:	mov    QWORD PTR [rbp-0x30],rax
  409afa:	mov    rax,QWORD PTR [rbp-0x30]
  409afe:	cmp    rax,QWORD PTR [rbp-0x8]
  409b02:	je     409b1b <_start@@Base+0x388b>
  409b04:	mov    rax,QWORD PTR [rbp-0x48]
  409b08:	mov    QWORD PTR [rax],0x0
  409b0f:	mov    rax,QWORD PTR [rbp-0x40]
  409b13:	mov    DWORD PTR [rax],0x0
  409b19:	jmp    409b27 <_start@@Base+0x3897>
  409b1b:	mov    rax,QWORD PTR [rbp-0x18]
  409b1f:	jmp    409b2b <_start@@Base+0x389b>
  409b21:	mov    rax,QWORD PTR [rbp-0x18]
  409b25:	jmp    409b2b <_start@@Base+0x389b>
  409b27:	mov    rax,QWORD PTR [rbp-0x30]
  409b2b:	leave  
  409b2c:	ret    
  409b2d:	endbr64 
  409b31:	push   rbp
  409b32:	mov    rbp,rsp
  409b35:	sub    rsp,0x50
  409b39:	mov    QWORD PTR [rbp-0x28],rdi
  409b3d:	mov    QWORD PTR [rbp-0x30],rsi
  409b41:	mov    QWORD PTR [rbp-0x38],rdx
  409b45:	mov    QWORD PTR [rbp-0x40],rcx
  409b49:	mov    QWORD PTR [rbp-0x48],r8
  409b4d:	mov    QWORD PTR [rbp-0x50],r9
  409b51:	mov    rax,QWORD PTR [rbp-0x30]
  409b55:	mov    QWORD PTR [rbp-0x18],rax
  409b59:	mov    rdx,QWORD PTR [rbp-0x38]
  409b5d:	mov    rax,QWORD PTR [rbp-0x30]
  409b61:	mov    rsi,rdx
  409b64:	mov    rdi,rax
  409b67:	call   406853 <_start@@Base+0x5c3>
  409b6c:	mov    QWORD PTR [rbp-0x10],rax
  409b70:	movabs rax,0x6e656731ffffffff
  409b7a:	cmp    QWORD PTR [rbp-0x10],rax
  409b7e:	ja     409c06 <_start@@Base+0x3976>
  409b84:	movabs rax,0xffffffff00000000
  409b8e:	and    rax,QWORD PTR [rbp-0x10]
  409b92:	mov    rdx,rax
  409b95:	movabs rax,0x6e65673100000000
  409b9f:	cmp    rdx,rax
  409ba2:	jne    409bfd <_start@@Base+0x396d>
  409ba4:	mov    rax,QWORD PTR [rbp-0x30]
  409ba8:	mov    QWORD PTR [rbp-0x8],rax
  409bac:	mov    rcx,QWORD PTR [rbp-0x50]
  409bb0:	mov    rdx,QWORD PTR [rbp-0x38]
  409bb4:	mov    rsi,QWORD PTR [rbp-0x8]
  409bb8:	mov    rax,QWORD PTR [rbp-0x28]
  409bbc:	mov    r8,rcx
  409bbf:	mov    ecx,0x4
  409bc4:	mov    rdi,rax
  409bc7:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409bcc:	mov    QWORD PTR [rbp-0x30],rax
  409bd0:	mov    rax,QWORD PTR [rbp-0x30]
  409bd4:	cmp    rax,QWORD PTR [rbp-0x8]
  409bd8:	je     409bf4 <_start@@Base+0x3964>
  409bda:	mov    rax,QWORD PTR [rbp-0x48]
  409bde:	mov    QWORD PTR [rax],0xfffffffffffffff4
  409be5:	mov    rax,QWORD PTR [rbp-0x40]
  409be9:	mov    DWORD PTR [rax],0x1
  409bef:	jmp    409cf2 <_start@@Base+0x3a62>
  409bf4:	mov    rax,QWORD PTR [rbp-0x18]
  409bf8:	jmp    409cf6 <_start@@Base+0x3a66>
  409bfd:	mov    rax,QWORD PTR [rbp-0x18]
  409c01:	jmp    409cf6 <_start@@Base+0x3a66>
  409c06:	movabs rax,0xffffffff00000000
  409c10:	and    rax,QWORD PTR [rbp-0x10]
  409c14:	mov    rdx,rax
  409c17:	movabs rax,0x6e65673300000000
  409c21:	cmp    rdx,rax
  409c24:	jne    409c79 <_start@@Base+0x39e9>
  409c26:	mov    rax,QWORD PTR [rbp-0x30]
  409c2a:	mov    QWORD PTR [rbp-0x8],rax
  409c2e:	mov    rcx,QWORD PTR [rbp-0x50]
  409c32:	mov    rdx,QWORD PTR [rbp-0x38]
  409c36:	mov    rsi,QWORD PTR [rbp-0x8]
  409c3a:	mov    rax,QWORD PTR [rbp-0x28]
  409c3e:	mov    r8,rcx
  409c41:	mov    ecx,0x4
  409c46:	mov    rdi,rax
  409c49:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409c4e:	mov    QWORD PTR [rbp-0x30],rax
  409c52:	mov    rax,QWORD PTR [rbp-0x30]
  409c56:	cmp    rax,QWORD PTR [rbp-0x8]
  409c5a:	je     409c73 <_start@@Base+0x39e3>
  409c5c:	mov    rax,QWORD PTR [rbp-0x48]
  409c60:	mov    QWORD PTR [rax],0xfffffffffffffff6
  409c67:	mov    rax,QWORD PTR [rbp-0x40]
  409c6b:	mov    DWORD PTR [rax],0x1
  409c71:	jmp    409cf2 <_start@@Base+0x3a62>
  409c73:	mov    rax,QWORD PTR [rbp-0x18]
  409c77:	jmp    409cf6 <_start@@Base+0x3a66>
  409c79:	movabs rax,0xffffffff00000000
  409c83:	and    rax,QWORD PTR [rbp-0x10]
  409c87:	mov    rdx,rax
  409c8a:	movabs rax,0x6e65673200000000
  409c94:	cmp    rdx,rax
  409c97:	jne    409cec <_start@@Base+0x3a5c>
  409c99:	mov    rax,QWORD PTR [rbp-0x30]
  409c9d:	mov    QWORD PTR [rbp-0x8],rax
  409ca1:	mov    rcx,QWORD PTR [rbp-0x50]
  409ca5:	mov    rdx,QWORD PTR [rbp-0x38]
  409ca9:	mov    rsi,QWORD PTR [rbp-0x8]
  409cad:	mov    rax,QWORD PTR [rbp-0x28]
  409cb1:	mov    r8,rcx
  409cb4:	mov    ecx,0x4
  409cb9:	mov    rdi,rax
  409cbc:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409cc1:	mov    QWORD PTR [rbp-0x30],rax
  409cc5:	mov    rax,QWORD PTR [rbp-0x30]
  409cc9:	cmp    rax,QWORD PTR [rbp-0x8]
  409ccd:	je     409ce6 <_start@@Base+0x3a56>
  409ccf:	mov    rax,QWORD PTR [rbp-0x48]
  409cd3:	mov    QWORD PTR [rax],0xfffffffffffffff5
  409cda:	mov    rax,QWORD PTR [rbp-0x40]
  409cde:	mov    DWORD PTR [rax],0x1
  409ce4:	jmp    409cf2 <_start@@Base+0x3a62>
  409ce6:	mov    rax,QWORD PTR [rbp-0x18]
  409cea:	jmp    409cf6 <_start@@Base+0x3a66>
  409cec:	mov    rax,QWORD PTR [rbp-0x18]
  409cf0:	jmp    409cf6 <_start@@Base+0x3a66>
  409cf2:	mov    rax,QWORD PTR [rbp-0x30]
  409cf6:	leave  
  409cf7:	ret    
  409cf8:	endbr64 
  409cfc:	push   rbp
  409cfd:	mov    rbp,rsp
  409d00:	sub    rsp,0x50
  409d04:	mov    QWORD PTR [rbp-0x28],rdi
  409d08:	mov    QWORD PTR [rbp-0x30],rsi
  409d0c:	mov    QWORD PTR [rbp-0x38],rdx
  409d10:	mov    QWORD PTR [rbp-0x40],rcx
  409d14:	mov    QWORD PTR [rbp-0x48],r8
  409d18:	mov    QWORD PTR [rbp-0x50],r9
  409d1c:	mov    rax,QWORD PTR [rbp-0x30]
  409d20:	mov    QWORD PTR [rbp-0x18],rax
  409d24:	mov    rdx,QWORD PTR [rbp-0x38]
  409d28:	mov    rax,QWORD PTR [rbp-0x30]
  409d2c:	mov    rsi,rdx
  409d2f:	mov    rdi,rax
  409d32:	call   406853 <_start@@Base+0x5c3>
  409d37:	mov    QWORD PTR [rbp-0x10],rax
  409d3b:	movabs rax,0x696e7431ffffffff
  409d45:	cmp    QWORD PTR [rbp-0x10],rax
  409d49:	ja     409dd1 <_start@@Base+0x3b41>
  409d4f:	movabs rax,0xffffffff00000000
  409d59:	and    rax,QWORD PTR [rbp-0x10]
  409d5d:	mov    rdx,rax
  409d60:	movabs rax,0x696e743100000000
  409d6a:	cmp    rdx,rax
  409d6d:	jne    409dc8 <_start@@Base+0x3b38>
  409d6f:	mov    rax,QWORD PTR [rbp-0x30]
  409d73:	mov    QWORD PTR [rbp-0x8],rax
  409d77:	mov    rcx,QWORD PTR [rbp-0x50]
  409d7b:	mov    rdx,QWORD PTR [rbp-0x38]
  409d7f:	mov    rsi,QWORD PTR [rbp-0x8]
  409d83:	mov    rax,QWORD PTR [rbp-0x28]
  409d87:	mov    r8,rcx
  409d8a:	mov    ecx,0x4
  409d8f:	mov    rdi,rax
  409d92:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409d97:	mov    QWORD PTR [rbp-0x30],rax
  409d9b:	mov    rax,QWORD PTR [rbp-0x30]
  409d9f:	cmp    rax,QWORD PTR [rbp-0x8]
  409da3:	je     409dbf <_start@@Base+0x3b2f>
  409da5:	mov    rax,QWORD PTR [rbp-0x48]
  409da9:	mov    QWORD PTR [rax],0x2
  409db0:	mov    rax,QWORD PTR [rbp-0x40]
  409db4:	mov    DWORD PTR [rax],0x0
  409dba:	jmp    409f45 <_start@@Base+0x3cb5>
  409dbf:	mov    rax,QWORD PTR [rbp-0x18]
  409dc3:	jmp    409f49 <_start@@Base+0x3cb9>
  409dc8:	mov    rax,QWORD PTR [rbp-0x18]
  409dcc:	jmp    409f49 <_start@@Base+0x3cb9>
  409dd1:	movabs rax,0x696e746e6566ffff
  409ddb:	cmp    QWORD PTR [rbp-0x10],rax
  409ddf:	ja     409e67 <_start@@Base+0x3bd7>
  409de5:	movabs rax,0xffffffff00000000
  409def:	and    rax,QWORD PTR [rbp-0x10]
  409df3:	mov    rdx,rax
  409df6:	movabs rax,0x696e743200000000
  409e00:	cmp    rdx,rax
  409e03:	jne    409e5e <_start@@Base+0x3bce>
  409e05:	mov    rax,QWORD PTR [rbp-0x30]
  409e09:	mov    QWORD PTR [rbp-0x8],rax
  409e0d:	mov    rcx,QWORD PTR [rbp-0x50]
  409e11:	mov    rdx,QWORD PTR [rbp-0x38]
  409e15:	mov    rsi,QWORD PTR [rbp-0x8]
  409e19:	mov    rax,QWORD PTR [rbp-0x28]
  409e1d:	mov    r8,rcx
  409e20:	mov    ecx,0x4
  409e25:	mov    rdi,rax
  409e28:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409e2d:	mov    QWORD PTR [rbp-0x30],rax
  409e31:	mov    rax,QWORD PTR [rbp-0x30]
  409e35:	cmp    rax,QWORD PTR [rbp-0x8]
  409e39:	je     409e55 <_start@@Base+0x3bc5>
  409e3b:	mov    rax,QWORD PTR [rbp-0x48]
  409e3f:	mov    QWORD PTR [rax],0x2a
  409e46:	mov    rax,QWORD PTR [rbp-0x40]
  409e4a:	mov    DWORD PTR [rax],0x0
  409e50:	jmp    409f45 <_start@@Base+0x3cb5>
  409e55:	mov    rax,QWORD PTR [rbp-0x18]
  409e59:	jmp    409f49 <_start@@Base+0x3cb9>
  409e5e:	mov    rax,QWORD PTR [rbp-0x18]
  409e62:	jmp    409f49 <_start@@Base+0x3cb9>
  409e67:	mov    rax,QWORD PTR [rbp-0x10]
  409e6b:	mov    al,0x0
  409e6d:	mov    rdx,rax
  409e70:	movabs rax,0x696e746e65673200
  409e7a:	cmp    rdx,rax
  409e7d:	jne    409ed2 <_start@@Base+0x3c42>
  409e7f:	mov    rax,QWORD PTR [rbp-0x30]
  409e83:	mov    QWORD PTR [rbp-0x8],rax
  409e87:	mov    rcx,QWORD PTR [rbp-0x50]
  409e8b:	mov    rdx,QWORD PTR [rbp-0x38]
  409e8f:	mov    rsi,QWORD PTR [rbp-0x8]
  409e93:	mov    rax,QWORD PTR [rbp-0x28]
  409e97:	mov    r8,rcx
  409e9a:	mov    ecx,0x7
  409e9f:	mov    rdi,rax
  409ea2:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409ea7:	mov    QWORD PTR [rbp-0x30],rax
  409eab:	mov    rax,QWORD PTR [rbp-0x30]
  409eaf:	cmp    rax,QWORD PTR [rbp-0x8]
  409eb3:	je     409ecc <_start@@Base+0x3c3c>
  409eb5:	mov    rax,QWORD PTR [rbp-0x48]
  409eb9:	mov    QWORD PTR [rax],0xffffffffffffffff
  409ec0:	mov    rax,QWORD PTR [rbp-0x40]
  409ec4:	mov    DWORD PTR [rax],0x1
  409eca:	jmp    409f45 <_start@@Base+0x3cb5>
  409ecc:	mov    rax,QWORD PTR [rbp-0x18]
  409ed0:	jmp    409f49 <_start@@Base+0x3cb9>
  409ed2:	mov    rax,QWORD PTR [rbp-0x10]
  409ed6:	mov    ax,0x0
  409eda:	mov    rdx,rax
  409edd:	movabs rax,0x696e746e65670000
  409ee7:	cmp    rdx,rax
  409eea:	jne    409f3f <_start@@Base+0x3caf>
  409eec:	mov    rax,QWORD PTR [rbp-0x30]
  409ef0:	mov    QWORD PTR [rbp-0x8],rax
  409ef4:	mov    rcx,QWORD PTR [rbp-0x50]
  409ef8:	mov    rdx,QWORD PTR [rbp-0x38]
  409efc:	mov    rsi,QWORD PTR [rbp-0x8]
  409f00:	mov    rax,QWORD PTR [rbp-0x28]
  409f04:	mov    r8,rcx
  409f07:	mov    ecx,0x6
  409f0c:	mov    rdi,rax
  409f0f:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409f14:	mov    QWORD PTR [rbp-0x30],rax
  409f18:	mov    rax,QWORD PTR [rbp-0x30]
  409f1c:	cmp    rax,QWORD PTR [rbp-0x8]
  409f20:	je     409f39 <_start@@Base+0x3ca9>
  409f22:	mov    rax,QWORD PTR [rbp-0x48]
  409f26:	mov    QWORD PTR [rax],0xfffffffffffffffe
  409f2d:	mov    rax,QWORD PTR [rbp-0x40]
  409f31:	mov    DWORD PTR [rax],0x1
  409f37:	jmp    409f45 <_start@@Base+0x3cb5>
  409f39:	mov    rax,QWORD PTR [rbp-0x18]
  409f3d:	jmp    409f49 <_start@@Base+0x3cb9>
  409f3f:	mov    rax,QWORD PTR [rbp-0x18]
  409f43:	jmp    409f49 <_start@@Base+0x3cb9>
  409f45:	mov    rax,QWORD PTR [rbp-0x30]
  409f49:	leave  
  409f4a:	ret    
  409f4b:	endbr64 
  409f4f:	push   rbp
  409f50:	mov    rbp,rsp
  409f53:	sub    rsp,0x50
  409f57:	mov    QWORD PTR [rbp-0x28],rdi
  409f5b:	mov    QWORD PTR [rbp-0x30],rsi
  409f5f:	mov    QWORD PTR [rbp-0x38],rdx
  409f63:	mov    QWORD PTR [rbp-0x40],rcx
  409f67:	mov    QWORD PTR [rbp-0x48],r8
  409f6b:	mov    QWORD PTR [rbp-0x50],r9
  409f6f:	mov    rax,QWORD PTR [rbp-0x30]
  409f73:	mov    QWORD PTR [rbp-0x18],rax
  409f77:	mov    rdx,QWORD PTR [rbp-0x38]
  409f7b:	mov    rax,QWORD PTR [rbp-0x30]
  409f7f:	mov    rsi,rdx
  409f82:	mov    rdi,rax
  409f85:	call   406853 <_start@@Base+0x5c3>
  409f8a:	mov    QWORD PTR [rbp-0x10],rax
  409f8e:	movabs rax,0x68657831ffffffff
  409f98:	cmp    QWORD PTR [rbp-0x10],rax
  409f9c:	ja     40a024 <_start@@Base+0x3d94>
  409fa2:	movabs rax,0xffffffff00000000
  409fac:	and    rax,QWORD PTR [rbp-0x10]
  409fb0:	mov    rdx,rax
  409fb3:	movabs rax,0x6865783100000000
  409fbd:	cmp    rdx,rax
  409fc0:	jne    40a01b <_start@@Base+0x3d8b>
  409fc2:	mov    rax,QWORD PTR [rbp-0x30]
  409fc6:	mov    QWORD PTR [rbp-0x8],rax
  409fca:	mov    rcx,QWORD PTR [rbp-0x50]
  409fce:	mov    rdx,QWORD PTR [rbp-0x38]
  409fd2:	mov    rsi,QWORD PTR [rbp-0x8]
  409fd6:	mov    rax,QWORD PTR [rbp-0x28]
  409fda:	mov    r8,rcx
  409fdd:	mov    ecx,0x4
  409fe2:	mov    rdi,rax
  409fe5:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  409fea:	mov    QWORD PTR [rbp-0x30],rax
  409fee:	mov    rax,QWORD PTR [rbp-0x30]
  409ff2:	cmp    rax,QWORD PTR [rbp-0x8]
  409ff6:	je     40a012 <_start@@Base+0x3d82>
  409ff8:	mov    rax,QWORD PTR [rbp-0x48]
  409ffc:	mov    QWORD PTR [rax],0x3
  40a003:	mov    rax,QWORD PTR [rbp-0x40]
  40a007:	mov    DWORD PTR [rax],0x0
  40a00d:	jmp    40a10a <_start@@Base+0x3e7a>
  40a012:	mov    rax,QWORD PTR [rbp-0x18]
  40a016:	jmp    40a10e <_start@@Base+0x3e7e>
  40a01b:	mov    rax,QWORD PTR [rbp-0x18]
  40a01f:	jmp    40a10e <_start@@Base+0x3e7e>
  40a024:	mov    rax,QWORD PTR [rbp-0x10]
  40a028:	mov    ax,0x0
  40a02c:	mov    rdx,rax
  40a02f:	movabs rax,0x6865786e65670000
  40a039:	cmp    rdx,rax
  40a03c:	jne    40a091 <_start@@Base+0x3e01>
  40a03e:	mov    rax,QWORD PTR [rbp-0x30]
  40a042:	mov    QWORD PTR [rbp-0x8],rax
  40a046:	mov    rcx,QWORD PTR [rbp-0x50]
  40a04a:	mov    rdx,QWORD PTR [rbp-0x38]
  40a04e:	mov    rsi,QWORD PTR [rbp-0x8]
  40a052:	mov    rax,QWORD PTR [rbp-0x28]
  40a056:	mov    r8,rcx
  40a059:	mov    ecx,0x6
  40a05e:	mov    rdi,rax
  40a061:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a066:	mov    QWORD PTR [rbp-0x30],rax
  40a06a:	mov    rax,QWORD PTR [rbp-0x30]
  40a06e:	cmp    rax,QWORD PTR [rbp-0x8]
  40a072:	je     40a08b <_start@@Base+0x3dfb>
  40a074:	mov    rax,QWORD PTR [rbp-0x48]
  40a078:	mov    QWORD PTR [rax],0xfffffffffffffffe
  40a07f:	mov    rax,QWORD PTR [rbp-0x40]
  40a083:	mov    DWORD PTR [rax],0x1
  40a089:	jmp    40a10a <_start@@Base+0x3e7a>
  40a08b:	mov    rax,QWORD PTR [rbp-0x18]
  40a08f:	jmp    40a10e <_start@@Base+0x3e7e>
  40a091:	movabs rax,0xffffffff00000000
  40a09b:	and    rax,QWORD PTR [rbp-0x10]
  40a09f:	mov    rdx,rax
  40a0a2:	movabs rax,0x6865783200000000
  40a0ac:	cmp    rdx,rax
  40a0af:	jne    40a104 <_start@@Base+0x3e74>
  40a0b1:	mov    rax,QWORD PTR [rbp-0x30]
  40a0b5:	mov    QWORD PTR [rbp-0x8],rax
  40a0b9:	mov    rcx,QWORD PTR [rbp-0x50]
  40a0bd:	mov    rdx,QWORD PTR [rbp-0x38]
  40a0c1:	mov    rsi,QWORD PTR [rbp-0x8]
  40a0c5:	mov    rax,QWORD PTR [rbp-0x28]
  40a0c9:	mov    r8,rcx
  40a0cc:	mov    ecx,0x4
  40a0d1:	mov    rdi,rax
  40a0d4:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a0d9:	mov    QWORD PTR [rbp-0x30],rax
  40a0dd:	mov    rax,QWORD PTR [rbp-0x30]
  40a0e1:	cmp    rax,QWORD PTR [rbp-0x8]
  40a0e5:	je     40a0fe <_start@@Base+0x3e6e>
  40a0e7:	mov    rax,QWORD PTR [rbp-0x48]
  40a0eb:	mov    QWORD PTR [rax],0x7eafbeaf
  40a0f2:	mov    rax,QWORD PTR [rbp-0x40]
  40a0f6:	mov    DWORD PTR [rax],0x0
  40a0fc:	jmp    40a10a <_start@@Base+0x3e7a>
  40a0fe:	mov    rax,QWORD PTR [rbp-0x18]
  40a102:	jmp    40a10e <_start@@Base+0x3e7e>
  40a104:	mov    rax,QWORD PTR [rbp-0x18]
  40a108:	jmp    40a10e <_start@@Base+0x3e7e>
  40a10a:	mov    rax,QWORD PTR [rbp-0x30]
  40a10e:	leave  
  40a10f:	ret    
  40a110:	endbr64 
  40a114:	push   rbp
  40a115:	mov    rbp,rsp
  40a118:	sub    rsp,0x50
  40a11c:	mov    QWORD PTR [rbp-0x28],rdi
  40a120:	mov    QWORD PTR [rbp-0x30],rsi
  40a124:	mov    QWORD PTR [rbp-0x38],rdx
  40a128:	mov    QWORD PTR [rbp-0x40],rcx
  40a12c:	mov    QWORD PTR [rbp-0x48],r8
  40a130:	mov    QWORD PTR [rbp-0x50],r9
  40a134:	mov    rax,QWORD PTR [rbp-0x30]
  40a138:	mov    QWORD PTR [rbp-0x18],rax
  40a13c:	mov    rdx,QWORD PTR [rbp-0x38]
  40a140:	mov    rax,QWORD PTR [rbp-0x30]
  40a144:	mov    rsi,rdx
  40a147:	mov    rdi,rax
  40a14a:	call   406853 <_start@@Base+0x5c3>
  40a14f:	mov    QWORD PTR [rbp-0x10],rax
  40a153:	movabs rax,0x477265656dffffff
  40a15d:	cmp    QWORD PTR [rbp-0x10],rax
  40a161:	ja     40a1e9 <_start@@Base+0x3f59>
  40a167:	movabs rax,0xffffffff00000000
  40a171:	and    rax,QWORD PTR [rbp-0x10]
  40a175:	mov    rdx,rax
  40a178:	movabs rax,0x426c756500000000
  40a182:	cmp    rdx,rax
  40a185:	jne    40a1e0 <_start@@Base+0x3f50>
  40a187:	mov    rax,QWORD PTR [rbp-0x30]
  40a18b:	mov    QWORD PTR [rbp-0x8],rax
  40a18f:	mov    rcx,QWORD PTR [rbp-0x50]
  40a193:	mov    rdx,QWORD PTR [rbp-0x38]
  40a197:	mov    rsi,QWORD PTR [rbp-0x8]
  40a19b:	mov    rax,QWORD PTR [rbp-0x28]
  40a19f:	mov    r8,rcx
  40a1a2:	mov    ecx,0x4
  40a1a7:	mov    rdi,rax
  40a1aa:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a1af:	mov    QWORD PTR [rbp-0x30],rax
  40a1b3:	mov    rax,QWORD PTR [rbp-0x30]
  40a1b7:	cmp    rax,QWORD PTR [rbp-0x8]
  40a1bb:	je     40a1d7 <_start@@Base+0x3f47>
  40a1bd:	mov    rax,QWORD PTR [rbp-0x48]
  40a1c1:	mov    QWORD PTR [rax],0x8
  40a1c8:	mov    rax,QWORD PTR [rbp-0x40]
  40a1cc:	mov    DWORD PTR [rax],0x0
  40a1d2:	jmp    40a2d1 <_start@@Base+0x4041>
  40a1d7:	mov    rax,QWORD PTR [rbp-0x18]
  40a1db:	jmp    40a2d5 <_start@@Base+0x4045>
  40a1e0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1e4:	jmp    40a2d5 <_start@@Base+0x4045>
  40a1e9:	movabs rax,0xffffff0000000000
  40a1f3:	and    rax,QWORD PTR [rbp-0x10]
  40a1f7:	mov    rdx,rax
  40a1fa:	movabs rax,0x5265640000000000
  40a204:	cmp    rdx,rax
  40a207:	jne    40a25c <_start@@Base+0x3fcc>
  40a209:	mov    rax,QWORD PTR [rbp-0x30]
  40a20d:	mov    QWORD PTR [rbp-0x8],rax
  40a211:	mov    rcx,QWORD PTR [rbp-0x50]
  40a215:	mov    rdx,QWORD PTR [rbp-0x38]
  40a219:	mov    rsi,QWORD PTR [rbp-0x8]
  40a21d:	mov    rax,QWORD PTR [rbp-0x28]
  40a221:	mov    r8,rcx
  40a224:	mov    ecx,0x3
  40a229:	mov    rdi,rax
  40a22c:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a231:	mov    QWORD PTR [rbp-0x30],rax
  40a235:	mov    rax,QWORD PTR [rbp-0x30]
  40a239:	cmp    rax,QWORD PTR [rbp-0x8]
  40a23d:	je     40a256 <_start@@Base+0x3fc6>
  40a23f:	mov    rax,QWORD PTR [rbp-0x48]
  40a243:	mov    QWORD PTR [rax],0x1
  40a24a:	mov    rax,QWORD PTR [rbp-0x40]
  40a24e:	mov    DWORD PTR [rax],0x0
  40a254:	jmp    40a2d1 <_start@@Base+0x4041>
  40a256:	mov    rax,QWORD PTR [rbp-0x18]
  40a25a:	jmp    40a2d5 <_start@@Base+0x4045>
  40a25c:	mov    rax,QWORD PTR [rbp-0x10]
  40a260:	and    rax,0xffffffffff000000
  40a266:	mov    rdx,rax
  40a269:	movabs rax,0x477265656e000000
  40a273:	cmp    rdx,rax
  40a276:	jne    40a2cb <_start@@Base+0x403b>
  40a278:	mov    rax,QWORD PTR [rbp-0x30]
  40a27c:	mov    QWORD PTR [rbp-0x8],rax
  40a280:	mov    rcx,QWORD PTR [rbp-0x50]
  40a284:	mov    rdx,QWORD PTR [rbp-0x38]
  40a288:	mov    rsi,QWORD PTR [rbp-0x8]
  40a28c:	mov    rax,QWORD PTR [rbp-0x28]
  40a290:	mov    r8,rcx
  40a293:	mov    ecx,0x5
  40a298:	mov    rdi,rax
  40a29b:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a2a0:	mov    QWORD PTR [rbp-0x30],rax
  40a2a4:	mov    rax,QWORD PTR [rbp-0x30]
  40a2a8:	cmp    rax,QWORD PTR [rbp-0x8]
  40a2ac:	je     40a2c5 <_start@@Base+0x4035>
  40a2ae:	mov    rax,QWORD PTR [rbp-0x48]
  40a2b2:	mov    QWORD PTR [rax],0x2
  40a2b9:	mov    rax,QWORD PTR [rbp-0x40]
  40a2bd:	mov    DWORD PTR [rax],0x0
  40a2c3:	jmp    40a2d1 <_start@@Base+0x4041>
  40a2c5:	mov    rax,QWORD PTR [rbp-0x18]
  40a2c9:	jmp    40a2d5 <_start@@Base+0x4045>
  40a2cb:	mov    rax,QWORD PTR [rbp-0x18]
  40a2cf:	jmp    40a2d5 <_start@@Base+0x4045>
  40a2d1:	mov    rax,QWORD PTR [rbp-0x30]
  40a2d5:	leave  
  40a2d6:	ret    
  40a2d7:	endbr64 
  40a2db:	push   rbp
  40a2dc:	mov    rbp,rsp
  40a2df:	sub    rsp,0x30
  40a2e3:	mov    QWORD PTR [rbp-0x8],rdi
  40a2e7:	mov    QWORD PTR [rbp-0x10],rsi
  40a2eb:	mov    QWORD PTR [rbp-0x18],rdx
  40a2ef:	mov    eax,ecx
  40a2f1:	mov    QWORD PTR [rbp-0x28],r8
  40a2f5:	mov    BYTE PTR [rbp-0x1c],al
  40a2f8:	mov    rax,QWORD PTR [rbp-0x28]
  40a2fc:	mov    DWORD PTR [rax],0x0
  40a302:	movzx  eax,BYTE PTR [rbp-0x1c]
  40a306:	cmp    eax,0x4
  40a309:	ja     40a3ca <_start@@Base+0x413a>
  40a30f:	mov    eax,eax
  40a311:	lea    rdx,[rax*4+0x0]
  40a319:	lea    rax,[rip+0x2bd28]        # 436048 <_IO_stdin_used@@Base+0x48>
  40a320:	mov    eax,DWORD PTR [rdx+rax*1]
  40a323:	movsxd rdx,eax
  40a326:	lea    rax,[rip+0x2bd1b]        # 436048 <_IO_stdin_used@@Base+0x48>
  40a32d:	add    rax,rdx
  40a330:	notrack jmp rax
  40a333:	mov    rdx,QWORD PTR [rbp-0x18]
  40a337:	mov    rcx,QWORD PTR [rbp-0x10]
  40a33b:	mov    rax,QWORD PTR [rbp-0x8]
  40a33f:	mov    rsi,rcx
  40a342:	mov    rdi,rax
  40a345:	call   407371 <_start@@Base+0x10e1>
  40a34a:	jmp    40a446 <_start@@Base+0x41b6>
  40a34f:	mov    rcx,QWORD PTR [rbp-0x28]
  40a353:	mov    rdx,QWORD PTR [rbp-0x18]
  40a357:	mov    rsi,QWORD PTR [rbp-0x10]
  40a35b:	mov    rax,QWORD PTR [rbp-0x8]
  40a35f:	mov    rdi,rax
  40a362:	call   40f343 <_start@@Base+0x90b3>
  40a367:	mov    QWORD PTR [rbp-0x10],rax
  40a36b:	jmp    40a40c <_start@@Base+0x417c>
  40a370:	mov    rcx,QWORD PTR [rbp-0x28]
  40a374:	mov    rdx,QWORD PTR [rbp-0x18]
  40a378:	mov    rsi,QWORD PTR [rbp-0x10]
  40a37c:	mov    rax,QWORD PTR [rbp-0x8]
  40a380:	mov    rdi,rax
  40a383:	call   40b0d3 <_start@@Base+0x4e43>
  40a388:	mov    QWORD PTR [rbp-0x10],rax
  40a38c:	jmp    40a40c <_start@@Base+0x417c>
  40a38e:	mov    rcx,QWORD PTR [rbp-0x28]
  40a392:	mov    rdx,QWORD PTR [rbp-0x18]
  40a396:	mov    rsi,QWORD PTR [rbp-0x10]
  40a39a:	mov    rax,QWORD PTR [rbp-0x8]
  40a39e:	mov    rdi,rax
  40a3a1:	call   40972f <_start@@Base+0x349f>
  40a3a6:	mov    QWORD PTR [rbp-0x10],rax
  40a3aa:	jmp    40a40c <_start@@Base+0x417c>
  40a3ac:	mov    rcx,QWORD PTR [rbp-0x28]
  40a3b0:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3b4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3b8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3bc:	mov    rdi,rax
  40a3bf:	call   40d1a9 <_start@@Base+0x6f19>
  40a3c4:	mov    QWORD PTR [rbp-0x10],rax
  40a3c8:	jmp    40a40c <_start@@Base+0x417c>
  40a3ca:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ce:	mov    eax,DWORD PTR [rax+0x10]
  40a3d1:	and    eax,0x1
  40a3d4:	test   eax,eax
  40a3d6:	jne    40a3f3 <_start@@Base+0x4163>
  40a3d8:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3dc:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3e0:	mov    rax,QWORD PTR [rbp-0x8]
  40a3e4:	mov    ecx,0xf
  40a3e9:	mov    rdi,rax
  40a3ec:	call   427257 <flatcc_json_parser_set_error@@Base>
  40a3f1:	jmp    40a446 <_start@@Base+0x41b6>
  40a3f3:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3f7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3fb:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ff:	mov    rsi,rcx
  40a402:	mov    rdi,rax
  40a405:	call   42825c <flatcc_json_parser_generic_json@@Base>
  40a40a:	jmp    40a446 <_start@@Base+0x41b6>
  40a40c:	mov    rax,QWORD PTR [rbp-0x8]
  40a410:	mov    eax,DWORD PTR [rax+0x1c]
  40a413:	test   eax,eax
  40a415:	je     40a41d <_start@@Base+0x418d>
  40a417:	mov    rax,QWORD PTR [rbp-0x10]
  40a41b:	jmp    40a446 <_start@@Base+0x41b6>
  40a41d:	mov    rax,QWORD PTR [rbp-0x28]
  40a421:	mov    eax,DWORD PTR [rax]
  40a423:	test   eax,eax
  40a425:	jne    40a442 <_start@@Base+0x41b2>
  40a427:	mov    rdx,QWORD PTR [rbp-0x18]
  40a42b:	mov    rsi,QWORD PTR [rbp-0x10]
  40a42f:	mov    rax,QWORD PTR [rbp-0x8]
  40a433:	mov    ecx,0x21
  40a438:	mov    rdi,rax
  40a43b:	call   427257 <flatcc_json_parser_set_error@@Base>
  40a440:	jmp    40a446 <_start@@Base+0x41b6>
  40a442:	mov    rax,QWORD PTR [rbp-0x10]
  40a446:	leave  
  40a447:	ret    
  40a448:	endbr64 
  40a44c:	push   rbp
  40a44d:	mov    rbp,rsp
  40a450:	mov    eax,edi
  40a452:	mov    BYTE PTR [rbp-0x4],al
  40a455:	movzx  eax,BYTE PTR [rbp-0x4]
  40a459:	cmp    eax,0x4
  40a45c:	ja     40a4a5 <_start@@Base+0x4215>
  40a45e:	mov    eax,eax
  40a460:	lea    rdx,[rax*4+0x0]
  40a468:	lea    rax,[rip+0x2bbed]        # 43605c <_IO_stdin_used@@Base+0x5c>
  40a46f:	mov    eax,DWORD PTR [rdx+rax*1]
  40a472:	movsxd rdx,eax
  40a475:	lea    rax,[rip+0x2bbe0]        # 43605c <_IO_stdin_used@@Base+0x5c>
  40a47c:	add    rax,rdx
  40a47f:	notrack jmp rax
  40a482:	mov    eax,0x1
  40a487:	jmp    40a4aa <_start@@Base+0x421a>
  40a489:	mov    eax,0x1
  40a48e:	jmp    40a4aa <_start@@Base+0x421a>
  40a490:	mov    eax,0x1
  40a495:	jmp    40a4aa <_start@@Base+0x421a>
  40a497:	mov    eax,0x1
  40a49c:	jmp    40a4aa <_start@@Base+0x421a>
  40a49e:	mov    eax,0x1
  40a4a3:	jmp    40a4aa <_start@@Base+0x421a>
  40a4a5:	mov    eax,0x0
  40a4aa:	pop    rbp
  40a4ab:	ret    
  40a4ac:	endbr64 
  40a4b0:	push   rbp
  40a4b1:	mov    rbp,rsp
  40a4b4:	sub    rsp,0x50
  40a4b8:	mov    QWORD PTR [rbp-0x28],rdi
  40a4bc:	mov    QWORD PTR [rbp-0x30],rsi
  40a4c0:	mov    QWORD PTR [rbp-0x38],rdx
  40a4c4:	mov    QWORD PTR [rbp-0x40],rcx
  40a4c8:	mov    QWORD PTR [rbp-0x48],r8
  40a4cc:	mov    QWORD PTR [rbp-0x50],r9
  40a4d0:	mov    rax,QWORD PTR [rbp-0x30]
  40a4d4:	mov    QWORD PTR [rbp-0x18],rax
  40a4d8:	mov    rdx,QWORD PTR [rbp-0x38]
  40a4dc:	mov    rax,QWORD PTR [rbp-0x30]
  40a4e0:	mov    rsi,rdx
  40a4e3:	mov    rdi,rax
  40a4e6:	call   406853 <_start@@Base+0x5c3>
  40a4eb:	mov    QWORD PTR [rbp-0x10],rax
  40a4ef:	movabs rax,0x4d6f6e73746571ff
  40a4f9:	cmp    QWORD PTR [rbp-0x10],rax
  40a4fd:	ja     40a585 <_start@@Base+0x42f5>
  40a503:	movabs rax,0xffffff0000000000
  40a50d:	and    rax,QWORD PTR [rbp-0x10]
  40a511:	mov    rdx,rax
  40a514:	movabs rax,0x416c740000000000
  40a51e:	cmp    rdx,rax
  40a521:	jne    40a57c <_start@@Base+0x42ec>
  40a523:	mov    rax,QWORD PTR [rbp-0x30]
  40a527:	mov    QWORD PTR [rbp-0x8],rax
  40a52b:	mov    rcx,QWORD PTR [rbp-0x50]
  40a52f:	mov    rdx,QWORD PTR [rbp-0x38]
  40a533:	mov    rsi,QWORD PTR [rbp-0x8]
  40a537:	mov    rax,QWORD PTR [rbp-0x28]
  40a53b:	mov    r8,rcx
  40a53e:	mov    ecx,0x3
  40a543:	mov    rdi,rax
  40a546:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a54b:	mov    QWORD PTR [rbp-0x30],rax
  40a54f:	mov    rax,QWORD PTR [rbp-0x30]
  40a553:	cmp    rax,QWORD PTR [rbp-0x8]
  40a557:	je     40a573 <_start@@Base+0x42e3>
  40a559:	mov    rax,QWORD PTR [rbp-0x48]
  40a55d:	mov    QWORD PTR [rax],0x4
  40a564:	mov    rax,QWORD PTR [rbp-0x40]
  40a568:	mov    DWORD PTR [rax],0x0
  40a56e:	jmp    40a7a9 <_start@@Base+0x4519>
  40a573:	mov    rax,QWORD PTR [rbp-0x18]
  40a577:	jmp    40a7ad <_start@@Base+0x451d>
  40a57c:	mov    rax,QWORD PTR [rbp-0x18]
  40a580:	jmp    40a7ad <_start@@Base+0x451d>
  40a585:	movabs rax,0x4d6f6e7374657232
  40a58f:	cmp    QWORD PTR [rbp-0x10],rax
  40a593:	jne    40a5e9 <_start@@Base+0x4359>
  40a595:	mov    rax,QWORD PTR [rbp-0x30]
  40a599:	mov    QWORD PTR [rbp-0x8],rax
  40a59d:	mov    rcx,QWORD PTR [rbp-0x50]
  40a5a1:	mov    rdx,QWORD PTR [rbp-0x38]
  40a5a5:	mov    rsi,QWORD PTR [rbp-0x8]
  40a5a9:	mov    rax,QWORD PTR [rbp-0x28]
  40a5ad:	mov    r8,rcx
  40a5b0:	mov    ecx,0x8
  40a5b5:	mov    rdi,rax
  40a5b8:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a5bd:	mov    QWORD PTR [rbp-0x30],rax
  40a5c1:	mov    rax,QWORD PTR [rbp-0x30]
  40a5c5:	cmp    rax,QWORD PTR [rbp-0x8]
  40a5c9:	je     40a651 <_start@@Base+0x43c1>
  40a5cf:	mov    rax,QWORD PTR [rbp-0x48]
  40a5d3:	mov    QWORD PTR [rax],0x3
  40a5da:	mov    rax,QWORD PTR [rbp-0x40]
  40a5de:	mov    DWORD PTR [rax],0x0
  40a5e4:	jmp    40a7a9 <_start@@Base+0x4519>
  40a5e9:	mov    rax,QWORD PTR [rbp-0x10]
  40a5ed:	mov    al,0x0
  40a5ef:	mov    rdx,rax
  40a5f2:	movabs rax,0x4d6f6e7374657200
  40a5fc:	cmp    rdx,rax
  40a5ff:	jne    40a654 <_start@@Base+0x43c4>
  40a601:	mov    rax,QWORD PTR [rbp-0x30]
  40a605:	mov    QWORD PTR [rbp-0x8],rax
  40a609:	mov    rcx,QWORD PTR [rbp-0x50]
  40a60d:	mov    rdx,QWORD PTR [rbp-0x38]
  40a611:	mov    rsi,QWORD PTR [rbp-0x8]
  40a615:	mov    rax,QWORD PTR [rbp-0x28]
  40a619:	mov    r8,rcx
  40a61c:	mov    ecx,0x7
  40a621:	mov    rdi,rax
  40a624:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a629:	mov    QWORD PTR [rbp-0x30],rax
  40a62d:	mov    rax,QWORD PTR [rbp-0x30]
  40a631:	cmp    rax,QWORD PTR [rbp-0x8]
  40a635:	je     40a657 <_start@@Base+0x43c7>
  40a637:	mov    rax,QWORD PTR [rbp-0x48]
  40a63b:	mov    QWORD PTR [rax],0x1
  40a642:	mov    rax,QWORD PTR [rbp-0x40]
  40a646:	mov    DWORD PTR [rax],0x0
  40a64c:	jmp    40a7a9 <_start@@Base+0x4519>
  40a651:	nop
  40a652:	jmp    40a658 <_start@@Base+0x43c8>
  40a654:	nop
  40a655:	jmp    40a658 <_start@@Base+0x43c8>
  40a657:	nop
  40a658:	movabs rax,0xffffffff00000000
  40a662:	and    rax,QWORD PTR [rbp-0x10]
  40a666:	mov    rdx,rax
  40a669:	movabs rax,0x4e4f4e4500000000
  40a673:	cmp    rdx,rax
  40a676:	jne    40a6c8 <_start@@Base+0x4438>
  40a678:	mov    rax,QWORD PTR [rbp-0x30]
  40a67c:	mov    QWORD PTR [rbp-0x8],rax
  40a680:	mov    rcx,QWORD PTR [rbp-0x50]
  40a684:	mov    rdx,QWORD PTR [rbp-0x38]
  40a688:	mov    rsi,QWORD PTR [rbp-0x8]
  40a68c:	mov    rax,QWORD PTR [rbp-0x28]
  40a690:	mov    r8,rcx
  40a693:	mov    ecx,0x4
  40a698:	mov    rdi,rax
  40a69b:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a6a0:	mov    QWORD PTR [rbp-0x30],rax
  40a6a4:	mov    rax,QWORD PTR [rbp-0x30]
  40a6a8:	cmp    rax,QWORD PTR [rbp-0x8]
  40a6ac:	je     40a6cb <_start@@Base+0x443b>
  40a6ae:	mov    rax,QWORD PTR [rbp-0x48]
  40a6b2:	mov    QWORD PTR [rax],0x0
  40a6b9:	mov    rax,QWORD PTR [rbp-0x40]
  40a6bd:	mov    DWORD PTR [rax],0x0
  40a6c3:	jmp    40a7a9 <_start@@Base+0x4519>
  40a6c8:	nop
  40a6c9:	jmp    40a6cc <_start@@Base+0x443c>
  40a6cb:	nop
  40a6cc:	movabs rax,0x5465737453696d70
  40a6d6:	cmp    QWORD PTR [rbp-0x10],rax
  40a6da:	jne    40a7a3 <_start@@Base+0x4513>
  40a6e0:	add    QWORD PTR [rbp-0x30],0x8
  40a6e5:	mov    rdx,QWORD PTR [rbp-0x38]
  40a6e9:	mov    rax,QWORD PTR [rbp-0x30]
  40a6ed:	mov    rsi,rdx
  40a6f0:	mov    rdi,rax
  40a6f3:	call   406853 <_start@@Base+0x5c3>
  40a6f8:	mov    QWORD PTR [rbp-0x10],rax
  40a6fc:	movabs rax,0x6c655461626c6557
  40a706:	cmp    QWORD PTR [rbp-0x10],rax
  40a70a:	jne    40a79d <_start@@Base+0x450d>
  40a710:	add    QWORD PTR [rbp-0x30],0x8
  40a715:	mov    rdx,QWORD PTR [rbp-0x38]
  40a719:	mov    rax,QWORD PTR [rbp-0x30]
  40a71d:	mov    rsi,rdx
  40a720:	mov    rdi,rax
  40a723:	call   406853 <_start@@Base+0x5c3>
  40a728:	mov    QWORD PTR [rbp-0x10],rax
  40a72c:	mov    rax,QWORD PTR [rbp-0x10]
  40a730:	mov    al,0x0
  40a732:	mov    rdx,rax
  40a735:	movabs rax,0x697468456e756d00
  40a73f:	cmp    rdx,rax
  40a742:	jne    40a797 <_start@@Base+0x4507>
  40a744:	mov    rax,QWORD PTR [rbp-0x30]
  40a748:	mov    QWORD PTR [rbp-0x8],rax
  40a74c:	mov    rcx,QWORD PTR [rbp-0x50]
  40a750:	mov    rdx,QWORD PTR [rbp-0x38]
  40a754:	mov    rsi,QWORD PTR [rbp-0x8]
  40a758:	mov    rax,QWORD PTR [rbp-0x28]
  40a75c:	mov    r8,rcx
  40a75f:	mov    ecx,0x7
  40a764:	mov    rdi,rax
  40a767:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40a76c:	mov    QWORD PTR [rbp-0x30],rax
  40a770:	mov    rax,QWORD PTR [rbp-0x30]
  40a774:	cmp    rax,QWORD PTR [rbp-0x8]
  40a778:	je     40a791 <_start@@Base+0x4501>
  40a77a:	mov    rax,QWORD PTR [rbp-0x48]
  40a77e:	mov    QWORD PTR [rax],0x2
  40a785:	mov    rax,QWORD PTR [rbp-0x40]
  40a789:	mov    DWORD PTR [rax],0x0
  40a78f:	jmp    40a7a9 <_start@@Base+0x4519>
  40a791:	mov    rax,QWORD PTR [rbp-0x18]
  40a795:	jmp    40a7ad <_start@@Base+0x451d>
  40a797:	mov    rax,QWORD PTR [rbp-0x18]
  40a79b:	jmp    40a7ad <_start@@Base+0x451d>
  40a79d:	mov    rax,QWORD PTR [rbp-0x18]
  40a7a1:	jmp    40a7ad <_start@@Base+0x451d>
  40a7a3:	mov    rax,QWORD PTR [rbp-0x18]
  40a7a7:	jmp    40a7ad <_start@@Base+0x451d>
  40a7a9:	mov    rax,QWORD PTR [rbp-0x30]
  40a7ad:	leave  
  40a7ae:	ret    
  40a7af:	endbr64 
  40a7b3:	push   rbp
  40a7b4:	mov    rbp,rsp
  40a7b7:	sub    rsp,0x50
  40a7bb:	mov    QWORD PTR [rbp-0x38],rdi
  40a7bf:	mov    QWORD PTR [rbp-0x40],rsi
  40a7c3:	mov    QWORD PTR [rbp-0x48],rdx
  40a7c7:	mov    QWORD PTR [rbp-0x50],rcx
  40a7cb:	mov    rax,QWORD PTR fs:0x28
  40a7d4:	mov    QWORD PTR [rbp-0x8],rax
  40a7d8:	xor    eax,eax
  40a7da:	lea    rcx,[rbp-0x24]
  40a7de:	mov    rdx,QWORD PTR [rbp-0x48]
  40a7e2:	mov    rsi,QWORD PTR [rbp-0x40]
  40a7e6:	mov    rax,QWORD PTR [rbp-0x38]
  40a7ea:	mov    rdi,rax
  40a7ed:	call   406949 <_start@@Base+0x6b9>
  40a7f2:	mov    QWORD PTR [rbp-0x40],rax
  40a7f6:	jmp    40aa8a <_start@@Base+0x47fa>
  40a7fb:	mov    rdx,QWORD PTR [rbp-0x48]
  40a7ff:	mov    rcx,QWORD PTR [rbp-0x40]
  40a803:	mov    rax,QWORD PTR [rbp-0x38]
  40a807:	mov    rsi,rcx
  40a80a:	mov    rdi,rax
  40a80d:	call   4066e9 <_start@@Base+0x459>
  40a812:	mov    QWORD PTR [rbp-0x40],rax
  40a816:	mov    rdx,QWORD PTR [rbp-0x48]
  40a81a:	mov    rax,QWORD PTR [rbp-0x40]
  40a81e:	mov    rsi,rdx
  40a821:	mov    rdi,rax
  40a824:	call   406853 <_start@@Base+0x5c3>
  40a829:	mov    QWORD PTR [rbp-0x20],rax
  40a82d:	movabs rax,0xff00000000000000
  40a837:	and    rax,QWORD PTR [rbp-0x20]
  40a83b:	mov    rdx,rax
  40a83e:	movabs rax,0x6200000000000000
  40a848:	cmp    rdx,rax
  40a84b:	jne    40a946 <_start@@Base+0x46b6>
  40a851:	mov    rax,QWORD PTR [rbp-0x40]
  40a855:	mov    QWORD PTR [rbp-0x18],rax
  40a859:	mov    rdx,QWORD PTR [rbp-0x48]
  40a85d:	mov    rsi,QWORD PTR [rbp-0x18]
  40a861:	mov    rax,QWORD PTR [rbp-0x38]
  40a865:	mov    ecx,0x1
  40a86a:	mov    rdi,rax
  40a86d:	call   406d3f <_start@@Base+0xaaf>
  40a872:	mov    QWORD PTR [rbp-0x40],rax
  40a876:	mov    rax,QWORD PTR [rbp-0x18]
  40a87a:	cmp    rax,QWORD PTR [rbp-0x40]
  40a87e:	je     40a926 <_start@@Base+0x4696>
  40a884:	mov    BYTE PTR [rbp-0x26],0x0
  40a888:	mov    rax,QWORD PTR [rbp-0x50]
  40a88c:	add    rax,0x2
  40a890:	mov    QWORD PTR [rbp-0x10],rax
  40a894:	mov    rax,QWORD PTR [rbp-0x40]
  40a898:	mov    QWORD PTR [rbp-0x18],rax
  40a89c:	lea    rcx,[rbp-0x26]
  40a8a0:	mov    rdx,QWORD PTR [rbp-0x48]
  40a8a4:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8a8:	mov    rax,QWORD PTR [rbp-0x38]
  40a8ac:	mov    rdi,rax
  40a8af:	call   40793b <_start@@Base+0x16ab>
  40a8b4:	mov    QWORD PTR [rbp-0x40],rax
  40a8b8:	mov    rax,QWORD PTR [rbp-0x18]
  40a8bc:	cmp    rax,QWORD PTR [rbp-0x40]
  40a8c0:	jne    40a90c <_start@@Base+0x467c>
  40a8c2:	mov    rax,QWORD PTR [rbp-0x40]
  40a8c6:	mov    QWORD PTR [rbp-0x18],rax
  40a8ca:	lea    rcx,[rbp-0x26]
  40a8ce:	mov    rdx,QWORD PTR [rbp-0x48]
  40a8d2:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8d6:	mov    rax,QWORD PTR [rbp-0x38]
  40a8da:	mov    r8,rcx
  40a8dd:	lea    rcx,[rip+0x3a7fc]        # 4450e0 <__data_start@@Base+0x20>
  40a8e4:	mov    rdi,rax
  40a8e7:	call   408483 <_start@@Base+0x21f3>
  40a8ec:	mov    QWORD PTR [rbp-0x40],rax
  40a8f0:	mov    rax,QWORD PTR [rbp-0x40]
  40a8f4:	cmp    rax,QWORD PTR [rbp-0x18]
  40a8f8:	je     40aa9b <_start@@Base+0x480b>
  40a8fe:	mov    rax,QWORD PTR [rbp-0x40]
  40a902:	cmp    rax,QWORD PTR [rbp-0x48]
  40a906:	je     40aa9b <_start@@Base+0x480b>
  40a90c:	movzx  eax,BYTE PTR [rbp-0x26]
  40a910:	movsx  edx,al
  40a913:	mov    rax,QWORD PTR [rbp-0x10]
  40a917:	mov    esi,edx
  40a919:	mov    rdi,rax
  40a91c:	call   406459 <_start@@Base+0x1c9>
  40a921:	jmp    40aa6e <_start@@Base+0x47de>
  40a926:	mov    rdx,QWORD PTR [rbp-0x48]
  40a92a:	mov    rcx,QWORD PTR [rbp-0x40]
  40a92e:	mov    rax,QWORD PTR [rbp-0x38]
  40a932:	mov    rsi,rcx
  40a935:	mov    rdi,rax
  40a938:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40a93d:	mov    QWORD PTR [rbp-0x40],rax
  40a941:	jmp    40aa6e <_start@@Base+0x47de>
  40a946:	movabs rax,0xff00000000000000
  40a950:	and    rax,QWORD PTR [rbp-0x20]
  40a954:	mov    rdx,rax
  40a957:	movabs rax,0x6100000000000000
  40a961:	cmp    rdx,rax
  40a964:	jne    40aa53 <_start@@Base+0x47c3>
  40a96a:	mov    rax,QWORD PTR [rbp-0x40]
  40a96e:	mov    QWORD PTR [rbp-0x18],rax
  40a972:	mov    rdx,QWORD PTR [rbp-0x48]
  40a976:	mov    rsi,QWORD PTR [rbp-0x18]
  40a97a:	mov    rax,QWORD PTR [rbp-0x38]
  40a97e:	mov    ecx,0x1
  40a983:	mov    rdi,rax
  40a986:	call   406d3f <_start@@Base+0xaaf>
  40a98b:	mov    QWORD PTR [rbp-0x40],rax
  40a98f:	mov    rax,QWORD PTR [rbp-0x18]
  40a993:	cmp    rax,QWORD PTR [rbp-0x40]
  40a997:	je     40aa36 <_start@@Base+0x47a6>
  40a99d:	mov    WORD PTR [rbp-0x26],0x0
  40a9a3:	mov    rax,QWORD PTR [rbp-0x50]
  40a9a7:	mov    QWORD PTR [rbp-0x10],rax
  40a9ab:	mov    rax,QWORD PTR [rbp-0x40]
  40a9af:	mov    QWORD PTR [rbp-0x18],rax
  40a9b3:	lea    rcx,[rbp-0x26]
  40a9b7:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9bb:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9bf:	mov    rax,QWORD PTR [rbp-0x38]
  40a9c3:	mov    rdi,rax
  40a9c6:	call   407876 <_start@@Base+0x15e6>
  40a9cb:	mov    QWORD PTR [rbp-0x40],rax
  40a9cf:	mov    rax,QWORD PTR [rbp-0x18]
  40a9d3:	cmp    rax,QWORD PTR [rbp-0x40]
  40a9d7:	jne    40aa1f <_start@@Base+0x478f>
  40a9d9:	mov    rax,QWORD PTR [rbp-0x40]
  40a9dd:	mov    QWORD PTR [rbp-0x18],rax
  40a9e1:	lea    rcx,[rbp-0x26]
  40a9e5:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9e9:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9ed:	mov    rax,QWORD PTR [rbp-0x38]
  40a9f1:	mov    r8,rcx
  40a9f4:	lea    rcx,[rip+0x3a705]        # 445100 <__data_start@@Base+0x40>
  40a9fb:	mov    rdi,rax
  40a9fe:	call   408321 <_start@@Base+0x2091>
  40aa03:	mov    QWORD PTR [rbp-0x40],rax
  40aa07:	mov    rax,QWORD PTR [rbp-0x40]
  40aa0b:	cmp    rax,QWORD PTR [rbp-0x18]
  40aa0f:	je     40aa9e <_start@@Base+0x480e>
  40aa15:	mov    rax,QWORD PTR [rbp-0x40]
  40aa19:	cmp    rax,QWORD PTR [rbp-0x48]
  40aa1d:	je     40aa9e <_start@@Base+0x480e>
  40aa1f:	movzx  eax,WORD PTR [rbp-0x26]
  40aa23:	movsx  edx,ax
  40aa26:	mov    rax,QWORD PTR [rbp-0x10]
  40aa2a:	mov    esi,edx
  40aa2c:	mov    rdi,rax
  40aa2f:	call   40648e <_start@@Base+0x1fe>
  40aa34:	jmp    40aa6e <_start@@Base+0x47de>
  40aa36:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa3a:	mov    rcx,QWORD PTR [rbp-0x40]
  40aa3e:	mov    rax,QWORD PTR [rbp-0x38]
  40aa42:	mov    rsi,rcx
  40aa45:	mov    rdi,rax
  40aa48:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40aa4d:	mov    QWORD PTR [rbp-0x40],rax
  40aa51:	jmp    40aa6e <_start@@Base+0x47de>
  40aa53:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa57:	mov    rcx,QWORD PTR [rbp-0x40]
  40aa5b:	mov    rax,QWORD PTR [rbp-0x38]
  40aa5f:	mov    rsi,rcx
  40aa62:	mov    rdi,rax
  40aa65:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40aa6a:	mov    QWORD PTR [rbp-0x40],rax
  40aa6e:	lea    rcx,[rbp-0x24]
  40aa72:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa76:	mov    rsi,QWORD PTR [rbp-0x40]
  40aa7a:	mov    rax,QWORD PTR [rbp-0x38]
  40aa7e:	mov    rdi,rax
  40aa81:	call   406a06 <_start@@Base+0x776>
  40aa86:	mov    QWORD PTR [rbp-0x40],rax
  40aa8a:	mov    eax,DWORD PTR [rbp-0x24]
  40aa8d:	test   eax,eax
  40aa8f:	jne    40a7fb <_start@@Base+0x456b>
  40aa95:	mov    rax,QWORD PTR [rbp-0x40]
  40aa99:	jmp    40aab8 <_start@@Base+0x4828>
  40aa9b:	nop
  40aa9c:	jmp    40aa9f <_start@@Base+0x480f>
  40aa9e:	nop
  40aa9f:	mov    rdx,QWORD PTR [rbp-0x48]
  40aaa3:	mov    rsi,QWORD PTR [rbp-0x40]
  40aaa7:	mov    rax,QWORD PTR [rbp-0x38]
  40aaab:	mov    ecx,0x21
  40aab0:	mov    rdi,rax
  40aab3:	call   427257 <flatcc_json_parser_set_error@@Base>
  40aab8:	mov    rdi,QWORD PTR [rbp-0x8]
  40aabc:	xor    rdi,QWORD PTR fs:0x28
  40aac5:	je     40aacc <_start@@Base+0x483c>
  40aac7:	call   4061a0 <__stack_chk_fail@plt>
  40aacc:	leave  
  40aacd:	ret    
  40aace:	endbr64 
  40aad2:	push   rbp
  40aad3:	mov    rbp,rsp
  40aad6:	sub    rsp,0x30
  40aada:	mov    QWORD PTR [rbp-0x18],rdi
  40aade:	mov    QWORD PTR [rbp-0x20],rsi
  40aae2:	mov    QWORD PTR [rbp-0x28],rdx
  40aae6:	mov    QWORD PTR [rbp-0x30],rcx
  40aaea:	mov    rax,QWORD PTR [rbp-0x30]
  40aaee:	mov    DWORD PTR [rax],0x0
  40aaf4:	mov    rax,QWORD PTR [rbp-0x18]
  40aaf8:	mov    rax,QWORD PTR [rax]
  40aafb:	mov    edx,0x2
  40ab00:	mov    esi,0x4
  40ab05:	mov    rdi,rax
  40ab08:	call   41d6fb <flatcc_builder_start_struct@@Base>
  40ab0d:	mov    QWORD PTR [rbp-0x8],rax
  40ab11:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab16:	je     40ab65 <_start@@Base+0x48d5>
  40ab18:	mov    rcx,QWORD PTR [rbp-0x8]
  40ab1c:	mov    rdx,QWORD PTR [rbp-0x28]
  40ab20:	mov    rsi,QWORD PTR [rbp-0x20]
  40ab24:	mov    rax,QWORD PTR [rbp-0x18]
  40ab28:	mov    rdi,rax
  40ab2b:	call   40a7af <_start@@Base+0x451f>
  40ab30:	mov    QWORD PTR [rbp-0x20],rax
  40ab34:	mov    rax,QWORD PTR [rbp-0x20]
  40ab38:	cmp    rax,QWORD PTR [rbp-0x28]
  40ab3c:	je     40ab68 <_start@@Base+0x48d8>
  40ab3e:	mov    rax,QWORD PTR [rbp-0x18]
  40ab42:	mov    rax,QWORD PTR [rax]
  40ab45:	mov    rdi,rax
  40ab48:	call   41d77d <flatcc_builder_end_struct@@Base>
  40ab4d:	mov    edx,eax
  40ab4f:	mov    rax,QWORD PTR [rbp-0x30]
  40ab53:	mov    DWORD PTR [rax],edx
  40ab55:	mov    rax,QWORD PTR [rbp-0x30]
  40ab59:	mov    eax,DWORD PTR [rax]
  40ab5b:	test   eax,eax
  40ab5d:	je     40ab68 <_start@@Base+0x48d8>
  40ab5f:	mov    rax,QWORD PTR [rbp-0x20]
  40ab63:	jmp    40ab82 <_start@@Base+0x48f2>
  40ab65:	nop
  40ab66:	jmp    40ab69 <_start@@Base+0x48d9>
  40ab68:	nop
  40ab69:	mov    rdx,QWORD PTR [rbp-0x28]
  40ab6d:	mov    rsi,QWORD PTR [rbp-0x20]
  40ab71:	mov    rax,QWORD PTR [rbp-0x18]
  40ab75:	mov    ecx,0x21
  40ab7a:	mov    rdi,rax
  40ab7d:	call   427257 <flatcc_json_parser_set_error@@Base>
  40ab82:	leave  
  40ab83:	ret    
  40ab84:	endbr64 
  40ab88:	push   rbp
  40ab89:	mov    rbp,rsp
  40ab8c:	sub    rsp,0x30
  40ab90:	mov    QWORD PTR [rbp-0x18],rdi
  40ab94:	mov    QWORD PTR [rbp-0x20],rsi
  40ab98:	mov    QWORD PTR [rbp-0x28],rdx
  40ab9c:	mov    QWORD PTR [rbp-0x30],rcx
  40aba0:	mov    rax,QWORD PTR fs:0x28
  40aba9:	mov    QWORD PTR [rbp-0x8],rax
  40abad:	xor    eax,eax
  40abaf:	lea    rcx,[rbp-0xc]
  40abb3:	mov    rdx,QWORD PTR [rbp-0x28]
  40abb7:	mov    rsi,QWORD PTR [rbp-0x20]
  40abbb:	mov    rax,QWORD PTR [rbp-0x18]
  40abbf:	mov    rdi,rax
  40abc2:	call   406949 <_start@@Base+0x6b9>
  40abc7:	mov    QWORD PTR [rbp-0x20],rax
  40abcb:	jmp    40ac04 <_start@@Base+0x4974>
  40abcd:	mov    rdx,QWORD PTR [rbp-0x28]
  40abd1:	mov    rcx,QWORD PTR [rbp-0x20]
  40abd5:	mov    rax,QWORD PTR [rbp-0x18]
  40abd9:	mov    rsi,rcx
  40abdc:	mov    rdi,rax
  40abdf:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40abe4:	mov    QWORD PTR [rbp-0x20],rax
  40abe8:	lea    rcx,[rbp-0xc]
  40abec:	mov    rdx,QWORD PTR [rbp-0x28]
  40abf0:	mov    rsi,QWORD PTR [rbp-0x20]
  40abf4:	mov    rax,QWORD PTR [rbp-0x18]
  40abf8:	mov    rdi,rax
  40abfb:	call   406a06 <_start@@Base+0x776>
  40ac00:	mov    QWORD PTR [rbp-0x20],rax
  40ac04:	mov    eax,DWORD PTR [rbp-0xc]
  40ac07:	test   eax,eax
  40ac09:	jne    40abcd <_start@@Base+0x493d>
  40ac0b:	mov    rax,QWORD PTR [rbp-0x20]
  40ac0f:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac13:	xor    rdi,QWORD PTR fs:0x28
  40ac1c:	je     40ac23 <_start@@Base+0x4993>
  40ac1e:	call   4061a0 <__stack_chk_fail@plt>
  40ac23:	leave  
  40ac24:	ret    
  40ac25:	endbr64 
  40ac29:	push   rbp
  40ac2a:	mov    rbp,rsp
  40ac2d:	sub    rsp,0x30
  40ac31:	mov    QWORD PTR [rbp-0x18],rdi
  40ac35:	mov    QWORD PTR [rbp-0x20],rsi
  40ac39:	mov    QWORD PTR [rbp-0x28],rdx
  40ac3d:	mov    QWORD PTR [rbp-0x30],rcx
  40ac41:	mov    rax,QWORD PTR [rbp-0x30]
  40ac45:	mov    DWORD PTR [rax],0x0
  40ac4b:	mov    rax,QWORD PTR [rbp-0x18]
  40ac4f:	mov    rax,QWORD PTR [rax]
  40ac52:	mov    edx,0x1
  40ac57:	mov    esi,0x0
  40ac5c:	mov    rdi,rax
  40ac5f:	call   41d6fb <flatcc_builder_start_struct@@Base>
  40ac64:	mov    QWORD PTR [rbp-0x8],rax
  40ac68:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac6d:	je     40acbc <_start@@Base+0x4a2c>
  40ac6f:	mov    rcx,QWORD PTR [rbp-0x8]
  40ac73:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac77:	mov    rsi,QWORD PTR [rbp-0x20]
  40ac7b:	mov    rax,QWORD PTR [rbp-0x18]
  40ac7f:	mov    rdi,rax
  40ac82:	call   40ab84 <_start@@Base+0x48f4>
  40ac87:	mov    QWORD PTR [rbp-0x20],rax
  40ac8b:	mov    rax,QWORD PTR [rbp-0x20]
  40ac8f:	cmp    rax,QWORD PTR [rbp-0x28]
  40ac93:	je     40acbf <_start@@Base+0x4a2f>
  40ac95:	mov    rax,QWORD PTR [rbp-0x18]
  40ac99:	mov    rax,QWORD PTR [rax]
  40ac9c:	mov    rdi,rax
  40ac9f:	call   41d77d <flatcc_builder_end_struct@@Base>
  40aca4:	mov    edx,eax
  40aca6:	mov    rax,QWORD PTR [rbp-0x30]
  40acaa:	mov    DWORD PTR [rax],edx
  40acac:	mov    rax,QWORD PTR [rbp-0x30]
  40acb0:	mov    eax,DWORD PTR [rax]
  40acb2:	test   eax,eax
  40acb4:	je     40acbf <_start@@Base+0x4a2f>
  40acb6:	mov    rax,QWORD PTR [rbp-0x20]
  40acba:	jmp    40acd9 <_start@@Base+0x4a49>
  40acbc:	nop
  40acbd:	jmp    40acc0 <_start@@Base+0x4a30>
  40acbf:	nop
  40acc0:	mov    rdx,QWORD PTR [rbp-0x28]
  40acc4:	mov    rsi,QWORD PTR [rbp-0x20]
  40acc8:	mov    rax,QWORD PTR [rbp-0x18]
  40accc:	mov    ecx,0x21
  40acd1:	mov    rdi,rax
  40acd4:	call   427257 <flatcc_json_parser_set_error@@Base>
  40acd9:	leave  
  40acda:	ret    
  40acdb:	endbr64 
  40acdf:	push   rbp
  40ace0:	mov    rbp,rsp
  40ace3:	sub    rsp,0x30
  40ace7:	mov    QWORD PTR [rbp-0x18],rdi
  40aceb:	mov    QWORD PTR [rbp-0x20],rsi
  40acef:	mov    QWORD PTR [rbp-0x28],rdx
  40acf3:	mov    QWORD PTR [rbp-0x30],rcx
  40acf7:	mov    rax,QWORD PTR fs:0x28
  40ad00:	mov    QWORD PTR [rbp-0x8],rax
  40ad04:	xor    eax,eax
  40ad06:	mov    rax,QWORD PTR [rbp-0x30]
  40ad0a:	mov    DWORD PTR [rax],0x0
  40ad10:	mov    rax,QWORD PTR [rbp-0x18]
  40ad14:	mov    rax,QWORD PTR [rax]
  40ad17:	mov    esi,0x0
  40ad1c:	mov    rdi,rax
  40ad1f:	call   41e233 <flatcc_builder_start_table@@Base>
  40ad24:	test   eax,eax
  40ad26:	jne    40add5 <_start@@Base+0x4b45>
  40ad2c:	lea    rcx,[rbp-0xc]
  40ad30:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad34:	mov    rsi,QWORD PTR [rbp-0x20]
  40ad38:	mov    rax,QWORD PTR [rbp-0x18]
  40ad3c:	mov    rdi,rax
  40ad3f:	call   406949 <_start@@Base+0x6b9>
  40ad44:	mov    QWORD PTR [rbp-0x20],rax
  40ad48:	jmp    40ad9c <_start@@Base+0x4b0c>
  40ad4a:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad4e:	mov    rcx,QWORD PTR [rbp-0x20]
  40ad52:	mov    rax,QWORD PTR [rbp-0x18]
  40ad56:	mov    rsi,rcx
  40ad59:	mov    rdi,rax
  40ad5c:	call   4066e9 <_start@@Base+0x459>
  40ad61:	mov    QWORD PTR [rbp-0x20],rax
  40ad65:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad69:	mov    rcx,QWORD PTR [rbp-0x20]
  40ad6d:	mov    rax,QWORD PTR [rbp-0x18]
  40ad71:	mov    rsi,rcx
  40ad74:	mov    rdi,rax
  40ad77:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ad7c:	mov    QWORD PTR [rbp-0x20],rax
  40ad80:	lea    rcx,[rbp-0xc]
  40ad84:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad88:	mov    rsi,QWORD PTR [rbp-0x20]
  40ad8c:	mov    rax,QWORD PTR [rbp-0x18]
  40ad90:	mov    rdi,rax
  40ad93:	call   406a06 <_start@@Base+0x776>
  40ad98:	mov    QWORD PTR [rbp-0x20],rax
  40ad9c:	mov    eax,DWORD PTR [rbp-0xc]
  40ad9f:	test   eax,eax
  40ada1:	jne    40ad4a <_start@@Base+0x4aba>
  40ada3:	mov    rax,QWORD PTR [rbp-0x18]
  40ada7:	mov    eax,DWORD PTR [rax+0x1c]
  40adaa:	test   eax,eax
  40adac:	jne    40add8 <_start@@Base+0x4b48>
  40adae:	mov    rax,QWORD PTR [rbp-0x18]
  40adb2:	mov    rax,QWORD PTR [rax]
  40adb5:	mov    rdi,rax
  40adb8:	call   41ed42 <flatcc_builder_end_table@@Base>
  40adbd:	mov    edx,eax
  40adbf:	mov    rax,QWORD PTR [rbp-0x30]
  40adc3:	mov    DWORD PTR [rax],edx
  40adc5:	mov    rax,QWORD PTR [rbp-0x30]
  40adc9:	mov    eax,DWORD PTR [rax]
  40adcb:	test   eax,eax
  40adcd:	je     40addb <_start@@Base+0x4b4b>
  40adcf:	mov    rax,QWORD PTR [rbp-0x20]
  40add3:	jmp    40adf5 <_start@@Base+0x4b65>
  40add5:	nop
  40add6:	jmp    40addc <_start@@Base+0x4b4c>
  40add8:	nop
  40add9:	jmp    40addc <_start@@Base+0x4b4c>
  40addb:	nop
  40addc:	mov    rdx,QWORD PTR [rbp-0x28]
  40ade0:	mov    rsi,QWORD PTR [rbp-0x20]
  40ade4:	mov    rax,QWORD PTR [rbp-0x18]
  40ade8:	mov    ecx,0x21
  40aded:	mov    rdi,rax
  40adf0:	call   427257 <flatcc_json_parser_set_error@@Base>
  40adf5:	mov    rdi,QWORD PTR [rbp-0x8]
  40adf9:	xor    rdi,QWORD PTR fs:0x28
  40ae02:	je     40ae09 <_start@@Base+0x4b79>
  40ae04:	call   4061a0 <__stack_chk_fail@plt>
  40ae09:	leave  
  40ae0a:	ret    
  40ae0b:	endbr64 
  40ae0f:	push   rbp
  40ae10:	mov    rbp,rsp
  40ae13:	sub    rsp,0x50
  40ae17:	mov    QWORD PTR [rbp-0x38],rdi
  40ae1b:	mov    QWORD PTR [rbp-0x40],rsi
  40ae1f:	mov    QWORD PTR [rbp-0x48],rdx
  40ae23:	mov    QWORD PTR [rbp-0x50],rcx
  40ae27:	mov    rax,QWORD PTR fs:0x28
  40ae30:	mov    QWORD PTR [rbp-0x8],rax
  40ae34:	xor    eax,eax
  40ae36:	mov    rax,QWORD PTR [rbp-0x50]
  40ae3a:	mov    DWORD PTR [rax],0x0
  40ae40:	mov    rax,QWORD PTR [rbp-0x38]
  40ae44:	mov    rax,QWORD PTR [rax]
  40ae47:	mov    esi,0x1
  40ae4c:	mov    rdi,rax
  40ae4f:	call   41e233 <flatcc_builder_start_table@@Base>
  40ae54:	test   eax,eax
  40ae56:	jne    40afda <_start@@Base+0x4d4a>
  40ae5c:	lea    rcx,[rbp-0x24]
  40ae60:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae64:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae68:	mov    rax,QWORD PTR [rbp-0x38]
  40ae6c:	mov    rdi,rax
  40ae6f:	call   406949 <_start@@Base+0x6b9>
  40ae74:	mov    QWORD PTR [rbp-0x40],rax
  40ae78:	jmp    40af9d <_start@@Base+0x4d0d>
  40ae7d:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae81:	mov    rcx,QWORD PTR [rbp-0x40]
  40ae85:	mov    rax,QWORD PTR [rbp-0x38]
  40ae89:	mov    rsi,rcx
  40ae8c:	mov    rdi,rax
  40ae8f:	call   4066e9 <_start@@Base+0x459>
  40ae94:	mov    QWORD PTR [rbp-0x40],rax
  40ae98:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae9c:	mov    rax,QWORD PTR [rbp-0x40]
  40aea0:	mov    rsi,rdx
  40aea3:	mov    rdi,rax
  40aea6:	call   406853 <_start@@Base+0x5c3>
  40aeab:	mov    QWORD PTR [rbp-0x20],rax
  40aeaf:	mov    rax,QWORD PTR [rbp-0x20]
  40aeb3:	and    rax,0xffffffffff000000
  40aeb9:	mov    rdx,rax
  40aebc:	movabs rax,0x656d707479000000
  40aec6:	cmp    rdx,rax
  40aec9:	jne    40af66 <_start@@Base+0x4cd6>
  40aecf:	mov    rax,QWORD PTR [rbp-0x40]
  40aed3:	mov    QWORD PTR [rbp-0x18],rax
  40aed7:	mov    rdx,QWORD PTR [rbp-0x48]
  40aedb:	mov    rsi,QWORD PTR [rbp-0x18]
  40aedf:	mov    rax,QWORD PTR [rbp-0x38]
  40aee3:	mov    ecx,0x5
  40aee8:	mov    rdi,rax
  40aeeb:	call   406d3f <_start@@Base+0xaaf>
  40aef0:	mov    QWORD PTR [rbp-0x40],rax
  40aef4:	mov    rax,QWORD PTR [rbp-0x18]
  40aef8:	cmp    rax,QWORD PTR [rbp-0x40]
  40aefc:	je     40af49 <_start@@Base+0x4cb9>
  40aefe:	mov    rax,QWORD PTR [rbp-0x38]
  40af02:	mov    rax,QWORD PTR [rax]
  40af05:	mov    ecx,0x1
  40af0a:	mov    edx,0x0
  40af0f:	mov    esi,0x0
  40af14:	mov    rdi,rax
  40af17:	call   4203e3 <flatcc_builder_table_add@@Base>
  40af1c:	mov    QWORD PTR [rbp-0x10],rax
  40af20:	cmp    QWORD PTR [rbp-0x10],0x0
  40af25:	je     40afdd <_start@@Base+0x4d4d>
  40af2b:	mov    rcx,QWORD PTR [rbp-0x10]
  40af2f:	mov    rdx,QWORD PTR [rbp-0x48]
  40af33:	mov    rsi,QWORD PTR [rbp-0x40]
  40af37:	mov    rax,QWORD PTR [rbp-0x38]
  40af3b:	mov    rdi,rax
  40af3e:	call   40ab84 <_start@@Base+0x48f4>
  40af43:	mov    QWORD PTR [rbp-0x40],rax
  40af47:	jmp    40af81 <_start@@Base+0x4cf1>
  40af49:	mov    rdx,QWORD PTR [rbp-0x48]
  40af4d:	mov    rcx,QWORD PTR [rbp-0x40]
  40af51:	mov    rax,QWORD PTR [rbp-0x38]
  40af55:	mov    rsi,rcx
  40af58:	mov    rdi,rax
  40af5b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40af60:	mov    QWORD PTR [rbp-0x40],rax
  40af64:	jmp    40af81 <_start@@Base+0x4cf1>
  40af66:	mov    rdx,QWORD PTR [rbp-0x48]
  40af6a:	mov    rcx,QWORD PTR [rbp-0x40]
  40af6e:	mov    rax,QWORD PTR [rbp-0x38]
  40af72:	mov    rsi,rcx
  40af75:	mov    rdi,rax
  40af78:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40af7d:	mov    QWORD PTR [rbp-0x40],rax
  40af81:	lea    rcx,[rbp-0x24]
  40af85:	mov    rdx,QWORD PTR [rbp-0x48]
  40af89:	mov    rsi,QWORD PTR [rbp-0x40]
  40af8d:	mov    rax,QWORD PTR [rbp-0x38]
  40af91:	mov    rdi,rax
  40af94:	call   406a06 <_start@@Base+0x776>
  40af99:	mov    QWORD PTR [rbp-0x40],rax
  40af9d:	mov    eax,DWORD PTR [rbp-0x24]
  40afa0:	test   eax,eax
  40afa2:	jne    40ae7d <_start@@Base+0x4bed>
  40afa8:	mov    rax,QWORD PTR [rbp-0x38]
  40afac:	mov    eax,DWORD PTR [rax+0x1c]
  40afaf:	test   eax,eax
  40afb1:	jne    40afe0 <_start@@Base+0x4d50>
  40afb3:	mov    rax,QWORD PTR [rbp-0x38]
  40afb7:	mov    rax,QWORD PTR [rax]
  40afba:	mov    rdi,rax
  40afbd:	call   41ed42 <flatcc_builder_end_table@@Base>
  40afc2:	mov    edx,eax
  40afc4:	mov    rax,QWORD PTR [rbp-0x50]
  40afc8:	mov    DWORD PTR [rax],edx
  40afca:	mov    rax,QWORD PTR [rbp-0x50]
  40afce:	mov    eax,DWORD PTR [rax]
  40afd0:	test   eax,eax
  40afd2:	je     40afe3 <_start@@Base+0x4d53>
  40afd4:	mov    rax,QWORD PTR [rbp-0x40]
  40afd8:	jmp    40affd <_start@@Base+0x4d6d>
  40afda:	nop
  40afdb:	jmp    40afe4 <_start@@Base+0x4d54>
  40afdd:	nop
  40afde:	jmp    40afe4 <_start@@Base+0x4d54>
  40afe0:	nop
  40afe1:	jmp    40afe4 <_start@@Base+0x4d54>
  40afe3:	nop
  40afe4:	mov    rdx,QWORD PTR [rbp-0x48]
  40afe8:	mov    rsi,QWORD PTR [rbp-0x40]
  40afec:	mov    rax,QWORD PTR [rbp-0x38]
  40aff0:	mov    ecx,0x21
  40aff5:	mov    rdi,rax
  40aff8:	call   427257 <flatcc_json_parser_set_error@@Base>
  40affd:	mov    rdi,QWORD PTR [rbp-0x8]
  40b001:	xor    rdi,QWORD PTR fs:0x28
  40b00a:	je     40b011 <_start@@Base+0x4d81>
  40b00c:	call   4061a0 <__stack_chk_fail@plt>
  40b011:	leave  
  40b012:	ret    
  40b013:	endbr64 
  40b017:	push   rbp
  40b018:	mov    rbp,rsp
  40b01b:	sub    rsp,0x50
  40b01f:	mov    QWORD PTR [rbp-0x28],rdi
  40b023:	mov    QWORD PTR [rbp-0x30],rsi
  40b027:	mov    QWORD PTR [rbp-0x38],rdx
  40b02b:	mov    QWORD PTR [rbp-0x40],rcx
  40b02f:	mov    QWORD PTR [rbp-0x48],r8
  40b033:	mov    QWORD PTR [rbp-0x50],r9
  40b037:	mov    rax,QWORD PTR [rbp-0x30]
  40b03b:	mov    QWORD PTR [rbp-0x18],rax
  40b03f:	mov    rdx,QWORD PTR [rbp-0x38]
  40b043:	mov    rax,QWORD PTR [rbp-0x30]
  40b047:	mov    rsi,rdx
  40b04a:	mov    rdi,rax
  40b04d:	call   406853 <_start@@Base+0x5c3>
  40b052:	mov    QWORD PTR [rbp-0x10],rax
  40b056:	movabs rax,0xff00000000000000
  40b060:	and    rax,QWORD PTR [rbp-0x10]
  40b064:	mov    rdx,rax
  40b067:	movabs rax,0x7800000000000000
  40b071:	cmp    rdx,rax
  40b074:	jne    40b0cd <_start@@Base+0x4e3d>
  40b076:	mov    rax,QWORD PTR [rbp-0x30]
  40b07a:	mov    QWORD PTR [rbp-0x8],rax
  40b07e:	mov    rcx,QWORD PTR [rbp-0x50]
  40b082:	mov    rdx,QWORD PTR [rbp-0x38]
  40b086:	mov    rsi,QWORD PTR [rbp-0x8]
  40b08a:	mov    rax,QWORD PTR [rbp-0x28]
  40b08e:	mov    r8,rcx
  40b091:	mov    ecx,0x1
  40b096:	mov    rdi,rax
  40b099:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  40b09e:	mov    QWORD PTR [rbp-0x30],rax
  40b0a2:	mov    rax,QWORD PTR [rbp-0x30]
  40b0a6:	cmp    rax,QWORD PTR [rbp-0x8]
  40b0aa:	je     40b0c7 <_start@@Base+0x4e37>
  40b0ac:	mov    rax,QWORD PTR [rbp-0x48]
  40b0b0:	mov    QWORD PTR [rax],0x0
  40b0b7:	mov    rax,QWORD PTR [rbp-0x40]
  40b0bb:	mov    DWORD PTR [rax],0x0
  40b0c1:	mov    rax,QWORD PTR [rbp-0x30]
  40b0c5:	jmp    40b0d1 <_start@@Base+0x4e41>
  40b0c7:	mov    rax,QWORD PTR [rbp-0x18]
  40b0cb:	jmp    40b0d1 <_start@@Base+0x4e41>
  40b0cd:	mov    rax,QWORD PTR [rbp-0x18]
  40b0d1:	leave  
  40b0d2:	ret    
  40b0d3:	endbr64 
  40b0d7:	push   rbp
  40b0d8:	mov    rbp,rsp
  40b0db:	sub    rsp,0x50
  40b0df:	mov    QWORD PTR [rbp-0x38],rdi
  40b0e3:	mov    QWORD PTR [rbp-0x40],rsi
  40b0e7:	mov    QWORD PTR [rbp-0x48],rdx
  40b0eb:	mov    QWORD PTR [rbp-0x50],rcx
  40b0ef:	mov    rax,QWORD PTR fs:0x28
  40b0f8:	mov    QWORD PTR [rbp-0x8],rax
  40b0fc:	xor    eax,eax
  40b0fe:	mov    rax,QWORD PTR [rbp-0x50]
  40b102:	mov    DWORD PTR [rax],0x0
  40b108:	mov    rax,QWORD PTR [rbp-0x38]
  40b10c:	mov    rax,QWORD PTR [rax]
  40b10f:	mov    esi,0x4
  40b114:	mov    rdi,rax
  40b117:	call   41e233 <flatcc_builder_start_table@@Base>
  40b11c:	test   eax,eax
  40b11e:	jne    40b6f1 <_start@@Base+0x5461>
  40b124:	lea    rcx,[rbp-0x24]
  40b128:	mov    rdx,QWORD PTR [rbp-0x48]
  40b12c:	mov    rsi,QWORD PTR [rbp-0x40]
  40b130:	mov    rax,QWORD PTR [rbp-0x38]
  40b134:	mov    rdi,rax
  40b137:	call   406949 <_start@@Base+0x6b9>
  40b13c:	mov    QWORD PTR [rbp-0x40],rax
  40b140:	jmp    40b6b4 <_start@@Base+0x5424>
  40b145:	mov    rdx,QWORD PTR [rbp-0x48]
  40b149:	mov    rcx,QWORD PTR [rbp-0x40]
  40b14d:	mov    rax,QWORD PTR [rbp-0x38]
  40b151:	mov    rsi,rcx
  40b154:	mov    rdi,rax
  40b157:	call   4066e9 <_start@@Base+0x459>
  40b15c:	mov    QWORD PTR [rbp-0x40],rax
  40b160:	mov    rdx,QWORD PTR [rbp-0x48]
  40b164:	mov    rax,QWORD PTR [rbp-0x40]
  40b168:	mov    rsi,rdx
  40b16b:	mov    rdi,rax
  40b16e:	call   406853 <_start@@Base+0x5c3>
  40b173:	mov    QWORD PTR [rbp-0x20],rax
  40b177:	mov    rax,QWORD PTR [rbp-0x20]
  40b17b:	mov    ax,0x0
  40b17f:	mov    rdx,rax
  40b182:	movabs rax,0x636f6c6f72320000
  40b18c:	cmp    rdx,rax
  40b18f:	jne    40b2a5 <_start@@Base+0x5015>
  40b195:	mov    rax,QWORD PTR [rbp-0x40]
  40b199:	mov    QWORD PTR [rbp-0x18],rax
  40b19d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1a1:	mov    rsi,QWORD PTR [rbp-0x18]
  40b1a5:	mov    rax,QWORD PTR [rbp-0x38]
  40b1a9:	mov    ecx,0x6
  40b1ae:	mov    rdi,rax
  40b1b1:	call   406d3f <_start@@Base+0xaaf>
  40b1b6:	mov    QWORD PTR [rbp-0x40],rax
  40b1ba:	mov    rax,QWORD PTR [rbp-0x18]
  40b1be:	cmp    rax,QWORD PTR [rbp-0x40]
  40b1c2:	je     40b3d5 <_start@@Base+0x5145>
  40b1c8:	mov    BYTE PTR [rbp-0x25],0x0
  40b1cc:	mov    rax,QWORD PTR [rbp-0x40]
  40b1d0:	mov    QWORD PTR [rbp-0x18],rax
  40b1d4:	lea    rcx,[rbp-0x25]
  40b1d8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1dc:	mov    rsi,QWORD PTR [rbp-0x18]
  40b1e0:	mov    rax,QWORD PTR [rbp-0x38]
  40b1e4:	mov    rdi,rax
  40b1e7:	call   40793b <_start@@Base+0x16ab>
  40b1ec:	mov    QWORD PTR [rbp-0x40],rax
  40b1f0:	mov    rax,QWORD PTR [rbp-0x18]
  40b1f4:	cmp    rax,QWORD PTR [rbp-0x40]
  40b1f8:	jne    40b244 <_start@@Base+0x4fb4>
  40b1fa:	mov    rax,QWORD PTR [rbp-0x40]
  40b1fe:	mov    QWORD PTR [rbp-0x18],rax
  40b202:	lea    rcx,[rbp-0x25]
  40b206:	mov    rdx,QWORD PTR [rbp-0x48]
  40b20a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b20e:	mov    rax,QWORD PTR [rbp-0x38]
  40b212:	mov    r8,rcx
  40b215:	lea    rcx,[rip+0x39f04]        # 445120 <__data_start@@Base+0x60>
  40b21c:	mov    rdi,rax
  40b21f:	call   408483 <_start@@Base+0x21f3>
  40b224:	mov    QWORD PTR [rbp-0x40],rax
  40b228:	mov    rax,QWORD PTR [rbp-0x40]
  40b22c:	cmp    rax,QWORD PTR [rbp-0x18]
  40b230:	je     40b6f4 <_start@@Base+0x5464>
  40b236:	mov    rax,QWORD PTR [rbp-0x40]
  40b23a:	cmp    rax,QWORD PTR [rbp-0x48]
  40b23e:	je     40b6f4 <_start@@Base+0x5464>
  40b244:	movzx  eax,BYTE PTR [rbp-0x25]
  40b248:	cmp    al,0x2
  40b24a:	jne    40b25e <_start@@Base+0x4fce>
  40b24c:	mov    rax,QWORD PTR [rbp-0x38]
  40b250:	mov    eax,DWORD PTR [rax+0x10]
  40b253:	and    eax,0x2
  40b256:	test   eax,eax
  40b258:	je     40b697 <_start@@Base+0x5407>
  40b25e:	mov    rax,QWORD PTR [rbp-0x38]
  40b262:	mov    rax,QWORD PTR [rax]
  40b265:	mov    ecx,0x1
  40b26a:	mov    edx,0x1
  40b26f:	mov    esi,0x1
  40b274:	mov    rdi,rax
  40b277:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b27c:	mov    QWORD PTR [rbp-0x10],rax
  40b280:	cmp    QWORD PTR [rbp-0x10],0x0
  40b285:	je     40b6f7 <_start@@Base+0x5467>
  40b28b:	movzx  eax,BYTE PTR [rbp-0x25]
  40b28f:	movsx  edx,al
  40b292:	mov    rax,QWORD PTR [rbp-0x10]
  40b296:	mov    esi,edx
  40b298:	mov    rdi,rax
  40b29b:	call   406459 <_start@@Base+0x1c9>
  40b2a0:	jmp    40b697 <_start@@Base+0x5407>
  40b2a5:	mov    rax,QWORD PTR [rbp-0x20]
  40b2a9:	and    rax,0xffffffffff000000
  40b2af:	mov    rdx,rax
  40b2b2:	movabs rax,0x636f6c6f72000000
  40b2bc:	cmp    rdx,rax
  40b2bf:	jne    40b3d8 <_start@@Base+0x5148>
  40b2c5:	mov    rax,QWORD PTR [rbp-0x40]
  40b2c9:	mov    QWORD PTR [rbp-0x18],rax
  40b2cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40b2d1:	mov    rsi,QWORD PTR [rbp-0x18]
  40b2d5:	mov    rax,QWORD PTR [rbp-0x38]
  40b2d9:	mov    ecx,0x5
  40b2de:	mov    rdi,rax
  40b2e1:	call   406d3f <_start@@Base+0xaaf>
  40b2e6:	mov    QWORD PTR [rbp-0x40],rax
  40b2ea:	mov    rax,QWORD PTR [rbp-0x18]
  40b2ee:	cmp    rax,QWORD PTR [rbp-0x40]
  40b2f2:	je     40b3db <_start@@Base+0x514b>
  40b2f8:	mov    BYTE PTR [rbp-0x25],0x0
  40b2fc:	mov    rax,QWORD PTR [rbp-0x40]
  40b300:	mov    QWORD PTR [rbp-0x18],rax
  40b304:	lea    rcx,[rbp-0x25]
  40b308:	mov    rdx,QWORD PTR [rbp-0x48]
  40b30c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b310:	mov    rax,QWORD PTR [rbp-0x38]
  40b314:	mov    rdi,rax
  40b317:	call   40793b <_start@@Base+0x16ab>
  40b31c:	mov    QWORD PTR [rbp-0x40],rax
  40b320:	mov    rax,QWORD PTR [rbp-0x18]
  40b324:	cmp    rax,QWORD PTR [rbp-0x40]
  40b328:	jne    40b374 <_start@@Base+0x50e4>
  40b32a:	mov    rax,QWORD PTR [rbp-0x40]
  40b32e:	mov    QWORD PTR [rbp-0x18],rax
  40b332:	lea    rcx,[rbp-0x25]
  40b336:	mov    rdx,QWORD PTR [rbp-0x48]
  40b33a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b33e:	mov    rax,QWORD PTR [rbp-0x38]
  40b342:	mov    r8,rcx
  40b345:	lea    rcx,[rip+0x39df4]        # 445140 <__data_start@@Base+0x80>
  40b34c:	mov    rdi,rax
  40b34f:	call   408483 <_start@@Base+0x21f3>
  40b354:	mov    QWORD PTR [rbp-0x40],rax
  40b358:	mov    rax,QWORD PTR [rbp-0x40]
  40b35c:	cmp    rax,QWORD PTR [rbp-0x18]
  40b360:	je     40b6fa <_start@@Base+0x546a>
  40b366:	mov    rax,QWORD PTR [rbp-0x40]
  40b36a:	cmp    rax,QWORD PTR [rbp-0x48]
  40b36e:	je     40b6fa <_start@@Base+0x546a>
  40b374:	movzx  eax,BYTE PTR [rbp-0x25]
  40b378:	cmp    al,0x2
  40b37a:	jne    40b38e <_start@@Base+0x50fe>
  40b37c:	mov    rax,QWORD PTR [rbp-0x38]
  40b380:	mov    eax,DWORD PTR [rax+0x10]
  40b383:	and    eax,0x2
  40b386:	test   eax,eax
  40b388:	je     40b697 <_start@@Base+0x5407>
  40b38e:	mov    rax,QWORD PTR [rbp-0x38]
  40b392:	mov    rax,QWORD PTR [rax]
  40b395:	mov    ecx,0x1
  40b39a:	mov    edx,0x1
  40b39f:	mov    esi,0x0
  40b3a4:	mov    rdi,rax
  40b3a7:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b3ac:	mov    QWORD PTR [rbp-0x10],rax
  40b3b0:	cmp    QWORD PTR [rbp-0x10],0x0
  40b3b5:	je     40b6fd <_start@@Base+0x546d>
  40b3bb:	movzx  eax,BYTE PTR [rbp-0x25]
  40b3bf:	movsx  edx,al
  40b3c2:	mov    rax,QWORD PTR [rbp-0x10]
  40b3c6:	mov    esi,edx
  40b3c8:	mov    rdi,rax
  40b3cb:	call   406459 <_start@@Base+0x1c9>
  40b3d0:	jmp    40b697 <_start@@Base+0x5407>
  40b3d5:	nop
  40b3d6:	jmp    40b3dc <_start@@Base+0x514c>
  40b3d8:	nop
  40b3d9:	jmp    40b3dc <_start@@Base+0x514c>
  40b3db:	nop
  40b3dc:	movabs rax,0xffffff0000000000
  40b3e6:	and    rax,QWORD PTR [rbp-0x20]
  40b3ea:	mov    rdx,rax
  40b3ed:	movabs rax,0x7563320000000000
  40b3f7:	cmp    rdx,rax
  40b3fa:	jne    40b530 <_start@@Base+0x52a0>
  40b400:	mov    rax,QWORD PTR [rbp-0x40]
  40b404:	mov    QWORD PTR [rbp-0x18],rax
  40b408:	mov    rdx,QWORD PTR [rbp-0x48]
  40b40c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b410:	mov    rax,QWORD PTR [rbp-0x38]
  40b414:	mov    ecx,0x3
  40b419:	mov    rdi,rax
  40b41c:	call   406d3f <_start@@Base+0xaaf>
  40b421:	mov    QWORD PTR [rbp-0x40],rax
  40b425:	mov    rax,QWORD PTR [rbp-0x18]
  40b429:	cmp    rax,QWORD PTR [rbp-0x40]
  40b42d:	je     40b510 <_start@@Base+0x5280>
  40b433:	mov    BYTE PTR [rbp-0x25],0x0
  40b437:	mov    rax,QWORD PTR [rbp-0x40]
  40b43b:	mov    QWORD PTR [rbp-0x18],rax
  40b43f:	lea    rcx,[rbp-0x25]
  40b443:	mov    rdx,QWORD PTR [rbp-0x48]
  40b447:	mov    rsi,QWORD PTR [rbp-0x18]
  40b44b:	mov    rax,QWORD PTR [rbp-0x38]
  40b44f:	mov    rdi,rax
  40b452:	call   407626 <_start@@Base+0x1396>
  40b457:	mov    QWORD PTR [rbp-0x40],rax
  40b45b:	mov    rax,QWORD PTR [rbp-0x18]
  40b45f:	cmp    rax,QWORD PTR [rbp-0x40]
  40b463:	jne    40b4af <_start@@Base+0x521f>
  40b465:	mov    rax,QWORD PTR [rbp-0x40]
  40b469:	mov    QWORD PTR [rbp-0x18],rax
  40b46d:	lea    rcx,[rbp-0x25]
  40b471:	mov    rdx,QWORD PTR [rbp-0x48]
  40b475:	mov    rsi,QWORD PTR [rbp-0x18]
  40b479:	mov    rax,QWORD PTR [rbp-0x38]
  40b47d:	mov    r8,rcx
  40b480:	lea    rcx,[rip+0x39cd9]        # 445160 <__data_start@@Base+0xa0>
  40b487:	mov    rdi,rax
  40b48a:	call   407f08 <_start@@Base+0x1c78>
  40b48f:	mov    QWORD PTR [rbp-0x40],rax
  40b493:	mov    rax,QWORD PTR [rbp-0x40]
  40b497:	cmp    rax,QWORD PTR [rbp-0x18]
  40b49b:	je     40b700 <_start@@Base+0x5470>
  40b4a1:	mov    rax,QWORD PTR [rbp-0x40]
  40b4a5:	cmp    rax,QWORD PTR [rbp-0x48]
  40b4a9:	je     40b700 <_start@@Base+0x5470>
  40b4af:	movzx  eax,BYTE PTR [rbp-0x25]
  40b4b3:	cmp    al,0x2
  40b4b5:	jne    40b4c9 <_start@@Base+0x5239>
  40b4b7:	mov    rax,QWORD PTR [rbp-0x38]
  40b4bb:	mov    eax,DWORD PTR [rax+0x10]
  40b4be:	and    eax,0x2
  40b4c1:	test   eax,eax
  40b4c3:	je     40b698 <_start@@Base+0x5408>
  40b4c9:	mov    rax,QWORD PTR [rbp-0x38]
  40b4cd:	mov    rax,QWORD PTR [rax]
  40b4d0:	mov    ecx,0x1
  40b4d5:	mov    edx,0x1
  40b4da:	mov    esi,0x3
  40b4df:	mov    rdi,rax
  40b4e2:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b4e7:	mov    QWORD PTR [rbp-0x10],rax
  40b4eb:	cmp    QWORD PTR [rbp-0x10],0x0
  40b4f0:	je     40b703 <_start@@Base+0x5473>
  40b4f6:	movzx  eax,BYTE PTR [rbp-0x25]
  40b4fa:	movzx  edx,al
  40b4fd:	mov    rax,QWORD PTR [rbp-0x10]
  40b501:	mov    esi,edx
  40b503:	mov    rdi,rax
  40b506:	call   406385 <_start@@Base+0xf5>
  40b50b:	jmp    40b698 <_start@@Base+0x5408>
  40b510:	mov    rdx,QWORD PTR [rbp-0x48]
  40b514:	mov    rcx,QWORD PTR [rbp-0x40]
  40b518:	mov    rax,QWORD PTR [rbp-0x38]
  40b51c:	mov    rsi,rcx
  40b51f:	mov    rdi,rax
  40b522:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40b527:	mov    QWORD PTR [rbp-0x40],rax
  40b52b:	jmp    40b698 <_start@@Base+0x5408>
  40b530:	movabs rax,0xffff000000000000
  40b53a:	and    rax,QWORD PTR [rbp-0x20]
  40b53e:	mov    rdx,rax
  40b541:	movabs rax,0x7563000000000000
  40b54b:	cmp    rdx,rax
  40b54e:	jne    40b67a <_start@@Base+0x53ea>
  40b554:	mov    rax,QWORD PTR [rbp-0x40]
  40b558:	mov    QWORD PTR [rbp-0x18],rax
  40b55c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b560:	mov    rsi,QWORD PTR [rbp-0x18]
  40b564:	mov    rax,QWORD PTR [rbp-0x38]
  40b568:	mov    ecx,0x2
  40b56d:	mov    rdi,rax
  40b570:	call   406d3f <_start@@Base+0xaaf>
  40b575:	mov    QWORD PTR [rbp-0x40],rax
  40b579:	mov    rax,QWORD PTR [rbp-0x18]
  40b57d:	cmp    rax,QWORD PTR [rbp-0x40]
  40b581:	je     40b65d <_start@@Base+0x53cd>
  40b587:	mov    BYTE PTR [rbp-0x25],0x0
  40b58b:	mov    rax,QWORD PTR [rbp-0x40]
  40b58f:	mov    QWORD PTR [rbp-0x18],rax
  40b593:	lea    rcx,[rbp-0x25]
  40b597:	mov    rdx,QWORD PTR [rbp-0x48]
  40b59b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b59f:	mov    rax,QWORD PTR [rbp-0x38]
  40b5a3:	mov    rdi,rax
  40b5a6:	call   407626 <_start@@Base+0x1396>
  40b5ab:	mov    QWORD PTR [rbp-0x40],rax
  40b5af:	mov    rax,QWORD PTR [rbp-0x18]
  40b5b3:	cmp    rax,QWORD PTR [rbp-0x40]
  40b5b7:	jne    40b603 <_start@@Base+0x5373>
  40b5b9:	mov    rax,QWORD PTR [rbp-0x40]
  40b5bd:	mov    QWORD PTR [rbp-0x18],rax
  40b5c1:	lea    rcx,[rbp-0x25]
  40b5c5:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5c9:	mov    rsi,QWORD PTR [rbp-0x18]
  40b5cd:	mov    rax,QWORD PTR [rbp-0x38]
  40b5d1:	mov    r8,rcx
  40b5d4:	lea    rcx,[rip+0x39ba5]        # 445180 <__data_start@@Base+0xc0>
  40b5db:	mov    rdi,rax
  40b5de:	call   407f08 <_start@@Base+0x1c78>
  40b5e3:	mov    QWORD PTR [rbp-0x40],rax
  40b5e7:	mov    rax,QWORD PTR [rbp-0x40]
  40b5eb:	cmp    rax,QWORD PTR [rbp-0x18]
  40b5ef:	je     40b706 <_start@@Base+0x5476>
  40b5f5:	mov    rax,QWORD PTR [rbp-0x40]
  40b5f9:	cmp    rax,QWORD PTR [rbp-0x48]
  40b5fd:	je     40b706 <_start@@Base+0x5476>
  40b603:	movzx  eax,BYTE PTR [rbp-0x25]
  40b607:	cmp    al,0x2
  40b609:	jne    40b619 <_start@@Base+0x5389>
  40b60b:	mov    rax,QWORD PTR [rbp-0x38]
  40b60f:	mov    eax,DWORD PTR [rax+0x10]
  40b612:	and    eax,0x2
  40b615:	test   eax,eax
  40b617:	je     40b698 <_start@@Base+0x5408>
  40b619:	mov    rax,QWORD PTR [rbp-0x38]
  40b61d:	mov    rax,QWORD PTR [rax]
  40b620:	mov    ecx,0x1
  40b625:	mov    edx,0x1
  40b62a:	mov    esi,0x2
  40b62f:	mov    rdi,rax
  40b632:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b637:	mov    QWORD PTR [rbp-0x10],rax
  40b63b:	cmp    QWORD PTR [rbp-0x10],0x0
  40b640:	je     40b709 <_start@@Base+0x5479>
  40b646:	movzx  eax,BYTE PTR [rbp-0x25]
  40b64a:	movzx  edx,al
  40b64d:	mov    rax,QWORD PTR [rbp-0x10]
  40b651:	mov    esi,edx
  40b653:	mov    rdi,rax
  40b656:	call   406385 <_start@@Base+0xf5>
  40b65b:	jmp    40b698 <_start@@Base+0x5408>
  40b65d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b661:	mov    rcx,QWORD PTR [rbp-0x40]
  40b665:	mov    rax,QWORD PTR [rbp-0x38]
  40b669:	mov    rsi,rcx
  40b66c:	mov    rdi,rax
  40b66f:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40b674:	mov    QWORD PTR [rbp-0x40],rax
  40b678:	jmp    40b698 <_start@@Base+0x5408>
  40b67a:	mov    rdx,QWORD PTR [rbp-0x48]
  40b67e:	mov    rcx,QWORD PTR [rbp-0x40]
  40b682:	mov    rax,QWORD PTR [rbp-0x38]
  40b686:	mov    rsi,rcx
  40b689:	mov    rdi,rax
  40b68c:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40b691:	mov    QWORD PTR [rbp-0x40],rax
  40b695:	jmp    40b698 <_start@@Base+0x5408>
  40b697:	nop
  40b698:	lea    rcx,[rbp-0x24]
  40b69c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b6a0:	mov    rsi,QWORD PTR [rbp-0x40]
  40b6a4:	mov    rax,QWORD PTR [rbp-0x38]
  40b6a8:	mov    rdi,rax
  40b6ab:	call   406a06 <_start@@Base+0x776>
  40b6b0:	mov    QWORD PTR [rbp-0x40],rax
  40b6b4:	mov    eax,DWORD PTR [rbp-0x24]
  40b6b7:	test   eax,eax
  40b6b9:	jne    40b145 <_start@@Base+0x4eb5>
  40b6bf:	mov    rax,QWORD PTR [rbp-0x38]
  40b6c3:	mov    eax,DWORD PTR [rax+0x1c]
  40b6c6:	test   eax,eax
  40b6c8:	jne    40b70c <_start@@Base+0x547c>
  40b6ca:	mov    rax,QWORD PTR [rbp-0x38]
  40b6ce:	mov    rax,QWORD PTR [rax]
  40b6d1:	mov    rdi,rax
  40b6d4:	call   41ed42 <flatcc_builder_end_table@@Base>
  40b6d9:	mov    edx,eax
  40b6db:	mov    rax,QWORD PTR [rbp-0x50]
  40b6df:	mov    DWORD PTR [rax],edx
  40b6e1:	mov    rax,QWORD PTR [rbp-0x50]
  40b6e5:	mov    eax,DWORD PTR [rax]
  40b6e7:	test   eax,eax
  40b6e9:	je     40b70f <_start@@Base+0x547f>
  40b6eb:	mov    rax,QWORD PTR [rbp-0x40]
  40b6ef:	jmp    40b729 <_start@@Base+0x5499>
  40b6f1:	nop
  40b6f2:	jmp    40b710 <_start@@Base+0x5480>
  40b6f4:	nop
  40b6f5:	jmp    40b710 <_start@@Base+0x5480>
  40b6f7:	nop
  40b6f8:	jmp    40b710 <_start@@Base+0x5480>
  40b6fa:	nop
  40b6fb:	jmp    40b710 <_start@@Base+0x5480>
  40b6fd:	nop
  40b6fe:	jmp    40b710 <_start@@Base+0x5480>
  40b700:	nop
  40b701:	jmp    40b710 <_start@@Base+0x5480>
  40b703:	nop
  40b704:	jmp    40b710 <_start@@Base+0x5480>
  40b706:	nop
  40b707:	jmp    40b710 <_start@@Base+0x5480>
  40b709:	nop
  40b70a:	jmp    40b710 <_start@@Base+0x5480>
  40b70c:	nop
  40b70d:	jmp    40b710 <_start@@Base+0x5480>
  40b70f:	nop
  40b710:	mov    rdx,QWORD PTR [rbp-0x48]
  40b714:	mov    rsi,QWORD PTR [rbp-0x40]
  40b718:	mov    rax,QWORD PTR [rbp-0x38]
  40b71c:	mov    ecx,0x21
  40b721:	mov    rdi,rax
  40b724:	call   427257 <flatcc_json_parser_set_error@@Base>
  40b729:	mov    rdi,QWORD PTR [rbp-0x8]
  40b72d:	xor    rdi,QWORD PTR fs:0x28
  40b736:	je     40b73d <_start@@Base+0x54ad>
  40b738:	call   4061a0 <__stack_chk_fail@plt>
  40b73d:	leave  
  40b73e:	ret    
  40b73f:	endbr64 
  40b743:	push   rbp
  40b744:	mov    rbp,rsp
  40b747:	sub    rsp,0x50
  40b74b:	mov    QWORD PTR [rbp-0x38],rdi
  40b74f:	mov    QWORD PTR [rbp-0x40],rsi
  40b753:	mov    QWORD PTR [rbp-0x48],rdx
  40b757:	mov    QWORD PTR [rbp-0x50],rcx
  40b75b:	mov    rax,QWORD PTR fs:0x28
  40b764:	mov    QWORD PTR [rbp-0x8],rax
  40b768:	xor    eax,eax
  40b76a:	mov    rax,QWORD PTR [rbp-0x50]
  40b76e:	mov    DWORD PTR [rax],0x0
  40b774:	mov    rax,QWORD PTR [rbp-0x38]
  40b778:	mov    rax,QWORD PTR [rax]
  40b77b:	mov    esi,0x6
  40b780:	mov    rdi,rax
  40b783:	call   41e233 <flatcc_builder_start_table@@Base>
  40b788:	test   eax,eax
  40b78a:	jne    40c02c <_start@@Base+0x5d9c>
  40b790:	lea    rcx,[rbp-0x2c]
  40b794:	mov    rdx,QWORD PTR [rbp-0x48]
  40b798:	mov    rsi,QWORD PTR [rbp-0x40]
  40b79c:	mov    rax,QWORD PTR [rbp-0x38]
  40b7a0:	mov    rdi,rax
  40b7a3:	call   406949 <_start@@Base+0x6b9>
  40b7a8:	mov    QWORD PTR [rbp-0x40],rax
  40b7ac:	jmp    40bfef <_start@@Base+0x5d5f>
  40b7b1:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7b5:	mov    rcx,QWORD PTR [rbp-0x40]
  40b7b9:	mov    rax,QWORD PTR [rbp-0x38]
  40b7bd:	mov    rsi,rcx
  40b7c0:	mov    rdi,rax
  40b7c3:	call   4066e9 <_start@@Base+0x459>
  40b7c8:	mov    QWORD PTR [rbp-0x40],rax
  40b7cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7d0:	mov    rax,QWORD PTR [rbp-0x40]
  40b7d4:	mov    rsi,rdx
  40b7d7:	mov    rdi,rax
  40b7da:	call   406853 <_start@@Base+0x5c3>
  40b7df:	mov    QWORD PTR [rbp-0x20],rax
  40b7e3:	movabs rax,0x696e6376616bffff
  40b7ed:	cmp    QWORD PTR [rbp-0x20],rax
  40b7f1:	ja     40b8d2 <_start@@Base+0x5642>
  40b7f7:	mov    rax,QWORD PTR [rbp-0x20]
  40b7fb:	mov    ax,0x0
  40b7ff:	mov    rdx,rax
  40b802:	movabs rax,0x676c6f62616c0000
  40b80c:	cmp    rdx,rax
  40b80f:	jne    40b8b2 <_start@@Base+0x5622>
  40b815:	mov    rax,QWORD PTR [rbp-0x40]
  40b819:	mov    QWORD PTR [rbp-0x18],rax
  40b81d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b821:	mov    rsi,QWORD PTR [rbp-0x18]
  40b825:	mov    rax,QWORD PTR [rbp-0x38]
  40b829:	mov    ecx,0x6
  40b82e:	mov    rdi,rax
  40b831:	call   406d3f <_start@@Base+0xaaf>
  40b836:	mov    QWORD PTR [rbp-0x40],rax
  40b83a:	mov    rax,QWORD PTR [rbp-0x18]
  40b83e:	cmp    rax,QWORD PTR [rbp-0x40]
  40b842:	je     40b892 <_start@@Base+0x5602>
  40b844:	mov    rax,QWORD PTR [rbp-0x38]
  40b848:	mov    rax,QWORD PTR [rax]
  40b84b:	mov    ecx,0x1
  40b850:	mov    edx,0x0
  40b855:	mov    esi,0x0
  40b85a:	mov    rdi,rax
  40b85d:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b862:	mov    QWORD PTR [rbp-0x10],rax
  40b866:	cmp    QWORD PTR [rbp-0x10],0x0
  40b86b:	je     40c02f <_start@@Base+0x5d9f>
  40b871:	mov    rcx,QWORD PTR [rbp-0x10]
  40b875:	mov    rdx,QWORD PTR [rbp-0x48]
  40b879:	mov    rsi,QWORD PTR [rbp-0x40]
  40b87d:	mov    rax,QWORD PTR [rbp-0x38]
  40b881:	mov    rdi,rax
  40b884:	call   4094a8 <_start@@Base+0x3218>
  40b889:	mov    QWORD PTR [rbp-0x40],rax
  40b88d:	jmp    40bfd3 <_start@@Base+0x5d43>
  40b892:	mov    rdx,QWORD PTR [rbp-0x48]
  40b896:	mov    rcx,QWORD PTR [rbp-0x40]
  40b89a:	mov    rax,QWORD PTR [rbp-0x38]
  40b89e:	mov    rsi,rcx
  40b8a1:	mov    rdi,rax
  40b8a4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40b8a9:	mov    QWORD PTR [rbp-0x40],rax
  40b8ad:	jmp    40bfd3 <_start@@Base+0x5d43>
  40b8b2:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8b6:	mov    rcx,QWORD PTR [rbp-0x40]
  40b8ba:	mov    rax,QWORD PTR [rbp-0x38]
  40b8be:	mov    rsi,rcx
  40b8c1:	mov    rdi,rax
  40b8c4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40b8c9:	mov    QWORD PTR [rbp-0x40],rax
  40b8cd:	jmp    40bfd3 <_start@@Base+0x5d43>
  40b8d2:	movabs rax,0x696e6376616c32ff
  40b8dc:	cmp    QWORD PTR [rbp-0x20],rax
  40b8e0:	ja     40bba6 <_start@@Base+0x5916>
  40b8e6:	mov    rax,QWORD PTR [rbp-0x20]
  40b8ea:	mov    al,0x0
  40b8ec:	mov    rdx,rax
  40b8ef:	movabs rax,0x696e6376616c3200
  40b8f9:	cmp    rdx,rax
  40b8fc:	jne    40ba35 <_start@@Base+0x57a5>
  40b902:	mov    rax,QWORD PTR [rbp-0x40]
  40b906:	mov    QWORD PTR [rbp-0x18],rax
  40b90a:	mov    rdx,QWORD PTR [rbp-0x48]
  40b90e:	mov    rsi,QWORD PTR [rbp-0x18]
  40b912:	mov    rax,QWORD PTR [rbp-0x38]
  40b916:	mov    ecx,0x7
  40b91b:	mov    rdi,rax
  40b91e:	call   406d3f <_start@@Base+0xaaf>
  40b923:	mov    QWORD PTR [rbp-0x40],rax
  40b927:	mov    rax,QWORD PTR [rbp-0x18]
  40b92b:	cmp    rax,QWORD PTR [rbp-0x40]
  40b92f:	je     40ba15 <_start@@Base+0x5785>
  40b935:	mov    QWORD PTR [rbp-0x28],0x0
  40b93d:	mov    rax,QWORD PTR [rbp-0x40]
  40b941:	mov    QWORD PTR [rbp-0x18],rax
  40b945:	lea    rcx,[rbp-0x28]
  40b949:	mov    rdx,QWORD PTR [rbp-0x48]
  40b94d:	mov    rsi,QWORD PTR [rbp-0x18]
  40b951:	mov    rax,QWORD PTR [rbp-0x38]
  40b955:	mov    rdi,rax
  40b958:	call   4076e9 <_start@@Base+0x1459>
  40b95d:	mov    QWORD PTR [rbp-0x40],rax
  40b961:	mov    rax,QWORD PTR [rbp-0x18]
  40b965:	cmp    rax,QWORD PTR [rbp-0x40]
  40b969:	jne    40b9b5 <_start@@Base+0x5725>
  40b96b:	mov    rax,QWORD PTR [rbp-0x40]
  40b96f:	mov    QWORD PTR [rbp-0x18],rax
  40b973:	lea    rcx,[rbp-0x28]
  40b977:	mov    rdx,QWORD PTR [rbp-0x48]
  40b97b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b97f:	mov    rax,QWORD PTR [rbp-0x38]
  40b983:	mov    r8,rcx
  40b986:	lea    rcx,[rip+0x39813]        # 4451a0 <__data_start@@Base+0xe0>
  40b98d:	mov    rdi,rax
  40b990:	call   408061 <_start@@Base+0x1dd1>
  40b995:	mov    QWORD PTR [rbp-0x40],rax
  40b999:	mov    rax,QWORD PTR [rbp-0x40]
  40b99d:	cmp    rax,QWORD PTR [rbp-0x18]
  40b9a1:	je     40c032 <_start@@Base+0x5da2>
  40b9a7:	mov    rax,QWORD PTR [rbp-0x40]
  40b9ab:	cmp    rax,QWORD PTR [rbp-0x48]
  40b9af:	je     40c032 <_start@@Base+0x5da2>
  40b9b5:	mov    rax,QWORD PTR [rbp-0x28]
  40b9b9:	test   rax,rax
  40b9bc:	jne    40b9d0 <_start@@Base+0x5740>
  40b9be:	mov    rax,QWORD PTR [rbp-0x38]
  40b9c2:	mov    eax,DWORD PTR [rax+0x10]
  40b9c5:	and    eax,0x2
  40b9c8:	test   eax,eax
  40b9ca:	je     40bfd3 <_start@@Base+0x5d43>
  40b9d0:	mov    rax,QWORD PTR [rbp-0x38]
  40b9d4:	mov    rax,QWORD PTR [rax]
  40b9d7:	mov    ecx,0x8
  40b9dc:	mov    edx,0x8
  40b9e1:	mov    esi,0x2
  40b9e6:	mov    rdi,rax
  40b9e9:	call   4203e3 <flatcc_builder_table_add@@Base>
  40b9ee:	mov    QWORD PTR [rbp-0x10],rax
  40b9f2:	cmp    QWORD PTR [rbp-0x10],0x0
  40b9f7:	je     40c035 <_start@@Base+0x5da5>
  40b9fd:	mov    rdx,QWORD PTR [rbp-0x28]
  40ba01:	mov    rax,QWORD PTR [rbp-0x10]
  40ba05:	mov    rsi,rdx
  40ba08:	mov    rdi,rax
  40ba0b:	call   4064f5 <_start@@Base+0x265>
  40ba10:	jmp    40bfd3 <_start@@Base+0x5d43>
  40ba15:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba19:	mov    rcx,QWORD PTR [rbp-0x40]
  40ba1d:	mov    rax,QWORD PTR [rbp-0x38]
  40ba21:	mov    rsi,rcx
  40ba24:	mov    rdi,rax
  40ba27:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ba2c:	mov    QWORD PTR [rbp-0x40],rax
  40ba30:	jmp    40bfd3 <_start@@Base+0x5d43>
  40ba35:	mov    rax,QWORD PTR [rbp-0x20]
  40ba39:	mov    ax,0x0
  40ba3d:	mov    rdx,rax
  40ba40:	movabs rax,0x696e6376616c0000
  40ba4a:	cmp    rdx,rax
  40ba4d:	jne    40bb86 <_start@@Base+0x58f6>
  40ba53:	mov    rax,QWORD PTR [rbp-0x40]
  40ba57:	mov    QWORD PTR [rbp-0x18],rax
  40ba5b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba5f:	mov    rsi,QWORD PTR [rbp-0x18]
  40ba63:	mov    rax,QWORD PTR [rbp-0x38]
  40ba67:	mov    ecx,0x6
  40ba6c:	mov    rdi,rax
  40ba6f:	call   406d3f <_start@@Base+0xaaf>
  40ba74:	mov    QWORD PTR [rbp-0x40],rax
  40ba78:	mov    rax,QWORD PTR [rbp-0x18]
  40ba7c:	cmp    rax,QWORD PTR [rbp-0x40]
  40ba80:	je     40bb66 <_start@@Base+0x58d6>
  40ba86:	mov    QWORD PTR [rbp-0x28],0x0
  40ba8e:	mov    rax,QWORD PTR [rbp-0x40]
  40ba92:	mov    QWORD PTR [rbp-0x18],rax
  40ba96:	lea    rcx,[rbp-0x28]
  40ba9a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba9e:	mov    rsi,QWORD PTR [rbp-0x18]
  40baa2:	mov    rax,QWORD PTR [rbp-0x38]
  40baa6:	mov    rdi,rax
  40baa9:	call   4076e9 <_start@@Base+0x1459>
  40baae:	mov    QWORD PTR [rbp-0x40],rax
  40bab2:	mov    rax,QWORD PTR [rbp-0x18]
  40bab6:	cmp    rax,QWORD PTR [rbp-0x40]
  40baba:	jne    40bb06 <_start@@Base+0x5876>
  40babc:	mov    rax,QWORD PTR [rbp-0x40]
  40bac0:	mov    QWORD PTR [rbp-0x18],rax
  40bac4:	lea    rcx,[rbp-0x28]
  40bac8:	mov    rdx,QWORD PTR [rbp-0x48]
  40bacc:	mov    rsi,QWORD PTR [rbp-0x18]
  40bad0:	mov    rax,QWORD PTR [rbp-0x38]
  40bad4:	mov    r8,rcx
  40bad7:	lea    rcx,[rip+0x396e2]        # 4451c0 <__data_start@@Base+0x100>
  40bade:	mov    rdi,rax
  40bae1:	call   408061 <_start@@Base+0x1dd1>
  40bae6:	mov    QWORD PTR [rbp-0x40],rax
  40baea:	mov    rax,QWORD PTR [rbp-0x40]
  40baee:	cmp    rax,QWORD PTR [rbp-0x18]
  40baf2:	je     40c038 <_start@@Base+0x5da8>
  40baf8:	mov    rax,QWORD PTR [rbp-0x40]
  40bafc:	cmp    rax,QWORD PTR [rbp-0x48]
  40bb00:	je     40c038 <_start@@Base+0x5da8>
  40bb06:	mov    rax,QWORD PTR [rbp-0x28]
  40bb0a:	test   rax,rax
  40bb0d:	jne    40bb21 <_start@@Base+0x5891>
  40bb0f:	mov    rax,QWORD PTR [rbp-0x38]
  40bb13:	mov    eax,DWORD PTR [rax+0x10]
  40bb16:	and    eax,0x2
  40bb19:	test   eax,eax
  40bb1b:	je     40bfd3 <_start@@Base+0x5d43>
  40bb21:	mov    rax,QWORD PTR [rbp-0x38]
  40bb25:	mov    rax,QWORD PTR [rax]
  40bb28:	mov    ecx,0x8
  40bb2d:	mov    edx,0x8
  40bb32:	mov    esi,0x1
  40bb37:	mov    rdi,rax
  40bb3a:	call   4203e3 <flatcc_builder_table_add@@Base>
  40bb3f:	mov    QWORD PTR [rbp-0x10],rax
  40bb43:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb48:	je     40c03b <_start@@Base+0x5dab>
  40bb4e:	mov    rdx,QWORD PTR [rbp-0x28]
  40bb52:	mov    rax,QWORD PTR [rbp-0x10]
  40bb56:	mov    rsi,rdx
  40bb59:	mov    rdi,rax
  40bb5c:	call   4064f5 <_start@@Base+0x265>
  40bb61:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bb66:	mov    rdx,QWORD PTR [rbp-0x48]
  40bb6a:	mov    rcx,QWORD PTR [rbp-0x40]
  40bb6e:	mov    rax,QWORD PTR [rbp-0x38]
  40bb72:	mov    rsi,rcx
  40bb75:	mov    rdi,rax
  40bb78:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bb7d:	mov    QWORD PTR [rbp-0x40],rax
  40bb81:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bb86:	mov    rdx,QWORD PTR [rbp-0x48]
  40bb8a:	mov    rcx,QWORD PTR [rbp-0x40]
  40bb8e:	mov    rax,QWORD PTR [rbp-0x38]
  40bb92:	mov    rsi,rcx
  40bb95:	mov    rdi,rax
  40bb98:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bb9d:	mov    QWORD PTR [rbp-0x40],rax
  40bba1:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bba6:	movabs rax,0x696e6376616c33ff
  40bbb0:	cmp    QWORD PTR [rbp-0x20],rax
  40bbb4:	ja     40bd24 <_start@@Base+0x5a94>
  40bbba:	mov    rax,QWORD PTR [rbp-0x20]
  40bbbe:	mov    al,0x0
  40bbc0:	mov    rdx,rax
  40bbc3:	movabs rax,0x696e6376616c3300
  40bbcd:	cmp    rdx,rax
  40bbd0:	jne    40bd04 <_start@@Base+0x5a74>
  40bbd6:	mov    rax,QWORD PTR [rbp-0x40]
  40bbda:	mov    QWORD PTR [rbp-0x18],rax
  40bbde:	mov    rdx,QWORD PTR [rbp-0x48]
  40bbe2:	mov    rsi,QWORD PTR [rbp-0x18]
  40bbe6:	mov    rax,QWORD PTR [rbp-0x38]
  40bbea:	mov    ecx,0x7
  40bbef:	mov    rdi,rax
  40bbf2:	call   406d3f <_start@@Base+0xaaf>
  40bbf7:	mov    QWORD PTR [rbp-0x40],rax
  40bbfb:	mov    rax,QWORD PTR [rbp-0x18]
  40bbff:	cmp    rax,QWORD PTR [rbp-0x40]
  40bc03:	je     40bce4 <_start@@Base+0x5a54>
  40bc09:	mov    DWORD PTR [rbp-0x28],0x0
  40bc10:	mov    rax,QWORD PTR [rbp-0x40]
  40bc14:	mov    QWORD PTR [rbp-0x18],rax
  40bc18:	lea    rcx,[rbp-0x28]
  40bc1c:	mov    rdx,QWORD PTR [rbp-0x48]
  40bc20:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc24:	mov    rax,QWORD PTR [rbp-0x38]
  40bc28:	mov    rdi,rax
  40bc2b:	call   4077b0 <_start@@Base+0x1520>
  40bc30:	mov    QWORD PTR [rbp-0x40],rax
  40bc34:	mov    rax,QWORD PTR [rbp-0x18]
  40bc38:	cmp    rax,QWORD PTR [rbp-0x40]
  40bc3c:	jne    40bc88 <_start@@Base+0x59f8>
  40bc3e:	mov    rax,QWORD PTR [rbp-0x40]
  40bc42:	mov    QWORD PTR [rbp-0x18],rax
  40bc46:	lea    rcx,[rbp-0x28]
  40bc4a:	mov    rdx,QWORD PTR [rbp-0x48]
  40bc4e:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc52:	mov    rax,QWORD PTR [rbp-0x38]
  40bc56:	mov    r8,rcx
  40bc59:	lea    rcx,[rip+0x39580]        # 4451e0 <__data_start@@Base+0x120>
  40bc60:	mov    rdi,rax
  40bc63:	call   4081c4 <_start@@Base+0x1f34>
  40bc68:	mov    QWORD PTR [rbp-0x40],rax
  40bc6c:	mov    rax,QWORD PTR [rbp-0x40]
  40bc70:	cmp    rax,QWORD PTR [rbp-0x18]
  40bc74:	je     40c03e <_start@@Base+0x5dae>
  40bc7a:	mov    rax,QWORD PTR [rbp-0x40]
  40bc7e:	cmp    rax,QWORD PTR [rbp-0x48]
  40bc82:	je     40c03e <_start@@Base+0x5dae>
  40bc88:	mov    eax,DWORD PTR [rbp-0x28]
  40bc8b:	test   eax,eax
  40bc8d:	jne    40bca1 <_start@@Base+0x5a11>
  40bc8f:	mov    rax,QWORD PTR [rbp-0x38]
  40bc93:	mov    eax,DWORD PTR [rax+0x10]
  40bc96:	and    eax,0x2
  40bc99:	test   eax,eax
  40bc9b:	je     40bfd3 <_start@@Base+0x5d43>
  40bca1:	mov    rax,QWORD PTR [rbp-0x38]
  40bca5:	mov    rax,QWORD PTR [rax]
  40bca8:	mov    ecx,0x4
  40bcad:	mov    edx,0x4
  40bcb2:	mov    esi,0x3
  40bcb7:	mov    rdi,rax
  40bcba:	call   4203e3 <flatcc_builder_table_add@@Base>
  40bcbf:	mov    QWORD PTR [rbp-0x10],rax
  40bcc3:	cmp    QWORD PTR [rbp-0x10],0x0
  40bcc8:	je     40c041 <_start@@Base+0x5db1>
  40bcce:	mov    edx,DWORD PTR [rbp-0x28]
  40bcd1:	mov    rax,QWORD PTR [rbp-0x10]
  40bcd5:	mov    esi,edx
  40bcd7:	mov    rdi,rax
  40bcda:	call   4064c3 <_start@@Base+0x233>
  40bcdf:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bce4:	mov    rdx,QWORD PTR [rbp-0x48]
  40bce8:	mov    rcx,QWORD PTR [rbp-0x40]
  40bcec:	mov    rax,QWORD PTR [rbp-0x38]
  40bcf0:	mov    rsi,rcx
  40bcf3:	mov    rdi,rax
  40bcf6:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bcfb:	mov    QWORD PTR [rbp-0x40],rax
  40bcff:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bd04:	mov    rdx,QWORD PTR [rbp-0x48]
  40bd08:	mov    rcx,QWORD PTR [rbp-0x40]
  40bd0c:	mov    rax,QWORD PTR [rbp-0x38]
  40bd10:	mov    rsi,rcx
  40bd13:	mov    rdi,rax
  40bd16:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bd1b:	mov    QWORD PTR [rbp-0x40],rax
  40bd1f:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bd24:	mov    rax,QWORD PTR [rbp-0x20]
  40bd28:	mov    al,0x0
  40bd2a:	mov    rdx,rax
  40bd2d:	movabs rax,0x696e6376616c3500
  40bd37:	cmp    rdx,rax
  40bd3a:	jne    40be73 <_start@@Base+0x5be3>
  40bd40:	mov    rax,QWORD PTR [rbp-0x40]
  40bd44:	mov    QWORD PTR [rbp-0x18],rax
  40bd48:	mov    rdx,QWORD PTR [rbp-0x48]
  40bd4c:	mov    rsi,QWORD PTR [rbp-0x18]
  40bd50:	mov    rax,QWORD PTR [rbp-0x38]
  40bd54:	mov    ecx,0x7
  40bd59:	mov    rdi,rax
  40bd5c:	call   406d3f <_start@@Base+0xaaf>
  40bd61:	mov    QWORD PTR [rbp-0x40],rax
  40bd65:	mov    rax,QWORD PTR [rbp-0x18]
  40bd69:	cmp    rax,QWORD PTR [rbp-0x40]
  40bd6d:	je     40be53 <_start@@Base+0x5bc3>
  40bd73:	mov    QWORD PTR [rbp-0x28],0x0
  40bd7b:	mov    rax,QWORD PTR [rbp-0x40]
  40bd7f:	mov    QWORD PTR [rbp-0x18],rax
  40bd83:	lea    rcx,[rbp-0x28]
  40bd87:	mov    rdx,QWORD PTR [rbp-0x48]
  40bd8b:	mov    rsi,QWORD PTR [rbp-0x18]
  40bd8f:	mov    rax,QWORD PTR [rbp-0x38]
  40bd93:	mov    rdi,rax
  40bd96:	call   4076e9 <_start@@Base+0x1459>
  40bd9b:	mov    QWORD PTR [rbp-0x40],rax
  40bd9f:	mov    rax,QWORD PTR [rbp-0x18]
  40bda3:	cmp    rax,QWORD PTR [rbp-0x40]
  40bda7:	jne    40bdf3 <_start@@Base+0x5b63>
  40bda9:	mov    rax,QWORD PTR [rbp-0x40]
  40bdad:	mov    QWORD PTR [rbp-0x18],rax
  40bdb1:	lea    rcx,[rbp-0x28]
  40bdb5:	mov    rdx,QWORD PTR [rbp-0x48]
  40bdb9:	mov    rsi,QWORD PTR [rbp-0x18]
  40bdbd:	mov    rax,QWORD PTR [rbp-0x38]
  40bdc1:	mov    r8,rcx
  40bdc4:	lea    rcx,[rip+0x39435]        # 445200 <__data_start@@Base+0x140>
  40bdcb:	mov    rdi,rax
  40bdce:	call   408061 <_start@@Base+0x1dd1>
  40bdd3:	mov    QWORD PTR [rbp-0x40],rax
  40bdd7:	mov    rax,QWORD PTR [rbp-0x40]
  40bddb:	cmp    rax,QWORD PTR [rbp-0x18]
  40bddf:	je     40c044 <_start@@Base+0x5db4>
  40bde5:	mov    rax,QWORD PTR [rbp-0x40]
  40bde9:	cmp    rax,QWORD PTR [rbp-0x48]
  40bded:	je     40c044 <_start@@Base+0x5db4>
  40bdf3:	mov    rax,QWORD PTR [rbp-0x28]
  40bdf7:	test   rax,rax
  40bdfa:	jne    40be0e <_start@@Base+0x5b7e>
  40bdfc:	mov    rax,QWORD PTR [rbp-0x38]
  40be00:	mov    eax,DWORD PTR [rax+0x10]
  40be03:	and    eax,0x2
  40be06:	test   eax,eax
  40be08:	je     40bfd3 <_start@@Base+0x5d43>
  40be0e:	mov    rax,QWORD PTR [rbp-0x38]
  40be12:	mov    rax,QWORD PTR [rax]
  40be15:	mov    ecx,0x8
  40be1a:	mov    edx,0x8
  40be1f:	mov    esi,0x5
  40be24:	mov    rdi,rax
  40be27:	call   4203e3 <flatcc_builder_table_add@@Base>
  40be2c:	mov    QWORD PTR [rbp-0x10],rax
  40be30:	cmp    QWORD PTR [rbp-0x10],0x0
  40be35:	je     40c047 <_start@@Base+0x5db7>
  40be3b:	mov    rdx,QWORD PTR [rbp-0x28]
  40be3f:	mov    rax,QWORD PTR [rbp-0x10]
  40be43:	mov    rsi,rdx
  40be46:	mov    rdi,rax
  40be49:	call   4064f5 <_start@@Base+0x265>
  40be4e:	jmp    40bfd3 <_start@@Base+0x5d43>
  40be53:	mov    rdx,QWORD PTR [rbp-0x48]
  40be57:	mov    rcx,QWORD PTR [rbp-0x40]
  40be5b:	mov    rax,QWORD PTR [rbp-0x38]
  40be5f:	mov    rsi,rcx
  40be62:	mov    rdi,rax
  40be65:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40be6a:	mov    QWORD PTR [rbp-0x40],rax
  40be6e:	jmp    40bfd3 <_start@@Base+0x5d43>
  40be73:	mov    rax,QWORD PTR [rbp-0x20]
  40be77:	mov    al,0x0
  40be79:	mov    rdx,rax
  40be7c:	movabs rax,0x696e6376616c3400
  40be86:	cmp    rdx,rax
  40be89:	jne    40bfb8 <_start@@Base+0x5d28>
  40be8f:	mov    rax,QWORD PTR [rbp-0x40]
  40be93:	mov    QWORD PTR [rbp-0x18],rax
  40be97:	mov    rdx,QWORD PTR [rbp-0x48]
  40be9b:	mov    rsi,QWORD PTR [rbp-0x18]
  40be9f:	mov    rax,QWORD PTR [rbp-0x38]
  40bea3:	mov    ecx,0x7
  40bea8:	mov    rdi,rax
  40beab:	call   406d3f <_start@@Base+0xaaf>
  40beb0:	mov    QWORD PTR [rbp-0x40],rax
  40beb4:	mov    rax,QWORD PTR [rbp-0x18]
  40beb8:	cmp    rax,QWORD PTR [rbp-0x40]
  40bebc:	je     40bf9b <_start@@Base+0x5d0b>
  40bec2:	mov    QWORD PTR [rbp-0x28],0x0
  40beca:	mov    rax,QWORD PTR [rbp-0x40]
  40bece:	mov    QWORD PTR [rbp-0x18],rax
  40bed2:	lea    rcx,[rbp-0x28]
  40bed6:	mov    rdx,QWORD PTR [rbp-0x48]
  40beda:	mov    rsi,QWORD PTR [rbp-0x18]
  40bede:	mov    rax,QWORD PTR [rbp-0x38]
  40bee2:	mov    rdi,rax
  40bee5:	call   4076e9 <_start@@Base+0x1459>
  40beea:	mov    QWORD PTR [rbp-0x40],rax
  40beee:	mov    rax,QWORD PTR [rbp-0x18]
  40bef2:	cmp    rax,QWORD PTR [rbp-0x40]
  40bef6:	jne    40bf42 <_start@@Base+0x5cb2>
  40bef8:	mov    rax,QWORD PTR [rbp-0x40]
  40befc:	mov    QWORD PTR [rbp-0x18],rax
  40bf00:	lea    rcx,[rbp-0x28]
  40bf04:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf08:	mov    rsi,QWORD PTR [rbp-0x18]
  40bf0c:	mov    rax,QWORD PTR [rbp-0x38]
  40bf10:	mov    r8,rcx
  40bf13:	lea    rcx,[rip+0x39306]        # 445220 <__data_start@@Base+0x160>
  40bf1a:	mov    rdi,rax
  40bf1d:	call   408061 <_start@@Base+0x1dd1>
  40bf22:	mov    QWORD PTR [rbp-0x40],rax
  40bf26:	mov    rax,QWORD PTR [rbp-0x40]
  40bf2a:	cmp    rax,QWORD PTR [rbp-0x18]
  40bf2e:	je     40c04a <_start@@Base+0x5dba>
  40bf34:	mov    rax,QWORD PTR [rbp-0x40]
  40bf38:	cmp    rax,QWORD PTR [rbp-0x48]
  40bf3c:	je     40c04a <_start@@Base+0x5dba>
  40bf42:	mov    rax,QWORD PTR [rbp-0x28]
  40bf46:	test   rax,rax
  40bf49:	jne    40bf59 <_start@@Base+0x5cc9>
  40bf4b:	mov    rax,QWORD PTR [rbp-0x38]
  40bf4f:	mov    eax,DWORD PTR [rax+0x10]
  40bf52:	and    eax,0x2
  40bf55:	test   eax,eax
  40bf57:	je     40bfd3 <_start@@Base+0x5d43>
  40bf59:	mov    rax,QWORD PTR [rbp-0x38]
  40bf5d:	mov    rax,QWORD PTR [rax]
  40bf60:	mov    ecx,0x8
  40bf65:	mov    edx,0x8
  40bf6a:	mov    esi,0x4
  40bf6f:	mov    rdi,rax
  40bf72:	call   4203e3 <flatcc_builder_table_add@@Base>
  40bf77:	mov    QWORD PTR [rbp-0x10],rax
  40bf7b:	cmp    QWORD PTR [rbp-0x10],0x0
  40bf80:	je     40c04d <_start@@Base+0x5dbd>
  40bf86:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf8a:	mov    rax,QWORD PTR [rbp-0x10]
  40bf8e:	mov    rsi,rdx
  40bf91:	mov    rdi,rax
  40bf94:	call   4064f5 <_start@@Base+0x265>
  40bf99:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bf9b:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf9f:	mov    rcx,QWORD PTR [rbp-0x40]
  40bfa3:	mov    rax,QWORD PTR [rbp-0x38]
  40bfa7:	mov    rsi,rcx
  40bfaa:	mov    rdi,rax
  40bfad:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bfb2:	mov    QWORD PTR [rbp-0x40],rax
  40bfb6:	jmp    40bfd3 <_start@@Base+0x5d43>
  40bfb8:	mov    rdx,QWORD PTR [rbp-0x48]
  40bfbc:	mov    rcx,QWORD PTR [rbp-0x40]
  40bfc0:	mov    rax,QWORD PTR [rbp-0x38]
  40bfc4:	mov    rsi,rcx
  40bfc7:	mov    rdi,rax
  40bfca:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40bfcf:	mov    QWORD PTR [rbp-0x40],rax
  40bfd3:	lea    rcx,[rbp-0x2c]
  40bfd7:	mov    rdx,QWORD PTR [rbp-0x48]
  40bfdb:	mov    rsi,QWORD PTR [rbp-0x40]
  40bfdf:	mov    rax,QWORD PTR [rbp-0x38]
  40bfe3:	mov    rdi,rax
  40bfe6:	call   406a06 <_start@@Base+0x776>
  40bfeb:	mov    QWORD PTR [rbp-0x40],rax
  40bfef:	mov    eax,DWORD PTR [rbp-0x2c]
  40bff2:	test   eax,eax
  40bff4:	jne    40b7b1 <_start@@Base+0x5521>
  40bffa:	mov    rax,QWORD PTR [rbp-0x38]
  40bffe:	mov    eax,DWORD PTR [rax+0x1c]
  40c001:	test   eax,eax
  40c003:	jne    40c050 <_start@@Base+0x5dc0>
  40c005:	mov    rax,QWORD PTR [rbp-0x38]
  40c009:	mov    rax,QWORD PTR [rax]
  40c00c:	mov    rdi,rax
  40c00f:	call   41ed42 <flatcc_builder_end_table@@Base>
  40c014:	mov    edx,eax
  40c016:	mov    rax,QWORD PTR [rbp-0x50]
  40c01a:	mov    DWORD PTR [rax],edx
  40c01c:	mov    rax,QWORD PTR [rbp-0x50]
  40c020:	mov    eax,DWORD PTR [rax]
  40c022:	test   eax,eax
  40c024:	je     40c053 <_start@@Base+0x5dc3>
  40c026:	mov    rax,QWORD PTR [rbp-0x40]
  40c02a:	jmp    40c06d <_start@@Base+0x5ddd>
  40c02c:	nop
  40c02d:	jmp    40c054 <_start@@Base+0x5dc4>
  40c02f:	nop
  40c030:	jmp    40c054 <_start@@Base+0x5dc4>
  40c032:	nop
  40c033:	jmp    40c054 <_start@@Base+0x5dc4>
  40c035:	nop
  40c036:	jmp    40c054 <_start@@Base+0x5dc4>
  40c038:	nop
  40c039:	jmp    40c054 <_start@@Base+0x5dc4>
  40c03b:	nop
  40c03c:	jmp    40c054 <_start@@Base+0x5dc4>
  40c03e:	nop
  40c03f:	jmp    40c054 <_start@@Base+0x5dc4>
  40c041:	nop
  40c042:	jmp    40c054 <_start@@Base+0x5dc4>
  40c044:	nop
  40c045:	jmp    40c054 <_start@@Base+0x5dc4>
  40c047:	nop
  40c048:	jmp    40c054 <_start@@Base+0x5dc4>
  40c04a:	nop
  40c04b:	jmp    40c054 <_start@@Base+0x5dc4>
  40c04d:	nop
  40c04e:	jmp    40c054 <_start@@Base+0x5dc4>
  40c050:	nop
  40c051:	jmp    40c054 <_start@@Base+0x5dc4>
  40c053:	nop
  40c054:	mov    rdx,QWORD PTR [rbp-0x48]
  40c058:	mov    rsi,QWORD PTR [rbp-0x40]
  40c05c:	mov    rax,QWORD PTR [rbp-0x38]
  40c060:	mov    ecx,0x21
  40c065:	mov    rdi,rax
  40c068:	call   427257 <flatcc_json_parser_set_error@@Base>
  40c06d:	mov    rdi,QWORD PTR [rbp-0x8]
  40c071:	xor    rdi,QWORD PTR fs:0x28
  40c07a:	je     40c081 <_start@@Base+0x5df1>
  40c07c:	call   4061a0 <__stack_chk_fail@plt>
  40c081:	leave  
  40c082:	ret    
  40c083:	endbr64 
  40c087:	push   rbp
  40c088:	mov    rbp,rsp
  40c08b:	sub    rsp,0x50
  40c08f:	mov    QWORD PTR [rbp-0x38],rdi
  40c093:	mov    QWORD PTR [rbp-0x40],rsi
  40c097:	mov    QWORD PTR [rbp-0x48],rdx
  40c09b:	mov    QWORD PTR [rbp-0x50],rcx
  40c09f:	mov    rax,QWORD PTR fs:0x28
  40c0a8:	mov    QWORD PTR [rbp-0x8],rax
  40c0ac:	xor    eax,eax
  40c0ae:	lea    rcx,[rbp-0x2c]
  40c0b2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0b6:	mov    rsi,QWORD PTR [rbp-0x40]
  40c0ba:	mov    rax,QWORD PTR [rbp-0x38]
  40c0be:	mov    rdi,rax
  40c0c1:	call   406949 <_start@@Base+0x6b9>
  40c0c6:	mov    QWORD PTR [rbp-0x40],rax
  40c0ca:	jmp    40c7e5 <_start@@Base+0x6555>
  40c0cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0d3:	mov    rcx,QWORD PTR [rbp-0x40]
  40c0d7:	mov    rax,QWORD PTR [rbp-0x38]
  40c0db:	mov    rsi,rcx
  40c0de:	mov    rdi,rax
  40c0e1:	call   4066e9 <_start@@Base+0x459>
  40c0e6:	mov    QWORD PTR [rbp-0x40],rax
  40c0ea:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0ee:	mov    rax,QWORD PTR [rbp-0x40]
  40c0f2:	mov    rsi,rdx
  40c0f5:	mov    rdi,rax
  40c0f8:	call   406853 <_start@@Base+0x5c3>
  40c0fd:	mov    QWORD PTR [rbp-0x20],rax
  40c101:	movabs rax,0x7465737432ffffff
  40c10b:	cmp    QWORD PTR [rbp-0x20],rax
  40c10f:	ja     40c364 <_start@@Base+0x60d4>
  40c115:	mov    rax,QWORD PTR [rbp-0x20]
  40c119:	and    rax,0xffffffffff000000
  40c11f:	mov    rdx,rax
  40c122:	movabs rax,0x7465737432000000
  40c12c:	cmp    rdx,rax
  40c12f:	jne    40c22a <_start@@Base+0x5f9a>
  40c135:	mov    rax,QWORD PTR [rbp-0x40]
  40c139:	mov    QWORD PTR [rbp-0x18],rax
  40c13d:	mov    rdx,QWORD PTR [rbp-0x48]
  40c141:	mov    rsi,QWORD PTR [rbp-0x18]
  40c145:	mov    rax,QWORD PTR [rbp-0x38]
  40c149:	mov    ecx,0x5
  40c14e:	mov    rdi,rax
  40c151:	call   406d3f <_start@@Base+0xaaf>
  40c156:	mov    QWORD PTR [rbp-0x40],rax
  40c15a:	mov    rax,QWORD PTR [rbp-0x18]
  40c15e:	cmp    rax,QWORD PTR [rbp-0x40]
  40c162:	je     40c20a <_start@@Base+0x5f7a>
  40c168:	mov    BYTE PTR [rbp-0x28],0x0
  40c16c:	mov    rax,QWORD PTR [rbp-0x50]
  40c170:	add    rax,0x18
  40c174:	mov    QWORD PTR [rbp-0x10],rax
  40c178:	mov    rax,QWORD PTR [rbp-0x40]
  40c17c:	mov    QWORD PTR [rbp-0x18],rax
  40c180:	lea    rcx,[rbp-0x28]
  40c184:	mov    rdx,QWORD PTR [rbp-0x48]
  40c188:	mov    rsi,QWORD PTR [rbp-0x18]
  40c18c:	mov    rax,QWORD PTR [rbp-0x38]
  40c190:	mov    rdi,rax
  40c193:	call   40793b <_start@@Base+0x16ab>
  40c198:	mov    QWORD PTR [rbp-0x40],rax
  40c19c:	mov    rax,QWORD PTR [rbp-0x18]
  40c1a0:	cmp    rax,QWORD PTR [rbp-0x40]
  40c1a4:	jne    40c1f0 <_start@@Base+0x5f60>
  40c1a6:	mov    rax,QWORD PTR [rbp-0x40]
  40c1aa:	mov    QWORD PTR [rbp-0x18],rax
  40c1ae:	lea    rcx,[rbp-0x28]
  40c1b2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1b6:	mov    rsi,QWORD PTR [rbp-0x18]
  40c1ba:	mov    rax,QWORD PTR [rbp-0x38]
  40c1be:	mov    r8,rcx
  40c1c1:	lea    rcx,[rip+0x39078]        # 445240 <__data_start@@Base+0x180>
  40c1c8:	mov    rdi,rax
  40c1cb:	call   408483 <_start@@Base+0x21f3>
  40c1d0:	mov    QWORD PTR [rbp-0x40],rax
  40c1d4:	mov    rax,QWORD PTR [rbp-0x40]
  40c1d8:	cmp    rax,QWORD PTR [rbp-0x18]
  40c1dc:	je     40c7f6 <_start@@Base+0x6566>
  40c1e2:	mov    rax,QWORD PTR [rbp-0x40]
  40c1e6:	cmp    rax,QWORD PTR [rbp-0x48]
  40c1ea:	je     40c7f6 <_start@@Base+0x6566>
  40c1f0:	movzx  eax,BYTE PTR [rbp-0x28]
  40c1f4:	movsx  edx,al
  40c1f7:	mov    rax,QWORD PTR [rbp-0x10]
  40c1fb:	mov    esi,edx
  40c1fd:	mov    rdi,rax
  40c200:	call   406459 <_start@@Base+0x1c9>
  40c205:	jmp    40c7c9 <_start@@Base+0x6539>
  40c20a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c20e:	mov    rcx,QWORD PTR [rbp-0x40]
  40c212:	mov    rax,QWORD PTR [rbp-0x38]
  40c216:	mov    rsi,rcx
  40c219:	mov    rdi,rax
  40c21c:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c221:	mov    QWORD PTR [rbp-0x40],rax
  40c225:	jmp    40c7c9 <_start@@Base+0x6539>
  40c22a:	mov    rax,QWORD PTR [rbp-0x20]
  40c22e:	and    rax,0xffffffffff000000
  40c234:	mov    rdx,rax
  40c237:	movabs rax,0x7465737431000000
  40c241:	cmp    rdx,rax
  40c244:	jne    40c344 <_start@@Base+0x60b4>
  40c24a:	mov    rax,QWORD PTR [rbp-0x40]
  40c24e:	mov    QWORD PTR [rbp-0x18],rax
  40c252:	mov    rdx,QWORD PTR [rbp-0x48]
  40c256:	mov    rsi,QWORD PTR [rbp-0x18]
  40c25a:	mov    rax,QWORD PTR [rbp-0x38]
  40c25e:	mov    ecx,0x5
  40c263:	mov    rdi,rax
  40c266:	call   406d3f <_start@@Base+0xaaf>
  40c26b:	mov    QWORD PTR [rbp-0x40],rax
  40c26f:	mov    rax,QWORD PTR [rbp-0x18]
  40c273:	cmp    rax,QWORD PTR [rbp-0x40]
  40c277:	je     40c324 <_start@@Base+0x6094>
  40c27d:	vxorpd xmm0,xmm0,xmm0
  40c281:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40c286:	mov    rax,QWORD PTR [rbp-0x50]
  40c28a:	add    rax,0x10
  40c28e:	mov    QWORD PTR [rbp-0x10],rax
  40c292:	mov    rax,QWORD PTR [rbp-0x40]
  40c296:	mov    QWORD PTR [rbp-0x18],rax
  40c29a:	lea    rcx,[rbp-0x28]
  40c29e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2a2:	mov    rsi,QWORD PTR [rbp-0x18]
  40c2a6:	mov    rax,QWORD PTR [rbp-0x38]
  40c2aa:	mov    rdi,rax
  40c2ad:	call   427fd2 <flatcc_json_parser_double@@Base>
  40c2b2:	mov    QWORD PTR [rbp-0x40],rax
  40c2b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c2ba:	cmp    rax,QWORD PTR [rbp-0x40]
  40c2be:	jne    40c30a <_start@@Base+0x607a>
  40c2c0:	mov    rax,QWORD PTR [rbp-0x40]
  40c2c4:	mov    QWORD PTR [rbp-0x18],rax
  40c2c8:	lea    rcx,[rbp-0x28]
  40c2cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2d0:	mov    rsi,QWORD PTR [rbp-0x18]
  40c2d4:	mov    rax,QWORD PTR [rbp-0x38]
  40c2d8:	mov    r8,rcx
  40c2db:	lea    rcx,[rip+0x38f7e]        # 445260 <__data_start@@Base+0x1a0>
  40c2e2:	mov    rdi,rax
  40c2e5:	call   4088a2 <_start@@Base+0x2612>
  40c2ea:	mov    QWORD PTR [rbp-0x40],rax
  40c2ee:	mov    rax,QWORD PTR [rbp-0x40]
  40c2f2:	cmp    rax,QWORD PTR [rbp-0x18]
  40c2f6:	je     40c7f9 <_start@@Base+0x6569>
  40c2fc:	mov    rax,QWORD PTR [rbp-0x40]
  40c300:	cmp    rax,QWORD PTR [rbp-0x48]
  40c304:	je     40c7f9 <_start@@Base+0x6569>
  40c30a:	mov    rdx,QWORD PTR [rbp-0x28]
  40c30e:	mov    rax,QWORD PTR [rbp-0x10]
  40c312:	vmovq  xmm0,rdx
  40c317:	mov    rdi,rax
  40c31a:	call   406594 <_start@@Base+0x304>
  40c31f:	jmp    40c7c9 <_start@@Base+0x6539>
  40c324:	mov    rdx,QWORD PTR [rbp-0x48]
  40c328:	mov    rcx,QWORD PTR [rbp-0x40]
  40c32c:	mov    rax,QWORD PTR [rbp-0x38]
  40c330:	mov    rsi,rcx
  40c333:	mov    rdi,rax
  40c336:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c33b:	mov    QWORD PTR [rbp-0x40],rax
  40c33f:	jmp    40c7c9 <_start@@Base+0x6539>
  40c344:	mov    rdx,QWORD PTR [rbp-0x48]
  40c348:	mov    rcx,QWORD PTR [rbp-0x40]
  40c34c:	mov    rax,QWORD PTR [rbp-0x38]
  40c350:	mov    rsi,rcx
  40c353:	mov    rdi,rax
  40c356:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c35b:	mov    QWORD PTR [rbp-0x40],rax
  40c35f:	jmp    40c7c9 <_start@@Base+0x6539>
  40c364:	movabs rax,0x77ffffffffffffff
  40c36e:	cmp    QWORD PTR [rbp-0x20],rax
  40c372:	ja     40c430 <_start@@Base+0x61a0>
  40c378:	mov    rax,QWORD PTR [rbp-0x20]
  40c37c:	and    rax,0xffffffffff000000
  40c382:	mov    rdx,rax
  40c385:	movabs rax,0x7465737433000000
  40c38f:	cmp    rdx,rax
  40c392:	jne    40c410 <_start@@Base+0x6180>
  40c394:	mov    rax,QWORD PTR [rbp-0x40]
  40c398:	mov    QWORD PTR [rbp-0x18],rax
  40c39c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3a0:	mov    rsi,QWORD PTR [rbp-0x18]
  40c3a4:	mov    rax,QWORD PTR [rbp-0x38]
  40c3a8:	mov    ecx,0x5
  40c3ad:	mov    rdi,rax
  40c3b0:	call   406d3f <_start@@Base+0xaaf>
  40c3b5:	mov    QWORD PTR [rbp-0x40],rax
  40c3b9:	mov    rax,QWORD PTR [rbp-0x18]
  40c3bd:	cmp    rax,QWORD PTR [rbp-0x40]
  40c3c1:	je     40c3f0 <_start@@Base+0x6160>
  40c3c3:	mov    rax,QWORD PTR [rbp-0x50]
  40c3c7:	add    rax,0x1a
  40c3cb:	mov    QWORD PTR [rbp-0x10],rax
  40c3cf:	mov    rcx,QWORD PTR [rbp-0x10]
  40c3d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3d7:	mov    rsi,QWORD PTR [rbp-0x40]
  40c3db:	mov    rax,QWORD PTR [rbp-0x38]
  40c3df:	mov    rdi,rax
  40c3e2:	call   40a7af <_start@@Base+0x451f>
  40c3e7:	mov    QWORD PTR [rbp-0x40],rax
  40c3eb:	jmp    40c7c9 <_start@@Base+0x6539>
  40c3f0:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3f4:	mov    rcx,QWORD PTR [rbp-0x40]
  40c3f8:	mov    rax,QWORD PTR [rbp-0x38]
  40c3fc:	mov    rsi,rcx
  40c3ff:	mov    rdi,rax
  40c402:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c407:	mov    QWORD PTR [rbp-0x40],rax
  40c40b:	jmp    40c7c9 <_start@@Base+0x6539>
  40c410:	mov    rdx,QWORD PTR [rbp-0x48]
  40c414:	mov    rcx,QWORD PTR [rbp-0x40]
  40c418:	mov    rax,QWORD PTR [rbp-0x38]
  40c41c:	mov    rsi,rcx
  40c41f:	mov    rdi,rax
  40c422:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c427:	mov    QWORD PTR [rbp-0x40],rax
  40c42b:	jmp    40c7c9 <_start@@Base+0x6539>
  40c430:	movabs rax,0x78ffffffffffffff
  40c43a:	cmp    QWORD PTR [rbp-0x20],rax
  40c43e:	ja     40c57c <_start@@Base+0x62ec>
  40c444:	movabs rax,0xff00000000000000
  40c44e:	and    rax,QWORD PTR [rbp-0x20]
  40c452:	mov    rdx,rax
  40c455:	movabs rax,0x7800000000000000
  40c45f:	cmp    rdx,rax
  40c462:	jne    40c55c <_start@@Base+0x62cc>
  40c468:	mov    rax,QWORD PTR [rbp-0x40]
  40c46c:	mov    QWORD PTR [rbp-0x18],rax
  40c470:	mov    rdx,QWORD PTR [rbp-0x48]
  40c474:	mov    rsi,QWORD PTR [rbp-0x18]
  40c478:	mov    rax,QWORD PTR [rbp-0x38]
  40c47c:	mov    ecx,0x1
  40c481:	mov    rdi,rax
  40c484:	call   406d3f <_start@@Base+0xaaf>
  40c489:	mov    QWORD PTR [rbp-0x40],rax
  40c48d:	mov    rax,QWORD PTR [rbp-0x18]
  40c491:	cmp    rax,QWORD PTR [rbp-0x40]
  40c495:	je     40c53c <_start@@Base+0x62ac>
  40c49b:	vxorps xmm0,xmm0,xmm0
  40c49f:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c4a4:	mov    rax,QWORD PTR [rbp-0x50]
  40c4a8:	mov    QWORD PTR [rbp-0x10],rax
  40c4ac:	mov    rax,QWORD PTR [rbp-0x40]
  40c4b0:	mov    QWORD PTR [rbp-0x18],rax
  40c4b4:	lea    rcx,[rbp-0x28]
  40c4b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4bc:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4c0:	mov    rax,QWORD PTR [rbp-0x38]
  40c4c4:	mov    rdi,rax
  40c4c7:	call   428117 <flatcc_json_parser_float@@Base>
  40c4cc:	mov    QWORD PTR [rbp-0x40],rax
  40c4d0:	mov    rax,QWORD PTR [rbp-0x18]
  40c4d4:	cmp    rax,QWORD PTR [rbp-0x40]
  40c4d8:	jne    40c524 <_start@@Base+0x6294>
  40c4da:	mov    rax,QWORD PTR [rbp-0x40]
  40c4de:	mov    QWORD PTR [rbp-0x18],rax
  40c4e2:	lea    rcx,[rbp-0x28]
  40c4e6:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4ea:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4ee:	mov    rax,QWORD PTR [rbp-0x38]
  40c4f2:	mov    r8,rcx
  40c4f5:	lea    rcx,[rip+0x38d84]        # 445280 <__data_start@@Base+0x1c0>
  40c4fc:	mov    rdi,rax
  40c4ff:	call   408739 <_start@@Base+0x24a9>
  40c504:	mov    QWORD PTR [rbp-0x40],rax
  40c508:	mov    rax,QWORD PTR [rbp-0x40]
  40c50c:	cmp    rax,QWORD PTR [rbp-0x18]
  40c510:	je     40c7fc <_start@@Base+0x656c>
  40c516:	mov    rax,QWORD PTR [rbp-0x40]
  40c51a:	cmp    rax,QWORD PTR [rbp-0x48]
  40c51e:	je     40c7fc <_start@@Base+0x656c>
  40c524:	mov    edx,DWORD PTR [rbp-0x28]
  40c527:	mov    rax,QWORD PTR [rbp-0x10]
  40c52b:	vmovd  xmm0,edx
  40c52f:	mov    rdi,rax
  40c532:	call   40653e <_start@@Base+0x2ae>
  40c537:	jmp    40c7c9 <_start@@Base+0x6539>
  40c53c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c540:	mov    rcx,QWORD PTR [rbp-0x40]
  40c544:	mov    rax,QWORD PTR [rbp-0x38]
  40c548:	mov    rsi,rcx
  40c54b:	mov    rdi,rax
  40c54e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c553:	mov    QWORD PTR [rbp-0x40],rax
  40c557:	jmp    40c7c9 <_start@@Base+0x6539>
  40c55c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c560:	mov    rcx,QWORD PTR [rbp-0x40]
  40c564:	mov    rax,QWORD PTR [rbp-0x38]
  40c568:	mov    rsi,rcx
  40c56b:	mov    rdi,rax
  40c56e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c573:	mov    QWORD PTR [rbp-0x40],rax
  40c577:	jmp    40c7c9 <_start@@Base+0x6539>
  40c57c:	movabs rax,0xff00000000000000
  40c586:	and    rax,QWORD PTR [rbp-0x20]
  40c58a:	mov    rdx,rax
  40c58d:	movabs rax,0x7a00000000000000
  40c597:	cmp    rdx,rax
  40c59a:	jne    40c698 <_start@@Base+0x6408>
  40c5a0:	mov    rax,QWORD PTR [rbp-0x40]
  40c5a4:	mov    QWORD PTR [rbp-0x18],rax
  40c5a8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5ac:	mov    rsi,QWORD PTR [rbp-0x18]
  40c5b0:	mov    rax,QWORD PTR [rbp-0x38]
  40c5b4:	mov    ecx,0x1
  40c5b9:	mov    rdi,rax
  40c5bc:	call   406d3f <_start@@Base+0xaaf>
  40c5c1:	mov    QWORD PTR [rbp-0x40],rax
  40c5c5:	mov    rax,QWORD PTR [rbp-0x18]
  40c5c9:	cmp    rax,QWORD PTR [rbp-0x40]
  40c5cd:	je     40c678 <_start@@Base+0x63e8>
  40c5d3:	vxorps xmm0,xmm0,xmm0
  40c5d7:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c5dc:	mov    rax,QWORD PTR [rbp-0x50]
  40c5e0:	add    rax,0x8
  40c5e4:	mov    QWORD PTR [rbp-0x10],rax
  40c5e8:	mov    rax,QWORD PTR [rbp-0x40]
  40c5ec:	mov    QWORD PTR [rbp-0x18],rax
  40c5f0:	lea    rcx,[rbp-0x28]
  40c5f4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5f8:	mov    rsi,QWORD PTR [rbp-0x18]
  40c5fc:	mov    rax,QWORD PTR [rbp-0x38]
  40c600:	mov    rdi,rax
  40c603:	call   428117 <flatcc_json_parser_float@@Base>
  40c608:	mov    QWORD PTR [rbp-0x40],rax
  40c60c:	mov    rax,QWORD PTR [rbp-0x18]
  40c610:	cmp    rax,QWORD PTR [rbp-0x40]
  40c614:	jne    40c660 <_start@@Base+0x63d0>
  40c616:	mov    rax,QWORD PTR [rbp-0x40]
  40c61a:	mov    QWORD PTR [rbp-0x18],rax
  40c61e:	lea    rcx,[rbp-0x28]
  40c622:	mov    rdx,QWORD PTR [rbp-0x48]
  40c626:	mov    rsi,QWORD PTR [rbp-0x18]
  40c62a:	mov    rax,QWORD PTR [rbp-0x38]
  40c62e:	mov    r8,rcx
  40c631:	lea    rcx,[rip+0x38c68]        # 4452a0 <__data_start@@Base+0x1e0>
  40c638:	mov    rdi,rax
  40c63b:	call   408739 <_start@@Base+0x24a9>
  40c640:	mov    QWORD PTR [rbp-0x40],rax
  40c644:	mov    rax,QWORD PTR [rbp-0x40]
  40c648:	cmp    rax,QWORD PTR [rbp-0x18]
  40c64c:	je     40c7ff <_start@@Base+0x656f>
  40c652:	mov    rax,QWORD PTR [rbp-0x40]
  40c656:	cmp    rax,QWORD PTR [rbp-0x48]
  40c65a:	je     40c7ff <_start@@Base+0x656f>
  40c660:	mov    edx,DWORD PTR [rbp-0x28]
  40c663:	mov    rax,QWORD PTR [rbp-0x10]
  40c667:	vmovd  xmm0,edx
  40c66b:	mov    rdi,rax
  40c66e:	call   40653e <_start@@Base+0x2ae>
  40c673:	jmp    40c7c9 <_start@@Base+0x6539>
  40c678:	mov    rdx,QWORD PTR [rbp-0x48]
  40c67c:	mov    rcx,QWORD PTR [rbp-0x40]
  40c680:	mov    rax,QWORD PTR [rbp-0x38]
  40c684:	mov    rsi,rcx
  40c687:	mov    rdi,rax
  40c68a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c68f:	mov    QWORD PTR [rbp-0x40],rax
  40c693:	jmp    40c7c9 <_start@@Base+0x6539>
  40c698:	movabs rax,0xff00000000000000
  40c6a2:	and    rax,QWORD PTR [rbp-0x20]
  40c6a6:	mov    rdx,rax
  40c6a9:	movabs rax,0x7900000000000000
  40c6b3:	cmp    rdx,rax
  40c6b6:	jne    40c7ae <_start@@Base+0x651e>
  40c6bc:	mov    rax,QWORD PTR [rbp-0x40]
  40c6c0:	mov    QWORD PTR [rbp-0x18],rax
  40c6c4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6c8:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6cc:	mov    rax,QWORD PTR [rbp-0x38]
  40c6d0:	mov    ecx,0x1
  40c6d5:	mov    rdi,rax
  40c6d8:	call   406d3f <_start@@Base+0xaaf>
  40c6dd:	mov    QWORD PTR [rbp-0x40],rax
  40c6e1:	mov    rax,QWORD PTR [rbp-0x18]
  40c6e5:	cmp    rax,QWORD PTR [rbp-0x40]
  40c6e9:	je     40c791 <_start@@Base+0x6501>
  40c6ef:	vxorps xmm0,xmm0,xmm0
  40c6f3:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c6f8:	mov    rax,QWORD PTR [rbp-0x50]
  40c6fc:	add    rax,0x4
  40c700:	mov    QWORD PTR [rbp-0x10],rax
  40c704:	mov    rax,QWORD PTR [rbp-0x40]
  40c708:	mov    QWORD PTR [rbp-0x18],rax
  40c70c:	lea    rcx,[rbp-0x28]
  40c710:	mov    rdx,QWORD PTR [rbp-0x48]
  40c714:	mov    rsi,QWORD PTR [rbp-0x18]
  40c718:	mov    rax,QWORD PTR [rbp-0x38]
  40c71c:	mov    rdi,rax
  40c71f:	call   428117 <flatcc_json_parser_float@@Base>
  40c724:	mov    QWORD PTR [rbp-0x40],rax
  40c728:	mov    rax,QWORD PTR [rbp-0x18]
  40c72c:	cmp    rax,QWORD PTR [rbp-0x40]
  40c730:	jne    40c77c <_start@@Base+0x64ec>
  40c732:	mov    rax,QWORD PTR [rbp-0x40]
  40c736:	mov    QWORD PTR [rbp-0x18],rax
  40c73a:	lea    rcx,[rbp-0x28]
  40c73e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c742:	mov    rsi,QWORD PTR [rbp-0x18]
  40c746:	mov    rax,QWORD PTR [rbp-0x38]
  40c74a:	mov    r8,rcx
  40c74d:	lea    rcx,[rip+0x38b6c]        # 4452c0 <__data_start@@Base+0x200>
  40c754:	mov    rdi,rax
  40c757:	call   408739 <_start@@Base+0x24a9>
  40c75c:	mov    QWORD PTR [rbp-0x40],rax
  40c760:	mov    rax,QWORD PTR [rbp-0x40]
  40c764:	cmp    rax,QWORD PTR [rbp-0x18]
  40c768:	je     40c802 <_start@@Base+0x6572>
  40c76e:	mov    rax,QWORD PTR [rbp-0x40]
  40c772:	cmp    rax,QWORD PTR [rbp-0x48]
  40c776:	je     40c802 <_start@@Base+0x6572>
  40c77c:	mov    edx,DWORD PTR [rbp-0x28]
  40c77f:	mov    rax,QWORD PTR [rbp-0x10]
  40c783:	vmovd  xmm0,edx
  40c787:	mov    rdi,rax
  40c78a:	call   40653e <_start@@Base+0x2ae>
  40c78f:	jmp    40c7c9 <_start@@Base+0x6539>
  40c791:	mov    rdx,QWORD PTR [rbp-0x48]
  40c795:	mov    rcx,QWORD PTR [rbp-0x40]
  40c799:	mov    rax,QWORD PTR [rbp-0x38]
  40c79d:	mov    rsi,rcx
  40c7a0:	mov    rdi,rax
  40c7a3:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c7a8:	mov    QWORD PTR [rbp-0x40],rax
  40c7ac:	jmp    40c7c9 <_start@@Base+0x6539>
  40c7ae:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7b2:	mov    rcx,QWORD PTR [rbp-0x40]
  40c7b6:	mov    rax,QWORD PTR [rbp-0x38]
  40c7ba:	mov    rsi,rcx
  40c7bd:	mov    rdi,rax
  40c7c0:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40c7c5:	mov    QWORD PTR [rbp-0x40],rax
  40c7c9:	lea    rcx,[rbp-0x2c]
  40c7cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7d1:	mov    rsi,QWORD PTR [rbp-0x40]
  40c7d5:	mov    rax,QWORD PTR [rbp-0x38]
  40c7d9:	mov    rdi,rax
  40c7dc:	call   406a06 <_start@@Base+0x776>
  40c7e1:	mov    QWORD PTR [rbp-0x40],rax
  40c7e5:	mov    eax,DWORD PTR [rbp-0x2c]
  40c7e8:	test   eax,eax
  40c7ea:	jne    40c0cf <_start@@Base+0x5e3f>
  40c7f0:	mov    rax,QWORD PTR [rbp-0x40]
  40c7f4:	jmp    40c81c <_start@@Base+0x658c>
  40c7f6:	nop
  40c7f7:	jmp    40c803 <_start@@Base+0x6573>
  40c7f9:	nop
  40c7fa:	jmp    40c803 <_start@@Base+0x6573>
  40c7fc:	nop
  40c7fd:	jmp    40c803 <_start@@Base+0x6573>
  40c7ff:	nop
  40c800:	jmp    40c803 <_start@@Base+0x6573>
  40c802:	nop
  40c803:	mov    rdx,QWORD PTR [rbp-0x48]
  40c807:	mov    rsi,QWORD PTR [rbp-0x40]
  40c80b:	mov    rax,QWORD PTR [rbp-0x38]
  40c80f:	mov    ecx,0x21
  40c814:	mov    rdi,rax
  40c817:	call   427257 <flatcc_json_parser_set_error@@Base>
  40c81c:	mov    rdi,QWORD PTR [rbp-0x8]
  40c820:	xor    rdi,QWORD PTR fs:0x28
  40c829:	je     40c830 <_start@@Base+0x65a0>
  40c82b:	call   4061a0 <__stack_chk_fail@plt>
  40c830:	leave  
  40c831:	ret    
  40c832:	endbr64 
  40c836:	push   rbp
  40c837:	mov    rbp,rsp
  40c83a:	sub    rsp,0x30
  40c83e:	mov    QWORD PTR [rbp-0x18],rdi
  40c842:	mov    QWORD PTR [rbp-0x20],rsi
  40c846:	mov    QWORD PTR [rbp-0x28],rdx
  40c84a:	mov    QWORD PTR [rbp-0x30],rcx
  40c84e:	mov    rax,QWORD PTR [rbp-0x30]
  40c852:	mov    DWORD PTR [rax],0x0
  40c858:	mov    rax,QWORD PTR [rbp-0x18]
  40c85c:	mov    rax,QWORD PTR [rax]
  40c85f:	mov    edx,0x10
  40c864:	mov    esi,0x20
  40c869:	mov    rdi,rax
  40c86c:	call   41d6fb <flatcc_builder_start_struct@@Base>
  40c871:	mov    QWORD PTR [rbp-0x8],rax
  40c875:	cmp    QWORD PTR [rbp-0x8],0x0
  40c87a:	je     40c8c9 <_start@@Base+0x6639>
  40c87c:	mov    rcx,QWORD PTR [rbp-0x8]
  40c880:	mov    rdx,QWORD PTR [rbp-0x28]
  40c884:	mov    rsi,QWORD PTR [rbp-0x20]
  40c888:	mov    rax,QWORD PTR [rbp-0x18]
  40c88c:	mov    rdi,rax
  40c88f:	call   40c083 <_start@@Base+0x5df3>
  40c894:	mov    QWORD PTR [rbp-0x20],rax
  40c898:	mov    rax,QWORD PTR [rbp-0x20]
  40c89c:	cmp    rax,QWORD PTR [rbp-0x28]
  40c8a0:	je     40c8cc <_start@@Base+0x663c>
  40c8a2:	mov    rax,QWORD PTR [rbp-0x18]
  40c8a6:	mov    rax,QWORD PTR [rax]
  40c8a9:	mov    rdi,rax
  40c8ac:	call   41d77d <flatcc_builder_end_struct@@Base>
  40c8b1:	mov    edx,eax
  40c8b3:	mov    rax,QWORD PTR [rbp-0x30]
  40c8b7:	mov    DWORD PTR [rax],edx
  40c8b9:	mov    rax,QWORD PTR [rbp-0x30]
  40c8bd:	mov    eax,DWORD PTR [rax]
  40c8bf:	test   eax,eax
  40c8c1:	je     40c8cc <_start@@Base+0x663c>
  40c8c3:	mov    rax,QWORD PTR [rbp-0x20]
  40c8c7:	jmp    40c8e6 <_start@@Base+0x6656>
  40c8c9:	nop
  40c8ca:	jmp    40c8cd <_start@@Base+0x663d>
  40c8cc:	nop
  40c8cd:	mov    rdx,QWORD PTR [rbp-0x28]
  40c8d1:	mov    rsi,QWORD PTR [rbp-0x20]
  40c8d5:	mov    rax,QWORD PTR [rbp-0x18]
  40c8d9:	mov    ecx,0x21
  40c8de:	mov    rdi,rax
  40c8e1:	call   427257 <flatcc_json_parser_set_error@@Base>
  40c8e6:	leave  
  40c8e7:	ret    
  40c8e8:	endbr64 
  40c8ec:	push   rbp
  40c8ed:	mov    rbp,rsp
  40c8f0:	sub    rsp,0x50
  40c8f4:	mov    QWORD PTR [rbp-0x38],rdi
  40c8f8:	mov    QWORD PTR [rbp-0x40],rsi
  40c8fc:	mov    QWORD PTR [rbp-0x48],rdx
  40c900:	mov    QWORD PTR [rbp-0x50],rcx
  40c904:	mov    rax,QWORD PTR fs:0x28
  40c90d:	mov    QWORD PTR [rbp-0x8],rax
  40c911:	xor    eax,eax
  40c913:	lea    rcx,[rbp-0x28]
  40c917:	mov    rdx,QWORD PTR [rbp-0x48]
  40c91b:	mov    rsi,QWORD PTR [rbp-0x40]
  40c91f:	mov    rax,QWORD PTR [rbp-0x38]
  40c923:	mov    rdi,rax
  40c926:	call   406949 <_start@@Base+0x6b9>
  40c92b:	mov    QWORD PTR [rbp-0x40],rax
  40c92f:	jmp    40cbaf <_start@@Base+0x691f>
  40c934:	mov    rdx,QWORD PTR [rbp-0x48]
  40c938:	mov    rcx,QWORD PTR [rbp-0x40]
  40c93c:	mov    rax,QWORD PTR [rbp-0x38]
  40c940:	mov    rsi,rcx
  40c943:	mov    rdi,rax
  40c946:	call   4066e9 <_start@@Base+0x459>
  40c94b:	mov    QWORD PTR [rbp-0x40],rax
  40c94f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c953:	mov    rax,QWORD PTR [rbp-0x40]
  40c957:	mov    rsi,rdx
  40c95a:	mov    rdi,rax
  40c95d:	call   406853 <_start@@Base+0x5c3>
  40c962:	mov    QWORD PTR [rbp-0x20],rax
  40c966:	movabs rax,0xffff000000000000
  40c970:	and    rax,QWORD PTR [rbp-0x20]
  40c974:	mov    rdx,rax
  40c977:	movabs rax,0x6964000000000000
  40c981:	cmp    rdx,rax
  40c984:	jne    40ca7a <_start@@Base+0x67ea>
  40c98a:	mov    rax,QWORD PTR [rbp-0x40]
  40c98e:	mov    QWORD PTR [rbp-0x18],rax
  40c992:	mov    rdx,QWORD PTR [rbp-0x48]
  40c996:	mov    rsi,QWORD PTR [rbp-0x18]
  40c99a:	mov    rax,QWORD PTR [rbp-0x38]
  40c99e:	mov    ecx,0x2
  40c9a3:	mov    rdi,rax
  40c9a6:	call   406d3f <_start@@Base+0xaaf>
  40c9ab:	mov    QWORD PTR [rbp-0x40],rax
  40c9af:	mov    rax,QWORD PTR [rbp-0x18]
  40c9b3:	cmp    rax,QWORD PTR [rbp-0x40]
  40c9b7:	je     40ca5a <_start@@Base+0x67ca>
  40c9bd:	mov    DWORD PTR [rbp-0x24],0x0
  40c9c4:	mov    rax,QWORD PTR [rbp-0x50]
  40c9c8:	mov    QWORD PTR [rbp-0x10],rax
  40c9cc:	mov    rax,QWORD PTR [rbp-0x40]
  40c9d0:	mov    QWORD PTR [rbp-0x18],rax
  40c9d4:	lea    rcx,[rbp-0x24]
  40c9d8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c9dc:	mov    rsi,QWORD PTR [rbp-0x18]
  40c9e0:	mov    rax,QWORD PTR [rbp-0x38]
  40c9e4:	mov    rdi,rax
  40c9e7:	call   40749b <_start@@Base+0x120b>
  40c9ec:	mov    QWORD PTR [rbp-0x40],rax
  40c9f0:	mov    rax,QWORD PTR [rbp-0x18]
  40c9f4:	cmp    rax,QWORD PTR [rbp-0x40]
  40c9f8:	jne    40ca44 <_start@@Base+0x67b4>
  40c9fa:	mov    rax,QWORD PTR [rbp-0x40]
  40c9fe:	mov    QWORD PTR [rbp-0x18],rax
  40ca02:	lea    rcx,[rbp-0x24]
  40ca06:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca0a:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca0e:	mov    rax,QWORD PTR [rbp-0x38]
  40ca12:	mov    r8,rcx
  40ca15:	lea    rcx,[rip+0x388c4]        # 4452e0 <__data_start@@Base+0x220>
  40ca1c:	mov    rdi,rax
  40ca1f:	call   407c4d <_start@@Base+0x19bd>
  40ca24:	mov    QWORD PTR [rbp-0x40],rax
  40ca28:	mov    rax,QWORD PTR [rbp-0x40]
  40ca2c:	cmp    rax,QWORD PTR [rbp-0x18]
  40ca30:	je     40cbc0 <_start@@Base+0x6930>
  40ca36:	mov    rax,QWORD PTR [rbp-0x40]
  40ca3a:	cmp    rax,QWORD PTR [rbp-0x48]
  40ca3e:	je     40cbc0 <_start@@Base+0x6930>
  40ca44:	mov    edx,DWORD PTR [rbp-0x24]
  40ca47:	mov    rax,QWORD PTR [rbp-0x10]
  40ca4b:	mov    esi,edx
  40ca4d:	mov    rdi,rax
  40ca50:	call   4063ef <_start@@Base+0x15f>
  40ca55:	jmp    40cb93 <_start@@Base+0x6903>
  40ca5a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca5e:	mov    rcx,QWORD PTR [rbp-0x40]
  40ca62:	mov    rax,QWORD PTR [rbp-0x38]
  40ca66:	mov    rsi,rcx
  40ca69:	mov    rdi,rax
  40ca6c:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ca71:	mov    QWORD PTR [rbp-0x40],rax
  40ca75:	jmp    40cb93 <_start@@Base+0x6903>
  40ca7a:	movabs rax,0x64697374616e6365
  40ca84:	cmp    QWORD PTR [rbp-0x20],rax
  40ca88:	jne    40cb78 <_start@@Base+0x68e8>
  40ca8e:	mov    rax,QWORD PTR [rbp-0x40]
  40ca92:	mov    QWORD PTR [rbp-0x18],rax
  40ca96:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca9a:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca9e:	mov    rax,QWORD PTR [rbp-0x38]
  40caa2:	mov    ecx,0x8
  40caa7:	mov    rdi,rax
  40caaa:	call   406d3f <_start@@Base+0xaaf>
  40caaf:	mov    QWORD PTR [rbp-0x40],rax
  40cab3:	mov    rax,QWORD PTR [rbp-0x18]
  40cab7:	cmp    rax,QWORD PTR [rbp-0x40]
  40cabb:	je     40cb5b <_start@@Base+0x68cb>
  40cac1:	mov    DWORD PTR [rbp-0x24],0x0
  40cac8:	mov    rax,QWORD PTR [rbp-0x50]
  40cacc:	add    rax,0x4
  40cad0:	mov    QWORD PTR [rbp-0x10],rax
  40cad4:	mov    rax,QWORD PTR [rbp-0x40]
  40cad8:	mov    QWORD PTR [rbp-0x18],rax
  40cadc:	lea    rcx,[rbp-0x24]
  40cae0:	mov    rdx,QWORD PTR [rbp-0x48]
  40cae4:	mov    rsi,QWORD PTR [rbp-0x18]
  40cae8:	mov    rax,QWORD PTR [rbp-0x38]
  40caec:	mov    rdi,rax
  40caef:	call   40749b <_start@@Base+0x120b>
  40caf4:	mov    QWORD PTR [rbp-0x40],rax
  40caf8:	mov    rax,QWORD PTR [rbp-0x18]
  40cafc:	cmp    rax,QWORD PTR [rbp-0x40]
  40cb00:	jne    40cb48 <_start@@Base+0x68b8>
  40cb02:	mov    rax,QWORD PTR [rbp-0x40]
  40cb06:	mov    QWORD PTR [rbp-0x18],rax
  40cb0a:	lea    rcx,[rbp-0x24]
  40cb0e:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb12:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb16:	mov    rax,QWORD PTR [rbp-0x38]
  40cb1a:	mov    r8,rcx
  40cb1d:	lea    rcx,[rip+0x387dc]        # 445300 <__data_start@@Base+0x240>
  40cb24:	mov    rdi,rax
  40cb27:	call   407c4d <_start@@Base+0x19bd>
  40cb2c:	mov    QWORD PTR [rbp-0x40],rax
  40cb30:	mov    rax,QWORD PTR [rbp-0x40]
  40cb34:	cmp    rax,QWORD PTR [rbp-0x18]
  40cb38:	je     40cbc3 <_start@@Base+0x6933>
  40cb3e:	mov    rax,QWORD PTR [rbp-0x40]
  40cb42:	cmp    rax,QWORD PTR [rbp-0x48]
  40cb46:	je     40cbc3 <_start@@Base+0x6933>
  40cb48:	mov    edx,DWORD PTR [rbp-0x24]
  40cb4b:	mov    rax,QWORD PTR [rbp-0x10]
  40cb4f:	mov    esi,edx
  40cb51:	mov    rdi,rax
  40cb54:	call   4063ef <_start@@Base+0x15f>
  40cb59:	jmp    40cb93 <_start@@Base+0x6903>
  40cb5b:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb5f:	mov    rcx,QWORD PTR [rbp-0x40]
  40cb63:	mov    rax,QWORD PTR [rbp-0x38]
  40cb67:	mov    rsi,rcx
  40cb6a:	mov    rdi,rax
  40cb6d:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb72:	mov    QWORD PTR [rbp-0x40],rax
  40cb76:	jmp    40cb93 <_start@@Base+0x6903>
  40cb78:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb7c:	mov    rcx,QWORD PTR [rbp-0x40]
  40cb80:	mov    rax,QWORD PTR [rbp-0x38]
  40cb84:	mov    rsi,rcx
  40cb87:	mov    rdi,rax
  40cb8a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb8f:	mov    QWORD PTR [rbp-0x40],rax
  40cb93:	lea    rcx,[rbp-0x28]
  40cb97:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb9b:	mov    rsi,QWORD PTR [rbp-0x40]
  40cb9f:	mov    rax,QWORD PTR [rbp-0x38]
  40cba3:	mov    rdi,rax
  40cba6:	call   406a06 <_start@@Base+0x776>
  40cbab:	mov    QWORD PTR [rbp-0x40],rax
  40cbaf:	mov    eax,DWORD PTR [rbp-0x28]
  40cbb2:	test   eax,eax
  40cbb4:	jne    40c934 <_start@@Base+0x66a4>
  40cbba:	mov    rax,QWORD PTR [rbp-0x40]
  40cbbe:	jmp    40cbdd <_start@@Base+0x694d>
  40cbc0:	nop
  40cbc1:	jmp    40cbc4 <_start@@Base+0x6934>
  40cbc3:	nop
  40cbc4:	mov    rdx,QWORD PTR [rbp-0x48]
  40cbc8:	mov    rsi,QWORD PTR [rbp-0x40]
  40cbcc:	mov    rax,QWORD PTR [rbp-0x38]
  40cbd0:	mov    ecx,0x21
  40cbd5:	mov    rdi,rax
  40cbd8:	call   427257 <flatcc_json_parser_set_error@@Base>
  40cbdd:	mov    rdi,QWORD PTR [rbp-0x8]
  40cbe1:	xor    rdi,QWORD PTR fs:0x28
  40cbea:	je     40cbf1 <_start@@Base+0x6961>
  40cbec:	call   4061a0 <__stack_chk_fail@plt>
  40cbf1:	leave  
  40cbf2:	ret    
  40cbf3:	endbr64 
  40cbf7:	push   rbp
  40cbf8:	mov    rbp,rsp
  40cbfb:	sub    rsp,0x30
  40cbff:	mov    QWORD PTR [rbp-0x18],rdi
  40cc03:	mov    QWORD PTR [rbp-0x20],rsi
  40cc07:	mov    QWORD PTR [rbp-0x28],rdx
  40cc0b:	mov    QWORD PTR [rbp-0x30],rcx
  40cc0f:	mov    rax,QWORD PTR [rbp-0x30]
  40cc13:	mov    DWORD PTR [rax],0x0
  40cc19:	mov    rax,QWORD PTR [rbp-0x18]
  40cc1d:	mov    rax,QWORD PTR [rax]
  40cc20:	mov    edx,0x4
  40cc25:	mov    esi,0x8
  40cc2a:	mov    rdi,rax
  40cc2d:	call   41d6fb <flatcc_builder_start_struct@@Base>
  40cc32:	mov    QWORD PTR [rbp-0x8],rax
  40cc36:	cmp    QWORD PTR [rbp-0x8],0x0
  40cc3b:	je     40cc8a <_start@@Base+0x69fa>
  40cc3d:	mov    rcx,QWORD PTR [rbp-0x8]
  40cc41:	mov    rdx,QWORD PTR [rbp-0x28]
  40cc45:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc49:	mov    rax,QWORD PTR [rbp-0x18]
  40cc4d:	mov    rdi,rax
  40cc50:	call   40c8e8 <_start@@Base+0x6658>
  40cc55:	mov    QWORD PTR [rbp-0x20],rax
  40cc59:	mov    rax,QWORD PTR [rbp-0x20]
  40cc5d:	cmp    rax,QWORD PTR [rbp-0x28]
  40cc61:	je     40cc8d <_start@@Base+0x69fd>
  40cc63:	mov    rax,QWORD PTR [rbp-0x18]
  40cc67:	mov    rax,QWORD PTR [rax]
  40cc6a:	mov    rdi,rax
  40cc6d:	call   41d77d <flatcc_builder_end_struct@@Base>
  40cc72:	mov    edx,eax
  40cc74:	mov    rax,QWORD PTR [rbp-0x30]
  40cc78:	mov    DWORD PTR [rax],edx
  40cc7a:	mov    rax,QWORD PTR [rbp-0x30]
  40cc7e:	mov    eax,DWORD PTR [rax]
  40cc80:	test   eax,eax
  40cc82:	je     40cc8d <_start@@Base+0x69fd>
  40cc84:	mov    rax,QWORD PTR [rbp-0x20]
  40cc88:	jmp    40cca7 <_start@@Base+0x6a17>
  40cc8a:	nop
  40cc8b:	jmp    40cc8e <_start@@Base+0x69fe>
  40cc8d:	nop
  40cc8e:	mov    rdx,QWORD PTR [rbp-0x28]
  40cc92:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc96:	mov    rax,QWORD PTR [rbp-0x18]
  40cc9a:	mov    ecx,0x21
  40cc9f:	mov    rdi,rax
  40cca2:	call   427257 <flatcc_json_parser_set_error@@Base>
  40cca7:	leave  
  40cca8:	ret    
  40cca9:	endbr64 
  40ccad:	push   rbp
  40ccae:	mov    rbp,rsp
  40ccb1:	sub    rsp,0x60
  40ccb5:	mov    QWORD PTR [rbp-0x48],rdi
  40ccb9:	mov    QWORD PTR [rbp-0x50],rsi
  40ccbd:	mov    QWORD PTR [rbp-0x58],rdx
  40ccc1:	mov    QWORD PTR [rbp-0x60],rcx
  40ccc5:	mov    rax,QWORD PTR fs:0x28
  40ccce:	mov    QWORD PTR [rbp-0x8],rax
  40ccd2:	xor    eax,eax
  40ccd4:	mov    rax,QWORD PTR [rbp-0x60]
  40ccd8:	mov    DWORD PTR [rax],0x0
  40ccde:	mov    rax,QWORD PTR [rbp-0x48]
  40cce2:	mov    rax,QWORD PTR [rax]
  40cce5:	mov    esi,0x3
  40ccea:	mov    rdi,rax
  40cced:	call   41e233 <flatcc_builder_start_table@@Base>
  40ccf2:	test   eax,eax
  40ccf4:	jne    40d164 <_start@@Base+0x6ed4>
  40ccfa:	lea    rcx,[rbp-0x38]
  40ccfe:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd02:	mov    rsi,QWORD PTR [rbp-0x50]
  40cd06:	mov    rax,QWORD PTR [rbp-0x48]
  40cd0a:	mov    rdi,rax
  40cd0d:	call   406949 <_start@@Base+0x6b9>
  40cd12:	mov    QWORD PTR [rbp-0x50],rax
  40cd16:	jmp    40d127 <_start@@Base+0x6e97>
  40cd1b:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd1f:	mov    rcx,QWORD PTR [rbp-0x50]
  40cd23:	mov    rax,QWORD PTR [rbp-0x48]
  40cd27:	mov    rsi,rcx
  40cd2a:	mov    rdi,rax
  40cd2d:	call   4066e9 <_start@@Base+0x459>
  40cd32:	mov    QWORD PTR [rbp-0x50],rax
  40cd36:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd3a:	mov    rax,QWORD PTR [rbp-0x50]
  40cd3e:	mov    rsi,rdx
  40cd41:	mov    rdi,rax
  40cd44:	call   406853 <_start@@Base+0x5c3>
  40cd49:	mov    QWORD PTR [rbp-0x28],rax
  40cd4d:	movabs rax,0x6963ffffffffffff
  40cd57:	cmp    QWORD PTR [rbp-0x28],rax
  40cd5b:	ja     40ced4 <_start@@Base+0x6c44>
  40cd61:	mov    rax,QWORD PTR [rbp-0x28]
  40cd65:	and    rax,0xffffffffff000000
  40cd6b:	mov    rdx,rax
  40cd6e:	movabs rax,0x636f756e74000000
  40cd78:	cmp    rdx,rax
  40cd7b:	jne    40ceb4 <_start@@Base+0x6c24>
  40cd81:	mov    rax,QWORD PTR [rbp-0x50]
  40cd85:	mov    QWORD PTR [rbp-0x20],rax
  40cd89:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd8d:	mov    rsi,QWORD PTR [rbp-0x20]
  40cd91:	mov    rax,QWORD PTR [rbp-0x48]
  40cd95:	mov    ecx,0x5
  40cd9a:	mov    rdi,rax
  40cd9d:	call   406d3f <_start@@Base+0xaaf>
  40cda2:	mov    QWORD PTR [rbp-0x50],rax
  40cda6:	mov    rax,QWORD PTR [rbp-0x20]
  40cdaa:	cmp    rax,QWORD PTR [rbp-0x50]
  40cdae:	je     40ce94 <_start@@Base+0x6c04>
  40cdb4:	mov    WORD PTR [rbp-0x30],0x0
  40cdba:	mov    rax,QWORD PTR [rbp-0x50]
  40cdbe:	mov    QWORD PTR [rbp-0x20],rax
  40cdc2:	lea    rcx,[rbp-0x30]
  40cdc6:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdca:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdce:	mov    rax,QWORD PTR [rbp-0x48]
  40cdd2:	mov    rdi,rax
  40cdd5:	call   407561 <_start@@Base+0x12d1>
  40cdda:	mov    QWORD PTR [rbp-0x50],rax
  40cdde:	mov    rax,QWORD PTR [rbp-0x20]
  40cde2:	cmp    rax,QWORD PTR [rbp-0x50]
  40cde6:	jne    40ce32 <_start@@Base+0x6ba2>
  40cde8:	mov    rax,QWORD PTR [rbp-0x50]
  40cdec:	mov    QWORD PTR [rbp-0x20],rax
  40cdf0:	lea    rcx,[rbp-0x30]
  40cdf4:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdf8:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdfc:	mov    rax,QWORD PTR [rbp-0x48]
  40ce00:	mov    r8,rcx
  40ce03:	lea    rcx,[rip+0x38516]        # 445320 <__data_start@@Base+0x260>
  40ce0a:	mov    rdi,rax
  40ce0d:	call   407daa <_start@@Base+0x1b1a>
  40ce12:	mov    QWORD PTR [rbp-0x50],rax
  40ce16:	mov    rax,QWORD PTR [rbp-0x50]
  40ce1a:	cmp    rax,QWORD PTR [rbp-0x20]
  40ce1e:	je     40d167 <_start@@Base+0x6ed7>
  40ce24:	mov    rax,QWORD PTR [rbp-0x50]
  40ce28:	cmp    rax,QWORD PTR [rbp-0x58]
  40ce2c:	je     40d167 <_start@@Base+0x6ed7>
  40ce32:	movzx  eax,WORD PTR [rbp-0x30]
  40ce36:	test   ax,ax
  40ce39:	jne    40ce4d <_start@@Base+0x6bbd>
  40ce3b:	mov    rax,QWORD PTR [rbp-0x48]
  40ce3f:	mov    eax,DWORD PTR [rax+0x10]
  40ce42:	and    eax,0x2
  40ce45:	test   eax,eax
  40ce47:	je     40d10b <_start@@Base+0x6e7b>
  40ce4d:	mov    rax,QWORD PTR [rbp-0x48]
  40ce51:	mov    rax,QWORD PTR [rax]
  40ce54:	mov    ecx,0x2
  40ce59:	mov    edx,0x2
  40ce5e:	mov    esi,0x2
  40ce63:	mov    rdi,rax
  40ce66:	call   4203e3 <flatcc_builder_table_add@@Base>
  40ce6b:	mov    QWORD PTR [rbp-0x18],rax
  40ce6f:	cmp    QWORD PTR [rbp-0x18],0x0
  40ce74:	je     40d16a <_start@@Base+0x6eda>
  40ce7a:	movzx  eax,WORD PTR [rbp-0x30]
  40ce7e:	movzx  edx,ax
  40ce81:	mov    rax,QWORD PTR [rbp-0x18]
  40ce85:	mov    esi,edx
  40ce87:	mov    rdi,rax
  40ce8a:	call   4063ba <_start@@Base+0x12a>
  40ce8f:	jmp    40d10b <_start@@Base+0x6e7b>
  40ce94:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce98:	mov    rcx,QWORD PTR [rbp-0x50]
  40ce9c:	mov    rax,QWORD PTR [rbp-0x48]
  40cea0:	mov    rsi,rcx
  40cea3:	mov    rdi,rax
  40cea6:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ceab:	mov    QWORD PTR [rbp-0x50],rax
  40ceaf:	jmp    40d10b <_start@@Base+0x6e7b>
  40ceb4:	mov    rdx,QWORD PTR [rbp-0x58]
  40ceb8:	mov    rcx,QWORD PTR [rbp-0x50]
  40cebc:	mov    rax,QWORD PTR [rbp-0x48]
  40cec0:	mov    rsi,rcx
  40cec3:	mov    rdi,rax
  40cec6:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40cecb:	mov    QWORD PTR [rbp-0x50],rax
  40cecf:	jmp    40d10b <_start@@Base+0x6e7b>
  40ced4:	movabs rax,0xffffff0000000000
  40cede:	and    rax,QWORD PTR [rbp-0x28]
  40cee2:	mov    rdx,rax
  40cee5:	movabs rax,0x76616c0000000000
  40ceef:	cmp    rdx,rax
  40cef2:	jne    40d02b <_start@@Base+0x6d9b>
  40cef8:	mov    rax,QWORD PTR [rbp-0x50]
  40cefc:	mov    QWORD PTR [rbp-0x20],rax
  40cf00:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf04:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf08:	mov    rax,QWORD PTR [rbp-0x48]
  40cf0c:	mov    ecx,0x3
  40cf11:	mov    rdi,rax
  40cf14:	call   406d3f <_start@@Base+0xaaf>
  40cf19:	mov    QWORD PTR [rbp-0x50],rax
  40cf1d:	mov    rax,QWORD PTR [rbp-0x20]
  40cf21:	cmp    rax,QWORD PTR [rbp-0x50]
  40cf25:	je     40d00b <_start@@Base+0x6d7b>
  40cf2b:	mov    QWORD PTR [rbp-0x30],0x0
  40cf33:	mov    rax,QWORD PTR [rbp-0x50]
  40cf37:	mov    QWORD PTR [rbp-0x20],rax
  40cf3b:	lea    rcx,[rbp-0x30]
  40cf3f:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf43:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf47:	mov    rax,QWORD PTR [rbp-0x48]
  40cf4b:	mov    rdi,rax
  40cf4e:	call   4076e9 <_start@@Base+0x1459>
  40cf53:	mov    QWORD PTR [rbp-0x50],rax
  40cf57:	mov    rax,QWORD PTR [rbp-0x20]
  40cf5b:	cmp    rax,QWORD PTR [rbp-0x50]
  40cf5f:	jne    40cfab <_start@@Base+0x6d1b>
  40cf61:	mov    rax,QWORD PTR [rbp-0x50]
  40cf65:	mov    QWORD PTR [rbp-0x20],rax
  40cf69:	lea    rcx,[rbp-0x30]
  40cf6d:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf71:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf75:	mov    rax,QWORD PTR [rbp-0x48]
  40cf79:	mov    r8,rcx
  40cf7c:	lea    rcx,[rip+0x383bd]        # 445340 <__data_start@@Base+0x280>
  40cf83:	mov    rdi,rax
  40cf86:	call   408061 <_start@@Base+0x1dd1>
  40cf8b:	mov    QWORD PTR [rbp-0x50],rax
  40cf8f:	mov    rax,QWORD PTR [rbp-0x50]
  40cf93:	cmp    rax,QWORD PTR [rbp-0x20]
  40cf97:	je     40d16d <_start@@Base+0x6edd>
  40cf9d:	mov    rax,QWORD PTR [rbp-0x50]
  40cfa1:	cmp    rax,QWORD PTR [rbp-0x58]
  40cfa5:	je     40d16d <_start@@Base+0x6edd>
  40cfab:	mov    rax,QWORD PTR [rbp-0x30]
  40cfaf:	test   rax,rax
  40cfb2:	jne    40cfc6 <_start@@Base+0x6d36>
  40cfb4:	mov    rax,QWORD PTR [rbp-0x48]
  40cfb8:	mov    eax,DWORD PTR [rax+0x10]
  40cfbb:	and    eax,0x2
  40cfbe:	test   eax,eax
  40cfc0:	je     40d10b <_start@@Base+0x6e7b>
  40cfc6:	mov    rax,QWORD PTR [rbp-0x48]
  40cfca:	mov    rax,QWORD PTR [rax]
  40cfcd:	mov    ecx,0x8
  40cfd2:	mov    edx,0x8
  40cfd7:	mov    esi,0x1
  40cfdc:	mov    rdi,rax
  40cfdf:	call   4203e3 <flatcc_builder_table_add@@Base>
  40cfe4:	mov    QWORD PTR [rbp-0x18],rax
  40cfe8:	cmp    QWORD PTR [rbp-0x18],0x0
  40cfed:	je     40d170 <_start@@Base+0x6ee0>
  40cff3:	mov    rdx,QWORD PTR [rbp-0x30]
  40cff7:	mov    rax,QWORD PTR [rbp-0x18]
  40cffb:	mov    rsi,rdx
  40cffe:	mov    rdi,rax
  40d001:	call   4064f5 <_start@@Base+0x265>
  40d006:	jmp    40d10b <_start@@Base+0x6e7b>
  40d00b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d00f:	mov    rcx,QWORD PTR [rbp-0x50]
  40d013:	mov    rax,QWORD PTR [rbp-0x48]
  40d017:	mov    rsi,rcx
  40d01a:	mov    rdi,rax
  40d01d:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d022:	mov    QWORD PTR [rbp-0x50],rax
  40d026:	jmp    40d10b <_start@@Base+0x6e7b>
  40d02b:	movabs rax,0xffff000000000000
  40d035:	and    rax,QWORD PTR [rbp-0x28]
  40d039:	mov    rdx,rax
  40d03c:	movabs rax,0x6964000000000000
  40d046:	cmp    rdx,rax
  40d049:	jne    40d0f0 <_start@@Base+0x6e60>
  40d04f:	mov    rax,QWORD PTR [rbp-0x50]
  40d053:	mov    QWORD PTR [rbp-0x20],rax
  40d057:	mov    rdx,QWORD PTR [rbp-0x58]
  40d05b:	mov    rsi,QWORD PTR [rbp-0x20]
  40d05f:	mov    rax,QWORD PTR [rbp-0x48]
  40d063:	mov    ecx,0x2
  40d068:	mov    rdi,rax
  40d06b:	call   406d3f <_start@@Base+0xaaf>
  40d070:	mov    QWORD PTR [rbp-0x50],rax
  40d074:	mov    rax,QWORD PTR [rbp-0x20]
  40d078:	cmp    rax,QWORD PTR [rbp-0x50]
  40d07c:	je     40d0d3 <_start@@Base+0x6e43>
  40d07e:	lea    rcx,[rbp-0x34]
  40d082:	mov    rdx,QWORD PTR [rbp-0x58]
  40d086:	mov    rsi,QWORD PTR [rbp-0x50]
  40d08a:	mov    rax,QWORD PTR [rbp-0x48]
  40d08e:	mov    rdi,rax
  40d091:	call   428c7d <flatcc_json_parser_build_string@@Base>
  40d096:	mov    QWORD PTR [rbp-0x50],rax
  40d09a:	mov    eax,DWORD PTR [rbp-0x34]
  40d09d:	test   eax,eax
  40d09f:	je     40d173 <_start@@Base+0x6ee3>
  40d0a5:	mov    rax,QWORD PTR [rbp-0x48]
  40d0a9:	mov    rax,QWORD PTR [rax]
  40d0ac:	mov    esi,0x0
  40d0b1:	mov    rdi,rax
  40d0b4:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d0b9:	mov    QWORD PTR [rbp-0x10],rax
  40d0bd:	cmp    QWORD PTR [rbp-0x10],0x0
  40d0c2:	je     40d173 <_start@@Base+0x6ee3>
  40d0c8:	mov    edx,DWORD PTR [rbp-0x34]
  40d0cb:	mov    rax,QWORD PTR [rbp-0x10]
  40d0cf:	mov    DWORD PTR [rax],edx
  40d0d1:	jmp    40d10b <_start@@Base+0x6e7b>
  40d0d3:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0d7:	mov    rcx,QWORD PTR [rbp-0x50]
  40d0db:	mov    rax,QWORD PTR [rbp-0x48]
  40d0df:	mov    rsi,rcx
  40d0e2:	mov    rdi,rax
  40d0e5:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d0ea:	mov    QWORD PTR [rbp-0x50],rax
  40d0ee:	jmp    40d10b <_start@@Base+0x6e7b>
  40d0f0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0f4:	mov    rcx,QWORD PTR [rbp-0x50]
  40d0f8:	mov    rax,QWORD PTR [rbp-0x48]
  40d0fc:	mov    rsi,rcx
  40d0ff:	mov    rdi,rax
  40d102:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d107:	mov    QWORD PTR [rbp-0x50],rax
  40d10b:	lea    rcx,[rbp-0x38]
  40d10f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d113:	mov    rsi,QWORD PTR [rbp-0x50]
  40d117:	mov    rax,QWORD PTR [rbp-0x48]
  40d11b:	mov    rdi,rax
  40d11e:	call   406a06 <_start@@Base+0x776>
  40d123:	mov    QWORD PTR [rbp-0x50],rax
  40d127:	mov    eax,DWORD PTR [rbp-0x38]
  40d12a:	test   eax,eax
  40d12c:	jne    40cd1b <_start@@Base+0x6a8b>
  40d132:	mov    rax,QWORD PTR [rbp-0x48]
  40d136:	mov    eax,DWORD PTR [rax+0x1c]
  40d139:	test   eax,eax
  40d13b:	jne    40d176 <_start@@Base+0x6ee6>
  40d13d:	mov    rax,QWORD PTR [rbp-0x48]
  40d141:	mov    rax,QWORD PTR [rax]
  40d144:	mov    rdi,rax
  40d147:	call   41ed42 <flatcc_builder_end_table@@Base>
  40d14c:	mov    edx,eax
  40d14e:	mov    rax,QWORD PTR [rbp-0x60]
  40d152:	mov    DWORD PTR [rax],edx
  40d154:	mov    rax,QWORD PTR [rbp-0x60]
  40d158:	mov    eax,DWORD PTR [rax]
  40d15a:	test   eax,eax
  40d15c:	je     40d179 <_start@@Base+0x6ee9>
  40d15e:	mov    rax,QWORD PTR [rbp-0x50]
  40d162:	jmp    40d193 <_start@@Base+0x6f03>
  40d164:	nop
  40d165:	jmp    40d17a <_start@@Base+0x6eea>
  40d167:	nop
  40d168:	jmp    40d17a <_start@@Base+0x6eea>
  40d16a:	nop
  40d16b:	jmp    40d17a <_start@@Base+0x6eea>
  40d16d:	nop
  40d16e:	jmp    40d17a <_start@@Base+0x6eea>
  40d170:	nop
  40d171:	jmp    40d17a <_start@@Base+0x6eea>
  40d173:	nop
  40d174:	jmp    40d17a <_start@@Base+0x6eea>
  40d176:	nop
  40d177:	jmp    40d17a <_start@@Base+0x6eea>
  40d179:	nop
  40d17a:	mov    rdx,QWORD PTR [rbp-0x58]
  40d17e:	mov    rsi,QWORD PTR [rbp-0x50]
  40d182:	mov    rax,QWORD PTR [rbp-0x48]
  40d186:	mov    ecx,0x21
  40d18b:	mov    rdi,rax
  40d18e:	call   427257 <flatcc_json_parser_set_error@@Base>
  40d193:	mov    rdi,QWORD PTR [rbp-0x8]
  40d197:	xor    rdi,QWORD PTR fs:0x28
  40d1a0:	je     40d1a7 <_start@@Base+0x6f17>
  40d1a2:	call   4061a0 <__stack_chk_fail@plt>
  40d1a7:	leave  
  40d1a8:	ret    
  40d1a9:	endbr64 
  40d1ad:	push   rbp
  40d1ae:	mov    rbp,rsp
  40d1b1:	sub    rsp,0x50
  40d1b5:	mov    QWORD PTR [rbp-0x38],rdi
  40d1b9:	mov    QWORD PTR [rbp-0x40],rsi
  40d1bd:	mov    QWORD PTR [rbp-0x48],rdx
  40d1c1:	mov    QWORD PTR [rbp-0x50],rcx
  40d1c5:	mov    rax,QWORD PTR fs:0x28
  40d1ce:	mov    QWORD PTR [rbp-0x8],rax
  40d1d2:	xor    eax,eax
  40d1d4:	mov    rax,QWORD PTR [rbp-0x50]
  40d1d8:	mov    DWORD PTR [rax],0x0
  40d1de:	mov    rax,QWORD PTR [rbp-0x38]
  40d1e2:	mov    rax,QWORD PTR [rax]
  40d1e5:	mov    esi,0x4
  40d1ea:	mov    rdi,rax
  40d1ed:	call   41e233 <flatcc_builder_start_table@@Base>
  40d1f2:	test   eax,eax
  40d1f4:	jne    40d629 <_start@@Base+0x7399>
  40d1fa:	lea    rcx,[rbp-0x28]
  40d1fe:	mov    rdx,QWORD PTR [rbp-0x48]
  40d202:	mov    rsi,QWORD PTR [rbp-0x40]
  40d206:	mov    rax,QWORD PTR [rbp-0x38]
  40d20a:	mov    r8,rcx
  40d20d:	mov    ecx,0x1
  40d212:	mov    rdi,rax
  40d215:	call   428e7c <flatcc_json_parser_prepare_unions@@Base>
  40d21a:	cmp    QWORD PTR [rbp-0x48],rax
  40d21e:	je     40d62c <_start@@Base+0x739c>
  40d224:	lea    rcx,[rbp-0x30]
  40d228:	mov    rdx,QWORD PTR [rbp-0x48]
  40d22c:	mov    rsi,QWORD PTR [rbp-0x40]
  40d230:	mov    rax,QWORD PTR [rbp-0x38]
  40d234:	mov    rdi,rax
  40d237:	call   406949 <_start@@Base+0x6b9>
  40d23c:	mov    QWORD PTR [rbp-0x40],rax
  40d240:	jmp    40d5d0 <_start@@Base+0x7340>
  40d245:	mov    rdx,QWORD PTR [rbp-0x48]
  40d249:	mov    rcx,QWORD PTR [rbp-0x40]
  40d24d:	mov    rax,QWORD PTR [rbp-0x38]
  40d251:	mov    rsi,rcx
  40d254:	mov    rdi,rax
  40d257:	call   4066e9 <_start@@Base+0x459>
  40d25c:	mov    QWORD PTR [rbp-0x40],rax
  40d260:	mov    rdx,QWORD PTR [rbp-0x48]
  40d264:	mov    rax,QWORD PTR [rbp-0x40]
  40d268:	mov    rsi,rdx
  40d26b:	mov    rdi,rax
  40d26e:	call   406853 <_start@@Base+0x5c3>
  40d273:	mov    QWORD PTR [rbp-0x20],rax
  40d277:	movabs rax,0x6d616e79616e795f
  40d281:	cmp    QWORD PTR [rbp-0x20],rax
  40d285:	jne    40d389 <_start@@Base+0x70f9>
  40d28b:	add    QWORD PTR [rbp-0x40],0x8
  40d290:	mov    rdx,QWORD PTR [rbp-0x48]
  40d294:	mov    rax,QWORD PTR [rbp-0x40]
  40d298:	mov    rsi,rdx
  40d29b:	mov    rdi,rax
  40d29e:	call   406853 <_start@@Base+0x5c3>
  40d2a3:	mov    QWORD PTR [rbp-0x20],rax
  40d2a7:	movabs rax,0xffffffff00000000
  40d2b1:	and    rax,QWORD PTR [rbp-0x20]
  40d2b5:	mov    rdx,rax
  40d2b8:	movabs rax,0x7479706500000000
  40d2c2:	cmp    rdx,rax
  40d2c5:	jne    40d369 <_start@@Base+0x70d9>
  40d2cb:	mov    rax,QWORD PTR [rbp-0x40]
  40d2cf:	mov    QWORD PTR [rbp-0x18],rax
  40d2d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40d2d7:	mov    rsi,QWORD PTR [rbp-0x18]
  40d2db:	mov    rax,QWORD PTR [rbp-0x38]
  40d2df:	mov    ecx,0x4
  40d2e4:	mov    rdi,rax
  40d2e7:	call   406d3f <_start@@Base+0xaaf>
  40d2ec:	mov    QWORD PTR [rbp-0x40],rax
  40d2f0:	mov    rax,QWORD PTR [rbp-0x18]
  40d2f4:	cmp    rax,QWORD PTR [rbp-0x40]
  40d2f8:	je     40d349 <_start@@Base+0x70b9>
  40d2fa:	mov    rdi,QWORD PTR [rbp-0x28]
  40d2fe:	mov    rdx,QWORD PTR [rbp-0x48]
  40d302:	mov    rsi,QWORD PTR [rbp-0x40]
  40d306:	mov    rax,QWORD PTR [rbp-0x38]
  40d30a:	sub    rsp,0x8
  40d30e:	lea    rcx,[rip+0xffffffffffffd133]        # 40a448 <_start@@Base+0x41b8>
  40d315:	push   rcx
  40d316:	lea    rcx,[rip+0xffffffffffffcfba]        # 40a2d7 <_start@@Base+0x4047>
  40d31d:	push   rcx
  40d31e:	lea    rcx,[rip+0x3803b]        # 445360 <__data_start@@Base+0x2a0>
  40d325:	push   rcx
  40d326:	mov    r9,rdi
  40d329:	mov    r8d,0x3
  40d32f:	mov    ecx,0x0
  40d334:	mov    rdi,rax
  40d337:	call   42974b <flatcc_json_parser_union_type_vector@@Base>
  40d33c:	add    rsp,0x20
  40d340:	mov    QWORD PTR [rbp-0x40],rax
  40d344:	jmp    40d5b4 <_start@@Base+0x7324>
  40d349:	mov    rdx,QWORD PTR [rbp-0x48]
  40d34d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d351:	mov    rax,QWORD PTR [rbp-0x38]
  40d355:	mov    rsi,rcx
  40d358:	mov    rdi,rax
  40d35b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d360:	mov    QWORD PTR [rbp-0x40],rax
  40d364:	jmp    40d5b4 <_start@@Base+0x7324>
  40d369:	mov    rdx,QWORD PTR [rbp-0x48]
  40d36d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d371:	mov    rax,QWORD PTR [rbp-0x38]
  40d375:	mov    rsi,rcx
  40d378:	mov    rdi,rax
  40d37b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d380:	mov    QWORD PTR [rbp-0x40],rax
  40d384:	jmp    40d5b4 <_start@@Base+0x7324>
  40d389:	mov    rax,QWORD PTR [rbp-0x20]
  40d38d:	mov    al,0x0
  40d38f:	mov    rdx,rax
  40d392:	movabs rax,0x6d616e79616e7900
  40d39c:	cmp    rdx,rax
  40d39f:	jne    40d40f <_start@@Base+0x717f>
  40d3a1:	mov    rax,QWORD PTR [rbp-0x40]
  40d3a5:	mov    QWORD PTR [rbp-0x18],rax
  40d3a9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d3ad:	mov    rsi,QWORD PTR [rbp-0x18]
  40d3b1:	mov    rax,QWORD PTR [rbp-0x38]
  40d3b5:	mov    ecx,0x7
  40d3ba:	mov    rdi,rax
  40d3bd:	call   406d3f <_start@@Base+0xaaf>
  40d3c2:	mov    QWORD PTR [rbp-0x40],rax
  40d3c6:	mov    rax,QWORD PTR [rbp-0x18]
  40d3ca:	cmp    rax,QWORD PTR [rbp-0x40]
  40d3ce:	je     40d412 <_start@@Base+0x7182>
  40d3d0:	mov    rdi,QWORD PTR [rbp-0x28]
  40d3d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d3d8:	mov    rsi,QWORD PTR [rbp-0x40]
  40d3dc:	mov    rax,QWORD PTR [rbp-0x38]
  40d3e0:	sub    rsp,0x8
  40d3e4:	lea    rcx,[rip+0xffffffffffffceec]        # 40a2d7 <_start@@Base+0x4047>
  40d3eb:	push   rcx
  40d3ec:	mov    r9,rdi
  40d3ef:	mov    r8d,0x3
  40d3f5:	mov    ecx,0x0
  40d3fa:	mov    rdi,rax
  40d3fd:	call   4295ff <flatcc_json_parser_union_vector@@Base>
  40d402:	add    rsp,0x10
  40d406:	mov    QWORD PTR [rbp-0x40],rax
  40d40a:	jmp    40d5b4 <_start@@Base+0x7324>
  40d40f:	nop
  40d410:	jmp    40d413 <_start@@Base+0x7183>
  40d412:	nop
  40d413:	mov    rax,QWORD PTR [rbp-0x20]
  40d417:	mov    ax,0x0
  40d41b:	mov    rdx,rax
  40d41e:	movabs rax,0x7072656669780000
  40d428:	cmp    rdx,rax
  40d42b:	jne    40d4d8 <_start@@Base+0x7248>
  40d431:	mov    rax,QWORD PTR [rbp-0x40]
  40d435:	mov    QWORD PTR [rbp-0x18],rax
  40d439:	mov    rdx,QWORD PTR [rbp-0x48]
  40d43d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d441:	mov    rax,QWORD PTR [rbp-0x38]
  40d445:	mov    ecx,0x6
  40d44a:	mov    rdi,rax
  40d44d:	call   406d3f <_start@@Base+0xaaf>
  40d452:	mov    QWORD PTR [rbp-0x40],rax
  40d456:	mov    rax,QWORD PTR [rbp-0x18]
  40d45a:	cmp    rax,QWORD PTR [rbp-0x40]
  40d45e:	je     40d4b8 <_start@@Base+0x7228>
  40d460:	lea    rcx,[rbp-0x2c]
  40d464:	mov    rdx,QWORD PTR [rbp-0x48]
  40d468:	mov    rsi,QWORD PTR [rbp-0x40]
  40d46c:	mov    rax,QWORD PTR [rbp-0x38]
  40d470:	mov    rdi,rax
  40d473:	call   40d668 <_start@@Base+0x73d8>
  40d478:	mov    QWORD PTR [rbp-0x40],rax
  40d47c:	mov    eax,DWORD PTR [rbp-0x2c]
  40d47f:	test   eax,eax
  40d481:	je     40d62f <_start@@Base+0x739f>
  40d487:	mov    rax,QWORD PTR [rbp-0x38]
  40d48b:	mov    rax,QWORD PTR [rax]
  40d48e:	mov    esi,0x0
  40d493:	mov    rdi,rax
  40d496:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d49b:	mov    QWORD PTR [rbp-0x10],rax
  40d49f:	cmp    QWORD PTR [rbp-0x10],0x0
  40d4a4:	je     40d62f <_start@@Base+0x739f>
  40d4aa:	mov    edx,DWORD PTR [rbp-0x2c]
  40d4ad:	mov    rax,QWORD PTR [rbp-0x10]
  40d4b1:	mov    DWORD PTR [rax],edx
  40d4b3:	jmp    40d5b4 <_start@@Base+0x7324>
  40d4b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4bc:	mov    rcx,QWORD PTR [rbp-0x40]
  40d4c0:	mov    rax,QWORD PTR [rbp-0x38]
  40d4c4:	mov    rsi,rcx
  40d4c7:	mov    rdi,rax
  40d4ca:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d4cf:	mov    QWORD PTR [rbp-0x40],rax
  40d4d3:	jmp    40d5b4 <_start@@Base+0x7324>
  40d4d8:	mov    rax,QWORD PTR [rbp-0x20]
  40d4dc:	and    rax,0xffffffffff000000
  40d4e2:	mov    rdx,rax
  40d4e5:	movabs rax,0x6d6f766965000000
  40d4ef:	cmp    rdx,rax
  40d4f2:	jne    40d599 <_start@@Base+0x7309>
  40d4f8:	mov    rax,QWORD PTR [rbp-0x40]
  40d4fc:	mov    QWORD PTR [rbp-0x18],rax
  40d500:	mov    rdx,QWORD PTR [rbp-0x48]
  40d504:	mov    rsi,QWORD PTR [rbp-0x18]
  40d508:	mov    rax,QWORD PTR [rbp-0x38]
  40d50c:	mov    ecx,0x5
  40d511:	mov    rdi,rax
  40d514:	call   406d3f <_start@@Base+0xaaf>
  40d519:	mov    QWORD PTR [rbp-0x40],rax
  40d51d:	mov    rax,QWORD PTR [rbp-0x18]
  40d521:	cmp    rax,QWORD PTR [rbp-0x40]
  40d525:	je     40d57c <_start@@Base+0x72ec>
  40d527:	lea    rcx,[rbp-0x2c]
  40d52b:	mov    rdx,QWORD PTR [rbp-0x48]
  40d52f:	mov    rsi,QWORD PTR [rbp-0x40]
  40d533:	mov    rax,QWORD PTR [rbp-0x38]
  40d537:	mov    rdi,rax
  40d53a:	call   41503f <_start@@Base+0xedaf>
  40d53f:	mov    QWORD PTR [rbp-0x40],rax
  40d543:	mov    eax,DWORD PTR [rbp-0x2c]
  40d546:	test   eax,eax
  40d548:	je     40d632 <_start@@Base+0x73a2>
  40d54e:	mov    rax,QWORD PTR [rbp-0x38]
  40d552:	mov    rax,QWORD PTR [rax]
  40d555:	mov    esi,0x1
  40d55a:	mov    rdi,rax
  40d55d:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d562:	mov    QWORD PTR [rbp-0x10],rax
  40d566:	cmp    QWORD PTR [rbp-0x10],0x0
  40d56b:	je     40d632 <_start@@Base+0x73a2>
  40d571:	mov    edx,DWORD PTR [rbp-0x2c]
  40d574:	mov    rax,QWORD PTR [rbp-0x10]
  40d578:	mov    DWORD PTR [rax],edx
  40d57a:	jmp    40d5b4 <_start@@Base+0x7324>
  40d57c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d580:	mov    rcx,QWORD PTR [rbp-0x40]
  40d584:	mov    rax,QWORD PTR [rbp-0x38]
  40d588:	mov    rsi,rcx
  40d58b:	mov    rdi,rax
  40d58e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d593:	mov    QWORD PTR [rbp-0x40],rax
  40d597:	jmp    40d5b4 <_start@@Base+0x7324>
  40d599:	mov    rdx,QWORD PTR [rbp-0x48]
  40d59d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d5a1:	mov    rax,QWORD PTR [rbp-0x38]
  40d5a5:	mov    rsi,rcx
  40d5a8:	mov    rdi,rax
  40d5ab:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d5b0:	mov    QWORD PTR [rbp-0x40],rax
  40d5b4:	lea    rcx,[rbp-0x30]
  40d5b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40d5bc:	mov    rsi,QWORD PTR [rbp-0x40]
  40d5c0:	mov    rax,QWORD PTR [rbp-0x38]
  40d5c4:	mov    rdi,rax
  40d5c7:	call   406a06 <_start@@Base+0x776>
  40d5cc:	mov    QWORD PTR [rbp-0x40],rax
  40d5d0:	mov    eax,DWORD PTR [rbp-0x30]
  40d5d3:	test   eax,eax
  40d5d5:	jne    40d245 <_start@@Base+0x6fb5>
  40d5db:	mov    rax,QWORD PTR [rbp-0x38]
  40d5df:	mov    eax,DWORD PTR [rax+0x1c]
  40d5e2:	test   eax,eax
  40d5e4:	jne    40d635 <_start@@Base+0x73a5>
  40d5e6:	mov    rcx,QWORD PTR [rbp-0x28]
  40d5ea:	mov    rdx,QWORD PTR [rbp-0x48]
  40d5ee:	mov    rsi,QWORD PTR [rbp-0x40]
  40d5f2:	mov    rax,QWORD PTR [rbp-0x38]
  40d5f6:	mov    rdi,rax
  40d5f9:	call   428f23 <flatcc_json_parser_finalize_unions@@Base>
  40d5fe:	mov    QWORD PTR [rbp-0x40],rax
  40d602:	mov    rax,QWORD PTR [rbp-0x38]
  40d606:	mov    rax,QWORD PTR [rax]
  40d609:	mov    rdi,rax
  40d60c:	call   41ed42 <flatcc_builder_end_table@@Base>
  40d611:	mov    edx,eax
  40d613:	mov    rax,QWORD PTR [rbp-0x50]
  40d617:	mov    DWORD PTR [rax],edx
  40d619:	mov    rax,QWORD PTR [rbp-0x50]
  40d61d:	mov    eax,DWORD PTR [rax]
  40d61f:	test   eax,eax
  40d621:	je     40d638 <_start@@Base+0x73a8>
  40d623:	mov    rax,QWORD PTR [rbp-0x40]
  40d627:	jmp    40d652 <_start@@Base+0x73c2>
  40d629:	nop
  40d62a:	jmp    40d639 <_start@@Base+0x73a9>
  40d62c:	nop
  40d62d:	jmp    40d639 <_start@@Base+0x73a9>
  40d62f:	nop
  40d630:	jmp    40d639 <_start@@Base+0x73a9>
  40d632:	nop
  40d633:	jmp    40d639 <_start@@Base+0x73a9>
  40d635:	nop
  40d636:	jmp    40d639 <_start@@Base+0x73a9>
  40d638:	nop
  40d639:	mov    rdx,QWORD PTR [rbp-0x48]
  40d63d:	mov    rsi,QWORD PTR [rbp-0x40]
  40d641:	mov    rax,QWORD PTR [rbp-0x38]
  40d645:	mov    ecx,0x21
  40d64a:	mov    rdi,rax
  40d64d:	call   427257 <flatcc_json_parser_set_error@@Base>
  40d652:	mov    rdi,QWORD PTR [rbp-0x8]
  40d656:	xor    rdi,QWORD PTR fs:0x28
  40d65f:	je     40d666 <_start@@Base+0x73d6>
  40d661:	call   4061a0 <__stack_chk_fail@plt>
  40d666:	leave  
  40d667:	ret    
  40d668:	endbr64 
  40d66c:	push   rbp
  40d66d:	mov    rbp,rsp
  40d670:	sub    rsp,0x50
  40d674:	mov    QWORD PTR [rbp-0x38],rdi
  40d678:	mov    QWORD PTR [rbp-0x40],rsi
  40d67c:	mov    QWORD PTR [rbp-0x48],rdx
  40d680:	mov    QWORD PTR [rbp-0x50],rcx
  40d684:	mov    rax,QWORD PTR fs:0x28
  40d68d:	mov    QWORD PTR [rbp-0x8],rax
  40d691:	xor    eax,eax
  40d693:	mov    rax,QWORD PTR [rbp-0x50]
  40d697:	mov    DWORD PTR [rax],0x0
  40d69d:	mov    rax,QWORD PTR [rbp-0x38]
  40d6a1:	mov    rax,QWORD PTR [rax]
  40d6a4:	mov    esi,0x3
  40d6a9:	mov    rdi,rax
  40d6ac:	call   41e233 <flatcc_builder_start_table@@Base>
  40d6b1:	test   eax,eax
  40d6b3:	jne    40da34 <_start@@Base+0x77a4>
  40d6b9:	lea    rcx,[rbp-0x28]
  40d6bd:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6c1:	mov    rsi,QWORD PTR [rbp-0x40]
  40d6c5:	mov    rax,QWORD PTR [rbp-0x38]
  40d6c9:	mov    rdi,rax
  40d6cc:	call   406949 <_start@@Base+0x6b9>
  40d6d1:	mov    QWORD PTR [rbp-0x40],rax
  40d6d5:	jmp    40d9f7 <_start@@Base+0x7767>
  40d6da:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6de:	mov    rcx,QWORD PTR [rbp-0x40]
  40d6e2:	mov    rax,QWORD PTR [rbp-0x38]
  40d6e6:	mov    rsi,rcx
  40d6e9:	mov    rdi,rax
  40d6ec:	call   4066e9 <_start@@Base+0x459>
  40d6f1:	mov    QWORD PTR [rbp-0x40],rax
  40d6f5:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6f9:	mov    rax,QWORD PTR [rbp-0x40]
  40d6fd:	mov    rsi,rdx
  40d700:	mov    rdi,rax
  40d703:	call   406853 <_start@@Base+0x5c3>
  40d708:	mov    QWORD PTR [rbp-0x20],rax
  40d70c:	movabs rax,0x746573746a736f6e
  40d716:	cmp    QWORD PTR [rbp-0x20],rax
  40d71a:	jne    40d9c0 <_start@@Base+0x7730>
  40d720:	add    QWORD PTR [rbp-0x40],0x8
  40d725:	mov    rdx,QWORD PTR [rbp-0x48]
  40d729:	mov    rax,QWORD PTR [rbp-0x40]
  40d72d:	mov    rsi,rdx
  40d730:	mov    rdi,rax
  40d733:	call   406853 <_start@@Base+0x5c3>
  40d738:	mov    QWORD PTR [rbp-0x20],rax
  40d73c:	movabs rax,0x7072656669787061
  40d746:	cmp    QWORD PTR [rbp-0x20],rax
  40d74a:	jne    40d9a3 <_start@@Base+0x7713>
  40d750:	add    QWORD PTR [rbp-0x40],0x8
  40d755:	mov    rdx,QWORD PTR [rbp-0x48]
  40d759:	mov    rax,QWORD PTR [rbp-0x40]
  40d75d:	mov    rsi,rdx
  40d760:	mov    rdi,rax
  40d763:	call   406853 <_start@@Base+0x5c3>
  40d768:	mov    QWORD PTR [rbp-0x20],rax
  40d76c:	mov    rax,QWORD PTR [rbp-0x20]
  40d770:	mov    ax,0x0
  40d774:	mov    rdx,rax
  40d777:	movabs rax,0x7273696e67320000
  40d781:	cmp    rdx,rax
  40d784:	jne    40d815 <_start@@Base+0x7585>
  40d78a:	mov    rax,QWORD PTR [rbp-0x40]
  40d78e:	mov    QWORD PTR [rbp-0x18],rax
  40d792:	mov    rdx,QWORD PTR [rbp-0x48]
  40d796:	mov    rsi,QWORD PTR [rbp-0x18]
  40d79a:	mov    rax,QWORD PTR [rbp-0x38]
  40d79e:	mov    ecx,0x6
  40d7a3:	mov    rdi,rax
  40d7a6:	call   406d3f <_start@@Base+0xaaf>
  40d7ab:	mov    QWORD PTR [rbp-0x40],rax
  40d7af:	mov    rax,QWORD PTR [rbp-0x18]
  40d7b3:	cmp    rax,QWORD PTR [rbp-0x40]
  40d7b7:	je     40d8bc <_start@@Base+0x762c>
  40d7bd:	lea    rcx,[rbp-0x24]
  40d7c1:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7c5:	mov    rsi,QWORD PTR [rbp-0x40]
  40d7c9:	mov    rax,QWORD PTR [rbp-0x38]
  40d7cd:	mov    rdi,rax
  40d7d0:	call   40e699 <_start@@Base+0x8409>
  40d7d5:	mov    QWORD PTR [rbp-0x40],rax
  40d7d9:	mov    eax,DWORD PTR [rbp-0x24]
  40d7dc:	test   eax,eax
  40d7de:	je     40da37 <_start@@Base+0x77a7>
  40d7e4:	mov    rax,QWORD PTR [rbp-0x38]
  40d7e8:	mov    rax,QWORD PTR [rax]
  40d7eb:	mov    esi,0x1
  40d7f0:	mov    rdi,rax
  40d7f3:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d7f8:	mov    QWORD PTR [rbp-0x10],rax
  40d7fc:	cmp    QWORD PTR [rbp-0x10],0x0
  40d801:	je     40da37 <_start@@Base+0x77a7>
  40d807:	mov    edx,DWORD PTR [rbp-0x24]
  40d80a:	mov    rax,QWORD PTR [rbp-0x10]
  40d80e:	mov    DWORD PTR [rax],edx
  40d810:	jmp    40d9db <_start@@Base+0x774b>
  40d815:	mov    rax,QWORD PTR [rbp-0x20]
  40d819:	and    rax,0xffffffffff000000
  40d81f:	mov    rdx,rax
  40d822:	movabs rax,0x7273696e67000000
  40d82c:	cmp    rdx,rax
  40d82f:	jne    40d8bf <_start@@Base+0x762f>
  40d835:	mov    rax,QWORD PTR [rbp-0x40]
  40d839:	mov    QWORD PTR [rbp-0x18],rax
  40d83d:	mov    rdx,QWORD PTR [rbp-0x48]
  40d841:	mov    rsi,QWORD PTR [rbp-0x18]
  40d845:	mov    rax,QWORD PTR [rbp-0x38]
  40d849:	mov    ecx,0x5
  40d84e:	mov    rdi,rax
  40d851:	call   406d3f <_start@@Base+0xaaf>
  40d856:	mov    QWORD PTR [rbp-0x40],rax
  40d85a:	mov    rax,QWORD PTR [rbp-0x18]
  40d85e:	cmp    rax,QWORD PTR [rbp-0x40]
  40d862:	je     40d8c2 <_start@@Base+0x7632>
  40d864:	lea    rcx,[rbp-0x24]
  40d868:	mov    rdx,QWORD PTR [rbp-0x48]
  40d86c:	mov    rsi,QWORD PTR [rbp-0x40]
  40d870:	mov    rax,QWORD PTR [rbp-0x38]
  40d874:	mov    rdi,rax
  40d877:	call   40da73 <_start@@Base+0x77e3>
  40d87c:	mov    QWORD PTR [rbp-0x40],rax
  40d880:	mov    eax,DWORD PTR [rbp-0x24]
  40d883:	test   eax,eax
  40d885:	je     40da3a <_start@@Base+0x77aa>
  40d88b:	mov    rax,QWORD PTR [rbp-0x38]
  40d88f:	mov    rax,QWORD PTR [rax]
  40d892:	mov    esi,0x0
  40d897:	mov    rdi,rax
  40d89a:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d89f:	mov    QWORD PTR [rbp-0x10],rax
  40d8a3:	cmp    QWORD PTR [rbp-0x10],0x0
  40d8a8:	je     40da3a <_start@@Base+0x77aa>
  40d8ae:	mov    edx,DWORD PTR [rbp-0x24]
  40d8b1:	mov    rax,QWORD PTR [rbp-0x10]
  40d8b5:	mov    DWORD PTR [rax],edx
  40d8b7:	jmp    40d9db <_start@@Base+0x774b>
  40d8bc:	nop
  40d8bd:	jmp    40d8c3 <_start@@Base+0x7633>
  40d8bf:	nop
  40d8c0:	jmp    40d8c3 <_start@@Base+0x7633>
  40d8c2:	nop
  40d8c3:	mov    rax,QWORD PTR [rbp-0x20]
  40d8c7:	mov    ax,0x0
  40d8cb:	mov    rdx,rax
  40d8ce:	movabs rax,0x7273696e67330000
  40d8d8:	cmp    rdx,rax
  40d8db:	jne    40d982 <_start@@Base+0x76f2>
  40d8e1:	mov    rax,QWORD PTR [rbp-0x40]
  40d8e5:	mov    QWORD PTR [rbp-0x18],rax
  40d8e9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8ed:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8f1:	mov    rax,QWORD PTR [rbp-0x38]
  40d8f5:	mov    ecx,0x6
  40d8fa:	mov    rdi,rax
  40d8fd:	call   406d3f <_start@@Base+0xaaf>
  40d902:	mov    QWORD PTR [rbp-0x40],rax
  40d906:	mov    rax,QWORD PTR [rbp-0x18]
  40d90a:	cmp    rax,QWORD PTR [rbp-0x40]
  40d90e:	je     40d965 <_start@@Base+0x76d5>
  40d910:	lea    rcx,[rbp-0x24]
  40d914:	mov    rdx,QWORD PTR [rbp-0x48]
  40d918:	mov    rsi,QWORD PTR [rbp-0x40]
  40d91c:	mov    rax,QWORD PTR [rbp-0x38]
  40d920:	mov    rdi,rax
  40d923:	call   40eacb <_start@@Base+0x883b>
  40d928:	mov    QWORD PTR [rbp-0x40],rax
  40d92c:	mov    eax,DWORD PTR [rbp-0x24]
  40d92f:	test   eax,eax
  40d931:	je     40da3d <_start@@Base+0x77ad>
  40d937:	mov    rax,QWORD PTR [rbp-0x38]
  40d93b:	mov    rax,QWORD PTR [rax]
  40d93e:	mov    esi,0x2
  40d943:	mov    rdi,rax
  40d946:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40d94b:	mov    QWORD PTR [rbp-0x10],rax
  40d94f:	cmp    QWORD PTR [rbp-0x10],0x0
  40d954:	je     40da3d <_start@@Base+0x77ad>
  40d95a:	mov    edx,DWORD PTR [rbp-0x24]
  40d95d:	mov    rax,QWORD PTR [rbp-0x10]
  40d961:	mov    DWORD PTR [rax],edx
  40d963:	jmp    40d9db <_start@@Base+0x774b>
  40d965:	mov    rdx,QWORD PTR [rbp-0x48]
  40d969:	mov    rcx,QWORD PTR [rbp-0x40]
  40d96d:	mov    rax,QWORD PTR [rbp-0x38]
  40d971:	mov    rsi,rcx
  40d974:	mov    rdi,rax
  40d977:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d97c:	mov    QWORD PTR [rbp-0x40],rax
  40d980:	jmp    40d9db <_start@@Base+0x774b>
  40d982:	mov    rdx,QWORD PTR [rbp-0x48]
  40d986:	mov    rcx,QWORD PTR [rbp-0x40]
  40d98a:	mov    rax,QWORD PTR [rbp-0x38]
  40d98e:	mov    rsi,rcx
  40d991:	mov    rdi,rax
  40d994:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d999:	mov    QWORD PTR [rbp-0x40],rax
  40d99d:	endbr64 
  40d9a1:	jmp    40d9db <_start@@Base+0x774b>
  40d9a3:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9a7:	mov    rcx,QWORD PTR [rbp-0x40]
  40d9ab:	mov    rax,QWORD PTR [rbp-0x38]
  40d9af:	mov    rsi,rcx
  40d9b2:	mov    rdi,rax
  40d9b5:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d9ba:	mov    QWORD PTR [rbp-0x40],rax
  40d9be:	jmp    40d9db <_start@@Base+0x774b>
  40d9c0:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9c4:	mov    rcx,QWORD PTR [rbp-0x40]
  40d9c8:	mov    rax,QWORD PTR [rbp-0x38]
  40d9cc:	mov    rsi,rcx
  40d9cf:	mov    rdi,rax
  40d9d2:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40d9d7:	mov    QWORD PTR [rbp-0x40],rax
  40d9db:	lea    rcx,[rbp-0x28]
  40d9df:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9e3:	mov    rsi,QWORD PTR [rbp-0x40]
  40d9e7:	mov    rax,QWORD PTR [rbp-0x38]
  40d9eb:	mov    rdi,rax
  40d9ee:	call   406a06 <_start@@Base+0x776>
  40d9f3:	mov    QWORD PTR [rbp-0x40],rax
  40d9f7:	mov    eax,DWORD PTR [rbp-0x28]
  40d9fa:	test   eax,eax
  40d9fc:	jne    40d6da <_start@@Base+0x744a>
  40da02:	mov    rax,QWORD PTR [rbp-0x38]
  40da06:	mov    eax,DWORD PTR [rax+0x1c]
  40da09:	test   eax,eax
  40da0b:	jne    40da40 <_start@@Base+0x77b0>
  40da0d:	mov    rax,QWORD PTR [rbp-0x38]
  40da11:	mov    rax,QWORD PTR [rax]
  40da14:	mov    rdi,rax
  40da17:	call   41ed42 <flatcc_builder_end_table@@Base>
  40da1c:	mov    edx,eax
  40da1e:	mov    rax,QWORD PTR [rbp-0x50]
  40da22:	mov    DWORD PTR [rax],edx
  40da24:	mov    rax,QWORD PTR [rbp-0x50]
  40da28:	mov    eax,DWORD PTR [rax]
  40da2a:	test   eax,eax
  40da2c:	je     40da43 <_start@@Base+0x77b3>
  40da2e:	mov    rax,QWORD PTR [rbp-0x40]
  40da32:	jmp    40da5d <_start@@Base+0x77cd>
  40da34:	nop
  40da35:	jmp    40da44 <_start@@Base+0x77b4>
  40da37:	nop
  40da38:	jmp    40da44 <_start@@Base+0x77b4>
  40da3a:	nop
  40da3b:	jmp    40da44 <_start@@Base+0x77b4>
  40da3d:	nop
  40da3e:	jmp    40da44 <_start@@Base+0x77b4>
  40da40:	nop
  40da41:	jmp    40da44 <_start@@Base+0x77b4>
  40da43:	nop
  40da44:	mov    rdx,QWORD PTR [rbp-0x48]
  40da48:	mov    rsi,QWORD PTR [rbp-0x40]
  40da4c:	mov    rax,QWORD PTR [rbp-0x38]
  40da50:	mov    ecx,0x21
  40da55:	mov    rdi,rax
  40da58:	call   427257 <flatcc_json_parser_set_error@@Base>
  40da5d:	mov    rdi,QWORD PTR [rbp-0x8]
  40da61:	xor    rdi,QWORD PTR fs:0x28
  40da6a:	je     40da71 <_start@@Base+0x77e1>
  40da6c:	call   4061a0 <__stack_chk_fail@plt>
  40da71:	leave  
  40da72:	ret    
  40da73:	endbr64 
  40da77:	push   rbp
  40da78:	mov    rbp,rsp
  40da7b:	sub    rsp,0x60
  40da7f:	mov    QWORD PTR [rbp-0x48],rdi
  40da83:	mov    QWORD PTR [rbp-0x50],rsi
  40da87:	mov    QWORD PTR [rbp-0x58],rdx
  40da8b:	mov    QWORD PTR [rbp-0x60],rcx
  40da8f:	mov    rax,QWORD PTR fs:0x28
  40da98:	mov    QWORD PTR [rbp-0x8],rax
  40da9c:	xor    eax,eax
  40da9e:	mov    rax,QWORD PTR [rbp-0x60]
  40daa2:	mov    DWORD PTR [rax],0x0
  40daa8:	mov    rax,QWORD PTR [rbp-0x48]
  40daac:	mov    rax,QWORD PTR [rax]
  40daaf:	mov    esi,0x9
  40dab4:	mov    rdi,rax
  40dab7:	call   41e233 <flatcc_builder_start_table@@Base>
  40dabc:	test   eax,eax
  40dabe:	jne    40e636 <_start@@Base+0x83a6>
  40dac4:	lea    rcx,[rbp-0x38]
  40dac8:	mov    rdx,QWORD PTR [rbp-0x58]
  40dacc:	mov    rsi,QWORD PTR [rbp-0x50]
  40dad0:	mov    rax,QWORD PTR [rbp-0x48]
  40dad4:	mov    rdi,rax
  40dad7:	call   406949 <_start@@Base+0x6b9>
  40dadc:	mov    QWORD PTR [rbp-0x50],rax
  40dae0:	jmp    40e5f9 <_start@@Base+0x8369>
  40dae5:	mov    rdx,QWORD PTR [rbp-0x58]
  40dae9:	mov    rcx,QWORD PTR [rbp-0x50]
  40daed:	mov    rax,QWORD PTR [rbp-0x48]
  40daf1:	mov    rsi,rcx
  40daf4:	mov    rdi,rax
  40daf7:	call   4066e9 <_start@@Base+0x459>
  40dafc:	mov    QWORD PTR [rbp-0x50],rax
  40db00:	mov    rdx,QWORD PTR [rbp-0x58]
  40db04:	mov    rax,QWORD PTR [rbp-0x50]
  40db08:	mov    rsi,rdx
  40db0b:	mov    rdi,rax
  40db0e:	call   406853 <_start@@Base+0x5c3>
  40db13:	mov    QWORD PTR [rbp-0x28],rax
  40db17:	movabs rax,0x63636362ffffffff
  40db21:	cmp    QWORD PTR [rbp-0x28],rax
  40db25:	ja     40dfb2 <_start@@Base+0x7d22>
  40db2b:	movabs rax,0x6161616131323334
  40db35:	cmp    QWORD PTR [rbp-0x28],rax
  40db39:	jne    40dccd <_start@@Base+0x7a3d>
  40db3f:	add    QWORD PTR [rbp-0x50],0x8
  40db44:	mov    rdx,QWORD PTR [rbp-0x58]
  40db48:	mov    rax,QWORD PTR [rbp-0x50]
  40db4c:	mov    rsi,rdx
  40db4f:	mov    rdi,rax
  40db52:	call   406853 <_start@@Base+0x5c3>
  40db57:	mov    QWORD PTR [rbp-0x28],rax
  40db5b:	movabs rax,0xff00000000000000
  40db65:	and    rax,QWORD PTR [rbp-0x28]
  40db69:	mov    rdx,rax
  40db6c:	movabs rax,0x3500000000000000
  40db76:	cmp    rdx,rax
  40db79:	jne    40dcad <_start@@Base+0x7a1d>
  40db7f:	mov    rax,QWORD PTR [rbp-0x50]
  40db83:	mov    QWORD PTR [rbp-0x20],rax
  40db87:	mov    rdx,QWORD PTR [rbp-0x58]
  40db8b:	mov    rsi,QWORD PTR [rbp-0x20]
  40db8f:	mov    rax,QWORD PTR [rbp-0x48]
  40db93:	mov    ecx,0x1
  40db98:	mov    rdi,rax
  40db9b:	call   406d3f <_start@@Base+0xaaf>
  40dba0:	mov    QWORD PTR [rbp-0x50],rax
  40dba4:	mov    rax,QWORD PTR [rbp-0x20]
  40dba8:	cmp    rax,QWORD PTR [rbp-0x50]
  40dbac:	je     40dc8d <_start@@Base+0x79fd>
  40dbb2:	mov    DWORD PTR [rbp-0x30],0x0
  40dbb9:	mov    rax,QWORD PTR [rbp-0x50]
  40dbbd:	mov    QWORD PTR [rbp-0x20],rax
  40dbc1:	lea    rcx,[rbp-0x30]
  40dbc5:	mov    rdx,QWORD PTR [rbp-0x58]
  40dbc9:	mov    rsi,QWORD PTR [rbp-0x20]
  40dbcd:	mov    rax,QWORD PTR [rbp-0x48]
  40dbd1:	mov    rdi,rax
  40dbd4:	call   40749b <_start@@Base+0x120b>
  40dbd9:	mov    QWORD PTR [rbp-0x50],rax
  40dbdd:	mov    rax,QWORD PTR [rbp-0x20]
  40dbe1:	cmp    rax,QWORD PTR [rbp-0x50]
  40dbe5:	jne    40dc31 <_start@@Base+0x79a1>
  40dbe7:	mov    rax,QWORD PTR [rbp-0x50]
  40dbeb:	mov    QWORD PTR [rbp-0x20],rax
  40dbef:	lea    rcx,[rbp-0x30]
  40dbf3:	mov    rdx,QWORD PTR [rbp-0x58]
  40dbf7:	mov    rsi,QWORD PTR [rbp-0x20]
  40dbfb:	mov    rax,QWORD PTR [rbp-0x48]
  40dbff:	mov    r8,rcx
  40dc02:	lea    rcx,[rip+0x37777]        # 445380 <__data_start@@Base+0x2c0>
  40dc09:	mov    rdi,rax
  40dc0c:	call   407c4d <_start@@Base+0x19bd>
  40dc11:	mov    QWORD PTR [rbp-0x50],rax
  40dc15:	mov    rax,QWORD PTR [rbp-0x50]
  40dc19:	cmp    rax,QWORD PTR [rbp-0x20]
  40dc1d:	je     40e639 <_start@@Base+0x83a9>
  40dc23:	mov    rax,QWORD PTR [rbp-0x50]
  40dc27:	cmp    rax,QWORD PTR [rbp-0x58]
  40dc2b:	je     40e639 <_start@@Base+0x83a9>
  40dc31:	mov    eax,DWORD PTR [rbp-0x30]
  40dc34:	test   eax,eax
  40dc36:	jne    40dc4a <_start@@Base+0x79ba>
  40dc38:	mov    rax,QWORD PTR [rbp-0x48]
  40dc3c:	mov    eax,DWORD PTR [rax+0x10]
  40dc3f:	and    eax,0x2
  40dc42:	test   eax,eax
  40dc44:	je     40e5dd <_start@@Base+0x834d>
  40dc4a:	mov    rax,QWORD PTR [rbp-0x48]
  40dc4e:	mov    rax,QWORD PTR [rax]
  40dc51:	mov    ecx,0x4
  40dc56:	mov    edx,0x4
  40dc5b:	mov    esi,0x1
  40dc60:	mov    rdi,rax
  40dc63:	call   4203e3 <flatcc_builder_table_add@@Base>
  40dc68:	mov    QWORD PTR [rbp-0x18],rax
  40dc6c:	cmp    QWORD PTR [rbp-0x18],0x0
  40dc71:	je     40e63c <_start@@Base+0x83ac>
  40dc77:	mov    edx,DWORD PTR [rbp-0x30]
  40dc7a:	mov    rax,QWORD PTR [rbp-0x18]
  40dc7e:	mov    esi,edx
  40dc80:	mov    rdi,rax
  40dc83:	call   4063ef <_start@@Base+0x15f>
  40dc88:	jmp    40e5dd <_start@@Base+0x834d>
  40dc8d:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc91:	mov    rcx,QWORD PTR [rbp-0x50]
  40dc95:	mov    rax,QWORD PTR [rbp-0x48]
  40dc99:	mov    rsi,rcx
  40dc9c:	mov    rdi,rax
  40dc9f:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40dca4:	mov    QWORD PTR [rbp-0x50],rax
  40dca8:	jmp    40e5dd <_start@@Base+0x834d>
  40dcad:	mov    rdx,QWORD PTR [rbp-0x58]
  40dcb1:	mov    rcx,QWORD PTR [rbp-0x50]
  40dcb5:	mov    rax,QWORD PTR [rbp-0x48]
  40dcb9:	mov    rsi,rcx
  40dcbc:	mov    rdi,rax
  40dcbf:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40dcc4:	mov    QWORD PTR [rbp-0x50],rax
  40dcc8:	jmp    40e5dd <_start@@Base+0x834d>
  40dccd:	movabs rax,0xffffffff00000000
  40dcd7:	and    rax,QWORD PTR [rbp-0x28]
  40dcdb:	mov    rdx,rax
  40dcde:	movabs rax,0x6161616100000000
  40dce8:	cmp    rdx,rax
  40dceb:	jne    40dd78 <_start@@Base+0x7ae8>
  40dcf1:	mov    rax,QWORD PTR [rbp-0x50]
  40dcf5:	mov    QWORD PTR [rbp-0x20],rax
  40dcf9:	mov    rdx,QWORD PTR [rbp-0x58]
  40dcfd:	mov    rsi,QWORD PTR [rbp-0x20]
  40dd01:	mov    rax,QWORD PTR [rbp-0x48]
  40dd05:	mov    ecx,0x4
  40dd0a:	mov    rdi,rax
  40dd0d:	call   406d3f <_start@@Base+0xaaf>
  40dd12:	mov    QWORD PTR [rbp-0x50],rax
  40dd16:	mov    rax,QWORD PTR [rbp-0x20]
  40dd1a:	cmp    rax,QWORD PTR [rbp-0x50]
  40dd1e:	je     40dd7b <_start@@Base+0x7aeb>
  40dd20:	lea    rcx,[rbp-0x34]
  40dd24:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd28:	mov    rsi,QWORD PTR [rbp-0x50]
  40dd2c:	mov    rax,QWORD PTR [rbp-0x48]
  40dd30:	mov    rdi,rax
  40dd33:	call   428c7d <flatcc_json_parser_build_string@@Base>
  40dd38:	mov    QWORD PTR [rbp-0x50],rax
  40dd3c:	mov    eax,DWORD PTR [rbp-0x34]
  40dd3f:	test   eax,eax
  40dd41:	je     40e63f <_start@@Base+0x83af>
  40dd47:	mov    rax,QWORD PTR [rbp-0x48]
  40dd4b:	mov    rax,QWORD PTR [rax]
  40dd4e:	mov    esi,0x0
  40dd53:	mov    rdi,rax
  40dd56:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40dd5b:	mov    QWORD PTR [rbp-0x10],rax
  40dd5f:	cmp    QWORD PTR [rbp-0x10],0x0
  40dd64:	je     40e63f <_start@@Base+0x83af>
  40dd6a:	mov    edx,DWORD PTR [rbp-0x34]
  40dd6d:	mov    rax,QWORD PTR [rbp-0x10]
  40dd71:	mov    DWORD PTR [rax],edx
  40dd73:	jmp    40e5dd <_start@@Base+0x834d>
  40dd78:	nop
  40dd79:	jmp    40dd7c <_start@@Base+0x7aec>
  40dd7b:	nop
  40dd7c:	movabs rax,0x6262626231323334
  40dd86:	cmp    QWORD PTR [rbp-0x28],rax
  40dd8a:	jne    40dec3 <_start@@Base+0x7c33>
  40dd90:	mov    rax,QWORD PTR [rbp-0x50]
  40dd94:	mov    QWORD PTR [rbp-0x20],rax
  40dd98:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd9c:	mov    rsi,QWORD PTR [rbp-0x20]
  40dda0:	mov    rax,QWORD PTR [rbp-0x48]
  40dda4:	mov    ecx,0x8
  40dda9:	mov    rdi,rax
  40ddac:	call   406d3f <_start@@Base+0xaaf>
  40ddb1:	mov    QWORD PTR [rbp-0x50],rax
  40ddb5:	mov    rax,QWORD PTR [rbp-0x20]
  40ddb9:	cmp    rax,QWORD PTR [rbp-0x50]
  40ddbd:	je     40dea3 <_start@@Base+0x7c13>
  40ddc3:	mov    QWORD PTR [rbp-0x30],0x0
  40ddcb:	mov    rax,QWORD PTR [rbp-0x50]
  40ddcf:	mov    QWORD PTR [rbp-0x20],rax
  40ddd3:	lea    rcx,[rbp-0x30]
  40ddd7:	mov    rdx,QWORD PTR [rbp-0x58]
  40dddb:	mov    rsi,QWORD PTR [rbp-0x20]
  40dddf:	mov    rax,QWORD PTR [rbp-0x48]
  40dde3:	mov    rdi,rax
  40dde6:	call   4076e9 <_start@@Base+0x1459>
  40ddeb:	mov    QWORD PTR [rbp-0x50],rax
  40ddef:	mov    rax,QWORD PTR [rbp-0x20]
  40ddf3:	cmp    rax,QWORD PTR [rbp-0x50]
  40ddf7:	jne    40de43 <_start@@Base+0x7bb3>
  40ddf9:	mov    rax,QWORD PTR [rbp-0x50]
  40ddfd:	mov    QWORD PTR [rbp-0x20],rax
  40de01:	lea    rcx,[rbp-0x30]
  40de05:	mov    rdx,QWORD PTR [rbp-0x58]
  40de09:	mov    rsi,QWORD PTR [rbp-0x20]
  40de0d:	mov    rax,QWORD PTR [rbp-0x48]
  40de11:	mov    r8,rcx
  40de14:	lea    rcx,[rip+0x37585]        # 4453a0 <__data_start@@Base+0x2e0>
  40de1b:	mov    rdi,rax
  40de1e:	call   408061 <_start@@Base+0x1dd1>
  40de23:	mov    QWORD PTR [rbp-0x50],rax
  40de27:	mov    rax,QWORD PTR [rbp-0x50]
  40de2b:	cmp    rax,QWORD PTR [rbp-0x20]
  40de2f:	je     40e642 <_start@@Base+0x83b2>
  40de35:	mov    rax,QWORD PTR [rbp-0x50]
  40de39:	cmp    rax,QWORD PTR [rbp-0x58]
  40de3d:	je     40e642 <_start@@Base+0x83b2>
  40de43:	mov    rax,QWORD PTR [rbp-0x30]
  40de47:	test   rax,rax
  40de4a:	jne    40de5e <_start@@Base+0x7bce>
  40de4c:	mov    rax,QWORD PTR [rbp-0x48]
  40de50:	mov    eax,DWORD PTR [rax+0x10]
  40de53:	and    eax,0x2
  40de56:	test   eax,eax
  40de58:	je     40e5dd <_start@@Base+0x834d>
  40de5e:	mov    rax,QWORD PTR [rbp-0x48]
  40de62:	mov    rax,QWORD PTR [rax]
  40de65:	mov    ecx,0x8
  40de6a:	mov    edx,0x8
  40de6f:	mov    esi,0x3
  40de74:	mov    rdi,rax
  40de77:	call   4203e3 <flatcc_builder_table_add@@Base>
  40de7c:	mov    QWORD PTR [rbp-0x18],rax
  40de80:	cmp    QWORD PTR [rbp-0x18],0x0
  40de85:	je     40e645 <_start@@Base+0x83b5>
  40de8b:	mov    rdx,QWORD PTR [rbp-0x30]
  40de8f:	mov    rax,QWORD PTR [rbp-0x18]
  40de93:	mov    rsi,rdx
  40de96:	mov    rdi,rax
  40de99:	call   4064f5 <_start@@Base+0x265>
  40de9e:	jmp    40e5dd <_start@@Base+0x834d>
  40dea3:	mov    rdx,QWORD PTR [rbp-0x58]
  40dea7:	mov    rcx,QWORD PTR [rbp-0x50]
  40deab:	mov    rax,QWORD PTR [rbp-0x48]
  40deaf:	mov    rsi,rcx
  40deb2:	mov    rdi,rax
  40deb5:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40deba:	mov    QWORD PTR [rbp-0x50],rax
  40debe:	jmp    40e5dd <_start@@Base+0x834d>
  40dec3:	movabs rax,0xffffffff00000000
  40decd:	and    rax,QWORD PTR [rbp-0x28]
  40ded1:	mov    rdx,rax
  40ded4:	movabs rax,0x6262626200000000
  40dede:	cmp    rdx,rax
  40dee1:	jne    40df8e <_start@@Base+0x7cfe>
  40dee7:	mov    rax,QWORD PTR [rbp-0x50]
  40deeb:	mov    QWORD PTR [rbp-0x20],rax
  40deef:	mov    rdx,QWORD PTR [rbp-0x58]
  40def3:	mov    rsi,QWORD PTR [rbp-0x20]
  40def7:	mov    rax,QWORD PTR [rbp-0x48]
  40defb:	mov    ecx,0x4
  40df00:	mov    rdi,rax
  40df03:	call   406d3f <_start@@Base+0xaaf>
  40df08:	mov    QWORD PTR [rbp-0x50],rax
  40df0c:	mov    rax,QWORD PTR [rbp-0x20]
  40df10:	cmp    rax,QWORD PTR [rbp-0x50]
  40df14:	je     40df6e <_start@@Base+0x7cde>
  40df16:	lea    rcx,[rbp-0x34]
  40df1a:	mov    rdx,QWORD PTR [rbp-0x58]
  40df1e:	mov    rsi,QWORD PTR [rbp-0x50]
  40df22:	mov    rax,QWORD PTR [rbp-0x48]
  40df26:	mov    rdi,rax
  40df29:	call   428c7d <flatcc_json_parser_build_string@@Base>
  40df2e:	mov    QWORD PTR [rbp-0x50],rax
  40df32:	mov    eax,DWORD PTR [rbp-0x34]
  40df35:	test   eax,eax
  40df37:	je     40e648 <_start@@Base+0x83b8>
  40df3d:	mov    rax,QWORD PTR [rbp-0x48]
  40df41:	mov    rax,QWORD PTR [rax]
  40df44:	mov    esi,0x2
  40df49:	mov    rdi,rax
  40df4c:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40df51:	mov    QWORD PTR [rbp-0x10],rax
  40df55:	cmp    QWORD PTR [rbp-0x10],0x0
  40df5a:	je     40e648 <_start@@Base+0x83b8>
  40df60:	mov    edx,DWORD PTR [rbp-0x34]
  40df63:	mov    rax,QWORD PTR [rbp-0x10]
  40df67:	mov    DWORD PTR [rax],edx
  40df69:	jmp    40e5dd <_start@@Base+0x834d>
  40df6e:	mov    rdx,QWORD PTR [rbp-0x58]
  40df72:	mov    rcx,QWORD PTR [rbp-0x50]
  40df76:	mov    rax,QWORD PTR [rbp-0x48]
  40df7a:	mov    rsi,rcx
  40df7d:	mov    rdi,rax
  40df80:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40df85:	mov    QWORD PTR [rbp-0x50],rax
  40df89:	jmp    40e5dd <_start@@Base+0x834d>
  40df8e:	mov    rdx,QWORD PTR [rbp-0x58]
  40df92:	mov    rcx,QWORD PTR [rbp-0x50]
  40df96:	mov    rax,QWORD PTR [rbp-0x48]
  40df9a:	mov    rsi,rcx
  40df9d:	mov    rdi,rax
  40dfa0:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40dfa5:	mov    QWORD PTR [rbp-0x50],rax
  40dfa9:	endbr64 
  40dfad:	jmp    40e5dd <_start@@Base+0x834d>
  40dfb2:	movabs rax,0x6363636331323334
  40dfbc:	cmp    QWORD PTR [rbp-0x28],rax
  40dfc0:	jne    40e267 <_start@@Base+0x7fd7>
  40dfc6:	mov    rax,QWORD PTR [rbp-0x50]
  40dfca:	mov    QWORD PTR [rbp-0x20],rax
  40dfce:	mov    rdx,QWORD PTR [rbp-0x58]
  40dfd2:	mov    rsi,QWORD PTR [rbp-0x20]
  40dfd6:	mov    rax,QWORD PTR [rbp-0x48]
  40dfda:	mov    ecx,0x8
  40dfdf:	mov    rdi,rax
  40dfe2:	call   406d3f <_start@@Base+0xaaf>
  40dfe7:	mov    QWORD PTR [rbp-0x50],rax
  40dfeb:	mov    rax,QWORD PTR [rbp-0x20]
  40dfef:	cmp    rax,QWORD PTR [rbp-0x50]
  40dff3:	je     40e0d9 <_start@@Base+0x7e49>
  40dff9:	mov    QWORD PTR [rbp-0x30],0x0
  40e001:	mov    rax,QWORD PTR [rbp-0x50]
  40e005:	mov    QWORD PTR [rbp-0x20],rax
  40e009:	lea    rcx,[rbp-0x30]
  40e00d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e011:	mov    rsi,QWORD PTR [rbp-0x20]
  40e015:	mov    rax,QWORD PTR [rbp-0x48]
  40e019:	mov    rdi,rax
  40e01c:	call   4076e9 <_start@@Base+0x1459>
  40e021:	mov    QWORD PTR [rbp-0x50],rax
  40e025:	mov    rax,QWORD PTR [rbp-0x20]
  40e029:	cmp    rax,QWORD PTR [rbp-0x50]
  40e02d:	jne    40e079 <_start@@Base+0x7de9>
  40e02f:	mov    rax,QWORD PTR [rbp-0x50]
  40e033:	mov    QWORD PTR [rbp-0x20],rax
  40e037:	lea    rcx,[rbp-0x30]
  40e03b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e03f:	mov    rsi,QWORD PTR [rbp-0x20]
  40e043:	mov    rax,QWORD PTR [rbp-0x48]
  40e047:	mov    r8,rcx
  40e04a:	lea    rcx,[rip+0x3736f]        # 4453c0 <__data_start@@Base+0x300>
  40e051:	mov    rdi,rax
  40e054:	call   408061 <_start@@Base+0x1dd1>
  40e059:	mov    QWORD PTR [rbp-0x50],rax
  40e05d:	mov    rax,QWORD PTR [rbp-0x50]
  40e061:	cmp    rax,QWORD PTR [rbp-0x20]
  40e065:	je     40e64b <_start@@Base+0x83bb>
  40e06b:	mov    rax,QWORD PTR [rbp-0x50]
  40e06f:	cmp    rax,QWORD PTR [rbp-0x58]
  40e073:	je     40e64b <_start@@Base+0x83bb>
  40e079:	mov    rax,QWORD PTR [rbp-0x30]
  40e07d:	test   rax,rax
  40e080:	jne    40e094 <_start@@Base+0x7e04>
  40e082:	mov    rax,QWORD PTR [rbp-0x48]
  40e086:	mov    eax,DWORD PTR [rax+0x10]
  40e089:	and    eax,0x2
  40e08c:	test   eax,eax
  40e08e:	je     40e5dd <_start@@Base+0x834d>
  40e094:	mov    rax,QWORD PTR [rbp-0x48]
  40e098:	mov    rax,QWORD PTR [rax]
  40e09b:	mov    ecx,0x8
  40e0a0:	mov    edx,0x8
  40e0a5:	mov    esi,0x5
  40e0aa:	mov    rdi,rax
  40e0ad:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e0b2:	mov    QWORD PTR [rbp-0x18],rax
  40e0b6:	cmp    QWORD PTR [rbp-0x18],0x0
  40e0bb:	je     40e64e <_start@@Base+0x83be>
  40e0c1:	mov    rdx,QWORD PTR [rbp-0x30]
  40e0c5:	mov    rax,QWORD PTR [rbp-0x18]
  40e0c9:	mov    rsi,rdx
  40e0cc:	mov    rdi,rax
  40e0cf:	call   4064f5 <_start@@Base+0x265>
  40e0d4:	jmp    40e5dd <_start@@Base+0x834d>
  40e0d9:	add    QWORD PTR [rbp-0x50],0x8
  40e0de:	mov    rdx,QWORD PTR [rbp-0x58]
  40e0e2:	mov    rax,QWORD PTR [rbp-0x50]
  40e0e6:	mov    rsi,rdx
  40e0e9:	mov    rdi,rax
  40e0ec:	call   406853 <_start@@Base+0x5c3>
  40e0f1:	mov    QWORD PTR [rbp-0x28],rax
  40e0f5:	movabs rax,0xff00000000000000
  40e0ff:	and    rax,QWORD PTR [rbp-0x28]
  40e103:	mov    rdx,rax
  40e106:	movabs rax,0x3500000000000000
  40e110:	cmp    rdx,rax
  40e113:	jne    40e247 <_start@@Base+0x7fb7>
  40e119:	mov    rax,QWORD PTR [rbp-0x50]
  40e11d:	mov    QWORD PTR [rbp-0x20],rax
  40e121:	mov    rdx,QWORD PTR [rbp-0x58]
  40e125:	mov    rsi,QWORD PTR [rbp-0x20]
  40e129:	mov    rax,QWORD PTR [rbp-0x48]
  40e12d:	mov    ecx,0x1
  40e132:	mov    rdi,rax
  40e135:	call   406d3f <_start@@Base+0xaaf>
  40e13a:	mov    QWORD PTR [rbp-0x50],rax
  40e13e:	mov    rax,QWORD PTR [rbp-0x20]
  40e142:	cmp    rax,QWORD PTR [rbp-0x50]
  40e146:	je     40e227 <_start@@Base+0x7f97>
  40e14c:	mov    DWORD PTR [rbp-0x30],0x0
  40e153:	mov    rax,QWORD PTR [rbp-0x50]
  40e157:	mov    QWORD PTR [rbp-0x20],rax
  40e15b:	lea    rcx,[rbp-0x30]
  40e15f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e163:	mov    rsi,QWORD PTR [rbp-0x20]
  40e167:	mov    rax,QWORD PTR [rbp-0x48]
  40e16b:	mov    rdi,rax
  40e16e:	call   40749b <_start@@Base+0x120b>
  40e173:	mov    QWORD PTR [rbp-0x50],rax
  40e177:	mov    rax,QWORD PTR [rbp-0x20]
  40e17b:	cmp    rax,QWORD PTR [rbp-0x50]
  40e17f:	jne    40e1cb <_start@@Base+0x7f3b>
  40e181:	mov    rax,QWORD PTR [rbp-0x50]
  40e185:	mov    QWORD PTR [rbp-0x20],rax
  40e189:	lea    rcx,[rbp-0x30]
  40e18d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e191:	mov    rsi,QWORD PTR [rbp-0x20]
  40e195:	mov    rax,QWORD PTR [rbp-0x48]
  40e199:	mov    r8,rcx
  40e19c:	lea    rcx,[rip+0x3723d]        # 4453e0 <__data_start@@Base+0x320>
  40e1a3:	mov    rdi,rax
  40e1a6:	call   407c4d <_start@@Base+0x19bd>
  40e1ab:	mov    QWORD PTR [rbp-0x50],rax
  40e1af:	mov    rax,QWORD PTR [rbp-0x50]
  40e1b3:	cmp    rax,QWORD PTR [rbp-0x20]
  40e1b7:	je     40e651 <_start@@Base+0x83c1>
  40e1bd:	mov    rax,QWORD PTR [rbp-0x50]
  40e1c1:	cmp    rax,QWORD PTR [rbp-0x58]
  40e1c5:	je     40e651 <_start@@Base+0x83c1>
  40e1cb:	mov    eax,DWORD PTR [rbp-0x30]
  40e1ce:	test   eax,eax
  40e1d0:	jne    40e1e4 <_start@@Base+0x7f54>
  40e1d2:	mov    rax,QWORD PTR [rbp-0x48]
  40e1d6:	mov    eax,DWORD PTR [rax+0x10]
  40e1d9:	and    eax,0x2
  40e1dc:	test   eax,eax
  40e1de:	je     40e5dd <_start@@Base+0x834d>
  40e1e4:	mov    rax,QWORD PTR [rbp-0x48]
  40e1e8:	mov    rax,QWORD PTR [rax]
  40e1eb:	mov    ecx,0x4
  40e1f0:	mov    edx,0x4
  40e1f5:	mov    esi,0x6
  40e1fa:	mov    rdi,rax
  40e1fd:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e202:	mov    QWORD PTR [rbp-0x18],rax
  40e206:	cmp    QWORD PTR [rbp-0x18],0x0
  40e20b:	je     40e654 <_start@@Base+0x83c4>
  40e211:	mov    edx,DWORD PTR [rbp-0x30]
  40e214:	mov    rax,QWORD PTR [rbp-0x18]
  40e218:	mov    esi,edx
  40e21a:	mov    rdi,rax
  40e21d:	call   4063ef <_start@@Base+0x15f>
  40e222:	jmp    40e5dd <_start@@Base+0x834d>
  40e227:	mov    rdx,QWORD PTR [rbp-0x58]
  40e22b:	mov    rcx,QWORD PTR [rbp-0x50]
  40e22f:	mov    rax,QWORD PTR [rbp-0x48]
  40e233:	mov    rsi,rcx
  40e236:	mov    rdi,rax
  40e239:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e23e:	mov    QWORD PTR [rbp-0x50],rax
  40e242:	jmp    40e5dd <_start@@Base+0x834d>
  40e247:	mov    rdx,QWORD PTR [rbp-0x58]
  40e24b:	mov    rcx,QWORD PTR [rbp-0x50]
  40e24f:	mov    rax,QWORD PTR [rbp-0x48]
  40e253:	mov    rsi,rcx
  40e256:	mov    rdi,rax
  40e259:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e25e:	mov    QWORD PTR [rbp-0x50],rax
  40e262:	jmp    40e5dd <_start@@Base+0x834d>
  40e267:	movabs rax,0xffffffff00000000
  40e271:	and    rax,QWORD PTR [rbp-0x28]
  40e275:	mov    rdx,rax
  40e278:	movabs rax,0x6363636300000000
  40e282:	cmp    rdx,rax
  40e285:	jne    40e312 <_start@@Base+0x8082>
  40e28b:	mov    rax,QWORD PTR [rbp-0x50]
  40e28f:	mov    QWORD PTR [rbp-0x20],rax
  40e293:	mov    rdx,QWORD PTR [rbp-0x58]
  40e297:	mov    rsi,QWORD PTR [rbp-0x20]
  40e29b:	mov    rax,QWORD PTR [rbp-0x48]
  40e29f:	mov    ecx,0x4
  40e2a4:	mov    rdi,rax
  40e2a7:	call   406d3f <_start@@Base+0xaaf>
  40e2ac:	mov    QWORD PTR [rbp-0x50],rax
  40e2b0:	mov    rax,QWORD PTR [rbp-0x20]
  40e2b4:	cmp    rax,QWORD PTR [rbp-0x50]
  40e2b8:	je     40e315 <_start@@Base+0x8085>
  40e2ba:	lea    rcx,[rbp-0x34]
  40e2be:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2c2:	mov    rsi,QWORD PTR [rbp-0x50]
  40e2c6:	mov    rax,QWORD PTR [rbp-0x48]
  40e2ca:	mov    rdi,rax
  40e2cd:	call   428c7d <flatcc_json_parser_build_string@@Base>
  40e2d2:	mov    QWORD PTR [rbp-0x50],rax
  40e2d6:	mov    eax,DWORD PTR [rbp-0x34]
  40e2d9:	test   eax,eax
  40e2db:	je     40e657 <_start@@Base+0x83c7>
  40e2e1:	mov    rax,QWORD PTR [rbp-0x48]
  40e2e5:	mov    rax,QWORD PTR [rax]
  40e2e8:	mov    esi,0x4
  40e2ed:	mov    rdi,rax
  40e2f0:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40e2f5:	mov    QWORD PTR [rbp-0x10],rax
  40e2f9:	cmp    QWORD PTR [rbp-0x10],0x0
  40e2fe:	je     40e657 <_start@@Base+0x83c7>
  40e304:	mov    edx,DWORD PTR [rbp-0x34]
  40e307:	mov    rax,QWORD PTR [rbp-0x10]
  40e30b:	mov    DWORD PTR [rax],edx
  40e30d:	jmp    40e5dd <_start@@Base+0x834d>
  40e312:	nop
  40e313:	jmp    40e316 <_start@@Base+0x8086>
  40e315:	nop
  40e316:	movabs rax,0x6464646431323334
  40e320:	cmp    QWORD PTR [rbp-0x28],rax
  40e324:	jne    40e5c2 <_start@@Base+0x8332>
  40e32a:	mov    rax,QWORD PTR [rbp-0x50]
  40e32e:	mov    QWORD PTR [rbp-0x20],rax
  40e332:	mov    rdx,QWORD PTR [rbp-0x58]
  40e336:	mov    rsi,QWORD PTR [rbp-0x20]
  40e33a:	mov    rax,QWORD PTR [rbp-0x48]
  40e33e:	mov    ecx,0x8
  40e343:	mov    rdi,rax
  40e346:	call   406d3f <_start@@Base+0xaaf>
  40e34b:	mov    QWORD PTR [rbp-0x50],rax
  40e34f:	mov    rax,QWORD PTR [rbp-0x20]
  40e353:	cmp    rax,QWORD PTR [rbp-0x50]
  40e357:	je     40e43d <_start@@Base+0x81ad>
  40e35d:	mov    QWORD PTR [rbp-0x30],0x0
  40e365:	mov    rax,QWORD PTR [rbp-0x50]
  40e369:	mov    QWORD PTR [rbp-0x20],rax
  40e36d:	lea    rcx,[rbp-0x30]
  40e371:	mov    rdx,QWORD PTR [rbp-0x58]
  40e375:	mov    rsi,QWORD PTR [rbp-0x20]
  40e379:	mov    rax,QWORD PTR [rbp-0x48]
  40e37d:	mov    rdi,rax
  40e380:	call   4076e9 <_start@@Base+0x1459>
  40e385:	mov    QWORD PTR [rbp-0x50],rax
  40e389:	mov    rax,QWORD PTR [rbp-0x20]
  40e38d:	cmp    rax,QWORD PTR [rbp-0x50]
  40e391:	jne    40e3dd <_start@@Base+0x814d>
  40e393:	mov    rax,QWORD PTR [rbp-0x50]
  40e397:	mov    QWORD PTR [rbp-0x20],rax
  40e39b:	lea    rcx,[rbp-0x30]
  40e39f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3a3:	mov    rsi,QWORD PTR [rbp-0x20]
  40e3a7:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ab:	mov    r8,rcx
  40e3ae:	lea    rcx,[rip+0x3704b]        # 445400 <__data_start@@Base+0x340>
  40e3b5:	mov    rdi,rax
  40e3b8:	call   408061 <_start@@Base+0x1dd1>
  40e3bd:	mov    QWORD PTR [rbp-0x50],rax
  40e3c1:	mov    rax,QWORD PTR [rbp-0x50]
  40e3c5:	cmp    rax,QWORD PTR [rbp-0x20]
  40e3c9:	je     40e65a <_start@@Base+0x83ca>
  40e3cf:	mov    rax,QWORD PTR [rbp-0x50]
  40e3d3:	cmp    rax,QWORD PTR [rbp-0x58]
  40e3d7:	je     40e65a <_start@@Base+0x83ca>
  40e3dd:	mov    rax,QWORD PTR [rbp-0x30]
  40e3e1:	test   rax,rax
  40e3e4:	jne    40e3f8 <_start@@Base+0x8168>
  40e3e6:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ea:	mov    eax,DWORD PTR [rax+0x10]
  40e3ed:	and    eax,0x2
  40e3f0:	test   eax,eax
  40e3f2:	je     40e5dd <_start@@Base+0x834d>
  40e3f8:	mov    rax,QWORD PTR [rbp-0x48]
  40e3fc:	mov    rax,QWORD PTR [rax]
  40e3ff:	mov    ecx,0x8
  40e404:	mov    edx,0x8
  40e409:	mov    esi,0x7
  40e40e:	mov    rdi,rax
  40e411:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e416:	mov    QWORD PTR [rbp-0x18],rax
  40e41a:	cmp    QWORD PTR [rbp-0x18],0x0
  40e41f:	je     40e65d <_start@@Base+0x83cd>
  40e425:	mov    rdx,QWORD PTR [rbp-0x30]
  40e429:	mov    rax,QWORD PTR [rbp-0x18]
  40e42d:	mov    rsi,rdx
  40e430:	mov    rdi,rax
  40e433:	call   4064f5 <_start@@Base+0x265>
  40e438:	jmp    40e5dd <_start@@Base+0x834d>
  40e43d:	add    QWORD PTR [rbp-0x50],0x8
  40e442:	mov    rdx,QWORD PTR [rbp-0x58]
  40e446:	mov    rax,QWORD PTR [rbp-0x50]
  40e44a:	mov    rsi,rdx
  40e44d:	mov    rdi,rax
  40e450:	call   406853 <_start@@Base+0x5c3>
  40e455:	mov    QWORD PTR [rbp-0x28],rax
  40e459:	movabs rax,0xff00000000000000
  40e463:	and    rax,QWORD PTR [rbp-0x28]
  40e467:	mov    rdx,rax
  40e46a:	movabs rax,0x3500000000000000
  40e474:	cmp    rdx,rax
  40e477:	jne    40e5a5 <_start@@Base+0x8315>
  40e47d:	mov    rax,QWORD PTR [rbp-0x50]
  40e481:	mov    QWORD PTR [rbp-0x20],rax
  40e485:	mov    rdx,QWORD PTR [rbp-0x58]
  40e489:	mov    rsi,QWORD PTR [rbp-0x20]
  40e48d:	mov    rax,QWORD PTR [rbp-0x48]
  40e491:	mov    ecx,0x1
  40e496:	mov    rdi,rax
  40e499:	call   406d3f <_start@@Base+0xaaf>
  40e49e:	mov    QWORD PTR [rbp-0x50],rax
  40e4a2:	mov    rax,QWORD PTR [rbp-0x20]
  40e4a6:	cmp    rax,QWORD PTR [rbp-0x50]
  40e4aa:	je     40e588 <_start@@Base+0x82f8>
  40e4b0:	mov    DWORD PTR [rbp-0x30],0x0
  40e4b7:	mov    rax,QWORD PTR [rbp-0x50]
  40e4bb:	mov    QWORD PTR [rbp-0x20],rax
  40e4bf:	lea    rcx,[rbp-0x30]
  40e4c3:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4c7:	mov    rsi,QWORD PTR [rbp-0x20]
  40e4cb:	mov    rax,QWORD PTR [rbp-0x48]
  40e4cf:	mov    rdi,rax
  40e4d2:	call   40749b <_start@@Base+0x120b>
  40e4d7:	mov    QWORD PTR [rbp-0x50],rax
  40e4db:	mov    rax,QWORD PTR [rbp-0x20]
  40e4df:	cmp    rax,QWORD PTR [rbp-0x50]
  40e4e3:	jne    40e52f <_start@@Base+0x829f>
  40e4e5:	mov    rax,QWORD PTR [rbp-0x50]
  40e4e9:	mov    QWORD PTR [rbp-0x20],rax
  40e4ed:	lea    rcx,[rbp-0x30]
  40e4f1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4f5:	mov    rsi,QWORD PTR [rbp-0x20]
  40e4f9:	mov    rax,QWORD PTR [rbp-0x48]
  40e4fd:	mov    r8,rcx
  40e500:	lea    rcx,[rip+0x36f19]        # 445420 <__data_start@@Base+0x360>
  40e507:	mov    rdi,rax
  40e50a:	call   407c4d <_start@@Base+0x19bd>
  40e50f:	mov    QWORD PTR [rbp-0x50],rax
  40e513:	mov    rax,QWORD PTR [rbp-0x50]
  40e517:	cmp    rax,QWORD PTR [rbp-0x20]
  40e51b:	je     40e660 <_start@@Base+0x83d0>
  40e521:	mov    rax,QWORD PTR [rbp-0x50]
  40e525:	cmp    rax,QWORD PTR [rbp-0x58]
  40e529:	je     40e660 <_start@@Base+0x83d0>
  40e52f:	mov    eax,DWORD PTR [rbp-0x30]
  40e532:	test   eax,eax
  40e534:	jne    40e548 <_start@@Base+0x82b8>
  40e536:	mov    rax,QWORD PTR [rbp-0x48]
  40e53a:	mov    eax,DWORD PTR [rax+0x10]
  40e53d:	and    eax,0x2
  40e540:	test   eax,eax
  40e542:	je     40e5dd <_start@@Base+0x834d>
  40e548:	mov    rax,QWORD PTR [rbp-0x48]
  40e54c:	mov    rax,QWORD PTR [rax]
  40e54f:	mov    ecx,0x4
  40e554:	mov    edx,0x4
  40e559:	mov    esi,0x8
  40e55e:	mov    rdi,rax
  40e561:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e566:	mov    QWORD PTR [rbp-0x18],rax
  40e56a:	cmp    QWORD PTR [rbp-0x18],0x0
  40e56f:	je     40e663 <_start@@Base+0x83d3>
  40e575:	mov    edx,DWORD PTR [rbp-0x30]
  40e578:	mov    rax,QWORD PTR [rbp-0x18]
  40e57c:	mov    esi,edx
  40e57e:	mov    rdi,rax
  40e581:	call   4063ef <_start@@Base+0x15f>
  40e586:	jmp    40e5dd <_start@@Base+0x834d>
  40e588:	mov    rdx,QWORD PTR [rbp-0x58]
  40e58c:	mov    rcx,QWORD PTR [rbp-0x50]
  40e590:	mov    rax,QWORD PTR [rbp-0x48]
  40e594:	mov    rsi,rcx
  40e597:	mov    rdi,rax
  40e59a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e59f:	mov    QWORD PTR [rbp-0x50],rax
  40e5a3:	jmp    40e5dd <_start@@Base+0x834d>
  40e5a5:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5a9:	mov    rcx,QWORD PTR [rbp-0x50]
  40e5ad:	mov    rax,QWORD PTR [rbp-0x48]
  40e5b1:	mov    rsi,rcx
  40e5b4:	mov    rdi,rax
  40e5b7:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e5bc:	mov    QWORD PTR [rbp-0x50],rax
  40e5c0:	jmp    40e5dd <_start@@Base+0x834d>
  40e5c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5c6:	mov    rcx,QWORD PTR [rbp-0x50]
  40e5ca:	mov    rax,QWORD PTR [rbp-0x48]
  40e5ce:	mov    rsi,rcx
  40e5d1:	mov    rdi,rax
  40e5d4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e5d9:	mov    QWORD PTR [rbp-0x50],rax
  40e5dd:	lea    rcx,[rbp-0x38]
  40e5e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5e5:	mov    rsi,QWORD PTR [rbp-0x50]
  40e5e9:	mov    rax,QWORD PTR [rbp-0x48]
  40e5ed:	mov    rdi,rax
  40e5f0:	call   406a06 <_start@@Base+0x776>
  40e5f5:	mov    QWORD PTR [rbp-0x50],rax
  40e5f9:	mov    eax,DWORD PTR [rbp-0x38]
  40e5fc:	test   eax,eax
  40e5fe:	jne    40dae5 <_start@@Base+0x7855>
  40e604:	mov    rax,QWORD PTR [rbp-0x48]
  40e608:	mov    eax,DWORD PTR [rax+0x1c]
  40e60b:	test   eax,eax
  40e60d:	jne    40e666 <_start@@Base+0x83d6>
  40e60f:	mov    rax,QWORD PTR [rbp-0x48]
  40e613:	mov    rax,QWORD PTR [rax]
  40e616:	mov    rdi,rax
  40e619:	call   41ed42 <flatcc_builder_end_table@@Base>
  40e61e:	mov    edx,eax
  40e620:	mov    rax,QWORD PTR [rbp-0x60]
  40e624:	mov    DWORD PTR [rax],edx
  40e626:	mov    rax,QWORD PTR [rbp-0x60]
  40e62a:	mov    eax,DWORD PTR [rax]
  40e62c:	test   eax,eax
  40e62e:	je     40e669 <_start@@Base+0x83d9>
  40e630:	mov    rax,QWORD PTR [rbp-0x50]
  40e634:	jmp    40e683 <_start@@Base+0x83f3>
  40e636:	nop
  40e637:	jmp    40e66a <_start@@Base+0x83da>
  40e639:	nop
  40e63a:	jmp    40e66a <_start@@Base+0x83da>
  40e63c:	nop
  40e63d:	jmp    40e66a <_start@@Base+0x83da>
  40e63f:	nop
  40e640:	jmp    40e66a <_start@@Base+0x83da>
  40e642:	nop
  40e643:	jmp    40e66a <_start@@Base+0x83da>
  40e645:	nop
  40e646:	jmp    40e66a <_start@@Base+0x83da>
  40e648:	nop
  40e649:	jmp    40e66a <_start@@Base+0x83da>
  40e64b:	nop
  40e64c:	jmp    40e66a <_start@@Base+0x83da>
  40e64e:	nop
  40e64f:	jmp    40e66a <_start@@Base+0x83da>
  40e651:	nop
  40e652:	jmp    40e66a <_start@@Base+0x83da>
  40e654:	nop
  40e655:	jmp    40e66a <_start@@Base+0x83da>
  40e657:	nop
  40e658:	jmp    40e66a <_start@@Base+0x83da>
  40e65a:	nop
  40e65b:	jmp    40e66a <_start@@Base+0x83da>
  40e65d:	nop
  40e65e:	jmp    40e66a <_start@@Base+0x83da>
  40e660:	nop
  40e661:	jmp    40e66a <_start@@Base+0x83da>
  40e663:	nop
  40e664:	jmp    40e66a <_start@@Base+0x83da>
  40e666:	nop
  40e667:	jmp    40e66a <_start@@Base+0x83da>
  40e669:	nop
  40e66a:	mov    rdx,QWORD PTR [rbp-0x58]
  40e66e:	mov    rsi,QWORD PTR [rbp-0x50]
  40e672:	mov    rax,QWORD PTR [rbp-0x48]
  40e676:	mov    ecx,0x21
  40e67b:	mov    rdi,rax
  40e67e:	call   427257 <flatcc_json_parser_set_error@@Base>
  40e683:	mov    rdi,QWORD PTR [rbp-0x8]
  40e687:	xor    rdi,QWORD PTR fs:0x28
  40e690:	je     40e697 <_start@@Base+0x8407>
  40e692:	call   4061a0 <__stack_chk_fail@plt>
  40e697:	leave  
  40e698:	ret    
  40e699:	endbr64 
  40e69d:	push   rbp
  40e69e:	mov    rbp,rsp
  40e6a1:	sub    rsp,0x50
  40e6a5:	mov    QWORD PTR [rbp-0x38],rdi
  40e6a9:	mov    QWORD PTR [rbp-0x40],rsi
  40e6ad:	mov    QWORD PTR [rbp-0x48],rdx
  40e6b1:	mov    QWORD PTR [rbp-0x50],rcx
  40e6b5:	mov    rax,QWORD PTR fs:0x28
  40e6be:	mov    QWORD PTR [rbp-0x8],rax
  40e6c2:	xor    eax,eax
  40e6c4:	mov    rax,QWORD PTR [rbp-0x50]
  40e6c8:	mov    DWORD PTR [rax],0x0
  40e6ce:	mov    rax,QWORD PTR [rbp-0x38]
  40e6d2:	mov    rax,QWORD PTR [rax]
  40e6d5:	mov    esi,0x2
  40e6da:	mov    rdi,rax
  40e6dd:	call   41e233 <flatcc_builder_start_table@@Base>
  40e6e2:	test   eax,eax
  40e6e4:	jne    40ea89 <_start@@Base+0x87f9>
  40e6ea:	lea    rcx,[rbp-0x2c]
  40e6ee:	mov    rdx,QWORD PTR [rbp-0x48]
  40e6f2:	mov    rsi,QWORD PTR [rbp-0x40]
  40e6f6:	mov    rax,QWORD PTR [rbp-0x38]
  40e6fa:	mov    rdi,rax
  40e6fd:	call   406949 <_start@@Base+0x6b9>
  40e702:	mov    QWORD PTR [rbp-0x40],rax
  40e706:	jmp    40ea4c <_start@@Base+0x87bc>
  40e70b:	mov    rdx,QWORD PTR [rbp-0x48]
  40e70f:	mov    rcx,QWORD PTR [rbp-0x40]
  40e713:	mov    rax,QWORD PTR [rbp-0x38]
  40e717:	mov    rsi,rcx
  40e71a:	mov    rdi,rax
  40e71d:	call   4066e9 <_start@@Base+0x459>
  40e722:	mov    QWORD PTR [rbp-0x40],rax
  40e726:	mov    rdx,QWORD PTR [rbp-0x48]
  40e72a:	mov    rax,QWORD PTR [rbp-0x40]
  40e72e:	mov    rsi,rdx
  40e731:	mov    rdi,rax
  40e734:	call   406853 <_start@@Base+0x5c3>
  40e739:	mov    QWORD PTR [rbp-0x20],rax
  40e73d:	movabs rax,0x616161615f626262
  40e747:	cmp    QWORD PTR [rbp-0x20],rax
  40e74b:	jne    40ea15 <_start@@Base+0x8785>
  40e751:	add    QWORD PTR [rbp-0x40],0x8
  40e756:	mov    rdx,QWORD PTR [rbp-0x48]
  40e75a:	mov    rax,QWORD PTR [rbp-0x40]
  40e75e:	mov    rsi,rdx
  40e761:	mov    rdi,rax
  40e764:	call   406853 <_start@@Base+0x5c3>
  40e769:	mov    QWORD PTR [rbp-0x20],rax
  40e76d:	mov    rax,QWORD PTR [rbp-0x20]
  40e771:	mov    al,0x0
  40e773:	mov    rdx,rax
  40e776:	movabs rax,0x625f737465707300
  40e780:	cmp    rdx,rax
  40e783:	jne    40e8bc <_start@@Base+0x862c>
  40e789:	mov    rax,QWORD PTR [rbp-0x40]
  40e78d:	mov    QWORD PTR [rbp-0x18],rax
  40e791:	mov    rdx,QWORD PTR [rbp-0x48]
  40e795:	mov    rsi,QWORD PTR [rbp-0x18]
  40e799:	mov    rax,QWORD PTR [rbp-0x38]
  40e79d:	mov    ecx,0x7
  40e7a2:	mov    rdi,rax
  40e7a5:	call   406d3f <_start@@Base+0xaaf>
  40e7aa:	mov    QWORD PTR [rbp-0x40],rax
  40e7ae:	mov    rax,QWORD PTR [rbp-0x18]
  40e7b2:	cmp    rax,QWORD PTR [rbp-0x40]
  40e7b6:	je     40e89c <_start@@Base+0x860c>
  40e7bc:	mov    QWORD PTR [rbp-0x28],0x0
  40e7c4:	mov    rax,QWORD PTR [rbp-0x40]
  40e7c8:	mov    QWORD PTR [rbp-0x18],rax
  40e7cc:	lea    rcx,[rbp-0x28]
  40e7d0:	mov    rdx,QWORD PTR [rbp-0x48]
  40e7d4:	mov    rsi,QWORD PTR [rbp-0x18]
  40e7d8:	mov    rax,QWORD PTR [rbp-0x38]
  40e7dc:	mov    rdi,rax
  40e7df:	call   4076e9 <_start@@Base+0x1459>
  40e7e4:	mov    QWORD PTR [rbp-0x40],rax
  40e7e8:	mov    rax,QWORD PTR [rbp-0x18]
  40e7ec:	cmp    rax,QWORD PTR [rbp-0x40]
  40e7f0:	jne    40e83c <_start@@Base+0x85ac>
  40e7f2:	mov    rax,QWORD PTR [rbp-0x40]
  40e7f6:	mov    QWORD PTR [rbp-0x18],rax
  40e7fa:	lea    rcx,[rbp-0x28]
  40e7fe:	mov    rdx,QWORD PTR [rbp-0x48]
  40e802:	mov    rsi,QWORD PTR [rbp-0x18]
  40e806:	mov    rax,QWORD PTR [rbp-0x38]
  40e80a:	mov    r8,rcx
  40e80d:	lea    rcx,[rip+0x36c2c]        # 445440 <__data_start@@Base+0x380>
  40e814:	mov    rdi,rax
  40e817:	call   408061 <_start@@Base+0x1dd1>
  40e81c:	mov    QWORD PTR [rbp-0x40],rax
  40e820:	mov    rax,QWORD PTR [rbp-0x40]
  40e824:	cmp    rax,QWORD PTR [rbp-0x18]
  40e828:	je     40ea8c <_start@@Base+0x87fc>
  40e82e:	mov    rax,QWORD PTR [rbp-0x40]
  40e832:	cmp    rax,QWORD PTR [rbp-0x48]
  40e836:	je     40ea8c <_start@@Base+0x87fc>
  40e83c:	mov    rax,QWORD PTR [rbp-0x28]
  40e840:	test   rax,rax
  40e843:	jne    40e857 <_start@@Base+0x85c7>
  40e845:	mov    rax,QWORD PTR [rbp-0x38]
  40e849:	mov    eax,DWORD PTR [rax+0x10]
  40e84c:	and    eax,0x2
  40e84f:	test   eax,eax
  40e851:	je     40ea30 <_start@@Base+0x87a0>
  40e857:	mov    rax,QWORD PTR [rbp-0x38]
  40e85b:	mov    rax,QWORD PTR [rax]
  40e85e:	mov    ecx,0x8
  40e863:	mov    edx,0x8
  40e868:	mov    esi,0x0
  40e86d:	mov    rdi,rax
  40e870:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e875:	mov    QWORD PTR [rbp-0x10],rax
  40e879:	cmp    QWORD PTR [rbp-0x10],0x0
  40e87e:	je     40ea8f <_start@@Base+0x87ff>
  40e884:	mov    rdx,QWORD PTR [rbp-0x28]
  40e888:	mov    rax,QWORD PTR [rbp-0x10]
  40e88c:	mov    rsi,rdx
  40e88f:	mov    rdi,rax
  40e892:	call   4064f5 <_start@@Base+0x265>
  40e897:	jmp    40ea30 <_start@@Base+0x87a0>
  40e89c:	mov    rdx,QWORD PTR [rbp-0x48]
  40e8a0:	mov    rcx,QWORD PTR [rbp-0x40]
  40e8a4:	mov    rax,QWORD PTR [rbp-0x38]
  40e8a8:	mov    rsi,rcx
  40e8ab:	mov    rdi,rax
  40e8ae:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e8b3:	mov    QWORD PTR [rbp-0x40],rax
  40e8b7:	jmp    40ea30 <_start@@Base+0x87a0>
  40e8bc:	movabs rax,0x625f73746172745f
  40e8c6:	cmp    QWORD PTR [rbp-0x20],rax
  40e8ca:	jne    40e9f8 <_start@@Base+0x8768>
  40e8d0:	mov    rax,QWORD PTR [rbp-0x40]
  40e8d4:	mov    QWORD PTR [rbp-0x18],rax
  40e8d8:	mov    rdx,QWORD PTR [rbp-0x48]
  40e8dc:	mov    rsi,QWORD PTR [rbp-0x18]
  40e8e0:	mov    rax,QWORD PTR [rbp-0x38]
  40e8e4:	mov    ecx,0x8
  40e8e9:	mov    rdi,rax
  40e8ec:	call   406d3f <_start@@Base+0xaaf>
  40e8f1:	mov    QWORD PTR [rbp-0x40],rax
  40e8f5:	mov    rax,QWORD PTR [rbp-0x18]
  40e8f9:	cmp    rax,QWORD PTR [rbp-0x40]
  40e8fd:	je     40e9db <_start@@Base+0x874b>
  40e903:	mov    DWORD PTR [rbp-0x28],0x0
  40e90a:	mov    rax,QWORD PTR [rbp-0x40]
  40e90e:	mov    QWORD PTR [rbp-0x18],rax
  40e912:	lea    rcx,[rbp-0x28]
  40e916:	mov    rdx,QWORD PTR [rbp-0x48]
  40e91a:	mov    rsi,QWORD PTR [rbp-0x18]
  40e91e:	mov    rax,QWORD PTR [rbp-0x38]
  40e922:	mov    rdi,rax
  40e925:	call   40749b <_start@@Base+0x120b>
  40e92a:	mov    QWORD PTR [rbp-0x40],rax
  40e92e:	mov    rax,QWORD PTR [rbp-0x18]
  40e932:	cmp    rax,QWORD PTR [rbp-0x40]
  40e936:	jne    40e982 <_start@@Base+0x86f2>
  40e938:	mov    rax,QWORD PTR [rbp-0x40]
  40e93c:	mov    QWORD PTR [rbp-0x18],rax
  40e940:	lea    rcx,[rbp-0x28]
  40e944:	mov    rdx,QWORD PTR [rbp-0x48]
  40e948:	mov    rsi,QWORD PTR [rbp-0x18]
  40e94c:	mov    rax,QWORD PTR [rbp-0x38]
  40e950:	mov    r8,rcx
  40e953:	lea    rcx,[rip+0x36b06]        # 445460 <__data_start@@Base+0x3a0>
  40e95a:	mov    rdi,rax
  40e95d:	call   407c4d <_start@@Base+0x19bd>
  40e962:	mov    QWORD PTR [rbp-0x40],rax
  40e966:	mov    rax,QWORD PTR [rbp-0x40]
  40e96a:	cmp    rax,QWORD PTR [rbp-0x18]
  40e96e:	je     40ea92 <_start@@Base+0x8802>
  40e974:	mov    rax,QWORD PTR [rbp-0x40]
  40e978:	cmp    rax,QWORD PTR [rbp-0x48]
  40e97c:	je     40ea92 <_start@@Base+0x8802>
  40e982:	mov    eax,DWORD PTR [rbp-0x28]
  40e985:	test   eax,eax
  40e987:	jne    40e99b <_start@@Base+0x870b>
  40e989:	mov    rax,QWORD PTR [rbp-0x38]
  40e98d:	mov    eax,DWORD PTR [rax+0x10]
  40e990:	and    eax,0x2
  40e993:	test   eax,eax
  40e995:	je     40ea30 <_start@@Base+0x87a0>
  40e99b:	mov    rax,QWORD PTR [rbp-0x38]
  40e99f:	mov    rax,QWORD PTR [rax]
  40e9a2:	mov    ecx,0x4
  40e9a7:	mov    edx,0x4
  40e9ac:	mov    esi,0x1
  40e9b1:	mov    rdi,rax
  40e9b4:	call   4203e3 <flatcc_builder_table_add@@Base>
  40e9b9:	mov    QWORD PTR [rbp-0x10],rax
  40e9bd:	cmp    QWORD PTR [rbp-0x10],0x0
  40e9c2:	je     40ea95 <_start@@Base+0x8805>
  40e9c8:	mov    edx,DWORD PTR [rbp-0x28]
  40e9cb:	mov    rax,QWORD PTR [rbp-0x10]
  40e9cf:	mov    esi,edx
  40e9d1:	mov    rdi,rax
  40e9d4:	call   4063ef <_start@@Base+0x15f>
  40e9d9:	jmp    40ea30 <_start@@Base+0x87a0>
  40e9db:	mov    rdx,QWORD PTR [rbp-0x48]
  40e9df:	mov    rcx,QWORD PTR [rbp-0x40]
  40e9e3:	mov    rax,QWORD PTR [rbp-0x38]
  40e9e7:	mov    rsi,rcx
  40e9ea:	mov    rdi,rax
  40e9ed:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40e9f2:	mov    QWORD PTR [rbp-0x40],rax
  40e9f6:	jmp    40ea30 <_start@@Base+0x87a0>
  40e9f8:	mov    rdx,QWORD PTR [rbp-0x48]
  40e9fc:	mov    rcx,QWORD PTR [rbp-0x40]
  40ea00:	mov    rax,QWORD PTR [rbp-0x38]
  40ea04:	mov    rsi,rcx
  40ea07:	mov    rdi,rax
  40ea0a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ea0f:	mov    QWORD PTR [rbp-0x40],rax
  40ea13:	jmp    40ea30 <_start@@Base+0x87a0>
  40ea15:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea19:	mov    rcx,QWORD PTR [rbp-0x40]
  40ea1d:	mov    rax,QWORD PTR [rbp-0x38]
  40ea21:	mov    rsi,rcx
  40ea24:	mov    rdi,rax
  40ea27:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ea2c:	mov    QWORD PTR [rbp-0x40],rax
  40ea30:	lea    rcx,[rbp-0x2c]
  40ea34:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea38:	mov    rsi,QWORD PTR [rbp-0x40]
  40ea3c:	mov    rax,QWORD PTR [rbp-0x38]
  40ea40:	mov    rdi,rax
  40ea43:	call   406a06 <_start@@Base+0x776>
  40ea48:	mov    QWORD PTR [rbp-0x40],rax
  40ea4c:	mov    eax,DWORD PTR [rbp-0x2c]
  40ea4f:	test   eax,eax
  40ea51:	jne    40e70b <_start@@Base+0x847b>
  40ea57:	mov    rax,QWORD PTR [rbp-0x38]
  40ea5b:	mov    eax,DWORD PTR [rax+0x1c]
  40ea5e:	test   eax,eax
  40ea60:	jne    40ea98 <_start@@Base+0x8808>
  40ea62:	mov    rax,QWORD PTR [rbp-0x38]
  40ea66:	mov    rax,QWORD PTR [rax]
  40ea69:	mov    rdi,rax
  40ea6c:	call   41ed42 <flatcc_builder_end_table@@Base>
  40ea71:	mov    edx,eax
  40ea73:	mov    rax,QWORD PTR [rbp-0x50]
  40ea77:	mov    DWORD PTR [rax],edx
  40ea79:	mov    rax,QWORD PTR [rbp-0x50]
  40ea7d:	mov    eax,DWORD PTR [rax]
  40ea7f:	test   eax,eax
  40ea81:	je     40ea9b <_start@@Base+0x880b>
  40ea83:	mov    rax,QWORD PTR [rbp-0x40]
  40ea87:	jmp    40eab5 <_start@@Base+0x8825>
  40ea89:	nop
  40ea8a:	jmp    40ea9c <_start@@Base+0x880c>
  40ea8c:	nop
  40ea8d:	jmp    40ea9c <_start@@Base+0x880c>
  40ea8f:	nop
  40ea90:	jmp    40ea9c <_start@@Base+0x880c>
  40ea92:	nop
  40ea93:	jmp    40ea9c <_start@@Base+0x880c>
  40ea95:	nop
  40ea96:	jmp    40ea9c <_start@@Base+0x880c>
  40ea98:	nop
  40ea99:	jmp    40ea9c <_start@@Base+0x880c>
  40ea9b:	nop
  40ea9c:	mov    rdx,QWORD PTR [rbp-0x48]
  40eaa0:	mov    rsi,QWORD PTR [rbp-0x40]
  40eaa4:	mov    rax,QWORD PTR [rbp-0x38]
  40eaa8:	mov    ecx,0x21
  40eaad:	mov    rdi,rax
  40eab0:	call   427257 <flatcc_json_parser_set_error@@Base>
  40eab5:	mov    rdi,QWORD PTR [rbp-0x8]
  40eab9:	xor    rdi,QWORD PTR fs:0x28
  40eac2:	je     40eac9 <_start@@Base+0x8839>
  40eac4:	call   4061a0 <__stack_chk_fail@plt>
  40eac9:	leave  
  40eaca:	ret    
  40eacb:	endbr64 
  40eacf:	push   rbp
  40ead0:	mov    rbp,rsp
  40ead3:	sub    rsp,0x50
  40ead7:	mov    QWORD PTR [rbp-0x38],rdi
  40eadb:	mov    QWORD PTR [rbp-0x40],rsi
  40eadf:	mov    QWORD PTR [rbp-0x48],rdx
  40eae3:	mov    QWORD PTR [rbp-0x50],rcx
  40eae7:	mov    rax,QWORD PTR fs:0x28
  40eaf0:	mov    QWORD PTR [rbp-0x8],rax
  40eaf4:	xor    eax,eax
  40eaf6:	mov    rax,QWORD PTR [rbp-0x50]
  40eafa:	mov    DWORD PTR [rax],0x0
  40eb00:	mov    rax,QWORD PTR [rbp-0x38]
  40eb04:	mov    rax,QWORD PTR [rax]
  40eb07:	mov    esi,0x2
  40eb0c:	mov    rdi,rax
  40eb0f:	call   41e233 <flatcc_builder_start_table@@Base>
  40eb14:	test   eax,eax
  40eb16:	jne    40ef17 <_start@@Base+0x8c87>
  40eb1c:	lea    rcx,[rbp-0x2c]
  40eb20:	mov    rdx,QWORD PTR [rbp-0x48]
  40eb24:	mov    rsi,QWORD PTR [rbp-0x40]
  40eb28:	mov    rax,QWORD PTR [rbp-0x38]
  40eb2c:	mov    rdi,rax
  40eb2f:	call   406949 <_start@@Base+0x6b9>
  40eb34:	mov    QWORD PTR [rbp-0x40],rax
  40eb38:	jmp    40eeda <_start@@Base+0x8c4a>
  40eb3d:	mov    rdx,QWORD PTR [rbp-0x48]
  40eb41:	mov    rcx,QWORD PTR [rbp-0x40]
  40eb45:	mov    rax,QWORD PTR [rbp-0x38]
  40eb49:	mov    rsi,rcx
  40eb4c:	mov    rdi,rax
  40eb4f:	call   4066e9 <_start@@Base+0x459>
  40eb54:	mov    QWORD PTR [rbp-0x40],rax
  40eb58:	mov    rdx,QWORD PTR [rbp-0x48]
  40eb5c:	mov    rax,QWORD PTR [rbp-0x40]
  40eb60:	mov    rsi,rdx
  40eb63:	mov    rdi,rax
  40eb66:	call   406853 <_start@@Base+0x5c3>
  40eb6b:	mov    QWORD PTR [rbp-0x20],rax
  40eb6f:	movabs rax,0x616161615f626262
  40eb79:	cmp    QWORD PTR [rbp-0x20],rax
  40eb7d:	jne    40eea3 <_start@@Base+0x8c13>
  40eb83:	add    QWORD PTR [rbp-0x40],0x8
  40eb88:	mov    rdx,QWORD PTR [rbp-0x48]
  40eb8c:	mov    rax,QWORD PTR [rbp-0x40]
  40eb90:	mov    rsi,rdx
  40eb93:	mov    rdi,rax
  40eb96:	call   406853 <_start@@Base+0x5c3>
  40eb9b:	mov    QWORD PTR [rbp-0x20],rax
  40eb9f:	movabs rax,0x625f73746172745f
  40eba9:	cmp    QWORD PTR [rbp-0x20],rax
  40ebad:	jne    40ed3d <_start@@Base+0x8aad>
  40ebb3:	add    QWORD PTR [rbp-0x40],0x8
  40ebb8:	mov    rdx,QWORD PTR [rbp-0x48]
  40ebbc:	mov    rax,QWORD PTR [rbp-0x40]
  40ebc0:	mov    rsi,rdx
  40ebc3:	mov    rdi,rax
  40ebc6:	call   406853 <_start@@Base+0x5c3>
  40ebcb:	mov    QWORD PTR [rbp-0x20],rax
  40ebcf:	mov    rax,QWORD PTR [rbp-0x20]
  40ebd3:	and    rax,0xffffffffff000000
  40ebd9:	mov    rdx,rax
  40ebdc:	movabs rax,0x7374657073000000
  40ebe6:	cmp    rdx,rax
  40ebe9:	jne    40ed1d <_start@@Base+0x8a8d>
  40ebef:	mov    rax,QWORD PTR [rbp-0x40]
  40ebf3:	mov    QWORD PTR [rbp-0x18],rax
  40ebf7:	mov    rdx,QWORD PTR [rbp-0x48]
  40ebfb:	mov    rsi,QWORD PTR [rbp-0x18]
  40ebff:	mov    rax,QWORD PTR [rbp-0x38]
  40ec03:	mov    ecx,0x5
  40ec08:	mov    rdi,rax
  40ec0b:	call   406d3f <_start@@Base+0xaaf>
  40ec10:	mov    QWORD PTR [rbp-0x40],rax
  40ec14:	mov    rax,QWORD PTR [rbp-0x18]
  40ec18:	cmp    rax,QWORD PTR [rbp-0x40]
  40ec1c:	je     40ecfd <_start@@Base+0x8a6d>
  40ec22:	mov    DWORD PTR [rbp-0x28],0x0
  40ec29:	mov    rax,QWORD PTR [rbp-0x40]
  40ec2d:	mov    QWORD PTR [rbp-0x18],rax
  40ec31:	lea    rcx,[rbp-0x28]
  40ec35:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec39:	mov    rsi,QWORD PTR [rbp-0x18]
  40ec3d:	mov    rax,QWORD PTR [rbp-0x38]
  40ec41:	mov    rdi,rax
  40ec44:	call   40749b <_start@@Base+0x120b>
  40ec49:	mov    QWORD PTR [rbp-0x40],rax
  40ec4d:	mov    rax,QWORD PTR [rbp-0x18]
  40ec51:	cmp    rax,QWORD PTR [rbp-0x40]
  40ec55:	jne    40eca1 <_start@@Base+0x8a11>
  40ec57:	mov    rax,QWORD PTR [rbp-0x40]
  40ec5b:	mov    QWORD PTR [rbp-0x18],rax
  40ec5f:	lea    rcx,[rbp-0x28]
  40ec63:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec67:	mov    rsi,QWORD PTR [rbp-0x18]
  40ec6b:	mov    rax,QWORD PTR [rbp-0x38]
  40ec6f:	mov    r8,rcx
  40ec72:	lea    rcx,[rip+0x36807]        # 445480 <__data_start@@Base+0x3c0>
  40ec79:	mov    rdi,rax
  40ec7c:	call   407c4d <_start@@Base+0x19bd>
  40ec81:	mov    QWORD PTR [rbp-0x40],rax
  40ec85:	mov    rax,QWORD PTR [rbp-0x40]
  40ec89:	cmp    rax,QWORD PTR [rbp-0x18]
  40ec8d:	je     40ef1a <_start@@Base+0x8c8a>
  40ec93:	mov    rax,QWORD PTR [rbp-0x40]
  40ec97:	cmp    rax,QWORD PTR [rbp-0x48]
  40ec9b:	je     40ef1a <_start@@Base+0x8c8a>
  40eca1:	mov    eax,DWORD PTR [rbp-0x28]
  40eca4:	test   eax,eax
  40eca6:	jne    40ecba <_start@@Base+0x8a2a>
  40eca8:	mov    rax,QWORD PTR [rbp-0x38]
  40ecac:	mov    eax,DWORD PTR [rax+0x10]
  40ecaf:	and    eax,0x2
  40ecb2:	test   eax,eax
  40ecb4:	je     40eebe <_start@@Base+0x8c2e>
  40ecba:	mov    rax,QWORD PTR [rbp-0x38]
  40ecbe:	mov    rax,QWORD PTR [rax]
  40ecc1:	mov    ecx,0x4
  40ecc6:	mov    edx,0x4
  40eccb:	mov    esi,0x1
  40ecd0:	mov    rdi,rax
  40ecd3:	call   4203e3 <flatcc_builder_table_add@@Base>
  40ecd8:	mov    QWORD PTR [rbp-0x10],rax
  40ecdc:	cmp    QWORD PTR [rbp-0x10],0x0
  40ece1:	je     40ef1d <_start@@Base+0x8c8d>
  40ece7:	mov    edx,DWORD PTR [rbp-0x28]
  40ecea:	mov    rax,QWORD PTR [rbp-0x10]
  40ecee:	mov    esi,edx
  40ecf0:	mov    rdi,rax
  40ecf3:	call   4063ef <_start@@Base+0x15f>
  40ecf8:	jmp    40eebe <_start@@Base+0x8c2e>
  40ecfd:	mov    rdx,QWORD PTR [rbp-0x48]
  40ed01:	mov    rcx,QWORD PTR [rbp-0x40]
  40ed05:	mov    rax,QWORD PTR [rbp-0x38]
  40ed09:	mov    rsi,rcx
  40ed0c:	mov    rdi,rax
  40ed0f:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ed14:	mov    QWORD PTR [rbp-0x40],rax
  40ed18:	jmp    40eebe <_start@@Base+0x8c2e>
  40ed1d:	mov    rdx,QWORD PTR [rbp-0x48]
  40ed21:	mov    rcx,QWORD PTR [rbp-0x40]
  40ed25:	mov    rax,QWORD PTR [rbp-0x38]
  40ed29:	mov    rsi,rcx
  40ed2c:	mov    rdi,rax
  40ed2f:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ed34:	mov    QWORD PTR [rbp-0x40],rax
  40ed38:	jmp    40eebe <_start@@Base+0x8c2e>
  40ed3d:	mov    rax,QWORD PTR [rbp-0x20]
  40ed41:	mov    al,0x0
  40ed43:	mov    rdx,rax
  40ed46:	movabs rax,0x625f737465707300
  40ed50:	cmp    rdx,rax
  40ed53:	jne    40ee86 <_start@@Base+0x8bf6>
  40ed59:	mov    rax,QWORD PTR [rbp-0x40]
  40ed5d:	mov    QWORD PTR [rbp-0x18],rax
  40ed61:	mov    rdx,QWORD PTR [rbp-0x48]
  40ed65:	mov    rsi,QWORD PTR [rbp-0x18]
  40ed69:	mov    rax,QWORD PTR [rbp-0x38]
  40ed6d:	mov    ecx,0x7
  40ed72:	mov    rdi,rax
  40ed75:	call   406d3f <_start@@Base+0xaaf>
  40ed7a:	mov    QWORD PTR [rbp-0x40],rax
  40ed7e:	mov    rax,QWORD PTR [rbp-0x18]
  40ed82:	cmp    rax,QWORD PTR [rbp-0x40]
  40ed86:	je     40ee69 <_start@@Base+0x8bd9>
  40ed8c:	mov    QWORD PTR [rbp-0x28],0x0
  40ed94:	mov    rax,QWORD PTR [rbp-0x40]
  40ed98:	mov    QWORD PTR [rbp-0x18],rax
  40ed9c:	lea    rcx,[rbp-0x28]
  40eda0:	mov    rdx,QWORD PTR [rbp-0x48]
  40eda4:	mov    rsi,QWORD PTR [rbp-0x18]
  40eda8:	mov    rax,QWORD PTR [rbp-0x38]
  40edac:	mov    rdi,rax
  40edaf:	call   4076e9 <_start@@Base+0x1459>
  40edb4:	mov    QWORD PTR [rbp-0x40],rax
  40edb8:	mov    rax,QWORD PTR [rbp-0x18]
  40edbc:	cmp    rax,QWORD PTR [rbp-0x40]
  40edc0:	jne    40ee0c <_start@@Base+0x8b7c>
  40edc2:	mov    rax,QWORD PTR [rbp-0x40]
  40edc6:	mov    QWORD PTR [rbp-0x18],rax
  40edca:	lea    rcx,[rbp-0x28]
  40edce:	mov    rdx,QWORD PTR [rbp-0x48]
  40edd2:	mov    rsi,QWORD PTR [rbp-0x18]
  40edd6:	mov    rax,QWORD PTR [rbp-0x38]
  40edda:	mov    r8,rcx
  40eddd:	lea    rcx,[rip+0x366bc]        # 4454a0 <__data_start@@Base+0x3e0>
  40ede4:	mov    rdi,rax
  40ede7:	call   408061 <_start@@Base+0x1dd1>
  40edec:	mov    QWORD PTR [rbp-0x40],rax
  40edf0:	mov    rax,QWORD PTR [rbp-0x40]
  40edf4:	cmp    rax,QWORD PTR [rbp-0x18]
  40edf8:	je     40ef20 <_start@@Base+0x8c90>
  40edfe:	mov    rax,QWORD PTR [rbp-0x40]
  40ee02:	cmp    rax,QWORD PTR [rbp-0x48]
  40ee06:	je     40ef20 <_start@@Base+0x8c90>
  40ee0c:	mov    rax,QWORD PTR [rbp-0x28]
  40ee10:	test   rax,rax
  40ee13:	jne    40ee27 <_start@@Base+0x8b97>
  40ee15:	mov    rax,QWORD PTR [rbp-0x38]
  40ee19:	mov    eax,DWORD PTR [rax+0x10]
  40ee1c:	and    eax,0x2
  40ee1f:	test   eax,eax
  40ee21:	je     40eebe <_start@@Base+0x8c2e>
  40ee27:	mov    rax,QWORD PTR [rbp-0x38]
  40ee2b:	mov    rax,QWORD PTR [rax]
  40ee2e:	mov    ecx,0x8
  40ee33:	mov    edx,0x8
  40ee38:	mov    esi,0x0
  40ee3d:	mov    rdi,rax
  40ee40:	call   4203e3 <flatcc_builder_table_add@@Base>
  40ee45:	mov    QWORD PTR [rbp-0x10],rax
  40ee49:	cmp    QWORD PTR [rbp-0x10],0x0
  40ee4e:	je     40ef23 <_start@@Base+0x8c93>
  40ee54:	mov    rdx,QWORD PTR [rbp-0x28]
  40ee58:	mov    rax,QWORD PTR [rbp-0x10]
  40ee5c:	mov    rsi,rdx
  40ee5f:	mov    rdi,rax
  40ee62:	call   4064f5 <_start@@Base+0x265>
  40ee67:	jmp    40eebe <_start@@Base+0x8c2e>
  40ee69:	mov    rdx,QWORD PTR [rbp-0x48]
  40ee6d:	mov    rcx,QWORD PTR [rbp-0x40]
  40ee71:	mov    rax,QWORD PTR [rbp-0x38]
  40ee75:	mov    rsi,rcx
  40ee78:	mov    rdi,rax
  40ee7b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ee80:	mov    QWORD PTR [rbp-0x40],rax
  40ee84:	jmp    40eebe <_start@@Base+0x8c2e>
  40ee86:	mov    rdx,QWORD PTR [rbp-0x48]
  40ee8a:	mov    rcx,QWORD PTR [rbp-0x40]
  40ee8e:	mov    rax,QWORD PTR [rbp-0x38]
  40ee92:	mov    rsi,rcx
  40ee95:	mov    rdi,rax
  40ee98:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40ee9d:	mov    QWORD PTR [rbp-0x40],rax
  40eea1:	jmp    40eebe <_start@@Base+0x8c2e>
  40eea3:	mov    rdx,QWORD PTR [rbp-0x48]
  40eea7:	mov    rcx,QWORD PTR [rbp-0x40]
  40eeab:	mov    rax,QWORD PTR [rbp-0x38]
  40eeaf:	mov    rsi,rcx
  40eeb2:	mov    rdi,rax
  40eeb5:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40eeba:	mov    QWORD PTR [rbp-0x40],rax
  40eebe:	lea    rcx,[rbp-0x2c]
  40eec2:	mov    rdx,QWORD PTR [rbp-0x48]
  40eec6:	mov    rsi,QWORD PTR [rbp-0x40]
  40eeca:	mov    rax,QWORD PTR [rbp-0x38]
  40eece:	mov    rdi,rax
  40eed1:	call   406a06 <_start@@Base+0x776>
  40eed6:	mov    QWORD PTR [rbp-0x40],rax
  40eeda:	mov    eax,DWORD PTR [rbp-0x2c]
  40eedd:	test   eax,eax
  40eedf:	jne    40eb3d <_start@@Base+0x88ad>
  40eee5:	mov    rax,QWORD PTR [rbp-0x38]
  40eee9:	mov    eax,DWORD PTR [rax+0x1c]
  40eeec:	test   eax,eax
  40eeee:	jne    40ef26 <_start@@Base+0x8c96>
  40eef0:	mov    rax,QWORD PTR [rbp-0x38]
  40eef4:	mov    rax,QWORD PTR [rax]
  40eef7:	mov    rdi,rax
  40eefa:	call   41ed42 <flatcc_builder_end_table@@Base>
  40eeff:	mov    edx,eax
  40ef01:	mov    rax,QWORD PTR [rbp-0x50]
  40ef05:	mov    DWORD PTR [rax],edx
  40ef07:	mov    rax,QWORD PTR [rbp-0x50]
  40ef0b:	mov    eax,DWORD PTR [rax]
  40ef0d:	test   eax,eax
  40ef0f:	je     40ef29 <_start@@Base+0x8c99>
  40ef11:	mov    rax,QWORD PTR [rbp-0x40]
  40ef15:	jmp    40ef43 <_start@@Base+0x8cb3>
  40ef17:	nop
  40ef18:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef1a:	nop
  40ef1b:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef1d:	nop
  40ef1e:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef20:	nop
  40ef21:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef23:	nop
  40ef24:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef26:	nop
  40ef27:	jmp    40ef2a <_start@@Base+0x8c9a>
  40ef29:	nop
  40ef2a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ef2e:	mov    rsi,QWORD PTR [rbp-0x40]
  40ef32:	mov    rax,QWORD PTR [rbp-0x38]
  40ef36:	mov    ecx,0x21
  40ef3b:	mov    rdi,rax
  40ef3e:	call   427257 <flatcc_json_parser_set_error@@Base>
  40ef43:	mov    rdi,QWORD PTR [rbp-0x8]
  40ef47:	xor    rdi,QWORD PTR fs:0x28
  40ef50:	je     40ef57 <_start@@Base+0x8cc7>
  40ef52:	call   4061a0 <__stack_chk_fail@plt>
  40ef57:	leave  
  40ef58:	ret    
  40ef59:	endbr64 
  40ef5d:	push   rbp
  40ef5e:	mov    rbp,rsp
  40ef61:	sub    rsp,0x50
  40ef65:	mov    QWORD PTR [rbp-0x38],rdi
  40ef69:	mov    QWORD PTR [rbp-0x40],rsi
  40ef6d:	mov    QWORD PTR [rbp-0x48],rdx
  40ef71:	mov    QWORD PTR [rbp-0x50],rcx
  40ef75:	mov    rax,QWORD PTR fs:0x28
  40ef7e:	mov    QWORD PTR [rbp-0x8],rax
  40ef82:	xor    eax,eax
  40ef84:	mov    rax,QWORD PTR [rbp-0x50]
  40ef88:	mov    DWORD PTR [rax],0x0
  40ef8e:	mov    rax,QWORD PTR [rbp-0x38]
  40ef92:	mov    rax,QWORD PTR [rax]
  40ef95:	mov    esi,0x3
  40ef9a:	mov    rdi,rax
  40ef9d:	call   41e233 <flatcc_builder_start_table@@Base>
  40efa2:	test   eax,eax
  40efa4:	jne    40f304 <_start@@Base+0x9074>
  40efaa:	lea    rcx,[rbp-0x28]
  40efae:	mov    rdx,QWORD PTR [rbp-0x48]
  40efb2:	mov    rsi,QWORD PTR [rbp-0x40]
  40efb6:	mov    rax,QWORD PTR [rbp-0x38]
  40efba:	mov    rdi,rax
  40efbd:	call   406949 <_start@@Base+0x6b9>
  40efc2:	mov    QWORD PTR [rbp-0x40],rax
  40efc6:	jmp    40f2c7 <_start@@Base+0x9037>
  40efcb:	mov    rdx,QWORD PTR [rbp-0x48]
  40efcf:	mov    rcx,QWORD PTR [rbp-0x40]
  40efd3:	mov    rax,QWORD PTR [rbp-0x38]
  40efd7:	mov    rsi,rcx
  40efda:	mov    rdi,rax
  40efdd:	call   4066e9 <_start@@Base+0x459>
  40efe2:	mov    QWORD PTR [rbp-0x40],rax
  40efe6:	mov    rdx,QWORD PTR [rbp-0x48]
  40efea:	mov    rax,QWORD PTR [rbp-0x40]
  40efee:	mov    rsi,rdx
  40eff1:	mov    rdi,rax
  40eff4:	call   406853 <_start@@Base+0x5c3>
  40eff9:	mov    QWORD PTR [rbp-0x20],rax
  40effd:	movabs rax,0x6e6573746563ffff
  40f007:	cmp    QWORD PTR [rbp-0x20],rax
  40f00b:	ja     40f102 <_start@@Base+0x8e72>
  40f011:	movabs rax,0xffffffff00000000
  40f01b:	and    rax,QWORD PTR [rbp-0x20]
  40f01f:	mov    rdx,rax
  40f022:	movabs rax,0x6461746100000000
  40f02c:	cmp    rdx,rax
  40f02f:	jne    40f0e2 <_start@@Base+0x8e52>
  40f035:	mov    rax,QWORD PTR [rbp-0x40]
  40f039:	mov    QWORD PTR [rbp-0x18],rax
  40f03d:	mov    rdx,QWORD PTR [rbp-0x48]
  40f041:	mov    rsi,QWORD PTR [rbp-0x18]
  40f045:	mov    rax,QWORD PTR [rbp-0x38]
  40f049:	mov    ecx,0x4
  40f04e:	mov    rdi,rax
  40f051:	call   406d3f <_start@@Base+0xaaf>
  40f056:	mov    QWORD PTR [rbp-0x40],rax
  40f05a:	mov    rax,QWORD PTR [rbp-0x18]
  40f05e:	cmp    rax,QWORD PTR [rbp-0x40]
  40f062:	je     40f0c2 <_start@@Base+0x8e32>
  40f064:	lea    rcx,[rbp-0x24]
  40f068:	mov    rdx,QWORD PTR [rbp-0x48]
  40f06c:	mov    rsi,QWORD PTR [rbp-0x40]
  40f070:	mov    rax,QWORD PTR [rbp-0x38]
  40f074:	mov    r8d,0x0
  40f07a:	mov    rdi,rax
  40f07d:	call   428a38 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f082:	mov    QWORD PTR [rbp-0x40],rax
  40f086:	mov    eax,DWORD PTR [rbp-0x24]
  40f089:	test   eax,eax
  40f08b:	je     40f307 <_start@@Base+0x9077>
  40f091:	mov    rax,QWORD PTR [rbp-0x38]
  40f095:	mov    rax,QWORD PTR [rax]
  40f098:	mov    esi,0x0
  40f09d:	mov    rdi,rax
  40f0a0:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40f0a5:	mov    QWORD PTR [rbp-0x10],rax
  40f0a9:	cmp    QWORD PTR [rbp-0x10],0x0
  40f0ae:	je     40f307 <_start@@Base+0x9077>
  40f0b4:	mov    edx,DWORD PTR [rbp-0x24]
  40f0b7:	mov    rax,QWORD PTR [rbp-0x10]
  40f0bb:	mov    DWORD PTR [rax],edx
  40f0bd:	jmp    40f2ab <_start@@Base+0x901b>
  40f0c2:	mov    rdx,QWORD PTR [rbp-0x48]
  40f0c6:	mov    rcx,QWORD PTR [rbp-0x40]
  40f0ca:	mov    rax,QWORD PTR [rbp-0x38]
  40f0ce:	mov    rsi,rcx
  40f0d1:	mov    rdi,rax
  40f0d4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f0d9:	mov    QWORD PTR [rbp-0x40],rax
  40f0dd:	jmp    40f2ab <_start@@Base+0x901b>
  40f0e2:	mov    rdx,QWORD PTR [rbp-0x48]
  40f0e6:	mov    rcx,QWORD PTR [rbp-0x40]
  40f0ea:	mov    rax,QWORD PTR [rbp-0x38]
  40f0ee:	mov    rsi,rcx
  40f0f1:	mov    rdi,rax
  40f0f4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f0f9:	mov    QWORD PTR [rbp-0x40],rax
  40f0fd:	jmp    40f2ab <_start@@Base+0x901b>
  40f102:	mov    rax,QWORD PTR [rbp-0x20]
  40f106:	mov    al,0x0
  40f108:	mov    rdx,rax
  40f10b:	movabs rax,0x75726c6461746100
  40f115:	cmp    rdx,rax
  40f118:	jne    40f1cb <_start@@Base+0x8f3b>
  40f11e:	mov    rax,QWORD PTR [rbp-0x40]
  40f122:	mov    QWORD PTR [rbp-0x18],rax
  40f126:	mov    rdx,QWORD PTR [rbp-0x48]
  40f12a:	mov    rsi,QWORD PTR [rbp-0x18]
  40f12e:	mov    rax,QWORD PTR [rbp-0x38]
  40f132:	mov    ecx,0x7
  40f137:	mov    rdi,rax
  40f13a:	call   406d3f <_start@@Base+0xaaf>
  40f13f:	mov    QWORD PTR [rbp-0x40],rax
  40f143:	mov    rax,QWORD PTR [rbp-0x18]
  40f147:	cmp    rax,QWORD PTR [rbp-0x40]
  40f14b:	je     40f1ab <_start@@Base+0x8f1b>
  40f14d:	lea    rcx,[rbp-0x24]
  40f151:	mov    rdx,QWORD PTR [rbp-0x48]
  40f155:	mov    rsi,QWORD PTR [rbp-0x40]
  40f159:	mov    rax,QWORD PTR [rbp-0x38]
  40f15d:	mov    r8d,0x1
  40f163:	mov    rdi,rax
  40f166:	call   428a38 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f16b:	mov    QWORD PTR [rbp-0x40],rax
  40f16f:	mov    eax,DWORD PTR [rbp-0x24]
  40f172:	test   eax,eax
  40f174:	je     40f30a <_start@@Base+0x907a>
  40f17a:	mov    rax,QWORD PTR [rbp-0x38]
  40f17e:	mov    rax,QWORD PTR [rax]
  40f181:	mov    esi,0x1
  40f186:	mov    rdi,rax
  40f189:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40f18e:	mov    QWORD PTR [rbp-0x10],rax
  40f192:	cmp    QWORD PTR [rbp-0x10],0x0
  40f197:	je     40f30a <_start@@Base+0x907a>
  40f19d:	mov    edx,DWORD PTR [rbp-0x24]
  40f1a0:	mov    rax,QWORD PTR [rbp-0x10]
  40f1a4:	mov    DWORD PTR [rax],edx
  40f1a6:	jmp    40f2ab <_start@@Base+0x901b>
  40f1ab:	mov    rdx,QWORD PTR [rbp-0x48]
  40f1af:	mov    rcx,QWORD PTR [rbp-0x40]
  40f1b3:	mov    rax,QWORD PTR [rbp-0x38]
  40f1b7:	mov    rsi,rcx
  40f1ba:	mov    rdi,rax
  40f1bd:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f1c2:	mov    QWORD PTR [rbp-0x40],rax
  40f1c6:	jmp    40f2ab <_start@@Base+0x901b>
  40f1cb:	mov    rax,QWORD PTR [rbp-0x20]
  40f1cf:	mov    ax,0x0
  40f1d3:	mov    rdx,rax
  40f1d6:	movabs rax,0x6e65737465640000
  40f1e0:	cmp    rdx,rax
  40f1e3:	jne    40f290 <_start@@Base+0x9000>
  40f1e9:	mov    rax,QWORD PTR [rbp-0x40]
  40f1ed:	mov    QWORD PTR [rbp-0x18],rax
  40f1f1:	mov    rdx,QWORD PTR [rbp-0x48]
  40f1f5:	mov    rsi,QWORD PTR [rbp-0x18]
  40f1f9:	mov    rax,QWORD PTR [rbp-0x38]
  40f1fd:	mov    ecx,0x6
  40f202:	mov    rdi,rax
  40f205:	call   406d3f <_start@@Base+0xaaf>
  40f20a:	mov    QWORD PTR [rbp-0x40],rax
  40f20e:	mov    rax,QWORD PTR [rbp-0x18]
  40f212:	cmp    rax,QWORD PTR [rbp-0x40]
  40f216:	je     40f273 <_start@@Base+0x8fe3>
  40f218:	lea    rcx,[rbp-0x24]
  40f21c:	mov    rdx,QWORD PTR [rbp-0x48]
  40f220:	mov    rsi,QWORD PTR [rbp-0x40]
  40f224:	mov    rax,QWORD PTR [rbp-0x38]
  40f228:	mov    r8d,0x0
  40f22e:	mov    rdi,rax
  40f231:	call   428a38 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f236:	mov    QWORD PTR [rbp-0x40],rax
  40f23a:	mov    eax,DWORD PTR [rbp-0x24]
  40f23d:	test   eax,eax
  40f23f:	je     40f30d <_start@@Base+0x907d>
  40f245:	mov    rax,QWORD PTR [rbp-0x38]
  40f249:	mov    rax,QWORD PTR [rax]
  40f24c:	mov    esi,0x2
  40f251:	mov    rdi,rax
  40f254:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40f259:	mov    QWORD PTR [rbp-0x10],rax
  40f25d:	cmp    QWORD PTR [rbp-0x10],0x0
  40f262:	je     40f30d <_start@@Base+0x907d>
  40f268:	mov    edx,DWORD PTR [rbp-0x24]
  40f26b:	mov    rax,QWORD PTR [rbp-0x10]
  40f26f:	mov    DWORD PTR [rax],edx
  40f271:	jmp    40f2ab <_start@@Base+0x901b>
  40f273:	mov    rdx,QWORD PTR [rbp-0x48]
  40f277:	mov    rcx,QWORD PTR [rbp-0x40]
  40f27b:	mov    rax,QWORD PTR [rbp-0x38]
  40f27f:	mov    rsi,rcx
  40f282:	mov    rdi,rax
  40f285:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f28a:	mov    QWORD PTR [rbp-0x40],rax
  40f28e:	jmp    40f2ab <_start@@Base+0x901b>
  40f290:	mov    rdx,QWORD PTR [rbp-0x48]
  40f294:	mov    rcx,QWORD PTR [rbp-0x40]
  40f298:	mov    rax,QWORD PTR [rbp-0x38]
  40f29c:	mov    rsi,rcx
  40f29f:	mov    rdi,rax
  40f2a2:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f2a7:	mov    QWORD PTR [rbp-0x40],rax
  40f2ab:	lea    rcx,[rbp-0x28]
  40f2af:	mov    rdx,QWORD PTR [rbp-0x48]
  40f2b3:	mov    rsi,QWORD PTR [rbp-0x40]
  40f2b7:	mov    rax,QWORD PTR [rbp-0x38]
  40f2bb:	mov    rdi,rax
  40f2be:	call   406a06 <_start@@Base+0x776>
  40f2c3:	mov    QWORD PTR [rbp-0x40],rax
  40f2c7:	mov    eax,DWORD PTR [rbp-0x28]
  40f2ca:	test   eax,eax
  40f2cc:	jne    40efcb <_start@@Base+0x8d3b>
  40f2d2:	mov    rax,QWORD PTR [rbp-0x38]
  40f2d6:	mov    eax,DWORD PTR [rax+0x1c]
  40f2d9:	test   eax,eax
  40f2db:	jne    40f310 <_start@@Base+0x9080>
  40f2dd:	mov    rax,QWORD PTR [rbp-0x38]
  40f2e1:	mov    rax,QWORD PTR [rax]
  40f2e4:	mov    rdi,rax
  40f2e7:	call   41ed42 <flatcc_builder_end_table@@Base>
  40f2ec:	mov    edx,eax
  40f2ee:	mov    rax,QWORD PTR [rbp-0x50]
  40f2f2:	mov    DWORD PTR [rax],edx
  40f2f4:	mov    rax,QWORD PTR [rbp-0x50]
  40f2f8:	mov    eax,DWORD PTR [rax]
  40f2fa:	test   eax,eax
  40f2fc:	je     40f313 <_start@@Base+0x9083>
  40f2fe:	mov    rax,QWORD PTR [rbp-0x40]
  40f302:	jmp    40f32d <_start@@Base+0x909d>
  40f304:	nop
  40f305:	jmp    40f314 <_start@@Base+0x9084>
  40f307:	nop
  40f308:	jmp    40f314 <_start@@Base+0x9084>
  40f30a:	nop
  40f30b:	jmp    40f314 <_start@@Base+0x9084>
  40f30d:	nop
  40f30e:	jmp    40f314 <_start@@Base+0x9084>
  40f310:	nop
  40f311:	jmp    40f314 <_start@@Base+0x9084>
  40f313:	nop
  40f314:	mov    rdx,QWORD PTR [rbp-0x48]
  40f318:	mov    rsi,QWORD PTR [rbp-0x40]
  40f31c:	mov    rax,QWORD PTR [rbp-0x38]
  40f320:	mov    ecx,0x21
  40f325:	mov    rdi,rax
  40f328:	call   427257 <flatcc_json_parser_set_error@@Base>
  40f32d:	mov    rdi,QWORD PTR [rbp-0x8]
  40f331:	xor    rdi,QWORD PTR fs:0x28
  40f33a:	je     40f341 <_start@@Base+0x90b1>
  40f33c:	call   4061a0 <__stack_chk_fail@plt>
  40f341:	leave  
  40f342:	ret    
  40f343:	endbr64 
  40f347:	push   rbp
  40f348:	mov    rbp,rsp
  40f34b:	sub    rsp,0x60
  40f34f:	mov    QWORD PTR [rbp-0x48],rdi
  40f353:	mov    QWORD PTR [rbp-0x50],rsi
  40f357:	mov    QWORD PTR [rbp-0x58],rdx
  40f35b:	mov    QWORD PTR [rbp-0x60],rcx
  40f35f:	mov    rax,QWORD PTR fs:0x28
  40f368:	mov    QWORD PTR [rbp-0x8],rax
  40f36c:	xor    eax,eax
  40f36e:	mov    rax,QWORD PTR [rbp-0x60]
  40f372:	mov    DWORD PTR [rax],0x0
  40f378:	mov    rax,QWORD PTR [rbp-0x48]
  40f37c:	mov    rax,QWORD PTR [rax]
  40f37f:	mov    esi,0x24
  40f384:	mov    rdi,rax
  40f387:	call   41e233 <flatcc_builder_start_table@@Base>
  40f38c:	test   eax,eax
  40f38e:	jne    412ae5 <_start@@Base+0xc855>
  40f394:	lea    rcx,[rbp-0x38]
  40f398:	mov    rdx,QWORD PTR [rbp-0x58]
  40f39c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f3a0:	mov    rax,QWORD PTR [rbp-0x48]
  40f3a4:	mov    r8,rcx
  40f3a7:	mov    ecx,0x1
  40f3ac:	mov    rdi,rax
  40f3af:	call   428e7c <flatcc_json_parser_prepare_unions@@Base>
  40f3b4:	cmp    QWORD PTR [rbp-0x58],rax
  40f3b8:	je     412aeb <_start@@Base+0xc85b>
  40f3be:	lea    rcx,[rbp-0x40]
  40f3c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3c6:	mov    rsi,QWORD PTR [rbp-0x50]
  40f3ca:	mov    rax,QWORD PTR [rbp-0x48]
  40f3ce:	mov    rdi,rax
  40f3d1:	call   406949 <_start@@Base+0x6b9>
  40f3d6:	mov    QWORD PTR [rbp-0x50],rax
  40f3da:	jmp    412a47 <_start@@Base+0xc7b7>
  40f3df:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3e3:	mov    rcx,QWORD PTR [rbp-0x50]
  40f3e7:	mov    rax,QWORD PTR [rbp-0x48]
  40f3eb:	mov    rsi,rcx
  40f3ee:	mov    rdi,rax
  40f3f1:	call   4066e9 <_start@@Base+0x459>
  40f3f6:	mov    QWORD PTR [rbp-0x50],rax
  40f3fa:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3fe:	mov    rax,QWORD PTR [rbp-0x50]
  40f402:	mov    rsi,rdx
  40f405:	mov    rdi,rax
  40f408:	call   406853 <_start@@Base+0x5c3>
  40f40d:	mov    QWORD PTR [rbp-0x28],rax
  40f411:	movabs rax,0x7465737461727260
  40f41b:	cmp    QWORD PTR [rbp-0x28],rax
  40f41f:	ja     41058a <_start@@Base+0xa2fa>
  40f425:	movabs rax,0x6e616d64ffffffff
  40f42f:	cmp    QWORD PTR [rbp-0x28],rax
  40f433:	ja     40fdda <_start@@Base+0x9b4a>
  40f439:	movabs rax,0x666c6577ffffffff
  40f443:	cmp    QWORD PTR [rbp-0x28],rax
  40f447:	ja     40f684 <_start@@Base+0x93f4>
  40f44d:	mov    rax,QWORD PTR [rbp-0x28]
  40f451:	and    rax,0xffffffffff000000
  40f457:	mov    rdx,rax
  40f45a:	movabs rax,0x656e656d79000000
  40f464:	cmp    rdx,rax
  40f467:	jne    40f514 <_start@@Base+0x9284>
  40f46d:	mov    rax,QWORD PTR [rbp-0x50]
  40f471:	mov    QWORD PTR [rbp-0x20],rax
  40f475:	mov    rdx,QWORD PTR [rbp-0x58]
  40f479:	mov    rsi,QWORD PTR [rbp-0x20]
  40f47d:	mov    rax,QWORD PTR [rbp-0x48]
  40f481:	mov    ecx,0x5
  40f486:	mov    rdi,rax
  40f489:	call   406d3f <_start@@Base+0xaaf>
  40f48e:	mov    QWORD PTR [rbp-0x50],rax
  40f492:	mov    rax,QWORD PTR [rbp-0x20]
  40f496:	cmp    rax,QWORD PTR [rbp-0x50]
  40f49a:	je     40f4f4 <_start@@Base+0x9264>
  40f49c:	lea    rcx,[rbp-0x3c]
  40f4a0:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4a4:	mov    rsi,QWORD PTR [rbp-0x50]
  40f4a8:	mov    rax,QWORD PTR [rbp-0x48]
  40f4ac:	mov    rdi,rax
  40f4af:	call   40f343 <_start@@Base+0x90b3>
  40f4b4:	mov    QWORD PTR [rbp-0x50],rax
  40f4b8:	mov    eax,DWORD PTR [rbp-0x3c]
  40f4bb:	test   eax,eax
  40f4bd:	je     412af1 <_start@@Base+0xc861>
  40f4c3:	mov    rax,QWORD PTR [rbp-0x48]
  40f4c7:	mov    rax,QWORD PTR [rax]
  40f4ca:	mov    esi,0xc
  40f4cf:	mov    rdi,rax
  40f4d2:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40f4d7:	mov    QWORD PTR [rbp-0x18],rax
  40f4db:	cmp    QWORD PTR [rbp-0x18],0x0
  40f4e0:	je     412af1 <_start@@Base+0xc861>
  40f4e6:	mov    edx,DWORD PTR [rbp-0x3c]
  40f4e9:	mov    rax,QWORD PTR [rbp-0x18]
  40f4ed:	mov    DWORD PTR [rax],edx
  40f4ef:	jmp    412a2b <_start@@Base+0xc79b>
  40f4f4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4f8:	mov    rcx,QWORD PTR [rbp-0x50]
  40f4fc:	mov    rax,QWORD PTR [rbp-0x48]
  40f500:	mov    rsi,rcx
  40f503:	mov    rdi,rax
  40f506:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f50b:	mov    QWORD PTR [rbp-0x50],rax
  40f50f:	jmp    412a2b <_start@@Base+0xc79b>
  40f514:	mov    rax,QWORD PTR [rbp-0x28]
  40f518:	and    rax,0xffffffffff000000
  40f51e:	mov    rdx,rax
  40f521:	movabs rax,0x636f6c6f72000000
  40f52b:	cmp    rdx,rax
  40f52e:	jne    40f664 <_start@@Base+0x93d4>
  40f534:	mov    rax,QWORD PTR [rbp-0x50]
  40f538:	mov    QWORD PTR [rbp-0x20],rax
  40f53c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f540:	mov    rsi,QWORD PTR [rbp-0x20]
  40f544:	mov    rax,QWORD PTR [rbp-0x48]
  40f548:	mov    ecx,0x5
  40f54d:	mov    rdi,rax
  40f550:	call   406d3f <_start@@Base+0xaaf>
  40f555:	mov    QWORD PTR [rbp-0x50],rax
  40f559:	mov    rax,QWORD PTR [rbp-0x20]
  40f55d:	cmp    rax,QWORD PTR [rbp-0x50]
  40f561:	je     40f644 <_start@@Base+0x93b4>
  40f567:	mov    BYTE PTR [rbp-0x30],0x0
  40f56b:	mov    rax,QWORD PTR [rbp-0x50]
  40f56f:	mov    QWORD PTR [rbp-0x20],rax
  40f573:	lea    rcx,[rbp-0x30]
  40f577:	mov    rdx,QWORD PTR [rbp-0x58]
  40f57b:	mov    rsi,QWORD PTR [rbp-0x20]
  40f57f:	mov    rax,QWORD PTR [rbp-0x48]
  40f583:	mov    rdi,rax
  40f586:	call   40793b <_start@@Base+0x16ab>
  40f58b:	mov    QWORD PTR [rbp-0x50],rax
  40f58f:	mov    rax,QWORD PTR [rbp-0x20]
  40f593:	cmp    rax,QWORD PTR [rbp-0x50]
  40f597:	jne    40f5e3 <_start@@Base+0x9353>
  40f599:	mov    rax,QWORD PTR [rbp-0x50]
  40f59d:	mov    QWORD PTR [rbp-0x20],rax
  40f5a1:	lea    rcx,[rbp-0x30]
  40f5a5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5a9:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5ad:	mov    rax,QWORD PTR [rbp-0x48]
  40f5b1:	mov    r8,rcx
  40f5b4:	lea    rcx,[rip+0x35f05]        # 4454c0 <__data_start@@Base+0x400>
  40f5bb:	mov    rdi,rax
  40f5be:	call   408483 <_start@@Base+0x21f3>
  40f5c3:	mov    QWORD PTR [rbp-0x50],rax
  40f5c7:	mov    rax,QWORD PTR [rbp-0x50]
  40f5cb:	cmp    rax,QWORD PTR [rbp-0x20]
  40f5cf:	je     412af7 <_start@@Base+0xc867>
  40f5d5:	mov    rax,QWORD PTR [rbp-0x50]
  40f5d9:	cmp    rax,QWORD PTR [rbp-0x58]
  40f5dd:	je     412af7 <_start@@Base+0xc867>
  40f5e3:	movzx  eax,BYTE PTR [rbp-0x30]
  40f5e7:	cmp    al,0x8
  40f5e9:	jne    40f5fd <_start@@Base+0x936d>
  40f5eb:	mov    rax,QWORD PTR [rbp-0x48]
  40f5ef:	mov    eax,DWORD PTR [rax+0x10]
  40f5f2:	and    eax,0x2
  40f5f5:	test   eax,eax
  40f5f7:	je     412a2b <_start@@Base+0xc79b>
  40f5fd:	mov    rax,QWORD PTR [rbp-0x48]
  40f601:	mov    rax,QWORD PTR [rax]
  40f604:	mov    ecx,0x1
  40f609:	mov    edx,0x1
  40f60e:	mov    esi,0x6
  40f613:	mov    rdi,rax
  40f616:	call   4203e3 <flatcc_builder_table_add@@Base>
  40f61b:	mov    QWORD PTR [rbp-0x10],rax
  40f61f:	cmp    QWORD PTR [rbp-0x10],0x0
  40f624:	je     412afd <_start@@Base+0xc86d>
  40f62a:	movzx  eax,BYTE PTR [rbp-0x30]
  40f62e:	movsx  edx,al
  40f631:	mov    rax,QWORD PTR [rbp-0x10]
  40f635:	mov    esi,edx
  40f637:	mov    rdi,rax
  40f63a:	call   406459 <_start@@Base+0x1c9>
  40f63f:	jmp    412a2b <_start@@Base+0xc79b>
  40f644:	mov    rdx,QWORD PTR [rbp-0x58]
  40f648:	mov    rcx,QWORD PTR [rbp-0x50]
  40f64c:	mov    rax,QWORD PTR [rbp-0x48]
  40f650:	mov    rsi,rcx
  40f653:	mov    rdi,rax
  40f656:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f65b:	mov    QWORD PTR [rbp-0x50],rax
  40f65f:	jmp    412a2b <_start@@Base+0xc79b>
  40f664:	mov    rdx,QWORD PTR [rbp-0x58]
  40f668:	mov    rcx,QWORD PTR [rbp-0x50]
  40f66c:	mov    rax,QWORD PTR [rbp-0x48]
  40f670:	mov    rsi,rcx
  40f673:	mov    rdi,rax
  40f676:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f67b:	mov    QWORD PTR [rbp-0x50],rax
  40f67f:	jmp    412a2b <_start@@Base+0xc79b>
  40f684:	movabs rax,0x686fffffffffffff
  40f68e:	cmp    QWORD PTR [rbp-0x28],rax
  40f692:	ja     40f89f <_start@@Base+0x960f>
  40f698:	movabs rax,0xffffffff00000000
  40f6a2:	and    rax,QWORD PTR [rbp-0x28]
  40f6a6:	mov    rdx,rax
  40f6a9:	movabs rax,0x666c657800000000
  40f6b3:	cmp    rdx,rax
  40f6b6:	jne    40f87f <_start@@Base+0x95ef>
  40f6bc:	mov    rax,QWORD PTR [rbp-0x50]
  40f6c0:	mov    QWORD PTR [rbp-0x20],rax
  40f6c4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6c8:	mov    rsi,QWORD PTR [rbp-0x20]
  40f6cc:	mov    rax,QWORD PTR [rbp-0x48]
  40f6d0:	mov    ecx,0x4
  40f6d5:	mov    rdi,rax
  40f6d8:	call   406d3f <_start@@Base+0xaaf>
  40f6dd:	mov    QWORD PTR [rbp-0x50],rax
  40f6e1:	mov    rax,QWORD PTR [rbp-0x20]
  40f6e5:	cmp    rax,QWORD PTR [rbp-0x50]
  40f6e9:	je     40f85f <_start@@Base+0x95cf>
  40f6ef:	mov    rax,QWORD PTR [rbp-0x48]
  40f6f3:	mov    rax,QWORD PTR [rax]
  40f6f6:	mov    ecx,0xffffffff
  40f6fb:	mov    edx,0x1
  40f700:	mov    esi,0x1
  40f705:	mov    rdi,rax
  40f708:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  40f70d:	test   eax,eax
  40f70f:	jne    412b03 <_start@@Base+0xc873>
  40f715:	lea    rcx,[rbp-0x40]
  40f719:	mov    rdx,QWORD PTR [rbp-0x58]
  40f71d:	mov    rsi,QWORD PTR [rbp-0x50]
  40f721:	mov    rax,QWORD PTR [rbp-0x48]
  40f725:	mov    rdi,rax
  40f728:	call   406b44 <_start@@Base+0x8b4>
  40f72d:	mov    QWORD PTR [rbp-0x50],rax
  40f731:	jmp    40f806 <_start@@Base+0x9576>
  40f736:	mov    BYTE PTR [rbp-0x30],0x0
  40f73a:	mov    rax,QWORD PTR [rbp-0x48]
  40f73e:	mov    rax,QWORD PTR [rax]
  40f741:	mov    esi,0x1
  40f746:	mov    rdi,rax
  40f749:	call   41d895 <flatcc_builder_extend_vector@@Base>
  40f74e:	mov    QWORD PTR [rbp-0x10],rax
  40f752:	cmp    QWORD PTR [rbp-0x10],0x0
  40f757:	je     412b09 <_start@@Base+0xc879>
  40f75d:	mov    rax,QWORD PTR [rbp-0x50]
  40f761:	mov    QWORD PTR [rbp-0x20],rax
  40f765:	lea    rcx,[rbp-0x30]
  40f769:	mov    rdx,QWORD PTR [rbp-0x58]
  40f76d:	mov    rsi,QWORD PTR [rbp-0x20]
  40f771:	mov    rax,QWORD PTR [rbp-0x48]
  40f775:	mov    rdi,rax
  40f778:	call   407626 <_start@@Base+0x1396>
  40f77d:	mov    QWORD PTR [rbp-0x50],rax
  40f781:	mov    rax,QWORD PTR [rbp-0x20]
  40f785:	cmp    rax,QWORD PTR [rbp-0x50]
  40f789:	jne    40f7d5 <_start@@Base+0x9545>
  40f78b:	mov    rax,QWORD PTR [rbp-0x50]
  40f78f:	mov    QWORD PTR [rbp-0x20],rax
  40f793:	lea    rcx,[rbp-0x30]
  40f797:	mov    rdx,QWORD PTR [rbp-0x58]
  40f79b:	mov    rsi,QWORD PTR [rbp-0x20]
  40f79f:	mov    rax,QWORD PTR [rbp-0x48]
  40f7a3:	mov    r8,rcx
  40f7a6:	lea    rcx,[rip+0x35d33]        # 4454e0 <__data_start@@Base+0x420>
  40f7ad:	mov    rdi,rax
  40f7b0:	call   407f08 <_start@@Base+0x1c78>
  40f7b5:	mov    QWORD PTR [rbp-0x50],rax
  40f7b9:	mov    rax,QWORD PTR [rbp-0x50]
  40f7bd:	cmp    rax,QWORD PTR [rbp-0x20]
  40f7c1:	je     412b0f <_start@@Base+0xc87f>
  40f7c7:	mov    rax,QWORD PTR [rbp-0x50]
  40f7cb:	cmp    rax,QWORD PTR [rbp-0x58]
  40f7cf:	je     412b0f <_start@@Base+0xc87f>
  40f7d5:	movzx  eax,BYTE PTR [rbp-0x30]
  40f7d9:	movzx  edx,al
  40f7dc:	mov    rax,QWORD PTR [rbp-0x10]
  40f7e0:	mov    esi,edx
  40f7e2:	mov    rdi,rax
  40f7e5:	call   406385 <_start@@Base+0xf5>
  40f7ea:	lea    rcx,[rbp-0x40]
  40f7ee:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7f2:	mov    rsi,QWORD PTR [rbp-0x50]
  40f7f6:	mov    rax,QWORD PTR [rbp-0x48]
  40f7fa:	mov    rdi,rax
  40f7fd:	call   406c01 <_start@@Base+0x971>
  40f802:	mov    QWORD PTR [rbp-0x50],rax
  40f806:	mov    eax,DWORD PTR [rbp-0x40]
  40f809:	test   eax,eax
  40f80b:	jne    40f736 <_start@@Base+0x94a6>
  40f811:	mov    rax,QWORD PTR [rbp-0x48]
  40f815:	mov    rax,QWORD PTR [rax]
  40f818:	mov    rdi,rax
  40f81b:	call   41f1da <flatcc_builder_end_vector@@Base>
  40f820:	mov    DWORD PTR [rbp-0x3c],eax
  40f823:	mov    eax,DWORD PTR [rbp-0x3c]
  40f826:	test   eax,eax
  40f828:	je     412b15 <_start@@Base+0xc885>
  40f82e:	mov    rax,QWORD PTR [rbp-0x48]
  40f832:	mov    rax,QWORD PTR [rax]
  40f835:	mov    esi,0x1e
  40f83a:	mov    rdi,rax
  40f83d:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40f842:	mov    QWORD PTR [rbp-0x18],rax
  40f846:	cmp    QWORD PTR [rbp-0x18],0x0
  40f84b:	je     412b15 <_start@@Base+0xc885>
  40f851:	mov    edx,DWORD PTR [rbp-0x3c]
  40f854:	mov    rax,QWORD PTR [rbp-0x18]
  40f858:	mov    DWORD PTR [rax],edx
  40f85a:	jmp    412a2b <_start@@Base+0xc79b>
  40f85f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f863:	mov    rcx,QWORD PTR [rbp-0x50]
  40f867:	mov    rax,QWORD PTR [rbp-0x48]
  40f86b:	mov    rsi,rcx
  40f86e:	mov    rdi,rax
  40f871:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f876:	mov    QWORD PTR [rbp-0x50],rax
  40f87a:	jmp    412a2b <_start@@Base+0xc79b>
  40f87f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f883:	mov    rcx,QWORD PTR [rbp-0x50]
  40f887:	mov    rax,QWORD PTR [rbp-0x48]
  40f88b:	mov    rsi,rcx
  40f88e:	mov    rdi,rax
  40f891:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40f896:	mov    QWORD PTR [rbp-0x50],rax
  40f89a:	jmp    412a2b <_start@@Base+0xc79b>
  40f89f:	movabs rax,0x696e76656e746f71
  40f8a9:	cmp    QWORD PTR [rbp-0x28],rax
  40f8ad:	ja     40fa2b <_start@@Base+0x979b>
  40f8b3:	movabs rax,0xffff000000000000
  40f8bd:	and    rax,QWORD PTR [rbp-0x28]
  40f8c1:	mov    rdx,rax
  40f8c4:	movabs rax,0x6870000000000000
  40f8ce:	cmp    rdx,rax
  40f8d1:	jne    40fa0b <_start@@Base+0x977b>
  40f8d7:	mov    rax,QWORD PTR [rbp-0x50]
  40f8db:	mov    QWORD PTR [rbp-0x20],rax
  40f8df:	mov    rdx,QWORD PTR [rbp-0x58]
  40f8e3:	mov    rsi,QWORD PTR [rbp-0x20]
  40f8e7:	mov    rax,QWORD PTR [rbp-0x48]
  40f8eb:	mov    ecx,0x2
  40f8f0:	mov    rdi,rax
  40f8f3:	call   406d3f <_start@@Base+0xaaf>
  40f8f8:	mov    QWORD PTR [rbp-0x50],rax
  40f8fc:	mov    rax,QWORD PTR [rbp-0x20]
  40f900:	cmp    rax,QWORD PTR [rbp-0x50]
  40f904:	je     40f9eb <_start@@Base+0x975b>
  40f90a:	mov    WORD PTR [rbp-0x30],0x0
  40f910:	mov    rax,QWORD PTR [rbp-0x50]
  40f914:	mov    QWORD PTR [rbp-0x20],rax
  40f918:	lea    rcx,[rbp-0x30]
  40f91c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f920:	mov    rsi,QWORD PTR [rbp-0x20]
  40f924:	mov    rax,QWORD PTR [rbp-0x48]
  40f928:	mov    rdi,rax
  40f92b:	call   407876 <_start@@Base+0x15e6>
  40f930:	mov    QWORD PTR [rbp-0x50],rax
  40f934:	mov    rax,QWORD PTR [rbp-0x20]
  40f938:	cmp    rax,QWORD PTR [rbp-0x50]
  40f93c:	jne    40f988 <_start@@Base+0x96f8>
  40f93e:	mov    rax,QWORD PTR [rbp-0x50]
  40f942:	mov    QWORD PTR [rbp-0x20],rax
  40f946:	lea    rcx,[rbp-0x30]
  40f94a:	mov    rdx,QWORD PTR [rbp-0x58]
  40f94e:	mov    rsi,QWORD PTR [rbp-0x20]
  40f952:	mov    rax,QWORD PTR [rbp-0x48]
  40f956:	mov    r8,rcx
  40f959:	lea    rcx,[rip+0x35ba0]        # 445500 <__data_start@@Base+0x440>
  40f960:	mov    rdi,rax
  40f963:	call   408321 <_start@@Base+0x2091>
  40f968:	mov    QWORD PTR [rbp-0x50],rax
  40f96c:	mov    rax,QWORD PTR [rbp-0x50]
  40f970:	cmp    rax,QWORD PTR [rbp-0x20]
  40f974:	je     412b1b <_start@@Base+0xc88b>
  40f97a:	mov    rax,QWORD PTR [rbp-0x50]
  40f97e:	cmp    rax,QWORD PTR [rbp-0x58]
  40f982:	je     412b1b <_start@@Base+0xc88b>
  40f988:	movzx  eax,WORD PTR [rbp-0x30]
  40f98c:	cmp    ax,0x64
  40f990:	jne    40f9a4 <_start@@Base+0x9714>
  40f992:	mov    rax,QWORD PTR [rbp-0x48]
  40f996:	mov    eax,DWORD PTR [rax+0x10]
  40f999:	and    eax,0x2
  40f99c:	test   eax,eax
  40f99e:	je     412a2b <_start@@Base+0xc79b>
  40f9a4:	mov    rax,QWORD PTR [rbp-0x48]
  40f9a8:	mov    rax,QWORD PTR [rax]
  40f9ab:	mov    ecx,0x2
  40f9b0:	mov    edx,0x2
  40f9b5:	mov    esi,0x2
  40f9ba:	mov    rdi,rax
  40f9bd:	call   4203e3 <flatcc_builder_table_add@@Base>
  40f9c2:	mov    QWORD PTR [rbp-0x10],rax
  40f9c6:	cmp    QWORD PTR [rbp-0x10],0x0
  40f9cb:	je     412b21 <_start@@Base+0xc891>
  40f9d1:	movzx  eax,WORD PTR [rbp-0x30]
  40f9d5:	movsx  edx,ax
  40f9d8:	mov    rax,QWORD PTR [rbp-0x10]
  40f9dc:	mov    esi,edx
  40f9de:	mov    rdi,rax
  40f9e1:	call   40648e <_start@@Base+0x1fe>
  40f9e6:	jmp    412a2b <_start@@Base+0xc79b>
  40f9eb:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9ef:	mov    rcx,QWORD PTR [rbp-0x50]
  40f9f3:	mov    rax,QWORD PTR [rbp-0x48]
  40f9f7:	mov    rsi,rcx
  40f9fa:	mov    rdi,rax
  40f9fd:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fa02:	mov    QWORD PTR [rbp-0x50],rax
  40fa06:	jmp    412a2b <_start@@Base+0xc79b>
  40fa0b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa0f:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa13:	mov    rax,QWORD PTR [rbp-0x48]
  40fa17:	mov    rsi,rcx
  40fa1a:	mov    rdi,rax
  40fa1d:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fa22:	mov    QWORD PTR [rbp-0x50],rax
  40fa26:	jmp    412a2b <_start@@Base+0xc79b>
  40fa2b:	movabs rax,0x696e76656e746f72
  40fa35:	cmp    QWORD PTR [rbp-0x28],rax
  40fa39:	jne    40fc62 <_start@@Base+0x99d2>
  40fa3f:	add    QWORD PTR [rbp-0x50],0x8
  40fa44:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa48:	mov    rax,QWORD PTR [rbp-0x50]
  40fa4c:	mov    rsi,rdx
  40fa4f:	mov    rdi,rax
  40fa52:	call   406853 <_start@@Base+0x5c3>
  40fa57:	mov    QWORD PTR [rbp-0x28],rax
  40fa5b:	movabs rax,0xff00000000000000
  40fa65:	and    rax,QWORD PTR [rbp-0x28]
  40fa69:	mov    rdx,rax
  40fa6c:	movabs rax,0x7900000000000000
  40fa76:	cmp    rdx,rax
  40fa79:	jne    40fc42 <_start@@Base+0x99b2>
  40fa7f:	mov    rax,QWORD PTR [rbp-0x50]
  40fa83:	mov    QWORD PTR [rbp-0x20],rax
  40fa87:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa8b:	mov    rsi,QWORD PTR [rbp-0x20]
  40fa8f:	mov    rax,QWORD PTR [rbp-0x48]
  40fa93:	mov    ecx,0x1
  40fa98:	mov    rdi,rax
  40fa9b:	call   406d3f <_start@@Base+0xaaf>
  40faa0:	mov    QWORD PTR [rbp-0x50],rax
  40faa4:	mov    rax,QWORD PTR [rbp-0x20]
  40faa8:	cmp    rax,QWORD PTR [rbp-0x50]
  40faac:	je     40fc22 <_start@@Base+0x9992>
  40fab2:	mov    rax,QWORD PTR [rbp-0x48]
  40fab6:	mov    rax,QWORD PTR [rax]
  40fab9:	mov    ecx,0xffffffff
  40fabe:	mov    edx,0x1
  40fac3:	mov    esi,0x1
  40fac8:	mov    rdi,rax
  40facb:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  40fad0:	test   eax,eax
  40fad2:	jne    412b27 <_start@@Base+0xc897>
  40fad8:	lea    rcx,[rbp-0x40]
  40fadc:	mov    rdx,QWORD PTR [rbp-0x58]
  40fae0:	mov    rsi,QWORD PTR [rbp-0x50]
  40fae4:	mov    rax,QWORD PTR [rbp-0x48]
  40fae8:	mov    rdi,rax
  40faeb:	call   406b44 <_start@@Base+0x8b4>
  40faf0:	mov    QWORD PTR [rbp-0x50],rax
  40faf4:	jmp    40fbc9 <_start@@Base+0x9939>
  40faf9:	mov    BYTE PTR [rbp-0x30],0x0
  40fafd:	mov    rax,QWORD PTR [rbp-0x48]
  40fb01:	mov    rax,QWORD PTR [rax]
  40fb04:	mov    esi,0x1
  40fb09:	mov    rdi,rax
  40fb0c:	call   41d895 <flatcc_builder_extend_vector@@Base>
  40fb11:	mov    QWORD PTR [rbp-0x10],rax
  40fb15:	cmp    QWORD PTR [rbp-0x10],0x0
  40fb1a:	je     412b2d <_start@@Base+0xc89d>
  40fb20:	mov    rax,QWORD PTR [rbp-0x50]
  40fb24:	mov    QWORD PTR [rbp-0x20],rax
  40fb28:	lea    rcx,[rbp-0x30]
  40fb2c:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb30:	mov    rsi,QWORD PTR [rbp-0x20]
  40fb34:	mov    rax,QWORD PTR [rbp-0x48]
  40fb38:	mov    rdi,rax
  40fb3b:	call   407626 <_start@@Base+0x1396>
  40fb40:	mov    QWORD PTR [rbp-0x50],rax
  40fb44:	mov    rax,QWORD PTR [rbp-0x20]
  40fb48:	cmp    rax,QWORD PTR [rbp-0x50]
  40fb4c:	jne    40fb98 <_start@@Base+0x9908>
  40fb4e:	mov    rax,QWORD PTR [rbp-0x50]
  40fb52:	mov    QWORD PTR [rbp-0x20],rax
  40fb56:	lea    rcx,[rbp-0x30]
  40fb5a:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb5e:	mov    rsi,QWORD PTR [rbp-0x20]
  40fb62:	mov    rax,QWORD PTR [rbp-0x48]
  40fb66:	mov    r8,rcx
  40fb69:	lea    rcx,[rip+0x359b0]        # 445520 <__data_start@@Base+0x460>
  40fb70:	mov    rdi,rax
  40fb73:	call   407f08 <_start@@Base+0x1c78>
  40fb78:	mov    QWORD PTR [rbp-0x50],rax
  40fb7c:	mov    rax,QWORD PTR [rbp-0x50]
  40fb80:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb84:	je     412b33 <_start@@Base+0xc8a3>
  40fb8a:	mov    rax,QWORD PTR [rbp-0x50]
  40fb8e:	cmp    rax,QWORD PTR [rbp-0x58]
  40fb92:	je     412b33 <_start@@Base+0xc8a3>
  40fb98:	movzx  eax,BYTE PTR [rbp-0x30]
  40fb9c:	movzx  edx,al
  40fb9f:	mov    rax,QWORD PTR [rbp-0x10]
  40fba3:	mov    esi,edx
  40fba5:	mov    rdi,rax
  40fba8:	call   406385 <_start@@Base+0xf5>
  40fbad:	lea    rcx,[rbp-0x40]
  40fbb1:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbb5:	mov    rsi,QWORD PTR [rbp-0x50]
  40fbb9:	mov    rax,QWORD PTR [rbp-0x48]
  40fbbd:	mov    rdi,rax
  40fbc0:	call   406c01 <_start@@Base+0x971>
  40fbc5:	mov    QWORD PTR [rbp-0x50],rax
  40fbc9:	mov    eax,DWORD PTR [rbp-0x40]
  40fbcc:	test   eax,eax
  40fbce:	jne    40faf9 <_start@@Base+0x9869>
  40fbd4:	mov    rax,QWORD PTR [rbp-0x48]
  40fbd8:	mov    rax,QWORD PTR [rax]
  40fbdb:	mov    rdi,rax
  40fbde:	call   41f1da <flatcc_builder_end_vector@@Base>
  40fbe3:	mov    DWORD PTR [rbp-0x3c],eax
  40fbe6:	mov    eax,DWORD PTR [rbp-0x3c]
  40fbe9:	test   eax,eax
  40fbeb:	je     412b39 <_start@@Base+0xc8a9>
  40fbf1:	mov    rax,QWORD PTR [rbp-0x48]
  40fbf5:	mov    rax,QWORD PTR [rax]
  40fbf8:	mov    esi,0x5
  40fbfd:	mov    rdi,rax
  40fc00:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40fc05:	mov    QWORD PTR [rbp-0x18],rax
  40fc09:	cmp    QWORD PTR [rbp-0x18],0x0
  40fc0e:	je     412b39 <_start@@Base+0xc8a9>
  40fc14:	mov    edx,DWORD PTR [rbp-0x3c]
  40fc17:	mov    rax,QWORD PTR [rbp-0x18]
  40fc1b:	mov    DWORD PTR [rax],edx
  40fc1d:	jmp    412a2b <_start@@Base+0xc79b>
  40fc22:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc26:	mov    rcx,QWORD PTR [rbp-0x50]
  40fc2a:	mov    rax,QWORD PTR [rbp-0x48]
  40fc2e:	mov    rsi,rcx
  40fc31:	mov    rdi,rax
  40fc34:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc39:	mov    QWORD PTR [rbp-0x50],rax
  40fc3d:	jmp    412a2b <_start@@Base+0xc79b>
  40fc42:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc46:	mov    rcx,QWORD PTR [rbp-0x50]
  40fc4a:	mov    rax,QWORD PTR [rbp-0x48]
  40fc4e:	mov    rsi,rcx
  40fc51:	mov    rdi,rax
  40fc54:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc59:	mov    QWORD PTR [rbp-0x50],rax
  40fc5d:	jmp    412a2b <_start@@Base+0xc79b>
  40fc62:	movabs rax,0xffffffff00000000
  40fc6c:	and    rax,QWORD PTR [rbp-0x28]
  40fc70:	mov    rdx,rax
  40fc73:	movabs rax,0x6d616e6100000000
  40fc7d:	cmp    rdx,rax
  40fc80:	jne    40fdba <_start@@Base+0x9b2a>
  40fc86:	mov    rax,QWORD PTR [rbp-0x50]
  40fc8a:	mov    QWORD PTR [rbp-0x20],rax
  40fc8e:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc92:	mov    rsi,QWORD PTR [rbp-0x20]
  40fc96:	mov    rax,QWORD PTR [rbp-0x48]
  40fc9a:	mov    ecx,0x4
  40fc9f:	mov    rdi,rax
  40fca2:	call   406d3f <_start@@Base+0xaaf>
  40fca7:	mov    QWORD PTR [rbp-0x50],rax
  40fcab:	mov    rax,QWORD PTR [rbp-0x20]
  40fcaf:	cmp    rax,QWORD PTR [rbp-0x50]
  40fcb3:	je     40fd9a <_start@@Base+0x9b0a>
  40fcb9:	mov    WORD PTR [rbp-0x30],0x0
  40fcbf:	mov    rax,QWORD PTR [rbp-0x50]
  40fcc3:	mov    QWORD PTR [rbp-0x20],rax
  40fcc7:	lea    rcx,[rbp-0x30]
  40fccb:	mov    rdx,QWORD PTR [rbp-0x58]
  40fccf:	mov    rsi,QWORD PTR [rbp-0x20]
  40fcd3:	mov    rax,QWORD PTR [rbp-0x48]
  40fcd7:	mov    rdi,rax
  40fcda:	call   407876 <_start@@Base+0x15e6>
  40fcdf:	mov    QWORD PTR [rbp-0x50],rax
  40fce3:	mov    rax,QWORD PTR [rbp-0x20]
  40fce7:	cmp    rax,QWORD PTR [rbp-0x50]
  40fceb:	jne    40fd37 <_start@@Base+0x9aa7>
  40fced:	mov    rax,QWORD PTR [rbp-0x50]
  40fcf1:	mov    QWORD PTR [rbp-0x20],rax
  40fcf5:	lea    rcx,[rbp-0x30]
  40fcf9:	mov    rdx,QWORD PTR [rbp-0x58]
  40fcfd:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd01:	mov    rax,QWORD PTR [rbp-0x48]
  40fd05:	mov    r8,rcx
  40fd08:	lea    rcx,[rip+0x35831]        # 445540 <__data_start@@Base+0x480>
  40fd0f:	mov    rdi,rax
  40fd12:	call   408321 <_start@@Base+0x2091>
  40fd17:	mov    QWORD PTR [rbp-0x50],rax
  40fd1b:	mov    rax,QWORD PTR [rbp-0x50]
  40fd1f:	cmp    rax,QWORD PTR [rbp-0x20]
  40fd23:	je     412b3f <_start@@Base+0xc8af>
  40fd29:	mov    rax,QWORD PTR [rbp-0x50]
  40fd2d:	cmp    rax,QWORD PTR [rbp-0x58]
  40fd31:	je     412b3f <_start@@Base+0xc8af>
  40fd37:	movzx  eax,WORD PTR [rbp-0x30]
  40fd3b:	cmp    ax,0x96
  40fd3f:	jne    40fd53 <_start@@Base+0x9ac3>
  40fd41:	mov    rax,QWORD PTR [rbp-0x48]
  40fd45:	mov    eax,DWORD PTR [rax+0x10]
  40fd48:	and    eax,0x2
  40fd4b:	test   eax,eax
  40fd4d:	je     412a2b <_start@@Base+0xc79b>
  40fd53:	mov    rax,QWORD PTR [rbp-0x48]
  40fd57:	mov    rax,QWORD PTR [rax]
  40fd5a:	mov    ecx,0x2
  40fd5f:	mov    edx,0x2
  40fd64:	mov    esi,0x1
  40fd69:	mov    rdi,rax
  40fd6c:	call   4203e3 <flatcc_builder_table_add@@Base>
  40fd71:	mov    QWORD PTR [rbp-0x10],rax
  40fd75:	cmp    QWORD PTR [rbp-0x10],0x0
  40fd7a:	je     412b45 <_start@@Base+0xc8b5>
  40fd80:	movzx  eax,WORD PTR [rbp-0x30]
  40fd84:	movsx  edx,ax
  40fd87:	mov    rax,QWORD PTR [rbp-0x10]
  40fd8b:	mov    esi,edx
  40fd8d:	mov    rdi,rax
  40fd90:	call   40648e <_start@@Base+0x1fe>
  40fd95:	jmp    412a2b <_start@@Base+0xc79b>
  40fd9a:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd9e:	mov    rcx,QWORD PTR [rbp-0x50]
  40fda2:	mov    rax,QWORD PTR [rbp-0x48]
  40fda6:	mov    rsi,rcx
  40fda9:	mov    rdi,rax
  40fdac:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fdb1:	mov    QWORD PTR [rbp-0x50],rax
  40fdb5:	jmp    412a2b <_start@@Base+0xc79b>
  40fdba:	mov    rdx,QWORD PTR [rbp-0x58]
  40fdbe:	mov    rcx,QWORD PTR [rbp-0x50]
  40fdc2:	mov    rax,QWORD PTR [rbp-0x48]
  40fdc6:	mov    rsi,rcx
  40fdc9:	mov    rdi,rax
  40fdcc:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fdd1:	mov    QWORD PTR [rbp-0x50],rax
  40fdd5:	jmp    412a2b <_start@@Base+0xc79b>
  40fdda:	movabs rax,0x74657373ffffffff
  40fde4:	cmp    QWORD PTR [rbp-0x28],rax
  40fde8:	ja     410135 <_start@@Base+0x9ea5>
  40fdee:	movabs rax,0x706172656e745f6d
  40fdf8:	cmp    QWORD PTR [rbp-0x28],rax
  40fdfc:	ja     40feed <_start@@Base+0x9c5d>
  40fe02:	movabs rax,0xffffffff00000000
  40fe0c:	and    rax,QWORD PTR [rbp-0x28]
  40fe10:	mov    rdx,rax
  40fe13:	movabs rax,0x6e616d6500000000
  40fe1d:	cmp    rdx,rax
  40fe20:	jne    40fecd <_start@@Base+0x9c3d>
  40fe26:	mov    rax,QWORD PTR [rbp-0x50]
  40fe2a:	mov    QWORD PTR [rbp-0x20],rax
  40fe2e:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe32:	mov    rsi,QWORD PTR [rbp-0x20]
  40fe36:	mov    rax,QWORD PTR [rbp-0x48]
  40fe3a:	mov    ecx,0x4
  40fe3f:	mov    rdi,rax
  40fe42:	call   406d3f <_start@@Base+0xaaf>
  40fe47:	mov    QWORD PTR [rbp-0x50],rax
  40fe4b:	mov    rax,QWORD PTR [rbp-0x20]
  40fe4f:	cmp    rax,QWORD PTR [rbp-0x50]
  40fe53:	je     40fead <_start@@Base+0x9c1d>
  40fe55:	lea    rcx,[rbp-0x3c]
  40fe59:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe5d:	mov    rsi,QWORD PTR [rbp-0x50]
  40fe61:	mov    rax,QWORD PTR [rbp-0x48]
  40fe65:	mov    rdi,rax
  40fe68:	call   428c7d <flatcc_json_parser_build_string@@Base>
  40fe6d:	mov    QWORD PTR [rbp-0x50],rax
  40fe71:	mov    eax,DWORD PTR [rbp-0x3c]
  40fe74:	test   eax,eax
  40fe76:	je     412b4b <_start@@Base+0xc8bb>
  40fe7c:	mov    rax,QWORD PTR [rbp-0x48]
  40fe80:	mov    rax,QWORD PTR [rax]
  40fe83:	mov    esi,0x3
  40fe88:	mov    rdi,rax
  40fe8b:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40fe90:	mov    QWORD PTR [rbp-0x18],rax
  40fe94:	cmp    QWORD PTR [rbp-0x18],0x0
  40fe99:	je     412b4b <_start@@Base+0xc8bb>
  40fe9f:	mov    edx,DWORD PTR [rbp-0x3c]
  40fea2:	mov    rax,QWORD PTR [rbp-0x18]
  40fea6:	mov    DWORD PTR [rax],edx
  40fea8:	jmp    412a2b <_start@@Base+0xc79b>
  40fead:	mov    rdx,QWORD PTR [rbp-0x58]
  40feb1:	mov    rcx,QWORD PTR [rbp-0x50]
  40feb5:	mov    rax,QWORD PTR [rbp-0x48]
  40feb9:	mov    rsi,rcx
  40febc:	mov    rdi,rax
  40febf:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fec4:	mov    QWORD PTR [rbp-0x50],rax
  40fec8:	jmp    412a2b <_start@@Base+0xc79b>
  40fecd:	mov    rdx,QWORD PTR [rbp-0x58]
  40fed1:	mov    rcx,QWORD PTR [rbp-0x50]
  40fed5:	mov    rax,QWORD PTR [rbp-0x48]
  40fed9:	mov    rsi,rcx
  40fedc:	mov    rdi,rax
  40fedf:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  40fee4:	mov    QWORD PTR [rbp-0x50],rax
  40fee8:	jmp    412a2b <_start@@Base+0xc79b>
  40feed:	movabs rax,0x706172656e745f6e
  40fef7:	cmp    QWORD PTR [rbp-0x28],rax
  40fefb:	jne    410054 <_start@@Base+0x9dc4>
  40ff01:	add    QWORD PTR [rbp-0x50],0x8
  40ff06:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff0a:	mov    rax,QWORD PTR [rbp-0x50]
  40ff0e:	mov    rsi,rdx
  40ff11:	mov    rdi,rax
  40ff14:	call   406853 <_start@@Base+0x5c3>
  40ff19:	mov    QWORD PTR [rbp-0x28],rax
  40ff1d:	movabs rax,0x616d657370616365
  40ff27:	cmp    QWORD PTR [rbp-0x28],rax
  40ff2b:	jne    410034 <_start@@Base+0x9da4>
  40ff31:	add    QWORD PTR [rbp-0x50],0x8
  40ff36:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff3a:	mov    rax,QWORD PTR [rbp-0x50]
  40ff3e:	mov    rsi,rdx
  40ff41:	mov    rdi,rax
  40ff44:	call   406853 <_start@@Base+0x5c3>
  40ff49:	mov    QWORD PTR [rbp-0x28],rax
  40ff4d:	mov    rax,QWORD PTR [rbp-0x28]
  40ff51:	and    rax,0xffffffffff000000
  40ff57:	mov    rdx,rax
  40ff5a:	movabs rax,0x5f74657374000000
  40ff64:	cmp    rdx,rax
  40ff67:	jne    410014 <_start@@Base+0x9d84>
  40ff6d:	mov    rax,QWORD PTR [rbp-0x50]
  40ff71:	mov    QWORD PTR [rbp-0x20],rax
  40ff75:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff79:	mov    rsi,QWORD PTR [rbp-0x20]
  40ff7d:	mov    rax,QWORD PTR [rbp-0x48]
  40ff81:	mov    ecx,0x5
  40ff86:	mov    rdi,rax
  40ff89:	call   406d3f <_start@@Base+0xaaf>
  40ff8e:	mov    QWORD PTR [rbp-0x50],rax
  40ff92:	mov    rax,QWORD PTR [rbp-0x20]
  40ff96:	cmp    rax,QWORD PTR [rbp-0x50]
  40ff9a:	je     40fff4 <_start@@Base+0x9d64>
  40ff9c:	lea    rcx,[rbp-0x3c]
  40ffa0:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffa4:	mov    rsi,QWORD PTR [rbp-0x50]
  40ffa8:	mov    rax,QWORD PTR [rbp-0x48]
  40ffac:	mov    rdi,rax
  40ffaf:	call   4095ff <_start@@Base+0x336f>
  40ffb4:	mov    QWORD PTR [rbp-0x50],rax
  40ffb8:	mov    eax,DWORD PTR [rbp-0x3c]
  40ffbb:	test   eax,eax
  40ffbd:	je     412b51 <_start@@Base+0xc8c1>
  40ffc3:	mov    rax,QWORD PTR [rbp-0x48]
  40ffc7:	mov    rax,QWORD PTR [rax]
  40ffca:	mov    esi,0x22
  40ffcf:	mov    rdi,rax
  40ffd2:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  40ffd7:	mov    QWORD PTR [rbp-0x18],rax
  40ffdb:	cmp    QWORD PTR [rbp-0x18],0x0
  40ffe0:	je     412b51 <_start@@Base+0xc8c1>
  40ffe6:	mov    edx,DWORD PTR [rbp-0x3c]
  40ffe9:	mov    rax,QWORD PTR [rbp-0x18]
  40ffed:	mov    DWORD PTR [rax],edx
  40ffef:	jmp    412a2b <_start@@Base+0xc79b>
  40fff4:	mov    rdx,QWORD PTR [rbp-0x58]
  40fff8:	mov    rcx,QWORD PTR [rbp-0x50]
  40fffc:	mov    rax,QWORD PTR [rbp-0x48]
  410000:	mov    rsi,rcx
  410003:	mov    rdi,rax
  410006:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41000b:	mov    QWORD PTR [rbp-0x50],rax
  41000f:	jmp    412a2b <_start@@Base+0xc79b>
  410014:	mov    rdx,QWORD PTR [rbp-0x58]
  410018:	mov    rcx,QWORD PTR [rbp-0x50]
  41001c:	mov    rax,QWORD PTR [rbp-0x48]
  410020:	mov    rsi,rcx
  410023:	mov    rdi,rax
  410026:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41002b:	mov    QWORD PTR [rbp-0x50],rax
  41002f:	jmp    412a2b <_start@@Base+0xc79b>
  410034:	mov    rdx,QWORD PTR [rbp-0x58]
  410038:	mov    rcx,QWORD PTR [rbp-0x50]
  41003c:	mov    rax,QWORD PTR [rbp-0x48]
  410040:	mov    rsi,rcx
  410043:	mov    rdi,rax
  410046:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41004b:	mov    QWORD PTR [rbp-0x50],rax
  41004f:	jmp    412a2b <_start@@Base+0xc79b>
  410054:	movabs rax,0xffffff0000000000
  41005e:	and    rax,QWORD PTR [rbp-0x28]
  410062:	mov    rdx,rax
  410065:	movabs rax,0x706f730000000000
  41006f:	cmp    rdx,rax
  410072:	jne    410115 <_start@@Base+0x9e85>
  410078:	mov    rax,QWORD PTR [rbp-0x50]
  41007c:	mov    QWORD PTR [rbp-0x20],rax
  410080:	mov    rdx,QWORD PTR [rbp-0x58]
  410084:	mov    rsi,QWORD PTR [rbp-0x20]
  410088:	mov    rax,QWORD PTR [rbp-0x48]
  41008c:	mov    ecx,0x3
  410091:	mov    rdi,rax
  410094:	call   406d3f <_start@@Base+0xaaf>
  410099:	mov    QWORD PTR [rbp-0x50],rax
  41009d:	mov    rax,QWORD PTR [rbp-0x20]
  4100a1:	cmp    rax,QWORD PTR [rbp-0x50]
  4100a5:	je     4100f5 <_start@@Base+0x9e65>
  4100a7:	mov    rax,QWORD PTR [rbp-0x48]
  4100ab:	mov    rax,QWORD PTR [rax]
  4100ae:	mov    ecx,0x10
  4100b3:	mov    edx,0x20
  4100b8:	mov    esi,0x0
  4100bd:	mov    rdi,rax
  4100c0:	call   4203e3 <flatcc_builder_table_add@@Base>
  4100c5:	mov    QWORD PTR [rbp-0x10],rax
  4100c9:	cmp    QWORD PTR [rbp-0x10],0x0
  4100ce:	je     412b57 <_start@@Base+0xc8c7>
  4100d4:	mov    rcx,QWORD PTR [rbp-0x10]
  4100d8:	mov    rdx,QWORD PTR [rbp-0x58]
  4100dc:	mov    rsi,QWORD PTR [rbp-0x50]
  4100e0:	mov    rax,QWORD PTR [rbp-0x48]
  4100e4:	mov    rdi,rax
  4100e7:	call   40c083 <_start@@Base+0x5df3>
  4100ec:	mov    QWORD PTR [rbp-0x50],rax
  4100f0:	jmp    412a2b <_start@@Base+0xc79b>
  4100f5:	mov    rdx,QWORD PTR [rbp-0x58]
  4100f9:	mov    rcx,QWORD PTR [rbp-0x50]
  4100fd:	mov    rax,QWORD PTR [rbp-0x48]
  410101:	mov    rsi,rcx
  410104:	mov    rdi,rax
  410107:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41010c:	mov    QWORD PTR [rbp-0x50],rax
  410110:	jmp    412a2b <_start@@Base+0xc79b>
  410115:	mov    rdx,QWORD PTR [rbp-0x58]
  410119:	mov    rcx,QWORD PTR [rbp-0x50]
  41011d:	mov    rax,QWORD PTR [rbp-0x48]
  410121:	mov    rsi,rcx
  410124:	mov    rdi,rax
  410127:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41012c:	mov    QWORD PTR [rbp-0x50],rax
  410130:	jmp    412a2b <_start@@Base+0xc79b>
  410135:	mov    rax,QWORD PTR [rbp-0x28]
  410139:	and    rax,0xffffffffff000000
  41013f:	mov    rdx,rax
  410142:	movabs rax,0x7465737434000000
  41014c:	cmp    rdx,rax
  41014f:	jne    41027c <_start@@Base+0x9fec>
  410155:	mov    rax,QWORD PTR [rbp-0x50]
  410159:	mov    QWORD PTR [rbp-0x20],rax
  41015d:	mov    rdx,QWORD PTR [rbp-0x58]
  410161:	mov    rsi,QWORD PTR [rbp-0x20]
  410165:	mov    rax,QWORD PTR [rbp-0x48]
  410169:	mov    ecx,0x5
  41016e:	mov    rdi,rax
  410171:	call   406d3f <_start@@Base+0xaaf>
  410176:	mov    QWORD PTR [rbp-0x50],rax
  41017a:	mov    rax,QWORD PTR [rbp-0x20]
  41017e:	cmp    rax,QWORD PTR [rbp-0x50]
  410182:	je     41030a <_start@@Base+0xa07a>
  410188:	mov    rax,QWORD PTR [rbp-0x48]
  41018c:	mov    rax,QWORD PTR [rax]
  41018f:	mov    ecx,0x3fffffff
  410194:	mov    edx,0x2
  410199:	mov    esi,0x4
  41019e:	mov    rdi,rax
  4101a1:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  4101a6:	test   eax,eax
  4101a8:	jne    412b5d <_start@@Base+0xc8cd>
  4101ae:	lea    rcx,[rbp-0x40]
  4101b2:	mov    rdx,QWORD PTR [rbp-0x58]
  4101b6:	mov    rsi,QWORD PTR [rbp-0x50]
  4101ba:	mov    rax,QWORD PTR [rbp-0x48]
  4101be:	mov    rdi,rax
  4101c1:	call   406b44 <_start@@Base+0x8b4>
  4101c6:	mov    QWORD PTR [rbp-0x50],rax
  4101ca:	jmp    410227 <_start@@Base+0x9f97>
  4101cc:	mov    rax,QWORD PTR [rbp-0x48]
  4101d0:	mov    rax,QWORD PTR [rax]
  4101d3:	mov    esi,0x1
  4101d8:	mov    rdi,rax
  4101db:	call   41d895 <flatcc_builder_extend_vector@@Base>
  4101e0:	mov    QWORD PTR [rbp-0x10],rax
  4101e4:	cmp    QWORD PTR [rbp-0x10],0x0
  4101e9:	je     412b63 <_start@@Base+0xc8d3>
  4101ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4101f3:	mov    rdx,QWORD PTR [rbp-0x58]
  4101f7:	mov    rsi,QWORD PTR [rbp-0x50]
  4101fb:	mov    rax,QWORD PTR [rbp-0x48]
  4101ff:	mov    rdi,rax
  410202:	call   40a7af <_start@@Base+0x451f>
  410207:	mov    QWORD PTR [rbp-0x50],rax
  41020b:	lea    rcx,[rbp-0x40]
  41020f:	mov    rdx,QWORD PTR [rbp-0x58]
  410213:	mov    rsi,QWORD PTR [rbp-0x50]
  410217:	mov    rax,QWORD PTR [rbp-0x48]
  41021b:	mov    rdi,rax
  41021e:	call   406c01 <_start@@Base+0x971>
  410223:	mov    QWORD PTR [rbp-0x50],rax
  410227:	mov    eax,DWORD PTR [rbp-0x40]
  41022a:	test   eax,eax
  41022c:	jne    4101cc <_start@@Base+0x9f3c>
  41022e:	mov    rax,QWORD PTR [rbp-0x48]
  410232:	mov    rax,QWORD PTR [rax]
  410235:	mov    rdi,rax
  410238:	call   41f1da <flatcc_builder_end_vector@@Base>
  41023d:	mov    DWORD PTR [rbp-0x3c],eax
  410240:	mov    eax,DWORD PTR [rbp-0x3c]
  410243:	test   eax,eax
  410245:	je     412b69 <_start@@Base+0xc8d9>
  41024b:	mov    rax,QWORD PTR [rbp-0x48]
  41024f:	mov    rax,QWORD PTR [rax]
  410252:	mov    esi,0x9
  410257:	mov    rdi,rax
  41025a:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41025f:	mov    QWORD PTR [rbp-0x18],rax
  410263:	cmp    QWORD PTR [rbp-0x18],0x0
  410268:	je     412b69 <_start@@Base+0xc8d9>
  41026e:	mov    edx,DWORD PTR [rbp-0x3c]
  410271:	mov    rax,QWORD PTR [rbp-0x18]
  410275:	mov    DWORD PTR [rax],edx
  410277:	jmp    412a2b <_start@@Base+0xc79b>
  41027c:	movabs rax,0xffffffff00000000
  410286:	and    rax,QWORD PTR [rbp-0x28]
  41028a:	mov    rdx,rax
  41028d:	movabs rax,0x7465737400000000
  410297:	cmp    rdx,rax
  41029a:	jne    41030d <_start@@Base+0xa07d>
  41029c:	mov    rax,QWORD PTR [rbp-0x50]
  4102a0:	mov    QWORD PTR [rbp-0x20],rax
  4102a4:	mov    rdx,QWORD PTR [rbp-0x58]
  4102a8:	mov    rsi,QWORD PTR [rbp-0x20]
  4102ac:	mov    rax,QWORD PTR [rbp-0x48]
  4102b0:	mov    ecx,0x4
  4102b5:	mov    rdi,rax
  4102b8:	call   406d3f <_start@@Base+0xaaf>
  4102bd:	mov    QWORD PTR [rbp-0x50],rax
  4102c1:	mov    rax,QWORD PTR [rbp-0x20]
  4102c5:	cmp    rax,QWORD PTR [rbp-0x50]
  4102c9:	je     410310 <_start@@Base+0xa080>
  4102cb:	mov    rdi,QWORD PTR [rbp-0x38]
  4102cf:	mov    rdx,QWORD PTR [rbp-0x58]
  4102d3:	mov    rsi,QWORD PTR [rbp-0x50]
  4102d7:	mov    rax,QWORD PTR [rbp-0x48]
  4102db:	sub    rsp,0x8
  4102df:	lea    rcx,[rip+0xffffffffffff9ff1]        # 40a2d7 <_start@@Base+0x4047>
  4102e6:	push   rcx
  4102e7:	mov    r9,rdi
  4102ea:	mov    r8d,0x8
  4102f0:	mov    ecx,0x0
  4102f5:	mov    rdi,rax
  4102f8:	call   428f9f <flatcc_json_parser_union@@Base>
  4102fd:	add    rsp,0x10
  410301:	mov    QWORD PTR [rbp-0x50],rax
  410305:	jmp    412a2b <_start@@Base+0xc79b>
  41030a:	nop
  41030b:	jmp    410311 <_start@@Base+0xa081>
  41030d:	nop
  41030e:	jmp    410311 <_start@@Base+0xa081>
  410310:	nop
  410311:	mov    rax,QWORD PTR [rbp-0x28]
  410315:	and    rax,0xffffffffff000000
  41031b:	mov    rdx,rax
  41031e:	movabs rax,0x7465737435000000
  410328:	cmp    rdx,rax
  41032b:	jne    410458 <_start@@Base+0xa1c8>
  410331:	mov    rax,QWORD PTR [rbp-0x50]
  410335:	mov    QWORD PTR [rbp-0x20],rax
  410339:	mov    rdx,QWORD PTR [rbp-0x58]
  41033d:	mov    rsi,QWORD PTR [rbp-0x20]
  410341:	mov    rax,QWORD PTR [rbp-0x48]
  410345:	mov    ecx,0x5
  41034a:	mov    rdi,rax
  41034d:	call   406d3f <_start@@Base+0xaaf>
  410352:	mov    QWORD PTR [rbp-0x50],rax
  410356:	mov    rax,QWORD PTR [rbp-0x20]
  41035a:	cmp    rax,QWORD PTR [rbp-0x50]
  41035e:	je     41045b <_start@@Base+0xa1cb>
  410364:	mov    rax,QWORD PTR [rbp-0x48]
  410368:	mov    rax,QWORD PTR [rax]
  41036b:	mov    ecx,0x3fffffff
  410370:	mov    edx,0x2
  410375:	mov    esi,0x4
  41037a:	mov    rdi,rax
  41037d:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  410382:	test   eax,eax
  410384:	jne    412b6f <_start@@Base+0xc8df>
  41038a:	lea    rcx,[rbp-0x40]
  41038e:	mov    rdx,QWORD PTR [rbp-0x58]
  410392:	mov    rsi,QWORD PTR [rbp-0x50]
  410396:	mov    rax,QWORD PTR [rbp-0x48]
  41039a:	mov    rdi,rax
  41039d:	call   406b44 <_start@@Base+0x8b4>
  4103a2:	mov    QWORD PTR [rbp-0x50],rax
  4103a6:	jmp    410403 <_start@@Base+0xa173>
  4103a8:	mov    rax,QWORD PTR [rbp-0x48]
  4103ac:	mov    rax,QWORD PTR [rax]
  4103af:	mov    esi,0x1
  4103b4:	mov    rdi,rax
  4103b7:	call   41d895 <flatcc_builder_extend_vector@@Base>
  4103bc:	mov    QWORD PTR [rbp-0x10],rax
  4103c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4103c5:	je     412b75 <_start@@Base+0xc8e5>
  4103cb:	mov    rcx,QWORD PTR [rbp-0x10]
  4103cf:	mov    rdx,QWORD PTR [rbp-0x58]
  4103d3:	mov    rsi,QWORD PTR [rbp-0x50]
  4103d7:	mov    rax,QWORD PTR [rbp-0x48]
  4103db:	mov    rdi,rax
  4103de:	call   40a7af <_start@@Base+0x451f>
  4103e3:	mov    QWORD PTR [rbp-0x50],rax
  4103e7:	lea    rcx,[rbp-0x40]
  4103eb:	mov    rdx,QWORD PTR [rbp-0x58]
  4103ef:	mov    rsi,QWORD PTR [rbp-0x50]
  4103f3:	mov    rax,QWORD PTR [rbp-0x48]
  4103f7:	mov    rdi,rax
  4103fa:	call   406c01 <_start@@Base+0x971>
  4103ff:	mov    QWORD PTR [rbp-0x50],rax
  410403:	mov    eax,DWORD PTR [rbp-0x40]
  410406:	test   eax,eax
  410408:	jne    4103a8 <_start@@Base+0xa118>
  41040a:	mov    rax,QWORD PTR [rbp-0x48]
  41040e:	mov    rax,QWORD PTR [rax]
  410411:	mov    rdi,rax
  410414:	call   41f1da <flatcc_builder_end_vector@@Base>
  410419:	mov    DWORD PTR [rbp-0x3c],eax
  41041c:	mov    eax,DWORD PTR [rbp-0x3c]
  41041f:	test   eax,eax
  410421:	je     412b7b <_start@@Base+0xc8eb>
  410427:	mov    rax,QWORD PTR [rbp-0x48]
  41042b:	mov    rax,QWORD PTR [rax]
  41042e:	mov    esi,0x1f
  410433:	mov    rdi,rax
  410436:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41043b:	mov    QWORD PTR [rbp-0x18],rax
  41043f:	cmp    QWORD PTR [rbp-0x18],0x0
  410444:	je     412b7b <_start@@Base+0xc8eb>
  41044a:	mov    edx,DWORD PTR [rbp-0x3c]
  41044d:	mov    rax,QWORD PTR [rbp-0x18]
  410451:	mov    DWORD PTR [rax],edx
  410453:	jmp    412a2b <_start@@Base+0xc79b>
  410458:	nop
  410459:	jmp    41045c <_start@@Base+0xa1cc>
  41045b:	nop
  41045c:	movabs rax,0x746573745f747970
  410466:	cmp    QWORD PTR [rbp-0x28],rax
  41046a:	jne    410562 <_start@@Base+0xa2d2>
  410470:	add    QWORD PTR [rbp-0x50],0x8
  410475:	mov    rdx,QWORD PTR [rbp-0x58]
  410479:	mov    rax,QWORD PTR [rbp-0x50]
  41047d:	mov    rsi,rdx
  410480:	mov    rdi,rax
  410483:	call   406853 <_start@@Base+0x5c3>
  410488:	mov    QWORD PTR [rbp-0x28],rax
  41048c:	movabs rax,0xff00000000000000
  410496:	and    rax,QWORD PTR [rbp-0x28]
  41049a:	mov    rdx,rax
  41049d:	movabs rax,0x6500000000000000
  4104a7:	cmp    rdx,rax
  4104aa:	jne    410542 <_start@@Base+0xa2b2>
  4104b0:	mov    rax,QWORD PTR [rbp-0x50]
  4104b4:	mov    QWORD PTR [rbp-0x20],rax
  4104b8:	mov    rdx,QWORD PTR [rbp-0x58]
  4104bc:	mov    rsi,QWORD PTR [rbp-0x20]
  4104c0:	mov    rax,QWORD PTR [rbp-0x48]
  4104c4:	mov    ecx,0x1
  4104c9:	mov    rdi,rax
  4104cc:	call   406d3f <_start@@Base+0xaaf>
  4104d1:	mov    QWORD PTR [rbp-0x50],rax
  4104d5:	mov    rax,QWORD PTR [rbp-0x20]
  4104d9:	cmp    rax,QWORD PTR [rbp-0x50]
  4104dd:	je     410522 <_start@@Base+0xa292>
  4104df:	mov    rdi,QWORD PTR [rbp-0x38]
  4104e3:	mov    rdx,QWORD PTR [rbp-0x58]
  4104e7:	mov    rsi,QWORD PTR [rbp-0x50]
  4104eb:	mov    rax,QWORD PTR [rbp-0x48]
  4104ef:	lea    rcx,[rip+0xffffffffffff9de1]        # 40a2d7 <_start@@Base+0x4047>
  4104f6:	push   rcx
  4104f7:	lea    rcx,[rip+0x35062]        # 445560 <__data_start@@Base+0x4a0>
  4104fe:	push   rcx
  4104ff:	mov    r9,rdi
  410502:	mov    r8d,0x8
  410508:	mov    ecx,0x0
  41050d:	mov    rdi,rax
  410510:	call   42917c <flatcc_json_parser_union_type@@Base>
  410515:	add    rsp,0x10
  410519:	mov    QWORD PTR [rbp-0x50],rax
  41051d:	jmp    412a2b <_start@@Base+0xc79b>
  410522:	mov    rdx,QWORD PTR [rbp-0x58]
  410526:	mov    rcx,QWORD PTR [rbp-0x50]
  41052a:	mov    rax,QWORD PTR [rbp-0x48]
  41052e:	mov    rsi,rcx
  410531:	mov    rdi,rax
  410534:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410539:	mov    QWORD PTR [rbp-0x50],rax
  41053d:	jmp    412a2b <_start@@Base+0xc79b>
  410542:	mov    rdx,QWORD PTR [rbp-0x58]
  410546:	mov    rcx,QWORD PTR [rbp-0x50]
  41054a:	mov    rax,QWORD PTR [rbp-0x48]
  41054e:	mov    rsi,rcx
  410551:	mov    rdi,rax
  410554:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410559:	mov    QWORD PTR [rbp-0x50],rax
  41055d:	jmp    412a2b <_start@@Base+0xc79b>
  410562:	mov    rdx,QWORD PTR [rbp-0x58]
  410566:	mov    rcx,QWORD PTR [rbp-0x50]
  41056a:	mov    rax,QWORD PTR [rbp-0x48]
  41056e:	mov    rsi,rcx
  410571:	mov    rdi,rax
  410574:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410579:	mov    QWORD PTR [rbp-0x50],rax
  41057d:	endbr64 
  410581:	endbr64 
  410585:	jmp    412a2b <_start@@Base+0xc79b>
  41058a:	movabs rax,0x746573746632ffff
  410594:	cmp    QWORD PTR [rbp-0x28],rax
  410598:	ja     41154c <_start@@Base+0xb2bc>
  41059e:	movabs rax,0x7465737461727261
  4105a8:	cmp    QWORD PTR [rbp-0x28],rax
  4105ac:	jne    410e84 <_start@@Base+0xabf4>
  4105b2:	add    QWORD PTR [rbp-0x50],0x8
  4105b7:	mov    rdx,QWORD PTR [rbp-0x58]
  4105bb:	mov    rax,QWORD PTR [rbp-0x50]
  4105bf:	mov    rsi,rdx
  4105c2:	mov    rdi,rax
  4105c5:	call   406853 <_start@@Base+0x5c3>
  4105ca:	mov    QWORD PTR [rbp-0x28],rax
  4105ce:	movabs rax,0x796f66737472696d
  4105d8:	cmp    QWORD PTR [rbp-0x28],rax
  4105dc:	ja     410974 <_start@@Base+0xa6e4>
  4105e2:	movabs rax,0x796f66626f6f6c73
  4105ec:	cmp    QWORD PTR [rbp-0x28],rax
  4105f0:	jne    410799 <_start@@Base+0xa509>
  4105f6:	mov    rax,QWORD PTR [rbp-0x50]
  4105fa:	mov    QWORD PTR [rbp-0x20],rax
  4105fe:	mov    rdx,QWORD PTR [rbp-0x58]
  410602:	mov    rsi,QWORD PTR [rbp-0x20]
  410606:	mov    rax,QWORD PTR [rbp-0x48]
  41060a:	mov    ecx,0x8
  41060f:	mov    rdi,rax
  410612:	call   406d3f <_start@@Base+0xaaf>
  410617:	mov    QWORD PTR [rbp-0x50],rax
  41061b:	mov    rax,QWORD PTR [rbp-0x20]
  41061f:	cmp    rax,QWORD PTR [rbp-0x50]
  410623:	je     41079c <_start@@Base+0xa50c>
  410629:	mov    rax,QWORD PTR [rbp-0x48]
  41062d:	mov    rax,QWORD PTR [rax]
  410630:	mov    ecx,0xffffffff
  410635:	mov    edx,0x1
  41063a:	mov    esi,0x1
  41063f:	mov    rdi,rax
  410642:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  410647:	test   eax,eax
  410649:	jne    412b81 <_start@@Base+0xc8f1>
  41064f:	lea    rcx,[rbp-0x40]
  410653:	mov    rdx,QWORD PTR [rbp-0x58]
  410657:	mov    rsi,QWORD PTR [rbp-0x50]
  41065b:	mov    rax,QWORD PTR [rbp-0x48]
  41065f:	mov    rdi,rax
  410662:	call   406b44 <_start@@Base+0x8b4>
  410667:	mov    QWORD PTR [rbp-0x50],rax
  41066b:	jmp    410740 <_start@@Base+0xa4b0>
  410670:	mov    BYTE PTR [rbp-0x30],0x0
  410674:	mov    rax,QWORD PTR [rbp-0x48]
  410678:	mov    rax,QWORD PTR [rax]
  41067b:	mov    esi,0x1
  410680:	mov    rdi,rax
  410683:	call   41d895 <flatcc_builder_extend_vector@@Base>
  410688:	mov    QWORD PTR [rbp-0x10],rax
  41068c:	cmp    QWORD PTR [rbp-0x10],0x0
  410691:	je     412b87 <_start@@Base+0xc8f7>
  410697:	mov    rax,QWORD PTR [rbp-0x50]
  41069b:	mov    QWORD PTR [rbp-0x20],rax
  41069f:	lea    rcx,[rbp-0x30]
  4106a3:	mov    rdx,QWORD PTR [rbp-0x58]
  4106a7:	mov    rsi,QWORD PTR [rbp-0x20]
  4106ab:	mov    rax,QWORD PTR [rbp-0x48]
  4106af:	mov    rdi,rax
  4106b2:	call   4079fe <_start@@Base+0x176e>
  4106b7:	mov    QWORD PTR [rbp-0x50],rax
  4106bb:	mov    rax,QWORD PTR [rbp-0x20]
  4106bf:	cmp    rax,QWORD PTR [rbp-0x50]
  4106c3:	jne    41070f <_start@@Base+0xa47f>
  4106c5:	mov    rax,QWORD PTR [rbp-0x50]
  4106c9:	mov    QWORD PTR [rbp-0x20],rax
  4106cd:	lea    rcx,[rbp-0x30]
  4106d1:	mov    rdx,QWORD PTR [rbp-0x58]
  4106d5:	mov    rsi,QWORD PTR [rbp-0x20]
  4106d9:	mov    rax,QWORD PTR [rbp-0x48]
  4106dd:	mov    r8,rcx
  4106e0:	lea    rcx,[rip+0x34e99]        # 445580 <__data_start@@Base+0x4c0>
  4106e7:	mov    rdi,rax
  4106ea:	call   4085e0 <_start@@Base+0x2350>
  4106ef:	mov    QWORD PTR [rbp-0x50],rax
  4106f3:	mov    rax,QWORD PTR [rbp-0x50]
  4106f7:	cmp    rax,QWORD PTR [rbp-0x20]
  4106fb:	je     412b8d <_start@@Base+0xc8fd>
  410701:	mov    rax,QWORD PTR [rbp-0x50]
  410705:	cmp    rax,QWORD PTR [rbp-0x58]
  410709:	je     412b8d <_start@@Base+0xc8fd>
  41070f:	movzx  eax,BYTE PTR [rbp-0x30]
  410713:	movzx  edx,al
  410716:	mov    rax,QWORD PTR [rbp-0x10]
  41071a:	mov    esi,edx
  41071c:	mov    rdi,rax
  41071f:	call   4065d1 <_start@@Base+0x341>
  410724:	lea    rcx,[rbp-0x40]
  410728:	mov    rdx,QWORD PTR [rbp-0x58]
  41072c:	mov    rsi,QWORD PTR [rbp-0x50]
  410730:	mov    rax,QWORD PTR [rbp-0x48]
  410734:	mov    rdi,rax
  410737:	call   406c01 <_start@@Base+0x971>
  41073c:	mov    QWORD PTR [rbp-0x50],rax
  410740:	mov    eax,DWORD PTR [rbp-0x40]
  410743:	test   eax,eax
  410745:	jne    410670 <_start@@Base+0xa3e0>
  41074b:	mov    rax,QWORD PTR [rbp-0x48]
  41074f:	mov    rax,QWORD PTR [rax]
  410752:	mov    rdi,rax
  410755:	call   41f1da <flatcc_builder_end_vector@@Base>
  41075a:	mov    DWORD PTR [rbp-0x3c],eax
  41075d:	mov    eax,DWORD PTR [rbp-0x3c]
  410760:	test   eax,eax
  410762:	je     412b93 <_start@@Base+0xc903>
  410768:	mov    rax,QWORD PTR [rbp-0x48]
  41076c:	mov    rax,QWORD PTR [rax]
  41076f:	mov    esi,0x18
  410774:	mov    rdi,rax
  410777:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41077c:	mov    QWORD PTR [rbp-0x18],rax
  410780:	cmp    QWORD PTR [rbp-0x18],0x0
  410785:	je     412b93 <_start@@Base+0xc903>
  41078b:	mov    edx,DWORD PTR [rbp-0x3c]
  41078e:	mov    rax,QWORD PTR [rbp-0x18]
  410792:	mov    DWORD PTR [rax],edx
  410794:	jmp    412a2b <_start@@Base+0xc79b>
  410799:	nop
  41079a:	jmp    41079d <_start@@Base+0xa50d>
  41079c:	nop
  41079d:	movabs rax,0x796f66736f727465
  4107a7:	cmp    QWORD PTR [rbp-0x28],rax
  4107ab:	jne    410950 <_start@@Base+0xa6c0>
  4107b1:	add    QWORD PTR [rbp-0x50],0x8
  4107b6:	mov    rdx,QWORD PTR [rbp-0x58]
  4107ba:	mov    rax,QWORD PTR [rbp-0x50]
  4107be:	mov    rsi,rdx
  4107c1:	mov    rdi,rax
  4107c4:	call   406853 <_start@@Base+0x5c3>
  4107c9:	mov    QWORD PTR [rbp-0x28],rax
  4107cd:	mov    rax,QWORD PTR [rbp-0x28]
  4107d1:	mov    al,0x0
  4107d3:	mov    rdx,rax
  4107d6:	movabs rax,0x6473747275637400
  4107e0:	cmp    rdx,rax
  4107e3:	jne    410930 <_start@@Base+0xa6a0>
  4107e9:	mov    rax,QWORD PTR [rbp-0x50]
  4107ed:	mov    QWORD PTR [rbp-0x20],rax
  4107f1:	mov    rdx,QWORD PTR [rbp-0x58]
  4107f5:	mov    rsi,QWORD PTR [rbp-0x20]
  4107f9:	mov    rax,QWORD PTR [rbp-0x48]
  4107fd:	mov    ecx,0x7
  410802:	mov    rdi,rax
  410805:	call   406d3f <_start@@Base+0xaaf>
  41080a:	mov    QWORD PTR [rbp-0x50],rax
  41080e:	mov    rax,QWORD PTR [rbp-0x20]
  410812:	cmp    rax,QWORD PTR [rbp-0x50]
  410816:	je     410910 <_start@@Base+0xa680>
  41081c:	mov    rax,QWORD PTR [rbp-0x48]
  410820:	mov    rax,QWORD PTR [rax]
  410823:	mov    ecx,0x1fffffff
  410828:	mov    edx,0x4
  41082d:	mov    esi,0x8
  410832:	mov    rdi,rax
  410835:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  41083a:	test   eax,eax
  41083c:	jne    412b99 <_start@@Base+0xc909>
  410842:	lea    rcx,[rbp-0x40]
  410846:	mov    rdx,QWORD PTR [rbp-0x58]
  41084a:	mov    rsi,QWORD PTR [rbp-0x50]
  41084e:	mov    rax,QWORD PTR [rbp-0x48]
  410852:	mov    rdi,rax
  410855:	call   406b44 <_start@@Base+0x8b4>
  41085a:	mov    QWORD PTR [rbp-0x50],rax
  41085e:	jmp    4108bb <_start@@Base+0xa62b>
  410860:	mov    rax,QWORD PTR [rbp-0x48]
  410864:	mov    rax,QWORD PTR [rax]
  410867:	mov    esi,0x1
  41086c:	mov    rdi,rax
  41086f:	call   41d895 <flatcc_builder_extend_vector@@Base>
  410874:	mov    QWORD PTR [rbp-0x10],rax
  410878:	cmp    QWORD PTR [rbp-0x10],0x0
  41087d:	je     412b9f <_start@@Base+0xc90f>
  410883:	mov    rcx,QWORD PTR [rbp-0x10]
  410887:	mov    rdx,QWORD PTR [rbp-0x58]
  41088b:	mov    rsi,QWORD PTR [rbp-0x50]
  41088f:	mov    rax,QWORD PTR [rbp-0x48]
  410893:	mov    rdi,rax
  410896:	call   40c8e8 <_start@@Base+0x6658>
  41089b:	mov    QWORD PTR [rbp-0x50],rax
  41089f:	lea    rcx,[rbp-0x40]
  4108a3:	mov    rdx,QWORD PTR [rbp-0x58]
  4108a7:	mov    rsi,QWORD PTR [rbp-0x50]
  4108ab:	mov    rax,QWORD PTR [rbp-0x48]
  4108af:	mov    rdi,rax
  4108b2:	call   406c01 <_start@@Base+0x971>
  4108b7:	mov    QWORD PTR [rbp-0x50],rax
  4108bb:	mov    eax,DWORD PTR [rbp-0x40]
  4108be:	test   eax,eax
  4108c0:	jne    410860 <_start@@Base+0xa5d0>
  4108c2:	mov    rax,QWORD PTR [rbp-0x48]
  4108c6:	mov    rax,QWORD PTR [rax]
  4108c9:	mov    rdi,rax
  4108cc:	call   41f1da <flatcc_builder_end_vector@@Base>
  4108d1:	mov    DWORD PTR [rbp-0x3c],eax
  4108d4:	mov    eax,DWORD PTR [rbp-0x3c]
  4108d7:	test   eax,eax
  4108d9:	je     412ba5 <_start@@Base+0xc915>
  4108df:	mov    rax,QWORD PTR [rbp-0x48]
  4108e3:	mov    rax,QWORD PTR [rax]
  4108e6:	mov    esi,0x1d
  4108eb:	mov    rdi,rax
  4108ee:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  4108f3:	mov    QWORD PTR [rbp-0x18],rax
  4108f7:	cmp    QWORD PTR [rbp-0x18],0x0
  4108fc:	je     412ba5 <_start@@Base+0xc915>
  410902:	mov    edx,DWORD PTR [rbp-0x3c]
  410905:	mov    rax,QWORD PTR [rbp-0x18]
  410909:	mov    DWORD PTR [rax],edx
  41090b:	jmp    412a2b <_start@@Base+0xc79b>
  410910:	mov    rdx,QWORD PTR [rbp-0x58]
  410914:	mov    rcx,QWORD PTR [rbp-0x50]
  410918:	mov    rax,QWORD PTR [rbp-0x48]
  41091c:	mov    rsi,rcx
  41091f:	mov    rdi,rax
  410922:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410927:	mov    QWORD PTR [rbp-0x50],rax
  41092b:	jmp    412a2b <_start@@Base+0xc79b>
  410930:	mov    rdx,QWORD PTR [rbp-0x58]
  410934:	mov    rcx,QWORD PTR [rbp-0x50]
  410938:	mov    rax,QWORD PTR [rbp-0x48]
  41093c:	mov    rsi,rcx
  41093f:	mov    rdi,rax
  410942:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410947:	mov    QWORD PTR [rbp-0x50],rax
  41094b:	jmp    412a2b <_start@@Base+0xc79b>
  410950:	mov    rdx,QWORD PTR [rbp-0x58]
  410954:	mov    rcx,QWORD PTR [rbp-0x50]
  410958:	mov    rax,QWORD PTR [rbp-0x48]
  41095c:	mov    rsi,rcx
  41095f:	mov    rdi,rax
  410962:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410967:	mov    QWORD PTR [rbp-0x50],rax
  41096b:	endbr64 
  41096f:	jmp    412a2b <_start@@Base+0xc79b>
  410974:	movabs rax,0x796f66737472696e
  41097e:	cmp    QWORD PTR [rbp-0x28],rax
  410982:	jne    410ca4 <_start@@Base+0xaa14>
  410988:	add    QWORD PTR [rbp-0x50],0x8
  41098d:	mov    rdx,QWORD PTR [rbp-0x58]
  410991:	mov    rax,QWORD PTR [rbp-0x50]
  410995:	mov    rsi,rdx
  410998:	mov    rdi,rax
  41099b:	call   406853 <_start@@Base+0x5c3>
  4109a0:	mov    QWORD PTR [rbp-0x28],rax
  4109a4:	movabs rax,0xffff000000000000
  4109ae:	and    rax,QWORD PTR [rbp-0x28]
  4109b2:	mov    rdx,rax
  4109b5:	movabs rax,0x6732000000000000
  4109bf:	cmp    rdx,rax
  4109c2:	jne    410b14 <_start@@Base+0xa884>
  4109c8:	mov    rax,QWORD PTR [rbp-0x50]
  4109cc:	mov    QWORD PTR [rbp-0x20],rax
  4109d0:	mov    rdx,QWORD PTR [rbp-0x58]
  4109d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4109d8:	mov    rax,QWORD PTR [rbp-0x48]
  4109dc:	mov    ecx,0x2
  4109e1:	mov    rdi,rax
  4109e4:	call   406d3f <_start@@Base+0xaaf>
  4109e9:	mov    QWORD PTR [rbp-0x50],rax
  4109ed:	mov    rax,QWORD PTR [rbp-0x20]
  4109f1:	cmp    rax,QWORD PTR [rbp-0x50]
  4109f5:	je     410af4 <_start@@Base+0xa864>
  4109fb:	mov    rax,QWORD PTR [rbp-0x48]
  4109ff:	mov    rax,QWORD PTR [rax]
  410a02:	mov    rdi,rax
  410a05:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  410a0a:	test   eax,eax
  410a0c:	jne    412bab <_start@@Base+0xc91b>
  410a12:	lea    rcx,[rbp-0x40]
  410a16:	mov    rdx,QWORD PTR [rbp-0x58]
  410a1a:	mov    rsi,QWORD PTR [rbp-0x50]
  410a1e:	mov    rax,QWORD PTR [rbp-0x48]
  410a22:	mov    rdi,rax
  410a25:	call   406b44 <_start@@Base+0x8b4>
  410a2a:	mov    QWORD PTR [rbp-0x50],rax
  410a2e:	jmp    410a9f <_start@@Base+0xa80f>
  410a30:	lea    rcx,[rbp-0x3c]
  410a34:	mov    rdx,QWORD PTR [rbp-0x58]
  410a38:	mov    rsi,QWORD PTR [rbp-0x50]
  410a3c:	mov    rax,QWORD PTR [rbp-0x48]
  410a40:	mov    rdi,rax
  410a43:	call   428c7d <flatcc_json_parser_build_string@@Base>
  410a48:	mov    QWORD PTR [rbp-0x50],rax
  410a4c:	mov    eax,DWORD PTR [rbp-0x3c]
  410a4f:	test   eax,eax
  410a51:	je     412bb1 <_start@@Base+0xc921>
  410a57:	mov    rax,QWORD PTR [rbp-0x48]
  410a5b:	mov    rax,QWORD PTR [rax]
  410a5e:	mov    esi,0x1
  410a63:	mov    rdi,rax
  410a66:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  410a6b:	mov    QWORD PTR [rbp-0x18],rax
  410a6f:	cmp    QWORD PTR [rbp-0x18],0x0
  410a74:	je     412bb1 <_start@@Base+0xc921>
  410a7a:	mov    edx,DWORD PTR [rbp-0x3c]
  410a7d:	mov    rax,QWORD PTR [rbp-0x18]
  410a81:	mov    DWORD PTR [rax],edx
  410a83:	lea    rcx,[rbp-0x40]
  410a87:	mov    rdx,QWORD PTR [rbp-0x58]
  410a8b:	mov    rsi,QWORD PTR [rbp-0x50]
  410a8f:	mov    rax,QWORD PTR [rbp-0x48]
  410a93:	mov    rdi,rax
  410a96:	call   406c01 <_start@@Base+0x971>
  410a9b:	mov    QWORD PTR [rbp-0x50],rax
  410a9f:	mov    eax,DWORD PTR [rbp-0x40]
  410aa2:	test   eax,eax
  410aa4:	jne    410a30 <_start@@Base+0xa7a0>
  410aa6:	mov    rax,QWORD PTR [rbp-0x48]
  410aaa:	mov    rax,QWORD PTR [rax]
  410aad:	mov    rdi,rax
  410ab0:	call   41f684 <flatcc_builder_end_offset_vector@@Base>
  410ab5:	mov    DWORD PTR [rbp-0x3c],eax
  410ab8:	mov    eax,DWORD PTR [rbp-0x3c]
  410abb:	test   eax,eax
  410abd:	je     412bb7 <_start@@Base+0xc927>
  410ac3:	mov    rax,QWORD PTR [rbp-0x48]
  410ac7:	mov    rax,QWORD PTR [rax]
  410aca:	mov    esi,0x1c
  410acf:	mov    rdi,rax
  410ad2:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  410ad7:	mov    QWORD PTR [rbp-0x18],rax
  410adb:	cmp    QWORD PTR [rbp-0x18],0x0
  410ae0:	je     412bb7 <_start@@Base+0xc927>
  410ae6:	mov    edx,DWORD PTR [rbp-0x3c]
  410ae9:	mov    rax,QWORD PTR [rbp-0x18]
  410aed:	mov    DWORD PTR [rax],edx
  410aef:	jmp    412a2b <_start@@Base+0xc79b>
  410af4:	mov    rdx,QWORD PTR [rbp-0x58]
  410af8:	mov    rcx,QWORD PTR [rbp-0x50]
  410afc:	mov    rax,QWORD PTR [rbp-0x48]
  410b00:	mov    rsi,rcx
  410b03:	mov    rdi,rax
  410b06:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410b0b:	mov    QWORD PTR [rbp-0x50],rax
  410b0f:	jmp    412a2b <_start@@Base+0xc79b>
  410b14:	movabs rax,0xff00000000000000
  410b1e:	and    rax,QWORD PTR [rbp-0x28]
  410b22:	mov    rdx,rax
  410b25:	movabs rax,0x6700000000000000
  410b2f:	cmp    rdx,rax
  410b32:	jne    410c84 <_start@@Base+0xa9f4>
  410b38:	mov    rax,QWORD PTR [rbp-0x50]
  410b3c:	mov    QWORD PTR [rbp-0x20],rax
  410b40:	mov    rdx,QWORD PTR [rbp-0x58]
  410b44:	mov    rsi,QWORD PTR [rbp-0x20]
  410b48:	mov    rax,QWORD PTR [rbp-0x48]
  410b4c:	mov    ecx,0x1
  410b51:	mov    rdi,rax
  410b54:	call   406d3f <_start@@Base+0xaaf>
  410b59:	mov    QWORD PTR [rbp-0x50],rax
  410b5d:	mov    rax,QWORD PTR [rbp-0x20]
  410b61:	cmp    rax,QWORD PTR [rbp-0x50]
  410b65:	je     410c64 <_start@@Base+0xa9d4>
  410b6b:	mov    rax,QWORD PTR [rbp-0x48]
  410b6f:	mov    rax,QWORD PTR [rax]
  410b72:	mov    rdi,rax
  410b75:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  410b7a:	test   eax,eax
  410b7c:	jne    412bbd <_start@@Base+0xc92d>
  410b82:	lea    rcx,[rbp-0x40]
  410b86:	mov    rdx,QWORD PTR [rbp-0x58]
  410b8a:	mov    rsi,QWORD PTR [rbp-0x50]
  410b8e:	mov    rax,QWORD PTR [rbp-0x48]
  410b92:	mov    rdi,rax
  410b95:	call   406b44 <_start@@Base+0x8b4>
  410b9a:	mov    QWORD PTR [rbp-0x50],rax
  410b9e:	jmp    410c0f <_start@@Base+0xa97f>
  410ba0:	lea    rcx,[rbp-0x3c]
  410ba4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ba8:	mov    rsi,QWORD PTR [rbp-0x50]
  410bac:	mov    rax,QWORD PTR [rbp-0x48]
  410bb0:	mov    rdi,rax
  410bb3:	call   428c7d <flatcc_json_parser_build_string@@Base>
  410bb8:	mov    QWORD PTR [rbp-0x50],rax
  410bbc:	mov    eax,DWORD PTR [rbp-0x3c]
  410bbf:	test   eax,eax
  410bc1:	je     412bc3 <_start@@Base+0xc933>
  410bc7:	mov    rax,QWORD PTR [rbp-0x48]
  410bcb:	mov    rax,QWORD PTR [rax]
  410bce:	mov    esi,0x1
  410bd3:	mov    rdi,rax
  410bd6:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  410bdb:	mov    QWORD PTR [rbp-0x18],rax
  410bdf:	cmp    QWORD PTR [rbp-0x18],0x0
  410be4:	je     412bc3 <_start@@Base+0xc933>
  410bea:	mov    edx,DWORD PTR [rbp-0x3c]
  410bed:	mov    rax,QWORD PTR [rbp-0x18]
  410bf1:	mov    DWORD PTR [rax],edx
  410bf3:	lea    rcx,[rbp-0x40]
  410bf7:	mov    rdx,QWORD PTR [rbp-0x58]
  410bfb:	mov    rsi,QWORD PTR [rbp-0x50]
  410bff:	mov    rax,QWORD PTR [rbp-0x48]
  410c03:	mov    rdi,rax
  410c06:	call   406c01 <_start@@Base+0x971>
  410c0b:	mov    QWORD PTR [rbp-0x50],rax
  410c0f:	mov    eax,DWORD PTR [rbp-0x40]
  410c12:	test   eax,eax
  410c14:	jne    410ba0 <_start@@Base+0xa910>
  410c16:	mov    rax,QWORD PTR [rbp-0x48]
  410c1a:	mov    rax,QWORD PTR [rax]
  410c1d:	mov    rdi,rax
  410c20:	call   41f684 <flatcc_builder_end_offset_vector@@Base>
  410c25:	mov    DWORD PTR [rbp-0x3c],eax
  410c28:	mov    eax,DWORD PTR [rbp-0x3c]
  410c2b:	test   eax,eax
  410c2d:	je     412bc9 <_start@@Base+0xc939>
  410c33:	mov    rax,QWORD PTR [rbp-0x48]
  410c37:	mov    rax,QWORD PTR [rax]
  410c3a:	mov    esi,0xa
  410c3f:	mov    rdi,rax
  410c42:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  410c47:	mov    QWORD PTR [rbp-0x18],rax
  410c4b:	cmp    QWORD PTR [rbp-0x18],0x0
  410c50:	je     412bc9 <_start@@Base+0xc939>
  410c56:	mov    edx,DWORD PTR [rbp-0x3c]
  410c59:	mov    rax,QWORD PTR [rbp-0x18]
  410c5d:	mov    DWORD PTR [rax],edx
  410c5f:	jmp    412a2b <_start@@Base+0xc79b>
  410c64:	mov    rdx,QWORD PTR [rbp-0x58]
  410c68:	mov    rcx,QWORD PTR [rbp-0x50]
  410c6c:	mov    rax,QWORD PTR [rbp-0x48]
  410c70:	mov    rsi,rcx
  410c73:	mov    rdi,rax
  410c76:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410c7b:	mov    QWORD PTR [rbp-0x50],rax
  410c7f:	jmp    412a2b <_start@@Base+0xc79b>
  410c84:	mov    rdx,QWORD PTR [rbp-0x58]
  410c88:	mov    rcx,QWORD PTR [rbp-0x50]
  410c8c:	mov    rax,QWORD PTR [rbp-0x48]
  410c90:	mov    rsi,rcx
  410c93:	mov    rdi,rax
  410c96:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410c9b:	mov    QWORD PTR [rbp-0x50],rax
  410c9f:	jmp    412a2b <_start@@Base+0xc79b>
  410ca4:	movabs rax,0x796f667461626c65
  410cae:	cmp    QWORD PTR [rbp-0x28],rax
  410cb2:	jne    410e64 <_start@@Base+0xabd4>
  410cb8:	add    QWORD PTR [rbp-0x50],0x8
  410cbd:	mov    rdx,QWORD PTR [rbp-0x58]
  410cc1:	mov    rax,QWORD PTR [rbp-0x50]
  410cc5:	mov    rsi,rdx
  410cc8:	mov    rdi,rax
  410ccb:	call   406853 <_start@@Base+0x5c3>
  410cd0:	mov    QWORD PTR [rbp-0x28],rax
  410cd4:	movabs rax,0xff00000000000000
  410cde:	and    rax,QWORD PTR [rbp-0x28]
  410ce2:	mov    rdx,rax
  410ce5:	movabs rax,0x7300000000000000
  410cef:	cmp    rdx,rax
  410cf2:	jne    410e44 <_start@@Base+0xabb4>
  410cf8:	mov    rax,QWORD PTR [rbp-0x50]
  410cfc:	mov    QWORD PTR [rbp-0x20],rax
  410d00:	mov    rdx,QWORD PTR [rbp-0x58]
  410d04:	mov    rsi,QWORD PTR [rbp-0x20]
  410d08:	mov    rax,QWORD PTR [rbp-0x48]
  410d0c:	mov    ecx,0x1
  410d11:	mov    rdi,rax
  410d14:	call   406d3f <_start@@Base+0xaaf>
  410d19:	mov    QWORD PTR [rbp-0x50],rax
  410d1d:	mov    rax,QWORD PTR [rbp-0x20]
  410d21:	cmp    rax,QWORD PTR [rbp-0x50]
  410d25:	je     410e24 <_start@@Base+0xab94>
  410d2b:	mov    rax,QWORD PTR [rbp-0x48]
  410d2f:	mov    rax,QWORD PTR [rax]
  410d32:	mov    rdi,rax
  410d35:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  410d3a:	test   eax,eax
  410d3c:	jne    412bcf <_start@@Base+0xc93f>
  410d42:	lea    rcx,[rbp-0x40]
  410d46:	mov    rdx,QWORD PTR [rbp-0x58]
  410d4a:	mov    rsi,QWORD PTR [rbp-0x50]
  410d4e:	mov    rax,QWORD PTR [rbp-0x48]
  410d52:	mov    rdi,rax
  410d55:	call   406b44 <_start@@Base+0x8b4>
  410d5a:	mov    QWORD PTR [rbp-0x50],rax
  410d5e:	jmp    410dcf <_start@@Base+0xab3f>
  410d60:	lea    rcx,[rbp-0x3c]
  410d64:	mov    rdx,QWORD PTR [rbp-0x58]
  410d68:	mov    rsi,QWORD PTR [rbp-0x50]
  410d6c:	mov    rax,QWORD PTR [rbp-0x48]
  410d70:	mov    rdi,rax
  410d73:	call   40f343 <_start@@Base+0x90b3>
  410d78:	mov    QWORD PTR [rbp-0x50],rax
  410d7c:	mov    eax,DWORD PTR [rbp-0x3c]
  410d7f:	test   eax,eax
  410d81:	je     412bd5 <_start@@Base+0xc945>
  410d87:	mov    rax,QWORD PTR [rbp-0x48]
  410d8b:	mov    rax,QWORD PTR [rax]
  410d8e:	mov    esi,0x1
  410d93:	mov    rdi,rax
  410d96:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  410d9b:	mov    QWORD PTR [rbp-0x18],rax
  410d9f:	cmp    QWORD PTR [rbp-0x18],0x0
  410da4:	je     412bd5 <_start@@Base+0xc945>
  410daa:	mov    edx,DWORD PTR [rbp-0x3c]
  410dad:	mov    rax,QWORD PTR [rbp-0x18]
  410db1:	mov    DWORD PTR [rax],edx
  410db3:	lea    rcx,[rbp-0x40]
  410db7:	mov    rdx,QWORD PTR [rbp-0x58]
  410dbb:	mov    rsi,QWORD PTR [rbp-0x50]
  410dbf:	mov    rax,QWORD PTR [rbp-0x48]
  410dc3:	mov    rdi,rax
  410dc6:	call   406c01 <_start@@Base+0x971>
  410dcb:	mov    QWORD PTR [rbp-0x50],rax
  410dcf:	mov    eax,DWORD PTR [rbp-0x40]
  410dd2:	test   eax,eax
  410dd4:	jne    410d60 <_start@@Base+0xaad0>
  410dd6:	mov    rax,QWORD PTR [rbp-0x48]
  410dda:	mov    rax,QWORD PTR [rax]
  410ddd:	mov    rdi,rax
  410de0:	call   41f684 <flatcc_builder_end_offset_vector@@Base>
  410de5:	mov    DWORD PTR [rbp-0x3c],eax
  410de8:	mov    eax,DWORD PTR [rbp-0x3c]
  410deb:	test   eax,eax
  410ded:	je     412bd8 <_start@@Base+0xc948>
  410df3:	mov    rax,QWORD PTR [rbp-0x48]
  410df7:	mov    rax,QWORD PTR [rax]
  410dfa:	mov    esi,0xb
  410dff:	mov    rdi,rax
  410e02:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  410e07:	mov    QWORD PTR [rbp-0x18],rax
  410e0b:	cmp    QWORD PTR [rbp-0x18],0x0
  410e10:	je     412bd8 <_start@@Base+0xc948>
  410e16:	mov    edx,DWORD PTR [rbp-0x3c]
  410e19:	mov    rax,QWORD PTR [rbp-0x18]
  410e1d:	mov    DWORD PTR [rax],edx
  410e1f:	jmp    412a2b <_start@@Base+0xc79b>
  410e24:	mov    rdx,QWORD PTR [rbp-0x58]
  410e28:	mov    rcx,QWORD PTR [rbp-0x50]
  410e2c:	mov    rax,QWORD PTR [rbp-0x48]
  410e30:	mov    rsi,rcx
  410e33:	mov    rdi,rax
  410e36:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410e3b:	mov    QWORD PTR [rbp-0x50],rax
  410e3f:	jmp    412a2b <_start@@Base+0xc79b>
  410e44:	mov    rdx,QWORD PTR [rbp-0x58]
  410e48:	mov    rcx,QWORD PTR [rbp-0x50]
  410e4c:	mov    rax,QWORD PTR [rbp-0x48]
  410e50:	mov    rsi,rcx
  410e53:	mov    rdi,rax
  410e56:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410e5b:	mov    QWORD PTR [rbp-0x50],rax
  410e5f:	jmp    412a2b <_start@@Base+0xc79b>
  410e64:	mov    rdx,QWORD PTR [rbp-0x58]
  410e68:	mov    rcx,QWORD PTR [rbp-0x50]
  410e6c:	mov    rax,QWORD PTR [rbp-0x48]
  410e70:	mov    rsi,rcx
  410e73:	mov    rdi,rax
  410e76:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410e7b:	mov    QWORD PTR [rbp-0x50],rax
  410e7f:	jmp    412a2b <_start@@Base+0xc79b>
  410e84:	movabs rax,0x74657374656d7073
  410e8e:	cmp    QWORD PTR [rbp-0x28],rax
  410e92:	ja     411117 <_start@@Base+0xae87>
  410e98:	movabs rax,0x7465737462617365
  410ea2:	cmp    QWORD PTR [rbp-0x28],rax
  410ea6:	jne    410fb3 <_start@@Base+0xad23>
  410eac:	add    QWORD PTR [rbp-0x50],0x8
  410eb1:	mov    rdx,QWORD PTR [rbp-0x58]
  410eb5:	mov    rax,QWORD PTR [rbp-0x50]
  410eb9:	mov    rsi,rdx
  410ebc:	mov    rdi,rax
  410ebf:	call   406853 <_start@@Base+0x5c3>
  410ec4:	mov    QWORD PTR [rbp-0x28],rax
  410ec8:	movabs rax,0xffff000000000000
  410ed2:	and    rax,QWORD PTR [rbp-0x28]
  410ed6:	mov    rdx,rax
  410ed9:	movabs rax,0x3634000000000000
  410ee3:	cmp    rdx,rax
  410ee6:	jne    410f93 <_start@@Base+0xad03>
  410eec:	mov    rax,QWORD PTR [rbp-0x50]
  410ef0:	mov    QWORD PTR [rbp-0x20],rax
  410ef4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ef8:	mov    rsi,QWORD PTR [rbp-0x20]
  410efc:	mov    rax,QWORD PTR [rbp-0x48]
  410f00:	mov    ecx,0x2
  410f05:	mov    rdi,rax
  410f08:	call   406d3f <_start@@Base+0xaaf>
  410f0d:	mov    QWORD PTR [rbp-0x50],rax
  410f11:	mov    rax,QWORD PTR [rbp-0x20]
  410f15:	cmp    rax,QWORD PTR [rbp-0x50]
  410f19:	je     410f73 <_start@@Base+0xace3>
  410f1b:	lea    rcx,[rbp-0x3c]
  410f1f:	mov    rdx,QWORD PTR [rbp-0x58]
  410f23:	mov    rsi,QWORD PTR [rbp-0x50]
  410f27:	mov    rax,QWORD PTR [rbp-0x48]
  410f2b:	mov    rdi,rax
  410f2e:	call   40ef59 <_start@@Base+0x8cc9>
  410f33:	mov    QWORD PTR [rbp-0x50],rax
  410f37:	mov    eax,DWORD PTR [rbp-0x3c]
  410f3a:	test   eax,eax
  410f3c:	je     412bdb <_start@@Base+0xc94b>
  410f42:	mov    rax,QWORD PTR [rbp-0x48]
  410f46:	mov    rax,QWORD PTR [rax]
  410f49:	mov    esi,0x23
  410f4e:	mov    rdi,rax
  410f51:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  410f56:	mov    QWORD PTR [rbp-0x18],rax
  410f5a:	cmp    QWORD PTR [rbp-0x18],0x0
  410f5f:	je     412bdb <_start@@Base+0xc94b>
  410f65:	mov    edx,DWORD PTR [rbp-0x3c]
  410f68:	mov    rax,QWORD PTR [rbp-0x18]
  410f6c:	mov    DWORD PTR [rax],edx
  410f6e:	jmp    412a2b <_start@@Base+0xc79b>
  410f73:	mov    rdx,QWORD PTR [rbp-0x58]
  410f77:	mov    rcx,QWORD PTR [rbp-0x50]
  410f7b:	mov    rax,QWORD PTR [rbp-0x48]
  410f7f:	mov    rsi,rcx
  410f82:	mov    rdi,rax
  410f85:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410f8a:	mov    QWORD PTR [rbp-0x50],rax
  410f8e:	jmp    412a2b <_start@@Base+0xc79b>
  410f93:	mov    rdx,QWORD PTR [rbp-0x58]
  410f97:	mov    rcx,QWORD PTR [rbp-0x50]
  410f9b:	mov    rax,QWORD PTR [rbp-0x48]
  410f9f:	mov    rsi,rcx
  410fa2:	mov    rdi,rax
  410fa5:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  410faa:	mov    QWORD PTR [rbp-0x50],rax
  410fae:	jmp    412a2b <_start@@Base+0xc79b>
  410fb3:	movabs rax,0x74657374626f6f6c
  410fbd:	cmp    QWORD PTR [rbp-0x28],rax
  410fc1:	jne    4110f7 <_start@@Base+0xae67>
  410fc7:	mov    rax,QWORD PTR [rbp-0x50]
  410fcb:	mov    QWORD PTR [rbp-0x20],rax
  410fcf:	mov    rdx,QWORD PTR [rbp-0x58]
  410fd3:	mov    rsi,QWORD PTR [rbp-0x20]
  410fd7:	mov    rax,QWORD PTR [rbp-0x48]
  410fdb:	mov    ecx,0x8
  410fe0:	mov    rdi,rax
  410fe3:	call   406d3f <_start@@Base+0xaaf>
  410fe8:	mov    QWORD PTR [rbp-0x50],rax
  410fec:	mov    rax,QWORD PTR [rbp-0x20]
  410ff0:	cmp    rax,QWORD PTR [rbp-0x50]
  410ff4:	je     4110d7 <_start@@Base+0xae47>
  410ffa:	mov    BYTE PTR [rbp-0x30],0x0
  410ffe:	mov    rax,QWORD PTR [rbp-0x50]
  411002:	mov    QWORD PTR [rbp-0x20],rax
  411006:	lea    rcx,[rbp-0x30]
  41100a:	mov    rdx,QWORD PTR [rbp-0x58]
  41100e:	mov    rsi,QWORD PTR [rbp-0x20]
  411012:	mov    rax,QWORD PTR [rbp-0x48]
  411016:	mov    rdi,rax
  411019:	call   4079fe <_start@@Base+0x176e>
  41101e:	mov    QWORD PTR [rbp-0x50],rax
  411022:	mov    rax,QWORD PTR [rbp-0x20]
  411026:	cmp    rax,QWORD PTR [rbp-0x50]
  41102a:	jne    411076 <_start@@Base+0xade6>
  41102c:	mov    rax,QWORD PTR [rbp-0x50]
  411030:	mov    QWORD PTR [rbp-0x20],rax
  411034:	lea    rcx,[rbp-0x30]
  411038:	mov    rdx,QWORD PTR [rbp-0x58]
  41103c:	mov    rsi,QWORD PTR [rbp-0x20]
  411040:	mov    rax,QWORD PTR [rbp-0x48]
  411044:	mov    r8,rcx
  411047:	lea    rcx,[rip+0x34552]        # 4455a0 <__data_start@@Base+0x4e0>
  41104e:	mov    rdi,rax
  411051:	call   4085e0 <_start@@Base+0x2350>
  411056:	mov    QWORD PTR [rbp-0x50],rax
  41105a:	mov    rax,QWORD PTR [rbp-0x50]
  41105e:	cmp    rax,QWORD PTR [rbp-0x20]
  411062:	je     412bde <_start@@Base+0xc94e>
  411068:	mov    rax,QWORD PTR [rbp-0x50]
  41106c:	cmp    rax,QWORD PTR [rbp-0x58]
  411070:	je     412bde <_start@@Base+0xc94e>
  411076:	movzx  eax,BYTE PTR [rbp-0x30]
  41107a:	cmp    al,0x1
  41107c:	jne    411090 <_start@@Base+0xae00>
  41107e:	mov    rax,QWORD PTR [rbp-0x48]
  411082:	mov    eax,DWORD PTR [rax+0x10]
  411085:	and    eax,0x2
  411088:	test   eax,eax
  41108a:	je     412a2b <_start@@Base+0xc79b>
  411090:	mov    rax,QWORD PTR [rbp-0x48]
  411094:	mov    rax,QWORD PTR [rax]
  411097:	mov    ecx,0x1
  41109c:	mov    edx,0x1
  4110a1:	mov    esi,0xf
  4110a6:	mov    rdi,rax
  4110a9:	call   4203e3 <flatcc_builder_table_add@@Base>
  4110ae:	mov    QWORD PTR [rbp-0x10],rax
  4110b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4110b7:	je     412be1 <_start@@Base+0xc951>
  4110bd:	movzx  eax,BYTE PTR [rbp-0x30]
  4110c1:	movzx  edx,al
  4110c4:	mov    rax,QWORD PTR [rbp-0x10]
  4110c8:	mov    esi,edx
  4110ca:	mov    rdi,rax
  4110cd:	call   4065d1 <_start@@Base+0x341>
  4110d2:	jmp    412a2b <_start@@Base+0xc79b>
  4110d7:	mov    rdx,QWORD PTR [rbp-0x58]
  4110db:	mov    rcx,QWORD PTR [rbp-0x50]
  4110df:	mov    rax,QWORD PTR [rbp-0x48]
  4110e3:	mov    rsi,rcx
  4110e6:	mov    rdi,rax
  4110e9:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4110ee:	mov    QWORD PTR [rbp-0x50],rax
  4110f2:	jmp    412a2b <_start@@Base+0xc79b>
  4110f7:	mov    rdx,QWORD PTR [rbp-0x58]
  4110fb:	mov    rcx,QWORD PTR [rbp-0x50]
  4110ff:	mov    rax,QWORD PTR [rbp-0x48]
  411103:	mov    rsi,rcx
  411106:	mov    rdi,rax
  411109:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41110e:	mov    QWORD PTR [rbp-0x50],rax
  411112:	jmp    412a2b <_start@@Base+0xc79b>
  411117:	movabs rax,0x7465737465ffffff
  411121:	cmp    QWORD PTR [rbp-0x28],rax
  411125:	ja     411266 <_start@@Base+0xafd6>
  41112b:	movabs rax,0x74657374656d7074
  411135:	cmp    QWORD PTR [rbp-0x28],rax
  411139:	jne    411246 <_start@@Base+0xafb6>
  41113f:	add    QWORD PTR [rbp-0x50],0x8
  411144:	mov    rdx,QWORD PTR [rbp-0x58]
  411148:	mov    rax,QWORD PTR [rbp-0x50]
  41114c:	mov    rsi,rdx
  41114f:	mov    rdi,rax
  411152:	call   406853 <_start@@Base+0x5c3>
  411157:	mov    QWORD PTR [rbp-0x28],rax
  41115b:	movabs rax,0xff00000000000000
  411165:	and    rax,QWORD PTR [rbp-0x28]
  411169:	mov    rdx,rax
  41116c:	movabs rax,0x7900000000000000
  411176:	cmp    rdx,rax
  411179:	jne    411226 <_start@@Base+0xaf96>
  41117f:	mov    rax,QWORD PTR [rbp-0x50]
  411183:	mov    QWORD PTR [rbp-0x20],rax
  411187:	mov    rdx,QWORD PTR [rbp-0x58]
  41118b:	mov    rsi,QWORD PTR [rbp-0x20]
  41118f:	mov    rax,QWORD PTR [rbp-0x48]
  411193:	mov    ecx,0x1
  411198:	mov    rdi,rax
  41119b:	call   406d3f <_start@@Base+0xaaf>
  4111a0:	mov    QWORD PTR [rbp-0x50],rax
  4111a4:	mov    rax,QWORD PTR [rbp-0x20]
  4111a8:	cmp    rax,QWORD PTR [rbp-0x50]
  4111ac:	je     411206 <_start@@Base+0xaf76>
  4111ae:	lea    rcx,[rbp-0x3c]
  4111b2:	mov    rdx,QWORD PTR [rbp-0x58]
  4111b6:	mov    rsi,QWORD PTR [rbp-0x50]
  4111ba:	mov    rax,QWORD PTR [rbp-0x48]
  4111be:	mov    rdi,rax
  4111c1:	call   40cca9 <_start@@Base+0x6a19>
  4111c6:	mov    QWORD PTR [rbp-0x50],rax
  4111ca:	mov    eax,DWORD PTR [rbp-0x3c]
  4111cd:	test   eax,eax
  4111cf:	je     412be4 <_start@@Base+0xc954>
  4111d5:	mov    rax,QWORD PTR [rbp-0x48]
  4111d9:	mov    rax,QWORD PTR [rax]
  4111dc:	mov    esi,0xe
  4111e1:	mov    rdi,rax
  4111e4:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  4111e9:	mov    QWORD PTR [rbp-0x18],rax
  4111ed:	cmp    QWORD PTR [rbp-0x18],0x0
  4111f2:	je     412be4 <_start@@Base+0xc954>
  4111f8:	mov    edx,DWORD PTR [rbp-0x3c]
  4111fb:	mov    rax,QWORD PTR [rbp-0x18]
  4111ff:	mov    DWORD PTR [rax],edx
  411201:	jmp    412a2b <_start@@Base+0xc79b>
  411206:	mov    rdx,QWORD PTR [rbp-0x58]
  41120a:	mov    rcx,QWORD PTR [rbp-0x50]
  41120e:	mov    rax,QWORD PTR [rbp-0x48]
  411212:	mov    rsi,rcx
  411215:	mov    rdi,rax
  411218:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41121d:	mov    QWORD PTR [rbp-0x50],rax
  411221:	jmp    412a2b <_start@@Base+0xc79b>
  411226:	mov    rdx,QWORD PTR [rbp-0x58]
  41122a:	mov    rcx,QWORD PTR [rbp-0x50]
  41122e:	mov    rax,QWORD PTR [rbp-0x48]
  411232:	mov    rsi,rcx
  411235:	mov    rdi,rax
  411238:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41123d:	mov    QWORD PTR [rbp-0x50],rax
  411241:	jmp    412a2b <_start@@Base+0xc79b>
  411246:	mov    rdx,QWORD PTR [rbp-0x58]
  41124a:	mov    rcx,QWORD PTR [rbp-0x50]
  41124e:	mov    rax,QWORD PTR [rbp-0x48]
  411252:	mov    rsi,rcx
  411255:	mov    rdi,rax
  411258:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41125d:	mov    QWORD PTR [rbp-0x50],rax
  411261:	jmp    412a2b <_start@@Base+0xc79b>
  411266:	mov    rax,QWORD PTR [rbp-0x28]
  41126a:	mov    ax,0x0
  41126e:	mov    rdx,rax
  411271:	movabs rax,0x7465737466320000
  41127b:	cmp    rdx,rax
  41127e:	jne    4113c8 <_start@@Base+0xb138>
  411284:	mov    rax,QWORD PTR [rbp-0x50]
  411288:	mov    QWORD PTR [rbp-0x20],rax
  41128c:	mov    rdx,QWORD PTR [rbp-0x58]
  411290:	mov    rsi,QWORD PTR [rbp-0x20]
  411294:	mov    rax,QWORD PTR [rbp-0x48]
  411298:	mov    ecx,0x6
  41129d:	mov    rdi,rax
  4112a0:	call   406d3f <_start@@Base+0xaaf>
  4112a5:	mov    QWORD PTR [rbp-0x50],rax
  4112a9:	mov    rax,QWORD PTR [rbp-0x20]
  4112ad:	cmp    rax,QWORD PTR [rbp-0x50]
  4112b1:	je     4113a8 <_start@@Base+0xb118>
  4112b7:	vxorps xmm0,xmm0,xmm0
  4112bb:	vmovss DWORD PTR [rbp-0x30],xmm0
  4112c0:	mov    rax,QWORD PTR [rbp-0x50]
  4112c4:	mov    QWORD PTR [rbp-0x20],rax
  4112c8:	lea    rcx,[rbp-0x30]
  4112cc:	mov    rdx,QWORD PTR [rbp-0x58]
  4112d0:	mov    rsi,QWORD PTR [rbp-0x20]
  4112d4:	mov    rax,QWORD PTR [rbp-0x48]
  4112d8:	mov    rdi,rax
  4112db:	call   428117 <flatcc_json_parser_float@@Base>
  4112e0:	mov    QWORD PTR [rbp-0x50],rax
  4112e4:	mov    rax,QWORD PTR [rbp-0x20]
  4112e8:	cmp    rax,QWORD PTR [rbp-0x50]
  4112ec:	jne    411338 <_start@@Base+0xb0a8>
  4112ee:	mov    rax,QWORD PTR [rbp-0x50]
  4112f2:	mov    QWORD PTR [rbp-0x20],rax
  4112f6:	lea    rcx,[rbp-0x30]
  4112fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4112fe:	mov    rsi,QWORD PTR [rbp-0x20]
  411302:	mov    rax,QWORD PTR [rbp-0x48]
  411306:	mov    r8,rcx
  411309:	lea    rcx,[rip+0x342b0]        # 4455c0 <__data_start@@Base+0x500>
  411310:	mov    rdi,rax
  411313:	call   408739 <_start@@Base+0x24a9>
  411318:	mov    QWORD PTR [rbp-0x50],rax
  41131c:	mov    rax,QWORD PTR [rbp-0x50]
  411320:	cmp    rax,QWORD PTR [rbp-0x20]
  411324:	je     412be7 <_start@@Base+0xc957>
  41132a:	mov    rax,QWORD PTR [rbp-0x50]
  41132e:	cmp    rax,QWORD PTR [rbp-0x58]
  411332:	je     412be7 <_start@@Base+0xc957>
  411338:	vmovss xmm0,DWORD PTR [rbp-0x30]
  41133d:	vucomiss xmm0,DWORD PTR [rip+0x27edb]        # 439220 <_IO_stdin_used@@Base+0x3220>
  411345:	jp     411363 <_start@@Base+0xb0d3>
  411347:	vucomiss xmm0,DWORD PTR [rip+0x27ed1]        # 439220 <_IO_stdin_used@@Base+0x3220>
  41134f:	jne    411363 <_start@@Base+0xb0d3>
  411351:	mov    rax,QWORD PTR [rbp-0x48]
  411355:	mov    eax,DWORD PTR [rax+0x10]
  411358:	and    eax,0x2
  41135b:	test   eax,eax
  41135d:	je     412a2b <_start@@Base+0xc79b>
  411363:	mov    rax,QWORD PTR [rbp-0x48]
  411367:	mov    rax,QWORD PTR [rax]
  41136a:	mov    ecx,0x4
  41136f:	mov    edx,0x4
  411374:	mov    esi,0x1a
  411379:	mov    rdi,rax
  41137c:	call   4203e3 <flatcc_builder_table_add@@Base>
  411381:	mov    QWORD PTR [rbp-0x10],rax
  411385:	cmp    QWORD PTR [rbp-0x10],0x0
  41138a:	je     412bea <_start@@Base+0xc95a>
  411390:	mov    edx,DWORD PTR [rbp-0x30]
  411393:	mov    rax,QWORD PTR [rbp-0x10]
  411397:	vmovd  xmm0,edx
  41139b:	mov    rdi,rax
  41139e:	call   40653e <_start@@Base+0x2ae>
  4113a3:	jmp    412a2b <_start@@Base+0xc79b>
  4113a8:	mov    rdx,QWORD PTR [rbp-0x58]
  4113ac:	mov    rcx,QWORD PTR [rbp-0x50]
  4113b0:	mov    rax,QWORD PTR [rbp-0x48]
  4113b4:	mov    rsi,rcx
  4113b7:	mov    rdi,rax
  4113ba:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4113bf:	mov    QWORD PTR [rbp-0x50],rax
  4113c3:	jmp    412a2b <_start@@Base+0xc79b>
  4113c8:	mov    rax,QWORD PTR [rbp-0x28]
  4113cc:	and    rax,0xffffffffff000000
  4113d2:	mov    rdx,rax
  4113d5:	movabs rax,0x7465737466000000
  4113df:	cmp    rdx,rax
  4113e2:	jne    41152c <_start@@Base+0xb29c>
  4113e8:	mov    rax,QWORD PTR [rbp-0x50]
  4113ec:	mov    QWORD PTR [rbp-0x20],rax
  4113f0:	mov    rdx,QWORD PTR [rbp-0x58]
  4113f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4113f8:	mov    rax,QWORD PTR [rbp-0x48]
  4113fc:	mov    ecx,0x5
  411401:	mov    rdi,rax
  411404:	call   406d3f <_start@@Base+0xaaf>
  411409:	mov    QWORD PTR [rbp-0x50],rax
  41140d:	mov    rax,QWORD PTR [rbp-0x20]
  411411:	cmp    rax,QWORD PTR [rbp-0x50]
  411415:	je     41150c <_start@@Base+0xb27c>
  41141b:	vxorps xmm0,xmm0,xmm0
  41141f:	vmovss DWORD PTR [rbp-0x30],xmm0
  411424:	mov    rax,QWORD PTR [rbp-0x50]
  411428:	mov    QWORD PTR [rbp-0x20],rax
  41142c:	lea    rcx,[rbp-0x30]
  411430:	mov    rdx,QWORD PTR [rbp-0x58]
  411434:	mov    rsi,QWORD PTR [rbp-0x20]
  411438:	mov    rax,QWORD PTR [rbp-0x48]
  41143c:	mov    rdi,rax
  41143f:	call   428117 <flatcc_json_parser_float@@Base>
  411444:	mov    QWORD PTR [rbp-0x50],rax
  411448:	mov    rax,QWORD PTR [rbp-0x20]
  41144c:	cmp    rax,QWORD PTR [rbp-0x50]
  411450:	jne    41149c <_start@@Base+0xb20c>
  411452:	mov    rax,QWORD PTR [rbp-0x50]
  411456:	mov    QWORD PTR [rbp-0x20],rax
  41145a:	lea    rcx,[rbp-0x30]
  41145e:	mov    rdx,QWORD PTR [rbp-0x58]
  411462:	mov    rsi,QWORD PTR [rbp-0x20]
  411466:	mov    rax,QWORD PTR [rbp-0x48]
  41146a:	mov    r8,rcx
  41146d:	lea    rcx,[rip+0x3416c]        # 4455e0 <__data_start@@Base+0x520>
  411474:	mov    rdi,rax
  411477:	call   408739 <_start@@Base+0x24a9>
  41147c:	mov    QWORD PTR [rbp-0x50],rax
  411480:	mov    rax,QWORD PTR [rbp-0x50]
  411484:	cmp    rax,QWORD PTR [rbp-0x20]
  411488:	je     412bed <_start@@Base+0xc95d>
  41148e:	mov    rax,QWORD PTR [rbp-0x50]
  411492:	cmp    rax,QWORD PTR [rbp-0x58]
  411496:	je     412bed <_start@@Base+0xc95d>
  41149c:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4114a1:	vucomiss xmm0,DWORD PTR [rip+0x27d7b]        # 439224 <_IO_stdin_used@@Base+0x3224>
  4114a9:	jp     4114c7 <_start@@Base+0xb237>
  4114ab:	vucomiss xmm0,DWORD PTR [rip+0x27d71]        # 439224 <_IO_stdin_used@@Base+0x3224>
  4114b3:	jne    4114c7 <_start@@Base+0xb237>
  4114b5:	mov    rax,QWORD PTR [rbp-0x48]
  4114b9:	mov    eax,DWORD PTR [rax+0x10]
  4114bc:	and    eax,0x2
  4114bf:	test   eax,eax
  4114c1:	je     412a2b <_start@@Base+0xc79b>
  4114c7:	mov    rax,QWORD PTR [rbp-0x48]
  4114cb:	mov    rax,QWORD PTR [rax]
  4114ce:	mov    ecx,0x4
  4114d3:	mov    edx,0x4
  4114d8:	mov    esi,0x19
  4114dd:	mov    rdi,rax
  4114e0:	call   4203e3 <flatcc_builder_table_add@@Base>
  4114e5:	mov    QWORD PTR [rbp-0x10],rax
  4114e9:	cmp    QWORD PTR [rbp-0x10],0x0
  4114ee:	je     412bf0 <_start@@Base+0xc960>
  4114f4:	mov    edx,DWORD PTR [rbp-0x30]
  4114f7:	mov    rax,QWORD PTR [rbp-0x10]
  4114fb:	vmovd  xmm0,edx
  4114ff:	mov    rdi,rax
  411502:	call   40653e <_start@@Base+0x2ae>
  411507:	jmp    412a2b <_start@@Base+0xc79b>
  41150c:	mov    rdx,QWORD PTR [rbp-0x58]
  411510:	mov    rcx,QWORD PTR [rbp-0x50]
  411514:	mov    rax,QWORD PTR [rbp-0x48]
  411518:	mov    rsi,rcx
  41151b:	mov    rdi,rax
  41151e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411523:	mov    QWORD PTR [rbp-0x50],rax
  411527:	jmp    412a2b <_start@@Base+0xc79b>
  41152c:	mov    rdx,QWORD PTR [rbp-0x58]
  411530:	mov    rcx,QWORD PTR [rbp-0x50]
  411534:	mov    rax,QWORD PTR [rbp-0x48]
  411538:	mov    rsi,rcx
  41153b:	mov    rdi,rax
  41153e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411543:	mov    QWORD PTR [rbp-0x50],rax
  411547:	jmp    412a2b <_start@@Base+0xc79b>
  41154c:	movabs rax,0x7465737468617367
  411556:	cmp    QWORD PTR [rbp-0x28],rax
  41155a:	ja     4116e2 <_start@@Base+0xb452>
  411560:	mov    rax,QWORD PTR [rbp-0x28]
  411564:	mov    ax,0x0
  411568:	mov    rdx,rax
  41156b:	movabs rax,0x7465737466330000
  411575:	cmp    rdx,rax
  411578:	jne    4116c2 <_start@@Base+0xb432>
  41157e:	mov    rax,QWORD PTR [rbp-0x50]
  411582:	mov    QWORD PTR [rbp-0x20],rax
  411586:	mov    rdx,QWORD PTR [rbp-0x58]
  41158a:	mov    rsi,QWORD PTR [rbp-0x20]
  41158e:	mov    rax,QWORD PTR [rbp-0x48]
  411592:	mov    ecx,0x6
  411597:	mov    rdi,rax
  41159a:	call   406d3f <_start@@Base+0xaaf>
  41159f:	mov    QWORD PTR [rbp-0x50],rax
  4115a3:	mov    rax,QWORD PTR [rbp-0x20]
  4115a7:	cmp    rax,QWORD PTR [rbp-0x50]
  4115ab:	je     4116a2 <_start@@Base+0xb412>
  4115b1:	vxorps xmm0,xmm0,xmm0
  4115b5:	vmovss DWORD PTR [rbp-0x30],xmm0
  4115ba:	mov    rax,QWORD PTR [rbp-0x50]
  4115be:	mov    QWORD PTR [rbp-0x20],rax
  4115c2:	lea    rcx,[rbp-0x30]
  4115c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4115ca:	mov    rsi,QWORD PTR [rbp-0x20]
  4115ce:	mov    rax,QWORD PTR [rbp-0x48]
  4115d2:	mov    rdi,rax
  4115d5:	call   428117 <flatcc_json_parser_float@@Base>
  4115da:	mov    QWORD PTR [rbp-0x50],rax
  4115de:	mov    rax,QWORD PTR [rbp-0x20]
  4115e2:	cmp    rax,QWORD PTR [rbp-0x50]
  4115e6:	jne    411632 <_start@@Base+0xb3a2>
  4115e8:	mov    rax,QWORD PTR [rbp-0x50]
  4115ec:	mov    QWORD PTR [rbp-0x20],rax
  4115f0:	lea    rcx,[rbp-0x30]
  4115f4:	mov    rdx,QWORD PTR [rbp-0x58]
  4115f8:	mov    rsi,QWORD PTR [rbp-0x20]
  4115fc:	mov    rax,QWORD PTR [rbp-0x48]
  411600:	mov    r8,rcx
  411603:	lea    rcx,[rip+0x33ff6]        # 445600 <__data_start@@Base+0x540>
  41160a:	mov    rdi,rax
  41160d:	call   408739 <_start@@Base+0x24a9>
  411612:	mov    QWORD PTR [rbp-0x50],rax
  411616:	mov    rax,QWORD PTR [rbp-0x50]
  41161a:	cmp    rax,QWORD PTR [rbp-0x20]
  41161e:	je     412bf3 <_start@@Base+0xc963>
  411624:	mov    rax,QWORD PTR [rbp-0x50]
  411628:	cmp    rax,QWORD PTR [rbp-0x58]
  41162c:	je     412bf3 <_start@@Base+0xc963>
  411632:	vmovss xmm0,DWORD PTR [rbp-0x30]
  411637:	vxorps xmm1,xmm1,xmm1
  41163b:	vucomiss xmm0,xmm1
  41163f:	jp     41165d <_start@@Base+0xb3cd>
  411641:	vxorps xmm1,xmm1,xmm1
  411645:	vucomiss xmm0,xmm1
  411649:	jne    41165d <_start@@Base+0xb3cd>
  41164b:	mov    rax,QWORD PTR [rbp-0x48]
  41164f:	mov    eax,DWORD PTR [rax+0x10]
  411652:	and    eax,0x2
  411655:	test   eax,eax
  411657:	je     412a2b <_start@@Base+0xc79b>
  41165d:	mov    rax,QWORD PTR [rbp-0x48]
  411661:	mov    rax,QWORD PTR [rax]
  411664:	mov    ecx,0x4
  411669:	mov    edx,0x4
  41166e:	mov    esi,0x1b
  411673:	mov    rdi,rax
  411676:	call   4203e3 <flatcc_builder_table_add@@Base>
  41167b:	mov    QWORD PTR [rbp-0x10],rax
  41167f:	cmp    QWORD PTR [rbp-0x10],0x0
  411684:	je     412bf6 <_start@@Base+0xc966>
  41168a:	mov    edx,DWORD PTR [rbp-0x30]
  41168d:	mov    rax,QWORD PTR [rbp-0x10]
  411691:	vmovd  xmm0,edx
  411695:	mov    rdi,rax
  411698:	call   40653e <_start@@Base+0x2ae>
  41169d:	jmp    412a2b <_start@@Base+0xc79b>
  4116a2:	mov    rdx,QWORD PTR [rbp-0x58]
  4116a6:	mov    rcx,QWORD PTR [rbp-0x50]
  4116aa:	mov    rax,QWORD PTR [rbp-0x48]
  4116ae:	mov    rsi,rcx
  4116b1:	mov    rdi,rax
  4116b4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4116b9:	mov    QWORD PTR [rbp-0x50],rax
  4116bd:	jmp    412a2b <_start@@Base+0xc79b>
  4116c2:	mov    rdx,QWORD PTR [rbp-0x58]
  4116c6:	mov    rcx,QWORD PTR [rbp-0x50]
  4116ca:	mov    rax,QWORD PTR [rbp-0x48]
  4116ce:	mov    rsi,rcx
  4116d1:	mov    rdi,rax
  4116d4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4116d9:	mov    QWORD PTR [rbp-0x50],rax
  4116dd:	jmp    412a2b <_start@@Base+0xc79b>
  4116e2:	movabs rax,0x7465737468617368
  4116ec:	cmp    QWORD PTR [rbp-0x28],rax
  4116f0:	jne    41226e <_start@@Base+0xbfde>
  4116f6:	add    QWORD PTR [rbp-0x50],0x8
  4116fb:	mov    rdx,QWORD PTR [rbp-0x58]
  4116ff:	mov    rax,QWORD PTR [rbp-0x50]
  411703:	mov    rsi,rdx
  411706:	mov    rdi,rax
  411709:	call   406853 <_start@@Base+0x5c3>
  41170e:	mov    QWORD PTR [rbp-0x28],rax
  411712:	movabs rax,0x7336345f666e7630
  41171c:	cmp    QWORD PTR [rbp-0x28],rax
  411720:	ja     4119f6 <_start@@Base+0xb766>
  411726:	movabs rax,0x7333325f666e7631
  411730:	cmp    QWORD PTR [rbp-0x28],rax
  411734:	jne    4119d6 <_start@@Base+0xb746>
  41173a:	mov    rax,QWORD PTR [rbp-0x50]
  41173e:	mov    QWORD PTR [rbp-0x20],rax
  411742:	mov    rdx,QWORD PTR [rbp-0x58]
  411746:	mov    rsi,QWORD PTR [rbp-0x20]
  41174a:	mov    rax,QWORD PTR [rbp-0x48]
  41174e:	mov    ecx,0x8
  411753:	mov    rdi,rax
  411756:	call   406d3f <_start@@Base+0xaaf>
  41175b:	mov    QWORD PTR [rbp-0x50],rax
  41175f:	mov    rax,QWORD PTR [rbp-0x20]
  411763:	cmp    rax,QWORD PTR [rbp-0x50]
  411767:	je     411848 <_start@@Base+0xb5b8>
  41176d:	mov    DWORD PTR [rbp-0x30],0x0
  411774:	mov    rax,QWORD PTR [rbp-0x50]
  411778:	mov    QWORD PTR [rbp-0x20],rax
  41177c:	lea    rcx,[rbp-0x30]
  411780:	mov    rdx,QWORD PTR [rbp-0x58]
  411784:	mov    rsi,QWORD PTR [rbp-0x20]
  411788:	mov    rax,QWORD PTR [rbp-0x48]
  41178c:	mov    rdi,rax
  41178f:	call   4077b0 <_start@@Base+0x1520>
  411794:	mov    QWORD PTR [rbp-0x50],rax
  411798:	mov    rax,QWORD PTR [rbp-0x20]
  41179c:	cmp    rax,QWORD PTR [rbp-0x50]
  4117a0:	jne    4117ec <_start@@Base+0xb55c>
  4117a2:	mov    rax,QWORD PTR [rbp-0x50]
  4117a6:	mov    QWORD PTR [rbp-0x20],rax
  4117aa:	lea    rcx,[rbp-0x30]
  4117ae:	mov    rdx,QWORD PTR [rbp-0x58]
  4117b2:	mov    rsi,QWORD PTR [rbp-0x20]
  4117b6:	mov    rax,QWORD PTR [rbp-0x48]
  4117ba:	mov    r8,rcx
  4117bd:	lea    rcx,[rip+0x33e5c]        # 445620 <__data_start@@Base+0x560>
  4117c4:	mov    rdi,rax
  4117c7:	call   4081c4 <_start@@Base+0x1f34>
  4117cc:	mov    QWORD PTR [rbp-0x50],rax
  4117d0:	mov    rax,QWORD PTR [rbp-0x50]
  4117d4:	cmp    rax,QWORD PTR [rbp-0x20]
  4117d8:	je     412bf9 <_start@@Base+0xc969>
  4117de:	mov    rax,QWORD PTR [rbp-0x50]
  4117e2:	cmp    rax,QWORD PTR [rbp-0x58]
  4117e6:	je     412bf9 <_start@@Base+0xc969>
  4117ec:	mov    eax,DWORD PTR [rbp-0x30]
  4117ef:	test   eax,eax
  4117f1:	jne    411805 <_start@@Base+0xb575>
  4117f3:	mov    rax,QWORD PTR [rbp-0x48]
  4117f7:	mov    eax,DWORD PTR [rax+0x10]
  4117fa:	and    eax,0x2
  4117fd:	test   eax,eax
  4117ff:	je     412a2b <_start@@Base+0xc79b>
  411805:	mov    rax,QWORD PTR [rbp-0x48]
  411809:	mov    rax,QWORD PTR [rax]
  41180c:	mov    ecx,0x4
  411811:	mov    edx,0x4
  411816:	mov    esi,0x10
  41181b:	mov    rdi,rax
  41181e:	call   4203e3 <flatcc_builder_table_add@@Base>
  411823:	mov    QWORD PTR [rbp-0x10],rax
  411827:	cmp    QWORD PTR [rbp-0x10],0x0
  41182c:	je     412bfc <_start@@Base+0xc96c>
  411832:	mov    edx,DWORD PTR [rbp-0x30]
  411835:	mov    rax,QWORD PTR [rbp-0x10]
  411839:	mov    esi,edx
  41183b:	mov    rdi,rax
  41183e:	call   4064c3 <_start@@Base+0x233>
  411843:	jmp    412a2b <_start@@Base+0xc79b>
  411848:	add    QWORD PTR [rbp-0x50],0x8
  41184d:	mov    rdx,QWORD PTR [rbp-0x58]
  411851:	mov    rax,QWORD PTR [rbp-0x50]
  411855:	mov    rsi,rdx
  411858:	mov    rdi,rax
  41185b:	call   406853 <_start@@Base+0x5c3>
  411860:	mov    QWORD PTR [rbp-0x28],rax
  411864:	movabs rax,0xff00000000000000
  41186e:	and    rax,QWORD PTR [rbp-0x28]
  411872:	mov    rdx,rax
  411875:	movabs rax,0x6100000000000000
  41187f:	cmp    rdx,rax
  411882:	jne    4119b6 <_start@@Base+0xb726>
  411888:	mov    rax,QWORD PTR [rbp-0x50]
  41188c:	mov    QWORD PTR [rbp-0x20],rax
  411890:	mov    rdx,QWORD PTR [rbp-0x58]
  411894:	mov    rsi,QWORD PTR [rbp-0x20]
  411898:	mov    rax,QWORD PTR [rbp-0x48]
  41189c:	mov    ecx,0x1
  4118a1:	mov    rdi,rax
  4118a4:	call   406d3f <_start@@Base+0xaaf>
  4118a9:	mov    QWORD PTR [rbp-0x50],rax
  4118ad:	mov    rax,QWORD PTR [rbp-0x20]
  4118b1:	cmp    rax,QWORD PTR [rbp-0x50]
  4118b5:	je     411996 <_start@@Base+0xb706>
  4118bb:	mov    DWORD PTR [rbp-0x30],0x0
  4118c2:	mov    rax,QWORD PTR [rbp-0x50]
  4118c6:	mov    QWORD PTR [rbp-0x20],rax
  4118ca:	lea    rcx,[rbp-0x30]
  4118ce:	mov    rdx,QWORD PTR [rbp-0x58]
  4118d2:	mov    rsi,QWORD PTR [rbp-0x20]
  4118d6:	mov    rax,QWORD PTR [rbp-0x48]
  4118da:	mov    rdi,rax
  4118dd:	call   4077b0 <_start@@Base+0x1520>
  4118e2:	mov    QWORD PTR [rbp-0x50],rax
  4118e6:	mov    rax,QWORD PTR [rbp-0x20]
  4118ea:	cmp    rax,QWORD PTR [rbp-0x50]
  4118ee:	jne    41193a <_start@@Base+0xb6aa>
  4118f0:	mov    rax,QWORD PTR [rbp-0x50]
  4118f4:	mov    QWORD PTR [rbp-0x20],rax
  4118f8:	lea    rcx,[rbp-0x30]
  4118fc:	mov    rdx,QWORD PTR [rbp-0x58]
  411900:	mov    rsi,QWORD PTR [rbp-0x20]
  411904:	mov    rax,QWORD PTR [rbp-0x48]
  411908:	mov    r8,rcx
  41190b:	lea    rcx,[rip+0x33d2e]        # 445640 <__data_start@@Base+0x580>
  411912:	mov    rdi,rax
  411915:	call   4081c4 <_start@@Base+0x1f34>
  41191a:	mov    QWORD PTR [rbp-0x50],rax
  41191e:	mov    rax,QWORD PTR [rbp-0x50]
  411922:	cmp    rax,QWORD PTR [rbp-0x20]
  411926:	je     412bff <_start@@Base+0xc96f>
  41192c:	mov    rax,QWORD PTR [rbp-0x50]
  411930:	cmp    rax,QWORD PTR [rbp-0x58]
  411934:	je     412bff <_start@@Base+0xc96f>
  41193a:	mov    eax,DWORD PTR [rbp-0x30]
  41193d:	test   eax,eax
  41193f:	jne    411953 <_start@@Base+0xb6c3>
  411941:	mov    rax,QWORD PTR [rbp-0x48]
  411945:	mov    eax,DWORD PTR [rax+0x10]
  411948:	and    eax,0x2
  41194b:	test   eax,eax
  41194d:	je     412a2b <_start@@Base+0xc79b>
  411953:	mov    rax,QWORD PTR [rbp-0x48]
  411957:	mov    rax,QWORD PTR [rax]
  41195a:	mov    ecx,0x4
  41195f:	mov    edx,0x4
  411964:	mov    esi,0x14
  411969:	mov    rdi,rax
  41196c:	call   4203e3 <flatcc_builder_table_add@@Base>
  411971:	mov    QWORD PTR [rbp-0x10],rax
  411975:	cmp    QWORD PTR [rbp-0x10],0x0
  41197a:	je     412c02 <_start@@Base+0xc972>
  411980:	mov    edx,DWORD PTR [rbp-0x30]
  411983:	mov    rax,QWORD PTR [rbp-0x10]
  411987:	mov    esi,edx
  411989:	mov    rdi,rax
  41198c:	call   4064c3 <_start@@Base+0x233>
  411991:	jmp    412a2b <_start@@Base+0xc79b>
  411996:	mov    rdx,QWORD PTR [rbp-0x58]
  41199a:	mov    rcx,QWORD PTR [rbp-0x50]
  41199e:	mov    rax,QWORD PTR [rbp-0x48]
  4119a2:	mov    rsi,rcx
  4119a5:	mov    rdi,rax
  4119a8:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4119ad:	mov    QWORD PTR [rbp-0x50],rax
  4119b1:	jmp    412a2b <_start@@Base+0xc79b>
  4119b6:	mov    rdx,QWORD PTR [rbp-0x58]
  4119ba:	mov    rcx,QWORD PTR [rbp-0x50]
  4119be:	mov    rax,QWORD PTR [rbp-0x48]
  4119c2:	mov    rsi,rcx
  4119c5:	mov    rdi,rax
  4119c8:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4119cd:	mov    QWORD PTR [rbp-0x50],rax
  4119d1:	jmp    412a2b <_start@@Base+0xc79b>
  4119d6:	mov    rdx,QWORD PTR [rbp-0x58]
  4119da:	mov    rcx,QWORD PTR [rbp-0x50]
  4119de:	mov    rax,QWORD PTR [rbp-0x48]
  4119e2:	mov    rsi,rcx
  4119e5:	mov    rdi,rax
  4119e8:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4119ed:	mov    QWORD PTR [rbp-0x50],rax
  4119f1:	jmp    412a2b <_start@@Base+0xc79b>
  4119f6:	movabs rax,0x7533325f666e7630
  411a00:	cmp    QWORD PTR [rbp-0x28],rax
  411a04:	ja     411ce4 <_start@@Base+0xba54>
  411a0a:	movabs rax,0x7336345f666e7631
  411a14:	cmp    QWORD PTR [rbp-0x28],rax
  411a18:	jne    411cc4 <_start@@Base+0xba34>
  411a1e:	mov    rax,QWORD PTR [rbp-0x50]
  411a22:	mov    QWORD PTR [rbp-0x20],rax
  411a26:	mov    rdx,QWORD PTR [rbp-0x58]
  411a2a:	mov    rsi,QWORD PTR [rbp-0x20]
  411a2e:	mov    rax,QWORD PTR [rbp-0x48]
  411a32:	mov    ecx,0x8
  411a37:	mov    rdi,rax
  411a3a:	call   406d3f <_start@@Base+0xaaf>
  411a3f:	mov    QWORD PTR [rbp-0x50],rax
  411a43:	mov    rax,QWORD PTR [rbp-0x20]
  411a47:	cmp    rax,QWORD PTR [rbp-0x50]
  411a4b:	je     411b31 <_start@@Base+0xb8a1>
  411a51:	mov    QWORD PTR [rbp-0x30],0x0
  411a59:	mov    rax,QWORD PTR [rbp-0x50]
  411a5d:	mov    QWORD PTR [rbp-0x20],rax
  411a61:	lea    rcx,[rbp-0x30]
  411a65:	mov    rdx,QWORD PTR [rbp-0x58]
  411a69:	mov    rsi,QWORD PTR [rbp-0x20]
  411a6d:	mov    rax,QWORD PTR [rbp-0x48]
  411a71:	mov    rdi,rax
  411a74:	call   4076e9 <_start@@Base+0x1459>
  411a79:	mov    QWORD PTR [rbp-0x50],rax
  411a7d:	mov    rax,QWORD PTR [rbp-0x20]
  411a81:	cmp    rax,QWORD PTR [rbp-0x50]
  411a85:	jne    411ad1 <_start@@Base+0xb841>
  411a87:	mov    rax,QWORD PTR [rbp-0x50]
  411a8b:	mov    QWORD PTR [rbp-0x20],rax
  411a8f:	lea    rcx,[rbp-0x30]
  411a93:	mov    rdx,QWORD PTR [rbp-0x58]
  411a97:	mov    rsi,QWORD PTR [rbp-0x20]
  411a9b:	mov    rax,QWORD PTR [rbp-0x48]
  411a9f:	mov    r8,rcx
  411aa2:	lea    rcx,[rip+0x33bb7]        # 445660 <__data_start@@Base+0x5a0>
  411aa9:	mov    rdi,rax
  411aac:	call   408061 <_start@@Base+0x1dd1>
  411ab1:	mov    QWORD PTR [rbp-0x50],rax
  411ab5:	mov    rax,QWORD PTR [rbp-0x50]
  411ab9:	cmp    rax,QWORD PTR [rbp-0x20]
  411abd:	je     412c05 <_start@@Base+0xc975>
  411ac3:	mov    rax,QWORD PTR [rbp-0x50]
  411ac7:	cmp    rax,QWORD PTR [rbp-0x58]
  411acb:	je     412c05 <_start@@Base+0xc975>
  411ad1:	mov    rax,QWORD PTR [rbp-0x30]
  411ad5:	test   rax,rax
  411ad8:	jne    411aec <_start@@Base+0xb85c>
  411ada:	mov    rax,QWORD PTR [rbp-0x48]
  411ade:	mov    eax,DWORD PTR [rax+0x10]
  411ae1:	and    eax,0x2
  411ae4:	test   eax,eax
  411ae6:	je     412a2b <_start@@Base+0xc79b>
  411aec:	mov    rax,QWORD PTR [rbp-0x48]
  411af0:	mov    rax,QWORD PTR [rax]
  411af3:	mov    ecx,0x8
  411af8:	mov    edx,0x8
  411afd:	mov    esi,0x12
  411b02:	mov    rdi,rax
  411b05:	call   4203e3 <flatcc_builder_table_add@@Base>
  411b0a:	mov    QWORD PTR [rbp-0x10],rax
  411b0e:	cmp    QWORD PTR [rbp-0x10],0x0
  411b13:	je     412c08 <_start@@Base+0xc978>
  411b19:	mov    rdx,QWORD PTR [rbp-0x30]
  411b1d:	mov    rax,QWORD PTR [rbp-0x10]
  411b21:	mov    rsi,rdx
  411b24:	mov    rdi,rax
  411b27:	call   4064f5 <_start@@Base+0x265>
  411b2c:	jmp    412a2b <_start@@Base+0xc79b>
  411b31:	add    QWORD PTR [rbp-0x50],0x8
  411b36:	mov    rdx,QWORD PTR [rbp-0x58]
  411b3a:	mov    rax,QWORD PTR [rbp-0x50]
  411b3e:	mov    rsi,rdx
  411b41:	mov    rdi,rax
  411b44:	call   406853 <_start@@Base+0x5c3>
  411b49:	mov    QWORD PTR [rbp-0x28],rax
  411b4d:	movabs rax,0xff00000000000000
  411b57:	and    rax,QWORD PTR [rbp-0x28]
  411b5b:	mov    rdx,rax
  411b5e:	movabs rax,0x6100000000000000
  411b68:	cmp    rdx,rax
  411b6b:	jne    411ca4 <_start@@Base+0xba14>
  411b71:	mov    rax,QWORD PTR [rbp-0x50]
  411b75:	mov    QWORD PTR [rbp-0x20],rax
  411b79:	mov    rdx,QWORD PTR [rbp-0x58]
  411b7d:	mov    rsi,QWORD PTR [rbp-0x20]
  411b81:	mov    rax,QWORD PTR [rbp-0x48]
  411b85:	mov    ecx,0x1
  411b8a:	mov    rdi,rax
  411b8d:	call   406d3f <_start@@Base+0xaaf>
  411b92:	mov    QWORD PTR [rbp-0x50],rax
  411b96:	mov    rax,QWORD PTR [rbp-0x20]
  411b9a:	cmp    rax,QWORD PTR [rbp-0x50]
  411b9e:	je     411c84 <_start@@Base+0xb9f4>
  411ba4:	mov    QWORD PTR [rbp-0x30],0x0
  411bac:	mov    rax,QWORD PTR [rbp-0x50]
  411bb0:	mov    QWORD PTR [rbp-0x20],rax
  411bb4:	lea    rcx,[rbp-0x30]
  411bb8:	mov    rdx,QWORD PTR [rbp-0x58]
  411bbc:	mov    rsi,QWORD PTR [rbp-0x20]
  411bc0:	mov    rax,QWORD PTR [rbp-0x48]
  411bc4:	mov    rdi,rax
  411bc7:	call   4076e9 <_start@@Base+0x1459>
  411bcc:	mov    QWORD PTR [rbp-0x50],rax
  411bd0:	mov    rax,QWORD PTR [rbp-0x20]
  411bd4:	cmp    rax,QWORD PTR [rbp-0x50]
  411bd8:	jne    411c24 <_start@@Base+0xb994>
  411bda:	mov    rax,QWORD PTR [rbp-0x50]
  411bde:	mov    QWORD PTR [rbp-0x20],rax
  411be2:	lea    rcx,[rbp-0x30]
  411be6:	mov    rdx,QWORD PTR [rbp-0x58]
  411bea:	mov    rsi,QWORD PTR [rbp-0x20]
  411bee:	mov    rax,QWORD PTR [rbp-0x48]
  411bf2:	mov    r8,rcx
  411bf5:	lea    rcx,[rip+0x33a84]        # 445680 <__data_start@@Base+0x5c0>
  411bfc:	mov    rdi,rax
  411bff:	call   408061 <_start@@Base+0x1dd1>
  411c04:	mov    QWORD PTR [rbp-0x50],rax
  411c08:	mov    rax,QWORD PTR [rbp-0x50]
  411c0c:	cmp    rax,QWORD PTR [rbp-0x20]
  411c10:	je     412c0b <_start@@Base+0xc97b>
  411c16:	mov    rax,QWORD PTR [rbp-0x50]
  411c1a:	cmp    rax,QWORD PTR [rbp-0x58]
  411c1e:	je     412c0b <_start@@Base+0xc97b>
  411c24:	mov    rax,QWORD PTR [rbp-0x30]
  411c28:	test   rax,rax
  411c2b:	jne    411c3f <_start@@Base+0xb9af>
  411c2d:	mov    rax,QWORD PTR [rbp-0x48]
  411c31:	mov    eax,DWORD PTR [rax+0x10]
  411c34:	and    eax,0x2
  411c37:	test   eax,eax
  411c39:	je     412a2b <_start@@Base+0xc79b>
  411c3f:	mov    rax,QWORD PTR [rbp-0x48]
  411c43:	mov    rax,QWORD PTR [rax]
  411c46:	mov    ecx,0x8
  411c4b:	mov    edx,0x8
  411c50:	mov    esi,0x16
  411c55:	mov    rdi,rax
  411c58:	call   4203e3 <flatcc_builder_table_add@@Base>
  411c5d:	mov    QWORD PTR [rbp-0x10],rax
  411c61:	cmp    QWORD PTR [rbp-0x10],0x0
  411c66:	je     412c0e <_start@@Base+0xc97e>
  411c6c:	mov    rdx,QWORD PTR [rbp-0x30]
  411c70:	mov    rax,QWORD PTR [rbp-0x10]
  411c74:	mov    rsi,rdx
  411c77:	mov    rdi,rax
  411c7a:	call   4064f5 <_start@@Base+0x265>
  411c7f:	jmp    412a2b <_start@@Base+0xc79b>
  411c84:	mov    rdx,QWORD PTR [rbp-0x58]
  411c88:	mov    rcx,QWORD PTR [rbp-0x50]
  411c8c:	mov    rax,QWORD PTR [rbp-0x48]
  411c90:	mov    rsi,rcx
  411c93:	mov    rdi,rax
  411c96:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411c9b:	mov    QWORD PTR [rbp-0x50],rax
  411c9f:	jmp    412a2b <_start@@Base+0xc79b>
  411ca4:	mov    rdx,QWORD PTR [rbp-0x58]
  411ca8:	mov    rcx,QWORD PTR [rbp-0x50]
  411cac:	mov    rax,QWORD PTR [rbp-0x48]
  411cb0:	mov    rsi,rcx
  411cb3:	mov    rdi,rax
  411cb6:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411cbb:	mov    QWORD PTR [rbp-0x50],rax
  411cbf:	jmp    412a2b <_start@@Base+0xc79b>
  411cc4:	mov    rdx,QWORD PTR [rbp-0x58]
  411cc8:	mov    rcx,QWORD PTR [rbp-0x50]
  411ccc:	mov    rax,QWORD PTR [rbp-0x48]
  411cd0:	mov    rsi,rcx
  411cd3:	mov    rdi,rax
  411cd6:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411cdb:	mov    QWORD PTR [rbp-0x50],rax
  411cdf:	jmp    412a2b <_start@@Base+0xc79b>
  411ce4:	movabs rax,0x7533325f666e7631
  411cee:	cmp    QWORD PTR [rbp-0x28],rax
  411cf2:	jne    411f94 <_start@@Base+0xbd04>
  411cf8:	mov    rax,QWORD PTR [rbp-0x50]
  411cfc:	mov    QWORD PTR [rbp-0x20],rax
  411d00:	mov    rdx,QWORD PTR [rbp-0x58]
  411d04:	mov    rsi,QWORD PTR [rbp-0x20]
  411d08:	mov    rax,QWORD PTR [rbp-0x48]
  411d0c:	mov    ecx,0x8
  411d11:	mov    rdi,rax
  411d14:	call   406d3f <_start@@Base+0xaaf>
  411d19:	mov    QWORD PTR [rbp-0x50],rax
  411d1d:	mov    rax,QWORD PTR [rbp-0x20]
  411d21:	cmp    rax,QWORD PTR [rbp-0x50]
  411d25:	je     411e06 <_start@@Base+0xbb76>
  411d2b:	mov    DWORD PTR [rbp-0x30],0x0
  411d32:	mov    rax,QWORD PTR [rbp-0x50]
  411d36:	mov    QWORD PTR [rbp-0x20],rax
  411d3a:	lea    rcx,[rbp-0x30]
  411d3e:	mov    rdx,QWORD PTR [rbp-0x58]
  411d42:	mov    rsi,QWORD PTR [rbp-0x20]
  411d46:	mov    rax,QWORD PTR [rbp-0x48]
  411d4a:	mov    rdi,rax
  411d4d:	call   40749b <_start@@Base+0x120b>
  411d52:	mov    QWORD PTR [rbp-0x50],rax
  411d56:	mov    rax,QWORD PTR [rbp-0x20]
  411d5a:	cmp    rax,QWORD PTR [rbp-0x50]
  411d5e:	jne    411daa <_start@@Base+0xbb1a>
  411d60:	mov    rax,QWORD PTR [rbp-0x50]
  411d64:	mov    QWORD PTR [rbp-0x20],rax
  411d68:	lea    rcx,[rbp-0x30]
  411d6c:	mov    rdx,QWORD PTR [rbp-0x58]
  411d70:	mov    rsi,QWORD PTR [rbp-0x20]
  411d74:	mov    rax,QWORD PTR [rbp-0x48]
  411d78:	mov    r8,rcx
  411d7b:	lea    rcx,[rip+0x3391e]        # 4456a0 <__data_start@@Base+0x5e0>
  411d82:	mov    rdi,rax
  411d85:	call   407c4d <_start@@Base+0x19bd>
  411d8a:	mov    QWORD PTR [rbp-0x50],rax
  411d8e:	mov    rax,QWORD PTR [rbp-0x50]
  411d92:	cmp    rax,QWORD PTR [rbp-0x20]
  411d96:	je     412c11 <_start@@Base+0xc981>
  411d9c:	mov    rax,QWORD PTR [rbp-0x50]
  411da0:	cmp    rax,QWORD PTR [rbp-0x58]
  411da4:	je     412c11 <_start@@Base+0xc981>
  411daa:	mov    eax,DWORD PTR [rbp-0x30]
  411dad:	test   eax,eax
  411daf:	jne    411dc3 <_start@@Base+0xbb33>
  411db1:	mov    rax,QWORD PTR [rbp-0x48]
  411db5:	mov    eax,DWORD PTR [rax+0x10]
  411db8:	and    eax,0x2
  411dbb:	test   eax,eax
  411dbd:	je     412a2b <_start@@Base+0xc79b>
  411dc3:	mov    rax,QWORD PTR [rbp-0x48]
  411dc7:	mov    rax,QWORD PTR [rax]
  411dca:	mov    ecx,0x4
  411dcf:	mov    edx,0x4
  411dd4:	mov    esi,0x11
  411dd9:	mov    rdi,rax
  411ddc:	call   4203e3 <flatcc_builder_table_add@@Base>
  411de1:	mov    QWORD PTR [rbp-0x10],rax
  411de5:	cmp    QWORD PTR [rbp-0x10],0x0
  411dea:	je     412c14 <_start@@Base+0xc984>
  411df0:	mov    edx,DWORD PTR [rbp-0x30]
  411df3:	mov    rax,QWORD PTR [rbp-0x10]
  411df7:	mov    esi,edx
  411df9:	mov    rdi,rax
  411dfc:	call   4063ef <_start@@Base+0x15f>
  411e01:	jmp    412a2b <_start@@Base+0xc79b>
  411e06:	add    QWORD PTR [rbp-0x50],0x8
  411e0b:	mov    rdx,QWORD PTR [rbp-0x58]
  411e0f:	mov    rax,QWORD PTR [rbp-0x50]
  411e13:	mov    rsi,rdx
  411e16:	mov    rdi,rax
  411e19:	call   406853 <_start@@Base+0x5c3>
  411e1e:	mov    QWORD PTR [rbp-0x28],rax
  411e22:	movabs rax,0xff00000000000000
  411e2c:	and    rax,QWORD PTR [rbp-0x28]
  411e30:	mov    rdx,rax
  411e33:	movabs rax,0x6100000000000000
  411e3d:	cmp    rdx,rax
  411e40:	jne    411f74 <_start@@Base+0xbce4>
  411e46:	mov    rax,QWORD PTR [rbp-0x50]
  411e4a:	mov    QWORD PTR [rbp-0x20],rax
  411e4e:	mov    rdx,QWORD PTR [rbp-0x58]
  411e52:	mov    rsi,QWORD PTR [rbp-0x20]
  411e56:	mov    rax,QWORD PTR [rbp-0x48]
  411e5a:	mov    ecx,0x1
  411e5f:	mov    rdi,rax
  411e62:	call   406d3f <_start@@Base+0xaaf>
  411e67:	mov    QWORD PTR [rbp-0x50],rax
  411e6b:	mov    rax,QWORD PTR [rbp-0x20]
  411e6f:	cmp    rax,QWORD PTR [rbp-0x50]
  411e73:	je     411f54 <_start@@Base+0xbcc4>
  411e79:	mov    DWORD PTR [rbp-0x30],0x0
  411e80:	mov    rax,QWORD PTR [rbp-0x50]
  411e84:	mov    QWORD PTR [rbp-0x20],rax
  411e88:	lea    rcx,[rbp-0x30]
  411e8c:	mov    rdx,QWORD PTR [rbp-0x58]
  411e90:	mov    rsi,QWORD PTR [rbp-0x20]
  411e94:	mov    rax,QWORD PTR [rbp-0x48]
  411e98:	mov    rdi,rax
  411e9b:	call   40749b <_start@@Base+0x120b>
  411ea0:	mov    QWORD PTR [rbp-0x50],rax
  411ea4:	mov    rax,QWORD PTR [rbp-0x20]
  411ea8:	cmp    rax,QWORD PTR [rbp-0x50]
  411eac:	jne    411ef8 <_start@@Base+0xbc68>
  411eae:	mov    rax,QWORD PTR [rbp-0x50]
  411eb2:	mov    QWORD PTR [rbp-0x20],rax
  411eb6:	lea    rcx,[rbp-0x30]
  411eba:	mov    rdx,QWORD PTR [rbp-0x58]
  411ebe:	mov    rsi,QWORD PTR [rbp-0x20]
  411ec2:	mov    rax,QWORD PTR [rbp-0x48]
  411ec6:	mov    r8,rcx
  411ec9:	lea    rcx,[rip+0x337f0]        # 4456c0 <__data_start@@Base+0x600>
  411ed0:	mov    rdi,rax
  411ed3:	call   407c4d <_start@@Base+0x19bd>
  411ed8:	mov    QWORD PTR [rbp-0x50],rax
  411edc:	mov    rax,QWORD PTR [rbp-0x50]
  411ee0:	cmp    rax,QWORD PTR [rbp-0x20]
  411ee4:	je     412c17 <_start@@Base+0xc987>
  411eea:	mov    rax,QWORD PTR [rbp-0x50]
  411eee:	cmp    rax,QWORD PTR [rbp-0x58]
  411ef2:	je     412c17 <_start@@Base+0xc987>
  411ef8:	mov    eax,DWORD PTR [rbp-0x30]
  411efb:	test   eax,eax
  411efd:	jne    411f11 <_start@@Base+0xbc81>
  411eff:	mov    rax,QWORD PTR [rbp-0x48]
  411f03:	mov    eax,DWORD PTR [rax+0x10]
  411f06:	and    eax,0x2
  411f09:	test   eax,eax
  411f0b:	je     412a2b <_start@@Base+0xc79b>
  411f11:	mov    rax,QWORD PTR [rbp-0x48]
  411f15:	mov    rax,QWORD PTR [rax]
  411f18:	mov    ecx,0x4
  411f1d:	mov    edx,0x4
  411f22:	mov    esi,0x15
  411f27:	mov    rdi,rax
  411f2a:	call   4203e3 <flatcc_builder_table_add@@Base>
  411f2f:	mov    QWORD PTR [rbp-0x10],rax
  411f33:	cmp    QWORD PTR [rbp-0x10],0x0
  411f38:	je     412c1a <_start@@Base+0xc98a>
  411f3e:	mov    edx,DWORD PTR [rbp-0x30]
  411f41:	mov    rax,QWORD PTR [rbp-0x10]
  411f45:	mov    esi,edx
  411f47:	mov    rdi,rax
  411f4a:	call   4063ef <_start@@Base+0x15f>
  411f4f:	jmp    412a2b <_start@@Base+0xc79b>
  411f54:	mov    rdx,QWORD PTR [rbp-0x58]
  411f58:	mov    rcx,QWORD PTR [rbp-0x50]
  411f5c:	mov    rax,QWORD PTR [rbp-0x48]
  411f60:	mov    rsi,rcx
  411f63:	mov    rdi,rax
  411f66:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411f6b:	mov    QWORD PTR [rbp-0x50],rax
  411f6f:	jmp    412a2b <_start@@Base+0xc79b>
  411f74:	mov    rdx,QWORD PTR [rbp-0x58]
  411f78:	mov    rcx,QWORD PTR [rbp-0x50]
  411f7c:	mov    rax,QWORD PTR [rbp-0x48]
  411f80:	mov    rsi,rcx
  411f83:	mov    rdi,rax
  411f86:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  411f8b:	mov    QWORD PTR [rbp-0x50],rax
  411f8f:	jmp    412a2b <_start@@Base+0xc79b>
  411f94:	movabs rax,0x7536345f666e7631
  411f9e:	cmp    QWORD PTR [rbp-0x28],rax
  411fa2:	jne    41224e <_start@@Base+0xbfbe>
  411fa8:	mov    rax,QWORD PTR [rbp-0x50]
  411fac:	mov    QWORD PTR [rbp-0x20],rax
  411fb0:	mov    rdx,QWORD PTR [rbp-0x58]
  411fb4:	mov    rsi,QWORD PTR [rbp-0x20]
  411fb8:	mov    rax,QWORD PTR [rbp-0x48]
  411fbc:	mov    ecx,0x8
  411fc1:	mov    rdi,rax
  411fc4:	call   406d3f <_start@@Base+0xaaf>
  411fc9:	mov    QWORD PTR [rbp-0x50],rax
  411fcd:	mov    rax,QWORD PTR [rbp-0x20]
  411fd1:	cmp    rax,QWORD PTR [rbp-0x50]
  411fd5:	je     4120bb <_start@@Base+0xbe2b>
  411fdb:	mov    QWORD PTR [rbp-0x30],0x0
  411fe3:	mov    rax,QWORD PTR [rbp-0x50]
  411fe7:	mov    QWORD PTR [rbp-0x20],rax
  411feb:	lea    rcx,[rbp-0x30]
  411fef:	mov    rdx,QWORD PTR [rbp-0x58]
  411ff3:	mov    rsi,QWORD PTR [rbp-0x20]
  411ff7:	mov    rax,QWORD PTR [rbp-0x48]
  411ffb:	mov    rdi,rax
  411ffe:	call   4073d4 <_start@@Base+0x1144>
  412003:	mov    QWORD PTR [rbp-0x50],rax
  412007:	mov    rax,QWORD PTR [rbp-0x20]
  41200b:	cmp    rax,QWORD PTR [rbp-0x50]
  41200f:	jne    41205b <_start@@Base+0xbdcb>
  412011:	mov    rax,QWORD PTR [rbp-0x50]
  412015:	mov    QWORD PTR [rbp-0x20],rax
  412019:	lea    rcx,[rbp-0x30]
  41201d:	mov    rdx,QWORD PTR [rbp-0x58]
  412021:	mov    rsi,QWORD PTR [rbp-0x20]
  412025:	mov    rax,QWORD PTR [rbp-0x48]
  412029:	mov    r8,rcx
  41202c:	lea    rcx,[rip+0x336ad]        # 4456e0 <__data_start@@Base+0x620>
  412033:	mov    rdi,rax
  412036:	call   407aea <_start@@Base+0x185a>
  41203b:	mov    QWORD PTR [rbp-0x50],rax
  41203f:	mov    rax,QWORD PTR [rbp-0x50]
  412043:	cmp    rax,QWORD PTR [rbp-0x20]
  412047:	je     412c1d <_start@@Base+0xc98d>
  41204d:	mov    rax,QWORD PTR [rbp-0x50]
  412051:	cmp    rax,QWORD PTR [rbp-0x58]
  412055:	je     412c1d <_start@@Base+0xc98d>
  41205b:	mov    rax,QWORD PTR [rbp-0x30]
  41205f:	test   rax,rax
  412062:	jne    412076 <_start@@Base+0xbde6>
  412064:	mov    rax,QWORD PTR [rbp-0x48]
  412068:	mov    eax,DWORD PTR [rax+0x10]
  41206b:	and    eax,0x2
  41206e:	test   eax,eax
  412070:	je     412a2b <_start@@Base+0xc79b>
  412076:	mov    rax,QWORD PTR [rbp-0x48]
  41207a:	mov    rax,QWORD PTR [rax]
  41207d:	mov    ecx,0x8
  412082:	mov    edx,0x8
  412087:	mov    esi,0x13
  41208c:	mov    rdi,rax
  41208f:	call   4203e3 <flatcc_builder_table_add@@Base>
  412094:	mov    QWORD PTR [rbp-0x10],rax
  412098:	cmp    QWORD PTR [rbp-0x10],0x0
  41209d:	je     412c20 <_start@@Base+0xc990>
  4120a3:	mov    rdx,QWORD PTR [rbp-0x30]
  4120a7:	mov    rax,QWORD PTR [rbp-0x10]
  4120ab:	mov    rsi,rdx
  4120ae:	mov    rdi,rax
  4120b1:	call   406421 <_start@@Base+0x191>
  4120b6:	jmp    412a2b <_start@@Base+0xc79b>
  4120bb:	add    QWORD PTR [rbp-0x50],0x8
  4120c0:	mov    rdx,QWORD PTR [rbp-0x58]
  4120c4:	mov    rax,QWORD PTR [rbp-0x50]
  4120c8:	mov    rsi,rdx
  4120cb:	mov    rdi,rax
  4120ce:	call   406853 <_start@@Base+0x5c3>
  4120d3:	mov    QWORD PTR [rbp-0x28],rax
  4120d7:	movabs rax,0xff00000000000000
  4120e1:	and    rax,QWORD PTR [rbp-0x28]
  4120e5:	mov    rdx,rax
  4120e8:	movabs rax,0x6100000000000000
  4120f2:	cmp    rdx,rax
  4120f5:	jne    41222e <_start@@Base+0xbf9e>
  4120fb:	mov    rax,QWORD PTR [rbp-0x50]
  4120ff:	mov    QWORD PTR [rbp-0x20],rax
  412103:	mov    rdx,QWORD PTR [rbp-0x58]
  412107:	mov    rsi,QWORD PTR [rbp-0x20]
  41210b:	mov    rax,QWORD PTR [rbp-0x48]
  41210f:	mov    ecx,0x1
  412114:	mov    rdi,rax
  412117:	call   406d3f <_start@@Base+0xaaf>
  41211c:	mov    QWORD PTR [rbp-0x50],rax
  412120:	mov    rax,QWORD PTR [rbp-0x20]
  412124:	cmp    rax,QWORD PTR [rbp-0x50]
  412128:	je     41220e <_start@@Base+0xbf7e>
  41212e:	mov    QWORD PTR [rbp-0x30],0x0
  412136:	mov    rax,QWORD PTR [rbp-0x50]
  41213a:	mov    QWORD PTR [rbp-0x20],rax
  41213e:	lea    rcx,[rbp-0x30]
  412142:	mov    rdx,QWORD PTR [rbp-0x58]
  412146:	mov    rsi,QWORD PTR [rbp-0x20]
  41214a:	mov    rax,QWORD PTR [rbp-0x48]
  41214e:	mov    rdi,rax
  412151:	call   4073d4 <_start@@Base+0x1144>
  412156:	mov    QWORD PTR [rbp-0x50],rax
  41215a:	mov    rax,QWORD PTR [rbp-0x20]
  41215e:	cmp    rax,QWORD PTR [rbp-0x50]
  412162:	jne    4121ae <_start@@Base+0xbf1e>
  412164:	mov    rax,QWORD PTR [rbp-0x50]
  412168:	mov    QWORD PTR [rbp-0x20],rax
  41216c:	lea    rcx,[rbp-0x30]
  412170:	mov    rdx,QWORD PTR [rbp-0x58]
  412174:	mov    rsi,QWORD PTR [rbp-0x20]
  412178:	mov    rax,QWORD PTR [rbp-0x48]
  41217c:	mov    r8,rcx
  41217f:	lea    rcx,[rip+0x3357a]        # 445700 <__data_start@@Base+0x640>
  412186:	mov    rdi,rax
  412189:	call   407aea <_start@@Base+0x185a>
  41218e:	mov    QWORD PTR [rbp-0x50],rax
  412192:	mov    rax,QWORD PTR [rbp-0x50]
  412196:	cmp    rax,QWORD PTR [rbp-0x20]
  41219a:	je     412c23 <_start@@Base+0xc993>
  4121a0:	mov    rax,QWORD PTR [rbp-0x50]
  4121a4:	cmp    rax,QWORD PTR [rbp-0x58]
  4121a8:	je     412c23 <_start@@Base+0xc993>
  4121ae:	mov    rax,QWORD PTR [rbp-0x30]
  4121b2:	test   rax,rax
  4121b5:	jne    4121c9 <_start@@Base+0xbf39>
  4121b7:	mov    rax,QWORD PTR [rbp-0x48]
  4121bb:	mov    eax,DWORD PTR [rax+0x10]
  4121be:	and    eax,0x2
  4121c1:	test   eax,eax
  4121c3:	je     412a2b <_start@@Base+0xc79b>
  4121c9:	mov    rax,QWORD PTR [rbp-0x48]
  4121cd:	mov    rax,QWORD PTR [rax]
  4121d0:	mov    ecx,0x8
  4121d5:	mov    edx,0x8
  4121da:	mov    esi,0x17
  4121df:	mov    rdi,rax
  4121e2:	call   4203e3 <flatcc_builder_table_add@@Base>
  4121e7:	mov    QWORD PTR [rbp-0x10],rax
  4121eb:	cmp    QWORD PTR [rbp-0x10],0x0
  4121f0:	je     412c26 <_start@@Base+0xc996>
  4121f6:	mov    rdx,QWORD PTR [rbp-0x30]
  4121fa:	mov    rax,QWORD PTR [rbp-0x10]
  4121fe:	mov    rsi,rdx
  412201:	mov    rdi,rax
  412204:	call   406421 <_start@@Base+0x191>
  412209:	jmp    412a2b <_start@@Base+0xc79b>
  41220e:	mov    rdx,QWORD PTR [rbp-0x58]
  412212:	mov    rcx,QWORD PTR [rbp-0x50]
  412216:	mov    rax,QWORD PTR [rbp-0x48]
  41221a:	mov    rsi,rcx
  41221d:	mov    rdi,rax
  412220:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412225:	mov    QWORD PTR [rbp-0x50],rax
  412229:	jmp    412a2b <_start@@Base+0xc79b>
  41222e:	mov    rdx,QWORD PTR [rbp-0x58]
  412232:	mov    rcx,QWORD PTR [rbp-0x50]
  412236:	mov    rax,QWORD PTR [rbp-0x48]
  41223a:	mov    rsi,rcx
  41223d:	mov    rdi,rax
  412240:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412245:	mov    QWORD PTR [rbp-0x50],rax
  412249:	jmp    412a2b <_start@@Base+0xc79b>
  41224e:	mov    rdx,QWORD PTR [rbp-0x58]
  412252:	mov    rcx,QWORD PTR [rbp-0x50]
  412256:	mov    rax,QWORD PTR [rbp-0x48]
  41225a:	mov    rsi,rcx
  41225d:	mov    rdi,rax
  412260:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412265:	mov    QWORD PTR [rbp-0x50],rax
  412269:	jmp    412a2b <_start@@Base+0xc79b>
  41226e:	movabs rax,0x766563746f725f6e
  412278:	cmp    QWORD PTR [rbp-0x28],rax
  41227c:	ja     4125ac <_start@@Base+0xc31c>
  412282:	movabs rax,0x746573746e657374
  41228c:	cmp    QWORD PTR [rbp-0x28],rax
  412290:	jne    41258c <_start@@Base+0xc2fc>
  412296:	add    QWORD PTR [rbp-0x50],0x8
  41229b:	mov    rdx,QWORD PTR [rbp-0x58]
  41229f:	mov    rax,QWORD PTR [rbp-0x50]
  4122a3:	mov    rsi,rdx
  4122a6:	mov    rdi,rax
  4122a9:	call   406853 <_start@@Base+0x5c3>
  4122ae:	mov    QWORD PTR [rbp-0x28],rax
  4122b2:	movabs rax,0x6564666c61746275
  4122bc:	cmp    QWORD PTR [rbp-0x28],rax
  4122c0:	jne    41256c <_start@@Base+0xc2dc>
  4122c6:	add    QWORD PTR [rbp-0x50],0x8
  4122cb:	mov    rdx,QWORD PTR [rbp-0x58]
  4122cf:	mov    rax,QWORD PTR [rbp-0x50]
  4122d3:	mov    rsi,rdx
  4122d6:	mov    rdi,rax
  4122d9:	call   406853 <_start@@Base+0x5c3>
  4122de:	mov    QWORD PTR [rbp-0x28],rax
  4122e2:	movabs rax,0xffffffff00000000
  4122ec:	and    rax,QWORD PTR [rbp-0x28]
  4122f0:	mov    rdx,rax
  4122f3:	movabs rax,0x6666657200000000
  4122fd:	cmp    rdx,rax
  412300:	jne    41254c <_start@@Base+0xc2bc>
  412306:	mov    rax,QWORD PTR [rbp-0x50]
  41230a:	mov    QWORD PTR [rbp-0x20],rax
  41230e:	mov    rdx,QWORD PTR [rbp-0x58]
  412312:	mov    rsi,QWORD PTR [rbp-0x20]
  412316:	mov    rax,QWORD PTR [rbp-0x48]
  41231a:	mov    ecx,0x4
  41231f:	mov    rdi,rax
  412322:	call   406d3f <_start@@Base+0xaaf>
  412327:	mov    QWORD PTR [rbp-0x50],rax
  41232b:	mov    rax,QWORD PTR [rbp-0x20]
  41232f:	cmp    rax,QWORD PTR [rbp-0x50]
  412333:	je     41252c <_start@@Base+0xc29c>
  412339:	mov    rax,QWORD PTR [rbp-0x50]
  41233d:	cmp    rax,QWORD PTR [rbp-0x58]
  412341:	je     41248c <_start@@Base+0xc1fc>
  412347:	mov    rax,QWORD PTR [rbp-0x50]
  41234b:	movzx  eax,BYTE PTR [rax]
  41234e:	cmp    al,0x5b
  412350:	jne    41248c <_start@@Base+0xc1fc>
  412356:	mov    rax,QWORD PTR [rbp-0x48]
  41235a:	mov    rax,QWORD PTR [rax]
  41235d:	mov    ecx,0xffffffff
  412362:	mov    edx,0x1
  412367:	mov    esi,0x1
  41236c:	mov    rdi,rax
  41236f:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  412374:	test   eax,eax
  412376:	jne    412c29 <_start@@Base+0xc999>
  41237c:	lea    rcx,[rbp-0x40]
  412380:	mov    rdx,QWORD PTR [rbp-0x58]
  412384:	mov    rsi,QWORD PTR [rbp-0x50]
  412388:	mov    rax,QWORD PTR [rbp-0x48]
  41238c:	mov    rdi,rax
  41238f:	call   406b44 <_start@@Base+0x8b4>
  412394:	mov    QWORD PTR [rbp-0x50],rax
  412398:	jmp    41246d <_start@@Base+0xc1dd>
  41239d:	mov    BYTE PTR [rbp-0x30],0x0
  4123a1:	mov    rax,QWORD PTR [rbp-0x48]
  4123a5:	mov    rax,QWORD PTR [rax]
  4123a8:	mov    esi,0x1
  4123ad:	mov    rdi,rax
  4123b0:	call   41d895 <flatcc_builder_extend_vector@@Base>
  4123b5:	mov    QWORD PTR [rbp-0x10],rax
  4123b9:	cmp    QWORD PTR [rbp-0x10],0x0
  4123be:	je     412c2c <_start@@Base+0xc99c>
  4123c4:	mov    rax,QWORD PTR [rbp-0x50]
  4123c8:	mov    QWORD PTR [rbp-0x20],rax
  4123cc:	lea    rcx,[rbp-0x30]
  4123d0:	mov    rdx,QWORD PTR [rbp-0x58]
  4123d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4123d8:	mov    rax,QWORD PTR [rbp-0x48]
  4123dc:	mov    rdi,rax
  4123df:	call   407626 <_start@@Base+0x1396>
  4123e4:	mov    QWORD PTR [rbp-0x50],rax
  4123e8:	mov    rax,QWORD PTR [rbp-0x20]
  4123ec:	cmp    rax,QWORD PTR [rbp-0x50]
  4123f0:	jne    41243c <_start@@Base+0xc1ac>
  4123f2:	mov    rax,QWORD PTR [rbp-0x50]
  4123f6:	mov    QWORD PTR [rbp-0x20],rax
  4123fa:	lea    rcx,[rbp-0x30]
  4123fe:	mov    rdx,QWORD PTR [rbp-0x58]
  412402:	mov    rsi,QWORD PTR [rbp-0x20]
  412406:	mov    rax,QWORD PTR [rbp-0x48]
  41240a:	mov    r8,rcx
  41240d:	lea    rcx,[rip+0x3330c]        # 445720 <__data_start@@Base+0x660>
  412414:	mov    rdi,rax
  412417:	call   407f08 <_start@@Base+0x1c78>
  41241c:	mov    QWORD PTR [rbp-0x50],rax
  412420:	mov    rax,QWORD PTR [rbp-0x50]
  412424:	cmp    rax,QWORD PTR [rbp-0x20]
  412428:	je     412c2f <_start@@Base+0xc99f>
  41242e:	mov    rax,QWORD PTR [rbp-0x50]
  412432:	cmp    rax,QWORD PTR [rbp-0x58]
  412436:	je     412c2f <_start@@Base+0xc99f>
  41243c:	movzx  eax,BYTE PTR [rbp-0x30]
  412440:	movzx  edx,al
  412443:	mov    rax,QWORD PTR [rbp-0x10]
  412447:	mov    esi,edx
  412449:	mov    rdi,rax
  41244c:	call   406385 <_start@@Base+0xf5>
  412451:	lea    rcx,[rbp-0x40]
  412455:	mov    rdx,QWORD PTR [rbp-0x58]
  412459:	mov    rsi,QWORD PTR [rbp-0x50]
  41245d:	mov    rax,QWORD PTR [rbp-0x48]
  412461:	mov    rdi,rax
  412464:	call   406c01 <_start@@Base+0x971>
  412469:	mov    QWORD PTR [rbp-0x50],rax
  41246d:	mov    eax,DWORD PTR [rbp-0x40]
  412470:	test   eax,eax
  412472:	jne    41239d <_start@@Base+0xc10d>
  412478:	mov    rax,QWORD PTR [rbp-0x48]
  41247c:	mov    rax,QWORD PTR [rax]
  41247f:	mov    rdi,rax
  412482:	call   41f1da <flatcc_builder_end_vector@@Base>
  412487:	mov    DWORD PTR [rbp-0x3c],eax
  41248a:	jmp    4124f0 <_start@@Base+0xc260>
  41248c:	mov    rax,QWORD PTR [rbp-0x48]
  412490:	mov    rax,QWORD PTR [rax]
  412493:	mov    ecx,0x0
  412498:	mov    edx,0x0
  41249d:	mov    esi,0x0
  4124a2:	mov    rdi,rax
  4124a5:	call   41d46e <flatcc_builder_start_buffer@@Base>
  4124aa:	test   eax,eax
  4124ac:	jne    412c32 <_start@@Base+0xc9a2>
  4124b2:	lea    rcx,[rbp-0x3c]
  4124b6:	mov    rdx,QWORD PTR [rbp-0x58]
  4124ba:	mov    rsi,QWORD PTR [rbp-0x50]
  4124be:	mov    rax,QWORD PTR [rbp-0x48]
  4124c2:	mov    rdi,rax
  4124c5:	call   40f343 <_start@@Base+0x90b3>
  4124ca:	mov    QWORD PTR [rbp-0x50],rax
  4124ce:	mov    eax,DWORD PTR [rbp-0x3c]
  4124d1:	test   eax,eax
  4124d3:	je     412c35 <_start@@Base+0xc9a5>
  4124d9:	mov    edx,DWORD PTR [rbp-0x3c]
  4124dc:	mov    rax,QWORD PTR [rbp-0x48]
  4124e0:	mov    rax,QWORD PTR [rax]
  4124e3:	mov    esi,edx
  4124e5:	mov    rdi,rax
  4124e8:	call   41d5bb <flatcc_builder_end_buffer@@Base>
  4124ed:	mov    DWORD PTR [rbp-0x3c],eax
  4124f0:	mov    eax,DWORD PTR [rbp-0x3c]
  4124f3:	test   eax,eax
  4124f5:	je     412c38 <_start@@Base+0xc9a8>
  4124fb:	mov    rax,QWORD PTR [rbp-0x48]
  4124ff:	mov    rax,QWORD PTR [rax]
  412502:	mov    esi,0xd
  412507:	mov    rdi,rax
  41250a:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41250f:	mov    QWORD PTR [rbp-0x18],rax
  412513:	cmp    QWORD PTR [rbp-0x18],0x0
  412518:	je     412c38 <_start@@Base+0xc9a8>
  41251e:	mov    edx,DWORD PTR [rbp-0x3c]
  412521:	mov    rax,QWORD PTR [rbp-0x18]
  412525:	mov    DWORD PTR [rax],edx
  412527:	jmp    412a2b <_start@@Base+0xc79b>
  41252c:	mov    rdx,QWORD PTR [rbp-0x58]
  412530:	mov    rcx,QWORD PTR [rbp-0x50]
  412534:	mov    rax,QWORD PTR [rbp-0x48]
  412538:	mov    rsi,rcx
  41253b:	mov    rdi,rax
  41253e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412543:	mov    QWORD PTR [rbp-0x50],rax
  412547:	jmp    412a2b <_start@@Base+0xc79b>
  41254c:	mov    rdx,QWORD PTR [rbp-0x58]
  412550:	mov    rcx,QWORD PTR [rbp-0x50]
  412554:	mov    rax,QWORD PTR [rbp-0x48]
  412558:	mov    rsi,rcx
  41255b:	mov    rdi,rax
  41255e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412563:	mov    QWORD PTR [rbp-0x50],rax
  412567:	jmp    412a2b <_start@@Base+0xc79b>
  41256c:	mov    rdx,QWORD PTR [rbp-0x58]
  412570:	mov    rcx,QWORD PTR [rbp-0x50]
  412574:	mov    rax,QWORD PTR [rbp-0x48]
  412578:	mov    rsi,rcx
  41257b:	mov    rdi,rax
  41257e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412583:	mov    QWORD PTR [rbp-0x50],rax
  412587:	jmp    412a2b <_start@@Base+0xc79b>
  41258c:	mov    rdx,QWORD PTR [rbp-0x58]
  412590:	mov    rcx,QWORD PTR [rbp-0x50]
  412594:	mov    rax,QWORD PTR [rbp-0x48]
  412598:	mov    rsi,rcx
  41259b:	mov    rdi,rax
  41259e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4125a3:	mov    QWORD PTR [rbp-0x50],rax
  4125a7:	jmp    412a2b <_start@@Base+0xc79b>
  4125ac:	movabs rax,0x766563746f725f6f
  4125b6:	cmp    QWORD PTR [rbp-0x28],rax
  4125ba:	jne    412a10 <_start@@Base+0xc780>
  4125c0:	add    QWORD PTR [rbp-0x50],0x8
  4125c5:	mov    rdx,QWORD PTR [rbp-0x58]
  4125c9:	mov    rax,QWORD PTR [rbp-0x50]
  4125cd:	mov    rsi,rdx
  4125d0:	mov    rdi,rax
  4125d3:	call   406853 <_start@@Base+0x5c3>
  4125d8:	mov    QWORD PTR [rbp-0x28],rax
  4125dc:	movabs rax,0x665f646f75626c65
  4125e6:	cmp    QWORD PTR [rbp-0x28],rax
  4125ea:	jne    412818 <_start@@Base+0xc588>
  4125f0:	add    QWORD PTR [rbp-0x50],0x8
  4125f5:	mov    rdx,QWORD PTR [rbp-0x58]
  4125f9:	mov    rax,QWORD PTR [rbp-0x50]
  4125fd:	mov    rsi,rdx
  412600:	mov    rdi,rax
  412603:	call   406853 <_start@@Base+0x5c3>
  412608:	mov    QWORD PTR [rbp-0x28],rax
  41260c:	movabs rax,0xff00000000000000
  412616:	and    rax,QWORD PTR [rbp-0x28]
  41261a:	mov    rdx,rax
  41261d:	movabs rax,0x7300000000000000
  412627:	cmp    rdx,rax
  41262a:	jne    4127f8 <_start@@Base+0xc568>
  412630:	mov    rax,QWORD PTR [rbp-0x50]
  412634:	mov    QWORD PTR [rbp-0x20],rax
  412638:	mov    rdx,QWORD PTR [rbp-0x58]
  41263c:	mov    rsi,QWORD PTR [rbp-0x20]
  412640:	mov    rax,QWORD PTR [rbp-0x48]
  412644:	mov    ecx,0x1
  412649:	mov    rdi,rax
  41264c:	call   406d3f <_start@@Base+0xaaf>
  412651:	mov    QWORD PTR [rbp-0x50],rax
  412655:	mov    rax,QWORD PTR [rbp-0x20]
  412659:	cmp    rax,QWORD PTR [rbp-0x50]
  41265d:	je     4127d8 <_start@@Base+0xc548>
  412663:	mov    rax,QWORD PTR [rbp-0x48]
  412667:	mov    rax,QWORD PTR [rax]
  41266a:	mov    ecx,0x1fffffff
  41266f:	mov    edx,0x8
  412674:	mov    esi,0x8
  412679:	mov    rdi,rax
  41267c:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  412681:	test   eax,eax
  412683:	jne    412c3b <_start@@Base+0xc9ab>
  412689:	lea    rcx,[rbp-0x40]
  41268d:	mov    rdx,QWORD PTR [rbp-0x58]
  412691:	mov    rsi,QWORD PTR [rbp-0x50]
  412695:	mov    rax,QWORD PTR [rbp-0x48]
  412699:	mov    rdi,rax
  41269c:	call   406b44 <_start@@Base+0x8b4>
  4126a1:	mov    QWORD PTR [rbp-0x50],rax
  4126a5:	jmp    41277f <_start@@Base+0xc4ef>
  4126aa:	vxorpd xmm0,xmm0,xmm0
  4126ae:	vmovsd QWORD PTR [rbp-0x30],xmm0
  4126b3:	mov    rax,QWORD PTR [rbp-0x48]
  4126b7:	mov    rax,QWORD PTR [rax]
  4126ba:	mov    esi,0x1
  4126bf:	mov    rdi,rax
  4126c2:	call   41d895 <flatcc_builder_extend_vector@@Base>
  4126c7:	mov    QWORD PTR [rbp-0x10],rax
  4126cb:	cmp    QWORD PTR [rbp-0x10],0x0
  4126d0:	je     412c3e <_start@@Base+0xc9ae>
  4126d6:	mov    rax,QWORD PTR [rbp-0x50]
  4126da:	mov    QWORD PTR [rbp-0x20],rax
  4126de:	lea    rcx,[rbp-0x30]
  4126e2:	mov    rdx,QWORD PTR [rbp-0x58]
  4126e6:	mov    rsi,QWORD PTR [rbp-0x20]
  4126ea:	mov    rax,QWORD PTR [rbp-0x48]
  4126ee:	mov    rdi,rax
  4126f1:	call   427fd2 <flatcc_json_parser_double@@Base>
  4126f6:	mov    QWORD PTR [rbp-0x50],rax
  4126fa:	mov    rax,QWORD PTR [rbp-0x20]
  4126fe:	cmp    rax,QWORD PTR [rbp-0x50]
  412702:	jne    41274e <_start@@Base+0xc4be>
  412704:	mov    rax,QWORD PTR [rbp-0x50]
  412708:	mov    QWORD PTR [rbp-0x20],rax
  41270c:	lea    rcx,[rbp-0x30]
  412710:	mov    rdx,QWORD PTR [rbp-0x58]
  412714:	mov    rsi,QWORD PTR [rbp-0x20]
  412718:	mov    rax,QWORD PTR [rbp-0x48]
  41271c:	mov    r8,rcx
  41271f:	lea    rcx,[rip+0x3301a]        # 445740 <__data_start@@Base+0x680>
  412726:	mov    rdi,rax
  412729:	call   4088a2 <_start@@Base+0x2612>
  41272e:	mov    QWORD PTR [rbp-0x50],rax
  412732:	mov    rax,QWORD PTR [rbp-0x50]
  412736:	cmp    rax,QWORD PTR [rbp-0x20]
  41273a:	je     412c41 <_start@@Base+0xc9b1>
  412740:	mov    rax,QWORD PTR [rbp-0x50]
  412744:	cmp    rax,QWORD PTR [rbp-0x58]
  412748:	je     412c41 <_start@@Base+0xc9b1>
  41274e:	mov    rdx,QWORD PTR [rbp-0x30]
  412752:	mov    rax,QWORD PTR [rbp-0x10]
  412756:	vmovq  xmm0,rdx
  41275b:	mov    rdi,rax
  41275e:	call   406594 <_start@@Base+0x304>
  412763:	lea    rcx,[rbp-0x40]
  412767:	mov    rdx,QWORD PTR [rbp-0x58]
  41276b:	mov    rsi,QWORD PTR [rbp-0x50]
  41276f:	mov    rax,QWORD PTR [rbp-0x48]
  412773:	mov    rdi,rax
  412776:	call   406c01 <_start@@Base+0x971>
  41277b:	mov    QWORD PTR [rbp-0x50],rax
  41277f:	mov    eax,DWORD PTR [rbp-0x40]
  412782:	test   eax,eax
  412784:	jne    4126aa <_start@@Base+0xc41a>
  41278a:	mov    rax,QWORD PTR [rbp-0x48]
  41278e:	mov    rax,QWORD PTR [rax]
  412791:	mov    rdi,rax
  412794:	call   41f1da <flatcc_builder_end_vector@@Base>
  412799:	mov    DWORD PTR [rbp-0x3c],eax
  41279c:	mov    eax,DWORD PTR [rbp-0x3c]
  41279f:	test   eax,eax
  4127a1:	je     412c44 <_start@@Base+0xc9b4>
  4127a7:	mov    rax,QWORD PTR [rbp-0x48]
  4127ab:	mov    rax,QWORD PTR [rax]
  4127ae:	mov    esi,0x21
  4127b3:	mov    rdi,rax
  4127b6:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  4127bb:	mov    QWORD PTR [rbp-0x18],rax
  4127bf:	cmp    QWORD PTR [rbp-0x18],0x0
  4127c4:	je     412c44 <_start@@Base+0xc9b4>
  4127ca:	mov    edx,DWORD PTR [rbp-0x3c]
  4127cd:	mov    rax,QWORD PTR [rbp-0x18]
  4127d1:	mov    DWORD PTR [rax],edx
  4127d3:	jmp    412a2b <_start@@Base+0xc79b>
  4127d8:	mov    rdx,QWORD PTR [rbp-0x58]
  4127dc:	mov    rcx,QWORD PTR [rbp-0x50]
  4127e0:	mov    rax,QWORD PTR [rbp-0x48]
  4127e4:	mov    rsi,rcx
  4127e7:	mov    rdi,rax
  4127ea:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4127ef:	mov    QWORD PTR [rbp-0x50],rax
  4127f3:	jmp    412a2b <_start@@Base+0xc79b>
  4127f8:	mov    rdx,QWORD PTR [rbp-0x58]
  4127fc:	mov    rcx,QWORD PTR [rbp-0x50]
  412800:	mov    rax,QWORD PTR [rbp-0x48]
  412804:	mov    rsi,rcx
  412807:	mov    rdi,rax
  41280a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41280f:	mov    QWORD PTR [rbp-0x50],rax
  412813:	jmp    412a2b <_start@@Base+0xc79b>
  412818:	mov    rax,QWORD PTR [rbp-0x28]
  41281c:	mov    al,0x0
  41281e:	mov    rdx,rax
  412821:	movabs rax,0x665f6c6f6e677300
  41282b:	cmp    rdx,rax
  41282e:	jne    4129f3 <_start@@Base+0xc763>
  412834:	mov    rax,QWORD PTR [rbp-0x50]
  412838:	mov    QWORD PTR [rbp-0x20],rax
  41283c:	mov    rdx,QWORD PTR [rbp-0x58]
  412840:	mov    rsi,QWORD PTR [rbp-0x20]
  412844:	mov    rax,QWORD PTR [rbp-0x48]
  412848:	mov    ecx,0x7
  41284d:	mov    rdi,rax
  412850:	call   406d3f <_start@@Base+0xaaf>
  412855:	mov    QWORD PTR [rbp-0x50],rax
  412859:	mov    rax,QWORD PTR [rbp-0x20]
  41285d:	cmp    rax,QWORD PTR [rbp-0x50]
  412861:	je     4129d6 <_start@@Base+0xc746>
  412867:	mov    rax,QWORD PTR [rbp-0x48]
  41286b:	mov    rax,QWORD PTR [rax]
  41286e:	mov    ecx,0x1fffffff
  412873:	mov    edx,0x8
  412878:	mov    esi,0x8
  41287d:	mov    rdi,rax
  412880:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  412885:	test   eax,eax
  412887:	jne    412c47 <_start@@Base+0xc9b7>
  41288d:	lea    rcx,[rbp-0x40]
  412891:	mov    rdx,QWORD PTR [rbp-0x58]
  412895:	mov    rsi,QWORD PTR [rbp-0x50]
  412899:	mov    rax,QWORD PTR [rbp-0x48]
  41289d:	mov    rdi,rax
  4128a0:	call   406b44 <_start@@Base+0x8b4>
  4128a5:	mov    QWORD PTR [rbp-0x50],rax
  4128a9:	jmp    412980 <_start@@Base+0xc6f0>
  4128ae:	mov    QWORD PTR [rbp-0x30],0x0
  4128b6:	mov    rax,QWORD PTR [rbp-0x48]
  4128ba:	mov    rax,QWORD PTR [rax]
  4128bd:	mov    esi,0x1
  4128c2:	mov    rdi,rax
  4128c5:	call   41d895 <flatcc_builder_extend_vector@@Base>
  4128ca:	mov    QWORD PTR [rbp-0x10],rax
  4128ce:	cmp    QWORD PTR [rbp-0x10],0x0
  4128d3:	je     412c4a <_start@@Base+0xc9ba>
  4128d9:	mov    rax,QWORD PTR [rbp-0x50]
  4128dd:	mov    QWORD PTR [rbp-0x20],rax
  4128e1:	lea    rcx,[rbp-0x30]
  4128e5:	mov    rdx,QWORD PTR [rbp-0x58]
  4128e9:	mov    rsi,QWORD PTR [rbp-0x20]
  4128ed:	mov    rax,QWORD PTR [rbp-0x48]
  4128f1:	mov    rdi,rax
  4128f4:	call   4076e9 <_start@@Base+0x1459>
  4128f9:	mov    QWORD PTR [rbp-0x50],rax
  4128fd:	mov    rax,QWORD PTR [rbp-0x20]
  412901:	cmp    rax,QWORD PTR [rbp-0x50]
  412905:	jne    412951 <_start@@Base+0xc6c1>
  412907:	mov    rax,QWORD PTR [rbp-0x50]
  41290b:	mov    QWORD PTR [rbp-0x20],rax
  41290f:	lea    rcx,[rbp-0x30]
  412913:	mov    rdx,QWORD PTR [rbp-0x58]
  412917:	mov    rsi,QWORD PTR [rbp-0x20]
  41291b:	mov    rax,QWORD PTR [rbp-0x48]
  41291f:	mov    r8,rcx
  412922:	lea    rcx,[rip+0x32e37]        # 445760 <__data_start@@Base+0x6a0>
  412929:	mov    rdi,rax
  41292c:	call   408061 <_start@@Base+0x1dd1>
  412931:	mov    QWORD PTR [rbp-0x50],rax
  412935:	mov    rax,QWORD PTR [rbp-0x50]
  412939:	cmp    rax,QWORD PTR [rbp-0x20]
  41293d:	je     412c4d <_start@@Base+0xc9bd>
  412943:	mov    rax,QWORD PTR [rbp-0x50]
  412947:	cmp    rax,QWORD PTR [rbp-0x58]
  41294b:	je     412c4d <_start@@Base+0xc9bd>
  412951:	mov    rdx,QWORD PTR [rbp-0x30]
  412955:	mov    rax,QWORD PTR [rbp-0x10]
  412959:	mov    rsi,rdx
  41295c:	mov    rdi,rax
  41295f:	call   4064f5 <_start@@Base+0x265>
  412964:	lea    rcx,[rbp-0x40]
  412968:	mov    rdx,QWORD PTR [rbp-0x58]
  41296c:	mov    rsi,QWORD PTR [rbp-0x50]
  412970:	mov    rax,QWORD PTR [rbp-0x48]
  412974:	mov    rdi,rax
  412977:	call   406c01 <_start@@Base+0x971>
  41297c:	mov    QWORD PTR [rbp-0x50],rax
  412980:	mov    eax,DWORD PTR [rbp-0x40]
  412983:	test   eax,eax
  412985:	jne    4128ae <_start@@Base+0xc61e>
  41298b:	mov    rax,QWORD PTR [rbp-0x48]
  41298f:	mov    rax,QWORD PTR [rax]
  412992:	mov    rdi,rax
  412995:	call   41f1da <flatcc_builder_end_vector@@Base>
  41299a:	mov    DWORD PTR [rbp-0x3c],eax
  41299d:	mov    eax,DWORD PTR [rbp-0x3c]
  4129a0:	test   eax,eax
  4129a2:	je     412c50 <_start@@Base+0xc9c0>
  4129a8:	mov    rax,QWORD PTR [rbp-0x48]
  4129ac:	mov    rax,QWORD PTR [rax]
  4129af:	mov    esi,0x20
  4129b4:	mov    rdi,rax
  4129b7:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  4129bc:	mov    QWORD PTR [rbp-0x18],rax
  4129c0:	cmp    QWORD PTR [rbp-0x18],0x0
  4129c5:	je     412c50 <_start@@Base+0xc9c0>
  4129cb:	mov    edx,DWORD PTR [rbp-0x3c]
  4129ce:	mov    rax,QWORD PTR [rbp-0x18]
  4129d2:	mov    DWORD PTR [rax],edx
  4129d4:	jmp    412a2b <_start@@Base+0xc79b>
  4129d6:	mov    rdx,QWORD PTR [rbp-0x58]
  4129da:	mov    rcx,QWORD PTR [rbp-0x50]
  4129de:	mov    rax,QWORD PTR [rbp-0x48]
  4129e2:	mov    rsi,rcx
  4129e5:	mov    rdi,rax
  4129e8:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4129ed:	mov    QWORD PTR [rbp-0x50],rax
  4129f1:	jmp    412a2b <_start@@Base+0xc79b>
  4129f3:	mov    rdx,QWORD PTR [rbp-0x58]
  4129f7:	mov    rcx,QWORD PTR [rbp-0x50]
  4129fb:	mov    rax,QWORD PTR [rbp-0x48]
  4129ff:	mov    rsi,rcx
  412a02:	mov    rdi,rax
  412a05:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412a0a:	mov    QWORD PTR [rbp-0x50],rax
  412a0e:	jmp    412a2b <_start@@Base+0xc79b>
  412a10:	mov    rdx,QWORD PTR [rbp-0x58]
  412a14:	mov    rcx,QWORD PTR [rbp-0x50]
  412a18:	mov    rax,QWORD PTR [rbp-0x48]
  412a1c:	mov    rsi,rcx
  412a1f:	mov    rdi,rax
  412a22:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412a27:	mov    QWORD PTR [rbp-0x50],rax
  412a2b:	lea    rcx,[rbp-0x40]
  412a2f:	mov    rdx,QWORD PTR [rbp-0x58]
  412a33:	mov    rsi,QWORD PTR [rbp-0x50]
  412a37:	mov    rax,QWORD PTR [rbp-0x48]
  412a3b:	mov    rdi,rax
  412a3e:	call   406a06 <_start@@Base+0x776>
  412a43:	mov    QWORD PTR [rbp-0x50],rax
  412a47:	mov    eax,DWORD PTR [rbp-0x40]
  412a4a:	test   eax,eax
  412a4c:	jne    40f3df <_start@@Base+0x914f>
  412a52:	mov    rax,QWORD PTR [rbp-0x48]
  412a56:	mov    eax,DWORD PTR [rax+0x1c]
  412a59:	test   eax,eax
  412a5b:	jne    412c53 <_start@@Base+0xc9c3>
  412a61:	mov    rax,QWORD PTR [rbp-0x48]
  412a65:	mov    rax,QWORD PTR [rax]
  412a68:	mov    esi,0x3
  412a6d:	mov    rdi,rax
  412a70:	call   41eb06 <flatcc_builder_check_required_field@@Base>
  412a75:	test   eax,eax
  412a77:	jne    412a9b <_start@@Base+0xc80b>
  412a79:	mov    rdx,QWORD PTR [rbp-0x58]
  412a7d:	mov    rsi,QWORD PTR [rbp-0x50]
  412a81:	mov    rax,QWORD PTR [rbp-0x48]
  412a85:	mov    ecx,0x1d
  412a8a:	mov    rdi,rax
  412a8d:	call   427257 <flatcc_json_parser_set_error@@Base>
  412a92:	mov    QWORD PTR [rbp-0x50],rax
  412a96:	jmp    412c57 <_start@@Base+0xc9c7>
  412a9b:	mov    rcx,QWORD PTR [rbp-0x38]
  412a9f:	mov    rdx,QWORD PTR [rbp-0x58]
  412aa3:	mov    rsi,QWORD PTR [rbp-0x50]
  412aa7:	mov    rax,QWORD PTR [rbp-0x48]
  412aab:	mov    rdi,rax
  412aae:	call   428f23 <flatcc_json_parser_finalize_unions@@Base>
  412ab3:	mov    QWORD PTR [rbp-0x50],rax
  412ab7:	mov    rax,QWORD PTR [rbp-0x48]
  412abb:	mov    rax,QWORD PTR [rax]
  412abe:	mov    rdi,rax
  412ac1:	call   41ed42 <flatcc_builder_end_table@@Base>
  412ac6:	mov    edx,eax
  412ac8:	mov    rax,QWORD PTR [rbp-0x60]
  412acc:	mov    DWORD PTR [rax],edx
  412ace:	mov    rax,QWORD PTR [rbp-0x60]
  412ad2:	mov    eax,DWORD PTR [rax]
  412ad4:	test   eax,eax
  412ad6:	je     412c56 <_start@@Base+0xc9c6>
  412adc:	mov    rax,QWORD PTR [rbp-0x50]
  412ae0:	jmp    412c70 <_start@@Base+0xc9e0>
  412ae5:	nop
  412ae6:	jmp    412c57 <_start@@Base+0xc9c7>
  412aeb:	nop
  412aec:	jmp    412c57 <_start@@Base+0xc9c7>
  412af1:	nop
  412af2:	jmp    412c57 <_start@@Base+0xc9c7>
  412af7:	nop
  412af8:	jmp    412c57 <_start@@Base+0xc9c7>
  412afd:	nop
  412afe:	jmp    412c57 <_start@@Base+0xc9c7>
  412b03:	nop
  412b04:	jmp    412c57 <_start@@Base+0xc9c7>
  412b09:	nop
  412b0a:	jmp    412c57 <_start@@Base+0xc9c7>
  412b0f:	nop
  412b10:	jmp    412c57 <_start@@Base+0xc9c7>
  412b15:	nop
  412b16:	jmp    412c57 <_start@@Base+0xc9c7>
  412b1b:	nop
  412b1c:	jmp    412c57 <_start@@Base+0xc9c7>
  412b21:	nop
  412b22:	jmp    412c57 <_start@@Base+0xc9c7>
  412b27:	nop
  412b28:	jmp    412c57 <_start@@Base+0xc9c7>
  412b2d:	nop
  412b2e:	jmp    412c57 <_start@@Base+0xc9c7>
  412b33:	nop
  412b34:	jmp    412c57 <_start@@Base+0xc9c7>
  412b39:	nop
  412b3a:	jmp    412c57 <_start@@Base+0xc9c7>
  412b3f:	nop
  412b40:	jmp    412c57 <_start@@Base+0xc9c7>
  412b45:	nop
  412b46:	jmp    412c57 <_start@@Base+0xc9c7>
  412b4b:	nop
  412b4c:	jmp    412c57 <_start@@Base+0xc9c7>
  412b51:	nop
  412b52:	jmp    412c57 <_start@@Base+0xc9c7>
  412b57:	nop
  412b58:	jmp    412c57 <_start@@Base+0xc9c7>
  412b5d:	nop
  412b5e:	jmp    412c57 <_start@@Base+0xc9c7>
  412b63:	nop
  412b64:	jmp    412c57 <_start@@Base+0xc9c7>
  412b69:	nop
  412b6a:	jmp    412c57 <_start@@Base+0xc9c7>
  412b6f:	nop
  412b70:	jmp    412c57 <_start@@Base+0xc9c7>
  412b75:	nop
  412b76:	jmp    412c57 <_start@@Base+0xc9c7>
  412b7b:	nop
  412b7c:	jmp    412c57 <_start@@Base+0xc9c7>
  412b81:	nop
  412b82:	jmp    412c57 <_start@@Base+0xc9c7>
  412b87:	nop
  412b88:	jmp    412c57 <_start@@Base+0xc9c7>
  412b8d:	nop
  412b8e:	jmp    412c57 <_start@@Base+0xc9c7>
  412b93:	nop
  412b94:	jmp    412c57 <_start@@Base+0xc9c7>
  412b99:	nop
  412b9a:	jmp    412c57 <_start@@Base+0xc9c7>
  412b9f:	nop
  412ba0:	jmp    412c57 <_start@@Base+0xc9c7>
  412ba5:	nop
  412ba6:	jmp    412c57 <_start@@Base+0xc9c7>
  412bab:	nop
  412bac:	jmp    412c57 <_start@@Base+0xc9c7>
  412bb1:	nop
  412bb2:	jmp    412c57 <_start@@Base+0xc9c7>
  412bb7:	nop
  412bb8:	jmp    412c57 <_start@@Base+0xc9c7>
  412bbd:	nop
  412bbe:	jmp    412c57 <_start@@Base+0xc9c7>
  412bc3:	nop
  412bc4:	jmp    412c57 <_start@@Base+0xc9c7>
  412bc9:	nop
  412bca:	jmp    412c57 <_start@@Base+0xc9c7>
  412bcf:	nop
  412bd0:	jmp    412c57 <_start@@Base+0xc9c7>
  412bd5:	nop
  412bd6:	jmp    412c57 <_start@@Base+0xc9c7>
  412bd8:	nop
  412bd9:	jmp    412c57 <_start@@Base+0xc9c7>
  412bdb:	nop
  412bdc:	jmp    412c57 <_start@@Base+0xc9c7>
  412bde:	nop
  412bdf:	jmp    412c57 <_start@@Base+0xc9c7>
  412be1:	nop
  412be2:	jmp    412c57 <_start@@Base+0xc9c7>
  412be4:	nop
  412be5:	jmp    412c57 <_start@@Base+0xc9c7>
  412be7:	nop
  412be8:	jmp    412c57 <_start@@Base+0xc9c7>
  412bea:	nop
  412beb:	jmp    412c57 <_start@@Base+0xc9c7>
  412bed:	nop
  412bee:	jmp    412c57 <_start@@Base+0xc9c7>
  412bf0:	nop
  412bf1:	jmp    412c57 <_start@@Base+0xc9c7>
  412bf3:	nop
  412bf4:	jmp    412c57 <_start@@Base+0xc9c7>
  412bf6:	nop
  412bf7:	jmp    412c57 <_start@@Base+0xc9c7>
  412bf9:	nop
  412bfa:	jmp    412c57 <_start@@Base+0xc9c7>
  412bfc:	nop
  412bfd:	jmp    412c57 <_start@@Base+0xc9c7>
  412bff:	nop
  412c00:	jmp    412c57 <_start@@Base+0xc9c7>
  412c02:	nop
  412c03:	jmp    412c57 <_start@@Base+0xc9c7>
  412c05:	nop
  412c06:	jmp    412c57 <_start@@Base+0xc9c7>
  412c08:	nop
  412c09:	jmp    412c57 <_start@@Base+0xc9c7>
  412c0b:	nop
  412c0c:	jmp    412c57 <_start@@Base+0xc9c7>
  412c0e:	nop
  412c0f:	jmp    412c57 <_start@@Base+0xc9c7>
  412c11:	nop
  412c12:	jmp    412c57 <_start@@Base+0xc9c7>
  412c14:	nop
  412c15:	jmp    412c57 <_start@@Base+0xc9c7>
  412c17:	nop
  412c18:	jmp    412c57 <_start@@Base+0xc9c7>
  412c1a:	nop
  412c1b:	jmp    412c57 <_start@@Base+0xc9c7>
  412c1d:	nop
  412c1e:	jmp    412c57 <_start@@Base+0xc9c7>
  412c20:	nop
  412c21:	jmp    412c57 <_start@@Base+0xc9c7>
  412c23:	nop
  412c24:	jmp    412c57 <_start@@Base+0xc9c7>
  412c26:	nop
  412c27:	jmp    412c57 <_start@@Base+0xc9c7>
  412c29:	nop
  412c2a:	jmp    412c57 <_start@@Base+0xc9c7>
  412c2c:	nop
  412c2d:	jmp    412c57 <_start@@Base+0xc9c7>
  412c2f:	nop
  412c30:	jmp    412c57 <_start@@Base+0xc9c7>
  412c32:	nop
  412c33:	jmp    412c57 <_start@@Base+0xc9c7>
  412c35:	nop
  412c36:	jmp    412c57 <_start@@Base+0xc9c7>
  412c38:	nop
  412c39:	jmp    412c57 <_start@@Base+0xc9c7>
  412c3b:	nop
  412c3c:	jmp    412c57 <_start@@Base+0xc9c7>
  412c3e:	nop
  412c3f:	jmp    412c57 <_start@@Base+0xc9c7>
  412c41:	nop
  412c42:	jmp    412c57 <_start@@Base+0xc9c7>
  412c44:	nop
  412c45:	jmp    412c57 <_start@@Base+0xc9c7>
  412c47:	nop
  412c48:	jmp    412c57 <_start@@Base+0xc9c7>
  412c4a:	nop
  412c4b:	jmp    412c57 <_start@@Base+0xc9c7>
  412c4d:	nop
  412c4e:	jmp    412c57 <_start@@Base+0xc9c7>
  412c50:	nop
  412c51:	jmp    412c57 <_start@@Base+0xc9c7>
  412c53:	nop
  412c54:	jmp    412c57 <_start@@Base+0xc9c7>
  412c56:	nop
  412c57:	mov    rdx,QWORD PTR [rbp-0x58]
  412c5b:	mov    rsi,QWORD PTR [rbp-0x50]
  412c5f:	mov    rax,QWORD PTR [rbp-0x48]
  412c63:	mov    ecx,0x21
  412c68:	mov    rdi,rax
  412c6b:	call   427257 <flatcc_json_parser_set_error@@Base>
  412c70:	mov    rdi,QWORD PTR [rbp-0x8]
  412c74:	xor    rdi,QWORD PTR fs:0x28
  412c7d:	je     412c84 <_start@@Base+0xc9f4>
  412c7f:	call   4061a0 <__stack_chk_fail@plt>
  412c84:	leave  
  412c85:	ret    
  412c86:	endbr64 
  412c8a:	push   rbp
  412c8b:	mov    rbp,rsp
  412c8e:	sub    rsp,0x60
  412c92:	mov    QWORD PTR [rbp-0x48],rdi
  412c96:	mov    QWORD PTR [rbp-0x50],rsi
  412c9a:	mov    QWORD PTR [rbp-0x58],rdx
  412c9e:	mov    QWORD PTR [rbp-0x60],rcx
  412ca2:	mov    rax,QWORD PTR fs:0x28
  412cab:	mov    QWORD PTR [rbp-0x8],rax
  412caf:	xor    eax,eax
  412cb1:	mov    rax,QWORD PTR [rbp-0x60]
  412cb5:	mov    DWORD PTR [rax],0x0
  412cbb:	mov    rax,QWORD PTR [rbp-0x48]
  412cbf:	mov    rax,QWORD PTR [rax]
  412cc2:	mov    esi,0xc
  412cc7:	mov    rdi,rax
  412cca:	call   41e233 <flatcc_builder_start_table@@Base>
  412ccf:	test   eax,eax
  412cd1:	jne    41404f <_start@@Base+0xddbf>
  412cd7:	lea    rcx,[rbp-0x38]
  412cdb:	mov    rdx,QWORD PTR [rbp-0x58]
  412cdf:	mov    rsi,QWORD PTR [rbp-0x50]
  412ce3:	mov    rax,QWORD PTR [rbp-0x48]
  412ce7:	mov    rdi,rax
  412cea:	call   406949 <_start@@Base+0x6b9>
  412cef:	mov    QWORD PTR [rbp-0x50],rax
  412cf3:	jmp    414012 <_start@@Base+0xdd82>
  412cf8:	mov    rdx,QWORD PTR [rbp-0x58]
  412cfc:	mov    rcx,QWORD PTR [rbp-0x50]
  412d00:	mov    rax,QWORD PTR [rbp-0x48]
  412d04:	mov    rsi,rcx
  412d07:	mov    rdi,rax
  412d0a:	call   4066e9 <_start@@Base+0x459>
  412d0f:	mov    QWORD PTR [rbp-0x50],rax
  412d13:	mov    rdx,QWORD PTR [rbp-0x58]
  412d17:	mov    rax,QWORD PTR [rbp-0x50]
  412d1b:	mov    rsi,rdx
  412d1e:	mov    rdi,rax
  412d21:	call   406853 <_start@@Base+0x5c3>
  412d26:	mov    QWORD PTR [rbp-0x28],rax
  412d2a:	movabs rax,0x6937ffffffffffff
  412d34:	cmp    QWORD PTR [rbp-0x28],rax
  412d38:	ja     413498 <_start@@Base+0xd208>
  412d3e:	movabs rax,0x693135ffffffffff
  412d48:	cmp    QWORD PTR [rbp-0x28],rax
  412d4c:	ja     413044 <_start@@Base+0xcdb4>
  412d52:	movabs rax,0xffffff0000000000
  412d5c:	and    rax,QWORD PTR [rbp-0x28]
  412d60:	mov    rdx,rax
  412d63:	movabs rax,0x6636340000000000
  412d6d:	cmp    rdx,rax
  412d70:	jne    412ebc <_start@@Base+0xcc2c>
  412d76:	mov    rax,QWORD PTR [rbp-0x50]
  412d7a:	mov    QWORD PTR [rbp-0x20],rax
  412d7e:	mov    rdx,QWORD PTR [rbp-0x58]
  412d82:	mov    rsi,QWORD PTR [rbp-0x20]
  412d86:	mov    rax,QWORD PTR [rbp-0x48]
  412d8a:	mov    ecx,0x3
  412d8f:	mov    rdi,rax
  412d92:	call   406d3f <_start@@Base+0xaaf>
  412d97:	mov    QWORD PTR [rbp-0x50],rax
  412d9b:	mov    rax,QWORD PTR [rbp-0x20]
  412d9f:	cmp    rax,QWORD PTR [rbp-0x50]
  412da3:	je     412e9c <_start@@Base+0xcc0c>
  412da9:	vxorpd xmm0,xmm0,xmm0
  412dad:	vmovsd QWORD PTR [rbp-0x30],xmm0
  412db2:	mov    rax,QWORD PTR [rbp-0x50]
  412db6:	mov    QWORD PTR [rbp-0x20],rax
  412dba:	lea    rcx,[rbp-0x30]
  412dbe:	mov    rdx,QWORD PTR [rbp-0x58]
  412dc2:	mov    rsi,QWORD PTR [rbp-0x20]
  412dc6:	mov    rax,QWORD PTR [rbp-0x48]
  412dca:	mov    rdi,rax
  412dcd:	call   427fd2 <flatcc_json_parser_double@@Base>
  412dd2:	mov    QWORD PTR [rbp-0x50],rax
  412dd6:	mov    rax,QWORD PTR [rbp-0x20]
  412dda:	cmp    rax,QWORD PTR [rbp-0x50]
  412dde:	jne    412e2a <_start@@Base+0xcb9a>
  412de0:	mov    rax,QWORD PTR [rbp-0x50]
  412de4:	mov    QWORD PTR [rbp-0x20],rax
  412de8:	lea    rcx,[rbp-0x30]
  412dec:	mov    rdx,QWORD PTR [rbp-0x58]
  412df0:	mov    rsi,QWORD PTR [rbp-0x20]
  412df4:	mov    rax,QWORD PTR [rbp-0x48]
  412df8:	mov    r8,rcx
  412dfb:	lea    rcx,[rip+0x3297e]        # 445780 <__data_start@@Base+0x6c0>
  412e02:	mov    rdi,rax
  412e05:	call   4088a2 <_start@@Base+0x2612>
  412e0a:	mov    QWORD PTR [rbp-0x50],rax
  412e0e:	mov    rax,QWORD PTR [rbp-0x50]
  412e12:	cmp    rax,QWORD PTR [rbp-0x20]
  412e16:	je     414052 <_start@@Base+0xddc2>
  412e1c:	mov    rax,QWORD PTR [rbp-0x50]
  412e20:	cmp    rax,QWORD PTR [rbp-0x58]
  412e24:	je     414052 <_start@@Base+0xddc2>
  412e2a:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  412e2f:	vxorpd xmm1,xmm1,xmm1
  412e33:	vucomisd xmm0,xmm1
  412e37:	jp     412e55 <_start@@Base+0xcbc5>
  412e39:	vxorpd xmm1,xmm1,xmm1
  412e3d:	vucomisd xmm0,xmm1
  412e41:	jne    412e55 <_start@@Base+0xcbc5>
  412e43:	mov    rax,QWORD PTR [rbp-0x48]
  412e47:	mov    eax,DWORD PTR [rax+0x10]
  412e4a:	and    eax,0x2
  412e4d:	test   eax,eax
  412e4f:	je     413ff6 <_start@@Base+0xdd66>
  412e55:	mov    rax,QWORD PTR [rbp-0x48]
  412e59:	mov    rax,QWORD PTR [rax]
  412e5c:	mov    ecx,0x8
  412e61:	mov    edx,0x8
  412e66:	mov    esi,0x9
  412e6b:	mov    rdi,rax
  412e6e:	call   4203e3 <flatcc_builder_table_add@@Base>
  412e73:	mov    QWORD PTR [rbp-0x18],rax
  412e77:	cmp    QWORD PTR [rbp-0x18],0x0
  412e7c:	je     414055 <_start@@Base+0xddc5>
  412e82:	mov    rdx,QWORD PTR [rbp-0x30]
  412e86:	mov    rax,QWORD PTR [rbp-0x18]
  412e8a:	vmovq  xmm0,rdx
  412e8f:	mov    rdi,rax
  412e92:	call   406594 <_start@@Base+0x304>
  412e97:	jmp    413ff6 <_start@@Base+0xdd66>
  412e9c:	mov    rdx,QWORD PTR [rbp-0x58]
  412ea0:	mov    rcx,QWORD PTR [rbp-0x50]
  412ea4:	mov    rax,QWORD PTR [rbp-0x48]
  412ea8:	mov    rsi,rcx
  412eab:	mov    rdi,rax
  412eae:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  412eb3:	mov    QWORD PTR [rbp-0x50],rax
  412eb7:	jmp    413ff6 <_start@@Base+0xdd66>
  412ebc:	movabs rax,0xffffff0000000000
  412ec6:	and    rax,QWORD PTR [rbp-0x28]
  412eca:	mov    rdx,rax
  412ecd:	movabs rax,0x6633320000000000
  412ed7:	cmp    rdx,rax
  412eda:	jne    413024 <_start@@Base+0xcd94>
  412ee0:	mov    rax,QWORD PTR [rbp-0x50]
  412ee4:	mov    QWORD PTR [rbp-0x20],rax
  412ee8:	mov    rdx,QWORD PTR [rbp-0x58]
  412eec:	mov    rsi,QWORD PTR [rbp-0x20]
  412ef0:	mov    rax,QWORD PTR [rbp-0x48]
  412ef4:	mov    ecx,0x3
  412ef9:	mov    rdi,rax
  412efc:	call   406d3f <_start@@Base+0xaaf>
  412f01:	mov    QWORD PTR [rbp-0x50],rax
  412f05:	mov    rax,QWORD PTR [rbp-0x20]
  412f09:	cmp    rax,QWORD PTR [rbp-0x50]
  412f0d:	je     413004 <_start@@Base+0xcd74>
  412f13:	vxorps xmm0,xmm0,xmm0
  412f17:	vmovss DWORD PTR [rbp-0x30],xmm0
  412f1c:	mov    rax,QWORD PTR [rbp-0x50]
  412f20:	mov    QWORD PTR [rbp-0x20],rax
  412f24:	lea    rcx,[rbp-0x30]
  412f28:	mov    rdx,QWORD PTR [rbp-0x58]
  412f2c:	mov    rsi,QWORD PTR [rbp-0x20]
  412f30:	mov    rax,QWORD PTR [rbp-0x48]
  412f34:	mov    rdi,rax
  412f37:	call   428117 <flatcc_json_parser_float@@Base>
  412f3c:	mov    QWORD PTR [rbp-0x50],rax
  412f40:	mov    rax,QWORD PTR [rbp-0x20]
  412f44:	cmp    rax,QWORD PTR [rbp-0x50]
  412f48:	jne    412f94 <_start@@Base+0xcd04>
  412f4a:	mov    rax,QWORD PTR [rbp-0x50]
  412f4e:	mov    QWORD PTR [rbp-0x20],rax
  412f52:	lea    rcx,[rbp-0x30]
  412f56:	mov    rdx,QWORD PTR [rbp-0x58]
  412f5a:	mov    rsi,QWORD PTR [rbp-0x20]
  412f5e:	mov    rax,QWORD PTR [rbp-0x48]
  412f62:	mov    r8,rcx
  412f65:	lea    rcx,[rip+0x32834]        # 4457a0 <__data_start@@Base+0x6e0>
  412f6c:	mov    rdi,rax
  412f6f:	call   408739 <_start@@Base+0x24a9>
  412f74:	mov    QWORD PTR [rbp-0x50],rax
  412f78:	mov    rax,QWORD PTR [rbp-0x50]
  412f7c:	cmp    rax,QWORD PTR [rbp-0x20]
  412f80:	je     414058 <_start@@Base+0xddc8>
  412f86:	mov    rax,QWORD PTR [rbp-0x50]
  412f8a:	cmp    rax,QWORD PTR [rbp-0x58]
  412f8e:	je     414058 <_start@@Base+0xddc8>
  412f94:	vmovss xmm0,DWORD PTR [rbp-0x30]
  412f99:	vxorps xmm1,xmm1,xmm1
  412f9d:	vucomiss xmm0,xmm1
  412fa1:	jp     412fbf <_start@@Base+0xcd2f>
  412fa3:	vxorps xmm1,xmm1,xmm1
  412fa7:	vucomiss xmm0,xmm1
  412fab:	jne    412fbf <_start@@Base+0xcd2f>
  412fad:	mov    rax,QWORD PTR [rbp-0x48]
  412fb1:	mov    eax,DWORD PTR [rax+0x10]
  412fb4:	and    eax,0x2
  412fb7:	test   eax,eax
  412fb9:	je     413ff6 <_start@@Base+0xdd66>
  412fbf:	mov    rax,QWORD PTR [rbp-0x48]
  412fc3:	mov    rax,QWORD PTR [rax]
  412fc6:	mov    ecx,0x4
  412fcb:	mov    edx,0x4
  412fd0:	mov    esi,0x8
  412fd5:	mov    rdi,rax
  412fd8:	call   4203e3 <flatcc_builder_table_add@@Base>
  412fdd:	mov    QWORD PTR [rbp-0x18],rax
  412fe1:	cmp    QWORD PTR [rbp-0x18],0x0
  412fe6:	je     41405b <_start@@Base+0xddcb>
  412fec:	mov    edx,DWORD PTR [rbp-0x30]
  412fef:	mov    rax,QWORD PTR [rbp-0x18]
  412ff3:	vmovd  xmm0,edx
  412ff7:	mov    rdi,rax
  412ffa:	call   40653e <_start@@Base+0x2ae>
  412fff:	jmp    413ff6 <_start@@Base+0xdd66>
  413004:	mov    rdx,QWORD PTR [rbp-0x58]
  413008:	mov    rcx,QWORD PTR [rbp-0x50]
  41300c:	mov    rax,QWORD PTR [rbp-0x48]
  413010:	mov    rsi,rcx
  413013:	mov    rdi,rax
  413016:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41301b:	mov    QWORD PTR [rbp-0x50],rax
  41301f:	jmp    413ff6 <_start@@Base+0xdd66>
  413024:	mov    rdx,QWORD PTR [rbp-0x58]
  413028:	mov    rcx,QWORD PTR [rbp-0x50]
  41302c:	mov    rax,QWORD PTR [rbp-0x48]
  413030:	mov    rsi,rcx
  413033:	mov    rdi,rax
  413036:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41303b:	mov    QWORD PTR [rbp-0x50],rax
  41303f:	jmp    413ff6 <_start@@Base+0xdd66>
  413044:	movabs rax,0x693331ffffffffff
  41304e:	cmp    QWORD PTR [rbp-0x28],rax
  413052:	ja     4131cf <_start@@Base+0xcf3f>
  413058:	movabs rax,0xffffff0000000000
  413062:	and    rax,QWORD PTR [rbp-0x28]
  413066:	mov    rdx,rax
  413069:	movabs rax,0x6931360000000000
  413073:	cmp    rdx,rax
  413076:	jne    4131af <_start@@Base+0xcf1f>
  41307c:	mov    rax,QWORD PTR [rbp-0x50]
  413080:	mov    QWORD PTR [rbp-0x20],rax
  413084:	mov    rdx,QWORD PTR [rbp-0x58]
  413088:	mov    rsi,QWORD PTR [rbp-0x20]
  41308c:	mov    rax,QWORD PTR [rbp-0x48]
  413090:	mov    ecx,0x3
  413095:	mov    rdi,rax
  413098:	call   406d3f <_start@@Base+0xaaf>
  41309d:	mov    QWORD PTR [rbp-0x50],rax
  4130a1:	mov    rax,QWORD PTR [rbp-0x20]
  4130a5:	cmp    rax,QWORD PTR [rbp-0x50]
  4130a9:	je     41318f <_start@@Base+0xceff>
  4130af:	mov    WORD PTR [rbp-0x30],0x0
  4130b5:	mov    rax,QWORD PTR [rbp-0x50]
  4130b9:	mov    QWORD PTR [rbp-0x20],rax
  4130bd:	lea    rcx,[rbp-0x30]
  4130c1:	mov    rdx,QWORD PTR [rbp-0x58]
  4130c5:	mov    rsi,QWORD PTR [rbp-0x20]
  4130c9:	mov    rax,QWORD PTR [rbp-0x48]
  4130cd:	mov    rdi,rax
  4130d0:	call   407876 <_start@@Base+0x15e6>
  4130d5:	mov    QWORD PTR [rbp-0x50],rax
  4130d9:	mov    rax,QWORD PTR [rbp-0x20]
  4130dd:	cmp    rax,QWORD PTR [rbp-0x50]
  4130e1:	jne    41312d <_start@@Base+0xce9d>
  4130e3:	mov    rax,QWORD PTR [rbp-0x50]
  4130e7:	mov    QWORD PTR [rbp-0x20],rax
  4130eb:	lea    rcx,[rbp-0x30]
  4130ef:	mov    rdx,QWORD PTR [rbp-0x58]
  4130f3:	mov    rsi,QWORD PTR [rbp-0x20]
  4130f7:	mov    rax,QWORD PTR [rbp-0x48]
  4130fb:	mov    r8,rcx
  4130fe:	lea    rcx,[rip+0x326bb]        # 4457c0 <__data_start@@Base+0x700>
  413105:	mov    rdi,rax
  413108:	call   408321 <_start@@Base+0x2091>
  41310d:	mov    QWORD PTR [rbp-0x50],rax
  413111:	mov    rax,QWORD PTR [rbp-0x50]
  413115:	cmp    rax,QWORD PTR [rbp-0x20]
  413119:	je     41405e <_start@@Base+0xddce>
  41311f:	mov    rax,QWORD PTR [rbp-0x50]
  413123:	cmp    rax,QWORD PTR [rbp-0x58]
  413127:	je     41405e <_start@@Base+0xddce>
  41312d:	movzx  eax,WORD PTR [rbp-0x30]
  413131:	test   ax,ax
  413134:	jne    413148 <_start@@Base+0xceb8>
  413136:	mov    rax,QWORD PTR [rbp-0x48]
  41313a:	mov    eax,DWORD PTR [rax+0x10]
  41313d:	and    eax,0x2
  413140:	test   eax,eax
  413142:	je     413ff6 <_start@@Base+0xdd66>
  413148:	mov    rax,QWORD PTR [rbp-0x48]
  41314c:	mov    rax,QWORD PTR [rax]
  41314f:	mov    ecx,0x2
  413154:	mov    edx,0x2
  413159:	mov    esi,0x2
  41315e:	mov    rdi,rax
  413161:	call   4203e3 <flatcc_builder_table_add@@Base>
  413166:	mov    QWORD PTR [rbp-0x18],rax
  41316a:	cmp    QWORD PTR [rbp-0x18],0x0
  41316f:	je     414061 <_start@@Base+0xddd1>
  413175:	movzx  eax,WORD PTR [rbp-0x30]
  413179:	movsx  edx,ax
  41317c:	mov    rax,QWORD PTR [rbp-0x18]
  413180:	mov    esi,edx
  413182:	mov    rdi,rax
  413185:	call   40648e <_start@@Base+0x1fe>
  41318a:	jmp    413ff6 <_start@@Base+0xdd66>
  41318f:	mov    rdx,QWORD PTR [rbp-0x58]
  413193:	mov    rcx,QWORD PTR [rbp-0x50]
  413197:	mov    rax,QWORD PTR [rbp-0x48]
  41319b:	mov    rsi,rcx
  41319e:	mov    rdi,rax
  4131a1:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4131a6:	mov    QWORD PTR [rbp-0x50],rax
  4131aa:	jmp    413ff6 <_start@@Base+0xdd66>
  4131af:	mov    rdx,QWORD PTR [rbp-0x58]
  4131b3:	mov    rcx,QWORD PTR [rbp-0x50]
  4131b7:	mov    rax,QWORD PTR [rbp-0x48]
  4131bb:	mov    rsi,rcx
  4131be:	mov    rdi,rax
  4131c1:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4131c6:	mov    QWORD PTR [rbp-0x50],rax
  4131ca:	jmp    413ff6 <_start@@Base+0xdd66>
  4131cf:	movabs rax,0xffffff0000000000
  4131d9:	and    rax,QWORD PTR [rbp-0x28]
  4131dd:	mov    rdx,rax
  4131e0:	movabs rax,0x6936340000000000
  4131ea:	cmp    rdx,rax
  4131ed:	jne    413326 <_start@@Base+0xd096>
  4131f3:	mov    rax,QWORD PTR [rbp-0x50]
  4131f7:	mov    QWORD PTR [rbp-0x20],rax
  4131fb:	mov    rdx,QWORD PTR [rbp-0x58]
  4131ff:	mov    rsi,QWORD PTR [rbp-0x20]
  413203:	mov    rax,QWORD PTR [rbp-0x48]
  413207:	mov    ecx,0x3
  41320c:	mov    rdi,rax
  41320f:	call   406d3f <_start@@Base+0xaaf>
  413214:	mov    QWORD PTR [rbp-0x50],rax
  413218:	mov    rax,QWORD PTR [rbp-0x20]
  41321c:	cmp    rax,QWORD PTR [rbp-0x50]
  413220:	je     413306 <_start@@Base+0xd076>
  413226:	mov    QWORD PTR [rbp-0x30],0x0
  41322e:	mov    rax,QWORD PTR [rbp-0x50]
  413232:	mov    QWORD PTR [rbp-0x20],rax
  413236:	lea    rcx,[rbp-0x30]
  41323a:	mov    rdx,QWORD PTR [rbp-0x58]
  41323e:	mov    rsi,QWORD PTR [rbp-0x20]
  413242:	mov    rax,QWORD PTR [rbp-0x48]
  413246:	mov    rdi,rax
  413249:	call   4076e9 <_start@@Base+0x1459>
  41324e:	mov    QWORD PTR [rbp-0x50],rax
  413252:	mov    rax,QWORD PTR [rbp-0x20]
  413256:	cmp    rax,QWORD PTR [rbp-0x50]
  41325a:	jne    4132a6 <_start@@Base+0xd016>
  41325c:	mov    rax,QWORD PTR [rbp-0x50]
  413260:	mov    QWORD PTR [rbp-0x20],rax
  413264:	lea    rcx,[rbp-0x30]
  413268:	mov    rdx,QWORD PTR [rbp-0x58]
  41326c:	mov    rsi,QWORD PTR [rbp-0x20]
  413270:	mov    rax,QWORD PTR [rbp-0x48]
  413274:	mov    r8,rcx
  413277:	lea    rcx,[rip+0x32562]        # 4457e0 <__data_start@@Base+0x720>
  41327e:	mov    rdi,rax
  413281:	call   408061 <_start@@Base+0x1dd1>
  413286:	mov    QWORD PTR [rbp-0x50],rax
  41328a:	mov    rax,QWORD PTR [rbp-0x50]
  41328e:	cmp    rax,QWORD PTR [rbp-0x20]
  413292:	je     414064 <_start@@Base+0xddd4>
  413298:	mov    rax,QWORD PTR [rbp-0x50]
  41329c:	cmp    rax,QWORD PTR [rbp-0x58]
  4132a0:	je     414064 <_start@@Base+0xddd4>
  4132a6:	mov    rax,QWORD PTR [rbp-0x30]
  4132aa:	test   rax,rax
  4132ad:	jne    4132c1 <_start@@Base+0xd031>
  4132af:	mov    rax,QWORD PTR [rbp-0x48]
  4132b3:	mov    eax,DWORD PTR [rax+0x10]
  4132b6:	and    eax,0x2
  4132b9:	test   eax,eax
  4132bb:	je     413ff6 <_start@@Base+0xdd66>
  4132c1:	mov    rax,QWORD PTR [rbp-0x48]
  4132c5:	mov    rax,QWORD PTR [rax]
  4132c8:	mov    ecx,0x8
  4132cd:	mov    edx,0x8
  4132d2:	mov    esi,0x6
  4132d7:	mov    rdi,rax
  4132da:	call   4203e3 <flatcc_builder_table_add@@Base>
  4132df:	mov    QWORD PTR [rbp-0x18],rax
  4132e3:	cmp    QWORD PTR [rbp-0x18],0x0
  4132e8:	je     414067 <_start@@Base+0xddd7>
  4132ee:	mov    rdx,QWORD PTR [rbp-0x30]
  4132f2:	mov    rax,QWORD PTR [rbp-0x18]
  4132f6:	mov    rsi,rdx
  4132f9:	mov    rdi,rax
  4132fc:	call   4064f5 <_start@@Base+0x265>
  413301:	jmp    413ff6 <_start@@Base+0xdd66>
  413306:	mov    rdx,QWORD PTR [rbp-0x58]
  41330a:	mov    rcx,QWORD PTR [rbp-0x50]
  41330e:	mov    rax,QWORD PTR [rbp-0x48]
  413312:	mov    rsi,rcx
  413315:	mov    rdi,rax
  413318:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41331d:	mov    QWORD PTR [rbp-0x50],rax
  413321:	jmp    413ff6 <_start@@Base+0xdd66>
  413326:	movabs rax,0xffffff0000000000
  413330:	and    rax,QWORD PTR [rbp-0x28]
  413334:	mov    rdx,rax
  413337:	movabs rax,0x6933320000000000
  413341:	cmp    rdx,rax
  413344:	jne    413478 <_start@@Base+0xd1e8>
  41334a:	mov    rax,QWORD PTR [rbp-0x50]
  41334e:	mov    QWORD PTR [rbp-0x20],rax
  413352:	mov    rdx,QWORD PTR [rbp-0x58]
  413356:	mov    rsi,QWORD PTR [rbp-0x20]
  41335a:	mov    rax,QWORD PTR [rbp-0x48]
  41335e:	mov    ecx,0x3
  413363:	mov    rdi,rax
  413366:	call   406d3f <_start@@Base+0xaaf>
  41336b:	mov    QWORD PTR [rbp-0x50],rax
  41336f:	mov    rax,QWORD PTR [rbp-0x20]
  413373:	cmp    rax,QWORD PTR [rbp-0x50]
  413377:	je     413458 <_start@@Base+0xd1c8>
  41337d:	mov    DWORD PTR [rbp-0x30],0x0
  413384:	mov    rax,QWORD PTR [rbp-0x50]
  413388:	mov    QWORD PTR [rbp-0x20],rax
  41338c:	lea    rcx,[rbp-0x30]
  413390:	mov    rdx,QWORD PTR [rbp-0x58]
  413394:	mov    rsi,QWORD PTR [rbp-0x20]
  413398:	mov    rax,QWORD PTR [rbp-0x48]
  41339c:	mov    rdi,rax
  41339f:	call   4077b0 <_start@@Base+0x1520>
  4133a4:	mov    QWORD PTR [rbp-0x50],rax
  4133a8:	mov    rax,QWORD PTR [rbp-0x20]
  4133ac:	cmp    rax,QWORD PTR [rbp-0x50]
  4133b0:	jne    4133fc <_start@@Base+0xd16c>
  4133b2:	mov    rax,QWORD PTR [rbp-0x50]
  4133b6:	mov    QWORD PTR [rbp-0x20],rax
  4133ba:	lea    rcx,[rbp-0x30]
  4133be:	mov    rdx,QWORD PTR [rbp-0x58]
  4133c2:	mov    rsi,QWORD PTR [rbp-0x20]
  4133c6:	mov    rax,QWORD PTR [rbp-0x48]
  4133ca:	mov    r8,rcx
  4133cd:	lea    rcx,[rip+0x3242c]        # 445800 <__data_start@@Base+0x740>
  4133d4:	mov    rdi,rax
  4133d7:	call   4081c4 <_start@@Base+0x1f34>
  4133dc:	mov    QWORD PTR [rbp-0x50],rax
  4133e0:	mov    rax,QWORD PTR [rbp-0x50]
  4133e4:	cmp    rax,QWORD PTR [rbp-0x20]
  4133e8:	je     41406a <_start@@Base+0xddda>
  4133ee:	mov    rax,QWORD PTR [rbp-0x50]
  4133f2:	cmp    rax,QWORD PTR [rbp-0x58]
  4133f6:	je     41406a <_start@@Base+0xddda>
  4133fc:	mov    eax,DWORD PTR [rbp-0x30]
  4133ff:	test   eax,eax
  413401:	jne    413415 <_start@@Base+0xd185>
  413403:	mov    rax,QWORD PTR [rbp-0x48]
  413407:	mov    eax,DWORD PTR [rax+0x10]
  41340a:	and    eax,0x2
  41340d:	test   eax,eax
  41340f:	je     413ff6 <_start@@Base+0xdd66>
  413415:	mov    rax,QWORD PTR [rbp-0x48]
  413419:	mov    rax,QWORD PTR [rax]
  41341c:	mov    ecx,0x4
  413421:	mov    edx,0x4
  413426:	mov    esi,0x4
  41342b:	mov    rdi,rax
  41342e:	call   4203e3 <flatcc_builder_table_add@@Base>
  413433:	mov    QWORD PTR [rbp-0x18],rax
  413437:	cmp    QWORD PTR [rbp-0x18],0x0
  41343c:	je     41406d <_start@@Base+0xdddd>
  413442:	mov    edx,DWORD PTR [rbp-0x30]
  413445:	mov    rax,QWORD PTR [rbp-0x18]
  413449:	mov    esi,edx
  41344b:	mov    rdi,rax
  41344e:	call   4064c3 <_start@@Base+0x233>
  413453:	jmp    413ff6 <_start@@Base+0xdd66>
  413458:	mov    rdx,QWORD PTR [rbp-0x58]
  41345c:	mov    rcx,QWORD PTR [rbp-0x50]
  413460:	mov    rax,QWORD PTR [rbp-0x48]
  413464:	mov    rsi,rcx
  413467:	mov    rdi,rax
  41346a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41346f:	mov    QWORD PTR [rbp-0x50],rax
  413473:	jmp    413ff6 <_start@@Base+0xdd66>
  413478:	mov    rdx,QWORD PTR [rbp-0x58]
  41347c:	mov    rcx,QWORD PTR [rbp-0x50]
  413480:	mov    rax,QWORD PTR [rbp-0x48]
  413484:	mov    rsi,rcx
  413487:	mov    rdi,rax
  41348a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41348f:	mov    QWORD PTR [rbp-0x50],rax
  413493:	jmp    413ff6 <_start@@Base+0xdd66>
  413498:	movabs rax,0x753633ffffffffff
  4134a2:	cmp    QWORD PTR [rbp-0x28],rax
  4134a6:	ja     4138fd <_start@@Base+0xd66d>
  4134ac:	movabs rax,0x753135ffffffffff
  4134b6:	cmp    QWORD PTR [rbp-0x28],rax
  4134ba:	ja     413634 <_start@@Base+0xd3a4>
  4134c0:	movabs rax,0xffff000000000000
  4134ca:	and    rax,QWORD PTR [rbp-0x28]
  4134ce:	mov    rdx,rax
  4134d1:	movabs rax,0x6938000000000000
  4134db:	cmp    rdx,rax
  4134de:	jne    413614 <_start@@Base+0xd384>
  4134e4:	mov    rax,QWORD PTR [rbp-0x50]
  4134e8:	mov    QWORD PTR [rbp-0x20],rax
  4134ec:	mov    rdx,QWORD PTR [rbp-0x58]
  4134f0:	mov    rsi,QWORD PTR [rbp-0x20]
  4134f4:	mov    rax,QWORD PTR [rbp-0x48]
  4134f8:	mov    ecx,0x2
  4134fd:	mov    rdi,rax
  413500:	call   406d3f <_start@@Base+0xaaf>
  413505:	mov    QWORD PTR [rbp-0x50],rax
  413509:	mov    rax,QWORD PTR [rbp-0x20]
  41350d:	cmp    rax,QWORD PTR [rbp-0x50]
  413511:	je     4135f4 <_start@@Base+0xd364>
  413517:	mov    BYTE PTR [rbp-0x30],0x0
  41351b:	mov    rax,QWORD PTR [rbp-0x50]
  41351f:	mov    QWORD PTR [rbp-0x20],rax
  413523:	lea    rcx,[rbp-0x30]
  413527:	mov    rdx,QWORD PTR [rbp-0x58]
  41352b:	mov    rsi,QWORD PTR [rbp-0x20]
  41352f:	mov    rax,QWORD PTR [rbp-0x48]
  413533:	mov    rdi,rax
  413536:	call   40793b <_start@@Base+0x16ab>
  41353b:	mov    QWORD PTR [rbp-0x50],rax
  41353f:	mov    rax,QWORD PTR [rbp-0x20]
  413543:	cmp    rax,QWORD PTR [rbp-0x50]
  413547:	jne    413593 <_start@@Base+0xd303>
  413549:	mov    rax,QWORD PTR [rbp-0x50]
  41354d:	mov    QWORD PTR [rbp-0x20],rax
  413551:	lea    rcx,[rbp-0x30]
  413555:	mov    rdx,QWORD PTR [rbp-0x58]
  413559:	mov    rsi,QWORD PTR [rbp-0x20]
  41355d:	mov    rax,QWORD PTR [rbp-0x48]
  413561:	mov    r8,rcx
  413564:	lea    rcx,[rip+0x322b5]        # 445820 <__data_start@@Base+0x760>
  41356b:	mov    rdi,rax
  41356e:	call   408483 <_start@@Base+0x21f3>
  413573:	mov    QWORD PTR [rbp-0x50],rax
  413577:	mov    rax,QWORD PTR [rbp-0x50]
  41357b:	cmp    rax,QWORD PTR [rbp-0x20]
  41357f:	je     414070 <_start@@Base+0xdde0>
  413585:	mov    rax,QWORD PTR [rbp-0x50]
  413589:	cmp    rax,QWORD PTR [rbp-0x58]
  41358d:	je     414070 <_start@@Base+0xdde0>
  413593:	movzx  eax,BYTE PTR [rbp-0x30]
  413597:	test   al,al
  413599:	jne    4135ad <_start@@Base+0xd31d>
  41359b:	mov    rax,QWORD PTR [rbp-0x48]
  41359f:	mov    eax,DWORD PTR [rax+0x10]
  4135a2:	and    eax,0x2
  4135a5:	test   eax,eax
  4135a7:	je     413ff6 <_start@@Base+0xdd66>
  4135ad:	mov    rax,QWORD PTR [rbp-0x48]
  4135b1:	mov    rax,QWORD PTR [rax]
  4135b4:	mov    ecx,0x1
  4135b9:	mov    edx,0x1
  4135be:	mov    esi,0x0
  4135c3:	mov    rdi,rax
  4135c6:	call   4203e3 <flatcc_builder_table_add@@Base>
  4135cb:	mov    QWORD PTR [rbp-0x18],rax
  4135cf:	cmp    QWORD PTR [rbp-0x18],0x0
  4135d4:	je     414073 <_start@@Base+0xdde3>
  4135da:	movzx  eax,BYTE PTR [rbp-0x30]
  4135de:	movsx  edx,al
  4135e1:	mov    rax,QWORD PTR [rbp-0x18]
  4135e5:	mov    esi,edx
  4135e7:	mov    rdi,rax
  4135ea:	call   406459 <_start@@Base+0x1c9>
  4135ef:	jmp    413ff6 <_start@@Base+0xdd66>
  4135f4:	mov    rdx,QWORD PTR [rbp-0x58]
  4135f8:	mov    rcx,QWORD PTR [rbp-0x50]
  4135fc:	mov    rax,QWORD PTR [rbp-0x48]
  413600:	mov    rsi,rcx
  413603:	mov    rdi,rax
  413606:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41360b:	mov    QWORD PTR [rbp-0x50],rax
  41360f:	jmp    413ff6 <_start@@Base+0xdd66>
  413614:	mov    rdx,QWORD PTR [rbp-0x58]
  413618:	mov    rcx,QWORD PTR [rbp-0x50]
  41361c:	mov    rax,QWORD PTR [rbp-0x48]
  413620:	mov    rsi,rcx
  413623:	mov    rdi,rax
  413626:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41362b:	mov    QWORD PTR [rbp-0x50],rax
  41362f:	jmp    413ff6 <_start@@Base+0xdd66>
  413634:	movabs rax,0xffffff0000000000
  41363e:	and    rax,QWORD PTR [rbp-0x28]
  413642:	mov    rdx,rax
  413645:	movabs rax,0x7533320000000000
  41364f:	cmp    rdx,rax
  413652:	jne    413786 <_start@@Base+0xd4f6>
  413658:	mov    rax,QWORD PTR [rbp-0x50]
  41365c:	mov    QWORD PTR [rbp-0x20],rax
  413660:	mov    rdx,QWORD PTR [rbp-0x58]
  413664:	mov    rsi,QWORD PTR [rbp-0x20]
  413668:	mov    rax,QWORD PTR [rbp-0x48]
  41366c:	mov    ecx,0x3
  413671:	mov    rdi,rax
  413674:	call   406d3f <_start@@Base+0xaaf>
  413679:	mov    QWORD PTR [rbp-0x50],rax
  41367d:	mov    rax,QWORD PTR [rbp-0x20]
  413681:	cmp    rax,QWORD PTR [rbp-0x50]
  413685:	je     413766 <_start@@Base+0xd4d6>
  41368b:	mov    DWORD PTR [rbp-0x30],0x0
  413692:	mov    rax,QWORD PTR [rbp-0x50]
  413696:	mov    QWORD PTR [rbp-0x20],rax
  41369a:	lea    rcx,[rbp-0x30]
  41369e:	mov    rdx,QWORD PTR [rbp-0x58]
  4136a2:	mov    rsi,QWORD PTR [rbp-0x20]
  4136a6:	mov    rax,QWORD PTR [rbp-0x48]
  4136aa:	mov    rdi,rax
  4136ad:	call   40749b <_start@@Base+0x120b>
  4136b2:	mov    QWORD PTR [rbp-0x50],rax
  4136b6:	mov    rax,QWORD PTR [rbp-0x20]
  4136ba:	cmp    rax,QWORD PTR [rbp-0x50]
  4136be:	jne    41370a <_start@@Base+0xd47a>
  4136c0:	mov    rax,QWORD PTR [rbp-0x50]
  4136c4:	mov    QWORD PTR [rbp-0x20],rax
  4136c8:	lea    rcx,[rbp-0x30]
  4136cc:	mov    rdx,QWORD PTR [rbp-0x58]
  4136d0:	mov    rsi,QWORD PTR [rbp-0x20]
  4136d4:	mov    rax,QWORD PTR [rbp-0x48]
  4136d8:	mov    r8,rcx
  4136db:	lea    rcx,[rip+0x3215e]        # 445840 <__data_start@@Base+0x780>
  4136e2:	mov    rdi,rax
  4136e5:	call   407c4d <_start@@Base+0x19bd>
  4136ea:	mov    QWORD PTR [rbp-0x50],rax
  4136ee:	mov    rax,QWORD PTR [rbp-0x50]
  4136f2:	cmp    rax,QWORD PTR [rbp-0x20]
  4136f6:	je     414076 <_start@@Base+0xdde6>
  4136fc:	mov    rax,QWORD PTR [rbp-0x50]
  413700:	cmp    rax,QWORD PTR [rbp-0x58]
  413704:	je     414076 <_start@@Base+0xdde6>
  41370a:	mov    eax,DWORD PTR [rbp-0x30]
  41370d:	test   eax,eax
  41370f:	jne    413723 <_start@@Base+0xd493>
  413711:	mov    rax,QWORD PTR [rbp-0x48]
  413715:	mov    eax,DWORD PTR [rax+0x10]
  413718:	and    eax,0x2
  41371b:	test   eax,eax
  41371d:	je     413ff6 <_start@@Base+0xdd66>
  413723:	mov    rax,QWORD PTR [rbp-0x48]
  413727:	mov    rax,QWORD PTR [rax]
  41372a:	mov    ecx,0x4
  41372f:	mov    edx,0x4
  413734:	mov    esi,0x5
  413739:	mov    rdi,rax
  41373c:	call   4203e3 <flatcc_builder_table_add@@Base>
  413741:	mov    QWORD PTR [rbp-0x18],rax
  413745:	cmp    QWORD PTR [rbp-0x18],0x0
  41374a:	je     414079 <_start@@Base+0xdde9>
  413750:	mov    edx,DWORD PTR [rbp-0x30]
  413753:	mov    rax,QWORD PTR [rbp-0x18]
  413757:	mov    esi,edx
  413759:	mov    rdi,rax
  41375c:	call   4063ef <_start@@Base+0x15f>
  413761:	jmp    413ff6 <_start@@Base+0xdd66>
  413766:	mov    rdx,QWORD PTR [rbp-0x58]
  41376a:	mov    rcx,QWORD PTR [rbp-0x50]
  41376e:	mov    rax,QWORD PTR [rbp-0x48]
  413772:	mov    rsi,rcx
  413775:	mov    rdi,rax
  413778:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41377d:	mov    QWORD PTR [rbp-0x50],rax
  413781:	jmp    413ff6 <_start@@Base+0xdd66>
  413786:	movabs rax,0xffffff0000000000
  413790:	and    rax,QWORD PTR [rbp-0x28]
  413794:	mov    rdx,rax
  413797:	movabs rax,0x7531360000000000
  4137a1:	cmp    rdx,rax
  4137a4:	jne    4138dd <_start@@Base+0xd64d>
  4137aa:	mov    rax,QWORD PTR [rbp-0x50]
  4137ae:	mov    QWORD PTR [rbp-0x20],rax
  4137b2:	mov    rdx,QWORD PTR [rbp-0x58]
  4137b6:	mov    rsi,QWORD PTR [rbp-0x20]
  4137ba:	mov    rax,QWORD PTR [rbp-0x48]
  4137be:	mov    ecx,0x3
  4137c3:	mov    rdi,rax
  4137c6:	call   406d3f <_start@@Base+0xaaf>
  4137cb:	mov    QWORD PTR [rbp-0x50],rax
  4137cf:	mov    rax,QWORD PTR [rbp-0x20]
  4137d3:	cmp    rax,QWORD PTR [rbp-0x50]
  4137d7:	je     4138bd <_start@@Base+0xd62d>
  4137dd:	mov    WORD PTR [rbp-0x30],0x0
  4137e3:	mov    rax,QWORD PTR [rbp-0x50]
  4137e7:	mov    QWORD PTR [rbp-0x20],rax
  4137eb:	lea    rcx,[rbp-0x30]
  4137ef:	mov    rdx,QWORD PTR [rbp-0x58]
  4137f3:	mov    rsi,QWORD PTR [rbp-0x20]
  4137f7:	mov    rax,QWORD PTR [rbp-0x48]
  4137fb:	mov    rdi,rax
  4137fe:	call   407561 <_start@@Base+0x12d1>
  413803:	mov    QWORD PTR [rbp-0x50],rax
  413807:	mov    rax,QWORD PTR [rbp-0x20]
  41380b:	cmp    rax,QWORD PTR [rbp-0x50]
  41380f:	jne    41385b <_start@@Base+0xd5cb>
  413811:	mov    rax,QWORD PTR [rbp-0x50]
  413815:	mov    QWORD PTR [rbp-0x20],rax
  413819:	lea    rcx,[rbp-0x30]
  41381d:	mov    rdx,QWORD PTR [rbp-0x58]
  413821:	mov    rsi,QWORD PTR [rbp-0x20]
  413825:	mov    rax,QWORD PTR [rbp-0x48]
  413829:	mov    r8,rcx
  41382c:	lea    rcx,[rip+0x3202d]        # 445860 <__data_start@@Base+0x7a0>
  413833:	mov    rdi,rax
  413836:	call   407daa <_start@@Base+0x1b1a>
  41383b:	mov    QWORD PTR [rbp-0x50],rax
  41383f:	mov    rax,QWORD PTR [rbp-0x50]
  413843:	cmp    rax,QWORD PTR [rbp-0x20]
  413847:	je     41407c <_start@@Base+0xddec>
  41384d:	mov    rax,QWORD PTR [rbp-0x50]
  413851:	cmp    rax,QWORD PTR [rbp-0x58]
  413855:	je     41407c <_start@@Base+0xddec>
  41385b:	movzx  eax,WORD PTR [rbp-0x30]
  41385f:	test   ax,ax
  413862:	jne    413876 <_start@@Base+0xd5e6>
  413864:	mov    rax,QWORD PTR [rbp-0x48]
  413868:	mov    eax,DWORD PTR [rax+0x10]
  41386b:	and    eax,0x2
  41386e:	test   eax,eax
  413870:	je     413ff6 <_start@@Base+0xdd66>
  413876:	mov    rax,QWORD PTR [rbp-0x48]
  41387a:	mov    rax,QWORD PTR [rax]
  41387d:	mov    ecx,0x2
  413882:	mov    edx,0x2
  413887:	mov    esi,0x3
  41388c:	mov    rdi,rax
  41388f:	call   4203e3 <flatcc_builder_table_add@@Base>
  413894:	mov    QWORD PTR [rbp-0x18],rax
  413898:	cmp    QWORD PTR [rbp-0x18],0x0
  41389d:	je     41407f <_start@@Base+0xddef>
  4138a3:	movzx  eax,WORD PTR [rbp-0x30]
  4138a7:	movzx  edx,ax
  4138aa:	mov    rax,QWORD PTR [rbp-0x18]
  4138ae:	mov    esi,edx
  4138b0:	mov    rdi,rax
  4138b3:	call   4063ba <_start@@Base+0x12a>
  4138b8:	jmp    413ff6 <_start@@Base+0xdd66>
  4138bd:	mov    rdx,QWORD PTR [rbp-0x58]
  4138c1:	mov    rcx,QWORD PTR [rbp-0x50]
  4138c5:	mov    rax,QWORD PTR [rbp-0x48]
  4138c9:	mov    rsi,rcx
  4138cc:	mov    rdi,rax
  4138cf:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4138d4:	mov    QWORD PTR [rbp-0x50],rax
  4138d8:	jmp    413ff6 <_start@@Base+0xdd66>
  4138dd:	mov    rdx,QWORD PTR [rbp-0x58]
  4138e1:	mov    rcx,QWORD PTR [rbp-0x50]
  4138e5:	mov    rax,QWORD PTR [rbp-0x48]
  4138e9:	mov    rsi,rcx
  4138ec:	mov    rdi,rax
  4138ef:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4138f4:	mov    QWORD PTR [rbp-0x50],rax
  4138f8:	jmp    413ff6 <_start@@Base+0xdd66>
  4138fd:	movabs rax,0x7537ffffffffffff
  413907:	cmp    QWORD PTR [rbp-0x28],rax
  41390b:	ja     413a88 <_start@@Base+0xd7f8>
  413911:	movabs rax,0xffffff0000000000
  41391b:	and    rax,QWORD PTR [rbp-0x28]
  41391f:	mov    rdx,rax
  413922:	movabs rax,0x7536340000000000
  41392c:	cmp    rdx,rax
  41392f:	jne    413a68 <_start@@Base+0xd7d8>
  413935:	mov    rax,QWORD PTR [rbp-0x50]
  413939:	mov    QWORD PTR [rbp-0x20],rax
  41393d:	mov    rdx,QWORD PTR [rbp-0x58]
  413941:	mov    rsi,QWORD PTR [rbp-0x20]
  413945:	mov    rax,QWORD PTR [rbp-0x48]
  413949:	mov    ecx,0x3
  41394e:	mov    rdi,rax
  413951:	call   406d3f <_start@@Base+0xaaf>
  413956:	mov    QWORD PTR [rbp-0x50],rax
  41395a:	mov    rax,QWORD PTR [rbp-0x20]
  41395e:	cmp    rax,QWORD PTR [rbp-0x50]
  413962:	je     413a48 <_start@@Base+0xd7b8>
  413968:	mov    QWORD PTR [rbp-0x30],0x0
  413970:	mov    rax,QWORD PTR [rbp-0x50]
  413974:	mov    QWORD PTR [rbp-0x20],rax
  413978:	lea    rcx,[rbp-0x30]
  41397c:	mov    rdx,QWORD PTR [rbp-0x58]
  413980:	mov    rsi,QWORD PTR [rbp-0x20]
  413984:	mov    rax,QWORD PTR [rbp-0x48]
  413988:	mov    rdi,rax
  41398b:	call   4073d4 <_start@@Base+0x1144>
  413990:	mov    QWORD PTR [rbp-0x50],rax
  413994:	mov    rax,QWORD PTR [rbp-0x20]
  413998:	cmp    rax,QWORD PTR [rbp-0x50]
  41399c:	jne    4139e8 <_start@@Base+0xd758>
  41399e:	mov    rax,QWORD PTR [rbp-0x50]
  4139a2:	mov    QWORD PTR [rbp-0x20],rax
  4139a6:	lea    rcx,[rbp-0x30]
  4139aa:	mov    rdx,QWORD PTR [rbp-0x58]
  4139ae:	mov    rsi,QWORD PTR [rbp-0x20]
  4139b2:	mov    rax,QWORD PTR [rbp-0x48]
  4139b6:	mov    r8,rcx
  4139b9:	lea    rcx,[rip+0x31ec0]        # 445880 <__data_start@@Base+0x7c0>
  4139c0:	mov    rdi,rax
  4139c3:	call   407aea <_start@@Base+0x185a>
  4139c8:	mov    QWORD PTR [rbp-0x50],rax
  4139cc:	mov    rax,QWORD PTR [rbp-0x50]
  4139d0:	cmp    rax,QWORD PTR [rbp-0x20]
  4139d4:	je     414082 <_start@@Base+0xddf2>
  4139da:	mov    rax,QWORD PTR [rbp-0x50]
  4139de:	cmp    rax,QWORD PTR [rbp-0x58]
  4139e2:	je     414082 <_start@@Base+0xddf2>
  4139e8:	mov    rax,QWORD PTR [rbp-0x30]
  4139ec:	test   rax,rax
  4139ef:	jne    413a03 <_start@@Base+0xd773>
  4139f1:	mov    rax,QWORD PTR [rbp-0x48]
  4139f5:	mov    eax,DWORD PTR [rax+0x10]
  4139f8:	and    eax,0x2
  4139fb:	test   eax,eax
  4139fd:	je     413ff6 <_start@@Base+0xdd66>
  413a03:	mov    rax,QWORD PTR [rbp-0x48]
  413a07:	mov    rax,QWORD PTR [rax]
  413a0a:	mov    ecx,0x8
  413a0f:	mov    edx,0x8
  413a14:	mov    esi,0x7
  413a19:	mov    rdi,rax
  413a1c:	call   4203e3 <flatcc_builder_table_add@@Base>
  413a21:	mov    QWORD PTR [rbp-0x18],rax
  413a25:	cmp    QWORD PTR [rbp-0x18],0x0
  413a2a:	je     414085 <_start@@Base+0xddf5>
  413a30:	mov    rdx,QWORD PTR [rbp-0x30]
  413a34:	mov    rax,QWORD PTR [rbp-0x18]
  413a38:	mov    rsi,rdx
  413a3b:	mov    rdi,rax
  413a3e:	call   406421 <_start@@Base+0x191>
  413a43:	jmp    413ff6 <_start@@Base+0xdd66>
  413a48:	mov    rdx,QWORD PTR [rbp-0x58]
  413a4c:	mov    rcx,QWORD PTR [rbp-0x50]
  413a50:	mov    rax,QWORD PTR [rbp-0x48]
  413a54:	mov    rsi,rcx
  413a57:	mov    rdi,rax
  413a5a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413a5f:	mov    QWORD PTR [rbp-0x50],rax
  413a63:	jmp    413ff6 <_start@@Base+0xdd66>
  413a68:	mov    rdx,QWORD PTR [rbp-0x58]
  413a6c:	mov    rcx,QWORD PTR [rbp-0x50]
  413a70:	mov    rax,QWORD PTR [rbp-0x48]
  413a74:	mov    rsi,rcx
  413a77:	mov    rdi,rax
  413a7a:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413a7f:	mov    QWORD PTR [rbp-0x50],rax
  413a83:	jmp    413ff6 <_start@@Base+0xdd66>
  413a88:	movabs rax,0x7637ffffffffffff
  413a92:	cmp    QWORD PTR [rbp-0x28],rax
  413a96:	ja     413c10 <_start@@Base+0xd980>
  413a9c:	movabs rax,0xffff000000000000
  413aa6:	and    rax,QWORD PTR [rbp-0x28]
  413aaa:	mov    rdx,rax
  413aad:	movabs rax,0x7538000000000000
  413ab7:	cmp    rdx,rax
  413aba:	jne    413bf0 <_start@@Base+0xd960>
  413ac0:	mov    rax,QWORD PTR [rbp-0x50]
  413ac4:	mov    QWORD PTR [rbp-0x20],rax
  413ac8:	mov    rdx,QWORD PTR [rbp-0x58]
  413acc:	mov    rsi,QWORD PTR [rbp-0x20]
  413ad0:	mov    rax,QWORD PTR [rbp-0x48]
  413ad4:	mov    ecx,0x2
  413ad9:	mov    rdi,rax
  413adc:	call   406d3f <_start@@Base+0xaaf>
  413ae1:	mov    QWORD PTR [rbp-0x50],rax
  413ae5:	mov    rax,QWORD PTR [rbp-0x20]
  413ae9:	cmp    rax,QWORD PTR [rbp-0x50]
  413aed:	je     413bd0 <_start@@Base+0xd940>
  413af3:	mov    BYTE PTR [rbp-0x30],0x0
  413af7:	mov    rax,QWORD PTR [rbp-0x50]
  413afb:	mov    QWORD PTR [rbp-0x20],rax
  413aff:	lea    rcx,[rbp-0x30]
  413b03:	mov    rdx,QWORD PTR [rbp-0x58]
  413b07:	mov    rsi,QWORD PTR [rbp-0x20]
  413b0b:	mov    rax,QWORD PTR [rbp-0x48]
  413b0f:	mov    rdi,rax
  413b12:	call   407626 <_start@@Base+0x1396>
  413b17:	mov    QWORD PTR [rbp-0x50],rax
  413b1b:	mov    rax,QWORD PTR [rbp-0x20]
  413b1f:	cmp    rax,QWORD PTR [rbp-0x50]
  413b23:	jne    413b6f <_start@@Base+0xd8df>
  413b25:	mov    rax,QWORD PTR [rbp-0x50]
  413b29:	mov    QWORD PTR [rbp-0x20],rax
  413b2d:	lea    rcx,[rbp-0x30]
  413b31:	mov    rdx,QWORD PTR [rbp-0x58]
  413b35:	mov    rsi,QWORD PTR [rbp-0x20]
  413b39:	mov    rax,QWORD PTR [rbp-0x48]
  413b3d:	mov    r8,rcx
  413b40:	lea    rcx,[rip+0x31d59]        # 4458a0 <__data_start@@Base+0x7e0>
  413b47:	mov    rdi,rax
  413b4a:	call   407f08 <_start@@Base+0x1c78>
  413b4f:	mov    QWORD PTR [rbp-0x50],rax
  413b53:	mov    rax,QWORD PTR [rbp-0x50]
  413b57:	cmp    rax,QWORD PTR [rbp-0x20]
  413b5b:	je     414088 <_start@@Base+0xddf8>
  413b61:	mov    rax,QWORD PTR [rbp-0x50]
  413b65:	cmp    rax,QWORD PTR [rbp-0x58]
  413b69:	je     414088 <_start@@Base+0xddf8>
  413b6f:	movzx  eax,BYTE PTR [rbp-0x30]
  413b73:	test   al,al
  413b75:	jne    413b89 <_start@@Base+0xd8f9>
  413b77:	mov    rax,QWORD PTR [rbp-0x48]
  413b7b:	mov    eax,DWORD PTR [rax+0x10]
  413b7e:	and    eax,0x2
  413b81:	test   eax,eax
  413b83:	je     413ff6 <_start@@Base+0xdd66>
  413b89:	mov    rax,QWORD PTR [rbp-0x48]
  413b8d:	mov    rax,QWORD PTR [rax]
  413b90:	mov    ecx,0x1
  413b95:	mov    edx,0x1
  413b9a:	mov    esi,0x1
  413b9f:	mov    rdi,rax
  413ba2:	call   4203e3 <flatcc_builder_table_add@@Base>
  413ba7:	mov    QWORD PTR [rbp-0x18],rax
  413bab:	cmp    QWORD PTR [rbp-0x18],0x0
  413bb0:	je     41408b <_start@@Base+0xddfb>
  413bb6:	movzx  eax,BYTE PTR [rbp-0x30]
  413bba:	movzx  edx,al
  413bbd:	mov    rax,QWORD PTR [rbp-0x18]
  413bc1:	mov    esi,edx
  413bc3:	mov    rdi,rax
  413bc6:	call   406385 <_start@@Base+0xf5>
  413bcb:	jmp    413ff6 <_start@@Base+0xdd66>
  413bd0:	mov    rdx,QWORD PTR [rbp-0x58]
  413bd4:	mov    rcx,QWORD PTR [rbp-0x50]
  413bd8:	mov    rax,QWORD PTR [rbp-0x48]
  413bdc:	mov    rsi,rcx
  413bdf:	mov    rdi,rax
  413be2:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413be7:	mov    QWORD PTR [rbp-0x50],rax
  413beb:	jmp    413ff6 <_start@@Base+0xdd66>
  413bf0:	mov    rdx,QWORD PTR [rbp-0x58]
  413bf4:	mov    rcx,QWORD PTR [rbp-0x50]
  413bf8:	mov    rax,QWORD PTR [rbp-0x48]
  413bfc:	mov    rsi,rcx
  413bff:	mov    rdi,rax
  413c02:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413c07:	mov    QWORD PTR [rbp-0x50],rax
  413c0b:	jmp    413ff6 <_start@@Base+0xdd66>
  413c10:	movabs rax,0xffffffff00000000
  413c1a:	and    rax,QWORD PTR [rbp-0x28]
  413c1e:	mov    rdx,rax
  413c21:	movabs rax,0x7666363400000000
  413c2b:	cmp    rdx,rax
  413c2e:	jne    413dfb <_start@@Base+0xdb6b>
  413c34:	mov    rax,QWORD PTR [rbp-0x50]
  413c38:	mov    QWORD PTR [rbp-0x20],rax
  413c3c:	mov    rdx,QWORD PTR [rbp-0x58]
  413c40:	mov    rsi,QWORD PTR [rbp-0x20]
  413c44:	mov    rax,QWORD PTR [rbp-0x48]
  413c48:	mov    ecx,0x4
  413c4d:	mov    rdi,rax
  413c50:	call   406d3f <_start@@Base+0xaaf>
  413c55:	mov    QWORD PTR [rbp-0x50],rax
  413c59:	mov    rax,QWORD PTR [rbp-0x20]
  413c5d:	cmp    rax,QWORD PTR [rbp-0x50]
  413c61:	je     413ddb <_start@@Base+0xdb4b>
  413c67:	mov    rax,QWORD PTR [rbp-0x48]
  413c6b:	mov    rax,QWORD PTR [rax]
  413c6e:	mov    ecx,0x1fffffff
  413c73:	mov    edx,0x8
  413c78:	mov    esi,0x8
  413c7d:	mov    rdi,rax
  413c80:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  413c85:	test   eax,eax
  413c87:	jne    41408e <_start@@Base+0xddfe>
  413c8d:	lea    rcx,[rbp-0x38]
  413c91:	mov    rdx,QWORD PTR [rbp-0x58]
  413c95:	mov    rsi,QWORD PTR [rbp-0x50]
  413c99:	mov    rax,QWORD PTR [rbp-0x48]
  413c9d:	mov    rdi,rax
  413ca0:	call   406b44 <_start@@Base+0x8b4>
  413ca5:	mov    QWORD PTR [rbp-0x50],rax
  413ca9:	jmp    413d83 <_start@@Base+0xdaf3>
  413cae:	vxorpd xmm0,xmm0,xmm0
  413cb2:	vmovsd QWORD PTR [rbp-0x30],xmm0
  413cb7:	mov    rax,QWORD PTR [rbp-0x48]
  413cbb:	mov    rax,QWORD PTR [rax]
  413cbe:	mov    esi,0x1
  413cc3:	mov    rdi,rax
  413cc6:	call   41d895 <flatcc_builder_extend_vector@@Base>
  413ccb:	mov    QWORD PTR [rbp-0x18],rax
  413ccf:	cmp    QWORD PTR [rbp-0x18],0x0
  413cd4:	je     414091 <_start@@Base+0xde01>
  413cda:	mov    rax,QWORD PTR [rbp-0x50]
  413cde:	mov    QWORD PTR [rbp-0x20],rax
  413ce2:	lea    rcx,[rbp-0x30]
  413ce6:	mov    rdx,QWORD PTR [rbp-0x58]
  413cea:	mov    rsi,QWORD PTR [rbp-0x20]
  413cee:	mov    rax,QWORD PTR [rbp-0x48]
  413cf2:	mov    rdi,rax
  413cf5:	call   427fd2 <flatcc_json_parser_double@@Base>
  413cfa:	mov    QWORD PTR [rbp-0x50],rax
  413cfe:	mov    rax,QWORD PTR [rbp-0x20]
  413d02:	cmp    rax,QWORD PTR [rbp-0x50]
  413d06:	jne    413d52 <_start@@Base+0xdac2>
  413d08:	mov    rax,QWORD PTR [rbp-0x50]
  413d0c:	mov    QWORD PTR [rbp-0x20],rax
  413d10:	lea    rcx,[rbp-0x30]
  413d14:	mov    rdx,QWORD PTR [rbp-0x58]
  413d18:	mov    rsi,QWORD PTR [rbp-0x20]
  413d1c:	mov    rax,QWORD PTR [rbp-0x48]
  413d20:	mov    r8,rcx
  413d23:	lea    rcx,[rip+0x31b96]        # 4458c0 <__data_start@@Base+0x800>
  413d2a:	mov    rdi,rax
  413d2d:	call   4088a2 <_start@@Base+0x2612>
  413d32:	mov    QWORD PTR [rbp-0x50],rax
  413d36:	mov    rax,QWORD PTR [rbp-0x50]
  413d3a:	cmp    rax,QWORD PTR [rbp-0x20]
  413d3e:	je     414094 <_start@@Base+0xde04>
  413d44:	mov    rax,QWORD PTR [rbp-0x50]
  413d48:	cmp    rax,QWORD PTR [rbp-0x58]
  413d4c:	je     414094 <_start@@Base+0xde04>
  413d52:	mov    rdx,QWORD PTR [rbp-0x30]
  413d56:	mov    rax,QWORD PTR [rbp-0x18]
  413d5a:	vmovq  xmm0,rdx
  413d5f:	mov    rdi,rax
  413d62:	call   406594 <_start@@Base+0x304>
  413d67:	lea    rcx,[rbp-0x38]
  413d6b:	mov    rdx,QWORD PTR [rbp-0x58]
  413d6f:	mov    rsi,QWORD PTR [rbp-0x50]
  413d73:	mov    rax,QWORD PTR [rbp-0x48]
  413d77:	mov    rdi,rax
  413d7a:	call   406c01 <_start@@Base+0x971>
  413d7f:	mov    QWORD PTR [rbp-0x50],rax
  413d83:	mov    eax,DWORD PTR [rbp-0x38]
  413d86:	test   eax,eax
  413d88:	jne    413cae <_start@@Base+0xda1e>
  413d8e:	mov    rax,QWORD PTR [rbp-0x48]
  413d92:	mov    rax,QWORD PTR [rax]
  413d95:	mov    rdi,rax
  413d98:	call   41f1da <flatcc_builder_end_vector@@Base>
  413d9d:	mov    DWORD PTR [rbp-0x34],eax
  413da0:	cmp    DWORD PTR [rbp-0x34],0x0
  413da4:	je     414097 <_start@@Base+0xde07>
  413daa:	mov    rax,QWORD PTR [rbp-0x48]
  413dae:	mov    rax,QWORD PTR [rax]
  413db1:	mov    esi,0xb
  413db6:	mov    rdi,rax
  413db9:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  413dbe:	mov    QWORD PTR [rbp-0x10],rax
  413dc2:	cmp    QWORD PTR [rbp-0x10],0x0
  413dc7:	je     414097 <_start@@Base+0xde07>
  413dcd:	mov    rax,QWORD PTR [rbp-0x10]
  413dd1:	mov    edx,DWORD PTR [rbp-0x34]
  413dd4:	mov    DWORD PTR [rax],edx
  413dd6:	jmp    413ff6 <_start@@Base+0xdd66>
  413ddb:	mov    rdx,QWORD PTR [rbp-0x58]
  413ddf:	mov    rcx,QWORD PTR [rbp-0x50]
  413de3:	mov    rax,QWORD PTR [rbp-0x48]
  413de7:	mov    rsi,rcx
  413dea:	mov    rdi,rax
  413ded:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413df2:	mov    QWORD PTR [rbp-0x50],rax
  413df6:	jmp    413ff6 <_start@@Base+0xdd66>
  413dfb:	movabs rax,0xffff000000000000
  413e05:	and    rax,QWORD PTR [rbp-0x28]
  413e09:	mov    rdx,rax
  413e0c:	movabs rax,0x7638000000000000
  413e16:	cmp    rdx,rax
  413e19:	jne    413fdb <_start@@Base+0xdd4b>
  413e1f:	mov    rax,QWORD PTR [rbp-0x50]
  413e23:	mov    QWORD PTR [rbp-0x20],rax
  413e27:	mov    rdx,QWORD PTR [rbp-0x58]
  413e2b:	mov    rsi,QWORD PTR [rbp-0x20]
  413e2f:	mov    rax,QWORD PTR [rbp-0x48]
  413e33:	mov    ecx,0x2
  413e38:	mov    rdi,rax
  413e3b:	call   406d3f <_start@@Base+0xaaf>
  413e40:	mov    QWORD PTR [rbp-0x50],rax
  413e44:	mov    rax,QWORD PTR [rbp-0x20]
  413e48:	cmp    rax,QWORD PTR [rbp-0x50]
  413e4c:	je     413fbe <_start@@Base+0xdd2e>
  413e52:	mov    rax,QWORD PTR [rbp-0x48]
  413e56:	mov    rax,QWORD PTR [rax]
  413e59:	mov    ecx,0xffffffff
  413e5e:	mov    edx,0x1
  413e63:	mov    esi,0x1
  413e68:	mov    rdi,rax
  413e6b:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  413e70:	test   eax,eax
  413e72:	jne    41409a <_start@@Base+0xde0a>
  413e78:	lea    rcx,[rbp-0x38]
  413e7c:	mov    rdx,QWORD PTR [rbp-0x58]
  413e80:	mov    rsi,QWORD PTR [rbp-0x50]
  413e84:	mov    rax,QWORD PTR [rbp-0x48]
  413e88:	mov    rdi,rax
  413e8b:	call   406b44 <_start@@Base+0x8b4>
  413e90:	mov    QWORD PTR [rbp-0x50],rax
  413e94:	jmp    413f69 <_start@@Base+0xdcd9>
  413e99:	mov    BYTE PTR [rbp-0x30],0x0
  413e9d:	mov    rax,QWORD PTR [rbp-0x48]
  413ea1:	mov    rax,QWORD PTR [rax]
  413ea4:	mov    esi,0x1
  413ea9:	mov    rdi,rax
  413eac:	call   41d895 <flatcc_builder_extend_vector@@Base>
  413eb1:	mov    QWORD PTR [rbp-0x18],rax
  413eb5:	cmp    QWORD PTR [rbp-0x18],0x0
  413eba:	je     41409d <_start@@Base+0xde0d>
  413ec0:	mov    rax,QWORD PTR [rbp-0x50]
  413ec4:	mov    QWORD PTR [rbp-0x20],rax
  413ec8:	lea    rcx,[rbp-0x30]
  413ecc:	mov    rdx,QWORD PTR [rbp-0x58]
  413ed0:	mov    rsi,QWORD PTR [rbp-0x20]
  413ed4:	mov    rax,QWORD PTR [rbp-0x48]
  413ed8:	mov    rdi,rax
  413edb:	call   40793b <_start@@Base+0x16ab>
  413ee0:	mov    QWORD PTR [rbp-0x50],rax
  413ee4:	mov    rax,QWORD PTR [rbp-0x20]
  413ee8:	cmp    rax,QWORD PTR [rbp-0x50]
  413eec:	jne    413f38 <_start@@Base+0xdca8>
  413eee:	mov    rax,QWORD PTR [rbp-0x50]
  413ef2:	mov    QWORD PTR [rbp-0x20],rax
  413ef6:	lea    rcx,[rbp-0x30]
  413efa:	mov    rdx,QWORD PTR [rbp-0x58]
  413efe:	mov    rsi,QWORD PTR [rbp-0x20]
  413f02:	mov    rax,QWORD PTR [rbp-0x48]
  413f06:	mov    r8,rcx
  413f09:	lea    rcx,[rip+0x319d0]        # 4458e0 <__data_start@@Base+0x820>
  413f10:	mov    rdi,rax
  413f13:	call   408483 <_start@@Base+0x21f3>
  413f18:	mov    QWORD PTR [rbp-0x50],rax
  413f1c:	mov    rax,QWORD PTR [rbp-0x50]
  413f20:	cmp    rax,QWORD PTR [rbp-0x20]
  413f24:	je     4140a0 <_start@@Base+0xde10>
  413f2a:	mov    rax,QWORD PTR [rbp-0x50]
  413f2e:	cmp    rax,QWORD PTR [rbp-0x58]
  413f32:	je     4140a0 <_start@@Base+0xde10>
  413f38:	movzx  eax,BYTE PTR [rbp-0x30]
  413f3c:	movsx  edx,al
  413f3f:	mov    rax,QWORD PTR [rbp-0x18]
  413f43:	mov    esi,edx
  413f45:	mov    rdi,rax
  413f48:	call   406459 <_start@@Base+0x1c9>
  413f4d:	lea    rcx,[rbp-0x38]
  413f51:	mov    rdx,QWORD PTR [rbp-0x58]
  413f55:	mov    rsi,QWORD PTR [rbp-0x50]
  413f59:	mov    rax,QWORD PTR [rbp-0x48]
  413f5d:	mov    rdi,rax
  413f60:	call   406c01 <_start@@Base+0x971>
  413f65:	mov    QWORD PTR [rbp-0x50],rax
  413f69:	mov    eax,DWORD PTR [rbp-0x38]
  413f6c:	test   eax,eax
  413f6e:	jne    413e99 <_start@@Base+0xdc09>
  413f74:	mov    rax,QWORD PTR [rbp-0x48]
  413f78:	mov    rax,QWORD PTR [rax]
  413f7b:	mov    rdi,rax
  413f7e:	call   41f1da <flatcc_builder_end_vector@@Base>
  413f83:	mov    DWORD PTR [rbp-0x34],eax
  413f86:	cmp    DWORD PTR [rbp-0x34],0x0
  413f8a:	je     4140a3 <_start@@Base+0xde13>
  413f90:	mov    rax,QWORD PTR [rbp-0x48]
  413f94:	mov    rax,QWORD PTR [rax]
  413f97:	mov    esi,0xa
  413f9c:	mov    rdi,rax
  413f9f:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  413fa4:	mov    QWORD PTR [rbp-0x10],rax
  413fa8:	cmp    QWORD PTR [rbp-0x10],0x0
  413fad:	je     4140a3 <_start@@Base+0xde13>
  413fb3:	mov    rax,QWORD PTR [rbp-0x10]
  413fb7:	mov    edx,DWORD PTR [rbp-0x34]
  413fba:	mov    DWORD PTR [rax],edx
  413fbc:	jmp    413ff6 <_start@@Base+0xdd66>
  413fbe:	mov    rdx,QWORD PTR [rbp-0x58]
  413fc2:	mov    rcx,QWORD PTR [rbp-0x50]
  413fc6:	mov    rax,QWORD PTR [rbp-0x48]
  413fca:	mov    rsi,rcx
  413fcd:	mov    rdi,rax
  413fd0:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413fd5:	mov    QWORD PTR [rbp-0x50],rax
  413fd9:	jmp    413ff6 <_start@@Base+0xdd66>
  413fdb:	mov    rdx,QWORD PTR [rbp-0x58]
  413fdf:	mov    rcx,QWORD PTR [rbp-0x50]
  413fe3:	mov    rax,QWORD PTR [rbp-0x48]
  413fe7:	mov    rsi,rcx
  413fea:	mov    rdi,rax
  413fed:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  413ff2:	mov    QWORD PTR [rbp-0x50],rax
  413ff6:	lea    rcx,[rbp-0x38]
  413ffa:	mov    rdx,QWORD PTR [rbp-0x58]
  413ffe:	mov    rsi,QWORD PTR [rbp-0x50]
  414002:	mov    rax,QWORD PTR [rbp-0x48]
  414006:	mov    rdi,rax
  414009:	call   406a06 <_start@@Base+0x776>
  41400e:	mov    QWORD PTR [rbp-0x50],rax
  414012:	mov    eax,DWORD PTR [rbp-0x38]
  414015:	test   eax,eax
  414017:	jne    412cf8 <_start@@Base+0xca68>
  41401d:	mov    rax,QWORD PTR [rbp-0x48]
  414021:	mov    eax,DWORD PTR [rax+0x1c]
  414024:	test   eax,eax
  414026:	jne    4140a6 <_start@@Base+0xde16>
  414028:	mov    rax,QWORD PTR [rbp-0x48]
  41402c:	mov    rax,QWORD PTR [rax]
  41402f:	mov    rdi,rax
  414032:	call   41ed42 <flatcc_builder_end_table@@Base>
  414037:	mov    edx,eax
  414039:	mov    rax,QWORD PTR [rbp-0x60]
  41403d:	mov    DWORD PTR [rax],edx
  41403f:	mov    rax,QWORD PTR [rbp-0x60]
  414043:	mov    eax,DWORD PTR [rax]
  414045:	test   eax,eax
  414047:	je     4140a9 <_start@@Base+0xde19>
  414049:	mov    rax,QWORD PTR [rbp-0x50]
  41404d:	jmp    4140c3 <_start@@Base+0xde33>
  41404f:	nop
  414050:	jmp    4140aa <_start@@Base+0xde1a>
  414052:	nop
  414053:	jmp    4140aa <_start@@Base+0xde1a>
  414055:	nop
  414056:	jmp    4140aa <_start@@Base+0xde1a>
  414058:	nop
  414059:	jmp    4140aa <_start@@Base+0xde1a>
  41405b:	nop
  41405c:	jmp    4140aa <_start@@Base+0xde1a>
  41405e:	nop
  41405f:	jmp    4140aa <_start@@Base+0xde1a>
  414061:	nop
  414062:	jmp    4140aa <_start@@Base+0xde1a>
  414064:	nop
  414065:	jmp    4140aa <_start@@Base+0xde1a>
  414067:	nop
  414068:	jmp    4140aa <_start@@Base+0xde1a>
  41406a:	nop
  41406b:	jmp    4140aa <_start@@Base+0xde1a>
  41406d:	nop
  41406e:	jmp    4140aa <_start@@Base+0xde1a>
  414070:	nop
  414071:	jmp    4140aa <_start@@Base+0xde1a>
  414073:	nop
  414074:	jmp    4140aa <_start@@Base+0xde1a>
  414076:	nop
  414077:	jmp    4140aa <_start@@Base+0xde1a>
  414079:	nop
  41407a:	jmp    4140aa <_start@@Base+0xde1a>
  41407c:	nop
  41407d:	jmp    4140aa <_start@@Base+0xde1a>
  41407f:	nop
  414080:	jmp    4140aa <_start@@Base+0xde1a>
  414082:	nop
  414083:	jmp    4140aa <_start@@Base+0xde1a>
  414085:	nop
  414086:	jmp    4140aa <_start@@Base+0xde1a>
  414088:	nop
  414089:	jmp    4140aa <_start@@Base+0xde1a>
  41408b:	nop
  41408c:	jmp    4140aa <_start@@Base+0xde1a>
  41408e:	nop
  41408f:	jmp    4140aa <_start@@Base+0xde1a>
  414091:	nop
  414092:	jmp    4140aa <_start@@Base+0xde1a>
  414094:	nop
  414095:	jmp    4140aa <_start@@Base+0xde1a>
  414097:	nop
  414098:	jmp    4140aa <_start@@Base+0xde1a>
  41409a:	nop
  41409b:	jmp    4140aa <_start@@Base+0xde1a>
  41409d:	nop
  41409e:	jmp    4140aa <_start@@Base+0xde1a>
  4140a0:	nop
  4140a1:	jmp    4140aa <_start@@Base+0xde1a>
  4140a3:	nop
  4140a4:	jmp    4140aa <_start@@Base+0xde1a>
  4140a6:	nop
  4140a7:	jmp    4140aa <_start@@Base+0xde1a>
  4140a9:	nop
  4140aa:	mov    rdx,QWORD PTR [rbp-0x58]
  4140ae:	mov    rsi,QWORD PTR [rbp-0x50]
  4140b2:	mov    rax,QWORD PTR [rbp-0x48]
  4140b6:	mov    ecx,0x21
  4140bb:	mov    rdi,rax
  4140be:	call   427257 <flatcc_json_parser_set_error@@Base>
  4140c3:	mov    rdi,QWORD PTR [rbp-0x8]
  4140c7:	xor    rdi,QWORD PTR fs:0x28
  4140d0:	je     4140d7 <_start@@Base+0xde47>
  4140d2:	call   4061a0 <__stack_chk_fail@plt>
  4140d7:	leave  
  4140d8:	ret    
  4140d9:	endbr64 
  4140dd:	push   rbp
  4140de:	mov    rbp,rsp
  4140e1:	sub    rsp,0x50
  4140e5:	mov    QWORD PTR [rbp-0x38],rdi
  4140e9:	mov    QWORD PTR [rbp-0x40],rsi
  4140ed:	mov    QWORD PTR [rbp-0x48],rdx
  4140f1:	mov    QWORD PTR [rbp-0x50],rcx
  4140f5:	mov    rax,QWORD PTR fs:0x28
  4140fe:	mov    QWORD PTR [rbp-0x8],rax
  414102:	xor    eax,eax
  414104:	mov    rax,QWORD PTR [rbp-0x50]
  414108:	mov    DWORD PTR [rax],0x0
  41410e:	mov    rax,QWORD PTR [rbp-0x38]
  414112:	mov    rax,QWORD PTR [rax]
  414115:	mov    esi,0x1
  41411a:	mov    rdi,rax
  41411d:	call   41e233 <flatcc_builder_start_table@@Base>
  414122:	test   eax,eax
  414124:	jne    4143d7 <_start@@Base+0xe147>
  41412a:	lea    rcx,[rbp-0x28]
  41412e:	mov    rdx,QWORD PTR [rbp-0x48]
  414132:	mov    rsi,QWORD PTR [rbp-0x40]
  414136:	mov    rax,QWORD PTR [rbp-0x38]
  41413a:	mov    rdi,rax
  41413d:	call   406949 <_start@@Base+0x6b9>
  414142:	mov    QWORD PTR [rbp-0x40],rax
  414146:	jmp    41439a <_start@@Base+0xe10a>
  41414b:	mov    rdx,QWORD PTR [rbp-0x48]
  41414f:	mov    rcx,QWORD PTR [rbp-0x40]
  414153:	mov    rax,QWORD PTR [rbp-0x38]
  414157:	mov    rsi,rcx
  41415a:	mov    rdi,rax
  41415d:	call   4066e9 <_start@@Base+0x459>
  414162:	mov    QWORD PTR [rbp-0x40],rax
  414166:	mov    rdx,QWORD PTR [rbp-0x48]
  41416a:	mov    rax,QWORD PTR [rbp-0x40]
  41416e:	mov    rsi,rdx
  414171:	mov    rdi,rax
  414174:	call   406853 <_start@@Base+0x5c3>
  414179:	mov    QWORD PTR [rbp-0x20],rax
  41417d:	movabs rax,0x73776f72645f6174
  414187:	cmp    QWORD PTR [rbp-0x20],rax
  41418b:	jne    414363 <_start@@Base+0xe0d3>
  414191:	add    QWORD PTR [rbp-0x40],0x8
  414196:	mov    rdx,QWORD PTR [rbp-0x48]
  41419a:	mov    rax,QWORD PTR [rbp-0x40]
  41419e:	mov    rsi,rdx
  4141a1:	mov    rdi,rax
  4141a4:	call   406853 <_start@@Base+0x5c3>
  4141a9:	mov    QWORD PTR [rbp-0x20],rax
  4141ad:	movabs rax,0x7461636b5f64616d
  4141b7:	cmp    QWORD PTR [rbp-0x20],rax
  4141bb:	jne    414346 <_start@@Base+0xe0b6>
  4141c1:	add    QWORD PTR [rbp-0x40],0x8
  4141c6:	mov    rdx,QWORD PTR [rbp-0x48]
  4141ca:	mov    rax,QWORD PTR [rbp-0x40]
  4141ce:	mov    rsi,rdx
  4141d1:	mov    rdi,rax
  4141d4:	call   406853 <_start@@Base+0x5c3>
  4141d9:	mov    QWORD PTR [rbp-0x20],rax
  4141dd:	movabs rax,0xffffff0000000000
  4141e7:	and    rax,QWORD PTR [rbp-0x20]
  4141eb:	mov    rdx,rax
  4141ee:	movabs rax,0x6167650000000000
  4141f8:	cmp    rdx,rax
  4141fb:	jne    414329 <_start@@Base+0xe099>
  414201:	mov    rax,QWORD PTR [rbp-0x40]
  414205:	mov    QWORD PTR [rbp-0x18],rax
  414209:	mov    rdx,QWORD PTR [rbp-0x48]
  41420d:	mov    rsi,QWORD PTR [rbp-0x18]
  414211:	mov    rax,QWORD PTR [rbp-0x38]
  414215:	mov    ecx,0x3
  41421a:	mov    rdi,rax
  41421d:	call   406d3f <_start@@Base+0xaaf>
  414222:	mov    QWORD PTR [rbp-0x40],rax
  414226:	mov    rax,QWORD PTR [rbp-0x18]
  41422a:	cmp    rax,QWORD PTR [rbp-0x40]
  41422e:	je     41430c <_start@@Base+0xe07c>
  414234:	mov    DWORD PTR [rbp-0x24],0x0
  41423b:	mov    rax,QWORD PTR [rbp-0x40]
  41423f:	mov    QWORD PTR [rbp-0x18],rax
  414243:	lea    rcx,[rbp-0x24]
  414247:	mov    rdx,QWORD PTR [rbp-0x48]
  41424b:	mov    rsi,QWORD PTR [rbp-0x18]
  41424f:	mov    rax,QWORD PTR [rbp-0x38]
  414253:	mov    rdi,rax
  414256:	call   4077b0 <_start@@Base+0x1520>
  41425b:	mov    QWORD PTR [rbp-0x40],rax
  41425f:	mov    rax,QWORD PTR [rbp-0x18]
  414263:	cmp    rax,QWORD PTR [rbp-0x40]
  414267:	jne    4142b3 <_start@@Base+0xe023>
  414269:	mov    rax,QWORD PTR [rbp-0x40]
  41426d:	mov    QWORD PTR [rbp-0x18],rax
  414271:	lea    rcx,[rbp-0x24]
  414275:	mov    rdx,QWORD PTR [rbp-0x48]
  414279:	mov    rsi,QWORD PTR [rbp-0x18]
  41427d:	mov    rax,QWORD PTR [rbp-0x38]
  414281:	mov    r8,rcx
  414284:	lea    rcx,[rip+0x31675]        # 445900 <__data_start@@Base+0x840>
  41428b:	mov    rdi,rax
  41428e:	call   4081c4 <_start@@Base+0x1f34>
  414293:	mov    QWORD PTR [rbp-0x40],rax
  414297:	mov    rax,QWORD PTR [rbp-0x40]
  41429b:	cmp    rax,QWORD PTR [rbp-0x18]
  41429f:	je     4143da <_start@@Base+0xe14a>
  4142a5:	mov    rax,QWORD PTR [rbp-0x40]
  4142a9:	cmp    rax,QWORD PTR [rbp-0x48]
  4142ad:	je     4143da <_start@@Base+0xe14a>
  4142b3:	mov    eax,DWORD PTR [rbp-0x24]
  4142b6:	test   eax,eax
  4142b8:	jne    4142cc <_start@@Base+0xe03c>
  4142ba:	mov    rax,QWORD PTR [rbp-0x38]
  4142be:	mov    eax,DWORD PTR [rax+0x10]
  4142c1:	and    eax,0x2
  4142c4:	test   eax,eax
  4142c6:	je     41437e <_start@@Base+0xe0ee>
  4142cc:	mov    rax,QWORD PTR [rbp-0x38]
  4142d0:	mov    rax,QWORD PTR [rax]
  4142d3:	mov    ecx,0x4
  4142d8:	mov    edx,0x4
  4142dd:	mov    esi,0x0
  4142e2:	mov    rdi,rax
  4142e5:	call   4203e3 <flatcc_builder_table_add@@Base>
  4142ea:	mov    QWORD PTR [rbp-0x10],rax
  4142ee:	cmp    QWORD PTR [rbp-0x10],0x0
  4142f3:	je     4143dd <_start@@Base+0xe14d>
  4142f9:	mov    edx,DWORD PTR [rbp-0x24]
  4142fc:	mov    rax,QWORD PTR [rbp-0x10]
  414300:	mov    esi,edx
  414302:	mov    rdi,rax
  414305:	call   4064c3 <_start@@Base+0x233>
  41430a:	jmp    41437e <_start@@Base+0xe0ee>
  41430c:	mov    rdx,QWORD PTR [rbp-0x48]
  414310:	mov    rcx,QWORD PTR [rbp-0x40]
  414314:	mov    rax,QWORD PTR [rbp-0x38]
  414318:	mov    rsi,rcx
  41431b:	mov    rdi,rax
  41431e:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  414323:	mov    QWORD PTR [rbp-0x40],rax
  414327:	jmp    41437e <_start@@Base+0xe0ee>
  414329:	mov    rdx,QWORD PTR [rbp-0x48]
  41432d:	mov    rcx,QWORD PTR [rbp-0x40]
  414331:	mov    rax,QWORD PTR [rbp-0x38]
  414335:	mov    rsi,rcx
  414338:	mov    rdi,rax
  41433b:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  414340:	mov    QWORD PTR [rbp-0x40],rax
  414344:	jmp    41437e <_start@@Base+0xe0ee>
  414346:	mov    rdx,QWORD PTR [rbp-0x48]
  41434a:	mov    rcx,QWORD PTR [rbp-0x40]
  41434e:	mov    rax,QWORD PTR [rbp-0x38]
  414352:	mov    rsi,rcx
  414355:	mov    rdi,rax
  414358:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41435d:	mov    QWORD PTR [rbp-0x40],rax
  414361:	jmp    41437e <_start@@Base+0xe0ee>
  414363:	mov    rdx,QWORD PTR [rbp-0x48]
  414367:	mov    rcx,QWORD PTR [rbp-0x40]
  41436b:	mov    rax,QWORD PTR [rbp-0x38]
  41436f:	mov    rsi,rcx
  414372:	mov    rdi,rax
  414375:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41437a:	mov    QWORD PTR [rbp-0x40],rax
  41437e:	lea    rcx,[rbp-0x28]
  414382:	mov    rdx,QWORD PTR [rbp-0x48]
  414386:	mov    rsi,QWORD PTR [rbp-0x40]
  41438a:	mov    rax,QWORD PTR [rbp-0x38]
  41438e:	mov    rdi,rax
  414391:	call   406a06 <_start@@Base+0x776>
  414396:	mov    QWORD PTR [rbp-0x40],rax
  41439a:	mov    eax,DWORD PTR [rbp-0x28]
  41439d:	test   eax,eax
  41439f:	jne    41414b <_start@@Base+0xdebb>
  4143a5:	mov    rax,QWORD PTR [rbp-0x38]
  4143a9:	mov    eax,DWORD PTR [rax+0x1c]
  4143ac:	test   eax,eax
  4143ae:	jne    4143e0 <_start@@Base+0xe150>
  4143b0:	mov    rax,QWORD PTR [rbp-0x38]
  4143b4:	mov    rax,QWORD PTR [rax]
  4143b7:	mov    rdi,rax
  4143ba:	call   41ed42 <flatcc_builder_end_table@@Base>
  4143bf:	mov    edx,eax
  4143c1:	mov    rax,QWORD PTR [rbp-0x50]
  4143c5:	mov    DWORD PTR [rax],edx
  4143c7:	mov    rax,QWORD PTR [rbp-0x50]
  4143cb:	mov    eax,DWORD PTR [rax]
  4143cd:	test   eax,eax
  4143cf:	je     4143e3 <_start@@Base+0xe153>
  4143d1:	mov    rax,QWORD PTR [rbp-0x40]
  4143d5:	jmp    4143fd <_start@@Base+0xe16d>
  4143d7:	nop
  4143d8:	jmp    4143e4 <_start@@Base+0xe154>
  4143da:	nop
  4143db:	jmp    4143e4 <_start@@Base+0xe154>
  4143dd:	nop
  4143de:	jmp    4143e4 <_start@@Base+0xe154>
  4143e0:	nop
  4143e1:	jmp    4143e4 <_start@@Base+0xe154>
  4143e3:	nop
  4143e4:	mov    rdx,QWORD PTR [rbp-0x48]
  4143e8:	mov    rsi,QWORD PTR [rbp-0x40]
  4143ec:	mov    rax,QWORD PTR [rbp-0x38]
  4143f0:	mov    ecx,0x21
  4143f5:	mov    rdi,rax
  4143f8:	call   427257 <flatcc_json_parser_set_error@@Base>
  4143fd:	mov    rdi,QWORD PTR [rbp-0x8]
  414401:	xor    rdi,QWORD PTR fs:0x28
  41440a:	je     414411 <_start@@Base+0xe181>
  41440c:	call   4061a0 <__stack_chk_fail@plt>
  414411:	leave  
  414412:	ret    
  414413:	endbr64 
  414417:	push   rbp
  414418:	mov    rbp,rsp
  41441b:	sub    rsp,0x50
  41441f:	mov    QWORD PTR [rbp-0x38],rdi
  414423:	mov    QWORD PTR [rbp-0x40],rsi
  414427:	mov    QWORD PTR [rbp-0x48],rdx
  41442b:	mov    QWORD PTR [rbp-0x50],rcx
  41442f:	mov    rax,QWORD PTR fs:0x28
  414438:	mov    QWORD PTR [rbp-0x8],rax
  41443c:	xor    eax,eax
  41443e:	lea    rcx,[rbp-0x24]
  414442:	mov    rdx,QWORD PTR [rbp-0x48]
  414446:	mov    rsi,QWORD PTR [rbp-0x40]
  41444a:	mov    rax,QWORD PTR [rbp-0x38]
  41444e:	mov    rdi,rax
  414451:	call   406949 <_start@@Base+0x6b9>
  414456:	mov    QWORD PTR [rbp-0x40],rax
  41445a:	jmp    414626 <_start@@Base+0xe396>
  41445f:	mov    rdx,QWORD PTR [rbp-0x48]
  414463:	mov    rcx,QWORD PTR [rbp-0x40]
  414467:	mov    rax,QWORD PTR [rbp-0x38]
  41446b:	mov    rsi,rcx
  41446e:	mov    rdi,rax
  414471:	call   4066e9 <_start@@Base+0x459>
  414476:	mov    QWORD PTR [rbp-0x40],rax
  41447a:	mov    rdx,QWORD PTR [rbp-0x48]
  41447e:	mov    rax,QWORD PTR [rbp-0x40]
  414482:	mov    rsi,rdx
  414485:	mov    rdi,rax
  414488:	call   406853 <_start@@Base+0x5c3>
  41448d:	mov    QWORD PTR [rbp-0x20],rax
  414491:	movabs rax,0x686169725f6c656e
  41449b:	cmp    QWORD PTR [rbp-0x20],rax
  41449f:	jne    4145ef <_start@@Base+0xe35f>
  4144a5:	add    QWORD PTR [rbp-0x40],0x8
  4144aa:	mov    rdx,QWORD PTR [rbp-0x48]
  4144ae:	mov    rax,QWORD PTR [rbp-0x40]
  4144b2:	mov    rsi,rdx
  4144b5:	mov    rdi,rax
  4144b8:	call   406853 <_start@@Base+0x5c3>
  4144bd:	mov    QWORD PTR [rbp-0x20],rax
  4144c1:	movabs rax,0xffffff0000000000
  4144cb:	and    rax,QWORD PTR [rbp-0x20]
  4144cf:	mov    rdx,rax
  4144d2:	movabs rax,0x6774680000000000
  4144dc:	cmp    rdx,rax
  4144df:	jne    4145d2 <_start@@Base+0xe342>
  4144e5:	mov    rax,QWORD PTR [rbp-0x40]
  4144e9:	mov    QWORD PTR [rbp-0x18],rax
  4144ed:	mov    rdx,QWORD PTR [rbp-0x48]
  4144f1:	mov    rsi,QWORD PTR [rbp-0x18]
  4144f5:	mov    rax,QWORD PTR [rbp-0x38]
  4144f9:	mov    ecx,0x3
  4144fe:	mov    rdi,rax
  414501:	call   406d3f <_start@@Base+0xaaf>
  414506:	mov    QWORD PTR [rbp-0x40],rax
  41450a:	mov    rax,QWORD PTR [rbp-0x18]
  41450e:	cmp    rax,QWORD PTR [rbp-0x40]
  414512:	je     4145b5 <_start@@Base+0xe325>
  414518:	mov    WORD PTR [rbp-0x26],0x0
  41451e:	mov    rax,QWORD PTR [rbp-0x50]
  414522:	mov    QWORD PTR [rbp-0x10],rax
  414526:	mov    rax,QWORD PTR [rbp-0x40]
  41452a:	mov    QWORD PTR [rbp-0x18],rax
  41452e:	lea    rcx,[rbp-0x26]
  414532:	mov    rdx,QWORD PTR [rbp-0x48]
  414536:	mov    rsi,QWORD PTR [rbp-0x18]
  41453a:	mov    rax,QWORD PTR [rbp-0x38]
  41453e:	mov    rdi,rax
  414541:	call   407561 <_start@@Base+0x12d1>
  414546:	mov    QWORD PTR [rbp-0x40],rax
  41454a:	mov    rax,QWORD PTR [rbp-0x18]
  41454e:	cmp    rax,QWORD PTR [rbp-0x40]
  414552:	jne    41459e <_start@@Base+0xe30e>
  414554:	mov    rax,QWORD PTR [rbp-0x40]
  414558:	mov    QWORD PTR [rbp-0x18],rax
  41455c:	lea    rcx,[rbp-0x26]
  414560:	mov    rdx,QWORD PTR [rbp-0x48]
  414564:	mov    rsi,QWORD PTR [rbp-0x18]
  414568:	mov    rax,QWORD PTR [rbp-0x38]
  41456c:	mov    r8,rcx
  41456f:	lea    rcx,[rip+0x313aa]        # 445920 <__data_start@@Base+0x860>
  414576:	mov    rdi,rax
  414579:	call   407daa <_start@@Base+0x1b1a>
  41457e:	mov    QWORD PTR [rbp-0x40],rax
  414582:	mov    rax,QWORD PTR [rbp-0x40]
  414586:	cmp    rax,QWORD PTR [rbp-0x18]
  41458a:	je     414637 <_start@@Base+0xe3a7>
  414590:	mov    rax,QWORD PTR [rbp-0x40]
  414594:	cmp    rax,QWORD PTR [rbp-0x48]
  414598:	je     414637 <_start@@Base+0xe3a7>
  41459e:	movzx  eax,WORD PTR [rbp-0x26]
  4145a2:	movzx  edx,ax
  4145a5:	mov    rax,QWORD PTR [rbp-0x10]
  4145a9:	mov    esi,edx
  4145ab:	mov    rdi,rax
  4145ae:	call   4063ba <_start@@Base+0x12a>
  4145b3:	jmp    41460a <_start@@Base+0xe37a>
  4145b5:	mov    rdx,QWORD PTR [rbp-0x48]
  4145b9:	mov    rcx,QWORD PTR [rbp-0x40]
  4145bd:	mov    rax,QWORD PTR [rbp-0x38]
  4145c1:	mov    rsi,rcx
  4145c4:	mov    rdi,rax
  4145c7:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4145cc:	mov    QWORD PTR [rbp-0x40],rax
  4145d0:	jmp    41460a <_start@@Base+0xe37a>
  4145d2:	mov    rdx,QWORD PTR [rbp-0x48]
  4145d6:	mov    rcx,QWORD PTR [rbp-0x40]
  4145da:	mov    rax,QWORD PTR [rbp-0x38]
  4145de:	mov    rsi,rcx
  4145e1:	mov    rdi,rax
  4145e4:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4145e9:	mov    QWORD PTR [rbp-0x40],rax
  4145ed:	jmp    41460a <_start@@Base+0xe37a>
  4145ef:	mov    rdx,QWORD PTR [rbp-0x48]
  4145f3:	mov    rcx,QWORD PTR [rbp-0x40]
  4145f7:	mov    rax,QWORD PTR [rbp-0x38]
  4145fb:	mov    rsi,rcx
  4145fe:	mov    rdi,rax
  414601:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  414606:	mov    QWORD PTR [rbp-0x40],rax
  41460a:	lea    rcx,[rbp-0x24]
  41460e:	mov    rdx,QWORD PTR [rbp-0x48]
  414612:	mov    rsi,QWORD PTR [rbp-0x40]
  414616:	mov    rax,QWORD PTR [rbp-0x38]
  41461a:	mov    rdi,rax
  41461d:	call   406a06 <_start@@Base+0x776>
  414622:	mov    QWORD PTR [rbp-0x40],rax
  414626:	mov    eax,DWORD PTR [rbp-0x24]
  414629:	test   eax,eax
  41462b:	jne    41445f <_start@@Base+0xe1cf>
  414631:	mov    rax,QWORD PTR [rbp-0x40]
  414635:	jmp    414655 <_start@@Base+0xe3c5>
  414637:	nop
  414638:	endbr64 
  41463c:	mov    rdx,QWORD PTR [rbp-0x48]
  414640:	mov    rsi,QWORD PTR [rbp-0x40]
  414644:	mov    rax,QWORD PTR [rbp-0x38]
  414648:	mov    ecx,0x21
  41464d:	mov    rdi,rax
  414650:	call   427257 <flatcc_json_parser_set_error@@Base>
  414655:	mov    rdi,QWORD PTR [rbp-0x8]
  414659:	xor    rdi,QWORD PTR fs:0x28
  414662:	je     414669 <_start@@Base+0xe3d9>
  414664:	call   4061a0 <__stack_chk_fail@plt>
  414669:	leave  
  41466a:	ret    
  41466b:	endbr64 
  41466f:	push   rbp
  414670:	mov    rbp,rsp
  414673:	sub    rsp,0x30
  414677:	mov    QWORD PTR [rbp-0x18],rdi
  41467b:	mov    QWORD PTR [rbp-0x20],rsi
  41467f:	mov    QWORD PTR [rbp-0x28],rdx
  414683:	mov    QWORD PTR [rbp-0x30],rcx
  414687:	mov    rax,QWORD PTR [rbp-0x30]
  41468b:	mov    DWORD PTR [rax],0x0
  414691:	mov    rax,QWORD PTR [rbp-0x18]
  414695:	mov    rax,QWORD PTR [rax]
  414698:	mov    edx,0x2
  41469d:	mov    esi,0x2
  4146a2:	mov    rdi,rax
  4146a5:	call   41d6fb <flatcc_builder_start_struct@@Base>
  4146aa:	mov    QWORD PTR [rbp-0x8],rax
  4146ae:	cmp    QWORD PTR [rbp-0x8],0x0
  4146b3:	je     414702 <_start@@Base+0xe472>
  4146b5:	mov    rcx,QWORD PTR [rbp-0x8]
  4146b9:	mov    rdx,QWORD PTR [rbp-0x28]
  4146bd:	mov    rsi,QWORD PTR [rbp-0x20]
  4146c1:	mov    rax,QWORD PTR [rbp-0x18]
  4146c5:	mov    rdi,rax
  4146c8:	call   414413 <_start@@Base+0xe183>
  4146cd:	mov    QWORD PTR [rbp-0x20],rax
  4146d1:	mov    rax,QWORD PTR [rbp-0x20]
  4146d5:	cmp    rax,QWORD PTR [rbp-0x28]
  4146d9:	je     414705 <_start@@Base+0xe475>
  4146db:	mov    rax,QWORD PTR [rbp-0x18]
  4146df:	mov    rax,QWORD PTR [rax]
  4146e2:	mov    rdi,rax
  4146e5:	call   41d77d <flatcc_builder_end_struct@@Base>
  4146ea:	mov    edx,eax
  4146ec:	mov    rax,QWORD PTR [rbp-0x30]
  4146f0:	mov    DWORD PTR [rax],edx
  4146f2:	mov    rax,QWORD PTR [rbp-0x30]
  4146f6:	mov    eax,DWORD PTR [rax]
  4146f8:	test   eax,eax
  4146fa:	je     414705 <_start@@Base+0xe475>
  4146fc:	mov    rax,QWORD PTR [rbp-0x20]
  414700:	jmp    41471f <_start@@Base+0xe48f>
  414702:	nop
  414703:	jmp    414706 <_start@@Base+0xe476>
  414705:	nop
  414706:	mov    rdx,QWORD PTR [rbp-0x28]
  41470a:	mov    rsi,QWORD PTR [rbp-0x20]
  41470e:	mov    rax,QWORD PTR [rbp-0x18]
  414712:	mov    ecx,0x21
  414717:	mov    rdi,rax
  41471a:	call   427257 <flatcc_json_parser_set_error@@Base>
  41471f:	leave  
  414720:	ret    
  414721:	endbr64 
  414725:	push   rbp
  414726:	mov    rbp,rsp
  414729:	sub    rsp,0x50
  41472d:	mov    QWORD PTR [rbp-0x38],rdi
  414731:	mov    QWORD PTR [rbp-0x40],rsi
  414735:	mov    QWORD PTR [rbp-0x48],rdx
  414739:	mov    QWORD PTR [rbp-0x50],rcx
  41473d:	mov    rax,QWORD PTR fs:0x28
  414746:	mov    QWORD PTR [rbp-0x8],rax
  41474a:	xor    eax,eax
  41474c:	lea    rcx,[rbp-0x28]
  414750:	mov    rdx,QWORD PTR [rbp-0x48]
  414754:	mov    rsi,QWORD PTR [rbp-0x40]
  414758:	mov    rax,QWORD PTR [rbp-0x38]
  41475c:	mov    rdi,rax
  41475f:	call   406949 <_start@@Base+0x6b9>
  414764:	mov    QWORD PTR [rbp-0x40],rax
  414768:	jmp    414931 <_start@@Base+0xe6a1>
  41476d:	mov    rdx,QWORD PTR [rbp-0x48]
  414771:	mov    rcx,QWORD PTR [rbp-0x40]
  414775:	mov    rax,QWORD PTR [rbp-0x38]
  414779:	mov    rsi,rcx
  41477c:	mov    rdi,rax
  41477f:	call   4066e9 <_start@@Base+0x459>
  414784:	mov    QWORD PTR [rbp-0x40],rax
  414788:	mov    rdx,QWORD PTR [rbp-0x48]
  41478c:	mov    rax,QWORD PTR [rbp-0x40]
  414790:	mov    rsi,rdx
  414793:	mov    rdi,rax
  414796:	call   406853 <_start@@Base+0x5c3>
  41479b:	mov    QWORD PTR [rbp-0x20],rax
  41479f:	movabs rax,0x626f6f6b735f7265
  4147a9:	cmp    QWORD PTR [rbp-0x20],rax
  4147ad:	jne    4148fa <_start@@Base+0xe66a>
  4147b3:	add    QWORD PTR [rbp-0x40],0x8
  4147b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4147bc:	mov    rax,QWORD PTR [rbp-0x40]
  4147c0:	mov    rsi,rdx
  4147c3:	mov    rdi,rax
  4147c6:	call   406853 <_start@@Base+0x5c3>
  4147cb:	mov    QWORD PTR [rbp-0x20],rax
  4147cf:	movabs rax,0xffff000000000000
  4147d9:	and    rax,QWORD PTR [rbp-0x20]
  4147dd:	mov    rdx,rax
  4147e0:	movabs rax,0x6164000000000000
  4147ea:	cmp    rdx,rax
  4147ed:	jne    4148dd <_start@@Base+0xe64d>
  4147f3:	mov    rax,QWORD PTR [rbp-0x40]
  4147f7:	mov    QWORD PTR [rbp-0x18],rax
  4147fb:	mov    rdx,QWORD PTR [rbp-0x48]
  4147ff:	mov    rsi,QWORD PTR [rbp-0x18]
  414803:	mov    rax,QWORD PTR [rbp-0x38]
  414807:	mov    ecx,0x2
  41480c:	mov    rdi,rax
  41480f:	call   406d3f <_start@@Base+0xaaf>
  414814:	mov    QWORD PTR [rbp-0x40],rax
  414818:	mov    rax,QWORD PTR [rbp-0x18]
  41481c:	cmp    rax,QWORD PTR [rbp-0x40]
  414820:	je     4148c0 <_start@@Base+0xe630>
  414826:	mov    DWORD PTR [rbp-0x24],0x0
  41482d:	mov    rax,QWORD PTR [rbp-0x50]
  414831:	mov    QWORD PTR [rbp-0x10],rax
  414835:	mov    rax,QWORD PTR [rbp-0x40]
  414839:	mov    QWORD PTR [rbp-0x18],rax
  41483d:	lea    rcx,[rbp-0x24]
  414841:	mov    rdx,QWORD PTR [rbp-0x48]
  414845:	mov    rsi,QWORD PTR [rbp-0x18]
  414849:	mov    rax,QWORD PTR [rbp-0x38]
  41484d:	mov    rdi,rax
  414850:	call   4077b0 <_start@@Base+0x1520>
  414855:	mov    QWORD PTR [rbp-0x40],rax
  414859:	mov    rax,QWORD PTR [rbp-0x18]
  41485d:	cmp    rax,QWORD PTR [rbp-0x40]
  414861:	jne    4148ad <_start@@Base+0xe61d>
  414863:	mov    rax,QWORD PTR [rbp-0x40]
  414867:	mov    QWORD PTR [rbp-0x18],rax
  41486b:	lea    rcx,[rbp-0x24]
  41486f:	mov    rdx,QWORD PTR [rbp-0x48]
  414873:	mov    rsi,QWORD PTR [rbp-0x18]
  414877:	mov    rax,QWORD PTR [rbp-0x38]
  41487b:	mov    r8,rcx
  41487e:	lea    rcx,[rip+0x310bb]        # 445940 <__data_start@@Base+0x880>
  414885:	mov    rdi,rax
  414888:	call   4081c4 <_start@@Base+0x1f34>
  41488d:	mov    QWORD PTR [rbp-0x40],rax
  414891:	mov    rax,QWORD PTR [rbp-0x40]
  414895:	cmp    rax,QWORD PTR [rbp-0x18]
  414899:	je     414942 <_start@@Base+0xe6b2>
  41489f:	mov    rax,QWORD PTR [rbp-0x40]
  4148a3:	cmp    rax,QWORD PTR [rbp-0x48]
  4148a7:	je     414942 <_start@@Base+0xe6b2>
  4148ad:	mov    edx,DWORD PTR [rbp-0x24]
  4148b0:	mov    rax,QWORD PTR [rbp-0x10]
  4148b4:	mov    esi,edx
  4148b6:	mov    rdi,rax
  4148b9:	call   4064c3 <_start@@Base+0x233>
  4148be:	jmp    414915 <_start@@Base+0xe685>
  4148c0:	mov    rdx,QWORD PTR [rbp-0x48]
  4148c4:	mov    rcx,QWORD PTR [rbp-0x40]
  4148c8:	mov    rax,QWORD PTR [rbp-0x38]
  4148cc:	mov    rsi,rcx
  4148cf:	mov    rdi,rax
  4148d2:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4148d7:	mov    QWORD PTR [rbp-0x40],rax
  4148db:	jmp    414915 <_start@@Base+0xe685>
  4148dd:	mov    rdx,QWORD PTR [rbp-0x48]
  4148e1:	mov    rcx,QWORD PTR [rbp-0x40]
  4148e5:	mov    rax,QWORD PTR [rbp-0x38]
  4148e9:	mov    rsi,rcx
  4148ec:	mov    rdi,rax
  4148ef:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4148f4:	mov    QWORD PTR [rbp-0x40],rax
  4148f8:	jmp    414915 <_start@@Base+0xe685>
  4148fa:	mov    rdx,QWORD PTR [rbp-0x48]
  4148fe:	mov    rcx,QWORD PTR [rbp-0x40]
  414902:	mov    rax,QWORD PTR [rbp-0x38]
  414906:	mov    rsi,rcx
  414909:	mov    rdi,rax
  41490c:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  414911:	mov    QWORD PTR [rbp-0x40],rax
  414915:	lea    rcx,[rbp-0x28]
  414919:	mov    rdx,QWORD PTR [rbp-0x48]
  41491d:	mov    rsi,QWORD PTR [rbp-0x40]
  414921:	mov    rax,QWORD PTR [rbp-0x38]
  414925:	mov    rdi,rax
  414928:	call   406a06 <_start@@Base+0x776>
  41492d:	mov    QWORD PTR [rbp-0x40],rax
  414931:	mov    eax,DWORD PTR [rbp-0x28]
  414934:	test   eax,eax
  414936:	jne    41476d <_start@@Base+0xe4dd>
  41493c:	mov    rax,QWORD PTR [rbp-0x40]
  414940:	jmp    414960 <_start@@Base+0xe6d0>
  414942:	nop
  414943:	endbr64 
  414947:	mov    rdx,QWORD PTR [rbp-0x48]
  41494b:	mov    rsi,QWORD PTR [rbp-0x40]
  41494f:	mov    rax,QWORD PTR [rbp-0x38]
  414953:	mov    ecx,0x21
  414958:	mov    rdi,rax
  41495b:	call   427257 <flatcc_json_parser_set_error@@Base>
  414960:	mov    rdi,QWORD PTR [rbp-0x8]
  414964:	xor    rdi,QWORD PTR fs:0x28
  41496d:	je     414974 <_start@@Base+0xe6e4>
  41496f:	call   4061a0 <__stack_chk_fail@plt>
  414974:	leave  
  414975:	ret    
  414976:	endbr64 
  41497a:	push   rbp
  41497b:	mov    rbp,rsp
  41497e:	sub    rsp,0x30
  414982:	mov    QWORD PTR [rbp-0x18],rdi
  414986:	mov    QWORD PTR [rbp-0x20],rsi
  41498a:	mov    QWORD PTR [rbp-0x28],rdx
  41498e:	mov    QWORD PTR [rbp-0x30],rcx
  414992:	mov    rax,QWORD PTR [rbp-0x30]
  414996:	mov    DWORD PTR [rax],0x0
  41499c:	mov    rax,QWORD PTR [rbp-0x18]
  4149a0:	mov    rax,QWORD PTR [rax]
  4149a3:	mov    edx,0x4
  4149a8:	mov    esi,0x4
  4149ad:	mov    rdi,rax
  4149b0:	call   41d6fb <flatcc_builder_start_struct@@Base>
  4149b5:	mov    QWORD PTR [rbp-0x8],rax
  4149b9:	cmp    QWORD PTR [rbp-0x8],0x0
  4149be:	je     414a0d <_start@@Base+0xe77d>
  4149c0:	mov    rcx,QWORD PTR [rbp-0x8]
  4149c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4149c8:	mov    rsi,QWORD PTR [rbp-0x20]
  4149cc:	mov    rax,QWORD PTR [rbp-0x18]
  4149d0:	mov    rdi,rax
  4149d3:	call   414721 <_start@@Base+0xe491>
  4149d8:	mov    QWORD PTR [rbp-0x20],rax
  4149dc:	mov    rax,QWORD PTR [rbp-0x20]
  4149e0:	cmp    rax,QWORD PTR [rbp-0x28]
  4149e4:	je     414a10 <_start@@Base+0xe780>
  4149e6:	mov    rax,QWORD PTR [rbp-0x18]
  4149ea:	mov    rax,QWORD PTR [rax]
  4149ed:	mov    rdi,rax
  4149f0:	call   41d77d <flatcc_builder_end_struct@@Base>
  4149f5:	mov    edx,eax
  4149f7:	mov    rax,QWORD PTR [rbp-0x30]
  4149fb:	mov    DWORD PTR [rax],edx
  4149fd:	mov    rax,QWORD PTR [rbp-0x30]
  414a01:	mov    eax,DWORD PTR [rax]
  414a03:	test   eax,eax
  414a05:	je     414a10 <_start@@Base+0xe780>
  414a07:	mov    rax,QWORD PTR [rbp-0x20]
  414a0b:	jmp    414a2a <_start@@Base+0xe79a>
  414a0d:	nop
  414a0e:	jmp    414a11 <_start@@Base+0xe781>
  414a10:	nop
  414a11:	mov    rdx,QWORD PTR [rbp-0x28]
  414a15:	mov    rsi,QWORD PTR [rbp-0x20]
  414a19:	mov    rax,QWORD PTR [rbp-0x18]
  414a1d:	mov    ecx,0x21
  414a22:	mov    rdi,rax
  414a25:	call   427257 <flatcc_json_parser_set_error@@Base>
  414a2a:	leave  
  414a2b:	ret    
  414a2c:	endbr64 
  414a30:	push   rbp
  414a31:	mov    rbp,rsp
  414a34:	sub    rsp,0x30
  414a38:	mov    QWORD PTR [rbp-0x8],rdi
  414a3c:	mov    QWORD PTR [rbp-0x10],rsi
  414a40:	mov    QWORD PTR [rbp-0x18],rdx
  414a44:	mov    eax,ecx
  414a46:	mov    QWORD PTR [rbp-0x28],r8
  414a4a:	mov    BYTE PTR [rbp-0x1c],al
  414a4d:	mov    rax,QWORD PTR [rbp-0x28]
  414a51:	mov    DWORD PTR [rax],0x0
  414a57:	movzx  eax,BYTE PTR [rbp-0x1c]
  414a5b:	cmp    eax,0x9
  414a5e:	je     414afc <_start@@Base+0xe86c>
  414a64:	cmp    eax,0x9
  414a67:	jg     414a7c <_start@@Base+0xe7ec>
  414a69:	cmp    eax,0x2
  414a6c:	je     414aba <_start@@Base+0xe82a>
  414a6e:	cmp    eax,0x8
  414a71:	je     414adb <_start@@Base+0xe84b>
  414a73:	test   eax,eax
  414a75:	je     414a9e <_start@@Base+0xe80e>
  414a77:	jmp    414b77 <_start@@Base+0xe8e7>
  414a7c:	cmp    eax,0xb
  414a7f:	je     414b3b <_start@@Base+0xe8ab>
  414a85:	cmp    eax,0xb
  414a88:	jl     414b1d <_start@@Base+0xe88d>
  414a8e:	cmp    eax,0xff
  414a93:	je     414b59 <_start@@Base+0xe8c9>
  414a99:	jmp    414b77 <_start@@Base+0xe8e7>
  414a9e:	mov    rdx,QWORD PTR [rbp-0x18]
  414aa2:	mov    rcx,QWORD PTR [rbp-0x10]
  414aa6:	mov    rax,QWORD PTR [rbp-0x8]
  414aaa:	mov    rsi,rcx
  414aad:	mov    rdi,rax
  414ab0:	call   407371 <_start@@Base+0x10e1>
  414ab5:	jmp    414bf3 <_start@@Base+0xe963>
  414aba:	mov    rcx,QWORD PTR [rbp-0x28]
  414abe:	mov    rdx,QWORD PTR [rbp-0x18]
  414ac2:	mov    rsi,QWORD PTR [rbp-0x10]
  414ac6:	mov    rax,QWORD PTR [rbp-0x8]
  414aca:	mov    rdi,rax
  414acd:	call   4140d9 <_start@@Base+0xde49>
  414ad2:	mov    QWORD PTR [rbp-0x10],rax
  414ad6:	jmp    414bb9 <_start@@Base+0xe929>
  414adb:	mov    rcx,QWORD PTR [rbp-0x28]
  414adf:	mov    rdx,QWORD PTR [rbp-0x18]
  414ae3:	mov    rsi,QWORD PTR [rbp-0x10]
  414ae7:	mov    rax,QWORD PTR [rbp-0x8]
  414aeb:	mov    rdi,rax
  414aee:	call   41466b <_start@@Base+0xe3db>
  414af3:	mov    QWORD PTR [rbp-0x10],rax
  414af7:	jmp    414bb9 <_start@@Base+0xe929>
  414afc:	mov    rcx,QWORD PTR [rbp-0x28]
  414b00:	mov    rdx,QWORD PTR [rbp-0x18]
  414b04:	mov    rsi,QWORD PTR [rbp-0x10]
  414b08:	mov    rax,QWORD PTR [rbp-0x8]
  414b0c:	mov    rdi,rax
  414b0f:	call   414976 <_start@@Base+0xe6e6>
  414b14:	mov    QWORD PTR [rbp-0x10],rax
  414b18:	jmp    414bb9 <_start@@Base+0xe929>
  414b1d:	mov    rcx,QWORD PTR [rbp-0x28]
  414b21:	mov    rdx,QWORD PTR [rbp-0x18]
  414b25:	mov    rsi,QWORD PTR [rbp-0x10]
  414b29:	mov    rax,QWORD PTR [rbp-0x8]
  414b2d:	mov    rdi,rax
  414b30:	call   414976 <_start@@Base+0xe6e6>
  414b35:	mov    QWORD PTR [rbp-0x10],rax
  414b39:	jmp    414bb9 <_start@@Base+0xe929>
  414b3b:	mov    rcx,QWORD PTR [rbp-0x28]
  414b3f:	mov    rdx,QWORD PTR [rbp-0x18]
  414b43:	mov    rsi,QWORD PTR [rbp-0x10]
  414b47:	mov    rax,QWORD PTR [rbp-0x8]
  414b4b:	mov    rdi,rax
  414b4e:	call   428c7d <flatcc_json_parser_build_string@@Base>
  414b53:	mov    QWORD PTR [rbp-0x10],rax
  414b57:	jmp    414bb9 <_start@@Base+0xe929>
  414b59:	mov    rcx,QWORD PTR [rbp-0x28]
  414b5d:	mov    rdx,QWORD PTR [rbp-0x18]
  414b61:	mov    rsi,QWORD PTR [rbp-0x10]
  414b65:	mov    rax,QWORD PTR [rbp-0x8]
  414b69:	mov    rdi,rax
  414b6c:	call   428c7d <flatcc_json_parser_build_string@@Base>
  414b71:	mov    QWORD PTR [rbp-0x10],rax
  414b75:	jmp    414bb9 <_start@@Base+0xe929>
  414b77:	mov    rax,QWORD PTR [rbp-0x8]
  414b7b:	mov    eax,DWORD PTR [rax+0x10]
  414b7e:	and    eax,0x1
  414b81:	test   eax,eax
  414b83:	jne    414ba0 <_start@@Base+0xe910>
  414b85:	mov    rdx,QWORD PTR [rbp-0x18]
  414b89:	mov    rsi,QWORD PTR [rbp-0x10]
  414b8d:	mov    rax,QWORD PTR [rbp-0x8]
  414b91:	mov    ecx,0xf
  414b96:	mov    rdi,rax
  414b99:	call   427257 <flatcc_json_parser_set_error@@Base>
  414b9e:	jmp    414bf3 <_start@@Base+0xe963>
  414ba0:	mov    rdx,QWORD PTR [rbp-0x18]
  414ba4:	mov    rcx,QWORD PTR [rbp-0x10]
  414ba8:	mov    rax,QWORD PTR [rbp-0x8]
  414bac:	mov    rsi,rcx
  414baf:	mov    rdi,rax
  414bb2:	call   42825c <flatcc_json_parser_generic_json@@Base>
  414bb7:	jmp    414bf3 <_start@@Base+0xe963>
  414bb9:	mov    rax,QWORD PTR [rbp-0x8]
  414bbd:	mov    eax,DWORD PTR [rax+0x1c]
  414bc0:	test   eax,eax
  414bc2:	je     414bca <_start@@Base+0xe93a>
  414bc4:	mov    rax,QWORD PTR [rbp-0x10]
  414bc8:	jmp    414bf3 <_start@@Base+0xe963>
  414bca:	mov    rax,QWORD PTR [rbp-0x28]
  414bce:	mov    eax,DWORD PTR [rax]
  414bd0:	test   eax,eax
  414bd2:	jne    414bef <_start@@Base+0xe95f>
  414bd4:	mov    rdx,QWORD PTR [rbp-0x18]
  414bd8:	mov    rsi,QWORD PTR [rbp-0x10]
  414bdc:	mov    rax,QWORD PTR [rbp-0x8]
  414be0:	mov    ecx,0x21
  414be5:	mov    rdi,rax
  414be8:	call   427257 <flatcc_json_parser_set_error@@Base>
  414bed:	jmp    414bf3 <_start@@Base+0xe963>
  414bef:	mov    rax,QWORD PTR [rbp-0x10]
  414bf3:	leave  
  414bf4:	ret    
  414bf5:	endbr64 
  414bf9:	push   rbp
  414bfa:	mov    rbp,rsp
  414bfd:	mov    eax,edi
  414bff:	mov    BYTE PTR [rbp-0x4],al
  414c02:	movzx  eax,BYTE PTR [rbp-0x4]
  414c06:	cmp    eax,0x9
  414c09:	je     414c48 <_start@@Base+0xe9b8>
  414c0b:	cmp    eax,0x9
  414c0e:	jg     414c20 <_start@@Base+0xe990>
  414c10:	cmp    eax,0x2
  414c13:	je     414c3a <_start@@Base+0xe9aa>
  414c15:	cmp    eax,0x8
  414c18:	je     414c41 <_start@@Base+0xe9b1>
  414c1a:	test   eax,eax
  414c1c:	je     414c33 <_start@@Base+0xe9a3>
  414c1e:	jmp    414c64 <_start@@Base+0xe9d4>
  414c20:	cmp    eax,0xb
  414c23:	je     414c56 <_start@@Base+0xe9c6>
  414c25:	cmp    eax,0xb
  414c28:	jl     414c4f <_start@@Base+0xe9bf>
  414c2a:	cmp    eax,0xff
  414c2f:	je     414c5d <_start@@Base+0xe9cd>
  414c31:	jmp    414c64 <_start@@Base+0xe9d4>
  414c33:	mov    eax,0x1
  414c38:	jmp    414c69 <_start@@Base+0xe9d9>
  414c3a:	mov    eax,0x1
  414c3f:	jmp    414c69 <_start@@Base+0xe9d9>
  414c41:	mov    eax,0x1
  414c46:	jmp    414c69 <_start@@Base+0xe9d9>
  414c48:	mov    eax,0x1
  414c4d:	jmp    414c69 <_start@@Base+0xe9d9>
  414c4f:	mov    eax,0x1
  414c54:	jmp    414c69 <_start@@Base+0xe9d9>
  414c56:	mov    eax,0x1
  414c5b:	jmp    414c69 <_start@@Base+0xe9d9>
  414c5d:	mov    eax,0x1
  414c62:	jmp    414c69 <_start@@Base+0xe9d9>
  414c64:	mov    eax,0x0
  414c69:	pop    rbp
  414c6a:	ret    
  414c6b:	endbr64 
  414c6f:	push   rbp
  414c70:	mov    rbp,rsp
  414c73:	sub    rsp,0x50
  414c77:	mov    QWORD PTR [rbp-0x28],rdi
  414c7b:	mov    QWORD PTR [rbp-0x30],rsi
  414c7f:	mov    QWORD PTR [rbp-0x38],rdx
  414c83:	mov    QWORD PTR [rbp-0x40],rcx
  414c87:	mov    QWORD PTR [rbp-0x48],r8
  414c8b:	mov    QWORD PTR [rbp-0x50],r9
  414c8f:	mov    rax,QWORD PTR [rbp-0x30]
  414c93:	mov    QWORD PTR [rbp-0x18],rax
  414c97:	mov    rdx,QWORD PTR [rbp-0x38]
  414c9b:	mov    rax,QWORD PTR [rbp-0x30]
  414c9f:	mov    rsi,rdx
  414ca2:	mov    rdi,rax
  414ca5:	call   406853 <_start@@Base+0x5c3>
  414caa:	mov    QWORD PTR [rbp-0x10],rax
  414cae:	movabs rax,0x4e4f4e44ffffffff
  414cb8:	cmp    QWORD PTR [rbp-0x10],rax
  414cbc:	ja     414e3f <_start@@Base+0xebaf>
  414cc2:	movabs rax,0x426f6f6b46616dff
  414ccc:	cmp    QWORD PTR [rbp-0x10],rax
  414cd0:	ja     414d50 <_start@@Base+0xeac0>
  414cd2:	mov    rax,QWORD PTR [rbp-0x10]
  414cd6:	and    rax,0xffffffffff000000
  414cdc:	mov    rdx,rax
  414cdf:	movabs rax,0x42656c6c65000000
  414ce9:	cmp    rdx,rax
  414cec:	jne    414d47 <_start@@Base+0xeab7>
  414cee:	mov    rax,QWORD PTR [rbp-0x30]
  414cf2:	mov    QWORD PTR [rbp-0x8],rax
  414cf6:	mov    rcx,QWORD PTR [rbp-0x50]
  414cfa:	mov    rdx,QWORD PTR [rbp-0x38]
  414cfe:	mov    rsi,QWORD PTR [rbp-0x8]
  414d02:	mov    rax,QWORD PTR [rbp-0x28]
  414d06:	mov    r8,rcx
  414d09:	mov    ecx,0x5
  414d0e:	mov    rdi,rax
  414d11:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414d16:	mov    QWORD PTR [rbp-0x30],rax
  414d1a:	mov    rax,QWORD PTR [rbp-0x30]
  414d1e:	cmp    rax,QWORD PTR [rbp-0x8]
  414d22:	je     414d3e <_start@@Base+0xeaae>
  414d24:	mov    rax,QWORD PTR [rbp-0x48]
  414d28:	mov    QWORD PTR [rax],0x9
  414d2f:	mov    rax,QWORD PTR [rbp-0x40]
  414d33:	mov    DWORD PTR [rax],0x0
  414d39:	jmp    415039 <_start@@Base+0xeda9>
  414d3e:	mov    rax,QWORD PTR [rbp-0x18]
  414d42:	jmp    41503d <_start@@Base+0xedad>
  414d47:	mov    rax,QWORD PTR [rbp-0x18]
  414d4b:	jmp    41503d <_start@@Base+0xedad>
  414d50:	mov    rax,QWORD PTR [rbp-0x10]
  414d54:	and    rax,0xffffffffff000000
  414d5a:	mov    rdx,rax
  414d5d:	movabs rax,0x4d754c616e000000
  414d67:	cmp    rdx,rax
  414d6a:	jne    414dc5 <_start@@Base+0xeb35>
  414d6c:	mov    rax,QWORD PTR [rbp-0x30]
  414d70:	mov    QWORD PTR [rbp-0x8],rax
  414d74:	mov    rcx,QWORD PTR [rbp-0x50]
  414d78:	mov    rdx,QWORD PTR [rbp-0x38]
  414d7c:	mov    rsi,QWORD PTR [rbp-0x8]
  414d80:	mov    rax,QWORD PTR [rbp-0x28]
  414d84:	mov    r8,rcx
  414d87:	mov    ecx,0x5
  414d8c:	mov    rdi,rax
  414d8f:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414d94:	mov    QWORD PTR [rbp-0x30],rax
  414d98:	mov    rax,QWORD PTR [rbp-0x30]
  414d9c:	cmp    rax,QWORD PTR [rbp-0x8]
  414da0:	je     414dbc <_start@@Base+0xeb2c>
  414da2:	mov    rax,QWORD PTR [rbp-0x48]
  414da6:	mov    QWORD PTR [rax],0x2
  414dad:	mov    rax,QWORD PTR [rbp-0x40]
  414db1:	mov    DWORD PTR [rax],0x0
  414db7:	jmp    415039 <_start@@Base+0xeda9>
  414dbc:	mov    rax,QWORD PTR [rbp-0x18]
  414dc0:	jmp    41503d <_start@@Base+0xedad>
  414dc5:	mov    rax,QWORD PTR [rbp-0x10]
  414dc9:	mov    al,0x0
  414dcb:	mov    rdx,rax
  414dce:	movabs rax,0x426f6f6b46616e00
  414dd8:	cmp    rdx,rax
  414ddb:	jne    414e36 <_start@@Base+0xeba6>
  414ddd:	mov    rax,QWORD PTR [rbp-0x30]
  414de1:	mov    QWORD PTR [rbp-0x8],rax
  414de5:	mov    rcx,QWORD PTR [rbp-0x50]
  414de9:	mov    rdx,QWORD PTR [rbp-0x38]
  414ded:	mov    rsi,QWORD PTR [rbp-0x8]
  414df1:	mov    rax,QWORD PTR [rbp-0x28]
  414df5:	mov    r8,rcx
  414df8:	mov    ecx,0x7
  414dfd:	mov    rdi,rax
  414e00:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414e05:	mov    QWORD PTR [rbp-0x30],rax
  414e09:	mov    rax,QWORD PTR [rbp-0x30]
  414e0d:	cmp    rax,QWORD PTR [rbp-0x8]
  414e11:	je     414e2d <_start@@Base+0xeb9d>
  414e13:	mov    rax,QWORD PTR [rbp-0x48]
  414e17:	mov    QWORD PTR [rax],0xa
  414e1e:	mov    rax,QWORD PTR [rbp-0x40]
  414e22:	mov    DWORD PTR [rax],0x0
  414e28:	jmp    415039 <_start@@Base+0xeda9>
  414e2d:	mov    rax,QWORD PTR [rbp-0x18]
  414e31:	jmp    41503d <_start@@Base+0xedad>
  414e36:	mov    rax,QWORD PTR [rbp-0x18]
  414e3a:	jmp    41503d <_start@@Base+0xedad>
  414e3f:	movabs rax,0x4f74686571ffffff
  414e49:	cmp    QWORD PTR [rbp-0x10],rax
  414e4d:	ja     414ed5 <_start@@Base+0xec45>
  414e53:	movabs rax,0xffffffff00000000
  414e5d:	and    rax,QWORD PTR [rbp-0x10]
  414e61:	mov    rdx,rax
  414e64:	movabs rax,0x4e4f4e4500000000
  414e6e:	cmp    rdx,rax
  414e71:	jne    414ecc <_start@@Base+0xec3c>
  414e73:	mov    rax,QWORD PTR [rbp-0x30]
  414e77:	mov    QWORD PTR [rbp-0x8],rax
  414e7b:	mov    rcx,QWORD PTR [rbp-0x50]
  414e7f:	mov    rdx,QWORD PTR [rbp-0x38]
  414e83:	mov    rsi,QWORD PTR [rbp-0x8]
  414e87:	mov    rax,QWORD PTR [rbp-0x28]
  414e8b:	mov    r8,rcx
  414e8e:	mov    ecx,0x4
  414e93:	mov    rdi,rax
  414e96:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414e9b:	mov    QWORD PTR [rbp-0x30],rax
  414e9f:	mov    rax,QWORD PTR [rbp-0x30]
  414ea3:	cmp    rax,QWORD PTR [rbp-0x8]
  414ea7:	je     414ec3 <_start@@Base+0xec33>
  414ea9:	mov    rax,QWORD PTR [rbp-0x48]
  414ead:	mov    QWORD PTR [rax],0x0
  414eb4:	mov    rax,QWORD PTR [rbp-0x40]
  414eb8:	mov    DWORD PTR [rax],0x0
  414ebe:	jmp    415039 <_start@@Base+0xeda9>
  414ec3:	mov    rax,QWORD PTR [rbp-0x18]
  414ec7:	jmp    41503d <_start@@Base+0xedad>
  414ecc:	mov    rax,QWORD PTR [rbp-0x18]
  414ed0:	jmp    41503d <_start@@Base+0xedad>
  414ed5:	movabs rax,0x526170756e7a656b
  414edf:	cmp    QWORD PTR [rbp-0x10],rax
  414ee3:	ja     414f63 <_start@@Base+0xecd3>
  414ee5:	mov    rax,QWORD PTR [rbp-0x10]
  414ee9:	and    rax,0xffffffffff000000
  414eef:	mov    rdx,rax
  414ef2:	movabs rax,0x4f74686572000000
  414efc:	cmp    rdx,rax
  414eff:	jne    414f5a <_start@@Base+0xecca>
  414f01:	mov    rax,QWORD PTR [rbp-0x30]
  414f05:	mov    QWORD PTR [rbp-0x8],rax
  414f09:	mov    rcx,QWORD PTR [rbp-0x50]
  414f0d:	mov    rdx,QWORD PTR [rbp-0x38]
  414f11:	mov    rsi,QWORD PTR [rbp-0x8]
  414f15:	mov    rax,QWORD PTR [rbp-0x28]
  414f19:	mov    r8,rcx
  414f1c:	mov    ecx,0x5
  414f21:	mov    rdi,rax
  414f24:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414f29:	mov    QWORD PTR [rbp-0x30],rax
  414f2d:	mov    rax,QWORD PTR [rbp-0x30]
  414f31:	cmp    rax,QWORD PTR [rbp-0x8]
  414f35:	je     414f51 <_start@@Base+0xecc1>
  414f37:	mov    rax,QWORD PTR [rbp-0x48]
  414f3b:	mov    QWORD PTR [rax],0xb
  414f42:	mov    rax,QWORD PTR [rbp-0x40]
  414f46:	mov    DWORD PTR [rax],0x0
  414f4c:	jmp    415039 <_start@@Base+0xeda9>
  414f51:	mov    rax,QWORD PTR [rbp-0x18]
  414f55:	jmp    41503d <_start@@Base+0xedad>
  414f5a:	mov    rax,QWORD PTR [rbp-0x18]
  414f5e:	jmp    41503d <_start@@Base+0xedad>
  414f63:	mov    rax,QWORD PTR [rbp-0x10]
  414f67:	mov    ax,0x0
  414f6b:	mov    rdx,rax
  414f6e:	movabs rax,0x556e757365640000
  414f78:	cmp    rdx,rax
  414f7b:	jne    414fd0 <_start@@Base+0xed40>
  414f7d:	mov    rax,QWORD PTR [rbp-0x30]
  414f81:	mov    QWORD PTR [rbp-0x8],rax
  414f85:	mov    rcx,QWORD PTR [rbp-0x50]
  414f89:	mov    rdx,QWORD PTR [rbp-0x38]
  414f8d:	mov    rsi,QWORD PTR [rbp-0x8]
  414f91:	mov    rax,QWORD PTR [rbp-0x28]
  414f95:	mov    r8,rcx
  414f98:	mov    ecx,0x6
  414f9d:	mov    rdi,rax
  414fa0:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  414fa5:	mov    QWORD PTR [rbp-0x30],rax
  414fa9:	mov    rax,QWORD PTR [rbp-0x30]
  414fad:	cmp    rax,QWORD PTR [rbp-0x8]
  414fb1:	je     414fca <_start@@Base+0xed3a>
  414fb3:	mov    rax,QWORD PTR [rbp-0x48]
  414fb7:	mov    QWORD PTR [rax],0xff
  414fbe:	mov    rax,QWORD PTR [rbp-0x40]
  414fc2:	mov    DWORD PTR [rax],0x0
  414fc8:	jmp    415039 <_start@@Base+0xeda9>
  414fca:	mov    rax,QWORD PTR [rbp-0x18]
  414fce:	jmp    41503d <_start@@Base+0xedad>
  414fd0:	movabs rax,0x526170756e7a656c
  414fda:	cmp    QWORD PTR [rbp-0x10],rax
  414fde:	jne    415033 <_start@@Base+0xeda3>
  414fe0:	mov    rax,QWORD PTR [rbp-0x30]
  414fe4:	mov    QWORD PTR [rbp-0x8],rax
  414fe8:	mov    rcx,QWORD PTR [rbp-0x50]
  414fec:	mov    rdx,QWORD PTR [rbp-0x38]
  414ff0:	mov    rsi,QWORD PTR [rbp-0x8]
  414ff4:	mov    rax,QWORD PTR [rbp-0x28]
  414ff8:	mov    r8,rcx
  414ffb:	mov    ecx,0x8
  415000:	mov    rdi,rax
  415003:	call   427b22 <flatcc_json_parser_match_constant@@Base>
  415008:	mov    QWORD PTR [rbp-0x30],rax
  41500c:	mov    rax,QWORD PTR [rbp-0x30]
  415010:	cmp    rax,QWORD PTR [rbp-0x8]
  415014:	je     41502d <_start@@Base+0xed9d>
  415016:	mov    rax,QWORD PTR [rbp-0x48]
  41501a:	mov    QWORD PTR [rax],0x8
  415021:	mov    rax,QWORD PTR [rbp-0x40]
  415025:	mov    DWORD PTR [rax],0x0
  41502b:	jmp    415039 <_start@@Base+0xeda9>
  41502d:	mov    rax,QWORD PTR [rbp-0x18]
  415031:	jmp    41503d <_start@@Base+0xedad>
  415033:	mov    rax,QWORD PTR [rbp-0x18]
  415037:	jmp    41503d <_start@@Base+0xedad>
  415039:	mov    rax,QWORD PTR [rbp-0x30]
  41503d:	leave  
  41503e:	ret    
  41503f:	endbr64 
  415043:	push   rbp
  415044:	mov    rbp,rsp
  415047:	sub    rsp,0x50
  41504b:	mov    QWORD PTR [rbp-0x38],rdi
  41504f:	mov    QWORD PTR [rbp-0x40],rsi
  415053:	mov    QWORD PTR [rbp-0x48],rdx
  415057:	mov    QWORD PTR [rbp-0x50],rcx
  41505b:	mov    rax,QWORD PTR fs:0x28
  415064:	mov    QWORD PTR [rbp-0x8],rax
  415068:	xor    eax,eax
  41506a:	mov    rax,QWORD PTR [rbp-0x50]
  41506e:	mov    DWORD PTR [rax],0x0
  415074:	mov    rax,QWORD PTR [rbp-0x38]
  415078:	mov    rax,QWORD PTR [rax]
  41507b:	mov    esi,0xa
  415080:	mov    rdi,rax
  415083:	call   41e233 <flatcc_builder_start_table@@Base>
  415088:	test   eax,eax
  41508a:	jne    415ad0 <_start@@Base+0xf840>
  415090:	lea    rcx,[rbp-0x20]
  415094:	mov    rdx,QWORD PTR [rbp-0x48]
  415098:	mov    rsi,QWORD PTR [rbp-0x40]
  41509c:	mov    rax,QWORD PTR [rbp-0x38]
  4150a0:	mov    r8,rcx
  4150a3:	mov    ecx,0x5
  4150a8:	mov    rdi,rax
  4150ab:	call   428e7c <flatcc_json_parser_prepare_unions@@Base>
  4150b0:	cmp    QWORD PTR [rbp-0x48],rax
  4150b4:	je     415ad3 <_start@@Base+0xf843>
  4150ba:	lea    rcx,[rbp-0x24]
  4150be:	mov    rdx,QWORD PTR [rbp-0x48]
  4150c2:	mov    rsi,QWORD PTR [rbp-0x40]
  4150c6:	mov    rax,QWORD PTR [rbp-0x38]
  4150ca:	mov    rdi,rax
  4150cd:	call   406949 <_start@@Base+0x6b9>
  4150d2:	mov    QWORD PTR [rbp-0x40],rax
  4150d6:	jmp    415a77 <_start@@Base+0xf7e7>
  4150db:	mov    rdx,QWORD PTR [rbp-0x48]
  4150df:	mov    rcx,QWORD PTR [rbp-0x40]
  4150e3:	mov    rax,QWORD PTR [rbp-0x38]
  4150e7:	mov    rsi,rcx
  4150ea:	mov    rdi,rax
  4150ed:	call   4066e9 <_start@@Base+0x459>
  4150f2:	mov    QWORD PTR [rbp-0x40],rax
  4150f6:	mov    rdx,QWORD PTR [rbp-0x48]
  4150fa:	mov    rax,QWORD PTR [rbp-0x40]
  4150fe:	mov    rsi,rdx
  415101:	mov    rdi,rax
  415104:	call   406853 <_start@@Base+0x5c3>
  415109:	mov    QWORD PTR [rbp-0x18],rax
  41510d:	movabs rax,0x6368617261637464
  415117:	cmp    QWORD PTR [rbp-0x18],rax
  41511b:	ja     4154a5 <_start@@Base+0xf215>
  415121:	movabs rax,0x616e7461676f6e69
  41512b:	cmp    QWORD PTR [rbp-0x18],rax
  41512f:	jne    4152d1 <_start@@Base+0xf041>
  415135:	add    QWORD PTR [rbp-0x40],0x8
  41513a:	mov    rdx,QWORD PTR [rbp-0x48]
  41513e:	mov    rax,QWORD PTR [rbp-0x40]
  415142:	mov    rsi,rdx
  415145:	mov    rdi,rax
  415148:	call   406853 <_start@@Base+0x5c3>
  41514d:	mov    QWORD PTR [rbp-0x18],rax
  415151:	mov    rax,QWORD PTR [rbp-0x18]
  415155:	mov    al,0x0
  415157:	mov    rdx,rax
  41515a:	movabs rax,0x73745f7479706500
  415164:	cmp    rdx,rax
  415167:	jne    4151ff <_start@@Base+0xef6f>
  41516d:	mov    rax,QWORD PTR [rbp-0x40]
  415171:	mov    QWORD PTR [rbp-0x10],rax
  415175:	mov    rdx,QWORD PTR [rbp-0x48]
  415179:	mov    rsi,QWORD PTR [rbp-0x10]
  41517d:	mov    rax,QWORD PTR [rbp-0x38]
  415181:	mov    ecx,0x7
  415186:	mov    rdi,rax
  415189:	call   406d3f <_start@@Base+0xaaf>
  41518e:	mov    QWORD PTR [rbp-0x40],rax
  415192:	mov    rax,QWORD PTR [rbp-0x10]
  415196:	cmp    rax,QWORD PTR [rbp-0x40]
  41519a:	je     4151df <_start@@Base+0xef4f>
  41519c:	mov    rdi,QWORD PTR [rbp-0x20]
  4151a0:	mov    rdx,QWORD PTR [rbp-0x48]
  4151a4:	mov    rsi,QWORD PTR [rbp-0x40]
  4151a8:	mov    rax,QWORD PTR [rbp-0x38]
  4151ac:	lea    rcx,[rip+0xfffffffffffff879]        # 414a2c <_start@@Base+0xe79c>
  4151b3:	push   rcx
  4151b4:	lea    rcx,[rip+0x307a5]        # 445960 <__data_start@@Base+0x8a0>
  4151bb:	push   rcx
  4151bc:	mov    r9,rdi
  4151bf:	mov    r8d,0x3
  4151c5:	mov    ecx,0x1
  4151ca:	mov    rdi,rax
  4151cd:	call   42917c <flatcc_json_parser_union_type@@Base>
  4151d2:	add    rsp,0x10
  4151d6:	mov    QWORD PTR [rbp-0x40],rax
  4151da:	jmp    415a5b <_start@@Base+0xf7cb>
  4151df:	mov    rdx,QWORD PTR [rbp-0x48]
  4151e3:	mov    rcx,QWORD PTR [rbp-0x40]
  4151e7:	mov    rax,QWORD PTR [rbp-0x38]
  4151eb:	mov    rsi,rcx
  4151ee:	mov    rdi,rax
  4151f1:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4151f6:	mov    QWORD PTR [rbp-0x40],rax
  4151fa:	jmp    415a5b <_start@@Base+0xf7cb>
  4151ff:	movabs rax,0xffff000000000000
  415209:	and    rax,QWORD PTR [rbp-0x18]
  41520d:	mov    rdx,rax
  415210:	movabs rax,0x7374000000000000
  41521a:	cmp    rdx,rax
  41521d:	jne    4152b1 <_start@@Base+0xf021>
  415223:	mov    rax,QWORD PTR [rbp-0x40]
  415227:	mov    QWORD PTR [rbp-0x10],rax
  41522b:	mov    rdx,QWORD PTR [rbp-0x48]
  41522f:	mov    rsi,QWORD PTR [rbp-0x10]
  415233:	mov    rax,QWORD PTR [rbp-0x38]
  415237:	mov    ecx,0x2
  41523c:	mov    rdi,rax
  41523f:	call   406d3f <_start@@Base+0xaaf>
  415244:	mov    QWORD PTR [rbp-0x40],rax
  415248:	mov    rax,QWORD PTR [rbp-0x10]
  41524c:	cmp    rax,QWORD PTR [rbp-0x40]
  415250:	je     415291 <_start@@Base+0xf001>
  415252:	mov    rdi,QWORD PTR [rbp-0x20]
  415256:	mov    rdx,QWORD PTR [rbp-0x48]
  41525a:	mov    rsi,QWORD PTR [rbp-0x40]
  41525e:	mov    rax,QWORD PTR [rbp-0x38]
  415262:	sub    rsp,0x8
  415266:	lea    rcx,[rip+0xfffffffffffff7bf]        # 414a2c <_start@@Base+0xe79c>
  41526d:	push   rcx
  41526e:	mov    r9,rdi
  415271:	mov    r8d,0x3
  415277:	mov    ecx,0x1
  41527c:	mov    rdi,rax
  41527f:	call   428f9f <flatcc_json_parser_union@@Base>
  415284:	add    rsp,0x10
  415288:	mov    QWORD PTR [rbp-0x40],rax
  41528c:	jmp    415a5b <_start@@Base+0xf7cb>
  415291:	mov    rdx,QWORD PTR [rbp-0x48]
  415295:	mov    rcx,QWORD PTR [rbp-0x40]
  415299:	mov    rax,QWORD PTR [rbp-0x38]
  41529d:	mov    rsi,rcx
  4152a0:	mov    rdi,rax
  4152a3:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4152a8:	mov    QWORD PTR [rbp-0x40],rax
  4152ac:	jmp    415a5b <_start@@Base+0xf7cb>
  4152b1:	mov    rdx,QWORD PTR [rbp-0x48]
  4152b5:	mov    rcx,QWORD PTR [rbp-0x40]
  4152b9:	mov    rax,QWORD PTR [rbp-0x38]
  4152bd:	mov    rsi,rcx
  4152c0:	mov    rdi,rax
  4152c3:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4152c8:	mov    QWORD PTR [rbp-0x40],rax
  4152cc:	jmp    415a5b <_start@@Base+0xf7cb>
  4152d1:	movabs rax,0x63616d656f5f7479
  4152db:	cmp    QWORD PTR [rbp-0x18],rax
  4152df:	jne    4153d7 <_start@@Base+0xf147>
  4152e5:	add    QWORD PTR [rbp-0x40],0x8
  4152ea:	mov    rdx,QWORD PTR [rbp-0x48]
  4152ee:	mov    rax,QWORD PTR [rbp-0x40]
  4152f2:	mov    rsi,rdx
  4152f5:	mov    rdi,rax
  4152f8:	call   406853 <_start@@Base+0x5c3>
  4152fd:	mov    QWORD PTR [rbp-0x18],rax
  415301:	movabs rax,0xffff000000000000
  41530b:	and    rax,QWORD PTR [rbp-0x18]
  41530f:	mov    rdx,rax
  415312:	movabs rax,0x7065000000000000
  41531c:	cmp    rdx,rax
  41531f:	jne    4153b7 <_start@@Base+0xf127>
  415325:	mov    rax,QWORD PTR [rbp-0x40]
  415329:	mov    QWORD PTR [rbp-0x10],rax
  41532d:	mov    rdx,QWORD PTR [rbp-0x48]
  415331:	mov    rsi,QWORD PTR [rbp-0x10]
  415335:	mov    rax,QWORD PTR [rbp-0x38]
  415339:	mov    ecx,0x2
  41533e:	mov    rdi,rax
  415341:	call   406d3f <_start@@Base+0xaaf>
  415346:	mov    QWORD PTR [rbp-0x40],rax
  41534a:	mov    rax,QWORD PTR [rbp-0x10]
  41534e:	cmp    rax,QWORD PTR [rbp-0x40]
  415352:	je     415397 <_start@@Base+0xf107>
  415354:	mov    rdi,QWORD PTR [rbp-0x20]
  415358:	mov    rdx,QWORD PTR [rbp-0x48]
  41535c:	mov    rsi,QWORD PTR [rbp-0x40]
  415360:	mov    rax,QWORD PTR [rbp-0x38]
  415364:	lea    rcx,[rip+0xfffffffffffff6c1]        # 414a2c <_start@@Base+0xe79c>
  41536b:	push   rcx
  41536c:	lea    rcx,[rip+0x3060d]        # 445980 <__data_start@@Base+0x8c0>
  415373:	push   rcx
  415374:	mov    r9,rdi
  415377:	mov    r8d,0x7
  41537d:	mov    ecx,0x3
  415382:	mov    rdi,rax
  415385:	call   42917c <flatcc_json_parser_union_type@@Base>
  41538a:	add    rsp,0x10
  41538e:	mov    QWORD PTR [rbp-0x40],rax
  415392:	jmp    415a5b <_start@@Base+0xf7cb>
  415397:	mov    rdx,QWORD PTR [rbp-0x48]
  41539b:	mov    rcx,QWORD PTR [rbp-0x40]
  41539f:	mov    rax,QWORD PTR [rbp-0x38]
  4153a3:	mov    rsi,rcx
  4153a6:	mov    rdi,rax
  4153a9:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4153ae:	mov    QWORD PTR [rbp-0x40],rax
  4153b2:	jmp    415a5b <_start@@Base+0xf7cb>
  4153b7:	mov    rdx,QWORD PTR [rbp-0x48]
  4153bb:	mov    rcx,QWORD PTR [rbp-0x40]
  4153bf:	mov    rax,QWORD PTR [rbp-0x38]
  4153c3:	mov    rsi,rcx
  4153c6:	mov    rdi,rax
  4153c9:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4153ce:	mov    QWORD PTR [rbp-0x40],rax
  4153d2:	jmp    415a5b <_start@@Base+0xf7cb>
  4153d7:	mov    rax,QWORD PTR [rbp-0x18]
  4153db:	and    rax,0xffffffffff000000
  4153e1:	mov    rdx,rax
  4153e4:	movabs rax,0x63616d656f000000
  4153ee:	cmp    rdx,rax
  4153f1:	jne    415485 <_start@@Base+0xf1f5>
  4153f7:	mov    rax,QWORD PTR [rbp-0x40]
  4153fb:	mov    QWORD PTR [rbp-0x10],rax
  4153ff:	mov    rdx,QWORD PTR [rbp-0x48]
  415403:	mov    rsi,QWORD PTR [rbp-0x10]
  415407:	mov    rax,QWORD PTR [rbp-0x38]
  41540b:	mov    ecx,0x5
  415410:	mov    rdi,rax
  415413:	call   406d3f <_start@@Base+0xaaf>
  415418:	mov    QWORD PTR [rbp-0x40],rax
  41541c:	mov    rax,QWORD PTR [rbp-0x10]
  415420:	cmp    rax,QWORD PTR [rbp-0x40]
  415424:	je     415465 <_start@@Base+0xf1d5>
  415426:	mov    rdi,QWORD PTR [rbp-0x20]
  41542a:	mov    rdx,QWORD PTR [rbp-0x48]
  41542e:	mov    rsi,QWORD PTR [rbp-0x40]
  415432:	mov    rax,QWORD PTR [rbp-0x38]
  415436:	sub    rsp,0x8
  41543a:	lea    rcx,[rip+0xfffffffffffff5eb]        # 414a2c <_start@@Base+0xe79c>
  415441:	push   rcx
  415442:	mov    r9,rdi
  415445:	mov    r8d,0x7
  41544b:	mov    ecx,0x3
  415450:	mov    rdi,rax
  415453:	call   428f9f <flatcc_json_parser_union@@Base>
  415458:	add    rsp,0x10
  41545c:	mov    QWORD PTR [rbp-0x40],rax
  415460:	jmp    415a5b <_start@@Base+0xf7cb>
  415465:	mov    rdx,QWORD PTR [rbp-0x48]
  415469:	mov    rcx,QWORD PTR [rbp-0x40]
  41546d:	mov    rax,QWORD PTR [rbp-0x38]
  415471:	mov    rsi,rcx
  415474:	mov    rdi,rax
  415477:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41547c:	mov    QWORD PTR [rbp-0x40],rax
  415480:	jmp    415a5b <_start@@Base+0xf7cb>
  415485:	mov    rdx,QWORD PTR [rbp-0x48]
  415489:	mov    rcx,QWORD PTR [rbp-0x40]
  41548d:	mov    rax,QWORD PTR [rbp-0x38]
  415491:	mov    rsi,rcx
  415494:	mov    rdi,rax
  415497:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41549c:	mov    QWORD PTR [rbp-0x40],rax
  4154a0:	jmp    415a5b <_start@@Base+0xf7cb>
  4154a5:	movabs rax,0x6d61696e5f636860
  4154af:	cmp    QWORD PTR [rbp-0x18],rax
  4154b3:	ja     415695 <_start@@Base+0xf405>
  4154b9:	movabs rax,0x6368617261637465
  4154c3:	cmp    QWORD PTR [rbp-0x18],rax
  4154c7:	jne    415675 <_start@@Base+0xf3e5>
  4154cd:	add    QWORD PTR [rbp-0x40],0x8
  4154d2:	mov    rdx,QWORD PTR [rbp-0x48]
  4154d6:	mov    rax,QWORD PTR [rbp-0x40]
  4154da:	mov    rsi,rdx
  4154dd:	mov    rdi,rax
  4154e0:	call   406853 <_start@@Base+0x5c3>
  4154e5:	mov    QWORD PTR [rbp-0x18],rax
  4154e9:	mov    rax,QWORD PTR [rbp-0x18]
  4154ed:	mov    al,0x0
  4154ef:	mov    rdx,rax
  4154f2:	movabs rax,0x72735f7479706500
  4154fc:	cmp    rdx,rax
  4154ff:	jne    4155a3 <_start@@Base+0xf313>
  415505:	mov    rax,QWORD PTR [rbp-0x40]
  415509:	mov    QWORD PTR [rbp-0x10],rax
  41550d:	mov    rdx,QWORD PTR [rbp-0x48]
  415511:	mov    rsi,QWORD PTR [rbp-0x10]
  415515:	mov    rax,QWORD PTR [rbp-0x38]
  415519:	mov    ecx,0x7
  41551e:	mov    rdi,rax
  415521:	call   406d3f <_start@@Base+0xaaf>
  415526:	mov    QWORD PTR [rbp-0x40],rax
  41552a:	mov    rax,QWORD PTR [rbp-0x10]
  41552e:	cmp    rax,QWORD PTR [rbp-0x40]
  415532:	je     415583 <_start@@Base+0xf2f3>
  415534:	mov    rdi,QWORD PTR [rbp-0x20]
  415538:	mov    rdx,QWORD PTR [rbp-0x48]
  41553c:	mov    rsi,QWORD PTR [rbp-0x40]
  415540:	mov    rax,QWORD PTR [rbp-0x38]
  415544:	sub    rsp,0x8
  415548:	lea    rcx,[rip+0xfffffffffffff6a6]        # 414bf5 <_start@@Base+0xe965>
  41554f:	push   rcx
  415550:	lea    rcx,[rip+0xfffffffffffff4d5]        # 414a2c <_start@@Base+0xe79c>
  415557:	push   rcx
  415558:	lea    rcx,[rip+0x30441]        # 4459a0 <__data_start@@Base+0x8e0>
  41555f:	push   rcx
  415560:	mov    r9,rdi
  415563:	mov    r8d,0x9
  415569:	mov    ecx,0x4
  41556e:	mov    rdi,rax
  415571:	call   42974b <flatcc_json_parser_union_type_vector@@Base>
  415576:	add    rsp,0x20
  41557a:	mov    QWORD PTR [rbp-0x40],rax
  41557e:	jmp    415a5b <_start@@Base+0xf7cb>
  415583:	mov    rdx,QWORD PTR [rbp-0x48]
  415587:	mov    rcx,QWORD PTR [rbp-0x40]
  41558b:	mov    rax,QWORD PTR [rbp-0x38]
  41558f:	mov    rsi,rcx
  415592:	mov    rdi,rax
  415595:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41559a:	mov    QWORD PTR [rbp-0x40],rax
  41559e:	jmp    415a5b <_start@@Base+0xf7cb>
  4155a3:	movabs rax,0xffff000000000000
  4155ad:	and    rax,QWORD PTR [rbp-0x18]
  4155b1:	mov    rdx,rax
  4155b4:	movabs rax,0x7273000000000000
  4155be:	cmp    rdx,rax
  4155c1:	jne    415655 <_start@@Base+0xf3c5>
  4155c7:	mov    rax,QWORD PTR [rbp-0x40]
  4155cb:	mov    QWORD PTR [rbp-0x10],rax
  4155cf:	mov    rdx,QWORD PTR [rbp-0x48]
  4155d3:	mov    rsi,QWORD PTR [rbp-0x10]
  4155d7:	mov    rax,QWORD PTR [rbp-0x38]
  4155db:	mov    ecx,0x2
  4155e0:	mov    rdi,rax
  4155e3:	call   406d3f <_start@@Base+0xaaf>
  4155e8:	mov    QWORD PTR [rbp-0x40],rax
  4155ec:	mov    rax,QWORD PTR [rbp-0x10]
  4155f0:	cmp    rax,QWORD PTR [rbp-0x40]
  4155f4:	je     415635 <_start@@Base+0xf3a5>
  4155f6:	mov    rdi,QWORD PTR [rbp-0x20]
  4155fa:	mov    rdx,QWORD PTR [rbp-0x48]
  4155fe:	mov    rsi,QWORD PTR [rbp-0x40]
  415602:	mov    rax,QWORD PTR [rbp-0x38]
  415606:	sub    rsp,0x8
  41560a:	lea    rcx,[rip+0xfffffffffffff41b]        # 414a2c <_start@@Base+0xe79c>
  415611:	push   rcx
  415612:	mov    r9,rdi
  415615:	mov    r8d,0x9
  41561b:	mov    ecx,0x4
  415620:	mov    rdi,rax
  415623:	call   4295ff <flatcc_json_parser_union_vector@@Base>
  415628:	add    rsp,0x10
  41562c:	mov    QWORD PTR [rbp-0x40],rax
  415630:	jmp    415a5b <_start@@Base+0xf7cb>
  415635:	mov    rdx,QWORD PTR [rbp-0x48]
  415639:	mov    rcx,QWORD PTR [rbp-0x40]
  41563d:	mov    rax,QWORD PTR [rbp-0x38]
  415641:	mov    rsi,rcx
  415644:	mov    rdi,rax
  415647:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41564c:	mov    QWORD PTR [rbp-0x40],rax
  415650:	jmp    415a5b <_start@@Base+0xf7cb>
  415655:	mov    rdx,QWORD PTR [rbp-0x48]
  415659:	mov    rcx,QWORD PTR [rbp-0x40]
  41565d:	mov    rax,QWORD PTR [rbp-0x38]
  415661:	mov    rsi,rcx
  415664:	mov    rdi,rax
  415667:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41566c:	mov    QWORD PTR [rbp-0x40],rax
  415670:	jmp    415a5b <_start@@Base+0xf7cb>
  415675:	mov    rdx,QWORD PTR [rbp-0x48]
  415679:	mov    rcx,QWORD PTR [rbp-0x40]
  41567d:	mov    rax,QWORD PTR [rbp-0x38]
  415681:	mov    rsi,rcx
  415684:	mov    rdi,rax
  415687:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41568c:	mov    QWORD PTR [rbp-0x40],rax
  415690:	jmp    415a5b <_start@@Base+0xf7cb>
  415695:	movabs rax,0x6d61696e5f636861
  41569f:	cmp    QWORD PTR [rbp-0x18],rax
  4156a3:	jne    415897 <_start@@Base+0xf607>
  4156a9:	add    QWORD PTR [rbp-0x40],0x8
  4156ae:	mov    rdx,QWORD PTR [rbp-0x48]
  4156b2:	mov    rax,QWORD PTR [rbp-0x40]
  4156b6:	mov    rsi,rdx
  4156b9:	mov    rdi,rax
  4156bc:	call   406853 <_start@@Base+0x5c3>
  4156c1:	mov    QWORD PTR [rbp-0x18],rax
  4156c5:	movabs rax,0x7261637465725f74
  4156cf:	cmp    QWORD PTR [rbp-0x18],rax
  4156d3:	jne    4157cb <_start@@Base+0xf53b>
  4156d9:	add    QWORD PTR [rbp-0x40],0x8
  4156de:	mov    rdx,QWORD PTR [rbp-0x48]
  4156e2:	mov    rax,QWORD PTR [rbp-0x40]
  4156e6:	mov    rsi,rdx
  4156e9:	mov    rdi,rax
  4156ec:	call   406853 <_start@@Base+0x5c3>
  4156f1:	mov    QWORD PTR [rbp-0x18],rax
  4156f5:	movabs rax,0xffffff0000000000
  4156ff:	and    rax,QWORD PTR [rbp-0x18]
  415703:	mov    rdx,rax
  415706:	movabs rax,0x7970650000000000
  415710:	cmp    rdx,rax
  415713:	jne    4157ab <_start@@Base+0xf51b>
  415719:	mov    rax,QWORD PTR [rbp-0x40]
  41571d:	mov    QWORD PTR [rbp-0x10],rax
  415721:	mov    rdx,QWORD PTR [rbp-0x48]
  415725:	mov    rsi,QWORD PTR [rbp-0x10]
  415729:	mov    rax,QWORD PTR [rbp-0x38]
  41572d:	mov    ecx,0x3
  415732:	mov    rdi,rax
  415735:	call   406d3f <_start@@Base+0xaaf>
  41573a:	mov    QWORD PTR [rbp-0x40],rax
  41573e:	mov    rax,QWORD PTR [rbp-0x10]
  415742:	cmp    rax,QWORD PTR [rbp-0x40]
  415746:	je     41578b <_start@@Base+0xf4fb>
  415748:	mov    rdi,QWORD PTR [rbp-0x20]
  41574c:	mov    rdx,QWORD PTR [rbp-0x48]
  415750:	mov    rsi,QWORD PTR [rbp-0x40]
  415754:	mov    rax,QWORD PTR [rbp-0x38]
  415758:	lea    rcx,[rip+0xfffffffffffff2cd]        # 414a2c <_start@@Base+0xe79c>
  41575f:	push   rcx
  415760:	lea    rcx,[rip+0x30259]        # 4459c0 <__data_start@@Base+0x900>
  415767:	push   rcx
  415768:	mov    r9,rdi
  41576b:	mov    r8d,0x1
  415771:	mov    ecx,0x0
  415776:	mov    rdi,rax
  415779:	call   42917c <flatcc_json_parser_union_type@@Base>
  41577e:	add    rsp,0x10
  415782:	mov    QWORD PTR [rbp-0x40],rax
  415786:	jmp    415a5b <_start@@Base+0xf7cb>
  41578b:	mov    rdx,QWORD PTR [rbp-0x48]
  41578f:	mov    rcx,QWORD PTR [rbp-0x40]
  415793:	mov    rax,QWORD PTR [rbp-0x38]
  415797:	mov    rsi,rcx
  41579a:	mov    rdi,rax
  41579d:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4157a2:	mov    QWORD PTR [rbp-0x40],rax
  4157a6:	jmp    415a5b <_start@@Base+0xf7cb>
  4157ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4157af:	mov    rcx,QWORD PTR [rbp-0x40]
  4157b3:	mov    rax,QWORD PTR [rbp-0x38]
  4157b7:	mov    rsi,rcx
  4157ba:	mov    rdi,rax
  4157bd:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  4157c2:	mov    QWORD PTR [rbp-0x40],rax
  4157c6:	jmp    415a5b <_start@@Base+0xf7cb>
  4157cb:	mov    rax,QWORD PTR [rbp-0x18]
  4157cf:	mov    ax,0x0
  4157d3:	mov    rdx,rax
  4157d6:	movabs rax,0x7261637465720000
  4157e0:	cmp    rdx,rax
  4157e3:	jne    415877 <_start@@Base+0xf5e7>
  4157e9:	mov    rax,QWORD PTR [rbp-0x40]
  4157ed:	mov    QWORD PTR [rbp-0x10],rax
  4157f1:	mov    rdx,QWORD PTR [rbp-0x48]
  4157f5:	mov    rsi,QWORD PTR [rbp-0x10]
  4157f9:	mov    rax,QWORD PTR [rbp-0x38]
  4157fd:	mov    ecx,0x6
  415802:	mov    rdi,rax
  415805:	call   406d3f <_start@@Base+0xaaf>
  41580a:	mov    QWORD PTR [rbp-0x40],rax
  41580e:	mov    rax,QWORD PTR [rbp-0x10]
  415812:	cmp    rax,QWORD PTR [rbp-0x40]
  415816:	je     415857 <_start@@Base+0xf5c7>
  415818:	mov    rdi,QWORD PTR [rbp-0x20]
  41581c:	mov    rdx,QWORD PTR [rbp-0x48]
  415820:	mov    rsi,QWORD PTR [rbp-0x40]
  415824:	mov    rax,QWORD PTR [rbp-0x38]
  415828:	sub    rsp,0x8
  41582c:	lea    rcx,[rip+0xfffffffffffff1f9]        # 414a2c <_start@@Base+0xe79c>
  415833:	push   rcx
  415834:	mov    r9,rdi
  415837:	mov    r8d,0x1
  41583d:	mov    ecx,0x0
  415842:	mov    rdi,rax
  415845:	call   428f9f <flatcc_json_parser_union@@Base>
  41584a:	add    rsp,0x10
  41584e:	mov    QWORD PTR [rbp-0x40],rax
  415852:	jmp    415a5b <_start@@Base+0xf7cb>
  415857:	mov    rdx,QWORD PTR [rbp-0x48]
  41585b:	mov    rcx,QWORD PTR [rbp-0x40]
  41585f:	mov    rax,QWORD PTR [rbp-0x38]
  415863:	mov    rsi,rcx
  415866:	mov    rdi,rax
  415869:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41586e:	mov    QWORD PTR [rbp-0x40],rax
  415872:	jmp    415a5b <_start@@Base+0xf7cb>
  415877:	mov    rdx,QWORD PTR [rbp-0x48]
  41587b:	mov    rcx,QWORD PTR [rbp-0x40]
  41587f:	mov    rax,QWORD PTR [rbp-0x38]
  415883:	mov    rsi,rcx
  415886:	mov    rdi,rax
  415889:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41588e:	mov    QWORD PTR [rbp-0x40],rax
  415892:	jmp    415a5b <_start@@Base+0xf7cb>
  415897:	movabs rax,0x736964655f6b6963
  4158a1:	cmp    QWORD PTR [rbp-0x18],rax
  4158a5:	jne    415a40 <_start@@Base+0xf7b0>
  4158ab:	add    QWORD PTR [rbp-0x40],0x8
  4158b0:	mov    rdx,QWORD PTR [rbp-0x48]
  4158b4:	mov    rax,QWORD PTR [rbp-0x40]
  4158b8:	mov    rsi,rdx
  4158bb:	mov    rdi,rax
  4158be:	call   406853 <_start@@Base+0x5c3>
  4158c3:	mov    QWORD PTR [rbp-0x18],rax
  4158c7:	mov    rax,QWORD PTR [rbp-0x18]
  4158cb:	mov    ax,0x0
  4158cf:	mov    rdx,rax
  4158d2:	movabs rax,0x6b5f747970650000
  4158dc:	cmp    rdx,rax
  4158df:	jne    415977 <_start@@Base+0xf6e7>
  4158e5:	mov    rax,QWORD PTR [rbp-0x40]
  4158e9:	mov    QWORD PTR [rbp-0x10],rax
  4158ed:	mov    rdx,QWORD PTR [rbp-0x48]
  4158f1:	mov    rsi,QWORD PTR [rbp-0x10]
  4158f5:	mov    rax,QWORD PTR [rbp-0x38]
  4158f9:	mov    ecx,0x6
  4158fe:	mov    rdi,rax
  415901:	call   406d3f <_start@@Base+0xaaf>
  415906:	mov    QWORD PTR [rbp-0x40],rax
  41590a:	mov    rax,QWORD PTR [rbp-0x10]
  41590e:	cmp    rax,QWORD PTR [rbp-0x40]
  415912:	je     415957 <_start@@Base+0xf6c7>
  415914:	mov    rdi,QWORD PTR [rbp-0x20]
  415918:	mov    rdx,QWORD PTR [rbp-0x48]
  41591c:	mov    rsi,QWORD PTR [rbp-0x40]
  415920:	mov    rax,QWORD PTR [rbp-0x38]
  415924:	lea    rcx,[rip+0xfffffffffffff101]        # 414a2c <_start@@Base+0xe79c>
  41592b:	push   rcx
  41592c:	lea    rcx,[rip+0x300ad]        # 4459e0 <__data_start@@Base+0x920>
  415933:	push   rcx
  415934:	mov    r9,rdi
  415937:	mov    r8d,0x5
  41593d:	mov    ecx,0x2
  415942:	mov    rdi,rax
  415945:	call   42917c <flatcc_json_parser_union_type@@Base>
  41594a:	add    rsp,0x10
  41594e:	mov    QWORD PTR [rbp-0x40],rax
  415952:	jmp    415a5b <_start@@Base+0xf7cb>
  415957:	mov    rdx,QWORD PTR [rbp-0x48]
  41595b:	mov    rcx,QWORD PTR [rbp-0x40]
  41595f:	mov    rax,QWORD PTR [rbp-0x38]
  415963:	mov    rsi,rcx
  415966:	mov    rdi,rax
  415969:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  41596e:	mov    QWORD PTR [rbp-0x40],rax
  415972:	jmp    415a5b <_start@@Base+0xf7cb>
  415977:	movabs rax,0xff00000000000000
  415981:	and    rax,QWORD PTR [rbp-0x18]
  415985:	mov    rdx,rax
  415988:	movabs rax,0x6b00000000000000
  415992:	cmp    rdx,rax
  415995:	jne    415a23 <_start@@Base+0xf793>
  41599b:	mov    rax,QWORD PTR [rbp-0x40]
  41599f:	mov    QWORD PTR [rbp-0x10],rax
  4159a3:	mov    rdx,QWORD PTR [rbp-0x48]
  4159a7:	mov    rsi,QWORD PTR [rbp-0x10]
  4159ab:	mov    rax,QWORD PTR [rbp-0x38]
  4159af:	mov    ecx,0x1
  4159b4:	mov    rdi,rax
  4159b7:	call   406d3f <_start@@Base+0xaaf>
  4159bc:	mov    QWORD PTR [rbp-0x40],rax
  4159c0:	mov    rax,QWORD PTR [rbp-0x10]
  4159c4:	cmp    rax,QWORD PTR [rbp-0x40]
  4159c8:	je     415a06 <_start@@Base+0xf776>
  4159ca:	mov    rdi,QWORD PTR [rbp-0x20]
  4159ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4159d2:	mov    rsi,QWORD PTR [rbp-0x40]
  4159d6:	mov    rax,QWORD PTR [rbp-0x38]
  4159da:	sub    rsp,0x8
  4159de:	lea    rcx,[rip+0xfffffffffffff047]        # 414a2c <_start@@Base+0xe79c>
  4159e5:	push   rcx
  4159e6:	mov    r9,rdi
  4159e9:	mov    r8d,0x5
  4159ef:	mov    ecx,0x2
  4159f4:	mov    rdi,rax
  4159f7:	call   428f9f <flatcc_json_parser_union@@Base>
  4159fc:	add    rsp,0x10
  415a00:	mov    QWORD PTR [rbp-0x40],rax
  415a04:	jmp    415a5b <_start@@Base+0xf7cb>
  415a06:	mov    rdx,QWORD PTR [rbp-0x48]
  415a0a:	mov    rcx,QWORD PTR [rbp-0x40]
  415a0e:	mov    rax,QWORD PTR [rbp-0x38]
  415a12:	mov    rsi,rcx
  415a15:	mov    rdi,rax
  415a18:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  415a1d:	mov    QWORD PTR [rbp-0x40],rax
  415a21:	jmp    415a5b <_start@@Base+0xf7cb>
  415a23:	mov    rdx,QWORD PTR [rbp-0x48]
  415a27:	mov    rcx,QWORD PTR [rbp-0x40]
  415a2b:	mov    rax,QWORD PTR [rbp-0x38]
  415a2f:	mov    rsi,rcx
  415a32:	mov    rdi,rax
  415a35:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  415a3a:	mov    QWORD PTR [rbp-0x40],rax
  415a3e:	jmp    415a5b <_start@@Base+0xf7cb>
  415a40:	mov    rdx,QWORD PTR [rbp-0x48]
  415a44:	mov    rcx,QWORD PTR [rbp-0x40]
  415a48:	mov    rax,QWORD PTR [rbp-0x38]
  415a4c:	mov    rsi,rcx
  415a4f:	mov    rdi,rax
  415a52:	call   427c65 <flatcc_json_parser_unmatched_symbol@@Base>
  415a57:	mov    QWORD PTR [rbp-0x40],rax
  415a5b:	lea    rcx,[rbp-0x24]
  415a5f:	mov    rdx,QWORD PTR [rbp-0x48]
  415a63:	mov    rsi,QWORD PTR [rbp-0x40]
  415a67:	mov    rax,QWORD PTR [rbp-0x38]
  415a6b:	mov    rdi,rax
  415a6e:	call   406a06 <_start@@Base+0x776>
  415a73:	mov    QWORD PTR [rbp-0x40],rax
  415a77:	mov    eax,DWORD PTR [rbp-0x24]
  415a7a:	test   eax,eax
  415a7c:	jne    4150db <_start@@Base+0xee4b>
  415a82:	mov    rax,QWORD PTR [rbp-0x38]
  415a86:	mov    eax,DWORD PTR [rax+0x1c]
  415a89:	test   eax,eax
  415a8b:	jne    415ad6 <_start@@Base+0xf846>
  415a8d:	mov    rcx,QWORD PTR [rbp-0x20]
  415a91:	mov    rdx,QWORD PTR [rbp-0x48]
  415a95:	mov    rsi,QWORD PTR [rbp-0x40]
  415a99:	mov    rax,QWORD PTR [rbp-0x38]
  415a9d:	mov    rdi,rax
  415aa0:	call   428f23 <flatcc_json_parser_finalize_unions@@Base>
  415aa5:	mov    QWORD PTR [rbp-0x40],rax
  415aa9:	mov    rax,QWORD PTR [rbp-0x38]
  415aad:	mov    rax,QWORD PTR [rax]
  415ab0:	mov    rdi,rax
  415ab3:	call   41ed42 <flatcc_builder_end_table@@Base>
  415ab8:	mov    edx,eax
  415aba:	mov    rax,QWORD PTR [rbp-0x50]
  415abe:	mov    DWORD PTR [rax],edx
  415ac0:	mov    rax,QWORD PTR [rbp-0x50]
  415ac4:	mov    eax,DWORD PTR [rax]
  415ac6:	test   eax,eax
  415ac8:	je     415ad9 <_start@@Base+0xf849>
  415aca:	mov    rax,QWORD PTR [rbp-0x40]
  415ace:	jmp    415af3 <_start@@Base+0xf863>
  415ad0:	nop
  415ad1:	jmp    415ada <_start@@Base+0xf84a>
  415ad3:	nop
  415ad4:	jmp    415ada <_start@@Base+0xf84a>
  415ad6:	nop
  415ad7:	jmp    415ada <_start@@Base+0xf84a>
  415ad9:	nop
  415ada:	mov    rdx,QWORD PTR [rbp-0x48]
  415ade:	mov    rsi,QWORD PTR [rbp-0x40]
  415ae2:	mov    rax,QWORD PTR [rbp-0x38]
  415ae6:	mov    ecx,0x21
  415aeb:	mov    rdi,rax
  415aee:	call   427257 <flatcc_json_parser_set_error@@Base>
  415af3:	mov    rdi,QWORD PTR [rbp-0x8]
  415af7:	xor    rdi,QWORD PTR fs:0x28
  415b00:	je     415b07 <_start@@Base+0xf877>
  415b02:	call   4061a0 <__stack_chk_fail@plt>
  415b07:	leave  
  415b08:	ret    
  415b09:	endbr64 
  415b0d:	push   rbp
  415b0e:	mov    rbp,rsp
  415b11:	mov    QWORD PTR [rbp-0x8],rdi
  415b15:	mov    QWORD PTR [rbp-0x10],rsi
  415b19:	mov    QWORD PTR [rbp-0x18],rdx
  415b1d:	mov    QWORD PTR [rbp-0x20],rcx
  415b21:	mov    QWORD PTR [rbp-0x28],r8
  415b25:	mov    QWORD PTR [rbp-0x30],r9
  415b29:	mov    rax,QWORD PTR [rbp-0x10]
  415b2d:	pop    rbp
  415b2e:	ret    
  415b2f:	endbr64 
  415b33:	push   rbp
  415b34:	mov    rbp,rsp
  415b37:	sub    rsp,0x50
  415b3b:	mov    QWORD PTR [rbp-0x28],rdi
  415b3f:	mov    QWORD PTR [rbp-0x30],rsi
  415b43:	mov    QWORD PTR [rbp-0x38],rdx
  415b47:	mov    QWORD PTR [rbp-0x40],rcx
  415b4b:	mov    QWORD PTR [rbp-0x48],r8
  415b4f:	mov    QWORD PTR [rbp-0x50],r9
  415b53:	mov    rax,QWORD PTR [rbp-0x30]
  415b57:	mov    QWORD PTR [rbp-0x18],rax
  415b5b:	mov    rdx,QWORD PTR [rbp-0x38]
  415b5f:	mov    rax,QWORD PTR [rbp-0x30]
  415b63:	mov    rsi,rdx
  415b66:	mov    rdi,rax
  415b69:	call   406853 <_start@@Base+0x5c3>
  415b6e:	mov    QWORD PTR [rbp-0x10],rax
  415b72:	movabs rax,0x6865785f656e756c
  415b7c:	cmp    QWORD PTR [rbp-0x10],rax
  415b80:	ja     415d3d <_start@@Base+0xfaad>
  415b86:	movabs rax,0x436f6c6f71ffffff
  415b90:	cmp    QWORD PTR [rbp-0x10],rax
  415b94:	ja     415c2a <_start@@Base+0xf99a>
  415b9a:	movabs rax,0xffffff0000000000
  415ba4:	and    rax,QWORD PTR [rbp-0x10]
  415ba8:	mov    rdx,rax
  415bab:	movabs rax,0x416e790000000000
  415bb5:	cmp    rdx,rax
  415bb8:	jne    415c21 <_start@@Base+0xf991>
  415bba:	mov    rax,QWORD PTR [rbp-0x30]
  415bbe:	mov    QWORD PTR [rbp-0x8],rax
  415bc2:	mov    rdx,QWORD PTR [rbp-0x38]
  415bc6:	mov    rsi,QWORD PTR [rbp-0x8]
  415bca:	mov    rax,QWORD PTR [rbp-0x28]
  415bce:	mov    ecx,0x3
  415bd3:	mov    rdi,rax
  415bd6:	call   406897 <_start@@Base+0x607>
  415bdb:	mov    QWORD PTR [rbp-0x30],rax
  415bdf:	mov    rax,QWORD PTR [rbp-0x30]
  415be3:	cmp    rax,QWORD PTR [rbp-0x8]
  415be7:	je     415c18 <_start@@Base+0xf988>
  415be9:	mov    r8,QWORD PTR [rbp-0x50]
  415bed:	mov    rdi,QWORD PTR [rbp-0x48]
  415bf1:	mov    rcx,QWORD PTR [rbp-0x40]
  415bf5:	mov    rdx,QWORD PTR [rbp-0x38]
  415bf9:	mov    rsi,QWORD PTR [rbp-0x30]
  415bfd:	mov    rax,QWORD PTR [rbp-0x28]
  415c01:	mov    r9,r8
  415c04:	mov    r8,rdi
  415c07:	mov    rdi,rax
  415c0a:	call   40a4ac <_start@@Base+0x421c>
  415c0f:	mov    QWORD PTR [rbp-0x30],rax
  415c13:	jmp    415f94 <_start@@Base+0xfd04>
  415c18:	mov    rax,QWORD PTR [rbp-0x18]
  415c1c:	jmp    415f98 <_start@@Base+0xfd08>
  415c21:	mov    rax,QWORD PTR [rbp-0x18]
  415c25:	jmp    415f98 <_start@@Base+0xfd08>
  415c2a:	movabs rax,0xffffff0000000000
  415c34:	and    rax,QWORD PTR [rbp-0x10]
  415c38:	mov    rdx,rax
  415c3b:	movabs rax,0x466f6f0000000000
  415c45:	cmp    rdx,rax
  415c48:	jne    415cb1 <_start@@Base+0xfa21>
  415c4a:	mov    rax,QWORD PTR [rbp-0x30]
  415c4e:	mov    QWORD PTR [rbp-0x8],rax
  415c52:	mov    rdx,QWORD PTR [rbp-0x38]
  415c56:	mov    rsi,QWORD PTR [rbp-0x8]
  415c5a:	mov    rax,QWORD PTR [rbp-0x28]
  415c5e:	mov    ecx,0x3
  415c63:	mov    rdi,rax
  415c66:	call   406897 <_start@@Base+0x607>
  415c6b:	mov    QWORD PTR [rbp-0x30],rax
  415c6f:	mov    rax,QWORD PTR [rbp-0x30]
  415c73:	cmp    rax,QWORD PTR [rbp-0x8]
  415c77:	je     415ca8 <_start@@Base+0xfa18>
  415c79:	mov    r8,QWORD PTR [rbp-0x50]
  415c7d:	mov    rdi,QWORD PTR [rbp-0x48]
  415c81:	mov    rcx,QWORD PTR [rbp-0x40]
  415c85:	mov    rdx,QWORD PTR [rbp-0x38]
  415c89:	mov    rsi,QWORD PTR [rbp-0x30]
  415c8d:	mov    rax,QWORD PTR [rbp-0x28]
  415c91:	mov    r9,r8
  415c94:	mov    r8,rdi
  415c97:	mov    rdi,rax
  415c9a:	call   409983 <_start@@Base+0x36f3>
  415c9f:	mov    QWORD PTR [rbp-0x30],rax
  415ca3:	jmp    415f94 <_start@@Base+0xfd04>
  415ca8:	mov    rax,QWORD PTR [rbp-0x18]
  415cac:	jmp    415f98 <_start@@Base+0xfd08>
  415cb1:	mov    rax,QWORD PTR [rbp-0x10]
  415cb5:	and    rax,0xffffffffff000000
  415cbb:	mov    rdx,rax
  415cbe:	movabs rax,0x436f6c6f72000000
  415cc8:	cmp    rdx,rax
  415ccb:	jne    415d34 <_start@@Base+0xfaa4>
  415ccd:	mov    rax,QWORD PTR [rbp-0x30]
  415cd1:	mov    QWORD PTR [rbp-0x8],rax
  415cd5:	mov    rdx,QWORD PTR [rbp-0x38]
  415cd9:	mov    rsi,QWORD PTR [rbp-0x8]
  415cdd:	mov    rax,QWORD PTR [rbp-0x28]
  415ce1:	mov    ecx,0x5
  415ce6:	mov    rdi,rax
  415ce9:	call   406897 <_start@@Base+0x607>
  415cee:	mov    QWORD PTR [rbp-0x30],rax
  415cf2:	mov    rax,QWORD PTR [rbp-0x30]
  415cf6:	cmp    rax,QWORD PTR [rbp-0x8]
  415cfa:	je     415d2b <_start@@Base+0xfa9b>
  415cfc:	mov    r8,QWORD PTR [rbp-0x50]
  415d00:	mov    rdi,QWORD PTR [rbp-0x48]
  415d04:	mov    rcx,QWORD PTR [rbp-0x40]
  415d08:	mov    rdx,QWORD PTR [rbp-0x38]
  415d0c:	mov    rsi,QWORD PTR [rbp-0x30]
  415d10:	mov    rax,QWORD PTR [rbp-0x28]
  415d14:	mov    r9,r8
  415d17:	mov    r8,rdi
  415d1a:	mov    rdi,rax
  415d1d:	call   40a110 <_start@@Base+0x3e80>
  415d22:	mov    QWORD PTR [rbp-0x30],rax
  415d26:	jmp    415f94 <_start@@Base+0xfd04>
  415d2b:	mov    rax,QWORD PTR [rbp-0x18]
  415d2f:	jmp    415f98 <_start@@Base+0xfd08>
  415d34:	mov    rax,QWORD PTR [rbp-0x18]
  415d38:	jmp    415f98 <_start@@Base+0xfd08>
  415d3d:	movabs rax,0x696e745f656e756c
  415d47:	cmp    QWORD PTR [rbp-0x10],rax
  415d4b:	ja     415dd1 <_start@@Base+0xfb41>
  415d51:	movabs rax,0x6865785f656e756d
  415d5b:	cmp    QWORD PTR [rbp-0x10],rax
  415d5f:	jne    415dc8 <_start@@Base+0xfb38>
  415d61:	mov    rax,QWORD PTR [rbp-0x30]
  415d65:	mov    QWORD PTR [rbp-0x8],rax
  415d69:	mov    rdx,QWORD PTR [rbp-0x38]
  415d6d:	mov    rsi,QWORD PTR [rbp-0x8]
  415d71:	mov    rax,QWORD PTR [rbp-0x28]
  415d75:	mov    ecx,0x8
  415d7a:	mov    rdi,rax
  415d7d:	call   406897 <_start@@Base+0x607>
  415d82:	mov    QWORD PTR [rbp-0x30],rax
  415d86:	mov    rax,QWORD PTR [rbp-0x30]
  415d8a:	cmp    rax,QWORD PTR [rbp-0x8]
  415d8e:	je     415dbf <_start@@Base+0xfb2f>
  415d90:	mov    r8,QWORD PTR [rbp-0x50]
  415d94:	mov    rdi,QWORD PTR [rbp-0x48]
  415d98:	mov    rcx,QWORD PTR [rbp-0x40]
  415d9c:	mov    rdx,QWORD PTR [rbp-0x38]
  415da0:	mov    rsi,QWORD PTR [rbp-0x30]
  415da4:	mov    rax,QWORD PTR [rbp-0x28]
  415da8:	mov    r9,r8
  415dab:	mov    r8,rdi
  415dae:	mov    rdi,rax
  415db1:	call   409f4b <_start@@Base+0x3cbb>
  415db6:	mov    QWORD PTR [rbp-0x30],rax
  415dba:	jmp    415f94 <_start@@Base+0xfd04>
  415dbf:	mov    rax,QWORD PTR [rbp-0x18]
  415dc3:	jmp    415f98 <_start@@Base+0xfd08>
  415dc8:	mov    rax,QWORD PTR [rbp-0x18]
  415dcc:	jmp    415f98 <_start@@Base+0xfd08>
  415dd1:	movabs rax,0x6e65675f656e756c
  415ddb:	cmp    QWORD PTR [rbp-0x10],rax
  415ddf:	ja     415e65 <_start@@Base+0xfbd5>
  415de5:	movabs rax,0x696e745f656e756d
  415def:	cmp    QWORD PTR [rbp-0x10],rax
  415df3:	jne    415e5c <_start@@Base+0xfbcc>
  415df5:	mov    rax,QWORD PTR [rbp-0x30]
  415df9:	mov    QWORD PTR [rbp-0x8],rax
  415dfd:	mov    rdx,QWORD PTR [rbp-0x38]
  415e01:	mov    rsi,QWORD PTR [rbp-0x8]
  415e05:	mov    rax,QWORD PTR [rbp-0x28]
  415e09:	mov    ecx,0x8
  415e0e:	mov    rdi,rax
  415e11:	call   406897 <_start@@Base+0x607>
  415e16:	mov    QWORD PTR [rbp-0x30],rax
  415e1a:	mov    rax,QWORD PTR [rbp-0x30]
  415e1e:	cmp    rax,QWORD PTR [rbp-0x8]
  415e22:	je     415e53 <_start@@Base+0xfbc3>
  415e24:	mov    r8,QWORD PTR [rbp-0x50]
  415e28:	mov    rdi,QWORD PTR [rbp-0x48]
  415e2c:	mov    rcx,QWORD PTR [rbp-0x40]
  415e30:	mov    rdx,QWORD PTR [rbp-0x38]
  415e34:	mov    rsi,QWORD PTR [rbp-0x30]
  415e38:	mov    rax,QWORD PTR [rbp-0x28]
  415e3c:	mov    r9,r8
  415e3f:	mov    r8,rdi
  415e42:	mov    rdi,rax
  415e45:	call   409cf8 <_start@@Base+0x3a68>
  415e4a:	mov    QWORD PTR [rbp-0x30],rax
  415e4e:	jmp    415f94 <_start@@Base+0xfd04>
  415e53:	mov    rax,QWORD PTR [rbp-0x18]
  415e57:	jmp    415f98 <_start@@Base+0xfd08>
  415e5c:	mov    rax,QWORD PTR [rbp-0x18]
  415e60:	jmp    415f98 <_start@@Base+0xfd08>
  415e65:	movabs rax,0x6e65675f656e756d
  415e6f:	cmp    QWORD PTR [rbp-0x10],rax
  415e73:	jne    415ed3 <_start@@Base+0xfc43>
  415e75:	mov    rax,QWORD PTR [rbp-0x30]
  415e79:	mov    QWORD PTR [rbp-0x8],rax
  415e7d:	mov    rdx,QWORD PTR [rbp-0x38]
  415e81:	mov    rsi,QWORD PTR [rbp-0x8]
  415e85:	mov    rax,QWORD PTR [rbp-0x28]
  415e89:	mov    ecx,0x8
  415e8e:	mov    rdi,rax
  415e91:	call   406897 <_start@@Base+0x607>
  415e96:	mov    QWORD PTR [rbp-0x30],rax
  415e9a:	mov    rax,QWORD PTR [rbp-0x30]
  415e9e:	cmp    rax,QWORD PTR [rbp-0x8]
  415ea2:	je     415ed6 <_start@@Base+0xfc46>
  415ea4:	mov    r8,QWORD PTR [rbp-0x50]
  415ea8:	mov    rdi,QWORD PTR [rbp-0x48]
  415eac:	mov    rcx,QWORD PTR [rbp-0x40]
  415eb0:	mov    rdx,QWORD PTR [rbp-0x38]
  415eb4:	mov    rsi,QWORD PTR [rbp-0x30]
  415eb8:	mov    rax,QWORD PTR [rbp-0x28]
  415ebc:	mov    r9,r8
  415ebf:	mov    r8,rdi
  415ec2:	mov    rdi,rax
  415ec5:	call   409b2d <_start@@Base+0x389d>
  415eca:	mov    QWORD PTR [rbp-0x30],rax
  415ece:	jmp    415f94 <_start@@Base+0xfd04>
  415ed3:	nop
  415ed4:	jmp    415ed7 <_start@@Base+0xfc47>
  415ed6:	nop
  415ed7:	movabs rax,0x6e6f74656d707479
  415ee1:	cmp    QWORD PTR [rbp-0x10],rax
  415ee5:	jne    415f8e <_start@@Base+0xfcfe>
  415eeb:	add    QWORD PTR [rbp-0x30],0x8
  415ef0:	mov    rdx,QWORD PTR [rbp-0x38]
  415ef4:	mov    rax,QWORD PTR [rbp-0x30]
  415ef8:	mov    rsi,rdx
  415efb:	mov    rdi,rax
  415efe:	call   406853 <_start@@Base+0x5c3>
  415f03:	mov    QWORD PTR [rbp-0x10],rax
  415f07:	movabs rax,0xffffffff00000000
  415f11:	and    rax,QWORD PTR [rbp-0x10]
  415f15:	mov    rdx,rax
  415f18:	movabs rax,0x656e756d00000000
  415f22:	cmp    rdx,rax
  415f25:	jne    415f88 <_start@@Base+0xfcf8>
  415f27:	mov    rax,QWORD PTR [rbp-0x30]
  415f2b:	mov    QWORD PTR [rbp-0x8],rax
  415f2f:	mov    rdx,QWORD PTR [rbp-0x38]
  415f33:	mov    rsi,QWORD PTR [rbp-0x8]
  415f37:	mov    rax,QWORD PTR [rbp-0x28]
  415f3b:	mov    ecx,0x4
  415f40:	mov    rdi,rax
  415f43:	call   406897 <_start@@Base+0x607>
  415f48:	mov    QWORD PTR [rbp-0x30],rax
  415f4c:	mov    rax,QWORD PTR [rbp-0x30]
  415f50:	cmp    rax,QWORD PTR [rbp-0x8]
  415f54:	je     415f82 <_start@@Base+0xfcf2>
  415f56:	mov    r8,QWORD PTR [rbp-0x50]
  415f5a:	mov    rdi,QWORD PTR [rbp-0x48]
  415f5e:	mov    rcx,QWORD PTR [rbp-0x40]
  415f62:	mov    rdx,QWORD PTR [rbp-0x38]
  415f66:	mov    rsi,QWORD PTR [rbp-0x30]
  415f6a:	mov    rax,QWORD PTR [rbp-0x28]
  415f6e:	mov    r9,r8
  415f71:	mov    r8,rdi
  415f74:	mov    rdi,rax
  415f77:	call   40b013 <_start@@Base+0x4d83>
  415f7c:	mov    QWORD PTR [rbp-0x30],rax
  415f80:	jmp    415f94 <_start@@Base+0xfd04>
  415f82:	mov    rax,QWORD PTR [rbp-0x18]
  415f86:	jmp    415f98 <_start@@Base+0xfd08>
  415f88:	mov    rax,QWORD PTR [rbp-0x18]
  415f8c:	jmp    415f98 <_start@@Base+0xfd08>
  415f8e:	mov    rax,QWORD PTR [rbp-0x18]
  415f92:	jmp    415f98 <_start@@Base+0xfd08>
  415f94:	mov    rax,QWORD PTR [rbp-0x30]
  415f98:	leave  
  415f99:	ret    
  415f9a:	endbr64 
  415f9e:	push   rbp
  415f9f:	mov    rbp,rsp
  415fa2:	mov    QWORD PTR [rbp-0x8],rdi
  415fa6:	mov    QWORD PTR [rbp-0x10],rsi
  415faa:	mov    QWORD PTR [rbp-0x18],rdx
  415fae:	mov    QWORD PTR [rbp-0x20],rcx
  415fb2:	mov    QWORD PTR [rbp-0x28],r8
  415fb6:	mov    QWORD PTR [rbp-0x30],r9
  415fba:	mov    rax,QWORD PTR [rbp-0x10]
  415fbe:	pop    rbp
  415fbf:	ret    
  415fc0:	endbr64 
  415fc4:	push   rbp
  415fc5:	mov    rbp,rsp
  415fc8:	mov    QWORD PTR [rbp-0x8],rdi
  415fcc:	mov    QWORD PTR [rbp-0x10],rsi
  415fd0:	mov    QWORD PTR [rbp-0x18],rdx
  415fd4:	mov    QWORD PTR [rbp-0x20],rcx
  415fd8:	mov    QWORD PTR [rbp-0x28],r8
  415fdc:	mov    QWORD PTR [rbp-0x30],r9
  415fe0:	mov    rax,QWORD PTR [rbp-0x10]
  415fe4:	pop    rbp
  415fe5:	ret    
  415fe6:	endbr64 
  415fea:	push   rbp
  415feb:	mov    rbp,rsp
  415fee:	sub    rsp,0x50
  415ff2:	mov    QWORD PTR [rbp-0x28],rdi
  415ff6:	mov    QWORD PTR [rbp-0x30],rsi
  415ffa:	mov    QWORD PTR [rbp-0x38],rdx
  415ffe:	mov    QWORD PTR [rbp-0x40],rcx
  416002:	mov    QWORD PTR [rbp-0x48],r8
  416006:	mov    QWORD PTR [rbp-0x50],r9
  41600a:	mov    rax,QWORD PTR [rbp-0x30]
  41600e:	mov    QWORD PTR [rbp-0x18],rax
  416012:	mov    rdx,QWORD PTR [rbp-0x38]
  416016:	mov    rax,QWORD PTR [rbp-0x30]
  41601a:	mov    rsi,rdx
  41601d:	mov    rdi,rax
  416020:	call   406853 <_start@@Base+0x5c3>
  416025:	mov    QWORD PTR [rbp-0x10],rax
  416029:	movabs rax,0x4368617261637465
  416033:	cmp    QWORD PTR [rbp-0x10],rax
  416037:	jne    4160e4 <_start@@Base+0xfe54>
  41603d:	add    QWORD PTR [rbp-0x30],0x8
  416042:	mov    rdx,QWORD PTR [rbp-0x38]
  416046:	mov    rax,QWORD PTR [rbp-0x30]
  41604a:	mov    rsi,rdx
  41604d:	mov    rdi,rax
  416050:	call   406853 <_start@@Base+0x5c3>
  416055:	mov    QWORD PTR [rbp-0x10],rax
  416059:	movabs rax,0xff00000000000000
  416063:	and    rax,QWORD PTR [rbp-0x10]
  416067:	mov    rdx,rax
  41606a:	movabs rax,0x7200000000000000
  416074:	cmp    rdx,rax
  416077:	jne    4160de <_start@@Base+0xfe4e>
  416079:	mov    rax,QWORD PTR [rbp-0x30]
  41607d:	mov    QWORD PTR [rbp-0x8],rax
  416081:	mov    rdx,QWORD PTR [rbp-0x38]
  416085:	mov    rsi,QWORD PTR [rbp-0x8]
  416089:	mov    rax,QWORD PTR [rbp-0x28]
  41608d:	mov    ecx,0x1
  416092:	mov    rdi,rax
  416095:	call   406897 <_start@@Base+0x607>
  41609a:	mov    QWORD PTR [rbp-0x30],rax
  41609e:	mov    rax,QWORD PTR [rbp-0x30]
  4160a2:	cmp    rax,QWORD PTR [rbp-0x8]
  4160a6:	je     4160d8 <_start@@Base+0xfe48>
  4160a8:	mov    r8,QWORD PTR [rbp-0x50]
  4160ac:	mov    rdi,QWORD PTR [rbp-0x48]
  4160b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4160b4:	mov    rdx,QWORD PTR [rbp-0x38]
  4160b8:	mov    rsi,QWORD PTR [rbp-0x30]
  4160bc:	mov    rax,QWORD PTR [rbp-0x28]
  4160c0:	mov    r9,r8
  4160c3:	mov    r8,rdi
  4160c6:	mov    rdi,rax
  4160c9:	call   414c6b <_start@@Base+0xe9db>
  4160ce:	mov    QWORD PTR [rbp-0x30],rax
  4160d2:	mov    rax,QWORD PTR [rbp-0x30]
  4160d6:	jmp    4160e8 <_start@@Base+0xfe58>
  4160d8:	mov    rax,QWORD PTR [rbp-0x18]
  4160dc:	jmp    4160e8 <_start@@Base+0xfe58>
  4160de:	mov    rax,QWORD PTR [rbp-0x18]
  4160e2:	jmp    4160e8 <_start@@Base+0xfe58>
  4160e4:	mov    rax,QWORD PTR [rbp-0x18]
  4160e8:	leave  
  4160e9:	ret    
  4160ea:	endbr64 
  4160ee:	push   rbp
  4160ef:	mov    rbp,rsp
  4160f2:	sub    rsp,0x50
  4160f6:	mov    QWORD PTR [rbp-0x28],rdi
  4160fa:	mov    QWORD PTR [rbp-0x30],rsi
  4160fe:	mov    QWORD PTR [rbp-0x38],rdx
  416102:	mov    QWORD PTR [rbp-0x40],rcx
  416106:	mov    QWORD PTR [rbp-0x48],r8
  41610a:	mov    QWORD PTR [rbp-0x50],r9
  41610e:	mov    rax,QWORD PTR [rbp-0x30]
  416112:	mov    QWORD PTR [rbp-0x18],rax
  416116:	mov    rdx,QWORD PTR [rbp-0x38]
  41611a:	mov    rax,QWORD PTR [rbp-0x30]
  41611e:	mov    rsi,rdx
  416121:	mov    rdi,rax
  416124:	call   406853 <_start@@Base+0x5c3>
  416129:	mov    QWORD PTR [rbp-0x10],rax
  41612d:	movabs rax,0x46726f6d496e636c
  416137:	cmp    QWORD PTR [rbp-0x10],rax
  41613b:	jne    4161e8 <_start@@Base+0xff58>
  416141:	add    QWORD PTR [rbp-0x30],0x8
  416146:	mov    rdx,QWORD PTR [rbp-0x38]
  41614a:	mov    rax,QWORD PTR [rbp-0x30]
  41614e:	mov    rsi,rdx
  416151:	mov    rdi,rax
  416154:	call   406853 <_start@@Base+0x5c3>
  416159:	mov    QWORD PTR [rbp-0x10],rax
  41615d:	movabs rax,0xffffff0000000000
  416167:	and    rax,QWORD PTR [rbp-0x10]
  41616b:	mov    rdx,rax
  41616e:	movabs rax,0x7564650000000000
  416178:	cmp    rdx,rax
  41617b:	jne    4161e2 <_start@@Base+0xff52>
  41617d:	mov    rax,QWORD PTR [rbp-0x30]
  416181:	mov    QWORD PTR [rbp-0x8],rax
  416185:	mov    rdx,QWORD PTR [rbp-0x38]
  416189:	mov    rsi,QWORD PTR [rbp-0x8]
  41618d:	mov    rax,QWORD PTR [rbp-0x28]
  416191:	mov    ecx,0x3
  416196:	mov    rdi,rax
  416199:	call   406897 <_start@@Base+0x607>
  41619e:	mov    QWORD PTR [rbp-0x30],rax
  4161a2:	mov    rax,QWORD PTR [rbp-0x30]
  4161a6:	cmp    rax,QWORD PTR [rbp-0x8]
  4161aa:	je     4161dc <_start@@Base+0xff4c>
  4161ac:	mov    r8,QWORD PTR [rbp-0x50]
  4161b0:	mov    rdi,QWORD PTR [rbp-0x48]
  4161b4:	mov    rcx,QWORD PTR [rbp-0x40]
  4161b8:	mov    rdx,QWORD PTR [rbp-0x38]
  4161bc:	mov    rsi,QWORD PTR [rbp-0x30]
  4161c0:	mov    rax,QWORD PTR [rbp-0x28]
  4161c4:	mov    r9,r8
  4161c7:	mov    r8,rdi
  4161ca:	mov    rdi,rax
  4161cd:	call   408a0b <_start@@Base+0x277b>
  4161d2:	mov    QWORD PTR [rbp-0x30],rax
  4161d6:	mov    rax,QWORD PTR [rbp-0x30]
  4161da:	jmp    4161ec <_start@@Base+0xff5c>
  4161dc:	mov    rax,QWORD PTR [rbp-0x18]
  4161e0:	jmp    4161ec <_start@@Base+0xff5c>
  4161e2:	mov    rax,QWORD PTR [rbp-0x18]
  4161e6:	jmp    4161ec <_start@@Base+0xff5c>
  4161e8:	mov    rax,QWORD PTR [rbp-0x18]
  4161ec:	leave  
  4161ed:	ret    
  4161ee:	endbr64 
  4161f2:	push   rbp
  4161f3:	mov    rbp,rsp
  4161f6:	sub    rsp,0x50
  4161fa:	mov    QWORD PTR [rbp-0x28],rdi
  4161fe:	mov    QWORD PTR [rbp-0x30],rsi
  416202:	mov    QWORD PTR [rbp-0x38],rdx
  416206:	mov    QWORD PTR [rbp-0x40],rcx
  41620a:	mov    QWORD PTR [rbp-0x48],r8
  41620e:	mov    QWORD PTR [rbp-0x50],r9
  416212:	mov    rax,QWORD PTR [rbp-0x30]
  416216:	mov    QWORD PTR [rbp-0x18],rax
  41621a:	mov    rdx,QWORD PTR [rbp-0x38]
  41621e:	mov    rax,QWORD PTR [rbp-0x30]
  416222:	mov    rsi,rdx
  416225:	mov    rdi,rax
  416228:	call   406853 <_start@@Base+0x5c3>
  41622d:	mov    QWORD PTR [rbp-0x10],rax
  416231:	movabs rax,0x4d7947616d652e44
  41623b:	cmp    QWORD PTR [rbp-0x10],rax
  41623f:	ja     416347 <_start@@Base+0x100b7>
  416245:	movabs rax,0x46616e746173792e
  41624f:	cmp    QWORD PTR [rbp-0x10],rax
  416253:	jne    41633e <_start@@Base+0x100ae>
  416259:	add    QWORD PTR [rbp-0x30],0x8
  41625e:	mov    rdx,QWORD PTR [rbp-0x38]
  416262:	mov    rax,QWORD PTR [rbp-0x30]
  416266:	mov    rsi,rdx
  416269:	mov    rdi,rax
  41626c:	call   406853 <_start@@Base+0x5c3>
  416271:	mov    QWORD PTR [rbp-0x10],rax
  416275:	movabs rax,0x4368617261637465
  41627f:	cmp    QWORD PTR [rbp-0x10],rax
  416283:	jne    416335 <_start@@Base+0x100a5>
  416289:	add    QWORD PTR [rbp-0x30],0x8
  41628e:	mov    rdx,QWORD PTR [rbp-0x38]
  416292:	mov    rax,QWORD PTR [rbp-0x30]
  416296:	mov    rsi,rdx
  416299:	mov    rdi,rax
  41629c:	call   406853 <_start@@Base+0x5c3>
  4162a1:	mov    QWORD PTR [rbp-0x10],rax
  4162a5:	movabs rax,0xff00000000000000
  4162af:	and    rax,QWORD PTR [rbp-0x10]
  4162b3:	mov    rdx,rax
  4162b6:	movabs rax,0x7200000000000000
  4162c0:	cmp    rdx,rax
  4162c3:	jne    41632c <_start@@Base+0x1009c>
  4162c5:	mov    rax,QWORD PTR [rbp-0x30]
  4162c9:	mov    QWORD PTR [rbp-0x8],rax
  4162cd:	mov    rdx,QWORD PTR [rbp-0x38]
  4162d1:	mov    rsi,QWORD PTR [rbp-0x8]
  4162d5:	mov    rax,QWORD PTR [rbp-0x28]
  4162d9:	mov    ecx,0x1
  4162de:	mov    rdi,rax
  4162e1:	call   406897 <_start@@Base+0x607>
  4162e6:	mov    QWORD PTR [rbp-0x30],rax
  4162ea:	mov    rax,QWORD PTR [rbp-0x30]
  4162ee:	cmp    rax,QWORD PTR [rbp-0x8]
  4162f2:	je     416323 <_start@@Base+0x10093>
  4162f4:	mov    r8,QWORD PTR [rbp-0x50]
  4162f8:	mov    rdi,QWORD PTR [rbp-0x48]
  4162fc:	mov    rcx,QWORD PTR [rbp-0x40]
  416300:	mov    rdx,QWORD PTR [rbp-0x38]
  416304:	mov    rsi,QWORD PTR [rbp-0x30]
  416308:	mov    rax,QWORD PTR [rbp-0x28]
  41630c:	mov    r9,r8
  41630f:	mov    r8,rdi
  416312:	mov    rdi,rax
  416315:	call   414c6b <_start@@Base+0xe9db>
  41631a:	mov    QWORD PTR [rbp-0x30],rax
  41631e:	jmp    416a76 <_start@@Base+0x107e6>
  416323:	mov    rax,QWORD PTR [rbp-0x18]
  416327:	jmp    416a7a <_start@@Base+0x107ea>
  41632c:	mov    rax,QWORD PTR [rbp-0x18]
  416330:	jmp    416a7a <_start@@Base+0x107ea>
  416335:	mov    rax,QWORD PTR [rbp-0x18]
  416339:	jmp    416a7a <_start@@Base+0x107ea>
  41633e:	mov    rax,QWORD PTR [rbp-0x18]
  416342:	jmp    416a7a <_start@@Base+0x107ea>
  416347:	movabs rax,0x4d7947616d652e45
  416351:	cmp    QWORD PTR [rbp-0x10],rax
  416355:	jne    416917 <_start@@Base+0x10687>
  41635b:	add    QWORD PTR [rbp-0x30],0x8
  416360:	mov    rdx,QWORD PTR [rbp-0x38]
  416364:	mov    rax,QWORD PTR [rbp-0x30]
  416368:	mov    rsi,rdx
  41636b:	mov    rdi,rax
  41636e:	call   406853 <_start@@Base+0x5c3>
  416373:	mov    QWORD PTR [rbp-0x10],rax
  416377:	movabs rax,0x78616d706c652e67
  416381:	cmp    QWORD PTR [rbp-0x10],rax
  416385:	ja     4165f1 <_start@@Base+0x10361>
  41638b:	movabs rax,0x78616d706c652e42
  416395:	cmp    QWORD PTR [rbp-0x10],rax
  416399:	ja     416468 <_start@@Base+0x101d8>
  41639f:	movabs rax,0x78616d706c652e41
  4163a9:	cmp    QWORD PTR [rbp-0x10],rax
  4163ad:	jne    41645f <_start@@Base+0x101cf>
  4163b3:	add    QWORD PTR [rbp-0x30],0x8
  4163b8:	mov    rdx,QWORD PTR [rbp-0x38]
  4163bc:	mov    rax,QWORD PTR [rbp-0x30]
  4163c0:	mov    rsi,rdx
  4163c3:	mov    rdi,rax
  4163c6:	call   406853 <_start@@Base+0x5c3>
  4163cb:	mov    QWORD PTR [rbp-0x10],rax
  4163cf:	movabs rax,0xffff000000000000
  4163d9:	and    rax,QWORD PTR [rbp-0x10]
  4163dd:	mov    rdx,rax
  4163e0:	movabs rax,0x6e79000000000000
  4163ea:	cmp    rdx,rax
  4163ed:	jne    416456 <_start@@Base+0x101c6>
  4163ef:	mov    rax,QWORD PTR [rbp-0x30]
  4163f3:	mov    QWORD PTR [rbp-0x8],rax
  4163f7:	mov    rdx,QWORD PTR [rbp-0x38]
  4163fb:	mov    rsi,QWORD PTR [rbp-0x8]
  4163ff:	mov    rax,QWORD PTR [rbp-0x28]
  416403:	mov    ecx,0x2
  416408:	mov    rdi,rax
  41640b:	call   406897 <_start@@Base+0x607>
  416410:	mov    QWORD PTR [rbp-0x30],rax
  416414:	mov    rax,QWORD PTR [rbp-0x30]
  416418:	cmp    rax,QWORD PTR [rbp-0x8]
  41641c:	je     41644d <_start@@Base+0x101bd>
  41641e:	mov    r8,QWORD PTR [rbp-0x50]
  416422:	mov    rdi,QWORD PTR [rbp-0x48]
  416426:	mov    rcx,QWORD PTR [rbp-0x40]
  41642a:	mov    rdx,QWORD PTR [rbp-0x38]
  41642e:	mov    rsi,QWORD PTR [rbp-0x30]
  416432:	mov    rax,QWORD PTR [rbp-0x28]
  416436:	mov    r9,r8
  416439:	mov    r8,rdi
  41643c:	mov    rdi,rax
  41643f:	call   40a4ac <_start@@Base+0x421c>
  416444:	mov    QWORD PTR [rbp-0x30],rax
  416448:	jmp    416a76 <_start@@Base+0x107e6>
  41644d:	mov    rax,QWORD PTR [rbp-0x18]
  416451:	jmp    416a7a <_start@@Base+0x107ea>
  416456:	mov    rax,QWORD PTR [rbp-0x18]
  41645a:	jmp    416a7a <_start@@Base+0x107ea>
  41645f:	mov    rax,QWORD PTR [rbp-0x18]
  416463:	jmp    416a7a <_start@@Base+0x107ea>
  416468:	movabs rax,0x78616d706c652e43
  416472:	cmp    QWORD PTR [rbp-0x10],rax
  416476:	jne    416528 <_start@@Base+0x10298>
  41647c:	add    QWORD PTR [rbp-0x30],0x8
  416481:	mov    rdx,QWORD PTR [rbp-0x38]
  416485:	mov    rax,QWORD PTR [rbp-0x30]
  416489:	mov    rsi,rdx
  41648c:	mov    rdi,rax
  41648f:	call   406853 <_start@@Base+0x5c3>
  416494:	mov    QWORD PTR [rbp-0x10],rax
  416498:	movabs rax,0xffffffff00000000
  4164a2:	and    rax,QWORD PTR [rbp-0x10]
  4164a6:	mov    rdx,rax
  4164a9:	movabs rax,0x6f6c6f7200000000
  4164b3:	cmp    rdx,rax
  4164b6:	jne    41651f <_start@@Base+0x1028f>
  4164b8:	mov    rax,QWORD PTR [rbp-0x30]
  4164bc:	mov    QWORD PTR [rbp-0x8],rax
  4164c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4164c4:	mov    rsi,QWORD PTR [rbp-0x8]
  4164c8:	mov    rax,QWORD PTR [rbp-0x28]
  4164cc:	mov    ecx,0x4
  4164d1:	mov    rdi,rax
  4164d4:	call   406897 <_start@@Base+0x607>
  4164d9:	mov    QWORD PTR [rbp-0x30],rax
  4164dd:	mov    rax,QWORD PTR [rbp-0x30]
  4164e1:	cmp    rax,QWORD PTR [rbp-0x8]
  4164e5:	je     416516 <_start@@Base+0x10286>
  4164e7:	mov    r8,QWORD PTR [rbp-0x50]
  4164eb:	mov    rdi,QWORD PTR [rbp-0x48]
  4164ef:	mov    rcx,QWORD PTR [rbp-0x40]
  4164f3:	mov    rdx,QWORD PTR [rbp-0x38]
  4164f7:	mov    rsi,QWORD PTR [rbp-0x30]
  4164fb:	mov    rax,QWORD PTR [rbp-0x28]
  4164ff:	mov    r9,r8
  416502:	mov    r8,rdi
  416505:	mov    rdi,rax
  416508:	call   40a110 <_start@@Base+0x3e80>
  41650d:	mov    QWORD PTR [rbp-0x30],rax
  416511:	jmp    416a76 <_start@@Base+0x107e6>
  416516:	mov    rax,QWORD PTR [rbp-0x18]
  41651a:	jmp    416a7a <_start@@Base+0x107ea>
  41651f:	mov    rax,QWORD PTR [rbp-0x18]
  416523:	jmp    416a7a <_start@@Base+0x107ea>
  416528:	movabs rax,0x78616d706c652e46
  416532:	cmp    QWORD PTR [rbp-0x10],rax
  416536:	jne    4165e8 <_start@@Base+0x10358>
  41653c:	add    QWORD PTR [rbp-0x30],0x8
  416541:	mov    rdx,QWORD PTR [rbp-0x38]
  416545:	mov    rax,QWORD PTR [rbp-0x30]
  416549:	mov    rsi,rdx
  41654c:	mov    rdi,rax
  41654f:	call   406853 <_start@@Base+0x5c3>
  416554:	mov    QWORD PTR [rbp-0x10],rax
  416558:	movabs rax,0xffff000000000000
  416562:	and    rax,QWORD PTR [rbp-0x10]
  416566:	mov    rdx,rax
  416569:	movabs rax,0x6f6f000000000000
  416573:	cmp    rdx,rax
  416576:	jne    4165df <_start@@Base+0x1034f>
  416578:	mov    rax,QWORD PTR [rbp-0x30]
  41657c:	mov    QWORD PTR [rbp-0x8],rax
  416580:	mov    rdx,QWORD PTR [rbp-0x38]
  416584:	mov    rsi,QWORD PTR [rbp-0x8]
  416588:	mov    rax,QWORD PTR [rbp-0x28]
  41658c:	mov    ecx,0x2
  416591:	mov    rdi,rax
  416594:	call   406897 <_start@@Base+0x607>
  416599:	mov    QWORD PTR [rbp-0x30],rax
  41659d:	mov    rax,QWORD PTR [rbp-0x30]
  4165a1:	cmp    rax,QWORD PTR [rbp-0x8]
  4165a5:	je     4165d6 <_start@@Base+0x10346>
  4165a7:	mov    r8,QWORD PTR [rbp-0x50]
  4165ab:	mov    rdi,QWORD PTR [rbp-0x48]
  4165af:	mov    rcx,QWORD PTR [rbp-0x40]
  4165b3:	mov    rdx,QWORD PTR [rbp-0x38]
  4165b7:	mov    rsi,QWORD PTR [rbp-0x30]
  4165bb:	mov    rax,QWORD PTR [rbp-0x28]
  4165bf:	mov    r9,r8
  4165c2:	mov    r8,rdi
  4165c5:	mov    rdi,rax
  4165c8:	call   409983 <_start@@Base+0x36f3>
  4165cd:	mov    QWORD PTR [rbp-0x30],rax
  4165d1:	jmp    416a76 <_start@@Base+0x107e6>
  4165d6:	mov    rax,QWORD PTR [rbp-0x18]
  4165da:	jmp    416a7a <_start@@Base+0x107ea>
  4165df:	mov    rax,QWORD PTR [rbp-0x18]
  4165e3:	jmp    416a7a <_start@@Base+0x107ea>
  4165e8:	mov    rax,QWORD PTR [rbp-0x18]
  4165ec:	jmp    416a7a <_start@@Base+0x107ea>
  4165f1:	movabs rax,0x78616d706c652e68
  4165fb:	cmp    QWORD PTR [rbp-0x10],rax
  4165ff:	ja     4166c6 <_start@@Base+0x10436>
  416605:	movabs rax,0x78616d706c652e68
  41660f:	cmp    QWORD PTR [rbp-0x10],rax
  416613:	jne    4166bd <_start@@Base+0x1042d>
  416619:	add    QWORD PTR [rbp-0x30],0x8
  41661e:	mov    rdx,QWORD PTR [rbp-0x38]
  416622:	mov    rax,QWORD PTR [rbp-0x30]
  416626:	mov    rsi,rdx
  416629:	mov    rdi,rax
  41662c:	call   406853 <_start@@Base+0x5c3>
  416631:	mov    QWORD PTR [rbp-0x10],rax
  416635:	mov    rax,QWORD PTR [rbp-0x10]
  416639:	mov    al,0x0
  41663b:	mov    rdx,rax
  41663e:	movabs rax,0x65785f656e756d00
  416648:	cmp    rdx,rax
  41664b:	jne    4166b4 <_start@@Base+0x10424>
  41664d:	mov    rax,QWORD PTR [rbp-0x30]
  416651:	mov    QWORD PTR [rbp-0x8],rax
  416655:	mov    rdx,QWORD PTR [rbp-0x38]
  416659:	mov    rsi,QWORD PTR [rbp-0x8]
  41665d:	mov    rax,QWORD PTR [rbp-0x28]
  416661:	mov    ecx,0x7
  416666:	mov    rdi,rax
  416669:	call   406897 <_start@@Base+0x607>
  41666e:	mov    QWORD PTR [rbp-0x30],rax
  416672:	mov    rax,QWORD PTR [rbp-0x30]
  416676:	cmp    rax,QWORD PTR [rbp-0x8]
  41667a:	je     4166ab <_start@@Base+0x1041b>
  41667c:	mov    r8,QWORD PTR [rbp-0x50]
  416680:	mov    rdi,QWORD PTR [rbp-0x48]
  416684:	mov    rcx,QWORD PTR [rbp-0x40]
  416688:	mov    rdx,QWORD PTR [rbp-0x38]
  41668c:	mov    rsi,QWORD PTR [rbp-0x30]
  416690:	mov    rax,QWORD PTR [rbp-0x28]
  416694:	mov    r9,r8
  416697:	mov    r8,rdi
  41669a:	mov    rdi,rax
  41669d:	call   409f4b <_start@@Base+0x3cbb>
  4166a2:	mov    QWORD PTR [rbp-0x30],rax
  4166a6:	jmp    416a76 <_start@@Base+0x107e6>
  4166ab:	mov    rax,QWORD PTR [rbp-0x18]
  4166af:	jmp    416a7a <_start@@Base+0x107ea>
  4166b4:	mov    rax,QWORD PTR [rbp-0x18]
  4166b8:	jmp    416a7a <_start@@Base+0x107ea>
  4166bd:	mov    rax,QWORD PTR [rbp-0x18]
  4166c1:	jmp    416a7a <_start@@Base+0x107ea>
  4166c6:	movabs rax,0x78616d706c652e6d
  4166d0:	cmp    QWORD PTR [rbp-0x10],rax
  4166d4:	ja     41679b <_start@@Base+0x1050b>
  4166da:	movabs rax,0x78616d706c652e69
  4166e4:	cmp    QWORD PTR [rbp-0x10],rax
  4166e8:	jne    416792 <_start@@Base+0x10502>
  4166ee:	add    QWORD PTR [rbp-0x30],0x8
  4166f3:	mov    rdx,QWORD PTR [rbp-0x38]
  4166f7:	mov    rax,QWORD PTR [rbp-0x30]
  4166fb:	mov    rsi,rdx
  4166fe:	mov    rdi,rax
  416701:	call   406853 <_start@@Base+0x5c3>
  416706:	mov    QWORD PTR [rbp-0x10],rax
  41670a:	mov    rax,QWORD PTR [rbp-0x10]
  41670e:	mov    al,0x0
  416710:	mov    rdx,rax
  416713:	movabs rax,0x6e745f656e756d00
  41671d:	cmp    rdx,rax
  416720:	jne    416789 <_start@@Base+0x104f9>
  416722:	mov    rax,QWORD PTR [rbp-0x30]
  416726:	mov    QWORD PTR [rbp-0x8],rax
  41672a:	mov    rdx,QWORD PTR [rbp-0x38]
  41672e:	mov    rsi,QWORD PTR [rbp-0x8]
  416732:	mov    rax,QWORD PTR [rbp-0x28]
  416736:	mov    ecx,0x7
  41673b:	mov    rdi,rax
  41673e:	call   406897 <_start@@Base+0x607>
  416743:	mov    QWORD PTR [rbp-0x30],rax
  416747:	mov    rax,QWORD PTR [rbp-0x30]
  41674b:	cmp    rax,QWORD PTR [rbp-0x8]
  41674f:	je     416780 <_start@@Base+0x104f0>
  416751:	mov    r8,QWORD PTR [rbp-0x50]
  416755:	mov    rdi,QWORD PTR [rbp-0x48]
  416759:	mov    rcx,QWORD PTR [rbp-0x40]
  41675d:	mov    rdx,QWORD PTR [rbp-0x38]
  416761:	mov    rsi,QWORD PTR [rbp-0x30]
  416765:	mov    rax,QWORD PTR [rbp-0x28]
  416769:	mov    r9,r8
  41676c:	mov    r8,rdi
  41676f:	mov    rdi,rax
  416772:	call   409cf8 <_start@@Base+0x3a68>
  416777:	mov    QWORD PTR [rbp-0x30],rax
  41677b:	jmp    416a76 <_start@@Base+0x107e6>
  416780:	mov    rax,QWORD PTR [rbp-0x18]
  416784:	jmp    416a7a <_start@@Base+0x107ea>
  416789:	mov    rax,QWORD PTR [rbp-0x18]
  41678d:	jmp    416a7a <_start@@Base+0x107ea>
  416792:	mov    rax,QWORD PTR [rbp-0x18]
  416796:	jmp    416a7a <_start@@Base+0x107ea>
  41679b:	movabs rax,0x78616d706c652e6e
  4167a5:	cmp    QWORD PTR [rbp-0x10],rax
  4167a9:	jne    41690e <_start@@Base+0x1067e>
  4167af:	add    QWORD PTR [rbp-0x30],0x8
  4167b4:	mov    rdx,QWORD PTR [rbp-0x38]
  4167b8:	mov    rax,QWORD PTR [rbp-0x30]
  4167bc:	mov    rsi,rdx
  4167bf:	mov    rdi,rax
  4167c2:	call   406853 <_start@@Base+0x5c3>
  4167c7:	mov    QWORD PTR [rbp-0x10],rax
  4167cb:	mov    rax,QWORD PTR [rbp-0x10]
  4167cf:	mov    al,0x0
  4167d1:	mov    rdx,rax
  4167d4:	movabs rax,0x65675f656e756d00
  4167de:	cmp    rdx,rax
  4167e1:	jne    416841 <_start@@Base+0x105b1>
  4167e3:	mov    rax,QWORD PTR [rbp-0x30]
  4167e7:	mov    QWORD PTR [rbp-0x8],rax
  4167eb:	mov    rdx,QWORD PTR [rbp-0x38]
  4167ef:	mov    rsi,QWORD PTR [rbp-0x8]
  4167f3:	mov    rax,QWORD PTR [rbp-0x28]
  4167f7:	mov    ecx,0x7
  4167fc:	mov    rdi,rax
  4167ff:	call   406897 <_start@@Base+0x607>
  416804:	mov    QWORD PTR [rbp-0x30],rax
  416808:	mov    rax,QWORD PTR [rbp-0x30]
  41680c:	cmp    rax,QWORD PTR [rbp-0x8]
  416810:	je     416844 <_start@@Base+0x105b4>
  416812:	mov    r8,QWORD PTR [rbp-0x50]
  416816:	mov    rdi,QWORD PTR [rbp-0x48]
  41681a:	mov    rcx,QWORD PTR [rbp-0x40]
  41681e:	mov    rdx,QWORD PTR [rbp-0x38]
  416822:	mov    rsi,QWORD PTR [rbp-0x30]
  416826:	mov    rax,QWORD PTR [rbp-0x28]
  41682a:	mov    r9,r8
  41682d:	mov    r8,rdi
  416830:	mov    rdi,rax
  416833:	call   409b2d <_start@@Base+0x389d>
  416838:	mov    QWORD PTR [rbp-0x30],rax
  41683c:	jmp    416a76 <_start@@Base+0x107e6>
  416841:	nop
  416842:	jmp    416845 <_start@@Base+0x105b5>
  416844:	nop
  416845:	movabs rax,0x6f74656d70747965
  41684f:	cmp    QWORD PTR [rbp-0x10],rax
  416853:	jne    416905 <_start@@Base+0x10675>
  416859:	add    QWORD PTR [rbp-0x30],0x8
  41685e:	mov    rdx,QWORD PTR [rbp-0x38]
  416862:	mov    rax,QWORD PTR [rbp-0x30]
  416866:	mov    rsi,rdx
  416869:	mov    rdi,rax
  41686c:	call   406853 <_start@@Base+0x5c3>
  416871:	mov    QWORD PTR [rbp-0x10],rax
  416875:	movabs rax,0xffffff0000000000
  41687f:	and    rax,QWORD PTR [rbp-0x10]
  416883:	mov    rdx,rax
  416886:	movabs rax,0x6e756d0000000000
  416890:	cmp    rdx,rax
  416893:	jne    4168fc <_start@@Base+0x1066c>
  416895:	mov    rax,QWORD PTR [rbp-0x30]
  416899:	mov    QWORD PTR [rbp-0x8],rax
  41689d:	mov    rdx,QWORD PTR [rbp-0x38]
  4168a1:	mov    rsi,QWORD PTR [rbp-0x8]
  4168a5:	mov    rax,QWORD PTR [rbp-0x28]
  4168a9:	mov    ecx,0x3
  4168ae:	mov    rdi,rax
  4168b1:	call   406897 <_start@@Base+0x607>
  4168b6:	mov    QWORD PTR [rbp-0x30],rax
  4168ba:	mov    rax,QWORD PTR [rbp-0x30]
  4168be:	cmp    rax,QWORD PTR [rbp-0x8]
  4168c2:	je     4168f3 <_start@@Base+0x10663>
  4168c4:	mov    r8,QWORD PTR [rbp-0x50]
  4168c8:	mov    rdi,QWORD PTR [rbp-0x48]
  4168cc:	mov    rcx,QWORD PTR [rbp-0x40]
  4168d0:	mov    rdx,QWORD PTR [rbp-0x38]
  4168d4:	mov    rsi,QWORD PTR [rbp-0x30]
  4168d8:	mov    rax,QWORD PTR [rbp-0x28]
  4168dc:	mov    r9,r8
  4168df:	mov    r8,rdi
  4168e2:	mov    rdi,rax
  4168e5:	call   40b013 <_start@@Base+0x4d83>
  4168ea:	mov    QWORD PTR [rbp-0x30],rax
  4168ee:	jmp    416a76 <_start@@Base+0x107e6>
  4168f3:	mov    rax,QWORD PTR [rbp-0x18]
  4168f7:	jmp    416a7a <_start@@Base+0x107ea>
  4168fc:	mov    rax,QWORD PTR [rbp-0x18]
  416900:	jmp    416a7a <_start@@Base+0x107ea>
  416905:	mov    rax,QWORD PTR [rbp-0x18]
  416909:	jmp    416a7a <_start@@Base+0x107ea>
  41690e:	mov    rax,QWORD PTR [rbp-0x18]
  416912:	jmp    416a7a <_start@@Base+0x107ea>
  416917:	movabs rax,0x4d7947616d652e4f
  416921:	cmp    QWORD PTR [rbp-0x10],rax
  416925:	jne    416a70 <_start@@Base+0x107e0>
  41692b:	add    QWORD PTR [rbp-0x30],0x8
  416930:	mov    rdx,QWORD PTR [rbp-0x38]
  416934:	mov    rax,QWORD PTR [rbp-0x30]
  416938:	mov    rsi,rdx
  41693b:	mov    rdi,rax
  41693e:	call   406853 <_start@@Base+0x5c3>
  416943:	mov    QWORD PTR [rbp-0x10],rax
  416947:	movabs rax,0x746865724e616d65
  416951:	cmp    QWORD PTR [rbp-0x10],rax
  416955:	jne    416a6a <_start@@Base+0x107da>
  41695b:	add    QWORD PTR [rbp-0x30],0x8
  416960:	mov    rdx,QWORD PTR [rbp-0x38]
  416964:	mov    rax,QWORD PTR [rbp-0x30]
  416968:	mov    rsi,rdx
  41696b:	mov    rdi,rax
  41696e:	call   406853 <_start@@Base+0x5c3>
  416973:	mov    QWORD PTR [rbp-0x10],rax
  416977:	movabs rax,0x53706163652e4672
  416981:	cmp    QWORD PTR [rbp-0x10],rax
  416985:	jne    416a64 <_start@@Base+0x107d4>
  41698b:	add    QWORD PTR [rbp-0x30],0x8
  416990:	mov    rdx,QWORD PTR [rbp-0x38]
  416994:	mov    rax,QWORD PTR [rbp-0x30]
  416998:	mov    rsi,rdx
  41699b:	mov    rdi,rax
  41699e:	call   406853 <_start@@Base+0x5c3>
  4169a3:	mov    QWORD PTR [rbp-0x10],rax
  4169a7:	movabs rax,0x6f6d496e636c7564
  4169b1:	cmp    QWORD PTR [rbp-0x10],rax
  4169b5:	jne    416a5e <_start@@Base+0x107ce>
  4169bb:	add    QWORD PTR [rbp-0x30],0x8
  4169c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4169c4:	mov    rax,QWORD PTR [rbp-0x30]
  4169c8:	mov    rsi,rdx
  4169cb:	mov    rdi,rax
  4169ce:	call   406853 <_start@@Base+0x5c3>
  4169d3:	mov    QWORD PTR [rbp-0x10],rax
  4169d7:	movabs rax,0xff00000000000000
  4169e1:	and    rax,QWORD PTR [rbp-0x10]
  4169e5:	mov    rdx,rax
  4169e8:	movabs rax,0x6500000000000000
  4169f2:	cmp    rdx,rax
  4169f5:	jne    416a58 <_start@@Base+0x107c8>
  4169f7:	mov    rax,QWORD PTR [rbp-0x30]
  4169fb:	mov    QWORD PTR [rbp-0x8],rax
  4169ff:	mov    rdx,QWORD PTR [rbp-0x38]
  416a03:	mov    rsi,QWORD PTR [rbp-0x8]
  416a07:	mov    rax,QWORD PTR [rbp-0x28]
  416a0b:	mov    ecx,0x1
  416a10:	mov    rdi,rax
  416a13:	call   406897 <_start@@Base+0x607>
  416a18:	mov    QWORD PTR [rbp-0x30],rax
  416a1c:	mov    rax,QWORD PTR [rbp-0x30]
  416a20:	cmp    rax,QWORD PTR [rbp-0x8]
  416a24:	je     416a52 <_start@@Base+0x107c2>
  416a26:	mov    r8,QWORD PTR [rbp-0x50]
  416a2a:	mov    rdi,QWORD PTR [rbp-0x48]
  416a2e:	mov    rcx,QWORD PTR [rbp-0x40]
  416a32:	mov    rdx,QWORD PTR [rbp-0x38]
  416a36:	mov    rsi,QWORD PTR [rbp-0x30]
  416a3a:	mov    rax,QWORD PTR [rbp-0x28]
  416a3e:	mov    r9,r8
  416a41:	mov    r8,rdi
  416a44:	mov    rdi,rax
  416a47:	call   408a0b <_start@@Base+0x277b>
  416a4c:	mov    QWORD PTR [rbp-0x30],rax
  416a50:	jmp    416a76 <_start@@Base+0x107e6>
  416a52:	mov    rax,QWORD PTR [rbp-0x18]
  416a56:	jmp    416a7a <_start@@Base+0x107ea>
  416a58:	mov    rax,QWORD PTR [rbp-0x18]
  416a5c:	jmp    416a7a <_start@@Base+0x107ea>
  416a5e:	mov    rax,QWORD PTR [rbp-0x18]
  416a62:	jmp    416a7a <_start@@Base+0x107ea>
  416a64:	mov    rax,QWORD PTR [rbp-0x18]
  416a68:	jmp    416a7a <_start@@Base+0x107ea>
  416a6a:	mov    rax,QWORD PTR [rbp-0x18]
  416a6e:	jmp    416a7a <_start@@Base+0x107ea>
  416a70:	mov    rax,QWORD PTR [rbp-0x18]
  416a74:	jmp    416a7a <_start@@Base+0x107ea>
  416a76:	mov    rax,QWORD PTR [rbp-0x30]
  416a7a:	leave  
  416a7b:	ret    
  416a7c:	endbr64 
  416a80:	push   rbp
  416a81:	mov    rbp,rsp
  416a84:	sub    rsp,0x90
  416a8b:	mov    QWORD PTR [rbp-0x68],rdi
  416a8f:	mov    QWORD PTR [rbp-0x70],rsi
  416a93:	mov    QWORD PTR [rbp-0x78],rdx
  416a97:	mov    QWORD PTR [rbp-0x80],rcx
  416a9b:	mov    DWORD PTR [rbp-0x84],r8d
  416aa2:	mov    rax,QWORD PTR fs:0x28
  416aab:	mov    QWORD PTR [rbp-0x8],rax
  416aaf:	xor    eax,eax
  416ab1:	cmp    QWORD PTR [rbp-0x70],0x0
  416ab6:	jne    416abe <_start@@Base+0x1082e>
  416ab8:	lea    rax,[rbp-0x50]
  416abc:	jmp    416ac2 <_start@@Base+0x10832>
  416abe:	mov    rax,QWORD PTR [rbp-0x70]
  416ac2:	mov    QWORD PTR [rbp-0x70],rax
  416ac6:	mov    rdx,QWORD PTR [rbp-0x78]
  416aca:	mov    rax,QWORD PTR [rbp-0x80]
  416ace:	lea    rcx,[rdx+rax*1]
  416ad2:	mov    edi,DWORD PTR [rbp-0x84]
  416ad8:	mov    rdx,QWORD PTR [rbp-0x78]
  416adc:	mov    rsi,QWORD PTR [rbp-0x68]
  416ae0:	mov    rax,QWORD PTR [rbp-0x70]
  416ae4:	mov    r8d,edi
  416ae7:	mov    rdi,rax
  416aea:	call   4065f6 <_start@@Base+0x366>
  416aef:	mov    rax,QWORD PTR [rbp-0x68]
  416af3:	mov    ecx,0x0
  416af8:	mov    edx,0x0
  416afd:	lea    rsi,[rip+0x1f56c]        # 436070 <_IO_stdin_used@@Base+0x70>
  416b04:	mov    rdi,rax
  416b07:	call   41d46e <flatcc_builder_start_buffer@@Base>
  416b0c:	test   eax,eax
  416b0e:	je     416b17 <_start@@Base+0x10887>
  416b10:	mov    eax,0xffffffff
  416b15:	jmp    416b7e <_start@@Base+0x108ee>
  416b17:	mov    rdx,QWORD PTR [rbp-0x78]
  416b1b:	mov    rax,QWORD PTR [rbp-0x80]
  416b1f:	lea    rdi,[rdx+rax*1]
  416b23:	lea    rdx,[rbp-0x54]
  416b27:	mov    rsi,QWORD PTR [rbp-0x78]
  416b2b:	mov    rax,QWORD PTR [rbp-0x70]
  416b2f:	mov    rcx,rdx
  416b32:	mov    rdx,rdi
  416b35:	mov    rdi,rax
  416b38:	call   40f343 <_start@@Base+0x90b3>
  416b3d:	mov    rax,QWORD PTR [rbp-0x70]
  416b41:	mov    eax,DWORD PTR [rax+0x1c]
  416b44:	test   eax,eax
  416b46:	je     416b51 <_start@@Base+0x108c1>
  416b48:	mov    rax,QWORD PTR [rbp-0x70]
  416b4c:	mov    eax,DWORD PTR [rax+0x1c]
  416b4f:	jmp    416b7e <_start@@Base+0x108ee>
  416b51:	mov    edx,DWORD PTR [rbp-0x54]
  416b54:	mov    rax,QWORD PTR [rbp-0x68]
  416b58:	mov    esi,edx
  416b5a:	mov    rdi,rax
  416b5d:	call   41d5bb <flatcc_builder_end_buffer@@Base>
  416b62:	test   eax,eax
  416b64:	jne    416b6d <_start@@Base+0x108dd>
  416b66:	mov    eax,0xffffffff
  416b6b:	jmp    416b7e <_start@@Base+0x108ee>
  416b6d:	mov    rax,QWORD PTR [rbp-0x70]
  416b71:	mov    rdx,QWORD PTR [rbp-0x78]
  416b75:	mov    QWORD PTR [rax+0x38],rdx
  416b79:	mov    eax,0x0
  416b7e:	mov    rcx,QWORD PTR [rbp-0x8]
  416b82:	xor    rcx,QWORD PTR fs:0x28
  416b8b:	je     416b92 <_start@@Base+0x10902>
  416b8d:	call   4061a0 <__stack_chk_fail@plt>
  416b92:	leave  
  416b93:	ret    
  416b94:	push   rbp
  416b95:	mov    rbp,rsp
  416b98:	mov    QWORD PTR [rbp-0x8],rdi
  416b9c:	mov    DWORD PTR [rbp-0xc],esi
  416b9f:	cmp    DWORD PTR [rbp-0xc],0x0
  416ba3:	setne  al
  416ba6:	mov    edx,eax
  416ba8:	mov    rax,QWORD PTR [rbp-0x8]
  416bac:	mov    BYTE PTR [rax+0x32],dl
  416baf:	nop
  416bb0:	pop    rbp
  416bb1:	ret    
  416bb2:	push   rbp
  416bb3:	mov    rbp,rsp
  416bb6:	mov    QWORD PTR [rbp-0x8],rdi
  416bba:	mov    DWORD PTR [rbp-0xc],esi
  416bbd:	cmp    DWORD PTR [rbp-0xc],0x0
  416bc1:	setne  al
  416bc4:	mov    edx,eax
  416bc6:	mov    rax,QWORD PTR [rbp-0x8]
  416bca:	mov    BYTE PTR [rax+0x33],dl
  416bcd:	nop
  416bce:	pop    rbp
  416bcf:	ret    
  416bd0:	push   rbp
  416bd1:	mov    rbp,rsp
  416bd4:	mov    QWORD PTR [rbp-0x8],rdi
  416bd8:	mov    eax,esi
  416bda:	mov    BYTE PTR [rbp-0xc],al
  416bdd:	mov    rdx,QWORD PTR [rbp-0x8]
  416be1:	movzx  eax,BYTE PTR [rbp-0xc]
  416be5:	mov    BYTE PTR [rdx+0x31],al
  416be8:	nop
  416be9:	pop    rbp
  416bea:	ret    
  416beb:	push   rbp
  416bec:	mov    rbp,rsp
  416bef:	sub    rsp,0x8
  416bf3:	mov    QWORD PTR [rbp-0x8],rdi
  416bf7:	mov    rax,QWORD PTR [rbp-0x8]
  416bfb:	mov    esi,0x2
  416c00:	mov    rdi,rax
  416c03:	call   416bd0 <_start@@Base+0x10940>
  416c08:	mov    rax,QWORD PTR [rbp-0x8]
  416c0c:	mov    esi,0x1
  416c11:	mov    rdi,rax
  416c14:	call   416b94 <_start@@Base+0x10904>
  416c19:	mov    rax,QWORD PTR [rbp-0x8]
  416c1d:	mov    esi,0x0
  416c22:	mov    rdi,rax
  416c25:	call   416bb2 <_start@@Base+0x10922>
  416c2a:	nop
  416c2b:	leave  
  416c2c:	ret    
  416c2d:	push   rbp
  416c2e:	mov    rbp,rsp
  416c31:	sub    rsp,0x10
  416c35:	mov    QWORD PTR [rbp-0x8],rdi
  416c39:	mov    DWORD PTR [rbp-0xc],esi
  416c3c:	mov    eax,DWORD PTR [rbp-0xc]
  416c3f:	and    eax,0x1
  416c42:	test   eax,eax
  416c44:	setne  al
  416c47:	mov    edx,eax
  416c49:	mov    rax,QWORD PTR [rbp-0x8]
  416c4d:	mov    BYTE PTR [rax+0x32],dl
  416c50:	mov    eax,DWORD PTR [rbp-0xc]
  416c53:	and    eax,0x2
  416c56:	test   eax,eax
  416c58:	setne  al
  416c5b:	mov    edx,eax
  416c5d:	mov    rax,QWORD PTR [rbp-0x8]
  416c61:	mov    BYTE PTR [rax+0x33],dl
  416c64:	mov    eax,DWORD PTR [rbp-0xc]
  416c67:	and    eax,0x4
  416c6a:	test   eax,eax
  416c6c:	setne  al
  416c6f:	mov    edx,eax
  416c71:	mov    rax,QWORD PTR [rbp-0x8]
  416c75:	mov    BYTE PTR [rax+0x34],dl
  416c78:	mov    eax,DWORD PTR [rbp-0xc]
  416c7b:	and    eax,0x8
  416c7e:	test   eax,eax
  416c80:	setne  al
  416c83:	mov    edx,eax
  416c85:	mov    rax,QWORD PTR [rbp-0x8]
  416c89:	mov    BYTE PTR [rax+0x35],dl
  416c8c:	mov    eax,DWORD PTR [rbp-0xc]
  416c8f:	and    eax,0x10
  416c92:	test   eax,eax
  416c94:	je     416ca7 <_start@@Base+0x10a17>
  416c96:	mov    rax,QWORD PTR [rbp-0x8]
  416c9a:	mov    esi,0x2
  416c9f:	mov    rdi,rax
  416ca2:	call   416bd0 <_start@@Base+0x10940>
  416ca7:	mov    eax,DWORD PTR [rbp-0xc]
  416caa:	and    eax,0x20
  416cad:	test   eax,eax
  416caf:	je     416cbd <_start@@Base+0x10a2d>
  416cb1:	mov    rax,QWORD PTR [rbp-0x8]
  416cb5:	mov    rdi,rax
  416cb8:	call   416beb <_start@@Base+0x1095b>
  416cbd:	nop
  416cbe:	leave  
  416cbf:	ret    
  416cc0:	endbr64 
  416cc4:	push   rbp
  416cc5:	mov    rbp,rsp
  416cc8:	sub    rsp,0x10
  416ccc:	mov    QWORD PTR [rbp-0x8],rdi
  416cd0:	mov    QWORD PTR [rbp-0x10],rsi
  416cd4:	cmp    QWORD PTR [rbp-0x10],0x0
  416cd9:	je     416ce4 <_start@@Base+0x10a54>
  416cdb:	cmp    QWORD PTR [rbp-0x10],0x11
  416ce0:	je     416cfe <_start@@Base+0x10a6e>
  416ce2:	jmp    416d18 <_start@@Base+0x10a88>
  416ce4:	mov    rax,QWORD PTR [rbp-0x8]
  416ce8:	mov    edx,0xa
  416ced:	lea    rsi,[rip+0x1f381]        # 436075 <_IO_stdin_used@@Base+0x75>
  416cf4:	mov    rdi,rax
  416cf7:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416cfc:	jmp    416d2c <_start@@Base+0x10a9c>
  416cfe:	mov    rax,QWORD PTR [rbp-0x8]
  416d02:	mov    edx,0x3
  416d07:	lea    rsi,[rip+0x1f372]        # 436080 <_IO_stdin_used@@Base+0x80>
  416d0e:	mov    rdi,rax
  416d11:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416d16:	jmp    416d2c <_start@@Base+0x10a9c>
  416d18:	mov    rdx,QWORD PTR [rbp-0x10]
  416d1c:	mov    rax,QWORD PTR [rbp-0x8]
  416d20:	mov    rsi,rdx
  416d23:	mov    rdi,rax
  416d26:	call   42dff9 <flatcc_json_printer_int64@@Base>
  416d2b:	nop
  416d2c:	nop
  416d2d:	leave  
  416d2e:	ret    
  416d2f:	endbr64 
  416d33:	push   rbp
  416d34:	mov    rbp,rsp
  416d37:	mov    QWORD PTR [rbp-0x8],rdi
  416d3b:	mov    QWORD PTR [rbp-0x10],rsi
  416d3f:	nop
  416d40:	pop    rbp
  416d41:	ret    
  416d42:	endbr64 
  416d46:	push   rbp
  416d47:	mov    rbp,rsp
  416d4a:	sub    rsp,0x10
  416d4e:	mov    QWORD PTR [rbp-0x8],rdi
  416d52:	mov    DWORD PTR [rbp-0xc],esi
  416d55:	cmp    DWORD PTR [rbp-0xc],0xfffffff5
  416d59:	je     416d81 <_start@@Base+0x10af1>
  416d5b:	cmp    DWORD PTR [rbp-0xc],0xfffffff6
  416d5f:	je     416d9b <_start@@Base+0x10b0b>
  416d61:	cmp    DWORD PTR [rbp-0xc],0xfffffff4
  416d65:	jne    416db5 <_start@@Base+0x10b25>
  416d67:	mov    rax,QWORD PTR [rbp-0x8]
  416d6b:	mov    edx,0x4
  416d70:	lea    rsi,[rip+0x1f30d]        # 436084 <_IO_stdin_used@@Base+0x84>
  416d77:	mov    rdi,rax
  416d7a:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416d7f:	jmp    416dc7 <_start@@Base+0x10b37>
  416d81:	mov    rax,QWORD PTR [rbp-0x8]
  416d85:	mov    edx,0x4
  416d8a:	lea    rsi,[rip+0x1f2f8]        # 436089 <_IO_stdin_used@@Base+0x89>
  416d91:	mov    rdi,rax
  416d94:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416d99:	jmp    416dc7 <_start@@Base+0x10b37>
  416d9b:	mov    rax,QWORD PTR [rbp-0x8]
  416d9f:	mov    edx,0x4
  416da4:	lea    rsi,[rip+0x1f2e3]        # 43608e <_IO_stdin_used@@Base+0x8e>
  416dab:	mov    rdi,rax
  416dae:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416db3:	jmp    416dc7 <_start@@Base+0x10b37>
  416db5:	mov    edx,DWORD PTR [rbp-0xc]
  416db8:	mov    rax,QWORD PTR [rbp-0x8]
  416dbc:	mov    esi,edx
  416dbe:	mov    rdi,rax
  416dc1:	call   42dfb6 <flatcc_json_printer_int32@@Base>
  416dc6:	nop
  416dc7:	nop
  416dc8:	leave  
  416dc9:	ret    
  416dca:	endbr64 
  416dce:	push   rbp
  416dcf:	mov    rbp,rsp
  416dd2:	sub    rsp,0x10
  416dd6:	mov    QWORD PTR [rbp-0x8],rdi
  416dda:	mov    DWORD PTR [rbp-0xc],esi
  416ddd:	cmp    DWORD PTR [rbp-0xc],0xffffffff
  416de1:	je     416e19 <_start@@Base+0x10b89>
  416de3:	cmp    DWORD PTR [rbp-0xc],0x0
  416de7:	jns    416df1 <_start@@Base+0x10b61>
  416de9:	cmp    DWORD PTR [rbp-0xc],0xfffffffe
  416ded:	je     416dff <_start@@Base+0x10b6f>
  416def:	jmp    416e67 <_start@@Base+0x10bd7>
  416df1:	cmp    DWORD PTR [rbp-0xc],0x2
  416df5:	je     416e33 <_start@@Base+0x10ba3>
  416df7:	cmp    DWORD PTR [rbp-0xc],0x2a
  416dfb:	je     416e4d <_start@@Base+0x10bbd>
  416dfd:	jmp    416e67 <_start@@Base+0x10bd7>
  416dff:	mov    rax,QWORD PTR [rbp-0x8]
  416e03:	mov    edx,0x6
  416e08:	lea    rsi,[rip+0x1f284]        # 436093 <_IO_stdin_used@@Base+0x93>
  416e0f:	mov    rdi,rax
  416e12:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416e17:	jmp    416e79 <_start@@Base+0x10be9>
  416e19:	mov    rax,QWORD PTR [rbp-0x8]
  416e1d:	mov    edx,0x7
  416e22:	lea    rsi,[rip+0x1f271]        # 43609a <_IO_stdin_used@@Base+0x9a>
  416e29:	mov    rdi,rax
  416e2c:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416e31:	jmp    416e79 <_start@@Base+0x10be9>
  416e33:	mov    rax,QWORD PTR [rbp-0x8]
  416e37:	mov    edx,0x4
  416e3c:	lea    rsi,[rip+0x1f25f]        # 4360a2 <_IO_stdin_used@@Base+0xa2>
  416e43:	mov    rdi,rax
  416e46:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416e4b:	jmp    416e79 <_start@@Base+0x10be9>
  416e4d:	mov    rax,QWORD PTR [rbp-0x8]
  416e51:	mov    edx,0x4
  416e56:	lea    rsi,[rip+0x1f24a]        # 4360a7 <_IO_stdin_used@@Base+0xa7>
  416e5d:	mov    rdi,rax
  416e60:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416e65:	jmp    416e79 <_start@@Base+0x10be9>
  416e67:	mov    edx,DWORD PTR [rbp-0xc]
  416e6a:	mov    rax,QWORD PTR [rbp-0x8]
  416e6e:	mov    esi,edx
  416e70:	mov    rdi,rax
  416e73:	call   42dfb6 <flatcc_json_printer_int32@@Base>
  416e78:	nop
  416e79:	nop
  416e7a:	leave  
  416e7b:	ret    
  416e7c:	endbr64 
  416e80:	push   rbp
  416e81:	mov    rbp,rsp
  416e84:	sub    rsp,0x10
  416e88:	mov    QWORD PTR [rbp-0x8],rdi
  416e8c:	mov    DWORD PTR [rbp-0xc],esi
  416e8f:	cmp    DWORD PTR [rbp-0xc],0x3
  416e93:	je     416ebe <_start@@Base+0x10c2e>
  416e95:	cmp    DWORD PTR [rbp-0xc],0x7eafbeaf
  416e9c:	je     416ed8 <_start@@Base+0x10c48>
  416e9e:	cmp    DWORD PTR [rbp-0xc],0xfffffffe
  416ea2:	jne    416ef2 <_start@@Base+0x10c62>
  416ea4:	mov    rax,QWORD PTR [rbp-0x8]
  416ea8:	mov    edx,0x6
  416ead:	lea    rsi,[rip+0x1f1f8]        # 4360ac <_IO_stdin_used@@Base+0xac>
  416eb4:	mov    rdi,rax
  416eb7:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416ebc:	jmp    416f04 <_start@@Base+0x10c74>
  416ebe:	mov    rax,QWORD PTR [rbp-0x8]
  416ec2:	mov    edx,0x4
  416ec7:	lea    rsi,[rip+0x1f1e5]        # 4360b3 <_IO_stdin_used@@Base+0xb3>
  416ece:	mov    rdi,rax
  416ed1:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416ed6:	jmp    416f04 <_start@@Base+0x10c74>
  416ed8:	mov    rax,QWORD PTR [rbp-0x8]
  416edc:	mov    edx,0x4
  416ee1:	lea    rsi,[rip+0x1f1d0]        # 4360b8 <_IO_stdin_used@@Base+0xb8>
  416ee8:	mov    rdi,rax
  416eeb:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  416ef0:	jmp    416f04 <_start@@Base+0x10c74>
  416ef2:	mov    edx,DWORD PTR [rbp-0xc]
  416ef5:	mov    rax,QWORD PTR [rbp-0x8]
  416ef9:	mov    esi,edx
  416efb:	mov    rdi,rax
  416efe:	call   42dfb6 <flatcc_json_printer_int32@@Base>
  416f03:	nop
  416f04:	nop
  416f05:	leave  
  416f06:	ret    
  416f07:	endbr64 
  416f0b:	push   rbp
  416f0c:	mov    rbp,rsp
  416f0f:	sub    rsp,0x20
  416f13:	mov    QWORD PTR [rbp-0x18],rdi
  416f17:	mov    eax,esi
  416f19:	mov    BYTE PTR [rbp-0x1c],al
  416f1c:	movzx  eax,BYTE PTR [rbp-0x1c]
  416f20:	mov    BYTE PTR [rbp-0x9],al
  416f23:	movzx  eax,BYTE PTR [rbp-0x9]
  416f27:	movzx  edx,BYTE PTR [rbp-0x9]
  416f2b:	dec    edx
  416f2d:	and    eax,edx
  416f2f:	test   eax,eax
  416f31:	setne  al
  416f34:	movzx  eax,al
  416f37:	mov    DWORD PTR [rbp-0x4],eax
  416f3a:	mov    DWORD PTR [rbp-0x8],0x0
  416f41:	movzx  eax,BYTE PTR [rbp-0x9]
  416f45:	and    eax,0xf4
  416f4a:	test   eax,eax
  416f4c:	jne    416f54 <_start@@Base+0x10cc4>
  416f4e:	cmp    BYTE PTR [rbp-0x9],0x0
  416f52:	jne    416f6b <_start@@Base+0x10cdb>
  416f54:	movsx  edx,BYTE PTR [rbp-0x1c]
  416f58:	mov    rax,QWORD PTR [rbp-0x18]
  416f5c:	mov    esi,edx
  416f5e:	mov    rdi,rax
  416f61:	call   42df29 <flatcc_json_printer_int8@@Base>
  416f66:	jmp    41700e <_start@@Base+0x10d7e>
  416f6b:	mov    edx,DWORD PTR [rbp-0x4]
  416f6e:	mov    rax,QWORD PTR [rbp-0x18]
  416f72:	mov    esi,edx
  416f74:	mov    rdi,rax
  416f77:	call   42e10a <flatcc_json_printer_delimit_enum_flags@@Base>
  416f7c:	movzx  eax,BYTE PTR [rbp-0x9]
  416f80:	and    eax,0x1
  416f83:	test   eax,eax
  416f85:	je     416fa7 <_start@@Base+0x10d17>
  416f87:	mov    eax,DWORD PTR [rbp-0x8]
  416f8a:	lea    edx,[rax+0x1]
  416f8d:	mov    DWORD PTR [rbp-0x8],edx
  416f90:	mov    rdi,QWORD PTR [rbp-0x18]
  416f94:	mov    ecx,0x3
  416f99:	lea    rdx,[rip+0x1f11d]        # 4360bd <_IO_stdin_used@@Base+0xbd>
  416fa0:	mov    esi,eax
  416fa2:	call   42e160 <flatcc_json_printer_enum_flag@@Base>
  416fa7:	movzx  eax,BYTE PTR [rbp-0x9]
  416fab:	and    eax,0x2
  416fae:	test   eax,eax
  416fb0:	je     416fd2 <_start@@Base+0x10d42>
  416fb2:	mov    eax,DWORD PTR [rbp-0x8]
  416fb5:	lea    edx,[rax+0x1]
  416fb8:	mov    DWORD PTR [rbp-0x8],edx
  416fbb:	mov    rdi,QWORD PTR [rbp-0x18]
  416fbf:	mov    ecx,0x5
  416fc4:	lea    rdx,[rip+0x1f0f6]        # 4360c1 <_IO_stdin_used@@Base+0xc1>
  416fcb:	mov    esi,eax
  416fcd:	call   42e160 <flatcc_json_printer_enum_flag@@Base>
  416fd2:	movzx  eax,BYTE PTR [rbp-0x9]
  416fd6:	and    eax,0x8
  416fd9:	test   eax,eax
  416fdb:	je     416ffd <_start@@Base+0x10d6d>
  416fdd:	mov    eax,DWORD PTR [rbp-0x8]
  416fe0:	lea    edx,[rax+0x1]
  416fe3:	mov    DWORD PTR [rbp-0x8],edx
  416fe6:	mov    rdi,QWORD PTR [rbp-0x18]
  416fea:	mov    ecx,0x4
  416fef:	lea    rdx,[rip+0x1f0d1]        # 4360c7 <_IO_stdin_used@@Base+0xc7>
  416ff6:	mov    esi,eax
  416ff8:	call   42e160 <flatcc_json_printer_enum_flag@@Base>
  416ffd:	mov    edx,DWORD PTR [rbp-0x4]
  417000:	mov    rax,QWORD PTR [rbp-0x18]
  417004:	mov    esi,edx
  417006:	mov    rdi,rax
  417009:	call   42e10a <flatcc_json_printer_delimit_enum_flags@@Base>
  41700e:	leave  
  41700f:	ret    
  417010:	endbr64 
  417014:	push   rbp
  417015:	mov    rbp,rsp
  417018:	sub    rsp,0x10
  41701c:	mov    QWORD PTR [rbp-0x8],rdi
  417020:	mov    DWORD PTR [rbp-0xc],esi
  417023:	cmp    DWORD PTR [rbp-0xc],0x0
  417027:	jne    417043 <_start@@Base+0x10db3>
  417029:	mov    rax,QWORD PTR [rbp-0x8]
  41702d:	mov    edx,0x1
  417032:	lea    rsi,[rip+0x1f093]        # 4360cc <_IO_stdin_used@@Base+0xcc>
  417039:	mov    rdi,rax
  41703c:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417041:	jmp    417055 <_start@@Base+0x10dc5>
  417043:	mov    edx,DWORD PTR [rbp-0xc]
  417046:	mov    rax,QWORD PTR [rbp-0x8]
  41704a:	mov    esi,edx
  41704c:	mov    rdi,rax
  41704f:	call   42dfb6 <flatcc_json_printer_int32@@Base>
  417054:	nop
  417055:	nop
  417056:	leave  
  417057:	ret    
  417058:	endbr64 
  41705c:	push   rbp
  41705d:	mov    rbp,rsp
  417060:	sub    rsp,0x10
  417064:	mov    QWORD PTR [rbp-0x8],rdi
  417068:	mov    eax,esi
  41706a:	mov    BYTE PTR [rbp-0xc],al
  41706d:	movzx  eax,BYTE PTR [rbp-0xc]
  417071:	cmp    eax,0x1
  417074:	jne    417090 <_start@@Base+0x10e00>
  417076:	mov    rax,QWORD PTR [rbp-0x8]
  41707a:	mov    edx,0x11
  41707f:	lea    rsi,[rip+0x1f048]        # 4360ce <_IO_stdin_used@@Base+0xce>
  417086:	mov    rdi,rax
  417089:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  41708e:	jmp    4170a9 <_start@@Base+0x10e19>
  417090:	mov    rax,QWORD PTR [rbp-0x8]
  417094:	mov    edx,0x4
  417099:	lea    rsi,[rip+0x1f040]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  4170a0:	mov    rdi,rax
  4170a3:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  4170a8:	nop
  4170a9:	nop
  4170aa:	leave  
  4170ab:	ret    
  4170ac:	endbr64 
  4170b0:	push   rbp
  4170b1:	mov    rbp,rsp
  4170b4:	sub    rsp,0x10
  4170b8:	mov    QWORD PTR [rbp-0x8],rdi
  4170bc:	mov    QWORD PTR [rbp-0x10],rsi
  4170c0:	mov    rax,QWORD PTR [rbp-0x10]
  4170c4:	movzx  eax,BYTE PTR [rax+0xc]
  4170c8:	movzx  eax,al
  4170cb:	cmp    eax,0x1
  4170ce:	jne    4170ec <_start@@Base+0x10e5c>
  4170d0:	mov    rcx,QWORD PTR [rbp-0x10]
  4170d4:	mov    rax,QWORD PTR [rbp-0x8]
  4170d8:	lea    rdx,[rip+0x606]        # 4176e5 <_start@@Base+0x11455>
  4170df:	mov    rsi,rcx
  4170e2:	mov    rdi,rax
  4170e5:	call   434bed <flatcc_json_printer_union_table@@Base>
  4170ea:	jmp    4170ed <_start@@Base+0x10e5d>
  4170ec:	nop
  4170ed:	nop
  4170ee:	leave  
  4170ef:	ret    
  4170f0:	endbr64 
  4170f4:	push   rbp
  4170f5:	mov    rbp,rsp
  4170f8:	sub    rsp,0x10
  4170fc:	mov    QWORD PTR [rbp-0x8],rdi
  417100:	mov    eax,esi
  417102:	mov    BYTE PTR [rbp-0xc],al
  417105:	movzx  eax,BYTE PTR [rbp-0xc]
  417109:	cmp    eax,0x2
  41710c:	je     417140 <_start@@Base+0x10eb0>
  41710e:	cmp    eax,0x2
  417111:	jg     41711a <_start@@Base+0x10e8a>
  417113:	cmp    eax,0x1
  417116:	je     417126 <_start@@Base+0x10e96>
  417118:	jmp    41718e <_start@@Base+0x10efe>
  41711a:	cmp    eax,0x3
  41711d:	je     41715a <_start@@Base+0x10eca>
  41711f:	cmp    eax,0x4
  417122:	je     417174 <_start@@Base+0x10ee4>
  417124:	jmp    41718e <_start@@Base+0x10efe>
  417126:	mov    rax,QWORD PTR [rbp-0x8]
  41712a:	mov    edx,0x7
  41712f:	lea    rsi,[rip+0x1efaf]        # 4360e5 <_IO_stdin_used@@Base+0xe5>
  417136:	mov    rdi,rax
  417139:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  41713e:	jmp    4171a7 <_start@@Base+0x10f17>
  417140:	mov    rax,QWORD PTR [rbp-0x8]
  417144:	mov    edx,0x17
  417149:	lea    rsi,[rip+0x1ef9d]        # 4360ed <_IO_stdin_used@@Base+0xed>
  417150:	mov    rdi,rax
  417153:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417158:	jmp    4171a7 <_start@@Base+0x10f17>
  41715a:	mov    rax,QWORD PTR [rbp-0x8]
  41715e:	mov    edx,0x8
  417163:	lea    rsi,[rip+0x1ef9b]        # 436105 <_IO_stdin_used@@Base+0x105>
  41716a:	mov    rdi,rax
  41716d:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417172:	jmp    4171a7 <_start@@Base+0x10f17>
  417174:	mov    rax,QWORD PTR [rbp-0x8]
  417178:	mov    edx,0x3
  41717d:	lea    rsi,[rip+0x1ef8a]        # 43610e <_IO_stdin_used@@Base+0x10e>
  417184:	mov    rdi,rax
  417187:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  41718c:	jmp    4171a7 <_start@@Base+0x10f17>
  41718e:	mov    rax,QWORD PTR [rbp-0x8]
  417192:	mov    edx,0x4
  417197:	lea    rsi,[rip+0x1ef42]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  41719e:	mov    rdi,rax
  4171a1:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  4171a6:	nop
  4171a7:	nop
  4171a8:	leave  
  4171a9:	ret    
  4171aa:	endbr64 
  4171ae:	push   rbp
  4171af:	mov    rbp,rsp
  4171b2:	sub    rsp,0x10
  4171b6:	mov    QWORD PTR [rbp-0x8],rdi
  4171ba:	mov    QWORD PTR [rbp-0x10],rsi
  4171be:	mov    rax,QWORD PTR [rbp-0x10]
  4171c2:	movzx  eax,BYTE PTR [rax+0xc]
  4171c6:	movzx  eax,al
  4171c9:	cmp    eax,0x2
  4171cc:	je     417202 <_start@@Base+0x10f72>
  4171ce:	cmp    eax,0x2
  4171d1:	jg     4171da <_start@@Base+0x10f4a>
  4171d3:	cmp    eax,0x1
  4171d6:	je     4171e6 <_start@@Base+0x10f56>
  4171d8:	jmp    417255 <_start@@Base+0x10fc5>
  4171da:	cmp    eax,0x3
  4171dd:	je     41721e <_start@@Base+0x10f8e>
  4171df:	cmp    eax,0x4
  4171e2:	je     41723a <_start@@Base+0x10faa>
  4171e4:	jmp    417255 <_start@@Base+0x10fc5>
  4171e6:	mov    rcx,QWORD PTR [rbp-0x10]
  4171ea:	mov    rax,QWORD PTR [rbp-0x8]
  4171ee:	lea    rdx,[rip+0xbff]        # 417df4 <_start@@Base+0x11b64>
  4171f5:	mov    rsi,rcx
  4171f8:	mov    rdi,rax
  4171fb:	call   434bed <flatcc_json_printer_union_table@@Base>
  417200:	jmp    417255 <_start@@Base+0x10fc5>
  417202:	mov    rcx,QWORD PTR [rbp-0x10]
  417206:	mov    rax,QWORD PTR [rbp-0x8]
  41720a:	lea    rdx,[rip+0x54d]        # 41775e <_start@@Base+0x114ce>
  417211:	mov    rsi,rcx
  417214:	mov    rdi,rax
  417217:	call   434bed <flatcc_json_printer_union_table@@Base>
  41721c:	jmp    417255 <_start@@Base+0x10fc5>
  41721e:	mov    rcx,QWORD PTR [rbp-0x10]
  417222:	mov    rax,QWORD PTR [rbp-0x8]
  417226:	lea    rdx,[rip+0x4cb]        # 4176f8 <_start@@Base+0x11468>
  41722d:	mov    rsi,rcx
  417230:	mov    rdi,rax
  417233:	call   434bed <flatcc_json_printer_union_table@@Base>
  417238:	jmp    417255 <_start@@Base+0x10fc5>
  41723a:	mov    rcx,QWORD PTR [rbp-0x10]
  41723e:	mov    rax,QWORD PTR [rbp-0x8]
  417242:	lea    rdx,[rip+0x7ad]        # 4179f6 <_start@@Base+0x11766>
  417249:	mov    rsi,rcx
  41724c:	mov    rdi,rax
  41724f:	call   434bed <flatcc_json_printer_union_table@@Base>
  417254:	nop
  417255:	nop
  417256:	leave  
  417257:	ret    
  417258:	endbr64 
  41725c:	push   rbp
  41725d:	mov    rbp,rsp
  417260:	sub    rsp,0x10
  417264:	mov    QWORD PTR [rbp-0x8],rdi
  417268:	mov    eax,esi
  41726a:	mov    BYTE PTR [rbp-0xc],al
  41726d:	movzx  eax,BYTE PTR [rbp-0xc]
  417271:	cmp    eax,0x9
  417274:	je     4172e2 <_start@@Base+0x11052>
  417276:	cmp    eax,0x9
  417279:	jg     41728a <_start@@Base+0x10ffa>
  41727b:	cmp    eax,0x2
  41727e:	je     4172a8 <_start@@Base+0x11018>
  417280:	cmp    eax,0x8
  417283:	je     4172c5 <_start@@Base+0x11035>
  417285:	jmp    41734a <_start@@Base+0x110ba>
  41728a:	cmp    eax,0xb
  41728d:	je     417316 <_start@@Base+0x11086>
  417293:	cmp    eax,0xb
  417296:	jl     4172fc <_start@@Base+0x1106c>
  417298:	cmp    eax,0xff
  41729d:	je     417330 <_start@@Base+0x110a0>
  4172a3:	jmp    41734a <_start@@Base+0x110ba>
  4172a8:	mov    rax,QWORD PTR [rbp-0x8]
  4172ac:	mov    edx,0x5
  4172b1:	lea    rsi,[rip+0x1ee5a]        # 436112 <_IO_stdin_used@@Base+0x112>
  4172b8:	mov    rdi,rax
  4172bb:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  4172c0:	jmp    417363 <_start@@Base+0x110d3>
  4172c5:	mov    rax,QWORD PTR [rbp-0x8]
  4172c9:	mov    edx,0x8
  4172ce:	lea    rsi,[rip+0x1ee43]        # 436118 <_IO_stdin_used@@Base+0x118>
  4172d5:	mov    rdi,rax
  4172d8:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  4172dd:	jmp    417363 <_start@@Base+0x110d3>
  4172e2:	mov    rax,QWORD PTR [rbp-0x8]
  4172e6:	mov    edx,0x5
  4172eb:	lea    rsi,[rip+0x1ee2f]        # 436121 <_IO_stdin_used@@Base+0x121>
  4172f2:	mov    rdi,rax
  4172f5:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  4172fa:	jmp    417363 <_start@@Base+0x110d3>
  4172fc:	mov    rax,QWORD PTR [rbp-0x8]
  417300:	mov    edx,0x7
  417305:	lea    rsi,[rip+0x1ee1b]        # 436127 <_IO_stdin_used@@Base+0x127>
  41730c:	mov    rdi,rax
  41730f:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417314:	jmp    417363 <_start@@Base+0x110d3>
  417316:	mov    rax,QWORD PTR [rbp-0x8]
  41731a:	mov    edx,0x5
  41731f:	lea    rsi,[rip+0x1ee09]        # 43612f <_IO_stdin_used@@Base+0x12f>
  417326:	mov    rdi,rax
  417329:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  41732e:	jmp    417363 <_start@@Base+0x110d3>
  417330:	mov    rax,QWORD PTR [rbp-0x8]
  417334:	mov    edx,0x6
  417339:	lea    rsi,[rip+0x1edf5]        # 436135 <_IO_stdin_used@@Base+0x135>
  417340:	mov    rdi,rax
  417343:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417348:	jmp    417363 <_start@@Base+0x110d3>
  41734a:	mov    rax,QWORD PTR [rbp-0x8]
  41734e:	mov    edx,0x4
  417353:	lea    rsi,[rip+0x1ed86]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  41735a:	mov    rdi,rax
  41735d:	call   42e0d7 <flatcc_json_printer_enum@@Base>
  417362:	nop
  417363:	nop
  417364:	leave  
  417365:	ret    
  417366:	endbr64 
  41736a:	push   rbp
  41736b:	mov    rbp,rsp
  41736e:	sub    rsp,0x10
  417372:	mov    QWORD PTR [rbp-0x8],rdi
  417376:	mov    QWORD PTR [rbp-0x10],rsi
  41737a:	mov    rax,QWORD PTR [rbp-0x10]
  41737e:	movzx  eax,BYTE PTR [rax+0xc]
  417382:	movzx  eax,al
  417385:	cmp    eax,0x9
  417388:	je     4173f4 <_start@@Base+0x11164>
  41738a:	cmp    eax,0x9
  41738d:	jg     41739e <_start@@Base+0x1110e>
  41738f:	cmp    eax,0x2
  417392:	je     4173bc <_start@@Base+0x1112c>
  417394:	cmp    eax,0x8
  417397:	je     4173d8 <_start@@Base+0x11148>
  417399:	jmp    417455 <_start@@Base+0x111c5>
  41739e:	cmp    eax,0xb
  4173a1:	je     41742c <_start@@Base+0x1119c>
  4173a7:	cmp    eax,0xb
  4173aa:	jl     417410 <_start@@Base+0x11180>
  4173ac:	cmp    eax,0xff
  4173b1:	je     417441 <_start@@Base+0x111b1>
  4173b7:	jmp    417455 <_start@@Base+0x111c5>
  4173bc:	mov    rcx,QWORD PTR [rbp-0x10]
  4173c0:	mov    rax,QWORD PTR [rbp-0x8]
  4173c4:	lea    rdx,[rip+0x11e9]        # 4185b4 <_start@@Base+0x12324>
  4173cb:	mov    rsi,rcx
  4173ce:	mov    rdi,rax
  4173d1:	call   434bed <flatcc_json_printer_union_table@@Base>
  4173d6:	jmp    417455 <_start@@Base+0x111c5>
  4173d8:	mov    rcx,QWORD PTR [rbp-0x10]
  4173dc:	mov    rax,QWORD PTR [rbp-0x8]
  4173e0:	lea    rdx,[rip+0x282]        # 417669 <_start@@Base+0x113d9>
  4173e7:	mov    rsi,rcx
  4173ea:	mov    rdi,rax
  4173ed:	call   434c3c <flatcc_json_printer_union_struct@@Base>
  4173f2:	jmp    417455 <_start@@Base+0x111c5>
  4173f4:	mov    rcx,QWORD PTR [rbp-0x10]
  4173f8:	mov    rax,QWORD PTR [rbp-0x8]
  4173fc:	lea    rdx,[rip+0x2a4]        # 4176a7 <_start@@Base+0x11417>
  417403:	mov    rsi,rcx
  417406:	mov    rdi,rax
  417409:	call   434c3c <flatcc_json_printer_union_struct@@Base>
  41740e:	jmp    417455 <_start@@Base+0x111c5>
  417410:	mov    rcx,QWORD PTR [rbp-0x10]
  417414:	mov    rax,QWORD PTR [rbp-0x8]
  417418:	lea    rdx,[rip+0x288]        # 4176a7 <_start@@Base+0x11417>
  41741f:	mov    rsi,rcx
  417422:	mov    rdi,rax
  417425:	call   434c3c <flatcc_json_printer_union_struct@@Base>
  41742a:	jmp    417455 <_start@@Base+0x111c5>
  41742c:	mov    rdx,QWORD PTR [rbp-0x10]
  417430:	mov    rax,QWORD PTR [rbp-0x8]
  417434:	mov    rsi,rdx
  417437:	mov    rdi,rax
  41743a:	call   434cf8 <flatcc_json_printer_union_string@@Base>
  41743f:	jmp    417455 <_start@@Base+0x111c5>
  417441:	mov    rdx,QWORD PTR [rbp-0x10]
  417445:	mov    rax,QWORD PTR [rbp-0x8]
  417449:	mov    rsi,rdx
  41744c:	mov    rdi,rax
  41744f:	call   434cf8 <flatcc_json_printer_union_string@@Base>
  417454:	nop
  417455:	nop
  417456:	leave  
  417457:	ret    
  417458:	endbr64 
  41745c:	push   rbp
  41745d:	mov    rbp,rsp
  417460:	mov    QWORD PTR [rbp-0x8],rdi
  417464:	mov    QWORD PTR [rbp-0x10],rsi
  417468:	nop
  417469:	pop    rbp
  41746a:	ret    
  41746b:	endbr64 
  41746f:	push   rbp
  417470:	mov    rbp,rsp
  417473:	sub    rsp,0x10
  417477:	mov    QWORD PTR [rbp-0x8],rdi
  41747b:	mov    QWORD PTR [rbp-0x10],rsi
  41747f:	mov    rdx,QWORD PTR [rbp-0x10]
  417483:	mov    rax,QWORD PTR [rbp-0x8]
  417487:	mov    r9d,0x1
  41748d:	lea    r8,[rip+0x1eca8]        # 43613c <_IO_stdin_used@@Base+0x13c>
  417494:	mov    ecx,0x0
  417499:	mov    esi,0x0
  41749e:	mov    rdi,rax
  4174a1:	call   42fc6e <flatcc_json_printer_int16_struct_field@@Base>
  4174a6:	mov    rdx,QWORD PTR [rbp-0x10]
  4174aa:	mov    rax,QWORD PTR [rbp-0x8]
  4174ae:	mov    r9d,0x1
  4174b4:	lea    r8,[rip+0x1ec83]        # 43613e <_IO_stdin_used@@Base+0x13e>
  4174bb:	mov    ecx,0x2
  4174c0:	mov    esi,0x1
  4174c5:	mov    rdi,rax
  4174c8:	call   42fbce <flatcc_json_printer_int8_struct_field@@Base>
  4174cd:	nop
  4174ce:	leave  
  4174cf:	ret    
  4174d0:	endbr64 
  4174d4:	push   rbp
  4174d5:	mov    rbp,rsp
  4174d8:	mov    QWORD PTR [rbp-0x8],rdi
  4174dc:	mov    QWORD PTR [rbp-0x10],rsi
  4174e0:	nop
  4174e1:	pop    rbp
  4174e2:	ret    
  4174e3:	endbr64 
  4174e7:	push   rbp
  4174e8:	mov    rbp,rsp
  4174eb:	sub    rsp,0x10
  4174ef:	mov    QWORD PTR [rbp-0x8],rdi
  4174f3:	mov    QWORD PTR [rbp-0x10],rsi
  4174f7:	mov    rdx,QWORD PTR [rbp-0x10]
  4174fb:	mov    rax,QWORD PTR [rbp-0x8]
  4174ff:	mov    r9d,0x1
  417505:	lea    r8,[rip+0x1ebc0]        # 4360cc <_IO_stdin_used@@Base+0xcc>
  41750c:	mov    ecx,0x0
  417511:	mov    esi,0x0
  417516:	mov    rdi,rax
  417519:	call   42fef0 <flatcc_json_printer_float_struct_field@@Base>
  41751e:	mov    rdx,QWORD PTR [rbp-0x10]
  417522:	mov    rax,QWORD PTR [rbp-0x8]
  417526:	mov    r9d,0x1
  41752c:	lea    r8,[rip+0x1ec0d]        # 436140 <_IO_stdin_used@@Base+0x140>
  417533:	mov    ecx,0x4
  417538:	mov    esi,0x1
  41753d:	mov    rdi,rax
  417540:	call   42fef0 <flatcc_json_printer_float_struct_field@@Base>
  417545:	mov    rdx,QWORD PTR [rbp-0x10]
  417549:	mov    rax,QWORD PTR [rbp-0x8]
  41754d:	mov    r9d,0x1
  417553:	lea    r8,[rip+0x1ebe8]        # 436142 <_IO_stdin_used@@Base+0x142>
  41755a:	mov    ecx,0x8
  41755f:	mov    esi,0x2
  417564:	mov    rdi,rax
  417567:	call   42fef0 <flatcc_json_printer_float_struct_field@@Base>
  41756c:	mov    rdx,QWORD PTR [rbp-0x10]
  417570:	mov    rax,QWORD PTR [rbp-0x8]
  417574:	mov    r9d,0x5
  41757a:	lea    r8,[rip+0x1ebc3]        # 436144 <_IO_stdin_used@@Base+0x144>
  417581:	mov    ecx,0x10
  417586:	mov    esi,0x3
  41758b:	mov    rdi,rax
  41758e:	call   42ff9d <flatcc_json_printer_double_struct_field@@Base>
  417593:	mov    rdx,QWORD PTR [rbp-0x10]
  417597:	mov    rax,QWORD PTR [rbp-0x8]
  41759b:	sub    rsp,0x8
  41759f:	lea    rcx,[rip+0xfffffffffffff961]        # 416f07 <_start@@Base+0x10c77>
  4175a6:	push   rcx
  4175a7:	mov    r9d,0x5
  4175ad:	lea    r8,[rip+0x1eb96]        # 43614a <_IO_stdin_used@@Base+0x14a>
  4175b4:	mov    ecx,0x18
  4175b9:	mov    esi,0x4
  4175be:	mov    rdi,rax
  4175c1:	call   43034c <flatcc_json_printer_int8_enum_struct_field@@Base>
  4175c6:	add    rsp,0x10
  4175ca:	mov    rdx,QWORD PTR [rbp-0x10]
  4175ce:	mov    rax,QWORD PTR [rbp-0x8]
  4175d2:	sub    rsp,0x8
  4175d6:	lea    rcx,[rip+0xfffffffffffffe8e]        # 41746b <_start@@Base+0x111db>
  4175dd:	push   rcx
  4175de:	mov    r9d,0x5
  4175e4:	lea    r8,[rip+0x1eb65]        # 436150 <_IO_stdin_used@@Base+0x150>
  4175eb:	mov    ecx,0x1a
  4175f0:	mov    esi,0x5
  4175f5:	mov    rdi,rax
  4175f8:	call   434d30 <flatcc_json_printer_embedded_struct_field@@Base>
  4175fd:	add    rsp,0x10
  417601:	nop
  417602:	leave  
  417603:	ret    
  417604:	endbr64 
  417608:	push   rbp
  417609:	mov    rbp,rsp
  41760c:	sub    rsp,0x10
  417610:	mov    QWORD PTR [rbp-0x8],rdi
  417614:	mov    QWORD PTR [rbp-0x10],rsi
  417618:	mov    rdx,QWORD PTR [rbp-0x10]
  41761c:	mov    rax,QWORD PTR [rbp-0x8]
  417620:	mov    r9d,0x2
  417626:	lea    r8,[rip+0x1eb29]        # 436156 <_IO_stdin_used@@Base+0x156>
  41762d:	mov    ecx,0x0
  417632:	mov    esi,0x0
  417637:	mov    rdi,rax
  41763a:	call   42fa8d <flatcc_json_printer_uint32_struct_field@@Base>
  41763f:	mov    rdx,QWORD PTR [rbp-0x10]
  417643:	mov    rax,QWORD PTR [rbp-0x8]
  417647:	mov    r9d,0x8
  41764d:	lea    r8,[rip+0x1eb05]        # 436159 <_IO_stdin_used@@Base+0x159>
  417654:	mov    ecx,0x4
  417659:	mov    esi,0x1
  41765e:	mov    rdi,rax
  417661:	call   42fa8d <flatcc_json_printer_uint32_struct_field@@Base>
  417666:	nop
  417667:	leave  
  417668:	ret    
  417669:	endbr64 
  41766d:	push   rbp
  41766e:	mov    rbp,rsp
  417671:	sub    rsp,0x10
  417675:	mov    QWORD PTR [rbp-0x8],rdi
  417679:	mov    QWORD PTR [rbp-0x10],rsi
  41767d:	mov    rdx,QWORD PTR [rbp-0x10]
  417681:	mov    rax,QWORD PTR [rbp-0x8]
  417685:	mov    r9d,0xb
  41768b:	lea    r8,[rip+0x1ead0]        # 436162 <_IO_stdin_used@@Base+0x162>
  417692:	mov    ecx,0x0
  417697:	mov    esi,0x0
  41769c:	mov    rdi,rax
  41769f:	call   42f9ec <flatcc_json_printer_uint16_struct_field@@Base>
  4176a4:	nop
  4176a5:	leave  
  4176a6:	ret    
  4176a7:	endbr64 
  4176ab:	push   rbp
  4176ac:	mov    rbp,rsp
  4176af:	sub    rsp,0x10
  4176b3:	mov    QWORD PTR [rbp-0x8],rdi
  4176b7:	mov    QWORD PTR [rbp-0x10],rsi
  4176bb:	mov    rdx,QWORD PTR [rbp-0x10]
  4176bf:	mov    rax,QWORD PTR [rbp-0x8]
  4176c3:	mov    r9d,0xa
  4176c9:	lea    r8,[rip+0x1ea9e]        # 43616e <_IO_stdin_used@@Base+0x16e>
  4176d0:	mov    ecx,0x0
  4176d5:	mov    esi,0x0
  4176da:	mov    rdi,rax
  4176dd:	call   42fd0f <flatcc_json_printer_int32_struct_field@@Base>
  4176e2:	nop
  4176e3:	leave  
  4176e4:	ret    
  4176e5:	endbr64 
  4176e9:	push   rbp
  4176ea:	mov    rbp,rsp
  4176ed:	mov    QWORD PTR [rbp-0x8],rdi
  4176f1:	mov    QWORD PTR [rbp-0x10],rsi
  4176f5:	nop
  4176f6:	pop    rbp
  4176f7:	ret    
  4176f8:	endbr64 
  4176fc:	push   rbp
  4176fd:	mov    rbp,rsp
  417700:	mov    QWORD PTR [rbp-0x8],rdi
  417704:	mov    QWORD PTR [rbp-0x10],rsi
  417708:	nop
  417709:	pop    rbp
  41770a:	ret    
  41770b:	endbr64 
  41770f:	push   rbp
  417710:	mov    rbp,rsp
  417713:	mov    QWORD PTR [rbp-0x8],rdi
  417717:	mov    QWORD PTR [rbp-0x10],rsi
  41771b:	nop
  41771c:	pop    rbp
  41771d:	ret    
  41771e:	endbr64 
  417722:	push   rbp
  417723:	mov    rbp,rsp
  417726:	sub    rsp,0x10
  41772a:	mov    QWORD PTR [rbp-0x8],rdi
  41772e:	mov    QWORD PTR [rbp-0x10],rsi
  417732:	mov    rsi,QWORD PTR [rbp-0x10]
  417736:	mov    rax,QWORD PTR [rbp-0x8]
  41773a:	lea    r9,[rip+0xfffffffffffffd8f]        # 4174d0 <_start@@Base+0x11240>
  417741:	mov    r8d,0x5
  417747:	lea    rcx,[rip+0x1ea2b]        # 436179 <_IO_stdin_used@@Base+0x179>
  41774e:	mov    edx,0x0
  417753:	mov    rdi,rax
  417756:	call   434e27 <flatcc_json_printer_struct_field@@Base>
  41775b:	nop
  41775c:	leave  
  41775d:	ret    
  41775e:	endbr64 
  417762:	push   rbp
  417763:	mov    rbp,rsp
  417766:	sub    rsp,0x10
  41776a:	mov    QWORD PTR [rbp-0x8],rdi
  41776e:	mov    QWORD PTR [rbp-0x10],rsi
  417772:	mov    rsi,QWORD PTR [rbp-0x10]
  417776:	mov    rax,QWORD PTR [rbp-0x8]
  41777a:	sub    rsp,0x8
  41777e:	lea    rdx,[rip+0xfffffffffffff782]        # 416f07 <_start@@Base+0x10c77>
  417785:	push   rdx
  417786:	mov    r9d,0x2
  41778c:	mov    r8d,0x5
  417792:	lea    rcx,[rip+0x1e9e6]        # 43617f <_IO_stdin_used@@Base+0x17f>
  417799:	mov    edx,0x0
  41779e:	mov    rdi,rax
  4177a1:	call   42f3c9 <flatcc_json_printer_int8_enum_field@@Base>
  4177a6:	add    rsp,0x10
  4177aa:	mov    rsi,QWORD PTR [rbp-0x10]
  4177ae:	mov    rax,QWORD PTR [rbp-0x8]
  4177b2:	sub    rsp,0x8
  4177b6:	lea    rdx,[rip+0xfffffffffffff74a]        # 416f07 <_start@@Base+0x10c77>
  4177bd:	push   rdx
  4177be:	mov    r9d,0x2
  4177c4:	mov    r8d,0x6
  4177ca:	lea    rcx,[rip+0x1e9b4]        # 436185 <_IO_stdin_used@@Base+0x185>
  4177d1:	mov    edx,0x1
  4177d6:	mov    rdi,rax
  4177d9:	call   42f3c9 <flatcc_json_printer_int8_enum_field@@Base>
  4177de:	add    rsp,0x10
  4177e2:	mov    rsi,QWORD PTR [rbp-0x10]
  4177e6:	mov    rax,QWORD PTR [rbp-0x8]
  4177ea:	mov    r9d,0x2
  4177f0:	mov    r8d,0x2
  4177f6:	lea    rcx,[rip+0x1e98f]        # 43618c <_IO_stdin_used@@Base+0x18c>
  4177fd:	mov    edx,0x2
  417802:	mov    rdi,rax
  417805:	call   42e497 <flatcc_json_printer_uint8_field@@Base>
  41780a:	mov    rsi,QWORD PTR [rbp-0x10]
  41780e:	mov    rax,QWORD PTR [rbp-0x8]
  417812:	mov    r9d,0x2
  417818:	mov    r8d,0x3
  41781e:	lea    rcx,[rip+0x1e96a]        # 43618f <_IO_stdin_used@@Base+0x18f>
  417825:	mov    edx,0x3
  41782a:	mov    rdi,rax
  41782d:	call   42e497 <flatcc_json_printer_uint8_field@@Base>
  417832:	nop
  417833:	leave  
  417834:	ret    
  417835:	endbr64 
  417839:	push   rbp
  41783a:	mov    rbp,rsp
  41783d:	sub    rsp,0x10
  417841:	mov    QWORD PTR [rbp-0x8],rdi
  417845:	mov    QWORD PTR [rbp-0x10],rsi
  417849:	mov    rsi,QWORD PTR [rbp-0x10]
  41784d:	mov    rax,QWORD PTR [rbp-0x8]
  417851:	lea    r9,[rip+0xfffffffffffffc00]        # 417458 <_start@@Base+0x111c8>
  417858:	mov    r8d,0x6
  41785e:	lea    rcx,[rip+0x1e92e]        # 436193 <_IO_stdin_used@@Base+0x193>
  417865:	mov    edx,0x0
  41786a:	mov    rdi,rax
  41786d:	call   434e27 <flatcc_json_printer_struct_field@@Base>
  417872:	mov    rsi,QWORD PTR [rbp-0x10]
  417876:	mov    rax,QWORD PTR [rbp-0x8]
  41787a:	sub    rsp,0x8
  41787e:	lea    rdx,[rip+0xfffffffffffff43b]        # 416cc0 <_start@@Base+0x10a30>
  417885:	push   rdx
  417886:	mov    r9d,0x0
  41788c:	mov    r8d,0x6
  417892:	lea    rcx,[rip+0x1e901]        # 43619a <_IO_stdin_used@@Base+0x19a>
  417899:	mov    edx,0x1
  41789e:	mov    rdi,rax
  4178a1:	call   42f715 <flatcc_json_printer_int64_enum_field@@Base>
  4178a6:	add    rsp,0x10
  4178aa:	mov    rsi,QWORD PTR [rbp-0x10]
  4178ae:	mov    rax,QWORD PTR [rbp-0x8]
  4178b2:	sub    rsp,0x8
  4178b6:	lea    rdx,[rip+0xfffffffffffff403]        # 416cc0 <_start@@Base+0x10a30>
  4178bd:	push   rdx
  4178be:	mov    r9d,0x0
  4178c4:	mov    r8d,0x7
  4178ca:	lea    rcx,[rip+0x1e8d0]        # 4361a1 <_IO_stdin_used@@Base+0x1a1>
  4178d1:	mov    edx,0x2
  4178d6:	mov    rdi,rax
  4178d9:	call   42f715 <flatcc_json_printer_int64_enum_field@@Base>
  4178de:	add    rsp,0x10
  4178e2:	mov    rsi,QWORD PTR [rbp-0x10]
  4178e6:	mov    rax,QWORD PTR [rbp-0x8]
  4178ea:	mov    r9d,0x0
  4178f0:	mov    r8d,0x7
  4178f6:	lea    rcx,[rip+0x1e8ac]        # 4361a9 <_IO_stdin_used@@Base+0x1a9>
  4178fd:	mov    edx,0x3
  417902:	mov    rdi,rax
  417905:	call   42ea5a <flatcc_json_printer_int32_field@@Base>
  41790a:	mov    rsi,QWORD PTR [rbp-0x10]
  41790e:	mov    rax,QWORD PTR [rbp-0x8]
  417912:	sub    rsp,0x8
  417916:	lea    rdx,[rip+0xfffffffffffff3a3]        # 416cc0 <_start@@Base+0x10a30>
  41791d:	push   rdx
  41791e:	mov    r9d,0x0
  417924:	mov    r8d,0x7
  41792a:	lea    rcx,[rip+0x1e880]        # 4361b1 <_IO_stdin_used@@Base+0x1b1>
  417931:	mov    edx,0x4
  417936:	mov    rdi,rax
  417939:	call   42f715 <flatcc_json_printer_int64_enum_field@@Base>
  41793e:	add    rsp,0x10
  417942:	mov    rsi,QWORD PTR [rbp-0x10]
  417946:	mov    rax,QWORD PTR [rbp-0x8]
  41794a:	mov    r9d,0x0
  417950:	mov    r8d,0x7
  417956:	lea    rcx,[rip+0x1e85c]        # 4361b9 <_IO_stdin_used@@Base+0x1b9>
  41795d:	mov    edx,0x5
  417962:	mov    rdi,rax
  417965:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  41796a:	nop
  41796b:	leave  
  41796c:	ret    
  41796d:	endbr64 
  417971:	push   rbp
  417972:	mov    rbp,rsp
  417975:	sub    rsp,0x10
  417979:	mov    QWORD PTR [rbp-0x8],rdi
  41797d:	mov    QWORD PTR [rbp-0x10],rsi
  417981:	mov    rsi,QWORD PTR [rbp-0x10]
  417985:	mov    rax,QWORD PTR [rbp-0x8]
  417989:	mov    r8d,0x2
  41798f:	lea    rcx,[rip+0x1e7c0]        # 436156 <_IO_stdin_used@@Base+0x156>
  417996:	mov    edx,0x0
  41799b:	mov    rdi,rax
  41799e:	call   42e33a <flatcc_json_printer_string_field@@Base>
  4179a3:	mov    rsi,QWORD PTR [rbp-0x10]
  4179a7:	mov    rax,QWORD PTR [rbp-0x8]
  4179ab:	mov    r9d,0x0
  4179b1:	mov    r8d,0x3
  4179b7:	lea    rcx,[rip+0x1e803]        # 4361c1 <_IO_stdin_used@@Base+0x1c1>
  4179be:	mov    edx,0x1
  4179c3:	mov    rdi,rax
  4179c6:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  4179cb:	mov    rsi,QWORD PTR [rbp-0x10]
  4179cf:	mov    rax,QWORD PTR [rbp-0x8]
  4179d3:	mov    r9d,0x0
  4179d9:	mov    r8d,0x5
  4179df:	lea    rcx,[rip+0x1e7df]        # 4361c5 <_IO_stdin_used@@Base+0x1c5>
  4179e6:	mov    edx,0x2
  4179eb:	mov    rdi,rax
  4179ee:	call   42e58c <flatcc_json_printer_uint16_field@@Base>
  4179f3:	nop
  4179f4:	leave  
  4179f5:	ret    
  4179f6:	endbr64 
  4179fa:	push   rbp
  4179fb:	mov    rbp,rsp
  4179fe:	sub    rsp,0x10
  417a02:	mov    QWORD PTR [rbp-0x8],rdi
  417a06:	mov    QWORD PTR [rbp-0x10],rsi
  417a0a:	mov    rsi,QWORD PTR [rbp-0x10]
  417a0e:	mov    rax,QWORD PTR [rbp-0x8]
  417a12:	lea    r9,[rip+0x7f]        # 417a98 <_start@@Base+0x11808>
  417a19:	mov    r8d,0x6
  417a1f:	lea    rcx,[rip+0x1e7a5]        # 4361cb <_IO_stdin_used@@Base+0x1cb>
  417a26:	mov    edx,0x0
  417a2b:	mov    rdi,rax
  417a2e:	call   43484f <flatcc_json_printer_table_field@@Base>
  417a33:	mov    rsi,QWORD PTR [rbp-0x10]
  417a37:	mov    rax,QWORD PTR [rbp-0x8]
  417a3b:	lea    r9,[rip+0xbb1]        # 4185f3 <_start@@Base+0x12363>
  417a42:	mov    r8d,0x5
  417a48:	lea    rcx,[rip+0x1e783]        # 4361d2 <_IO_stdin_used@@Base+0x1d2>
  417a4f:	mov    edx,0x1
  417a54:	mov    rdi,rax
  417a57:	call   43484f <flatcc_json_printer_table_field@@Base>
  417a5c:	mov    rsi,QWORD PTR [rbp-0x10]
  417a60:	mov    rax,QWORD PTR [rbp-0x8]
  417a64:	sub    rsp,0x8
  417a68:	lea    rdx,[rip+0xfffffffffffff73b]        # 4171aa <_start@@Base+0x10f1a>
  417a6f:	push   rdx
  417a70:	lea    r9,[rip+0xfffffffffffff679]        # 4170f0 <_start@@Base+0x10e60>
  417a77:	mov    r8d,0x7
  417a7d:	lea    rcx,[rip+0x1e754]        # 4361d8 <_IO_stdin_used@@Base+0x1d8>
  417a84:	mov    edx,0x3
  417a89:	mov    rdi,rax
  417a8c:	call   434373 <flatcc_json_printer_union_vector_field@@Base>
  417a91:	add    rsp,0x10
  417a95:	nop
  417a96:	leave  
  417a97:	ret    
  417a98:	endbr64 
  417a9c:	push   rbp
  417a9d:	mov    rbp,rsp
  417aa0:	sub    rsp,0x10
  417aa4:	mov    QWORD PTR [rbp-0x8],rdi
  417aa8:	mov    QWORD PTR [rbp-0x10],rsi
  417aac:	mov    rsi,QWORD PTR [rbp-0x10]
  417ab0:	mov    rax,QWORD PTR [rbp-0x8]
  417ab4:	lea    r9,[rip+0x6f]        # 417b2a <_start@@Base+0x1189a>
  417abb:	mov    r8d,0x15
  417ac1:	lea    rcx,[rip+0x1e718]        # 4361e0 <_IO_stdin_used@@Base+0x1e0>
  417ac8:	mov    edx,0x0
  417acd:	mov    rdi,rax
  417ad0:	call   43484f <flatcc_json_printer_table_field@@Base>
  417ad5:	mov    rsi,QWORD PTR [rbp-0x10]
  417ad9:	mov    rax,QWORD PTR [rbp-0x8]
  417add:	lea    r9,[rip+0x1b3]        # 417c97 <_start@@Base+0x11a07>
  417ae4:	mov    r8d,0x16
  417aea:	lea    rcx,[rip+0x1e705]        # 4361f6 <_IO_stdin_used@@Base+0x1f6>
  417af1:	mov    edx,0x1
  417af6:	mov    rdi,rax
  417af9:	call   43484f <flatcc_json_printer_table_field@@Base>
  417afe:	mov    rsi,QWORD PTR [rbp-0x10]
  417b02:	mov    rax,QWORD PTR [rbp-0x8]
  417b06:	lea    r9,[rip+0x1f1]        # 417cfe <_start@@Base+0x11a6e>
  417b0d:	mov    r8d,0x16
  417b13:	lea    rcx,[rip+0x1e6f3]        # 43620d <_IO_stdin_used@@Base+0x20d>
  417b1a:	mov    edx,0x2
  417b1f:	mov    rdi,rax
  417b22:	call   43484f <flatcc_json_printer_table_field@@Base>
  417b27:	nop
  417b28:	leave  
  417b29:	ret    
  417b2a:	endbr64 
  417b2e:	push   rbp
  417b2f:	mov    rbp,rsp
  417b32:	sub    rsp,0x10
  417b36:	mov    QWORD PTR [rbp-0x8],rdi
  417b3a:	mov    QWORD PTR [rbp-0x10],rsi
  417b3e:	mov    rsi,QWORD PTR [rbp-0x10]
  417b42:	mov    rax,QWORD PTR [rbp-0x8]
  417b46:	mov    r8d,0x4
  417b4c:	lea    rcx,[rip+0x1e6d1]        # 436224 <_IO_stdin_used@@Base+0x224>
  417b53:	mov    edx,0x0
  417b58:	mov    rdi,rax
  417b5b:	call   42e33a <flatcc_json_printer_string_field@@Base>
  417b60:	mov    rsi,QWORD PTR [rbp-0x10]
  417b64:	mov    rax,QWORD PTR [rbp-0x8]
  417b68:	mov    r9d,0x0
  417b6e:	mov    r8d,0x9
  417b74:	lea    rcx,[rip+0x1e6ae]        # 436229 <_IO_stdin_used@@Base+0x229>
  417b7b:	mov    edx,0x1
  417b80:	mov    rdi,rax
  417b83:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  417b88:	mov    rsi,QWORD PTR [rbp-0x10]
  417b8c:	mov    rax,QWORD PTR [rbp-0x8]
  417b90:	mov    r8d,0x4
  417b96:	lea    rcx,[rip+0x1e696]        # 436233 <_IO_stdin_used@@Base+0x233>
  417b9d:	mov    edx,0x2
  417ba2:	mov    rdi,rax
  417ba5:	call   42e33a <flatcc_json_printer_string_field@@Base>
  417baa:	mov    rsi,QWORD PTR [rbp-0x10]
  417bae:	mov    rax,QWORD PTR [rbp-0x8]
  417bb2:	mov    r9d,0x0
  417bb8:	mov    r8d,0x8
  417bbe:	lea    rcx,[rip+0x1e673]        # 436238 <_IO_stdin_used@@Base+0x238>
  417bc5:	mov    edx,0x3
  417bca:	mov    rdi,rax
  417bcd:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  417bd2:	mov    rsi,QWORD PTR [rbp-0x10]
  417bd6:	mov    rax,QWORD PTR [rbp-0x8]
  417bda:	mov    r8d,0x4
  417be0:	lea    rcx,[rip+0x1e65a]        # 436241 <_IO_stdin_used@@Base+0x241>
  417be7:	mov    edx,0x4
  417bec:	mov    rdi,rax
  417bef:	call   42e33a <flatcc_json_printer_string_field@@Base>
  417bf4:	mov    rsi,QWORD PTR [rbp-0x10]
  417bf8:	mov    rax,QWORD PTR [rbp-0x8]
  417bfc:	mov    r9d,0x0
  417c02:	mov    r8d,0x8
  417c08:	lea    rcx,[rip+0x1e637]        # 436246 <_IO_stdin_used@@Base+0x246>
  417c0f:	mov    edx,0x5
  417c14:	mov    rdi,rax
  417c17:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  417c1c:	mov    rsi,QWORD PTR [rbp-0x10]
  417c20:	mov    rax,QWORD PTR [rbp-0x8]
  417c24:	mov    r9d,0x0
  417c2a:	mov    r8d,0x9
  417c30:	lea    rcx,[rip+0x1e618]        # 43624f <_IO_stdin_used@@Base+0x24f>
  417c37:	mov    edx,0x6
  417c3c:	mov    rdi,rax
  417c3f:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  417c44:	mov    rsi,QWORD PTR [rbp-0x10]
  417c48:	mov    rax,QWORD PTR [rbp-0x8]
  417c4c:	mov    r9d,0x0
  417c52:	mov    r8d,0x8
  417c58:	lea    rcx,[rip+0x1e5fa]        # 436259 <_IO_stdin_used@@Base+0x259>
  417c5f:	mov    edx,0x7
  417c64:	mov    rdi,rax
  417c67:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  417c6c:	mov    rsi,QWORD PTR [rbp-0x10]
  417c70:	mov    rax,QWORD PTR [rbp-0x8]
  417c74:	mov    r9d,0x0
  417c7a:	mov    r8d,0x9
  417c80:	lea    rcx,[rip+0x1e5db]        # 436262 <_IO_stdin_used@@Base+0x262>
  417c87:	mov    edx,0x8
  417c8c:	mov    rdi,rax
  417c8f:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  417c94:	nop
  417c95:	leave  
  417c96:	ret    
  417c97:	endbr64 
  417c9b:	push   rbp
  417c9c:	mov    rbp,rsp
  417c9f:	sub    rsp,0x10
  417ca3:	mov    QWORD PTR [rbp-0x8],rdi
  417ca7:	mov    QWORD PTR [rbp-0x10],rsi
  417cab:	mov    rsi,QWORD PTR [rbp-0x10]
  417caf:	mov    rax,QWORD PTR [rbp-0x8]
  417cb3:	mov    r9d,0x0
  417cb9:	mov    r8d,0xf
  417cbf:	lea    rcx,[rip+0x1e5a6]        # 43626c <_IO_stdin_used@@Base+0x26c>
  417cc6:	mov    edx,0x0
  417ccb:	mov    rdi,rax
  417cce:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  417cd3:	mov    rsi,QWORD PTR [rbp-0x10]
  417cd7:	mov    rax,QWORD PTR [rbp-0x8]
  417cdb:	mov    r9d,0x0
  417ce1:	mov    r8d,0x10
  417ce7:	lea    rcx,[rip+0x1e58e]        # 43627c <_IO_stdin_used@@Base+0x27c>
  417cee:	mov    edx,0x1
  417cf3:	mov    rdi,rax
  417cf6:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  417cfb:	nop
  417cfc:	leave  
  417cfd:	ret    
  417cfe:	endbr64 
  417d02:	push   rbp
  417d03:	mov    rbp,rsp
  417d06:	sub    rsp,0x10
  417d0a:	mov    QWORD PTR [rbp-0x8],rdi
  417d0e:	mov    QWORD PTR [rbp-0x10],rsi
  417d12:	mov    rsi,QWORD PTR [rbp-0x10]
  417d16:	mov    rax,QWORD PTR [rbp-0x8]
  417d1a:	mov    r9d,0x0
  417d20:	mov    r8d,0xf
  417d26:	lea    rcx,[rip+0x1e53f]        # 43626c <_IO_stdin_used@@Base+0x26c>
  417d2d:	mov    edx,0x0
  417d32:	mov    rdi,rax
  417d35:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  417d3a:	mov    rsi,QWORD PTR [rbp-0x10]
  417d3e:	mov    rax,QWORD PTR [rbp-0x8]
  417d42:	mov    r9d,0x0
  417d48:	mov    r8d,0x15
  417d4e:	lea    rcx,[rip+0x1e538]        # 43628d <_IO_stdin_used@@Base+0x28d>
  417d55:	mov    edx,0x1
  417d5a:	mov    rdi,rax
  417d5d:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  417d62:	nop
  417d63:	leave  
  417d64:	ret    
  417d65:	endbr64 
  417d69:	push   rbp
  417d6a:	mov    rbp,rsp
  417d6d:	sub    rsp,0x10
  417d71:	mov    QWORD PTR [rbp-0x8],rdi
  417d75:	mov    QWORD PTR [rbp-0x10],rsi
  417d79:	mov    rsi,QWORD PTR [rbp-0x10]
  417d7d:	mov    rax,QWORD PTR [rbp-0x8]
  417d81:	mov    r9d,0x0
  417d87:	mov    r8d,0x4
  417d8d:	lea    rcx,[rip+0x1e50f]        # 4362a3 <_IO_stdin_used@@Base+0x2a3>
  417d94:	mov    edx,0x0
  417d99:	mov    rdi,rax
  417d9c:	call   42e3db <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417da1:	mov    rsi,QWORD PTR [rbp-0x10]
  417da5:	mov    rax,QWORD PTR [rbp-0x8]
  417da9:	mov    r9d,0x1
  417daf:	mov    r8d,0x7
  417db5:	lea    rcx,[rip+0x1e4ec]        # 4362a8 <_IO_stdin_used@@Base+0x2a8>
  417dbc:	mov    edx,0x1
  417dc1:	mov    rdi,rax
  417dc4:	call   42e3db <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417dc9:	mov    rsi,QWORD PTR [rbp-0x10]
  417dcd:	mov    rax,QWORD PTR [rbp-0x8]
  417dd1:	mov    r9d,0x0
  417dd7:	mov    r8d,0x6
  417ddd:	lea    rcx,[rip+0x1e4cc]        # 4362b0 <_IO_stdin_used@@Base+0x2b0>
  417de4:	mov    edx,0x2
  417de9:	mov    rdi,rax
  417dec:	call   42e3db <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417df1:	nop
  417df2:	leave  
  417df3:	ret    
  417df4:	endbr64 
  417df8:	push   rbp
  417df9:	mov    rbp,rsp
  417dfc:	sub    rsp,0x10
  417e00:	mov    QWORD PTR [rbp-0x8],rdi
  417e04:	mov    QWORD PTR [rbp-0x10],rsi
  417e08:	mov    rsi,QWORD PTR [rbp-0x10]
  417e0c:	mov    rax,QWORD PTR [rbp-0x8]
  417e10:	lea    r9,[rip+0xfffffffffffff6cc]        # 4174e3 <_start@@Base+0x11253>
  417e17:	mov    r8d,0x3
  417e1d:	lea    rcx,[rip+0x1e493]        # 4362b7 <_IO_stdin_used@@Base+0x2b7>
  417e24:	mov    edx,0x0
  417e29:	mov    rdi,rax
  417e2c:	call   434e27 <flatcc_json_printer_struct_field@@Base>
  417e31:	mov    rsi,QWORD PTR [rbp-0x10]
  417e35:	mov    rax,QWORD PTR [rbp-0x8]
  417e39:	mov    r9d,0x96
  417e3f:	mov    r8d,0x4
  417e45:	lea    rcx,[rip+0x1e46f]        # 4362bb <_IO_stdin_used@@Base+0x2bb>
  417e4c:	mov    edx,0x1
  417e51:	mov    rdi,rax
  417e54:	call   42e961 <flatcc_json_printer_int16_field@@Base>
  417e59:	mov    rsi,QWORD PTR [rbp-0x10]
  417e5d:	mov    rax,QWORD PTR [rbp-0x8]
  417e61:	mov    r9d,0x64
  417e67:	mov    r8d,0x2
  417e6d:	lea    rcx,[rip+0x1e44c]        # 4362c0 <_IO_stdin_used@@Base+0x2c0>
  417e74:	mov    edx,0x2
  417e79:	mov    rdi,rax
  417e7c:	call   42e961 <flatcc_json_printer_int16_field@@Base>
  417e81:	mov    rsi,QWORD PTR [rbp-0x10]
  417e85:	mov    rax,QWORD PTR [rbp-0x8]
  417e89:	mov    r8d,0x4
  417e8f:	lea    rcx,[rip+0x1e42d]        # 4362c3 <_IO_stdin_used@@Base+0x2c3>
  417e96:	mov    edx,0x3
  417e9b:	mov    rdi,rax
  417e9e:	call   42e33a <flatcc_json_printer_string_field@@Base>
  417ea3:	mov    rsi,QWORD PTR [rbp-0x10]
  417ea7:	mov    rax,QWORD PTR [rbp-0x8]
  417eab:	mov    r8d,0x9
  417eb1:	lea    rcx,[rip+0x1e410]        # 4362c8 <_IO_stdin_used@@Base+0x2c8>
  417eb8:	mov    edx,0x5
  417ebd:	mov    rdi,rax
  417ec0:	call   430986 <flatcc_json_printer_uint8_vector_field@@Base>
  417ec5:	mov    rsi,QWORD PTR [rbp-0x10]
  417ec9:	mov    rax,QWORD PTR [rbp-0x8]
  417ecd:	sub    rsp,0x8
  417ed1:	lea    rdx,[rip+0xfffffffffffff02f]        # 416f07 <_start@@Base+0x10c77>
  417ed8:	push   rdx
  417ed9:	mov    r9d,0x8
  417edf:	mov    r8d,0x5
  417ee5:	lea    rcx,[rip+0x1e293]        # 43617f <_IO_stdin_used@@Base+0x17f>
  417eec:	mov    edx,0x6
  417ef1:	mov    rdi,rax
  417ef4:	call   42f3c9 <flatcc_json_printer_int8_enum_field@@Base>
  417ef9:	add    rsp,0x10
  417efd:	mov    rsi,QWORD PTR [rbp-0x10]
  417f01:	mov    rax,QWORD PTR [rbp-0x8]
  417f05:	sub    rsp,0x8
  417f09:	lea    rdx,[rip+0xfffffffffffff29a]        # 4171aa <_start@@Base+0x10f1a>
  417f10:	push   rdx
  417f11:	lea    r9,[rip+0xfffffffffffff1d8]        # 4170f0 <_start@@Base+0x10e60>
  417f18:	mov    r8d,0x4
  417f1e:	lea    rcx,[rip+0x1e3ad]        # 4362d2 <_IO_stdin_used@@Base+0x2d2>
  417f25:	mov    edx,0x8
  417f2a:	mov    rdi,rax
  417f2d:	call   434907 <flatcc_json_printer_union_field@@Base>
  417f32:	add    rsp,0x10
  417f36:	mov    rsi,QWORD PTR [rbp-0x10]
  417f3a:	mov    rax,QWORD PTR [rbp-0x8]
  417f3e:	sub    rsp,0x8
  417f42:	lea    rdx,[rip+0xfffffffffffff522]        # 41746b <_start@@Base+0x111db>
  417f49:	push   rdx
  417f4a:	mov    r9d,0x4
  417f50:	mov    r8d,0x5
  417f56:	lea    rcx,[rip+0x1e37a]        # 4362d7 <_IO_stdin_used@@Base+0x2d7>
  417f5d:	mov    edx,0x9
  417f62:	mov    rdi,rax
  417f65:	call   433c89 <flatcc_json_printer_struct_vector_field@@Base>
  417f6a:	add    rsp,0x10
  417f6e:	mov    rsi,QWORD PTR [rbp-0x10]
  417f72:	mov    rax,QWORD PTR [rbp-0x8]
  417f76:	mov    r8d,0x11
  417f7c:	lea    rcx,[rip+0x1e35a]        # 4362dd <_IO_stdin_used@@Base+0x2dd>
  417f83:	mov    edx,0xa
  417f88:	mov    rdi,rax
  417f8b:	call   433f99 <flatcc_json_printer_string_vector_field@@Base>
  417f90:	mov    rsi,QWORD PTR [rbp-0x10]
  417f94:	mov    rax,QWORD PTR [rbp-0x8]
  417f98:	lea    r9,[rip+0xfffffffffffffe55]        # 417df4 <_start@@Base+0x11b64>
  417f9f:	mov    r8d,0x11
  417fa5:	lea    rcx,[rip+0x1e343]        # 4362ef <_IO_stdin_used@@Base+0x2ef>
  417fac:	mov    edx,0xb
  417fb1:	mov    rdi,rax
  417fb4:	call   4341b5 <flatcc_json_printer_table_vector_field@@Base>
  417fb9:	mov    rsi,QWORD PTR [rbp-0x10]
  417fbd:	mov    rax,QWORD PTR [rbp-0x8]
  417fc1:	lea    r9,[rip+0xfffffffffffffe2c]        # 417df4 <_start@@Base+0x11b64>
  417fc8:	mov    r8d,0x5
  417fce:	lea    rcx,[rip+0x1e32c]        # 436301 <_IO_stdin_used@@Base+0x301>
  417fd5:	mov    edx,0xc
  417fda:	mov    rdi,rax
  417fdd:	call   43484f <flatcc_json_printer_table_field@@Base>
  417fe2:	mov    rsi,QWORD PTR [rbp-0x10]
  417fe6:	mov    rax,QWORD PTR [rbp-0x8]
  417fea:	sub    rsp,0x8
  417fee:	lea    rdx,[rip+0xfffffffffffffdff]        # 417df4 <_start@@Base+0x11b64>
  417ff5:	push   rdx
  417ff6:	mov    r9d,0x0
  417ffc:	mov    r8d,0x14
  418002:	lea    rcx,[rip+0x1e2fe]        # 436307 <_IO_stdin_used@@Base+0x307>
  418009:	mov    edx,0xd
  41800e:	mov    rdi,rax
  418011:	call   435410 <flatcc_json_printer_table_as_nested_root@@Base>
  418016:	add    rsp,0x10
  41801a:	mov    rsi,QWORD PTR [rbp-0x10]
  41801e:	mov    rax,QWORD PTR [rbp-0x8]
  418022:	lea    r9,[rip+0xfffffffffffff944]        # 41796d <_start@@Base+0x116dd>
  418029:	mov    r8d,0x9
  41802f:	lea    rcx,[rip+0x1e2e6]        # 43631c <_IO_stdin_used@@Base+0x31c>
  418036:	mov    edx,0xe
  41803b:	mov    rdi,rax
  41803e:	call   43484f <flatcc_json_printer_table_field@@Base>
  418043:	mov    rsi,QWORD PTR [rbp-0x10]
  418047:	mov    rax,QWORD PTR [rbp-0x8]
  41804b:	mov    r9d,0x1
  418051:	mov    r8d,0x8
  418057:	lea    rcx,[rip+0x1e2c8]        # 436326 <_IO_stdin_used@@Base+0x326>
  41805e:	mov    edx,0xf
  418063:	mov    rdi,rax
  418066:	call   42ec41 <flatcc_json_printer_bool_field@@Base>
  41806b:	mov    rsi,QWORD PTR [rbp-0x10]
  41806f:	mov    rax,QWORD PTR [rbp-0x8]
  418073:	mov    r9d,0x0
  418079:	mov    r8d,0x10
  41807f:	lea    rcx,[rip+0x1e2a9]        # 43632f <_IO_stdin_used@@Base+0x32f>
  418086:	mov    edx,0x10
  41808b:	mov    rdi,rax
  41808e:	call   42ea5a <flatcc_json_printer_int32_field@@Base>
  418093:	mov    rsi,QWORD PTR [rbp-0x10]
  418097:	mov    rax,QWORD PTR [rbp-0x8]
  41809b:	mov    r9d,0x0
  4180a1:	mov    r8d,0x10
  4180a7:	lea    rcx,[rip+0x1e292]        # 436340 <_IO_stdin_used@@Base+0x340>
  4180ae:	mov    edx,0x11
  4180b3:	mov    rdi,rax
  4180b6:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  4180bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4180bf:	mov    rax,QWORD PTR [rbp-0x8]
  4180c3:	mov    r9d,0x0
  4180c9:	mov    r8d,0x10
  4180cf:	lea    rcx,[rip+0x1e27b]        # 436351 <_IO_stdin_used@@Base+0x351>
  4180d6:	mov    edx,0x12
  4180db:	mov    rdi,rax
  4180de:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  4180e3:	mov    rsi,QWORD PTR [rbp-0x10]
  4180e7:	mov    rax,QWORD PTR [rbp-0x8]
  4180eb:	mov    r9d,0x0
  4180f1:	mov    r8d,0x10
  4180f7:	lea    rcx,[rip+0x1e264]        # 436362 <_IO_stdin_used@@Base+0x362>
  4180fe:	mov    edx,0x13
  418103:	mov    rdi,rax
  418106:	call   42e775 <flatcc_json_printer_uint64_field@@Base>
  41810b:	mov    rsi,QWORD PTR [rbp-0x10]
  41810f:	mov    rax,QWORD PTR [rbp-0x8]
  418113:	mov    r9d,0x0
  418119:	mov    r8d,0x11
  41811f:	lea    rcx,[rip+0x1e24d]        # 436373 <_IO_stdin_used@@Base+0x373>
  418126:	mov    edx,0x14
  41812b:	mov    rdi,rax
  41812e:	call   42ea5a <flatcc_json_printer_int32_field@@Base>
  418133:	mov    rsi,QWORD PTR [rbp-0x10]
  418137:	mov    rax,QWORD PTR [rbp-0x8]
  41813b:	mov    r9d,0x0
  418141:	mov    r8d,0x11
  418147:	lea    rcx,[rip+0x1e237]        # 436385 <_IO_stdin_used@@Base+0x385>
  41814e:	mov    edx,0x15
  418153:	mov    rdi,rax
  418156:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  41815b:	mov    rsi,QWORD PTR [rbp-0x10]
  41815f:	mov    rax,QWORD PTR [rbp-0x8]
  418163:	mov    r9d,0x0
  418169:	mov    r8d,0x11
  41816f:	lea    rcx,[rip+0x1e221]        # 436397 <_IO_stdin_used@@Base+0x397>
  418176:	mov    edx,0x16
  41817b:	mov    rdi,rax
  41817e:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  418183:	mov    rsi,QWORD PTR [rbp-0x10]
  418187:	mov    rax,QWORD PTR [rbp-0x8]
  41818b:	mov    r9d,0x0
  418191:	mov    r8d,0x11
  418197:	lea    rcx,[rip+0x1e20b]        # 4363a9 <_IO_stdin_used@@Base+0x3a9>
  41819e:	mov    edx,0x17
  4181a3:	mov    rdi,rax
  4181a6:	call   42e775 <flatcc_json_printer_uint64_field@@Base>
  4181ab:	mov    rsi,QWORD PTR [rbp-0x10]
  4181af:	mov    rax,QWORD PTR [rbp-0x8]
  4181b3:	mov    r8d,0x10
  4181b9:	lea    rcx,[rip+0x1e1fb]        # 4363bb <_IO_stdin_used@@Base+0x3bb>
  4181c0:	mov    edx,0x18
  4181c5:	mov    rdi,rax
  4181c8:	call   431d12 <flatcc_json_printer_bool_vector_field@@Base>
  4181cd:	mov    rsi,QWORD PTR [rbp-0x10]
  4181d1:	mov    rax,QWORD PTR [rbp-0x8]
  4181d5:	vmovss xmm0,DWORD PTR [rip+0x21047]        # 439224 <_IO_stdin_used@@Base+0x3224>
  4181dd:	mov    r8d,0x5
  4181e3:	lea    rcx,[rip+0x1e1e2]        # 4363cc <_IO_stdin_used@@Base+0x3cc>
  4181ea:	mov    edx,0x19
  4181ef:	mov    rdi,rax
  4181f2:	call   42ed36 <flatcc_json_printer_float_field@@Base>
  4181f7:	mov    rsi,QWORD PTR [rbp-0x10]
  4181fb:	mov    rax,QWORD PTR [rbp-0x8]
  4181ff:	vmovss xmm0,DWORD PTR [rip+0x21019]        # 439220 <_IO_stdin_used@@Base+0x3220>
  418207:	mov    r8d,0x6
  41820d:	lea    rcx,[rip+0x1e1be]        # 4363d2 <_IO_stdin_used@@Base+0x3d2>
  418214:	mov    edx,0x1a
  418219:	mov    rdi,rax
  41821c:	call   42ed36 <flatcc_json_printer_float_field@@Base>
  418221:	mov    rsi,QWORD PTR [rbp-0x10]
  418225:	mov    rax,QWORD PTR [rbp-0x8]
  418229:	vxorps xmm0,xmm0,xmm0
  41822d:	mov    r8d,0x6
  418233:	lea    rcx,[rip+0x1e19f]        # 4363d9 <_IO_stdin_used@@Base+0x3d9>
  41823a:	mov    edx,0x1b
  41823f:	mov    rdi,rax
  418242:	call   42ed36 <flatcc_json_printer_float_field@@Base>
  418247:	mov    rsi,QWORD PTR [rbp-0x10]
  41824b:	mov    rax,QWORD PTR [rbp-0x8]
  41824f:	mov    r8d,0x12
  418255:	lea    rcx,[rip+0x1e184]        # 4363e0 <_IO_stdin_used@@Base+0x3e0>
  41825c:	mov    edx,0x1c
  418261:	mov    rdi,rax
  418264:	call   433f99 <flatcc_json_printer_string_vector_field@@Base>
  418269:	mov    rsi,QWORD PTR [rbp-0x10]
  41826d:	mov    rax,QWORD PTR [rbp-0x8]
  418271:	sub    rsp,0x8
  418275:	lea    rdx,[rip+0xfffffffffffff388]        # 417604 <_start@@Base+0x11374>
  41827c:	push   rdx
  41827d:	mov    r9d,0x8
  418283:	mov    r8d,0x17
  418289:	lea    rcx,[rip+0x1e163]        # 4363f3 <_IO_stdin_used@@Base+0x3f3>
  418290:	mov    edx,0x1d
  418295:	mov    rdi,rax
  418298:	call   433c89 <flatcc_json_printer_struct_vector_field@@Base>
  41829d:	add    rsp,0x10
  4182a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4182a5:	mov    rax,QWORD PTR [rbp-0x8]
  4182a9:	mov    r8d,0x4
  4182af:	lea    rcx,[rip+0x1e155]        # 43640b <_IO_stdin_used@@Base+0x40b>
  4182b6:	mov    edx,0x1e
  4182bb:	mov    rdi,rax
  4182be:	call   430986 <flatcc_json_printer_uint8_vector_field@@Base>
  4182c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4182c7:	mov    rax,QWORD PTR [rbp-0x8]
  4182cb:	sub    rsp,0x8
  4182cf:	lea    rdx,[rip+0xfffffffffffff195]        # 41746b <_start@@Base+0x111db>
  4182d6:	push   rdx
  4182d7:	mov    r9d,0x4
  4182dd:	mov    r8d,0x5
  4182e3:	lea    rcx,[rip+0x1e126]        # 436410 <_IO_stdin_used@@Base+0x410>
  4182ea:	mov    edx,0x1f
  4182ef:	mov    rdi,rax
  4182f2:	call   433c89 <flatcc_json_printer_struct_vector_field@@Base>
  4182f7:	add    rsp,0x10
  4182fb:	mov    rsi,QWORD PTR [rbp-0x10]
  4182ff:	mov    rax,QWORD PTR [rbp-0x8]
  418303:	mov    r8d,0xf
  418309:	lea    rcx,[rip+0x1e106]        # 436416 <_IO_stdin_used@@Base+0x416>
  418310:	mov    edx,0x20
  418315:	mov    rdi,rax
  418318:	call   431aa1 <flatcc_json_printer_int64_vector_field@@Base>
  41831d:	mov    rsi,QWORD PTR [rbp-0x10]
  418321:	mov    rax,QWORD PTR [rbp-0x8]
  418325:	mov    r8d,0x11
  41832b:	lea    rcx,[rip+0x1e0f4]        # 436426 <_IO_stdin_used@@Base+0x426>
  418332:	mov    edx,0x21
  418337:	mov    rdi,rax
  41833a:	call   43220c <flatcc_json_printer_double_vector_field@@Base>
  41833f:	mov    rsi,QWORD PTR [rbp-0x10]
  418343:	mov    rax,QWORD PTR [rbp-0x8]
  418347:	lea    r9,[rip+0xfffffffffffff397]        # 4176e5 <_start@@Base+0x11455>
  41834e:	mov    r8d,0x15
  418354:	lea    rcx,[rip+0x1e0dd]        # 436438 <_IO_stdin_used@@Base+0x438>
  41835b:	mov    edx,0x22
  418360:	mov    rdi,rax
  418363:	call   43484f <flatcc_json_printer_table_field@@Base>
  418368:	mov    rsi,QWORD PTR [rbp-0x10]
  41836c:	mov    rax,QWORD PTR [rbp-0x8]
  418370:	lea    r9,[rip+0xfffffffffffff9ee]        # 417d65 <_start@@Base+0x11ad5>
  418377:	mov    r8d,0xa
  41837d:	lea    rcx,[rip+0x1e0ca]        # 43644e <_IO_stdin_used@@Base+0x44e>
  418384:	mov    edx,0x23
  418389:	mov    rdi,rax
  41838c:	call   43484f <flatcc_json_printer_table_field@@Base>
  418391:	nop
  418392:	leave  
  418393:	ret    
  418394:	push   rbp
  418395:	mov    rbp,rsp
  418398:	sub    rsp,0x20
  41839c:	mov    QWORD PTR [rbp-0x8],rdi
  4183a0:	mov    QWORD PTR [rbp-0x10],rsi
  4183a4:	mov    QWORD PTR [rbp-0x18],rdx
  4183a8:	mov    QWORD PTR [rbp-0x20],rcx
  4183ac:	mov    rcx,QWORD PTR [rbp-0x20]
  4183b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4183b4:	mov    rsi,QWORD PTR [rbp-0x10]
  4183b8:	mov    rax,QWORD PTR [rbp-0x8]
  4183bc:	lea    r8,[rip+0xfffffffffffffa31]        # 417df4 <_start@@Base+0x11b64>
  4183c3:	mov    rdi,rax
  4183c6:	call   4351b0 <flatcc_json_printer_table_as_root@@Base>
  4183cb:	leave  
  4183cc:	ret    
  4183cd:	endbr64 
  4183d1:	push   rbp
  4183d2:	mov    rbp,rsp
  4183d5:	sub    rsp,0x10
  4183d9:	mov    QWORD PTR [rbp-0x8],rdi
  4183dd:	mov    QWORD PTR [rbp-0x10],rsi
  4183e1:	mov    rsi,QWORD PTR [rbp-0x10]
  4183e5:	mov    rax,QWORD PTR [rbp-0x8]
  4183e9:	mov    r9d,0x0
  4183ef:	mov    r8d,0x2
  4183f5:	lea    rcx,[rip+0x1e05d]        # 436459 <_IO_stdin_used@@Base+0x459>
  4183fc:	mov    edx,0x0
  418401:	mov    rdi,rax
  418404:	call   42e86c <flatcc_json_printer_int8_field@@Base>
  418409:	mov    rsi,QWORD PTR [rbp-0x10]
  41840d:	mov    rax,QWORD PTR [rbp-0x8]
  418411:	mov    r9d,0x0
  418417:	mov    r8d,0x2
  41841d:	lea    rcx,[rip+0x1e038]        # 43645c <_IO_stdin_used@@Base+0x45c>
  418424:	mov    edx,0x1
  418429:	mov    rdi,rax
  41842c:	call   42e497 <flatcc_json_printer_uint8_field@@Base>
  418431:	mov    rsi,QWORD PTR [rbp-0x10]
  418435:	mov    rax,QWORD PTR [rbp-0x8]
  418439:	mov    r9d,0x0
  41843f:	mov    r8d,0x3
  418445:	lea    rcx,[rip+0x1e013]        # 43645f <_IO_stdin_used@@Base+0x45f>
  41844c:	mov    edx,0x2
  418451:	mov    rdi,rax
  418454:	call   42e961 <flatcc_json_printer_int16_field@@Base>
  418459:	mov    rsi,QWORD PTR [rbp-0x10]
  41845d:	mov    rax,QWORD PTR [rbp-0x8]
  418461:	mov    r9d,0x0
  418467:	mov    r8d,0x3
  41846d:	lea    rcx,[rip+0x1dfef]        # 436463 <_IO_stdin_used@@Base+0x463>
  418474:	mov    edx,0x3
  418479:	mov    rdi,rax
  41847c:	call   42e58c <flatcc_json_printer_uint16_field@@Base>
  418481:	mov    rsi,QWORD PTR [rbp-0x10]
  418485:	mov    rax,QWORD PTR [rbp-0x8]
  418489:	mov    r9d,0x0
  41848f:	mov    r8d,0x3
  418495:	lea    rcx,[rip+0x1dfcb]        # 436467 <_IO_stdin_used@@Base+0x467>
  41849c:	mov    edx,0x4
  4184a1:	mov    rdi,rax
  4184a4:	call   42ea5a <flatcc_json_printer_int32_field@@Base>
  4184a9:	mov    rsi,QWORD PTR [rbp-0x10]
  4184ad:	mov    rax,QWORD PTR [rbp-0x8]
  4184b1:	mov    r9d,0x0
  4184b7:	mov    r8d,0x3
  4184bd:	lea    rcx,[rip+0x1dfa7]        # 43646b <_IO_stdin_used@@Base+0x46b>
  4184c4:	mov    edx,0x5
  4184c9:	mov    rdi,rax
  4184cc:	call   42e685 <flatcc_json_printer_uint32_field@@Base>
  4184d1:	mov    rsi,QWORD PTR [rbp-0x10]
  4184d5:	mov    rax,QWORD PTR [rbp-0x8]
  4184d9:	mov    r9d,0x0
  4184df:	mov    r8d,0x3
  4184e5:	lea    rcx,[rip+0x1df83]        # 43646f <_IO_stdin_used@@Base+0x46f>
  4184ec:	mov    edx,0x6
  4184f1:	mov    rdi,rax
  4184f4:	call   42eb4a <flatcc_json_printer_int64_field@@Base>
  4184f9:	mov    rsi,QWORD PTR [rbp-0x10]
  4184fd:	mov    rax,QWORD PTR [rbp-0x8]
  418501:	mov    r9d,0x0
  418507:	mov    r8d,0x3
  41850d:	lea    rcx,[rip+0x1df5f]        # 436473 <_IO_stdin_used@@Base+0x473>
  418514:	mov    edx,0x7
  418519:	mov    rdi,rax
  41851c:	call   42e775 <flatcc_json_printer_uint64_field@@Base>
  418521:	mov    rsi,QWORD PTR [rbp-0x10]
  418525:	mov    rax,QWORD PTR [rbp-0x8]
  418529:	vxorps xmm0,xmm0,xmm0
  41852d:	mov    r8d,0x3
  418533:	lea    rcx,[rip+0x1df3d]        # 436477 <_IO_stdin_used@@Base+0x477>
  41853a:	mov    edx,0x8
  41853f:	mov    rdi,rax
  418542:	call   42ed36 <flatcc_json_printer_float_field@@Base>
  418547:	mov    rsi,QWORD PTR [rbp-0x10]
  41854b:	mov    rax,QWORD PTR [rbp-0x8]
  41854f:	vxorpd xmm0,xmm0,xmm0
  418553:	mov    r8d,0x3
  418559:	lea    rcx,[rip+0x1df1b]        # 43647b <_IO_stdin_used@@Base+0x47b>
  418560:	mov    edx,0x9
  418565:	mov    rdi,rax
  418568:	call   42ee4d <flatcc_json_printer_double_field@@Base>
  41856d:	mov    rsi,QWORD PTR [rbp-0x10]
  418571:	mov    rax,QWORD PTR [rbp-0x8]
  418575:	mov    r8d,0x2
  41857b:	lea    rcx,[rip+0x1defd]        # 43647f <_IO_stdin_used@@Base+0x47f>
  418582:	mov    edx,0xa
  418587:	mov    rdi,rax
  41858a:	call   43134e <flatcc_json_printer_int8_vector_field@@Base>
  41858f:	mov    rsi,QWORD PTR [rbp-0x10]
  418593:	mov    rax,QWORD PTR [rbp-0x8]
  418597:	mov    r8d,0x4
  41859d:	lea    rcx,[rip+0x1dede]        # 436482 <_IO_stdin_used@@Base+0x482>
  4185a4:	mov    edx,0xb
  4185a9:	mov    rdi,rax
  4185ac:	call   43220c <flatcc_json_printer_double_vector_field@@Base>
  4185b1:	nop
  4185b2:	leave  
  4185b3:	ret    
  4185b4:	endbr64 
  4185b8:	push   rbp
  4185b9:	mov    rbp,rsp
  4185bc:	sub    rsp,0x10
  4185c0:	mov    QWORD PTR [rbp-0x8],rdi
  4185c4:	mov    QWORD PTR [rbp-0x10],rsi
  4185c8:	mov    rsi,QWORD PTR [rbp-0x10]
  4185cc:	mov    rax,QWORD PTR [rbp-0x8]
  4185d0:	mov    r9d,0x0
  4185d6:	mov    r8d,0x13
  4185dc:	lea    rcx,[rip+0x1dea4]        # 436487 <_IO_stdin_used@@Base+0x487>
  4185e3:	mov    edx,0x0
  4185e8:	mov    rdi,rax
  4185eb:	call   42ea5a <flatcc_json_printer_int32_field@@Base>
  4185f0:	nop
  4185f1:	leave  
  4185f2:	ret    
  4185f3:	endbr64 
  4185f7:	push   rbp
  4185f8:	mov    rbp,rsp
  4185fb:	sub    rsp,0x10
  4185ff:	mov    QWORD PTR [rbp-0x8],rdi
  418603:	mov    QWORD PTR [rbp-0x10],rsi
  418607:	mov    rsi,QWORD PTR [rbp-0x10]
  41860b:	mov    rax,QWORD PTR [rbp-0x8]
  41860f:	sub    rsp,0x8
  418613:	lea    rdx,[rip+0xffffffffffffed4c]        # 417366 <_start@@Base+0x110d6>
  41861a:	push   rdx
  41861b:	lea    r9,[rip+0xffffffffffffec36]        # 417258 <_start@@Base+0x10fc8>
  418622:	mov    r8d,0xe
  418628:	lea    rcx,[rip+0x1de6c]        # 43649b <_IO_stdin_used@@Base+0x49b>
  41862f:	mov    edx,0x1
  418634:	mov    rdi,rax
  418637:	call   434907 <flatcc_json_printer_union_field@@Base>
  41863c:	add    rsp,0x10
  418640:	mov    rsi,QWORD PTR [rbp-0x10]
  418644:	mov    rax,QWORD PTR [rbp-0x8]
  418648:	sub    rsp,0x8
  41864c:	lea    rdx,[rip+0xffffffffffffed13]        # 417366 <_start@@Base+0x110d6>
  418653:	push   rdx
  418654:	lea    r9,[rip+0xffffffffffffebfd]        # 417258 <_start@@Base+0x10fc8>
  41865b:	mov    r8d,0xa
  418661:	lea    rcx,[rip+0x1de42]        # 4364aa <_IO_stdin_used@@Base+0x4aa>
  418668:	mov    edx,0x3
  41866d:	mov    rdi,rax
  418670:	call   434907 <flatcc_json_printer_union_field@@Base>
  418675:	add    rsp,0x10
  418679:	mov    rsi,QWORD PTR [rbp-0x10]
  41867d:	mov    rax,QWORD PTR [rbp-0x8]
  418681:	sub    rsp,0x8
  418685:	lea    rdx,[rip+0xffffffffffffecda]        # 417366 <_start@@Base+0x110d6>
  41868c:	push   rdx
  41868d:	lea    r9,[rip+0xffffffffffffebc4]        # 417258 <_start@@Base+0x10fc8>
  418694:	mov    r8d,0x9
  41869a:	lea    rcx,[rip+0x1de14]        # 4364b5 <_IO_stdin_used@@Base+0x4b5>
  4186a1:	mov    edx,0x5
  4186a6:	mov    rdi,rax
  4186a9:	call   434907 <flatcc_json_printer_union_field@@Base>
  4186ae:	add    rsp,0x10
  4186b2:	mov    rsi,QWORD PTR [rbp-0x10]
  4186b6:	mov    rax,QWORD PTR [rbp-0x8]
  4186ba:	sub    rsp,0x8
  4186be:	lea    rdx,[rip+0xffffffffffffeca1]        # 417366 <_start@@Base+0x110d6>
  4186c5:	push   rdx
  4186c6:	lea    r9,[rip+0xffffffffffffeb8b]        # 417258 <_start@@Base+0x10fc8>
  4186cd:	mov    r8d,0x5
  4186d3:	lea    rcx,[rip+0x1dde5]        # 4364bf <_IO_stdin_used@@Base+0x4bf>
  4186da:	mov    edx,0x7
  4186df:	mov    rdi,rax
  4186e2:	call   434907 <flatcc_json_printer_union_field@@Base>
  4186e7:	add    rsp,0x10
  4186eb:	mov    rsi,QWORD PTR [rbp-0x10]
  4186ef:	mov    rax,QWORD PTR [rbp-0x8]
  4186f3:	sub    rsp,0x8
  4186f7:	lea    rdx,[rip+0xffffffffffffec68]        # 417366 <_start@@Base+0x110d6>
  4186fe:	push   rdx
  4186ff:	lea    r9,[rip+0xffffffffffffeb52]        # 417258 <_start@@Base+0x10fc8>
  418706:	mov    r8d,0xa
  41870c:	lea    rcx,[rip+0x1ddb2]        # 4364c5 <_IO_stdin_used@@Base+0x4c5>
  418713:	mov    edx,0x9
  418718:	mov    rdi,rax
  41871b:	call   434373 <flatcc_json_printer_union_vector_field@@Base>
  418720:	add    rsp,0x10
  418724:	nop
  418725:	leave  
  418726:	ret    
  418727:	endbr64 
  41872b:	push   rbp
  41872c:	mov    rbp,rsp
  41872f:	add    rsp,0xffffffffffffff80
  418733:	mov    QWORD PTR [rbp-0x68],rdi
  418737:	mov    QWORD PTR [rbp-0x70],rsi
  41873b:	mov    QWORD PTR [rbp-0x78],rdx
  41873f:	mov    rax,QWORD PTR fs:0x28
  418748:	mov    QWORD PTR [rbp-0x8],rax
  41874c:	xor    eax,eax
  41874e:	cmp    QWORD PTR [rbp-0x68],0x0
  418753:	jne    41876e <_start@@Base+0x124de>
  418755:	lea    rax,[rbp-0x60]
  418759:	mov    QWORD PTR [rbp-0x68],rax
  41875d:	mov    rax,QWORD PTR [rbp-0x68]
  418761:	mov    esi,0x0
  418766:	mov    rdi,rax
  418769:	call   435659 <flatcc_json_printer_init@@Base>
  41876e:	mov    rdx,QWORD PTR [rbp-0x78]
  418772:	mov    rsi,QWORD PTR [rbp-0x70]
  418776:	mov    rax,QWORD PTR [rbp-0x68]
  41877a:	lea    rcx,[rip+0x1d8ef]        # 436070 <_IO_stdin_used@@Base+0x70>
  418781:	mov    rdi,rax
  418784:	call   418394 <_start@@Base+0x12104>
  418789:	mov    rcx,QWORD PTR [rbp-0x8]
  41878d:	xor    rcx,QWORD PTR fs:0x28
  418796:	je     41879d <_start@@Base+0x1250d>
  418798:	call   4061a0 <__stack_chk_fail@plt>
  41879d:	leave  
  41879e:	ret    
  41879f:	endbr64 
  4187a3:	push   rbp
  4187a4:	mov    rbp,rsp
  4187a7:	sub    rsp,0x10
  4187ab:	mov    QWORD PTR [rbp-0x8],rdi
  4187af:	mov    rax,QWORD PTR [rbp-0x8]
  4187b3:	movzx  eax,BYTE PTR [rax+0x10]
  4187b7:	movzx  eax,al
  4187ba:	cmp    eax,0x1
  4187bd:	jne    4187d4 <_start@@Base+0x12544>
  4187bf:	mov    rax,QWORD PTR [rbp-0x8]
  4187c3:	lea    rsi,[rip+0x16b]        # 418935 <_start@@Base+0x126a5>
  4187ca:	mov    rdi,rax
  4187cd:	call   4229b3 <flatcc_verify_union_table@@Base>
  4187d2:	jmp    4187d9 <_start@@Base+0x12549>
  4187d4:	mov    eax,0x0
  4187d9:	leave  
  4187da:	ret    
  4187db:	endbr64 
  4187df:	push   rbp
  4187e0:	mov    rbp,rsp
  4187e3:	sub    rsp,0x10
  4187e7:	mov    QWORD PTR [rbp-0x8],rdi
  4187eb:	mov    rax,QWORD PTR [rbp-0x8]
  4187ef:	movzx  eax,BYTE PTR [rax+0x10]
  4187f3:	movzx  eax,al
  4187f6:	cmp    eax,0x2
  4187f9:	je     418828 <_start@@Base+0x12598>
  4187fb:	cmp    eax,0x2
  4187fe:	jg     418807 <_start@@Base+0x12577>
  418800:	cmp    eax,0x1
  418803:	je     418813 <_start@@Base+0x12583>
  418805:	jmp    418867 <_start@@Base+0x125d7>
  418807:	cmp    eax,0x3
  41880a:	je     41883d <_start@@Base+0x125ad>
  41880c:	cmp    eax,0x4
  41880f:	je     418852 <_start@@Base+0x125c2>
  418811:	jmp    418867 <_start@@Base+0x125d7>
  418813:	mov    rax,QWORD PTR [rbp-0x8]
  418817:	lea    rsi,[rip+0x835]        # 419053 <_start@@Base+0x12dc3>
  41881e:	mov    rdi,rax
  418821:	call   4229b3 <flatcc_verify_union_table@@Base>
  418826:	jmp    41886c <_start@@Base+0x125dc>
  418828:	mov    rax,QWORD PTR [rbp-0x8]
  41882c:	lea    rsi,[rip+0x17b]        # 4189ae <_start@@Base+0x1271e>
  418833:	mov    rdi,rax
  418836:	call   4229b3 <flatcc_verify_union_table@@Base>
  41883b:	jmp    41886c <_start@@Base+0x125dc>
  41883d:	mov    rax,QWORD PTR [rbp-0x8]
  418841:	lea    rsi,[rip+0x100]        # 418948 <_start@@Base+0x126b8>
  418848:	mov    rdi,rax
  41884b:	call   4229b3 <flatcc_verify_union_table@@Base>
  418850:	jmp    41886c <_start@@Base+0x125dc>
  418852:	mov    rax,QWORD PTR [rbp-0x8]
  418856:	lea    rsi,[rip+0x3b2]        # 418c0f <_start@@Base+0x1297f>
  41885d:	mov    rdi,rax
  418860:	call   4229b3 <flatcc_verify_union_table@@Base>
  418865:	jmp    41886c <_start@@Base+0x125dc>
  418867:	mov    eax,0x0
  41886c:	leave  
  41886d:	ret    
  41886e:	endbr64 
  418872:	push   rbp
  418873:	mov    rbp,rsp
  418876:	sub    rsp,0x10
  41887a:	mov    QWORD PTR [rbp-0x8],rdi
  41887e:	mov    rax,QWORD PTR [rbp-0x8]
  418882:	movzx  eax,BYTE PTR [rax+0x10]
  418886:	movzx  eax,al
  418889:	cmp    eax,0x9
  41888c:	je     4188e2 <_start@@Base+0x12652>
  41888e:	cmp    eax,0x9
  418891:	jg     4188a2 <_start@@Base+0x12612>
  418893:	cmp    eax,0x2
  418896:	je     4188b5 <_start@@Base+0x12625>
  418898:	cmp    eax,0x8
  41889b:	je     4188ca <_start@@Base+0x1263a>
  41889d:	jmp    41892e <_start@@Base+0x1269e>
  4188a2:	cmp    eax,0xb
  4188a5:	je     418912 <_start@@Base+0x12682>
  4188a7:	cmp    eax,0xb
  4188aa:	jl     4188fa <_start@@Base+0x1266a>
  4188ac:	cmp    eax,0xff
  4188b1:	je     418920 <_start@@Base+0x12690>
  4188b3:	jmp    41892e <_start@@Base+0x1269e>
  4188b5:	mov    rax,QWORD PTR [rbp-0x8]
  4188b9:	lea    rsi,[rip+0x1019]        # 4198d9 <_start@@Base+0x13649>
  4188c0:	mov    rdi,rax
  4188c3:	call   4229b3 <flatcc_verify_union_table@@Base>
  4188c8:	jmp    418933 <_start@@Base+0x126a3>
  4188ca:	mov    rax,QWORD PTR [rbp-0x8]
  4188ce:	mov    edx,0x2
  4188d3:	mov    esi,0x2
  4188d8:	mov    rdi,rax
  4188db:	call   4229fe <flatcc_verify_union_struct@@Base>
  4188e0:	jmp    418933 <_start@@Base+0x126a3>
  4188e2:	mov    rax,QWORD PTR [rbp-0x8]
  4188e6:	mov    edx,0x4
  4188eb:	mov    esi,0x4
  4188f0:	mov    rdi,rax
  4188f3:	call   4229fe <flatcc_verify_union_struct@@Base>
  4188f8:	jmp    418933 <_start@@Base+0x126a3>
  4188fa:	mov    rax,QWORD PTR [rbp-0x8]
  4188fe:	mov    edx,0x4
  418903:	mov    esi,0x4
  418908:	mov    rdi,rax
  41890b:	call   4229fe <flatcc_verify_union_struct@@Base>
  418910:	jmp    418933 <_start@@Base+0x126a3>
  418912:	mov    rax,QWORD PTR [rbp-0x8]
  418916:	mov    rdi,rax
  418919:	call   422a45 <flatcc_verify_union_string@@Base>
  41891e:	jmp    418933 <_start@@Base+0x126a3>
  418920:	mov    rax,QWORD PTR [rbp-0x8]
  418924:	mov    rdi,rax
  418927:	call   422a45 <flatcc_verify_union_string@@Base>
  41892c:	jmp    418933 <_start@@Base+0x126a3>
  41892e:	mov    eax,0x0
  418933:	leave  
  418934:	ret    
  418935:	endbr64 
  418939:	push   rbp
  41893a:	mov    rbp,rsp
  41893d:	mov    QWORD PTR [rbp-0x8],rdi
  418941:	mov    eax,0x0
  418946:	pop    rbp
  418947:	ret    
  418948:	endbr64 
  41894c:	push   rbp
  41894d:	mov    rbp,rsp
  418950:	mov    QWORD PTR [rbp-0x8],rdi
  418954:	mov    eax,0x0
  418959:	pop    rbp
  41895a:	ret    
  41895b:	endbr64 
  41895f:	push   rbp
  418960:	mov    rbp,rsp
  418963:	mov    QWORD PTR [rbp-0x8],rdi
  418967:	mov    eax,0x0
  41896c:	pop    rbp
  41896d:	ret    
  41896e:	endbr64 
  418972:	push   rbp
  418973:	mov    rbp,rsp
  418976:	sub    rsp,0x20
  41897a:	mov    QWORD PTR [rbp-0x18],rdi
  41897e:	mov    rax,QWORD PTR [rbp-0x18]
  418982:	mov    ecx,0x1
  418987:	mov    edx,0x0
  41898c:	mov    esi,0x0
  418991:	mov    rdi,rax
  418994:	call   4225ce <flatcc_verify_field@@Base>
  418999:	mov    DWORD PTR [rbp-0x4],eax
  41899c:	cmp    DWORD PTR [rbp-0x4],0x0
  4189a0:	je     4189a7 <_start@@Base+0x12717>
  4189a2:	mov    eax,DWORD PTR [rbp-0x4]
  4189a5:	jmp    4189ac <_start@@Base+0x1271c>
  4189a7:	mov    eax,0x0
  4189ac:	leave  
  4189ad:	ret    
  4189ae:	endbr64 
  4189b2:	push   rbp
  4189b3:	mov    rbp,rsp
  4189b6:	sub    rsp,0x20
  4189ba:	mov    QWORD PTR [rbp-0x18],rdi
  4189be:	mov    rax,QWORD PTR [rbp-0x18]
  4189c2:	mov    ecx,0x1
  4189c7:	mov    edx,0x1
  4189cc:	mov    esi,0x0
  4189d1:	mov    rdi,rax
  4189d4:	call   4225ce <flatcc_verify_field@@Base>
  4189d9:	mov    DWORD PTR [rbp-0x4],eax
  4189dc:	cmp    DWORD PTR [rbp-0x4],0x0
  4189e0:	je     4189ea <_start@@Base+0x1275a>
  4189e2:	mov    eax,DWORD PTR [rbp-0x4]
  4189e5:	jmp    418a6a <_start@@Base+0x127da>
  4189ea:	mov    rax,QWORD PTR [rbp-0x18]
  4189ee:	mov    ecx,0x1
  4189f3:	mov    edx,0x1
  4189f8:	mov    esi,0x1
  4189fd:	mov    rdi,rax
  418a00:	call   4225ce <flatcc_verify_field@@Base>
  418a05:	mov    DWORD PTR [rbp-0x4],eax
  418a08:	cmp    DWORD PTR [rbp-0x4],0x0
  418a0c:	je     418a13 <_start@@Base+0x12783>
  418a0e:	mov    eax,DWORD PTR [rbp-0x4]
  418a11:	jmp    418a6a <_start@@Base+0x127da>
  418a13:	mov    rax,QWORD PTR [rbp-0x18]
  418a17:	mov    ecx,0x1
  418a1c:	mov    edx,0x1
  418a21:	mov    esi,0x2
  418a26:	mov    rdi,rax
  418a29:	call   4225ce <flatcc_verify_field@@Base>
  418a2e:	mov    DWORD PTR [rbp-0x4],eax
  418a31:	cmp    DWORD PTR [rbp-0x4],0x0
  418a35:	je     418a3c <_start@@Base+0x127ac>
  418a37:	mov    eax,DWORD PTR [rbp-0x4]
  418a3a:	jmp    418a6a <_start@@Base+0x127da>
  418a3c:	mov    rax,QWORD PTR [rbp-0x18]
  418a40:	mov    ecx,0x1
  418a45:	mov    edx,0x1
  418a4a:	mov    esi,0x3
  418a4f:	mov    rdi,rax
  418a52:	call   4225ce <flatcc_verify_field@@Base>
  418a57:	mov    DWORD PTR [rbp-0x4],eax
  418a5a:	cmp    DWORD PTR [rbp-0x4],0x0
  418a5e:	je     418a65 <_start@@Base+0x127d5>
  418a60:	mov    eax,DWORD PTR [rbp-0x4]
  418a63:	jmp    418a6a <_start@@Base+0x127da>
  418a65:	mov    eax,0x0
  418a6a:	leave  
  418a6b:	ret    
  418a6c:	endbr64 
  418a70:	push   rbp
  418a71:	mov    rbp,rsp
  418a74:	sub    rsp,0x20
  418a78:	mov    QWORD PTR [rbp-0x18],rdi
  418a7c:	mov    rax,QWORD PTR [rbp-0x18]
  418a80:	mov    ecx,0x1
  418a85:	mov    edx,0x0
  418a8a:	mov    esi,0x0
  418a8f:	mov    rdi,rax
  418a92:	call   4225ce <flatcc_verify_field@@Base>
  418a97:	mov    DWORD PTR [rbp-0x4],eax
  418a9a:	cmp    DWORD PTR [rbp-0x4],0x0
  418a9e:	je     418aa8 <_start@@Base+0x12818>
  418aa0:	mov    eax,DWORD PTR [rbp-0x4]
  418aa3:	jmp    418b80 <_start@@Base+0x128f0>
  418aa8:	mov    rax,QWORD PTR [rbp-0x18]
  418aac:	mov    ecx,0x8
  418ab1:	mov    edx,0x8
  418ab6:	mov    esi,0x1
  418abb:	mov    rdi,rax
  418abe:	call   4225ce <flatcc_verify_field@@Base>
  418ac3:	mov    DWORD PTR [rbp-0x4],eax
  418ac6:	cmp    DWORD PTR [rbp-0x4],0x0
  418aca:	je     418ad4 <_start@@Base+0x12844>
  418acc:	mov    eax,DWORD PTR [rbp-0x4]
  418acf:	jmp    418b80 <_start@@Base+0x128f0>
  418ad4:	mov    rax,QWORD PTR [rbp-0x18]
  418ad8:	mov    ecx,0x8
  418add:	mov    edx,0x8
  418ae2:	mov    esi,0x2
  418ae7:	mov    rdi,rax
  418aea:	call   4225ce <flatcc_verify_field@@Base>
  418aef:	mov    DWORD PTR [rbp-0x4],eax
  418af2:	cmp    DWORD PTR [rbp-0x4],0x0
  418af6:	je     418b00 <_start@@Base+0x12870>
  418af8:	mov    eax,DWORD PTR [rbp-0x4]
  418afb:	jmp    418b80 <_start@@Base+0x128f0>
  418b00:	mov    rax,QWORD PTR [rbp-0x18]
  418b04:	mov    ecx,0x4
  418b09:	mov    edx,0x4
  418b0e:	mov    esi,0x3
  418b13:	mov    rdi,rax
  418b16:	call   4225ce <flatcc_verify_field@@Base>
  418b1b:	mov    DWORD PTR [rbp-0x4],eax
  418b1e:	cmp    DWORD PTR [rbp-0x4],0x0
  418b22:	je     418b29 <_start@@Base+0x12899>
  418b24:	mov    eax,DWORD PTR [rbp-0x4]
  418b27:	jmp    418b80 <_start@@Base+0x128f0>
  418b29:	mov    rax,QWORD PTR [rbp-0x18]
  418b2d:	mov    ecx,0x8
  418b32:	mov    edx,0x8
  418b37:	mov    esi,0x4
  418b3c:	mov    rdi,rax
  418b3f:	call   4225ce <flatcc_verify_field@@Base>
  418b44:	mov    DWORD PTR [rbp-0x4],eax
  418b47:	cmp    DWORD PTR [rbp-0x4],0x0
  418b4b:	je     418b52 <_start@@Base+0x128c2>
  418b4d:	mov    eax,DWORD PTR [rbp-0x4]
  418b50:	jmp    418b80 <_start@@Base+0x128f0>
  418b52:	mov    rax,QWORD PTR [rbp-0x18]
  418b56:	mov    ecx,0x8
  418b5b:	mov    edx,0x8
  418b60:	mov    esi,0x5
  418b65:	mov    rdi,rax
  418b68:	call   4225ce <flatcc_verify_field@@Base>
  418b6d:	mov    DWORD PTR [rbp-0x4],eax
  418b70:	cmp    DWORD PTR [rbp-0x4],0x0
  418b74:	je     418b7b <_start@@Base+0x128eb>
  418b76:	mov    eax,DWORD PTR [rbp-0x4]
  418b79:	jmp    418b80 <_start@@Base+0x128f0>
  418b7b:	mov    eax,0x0
  418b80:	leave  
  418b81:	ret    
  418b82:	endbr64 
  418b86:	push   rbp
  418b87:	mov    rbp,rsp
  418b8a:	sub    rsp,0x20
  418b8e:	mov    QWORD PTR [rbp-0x18],rdi
  418b92:	mov    rax,QWORD PTR [rbp-0x18]
  418b96:	mov    edx,0x0
  418b9b:	mov    esi,0x0
  418ba0:	mov    rdi,rax
  418ba3:	call   42263f <flatcc_verify_string_field@@Base>
  418ba8:	mov    DWORD PTR [rbp-0x4],eax
  418bab:	cmp    DWORD PTR [rbp-0x4],0x0
  418baf:	je     418bb6 <_start@@Base+0x12926>
  418bb1:	mov    eax,DWORD PTR [rbp-0x4]
  418bb4:	jmp    418c0d <_start@@Base+0x1297d>
  418bb6:	mov    rax,QWORD PTR [rbp-0x18]
  418bba:	mov    ecx,0x8
  418bbf:	mov    edx,0x8
  418bc4:	mov    esi,0x1
  418bc9:	mov    rdi,rax
  418bcc:	call   4225ce <flatcc_verify_field@@Base>
  418bd1:	mov    DWORD PTR [rbp-0x4],eax
  418bd4:	cmp    DWORD PTR [rbp-0x4],0x0
  418bd8:	je     418bdf <_start@@Base+0x1294f>
  418bda:	mov    eax,DWORD PTR [rbp-0x4]
  418bdd:	jmp    418c0d <_start@@Base+0x1297d>
  418bdf:	mov    rax,QWORD PTR [rbp-0x18]
  418be3:	mov    ecx,0x2
  418be8:	mov    edx,0x2
  418bed:	mov    esi,0x2
  418bf2:	mov    rdi,rax
  418bf5:	call   4225ce <flatcc_verify_field@@Base>
  418bfa:	mov    DWORD PTR [rbp-0x4],eax
  418bfd:	cmp    DWORD PTR [rbp-0x4],0x0
  418c01:	je     418c08 <_start@@Base+0x12978>
  418c03:	mov    eax,DWORD PTR [rbp-0x4]
  418c06:	jmp    418c0d <_start@@Base+0x1297d>
  418c08:	mov    eax,0x0
  418c0d:	leave  
  418c0e:	ret    
  418c0f:	endbr64 
  418c13:	push   rbp
  418c14:	mov    rbp,rsp
  418c17:	sub    rsp,0x20
  418c1b:	mov    QWORD PTR [rbp-0x18],rdi
  418c1f:	mov    rax,QWORD PTR [rbp-0x18]
  418c23:	lea    rcx,[rip+0x7d]        # 418ca7 <_start@@Base+0x12a17>
  418c2a:	mov    edx,0x0
  418c2f:	mov    esi,0x0
  418c34:	mov    rdi,rax
  418c37:	call   422847 <flatcc_verify_table_field@@Base>
  418c3c:	mov    DWORD PTR [rbp-0x4],eax
  418c3f:	cmp    DWORD PTR [rbp-0x4],0x0
  418c43:	je     418c4a <_start@@Base+0x129ba>
  418c45:	mov    eax,DWORD PTR [rbp-0x4]
  418c48:	jmp    418ca5 <_start@@Base+0x12a15>
  418c4a:	mov    rax,QWORD PTR [rbp-0x18]
  418c4e:	lea    rcx,[rip+0xcc4]        # 419919 <_start@@Base+0x13689>
  418c55:	mov    edx,0x0
  418c5a:	mov    esi,0x1
  418c5f:	mov    rdi,rax
  418c62:	call   422847 <flatcc_verify_table_field@@Base>
  418c67:	mov    DWORD PTR [rbp-0x4],eax
  418c6a:	cmp    DWORD PTR [rbp-0x4],0x0
  418c6e:	je     418c75 <_start@@Base+0x129e5>
  418c70:	mov    eax,DWORD PTR [rbp-0x4]
  418c73:	jmp    418ca5 <_start@@Base+0x12a15>
  418c75:	mov    rax,QWORD PTR [rbp-0x18]
  418c79:	lea    rcx,[rip+0xfffffffffffffb5b]        # 4187db <_start@@Base+0x1254b>
  418c80:	mov    edx,0x0
  418c85:	mov    esi,0x3
  418c8a:	mov    rdi,rax
  418c8d:	call   423294 <flatcc_verify_union_vector_field@@Base>
  418c92:	mov    DWORD PTR [rbp-0x4],eax
  418c95:	cmp    DWORD PTR [rbp-0x4],0x0
  418c99:	je     418ca0 <_start@@Base+0x12a10>
  418c9b:	mov    eax,DWORD PTR [rbp-0x4]
  418c9e:	jmp    418ca5 <_start@@Base+0x12a15>
  418ca0:	mov    eax,0x0
  418ca5:	leave  
  418ca6:	ret    
  418ca7:	endbr64 
  418cab:	push   rbp
  418cac:	mov    rbp,rsp
  418caf:	sub    rsp,0x20
  418cb3:	mov    QWORD PTR [rbp-0x18],rdi
  418cb7:	mov    rax,QWORD PTR [rbp-0x18]
  418cbb:	lea    rcx,[rip+0x7d]        # 418d3f <_start@@Base+0x12aaf>
  418cc2:	mov    edx,0x0
  418cc7:	mov    esi,0x0
  418ccc:	mov    rdi,rax
  418ccf:	call   422847 <flatcc_verify_table_field@@Base>
  418cd4:	mov    DWORD PTR [rbp-0x4],eax
  418cd7:	cmp    DWORD PTR [rbp-0x4],0x0
  418cdb:	je     418ce2 <_start@@Base+0x12a52>
  418cdd:	mov    eax,DWORD PTR [rbp-0x4]
  418ce0:	jmp    418d3d <_start@@Base+0x12aad>
  418ce2:	mov    rax,QWORD PTR [rbp-0x18]
  418ce6:	lea    rcx,[rip+0x1dd]        # 418eca <_start@@Base+0x12c3a>
  418ced:	mov    edx,0x0
  418cf2:	mov    esi,0x1
  418cf7:	mov    rdi,rax
  418cfa:	call   422847 <flatcc_verify_table_field@@Base>
  418cff:	mov    DWORD PTR [rbp-0x4],eax
  418d02:	cmp    DWORD PTR [rbp-0x4],0x0
  418d06:	je     418d0d <_start@@Base+0x12a7d>
  418d08:	mov    eax,DWORD PTR [rbp-0x4]
  418d0b:	jmp    418d3d <_start@@Base+0x12aad>
  418d0d:	mov    rax,QWORD PTR [rbp-0x18]
  418d11:	lea    rcx,[rip+0x21b]        # 418f33 <_start@@Base+0x12ca3>
  418d18:	mov    edx,0x0
  418d1d:	mov    esi,0x2
  418d22:	mov    rdi,rax
  418d25:	call   422847 <flatcc_verify_table_field@@Base>
  418d2a:	mov    DWORD PTR [rbp-0x4],eax
  418d2d:	cmp    DWORD PTR [rbp-0x4],0x0
  418d31:	je     418d38 <_start@@Base+0x12aa8>
  418d33:	mov    eax,DWORD PTR [rbp-0x4]
  418d36:	jmp    418d3d <_start@@Base+0x12aad>
  418d38:	mov    eax,0x0
  418d3d:	leave  
  418d3e:	ret    
  418d3f:	endbr64 
  418d43:	push   rbp
  418d44:	mov    rbp,rsp
  418d47:	sub    rsp,0x20
  418d4b:	mov    QWORD PTR [rbp-0x18],rdi
  418d4f:	mov    rax,QWORD PTR [rbp-0x18]
  418d53:	mov    edx,0x0
  418d58:	mov    esi,0x0
  418d5d:	mov    rdi,rax
  418d60:	call   42263f <flatcc_verify_string_field@@Base>
  418d65:	mov    DWORD PTR [rbp-0x4],eax
  418d68:	cmp    DWORD PTR [rbp-0x4],0x0
  418d6c:	je     418d76 <_start@@Base+0x12ae6>
  418d6e:	mov    eax,DWORD PTR [rbp-0x4]
  418d71:	jmp    418ec8 <_start@@Base+0x12c38>
  418d76:	mov    rax,QWORD PTR [rbp-0x18]
  418d7a:	mov    ecx,0x4
  418d7f:	mov    edx,0x4
  418d84:	mov    esi,0x1
  418d89:	mov    rdi,rax
  418d8c:	call   4225ce <flatcc_verify_field@@Base>
  418d91:	mov    DWORD PTR [rbp-0x4],eax
  418d94:	cmp    DWORD PTR [rbp-0x4],0x0
  418d98:	je     418da2 <_start@@Base+0x12b12>
  418d9a:	mov    eax,DWORD PTR [rbp-0x4]
  418d9d:	jmp    418ec8 <_start@@Base+0x12c38>
  418da2:	mov    rax,QWORD PTR [rbp-0x18]
  418da6:	mov    edx,0x0
  418dab:	mov    esi,0x2
  418db0:	mov    rdi,rax
  418db3:	call   42263f <flatcc_verify_string_field@@Base>
  418db8:	mov    DWORD PTR [rbp-0x4],eax
  418dbb:	cmp    DWORD PTR [rbp-0x4],0x0
  418dbf:	je     418dc9 <_start@@Base+0x12b39>
  418dc1:	mov    eax,DWORD PTR [rbp-0x4]
  418dc4:	jmp    418ec8 <_start@@Base+0x12c38>
  418dc9:	mov    rax,QWORD PTR [rbp-0x18]
  418dcd:	mov    ecx,0x8
  418dd2:	mov    edx,0x8
  418dd7:	mov    esi,0x3
  418ddc:	mov    rdi,rax
  418ddf:	call   4225ce <flatcc_verify_field@@Base>
  418de4:	mov    DWORD PTR [rbp-0x4],eax
  418de7:	cmp    DWORD PTR [rbp-0x4],0x0
  418deb:	je     418df5 <_start@@Base+0x12b65>
  418ded:	mov    eax,DWORD PTR [rbp-0x4]
  418df0:	jmp    418ec8 <_start@@Base+0x12c38>
  418df5:	mov    rax,QWORD PTR [rbp-0x18]
  418df9:	mov    edx,0x0
  418dfe:	mov    esi,0x4
  418e03:	mov    rdi,rax
  418e06:	call   42263f <flatcc_verify_string_field@@Base>
  418e0b:	mov    DWORD PTR [rbp-0x4],eax
  418e0e:	cmp    DWORD PTR [rbp-0x4],0x0
  418e12:	je     418e1c <_start@@Base+0x12b8c>
  418e14:	mov    eax,DWORD PTR [rbp-0x4]
  418e17:	jmp    418ec8 <_start@@Base+0x12c38>
  418e1c:	mov    rax,QWORD PTR [rbp-0x18]
  418e20:	mov    ecx,0x8
  418e25:	mov    edx,0x8
  418e2a:	mov    esi,0x5
  418e2f:	mov    rdi,rax
  418e32:	call   4225ce <flatcc_verify_field@@Base>
  418e37:	mov    DWORD PTR [rbp-0x4],eax
  418e3a:	cmp    DWORD PTR [rbp-0x4],0x0
  418e3e:	je     418e48 <_start@@Base+0x12bb8>
  418e40:	mov    eax,DWORD PTR [rbp-0x4]
  418e43:	jmp    418ec8 <_start@@Base+0x12c38>
  418e48:	mov    rax,QWORD PTR [rbp-0x18]
  418e4c:	mov    ecx,0x4
  418e51:	mov    edx,0x4
  418e56:	mov    esi,0x6
  418e5b:	mov    rdi,rax
  418e5e:	call   4225ce <flatcc_verify_field@@Base>
  418e63:	mov    DWORD PTR [rbp-0x4],eax
  418e66:	cmp    DWORD PTR [rbp-0x4],0x0
  418e6a:	je     418e71 <_start@@Base+0x12be1>
  418e6c:	mov    eax,DWORD PTR [rbp-0x4]
  418e6f:	jmp    418ec8 <_start@@Base+0x12c38>
  418e71:	mov    rax,QWORD PTR [rbp-0x18]
  418e75:	mov    ecx,0x8
  418e7a:	mov    edx,0x8
  418e7f:	mov    esi,0x7
  418e84:	mov    rdi,rax
  418e87:	call   4225ce <flatcc_verify_field@@Base>
  418e8c:	mov    DWORD PTR [rbp-0x4],eax
  418e8f:	cmp    DWORD PTR [rbp-0x4],0x0
  418e93:	je     418e9a <_start@@Base+0x12c0a>
  418e95:	mov    eax,DWORD PTR [rbp-0x4]
  418e98:	jmp    418ec8 <_start@@Base+0x12c38>
  418e9a:	mov    rax,QWORD PTR [rbp-0x18]
  418e9e:	mov    ecx,0x4
  418ea3:	mov    edx,0x4
  418ea8:	mov    esi,0x8
  418ead:	mov    rdi,rax
  418eb0:	call   4225ce <flatcc_verify_field@@Base>
  418eb5:	mov    DWORD PTR [rbp-0x4],eax
  418eb8:	cmp    DWORD PTR [rbp-0x4],0x0
  418ebc:	je     418ec3 <_start@@Base+0x12c33>
  418ebe:	mov    eax,DWORD PTR [rbp-0x4]
  418ec1:	jmp    418ec8 <_start@@Base+0x12c38>
  418ec3:	mov    eax,0x0
  418ec8:	leave  
  418ec9:	ret    
  418eca:	endbr64 
  418ece:	push   rbp
  418ecf:	mov    rbp,rsp
  418ed2:	sub    rsp,0x20
  418ed6:	mov    QWORD PTR [rbp-0x18],rdi
  418eda:	mov    rax,QWORD PTR [rbp-0x18]
  418ede:	mov    ecx,0x8
  418ee3:	mov    edx,0x8
  418ee8:	mov    esi,0x0
  418eed:	mov    rdi,rax
  418ef0:	call   4225ce <flatcc_verify_field@@Base>
  418ef5:	mov    DWORD PTR [rbp-0x4],eax
  418ef8:	cmp    DWORD PTR [rbp-0x4],0x0
  418efc:	je     418f03 <_start@@Base+0x12c73>
  418efe:	mov    eax,DWORD PTR [rbp-0x4]
  418f01:	jmp    418f31 <_start@@Base+0x12ca1>
  418f03:	mov    rax,QWORD PTR [rbp-0x18]
  418f07:	mov    ecx,0x4
  418f0c:	mov    edx,0x4
  418f11:	mov    esi,0x1
  418f16:	mov    rdi,rax
  418f19:	call   4225ce <flatcc_verify_field@@Base>
  418f1e:	mov    DWORD PTR [rbp-0x4],eax
  418f21:	cmp    DWORD PTR [rbp-0x4],0x0
  418f25:	je     418f2c <_start@@Base+0x12c9c>
  418f27:	mov    eax,DWORD PTR [rbp-0x4]
  418f2a:	jmp    418f31 <_start@@Base+0x12ca1>
  418f2c:	mov    eax,0x0
  418f31:	leave  
  418f32:	ret    
  418f33:	endbr64 
  418f37:	push   rbp
  418f38:	mov    rbp,rsp
  418f3b:	sub    rsp,0x20
  418f3f:	mov    QWORD PTR [rbp-0x18],rdi
  418f43:	mov    rax,QWORD PTR [rbp-0x18]
  418f47:	mov    ecx,0x8
  418f4c:	mov    edx,0x8
  418f51:	mov    esi,0x0
  418f56:	mov    rdi,rax
  418f59:	call   4225ce <flatcc_verify_field@@Base>
  418f5e:	mov    DWORD PTR [rbp-0x4],eax
  418f61:	cmp    DWORD PTR [rbp-0x4],0x0
  418f65:	je     418f6c <_start@@Base+0x12cdc>
  418f67:	mov    eax,DWORD PTR [rbp-0x4]
  418f6a:	jmp    418f9a <_start@@Base+0x12d0a>
  418f6c:	mov    rax,QWORD PTR [rbp-0x18]
  418f70:	mov    ecx,0x4
  418f75:	mov    edx,0x4
  418f7a:	mov    esi,0x1
  418f7f:	mov    rdi,rax
  418f82:	call   4225ce <flatcc_verify_field@@Base>
  418f87:	mov    DWORD PTR [rbp-0x4],eax
  418f8a:	cmp    DWORD PTR [rbp-0x4],0x0
  418f8e:	je     418f95 <_start@@Base+0x12d05>
  418f90:	mov    eax,DWORD PTR [rbp-0x4]
  418f93:	jmp    418f9a <_start@@Base+0x12d0a>
  418f95:	mov    eax,0x0
  418f9a:	leave  
  418f9b:	ret    
  418f9c:	endbr64 
  418fa0:	push   rbp
  418fa1:	mov    rbp,rsp
  418fa4:	sub    rsp,0x20
  418fa8:	mov    QWORD PTR [rbp-0x18],rdi
  418fac:	mov    rax,QWORD PTR [rbp-0x18]
  418fb0:	mov    r9d,0xffffffff
  418fb6:	mov    r8d,0x1
  418fbc:	mov    ecx,0x1
  418fc1:	mov    edx,0x0
  418fc6:	mov    esi,0x0
  418fcb:	mov    rdi,rax
  418fce:	call   4226d8 <flatcc_verify_vector_field@@Base>
  418fd3:	mov    DWORD PTR [rbp-0x4],eax
  418fd6:	cmp    DWORD PTR [rbp-0x4],0x0
  418fda:	je     418fe1 <_start@@Base+0x12d51>
  418fdc:	mov    eax,DWORD PTR [rbp-0x4]
  418fdf:	jmp    419051 <_start@@Base+0x12dc1>
  418fe1:	mov    rax,QWORD PTR [rbp-0x18]
  418fe5:	mov    r9d,0xffffffff
  418feb:	mov    r8d,0x1
  418ff1:	mov    ecx,0x1
  418ff6:	mov    edx,0x0
  418ffb:	mov    esi,0x1
  419000:	mov    rdi,rax
  419003:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419008:	mov    DWORD PTR [rbp-0x4],eax
  41900b:	cmp    DWORD PTR [rbp-0x4],0x0
  41900f:	je     419016 <_start@@Base+0x12d86>
  419011:	mov    eax,DWORD PTR [rbp-0x4]
  419014:	jmp    419051 <_start@@Base+0x12dc1>
  419016:	mov    rax,QWORD PTR [rbp-0x18]
  41901a:	lea    r9,[rip+0x32]        # 419053 <_start@@Base+0x12dc3>
  419021:	mov    r8d,0x1
  419027:	mov    ecx,0x0
  41902c:	mov    edx,0x0
  419031:	mov    esi,0x2
  419036:	mov    rdi,rax
  419039:	call   422f43 <flatcc_verify_table_as_nested_root@@Base>
  41903e:	mov    DWORD PTR [rbp-0x4],eax
  419041:	cmp    DWORD PTR [rbp-0x4],0x0
  419045:	je     41904c <_start@@Base+0x12dbc>
  419047:	mov    eax,DWORD PTR [rbp-0x4]
  41904a:	jmp    419051 <_start@@Base+0x12dc1>
  41904c:	mov    eax,0x0
  419051:	leave  
  419052:	ret    
  419053:	endbr64 
  419057:	push   rbp
  419058:	mov    rbp,rsp
  41905b:	sub    rsp,0x20
  41905f:	mov    QWORD PTR [rbp-0x18],rdi
  419063:	mov    rax,QWORD PTR [rbp-0x18]
  419067:	mov    ecx,0x10
  41906c:	mov    edx,0x20
  419071:	mov    esi,0x0
  419076:	mov    rdi,rax
  419079:	call   4225ce <flatcc_verify_field@@Base>
  41907e:	mov    DWORD PTR [rbp-0x4],eax
  419081:	cmp    DWORD PTR [rbp-0x4],0x0
  419085:	je     41908f <_start@@Base+0x12dff>
  419087:	mov    eax,DWORD PTR [rbp-0x4]
  41908a:	jmp    4196a1 <_start@@Base+0x13411>
  41908f:	mov    rax,QWORD PTR [rbp-0x18]
  419093:	mov    ecx,0x2
  419098:	mov    edx,0x2
  41909d:	mov    esi,0x2
  4190a2:	mov    rdi,rax
  4190a5:	call   4225ce <flatcc_verify_field@@Base>
  4190aa:	mov    DWORD PTR [rbp-0x4],eax
  4190ad:	cmp    DWORD PTR [rbp-0x4],0x0
  4190b1:	je     4190bb <_start@@Base+0x12e2b>
  4190b3:	mov    eax,DWORD PTR [rbp-0x4]
  4190b6:	jmp    4196a1 <_start@@Base+0x13411>
  4190bb:	mov    rax,QWORD PTR [rbp-0x18]
  4190bf:	mov    ecx,0x2
  4190c4:	mov    edx,0x2
  4190c9:	mov    esi,0x1
  4190ce:	mov    rdi,rax
  4190d1:	call   4225ce <flatcc_verify_field@@Base>
  4190d6:	mov    DWORD PTR [rbp-0x4],eax
  4190d9:	cmp    DWORD PTR [rbp-0x4],0x0
  4190dd:	je     4190e7 <_start@@Base+0x12e57>
  4190df:	mov    eax,DWORD PTR [rbp-0x4]
  4190e2:	jmp    4196a1 <_start@@Base+0x13411>
  4190e7:	mov    rax,QWORD PTR [rbp-0x18]
  4190eb:	mov    edx,0x1
  4190f0:	mov    esi,0x3
  4190f5:	mov    rdi,rax
  4190f8:	call   42263f <flatcc_verify_string_field@@Base>
  4190fd:	mov    DWORD PTR [rbp-0x4],eax
  419100:	cmp    DWORD PTR [rbp-0x4],0x0
  419104:	je     41910e <_start@@Base+0x12e7e>
  419106:	mov    eax,DWORD PTR [rbp-0x4]
  419109:	jmp    4196a1 <_start@@Base+0x13411>
  41910e:	mov    rax,QWORD PTR [rbp-0x18]
  419112:	mov    ecx,0x1
  419117:	mov    edx,0x1
  41911c:	mov    esi,0x6
  419121:	mov    rdi,rax
  419124:	call   4225ce <flatcc_verify_field@@Base>
  419129:	mov    DWORD PTR [rbp-0x4],eax
  41912c:	cmp    DWORD PTR [rbp-0x4],0x0
  419130:	je     41913a <_start@@Base+0x12eaa>
  419132:	mov    eax,DWORD PTR [rbp-0x4]
  419135:	jmp    4196a1 <_start@@Base+0x13411>
  41913a:	mov    rax,QWORD PTR [rbp-0x18]
  41913e:	mov    r9d,0xffffffff
  419144:	mov    r8d,0x1
  41914a:	mov    ecx,0x1
  41914f:	mov    edx,0x0
  419154:	mov    esi,0x5
  419159:	mov    rdi,rax
  41915c:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419161:	mov    DWORD PTR [rbp-0x4],eax
  419164:	cmp    DWORD PTR [rbp-0x4],0x0
  419168:	je     419172 <_start@@Base+0x12ee2>
  41916a:	mov    eax,DWORD PTR [rbp-0x4]
  41916d:	jmp    4196a1 <_start@@Base+0x13411>
  419172:	mov    rax,QWORD PTR [rbp-0x18]
  419176:	lea    rcx,[rip+0xfffffffffffffed6]        # 419053 <_start@@Base+0x12dc3>
  41917d:	mov    edx,0x0
  419182:	mov    esi,0xb
  419187:	mov    rdi,rax
  41918a:	call   4228fd <flatcc_verify_table_vector_field@@Base>
  41918f:	mov    DWORD PTR [rbp-0x4],eax
  419192:	cmp    DWORD PTR [rbp-0x4],0x0
  419196:	je     4191a0 <_start@@Base+0x12f10>
  419198:	mov    eax,DWORD PTR [rbp-0x4]
  41919b:	jmp    4196a1 <_start@@Base+0x13411>
  4191a0:	mov    rax,QWORD PTR [rbp-0x18]
  4191a4:	mov    edx,0x0
  4191a9:	mov    esi,0xa
  4191ae:	mov    rdi,rax
  4191b1:	call   4227ae <flatcc_verify_string_vector_field@@Base>
  4191b6:	mov    DWORD PTR [rbp-0x4],eax
  4191b9:	cmp    DWORD PTR [rbp-0x4],0x0
  4191bd:	je     4191c7 <_start@@Base+0x12f37>
  4191bf:	mov    eax,DWORD PTR [rbp-0x4]
  4191c2:	jmp    4196a1 <_start@@Base+0x13411>
  4191c7:	mov    rax,QWORD PTR [rbp-0x18]
  4191cb:	mov    edx,0x0
  4191d0:	mov    esi,0x1c
  4191d5:	mov    rdi,rax
  4191d8:	call   4227ae <flatcc_verify_string_vector_field@@Base>
  4191dd:	mov    DWORD PTR [rbp-0x4],eax
  4191e0:	cmp    DWORD PTR [rbp-0x4],0x0
  4191e4:	je     4191ee <_start@@Base+0x12f5e>
  4191e6:	mov    eax,DWORD PTR [rbp-0x4]
  4191e9:	jmp    4196a1 <_start@@Base+0x13411>
  4191ee:	mov    rax,QWORD PTR [rbp-0x18]
  4191f2:	mov    r9d,0xffffffff
  4191f8:	mov    r8d,0x1
  4191fe:	mov    ecx,0x1
  419203:	mov    edx,0x0
  419208:	mov    esi,0x18
  41920d:	mov    rdi,rax
  419210:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419215:	mov    DWORD PTR [rbp-0x4],eax
  419218:	cmp    DWORD PTR [rbp-0x4],0x0
  41921c:	je     419226 <_start@@Base+0x12f96>
  41921e:	mov    eax,DWORD PTR [rbp-0x4]
  419221:	jmp    4196a1 <_start@@Base+0x13411>
  419226:	mov    rax,QWORD PTR [rbp-0x18]
  41922a:	mov    r9d,0x1fffffff
  419230:	mov    r8d,0x4
  419236:	mov    ecx,0x8
  41923b:	mov    edx,0x0
  419240:	mov    esi,0x1d
  419245:	mov    rdi,rax
  419248:	call   4226d8 <flatcc_verify_vector_field@@Base>
  41924d:	mov    DWORD PTR [rbp-0x4],eax
  419250:	cmp    DWORD PTR [rbp-0x4],0x0
  419254:	je     41925e <_start@@Base+0x12fce>
  419256:	mov    eax,DWORD PTR [rbp-0x4]
  419259:	jmp    4196a1 <_start@@Base+0x13411>
  41925e:	mov    rax,QWORD PTR [rbp-0x18]
  419262:	lea    rcx,[rip+0xfffffffffffffdea]        # 419053 <_start@@Base+0x12dc3>
  419269:	mov    edx,0x0
  41926e:	mov    esi,0xc
  419273:	mov    rdi,rax
  419276:	call   422847 <flatcc_verify_table_field@@Base>
  41927b:	mov    DWORD PTR [rbp-0x4],eax
  41927e:	cmp    DWORD PTR [rbp-0x4],0x0
  419282:	je     41928c <_start@@Base+0x12ffc>
  419284:	mov    eax,DWORD PTR [rbp-0x4]
  419287:	jmp    4196a1 <_start@@Base+0x13411>
  41928c:	mov    rax,QWORD PTR [rbp-0x18]
  419290:	lea    rcx,[rip+0xfffffffffffff544]        # 4187db <_start@@Base+0x1254b>
  419297:	mov    edx,0x0
  41929c:	mov    esi,0x8
  4192a1:	mov    rdi,rax
  4192a4:	call   42308c <flatcc_verify_union_field@@Base>
  4192a9:	mov    DWORD PTR [rbp-0x4],eax
  4192ac:	cmp    DWORD PTR [rbp-0x4],0x0
  4192b0:	je     4192ba <_start@@Base+0x1302a>
  4192b2:	mov    eax,DWORD PTR [rbp-0x4]
  4192b5:	jmp    4196a1 <_start@@Base+0x13411>
  4192ba:	mov    rax,QWORD PTR [rbp-0x18]
  4192be:	mov    r9d,0x3fffffff
  4192c4:	mov    r8d,0x2
  4192ca:	mov    ecx,0x4
  4192cf:	mov    edx,0x0
  4192d4:	mov    esi,0x9
  4192d9:	mov    rdi,rax
  4192dc:	call   4226d8 <flatcc_verify_vector_field@@Base>
  4192e1:	mov    DWORD PTR [rbp-0x4],eax
  4192e4:	cmp    DWORD PTR [rbp-0x4],0x0
  4192e8:	je     4192f2 <_start@@Base+0x13062>
  4192ea:	mov    eax,DWORD PTR [rbp-0x4]
  4192ed:	jmp    4196a1 <_start@@Base+0x13411>
  4192f2:	mov    rax,QWORD PTR [rbp-0x18]
  4192f6:	mov    r9d,0x3fffffff
  4192fc:	mov    r8d,0x2
  419302:	mov    ecx,0x4
  419307:	mov    edx,0x0
  41930c:	mov    esi,0x1f
  419311:	mov    rdi,rax
  419314:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419319:	mov    DWORD PTR [rbp-0x4],eax
  41931c:	cmp    DWORD PTR [rbp-0x4],0x0
  419320:	je     41932a <_start@@Base+0x1309a>
  419322:	mov    eax,DWORD PTR [rbp-0x4]
  419325:	jmp    4196a1 <_start@@Base+0x13411>
  41932a:	mov    rax,QWORD PTR [rbp-0x18]
  41932e:	lea    r9,[rip+0xfffffffffffffd1e]        # 419053 <_start@@Base+0x12dc3>
  419335:	mov    r8d,0x1
  41933b:	mov    ecx,0x0
  419340:	mov    edx,0x0
  419345:	mov    esi,0xd
  41934a:	mov    rdi,rax
  41934d:	call   422f43 <flatcc_verify_table_as_nested_root@@Base>
  419352:	mov    DWORD PTR [rbp-0x4],eax
  419355:	cmp    DWORD PTR [rbp-0x4],0x0
  419359:	je     419363 <_start@@Base+0x130d3>
  41935b:	mov    eax,DWORD PTR [rbp-0x4]
  41935e:	jmp    4196a1 <_start@@Base+0x13411>
  419363:	mov    rax,QWORD PTR [rbp-0x18]
  419367:	lea    rcx,[rip+0xfffffffffffff814]        # 418b82 <_start@@Base+0x128f2>
  41936e:	mov    edx,0x0
  419373:	mov    esi,0xe
  419378:	mov    rdi,rax
  41937b:	call   422847 <flatcc_verify_table_field@@Base>
  419380:	mov    DWORD PTR [rbp-0x4],eax
  419383:	cmp    DWORD PTR [rbp-0x4],0x0
  419387:	je     419391 <_start@@Base+0x13101>
  419389:	mov    eax,DWORD PTR [rbp-0x4]
  41938c:	jmp    4196a1 <_start@@Base+0x13411>
  419391:	mov    rax,QWORD PTR [rbp-0x18]
  419395:	mov    ecx,0x1
  41939a:	mov    edx,0x1
  41939f:	mov    esi,0xf
  4193a4:	mov    rdi,rax
  4193a7:	call   4225ce <flatcc_verify_field@@Base>
  4193ac:	mov    DWORD PTR [rbp-0x4],eax
  4193af:	cmp    DWORD PTR [rbp-0x4],0x0
  4193b3:	je     4193bd <_start@@Base+0x1312d>
  4193b5:	mov    eax,DWORD PTR [rbp-0x4]
  4193b8:	jmp    4196a1 <_start@@Base+0x13411>
  4193bd:	mov    rax,QWORD PTR [rbp-0x18]
  4193c1:	mov    ecx,0x4
  4193c6:	mov    edx,0x4
  4193cb:	mov    esi,0x10
  4193d0:	mov    rdi,rax
  4193d3:	call   4225ce <flatcc_verify_field@@Base>
  4193d8:	mov    DWORD PTR [rbp-0x4],eax
  4193db:	cmp    DWORD PTR [rbp-0x4],0x0
  4193df:	je     4193e9 <_start@@Base+0x13159>
  4193e1:	mov    eax,DWORD PTR [rbp-0x4]
  4193e4:	jmp    4196a1 <_start@@Base+0x13411>
  4193e9:	mov    rax,QWORD PTR [rbp-0x18]
  4193ed:	mov    ecx,0x4
  4193f2:	mov    edx,0x4
  4193f7:	mov    esi,0x11
  4193fc:	mov    rdi,rax
  4193ff:	call   4225ce <flatcc_verify_field@@Base>
  419404:	mov    DWORD PTR [rbp-0x4],eax
  419407:	cmp    DWORD PTR [rbp-0x4],0x0
  41940b:	je     419415 <_start@@Base+0x13185>
  41940d:	mov    eax,DWORD PTR [rbp-0x4]
  419410:	jmp    4196a1 <_start@@Base+0x13411>
  419415:	mov    rax,QWORD PTR [rbp-0x18]
  419419:	mov    ecx,0x8
  41941e:	mov    edx,0x8
  419423:	mov    esi,0x12
  419428:	mov    rdi,rax
  41942b:	call   4225ce <flatcc_verify_field@@Base>
  419430:	mov    DWORD PTR [rbp-0x4],eax
  419433:	cmp    DWORD PTR [rbp-0x4],0x0
  419437:	je     419441 <_start@@Base+0x131b1>
  419439:	mov    eax,DWORD PTR [rbp-0x4]
  41943c:	jmp    4196a1 <_start@@Base+0x13411>
  419441:	mov    rax,QWORD PTR [rbp-0x18]
  419445:	mov    ecx,0x8
  41944a:	mov    edx,0x8
  41944f:	mov    esi,0x13
  419454:	mov    rdi,rax
  419457:	call   4225ce <flatcc_verify_field@@Base>
  41945c:	mov    DWORD PTR [rbp-0x4],eax
  41945f:	cmp    DWORD PTR [rbp-0x4],0x0
  419463:	je     41946d <_start@@Base+0x131dd>
  419465:	mov    eax,DWORD PTR [rbp-0x4]
  419468:	jmp    4196a1 <_start@@Base+0x13411>
  41946d:	mov    rax,QWORD PTR [rbp-0x18]
  419471:	mov    ecx,0x4
  419476:	mov    edx,0x4
  41947b:	mov    esi,0x14
  419480:	mov    rdi,rax
  419483:	call   4225ce <flatcc_verify_field@@Base>
  419488:	mov    DWORD PTR [rbp-0x4],eax
  41948b:	cmp    DWORD PTR [rbp-0x4],0x0
  41948f:	je     419499 <_start@@Base+0x13209>
  419491:	mov    eax,DWORD PTR [rbp-0x4]
  419494:	jmp    4196a1 <_start@@Base+0x13411>
  419499:	mov    rax,QWORD PTR [rbp-0x18]
  41949d:	mov    ecx,0x4
  4194a2:	mov    edx,0x4
  4194a7:	mov    esi,0x15
  4194ac:	mov    rdi,rax
  4194af:	call   4225ce <flatcc_verify_field@@Base>
  4194b4:	mov    DWORD PTR [rbp-0x4],eax
  4194b7:	cmp    DWORD PTR [rbp-0x4],0x0
  4194bb:	je     4194c5 <_start@@Base+0x13235>
  4194bd:	mov    eax,DWORD PTR [rbp-0x4]
  4194c0:	jmp    4196a1 <_start@@Base+0x13411>
  4194c5:	mov    rax,QWORD PTR [rbp-0x18]
  4194c9:	mov    ecx,0x8
  4194ce:	mov    edx,0x8
  4194d3:	mov    esi,0x16
  4194d8:	mov    rdi,rax
  4194db:	call   4225ce <flatcc_verify_field@@Base>
  4194e0:	mov    DWORD PTR [rbp-0x4],eax
  4194e3:	cmp    DWORD PTR [rbp-0x4],0x0
  4194e7:	je     4194f1 <_start@@Base+0x13261>
  4194e9:	mov    eax,DWORD PTR [rbp-0x4]
  4194ec:	jmp    4196a1 <_start@@Base+0x13411>
  4194f1:	mov    rax,QWORD PTR [rbp-0x18]
  4194f5:	mov    ecx,0x8
  4194fa:	mov    edx,0x8
  4194ff:	mov    esi,0x17
  419504:	mov    rdi,rax
  419507:	call   4225ce <flatcc_verify_field@@Base>
  41950c:	mov    DWORD PTR [rbp-0x4],eax
  41950f:	cmp    DWORD PTR [rbp-0x4],0x0
  419513:	je     41951d <_start@@Base+0x1328d>
  419515:	mov    eax,DWORD PTR [rbp-0x4]
  419518:	jmp    4196a1 <_start@@Base+0x13411>
  41951d:	mov    rax,QWORD PTR [rbp-0x18]
  419521:	mov    ecx,0x4
  419526:	mov    edx,0x4
  41952b:	mov    esi,0x19
  419530:	mov    rdi,rax
  419533:	call   4225ce <flatcc_verify_field@@Base>
  419538:	mov    DWORD PTR [rbp-0x4],eax
  41953b:	cmp    DWORD PTR [rbp-0x4],0x0
  41953f:	je     419549 <_start@@Base+0x132b9>
  419541:	mov    eax,DWORD PTR [rbp-0x4]
  419544:	jmp    4196a1 <_start@@Base+0x13411>
  419549:	mov    rax,QWORD PTR [rbp-0x18]
  41954d:	mov    ecx,0x4
  419552:	mov    edx,0x4
  419557:	mov    esi,0x1a
  41955c:	mov    rdi,rax
  41955f:	call   4225ce <flatcc_verify_field@@Base>
  419564:	mov    DWORD PTR [rbp-0x4],eax
  419567:	cmp    DWORD PTR [rbp-0x4],0x0
  41956b:	je     419575 <_start@@Base+0x132e5>
  41956d:	mov    eax,DWORD PTR [rbp-0x4]
  419570:	jmp    4196a1 <_start@@Base+0x13411>
  419575:	mov    rax,QWORD PTR [rbp-0x18]
  419579:	mov    ecx,0x4
  41957e:	mov    edx,0x4
  419583:	mov    esi,0x1b
  419588:	mov    rdi,rax
  41958b:	call   4225ce <flatcc_verify_field@@Base>
  419590:	mov    DWORD PTR [rbp-0x4],eax
  419593:	cmp    DWORD PTR [rbp-0x4],0x0
  419597:	je     4195a1 <_start@@Base+0x13311>
  419599:	mov    eax,DWORD PTR [rbp-0x4]
  41959c:	jmp    4196a1 <_start@@Base+0x13411>
  4195a1:	mov    rax,QWORD PTR [rbp-0x18]
  4195a5:	mov    r9d,0xffffffff
  4195ab:	mov    r8d,0x1
  4195b1:	mov    ecx,0x1
  4195b6:	mov    edx,0x0
  4195bb:	mov    esi,0x1e
  4195c0:	mov    rdi,rax
  4195c3:	call   4226d8 <flatcc_verify_vector_field@@Base>
  4195c8:	mov    DWORD PTR [rbp-0x4],eax
  4195cb:	cmp    DWORD PTR [rbp-0x4],0x0
  4195cf:	je     4195d9 <_start@@Base+0x13349>
  4195d1:	mov    eax,DWORD PTR [rbp-0x4]
  4195d4:	jmp    4196a1 <_start@@Base+0x13411>
  4195d9:	mov    rax,QWORD PTR [rbp-0x18]
  4195dd:	mov    r9d,0x1fffffff
  4195e3:	mov    r8d,0x8
  4195e9:	mov    ecx,0x8
  4195ee:	mov    edx,0x0
  4195f3:	mov    esi,0x20
  4195f8:	mov    rdi,rax
  4195fb:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419600:	mov    DWORD PTR [rbp-0x4],eax
  419603:	cmp    DWORD PTR [rbp-0x4],0x0
  419607:	je     419611 <_start@@Base+0x13381>
  419609:	mov    eax,DWORD PTR [rbp-0x4]
  41960c:	jmp    4196a1 <_start@@Base+0x13411>
  419611:	mov    rax,QWORD PTR [rbp-0x18]
  419615:	mov    r9d,0x1fffffff
  41961b:	mov    r8d,0x8
  419621:	mov    ecx,0x8
  419626:	mov    edx,0x0
  41962b:	mov    esi,0x21
  419630:	mov    rdi,rax
  419633:	call   4226d8 <flatcc_verify_vector_field@@Base>
  419638:	mov    DWORD PTR [rbp-0x4],eax
  41963b:	cmp    DWORD PTR [rbp-0x4],0x0
  41963f:	je     419646 <_start@@Base+0x133b6>
  419641:	mov    eax,DWORD PTR [rbp-0x4]
  419644:	jmp    4196a1 <_start@@Base+0x13411>
  419646:	mov    rax,QWORD PTR [rbp-0x18]
  41964a:	lea    rcx,[rip+0xfffffffffffff2e4]        # 418935 <_start@@Base+0x126a5>
  419651:	mov    edx,0x0
  419656:	mov    esi,0x22
  41965b:	mov    rdi,rax
  41965e:	call   422847 <flatcc_verify_table_field@@Base>
  419663:	mov    DWORD PTR [rbp-0x4],eax
  419666:	cmp    DWORD PTR [rbp-0x4],0x0
  41966a:	je     419671 <_start@@Base+0x133e1>
  41966c:	mov    eax,DWORD PTR [rbp-0x4]
  41966f:	jmp    4196a1 <_start@@Base+0x13411>
  419671:	mov    rax,QWORD PTR [rbp-0x18]
  419675:	lea    rcx,[rip+0xfffffffffffff920]        # 418f9c <_start@@Base+0x12d0c>
  41967c:	mov    edx,0x0
  419681:	mov    esi,0x23
  419686:	mov    rdi,rax
  419689:	call   422847 <flatcc_verify_table_field@@Base>
  41968e:	mov    DWORD PTR [rbp-0x4],eax
  419691:	cmp    DWORD PTR [rbp-0x4],0x0
  419695:	je     41969c <_start@@Base+0x1340c>
  419697:	mov    eax,DWORD PTR [rbp-0x4]
  41969a:	jmp    4196a1 <_start@@Base+0x13411>
  41969c:	mov    eax,0x0
  4196a1:	leave  
  4196a2:	ret    
  4196a3:	endbr64 
  4196a7:	push   rbp
  4196a8:	mov    rbp,rsp
  4196ab:	sub    rsp,0x20
  4196af:	mov    QWORD PTR [rbp-0x18],rdi
  4196b3:	mov    rax,QWORD PTR [rbp-0x18]
  4196b7:	mov    ecx,0x1
  4196bc:	mov    edx,0x1
  4196c1:	mov    esi,0x0
  4196c6:	mov    rdi,rax
  4196c9:	call   4225ce <flatcc_verify_field@@Base>
  4196ce:	mov    DWORD PTR [rbp-0x4],eax
  4196d1:	cmp    DWORD PTR [rbp-0x4],0x0
  4196d5:	je     4196df <_start@@Base+0x1344f>
  4196d7:	mov    eax,DWORD PTR [rbp-0x4]
  4196da:	jmp    4198d7 <_start@@Base+0x13647>
  4196df:	mov    rax,QWORD PTR [rbp-0x18]
  4196e3:	mov    ecx,0x1
  4196e8:	mov    edx,0x1
  4196ed:	mov    esi,0x1
  4196f2:	mov    rdi,rax
  4196f5:	call   4225ce <flatcc_verify_field@@Base>
  4196fa:	mov    DWORD PTR [rbp-0x4],eax
  4196fd:	cmp    DWORD PTR [rbp-0x4],0x0
  419701:	je     41970b <_start@@Base+0x1347b>
  419703:	mov    eax,DWORD PTR [rbp-0x4]
  419706:	jmp    4198d7 <_start@@Base+0x13647>
  41970b:	mov    rax,QWORD PTR [rbp-0x18]
  41970f:	mov    ecx,0x2
  419714:	mov    edx,0x2
  419719:	mov    esi,0x2
  41971e:	mov    rdi,rax
  419721:	call   4225ce <flatcc_verify_field@@Base>
  419726:	mov    DWORD PTR [rbp-0x4],eax
  419729:	cmp    DWORD PTR [rbp-0x4],0x0
  41972d:	je     419737 <_start@@Base+0x134a7>
  41972f:	mov    eax,DWORD PTR [rbp-0x4]
  419732:	jmp    4198d7 <_start@@Base+0x13647>
  419737:	mov    rax,QWORD PTR [rbp-0x18]
  41973b:	mov    ecx,0x2
  419740:	mov    edx,0x2
  419745:	mov    esi,0x3
  41974a:	mov    rdi,rax
  41974d:	call   4225ce <flatcc_verify_field@@Base>
  419752:	mov    DWORD PTR [rbp-0x4],eax
  419755:	cmp    DWORD PTR [rbp-0x4],0x0
  419759:	je     419763 <_start@@Base+0x134d3>
  41975b:	mov    eax,DWORD PTR [rbp-0x4]
  41975e:	jmp    4198d7 <_start@@Base+0x13647>
  419763:	mov    rax,QWORD PTR [rbp-0x18]
  419767:	mov    ecx,0x4
  41976c:	mov    edx,0x4
  419771:	mov    esi,0x4
  419776:	mov    rdi,rax
  419779:	call   4225ce <flatcc_verify_field@@Base>
  41977e:	mov    DWORD PTR [rbp-0x4],eax
  419781:	cmp    DWORD PTR [rbp-0x4],0x0
  419785:	je     41978f <_start@@Base+0x134ff>
  419787:	mov    eax,DWORD PTR [rbp-0x4]
  41978a:	jmp    4198d7 <_start@@Base+0x13647>
  41978f:	mov    rax,QWORD PTR [rbp-0x18]
  419793:	mov    ecx,0x4
  419798:	mov    edx,0x4
  41979d:	mov    esi,0x5
  4197a2:	mov    rdi,rax
  4197a5:	call   4225ce <flatcc_verify_field@@Base>
  4197aa:	mov    DWORD PTR [rbp-0x4],eax
  4197ad:	cmp    DWORD PTR [rbp-0x4],0x0
  4197b1:	je     4197bb <_start@@Base+0x1352b>
  4197b3:	mov    eax,DWORD PTR [rbp-0x4]
  4197b6:	jmp    4198d7 <_start@@Base+0x13647>
  4197bb:	mov    rax,QWORD PTR [rbp-0x18]
  4197bf:	mov    ecx,0x8
  4197c4:	mov    edx,0x8
  4197c9:	mov    esi,0x6
  4197ce:	mov    rdi,rax
  4197d1:	call   4225ce <flatcc_verify_field@@Base>
  4197d6:	mov    DWORD PTR [rbp-0x4],eax
  4197d9:	cmp    DWORD PTR [rbp-0x4],0x0
  4197dd:	je     4197e7 <_start@@Base+0x13557>
  4197df:	mov    eax,DWORD PTR [rbp-0x4]
  4197e2:	jmp    4198d7 <_start@@Base+0x13647>
  4197e7:	mov    rax,QWORD PTR [rbp-0x18]
  4197eb:	mov    ecx,0x8
  4197f0:	mov    edx,0x8
  4197f5:	mov    esi,0x7
  4197fa:	mov    rdi,rax
  4197fd:	call   4225ce <flatcc_verify_field@@Base>
  419802:	mov    DWORD PTR [rbp-0x4],eax
  419805:	cmp    DWORD PTR [rbp-0x4],0x0
  419809:	je     419813 <_start@@Base+0x13583>
  41980b:	mov    eax,DWORD PTR [rbp-0x4]
  41980e:	jmp    4198d7 <_start@@Base+0x13647>
  419813:	mov    rax,QWORD PTR [rbp-0x18]
  419817:	mov    ecx,0x4
  41981c:	mov    edx,0x4
  419821:	mov    esi,0x8
  419826:	mov    rdi,rax
  419829:	call   4225ce <flatcc_verify_field@@Base>
  41982e:	mov    DWORD PTR [rbp-0x4],eax
  419831:	cmp    DWORD PTR [rbp-0x4],0x0
  419835:	je     41983f <_start@@Base+0x135af>
  419837:	mov    eax,DWORD PTR [rbp-0x4]
  41983a:	jmp    4198d7 <_start@@Base+0x13647>
  41983f:	mov    rax,QWORD PTR [rbp-0x18]
  419843:	mov    ecx,0x8
  419848:	mov    edx,0x8
  41984d:	mov    esi,0x9
  419852:	mov    rdi,rax
  419855:	call   4225ce <flatcc_verify_field@@Base>
  41985a:	mov    DWORD PTR [rbp-0x4],eax
  41985d:	cmp    DWORD PTR [rbp-0x4],0x0
  419861:	je     419868 <_start@@Base+0x135d8>
  419863:	mov    eax,DWORD PTR [rbp-0x4]
  419866:	jmp    4198d7 <_start@@Base+0x13647>
  419868:	mov    rax,QWORD PTR [rbp-0x18]
  41986c:	mov    r9d,0xffffffff
  419872:	mov    r8d,0x1
  419878:	mov    ecx,0x1
  41987d:	mov    edx,0x0
  419882:	mov    esi,0xa
  419887:	mov    rdi,rax
  41988a:	call   4226d8 <flatcc_verify_vector_field@@Base>
  41988f:	mov    DWORD PTR [rbp-0x4],eax
  419892:	cmp    DWORD PTR [rbp-0x4],0x0
  419896:	je     41989d <_start@@Base+0x1360d>
  419898:	mov    eax,DWORD PTR [rbp-0x4]
  41989b:	jmp    4198d7 <_start@@Base+0x13647>
  41989d:	mov    rax,QWORD PTR [rbp-0x18]
  4198a1:	mov    r9d,0x1fffffff
  4198a7:	mov    r8d,0x8
  4198ad:	mov    ecx,0x8
  4198b2:	mov    edx,0x0
  4198b7:	mov    esi,0xb
  4198bc:	mov    rdi,rax
  4198bf:	call   4226d8 <flatcc_verify_vector_field@@Base>
  4198c4:	mov    DWORD PTR [rbp-0x4],eax
  4198c7:	cmp    DWORD PTR [rbp-0x4],0x0
  4198cb:	je     4198d2 <_start@@Base+0x13642>
  4198cd:	mov    eax,DWORD PTR [rbp-0x4]
  4198d0:	jmp    4198d7 <_start@@Base+0x13647>
  4198d2:	mov    eax,0x0
  4198d7:	leave  
  4198d8:	ret    
  4198d9:	endbr64 
  4198dd:	push   rbp
  4198de:	mov    rbp,rsp
  4198e1:	sub    rsp,0x20
  4198e5:	mov    QWORD PTR [rbp-0x18],rdi
  4198e9:	mov    rax,QWORD PTR [rbp-0x18]
  4198ed:	mov    ecx,0x4
  4198f2:	mov    edx,0x4
  4198f7:	mov    esi,0x0
  4198fc:	mov    rdi,rax
  4198ff:	call   4225ce <flatcc_verify_field@@Base>
  419904:	mov    DWORD PTR [rbp-0x4],eax
  419907:	cmp    DWORD PTR [rbp-0x4],0x0
  41990b:	je     419912 <_start@@Base+0x13682>
  41990d:	mov    eax,DWORD PTR [rbp-0x4]
  419910:	jmp    419917 <_start@@Base+0x13687>
  419912:	mov    eax,0x0
  419917:	leave  
  419918:	ret    
  419919:	endbr64 
  41991d:	push   rbp
  41991e:	mov    rbp,rsp
  419921:	sub    rsp,0x20
  419925:	mov    QWORD PTR [rbp-0x18],rdi
  419929:	mov    rax,QWORD PTR [rbp-0x18]
  41992d:	lea    rcx,[rip+0xffffffffffffef3a]        # 41886e <_start@@Base+0x125de>
  419934:	mov    edx,0x0
  419939:	mov    esi,0x1
  41993e:	mov    rdi,rax
  419941:	call   42308c <flatcc_verify_union_field@@Base>
  419946:	mov    DWORD PTR [rbp-0x4],eax
  419949:	cmp    DWORD PTR [rbp-0x4],0x0
  41994d:	je     419957 <_start@@Base+0x136c7>
  41994f:	mov    eax,DWORD PTR [rbp-0x4]
  419952:	jmp    419a0b <_start@@Base+0x1377b>
  419957:	mov    rax,QWORD PTR [rbp-0x18]
  41995b:	lea    rcx,[rip+0xffffffffffffef0c]        # 41886e <_start@@Base+0x125de>
  419962:	mov    edx,0x0
  419967:	mov    esi,0x3
  41996c:	mov    rdi,rax
  41996f:	call   42308c <flatcc_verify_union_field@@Base>
  419974:	mov    DWORD PTR [rbp-0x4],eax
  419977:	cmp    DWORD PTR [rbp-0x4],0x0
  41997b:	je     419985 <_start@@Base+0x136f5>
  41997d:	mov    eax,DWORD PTR [rbp-0x4]
  419980:	jmp    419a0b <_start@@Base+0x1377b>
  419985:	mov    rax,QWORD PTR [rbp-0x18]
  419989:	lea    rcx,[rip+0xffffffffffffeede]        # 41886e <_start@@Base+0x125de>
  419990:	mov    edx,0x0
  419995:	mov    esi,0x5
  41999a:	mov    rdi,rax
  41999d:	call   42308c <flatcc_verify_union_field@@Base>
  4199a2:	mov    DWORD PTR [rbp-0x4],eax
  4199a5:	cmp    DWORD PTR [rbp-0x4],0x0
  4199a9:	je     4199b0 <_start@@Base+0x13720>
  4199ab:	mov    eax,DWORD PTR [rbp-0x4]
  4199ae:	jmp    419a0b <_start@@Base+0x1377b>
  4199b0:	mov    rax,QWORD PTR [rbp-0x18]
  4199b4:	lea    rcx,[rip+0xffffffffffffeeb3]        # 41886e <_start@@Base+0x125de>
  4199bb:	mov    edx,0x0
  4199c0:	mov    esi,0x7
  4199c5:	mov    rdi,rax
  4199c8:	call   42308c <flatcc_verify_union_field@@Base>
  4199cd:	mov    DWORD PTR [rbp-0x4],eax
  4199d0:	cmp    DWORD PTR [rbp-0x4],0x0
  4199d4:	je     4199db <_start@@Base+0x1374b>
  4199d6:	mov    eax,DWORD PTR [rbp-0x4]
  4199d9:	jmp    419a0b <_start@@Base+0x1377b>
  4199db:	mov    rax,QWORD PTR [rbp-0x18]
  4199df:	lea    rcx,[rip+0xffffffffffffee88]        # 41886e <_start@@Base+0x125de>
  4199e6:	mov    edx,0x0
  4199eb:	mov    esi,0x9
  4199f0:	mov    rdi,rax
  4199f3:	call   423294 <flatcc_verify_union_vector_field@@Base>
  4199f8:	mov    DWORD PTR [rbp-0x4],eax
  4199fb:	cmp    DWORD PTR [rbp-0x4],0x0
  4199ff:	je     419a06 <_start@@Base+0x13776>
  419a01:	mov    eax,DWORD PTR [rbp-0x4]
  419a04:	jmp    419a0b <_start@@Base+0x1377b>
  419a06:	mov    eax,0x0
  419a0b:	leave  
  419a0c:	ret    
  419a0d:	endbr64 
  419a11:	push   rbp
  419a12:	mov    rbp,rsp
  419a15:	sub    rsp,0x50
  419a19:	mov    QWORD PTR [rbp-0x38],rdi
  419a1d:	mov    QWORD PTR [rbp-0x40],rsi
  419a21:	mov    QWORD PTR [rbp-0x48],rdx
  419a25:	mov    QWORD PTR [rbp-0x50],rcx
  419a29:	mov    rax,QWORD PTR fs:0x28
  419a32:	mov    QWORD PTR [rbp-0x8],rax
  419a36:	xor    eax,eax
  419a38:	mov    rax,QWORD PTR [rbp-0x40]
  419a3c:	mov    QWORD PTR [rbp-0x28],rax
  419a40:	cmp    QWORD PTR [rbp-0x38],0x0
  419a45:	je     419a63 <_start@@Base+0x137d3>
  419a47:	mov    rdx,QWORD PTR [rbp-0x38]
  419a4b:	mov    rax,QWORD PTR [rbp-0x50]
  419a4f:	lea    rsi,[rip+0x1ca7a]        # 4364d0 <_IO_stdin_used@@Base+0x4d0>
  419a56:	mov    rdi,rax
  419a59:	mov    eax,0x0
  419a5e:	call   406210 <fprintf@plt>
  419a63:	mov    DWORD PTR [rbp-0x2c],0x0
  419a6a:	jmp    419b57 <_start@@Base+0x138c7>
  419a6f:	mov    eax,DWORD PTR [rbp-0x2c]
  419a72:	and    eax,0xf
  419a75:	test   eax,eax
  419a77:	jne    419ab8 <_start@@Base+0x13828>
  419a79:	cmp    DWORD PTR [rbp-0x2c],0x0
  419a7d:	je     419a9b <_start@@Base+0x1380b>
  419a7f:	lea    rdx,[rbp-0x20]
  419a83:	mov    rax,QWORD PTR [rbp-0x50]
  419a87:	lea    rsi,[rip+0x1ca47]        # 4364d5 <_IO_stdin_used@@Base+0x4d5>
  419a8e:	mov    rdi,rax
  419a91:	mov    eax,0x0
  419a96:	call   406210 <fprintf@plt>
  419a9b:	mov    edx,DWORD PTR [rbp-0x2c]
  419a9e:	mov    rax,QWORD PTR [rbp-0x50]
  419aa2:	lea    rsi,[rip+0x1ca32]        # 4364db <_IO_stdin_used@@Base+0x4db>
  419aa9:	mov    rdi,rax
  419aac:	mov    eax,0x0
  419ab1:	call   406210 <fprintf@plt>
  419ab6:	jmp    419ad3 <_start@@Base+0x13843>
  419ab8:	mov    eax,DWORD PTR [rbp-0x2c]
  419abb:	and    eax,0x7
  419abe:	test   eax,eax
  419ac0:	jne    419ad3 <_start@@Base+0x13843>
  419ac2:	mov    rax,QWORD PTR [rbp-0x50]
  419ac6:	mov    rsi,rax
  419ac9:	mov    edi,0x20
  419ace:	call   4061d0 <fputc@plt>
  419ad3:	mov    edx,DWORD PTR [rbp-0x2c]
  419ad6:	mov    rax,QWORD PTR [rbp-0x28]
  419ada:	add    rax,rdx
  419add:	movzx  eax,BYTE PTR [rax]
  419ae0:	movzx  edx,al
  419ae3:	mov    rax,QWORD PTR [rbp-0x50]
  419ae7:	lea    rsi,[rip+0x1c9f5]        # 4364e3 <_IO_stdin_used@@Base+0x4e3>
  419aee:	mov    rdi,rax
  419af1:	mov    eax,0x0
  419af6:	call   406210 <fprintf@plt>
  419afb:	mov    edx,DWORD PTR [rbp-0x2c]
  419afe:	mov    rax,QWORD PTR [rbp-0x28]
  419b02:	add    rax,rdx
  419b05:	movzx  eax,BYTE PTR [rax]
  419b08:	cmp    al,0x1f
  419b0a:	jbe    419b1d <_start@@Base+0x1388d>
  419b0c:	mov    edx,DWORD PTR [rbp-0x2c]
  419b0f:	mov    rax,QWORD PTR [rbp-0x28]
  419b13:	add    rax,rdx
  419b16:	movzx  eax,BYTE PTR [rax]
  419b19:	cmp    al,0x7e
  419b1b:	jbe    419b2c <_start@@Base+0x1389c>
  419b1d:	mov    eax,DWORD PTR [rbp-0x2c]
  419b20:	and    eax,0xf
  419b23:	mov    eax,eax
  419b25:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  419b2a:	jmp    419b45 <_start@@Base+0x138b5>
  419b2c:	mov    edx,DWORD PTR [rbp-0x2c]
  419b2f:	mov    rax,QWORD PTR [rbp-0x28]
  419b33:	add    rax,rdx
  419b36:	mov    edx,DWORD PTR [rbp-0x2c]
  419b39:	and    edx,0xf
  419b3c:	movzx  eax,BYTE PTR [rax]
  419b3f:	mov    edx,edx
  419b41:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  419b45:	mov    eax,DWORD PTR [rbp-0x2c]
  419b48:	and    eax,0xf
  419b4b:	inc    eax
  419b4d:	mov    eax,eax
  419b4f:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  419b54:	inc    DWORD PTR [rbp-0x2c]
  419b57:	mov    rax,QWORD PTR [rbp-0x48]
  419b5b:	cmp    DWORD PTR [rbp-0x2c],eax
  419b5e:	jb     419a6f <_start@@Base+0x137df>
  419b64:	jmp    419b86 <_start@@Base+0x138f6>
  419b66:	mov    rax,QWORD PTR [rbp-0x50]
  419b6a:	mov    rcx,rax
  419b6d:	mov    edx,0x3
  419b72:	mov    esi,0x1
  419b77:	lea    rdi,[rip+0x1c96b]        # 4364e9 <_IO_stdin_used@@Base+0x4e9>
  419b7e:	call   406270 <fwrite@plt>
  419b83:	inc    DWORD PTR [rbp-0x2c]
  419b86:	mov    eax,DWORD PTR [rbp-0x2c]
  419b89:	and    eax,0xf
  419b8c:	test   eax,eax
  419b8e:	jne    419b66 <_start@@Base+0x138d6>
  419b90:	lea    rdx,[rbp-0x20]
  419b94:	mov    rax,QWORD PTR [rbp-0x50]
  419b98:	lea    rsi,[rip+0x1c936]        # 4364d5 <_IO_stdin_used@@Base+0x4d5>
  419b9f:	mov    rdi,rax
  419ba2:	mov    eax,0x0
  419ba7:	call   406210 <fprintf@plt>
  419bac:	nop
  419bad:	mov    rax,QWORD PTR [rbp-0x8]
  419bb1:	xor    rax,QWORD PTR fs:0x28
  419bba:	je     419bc1 <_start@@Base+0x13931>
  419bbc:	call   4061a0 <__stack_chk_fail@plt>
  419bc1:	leave  
  419bc2:	ret    

0000000000419bc3 <test_json@@Base>:
  419bc3:	endbr64 
  419bc7:	push   rbp
  419bc8:	mov    rbp,rsp
  419bcb:	push   r12
  419bcd:	push   rbx
  419bce:	sub    rsp,0x290
  419bd5:	mov    QWORD PTR [rbp-0x278],rdi
  419bdc:	mov    QWORD PTR [rbp-0x280],rsi
  419be3:	mov    QWORD PTR [rbp-0x288],rdx
  419bea:	mov    DWORD PTR [rbp-0x28c],ecx
  419bf0:	mov    DWORD PTR [rbp-0x290],r8d
  419bf7:	mov    DWORD PTR [rbp-0x294],r9d
  419bfe:	mov    rax,QWORD PTR fs:0x28
  419c07:	mov    QWORD PTR [rbp-0x18],rax
  419c0b:	xor    eax,eax
  419c0d:	mov    DWORD PTR [rbp-0x264],0xffffffff
  419c17:	mov    QWORD PTR [rbp-0x248],0x0
  419c22:	mov    QWORD PTR [rbp-0x240],0x0
  419c2d:	lea    rax,[rbp-0x1a0]
  419c34:	mov    QWORD PTR [rbp-0x238],rax
  419c3b:	mov    rax,QWORD PTR [rbp-0x238]
  419c42:	mov    rdi,rax
  419c45:	call   41bf64 <flatcc_builder_init@@Base>
  419c4a:	lea    rax,[rbp-0x1f0]
  419c51:	mov    esi,0x0
  419c56:	mov    rdi,rax
  419c59:	call   4359cc <flatcc_json_printer_init_dynamic_buffer@@Base>
  419c5e:	mov    edx,DWORD PTR [rbp-0x294]
  419c64:	lea    rax,[rbp-0x1f0]
  419c6b:	mov    esi,edx
  419c6d:	mov    rdi,rax
  419c70:	call   416c2d <_start@@Base+0x1099d>
  419c75:	mov    rax,QWORD PTR [rbp-0x278]
  419c7c:	mov    rbx,QWORD PTR [rax+0x8]
  419c80:	mov    rax,QWORD PTR [rbp-0x278]
  419c87:	mov    r12,QWORD PTR [rax]
  419c8a:	mov    rax,QWORD PTR [rbp-0x280]
  419c91:	mov    rdi,rax
  419c94:	call   406190 <strlen@plt>
  419c99:	mov    rdi,rax
  419c9c:	mov    ecx,DWORD PTR [rbp-0x290]
  419ca2:	mov    rdx,QWORD PTR [rbp-0x280]
  419ca9:	lea    rsi,[rbp-0x230]
  419cb0:	mov    rax,QWORD PTR [rbp-0x238]
  419cb7:	sub    rsp,0x8
  419cbb:	push   rbx
  419cbc:	mov    r9,r12
  419cbf:	mov    r8d,ecx
  419cc2:	mov    rcx,rdi
  419cc5:	mov    rdi,rax
  419cc8:	call   429bfc <flatcc_json_parser_table_as_root@@Base>
  419ccd:	add    rsp,0x10
  419cd1:	mov    DWORD PTR [rbp-0x25c],eax
  419cd7:	mov    eax,DWORD PTR [rbp-0x25c]
  419cdd:	cmp    eax,DWORD PTR [rbp-0x28c]
  419ce3:	je     419ea4 <test_json@@Base+0x2e1>
  419ce9:	cmp    DWORD PTR [rbp-0x28c],0x0
  419cf0:	je     419dea <test_json@@Base+0x227>
  419cf6:	cmp    DWORD PTR [rbp-0x25c],0x0
  419cfd:	je     419d8f <test_json@@Base+0x1cc>
  419d03:	mov    eax,DWORD PTR [rbp-0x25c]
  419d09:	mov    edi,eax
  419d0b:	call   42709a <flatcc_json_parser_error_string@@Base>
  419d10:	mov    rdx,rax
  419d13:	mov    rax,QWORD PTR [rip+0x2b2ce]        # 444fe8 <stderr@GLIBC_2.2.5>
  419d1a:	mov    rax,QWORD PTR [rax]
  419d1d:	mov    rcx,rdx
  419d20:	mov    edx,DWORD PTR [rbp+0x10]
  419d23:	lea    rsi,[rip+0x1c7ce]        # 4364f8 <_IO_stdin_used@@Base+0x4f8>
  419d2a:	mov    rdi,rax
  419d2d:	mov    eax,0x0
  419d32:	call   406210 <fprintf@plt>
  419d37:	mov    eax,DWORD PTR [rbp-0x28c]
  419d3d:	mov    edi,eax
  419d3f:	call   42709a <flatcc_json_parser_error_string@@Base>
  419d44:	mov    rdx,rax
  419d47:	mov    rax,QWORD PTR [rip+0x2b29a]        # 444fe8 <stderr@GLIBC_2.2.5>
  419d4e:	mov    rax,QWORD PTR [rax]
  419d51:	lea    rsi,[rip+0x1c7c8]        # 436520 <_IO_stdin_used@@Base+0x520>
  419d58:	mov    rdi,rax
  419d5b:	mov    eax,0x0
  419d60:	call   406210 <fprintf@plt>
  419d65:	mov    rax,QWORD PTR [rip+0x2b27c]        # 444fe8 <stderr@GLIBC_2.2.5>
  419d6c:	mov    rax,QWORD PTR [rax]
  419d6f:	mov    rdx,QWORD PTR [rbp-0x280]
  419d76:	lea    rsi,[rip+0x1c7c2]        # 43653f <_IO_stdin_used@@Base+0x53f>
  419d7d:	mov    rdi,rax
  419d80:	mov    eax,0x0
  419d85:	call   406210 <fprintf@plt>
  419d8a:	jmp    419e43 <test_json@@Base+0x280>
  419d8f:	mov    eax,DWORD PTR [rbp-0x28c]
  419d95:	mov    edi,eax
  419d97:	call   42709a <flatcc_json_parser_error_string@@Base>
  419d9c:	mov    rdx,rax
  419d9f:	mov    rax,QWORD PTR [rip+0x2b242]        # 444fe8 <stderr@GLIBC_2.2.5>
  419da6:	mov    rax,QWORD PTR [rax]
  419da9:	mov    rcx,rdx
  419dac:	mov    edx,DWORD PTR [rbp+0x10]
  419daf:	lea    rsi,[rip+0x1c792]        # 436548 <_IO_stdin_used@@Base+0x548>
  419db6:	mov    rdi,rax
  419db9:	mov    eax,0x0
  419dbe:	call   406210 <fprintf@plt>
  419dc3:	mov    rax,QWORD PTR [rip+0x2b21e]        # 444fe8 <stderr@GLIBC_2.2.5>
  419dca:	mov    rax,QWORD PTR [rax]
  419dcd:	mov    rdx,QWORD PTR [rbp-0x280]
  419dd4:	lea    rsi,[rip+0x1c764]        # 43653f <_IO_stdin_used@@Base+0x53f>
  419ddb:	mov    rdi,rax
  419dde:	mov    eax,0x0
  419de3:	call   406210 <fprintf@plt>
  419de8:	jmp    419e43 <test_json@@Base+0x280>
  419dea:	mov    eax,DWORD PTR [rbp-0x25c]
  419df0:	mov    edi,eax
  419df2:	call   42709a <flatcc_json_parser_error_string@@Base>
  419df7:	mov    rdx,rax
  419dfa:	mov    rax,QWORD PTR [rip+0x2b1e7]        # 444fe8 <stderr@GLIBC_2.2.5>
  419e01:	mov    rax,QWORD PTR [rax]
  419e04:	mov    rcx,rdx
  419e07:	mov    edx,DWORD PTR [rbp+0x10]
  419e0a:	lea    rsi,[rip+0x1c777]        # 436588 <_IO_stdin_used@@Base+0x588>
  419e11:	mov    rdi,rax
  419e14:	mov    eax,0x0
  419e19:	call   406210 <fprintf@plt>
  419e1e:	mov    rax,QWORD PTR [rip+0x2b1c3]        # 444fe8 <stderr@GLIBC_2.2.5>
  419e25:	mov    rax,QWORD PTR [rax]
  419e28:	mov    rdx,QWORD PTR [rbp-0x280]
  419e2f:	lea    rsi,[rip+0x1c709]        # 43653f <_IO_stdin_used@@Base+0x53f>
  419e36:	mov    rdi,rax
  419e39:	mov    eax,0x0
  419e3e:	call   406210 <fprintf@plt>
  419e43:	mov    DWORD PTR [rbp-0x260],0x0
  419e4d:	jmp    419e6c <test_json@@Base+0x2a9>
  419e4f:	mov    rax,QWORD PTR [rip+0x2b192]        # 444fe8 <stderr@GLIBC_2.2.5>
  419e56:	mov    rax,QWORD PTR [rax]
  419e59:	mov    rsi,rax
  419e5c:	mov    edi,0x20
  419e61:	call   4061d0 <fputc@plt>
  419e66:	inc    DWORD PTR [rbp-0x260]
  419e6c:	mov    eax,DWORD PTR [rbp-0x218]
  419e72:	dec    eax
  419e74:	cmp    DWORD PTR [rbp-0x260],eax
  419e7a:	jl     419e4f <test_json@@Base+0x28c>
  419e7c:	mov    rax,QWORD PTR [rip+0x2b165]        # 444fe8 <stderr@GLIBC_2.2.5>
  419e83:	mov    rax,QWORD PTR [rax]
  419e86:	mov    rcx,rax
  419e89:	mov    edx,0x2
  419e8e:	mov    esi,0x1
  419e93:	lea    rdi,[rip+0x1c70f]        # 4365a9 <_IO_stdin_used@@Base+0x5a9>
  419e9a:	call   406270 <fwrite@plt>
  419e9f:	jmp    41a0b4 <test_json@@Base+0x4f1>
  419ea4:	cmp    DWORD PTR [rbp-0x28c],0x0
  419eab:	je     419ebc <test_json@@Base+0x2f9>
  419ead:	mov    DWORD PTR [rbp-0x264],0x0
  419eb7:	jmp    41a070 <test_json@@Base+0x4ad>
  419ebc:	lea    rdx,[rbp-0x258]
  419ec3:	mov    rax,QWORD PTR [rbp-0x238]
  419eca:	mov    rsi,rdx
  419ecd:	mov    rdi,rax
  419ed0:	call   420aa0 <flatcc_builder_finalize_aligned_buffer@@Base>
  419ed5:	mov    QWORD PTR [rbp-0x248],rax
  419edc:	mov    rax,QWORD PTR [rbp-0x278]
  419ee3:	mov    rcx,QWORD PTR [rax+0x18]
  419ee7:	mov    rax,QWORD PTR [rbp-0x278]
  419eee:	mov    rdx,QWORD PTR [rax]
  419ef1:	mov    rsi,QWORD PTR [rbp-0x258]
  419ef8:	mov    rax,QWORD PTR [rbp-0x248]
  419eff:	mov    rdi,rax
  419f02:	call   422d3b <flatcc_verify_table_as_root@@Base>
  419f07:	mov    DWORD PTR [rbp-0x264],eax
  419f0d:	cmp    DWORD PTR [rbp-0x264],0x0
  419f14:	je     419f56 <test_json@@Base+0x393>
  419f16:	mov    eax,DWORD PTR [rbp-0x264]
  419f1c:	mov    edi,eax
  419f1e:	call   4217cd <flatcc_verify_error_string@@Base>
  419f23:	mov    rdx,rax
  419f26:	mov    rax,QWORD PTR [rip+0x2b0bb]        # 444fe8 <stderr@GLIBC_2.2.5>
  419f2d:	mov    rax,QWORD PTR [rax]
  419f30:	mov    r8,rdx
  419f33:	mov    ecx,DWORD PTR [rbp+0x10]
  419f36:	lea    rdx,[rip+0x1c673]        # 4365b0 <_IO_stdin_used@@Base+0x5b0>
  419f3d:	lea    rsi,[rip+0x1c6d4]        # 436618 <_IO_stdin_used@@Base+0x618>
  419f44:	mov    rdi,rax
  419f47:	mov    eax,0x0
  419f4c:	call   406210 <fprintf@plt>
  419f51:	jmp    41a0b4 <test_json@@Base+0x4f1>
  419f56:	mov    rax,QWORD PTR [rbp-0x278]
  419f5d:	mov    rdi,QWORD PTR [rax+0x10]
  419f61:	mov    rax,QWORD PTR [rbp-0x278]
  419f68:	mov    rcx,QWORD PTR [rax]
  419f6b:	mov    rdx,QWORD PTR [rbp-0x258]
  419f72:	mov    rsi,QWORD PTR [rbp-0x248]
  419f79:	lea    rax,[rbp-0x1f0]
  419f80:	mov    r8,rdi
  419f83:	mov    rdi,rax
  419f86:	call   4351b0 <flatcc_json_printer_table_as_root@@Base>
  419f8b:	lea    rdx,[rbp-0x250]
  419f92:	lea    rax,[rbp-0x1f0]
  419f99:	mov    rsi,rdx
  419f9c:	mov    rdi,rax
  419f9f:	call   435ab5 <flatcc_json_printer_get_buffer@@Base>
  419fa4:	mov    QWORD PTR [rbp-0x240],rax
  419fab:	cmp    QWORD PTR [rbp-0x240],0x0
  419fb3:	je     419fd6 <test_json@@Base+0x413>
  419fb5:	mov    rdx,QWORD PTR [rbp-0x240]
  419fbc:	mov    rax,QWORD PTR [rbp-0x288]
  419fc3:	mov    rsi,rdx
  419fc6:	mov    rdi,rax
  419fc9:	call   406200 <strcmp@plt>
  419fce:	test   eax,eax
  419fd0:	je     41a066 <test_json@@Base+0x4a3>
  419fd6:	mov    rax,QWORD PTR [rip+0x2b00b]        # 444fe8 <stderr@GLIBC_2.2.5>
  419fdd:	mov    rax,QWORD PTR [rax]
  419fe0:	mov    edx,DWORD PTR [rbp+0x10]
  419fe3:	lea    rsi,[rip+0x1c656]        # 436640 <_IO_stdin_used@@Base+0x640>
  419fea:	mov    rdi,rax
  419fed:	mov    eax,0x0
  419ff2:	call   406210 <fprintf@plt>
  419ff7:	mov    rax,QWORD PTR [rip+0x2afea]        # 444fe8 <stderr@GLIBC_2.2.5>
  419ffe:	mov    rax,QWORD PTR [rax]
  41a001:	mov    rdx,QWORD PTR [rbp-0x240]
  41a008:	lea    rsi,[rip+0x1c530]        # 43653f <_IO_stdin_used@@Base+0x53f>
  41a00f:	mov    rdi,rax
  41a012:	mov    eax,0x0
  41a017:	call   406210 <fprintf@plt>
  41a01c:	mov    rax,QWORD PTR [rip+0x2afc5]        # 444fe8 <stderr@GLIBC_2.2.5>
  41a023:	mov    rax,QWORD PTR [rax]
  41a026:	mov    rcx,rax
  41a029:	mov    edx,0xa
  41a02e:	mov    esi,0x1
  41a033:	lea    rdi,[rip+0x1c63b]        # 436675 <_IO_stdin_used@@Base+0x675>
  41a03a:	call   406270 <fwrite@plt>
  41a03f:	mov    rax,QWORD PTR [rip+0x2afa2]        # 444fe8 <stderr@GLIBC_2.2.5>
  41a046:	mov    rax,QWORD PTR [rax]
  41a049:	mov    rdx,QWORD PTR [rbp-0x288]
  41a050:	lea    rsi,[rip+0x1c4e8]        # 43653f <_IO_stdin_used@@Base+0x53f>
  41a057:	mov    rdi,rax
  41a05a:	mov    eax,0x0
  41a05f:	call   406210 <fprintf@plt>
  41a064:	jmp    41a0b4 <test_json@@Base+0x4f1>
  41a066:	mov    DWORD PTR [rbp-0x264],0x0
  41a070:	mov    rax,QWORD PTR [rbp-0x248]
  41a077:	mov    rdi,rax
  41a07a:	call   420ba2 <flatcc_builder_aligned_free@@Base>
  41a07f:	mov    rax,QWORD PTR [rbp-0x238]
  41a086:	mov    rdi,rax
  41a089:	call   41c1d3 <flatcc_builder_clear@@Base>
  41a08e:	lea    rax,[rbp-0x1f0]
  41a095:	mov    rdi,rax
  41a098:	call   435b55 <flatcc_json_printer_clear@@Base>
  41a09d:	mov    eax,DWORD PTR [rbp-0x264]
  41a0a3:	mov    rbx,QWORD PTR [rbp-0x18]
  41a0a7:	xor    rbx,QWORD PTR fs:0x28
  41a0b0:	je     41a0f9 <test_json@@Base+0x536>
  41a0b2:	jmp    41a0f4 <test_json@@Base+0x531>
  41a0b4:	cmp    QWORD PTR [rbp-0x248],0x0
  41a0bc:	je     41a0e5 <test_json@@Base+0x522>
  41a0be:	mov    rax,QWORD PTR [rip+0x2af23]        # 444fe8 <stderr@GLIBC_2.2.5>
  41a0c5:	mov    rcx,QWORD PTR [rax]
  41a0c8:	mov    rdx,QWORD PTR [rbp-0x258]
  41a0cf:	mov    rax,QWORD PTR [rbp-0x248]
  41a0d6:	mov    rsi,rax
  41a0d9:	lea    rdi,[rip+0x1c5a0]        # 436680 <_IO_stdin_used@@Base+0x680>
  41a0e0:	call   419a0d <_start@@Base+0x1377d>
  41a0e5:	mov    DWORD PTR [rbp-0x264],0xffffffff
  41a0ef:	jmp    41a070 <test_json@@Base+0x4ad>
  41a0f4:	call   4061a0 <__stack_chk_fail@plt>
  41a0f9:	lea    rsp,[rbp-0x10]
  41a0fd:	pop    rbx
  41a0fe:	pop    r12
  41a100:	pop    rbp
  41a101:	ret    

000000000041a102 <edge_case_tests@@Base>:
  41a102:	endbr64 
  41a106:	push   rbp
  41a107:	mov    rbp,rsp
  41a10a:	sub    rsp,0x10
  41a10e:	mov    DWORD PTR [rbp-0xc],0x0
  41a115:	lea    rax,[rip+0x2ac84]        # 444da0 <flatcc_builder_padding_base@@Base+0xbb40>
  41a11c:	mov    QWORD PTR [rbp-0x8],rax
  41a120:	mov    rax,QWORD PTR [rbp-0x8]
  41a124:	sub    rsp,0x8
  41a128:	push   0x9e
  41a12d:	mov    r9d,0x0
  41a133:	mov    r8d,0x0
  41a139:	mov    ecx,0x0
  41a13e:	lea    rdx,[rip+0x1c549]        # 43668e <_IO_stdin_used@@Base+0x68e>
  41a145:	lea    rsi,[rip+0x1c564]        # 4366b0 <_IO_stdin_used@@Base+0x6b0>
  41a14c:	mov    rdi,rax
  41a14f:	call   419bc3 <test_json@@Base>
  41a154:	add    rsp,0x10
  41a158:	or     DWORD PTR [rbp-0xc],eax
  41a15b:	mov    rax,QWORD PTR [rbp-0x8]
  41a15f:	sub    rsp,0x8
  41a163:	push   0xa8
  41a168:	mov    r9d,0x0
  41a16e:	mov    r8d,0x2
  41a174:	mov    ecx,0x0
  41a179:	lea    rdx,[rip+0x1c568]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  41a180:	lea    rsi,[rip+0x1c589]        # 436710 <_IO_stdin_used@@Base+0x710>
  41a187:	mov    rdi,rax
  41a18a:	call   419bc3 <test_json@@Base>
  41a18f:	add    rsp,0x10
  41a193:	or     DWORD PTR [rbp-0xc],eax
  41a196:	mov    rax,QWORD PTR [rbp-0x8]
  41a19a:	sub    rsp,0x8
  41a19e:	push   0xac
  41a1a3:	mov    r9d,0x2
  41a1a9:	mov    r8d,0x0
  41a1af:	mov    ecx,0x0
  41a1b4:	lea    rdx,[rip+0x1c576]        # 436731 <_IO_stdin_used@@Base+0x731>
  41a1bb:	lea    rsi,[rip+0x1c58e]        # 436750 <_IO_stdin_used@@Base+0x750>
  41a1c2:	mov    rdi,rax
  41a1c5:	call   419bc3 <test_json@@Base>
  41a1ca:	add    rsp,0x10
  41a1ce:	or     DWORD PTR [rbp-0xc],eax
  41a1d1:	mov    rax,QWORD PTR [rbp-0x8]
  41a1d5:	sub    rsp,0x8
  41a1d9:	push   0xb0
  41a1de:	mov    r9d,0x4
  41a1e4:	mov    r8d,0x2
  41a1ea:	mov    ecx,0x0
  41a1ef:	lea    rdx,[rip+0x1c581]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a1f6:	lea    rsi,[rip+0x1c513]        # 436710 <_IO_stdin_used@@Base+0x710>
  41a1fd:	mov    rdi,rax
  41a200:	call   419bc3 <test_json@@Base>
  41a205:	add    rsp,0x10
  41a209:	or     DWORD PTR [rbp-0xc],eax
  41a20c:	mov    rax,QWORD PTR [rbp-0x8]
  41a210:	sub    rsp,0x8
  41a214:	push   0xb4
  41a219:	mov    r9d,0x8
  41a21f:	mov    r8d,0x0
  41a225:	mov    ecx,0x0
  41a22a:	lea    rdx,[rip+0x1c55f]        # 436790 <_IO_stdin_used@@Base+0x790>
  41a231:	lea    rsi,[rip+0x1c670]        # 4368a8 <_IO_stdin_used@@Base+0x8a8>
  41a238:	mov    rdi,rax
  41a23b:	call   419bc3 <test_json@@Base>
  41a240:	add    rsp,0x10
  41a244:	or     DWORD PTR [rbp-0xc],eax
  41a247:	mov    rax,QWORD PTR [rbp-0x8]
  41a24b:	sub    rsp,0x8
  41a24f:	push   0xc3
  41a254:	mov    r9d,0x0
  41a25a:	mov    r8d,0x2
  41a260:	mov    ecx,0x0
  41a265:	lea    rdx,[rip+0x1c47c]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  41a26c:	lea    rsi,[rip+0x1c65d]        # 4368d0 <_IO_stdin_used@@Base+0x8d0>
  41a273:	mov    rdi,rax
  41a276:	call   419bc3 <test_json@@Base>
  41a27b:	add    rsp,0x10
  41a27f:	or     DWORD PTR [rbp-0xc],eax
  41a282:	mov    rax,QWORD PTR [rbp-0x8]
  41a286:	sub    rsp,0x8
  41a28a:	push   0xc7
  41a28f:	mov    r9d,0x0
  41a295:	mov    r8d,0x1
  41a29b:	mov    ecx,0x0
  41a2a0:	lea    rdx,[rip+0x1c64f]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  41a2a7:	lea    rsi,[rip+0x1c66a]        # 436918 <_IO_stdin_used@@Base+0x918>
  41a2ae:	mov    rdi,rax
  41a2b1:	call   419bc3 <test_json@@Base>
  41a2b6:	add    rsp,0x10
  41a2ba:	or     DWORD PTR [rbp-0xc],eax
  41a2bd:	mov    rax,QWORD PTR [rbp-0x8]
  41a2c1:	sub    rsp,0x8
  41a2c5:	push   0xcb
  41a2ca:	mov    r9d,0x1
  41a2d0:	mov    r8d,0x1
  41a2d6:	mov    ecx,0x0
  41a2db:	lea    rdx,[rip+0x1c668]        # 43694a <_IO_stdin_used@@Base+0x94a>
  41a2e2:	lea    rsi,[rip+0x1c62f]        # 436918 <_IO_stdin_used@@Base+0x918>
  41a2e9:	mov    rdi,rax
  41a2ec:	call   419bc3 <test_json@@Base>
  41a2f1:	add    rsp,0x10
  41a2f5:	or     DWORD PTR [rbp-0xc],eax
  41a2f8:	mov    rax,QWORD PTR [rbp-0x8]
  41a2fc:	sub    rsp,0x8
  41a300:	push   0xd1
  41a305:	mov    r9d,0x0
  41a30b:	mov    r8d,0x1
  41a311:	mov    ecx,0x0
  41a316:	lea    rdx,[rip+0x1c5d9]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  41a31d:	lea    rsi,[rip+0x1c644]        # 436968 <_IO_stdin_used@@Base+0x968>
  41a324:	mov    rdi,rax
  41a327:	call   419bc3 <test_json@@Base>
  41a32c:	add    rsp,0x10
  41a330:	or     DWORD PTR [rbp-0xc],eax
  41a333:	mov    eax,DWORD PTR [rbp-0xc]
  41a336:	leave  
  41a337:	ret    

000000000041a338 <error_case_tests@@Base>:
  41a338:	endbr64 
  41a33c:	push   rbp
  41a33d:	mov    rbp,rsp
  41a340:	sub    rsp,0x10
  41a344:	mov    DWORD PTR [rbp-0xc],0x0
  41a34b:	lea    rax,[rip+0x2aa4e]        # 444da0 <flatcc_builder_padding_base@@Base+0xbb40>
  41a352:	mov    QWORD PTR [rbp-0x8],rax
  41a356:	mov    rax,QWORD PTR [rbp-0x8]
  41a35a:	sub    rsp,0x8
  41a35e:	push   0x11d
  41a363:	mov    r9d,0x0
  41a369:	mov    r8d,0x0
  41a36f:	mov    ecx,0xd
  41a374:	mov    edx,0x0
  41a379:	lea    rsi,[rip+0x1c659]        # 4369d9 <_IO_stdin_used@@Base+0x9d9>
  41a380:	mov    rdi,rax
  41a383:	call   419bc3 <test_json@@Base>
  41a388:	add    rsp,0x10
  41a38c:	or     DWORD PTR [rbp-0xc],eax
  41a38f:	mov    rax,QWORD PTR [rbp-0x8]
  41a393:	sub    rsp,0x8
  41a397:	push   0x11f
  41a39c:	mov    r9d,0x0
  41a3a2:	mov    r8d,0x0
  41a3a8:	mov    ecx,0xd
  41a3ad:	mov    edx,0x0
  41a3b2:	lea    rsi,[rip+0x1c63f]        # 4369f8 <_IO_stdin_used@@Base+0x9f8>
  41a3b9:	mov    rdi,rax
  41a3bc:	call   419bc3 <test_json@@Base>
  41a3c1:	add    rsp,0x10
  41a3c5:	or     DWORD PTR [rbp-0xc],eax
  41a3c8:	mov    rax,QWORD PTR [rbp-0x8]
  41a3cc:	sub    rsp,0x8
  41a3d0:	push   0x121
  41a3d5:	mov    r9d,0x0
  41a3db:	mov    r8d,0x0
  41a3e1:	mov    ecx,0xd
  41a3e6:	mov    edx,0x0
  41a3eb:	lea    rsi,[rip+0x1c66e]        # 436a60 <_IO_stdin_used@@Base+0xa60>
  41a3f2:	mov    rdi,rax
  41a3f5:	call   419bc3 <test_json@@Base>
  41a3fa:	add    rsp,0x10
  41a3fe:	or     DWORD PTR [rbp-0xc],eax
  41a401:	mov    rax,QWORD PTR [rbp-0x8]
  41a405:	sub    rsp,0x8
  41a409:	push   0x123
  41a40e:	mov    r9d,0x0
  41a414:	mov    r8d,0x0
  41a41a:	mov    ecx,0xd
  41a41f:	mov    edx,0x0
  41a424:	lea    rsi,[rip+0x1c695]        # 436ac0 <_IO_stdin_used@@Base+0xac0>
  41a42b:	mov    rdi,rax
  41a42e:	call   419bc3 <test_json@@Base>
  41a433:	add    rsp,0x10
  41a437:	or     DWORD PTR [rbp-0xc],eax
  41a43a:	mov    rax,QWORD PTR [rbp-0x8]
  41a43e:	sub    rsp,0x8
  41a442:	push   0x125
  41a447:	mov    r9d,0x0
  41a44d:	mov    r8d,0x0
  41a453:	mov    ecx,0xd
  41a458:	mov    edx,0x0
  41a45d:	lea    rsi,[rip+0x1c6b4]        # 436b18 <_IO_stdin_used@@Base+0xb18>
  41a464:	mov    rdi,rax
  41a467:	call   419bc3 <test_json@@Base>
  41a46c:	add    rsp,0x10
  41a470:	or     DWORD PTR [rbp-0xc],eax
  41a473:	mov    rax,QWORD PTR [rbp-0x8]
  41a477:	sub    rsp,0x8
  41a47b:	push   0x128
  41a480:	mov    r9d,0x0
  41a486:	mov    r8d,0x0
  41a48c:	mov    ecx,0xd
  41a491:	mov    edx,0x0
  41a496:	lea    rsi,[rip+0x1c6d3]        # 436b70 <_IO_stdin_used@@Base+0xb70>
  41a49d:	mov    rdi,rax
  41a4a0:	call   419bc3 <test_json@@Base>
  41a4a5:	add    rsp,0x10
  41a4a9:	or     DWORD PTR [rbp-0xc],eax
  41a4ac:	mov    rax,QWORD PTR [rbp-0x8]
  41a4b0:	sub    rsp,0x8
  41a4b4:	push   0x12b
  41a4b9:	mov    r9d,0x0
  41a4bf:	mov    r8d,0x0
  41a4c5:	mov    ecx,0xd
  41a4ca:	mov    edx,0x0
  41a4cf:	lea    rsi,[rip+0x1c73a]        # 436c10 <_IO_stdin_used@@Base+0xc10>
  41a4d6:	mov    rdi,rax
  41a4d9:	call   419bc3 <test_json@@Base>
  41a4de:	add    rsp,0x10
  41a4e2:	or     DWORD PTR [rbp-0xc],eax
  41a4e5:	mov    rax,QWORD PTR [rbp-0x8]
  41a4e9:	sub    rsp,0x8
  41a4ed:	push   0x12f
  41a4f2:	mov    r9d,0x0
  41a4f8:	mov    r8d,0x0
  41a4fe:	mov    ecx,0xd
  41a503:	mov    edx,0x0
  41a508:	lea    rsi,[rip+0x1c7a1]        # 436cb0 <_IO_stdin_used@@Base+0xcb0>
  41a50f:	mov    rdi,rax
  41a512:	call   419bc3 <test_json@@Base>
  41a517:	add    rsp,0x10
  41a51b:	or     DWORD PTR [rbp-0xc],eax
  41a51e:	mov    rax,QWORD PTR [rbp-0x8]
  41a522:	sub    rsp,0x8
  41a526:	push   0x133
  41a52b:	mov    r9d,0x0
  41a531:	mov    r8d,0x0
  41a537:	mov    ecx,0xd
  41a53c:	mov    edx,0x0
  41a541:	lea    rsi,[rip+0x1c830]        # 436d78 <_IO_stdin_used@@Base+0xd78>
  41a548:	mov    rdi,rax
  41a54b:	call   419bc3 <test_json@@Base>
  41a550:	add    rsp,0x10
  41a554:	or     DWORD PTR [rbp-0xc],eax
  41a557:	mov    rax,QWORD PTR [rbp-0x8]
  41a55b:	sub    rsp,0x8
  41a55f:	push   0x137
  41a564:	mov    r9d,0x0
  41a56a:	mov    r8d,0x0
  41a570:	mov    ecx,0x5
  41a575:	mov    edx,0x0
  41a57a:	lea    rsi,[rip+0x1c8be]        # 436e3f <_IO_stdin_used@@Base+0xe3f>
  41a581:	mov    rdi,rax
  41a584:	call   419bc3 <test_json@@Base>
  41a589:	add    rsp,0x10
  41a58d:	or     DWORD PTR [rbp-0xc],eax
  41a590:	mov    rax,QWORD PTR [rbp-0x8]
  41a594:	sub    rsp,0x8
  41a598:	push   0x13a
  41a59d:	mov    r9d,0x0
  41a5a3:	mov    r8d,0x0
  41a5a9:	mov    ecx,0x5
  41a5ae:	mov    edx,0x0
  41a5b3:	lea    rsi,[rip+0x1c89e]        # 436e58 <_IO_stdin_used@@Base+0xe58>
  41a5ba:	mov    rdi,rax
  41a5bd:	call   419bc3 <test_json@@Base>
  41a5c2:	add    rsp,0x10
  41a5c6:	or     DWORD PTR [rbp-0xc],eax
  41a5c9:	mov    rax,QWORD PTR [rbp-0x8]
  41a5cd:	sub    rsp,0x8
  41a5d1:	push   0x13d
  41a5d6:	mov    r9d,0x0
  41a5dc:	mov    r8d,0x0
  41a5e2:	mov    ecx,0x5
  41a5e7:	mov    edx,0x0
  41a5ec:	lea    rsi,[rip+0x1c88d]        # 436e80 <_IO_stdin_used@@Base+0xe80>
  41a5f3:	mov    rdi,rax
  41a5f6:	call   419bc3 <test_json@@Base>
  41a5fb:	add    rsp,0x10
  41a5ff:	or     DWORD PTR [rbp-0xc],eax
  41a602:	mov    eax,DWORD PTR [rbp-0xc]
  41a605:	leave  
  41a606:	ret    

000000000041a607 <base64_tests@@Base>:
  41a607:	endbr64 
  41a60b:	push   rbp
  41a60c:	mov    rbp,rsp
  41a60f:	sub    rsp,0x10
  41a613:	mov    DWORD PTR [rbp-0xc],0x0
  41a61a:	lea    rax,[rip+0x2a77f]        # 444da0 <flatcc_builder_padding_base@@Base+0xbb40>
  41a621:	mov    QWORD PTR [rbp-0x8],rax
  41a625:	mov    rax,QWORD PTR [rbp-0x8]
  41a629:	sub    rsp,0x8
  41a62d:	push   0x171
  41a632:	mov    r9d,0x0
  41a638:	mov    r8d,0x0
  41a63e:	mov    ecx,0x0
  41a643:	lea    rdx,[rip+0x1c12d]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a64a:	lea    rsi,[rip+0x1c867]        # 436eb8 <_IO_stdin_used@@Base+0xeb8>
  41a651:	mov    rdi,rax
  41a654:	call   419bc3 <test_json@@Base>
  41a659:	add    rsp,0x10
  41a65d:	or     DWORD PTR [rbp-0xc],eax
  41a660:	mov    rax,QWORD PTR [rbp-0x8]
  41a664:	sub    rsp,0x8
  41a668:	push   0x174
  41a66d:	mov    r9d,0x0
  41a673:	mov    r8d,0x0
  41a679:	mov    ecx,0x0
  41a67e:	lea    rdx,[rip+0x1c84b]        # 436ed0 <_IO_stdin_used@@Base+0xed0>
  41a685:	lea    rsi,[rip+0x1c86c]        # 436ef8 <_IO_stdin_used@@Base+0xef8>
  41a68c:	mov    rdi,rax
  41a68f:	call   419bc3 <test_json@@Base>
  41a694:	add    rsp,0x10
  41a698:	or     DWORD PTR [rbp-0xc],eax
  41a69b:	mov    rax,QWORD PTR [rbp-0x8]
  41a69f:	sub    rsp,0x8
  41a6a3:	push   0x178
  41a6a8:	mov    r9d,0x0
  41a6ae:	mov    r8d,0x0
  41a6b4:	mov    ecx,0x0
  41a6b9:	lea    rdx,[rip+0x1c860]        # 436f20 <_IO_stdin_used@@Base+0xf20>
  41a6c0:	lea    rsi,[rip+0x1c911]        # 436fd8 <_IO_stdin_used@@Base+0xfd8>
  41a6c7:	mov    rdi,rax
  41a6ca:	call   419bc3 <test_json@@Base>
  41a6cf:	add    rsp,0x10
  41a6d3:	or     DWORD PTR [rbp-0xc],eax
  41a6d6:	mov    rax,QWORD PTR [rbp-0x8]
  41a6da:	sub    rsp,0x8
  41a6de:	push   0x17b
  41a6e3:	mov    r9d,0x0
  41a6e9:	mov    r8d,0x0
  41a6ef:	mov    ecx,0x0
  41a6f4:	lea    rdx,[rip+0x1c99d]        # 437098 <_IO_stdin_used@@Base+0x1098>
  41a6fb:	lea    rsi,[rip+0x1ca4e]        # 437150 <_IO_stdin_used@@Base+0x1150>
  41a702:	mov    rdi,rax
  41a705:	call   419bc3 <test_json@@Base>
  41a70a:	add    rsp,0x10
  41a70e:	or     DWORD PTR [rbp-0xc],eax
  41a711:	mov    rax,QWORD PTR [rbp-0x8]
  41a715:	sub    rsp,0x8
  41a719:	push   0x17e
  41a71e:	mov    r9d,0x0
  41a724:	mov    r8d,0x0
  41a72a:	mov    ecx,0x0
  41a72f:	lea    rdx,[rip+0x1c7ea]        # 436f20 <_IO_stdin_used@@Base+0xf20>
  41a736:	lea    rsi,[rip+0x1cad3]        # 437210 <_IO_stdin_used@@Base+0x1210>
  41a73d:	mov    rdi,rax
  41a740:	call   419bc3 <test_json@@Base>
  41a745:	add    rsp,0x10
  41a749:	or     DWORD PTR [rbp-0xc],eax
  41a74c:	mov    rax,QWORD PTR [rbp-0x8]
  41a750:	sub    rsp,0x8
  41a754:	push   0x181
  41a759:	mov    r9d,0x0
  41a75f:	mov    r8d,0x0
  41a765:	mov    ecx,0x0
  41a76a:	lea    rdx,[rip+0x1c927]        # 437098 <_IO_stdin_used@@Base+0x1098>
  41a771:	lea    rsi,[rip+0x1cb50]        # 4372c8 <_IO_stdin_used@@Base+0x12c8>
  41a778:	mov    rdi,rax
  41a77b:	call   419bc3 <test_json@@Base>
  41a780:	add    rsp,0x10
  41a784:	or     DWORD PTR [rbp-0xc],eax
  41a787:	mov    rax,QWORD PTR [rbp-0x8]
  41a78b:	sub    rsp,0x8
  41a78f:	push   0x184
  41a794:	mov    r9d,0x0
  41a79a:	mov    r8d,0x0
  41a7a0:	mov    ecx,0x1f
  41a7a5:	mov    edx,0x0
  41a7aa:	lea    rsi,[rip+0x1cbd7]        # 437388 <_IO_stdin_used@@Base+0x1388>
  41a7b1:	mov    rdi,rax
  41a7b4:	call   419bc3 <test_json@@Base>
  41a7b9:	add    rsp,0x10
  41a7bd:	or     DWORD PTR [rbp-0xc],eax
  41a7c0:	mov    rax,QWORD PTR [rbp-0x8]
  41a7c4:	sub    rsp,0x8
  41a7c8:	push   0x187
  41a7cd:	mov    r9d,0x0
  41a7d3:	mov    r8d,0x0
  41a7d9:	mov    ecx,0x20
  41a7de:	mov    edx,0x0
  41a7e3:	lea    rsi,[rip+0x1cc5e]        # 437448 <_IO_stdin_used@@Base+0x1448>
  41a7ea:	mov    rdi,rax
  41a7ed:	call   419bc3 <test_json@@Base>
  41a7f2:	add    rsp,0x10
  41a7f6:	or     DWORD PTR [rbp-0xc],eax
  41a7f9:	mov    eax,DWORD PTR [rbp-0xc]
  41a7fc:	leave  
  41a7fd:	ret    

000000000041a7fe <mixed_type_union_tests@@Base>:
  41a7fe:	endbr64 
  41a802:	push   rbp
  41a803:	mov    rbp,rsp
  41a806:	sub    rsp,0x10
  41a80a:	mov    DWORD PTR [rbp-0xc],0x0
  41a811:	lea    rax,[rip+0x2a5c8]        # 444de0 <flatcc_builder_padding_base@@Base+0xbb80>
  41a818:	mov    QWORD PTR [rbp-0x8],rax
  41a81c:	mov    rax,QWORD PTR [rbp-0x8]
  41a820:	sub    rsp,0x8
  41a824:	push   0x1b0
  41a829:	mov    r9d,0x0
  41a82f:	mov    r8d,0x0
  41a835:	mov    ecx,0x0
  41a83a:	lea    rdx,[rip+0x1ccc7]        # 437508 <_IO_stdin_used@@Base+0x1508>
  41a841:	lea    rsi,[rip+0x1cd08]        # 437550 <_IO_stdin_used@@Base+0x1550>
  41a848:	mov    rdi,rax
  41a84b:	call   419bc3 <test_json@@Base>
  41a850:	add    rsp,0x10
  41a854:	or     DWORD PTR [rbp-0xc],eax
  41a857:	mov    rax,QWORD PTR [rbp-0x8]
  41a85b:	sub    rsp,0x8
  41a85f:	push   0x1b5
  41a864:	mov    r9d,0x0
  41a86a:	mov    r8d,0x0
  41a870:	mov    ecx,0x0
  41a875:	lea    rdx,[rip+0x1cd24]        # 4375a0 <_IO_stdin_used@@Base+0x15a0>
  41a87c:	lea    rsi,[rip+0x1cd95]        # 437618 <_IO_stdin_used@@Base+0x1618>
  41a883:	mov    rdi,rax
  41a886:	call   419bc3 <test_json@@Base>
  41a88b:	add    rsp,0x10
  41a88f:	or     DWORD PTR [rbp-0xc],eax
  41a892:	mov    rax,QWORD PTR [rbp-0x8]
  41a896:	sub    rsp,0x8
  41a89a:	push   0x1ba
  41a89f:	mov    r9d,0x0
  41a8a5:	mov    r8d,0x0
  41a8ab:	mov    ecx,0x0
  41a8b0:	lea    rdx,[rip+0x1cce9]        # 4375a0 <_IO_stdin_used@@Base+0x15a0>
  41a8b7:	lea    rsi,[rip+0x1cde2]        # 4376a0 <_IO_stdin_used@@Base+0x16a0>
  41a8be:	mov    rdi,rax
  41a8c1:	call   419bc3 <test_json@@Base>
  41a8c6:	add    rsp,0x10
  41a8ca:	or     DWORD PTR [rbp-0xc],eax
  41a8cd:	mov    rax,QWORD PTR [rbp-0x8]
  41a8d1:	sub    rsp,0x8
  41a8d5:	push   0x1c1
  41a8da:	mov    r9d,0x0
  41a8e0:	mov    r8d,0x0
  41a8e6:	mov    ecx,0x0
  41a8eb:	lea    rdx,[rip+0x1ce46]        # 437738 <_IO_stdin_used@@Base+0x1738>
  41a8f2:	lea    rsi,[rip+0x1ceff]        # 4377f8 <_IO_stdin_used@@Base+0x17f8>
  41a8f9:	mov    rdi,rax
  41a8fc:	call   419bc3 <test_json@@Base>
  41a901:	add    rsp,0x10
  41a905:	or     DWORD PTR [rbp-0xc],eax
  41a908:	mov    rax,QWORD PTR [rbp-0x8]
  41a90c:	sub    rsp,0x8
  41a910:	push   0x1ca
  41a915:	mov    r9d,0x0
  41a91b:	mov    r8d,0x0
  41a921:	mov    ecx,0x0
  41a926:	lea    rdx,[rip+0x1cfab]        # 4378d8 <_IO_stdin_used@@Base+0x18d8>
  41a92d:	lea    rsi,[rip+0x1d084]        # 4379b8 <_IO_stdin_used@@Base+0x19b8>
  41a934:	mov    rdi,rax
  41a937:	call   419bc3 <test_json@@Base>
  41a93c:	add    rsp,0x10
  41a940:	or     DWORD PTR [rbp-0xc],eax
  41a943:	mov    rax,QWORD PTR [rbp-0x8]
  41a947:	sub    rsp,0x8
  41a94b:	push   0x1d5
  41a950:	mov    r9d,0x0
  41a956:	mov    r8d,0x0
  41a95c:	mov    ecx,0x0
  41a961:	lea    rdx,[rip+0x1d158]        # 437ac0 <_IO_stdin_used@@Base+0x1ac0>
  41a968:	lea    rsi,[rip+0x1d299]        # 437c08 <_IO_stdin_used@@Base+0x1c08>
  41a96f:	mov    rdi,rax
  41a972:	call   419bc3 <test_json@@Base>
  41a977:	add    rsp,0x10
  41a97b:	or     DWORD PTR [rbp-0xc],eax
  41a97e:	mov    rax,QWORD PTR [rbp-0x8]
  41a982:	sub    rsp,0x8
  41a986:	push   0x1da
  41a98b:	mov    r9d,0x0
  41a991:	mov    r8d,0x0
  41a997:	mov    ecx,0x0
  41a99c:	lea    rdx,[rip+0x1cbfd]        # 4375a0 <_IO_stdin_used@@Base+0x15a0>
  41a9a3:	lea    rsi,[rip+0x1d3e6]        # 437d90 <_IO_stdin_used@@Base+0x1d90>
  41a9aa:	mov    rdi,rax
  41a9ad:	call   419bc3 <test_json@@Base>
  41a9b2:	add    rsp,0x10
  41a9b6:	or     DWORD PTR [rbp-0xc],eax
  41a9b9:	mov    eax,DWORD PTR [rbp-0xc]
  41a9bc:	leave  
  41a9bd:	ret    

000000000041a9be <union_vector_tests@@Base>:
  41a9be:	endbr64 
  41a9c2:	push   rbp
  41a9c3:	mov    rbp,rsp
  41a9c6:	sub    rsp,0x10
  41a9ca:	mov    DWORD PTR [rbp-0xc],0x0
  41a9d1:	lea    rax,[rip+0x2a3e8]        # 444dc0 <flatcc_builder_padding_base@@Base+0xbb60>
  41a9d8:	mov    QWORD PTR [rbp-0x8],rax
  41a9dc:	mov    rax,QWORD PTR [rbp-0x8]
  41a9e0:	sub    rsp,0x8
  41a9e4:	push   0x1e5
  41a9e9:	mov    r9d,0x0
  41a9ef:	mov    r8d,0x0
  41a9f5:	mov    ecx,0x0
  41a9fa:	lea    rdx,[rip+0x1d41f]        # 437e20 <_IO_stdin_used@@Base+0x1e20>
  41aa01:	lea    rsi,[rip+0x1d450]        # 437e58 <_IO_stdin_used@@Base+0x1e58>
  41aa08:	mov    rdi,rax
  41aa0b:	call   419bc3 <test_json@@Base>
  41aa10:	add    rsp,0x10
  41aa14:	or     DWORD PTR [rbp-0xc],eax
  41aa17:	mov    rax,QWORD PTR [rbp-0x8]
  41aa1b:	sub    rsp,0x8
  41aa1f:	push   0x1e8
  41aa24:	mov    r9d,0x0
  41aa2a:	mov    r8d,0x0
  41aa30:	mov    ecx,0x0
  41aa35:	lea    rdx,[rip+0x1d45c]        # 437e98 <_IO_stdin_used@@Base+0x1e98>
  41aa3c:	lea    rsi,[rip+0x1d485]        # 437ec8 <_IO_stdin_used@@Base+0x1ec8>
  41aa43:	mov    rdi,rax
  41aa46:	call   419bc3 <test_json@@Base>
  41aa4b:	add    rsp,0x10
  41aa4f:	or     DWORD PTR [rbp-0xc],eax
  41aa52:	mov    rax,QWORD PTR [rbp-0x8]
  41aa56:	sub    rsp,0x8
  41aa5a:	push   0x1eb
  41aa5f:	mov    r9d,0x0
  41aa65:	mov    r8d,0x0
  41aa6b:	mov    ecx,0x0
  41aa70:	lea    rdx,[rip+0x1d489]        # 437f00 <_IO_stdin_used@@Base+0x1f00>
  41aa77:	lea    rsi,[rip+0x1d4ca]        # 437f48 <_IO_stdin_used@@Base+0x1f48>
  41aa7e:	mov    rdi,rax
  41aa81:	call   419bc3 <test_json@@Base>
  41aa86:	add    rsp,0x10
  41aa8a:	or     DWORD PTR [rbp-0xc],eax
  41aa8d:	mov    rax,QWORD PTR [rbp-0x8]
  41aa91:	sub    rsp,0x8
  41aa95:	push   0x1ee
  41aa9a:	mov    r9d,0x0
  41aaa0:	mov    r8d,0x0
  41aaa6:	mov    ecx,0x0
  41aaab:	lea    rdx,[rip+0x1d4e6]        # 437f98 <_IO_stdin_used@@Base+0x1f98>
  41aab2:	lea    rsi,[rip+0x1d54f]        # 438008 <_IO_stdin_used@@Base+0x2008>
  41aab9:	mov    rdi,rax
  41aabc:	call   419bc3 <test_json@@Base>
  41aac1:	add    rsp,0x10
  41aac5:	or     DWORD PTR [rbp-0xc],eax
  41aac8:	mov    rax,QWORD PTR [rbp-0x8]
  41aacc:	sub    rsp,0x8
  41aad0:	push   0x1f1
  41aad5:	mov    r9d,0x0
  41aadb:	mov    r8d,0x0
  41aae1:	mov    ecx,0x0
  41aae6:	lea    rdx,[rip+0x1d333]        # 437e20 <_IO_stdin_used@@Base+0x1e20>
  41aaed:	lea    rsi,[rip+0x1d594]        # 438088 <_IO_stdin_used@@Base+0x2088>
  41aaf4:	mov    rdi,rax
  41aaf7:	call   419bc3 <test_json@@Base>
  41aafc:	add    rsp,0x10
  41ab00:	or     DWORD PTR [rbp-0xc],eax
  41ab03:	mov    rax,QWORD PTR [rbp-0x8]
  41ab07:	sub    rsp,0x8
  41ab0b:	push   0x1f4
  41ab10:	mov    r9d,0x0
  41ab16:	mov    r8d,0x0
  41ab1c:	mov    ecx,0x0
  41ab21:	lea    rdx,[rip+0x1d5a0]        # 4380c8 <_IO_stdin_used@@Base+0x20c8>
  41ab28:	lea    rsi,[rip+0x1d5f9]        # 438128 <_IO_stdin_used@@Base+0x2128>
  41ab2f:	mov    rdi,rax
  41ab32:	call   419bc3 <test_json@@Base>
  41ab37:	add    rsp,0x10
  41ab3b:	or     DWORD PTR [rbp-0xc],eax
  41ab3e:	mov    eax,DWORD PTR [rbp-0xc]
  41ab41:	leave  
  41ab42:	ret    

000000000041ab43 <main@@Base>:
  41ab43:	endbr64 
  41ab47:	push   rbp
  41ab48:	mov    rbp,rsp
  41ab4b:	sub    rsp,0x10
  41ab4f:	mov    DWORD PTR [rbp-0xc],0x0
  41ab56:	lea    rax,[rip+0x2a243]        # 444da0 <flatcc_builder_padding_base@@Base+0xbb40>
  41ab5d:	mov    QWORD PTR [rbp-0x8],rax
  41ab61:	mov    eax,0x0
  41ab66:	call   41a102 <edge_case_tests@@Base>
  41ab6b:	or     DWORD PTR [rbp-0xc],eax
  41ab6e:	mov    eax,0x0
  41ab73:	call   41a338 <error_case_tests@@Base>
  41ab78:	or     DWORD PTR [rbp-0xc],eax
  41ab7b:	mov    eax,0x0
  41ab80:	call   41a9be <union_vector_tests@@Base>
  41ab85:	or     DWORD PTR [rbp-0xc],eax
  41ab88:	mov    eax,0x0
  41ab8d:	call   41a607 <base64_tests@@Base>
  41ab92:	or     DWORD PTR [rbp-0xc],eax
  41ab95:	mov    eax,0x0
  41ab9a:	call   41a7fe <mixed_type_union_tests@@Base>
  41ab9f:	or     DWORD PTR [rbp-0xc],eax
  41aba2:	mov    rax,QWORD PTR [rbp-0x8]
  41aba6:	sub    rsp,0x8
  41abaa:	push   0x20d
  41abaf:	mov    r9d,0x0
  41abb5:	mov    r8d,0x0
  41abbb:	mov    ecx,0x0
  41abc0:	lea    rdx,[rip+0x1bbb0]        # 436777 <_IO_stdin_used@@Base+0x777>
  41abc7:	lea    rsi,[rip+0x1d5c0]        # 43818e <_IO_stdin_used@@Base+0x218e>
  41abce:	mov    rdi,rax
  41abd1:	call   419bc3 <test_json@@Base>
  41abd6:	add    rsp,0x10
  41abda:	or     DWORD PTR [rbp-0xc],eax
  41abdd:	mov    rax,QWORD PTR [rbp-0x8]
  41abe1:	sub    rsp,0x8
  41abe5:	push   0x210
  41abea:	mov    r9d,0x0
  41abf0:	mov    r8d,0x0
  41abf6:	mov    ecx,0x0
  41abfb:	lea    rdx,[rip+0x1d5a6]        # 4381a8 <_IO_stdin_used@@Base+0x21a8>
  41ac02:	lea    rsi,[rip+0x1d5c7]        # 4381d0 <_IO_stdin_used@@Base+0x21d0>
  41ac09:	mov    rdi,rax
  41ac0c:	call   419bc3 <test_json@@Base>
  41ac11:	add    rsp,0x10
  41ac15:	or     DWORD PTR [rbp-0xc],eax
  41ac18:	mov    rax,QWORD PTR [rbp-0x8]
  41ac1c:	sub    rsp,0x8
  41ac20:	push   0x213
  41ac25:	mov    r9d,0x0
  41ac2b:	mov    r8d,0x0
  41ac31:	mov    ecx,0x0
  41ac36:	lea    rdx,[rip+0x1d5bb]        # 4381f8 <_IO_stdin_used@@Base+0x21f8>
  41ac3d:	lea    rsi,[rip+0x1d5dc]        # 438220 <_IO_stdin_used@@Base+0x2220>
  41ac44:	mov    rdi,rax
  41ac47:	call   419bc3 <test_json@@Base>
  41ac4c:	add    rsp,0x10
  41ac50:	or     DWORD PTR [rbp-0xc],eax
  41ac53:	mov    rax,QWORD PTR [rbp-0x8]
  41ac57:	sub    rsp,0x8
  41ac5b:	push   0x216
  41ac60:	mov    r9d,0x0
  41ac66:	mov    r8d,0x0
  41ac6c:	mov    ecx,0x0
  41ac71:	lea    rdx,[rip+0x1d5d0]        # 438248 <_IO_stdin_used@@Base+0x2248>
  41ac78:	lea    rsi,[rip+0x1d5f9]        # 438278 <_IO_stdin_used@@Base+0x2278>
  41ac7f:	mov    rdi,rax
  41ac82:	call   419bc3 <test_json@@Base>
  41ac87:	add    rsp,0x10
  41ac8b:	or     DWORD PTR [rbp-0xc],eax
  41ac8e:	mov    rax,QWORD PTR [rbp-0x8]
  41ac92:	sub    rsp,0x8
  41ac96:	push   0x219
  41ac9b:	mov    r9d,0x0
  41aca1:	mov    r8d,0x0
  41aca7:	mov    ecx,0x0
  41acac:	lea    rdx,[rip+0x1d595]        # 438248 <_IO_stdin_used@@Base+0x2248>
  41acb3:	lea    rsi,[rip+0x1d5f6]        # 4382b0 <_IO_stdin_used@@Base+0x22b0>
  41acba:	mov    rdi,rax
  41acbd:	call   419bc3 <test_json@@Base>
  41acc2:	add    rsp,0x10
  41acc6:	or     DWORD PTR [rbp-0xc],eax
  41acc9:	mov    rax,QWORD PTR [rbp-0x8]
  41accd:	sub    rsp,0x8
  41acd1:	push   0x21c
  41acd6:	mov    r9d,0x0
  41acdc:	mov    r8d,0x0
  41ace2:	mov    ecx,0x0
  41ace7:	lea    rdx,[rip+0x1d4ba]        # 4381a8 <_IO_stdin_used@@Base+0x21a8>
  41acee:	lea    rsi,[rip+0x1d5fb]        # 4382f0 <_IO_stdin_used@@Base+0x22f0>
  41acf5:	mov    rdi,rax
  41acf8:	call   419bc3 <test_json@@Base>
  41acfd:	add    rsp,0x10
  41ad01:	or     DWORD PTR [rbp-0xc],eax
  41ad04:	mov    rax,QWORD PTR [rbp-0x8]
  41ad08:	sub    rsp,0x8
  41ad0c:	push   0x21f
  41ad11:	mov    r9d,0x0
  41ad17:	mov    r8d,0x0
  41ad1d:	mov    ecx,0x0
  41ad22:	lea    rdx,[rip+0x1d4cf]        # 4381f8 <_IO_stdin_used@@Base+0x21f8>
  41ad29:	lea    rsi,[rip+0x1d5e8]        # 438318 <_IO_stdin_used@@Base+0x2318>
  41ad30:	mov    rdi,rax
  41ad33:	call   419bc3 <test_json@@Base>
  41ad38:	add    rsp,0x10
  41ad3c:	or     DWORD PTR [rbp-0xc],eax
  41ad3f:	mov    rax,QWORD PTR [rbp-0x8]
  41ad43:	sub    rsp,0x8
  41ad47:	push   0x223
  41ad4c:	mov    r9d,0x0
  41ad52:	mov    r8d,0x0
  41ad58:	mov    ecx,0x0
  41ad5d:	lea    rdx,[rip+0x1ba13]        # 436777 <_IO_stdin_used@@Base+0x777>
  41ad64:	lea    rsi,[rip+0x1d5dd]        # 438348 <_IO_stdin_used@@Base+0x2348>
  41ad6b:	mov    rdi,rax
  41ad6e:	call   419bc3 <test_json@@Base>
  41ad73:	add    rsp,0x10
  41ad77:	or     DWORD PTR [rbp-0xc],eax
  41ad7a:	mov    rax,QWORD PTR [rbp-0x8]
  41ad7e:	sub    rsp,0x8
  41ad82:	push   0x227
  41ad87:	mov    r9d,0x0
  41ad8d:	mov    r8d,0x0
  41ad93:	mov    ecx,0x0
  41ad98:	lea    rdx,[rip+0x1b9d8]        # 436777 <_IO_stdin_used@@Base+0x777>
  41ad9f:	lea    rsi,[rip+0x1b96a]        # 436710 <_IO_stdin_used@@Base+0x710>
  41ada6:	mov    rdi,rax
  41ada9:	call   419bc3 <test_json@@Base>
  41adae:	add    rsp,0x10
  41adb2:	or     DWORD PTR [rbp-0xc],eax
  41adb5:	mov    rax,QWORD PTR [rbp-0x8]
  41adb9:	sub    rsp,0x8
  41adbd:	push   0x259
  41adc2:	mov    r9d,0x0
  41adc8:	mov    r8d,0x0
  41adce:	mov    ecx,0x0
  41add3:	lea    rdx,[rip+0x1d3ce]        # 4381a8 <_IO_stdin_used@@Base+0x21a8>
  41adda:	lea    rsi,[rip+0x1d58f]        # 438370 <_IO_stdin_used@@Base+0x2370>
  41ade1:	mov    rdi,rax
  41ade4:	call   419bc3 <test_json@@Base>
  41ade9:	add    rsp,0x10
  41aded:	or     DWORD PTR [rbp-0xc],eax
  41adf0:	mov    rax,QWORD PTR [rbp-0x8]
  41adf4:	sub    rsp,0x8
  41adf8:	push   0x25c
  41adfd:	mov    r9d,0x0
  41ae03:	mov    r8d,0x0
  41ae09:	mov    ecx,0x0
  41ae0e:	lea    rdx,[rip+0x1d3e3]        # 4381f8 <_IO_stdin_used@@Base+0x21f8>
  41ae15:	lea    rsi,[rip+0x1d57c]        # 438398 <_IO_stdin_used@@Base+0x2398>
  41ae1c:	mov    rdi,rax
  41ae1f:	call   419bc3 <test_json@@Base>
  41ae24:	add    rsp,0x10
  41ae28:	or     DWORD PTR [rbp-0xc],eax
  41ae2b:	mov    rax,QWORD PTR [rbp-0x8]
  41ae2f:	sub    rsp,0x8
  41ae33:	push   0x25f
  41ae38:	mov    r9d,0x0
  41ae3e:	mov    r8d,0x0
  41ae44:	mov    ecx,0x0
  41ae49:	lea    rdx,[rip+0x1d570]        # 4383c0 <_IO_stdin_used@@Base+0x23c0>
  41ae50:	lea    rsi,[rip+0x1d591]        # 4383e8 <_IO_stdin_used@@Base+0x23e8>
  41ae57:	mov    rdi,rax
  41ae5a:	call   419bc3 <test_json@@Base>
  41ae5f:	add    rsp,0x10
  41ae63:	or     DWORD PTR [rbp-0xc],eax
  41ae66:	mov    rax,QWORD PTR [rbp-0x8]
  41ae6a:	sub    rsp,0x8
  41ae6e:	push   0x262
  41ae73:	mov    r9d,0x0
  41ae79:	mov    r8d,0x0
  41ae7f:	mov    ecx,0x0
  41ae84:	lea    rdx,[rip+0x1d3bd]        # 438248 <_IO_stdin_used@@Base+0x2248>
  41ae8b:	lea    rsi,[rip+0x1d57e]        # 438410 <_IO_stdin_used@@Base+0x2410>
  41ae92:	mov    rdi,rax
  41ae95:	call   419bc3 <test_json@@Base>
  41ae9a:	add    rsp,0x10
  41ae9e:	or     DWORD PTR [rbp-0xc],eax
  41aea1:	mov    rax,QWORD PTR [rbp-0x8]
  41aea5:	sub    rsp,0x8
  41aea9:	push   0x265
  41aeae:	mov    r9d,0x0
  41aeb4:	mov    r8d,0x0
  41aeba:	mov    ecx,0x0
  41aebf:	lea    rdx,[rip+0x1d56c]        # 438432 <_IO_stdin_used@@Base+0x2432>
  41aec6:	lea    rsi,[rip+0x1d583]        # 438450 <_IO_stdin_used@@Base+0x2450>
  41aecd:	mov    rdi,rax
  41aed0:	call   419bc3 <test_json@@Base>
  41aed5:	add    rsp,0x10
  41aed9:	or     DWORD PTR [rbp-0xc],eax
  41aedc:	mov    rax,QWORD PTR [rbp-0x8]
  41aee0:	sub    rsp,0x8
  41aee4:	push   0x268
  41aee9:	mov    r9d,0x0
  41aeef:	mov    r8d,0x0
  41aef5:	mov    ecx,0x0
  41aefa:	lea    rdx,[rip+0x1d571]        # 438472 <_IO_stdin_used@@Base+0x2472>
  41af01:	lea    rsi,[rip+0x1d588]        # 438490 <_IO_stdin_used@@Base+0x2490>
  41af08:	mov    rdi,rax
  41af0b:	call   419bc3 <test_json@@Base>
  41af10:	add    rsp,0x10
  41af14:	or     DWORD PTR [rbp-0xc],eax
  41af17:	mov    rax,QWORD PTR [rbp-0x8]
  41af1b:	sub    rsp,0x8
  41af1f:	push   0x26b
  41af24:	mov    r9d,0x0
  41af2a:	mov    r8d,0x0
  41af30:	mov    ecx,0x0
  41af35:	lea    rdx,[rip+0x1d576]        # 4384b2 <_IO_stdin_used@@Base+0x24b2>
  41af3c:	lea    rsi,[rip+0x1d58d]        # 4384d0 <_IO_stdin_used@@Base+0x24d0>
  41af43:	mov    rdi,rax
  41af46:	call   419bc3 <test_json@@Base>
  41af4b:	add    rsp,0x10
  41af4f:	or     DWORD PTR [rbp-0xc],eax
  41af52:	mov    rax,QWORD PTR [rbp-0x8]
  41af56:	sub    rsp,0x8
  41af5a:	push   0x26e
  41af5f:	mov    r9d,0x0
  41af65:	mov    r8d,0x0
  41af6b:	mov    ecx,0x0
  41af70:	lea    rdx,[rip+0x1d231]        # 4381a8 <_IO_stdin_used@@Base+0x21a8>
  41af77:	lea    rsi,[rip+0x1d57a]        # 4384f8 <_IO_stdin_used@@Base+0x24f8>
  41af7e:	mov    rdi,rax
  41af81:	call   419bc3 <test_json@@Base>
  41af86:	add    rsp,0x10
  41af8a:	or     DWORD PTR [rbp-0xc],eax
  41af8d:	mov    rax,QWORD PTR [rbp-0x8]
  41af91:	sub    rsp,0x8
  41af95:	push   0x271
  41af9a:	mov    r9d,0x0
  41afa0:	mov    r8d,0x0
  41afa6:	mov    ecx,0x0
  41afab:	lea    rdx,[rip+0x1d1f6]        # 4381a8 <_IO_stdin_used@@Base+0x21a8>
  41afb2:	lea    rsi,[rip+0x1d56f]        # 438528 <_IO_stdin_used@@Base+0x2528>
  41afb9:	mov    rdi,rax
  41afbc:	call   419bc3 <test_json@@Base>
  41afc1:	add    rsp,0x10
  41afc5:	or     DWORD PTR [rbp-0xc],eax
  41afc8:	mov    rax,QWORD PTR [rbp-0x8]
  41afcc:	sub    rsp,0x8
  41afd0:	push   0x274
  41afd5:	mov    r9d,0x0
  41afdb:	mov    r8d,0x0
  41afe1:	mov    ecx,0x0
  41afe6:	lea    rdx,[rip+0x1d575]        # 438562 <_IO_stdin_used@@Base+0x2562>
  41afed:	lea    rsi,[rip+0x1d58c]        # 438580 <_IO_stdin_used@@Base+0x2580>
  41aff4:	mov    rdi,rax
  41aff7:	call   419bc3 <test_json@@Base>
  41affc:	add    rsp,0x10
  41b000:	or     DWORD PTR [rbp-0xc],eax
  41b003:	mov    rax,QWORD PTR [rbp-0x8]
  41b007:	sub    rsp,0x8
  41b00b:	push   0x277
  41b010:	mov    r9d,0x0
  41b016:	mov    r8d,0x0
  41b01c:	mov    ecx,0x0
  41b021:	lea    rdx,[rip+0x1d53a]        # 438562 <_IO_stdin_used@@Base+0x2562>
  41b028:	lea    rsi,[rip+0x1d551]        # 438580 <_IO_stdin_used@@Base+0x2580>
  41b02f:	mov    rdi,rax
  41b032:	call   419bc3 <test_json@@Base>
  41b037:	add    rsp,0x10
  41b03b:	or     DWORD PTR [rbp-0xc],eax
  41b03e:	mov    rax,QWORD PTR [rbp-0x8]
  41b042:	sub    rsp,0x8
  41b046:	push   0x27a
  41b04b:	mov    r9d,0x0
  41b051:	mov    r8d,0x0
  41b057:	mov    ecx,0x0
  41b05c:	lea    rdx,[rip+0x1d54d]        # 4385b0 <_IO_stdin_used@@Base+0x25b0>
  41b063:	lea    rsi,[rip+0x1d58e]        # 4385f8 <_IO_stdin_used@@Base+0x25f8>
  41b06a:	mov    rdi,rax
  41b06d:	call   419bc3 <test_json@@Base>
  41b072:	add    rsp,0x10
  41b076:	or     DWORD PTR [rbp-0xc],eax
  41b079:	mov    rax,QWORD PTR [rbp-0x8]
  41b07d:	sub    rsp,0x8
  41b081:	push   0x27e
  41b086:	mov    r9d,0x0
  41b08c:	mov    r8d,0x0
  41b092:	mov    ecx,0x0
  41b097:	lea    rdx,[rip+0x1d5b2]        # 438650 <_IO_stdin_used@@Base+0x2650>
  41b09e:	lea    rsi,[rip+0x1d5fb]        # 4386a0 <_IO_stdin_used@@Base+0x26a0>
  41b0a5:	mov    rdi,rax
  41b0a8:	call   419bc3 <test_json@@Base>
  41b0ad:	add    rsp,0x10
  41b0b1:	or     DWORD PTR [rbp-0xc],eax
  41b0b4:	mov    rax,QWORD PTR [rbp-0x8]
  41b0b8:	sub    rsp,0x8
  41b0bc:	push   0x282
  41b0c1:	mov    r9d,0x0
  41b0c7:	mov    r8d,0x0
  41b0cd:	mov    ecx,0x0
  41b0d2:	lea    rdx,[rip+0x1d61f]        # 4386f8 <_IO_stdin_used@@Base+0x26f8>
  41b0d9:	lea    rsi,[rip+0x1d680]        # 438760 <_IO_stdin_used@@Base+0x2760>
  41b0e0:	mov    rdi,rax
  41b0e3:	call   419bc3 <test_json@@Base>
  41b0e8:	add    rsp,0x10
  41b0ec:	or     DWORD PTR [rbp-0xc],eax
  41b0ef:	mov    rax,QWORD PTR [rbp-0x8]
  41b0f3:	sub    rsp,0x8
  41b0f7:	push   0x286
  41b0fc:	mov    r9d,0x0
  41b102:	mov    r8d,0x0
  41b108:	mov    ecx,0x0
  41b10d:	lea    rdx,[rip+0x1b663]        # 436777 <_IO_stdin_used@@Base+0x777>
  41b114:	lea    rsi,[rip+0x1d6b5]        # 4387d0 <_IO_stdin_used@@Base+0x27d0>
  41b11b:	mov    rdi,rax
  41b11e:	call   419bc3 <test_json@@Base>
  41b123:	add    rsp,0x10
  41b127:	or     DWORD PTR [rbp-0xc],eax
  41b12a:	mov    rax,QWORD PTR [rbp-0x8]
  41b12e:	sub    rsp,0x8
  41b132:	push   0x289
  41b137:	mov    r9d,0x0
  41b13d:	mov    r8d,0x0
  41b143:	mov    ecx,0x0
  41b148:	lea    rdx,[rip+0x1b628]        # 436777 <_IO_stdin_used@@Base+0x777>
  41b14f:	lea    rsi,[rip+0x1d6aa]        # 438800 <_IO_stdin_used@@Base+0x2800>
  41b156:	mov    rdi,rax
  41b159:	call   419bc3 <test_json@@Base>
  41b15e:	add    rsp,0x10
  41b162:	or     DWORD PTR [rbp-0xc],eax
  41b165:	mov    rax,QWORD PTR [rbp-0x8]
  41b169:	sub    rsp,0x8
  41b16d:	push   0x2cc
  41b172:	mov    r9d,0x0
  41b178:	mov    r8d,0x0
  41b17e:	mov    ecx,0x0
  41b183:	lea    rdx,[rip+0x1d69e]        # 438828 <_IO_stdin_used@@Base+0x2828>
  41b18a:	lea    rsi,[rip+0x1d6f7]        # 438888 <_IO_stdin_used@@Base+0x2888>
  41b191:	mov    rdi,rax
  41b194:	call   419bc3 <test_json@@Base>
  41b199:	add    rsp,0x10
  41b19d:	or     DWORD PTR [rbp-0xc],eax
  41b1a0:	mov    rax,QWORD PTR [rbp-0x8]
  41b1a4:	sub    rsp,0x8
  41b1a8:	push   0x2db
  41b1ad:	mov    r9d,0x0
  41b1b3:	mov    r8d,0x0
  41b1b9:	mov    ecx,0x0
  41b1be:	lea    rdx,[rip+0x1d733]        # 4388f8 <_IO_stdin_used@@Base+0x28f8>
  41b1c5:	lea    rsi,[rip+0x1d75c]        # 438928 <_IO_stdin_used@@Base+0x2928>
  41b1cc:	mov    rdi,rax
  41b1cf:	call   419bc3 <test_json@@Base>
  41b1d4:	add    rsp,0x10
  41b1d8:	or     DWORD PTR [rbp-0xc],eax
  41b1db:	mov    rax,QWORD PTR [rbp-0x8]
  41b1df:	sub    rsp,0x8
  41b1e3:	push   0x2de
  41b1e8:	mov    r9d,0x0
  41b1ee:	mov    r8d,0x0
  41b1f4:	mov    ecx,0x0
  41b1f9:	lea    rdx,[rip+0x1d765]        # 438965 <_IO_stdin_used@@Base+0x2965>
  41b200:	lea    rsi,[rip+0x1d770]        # 438977 <_IO_stdin_used@@Base+0x2977>
  41b207:	mov    rdi,rax
  41b20a:	call   419bc3 <test_json@@Base>
  41b20f:	add    rsp,0x10
  41b213:	or     DWORD PTR [rbp-0xc],eax
  41b216:	mov    rax,QWORD PTR [rbp-0x8]
  41b21a:	sub    rsp,0x8
  41b21e:	push   0x2e2
  41b223:	mov    r9d,0x0
  41b229:	mov    r8d,0x0
  41b22f:	mov    ecx,0x0
  41b234:	lea    rdx,[rip+0x1d75d]        # 438998 <_IO_stdin_used@@Base+0x2998>
  41b23b:	lea    rsi,[rip+0x1d79e]        # 4389e0 <_IO_stdin_used@@Base+0x29e0>
  41b242:	mov    rdi,rax
  41b245:	call   419bc3 <test_json@@Base>
  41b24a:	add    rsp,0x10
  41b24e:	or     DWORD PTR [rbp-0xc],eax
  41b251:	mov    rax,QWORD PTR [rbp-0x8]
  41b255:	sub    rsp,0x8
  41b259:	push   0x2ee
  41b25e:	mov    r9d,0x0
  41b264:	mov    r8d,0x0
  41b26a:	mov    ecx,0x0
  41b26f:	lea    rdx,[rip+0x1d722]        # 438998 <_IO_stdin_used@@Base+0x2998>
  41b276:	lea    rsi,[rip+0x1d7ab]        # 438a28 <_IO_stdin_used@@Base+0x2a28>
  41b27d:	mov    rdi,rax
  41b280:	call   419bc3 <test_json@@Base>
  41b285:	add    rsp,0x10
  41b289:	or     DWORD PTR [rbp-0xc],eax
  41b28c:	mov    rax,QWORD PTR [rbp-0x8]
  41b290:	sub    rsp,0x8
  41b294:	push   0x2fe
  41b299:	mov    r9d,0x0
  41b29f:	mov    r8d,0x0
  41b2a5:	mov    ecx,0x0
  41b2aa:	lea    rdx,[rip+0x1d817]        # 438ac8 <_IO_stdin_used@@Base+0x2ac8>
  41b2b1:	lea    rsi,[rip+0x1d838]        # 438af0 <_IO_stdin_used@@Base+0x2af0>
  41b2b8:	mov    rdi,rax
  41b2bb:	call   419bc3 <test_json@@Base>
  41b2c0:	add    rsp,0x10
  41b2c4:	or     DWORD PTR [rbp-0xc],eax
  41b2c7:	mov    rax,QWORD PTR [rbp-0x8]
  41b2cb:	sub    rsp,0x8
  41b2cf:	push   0x302
  41b2d4:	mov    r9d,0x0
  41b2da:	mov    r8d,0x0
  41b2e0:	mov    ecx,0x0
  41b2e5:	lea    rdx,[rip+0x1d82c]        # 438b18 <_IO_stdin_used@@Base+0x2b18>
  41b2ec:	lea    rsi,[rip+0x1d855]        # 438b48 <_IO_stdin_used@@Base+0x2b48>
  41b2f3:	mov    rdi,rax
  41b2f6:	call   419bc3 <test_json@@Base>
  41b2fb:	add    rsp,0x10
  41b2ff:	or     DWORD PTR [rbp-0xc],eax
  41b302:	mov    rax,QWORD PTR [rbp-0x8]
  41b306:	sub    rsp,0x8
  41b30a:	push   0x308
  41b30f:	mov    r9d,0x0
  41b315:	mov    r8d,0x0
  41b31b:	mov    ecx,0x0
  41b320:	lea    rdx,[rip+0x1d851]        # 438b78 <_IO_stdin_used@@Base+0x2b78>
  41b327:	lea    rsi,[rip+0x1d8ba]        # 438be8 <_IO_stdin_used@@Base+0x2be8>
  41b32e:	mov    rdi,rax
  41b331:	call   419bc3 <test_json@@Base>
  41b336:	add    rsp,0x10
  41b33a:	or     DWORD PTR [rbp-0xc],eax
  41b33d:	mov    rax,QWORD PTR [rbp-0x8]
  41b341:	sub    rsp,0x8
  41b345:	push   0x30d
  41b34a:	mov    r9d,0x0
  41b350:	mov    r8d,0x0
  41b356:	mov    ecx,0x0
  41b35b:	lea    rdx,[rip+0x1b415]        # 436777 <_IO_stdin_used@@Base+0x777>
  41b362:	lea    rsi,[rip+0x1d8ff]        # 438c68 <_IO_stdin_used@@Base+0x2c68>
  41b369:	mov    rdi,rax
  41b36c:	call   419bc3 <test_json@@Base>
  41b371:	add    rsp,0x10
  41b375:	or     DWORD PTR [rbp-0xc],eax
  41b378:	mov    rax,QWORD PTR [rbp-0x8]
  41b37c:	sub    rsp,0x8
  41b380:	push   0x312
  41b385:	mov    r9d,0x0
  41b38b:	mov    r8d,0x0
  41b391:	mov    ecx,0x0
  41b396:	lea    rdx,[rip+0x1d943]        # 438ce0 <_IO_stdin_used@@Base+0x2ce0>
  41b39d:	lea    rsi,[rip+0x1d9ac]        # 438d50 <_IO_stdin_used@@Base+0x2d50>
  41b3a4:	mov    rdi,rax
  41b3a7:	call   419bc3 <test_json@@Base>
  41b3ac:	add    rsp,0x10
  41b3b0:	or     DWORD PTR [rbp-0xc],eax
  41b3b3:	mov    rax,QWORD PTR [rbp-0x8]
  41b3b7:	sub    rsp,0x8
  41b3bb:	push   0x317
  41b3c0:	mov    r9d,0x0
  41b3c6:	mov    r8d,0x0
  41b3cc:	mov    ecx,0x0
  41b3d1:	lea    rdx,[rip+0x1d9f8]        # 438dd0 <_IO_stdin_used@@Base+0x2dd0>
  41b3d8:	lea    rsi,[rip+0x1da71]        # 438e50 <_IO_stdin_used@@Base+0x2e50>
  41b3df:	mov    rdi,rax
  41b3e2:	call   419bc3 <test_json@@Base>
  41b3e7:	add    rsp,0x10
  41b3eb:	or     DWORD PTR [rbp-0xc],eax
  41b3ee:	mov    rax,QWORD PTR [rbp-0x8]
  41b3f2:	sub    rsp,0x8
  41b3f6:	push   0x31c
  41b3fb:	mov    r9d,0x0
  41b401:	mov    r8d,0x0
  41b407:	mov    ecx,0x0
  41b40c:	lea    rdx,[rip+0x1dacd]        # 438ee0 <_IO_stdin_used@@Base+0x2ee0>
  41b413:	lea    rsi,[rip+0x1db36]        # 438f50 <_IO_stdin_used@@Base+0x2f50>
  41b41a:	mov    rdi,rax
  41b41d:	call   419bc3 <test_json@@Base>
  41b422:	add    rsp,0x10
  41b426:	or     DWORD PTR [rbp-0xc],eax
  41b429:	mov    rax,QWORD PTR [rbp-0x8]
  41b42d:	sub    rsp,0x8
  41b431:	push   0x321
  41b436:	mov    r9d,0x0
  41b43c:	mov    r8d,0x0
  41b442:	mov    ecx,0x0
  41b447:	lea    rdx,[rip+0x1db82]        # 438fd0 <_IO_stdin_used@@Base+0x2fd0>
  41b44e:	lea    rsi,[rip+0x1dbfb]        # 439050 <_IO_stdin_used@@Base+0x3050>
  41b455:	mov    rdi,rax
  41b458:	call   419bc3 <test_json@@Base>
  41b45d:	add    rsp,0x10
  41b461:	or     DWORD PTR [rbp-0xc],eax
  41b464:	mov    rax,QWORD PTR [rbp-0x8]
  41b468:	sub    rsp,0x8
  41b46c:	push   0x326
  41b471:	mov    r9d,0x0
  41b477:	mov    r8d,0x0
  41b47d:	mov    ecx,0x0
  41b482:	lea    rdx,[rip+0x1dc57]        # 4390e0 <_IO_stdin_used@@Base+0x30e0>
  41b489:	lea    rsi,[rip+0x1dcd8]        # 439168 <_IO_stdin_used@@Base+0x3168>
  41b490:	mov    rdi,rax
  41b493:	call   419bc3 <test_json@@Base>
  41b498:	add    rsp,0x10
  41b49c:	or     DWORD PTR [rbp-0xc],eax
  41b49f:	cmp    DWORD PTR [rbp-0xc],0x0
  41b4a3:	je     41b4ac <main@@Base+0x969>
  41b4a5:	mov    eax,0xffffffff
  41b4aa:	jmp    41b4b1 <main@@Base+0x96e>
  41b4ac:	mov    eax,0x0
  41b4b1:	leave  
  41b4b2:	ret    
  41b4b3:	push   rbp
  41b4b4:	mov    rbp,rsp
  41b4b7:	sub    rsp,0x30
  41b4bb:	mov    QWORD PTR [rbp-0x28],rdi
  41b4bf:	mov    QWORD PTR [rbp-0x30],rsi
  41b4c3:	mov    rax,QWORD PTR fs:0x28
  41b4cc:	mov    QWORD PTR [rbp-0x8],rax
  41b4d0:	xor    eax,eax
  41b4d2:	mov    QWORD PTR [rbp-0x10],0x0
  41b4da:	cmp    QWORD PTR [rbp-0x28],0x7
  41b4df:	ja     41b4e9 <main@@Base+0x9a6>
  41b4e1:	mov    QWORD PTR [rbp-0x28],0x8
  41b4e9:	mov    rdx,QWORD PTR [rbp-0x30]
  41b4ed:	mov    rcx,QWORD PTR [rbp-0x28]
  41b4f1:	lea    rax,[rbp-0x10]
  41b4f5:	mov    rsi,rcx
  41b4f8:	mov    rdi,rax
  41b4fb:	call   406280 <posix_memalign@plt>
  41b500:	mov    DWORD PTR [rbp-0x14],eax
  41b503:	cmp    DWORD PTR [rbp-0x14],0x0
  41b507:	je     41b526 <main@@Base+0x9e3>
  41b509:	mov    rax,QWORD PTR [rbp-0x10]
  41b50d:	test   rax,rax
  41b510:	je     41b526 <main@@Base+0x9e3>
  41b512:	mov    rax,QWORD PTR [rbp-0x10]
  41b516:	mov    rdi,rax
  41b519:	call   406160 <free@plt>
  41b51e:	mov    QWORD PTR [rbp-0x10],0x0
  41b526:	mov    rax,QWORD PTR [rbp-0x10]
  41b52a:	mov    rcx,QWORD PTR [rbp-0x8]
  41b52e:	xor    rcx,QWORD PTR fs:0x28
  41b537:	je     41b53e <main@@Base+0x9fb>
  41b539:	call   4061a0 <__stack_chk_fail@plt>
  41b53e:	leave  
  41b53f:	ret    
  41b540:	push   rbp
  41b541:	mov    rbp,rsp
  41b544:	mov    DWORD PTR [rbp-0x4],edi
  41b547:	mov    eax,DWORD PTR [rbp-0x4]
  41b54a:	pop    rbp
  41b54b:	ret    
  41b54c:	push   rbp
  41b54d:	mov    rbp,rsp
  41b550:	mov    eax,edi
  41b552:	mov    BYTE PTR [rbp-0x4],al
  41b555:	movzx  eax,BYTE PTR [rbp-0x4]
  41b559:	pop    rbp
  41b55a:	ret    
  41b55b:	push   rbp
  41b55c:	mov    rbp,rsp
  41b55f:	mov    DWORD PTR [rbp-0x4],edi
  41b562:	mov    eax,DWORD PTR [rbp-0x4]
  41b565:	pop    rbp
  41b566:	ret    
  41b567:	push   rbp
  41b568:	mov    rbp,rsp
  41b56b:	mov    QWORD PTR [rbp-0x8],rdi
  41b56f:	mov    QWORD PTR [rbp-0x10],rsi
  41b573:	mov    rax,QWORD PTR [rbp-0x8]
  41b577:	mov    rdx,QWORD PTR [rax]
  41b57a:	mov    rax,QWORD PTR [rbp-0x8]
  41b57e:	mov    rax,QWORD PTR [rax+0x8]
  41b582:	cmp    rdx,rax
  41b585:	jne    41b5a7 <main@@Base+0xa64>
  41b587:	cmp    QWORD PTR [rbp-0x10],0x0
  41b58c:	je     41b59d <main@@Base+0xa5a>
  41b58e:	mov    rax,QWORD PTR [rbp-0x8]
  41b592:	mov    rdx,QWORD PTR [rax+0x30]
  41b596:	mov    rax,QWORD PTR [rbp-0x10]
  41b59a:	mov    QWORD PTR [rax],rdx
  41b59d:	mov    rax,QWORD PTR [rbp-0x8]
  41b5a1:	mov    rax,QWORD PTR [rax+0x10]
  41b5a5:	jmp    41b5be <main@@Base+0xa7b>
  41b5a7:	cmp    QWORD PTR [rbp-0x10],0x0
  41b5ac:	je     41b5b9 <main@@Base+0xa76>
  41b5ae:	mov    rax,QWORD PTR [rbp-0x10]
  41b5b2:	mov    QWORD PTR [rax],0x0
  41b5b9:	mov    eax,0x0
  41b5be:	pop    rbp
  41b5bf:	ret    
  41b5c0:	push   rbp
  41b5c1:	mov    rbp,rsp
  41b5c4:	sub    rsp,0x20
  41b5c8:	mov    QWORD PTR [rbp-0x18],rdi
  41b5cc:	mov    QWORD PTR [rbp-0x20],rsi
  41b5d0:	mov    rdx,QWORD PTR [rbp-0x20]
  41b5d4:	mov    rax,QWORD PTR [rbp-0x18]
  41b5d8:	mov    esi,0x0
  41b5dd:	mov    rdi,rax
  41b5e0:	call   4061e0 <memchr@plt>
  41b5e5:	mov    QWORD PTR [rbp-0x8],rax
  41b5e9:	cmp    QWORD PTR [rbp-0x8],0x0
  41b5ee:	je     41b5fa <main@@Base+0xab7>
  41b5f0:	mov    rax,QWORD PTR [rbp-0x8]
  41b5f4:	sub    rax,QWORD PTR [rbp-0x18]
  41b5f8:	jmp    41b5fe <main@@Base+0xabb>
  41b5fa:	mov    rax,QWORD PTR [rbp-0x20]
  41b5fe:	leave  
  41b5ff:	ret    

000000000041b600 <flatcc_builder_default_alloc@@Base>:
  41b600:	endbr64 
  41b604:	push   rbp
  41b605:	mov    rbp,rsp
  41b608:	sub    rsp,0x30
  41b60c:	mov    QWORD PTR [rbp-0x18],rdi
  41b610:	mov    QWORD PTR [rbp-0x20],rsi
  41b614:	mov    QWORD PTR [rbp-0x28],rdx
  41b618:	mov    DWORD PTR [rbp-0x2c],ecx
  41b61b:	mov    DWORD PTR [rbp-0x30],r8d
  41b61f:	cmp    QWORD PTR [rbp-0x28],0x0
  41b624:	jne    41b662 <flatcc_builder_default_alloc@@Base+0x62>
  41b626:	mov    rax,QWORD PTR [rbp-0x20]
  41b62a:	mov    rax,QWORD PTR [rax]
  41b62d:	test   rax,rax
  41b630:	je     41b658 <flatcc_builder_default_alloc@@Base+0x58>
  41b632:	mov    rax,QWORD PTR [rbp-0x20]
  41b636:	mov    rax,QWORD PTR [rax]
  41b639:	mov    rdi,rax
  41b63c:	call   406160 <free@plt>
  41b641:	mov    rax,QWORD PTR [rbp-0x20]
  41b645:	mov    QWORD PTR [rax],0x0
  41b64c:	mov    rax,QWORD PTR [rbp-0x20]
  41b650:	mov    QWORD PTR [rax+0x8],0x0
  41b658:	mov    eax,0x0
  41b65d:	jmp    41b771 <flatcc_builder_default_alloc@@Base+0x171>
  41b662:	cmp    DWORD PTR [rbp-0x30],0x4
  41b666:	je     41b698 <flatcc_builder_default_alloc@@Base+0x98>
  41b668:	cmp    DWORD PTR [rbp-0x30],0x4
  41b66c:	jg     41b676 <flatcc_builder_default_alloc@@Base+0x76>
  41b66e:	cmp    DWORD PTR [rbp-0x30],0x1
  41b672:	je     41b684 <flatcc_builder_default_alloc@@Base+0x84>
  41b674:	jmp    41b6ac <flatcc_builder_default_alloc@@Base+0xac>
  41b676:	cmp    DWORD PTR [rbp-0x30],0x5
  41b67a:	je     41b68e <flatcc_builder_default_alloc@@Base+0x8e>
  41b67c:	cmp    DWORD PTR [rbp-0x30],0x7
  41b680:	je     41b6a2 <flatcc_builder_default_alloc@@Base+0xa2>
  41b682:	jmp    41b6ac <flatcc_builder_default_alloc@@Base+0xac>
  41b684:	mov    QWORD PTR [rbp-0x10],0x100
  41b68c:	jmp    41b6b5 <flatcc_builder_default_alloc@@Base+0xb5>
  41b68e:	mov    rax,QWORD PTR [rbp-0x28]
  41b692:	mov    QWORD PTR [rbp-0x10],rax
  41b696:	jmp    41b6b5 <flatcc_builder_default_alloc@@Base+0xb5>
  41b698:	mov    QWORD PTR [rbp-0x10],0x120
  41b6a0:	jmp    41b6b5 <flatcc_builder_default_alloc@@Base+0xb5>
  41b6a2:	mov    QWORD PTR [rbp-0x10],0x40
  41b6aa:	jmp    41b6b5 <flatcc_builder_default_alloc@@Base+0xb5>
  41b6ac:	mov    QWORD PTR [rbp-0x10],0x20
  41b6b4:	nop
  41b6b5:	jmp    41b6bb <flatcc_builder_default_alloc@@Base+0xbb>
  41b6b7:	shl    QWORD PTR [rbp-0x10],1
  41b6bb:	mov    rax,QWORD PTR [rbp-0x10]
  41b6bf:	cmp    rax,QWORD PTR [rbp-0x28]
  41b6c3:	jb     41b6b7 <flatcc_builder_default_alloc@@Base+0xb7>
  41b6c5:	mov    rax,QWORD PTR [rbp-0x20]
  41b6c9:	mov    rax,QWORD PTR [rax+0x8]
  41b6cd:	cmp    QWORD PTR [rbp-0x28],rax
  41b6d1:	ja     41b6ee <flatcc_builder_default_alloc@@Base+0xee>
  41b6d3:	mov    rax,QWORD PTR [rbp-0x20]
  41b6d7:	mov    rax,QWORD PTR [rax+0x8]
  41b6db:	shr    rax,1
  41b6de:	cmp    QWORD PTR [rbp-0x10],rax
  41b6e2:	ja     41b6ee <flatcc_builder_default_alloc@@Base+0xee>
  41b6e4:	mov    eax,0x0
  41b6e9:	jmp    41b771 <flatcc_builder_default_alloc@@Base+0x171>
  41b6ee:	mov    rax,QWORD PTR [rbp-0x20]
  41b6f2:	mov    rax,QWORD PTR [rax]
  41b6f5:	mov    rdx,QWORD PTR [rbp-0x10]
  41b6f9:	mov    rsi,rdx
  41b6fc:	mov    rdi,rax
  41b6ff:	call   406240 <realloc@plt>
  41b704:	mov    QWORD PTR [rbp-0x8],rax
  41b708:	cmp    QWORD PTR [rbp-0x8],0x0
  41b70d:	jne    41b716 <flatcc_builder_default_alloc@@Base+0x116>
  41b70f:	mov    eax,0xffffffff
  41b714:	jmp    41b771 <flatcc_builder_default_alloc@@Base+0x171>
  41b716:	cmp    DWORD PTR [rbp-0x2c],0x0
  41b71a:	je     41b755 <flatcc_builder_default_alloc@@Base+0x155>
  41b71c:	mov    rax,QWORD PTR [rbp-0x20]
  41b720:	mov    rax,QWORD PTR [rax+0x8]
  41b724:	cmp    QWORD PTR [rbp-0x10],rax
  41b728:	jbe    41b755 <flatcc_builder_default_alloc@@Base+0x155>
  41b72a:	mov    rax,QWORD PTR [rbp-0x20]
  41b72e:	mov    rax,QWORD PTR [rax+0x8]
  41b732:	mov    rdx,QWORD PTR [rbp-0x10]
  41b736:	sub    rdx,rax
  41b739:	mov    rax,QWORD PTR [rbp-0x20]
  41b73d:	mov    rcx,QWORD PTR [rax+0x8]
  41b741:	mov    rax,QWORD PTR [rbp-0x8]
  41b745:	add    rax,rcx
  41b748:	mov    esi,0x0
  41b74d:	mov    rdi,rax
  41b750:	call   4061c0 <memset@plt>
  41b755:	mov    rax,QWORD PTR [rbp-0x20]
  41b759:	mov    rdx,QWORD PTR [rbp-0x8]
  41b75d:	mov    QWORD PTR [rax],rdx
  41b760:	mov    rax,QWORD PTR [rbp-0x20]
  41b764:	mov    rdx,QWORD PTR [rbp-0x10]
  41b768:	mov    QWORD PTR [rax+0x8],rdx
  41b76c:	mov    eax,0x0
  41b771:	leave  
  41b772:	ret    
  41b773:	push   rbp
  41b774:	mov    rbp,rsp
  41b777:	mov    QWORD PTR [rbp-0x18],rdi
  41b77b:	mov    DWORD PTR [rbp-0x1c],esi
  41b77e:	mov    rax,QWORD PTR [rbp-0x18]
  41b782:	add    rax,0x58
  41b786:	add    rax,0x10
  41b78a:	mov    QWORD PTR [rbp-0x8],rax
  41b78e:	mov    rax,QWORD PTR [rbp-0x18]
  41b792:	mov    rdx,QWORD PTR [rax+0x68]
  41b796:	mov    rax,QWORD PTR [rbp-0x18]
  41b79a:	mov    eax,DWORD PTR [rax+0x28]
  41b79d:	mov    eax,eax
  41b79f:	add    rdx,rax
  41b7a2:	mov    rax,QWORD PTR [rbp-0x18]
  41b7a6:	mov    QWORD PTR [rax+0x18],rdx
  41b7aa:	mov    rax,QWORD PTR [rbp-0x8]
  41b7ae:	mov    rax,QWORD PTR [rax+0x8]
  41b7b2:	mov    edx,eax
  41b7b4:	mov    rax,QWORD PTR [rbp-0x18]
  41b7b8:	mov    eax,DWORD PTR [rax+0x28]
  41b7bb:	sub    edx,eax
  41b7bd:	mov    rax,QWORD PTR [rbp-0x18]
  41b7c1:	mov    DWORD PTR [rax+0x24],edx
  41b7c4:	mov    rax,QWORD PTR [rbp-0x18]
  41b7c8:	mov    eax,DWORD PTR [rax+0x24]
  41b7cb:	cmp    DWORD PTR [rbp-0x1c],eax
  41b7ce:	jae    41b7da <flatcc_builder_default_alloc@@Base+0x1da>
  41b7d0:	mov    rax,QWORD PTR [rbp-0x18]
  41b7d4:	mov    edx,DWORD PTR [rbp-0x1c]
  41b7d7:	mov    DWORD PTR [rax+0x24],edx
  41b7da:	mov    rax,QWORD PTR [rbp-0x18]
  41b7de:	mov    rax,QWORD PTR [rax+0x30]
  41b7e2:	mov    edx,DWORD PTR [rbp-0x1c]
  41b7e5:	mov    DWORD PTR [rax+0x4],edx
  41b7e8:	nop
  41b7e9:	pop    rbp
  41b7ea:	ret    
  41b7eb:	endbr64 
  41b7ef:	push   rbp
  41b7f0:	mov    rbp,rsp
  41b7f3:	sub    rsp,0x30
  41b7f7:	mov    QWORD PTR [rbp-0x18],rdi
  41b7fb:	mov    QWORD PTR [rbp-0x20],rsi
  41b7ff:	mov    DWORD PTR [rbp-0x24],edx
  41b802:	mov    rax,QWORD PTR [rbp-0x18]
  41b806:	add    rax,0x58
  41b80a:	add    rax,0x10
  41b80e:	mov    QWORD PTR [rbp-0x8],rax
  41b812:	mov    rax,QWORD PTR [rbp-0x18]
  41b816:	mov    rax,QWORD PTR [rax+0x50]
  41b81a:	mov    rdx,QWORD PTR [rbp-0x18]
  41b81e:	mov    edx,DWORD PTR [rdx+0x28]
  41b821:	mov    ecx,edx
  41b823:	mov    rdx,QWORD PTR [rbp-0x20]
  41b827:	lea    r9,[rcx+rdx*1]
  41b82b:	mov    rdx,QWORD PTR [rbp-0x18]
  41b82f:	mov    rdi,QWORD PTR [rdx+0x40]
  41b833:	mov    rsi,QWORD PTR [rbp-0x8]
  41b837:	mov    r8d,0x1
  41b83d:	mov    ecx,0x1
  41b842:	mov    rdx,r9
  41b845:	call   rax
  41b847:	test   eax,eax
  41b849:	je     41b852 <flatcc_builder_default_alloc@@Base+0x252>
  41b84b:	mov    eax,0xffffffff
  41b850:	jmp    41b868 <flatcc_builder_default_alloc@@Base+0x268>
  41b852:	mov    edx,DWORD PTR [rbp-0x24]
  41b855:	mov    rax,QWORD PTR [rbp-0x18]
  41b859:	mov    esi,edx
  41b85b:	mov    rdi,rax
  41b85e:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41b863:	mov    eax,0x0
  41b868:	leave  
  41b869:	ret    
  41b86a:	push   rbp
  41b86b:	mov    rbp,rsp
  41b86e:	sub    rsp,0x20
  41b872:	mov    QWORD PTR [rbp-0x18],rdi
  41b876:	mov    DWORD PTR [rbp-0x1c],esi
  41b879:	mov    rax,QWORD PTR [rbp-0x18]
  41b87d:	mov    eax,DWORD PTR [rax+0x20]
  41b880:	mov    eax,eax
  41b882:	mov    QWORD PTR [rbp-0x8],rax
  41b886:	mov    rax,QWORD PTR [rbp-0x18]
  41b88a:	mov    edx,DWORD PTR [rax+0x20]
  41b88d:	mov    eax,DWORD PTR [rbp-0x1c]
  41b890:	add    edx,eax
  41b892:	mov    rax,QWORD PTR [rbp-0x18]
  41b896:	mov    DWORD PTR [rax+0x20],edx
  41b899:	mov    rax,QWORD PTR [rbp-0x18]
  41b89d:	mov    edx,DWORD PTR [rax+0x20]
  41b8a0:	mov    rax,QWORD PTR [rbp-0x18]
  41b8a4:	mov    eax,DWORD PTR [rax+0x24]
  41b8a7:	cmp    edx,eax
  41b8a9:	jb     41b8d5 <flatcc_builder_default_alloc@@Base+0x2d5>
  41b8ab:	mov    rax,QWORD PTR [rbp-0x18]
  41b8af:	mov    eax,DWORD PTR [rax+0x20]
  41b8b2:	inc    eax
  41b8b4:	mov    ecx,eax
  41b8b6:	mov    rax,QWORD PTR [rbp-0x18]
  41b8ba:	mov    edx,0xfffffffc
  41b8bf:	mov    rsi,rcx
  41b8c2:	mov    rdi,rax
  41b8c5:	call   41b7eb <flatcc_builder_default_alloc@@Base+0x1eb>
  41b8ca:	test   eax,eax
  41b8cc:	je     41b8d5 <flatcc_builder_default_alloc@@Base+0x2d5>
  41b8ce:	mov    eax,0x0
  41b8d3:	jmp    41b8e4 <flatcc_builder_default_alloc@@Base+0x2e4>
  41b8d5:	mov    rax,QWORD PTR [rbp-0x18]
  41b8d9:	mov    rdx,QWORD PTR [rax+0x18]
  41b8dd:	mov    rax,QWORD PTR [rbp-0x8]
  41b8e1:	add    rax,rdx
  41b8e4:	leave  
  41b8e5:	ret    
  41b8e6:	push   rbp
  41b8e7:	mov    rbp,rsp
  41b8ea:	sub    rsp,0x10
  41b8ee:	mov    QWORD PTR [rbp-0x8],rdi
  41b8f2:	mov    DWORD PTR [rbp-0xc],esi
  41b8f5:	mov    rax,QWORD PTR [rbp-0x8]
  41b8f9:	mov    eax,DWORD PTR [rax+0x20]
  41b8fc:	sub    eax,DWORD PTR [rbp-0xc]
  41b8ff:	mov    edx,eax
  41b901:	mov    rax,QWORD PTR [rbp-0x8]
  41b905:	mov    DWORD PTR [rax+0x20],edx
  41b908:	mov    eax,DWORD PTR [rbp-0xc]
  41b90b:	mov    rdx,QWORD PTR [rbp-0x8]
  41b90f:	mov    rcx,QWORD PTR [rdx+0x18]
  41b913:	mov    rdx,QWORD PTR [rbp-0x8]
  41b917:	mov    edx,DWORD PTR [rdx+0x20]
  41b91a:	mov    edx,edx
  41b91c:	add    rcx,rdx
  41b91f:	mov    rdx,rax
  41b922:	mov    esi,0x0
  41b927:	mov    rdi,rcx
  41b92a:	call   4061c0 <memset@plt>
  41b92f:	nop
  41b930:	leave  
  41b931:	ret    
  41b932:	push   rbp
  41b933:	mov    rbp,rsp
  41b936:	sub    rsp,0x30
  41b93a:	mov    QWORD PTR [rbp-0x18],rdi
  41b93e:	mov    QWORD PTR [rbp-0x20],rsi
  41b942:	mov    DWORD PTR [rbp-0x24],edx
  41b945:	mov    edx,DWORD PTR [rbp-0x24]
  41b948:	mov    rax,QWORD PTR [rbp-0x18]
  41b94c:	mov    esi,edx
  41b94e:	mov    rdi,rax
  41b951:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41b956:	mov    QWORD PTR [rbp-0x8],rax
  41b95a:	cmp    QWORD PTR [rbp-0x8],0x0
  41b95f:	jne    41b968 <flatcc_builder_default_alloc@@Base+0x368>
  41b961:	mov    eax,0x0
  41b966:	jmp    41b982 <flatcc_builder_default_alloc@@Base+0x382>
  41b968:	mov    edx,DWORD PTR [rbp-0x24]
  41b96b:	mov    rcx,QWORD PTR [rbp-0x20]
  41b96f:	mov    rax,QWORD PTR [rbp-0x8]
  41b973:	mov    rsi,rcx
  41b976:	mov    rdi,rax
  41b979:	call   406220 <memcpy@plt>
  41b97e:	mov    rax,QWORD PTR [rbp-0x8]
  41b982:	leave  
  41b983:	ret    
  41b984:	push   rbp
  41b985:	mov    rbp,rsp
  41b988:	sub    rsp,0x30
  41b98c:	mov    QWORD PTR [rbp-0x18],rdi
  41b990:	mov    DWORD PTR [rbp-0x1c],esi
  41b993:	mov    eax,ecx
  41b995:	mov    WORD PTR [rbp-0x20],dx
  41b999:	mov    WORD PTR [rbp-0x24],ax
  41b99d:	mov    rax,QWORD PTR [rbp-0x18]
  41b9a1:	mov    edx,DWORD PTR [rax+0x20]
  41b9a4:	movzx  eax,WORD PTR [rbp-0x20]
  41b9a8:	add    eax,edx
  41b9aa:	lea    edx,[rax-0x1]
  41b9ad:	movzx  eax,WORD PTR [rbp-0x20]
  41b9b1:	neg    eax
  41b9b3:	and    eax,edx
  41b9b5:	mov    DWORD PTR [rbp-0x4],eax
  41b9b8:	mov    edx,DWORD PTR [rbp-0x4]
  41b9bb:	mov    eax,DWORD PTR [rbp-0x1c]
  41b9be:	add    edx,eax
  41b9c0:	mov    rax,QWORD PTR [rbp-0x18]
  41b9c4:	mov    DWORD PTR [rax+0x20],edx
  41b9c7:	mov    rax,QWORD PTR [rbp-0x18]
  41b9cb:	mov    edx,DWORD PTR [rax+0x20]
  41b9ce:	mov    rax,QWORD PTR [rbp-0x18]
  41b9d2:	mov    eax,DWORD PTR [rax+0x24]
  41b9d5:	cmp    edx,eax
  41b9d7:	jb     41ba03 <flatcc_builder_default_alloc@@Base+0x403>
  41b9d9:	mov    rax,QWORD PTR [rbp-0x18]
  41b9dd:	mov    eax,DWORD PTR [rax+0x20]
  41b9e0:	inc    eax
  41b9e2:	mov    ecx,eax
  41b9e4:	mov    rax,QWORD PTR [rbp-0x18]
  41b9e8:	mov    edx,0xfffc
  41b9ed:	mov    rsi,rcx
  41b9f0:	mov    rdi,rax
  41b9f3:	call   41b7eb <flatcc_builder_default_alloc@@Base+0x1eb>
  41b9f8:	test   eax,eax
  41b9fa:	je     41ba03 <flatcc_builder_default_alloc@@Base+0x403>
  41b9fc:	mov    eax,0x0
  41ba01:	jmp    41ba4a <flatcc_builder_default_alloc@@Base+0x44a>
  41ba03:	mov    eax,DWORD PTR [rbp-0x4]
  41ba06:	mov    ecx,eax
  41ba08:	mov    rax,QWORD PTR [rbp-0x18]
  41ba0c:	mov    rax,QWORD PTR [rax+0x8]
  41ba10:	movzx  edx,WORD PTR [rbp-0x24]
  41ba14:	add    rdx,rdx
  41ba17:	add    rdx,rax
  41ba1a:	lea    eax,[rcx+0x4]
  41ba1d:	mov    WORD PTR [rdx],ax
  41ba20:	mov    rax,QWORD PTR [rbp-0x18]
  41ba24:	movzx  eax,WORD PTR [rax+0x10]
  41ba28:	cmp    WORD PTR [rbp-0x24],ax
  41ba2c:	jb     41ba3c <flatcc_builder_default_alloc@@Base+0x43c>
  41ba2e:	movzx  eax,WORD PTR [rbp-0x24]
  41ba32:	inc    eax
  41ba34:	mov    rdx,QWORD PTR [rbp-0x18]
  41ba38:	mov    WORD PTR [rdx+0x10],ax
  41ba3c:	mov    rax,QWORD PTR [rbp-0x18]
  41ba40:	mov    rdx,QWORD PTR [rax+0x18]
  41ba44:	mov    eax,DWORD PTR [rbp-0x4]
  41ba47:	add    rax,rdx
  41ba4a:	leave  
  41ba4b:	ret    
  41ba4c:	push   rbp
  41ba4d:	mov    rbp,rsp
  41ba50:	sub    rsp,0x20
  41ba54:	mov    QWORD PTR [rbp-0x18],rdi
  41ba58:	mov    eax,esi
  41ba5a:	mov    WORD PTR [rbp-0x1c],ax
  41ba5e:	mov    rax,QWORD PTR [rbp-0x18]
  41ba62:	mov    eax,DWORD PTR [rax+0x20]
  41ba65:	add    eax,0x3
  41ba68:	and    eax,0xfffffffc
  41ba6b:	mov    DWORD PTR [rbp-0x4],eax
  41ba6e:	mov    eax,DWORD PTR [rbp-0x4]
  41ba71:	lea    edx,[rax+0x4]
  41ba74:	mov    rax,QWORD PTR [rbp-0x18]
  41ba78:	mov    DWORD PTR [rax+0x20],edx
  41ba7b:	mov    rax,QWORD PTR [rbp-0x18]
  41ba7f:	mov    edx,DWORD PTR [rax+0x20]
  41ba82:	mov    rax,QWORD PTR [rbp-0x18]
  41ba86:	mov    eax,DWORD PTR [rax+0x24]
  41ba89:	cmp    edx,eax
  41ba8b:	jbe    41bab5 <flatcc_builder_default_alloc@@Base+0x4b5>
  41ba8d:	mov    rax,QWORD PTR [rbp-0x18]
  41ba91:	mov    eax,DWORD PTR [rax+0x20]
  41ba94:	mov    ecx,eax
  41ba96:	mov    rax,QWORD PTR [rbp-0x18]
  41ba9a:	mov    edx,0xfffc
  41ba9f:	mov    rsi,rcx
  41baa2:	mov    rdi,rax
  41baa5:	call   41b7eb <flatcc_builder_default_alloc@@Base+0x1eb>
  41baaa:	test   eax,eax
  41baac:	je     41bab5 <flatcc_builder_default_alloc@@Base+0x4b5>
  41baae:	mov    eax,0x0
  41bab3:	jmp    41bb14 <flatcc_builder_default_alloc@@Base+0x514>
  41bab5:	mov    eax,DWORD PTR [rbp-0x4]
  41bab8:	mov    ecx,eax
  41baba:	mov    rax,QWORD PTR [rbp-0x18]
  41babe:	mov    rax,QWORD PTR [rax+0x8]
  41bac2:	movzx  edx,WORD PTR [rbp-0x1c]
  41bac6:	add    rdx,rdx
  41bac9:	add    rdx,rax
  41bacc:	lea    eax,[rcx+0x4]
  41bacf:	mov    WORD PTR [rdx],ax
  41bad2:	mov    rax,QWORD PTR [rbp-0x18]
  41bad6:	movzx  eax,WORD PTR [rax+0x10]
  41bada:	cmp    WORD PTR [rbp-0x1c],ax
  41bade:	jb     41baee <flatcc_builder_default_alloc@@Base+0x4ee>
  41bae0:	movzx  eax,WORD PTR [rbp-0x1c]
  41bae4:	inc    eax
  41bae6:	mov    rdx,QWORD PTR [rbp-0x18]
  41baea:	mov    WORD PTR [rdx+0x10],ax
  41baee:	mov    rax,QWORD PTR [rbp-0x18]
  41baf2:	mov    rax,QWORD PTR [rax]
  41baf5:	lea    rcx,[rax+0x2]
  41baf9:	mov    rdx,QWORD PTR [rbp-0x18]
  41bafd:	mov    QWORD PTR [rdx],rcx
  41bb00:	mov    edx,DWORD PTR [rbp-0x4]
  41bb03:	mov    WORD PTR [rax],dx
  41bb06:	mov    rax,QWORD PTR [rbp-0x18]
  41bb0a:	mov    rdx,QWORD PTR [rax+0x18]
  41bb0e:	mov    eax,DWORD PTR [rbp-0x4]
  41bb11:	add    rax,rdx
  41bb14:	leave  
  41bb15:	ret    
  41bb16:	push   rbp
  41bb17:	mov    rbp,rsp
  41bb1a:	sub    rsp,0x30
  41bb1e:	mov    QWORD PTR [rbp-0x18],rdi
  41bb22:	mov    DWORD PTR [rbp-0x1c],esi
  41bb25:	mov    QWORD PTR [rbp-0x28],rdx
  41bb29:	mov    QWORD PTR [rbp-0x30],rcx
  41bb2d:	mov    DWORD PTR [rbp-0x20],r8d
  41bb31:	mov    rax,QWORD PTR [rbp-0x18]
  41bb35:	lea    rdx,[rax+0x58]
  41bb39:	mov    eax,DWORD PTR [rbp-0x1c]
  41bb3c:	cdqe   
  41bb3e:	shl    rax,0x4
  41bb42:	add    rax,rdx
  41bb45:	mov    QWORD PTR [rbp-0x8],rax
  41bb49:	mov    rdx,QWORD PTR [rbp-0x28]
  41bb4d:	mov    rax,QWORD PTR [rbp-0x30]
  41bb51:	add    rdx,rax
  41bb54:	mov    rax,QWORD PTR [rbp-0x8]
  41bb58:	mov    rax,QWORD PTR [rax+0x8]
  41bb5c:	cmp    rdx,rax
  41bb5f:	jbe    41bbb4 <flatcc_builder_default_alloc@@Base+0x5b4>
  41bb61:	mov    rax,QWORD PTR [rbp-0x18]
  41bb65:	mov    rax,QWORD PTR [rax+0x50]
  41bb69:	mov    rcx,QWORD PTR [rbp-0x28]
  41bb6d:	mov    rdx,QWORD PTR [rbp-0x30]
  41bb71:	lea    r9,[rcx+rdx*1]
  41bb75:	mov    rdx,QWORD PTR [rbp-0x18]
  41bb79:	mov    rdi,QWORD PTR [rdx+0x40]
  41bb7d:	mov    ecx,DWORD PTR [rbp-0x1c]
  41bb80:	mov    edx,DWORD PTR [rbp-0x20]
  41bb83:	mov    rsi,QWORD PTR [rbp-0x8]
  41bb87:	mov    r8d,ecx
  41bb8a:	mov    ecx,edx
  41bb8c:	mov    rdx,r9
  41bb8f:	call   rax
  41bb91:	test   eax,eax
  41bb93:	je     41bbb4 <flatcc_builder_default_alloc@@Base+0x5b4>
  41bb95:	lea    rcx,[rip+0x1dd1c]        # 4398b8 <flatcc_builder_padding_base@@Base+0x658>
  41bb9c:	mov    edx,0x134
  41bba1:	lea    rsi,[rip+0x1d8b8]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41bba8:	lea    rdi,[rip+0x1d911]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41bbaf:	call   4061b0 <__assert_fail@plt>
  41bbb4:	mov    rax,QWORD PTR [rbp-0x8]
  41bbb8:	mov    rax,QWORD PTR [rax]
  41bbbb:	mov    rdx,rax
  41bbbe:	mov    rax,QWORD PTR [rbp-0x28]
  41bbc2:	add    rax,rdx
  41bbc5:	leave  
  41bbc6:	ret    
  41bbc7:	push   rbp
  41bbc8:	mov    rbp,rsp
  41bbcb:	sub    rsp,0x20
  41bbcf:	mov    QWORD PTR [rbp-0x18],rdi
  41bbd3:	mov    DWORD PTR [rbp-0x1c],esi
  41bbd6:	mov    rax,QWORD PTR [rbp-0x18]
  41bbda:	mov    rax,QWORD PTR [rax+0x30]
  41bbde:	mov    edx,DWORD PTR [rax+0x10]
  41bbe1:	mov    rax,QWORD PTR [rbp-0x18]
  41bbe5:	mov    rax,QWORD PTR [rax+0x30]
  41bbe9:	movzx  eax,WORD PTR [rax+0x1c]
  41bbed:	movzx  eax,ax
  41bbf0:	add    eax,eax
  41bbf2:	add    eax,edx
  41bbf4:	mov    DWORD PTR [rbp-0x8],eax
  41bbf7:	mov    eax,DWORD PTR [rbp-0x1c]
  41bbfa:	add    eax,0x2
  41bbfd:	cdqe   
  41bbff:	add    eax,eax
  41bc01:	mov    DWORD PTR [rbp-0x4],eax
  41bc04:	mov    ecx,DWORD PTR [rbp-0x4]
  41bc07:	mov    edx,DWORD PTR [rbp-0x8]
  41bc0a:	mov    rax,QWORD PTR [rbp-0x18]
  41bc0e:	mov    r8d,0x1
  41bc14:	mov    esi,0x0
  41bc19:	mov    rdi,rax
  41bc1c:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41bc21:	mov    rdx,rax
  41bc24:	mov    rax,QWORD PTR [rbp-0x18]
  41bc28:	mov    QWORD PTR [rax+0x8],rdx
  41bc2c:	mov    rax,QWORD PTR [rbp-0x18]
  41bc30:	mov    rax,QWORD PTR [rax+0x8]
  41bc34:	test   rax,rax
  41bc37:	jne    41bc40 <flatcc_builder_default_alloc@@Base+0x640>
  41bc39:	mov    eax,0xffffffff
  41bc3e:	jmp    41bcad <flatcc_builder_default_alloc@@Base+0x6ad>
  41bc40:	mov    rax,QWORD PTR [rbp-0x18]
  41bc44:	mov    rax,QWORD PTR [rax+0x8]
  41bc48:	lea    rdx,[rax+0x4]
  41bc4c:	mov    rax,QWORD PTR [rbp-0x18]
  41bc50:	mov    QWORD PTR [rax+0x8],rdx
  41bc54:	mov    rax,QWORD PTR [rbp-0x18]
  41bc58:	mov    rax,QWORD PTR [rax+0x30]
  41bc5c:	mov    eax,DWORD PTR [rax+0x14]
  41bc5f:	mov    DWORD PTR [rbp-0x8],eax
  41bc62:	mov    eax,DWORD PTR [rbp-0x1c]
  41bc65:	cdqe   
  41bc67:	add    eax,eax
  41bc69:	inc    eax
  41bc6b:	mov    DWORD PTR [rbp-0x4],eax
  41bc6e:	mov    ecx,DWORD PTR [rbp-0x4]
  41bc71:	mov    edx,DWORD PTR [rbp-0x8]
  41bc74:	mov    rax,QWORD PTR [rbp-0x18]
  41bc78:	mov    r8d,0x0
  41bc7e:	mov    esi,0x3
  41bc83:	mov    rdi,rax
  41bc86:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41bc8b:	mov    rdx,rax
  41bc8e:	mov    rax,QWORD PTR [rbp-0x18]
  41bc92:	mov    QWORD PTR [rax],rdx
  41bc95:	mov    rax,QWORD PTR [rbp-0x18]
  41bc99:	mov    rax,QWORD PTR [rax]
  41bc9c:	test   rax,rax
  41bc9f:	jne    41bca8 <flatcc_builder_default_alloc@@Base+0x6a8>
  41bca1:	mov    eax,0xffffffff
  41bca6:	jmp    41bcad <flatcc_builder_default_alloc@@Base+0x6ad>
  41bca8:	mov    eax,0x0
  41bcad:	leave  
  41bcae:	ret    
  41bcaf:	endbr64 
  41bcb3:	push   rbp
  41bcb4:	mov    rbp,rsp
  41bcb7:	sub    rsp,0x30
  41bcbb:	mov    QWORD PTR [rbp-0x28],rdi
  41bcbf:	mov    rax,QWORD PTR [rbp-0x28]
  41bcc3:	add    rax,0x58
  41bcc7:	add    rax,0x50
  41bccb:	mov    QWORD PTR [rbp-0x8],rax
  41bccf:	mov    rax,QWORD PTR [rbp-0x28]
  41bcd3:	mov    eax,DWORD PTR [rax+0xe4]
  41bcd9:	test   eax,eax
  41bcdb:	je     41bcfc <flatcc_builder_default_alloc@@Base+0x6fc>
  41bcdd:	lea    rcx,[rip+0x1dbc4]        # 4398a8 <flatcc_builder_padding_base@@Base+0x648>
  41bce4:	mov    edx,0x156
  41bce9:	lea    rsi,[rip+0x1d770]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41bcf0:	lea    rdi,[rip+0x1d7cb]        # 4394c2 <flatcc_builder_padding_base@@Base+0x262>
  41bcf7:	call   4061b0 <__assert_fail@plt>
  41bcfc:	mov    rax,QWORD PTR [rbp-0x28]
  41bd00:	mov    eax,DWORD PTR [rax+0xe4]
  41bd06:	mov    edx,eax
  41bd08:	mov    rax,QWORD PTR [rbp-0x28]
  41bd0c:	mov    r8d,0x0
  41bd12:	mov    ecx,0x10
  41bd17:	mov    esi,0x6
  41bd1c:	mov    rdi,rax
  41bd1f:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41bd24:	test   rax,rax
  41bd27:	jne    41bd33 <flatcc_builder_default_alloc@@Base+0x733>
  41bd29:	mov    eax,0xffffffff
  41bd2e:	jmp    41bdd4 <flatcc_builder_default_alloc@@Base+0x7d4>
  41bd33:	mov    rax,QWORD PTR [rbp-0x28]
  41bd37:	mov    DWORD PTR [rax+0xe4],0x10
  41bd41:	mov    QWORD PTR [rbp-0x18],0x100
  41bd49:	mov    rax,QWORD PTR [rbp-0x28]
  41bd4d:	mov    rax,QWORD PTR [rax+0x50]
  41bd51:	mov    rdx,QWORD PTR [rbp-0x28]
  41bd55:	mov    rdi,QWORD PTR [rdx+0x40]
  41bd59:	mov    rdx,QWORD PTR [rbp-0x18]
  41bd5d:	mov    rsi,QWORD PTR [rbp-0x8]
  41bd61:	mov    r8d,0x5
  41bd67:	mov    ecx,0x1
  41bd6c:	call   rax
  41bd6e:	test   eax,eax
  41bd70:	je     41bd7d <flatcc_builder_default_alloc@@Base+0x77d>
  41bd72:	mov    eax,0xffffffff
  41bd77:	jmp    41bdd4 <flatcc_builder_default_alloc@@Base+0x7d4>
  41bd79:	shl    QWORD PTR [rbp-0x18],1
  41bd7d:	mov    rax,QWORD PTR [rbp-0x18]
  41bd81:	lea    rdx,[rax+rax*1]
  41bd85:	mov    rax,QWORD PTR [rbp-0x8]
  41bd89:	mov    rax,QWORD PTR [rax+0x8]
  41bd8d:	cmp    rdx,rax
  41bd90:	jbe    41bd79 <flatcc_builder_default_alloc@@Base+0x779>
  41bd92:	mov    rax,QWORD PTR [rbp-0x18]
  41bd96:	shr    rax,0x2
  41bd9a:	mov    QWORD PTR [rbp-0x18],rax
  41bd9e:	mov    QWORD PTR [rbp-0x10],0x0
  41bda6:	jmp    41bdac <flatcc_builder_default_alloc@@Base+0x7ac>
  41bda8:	inc    QWORD PTR [rbp-0x10]
  41bdac:	mov    rax,QWORD PTR [rbp-0x10]
  41bdb0:	mov    edx,0x1
  41bdb5:	shlx   rax,rdx,rax
  41bdba:	cmp    QWORD PTR [rbp-0x18],rax
  41bdbe:	ja     41bda8 <flatcc_builder_default_alloc@@Base+0x7a8>
  41bdc0:	mov    rax,QWORD PTR [rbp-0x28]
  41bdc4:	mov    rdx,QWORD PTR [rbp-0x10]
  41bdc8:	mov    QWORD PTR [rax+0xd8],rdx
  41bdcf:	mov    eax,0x0
  41bdd4:	leave  
  41bdd5:	ret    
  41bdd6:	push   rbp
  41bdd7:	mov    rbp,rsp
  41bdda:	sub    rsp,0x20
  41bdde:	mov    QWORD PTR [rbp-0x18],rdi
  41bde2:	mov    DWORD PTR [rbp-0x1c],esi
  41bde5:	mov    rax,QWORD PTR [rbp-0x18]
  41bde9:	mov    rax,QWORD PTR [rax+0xd8]
  41bdf0:	test   rax,rax
  41bdf3:	jne    41be0c <flatcc_builder_default_alloc@@Base+0x80c>
  41bdf5:	mov    rax,QWORD PTR [rbp-0x18]
  41bdf9:	mov    rdi,rax
  41bdfc:	call   41bcaf <flatcc_builder_default_alloc@@Base+0x6af>
  41be01:	test   eax,eax
  41be03:	je     41be0c <flatcc_builder_default_alloc@@Base+0x80c>
  41be05:	mov    eax,0x0
  41be0a:	jmp    41be48 <flatcc_builder_default_alloc@@Base+0x848>
  41be0c:	mov    rax,QWORD PTR [rbp-0x18]
  41be10:	mov    rax,QWORD PTR [rax+0xa8]
  41be17:	mov    QWORD PTR [rbp-0x8],rax
  41be1b:	mov    rax,QWORD PTR [rbp-0x18]
  41be1f:	mov    rax,QWORD PTR [rax+0xd8]
  41be26:	mov    edx,0x20
  41be2b:	sub    edx,eax
  41be2d:	mov    eax,edx
  41be2f:	mov    edx,DWORD PTR [rbp-0x1c]
  41be32:	shrx   eax,edx,eax
  41be37:	mov    eax,eax
  41be39:	lea    rdx,[rax*4+0x0]
  41be41:	mov    rax,QWORD PTR [rbp-0x8]
  41be45:	add    rax,rdx
  41be48:	leave  
  41be49:	ret    

000000000041be4a <flatcc_builder_flush_vtable_cache@@Base>:
  41be4a:	endbr64 
  41be4e:	push   rbp
  41be4f:	mov    rbp,rsp
  41be52:	sub    rsp,0x20
  41be56:	mov    QWORD PTR [rbp-0x18],rdi
  41be5a:	mov    rax,QWORD PTR [rbp-0x18]
  41be5e:	add    rax,0x58
  41be62:	add    rax,0x50
  41be66:	mov    QWORD PTR [rbp-0x8],rax
  41be6a:	mov    rax,QWORD PTR [rbp-0x18]
  41be6e:	mov    rax,QWORD PTR [rax+0xd8]
  41be75:	test   rax,rax
  41be78:	je     41beb4 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  41be7a:	mov    rax,QWORD PTR [rbp-0x8]
  41be7e:	mov    rdx,QWORD PTR [rax+0x8]
  41be82:	mov    rax,QWORD PTR [rbp-0x8]
  41be86:	mov    rax,QWORD PTR [rax]
  41be89:	mov    esi,0x0
  41be8e:	mov    rdi,rax
  41be91:	call   4061c0 <memset@plt>
  41be96:	mov    rax,QWORD PTR [rbp-0x18]
  41be9a:	mov    DWORD PTR [rax+0xe4],0x10
  41bea4:	mov    rax,QWORD PTR [rbp-0x18]
  41bea8:	mov    DWORD PTR [rax+0xe0],0x0
  41beb2:	jmp    41beb5 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  41beb4:	nop
  41beb5:	leave  
  41beb6:	ret    

000000000041beb7 <flatcc_builder_custom_init@@Base>:
  41beb7:	endbr64 
  41bebb:	push   rbp
  41bebc:	mov    rbp,rsp
  41bebf:	sub    rsp,0x30
  41bec3:	mov    QWORD PTR [rbp-0x8],rdi
  41bec7:	mov    QWORD PTR [rbp-0x10],rsi
  41becb:	mov    QWORD PTR [rbp-0x18],rdx
  41becf:	mov    QWORD PTR [rbp-0x20],rcx
  41bed3:	mov    QWORD PTR [rbp-0x28],r8
  41bed7:	mov    rax,QWORD PTR [rbp-0x8]
  41bedb:	mov    edx,0x188
  41bee0:	mov    esi,0x0
  41bee5:	mov    rdi,rax
  41bee8:	call   4061c0 <memset@plt>
  41beed:	cmp    QWORD PTR [rbp-0x10],0x0
  41bef2:	jne    41bf1b <flatcc_builder_custom_init@@Base+0x64>
  41bef4:	mov    rax,QWORD PTR [rbp-0x8]
  41bef8:	mov    DWORD PTR [rax+0x128],0x1
  41bf02:	mov    rax,0x421454
  41bf09:	mov    QWORD PTR [rbp-0x10],rax
  41bf0d:	mov    rax,QWORD PTR [rbp-0x8]
  41bf11:	add    rax,0x130
  41bf17:	mov    QWORD PTR [rbp-0x18],rax
  41bf1b:	cmp    QWORD PTR [rbp-0x20],0x0
  41bf20:	jne    41bf2d <flatcc_builder_custom_init@@Base+0x76>
  41bf22:	mov    rax,0x41b600
  41bf29:	mov    QWORD PTR [rbp-0x20],rax
  41bf2d:	mov    rax,QWORD PTR [rbp-0x8]
  41bf31:	mov    rdx,QWORD PTR [rbp-0x28]
  41bf35:	mov    QWORD PTR [rax+0x40],rdx
  41bf39:	mov    rax,QWORD PTR [rbp-0x8]
  41bf3d:	mov    rdx,QWORD PTR [rbp-0x20]
  41bf41:	mov    QWORD PTR [rax+0x50],rdx
  41bf45:	mov    rax,QWORD PTR [rbp-0x8]
  41bf49:	mov    rdx,QWORD PTR [rbp-0x18]
  41bf4d:	mov    QWORD PTR [rax+0x38],rdx
  41bf51:	mov    rax,QWORD PTR [rbp-0x8]
  41bf55:	mov    rdx,QWORD PTR [rbp-0x10]
  41bf59:	mov    QWORD PTR [rax+0x48],rdx
  41bf5d:	mov    eax,0x0
  41bf62:	leave  
  41bf63:	ret    

000000000041bf64 <flatcc_builder_init@@Base>:
  41bf64:	endbr64 
  41bf68:	push   rbp
  41bf69:	mov    rbp,rsp
  41bf6c:	sub    rsp,0x10
  41bf70:	mov    QWORD PTR [rbp-0x8],rdi
  41bf74:	mov    rax,QWORD PTR [rbp-0x8]
  41bf78:	mov    r8d,0x0
  41bf7e:	mov    ecx,0x0
  41bf83:	mov    edx,0x0
  41bf88:	mov    esi,0x0
  41bf8d:	mov    rdi,rax
  41bf90:	call   41beb7 <flatcc_builder_custom_init@@Base>
  41bf95:	leave  
  41bf96:	ret    

000000000041bf97 <flatcc_builder_custom_reset@@Base>:
  41bf97:	endbr64 
  41bf9b:	push   rbp
  41bf9c:	mov    rbp,rsp
  41bf9f:	sub    rsp,0x20
  41bfa3:	mov    QWORD PTR [rbp-0x18],rdi
  41bfa7:	mov    DWORD PTR [rbp-0x1c],esi
  41bfaa:	mov    DWORD PTR [rbp-0x20],edx
  41bfad:	mov    DWORD PTR [rbp-0xc],0x0
  41bfb4:	jmp    41c06a <flatcc_builder_custom_reset@@Base+0xd3>
  41bfb9:	mov    rax,QWORD PTR [rbp-0x18]
  41bfbd:	lea    rdx,[rax+0x58]
  41bfc1:	mov    eax,DWORD PTR [rbp-0xc]
  41bfc4:	cdqe   
  41bfc6:	shl    rax,0x4
  41bfca:	add    rax,rdx
  41bfcd:	mov    QWORD PTR [rbp-0x8],rax
  41bfd1:	mov    rax,QWORD PTR [rbp-0x8]
  41bfd5:	mov    rax,QWORD PTR [rax]
  41bfd8:	test   rax,rax
  41bfdb:	je     41c03b <flatcc_builder_custom_reset@@Base+0xa4>
  41bfdd:	cmp    DWORD PTR [rbp-0xc],0x5
  41bfe1:	je     41c01d <flatcc_builder_custom_reset@@Base+0x86>
  41bfe3:	cmp    DWORD PTR [rbp-0x20],0x0
  41bfe7:	je     41c01d <flatcc_builder_custom_reset@@Base+0x86>
  41bfe9:	mov    rax,QWORD PTR [rbp-0x18]
  41bfed:	mov    rax,QWORD PTR [rax+0x50]
  41bff1:	mov    rdx,QWORD PTR [rbp-0x18]
  41bff5:	mov    rdi,QWORD PTR [rdx+0x40]
  41bff9:	mov    edx,DWORD PTR [rbp-0xc]
  41bffc:	mov    rsi,QWORD PTR [rbp-0x8]
  41c000:	mov    r8d,edx
  41c003:	mov    ecx,0x1
  41c008:	mov    edx,0x1
  41c00d:	call   rax
  41c00f:	test   eax,eax
  41c011:	je     41c01d <flatcc_builder_custom_reset@@Base+0x86>
  41c013:	mov    eax,0xffffffff
  41c018:	jmp    41c1a9 <flatcc_builder_custom_reset@@Base+0x212>
  41c01d:	mov    rax,QWORD PTR [rbp-0x8]
  41c021:	mov    rdx,QWORD PTR [rax+0x8]
  41c025:	mov    rax,QWORD PTR [rbp-0x8]
  41c029:	mov    rax,QWORD PTR [rax]
  41c02c:	mov    esi,0x0
  41c031:	mov    rdi,rax
  41c034:	call   4061c0 <memset@plt>
  41c039:	jmp    41c067 <flatcc_builder_custom_reset@@Base+0xd0>
  41c03b:	mov    rax,QWORD PTR [rbp-0x8]
  41c03f:	mov    rax,QWORD PTR [rax+0x8]
  41c043:	test   rax,rax
  41c046:	je     41c067 <flatcc_builder_custom_reset@@Base+0xd0>
  41c048:	lea    rcx,[rip+0x1d881]        # 4398d0 <flatcc_builder_padding_base@@Base+0x670>
  41c04f:	mov    edx,0x1b2
  41c054:	lea    rsi,[rip+0x1d405]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c05b:	lea    rdi,[rip+0x1d46f]        # 4394d1 <flatcc_builder_padding_base@@Base+0x271>
  41c062:	call   4061b0 <__assert_fail@plt>
  41c067:	inc    DWORD PTR [rbp-0xc]
  41c06a:	cmp    DWORD PTR [rbp-0xc],0x7
  41c06e:	jle    41bfb9 <flatcc_builder_custom_reset@@Base+0x22>
  41c074:	mov    rax,QWORD PTR [rbp-0x18]
  41c078:	mov    DWORD PTR [rax+0xe0],0x0
  41c082:	mov    rax,QWORD PTR [rbp-0x18]
  41c086:	mov    eax,DWORD PTR [rax+0xe4]
  41c08c:	test   eax,eax
  41c08e:	je     41c09e <flatcc_builder_custom_reset@@Base+0x107>
  41c090:	mov    rax,QWORD PTR [rbp-0x18]
  41c094:	mov    DWORD PTR [rax+0xe4],0x10
  41c09e:	mov    rax,QWORD PTR [rbp-0x18]
  41c0a2:	mov    WORD PTR [rax+0xe8],0x0
  41c0ab:	mov    rax,QWORD PTR [rbp-0x18]
  41c0af:	mov    DWORD PTR [rax+0xf0],0x0
  41c0b9:	mov    rax,QWORD PTR [rbp-0x18]
  41c0bd:	mov    DWORD PTR [rax+0xf4],0x0
  41c0c7:	mov    rax,QWORD PTR [rbp-0x18]
  41c0cb:	mov    DWORD PTR [rax+0x104],0x0
  41c0d5:	mov    rax,QWORD PTR [rbp-0x18]
  41c0d9:	mov    DWORD PTR [rax+0x108],0x0
  41c0e3:	mov    rax,QWORD PTR [rbp-0x18]
  41c0e7:	mov    DWORD PTR [rax+0x20],0x0
  41c0ee:	mov    rax,QWORD PTR [rbp-0x18]
  41c0f2:	mov    DWORD PTR [rax+0x24],0x0
  41c0f9:	mov    rax,QWORD PTR [rbp-0x18]
  41c0fd:	mov    DWORD PTR [rax+0xfc],0x0
  41c107:	mov    rax,QWORD PTR [rbp-0x18]
  41c10b:	mov    DWORD PTR [rax+0x100],0x0
  41c115:	mov    rax,QWORD PTR [rbp-0x18]
  41c119:	mov    rdx,QWORD PTR [rax+0x68]
  41c11d:	mov    rax,QWORD PTR [rbp-0x18]
  41c121:	mov    QWORD PTR [rax+0x18],rdx
  41c125:	mov    rax,QWORD PTR [rbp-0x18]
  41c129:	mov    rdx,QWORD PTR [rax+0x88]
  41c130:	mov    rax,QWORD PTR [rbp-0x18]
  41c134:	mov    QWORD PTR [rax],rdx
  41c137:	mov    rax,QWORD PTR [rbp-0x18]
  41c13b:	mov    rdx,QWORD PTR [rax+0x58]
  41c13f:	mov    rax,QWORD PTR [rbp-0x18]
  41c143:	mov    QWORD PTR [rax+0x8],rdx
  41c147:	mov    rax,QWORD PTR [rbp-0x18]
  41c14b:	mov    QWORD PTR [rax+0x30],0x0
  41c153:	cmp    DWORD PTR [rbp-0x1c],0x0
  41c157:	je     41c184 <flatcc_builder_custom_reset@@Base+0x1ed>
  41c159:	mov    rax,QWORD PTR [rbp-0x18]
  41c15d:	mov    QWORD PTR [rax+0x118],0x0
  41c168:	mov    rax,QWORD PTR [rbp-0x18]
  41c16c:	mov    DWORD PTR [rax+0x120],0x0
  41c176:	mov    rax,QWORD PTR [rbp-0x18]
  41c17a:	mov    DWORD PTR [rax+0x124],0x0
  41c184:	mov    rax,QWORD PTR [rbp-0x18]
  41c188:	mov    eax,DWORD PTR [rax+0x128]
  41c18e:	test   eax,eax
  41c190:	je     41c1a4 <flatcc_builder_custom_reset@@Base+0x20d>
  41c192:	mov    rax,QWORD PTR [rbp-0x18]
  41c196:	add    rax,0x130
  41c19c:	mov    rdi,rax
  41c19f:	call   42122f <flatcc_emitter_reset@@Base>
  41c1a4:	mov    eax,0x0
  41c1a9:	leave  
  41c1aa:	ret    

000000000041c1ab <flatcc_builder_reset@@Base>:
  41c1ab:	endbr64 
  41c1af:	push   rbp
  41c1b0:	mov    rbp,rsp
  41c1b3:	sub    rsp,0x10
  41c1b7:	mov    QWORD PTR [rbp-0x8],rdi
  41c1bb:	mov    rax,QWORD PTR [rbp-0x8]
  41c1bf:	mov    edx,0x0
  41c1c4:	mov    esi,0x0
  41c1c9:	mov    rdi,rax
  41c1cc:	call   41bf97 <flatcc_builder_custom_reset@@Base>
  41c1d1:	leave  
  41c1d2:	ret    

000000000041c1d3 <flatcc_builder_clear@@Base>:
  41c1d3:	endbr64 
  41c1d7:	push   rbp
  41c1d8:	mov    rbp,rsp
  41c1db:	sub    rsp,0x20
  41c1df:	mov    QWORD PTR [rbp-0x18],rdi
  41c1e3:	mov    DWORD PTR [rbp-0xc],0x0
  41c1ea:	jmp    41c22d <flatcc_builder_clear@@Base+0x5a>
  41c1ec:	mov    rax,QWORD PTR [rbp-0x18]
  41c1f0:	lea    rdx,[rax+0x58]
  41c1f4:	mov    eax,DWORD PTR [rbp-0xc]
  41c1f7:	cdqe   
  41c1f9:	shl    rax,0x4
  41c1fd:	add    rax,rdx
  41c200:	mov    QWORD PTR [rbp-0x8],rax
  41c204:	mov    rax,QWORD PTR [rbp-0x18]
  41c208:	mov    rax,QWORD PTR [rax+0x50]
  41c20c:	mov    rdx,QWORD PTR [rbp-0x18]
  41c210:	mov    rdi,QWORD PTR [rdx+0x40]
  41c214:	mov    edx,DWORD PTR [rbp-0xc]
  41c217:	mov    rsi,QWORD PTR [rbp-0x8]
  41c21b:	mov    r8d,edx
  41c21e:	mov    ecx,0x0
  41c223:	mov    edx,0x0
  41c228:	call   rax
  41c22a:	inc    DWORD PTR [rbp-0xc]
  41c22d:	cmp    DWORD PTR [rbp-0xc],0x7
  41c231:	jle    41c1ec <flatcc_builder_clear@@Base+0x19>
  41c233:	mov    rax,QWORD PTR [rbp-0x18]
  41c237:	mov    eax,DWORD PTR [rax+0x128]
  41c23d:	test   eax,eax
  41c23f:	je     41c253 <flatcc_builder_clear@@Base+0x80>
  41c241:	mov    rax,QWORD PTR [rbp-0x18]
  41c245:	add    rax,0x130
  41c24b:	mov    rdi,rax
  41c24e:	call   4213c1 <flatcc_emitter_clear@@Base>
  41c253:	mov    rax,QWORD PTR [rbp-0x18]
  41c257:	mov    edx,0x188
  41c25c:	mov    esi,0x0
  41c261:	mov    rdi,rax
  41c264:	call   4061c0 <memset@plt>
  41c269:	nop
  41c26a:	leave  
  41c26b:	ret    
  41c26c:	push   rbp
  41c26d:	mov    rbp,rsp
  41c270:	mov    QWORD PTR [rbp-0x8],rdi
  41c274:	mov    eax,esi
  41c276:	mov    WORD PTR [rbp-0xc],ax
  41c27a:	mov    rax,QWORD PTR [rbp-0x8]
  41c27e:	movzx  eax,WORD PTR [rax+0xe8]
  41c285:	cmp    WORD PTR [rbp-0xc],ax
  41c289:	jbe    41c29a <flatcc_builder_clear@@Base+0xc7>
  41c28b:	mov    rdx,QWORD PTR [rbp-0x8]
  41c28f:	movzx  eax,WORD PTR [rbp-0xc]
  41c293:	mov    WORD PTR [rdx+0xe8],ax
  41c29a:	nop
  41c29b:	pop    rbp
  41c29c:	ret    
  41c29d:	push   rbp
  41c29e:	mov    rbp,rsp
  41c2a1:	mov    QWORD PTR [rbp-0x8],rdi
  41c2a5:	mov    eax,esi
  41c2a7:	mov    WORD PTR [rbp-0xc],ax
  41c2ab:	mov    rax,QWORD PTR [rbp-0x8]
  41c2af:	movzx  eax,WORD PTR [rax]
  41c2b2:	cmp    WORD PTR [rbp-0xc],ax
  41c2b6:	jbe    41c2c3 <flatcc_builder_clear@@Base+0xf0>
  41c2b8:	mov    rdx,QWORD PTR [rbp-0x8]
  41c2bc:	movzx  eax,WORD PTR [rbp-0xc]
  41c2c0:	mov    WORD PTR [rdx],ax
  41c2c3:	nop
  41c2c4:	pop    rbp
  41c2c5:	ret    

000000000041c2c6 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41c2c6:	endbr64 
  41c2ca:	push   rbp
  41c2cb:	mov    rbp,rsp
  41c2ce:	sub    rsp,0x20
  41c2d2:	mov    QWORD PTR [rbp-0x18],rdi
  41c2d6:	mov    QWORD PTR [rbp-0x20],rsi
  41c2da:	mov    rax,QWORD PTR [rbp-0x20]
  41c2de:	add    rax,0x7
  41c2e2:	and    rax,0xfffffffffffffff8
  41c2e6:	add    rax,0x8
  41c2ea:	mov    QWORD PTR [rbp-0x20],rax
  41c2ee:	mov    rax,QWORD PTR [rbp-0x18]
  41c2f2:	mov    rdx,QWORD PTR [rax+0x180]
  41c2f9:	mov    rcx,QWORD PTR [rbp-0x20]
  41c2fd:	mov    rax,QWORD PTR [rbp-0x18]
  41c301:	mov    r8d,0x0
  41c307:	mov    esi,0x7
  41c30c:	mov    rdi,rax
  41c30f:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41c314:	mov    QWORD PTR [rbp-0x8],rax
  41c318:	cmp    QWORD PTR [rbp-0x8],0x0
  41c31d:	jne    41c326 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  41c31f:	mov    eax,0x0
  41c324:	jmp    41c390 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  41c326:	mov    rdx,QWORD PTR [rbp-0x20]
  41c32a:	mov    rax,QWORD PTR [rbp-0x8]
  41c32e:	mov    esi,0x0
  41c333:	mov    rdi,rax
  41c336:	call   4061c0 <memset@plt>
  41c33b:	mov    rax,QWORD PTR [rbp-0x8]
  41c33f:	lea    rdx,[rax+0x8]
  41c343:	mov    QWORD PTR [rbp-0x8],rdx
  41c347:	mov    rdx,QWORD PTR [rbp-0x18]
  41c34b:	mov    rdx,QWORD PTR [rdx+0x178]
  41c352:	mov    QWORD PTR [rax],rdx
  41c355:	mov    rax,QWORD PTR [rbp-0x18]
  41c359:	mov    rax,QWORD PTR [rax+0x180]
  41c360:	lea    rdx,[rax+0x8]
  41c364:	mov    rax,QWORD PTR [rbp-0x18]
  41c368:	mov    QWORD PTR [rax+0x178],rdx
  41c36f:	mov    rax,QWORD PTR [rbp-0x18]
  41c373:	mov    rdx,QWORD PTR [rax+0x180]
  41c37a:	mov    rax,QWORD PTR [rbp-0x20]
  41c37e:	add    rdx,rax
  41c381:	mov    rax,QWORD PTR [rbp-0x18]
  41c385:	mov    QWORD PTR [rax+0x180],rdx
  41c38c:	mov    rax,QWORD PTR [rbp-0x8]
  41c390:	leave  
  41c391:	ret    

000000000041c392 <flatcc_builder_enter_user_frame@@Base>:
  41c392:	endbr64 
  41c396:	push   rbp
  41c397:	mov    rbp,rsp
  41c39a:	sub    rsp,0x20
  41c39e:	mov    QWORD PTR [rbp-0x18],rdi
  41c3a2:	mov    QWORD PTR [rbp-0x20],rsi
  41c3a6:	mov    rax,QWORD PTR [rbp-0x20]
  41c3aa:	add    rax,0x7
  41c3ae:	and    rax,0xfffffffffffffff8
  41c3b2:	add    rax,0x8
  41c3b6:	mov    QWORD PTR [rbp-0x20],rax
  41c3ba:	mov    rax,QWORD PTR [rbp-0x18]
  41c3be:	mov    rdx,QWORD PTR [rax+0x180]
  41c3c5:	mov    rcx,QWORD PTR [rbp-0x20]
  41c3c9:	mov    rax,QWORD PTR [rbp-0x18]
  41c3cd:	mov    r8d,0x0
  41c3d3:	mov    esi,0x7
  41c3d8:	mov    rdi,rax
  41c3db:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41c3e0:	mov    QWORD PTR [rbp-0x8],rax
  41c3e4:	cmp    QWORD PTR [rbp-0x8],0x0
  41c3e9:	jne    41c3f2 <flatcc_builder_enter_user_frame@@Base+0x60>
  41c3eb:	mov    eax,0x0
  41c3f0:	jmp    41c463 <flatcc_builder_enter_user_frame@@Base+0xd1>
  41c3f2:	mov    rdx,QWORD PTR [rbp-0x20]
  41c3f6:	mov    rax,QWORD PTR [rbp-0x8]
  41c3fa:	mov    esi,0x0
  41c3ff:	mov    rdi,rax
  41c402:	call   4061c0 <memset@plt>
  41c407:	mov    rax,QWORD PTR [rbp-0x8]
  41c40b:	lea    rdx,[rax+0x8]
  41c40f:	mov    QWORD PTR [rbp-0x8],rdx
  41c413:	mov    rdx,QWORD PTR [rbp-0x18]
  41c417:	mov    rdx,QWORD PTR [rdx+0x178]
  41c41e:	mov    QWORD PTR [rax],rdx
  41c421:	mov    rax,QWORD PTR [rbp-0x18]
  41c425:	mov    rax,QWORD PTR [rax+0x180]
  41c42c:	lea    rdx,[rax+0x8]
  41c430:	mov    rax,QWORD PTR [rbp-0x18]
  41c434:	mov    QWORD PTR [rax+0x178],rdx
  41c43b:	mov    rax,QWORD PTR [rbp-0x18]
  41c43f:	mov    rdx,QWORD PTR [rax+0x180]
  41c446:	mov    rax,QWORD PTR [rbp-0x20]
  41c44a:	add    rdx,rax
  41c44d:	mov    rax,QWORD PTR [rbp-0x18]
  41c451:	mov    QWORD PTR [rax+0x180],rdx
  41c458:	mov    rax,QWORD PTR [rbp-0x18]
  41c45c:	mov    rax,QWORD PTR [rax+0x178]
  41c463:	leave  
  41c464:	ret    

000000000041c465 <flatcc_builder_exit_user_frame@@Base>:
  41c465:	endbr64 
  41c469:	push   rbp
  41c46a:	mov    rbp,rsp
  41c46d:	sub    rsp,0x20
  41c471:	mov    QWORD PTR [rbp-0x18],rdi
  41c475:	mov    rax,QWORD PTR [rbp-0x18]
  41c479:	mov    rax,QWORD PTR [rax+0x178]
  41c480:	test   rax,rax
  41c483:	jne    41c4a4 <flatcc_builder_exit_user_frame@@Base+0x3f>
  41c485:	lea    rcx,[rip+0x1d464]        # 4398f0 <flatcc_builder_padding_base@@Base+0x690>
  41c48c:	mov    edx,0x21e
  41c491:	lea    rsi,[rip+0x1cfc8]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c498:	lea    rdi,[rip+0x1d044]        # 4394e3 <flatcc_builder_padding_base@@Base+0x283>
  41c49f:	call   4061b0 <__assert_fail@plt>
  41c4a4:	mov    rax,QWORD PTR [rbp-0x18]
  41c4a8:	mov    rdx,QWORD PTR [rax+0xc8]
  41c4af:	mov    rax,QWORD PTR [rbp-0x18]
  41c4b3:	mov    rax,QWORD PTR [rax+0x178]
  41c4ba:	mov    eax,eax
  41c4bc:	add    rax,rdx
  41c4bf:	mov    QWORD PTR [rbp-0x8],rax
  41c4c3:	mov    rax,QWORD PTR [rbp-0x18]
  41c4c7:	mov    rax,QWORD PTR [rax+0x178]
  41c4ce:	lea    rdx,[rax-0x8]
  41c4d2:	mov    rax,QWORD PTR [rbp-0x18]
  41c4d6:	mov    QWORD PTR [rax+0x180],rdx
  41c4dd:	mov    rax,QWORD PTR [rbp-0x8]
  41c4e1:	mov    rdx,QWORD PTR [rax-0x8]
  41c4e5:	mov    rax,QWORD PTR [rbp-0x18]
  41c4e9:	mov    QWORD PTR [rax+0x178],rdx
  41c4f0:	mov    rax,QWORD PTR [rbp-0x18]
  41c4f4:	mov    rax,QWORD PTR [rax+0x178]
  41c4fb:	leave  
  41c4fc:	ret    

000000000041c4fd <flatcc_builder_exit_user_frame_at@@Base>:
  41c4fd:	endbr64 
  41c501:	push   rbp
  41c502:	mov    rbp,rsp
  41c505:	sub    rsp,0x10
  41c509:	mov    QWORD PTR [rbp-0x8],rdi
  41c50d:	mov    QWORD PTR [rbp-0x10],rsi
  41c511:	mov    rax,QWORD PTR [rbp-0x8]
  41c515:	mov    rax,QWORD PTR [rax+0x178]
  41c51c:	cmp    QWORD PTR [rbp-0x10],rax
  41c520:	jbe    41c541 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  41c522:	lea    rcx,[rip+0x1d3f7]        # 439920 <flatcc_builder_padding_base@@Base+0x6c0>
  41c529:	mov    edx,0x227
  41c52e:	lea    rsi,[rip+0x1cf2b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c535:	lea    rdi,[rip+0x1cfc4]        # 439500 <flatcc_builder_padding_base@@Base+0x2a0>
  41c53c:	call   4061b0 <__assert_fail@plt>
  41c541:	mov    rax,QWORD PTR [rbp-0x8]
  41c545:	mov    rdx,QWORD PTR [rbp-0x10]
  41c549:	mov    QWORD PTR [rax+0x178],rdx
  41c550:	mov    rax,QWORD PTR [rbp-0x8]
  41c554:	mov    rdi,rax
  41c557:	call   41c465 <flatcc_builder_exit_user_frame@@Base>
  41c55c:	leave  
  41c55d:	ret    

000000000041c55e <flatcc_builder_get_current_user_frame@@Base>:
  41c55e:	endbr64 
  41c562:	push   rbp
  41c563:	mov    rbp,rsp
  41c566:	mov    QWORD PTR [rbp-0x8],rdi
  41c56a:	mov    rax,QWORD PTR [rbp-0x8]
  41c56e:	mov    rax,QWORD PTR [rax+0x178]
  41c575:	pop    rbp
  41c576:	ret    

000000000041c577 <flatcc_builder_get_user_frame_ptr@@Base>:
  41c577:	endbr64 
  41c57b:	push   rbp
  41c57c:	mov    rbp,rsp
  41c57f:	mov    QWORD PTR [rbp-0x8],rdi
  41c583:	mov    QWORD PTR [rbp-0x10],rsi
  41c587:	mov    rax,QWORD PTR [rbp-0x8]
  41c58b:	mov    rax,QWORD PTR [rax+0xc8]
  41c592:	mov    rdx,QWORD PTR [rbp-0x10]
  41c596:	mov    edx,edx
  41c598:	add    rax,rdx
  41c59b:	pop    rbp
  41c59c:	ret    
  41c59d:	endbr64 
  41c5a1:	push   rbp
  41c5a2:	mov    rbp,rsp
  41c5a5:	sub    rsp,0x10
  41c5a9:	mov    QWORD PTR [rbp-0x8],rdi
  41c5ad:	mov    eax,esi
  41c5af:	mov    WORD PTR [rbp-0xc],ax
  41c5b3:	mov    rax,QWORD PTR [rbp-0x8]
  41c5b7:	mov    eax,DWORD PTR [rax+0x104]
  41c5bd:	lea    edx,[rax+0x1]
  41c5c0:	mov    rax,QWORD PTR [rbp-0x8]
  41c5c4:	mov    DWORD PTR [rax+0x104],edx
  41c5ca:	mov    rax,QWORD PTR [rbp-0x8]
  41c5ce:	mov    edx,DWORD PTR [rax+0x104]
  41c5d4:	mov    rax,QWORD PTR [rbp-0x8]
  41c5d8:	mov    eax,DWORD PTR [rax+0x108]
  41c5de:	cmp    edx,eax
  41c5e0:	jle    41c6db <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  41c5e6:	mov    rax,QWORD PTR [rbp-0x8]
  41c5ea:	mov    eax,DWORD PTR [rax+0x120]
  41c5f0:	test   eax,eax
  41c5f2:	jle    41c616 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  41c5f4:	mov    rax,QWORD PTR [rbp-0x8]
  41c5f8:	mov    edx,DWORD PTR [rax+0x104]
  41c5fe:	mov    rax,QWORD PTR [rbp-0x8]
  41c602:	mov    eax,DWORD PTR [rax+0x120]
  41c608:	cmp    edx,eax
  41c60a:	jle    41c616 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  41c60c:	mov    eax,0xffffffff
  41c611:	jmp    41c776 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  41c616:	mov    rax,QWORD PTR [rbp-0x8]
  41c61a:	mov    eax,DWORD PTR [rax+0x104]
  41c620:	dec    eax
  41c622:	movsxd rdx,eax
  41c625:	mov    rax,rdx
  41c628:	shl    rax,0x3
  41c62c:	add    rax,rdx
  41c62f:	shl    rax,0x2
  41c633:	mov    rdx,rax
  41c636:	mov    rax,QWORD PTR [rbp-0x8]
  41c63a:	mov    r8d,0x0
  41c640:	mov    ecx,0x24
  41c645:	mov    esi,0x4
  41c64a:	mov    rdi,rax
  41c64d:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41c652:	mov    rdx,rax
  41c655:	mov    rax,QWORD PTR [rbp-0x8]
  41c659:	mov    QWORD PTR [rax+0x30],rdx
  41c65d:	mov    rax,QWORD PTR [rbp-0x8]
  41c661:	mov    rax,QWORD PTR [rax+0x30]
  41c665:	test   rax,rax
  41c668:	jne    41c674 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  41c66a:	mov    eax,0xffffffff
  41c66f:	jmp    41c776 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  41c674:	mov    rax,QWORD PTR [rbp-0x8]
  41c678:	mov    rax,QWORD PTR [rax+0xa0]
  41c67f:	movabs rdx,0xe38e38e38e38e38f
  41c689:	mul    rdx
  41c68c:	mov    rax,rdx
  41c68f:	shr    rax,0x5
  41c693:	mov    edx,eax
  41c695:	mov    rax,QWORD PTR [rbp-0x8]
  41c699:	mov    DWORD PTR [rax+0x108],edx
  41c69f:	mov    rax,QWORD PTR [rbp-0x8]
  41c6a3:	mov    eax,DWORD PTR [rax+0x120]
  41c6a9:	test   eax,eax
  41c6ab:	jle    41c6ef <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41c6ad:	mov    rax,QWORD PTR [rbp-0x8]
  41c6b1:	mov    edx,DWORD PTR [rax+0x120]
  41c6b7:	mov    rax,QWORD PTR [rbp-0x8]
  41c6bb:	mov    eax,DWORD PTR [rax+0x108]
  41c6c1:	cmp    edx,eax
  41c6c3:	jge    41c6ef <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41c6c5:	mov    rax,QWORD PTR [rbp-0x8]
  41c6c9:	mov    edx,DWORD PTR [rax+0x120]
  41c6cf:	mov    rax,QWORD PTR [rbp-0x8]
  41c6d3:	mov    DWORD PTR [rax+0x108],edx
  41c6d9:	jmp    41c6ef <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41c6db:	mov    rax,QWORD PTR [rbp-0x8]
  41c6df:	mov    rax,QWORD PTR [rax+0x30]
  41c6e3:	lea    rdx,[rax+0x24]
  41c6e7:	mov    rax,QWORD PTR [rbp-0x8]
  41c6eb:	mov    QWORD PTR [rax+0x30],rdx
  41c6ef:	mov    rax,QWORD PTR [rbp-0x8]
  41c6f3:	mov    rax,QWORD PTR [rax+0x30]
  41c6f7:	mov    rdx,QWORD PTR [rbp-0x8]
  41c6fb:	mov    edx,DWORD PTR [rdx+0x20]
  41c6fe:	mov    DWORD PTR [rax+0x8],edx
  41c701:	mov    rax,QWORD PTR [rbp-0x8]
  41c705:	mov    rdx,QWORD PTR [rax+0x30]
  41c709:	mov    rax,QWORD PTR [rbp-0x8]
  41c70d:	movzx  eax,WORD PTR [rax+0xea]
  41c714:	mov    WORD PTR [rdx+0xc],ax
  41c718:	mov    rdx,QWORD PTR [rbp-0x8]
  41c71c:	movzx  eax,WORD PTR [rbp-0xc]
  41c720:	mov    WORD PTR [rdx+0xea],ax
  41c727:	mov    rax,QWORD PTR [rbp-0x8]
  41c72b:	mov    rax,QWORD PTR [rax+0x30]
  41c72f:	mov    rdx,QWORD PTR [rbp-0x8]
  41c733:	mov    edx,DWORD PTR [rdx+0x28]
  41c736:	mov    DWORD PTR [rax],edx
  41c738:	mov    rax,QWORD PTR [rbp-0x8]
  41c73c:	mov    rax,QWORD PTR [rax+0x30]
  41c740:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c747:	mov    rax,QWORD PTR [rbp-0x8]
  41c74b:	mov    edx,DWORD PTR [rax+0x28]
  41c74e:	mov    rax,QWORD PTR [rbp-0x8]
  41c752:	mov    eax,DWORD PTR [rax+0x20]
  41c755:	add    eax,edx
  41c757:	add    eax,0x7
  41c75a:	and    eax,0xfffffff8
  41c75d:	mov    edx,eax
  41c75f:	mov    rax,QWORD PTR [rbp-0x8]
  41c763:	mov    DWORD PTR [rax+0x28],edx
  41c766:	mov    rax,QWORD PTR [rbp-0x8]
  41c76a:	mov    DWORD PTR [rax+0x20],0x0
  41c771:	mov    eax,0x0
  41c776:	leave  
  41c777:	ret    
  41c778:	push   rbp
  41c779:	mov    rbp,rsp
  41c77c:	sub    rsp,0x10
  41c780:	mov    QWORD PTR [rbp-0x8],rdi
  41c784:	mov    rax,QWORD PTR [rbp-0x8]
  41c788:	mov    eax,DWORD PTR [rax+0x20]
  41c78b:	mov    edx,eax
  41c78d:	mov    rax,QWORD PTR [rbp-0x8]
  41c791:	mov    rax,QWORD PTR [rax+0x18]
  41c795:	mov    esi,0x0
  41c79a:	mov    rdi,rax
  41c79d:	call   4061c0 <memset@plt>
  41c7a2:	mov    rax,QWORD PTR [rbp-0x8]
  41c7a6:	mov    rax,QWORD PTR [rax+0x30]
  41c7aa:	mov    edx,DWORD PTR [rax+0x8]
  41c7ad:	mov    rax,QWORD PTR [rbp-0x8]
  41c7b1:	mov    DWORD PTR [rax+0x20],edx
  41c7b4:	mov    rax,QWORD PTR [rbp-0x8]
  41c7b8:	mov    rax,QWORD PTR [rax+0x30]
  41c7bc:	mov    edx,DWORD PTR [rax]
  41c7be:	mov    rax,QWORD PTR [rbp-0x8]
  41c7c2:	mov    DWORD PTR [rax+0x28],edx
  41c7c5:	mov    rax,QWORD PTR [rbp-0x8]
  41c7c9:	mov    rax,QWORD PTR [rax+0x30]
  41c7cd:	mov    edx,DWORD PTR [rax+0x4]
  41c7d0:	mov    rax,QWORD PTR [rbp-0x8]
  41c7d4:	mov    esi,edx
  41c7d6:	mov    rdi,rax
  41c7d9:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41c7de:	mov    rax,QWORD PTR [rbp-0x8]
  41c7e2:	movzx  eax,WORD PTR [rax+0xea]
  41c7e9:	movzx  edx,ax
  41c7ec:	mov    rax,QWORD PTR [rbp-0x8]
  41c7f0:	mov    esi,edx
  41c7f2:	mov    rdi,rax
  41c7f5:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41c7fa:	mov    rax,QWORD PTR [rbp-0x8]
  41c7fe:	mov    rax,QWORD PTR [rax+0x30]
  41c802:	movzx  eax,WORD PTR [rax+0xc]
  41c806:	mov    rdx,QWORD PTR [rbp-0x8]
  41c80a:	mov    WORD PTR [rdx+0xea],ax
  41c811:	mov    rax,QWORD PTR [rbp-0x8]
  41c815:	mov    rax,QWORD PTR [rax+0x30]
  41c819:	lea    rdx,[rax-0x24]
  41c81d:	mov    rax,QWORD PTR [rbp-0x8]
  41c821:	mov    QWORD PTR [rax+0x30],rdx
  41c825:	mov    rax,QWORD PTR [rbp-0x8]
  41c829:	mov    eax,DWORD PTR [rax+0x104]
  41c82f:	lea    edx,[rax-0x1]
  41c832:	mov    rax,QWORD PTR [rbp-0x8]
  41c836:	mov    DWORD PTR [rax+0x104],edx
  41c83c:	nop
  41c83d:	leave  
  41c83e:	ret    
  41c83f:	push   rbp
  41c840:	mov    rbp,rsp
  41c843:	mov    QWORD PTR [rbp-0x8],rdi
  41c847:	mov    DWORD PTR [rbp-0xc],esi
  41c84a:	mov    eax,edx
  41c84c:	mov    WORD PTR [rbp-0x10],ax
  41c850:	mov    rax,QWORD PTR [rbp-0x8]
  41c854:	mov    eax,DWORD PTR [rax+0xf0]
  41c85a:	sub    eax,DWORD PTR [rbp-0xc]
  41c85d:	movzx  edx,WORD PTR [rbp-0x10]
  41c861:	dec    edx
  41c863:	and    eax,edx
  41c865:	pop    rbp
  41c866:	ret    
  41c867:	push   rbp
  41c868:	mov    rbp,rsp
  41c86b:	mov    QWORD PTR [rbp-0x8],rdi
  41c86f:	mov    eax,esi
  41c871:	mov    WORD PTR [rbp-0xc],ax
  41c875:	mov    rax,QWORD PTR [rbp-0x8]
  41c879:	mov    eax,DWORD PTR [rax+0xf4]
  41c87f:	movzx  edx,WORD PTR [rbp-0xc]
  41c883:	dec    edx
  41c885:	and    eax,edx
  41c887:	pop    rbp
  41c888:	ret    
  41c889:	push   rbp
  41c88a:	mov    rbp,rsp
  41c88d:	sub    rsp,0x20
  41c891:	mov    QWORD PTR [rbp-0x18],rdi
  41c895:	mov    QWORD PTR [rbp-0x20],rsi
  41c899:	mov    rax,QWORD PTR [rbp-0x18]
  41c89d:	mov    edx,DWORD PTR [rax+0xf0]
  41c8a3:	mov    rax,QWORD PTR [rbp-0x20]
  41c8a7:	mov    rax,QWORD PTR [rax]
  41c8aa:	sub    edx,eax
  41c8ac:	mov    eax,edx
  41c8ae:	mov    DWORD PTR [rbp-0x4],eax
  41c8b1:	mov    rax,QWORD PTR [rbp-0x20]
  41c8b5:	mov    rax,QWORD PTR [rax]
  41c8b8:	cmp    rax,0x10
  41c8bc:	jbe    41c8d3 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  41c8be:	mov    rax,QWORD PTR [rbp-0x20]
  41c8c2:	mov    rax,QWORD PTR [rax]
  41c8c5:	lea    rdx,[rax-0x10]
  41c8c9:	mov    eax,0xffffffff
  41c8ce:	cmp    rdx,rax
  41c8d1:	ja     41c8e2 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  41c8d3:	mov    rax,QWORD PTR [rbp-0x18]
  41c8d7:	mov    eax,DWORD PTR [rax+0xf0]
  41c8dd:	cmp    DWORD PTR [rbp-0x4],eax
  41c8e0:	jl     41c901 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  41c8e2:	lea    rcx,[rip+0x1d07f]        # 439968 <flatcc_builder_padding_base@@Base+0x708>
  41c8e9:	mov    edx,0x287
  41c8ee:	lea    rsi,[rip+0x1cb6b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c8f5:	lea    rdi,[rip+0x1cbc4]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41c8fc:	call   4061b0 <__assert_fail@plt>
  41c901:	mov    rax,QWORD PTR [rbp-0x18]
  41c905:	mov    rax,QWORD PTR [rax+0x48]
  41c909:	mov    rdx,QWORD PTR [rbp-0x20]
  41c90d:	mov    r8,QWORD PTR [rdx]
  41c910:	mov    rdx,QWORD PTR [rbp-0x20]
  41c914:	mov    edx,DWORD PTR [rdx+0x8]
  41c917:	mov    rcx,QWORD PTR [rbp-0x20]
  41c91b:	lea    rsi,[rcx+0x10]
  41c91f:	mov    rcx,QWORD PTR [rbp-0x18]
  41c923:	mov    rdi,QWORD PTR [rcx+0x38]
  41c927:	mov    ecx,DWORD PTR [rbp-0x4]
  41c92a:	call   rax
  41c92c:	test   eax,eax
  41c92e:	je     41c94f <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  41c930:	lea    rcx,[rip+0x1d031]        # 439968 <flatcc_builder_padding_base@@Base+0x708>
  41c937:	mov    edx,0x28b
  41c93c:	lea    rsi,[rip+0x1cb1d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c943:	lea    rdi,[rip+0x1cb76]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41c94a:	call   4061b0 <__assert_fail@plt>
  41c94f:	mov    rax,QWORD PTR [rbp-0x18]
  41c953:	mov    edx,DWORD PTR [rbp-0x4]
  41c956:	mov    DWORD PTR [rax+0xf0],edx
  41c95c:	mov    rax,QWORD PTR [rbp-0x18]
  41c960:	mov    eax,DWORD PTR [rax+0xf0]
  41c966:	leave  
  41c967:	ret    
  41c968:	push   rbp
  41c969:	mov    rbp,rsp
  41c96c:	sub    rsp,0x20
  41c970:	mov    QWORD PTR [rbp-0x18],rdi
  41c974:	mov    QWORD PTR [rbp-0x20],rsi
  41c978:	mov    rax,QWORD PTR [rbp-0x18]
  41c97c:	mov    eax,DWORD PTR [rax+0xf4]
  41c982:	mov    DWORD PTR [rbp-0x4],eax
  41c985:	mov    rax,QWORD PTR [rbp-0x20]
  41c989:	mov    rax,QWORD PTR [rax]
  41c98c:	mov    edx,eax
  41c98e:	mov    eax,DWORD PTR [rbp-0x4]
  41c991:	add    edx,eax
  41c993:	mov    rax,QWORD PTR [rbp-0x18]
  41c997:	mov    DWORD PTR [rax+0xf4],edx
  41c99d:	mov    rax,QWORD PTR [rbp-0x18]
  41c9a1:	mov    eax,DWORD PTR [rax+0xf4]
  41c9a7:	cmp    DWORD PTR [rbp-0x4],eax
  41c9aa:	jle    41c9cb <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  41c9ac:	lea    rcx,[rip+0x1cfa5]        # 439958 <flatcc_builder_padding_base@@Base+0x6f8>
  41c9b3:	mov    edx,0x2a1
  41c9b8:	lea    rsi,[rip+0x1caa1]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41c9bf:	lea    rdi,[rip+0x1cafa]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41c9c6:	call   4061b0 <__assert_fail@plt>
  41c9cb:	mov    rax,QWORD PTR [rbp-0x18]
  41c9cf:	mov    rax,QWORD PTR [rax+0x48]
  41c9d3:	mov    rdx,QWORD PTR [rbp-0x20]
  41c9d7:	mov    r8,QWORD PTR [rdx]
  41c9da:	mov    rdx,QWORD PTR [rbp-0x20]
  41c9de:	mov    edx,DWORD PTR [rdx+0x8]
  41c9e1:	mov    rcx,QWORD PTR [rbp-0x20]
  41c9e5:	lea    rsi,[rcx+0x10]
  41c9e9:	mov    rcx,QWORD PTR [rbp-0x18]
  41c9ed:	mov    rdi,QWORD PTR [rcx+0x38]
  41c9f1:	mov    ecx,DWORD PTR [rbp-0x4]
  41c9f4:	call   rax
  41c9f6:	test   eax,eax
  41c9f8:	je     41ca19 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  41c9fa:	lea    rcx,[rip+0x1cf57]        # 439958 <flatcc_builder_padding_base@@Base+0x6f8>
  41ca01:	mov    edx,0x2a5
  41ca06:	lea    rsi,[rip+0x1ca53]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41ca0d:	lea    rdi,[rip+0x1caac]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41ca14:	call   4061b0 <__assert_fail@plt>
  41ca19:	mov    eax,DWORD PTR [rbp-0x4]
  41ca1c:	inc    eax
  41ca1e:	leave  
  41ca1f:	ret    
  41ca20:	endbr64 
  41ca24:	push   rbp
  41ca25:	mov    rbp,rsp
  41ca28:	sub    rsp,0xd0
  41ca2f:	mov    QWORD PTR [rbp-0xb8],rdi
  41ca36:	mov    QWORD PTR [rbp-0xc0],rsi
  41ca3d:	mov    eax,edx
  41ca3f:	mov    DWORD PTR [rbp-0xc8],ecx
  41ca45:	mov    WORD PTR [rbp-0xc4],ax
  41ca4c:	mov    rax,QWORD PTR fs:0x28
  41ca55:	mov    QWORD PTR [rbp-0x8],rax
  41ca59:	xor    eax,eax
  41ca5b:	cmp    WORD PTR [rbp-0xc4],0x0
  41ca63:	jne    41ca8f <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  41ca65:	mov    rax,QWORD PTR [rbp-0xb8]
  41ca6c:	movzx  eax,WORD PTR [rax+0xec]
  41ca73:	test   ax,ax
  41ca76:	je     41ca88 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  41ca78:	mov    rax,QWORD PTR [rbp-0xb8]
  41ca7f:	movzx  eax,WORD PTR [rax+0xec]
  41ca86:	jmp    41ca96 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  41ca88:	mov    eax,0x1
  41ca8d:	jmp    41ca96 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  41ca8f:	movzx  eax,WORD PTR [rbp-0xc4]
  41ca96:	mov    WORD PTR [rbp-0xc4],ax
  41ca9d:	mov    rax,QWORD PTR [rbp-0xc0]
  41caa4:	mov    esi,0x4
  41caa9:	mov    rdi,rax
  41caac:	call   41c29d <flatcc_builder_clear@@Base+0xca>
  41cab1:	movzx  edx,WORD PTR [rbp-0xc4]
  41cab8:	mov    rax,QWORD PTR [rbp-0xc0]
  41cabf:	mov    esi,edx
  41cac1:	mov    rdi,rax
  41cac4:	call   41c29d <flatcc_builder_clear@@Base+0xca>
  41cac9:	cmp    DWORD PTR [rbp-0xc8],0x0
  41cad0:	jne    41cbc5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41cad6:	movzx  edx,WORD PTR [rbp-0xc4]
  41cadd:	mov    rax,QWORD PTR [rbp-0xb8]
  41cae4:	mov    esi,edx
  41cae6:	mov    rdi,rax
  41cae9:	call   41c867 <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  41caee:	mov    eax,eax
  41caf0:	mov    QWORD PTR [rbp-0xa8],rax
  41caf7:	cmp    QWORD PTR [rbp-0xa8],0x0
  41caff:	je     41cbc5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41cb05:	mov    QWORD PTR [rbp-0xa0],0x0
  41cb10:	mov    DWORD PTR [rbp-0x98],0x0
  41cb1a:	cmp    QWORD PTR [rbp-0xa8],0x0
  41cb22:	je     41cb89 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  41cb24:	mov    rdx,QWORD PTR [rbp-0xa0]
  41cb2b:	mov    rax,QWORD PTR [rbp-0xa8]
  41cb32:	add    rax,rdx
  41cb35:	mov    QWORD PTR [rbp-0xa0],rax
  41cb3c:	mov    eax,DWORD PTR [rbp-0x98]
  41cb42:	cdqe   
  41cb44:	shl    rax,0x4
  41cb48:	add    rax,rbp
  41cb4b:	sub    rax,0x90
  41cb51:	mov    rdx,0x439260
  41cb58:	mov    QWORD PTR [rax],rdx
  41cb5b:	mov    eax,DWORD PTR [rbp-0x98]
  41cb61:	cdqe   
  41cb63:	shl    rax,0x4
  41cb67:	add    rax,rbp
  41cb6a:	lea    rdx,[rax-0x88]
  41cb71:	mov    rax,QWORD PTR [rbp-0xa8]
  41cb78:	mov    QWORD PTR [rdx],rax
  41cb7b:	mov    eax,DWORD PTR [rbp-0x98]
  41cb81:	inc    eax
  41cb83:	mov    DWORD PTR [rbp-0x98],eax
  41cb89:	lea    rdx,[rbp-0xa0]
  41cb90:	mov    rax,QWORD PTR [rbp-0xb8]
  41cb97:	mov    rsi,rdx
  41cb9a:	mov    rdi,rax
  41cb9d:	call   41c968 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  41cba2:	test   eax,eax
  41cba4:	jne    41cbc5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41cba6:	lea    rcx,[rip+0x1cd9b]        # 439948 <flatcc_builder_padding_base@@Base+0x6e8>
  41cbad:	mov    edx,0x2be
  41cbb2:	lea    rsi,[rip+0x1c8a7]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41cbb9:	lea    rdi,[rip+0x1c900]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41cbc0:	call   4061b0 <__assert_fail@plt>
  41cbc5:	mov    eax,0x0
  41cbca:	mov    rcx,QWORD PTR [rbp-0x8]
  41cbce:	xor    rcx,QWORD PTR fs:0x28
  41cbd7:	je     41cbde <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  41cbd9:	call   4061a0 <__stack_chk_fail@plt>
  41cbde:	leave  
  41cbdf:	ret    

000000000041cbe0 <flatcc_builder_embed_buffer@@Base>:
  41cbe0:	endbr64 
  41cbe4:	push   rbp
  41cbe5:	mov    rbp,rsp
  41cbe8:	sub    rsp,0xe0
  41cbef:	mov    QWORD PTR [rbp-0xb8],rdi
  41cbf6:	mov    eax,esi
  41cbf8:	mov    QWORD PTR [rbp-0xc8],rdx
  41cbff:	mov    QWORD PTR [rbp-0xd0],rcx
  41cc06:	mov    edx,r8d
  41cc09:	mov    DWORD PTR [rbp-0xd4],r9d
  41cc10:	mov    WORD PTR [rbp-0xbc],ax
  41cc17:	mov    eax,edx
  41cc19:	mov    WORD PTR [rbp-0xc0],ax
  41cc20:	mov    rax,QWORD PTR fs:0x28
  41cc29:	mov    QWORD PTR [rbp-0x8],rax
  41cc2d:	xor    eax,eax
  41cc2f:	mov    eax,DWORD PTR [rbp-0xd4]
  41cc35:	and    eax,0x2
  41cc38:	mov    DWORD PTR [rbp-0xa8],eax
  41cc3e:	mov    rax,QWORD PTR [rbp-0xb8]
  41cc45:	mov    eax,DWORD PTR [rax+0x100]
  41cc4b:	test   eax,eax
  41cc4d:	setne  al
  41cc50:	movzx  ecx,al
  41cc53:	movzx  edx,WORD PTR [rbp-0xbc]
  41cc5a:	lea    rsi,[rbp-0xc0]
  41cc61:	mov    rax,QWORD PTR [rbp-0xb8]
  41cc68:	mov    rdi,rax
  41cc6b:	call   41ca20 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  41cc70:	test   eax,eax
  41cc72:	je     41cc7e <flatcc_builder_embed_buffer@@Base+0x9e>
  41cc74:	mov    eax,0x0
  41cc79:	jmp    41ce55 <flatcc_builder_embed_buffer@@Base+0x275>
  41cc7e:	movzx  eax,WORD PTR [rbp-0xc0]
  41cc85:	movzx  edx,ax
  41cc88:	mov    rax,QWORD PTR [rbp-0xd0]
  41cc8f:	mov    ecx,eax
  41cc91:	cmp    DWORD PTR [rbp-0xa8],0x0
  41cc98:	je     41cca1 <flatcc_builder_embed_buffer@@Base+0xc1>
  41cc9a:	mov    eax,0x4
  41cc9f:	jmp    41cca6 <flatcc_builder_embed_buffer@@Base+0xc6>
  41cca1:	mov    eax,0x0
  41cca6:	add    ecx,eax
  41cca8:	mov    rax,QWORD PTR [rbp-0xb8]
  41ccaf:	mov    esi,ecx
  41ccb1:	mov    rdi,rax
  41ccb4:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41ccb9:	mov    DWORD PTR [rbp-0xa4],eax
  41ccbf:	mov    rax,QWORD PTR [rbp-0xd0]
  41ccc6:	mov    edx,eax
  41ccc8:	mov    eax,DWORD PTR [rbp-0xa4]
  41ccce:	add    eax,edx
  41ccd0:	mov    edi,eax
  41ccd2:	call   41b540 <main@@Base+0x9fd>
  41ccd7:	mov    DWORD PTR [rbp-0xac],eax
  41ccdd:	mov    QWORD PTR [rbp-0xa0],0x0
  41cce8:	mov    DWORD PTR [rbp-0x98],0x0
  41ccf2:	mov    rax,QWORD PTR [rbp-0xb8]
  41ccf9:	mov    eax,DWORD PTR [rax+0x100]
  41ccff:	test   eax,eax
  41cd01:	je     41cd5f <flatcc_builder_embed_buffer@@Base+0x17f>
  41cd03:	mov    rax,QWORD PTR [rbp-0xa0]
  41cd0a:	add    rax,0x4
  41cd0e:	mov    QWORD PTR [rbp-0xa0],rax
  41cd15:	mov    eax,DWORD PTR [rbp-0x98]
  41cd1b:	cdqe   
  41cd1d:	shl    rax,0x4
  41cd21:	add    rax,rbp
  41cd24:	lea    rdx,[rax-0x90]
  41cd2b:	lea    rax,[rbp-0xac]
  41cd32:	mov    QWORD PTR [rdx],rax
  41cd35:	mov    eax,DWORD PTR [rbp-0x98]
  41cd3b:	cdqe   
  41cd3d:	shl    rax,0x4
  41cd41:	add    rax,rbp
  41cd44:	sub    rax,0x88
  41cd4a:	mov    QWORD PTR [rax],0x4
  41cd51:	mov    eax,DWORD PTR [rbp-0x98]
  41cd57:	inc    eax
  41cd59:	mov    DWORD PTR [rbp-0x98],eax
  41cd5f:	cmp    QWORD PTR [rbp-0xd0],0x0
  41cd67:	je     41cdcf <flatcc_builder_embed_buffer@@Base+0x1ef>
  41cd69:	mov    rdx,QWORD PTR [rbp-0xa0]
  41cd70:	mov    rax,QWORD PTR [rbp-0xd0]
  41cd77:	add    rax,rdx
  41cd7a:	mov    QWORD PTR [rbp-0xa0],rax
  41cd81:	mov    eax,DWORD PTR [rbp-0x98]
  41cd87:	cdqe   
  41cd89:	shl    rax,0x4
  41cd8d:	add    rax,rbp
  41cd90:	lea    rdx,[rax-0x90]
  41cd97:	mov    rax,QWORD PTR [rbp-0xc8]
  41cd9e:	mov    QWORD PTR [rdx],rax
  41cda1:	mov    eax,DWORD PTR [rbp-0x98]
  41cda7:	cdqe   
  41cda9:	shl    rax,0x4
  41cdad:	add    rax,rbp
  41cdb0:	lea    rdx,[rax-0x88]
  41cdb7:	mov    rax,QWORD PTR [rbp-0xd0]
  41cdbe:	mov    QWORD PTR [rdx],rax
  41cdc1:	mov    eax,DWORD PTR [rbp-0x98]
  41cdc7:	inc    eax
  41cdc9:	mov    DWORD PTR [rbp-0x98],eax
  41cdcf:	cmp    DWORD PTR [rbp-0xa4],0x0
  41cdd6:	je     41ce3c <flatcc_builder_embed_buffer@@Base+0x25c>
  41cdd8:	mov    rdx,QWORD PTR [rbp-0xa0]
  41cddf:	mov    eax,DWORD PTR [rbp-0xa4]
  41cde5:	add    rax,rdx
  41cde8:	mov    QWORD PTR [rbp-0xa0],rax
  41cdef:	mov    eax,DWORD PTR [rbp-0x98]
  41cdf5:	cdqe   
  41cdf7:	shl    rax,0x4
  41cdfb:	add    rax,rbp
  41cdfe:	sub    rax,0x90
  41ce04:	mov    rdx,0x439260
  41ce0b:	mov    QWORD PTR [rax],rdx
  41ce0e:	mov    edx,DWORD PTR [rbp-0x98]
  41ce14:	mov    eax,DWORD PTR [rbp-0xa4]
  41ce1a:	movsxd rdx,edx
  41ce1d:	shl    rdx,0x4
  41ce21:	add    rdx,rbp
  41ce24:	sub    rdx,0x88
  41ce2b:	mov    QWORD PTR [rdx],rax
  41ce2e:	mov    eax,DWORD PTR [rbp-0x98]
  41ce34:	inc    eax
  41ce36:	mov    DWORD PTR [rbp-0x98],eax
  41ce3c:	lea    rdx,[rbp-0xa0]
  41ce43:	mov    rax,QWORD PTR [rbp-0xb8]
  41ce4a:	mov    rsi,rdx
  41ce4d:	mov    rdi,rax
  41ce50:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41ce55:	mov    rdi,QWORD PTR [rbp-0x8]
  41ce59:	xor    rdi,QWORD PTR fs:0x28
  41ce62:	je     41ce69 <flatcc_builder_embed_buffer@@Base+0x289>
  41ce64:	call   4061a0 <__stack_chk_fail@plt>
  41ce69:	leave  
  41ce6a:	ret    

000000000041ce6b <flatcc_builder_create_buffer@@Base>:
  41ce6b:	endbr64 
  41ce6f:	push   rbp
  41ce70:	mov    rbp,rsp
  41ce73:	sub    rsp,0xf0
  41ce7a:	mov    QWORD PTR [rbp-0xd8],rdi
  41ce81:	mov    QWORD PTR [rbp-0xe0],rsi
  41ce88:	mov    eax,edx
  41ce8a:	mov    DWORD PTR [rbp-0xe8],ecx
  41ce90:	mov    edx,r8d
  41ce93:	mov    DWORD PTR [rbp-0xf0],r9d
  41ce9a:	mov    WORD PTR [rbp-0xe4],ax
  41cea1:	mov    eax,edx
  41cea3:	mov    WORD PTR [rbp-0xec],ax
  41ceaa:	mov    rax,QWORD PTR fs:0x28
  41ceb3:	mov    QWORD PTR [rbp-0x8],rax
  41ceb7:	xor    eax,eax
  41ceb9:	mov    DWORD PTR [rbp-0xb8],0x0
  41cec3:	mov    DWORD PTR [rbp-0xbc],0x0
  41cecd:	mov    eax,DWORD PTR [rbp-0xf0]
  41ced3:	and    eax,0x1
  41ced6:	test   eax,eax
  41ced8:	setne  al
  41cedb:	movzx  eax,al
  41cede:	mov    DWORD PTR [rbp-0xb4],eax
  41cee4:	mov    eax,DWORD PTR [rbp-0xf0]
  41ceea:	and    eax,0x2
  41ceed:	test   eax,eax
  41ceef:	setne  al
  41cef2:	movzx  eax,al
  41cef5:	mov    DWORD PTR [rbp-0xb0],eax
  41cefb:	movzx  edx,WORD PTR [rbp-0xe4]
  41cf02:	mov    ecx,DWORD PTR [rbp-0xb4]
  41cf08:	lea    rsi,[rbp-0xec]
  41cf0f:	mov    rax,QWORD PTR [rbp-0xd8]
  41cf16:	mov    rdi,rax
  41cf19:	call   41ca20 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  41cf1e:	test   eax,eax
  41cf20:	je     41cf2c <flatcc_builder_create_buffer@@Base+0xc1>
  41cf22:	mov    eax,0x0
  41cf27:	jmp    41d28e <flatcc_builder_create_buffer@@Base+0x423>
  41cf2c:	movzx  eax,WORD PTR [rbp-0xec]
  41cf33:	movzx  edx,ax
  41cf36:	mov    rax,QWORD PTR [rbp-0xd8]
  41cf3d:	mov    esi,edx
  41cf3f:	mov    rdi,rax
  41cf42:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41cf47:	cmp    QWORD PTR [rbp-0xe0],0x0
  41cf4f:	je     41cf86 <flatcc_builder_create_buffer@@Base+0x11b>
  41cf51:	mov    rax,QWORD PTR [rbp-0xe0]
  41cf58:	mov    eax,DWORD PTR [rax]
  41cf5a:	mov    DWORD PTR [rbp-0xbc],eax
  41cf60:	mov    eax,DWORD PTR [rbp-0xbc]
  41cf66:	mov    edi,eax
  41cf68:	call   41b55b <main@@Base+0xa18>
  41cf6d:	mov    DWORD PTR [rbp-0xbc],eax
  41cf73:	mov    eax,DWORD PTR [rbp-0xbc]
  41cf79:	mov    edi,eax
  41cf7b:	call   41b540 <main@@Base+0x9fd>
  41cf80:	mov    DWORD PTR [rbp-0xbc],eax
  41cf86:	mov    eax,DWORD PTR [rbp-0xbc]
  41cf8c:	test   eax,eax
  41cf8e:	je     41cf97 <flatcc_builder_create_buffer@@Base+0x12c>
  41cf90:	mov    eax,0x4
  41cf95:	jmp    41cf9c <flatcc_builder_create_buffer@@Base+0x131>
  41cf97:	mov    eax,0x0
  41cf9c:	mov    DWORD PTR [rbp-0xb8],eax
  41cfa2:	movzx  eax,WORD PTR [rbp-0xec]
  41cfa9:	movzx  edx,ax
  41cfac:	cmp    DWORD PTR [rbp-0xb0],0x0
  41cfb3:	je     41cfbc <flatcc_builder_create_buffer@@Base+0x151>
  41cfb5:	mov    ecx,0x4
  41cfba:	jmp    41cfc1 <flatcc_builder_create_buffer@@Base+0x156>
  41cfbc:	mov    ecx,0x0
  41cfc1:	mov    eax,DWORD PTR [rbp-0xb8]
  41cfc7:	add    eax,ecx
  41cfc9:	lea    ecx,[rax+0x4]
  41cfcc:	mov    rax,QWORD PTR [rbp-0xd8]
  41cfd3:	mov    esi,ecx
  41cfd5:	mov    rdi,rax
  41cfd8:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41cfdd:	mov    DWORD PTR [rbp-0xac],eax
  41cfe3:	mov    QWORD PTR [rbp-0xa0],0x0
  41cfee:	mov    DWORD PTR [rbp-0x98],0x0
  41cff8:	cmp    DWORD PTR [rbp-0xb4],0x0
  41cfff:	jne    41d00a <flatcc_builder_create_buffer@@Base+0x19f>
  41d001:	cmp    DWORD PTR [rbp-0xb0],0x0
  41d008:	je     41d066 <flatcc_builder_create_buffer@@Base+0x1fb>
  41d00a:	mov    rax,QWORD PTR [rbp-0xa0]
  41d011:	add    rax,0x4
  41d015:	mov    QWORD PTR [rbp-0xa0],rax
  41d01c:	mov    eax,DWORD PTR [rbp-0x98]
  41d022:	cdqe   
  41d024:	shl    rax,0x4
  41d028:	add    rax,rbp
  41d02b:	lea    rdx,[rax-0x90]
  41d032:	lea    rax,[rbp-0xc0]
  41d039:	mov    QWORD PTR [rdx],rax
  41d03c:	mov    eax,DWORD PTR [rbp-0x98]
  41d042:	cdqe   
  41d044:	shl    rax,0x4
  41d048:	add    rax,rbp
  41d04b:	sub    rax,0x88
  41d051:	mov    QWORD PTR [rax],0x4
  41d058:	mov    eax,DWORD PTR [rbp-0x98]
  41d05e:	inc    eax
  41d060:	mov    DWORD PTR [rbp-0x98],eax
  41d066:	mov    rax,QWORD PTR [rbp-0xa0]
  41d06d:	add    rax,0x4
  41d071:	mov    QWORD PTR [rbp-0xa0],rax
  41d078:	mov    eax,DWORD PTR [rbp-0x98]
  41d07e:	cdqe   
  41d080:	shl    rax,0x4
  41d084:	add    rax,rbp
  41d087:	lea    rdx,[rax-0x90]
  41d08e:	lea    rax,[rbp-0xc4]
  41d095:	mov    QWORD PTR [rdx],rax
  41d098:	mov    eax,DWORD PTR [rbp-0x98]
  41d09e:	cdqe   
  41d0a0:	shl    rax,0x4
  41d0a4:	add    rax,rbp
  41d0a7:	sub    rax,0x88
  41d0ad:	mov    QWORD PTR [rax],0x4
  41d0b4:	mov    eax,DWORD PTR [rbp-0x98]
  41d0ba:	inc    eax
  41d0bc:	mov    DWORD PTR [rbp-0x98],eax
  41d0c2:	cmp    DWORD PTR [rbp-0xb8],0x0
  41d0c9:	je     41d130 <flatcc_builder_create_buffer@@Base+0x2c5>
  41d0cb:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d0d2:	mov    eax,DWORD PTR [rbp-0xb8]
  41d0d8:	add    rax,rdx
  41d0db:	mov    QWORD PTR [rbp-0xa0],rax
  41d0e2:	mov    eax,DWORD PTR [rbp-0x98]
  41d0e8:	cdqe   
  41d0ea:	shl    rax,0x4
  41d0ee:	add    rax,rbp
  41d0f1:	lea    rdx,[rax-0x90]
  41d0f8:	lea    rax,[rbp-0xbc]
  41d0ff:	mov    QWORD PTR [rdx],rax
  41d102:	mov    edx,DWORD PTR [rbp-0x98]
  41d108:	mov    eax,DWORD PTR [rbp-0xb8]
  41d10e:	movsxd rdx,edx
  41d111:	shl    rdx,0x4
  41d115:	add    rdx,rbp
  41d118:	sub    rdx,0x88
  41d11f:	mov    QWORD PTR [rdx],rax
  41d122:	mov    eax,DWORD PTR [rbp-0x98]
  41d128:	inc    eax
  41d12a:	mov    DWORD PTR [rbp-0x98],eax
  41d130:	cmp    DWORD PTR [rbp-0xac],0x0
  41d137:	je     41d19d <flatcc_builder_create_buffer@@Base+0x332>
  41d139:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d140:	mov    eax,DWORD PTR [rbp-0xac]
  41d146:	add    rax,rdx
  41d149:	mov    QWORD PTR [rbp-0xa0],rax
  41d150:	mov    eax,DWORD PTR [rbp-0x98]
  41d156:	cdqe   
  41d158:	shl    rax,0x4
  41d15c:	add    rax,rbp
  41d15f:	sub    rax,0x90
  41d165:	mov    rdx,0x439260
  41d16c:	mov    QWORD PTR [rax],rdx
  41d16f:	mov    edx,DWORD PTR [rbp-0x98]
  41d175:	mov    eax,DWORD PTR [rbp-0xac]
  41d17b:	movsxd rdx,edx
  41d17e:	shl    rdx,0x4
  41d182:	add    rdx,rbp
  41d185:	sub    rdx,0x88
  41d18c:	mov    QWORD PTR [rdx],rax
  41d18f:	mov    eax,DWORD PTR [rbp-0x98]
  41d195:	inc    eax
  41d197:	mov    DWORD PTR [rbp-0x98],eax
  41d19d:	mov    rax,QWORD PTR [rbp-0xd8]
  41d1a4:	mov    eax,DWORD PTR [rax+0xf0]
  41d1aa:	mov    edx,eax
  41d1ac:	mov    rax,QWORD PTR [rbp-0xa0]
  41d1b3:	sub    edx,eax
  41d1b5:	mov    eax,edx
  41d1b7:	cmp    DWORD PTR [rbp-0xb4],0x0
  41d1be:	jne    41d1c9 <flatcc_builder_create_buffer@@Base+0x35e>
  41d1c0:	cmp    DWORD PTR [rbp-0xb0],0x0
  41d1c7:	je     41d1d0 <flatcc_builder_create_buffer@@Base+0x365>
  41d1c9:	mov    edx,0x4
  41d1ce:	jmp    41d1d5 <flatcc_builder_create_buffer@@Base+0x36a>
  41d1d0:	mov    edx,0x0
  41d1d5:	add    eax,edx
  41d1d7:	mov    DWORD PTR [rbp-0xa8],eax
  41d1dd:	cmp    DWORD PTR [rbp-0xb4],0x0
  41d1e4:	je     41d208 <flatcc_builder_create_buffer@@Base+0x39d>
  41d1e6:	mov    rax,QWORD PTR [rbp-0xd8]
  41d1ed:	mov    eax,DWORD PTR [rax+0xf8]
  41d1f3:	sub    eax,DWORD PTR [rbp-0xa8]
  41d1f9:	mov    edi,eax
  41d1fb:	call   41b540 <main@@Base+0x9fd>
  41d200:	mov    DWORD PTR [rbp-0xc0],eax
  41d206:	jmp    41d228 <flatcc_builder_create_buffer@@Base+0x3bd>
  41d208:	mov    rax,QWORD PTR [rbp-0xd8]
  41d20f:	mov    eax,DWORD PTR [rax+0xf4]
  41d215:	sub    eax,DWORD PTR [rbp-0xa8]
  41d21b:	mov    edi,eax
  41d21d:	call   41b540 <main@@Base+0x9fd>
  41d222:	mov    DWORD PTR [rbp-0xc0],eax
  41d228:	mov    eax,DWORD PTR [rbp-0xe8]
  41d22e:	sub    eax,DWORD PTR [rbp-0xa8]
  41d234:	mov    edi,eax
  41d236:	call   41b540 <main@@Base+0x9fd>
  41d23b:	mov    DWORD PTR [rbp-0xc4],eax
  41d241:	lea    rdx,[rbp-0xa0]
  41d248:	mov    rax,QWORD PTR [rbp-0xd8]
  41d24f:	mov    rsi,rdx
  41d252:	mov    rdi,rax
  41d255:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41d25a:	mov    DWORD PTR [rbp-0xa4],eax
  41d260:	cmp    DWORD PTR [rbp-0xa4],0x0
  41d267:	jne    41d288 <flatcc_builder_create_buffer@@Base+0x41d>
  41d269:	lea    rcx,[rip+0x1c710]        # 439980 <flatcc_builder_padding_base@@Base+0x720>
  41d270:	mov    edx,0x304
  41d275:	lea    rsi,[rip+0x1c1e4]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d27c:	lea    rdi,[rip+0x1c23d]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41d283:	call   4061b0 <__assert_fail@plt>
  41d288:	mov    eax,DWORD PTR [rbp-0xa4]
  41d28e:	mov    rsi,QWORD PTR [rbp-0x8]
  41d292:	xor    rsi,QWORD PTR fs:0x28
  41d29b:	je     41d2a2 <flatcc_builder_create_buffer@@Base+0x437>
  41d29d:	call   4061a0 <__stack_chk_fail@plt>
  41d2a2:	leave  
  41d2a3:	ret    

000000000041d2a4 <flatcc_builder_create_struct@@Base>:
  41d2a4:	endbr64 
  41d2a8:	push   rbp
  41d2a9:	mov    rbp,rsp
  41d2ac:	sub    rsp,0xd0
  41d2b3:	mov    QWORD PTR [rbp-0xb8],rdi
  41d2ba:	mov    QWORD PTR [rbp-0xc0],rsi
  41d2c1:	mov    QWORD PTR [rbp-0xc8],rdx
  41d2c8:	mov    eax,ecx
  41d2ca:	mov    WORD PTR [rbp-0xcc],ax
  41d2d1:	mov    rax,QWORD PTR fs:0x28
  41d2da:	mov    QWORD PTR [rbp-0x8],rax
  41d2de:	xor    eax,eax
  41d2e0:	cmp    WORD PTR [rbp-0xcc],0x0
  41d2e8:	jne    41d309 <flatcc_builder_create_struct@@Base+0x65>
  41d2ea:	lea    rcx,[rip+0x1c6af]        # 4399a0 <flatcc_builder_padding_base@@Base+0x740>
  41d2f1:	mov    edx,0x30f
  41d2f6:	lea    rsi,[rip+0x1c163]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d2fd:	lea    rdi,[rip+0x1c21b]        # 43951f <flatcc_builder_padding_base@@Base+0x2bf>
  41d304:	call   4061b0 <__assert_fail@plt>
  41d309:	movzx  edx,WORD PTR [rbp-0xcc]
  41d310:	mov    rax,QWORD PTR [rbp-0xb8]
  41d317:	mov    esi,edx
  41d319:	mov    rdi,rax
  41d31c:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41d321:	movzx  edx,WORD PTR [rbp-0xcc]
  41d328:	mov    rax,QWORD PTR [rbp-0xc8]
  41d32f:	mov    ecx,eax
  41d331:	mov    rax,QWORD PTR [rbp-0xb8]
  41d338:	mov    esi,ecx
  41d33a:	mov    rdi,rax
  41d33d:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41d342:	mov    eax,eax
  41d344:	mov    QWORD PTR [rbp-0xa8],rax
  41d34b:	mov    QWORD PTR [rbp-0xa0],0x0
  41d356:	mov    DWORD PTR [rbp-0x98],0x0
  41d360:	cmp    QWORD PTR [rbp-0xc8],0x0
  41d368:	je     41d3d0 <flatcc_builder_create_struct@@Base+0x12c>
  41d36a:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d371:	mov    rax,QWORD PTR [rbp-0xc8]
  41d378:	add    rax,rdx
  41d37b:	mov    QWORD PTR [rbp-0xa0],rax
  41d382:	mov    eax,DWORD PTR [rbp-0x98]
  41d388:	cdqe   
  41d38a:	shl    rax,0x4
  41d38e:	add    rax,rbp
  41d391:	lea    rdx,[rax-0x90]
  41d398:	mov    rax,QWORD PTR [rbp-0xc0]
  41d39f:	mov    QWORD PTR [rdx],rax
  41d3a2:	mov    eax,DWORD PTR [rbp-0x98]
  41d3a8:	cdqe   
  41d3aa:	shl    rax,0x4
  41d3ae:	add    rax,rbp
  41d3b1:	lea    rdx,[rax-0x88]
  41d3b8:	mov    rax,QWORD PTR [rbp-0xc8]
  41d3bf:	mov    QWORD PTR [rdx],rax
  41d3c2:	mov    eax,DWORD PTR [rbp-0x98]
  41d3c8:	inc    eax
  41d3ca:	mov    DWORD PTR [rbp-0x98],eax
  41d3d0:	cmp    QWORD PTR [rbp-0xa8],0x0
  41d3d8:	je     41d43f <flatcc_builder_create_struct@@Base+0x19b>
  41d3da:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d3e1:	mov    rax,QWORD PTR [rbp-0xa8]
  41d3e8:	add    rax,rdx
  41d3eb:	mov    QWORD PTR [rbp-0xa0],rax
  41d3f2:	mov    eax,DWORD PTR [rbp-0x98]
  41d3f8:	cdqe   
  41d3fa:	shl    rax,0x4
  41d3fe:	add    rax,rbp
  41d401:	sub    rax,0x90
  41d407:	mov    rdx,0x439260
  41d40e:	mov    QWORD PTR [rax],rdx
  41d411:	mov    eax,DWORD PTR [rbp-0x98]
  41d417:	cdqe   
  41d419:	shl    rax,0x4
  41d41d:	add    rax,rbp
  41d420:	lea    rdx,[rax-0x88]
  41d427:	mov    rax,QWORD PTR [rbp-0xa8]
  41d42e:	mov    QWORD PTR [rdx],rax
  41d431:	mov    eax,DWORD PTR [rbp-0x98]
  41d437:	inc    eax
  41d439:	mov    DWORD PTR [rbp-0x98],eax
  41d43f:	lea    rdx,[rbp-0xa0]
  41d446:	mov    rax,QWORD PTR [rbp-0xb8]
  41d44d:	mov    rsi,rdx
  41d450:	mov    rdi,rax
  41d453:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41d458:	mov    rcx,QWORD PTR [rbp-0x8]
  41d45c:	xor    rcx,QWORD PTR fs:0x28
  41d465:	je     41d46c <flatcc_builder_create_struct@@Base+0x1c8>
  41d467:	call   4061a0 <__stack_chk_fail@plt>
  41d46c:	leave  
  41d46d:	ret    

000000000041d46e <flatcc_builder_start_buffer@@Base>:
  41d46e:	endbr64 
  41d472:	push   rbp
  41d473:	mov    rbp,rsp
  41d476:	sub    rsp,0x20
  41d47a:	mov    QWORD PTR [rbp-0x8],rdi
  41d47e:	mov    QWORD PTR [rbp-0x10],rsi
  41d482:	mov    eax,edx
  41d484:	mov    DWORD PTR [rbp-0x18],ecx
  41d487:	mov    WORD PTR [rbp-0x14],ax
  41d48b:	mov    rax,QWORD PTR [rbp-0x8]
  41d48f:	movzx  eax,WORD PTR [rax+0xe8]
  41d496:	movzx  edx,ax
  41d499:	mov    rax,QWORD PTR [rbp-0x8]
  41d49d:	mov    esi,edx
  41d49f:	mov    rdi,rax
  41d4a2:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41d4a7:	test   eax,eax
  41d4a9:	je     41d4b5 <flatcc_builder_start_buffer@@Base+0x47>
  41d4ab:	mov    eax,0xffffffff
  41d4b0:	jmp    41d5b9 <flatcc_builder_start_buffer@@Base+0x14b>
  41d4b5:	mov    rax,QWORD PTR [rbp-0x8]
  41d4b9:	mov    WORD PTR [rax+0xe8],0x1
  41d4c2:	mov    rax,QWORD PTR [rbp-0x8]
  41d4c6:	mov    rdx,QWORD PTR [rax+0x30]
  41d4ca:	mov    rax,QWORD PTR [rbp-0x8]
  41d4ce:	movzx  eax,WORD PTR [rax+0xec]
  41d4d5:	mov    WORD PTR [rdx+0x22],ax
  41d4d9:	mov    rdx,QWORD PTR [rbp-0x8]
  41d4dd:	movzx  eax,WORD PTR [rbp-0x14]
  41d4e1:	mov    WORD PTR [rdx+0xec],ax
  41d4e8:	mov    rax,QWORD PTR [rbp-0x8]
  41d4ec:	mov    rdx,QWORD PTR [rax+0x30]
  41d4f0:	mov    rax,QWORD PTR [rbp-0x8]
  41d4f4:	movzx  eax,WORD PTR [rax+0x10c]
  41d4fb:	mov    WORD PTR [rdx+0x20],ax
  41d4ff:	mov    eax,DWORD PTR [rbp-0x18]
  41d502:	mov    edx,eax
  41d504:	mov    rax,QWORD PTR [rbp-0x8]
  41d508:	mov    WORD PTR [rax+0x10c],dx
  41d50f:	mov    rax,QWORD PTR [rbp-0x8]
  41d513:	mov    rax,QWORD PTR [rax+0x30]
  41d517:	mov    rdx,QWORD PTR [rbp-0x8]
  41d51b:	mov    edx,DWORD PTR [rdx+0xf8]
  41d521:	mov    DWORD PTR [rax+0x14],edx
  41d524:	mov    rax,QWORD PTR [rbp-0x8]
  41d528:	mov    rax,QWORD PTR [rax+0x30]
  41d52c:	mov    rdx,QWORD PTR [rbp-0x8]
  41d530:	mov    edx,DWORD PTR [rdx+0x100]
  41d536:	mov    DWORD PTR [rax+0x1c],edx
  41d539:	mov    rax,QWORD PTR [rbp-0x8]
  41d53d:	mov    edx,DWORD PTR [rax+0xf0]
  41d543:	mov    rax,QWORD PTR [rbp-0x8]
  41d547:	mov    DWORD PTR [rax+0xf8],edx
  41d54d:	mov    rax,QWORD PTR [rbp-0x8]
  41d551:	mov    eax,DWORD PTR [rax+0xfc]
  41d557:	lea    ecx,[rax+0x1]
  41d55a:	mov    rdx,QWORD PTR [rbp-0x8]
  41d55e:	mov    DWORD PTR [rdx+0xfc],ecx
  41d564:	mov    rdx,QWORD PTR [rbp-0x8]
  41d568:	mov    DWORD PTR [rdx+0x100],eax
  41d56e:	mov    rax,QWORD PTR [rbp-0x8]
  41d572:	mov    rax,QWORD PTR [rax+0x30]
  41d576:	mov    rdx,QWORD PTR [rbp-0x8]
  41d57a:	mov    edx,DWORD PTR [rdx+0x110]
  41d580:	mov    DWORD PTR [rax+0x10],edx
  41d583:	cmp    QWORD PTR [rbp-0x10],0x0
  41d588:	je     41d590 <flatcc_builder_start_buffer@@Base+0x122>
  41d58a:	mov    rax,QWORD PTR [rbp-0x10]
  41d58e:	jmp    41d597 <flatcc_builder_start_buffer@@Base+0x129>
  41d590:	mov    rax,0x439260
  41d597:	mov    rdx,QWORD PTR [rbp-0x8]
  41d59b:	add    rdx,0x110
  41d5a2:	mov    eax,DWORD PTR [rax]
  41d5a4:	mov    DWORD PTR [rdx],eax
  41d5a6:	mov    rax,QWORD PTR [rbp-0x8]
  41d5aa:	mov    rax,QWORD PTR [rax+0x30]
  41d5ae:	mov    WORD PTR [rax+0xe],0x1
  41d5b4:	mov    eax,0x0
  41d5b9:	leave  
  41d5ba:	ret    

000000000041d5bb <flatcc_builder_end_buffer@@Base>:
  41d5bb:	endbr64 
  41d5bf:	push   rbp
  41d5c0:	mov    rbp,rsp
  41d5c3:	sub    rsp,0x20
  41d5c7:	mov    QWORD PTR [rbp-0x18],rdi
  41d5cb:	mov    DWORD PTR [rbp-0x1c],esi
  41d5ce:	mov    rax,QWORD PTR [rbp-0x18]
  41d5d2:	movzx  eax,WORD PTR [rax+0x10c]
  41d5d9:	movzx  eax,ax
  41d5dc:	and    eax,0x2
  41d5df:	mov    DWORD PTR [rbp-0x8],eax
  41d5e2:	mov    rax,QWORD PTR [rbp-0x18]
  41d5e6:	mov    eax,DWORD PTR [rax+0x100]
  41d5ec:	test   eax,eax
  41d5ee:	setne  al
  41d5f1:	movzx  eax,al
  41d5f4:	or     DWORD PTR [rbp-0x8],eax
  41d5f7:	mov    rax,QWORD PTR [rbp-0x18]
  41d5fb:	mov    rax,QWORD PTR [rax+0x30]
  41d5ff:	movzx  eax,WORD PTR [rax+0xe]
  41d603:	cmp    ax,0x1
  41d607:	je     41d628 <flatcc_builder_end_buffer@@Base+0x6d>
  41d609:	lea    rcx,[rip+0x1c3b0]        # 4399c0 <flatcc_builder_padding_base@@Base+0x760>
  41d610:	mov    edx,0x346
  41d615:	lea    rsi,[rip+0x1be44]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d61c:	lea    rdi,[rip+0x1bf0d]        # 439530 <flatcc_builder_padding_base@@Base+0x2d0>
  41d623:	call   4061b0 <__assert_fail@plt>
  41d628:	mov    rax,QWORD PTR [rbp-0x18]
  41d62c:	movzx  eax,WORD PTR [rax+0xec]
  41d633:	movzx  edx,ax
  41d636:	mov    rax,QWORD PTR [rbp-0x18]
  41d63a:	mov    esi,edx
  41d63c:	mov    rdi,rax
  41d63f:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41d644:	mov    rax,QWORD PTR [rbp-0x18]
  41d648:	movzx  eax,WORD PTR [rax+0xe8]
  41d64f:	movzx  edi,ax
  41d652:	mov    rax,QWORD PTR [rbp-0x18]
  41d656:	movzx  eax,WORD PTR [rax+0xec]
  41d65d:	movzx  edx,ax
  41d660:	mov    rax,QWORD PTR [rbp-0x18]
  41d664:	lea    rsi,[rax+0x110]
  41d66b:	mov    r8d,DWORD PTR [rbp-0x8]
  41d66f:	mov    ecx,DWORD PTR [rbp-0x1c]
  41d672:	mov    rax,QWORD PTR [rbp-0x18]
  41d676:	mov    r9d,r8d
  41d679:	mov    r8d,edi
  41d67c:	mov    rdi,rax
  41d67f:	call   41ce6b <flatcc_builder_create_buffer@@Base>
  41d684:	mov    DWORD PTR [rbp-0x4],eax
  41d687:	cmp    DWORD PTR [rbp-0x4],0x0
  41d68b:	jne    41d694 <flatcc_builder_end_buffer@@Base+0xd9>
  41d68d:	mov    eax,0x0
  41d692:	jmp    41d6f9 <flatcc_builder_end_buffer@@Base+0x13e>
  41d694:	mov    rax,QWORD PTR [rbp-0x18]
  41d698:	mov    rax,QWORD PTR [rax+0x30]
  41d69c:	mov    edx,DWORD PTR [rax+0x14]
  41d69f:	mov    rax,QWORD PTR [rbp-0x18]
  41d6a3:	mov    DWORD PTR [rax+0xf8],edx
  41d6a9:	mov    rax,QWORD PTR [rbp-0x18]
  41d6ad:	mov    rax,QWORD PTR [rax+0x30]
  41d6b1:	mov    edx,DWORD PTR [rax+0x1c]
  41d6b4:	mov    rax,QWORD PTR [rbp-0x18]
  41d6b8:	mov    DWORD PTR [rax+0x100],edx
  41d6be:	mov    rax,QWORD PTR [rbp-0x18]
  41d6c2:	mov    rax,QWORD PTR [rax+0x30]
  41d6c6:	mov    edx,DWORD PTR [rax+0x10]
  41d6c9:	mov    rax,QWORD PTR [rbp-0x18]
  41d6cd:	mov    DWORD PTR [rax+0x110],edx
  41d6d3:	mov    rax,QWORD PTR [rbp-0x18]
  41d6d7:	mov    rax,QWORD PTR [rax+0x30]
  41d6db:	movzx  eax,WORD PTR [rax+0x20]
  41d6df:	mov    rdx,QWORD PTR [rbp-0x18]
  41d6e3:	mov    WORD PTR [rdx+0x10c],ax
  41d6ea:	mov    rax,QWORD PTR [rbp-0x18]
  41d6ee:	mov    rdi,rax
  41d6f1:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41d6f6:	mov    eax,DWORD PTR [rbp-0x4]
  41d6f9:	leave  
  41d6fa:	ret    

000000000041d6fb <flatcc_builder_start_struct@@Base>:
  41d6fb:	endbr64 
  41d6ff:	push   rbp
  41d700:	mov    rbp,rsp
  41d703:	sub    rsp,0x20
  41d707:	mov    QWORD PTR [rbp-0x8],rdi
  41d70b:	mov    QWORD PTR [rbp-0x10],rsi
  41d70f:	mov    eax,edx
  41d711:	mov    WORD PTR [rbp-0x14],ax
  41d715:	movzx  edx,WORD PTR [rbp-0x14]
  41d719:	mov    rax,QWORD PTR [rbp-0x8]
  41d71d:	mov    esi,edx
  41d71f:	mov    rdi,rax
  41d722:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41d727:	test   eax,eax
  41d729:	je     41d732 <flatcc_builder_start_struct@@Base+0x37>
  41d72b:	mov    eax,0x0
  41d730:	jmp    41d765 <flatcc_builder_start_struct@@Base+0x6a>
  41d732:	mov    rax,QWORD PTR [rbp-0x8]
  41d736:	mov    rax,QWORD PTR [rax+0x30]
  41d73a:	mov    WORD PTR [rax+0xe],0x2
  41d740:	mov    rax,QWORD PTR [rbp-0x8]
  41d744:	mov    esi,0xfffffffc
  41d749:	mov    rdi,rax
  41d74c:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41d751:	mov    rax,QWORD PTR [rbp-0x10]
  41d755:	mov    edx,eax
  41d757:	mov    rax,QWORD PTR [rbp-0x8]
  41d75b:	mov    esi,edx
  41d75d:	mov    rdi,rax
  41d760:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41d765:	leave  
  41d766:	ret    

000000000041d767 <flatcc_builder_struct_edit@@Base>:
  41d767:	endbr64 
  41d76b:	push   rbp
  41d76c:	mov    rbp,rsp
  41d76f:	mov    QWORD PTR [rbp-0x8],rdi
  41d773:	mov    rax,QWORD PTR [rbp-0x8]
  41d777:	mov    rax,QWORD PTR [rax+0x18]
  41d77b:	pop    rbp
  41d77c:	ret    

000000000041d77d <flatcc_builder_end_struct@@Base>:
  41d77d:	endbr64 
  41d781:	push   rbp
  41d782:	mov    rbp,rsp
  41d785:	sub    rsp,0x20
  41d789:	mov    QWORD PTR [rbp-0x18],rdi
  41d78d:	mov    rax,QWORD PTR [rbp-0x18]
  41d791:	mov    rax,QWORD PTR [rax+0x30]
  41d795:	movzx  eax,WORD PTR [rax+0xe]
  41d799:	cmp    ax,0x2
  41d79d:	je     41d7be <flatcc_builder_end_struct@@Base+0x41>
  41d79f:	lea    rcx,[rip+0x1c23a]        # 4399e0 <flatcc_builder_padding_base@@Base+0x780>
  41d7a6:	mov    edx,0x368
  41d7ab:	lea    rsi,[rip+0x1bcae]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d7b2:	lea    rdi,[rip+0x1bda7]        # 439560 <flatcc_builder_padding_base@@Base+0x300>
  41d7b9:	call   4061b0 <__assert_fail@plt>
  41d7be:	mov    rax,QWORD PTR [rbp-0x18]
  41d7c2:	movzx  eax,WORD PTR [rax+0xea]
  41d7c9:	movzx  edx,ax
  41d7cc:	mov    rax,QWORD PTR [rbp-0x18]
  41d7d0:	mov    eax,DWORD PTR [rax+0x20]
  41d7d3:	mov    edi,eax
  41d7d5:	mov    rax,QWORD PTR [rbp-0x18]
  41d7d9:	mov    rsi,QWORD PTR [rax+0x18]
  41d7dd:	mov    rax,QWORD PTR [rbp-0x18]
  41d7e1:	mov    ecx,edx
  41d7e3:	mov    rdx,rdi
  41d7e6:	mov    rdi,rax
  41d7e9:	call   41d2a4 <flatcc_builder_create_struct@@Base>
  41d7ee:	mov    DWORD PTR [rbp-0x4],eax
  41d7f1:	cmp    DWORD PTR [rbp-0x4],0x0
  41d7f5:	jne    41d7fe <flatcc_builder_end_struct@@Base+0x81>
  41d7f7:	mov    eax,0x0
  41d7fc:	jmp    41d80d <flatcc_builder_end_struct@@Base+0x90>
  41d7fe:	mov    rax,QWORD PTR [rbp-0x18]
  41d802:	mov    rdi,rax
  41d805:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41d80a:	mov    eax,DWORD PTR [rbp-0x4]
  41d80d:	leave  
  41d80e:	ret    
  41d80f:	push   rbp
  41d810:	mov    rbp,rsp
  41d813:	sub    rsp,0x20
  41d817:	mov    QWORD PTR [rbp-0x18],rdi
  41d81b:	mov    DWORD PTR [rbp-0x1c],esi
  41d81e:	mov    DWORD PTR [rbp-0x20],edx
  41d821:	mov    rax,QWORD PTR [rbp-0x18]
  41d825:	mov    rax,QWORD PTR [rax+0x30]
  41d829:	mov    eax,DWORD PTR [rax+0x14]
  41d82c:	mov    DWORD PTR [rbp-0x8],eax
  41d82f:	mov    edx,DWORD PTR [rbp-0x8]
  41d832:	mov    eax,DWORD PTR [rbp-0x1c]
  41d835:	add    eax,edx
  41d837:	mov    DWORD PTR [rbp-0x4],eax
  41d83a:	mov    eax,DWORD PTR [rbp-0x8]
  41d83d:	cmp    eax,DWORD PTR [rbp-0x4]
  41d840:	ja     41d84a <flatcc_builder_end_struct@@Base+0xcd>
  41d842:	mov    eax,DWORD PTR [rbp-0x4]
  41d845:	cmp    eax,DWORD PTR [rbp-0x20]
  41d848:	jbe    41d880 <flatcc_builder_end_struct@@Base+0x103>
  41d84a:	mov    eax,DWORD PTR [rbp-0x8]
  41d84d:	cmp    eax,DWORD PTR [rbp-0x4]
  41d850:	ja     41d85a <flatcc_builder_end_struct@@Base+0xdd>
  41d852:	mov    eax,DWORD PTR [rbp-0x4]
  41d855:	cmp    eax,DWORD PTR [rbp-0x20]
  41d858:	jbe    41d879 <flatcc_builder_end_struct@@Base+0xfc>
  41d85a:	lea    rcx,[rip+0x1c19f]        # 439a00 <flatcc_builder_padding_base@@Base+0x7a0>
  41d861:	mov    edx,0x37c
  41d866:	lea    rsi,[rip+0x1bbf3]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d86d:	lea    rdi,[rip+0x1bd18]        # 43958c <flatcc_builder_padding_base@@Base+0x32c>
  41d874:	call   4061b0 <__assert_fail@plt>
  41d879:	mov    eax,0xffffffff
  41d87e:	jmp    41d893 <flatcc_builder_end_struct@@Base+0x116>
  41d880:	mov    rax,QWORD PTR [rbp-0x18]
  41d884:	mov    rax,QWORD PTR [rax+0x30]
  41d888:	mov    edx,DWORD PTR [rbp-0x4]
  41d88b:	mov    DWORD PTR [rax+0x14],edx
  41d88e:	mov    eax,0x0
  41d893:	leave  
  41d894:	ret    

000000000041d895 <flatcc_builder_extend_vector@@Base>:
  41d895:	endbr64 
  41d899:	push   rbp
  41d89a:	mov    rbp,rsp
  41d89d:	sub    rsp,0x10
  41d8a1:	mov    QWORD PTR [rbp-0x8],rdi
  41d8a5:	mov    QWORD PTR [rbp-0x10],rsi
  41d8a9:	mov    rax,QWORD PTR [rbp-0x8]
  41d8ad:	mov    rax,QWORD PTR [rax+0x30]
  41d8b1:	mov    edx,DWORD PTR [rax+0x18]
  41d8b4:	mov    rax,QWORD PTR [rbp-0x10]
  41d8b8:	mov    ecx,eax
  41d8ba:	mov    rax,QWORD PTR [rbp-0x8]
  41d8be:	mov    esi,ecx
  41d8c0:	mov    rdi,rax
  41d8c3:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41d8c8:	test   eax,eax
  41d8ca:	je     41d8d3 <flatcc_builder_extend_vector@@Base+0x3e>
  41d8cc:	mov    eax,0x0
  41d8d1:	jmp    41d8f3 <flatcc_builder_extend_vector@@Base+0x5e>
  41d8d3:	mov    rax,QWORD PTR [rbp-0x8]
  41d8d7:	mov    rax,QWORD PTR [rax+0x30]
  41d8db:	mov    eax,DWORD PTR [rax+0x10]
  41d8de:	mov    rdx,QWORD PTR [rbp-0x10]
  41d8e2:	imul   edx,eax
  41d8e5:	mov    rax,QWORD PTR [rbp-0x8]
  41d8e9:	mov    esi,edx
  41d8eb:	mov    rdi,rax
  41d8ee:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41d8f3:	leave  
  41d8f4:	ret    

000000000041d8f5 <flatcc_builder_vector_push@@Base>:
  41d8f5:	endbr64 
  41d8f9:	push   rbp
  41d8fa:	mov    rbp,rsp
  41d8fd:	sub    rsp,0x10
  41d901:	mov    QWORD PTR [rbp-0x8],rdi
  41d905:	mov    QWORD PTR [rbp-0x10],rsi
  41d909:	mov    rax,QWORD PTR [rbp-0x8]
  41d90d:	mov    rax,QWORD PTR [rax+0x30]
  41d911:	movzx  eax,WORD PTR [rax+0xe]
  41d915:	cmp    ax,0x4
  41d919:	je     41d93a <flatcc_builder_vector_push@@Base+0x45>
  41d91b:	lea    rcx,[rip+0x1c0fe]        # 439a20 <flatcc_builder_padding_base@@Base+0x7c0>
  41d922:	mov    edx,0x38b
  41d927:	lea    rsi,[rip+0x1bb32]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d92e:	lea    rdi,[rip+0x1bc73]        # 4395a8 <flatcc_builder_padding_base@@Base+0x348>
  41d935:	call   4061b0 <__assert_fail@plt>
  41d93a:	mov    rax,QWORD PTR [rbp-0x8]
  41d93e:	mov    rax,QWORD PTR [rax+0x30]
  41d942:	mov    edx,DWORD PTR [rax+0x14]
  41d945:	mov    rax,QWORD PTR [rbp-0x8]
  41d949:	mov    rax,QWORD PTR [rax+0x30]
  41d94d:	mov    eax,DWORD PTR [rax+0x18]
  41d950:	cmp    edx,eax
  41d952:	jbe    41d994 <flatcc_builder_vector_push@@Base+0x9f>
  41d954:	mov    rax,QWORD PTR [rbp-0x8]
  41d958:	mov    rax,QWORD PTR [rax+0x30]
  41d95c:	mov    edx,DWORD PTR [rax+0x14]
  41d95f:	mov    rax,QWORD PTR [rbp-0x8]
  41d963:	mov    rax,QWORD PTR [rax+0x30]
  41d967:	mov    eax,DWORD PTR [rax+0x18]
  41d96a:	cmp    edx,eax
  41d96c:	jbe    41d98d <flatcc_builder_vector_push@@Base+0x98>
  41d96e:	lea    rcx,[rip+0x1c0ab]        # 439a20 <flatcc_builder_padding_base@@Base+0x7c0>
  41d975:	mov    edx,0x38c
  41d97a:	lea    rsi,[rip+0x1badf]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41d981:	lea    rdi,[rip+0x1bc50]        # 4395d8 <flatcc_builder_padding_base@@Base+0x378>
  41d988:	call   4061b0 <__assert_fail@plt>
  41d98d:	mov    eax,0x0
  41d992:	jmp    41d9ca <flatcc_builder_vector_push@@Base+0xd5>
  41d994:	mov    rax,QWORD PTR [rbp-0x8]
  41d998:	mov    rax,QWORD PTR [rax+0x30]
  41d99c:	mov    edx,DWORD PTR [rax+0x14]
  41d99f:	mov    rax,QWORD PTR [rbp-0x8]
  41d9a3:	mov    rax,QWORD PTR [rax+0x30]
  41d9a7:	inc    edx
  41d9a9:	mov    DWORD PTR [rax+0x14],edx
  41d9ac:	mov    rax,QWORD PTR [rbp-0x8]
  41d9b0:	mov    rax,QWORD PTR [rax+0x30]
  41d9b4:	mov    edx,DWORD PTR [rax+0x10]
  41d9b7:	mov    rcx,QWORD PTR [rbp-0x10]
  41d9bb:	mov    rax,QWORD PTR [rbp-0x8]
  41d9bf:	mov    rsi,rcx
  41d9c2:	mov    rdi,rax
  41d9c5:	call   41b932 <flatcc_builder_default_alloc@@Base+0x332>
  41d9ca:	leave  
  41d9cb:	ret    

000000000041d9cc <flatcc_builder_append_vector@@Base>:
  41d9cc:	endbr64 
  41d9d0:	push   rbp
  41d9d1:	mov    rbp,rsp
  41d9d4:	sub    rsp,0x20
  41d9d8:	mov    QWORD PTR [rbp-0x8],rdi
  41d9dc:	mov    QWORD PTR [rbp-0x10],rsi
  41d9e0:	mov    QWORD PTR [rbp-0x18],rdx
  41d9e4:	mov    rax,QWORD PTR [rbp-0x8]
  41d9e8:	mov    rax,QWORD PTR [rax+0x30]
  41d9ec:	movzx  eax,WORD PTR [rax+0xe]
  41d9f0:	cmp    ax,0x4
  41d9f4:	je     41da15 <flatcc_builder_append_vector@@Base+0x49>
  41d9f6:	lea    rcx,[rip+0x1c043]        # 439a40 <flatcc_builder_padding_base@@Base+0x7e0>
  41d9fd:	mov    edx,0x393
  41da02:	lea    rsi,[rip+0x1ba57]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41da09:	lea    rdi,[rip+0x1bb98]        # 4395a8 <flatcc_builder_padding_base@@Base+0x348>
  41da10:	call   4061b0 <__assert_fail@plt>
  41da15:	mov    rax,QWORD PTR [rbp-0x8]
  41da19:	mov    rax,QWORD PTR [rax+0x30]
  41da1d:	mov    edx,DWORD PTR [rax+0x18]
  41da20:	mov    rax,QWORD PTR [rbp-0x18]
  41da24:	mov    ecx,eax
  41da26:	mov    rax,QWORD PTR [rbp-0x8]
  41da2a:	mov    esi,ecx
  41da2c:	mov    rdi,rax
  41da2f:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41da34:	test   eax,eax
  41da36:	je     41da3f <flatcc_builder_append_vector@@Base+0x73>
  41da38:	mov    eax,0x0
  41da3d:	jmp    41da64 <flatcc_builder_append_vector@@Base+0x98>
  41da3f:	mov    rax,QWORD PTR [rbp-0x8]
  41da43:	mov    rax,QWORD PTR [rax+0x30]
  41da47:	mov    eax,DWORD PTR [rax+0x10]
  41da4a:	mov    rdx,QWORD PTR [rbp-0x18]
  41da4e:	imul   edx,eax
  41da51:	mov    rcx,QWORD PTR [rbp-0x10]
  41da55:	mov    rax,QWORD PTR [rbp-0x8]
  41da59:	mov    rsi,rcx
  41da5c:	mov    rdi,rax
  41da5f:	call   41b932 <flatcc_builder_default_alloc@@Base+0x332>
  41da64:	leave  
  41da65:	ret    

000000000041da66 <flatcc_builder_extend_offset_vector@@Base>:
  41da66:	endbr64 
  41da6a:	push   rbp
  41da6b:	mov    rbp,rsp
  41da6e:	sub    rsp,0x10
  41da72:	mov    QWORD PTR [rbp-0x8],rdi
  41da76:	mov    QWORD PTR [rbp-0x10],rsi
  41da7a:	mov    rax,QWORD PTR [rbp-0x10]
  41da7e:	mov    ecx,eax
  41da80:	mov    rax,QWORD PTR [rbp-0x8]
  41da84:	mov    edx,0x3fffffff
  41da89:	mov    esi,ecx
  41da8b:	mov    rdi,rax
  41da8e:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41da93:	test   eax,eax
  41da95:	je     41da9e <flatcc_builder_extend_offset_vector@@Base+0x38>
  41da97:	mov    eax,0x0
  41da9c:	jmp    41dab7 <flatcc_builder_extend_offset_vector@@Base+0x51>
  41da9e:	mov    rax,QWORD PTR [rbp-0x10]
  41daa2:	lea    edx,[rax*4+0x0]
  41daa9:	mov    rax,QWORD PTR [rbp-0x8]
  41daad:	mov    esi,edx
  41daaf:	mov    rdi,rax
  41dab2:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41dab7:	leave  
  41dab8:	ret    

000000000041dab9 <flatcc_builder_offset_vector_push@@Base>:
  41dab9:	endbr64 
  41dabd:	push   rbp
  41dabe:	mov    rbp,rsp
  41dac1:	sub    rsp,0x20
  41dac5:	mov    QWORD PTR [rbp-0x18],rdi
  41dac9:	mov    DWORD PTR [rbp-0x1c],esi
  41dacc:	mov    rax,QWORD PTR [rbp-0x18]
  41dad0:	mov    rax,QWORD PTR [rax+0x30]
  41dad4:	movzx  eax,WORD PTR [rax+0xe]
  41dad8:	cmp    ax,0x5
  41dadc:	je     41dafd <flatcc_builder_offset_vector_push@@Base+0x44>
  41dade:	lea    rcx,[rip+0x1bf7b]        # 439a60 <flatcc_builder_padding_base@@Base+0x800>
  41dae5:	mov    edx,0x3a6
  41daea:	lea    rsi,[rip+0x1b96f]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41daf1:	lea    rdi,[rip+0x1bb20]        # 439618 <flatcc_builder_padding_base@@Base+0x3b8>
  41daf8:	call   4061b0 <__assert_fail@plt>
  41dafd:	mov    rax,QWORD PTR [rbp-0x18]
  41db01:	mov    rax,QWORD PTR [rax+0x30]
  41db05:	mov    eax,DWORD PTR [rax+0x14]
  41db08:	cmp    eax,0x3fffffff
  41db0d:	jne    41db16 <flatcc_builder_offset_vector_push@@Base+0x5d>
  41db0f:	mov    eax,0x0
  41db14:	jmp    41db5e <flatcc_builder_offset_vector_push@@Base+0xa5>
  41db16:	mov    rax,QWORD PTR [rbp-0x18]
  41db1a:	mov    rax,QWORD PTR [rax+0x30]
  41db1e:	mov    edx,DWORD PTR [rax+0x14]
  41db21:	mov    rax,QWORD PTR [rbp-0x18]
  41db25:	mov    rax,QWORD PTR [rax+0x30]
  41db29:	inc    edx
  41db2b:	mov    DWORD PTR [rax+0x14],edx
  41db2e:	mov    rax,QWORD PTR [rbp-0x18]
  41db32:	mov    esi,0x4
  41db37:	mov    rdi,rax
  41db3a:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41db3f:	mov    QWORD PTR [rbp-0x8],rax
  41db43:	cmp    QWORD PTR [rbp-0x8],0x0
  41db48:	jne    41db51 <flatcc_builder_offset_vector_push@@Base+0x98>
  41db4a:	mov    eax,0x0
  41db4f:	jmp    41db5e <flatcc_builder_offset_vector_push@@Base+0xa5>
  41db51:	mov    rax,QWORD PTR [rbp-0x8]
  41db55:	mov    edx,DWORD PTR [rbp-0x1c]
  41db58:	mov    DWORD PTR [rax],edx
  41db5a:	mov    rax,QWORD PTR [rbp-0x8]
  41db5e:	leave  
  41db5f:	ret    

000000000041db60 <flatcc_builder_append_offset_vector@@Base>:
  41db60:	endbr64 
  41db64:	push   rbp
  41db65:	mov    rbp,rsp
  41db68:	sub    rsp,0x20
  41db6c:	mov    QWORD PTR [rbp-0x8],rdi
  41db70:	mov    QWORD PTR [rbp-0x10],rsi
  41db74:	mov    QWORD PTR [rbp-0x18],rdx
  41db78:	mov    rax,QWORD PTR [rbp-0x8]
  41db7c:	mov    rax,QWORD PTR [rax+0x30]
  41db80:	movzx  eax,WORD PTR [rax+0xe]
  41db84:	cmp    ax,0x5
  41db88:	je     41dba9 <flatcc_builder_append_offset_vector@@Base+0x49>
  41db8a:	lea    rcx,[rip+0x1bf0f]        # 439aa0 <flatcc_builder_padding_base@@Base+0x840>
  41db91:	mov    edx,0x3b4
  41db96:	lea    rsi,[rip+0x1b8c3]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41db9d:	lea    rdi,[rip+0x1ba74]        # 439618 <flatcc_builder_padding_base@@Base+0x3b8>
  41dba4:	call   4061b0 <__assert_fail@plt>
  41dba9:	mov    rax,QWORD PTR [rbp-0x18]
  41dbad:	mov    ecx,eax
  41dbaf:	mov    rax,QWORD PTR [rbp-0x8]
  41dbb3:	mov    edx,0x3fffffff
  41dbb8:	mov    esi,ecx
  41dbba:	mov    rdi,rax
  41dbbd:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41dbc2:	test   eax,eax
  41dbc4:	je     41dbcd <flatcc_builder_append_offset_vector@@Base+0x6d>
  41dbc6:	mov    eax,0x0
  41dbcb:	jmp    41dbeb <flatcc_builder_append_offset_vector@@Base+0x8b>
  41dbcd:	mov    rax,QWORD PTR [rbp-0x18]
  41dbd1:	lea    edx,[rax*4+0x0]
  41dbd8:	mov    rcx,QWORD PTR [rbp-0x10]
  41dbdc:	mov    rax,QWORD PTR [rbp-0x8]
  41dbe0:	mov    rsi,rcx
  41dbe3:	mov    rdi,rax
  41dbe6:	call   41b932 <flatcc_builder_default_alloc@@Base+0x332>
  41dbeb:	leave  
  41dbec:	ret    

000000000041dbed <flatcc_builder_extend_string@@Base>:
  41dbed:	endbr64 
  41dbf1:	push   rbp
  41dbf2:	mov    rbp,rsp
  41dbf5:	sub    rsp,0x10
  41dbf9:	mov    QWORD PTR [rbp-0x8],rdi
  41dbfd:	mov    QWORD PTR [rbp-0x10],rsi
  41dc01:	mov    rax,QWORD PTR [rbp-0x8]
  41dc05:	mov    rax,QWORD PTR [rax+0x30]
  41dc09:	movzx  eax,WORD PTR [rax+0xe]
  41dc0d:	cmp    ax,0x6
  41dc11:	je     41dc32 <flatcc_builder_extend_string@@Base+0x45>
  41dc13:	lea    rcx,[rip+0x1beb6]        # 439ad0 <flatcc_builder_padding_base@@Base+0x870>
  41dc1a:	mov    edx,0x3bd
  41dc1f:	lea    rsi,[rip+0x1b83a]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41dc26:	lea    rdi,[rip+0x1ba23]        # 439650 <flatcc_builder_padding_base@@Base+0x3f0>
  41dc2d:	call   4061b0 <__assert_fail@plt>
  41dc32:	mov    rax,QWORD PTR [rbp-0x10]
  41dc36:	mov    ecx,eax
  41dc38:	mov    rax,QWORD PTR [rbp-0x8]
  41dc3c:	mov    edx,0xffffffff
  41dc41:	mov    esi,ecx
  41dc43:	mov    rdi,rax
  41dc46:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41dc4b:	test   eax,eax
  41dc4d:	je     41dc56 <flatcc_builder_extend_string@@Base+0x69>
  41dc4f:	mov    eax,0x0
  41dc54:	jmp    41dc6a <flatcc_builder_extend_string@@Base+0x7d>
  41dc56:	mov    rax,QWORD PTR [rbp-0x10]
  41dc5a:	mov    edx,eax
  41dc5c:	mov    rax,QWORD PTR [rbp-0x8]
  41dc60:	mov    esi,edx
  41dc62:	mov    rdi,rax
  41dc65:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41dc6a:	leave  
  41dc6b:	ret    

000000000041dc6c <flatcc_builder_append_string@@Base>:
  41dc6c:	endbr64 
  41dc70:	push   rbp
  41dc71:	mov    rbp,rsp
  41dc74:	sub    rsp,0x20
  41dc78:	mov    QWORD PTR [rbp-0x8],rdi
  41dc7c:	mov    QWORD PTR [rbp-0x10],rsi
  41dc80:	mov    QWORD PTR [rbp-0x18],rdx
  41dc84:	mov    rax,QWORD PTR [rbp-0x8]
  41dc88:	mov    rax,QWORD PTR [rax+0x30]
  41dc8c:	movzx  eax,WORD PTR [rax+0xe]
  41dc90:	cmp    ax,0x6
  41dc94:	je     41dcb5 <flatcc_builder_append_string@@Base+0x49>
  41dc96:	lea    rcx,[rip+0x1be53]        # 439af0 <flatcc_builder_padding_base@@Base+0x890>
  41dc9d:	mov    edx,0x3c6
  41dca2:	lea    rsi,[rip+0x1b7b7]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41dca9:	lea    rdi,[rip+0x1b9a0]        # 439650 <flatcc_builder_padding_base@@Base+0x3f0>
  41dcb0:	call   4061b0 <__assert_fail@plt>
  41dcb5:	mov    rax,QWORD PTR [rbp-0x18]
  41dcb9:	mov    ecx,eax
  41dcbb:	mov    rax,QWORD PTR [rbp-0x8]
  41dcbf:	mov    edx,0xffffffff
  41dcc4:	mov    esi,ecx
  41dcc6:	mov    rdi,rax
  41dcc9:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41dcce:	test   eax,eax
  41dcd0:	je     41dcd9 <flatcc_builder_append_string@@Base+0x6d>
  41dcd2:	mov    eax,0x0
  41dcd7:	jmp    41dcf2 <flatcc_builder_append_string@@Base+0x86>
  41dcd9:	mov    rax,QWORD PTR [rbp-0x18]
  41dcdd:	mov    edx,eax
  41dcdf:	mov    rcx,QWORD PTR [rbp-0x10]
  41dce3:	mov    rax,QWORD PTR [rbp-0x8]
  41dce7:	mov    rsi,rcx
  41dcea:	mov    rdi,rax
  41dced:	call   41b932 <flatcc_builder_default_alloc@@Base+0x332>
  41dcf2:	leave  
  41dcf3:	ret    

000000000041dcf4 <flatcc_builder_append_string_str@@Base>:
  41dcf4:	endbr64 
  41dcf8:	push   rbp
  41dcf9:	mov    rbp,rsp
  41dcfc:	sub    rsp,0x10
  41dd00:	mov    QWORD PTR [rbp-0x8],rdi
  41dd04:	mov    QWORD PTR [rbp-0x10],rsi
  41dd08:	mov    rax,QWORD PTR [rbp-0x10]
  41dd0c:	mov    rdi,rax
  41dd0f:	call   406190 <strlen@plt>
  41dd14:	mov    rdx,rax
  41dd17:	mov    rcx,QWORD PTR [rbp-0x10]
  41dd1b:	mov    rax,QWORD PTR [rbp-0x8]
  41dd1f:	mov    rsi,rcx
  41dd22:	mov    rdi,rax
  41dd25:	call   41dc6c <flatcc_builder_append_string@@Base>
  41dd2a:	leave  
  41dd2b:	ret    

000000000041dd2c <flatcc_builder_append_string_strn@@Base>:
  41dd2c:	endbr64 
  41dd30:	push   rbp
  41dd31:	mov    rbp,rsp
  41dd34:	sub    rsp,0x20
  41dd38:	mov    QWORD PTR [rbp-0x8],rdi
  41dd3c:	mov    QWORD PTR [rbp-0x10],rsi
  41dd40:	mov    QWORD PTR [rbp-0x18],rdx
  41dd44:	mov    rdx,QWORD PTR [rbp-0x18]
  41dd48:	mov    rax,QWORD PTR [rbp-0x10]
  41dd4c:	mov    rsi,rdx
  41dd4f:	mov    rdi,rax
  41dd52:	call   41b5c0 <main@@Base+0xa7d>
  41dd57:	mov    rdx,rax
  41dd5a:	mov    rcx,QWORD PTR [rbp-0x10]
  41dd5e:	mov    rax,QWORD PTR [rbp-0x8]
  41dd62:	mov    rsi,rcx
  41dd65:	mov    rdi,rax
  41dd68:	call   41dc6c <flatcc_builder_append_string@@Base>
  41dd6d:	leave  
  41dd6e:	ret    

000000000041dd6f <flatcc_builder_truncate_vector@@Base>:
  41dd6f:	endbr64 
  41dd73:	push   rbp
  41dd74:	mov    rbp,rsp
  41dd77:	sub    rsp,0x10
  41dd7b:	mov    QWORD PTR [rbp-0x8],rdi
  41dd7f:	mov    QWORD PTR [rbp-0x10],rsi
  41dd83:	mov    rax,QWORD PTR [rbp-0x8]
  41dd87:	mov    rax,QWORD PTR [rax+0x30]
  41dd8b:	movzx  eax,WORD PTR [rax+0xe]
  41dd8f:	cmp    ax,0x4
  41dd93:	je     41ddb4 <flatcc_builder_truncate_vector@@Base+0x45>
  41dd95:	lea    rcx,[rip+0x1bd74]        # 439b10 <flatcc_builder_padding_base@@Base+0x8b0>
  41dd9c:	mov    edx,0x3d9
  41dda1:	lea    rsi,[rip+0x1b6b8]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41dda8:	lea    rdi,[rip+0x1b7f9]        # 4395a8 <flatcc_builder_padding_base@@Base+0x348>
  41ddaf:	call   4061b0 <__assert_fail@plt>
  41ddb4:	mov    rax,QWORD PTR [rbp-0x8]
  41ddb8:	mov    rax,QWORD PTR [rax+0x30]
  41ddbc:	mov    eax,DWORD PTR [rax+0x14]
  41ddbf:	mov    eax,eax
  41ddc1:	cmp    QWORD PTR [rbp-0x10],rax
  41ddc5:	jbe    41de00 <flatcc_builder_truncate_vector@@Base+0x91>
  41ddc7:	mov    rax,QWORD PTR [rbp-0x8]
  41ddcb:	mov    rax,QWORD PTR [rax+0x30]
  41ddcf:	mov    eax,DWORD PTR [rax+0x14]
  41ddd2:	mov    eax,eax
  41ddd4:	cmp    QWORD PTR [rbp-0x10],rax
  41ddd8:	jbe    41ddf9 <flatcc_builder_truncate_vector@@Base+0x8a>
  41ddda:	lea    rcx,[rip+0x1bd2f]        # 439b10 <flatcc_builder_padding_base@@Base+0x8b0>
  41dde1:	mov    edx,0x3da
  41dde6:	lea    rsi,[rip+0x1b673]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41dded:	lea    rdi,[rip+0x1b88c]        # 439680 <flatcc_builder_padding_base@@Base+0x420>
  41ddf4:	call   4061b0 <__assert_fail@plt>
  41ddf9:	mov    eax,0xffffffff
  41ddfe:	jmp    41de43 <flatcc_builder_truncate_vector@@Base+0xd4>
  41de00:	mov    rax,QWORD PTR [rbp-0x8]
  41de04:	mov    rax,QWORD PTR [rax+0x30]
  41de08:	mov    edx,DWORD PTR [rax+0x14]
  41de0b:	mov    rax,QWORD PTR [rbp-0x10]
  41de0f:	mov    ecx,eax
  41de11:	mov    rax,QWORD PTR [rbp-0x8]
  41de15:	mov    rax,QWORD PTR [rax+0x30]
  41de19:	sub    edx,ecx
  41de1b:	mov    DWORD PTR [rax+0x14],edx
  41de1e:	mov    rax,QWORD PTR [rbp-0x8]
  41de22:	mov    rax,QWORD PTR [rax+0x30]
  41de26:	mov    eax,DWORD PTR [rax+0x10]
  41de29:	mov    rdx,QWORD PTR [rbp-0x10]
  41de2d:	imul   edx,eax
  41de30:	mov    rax,QWORD PTR [rbp-0x8]
  41de34:	mov    esi,edx
  41de36:	mov    rdi,rax
  41de39:	call   41b8e6 <flatcc_builder_default_alloc@@Base+0x2e6>
  41de3e:	mov    eax,0x0
  41de43:	leave  
  41de44:	ret    

000000000041de45 <flatcc_builder_truncate_offset_vector@@Base>:
  41de45:	endbr64 
  41de49:	push   rbp
  41de4a:	mov    rbp,rsp
  41de4d:	sub    rsp,0x10
  41de51:	mov    QWORD PTR [rbp-0x8],rdi
  41de55:	mov    QWORD PTR [rbp-0x10],rsi
  41de59:	mov    rax,QWORD PTR [rbp-0x8]
  41de5d:	mov    rax,QWORD PTR [rax+0x30]
  41de61:	movzx  eax,WORD PTR [rax+0xe]
  41de65:	cmp    ax,0x5
  41de69:	je     41de8a <flatcc_builder_truncate_offset_vector@@Base+0x45>
  41de6b:	lea    rcx,[rip+0x1bcce]        # 439b40 <flatcc_builder_padding_base@@Base+0x8e0>
  41de72:	mov    edx,0x3e2
  41de77:	lea    rsi,[rip+0x1b5e2]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41de7e:	lea    rdi,[rip+0x1b793]        # 439618 <flatcc_builder_padding_base@@Base+0x3b8>
  41de85:	call   4061b0 <__assert_fail@plt>
  41de8a:	mov    rax,QWORD PTR [rbp-0x8]
  41de8e:	mov    rax,QWORD PTR [rax+0x30]
  41de92:	mov    eax,DWORD PTR [rax+0x14]
  41de95:	mov    rdx,QWORD PTR [rbp-0x10]
  41de99:	cmp    eax,edx
  41de9b:	jae    41ded6 <flatcc_builder_truncate_offset_vector@@Base+0x91>
  41de9d:	mov    rax,QWORD PTR [rbp-0x8]
  41dea1:	mov    rax,QWORD PTR [rax+0x30]
  41dea5:	mov    eax,DWORD PTR [rax+0x14]
  41dea8:	mov    rdx,QWORD PTR [rbp-0x10]
  41deac:	cmp    eax,edx
  41deae:	jae    41decf <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  41deb0:	lea    rcx,[rip+0x1bc89]        # 439b40 <flatcc_builder_padding_base@@Base+0x8e0>
  41deb7:	mov    edx,0x3e3
  41debc:	lea    rsi,[rip+0x1b59d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41dec3:	lea    rdi,[rip+0x1b7de]        # 4396a8 <flatcc_builder_padding_base@@Base+0x448>
  41deca:	call   4061b0 <__assert_fail@plt>
  41decf:	mov    eax,0xffffffff
  41ded4:	jmp    41df19 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  41ded6:	mov    rax,QWORD PTR [rbp-0x8]
  41deda:	mov    rax,QWORD PTR [rax+0x30]
  41dede:	mov    edx,DWORD PTR [rax+0x14]
  41dee1:	mov    rax,QWORD PTR [rbp-0x10]
  41dee5:	mov    ecx,eax
  41dee7:	mov    rax,QWORD PTR [rbp-0x8]
  41deeb:	mov    rax,QWORD PTR [rax+0x30]
  41deef:	sub    edx,ecx
  41def1:	mov    DWORD PTR [rax+0x14],edx
  41def4:	mov    rax,QWORD PTR [rbp-0x8]
  41def8:	mov    rax,QWORD PTR [rax+0x30]
  41defc:	mov    eax,DWORD PTR [rax+0x10]
  41deff:	mov    rdx,QWORD PTR [rbp-0x10]
  41df03:	imul   edx,eax
  41df06:	mov    rax,QWORD PTR [rbp-0x8]
  41df0a:	mov    esi,edx
  41df0c:	mov    rdi,rax
  41df0f:	call   41b8e6 <flatcc_builder_default_alloc@@Base+0x2e6>
  41df14:	mov    eax,0x0
  41df19:	leave  
  41df1a:	ret    

000000000041df1b <flatcc_builder_truncate_string@@Base>:
  41df1b:	endbr64 
  41df1f:	push   rbp
  41df20:	mov    rbp,rsp
  41df23:	sub    rsp,0x10
  41df27:	mov    QWORD PTR [rbp-0x8],rdi
  41df2b:	mov    QWORD PTR [rbp-0x10],rsi
  41df2f:	mov    rax,QWORD PTR [rbp-0x8]
  41df33:	mov    rax,QWORD PTR [rax+0x30]
  41df37:	movzx  eax,WORD PTR [rax+0xe]
  41df3b:	cmp    ax,0x6
  41df3f:	je     41df60 <flatcc_builder_truncate_string@@Base+0x45>
  41df41:	lea    rcx,[rip+0x1bc28]        # 439b70 <flatcc_builder_padding_base@@Base+0x910>
  41df48:	mov    edx,0x3eb
  41df4d:	lea    rsi,[rip+0x1b50c]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41df54:	lea    rdi,[rip+0x1b6f5]        # 439650 <flatcc_builder_padding_base@@Base+0x3f0>
  41df5b:	call   4061b0 <__assert_fail@plt>
  41df60:	mov    rax,QWORD PTR [rbp-0x8]
  41df64:	mov    rax,QWORD PTR [rax+0x30]
  41df68:	mov    eax,DWORD PTR [rax+0x14]
  41df6b:	mov    eax,eax
  41df6d:	cmp    QWORD PTR [rbp-0x10],rax
  41df71:	jbe    41dfac <flatcc_builder_truncate_string@@Base+0x91>
  41df73:	mov    rax,QWORD PTR [rbp-0x8]
  41df77:	mov    rax,QWORD PTR [rax+0x30]
  41df7b:	mov    eax,DWORD PTR [rax+0x14]
  41df7e:	mov    eax,eax
  41df80:	cmp    QWORD PTR [rbp-0x10],rax
  41df84:	jbe    41dfa5 <flatcc_builder_truncate_string@@Base+0x8a>
  41df86:	lea    rcx,[rip+0x1bbe3]        # 439b70 <flatcc_builder_padding_base@@Base+0x910>
  41df8d:	mov    edx,0x3ec
  41df92:	lea    rsi,[rip+0x1b4c7]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41df99:	lea    rdi,[rip+0x1b748]        # 4396e8 <flatcc_builder_padding_base@@Base+0x488>
  41dfa0:	call   4061b0 <__assert_fail@plt>
  41dfa5:	mov    eax,0xffffffff
  41dfaa:	jmp    41dfe3 <flatcc_builder_truncate_string@@Base+0xc8>
  41dfac:	mov    rax,QWORD PTR [rbp-0x8]
  41dfb0:	mov    rax,QWORD PTR [rax+0x30]
  41dfb4:	mov    edx,DWORD PTR [rax+0x14]
  41dfb7:	mov    rax,QWORD PTR [rbp-0x10]
  41dfbb:	mov    ecx,eax
  41dfbd:	mov    rax,QWORD PTR [rbp-0x8]
  41dfc1:	mov    rax,QWORD PTR [rax+0x30]
  41dfc5:	sub    edx,ecx
  41dfc7:	mov    DWORD PTR [rax+0x14],edx
  41dfca:	mov    rax,QWORD PTR [rbp-0x10]
  41dfce:	mov    edx,eax
  41dfd0:	mov    rax,QWORD PTR [rbp-0x8]
  41dfd4:	mov    esi,edx
  41dfd6:	mov    rdi,rax
  41dfd9:	call   41b8e6 <flatcc_builder_default_alloc@@Base+0x2e6>
  41dfde:	mov    eax,0x0
  41dfe3:	leave  
  41dfe4:	ret    

000000000041dfe5 <flatcc_builder_start_vector@@Base>:
  41dfe5:	endbr64 
  41dfe9:	push   rbp
  41dfea:	mov    rbp,rsp
  41dfed:	sub    rsp,0x20
  41dff1:	mov    QWORD PTR [rbp-0x8],rdi
  41dff5:	mov    QWORD PTR [rbp-0x10],rsi
  41dff9:	mov    eax,edx
  41dffb:	mov    QWORD PTR [rbp-0x20],rcx
  41dfff:	mov    WORD PTR [rbp-0x14],ax
  41e003:	lea    rax,[rbp-0x14]
  41e007:	mov    esi,0x4
  41e00c:	mov    rdi,rax
  41e00f:	call   41c29d <flatcc_builder_clear@@Base+0xca>
  41e014:	movzx  eax,WORD PTR [rbp-0x14]
  41e018:	movzx  edx,ax
  41e01b:	mov    rax,QWORD PTR [rbp-0x8]
  41e01f:	mov    esi,edx
  41e021:	mov    rdi,rax
  41e024:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41e029:	test   eax,eax
  41e02b:	je     41e034 <flatcc_builder_start_vector@@Base+0x4f>
  41e02d:	mov    eax,0xffffffff
  41e032:	jmp    41e085 <flatcc_builder_start_vector@@Base+0xa0>
  41e034:	mov    rax,QWORD PTR [rbp-0x8]
  41e038:	mov    rax,QWORD PTR [rax+0x30]
  41e03c:	mov    rdx,QWORD PTR [rbp-0x10]
  41e040:	mov    DWORD PTR [rax+0x10],edx
  41e043:	mov    rax,QWORD PTR [rbp-0x8]
  41e047:	mov    rax,QWORD PTR [rax+0x30]
  41e04b:	mov    DWORD PTR [rax+0x14],0x0
  41e052:	mov    rax,QWORD PTR [rbp-0x8]
  41e056:	mov    rax,QWORD PTR [rax+0x30]
  41e05a:	mov    rdx,QWORD PTR [rbp-0x20]
  41e05e:	mov    DWORD PTR [rax+0x18],edx
  41e061:	mov    rax,QWORD PTR [rbp-0x8]
  41e065:	mov    rax,QWORD PTR [rax+0x30]
  41e069:	mov    WORD PTR [rax+0xe],0x4
  41e06f:	mov    rax,QWORD PTR [rbp-0x8]
  41e073:	mov    esi,0xfffffffc
  41e078:	mov    rdi,rax
  41e07b:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41e080:	mov    eax,0x0
  41e085:	leave  
  41e086:	ret    

000000000041e087 <flatcc_builder_start_offset_vector@@Base>:
  41e087:	endbr64 
  41e08b:	push   rbp
  41e08c:	mov    rbp,rsp
  41e08f:	sub    rsp,0x10
  41e093:	mov    QWORD PTR [rbp-0x8],rdi
  41e097:	mov    rax,QWORD PTR [rbp-0x8]
  41e09b:	mov    esi,0x4
  41e0a0:	mov    rdi,rax
  41e0a3:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41e0a8:	test   eax,eax
  41e0aa:	je     41e0b3 <flatcc_builder_start_offset_vector@@Base+0x2c>
  41e0ac:	mov    eax,0xffffffff
  41e0b1:	jmp    41e0f5 <flatcc_builder_start_offset_vector@@Base+0x6e>
  41e0b3:	mov    rax,QWORD PTR [rbp-0x8]
  41e0b7:	mov    rax,QWORD PTR [rax+0x30]
  41e0bb:	mov    DWORD PTR [rax+0x10],0x4
  41e0c2:	mov    rax,QWORD PTR [rbp-0x8]
  41e0c6:	mov    rax,QWORD PTR [rax+0x30]
  41e0ca:	mov    DWORD PTR [rax+0x14],0x0
  41e0d1:	mov    rax,QWORD PTR [rbp-0x8]
  41e0d5:	mov    rax,QWORD PTR [rax+0x30]
  41e0d9:	mov    WORD PTR [rax+0xe],0x5
  41e0df:	mov    rax,QWORD PTR [rbp-0x8]
  41e0e3:	mov    esi,0xfffffffc
  41e0e8:	mov    rdi,rax
  41e0eb:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41e0f0:	mov    eax,0x0
  41e0f5:	leave  
  41e0f6:	ret    

000000000041e0f7 <flatcc_builder_create_offset_vector@@Base>:
  41e0f7:	endbr64 
  41e0fb:	push   rbp
  41e0fc:	mov    rbp,rsp
  41e0ff:	sub    rsp,0x30
  41e103:	mov    QWORD PTR [rbp-0x18],rdi
  41e107:	mov    QWORD PTR [rbp-0x20],rsi
  41e10b:	mov    QWORD PTR [rbp-0x28],rdx
  41e10f:	mov    rax,QWORD PTR [rbp-0x18]
  41e113:	mov    rdi,rax
  41e116:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  41e11b:	test   eax,eax
  41e11d:	je     41e126 <flatcc_builder_create_offset_vector@@Base+0x2f>
  41e11f:	mov    eax,0x0
  41e124:	jmp    41e176 <flatcc_builder_create_offset_vector@@Base+0x7f>
  41e126:	mov    rdx,QWORD PTR [rbp-0x28]
  41e12a:	mov    rax,QWORD PTR [rbp-0x18]
  41e12e:	mov    rsi,rdx
  41e131:	mov    rdi,rax
  41e134:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  41e139:	mov    QWORD PTR [rbp-0x8],rax
  41e13d:	cmp    QWORD PTR [rbp-0x8],0x0
  41e142:	jne    41e14b <flatcc_builder_create_offset_vector@@Base+0x54>
  41e144:	mov    eax,0x0
  41e149:	jmp    41e176 <flatcc_builder_create_offset_vector@@Base+0x7f>
  41e14b:	mov    rax,QWORD PTR [rbp-0x28]
  41e14f:	lea    rdx,[rax*4+0x0]
  41e157:	mov    rcx,QWORD PTR [rbp-0x20]
  41e15b:	mov    rax,QWORD PTR [rbp-0x8]
  41e15f:	mov    rsi,rcx
  41e162:	mov    rdi,rax
  41e165:	call   406220 <memcpy@plt>
  41e16a:	mov    rax,QWORD PTR [rbp-0x18]
  41e16e:	mov    rdi,rax
  41e171:	call   41f684 <flatcc_builder_end_offset_vector@@Base>
  41e176:	leave  
  41e177:	ret    

000000000041e178 <flatcc_builder_start_string@@Base>:
  41e178:	endbr64 
  41e17c:	push   rbp
  41e17d:	mov    rbp,rsp
  41e180:	sub    rsp,0x10
  41e184:	mov    QWORD PTR [rbp-0x8],rdi
  41e188:	mov    rax,QWORD PTR [rbp-0x8]
  41e18c:	mov    esi,0x1
  41e191:	mov    rdi,rax
  41e194:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41e199:	test   eax,eax
  41e19b:	je     41e1a4 <flatcc_builder_start_string@@Base+0x2c>
  41e19d:	mov    eax,0xffffffff
  41e1a2:	jmp    41e1e6 <flatcc_builder_start_string@@Base+0x6e>
  41e1a4:	mov    rax,QWORD PTR [rbp-0x8]
  41e1a8:	mov    rax,QWORD PTR [rax+0x30]
  41e1ac:	mov    DWORD PTR [rax+0x10],0x1
  41e1b3:	mov    rax,QWORD PTR [rbp-0x8]
  41e1b7:	mov    rax,QWORD PTR [rax+0x30]
  41e1bb:	mov    DWORD PTR [rax+0x14],0x0
  41e1c2:	mov    rax,QWORD PTR [rbp-0x8]
  41e1c6:	mov    rax,QWORD PTR [rax+0x30]
  41e1ca:	mov    WORD PTR [rax+0xe],0x6
  41e1d0:	mov    rax,QWORD PTR [rbp-0x8]
  41e1d4:	mov    esi,0xfffffffc
  41e1d9:	mov    rdi,rax
  41e1dc:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41e1e1:	mov    eax,0x0
  41e1e6:	leave  
  41e1e7:	ret    

000000000041e1e8 <flatcc_builder_reserve_table@@Base>:
  41e1e8:	endbr64 
  41e1ec:	push   rbp
  41e1ed:	mov    rbp,rsp
  41e1f0:	sub    rsp,0x10
  41e1f4:	mov    QWORD PTR [rbp-0x8],rdi
  41e1f8:	mov    DWORD PTR [rbp-0xc],esi
  41e1fb:	cmp    DWORD PTR [rbp-0xc],0x0
  41e1ff:	jns    41e220 <flatcc_builder_reserve_table@@Base+0x38>
  41e201:	lea    rcx,[rip+0x1b988]        # 439b90 <flatcc_builder_padding_base@@Base+0x930>
  41e208:	mov    edx,0x429
  41e20d:	lea    rsi,[rip+0x1b24c]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41e214:	lea    rdi,[rip+0x1b4ef]        # 43970a <flatcc_builder_padding_base@@Base+0x4aa>
  41e21b:	call   4061b0 <__assert_fail@plt>
  41e220:	mov    edx,DWORD PTR [rbp-0xc]
  41e223:	mov    rax,QWORD PTR [rbp-0x8]
  41e227:	mov    esi,edx
  41e229:	mov    rdi,rax
  41e22c:	call   41bbc7 <flatcc_builder_default_alloc@@Base+0x5c7>
  41e231:	leave  
  41e232:	ret    

000000000041e233 <flatcc_builder_start_table@@Base>:
  41e233:	endbr64 
  41e237:	push   rbp
  41e238:	mov    rbp,rsp
  41e23b:	sub    rsp,0x10
  41e23f:	mov    QWORD PTR [rbp-0x8],rdi
  41e243:	mov    DWORD PTR [rbp-0xc],esi
  41e246:	mov    rax,QWORD PTR [rbp-0x8]
  41e24a:	mov    esi,0x4
  41e24f:	mov    rdi,rax
  41e252:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41e257:	test   eax,eax
  41e259:	je     41e265 <flatcc_builder_start_table@@Base+0x32>
  41e25b:	mov    eax,0xffffffff
  41e260:	jmp    41e32f <flatcc_builder_start_table@@Base+0xfc>
  41e265:	mov    rax,QWORD PTR [rbp-0x8]
  41e269:	mov    rax,QWORD PTR [rax+0x8]
  41e26d:	mov    rdx,rax
  41e270:	mov    rax,QWORD PTR [rbp-0x8]
  41e274:	mov    rax,QWORD PTR [rax+0x58]
  41e278:	sub    rdx,rax
  41e27b:	mov    rax,QWORD PTR [rbp-0x8]
  41e27f:	mov    rax,QWORD PTR [rax+0x30]
  41e283:	mov    DWORD PTR [rax+0x10],edx
  41e286:	mov    rax,QWORD PTR [rbp-0x8]
  41e28a:	mov    rax,QWORD PTR [rax]
  41e28d:	mov    rdx,rax
  41e290:	mov    rax,QWORD PTR [rbp-0x8]
  41e294:	mov    rax,QWORD PTR [rax+0x88]
  41e29b:	sub    rdx,rax
  41e29e:	mov    rax,QWORD PTR [rbp-0x8]
  41e2a2:	mov    rax,QWORD PTR [rax+0x30]
  41e2a6:	mov    DWORD PTR [rax+0x14],edx
  41e2a9:	mov    rax,QWORD PTR [rbp-0x8]
  41e2ad:	mov    rax,QWORD PTR [rax+0x30]
  41e2b1:	mov    rdx,QWORD PTR [rbp-0x8]
  41e2b5:	mov    edx,DWORD PTR [rdx+0x14]
  41e2b8:	mov    DWORD PTR [rax+0x18],edx
  41e2bb:	mov    rax,QWORD PTR [rbp-0x8]
  41e2bf:	mov    rdx,QWORD PTR [rax+0x30]
  41e2c3:	mov    rax,QWORD PTR [rbp-0x8]
  41e2c7:	movzx  eax,WORD PTR [rax+0x10]
  41e2cb:	mov    WORD PTR [rdx+0x1c],ax
  41e2cf:	mov    rax,QWORD PTR [rbp-0x8]
  41e2d3:	mov    DWORD PTR [rax+0x14],0x0
  41e2da:	mov    rax,QWORD PTR [rbp-0x8]
  41e2de:	mov    DWORD PTR [rax+0x14],0x2f693b52
  41e2e5:	mov    rax,QWORD PTR [rbp-0x8]
  41e2e9:	mov    WORD PTR [rax+0x10],0x0
  41e2ef:	mov    rax,QWORD PTR [rbp-0x8]
  41e2f3:	mov    rax,QWORD PTR [rax+0x30]
  41e2f7:	mov    WORD PTR [rax+0xe],0x3
  41e2fd:	mov    edx,DWORD PTR [rbp-0xc]
  41e300:	mov    rax,QWORD PTR [rbp-0x8]
  41e304:	mov    esi,edx
  41e306:	mov    rdi,rax
  41e309:	call   41bbc7 <flatcc_builder_default_alloc@@Base+0x5c7>
  41e30e:	test   eax,eax
  41e310:	je     41e319 <flatcc_builder_start_table@@Base+0xe6>
  41e312:	mov    eax,0xffffffff
  41e317:	jmp    41e32f <flatcc_builder_start_table@@Base+0xfc>
  41e319:	mov    rax,QWORD PTR [rbp-0x8]
  41e31d:	mov    esi,0xfffc
  41e322:	mov    rdi,rax
  41e325:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41e32a:	mov    eax,0x0
  41e32f:	leave  
  41e330:	ret    

000000000041e331 <flatcc_builder_create_vtable@@Base>:
  41e331:	endbr64 
  41e335:	push   rbp
  41e336:	mov    rbp,rsp
  41e339:	sub    rsp,0xd0
  41e340:	mov    QWORD PTR [rbp-0xb8],rdi
  41e347:	mov    QWORD PTR [rbp-0xc0],rsi
  41e34e:	mov    eax,edx
  41e350:	mov    WORD PTR [rbp-0xc4],ax
  41e357:	mov    rax,QWORD PTR fs:0x28
  41e360:	mov    QWORD PTR [rbp-0x8],rax
  41e364:	xor    eax,eax
  41e366:	mov    QWORD PTR [rbp-0xa0],0x0
  41e371:	mov    DWORD PTR [rbp-0x98],0x0
  41e37b:	cmp    WORD PTR [rbp-0xc4],0x0
  41e383:	je     41e3ec <flatcc_builder_create_vtable@@Base+0xbb>
  41e385:	mov    rdx,QWORD PTR [rbp-0xa0]
  41e38c:	movzx  eax,WORD PTR [rbp-0xc4]
  41e393:	add    rax,rdx
  41e396:	mov    QWORD PTR [rbp-0xa0],rax
  41e39d:	mov    eax,DWORD PTR [rbp-0x98]
  41e3a3:	cdqe   
  41e3a5:	shl    rax,0x4
  41e3a9:	add    rax,rbp
  41e3ac:	lea    rdx,[rax-0x90]
  41e3b3:	mov    rax,QWORD PTR [rbp-0xc0]
  41e3ba:	mov    QWORD PTR [rdx],rax
  41e3bd:	mov    edx,DWORD PTR [rbp-0x98]
  41e3c3:	movzx  eax,WORD PTR [rbp-0xc4]
  41e3ca:	movsxd rdx,edx
  41e3cd:	shl    rdx,0x4
  41e3d1:	add    rdx,rbp
  41e3d4:	sub    rdx,0x88
  41e3db:	mov    QWORD PTR [rdx],rax
  41e3de:	mov    eax,DWORD PTR [rbp-0x98]
  41e3e4:	inc    eax
  41e3e6:	mov    DWORD PTR [rbp-0x98],eax
  41e3ec:	mov    rax,QWORD PTR [rbp-0xb8]
  41e3f3:	mov    eax,DWORD PTR [rax+0x100]
  41e3f9:	test   eax,eax
  41e3fb:	jne    41e43d <flatcc_builder_create_vtable@@Base+0x10c>
  41e3fd:	mov    rax,QWORD PTR [rbp-0xb8]
  41e404:	mov    eax,DWORD PTR [rax+0x124]
  41e40a:	test   eax,eax
  41e40c:	jne    41e43d <flatcc_builder_create_vtable@@Base+0x10c>
  41e40e:	lea    rdx,[rbp-0xa0]
  41e415:	mov    rax,QWORD PTR [rbp-0xb8]
  41e41c:	mov    rsi,rdx
  41e41f:	mov    rdi,rax
  41e422:	call   41c968 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  41e427:	mov    DWORD PTR [rbp-0xa4],eax
  41e42d:	cmp    DWORD PTR [rbp-0xa4],0x0
  41e434:	jne    41e472 <flatcc_builder_create_vtable@@Base+0x141>
  41e436:	mov    eax,0x0
  41e43b:	jmp    41e478 <flatcc_builder_create_vtable@@Base+0x147>
  41e43d:	lea    rdx,[rbp-0xa0]
  41e444:	mov    rax,QWORD PTR [rbp-0xb8]
  41e44b:	mov    rsi,rdx
  41e44e:	mov    rdi,rax
  41e451:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41e456:	mov    DWORD PTR [rbp-0xa4],eax
  41e45c:	cmp    DWORD PTR [rbp-0xa4],0x0
  41e463:	jne    41e46c <flatcc_builder_create_vtable@@Base+0x13b>
  41e465:	mov    eax,0x0
  41e46a:	jmp    41e478 <flatcc_builder_create_vtable@@Base+0x147>
  41e46c:	inc    DWORD PTR [rbp-0xa4]
  41e472:	mov    eax,DWORD PTR [rbp-0xa4]
  41e478:	mov    rcx,QWORD PTR [rbp-0x8]
  41e47c:	xor    rcx,QWORD PTR fs:0x28
  41e485:	je     41e48c <flatcc_builder_create_vtable@@Base+0x15b>
  41e487:	call   4061a0 <__stack_chk_fail@plt>
  41e48c:	leave  
  41e48d:	ret    

000000000041e48e <flatcc_builder_create_cached_vtable@@Base>:
  41e48e:	endbr64 
  41e492:	push   rbp
  41e493:	mov    rbp,rsp
  41e496:	sub    rsp,0x50
  41e49a:	mov    QWORD PTR [rbp-0x38],rdi
  41e49e:	mov    QWORD PTR [rbp-0x40],rsi
  41e4a2:	mov    eax,edx
  41e4a4:	mov    DWORD PTR [rbp-0x48],ecx
  41e4a7:	mov    WORD PTR [rbp-0x44],ax
  41e4ab:	mov    edx,DWORD PTR [rbp-0x48]
  41e4ae:	mov    rax,QWORD PTR [rbp-0x38]
  41e4b2:	mov    esi,edx
  41e4b4:	mov    rdi,rax
  41e4b7:	call   41bdd6 <flatcc_builder_default_alloc@@Base+0x7d6>
  41e4bc:	mov    QWORD PTR [rbp-0x18],rax
  41e4c0:	cmp    QWORD PTR [rbp-0x18],0x0
  41e4c5:	jne    41e4d1 <flatcc_builder_create_cached_vtable@@Base+0x43>
  41e4c7:	mov    eax,0x0
  41e4cc:	jmp    41e772 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41e4d1:	mov    rax,QWORD PTR [rbp-0x18]
  41e4d5:	mov    QWORD PTR [rbp-0x20],rax
  41e4d9:	mov    rax,QWORD PTR [rbp-0x20]
  41e4dd:	mov    eax,DWORD PTR [rax]
  41e4df:	mov    DWORD PTR [rbp-0x2c],eax
  41e4e2:	mov    QWORD PTR [rbp-0x28],0x0
  41e4ea:	jmp    41e5c9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41e4ef:	mov    rax,QWORD PTR [rbp-0x38]
  41e4f3:	mov    rdx,QWORD PTR [rax+0xb8]
  41e4fa:	mov    eax,DWORD PTR [rbp-0x2c]
  41e4fd:	add    rax,rdx
  41e500:	mov    QWORD PTR [rbp-0x10],rax
  41e504:	mov    rax,QWORD PTR [rbp-0x38]
  41e508:	mov    rdx,QWORD PTR [rax+0x78]
  41e50c:	mov    rax,QWORD PTR [rbp-0x10]
  41e510:	mov    eax,DWORD PTR [rax+0x8]
  41e513:	mov    eax,eax
  41e515:	add    rax,rdx
  41e518:	mov    QWORD PTR [rbp-0x8],rax
  41e51c:	mov    rax,QWORD PTR [rbp-0x8]
  41e520:	movzx  eax,WORD PTR [rax]
  41e523:	cmp    WORD PTR [rbp-0x44],ax
  41e527:	jne    41e544 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  41e529:	movzx  edx,WORD PTR [rbp-0x44]
  41e52d:	mov    rcx,QWORD PTR [rbp-0x8]
  41e531:	mov    rax,QWORD PTR [rbp-0x40]
  41e535:	mov    rsi,rcx
  41e538:	mov    rdi,rax
  41e53b:	call   4061f0 <memcmp@plt>
  41e540:	test   eax,eax
  41e542:	je     41e55c <flatcc_builder_create_cached_vtable@@Base+0xce>
  41e544:	mov    rax,QWORD PTR [rbp-0x10]
  41e548:	add    rax,0xc
  41e54c:	mov    QWORD PTR [rbp-0x20],rax
  41e550:	mov    rax,QWORD PTR [rbp-0x10]
  41e554:	mov    eax,DWORD PTR [rax+0xc]
  41e557:	mov    DWORD PTR [rbp-0x2c],eax
  41e55a:	jmp    41e5c9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41e55c:	mov    rax,QWORD PTR [rbp-0x10]
  41e560:	mov    edx,DWORD PTR [rax+0x4]
  41e563:	mov    rax,QWORD PTR [rbp-0x38]
  41e567:	mov    eax,DWORD PTR [rax+0x100]
  41e56d:	cmp    edx,eax
  41e56f:	je     41e591 <flatcc_builder_create_cached_vtable@@Base+0x103>
  41e571:	mov    rax,QWORD PTR [rbp-0x10]
  41e575:	mov    QWORD PTR [rbp-0x28],rax
  41e579:	mov    rax,QWORD PTR [rbp-0x10]
  41e57d:	add    rax,0xc
  41e581:	mov    QWORD PTR [rbp-0x20],rax
  41e585:	mov    rax,QWORD PTR [rbp-0x10]
  41e589:	mov    eax,DWORD PTR [rax+0xc]
  41e58c:	mov    DWORD PTR [rbp-0x2c],eax
  41e58f:	jmp    41e5c9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41e591:	mov    rax,QWORD PTR [rbp-0x20]
  41e595:	cmp    rax,QWORD PTR [rbp-0x18]
  41e599:	je     41e5be <flatcc_builder_create_cached_vtable@@Base+0x130>
  41e59b:	mov    rax,QWORD PTR [rbp-0x10]
  41e59f:	mov    edx,DWORD PTR [rax+0xc]
  41e5a2:	mov    rax,QWORD PTR [rbp-0x20]
  41e5a6:	mov    DWORD PTR [rax],edx
  41e5a8:	mov    rax,QWORD PTR [rbp-0x18]
  41e5ac:	mov    edx,DWORD PTR [rax]
  41e5ae:	mov    rax,QWORD PTR [rbp-0x10]
  41e5b2:	mov    DWORD PTR [rax+0xc],edx
  41e5b5:	mov    rax,QWORD PTR [rbp-0x18]
  41e5b9:	mov    edx,DWORD PTR [rbp-0x2c]
  41e5bc:	mov    DWORD PTR [rax],edx
  41e5be:	mov    rax,QWORD PTR [rbp-0x10]
  41e5c2:	mov    eax,DWORD PTR [rax]
  41e5c4:	jmp    41e772 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41e5c9:	cmp    DWORD PTR [rbp-0x2c],0x0
  41e5cd:	jne    41e4ef <flatcc_builder_create_cached_vtable@@Base+0x61>
  41e5d3:	mov    rax,QWORD PTR [rbp-0x38]
  41e5d7:	mov    eax,DWORD PTR [rax+0xe4]
  41e5dd:	mov    edx,eax
  41e5df:	mov    rax,QWORD PTR [rbp-0x38]
  41e5e3:	mov    r8d,0x0
  41e5e9:	mov    ecx,0x10
  41e5ee:	mov    esi,0x6
  41e5f3:	mov    rdi,rax
  41e5f6:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41e5fb:	mov    QWORD PTR [rbp-0x10],rax
  41e5ff:	cmp    QWORD PTR [rbp-0x10],0x0
  41e604:	jne    41e610 <flatcc_builder_create_cached_vtable@@Base+0x182>
  41e606:	mov    eax,0x0
  41e60b:	jmp    41e772 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41e610:	mov    rax,QWORD PTR [rbp-0x38]
  41e614:	mov    eax,DWORD PTR [rax+0xe4]
  41e61a:	mov    DWORD PTR [rbp-0x2c],eax
  41e61d:	mov    rax,QWORD PTR [rbp-0x38]
  41e621:	mov    eax,DWORD PTR [rax+0xe4]
  41e627:	lea    edx,[rax+0x10]
  41e62a:	mov    rax,QWORD PTR [rbp-0x38]
  41e62e:	mov    DWORD PTR [rax+0xe4],edx
  41e634:	mov    rax,QWORD PTR [rbp-0x38]
  41e638:	mov    edx,DWORD PTR [rax+0x100]
  41e63e:	mov    rax,QWORD PTR [rbp-0x10]
  41e642:	mov    DWORD PTR [rax+0x4],edx
  41e645:	mov    rax,QWORD PTR [rbp-0x18]
  41e649:	mov    edx,DWORD PTR [rax]
  41e64b:	mov    rax,QWORD PTR [rbp-0x10]
  41e64f:	mov    DWORD PTR [rax+0xc],edx
  41e652:	mov    rax,QWORD PTR [rbp-0x18]
  41e656:	mov    edx,DWORD PTR [rbp-0x2c]
  41e659:	mov    DWORD PTR [rax],edx
  41e65b:	movzx  edx,WORD PTR [rbp-0x44]
  41e65f:	mov    rcx,QWORD PTR [rbp-0x40]
  41e663:	mov    rax,QWORD PTR [rbp-0x38]
  41e667:	mov    rsi,rcx
  41e66a:	mov    rdi,rax
  41e66d:	call   41e331 <flatcc_builder_create_vtable@@Base>
  41e672:	mov    edx,eax
  41e674:	mov    rax,QWORD PTR [rbp-0x10]
  41e678:	mov    DWORD PTR [rax],edx
  41e67a:	mov    rax,QWORD PTR [rbp-0x10]
  41e67e:	mov    eax,DWORD PTR [rax]
  41e680:	test   eax,eax
  41e682:	jne    41e68e <flatcc_builder_create_cached_vtable@@Base+0x200>
  41e684:	mov    eax,0x0
  41e689:	jmp    41e772 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41e68e:	cmp    QWORD PTR [rbp-0x28],0x0
  41e693:	je     41e6a8 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  41e695:	mov    rax,QWORD PTR [rbp-0x28]
  41e699:	mov    edx,DWORD PTR [rax+0x8]
  41e69c:	mov    rax,QWORD PTR [rbp-0x10]
  41e6a0:	mov    DWORD PTR [rax+0x8],edx
  41e6a3:	jmp    41e76c <flatcc_builder_create_cached_vtable@@Base+0x2de>
  41e6a8:	mov    rax,QWORD PTR [rbp-0x38]
  41e6ac:	mov    rax,QWORD PTR [rax+0x118]
  41e6b3:	test   rax,rax
  41e6b6:	je     41e6eb <flatcc_builder_create_cached_vtable@@Base+0x25d>
  41e6b8:	mov    rax,QWORD PTR [rbp-0x38]
  41e6bc:	mov    rdx,QWORD PTR [rax+0x118]
  41e6c3:	mov    rax,QWORD PTR [rbp-0x38]
  41e6c7:	mov    ecx,DWORD PTR [rax+0xe0]
  41e6cd:	movzx  eax,WORD PTR [rbp-0x44]
  41e6d1:	add    eax,ecx
  41e6d3:	mov    eax,eax
  41e6d5:	cmp    rdx,rax
  41e6d8:	jae    41e6eb <flatcc_builder_create_cached_vtable@@Base+0x25d>
  41e6da:	mov    rax,QWORD PTR [rbp-0x38]
  41e6de:	mov    rdi,rax
  41e6e1:	call   41be4a <flatcc_builder_flush_vtable_cache@@Base>
  41e6e6:	jmp    41e76c <flatcc_builder_create_cached_vtable@@Base+0x2de>
  41e6eb:	movzx  edx,WORD PTR [rbp-0x44]
  41e6ef:	mov    rax,QWORD PTR [rbp-0x38]
  41e6f3:	mov    eax,DWORD PTR [rax+0xe0]
  41e6f9:	mov    esi,eax
  41e6fb:	mov    rax,QWORD PTR [rbp-0x38]
  41e6ff:	mov    r8d,0x0
  41e705:	mov    rcx,rdx
  41e708:	mov    rdx,rsi
  41e70b:	mov    esi,0x2
  41e710:	mov    rdi,rax
  41e713:	call   41bb16 <flatcc_builder_default_alloc@@Base+0x516>
  41e718:	mov    QWORD PTR [rbp-0x8],rax
  41e71c:	cmp    QWORD PTR [rbp-0x8],0x0
  41e721:	jne    41e72a <flatcc_builder_create_cached_vtable@@Base+0x29c>
  41e723:	mov    eax,0xffffffff
  41e728:	jmp    41e772 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41e72a:	mov    rax,QWORD PTR [rbp-0x38]
  41e72e:	mov    edx,DWORD PTR [rax+0xe0]
  41e734:	mov    rax,QWORD PTR [rbp-0x10]
  41e738:	mov    DWORD PTR [rax+0x8],edx
  41e73b:	mov    rax,QWORD PTR [rbp-0x38]
  41e73f:	mov    edx,DWORD PTR [rax+0xe0]
  41e745:	movzx  eax,WORD PTR [rbp-0x44]
  41e749:	add    edx,eax
  41e74b:	mov    rax,QWORD PTR [rbp-0x38]
  41e74f:	mov    DWORD PTR [rax+0xe0],edx
  41e755:	movzx  edx,WORD PTR [rbp-0x44]
  41e759:	mov    rcx,QWORD PTR [rbp-0x40]
  41e75d:	mov    rax,QWORD PTR [rbp-0x8]
  41e761:	mov    rsi,rcx
  41e764:	mov    rdi,rax
  41e767:	call   406220 <memcpy@plt>
  41e76c:	mov    rax,QWORD PTR [rbp-0x10]
  41e770:	mov    eax,DWORD PTR [rax]
  41e772:	leave  
  41e773:	ret    

000000000041e774 <flatcc_builder_create_table@@Base>:
  41e774:	endbr64 
  41e778:	push   rbp
  41e779:	mov    rbp,rsp
  41e77c:	sub    rsp,0x100
  41e783:	mov    QWORD PTR [rbp-0xd8],rdi
  41e78a:	mov    QWORD PTR [rbp-0xe0],rsi
  41e791:	mov    QWORD PTR [rbp-0xe8],rdx
  41e798:	mov    eax,ecx
  41e79a:	mov    QWORD PTR [rbp-0xf8],r8
  41e7a1:	mov    DWORD PTR [rbp-0xf0],r9d
  41e7a8:	mov    WORD PTR [rbp-0xec],ax
  41e7af:	mov    rax,QWORD PTR fs:0x28
  41e7b8:	mov    QWORD PTR [rbp-0x8],rax
  41e7bc:	xor    eax,eax
  41e7be:	cmp    DWORD PTR [rbp-0xf0],0x0
  41e7c5:	jns    41e7e6 <flatcc_builder_create_table@@Base+0x72>
  41e7c7:	lea    rcx,[rip+0x1b3e2]        # 439bb0 <flatcc_builder_padding_base@@Base+0x950>
  41e7ce:	mov    edx,0x4d5
  41e7d3:	lea    rsi,[rip+0x1ac86]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41e7da:	lea    rdi,[rip+0x1af34]        # 439715 <flatcc_builder_padding_base@@Base+0x4b5>
  41e7e1:	call   4061b0 <__assert_fail@plt>
  41e7e6:	mov    eax,DWORD PTR [rbp+0x10]
  41e7e9:	and    eax,0x1
  41e7ec:	test   eax,eax
  41e7ee:	jne    41e80f <flatcc_builder_create_table@@Base+0x9b>
  41e7f0:	lea    rcx,[rip+0x1b3b9]        # 439bb0 <flatcc_builder_padding_base@@Base+0x950>
  41e7f7:	mov    edx,0x4db
  41e7fc:	lea    rsi,[rip+0x1ac5d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41e803:	lea    rdi,[rip+0x1af1d]        # 439727 <flatcc_builder_padding_base@@Base+0x4c7>
  41e80a:	call   4061b0 <__assert_fail@plt>
  41e80f:	lea    rax,[rbp-0xec]
  41e816:	mov    esi,0x4
  41e81b:	mov    rdi,rax
  41e81e:	call   41c29d <flatcc_builder_clear@@Base+0xca>
  41e823:	movzx  eax,WORD PTR [rbp-0xec]
  41e82a:	movzx  edx,ax
  41e82d:	mov    rax,QWORD PTR [rbp-0xd8]
  41e834:	mov    esi,edx
  41e836:	mov    rdi,rax
  41e839:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41e83e:	movzx  eax,WORD PTR [rbp-0xec]
  41e845:	movzx  edx,ax
  41e848:	mov    rax,QWORD PTR [rbp-0xe8]
  41e84f:	mov    ecx,eax
  41e851:	mov    rax,QWORD PTR [rbp-0xd8]
  41e858:	mov    esi,ecx
  41e85a:	mov    rdi,rax
  41e85d:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41e862:	mov    DWORD PTR [rbp-0xbc],eax
  41e868:	mov    rax,QWORD PTR [rbp-0xd8]
  41e86f:	mov    eax,DWORD PTR [rax+0xf0]
  41e875:	mov    edx,eax
  41e877:	mov    rax,QWORD PTR [rbp-0xe8]
  41e87e:	mov    ecx,eax
  41e880:	mov    eax,DWORD PTR [rbp-0xbc]
  41e886:	add    eax,ecx
  41e888:	sub    edx,eax
  41e88a:	mov    eax,edx
  41e88c:	sub    eax,0x4
  41e88f:	mov    DWORD PTR [rbp-0xb8],eax
  41e895:	mov    eax,DWORD PTR [rbp+0x10]
  41e898:	dec    eax
  41e89a:	mov    DWORD PTR [rbp-0xb4],eax
  41e8a0:	mov    eax,DWORD PTR [rbp-0xb8]
  41e8a6:	sub    eax,DWORD PTR [rbp-0xb4]
  41e8ac:	mov    DWORD PTR [rbp-0xb0],eax
  41e8b2:	mov    eax,DWORD PTR [rbp-0xb8]
  41e8b8:	sub    eax,DWORD PTR [rbp-0xb0]
  41e8be:	cmp    DWORD PTR [rbp-0xb4],eax
  41e8c4:	je     41e8d0 <flatcc_builder_create_table@@Base+0x15c>
  41e8c6:	mov    eax,0xffffffff
  41e8cb:	jmp    41eaf0 <flatcc_builder_create_table@@Base+0x37c>
  41e8d0:	mov    eax,DWORD PTR [rbp-0xb0]
  41e8d6:	mov    edi,eax
  41e8d8:	call   41b540 <main@@Base+0x9fd>
  41e8dd:	mov    DWORD PTR [rbp-0xc4],eax
  41e8e3:	mov    DWORD PTR [rbp-0xc0],0x0
  41e8ed:	jmp    41e977 <flatcc_builder_create_table@@Base+0x203>
  41e8f2:	mov    eax,DWORD PTR [rbp-0xc0]
  41e8f8:	cdqe   
  41e8fa:	lea    rdx,[rax+rax*1]
  41e8fe:	mov    rax,QWORD PTR [rbp-0xf8]
  41e905:	add    rax,rdx
  41e908:	movzx  eax,WORD PTR [rax]
  41e90b:	movzx  edx,ax
  41e90e:	mov    rax,QWORD PTR [rbp-0xe0]
  41e915:	add    rax,rdx
  41e918:	mov    QWORD PTR [rbp-0xa8],rax
  41e91f:	mov    rax,QWORD PTR [rbp-0xa8]
  41e926:	mov    eax,DWORD PTR [rax]
  41e928:	sub    eax,DWORD PTR [rbp-0xb8]
  41e92e:	mov    edx,eax
  41e930:	mov    eax,DWORD PTR [rbp-0xc0]
  41e936:	cdqe   
  41e938:	lea    rcx,[rax+rax*1]
  41e93c:	mov    rax,QWORD PTR [rbp-0xf8]
  41e943:	add    rax,rcx
  41e946:	movzx  eax,WORD PTR [rax]
  41e949:	movzx  eax,ax
  41e94c:	sub    edx,eax
  41e94e:	mov    eax,edx
  41e950:	sub    eax,0x4
  41e953:	mov    DWORD PTR [rbp-0xac],eax
  41e959:	mov    eax,DWORD PTR [rbp-0xac]
  41e95f:	mov    edi,eax
  41e961:	call   41b540 <main@@Base+0x9fd>
  41e966:	mov    edx,eax
  41e968:	mov    rax,QWORD PTR [rbp-0xa8]
  41e96f:	mov    DWORD PTR [rax],edx
  41e971:	inc    DWORD PTR [rbp-0xc0]
  41e977:	mov    eax,DWORD PTR [rbp-0xc0]
  41e97d:	cmp    eax,DWORD PTR [rbp-0xf0]
  41e983:	jl     41e8f2 <flatcc_builder_create_table@@Base+0x17e>
  41e989:	mov    QWORD PTR [rbp-0xa0],0x0
  41e994:	mov    DWORD PTR [rbp-0x98],0x0
  41e99e:	mov    rax,QWORD PTR [rbp-0xa0]
  41e9a5:	add    rax,0x4
  41e9a9:	mov    QWORD PTR [rbp-0xa0],rax
  41e9b0:	mov    eax,DWORD PTR [rbp-0x98]
  41e9b6:	cdqe   
  41e9b8:	shl    rax,0x4
  41e9bc:	add    rax,rbp
  41e9bf:	lea    rdx,[rax-0x90]
  41e9c6:	lea    rax,[rbp-0xc4]
  41e9cd:	mov    QWORD PTR [rdx],rax
  41e9d0:	mov    eax,DWORD PTR [rbp-0x98]
  41e9d6:	cdqe   
  41e9d8:	shl    rax,0x4
  41e9dc:	add    rax,rbp
  41e9df:	sub    rax,0x88
  41e9e5:	mov    QWORD PTR [rax],0x4
  41e9ec:	mov    eax,DWORD PTR [rbp-0x98]
  41e9f2:	inc    eax
  41e9f4:	mov    DWORD PTR [rbp-0x98],eax
  41e9fa:	cmp    QWORD PTR [rbp-0xe8],0x0
  41ea02:	je     41ea6a <flatcc_builder_create_table@@Base+0x2f6>
  41ea04:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ea0b:	mov    rax,QWORD PTR [rbp-0xe8]
  41ea12:	add    rax,rdx
  41ea15:	mov    QWORD PTR [rbp-0xa0],rax
  41ea1c:	mov    eax,DWORD PTR [rbp-0x98]
  41ea22:	cdqe   
  41ea24:	shl    rax,0x4
  41ea28:	add    rax,rbp
  41ea2b:	lea    rdx,[rax-0x90]
  41ea32:	mov    rax,QWORD PTR [rbp-0xe0]
  41ea39:	mov    QWORD PTR [rdx],rax
  41ea3c:	mov    eax,DWORD PTR [rbp-0x98]
  41ea42:	cdqe   
  41ea44:	shl    rax,0x4
  41ea48:	add    rax,rbp
  41ea4b:	lea    rdx,[rax-0x88]
  41ea52:	mov    rax,QWORD PTR [rbp-0xe8]
  41ea59:	mov    QWORD PTR [rdx],rax
  41ea5c:	mov    eax,DWORD PTR [rbp-0x98]
  41ea62:	inc    eax
  41ea64:	mov    DWORD PTR [rbp-0x98],eax
  41ea6a:	cmp    DWORD PTR [rbp-0xbc],0x0
  41ea71:	je     41ead7 <flatcc_builder_create_table@@Base+0x363>
  41ea73:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ea7a:	mov    eax,DWORD PTR [rbp-0xbc]
  41ea80:	add    rax,rdx
  41ea83:	mov    QWORD PTR [rbp-0xa0],rax
  41ea8a:	mov    eax,DWORD PTR [rbp-0x98]
  41ea90:	cdqe   
  41ea92:	shl    rax,0x4
  41ea96:	add    rax,rbp
  41ea99:	sub    rax,0x90
  41ea9f:	mov    rdx,0x439260
  41eaa6:	mov    QWORD PTR [rax],rdx
  41eaa9:	mov    edx,DWORD PTR [rbp-0x98]
  41eaaf:	mov    eax,DWORD PTR [rbp-0xbc]
  41eab5:	movsxd rdx,edx
  41eab8:	shl    rdx,0x4
  41eabc:	add    rdx,rbp
  41eabf:	sub    rdx,0x88
  41eac6:	mov    QWORD PTR [rdx],rax
  41eac9:	mov    eax,DWORD PTR [rbp-0x98]
  41eacf:	inc    eax
  41ead1:	mov    DWORD PTR [rbp-0x98],eax
  41ead7:	lea    rdx,[rbp-0xa0]
  41eade:	mov    rax,QWORD PTR [rbp-0xd8]
  41eae5:	mov    rsi,rdx
  41eae8:	mov    rdi,rax
  41eaeb:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41eaf0:	mov    rsi,QWORD PTR [rbp-0x8]
  41eaf4:	xor    rsi,QWORD PTR fs:0x28
  41eafd:	je     41eb04 <flatcc_builder_create_table@@Base+0x390>
  41eaff:	call   4061a0 <__stack_chk_fail@plt>
  41eb04:	leave  
  41eb05:	ret    

000000000041eb06 <flatcc_builder_check_required_field@@Base>:
  41eb06:	endbr64 
  41eb0a:	push   rbp
  41eb0b:	mov    rbp,rsp
  41eb0e:	sub    rsp,0x10
  41eb12:	mov    QWORD PTR [rbp-0x8],rdi
  41eb16:	mov    eax,esi
  41eb18:	mov    WORD PTR [rbp-0xc],ax
  41eb1c:	mov    rax,QWORD PTR [rbp-0x8]
  41eb20:	mov    rax,QWORD PTR [rax+0x30]
  41eb24:	movzx  eax,WORD PTR [rax+0xe]
  41eb28:	cmp    ax,0x3
  41eb2c:	je     41eb4d <flatcc_builder_check_required_field@@Base+0x47>
  41eb2e:	lea    rcx,[rip+0x1b0ab]        # 439be0 <flatcc_builder_padding_base@@Base+0x980>
  41eb35:	mov    edx,0x4f8
  41eb3a:	lea    rsi,[rip+0x1a91f]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41eb41:	lea    rdi,[rip+0x1abf0]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41eb48:	call   4061b0 <__assert_fail@plt>
  41eb4d:	mov    rax,QWORD PTR [rbp-0x8]
  41eb51:	movzx  eax,WORD PTR [rax+0x10]
  41eb55:	cmp    WORD PTR [rbp-0xc],ax
  41eb59:	jae    41eb7c <flatcc_builder_check_required_field@@Base+0x76>
  41eb5b:	mov    rax,QWORD PTR [rbp-0x8]
  41eb5f:	mov    rax,QWORD PTR [rax+0x8]
  41eb63:	movzx  edx,WORD PTR [rbp-0xc]
  41eb67:	add    rdx,rdx
  41eb6a:	add    rax,rdx
  41eb6d:	movzx  eax,WORD PTR [rax]
  41eb70:	test   ax,ax
  41eb73:	je     41eb7c <flatcc_builder_check_required_field@@Base+0x76>
  41eb75:	mov    eax,0x1
  41eb7a:	jmp    41eb81 <flatcc_builder_check_required_field@@Base+0x7b>
  41eb7c:	mov    eax,0x0
  41eb81:	leave  
  41eb82:	ret    

000000000041eb83 <flatcc_builder_check_union_field@@Base>:
  41eb83:	endbr64 
  41eb87:	push   rbp
  41eb88:	mov    rbp,rsp
  41eb8b:	sub    rsp,0x10
  41eb8f:	mov    QWORD PTR [rbp-0x8],rdi
  41eb93:	mov    eax,esi
  41eb95:	mov    WORD PTR [rbp-0xc],ax
  41eb99:	mov    rax,QWORD PTR [rbp-0x8]
  41eb9d:	mov    rax,QWORD PTR [rax+0x30]
  41eba1:	movzx  eax,WORD PTR [rax+0xe]
  41eba5:	cmp    ax,0x3
  41eba9:	je     41ebca <flatcc_builder_check_union_field@@Base+0x47>
  41ebab:	lea    rcx,[rip+0x1b06e]        # 439c20 <flatcc_builder_padding_base@@Base+0x9c0>
  41ebb2:	mov    edx,0x4ff
  41ebb7:	lea    rsi,[rip+0x1a8a2]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41ebbe:	lea    rdi,[rip+0x1ab73]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41ebc5:	call   4061b0 <__assert_fail@plt>
  41ebca:	cmp    WORD PTR [rbp-0xc],0x0
  41ebcf:	je     41ebdf <flatcc_builder_check_union_field@@Base+0x5c>
  41ebd1:	mov    rax,QWORD PTR [rbp-0x8]
  41ebd5:	movzx  eax,WORD PTR [rax+0x10]
  41ebd9:	cmp    WORD PTR [rbp-0xc],ax
  41ebdd:	jb     41ebe9 <flatcc_builder_check_union_field@@Base+0x66>
  41ebdf:	mov    eax,0x0
  41ebe4:	jmp    41ec93 <flatcc_builder_check_union_field@@Base+0x110>
  41ebe9:	mov    rax,QWORD PTR [rbp-0x8]
  41ebed:	mov    rax,QWORD PTR [rax+0x8]
  41ebf1:	movzx  edx,WORD PTR [rbp-0xc]
  41ebf5:	add    rdx,rdx
  41ebf8:	sub    rdx,0x2
  41ebfc:	add    rax,rdx
  41ebff:	movzx  eax,WORD PTR [rax]
  41ec02:	test   ax,ax
  41ec05:	jne    41ec27 <flatcc_builder_check_union_field@@Base+0xa4>
  41ec07:	mov    rax,QWORD PTR [rbp-0x8]
  41ec0b:	mov    rax,QWORD PTR [rax+0x8]
  41ec0f:	movzx  edx,WORD PTR [rbp-0xc]
  41ec13:	add    rdx,rdx
  41ec16:	add    rax,rdx
  41ec19:	movzx  eax,WORD PTR [rax]
  41ec1c:	test   ax,ax
  41ec1f:	sete   al
  41ec22:	movzx  eax,al
  41ec25:	jmp    41ec93 <flatcc_builder_check_union_field@@Base+0x110>
  41ec27:	mov    rax,QWORD PTR [rbp-0x8]
  41ec2b:	mov    rdx,QWORD PTR [rax+0x18]
  41ec2f:	mov    rax,QWORD PTR [rbp-0x8]
  41ec33:	mov    rax,QWORD PTR [rax+0x8]
  41ec37:	movzx  ecx,WORD PTR [rbp-0xc]
  41ec3b:	add    rcx,rcx
  41ec3e:	sub    rcx,0x2
  41ec42:	add    rax,rcx
  41ec45:	movzx  eax,WORD PTR [rax]
  41ec48:	movzx  eax,ax
  41ec4b:	add    rax,rdx
  41ec4e:	movzx  eax,BYTE PTR [rax]
  41ec51:	test   al,al
  41ec53:	je     41ec75 <flatcc_builder_check_union_field@@Base+0xf2>
  41ec55:	mov    rax,QWORD PTR [rbp-0x8]
  41ec59:	mov    rax,QWORD PTR [rax+0x8]
  41ec5d:	movzx  edx,WORD PTR [rbp-0xc]
  41ec61:	add    rdx,rdx
  41ec64:	add    rax,rdx
  41ec67:	movzx  eax,WORD PTR [rax]
  41ec6a:	test   ax,ax
  41ec6d:	setne  al
  41ec70:	movzx  eax,al
  41ec73:	jmp    41ec93 <flatcc_builder_check_union_field@@Base+0x110>
  41ec75:	mov    rax,QWORD PTR [rbp-0x8]
  41ec79:	mov    rax,QWORD PTR [rax+0x8]
  41ec7d:	movzx  edx,WORD PTR [rbp-0xc]
  41ec81:	add    rdx,rdx
  41ec84:	add    rax,rdx
  41ec87:	movzx  eax,WORD PTR [rax]
  41ec8a:	test   ax,ax
  41ec8d:	sete   al
  41ec90:	movzx  eax,al
  41ec93:	leave  
  41ec94:	ret    

000000000041ec95 <flatcc_builder_check_required@@Base>:
  41ec95:	endbr64 
  41ec99:	push   rbp
  41ec9a:	mov    rbp,rsp
  41ec9d:	sub    rsp,0x30
  41eca1:	mov    QWORD PTR [rbp-0x18],rdi
  41eca5:	mov    QWORD PTR [rbp-0x20],rsi
  41eca9:	mov    DWORD PTR [rbp-0x24],edx
  41ecac:	mov    rax,QWORD PTR [rbp-0x18]
  41ecb0:	mov    rax,QWORD PTR [rax+0x30]
  41ecb4:	movzx  eax,WORD PTR [rax+0xe]
  41ecb8:	cmp    ax,0x3
  41ecbc:	je     41ecdd <flatcc_builder_check_required@@Base+0x48>
  41ecbe:	lea    rcx,[rip+0x1af8b]        # 439c50 <flatcc_builder_padding_base@@Base+0x9f0>
  41ecc5:	mov    edx,0x511
  41ecca:	lea    rsi,[rip+0x1a78f]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41ecd1:	lea    rdi,[rip+0x1aa60]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41ecd8:	call   4061b0 <__assert_fail@plt>
  41ecdd:	mov    rax,QWORD PTR [rbp-0x18]
  41ece1:	movzx  eax,WORD PTR [rax+0x10]
  41ece5:	movzx  eax,ax
  41ece8:	cmp    DWORD PTR [rbp-0x24],eax
  41eceb:	jle    41ecf4 <flatcc_builder_check_required@@Base+0x5f>
  41eced:	mov    eax,0x0
  41ecf2:	jmp    41ed40 <flatcc_builder_check_required@@Base+0xab>
  41ecf4:	mov    DWORD PTR [rbp-0x4],0x0
  41ecfb:	jmp    41ed33 <flatcc_builder_check_required@@Base+0x9e>
  41ecfd:	mov    rax,QWORD PTR [rbp-0x18]
  41ed01:	mov    rdx,QWORD PTR [rax+0x8]
  41ed05:	mov    eax,DWORD PTR [rbp-0x4]
  41ed08:	cdqe   
  41ed0a:	lea    rcx,[rax+rax*1]
  41ed0e:	mov    rax,QWORD PTR [rbp-0x20]
  41ed12:	add    rax,rcx
  41ed15:	movzx  eax,WORD PTR [rax]
  41ed18:	movzx  eax,ax
  41ed1b:	add    rax,rax
  41ed1e:	add    rax,rdx
  41ed21:	movzx  eax,WORD PTR [rax]
  41ed24:	test   ax,ax
  41ed27:	jne    41ed30 <flatcc_builder_check_required@@Base+0x9b>
  41ed29:	mov    eax,0x0
  41ed2e:	jmp    41ed40 <flatcc_builder_check_required@@Base+0xab>
  41ed30:	inc    DWORD PTR [rbp-0x4]
  41ed33:	mov    eax,DWORD PTR [rbp-0x4]
  41ed36:	cmp    eax,DWORD PTR [rbp-0x24]
  41ed39:	jl     41ecfd <flatcc_builder_check_required@@Base+0x68>
  41ed3b:	mov    eax,0x1
  41ed40:	leave  
  41ed41:	ret    

000000000041ed42 <flatcc_builder_end_table@@Base>:
  41ed42:	endbr64 
  41ed46:	push   rbp
  41ed47:	mov    rbp,rsp
  41ed4a:	sub    rsp,0x30
  41ed4e:	mov    QWORD PTR [rbp-0x28],rdi
  41ed52:	mov    rax,QWORD PTR [rbp-0x28]
  41ed56:	mov    rax,QWORD PTR [rax+0x30]
  41ed5a:	movzx  eax,WORD PTR [rax+0xe]
  41ed5e:	cmp    ax,0x3
  41ed62:	je     41ed83 <flatcc_builder_end_table@@Base+0x41>
  41ed64:	lea    rcx,[rip+0x1af05]        # 439c70 <flatcc_builder_padding_base@@Base+0xa10>
  41ed6b:	mov    edx,0x525
  41ed70:	lea    rsi,[rip+0x1a6e9]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41ed77:	lea    rdi,[rip+0x1a9ba]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41ed7e:	call   4061b0 <__assert_fail@plt>
  41ed83:	mov    rax,QWORD PTR [rbp-0x28]
  41ed87:	mov    rax,QWORD PTR [rax+0x8]
  41ed8b:	sub    rax,0x4
  41ed8f:	mov    QWORD PTR [rbp-0x10],rax
  41ed93:	mov    rax,QWORD PTR [rbp-0x28]
  41ed97:	movzx  eax,WORD PTR [rax+0x10]
  41ed9b:	movzx  eax,ax
  41ed9e:	add    eax,0x2
  41eda1:	cdqe   
  41eda3:	add    eax,eax
  41eda5:	mov    WORD PTR [rbp-0x1e],ax
  41eda9:	mov    rdx,QWORD PTR [rbp-0x10]
  41edad:	movzx  eax,WORD PTR [rbp-0x1e]
  41edb1:	mov    WORD PTR [rdx],ax
  41edb4:	mov    rax,QWORD PTR [rbp-0x28]
  41edb8:	mov    eax,DWORD PTR [rax+0x20]
  41edbb:	mov    ecx,eax
  41edbd:	mov    rax,QWORD PTR [rbp-0x10]
  41edc1:	lea    rdx,[rax+0x2]
  41edc5:	lea    eax,[rcx+0x4]
  41edc8:	mov    WORD PTR [rdx],ax
  41edcb:	mov    rax,QWORD PTR [rbp-0x10]
  41edcf:	movzx  eax,WORD PTR [rax]
  41edd2:	movzx  edx,ax
  41edd5:	mov    rax,QWORD PTR [rbp-0x28]
  41edd9:	mov    eax,DWORD PTR [rax+0x14]
  41eddc:	xor    eax,edx
  41edde:	imul   edx,eax,0x9e3779b1
  41ede4:	mov    rax,QWORD PTR [rbp-0x10]
  41ede8:	add    rax,0x2
  41edec:	movzx  eax,WORD PTR [rax]
  41edef:	movzx  eax,ax
  41edf2:	xor    eax,edx
  41edf4:	imul   edx,eax,0x9e3779b1
  41edfa:	mov    rax,QWORD PTR [rbp-0x28]
  41edfe:	mov    DWORD PTR [rax+0x14],edx
  41ee01:	mov    rax,QWORD PTR [rbp-0x28]
  41ee05:	mov    ecx,DWORD PTR [rax+0x14]
  41ee08:	movzx  edx,WORD PTR [rbp-0x1e]
  41ee0c:	mov    rsi,QWORD PTR [rbp-0x10]
  41ee10:	mov    rax,QWORD PTR [rbp-0x28]
  41ee14:	mov    rdi,rax
  41ee17:	call   41e48e <flatcc_builder_create_cached_vtable@@Base>
  41ee1c:	mov    DWORD PTR [rbp-0x1c],eax
  41ee1f:	cmp    DWORD PTR [rbp-0x1c],0x0
  41ee23:	jne    41ee2f <flatcc_builder_end_table@@Base+0xed>
  41ee25:	mov    eax,0x0
  41ee2a:	jmp    41ef46 <flatcc_builder_end_table@@Base+0x204>
  41ee2f:	movzx  edx,WORD PTR [rbp-0x1e]
  41ee33:	mov    rax,QWORD PTR [rbp-0x10]
  41ee37:	mov    esi,0x0
  41ee3c:	mov    rdi,rax
  41ee3f:	call   4061c0 <memset@plt>
  41ee44:	mov    rax,QWORD PTR [rbp-0x28]
  41ee48:	mov    rdx,QWORD PTR [rax+0x88]
  41ee4f:	mov    rax,QWORD PTR [rbp-0x28]
  41ee53:	mov    rax,QWORD PTR [rax+0x30]
  41ee57:	mov    eax,DWORD PTR [rax+0x14]
  41ee5a:	mov    eax,eax
  41ee5c:	add    rax,rdx
  41ee5f:	mov    QWORD PTR [rbp-0x8],rax
  41ee63:	mov    rax,QWORD PTR [rbp-0x28]
  41ee67:	mov    rax,QWORD PTR [rax]
  41ee6a:	sub    rax,QWORD PTR [rbp-0x8]
  41ee6e:	sar    rax,1
  41ee71:	mov    DWORD PTR [rbp-0x18],eax
  41ee74:	mov    rax,QWORD PTR [rbp-0x28]
  41ee78:	movzx  eax,WORD PTR [rax+0xea]
  41ee7f:	movzx  edx,ax
  41ee82:	mov    rax,QWORD PTR [rbp-0x28]
  41ee86:	mov    eax,DWORD PTR [rax+0x20]
  41ee89:	mov    r10d,eax
  41ee8c:	mov    rax,QWORD PTR [rbp-0x28]
  41ee90:	mov    rsi,QWORD PTR [rax+0x18]
  41ee94:	mov    r8d,DWORD PTR [rbp-0x18]
  41ee98:	mov    rdi,QWORD PTR [rbp-0x8]
  41ee9c:	mov    rax,QWORD PTR [rbp-0x28]
  41eea0:	sub    rsp,0x8
  41eea4:	mov    ecx,DWORD PTR [rbp-0x1c]
  41eea7:	push   rcx
  41eea8:	mov    r9d,r8d
  41eeab:	mov    r8,rdi
  41eeae:	mov    ecx,edx
  41eeb0:	mov    rdx,r10
  41eeb3:	mov    rdi,rax
  41eeb6:	call   41e774 <flatcc_builder_create_table@@Base>
  41eebb:	add    rsp,0x10
  41eebf:	mov    DWORD PTR [rbp-0x14],eax
  41eec2:	cmp    DWORD PTR [rbp-0x14],0x0
  41eec6:	jne    41eecf <flatcc_builder_end_table@@Base+0x18d>
  41eec8:	mov    eax,0x0
  41eecd:	jmp    41ef46 <flatcc_builder_end_table@@Base+0x204>
  41eecf:	mov    rax,QWORD PTR [rbp-0x28]
  41eed3:	mov    rax,QWORD PTR [rax+0x30]
  41eed7:	mov    edx,DWORD PTR [rax+0x18]
  41eeda:	mov    rax,QWORD PTR [rbp-0x28]
  41eede:	mov    DWORD PTR [rax+0x14],edx
  41eee1:	mov    rax,QWORD PTR [rbp-0x28]
  41eee5:	mov    rax,QWORD PTR [rax+0x30]
  41eee9:	movzx  eax,WORD PTR [rax+0x1c]
  41eeed:	mov    rdx,QWORD PTR [rbp-0x28]
  41eef1:	mov    WORD PTR [rdx+0x10],ax
  41eef5:	mov    rax,QWORD PTR [rbp-0x28]
  41eef9:	mov    rdx,QWORD PTR [rax+0x58]
  41eefd:	mov    rax,QWORD PTR [rbp-0x28]
  41ef01:	mov    rax,QWORD PTR [rax+0x30]
  41ef05:	mov    eax,DWORD PTR [rax+0x10]
  41ef08:	mov    eax,eax
  41ef0a:	add    rdx,rax
  41ef0d:	mov    rax,QWORD PTR [rbp-0x28]
  41ef11:	mov    QWORD PTR [rax+0x8],rdx
  41ef15:	mov    rax,QWORD PTR [rbp-0x28]
  41ef19:	mov    rdx,QWORD PTR [rax+0x88]
  41ef20:	mov    rax,QWORD PTR [rbp-0x28]
  41ef24:	mov    rax,QWORD PTR [rax+0x30]
  41ef28:	mov    eax,DWORD PTR [rax+0x14]
  41ef2b:	mov    eax,eax
  41ef2d:	add    rdx,rax
  41ef30:	mov    rax,QWORD PTR [rbp-0x28]
  41ef34:	mov    QWORD PTR [rax],rdx
  41ef37:	mov    rax,QWORD PTR [rbp-0x28]
  41ef3b:	mov    rdi,rax
  41ef3e:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41ef43:	mov    eax,DWORD PTR [rbp-0x14]
  41ef46:	leave  
  41ef47:	ret    

000000000041ef48 <flatcc_builder_create_vector@@Base>:
  41ef48:	endbr64 
  41ef4c:	push   rbp
  41ef4d:	mov    rbp,rsp
  41ef50:	sub    rsp,0xe0
  41ef57:	mov    QWORD PTR [rbp-0xb8],rdi
  41ef5e:	mov    QWORD PTR [rbp-0xc0],rsi
  41ef65:	mov    QWORD PTR [rbp-0xc8],rdx
  41ef6c:	mov    QWORD PTR [rbp-0xd0],rcx
  41ef73:	mov    eax,r8d
  41ef76:	mov    QWORD PTR [rbp-0xe0],r9
  41ef7d:	mov    WORD PTR [rbp-0xd4],ax
  41ef84:	mov    rax,QWORD PTR fs:0x28
  41ef8d:	mov    QWORD PTR [rbp-0x8],rax
  41ef91:	xor    eax,eax
  41ef93:	mov    rax,QWORD PTR [rbp-0xc8]
  41ef9a:	cmp    rax,QWORD PTR [rbp-0xe0]
  41efa1:	jbe    41efdc <flatcc_builder_create_vector@@Base+0x94>
  41efa3:	mov    rax,QWORD PTR [rbp-0xc8]
  41efaa:	cmp    rax,QWORD PTR [rbp-0xe0]
  41efb1:	jbe    41efd2 <flatcc_builder_create_vector@@Base+0x8a>
  41efb3:	lea    rcx,[rip+0x1acd6]        # 439c90 <flatcc_builder_padding_base@@Base+0xa30>
  41efba:	mov    edx,0x555
  41efbf:	lea    rsi,[rip+0x1a49a]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41efc6:	lea    rdi,[rip+0x1a796]        # 439763 <flatcc_builder_padding_base@@Base+0x503>
  41efcd:	call   4061b0 <__assert_fail@plt>
  41efd2:	mov    eax,0x0
  41efd7:	jmp    41f1c4 <flatcc_builder_create_vector@@Base+0x27c>
  41efdc:	lea    rax,[rbp-0xd4]
  41efe3:	mov    esi,0x4
  41efe8:	mov    rdi,rax
  41efeb:	call   41c29d <flatcc_builder_clear@@Base+0xca>
  41eff0:	movzx  eax,WORD PTR [rbp-0xd4]
  41eff7:	movzx  edx,ax
  41effa:	mov    rax,QWORD PTR [rbp-0xb8]
  41f001:	mov    esi,edx
  41f003:	mov    rdi,rax
  41f006:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41f00b:	mov    rax,QWORD PTR [rbp-0xc8]
  41f012:	mov    edx,eax
  41f014:	mov    rax,QWORD PTR [rbp-0xd0]
  41f01b:	imul   eax,edx
  41f01e:	mov    DWORD PTR [rbp-0xa8],eax
  41f024:	mov    rax,QWORD PTR [rbp-0xc8]
  41f02b:	mov    edi,eax
  41f02d:	call   41b540 <main@@Base+0x9fd>
  41f032:	mov    DWORD PTR [rbp-0xac],eax
  41f038:	movzx  eax,WORD PTR [rbp-0xd4]
  41f03f:	movzx  edx,ax
  41f042:	mov    ecx,DWORD PTR [rbp-0xa8]
  41f048:	mov    rax,QWORD PTR [rbp-0xb8]
  41f04f:	mov    esi,ecx
  41f051:	mov    rdi,rax
  41f054:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41f059:	mov    DWORD PTR [rbp-0xa4],eax
  41f05f:	mov    QWORD PTR [rbp-0xa0],0x0
  41f06a:	mov    DWORD PTR [rbp-0x98],0x0
  41f074:	mov    rax,QWORD PTR [rbp-0xa0]
  41f07b:	add    rax,0x4
  41f07f:	mov    QWORD PTR [rbp-0xa0],rax
  41f086:	mov    eax,DWORD PTR [rbp-0x98]
  41f08c:	cdqe   
  41f08e:	shl    rax,0x4
  41f092:	add    rax,rbp
  41f095:	lea    rdx,[rax-0x90]
  41f09c:	lea    rax,[rbp-0xac]
  41f0a3:	mov    QWORD PTR [rdx],rax
  41f0a6:	mov    eax,DWORD PTR [rbp-0x98]
  41f0ac:	cdqe   
  41f0ae:	shl    rax,0x4
  41f0b2:	add    rax,rbp
  41f0b5:	sub    rax,0x88
  41f0bb:	mov    QWORD PTR [rax],0x4
  41f0c2:	mov    eax,DWORD PTR [rbp-0x98]
  41f0c8:	inc    eax
  41f0ca:	mov    DWORD PTR [rbp-0x98],eax
  41f0d0:	cmp    DWORD PTR [rbp-0xa8],0x0
  41f0d7:	je     41f13e <flatcc_builder_create_vector@@Base+0x1f6>
  41f0d9:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f0e0:	mov    eax,DWORD PTR [rbp-0xa8]
  41f0e6:	add    rax,rdx
  41f0e9:	mov    QWORD PTR [rbp-0xa0],rax
  41f0f0:	mov    eax,DWORD PTR [rbp-0x98]
  41f0f6:	cdqe   
  41f0f8:	shl    rax,0x4
  41f0fc:	add    rax,rbp
  41f0ff:	lea    rdx,[rax-0x90]
  41f106:	mov    rax,QWORD PTR [rbp-0xc0]
  41f10d:	mov    QWORD PTR [rdx],rax
  41f110:	mov    edx,DWORD PTR [rbp-0x98]
  41f116:	mov    eax,DWORD PTR [rbp-0xa8]
  41f11c:	movsxd rdx,edx
  41f11f:	shl    rdx,0x4
  41f123:	add    rdx,rbp
  41f126:	sub    rdx,0x88
  41f12d:	mov    QWORD PTR [rdx],rax
  41f130:	mov    eax,DWORD PTR [rbp-0x98]
  41f136:	inc    eax
  41f138:	mov    DWORD PTR [rbp-0x98],eax
  41f13e:	cmp    DWORD PTR [rbp-0xa4],0x0
  41f145:	je     41f1ab <flatcc_builder_create_vector@@Base+0x263>
  41f147:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f14e:	mov    eax,DWORD PTR [rbp-0xa4]
  41f154:	add    rax,rdx
  41f157:	mov    QWORD PTR [rbp-0xa0],rax
  41f15e:	mov    eax,DWORD PTR [rbp-0x98]
  41f164:	cdqe   
  41f166:	shl    rax,0x4
  41f16a:	add    rax,rbp
  41f16d:	sub    rax,0x90
  41f173:	mov    rdx,0x439260
  41f17a:	mov    QWORD PTR [rax],rdx
  41f17d:	mov    edx,DWORD PTR [rbp-0x98]
  41f183:	mov    eax,DWORD PTR [rbp-0xa4]
  41f189:	movsxd rdx,edx
  41f18c:	shl    rdx,0x4
  41f190:	add    rdx,rbp
  41f193:	sub    rdx,0x88
  41f19a:	mov    QWORD PTR [rdx],rax
  41f19d:	mov    eax,DWORD PTR [rbp-0x98]
  41f1a3:	inc    eax
  41f1a5:	mov    DWORD PTR [rbp-0x98],eax
  41f1ab:	lea    rdx,[rbp-0xa0]
  41f1b2:	mov    rax,QWORD PTR [rbp-0xb8]
  41f1b9:	mov    rsi,rdx
  41f1bc:	mov    rdi,rax
  41f1bf:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41f1c4:	mov    rcx,QWORD PTR [rbp-0x8]
  41f1c8:	xor    rcx,QWORD PTR fs:0x28
  41f1d1:	je     41f1d8 <flatcc_builder_create_vector@@Base+0x290>
  41f1d3:	call   4061a0 <__stack_chk_fail@plt>
  41f1d8:	leave  
  41f1d9:	ret    

000000000041f1da <flatcc_builder_end_vector@@Base>:
  41f1da:	endbr64 
  41f1de:	push   rbp
  41f1df:	mov    rbp,rsp
  41f1e2:	sub    rsp,0x20
  41f1e6:	mov    QWORD PTR [rbp-0x18],rdi
  41f1ea:	mov    rax,QWORD PTR [rbp-0x18]
  41f1ee:	mov    rax,QWORD PTR [rax+0x30]
  41f1f2:	movzx  eax,WORD PTR [rax+0xe]
  41f1f6:	cmp    ax,0x4
  41f1fa:	je     41f21b <flatcc_builder_end_vector@@Base+0x41>
  41f1fc:	lea    rcx,[rip+0x1aaad]        # 439cb0 <flatcc_builder_padding_base@@Base+0xa50>
  41f203:	mov    edx,0x578
  41f208:	lea    rsi,[rip+0x1a251]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f20f:	lea    rdi,[rip+0x1a392]        # 4395a8 <flatcc_builder_padding_base@@Base+0x348>
  41f216:	call   4061b0 <__assert_fail@plt>
  41f21b:	mov    rax,QWORD PTR [rbp-0x18]
  41f21f:	mov    rax,QWORD PTR [rax+0x30]
  41f223:	mov    eax,DWORD PTR [rax+0x18]
  41f226:	mov    r8d,eax
  41f229:	mov    rax,QWORD PTR [rbp-0x18]
  41f22d:	movzx  eax,WORD PTR [rax+0xea]
  41f234:	movzx  edx,ax
  41f237:	mov    rax,QWORD PTR [rbp-0x18]
  41f23b:	mov    rax,QWORD PTR [rax+0x30]
  41f23f:	mov    eax,DWORD PTR [rax+0x10]
  41f242:	mov    ecx,eax
  41f244:	mov    rax,QWORD PTR [rbp-0x18]
  41f248:	mov    rax,QWORD PTR [rax+0x30]
  41f24c:	mov    eax,DWORD PTR [rax+0x14]
  41f24f:	mov    edi,eax
  41f251:	mov    rax,QWORD PTR [rbp-0x18]
  41f255:	mov    rsi,QWORD PTR [rax+0x18]
  41f259:	mov    rax,QWORD PTR [rbp-0x18]
  41f25d:	mov    r9,r8
  41f260:	mov    r8d,edx
  41f263:	mov    rdx,rdi
  41f266:	mov    rdi,rax
  41f269:	call   41ef48 <flatcc_builder_create_vector@@Base>
  41f26e:	mov    DWORD PTR [rbp-0x4],eax
  41f271:	cmp    DWORD PTR [rbp-0x4],0x0
  41f275:	jne    41f27e <flatcc_builder_end_vector@@Base+0xa4>
  41f277:	mov    eax,0x0
  41f27c:	jmp    41f28d <flatcc_builder_end_vector@@Base+0xb3>
  41f27e:	mov    rax,QWORD PTR [rbp-0x18]
  41f282:	mov    rdi,rax
  41f285:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41f28a:	mov    eax,DWORD PTR [rbp-0x4]
  41f28d:	leave  
  41f28e:	ret    

000000000041f28f <flatcc_builder_vector_count@@Base>:
  41f28f:	endbr64 
  41f293:	push   rbp
  41f294:	mov    rbp,rsp
  41f297:	mov    QWORD PTR [rbp-0x8],rdi
  41f29b:	mov    rax,QWORD PTR [rbp-0x8]
  41f29f:	mov    rax,QWORD PTR [rax+0x30]
  41f2a3:	mov    eax,DWORD PTR [rax+0x14]
  41f2a6:	mov    eax,eax
  41f2a8:	pop    rbp
  41f2a9:	ret    

000000000041f2aa <flatcc_builder_vector_edit@@Base>:
  41f2aa:	endbr64 
  41f2ae:	push   rbp
  41f2af:	mov    rbp,rsp
  41f2b2:	mov    QWORD PTR [rbp-0x8],rdi
  41f2b6:	mov    rax,QWORD PTR [rbp-0x8]
  41f2ba:	mov    rax,QWORD PTR [rax+0x18]
  41f2be:	pop    rbp
  41f2bf:	ret    
  41f2c0:	endbr64 
  41f2c4:	push   rbp
  41f2c5:	mov    rbp,rsp
  41f2c8:	sub    rsp,0xe0
  41f2cf:	mov    QWORD PTR [rbp-0xc8],rdi
  41f2d6:	mov    QWORD PTR [rbp-0xd0],rsi
  41f2dd:	mov    QWORD PTR [rbp-0xd8],rdx
  41f2e4:	mov    QWORD PTR [rbp-0xe0],rcx
  41f2eb:	mov    rax,QWORD PTR fs:0x28
  41f2f4:	mov    QWORD PTR [rbp-0x8],rax
  41f2f8:	xor    eax,eax
  41f2fa:	mov    rax,QWORD PTR [rbp-0xd8]
  41f301:	cmp    eax,0x3fffffff
  41f306:	jbe    41f312 <flatcc_builder_vector_edit@@Base+0x68>
  41f308:	mov    eax,0x0
  41f30d:	jmp    41f63b <flatcc_builder_vector_edit@@Base+0x391>
  41f312:	mov    rax,QWORD PTR [rbp-0xc8]
  41f319:	mov    esi,0x4
  41f31e:	mov    rdi,rax
  41f321:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  41f326:	mov    rax,QWORD PTR [rbp-0xd8]
  41f32d:	shl    eax,0x2
  41f330:	mov    DWORD PTR [rbp-0xb0],eax
  41f336:	mov    rax,QWORD PTR [rbp-0xd8]
  41f33d:	mov    edi,eax
  41f33f:	call   41b540 <main@@Base+0x9fd>
  41f344:	mov    DWORD PTR [rbp-0xb8],eax
  41f34a:	mov    ecx,DWORD PTR [rbp-0xb0]
  41f350:	mov    rax,QWORD PTR [rbp-0xc8]
  41f357:	mov    edx,0x4
  41f35c:	mov    esi,ecx
  41f35e:	mov    rdi,rax
  41f361:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41f366:	mov    DWORD PTR [rbp-0xac],eax
  41f36c:	mov    QWORD PTR [rbp-0xa0],0x0
  41f377:	mov    DWORD PTR [rbp-0x98],0x0
  41f381:	mov    rax,QWORD PTR [rbp-0xa0]
  41f388:	add    rax,0x4
  41f38c:	mov    QWORD PTR [rbp-0xa0],rax
  41f393:	mov    eax,DWORD PTR [rbp-0x98]
  41f399:	cdqe   
  41f39b:	shl    rax,0x4
  41f39f:	add    rax,rbp
  41f3a2:	lea    rdx,[rax-0x90]
  41f3a9:	lea    rax,[rbp-0xb8]
  41f3b0:	mov    QWORD PTR [rdx],rax
  41f3b3:	mov    eax,DWORD PTR [rbp-0x98]
  41f3b9:	cdqe   
  41f3bb:	shl    rax,0x4
  41f3bf:	add    rax,rbp
  41f3c2:	sub    rax,0x88
  41f3c8:	mov    QWORD PTR [rax],0x4
  41f3cf:	mov    eax,DWORD PTR [rbp-0x98]
  41f3d5:	inc    eax
  41f3d7:	mov    DWORD PTR [rbp-0x98],eax
  41f3dd:	cmp    DWORD PTR [rbp-0xb0],0x0
  41f3e4:	je     41f44b <flatcc_builder_vector_edit@@Base+0x1a1>
  41f3e6:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f3ed:	mov    eax,DWORD PTR [rbp-0xb0]
  41f3f3:	add    rax,rdx
  41f3f6:	mov    QWORD PTR [rbp-0xa0],rax
  41f3fd:	mov    eax,DWORD PTR [rbp-0x98]
  41f403:	cdqe   
  41f405:	shl    rax,0x4
  41f409:	add    rax,rbp
  41f40c:	lea    rdx,[rax-0x90]
  41f413:	mov    rax,QWORD PTR [rbp-0xd0]
  41f41a:	mov    QWORD PTR [rdx],rax
  41f41d:	mov    edx,DWORD PTR [rbp-0x98]
  41f423:	mov    eax,DWORD PTR [rbp-0xb0]
  41f429:	movsxd rdx,edx
  41f42c:	shl    rdx,0x4
  41f430:	add    rdx,rbp
  41f433:	sub    rdx,0x88
  41f43a:	mov    QWORD PTR [rdx],rax
  41f43d:	mov    eax,DWORD PTR [rbp-0x98]
  41f443:	inc    eax
  41f445:	mov    DWORD PTR [rbp-0x98],eax
  41f44b:	cmp    DWORD PTR [rbp-0xac],0x0
  41f452:	je     41f4b8 <flatcc_builder_vector_edit@@Base+0x20e>
  41f454:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f45b:	mov    eax,DWORD PTR [rbp-0xac]
  41f461:	add    rax,rdx
  41f464:	mov    QWORD PTR [rbp-0xa0],rax
  41f46b:	mov    eax,DWORD PTR [rbp-0x98]
  41f471:	cdqe   
  41f473:	shl    rax,0x4
  41f477:	add    rax,rbp
  41f47a:	sub    rax,0x90
  41f480:	mov    rdx,0x439260
  41f487:	mov    QWORD PTR [rax],rdx
  41f48a:	mov    edx,DWORD PTR [rbp-0x98]
  41f490:	mov    eax,DWORD PTR [rbp-0xac]
  41f496:	movsxd rdx,edx
  41f499:	shl    rdx,0x4
  41f49d:	add    rdx,rbp
  41f4a0:	sub    rdx,0x88
  41f4a7:	mov    QWORD PTR [rdx],rax
  41f4aa:	mov    eax,DWORD PTR [rbp-0x98]
  41f4b0:	inc    eax
  41f4b2:	mov    DWORD PTR [rbp-0x98],eax
  41f4b8:	mov    rax,QWORD PTR [rbp-0xc8]
  41f4bf:	mov    eax,DWORD PTR [rax+0xf0]
  41f4c5:	mov    edx,eax
  41f4c7:	mov    rax,QWORD PTR [rbp-0xa0]
  41f4ce:	sub    edx,eax
  41f4d0:	mov    eax,edx
  41f4d2:	mov    DWORD PTR [rbp-0xa8],eax
  41f4d8:	mov    DWORD PTR [rbp-0xb4],0x0
  41f4e2:	jmp    41f60f <flatcc_builder_vector_edit@@Base+0x365>
  41f4e7:	mov    eax,DWORD PTR [rbp-0xb4]
  41f4ed:	lea    rdx,[rax*4+0x0]
  41f4f5:	mov    rax,QWORD PTR [rbp-0xd0]
  41f4fc:	add    rax,rdx
  41f4ff:	mov    eax,DWORD PTR [rax]
  41f501:	test   eax,eax
  41f503:	je     41f5aa <flatcc_builder_vector_edit@@Base+0x300>
  41f509:	mov    eax,DWORD PTR [rbp-0xb4]
  41f50f:	lea    rdx,[rax*4+0x0]
  41f517:	mov    rax,QWORD PTR [rbp-0xd0]
  41f51e:	add    rax,rdx
  41f521:	mov    eax,DWORD PTR [rax]
  41f523:	sub    eax,DWORD PTR [rbp-0xa8]
  41f529:	mov    edx,DWORD PTR [rbp-0xb4]
  41f52f:	shl    edx,0x2
  41f532:	sub    eax,edx
  41f534:	sub    eax,0x4
  41f537:	mov    DWORD PTR [rbp-0xa4],eax
  41f53d:	mov    eax,DWORD PTR [rbp-0xa4]
  41f543:	mov    edi,eax
  41f545:	call   41b540 <main@@Base+0x9fd>
  41f54a:	mov    edx,eax
  41f54c:	mov    eax,DWORD PTR [rbp-0xb4]
  41f552:	lea    rcx,[rax*4+0x0]
  41f55a:	mov    rax,QWORD PTR [rbp-0xd0]
  41f561:	add    rax,rcx
  41f564:	mov    DWORD PTR [rax],edx
  41f566:	cmp    QWORD PTR [rbp-0xe0],0x0
  41f56e:	je     41f609 <flatcc_builder_vector_edit@@Base+0x35f>
  41f574:	mov    edx,DWORD PTR [rbp-0xb4]
  41f57a:	mov    rax,QWORD PTR [rbp-0xe0]
  41f581:	add    rax,rdx
  41f584:	movzx  eax,BYTE PTR [rax]
  41f587:	test   al,al
  41f589:	jne    41f609 <flatcc_builder_vector_edit@@Base+0x35f>
  41f58b:	lea    rcx,[rip+0x1a73e]        # 439cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41f592:	mov    edx,0x5b1
  41f597:	lea    rsi,[rip+0x19ec2]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f59e:	lea    rdi,[rip+0x1a1d1]        # 439776 <flatcc_builder_padding_base@@Base+0x516>
  41f5a5:	call   4061b0 <__assert_fail@plt>
  41f5aa:	cmp    QWORD PTR [rbp-0xe0],0x0
  41f5b2:	je     41f5ea <flatcc_builder_vector_edit@@Base+0x340>
  41f5b4:	mov    edx,DWORD PTR [rbp-0xb4]
  41f5ba:	mov    rax,QWORD PTR [rbp-0xe0]
  41f5c1:	add    rax,rdx
  41f5c4:	movzx  eax,BYTE PTR [rax]
  41f5c7:	test   al,al
  41f5c9:	je     41f609 <flatcc_builder_vector_edit@@Base+0x35f>
  41f5cb:	lea    rcx,[rip+0x1a6fe]        # 439cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41f5d2:	mov    edx,0x5b5
  41f5d7:	lea    rsi,[rip+0x19e82]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f5de:	lea    rdi,[rip+0x1a19f]        # 439784 <flatcc_builder_padding_base@@Base+0x524>
  41f5e5:	call   4061b0 <__assert_fail@plt>
  41f5ea:	lea    rcx,[rip+0x1a6df]        # 439cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41f5f1:	mov    edx,0x5b7
  41f5f6:	lea    rsi,[rip+0x19e63]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f5fd:	lea    rdi,[rip+0x19ebc]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  41f604:	call   4061b0 <__assert_fail@plt>
  41f609:	inc    DWORD PTR [rbp-0xb4]
  41f60f:	mov    rax,QWORD PTR [rbp-0xd8]
  41f616:	cmp    DWORD PTR [rbp-0xb4],eax
  41f61c:	jb     41f4e7 <flatcc_builder_vector_edit@@Base+0x23d>
  41f622:	lea    rdx,[rbp-0xa0]
  41f629:	mov    rax,QWORD PTR [rbp-0xc8]
  41f630:	mov    rsi,rdx
  41f633:	mov    rdi,rax
  41f636:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41f63b:	mov    rsi,QWORD PTR [rbp-0x8]
  41f63f:	xor    rsi,QWORD PTR fs:0x28
  41f648:	je     41f64f <flatcc_builder_vector_edit@@Base+0x3a5>
  41f64a:	call   4061a0 <__stack_chk_fail@plt>
  41f64f:	leave  
  41f650:	ret    

000000000041f651 <flatcc_builder_create_offset_vector_direct@@Base>:
  41f651:	endbr64 
  41f655:	push   rbp
  41f656:	mov    rbp,rsp
  41f659:	sub    rsp,0x20
  41f65d:	mov    QWORD PTR [rbp-0x8],rdi
  41f661:	mov    QWORD PTR [rbp-0x10],rsi
  41f665:	mov    QWORD PTR [rbp-0x18],rdx
  41f669:	mov    rdx,QWORD PTR [rbp-0x18]
  41f66d:	mov    rsi,QWORD PTR [rbp-0x10]
  41f671:	mov    rax,QWORD PTR [rbp-0x8]
  41f675:	mov    ecx,0x0
  41f67a:	mov    rdi,rax
  41f67d:	call   41f2c0 <flatcc_builder_vector_edit@@Base+0x16>
  41f682:	leave  
  41f683:	ret    

000000000041f684 <flatcc_builder_end_offset_vector@@Base>:
  41f684:	endbr64 
  41f688:	push   rbp
  41f689:	mov    rbp,rsp
  41f68c:	sub    rsp,0x20
  41f690:	mov    QWORD PTR [rbp-0x18],rdi
  41f694:	mov    rax,QWORD PTR [rbp-0x18]
  41f698:	mov    rax,QWORD PTR [rax+0x30]
  41f69c:	movzx  eax,WORD PTR [rax+0xe]
  41f6a0:	cmp    ax,0x5
  41f6a4:	je     41f6c5 <flatcc_builder_end_offset_vector@@Base+0x41>
  41f6a6:	lea    rcx,[rip+0x1a653]        # 439d00 <flatcc_builder_padding_base@@Base+0xaa0>
  41f6ad:	mov    edx,0x5c8
  41f6b2:	lea    rsi,[rip+0x19da7]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f6b9:	lea    rdi,[rip+0x19f58]        # 439618 <flatcc_builder_padding_base@@Base+0x3b8>
  41f6c0:	call   4061b0 <__assert_fail@plt>
  41f6c5:	mov    rax,QWORD PTR [rbp-0x18]
  41f6c9:	mov    rax,QWORD PTR [rax+0x30]
  41f6cd:	mov    eax,DWORD PTR [rax+0x14]
  41f6d0:	mov    edx,eax
  41f6d2:	mov    rax,QWORD PTR [rbp-0x18]
  41f6d6:	mov    rcx,QWORD PTR [rax+0x18]
  41f6da:	mov    rax,QWORD PTR [rbp-0x18]
  41f6de:	mov    rsi,rcx
  41f6e1:	mov    rdi,rax
  41f6e4:	call   41f651 <flatcc_builder_create_offset_vector_direct@@Base>
  41f6e9:	mov    DWORD PTR [rbp-0x4],eax
  41f6ec:	cmp    DWORD PTR [rbp-0x4],0x0
  41f6f0:	jne    41f6f9 <flatcc_builder_end_offset_vector@@Base+0x75>
  41f6f2:	mov    eax,0x0
  41f6f7:	jmp    41f708 <flatcc_builder_end_offset_vector@@Base+0x84>
  41f6f9:	mov    rax,QWORD PTR [rbp-0x18]
  41f6fd:	mov    rdi,rax
  41f700:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41f705:	mov    eax,DWORD PTR [rbp-0x4]
  41f708:	leave  
  41f709:	ret    

000000000041f70a <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41f70a:	endbr64 
  41f70e:	push   rbp
  41f70f:	mov    rbp,rsp
  41f712:	sub    rsp,0x20
  41f716:	mov    QWORD PTR [rbp-0x18],rdi
  41f71a:	mov    QWORD PTR [rbp-0x20],rsi
  41f71e:	mov    rax,QWORD PTR [rbp-0x18]
  41f722:	mov    rax,QWORD PTR [rax+0x30]
  41f726:	movzx  eax,WORD PTR [rax+0xe]
  41f72a:	cmp    ax,0x5
  41f72e:	je     41f74f <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  41f730:	lea    rcx,[rip+0x1a609]        # 439d40 <flatcc_builder_padding_base@@Base+0xae0>
  41f737:	mov    edx,0x5d5
  41f73c:	lea    rsi,[rip+0x19d1d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f743:	lea    rdi,[rip+0x19ece]        # 439618 <flatcc_builder_padding_base@@Base+0x3b8>
  41f74a:	call   4061b0 <__assert_fail@plt>
  41f74f:	mov    rax,QWORD PTR [rbp-0x18]
  41f753:	mov    rax,QWORD PTR [rax+0x30]
  41f757:	mov    eax,DWORD PTR [rax+0x14]
  41f75a:	mov    edi,eax
  41f75c:	mov    rax,QWORD PTR [rbp-0x18]
  41f760:	mov    rsi,QWORD PTR [rax+0x18]
  41f764:	mov    rdx,QWORD PTR [rbp-0x20]
  41f768:	mov    rax,QWORD PTR [rbp-0x18]
  41f76c:	mov    rcx,rdx
  41f76f:	mov    rdx,rdi
  41f772:	mov    rdi,rax
  41f775:	call   41f2c0 <flatcc_builder_vector_edit@@Base+0x16>
  41f77a:	mov    DWORD PTR [rbp-0x4],eax
  41f77d:	cmp    DWORD PTR [rbp-0x4],0x0
  41f781:	jne    41f78a <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  41f783:	mov    eax,0x0
  41f788:	jmp    41f799 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  41f78a:	mov    rax,QWORD PTR [rbp-0x18]
  41f78e:	mov    rdi,rax
  41f791:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41f796:	mov    eax,DWORD PTR [rbp-0x4]
  41f799:	leave  
  41f79a:	ret    

000000000041f79b <flatcc_builder_offset_vector_edit@@Base>:
  41f79b:	endbr64 
  41f79f:	push   rbp
  41f7a0:	mov    rbp,rsp
  41f7a3:	mov    QWORD PTR [rbp-0x8],rdi
  41f7a7:	mov    rax,QWORD PTR [rbp-0x8]
  41f7ab:	mov    rax,QWORD PTR [rax+0x18]
  41f7af:	pop    rbp
  41f7b0:	ret    

000000000041f7b1 <flatcc_builder_offset_vector_count@@Base>:
  41f7b1:	endbr64 
  41f7b5:	push   rbp
  41f7b6:	mov    rbp,rsp
  41f7b9:	mov    QWORD PTR [rbp-0x8],rdi
  41f7bd:	mov    rax,QWORD PTR [rbp-0x8]
  41f7c1:	mov    rax,QWORD PTR [rax+0x30]
  41f7c5:	mov    eax,DWORD PTR [rax+0x14]
  41f7c8:	mov    eax,eax
  41f7ca:	pop    rbp
  41f7cb:	ret    

000000000041f7cc <flatcc_builder_table_add_union@@Base>:
  41f7cc:	endbr64 
  41f7d0:	push   rbp
  41f7d1:	mov    rbp,rsp
  41f7d4:	sub    rsp,0x30
  41f7d8:	mov    QWORD PTR [rbp-0x18],rdi
  41f7dc:	mov    DWORD PTR [rbp-0x1c],esi
  41f7df:	mov    QWORD PTR [rbp-0x24],rdx
  41f7e3:	mov    rax,QWORD PTR [rbp-0x18]
  41f7e7:	mov    rax,QWORD PTR [rax+0x30]
  41f7eb:	movzx  eax,WORD PTR [rax+0xe]
  41f7ef:	cmp    ax,0x3
  41f7f3:	je     41f814 <flatcc_builder_table_add_union@@Base+0x48>
  41f7f5:	lea    rcx,[rip+0x1a574]        # 439d70 <flatcc_builder_padding_base@@Base+0xb10>
  41f7fc:	mov    edx,0x5ee
  41f801:	lea    rsi,[rip+0x19c58]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f808:	lea    rdi,[rip+0x19f29]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41f80f:	call   4061b0 <__assert_fail@plt>
  41f814:	movzx  eax,BYTE PTR [rbp-0x24]
  41f818:	test   al,al
  41f81a:	jne    41f85b <flatcc_builder_table_add_union@@Base+0x8f>
  41f81c:	mov    eax,DWORD PTR [rbp-0x20]
  41f81f:	test   eax,eax
  41f821:	je     41f85b <flatcc_builder_table_add_union@@Base+0x8f>
  41f823:	movzx  eax,BYTE PTR [rbp-0x24]
  41f827:	test   al,al
  41f829:	jne    41f851 <flatcc_builder_table_add_union@@Base+0x85>
  41f82b:	mov    eax,DWORD PTR [rbp-0x20]
  41f82e:	test   eax,eax
  41f830:	je     41f851 <flatcc_builder_table_add_union@@Base+0x85>
  41f832:	lea    rcx,[rip+0x1a537]        # 439d70 <flatcc_builder_padding_base@@Base+0xb10>
  41f839:	mov    edx,0x5ef
  41f83e:	lea    rsi,[rip+0x19c1b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f845:	lea    rdi,[rip+0x19f4c]        # 439798 <flatcc_builder_padding_base@@Base+0x538>
  41f84c:	call   4061b0 <__assert_fail@plt>
  41f851:	mov    eax,0xffffffff
  41f856:	jmp    41f921 <flatcc_builder_table_add_union@@Base+0x155>
  41f85b:	mov    eax,DWORD PTR [rbp-0x20]
  41f85e:	test   eax,eax
  41f860:	je     41f8b4 <flatcc_builder_table_add_union@@Base+0xe8>
  41f862:	mov    edx,DWORD PTR [rbp-0x1c]
  41f865:	mov    rax,QWORD PTR [rbp-0x18]
  41f869:	mov    esi,edx
  41f86b:	mov    rdi,rax
  41f86e:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41f873:	mov    QWORD PTR [rbp-0x10],rax
  41f877:	cmp    QWORD PTR [rbp-0x10],0x0
  41f87c:	jne    41f8ab <flatcc_builder_table_add_union@@Base+0xdf>
  41f87e:	cmp    QWORD PTR [rbp-0x10],0x0
  41f883:	jne    41f8a4 <flatcc_builder_table_add_union@@Base+0xd8>
  41f885:	lea    rcx,[rip+0x1a4e4]        # 439d70 <flatcc_builder_padding_base@@Base+0xb10>
  41f88c:	mov    edx,0x5f2
  41f891:	lea    rsi,[rip+0x19bc8]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f898:	lea    rdi,[rip+0x19f1b]        # 4397ba <flatcc_builder_padding_base@@Base+0x55a>
  41f89f:	call   4061b0 <__assert_fail@plt>
  41f8a4:	mov    eax,0xffffffff
  41f8a9:	jmp    41f921 <flatcc_builder_table_add_union@@Base+0x155>
  41f8ab:	mov    edx,DWORD PTR [rbp-0x20]
  41f8ae:	mov    rax,QWORD PTR [rbp-0x10]
  41f8b2:	mov    DWORD PTR [rax],edx
  41f8b4:	mov    eax,DWORD PTR [rbp-0x1c]
  41f8b7:	lea    esi,[rax-0x1]
  41f8ba:	mov    rax,QWORD PTR [rbp-0x18]
  41f8be:	mov    ecx,0x1
  41f8c3:	mov    edx,0x1
  41f8c8:	mov    rdi,rax
  41f8cb:	call   4203e3 <flatcc_builder_table_add@@Base>
  41f8d0:	mov    QWORD PTR [rbp-0x8],rax
  41f8d4:	cmp    QWORD PTR [rbp-0x8],0x0
  41f8d9:	jne    41f908 <flatcc_builder_table_add_union@@Base+0x13c>
  41f8db:	cmp    QWORD PTR [rbp-0x8],0x0
  41f8e0:	jne    41f901 <flatcc_builder_table_add_union@@Base+0x135>
  41f8e2:	lea    rcx,[rip+0x1a487]        # 439d70 <flatcc_builder_padding_base@@Base+0xb10>
  41f8e9:	mov    edx,0x5f6
  41f8ee:	lea    rsi,[rip+0x19b6b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f8f5:	lea    rdi,[rip+0x19ec8]        # 4397c4 <flatcc_builder_padding_base@@Base+0x564>
  41f8fc:	call   4061b0 <__assert_fail@plt>
  41f901:	mov    eax,0xffffffff
  41f906:	jmp    41f921 <flatcc_builder_table_add_union@@Base+0x155>
  41f908:	movzx  eax,BYTE PTR [rbp-0x24]
  41f90c:	movzx  eax,al
  41f90f:	mov    edi,eax
  41f911:	call   41b54c <main@@Base+0xa09>
  41f916:	mov    rdx,QWORD PTR [rbp-0x8]
  41f91a:	mov    BYTE PTR [rdx],al
  41f91c:	mov    eax,0x0
  41f921:	leave  
  41f922:	ret    

000000000041f923 <flatcc_builder_table_add_union_vector@@Base>:
  41f923:	endbr64 
  41f927:	push   rbp
  41f928:	mov    rbp,rsp
  41f92b:	sub    rsp,0x30
  41f92f:	mov    QWORD PTR [rbp-0x18],rdi
  41f933:	mov    DWORD PTR [rbp-0x1c],esi
  41f936:	mov    QWORD PTR [rbp-0x24],rdx
  41f93a:	mov    rax,QWORD PTR [rbp-0x18]
  41f93e:	mov    rax,QWORD PTR [rax+0x30]
  41f942:	movzx  eax,WORD PTR [rax+0xe]
  41f946:	cmp    ax,0x3
  41f94a:	je     41f96b <flatcc_builder_table_add_union_vector@@Base+0x48>
  41f94c:	lea    rcx,[rip+0x1a44d]        # 439da0 <flatcc_builder_padding_base@@Base+0xb40>
  41f953:	mov    edx,0x600
  41f958:	lea    rsi,[rip+0x19b01]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f95f:	lea    rdi,[rip+0x19dd2]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  41f966:	call   4061b0 <__assert_fail@plt>
  41f96b:	mov    eax,DWORD PTR [rbp-0x24]
  41f96e:	test   eax,eax
  41f970:	sete   dl
  41f973:	mov    eax,DWORD PTR [rbp-0x20]
  41f976:	test   eax,eax
  41f978:	sete   al
  41f97b:	xor    eax,edx
  41f97d:	test   al,al
  41f97f:	je     41f9c0 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  41f981:	mov    eax,DWORD PTR [rbp-0x24]
  41f984:	test   eax,eax
  41f986:	setne  dl
  41f989:	mov    eax,DWORD PTR [rbp-0x20]
  41f98c:	test   eax,eax
  41f98e:	sete   al
  41f991:	xor    eax,edx
  41f993:	test   al,al
  41f995:	jne    41f9b6 <flatcc_builder_table_add_union_vector@@Base+0x93>
  41f997:	lea    rcx,[rip+0x1a402]        # 439da0 <flatcc_builder_padding_base@@Base+0xb40>
  41f99e:	mov    edx,0x601
  41f9a3:	lea    rsi,[rip+0x19ab6]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41f9aa:	lea    rdi,[rip+0x19e1f]        # 4397d0 <flatcc_builder_padding_base@@Base+0x570>
  41f9b1:	call   4061b0 <__assert_fail@plt>
  41f9b6:	mov    eax,0xffffffff
  41f9bb:	jmp    41fa77 <flatcc_builder_table_add_union_vector@@Base+0x154>
  41f9c0:	mov    eax,DWORD PTR [rbp-0x24]
  41f9c3:	test   eax,eax
  41f9c5:	je     41fa72 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  41f9cb:	mov    eax,DWORD PTR [rbp-0x1c]
  41f9ce:	lea    edx,[rax-0x1]
  41f9d1:	mov    rax,QWORD PTR [rbp-0x18]
  41f9d5:	mov    esi,edx
  41f9d7:	mov    rdi,rax
  41f9da:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41f9df:	mov    QWORD PTR [rbp-0x8],rax
  41f9e3:	cmp    QWORD PTR [rbp-0x8],0x0
  41f9e8:	jne    41fa17 <flatcc_builder_table_add_union_vector@@Base+0xf4>
  41f9ea:	cmp    QWORD PTR [rbp-0x8],0x0
  41f9ef:	jne    41fa10 <flatcc_builder_table_add_union_vector@@Base+0xed>
  41f9f1:	lea    rcx,[rip+0x1a3a8]        # 439da0 <flatcc_builder_padding_base@@Base+0xb40>
  41f9f8:	mov    edx,0x604
  41f9fd:	lea    rsi,[rip+0x19a5c]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41fa04:	lea    rdi,[rip+0x19daf]        # 4397ba <flatcc_builder_padding_base@@Base+0x55a>
  41fa0b:	call   4061b0 <__assert_fail@plt>
  41fa10:	mov    eax,0xffffffff
  41fa15:	jmp    41fa77 <flatcc_builder_table_add_union_vector@@Base+0x154>
  41fa17:	mov    edx,DWORD PTR [rbp-0x24]
  41fa1a:	mov    rax,QWORD PTR [rbp-0x8]
  41fa1e:	mov    DWORD PTR [rax],edx
  41fa20:	mov    edx,DWORD PTR [rbp-0x1c]
  41fa23:	mov    rax,QWORD PTR [rbp-0x18]
  41fa27:	mov    esi,edx
  41fa29:	mov    rdi,rax
  41fa2c:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  41fa31:	mov    QWORD PTR [rbp-0x8],rax
  41fa35:	cmp    QWORD PTR [rbp-0x8],0x0
  41fa3a:	jne    41fa69 <flatcc_builder_table_add_union_vector@@Base+0x146>
  41fa3c:	cmp    QWORD PTR [rbp-0x8],0x0
  41fa41:	jne    41fa62 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  41fa43:	lea    rcx,[rip+0x1a356]        # 439da0 <flatcc_builder_padding_base@@Base+0xb40>
  41fa4a:	mov    edx,0x608
  41fa4f:	lea    rsi,[rip+0x19a0a]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41fa56:	lea    rdi,[rip+0x19d5d]        # 4397ba <flatcc_builder_padding_base@@Base+0x55a>
  41fa5d:	call   4061b0 <__assert_fail@plt>
  41fa62:	mov    eax,0xffffffff
  41fa67:	jmp    41fa77 <flatcc_builder_table_add_union_vector@@Base+0x154>
  41fa69:	mov    edx,DWORD PTR [rbp-0x20]
  41fa6c:	mov    rax,QWORD PTR [rbp-0x8]
  41fa70:	mov    DWORD PTR [rax],edx
  41fa72:	mov    eax,0x0
  41fa77:	leave  
  41fa78:	ret    

000000000041fa79 <flatcc_builder_create_union_vector@@Base>:
  41fa79:	endbr64 
  41fa7d:	push   rbp
  41fa7e:	mov    rbp,rsp
  41fa81:	sub    rsp,0x40
  41fa85:	mov    QWORD PTR [rbp-0x28],rdi
  41fa89:	mov    QWORD PTR [rbp-0x30],rsi
  41fa8d:	mov    QWORD PTR [rbp-0x38],rdx
  41fa91:	mov    DWORD PTR [rbp-0x8],0x0
  41fa98:	mov    DWORD PTR [rbp-0x4],0x0
  41fa9f:	mov    rax,QWORD PTR [rbp-0x28]
  41faa3:	mov    rdi,rax
  41faa6:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  41faab:	test   eax,eax
  41faad:	je     41fab8 <flatcc_builder_create_union_vector@@Base+0x3f>
  41faaf:	mov    rax,QWORD PTR [rbp-0x8]
  41fab3:	jmp    41fba3 <flatcc_builder_create_union_vector@@Base+0x12a>
  41fab8:	mov    rdx,QWORD PTR [rbp-0x38]
  41fabc:	mov    rax,QWORD PTR [rbp-0x28]
  41fac0:	mov    rsi,rdx
  41fac3:	mov    rdi,rax
  41fac6:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  41facb:	test   rax,rax
  41face:	jne    41fad9 <flatcc_builder_create_union_vector@@Base+0x60>
  41fad0:	mov    rax,QWORD PTR [rbp-0x8]
  41fad4:	jmp    41fba3 <flatcc_builder_create_union_vector@@Base+0x12a>
  41fad9:	mov    rax,QWORD PTR [rbp-0x38]
  41fadd:	mov    edx,eax
  41fadf:	mov    rax,QWORD PTR [rbp-0x28]
  41fae3:	mov    esi,edx
  41fae5:	mov    rdi,rax
  41fae8:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41faed:	mov    QWORD PTR [rbp-0x18],rax
  41faf1:	cmp    QWORD PTR [rbp-0x18],0x0
  41faf6:	jne    41fb01 <flatcc_builder_create_union_vector@@Base+0x88>
  41faf8:	mov    rax,QWORD PTR [rbp-0x8]
  41fafc:	jmp    41fba3 <flatcc_builder_create_union_vector@@Base+0x12a>
  41fb01:	mov    rax,QWORD PTR [rbp-0x28]
  41fb05:	mov    rdi,rax
  41fb08:	call   41f79b <flatcc_builder_offset_vector_edit@@Base>
  41fb0d:	mov    QWORD PTR [rbp-0x10],rax
  41fb11:	mov    QWORD PTR [rbp-0x20],0x0
  41fb19:	jmp    41fb6d <flatcc_builder_create_union_vector@@Base+0xf4>
  41fb1b:	mov    rax,QWORD PTR [rbp-0x20]
  41fb1f:	lea    rdx,[rax*8+0x0]
  41fb27:	mov    rax,QWORD PTR [rbp-0x30]
  41fb2b:	add    rax,rdx
  41fb2e:	mov    rcx,QWORD PTR [rbp-0x18]
  41fb32:	mov    rdx,QWORD PTR [rbp-0x20]
  41fb36:	add    rdx,rcx
  41fb39:	movzx  eax,BYTE PTR [rax]
  41fb3c:	mov    BYTE PTR [rdx],al
  41fb3e:	mov    rax,QWORD PTR [rbp-0x20]
  41fb42:	lea    rdx,[rax*8+0x0]
  41fb4a:	mov    rax,QWORD PTR [rbp-0x30]
  41fb4e:	add    rax,rdx
  41fb51:	mov    rdx,QWORD PTR [rbp-0x20]
  41fb55:	lea    rcx,[rdx*4+0x0]
  41fb5d:	mov    rdx,QWORD PTR [rbp-0x10]
  41fb61:	add    rdx,rcx
  41fb64:	mov    eax,DWORD PTR [rax+0x4]
  41fb67:	mov    DWORD PTR [rdx],eax
  41fb69:	inc    QWORD PTR [rbp-0x20]
  41fb6d:	mov    rax,QWORD PTR [rbp-0x20]
  41fb71:	cmp    rax,QWORD PTR [rbp-0x38]
  41fb75:	jb     41fb1b <flatcc_builder_create_union_vector@@Base+0xa2>
  41fb77:	mov    rcx,QWORD PTR [rbp-0x38]
  41fb7b:	mov    rdx,QWORD PTR [rbp-0x10]
  41fb7f:	mov    rsi,QWORD PTR [rbp-0x18]
  41fb83:	mov    rax,QWORD PTR [rbp-0x28]
  41fb87:	mov    rdi,rax
  41fb8a:	call   41fba5 <flatcc_builder_create_union_vector_direct@@Base>
  41fb8f:	mov    QWORD PTR [rbp-0x8],rax
  41fb93:	mov    rax,QWORD PTR [rbp-0x28]
  41fb97:	mov    rdi,rax
  41fb9a:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41fb9f:	mov    rax,QWORD PTR [rbp-0x8]
  41fba3:	leave  
  41fba4:	ret    

000000000041fba5 <flatcc_builder_create_union_vector_direct@@Base>:
  41fba5:	endbr64 
  41fba9:	push   rbp
  41fbaa:	mov    rbp,rsp
  41fbad:	sub    rsp,0x30
  41fbb1:	mov    QWORD PTR [rbp-0x18],rdi
  41fbb5:	mov    QWORD PTR [rbp-0x20],rsi
  41fbb9:	mov    QWORD PTR [rbp-0x28],rdx
  41fbbd:	mov    QWORD PTR [rbp-0x30],rcx
  41fbc1:	mov    DWORD PTR [rbp-0x8],0x0
  41fbc8:	mov    DWORD PTR [rbp-0x4],0x0
  41fbcf:	mov    rcx,QWORD PTR [rbp-0x20]
  41fbd3:	mov    rdx,QWORD PTR [rbp-0x30]
  41fbd7:	mov    rsi,QWORD PTR [rbp-0x28]
  41fbdb:	mov    rax,QWORD PTR [rbp-0x18]
  41fbdf:	mov    rdi,rax
  41fbe2:	call   41f2c0 <flatcc_builder_vector_edit@@Base+0x16>
  41fbe7:	mov    DWORD PTR [rbp-0x4],eax
  41fbea:	mov    eax,DWORD PTR [rbp-0x4]
  41fbed:	test   eax,eax
  41fbef:	jne    41fbf7 <flatcc_builder_create_union_vector_direct@@Base+0x52>
  41fbf1:	mov    rax,QWORD PTR [rbp-0x8]
  41fbf5:	jmp    41fc30 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  41fbf7:	mov    rdx,QWORD PTR [rbp-0x30]
  41fbfb:	mov    rsi,QWORD PTR [rbp-0x20]
  41fbff:	mov    rax,QWORD PTR [rbp-0x18]
  41fc03:	mov    r9d,0xffffffff
  41fc09:	mov    r8d,0x1
  41fc0f:	mov    ecx,0x1
  41fc14:	mov    rdi,rax
  41fc17:	call   41ef48 <flatcc_builder_create_vector@@Base>
  41fc1c:	mov    DWORD PTR [rbp-0x8],eax
  41fc1f:	mov    eax,DWORD PTR [rbp-0x8]
  41fc22:	test   eax,eax
  41fc24:	jne    41fc2c <flatcc_builder_create_union_vector_direct@@Base+0x87>
  41fc26:	mov    rax,QWORD PTR [rbp-0x8]
  41fc2a:	jmp    41fc30 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  41fc2c:	mov    rax,QWORD PTR [rbp-0x8]
  41fc30:	leave  
  41fc31:	ret    

000000000041fc32 <flatcc_builder_start_union_vector@@Base>:
  41fc32:	endbr64 
  41fc36:	push   rbp
  41fc37:	mov    rbp,rsp
  41fc3a:	sub    rsp,0x10
  41fc3e:	mov    QWORD PTR [rbp-0x8],rdi
  41fc42:	mov    rax,QWORD PTR [rbp-0x8]
  41fc46:	mov    esi,0x4
  41fc4b:	mov    rdi,rax
  41fc4e:	call   41c59d <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41fc53:	test   eax,eax
  41fc55:	je     41fc5e <flatcc_builder_start_union_vector@@Base+0x2c>
  41fc57:	mov    eax,0xffffffff
  41fc5c:	jmp    41fca0 <flatcc_builder_start_union_vector@@Base+0x6e>
  41fc5e:	mov    rax,QWORD PTR [rbp-0x8]
  41fc62:	mov    rax,QWORD PTR [rax+0x30]
  41fc66:	mov    DWORD PTR [rax+0x10],0x8
  41fc6d:	mov    rax,QWORD PTR [rbp-0x8]
  41fc71:	mov    rax,QWORD PTR [rax+0x30]
  41fc75:	mov    DWORD PTR [rax+0x14],0x0
  41fc7c:	mov    rax,QWORD PTR [rbp-0x8]
  41fc80:	mov    rax,QWORD PTR [rax+0x30]
  41fc84:	mov    WORD PTR [rax+0xe],0x7
  41fc8a:	mov    rax,QWORD PTR [rbp-0x8]
  41fc8e:	mov    esi,0xfffffffc
  41fc93:	mov    rdi,rax
  41fc96:	call   41b773 <flatcc_builder_default_alloc@@Base+0x173>
  41fc9b:	mov    eax,0x0
  41fca0:	leave  
  41fca1:	ret    

000000000041fca2 <flatcc_builder_end_union_vector@@Base>:
  41fca2:	endbr64 
  41fca6:	push   rbp
  41fca7:	mov    rbp,rsp
  41fcaa:	sub    rsp,0x40
  41fcae:	mov    QWORD PTR [rbp-0x38],rdi
  41fcb2:	mov    DWORD PTR [rbp-0x8],0x0
  41fcb9:	mov    DWORD PTR [rbp-0x4],0x0
  41fcc0:	mov    rax,QWORD PTR [rbp-0x38]
  41fcc4:	mov    rax,QWORD PTR [rax+0x30]
  41fcc8:	movzx  eax,WORD PTR [rax+0xe]
  41fccc:	cmp    ax,0x7
  41fcd0:	je     41fcf1 <flatcc_builder_end_union_vector@@Base+0x4f>
  41fcd2:	lea    rcx,[rip+0x1a107]        # 439de0 <flatcc_builder_padding_base@@Base+0xb80>
  41fcd9:	mov    edx,0x651
  41fcde:	lea    rsi,[rip+0x1977b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41fce5:	lea    rdi,[rip+0x19b0c]        # 4397f8 <flatcc_builder_padding_base@@Base+0x598>
  41fcec:	call   4061b0 <__assert_fail@plt>
  41fcf1:	mov    rax,QWORD PTR [rbp-0x38]
  41fcf5:	mov    rdi,rax
  41fcf8:	call   41fe01 <flatcc_builder_union_vector_count@@Base>
  41fcfd:	mov    QWORD PTR [rbp-0x28],rax
  41fd01:	mov    rax,QWORD PTR [rbp-0x28]
  41fd05:	mov    edx,eax
  41fd07:	mov    eax,edx
  41fd09:	shl    eax,0x2
  41fd0c:	add    edx,eax
  41fd0e:	mov    rax,QWORD PTR [rbp-0x38]
  41fd12:	mov    esi,edx
  41fd14:	mov    rdi,rax
  41fd17:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41fd1c:	mov    QWORD PTR [rbp-0x20],rax
  41fd20:	cmp    QWORD PTR [rbp-0x20],0x0
  41fd25:	jne    41fd30 <flatcc_builder_end_union_vector@@Base+0x8e>
  41fd27:	mov    rax,QWORD PTR [rbp-0x8]
  41fd2b:	jmp    41fde9 <flatcc_builder_end_union_vector@@Base+0x147>
  41fd30:	mov    rax,QWORD PTR [rbp-0x28]
  41fd34:	lea    rdx,[rax*4+0x0]
  41fd3c:	mov    rax,QWORD PTR [rbp-0x20]
  41fd40:	add    rax,rdx
  41fd43:	mov    QWORD PTR [rbp-0x18],rax
  41fd47:	mov    rax,QWORD PTR [rbp-0x38]
  41fd4b:	mov    rdi,rax
  41fd4e:	call   41fdeb <flatcc_builder_union_vector_edit@@Base>
  41fd53:	mov    QWORD PTR [rbp-0x10],rax
  41fd57:	mov    QWORD PTR [rbp-0x30],0x0
  41fd5f:	jmp    41fdb3 <flatcc_builder_end_union_vector@@Base+0x111>
  41fd61:	mov    rax,QWORD PTR [rbp-0x30]
  41fd65:	lea    rdx,[rax*8+0x0]
  41fd6d:	mov    rax,QWORD PTR [rbp-0x10]
  41fd71:	add    rax,rdx
  41fd74:	mov    rcx,QWORD PTR [rbp-0x18]
  41fd78:	mov    rdx,QWORD PTR [rbp-0x30]
  41fd7c:	add    rdx,rcx
  41fd7f:	movzx  eax,BYTE PTR [rax]
  41fd82:	mov    BYTE PTR [rdx],al
  41fd84:	mov    rax,QWORD PTR [rbp-0x30]
  41fd88:	lea    rdx,[rax*8+0x0]
  41fd90:	mov    rax,QWORD PTR [rbp-0x10]
  41fd94:	add    rax,rdx
  41fd97:	mov    rdx,QWORD PTR [rbp-0x30]
  41fd9b:	lea    rcx,[rdx*4+0x0]
  41fda3:	mov    rdx,QWORD PTR [rbp-0x20]
  41fda7:	add    rdx,rcx
  41fdaa:	mov    eax,DWORD PTR [rax+0x4]
  41fdad:	mov    DWORD PTR [rdx],eax
  41fdaf:	inc    QWORD PTR [rbp-0x30]
  41fdb3:	mov    rax,QWORD PTR [rbp-0x30]
  41fdb7:	cmp    rax,QWORD PTR [rbp-0x28]
  41fdbb:	jb     41fd61 <flatcc_builder_end_union_vector@@Base+0xbf>
  41fdbd:	mov    rcx,QWORD PTR [rbp-0x28]
  41fdc1:	mov    rdx,QWORD PTR [rbp-0x20]
  41fdc5:	mov    rsi,QWORD PTR [rbp-0x18]
  41fdc9:	mov    rax,QWORD PTR [rbp-0x38]
  41fdcd:	mov    rdi,rax
  41fdd0:	call   41fba5 <flatcc_builder_create_union_vector_direct@@Base>
  41fdd5:	mov    QWORD PTR [rbp-0x8],rax
  41fdd9:	mov    rax,QWORD PTR [rbp-0x38]
  41fddd:	mov    rdi,rax
  41fde0:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41fde5:	mov    rax,QWORD PTR [rbp-0x8]
  41fde9:	leave  
  41fdea:	ret    

000000000041fdeb <flatcc_builder_union_vector_edit@@Base>:
  41fdeb:	endbr64 
  41fdef:	push   rbp
  41fdf0:	mov    rbp,rsp
  41fdf3:	mov    QWORD PTR [rbp-0x8],rdi
  41fdf7:	mov    rax,QWORD PTR [rbp-0x8]
  41fdfb:	mov    rax,QWORD PTR [rax+0x18]
  41fdff:	pop    rbp
  41fe00:	ret    

000000000041fe01 <flatcc_builder_union_vector_count@@Base>:
  41fe01:	endbr64 
  41fe05:	push   rbp
  41fe06:	mov    rbp,rsp
  41fe09:	mov    QWORD PTR [rbp-0x8],rdi
  41fe0d:	mov    rax,QWORD PTR [rbp-0x8]
  41fe11:	mov    rax,QWORD PTR [rax+0x30]
  41fe15:	mov    eax,DWORD PTR [rax+0x14]
  41fe18:	mov    eax,eax
  41fe1a:	pop    rbp
  41fe1b:	ret    

000000000041fe1c <flatcc_builder_extend_union_vector@@Base>:
  41fe1c:	endbr64 
  41fe20:	push   rbp
  41fe21:	mov    rbp,rsp
  41fe24:	sub    rsp,0x10
  41fe28:	mov    QWORD PTR [rbp-0x8],rdi
  41fe2c:	mov    QWORD PTR [rbp-0x10],rsi
  41fe30:	mov    rax,QWORD PTR [rbp-0x10]
  41fe34:	mov    ecx,eax
  41fe36:	mov    rax,QWORD PTR [rbp-0x8]
  41fe3a:	mov    edx,0x1fffffff
  41fe3f:	mov    esi,ecx
  41fe41:	mov    rdi,rax
  41fe44:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  41fe49:	test   eax,eax
  41fe4b:	je     41fe54 <flatcc_builder_extend_union_vector@@Base+0x38>
  41fe4d:	mov    eax,0x0
  41fe52:	jmp    41fe6d <flatcc_builder_extend_union_vector@@Base+0x51>
  41fe54:	mov    rax,QWORD PTR [rbp-0x10]
  41fe58:	lea    edx,[rax*8+0x0]
  41fe5f:	mov    rax,QWORD PTR [rbp-0x8]
  41fe63:	mov    esi,edx
  41fe65:	mov    rdi,rax
  41fe68:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41fe6d:	leave  
  41fe6e:	ret    

000000000041fe6f <flatcc_builder_truncate_union_vector@@Base>:
  41fe6f:	endbr64 
  41fe73:	push   rbp
  41fe74:	mov    rbp,rsp
  41fe77:	sub    rsp,0x10
  41fe7b:	mov    QWORD PTR [rbp-0x8],rdi
  41fe7f:	mov    QWORD PTR [rbp-0x10],rsi
  41fe83:	mov    rax,QWORD PTR [rbp-0x8]
  41fe87:	mov    rax,QWORD PTR [rax+0x30]
  41fe8b:	movzx  eax,WORD PTR [rax+0xe]
  41fe8f:	cmp    ax,0x7
  41fe93:	je     41feb4 <flatcc_builder_truncate_union_vector@@Base+0x45>
  41fe95:	lea    rcx,[rip+0x19f64]        # 439e00 <flatcc_builder_padding_base@@Base+0xba0>
  41fe9c:	mov    edx,0x681
  41fea1:	lea    rsi,[rip+0x195b8]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41fea8:	lea    rdi,[rip+0x19949]        # 4397f8 <flatcc_builder_padding_base@@Base+0x598>
  41feaf:	call   4061b0 <__assert_fail@plt>
  41feb4:	mov    rax,QWORD PTR [rbp-0x8]
  41feb8:	mov    rax,QWORD PTR [rax+0x30]
  41febc:	mov    eax,DWORD PTR [rax+0x14]
  41febf:	mov    rdx,QWORD PTR [rbp-0x10]
  41fec3:	cmp    eax,edx
  41fec5:	jae    41ff00 <flatcc_builder_truncate_union_vector@@Base+0x91>
  41fec7:	mov    rax,QWORD PTR [rbp-0x8]
  41fecb:	mov    rax,QWORD PTR [rax+0x30]
  41fecf:	mov    eax,DWORD PTR [rax+0x14]
  41fed2:	mov    rdx,QWORD PTR [rbp-0x10]
  41fed6:	cmp    eax,edx
  41fed8:	jae    41fef9 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  41feda:	lea    rcx,[rip+0x19f1f]        # 439e00 <flatcc_builder_padding_base@@Base+0xba0>
  41fee1:	mov    edx,0x682
  41fee6:	lea    rsi,[rip+0x19573]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41feed:	lea    rdi,[rip+0x197b4]        # 4396a8 <flatcc_builder_padding_base@@Base+0x448>
  41fef4:	call   4061b0 <__assert_fail@plt>
  41fef9:	mov    eax,0xffffffff
  41fefe:	jmp    41ff43 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  41ff00:	mov    rax,QWORD PTR [rbp-0x8]
  41ff04:	mov    rax,QWORD PTR [rax+0x30]
  41ff08:	mov    edx,DWORD PTR [rax+0x14]
  41ff0b:	mov    rax,QWORD PTR [rbp-0x10]
  41ff0f:	mov    ecx,eax
  41ff11:	mov    rax,QWORD PTR [rbp-0x8]
  41ff15:	mov    rax,QWORD PTR [rax+0x30]
  41ff19:	sub    edx,ecx
  41ff1b:	mov    DWORD PTR [rax+0x14],edx
  41ff1e:	mov    rax,QWORD PTR [rbp-0x8]
  41ff22:	mov    rax,QWORD PTR [rax+0x30]
  41ff26:	mov    eax,DWORD PTR [rax+0x10]
  41ff29:	mov    rdx,QWORD PTR [rbp-0x10]
  41ff2d:	imul   edx,eax
  41ff30:	mov    rax,QWORD PTR [rbp-0x8]
  41ff34:	mov    esi,edx
  41ff36:	mov    rdi,rax
  41ff39:	call   41b8e6 <flatcc_builder_default_alloc@@Base+0x2e6>
  41ff3e:	mov    eax,0x0
  41ff43:	leave  
  41ff44:	ret    

000000000041ff45 <flatcc_builder_union_vector_push@@Base>:
  41ff45:	endbr64 
  41ff49:	push   rbp
  41ff4a:	mov    rbp,rsp
  41ff4d:	sub    rsp,0x20
  41ff51:	mov    QWORD PTR [rbp-0x18],rdi
  41ff55:	mov    QWORD PTR [rbp-0x20],rsi
  41ff59:	mov    rax,QWORD PTR [rbp-0x18]
  41ff5d:	mov    rax,QWORD PTR [rax+0x30]
  41ff61:	movzx  eax,WORD PTR [rax+0xe]
  41ff65:	cmp    ax,0x7
  41ff69:	je     41ff8a <flatcc_builder_union_vector_push@@Base+0x45>
  41ff6b:	lea    rcx,[rip+0x19ece]        # 439e40 <flatcc_builder_padding_base@@Base+0xbe0>
  41ff72:	mov    edx,0x68d
  41ff77:	lea    rsi,[rip+0x194e2]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  41ff7e:	lea    rdi,[rip+0x19873]        # 4397f8 <flatcc_builder_padding_base@@Base+0x598>
  41ff85:	call   4061b0 <__assert_fail@plt>
  41ff8a:	mov    rax,QWORD PTR [rbp-0x18]
  41ff8e:	mov    rax,QWORD PTR [rax+0x30]
  41ff92:	mov    eax,DWORD PTR [rax+0x14]
  41ff95:	cmp    eax,0x1fffffff
  41ff9a:	jne    41ffa3 <flatcc_builder_union_vector_push@@Base+0x5e>
  41ff9c:	mov    eax,0x0
  41ffa1:	jmp    41ffed <flatcc_builder_union_vector_push@@Base+0xa8>
  41ffa3:	mov    rax,QWORD PTR [rbp-0x18]
  41ffa7:	mov    rax,QWORD PTR [rax+0x30]
  41ffab:	mov    edx,DWORD PTR [rax+0x14]
  41ffae:	mov    rax,QWORD PTR [rbp-0x18]
  41ffb2:	mov    rax,QWORD PTR [rax+0x30]
  41ffb6:	inc    edx
  41ffb8:	mov    DWORD PTR [rax+0x14],edx
  41ffbb:	mov    rax,QWORD PTR [rbp-0x18]
  41ffbf:	mov    esi,0x8
  41ffc4:	mov    rdi,rax
  41ffc7:	call   41b86a <flatcc_builder_default_alloc@@Base+0x26a>
  41ffcc:	mov    QWORD PTR [rbp-0x8],rax
  41ffd0:	cmp    QWORD PTR [rbp-0x8],0x0
  41ffd5:	jne    41ffde <flatcc_builder_union_vector_push@@Base+0x99>
  41ffd7:	mov    eax,0x0
  41ffdc:	jmp    41ffed <flatcc_builder_union_vector_push@@Base+0xa8>
  41ffde:	mov    rax,QWORD PTR [rbp-0x8]
  41ffe2:	mov    rdx,QWORD PTR [rbp-0x20]
  41ffe6:	mov    QWORD PTR [rax],rdx
  41ffe9:	mov    rax,QWORD PTR [rbp-0x8]
  41ffed:	leave  
  41ffee:	ret    

000000000041ffef <flatcc_builder_append_union_vector@@Base>:
  41ffef:	endbr64 
  41fff3:	push   rbp
  41fff4:	mov    rbp,rsp
  41fff7:	sub    rsp,0x20
  41fffb:	mov    QWORD PTR [rbp-0x8],rdi
  41ffff:	mov    QWORD PTR [rbp-0x10],rsi
  420003:	mov    QWORD PTR [rbp-0x18],rdx
  420007:	mov    rax,QWORD PTR [rbp-0x8]
  42000b:	mov    rax,QWORD PTR [rax+0x30]
  42000f:	movzx  eax,WORD PTR [rax+0xe]
  420013:	cmp    ax,0x7
  420017:	je     420038 <flatcc_builder_append_union_vector@@Base+0x49>
  420019:	lea    rcx,[rip+0x19e60]        # 439e80 <flatcc_builder_padding_base@@Base+0xc20>
  420020:	mov    edx,0x69c
  420025:	lea    rsi,[rip+0x19434]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  42002c:	lea    rdi,[rip+0x197c5]        # 4397f8 <flatcc_builder_padding_base@@Base+0x598>
  420033:	call   4061b0 <__assert_fail@plt>
  420038:	mov    rax,QWORD PTR [rbp-0x18]
  42003c:	mov    ecx,eax
  42003e:	mov    rax,QWORD PTR [rbp-0x8]
  420042:	mov    edx,0x1fffffff
  420047:	mov    esi,ecx
  420049:	mov    rdi,rax
  42004c:	call   41d80f <flatcc_builder_end_struct@@Base+0x92>
  420051:	test   eax,eax
  420053:	je     42005c <flatcc_builder_append_union_vector@@Base+0x6d>
  420055:	mov    eax,0x0
  42005a:	jmp    42007a <flatcc_builder_append_union_vector@@Base+0x8b>
  42005c:	mov    rax,QWORD PTR [rbp-0x18]
  420060:	lea    edx,[rax*8+0x0]
  420067:	mov    rcx,QWORD PTR [rbp-0x10]
  42006b:	mov    rax,QWORD PTR [rbp-0x8]
  42006f:	mov    rsi,rcx
  420072:	mov    rdi,rax
  420075:	call   41b932 <flatcc_builder_default_alloc@@Base+0x332>
  42007a:	leave  
  42007b:	ret    

000000000042007c <flatcc_builder_create_string@@Base>:
  42007c:	endbr64 
  420080:	push   rbp
  420081:	mov    rbp,rsp
  420084:	sub    rsp,0xd0
  42008b:	mov    QWORD PTR [rbp-0xb8],rdi
  420092:	mov    QWORD PTR [rbp-0xc0],rsi
  420099:	mov    QWORD PTR [rbp-0xc8],rdx
  4200a0:	mov    rax,QWORD PTR fs:0x28
  4200a9:	mov    QWORD PTR [rbp-0x8],rax
  4200ad:	xor    eax,eax
  4200af:	mov    eax,0xffffffff
  4200b4:	cmp    QWORD PTR [rbp-0xc8],rax
  4200bb:	jbe    4200c7 <flatcc_builder_create_string@@Base+0x4b>
  4200bd:	mov    eax,0x0
  4200c2:	jmp    42026a <flatcc_builder_create_string@@Base+0x1ee>
  4200c7:	mov    rax,QWORD PTR [rbp-0xc8]
  4200ce:	mov    edi,eax
  4200d0:	call   41b540 <main@@Base+0x9fd>
  4200d5:	mov    DWORD PTR [rbp-0xa8],eax
  4200db:	mov    rax,QWORD PTR [rbp-0xc8]
  4200e2:	lea    ecx,[rax+0x1]
  4200e5:	mov    rax,QWORD PTR [rbp-0xb8]
  4200ec:	mov    edx,0x4
  4200f1:	mov    esi,ecx
  4200f3:	mov    rdi,rax
  4200f6:	call   41c83f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4200fb:	inc    eax
  4200fd:	mov    DWORD PTR [rbp-0xa4],eax
  420103:	mov    QWORD PTR [rbp-0xa0],0x0
  42010e:	mov    DWORD PTR [rbp-0x98],0x0
  420118:	mov    rax,QWORD PTR [rbp-0xa0]
  42011f:	add    rax,0x4
  420123:	mov    QWORD PTR [rbp-0xa0],rax
  42012a:	mov    eax,DWORD PTR [rbp-0x98]
  420130:	cdqe   
  420132:	shl    rax,0x4
  420136:	add    rax,rbp
  420139:	lea    rdx,[rax-0x90]
  420140:	lea    rax,[rbp-0xa8]
  420147:	mov    QWORD PTR [rdx],rax
  42014a:	mov    eax,DWORD PTR [rbp-0x98]
  420150:	cdqe   
  420152:	shl    rax,0x4
  420156:	add    rax,rbp
  420159:	sub    rax,0x88
  42015f:	mov    QWORD PTR [rax],0x4
  420166:	mov    eax,DWORD PTR [rbp-0x98]
  42016c:	inc    eax
  42016e:	mov    DWORD PTR [rbp-0x98],eax
  420174:	cmp    QWORD PTR [rbp-0xc8],0x0
  42017c:	je     4201e4 <flatcc_builder_create_string@@Base+0x168>
  42017e:	mov    rdx,QWORD PTR [rbp-0xa0]
  420185:	mov    rax,QWORD PTR [rbp-0xc8]
  42018c:	add    rax,rdx
  42018f:	mov    QWORD PTR [rbp-0xa0],rax
  420196:	mov    eax,DWORD PTR [rbp-0x98]
  42019c:	cdqe   
  42019e:	shl    rax,0x4
  4201a2:	add    rax,rbp
  4201a5:	lea    rdx,[rax-0x90]
  4201ac:	mov    rax,QWORD PTR [rbp-0xc0]
  4201b3:	mov    QWORD PTR [rdx],rax
  4201b6:	mov    eax,DWORD PTR [rbp-0x98]
  4201bc:	cdqe   
  4201be:	shl    rax,0x4
  4201c2:	add    rax,rbp
  4201c5:	lea    rdx,[rax-0x88]
  4201cc:	mov    rax,QWORD PTR [rbp-0xc8]
  4201d3:	mov    QWORD PTR [rdx],rax
  4201d6:	mov    eax,DWORD PTR [rbp-0x98]
  4201dc:	inc    eax
  4201de:	mov    DWORD PTR [rbp-0x98],eax
  4201e4:	cmp    DWORD PTR [rbp-0xa4],0x0
  4201eb:	je     420251 <flatcc_builder_create_string@@Base+0x1d5>
  4201ed:	mov    rdx,QWORD PTR [rbp-0xa0]
  4201f4:	mov    eax,DWORD PTR [rbp-0xa4]
  4201fa:	add    rax,rdx
  4201fd:	mov    QWORD PTR [rbp-0xa0],rax
  420204:	mov    eax,DWORD PTR [rbp-0x98]
  42020a:	cdqe   
  42020c:	shl    rax,0x4
  420210:	add    rax,rbp
  420213:	sub    rax,0x90
  420219:	mov    rdx,0x439260
  420220:	mov    QWORD PTR [rax],rdx
  420223:	mov    edx,DWORD PTR [rbp-0x98]
  420229:	mov    eax,DWORD PTR [rbp-0xa4]
  42022f:	movsxd rdx,edx
  420232:	shl    rdx,0x4
  420236:	add    rdx,rbp
  420239:	sub    rdx,0x88
  420240:	mov    QWORD PTR [rdx],rax
  420243:	mov    eax,DWORD PTR [rbp-0x98]
  420249:	inc    eax
  42024b:	mov    DWORD PTR [rbp-0x98],eax
  420251:	lea    rdx,[rbp-0xa0]
  420258:	mov    rax,QWORD PTR [rbp-0xb8]
  42025f:	mov    rsi,rdx
  420262:	mov    rdi,rax
  420265:	call   41c889 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  42026a:	mov    rcx,QWORD PTR [rbp-0x8]
  42026e:	xor    rcx,QWORD PTR fs:0x28
  420277:	je     42027e <flatcc_builder_create_string@@Base+0x202>
  420279:	call   4061a0 <__stack_chk_fail@plt>
  42027e:	leave  
  42027f:	ret    

0000000000420280 <flatcc_builder_create_string_str@@Base>:
  420280:	endbr64 
  420284:	push   rbp
  420285:	mov    rbp,rsp
  420288:	sub    rsp,0x10
  42028c:	mov    QWORD PTR [rbp-0x8],rdi
  420290:	mov    QWORD PTR [rbp-0x10],rsi
  420294:	mov    rax,QWORD PTR [rbp-0x10]
  420298:	mov    rdi,rax
  42029b:	call   406190 <strlen@plt>
  4202a0:	mov    rdx,rax
  4202a3:	mov    rcx,QWORD PTR [rbp-0x10]
  4202a7:	mov    rax,QWORD PTR [rbp-0x8]
  4202ab:	mov    rsi,rcx
  4202ae:	mov    rdi,rax
  4202b1:	call   42007c <flatcc_builder_create_string@@Base>
  4202b6:	leave  
  4202b7:	ret    

00000000004202b8 <flatcc_builder_create_string_strn@@Base>:
  4202b8:	endbr64 
  4202bc:	push   rbp
  4202bd:	mov    rbp,rsp
  4202c0:	sub    rsp,0x20
  4202c4:	mov    QWORD PTR [rbp-0x8],rdi
  4202c8:	mov    QWORD PTR [rbp-0x10],rsi
  4202cc:	mov    QWORD PTR [rbp-0x18],rdx
  4202d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4202d4:	mov    rax,QWORD PTR [rbp-0x10]
  4202d8:	mov    rsi,rdx
  4202db:	mov    rdi,rax
  4202de:	call   41b5c0 <main@@Base+0xa7d>
  4202e3:	mov    rdx,rax
  4202e6:	mov    rcx,QWORD PTR [rbp-0x10]
  4202ea:	mov    rax,QWORD PTR [rbp-0x8]
  4202ee:	mov    rsi,rcx
  4202f1:	mov    rdi,rax
  4202f4:	call   42007c <flatcc_builder_create_string@@Base>
  4202f9:	leave  
  4202fa:	ret    

00000000004202fb <flatcc_builder_end_string@@Base>:
  4202fb:	endbr64 
  4202ff:	push   rbp
  420300:	mov    rbp,rsp
  420303:	sub    rsp,0x20
  420307:	mov    QWORD PTR [rbp-0x18],rdi
  42030b:	mov    rax,QWORD PTR [rbp-0x18]
  42030f:	mov    rax,QWORD PTR [rax+0x30]
  420313:	movzx  eax,WORD PTR [rax+0xe]
  420317:	cmp    ax,0x6
  42031b:	je     42033c <flatcc_builder_end_string@@Base+0x41>
  42031d:	lea    rcx,[rip+0x19b8c]        # 439eb0 <flatcc_builder_padding_base@@Base+0xc50>
  420324:	mov    edx,0x6c4
  420329:	lea    rsi,[rip+0x19130]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420330:	lea    rdi,[rip+0x19319]        # 439650 <flatcc_builder_padding_base@@Base+0x3f0>
  420337:	call   4061b0 <__assert_fail@plt>
  42033c:	mov    rax,QWORD PTR [rbp-0x18]
  420340:	mov    rax,QWORD PTR [rax+0x30]
  420344:	mov    edx,DWORD PTR [rax+0x14]
  420347:	mov    rax,QWORD PTR [rbp-0x18]
  42034b:	mov    eax,DWORD PTR [rax+0x20]
  42034e:	cmp    edx,eax
  420350:	je     420371 <flatcc_builder_end_string@@Base+0x76>
  420352:	lea    rcx,[rip+0x19b57]        # 439eb0 <flatcc_builder_padding_base@@Base+0xc50>
  420359:	mov    edx,0x6c5
  42035e:	lea    rsi,[rip+0x190fb]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420365:	lea    rdi,[rip+0x194c4]        # 439830 <flatcc_builder_padding_base@@Base+0x5d0>
  42036c:	call   4061b0 <__assert_fail@plt>
  420371:	mov    rax,QWORD PTR [rbp-0x18]
  420375:	mov    eax,DWORD PTR [rax+0x20]
  420378:	mov    edx,eax
  42037a:	mov    rax,QWORD PTR [rbp-0x18]
  42037e:	mov    rcx,QWORD PTR [rax+0x18]
  420382:	mov    rax,QWORD PTR [rbp-0x18]
  420386:	mov    rsi,rcx
  420389:	mov    rdi,rax
  42038c:	call   42007c <flatcc_builder_create_string@@Base>
  420391:	mov    DWORD PTR [rbp-0x4],eax
  420394:	cmp    DWORD PTR [rbp-0x4],0x0
  420398:	jne    4203a1 <flatcc_builder_end_string@@Base+0xa6>
  42039a:	mov    eax,0x0
  42039f:	jmp    4203b0 <flatcc_builder_end_string@@Base+0xb5>
  4203a1:	mov    rax,QWORD PTR [rbp-0x18]
  4203a5:	mov    rdi,rax
  4203a8:	call   41c778 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4203ad:	mov    eax,DWORD PTR [rbp-0x4]
  4203b0:	leave  
  4203b1:	ret    

00000000004203b2 <flatcc_builder_string_edit@@Base>:
  4203b2:	endbr64 
  4203b6:	push   rbp
  4203b7:	mov    rbp,rsp
  4203ba:	mov    QWORD PTR [rbp-0x8],rdi
  4203be:	mov    rax,QWORD PTR [rbp-0x8]
  4203c2:	mov    rax,QWORD PTR [rax+0x18]
  4203c6:	pop    rbp
  4203c7:	ret    

00000000004203c8 <flatcc_builder_string_len@@Base>:
  4203c8:	endbr64 
  4203cc:	push   rbp
  4203cd:	mov    rbp,rsp
  4203d0:	mov    QWORD PTR [rbp-0x8],rdi
  4203d4:	mov    rax,QWORD PTR [rbp-0x8]
  4203d8:	mov    rax,QWORD PTR [rax+0x30]
  4203dc:	mov    eax,DWORD PTR [rax+0x14]
  4203df:	mov    eax,eax
  4203e1:	pop    rbp
  4203e2:	ret    

00000000004203e3 <flatcc_builder_table_add@@Base>:
  4203e3:	endbr64 
  4203e7:	push   rbp
  4203e8:	mov    rbp,rsp
  4203eb:	sub    rsp,0x20
  4203ef:	mov    QWORD PTR [rbp-0x8],rdi
  4203f3:	mov    DWORD PTR [rbp-0xc],esi
  4203f6:	mov    QWORD PTR [rbp-0x18],rdx
  4203fa:	mov    eax,ecx
  4203fc:	mov    WORD PTR [rbp-0x10],ax
  420400:	mov    rax,QWORD PTR [rbp-0x8]
  420404:	mov    rax,QWORD PTR [rax+0x30]
  420408:	movzx  eax,WORD PTR [rax+0xe]
  42040c:	cmp    ax,0x3
  420410:	je     420431 <flatcc_builder_table_add@@Base+0x4e>
  420412:	lea    rcx,[rip+0x19ab7]        # 439ed0 <flatcc_builder_padding_base@@Base+0xc70>
  420419:	mov    edx,0x6ed
  42041e:	lea    rsi,[rip+0x1903b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420425:	lea    rdi,[rip+0x1930c]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  42042c:	call   4061b0 <__assert_fail@plt>
  420431:	cmp    DWORD PTR [rbp-0xc],0x0
  420435:	js     420440 <flatcc_builder_table_add@@Base+0x5d>
  420437:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  42043e:	jle    42045f <flatcc_builder_table_add@@Base+0x7c>
  420440:	lea    rcx,[rip+0x19a89]        # 439ed0 <flatcc_builder_padding_base@@Base+0xc70>
  420447:	mov    edx,0x6ee
  42044c:	lea    rsi,[rip+0x1900d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420453:	lea    rdi,[rip+0x193fe]        # 439858 <flatcc_builder_padding_base@@Base+0x5f8>
  42045a:	call   4061b0 <__assert_fail@plt>
  42045f:	mov    rax,QWORD PTR [rbp-0x8]
  420463:	movzx  eax,WORD PTR [rax+0xea]
  42046a:	cmp    WORD PTR [rbp-0x10],ax
  42046e:	jbe    42047f <flatcc_builder_table_add@@Base+0x9c>
  420470:	mov    rdx,QWORD PTR [rbp-0x8]
  420474:	movzx  eax,WORD PTR [rbp-0x10]
  420478:	mov    WORD PTR [rdx+0xea],ax
  42047f:	mov    rax,QWORD PTR [rbp-0x8]
  420483:	mov    rax,QWORD PTR [rax+0x8]
  420487:	mov    edx,DWORD PTR [rbp-0xc]
  42048a:	movsxd rdx,edx
  42048d:	add    rdx,rdx
  420490:	add    rax,rdx
  420493:	movzx  eax,WORD PTR [rax]
  420496:	test   ax,ax
  420499:	je     4204ba <flatcc_builder_table_add@@Base+0xd7>
  42049b:	lea    rcx,[rip+0x19a2e]        # 439ed0 <flatcc_builder_padding_base@@Base+0xc70>
  4204a2:	mov    edx,0x6f8
  4204a7:	lea    rsi,[rip+0x18fb2]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  4204ae:	lea    rdi,[rip+0x1900b]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  4204b5:	call   4061b0 <__assert_fail@plt>
  4204ba:	mov    rax,QWORD PTR [rbp-0x8]
  4204be:	mov    edx,DWORD PTR [rax+0x14]
  4204c1:	mov    eax,DWORD PTR [rbp-0xc]
  4204c4:	xor    eax,edx
  4204c6:	imul   eax,eax,0x9e3779b1
  4204cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4204d0:	xor    eax,edx
  4204d2:	imul   edx,eax,0x9e3779b1
  4204d8:	mov    rax,QWORD PTR [rbp-0x8]
  4204dc:	mov    DWORD PTR [rax+0x14],edx
  4204df:	mov    eax,DWORD PTR [rbp-0xc]
  4204e2:	movzx  ecx,ax
  4204e5:	movzx  edx,WORD PTR [rbp-0x10]
  4204e9:	mov    rax,QWORD PTR [rbp-0x18]
  4204ed:	mov    esi,eax
  4204ef:	mov    rax,QWORD PTR [rbp-0x8]
  4204f3:	mov    rdi,rax
  4204f6:	call   41b984 <flatcc_builder_default_alloc@@Base+0x384>
  4204fb:	leave  
  4204fc:	ret    

00000000004204fd <flatcc_builder_table_edit@@Base>:
  4204fd:	endbr64 
  420501:	push   rbp
  420502:	mov    rbp,rsp
  420505:	sub    rsp,0x10
  420509:	mov    QWORD PTR [rbp-0x8],rdi
  42050d:	mov    QWORD PTR [rbp-0x10],rsi
  420511:	mov    rax,QWORD PTR [rbp-0x8]
  420515:	mov    rax,QWORD PTR [rax+0x30]
  420519:	movzx  eax,WORD PTR [rax+0xe]
  42051d:	cmp    ax,0x3
  420521:	je     420542 <flatcc_builder_table_edit@@Base+0x45>
  420523:	lea    rcx,[rip+0x199c6]        # 439ef0 <flatcc_builder_padding_base@@Base+0xc90>
  42052a:	mov    edx,0x702
  42052f:	lea    rsi,[rip+0x18f2a]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420536:	lea    rdi,[rip+0x191fb]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  42053d:	call   4061b0 <__assert_fail@plt>
  420542:	mov    rax,QWORD PTR [rbp-0x8]
  420546:	mov    rdx,QWORD PTR [rax+0x18]
  42054a:	mov    rax,QWORD PTR [rbp-0x8]
  42054e:	mov    eax,DWORD PTR [rax+0x20]
  420551:	mov    eax,eax
  420553:	sub    rax,QWORD PTR [rbp-0x10]
  420557:	add    rax,rdx
  42055a:	leave  
  42055b:	ret    

000000000042055c <flatcc_builder_table_add_copy@@Base>:
  42055c:	endbr64 
  420560:	push   rbp
  420561:	mov    rbp,rsp
  420564:	sub    rsp,0x30
  420568:	mov    QWORD PTR [rbp-0x18],rdi
  42056c:	mov    DWORD PTR [rbp-0x1c],esi
  42056f:	mov    QWORD PTR [rbp-0x28],rdx
  420573:	mov    QWORD PTR [rbp-0x30],rcx
  420577:	mov    eax,r8d
  42057a:	mov    WORD PTR [rbp-0x20],ax
  42057e:	movzx  ecx,WORD PTR [rbp-0x20]
  420582:	mov    rdx,QWORD PTR [rbp-0x30]
  420586:	mov    esi,DWORD PTR [rbp-0x1c]
  420589:	mov    rax,QWORD PTR [rbp-0x18]
  42058d:	mov    rdi,rax
  420590:	call   4203e3 <flatcc_builder_table_add@@Base>
  420595:	mov    QWORD PTR [rbp-0x8],rax
  420599:	cmp    QWORD PTR [rbp-0x8],0x0
  42059e:	je     4205b7 <flatcc_builder_table_add_copy@@Base+0x5b>
  4205a0:	mov    rdx,QWORD PTR [rbp-0x30]
  4205a4:	mov    rcx,QWORD PTR [rbp-0x28]
  4205a8:	mov    rax,QWORD PTR [rbp-0x8]
  4205ac:	mov    rsi,rcx
  4205af:	mov    rdi,rax
  4205b2:	call   406220 <memcpy@plt>
  4205b7:	mov    rax,QWORD PTR [rbp-0x8]
  4205bb:	leave  
  4205bc:	ret    

00000000004205bd <flatcc_builder_table_add_offset@@Base>:
  4205bd:	endbr64 
  4205c1:	push   rbp
  4205c2:	mov    rbp,rsp
  4205c5:	sub    rsp,0x10
  4205c9:	mov    QWORD PTR [rbp-0x8],rdi
  4205cd:	mov    DWORD PTR [rbp-0xc],esi
  4205d0:	mov    rax,QWORD PTR [rbp-0x8]
  4205d4:	mov    rax,QWORD PTR [rax+0x30]
  4205d8:	movzx  eax,WORD PTR [rax+0xe]
  4205dc:	cmp    ax,0x3
  4205e0:	je     420601 <flatcc_builder_table_add_offset@@Base+0x44>
  4205e2:	lea    rcx,[rip+0x19937]        # 439f20 <flatcc_builder_padding_base@@Base+0xcc0>
  4205e9:	mov    edx,0x713
  4205ee:	lea    rsi,[rip+0x18e6b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  4205f5:	lea    rdi,[rip+0x1913c]        # 439738 <flatcc_builder_padding_base@@Base+0x4d8>
  4205fc:	call   4061b0 <__assert_fail@plt>
  420601:	cmp    DWORD PTR [rbp-0xc],0x0
  420605:	js     420610 <flatcc_builder_table_add_offset@@Base+0x53>
  420607:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  42060e:	jle    42062f <flatcc_builder_table_add_offset@@Base+0x72>
  420610:	lea    rcx,[rip+0x19909]        # 439f20 <flatcc_builder_padding_base@@Base+0xcc0>
  420617:	mov    edx,0x714
  42061c:	lea    rsi,[rip+0x18e3d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420623:	lea    rdi,[rip+0x1922e]        # 439858 <flatcc_builder_padding_base@@Base+0x5f8>
  42062a:	call   4061b0 <__assert_fail@plt>
  42062f:	mov    rax,QWORD PTR [rbp-0x8]
  420633:	mov    rax,QWORD PTR [rax+0x8]
  420637:	mov    edx,DWORD PTR [rbp-0xc]
  42063a:	movsxd rdx,edx
  42063d:	add    rdx,rdx
  420640:	add    rax,rdx
  420643:	movzx  eax,WORD PTR [rax]
  420646:	test   ax,ax
  420649:	je     42066a <flatcc_builder_table_add_offset@@Base+0xad>
  42064b:	lea    rcx,[rip+0x198ce]        # 439f20 <flatcc_builder_padding_base@@Base+0xcc0>
  420652:	mov    edx,0x71b
  420657:	lea    rsi,[rip+0x18e02]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  42065e:	lea    rdi,[rip+0x18e5b]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  420665:	call   4061b0 <__assert_fail@plt>
  42066a:	mov    rax,QWORD PTR [rbp-0x8]
  42066e:	mov    edx,DWORD PTR [rax+0x14]
  420671:	mov    eax,DWORD PTR [rbp-0xc]
  420674:	xor    eax,edx
  420676:	imul   eax,eax,0x9e3779b1
  42067c:	xor    eax,0x4
  42067f:	imul   edx,eax,0x9e3779b1
  420685:	mov    rax,QWORD PTR [rbp-0x8]
  420689:	mov    DWORD PTR [rax+0x14],edx
  42068c:	mov    eax,DWORD PTR [rbp-0xc]
  42068f:	movzx  edx,ax
  420692:	mov    rax,QWORD PTR [rbp-0x8]
  420696:	mov    esi,edx
  420698:	mov    rdi,rax
  42069b:	call   41ba4c <flatcc_builder_default_alloc@@Base+0x44c>
  4206a0:	leave  
  4206a1:	ret    

00000000004206a2 <flatcc_builder_push_buffer_alignment@@Base>:
  4206a2:	endbr64 
  4206a6:	push   rbp
  4206a7:	mov    rbp,rsp
  4206aa:	mov    QWORD PTR [rbp-0x18],rdi
  4206ae:	mov    rax,QWORD PTR [rbp-0x18]
  4206b2:	movzx  eax,WORD PTR [rax+0xe8]
  4206b9:	mov    WORD PTR [rbp-0x2],ax
  4206bd:	mov    rax,QWORD PTR [rbp-0x18]
  4206c1:	mov    WORD PTR [rax+0xe8],0x4
  4206ca:	movzx  eax,WORD PTR [rbp-0x2]
  4206ce:	pop    rbp
  4206cf:	ret    

00000000004206d0 <flatcc_builder_pop_buffer_alignment@@Base>:
  4206d0:	endbr64 
  4206d4:	push   rbp
  4206d5:	mov    rbp,rsp
  4206d8:	sub    rsp,0x10
  4206dc:	mov    QWORD PTR [rbp-0x8],rdi
  4206e0:	mov    eax,esi
  4206e2:	mov    WORD PTR [rbp-0xc],ax
  4206e6:	movzx  edx,WORD PTR [rbp-0xc]
  4206ea:	mov    rax,QWORD PTR [rbp-0x8]
  4206ee:	mov    esi,edx
  4206f0:	mov    rdi,rax
  4206f3:	call   41c26c <flatcc_builder_clear@@Base+0x99>
  4206f8:	nop
  4206f9:	leave  
  4206fa:	ret    

00000000004206fb <flatcc_builder_get_buffer_alignment@@Base>:
  4206fb:	endbr64 
  4206ff:	push   rbp
  420700:	mov    rbp,rsp
  420703:	mov    QWORD PTR [rbp-0x8],rdi
  420707:	mov    rax,QWORD PTR [rbp-0x8]
  42070b:	movzx  eax,WORD PTR [rax+0xe8]
  420712:	pop    rbp
  420713:	ret    

0000000000420714 <flatcc_builder_set_vtable_clustering@@Base>:
  420714:	endbr64 
  420718:	push   rbp
  420719:	mov    rbp,rsp
  42071c:	mov    QWORD PTR [rbp-0x8],rdi
  420720:	mov    DWORD PTR [rbp-0xc],esi
  420723:	cmp    DWORD PTR [rbp-0xc],0x0
  420727:	sete   al
  42072a:	movzx  edx,al
  42072d:	mov    rax,QWORD PTR [rbp-0x8]
  420731:	mov    DWORD PTR [rax+0x124],edx
  420737:	nop
  420738:	pop    rbp
  420739:	ret    

000000000042073a <flatcc_builder_set_block_align@@Base>:
  42073a:	endbr64 
  42073e:	push   rbp
  42073f:	mov    rbp,rsp
  420742:	mov    QWORD PTR [rbp-0x8],rdi
  420746:	mov    eax,esi
  420748:	mov    WORD PTR [rbp-0xc],ax
  42074c:	mov    rdx,QWORD PTR [rbp-0x8]
  420750:	movzx  eax,WORD PTR [rbp-0xc]
  420754:	mov    WORD PTR [rdx+0xec],ax
  42075b:	nop
  42075c:	pop    rbp
  42075d:	ret    

000000000042075e <flatcc_builder_get_level@@Base>:
  42075e:	endbr64 
  420762:	push   rbp
  420763:	mov    rbp,rsp
  420766:	mov    QWORD PTR [rbp-0x8],rdi
  42076a:	mov    rax,QWORD PTR [rbp-0x8]
  42076e:	mov    eax,DWORD PTR [rax+0x104]
  420774:	pop    rbp
  420775:	ret    

0000000000420776 <flatcc_builder_set_max_level@@Base>:
  420776:	endbr64 
  42077a:	push   rbp
  42077b:	mov    rbp,rsp
  42077e:	mov    QWORD PTR [rbp-0x8],rdi
  420782:	mov    DWORD PTR [rbp-0xc],esi
  420785:	mov    rax,QWORD PTR [rbp-0x8]
  420789:	mov    edx,DWORD PTR [rbp-0xc]
  42078c:	mov    DWORD PTR [rax+0x120],edx
  420792:	mov    rax,QWORD PTR [rbp-0x8]
  420796:	mov    edx,DWORD PTR [rax+0x108]
  42079c:	mov    rax,QWORD PTR [rbp-0x8]
  4207a0:	mov    eax,DWORD PTR [rax+0x120]
  4207a6:	cmp    edx,eax
  4207a8:	jge    4207be <flatcc_builder_set_max_level@@Base+0x48>
  4207aa:	mov    rax,QWORD PTR [rbp-0x8]
  4207ae:	mov    edx,DWORD PTR [rax+0x120]
  4207b4:	mov    rax,QWORD PTR [rbp-0x8]
  4207b8:	mov    DWORD PTR [rax+0x108],edx
  4207be:	nop
  4207bf:	pop    rbp
  4207c0:	ret    

00000000004207c1 <flatcc_builder_get_buffer_size@@Base>:
  4207c1:	endbr64 
  4207c5:	push   rbp
  4207c6:	mov    rbp,rsp
  4207c9:	mov    QWORD PTR [rbp-0x8],rdi
  4207cd:	mov    rax,QWORD PTR [rbp-0x8]
  4207d1:	mov    edx,DWORD PTR [rax+0xf4]
  4207d7:	mov    rax,QWORD PTR [rbp-0x8]
  4207db:	mov    eax,DWORD PTR [rax+0xf0]
  4207e1:	sub    edx,eax
  4207e3:	mov    eax,edx
  4207e5:	cdqe   
  4207e7:	pop    rbp
  4207e8:	ret    

00000000004207e9 <flatcc_builder_get_buffer_start@@Base>:
  4207e9:	endbr64 
  4207ed:	push   rbp
  4207ee:	mov    rbp,rsp
  4207f1:	mov    QWORD PTR [rbp-0x8],rdi
  4207f5:	mov    rax,QWORD PTR [rbp-0x8]
  4207f9:	mov    eax,DWORD PTR [rax+0xf0]
  4207ff:	pop    rbp
  420800:	ret    

0000000000420801 <flatcc_builder_get_buffer_end@@Base>:
  420801:	endbr64 
  420805:	push   rbp
  420806:	mov    rbp,rsp
  420809:	mov    QWORD PTR [rbp-0x8],rdi
  42080d:	mov    rax,QWORD PTR [rbp-0x8]
  420811:	mov    eax,DWORD PTR [rax+0xf4]
  420817:	pop    rbp
  420818:	ret    

0000000000420819 <flatcc_builder_set_vtable_cache_limit@@Base>:
  420819:	endbr64 
  42081d:	push   rbp
  42081e:	mov    rbp,rsp
  420821:	mov    QWORD PTR [rbp-0x8],rdi
  420825:	mov    QWORD PTR [rbp-0x10],rsi
  420829:	mov    rax,QWORD PTR [rbp-0x8]
  42082d:	mov    rdx,QWORD PTR [rbp-0x10]
  420831:	mov    QWORD PTR [rax+0x118],rdx
  420838:	nop
  420839:	pop    rbp
  42083a:	ret    

000000000042083b <flatcc_builder_set_identifier@@Base>:
  42083b:	endbr64 
  42083f:	push   rbp
  420840:	mov    rbp,rsp
  420843:	mov    QWORD PTR [rbp-0x8],rdi
  420847:	mov    QWORD PTR [rbp-0x10],rsi
  42084b:	cmp    QWORD PTR [rbp-0x10],0x0
  420850:	je     420858 <flatcc_builder_set_identifier@@Base+0x1d>
  420852:	mov    rax,QWORD PTR [rbp-0x10]
  420856:	jmp    42085f <flatcc_builder_set_identifier@@Base+0x24>
  420858:	mov    rax,0x439260
  42085f:	mov    rdx,QWORD PTR [rbp-0x8]
  420863:	add    rdx,0x110
  42086a:	mov    eax,DWORD PTR [rax]
  42086c:	mov    DWORD PTR [rdx],eax
  42086e:	nop
  42086f:	pop    rbp
  420870:	ret    

0000000000420871 <flatcc_builder_get_type@@Base>:
  420871:	endbr64 
  420875:	push   rbp
  420876:	mov    rbp,rsp
  420879:	mov    QWORD PTR [rbp-0x8],rdi
  42087d:	mov    rax,QWORD PTR [rbp-0x8]
  420881:	mov    rax,QWORD PTR [rax+0x30]
  420885:	test   rax,rax
  420888:	je     42089b <flatcc_builder_get_type@@Base+0x2a>
  42088a:	mov    rax,QWORD PTR [rbp-0x8]
  42088e:	mov    rax,QWORD PTR [rax+0x30]
  420892:	movzx  eax,WORD PTR [rax+0xe]
  420896:	movzx  eax,ax
  420899:	jmp    4208a0 <flatcc_builder_get_type@@Base+0x2f>
  42089b:	mov    eax,0x0
  4208a0:	pop    rbp
  4208a1:	ret    

00000000004208a2 <flatcc_builder_get_type_at@@Base>:
  4208a2:	endbr64 
  4208a6:	push   rbp
  4208a7:	mov    rbp,rsp
  4208aa:	mov    QWORD PTR [rbp-0x8],rdi
  4208ae:	mov    DWORD PTR [rbp-0xc],esi
  4208b1:	cmp    DWORD PTR [rbp-0xc],0x0
  4208b5:	jle    4208c6 <flatcc_builder_get_type_at@@Base+0x24>
  4208b7:	mov    rax,QWORD PTR [rbp-0x8]
  4208bb:	mov    eax,DWORD PTR [rax+0x104]
  4208c1:	cmp    DWORD PTR [rbp-0xc],eax
  4208c4:	jle    4208cd <flatcc_builder_get_type_at@@Base+0x2b>
  4208c6:	mov    eax,0x0
  4208cb:	jmp    420901 <flatcc_builder_get_type_at@@Base+0x5f>
  4208cd:	mov    rax,QWORD PTR [rbp-0x8]
  4208d1:	mov    rcx,QWORD PTR [rax+0x30]
  4208d5:	mov    rax,QWORD PTR [rbp-0x8]
  4208d9:	mov    eax,DWORD PTR [rax+0x104]
  4208df:	mov    edx,DWORD PTR [rbp-0xc]
  4208e2:	sub    edx,eax
  4208e4:	mov    eax,edx
  4208e6:	movsxd rdx,eax
  4208e9:	mov    rax,rdx
  4208ec:	shl    rax,0x3
  4208f0:	add    rax,rdx
  4208f3:	shl    rax,0x2
  4208f7:	add    rax,rcx
  4208fa:	movzx  eax,WORD PTR [rax+0xe]
  4208fe:	movzx  eax,ax
  420901:	pop    rbp
  420902:	ret    

0000000000420903 <flatcc_builder_get_direct_buffer@@Base>:
  420903:	endbr64 
  420907:	push   rbp
  420908:	mov    rbp,rsp
  42090b:	sub    rsp,0x10
  42090f:	mov    QWORD PTR [rbp-0x8],rdi
  420913:	mov    QWORD PTR [rbp-0x10],rsi
  420917:	mov    rax,QWORD PTR [rbp-0x8]
  42091b:	mov    eax,DWORD PTR [rax+0x128]
  420921:	test   eax,eax
  420923:	je     420941 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  420925:	mov    rax,QWORD PTR [rbp-0x8]
  420929:	lea    rdx,[rax+0x130]
  420930:	mov    rax,QWORD PTR [rbp-0x10]
  420934:	mov    rsi,rax
  420937:	mov    rdi,rdx
  42093a:	call   41b567 <main@@Base+0xa24>
  42093f:	jmp    420958 <flatcc_builder_get_direct_buffer@@Base+0x55>
  420941:	cmp    QWORD PTR [rbp-0x10],0x0
  420946:	je     420953 <flatcc_builder_get_direct_buffer@@Base+0x50>
  420948:	mov    rax,QWORD PTR [rbp-0x10]
  42094c:	mov    QWORD PTR [rax],0x0
  420953:	mov    eax,0x0
  420958:	leave  
  420959:	ret    

000000000042095a <flatcc_builder_copy_buffer@@Base>:
  42095a:	endbr64 
  42095e:	push   rbp
  42095f:	mov    rbp,rsp
  420962:	sub    rsp,0x20
  420966:	mov    QWORD PTR [rbp-0x8],rdi
  42096a:	mov    QWORD PTR [rbp-0x10],rsi
  42096e:	mov    QWORD PTR [rbp-0x18],rdx
  420972:	mov    rax,QWORD PTR [rbp-0x8]
  420976:	mov    eax,DWORD PTR [rax+0x128]
  42097c:	test   eax,eax
  42097e:	jne    420987 <flatcc_builder_copy_buffer@@Base+0x2d>
  420980:	mov    eax,0x0
  420985:	jmp    4209d3 <flatcc_builder_copy_buffer@@Base+0x79>
  420987:	mov    rax,QWORD PTR [rbp-0x8]
  42098b:	lea    rcx,[rax+0x130]
  420992:	mov    rdx,QWORD PTR [rbp-0x18]
  420996:	mov    rax,QWORD PTR [rbp-0x10]
  42099a:	mov    rsi,rax
  42099d:	mov    rdi,rcx
  4209a0:	call   42160e <flatcc_emitter_copy_buffer@@Base>
  4209a5:	mov    QWORD PTR [rbp-0x10],rax
  4209a9:	cmp    QWORD PTR [rbp-0x10],0x0
  4209ae:	jne    4209cf <flatcc_builder_copy_buffer@@Base+0x75>
  4209b0:	lea    rcx,[rip+0x19589]        # 439f40 <flatcc_builder_padding_base@@Base+0xce0>
  4209b7:	mov    edx,0x786
  4209bc:	lea    rsi,[rip+0x18a9d]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  4209c3:	lea    rdi,[rip+0x18ed2]        # 43989c <flatcc_builder_padding_base@@Base+0x63c>
  4209ca:	call   4061b0 <__assert_fail@plt>
  4209cf:	mov    rax,QWORD PTR [rbp-0x10]
  4209d3:	leave  
  4209d4:	ret    

00000000004209d5 <flatcc_builder_finalize_buffer@@Base>:
  4209d5:	endbr64 
  4209d9:	push   rbp
  4209da:	mov    rbp,rsp
  4209dd:	sub    rsp,0x20
  4209e1:	mov    QWORD PTR [rbp-0x18],rdi
  4209e5:	mov    QWORD PTR [rbp-0x20],rsi
  4209e9:	mov    rax,QWORD PTR [rbp-0x18]
  4209ed:	mov    rdi,rax
  4209f0:	call   4207c1 <flatcc_builder_get_buffer_size@@Base>
  4209f5:	mov    QWORD PTR [rbp-0x10],rax
  4209f9:	cmp    QWORD PTR [rbp-0x20],0x0
  4209fe:	je     420a0b <flatcc_builder_finalize_buffer@@Base+0x36>
  420a00:	mov    rax,QWORD PTR [rbp-0x20]
  420a04:	mov    rdx,QWORD PTR [rbp-0x10]
  420a08:	mov    QWORD PTR [rax],rdx
  420a0b:	mov    rax,QWORD PTR [rbp-0x10]
  420a0f:	mov    rdi,rax
  420a12:	call   406230 <malloc@plt>
  420a17:	mov    QWORD PTR [rbp-0x8],rax
  420a1b:	cmp    QWORD PTR [rbp-0x8],0x0
  420a20:	jne    420a41 <flatcc_builder_finalize_buffer@@Base+0x6c>
  420a22:	lea    rcx,[rip+0x19537]        # 439f60 <flatcc_builder_padding_base@@Base+0xd00>
  420a29:	mov    edx,0x798
  420a2e:	lea    rsi,[rip+0x18a2b]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420a35:	lea    rdi,[rip+0x18a84]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  420a3c:	call   4061b0 <__assert_fail@plt>
  420a41:	mov    rdx,QWORD PTR [rbp-0x10]
  420a45:	mov    rcx,QWORD PTR [rbp-0x8]
  420a49:	mov    rax,QWORD PTR [rbp-0x18]
  420a4d:	mov    rsi,rcx
  420a50:	mov    rdi,rax
  420a53:	call   42095a <flatcc_builder_copy_buffer@@Base>
  420a58:	test   rax,rax
  420a5b:	jne    420a7c <flatcc_builder_finalize_buffer@@Base+0xa7>
  420a5d:	lea    rcx,[rip+0x194fc]        # 439f60 <flatcc_builder_padding_base@@Base+0xd00>
  420a64:	mov    edx,0x79c
  420a69:	lea    rsi,[rip+0x189f0]        # 439460 <flatcc_builder_padding_base@@Base+0x200>
  420a70:	lea    rdi,[rip+0x18a49]        # 4394c0 <flatcc_builder_padding_base@@Base+0x260>
  420a77:	call   4061b0 <__assert_fail@plt>
  420a7c:	nop
  420a7d:	endbr64 
  420a81:	cmp    QWORD PTR [rbp-0x8],0x0
  420a86:	jne    420a9a <flatcc_builder_finalize_buffer@@Base+0xc5>
  420a88:	cmp    QWORD PTR [rbp-0x20],0x0
  420a8d:	je     420a9a <flatcc_builder_finalize_buffer@@Base+0xc5>
  420a8f:	mov    rax,QWORD PTR [rbp-0x20]
  420a93:	mov    QWORD PTR [rax],0x0
  420a9a:	mov    rax,QWORD PTR [rbp-0x8]
  420a9e:	leave  
  420a9f:	ret    

0000000000420aa0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  420aa0:	endbr64 
  420aa4:	push   rbp
  420aa5:	mov    rbp,rsp
  420aa8:	sub    rsp,0x30
  420aac:	mov    QWORD PTR [rbp-0x28],rdi
  420ab0:	mov    QWORD PTR [rbp-0x30],rsi
  420ab4:	mov    rax,QWORD PTR [rbp-0x28]
  420ab8:	mov    rdi,rax
  420abb:	call   4207c1 <flatcc_builder_get_buffer_size@@Base>
  420ac0:	mov    QWORD PTR [rbp-0x10],rax
  420ac4:	cmp    QWORD PTR [rbp-0x30],0x0
  420ac9:	je     420ad6 <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  420acb:	mov    rax,QWORD PTR [rbp-0x30]
  420acf:	mov    rdx,QWORD PTR [rbp-0x10]
  420ad3:	mov    QWORD PTR [rax],rdx
  420ad6:	mov    rax,QWORD PTR [rbp-0x28]
  420ada:	mov    rdi,rax
  420add:	call   4206fb <flatcc_builder_get_buffer_alignment@@Base>
  420ae2:	movzx  eax,ax
  420ae5:	mov    QWORD PTR [rbp-0x8],rax
  420ae9:	mov    rdx,QWORD PTR [rbp-0x10]
  420aed:	mov    rax,QWORD PTR [rbp-0x8]
  420af1:	add    rax,rdx
  420af4:	lea    rdx,[rax-0x1]
  420af8:	mov    rax,QWORD PTR [rbp-0x8]
  420afc:	neg    rax
  420aff:	and    rax,rdx
  420b02:	mov    QWORD PTR [rbp-0x10],rax
  420b06:	mov    rdx,QWORD PTR [rbp-0x10]
  420b0a:	mov    rax,QWORD PTR [rbp-0x8]
  420b0e:	mov    rsi,rdx
  420b11:	mov    rdi,rax
  420b14:	call   41b4b3 <main@@Base+0x970>
  420b19:	mov    QWORD PTR [rbp-0x18],rax
  420b1d:	cmp    QWORD PTR [rbp-0x18],0x0
  420b22:	je     420b56 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  420b24:	mov    rdx,QWORD PTR [rbp-0x10]
  420b28:	mov    rcx,QWORD PTR [rbp-0x18]
  420b2c:	mov    rax,QWORD PTR [rbp-0x28]
  420b30:	mov    rsi,rcx
  420b33:	mov    rdi,rax
  420b36:	call   42095a <flatcc_builder_copy_buffer@@Base>
  420b3b:	test   rax,rax
  420b3e:	jne    420b59 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  420b40:	mov    rax,QWORD PTR [rbp-0x18]
  420b44:	mov    rdi,rax
  420b47:	call   406160 <free@plt>
  420b4c:	mov    QWORD PTR [rbp-0x18],0x0
  420b54:	jmp    420b5a <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  420b56:	nop
  420b57:	jmp    420b5a <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  420b59:	nop
  420b5a:	cmp    QWORD PTR [rbp-0x18],0x0
  420b5f:	jne    420b73 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  420b61:	cmp    QWORD PTR [rbp-0x30],0x0
  420b66:	je     420b73 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  420b68:	mov    rax,QWORD PTR [rbp-0x30]
  420b6c:	mov    QWORD PTR [rax],0x0
  420b73:	mov    rax,QWORD PTR [rbp-0x18]
  420b77:	leave  
  420b78:	ret    

0000000000420b79 <flatcc_builder_aligned_alloc@@Base>:
  420b79:	endbr64 
  420b7d:	push   rbp
  420b7e:	mov    rbp,rsp
  420b81:	sub    rsp,0x10
  420b85:	mov    QWORD PTR [rbp-0x8],rdi
  420b89:	mov    QWORD PTR [rbp-0x10],rsi
  420b8d:	mov    rdx,QWORD PTR [rbp-0x10]
  420b91:	mov    rax,QWORD PTR [rbp-0x8]
  420b95:	mov    rsi,rdx
  420b98:	mov    rdi,rax
  420b9b:	call   41b4b3 <main@@Base+0x970>
  420ba0:	leave  
  420ba1:	ret    

0000000000420ba2 <flatcc_builder_aligned_free@@Base>:
  420ba2:	endbr64 
  420ba6:	push   rbp
  420ba7:	mov    rbp,rsp
  420baa:	sub    rsp,0x10
  420bae:	mov    QWORD PTR [rbp-0x8],rdi
  420bb2:	mov    rax,QWORD PTR [rbp-0x8]
  420bb6:	mov    rdi,rax
  420bb9:	call   406160 <free@plt>
  420bbe:	nop
  420bbf:	leave  
  420bc0:	ret    

0000000000420bc1 <flatcc_builder_get_emit_context@@Base>:
  420bc1:	endbr64 
  420bc5:	push   rbp
  420bc6:	mov    rbp,rsp
  420bc9:	mov    QWORD PTR [rbp-0x8],rdi
  420bcd:	mov    rax,QWORD PTR [rbp-0x8]
  420bd1:	mov    rax,QWORD PTR [rax+0x38]
  420bd5:	pop    rbp
  420bd6:	ret    
  420bd7:	endbr64 
  420bdb:	push   rbp
  420bdc:	mov    rbp,rsp
  420bdf:	sub    rsp,0x20
  420be3:	mov    QWORD PTR [rbp-0x18],rdi
  420be7:	mov    QWORD PTR [rbp-0x8],0x0
  420bef:	mov    rax,QWORD PTR [rbp-0x18]
  420bf3:	mov    rax,QWORD PTR [rax]
  420bf6:	test   rax,rax
  420bf9:	je     420c57 <flatcc_builder_get_emit_context@@Base+0x96>
  420bfb:	mov    rax,QWORD PTR [rbp-0x18]
  420bff:	mov    rax,QWORD PTR [rax]
  420c02:	mov    rdx,QWORD PTR [rax+0xb88]
  420c09:	mov    rax,QWORD PTR [rbp-0x18]
  420c0d:	mov    rax,QWORD PTR [rax+0x8]
  420c11:	cmp    rdx,rax
  420c14:	je     420c57 <flatcc_builder_get_emit_context@@Base+0x96>
  420c16:	mov    rax,QWORD PTR [rbp-0x18]
  420c1a:	mov    rax,QWORD PTR [rax]
  420c1d:	mov    edx,DWORD PTR [rax+0xb90]
  420c23:	mov    rax,QWORD PTR [rbp-0x18]
  420c27:	mov    rax,QWORD PTR [rax]
  420c2a:	mov    rax,QWORD PTR [rax+0xb88]
  420c31:	sub    edx,0xb80
  420c37:	mov    DWORD PTR [rax+0xb90],edx
  420c3d:	mov    rax,QWORD PTR [rbp-0x18]
  420c41:	mov    rax,QWORD PTR [rax]
  420c44:	mov    rdx,QWORD PTR [rax+0xb88]
  420c4b:	mov    rax,QWORD PTR [rbp-0x18]
  420c4f:	mov    QWORD PTR [rax],rdx
  420c52:	jmp    420d8f <flatcc_builder_get_emit_context@@Base+0x1ce>
  420c57:	mov    edi,0xb98
  420c5c:	call   406230 <malloc@plt>
  420c61:	mov    QWORD PTR [rbp-0x8],rax
  420c65:	cmp    QWORD PTR [rbp-0x8],0x0
  420c6a:	jne    420c76 <flatcc_builder_get_emit_context@@Base+0xb5>
  420c6c:	mov    eax,0xffffffff
  420c71:	jmp    420ddd <flatcc_builder_get_emit_context@@Base+0x21c>
  420c76:	mov    rax,QWORD PTR [rbp-0x18]
  420c7a:	mov    rax,QWORD PTR [rax+0x38]
  420c7e:	lea    rdx,[rax+0xb80]
  420c85:	mov    rax,QWORD PTR [rbp-0x18]
  420c89:	mov    QWORD PTR [rax+0x38],rdx
  420c8d:	mov    rax,QWORD PTR [rbp-0x18]
  420c91:	mov    rax,QWORD PTR [rax]
  420c94:	test   rax,rax
  420c97:	je     420cf3 <flatcc_builder_get_emit_context@@Base+0x132>
  420c99:	mov    rax,QWORD PTR [rbp-0x18]
  420c9d:	mov    rdx,QWORD PTR [rax+0x8]
  420ca1:	mov    rax,QWORD PTR [rbp-0x8]
  420ca5:	mov    QWORD PTR [rax+0xb88],rdx
  420cac:	mov    rax,QWORD PTR [rbp-0x18]
  420cb0:	mov    rdx,QWORD PTR [rax]
  420cb3:	mov    rax,QWORD PTR [rbp-0x8]
  420cb7:	mov    QWORD PTR [rax+0xb80],rdx
  420cbe:	mov    rax,QWORD PTR [rbp-0x18]
  420cc2:	mov    rax,QWORD PTR [rax]
  420cc5:	mov    rdx,QWORD PTR [rbp-0x8]
  420cc9:	mov    QWORD PTR [rax+0xb88],rdx
  420cd0:	mov    rax,QWORD PTR [rbp-0x18]
  420cd4:	mov    rax,QWORD PTR [rax+0x8]
  420cd8:	mov    rdx,QWORD PTR [rbp-0x8]
  420cdc:	mov    QWORD PTR [rax+0xb80],rdx
  420ce3:	mov    rax,QWORD PTR [rbp-0x18]
  420ce7:	mov    rdx,QWORD PTR [rbp-0x8]
  420ceb:	mov    QWORD PTR [rax],rdx
  420cee:	jmp    420d8f <flatcc_builder_get_emit_context@@Base+0x1ce>
  420cf3:	mov    rax,QWORD PTR [rbp-0x18]
  420cf7:	mov    rdx,QWORD PTR [rbp-0x8]
  420cfb:	mov    QWORD PTR [rax],rdx
  420cfe:	mov    rax,QWORD PTR [rbp-0x18]
  420d02:	mov    rdx,QWORD PTR [rbp-0x8]
  420d06:	mov    QWORD PTR [rax+0x8],rdx
  420d0a:	mov    rax,QWORD PTR [rbp-0x8]
  420d0e:	mov    rdx,QWORD PTR [rbp-0x8]
  420d12:	mov    QWORD PTR [rax+0xb80],rdx
  420d19:	mov    rax,QWORD PTR [rbp-0x8]
  420d1d:	mov    rdx,QWORD PTR [rbp-0x8]
  420d21:	mov    QWORD PTR [rax+0xb88],rdx
  420d28:	mov    rax,QWORD PTR [rbp-0x18]
  420d2c:	mov    rax,QWORD PTR [rax]
  420d2f:	lea    rdx,[rax+0x5c0]
  420d36:	mov    rax,QWORD PTR [rbp-0x18]
  420d3a:	mov    QWORD PTR [rax+0x10],rdx
  420d3e:	mov    rax,QWORD PTR [rbp-0x18]
  420d42:	mov    rdx,QWORD PTR [rax+0x10]
  420d46:	mov    rax,QWORD PTR [rbp-0x18]
  420d4a:	mov    QWORD PTR [rax+0x20],rdx
  420d4e:	mov    rax,QWORD PTR [rbp-0x18]
  420d52:	mov    QWORD PTR [rax+0x18],0x5c0
  420d5a:	mov    rax,QWORD PTR [rbp-0x18]
  420d5e:	mov    rax,QWORD PTR [rax+0x18]
  420d62:	mov    edx,0xb80
  420d67:	sub    rdx,rax
  420d6a:	mov    rax,QWORD PTR [rbp-0x18]
  420d6e:	mov    QWORD PTR [rax+0x28],rdx
  420d72:	mov    rax,QWORD PTR [rbp-0x18]
  420d76:	mov    rax,QWORD PTR [rax+0x18]
  420d7a:	neg    eax
  420d7c:	mov    edx,eax
  420d7e:	mov    rax,QWORD PTR [rbp-0x8]
  420d82:	mov    DWORD PTR [rax+0xb90],edx
  420d88:	mov    eax,0x0
  420d8d:	jmp    420ddd <flatcc_builder_get_emit_context@@Base+0x21c>
  420d8f:	mov    rax,QWORD PTR [rbp-0x18]
  420d93:	mov    rax,QWORD PTR [rax]
  420d96:	lea    rdx,[rax+0xb80]
  420d9d:	mov    rax,QWORD PTR [rbp-0x18]
  420da1:	mov    QWORD PTR [rax+0x10],rdx
  420da5:	mov    rax,QWORD PTR [rbp-0x18]
  420da9:	mov    QWORD PTR [rax+0x18],0xb80
  420db1:	mov    rax,QWORD PTR [rbp-0x18]
  420db5:	mov    rax,QWORD PTR [rax]
  420db8:	mov    rax,QWORD PTR [rax+0xb80]
  420dbf:	mov    edx,DWORD PTR [rax+0xb90]
  420dc5:	mov    rax,QWORD PTR [rbp-0x18]
  420dc9:	mov    rax,QWORD PTR [rax]
  420dcc:	sub    edx,0xb80
  420dd2:	mov    DWORD PTR [rax+0xb90],edx
  420dd8:	mov    eax,0x0
  420ddd:	leave  
  420dde:	ret    
  420ddf:	endbr64 
  420de3:	push   rbp
  420de4:	mov    rbp,rsp
  420de7:	sub    rsp,0x20
  420deb:	mov    QWORD PTR [rbp-0x18],rdi
  420def:	mov    QWORD PTR [rbp-0x8],0x0
  420df7:	mov    rax,QWORD PTR [rbp-0x18]
  420dfb:	mov    rax,QWORD PTR [rax+0x8]
  420dff:	test   rax,rax
  420e02:	je     420e3b <flatcc_builder_get_emit_context@@Base+0x27a>
  420e04:	mov    rax,QWORD PTR [rbp-0x18]
  420e08:	mov    rax,QWORD PTR [rax+0x8]
  420e0c:	mov    rdx,QWORD PTR [rax+0xb80]
  420e13:	mov    rax,QWORD PTR [rbp-0x18]
  420e17:	mov    rax,QWORD PTR [rax]
  420e1a:	cmp    rdx,rax
  420e1d:	je     420e3b <flatcc_builder_get_emit_context@@Base+0x27a>
  420e1f:	mov    rax,QWORD PTR [rbp-0x18]
  420e23:	mov    rax,QWORD PTR [rax+0x8]
  420e27:	mov    rdx,QWORD PTR [rax+0xb80]
  420e2e:	mov    rax,QWORD PTR [rbp-0x18]
  420e32:	mov    QWORD PTR [rax+0x8],rdx
  420e36:	jmp    420f75 <flatcc_builder_get_emit_context@@Base+0x3b4>
  420e3b:	mov    edi,0xb98
  420e40:	call   406230 <malloc@plt>
  420e45:	mov    QWORD PTR [rbp-0x8],rax
  420e49:	cmp    QWORD PTR [rbp-0x8],0x0
  420e4e:	jne    420e5a <flatcc_builder_get_emit_context@@Base+0x299>
  420e50:	mov    eax,0xffffffff
  420e55:	jmp    420fc2 <flatcc_builder_get_emit_context@@Base+0x401>
  420e5a:	mov    rax,QWORD PTR [rbp-0x18]
  420e5e:	mov    rax,QWORD PTR [rax+0x38]
  420e62:	lea    rdx,[rax+0xb80]
  420e69:	mov    rax,QWORD PTR [rbp-0x18]
  420e6d:	mov    QWORD PTR [rax+0x38],rdx
  420e71:	mov    rax,QWORD PTR [rbp-0x18]
  420e75:	mov    rax,QWORD PTR [rax+0x8]
  420e79:	test   rax,rax
  420e7c:	je     420ed9 <flatcc_builder_get_emit_context@@Base+0x318>
  420e7e:	mov    rax,QWORD PTR [rbp-0x18]
  420e82:	mov    rdx,QWORD PTR [rax+0x8]
  420e86:	mov    rax,QWORD PTR [rbp-0x8]
  420e8a:	mov    QWORD PTR [rax+0xb88],rdx
  420e91:	mov    rax,QWORD PTR [rbp-0x18]
  420e95:	mov    rdx,QWORD PTR [rax]
  420e98:	mov    rax,QWORD PTR [rbp-0x8]
  420e9c:	mov    QWORD PTR [rax+0xb80],rdx
  420ea3:	mov    rax,QWORD PTR [rbp-0x18]
  420ea7:	mov    rax,QWORD PTR [rax]
  420eaa:	mov    rdx,QWORD PTR [rbp-0x8]
  420eae:	mov    QWORD PTR [rax+0xb88],rdx
  420eb5:	mov    rax,QWORD PTR [rbp-0x18]
  420eb9:	mov    rax,QWORD PTR [rax+0x8]
  420ebd:	mov    rdx,QWORD PTR [rbp-0x8]
  420ec1:	mov    QWORD PTR [rax+0xb80],rdx
  420ec8:	mov    rax,QWORD PTR [rbp-0x18]
  420ecc:	mov    rdx,QWORD PTR [rbp-0x8]
  420ed0:	mov    QWORD PTR [rax+0x8],rdx
  420ed4:	jmp    420f75 <flatcc_builder_get_emit_context@@Base+0x3b4>
  420ed9:	mov    rax,QWORD PTR [rbp-0x18]
  420edd:	mov    rdx,QWORD PTR [rbp-0x8]
  420ee1:	mov    QWORD PTR [rax],rdx
  420ee4:	mov    rax,QWORD PTR [rbp-0x18]
  420ee8:	mov    rdx,QWORD PTR [rbp-0x8]
  420eec:	mov    QWORD PTR [rax+0x8],rdx
  420ef0:	mov    rax,QWORD PTR [rbp-0x8]
  420ef4:	mov    rdx,QWORD PTR [rbp-0x8]
  420ef8:	mov    QWORD PTR [rax+0xb80],rdx
  420eff:	mov    rax,QWORD PTR [rbp-0x8]
  420f03:	mov    rdx,QWORD PTR [rbp-0x8]
  420f07:	mov    QWORD PTR [rax+0xb88],rdx
  420f0e:	mov    rax,QWORD PTR [rbp-0x18]
  420f12:	mov    rax,QWORD PTR [rax]
  420f15:	lea    rdx,[rax+0x5c0]
  420f1c:	mov    rax,QWORD PTR [rbp-0x18]
  420f20:	mov    QWORD PTR [rax+0x10],rdx
  420f24:	mov    rax,QWORD PTR [rbp-0x18]
  420f28:	mov    rdx,QWORD PTR [rax+0x10]
  420f2c:	mov    rax,QWORD PTR [rbp-0x18]
  420f30:	mov    QWORD PTR [rax+0x20],rdx
  420f34:	mov    rax,QWORD PTR [rbp-0x18]
  420f38:	mov    QWORD PTR [rax+0x18],0x5c0
  420f40:	mov    rax,QWORD PTR [rbp-0x18]
  420f44:	mov    rax,QWORD PTR [rax+0x18]
  420f48:	mov    edx,0xb80
  420f4d:	sub    rdx,rax
  420f50:	mov    rax,QWORD PTR [rbp-0x18]
  420f54:	mov    QWORD PTR [rax+0x28],rdx
  420f58:	mov    rax,QWORD PTR [rbp-0x18]
  420f5c:	mov    rax,QWORD PTR [rax+0x18]
  420f60:	neg    eax
  420f62:	mov    edx,eax
  420f64:	mov    rax,QWORD PTR [rbp-0x8]
  420f68:	mov    DWORD PTR [rax+0xb90],edx
  420f6e:	mov    eax,0x0
  420f73:	jmp    420fc2 <flatcc_builder_get_emit_context@@Base+0x401>
  420f75:	mov    rax,QWORD PTR [rbp-0x18]
  420f79:	mov    rax,QWORD PTR [rax+0x8]
  420f7d:	mov    rdx,rax
  420f80:	mov    rax,QWORD PTR [rbp-0x18]
  420f84:	mov    QWORD PTR [rax+0x20],rdx
  420f88:	mov    rax,QWORD PTR [rbp-0x18]
  420f8c:	mov    QWORD PTR [rax+0x28],0xb80
  420f94:	mov    rax,QWORD PTR [rbp-0x18]
  420f98:	mov    rax,QWORD PTR [rax+0x8]
  420f9c:	mov    rax,QWORD PTR [rax+0xb88]
  420fa3:	mov    edx,DWORD PTR [rax+0xb90]
  420fa9:	mov    rax,QWORD PTR [rbp-0x18]
  420fad:	mov    rax,QWORD PTR [rax+0x8]
  420fb1:	add    edx,0xb80
  420fb7:	mov    DWORD PTR [rax+0xb90],edx
  420fbd:	mov    eax,0x0
  420fc2:	leave  
  420fc3:	ret    
  420fc4:	endbr64 
  420fc8:	push   rbp
  420fc9:	mov    rbp,rsp
  420fcc:	sub    rsp,0x30
  420fd0:	mov    QWORD PTR [rbp-0x18],rdi
  420fd4:	mov    QWORD PTR [rbp-0x20],rsi
  420fd8:	mov    QWORD PTR [rbp-0x28],rdx
  420fdc:	mov    rax,QWORD PTR [rbp-0x28]
  420fe0:	add    QWORD PTR [rbp-0x20],rax
  420fe4:	jmp    421088 <flatcc_builder_get_emit_context@@Base+0x4c7>
  420fe9:	mov    rax,QWORD PTR [rbp-0x28]
  420fed:	mov    QWORD PTR [rbp-0x8],rax
  420ff1:	mov    rax,QWORD PTR [rbp-0x18]
  420ff5:	mov    rax,QWORD PTR [rax+0x18]
  420ff9:	cmp    QWORD PTR [rbp-0x8],rax
  420ffd:	jbe    421029 <flatcc_builder_get_emit_context@@Base+0x468>
  420fff:	mov    rax,QWORD PTR [rbp-0x18]
  421003:	mov    rax,QWORD PTR [rax+0x18]
  421007:	mov    QWORD PTR [rbp-0x8],rax
  42100b:	cmp    QWORD PTR [rbp-0x8],0x0
  421010:	jne    421029 <flatcc_builder_get_emit_context@@Base+0x468>
  421012:	mov    rax,QWORD PTR [rbp-0x18]
  421016:	mov    rdi,rax
  421019:	call   420bd7 <flatcc_builder_get_emit_context@@Base+0x16>
  42101e:	test   eax,eax
  421020:	je     421088 <flatcc_builder_get_emit_context@@Base+0x4c7>
  421022:	mov    eax,0xffffffff
  421027:	jmp    421098 <flatcc_builder_get_emit_context@@Base+0x4d7>
  421029:	mov    rax,QWORD PTR [rbp-0x18]
  42102d:	mov    rax,QWORD PTR [rax+0x10]
  421031:	mov    rdx,QWORD PTR [rbp-0x8]
  421035:	neg    rdx
  421038:	add    rdx,rax
  42103b:	mov    rax,QWORD PTR [rbp-0x18]
  42103f:	mov    QWORD PTR [rax+0x10],rdx
  421043:	mov    rax,QWORD PTR [rbp-0x18]
  421047:	mov    rax,QWORD PTR [rax+0x18]
  42104b:	sub    rax,QWORD PTR [rbp-0x8]
  42104f:	mov    rdx,rax
  421052:	mov    rax,QWORD PTR [rbp-0x18]
  421056:	mov    QWORD PTR [rax+0x18],rdx
  42105a:	mov    rax,QWORD PTR [rbp-0x8]
  42105e:	neg    rax
  421061:	add    QWORD PTR [rbp-0x20],rax
  421065:	mov    rax,QWORD PTR [rbp-0x8]
  421069:	sub    QWORD PTR [rbp-0x28],rax
  42106d:	mov    rax,QWORD PTR [rbp-0x18]
  421071:	mov    rax,QWORD PTR [rax+0x10]
  421075:	mov    rdx,QWORD PTR [rbp-0x8]
  421079:	mov    rcx,QWORD PTR [rbp-0x20]
  42107d:	mov    rsi,rcx
  421080:	mov    rdi,rax
  421083:	call   406220 <memcpy@plt>
  421088:	cmp    QWORD PTR [rbp-0x28],0x0
  42108d:	jne    420fe9 <flatcc_builder_get_emit_context@@Base+0x428>
  421093:	mov    eax,0x0
  421098:	leave  
  421099:	ret    
  42109a:	endbr64 
  42109e:	push   rbp
  42109f:	mov    rbp,rsp
  4210a2:	sub    rsp,0x30
  4210a6:	mov    QWORD PTR [rbp-0x18],rdi
  4210aa:	mov    QWORD PTR [rbp-0x20],rsi
  4210ae:	mov    QWORD PTR [rbp-0x28],rdx
  4210b2:	jmp    421150 <flatcc_builder_get_emit_context@@Base+0x58f>
  4210b7:	mov    rax,QWORD PTR [rbp-0x28]
  4210bb:	mov    QWORD PTR [rbp-0x8],rax
  4210bf:	mov    rax,QWORD PTR [rbp-0x18]
  4210c3:	mov    rax,QWORD PTR [rax+0x28]
  4210c7:	cmp    QWORD PTR [rbp-0x8],rax
  4210cb:	jbe    4210f7 <flatcc_builder_get_emit_context@@Base+0x536>
  4210cd:	mov    rax,QWORD PTR [rbp-0x18]
  4210d1:	mov    rax,QWORD PTR [rax+0x28]
  4210d5:	mov    QWORD PTR [rbp-0x8],rax
  4210d9:	cmp    QWORD PTR [rbp-0x8],0x0
  4210de:	jne    4210f7 <flatcc_builder_get_emit_context@@Base+0x536>
  4210e0:	mov    rax,QWORD PTR [rbp-0x18]
  4210e4:	mov    rdi,rax
  4210e7:	call   420ddf <flatcc_builder_get_emit_context@@Base+0x21e>
  4210ec:	test   eax,eax
  4210ee:	je     421150 <flatcc_builder_get_emit_context@@Base+0x58f>
  4210f0:	mov    eax,0xffffffff
  4210f5:	jmp    421160 <flatcc_builder_get_emit_context@@Base+0x59f>
  4210f7:	mov    rax,QWORD PTR [rbp-0x18]
  4210fb:	mov    rax,QWORD PTR [rax+0x20]
  4210ff:	mov    rdx,QWORD PTR [rbp-0x8]
  421103:	mov    rcx,QWORD PTR [rbp-0x20]
  421107:	mov    rsi,rcx
  42110a:	mov    rdi,rax
  42110d:	call   406220 <memcpy@plt>
  421112:	mov    rax,QWORD PTR [rbp-0x8]
  421116:	sub    QWORD PTR [rbp-0x28],rax
  42111a:	mov    rax,QWORD PTR [rbp-0x8]
  42111e:	add    QWORD PTR [rbp-0x20],rax
  421122:	mov    rax,QWORD PTR [rbp-0x18]
  421126:	mov    rdx,QWORD PTR [rax+0x20]
  42112a:	mov    rax,QWORD PTR [rbp-0x8]
  42112e:	add    rdx,rax
  421131:	mov    rax,QWORD PTR [rbp-0x18]
  421135:	mov    QWORD PTR [rax+0x20],rdx
  421139:	mov    rax,QWORD PTR [rbp-0x18]
  42113d:	mov    rax,QWORD PTR [rax+0x28]
  421141:	sub    rax,QWORD PTR [rbp-0x8]
  421145:	mov    rdx,rax
  421148:	mov    rax,QWORD PTR [rbp-0x18]
  42114c:	mov    QWORD PTR [rax+0x28],rdx
  421150:	cmp    QWORD PTR [rbp-0x28],0x0
  421155:	jne    4210b7 <flatcc_builder_get_emit_context@@Base+0x4f6>
  42115b:	mov    eax,0x0
  421160:	leave  
  421161:	ret    

0000000000421162 <flatcc_emitter_recycle_page@@Base>:
  421162:	endbr64 
  421166:	push   rbp
  421167:	mov    rbp,rsp
  42116a:	mov    QWORD PTR [rbp-0x8],rdi
  42116e:	mov    QWORD PTR [rbp-0x10],rsi
  421172:	mov    rax,QWORD PTR [rbp-0x8]
  421176:	mov    rax,QWORD PTR [rax]
  421179:	cmp    QWORD PTR [rbp-0x10],rax
  42117d:	je     42118d <flatcc_emitter_recycle_page@@Base+0x2b>
  42117f:	mov    rax,QWORD PTR [rbp-0x8]
  421183:	mov    rax,QWORD PTR [rax+0x8]
  421187:	cmp    QWORD PTR [rbp-0x10],rax
  42118b:	jne    421197 <flatcc_emitter_recycle_page@@Base+0x35>
  42118d:	mov    eax,0xffffffff
  421192:	jmp    42122d <flatcc_emitter_recycle_page@@Base+0xcb>
  421197:	mov    rax,QWORD PTR [rbp-0x10]
  42119b:	mov    rax,QWORD PTR [rax+0xb80]
  4211a2:	mov    rdx,QWORD PTR [rbp-0x10]
  4211a6:	mov    rdx,QWORD PTR [rdx+0xb88]
  4211ad:	mov    QWORD PTR [rax+0xb88],rdx
  4211b4:	mov    rax,QWORD PTR [rbp-0x10]
  4211b8:	mov    rax,QWORD PTR [rax+0xb88]
  4211bf:	mov    rdx,QWORD PTR [rbp-0x10]
  4211c3:	mov    rdx,QWORD PTR [rdx+0xb80]
  4211ca:	mov    QWORD PTR [rax+0xb80],rdx
  4211d1:	mov    rax,QWORD PTR [rbp-0x8]
  4211d5:	mov    rax,QWORD PTR [rax]
  4211d8:	mov    rdx,QWORD PTR [rax+0xb88]
  4211df:	mov    rax,QWORD PTR [rbp-0x10]
  4211e3:	mov    QWORD PTR [rax+0xb88],rdx
  4211ea:	mov    rax,QWORD PTR [rbp-0x8]
  4211ee:	mov    rdx,QWORD PTR [rax]
  4211f1:	mov    rax,QWORD PTR [rbp-0x10]
  4211f5:	mov    QWORD PTR [rax+0xb80],rdx
  4211fc:	mov    rax,QWORD PTR [rbp-0x10]
  421200:	mov    rax,QWORD PTR [rax+0xb88]
  421207:	mov    rdx,QWORD PTR [rbp-0x10]
  42120b:	mov    QWORD PTR [rax+0xb80],rdx
  421212:	mov    rax,QWORD PTR [rbp-0x10]
  421216:	mov    rax,QWORD PTR [rax+0xb80]
  42121d:	mov    rdx,QWORD PTR [rbp-0x10]
  421221:	mov    QWORD PTR [rax+0xb88],rdx
  421228:	mov    eax,0x0
  42122d:	pop    rbp
  42122e:	ret    

000000000042122f <flatcc_emitter_reset@@Base>:
  42122f:	endbr64 
  421233:	push   rbp
  421234:	mov    rbp,rsp
  421237:	sub    rsp,0x20
  42123b:	mov    QWORD PTR [rbp-0x18],rdi
  42123f:	mov    rax,QWORD PTR [rbp-0x18]
  421243:	mov    rax,QWORD PTR [rax]
  421246:	mov    QWORD PTR [rbp-0x8],rax
  42124a:	mov    rax,QWORD PTR [rbp-0x18]
  42124e:	mov    rax,QWORD PTR [rax]
  421251:	test   rax,rax
  421254:	je     4213be <flatcc_emitter_reset@@Base+0x18f>
  42125a:	mov    rax,QWORD PTR [rbp-0x18]
  42125e:	mov    rdx,QWORD PTR [rax]
  421261:	mov    rax,QWORD PTR [rbp-0x18]
  421265:	mov    QWORD PTR [rax+0x8],rdx
  421269:	mov    rax,QWORD PTR [rbp-0x18]
  42126d:	mov    rax,QWORD PTR [rax]
  421270:	lea    rdx,[rax+0x5c0]
  421277:	mov    rax,QWORD PTR [rbp-0x18]
  42127b:	mov    QWORD PTR [rax+0x10],rdx
  42127f:	mov    rax,QWORD PTR [rbp-0x18]
  421283:	mov    rdx,QWORD PTR [rax+0x10]
  421287:	mov    rax,QWORD PTR [rbp-0x18]
  42128b:	mov    QWORD PTR [rax+0x20],rdx
  42128f:	mov    rax,QWORD PTR [rbp-0x18]
  421293:	mov    QWORD PTR [rax+0x18],0x5c0
  42129b:	mov    rax,QWORD PTR [rbp-0x18]
  42129f:	mov    QWORD PTR [rax+0x28],0x5c0
  4212a7:	mov    rax,QWORD PTR [rbp-0x18]
  4212ab:	mov    rax,QWORD PTR [rax+0x18]
  4212af:	mov    edx,eax
  4212b1:	mov    rax,QWORD PTR [rbp-0x18]
  4212b5:	mov    rax,QWORD PTR [rax]
  4212b8:	neg    edx
  4212ba:	mov    DWORD PTR [rax+0xb90],edx
  4212c0:	mov    rax,QWORD PTR [rbp-0x18]
  4212c4:	mov    rax,QWORD PTR [rax+0x40]
  4212c8:	test   rax,rax
  4212cb:	jne    4212dd <flatcc_emitter_reset@@Base+0xae>
  4212cd:	mov    rax,QWORD PTR [rbp-0x18]
  4212d1:	mov    rdx,QWORD PTR [rax+0x30]
  4212d5:	mov    rax,QWORD PTR [rbp-0x18]
  4212d9:	mov    QWORD PTR [rax+0x40],rdx
  4212dd:	mov    rax,QWORD PTR [rbp-0x18]
  4212e1:	mov    rdx,QWORD PTR [rax+0x40]
  4212e5:	mov    rax,rdx
  4212e8:	add    rax,rax
  4212eb:	add    rax,rdx
  4212ee:	shr    rax,0x2
  4212f2:	mov    rdx,rax
  4212f5:	mov    rax,QWORD PTR [rbp-0x18]
  4212f9:	mov    rax,QWORD PTR [rax+0x30]
  4212fd:	shr    rax,0x2
  421301:	add    rdx,rax
  421304:	mov    rax,QWORD PTR [rbp-0x18]
  421308:	mov    QWORD PTR [rax+0x40],rdx
  42130c:	mov    rax,QWORD PTR [rbp-0x18]
  421310:	mov    QWORD PTR [rax+0x30],0x0
  421318:	jmp    421384 <flatcc_emitter_reset@@Base+0x155>
  42131a:	mov    rax,QWORD PTR [rbp-0x18]
  42131e:	mov    rax,QWORD PTR [rax+0x8]
  421322:	mov    rax,QWORD PTR [rax+0xb80]
  421329:	mov    QWORD PTR [rbp-0x8],rax
  42132d:	mov    rax,QWORD PTR [rbp-0x18]
  421331:	mov    rax,QWORD PTR [rax+0x8]
  421335:	mov    rdx,QWORD PTR [rbp-0x8]
  421339:	mov    rdx,QWORD PTR [rdx+0xb80]
  421340:	mov    QWORD PTR [rax+0xb80],rdx
  421347:	mov    rax,QWORD PTR [rbp-0x8]
  42134b:	mov    rax,QWORD PTR [rax+0xb80]
  421352:	mov    rdx,QWORD PTR [rbp-0x18]
  421356:	mov    rdx,QWORD PTR [rdx+0x8]
  42135a:	mov    QWORD PTR [rax+0xb88],rdx
  421361:	mov    rax,QWORD PTR [rbp-0x8]
  421365:	mov    rdi,rax
  421368:	call   406160 <free@plt>
  42136d:	mov    rax,QWORD PTR [rbp-0x18]
  421371:	mov    rax,QWORD PTR [rax+0x38]
  421375:	lea    rdx,[rax-0xb80]
  42137c:	mov    rax,QWORD PTR [rbp-0x18]
  421380:	mov    QWORD PTR [rax+0x38],rdx
  421384:	mov    rax,QWORD PTR [rbp-0x18]
  421388:	mov    rax,QWORD PTR [rax+0x40]
  42138c:	lea    rdx,[rax+rax*1]
  421390:	mov    rax,QWORD PTR [rbp-0x18]
  421394:	mov    rax,QWORD PTR [rax+0x38]
  421398:	cmp    rdx,rax
  42139b:	jae    4213bf <flatcc_emitter_reset@@Base+0x190>
  42139d:	mov    rax,QWORD PTR [rbp-0x18]
  4213a1:	mov    rax,QWORD PTR [rax+0x8]
  4213a5:	mov    rdx,QWORD PTR [rax+0xb80]
  4213ac:	mov    rax,QWORD PTR [rbp-0x18]
  4213b0:	mov    rax,QWORD PTR [rax]
  4213b3:	cmp    rdx,rax
  4213b6:	jne    42131a <flatcc_emitter_reset@@Base+0xeb>
  4213bc:	jmp    4213bf <flatcc_emitter_reset@@Base+0x190>
  4213be:	nop
  4213bf:	leave  
  4213c0:	ret    

00000000004213c1 <flatcc_emitter_clear@@Base>:
  4213c1:	endbr64 
  4213c5:	push   rbp
  4213c6:	mov    rbp,rsp
  4213c9:	sub    rsp,0x20
  4213cd:	mov    QWORD PTR [rbp-0x18],rdi
  4213d1:	mov    rax,QWORD PTR [rbp-0x18]
  4213d5:	mov    rax,QWORD PTR [rax]
  4213d8:	mov    QWORD PTR [rbp-0x8],rax
  4213dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4213e1:	je     421451 <flatcc_emitter_clear@@Base+0x90>
  4213e3:	mov    rax,QWORD PTR [rbp-0x8]
  4213e7:	mov    rax,QWORD PTR [rax+0xb88]
  4213ee:	mov    QWORD PTR [rax+0xb80],0x0
  4213f9:	jmp    42141d <flatcc_emitter_clear@@Base+0x5c>
  4213fb:	mov    rax,QWORD PTR [rbp-0x8]
  4213ff:	mov    rax,QWORD PTR [rax+0xb80]
  421406:	mov    QWORD PTR [rbp-0x8],rax
  42140a:	mov    rax,QWORD PTR [rbp-0x8]
  42140e:	mov    rax,QWORD PTR [rax+0xb88]
  421415:	mov    rdi,rax
  421418:	call   406160 <free@plt>
  42141d:	mov    rax,QWORD PTR [rbp-0x8]
  421421:	mov    rax,QWORD PTR [rax+0xb80]
  421428:	test   rax,rax
  42142b:	jne    4213fb <flatcc_emitter_clear@@Base+0x3a>
  42142d:	mov    rax,QWORD PTR [rbp-0x8]
  421431:	mov    rdi,rax
  421434:	call   406160 <free@plt>
  421439:	mov    rax,QWORD PTR [rbp-0x18]
  42143d:	mov    edx,0x48
  421442:	mov    esi,0x0
  421447:	mov    rdi,rax
  42144a:	call   4061c0 <memset@plt>
  42144f:	jmp    421452 <flatcc_emitter_clear@@Base+0x91>
  421451:	nop
  421452:	leave  
  421453:	ret    

0000000000421454 <flatcc_emitter@@Base>:
  421454:	endbr64 
  421458:	push   rbp
  421459:	mov    rbp,rsp
  42145c:	sub    rsp,0x30
  421460:	mov    QWORD PTR [rbp-0x18],rdi
  421464:	mov    QWORD PTR [rbp-0x20],rsi
  421468:	mov    DWORD PTR [rbp-0x24],edx
  42146b:	mov    DWORD PTR [rbp-0x28],ecx
  42146e:	mov    QWORD PTR [rbp-0x30],r8
  421472:	mov    rax,QWORD PTR [rbp-0x18]
  421476:	mov    QWORD PTR [rbp-0x8],rax
  42147a:	mov    rax,QWORD PTR [rbp-0x8]
  42147e:	mov    rdx,QWORD PTR [rax+0x30]
  421482:	mov    rax,QWORD PTR [rbp-0x30]
  421486:	add    rdx,rax
  421489:	mov    rax,QWORD PTR [rbp-0x8]
  42148d:	mov    QWORD PTR [rax+0x30],rdx
  421491:	cmp    DWORD PTR [rbp-0x28],0x0
  421495:	jns    42153d <flatcc_emitter@@Base+0xe9>
  42149b:	mov    rax,QWORD PTR [rbp-0x8]
  42149f:	mov    rax,QWORD PTR [rax+0x18]
  4214a3:	cmp    QWORD PTR [rbp-0x30],rax
  4214a7:	ja     4214eb <flatcc_emitter@@Base+0x97>
  4214a9:	mov    rax,QWORD PTR [rbp-0x8]
  4214ad:	mov    rax,QWORD PTR [rax+0x10]
  4214b1:	mov    rdx,QWORD PTR [rbp-0x30]
  4214b5:	neg    rdx
  4214b8:	add    rdx,rax
  4214bb:	mov    rax,QWORD PTR [rbp-0x8]
  4214bf:	mov    QWORD PTR [rax+0x10],rdx
  4214c3:	mov    rax,QWORD PTR [rbp-0x8]
  4214c7:	mov    rax,QWORD PTR [rax+0x18]
  4214cb:	sub    rax,QWORD PTR [rbp-0x30]
  4214cf:	mov    rdx,rax
  4214d2:	mov    rax,QWORD PTR [rbp-0x8]
  4214d6:	mov    QWORD PTR [rax+0x18],rdx
  4214da:	mov    rax,QWORD PTR [rbp-0x8]
  4214de:	mov    rax,QWORD PTR [rax+0x10]
  4214e2:	mov    QWORD PTR [rbp-0x10],rax
  4214e6:	jmp    4215c9 <flatcc_emitter@@Base+0x175>
  4214eb:	mov    eax,DWORD PTR [rbp-0x24]
  4214ee:	cdqe   
  4214f0:	shl    rax,0x4
  4214f4:	add    QWORD PTR [rbp-0x20],rax
  4214f8:	jmp    42152b <flatcc_emitter@@Base+0xd7>
  4214fa:	sub    QWORD PTR [rbp-0x20],0x10
  4214ff:	mov    rax,QWORD PTR [rbp-0x20]
  421503:	mov    rdx,QWORD PTR [rax+0x8]
  421507:	mov    rax,QWORD PTR [rbp-0x20]
  42150b:	mov    rcx,QWORD PTR [rax]
  42150e:	mov    rax,QWORD PTR [rbp-0x8]
  421512:	mov    rsi,rcx
  421515:	mov    rdi,rax
  421518:	call   420fc4 <flatcc_builder_get_emit_context@@Base+0x403>
  42151d:	test   eax,eax
  42151f:	je     42152b <flatcc_emitter@@Base+0xd7>
  421521:	mov    eax,0xffffffff
  421526:	jmp    42160c <flatcc_emitter@@Base+0x1b8>
  42152b:	mov    eax,DWORD PTR [rbp-0x24]
  42152e:	lea    edx,[rax-0x1]
  421531:	mov    DWORD PTR [rbp-0x24],edx
  421534:	test   eax,eax
  421536:	jne    4214fa <flatcc_emitter@@Base+0xa6>
  421538:	jmp    4215c2 <flatcc_emitter@@Base+0x16e>
  42153d:	mov    rax,QWORD PTR [rbp-0x8]
  421541:	mov    rax,QWORD PTR [rax+0x28]
  421545:	cmp    QWORD PTR [rbp-0x30],rax
  421549:	ja     4215b5 <flatcc_emitter@@Base+0x161>
  42154b:	mov    rax,QWORD PTR [rbp-0x8]
  42154f:	mov    rax,QWORD PTR [rax+0x20]
  421553:	mov    QWORD PTR [rbp-0x10],rax
  421557:	mov    rax,QWORD PTR [rbp-0x8]
  42155b:	mov    rdx,QWORD PTR [rax+0x20]
  42155f:	mov    rax,QWORD PTR [rbp-0x30]
  421563:	add    rdx,rax
  421566:	mov    rax,QWORD PTR [rbp-0x8]
  42156a:	mov    QWORD PTR [rax+0x20],rdx
  42156e:	mov    rax,QWORD PTR [rbp-0x8]
  421572:	mov    rax,QWORD PTR [rax+0x28]
  421576:	sub    rax,QWORD PTR [rbp-0x30]
  42157a:	mov    rdx,rax
  42157d:	mov    rax,QWORD PTR [rbp-0x8]
  421581:	mov    QWORD PTR [rax+0x28],rdx
  421585:	jmp    4215c9 <flatcc_emitter@@Base+0x175>
  421587:	mov    rax,QWORD PTR [rbp-0x20]
  42158b:	mov    rdx,QWORD PTR [rax+0x8]
  42158f:	mov    rax,QWORD PTR [rbp-0x20]
  421593:	mov    rcx,QWORD PTR [rax]
  421596:	mov    rax,QWORD PTR [rbp-0x8]
  42159a:	mov    rsi,rcx
  42159d:	mov    rdi,rax
  4215a0:	call   42109a <flatcc_builder_get_emit_context@@Base+0x4d9>
  4215a5:	test   eax,eax
  4215a7:	je     4215b0 <flatcc_emitter@@Base+0x15c>
  4215a9:	mov    eax,0xffffffff
  4215ae:	jmp    42160c <flatcc_emitter@@Base+0x1b8>
  4215b0:	add    QWORD PTR [rbp-0x20],0x10
  4215b5:	mov    eax,DWORD PTR [rbp-0x24]
  4215b8:	lea    edx,[rax-0x1]
  4215bb:	mov    DWORD PTR [rbp-0x24],edx
  4215be:	test   eax,eax
  4215c0:	jne    421587 <flatcc_emitter@@Base+0x133>
  4215c2:	mov    eax,0x0
  4215c7:	jmp    42160c <flatcc_emitter@@Base+0x1b8>
  4215c9:	jmp    4215fa <flatcc_emitter@@Base+0x1a6>
  4215cb:	mov    rax,QWORD PTR [rbp-0x20]
  4215cf:	mov    rdx,QWORD PTR [rax+0x8]
  4215d3:	mov    rax,QWORD PTR [rbp-0x20]
  4215d7:	mov    rcx,QWORD PTR [rax]
  4215da:	mov    rax,QWORD PTR [rbp-0x10]
  4215de:	mov    rsi,rcx
  4215e1:	mov    rdi,rax
  4215e4:	call   406220 <memcpy@plt>
  4215e9:	mov    rax,QWORD PTR [rbp-0x20]
  4215ed:	mov    rax,QWORD PTR [rax+0x8]
  4215f1:	add    QWORD PTR [rbp-0x10],rax
  4215f5:	add    QWORD PTR [rbp-0x20],0x10
  4215fa:	mov    eax,DWORD PTR [rbp-0x24]
  4215fd:	lea    edx,[rax-0x1]
  421600:	mov    DWORD PTR [rbp-0x24],edx
  421603:	test   eax,eax
  421605:	jne    4215cb <flatcc_emitter@@Base+0x177>
  421607:	mov    eax,0x0
  42160c:	leave  
  42160d:	ret    

000000000042160e <flatcc_emitter_copy_buffer@@Base>:
  42160e:	endbr64 
  421612:	push   rbp
  421613:	mov    rbp,rsp
  421616:	sub    rsp,0x30
  42161a:	mov    QWORD PTR [rbp-0x18],rdi
  42161e:	mov    QWORD PTR [rbp-0x20],rsi
  421622:	mov    QWORD PTR [rbp-0x28],rdx
  421626:	mov    rax,QWORD PTR [rbp-0x18]
  42162a:	mov    rax,QWORD PTR [rax+0x30]
  42162e:	cmp    QWORD PTR [rbp-0x28],rax
  421632:	jae    42163e <flatcc_emitter_copy_buffer@@Base+0x30>
  421634:	mov    eax,0x0
  421639:	jmp    421742 <flatcc_emitter_copy_buffer@@Base+0x134>
  42163e:	mov    rax,QWORD PTR [rbp-0x18]
  421642:	mov    rax,QWORD PTR [rax]
  421645:	test   rax,rax
  421648:	jne    421654 <flatcc_emitter_copy_buffer@@Base+0x46>
  42164a:	mov    eax,0x0
  42164f:	jmp    421742 <flatcc_emitter_copy_buffer@@Base+0x134>
  421654:	mov    rax,QWORD PTR [rbp-0x18]
  421658:	mov    rdx,QWORD PTR [rax]
  42165b:	mov    rax,QWORD PTR [rbp-0x18]
  42165f:	mov    rax,QWORD PTR [rax+0x8]
  421663:	cmp    rdx,rax
  421666:	jne    421690 <flatcc_emitter_copy_buffer@@Base+0x82>
  421668:	mov    rax,QWORD PTR [rbp-0x18]
  42166c:	mov    rdx,QWORD PTR [rax+0x30]
  421670:	mov    rax,QWORD PTR [rbp-0x18]
  421674:	mov    rcx,QWORD PTR [rax+0x10]
  421678:	mov    rax,QWORD PTR [rbp-0x20]
  42167c:	mov    rsi,rcx
  42167f:	mov    rdi,rax
  421682:	call   406220 <memcpy@plt>
  421687:	mov    rax,QWORD PTR [rbp-0x20]
  42168b:	jmp    421742 <flatcc_emitter_copy_buffer@@Base+0x134>
  421690:	mov    rax,QWORD PTR [rbp-0x18]
  421694:	mov    rax,QWORD PTR [rax+0x18]
  421698:	mov    edx,0xb80
  42169d:	sub    rdx,rax
  4216a0:	mov    rax,rdx
  4216a3:	mov    QWORD PTR [rbp-0x8],rax
  4216a7:	mov    rax,QWORD PTR [rbp-0x18]
  4216ab:	mov    rcx,QWORD PTR [rax+0x10]
  4216af:	mov    rdx,QWORD PTR [rbp-0x8]
  4216b3:	mov    rax,QWORD PTR [rbp-0x20]
  4216b7:	mov    rsi,rcx
  4216ba:	mov    rdi,rax
  4216bd:	call   406220 <memcpy@plt>
  4216c2:	mov    rax,QWORD PTR [rbp-0x8]
  4216c6:	add    QWORD PTR [rbp-0x20],rax
  4216ca:	mov    rax,QWORD PTR [rbp-0x18]
  4216ce:	mov    rax,QWORD PTR [rax]
  4216d1:	mov    rax,QWORD PTR [rax+0xb80]
  4216d8:	mov    QWORD PTR [rbp-0x10],rax
  4216dc:	jmp    42170d <flatcc_emitter_copy_buffer@@Base+0xff>
  4216de:	mov    rcx,QWORD PTR [rbp-0x10]
  4216e2:	mov    rax,QWORD PTR [rbp-0x20]
  4216e6:	mov    edx,0xb80
  4216eb:	mov    rsi,rcx
  4216ee:	mov    rdi,rax
  4216f1:	call   406220 <memcpy@plt>
  4216f6:	add    QWORD PTR [rbp-0x20],0xb80
  4216fe:	mov    rax,QWORD PTR [rbp-0x10]
  421702:	mov    rax,QWORD PTR [rax+0xb80]
  421709:	mov    QWORD PTR [rbp-0x10],rax
  42170d:	mov    rax,QWORD PTR [rbp-0x18]
  421711:	mov    rax,QWORD PTR [rax+0x8]
  421715:	cmp    QWORD PTR [rbp-0x10],rax
  421719:	jne    4216de <flatcc_emitter_copy_buffer@@Base+0xd0>
  42171b:	mov    rax,QWORD PTR [rbp-0x18]
  42171f:	mov    rax,QWORD PTR [rax+0x28]
  421723:	mov    edx,0xb80
  421728:	sub    rdx,rax
  42172b:	mov    rcx,QWORD PTR [rbp-0x10]
  42172f:	mov    rax,QWORD PTR [rbp-0x20]
  421733:	mov    rsi,rcx
  421736:	mov    rdi,rax
  421739:	call   406220 <memcpy@plt>
  42173e:	mov    rax,QWORD PTR [rbp-0x20]
  421742:	leave  
  421743:	ret    
  421744:	push   rbp
  421745:	mov    rbp,rsp
  421748:	mov    DWORD PTR [rbp-0x4],edi
  42174b:	mov    eax,DWORD PTR [rbp-0x4]
  42174e:	pop    rbp
  42174f:	ret    
  421750:	push   rbp
  421751:	mov    rbp,rsp
  421754:	sub    rsp,0x8
  421758:	mov    QWORD PTR [rbp-0x8],rdi
  42175c:	mov    rax,QWORD PTR [rbp-0x8]
  421760:	mov    eax,DWORD PTR [rax]
  421762:	mov    edi,eax
  421764:	call   421744 <flatcc_emitter_copy_buffer@@Base+0x136>
  421769:	leave  
  42176a:	ret    
  42176b:	push   rbp
  42176c:	mov    rbp,rsp
  42176f:	mov    eax,edi
  421771:	mov    WORD PTR [rbp-0x4],ax
  421775:	movzx  eax,WORD PTR [rbp-0x4]
  421779:	pop    rbp
  42177a:	ret    
  42177b:	push   rbp
  42177c:	mov    rbp,rsp
  42177f:	sub    rsp,0x8
  421783:	mov    QWORD PTR [rbp-0x8],rdi
  421787:	mov    rax,QWORD PTR [rbp-0x8]
  42178b:	movzx  eax,WORD PTR [rax]
  42178e:	movzx  eax,ax
  421791:	mov    edi,eax
  421793:	call   42176b <flatcc_emitter_copy_buffer@@Base+0x15d>
  421798:	leave  
  421799:	ret    
  42179a:	push   rbp
  42179b:	mov    rbp,rsp
  42179e:	mov    DWORD PTR [rbp-0x4],edi
  4217a1:	mov    eax,DWORD PTR [rbp-0x4]
  4217a4:	pop    rbp
  4217a5:	ret    
  4217a6:	push   rbp
  4217a7:	mov    rbp,rsp
  4217aa:	mov    DWORD PTR [rbp-0x4],edi
  4217ad:	mov    eax,DWORD PTR [rbp-0x4]
  4217b0:	pop    rbp
  4217b1:	ret    
  4217b2:	push   rbp
  4217b3:	mov    rbp,rsp
  4217b6:	sub    rsp,0x8
  4217ba:	mov    QWORD PTR [rbp-0x8],rdi
  4217be:	mov    rax,QWORD PTR [rbp-0x8]
  4217c2:	mov    eax,DWORD PTR [rax]
  4217c4:	mov    edi,eax
  4217c6:	call   42179a <flatcc_emitter_copy_buffer@@Base+0x18c>
  4217cb:	leave  
  4217cc:	ret    

00000000004217cd <flatcc_verify_error_string@@Base>:
  4217cd:	endbr64 
  4217d1:	push   rbp
  4217d2:	mov    rbp,rsp
  4217d5:	mov    DWORD PTR [rbp-0x4],edi
  4217d8:	cmp    DWORD PTR [rbp-0x4],0x24
  4217dc:	ja     421999 <flatcc_verify_error_string@@Base+0x1cc>
  4217e2:	mov    eax,DWORD PTR [rbp-0x4]
  4217e5:	lea    rdx,[rax*4+0x0]
  4217ed:	lea    rax,[rip+0x18c3c]        # 43a430 <flatcc_builder_padding_base@@Base+0x11d0>
  4217f4:	mov    eax,DWORD PTR [rdx+rax*1]
  4217f7:	movsxd rdx,eax
  4217fa:	lea    rax,[rip+0x18c2f]        # 43a430 <flatcc_builder_padding_base@@Base+0x11d0>
  421801:	add    rax,rdx
  421804:	notrack jmp rax
  421807:	lea    rax,[rip+0x1877c]        # 439f8a <flatcc_builder_padding_base@@Base+0xd2a>
  42180e:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421813:	lea    rax,[rip+0x18773]        # 439f8d <flatcc_builder_padding_base@@Base+0xd2d>
  42181a:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42181f:	lea    rax,[rip+0x1877f]        # 439fa5 <flatcc_builder_padding_base@@Base+0xd45>
  421826:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42182b:	lea    rax,[rip+0x18787]        # 439fb9 <flatcc_builder_padding_base@@Base+0xd59>
  421832:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421837:	lea    rax,[rip+0x18795]        # 439fd3 <flatcc_builder_padding_base@@Base+0xd73>
  42183e:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421843:	lea    rax,[rip+0x187a6]        # 439ff0 <flatcc_builder_padding_base@@Base+0xd90>
  42184a:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42184f:	lea    rax,[rip+0x187c2]        # 43a018 <flatcc_builder_padding_base@@Base+0xdb8>
  421856:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42185b:	lea    rax,[rip+0x187d5]        # 43a037 <flatcc_builder_padding_base@@Base+0xdd7>
  421862:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421867:	lea    rax,[rip+0x187e4]        # 43a052 <flatcc_builder_padding_base@@Base+0xdf2>
  42186e:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421873:	lea    rax,[rip+0x187ec]        # 43a066 <flatcc_builder_padding_base@@Base+0xe06>
  42187a:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42187f:	lea    rax,[rip+0x187f4]        # 43a07a <flatcc_builder_padding_base@@Base+0xe1a>
  421886:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42188b:	lea    rax,[rip+0x187fd]        # 43a08f <flatcc_builder_padding_base@@Base+0xe2f>
  421892:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421897:	lea    rax,[rip+0x18802]        # 43a0a0 <flatcc_builder_padding_base@@Base+0xe40>
  42189e:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218a3:	lea    rax,[rip+0x1880e]        # 43a0b8 <flatcc_builder_padding_base@@Base+0xe58>
  4218aa:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218af:	lea    rax,[rip+0x1881b]        # 43a0d1 <flatcc_builder_padding_base@@Base+0xe71>
  4218b6:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218bb:	lea    rax,[rip+0x1882e]        # 43a0f0 <flatcc_builder_padding_base@@Base+0xe90>
  4218c2:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218c7:	lea    rax,[rip+0x1884a]        # 43a118 <flatcc_builder_padding_base@@Base+0xeb8>
  4218ce:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218d3:	lea    rax,[rip+0x18866]        # 43a140 <flatcc_builder_padding_base@@Base+0xee0>
  4218da:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218df:	lea    rax,[rip+0x18882]        # 43a168 <flatcc_builder_padding_base@@Base+0xf08>
  4218e6:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218eb:	lea    rax,[rip+0x1888e]        # 43a180 <flatcc_builder_padding_base@@Base+0xf20>
  4218f2:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  4218f7:	lea    rax,[rip+0x188a9]        # 43a1a7 <flatcc_builder_padding_base@@Base+0xf47>
  4218fe:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421903:	lea    rax,[rip+0x188b6]        # 43a1c0 <flatcc_builder_padding_base@@Base+0xf60>
  42190a:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42190f:	lea    rax,[rip+0x188da]        # 43a1f0 <flatcc_builder_padding_base@@Base+0xf90>
  421916:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42191b:	lea    rax,[rip+0x18906]        # 43a228 <flatcc_builder_padding_base@@Base+0xfc8>
  421922:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421924:	lea    rax,[rip+0x1892d]        # 43a258 <flatcc_builder_padding_base@@Base+0xff8>
  42192b:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42192d:	lea    rax,[rip+0x18954]        # 43a288 <flatcc_builder_padding_base@@Base+0x1028>
  421934:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421936:	lea    rax,[rip+0x1897a]        # 43a2b7 <flatcc_builder_padding_base@@Base+0x1057>
  42193d:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42193f:	lea    rax,[rip+0x18985]        # 43a2cb <flatcc_builder_padding_base@@Base+0x106b>
  421946:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421948:	lea    rax,[rip+0x18997]        # 43a2e6 <flatcc_builder_padding_base@@Base+0x1086>
  42194f:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421951:	lea    rax,[rip+0x189a8]        # 43a300 <flatcc_builder_padding_base@@Base+0x10a0>
  421958:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42195a:	lea    rax,[rip+0x189c7]        # 43a328 <flatcc_builder_padding_base@@Base+0x10c8>
  421961:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421963:	lea    rax,[rip+0x189e4]        # 43a34e <flatcc_builder_padding_base@@Base+0x10ee>
  42196a:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42196c:	lea    rax,[rip+0x189f5]        # 43a368 <flatcc_builder_padding_base@@Base+0x1108>
  421973:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421975:	lea    rax,[rip+0x18a14]        # 43a390 <flatcc_builder_padding_base@@Base+0x1130>
  42197c:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  42197e:	lea    rax,[rip+0x18a33]        # 43a3b8 <flatcc_builder_padding_base@@Base+0x1158>
  421985:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421987:	lea    rax,[rip+0x18a62]        # 43a3f0 <flatcc_builder_padding_base@@Base+0x1190>
  42198e:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421990:	lea    rax,[rip+0x18a81]        # 43a418 <flatcc_builder_padding_base@@Base+0x11b8>
  421997:	jmp    4219a0 <flatcc_verify_error_string@@Base+0x1d3>
  421999:	lea    rax,[rip+0x18a86]        # 43a426 <flatcc_builder_padding_base@@Base+0x11c6>
  4219a0:	pop    rbp
  4219a1:	ret    
  4219a2:	push   rbp
  4219a3:	mov    rbp,rsp
  4219a6:	sub    rsp,0x10
  4219aa:	mov    QWORD PTR [rbp-0x8],rdi
  4219ae:	mov    DWORD PTR [rbp-0xc],esi
  4219b1:	mov    edx,DWORD PTR [rbp-0xc]
  4219b4:	mov    rax,QWORD PTR [rbp-0x8]
  4219b8:	add    rax,rdx
  4219bb:	mov    rdi,rax
  4219be:	call   421750 <flatcc_emitter_copy_buffer@@Base+0x142>
  4219c3:	leave  
  4219c4:	ret    
  4219c5:	push   rbp
  4219c6:	mov    rbp,rsp
  4219c9:	sub    rsp,0x20
  4219cd:	mov    QWORD PTR [rbp-0x18],rdi
  4219d1:	mov    rax,QWORD PTR fs:0x28
  4219da:	mov    QWORD PTR [rbp-0x8],rax
  4219de:	xor    eax,eax
  4219e0:	mov    DWORD PTR [rbp-0xc],0x0
  4219e7:	mov    rcx,QWORD PTR [rbp-0x18]
  4219eb:	lea    rax,[rbp-0xc]
  4219ef:	mov    edx,0x4
  4219f4:	mov    rsi,rcx
  4219f7:	mov    rdi,rax
  4219fa:	call   406170 <strncpy@plt>
  4219ff:	mov    eax,DWORD PTR [rbp-0xc]
  421a02:	mov    edi,eax
  421a04:	call   4217a6 <flatcc_emitter_copy_buffer@@Base+0x198>
  421a09:	mov    rdx,QWORD PTR [rbp-0x8]
  421a0d:	xor    rdx,QWORD PTR fs:0x28
  421a16:	je     421a1d <flatcc_verify_error_string@@Base+0x250>
  421a18:	call   4061a0 <__stack_chk_fail@plt>
  421a1d:	leave  
  421a1e:	ret    
  421a1f:	push   rbp
  421a20:	mov    rbp,rsp
  421a23:	sub    rsp,0x10
  421a27:	mov    QWORD PTR [rbp-0x8],rdi
  421a2b:	mov    DWORD PTR [rbp-0xc],esi
  421a2e:	mov    edx,DWORD PTR [rbp-0xc]
  421a31:	mov    rax,QWORD PTR [rbp-0x8]
  421a35:	add    rax,rdx
  421a38:	mov    rdi,rax
  421a3b:	call   4217b2 <flatcc_emitter_copy_buffer@@Base+0x1a4>
  421a40:	leave  
  421a41:	ret    
  421a42:	push   rbp
  421a43:	mov    rbp,rsp
  421a46:	sub    rsp,0x10
  421a4a:	mov    QWORD PTR [rbp-0x8],rdi
  421a4e:	mov    DWORD PTR [rbp-0xc],esi
  421a51:	mov    edx,DWORD PTR [rbp-0xc]
  421a54:	mov    rax,QWORD PTR [rbp-0x8]
  421a58:	add    rax,rdx
  421a5b:	mov    rdi,rax
  421a5e:	call   42177b <flatcc_emitter_copy_buffer@@Base+0x16d>
  421a63:	leave  
  421a64:	ret    
  421a65:	push   rbp
  421a66:	mov    rbp,rsp
  421a69:	mov    DWORD PTR [rbp-0x14],edi
  421a6c:	mov    DWORD PTR [rbp-0x18],esi
  421a6f:	mov    DWORD PTR [rbp-0x1c],edx
  421a72:	mov    edx,DWORD PTR [rbp-0x18]
  421a75:	mov    eax,DWORD PTR [rbp-0x1c]
  421a78:	add    eax,edx
  421a7a:	mov    DWORD PTR [rbp-0x4],eax
  421a7d:	mov    eax,DWORD PTR [rbp-0x4]
  421a80:	cmp    eax,DWORD PTR [rbp-0x18]
  421a83:	jbe    421aa6 <flatcc_verify_error_string@@Base+0x2d9>
  421a85:	mov    eax,DWORD PTR [rbp-0x4]
  421a88:	lea    rdx,[rax+0x4]
  421a8c:	mov    eax,DWORD PTR [rbp-0x14]
  421a8f:	cmp    rdx,rax
  421a92:	ja     421aa6 <flatcc_verify_error_string@@Base+0x2d9>
  421a94:	mov    eax,DWORD PTR [rbp-0x4]
  421a97:	and    eax,0x3
  421a9a:	test   rax,rax
  421a9d:	jne    421aa6 <flatcc_verify_error_string@@Base+0x2d9>
  421a9f:	mov    eax,0x1
  421aa4:	jmp    421aab <flatcc_verify_error_string@@Base+0x2de>
  421aa6:	mov    eax,0x0
  421aab:	pop    rbp
  421aac:	ret    
  421aad:	push   rbp
  421aae:	mov    rbp,rsp
  421ab1:	mov    DWORD PTR [rbp-0x14],edi
  421ab4:	mov    DWORD PTR [rbp-0x18],esi
  421ab7:	mov    DWORD PTR [rbp-0x1c],edx
  421aba:	mov    eax,ecx
  421abc:	mov    WORD PTR [rbp-0x20],ax
  421ac0:	mov    edx,DWORD PTR [rbp-0x18]
  421ac3:	mov    eax,DWORD PTR [rbp-0x1c]
  421ac6:	add    eax,edx
  421ac8:	mov    DWORD PTR [rbp-0x4],eax
  421acb:	mov    eax,0x4
  421ad0:	cmp    WORD PTR [rbp-0x20],0x4
  421ad5:	cmovae ax,WORD PTR [rbp-0x20]
  421ada:	mov    WORD PTR [rbp-0x20],ax
  421ade:	mov    eax,DWORD PTR [rbp-0x4]
  421ae1:	cmp    eax,DWORD PTR [rbp-0x18]
  421ae4:	jbe    421b16 <flatcc_verify_error_string@@Base+0x349>
  421ae6:	mov    eax,DWORD PTR [rbp-0x4]
  421ae9:	lea    rdx,[rax+0x4]
  421aed:	mov    eax,DWORD PTR [rbp-0x14]
  421af0:	cmp    rdx,rax
  421af3:	ja     421b16 <flatcc_verify_error_string@@Base+0x349>
  421af5:	mov    eax,DWORD PTR [rbp-0x4]
  421af8:	lea    rdx,[rax+0x4]
  421afc:	movzx  eax,WORD PTR [rbp-0x20]
  421b00:	dec    eax
  421b02:	or     eax,0x3
  421b05:	cdqe   
  421b07:	and    rax,rdx
  421b0a:	test   rax,rax
  421b0d:	jne    421b16 <flatcc_verify_error_string@@Base+0x349>
  421b0f:	mov    eax,0x1
  421b14:	jmp    421b1b <flatcc_verify_error_string@@Base+0x34e>
  421b16:	mov    eax,0x0
  421b1b:	pop    rbp
  421b1c:	ret    
  421b1d:	push   rbp
  421b1e:	mov    rbp,rsp
  421b21:	mov    DWORD PTR [rbp-0x14],edi
  421b24:	mov    DWORD PTR [rbp-0x18],esi
  421b27:	mov    DWORD PTR [rbp-0x1c],edx
  421b2a:	mov    DWORD PTR [rbp-0x20],ecx
  421b2d:	mov    eax,r8d
  421b30:	mov    WORD PTR [rbp-0x24],ax
  421b34:	cmp    DWORD PTR [rbp-0x1c],0x0
  421b38:	je     421b47 <flatcc_verify_error_string@@Base+0x37a>
  421b3a:	mov    edx,DWORD PTR [rbp-0x18]
  421b3d:	mov    eax,DWORD PTR [rbp-0x1c]
  421b40:	add    eax,edx
  421b42:	cmp    DWORD PTR [rbp-0x14],eax
  421b45:	jae    421b4e <flatcc_verify_error_string@@Base+0x381>
  421b47:	mov    eax,0x12
  421b4c:	jmp    421bbc <flatcc_verify_error_string@@Base+0x3ef>
  421b4e:	mov    eax,DWORD PTR [rbp-0x1c]
  421b51:	add    DWORD PTR [rbp-0x18],eax
  421b54:	mov    edx,DWORD PTR [rbp-0x18]
  421b57:	mov    eax,DWORD PTR [rbp-0x20]
  421b5a:	add    eax,edx
  421b5c:	cmp    DWORD PTR [rbp-0x18],eax
  421b5f:	setbe  al
  421b62:	movzx  eax,al
  421b65:	mov    DWORD PTR [rbp-0xc],eax
  421b68:	cmp    DWORD PTR [rbp-0xc],0x0
  421b6c:	jne    421b75 <flatcc_verify_error_string@@Base+0x3a8>
  421b6e:	mov    eax,0xa
  421b73:	jmp    421bbc <flatcc_verify_error_string@@Base+0x3ef>
  421b75:	mov    edx,DWORD PTR [rbp-0x18]
  421b78:	mov    eax,DWORD PTR [rbp-0x20]
  421b7b:	add    eax,edx
  421b7d:	cmp    DWORD PTR [rbp-0x14],eax
  421b80:	setae  al
  421b83:	movzx  eax,al
  421b86:	mov    DWORD PTR [rbp-0x8],eax
  421b89:	cmp    DWORD PTR [rbp-0x8],0x0
  421b8d:	jne    421b96 <flatcc_verify_error_string@@Base+0x3c9>
  421b8f:	mov    eax,0x9
  421b94:	jmp    421bbc <flatcc_verify_error_string@@Base+0x3ef>
  421b96:	movzx  eax,WORD PTR [rbp-0x24]
  421b9a:	dec    eax
  421b9c:	and    eax,DWORD PTR [rbp-0x18]
  421b9f:	test   eax,eax
  421ba1:	sete   al
  421ba4:	movzx  eax,al
  421ba7:	mov    DWORD PTR [rbp-0x4],eax
  421baa:	cmp    DWORD PTR [rbp-0x4],0x0
  421bae:	jne    421bb7 <flatcc_verify_error_string@@Base+0x3ea>
  421bb0:	mov    eax,0xb
  421bb5:	jmp    421bbc <flatcc_verify_error_string@@Base+0x3ef>
  421bb7:	mov    eax,0x0
  421bbc:	pop    rbp
  421bbd:	ret    
  421bbe:	push   rbp
  421bbf:	mov    rbp,rsp
  421bc2:	sub    rsp,0x20
  421bc6:	mov    QWORD PTR [rbp-0x18],rdi
  421bca:	mov    eax,esi
  421bcc:	mov    WORD PTR [rbp-0x1c],ax
  421bd0:	movzx  eax,WORD PTR [rbp-0x1c]
  421bd4:	add    eax,0x2
  421bd7:	cdqe   
  421bd9:	add    eax,eax
  421bdb:	mov    WORD PTR [rbp-0x2],ax
  421bdf:	mov    rax,QWORD PTR [rbp-0x18]
  421be3:	movzx  eax,WORD PTR [rax+0x1e]
  421be7:	cmp    WORD PTR [rbp-0x2],ax
  421beb:	jb     421bf4 <flatcc_verify_error_string@@Base+0x427>
  421bed:	mov    eax,0x0
  421bf2:	jmp    421c0d <flatcc_verify_error_string@@Base+0x440>
  421bf4:	movzx  edx,WORD PTR [rbp-0x2]
  421bf8:	mov    rax,QWORD PTR [rbp-0x18]
  421bfc:	mov    rax,QWORD PTR [rax+0x10]
  421c00:	mov    esi,edx
  421c02:	mov    rdi,rax
  421c05:	call   421a42 <flatcc_verify_error_string@@Base+0x275>
  421c0a:	movzx  eax,ax
  421c0d:	leave  
  421c0e:	ret    
  421c0f:	push   rbp
  421c10:	mov    rbp,rsp
  421c13:	sub    rsp,0x20
  421c17:	mov    QWORD PTR [rbp-0x18],rdi
  421c1b:	mov    eax,esi
  421c1d:	mov    WORD PTR [rbp-0x1c],ax
  421c21:	movzx  edx,WORD PTR [rbp-0x1c]
  421c25:	mov    rax,QWORD PTR [rbp-0x18]
  421c29:	mov    esi,edx
  421c2b:	mov    rdi,rax
  421c2e:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  421c33:	mov    WORD PTR [rbp-0x2],ax
  421c37:	cmp    WORD PTR [rbp-0x2],0x0
  421c3c:	je     421c5a <flatcc_verify_error_string@@Base+0x48d>
  421c3e:	mov    rax,QWORD PTR [rbp-0x18]
  421c42:	mov    rdx,QWORD PTR [rax]
  421c45:	mov    rax,QWORD PTR [rbp-0x18]
  421c49:	mov    eax,DWORD PTR [rax+0x18]
  421c4c:	mov    ecx,eax
  421c4e:	movzx  eax,WORD PTR [rbp-0x2]
  421c52:	add    rax,rcx
  421c55:	add    rax,rdx
  421c58:	jmp    421c5f <flatcc_verify_error_string@@Base+0x492>
  421c5a:	mov    eax,0x0
  421c5f:	leave  
  421c60:	ret    
  421c61:	endbr64 
  421c65:	push   rbp
  421c66:	mov    rbp,rsp
  421c69:	sub    rsp,0x38
  421c6d:	mov    QWORD PTR [rbp-0x28],rdi
  421c71:	mov    eax,esi
  421c73:	mov    DWORD PTR [rbp-0x30],edx
  421c76:	mov    DWORD PTR [rbp-0x34],ecx
  421c79:	mov    edx,r8d
  421c7c:	mov    WORD PTR [rbp-0x2c],ax
  421c80:	mov    eax,edx
  421c82:	mov    WORD PTR [rbp-0x38],ax
  421c86:	mov    rax,QWORD PTR [rbp-0x28]
  421c8a:	mov    rax,QWORD PTR [rax]
  421c8d:	mov    DWORD PTR [rbp-0x1c],eax
  421c90:	movzx  edx,WORD PTR [rbp-0x2c]
  421c94:	mov    rax,QWORD PTR [rbp-0x28]
  421c98:	mov    esi,edx
  421c9a:	mov    rdi,rax
  421c9d:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  421ca2:	mov    WORD PTR [rbp-0x1e],ax
  421ca6:	cmp    WORD PTR [rbp-0x1e],0x0
  421cab:	jne    421cd1 <flatcc_verify_error_string@@Base+0x504>
  421cad:	cmp    DWORD PTR [rbp-0x30],0x0
  421cb1:	sete   al
  421cb4:	movzx  eax,al
  421cb7:	mov    DWORD PTR [rbp-0x18],eax
  421cba:	cmp    DWORD PTR [rbp-0x18],0x0
  421cbe:	jne    421cca <flatcc_verify_error_string@@Base+0x4fd>
  421cc0:	mov    eax,0x4
  421cc5:	jmp    421d50 <flatcc_verify_error_string@@Base+0x583>
  421cca:	mov    eax,0x0
  421ccf:	jmp    421d50 <flatcc_verify_error_string@@Base+0x583>
  421cd1:	movzx  eax,WORD PTR [rbp-0x1e]
  421cd5:	mov    DWORD PTR [rbp-0x14],eax
  421cd8:	mov    edx,DWORD PTR [rbp-0x14]
  421cdb:	mov    eax,DWORD PTR [rbp-0x34]
  421cde:	add    eax,edx
  421ce0:	mov    DWORD PTR [rbp-0x10],eax
  421ce3:	mov    rax,QWORD PTR [rbp-0x28]
  421ce7:	movzx  eax,WORD PTR [rax+0x1c]
  421ceb:	movzx  eax,ax
  421cee:	cmp    DWORD PTR [rbp-0x10],eax
  421cf1:	setbe  al
  421cf4:	movzx  eax,al
  421cf7:	mov    DWORD PTR [rbp-0xc],eax
  421cfa:	cmp    DWORD PTR [rbp-0xc],0x0
  421cfe:	jne    421d07 <flatcc_verify_error_string@@Base+0x53a>
  421d00:	mov    eax,0xd
  421d05:	jmp    421d50 <flatcc_verify_error_string@@Base+0x583>
  421d07:	mov    DWORD PTR [rbp-0x8],0x1
  421d0e:	cmp    DWORD PTR [rbp-0x8],0x0
  421d12:	jne    421d1b <flatcc_verify_error_string@@Base+0x54e>
  421d14:	mov    eax,0xe
  421d19:	jmp    421d50 <flatcc_verify_error_string@@Base+0x583>
  421d1b:	mov    rax,QWORD PTR [rbp-0x28]
  421d1f:	mov    edx,DWORD PTR [rax+0x18]
  421d22:	mov    eax,DWORD PTR [rbp-0x1c]
  421d25:	add    eax,edx
  421d27:	add    DWORD PTR [rbp-0x14],eax
  421d2a:	movzx  eax,WORD PTR [rbp-0x38]
  421d2e:	dec    eax
  421d30:	and    eax,DWORD PTR [rbp-0x14]
  421d33:	test   eax,eax
  421d35:	sete   al
  421d38:	movzx  eax,al
  421d3b:	mov    DWORD PTR [rbp-0x4],eax
  421d3e:	cmp    DWORD PTR [rbp-0x4],0x0
  421d42:	jne    421d4b <flatcc_verify_error_string@@Base+0x57e>
  421d44:	mov    eax,0xc
  421d49:	jmp    421d50 <flatcc_verify_error_string@@Base+0x583>
  421d4b:	mov    eax,0x0
  421d50:	leave  
  421d51:	ret    
  421d52:	endbr64 
  421d56:	push   rbp
  421d57:	mov    rbp,rsp
  421d5a:	sub    rsp,0x38
  421d5e:	mov    QWORD PTR [rbp-0x28],rdi
  421d62:	mov    eax,esi
  421d64:	mov    DWORD PTR [rbp-0x30],edx
  421d67:	mov    QWORD PTR [rbp-0x38],rcx
  421d6b:	mov    WORD PTR [rbp-0x2c],ax
  421d6f:	movzx  edx,WORD PTR [rbp-0x2c]
  421d73:	mov    rax,QWORD PTR [rbp-0x28]
  421d77:	mov    esi,edx
  421d79:	mov    rdi,rax
  421d7c:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  421d81:	mov    WORD PTR [rbp-0x16],ax
  421d85:	cmp    WORD PTR [rbp-0x16],0x0
  421d8a:	jne    421dad <flatcc_verify_error_string@@Base+0x5e0>
  421d8c:	mov    rax,QWORD PTR [rbp-0x38]
  421d90:	mov    DWORD PTR [rax],0x0
  421d96:	cmp    DWORD PTR [rbp-0x30],0x0
  421d9a:	je     421da6 <flatcc_verify_error_string@@Base+0x5d9>
  421d9c:	mov    eax,0x4
  421da1:	jmp    421e2c <flatcc_verify_error_string@@Base+0x65f>
  421da6:	mov    eax,0x0
  421dab:	jmp    421e2c <flatcc_verify_error_string@@Base+0x65f>
  421dad:	movzx  eax,WORD PTR [rbp-0x16]
  421db1:	mov    DWORD PTR [rbp-0x14],eax
  421db4:	mov    eax,DWORD PTR [rbp-0x14]
  421db7:	add    eax,0x4
  421dba:	mov    DWORD PTR [rbp-0x10],eax
  421dbd:	mov    rax,QWORD PTR [rbp-0x28]
  421dc1:	movzx  eax,WORD PTR [rax+0x1c]
  421dc5:	movzx  eax,ax
  421dc8:	cmp    DWORD PTR [rbp-0x10],eax
  421dcb:	setbe  al
  421dce:	movzx  eax,al
  421dd1:	mov    DWORD PTR [rbp-0xc],eax
  421dd4:	cmp    DWORD PTR [rbp-0xc],0x0
  421dd8:	jne    421de1 <flatcc_verify_error_string@@Base+0x614>
  421dda:	mov    eax,0xd
  421ddf:	jmp    421e2c <flatcc_verify_error_string@@Base+0x65f>
  421de1:	mov    DWORD PTR [rbp-0x8],0x1
  421de8:	cmp    DWORD PTR [rbp-0x8],0x0
  421dec:	jne    421df5 <flatcc_verify_error_string@@Base+0x628>
  421dee:	mov    eax,0xe
  421df3:	jmp    421e2c <flatcc_verify_error_string@@Base+0x65f>
  421df5:	mov    rax,QWORD PTR [rbp-0x28]
  421df9:	mov    eax,DWORD PTR [rax+0x18]
  421dfc:	add    DWORD PTR [rbp-0x14],eax
  421dff:	mov    eax,DWORD PTR [rbp-0x14]
  421e02:	and    eax,0x3
  421e05:	test   rax,rax
  421e08:	sete   al
  421e0b:	movzx  eax,al
  421e0e:	mov    DWORD PTR [rbp-0x4],eax
  421e11:	cmp    DWORD PTR [rbp-0x4],0x0
  421e15:	jne    421e1e <flatcc_verify_error_string@@Base+0x651>
  421e17:	mov    eax,0xc
  421e1c:	jmp    421e2c <flatcc_verify_error_string@@Base+0x65f>
  421e1e:	mov    rax,QWORD PTR [rbp-0x38]
  421e22:	mov    edx,DWORD PTR [rbp-0x14]
  421e25:	mov    DWORD PTR [rax],edx
  421e27:	mov    eax,0x0
  421e2c:	leave  
  421e2d:	ret    
  421e2e:	push   rbp
  421e2f:	mov    rbp,rsp
  421e32:	sub    rsp,0x28
  421e36:	mov    QWORD PTR [rbp-0x18],rdi
  421e3a:	mov    DWORD PTR [rbp-0x1c],esi
  421e3d:	mov    DWORD PTR [rbp-0x20],edx
  421e40:	mov    DWORD PTR [rbp-0x24],ecx
  421e43:	mov    edx,DWORD PTR [rbp-0x24]
  421e46:	mov    ecx,DWORD PTR [rbp-0x20]
  421e49:	mov    eax,DWORD PTR [rbp-0x1c]
  421e4c:	mov    esi,ecx
  421e4e:	mov    edi,eax
  421e50:	call   421a65 <flatcc_verify_error_string@@Base+0x298>
  421e55:	mov    DWORD PTR [rbp-0x10],eax
  421e58:	cmp    DWORD PTR [rbp-0x10],0x0
  421e5c:	jne    421e65 <flatcc_verify_error_string@@Base+0x698>
  421e5e:	mov    eax,0x11
  421e63:	jmp    421ed6 <flatcc_verify_error_string@@Base+0x709>
  421e65:	mov    eax,DWORD PTR [rbp-0x24]
  421e68:	add    DWORD PTR [rbp-0x20],eax
  421e6b:	mov    edx,DWORD PTR [rbp-0x20]
  421e6e:	mov    rax,QWORD PTR [rbp-0x18]
  421e72:	mov    esi,edx
  421e74:	mov    rdi,rax
  421e77:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  421e7c:	mov    DWORD PTR [rbp-0xc],eax
  421e7f:	add    DWORD PTR [rbp-0x20],0x4
  421e83:	mov    eax,DWORD PTR [rbp-0x1c]
  421e86:	sub    eax,DWORD PTR [rbp-0x20]
  421e89:	mov    edx,DWORD PTR [rbp-0xc]
  421e8c:	inc    edx
  421e8e:	cmp    eax,edx
  421e90:	setae  al
  421e93:	movzx  eax,al
  421e96:	mov    DWORD PTR [rbp-0x8],eax
  421e99:	cmp    DWORD PTR [rbp-0x8],0x0
  421e9d:	jne    421ea6 <flatcc_verify_error_string@@Base+0x6d9>
  421e9f:	mov    eax,0x8
  421ea4:	jmp    421ed6 <flatcc_verify_error_string@@Base+0x709>
  421ea6:	mov    edx,DWORD PTR [rbp-0x20]
  421ea9:	mov    eax,DWORD PTR [rbp-0xc]
  421eac:	add    rdx,rax
  421eaf:	mov    rax,QWORD PTR [rbp-0x18]
  421eb3:	add    rax,rdx
  421eb6:	movzx  eax,BYTE PTR [rax]
  421eb9:	test   al,al
  421ebb:	sete   al
  421ebe:	movzx  eax,al
  421ec1:	mov    DWORD PTR [rbp-0x4],eax
  421ec4:	cmp    DWORD PTR [rbp-0x4],0x0
  421ec8:	jne    421ed1 <flatcc_verify_error_string@@Base+0x704>
  421eca:	mov    eax,0x7
  421ecf:	jmp    421ed6 <flatcc_verify_error_string@@Base+0x709>
  421ed1:	mov    eax,0x0
  421ed6:	leave  
  421ed7:	ret    
  421ed8:	push   rbp
  421ed9:	mov    rbp,rsp
  421edc:	sub    rsp,0x30
  421ee0:	mov    QWORD PTR [rbp-0x18],rdi
  421ee4:	mov    DWORD PTR [rbp-0x1c],esi
  421ee7:	mov    DWORD PTR [rbp-0x20],edx
  421eea:	mov    DWORD PTR [rbp-0x24],ecx
  421eed:	mov    DWORD PTR [rbp-0x28],r8d
  421ef1:	mov    eax,r9d
  421ef4:	mov    WORD PTR [rbp-0x2c],ax
  421ef8:	movzx  ecx,WORD PTR [rbp-0x2c]
  421efc:	mov    edx,DWORD PTR [rbp-0x24]
  421eff:	mov    esi,DWORD PTR [rbp-0x20]
  421f02:	mov    eax,DWORD PTR [rbp-0x1c]
  421f05:	mov    edi,eax
  421f07:	call   421aad <flatcc_verify_error_string@@Base+0x2e0>
  421f0c:	mov    DWORD PTR [rbp-0x10],eax
  421f0f:	cmp    DWORD PTR [rbp-0x10],0x0
  421f13:	jne    421f1c <flatcc_verify_error_string@@Base+0x74f>
  421f15:	mov    eax,0x10
  421f1a:	jmp    421f82 <flatcc_verify_error_string@@Base+0x7b5>
  421f1c:	mov    eax,DWORD PTR [rbp-0x24]
  421f1f:	add    DWORD PTR [rbp-0x20],eax
  421f22:	mov    edx,DWORD PTR [rbp-0x20]
  421f25:	mov    rax,QWORD PTR [rbp-0x18]
  421f29:	mov    esi,edx
  421f2b:	mov    rdi,rax
  421f2e:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  421f33:	mov    DWORD PTR [rbp-0xc],eax
  421f36:	add    DWORD PTR [rbp-0x20],0x4
  421f3a:	mov    eax,DWORD PTR [rbp-0xc]
  421f3d:	cmp    eax,DWORD PTR [rbp+0x10]
  421f40:	setbe  al
  421f43:	movzx  eax,al
  421f46:	mov    DWORD PTR [rbp-0x8],eax
  421f49:	cmp    DWORD PTR [rbp-0x8],0x0
  421f4d:	jne    421f56 <flatcc_verify_error_string@@Base+0x789>
  421f4f:	mov    eax,0x19
  421f54:	jmp    421f82 <flatcc_verify_error_string@@Base+0x7b5>
  421f56:	mov    eax,DWORD PTR [rbp-0x1c]
  421f59:	sub    eax,DWORD PTR [rbp-0x20]
  421f5c:	mov    edx,eax
  421f5e:	mov    eax,DWORD PTR [rbp-0xc]
  421f61:	imul   eax,DWORD PTR [rbp-0x28]
  421f65:	cmp    edx,eax
  421f67:	setae  al
  421f6a:	movzx  eax,al
  421f6d:	mov    DWORD PTR [rbp-0x4],eax
  421f70:	cmp    DWORD PTR [rbp-0x4],0x0
  421f74:	jne    421f7d <flatcc_verify_error_string@@Base+0x7b0>
  421f76:	mov    eax,0x1a
  421f7b:	jmp    421f82 <flatcc_verify_error_string@@Base+0x7b5>
  421f7d:	mov    eax,0x0
  421f82:	leave  
  421f83:	ret    
  421f84:	push   rbp
  421f85:	mov    rbp,rsp
  421f88:	sub    rsp,0x28
  421f8c:	mov    QWORD PTR [rbp-0x18],rdi
  421f90:	mov    DWORD PTR [rbp-0x1c],esi
  421f93:	mov    DWORD PTR [rbp-0x20],edx
  421f96:	mov    DWORD PTR [rbp-0x24],ecx
  421f99:	mov    ecx,DWORD PTR [rbp-0x24]
  421f9c:	mov    edx,DWORD PTR [rbp-0x20]
  421f9f:	mov    esi,DWORD PTR [rbp-0x1c]
  421fa2:	mov    rax,QWORD PTR [rbp-0x18]
  421fa6:	push   0x3fffffff
  421fab:	mov    r9d,0x4
  421fb1:	mov    r8d,0x4
  421fb7:	mov    rdi,rax
  421fba:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  421fbf:	add    rsp,0x8
  421fc3:	test   eax,eax
  421fc5:	je     421ff6 <flatcc_verify_error_string@@Base+0x829>
  421fc7:	mov    ecx,DWORD PTR [rbp-0x24]
  421fca:	mov    edx,DWORD PTR [rbp-0x20]
  421fcd:	mov    esi,DWORD PTR [rbp-0x1c]
  421fd0:	mov    rax,QWORD PTR [rbp-0x18]
  421fd4:	push   0x3fffffff
  421fd9:	mov    r9d,0x4
  421fdf:	mov    r8d,0x4
  421fe5:	mov    rdi,rax
  421fe8:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  421fed:	add    rsp,0x8
  421ff1:	jmp    422081 <flatcc_verify_error_string@@Base+0x8b4>
  421ff6:	mov    eax,DWORD PTR [rbp-0x24]
  421ff9:	add    DWORD PTR [rbp-0x20],eax
  421ffc:	mov    edx,DWORD PTR [rbp-0x20]
  421fff:	mov    rax,QWORD PTR [rbp-0x18]
  422003:	mov    esi,edx
  422005:	mov    rdi,rax
  422008:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  42200d:	mov    DWORD PTR [rbp-0x4],eax
  422010:	add    DWORD PTR [rbp-0x20],0x4
  422014:	mov    DWORD PTR [rbp-0x8],0x0
  42201b:	jmp    422074 <flatcc_verify_error_string@@Base+0x8a7>
  42201d:	mov    edx,DWORD PTR [rbp-0x20]
  422020:	mov    rax,QWORD PTR [rbp-0x18]
  422024:	mov    esi,edx
  422026:	mov    rdi,rax
  422029:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  42202e:	mov    ecx,eax
  422030:	mov    edx,DWORD PTR [rbp-0x20]
  422033:	mov    esi,DWORD PTR [rbp-0x1c]
  422036:	mov    rax,QWORD PTR [rbp-0x18]
  42203a:	mov    rdi,rax
  42203d:	call   421e2e <flatcc_verify_error_string@@Base+0x661>
  422042:	test   eax,eax
  422044:	je     42206d <flatcc_verify_error_string@@Base+0x8a0>
  422046:	mov    edx,DWORD PTR [rbp-0x20]
  422049:	mov    rax,QWORD PTR [rbp-0x18]
  42204d:	mov    esi,edx
  42204f:	mov    rdi,rax
  422052:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422057:	mov    ecx,eax
  422059:	mov    edx,DWORD PTR [rbp-0x20]
  42205c:	mov    esi,DWORD PTR [rbp-0x1c]
  42205f:	mov    rax,QWORD PTR [rbp-0x18]
  422063:	mov    rdi,rax
  422066:	call   421e2e <flatcc_verify_error_string@@Base+0x661>
  42206b:	jmp    422081 <flatcc_verify_error_string@@Base+0x8b4>
  42206d:	inc    DWORD PTR [rbp-0x8]
  422070:	add    DWORD PTR [rbp-0x20],0x4
  422074:	mov    eax,DWORD PTR [rbp-0x8]
  422077:	cmp    eax,DWORD PTR [rbp-0x4]
  42207a:	jb     42201d <flatcc_verify_error_string@@Base+0x850>
  42207c:	mov    eax,0x0
  422081:	leave  
  422082:	ret    
  422083:	push   rbp
  422084:	mov    rbp,rsp
  422087:	push   rbx
  422088:	sub    rsp,0x88
  42208f:	mov    QWORD PTR [rbp-0x78],rdi
  422093:	mov    DWORD PTR [rbp-0x7c],esi
  422096:	mov    DWORD PTR [rbp-0x80],edx
  422099:	mov    DWORD PTR [rbp-0x84],ecx
  42209f:	mov    DWORD PTR [rbp-0x88],r8d
  4220a6:	mov    QWORD PTR [rbp-0x90],r9
  4220ad:	mov    rax,QWORD PTR fs:0x28
  4220b6:	mov    QWORD PTR [rbp-0x18],rax
  4220ba:	xor    eax,eax
  4220bc:	mov    eax,DWORD PTR [rbp-0x88]
  4220c2:	dec    eax
  4220c4:	mov    DWORD PTR [rbp-0x34],eax
  4220c7:	mov    eax,DWORD PTR [rbp-0x34]
  4220ca:	mov    DWORD PTR [rbp-0x68],eax
  4220cd:	cmp    DWORD PTR [rbp-0x68],0x0
  4220d1:	jne    4220dd <flatcc_verify_error_string@@Base+0x910>
  4220d3:	mov    eax,0x3
  4220d8:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  4220dd:	mov    edx,DWORD PTR [rbp-0x84]
  4220e3:	mov    ecx,DWORD PTR [rbp-0x80]
  4220e6:	mov    eax,DWORD PTR [rbp-0x7c]
  4220e9:	mov    esi,ecx
  4220eb:	mov    edi,eax
  4220ed:	call   421a65 <flatcc_verify_error_string@@Base+0x298>
  4220f2:	mov    DWORD PTR [rbp-0x64],eax
  4220f5:	cmp    DWORD PTR [rbp-0x64],0x0
  4220f9:	jne    422105 <flatcc_verify_error_string@@Base+0x938>
  4220fb:	mov    eax,0xf
  422100:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  422105:	mov    edx,DWORD PTR [rbp-0x80]
  422108:	mov    eax,DWORD PTR [rbp-0x84]
  42210e:	add    eax,edx
  422110:	mov    DWORD PTR [rbp-0x28],eax
  422113:	mov    ebx,DWORD PTR [rbp-0x28]
  422116:	mov    edx,DWORD PTR [rbp-0x28]
  422119:	mov    rax,QWORD PTR [rbp-0x78]
  42211d:	mov    esi,edx
  42211f:	mov    rdi,rax
  422122:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422127:	sub    ebx,eax
  422129:	mov    eax,ebx
  42212b:	mov    DWORD PTR [rbp-0x60],eax
  42212e:	mov    eax,DWORD PTR [rbp-0x60]
  422131:	test   eax,eax
  422133:	js     422147 <flatcc_verify_error_string@@Base+0x97a>
  422135:	mov    eax,DWORD PTR [rbp-0x60]
  422138:	and    eax,0x1
  42213b:	test   rax,rax
  42213e:	jne    422147 <flatcc_verify_error_string@@Base+0x97a>
  422140:	mov    eax,0x1
  422145:	jmp    42214c <flatcc_verify_error_string@@Base+0x97f>
  422147:	mov    eax,0x0
  42214c:	mov    DWORD PTR [rbp-0x5c],eax
  42214f:	cmp    DWORD PTR [rbp-0x5c],0x0
  422153:	jne    42215f <flatcc_verify_error_string@@Base+0x992>
  422155:	mov    eax,0x1d
  42215a:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  42215f:	mov    eax,DWORD PTR [rbp-0x60]
  422162:	lea    rdx,[rax+0x2]
  422166:	mov    eax,DWORD PTR [rbp-0x7c]
  422169:	cmp    rdx,rax
  42216c:	setbe  al
  42216f:	movzx  eax,al
  422172:	mov    DWORD PTR [rbp-0x58],eax
  422175:	cmp    DWORD PTR [rbp-0x58],0x0
  422179:	jne    422185 <flatcc_verify_error_string@@Base+0x9b8>
  42217b:	mov    eax,0x1b
  422180:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  422185:	mov    edx,DWORD PTR [rbp-0x60]
  422188:	mov    rax,QWORD PTR [rbp-0x78]
  42218c:	mov    esi,edx
  42218e:	mov    rdi,rax
  422191:	call   421a42 <flatcc_verify_error_string@@Base+0x275>
  422196:	mov    WORD PTR [rbp-0x22],ax
  42219a:	movzx  eax,WORD PTR [rbp-0x22]
  42219e:	movzx  edx,ax
  4221a1:	mov    eax,DWORD PTR [rbp-0x60]
  4221a4:	add    eax,edx
  4221a6:	mov    DWORD PTR [rbp-0x54],eax
  4221a9:	mov    eax,DWORD PTR [rbp-0x54]
  4221ac:	cmp    eax,DWORD PTR [rbp-0x7c]
  4221af:	ja     4221c7 <flatcc_verify_error_string@@Base+0x9fa>
  4221b1:	movzx  eax,WORD PTR [rbp-0x22]
  4221b5:	movzx  eax,ax
  4221b8:	and    eax,0x1
  4221bb:	test   rax,rax
  4221be:	jne    4221c7 <flatcc_verify_error_string@@Base+0x9fa>
  4221c0:	mov    eax,0x1
  4221c5:	jmp    4221cc <flatcc_verify_error_string@@Base+0x9ff>
  4221c7:	mov    eax,0x0
  4221cc:	mov    DWORD PTR [rbp-0x50],eax
  4221cf:	cmp    DWORD PTR [rbp-0x50],0x0
  4221d3:	jne    4221df <flatcc_verify_error_string@@Base+0xa12>
  4221d5:	mov    eax,0x1e
  4221da:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  4221df:	mov    DWORD PTR [rbp-0x4c],0x1
  4221e6:	cmp    DWORD PTR [rbp-0x4c],0x0
  4221ea:	jne    4221f6 <flatcc_verify_error_string@@Base+0xa29>
  4221ec:	mov    eax,0x1f
  4221f1:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  4221f6:	movzx  eax,WORD PTR [rbp-0x22]
  4221fa:	cmp    ax,0x3
  4221fe:	seta   al
  422201:	movzx  eax,al
  422204:	mov    DWORD PTR [rbp-0x48],eax
  422207:	cmp    DWORD PTR [rbp-0x48],0x0
  42220b:	jne    422214 <flatcc_verify_error_string@@Base+0xa47>
  42220d:	mov    eax,0x1c
  422212:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  422214:	mov    eax,DWORD PTR [rbp-0x60]
  422217:	lea    edx,[rax+0x2]
  42221a:	mov    rax,QWORD PTR [rbp-0x78]
  42221e:	mov    esi,edx
  422220:	mov    rdi,rax
  422223:	call   421a42 <flatcc_verify_error_string@@Base+0x275>
  422228:	mov    WORD PTR [rbp-0x24],ax
  42222c:	mov    eax,DWORD PTR [rbp-0x28]
  42222f:	mov    edx,DWORD PTR [rbp-0x7c]
  422232:	sub    edx,eax
  422234:	movzx  eax,WORD PTR [rbp-0x24]
  422238:	movzx  eax,ax
  42223b:	cmp    edx,eax
  42223d:	setae  al
  422240:	movzx  eax,al
  422243:	mov    DWORD PTR [rbp-0x44],eax
  422246:	cmp    DWORD PTR [rbp-0x44],0x0
  42224a:	jne    422253 <flatcc_verify_error_string@@Base+0xa86>
  42224c:	mov    eax,0x14
  422251:	jmp    42227f <flatcc_verify_error_string@@Base+0xab2>
  422253:	mov    edx,DWORD PTR [rbp-0x60]
  422256:	mov    rax,QWORD PTR [rbp-0x78]
  42225a:	add    rax,rdx
  42225d:	mov    QWORD PTR [rbp-0x30],rax
  422261:	mov    rax,QWORD PTR [rbp-0x78]
  422265:	mov    QWORD PTR [rbp-0x40],rax
  422269:	mov    eax,DWORD PTR [rbp-0x7c]
  42226c:	mov    DWORD PTR [rbp-0x38],eax
  42226f:	lea    rdx,[rbp-0x40]
  422273:	mov    rax,QWORD PTR [rbp-0x90]
  42227a:	mov    rdi,rdx
  42227d:	call   rax
  42227f:	mov    rcx,QWORD PTR [rbp-0x18]
  422283:	xor    rcx,QWORD PTR fs:0x28
  42228c:	je     422293 <flatcc_verify_error_string@@Base+0xac6>
  42228e:	call   4061a0 <__stack_chk_fail@plt>
  422293:	add    rsp,0x88
  42229a:	pop    rbx
  42229b:	pop    rbp
  42229c:	ret    
  42229d:	push   rbp
  42229e:	mov    rbp,rsp
  4222a1:	sub    rsp,0x30
  4222a5:	mov    QWORD PTR [rbp-0x18],rdi
  4222a9:	mov    DWORD PTR [rbp-0x1c],esi
  4222ac:	mov    DWORD PTR [rbp-0x20],edx
  4222af:	mov    DWORD PTR [rbp-0x24],ecx
  4222b2:	mov    DWORD PTR [rbp-0x28],r8d
  4222b6:	mov    QWORD PTR [rbp-0x30],r9
  4222ba:	mov    eax,DWORD PTR [rbp-0x28]
  4222bd:	lea    edx,[rax-0x1]
  4222c0:	mov    DWORD PTR [rbp-0x28],edx
  4222c3:	test   eax,eax
  4222c5:	setg   al
  4222c8:	movzx  eax,al
  4222cb:	mov    DWORD PTR [rbp-0x8],eax
  4222ce:	cmp    DWORD PTR [rbp-0x8],0x0
  4222d2:	jne    4222de <flatcc_verify_error_string@@Base+0xb11>
  4222d4:	mov    eax,0x3
  4222d9:	jmp    4223ec <flatcc_verify_error_string@@Base+0xc1f>
  4222de:	mov    ecx,DWORD PTR [rbp-0x24]
  4222e1:	mov    edx,DWORD PTR [rbp-0x20]
  4222e4:	mov    esi,DWORD PTR [rbp-0x1c]
  4222e7:	mov    rax,QWORD PTR [rbp-0x18]
  4222eb:	push   0x3fffffff
  4222f0:	mov    r9d,0x4
  4222f6:	mov    r8d,0x4
  4222fc:	mov    rdi,rax
  4222ff:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  422304:	add    rsp,0x8
  422308:	test   eax,eax
  42230a:	je     42233b <flatcc_verify_error_string@@Base+0xb6e>
  42230c:	mov    ecx,DWORD PTR [rbp-0x24]
  42230f:	mov    edx,DWORD PTR [rbp-0x20]
  422312:	mov    esi,DWORD PTR [rbp-0x1c]
  422315:	mov    rax,QWORD PTR [rbp-0x18]
  422319:	push   0x3fffffff
  42231e:	mov    r9d,0x4
  422324:	mov    r8d,0x4
  42232a:	mov    rdi,rax
  42232d:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  422332:	add    rsp,0x8
  422336:	jmp    4223ec <flatcc_verify_error_string@@Base+0xc1f>
  42233b:	mov    eax,DWORD PTR [rbp-0x24]
  42233e:	add    DWORD PTR [rbp-0x20],eax
  422341:	mov    edx,DWORD PTR [rbp-0x20]
  422344:	mov    rax,QWORD PTR [rbp-0x18]
  422348:	mov    esi,edx
  42234a:	mov    rdi,rax
  42234d:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422352:	mov    DWORD PTR [rbp-0x4],eax
  422355:	add    DWORD PTR [rbp-0x20],0x4
  422359:	mov    DWORD PTR [rbp-0xc],0x0
  422360:	jmp    4223db <flatcc_verify_error_string@@Base+0xc0e>
  422362:	mov    edx,DWORD PTR [rbp-0x20]
  422365:	mov    rax,QWORD PTR [rbp-0x18]
  422369:	mov    esi,edx
  42236b:	mov    rdi,rax
  42236e:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422373:	mov    r10d,eax
  422376:	mov    rdi,QWORD PTR [rbp-0x30]
  42237a:	mov    ecx,DWORD PTR [rbp-0x28]
  42237d:	mov    edx,DWORD PTR [rbp-0x20]
  422380:	mov    esi,DWORD PTR [rbp-0x1c]
  422383:	mov    rax,QWORD PTR [rbp-0x18]
  422387:	mov    r9,rdi
  42238a:	mov    r8d,ecx
  42238d:	mov    ecx,r10d
  422390:	mov    rdi,rax
  422393:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  422398:	test   eax,eax
  42239a:	je     4223d4 <flatcc_verify_error_string@@Base+0xc07>
  42239c:	mov    edx,DWORD PTR [rbp-0x20]
  42239f:	mov    rax,QWORD PTR [rbp-0x18]
  4223a3:	mov    esi,edx
  4223a5:	mov    rdi,rax
  4223a8:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4223ad:	mov    r10d,eax
  4223b0:	mov    rdi,QWORD PTR [rbp-0x30]
  4223b4:	mov    ecx,DWORD PTR [rbp-0x28]
  4223b7:	mov    edx,DWORD PTR [rbp-0x20]
  4223ba:	mov    esi,DWORD PTR [rbp-0x1c]
  4223bd:	mov    rax,QWORD PTR [rbp-0x18]
  4223c1:	mov    r9,rdi
  4223c4:	mov    r8d,ecx
  4223c7:	mov    ecx,r10d
  4223ca:	mov    rdi,rax
  4223cd:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  4223d2:	jmp    4223ec <flatcc_verify_error_string@@Base+0xc1f>
  4223d4:	inc    DWORD PTR [rbp-0xc]
  4223d7:	add    DWORD PTR [rbp-0x20],0x4
  4223db:	mov    eax,DWORD PTR [rbp-0xc]
  4223de:	cmp    eax,DWORD PTR [rbp-0x4]
  4223e1:	jb     422362 <flatcc_verify_error_string@@Base+0xb95>
  4223e7:	mov    eax,0x0
  4223ec:	leave  
  4223ed:	ret    
  4223ee:	push   rbp
  4223ef:	mov    rbp,rsp
  4223f2:	add    rsp,0xffffffffffffff80
  4223f6:	mov    QWORD PTR [rbp-0x58],rdi
  4223fa:	mov    DWORD PTR [rbp-0x5c],esi
  4223fd:	mov    DWORD PTR [rbp-0x60],edx
  422400:	mov    DWORD PTR [rbp-0x64],ecx
  422403:	mov    DWORD PTR [rbp-0x68],r8d
  422407:	mov    QWORD PTR [rbp-0x70],r9
  42240b:	mov    rax,QWORD PTR [rbp+0x18]
  42240f:	mov    QWORD PTR [rbp-0x78],rax
  422413:	mov    rax,QWORD PTR fs:0x28
  42241c:	mov    QWORD PTR [rbp-0x8],rax
  422420:	xor    eax,eax
  422422:	mov    eax,DWORD PTR [rbp+0x10]
  422425:	lea    edx,[rax-0x1]
  422428:	mov    DWORD PTR [rbp+0x10],edx
  42242b:	test   eax,eax
  42242d:	setg   al
  422430:	movzx  eax,al
  422433:	mov    DWORD PTR [rbp-0x48],eax
  422436:	cmp    DWORD PTR [rbp-0x48],0x0
  42243a:	jne    422446 <flatcc_verify_error_string@@Base+0xc79>
  42243c:	mov    eax,0x3
  422441:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  422446:	mov    ecx,DWORD PTR [rbp-0x64]
  422449:	mov    edx,DWORD PTR [rbp-0x60]
  42244c:	mov    esi,DWORD PTR [rbp-0x5c]
  42244f:	mov    rax,QWORD PTR [rbp-0x58]
  422453:	push   0x3fffffff
  422458:	mov    r9d,0x4
  42245e:	mov    r8d,0x4
  422464:	mov    rdi,rax
  422467:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  42246c:	add    rsp,0x8
  422470:	test   eax,eax
  422472:	je     4224a3 <flatcc_verify_error_string@@Base+0xcd6>
  422474:	mov    ecx,DWORD PTR [rbp-0x64]
  422477:	mov    edx,DWORD PTR [rbp-0x60]
  42247a:	mov    esi,DWORD PTR [rbp-0x5c]
  42247d:	mov    rax,QWORD PTR [rbp-0x58]
  422481:	push   0x3fffffff
  422486:	mov    r9d,0x4
  42248c:	mov    r8d,0x4
  422492:	mov    rdi,rax
  422495:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  42249a:	add    rsp,0x8
  42249e:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  4224a3:	mov    eax,DWORD PTR [rbp-0x64]
  4224a6:	add    DWORD PTR [rbp-0x60],eax
  4224a9:	mov    edx,DWORD PTR [rbp-0x60]
  4224ac:	mov    rax,QWORD PTR [rbp-0x58]
  4224b0:	mov    esi,edx
  4224b2:	mov    rdi,rax
  4224b5:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4224ba:	mov    DWORD PTR [rbp-0x44],eax
  4224bd:	mov    eax,DWORD PTR [rbp-0x44]
  4224c0:	cmp    eax,DWORD PTR [rbp-0x68]
  4224c3:	sete   al
  4224c6:	movzx  eax,al
  4224c9:	mov    DWORD PTR [rbp-0x40],eax
  4224cc:	cmp    DWORD PTR [rbp-0x40],0x0
  4224d0:	jne    4224dc <flatcc_verify_error_string@@Base+0xd0f>
  4224d2:	mov    eax,0x22
  4224d7:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  4224dc:	add    DWORD PTR [rbp-0x60],0x4
  4224e0:	mov    rax,QWORD PTR [rbp-0x58]
  4224e4:	mov    QWORD PTR [rbp-0x30],rax
  4224e8:	mov    eax,DWORD PTR [rbp-0x5c]
  4224eb:	mov    DWORD PTR [rbp-0x28],eax
  4224ee:	mov    eax,DWORD PTR [rbp+0x10]
  4224f1:	mov    DWORD PTR [rbp-0x24],eax
  4224f4:	mov    DWORD PTR [rbp-0x4c],0x0
  4224fb:	jmp    4225a7 <flatcc_verify_error_string@@Base+0xdda>
  422500:	mov    edx,DWORD PTR [rbp-0x60]
  422503:	mov    rax,QWORD PTR [rbp-0x58]
  422507:	mov    esi,edx
  422509:	mov    rdi,rax
  42250c:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422511:	mov    DWORD PTR [rbp-0x3c],eax
  422514:	cmp    DWORD PTR [rbp-0x3c],0x0
  422518:	jne    42253f <flatcc_verify_error_string@@Base+0xd72>
  42251a:	mov    edx,DWORD PTR [rbp-0x4c]
  42251d:	mov    rax,QWORD PTR [rbp-0x70]
  422521:	add    rax,rdx
  422524:	movzx  eax,BYTE PTR [rax]
  422527:	test   al,al
  422529:	sete   al
  42252c:	movzx  eax,al
  42252f:	mov    DWORD PTR [rbp-0x38],eax
  422532:	cmp    DWORD PTR [rbp-0x38],0x0
  422536:	jne    4225a0 <flatcc_verify_error_string@@Base+0xdd3>
  422538:	mov    eax,0x20
  42253d:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  42253f:	mov    edx,DWORD PTR [rbp-0x4c]
  422542:	mov    rax,QWORD PTR [rbp-0x70]
  422546:	add    rax,rdx
  422549:	movzx  eax,BYTE PTR [rax]
  42254c:	test   al,al
  42254e:	setne  al
  422551:	movzx  eax,al
  422554:	mov    DWORD PTR [rbp-0x34],eax
  422557:	cmp    DWORD PTR [rbp-0x34],0x0
  42255b:	jne    422564 <flatcc_verify_error_string@@Base+0xd97>
  42255d:	mov    eax,0x21
  422562:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  422564:	mov    edx,DWORD PTR [rbp-0x4c]
  422567:	mov    rax,QWORD PTR [rbp-0x70]
  42256b:	add    rax,rdx
  42256e:	movzx  eax,BYTE PTR [rax]
  422571:	mov    BYTE PTR [rbp-0x20],al
  422574:	mov    eax,DWORD PTR [rbp-0x60]
  422577:	mov    DWORD PTR [rbp-0x1c],eax
  42257a:	mov    eax,DWORD PTR [rbp-0x3c]
  42257d:	mov    DWORD PTR [rbp-0x18],eax
  422580:	lea    rdx,[rbp-0x30]
  422584:	mov    rax,QWORD PTR [rbp-0x78]
  422588:	mov    rdi,rdx
  42258b:	call   rax
  42258d:	test   eax,eax
  42258f:	je     4225a0 <flatcc_verify_error_string@@Base+0xdd3>
  422591:	lea    rdx,[rbp-0x30]
  422595:	mov    rax,QWORD PTR [rbp-0x78]
  422599:	mov    rdi,rdx
  42259c:	call   rax
  42259e:	jmp    4225b8 <flatcc_verify_error_string@@Base+0xdeb>
  4225a0:	inc    DWORD PTR [rbp-0x4c]
  4225a3:	add    DWORD PTR [rbp-0x60],0x4
  4225a7:	mov    eax,DWORD PTR [rbp-0x4c]
  4225aa:	cmp    eax,DWORD PTR [rbp-0x44]
  4225ad:	jb     422500 <flatcc_verify_error_string@@Base+0xd33>
  4225b3:	mov    eax,0x0
  4225b8:	mov    rcx,QWORD PTR [rbp-0x8]
  4225bc:	xor    rcx,QWORD PTR fs:0x28
  4225c5:	je     4225cc <flatcc_verify_error_string@@Base+0xdff>
  4225c7:	call   4061a0 <__stack_chk_fail@plt>
  4225cc:	leave  
  4225cd:	ret    

00000000004225ce <flatcc_verify_field@@Base>:
  4225ce:	endbr64 
  4225d2:	push   rbp
  4225d3:	mov    rbp,rsp
  4225d6:	sub    rsp,0x18
  4225da:	mov    QWORD PTR [rbp-0x8],rdi
  4225de:	mov    QWORD PTR [rbp-0x18],rdx
  4225e2:	mov    eax,ecx
  4225e4:	mov    edx,esi
  4225e6:	mov    WORD PTR [rbp-0xc],dx
  4225ea:	mov    WORD PTR [rbp-0x10],ax
  4225ee:	movzx  edx,WORD PTR [rbp-0x10]
  4225f2:	mov    rax,QWORD PTR [rbp-0x18]
  4225f6:	mov    ecx,eax
  4225f8:	movzx  esi,WORD PTR [rbp-0xc]
  4225fc:	mov    rax,QWORD PTR [rbp-0x8]
  422600:	mov    r8d,edx
  422603:	mov    edx,0x0
  422608:	mov    rdi,rax
  42260b:	call   421c61 <flatcc_verify_error_string@@Base+0x494>
  422610:	test   eax,eax
  422612:	je     422638 <flatcc_verify_field@@Base+0x6a>
  422614:	movzx  edx,WORD PTR [rbp-0x10]
  422618:	mov    rax,QWORD PTR [rbp-0x18]
  42261c:	mov    ecx,eax
  42261e:	movzx  esi,WORD PTR [rbp-0xc]
  422622:	mov    rax,QWORD PTR [rbp-0x8]
  422626:	mov    r8d,edx
  422629:	mov    edx,0x0
  42262e:	mov    rdi,rax
  422631:	call   421c61 <flatcc_verify_error_string@@Base+0x494>
  422636:	jmp    42263d <flatcc_verify_field@@Base+0x6f>
  422638:	mov    eax,0x0
  42263d:	leave  
  42263e:	ret    

000000000042263f <flatcc_verify_string_field@@Base>:
  42263f:	endbr64 
  422643:	push   rbp
  422644:	mov    rbp,rsp
  422647:	sub    rsp,0x20
  42264b:	mov    QWORD PTR [rbp-0x18],rdi
  42264f:	mov    eax,esi
  422651:	mov    DWORD PTR [rbp-0x20],edx
  422654:	mov    WORD PTR [rbp-0x1c],ax
  422658:	mov    rax,QWORD PTR fs:0x28
  422661:	mov    QWORD PTR [rbp-0x8],rax
  422665:	xor    eax,eax
  422667:	movzx  esi,WORD PTR [rbp-0x1c]
  42266b:	lea    rcx,[rbp-0x10]
  42266f:	mov    edx,DWORD PTR [rbp-0x20]
  422672:	mov    rax,QWORD PTR [rbp-0x18]
  422676:	mov    rdi,rax
  422679:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  42267e:	mov    DWORD PTR [rbp-0xc],eax
  422681:	cmp    DWORD PTR [rbp-0xc],0x0
  422685:	jne    42268e <flatcc_verify_string_field@@Base+0x4f>
  422687:	mov    eax,DWORD PTR [rbp-0x10]
  42268a:	test   eax,eax
  42268c:	jne    422693 <flatcc_verify_string_field@@Base+0x54>
  42268e:	mov    eax,DWORD PTR [rbp-0xc]
  422691:	jmp    4226c2 <flatcc_verify_string_field@@Base+0x83>
  422693:	mov    edx,DWORD PTR [rbp-0x10]
  422696:	mov    rax,QWORD PTR [rbp-0x18]
  42269a:	mov    rax,QWORD PTR [rax]
  42269d:	mov    esi,edx
  42269f:	mov    rdi,rax
  4226a2:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4226a7:	mov    ecx,eax
  4226a9:	mov    edx,DWORD PTR [rbp-0x10]
  4226ac:	mov    rax,QWORD PTR [rbp-0x18]
  4226b0:	mov    esi,DWORD PTR [rax+0x8]
  4226b3:	mov    rax,QWORD PTR [rbp-0x18]
  4226b7:	mov    rax,QWORD PTR [rax]
  4226ba:	mov    rdi,rax
  4226bd:	call   421e2e <flatcc_verify_error_string@@Base+0x661>
  4226c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4226c6:	xor    rdi,QWORD PTR fs:0x28
  4226cf:	je     4226d6 <flatcc_verify_string_field@@Base+0x97>
  4226d1:	call   4061a0 <__stack_chk_fail@plt>
  4226d6:	leave  
  4226d7:	ret    

00000000004226d8 <flatcc_verify_vector_field@@Base>:
  4226d8:	endbr64 
  4226dc:	push   rbp
  4226dd:	mov    rbp,rsp
  4226e0:	push   r13
  4226e2:	push   r12
  4226e4:	push   rbx
  4226e5:	sub    rsp,0x48
  4226e9:	mov    QWORD PTR [rbp-0x38],rdi
  4226ed:	mov    eax,esi
  4226ef:	mov    DWORD PTR [rbp-0x40],edx
  4226f2:	mov    QWORD PTR [rbp-0x48],rcx
  4226f6:	mov    edx,r8d
  4226f9:	mov    QWORD PTR [rbp-0x58],r9
  4226fd:	mov    WORD PTR [rbp-0x3c],ax
  422701:	mov    eax,edx
  422703:	mov    WORD PTR [rbp-0x4c],ax
  422707:	mov    rax,QWORD PTR fs:0x28
  422710:	mov    QWORD PTR [rbp-0x28],rax
  422714:	xor    eax,eax
  422716:	movzx  esi,WORD PTR [rbp-0x3c]
  42271a:	lea    rcx,[rbp-0x30]
  42271e:	mov    edx,DWORD PTR [rbp-0x40]
  422721:	mov    rax,QWORD PTR [rbp-0x38]
  422725:	mov    rdi,rax
  422728:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  42272d:	mov    DWORD PTR [rbp-0x2c],eax
  422730:	cmp    DWORD PTR [rbp-0x2c],0x0
  422734:	jne    42273d <flatcc_verify_vector_field@@Base+0x65>
  422736:	mov    eax,DWORD PTR [rbp-0x30]
  422739:	test   eax,eax
  42273b:	jne    422742 <flatcc_verify_vector_field@@Base+0x6a>
  42273d:	mov    eax,DWORD PTR [rbp-0x2c]
  422740:	jmp    42278f <flatcc_verify_vector_field@@Base+0xb7>
  422742:	mov    rax,QWORD PTR [rbp-0x58]
  422746:	mov    r12d,eax
  422749:	movzx  ebx,WORD PTR [rbp-0x4c]
  42274d:	mov    rax,QWORD PTR [rbp-0x48]
  422751:	mov    r13d,eax
  422754:	mov    edx,DWORD PTR [rbp-0x30]
  422757:	mov    rax,QWORD PTR [rbp-0x38]
  42275b:	mov    rax,QWORD PTR [rax]
  42275e:	mov    esi,edx
  422760:	mov    rdi,rax
  422763:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422768:	mov    ecx,eax
  42276a:	mov    edx,DWORD PTR [rbp-0x30]
  42276d:	mov    rax,QWORD PTR [rbp-0x38]
  422771:	mov    esi,DWORD PTR [rax+0x8]
  422774:	mov    rax,QWORD PTR [rbp-0x38]
  422778:	mov    rax,QWORD PTR [rax]
  42277b:	push   r12
  42277d:	mov    r9d,ebx
  422780:	mov    r8d,r13d
  422783:	mov    rdi,rax
  422786:	call   421ed8 <flatcc_verify_error_string@@Base+0x70b>
  42278b:	add    rsp,0x8
  42278f:	mov    rbx,QWORD PTR [rbp-0x28]
  422793:	xor    rbx,QWORD PTR fs:0x28
  42279c:	je     4227a3 <flatcc_verify_vector_field@@Base+0xcb>
  42279e:	call   4061a0 <__stack_chk_fail@plt>
  4227a3:	lea    rsp,[rbp-0x18]
  4227a7:	pop    rbx
  4227a8:	pop    r12
  4227aa:	pop    r13
  4227ac:	pop    rbp
  4227ad:	ret    

00000000004227ae <flatcc_verify_string_vector_field@@Base>:
  4227ae:	endbr64 
  4227b2:	push   rbp
  4227b3:	mov    rbp,rsp
  4227b6:	sub    rsp,0x20
  4227ba:	mov    QWORD PTR [rbp-0x18],rdi
  4227be:	mov    eax,esi
  4227c0:	mov    DWORD PTR [rbp-0x20],edx
  4227c3:	mov    WORD PTR [rbp-0x1c],ax
  4227c7:	mov    rax,QWORD PTR fs:0x28
  4227d0:	mov    QWORD PTR [rbp-0x8],rax
  4227d4:	xor    eax,eax
  4227d6:	movzx  esi,WORD PTR [rbp-0x1c]
  4227da:	lea    rcx,[rbp-0x10]
  4227de:	mov    edx,DWORD PTR [rbp-0x20]
  4227e1:	mov    rax,QWORD PTR [rbp-0x18]
  4227e5:	mov    rdi,rax
  4227e8:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  4227ed:	mov    DWORD PTR [rbp-0xc],eax
  4227f0:	cmp    DWORD PTR [rbp-0xc],0x0
  4227f4:	jne    4227fd <flatcc_verify_string_vector_field@@Base+0x4f>
  4227f6:	mov    eax,DWORD PTR [rbp-0x10]
  4227f9:	test   eax,eax
  4227fb:	jne    422802 <flatcc_verify_string_vector_field@@Base+0x54>
  4227fd:	mov    eax,DWORD PTR [rbp-0xc]
  422800:	jmp    422831 <flatcc_verify_string_vector_field@@Base+0x83>
  422802:	mov    edx,DWORD PTR [rbp-0x10]
  422805:	mov    rax,QWORD PTR [rbp-0x18]
  422809:	mov    rax,QWORD PTR [rax]
  42280c:	mov    esi,edx
  42280e:	mov    rdi,rax
  422811:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422816:	mov    ecx,eax
  422818:	mov    edx,DWORD PTR [rbp-0x10]
  42281b:	mov    rax,QWORD PTR [rbp-0x18]
  42281f:	mov    esi,DWORD PTR [rax+0x8]
  422822:	mov    rax,QWORD PTR [rbp-0x18]
  422826:	mov    rax,QWORD PTR [rax]
  422829:	mov    rdi,rax
  42282c:	call   421f84 <flatcc_verify_error_string@@Base+0x7b7>
  422831:	mov    rdi,QWORD PTR [rbp-0x8]
  422835:	xor    rdi,QWORD PTR fs:0x28
  42283e:	je     422845 <flatcc_verify_string_vector_field@@Base+0x97>
  422840:	call   4061a0 <__stack_chk_fail@plt>
  422845:	leave  
  422846:	ret    

0000000000422847 <flatcc_verify_table_field@@Base>:
  422847:	endbr64 
  42284b:	push   rbp
  42284c:	mov    rbp,rsp
  42284f:	push   rbx
  422850:	sub    rsp,0x38
  422854:	mov    QWORD PTR [rbp-0x28],rdi
  422858:	mov    eax,esi
  42285a:	mov    DWORD PTR [rbp-0x30],edx
  42285d:	mov    QWORD PTR [rbp-0x38],rcx
  422861:	mov    WORD PTR [rbp-0x2c],ax
  422865:	mov    rax,QWORD PTR fs:0x28
  42286e:	mov    QWORD PTR [rbp-0x18],rax
  422872:	xor    eax,eax
  422874:	movzx  esi,WORD PTR [rbp-0x2c]
  422878:	lea    rcx,[rbp-0x20]
  42287c:	mov    edx,DWORD PTR [rbp-0x30]
  42287f:	mov    rax,QWORD PTR [rbp-0x28]
  422883:	mov    rdi,rax
  422886:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  42288b:	mov    DWORD PTR [rbp-0x1c],eax
  42288e:	cmp    DWORD PTR [rbp-0x1c],0x0
  422892:	jne    42289b <flatcc_verify_table_field@@Base+0x54>
  422894:	mov    eax,DWORD PTR [rbp-0x20]
  422897:	test   eax,eax
  422899:	jne    4228a0 <flatcc_verify_table_field@@Base+0x59>
  42289b:	mov    eax,DWORD PTR [rbp-0x1c]
  42289e:	jmp    4228e2 <flatcc_verify_table_field@@Base+0x9b>
  4228a0:	mov    rax,QWORD PTR [rbp-0x28]
  4228a4:	mov    ebx,DWORD PTR [rax+0xc]
  4228a7:	mov    edx,DWORD PTR [rbp-0x20]
  4228aa:	mov    rax,QWORD PTR [rbp-0x28]
  4228ae:	mov    rax,QWORD PTR [rax]
  4228b1:	mov    esi,edx
  4228b3:	mov    rdi,rax
  4228b6:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4228bb:	mov    edi,eax
  4228bd:	mov    edx,DWORD PTR [rbp-0x20]
  4228c0:	mov    rax,QWORD PTR [rbp-0x28]
  4228c4:	mov    esi,DWORD PTR [rax+0x8]
  4228c7:	mov    rax,QWORD PTR [rbp-0x28]
  4228cb:	mov    rax,QWORD PTR [rax]
  4228ce:	mov    rcx,QWORD PTR [rbp-0x38]
  4228d2:	mov    r9,rcx
  4228d5:	mov    r8d,ebx
  4228d8:	mov    ecx,edi
  4228da:	mov    rdi,rax
  4228dd:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  4228e2:	mov    rbx,QWORD PTR [rbp-0x18]
  4228e6:	xor    rbx,QWORD PTR fs:0x28
  4228ef:	je     4228f6 <flatcc_verify_table_field@@Base+0xaf>
  4228f1:	call   4061a0 <__stack_chk_fail@plt>
  4228f6:	add    rsp,0x38
  4228fa:	pop    rbx
  4228fb:	pop    rbp
  4228fc:	ret    

00000000004228fd <flatcc_verify_table_vector_field@@Base>:
  4228fd:	endbr64 
  422901:	push   rbp
  422902:	mov    rbp,rsp
  422905:	push   rbx
  422906:	sub    rsp,0x38
  42290a:	mov    QWORD PTR [rbp-0x28],rdi
  42290e:	mov    eax,esi
  422910:	mov    DWORD PTR [rbp-0x30],edx
  422913:	mov    QWORD PTR [rbp-0x38],rcx
  422917:	mov    WORD PTR [rbp-0x2c],ax
  42291b:	mov    rax,QWORD PTR fs:0x28
  422924:	mov    QWORD PTR [rbp-0x18],rax
  422928:	xor    eax,eax
  42292a:	movzx  esi,WORD PTR [rbp-0x2c]
  42292e:	lea    rcx,[rbp-0x20]
  422932:	mov    edx,DWORD PTR [rbp-0x30]
  422935:	mov    rax,QWORD PTR [rbp-0x28]
  422939:	mov    rdi,rax
  42293c:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  422941:	mov    DWORD PTR [rbp-0x1c],eax
  422944:	cmp    DWORD PTR [rbp-0x1c],0x0
  422948:	jne    422951 <flatcc_verify_table_vector_field@@Base+0x54>
  42294a:	mov    eax,DWORD PTR [rbp-0x20]
  42294d:	test   eax,eax
  42294f:	jne    422956 <flatcc_verify_table_vector_field@@Base+0x59>
  422951:	mov    eax,DWORD PTR [rbp-0x1c]
  422954:	jmp    422998 <flatcc_verify_table_vector_field@@Base+0x9b>
  422956:	mov    rax,QWORD PTR [rbp-0x28]
  42295a:	mov    ebx,DWORD PTR [rax+0xc]
  42295d:	mov    edx,DWORD PTR [rbp-0x20]
  422960:	mov    rax,QWORD PTR [rbp-0x28]
  422964:	mov    rax,QWORD PTR [rax]
  422967:	mov    esi,edx
  422969:	mov    rdi,rax
  42296c:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422971:	mov    edi,eax
  422973:	mov    edx,DWORD PTR [rbp-0x20]
  422976:	mov    rax,QWORD PTR [rbp-0x28]
  42297a:	mov    esi,DWORD PTR [rax+0x8]
  42297d:	mov    rax,QWORD PTR [rbp-0x28]
  422981:	mov    rax,QWORD PTR [rax]
  422984:	mov    rcx,QWORD PTR [rbp-0x38]
  422988:	mov    r9,rcx
  42298b:	mov    r8d,ebx
  42298e:	mov    ecx,edi
  422990:	mov    rdi,rax
  422993:	call   42229d <flatcc_verify_error_string@@Base+0xad0>
  422998:	mov    rbx,QWORD PTR [rbp-0x18]
  42299c:	xor    rbx,QWORD PTR fs:0x28
  4229a5:	je     4229ac <flatcc_verify_table_vector_field@@Base+0xaf>
  4229a7:	call   4061a0 <__stack_chk_fail@plt>
  4229ac:	add    rsp,0x38
  4229b0:	pop    rbx
  4229b1:	pop    rbp
  4229b2:	ret    

00000000004229b3 <flatcc_verify_union_table@@Base>:
  4229b3:	endbr64 
  4229b7:	push   rbp
  4229b8:	mov    rbp,rsp
  4229bb:	sub    rsp,0x10
  4229bf:	mov    QWORD PTR [rbp-0x8],rdi
  4229c3:	mov    QWORD PTR [rbp-0x10],rsi
  4229c7:	mov    rax,QWORD PTR [rbp-0x8]
  4229cb:	mov    edi,DWORD PTR [rax+0xc]
  4229ce:	mov    rax,QWORD PTR [rbp-0x8]
  4229d2:	mov    ecx,DWORD PTR [rax+0x18]
  4229d5:	mov    rax,QWORD PTR [rbp-0x8]
  4229d9:	mov    edx,DWORD PTR [rax+0x14]
  4229dc:	mov    rax,QWORD PTR [rbp-0x8]
  4229e0:	mov    esi,DWORD PTR [rax+0x8]
  4229e3:	mov    rax,QWORD PTR [rbp-0x8]
  4229e7:	mov    rax,QWORD PTR [rax]
  4229ea:	mov    r8,QWORD PTR [rbp-0x10]
  4229ee:	mov    r9,r8
  4229f1:	mov    r8d,edi
  4229f4:	mov    rdi,rax
  4229f7:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  4229fc:	leave  
  4229fd:	ret    

00000000004229fe <flatcc_verify_union_struct@@Base>:
  4229fe:	endbr64 
  422a02:	push   rbp
  422a03:	mov    rbp,rsp
  422a06:	sub    rsp,0x18
  422a0a:	mov    QWORD PTR [rbp-0x8],rdi
  422a0e:	mov    QWORD PTR [rbp-0x10],rsi
  422a12:	mov    eax,edx
  422a14:	mov    WORD PTR [rbp-0x14],ax
  422a18:	movzx  ecx,WORD PTR [rbp-0x14]
  422a1c:	mov    rax,QWORD PTR [rbp-0x10]
  422a20:	mov    edi,eax
  422a22:	mov    rax,QWORD PTR [rbp-0x8]
  422a26:	mov    edx,DWORD PTR [rax+0x18]
  422a29:	mov    rax,QWORD PTR [rbp-0x8]
  422a2d:	mov    esi,DWORD PTR [rax+0x14]
  422a30:	mov    rax,QWORD PTR [rbp-0x8]
  422a34:	mov    eax,DWORD PTR [rax+0x8]
  422a37:	mov    r8d,ecx
  422a3a:	mov    ecx,edi
  422a3c:	mov    edi,eax
  422a3e:	call   421b1d <flatcc_verify_error_string@@Base+0x350>
  422a43:	leave  
  422a44:	ret    

0000000000422a45 <flatcc_verify_union_string@@Base>:
  422a45:	endbr64 
  422a49:	push   rbp
  422a4a:	mov    rbp,rsp
  422a4d:	sub    rsp,0x8
  422a51:	mov    QWORD PTR [rbp-0x8],rdi
  422a55:	mov    rax,QWORD PTR [rbp-0x8]
  422a59:	mov    ecx,DWORD PTR [rax+0x18]
  422a5c:	mov    rax,QWORD PTR [rbp-0x8]
  422a60:	mov    edx,DWORD PTR [rax+0x14]
  422a63:	mov    rax,QWORD PTR [rbp-0x8]
  422a67:	mov    esi,DWORD PTR [rax+0x8]
  422a6a:	mov    rax,QWORD PTR [rbp-0x8]
  422a6e:	mov    rax,QWORD PTR [rax]
  422a71:	mov    rdi,rax
  422a74:	call   421e2e <flatcc_verify_error_string@@Base+0x661>
  422a79:	leave  
  422a7a:	ret    

0000000000422a7b <flatcc_verify_buffer_header@@Base>:
  422a7b:	endbr64 
  422a7f:	push   rbp
  422a80:	mov    rbp,rsp
  422a83:	sub    rsp,0x40
  422a87:	mov    QWORD PTR [rbp-0x28],rdi
  422a8b:	mov    QWORD PTR [rbp-0x30],rsi
  422a8f:	mov    QWORD PTR [rbp-0x38],rdx
  422a93:	mov    rax,QWORD PTR [rbp-0x28]
  422a97:	and    eax,0x3
  422a9a:	test   rax,rax
  422a9d:	sete   al
  422aa0:	movzx  eax,al
  422aa3:	mov    DWORD PTR [rbp-0x18],eax
  422aa6:	cmp    DWORD PTR [rbp-0x18],0x0
  422aaa:	jne    422ab6 <flatcc_verify_buffer_header@@Base+0x3b>
  422aac:	mov    eax,0x5
  422ab1:	jmp    422b49 <flatcc_verify_buffer_header@@Base+0xce>
  422ab6:	mov    eax,0xfffffff7
  422abb:	cmp    QWORD PTR [rbp-0x30],rax
  422abf:	setbe  al
  422ac2:	movzx  eax,al
  422ac5:	mov    DWORD PTR [rbp-0x14],eax
  422ac8:	cmp    DWORD PTR [rbp-0x14],0x0
  422acc:	jne    422ad5 <flatcc_verify_buffer_header@@Base+0x5a>
  422ace:	mov    eax,0x6
  422ad3:	jmp    422b49 <flatcc_verify_buffer_header@@Base+0xce>
  422ad5:	cmp    QWORD PTR [rbp-0x30],0x7
  422ada:	seta   al
  422add:	movzx  eax,al
  422ae0:	mov    DWORD PTR [rbp-0x10],eax
  422ae3:	cmp    DWORD PTR [rbp-0x10],0x0
  422ae7:	jne    422af0 <flatcc_verify_buffer_header@@Base+0x75>
  422ae9:	mov    eax,0x1
  422aee:	jmp    422b49 <flatcc_verify_buffer_header@@Base+0xce>
  422af0:	cmp    QWORD PTR [rbp-0x38],0x0
  422af5:	je     422b44 <flatcc_verify_buffer_header@@Base+0xc9>
  422af7:	mov    rax,QWORD PTR [rbp-0x38]
  422afb:	mov    rdi,rax
  422afe:	call   4219c5 <flatcc_verify_error_string@@Base+0x1f8>
  422b03:	mov    DWORD PTR [rbp-0xc],eax
  422b06:	mov    rax,QWORD PTR [rbp-0x28]
  422b0a:	mov    esi,0x4
  422b0f:	mov    rdi,rax
  422b12:	call   421a1f <flatcc_verify_error_string@@Base+0x252>
  422b17:	mov    DWORD PTR [rbp-0x8],eax
  422b1a:	cmp    DWORD PTR [rbp-0xc],0x0
  422b1e:	je     422b28 <flatcc_verify_buffer_header@@Base+0xad>
  422b20:	mov    eax,DWORD PTR [rbp-0x8]
  422b23:	cmp    eax,DWORD PTR [rbp-0xc]
  422b26:	jne    422b2f <flatcc_verify_buffer_header@@Base+0xb4>
  422b28:	mov    eax,0x1
  422b2d:	jmp    422b34 <flatcc_verify_buffer_header@@Base+0xb9>
  422b2f:	mov    eax,0x0
  422b34:	mov    DWORD PTR [rbp-0x4],eax
  422b37:	cmp    DWORD PTR [rbp-0x4],0x0
  422b3b:	jne    422b44 <flatcc_verify_buffer_header@@Base+0xc9>
  422b3d:	mov    eax,0x2
  422b42:	jmp    422b49 <flatcc_verify_buffer_header@@Base+0xce>
  422b44:	mov    eax,0x0
  422b49:	leave  
  422b4a:	ret    

0000000000422b4b <flatcc_verify_typed_buffer_header@@Base>:
  422b4b:	endbr64 
  422b4f:	push   rbp
  422b50:	mov    rbp,rsp
  422b53:	sub    rsp,0x38
  422b57:	mov    QWORD PTR [rbp-0x28],rdi
  422b5b:	mov    QWORD PTR [rbp-0x30],rsi
  422b5f:	mov    DWORD PTR [rbp-0x34],edx
  422b62:	mov    rax,QWORD PTR [rbp-0x28]
  422b66:	and    eax,0x3
  422b69:	test   rax,rax
  422b6c:	sete   al
  422b6f:	movzx  eax,al
  422b72:	mov    DWORD PTR [rbp-0x18],eax
  422b75:	cmp    DWORD PTR [rbp-0x18],0x0
  422b79:	jne    422b85 <flatcc_verify_typed_buffer_header@@Base+0x3a>
  422b7b:	mov    eax,0x5
  422b80:	jmp    422c0e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  422b85:	mov    eax,0xfffffff7
  422b8a:	cmp    QWORD PTR [rbp-0x30],rax
  422b8e:	setbe  al
  422b91:	movzx  eax,al
  422b94:	mov    DWORD PTR [rbp-0x14],eax
  422b97:	cmp    DWORD PTR [rbp-0x14],0x0
  422b9b:	jne    422ba4 <flatcc_verify_typed_buffer_header@@Base+0x59>
  422b9d:	mov    eax,0x6
  422ba2:	jmp    422c0e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  422ba4:	cmp    QWORD PTR [rbp-0x30],0x7
  422ba9:	seta   al
  422bac:	movzx  eax,al
  422baf:	mov    DWORD PTR [rbp-0x10],eax
  422bb2:	cmp    DWORD PTR [rbp-0x10],0x0
  422bb6:	jne    422bbf <flatcc_verify_typed_buffer_header@@Base+0x74>
  422bb8:	mov    eax,0x1
  422bbd:	jmp    422c0e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  422bbf:	cmp    DWORD PTR [rbp-0x34],0x0
  422bc3:	je     422c09 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  422bc5:	mov    eax,DWORD PTR [rbp-0x34]
  422bc8:	mov    DWORD PTR [rbp-0xc],eax
  422bcb:	mov    rax,QWORD PTR [rbp-0x28]
  422bcf:	mov    esi,0x4
  422bd4:	mov    rdi,rax
  422bd7:	call   421a1f <flatcc_verify_error_string@@Base+0x252>
  422bdc:	mov    DWORD PTR [rbp-0x8],eax
  422bdf:	cmp    DWORD PTR [rbp-0xc],0x0
  422be3:	je     422bed <flatcc_verify_typed_buffer_header@@Base+0xa2>
  422be5:	mov    eax,DWORD PTR [rbp-0x8]
  422be8:	cmp    eax,DWORD PTR [rbp-0xc]
  422beb:	jne    422bf4 <flatcc_verify_typed_buffer_header@@Base+0xa9>
  422bed:	mov    eax,0x1
  422bf2:	jmp    422bf9 <flatcc_verify_typed_buffer_header@@Base+0xae>
  422bf4:	mov    eax,0x0
  422bf9:	mov    DWORD PTR [rbp-0x4],eax
  422bfc:	cmp    DWORD PTR [rbp-0x4],0x0
  422c00:	jne    422c09 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  422c02:	mov    eax,0x2
  422c07:	jmp    422c0e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  422c09:	mov    eax,0x0
  422c0e:	leave  
  422c0f:	ret    

0000000000422c10 <flatcc_verify_struct_as_root@@Base>:
  422c10:	endbr64 
  422c14:	push   rbp
  422c15:	mov    rbp,rsp
  422c18:	push   r12
  422c1a:	push   rbx
  422c1b:	sub    rsp,0x30
  422c1f:	mov    QWORD PTR [rbp-0x18],rdi
  422c23:	mov    QWORD PTR [rbp-0x20],rsi
  422c27:	mov    QWORD PTR [rbp-0x28],rdx
  422c2b:	mov    QWORD PTR [rbp-0x30],rcx
  422c2f:	mov    eax,r8d
  422c32:	mov    WORD PTR [rbp-0x34],ax
  422c36:	mov    rdx,QWORD PTR [rbp-0x28]
  422c3a:	mov    rcx,QWORD PTR [rbp-0x20]
  422c3e:	mov    rax,QWORD PTR [rbp-0x18]
  422c42:	mov    rsi,rcx
  422c45:	mov    rdi,rax
  422c48:	call   422a7b <flatcc_verify_buffer_header@@Base>
  422c4d:	test   eax,eax
  422c4f:	je     422c6a <flatcc_verify_struct_as_root@@Base+0x5a>
  422c51:	mov    rdx,QWORD PTR [rbp-0x28]
  422c55:	mov    rcx,QWORD PTR [rbp-0x20]
  422c59:	mov    rax,QWORD PTR [rbp-0x18]
  422c5d:	mov    rsi,rcx
  422c60:	mov    rdi,rax
  422c63:	call   422a7b <flatcc_verify_buffer_header@@Base>
  422c68:	jmp    422c9e <flatcc_verify_struct_as_root@@Base+0x8e>
  422c6a:	movzx  ebx,WORD PTR [rbp-0x34]
  422c6e:	mov    rax,QWORD PTR [rbp-0x30]
  422c72:	mov    r12d,eax
  422c75:	mov    rax,QWORD PTR [rbp-0x18]
  422c79:	mov    esi,0x0
  422c7e:	mov    rdi,rax
  422c81:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422c86:	mov    edx,eax
  422c88:	mov    rax,QWORD PTR [rbp-0x20]
  422c8c:	mov    r8d,ebx
  422c8f:	mov    ecx,r12d
  422c92:	mov    esi,0x0
  422c97:	mov    edi,eax
  422c99:	call   421b1d <flatcc_verify_error_string@@Base+0x350>
  422c9e:	add    rsp,0x30
  422ca2:	pop    rbx
  422ca3:	pop    r12
  422ca5:	pop    rbp
  422ca6:	ret    

0000000000422ca7 <flatcc_verify_struct_as_typed_root@@Base>:
  422ca7:	endbr64 
  422cab:	push   rbp
  422cac:	mov    rbp,rsp
  422caf:	push   r12
  422cb1:	push   rbx
  422cb2:	sub    rsp,0x20
  422cb6:	mov    QWORD PTR [rbp-0x18],rdi
  422cba:	mov    QWORD PTR [rbp-0x20],rsi
  422cbe:	mov    DWORD PTR [rbp-0x24],edx
  422cc1:	mov    QWORD PTR [rbp-0x30],rcx
  422cc5:	mov    eax,r8d
  422cc8:	mov    WORD PTR [rbp-0x28],ax
  422ccc:	mov    edx,DWORD PTR [rbp-0x24]
  422ccf:	mov    rcx,QWORD PTR [rbp-0x20]
  422cd3:	mov    rax,QWORD PTR [rbp-0x18]
  422cd7:	mov    rsi,rcx
  422cda:	mov    rdi,rax
  422cdd:	call   422b4b <flatcc_verify_typed_buffer_header@@Base>
  422ce2:	test   eax,eax
  422ce4:	je     422cfe <flatcc_verify_struct_as_typed_root@@Base+0x57>
  422ce6:	mov    edx,DWORD PTR [rbp-0x24]
  422ce9:	mov    rcx,QWORD PTR [rbp-0x20]
  422ced:	mov    rax,QWORD PTR [rbp-0x18]
  422cf1:	mov    rsi,rcx
  422cf4:	mov    rdi,rax
  422cf7:	call   422b4b <flatcc_verify_typed_buffer_header@@Base>
  422cfc:	jmp    422d32 <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  422cfe:	movzx  ebx,WORD PTR [rbp-0x28]
  422d02:	mov    rax,QWORD PTR [rbp-0x30]
  422d06:	mov    r12d,eax
  422d09:	mov    rax,QWORD PTR [rbp-0x18]
  422d0d:	mov    esi,0x0
  422d12:	mov    rdi,rax
  422d15:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422d1a:	mov    edx,eax
  422d1c:	mov    rax,QWORD PTR [rbp-0x20]
  422d20:	mov    r8d,ebx
  422d23:	mov    ecx,r12d
  422d26:	mov    esi,0x0
  422d2b:	mov    edi,eax
  422d2d:	call   421b1d <flatcc_verify_error_string@@Base+0x350>
  422d32:	add    rsp,0x20
  422d36:	pop    rbx
  422d37:	pop    r12
  422d39:	pop    rbp
  422d3a:	ret    

0000000000422d3b <flatcc_verify_table_as_root@@Base>:
  422d3b:	endbr64 
  422d3f:	push   rbp
  422d40:	mov    rbp,rsp
  422d43:	sub    rsp,0x20
  422d47:	mov    QWORD PTR [rbp-0x8],rdi
  422d4b:	mov    QWORD PTR [rbp-0x10],rsi
  422d4f:	mov    QWORD PTR [rbp-0x18],rdx
  422d53:	mov    QWORD PTR [rbp-0x20],rcx
  422d57:	mov    rax,QWORD PTR [rbp-0x10]
  422d5b:	mov    ecx,eax
  422d5d:	mov    rdx,QWORD PTR [rbp-0x18]
  422d61:	mov    rax,QWORD PTR [rbp-0x8]
  422d65:	mov    rsi,rcx
  422d68:	mov    rdi,rax
  422d6b:	call   422a7b <flatcc_verify_buffer_header@@Base>
  422d70:	test   eax,eax
  422d72:	je     422d8f <flatcc_verify_table_as_root@@Base+0x54>
  422d74:	mov    rax,QWORD PTR [rbp-0x10]
  422d78:	mov    ecx,eax
  422d7a:	mov    rdx,QWORD PTR [rbp-0x18]
  422d7e:	mov    rax,QWORD PTR [rbp-0x8]
  422d82:	mov    rsi,rcx
  422d85:	mov    rdi,rax
  422d88:	call   422a7b <flatcc_verify_buffer_header@@Base>
  422d8d:	jmp    422dc6 <flatcc_verify_table_as_root@@Base+0x8b>
  422d8f:	mov    rax,QWORD PTR [rbp-0x8]
  422d93:	mov    esi,0x0
  422d98:	mov    rdi,rax
  422d9b:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422da0:	mov    ecx,eax
  422da2:	mov    rax,QWORD PTR [rbp-0x10]
  422da6:	mov    esi,eax
  422da8:	mov    rdx,QWORD PTR [rbp-0x20]
  422dac:	mov    rax,QWORD PTR [rbp-0x8]
  422db0:	mov    r9,rdx
  422db3:	mov    r8d,0x64
  422db9:	mov    edx,0x0
  422dbe:	mov    rdi,rax
  422dc1:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  422dc6:	leave  
  422dc7:	ret    

0000000000422dc8 <flatcc_verify_table_as_typed_root@@Base>:
  422dc8:	endbr64 
  422dcc:	push   rbp
  422dcd:	mov    rbp,rsp
  422dd0:	sub    rsp,0x20
  422dd4:	mov    QWORD PTR [rbp-0x8],rdi
  422dd8:	mov    QWORD PTR [rbp-0x10],rsi
  422ddc:	mov    DWORD PTR [rbp-0x14],edx
  422ddf:	mov    QWORD PTR [rbp-0x20],rcx
  422de3:	mov    rax,QWORD PTR [rbp-0x10]
  422de7:	mov    ecx,eax
  422de9:	mov    edx,DWORD PTR [rbp-0x14]
  422dec:	mov    rax,QWORD PTR [rbp-0x8]
  422df0:	mov    rsi,rcx
  422df3:	mov    rdi,rax
  422df6:	call   422b4b <flatcc_verify_typed_buffer_header@@Base>
  422dfb:	test   eax,eax
  422dfd:	je     422e19 <flatcc_verify_table_as_typed_root@@Base+0x51>
  422dff:	mov    rax,QWORD PTR [rbp-0x10]
  422e03:	mov    ecx,eax
  422e05:	mov    edx,DWORD PTR [rbp-0x14]
  422e08:	mov    rax,QWORD PTR [rbp-0x8]
  422e0c:	mov    rsi,rcx
  422e0f:	mov    rdi,rax
  422e12:	call   422b4b <flatcc_verify_typed_buffer_header@@Base>
  422e17:	jmp    422e50 <flatcc_verify_table_as_typed_root@@Base+0x88>
  422e19:	mov    rax,QWORD PTR [rbp-0x8]
  422e1d:	mov    esi,0x0
  422e22:	mov    rdi,rax
  422e25:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422e2a:	mov    ecx,eax
  422e2c:	mov    rax,QWORD PTR [rbp-0x10]
  422e30:	mov    esi,eax
  422e32:	mov    rdx,QWORD PTR [rbp-0x20]
  422e36:	mov    rax,QWORD PTR [rbp-0x8]
  422e3a:	mov    r9,rdx
  422e3d:	mov    r8d,0x64
  422e43:	mov    edx,0x0
  422e48:	mov    rdi,rax
  422e4b:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  422e50:	leave  
  422e51:	ret    

0000000000422e52 <flatcc_verify_struct_as_nested_root@@Base>:
  422e52:	endbr64 
  422e56:	push   rbp
  422e57:	mov    rbp,rsp
  422e5a:	sub    rsp,0x40
  422e5e:	mov    QWORD PTR [rbp-0x18],rdi
  422e62:	mov    eax,esi
  422e64:	mov    DWORD PTR [rbp-0x20],edx
  422e67:	mov    QWORD PTR [rbp-0x28],rcx
  422e6b:	mov    QWORD PTR [rbp-0x30],r8
  422e6f:	mov    edx,r9d
  422e72:	mov    WORD PTR [rbp-0x1c],ax
  422e76:	mov    eax,edx
  422e78:	mov    WORD PTR [rbp-0x34],ax
  422e7c:	movzx  ecx,WORD PTR [rbp-0x34]
  422e80:	movzx  esi,WORD PTR [rbp-0x1c]
  422e84:	mov    edx,DWORD PTR [rbp-0x20]
  422e87:	mov    rax,QWORD PTR [rbp-0x18]
  422e8b:	mov    r9d,0xffffffff
  422e91:	mov    r8d,0x1
  422e97:	mov    rdi,rax
  422e9a:	call   4226d8 <flatcc_verify_vector_field@@Base>
  422e9f:	test   eax,eax
  422ea1:	je     422ec8 <flatcc_verify_struct_as_nested_root@@Base+0x76>
  422ea3:	movzx  ecx,WORD PTR [rbp-0x34]
  422ea7:	movzx  esi,WORD PTR [rbp-0x1c]
  422eab:	mov    edx,DWORD PTR [rbp-0x20]
  422eae:	mov    rax,QWORD PTR [rbp-0x18]
  422eb2:	mov    r9d,0xffffffff
  422eb8:	mov    r8d,0x1
  422ebe:	mov    rdi,rax
  422ec1:	call   4226d8 <flatcc_verify_vector_field@@Base>
  422ec6:	jmp    422f41 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  422ec8:	movzx  edx,WORD PTR [rbp-0x1c]
  422ecc:	mov    rax,QWORD PTR [rbp-0x18]
  422ed0:	mov    esi,edx
  422ed2:	mov    rdi,rax
  422ed5:	call   421c0f <flatcc_verify_error_string@@Base+0x442>
  422eda:	mov    QWORD PTR [rbp-0x8],rax
  422ede:	cmp    QWORD PTR [rbp-0x8],0x0
  422ee3:	jne    422eec <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  422ee5:	mov    eax,0x0
  422eea:	jmp    422f41 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  422eec:	mov    rax,QWORD PTR [rbp-0x8]
  422ef0:	mov    esi,0x0
  422ef5:	mov    rdi,rax
  422ef8:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422efd:	mov    edx,eax
  422eff:	mov    rax,QWORD PTR [rbp-0x8]
  422f03:	add    rax,rdx
  422f06:	mov    QWORD PTR [rbp-0x8],rax
  422f0a:	mov    rax,QWORD PTR [rbp-0x8]
  422f0e:	mov    esi,0x0
  422f13:	mov    rdi,rax
  422f16:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422f1b:	mov    DWORD PTR [rbp-0xc],eax
  422f1e:	add    QWORD PTR [rbp-0x8],0x4
  422f23:	movzx  edi,WORD PTR [rbp-0x34]
  422f27:	mov    esi,DWORD PTR [rbp-0xc]
  422f2a:	mov    rcx,QWORD PTR [rbp-0x30]
  422f2e:	mov    rdx,QWORD PTR [rbp-0x28]
  422f32:	mov    rax,QWORD PTR [rbp-0x8]
  422f36:	mov    r8d,edi
  422f39:	mov    rdi,rax
  422f3c:	call   422c10 <flatcc_verify_struct_as_root@@Base>
  422f41:	leave  
  422f42:	ret    

0000000000422f43 <flatcc_verify_table_as_nested_root@@Base>:
  422f43:	endbr64 
  422f47:	push   rbp
  422f48:	mov    rbp,rsp
  422f4b:	push   rbx
  422f4c:	sub    rsp,0x48
  422f50:	mov    QWORD PTR [rbp-0x28],rdi
  422f54:	mov    eax,esi
  422f56:	mov    DWORD PTR [rbp-0x30],edx
  422f59:	mov    QWORD PTR [rbp-0x38],rcx
  422f5d:	mov    edx,r8d
  422f60:	mov    QWORD PTR [rbp-0x48],r9
  422f64:	mov    WORD PTR [rbp-0x2c],ax
  422f68:	mov    eax,edx
  422f6a:	mov    WORD PTR [rbp-0x3c],ax
  422f6e:	movzx  ecx,WORD PTR [rbp-0x3c]
  422f72:	movzx  esi,WORD PTR [rbp-0x2c]
  422f76:	mov    edx,DWORD PTR [rbp-0x30]
  422f79:	mov    rax,QWORD PTR [rbp-0x28]
  422f7d:	mov    r9d,0xffffffff
  422f83:	mov    r8d,0x1
  422f89:	mov    rdi,rax
  422f8c:	call   4226d8 <flatcc_verify_vector_field@@Base>
  422f91:	test   eax,eax
  422f93:	je     422fbd <flatcc_verify_table_as_nested_root@@Base+0x7a>
  422f95:	movzx  ecx,WORD PTR [rbp-0x3c]
  422f99:	movzx  esi,WORD PTR [rbp-0x2c]
  422f9d:	mov    edx,DWORD PTR [rbp-0x30]
  422fa0:	mov    rax,QWORD PTR [rbp-0x28]
  422fa4:	mov    r9d,0xffffffff
  422faa:	mov    r8d,0x1
  422fb0:	mov    rdi,rax
  422fb3:	call   4226d8 <flatcc_verify_vector_field@@Base>
  422fb8:	jmp    423085 <flatcc_verify_table_as_nested_root@@Base+0x142>
  422fbd:	movzx  edx,WORD PTR [rbp-0x2c]
  422fc1:	mov    rax,QWORD PTR [rbp-0x28]
  422fc5:	mov    esi,edx
  422fc7:	mov    rdi,rax
  422fca:	call   421c0f <flatcc_verify_error_string@@Base+0x442>
  422fcf:	mov    QWORD PTR [rbp-0x18],rax
  422fd3:	cmp    QWORD PTR [rbp-0x18],0x0
  422fd8:	jne    422fe4 <flatcc_verify_table_as_nested_root@@Base+0xa1>
  422fda:	mov    eax,0x0
  422fdf:	jmp    423085 <flatcc_verify_table_as_nested_root@@Base+0x142>
  422fe4:	mov    rax,QWORD PTR [rbp-0x18]
  422fe8:	mov    esi,0x0
  422fed:	mov    rdi,rax
  422ff0:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  422ff5:	mov    edx,eax
  422ff7:	mov    rax,QWORD PTR [rbp-0x18]
  422ffb:	add    rax,rdx
  422ffe:	mov    QWORD PTR [rbp-0x18],rax
  423002:	mov    rax,QWORD PTR [rbp-0x18]
  423006:	mov    esi,0x0
  42300b:	mov    rdi,rax
  42300e:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  423013:	mov    DWORD PTR [rbp-0x1c],eax
  423016:	add    QWORD PTR [rbp-0x18],0x4
  42301b:	mov    ecx,DWORD PTR [rbp-0x1c]
  42301e:	mov    rdx,QWORD PTR [rbp-0x38]
  423022:	mov    rax,QWORD PTR [rbp-0x18]
  423026:	mov    rsi,rcx
  423029:	mov    rdi,rax
  42302c:	call   422a7b <flatcc_verify_buffer_header@@Base>
  423031:	test   eax,eax
  423033:	je     42304d <flatcc_verify_table_as_nested_root@@Base+0x10a>
  423035:	mov    ecx,DWORD PTR [rbp-0x1c]
  423038:	mov    rdx,QWORD PTR [rbp-0x38]
  42303c:	mov    rax,QWORD PTR [rbp-0x18]
  423040:	mov    rsi,rcx
  423043:	mov    rdi,rax
  423046:	call   422a7b <flatcc_verify_buffer_header@@Base>
  42304b:	jmp    423085 <flatcc_verify_table_as_nested_root@@Base+0x142>
  42304d:	mov    rax,QWORD PTR [rbp-0x28]
  423051:	mov    ebx,DWORD PTR [rax+0xc]
  423054:	mov    rax,QWORD PTR [rbp-0x18]
  423058:	mov    esi,0x0
  42305d:	mov    rdi,rax
  423060:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  423065:	mov    ecx,eax
  423067:	mov    rdx,QWORD PTR [rbp-0x48]
  42306b:	mov    esi,DWORD PTR [rbp-0x1c]
  42306e:	mov    rax,QWORD PTR [rbp-0x18]
  423072:	mov    r9,rdx
  423075:	mov    r8d,ebx
  423078:	mov    edx,0x0
  42307d:	mov    rdi,rax
  423080:	call   422083 <flatcc_verify_error_string@@Base+0x8b6>
  423085:	add    rsp,0x48
  423089:	pop    rbx
  42308a:	pop    rbp
  42308b:	ret    

000000000042308c <flatcc_verify_union_field@@Base>:
  42308c:	endbr64 
  423090:	push   rbp
  423091:	mov    rbp,rsp
  423094:	sub    rsp,0x70
  423098:	mov    QWORD PTR [rbp-0x58],rdi
  42309c:	mov    eax,esi
  42309e:	mov    DWORD PTR [rbp-0x60],edx
  4230a1:	mov    QWORD PTR [rbp-0x68],rcx
  4230a5:	mov    WORD PTR [rbp-0x5c],ax
  4230a9:	mov    rax,QWORD PTR fs:0x28
  4230b2:	mov    QWORD PTR [rbp-0x8],rax
  4230b6:	xor    eax,eax
  4230b8:	movzx  eax,WORD PTR [rbp-0x5c]
  4230bc:	dec    eax
  4230be:	movzx  edx,ax
  4230c1:	mov    rax,QWORD PTR [rbp-0x58]
  4230c5:	mov    esi,edx
  4230c7:	mov    rdi,rax
  4230ca:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  4230cf:	mov    WORD PTR [rbp-0x50],ax
  4230d3:	cmp    WORD PTR [rbp-0x50],0x0
  4230d8:	jne    423135 <flatcc_verify_union_field@@Base+0xa9>
  4230da:	movzx  edx,WORD PTR [rbp-0x5c]
  4230de:	mov    rax,QWORD PTR [rbp-0x58]
  4230e2:	mov    esi,edx
  4230e4:	mov    rdi,rax
  4230e7:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  4230ec:	mov    WORD PTR [rbp-0x4e],ax
  4230f0:	cmp    WORD PTR [rbp-0x4e],0x0
  4230f5:	sete   al
  4230f8:	movzx  eax,al
  4230fb:	mov    DWORD PTR [rbp-0x48],eax
  4230fe:	cmp    DWORD PTR [rbp-0x48],0x0
  423102:	jne    42310e <flatcc_verify_union_field@@Base+0x82>
  423104:	mov    eax,0x17
  423109:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  42310e:	cmp    DWORD PTR [rbp-0x60],0x0
  423112:	sete   al
  423115:	movzx  eax,al
  423118:	mov    DWORD PTR [rbp-0x44],eax
  42311b:	cmp    DWORD PTR [rbp-0x44],0x0
  42311f:	jne    42312b <flatcc_verify_union_field@@Base+0x9f>
  423121:	mov    eax,0x15
  423126:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  42312b:	mov    eax,0x0
  423130:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  423135:	movzx  eax,WORD PTR [rbp-0x5c]
  423139:	dec    eax
  42313b:	movzx  esi,ax
  42313e:	mov    rax,QWORD PTR [rbp-0x58]
  423142:	mov    r8d,0x1
  423148:	mov    ecx,0x1
  42314d:	mov    edx,0x0
  423152:	mov    rdi,rax
  423155:	call   421c61 <flatcc_verify_error_string@@Base+0x494>
  42315a:	test   eax,eax
  42315c:	je     423188 <flatcc_verify_union_field@@Base+0xfc>
  42315e:	movzx  eax,WORD PTR [rbp-0x5c]
  423162:	dec    eax
  423164:	movzx  esi,ax
  423167:	mov    rax,QWORD PTR [rbp-0x58]
  42316b:	mov    r8d,0x1
  423171:	mov    ecx,0x1
  423176:	mov    edx,0x0
  42317b:	mov    rdi,rax
  42317e:	call   421c61 <flatcc_verify_error_string@@Base+0x494>
  423183:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  423188:	movzx  edx,WORD PTR [rbp-0x5c]
  42318c:	mov    rax,QWORD PTR [rbp-0x58]
  423190:	mov    esi,edx
  423192:	mov    rdi,rax
  423195:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  42319a:	mov    WORD PTR [rbp-0x4e],ax
  42319e:	mov    rax,QWORD PTR [rbp-0x58]
  4231a2:	mov    rdx,QWORD PTR [rax]
  4231a5:	mov    rax,QWORD PTR [rbp-0x58]
  4231a9:	mov    eax,DWORD PTR [rax+0x18]
  4231ac:	mov    ecx,eax
  4231ae:	movzx  eax,WORD PTR [rbp-0x50]
  4231b2:	add    rax,rcx
  4231b5:	add    rax,rdx
  4231b8:	mov    QWORD PTR [rbp-0x38],rax
  4231bc:	mov    rax,QWORD PTR [rbp-0x38]
  4231c0:	movzx  eax,BYTE PTR [rax]
  4231c3:	test   al,al
  4231c5:	jne    4231ce <flatcc_verify_union_field@@Base+0x142>
  4231c7:	cmp    WORD PTR [rbp-0x4e],0x0
  4231cc:	jne    4231d5 <flatcc_verify_union_field@@Base+0x149>
  4231ce:	mov    eax,0x1
  4231d3:	jmp    4231da <flatcc_verify_union_field@@Base+0x14e>
  4231d5:	mov    eax,0x0
  4231da:	mov    DWORD PTR [rbp-0x40],eax
  4231dd:	cmp    DWORD PTR [rbp-0x40],0x0
  4231e1:	jne    4231ed <flatcc_verify_union_field@@Base+0x161>
  4231e3:	mov    eax,0x18
  4231e8:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  4231ed:	mov    rax,QWORD PTR [rbp-0x38]
  4231f1:	movzx  eax,BYTE PTR [rax]
  4231f4:	test   al,al
  4231f6:	jne    4231ff <flatcc_verify_union_field@@Base+0x173>
  4231f8:	mov    eax,0x0
  4231fd:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  4231ff:	movzx  esi,WORD PTR [rbp-0x5c]
  423203:	lea    rcx,[rbp-0x4c]
  423207:	mov    edx,DWORD PTR [rbp-0x60]
  42320a:	mov    rax,QWORD PTR [rbp-0x58]
  42320e:	mov    rdi,rax
  423211:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  423216:	mov    DWORD PTR [rbp-0x3c],eax
  423219:	cmp    DWORD PTR [rbp-0x3c],0x0
  42321d:	jne    423226 <flatcc_verify_union_field@@Base+0x19a>
  42321f:	mov    eax,DWORD PTR [rbp-0x4c]
  423222:	test   eax,eax
  423224:	jne    42322b <flatcc_verify_union_field@@Base+0x19f>
  423226:	mov    eax,DWORD PTR [rbp-0x3c]
  423229:	jmp    42327e <flatcc_verify_union_field@@Base+0x1f2>
  42322b:	mov    rax,QWORD PTR [rbp-0x58]
  42322f:	mov    rax,QWORD PTR [rax]
  423232:	mov    QWORD PTR [rbp-0x30],rax
  423236:	mov    rax,QWORD PTR [rbp-0x58]
  42323a:	mov    eax,DWORD PTR [rax+0x8]
  42323d:	mov    DWORD PTR [rbp-0x28],eax
  423240:	mov    rax,QWORD PTR [rbp-0x58]
  423244:	mov    eax,DWORD PTR [rax+0xc]
  423247:	mov    DWORD PTR [rbp-0x24],eax
  42324a:	mov    eax,DWORD PTR [rbp-0x4c]
  42324d:	mov    DWORD PTR [rbp-0x1c],eax
  423250:	mov    edx,DWORD PTR [rbp-0x4c]
  423253:	mov    rax,QWORD PTR [rbp-0x58]
  423257:	mov    rax,QWORD PTR [rax]
  42325a:	mov    esi,edx
  42325c:	mov    rdi,rax
  42325f:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  423264:	mov    DWORD PTR [rbp-0x18],eax
  423267:	mov    rax,QWORD PTR [rbp-0x38]
  42326b:	movzx  eax,BYTE PTR [rax]
  42326e:	mov    BYTE PTR [rbp-0x20],al
  423271:	lea    rdx,[rbp-0x30]
  423275:	mov    rax,QWORD PTR [rbp-0x68]
  423279:	mov    rdi,rdx
  42327c:	call   rax
  42327e:	mov    rcx,QWORD PTR [rbp-0x8]
  423282:	xor    rcx,QWORD PTR fs:0x28
  42328b:	je     423292 <flatcc_verify_union_field@@Base+0x206>
  42328d:	call   4061a0 <__stack_chk_fail@plt>
  423292:	leave  
  423293:	ret    

0000000000423294 <flatcc_verify_union_vector_field@@Base>:
  423294:	endbr64 
  423298:	push   rbp
  423299:	mov    rbp,rsp
  42329c:	push   rbx
  42329d:	sub    rsp,0x58
  4232a1:	mov    QWORD PTR [rbp-0x48],rdi
  4232a5:	mov    eax,esi
  4232a7:	mov    DWORD PTR [rbp-0x50],edx
  4232aa:	mov    QWORD PTR [rbp-0x58],rcx
  4232ae:	mov    WORD PTR [rbp-0x4c],ax
  4232b2:	mov    rax,QWORD PTR fs:0x28
  4232bb:	mov    QWORD PTR [rbp-0x18],rax
  4232bf:	xor    eax,eax
  4232c1:	movzx  eax,WORD PTR [rbp-0x4c]
  4232c5:	dec    eax
  4232c7:	movzx  edx,ax
  4232ca:	mov    rax,QWORD PTR [rbp-0x48]
  4232ce:	mov    esi,edx
  4232d0:	mov    rdi,rax
  4232d3:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  4232d8:	mov    WORD PTR [rbp-0x3c],ax
  4232dc:	cmp    WORD PTR [rbp-0x3c],0x0
  4232e1:	jne    42331d <flatcc_verify_union_vector_field@@Base+0x89>
  4232e3:	movzx  edx,WORD PTR [rbp-0x4c]
  4232e7:	mov    rax,QWORD PTR [rbp-0x48]
  4232eb:	mov    esi,edx
  4232ed:	mov    rdi,rax
  4232f0:	call   421bbe <flatcc_verify_error_string@@Base+0x3f1>
  4232f5:	mov    WORD PTR [rbp-0x3a],ax
  4232f9:	cmp    WORD PTR [rbp-0x3a],0x0
  4232fe:	jne    42331d <flatcc_verify_union_vector_field@@Base+0x89>
  423300:	cmp    DWORD PTR [rbp-0x50],0x0
  423304:	sete   al
  423307:	movzx  eax,al
  42330a:	mov    DWORD PTR [rbp-0x34],eax
  42330d:	cmp    DWORD PTR [rbp-0x34],0x0
  423311:	jne    42331d <flatcc_verify_union_vector_field@@Base+0x89>
  423313:	mov    eax,0x16
  423318:	jmp    42345e <flatcc_verify_union_vector_field@@Base+0x1ca>
  42331d:	movzx  eax,WORD PTR [rbp-0x4c]
  423321:	dec    eax
  423323:	movzx  esi,ax
  423326:	mov    edx,DWORD PTR [rbp-0x50]
  423329:	mov    rax,QWORD PTR [rbp-0x48]
  42332d:	mov    r9d,0xffffffff
  423333:	mov    r8d,0x1
  423339:	mov    ecx,0x1
  42333e:	mov    rdi,rax
  423341:	call   4226d8 <flatcc_verify_vector_field@@Base>
  423346:	test   eax,eax
  423348:	je     423378 <flatcc_verify_union_vector_field@@Base+0xe4>
  42334a:	movzx  eax,WORD PTR [rbp-0x4c]
  42334e:	dec    eax
  423350:	movzx  esi,ax
  423353:	mov    edx,DWORD PTR [rbp-0x50]
  423356:	mov    rax,QWORD PTR [rbp-0x48]
  42335a:	mov    r9d,0xffffffff
  423360:	mov    r8d,0x1
  423366:	mov    ecx,0x1
  42336b:	mov    rdi,rax
  42336e:	call   4226d8 <flatcc_verify_vector_field@@Base>
  423373:	jmp    42345e <flatcc_verify_union_vector_field@@Base+0x1ca>
  423378:	movzx  eax,WORD PTR [rbp-0x4c]
  42337c:	dec    eax
  42337e:	movzx  edx,ax
  423381:	mov    rax,QWORD PTR [rbp-0x48]
  423385:	mov    esi,edx
  423387:	mov    rdi,rax
  42338a:	call   421c0f <flatcc_verify_error_string@@Base+0x442>
  42338f:	mov    QWORD PTR [rbp-0x28],rax
  423393:	cmp    QWORD PTR [rbp-0x28],0x0
  423398:	jne    4233a4 <flatcc_verify_union_vector_field@@Base+0x110>
  42339a:	mov    eax,0x0
  42339f:	jmp    42345e <flatcc_verify_union_vector_field@@Base+0x1ca>
  4233a4:	mov    rax,QWORD PTR [rbp-0x28]
  4233a8:	mov    esi,0x0
  4233ad:	mov    rdi,rax
  4233b0:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4233b5:	mov    edx,eax
  4233b7:	mov    rax,QWORD PTR [rbp-0x28]
  4233bb:	add    rax,rdx
  4233be:	mov    QWORD PTR [rbp-0x28],rax
  4233c2:	mov    rax,QWORD PTR [rbp-0x28]
  4233c6:	mov    esi,0x0
  4233cb:	mov    rdi,rax
  4233ce:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  4233d3:	mov    DWORD PTR [rbp-0x30],eax
  4233d6:	add    QWORD PTR [rbp-0x28],0x4
  4233db:	mov    rax,QWORD PTR [rbp-0x28]
  4233df:	mov    QWORD PTR [rbp-0x20],rax
  4233e3:	movzx  esi,WORD PTR [rbp-0x4c]
  4233e7:	lea    rcx,[rbp-0x38]
  4233eb:	mov    edx,DWORD PTR [rbp-0x50]
  4233ee:	mov    rax,QWORD PTR [rbp-0x48]
  4233f2:	mov    rdi,rax
  4233f5:	call   421d52 <flatcc_verify_error_string@@Base+0x585>
  4233fa:	mov    DWORD PTR [rbp-0x2c],eax
  4233fd:	cmp    DWORD PTR [rbp-0x2c],0x0
  423401:	jne    42340a <flatcc_verify_union_vector_field@@Base+0x176>
  423403:	mov    eax,DWORD PTR [rbp-0x38]
  423406:	test   eax,eax
  423408:	jne    42340f <flatcc_verify_union_vector_field@@Base+0x17b>
  42340a:	mov    eax,DWORD PTR [rbp-0x2c]
  42340d:	jmp    42345e <flatcc_verify_union_vector_field@@Base+0x1ca>
  42340f:	mov    rax,QWORD PTR [rbp-0x48]
  423413:	mov    ebx,DWORD PTR [rax+0xc]
  423416:	mov    edx,DWORD PTR [rbp-0x38]
  423419:	mov    rax,QWORD PTR [rbp-0x48]
  42341d:	mov    rax,QWORD PTR [rax]
  423420:	mov    esi,edx
  423422:	mov    rdi,rax
  423425:	call   4219a2 <flatcc_verify_error_string@@Base+0x1d5>
  42342a:	mov    r10d,eax
  42342d:	mov    edx,DWORD PTR [rbp-0x38]
  423430:	mov    rax,QWORD PTR [rbp-0x48]
  423434:	mov    esi,DWORD PTR [rax+0x8]
  423437:	mov    rax,QWORD PTR [rbp-0x48]
  42343b:	mov    rax,QWORD PTR [rax]
  42343e:	mov    rdi,QWORD PTR [rbp-0x20]
  423442:	mov    ecx,DWORD PTR [rbp-0x30]
  423445:	push   QWORD PTR [rbp-0x58]
  423448:	push   rbx
  423449:	mov    r9,rdi
  42344c:	mov    r8d,ecx
  42344f:	mov    ecx,r10d
  423452:	mov    rdi,rax
  423455:	call   4223ee <flatcc_verify_error_string@@Base+0xc21>
  42345a:	add    rsp,0x10
  42345e:	mov    rbx,QWORD PTR [rbp-0x18]
  423462:	xor    rbx,QWORD PTR fs:0x28
  42346b:	je     423472 <flatcc_verify_union_vector_field@@Base+0x1de>
  42346d:	call   4061a0 <__stack_chk_fail@plt>
  423472:	mov    rbx,QWORD PTR [rbp-0x8]
  423476:	leave  
  423477:	ret    
  423478:	push   rbp
  423479:	mov    rbp,rsp
  42347c:	mov    eax,edi
  42347e:	mov    BYTE PTR [rbp-0x4],al
  423481:	movzx  eax,BYTE PTR [rbp-0x4]
  423485:	pop    rbp
  423486:	ret    
  423487:	push   rbp
  423488:	mov    rbp,rsp
  42348b:	sub    rsp,0x10
  42348f:	mov    QWORD PTR [rbp-0x8],rdi
  423493:	mov    eax,esi
  423495:	mov    BYTE PTR [rbp-0xc],al
  423498:	movzx  eax,BYTE PTR [rbp-0xc]
  42349c:	mov    edi,eax
  42349e:	call   423478 <flatcc_verify_union_vector_field@@Base+0x1e4>
  4234a3:	mov    rdx,QWORD PTR [rbp-0x8]
  4234a7:	mov    BYTE PTR [rdx],al
  4234a9:	nop
  4234aa:	leave  
  4234ab:	ret    
  4234ac:	push   rbp
  4234ad:	mov    rbp,rsp
  4234b0:	sub    rsp,0x30
  4234b4:	mov    QWORD PTR [rbp-0x8],rdi
  4234b8:	mov    QWORD PTR [rbp-0x10],rsi
  4234bc:	mov    QWORD PTR [rbp-0x18],rdx
  4234c0:	mov    QWORD PTR [rbp-0x20],rcx
  4234c4:	mov    DWORD PTR [rbp-0x24],r8d
  4234c8:	mov    rax,QWORD PTR [rbp-0x8]
  4234cc:	mov    edx,0x40
  4234d1:	mov    esi,0x0
  4234d6:	mov    rdi,rax
  4234d9:	call   4061c0 <memset@plt>
  4234de:	mov    rax,QWORD PTR [rbp-0x8]
  4234e2:	mov    rdx,QWORD PTR [rbp-0x10]
  4234e6:	mov    QWORD PTR [rax],rdx
  4234e9:	mov    rax,QWORD PTR [rbp-0x8]
  4234ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4234f1:	mov    QWORD PTR [rax+0x8],rdx
  4234f5:	mov    rax,QWORD PTR [rbp-0x8]
  4234f9:	mov    DWORD PTR [rax+0x14],0x1
  423500:	mov    rax,QWORD PTR [rbp-0x8]
  423504:	mov    edx,DWORD PTR [rbp-0x24]
  423507:	mov    DWORD PTR [rax+0x10],edx
  42350a:	mov    rax,QWORD PTR [rbp-0x8]
  42350e:	mov    rdx,QWORD PTR [rbp-0x18]
  423512:	mov    QWORD PTR [rax+0x20],rdx
  423516:	mov    rax,QWORD PTR [rbp-0x8]
  42351a:	mov    rdx,QWORD PTR [rbp-0x20]
  42351e:	mov    QWORD PTR [rax+0x28],rdx
  423522:	mov    rax,QWORD PTR [rbp-0x8]
  423526:	mov    rdx,QWORD PTR [rbp-0x18]
  42352a:	mov    QWORD PTR [rax+0x30],rdx
  42352e:	nop
  42352f:	leave  
  423530:	ret    
  423531:	push   rbp
  423532:	mov    rbp,rsp
  423535:	sub    rsp,0x20
  423539:	mov    QWORD PTR [rbp-0x8],rdi
  42353d:	mov    QWORD PTR [rbp-0x10],rsi
  423541:	mov    QWORD PTR [rbp-0x18],rdx
  423545:	mov    rax,QWORD PTR [rbp-0x18]
  423549:	sub    rax,QWORD PTR [rbp-0x10]
  42354d:	cmp    rax,0x1
  423551:	jle    423586 <flatcc_verify_union_vector_field@@Base+0x2f2>
  423553:	mov    rax,QWORD PTR [rbp-0x10]
  423557:	movzx  eax,BYTE PTR [rax]
  42355a:	cmp    al,0x20
  42355c:	jle    423564 <flatcc_verify_union_vector_field@@Base+0x2d0>
  42355e:	mov    rax,QWORD PTR [rbp-0x10]
  423562:	jmp    42359d <flatcc_verify_union_vector_field@@Base+0x309>
  423564:	mov    rax,QWORD PTR [rbp-0x10]
  423568:	movzx  eax,BYTE PTR [rax]
  42356b:	cmp    al,0x20
  42356d:	jne    423586 <flatcc_verify_union_vector_field@@Base+0x2f2>
  42356f:	mov    rax,QWORD PTR [rbp-0x10]
  423573:	inc    rax
  423576:	movzx  eax,BYTE PTR [rax]
  423579:	cmp    al,0x20
  42357b:	jle    423586 <flatcc_verify_union_vector_field@@Base+0x2f2>
  42357d:	mov    rax,QWORD PTR [rbp-0x10]
  423581:	inc    rax
  423584:	jmp    42359d <flatcc_verify_union_vector_field@@Base+0x309>
  423586:	mov    rdx,QWORD PTR [rbp-0x18]
  42358a:	mov    rcx,QWORD PTR [rbp-0x10]
  42358e:	mov    rax,QWORD PTR [rbp-0x8]
  423592:	mov    rsi,rcx
  423595:	mov    rdi,rax
  423598:	call   42735d <flatcc_json_parser_space_ext@@Base>
  42359d:	leave  
  42359e:	ret    
  42359f:	push   rbp
  4235a0:	mov    rbp,rsp
  4235a3:	sub    rsp,0x20
  4235a7:	mov    QWORD PTR [rbp-0x8],rdi
  4235ab:	mov    QWORD PTR [rbp-0x10],rsi
  4235af:	mov    QWORD PTR [rbp-0x18],rdx
  4235b3:	mov    rax,QWORD PTR [rbp-0x10]
  4235b7:	cmp    rax,QWORD PTR [rbp-0x18]
  4235bb:	je     4235c8 <flatcc_verify_union_vector_field@@Base+0x334>
  4235bd:	mov    rax,QWORD PTR [rbp-0x10]
  4235c1:	movzx  eax,BYTE PTR [rax]
  4235c4:	cmp    al,0x22
  4235c6:	je     4235e3 <flatcc_verify_union_vector_field@@Base+0x34f>
  4235c8:	mov    rdx,QWORD PTR [rbp-0x18]
  4235cc:	mov    rsi,QWORD PTR [rbp-0x10]
  4235d0:	mov    rax,QWORD PTR [rbp-0x8]
  4235d4:	mov    ecx,0x10
  4235d9:	mov    rdi,rax
  4235dc:	call   427257 <flatcc_json_parser_set_error@@Base>
  4235e1:	jmp    4235eb <flatcc_verify_union_vector_field@@Base+0x357>
  4235e3:	inc    QWORD PTR [rbp-0x10]
  4235e7:	mov    rax,QWORD PTR [rbp-0x10]
  4235eb:	leave  
  4235ec:	ret    
  4235ed:	push   rbp
  4235ee:	mov    rbp,rsp
  4235f1:	sub    rsp,0x20
  4235f5:	mov    QWORD PTR [rbp-0x8],rdi
  4235f9:	mov    QWORD PTR [rbp-0x10],rsi
  4235fd:	mov    QWORD PTR [rbp-0x18],rdx
  423601:	mov    rax,QWORD PTR [rbp-0x10]
  423605:	cmp    rax,QWORD PTR [rbp-0x18]
  423609:	je     423616 <flatcc_verify_union_vector_field@@Base+0x382>
  42360b:	mov    rax,QWORD PTR [rbp-0x10]
  42360f:	movzx  eax,BYTE PTR [rax]
  423612:	cmp    al,0x22
  423614:	je     423631 <flatcc_verify_union_vector_field@@Base+0x39d>
  423616:	mov    rdx,QWORD PTR [rbp-0x18]
  42361a:	mov    rsi,QWORD PTR [rbp-0x10]
  42361e:	mov    rax,QWORD PTR [rbp-0x8]
  423622:	mov    ecx,0x14
  423627:	mov    rdi,rax
  42362a:	call   427257 <flatcc_json_parser_set_error@@Base>
  42362f:	jmp    423639 <flatcc_verify_union_vector_field@@Base+0x3a5>
  423631:	inc    QWORD PTR [rbp-0x10]
  423635:	mov    rax,QWORD PTR [rbp-0x10]
  423639:	leave  
  42363a:	ret    
  42363b:	push   rbp
  42363c:	mov    rbp,rsp
  42363f:	sub    rsp,0x20
  423643:	mov    QWORD PTR [rbp-0x8],rdi
  423647:	mov    QWORD PTR [rbp-0x10],rsi
  42364b:	mov    QWORD PTR [rbp-0x18],rdx
  42364f:	mov    rax,QWORD PTR [rbp-0x10]
  423653:	cmp    rax,QWORD PTR [rbp-0x18]
  423657:	jne    42365f <flatcc_verify_union_vector_field@@Base+0x3cb>
  423659:	mov    rax,QWORD PTR [rbp-0x10]
  42365d:	jmp    42368d <flatcc_verify_union_vector_field@@Base+0x3f9>
  42365f:	mov    rax,QWORD PTR [rbp-0x10]
  423663:	movzx  eax,BYTE PTR [rax]
  423666:	cmp    al,0x22
  423668:	jne    423674 <flatcc_verify_union_vector_field@@Base+0x3e0>
  42366a:	inc    QWORD PTR [rbp-0x10]
  42366e:	mov    rax,QWORD PTR [rbp-0x10]
  423672:	jmp    42368d <flatcc_verify_union_vector_field@@Base+0x3f9>
  423674:	mov    rdx,QWORD PTR [rbp-0x18]
  423678:	mov    rsi,QWORD PTR [rbp-0x10]
  42367c:	mov    rax,QWORD PTR [rbp-0x8]
  423680:	mov    ecx,0x5
  423685:	mov    rdi,rax
  423688:	call   427257 <flatcc_json_parser_set_error@@Base>
  42368d:	leave  
  42368e:	ret    
  42368f:	push   rbp
  423690:	mov    rbp,rsp
  423693:	sub    rsp,0x30
  423697:	mov    QWORD PTR [rbp-0x18],rdi
  42369b:	mov    QWORD PTR [rbp-0x20],rsi
  42369f:	mov    QWORD PTR [rbp-0x28],rdx
  4236a3:	mov    BYTE PTR [rbp-0x1],0x0
  4236a7:	jmp    4236ca <flatcc_verify_union_vector_field@@Base+0x436>
  4236a9:	mov    rax,QWORD PTR [rbp-0x20]
  4236ad:	movzx  eax,BYTE PTR [rax]
  4236b0:	cmp    al,0x5c
  4236b2:	jne    4236c6 <flatcc_verify_union_vector_field@@Base+0x432>
  4236b4:	mov    rax,QWORD PTR [rbp-0x28]
  4236b8:	sub    rax,QWORD PTR [rbp-0x20]
  4236bc:	cmp    rax,0x1
  4236c0:	jle    4236e1 <flatcc_verify_union_vector_field@@Base+0x44d>
  4236c2:	inc    QWORD PTR [rbp-0x20]
  4236c6:	inc    QWORD PTR [rbp-0x20]
  4236ca:	mov    rax,QWORD PTR [rbp-0x20]
  4236ce:	cmp    rax,QWORD PTR [rbp-0x28]
  4236d2:	je     4236e2 <flatcc_verify_union_vector_field@@Base+0x44e>
  4236d4:	mov    rax,QWORD PTR [rbp-0x20]
  4236d8:	movzx  eax,BYTE PTR [rax]
  4236db:	cmp    al,0x22
  4236dd:	jne    4236a9 <flatcc_verify_union_vector_field@@Base+0x415>
  4236df:	jmp    4236e2 <flatcc_verify_union_vector_field@@Base+0x44e>
  4236e1:	nop
  4236e2:	mov    rax,QWORD PTR [rbp-0x20]
  4236e6:	cmp    rax,QWORD PTR [rbp-0x28]
  4236ea:	je     4236f7 <flatcc_verify_union_vector_field@@Base+0x463>
  4236ec:	mov    rax,QWORD PTR [rbp-0x20]
  4236f0:	movzx  eax,BYTE PTR [rax]
  4236f3:	cmp    al,0x22
  4236f5:	je     423712 <flatcc_verify_union_vector_field@@Base+0x47e>
  4236f7:	mov    rdx,QWORD PTR [rbp-0x28]
  4236fb:	mov    rsi,QWORD PTR [rbp-0x20]
  4236ff:	mov    rax,QWORD PTR [rbp-0x18]
  423703:	mov    ecx,0x14
  423708:	mov    rdi,rax
  42370b:	call   427257 <flatcc_json_parser_set_error@@Base>
  423710:	jmp    42371a <flatcc_verify_union_vector_field@@Base+0x486>
  423712:	inc    QWORD PTR [rbp-0x20]
  423716:	mov    rax,QWORD PTR [rbp-0x20]
  42371a:	leave  
  42371b:	ret    
  42371c:	push   rbp
  42371d:	mov    rbp,rsp
  423720:	sub    rsp,0x20
  423724:	mov    QWORD PTR [rbp-0x8],rdi
  423728:	mov    QWORD PTR [rbp-0x10],rsi
  42372c:	mov    QWORD PTR [rbp-0x18],rdx
  423730:	mov    rdx,QWORD PTR [rbp-0x18]
  423734:	mov    rcx,QWORD PTR [rbp-0x10]
  423738:	mov    rax,QWORD PTR [rbp-0x8]
  42373c:	mov    rsi,rcx
  42373f:	mov    rdi,rax
  423742:	call   42363b <flatcc_verify_union_vector_field@@Base+0x3a7>
  423747:	mov    QWORD PTR [rbp-0x10],rax
  42374b:	mov    rdx,QWORD PTR [rbp-0x18]
  42374f:	mov    rcx,QWORD PTR [rbp-0x10]
  423753:	mov    rax,QWORD PTR [rbp-0x8]
  423757:	mov    rsi,rcx
  42375a:	mov    rdi,rax
  42375d:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423762:	mov    QWORD PTR [rbp-0x10],rax
  423766:	mov    rax,QWORD PTR [rbp-0x10]
  42376a:	leave  
  42376b:	ret    
  42376c:	push   rbp
  42376d:	mov    rbp,rsp
  423770:	sub    rsp,0x20
  423774:	mov    QWORD PTR [rbp-0x8],rdi
  423778:	mov    QWORD PTR [rbp-0x10],rsi
  42377c:	mov    QWORD PTR [rbp-0x18],rdx
  423780:	mov    QWORD PTR [rbp-0x20],rcx
  423784:	mov    rdx,QWORD PTR [rbp-0x18]
  423788:	mov    rcx,QWORD PTR [rbp-0x10]
  42378c:	mov    rax,QWORD PTR [rbp-0x8]
  423790:	mov    rsi,rcx
  423793:	mov    rdi,rax
  423796:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  42379b:	mov    QWORD PTR [rbp-0x10],rax
  42379f:	mov    rax,QWORD PTR [rbp-0x10]
  4237a3:	cmp    rax,QWORD PTR [rbp-0x18]
  4237a7:	jne    4237bc <flatcc_verify_union_vector_field@@Base+0x528>
  4237a9:	mov    rax,QWORD PTR [rbp-0x20]
  4237ad:	mov    DWORD PTR [rax],0x0
  4237b3:	mov    rax,QWORD PTR [rbp-0x10]
  4237b7:	jmp    4238a8 <flatcc_verify_union_vector_field@@Base+0x614>
  4237bc:	mov    rax,QWORD PTR [rbp-0x10]
  4237c0:	movzx  eax,BYTE PTR [rax]
  4237c3:	cmp    al,0x2c
  4237c5:	je     42381a <flatcc_verify_union_vector_field@@Base+0x586>
  4237c7:	mov    rax,QWORD PTR [rbp-0x20]
  4237cb:	mov    DWORD PTR [rax],0x0
  4237d1:	mov    rax,QWORD PTR [rbp-0x10]
  4237d5:	movzx  eax,BYTE PTR [rax]
  4237d8:	cmp    al,0x7d
  4237da:	je     4237fa <flatcc_verify_union_vector_field@@Base+0x566>
  4237dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4237e0:	mov    rsi,QWORD PTR [rbp-0x10]
  4237e4:	mov    rax,QWORD PTR [rbp-0x8]
  4237e8:	mov    ecx,0xa
  4237ed:	mov    rdi,rax
  4237f0:	call   427257 <flatcc_json_parser_set_error@@Base>
  4237f5:	jmp    4238a8 <flatcc_verify_union_vector_field@@Base+0x614>
  4237fa:	mov    rax,QWORD PTR [rbp-0x10]
  4237fe:	lea    rcx,[rax+0x1]
  423802:	mov    rdx,QWORD PTR [rbp-0x18]
  423806:	mov    rax,QWORD PTR [rbp-0x8]
  42380a:	mov    rsi,rcx
  42380d:	mov    rdi,rax
  423810:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423815:	jmp    4238a8 <flatcc_verify_union_vector_field@@Base+0x614>
  42381a:	mov    rax,QWORD PTR [rbp-0x10]
  42381e:	lea    rcx,[rax+0x1]
  423822:	mov    rdx,QWORD PTR [rbp-0x18]
  423826:	mov    rax,QWORD PTR [rbp-0x8]
  42382a:	mov    rsi,rcx
  42382d:	mov    rdi,rax
  423830:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423835:	mov    QWORD PTR [rbp-0x10],rax
  423839:	mov    rax,QWORD PTR [rbp-0x10]
  42383d:	cmp    rax,QWORD PTR [rbp-0x18]
  423841:	jne    423868 <flatcc_verify_union_vector_field@@Base+0x5d4>
  423843:	mov    rax,QWORD PTR [rbp-0x20]
  423847:	mov    DWORD PTR [rax],0x0
  42384d:	mov    rdx,QWORD PTR [rbp-0x18]
  423851:	mov    rsi,QWORD PTR [rbp-0x10]
  423855:	mov    rax,QWORD PTR [rbp-0x8]
  423859:	mov    ecx,0xa
  42385e:	mov    rdi,rax
  423861:	call   427257 <flatcc_json_parser_set_error@@Base>
  423866:	jmp    4238a8 <flatcc_verify_union_vector_field@@Base+0x614>
  423868:	mov    rax,QWORD PTR [rbp-0x10]
  42386c:	movzx  eax,BYTE PTR [rax]
  42386f:	cmp    al,0x7d
  423871:	jne    42389a <flatcc_verify_union_vector_field@@Base+0x606>
  423873:	mov    rax,QWORD PTR [rbp-0x20]
  423877:	mov    DWORD PTR [rax],0x0
  42387d:	mov    rax,QWORD PTR [rbp-0x10]
  423881:	lea    rcx,[rax+0x1]
  423885:	mov    rdx,QWORD PTR [rbp-0x18]
  423889:	mov    rax,QWORD PTR [rbp-0x8]
  42388d:	mov    rsi,rcx
  423890:	mov    rdi,rax
  423893:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423898:	jmp    4238a8 <flatcc_verify_union_vector_field@@Base+0x614>
  42389a:	mov    rax,QWORD PTR [rbp-0x20]
  42389e:	mov    DWORD PTR [rax],0x1
  4238a4:	mov    rax,QWORD PTR [rbp-0x10]
  4238a8:	leave  
  4238a9:	ret    
  4238aa:	push   rbp
  4238ab:	mov    rbp,rsp
  4238ae:	sub    rsp,0x20
  4238b2:	mov    QWORD PTR [rbp-0x8],rdi
  4238b6:	mov    QWORD PTR [rbp-0x10],rsi
  4238ba:	mov    QWORD PTR [rbp-0x18],rdx
  4238be:	mov    QWORD PTR [rbp-0x20],rcx
  4238c2:	mov    rax,QWORD PTR [rbp-0x10]
  4238c6:	cmp    rax,QWORD PTR [rbp-0x18]
  4238ca:	je     4238d7 <flatcc_verify_union_vector_field@@Base+0x643>
  4238cc:	mov    rax,QWORD PTR [rbp-0x10]
  4238d0:	movzx  eax,BYTE PTR [rax]
  4238d3:	cmp    al,0x5b
  4238d5:	je     4238fc <flatcc_verify_union_vector_field@@Base+0x668>
  4238d7:	mov    rax,QWORD PTR [rbp-0x20]
  4238db:	mov    DWORD PTR [rax],0x0
  4238e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4238e5:	mov    rsi,QWORD PTR [rbp-0x10]
  4238e9:	mov    rax,QWORD PTR [rbp-0x8]
  4238ed:	mov    ecx,0x16
  4238f2:	mov    rdi,rax
  4238f5:	call   427257 <flatcc_json_parser_set_error@@Base>
  4238fa:	jmp    423965 <flatcc_verify_union_vector_field@@Base+0x6d1>
  4238fc:	mov    rax,QWORD PTR [rbp-0x10]
  423900:	lea    rcx,[rax+0x1]
  423904:	mov    rdx,QWORD PTR [rbp-0x18]
  423908:	mov    rax,QWORD PTR [rbp-0x8]
  42390c:	mov    rsi,rcx
  42390f:	mov    rdi,rax
  423912:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423917:	mov    QWORD PTR [rbp-0x10],rax
  42391b:	mov    rax,QWORD PTR [rbp-0x10]
  42391f:	cmp    rax,QWORD PTR [rbp-0x18]
  423923:	je     423957 <flatcc_verify_union_vector_field@@Base+0x6c3>
  423925:	mov    rax,QWORD PTR [rbp-0x10]
  423929:	movzx  eax,BYTE PTR [rax]
  42392c:	cmp    al,0x5d
  42392e:	jne    423957 <flatcc_verify_union_vector_field@@Base+0x6c3>
  423930:	mov    rax,QWORD PTR [rbp-0x20]
  423934:	mov    DWORD PTR [rax],0x0
  42393a:	mov    rax,QWORD PTR [rbp-0x10]
  42393e:	lea    rcx,[rax+0x1]
  423942:	mov    rdx,QWORD PTR [rbp-0x18]
  423946:	mov    rax,QWORD PTR [rbp-0x8]
  42394a:	mov    rsi,rcx
  42394d:	mov    rdi,rax
  423950:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423955:	jmp    423965 <flatcc_verify_union_vector_field@@Base+0x6d1>
  423957:	mov    rax,QWORD PTR [rbp-0x20]
  42395b:	mov    DWORD PTR [rax],0x1
  423961:	mov    rax,QWORD PTR [rbp-0x10]
  423965:	leave  
  423966:	ret    
  423967:	push   rbp
  423968:	mov    rbp,rsp
  42396b:	sub    rsp,0x20
  42396f:	mov    QWORD PTR [rbp-0x8],rdi
  423973:	mov    QWORD PTR [rbp-0x10],rsi
  423977:	mov    QWORD PTR [rbp-0x18],rdx
  42397b:	mov    QWORD PTR [rbp-0x20],rcx
  42397f:	mov    rdx,QWORD PTR [rbp-0x18]
  423983:	mov    rcx,QWORD PTR [rbp-0x10]
  423987:	mov    rax,QWORD PTR [rbp-0x8]
  42398b:	mov    rsi,rcx
  42398e:	mov    rdi,rax
  423991:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423996:	mov    QWORD PTR [rbp-0x10],rax
  42399a:	mov    rax,QWORD PTR [rbp-0x10]
  42399e:	cmp    rax,QWORD PTR [rbp-0x18]
  4239a2:	jne    4239b7 <flatcc_verify_union_vector_field@@Base+0x723>
  4239a4:	mov    rax,QWORD PTR [rbp-0x20]
  4239a8:	mov    DWORD PTR [rax],0x0
  4239ae:	mov    rax,QWORD PTR [rbp-0x10]
  4239b2:	jmp    423aa3 <flatcc_verify_union_vector_field@@Base+0x80f>
  4239b7:	mov    rax,QWORD PTR [rbp-0x10]
  4239bb:	movzx  eax,BYTE PTR [rax]
  4239be:	cmp    al,0x2c
  4239c0:	je     423a15 <flatcc_verify_union_vector_field@@Base+0x781>
  4239c2:	mov    rax,QWORD PTR [rbp-0x20]
  4239c6:	mov    DWORD PTR [rax],0x0
  4239cc:	mov    rax,QWORD PTR [rbp-0x10]
  4239d0:	movzx  eax,BYTE PTR [rax]
  4239d3:	cmp    al,0x5d
  4239d5:	je     4239f5 <flatcc_verify_union_vector_field@@Base+0x761>
  4239d7:	mov    rdx,QWORD PTR [rbp-0x18]
  4239db:	mov    rsi,QWORD PTR [rbp-0x10]
  4239df:	mov    rax,QWORD PTR [rbp-0x8]
  4239e3:	mov    ecx,0x9
  4239e8:	mov    rdi,rax
  4239eb:	call   427257 <flatcc_json_parser_set_error@@Base>
  4239f0:	jmp    423aa3 <flatcc_verify_union_vector_field@@Base+0x80f>
  4239f5:	mov    rax,QWORD PTR [rbp-0x10]
  4239f9:	lea    rcx,[rax+0x1]
  4239fd:	mov    rdx,QWORD PTR [rbp-0x18]
  423a01:	mov    rax,QWORD PTR [rbp-0x8]
  423a05:	mov    rsi,rcx
  423a08:	mov    rdi,rax
  423a0b:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423a10:	jmp    423aa3 <flatcc_verify_union_vector_field@@Base+0x80f>
  423a15:	mov    rax,QWORD PTR [rbp-0x10]
  423a19:	lea    rcx,[rax+0x1]
  423a1d:	mov    rdx,QWORD PTR [rbp-0x18]
  423a21:	mov    rax,QWORD PTR [rbp-0x8]
  423a25:	mov    rsi,rcx
  423a28:	mov    rdi,rax
  423a2b:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423a30:	mov    QWORD PTR [rbp-0x10],rax
  423a34:	mov    rax,QWORD PTR [rbp-0x10]
  423a38:	cmp    rax,QWORD PTR [rbp-0x18]
  423a3c:	jne    423a63 <flatcc_verify_union_vector_field@@Base+0x7cf>
  423a3e:	mov    rax,QWORD PTR [rbp-0x20]
  423a42:	mov    DWORD PTR [rax],0x0
  423a48:	mov    rdx,QWORD PTR [rbp-0x18]
  423a4c:	mov    rsi,QWORD PTR [rbp-0x10]
  423a50:	mov    rax,QWORD PTR [rbp-0x8]
  423a54:	mov    ecx,0x9
  423a59:	mov    rdi,rax
  423a5c:	call   427257 <flatcc_json_parser_set_error@@Base>
  423a61:	jmp    423aa3 <flatcc_verify_union_vector_field@@Base+0x80f>
  423a63:	mov    rax,QWORD PTR [rbp-0x10]
  423a67:	movzx  eax,BYTE PTR [rax]
  423a6a:	cmp    al,0x5d
  423a6c:	jne    423a95 <flatcc_verify_union_vector_field@@Base+0x801>
  423a6e:	mov    rax,QWORD PTR [rbp-0x20]
  423a72:	mov    DWORD PTR [rax],0x0
  423a78:	mov    rax,QWORD PTR [rbp-0x10]
  423a7c:	lea    rcx,[rax+0x1]
  423a80:	mov    rdx,QWORD PTR [rbp-0x18]
  423a84:	mov    rax,QWORD PTR [rbp-0x8]
  423a88:	mov    rsi,rcx
  423a8b:	mov    rdi,rax
  423a8e:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  423a93:	jmp    423aa3 <flatcc_verify_union_vector_field@@Base+0x80f>
  423a95:	mov    rax,QWORD PTR [rbp-0x20]
  423a99:	mov    DWORD PTR [rax],0x1
  423a9f:	mov    rax,QWORD PTR [rbp-0x10]
  423aa3:	leave  
  423aa4:	ret    
  423aa5:	push   rbp
  423aa6:	mov    rbp,rsp
  423aa9:	sub    rsp,0x30
  423aad:	mov    QWORD PTR [rbp-0x8],rdi
  423ab1:	mov    QWORD PTR [rbp-0x10],rsi
  423ab5:	mov    QWORD PTR [rbp-0x18],rdx
  423ab9:	mov    DWORD PTR [rbp-0x1c],ecx
  423abc:	mov    QWORD PTR [rbp-0x28],r8
  423ac0:	mov    QWORD PTR [rbp-0x30],r9
  423ac4:	cmp    DWORD PTR [rbp-0x1c],0x0
  423ac8:	je     423ae5 <flatcc_verify_union_vector_field@@Base+0x851>
  423aca:	mov    rdx,QWORD PTR [rbp-0x18]
  423ace:	mov    rsi,QWORD PTR [rbp-0x10]
  423ad2:	mov    rax,QWORD PTR [rbp-0x8]
  423ad6:	mov    ecx,0x8
  423adb:	mov    rdi,rax
  423ade:	call   427257 <flatcc_json_parser_set_error@@Base>
  423ae3:	jmp    423af4 <flatcc_verify_union_vector_field@@Base+0x860>
  423ae5:	mov    rax,QWORD PTR [rbp-0x30]
  423ae9:	mov    rdx,QWORD PTR [rbp-0x28]
  423aed:	mov    QWORD PTR [rax],rdx
  423af0:	mov    rax,QWORD PTR [rbp-0x10]
  423af4:	leave  
  423af5:	ret    
  423af6:	push   rbp
  423af7:	mov    rbp,rsp
  423afa:	sub    rsp,0x30
  423afe:	mov    QWORD PTR [rbp-0x8],rdi
  423b02:	mov    QWORD PTR [rbp-0x10],rsi
  423b06:	mov    QWORD PTR [rbp-0x18],rdx
  423b0a:	mov    DWORD PTR [rbp-0x1c],ecx
  423b0d:	mov    QWORD PTR [rbp-0x28],r8
  423b11:	mov    QWORD PTR [rbp-0x30],r9
  423b15:	cmp    DWORD PTR [rbp-0x1c],0x0
  423b19:	je     423b36 <flatcc_verify_union_vector_field@@Base+0x8a2>
  423b1b:	mov    rdx,QWORD PTR [rbp-0x18]
  423b1f:	mov    rsi,QWORD PTR [rbp-0x10]
  423b23:	mov    rax,QWORD PTR [rbp-0x8]
  423b27:	mov    ecx,0x8
  423b2c:	mov    rdi,rax
  423b2f:	call   427257 <flatcc_json_parser_set_error@@Base>
  423b34:	jmp    423b4a <flatcc_verify_union_vector_field@@Base+0x8b6>
  423b36:	cmp    QWORD PTR [rbp-0x28],0x0
  423b3b:	setne  al
  423b3e:	mov    edx,eax
  423b40:	mov    rax,QWORD PTR [rbp-0x30]
  423b44:	mov    BYTE PTR [rax],dl
  423b46:	mov    rax,QWORD PTR [rbp-0x10]
  423b4a:	leave  
  423b4b:	ret    
  423b4c:	push   rbp
  423b4d:	mov    rbp,rsp
  423b50:	sub    rsp,0x30
  423b54:	mov    QWORD PTR [rbp-0x8],rdi
  423b58:	mov    QWORD PTR [rbp-0x10],rsi
  423b5c:	mov    QWORD PTR [rbp-0x18],rdx
  423b60:	mov    DWORD PTR [rbp-0x1c],ecx
  423b63:	mov    QWORD PTR [rbp-0x28],r8
  423b67:	mov    QWORD PTR [rbp-0x30],r9
  423b6b:	cmp    DWORD PTR [rbp-0x1c],0x0
  423b6f:	je     423b8c <flatcc_verify_union_vector_field@@Base+0x8f8>
  423b71:	mov    rdx,QWORD PTR [rbp-0x18]
  423b75:	mov    rsi,QWORD PTR [rbp-0x10]
  423b79:	mov    rax,QWORD PTR [rbp-0x8]
  423b7d:	mov    ecx,0x8
  423b82:	mov    rdi,rax
  423b85:	call   427257 <flatcc_json_parser_set_error@@Base>
  423b8a:	jmp    423bc2 <flatcc_verify_union_vector_field@@Base+0x92e>
  423b8c:	mov    eax,0xffffffff
  423b91:	cmp    QWORD PTR [rbp-0x28],rax
  423b95:	jbe    423bb2 <flatcc_verify_union_vector_field@@Base+0x91e>
  423b97:	mov    rdx,QWORD PTR [rbp-0x18]
  423b9b:	mov    rsi,QWORD PTR [rbp-0x10]
  423b9f:	mov    rax,QWORD PTR [rbp-0x8]
  423ba3:	mov    ecx,0x7
  423ba8:	mov    rdi,rax
  423bab:	call   427257 <flatcc_json_parser_set_error@@Base>
  423bb0:	jmp    423bc2 <flatcc_verify_union_vector_field@@Base+0x92e>
  423bb2:	mov    rax,QWORD PTR [rbp-0x28]
  423bb6:	mov    edx,eax
  423bb8:	mov    rax,QWORD PTR [rbp-0x30]
  423bbc:	mov    DWORD PTR [rax],edx
  423bbe:	mov    rax,QWORD PTR [rbp-0x10]
  423bc2:	leave  
  423bc3:	ret    
  423bc4:	push   rbp
  423bc5:	mov    rbp,rsp
  423bc8:	sub    rsp,0x30
  423bcc:	mov    QWORD PTR [rbp-0x8],rdi
  423bd0:	mov    QWORD PTR [rbp-0x10],rsi
  423bd4:	mov    QWORD PTR [rbp-0x18],rdx
  423bd8:	mov    DWORD PTR [rbp-0x1c],ecx
  423bdb:	mov    QWORD PTR [rbp-0x28],r8
  423bdf:	mov    QWORD PTR [rbp-0x30],r9
  423be3:	cmp    DWORD PTR [rbp-0x1c],0x0
  423be7:	je     423c04 <flatcc_verify_union_vector_field@@Base+0x970>
  423be9:	mov    rdx,QWORD PTR [rbp-0x18]
  423bed:	mov    rsi,QWORD PTR [rbp-0x10]
  423bf1:	mov    rax,QWORD PTR [rbp-0x8]
  423bf5:	mov    ecx,0x8
  423bfa:	mov    rdi,rax
  423bfd:	call   427257 <flatcc_json_parser_set_error@@Base>
  423c02:	jmp    423c3a <flatcc_verify_union_vector_field@@Base+0x9a6>
  423c04:	cmp    QWORD PTR [rbp-0x28],0xffff
  423c0c:	jbe    423c29 <flatcc_verify_union_vector_field@@Base+0x995>
  423c0e:	mov    rdx,QWORD PTR [rbp-0x18]
  423c12:	mov    rsi,QWORD PTR [rbp-0x10]
  423c16:	mov    rax,QWORD PTR [rbp-0x8]
  423c1a:	mov    ecx,0x7
  423c1f:	mov    rdi,rax
  423c22:	call   427257 <flatcc_json_parser_set_error@@Base>
  423c27:	jmp    423c3a <flatcc_verify_union_vector_field@@Base+0x9a6>
  423c29:	mov    rax,QWORD PTR [rbp-0x28]
  423c2d:	mov    edx,eax
  423c2f:	mov    rax,QWORD PTR [rbp-0x30]
  423c33:	mov    WORD PTR [rax],dx
  423c36:	mov    rax,QWORD PTR [rbp-0x10]
  423c3a:	leave  
  423c3b:	ret    
  423c3c:	push   rbp
  423c3d:	mov    rbp,rsp
  423c40:	sub    rsp,0x30
  423c44:	mov    QWORD PTR [rbp-0x8],rdi
  423c48:	mov    QWORD PTR [rbp-0x10],rsi
  423c4c:	mov    QWORD PTR [rbp-0x18],rdx
  423c50:	mov    DWORD PTR [rbp-0x1c],ecx
  423c53:	mov    QWORD PTR [rbp-0x28],r8
  423c57:	mov    QWORD PTR [rbp-0x30],r9
  423c5b:	cmp    DWORD PTR [rbp-0x1c],0x0
  423c5f:	je     423c7c <flatcc_verify_union_vector_field@@Base+0x9e8>
  423c61:	mov    rdx,QWORD PTR [rbp-0x18]
  423c65:	mov    rsi,QWORD PTR [rbp-0x10]
  423c69:	mov    rax,QWORD PTR [rbp-0x8]
  423c6d:	mov    ecx,0x8
  423c72:	mov    rdi,rax
  423c75:	call   427257 <flatcc_json_parser_set_error@@Base>
  423c7a:	jmp    423cb1 <flatcc_verify_union_vector_field@@Base+0xa1d>
  423c7c:	cmp    QWORD PTR [rbp-0x28],0xff
  423c84:	jbe    423ca1 <flatcc_verify_union_vector_field@@Base+0xa0d>
  423c86:	mov    rdx,QWORD PTR [rbp-0x18]
  423c8a:	mov    rsi,QWORD PTR [rbp-0x10]
  423c8e:	mov    rax,QWORD PTR [rbp-0x8]
  423c92:	mov    ecx,0x7
  423c97:	mov    rdi,rax
  423c9a:	call   427257 <flatcc_json_parser_set_error@@Base>
  423c9f:	jmp    423cb1 <flatcc_verify_union_vector_field@@Base+0xa1d>
  423ca1:	mov    rax,QWORD PTR [rbp-0x28]
  423ca5:	mov    edx,eax
  423ca7:	mov    rax,QWORD PTR [rbp-0x30]
  423cab:	mov    BYTE PTR [rax],dl
  423cad:	mov    rax,QWORD PTR [rbp-0x10]
  423cb1:	leave  
  423cb2:	ret    
  423cb3:	push   rbp
  423cb4:	mov    rbp,rsp
  423cb7:	sub    rsp,0x30
  423cbb:	mov    QWORD PTR [rbp-0x8],rdi
  423cbf:	mov    QWORD PTR [rbp-0x10],rsi
  423cc3:	mov    QWORD PTR [rbp-0x18],rdx
  423cc7:	mov    DWORD PTR [rbp-0x1c],ecx
  423cca:	mov    QWORD PTR [rbp-0x28],r8
  423cce:	mov    QWORD PTR [rbp-0x30],r9
  423cd2:	cmp    DWORD PTR [rbp-0x1c],0x0
  423cd6:	je     423d16 <flatcc_verify_union_vector_field@@Base+0xa82>
  423cd8:	movabs rax,0x8000000000000000
  423ce2:	cmp    QWORD PTR [rbp-0x28],rax
  423ce6:	jbe    423d03 <flatcc_verify_union_vector_field@@Base+0xa6f>
  423ce8:	mov    rdx,QWORD PTR [rbp-0x18]
  423cec:	mov    rsi,QWORD PTR [rbp-0x10]
  423cf0:	mov    rax,QWORD PTR [rbp-0x8]
  423cf4:	mov    ecx,0x8
  423cf9:	mov    rdi,rax
  423cfc:	call   427257 <flatcc_json_parser_set_error@@Base>
  423d01:	jmp    423d49 <flatcc_verify_union_vector_field@@Base+0xab5>
  423d03:	mov    rax,QWORD PTR [rbp-0x28]
  423d07:	neg    rax
  423d0a:	mov    rdx,rax
  423d0d:	mov    rax,QWORD PTR [rbp-0x30]
  423d11:	mov    QWORD PTR [rax],rdx
  423d14:	jmp    423d45 <flatcc_verify_union_vector_field@@Base+0xab1>
  423d16:	mov    rax,QWORD PTR [rbp-0x28]
  423d1a:	test   rax,rax
  423d1d:	jns    423d3a <flatcc_verify_union_vector_field@@Base+0xaa6>
  423d1f:	mov    rdx,QWORD PTR [rbp-0x18]
  423d23:	mov    rsi,QWORD PTR [rbp-0x10]
  423d27:	mov    rax,QWORD PTR [rbp-0x8]
  423d2b:	mov    ecx,0x7
  423d30:	mov    rdi,rax
  423d33:	call   427257 <flatcc_json_parser_set_error@@Base>
  423d38:	jmp    423d49 <flatcc_verify_union_vector_field@@Base+0xab5>
  423d3a:	mov    rdx,QWORD PTR [rbp-0x28]
  423d3e:	mov    rax,QWORD PTR [rbp-0x30]
  423d42:	mov    QWORD PTR [rax],rdx
  423d45:	mov    rax,QWORD PTR [rbp-0x10]
  423d49:	leave  
  423d4a:	ret    
  423d4b:	push   rbp
  423d4c:	mov    rbp,rsp
  423d4f:	sub    rsp,0x30
  423d53:	mov    QWORD PTR [rbp-0x8],rdi
  423d57:	mov    QWORD PTR [rbp-0x10],rsi
  423d5b:	mov    QWORD PTR [rbp-0x18],rdx
  423d5f:	mov    DWORD PTR [rbp-0x1c],ecx
  423d62:	mov    QWORD PTR [rbp-0x28],r8
  423d66:	mov    QWORD PTR [rbp-0x30],r9
  423d6a:	cmp    DWORD PTR [rbp-0x1c],0x0
  423d6e:	je     423da6 <flatcc_verify_union_vector_field@@Base+0xb12>
  423d70:	mov    eax,0x80000000
  423d75:	cmp    QWORD PTR [rbp-0x28],rax
  423d79:	jbe    423d96 <flatcc_verify_union_vector_field@@Base+0xb02>
  423d7b:	mov    rdx,QWORD PTR [rbp-0x18]
  423d7f:	mov    rsi,QWORD PTR [rbp-0x10]
  423d83:	mov    rax,QWORD PTR [rbp-0x8]
  423d87:	mov    ecx,0x8
  423d8c:	mov    rdi,rax
  423d8f:	call   427257 <flatcc_json_parser_set_error@@Base>
  423d94:	jmp    423ddb <flatcc_verify_union_vector_field@@Base+0xb47>
  423d96:	mov    rax,QWORD PTR [rbp-0x28]
  423d9a:	neg    eax
  423d9c:	mov    edx,eax
  423d9e:	mov    rax,QWORD PTR [rbp-0x30]
  423da2:	mov    DWORD PTR [rax],edx
  423da4:	jmp    423dd7 <flatcc_verify_union_vector_field@@Base+0xb43>
  423da6:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  423dae:	jbe    423dcb <flatcc_verify_union_vector_field@@Base+0xb37>
  423db0:	mov    rdx,QWORD PTR [rbp-0x18]
  423db4:	mov    rsi,QWORD PTR [rbp-0x10]
  423db8:	mov    rax,QWORD PTR [rbp-0x8]
  423dbc:	mov    ecx,0x7
  423dc1:	mov    rdi,rax
  423dc4:	call   427257 <flatcc_json_parser_set_error@@Base>
  423dc9:	jmp    423ddb <flatcc_verify_union_vector_field@@Base+0xb47>
  423dcb:	mov    rax,QWORD PTR [rbp-0x28]
  423dcf:	mov    edx,eax
  423dd1:	mov    rax,QWORD PTR [rbp-0x30]
  423dd5:	mov    DWORD PTR [rax],edx
  423dd7:	mov    rax,QWORD PTR [rbp-0x10]
  423ddb:	leave  
  423ddc:	ret    
  423ddd:	push   rbp
  423dde:	mov    rbp,rsp
  423de1:	sub    rsp,0x30
  423de5:	mov    QWORD PTR [rbp-0x8],rdi
  423de9:	mov    QWORD PTR [rbp-0x10],rsi
  423ded:	mov    QWORD PTR [rbp-0x18],rdx
  423df1:	mov    DWORD PTR [rbp-0x1c],ecx
  423df4:	mov    QWORD PTR [rbp-0x28],r8
  423df8:	mov    QWORD PTR [rbp-0x30],r9
  423dfc:	cmp    DWORD PTR [rbp-0x1c],0x0
  423e00:	je     423e38 <flatcc_verify_union_vector_field@@Base+0xba4>
  423e02:	cmp    QWORD PTR [rbp-0x28],0x8000
  423e0a:	jbe    423e27 <flatcc_verify_union_vector_field@@Base+0xb93>
  423e0c:	mov    rdx,QWORD PTR [rbp-0x18]
  423e10:	mov    rsi,QWORD PTR [rbp-0x10]
  423e14:	mov    rax,QWORD PTR [rbp-0x8]
  423e18:	mov    ecx,0x8
  423e1d:	mov    rdi,rax
  423e20:	call   427257 <flatcc_json_parser_set_error@@Base>
  423e25:	jmp    423e6e <flatcc_verify_union_vector_field@@Base+0xbda>
  423e27:	mov    rax,QWORD PTR [rbp-0x28]
  423e2b:	neg    eax
  423e2d:	mov    edx,eax
  423e2f:	mov    rax,QWORD PTR [rbp-0x30]
  423e33:	mov    WORD PTR [rax],dx
  423e36:	jmp    423e6a <flatcc_verify_union_vector_field@@Base+0xbd6>
  423e38:	cmp    QWORD PTR [rbp-0x28],0x7fff
  423e40:	jbe    423e5d <flatcc_verify_union_vector_field@@Base+0xbc9>
  423e42:	mov    rdx,QWORD PTR [rbp-0x18]
  423e46:	mov    rsi,QWORD PTR [rbp-0x10]
  423e4a:	mov    rax,QWORD PTR [rbp-0x8]
  423e4e:	mov    ecx,0x7
  423e53:	mov    rdi,rax
  423e56:	call   427257 <flatcc_json_parser_set_error@@Base>
  423e5b:	jmp    423e6e <flatcc_verify_union_vector_field@@Base+0xbda>
  423e5d:	mov    rax,QWORD PTR [rbp-0x28]
  423e61:	mov    edx,eax
  423e63:	mov    rax,QWORD PTR [rbp-0x30]
  423e67:	mov    WORD PTR [rax],dx
  423e6a:	mov    rax,QWORD PTR [rbp-0x10]
  423e6e:	leave  
  423e6f:	ret    
  423e70:	push   rbp
  423e71:	mov    rbp,rsp
  423e74:	sub    rsp,0x30
  423e78:	mov    QWORD PTR [rbp-0x8],rdi
  423e7c:	mov    QWORD PTR [rbp-0x10],rsi
  423e80:	mov    QWORD PTR [rbp-0x18],rdx
  423e84:	mov    DWORD PTR [rbp-0x1c],ecx
  423e87:	mov    QWORD PTR [rbp-0x28],r8
  423e8b:	mov    QWORD PTR [rbp-0x30],r9
  423e8f:	cmp    DWORD PTR [rbp-0x1c],0x0
  423e93:	je     423eca <flatcc_verify_union_vector_field@@Base+0xc36>
  423e95:	cmp    QWORD PTR [rbp-0x28],0x80
  423e9d:	jbe    423eba <flatcc_verify_union_vector_field@@Base+0xc26>
  423e9f:	mov    rdx,QWORD PTR [rbp-0x18]
  423ea3:	mov    rsi,QWORD PTR [rbp-0x10]
  423ea7:	mov    rax,QWORD PTR [rbp-0x8]
  423eab:	mov    ecx,0x8
  423eb0:	mov    rdi,rax
  423eb3:	call   427257 <flatcc_json_parser_set_error@@Base>
  423eb8:	jmp    423efc <flatcc_verify_union_vector_field@@Base+0xc68>
  423eba:	mov    rax,QWORD PTR [rbp-0x28]
  423ebe:	neg    eax
  423ec0:	mov    edx,eax
  423ec2:	mov    rax,QWORD PTR [rbp-0x30]
  423ec6:	mov    BYTE PTR [rax],dl
  423ec8:	jmp    423ef8 <flatcc_verify_union_vector_field@@Base+0xc64>
  423eca:	cmp    QWORD PTR [rbp-0x28],0x7f
  423ecf:	jbe    423eec <flatcc_verify_union_vector_field@@Base+0xc58>
  423ed1:	mov    rdx,QWORD PTR [rbp-0x18]
  423ed5:	mov    rsi,QWORD PTR [rbp-0x10]
  423ed9:	mov    rax,QWORD PTR [rbp-0x8]
  423edd:	mov    ecx,0x7
  423ee2:	mov    rdi,rax
  423ee5:	call   427257 <flatcc_json_parser_set_error@@Base>
  423eea:	jmp    423efc <flatcc_verify_union_vector_field@@Base+0xc68>
  423eec:	mov    rax,QWORD PTR [rbp-0x28]
  423ef0:	mov    edx,eax
  423ef2:	mov    rax,QWORD PTR [rbp-0x30]
  423ef6:	mov    BYTE PTR [rax],dl
  423ef8:	mov    rax,QWORD PTR [rbp-0x10]
  423efc:	leave  
  423efd:	ret    
  423efe:	push   rbp
  423eff:	mov    rbp,rsp
  423f02:	mov    QWORD PTR [rbp-0x8],rdi
  423f06:	mov    QWORD PTR [rbp-0x10],rsi
  423f0a:	mov    QWORD PTR [rbp-0x18],rdx
  423f0e:	mov    DWORD PTR [rbp-0x1c],ecx
  423f11:	mov    QWORD PTR [rbp-0x28],r8
  423f15:	mov    QWORD PTR [rbp-0x30],r9
  423f19:	cmp    DWORD PTR [rbp-0x1c],0x0
  423f1d:	je     423f52 <flatcc_verify_union_vector_field@@Base+0xcbe>
  423f1f:	mov    rax,QWORD PTR [rbp-0x28]
  423f23:	test   rax,rax
  423f26:	js     423f2f <flatcc_verify_union_vector_field@@Base+0xc9b>
  423f28:	vcvtsi2ss xmm0,xmm0,rax
  423f2d:	jmp    423f44 <flatcc_verify_union_vector_field@@Base+0xcb0>
  423f2f:	mov    rdx,rax
  423f32:	shr    rdx,1
  423f35:	and    eax,0x1
  423f38:	or     rdx,rax
  423f3b:	vcvtsi2ss xmm0,xmm0,rdx
  423f40:	vaddss xmm0,xmm0,xmm0
  423f44:	vmovss xmm1,DWORD PTR [rip+0x17a24]        # 43b970 <flatcc_builder_padding_base@@Base+0x2710>
  423f4c:	vxorps xmm0,xmm0,xmm1
  423f50:	jmp    423f77 <flatcc_verify_union_vector_field@@Base+0xce3>
  423f52:	mov    rax,QWORD PTR [rbp-0x28]
  423f56:	test   rax,rax
  423f59:	js     423f62 <flatcc_verify_union_vector_field@@Base+0xcce>
  423f5b:	vcvtsi2ss xmm0,xmm0,rax
  423f60:	jmp    423f77 <flatcc_verify_union_vector_field@@Base+0xce3>
  423f62:	mov    rdx,rax
  423f65:	shr    rdx,1
  423f68:	and    eax,0x1
  423f6b:	or     rdx,rax
  423f6e:	vcvtsi2ss xmm0,xmm0,rdx
  423f73:	vaddss xmm0,xmm0,xmm0
  423f77:	mov    rax,QWORD PTR [rbp-0x30]
  423f7b:	vmovss DWORD PTR [rax],xmm0
  423f7f:	mov    rax,QWORD PTR [rbp-0x10]
  423f83:	pop    rbp
  423f84:	ret    
  423f85:	push   rbp
  423f86:	mov    rbp,rsp
  423f89:	mov    QWORD PTR [rbp-0x8],rdi
  423f8d:	mov    QWORD PTR [rbp-0x10],rsi
  423f91:	mov    QWORD PTR [rbp-0x18],rdx
  423f95:	mov    DWORD PTR [rbp-0x1c],ecx
  423f98:	mov    QWORD PTR [rbp-0x28],r8
  423f9c:	mov    QWORD PTR [rbp-0x30],r9
  423fa0:	cmp    DWORD PTR [rbp-0x1c],0x0
  423fa4:	je     423fd9 <flatcc_verify_union_vector_field@@Base+0xd45>
  423fa6:	mov    rax,QWORD PTR [rbp-0x28]
  423faa:	test   rax,rax
  423fad:	js     423fb6 <flatcc_verify_union_vector_field@@Base+0xd22>
  423faf:	vcvtsi2sd xmm0,xmm0,rax
  423fb4:	jmp    423fcb <flatcc_verify_union_vector_field@@Base+0xd37>
  423fb6:	mov    rdx,rax
  423fb9:	shr    rdx,1
  423fbc:	and    eax,0x1
  423fbf:	or     rdx,rax
  423fc2:	vcvtsi2sd xmm0,xmm0,rdx
  423fc7:	vaddsd xmm0,xmm0,xmm0
  423fcb:	vmovq  xmm1,QWORD PTR [rip+0x179ad]        # 43b980 <flatcc_builder_padding_base@@Base+0x2720>
  423fd3:	vxorpd xmm0,xmm0,xmm1
  423fd7:	jmp    423ffe <flatcc_verify_union_vector_field@@Base+0xd6a>
  423fd9:	mov    rax,QWORD PTR [rbp-0x28]
  423fdd:	test   rax,rax
  423fe0:	js     423fe9 <flatcc_verify_union_vector_field@@Base+0xd55>
  423fe2:	vcvtsi2sd xmm0,xmm0,rax
  423fe7:	jmp    423ffe <flatcc_verify_union_vector_field@@Base+0xd6a>
  423fe9:	mov    rdx,rax
  423fec:	shr    rdx,1
  423fef:	and    eax,0x1
  423ff2:	or     rdx,rax
  423ff5:	vcvtsi2sd xmm0,xmm0,rdx
  423ffa:	vaddsd xmm0,xmm0,xmm0
  423ffe:	mov    rax,QWORD PTR [rbp-0x30]
  424002:	vmovsd QWORD PTR [rax],xmm0
  424006:	mov    rax,QWORD PTR [rbp-0x10]
  42400a:	pop    rbp
  42400b:	ret    
  42400c:	push   rbp
  42400d:	mov    rbp,rsp
  424010:	sub    rsp,0x10
  424014:	mov    QWORD PTR [rbp-0x8],rdi
  424018:	mov    QWORD PTR [rbp-0x10],rsi
  42401c:	mov    rax,QWORD PTR [rbp-0x10]
  424020:	sub    rax,QWORD PTR [rbp-0x8]
  424024:	cmp    rax,0x3
  424028:	jle    424050 <flatcc_verify_union_vector_field@@Base+0xdbc>
  42402a:	mov    rax,QWORD PTR [rbp-0x8]
  42402e:	mov    edx,0x4
  424033:	lea    rsi,[rip+0x164a8]        # 43a4e2 <flatcc_builder_padding_base@@Base+0x1282>
  42403a:	mov    rdi,rax
  42403d:	call   4061f0 <memcmp@plt>
  424042:	test   eax,eax
  424044:	jne    424050 <flatcc_verify_union_vector_field@@Base+0xdbc>
  424046:	mov    rax,QWORD PTR [rbp-0x8]
  42404a:	add    rax,0x4
  42404e:	jmp    424054 <flatcc_verify_union_vector_field@@Base+0xdc0>
  424050:	mov    rax,QWORD PTR [rbp-0x8]
  424054:	leave  
  424055:	ret    
  424056:	push   rbp
  424057:	mov    rbp,rsp
  42405a:	sub    rsp,0x40
  42405e:	mov    QWORD PTR [rbp-0x28],rdi
  424062:	mov    QWORD PTR [rbp-0x30],rsi
  424066:	mov    QWORD PTR [rbp-0x38],rdx
  42406a:	mov    QWORD PTR [rbp-0x40],rcx
  42406e:	mov    rax,QWORD PTR fs:0x28
  424077:	mov    QWORD PTR [rbp-0x8],rax
  42407b:	xor    eax,eax
  42407d:	mov    QWORD PTR [rbp-0x18],0x0
  424085:	mov    DWORD PTR [rbp-0x1c],0x0
  42408c:	mov    rax,QWORD PTR [rbp-0x30]
  424090:	mov    QWORD PTR [rbp-0x10],rax
  424094:	mov    rax,QWORD PTR [rbp-0x40]
  424098:	mov    BYTE PTR [rax],0x0
  42409b:	mov    rax,QWORD PTR [rbp-0x30]
  42409f:	cmp    rax,QWORD PTR [rbp-0x38]
  4240a3:	jne    4240ab <flatcc_verify_union_vector_field@@Base+0xe17>
  4240a5:	mov    rax,QWORD PTR [rbp-0x30]
  4240a9:	jmp    424103 <flatcc_verify_union_vector_field@@Base+0xe6f>
  4240ab:	lea    rdi,[rbp-0x18]
  4240af:	lea    rcx,[rbp-0x1c]
  4240b3:	mov    rdx,QWORD PTR [rbp-0x38]
  4240b7:	mov    rsi,QWORD PTR [rbp-0x30]
  4240bb:	mov    rax,QWORD PTR [rbp-0x28]
  4240bf:	mov    r8,rdi
  4240c2:	mov    rdi,rax
  4240c5:	call   4288db <flatcc_json_parser_integer@@Base>
  4240ca:	mov    QWORD PTR [rbp-0x30],rax
  4240ce:	mov    rax,QWORD PTR [rbp-0x30]
  4240d2:	cmp    rax,QWORD PTR [rbp-0x10]
  4240d6:	je     4240ff <flatcc_verify_union_vector_field@@Base+0xe6b>
  4240d8:	mov    rdi,QWORD PTR [rbp-0x18]
  4240dc:	mov    ecx,DWORD PTR [rbp-0x1c]
  4240df:	mov    r8,QWORD PTR [rbp-0x40]
  4240e3:	mov    rdx,QWORD PTR [rbp-0x38]
  4240e7:	mov    rsi,QWORD PTR [rbp-0x30]
  4240eb:	mov    rax,QWORD PTR [rbp-0x28]
  4240ef:	mov    r9,r8
  4240f2:	mov    r8,rdi
  4240f5:	mov    rdi,rax
  4240f8:	call   423c3c <flatcc_verify_union_vector_field@@Base+0x9a8>
  4240fd:	jmp    424103 <flatcc_verify_union_vector_field@@Base+0xe6f>
  4240ff:	mov    rax,QWORD PTR [rbp-0x30]
  424103:	mov    rdx,QWORD PTR [rbp-0x8]
  424107:	xor    rdx,QWORD PTR fs:0x28
  424110:	je     424117 <flatcc_verify_union_vector_field@@Base+0xe83>
  424112:	call   4061a0 <__stack_chk_fail@plt>
  424117:	leave  
  424118:	ret    
  424119:	push   rbp
  42411a:	mov    rbp,rsp
  42411d:	sub    rsp,0x40
  424121:	mov    QWORD PTR [rbp-0x28],rdi
  424125:	mov    QWORD PTR [rbp-0x30],rsi
  424129:	mov    QWORD PTR [rbp-0x38],rdx
  42412d:	mov    QWORD PTR [rbp-0x40],rcx
  424131:	mov    rax,QWORD PTR fs:0x28
  42413a:	mov    QWORD PTR [rbp-0x8],rax
  42413e:	xor    eax,eax
  424140:	mov    rax,QWORD PTR [rbp-0x30]
  424144:	mov    QWORD PTR [rbp-0x10],rax
  424148:	mov    rax,QWORD PTR [rbp-0x38]
  42414c:	sub    rax,QWORD PTR [rbp-0x30]
  424150:	cmp    rax,0x3
  424154:	jle    424183 <flatcc_verify_union_vector_field@@Base+0xeef>
  424156:	mov    rax,QWORD PTR [rbp-0x30]
  42415a:	mov    edx,0x4
  42415f:	lea    rsi,[rip+0x16381]        # 43a4e7 <flatcc_builder_padding_base@@Base+0x1287>
  424166:	mov    rdi,rax
  424169:	call   4061f0 <memcmp@plt>
  42416e:	test   eax,eax
  424170:	jne    424183 <flatcc_verify_union_vector_field@@Base+0xeef>
  424172:	mov    rax,QWORD PTR [rbp-0x40]
  424176:	mov    BYTE PTR [rax],0x1
  424179:	mov    rax,QWORD PTR [rbp-0x10]
  42417d:	add    rax,0x4
  424181:	jmp    4241ef <flatcc_verify_union_vector_field@@Base+0xf5b>
  424183:	mov    rax,QWORD PTR [rbp-0x38]
  424187:	sub    rax,QWORD PTR [rbp-0x30]
  42418b:	cmp    rax,0x4
  42418f:	jle    4241be <flatcc_verify_union_vector_field@@Base+0xf2a>
  424191:	mov    rax,QWORD PTR [rbp-0x30]
  424195:	mov    edx,0x5
  42419a:	lea    rsi,[rip+0x1634b]        # 43a4ec <flatcc_builder_padding_base@@Base+0x128c>
  4241a1:	mov    rdi,rax
  4241a4:	call   4061f0 <memcmp@plt>
  4241a9:	test   eax,eax
  4241ab:	jne    4241be <flatcc_verify_union_vector_field@@Base+0xf2a>
  4241ad:	mov    rax,QWORD PTR [rbp-0x40]
  4241b1:	mov    BYTE PTR [rax],0x0
  4241b4:	mov    rax,QWORD PTR [rbp-0x10]
  4241b8:	add    rax,0x5
  4241bc:	jmp    4241ef <flatcc_verify_union_vector_field@@Base+0xf5b>
  4241be:	lea    rcx,[rbp-0x11]
  4241c2:	mov    rdx,QWORD PTR [rbp-0x38]
  4241c6:	mov    rsi,QWORD PTR [rbp-0x30]
  4241ca:	mov    rax,QWORD PTR [rbp-0x28]
  4241ce:	mov    rdi,rax
  4241d1:	call   424056 <flatcc_verify_union_vector_field@@Base+0xdc2>
  4241d6:	mov    QWORD PTR [rbp-0x30],rax
  4241da:	movzx  eax,BYTE PTR [rbp-0x11]
  4241de:	test   al,al
  4241e0:	setne  al
  4241e3:	mov    edx,eax
  4241e5:	mov    rax,QWORD PTR [rbp-0x40]
  4241e9:	mov    BYTE PTR [rax],dl
  4241eb:	mov    rax,QWORD PTR [rbp-0x30]
  4241ef:	mov    rcx,QWORD PTR [rbp-0x8]
  4241f3:	xor    rcx,QWORD PTR fs:0x28
  4241fc:	je     424203 <flatcc_verify_union_vector_field@@Base+0xf6f>
  4241fe:	call   4061a0 <__stack_chk_fail@plt>
  424203:	leave  
  424204:	ret    
  424205:	endbr64 
  424209:	push   rbp
  42420a:	mov    rbp,rsp
  42420d:	sub    rsp,0x60
  424211:	mov    QWORD PTR [rbp-0x38],rdi
  424215:	mov    QWORD PTR [rbp-0x40],rsi
  424219:	mov    QWORD PTR [rbp-0x48],rdx
  42421d:	mov    QWORD PTR [rbp-0x50],rcx
  424221:	mov    QWORD PTR [rbp-0x58],r8
  424225:	mov    rax,QWORD PTR fs:0x28
  42422e:	mov    QWORD PTR [rbp-0x8],rax
  424232:	xor    eax,eax
  424234:	mov    QWORD PTR [rbp-0x28],0x0
  42423c:	mov    rax,QWORD PTR [rbp-0x58]
  424240:	mov    QWORD PTR [rax],0x0
  424247:	mov    rdx,QWORD PTR [rbp-0x48]
  42424b:	mov    rcx,QWORD PTR [rbp-0x40]
  42424f:	mov    rax,QWORD PTR [rbp-0x38]
  424253:	mov    rsi,rcx
  424256:	mov    rdi,rax
  424259:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  42425e:	mov    QWORD PTR [rbp-0x40],rax
  424262:	mov    rax,QWORD PTR [rbp-0x40]
  424266:	cmp    rax,QWORD PTR [rbp-0x48]
  42426a:	jne    424275 <flatcc_verify_union_vector_field@@Base+0xfe1>
  42426c:	mov    rax,QWORD PTR [rbp-0x40]
  424270:	jmp    424352 <flatcc_verify_union_vector_field@@Base+0x10be>
  424275:	mov    rax,QWORD PTR [rbp-0x50]
  424279:	mov    QWORD PTR [rbp-0x18],rax
  42427d:	mov    rax,QWORD PTR [rbp-0x18]
  424281:	mov    rax,QWORD PTR [rax]
  424284:	mov    rdx,QWORD PTR [rbp-0x40]
  424288:	mov    QWORD PTR [rbp-0x10],rdx
  42428c:	lea    r9,[rbp-0x2c]
  424290:	lea    r8,[rbp-0x20]
  424294:	lea    rcx,[rbp-0x30]
  424298:	mov    rdx,QWORD PTR [rbp-0x48]
  42429c:	mov    rsi,QWORD PTR [rbp-0x10]
  4242a0:	mov    rdi,QWORD PTR [rbp-0x38]
  4242a4:	call   rax
  4242a6:	mov    QWORD PTR [rbp-0x40],rax
  4242aa:	mov    rax,QWORD PTR [rbp-0x40]
  4242ae:	cmp    rax,QWORD PTR [rbp-0x48]
  4242b2:	jne    4242bd <flatcc_verify_union_vector_field@@Base+0x1029>
  4242b4:	mov    rax,QWORD PTR [rbp-0x40]
  4242b8:	jmp    424352 <flatcc_verify_union_vector_field@@Base+0x10be>
  4242bd:	mov    rax,QWORD PTR [rbp-0x40]
  4242c1:	cmp    rax,QWORD PTR [rbp-0x10]
  4242c5:	jne    4242d8 <flatcc_verify_union_vector_field@@Base+0x1044>
  4242c7:	add    QWORD PTR [rbp-0x18],0x8
  4242cc:	mov    rax,QWORD PTR [rbp-0x18]
  4242d0:	mov    rax,QWORD PTR [rax]
  4242d3:	test   rax,rax
  4242d6:	jne    42427d <flatcc_verify_union_vector_field@@Base+0xfe9>
  4242d8:	mov    rax,QWORD PTR [rbp-0x10]
  4242dc:	cmp    rax,QWORD PTR [rbp-0x40]
  4242e0:	jne    4242fd <flatcc_verify_union_vector_field@@Base+0x1069>
  4242e2:	mov    rdx,QWORD PTR [rbp-0x48]
  4242e6:	mov    rsi,QWORD PTR [rbp-0x40]
  4242ea:	mov    rax,QWORD PTR [rbp-0x38]
  4242ee:	mov    ecx,0x17
  4242f3:	mov    rdi,rax
  4242f6:	call   427257 <flatcc_json_parser_set_error@@Base>
  4242fb:	jmp    424352 <flatcc_verify_union_vector_field@@Base+0x10be>
  4242fd:	mov    rdi,QWORD PTR [rbp-0x20]
  424301:	mov    ecx,DWORD PTR [rbp-0x30]
  424304:	lea    r8,[rbp-0x28]
  424308:	mov    rdx,QWORD PTR [rbp-0x48]
  42430c:	mov    rsi,QWORD PTR [rbp-0x40]
  424310:	mov    rax,QWORD PTR [rbp-0x38]
  424314:	mov    r9,r8
  424317:	mov    r8,rdi
  42431a:	mov    rdi,rax
  42431d:	call   423aa5 <flatcc_verify_union_vector_field@@Base+0x811>
  424322:	cmp    QWORD PTR [rbp-0x48],rax
  424326:	jne    42432e <flatcc_verify_union_vector_field@@Base+0x109a>
  424328:	mov    rax,QWORD PTR [rbp-0x48]
  42432c:	jmp    424352 <flatcc_verify_union_vector_field@@Base+0x10be>
  42432e:	mov    rax,QWORD PTR [rbp-0x58]
  424332:	mov    rdx,QWORD PTR [rax]
  424335:	mov    rax,QWORD PTR [rbp-0x28]
  424339:	add    rdx,rax
  42433c:	mov    rax,QWORD PTR [rbp-0x58]
  424340:	mov    QWORD PTR [rax],rdx
  424343:	mov    eax,DWORD PTR [rbp-0x2c]
  424346:	test   eax,eax
  424348:	jne    424275 <flatcc_verify_union_vector_field@@Base+0xfe1>
  42434e:	mov    rax,QWORD PTR [rbp-0x40]
  424352:	mov    rdi,QWORD PTR [rbp-0x8]
  424356:	xor    rdi,QWORD PTR fs:0x28
  42435f:	je     424366 <flatcc_verify_union_vector_field@@Base+0x10d2>
  424361:	call   4061a0 <__stack_chk_fail@plt>
  424366:	leave  
  424367:	ret    
  424368:	endbr64 
  42436c:	push   rbp
  42436d:	mov    rbp,rsp
  424370:	sub    rsp,0x60
  424374:	mov    QWORD PTR [rbp-0x38],rdi
  424378:	mov    QWORD PTR [rbp-0x40],rsi
  42437c:	mov    QWORD PTR [rbp-0x48],rdx
  424380:	mov    QWORD PTR [rbp-0x50],rcx
  424384:	mov    QWORD PTR [rbp-0x58],r8
  424388:	mov    rax,QWORD PTR fs:0x28
  424391:	mov    QWORD PTR [rbp-0x8],rax
  424395:	xor    eax,eax
  424397:	mov    DWORD PTR [rbp-0x2c],0x0
  42439e:	mov    rax,QWORD PTR [rbp-0x58]
  4243a2:	mov    DWORD PTR [rax],0x0
  4243a8:	mov    rdx,QWORD PTR [rbp-0x48]
  4243ac:	mov    rcx,QWORD PTR [rbp-0x40]
  4243b0:	mov    rax,QWORD PTR [rbp-0x38]
  4243b4:	mov    rsi,rcx
  4243b7:	mov    rdi,rax
  4243ba:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  4243bf:	mov    QWORD PTR [rbp-0x40],rax
  4243c3:	mov    rax,QWORD PTR [rbp-0x40]
  4243c7:	cmp    rax,QWORD PTR [rbp-0x48]
  4243cb:	jne    4243d6 <flatcc_verify_union_vector_field@@Base+0x1142>
  4243cd:	mov    rax,QWORD PTR [rbp-0x40]
  4243d1:	jmp    4244af <flatcc_verify_union_vector_field@@Base+0x121b>
  4243d6:	mov    rax,QWORD PTR [rbp-0x50]
  4243da:	mov    QWORD PTR [rbp-0x18],rax
  4243de:	mov    rax,QWORD PTR [rbp-0x18]
  4243e2:	mov    rax,QWORD PTR [rax]
  4243e5:	mov    rdx,QWORD PTR [rbp-0x40]
  4243e9:	mov    QWORD PTR [rbp-0x10],rdx
  4243ed:	lea    r9,[rbp-0x24]
  4243f1:	lea    r8,[rbp-0x20]
  4243f5:	lea    rcx,[rbp-0x28]
  4243f9:	mov    rdx,QWORD PTR [rbp-0x48]
  4243fd:	mov    rsi,QWORD PTR [rbp-0x10]
  424401:	mov    rdi,QWORD PTR [rbp-0x38]
  424405:	call   rax
  424407:	mov    QWORD PTR [rbp-0x40],rax
  42440b:	mov    rax,QWORD PTR [rbp-0x40]
  42440f:	cmp    rax,QWORD PTR [rbp-0x48]
  424413:	jne    42441e <flatcc_verify_union_vector_field@@Base+0x118a>
  424415:	mov    rax,QWORD PTR [rbp-0x40]
  424419:	jmp    4244af <flatcc_verify_union_vector_field@@Base+0x121b>
  42441e:	mov    rax,QWORD PTR [rbp-0x40]
  424422:	cmp    rax,QWORD PTR [rbp-0x10]
  424426:	jne    424439 <flatcc_verify_union_vector_field@@Base+0x11a5>
  424428:	add    QWORD PTR [rbp-0x18],0x8
  42442d:	mov    rax,QWORD PTR [rbp-0x18]
  424431:	mov    rax,QWORD PTR [rax]
  424434:	test   rax,rax
  424437:	jne    4243de <flatcc_verify_union_vector_field@@Base+0x114a>
  424439:	mov    rax,QWORD PTR [rbp-0x10]
  42443d:	cmp    rax,QWORD PTR [rbp-0x40]
  424441:	jne    42445e <flatcc_verify_union_vector_field@@Base+0x11ca>
  424443:	mov    rdx,QWORD PTR [rbp-0x48]
  424447:	mov    rsi,QWORD PTR [rbp-0x40]
  42444b:	mov    rax,QWORD PTR [rbp-0x38]
  42444f:	mov    ecx,0x17
  424454:	mov    rdi,rax
  424457:	call   427257 <flatcc_json_parser_set_error@@Base>
  42445c:	jmp    4244af <flatcc_verify_union_vector_field@@Base+0x121b>
  42445e:	mov    rdi,QWORD PTR [rbp-0x20]
  424462:	mov    ecx,DWORD PTR [rbp-0x28]
  424465:	lea    r8,[rbp-0x2c]
  424469:	mov    rdx,QWORD PTR [rbp-0x48]
  42446d:	mov    rsi,QWORD PTR [rbp-0x40]
  424471:	mov    rax,QWORD PTR [rbp-0x38]
  424475:	mov    r9,r8
  424478:	mov    r8,rdi
  42447b:	mov    rdi,rax
  42447e:	call   423b4c <flatcc_verify_union_vector_field@@Base+0x8b8>
  424483:	cmp    QWORD PTR [rbp-0x48],rax
  424487:	jne    42448f <flatcc_verify_union_vector_field@@Base+0x11fb>
  424489:	mov    rax,QWORD PTR [rbp-0x48]
  42448d:	jmp    4244af <flatcc_verify_union_vector_field@@Base+0x121b>
  42448f:	mov    rax,QWORD PTR [rbp-0x58]
  424493:	mov    edx,DWORD PTR [rax]
  424495:	mov    eax,DWORD PTR [rbp-0x2c]
  424498:	add    edx,eax
  42449a:	mov    rax,QWORD PTR [rbp-0x58]
  42449e:	mov    DWORD PTR [rax],edx
  4244a0:	mov    eax,DWORD PTR [rbp-0x24]
  4244a3:	test   eax,eax
  4244a5:	jne    4243d6 <flatcc_verify_union_vector_field@@Base+0x1142>
  4244ab:	mov    rax,QWORD PTR [rbp-0x40]
  4244af:	mov    rdi,QWORD PTR [rbp-0x8]
  4244b3:	xor    rdi,QWORD PTR fs:0x28
  4244bc:	je     4244c3 <flatcc_verify_union_vector_field@@Base+0x122f>
  4244be:	call   4061a0 <__stack_chk_fail@plt>
  4244c3:	leave  
  4244c4:	ret    
  4244c5:	endbr64 
  4244c9:	push   rbp
  4244ca:	mov    rbp,rsp
  4244cd:	sub    rsp,0x60
  4244d1:	mov    QWORD PTR [rbp-0x38],rdi
  4244d5:	mov    QWORD PTR [rbp-0x40],rsi
  4244d9:	mov    QWORD PTR [rbp-0x48],rdx
  4244dd:	mov    QWORD PTR [rbp-0x50],rcx
  4244e1:	mov    QWORD PTR [rbp-0x58],r8
  4244e5:	mov    rax,QWORD PTR fs:0x28
  4244ee:	mov    QWORD PTR [rbp-0x8],rax
  4244f2:	xor    eax,eax
  4244f4:	mov    WORD PTR [rbp-0x2a],0x0
  4244fa:	mov    rax,QWORD PTR [rbp-0x58]
  4244fe:	mov    WORD PTR [rax],0x0
  424503:	mov    rdx,QWORD PTR [rbp-0x48]
  424507:	mov    rcx,QWORD PTR [rbp-0x40]
  42450b:	mov    rax,QWORD PTR [rbp-0x38]
  42450f:	mov    rsi,rcx
  424512:	mov    rdi,rax
  424515:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  42451a:	mov    QWORD PTR [rbp-0x40],rax
  42451e:	mov    rax,QWORD PTR [rbp-0x40]
  424522:	cmp    rax,QWORD PTR [rbp-0x48]
  424526:	jne    424531 <flatcc_verify_union_vector_field@@Base+0x129d>
  424528:	mov    rax,QWORD PTR [rbp-0x40]
  42452c:	jmp    42460d <flatcc_verify_union_vector_field@@Base+0x1379>
  424531:	mov    rax,QWORD PTR [rbp-0x50]
  424535:	mov    QWORD PTR [rbp-0x18],rax
  424539:	mov    rax,QWORD PTR [rbp-0x18]
  42453d:	mov    rax,QWORD PTR [rax]
  424540:	mov    rdx,QWORD PTR [rbp-0x40]
  424544:	mov    QWORD PTR [rbp-0x10],rdx
  424548:	lea    r9,[rbp-0x24]
  42454c:	lea    r8,[rbp-0x20]
  424550:	lea    rcx,[rbp-0x28]
  424554:	mov    rdx,QWORD PTR [rbp-0x48]
  424558:	mov    rsi,QWORD PTR [rbp-0x10]
  42455c:	mov    rdi,QWORD PTR [rbp-0x38]
  424560:	call   rax
  424562:	mov    QWORD PTR [rbp-0x40],rax
  424566:	mov    rax,QWORD PTR [rbp-0x40]
  42456a:	cmp    rax,QWORD PTR [rbp-0x48]
  42456e:	jne    424579 <flatcc_verify_union_vector_field@@Base+0x12e5>
  424570:	mov    rax,QWORD PTR [rbp-0x40]
  424574:	jmp    42460d <flatcc_verify_union_vector_field@@Base+0x1379>
  424579:	mov    rax,QWORD PTR [rbp-0x40]
  42457d:	cmp    rax,QWORD PTR [rbp-0x10]
  424581:	jne    424594 <flatcc_verify_union_vector_field@@Base+0x1300>
  424583:	add    QWORD PTR [rbp-0x18],0x8
  424588:	mov    rax,QWORD PTR [rbp-0x18]
  42458c:	mov    rax,QWORD PTR [rax]
  42458f:	test   rax,rax
  424592:	jne    424539 <flatcc_verify_union_vector_field@@Base+0x12a5>
  424594:	mov    rax,QWORD PTR [rbp-0x10]
  424598:	cmp    rax,QWORD PTR [rbp-0x40]
  42459c:	jne    4245b9 <flatcc_verify_union_vector_field@@Base+0x1325>
  42459e:	mov    rdx,QWORD PTR [rbp-0x48]
  4245a2:	mov    rsi,QWORD PTR [rbp-0x40]
  4245a6:	mov    rax,QWORD PTR [rbp-0x38]
  4245aa:	mov    ecx,0x17
  4245af:	mov    rdi,rax
  4245b2:	call   427257 <flatcc_json_parser_set_error@@Base>
  4245b7:	jmp    42460d <flatcc_verify_union_vector_field@@Base+0x1379>
  4245b9:	mov    rdi,QWORD PTR [rbp-0x20]
  4245bd:	mov    ecx,DWORD PTR [rbp-0x28]
  4245c0:	lea    r8,[rbp-0x2a]
  4245c4:	mov    rdx,QWORD PTR [rbp-0x48]
  4245c8:	mov    rsi,QWORD PTR [rbp-0x40]
  4245cc:	mov    rax,QWORD PTR [rbp-0x38]
  4245d0:	mov    r9,r8
  4245d3:	mov    r8,rdi
  4245d6:	mov    rdi,rax
  4245d9:	call   423bc4 <flatcc_verify_union_vector_field@@Base+0x930>
  4245de:	cmp    QWORD PTR [rbp-0x48],rax
  4245e2:	jne    4245ea <flatcc_verify_union_vector_field@@Base+0x1356>
  4245e4:	mov    rax,QWORD PTR [rbp-0x48]
  4245e8:	jmp    42460d <flatcc_verify_union_vector_field@@Base+0x1379>
  4245ea:	mov    rax,QWORD PTR [rbp-0x58]
  4245ee:	movzx  edx,WORD PTR [rax]
  4245f1:	movzx  eax,WORD PTR [rbp-0x2a]
  4245f5:	add    eax,edx
  4245f7:	mov    rdx,QWORD PTR [rbp-0x58]
  4245fb:	mov    WORD PTR [rdx],ax
  4245fe:	mov    eax,DWORD PTR [rbp-0x24]
  424601:	test   eax,eax
  424603:	jne    424531 <flatcc_verify_union_vector_field@@Base+0x129d>
  424609:	mov    rax,QWORD PTR [rbp-0x40]
  42460d:	mov    rdi,QWORD PTR [rbp-0x8]
  424611:	xor    rdi,QWORD PTR fs:0x28
  42461a:	je     424621 <flatcc_verify_union_vector_field@@Base+0x138d>
  42461c:	call   4061a0 <__stack_chk_fail@plt>
  424621:	leave  
  424622:	ret    
  424623:	endbr64 
  424627:	push   rbp
  424628:	mov    rbp,rsp
  42462b:	sub    rsp,0x60
  42462f:	mov    QWORD PTR [rbp-0x38],rdi
  424633:	mov    QWORD PTR [rbp-0x40],rsi
  424637:	mov    QWORD PTR [rbp-0x48],rdx
  42463b:	mov    QWORD PTR [rbp-0x50],rcx
  42463f:	mov    QWORD PTR [rbp-0x58],r8
  424643:	mov    rax,QWORD PTR fs:0x28
  42464c:	mov    QWORD PTR [rbp-0x8],rax
  424650:	xor    eax,eax
  424652:	mov    BYTE PTR [rbp-0x29],0x0
  424656:	mov    rax,QWORD PTR [rbp-0x58]
  42465a:	mov    BYTE PTR [rax],0x0
  42465d:	mov    rdx,QWORD PTR [rbp-0x48]
  424661:	mov    rcx,QWORD PTR [rbp-0x40]
  424665:	mov    rax,QWORD PTR [rbp-0x38]
  424669:	mov    rsi,rcx
  42466c:	mov    rdi,rax
  42466f:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424674:	mov    QWORD PTR [rbp-0x40],rax
  424678:	mov    rax,QWORD PTR [rbp-0x40]
  42467c:	cmp    rax,QWORD PTR [rbp-0x48]
  424680:	jne    42468b <flatcc_verify_union_vector_field@@Base+0x13f7>
  424682:	mov    rax,QWORD PTR [rbp-0x40]
  424686:	jmp    424766 <flatcc_verify_union_vector_field@@Base+0x14d2>
  42468b:	mov    rax,QWORD PTR [rbp-0x50]
  42468f:	mov    QWORD PTR [rbp-0x18],rax
  424693:	mov    rax,QWORD PTR [rbp-0x18]
  424697:	mov    rax,QWORD PTR [rax]
  42469a:	mov    rdx,QWORD PTR [rbp-0x40]
  42469e:	mov    QWORD PTR [rbp-0x10],rdx
  4246a2:	lea    r9,[rbp-0x24]
  4246a6:	lea    r8,[rbp-0x20]
  4246aa:	lea    rcx,[rbp-0x28]
  4246ae:	mov    rdx,QWORD PTR [rbp-0x48]
  4246b2:	mov    rsi,QWORD PTR [rbp-0x10]
  4246b6:	mov    rdi,QWORD PTR [rbp-0x38]
  4246ba:	call   rax
  4246bc:	mov    QWORD PTR [rbp-0x40],rax
  4246c0:	mov    rax,QWORD PTR [rbp-0x40]
  4246c4:	cmp    rax,QWORD PTR [rbp-0x48]
  4246c8:	jne    4246d3 <flatcc_verify_union_vector_field@@Base+0x143f>
  4246ca:	mov    rax,QWORD PTR [rbp-0x40]
  4246ce:	jmp    424766 <flatcc_verify_union_vector_field@@Base+0x14d2>
  4246d3:	mov    rax,QWORD PTR [rbp-0x40]
  4246d7:	cmp    rax,QWORD PTR [rbp-0x10]
  4246db:	jne    4246ee <flatcc_verify_union_vector_field@@Base+0x145a>
  4246dd:	add    QWORD PTR [rbp-0x18],0x8
  4246e2:	mov    rax,QWORD PTR [rbp-0x18]
  4246e6:	mov    rax,QWORD PTR [rax]
  4246e9:	test   rax,rax
  4246ec:	jne    424693 <flatcc_verify_union_vector_field@@Base+0x13ff>
  4246ee:	mov    rax,QWORD PTR [rbp-0x10]
  4246f2:	cmp    rax,QWORD PTR [rbp-0x40]
  4246f6:	jne    424713 <flatcc_verify_union_vector_field@@Base+0x147f>
  4246f8:	mov    rdx,QWORD PTR [rbp-0x48]
  4246fc:	mov    rsi,QWORD PTR [rbp-0x40]
  424700:	mov    rax,QWORD PTR [rbp-0x38]
  424704:	mov    ecx,0x17
  424709:	mov    rdi,rax
  42470c:	call   427257 <flatcc_json_parser_set_error@@Base>
  424711:	jmp    424766 <flatcc_verify_union_vector_field@@Base+0x14d2>
  424713:	mov    rdi,QWORD PTR [rbp-0x20]
  424717:	mov    ecx,DWORD PTR [rbp-0x28]
  42471a:	lea    r8,[rbp-0x29]
  42471e:	mov    rdx,QWORD PTR [rbp-0x48]
  424722:	mov    rsi,QWORD PTR [rbp-0x40]
  424726:	mov    rax,QWORD PTR [rbp-0x38]
  42472a:	mov    r9,r8
  42472d:	mov    r8,rdi
  424730:	mov    rdi,rax
  424733:	call   423c3c <flatcc_verify_union_vector_field@@Base+0x9a8>
  424738:	cmp    QWORD PTR [rbp-0x48],rax
  42473c:	jne    424744 <flatcc_verify_union_vector_field@@Base+0x14b0>
  42473e:	mov    rax,QWORD PTR [rbp-0x48]
  424742:	jmp    424766 <flatcc_verify_union_vector_field@@Base+0x14d2>
  424744:	mov    rax,QWORD PTR [rbp-0x58]
  424748:	movzx  edx,BYTE PTR [rax]
  42474b:	movzx  eax,BYTE PTR [rbp-0x29]
  42474f:	add    eax,edx
  424751:	mov    rdx,QWORD PTR [rbp-0x58]
  424755:	mov    BYTE PTR [rdx],al
  424757:	mov    eax,DWORD PTR [rbp-0x24]
  42475a:	test   eax,eax
  42475c:	jne    42468b <flatcc_verify_union_vector_field@@Base+0x13f7>
  424762:	mov    rax,QWORD PTR [rbp-0x40]
  424766:	mov    rdi,QWORD PTR [rbp-0x8]
  42476a:	xor    rdi,QWORD PTR fs:0x28
  424773:	je     42477a <flatcc_verify_union_vector_field@@Base+0x14e6>
  424775:	call   4061a0 <__stack_chk_fail@plt>
  42477a:	leave  
  42477b:	ret    
  42477c:	endbr64 
  424780:	push   rbp
  424781:	mov    rbp,rsp
  424784:	sub    rsp,0x60
  424788:	mov    QWORD PTR [rbp-0x38],rdi
  42478c:	mov    QWORD PTR [rbp-0x40],rsi
  424790:	mov    QWORD PTR [rbp-0x48],rdx
  424794:	mov    QWORD PTR [rbp-0x50],rcx
  424798:	mov    QWORD PTR [rbp-0x58],r8
  42479c:	mov    rax,QWORD PTR fs:0x28
  4247a5:	mov    QWORD PTR [rbp-0x8],rax
  4247a9:	xor    eax,eax
  4247ab:	mov    QWORD PTR [rbp-0x28],0x0
  4247b3:	mov    rax,QWORD PTR [rbp-0x58]
  4247b7:	mov    QWORD PTR [rax],0x0
  4247be:	mov    rdx,QWORD PTR [rbp-0x48]
  4247c2:	mov    rcx,QWORD PTR [rbp-0x40]
  4247c6:	mov    rax,QWORD PTR [rbp-0x38]
  4247ca:	mov    rsi,rcx
  4247cd:	mov    rdi,rax
  4247d0:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  4247d5:	mov    QWORD PTR [rbp-0x40],rax
  4247d9:	mov    rax,QWORD PTR [rbp-0x40]
  4247dd:	cmp    rax,QWORD PTR [rbp-0x48]
  4247e1:	jne    4247ec <flatcc_verify_union_vector_field@@Base+0x1558>
  4247e3:	mov    rax,QWORD PTR [rbp-0x40]
  4247e7:	jmp    4248c9 <flatcc_verify_union_vector_field@@Base+0x1635>
  4247ec:	mov    rax,QWORD PTR [rbp-0x50]
  4247f0:	mov    QWORD PTR [rbp-0x18],rax
  4247f4:	mov    rax,QWORD PTR [rbp-0x18]
  4247f8:	mov    rax,QWORD PTR [rax]
  4247fb:	mov    rdx,QWORD PTR [rbp-0x40]
  4247ff:	mov    QWORD PTR [rbp-0x10],rdx
  424803:	lea    r9,[rbp-0x2c]
  424807:	lea    r8,[rbp-0x20]
  42480b:	lea    rcx,[rbp-0x30]
  42480f:	mov    rdx,QWORD PTR [rbp-0x48]
  424813:	mov    rsi,QWORD PTR [rbp-0x10]
  424817:	mov    rdi,QWORD PTR [rbp-0x38]
  42481b:	call   rax
  42481d:	mov    QWORD PTR [rbp-0x40],rax
  424821:	mov    rax,QWORD PTR [rbp-0x40]
  424825:	cmp    rax,QWORD PTR [rbp-0x48]
  424829:	jne    424834 <flatcc_verify_union_vector_field@@Base+0x15a0>
  42482b:	mov    rax,QWORD PTR [rbp-0x40]
  42482f:	jmp    4248c9 <flatcc_verify_union_vector_field@@Base+0x1635>
  424834:	mov    rax,QWORD PTR [rbp-0x40]
  424838:	cmp    rax,QWORD PTR [rbp-0x10]
  42483c:	jne    42484f <flatcc_verify_union_vector_field@@Base+0x15bb>
  42483e:	add    QWORD PTR [rbp-0x18],0x8
  424843:	mov    rax,QWORD PTR [rbp-0x18]
  424847:	mov    rax,QWORD PTR [rax]
  42484a:	test   rax,rax
  42484d:	jne    4247f4 <flatcc_verify_union_vector_field@@Base+0x1560>
  42484f:	mov    rax,QWORD PTR [rbp-0x10]
  424853:	cmp    rax,QWORD PTR [rbp-0x40]
  424857:	jne    424874 <flatcc_verify_union_vector_field@@Base+0x15e0>
  424859:	mov    rdx,QWORD PTR [rbp-0x48]
  42485d:	mov    rsi,QWORD PTR [rbp-0x40]
  424861:	mov    rax,QWORD PTR [rbp-0x38]
  424865:	mov    ecx,0x17
  42486a:	mov    rdi,rax
  42486d:	call   427257 <flatcc_json_parser_set_error@@Base>
  424872:	jmp    4248c9 <flatcc_verify_union_vector_field@@Base+0x1635>
  424874:	mov    rdi,QWORD PTR [rbp-0x20]
  424878:	mov    ecx,DWORD PTR [rbp-0x30]
  42487b:	lea    r8,[rbp-0x28]
  42487f:	mov    rdx,QWORD PTR [rbp-0x48]
  424883:	mov    rsi,QWORD PTR [rbp-0x40]
  424887:	mov    rax,QWORD PTR [rbp-0x38]
  42488b:	mov    r9,r8
  42488e:	mov    r8,rdi
  424891:	mov    rdi,rax
  424894:	call   423cb3 <flatcc_verify_union_vector_field@@Base+0xa1f>
  424899:	cmp    QWORD PTR [rbp-0x48],rax
  42489d:	jne    4248a5 <flatcc_verify_union_vector_field@@Base+0x1611>
  42489f:	mov    rax,QWORD PTR [rbp-0x48]
  4248a3:	jmp    4248c9 <flatcc_verify_union_vector_field@@Base+0x1635>
  4248a5:	mov    rax,QWORD PTR [rbp-0x58]
  4248a9:	mov    rdx,QWORD PTR [rax]
  4248ac:	mov    rax,QWORD PTR [rbp-0x28]
  4248b0:	add    rdx,rax
  4248b3:	mov    rax,QWORD PTR [rbp-0x58]
  4248b7:	mov    QWORD PTR [rax],rdx
  4248ba:	mov    eax,DWORD PTR [rbp-0x2c]
  4248bd:	test   eax,eax
  4248bf:	jne    4247ec <flatcc_verify_union_vector_field@@Base+0x1558>
  4248c5:	mov    rax,QWORD PTR [rbp-0x40]
  4248c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4248cd:	xor    rdi,QWORD PTR fs:0x28
  4248d6:	je     4248dd <flatcc_verify_union_vector_field@@Base+0x1649>
  4248d8:	call   4061a0 <__stack_chk_fail@plt>
  4248dd:	leave  
  4248de:	ret    
  4248df:	endbr64 
  4248e3:	push   rbp
  4248e4:	mov    rbp,rsp
  4248e7:	sub    rsp,0x60
  4248eb:	mov    QWORD PTR [rbp-0x38],rdi
  4248ef:	mov    QWORD PTR [rbp-0x40],rsi
  4248f3:	mov    QWORD PTR [rbp-0x48],rdx
  4248f7:	mov    QWORD PTR [rbp-0x50],rcx
  4248fb:	mov    QWORD PTR [rbp-0x58],r8
  4248ff:	mov    rax,QWORD PTR fs:0x28
  424908:	mov    QWORD PTR [rbp-0x8],rax
  42490c:	xor    eax,eax
  42490e:	mov    DWORD PTR [rbp-0x2c],0x0
  424915:	mov    rax,QWORD PTR [rbp-0x58]
  424919:	mov    DWORD PTR [rax],0x0
  42491f:	mov    rdx,QWORD PTR [rbp-0x48]
  424923:	mov    rcx,QWORD PTR [rbp-0x40]
  424927:	mov    rax,QWORD PTR [rbp-0x38]
  42492b:	mov    rsi,rcx
  42492e:	mov    rdi,rax
  424931:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424936:	mov    QWORD PTR [rbp-0x40],rax
  42493a:	mov    rax,QWORD PTR [rbp-0x40]
  42493e:	cmp    rax,QWORD PTR [rbp-0x48]
  424942:	jne    42494d <flatcc_verify_union_vector_field@@Base+0x16b9>
  424944:	mov    rax,QWORD PTR [rbp-0x40]
  424948:	jmp    424a26 <flatcc_verify_union_vector_field@@Base+0x1792>
  42494d:	mov    rax,QWORD PTR [rbp-0x50]
  424951:	mov    QWORD PTR [rbp-0x18],rax
  424955:	mov    rax,QWORD PTR [rbp-0x18]
  424959:	mov    rax,QWORD PTR [rax]
  42495c:	mov    rdx,QWORD PTR [rbp-0x40]
  424960:	mov    QWORD PTR [rbp-0x10],rdx
  424964:	lea    r9,[rbp-0x24]
  424968:	lea    r8,[rbp-0x20]
  42496c:	lea    rcx,[rbp-0x28]
  424970:	mov    rdx,QWORD PTR [rbp-0x48]
  424974:	mov    rsi,QWORD PTR [rbp-0x10]
  424978:	mov    rdi,QWORD PTR [rbp-0x38]
  42497c:	call   rax
  42497e:	mov    QWORD PTR [rbp-0x40],rax
  424982:	mov    rax,QWORD PTR [rbp-0x40]
  424986:	cmp    rax,QWORD PTR [rbp-0x48]
  42498a:	jne    424995 <flatcc_verify_union_vector_field@@Base+0x1701>
  42498c:	mov    rax,QWORD PTR [rbp-0x40]
  424990:	jmp    424a26 <flatcc_verify_union_vector_field@@Base+0x1792>
  424995:	mov    rax,QWORD PTR [rbp-0x40]
  424999:	cmp    rax,QWORD PTR [rbp-0x10]
  42499d:	jne    4249b0 <flatcc_verify_union_vector_field@@Base+0x171c>
  42499f:	add    QWORD PTR [rbp-0x18],0x8
  4249a4:	mov    rax,QWORD PTR [rbp-0x18]
  4249a8:	mov    rax,QWORD PTR [rax]
  4249ab:	test   rax,rax
  4249ae:	jne    424955 <flatcc_verify_union_vector_field@@Base+0x16c1>
  4249b0:	mov    rax,QWORD PTR [rbp-0x10]
  4249b4:	cmp    rax,QWORD PTR [rbp-0x40]
  4249b8:	jne    4249d5 <flatcc_verify_union_vector_field@@Base+0x1741>
  4249ba:	mov    rdx,QWORD PTR [rbp-0x48]
  4249be:	mov    rsi,QWORD PTR [rbp-0x40]
  4249c2:	mov    rax,QWORD PTR [rbp-0x38]
  4249c6:	mov    ecx,0x17
  4249cb:	mov    rdi,rax
  4249ce:	call   427257 <flatcc_json_parser_set_error@@Base>
  4249d3:	jmp    424a26 <flatcc_verify_union_vector_field@@Base+0x1792>
  4249d5:	mov    rdi,QWORD PTR [rbp-0x20]
  4249d9:	mov    ecx,DWORD PTR [rbp-0x28]
  4249dc:	lea    r8,[rbp-0x2c]
  4249e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4249e4:	mov    rsi,QWORD PTR [rbp-0x40]
  4249e8:	mov    rax,QWORD PTR [rbp-0x38]
  4249ec:	mov    r9,r8
  4249ef:	mov    r8,rdi
  4249f2:	mov    rdi,rax
  4249f5:	call   423d4b <flatcc_verify_union_vector_field@@Base+0xab7>
  4249fa:	cmp    QWORD PTR [rbp-0x48],rax
  4249fe:	jne    424a06 <flatcc_verify_union_vector_field@@Base+0x1772>
  424a00:	mov    rax,QWORD PTR [rbp-0x48]
  424a04:	jmp    424a26 <flatcc_verify_union_vector_field@@Base+0x1792>
  424a06:	mov    rax,QWORD PTR [rbp-0x58]
  424a0a:	mov    edx,DWORD PTR [rax]
  424a0c:	mov    eax,DWORD PTR [rbp-0x2c]
  424a0f:	add    edx,eax
  424a11:	mov    rax,QWORD PTR [rbp-0x58]
  424a15:	mov    DWORD PTR [rax],edx
  424a17:	mov    eax,DWORD PTR [rbp-0x24]
  424a1a:	test   eax,eax
  424a1c:	jne    42494d <flatcc_verify_union_vector_field@@Base+0x16b9>
  424a22:	mov    rax,QWORD PTR [rbp-0x40]
  424a26:	mov    rdi,QWORD PTR [rbp-0x8]
  424a2a:	xor    rdi,QWORD PTR fs:0x28
  424a33:	je     424a3a <flatcc_verify_union_vector_field@@Base+0x17a6>
  424a35:	call   4061a0 <__stack_chk_fail@plt>
  424a3a:	leave  
  424a3b:	ret    
  424a3c:	endbr64 
  424a40:	push   rbp
  424a41:	mov    rbp,rsp
  424a44:	sub    rsp,0x60
  424a48:	mov    QWORD PTR [rbp-0x38],rdi
  424a4c:	mov    QWORD PTR [rbp-0x40],rsi
  424a50:	mov    QWORD PTR [rbp-0x48],rdx
  424a54:	mov    QWORD PTR [rbp-0x50],rcx
  424a58:	mov    QWORD PTR [rbp-0x58],r8
  424a5c:	mov    rax,QWORD PTR fs:0x28
  424a65:	mov    QWORD PTR [rbp-0x8],rax
  424a69:	xor    eax,eax
  424a6b:	mov    WORD PTR [rbp-0x2a],0x0
  424a71:	mov    rax,QWORD PTR [rbp-0x58]
  424a75:	mov    WORD PTR [rax],0x0
  424a7a:	mov    rdx,QWORD PTR [rbp-0x48]
  424a7e:	mov    rcx,QWORD PTR [rbp-0x40]
  424a82:	mov    rax,QWORD PTR [rbp-0x38]
  424a86:	mov    rsi,rcx
  424a89:	mov    rdi,rax
  424a8c:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424a91:	mov    QWORD PTR [rbp-0x40],rax
  424a95:	mov    rax,QWORD PTR [rbp-0x40]
  424a99:	cmp    rax,QWORD PTR [rbp-0x48]
  424a9d:	jne    424aa8 <flatcc_verify_union_vector_field@@Base+0x1814>
  424a9f:	mov    rax,QWORD PTR [rbp-0x40]
  424aa3:	jmp    424b88 <flatcc_verify_union_vector_field@@Base+0x18f4>
  424aa8:	mov    rax,QWORD PTR [rbp-0x50]
  424aac:	mov    QWORD PTR [rbp-0x18],rax
  424ab0:	mov    rax,QWORD PTR [rbp-0x18]
  424ab4:	mov    rax,QWORD PTR [rax]
  424ab7:	mov    rdx,QWORD PTR [rbp-0x40]
  424abb:	mov    QWORD PTR [rbp-0x10],rdx
  424abf:	lea    r9,[rbp-0x24]
  424ac3:	lea    r8,[rbp-0x20]
  424ac7:	lea    rcx,[rbp-0x28]
  424acb:	mov    rdx,QWORD PTR [rbp-0x48]
  424acf:	mov    rsi,QWORD PTR [rbp-0x10]
  424ad3:	mov    rdi,QWORD PTR [rbp-0x38]
  424ad7:	call   rax
  424ad9:	mov    QWORD PTR [rbp-0x40],rax
  424add:	mov    rax,QWORD PTR [rbp-0x40]
  424ae1:	cmp    rax,QWORD PTR [rbp-0x48]
  424ae5:	jne    424af0 <flatcc_verify_union_vector_field@@Base+0x185c>
  424ae7:	mov    rax,QWORD PTR [rbp-0x40]
  424aeb:	jmp    424b88 <flatcc_verify_union_vector_field@@Base+0x18f4>
  424af0:	mov    rax,QWORD PTR [rbp-0x40]
  424af4:	cmp    rax,QWORD PTR [rbp-0x10]
  424af8:	jne    424b0b <flatcc_verify_union_vector_field@@Base+0x1877>
  424afa:	add    QWORD PTR [rbp-0x18],0x8
  424aff:	mov    rax,QWORD PTR [rbp-0x18]
  424b03:	mov    rax,QWORD PTR [rax]
  424b06:	test   rax,rax
  424b09:	jne    424ab0 <flatcc_verify_union_vector_field@@Base+0x181c>
  424b0b:	mov    rax,QWORD PTR [rbp-0x10]
  424b0f:	cmp    rax,QWORD PTR [rbp-0x40]
  424b13:	jne    424b30 <flatcc_verify_union_vector_field@@Base+0x189c>
  424b15:	mov    rdx,QWORD PTR [rbp-0x48]
  424b19:	mov    rsi,QWORD PTR [rbp-0x40]
  424b1d:	mov    rax,QWORD PTR [rbp-0x38]
  424b21:	mov    ecx,0x17
  424b26:	mov    rdi,rax
  424b29:	call   427257 <flatcc_json_parser_set_error@@Base>
  424b2e:	jmp    424b88 <flatcc_verify_union_vector_field@@Base+0x18f4>
  424b30:	mov    rdi,QWORD PTR [rbp-0x20]
  424b34:	mov    ecx,DWORD PTR [rbp-0x28]
  424b37:	lea    r8,[rbp-0x2a]
  424b3b:	mov    rdx,QWORD PTR [rbp-0x48]
  424b3f:	mov    rsi,QWORD PTR [rbp-0x40]
  424b43:	mov    rax,QWORD PTR [rbp-0x38]
  424b47:	mov    r9,r8
  424b4a:	mov    r8,rdi
  424b4d:	mov    rdi,rax
  424b50:	call   423ddd <flatcc_verify_union_vector_field@@Base+0xb49>
  424b55:	cmp    QWORD PTR [rbp-0x48],rax
  424b59:	jne    424b61 <flatcc_verify_union_vector_field@@Base+0x18cd>
  424b5b:	mov    rax,QWORD PTR [rbp-0x48]
  424b5f:	jmp    424b88 <flatcc_verify_union_vector_field@@Base+0x18f4>
  424b61:	mov    rax,QWORD PTR [rbp-0x58]
  424b65:	movzx  eax,WORD PTR [rax]
  424b68:	mov    edx,eax
  424b6a:	movzx  eax,WORD PTR [rbp-0x2a]
  424b6e:	add    eax,edx
  424b70:	mov    edx,eax
  424b72:	mov    rax,QWORD PTR [rbp-0x58]
  424b76:	mov    WORD PTR [rax],dx
  424b79:	mov    eax,DWORD PTR [rbp-0x24]
  424b7c:	test   eax,eax
  424b7e:	jne    424aa8 <flatcc_verify_union_vector_field@@Base+0x1814>
  424b84:	mov    rax,QWORD PTR [rbp-0x40]
  424b88:	mov    rdi,QWORD PTR [rbp-0x8]
  424b8c:	xor    rdi,QWORD PTR fs:0x28
  424b95:	je     424b9c <flatcc_verify_union_vector_field@@Base+0x1908>
  424b97:	call   4061a0 <__stack_chk_fail@plt>
  424b9c:	leave  
  424b9d:	ret    
  424b9e:	endbr64 
  424ba2:	push   rbp
  424ba3:	mov    rbp,rsp
  424ba6:	sub    rsp,0x60
  424baa:	mov    QWORD PTR [rbp-0x38],rdi
  424bae:	mov    QWORD PTR [rbp-0x40],rsi
  424bb2:	mov    QWORD PTR [rbp-0x48],rdx
  424bb6:	mov    QWORD PTR [rbp-0x50],rcx
  424bba:	mov    QWORD PTR [rbp-0x58],r8
  424bbe:	mov    rax,QWORD PTR fs:0x28
  424bc7:	mov    QWORD PTR [rbp-0x8],rax
  424bcb:	xor    eax,eax
  424bcd:	mov    BYTE PTR [rbp-0x29],0x0
  424bd1:	mov    rax,QWORD PTR [rbp-0x58]
  424bd5:	mov    BYTE PTR [rax],0x0
  424bd8:	mov    rdx,QWORD PTR [rbp-0x48]
  424bdc:	mov    rcx,QWORD PTR [rbp-0x40]
  424be0:	mov    rax,QWORD PTR [rbp-0x38]
  424be4:	mov    rsi,rcx
  424be7:	mov    rdi,rax
  424bea:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424bef:	mov    QWORD PTR [rbp-0x40],rax
  424bf3:	mov    rax,QWORD PTR [rbp-0x40]
  424bf7:	cmp    rax,QWORD PTR [rbp-0x48]
  424bfb:	jne    424c06 <flatcc_verify_union_vector_field@@Base+0x1972>
  424bfd:	mov    rax,QWORD PTR [rbp-0x40]
  424c01:	jmp    424ce5 <flatcc_verify_union_vector_field@@Base+0x1a51>
  424c06:	mov    rax,QWORD PTR [rbp-0x50]
  424c0a:	mov    QWORD PTR [rbp-0x18],rax
  424c0e:	mov    rax,QWORD PTR [rbp-0x18]
  424c12:	mov    rax,QWORD PTR [rax]
  424c15:	mov    rdx,QWORD PTR [rbp-0x40]
  424c19:	mov    QWORD PTR [rbp-0x10],rdx
  424c1d:	lea    r9,[rbp-0x24]
  424c21:	lea    r8,[rbp-0x20]
  424c25:	lea    rcx,[rbp-0x28]
  424c29:	mov    rdx,QWORD PTR [rbp-0x48]
  424c2d:	mov    rsi,QWORD PTR [rbp-0x10]
  424c31:	mov    rdi,QWORD PTR [rbp-0x38]
  424c35:	call   rax
  424c37:	mov    QWORD PTR [rbp-0x40],rax
  424c3b:	mov    rax,QWORD PTR [rbp-0x40]
  424c3f:	cmp    rax,QWORD PTR [rbp-0x48]
  424c43:	jne    424c4e <flatcc_verify_union_vector_field@@Base+0x19ba>
  424c45:	mov    rax,QWORD PTR [rbp-0x40]
  424c49:	jmp    424ce5 <flatcc_verify_union_vector_field@@Base+0x1a51>
  424c4e:	mov    rax,QWORD PTR [rbp-0x40]
  424c52:	cmp    rax,QWORD PTR [rbp-0x10]
  424c56:	jne    424c69 <flatcc_verify_union_vector_field@@Base+0x19d5>
  424c58:	add    QWORD PTR [rbp-0x18],0x8
  424c5d:	mov    rax,QWORD PTR [rbp-0x18]
  424c61:	mov    rax,QWORD PTR [rax]
  424c64:	test   rax,rax
  424c67:	jne    424c0e <flatcc_verify_union_vector_field@@Base+0x197a>
  424c69:	mov    rax,QWORD PTR [rbp-0x10]
  424c6d:	cmp    rax,QWORD PTR [rbp-0x40]
  424c71:	jne    424c8e <flatcc_verify_union_vector_field@@Base+0x19fa>
  424c73:	mov    rdx,QWORD PTR [rbp-0x48]
  424c77:	mov    rsi,QWORD PTR [rbp-0x40]
  424c7b:	mov    rax,QWORD PTR [rbp-0x38]
  424c7f:	mov    ecx,0x17
  424c84:	mov    rdi,rax
  424c87:	call   427257 <flatcc_json_parser_set_error@@Base>
  424c8c:	jmp    424ce5 <flatcc_verify_union_vector_field@@Base+0x1a51>
  424c8e:	mov    rdi,QWORD PTR [rbp-0x20]
  424c92:	mov    ecx,DWORD PTR [rbp-0x28]
  424c95:	lea    r8,[rbp-0x29]
  424c99:	mov    rdx,QWORD PTR [rbp-0x48]
  424c9d:	mov    rsi,QWORD PTR [rbp-0x40]
  424ca1:	mov    rax,QWORD PTR [rbp-0x38]
  424ca5:	mov    r9,r8
  424ca8:	mov    r8,rdi
  424cab:	mov    rdi,rax
  424cae:	call   423e70 <flatcc_verify_union_vector_field@@Base+0xbdc>
  424cb3:	cmp    QWORD PTR [rbp-0x48],rax
  424cb7:	jne    424cbf <flatcc_verify_union_vector_field@@Base+0x1a2b>
  424cb9:	mov    rax,QWORD PTR [rbp-0x48]
  424cbd:	jmp    424ce5 <flatcc_verify_union_vector_field@@Base+0x1a51>
  424cbf:	mov    rax,QWORD PTR [rbp-0x58]
  424cc3:	movzx  eax,BYTE PTR [rax]
  424cc6:	mov    edx,eax
  424cc8:	movzx  eax,BYTE PTR [rbp-0x29]
  424ccc:	add    eax,edx
  424cce:	mov    edx,eax
  424cd0:	mov    rax,QWORD PTR [rbp-0x58]
  424cd4:	mov    BYTE PTR [rax],dl
  424cd6:	mov    eax,DWORD PTR [rbp-0x24]
  424cd9:	test   eax,eax
  424cdb:	jne    424c06 <flatcc_verify_union_vector_field@@Base+0x1972>
  424ce1:	mov    rax,QWORD PTR [rbp-0x40]
  424ce5:	mov    rdi,QWORD PTR [rbp-0x8]
  424ce9:	xor    rdi,QWORD PTR fs:0x28
  424cf2:	je     424cf9 <flatcc_verify_union_vector_field@@Base+0x1a65>
  424cf4:	call   4061a0 <__stack_chk_fail@plt>
  424cf9:	leave  
  424cfa:	ret    
  424cfb:	endbr64 
  424cff:	push   rbp
  424d00:	mov    rbp,rsp
  424d03:	sub    rsp,0x60
  424d07:	mov    QWORD PTR [rbp-0x38],rdi
  424d0b:	mov    QWORD PTR [rbp-0x40],rsi
  424d0f:	mov    QWORD PTR [rbp-0x48],rdx
  424d13:	mov    QWORD PTR [rbp-0x50],rcx
  424d17:	mov    QWORD PTR [rbp-0x58],r8
  424d1b:	mov    rax,QWORD PTR fs:0x28
  424d24:	mov    QWORD PTR [rbp-0x8],rax
  424d28:	xor    eax,eax
  424d2a:	mov    BYTE PTR [rbp-0x29],0x0
  424d2e:	mov    rax,QWORD PTR [rbp-0x58]
  424d32:	mov    BYTE PTR [rax],0x0
  424d35:	mov    rdx,QWORD PTR [rbp-0x48]
  424d39:	mov    rcx,QWORD PTR [rbp-0x40]
  424d3d:	mov    rax,QWORD PTR [rbp-0x38]
  424d41:	mov    rsi,rcx
  424d44:	mov    rdi,rax
  424d47:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424d4c:	mov    QWORD PTR [rbp-0x40],rax
  424d50:	mov    rax,QWORD PTR [rbp-0x40]
  424d54:	cmp    rax,QWORD PTR [rbp-0x48]
  424d58:	jne    424d63 <flatcc_verify_union_vector_field@@Base+0x1acf>
  424d5a:	mov    rax,QWORD PTR [rbp-0x40]
  424d5e:	jmp    424e3e <flatcc_verify_union_vector_field@@Base+0x1baa>
  424d63:	mov    rax,QWORD PTR [rbp-0x50]
  424d67:	mov    QWORD PTR [rbp-0x18],rax
  424d6b:	mov    rax,QWORD PTR [rbp-0x18]
  424d6f:	mov    rax,QWORD PTR [rax]
  424d72:	mov    rdx,QWORD PTR [rbp-0x40]
  424d76:	mov    QWORD PTR [rbp-0x10],rdx
  424d7a:	lea    r9,[rbp-0x24]
  424d7e:	lea    r8,[rbp-0x20]
  424d82:	lea    rcx,[rbp-0x28]
  424d86:	mov    rdx,QWORD PTR [rbp-0x48]
  424d8a:	mov    rsi,QWORD PTR [rbp-0x10]
  424d8e:	mov    rdi,QWORD PTR [rbp-0x38]
  424d92:	call   rax
  424d94:	mov    QWORD PTR [rbp-0x40],rax
  424d98:	mov    rax,QWORD PTR [rbp-0x40]
  424d9c:	cmp    rax,QWORD PTR [rbp-0x48]
  424da0:	jne    424dab <flatcc_verify_union_vector_field@@Base+0x1b17>
  424da2:	mov    rax,QWORD PTR [rbp-0x40]
  424da6:	jmp    424e3e <flatcc_verify_union_vector_field@@Base+0x1baa>
  424dab:	mov    rax,QWORD PTR [rbp-0x40]
  424daf:	cmp    rax,QWORD PTR [rbp-0x10]
  424db3:	jne    424dc6 <flatcc_verify_union_vector_field@@Base+0x1b32>
  424db5:	add    QWORD PTR [rbp-0x18],0x8
  424dba:	mov    rax,QWORD PTR [rbp-0x18]
  424dbe:	mov    rax,QWORD PTR [rax]
  424dc1:	test   rax,rax
  424dc4:	jne    424d6b <flatcc_verify_union_vector_field@@Base+0x1ad7>
  424dc6:	mov    rax,QWORD PTR [rbp-0x10]
  424dca:	cmp    rax,QWORD PTR [rbp-0x40]
  424dce:	jne    424deb <flatcc_verify_union_vector_field@@Base+0x1b57>
  424dd0:	mov    rdx,QWORD PTR [rbp-0x48]
  424dd4:	mov    rsi,QWORD PTR [rbp-0x40]
  424dd8:	mov    rax,QWORD PTR [rbp-0x38]
  424ddc:	mov    ecx,0x17
  424de1:	mov    rdi,rax
  424de4:	call   427257 <flatcc_json_parser_set_error@@Base>
  424de9:	jmp    424e3e <flatcc_verify_union_vector_field@@Base+0x1baa>
  424deb:	mov    rdi,QWORD PTR [rbp-0x20]
  424def:	mov    ecx,DWORD PTR [rbp-0x28]
  424df2:	lea    r8,[rbp-0x29]
  424df6:	mov    rdx,QWORD PTR [rbp-0x48]
  424dfa:	mov    rsi,QWORD PTR [rbp-0x40]
  424dfe:	mov    rax,QWORD PTR [rbp-0x38]
  424e02:	mov    r9,r8
  424e05:	mov    r8,rdi
  424e08:	mov    rdi,rax
  424e0b:	call   423af6 <flatcc_verify_union_vector_field@@Base+0x862>
  424e10:	cmp    QWORD PTR [rbp-0x48],rax
  424e14:	jne    424e1c <flatcc_verify_union_vector_field@@Base+0x1b88>
  424e16:	mov    rax,QWORD PTR [rbp-0x48]
  424e1a:	jmp    424e3e <flatcc_verify_union_vector_field@@Base+0x1baa>
  424e1c:	mov    rax,QWORD PTR [rbp-0x58]
  424e20:	movzx  edx,BYTE PTR [rax]
  424e23:	movzx  eax,BYTE PTR [rbp-0x29]
  424e27:	add    eax,edx
  424e29:	mov    rdx,QWORD PTR [rbp-0x58]
  424e2d:	mov    BYTE PTR [rdx],al
  424e2f:	mov    eax,DWORD PTR [rbp-0x24]
  424e32:	test   eax,eax
  424e34:	jne    424d63 <flatcc_verify_union_vector_field@@Base+0x1acf>
  424e3a:	mov    rax,QWORD PTR [rbp-0x40]
  424e3e:	mov    rdi,QWORD PTR [rbp-0x8]
  424e42:	xor    rdi,QWORD PTR fs:0x28
  424e4b:	je     424e52 <flatcc_verify_union_vector_field@@Base+0x1bbe>
  424e4d:	call   4061a0 <__stack_chk_fail@plt>
  424e52:	leave  
  424e53:	ret    
  424e54:	endbr64 
  424e58:	push   rbp
  424e59:	mov    rbp,rsp
  424e5c:	sub    rsp,0x60
  424e60:	mov    QWORD PTR [rbp-0x38],rdi
  424e64:	mov    QWORD PTR [rbp-0x40],rsi
  424e68:	mov    QWORD PTR [rbp-0x48],rdx
  424e6c:	mov    QWORD PTR [rbp-0x50],rcx
  424e70:	mov    QWORD PTR [rbp-0x58],r8
  424e74:	mov    rax,QWORD PTR fs:0x28
  424e7d:	mov    QWORD PTR [rbp-0x8],rax
  424e81:	xor    eax,eax
  424e83:	vxorps xmm0,xmm0,xmm0
  424e87:	vmovss DWORD PTR [rbp-0x2c],xmm0
  424e8c:	mov    rax,QWORD PTR [rbp-0x58]
  424e90:	vxorps xmm0,xmm0,xmm0
  424e94:	vmovss DWORD PTR [rax],xmm0
  424e98:	mov    rdx,QWORD PTR [rbp-0x48]
  424e9c:	mov    rcx,QWORD PTR [rbp-0x40]
  424ea0:	mov    rax,QWORD PTR [rbp-0x38]
  424ea4:	mov    rsi,rcx
  424ea7:	mov    rdi,rax
  424eaa:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  424eaf:	mov    QWORD PTR [rbp-0x40],rax
  424eb3:	mov    rax,QWORD PTR [rbp-0x40]
  424eb7:	cmp    rax,QWORD PTR [rbp-0x48]
  424ebb:	jne    424ec6 <flatcc_verify_union_vector_field@@Base+0x1c32>
  424ebd:	mov    rax,QWORD PTR [rbp-0x40]
  424ec1:	jmp    424fa7 <flatcc_verify_union_vector_field@@Base+0x1d13>
  424ec6:	mov    rax,QWORD PTR [rbp-0x50]
  424eca:	mov    QWORD PTR [rbp-0x18],rax
  424ece:	mov    rax,QWORD PTR [rbp-0x18]
  424ed2:	mov    rax,QWORD PTR [rax]
  424ed5:	mov    rdx,QWORD PTR [rbp-0x40]
  424ed9:	mov    QWORD PTR [rbp-0x10],rdx
  424edd:	lea    r9,[rbp-0x24]
  424ee1:	lea    r8,[rbp-0x20]
  424ee5:	lea    rcx,[rbp-0x28]
  424ee9:	mov    rdx,QWORD PTR [rbp-0x48]
  424eed:	mov    rsi,QWORD PTR [rbp-0x10]
  424ef1:	mov    rdi,QWORD PTR [rbp-0x38]
  424ef5:	call   rax
  424ef7:	mov    QWORD PTR [rbp-0x40],rax
  424efb:	mov    rax,QWORD PTR [rbp-0x40]
  424eff:	cmp    rax,QWORD PTR [rbp-0x48]
  424f03:	jne    424f0e <flatcc_verify_union_vector_field@@Base+0x1c7a>
  424f05:	mov    rax,QWORD PTR [rbp-0x40]
  424f09:	jmp    424fa7 <flatcc_verify_union_vector_field@@Base+0x1d13>
  424f0e:	mov    rax,QWORD PTR [rbp-0x40]
  424f12:	cmp    rax,QWORD PTR [rbp-0x10]
  424f16:	jne    424f29 <flatcc_verify_union_vector_field@@Base+0x1c95>
  424f18:	add    QWORD PTR [rbp-0x18],0x8
  424f1d:	mov    rax,QWORD PTR [rbp-0x18]
  424f21:	mov    rax,QWORD PTR [rax]
  424f24:	test   rax,rax
  424f27:	jne    424ece <flatcc_verify_union_vector_field@@Base+0x1c3a>
  424f29:	mov    rax,QWORD PTR [rbp-0x10]
  424f2d:	cmp    rax,QWORD PTR [rbp-0x40]
  424f31:	jne    424f4e <flatcc_verify_union_vector_field@@Base+0x1cba>
  424f33:	mov    rdx,QWORD PTR [rbp-0x48]
  424f37:	mov    rsi,QWORD PTR [rbp-0x40]
  424f3b:	mov    rax,QWORD PTR [rbp-0x38]
  424f3f:	mov    ecx,0x17
  424f44:	mov    rdi,rax
  424f47:	call   427257 <flatcc_json_parser_set_error@@Base>
  424f4c:	jmp    424fa7 <flatcc_verify_union_vector_field@@Base+0x1d13>
  424f4e:	mov    rdi,QWORD PTR [rbp-0x20]
  424f52:	mov    ecx,DWORD PTR [rbp-0x28]
  424f55:	lea    r8,[rbp-0x2c]
  424f59:	mov    rdx,QWORD PTR [rbp-0x48]
  424f5d:	mov    rsi,QWORD PTR [rbp-0x40]
  424f61:	mov    rax,QWORD PTR [rbp-0x38]
  424f65:	mov    r9,r8
  424f68:	mov    r8,rdi
  424f6b:	mov    rdi,rax
  424f6e:	call   423efe <flatcc_verify_union_vector_field@@Base+0xc6a>
  424f73:	cmp    QWORD PTR [rbp-0x48],rax
  424f77:	jne    424f7f <flatcc_verify_union_vector_field@@Base+0x1ceb>
  424f79:	mov    rax,QWORD PTR [rbp-0x48]
  424f7d:	jmp    424fa7 <flatcc_verify_union_vector_field@@Base+0x1d13>
  424f7f:	mov    rax,QWORD PTR [rbp-0x58]
  424f83:	vmovss xmm1,DWORD PTR [rax]
  424f87:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  424f8c:	vaddss xmm0,xmm1,xmm0
  424f90:	mov    rax,QWORD PTR [rbp-0x58]
  424f94:	vmovss DWORD PTR [rax],xmm0
  424f98:	mov    eax,DWORD PTR [rbp-0x24]
  424f9b:	test   eax,eax
  424f9d:	jne    424ec6 <flatcc_verify_union_vector_field@@Base+0x1c32>
  424fa3:	mov    rax,QWORD PTR [rbp-0x40]
  424fa7:	mov    rdi,QWORD PTR [rbp-0x8]
  424fab:	xor    rdi,QWORD PTR fs:0x28
  424fb4:	je     424fbb <flatcc_verify_union_vector_field@@Base+0x1d27>
  424fb6:	call   4061a0 <__stack_chk_fail@plt>
  424fbb:	leave  
  424fbc:	ret    
  424fbd:	endbr64 
  424fc1:	push   rbp
  424fc2:	mov    rbp,rsp
  424fc5:	sub    rsp,0x60
  424fc9:	mov    QWORD PTR [rbp-0x38],rdi
  424fcd:	mov    QWORD PTR [rbp-0x40],rsi
  424fd1:	mov    QWORD PTR [rbp-0x48],rdx
  424fd5:	mov    QWORD PTR [rbp-0x50],rcx
  424fd9:	mov    QWORD PTR [rbp-0x58],r8
  424fdd:	mov    rax,QWORD PTR fs:0x28
  424fe6:	mov    QWORD PTR [rbp-0x8],rax
  424fea:	xor    eax,eax
  424fec:	vxorpd xmm0,xmm0,xmm0
  424ff0:	vmovsd QWORD PTR [rbp-0x28],xmm0
  424ff5:	mov    rax,QWORD PTR [rbp-0x58]
  424ff9:	vxorpd xmm0,xmm0,xmm0
  424ffd:	vmovsd QWORD PTR [rax],xmm0
  425001:	mov    rdx,QWORD PTR [rbp-0x48]
  425005:	mov    rcx,QWORD PTR [rbp-0x40]
  425009:	mov    rax,QWORD PTR [rbp-0x38]
  42500d:	mov    rsi,rcx
  425010:	mov    rdi,rax
  425013:	call   42371c <flatcc_verify_union_vector_field@@Base+0x488>
  425018:	mov    QWORD PTR [rbp-0x40],rax
  42501c:	mov    rax,QWORD PTR [rbp-0x40]
  425020:	cmp    rax,QWORD PTR [rbp-0x48]
  425024:	jne    42502f <flatcc_verify_union_vector_field@@Base+0x1d9b>
  425026:	mov    rax,QWORD PTR [rbp-0x40]
  42502a:	jmp    425110 <flatcc_verify_union_vector_field@@Base+0x1e7c>
  42502f:	mov    rax,QWORD PTR [rbp-0x50]
  425033:	mov    QWORD PTR [rbp-0x18],rax
  425037:	mov    rax,QWORD PTR [rbp-0x18]
  42503b:	mov    rax,QWORD PTR [rax]
  42503e:	mov    rdx,QWORD PTR [rbp-0x40]
  425042:	mov    QWORD PTR [rbp-0x10],rdx
  425046:	lea    r9,[rbp-0x2c]
  42504a:	lea    r8,[rbp-0x20]
  42504e:	lea    rcx,[rbp-0x30]
  425052:	mov    rdx,QWORD PTR [rbp-0x48]
  425056:	mov    rsi,QWORD PTR [rbp-0x10]
  42505a:	mov    rdi,QWORD PTR [rbp-0x38]
  42505e:	call   rax
  425060:	mov    QWORD PTR [rbp-0x40],rax
  425064:	mov    rax,QWORD PTR [rbp-0x40]
  425068:	cmp    rax,QWORD PTR [rbp-0x48]
  42506c:	jne    425077 <flatcc_verify_union_vector_field@@Base+0x1de3>
  42506e:	mov    rax,QWORD PTR [rbp-0x40]
  425072:	jmp    425110 <flatcc_verify_union_vector_field@@Base+0x1e7c>
  425077:	mov    rax,QWORD PTR [rbp-0x40]
  42507b:	cmp    rax,QWORD PTR [rbp-0x10]
  42507f:	jne    425092 <flatcc_verify_union_vector_field@@Base+0x1dfe>
  425081:	add    QWORD PTR [rbp-0x18],0x8
  425086:	mov    rax,QWORD PTR [rbp-0x18]
  42508a:	mov    rax,QWORD PTR [rax]
  42508d:	test   rax,rax
  425090:	jne    425037 <flatcc_verify_union_vector_field@@Base+0x1da3>
  425092:	mov    rax,QWORD PTR [rbp-0x10]
  425096:	cmp    rax,QWORD PTR [rbp-0x40]
  42509a:	jne    4250b7 <flatcc_verify_union_vector_field@@Base+0x1e23>
  42509c:	mov    rdx,QWORD PTR [rbp-0x48]
  4250a0:	mov    rsi,QWORD PTR [rbp-0x40]
  4250a4:	mov    rax,QWORD PTR [rbp-0x38]
  4250a8:	mov    ecx,0x17
  4250ad:	mov    rdi,rax
  4250b0:	call   427257 <flatcc_json_parser_set_error@@Base>
  4250b5:	jmp    425110 <flatcc_verify_union_vector_field@@Base+0x1e7c>
  4250b7:	mov    rdi,QWORD PTR [rbp-0x20]
  4250bb:	mov    ecx,DWORD PTR [rbp-0x30]
  4250be:	lea    r8,[rbp-0x28]
  4250c2:	mov    rdx,QWORD PTR [rbp-0x48]
  4250c6:	mov    rsi,QWORD PTR [rbp-0x40]
  4250ca:	mov    rax,QWORD PTR [rbp-0x38]
  4250ce:	mov    r9,r8
  4250d1:	mov    r8,rdi
  4250d4:	mov    rdi,rax
  4250d7:	call   423f85 <flatcc_verify_union_vector_field@@Base+0xcf1>
  4250dc:	cmp    QWORD PTR [rbp-0x48],rax
  4250e0:	jne    4250e8 <flatcc_verify_union_vector_field@@Base+0x1e54>
  4250e2:	mov    rax,QWORD PTR [rbp-0x48]
  4250e6:	jmp    425110 <flatcc_verify_union_vector_field@@Base+0x1e7c>
  4250e8:	mov    rax,QWORD PTR [rbp-0x58]
  4250ec:	vmovsd xmm1,QWORD PTR [rax]
  4250f0:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  4250f5:	vaddsd xmm0,xmm1,xmm0
  4250f9:	mov    rax,QWORD PTR [rbp-0x58]
  4250fd:	vmovsd QWORD PTR [rax],xmm0
  425101:	mov    eax,DWORD PTR [rbp-0x2c]
  425104:	test   eax,eax
  425106:	jne    42502f <flatcc_verify_union_vector_field@@Base+0x1d9b>
  42510c:	mov    rax,QWORD PTR [rbp-0x40]
  425110:	mov    rdi,QWORD PTR [rbp-0x8]
  425114:	xor    rdi,QWORD PTR fs:0x28
  42511d:	je     425124 <flatcc_verify_union_vector_field@@Base+0x1e90>
  42511f:	call   4061a0 <__stack_chk_fail@plt>
  425124:	leave  
  425125:	ret    
  425126:	endbr64 
  42512a:	push   rbp
  42512b:	mov    rbp,rsp
  42512e:	vmovsd QWORD PTR [rbp-0x18],xmm0
  425133:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  425138:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42513d:	mov    rax,QWORD PTR [rbp-0x8]
  425141:	pop    rbp
  425142:	ret    
  425143:	endbr64 
  425147:	push   rbp
  425148:	mov    rbp,rsp
  42514b:	mov    QWORD PTR [rbp-0x18],rdi
  42514f:	mov    rax,QWORD PTR [rbp-0x18]
  425153:	mov    QWORD PTR [rbp-0x8],rax
  425157:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42515c:	vmovq  rax,xmm0
  425161:	vmovq  xmm0,rax
  425166:	pop    rbp
  425167:	ret    
  425168:	endbr64 
  42516c:	push   rbp
  42516d:	mov    rbp,rsp
  425170:	vmovsd QWORD PTR [rbp-0x18],xmm0
  425175:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42517a:	vcvttsd2si eax,xmm0
  42517e:	mov    DWORD PTR [rbp-0x4],eax
  425181:	vxorpd xmm0,xmm0,xmm0
  425185:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  42518a:	jbe    425191 <flatcc_verify_union_vector_field@@Base+0x1efd>
  42518c:	mov    eax,DWORD PTR [rbp-0x4]
  42518f:	jmp    4251bd <flatcc_verify_union_vector_field@@Base+0x1f29>
  425191:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  425196:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42519b:	vsubsd xmm0,xmm1,xmm0
  42519f:	vxorpd xmm1,xmm1,xmm1
  4251a3:	vucomisd xmm0,xmm1
  4251a7:	jp     4251b3 <flatcc_verify_union_vector_field@@Base+0x1f1f>
  4251a9:	vxorpd xmm1,xmm1,xmm1
  4251ad:	vucomisd xmm0,xmm1
  4251b1:	je     4251ba <flatcc_verify_union_vector_field@@Base+0x1f26>
  4251b3:	mov    eax,DWORD PTR [rbp-0x4]
  4251b6:	inc    eax
  4251b8:	jmp    4251bd <flatcc_verify_union_vector_field@@Base+0x1f29>
  4251ba:	mov    eax,DWORD PTR [rbp-0x4]
  4251bd:	pop    rbp
  4251be:	ret    
  4251bf:	endbr64 
  4251c3:	push   rbp
  4251c4:	mov    rbp,rsp
  4251c7:	sub    rsp,0x20
  4251cb:	mov    DWORD PTR [rbp-0x14],edi
  4251ce:	mov    QWORD PTR [rbp-0x20],rsi
  4251d2:	mov    eax,DWORD PTR [rbp-0x14]
  4251d5:	add    eax,0x3f
  4251d8:	vcvtsi2sd xmm0,xmm0,eax
  4251dc:	vmovsd xmm1,QWORD PTR [rip+0x167b4]        # 43b998 <flatcc_builder_padding_base@@Base+0x2738>
  4251e4:	vmulsd xmm2,xmm0,xmm1
  4251e8:	vmovq  rax,xmm2
  4251ed:	vmovq  xmm0,rax
  4251f2:	call   425168 <flatcc_verify_union_vector_field@@Base+0x1ed4>
  4251f7:	mov    DWORD PTR [rbp-0x8],eax
  4251fa:	mov    eax,DWORD PTR [rbp-0x8]
  4251fd:	add    eax,0x15b
  425202:	lea    edx,[rax+0x7]
  425205:	test   eax,eax
  425207:	cmovs  eax,edx
  42520a:	sar    eax,0x3
  42520d:	inc    eax
  42520f:	mov    DWORD PTR [rbp-0x4],eax
  425212:	mov    eax,DWORD PTR [rbp-0x4]
  425215:	cdqe   
  425217:	shl    rax,0x4
  42521b:	mov    rdx,rax
  42521e:	lea    rax,[rip+0x152db]        # 43a500 <flatcc_builder_padding_base@@Base+0x12a0>
  425225:	mov    rdx,QWORD PTR [rdx+rax*1]
  425229:	mov    rax,QWORD PTR [rbp-0x20]
  42522d:	mov    QWORD PTR [rax],rdx
  425230:	mov    eax,DWORD PTR [rbp-0x4]
  425233:	cdqe   
  425235:	shl    rax,0x4
  425239:	mov    rdx,rax
  42523c:	lea    rax,[rip+0x152c5]        # 43a508 <flatcc_builder_padding_base@@Base+0x12a8>
  425243:	movzx  eax,WORD PTR [rdx+rax*1]
  425247:	movsx  edx,ax
  42524a:	mov    rax,QWORD PTR [rbp-0x20]
  42524e:	mov    DWORD PTR [rax+0x8],edx
  425251:	mov    eax,DWORD PTR [rbp-0x4]
  425254:	cdqe   
  425256:	shl    rax,0x4
  42525a:	mov    rdx,rax
  42525d:	lea    rax,[rip+0x152a6]        # 43a50a <flatcc_builder_padding_base@@Base+0x12aa>
  425264:	movzx  eax,WORD PTR [rdx+rax*1]
  425268:	cwde   
  425269:	leave  
  42526a:	ret    
  42526b:	endbr64 
  42526f:	push   rbp
  425270:	mov    rbp,rsp
  425273:	sub    rsp,0x30
  425277:	mov    rax,rdi
  42527a:	mov    r8,rsi
  42527d:	mov    rsi,rax
  425280:	mov    rdi,rdx
  425283:	mov    rdi,r8
  425286:	mov    QWORD PTR [rbp-0x20],rsi
  42528a:	mov    QWORD PTR [rbp-0x18],rdi
  42528e:	mov    QWORD PTR [rbp-0x30],rdx
  425292:	mov    QWORD PTR [rbp-0x28],rcx
  425296:	mov    rdx,QWORD PTR [rbp-0x20]
  42529a:	mov    rax,QWORD PTR [rbp-0x30]
  42529e:	sub    rdx,rax
  4252a1:	mov    rax,rdx
  4252a4:	mov    QWORD PTR [rbp-0x10],rax
  4252a8:	mov    eax,DWORD PTR [rbp-0x18]
  4252ab:	mov    DWORD PTR [rbp-0x8],eax
  4252ae:	mov    edx,DWORD PTR [rbp-0x18]
  4252b1:	mov    eax,DWORD PTR [rbp-0x28]
  4252b4:	cmp    edx,eax
  4252b6:	jne    4252c5 <flatcc_verify_union_vector_field@@Base+0x2031>
  4252b8:	mov    rdx,QWORD PTR [rbp-0x20]
  4252bc:	mov    rax,QWORD PTR [rbp-0x30]
  4252c0:	cmp    rdx,rax
  4252c3:	jae    4252e4 <flatcc_verify_union_vector_field@@Base+0x2050>
  4252c5:	lea    rcx,[rip+0x161b4]        # 43b480 <flatcc_builder_padding_base@@Base+0x2220>
  4252cc:	mov    edx,0xef
  4252d1:	lea    rsi,[rip+0x15798]        # 43aa70 <flatcc_builder_padding_base@@Base+0x1810>
  4252d8:	lea    rdi,[rip+0x15801]        # 43aae0 <flatcc_builder_padding_base@@Base+0x1880>
  4252df:	call   4061b0 <__assert_fail@plt>
  4252e4:	mov    rax,QWORD PTR [rbp-0x10]
  4252e8:	mov    rdx,QWORD PTR [rbp-0x8]
  4252ec:	leave  
  4252ed:	ret    
  4252ee:	endbr64 
  4252f2:	push   rbp
  4252f3:	mov    rbp,rsp
  4252f6:	sub    rsp,0x8
  4252fa:	mov    rax,rdi
  4252fd:	mov    r8,rsi
  425300:	mov    rsi,rax
  425303:	mov    rdi,rdx
  425306:	mov    rdi,r8
  425309:	mov    QWORD PTR [rbp-0x70],rsi
  42530d:	mov    QWORD PTR [rbp-0x68],rdi
  425311:	mov    QWORD PTR [rbp-0x80],rdx
  425315:	mov    QWORD PTR [rbp-0x78],rcx
  425319:	mov    rax,QWORD PTR [rbp-0x70]
  42531d:	shr    rax,0x20
  425321:	mov    QWORD PTR [rbp-0x58],rax
  425325:	mov    rax,QWORD PTR [rbp-0x70]
  425329:	and    eax,0xffffffff
  42532c:	mov    QWORD PTR [rbp-0x50],rax
  425330:	mov    rax,QWORD PTR [rbp-0x80]
  425334:	shr    rax,0x20
  425338:	mov    QWORD PTR [rbp-0x48],rax
  42533c:	mov    rax,QWORD PTR [rbp-0x80]
  425340:	and    eax,0xffffffff
  425343:	mov    QWORD PTR [rbp-0x40],rax
  425347:	mov    rax,QWORD PTR [rbp-0x58]
  42534b:	imul   rax,QWORD PTR [rbp-0x48]
  425350:	mov    QWORD PTR [rbp-0x38],rax
  425354:	mov    rax,QWORD PTR [rbp-0x50]
  425358:	imul   rax,QWORD PTR [rbp-0x48]
  42535d:	mov    QWORD PTR [rbp-0x30],rax
  425361:	mov    rax,QWORD PTR [rbp-0x58]
  425365:	imul   rax,QWORD PTR [rbp-0x40]
  42536a:	mov    QWORD PTR [rbp-0x28],rax
  42536e:	mov    rax,QWORD PTR [rbp-0x50]
  425372:	imul   rax,QWORD PTR [rbp-0x40]
  425377:	mov    QWORD PTR [rbp-0x20],rax
  42537b:	mov    rax,QWORD PTR [rbp-0x20]
  42537f:	shr    rax,0x20
  425383:	mov    rdx,QWORD PTR [rbp-0x28]
  425387:	mov    edx,edx
  425389:	add    rax,rdx
  42538c:	mov    rdx,QWORD PTR [rbp-0x30]
  425390:	mov    edx,edx
  425392:	add    rax,rdx
  425395:	mov    QWORD PTR [rbp-0x18],rax
  425399:	mov    eax,0x80000000
  42539e:	add    QWORD PTR [rbp-0x18],rax
  4253a2:	mov    rax,QWORD PTR [rbp-0x28]
  4253a6:	shr    rax,0x20
  4253aa:	mov    rdx,rax
  4253ad:	mov    rax,QWORD PTR [rbp-0x38]
  4253b1:	add    rdx,rax
  4253b4:	mov    rax,QWORD PTR [rbp-0x30]
  4253b8:	shr    rax,0x20
  4253bc:	add    rdx,rax
  4253bf:	mov    rax,QWORD PTR [rbp-0x18]
  4253c3:	shr    rax,0x20
  4253c7:	add    rax,rdx
  4253ca:	mov    QWORD PTR [rbp-0x10],rax
  4253ce:	mov    edx,DWORD PTR [rbp-0x68]
  4253d1:	mov    eax,DWORD PTR [rbp-0x78]
  4253d4:	add    eax,edx
  4253d6:	add    eax,0x40
  4253d9:	mov    DWORD PTR [rbp-0x8],eax
  4253dc:	mov    rax,QWORD PTR [rbp-0x10]
  4253e0:	mov    rdx,QWORD PTR [rbp-0x8]
  4253e4:	leave  
  4253e5:	ret    
  4253e6:	endbr64 
  4253ea:	push   rbp
  4253eb:	mov    rbp,rsp
  4253ee:	sub    rsp,0x10
  4253f2:	mov    rax,rdi
  4253f5:	mov    rcx,rsi
  4253f8:	mov    rdx,rcx
  4253fb:	mov    QWORD PTR [rbp-0x10],rax
  4253ff:	mov    QWORD PTR [rbp-0x8],rdx
  425403:	mov    rax,QWORD PTR [rbp-0x10]
  425407:	test   rax,rax
  42540a:	jne    425440 <flatcc_verify_union_vector_field@@Base+0x21ac>
  42540c:	lea    rcx,[rip+0x1608d]        # 43b4a0 <flatcc_builder_padding_base@@Base+0x2240>
  425413:	mov    edx,0x104
  425418:	lea    rsi,[rip+0x15651]        # 43aa70 <flatcc_builder_padding_base@@Base+0x1810>
  42541f:	lea    rdi,[rip+0x156d3]        # 43aaf9 <flatcc_builder_padding_base@@Base+0x1899>
  425426:	call   4061b0 <__assert_fail@plt>
  42542b:	mov    rax,QWORD PTR [rbp-0x10]
  42542f:	shl    rax,0xa
  425433:	mov    QWORD PTR [rbp-0x10],rax
  425437:	mov    eax,DWORD PTR [rbp-0x8]
  42543a:	sub    eax,0xa
  42543d:	mov    DWORD PTR [rbp-0x8],eax
  425440:	mov    rdx,QWORD PTR [rbp-0x10]
  425444:	movabs rax,0xffc0000000000000
  42544e:	and    rax,rdx
  425451:	test   rax,rax
  425454:	je     42542b <flatcc_verify_union_vector_field@@Base+0x2197>
  425456:	jmp    42546b <flatcc_verify_union_vector_field@@Base+0x21d7>
  425458:	mov    rax,QWORD PTR [rbp-0x10]
  42545c:	add    rax,rax
  42545f:	mov    QWORD PTR [rbp-0x10],rax
  425463:	mov    eax,DWORD PTR [rbp-0x8]
  425466:	dec    eax
  425468:	mov    DWORD PTR [rbp-0x8],eax
  42546b:	mov    rax,QWORD PTR [rbp-0x10]
  42546f:	test   rax,rax
  425472:	jns    425458 <flatcc_verify_union_vector_field@@Base+0x21c4>
  425474:	mov    rax,QWORD PTR [rbp-0x10]
  425478:	mov    rdx,QWORD PTR [rbp-0x8]
  42547c:	leave  
  42547d:	ret    
  42547e:	endbr64 
  425482:	push   rbp
  425483:	mov    rbp,rsp
  425486:	sub    rsp,0x28
  42548a:	vmovsd QWORD PTR [rbp-0x28],xmm0
  42548f:	mov    rax,QWORD PTR [rbp-0x28]
  425493:	vmovq  xmm0,rax
  425498:	call   425126 <flatcc_verify_union_vector_field@@Base+0x1e92>
  42549d:	mov    QWORD PTR [rbp-0x18],rax
  4254a1:	movabs rax,0x7ff0000000000000
  4254ab:	and    rax,QWORD PTR [rbp-0x18]
  4254af:	test   rax,rax
  4254b2:	jne    4254cf <flatcc_verify_union_vector_field@@Base+0x223b>
  4254b4:	movabs rax,0xfffffffffffff
  4254be:	and    rax,QWORD PTR [rbp-0x18]
  4254c2:	mov    QWORD PTR [rbp-0x10],rax
  4254c6:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  4254cd:	jmp    425506 <flatcc_verify_union_vector_field@@Base+0x2272>
  4254cf:	movabs rax,0xfffffffffffff
  4254d9:	and    rax,QWORD PTR [rbp-0x18]
  4254dd:	mov    rdx,rax
  4254e0:	movabs rax,0x10000000000000
  4254ea:	add    rax,rdx
  4254ed:	mov    QWORD PTR [rbp-0x10],rax
  4254f1:	mov    rax,QWORD PTR [rbp-0x18]
  4254f5:	shr    rax,0x34
  4254f9:	and    eax,0x7ff
  4254fe:	sub    eax,0x433
  425503:	mov    DWORD PTR [rbp-0x8],eax
  425506:	mov    rax,QWORD PTR [rbp-0x10]
  42550a:	mov    rdx,QWORD PTR [rbp-0x8]
  42550e:	leave  
  42550f:	ret    
  425510:	endbr64 
  425514:	push   rbp
  425515:	mov    rbp,rsp
  425518:	sub    rsp,0x50
  42551c:	mov    rax,rdi
  42551f:	mov    rcx,rsi
  425522:	mov    rdx,rcx
  425525:	mov    QWORD PTR [rbp-0x50],rax
  425529:	mov    QWORD PTR [rbp-0x48],rdx
  42552d:	movabs rax,0x10000000000000
  425537:	mov    QWORD PTR [rbp-0x20],rax
  42553b:	movabs rax,0xfffffffffffff
  425545:	mov    QWORD PTR [rbp-0x18],rax
  425549:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  425550:	mov    DWORD PTR [rbp-0x30],0x433
  425557:	mov    DWORD PTR [rbp-0x2c],0x34
  42555e:	mov    rax,QWORD PTR [rbp-0x50]
  425562:	mov    rdx,QWORD PTR [rbp-0x48]
  425566:	mov    QWORD PTR [rbp-0x10],rax
  42556a:	mov    QWORD PTR [rbp-0x8],rdx
  42556e:	jmp    425583 <flatcc_verify_union_vector_field@@Base+0x22ef>
  425570:	mov    rax,QWORD PTR [rbp-0x10]
  425574:	shr    rax,1
  425577:	mov    QWORD PTR [rbp-0x10],rax
  42557b:	mov    eax,DWORD PTR [rbp-0x8]
  42557e:	inc    eax
  425580:	mov    DWORD PTR [rbp-0x8],eax
  425583:	mov    rax,QWORD PTR [rbp-0x10]
  425587:	mov    rcx,QWORD PTR [rbp-0x20]
  42558b:	mov    rdx,QWORD PTR [rbp-0x18]
  42558f:	add    rdx,rcx
  425592:	cmp    rax,rdx
  425595:	ja     425570 <flatcc_verify_union_vector_field@@Base+0x22dc>
  425597:	mov    eax,DWORD PTR [rbp-0x8]
  42559a:	cmp    DWORD PTR [rbp-0x34],eax
  42559d:	jle    4255bb <flatcc_verify_union_vector_field@@Base+0x2327>
  42559f:	mov    rax,QWORD PTR [rip+0x163ea]        # 43b990 <flatcc_builder_padding_base@@Base+0x2730>
  4255a6:	jmp    425624 <flatcc_verify_union_vector_field@@Base+0x2390>
  4255a8:	mov    rax,QWORD PTR [rbp-0x10]
  4255ac:	add    rax,rax
  4255af:	mov    QWORD PTR [rbp-0x10],rax
  4255b3:	mov    eax,DWORD PTR [rbp-0x8]
  4255b6:	dec    eax
  4255b8:	mov    DWORD PTR [rbp-0x8],eax
  4255bb:	mov    eax,DWORD PTR [rbp-0x8]
  4255be:	cmp    DWORD PTR [rbp-0x34],eax
  4255c1:	jge    4255d0 <flatcc_verify_union_vector_field@@Base+0x233c>
  4255c3:	mov    rax,QWORD PTR [rbp-0x10]
  4255c7:	and    rax,QWORD PTR [rbp-0x20]
  4255cb:	test   rax,rax
  4255ce:	je     4255a8 <flatcc_verify_union_vector_field@@Base+0x2314>
  4255d0:	mov    eax,DWORD PTR [rbp-0x8]
  4255d3:	cmp    DWORD PTR [rbp-0x34],eax
  4255d6:	jne    4255ef <flatcc_verify_union_vector_field@@Base+0x235b>
  4255d8:	mov    rax,QWORD PTR [rbp-0x10]
  4255dc:	and    rax,QWORD PTR [rbp-0x20]
  4255e0:	test   rax,rax
  4255e3:	jne    4255ef <flatcc_verify_union_vector_field@@Base+0x235b>
  4255e5:	mov    QWORD PTR [rbp-0x28],0x0
  4255ed:	jmp    4255fd <flatcc_verify_union_vector_field@@Base+0x2369>
  4255ef:	mov    edx,DWORD PTR [rbp-0x8]
  4255f2:	mov    eax,DWORD PTR [rbp-0x30]
  4255f5:	add    eax,edx
  4255f7:	cdqe   
  4255f9:	mov    QWORD PTR [rbp-0x28],rax
  4255fd:	mov    rax,QWORD PTR [rbp-0x10]
  425601:	and    rax,QWORD PTR [rbp-0x18]
  425605:	mov    rdx,rax
  425608:	mov    eax,DWORD PTR [rbp-0x2c]
  42560b:	mov    rcx,QWORD PTR [rbp-0x28]
  42560f:	shlx   rax,rcx,rax
  425614:	or     rax,rdx
  425617:	mov    rdi,rax
  42561a:	call   425143 <flatcc_verify_union_vector_field@@Base+0x1eaf>
  42561f:	vmovq  rax,xmm0
  425624:	vmovq  xmm0,rax
  425629:	leave  
  42562a:	ret    
  42562b:	endbr64 
  42562f:	push   rbp
  425630:	mov    rbp,rsp
  425633:	mov    DWORD PTR [rbp-0x14],edi
  425636:	mov    DWORD PTR [rbp-0x18],esi
  425639:	mov    QWORD PTR [rbp-0x20],rdx
  42563d:	mov    eax,DWORD PTR [rbp-0x18]
  425640:	inc    eax
  425642:	imul   eax,eax,0x4d1
  425648:	sar    eax,0xc
  42564b:	inc    eax
  42564d:	mov    DWORD PTR [rbp-0x4],eax
  425650:	mov    eax,DWORD PTR [rbp-0x4]
  425653:	cdqe   
  425655:	lea    rdx,[rax*4+0x0]
  42565d:	lea    rax,[rip+0x154bc]        # 43ab20 <flatcc_builder_padding_base@@Base+0x18c0>
  425664:	mov    eax,DWORD PTR [rdx+rax*1]
  425667:	cmp    DWORD PTR [rbp-0x14],eax
  42566a:	jae    42566f <flatcc_verify_union_vector_field@@Base+0x23db>
  42566c:	dec    DWORD PTR [rbp-0x4]
  42566f:	mov    eax,DWORD PTR [rbp-0x4]
  425672:	cdqe   
  425674:	lea    rdx,[rax*4+0x0]
  42567c:	lea    rax,[rip+0x1549d]        # 43ab20 <flatcc_builder_padding_base@@Base+0x18c0>
  425683:	mov    edx,DWORD PTR [rdx+rax*1]
  425686:	mov    rax,QWORD PTR [rbp-0x20]
  42568a:	mov    DWORD PTR [rax],edx
  42568c:	mov    eax,DWORD PTR [rbp-0x4]
  42568f:	pop    rbp
  425690:	ret    
  425691:	endbr64 
  425695:	push   rbp
  425696:	mov    rbp,rsp
  425699:	sub    rsp,0x20
  42569d:	mov    DWORD PTR [rbp-0x14],edi
  4256a0:	mov    QWORD PTR [rbp-0x20],rsi
  4256a4:	mov    DWORD PTR [rbp-0x10],0x15c
  4256ab:	mov    DWORD PTR [rbp-0xc],0x8
  4256b2:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  4256b9:	jge    4256da <flatcc_verify_union_vector_field@@Base+0x2446>
  4256bb:	lea    rcx,[rip+0x15dfe]        # 43b4c0 <flatcc_builder_padding_base@@Base+0x2260>
  4256c2:	mov    edx,0x50
  4256c7:	lea    rsi,[rip+0x15482]        # 43ab50 <flatcc_builder_padding_base@@Base+0x18f0>
  4256ce:	lea    rdi,[rip+0x154f3]        # 43abc8 <flatcc_builder_padding_base@@Base+0x1968>
  4256d5:	call   4061b0 <__assert_fail@plt>
  4256da:	mov    eax,DWORD PTR [rbp-0xc]
  4256dd:	add    eax,0x153
  4256e2:	cmp    DWORD PTR [rbp-0x14],eax
  4256e5:	jle    425706 <flatcc_verify_union_vector_field@@Base+0x2472>
  4256e7:	lea    rcx,[rip+0x15dd2]        # 43b4c0 <flatcc_builder_padding_base@@Base+0x2260>
  4256ee:	mov    edx,0x51
  4256f3:	lea    rsi,[rip+0x15456]        # 43ab50 <flatcc_builder_padding_base@@Base+0x18f0>
  4256fa:	lea    rdi,[rip+0x154e7]        # 43abe8 <flatcc_builder_padding_base@@Base+0x1988>
  425701:	call   4061b0 <__assert_fail@plt>
  425706:	mov    edx,DWORD PTR [rbp-0x14]
  425709:	mov    eax,DWORD PTR [rbp-0x10]
  42570c:	add    eax,edx
  42570e:	cdq    
  42570f:	idiv   DWORD PTR [rbp-0xc]
  425712:	mov    DWORD PTR [rbp-0x8],eax
  425715:	mov    eax,DWORD PTR [rbp-0x8]
  425718:	cdqe   
  42571a:	shl    rax,0x4
  42571e:	mov    rdx,rax
  425721:	lea    rax,[rip+0x14de2]        # 43a50a <flatcc_builder_padding_base@@Base+0x12aa>
  425728:	movzx  eax,WORD PTR [rdx+rax*1]
  42572c:	cwde   
  42572d:	mov    DWORD PTR [rbp-0x4],eax
  425730:	mov    eax,DWORD PTR [rbp-0x8]
  425733:	cdqe   
  425735:	shl    rax,0x4
  425739:	mov    rdx,rax
  42573c:	lea    rax,[rip+0x14dbd]        # 43a500 <flatcc_builder_padding_base@@Base+0x12a0>
  425743:	mov    rdx,QWORD PTR [rdx+rax*1]
  425747:	mov    rax,QWORD PTR [rbp-0x20]
  42574b:	mov    QWORD PTR [rax],rdx
  42574e:	mov    eax,DWORD PTR [rbp-0x8]
  425751:	cdqe   
  425753:	shl    rax,0x4
  425757:	mov    rdx,rax
  42575a:	lea    rax,[rip+0x14da7]        # 43a508 <flatcc_builder_padding_base@@Base+0x12a8>
  425761:	movzx  eax,WORD PTR [rdx+rax*1]
  425765:	movsx  edx,ax
  425768:	mov    rax,QWORD PTR [rbp-0x20]
  42576c:	mov    DWORD PTR [rax+0x8],edx
  42576f:	mov    eax,DWORD PTR [rbp-0x4]
  425772:	cmp    eax,DWORD PTR [rbp-0x14]
  425775:	jle    425796 <flatcc_verify_union_vector_field@@Base+0x2502>
  425777:	lea    rcx,[rip+0x15d42]        # 43b4c0 <flatcc_builder_padding_base@@Base+0x2260>
  42577e:	mov    edx,0x58
  425783:	lea    rsi,[rip+0x153c6]        # 43ab50 <flatcc_builder_padding_base@@Base+0x18f0>
  42578a:	lea    rdi,[rip+0x15482]        # 43ac13 <flatcc_builder_padding_base@@Base+0x19b3>
  425791:	call   4061b0 <__assert_fail@plt>
  425796:	mov    edx,DWORD PTR [rbp-0x4]
  425799:	mov    eax,DWORD PTR [rbp-0xc]
  42579c:	add    eax,edx
  42579e:	cmp    DWORD PTR [rbp-0x14],eax
  4257a1:	jl     4257c2 <flatcc_verify_union_vector_field@@Base+0x252e>
  4257a3:	lea    rcx,[rip+0x15d16]        # 43b4c0 <flatcc_builder_padding_base@@Base+0x2260>
  4257aa:	mov    edx,0x59
  4257af:	lea    rsi,[rip+0x1539a]        # 43ab50 <flatcc_builder_padding_base@@Base+0x18f0>
  4257b6:	lea    rdi,[rip+0x15465]        # 43ac22 <flatcc_builder_padding_base@@Base+0x19c2>
  4257bd:	call   4061b0 <__assert_fail@plt>
  4257c2:	mov    eax,DWORD PTR [rbp-0x4]
  4257c5:	leave  
  4257c6:	ret    

00000000004257c7 <grisu3_diy_fp_encode_double@@Base>:
  4257c7:	endbr64 
  4257cb:	push   rbp
  4257cc:	mov    rbp,rsp
  4257cf:	sub    rsp,0xb0
  4257d6:	mov    QWORD PTR [rbp-0x98],rdi
  4257dd:	mov    DWORD PTR [rbp-0x9c],esi
  4257e3:	mov    DWORD PTR [rbp-0xa0],edx
  4257e9:	mov    DWORD PTR [rbp-0xa4],ecx
  4257ef:	mov    QWORD PTR [rbp-0xb0],r8
  4257f6:	mov    rax,QWORD PTR fs:0x28
  4257ff:	mov    QWORD PTR [rbp-0x8],rax
  425803:	xor    eax,eax
  425805:	mov    DWORD PTR [rbp-0x7c],0x3
  42580c:	mov    eax,DWORD PTR [rbp-0x7c]
  42580f:	mov    edx,0x1
  425814:	shlx   eax,edx,eax
  425819:	mov    DWORD PTR [rbp-0x78],eax
  42581c:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  425823:	movabs rax,0x10000000000000
  42582d:	mov    QWORD PTR [rbp-0x48],rax
  425831:	mov    DWORD PTR [rbp-0x70],0x40
  425838:	mov    DWORD PTR [rbp-0x6c],0x13
  42583f:	cmp    DWORD PTR [rbp-0xa4],0x0
  425846:	je     425856 <grisu3_diy_fp_encode_double@@Base+0x8f>
  425848:	mov    eax,DWORD PTR [rbp-0x78]
  42584b:	mov    edx,eax
  42584d:	shr    edx,0x1f
  425850:	add    eax,edx
  425852:	sar    eax,1
  425854:	jmp    42585b <grisu3_diy_fp_encode_double@@Base+0x94>
  425856:	mov    eax,0x0
  42585b:	mov    DWORD PTR [rbp-0x84],eax
  425861:	mov    eax,DWORD PTR [rbp-0x9c]
  425867:	sub    eax,DWORD PTR [rbp-0xa0]
  42586d:	mov    DWORD PTR [rbp-0x68],eax
  425870:	mov    rax,QWORD PTR [rbp-0x98]
  425877:	mov    QWORD PTR [rbp-0x40],rax
  42587b:	mov    DWORD PTR [rbp-0x38],0x0
  425882:	mov    rdx,QWORD PTR [rbp-0x40]
  425886:	mov    rax,QWORD PTR [rbp-0x38]
  42588a:	mov    rdi,rdx
  42588d:	mov    rsi,rax
  425890:	call   4253e6 <flatcc_verify_union_vector_field@@Base+0x2152>
  425895:	mov    QWORD PTR [rbp-0x40],rax
  425899:	mov    QWORD PTR [rbp-0x38],rdx
  42589d:	mov    eax,DWORD PTR [rbp-0x38]
  4258a0:	neg    eax
  4258a2:	mov    ecx,eax
  4258a4:	shl    DWORD PTR [rbp-0x84],cl
  4258aa:	lea    rdx,[rbp-0x30]
  4258ae:	mov    eax,DWORD PTR [rbp-0x68]
  4258b1:	mov    rsi,rdx
  4258b4:	mov    edi,eax
  4258b6:	call   425691 <flatcc_verify_union_vector_field@@Base+0x23fd>
  4258bb:	mov    DWORD PTR [rbp-0x64],eax
  4258be:	mov    eax,DWORD PTR [rbp-0x64]
  4258c1:	cmp    eax,DWORD PTR [rbp-0x68]
  4258c4:	je     42595e <grisu3_diy_fp_encode_double@@Base+0x197>
  4258ca:	mov    eax,DWORD PTR [rbp-0x68]
  4258cd:	sub    eax,DWORD PTR [rbp-0x64]
  4258d0:	dec    eax
  4258d2:	mov    DWORD PTR [rbp-0x60],eax
  4258d5:	cmp    DWORD PTR [rbp-0x60],0x0
  4258d9:	js     4258e1 <grisu3_diy_fp_encode_double@@Base+0x11a>
  4258db:	cmp    DWORD PTR [rbp-0x60],0x6
  4258df:	jle    425900 <grisu3_diy_fp_encode_double@@Base+0x139>
  4258e1:	lea    rcx,[rip+0x15bf8]        # 43b4e0 <flatcc_builder_padding_base@@Base+0x2280>
  4258e8:	mov    edx,0xb9
  4258ed:	lea    rsi,[rip+0x1525c]        # 43ab50 <flatcc_builder_padding_base@@Base+0x18f0>
  4258f4:	lea    rdi,[rip+0x15342]        # 43ac3d <flatcc_builder_padding_base@@Base+0x19dd>
  4258fb:	call   4061b0 <__assert_fail@plt>
  425900:	mov    eax,DWORD PTR [rbp-0x60]
  425903:	cdqe   
  425905:	shl    rax,0x4
  425909:	mov    rdx,rax
  42590c:	lea    rax,[rip+0x200ed]        # 445a00 <__data_start@@Base+0x940>
  425913:	lea    rdx,[rdx+rax*1]
  425917:	mov    rax,QWORD PTR [rdx]
  42591a:	mov    rdx,QWORD PTR [rdx+0x8]
  42591e:	mov    rdi,QWORD PTR [rbp-0x40]
  425922:	mov    rsi,QWORD PTR [rbp-0x38]
  425926:	mov    rcx,rdx
  425929:	mov    rdx,rax
  42592c:	call   4252ee <flatcc_verify_union_vector_field@@Base+0x205a>
  425931:	mov    QWORD PTR [rbp-0x40],rax
  425935:	mov    QWORD PTR [rbp-0x38],rdx
  425939:	mov    eax,DWORD PTR [rbp-0xa0]
  42593f:	lea    edx,[rax+0x1]
  425942:	mov    eax,DWORD PTR [rbp-0x60]
  425945:	add    eax,edx
  425947:	cmp    DWORD PTR [rbp-0x6c],eax
  42594a:	jge    42595e <grisu3_diy_fp_encode_double@@Base+0x197>
  42594c:	mov    eax,DWORD PTR [rbp-0x78]
  42594f:	mov    edx,eax
  425951:	shr    edx,0x1f
  425954:	add    eax,edx
  425956:	sar    eax,1
  425958:	add    DWORD PTR [rbp-0x84],eax
  42595e:	mov    rax,QWORD PTR [rbp-0x30]
  425962:	mov    rdx,QWORD PTR [rbp-0x28]
  425966:	mov    rdi,QWORD PTR [rbp-0x40]
  42596a:	mov    rsi,QWORD PTR [rbp-0x38]
  42596e:	mov    rcx,rdx
  425971:	mov    rdx,rax
  425974:	call   4252ee <flatcc_verify_union_vector_field@@Base+0x205a>
  425979:	mov    QWORD PTR [rbp-0x40],rax
  42597d:	mov    QWORD PTR [rbp-0x38],rdx
  425981:	cmp    DWORD PTR [rbp-0x84],0x0
  425988:	setne  al
  42598b:	movzx  edx,al
  42598e:	mov    eax,DWORD PTR [rbp-0x78]
  425991:	add    eax,edx
  425993:	add    DWORD PTR [rbp-0x84],eax
  425999:	mov    eax,DWORD PTR [rbp-0x38]
  42599c:	mov    DWORD PTR [rbp-0x5c],eax
  42599f:	mov    rdx,QWORD PTR [rbp-0x40]
  4259a3:	mov    rax,QWORD PTR [rbp-0x38]
  4259a7:	mov    rdi,rdx
  4259aa:	mov    rsi,rax
  4259ad:	call   4253e6 <flatcc_verify_union_vector_field@@Base+0x2152>
  4259b2:	mov    QWORD PTR [rbp-0x40],rax
  4259b6:	mov    QWORD PTR [rbp-0x38],rdx
  4259ba:	mov    eax,DWORD PTR [rbp-0x38]
  4259bd:	mov    edx,DWORD PTR [rbp-0x5c]
  4259c0:	sub    edx,eax
  4259c2:	mov    eax,edx
  4259c4:	mov    ecx,eax
  4259c6:	shl    DWORD PTR [rbp-0x84],cl
  4259cc:	mov    edx,DWORD PTR [rbp-0x38]
  4259cf:	mov    eax,DWORD PTR [rbp-0x70]
  4259d2:	add    eax,edx
  4259d4:	mov    DWORD PTR [rbp-0x58],eax
  4259d7:	mov    edx,DWORD PTR [rbp-0x70]
  4259da:	mov    eax,DWORD PTR [rbp-0x74]
  4259dd:	add    eax,edx
  4259df:	cmp    DWORD PTR [rbp-0x58],eax
  4259e2:	jge    4259fb <grisu3_diy_fp_encode_double@@Base+0x234>
  4259e4:	mov    eax,DWORD PTR [rbp-0x58]
  4259e7:	cmp    eax,DWORD PTR [rbp-0x74]
  4259ea:	jle    4259f4 <grisu3_diy_fp_encode_double@@Base+0x22d>
  4259ec:	mov    eax,DWORD PTR [rbp-0x58]
  4259ef:	sub    eax,DWORD PTR [rbp-0x74]
  4259f2:	jmp    4259fe <grisu3_diy_fp_encode_double@@Base+0x237>
  4259f4:	mov    eax,0x0
  4259f9:	jmp    4259fe <grisu3_diy_fp_encode_double@@Base+0x237>
  4259fb:	mov    eax,DWORD PTR [rbp-0x70]
  4259fe:	mov    DWORD PTR [rbp-0x58],eax
  425a01:	mov    eax,DWORD PTR [rbp-0x70]
  425a04:	sub    eax,DWORD PTR [rbp-0x58]
  425a07:	mov    DWORD PTR [rbp-0x80],eax
  425a0a:	mov    edx,DWORD PTR [rbp-0x80]
  425a0d:	mov    eax,DWORD PTR [rbp-0x7c]
  425a10:	add    eax,edx
  425a12:	cmp    DWORD PTR [rbp-0x70],eax
  425a15:	jg     425a64 <grisu3_diy_fp_encode_double@@Base+0x29d>
  425a17:	mov    edx,DWORD PTR [rbp-0x80]
  425a1a:	mov    eax,DWORD PTR [rbp-0x7c]
  425a1d:	add    eax,edx
  425a1f:	sub    eax,DWORD PTR [rbp-0x70]
  425a22:	dec    eax
  425a24:	mov    DWORD PTR [rbp-0x54],eax
  425a27:	mov    rdx,QWORD PTR [rbp-0x40]
  425a2b:	mov    eax,DWORD PTR [rbp-0x54]
  425a2e:	shrx   rax,rdx,rax
  425a33:	mov    QWORD PTR [rbp-0x40],rax
  425a37:	mov    edx,DWORD PTR [rbp-0x38]
  425a3a:	mov    eax,DWORD PTR [rbp-0x54]
  425a3d:	add    eax,edx
  425a3f:	mov    DWORD PTR [rbp-0x38],eax
  425a42:	mov    eax,DWORD PTR [rbp-0x54]
  425a45:	mov    edx,DWORD PTR [rbp-0x84]
  425a4b:	sarx   eax,edx,eax
  425a50:	lea    edx,[rax+0x1]
  425a53:	mov    eax,DWORD PTR [rbp-0x78]
  425a56:	add    eax,edx
  425a58:	mov    DWORD PTR [rbp-0x84],eax
  425a5e:	mov    eax,DWORD PTR [rbp-0x54]
  425a61:	sub    DWORD PTR [rbp-0x80],eax
  425a64:	mov    rdx,QWORD PTR [rbp-0x40]
  425a68:	mov    eax,DWORD PTR [rbp-0x80]
  425a6b:	shrx   rax,rdx,rax
  425a70:	mov    QWORD PTR [rbp-0x20],rax
  425a74:	mov    edx,DWORD PTR [rbp-0x38]
  425a77:	mov    eax,DWORD PTR [rbp-0x80]
  425a7a:	add    eax,edx
  425a7c:	mov    DWORD PTR [rbp-0x18],eax
  425a7f:	mov    rdx,QWORD PTR [rbp-0x40]
  425a83:	mov    eax,DWORD PTR [rbp-0x80]
  425a86:	dec    eax
  425a88:	mov    ecx,0x1
  425a8d:	shlx   rax,rcx,rax
  425a92:	and    rax,rdx
  425a95:	mov    edx,eax
  425a97:	mov    eax,DWORD PTR [rbp-0x78]
  425a9a:	cdqe   
  425a9c:	imul   eax,edx
  425a9f:	mov    DWORD PTR [rbp-0x50],eax
  425aa2:	mov    eax,DWORD PTR [rbp-0x78]
  425aa5:	movsxd rdx,eax
  425aa8:	mov    eax,DWORD PTR [rbp-0x80]
  425aab:	dec    eax
  425aad:	shlx   rax,rdx,rax
  425ab2:	mov    DWORD PTR [rbp-0x4c],eax
  425ab5:	mov    edx,DWORD PTR [rbp-0x4c]
  425ab8:	mov    eax,DWORD PTR [rbp-0x84]
  425abe:	add    eax,edx
  425ac0:	cmp    DWORD PTR [rbp-0x80],eax
  425ac3:	jl     425af6 <grisu3_diy_fp_encode_double@@Base+0x32f>
  425ac5:	mov    rax,QWORD PTR [rbp-0x20]
  425ac9:	inc    rax
  425acc:	mov    QWORD PTR [rbp-0x20],rax
  425ad0:	mov    rax,QWORD PTR [rbp-0x20]
  425ad4:	mov    rdx,QWORD PTR [rbp-0x48]
  425ad8:	add    rdx,rdx
  425adb:	and    rax,rdx
  425ade:	test   rax,rax
  425ae1:	je     425af6 <grisu3_diy_fp_encode_double@@Base+0x32f>
  425ae3:	mov    rax,QWORD PTR [rbp-0x20]
  425ae7:	shr    rax,1
  425aea:	mov    QWORD PTR [rbp-0x20],rax
  425aee:	mov    eax,DWORD PTR [rbp-0x18]
  425af1:	inc    eax
  425af3:	mov    DWORD PTR [rbp-0x18],eax
  425af6:	mov    rdx,QWORD PTR [rbp-0x20]
  425afa:	mov    rax,QWORD PTR [rbp-0x18]
  425afe:	mov    rdi,rdx
  425b01:	mov    rsi,rax
  425b04:	call   425510 <flatcc_verify_union_vector_field@@Base+0x227c>
  425b09:	vmovq  rax,xmm0
  425b0e:	mov    rdx,QWORD PTR [rbp-0xb0]
  425b15:	mov    QWORD PTR [rdx],rax
  425b18:	mov    eax,DWORD PTR [rbp-0x4c]
  425b1b:	sub    eax,DWORD PTR [rbp-0x84]
  425b21:	cmp    DWORD PTR [rbp-0x50],eax
  425b24:	jle    425b36 <grisu3_diy_fp_encode_double@@Base+0x36f>
  425b26:	mov    edx,DWORD PTR [rbp-0x4c]
  425b29:	mov    eax,DWORD PTR [rbp-0x84]
  425b2f:	add    eax,edx
  425b31:	cmp    DWORD PTR [rbp-0x50],eax
  425b34:	jl     425b3d <grisu3_diy_fp_encode_double@@Base+0x376>
  425b36:	mov    eax,0x1
  425b3b:	jmp    425b42 <grisu3_diy_fp_encode_double@@Base+0x37b>
  425b3d:	mov    eax,0x0
  425b42:	mov    rcx,QWORD PTR [rbp-0x8]
  425b46:	xor    rcx,QWORD PTR fs:0x28
  425b4f:	je     425b56 <grisu3_diy_fp_encode_double@@Base+0x38f>
  425b51:	call   4061a0 <__stack_chk_fail@plt>
  425b56:	leave  
  425b57:	ret    
  425b58:	endbr64 
  425b5c:	push   rbp
  425b5d:	mov    rbp,rsp
  425b60:	sub    rsp,0x50
  425b64:	mov    QWORD PTR [rbp-0x28],rdi
  425b68:	mov    QWORD PTR [rbp-0x30],rsi
  425b6c:	mov    DWORD PTR [rbp-0x34],edx
  425b6f:	mov    QWORD PTR [rbp-0x40],rcx
  425b73:	mov    DWORD PTR [rbp-0x38],r8d
  425b77:	mov    DWORD PTR [rbp-0x44],r9d
  425b7b:	mov    rax,QWORD PTR [rbp+0x18]
  425b7f:	mov    QWORD PTR [rbp-0x50],rax
  425b83:	mov    rax,QWORD PTR fs:0x28
  425b8c:	mov    QWORD PTR [rbp-0x8],rax
  425b90:	xor    eax,eax
  425b92:	mov    DWORD PTR [rbp-0x20],0x135
  425b99:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  425ba0:	cmp    QWORD PTR [rbp-0x40],0x0
  425ba5:	je     425baf <grisu3_diy_fp_encode_double@@Base+0x3e8>
  425ba7:	mov    eax,DWORD PTR [rbp-0x38]
  425baa:	cmp    eax,DWORD PTR [rbp-0x1c]
  425bad:	jge    425bc0 <grisu3_diy_fp_encode_double@@Base+0x3f9>
  425baf:	mov    rax,QWORD PTR [rbp-0x50]
  425bb3:	vxorpd xmm0,xmm0,xmm0
  425bb7:	vmovsd QWORD PTR [rax],xmm0
  425bbb:	jmp    42616a <grisu3_diy_fp_encode_double@@Base+0x9a3>
  425bc0:	mov    eax,DWORD PTR [rbp-0x38]
  425bc3:	dec    eax
  425bc5:	cmp    DWORD PTR [rbp-0x20],eax
  425bc8:	jge    425bea <grisu3_diy_fp_encode_double@@Base+0x423>
  425bca:	movabs rdi,0x7ff0000000000000
  425bd4:	call   425143 <flatcc_verify_union_vector_field@@Base+0x1eaf>
  425bd9:	vmovq  rax,xmm0
  425bde:	mov    rdx,QWORD PTR [rbp-0x50]
  425be2:	mov    QWORD PTR [rdx],rax
  425be5:	jmp    42616a <grisu3_diy_fp_encode_double@@Base+0x9a3>
  425bea:	movabs rax,0x1fffffffffffff
  425bf4:	cmp    QWORD PTR [rbp-0x40],rax
  425bf8:	ja     426114 <grisu3_diy_fp_encode_double@@Base+0x94d>
  425bfe:	cmp    DWORD PTR [rbp-0x38],0x0
  425c02:	js     426114 <grisu3_diy_fp_encode_double@@Base+0x94d>
  425c08:	cmp    DWORD PTR [rbp-0x38],0x16
  425c0c:	jg     426114 <grisu3_diy_fp_encode_double@@Base+0x94d>
  425c12:	mov    rax,QWORD PTR [rbp-0x40]
  425c16:	test   rax,rax
  425c19:	js     425c22 <grisu3_diy_fp_encode_double@@Base+0x45b>
  425c1b:	vcvtsi2sd xmm0,xmm0,rax
  425c20:	jmp    425c37 <grisu3_diy_fp_encode_double@@Base+0x470>
  425c22:	mov    rdx,rax
  425c25:	shr    rdx,1
  425c28:	and    eax,0x1
  425c2b:	or     rdx,rax
  425c2e:	vcvtsi2sd xmm0,xmm0,rdx
  425c33:	vaddsd xmm0,xmm0,xmm0
  425c37:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425c3c:	mov    eax,DWORD PTR [rbp-0x38]
  425c3f:	sub    eax,DWORD PTR [rbp-0x44]
  425c42:	add    eax,0x16
  425c45:	cmp    eax,0x2c
  425c48:	ja     426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425c4e:	mov    eax,eax
  425c50:	lea    rdx,[rax*4+0x0]
  425c58:	lea    rax,[rip+0x14ffd]        # 43ac5c <flatcc_builder_padding_base@@Base+0x19fc>
  425c5f:	mov    eax,DWORD PTR [rdx+rax*1]
  425c62:	movsxd rdx,eax
  425c65:	lea    rax,[rip+0x14ff0]        # 43ac5c <flatcc_builder_padding_base@@Base+0x19fc>
  425c6c:	add    rax,rdx
  425c6f:	notrack jmp rax
  425c72:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425c77:	vmovsd xmm1,QWORD PTR [rip+0x15d21]        # 43b9a0 <flatcc_builder_padding_base@@Base+0x2740>
  425c7f:	vdivsd xmm0,xmm0,xmm1
  425c83:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425c88:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425c8d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425c92:	vmovsd xmm1,QWORD PTR [rip+0x15d0e]        # 43b9a8 <flatcc_builder_padding_base@@Base+0x2748>
  425c9a:	vdivsd xmm0,xmm0,xmm1
  425c9e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425ca3:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425ca8:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425cad:	vmovsd xmm1,QWORD PTR [rip+0x15cfb]        # 43b9b0 <flatcc_builder_padding_base@@Base+0x2750>
  425cb5:	vdivsd xmm0,xmm0,xmm1
  425cb9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425cbe:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425cc3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425cc8:	vmovsd xmm1,QWORD PTR [rip+0x15ce8]        # 43b9b8 <flatcc_builder_padding_base@@Base+0x2758>
  425cd0:	vdivsd xmm0,xmm0,xmm1
  425cd4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425cd9:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425cde:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425ce3:	vmovsd xmm1,QWORD PTR [rip+0x15cd5]        # 43b9c0 <flatcc_builder_padding_base@@Base+0x2760>
  425ceb:	vdivsd xmm0,xmm0,xmm1
  425cef:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425cf4:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425cf9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425cfe:	vmovsd xmm1,QWORD PTR [rip+0x15cc2]        # 43b9c8 <flatcc_builder_padding_base@@Base+0x2768>
  425d06:	vdivsd xmm0,xmm0,xmm1
  425d0a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d0f:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d14:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425d19:	vmovsd xmm1,QWORD PTR [rip+0x15caf]        # 43b9d0 <flatcc_builder_padding_base@@Base+0x2770>
  425d21:	vdivsd xmm0,xmm0,xmm1
  425d25:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d2a:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d2f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425d34:	vmovsd xmm1,QWORD PTR [rip+0x15c9c]        # 43b9d8 <flatcc_builder_padding_base@@Base+0x2778>
  425d3c:	vdivsd xmm0,xmm0,xmm1
  425d40:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d45:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d4a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425d4f:	vmovsd xmm1,QWORD PTR [rip+0x15c89]        # 43b9e0 <flatcc_builder_padding_base@@Base+0x2780>
  425d57:	vdivsd xmm0,xmm0,xmm1
  425d5b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d60:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d65:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425d6a:	vmovsd xmm1,QWORD PTR [rip+0x15c76]        # 43b9e8 <flatcc_builder_padding_base@@Base+0x2788>
  425d72:	vdivsd xmm0,xmm0,xmm1
  425d76:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d7b:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d80:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425d85:	vmovsd xmm1,QWORD PTR [rip+0x15c63]        # 43b9f0 <flatcc_builder_padding_base@@Base+0x2790>
  425d8d:	vdivsd xmm0,xmm0,xmm1
  425d91:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425d96:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425d9b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425da0:	vmovsd xmm1,QWORD PTR [rip+0x15c50]        # 43b9f8 <flatcc_builder_padding_base@@Base+0x2798>
  425da8:	vdivsd xmm0,xmm0,xmm1
  425dac:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425db1:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425db6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425dbb:	vmovsd xmm1,QWORD PTR [rip+0x15c3d]        # 43ba00 <flatcc_builder_padding_base@@Base+0x27a0>
  425dc3:	vdivsd xmm0,xmm0,xmm1
  425dc7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425dcc:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425dd1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425dd6:	vmovsd xmm1,QWORD PTR [rip+0x15c2a]        # 43ba08 <flatcc_builder_padding_base@@Base+0x27a8>
  425dde:	vdivsd xmm0,xmm0,xmm1
  425de2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425de7:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425dec:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425df1:	vmovsd xmm1,QWORD PTR [rip+0x15c17]        # 43ba10 <flatcc_builder_padding_base@@Base+0x27b0>
  425df9:	vdivsd xmm0,xmm0,xmm1
  425dfd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e02:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e07:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e0c:	vmovsd xmm1,QWORD PTR [rip+0x15c04]        # 43ba18 <flatcc_builder_padding_base@@Base+0x27b8>
  425e14:	vdivsd xmm0,xmm0,xmm1
  425e18:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e1d:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e22:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e27:	vmovsd xmm1,QWORD PTR [rip+0x15bf1]        # 43ba20 <flatcc_builder_padding_base@@Base+0x27c0>
  425e2f:	vdivsd xmm0,xmm0,xmm1
  425e33:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e38:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e3d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e42:	vmovsd xmm1,QWORD PTR [rip+0x15bde]        # 43ba28 <flatcc_builder_padding_base@@Base+0x27c8>
  425e4a:	vdivsd xmm0,xmm0,xmm1
  425e4e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e53:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e58:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e5d:	vmovsd xmm1,QWORD PTR [rip+0x15bcb]        # 43ba30 <flatcc_builder_padding_base@@Base+0x27d0>
  425e65:	vdivsd xmm0,xmm0,xmm1
  425e69:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e6e:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e73:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e78:	vmovsd xmm1,QWORD PTR [rip+0x15bb8]        # 43ba38 <flatcc_builder_padding_base@@Base+0x27d8>
  425e80:	vdivsd xmm0,xmm0,xmm1
  425e84:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425e89:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425e8e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425e93:	vmovsd xmm1,QWORD PTR [rip+0x15ba5]        # 43ba40 <flatcc_builder_padding_base@@Base+0x27e0>
  425e9b:	vdivsd xmm0,xmm0,xmm1
  425e9f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425ea4:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425ea9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425eae:	vmovsd xmm1,QWORD PTR [rip+0x15b92]        # 43ba48 <flatcc_builder_padding_base@@Base+0x27e8>
  425eb6:	vdivsd xmm0,xmm0,xmm1
  425eba:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425ebf:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425ec4:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425ec9:	vmovsd xmm0,QWORD PTR [rip+0x15b77]        # 43ba48 <flatcc_builder_padding_base@@Base+0x27e8>
  425ed1:	vmulsd xmm0,xmm1,xmm0
  425ed5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425eda:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425edf:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425ee4:	vmovsd xmm0,QWORD PTR [rip+0x15b54]        # 43ba40 <flatcc_builder_padding_base@@Base+0x27e0>
  425eec:	vmulsd xmm0,xmm1,xmm0
  425ef0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425ef5:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425efa:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425eff:	vmovsd xmm0,QWORD PTR [rip+0x15b31]        # 43ba38 <flatcc_builder_padding_base@@Base+0x27d8>
  425f07:	vmulsd xmm0,xmm1,xmm0
  425f0b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f10:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f15:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425f1a:	vmovsd xmm0,QWORD PTR [rip+0x15b0e]        # 43ba30 <flatcc_builder_padding_base@@Base+0x27d0>
  425f22:	vmulsd xmm0,xmm1,xmm0
  425f26:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f2b:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f30:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425f35:	vmovsd xmm0,QWORD PTR [rip+0x15aeb]        # 43ba28 <flatcc_builder_padding_base@@Base+0x27c8>
  425f3d:	vmulsd xmm0,xmm1,xmm0
  425f41:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f46:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f4b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425f50:	vmovsd xmm0,QWORD PTR [rip+0x15ac8]        # 43ba20 <flatcc_builder_padding_base@@Base+0x27c0>
  425f58:	vmulsd xmm0,xmm1,xmm0
  425f5c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f61:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f66:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425f6b:	vmovsd xmm0,QWORD PTR [rip+0x15aa5]        # 43ba18 <flatcc_builder_padding_base@@Base+0x27b8>
  425f73:	vmulsd xmm0,xmm1,xmm0
  425f77:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f7c:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f81:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425f86:	vmovsd xmm0,QWORD PTR [rip+0x15a82]        # 43ba10 <flatcc_builder_padding_base@@Base+0x27b0>
  425f8e:	vmulsd xmm0,xmm1,xmm0
  425f92:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425f97:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425f9c:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425fa1:	vmovsd xmm0,QWORD PTR [rip+0x15a5f]        # 43ba08 <flatcc_builder_padding_base@@Base+0x27a8>
  425fa9:	vmulsd xmm0,xmm1,xmm0
  425fad:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425fb2:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425fb7:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425fbc:	vmovsd xmm0,QWORD PTR [rip+0x15a3c]        # 43ba00 <flatcc_builder_padding_base@@Base+0x27a0>
  425fc4:	vmulsd xmm0,xmm1,xmm0
  425fc8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425fcd:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425fd2:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425fd7:	vmovsd xmm0,QWORD PTR [rip+0x15a19]        # 43b9f8 <flatcc_builder_padding_base@@Base+0x2798>
  425fdf:	vmulsd xmm0,xmm1,xmm0
  425fe3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425fe8:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  425fed:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425ff2:	vmovsd xmm0,QWORD PTR [rip+0x159f6]        # 43b9f0 <flatcc_builder_padding_base@@Base+0x2790>
  425ffa:	vmulsd xmm0,xmm1,xmm0
  425ffe:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426003:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426008:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42600d:	vmovsd xmm0,QWORD PTR [rip+0x159d3]        # 43b9e8 <flatcc_builder_padding_base@@Base+0x2788>
  426015:	vmulsd xmm0,xmm1,xmm0
  426019:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42601e:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426023:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426028:	vmovsd xmm0,QWORD PTR [rip+0x159b0]        # 43b9e0 <flatcc_builder_padding_base@@Base+0x2780>
  426030:	vmulsd xmm0,xmm1,xmm0
  426034:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426039:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42603e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426043:	vmovsd xmm0,QWORD PTR [rip+0x1598d]        # 43b9d8 <flatcc_builder_padding_base@@Base+0x2778>
  42604b:	vmulsd xmm0,xmm1,xmm0
  42604f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426054:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426059:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42605e:	vmovsd xmm0,QWORD PTR [rip+0x1596a]        # 43b9d0 <flatcc_builder_padding_base@@Base+0x2770>
  426066:	vmulsd xmm0,xmm1,xmm0
  42606a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42606f:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426074:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426079:	vmovsd xmm0,QWORD PTR [rip+0x15947]        # 43b9c8 <flatcc_builder_padding_base@@Base+0x2768>
  426081:	vmulsd xmm0,xmm1,xmm0
  426085:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42608a:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42608c:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426091:	vmovsd xmm0,QWORD PTR [rip+0x15927]        # 43b9c0 <flatcc_builder_padding_base@@Base+0x2760>
  426099:	vmulsd xmm0,xmm1,xmm0
  42609d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4260a2:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4260a4:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4260a9:	vmovsd xmm0,QWORD PTR [rip+0x15907]        # 43b9b8 <flatcc_builder_padding_base@@Base+0x2758>
  4260b1:	vmulsd xmm0,xmm1,xmm0
  4260b5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4260ba:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4260bc:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4260c1:	vmovsd xmm0,QWORD PTR [rip+0x158e7]        # 43b9b0 <flatcc_builder_padding_base@@Base+0x2750>
  4260c9:	vmulsd xmm0,xmm1,xmm0
  4260cd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4260d2:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4260d4:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4260d9:	vmovsd xmm0,QWORD PTR [rip+0x158c7]        # 43b9a8 <flatcc_builder_padding_base@@Base+0x2748>
  4260e1:	vmulsd xmm0,xmm1,xmm0
  4260e5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4260ea:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4260ec:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4260f1:	vmovsd xmm0,QWORD PTR [rip+0x158a7]        # 43b9a0 <flatcc_builder_padding_base@@Base+0x2740>
  4260f9:	vmulsd xmm0,xmm1,xmm0
  4260fd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426102:	jmp    426105 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426104:	nop
  426105:	mov    rax,QWORD PTR [rbp-0x50]
  426109:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42610e:	vmovsd QWORD PTR [rax],xmm0
  426112:	jmp    42616a <grisu3_diy_fp_encode_double@@Base+0x9a3>
  426114:	mov    rcx,QWORD PTR [rbp-0x50]
  426118:	mov    edx,DWORD PTR [rbp-0x44]
  42611b:	mov    esi,DWORD PTR [rbp-0x38]
  42611e:	mov    rax,QWORD PTR [rbp-0x40]
  426122:	mov    r8,rcx
  426125:	mov    ecx,DWORD PTR [rbp+0x10]
  426128:	mov    rdi,rax
  42612b:	call   4257c7 <grisu3_diy_fp_encode_double@@Base>
  426130:	test   eax,eax
  426132:	jne    426169 <grisu3_diy_fp_encode_double@@Base+0x9a2>
  426134:	lea    rdx,[rbp-0x18]
  426138:	mov    rax,QWORD PTR [rbp-0x28]
  42613c:	mov    rsi,rdx
  42613f:	mov    rdi,rax
  426142:	call   406180 <strtod@plt>
  426147:	vmovq  rax,xmm0
  42614c:	mov    rdx,QWORD PTR [rbp-0x50]
  426150:	mov    QWORD PTR [rdx],rax
  426153:	mov    rax,QWORD PTR [rbp-0x18]
  426157:	cmp    QWORD PTR [rbp-0x30],rax
  42615b:	jbe    426163 <grisu3_diy_fp_encode_double@@Base+0x99c>
  42615d:	mov    rax,QWORD PTR [rbp-0x18]
  426161:	jmp    426190 <grisu3_diy_fp_encode_double@@Base+0x9c9>
  426163:	mov    rax,QWORD PTR [rbp-0x30]
  426167:	jmp    426190 <grisu3_diy_fp_encode_double@@Base+0x9c9>
  426169:	nop
  42616a:	cmp    DWORD PTR [rbp-0x34],0x0
  42616e:	je     42618c <grisu3_diy_fp_encode_double@@Base+0x9c5>
  426170:	mov    rax,QWORD PTR [rbp-0x50]
  426174:	vmovsd xmm1,QWORD PTR [rax]
  426178:	vmovq  xmm0,QWORD PTR [rip+0x15800]        # 43b980 <flatcc_builder_padding_base@@Base+0x2720>
  426180:	vxorpd xmm0,xmm0,xmm1
  426184:	mov    rax,QWORD PTR [rbp-0x50]
  426188:	vmovsd QWORD PTR [rax],xmm0
  42618c:	mov    rax,QWORD PTR [rbp-0x30]
  426190:	mov    rcx,QWORD PTR [rbp-0x8]
  426194:	xor    rcx,QWORD PTR fs:0x28
  42619d:	je     4261a4 <grisu3_diy_fp_encode_double@@Base+0x9dd>
  42619f:	call   4061a0 <__stack_chk_fail@plt>
  4261a4:	leave  
  4261a5:	ret    
  4261a6:	endbr64 
  4261aa:	push   rbp
  4261ab:	mov    rbp,rsp
  4261ae:	mov    QWORD PTR [rbp-0x8],rdi
  4261b2:	mov    QWORD PTR [rbp-0x10],rsi
  4261b6:	mov    DWORD PTR [rbp-0x14],edx
  4261b9:	mov    QWORD PTR [rbp-0x20],rcx
  4261bd:	mov    rax,QWORD PTR [rbp-0x20]
  4261c1:	vxorpd xmm0,xmm0,xmm0
  4261c5:	vmovsd QWORD PTR [rax],xmm0
  4261c9:	mov    rax,QWORD PTR [rbp-0x8]
  4261cd:	pop    rbp
  4261ce:	ret    
  4261cf:	endbr64 
  4261d3:	push   rbp
  4261d4:	mov    rbp,rsp
  4261d7:	sub    rsp,0x60
  4261db:	mov    QWORD PTR [rbp-0x48],rdi
  4261df:	mov    DWORD PTR [rbp-0x4c],esi
  4261e2:	mov    QWORD PTR [rbp-0x58],rdx
  4261e6:	mov    DWORD PTR [rbp-0x38],0x0
  4261ed:	mov    DWORD PTR [rbp-0x34],0x0
  4261f4:	mov    QWORD PTR [rbp-0x18],0x0
  4261fc:	mov    DWORD PTR [rbp-0x30],0x0
  426203:	mov    DWORD PTR [rbp-0x2c],0x0
  42620a:	mov    DWORD PTR [rbp-0x28],0x0
  426211:	mov    DWORD PTR [rbp-0x24],0x0
  426218:	mov    rax,QWORD PTR [rbp-0x58]
  42621c:	vxorpd xmm0,xmm0,xmm0
  426220:	vmovsd QWORD PTR [rax],xmm0
  426224:	mov    eax,DWORD PTR [rbp-0x4c]
  426227:	cdqe   
  426229:	lea    rdx,[rax+0x1]
  42622d:	mov    rax,QWORD PTR [rbp-0x48]
  426231:	add    rax,rdx
  426234:	mov    QWORD PTR [rbp-0x20],rax
  426238:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  42623f:	jle    42624f <grisu3_diy_fp_encode_double@@Base+0xa88>
  426241:	mov    rax,QWORD PTR [rbp-0x48]
  426245:	add    rax,0x3e9
  42624b:	mov    QWORD PTR [rbp-0x20],rax
  42624f:	mov    rax,QWORD PTR [rbp-0x48]
  426253:	cmp    rax,QWORD PTR [rbp-0x20]
  426257:	jne    426262 <grisu3_diy_fp_encode_double@@Base+0xa9b>
  426259:	mov    rax,QWORD PTR [rbp-0x48]
  42625d:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426262:	mov    rax,QWORD PTR [rbp-0x48]
  426266:	mov    QWORD PTR [rbp-0x10],rax
  42626a:	mov    rax,QWORD PTR [rbp-0x48]
  42626e:	movzx  eax,BYTE PTR [rax]
  426271:	cmp    al,0x2d
  426273:	jne    426294 <grisu3_diy_fp_encode_double@@Base+0xacd>
  426275:	inc    QWORD PTR [rbp-0x48]
  426279:	mov    DWORD PTR [rbp-0x38],0x1
  426280:	mov    rax,QWORD PTR [rbp-0x48]
  426284:	cmp    rax,QWORD PTR [rbp-0x20]
  426288:	jne    426294 <grisu3_diy_fp_encode_double@@Base+0xacd>
  42628a:	mov    eax,0x0
  42628f:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426294:	mov    rax,QWORD PTR [rbp-0x48]
  426298:	movzx  eax,BYTE PTR [rax]
  42629b:	cmp    al,0x30
  42629d:	jne    42630d <grisu3_diy_fp_encode_double@@Base+0xb46>
  42629f:	inc    QWORD PTR [rbp-0x48]
  4262a3:	mov    rax,QWORD PTR [rbp-0x48]
  4262a7:	cmp    rax,QWORD PTR [rbp-0x20]
  4262ab:	je     4262f6 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  4262ad:	mov    rax,QWORD PTR [rbp-0x48]
  4262b1:	movzx  eax,BYTE PTR [rax]
  4262b4:	or     eax,0x20
  4262b7:	cmp    al,0x78
  4262b9:	jne    4262f6 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  4262bb:	mov    rcx,QWORD PTR [rbp-0x58]
  4262bf:	mov    edx,DWORD PTR [rbp-0x38]
  4262c2:	mov    rsi,QWORD PTR [rbp-0x20]
  4262c6:	mov    rax,QWORD PTR [rbp-0x48]
  4262ca:	mov    rdi,rax
  4262cd:	call   4261a6 <grisu3_diy_fp_encode_double@@Base+0x9df>
  4262d2:	mov    QWORD PTR [rbp-0x8],rax
  4262d6:	mov    rax,QWORD PTR [rbp-0x8]
  4262da:	cmp    rax,QWORD PTR [rbp-0x48]
  4262de:	jne    4262e9 <grisu3_diy_fp_encode_double@@Base+0xb22>
  4262e0:	mov    rax,QWORD PTR [rbp-0x10]
  4262e4:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4262e9:	mov    rax,QWORD PTR [rbp-0x8]
  4262ed:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4262f2:	inc    QWORD PTR [rbp-0x48]
  4262f6:	mov    rax,QWORD PTR [rbp-0x48]
  4262fa:	cmp    rax,QWORD PTR [rbp-0x20]
  4262fe:	je     426357 <grisu3_diy_fp_encode_double@@Base+0xb90>
  426300:	mov    rax,QWORD PTR [rbp-0x48]
  426304:	movzx  eax,BYTE PTR [rax]
  426307:	cmp    al,0x30
  426309:	je     4262f2 <grisu3_diy_fp_encode_double@@Base+0xb2b>
  42630b:	jmp    426357 <grisu3_diy_fp_encode_double@@Base+0xb90>
  42630d:	mov    rax,QWORD PTR [rbp-0x48]
  426311:	movzx  eax,BYTE PTR [rax]
  426314:	cmp    al,0x30
  426316:	jle    426323 <grisu3_diy_fp_encode_double@@Base+0xb5c>
  426318:	mov    rax,QWORD PTR [rbp-0x48]
  42631c:	movzx  eax,BYTE PTR [rax]
  42631f:	cmp    al,0x39
  426321:	jle    42633c <grisu3_diy_fp_encode_double@@Base+0xb75>
  426323:	cmp    DWORD PTR [rbp-0x38],0x0
  426327:	jne    426332 <grisu3_diy_fp_encode_double@@Base+0xb6b>
  426329:	mov    rax,QWORD PTR [rbp-0x10]
  42632d:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426332:	mov    eax,0x0
  426337:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  42633c:	mov    rax,QWORD PTR [rbp-0x48]
  426340:	lea    rdx,[rax+0x1]
  426344:	mov    QWORD PTR [rbp-0x48],rdx
  426348:	movzx  eax,BYTE PTR [rax]
  42634b:	movsx  eax,al
  42634e:	sub    eax,0x30
  426351:	cdqe   
  426353:	mov    QWORD PTR [rbp-0x18],rax
  426357:	mov    rax,QWORD PTR [rbp-0x48]
  42635b:	mov    QWORD PTR [rbp-0x8],rax
  42635f:	jmp    4263bf <grisu3_diy_fp_encode_double@@Base+0xbf8>
  426361:	movabs rax,0x1999999999999998
  42636b:	cmp    QWORD PTR [rbp-0x18],rax
  42636f:	jbe    42638d <grisu3_diy_fp_encode_double@@Base+0xbc6>
  426371:	mov    rax,QWORD PTR [rbp-0x48]
  426375:	movzx  eax,BYTE PTR [rax]
  426378:	cmp    al,0x34
  42637a:	setg   al
  42637d:	movzx  eax,al
  426380:	add    QWORD PTR [rbp-0x18],rax
  426384:	mov    DWORD PTR [rbp-0x24],0x1
  42638b:	jmp    4263df <grisu3_diy_fp_encode_double@@Base+0xc18>
  42638d:	mov    rdx,QWORD PTR [rbp-0x18]
  426391:	mov    rax,rdx
  426394:	shl    rax,0x2
  426398:	add    rax,rdx
  42639b:	add    rax,rax
  42639e:	mov    rcx,rax
  4263a1:	mov    rax,QWORD PTR [rbp-0x48]
  4263a5:	lea    rdx,[rax+0x1]
  4263a9:	mov    QWORD PTR [rbp-0x48],rdx
  4263ad:	movzx  eax,BYTE PTR [rax]
  4263b0:	movsx  rax,al
  4263b4:	add    rax,rcx
  4263b7:	sub    rax,0x30
  4263bb:	mov    QWORD PTR [rbp-0x18],rax
  4263bf:	mov    rax,QWORD PTR [rbp-0x48]
  4263c3:	cmp    rax,QWORD PTR [rbp-0x20]
  4263c7:	je     4263df <grisu3_diy_fp_encode_double@@Base+0xc18>
  4263c9:	mov    rax,QWORD PTR [rbp-0x48]
  4263cd:	movzx  eax,BYTE PTR [rax]
  4263d0:	cmp    al,0x2f
  4263d2:	jle    4263df <grisu3_diy_fp_encode_double@@Base+0xc18>
  4263d4:	mov    rax,QWORD PTR [rbp-0x48]
  4263d8:	movzx  eax,BYTE PTR [rax]
  4263db:	cmp    al,0x39
  4263dd:	jle    426361 <grisu3_diy_fp_encode_double@@Base+0xb9a>
  4263df:	mov    rax,QWORD PTR [rbp-0x48]
  4263e3:	sub    rax,QWORD PTR [rbp-0x8]
  4263e7:	mov    DWORD PTR [rbp-0x28],eax
  4263ea:	jmp    4263f3 <grisu3_diy_fp_encode_double@@Base+0xc2c>
  4263ec:	inc    DWORD PTR [rbp-0x30]
  4263ef:	inc    QWORD PTR [rbp-0x48]
  4263f3:	mov    rax,QWORD PTR [rbp-0x48]
  4263f7:	cmp    rax,QWORD PTR [rbp-0x20]
  4263fb:	je     426408 <grisu3_diy_fp_encode_double@@Base+0xc41>
  4263fd:	mov    rax,QWORD PTR [rbp-0x48]
  426401:	movzx  eax,BYTE PTR [rax]
  426404:	cmp    al,0x30
  426406:	je     4263ec <grisu3_diy_fp_encode_double@@Base+0xc25>
  426408:	mov    rax,QWORD PTR [rbp-0x48]
  42640c:	cmp    rax,QWORD PTR [rbp-0x20]
  426410:	je     42645f <grisu3_diy_fp_encode_double@@Base+0xc98>
  426412:	mov    rax,QWORD PTR [rbp-0x48]
  426416:	movzx  eax,BYTE PTR [rax]
  426419:	cmp    al,0x30
  42641b:	jle    42645f <grisu3_diy_fp_encode_double@@Base+0xc98>
  42641d:	mov    rax,QWORD PTR [rbp-0x48]
  426421:	movzx  eax,BYTE PTR [rax]
  426424:	cmp    al,0x39
  426426:	jg     42645f <grisu3_diy_fp_encode_double@@Base+0xc98>
  426428:	mov    DWORD PTR [rbp-0x24],0x1
  42642f:	inc    DWORD PTR [rbp-0x30]
  426432:	inc    QWORD PTR [rbp-0x48]
  426436:	jmp    42643f <grisu3_diy_fp_encode_double@@Base+0xc78>
  426438:	inc    DWORD PTR [rbp-0x30]
  42643b:	inc    QWORD PTR [rbp-0x48]
  42643f:	mov    rax,QWORD PTR [rbp-0x48]
  426443:	cmp    rax,QWORD PTR [rbp-0x20]
  426447:	je     42645f <grisu3_diy_fp_encode_double@@Base+0xc98>
  426449:	mov    rax,QWORD PTR [rbp-0x48]
  42644d:	movzx  eax,BYTE PTR [rax]
  426450:	cmp    al,0x2f
  426452:	jle    42645f <grisu3_diy_fp_encode_double@@Base+0xc98>
  426454:	mov    rax,QWORD PTR [rbp-0x48]
  426458:	movzx  eax,BYTE PTR [rax]
  42645b:	cmp    al,0x39
  42645d:	jle    426438 <grisu3_diy_fp_encode_double@@Base+0xc71>
  42645f:	mov    rax,QWORD PTR [rbp-0x48]
  426463:	cmp    rax,QWORD PTR [rbp-0x20]
  426467:	je     4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  42646d:	mov    rax,QWORD PTR [rbp-0x48]
  426471:	movzx  eax,BYTE PTR [rax]
  426474:	cmp    al,0x2e
  426476:	jne    4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  42647c:	inc    QWORD PTR [rbp-0x48]
  426480:	mov    rax,QWORD PTR [rbp-0x48]
  426484:	mov    QWORD PTR [rbp-0x8],rax
  426488:	mov    rax,QWORD PTR [rbp-0x48]
  42648c:	movzx  eax,BYTE PTR [rax]
  42648f:	cmp    al,0x2f
  426491:	jle    42649e <grisu3_diy_fp_encode_double@@Base+0xcd7>
  426493:	mov    rax,QWORD PTR [rbp-0x48]
  426497:	movzx  eax,BYTE PTR [rax]
  42649a:	cmp    al,0x39
  42649c:	jle    42650f <grisu3_diy_fp_encode_double@@Base+0xd48>
  42649e:	mov    eax,0x0
  4264a3:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4264a8:	movabs rax,0x1999999999999998
  4264b2:	cmp    QWORD PTR [rbp-0x18],rax
  4264b6:	jbe    4264da <grisu3_diy_fp_encode_double@@Base+0xd13>
  4264b8:	cmp    DWORD PTR [rbp-0x24],0x0
  4264bc:	jne    426535 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  4264be:	mov    rax,QWORD PTR [rbp-0x48]
  4264c2:	movzx  eax,BYTE PTR [rax]
  4264c5:	cmp    al,0x34
  4264c7:	setg   al
  4264ca:	movzx  eax,al
  4264cd:	add    QWORD PTR [rbp-0x18],rax
  4264d1:	mov    DWORD PTR [rbp-0x24],0x1
  4264d8:	jmp    426535 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  4264da:	mov    rdx,QWORD PTR [rbp-0x18]
  4264de:	mov    rax,rdx
  4264e1:	shl    rax,0x2
  4264e5:	add    rax,rdx
  4264e8:	add    rax,rax
  4264eb:	mov    rcx,rax
  4264ee:	mov    rax,QWORD PTR [rbp-0x48]
  4264f2:	lea    rdx,[rax+0x1]
  4264f6:	mov    QWORD PTR [rbp-0x48],rdx
  4264fa:	movzx  eax,BYTE PTR [rax]
  4264fd:	movsx  rax,al
  426501:	add    rax,rcx
  426504:	sub    rax,0x30
  426508:	mov    QWORD PTR [rbp-0x18],rax
  42650c:	dec    DWORD PTR [rbp-0x30]
  42650f:	mov    rax,QWORD PTR [rbp-0x48]
  426513:	cmp    rax,QWORD PTR [rbp-0x20]
  426517:	je     426536 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426519:	mov    rax,QWORD PTR [rbp-0x48]
  42651d:	movzx  eax,BYTE PTR [rax]
  426520:	cmp    al,0x2f
  426522:	jle    426536 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426524:	mov    rax,QWORD PTR [rbp-0x48]
  426528:	movzx  eax,BYTE PTR [rax]
  42652b:	cmp    al,0x39
  42652d:	jle    4264a8 <grisu3_diy_fp_encode_double@@Base+0xce1>
  426533:	jmp    426536 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426535:	nop
  426536:	mov    rax,QWORD PTR [rbp-0x48]
  42653a:	sub    rax,QWORD PTR [rbp-0x8]
  42653e:	add    DWORD PTR [rbp-0x28],eax
  426541:	jmp    42654a <grisu3_diy_fp_encode_double@@Base+0xd83>
  426543:	inc    DWORD PTR [rbp-0x30]
  426546:	inc    QWORD PTR [rbp-0x48]
  42654a:	mov    rax,QWORD PTR [rbp-0x48]
  42654e:	cmp    rax,QWORD PTR [rbp-0x20]
  426552:	je     42655f <grisu3_diy_fp_encode_double@@Base+0xd98>
  426554:	mov    rax,QWORD PTR [rbp-0x48]
  426558:	movzx  eax,BYTE PTR [rax]
  42655b:	cmp    al,0x30
  42655d:	je     426543 <grisu3_diy_fp_encode_double@@Base+0xd7c>
  42655f:	mov    rax,QWORD PTR [rbp-0x48]
  426563:	cmp    rax,QWORD PTR [rbp-0x20]
  426567:	je     4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  426569:	mov    rax,QWORD PTR [rbp-0x48]
  42656d:	movzx  eax,BYTE PTR [rax]
  426570:	cmp    al,0x30
  426572:	jle    4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  426574:	mov    rax,QWORD PTR [rbp-0x48]
  426578:	movzx  eax,BYTE PTR [rax]
  42657b:	cmp    al,0x39
  42657d:	jg     4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  42657f:	mov    DWORD PTR [rbp-0x24],0x1
  426586:	inc    QWORD PTR [rbp-0x48]
  42658a:	jmp    426590 <grisu3_diy_fp_encode_double@@Base+0xdc9>
  42658c:	inc    QWORD PTR [rbp-0x48]
  426590:	mov    rax,QWORD PTR [rbp-0x48]
  426594:	cmp    rax,QWORD PTR [rbp-0x20]
  426598:	je     4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  42659a:	mov    rax,QWORD PTR [rbp-0x48]
  42659e:	movzx  eax,BYTE PTR [rax]
  4265a1:	cmp    al,0x2f
  4265a3:	jle    4265b0 <grisu3_diy_fp_encode_double@@Base+0xde9>
  4265a5:	mov    rax,QWORD PTR [rbp-0x48]
  4265a9:	movzx  eax,BYTE PTR [rax]
  4265ac:	cmp    al,0x39
  4265ae:	jle    42658c <grisu3_diy_fp_encode_double@@Base+0xdc5>
  4265b0:	mov    eax,DWORD PTR [rbp-0x28]
  4265b3:	add    DWORD PTR [rbp-0x30],eax
  4265b6:	mov    rax,QWORD PTR [rbp-0x48]
  4265ba:	cmp    rax,QWORD PTR [rbp-0x20]
  4265be:	je     4266c6 <grisu3_diy_fp_encode_double@@Base+0xeff>
  4265c4:	mov    rax,QWORD PTR [rbp-0x48]
  4265c8:	movzx  eax,BYTE PTR [rax]
  4265cb:	or     eax,0x20
  4265ce:	cmp    al,0x65
  4265d0:	jne    4266c6 <grisu3_diy_fp_encode_double@@Base+0xeff>
  4265d6:	mov    rax,QWORD PTR [rbp-0x20]
  4265da:	sub    rax,QWORD PTR [rbp-0x48]
  4265de:	cmp    rax,0x1
  4265e2:	jg     4265ee <grisu3_diy_fp_encode_double@@Base+0xe27>
  4265e4:	mov    eax,0x0
  4265e9:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4265ee:	inc    QWORD PTR [rbp-0x48]
  4265f2:	mov    rax,QWORD PTR [rbp-0x48]
  4265f6:	movzx  eax,BYTE PTR [rax]
  4265f9:	cmp    al,0x2b
  4265fb:	jne    426615 <grisu3_diy_fp_encode_double@@Base+0xe4e>
  4265fd:	inc    QWORD PTR [rbp-0x48]
  426601:	mov    rax,QWORD PTR [rbp-0x48]
  426605:	cmp    rax,QWORD PTR [rbp-0x20]
  426609:	jne    42663f <grisu3_diy_fp_encode_double@@Base+0xe78>
  42660b:	mov    eax,0x0
  426610:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426615:	mov    rax,QWORD PTR [rbp-0x48]
  426619:	movzx  eax,BYTE PTR [rax]
  42661c:	cmp    al,0x2d
  42661e:	jne    42663f <grisu3_diy_fp_encode_double@@Base+0xe78>
  426620:	mov    DWORD PTR [rbp-0x34],0x1
  426627:	inc    QWORD PTR [rbp-0x48]
  42662b:	mov    rax,QWORD PTR [rbp-0x48]
  42662f:	cmp    rax,QWORD PTR [rbp-0x20]
  426633:	jne    42663f <grisu3_diy_fp_encode_double@@Base+0xe78>
  426635:	mov    eax,0x0
  42663a:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  42663f:	mov    rax,QWORD PTR [rbp-0x48]
  426643:	movzx  eax,BYTE PTR [rax]
  426646:	cmp    al,0x2f
  426648:	jle    426655 <grisu3_diy_fp_encode_double@@Base+0xe8e>
  42664a:	mov    rax,QWORD PTR [rbp-0x48]
  42664e:	movzx  eax,BYTE PTR [rax]
  426651:	cmp    al,0x39
  426653:	jle    42665f <grisu3_diy_fp_encode_double@@Base+0xe98>
  426655:	mov    eax,0x0
  42665a:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  42665f:	mov    rax,QWORD PTR [rbp-0x48]
  426663:	lea    rdx,[rax+0x1]
  426667:	mov    QWORD PTR [rbp-0x48],rdx
  42666b:	movzx  eax,BYTE PTR [rax]
  42666e:	movsx  eax,al
  426671:	sub    eax,0x30
  426674:	mov    DWORD PTR [rbp-0x2c],eax
  426677:	jmp    4266a6 <grisu3_diy_fp_encode_double@@Base+0xedf>
  426679:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  426680:	jg     4266a2 <grisu3_diy_fp_encode_double@@Base+0xedb>
  426682:	mov    edx,DWORD PTR [rbp-0x2c]
  426685:	mov    eax,edx
  426687:	shl    eax,0x2
  42668a:	add    eax,edx
  42668c:	add    eax,eax
  42668e:	mov    edx,eax
  426690:	mov    rax,QWORD PTR [rbp-0x48]
  426694:	movzx  eax,BYTE PTR [rax]
  426697:	movsx  eax,al
  42669a:	add    eax,edx
  42669c:	sub    eax,0x30
  42669f:	mov    DWORD PTR [rbp-0x2c],eax
  4266a2:	inc    QWORD PTR [rbp-0x48]
  4266a6:	mov    rax,QWORD PTR [rbp-0x48]
  4266aa:	cmp    rax,QWORD PTR [rbp-0x20]
  4266ae:	je     4266c6 <grisu3_diy_fp_encode_double@@Base+0xeff>
  4266b0:	mov    rax,QWORD PTR [rbp-0x48]
  4266b4:	movzx  eax,BYTE PTR [rax]
  4266b7:	cmp    al,0x2f
  4266b9:	jle    4266c6 <grisu3_diy_fp_encode_double@@Base+0xeff>
  4266bb:	mov    rax,QWORD PTR [rbp-0x48]
  4266bf:	movzx  eax,BYTE PTR [rax]
  4266c2:	cmp    al,0x39
  4266c4:	jle    426679 <grisu3_diy_fp_encode_double@@Base+0xeb2>
  4266c6:	cmp    DWORD PTR [rbp-0x34],0x0
  4266ca:	je     4266d3 <grisu3_diy_fp_encode_double@@Base+0xf0c>
  4266cc:	mov    eax,DWORD PTR [rbp-0x2c]
  4266cf:	neg    eax
  4266d1:	jmp    4266d6 <grisu3_diy_fp_encode_double@@Base+0xf0f>
  4266d3:	mov    eax,DWORD PTR [rbp-0x2c]
  4266d6:	add    DWORD PTR [rbp-0x30],eax
  4266d9:	mov    rax,QWORD PTR [rbp-0x48]
  4266dd:	cmp    rax,QWORD PTR [rbp-0x20]
  4266e1:	jne    4266ea <grisu3_diy_fp_encode_double@@Base+0xf23>
  4266e3:	mov    eax,0x0
  4266e8:	jmp    426714 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4266ea:	mov    r9d,DWORD PTR [rbp-0x28]
  4266ee:	mov    r8d,DWORD PTR [rbp-0x30]
  4266f2:	mov    rcx,QWORD PTR [rbp-0x18]
  4266f6:	mov    edx,DWORD PTR [rbp-0x38]
  4266f9:	mov    rsi,QWORD PTR [rbp-0x48]
  4266fd:	mov    rax,QWORD PTR [rbp-0x10]
  426701:	push   QWORD PTR [rbp-0x58]
  426704:	mov    edi,DWORD PTR [rbp-0x24]
  426707:	push   rdi
  426708:	mov    rdi,rax
  42670b:	call   425b58 <grisu3_diy_fp_encode_double@@Base+0x391>
  426710:	add    rsp,0x10
  426714:	leave  
  426715:	ret    
  426716:	push   rbp
  426717:	mov    rbp,rsp
  42671a:	sub    rsp,0x20
  42671e:	mov    QWORD PTR [rbp-0x8],rdi
  426722:	mov    DWORD PTR [rbp-0xc],esi
  426725:	mov    QWORD PTR [rbp-0x18],rdx
  426729:	mov    rdx,QWORD PTR [rbp-0x18]
  42672d:	mov    ecx,DWORD PTR [rbp-0xc]
  426730:	mov    rax,QWORD PTR [rbp-0x8]
  426734:	mov    esi,ecx
  426736:	mov    rdi,rax
  426739:	call   4261cf <grisu3_diy_fp_encode_double@@Base+0xa08>
  42673e:	leave  
  42673f:	ret    
  426740:	push   rbp
  426741:	mov    rbp,rsp
  426744:	sub    rsp,0x40
  426748:	mov    QWORD PTR [rbp-0x28],rdi
  42674c:	mov    DWORD PTR [rbp-0x2c],esi
  42674f:	mov    QWORD PTR [rbp-0x38],rdx
  426753:	mov    rax,QWORD PTR fs:0x28
  42675c:	mov    QWORD PTR [rbp-0x8],rax
  426760:	xor    eax,eax
  426762:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  426769:	lea    rdx,[rbp-0x18]
  42676d:	mov    ecx,DWORD PTR [rbp-0x2c]
  426770:	mov    rax,QWORD PTR [rbp-0x28]
  426774:	mov    esi,ecx
  426776:	mov    rdi,rax
  426779:	call   426716 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  42677e:	mov    QWORD PTR [rbp-0x10],rax
  426782:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  426787:	vcvtsd2ss xmm0,xmm0,xmm0
  42678b:	mov    rax,QWORD PTR [rbp-0x38]
  42678f:	vmovss DWORD PTR [rax],xmm0
  426793:	mov    rax,QWORD PTR [rbp-0x38]
  426797:	vmovss xmm1,DWORD PTR [rax]
  42679b:	vmovss xmm0,DWORD PTR [rip+0x152ad]        # 43ba50 <flatcc_builder_padding_base@@Base+0x27f0>
  4267a3:	vandps xmm0,xmm0,xmm1
  4267a7:	vucomiss xmm0,DWORD PTR [rip+0x152b1]        # 43ba60 <flatcc_builder_padding_base@@Base+0x2800>
  4267af:	setbe  al
  4267b2:	xor    eax,0x1
  4267b5:	test   al,al
  4267b7:	je     4267c0 <grisu3_diy_fp_encode_double@@Base+0xff9>
  4267b9:	mov    eax,0x1
  4267be:	jmp    4267c5 <grisu3_diy_fp_encode_double@@Base+0xffe>
  4267c0:	mov    eax,0x0
  4267c5:	test   al,al
  4267c7:	je     4267fe <grisu3_diy_fp_encode_double@@Base+0x1037>
  4267c9:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  4267ce:	vxorpd xmm0,xmm0,xmm0
  4267d2:	vcomisd xmm0,xmm1
  4267d6:	jbe    4267eb <grisu3_diy_fp_encode_double@@Base+0x1024>
  4267d8:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  4267dd:	vmovss xmm0,DWORD PTR [rip+0x1518b]        # 43b970 <flatcc_builder_padding_base@@Base+0x2710>
  4267e5:	vxorps xmm0,xmm0,xmm1
  4267e9:	jmp    4267f0 <grisu3_diy_fp_encode_double@@Base+0x1029>
  4267eb:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  4267f0:	mov    rax,QWORD PTR [rbp-0x38]
  4267f4:	vmovss DWORD PTR [rax],xmm0
  4267f8:	mov    rax,QWORD PTR [rbp-0x28]
  4267fc:	jmp    426802 <grisu3_diy_fp_encode_double@@Base+0x103b>
  4267fe:	mov    rax,QWORD PTR [rbp-0x10]
  426802:	mov    rcx,QWORD PTR [rbp-0x8]
  426806:	xor    rcx,QWORD PTR fs:0x28
  42680f:	je     426816 <grisu3_diy_fp_encode_double@@Base+0x104f>
  426811:	call   4061a0 <__stack_chk_fail@plt>
  426816:	leave  
  426817:	ret    
  426818:	endbr64 
  42681c:	push   rbp
  42681d:	mov    rbp,rsp
  426820:	mov    DWORD PTR [rbp-0x4],edi
  426823:	cmp    DWORD PTR [rbp-0x4],0x5
  426827:	ja     426884 <grisu3_diy_fp_encode_double@@Base+0x10bd>
  426829:	mov    eax,DWORD PTR [rbp-0x4]
  42682c:	lea    rdx,[rax*4+0x0]
  426834:	lea    rax,[rip+0x14541]        # 43ad7c <flatcc_builder_padding_base@@Base+0x1b1c>
  42683b:	mov    eax,DWORD PTR [rdx+rax*1]
  42683e:	movsxd rdx,eax
  426841:	lea    rax,[rip+0x14534]        # 43ad7c <flatcc_builder_padding_base@@Base+0x1b1c>
  426848:	add    rax,rdx
  42684b:	notrack jmp rax
  42684e:	lea    rax,[rip+0x144bb]        # 43ad10 <flatcc_builder_padding_base@@Base+0x1ab0>
  426855:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  426857:	lea    rax,[rip+0x144b5]        # 43ad13 <flatcc_builder_padding_base@@Base+0x1ab3>
  42685e:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  426860:	lea    rax,[rip+0x144bd]        # 43ad24 <flatcc_builder_padding_base@@Base+0x1ac4>
  426867:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  426869:	lea    rax,[rip+0x144c1]        # 43ad31 <flatcc_builder_padding_base@@Base+0x1ad1>
  426870:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  426872:	lea    rax,[rip+0x144c9]        # 43ad42 <flatcc_builder_padding_base@@Base+0x1ae2>
  426879:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  42687b:	lea    rax,[rip+0x144d4]        # 43ad56 <flatcc_builder_padding_base@@Base+0x1af6>
  426882:	jmp    42688b <grisu3_diy_fp_encode_double@@Base+0x10c4>
  426884:	lea    rax,[rip+0x144e0]        # 43ad6b <flatcc_builder_padding_base@@Base+0x1b0b>
  42688b:	pop    rbp
  42688c:	ret    
  42688d:	endbr64 
  426891:	push   rbp
  426892:	mov    rbp,rsp
  426895:	mov    QWORD PTR [rbp-0x28],rdi
  426899:	mov    DWORD PTR [rbp-0x2c],esi
  42689c:	mov    rcx,QWORD PTR [rbp-0x28]
  4268a0:	movabs rdx,0xaaaaaaaaaaaaaaab
  4268aa:	mov    rax,rcx
  4268ad:	mul    rdx
  4268b0:	shr    rdx,1
  4268b3:	mov    rax,rdx
  4268b6:	add    rax,rax
  4268b9:	add    rax,rdx
  4268bc:	sub    rcx,rax
  4268bf:	mov    rax,rcx
  4268c2:	mov    QWORD PTR [rbp-0x8],rax
  4268c6:	mov    rax,QWORD PTR [rbp-0x28]
  4268ca:	shl    rax,0x2
  4268ce:	movabs rdx,0xaaaaaaaaaaaaaaab
  4268d8:	mul    rdx
  4268db:	mov    rax,rdx
  4268de:	shr    rax,1
  4268e1:	add    rax,0x3
  4268e5:	and    rax,0xfffffffffffffffc
  4268e9:	mov    QWORD PTR [rbp-0x10],rax
  4268ed:	mov    eax,DWORD PTR [rbp-0x2c]
  4268f0:	and    eax,0x80
  4268f5:	mov    DWORD PTR [rbp-0x14],eax
  4268f8:	cmp    DWORD PTR [rbp-0x14],0x0
  4268fc:	jne    426919 <grisu3_diy_fp_encode_double@@Base+0x1152>
  4268fe:	cmp    QWORD PTR [rbp-0x8],0x1
  426903:	je     426912 <grisu3_diy_fp_encode_double@@Base+0x114b>
  426905:	cmp    QWORD PTR [rbp-0x8],0x2
  42690a:	jne    42691c <grisu3_diy_fp_encode_double@@Base+0x1155>
  42690c:	dec    QWORD PTR [rbp-0x10]
  426910:	jmp    42691d <grisu3_diy_fp_encode_double@@Base+0x1156>
  426912:	sub    QWORD PTR [rbp-0x10],0x2
  426917:	jmp    42691d <grisu3_diy_fp_encode_double@@Base+0x1156>
  426919:	nop
  42691a:	jmp    42691d <grisu3_diy_fp_encode_double@@Base+0x1156>
  42691c:	nop
  42691d:	mov    rax,QWORD PTR [rbp-0x10]
  426921:	pop    rbp
  426922:	ret    
  426923:	endbr64 
  426927:	push   rbp
  426928:	mov    rbp,rsp
  42692b:	mov    QWORD PTR [rbp-0x18],rdi
  42692f:	mov    rax,QWORD PTR [rbp-0x18]
  426933:	and    eax,0x3
  426936:	mov    QWORD PTR [rbp-0x10],rax
  42693a:	mov    rax,QWORD PTR [rbp-0x18]
  42693e:	shr    rax,0x2
  426942:	mov    rdx,rax
  426945:	mov    rax,rdx
  426948:	add    rax,rax
  42694b:	add    rax,rdx
  42694e:	mov    QWORD PTR [rbp-0x8],rax
  426952:	cmp    QWORD PTR [rbp-0x10],0x2
  426957:	je     42696a <grisu3_diy_fp_encode_double@@Base+0x11a3>
  426959:	cmp    QWORD PTR [rbp-0x10],0x3
  42695e:	jne    426973 <grisu3_diy_fp_encode_double@@Base+0x11ac>
  426960:	mov    rax,QWORD PTR [rbp-0x8]
  426964:	add    rax,0x2
  426968:	jmp    426977 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  42696a:	mov    rax,QWORD PTR [rbp-0x8]
  42696e:	inc    rax
  426971:	jmp    426977 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  426973:	mov    rax,QWORD PTR [rbp-0x8]
  426977:	pop    rbp
  426978:	ret    
  426979:	endbr64 
  42697d:	push   rbp
  42697e:	mov    rbp,rsp
  426981:	mov    QWORD PTR [rbp-0x38],rdi
  426985:	mov    QWORD PTR [rbp-0x40],rsi
  426989:	mov    QWORD PTR [rbp-0x48],rdx
  42698d:	mov    QWORD PTR [rbp-0x50],rcx
  426991:	mov    DWORD PTR [rbp-0x54],r8d
  426995:	lea    rax,[rip+0x143fc]        # 43ad98 <flatcc_builder_padding_base@@Base+0x1b38>
  42699c:	mov    QWORD PTR [rbp-0x18],rax
  4269a0:	lea    rax,[rip+0x14439]        # 43ade0 <flatcc_builder_padding_base@@Base+0x1b80>
  4269a7:	mov    QWORD PTR [rbp-0x10],rax
  4269ab:	mov    rax,QWORD PTR [rbp-0x38]
  4269af:	mov    QWORD PTR [rbp-0x8],rax
  4269b3:	mov    eax,DWORD PTR [rbp-0x54]
  4269b6:	and    eax,0x80
  4269bb:	mov    DWORD PTR [rbp-0x2c],eax
  4269be:	mov    QWORD PTR [rbp-0x20],0x0
  4269c6:	mov    DWORD PTR [rbp-0x30],0x3
  4269cd:	cmp    QWORD PTR [rbp-0x50],0x0
  4269d2:	jne    4269e0 <grisu3_diy_fp_encode_double@@Base+0x1219>
  4269d4:	mov    DWORD PTR [rbp-0x30],0x2
  4269db:	jmp    426c38 <grisu3_diy_fp_encode_double@@Base+0x1471>
  4269e0:	mov    rax,QWORD PTR [rbp-0x50]
  4269e4:	mov    rax,QWORD PTR [rax]
  4269e7:	mov    QWORD PTR [rbp-0x20],rax
  4269eb:	and    DWORD PTR [rbp-0x54],0xffffff1f
  4269f2:	cmp    DWORD PTR [rbp-0x54],0x0
  4269f6:	je     426a03 <grisu3_diy_fp_encode_double@@Base+0x123c>
  4269f8:	cmp    DWORD PTR [rbp-0x54],0x1
  4269fc:	je     426a0d <grisu3_diy_fp_encode_double@@Base+0x1246>
  4269fe:	jmp    426c38 <grisu3_diy_fp_encode_double@@Base+0x1471>
  426a03:	mov    rax,QWORD PTR [rbp-0x18]
  426a07:	mov    QWORD PTR [rbp-0x28],rax
  426a0b:	jmp    426a16 <grisu3_diy_fp_encode_double@@Base+0x124f>
  426a0d:	mov    rax,QWORD PTR [rbp-0x10]
  426a11:	mov    QWORD PTR [rbp-0x28],rax
  426a15:	nop
  426a16:	mov    DWORD PTR [rbp-0x30],0x0
  426a1d:	jmp    426aef <grisu3_diy_fp_encode_double@@Base+0x1328>
  426a22:	mov    rax,QWORD PTR [rbp-0x40]
  426a26:	movzx  eax,BYTE PTR [rax]
  426a29:	shr    al,0x2
  426a2c:	movzx  edx,al
  426a2f:	mov    rax,QWORD PTR [rbp-0x28]
  426a33:	add    rax,rdx
  426a36:	movzx  eax,BYTE PTR [rax]
  426a39:	mov    rdx,QWORD PTR [rbp-0x38]
  426a3d:	mov    BYTE PTR [rdx],al
  426a3f:	mov    rax,QWORD PTR [rbp-0x40]
  426a43:	movzx  eax,BYTE PTR [rax]
  426a46:	movzx  eax,al
  426a49:	shl    eax,0x4
  426a4c:	and    eax,0x30
  426a4f:	mov    edx,eax
  426a51:	mov    rax,QWORD PTR [rbp-0x40]
  426a55:	inc    rax
  426a58:	movzx  eax,BYTE PTR [rax]
  426a5b:	shr    al,0x4
  426a5e:	movzx  eax,al
  426a61:	or     eax,edx
  426a63:	movsxd rdx,eax
  426a66:	mov    rax,QWORD PTR [rbp-0x28]
  426a6a:	add    rax,rdx
  426a6d:	mov    rdx,QWORD PTR [rbp-0x38]
  426a71:	inc    rdx
  426a74:	movzx  eax,BYTE PTR [rax]
  426a77:	mov    BYTE PTR [rdx],al
  426a79:	mov    rax,QWORD PTR [rbp-0x40]
  426a7d:	inc    rax
  426a80:	movzx  eax,BYTE PTR [rax]
  426a83:	movzx  eax,al
  426a86:	shl    eax,0x2
  426a89:	and    eax,0x3c
  426a8c:	mov    edx,eax
  426a8e:	mov    rax,QWORD PTR [rbp-0x40]
  426a92:	add    rax,0x2
  426a96:	movzx  eax,BYTE PTR [rax]
  426a99:	shr    al,0x6
  426a9c:	movzx  eax,al
  426a9f:	or     eax,edx
  426aa1:	movsxd rdx,eax
  426aa4:	mov    rax,QWORD PTR [rbp-0x28]
  426aa8:	add    rax,rdx
  426aab:	mov    rdx,QWORD PTR [rbp-0x38]
  426aaf:	add    rdx,0x2
  426ab3:	movzx  eax,BYTE PTR [rax]
  426ab6:	mov    BYTE PTR [rdx],al
  426ab8:	mov    rax,QWORD PTR [rbp-0x40]
  426abc:	add    rax,0x2
  426ac0:	movzx  eax,BYTE PTR [rax]
  426ac3:	movzx  eax,al
  426ac6:	and    eax,0x3f
  426ac9:	mov    rdx,rax
  426acc:	mov    rax,QWORD PTR [rbp-0x28]
  426ad0:	add    rax,rdx
  426ad3:	mov    rdx,QWORD PTR [rbp-0x38]
  426ad7:	add    rdx,0x3
  426adb:	movzx  eax,BYTE PTR [rax]
  426ade:	mov    BYTE PTR [rdx],al
  426ae0:	sub    QWORD PTR [rbp-0x20],0x3
  426ae5:	add    QWORD PTR [rbp-0x38],0x4
  426aea:	add    QWORD PTR [rbp-0x40],0x3
  426aef:	cmp    QWORD PTR [rbp-0x20],0x2
  426af4:	ja     426a22 <grisu3_diy_fp_encode_double@@Base+0x125b>
  426afa:	cmp    QWORD PTR [rbp-0x20],0x1
  426aff:	je     426bb3 <grisu3_diy_fp_encode_double@@Base+0x13ec>
  426b05:	cmp    QWORD PTR [rbp-0x20],0x2
  426b0a:	jne    426c23 <grisu3_diy_fp_encode_double@@Base+0x145c>
  426b10:	mov    rax,QWORD PTR [rbp-0x40]
  426b14:	movzx  eax,BYTE PTR [rax]
  426b17:	shr    al,0x2
  426b1a:	movzx  edx,al
  426b1d:	mov    rax,QWORD PTR [rbp-0x28]
  426b21:	add    rax,rdx
  426b24:	movzx  eax,BYTE PTR [rax]
  426b27:	mov    rdx,QWORD PTR [rbp-0x38]
  426b2b:	mov    BYTE PTR [rdx],al
  426b2d:	mov    rax,QWORD PTR [rbp-0x40]
  426b31:	movzx  eax,BYTE PTR [rax]
  426b34:	movzx  eax,al
  426b37:	shl    eax,0x4
  426b3a:	and    eax,0x30
  426b3d:	mov    edx,eax
  426b3f:	mov    rax,QWORD PTR [rbp-0x40]
  426b43:	inc    rax
  426b46:	movzx  eax,BYTE PTR [rax]
  426b49:	shr    al,0x4
  426b4c:	movzx  eax,al
  426b4f:	or     eax,edx
  426b51:	movsxd rdx,eax
  426b54:	mov    rax,QWORD PTR [rbp-0x28]
  426b58:	add    rax,rdx
  426b5b:	mov    rdx,QWORD PTR [rbp-0x38]
  426b5f:	inc    rdx
  426b62:	movzx  eax,BYTE PTR [rax]
  426b65:	mov    BYTE PTR [rdx],al
  426b67:	mov    rax,QWORD PTR [rbp-0x40]
  426b6b:	inc    rax
  426b6e:	movzx  eax,BYTE PTR [rax]
  426b71:	movzx  eax,al
  426b74:	shl    eax,0x2
  426b77:	cdqe   
  426b79:	and    eax,0x3c
  426b7c:	mov    rdx,rax
  426b7f:	mov    rax,QWORD PTR [rbp-0x28]
  426b83:	add    rax,rdx
  426b86:	mov    rdx,QWORD PTR [rbp-0x38]
  426b8a:	add    rdx,0x2
  426b8e:	movzx  eax,BYTE PTR [rax]
  426b91:	mov    BYTE PTR [rdx],al
  426b93:	add    QWORD PTR [rbp-0x38],0x3
  426b98:	cmp    DWORD PTR [rbp-0x2c],0x0
  426b9c:	je     426c2c <grisu3_diy_fp_encode_double@@Base+0x1465>
  426ba2:	mov    rax,QWORD PTR [rbp-0x38]
  426ba6:	lea    rdx,[rax+0x1]
  426baa:	mov    QWORD PTR [rbp-0x38],rdx
  426bae:	mov    BYTE PTR [rax],0x3d
  426bb1:	jmp    426c2c <grisu3_diy_fp_encode_double@@Base+0x1465>
  426bb3:	mov    rax,QWORD PTR [rbp-0x40]
  426bb7:	movzx  eax,BYTE PTR [rax]
  426bba:	shr    al,0x2
  426bbd:	movzx  edx,al
  426bc0:	mov    rax,QWORD PTR [rbp-0x28]
  426bc4:	add    rax,rdx
  426bc7:	movzx  eax,BYTE PTR [rax]
  426bca:	mov    rdx,QWORD PTR [rbp-0x38]
  426bce:	mov    BYTE PTR [rdx],al
  426bd0:	mov    rax,QWORD PTR [rbp-0x40]
  426bd4:	movzx  eax,BYTE PTR [rax]
  426bd7:	movzx  eax,al
  426bda:	shl    eax,0x4
  426bdd:	cdqe   
  426bdf:	and    eax,0x30
  426be2:	mov    rdx,rax
  426be5:	mov    rax,QWORD PTR [rbp-0x28]
  426be9:	add    rax,rdx
  426bec:	mov    rdx,QWORD PTR [rbp-0x38]
  426bf0:	inc    rdx
  426bf3:	movzx  eax,BYTE PTR [rax]
  426bf6:	mov    BYTE PTR [rdx],al
  426bf8:	add    QWORD PTR [rbp-0x38],0x2
  426bfd:	cmp    DWORD PTR [rbp-0x2c],0x0
  426c01:	je     426c2f <grisu3_diy_fp_encode_double@@Base+0x1468>
  426c03:	mov    rax,QWORD PTR [rbp-0x38]
  426c07:	lea    rdx,[rax+0x1]
  426c0b:	mov    QWORD PTR [rbp-0x38],rdx
  426c0f:	mov    BYTE PTR [rax],0x3d
  426c12:	mov    rax,QWORD PTR [rbp-0x38]
  426c16:	lea    rdx,[rax+0x1]
  426c1a:	mov    QWORD PTR [rbp-0x38],rdx
  426c1e:	mov    BYTE PTR [rax],0x3d
  426c21:	jmp    426c2f <grisu3_diy_fp_encode_double@@Base+0x1468>
  426c23:	mov    DWORD PTR [rbp-0x2c],0x0
  426c2a:	jmp    426c30 <grisu3_diy_fp_encode_double@@Base+0x1469>
  426c2c:	nop
  426c2d:	jmp    426c30 <grisu3_diy_fp_encode_double@@Base+0x1469>
  426c2f:	nop
  426c30:	mov    QWORD PTR [rbp-0x20],0x0
  426c38:	cmp    QWORD PTR [rbp-0x48],0x0
  426c3d:	je     426c51 <grisu3_diy_fp_encode_double@@Base+0x148a>
  426c3f:	mov    rax,QWORD PTR [rbp-0x38]
  426c43:	sub    rax,QWORD PTR [rbp-0x8]
  426c47:	mov    rdx,rax
  426c4a:	mov    rax,QWORD PTR [rbp-0x48]
  426c4e:	mov    QWORD PTR [rax],rdx
  426c51:	cmp    QWORD PTR [rbp-0x50],0x0
  426c56:	je     426c6d <grisu3_diy_fp_encode_double@@Base+0x14a6>
  426c58:	mov    rax,QWORD PTR [rbp-0x50]
  426c5c:	mov    rax,QWORD PTR [rax]
  426c5f:	sub    rax,QWORD PTR [rbp-0x20]
  426c63:	mov    rdx,rax
  426c66:	mov    rax,QWORD PTR [rbp-0x50]
  426c6a:	mov    QWORD PTR [rax],rdx
  426c6d:	mov    eax,DWORD PTR [rbp-0x30]
  426c70:	pop    rbp
  426c71:	ret    
  426c72:	endbr64 
  426c76:	push   rbp
  426c77:	mov    rbp,rsp
  426c7a:	add    rsp,0xffffffffffffff80
  426c7e:	mov    QWORD PTR [rbp-0x58],rdi
  426c82:	mov    QWORD PTR [rbp-0x60],rsi
  426c86:	mov    QWORD PTR [rbp-0x68],rdx
  426c8a:	mov    QWORD PTR [rbp-0x70],rcx
  426c8e:	mov    DWORD PTR [rbp-0x74],r8d
  426c92:	mov    rax,QWORD PTR fs:0x28
  426c9b:	mov    QWORD PTR [rbp-0x8],rax
  426c9f:	xor    eax,eax
  426ca1:	mov    DWORD PTR [rbp-0x50],0x0
  426ca8:	mov    rax,QWORD PTR [rbp-0x58]
  426cac:	mov    QWORD PTR [rbp-0x18],rax
  426cb0:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  426cb8:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  426cc0:	lea    rax,[rip+0x14839]        # 43b500 <flatcc_builder_padding_base@@Base+0x22a0>
  426cc7:	mov    QWORD PTR [rbp-0x20],rax
  426ccb:	mov    eax,DWORD PTR [rbp-0x74]
  426cce:	and    eax,0x20
  426cd1:	mov    DWORD PTR [rbp-0x4c],eax
  426cd4:	cmp    QWORD PTR [rbp-0x70],0x0
  426cd9:	je     426ce6 <grisu3_diy_fp_encode_double@@Base+0x151f>
  426cdb:	mov    rax,QWORD PTR [rbp-0x70]
  426cdf:	mov    rax,QWORD PTR [rax]
  426ce2:	mov    QWORD PTR [rbp-0x30],rax
  426ce6:	mov    rax,QWORD PTR [rbp-0x30]
  426cea:	mov    QWORD PTR [rbp-0x28],rax
  426cee:	and    DWORD PTR [rbp-0x74],0xffffff1f
  426cf5:	cmp    DWORD PTR [rbp-0x74],0x0
  426cf9:	je     426d03 <grisu3_diy_fp_encode_double@@Base+0x153c>
  426cfb:	cmp    DWORD PTR [rbp-0x74],0x1
  426cff:	je     426d1f <grisu3_diy_fp_encode_double@@Base+0x1558>
  426d01:	jmp    426d3b <grisu3_diy_fp_encode_double@@Base+0x1574>
  426d03:	cmp    DWORD PTR [rbp-0x4c],0x0
  426d07:	je     426d12 <grisu3_diy_fp_encode_double@@Base+0x154b>
  426d09:	lea    rax,[rip+0x148f0]        # 43b600 <flatcc_builder_padding_base@@Base+0x23a0>
  426d10:	jmp    426d19 <grisu3_diy_fp_encode_double@@Base+0x1552>
  426d12:	lea    rax,[rip+0x147e7]        # 43b500 <flatcc_builder_padding_base@@Base+0x22a0>
  426d19:	mov    QWORD PTR [rbp-0x20],rax
  426d1d:	jmp    426d47 <grisu3_diy_fp_encode_double@@Base+0x1580>
  426d1f:	cmp    DWORD PTR [rbp-0x4c],0x0
  426d23:	je     426d2e <grisu3_diy_fp_encode_double@@Base+0x1567>
  426d25:	lea    rax,[rip+0x149d4]        # 43b700 <flatcc_builder_padding_base@@Base+0x24a0>
  426d2c:	jmp    426d35 <grisu3_diy_fp_encode_double@@Base+0x156e>
  426d2e:	lea    rax,[rip+0x14acb]        # 43b800 <flatcc_builder_padding_base@@Base+0x25a0>
  426d35:	mov    QWORD PTR [rbp-0x20],rax
  426d39:	jmp    426d47 <grisu3_diy_fp_encode_double@@Base+0x1580>
  426d3b:	mov    DWORD PTR [rbp-0x50],0x3
  426d42:	jmp    426f47 <grisu3_diy_fp_encode_double@@Base+0x1780>
  426d47:	cmp    QWORD PTR [rbp-0x68],0x0
  426d4c:	je     426f3b <grisu3_diy_fp_encode_double@@Base+0x1774>
  426d52:	mov    rax,QWORD PTR [rbp-0x68]
  426d56:	mov    rax,QWORD PTR [rax]
  426d59:	test   rax,rax
  426d5c:	je     426f3b <grisu3_diy_fp_encode_double@@Base+0x1774>
  426d62:	mov    rax,QWORD PTR [rbp-0x68]
  426d66:	mov    rax,QWORD PTR [rax]
  426d69:	mov    QWORD PTR [rbp-0x38],rax
  426d6d:	jmp    426f3b <grisu3_diy_fp_encode_double@@Base+0x1774>
  426d72:	mov    QWORD PTR [rbp-0x48],0x0
  426d7a:	jmp    426ea9 <grisu3_diy_fp_encode_double@@Base+0x16e2>
  426d7f:	mov    rax,QWORD PTR [rbp-0x30]
  426d83:	cmp    rax,QWORD PTR [rbp-0x48]
  426d87:	jne    426d9e <grisu3_diy_fp_encode_double@@Base+0x15d7>
  426d89:	mov    rax,QWORD PTR [rbp-0x48]
  426d8d:	mov    QWORD PTR [rbp-0x40],rax
  426d91:	mov    rax,QWORD PTR [rbp-0x48]
  426d95:	sub    QWORD PTR [rbp-0x30],rax
  426d99:	jmp    426f97 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  426d9e:	mov    rdx,QWORD PTR [rbp-0x60]
  426da2:	mov    rax,QWORD PTR [rbp-0x48]
  426da6:	add    rax,rdx
  426da9:	movzx  eax,BYTE PTR [rax]
  426dac:	movzx  edx,al
  426daf:	mov    rax,QWORD PTR [rbp-0x20]
  426db3:	add    rax,rdx
  426db6:	movzx  eax,BYTE PTR [rax]
  426db9:	lea    rcx,[rbp-0xc]
  426dbd:	mov    rdx,QWORD PTR [rbp-0x48]
  426dc1:	add    rdx,rcx
  426dc4:	mov    BYTE PTR [rdx],al
  426dc6:	lea    rdx,[rbp-0xc]
  426dca:	mov    rax,QWORD PTR [rbp-0x48]
  426dce:	add    rax,rdx
  426dd1:	movzx  edx,BYTE PTR [rax]
  426dd4:	movzx  eax,BYTE PTR [rip+0x14b25]        # 43b900 <flatcc_builder_padding_base@@Base+0x26a0>
  426ddb:	cmp    dl,al
  426ddd:	jb     426ea5 <grisu3_diy_fp_encode_double@@Base+0x16de>
  426de3:	lea    rdx,[rbp-0xc]
  426de7:	mov    rax,QWORD PTR [rbp-0x48]
  426deb:	add    rax,rdx
  426dee:	movzx  edx,BYTE PTR [rax]
  426df1:	movzx  eax,BYTE PTR [rip+0x14b09]        # 43b901 <flatcc_builder_padding_base@@Base+0x26a1>
  426df8:	cmp    dl,al
  426dfa:	jne    426e0d <grisu3_diy_fp_encode_double@@Base+0x1646>
  426dfc:	inc    QWORD PTR [rbp-0x60]
  426e00:	dec    QWORD PTR [rbp-0x30]
  426e04:	dec    QWORD PTR [rbp-0x48]
  426e08:	jmp    426ea5 <grisu3_diy_fp_encode_double@@Base+0x16de>
  426e0d:	mov    rax,QWORD PTR [rbp-0x48]
  426e11:	mov    QWORD PTR [rbp-0x40],rax
  426e15:	lea    rdx,[rbp-0xc]
  426e19:	mov    rax,QWORD PTR [rbp-0x48]
  426e1d:	add    rax,rdx
  426e20:	movzx  edx,BYTE PTR [rax]
  426e23:	movzx  eax,BYTE PTR [rip+0x14ad8]        # 43b902 <flatcc_builder_padding_base@@Base+0x26a2>
  426e2a:	cmp    dl,al
  426e2c:	jne    426e98 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  426e2e:	inc    QWORD PTR [rbp-0x48]
  426e32:	jmp    426e84 <grisu3_diy_fp_encode_double@@Base+0x16bd>
  426e34:	mov    rdx,QWORD PTR [rbp-0x60]
  426e38:	mov    rax,QWORD PTR [rbp-0x48]
  426e3c:	add    rax,rdx
  426e3f:	movzx  eax,BYTE PTR [rax]
  426e42:	movzx  edx,al
  426e45:	mov    rax,QWORD PTR [rbp-0x20]
  426e49:	add    rax,rdx
  426e4c:	movzx  edx,BYTE PTR [rax]
  426e4f:	movzx  eax,BYTE PTR [rip+0x14aac]        # 43b902 <flatcc_builder_padding_base@@Base+0x26a2>
  426e56:	cmp    dl,al
  426e58:	je     426e80 <grisu3_diy_fp_encode_double@@Base+0x16b9>
  426e5a:	mov    rdx,QWORD PTR [rbp-0x60]
  426e5e:	mov    rax,QWORD PTR [rbp-0x48]
  426e62:	add    rax,rdx
  426e65:	movzx  eax,BYTE PTR [rax]
  426e68:	movzx  edx,al
  426e6b:	mov    rax,QWORD PTR [rbp-0x20]
  426e6f:	add    rax,rdx
  426e72:	movzx  edx,BYTE PTR [rax]
  426e75:	movzx  eax,BYTE PTR [rip+0x14a85]        # 43b901 <flatcc_builder_padding_base@@Base+0x26a1>
  426e7c:	cmp    dl,al
  426e7e:	jne    426e97 <grisu3_diy_fp_encode_double@@Base+0x16d0>
  426e80:	inc    QWORD PTR [rbp-0x48]
  426e84:	mov    rax,QWORD PTR [rbp-0x48]
  426e88:	cmp    rax,QWORD PTR [rbp-0x30]
  426e8c:	jae    426e98 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  426e8e:	cmp    QWORD PTR [rbp-0x48],0x7
  426e93:	jbe    426e34 <grisu3_diy_fp_encode_double@@Base+0x166d>
  426e95:	jmp    426e98 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  426e97:	nop
  426e98:	mov    rax,QWORD PTR [rbp-0x48]
  426e9c:	sub    QWORD PTR [rbp-0x30],rax
  426ea0:	jmp    426f97 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  426ea5:	inc    QWORD PTR [rbp-0x48]
  426ea9:	cmp    QWORD PTR [rbp-0x48],0x3
  426eae:	jbe    426d7f <grisu3_diy_fp_encode_double@@Base+0x15b8>
  426eb4:	cmp    QWORD PTR [rbp-0x38],0x2
  426eb9:	jbe    427080 <grisu3_diy_fp_encode_double@@Base+0x18b9>
  426ebf:	movzx  eax,BYTE PTR [rbp-0xc]
  426ec3:	movzx  eax,al
  426ec6:	shl    eax,0x2
  426ec9:	mov    edx,eax
  426ecb:	movzx  eax,BYTE PTR [rbp-0xb]
  426ecf:	shr    al,0x4
  426ed2:	or     eax,edx
  426ed4:	mov    edx,eax
  426ed6:	mov    rax,QWORD PTR [rbp-0x58]
  426eda:	mov    BYTE PTR [rax],dl
  426edc:	movzx  eax,BYTE PTR [rbp-0xb]
  426ee0:	movzx  eax,al
  426ee3:	shl    eax,0x4
  426ee6:	mov    edx,eax
  426ee8:	movzx  eax,BYTE PTR [rbp-0xa]
  426eec:	shr    al,0x2
  426eef:	mov    ecx,edx
  426ef1:	or     ecx,eax
  426ef3:	mov    rax,QWORD PTR [rbp-0x58]
  426ef7:	lea    rdx,[rax+0x1]
  426efb:	mov    eax,ecx
  426efd:	mov    BYTE PTR [rdx],al
  426eff:	movzx  eax,BYTE PTR [rbp-0xa]
  426f03:	movzx  eax,al
  426f06:	shl    eax,0x6
  426f09:	mov    edx,eax
  426f0b:	movzx  eax,BYTE PTR [rbp-0x9]
  426f0f:	mov    ecx,edx
  426f11:	or     ecx,eax
  426f13:	mov    rax,QWORD PTR [rbp-0x58]
  426f17:	lea    rdx,[rax+0x2]
  426f1b:	mov    eax,ecx
  426f1d:	mov    BYTE PTR [rdx],al
  426f1f:	add    QWORD PTR [rbp-0x58],0x3
  426f24:	add    QWORD PTR [rbp-0x60],0x4
  426f29:	sub    QWORD PTR [rbp-0x38],0x3
  426f2e:	sub    QWORD PTR [rbp-0x30],0x4
  426f33:	mov    rax,QWORD PTR [rbp-0x30]
  426f37:	mov    QWORD PTR [rbp-0x28],rax
  426f3b:	cmp    QWORD PTR [rbp-0x38],0x0
  426f40:	jne    426d72 <grisu3_diy_fp_encode_double@@Base+0x15ab>
  426f46:	nop
  426f47:	cmp    QWORD PTR [rbp-0x68],0x0
  426f4c:	je     426f60 <grisu3_diy_fp_encode_double@@Base+0x1799>
  426f4e:	mov    rax,QWORD PTR [rbp-0x58]
  426f52:	sub    rax,QWORD PTR [rbp-0x18]
  426f56:	mov    rdx,rax
  426f59:	mov    rax,QWORD PTR [rbp-0x68]
  426f5d:	mov    QWORD PTR [rax],rdx
  426f60:	cmp    QWORD PTR [rbp-0x70],0x0
  426f65:	je     426f7c <grisu3_diy_fp_encode_double@@Base+0x17b5>
  426f67:	mov    rax,QWORD PTR [rbp-0x70]
  426f6b:	mov    rax,QWORD PTR [rax]
  426f6e:	sub    rax,QWORD PTR [rbp-0x28]
  426f72:	mov    rdx,rax
  426f75:	mov    rax,QWORD PTR [rbp-0x70]
  426f79:	mov    QWORD PTR [rax],rdx
  426f7c:	mov    eax,DWORD PTR [rbp-0x50]
  426f7f:	mov    rsi,QWORD PTR [rbp-0x8]
  426f83:	xor    rsi,QWORD PTR fs:0x28
  426f8c:	je     427098 <grisu3_diy_fp_encode_double@@Base+0x18d1>
  426f92:	jmp    427093 <grisu3_diy_fp_encode_double@@Base+0x18cc>
  426f97:	cmp    QWORD PTR [rbp-0x40],0x2
  426f9c:	je     426fb5 <grisu3_diy_fp_encode_double@@Base+0x17ee>
  426f9e:	cmp    QWORD PTR [rbp-0x40],0x3
  426fa3:	je     426ff8 <grisu3_diy_fp_encode_double@@Base+0x1831>
  426fa5:	cmp    QWORD PTR [rbp-0x40],0x0
  426faa:	jne    427057 <grisu3_diy_fp_encode_double@@Base+0x1890>
  426fb0:	jmp    427063 <grisu3_diy_fp_encode_double@@Base+0x189c>
  426fb5:	movzx  eax,BYTE PTR [rbp-0xb]
  426fb9:	movzx  eax,al
  426fbc:	shl    eax,0x4
  426fbf:	movzx  eax,al
  426fc2:	test   eax,eax
  426fc4:	jne    427070 <grisu3_diy_fp_encode_double@@Base+0x18a9>
  426fca:	cmp    QWORD PTR [rbp-0x38],0x0
  426fcf:	je     427083 <grisu3_diy_fp_encode_double@@Base+0x18bc>
  426fd5:	movzx  eax,BYTE PTR [rbp-0xc]
  426fd9:	movzx  eax,al
  426fdc:	shl    eax,0x2
  426fdf:	mov    edx,eax
  426fe1:	movzx  eax,BYTE PTR [rbp-0xb]
  426fe5:	shr    al,0x4
  426fe8:	or     eax,edx
  426fea:	mov    edx,eax
  426fec:	mov    rax,QWORD PTR [rbp-0x58]
  426ff0:	mov    BYTE PTR [rax],dl
  426ff2:	inc    QWORD PTR [rbp-0x58]
  426ff6:	jmp    427063 <grisu3_diy_fp_encode_double@@Base+0x189c>
  426ff8:	movzx  eax,BYTE PTR [rbp-0xa]
  426ffc:	movzx  eax,al
  426fff:	shl    eax,0x6
  427002:	movzx  eax,al
  427005:	test   eax,eax
  427007:	jne    427073 <grisu3_diy_fp_encode_double@@Base+0x18ac>
  427009:	cmp    QWORD PTR [rbp-0x38],0x1
  42700e:	jbe    427086 <grisu3_diy_fp_encode_double@@Base+0x18bf>
  427010:	movzx  eax,BYTE PTR [rbp-0xc]
  427014:	movzx  eax,al
  427017:	shl    eax,0x2
  42701a:	mov    edx,eax
  42701c:	movzx  eax,BYTE PTR [rbp-0xb]
  427020:	shr    al,0x4
  427023:	or     eax,edx
  427025:	mov    edx,eax
  427027:	mov    rax,QWORD PTR [rbp-0x58]
  42702b:	mov    BYTE PTR [rax],dl
  42702d:	movzx  eax,BYTE PTR [rbp-0xb]
  427031:	movzx  eax,al
  427034:	shl    eax,0x4
  427037:	mov    edx,eax
  427039:	movzx  eax,BYTE PTR [rbp-0xa]
  42703d:	shr    al,0x2
  427040:	mov    ecx,edx
  427042:	or     ecx,eax
  427044:	mov    rax,QWORD PTR [rbp-0x58]
  427048:	lea    rdx,[rax+0x1]
  42704c:	mov    eax,ecx
  42704e:	mov    BYTE PTR [rdx],al
  427050:	add    QWORD PTR [rbp-0x58],0x2
  427055:	jmp    427063 <grisu3_diy_fp_encode_double@@Base+0x189c>
  427057:	mov    DWORD PTR [rbp-0x50],0x4
  42705e:	jmp    426f47 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427063:	mov    rax,QWORD PTR [rbp-0x30]
  427067:	mov    QWORD PTR [rbp-0x28],rax
  42706b:	jmp    426f47 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427070:	nop
  427071:	jmp    427074 <grisu3_diy_fp_encode_double@@Base+0x18ad>
  427073:	nop
  427074:	mov    DWORD PTR [rbp-0x50],0x5
  42707b:	jmp    426f47 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427080:	nop
  427081:	jmp    427087 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  427083:	nop
  427084:	jmp    427087 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  427086:	nop
  427087:	mov    DWORD PTR [rbp-0x50],0x1
  42708e:	jmp    426f47 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427093:	call   4061a0 <__stack_chk_fail@plt>
  427098:	leave  
  427099:	ret    

000000000042709a <flatcc_json_parser_error_string@@Base>:
  42709a:	endbr64 
  42709e:	push   rbp
  42709f:	mov    rbp,rsp
  4270a2:	mov    DWORD PTR [rbp-0x4],edi
  4270a5:	cmp    DWORD PTR [rbp-0x4],0x22
  4270a9:	ja     42724e <flatcc_json_parser_error_string@@Base+0x1b4>
  4270af:	mov    eax,DWORD PTR [rbp-0x4]
  4270b2:	lea    rdx,[rax*4+0x0]
  4270ba:	lea    rax,[rip+0x13fef]        # 43b0b0 <flatcc_builder_padding_base@@Base+0x1e50>
  4270c1:	mov    eax,DWORD PTR [rdx+rax*1]
  4270c4:	movsxd rdx,eax
  4270c7:	lea    rax,[rip+0x13fe2]        # 43b0b0 <flatcc_builder_padding_base@@Base+0x1e50>
  4270ce:	add    rax,rdx
  4270d1:	notrack jmp rax
  4270d4:	lea    rax,[rip+0x13c35]        # 43ad10 <flatcc_builder_padding_base@@Base+0x1ab0>
  4270db:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4270e0:	lea    rax,[rip+0x13d3a]        # 43ae21 <flatcc_builder_padding_base@@Base+0x1bc1>
  4270e7:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4270ec:	lea    rax,[rip+0x13d32]        # 43ae25 <flatcc_builder_padding_base@@Base+0x1bc5>
  4270f3:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4270f8:	lea    rax,[rip+0x13d33]        # 43ae32 <flatcc_builder_padding_base@@Base+0x1bd2>
  4270ff:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427104:	lea    rax,[rip+0x13d36]        # 43ae41 <flatcc_builder_padding_base@@Base+0x1be1>
  42710b:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427110:	lea    rax,[rip+0x13d39]        # 43ae50 <flatcc_builder_padding_base@@Base+0x1bf0>
  427117:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42711c:	lea    rax,[rip+0x13d42]        # 43ae65 <flatcc_builder_padding_base@@Base+0x1c05>
  427123:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427128:	lea    rax,[rip+0x13d46]        # 43ae75 <flatcc_builder_padding_base@@Base+0x1c15>
  42712f:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427134:	lea    rax,[rip+0x13d43]        # 43ae7e <flatcc_builder_padding_base@@Base+0x1c1e>
  42713b:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427140:	lea    rax,[rip+0x13d41]        # 43ae88 <flatcc_builder_padding_base@@Base+0x1c28>
  427147:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42714c:	lea    rax,[rip+0x13d46]        # 43ae99 <flatcc_builder_padding_base@@Base+0x1c39>
  427153:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427158:	lea    rax,[rip+0x13d4c]        # 43aeab <flatcc_builder_padding_base@@Base+0x1c4b>
  42715f:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427164:	lea    rax,[rip+0x13d4f]        # 43aeba <flatcc_builder_padding_base@@Base+0x1c5a>
  42716b:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427170:	lea    rax,[rip+0x13d54]        # 43aecb <flatcc_builder_padding_base@@Base+0x1c6b>
  427177:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42717c:	lea    rax,[rip+0x13d57]        # 43aeda <flatcc_builder_padding_base@@Base+0x1c7a>
  427183:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427188:	lea    rax,[rip+0x13d64]        # 43aef3 <flatcc_builder_padding_base@@Base+0x1c93>
  42718f:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427194:	lea    rax,[rip+0x13d6b]        # 43af06 <flatcc_builder_padding_base@@Base+0x1ca6>
  42719b:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271a0:	lea    rax,[rip+0x13d6f]        # 43af16 <flatcc_builder_padding_base@@Base+0x1cb6>
  4271a7:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271ac:	lea    rax,[rip+0x13d75]        # 43af28 <flatcc_builder_padding_base@@Base+0x1cc8>
  4271b3:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271b8:	lea    rax,[rip+0x13d78]        # 43af37 <flatcc_builder_padding_base@@Base+0x1cd7>
  4271bf:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271c4:	lea    rax,[rip+0x13d79]        # 43af44 <flatcc_builder_padding_base@@Base+0x1ce4>
  4271cb:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271d0:	lea    rax,[rip+0x13d81]        # 43af58 <flatcc_builder_padding_base@@Base+0x1cf8>
  4271d7:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271d9:	lea    rax,[rip+0x13d88]        # 43af68 <flatcc_builder_padding_base@@Base+0x1d08>
  4271e0:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271e2:	lea    rax,[rip+0x13d8f]        # 43af78 <flatcc_builder_padding_base@@Base+0x1d18>
  4271e9:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271eb:	lea    rax,[rip+0x13daa]        # 43af9c <flatcc_builder_padding_base@@Base+0x1d3c>
  4271f2:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271f4:	lea    rax,[rip+0x13db5]        # 43afb0 <flatcc_builder_padding_base@@Base+0x1d50>
  4271fb:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  4271fd:	lea    rax,[rip+0x13dcc]        # 43afd0 <flatcc_builder_padding_base@@Base+0x1d70>
  427204:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427206:	lea    rax,[rip+0x13de2]        # 43afef <flatcc_builder_padding_base@@Base+0x1d8f>
  42720d:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42720f:	lea    rax,[rip+0x13df4]        # 43b00a <flatcc_builder_padding_base@@Base+0x1daa>
  427216:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427218:	lea    rax,[rip+0x13e05]        # 43b024 <flatcc_builder_padding_base@@Base+0x1dc4>
  42721f:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427221:	lea    rax,[rip+0x13e13]        # 43b03b <flatcc_builder_padding_base@@Base+0x1ddb>
  427228:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42722a:	lea    rax,[rip+0x13e27]        # 43b058 <flatcc_builder_padding_base@@Base+0x1df8>
  427231:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427233:	lea    rax,[rip+0x13e35]        # 43b06f <flatcc_builder_padding_base@@Base+0x1e0f>
  42723a:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42723c:	lea    rax,[rip+0x13e46]        # 43b089 <flatcc_builder_padding_base@@Base+0x1e29>
  427243:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  427245:	lea    rax,[rip+0x13e4b]        # 43b097 <flatcc_builder_padding_base@@Base+0x1e37>
  42724c:	jmp    427255 <flatcc_json_parser_error_string@@Base+0x1bb>
  42724e:	lea    rax,[rip+0x13e50]        # 43b0a5 <flatcc_builder_padding_base@@Base+0x1e45>
  427255:	pop    rbp
  427256:	ret    

0000000000427257 <flatcc_json_parser_set_error@@Base>:
  427257:	endbr64 
  42725b:	push   rbp
  42725c:	mov    rbp,rsp
  42725f:	mov    QWORD PTR [rbp-0x8],rdi
  427263:	mov    QWORD PTR [rbp-0x10],rsi
  427267:	mov    QWORD PTR [rbp-0x18],rdx
  42726b:	mov    DWORD PTR [rbp-0x1c],ecx
  42726e:	mov    rax,QWORD PTR [rbp-0x8]
  427272:	mov    eax,DWORD PTR [rax+0x1c]
  427275:	test   eax,eax
  427277:	jne    4272ac <flatcc_json_parser_set_error@@Base+0x55>
  427279:	mov    rax,QWORD PTR [rbp-0x8]
  42727d:	mov    edx,DWORD PTR [rbp-0x1c]
  427280:	mov    DWORD PTR [rax+0x1c],edx
  427283:	mov    rax,QWORD PTR [rbp-0x8]
  427287:	mov    rax,QWORD PTR [rax+0x8]
  42728b:	mov    rdx,QWORD PTR [rbp-0x10]
  42728f:	sub    rdx,rax
  427292:	mov    rax,rdx
  427295:	inc    eax
  427297:	mov    edx,eax
  427299:	mov    rax,QWORD PTR [rbp-0x8]
  42729d:	mov    DWORD PTR [rax+0x18],edx
  4272a0:	mov    rax,QWORD PTR [rbp-0x8]
  4272a4:	mov    rdx,QWORD PTR [rbp-0x10]
  4272a8:	mov    QWORD PTR [rax+0x30],rdx
  4272ac:	mov    rax,QWORD PTR [rbp-0x18]
  4272b0:	pop    rbp
  4272b1:	ret    

00000000004272b2 <flatcc_json_parser_string_part@@Base>:
  4272b2:	endbr64 
  4272b6:	push   rbp
  4272b7:	mov    rbp,rsp
  4272ba:	sub    rsp,0x20
  4272be:	mov    QWORD PTR [rbp-0x8],rdi
  4272c2:	mov    QWORD PTR [rbp-0x10],rsi
  4272c6:	mov    QWORD PTR [rbp-0x18],rdx
  4272ca:	jmp    4272d0 <flatcc_json_parser_string_part@@Base+0x1e>
  4272cc:	inc    QWORD PTR [rbp-0x10]
  4272d0:	mov    rax,QWORD PTR [rbp-0x10]
  4272d4:	cmp    rax,QWORD PTR [rbp-0x18]
  4272d8:	je     4272fb <flatcc_json_parser_string_part@@Base+0x49>
  4272da:	mov    rax,QWORD PTR [rbp-0x10]
  4272de:	movzx  eax,BYTE PTR [rax]
  4272e1:	cmp    al,0x22
  4272e3:	je     4272fb <flatcc_json_parser_string_part@@Base+0x49>
  4272e5:	mov    rax,QWORD PTR [rbp-0x10]
  4272e9:	movzx  eax,BYTE PTR [rax]
  4272ec:	cmp    al,0x1f
  4272ee:	jbe    4272fb <flatcc_json_parser_string_part@@Base+0x49>
  4272f0:	mov    rax,QWORD PTR [rbp-0x10]
  4272f4:	movzx  eax,BYTE PTR [rax]
  4272f7:	cmp    al,0x5c
  4272f9:	jne    4272cc <flatcc_json_parser_string_part@@Base+0x1a>
  4272fb:	mov    rax,QWORD PTR [rbp-0x10]
  4272ff:	cmp    rax,QWORD PTR [rbp-0x18]
  427303:	jne    427320 <flatcc_json_parser_string_part@@Base+0x6e>
  427305:	mov    rdx,QWORD PTR [rbp-0x18]
  427309:	mov    rsi,QWORD PTR [rbp-0x10]
  42730d:	mov    rax,QWORD PTR [rbp-0x8]
  427311:	mov    ecx,0x14
  427316:	mov    rdi,rax
  427319:	call   427257 <flatcc_json_parser_set_error@@Base>
  42731e:	jmp    42735b <flatcc_json_parser_string_part@@Base+0xa9>
  427320:	mov    rax,QWORD PTR [rbp-0x10]
  427324:	movzx  eax,BYTE PTR [rax]
  427327:	cmp    al,0x22
  427329:	jne    427331 <flatcc_json_parser_string_part@@Base+0x7f>
  42732b:	mov    rax,QWORD PTR [rbp-0x10]
  42732f:	jmp    42735b <flatcc_json_parser_string_part@@Base+0xa9>
  427331:	mov    rax,QWORD PTR [rbp-0x10]
  427335:	movzx  eax,BYTE PTR [rax]
  427338:	cmp    al,0x1f
  42733a:	jg     427357 <flatcc_json_parser_string_part@@Base+0xa5>
  42733c:	mov    rdx,QWORD PTR [rbp-0x18]
  427340:	mov    rsi,QWORD PTR [rbp-0x10]
  427344:	mov    rax,QWORD PTR [rbp-0x8]
  427348:	mov    ecx,0x11
  42734d:	mov    rdi,rax
  427350:	call   427257 <flatcc_json_parser_set_error@@Base>
  427355:	jmp    42735b <flatcc_json_parser_string_part@@Base+0xa9>
  427357:	mov    rax,QWORD PTR [rbp-0x10]
  42735b:	leave  
  42735c:	ret    

000000000042735d <flatcc_json_parser_space_ext@@Base>:
  42735d:	endbr64 
  427361:	push   rbp
  427362:	mov    rbp,rsp
  427365:	sub    rsp,0x20
  427369:	mov    QWORD PTR [rbp-0x8],rdi
  42736d:	mov    QWORD PTR [rbp-0x10],rsi
  427371:	mov    QWORD PTR [rbp-0x18],rdx
  427375:	nop
  427376:	mov    rax,QWORD PTR [rbp-0x18]
  42737a:	sub    rax,QWORD PTR [rbp-0x10]
  42737e:	cmp    rax,0xf
  427382:	jle    4273d4 <flatcc_json_parser_space_ext@@Base+0x77>
  427384:	mov    rax,QWORD PTR [rbp-0x10]
  427388:	movzx  eax,BYTE PTR [rax]
  42738b:	cmp    al,0x20
  42738d:	jle    427398 <flatcc_json_parser_space_ext@@Base+0x3b>
  42738f:	mov    rax,QWORD PTR [rbp-0x10]
  427393:	jmp    4274ac <flatcc_json_parser_space_ext@@Base+0x14f>
  427398:	mov    rax,QWORD PTR [rbp-0x10]
  42739c:	movzx  eax,WORD PTR [rax]
  42739f:	cmp    ax,0x2020
  4273a3:	jne    4273aa <flatcc_json_parser_space_ext@@Base+0x4d>
  4273a5:	add    QWORD PTR [rbp-0x10],0x2
  4273aa:	mov    rax,QWORD PTR [rbp-0x10]
  4273ae:	movzx  eax,BYTE PTR [rax]
  4273b1:	cmp    al,0x20
  4273b3:	jne    4273b9 <flatcc_json_parser_space_ext@@Base+0x5c>
  4273b5:	inc    QWORD PTR [rbp-0x10]
  4273b9:	mov    rax,QWORD PTR [rbp-0x10]
  4273bd:	movzx  eax,BYTE PTR [rax]
  4273c0:	cmp    al,0x20
  4273c2:	jle    4273cd <flatcc_json_parser_space_ext@@Base+0x70>
  4273c4:	mov    rax,QWORD PTR [rbp-0x10]
  4273c8:	jmp    4274ac <flatcc_json_parser_space_ext@@Base+0x14f>
  4273cd:	nop
  4273ce:	jmp    4273d4 <flatcc_json_parser_space_ext@@Base+0x77>
  4273d0:	inc    QWORD PTR [rbp-0x10]
  4273d4:	mov    rax,QWORD PTR [rbp-0x10]
  4273d8:	cmp    rax,QWORD PTR [rbp-0x18]
  4273dc:	je     42748f <flatcc_json_parser_space_ext@@Base+0x132>
  4273e2:	mov    rax,QWORD PTR [rbp-0x10]
  4273e6:	movzx  eax,BYTE PTR [rax]
  4273e9:	cmp    al,0x20
  4273eb:	je     4273d0 <flatcc_json_parser_space_ext@@Base+0x73>
  4273ed:	jmp    42748f <flatcc_json_parser_space_ext@@Base+0x132>
  4273f2:	mov    rax,QWORD PTR [rbp-0x10]
  4273f6:	movzx  eax,BYTE PTR [rax]
  4273f9:	movsx  eax,al
  4273fc:	cmp    eax,0xa
  4273ff:	je     42744b <flatcc_json_parser_space_ext@@Base+0xee>
  427401:	cmp    eax,0xa
  427404:	jg     42740d <flatcc_json_parser_space_ext@@Base+0xb0>
  427406:	cmp    eax,0x9
  427409:	je     42746e <flatcc_json_parser_space_ext@@Base+0x111>
  42740b:	jmp    427474 <flatcc_json_parser_space_ext@@Base+0x117>
  42740d:	cmp    eax,0xd
  427410:	je     42741d <flatcc_json_parser_space_ext@@Base+0xc0>
  427412:	cmp    eax,0x20
  427415:	je     427375 <flatcc_json_parser_space_ext@@Base+0x18>
  42741b:	jmp    427474 <flatcc_json_parser_space_ext@@Base+0x117>
  42741d:	mov    rax,QWORD PTR [rbp-0x18]
  427421:	sub    rax,QWORD PTR [rbp-0x10]
  427425:	cmp    rax,0x1
  427429:	jle    427440 <flatcc_json_parser_space_ext@@Base+0xe3>
  42742b:	mov    rax,QWORD PTR [rbp-0x10]
  42742f:	inc    rax
  427432:	movzx  eax,BYTE PTR [rax]
  427435:	cmp    al,0xa
  427437:	jne    427440 <flatcc_json_parser_space_ext@@Base+0xe3>
  427439:	mov    eax,0x1
  42743e:	jmp    427445 <flatcc_json_parser_space_ext@@Base+0xe8>
  427440:	mov    eax,0x0
  427445:	cdqe   
  427447:	add    QWORD PTR [rbp-0x10],rax
  42744b:	mov    rax,QWORD PTR [rbp-0x8]
  42744f:	mov    eax,DWORD PTR [rax+0x14]
  427452:	lea    edx,[rax+0x1]
  427455:	mov    rax,QWORD PTR [rbp-0x8]
  427459:	mov    DWORD PTR [rax+0x14],edx
  42745c:	inc    QWORD PTR [rbp-0x10]
  427460:	mov    rax,QWORD PTR [rbp-0x8]
  427464:	mov    rdx,QWORD PTR [rbp-0x10]
  427468:	mov    QWORD PTR [rax+0x8],rdx
  42746c:	jmp    42748f <flatcc_json_parser_space_ext@@Base+0x132>
  42746e:	inc    QWORD PTR [rbp-0x10]
  427472:	jmp    42748f <flatcc_json_parser_space_ext@@Base+0x132>
  427474:	mov    rdx,QWORD PTR [rbp-0x18]
  427478:	mov    rsi,QWORD PTR [rbp-0x10]
  42747c:	mov    rax,QWORD PTR [rbp-0x8]
  427480:	mov    ecx,0x5
  427485:	mov    rdi,rax
  427488:	call   427257 <flatcc_json_parser_set_error@@Base>
  42748d:	jmp    4274ac <flatcc_json_parser_space_ext@@Base+0x14f>
  42748f:	mov    rax,QWORD PTR [rbp-0x10]
  427493:	cmp    rax,QWORD PTR [rbp-0x18]
  427497:	je     4274a8 <flatcc_json_parser_space_ext@@Base+0x14b>
  427499:	mov    rax,QWORD PTR [rbp-0x10]
  42749d:	movzx  eax,BYTE PTR [rax]
  4274a0:	cmp    al,0x20
  4274a2:	jle    4273f2 <flatcc_json_parser_space_ext@@Base+0x95>
  4274a8:	mov    rax,QWORD PTR [rbp-0x10]
  4274ac:	leave  
  4274ad:	ret    

00000000004274ae <flatcc_json_parser_string_escape@@Base>:
  4274ae:	endbr64 
  4274b2:	push   rbp
  4274b3:	mov    rbp,rsp
  4274b6:	sub    rsp,0x30
  4274ba:	mov    QWORD PTR [rbp-0x18],rdi
  4274be:	mov    QWORD PTR [rbp-0x20],rsi
  4274c2:	mov    QWORD PTR [rbp-0x28],rdx
  4274c6:	mov    QWORD PTR [rbp-0x30],rcx
  4274ca:	mov    rax,QWORD PTR [rbp-0x28]
  4274ce:	sub    rax,QWORD PTR [rbp-0x20]
  4274d2:	cmp    rax,0x1
  4274d6:	jle    4274e3 <flatcc_json_parser_string_escape@@Base+0x35>
  4274d8:	mov    rax,QWORD PTR [rbp-0x20]
  4274dc:	movzx  eax,BYTE PTR [rax]
  4274df:	cmp    al,0x5c
  4274e1:	je     427508 <flatcc_json_parser_string_escape@@Base+0x5a>
  4274e3:	mov    rax,QWORD PTR [rbp-0x30]
  4274e7:	mov    BYTE PTR [rax],0x0
  4274ea:	mov    rdx,QWORD PTR [rbp-0x28]
  4274ee:	mov    rsi,QWORD PTR [rbp-0x20]
  4274f2:	mov    rax,QWORD PTR [rbp-0x18]
  4274f6:	mov    ecx,0x12
  4274fb:	mov    rdi,rax
  4274fe:	call   427257 <flatcc_json_parser_set_error@@Base>
  427503:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427508:	mov    rax,QWORD PTR [rbp-0x20]
  42750c:	inc    rax
  42750f:	movzx  eax,BYTE PTR [rax]
  427512:	movsx  eax,al
  427515:	sub    eax,0x22
  427518:	cmp    eax,0x56
  42751b:	ja     427a5b <flatcc_json_parser_string_escape@@Base+0x5ad>
  427521:	mov    eax,eax
  427523:	lea    rdx,[rax*4+0x0]
  42752b:	lea    rax,[rip+0x13c0a]        # 43b13c <flatcc_builder_padding_base@@Base+0x1edc>
  427532:	mov    eax,DWORD PTR [rdx+rax*1]
  427535:	movsxd rdx,eax
  427538:	lea    rax,[rip+0x13bfd]        # 43b13c <flatcc_builder_padding_base@@Base+0x1edc>
  42753f:	add    rax,rdx
  427542:	notrack jmp rax
  427545:	mov    BYTE PTR [rbp-0x6],0x0
  427549:	mov    rax,QWORD PTR [rbp-0x30]
  42754d:	mov    BYTE PTR [rax],0x1
  427550:	mov    rax,QWORD PTR [rbp-0x28]
  427554:	sub    rax,QWORD PTR [rbp-0x20]
  427558:	cmp    rax,0x3
  42755c:	jg     427583 <flatcc_json_parser_string_escape@@Base+0xd5>
  42755e:	mov    rax,QWORD PTR [rbp-0x30]
  427562:	mov    BYTE PTR [rax],0x0
  427565:	mov    rdx,QWORD PTR [rbp-0x28]
  427569:	mov    rsi,QWORD PTR [rbp-0x20]
  42756d:	mov    rax,QWORD PTR [rbp-0x18]
  427571:	mov    ecx,0x12
  427576:	mov    rdi,rax
  427579:	call   427257 <flatcc_json_parser_set_error@@Base>
  42757e:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427583:	mov    rax,QWORD PTR [rbp-0x20]
  427587:	movzx  eax,BYTE PTR [rax+0x2]
  42758b:	mov    BYTE PTR [rbp-0x5],al
  42758e:	cmp    BYTE PTR [rbp-0x5],0x2f
  427592:	jle    4275a9 <flatcc_json_parser_string_escape@@Base+0xfb>
  427594:	cmp    BYTE PTR [rbp-0x5],0x39
  427598:	jg     4275a9 <flatcc_json_parser_string_escape@@Base+0xfb>
  42759a:	movsx  eax,BYTE PTR [rbp-0x5]
  42759e:	sub    eax,0x30
  4275a1:	shl    eax,0x4
  4275a4:	or     BYTE PTR [rbp-0x6],al
  4275a7:	jmp    4275ed <flatcc_json_parser_string_escape@@Base+0x13f>
  4275a9:	or     BYTE PTR [rbp-0x5],0x20
  4275ad:	cmp    BYTE PTR [rbp-0x5],0x60
  4275b1:	jle    4275c8 <flatcc_json_parser_string_escape@@Base+0x11a>
  4275b3:	cmp    BYTE PTR [rbp-0x5],0x66
  4275b7:	jg     4275c8 <flatcc_json_parser_string_escape@@Base+0x11a>
  4275b9:	movsx  eax,BYTE PTR [rbp-0x5]
  4275bd:	sub    eax,0x57
  4275c0:	shl    eax,0x4
  4275c3:	or     BYTE PTR [rbp-0x6],al
  4275c6:	jmp    4275ed <flatcc_json_parser_string_escape@@Base+0x13f>
  4275c8:	mov    rax,QWORD PTR [rbp-0x30]
  4275cc:	mov    BYTE PTR [rax],0x0
  4275cf:	mov    rdx,QWORD PTR [rbp-0x28]
  4275d3:	mov    rsi,QWORD PTR [rbp-0x20]
  4275d7:	mov    rax,QWORD PTR [rbp-0x18]
  4275db:	mov    ecx,0x12
  4275e0:	mov    rdi,rax
  4275e3:	call   427257 <flatcc_json_parser_set_error@@Base>
  4275e8:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4275ed:	mov    rax,QWORD PTR [rbp-0x20]
  4275f1:	movzx  eax,BYTE PTR [rax+0x3]
  4275f5:	mov    BYTE PTR [rbp-0x5],al
  4275f8:	cmp    BYTE PTR [rbp-0x5],0x2f
  4275fc:	jle    427610 <flatcc_json_parser_string_escape@@Base+0x162>
  4275fe:	cmp    BYTE PTR [rbp-0x5],0x39
  427602:	jg     427610 <flatcc_json_parser_string_escape@@Base+0x162>
  427604:	movzx  eax,BYTE PTR [rbp-0x5]
  427608:	sub    eax,0x30
  42760b:	or     BYTE PTR [rbp-0x6],al
  42760e:	jmp    427651 <flatcc_json_parser_string_escape@@Base+0x1a3>
  427610:	or     BYTE PTR [rbp-0x5],0x20
  427614:	cmp    BYTE PTR [rbp-0x5],0x60
  427618:	jle    42762c <flatcc_json_parser_string_escape@@Base+0x17e>
  42761a:	cmp    BYTE PTR [rbp-0x5],0x66
  42761e:	jg     42762c <flatcc_json_parser_string_escape@@Base+0x17e>
  427620:	movzx  eax,BYTE PTR [rbp-0x5]
  427624:	sub    eax,0x57
  427627:	or     BYTE PTR [rbp-0x6],al
  42762a:	jmp    427651 <flatcc_json_parser_string_escape@@Base+0x1a3>
  42762c:	mov    rax,QWORD PTR [rbp-0x30]
  427630:	mov    BYTE PTR [rax],0x0
  427633:	mov    rdx,QWORD PTR [rbp-0x28]
  427637:	mov    rsi,QWORD PTR [rbp-0x20]
  42763b:	mov    rax,QWORD PTR [rbp-0x18]
  42763f:	mov    ecx,0x12
  427644:	mov    rdi,rax
  427647:	call   427257 <flatcc_json_parser_set_error@@Base>
  42764c:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427651:	mov    rax,QWORD PTR [rbp-0x30]
  427655:	lea    rdx,[rax+0x1]
  427659:	movzx  eax,BYTE PTR [rbp-0x6]
  42765d:	mov    BYTE PTR [rdx],al
  42765f:	mov    rax,QWORD PTR [rbp-0x20]
  427663:	add    rax,0x4
  427667:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  42766c:	mov    rax,QWORD PTR [rbp-0x28]
  427670:	sub    rax,QWORD PTR [rbp-0x20]
  427674:	cmp    rax,0x5
  427678:	jg     42769f <flatcc_json_parser_string_escape@@Base+0x1f1>
  42767a:	mov    rax,QWORD PTR [rbp-0x30]
  42767e:	mov    BYTE PTR [rax],0x0
  427681:	mov    rdx,QWORD PTR [rbp-0x28]
  427685:	mov    rsi,QWORD PTR [rbp-0x20]
  427689:	mov    rax,QWORD PTR [rbp-0x18]
  42768d:	mov    ecx,0x12
  427692:	mov    rdi,rax
  427695:	call   427257 <flatcc_json_parser_set_error@@Base>
  42769a:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  42769f:	mov    WORD PTR [rbp-0x4],0x0
  4276a5:	mov    rax,QWORD PTR [rbp-0x20]
  4276a9:	movzx  eax,BYTE PTR [rax+0x2]
  4276ad:	mov    BYTE PTR [rbp-0x5],al
  4276b0:	cmp    BYTE PTR [rbp-0x5],0x2f
  4276b4:	jle    4276d5 <flatcc_json_parser_string_escape@@Base+0x227>
  4276b6:	cmp    BYTE PTR [rbp-0x5],0x39
  4276ba:	jg     4276d5 <flatcc_json_parser_string_escape@@Base+0x227>
  4276bc:	movsx  ax,BYTE PTR [rbp-0x5]
  4276c1:	sub    eax,0x30
  4276c4:	mov    WORD PTR [rbp-0x2],ax
  4276c8:	movzx  eax,WORD PTR [rbp-0x2]
  4276cc:	shl    eax,0xc
  4276cf:	mov    WORD PTR [rbp-0x4],ax
  4276d3:	jmp    42772b <flatcc_json_parser_string_escape@@Base+0x27d>
  4276d5:	or     BYTE PTR [rbp-0x5],0x20
  4276d9:	cmp    BYTE PTR [rbp-0x5],0x60
  4276dd:	jle    427706 <flatcc_json_parser_string_escape@@Base+0x258>
  4276df:	cmp    BYTE PTR [rbp-0x5],0x66
  4276e3:	jg     427706 <flatcc_json_parser_string_escape@@Base+0x258>
  4276e5:	movsx  ax,BYTE PTR [rbp-0x5]
  4276ea:	sub    eax,0x57
  4276ed:	mov    WORD PTR [rbp-0x2],ax
  4276f1:	movzx  eax,WORD PTR [rbp-0x2]
  4276f5:	shl    eax,0xc
  4276f8:	mov    edx,eax
  4276fa:	movzx  eax,WORD PTR [rbp-0x4]
  4276fe:	or     eax,edx
  427700:	mov    WORD PTR [rbp-0x4],ax
  427704:	jmp    42772b <flatcc_json_parser_string_escape@@Base+0x27d>
  427706:	mov    rax,QWORD PTR [rbp-0x30]
  42770a:	mov    BYTE PTR [rax],0x0
  42770d:	mov    rdx,QWORD PTR [rbp-0x28]
  427711:	mov    rsi,QWORD PTR [rbp-0x20]
  427715:	mov    rax,QWORD PTR [rbp-0x18]
  427719:	mov    ecx,0x12
  42771e:	mov    rdi,rax
  427721:	call   427257 <flatcc_json_parser_set_error@@Base>
  427726:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  42772b:	mov    rax,QWORD PTR [rbp-0x20]
  42772f:	movzx  eax,BYTE PTR [rax+0x3]
  427733:	mov    BYTE PTR [rbp-0x5],al
  427736:	cmp    BYTE PTR [rbp-0x5],0x2f
  42773a:	jle    427763 <flatcc_json_parser_string_escape@@Base+0x2b5>
  42773c:	cmp    BYTE PTR [rbp-0x5],0x39
  427740:	jg     427763 <flatcc_json_parser_string_escape@@Base+0x2b5>
  427742:	movsx  ax,BYTE PTR [rbp-0x5]
  427747:	sub    eax,0x30
  42774a:	mov    WORD PTR [rbp-0x2],ax
  42774e:	movzx  eax,WORD PTR [rbp-0x2]
  427752:	shl    eax,0x8
  427755:	mov    edx,eax
  427757:	movzx  eax,WORD PTR [rbp-0x4]
  42775b:	or     eax,edx
  42775d:	mov    WORD PTR [rbp-0x4],ax
  427761:	jmp    4277b9 <flatcc_json_parser_string_escape@@Base+0x30b>
  427763:	or     BYTE PTR [rbp-0x5],0x20
  427767:	cmp    BYTE PTR [rbp-0x5],0x60
  42776b:	jle    427794 <flatcc_json_parser_string_escape@@Base+0x2e6>
  42776d:	cmp    BYTE PTR [rbp-0x5],0x66
  427771:	jg     427794 <flatcc_json_parser_string_escape@@Base+0x2e6>
  427773:	movsx  ax,BYTE PTR [rbp-0x5]
  427778:	sub    eax,0x57
  42777b:	mov    WORD PTR [rbp-0x2],ax
  42777f:	movzx  eax,WORD PTR [rbp-0x2]
  427783:	shl    eax,0x8
  427786:	mov    edx,eax
  427788:	movzx  eax,WORD PTR [rbp-0x4]
  42778c:	or     eax,edx
  42778e:	mov    WORD PTR [rbp-0x4],ax
  427792:	jmp    4277b9 <flatcc_json_parser_string_escape@@Base+0x30b>
  427794:	mov    rax,QWORD PTR [rbp-0x30]
  427798:	mov    BYTE PTR [rax],0x0
  42779b:	mov    rdx,QWORD PTR [rbp-0x28]
  42779f:	mov    rsi,QWORD PTR [rbp-0x20]
  4277a3:	mov    rax,QWORD PTR [rbp-0x18]
  4277a7:	mov    ecx,0x12
  4277ac:	mov    rdi,rax
  4277af:	call   427257 <flatcc_json_parser_set_error@@Base>
  4277b4:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4277b9:	mov    rax,QWORD PTR [rbp-0x20]
  4277bd:	movzx  eax,BYTE PTR [rax+0x4]
  4277c1:	mov    BYTE PTR [rbp-0x5],al
  4277c4:	cmp    BYTE PTR [rbp-0x5],0x2f
  4277c8:	jle    4277f1 <flatcc_json_parser_string_escape@@Base+0x343>
  4277ca:	cmp    BYTE PTR [rbp-0x5],0x39
  4277ce:	jg     4277f1 <flatcc_json_parser_string_escape@@Base+0x343>
  4277d0:	movsx  ax,BYTE PTR [rbp-0x5]
  4277d5:	sub    eax,0x30
  4277d8:	mov    WORD PTR [rbp-0x2],ax
  4277dc:	movzx  eax,WORD PTR [rbp-0x2]
  4277e0:	shl    eax,0x4
  4277e3:	mov    edx,eax
  4277e5:	movzx  eax,WORD PTR [rbp-0x4]
  4277e9:	or     eax,edx
  4277eb:	mov    WORD PTR [rbp-0x4],ax
  4277ef:	jmp    427847 <flatcc_json_parser_string_escape@@Base+0x399>
  4277f1:	or     BYTE PTR [rbp-0x5],0x20
  4277f5:	cmp    BYTE PTR [rbp-0x5],0x60
  4277f9:	jle    427822 <flatcc_json_parser_string_escape@@Base+0x374>
  4277fb:	cmp    BYTE PTR [rbp-0x5],0x66
  4277ff:	jg     427822 <flatcc_json_parser_string_escape@@Base+0x374>
  427801:	movsx  ax,BYTE PTR [rbp-0x5]
  427806:	sub    eax,0x57
  427809:	mov    WORD PTR [rbp-0x2],ax
  42780d:	movzx  eax,WORD PTR [rbp-0x2]
  427811:	shl    eax,0x4
  427814:	mov    edx,eax
  427816:	movzx  eax,WORD PTR [rbp-0x4]
  42781a:	or     eax,edx
  42781c:	mov    WORD PTR [rbp-0x4],ax
  427820:	jmp    427847 <flatcc_json_parser_string_escape@@Base+0x399>
  427822:	mov    rax,QWORD PTR [rbp-0x30]
  427826:	mov    BYTE PTR [rax],0x0
  427829:	mov    rdx,QWORD PTR [rbp-0x28]
  42782d:	mov    rsi,QWORD PTR [rbp-0x20]
  427831:	mov    rax,QWORD PTR [rbp-0x18]
  427835:	mov    ecx,0x12
  42783a:	mov    rdi,rax
  42783d:	call   427257 <flatcc_json_parser_set_error@@Base>
  427842:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427847:	mov    rax,QWORD PTR [rbp-0x20]
  42784b:	movzx  eax,BYTE PTR [rax+0x5]
  42784f:	mov    BYTE PTR [rbp-0x5],al
  427852:	cmp    BYTE PTR [rbp-0x5],0x2f
  427856:	jle    427874 <flatcc_json_parser_string_escape@@Base+0x3c6>
  427858:	cmp    BYTE PTR [rbp-0x5],0x39
  42785c:	jg     427874 <flatcc_json_parser_string_escape@@Base+0x3c6>
  42785e:	movsx  ax,BYTE PTR [rbp-0x5]
  427863:	sub    eax,0x30
  427866:	mov    WORD PTR [rbp-0x2],ax
  42786a:	movzx  eax,WORD PTR [rbp-0x2]
  42786e:	or     WORD PTR [rbp-0x4],ax
  427872:	jmp    4278bf <flatcc_json_parser_string_escape@@Base+0x411>
  427874:	or     BYTE PTR [rbp-0x5],0x20
  427878:	cmp    BYTE PTR [rbp-0x5],0x60
  42787c:	jle    42789a <flatcc_json_parser_string_escape@@Base+0x3ec>
  42787e:	cmp    BYTE PTR [rbp-0x5],0x66
  427882:	jg     42789a <flatcc_json_parser_string_escape@@Base+0x3ec>
  427884:	movsx  ax,BYTE PTR [rbp-0x5]
  427889:	sub    eax,0x57
  42788c:	mov    WORD PTR [rbp-0x2],ax
  427890:	movzx  eax,WORD PTR [rbp-0x2]
  427894:	or     WORD PTR [rbp-0x4],ax
  427898:	jmp    4278bf <flatcc_json_parser_string_escape@@Base+0x411>
  42789a:	mov    rax,QWORD PTR [rbp-0x30]
  42789e:	mov    BYTE PTR [rax],0x0
  4278a1:	mov    rdx,QWORD PTR [rbp-0x28]
  4278a5:	mov    rsi,QWORD PTR [rbp-0x20]
  4278a9:	mov    rax,QWORD PTR [rbp-0x18]
  4278ad:	mov    ecx,0x12
  4278b2:	mov    rdi,rax
  4278b5:	call   427257 <flatcc_json_parser_set_error@@Base>
  4278ba:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4278bf:	cmp    WORD PTR [rbp-0x4],0x7f
  4278c4:	ja     4278e0 <flatcc_json_parser_string_escape@@Base+0x432>
  4278c6:	mov    rax,QWORD PTR [rbp-0x30]
  4278ca:	mov    BYTE PTR [rax],0x1
  4278cd:	mov    rax,QWORD PTR [rbp-0x30]
  4278d1:	lea    rdx,[rax+0x1]
  4278d5:	movzx  eax,WORD PTR [rbp-0x4]
  4278d9:	mov    BYTE PTR [rdx],al
  4278db:	jmp    42796a <flatcc_json_parser_string_escape@@Base+0x4bc>
  4278e0:	cmp    WORD PTR [rbp-0x4],0x7ff
  4278e6:	ja     42791e <flatcc_json_parser_string_escape@@Base+0x470>
  4278e8:	mov    rax,QWORD PTR [rbp-0x30]
  4278ec:	mov    BYTE PTR [rax],0x2
  4278ef:	movzx  eax,WORD PTR [rbp-0x4]
  4278f3:	shr    ax,0x6
  4278f7:	or     eax,0xffffffc0
  4278fa:	mov    ecx,eax
  4278fc:	mov    rax,QWORD PTR [rbp-0x30]
  427900:	lea    rdx,[rax+0x1]
  427904:	mov    eax,ecx
  427906:	mov    BYTE PTR [rdx],al
  427908:	movzx  eax,WORD PTR [rbp-0x4]
  42790c:	and    eax,0x3f
  42790f:	mov    rdx,QWORD PTR [rbp-0x30]
  427913:	add    rdx,0x2
  427917:	or     eax,0xffffff80
  42791a:	mov    BYTE PTR [rdx],al
  42791c:	jmp    42796a <flatcc_json_parser_string_escape@@Base+0x4bc>
  42791e:	mov    rax,QWORD PTR [rbp-0x30]
  427922:	mov    BYTE PTR [rax],0x3
  427925:	movzx  eax,WORD PTR [rbp-0x4]
  427929:	shr    ax,0xc
  42792d:	or     eax,0xffffffe0
  427930:	mov    ecx,eax
  427932:	mov    rax,QWORD PTR [rbp-0x30]
  427936:	lea    rdx,[rax+0x1]
  42793a:	mov    eax,ecx
  42793c:	mov    BYTE PTR [rdx],al
  42793e:	movzx  eax,WORD PTR [rbp-0x4]
  427942:	shr    ax,0x6
  427946:	and    eax,0x3f
  427949:	mov    rdx,QWORD PTR [rbp-0x30]
  42794d:	add    rdx,0x2
  427951:	or     eax,0xffffff80
  427954:	mov    BYTE PTR [rdx],al
  427956:	movzx  eax,WORD PTR [rbp-0x4]
  42795a:	and    eax,0x3f
  42795d:	mov    rdx,QWORD PTR [rbp-0x30]
  427961:	add    rdx,0x3
  427965:	or     eax,0xffffff80
  427968:	mov    BYTE PTR [rdx],al
  42796a:	mov    rax,QWORD PTR [rbp-0x20]
  42796e:	add    rax,0x6
  427972:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427977:	mov    rax,QWORD PTR [rbp-0x30]
  42797b:	mov    BYTE PTR [rax],0x1
  42797e:	mov    rax,QWORD PTR [rbp-0x30]
  427982:	inc    rax
  427985:	mov    BYTE PTR [rax],0x9
  427988:	mov    rax,QWORD PTR [rbp-0x20]
  42798c:	add    rax,0x2
  427990:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427995:	mov    rax,QWORD PTR [rbp-0x30]
  427999:	mov    BYTE PTR [rax],0x1
  42799c:	mov    rax,QWORD PTR [rbp-0x30]
  4279a0:	inc    rax
  4279a3:	mov    BYTE PTR [rax],0xa
  4279a6:	mov    rax,QWORD PTR [rbp-0x20]
  4279aa:	add    rax,0x2
  4279ae:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4279b3:	mov    rax,QWORD PTR [rbp-0x30]
  4279b7:	mov    BYTE PTR [rax],0x1
  4279ba:	mov    rax,QWORD PTR [rbp-0x30]
  4279be:	inc    rax
  4279c1:	mov    BYTE PTR [rax],0xd
  4279c4:	mov    rax,QWORD PTR [rbp-0x20]
  4279c8:	add    rax,0x2
  4279cc:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4279d1:	mov    rax,QWORD PTR [rbp-0x30]
  4279d5:	mov    BYTE PTR [rax],0x1
  4279d8:	mov    rax,QWORD PTR [rbp-0x30]
  4279dc:	inc    rax
  4279df:	mov    BYTE PTR [rax],0x8
  4279e2:	mov    rax,QWORD PTR [rbp-0x20]
  4279e6:	add    rax,0x2
  4279ea:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  4279ef:	mov    rax,QWORD PTR [rbp-0x30]
  4279f3:	mov    BYTE PTR [rax],0x1
  4279f6:	mov    rax,QWORD PTR [rbp-0x30]
  4279fa:	inc    rax
  4279fd:	mov    BYTE PTR [rax],0xc
  427a00:	mov    rax,QWORD PTR [rbp-0x20]
  427a04:	add    rax,0x2
  427a08:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427a0a:	mov    rax,QWORD PTR [rbp-0x30]
  427a0e:	mov    BYTE PTR [rax],0x1
  427a11:	mov    rax,QWORD PTR [rbp-0x30]
  427a15:	inc    rax
  427a18:	mov    BYTE PTR [rax],0x22
  427a1b:	mov    rax,QWORD PTR [rbp-0x20]
  427a1f:	add    rax,0x2
  427a23:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427a25:	mov    rax,QWORD PTR [rbp-0x30]
  427a29:	mov    BYTE PTR [rax],0x1
  427a2c:	mov    rax,QWORD PTR [rbp-0x30]
  427a30:	inc    rax
  427a33:	mov    BYTE PTR [rax],0x5c
  427a36:	mov    rax,QWORD PTR [rbp-0x20]
  427a3a:	add    rax,0x2
  427a3e:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427a40:	mov    rax,QWORD PTR [rbp-0x30]
  427a44:	mov    BYTE PTR [rax],0x1
  427a47:	mov    rax,QWORD PTR [rbp-0x30]
  427a4b:	inc    rax
  427a4e:	mov    BYTE PTR [rax],0x2f
  427a51:	mov    rax,QWORD PTR [rbp-0x20]
  427a55:	add    rax,0x2
  427a59:	jmp    427a7b <flatcc_json_parser_string_escape@@Base+0x5cd>
  427a5b:	mov    rax,QWORD PTR [rbp-0x30]
  427a5f:	mov    BYTE PTR [rax],0x0
  427a62:	mov    rdx,QWORD PTR [rbp-0x28]
  427a66:	mov    rsi,QWORD PTR [rbp-0x20]
  427a6a:	mov    rax,QWORD PTR [rbp-0x18]
  427a6e:	mov    ecx,0x12
  427a73:	mov    rdi,rax
  427a76:	call   427257 <flatcc_json_parser_set_error@@Base>
  427a7b:	leave  
  427a7c:	ret    

0000000000427a7d <flatcc_json_parser_skip_constant@@Base>:
  427a7d:	endbr64 
  427a81:	push   rbp
  427a82:	mov    rbp,rsp
  427a85:	sub    rsp,0x30
  427a89:	mov    QWORD PTR [rbp-0x18],rdi
  427a8d:	mov    QWORD PTR [rbp-0x20],rsi
  427a91:	mov    QWORD PTR [rbp-0x28],rdx
  427a95:	jmp    427b0e <flatcc_json_parser_skip_constant@@Base+0x91>
  427a97:	mov    rax,QWORD PTR [rbp-0x20]
  427a9b:	movzx  eax,BYTE PTR [rax]
  427a9e:	mov    BYTE PTR [rbp-0x9],al
  427aa1:	cmp    BYTE PTR [rbp-0x9],0x0
  427aa5:	js     427abf <flatcc_json_parser_skip_constant@@Base+0x42>
  427aa7:	cmp    BYTE PTR [rbp-0x9],0x5f
  427aab:	je     427abf <flatcc_json_parser_skip_constant@@Base+0x42>
  427aad:	cmp    BYTE PTR [rbp-0x9],0x2f
  427ab1:	jle    427ab9 <flatcc_json_parser_skip_constant@@Base+0x3c>
  427ab3:	cmp    BYTE PTR [rbp-0x9],0x39
  427ab7:	jle    427abf <flatcc_json_parser_skip_constant@@Base+0x42>
  427ab9:	cmp    BYTE PTR [rbp-0x9],0x2e
  427abd:	jne    427ac5 <flatcc_json_parser_skip_constant@@Base+0x48>
  427abf:	inc    QWORD PTR [rbp-0x20]
  427ac3:	jmp    427b0e <flatcc_json_parser_skip_constant@@Base+0x91>
  427ac5:	or     BYTE PTR [rbp-0x9],0x20
  427ac9:	cmp    BYTE PTR [rbp-0x9],0x60
  427acd:	jle    427adb <flatcc_json_parser_skip_constant@@Base+0x5e>
  427acf:	cmp    BYTE PTR [rbp-0x9],0x7a
  427ad3:	jg     427adb <flatcc_json_parser_skip_constant@@Base+0x5e>
  427ad5:	inc    QWORD PTR [rbp-0x20]
  427ad9:	jmp    427b0e <flatcc_json_parser_skip_constant@@Base+0x91>
  427adb:	mov    rax,QWORD PTR [rbp-0x20]
  427adf:	mov    QWORD PTR [rbp-0x8],rax
  427ae3:	mov    rdx,QWORD PTR [rbp-0x28]
  427ae7:	mov    rcx,QWORD PTR [rbp-0x8]
  427aeb:	mov    rax,QWORD PTR [rbp-0x18]
  427aef:	mov    rsi,rcx
  427af2:	mov    rdi,rax
  427af5:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  427afa:	mov    QWORD PTR [rbp-0x20],rax
  427afe:	mov    rax,QWORD PTR [rbp-0x20]
  427b02:	cmp    rax,QWORD PTR [rbp-0x8]
  427b06:	jne    427b0e <flatcc_json_parser_skip_constant@@Base+0x91>
  427b08:	mov    rax,QWORD PTR [rbp-0x20]
  427b0c:	jmp    427b20 <flatcc_json_parser_skip_constant@@Base+0xa3>
  427b0e:	mov    rax,QWORD PTR [rbp-0x20]
  427b12:	cmp    rax,QWORD PTR [rbp-0x28]
  427b16:	jne    427a97 <flatcc_json_parser_skip_constant@@Base+0x1a>
  427b1c:	mov    rax,QWORD PTR [rbp-0x20]
  427b20:	leave  
  427b21:	ret    

0000000000427b22 <flatcc_json_parser_match_constant@@Base>:
  427b22:	endbr64 
  427b26:	push   rbp
  427b27:	mov    rbp,rsp
  427b2a:	sub    rsp,0x40
  427b2e:	mov    QWORD PTR [rbp-0x18],rdi
  427b32:	mov    QWORD PTR [rbp-0x20],rsi
  427b36:	mov    QWORD PTR [rbp-0x28],rdx
  427b3a:	mov    DWORD PTR [rbp-0x2c],ecx
  427b3d:	mov    QWORD PTR [rbp-0x38],r8
  427b41:	mov    rax,QWORD PTR [rbp-0x20]
  427b45:	mov    QWORD PTR [rbp-0x10],rax
  427b49:	mov    eax,DWORD PTR [rbp-0x2c]
  427b4c:	movsxd rdx,eax
  427b4f:	mov    rax,QWORD PTR [rbp-0x20]
  427b53:	add    rax,rdx
  427b56:	mov    QWORD PTR [rbp-0x8],rax
  427b5a:	mov    rax,QWORD PTR [rbp-0x28]
  427b5e:	sub    rax,QWORD PTR [rbp-0x20]
  427b62:	mov    rdx,rax
  427b65:	mov    eax,DWORD PTR [rbp-0x2c]
  427b68:	cdqe   
  427b6a:	cmp    rdx,rax
  427b6d:	jg     427b82 <flatcc_json_parser_match_constant@@Base+0x60>
  427b6f:	mov    rax,QWORD PTR [rbp-0x38]
  427b73:	mov    DWORD PTR [rax],0x0
  427b79:	mov    rax,QWORD PTR [rbp-0x20]
  427b7d:	jmp    427c63 <flatcc_json_parser_match_constant@@Base+0x141>
  427b82:	mov    rax,QWORD PTR [rbp-0x8]
  427b86:	mov    QWORD PTR [rbp-0x20],rax
  427b8a:	mov    rax,QWORD PTR [rbp-0x20]
  427b8e:	movzx  eax,BYTE PTR [rax]
  427b91:	cmp    al,0x20
  427b93:	jne    427bec <flatcc_json_parser_match_constant@@Base+0xca>
  427b95:	inc    QWORD PTR [rbp-0x20]
  427b99:	jmp    427b9f <flatcc_json_parser_match_constant@@Base+0x7d>
  427b9b:	inc    QWORD PTR [rbp-0x20]
  427b9f:	mov    rax,QWORD PTR [rbp-0x20]
  427ba3:	cmp    rax,QWORD PTR [rbp-0x28]
  427ba7:	je     427bb4 <flatcc_json_parser_match_constant@@Base+0x92>
  427ba9:	mov    rax,QWORD PTR [rbp-0x20]
  427bad:	movzx  eax,BYTE PTR [rax]
  427bb0:	cmp    al,0x20
  427bb2:	je     427b9b <flatcc_json_parser_match_constant@@Base+0x79>
  427bb4:	mov    rax,QWORD PTR [rbp-0x20]
  427bb8:	cmp    rax,QWORD PTR [rbp-0x28]
  427bbc:	jne    427bd1 <flatcc_json_parser_match_constant@@Base+0xaf>
  427bbe:	mov    rax,QWORD PTR [rbp-0x38]
  427bc2:	mov    DWORD PTR [rax],0x0
  427bc8:	mov    rax,QWORD PTR [rbp-0x20]
  427bcc:	jmp    427c63 <flatcc_json_parser_match_constant@@Base+0x141>
  427bd1:	mov    rax,QWORD PTR [rbp-0x20]
  427bd5:	movzx  eax,BYTE PTR [rax]
  427bd8:	cmp    al,0x22
  427bda:	je     427bec <flatcc_json_parser_match_constant@@Base+0xca>
  427bdc:	mov    rax,QWORD PTR [rbp-0x38]
  427be0:	mov    DWORD PTR [rax],0x1
  427be6:	mov    rax,QWORD PTR [rbp-0x20]
  427bea:	jmp    427c63 <flatcc_json_parser_match_constant@@Base+0x141>
  427bec:	mov    rax,QWORD PTR [rbp-0x20]
  427bf0:	movzx  eax,BYTE PTR [rax]
  427bf3:	movsx  eax,al
  427bf6:	cmp    eax,0x22
  427bf9:	je     427c25 <flatcc_json_parser_match_constant@@Base+0x103>
  427bfb:	cmp    eax,0x5c
  427bfe:	jne    427c55 <flatcc_json_parser_match_constant@@Base+0x133>
  427c00:	mov    rax,QWORD PTR [rbp-0x38]
  427c04:	mov    DWORD PTR [rax],0x0
  427c0a:	mov    rdx,QWORD PTR [rbp-0x28]
  427c0e:	mov    rsi,QWORD PTR [rbp-0x20]
  427c12:	mov    rax,QWORD PTR [rbp-0x18]
  427c16:	mov    ecx,0x12
  427c1b:	mov    rdi,rax
  427c1e:	call   427257 <flatcc_json_parser_set_error@@Base>
  427c23:	jmp    427c63 <flatcc_json_parser_match_constant@@Base+0x141>
  427c25:	mov    rax,QWORD PTR [rbp-0x20]
  427c29:	lea    rcx,[rax+0x1]
  427c2d:	mov    rax,QWORD PTR [rbp-0x18]
  427c31:	mov    edx,0x0
  427c36:	mov    rsi,rcx
  427c39:	mov    rdi,rax
  427c3c:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  427c41:	mov    QWORD PTR [rbp-0x20],rax
  427c45:	mov    rax,QWORD PTR [rbp-0x38]
  427c49:	mov    DWORD PTR [rax],0x0
  427c4f:	mov    rax,QWORD PTR [rbp-0x20]
  427c53:	jmp    427c63 <flatcc_json_parser_match_constant@@Base+0x141>
  427c55:	mov    rax,QWORD PTR [rbp-0x38]
  427c59:	mov    DWORD PTR [rax],0x0
  427c5f:	mov    rax,QWORD PTR [rbp-0x10]
  427c63:	leave  
  427c64:	ret    

0000000000427c65 <flatcc_json_parser_unmatched_symbol@@Base>:
  427c65:	endbr64 
  427c69:	push   rbp
  427c6a:	mov    rbp,rsp
  427c6d:	sub    rsp,0x20
  427c71:	mov    QWORD PTR [rbp-0x8],rdi
  427c75:	mov    QWORD PTR [rbp-0x10],rsi
  427c79:	mov    QWORD PTR [rbp-0x18],rdx
  427c7d:	mov    rax,QWORD PTR [rbp-0x8]
  427c81:	mov    eax,DWORD PTR [rax+0x10]
  427c84:	and    eax,0x1
  427c87:	test   eax,eax
  427c89:	je     427d2e <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  427c8f:	mov    rdx,QWORD PTR [rbp-0x18]
  427c93:	mov    rcx,QWORD PTR [rbp-0x10]
  427c97:	mov    rax,QWORD PTR [rbp-0x8]
  427c9b:	mov    rsi,rcx
  427c9e:	mov    rdi,rax
  427ca1:	call   42368f <flatcc_verify_union_vector_field@@Base+0x3fb>
  427ca6:	mov    QWORD PTR [rbp-0x10],rax
  427caa:	mov    rdx,QWORD PTR [rbp-0x18]
  427cae:	mov    rcx,QWORD PTR [rbp-0x10]
  427cb2:	mov    rax,QWORD PTR [rbp-0x8]
  427cb6:	mov    rsi,rcx
  427cb9:	mov    rdi,rax
  427cbc:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  427cc1:	mov    QWORD PTR [rbp-0x10],rax
  427cc5:	mov    rax,QWORD PTR [rbp-0x10]
  427cc9:	cmp    rax,QWORD PTR [rbp-0x18]
  427ccd:	je     427d13 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  427ccf:	mov    rax,QWORD PTR [rbp-0x10]
  427cd3:	movzx  eax,BYTE PTR [rax]
  427cd6:	cmp    al,0x3a
  427cd8:	jne    427d13 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  427cda:	inc    QWORD PTR [rbp-0x10]
  427cde:	mov    rdx,QWORD PTR [rbp-0x18]
  427ce2:	mov    rcx,QWORD PTR [rbp-0x10]
  427ce6:	mov    rax,QWORD PTR [rbp-0x8]
  427cea:	mov    rsi,rcx
  427ced:	mov    rdi,rax
  427cf0:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  427cf5:	mov    QWORD PTR [rbp-0x10],rax
  427cf9:	nop
  427cfa:	mov    rdx,QWORD PTR [rbp-0x18]
  427cfe:	mov    rcx,QWORD PTR [rbp-0x10]
  427d02:	mov    rax,QWORD PTR [rbp-0x8]
  427d06:	mov    rsi,rcx
  427d09:	mov    rdi,rax
  427d0c:	call   42825c <flatcc_json_parser_generic_json@@Base>
  427d11:	jmp    427d47 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  427d13:	mov    rdx,QWORD PTR [rbp-0x18]
  427d17:	mov    rsi,QWORD PTR [rbp-0x10]
  427d1b:	mov    rax,QWORD PTR [rbp-0x8]
  427d1f:	mov    ecx,0x4
  427d24:	mov    rdi,rax
  427d27:	call   427257 <flatcc_json_parser_set_error@@Base>
  427d2c:	jmp    427d47 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  427d2e:	mov    rdx,QWORD PTR [rbp-0x18]
  427d32:	mov    rsi,QWORD PTR [rbp-0x10]
  427d36:	mov    rax,QWORD PTR [rbp-0x8]
  427d3a:	mov    ecx,0xd
  427d3f:	mov    rdi,rax
  427d42:	call   427257 <flatcc_json_parser_set_error@@Base>
  427d47:	leave  
  427d48:	ret    
  427d49:	endbr64 
  427d4d:	push   rbp
  427d4e:	mov    rbp,rsp
  427d51:	sub    rsp,0x20
  427d55:	mov    QWORD PTR [rbp-0x8],rdi
  427d59:	mov    QWORD PTR [rbp-0x10],rsi
  427d5d:	mov    QWORD PTR [rbp-0x18],rdx
  427d61:	mov    rax,QWORD PTR [rbp-0x10]
  427d65:	cmp    rax,QWORD PTR [rbp-0x18]
  427d69:	jne    427d74 <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  427d6b:	mov    rax,QWORD PTR [rbp-0x10]
  427d6f:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427d74:	mov    rax,QWORD PTR [rbp-0x10]
  427d78:	movzx  eax,BYTE PTR [rax]
  427d7b:	cmp    al,0x2d
  427d7d:	jne    427dab <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  427d7f:	inc    QWORD PTR [rbp-0x10]
  427d83:	mov    rax,QWORD PTR [rbp-0x10]
  427d87:	cmp    rax,QWORD PTR [rbp-0x18]
  427d8b:	jne    427dab <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  427d8d:	mov    rdx,QWORD PTR [rbp-0x18]
  427d91:	mov    rsi,QWORD PTR [rbp-0x10]
  427d95:	mov    rax,QWORD PTR [rbp-0x8]
  427d99:	mov    ecx,0x6
  427d9e:	mov    rdi,rax
  427da1:	call   427257 <flatcc_json_parser_set_error@@Base>
  427da6:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427dab:	mov    rax,QWORD PTR [rbp-0x10]
  427daf:	movzx  eax,BYTE PTR [rax]
  427db2:	cmp    al,0x30
  427db4:	jne    427dbc <flatcc_json_parser_unmatched_symbol@@Base+0x157>
  427db6:	inc    QWORD PTR [rbp-0x10]
  427dba:	jmp    427e1a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  427dbc:	mov    rax,QWORD PTR [rbp-0x10]
  427dc0:	movzx  eax,BYTE PTR [rax]
  427dc3:	cmp    al,0x30
  427dc5:	jle    427dd2 <flatcc_json_parser_unmatched_symbol@@Base+0x16d>
  427dc7:	mov    rax,QWORD PTR [rbp-0x10]
  427dcb:	movzx  eax,BYTE PTR [rax]
  427dce:	cmp    al,0x39
  427dd0:	jle    427df0 <flatcc_json_parser_unmatched_symbol@@Base+0x18b>
  427dd2:	mov    rdx,QWORD PTR [rbp-0x18]
  427dd6:	mov    rsi,QWORD PTR [rbp-0x10]
  427dda:	mov    rax,QWORD PTR [rbp-0x8]
  427dde:	mov    ecx,0x6
  427de3:	mov    rdi,rax
  427de6:	call   427257 <flatcc_json_parser_set_error@@Base>
  427deb:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427df0:	inc    QWORD PTR [rbp-0x10]
  427df4:	jmp    427dfa <flatcc_json_parser_unmatched_symbol@@Base+0x195>
  427df6:	inc    QWORD PTR [rbp-0x10]
  427dfa:	mov    rax,QWORD PTR [rbp-0x10]
  427dfe:	cmp    rax,QWORD PTR [rbp-0x18]
  427e02:	je     427e1a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  427e04:	mov    rax,QWORD PTR [rbp-0x10]
  427e08:	movzx  eax,BYTE PTR [rax]
  427e0b:	cmp    al,0x2f
  427e0d:	jle    427e1a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  427e0f:	mov    rax,QWORD PTR [rbp-0x10]
  427e13:	movzx  eax,BYTE PTR [rax]
  427e16:	cmp    al,0x39
  427e18:	jle    427df6 <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  427e1a:	mov    rax,QWORD PTR [rbp-0x10]
  427e1e:	cmp    rax,QWORD PTR [rbp-0x18]
  427e22:	je     427e91 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  427e24:	mov    rax,QWORD PTR [rbp-0x10]
  427e28:	movzx  eax,BYTE PTR [rax]
  427e2b:	cmp    al,0x2e
  427e2d:	jne    427e91 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  427e2f:	inc    QWORD PTR [rbp-0x10]
  427e33:	mov    rax,QWORD PTR [rbp-0x10]
  427e37:	movzx  eax,BYTE PTR [rax]
  427e3a:	cmp    al,0x2f
  427e3c:	jle    427e49 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
  427e3e:	mov    rax,QWORD PTR [rbp-0x10]
  427e42:	movzx  eax,BYTE PTR [rax]
  427e45:	cmp    al,0x39
  427e47:	jle    427e67 <flatcc_json_parser_unmatched_symbol@@Base+0x202>
  427e49:	mov    rdx,QWORD PTR [rbp-0x18]
  427e4d:	mov    rsi,QWORD PTR [rbp-0x10]
  427e51:	mov    rax,QWORD PTR [rbp-0x8]
  427e55:	mov    ecx,0x6
  427e5a:	mov    rdi,rax
  427e5d:	call   427257 <flatcc_json_parser_set_error@@Base>
  427e62:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427e67:	inc    QWORD PTR [rbp-0x10]
  427e6b:	jmp    427e71 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
  427e6d:	inc    QWORD PTR [rbp-0x10]
  427e71:	mov    rax,QWORD PTR [rbp-0x10]
  427e75:	cmp    rax,QWORD PTR [rbp-0x18]
  427e79:	je     427e91 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  427e7b:	mov    rax,QWORD PTR [rbp-0x10]
  427e7f:	movzx  eax,BYTE PTR [rax]
  427e82:	cmp    al,0x2f
  427e84:	jle    427e91 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  427e86:	mov    rax,QWORD PTR [rbp-0x10]
  427e8a:	movzx  eax,BYTE PTR [rax]
  427e8d:	cmp    al,0x39
  427e8f:	jle    427e6d <flatcc_json_parser_unmatched_symbol@@Base+0x208>
  427e91:	mov    rax,QWORD PTR [rbp-0x10]
  427e95:	cmp    rax,QWORD PTR [rbp-0x18]
  427e99:	je     427f67 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  427e9f:	mov    rax,QWORD PTR [rbp-0x10]
  427ea3:	movzx  eax,BYTE PTR [rax]
  427ea6:	cmp    al,0x65
  427ea8:	je     427eb9 <flatcc_json_parser_unmatched_symbol@@Base+0x254>
  427eaa:	mov    rax,QWORD PTR [rbp-0x10]
  427eae:	movzx  eax,BYTE PTR [rax]
  427eb1:	cmp    al,0x45
  427eb3:	jne    427f67 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  427eb9:	inc    QWORD PTR [rbp-0x10]
  427ebd:	mov    rax,QWORD PTR [rbp-0x10]
  427ec1:	cmp    rax,QWORD PTR [rbp-0x18]
  427ec5:	jne    427ee5 <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  427ec7:	mov    rdx,QWORD PTR [rbp-0x18]
  427ecb:	mov    rsi,QWORD PTR [rbp-0x10]
  427ecf:	mov    rax,QWORD PTR [rbp-0x8]
  427ed3:	mov    ecx,0x6
  427ed8:	mov    rdi,rax
  427edb:	call   427257 <flatcc_json_parser_set_error@@Base>
  427ee0:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427ee5:	mov    rax,QWORD PTR [rbp-0x10]
  427ee9:	movzx  eax,BYTE PTR [rax]
  427eec:	cmp    al,0x2b
  427eee:	je     427efb <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  427ef0:	mov    rax,QWORD PTR [rbp-0x10]
  427ef4:	movzx  eax,BYTE PTR [rax]
  427ef7:	cmp    al,0x2d
  427ef9:	jne    427eff <flatcc_json_parser_unmatched_symbol@@Base+0x29a>
  427efb:	inc    QWORD PTR [rbp-0x10]
  427eff:	mov    rax,QWORD PTR [rbp-0x10]
  427f03:	cmp    rax,QWORD PTR [rbp-0x18]
  427f07:	je     427f1f <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  427f09:	mov    rax,QWORD PTR [rbp-0x10]
  427f0d:	movzx  eax,BYTE PTR [rax]
  427f10:	cmp    al,0x2f
  427f12:	jle    427f1f <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  427f14:	mov    rax,QWORD PTR [rbp-0x10]
  427f18:	movzx  eax,BYTE PTR [rax]
  427f1b:	cmp    al,0x39
  427f1d:	jle    427f3d <flatcc_json_parser_unmatched_symbol@@Base+0x2d8>
  427f1f:	mov    rdx,QWORD PTR [rbp-0x18]
  427f23:	mov    rsi,QWORD PTR [rbp-0x10]
  427f27:	mov    rax,QWORD PTR [rbp-0x8]
  427f2b:	mov    ecx,0x6
  427f30:	mov    rdi,rax
  427f33:	call   427257 <flatcc_json_parser_set_error@@Base>
  427f38:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427f3d:	inc    QWORD PTR [rbp-0x10]
  427f41:	jmp    427f47 <flatcc_json_parser_unmatched_symbol@@Base+0x2e2>
  427f43:	inc    QWORD PTR [rbp-0x10]
  427f47:	mov    rax,QWORD PTR [rbp-0x10]
  427f4b:	cmp    rax,QWORD PTR [rbp-0x18]
  427f4f:	je     427f67 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  427f51:	mov    rax,QWORD PTR [rbp-0x10]
  427f55:	movzx  eax,BYTE PTR [rax]
  427f58:	cmp    al,0x2f
  427f5a:	jle    427f67 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  427f5c:	mov    rax,QWORD PTR [rbp-0x10]
  427f60:	movzx  eax,BYTE PTR [rax]
  427f63:	cmp    al,0x39
  427f65:	jle    427f43 <flatcc_json_parser_unmatched_symbol@@Base+0x2de>
  427f67:	mov    rax,QWORD PTR [rbp-0x10]
  427f6b:	cmp    rax,QWORD PTR [rbp-0x18]
  427f6f:	je     427fb7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  427f71:	mov    rax,QWORD PTR [rbp-0x10]
  427f75:	movzx  eax,BYTE PTR [rax]
  427f78:	movsx  eax,al
  427f7b:	cmp    eax,0x20
  427f7e:	je     427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427f80:	cmp    eax,0x20
  427f83:	jg     427f96 <flatcc_json_parser_unmatched_symbol@@Base+0x331>
  427f85:	cmp    eax,0x9
  427f88:	jl     427fb7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  427f8a:	cmp    eax,0xb
  427f8d:	jle    427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427f8f:	cmp    eax,0xd
  427f92:	je     427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427f94:	jmp    427fb7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  427f96:	cmp    eax,0x3a
  427f99:	je     427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427f9b:	cmp    eax,0x3a
  427f9e:	jg     427fa7 <flatcc_json_parser_unmatched_symbol@@Base+0x342>
  427fa0:	cmp    eax,0x2c
  427fa3:	je     427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427fa5:	jmp    427fb7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  427fa7:	cmp    eax,0x5d
  427faa:	je     427fb1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  427fac:	cmp    eax,0x7d
  427faf:	jne    427fb7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  427fb1:	mov    rax,QWORD PTR [rbp-0x10]
  427fb5:	jmp    427fd0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  427fb7:	mov    rdx,QWORD PTR [rbp-0x18]
  427fbb:	mov    rsi,QWORD PTR [rbp-0x10]
  427fbf:	mov    rax,QWORD PTR [rbp-0x8]
  427fc3:	mov    ecx,0x6
  427fc8:	mov    rdi,rax
  427fcb:	call   427257 <flatcc_json_parser_set_error@@Base>
  427fd0:	leave  
  427fd1:	ret    

0000000000427fd2 <flatcc_json_parser_double@@Base>:
  427fd2:	endbr64 
  427fd6:	push   rbp
  427fd7:	mov    rbp,rsp
  427fda:	sub    rsp,0x30
  427fde:	mov    QWORD PTR [rbp-0x18],rdi
  427fe2:	mov    QWORD PTR [rbp-0x20],rsi
  427fe6:	mov    QWORD PTR [rbp-0x28],rdx
  427fea:	mov    QWORD PTR [rbp-0x30],rcx
  427fee:	mov    rax,QWORD PTR [rbp-0x30]
  427ff2:	vxorpd xmm0,xmm0,xmm0
  427ff6:	vmovsd QWORD PTR [rax],xmm0
  427ffa:	mov    rax,QWORD PTR [rbp-0x20]
  427ffe:	cmp    rax,QWORD PTR [rbp-0x28]
  428002:	jne    42800d <flatcc_json_parser_double@@Base+0x3b>
  428004:	mov    rax,QWORD PTR [rbp-0x20]
  428008:	jmp    428115 <flatcc_json_parser_double@@Base+0x143>
  42800d:	mov    rax,QWORD PTR [rbp-0x20]
  428011:	mov    QWORD PTR [rbp-0x10],rax
  428015:	mov    rax,QWORD PTR [rbp-0x20]
  428019:	movzx  eax,BYTE PTR [rax]
  42801c:	cmp    al,0x2d
  42801e:	jne    428024 <flatcc_json_parser_double@@Base+0x52>
  428020:	inc    QWORD PTR [rbp-0x10]
  428024:	mov    rax,QWORD PTR [rbp-0x28]
  428028:	sub    rax,QWORD PTR [rbp-0x10]
  42802c:	cmp    rax,0x1
  428030:	jle    428074 <flatcc_json_parser_double@@Base+0xa2>
  428032:	mov    rax,QWORD PTR [rbp-0x10]
  428036:	movzx  eax,BYTE PTR [rax]
  428039:	cmp    al,0x2e
  42803b:	je     428056 <flatcc_json_parser_double@@Base+0x84>
  42803d:	mov    rax,QWORD PTR [rbp-0x10]
  428041:	movzx  eax,BYTE PTR [rax]
  428044:	cmp    al,0x30
  428046:	jne    428074 <flatcc_json_parser_double@@Base+0xa2>
  428048:	mov    rax,QWORD PTR [rbp-0x10]
  42804c:	inc    rax
  42804f:	movzx  eax,BYTE PTR [rax]
  428052:	cmp    al,0x30
  428054:	jne    428074 <flatcc_json_parser_double@@Base+0xa2>
  428056:	mov    rdx,QWORD PTR [rbp-0x28]
  42805a:	mov    rsi,QWORD PTR [rbp-0x20]
  42805e:	mov    rax,QWORD PTR [rbp-0x18]
  428062:	mov    ecx,0x6
  428067:	mov    rdi,rax
  42806a:	call   427257 <flatcc_json_parser_set_error@@Base>
  42806f:	jmp    428115 <flatcc_json_parser_double@@Base+0x143>
  428074:	mov    rax,QWORD PTR [rbp-0x28]
  428078:	sub    rax,QWORD PTR [rbp-0x20]
  42807c:	mov    ecx,eax
  42807e:	mov    rdx,QWORD PTR [rbp-0x30]
  428082:	mov    rax,QWORD PTR [rbp-0x20]
  428086:	mov    esi,ecx
  428088:	mov    rdi,rax
  42808b:	call   426716 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  428090:	mov    QWORD PTR [rbp-0x8],rax
  428094:	cmp    QWORD PTR [rbp-0x8],0x0
  428099:	je     4280a5 <flatcc_json_parser_double@@Base+0xd3>
  42809b:	mov    rax,QWORD PTR [rbp-0x8]
  42809f:	cmp    rax,QWORD PTR [rbp-0x20]
  4280a3:	jne    428111 <flatcc_json_parser_double@@Base+0x13f>
  4280a5:	mov    rax,QWORD PTR [rbp-0x30]
  4280a9:	vmovsd xmm1,QWORD PTR [rax]
  4280ad:	vmovq  xmm0,QWORD PTR [rip+0x139bb]        # 43ba70 <flatcc_builder_padding_base@@Base+0x2810>
  4280b5:	vandpd xmm0,xmm0,xmm1
  4280b9:	vucomisd xmm0,QWORD PTR [rip+0x139bf]        # 43ba80 <flatcc_builder_padding_base@@Base+0x2820>
  4280c1:	setbe  al
  4280c4:	xor    eax,0x1
  4280c7:	test   al,al
  4280c9:	je     4280d2 <flatcc_json_parser_double@@Base+0x100>
  4280cb:	mov    eax,0x1
  4280d0:	jmp    4280d7 <flatcc_json_parser_double@@Base+0x105>
  4280d2:	mov    eax,0x0
  4280d7:	test   al,al
  4280d9:	je     4280f6 <flatcc_json_parser_double@@Base+0x124>
  4280db:	mov    rdx,QWORD PTR [rbp-0x28]
  4280df:	mov    rsi,QWORD PTR [rbp-0x20]
  4280e3:	mov    rax,QWORD PTR [rbp-0x18]
  4280e7:	mov    ecx,0x7
  4280ec:	mov    rdi,rax
  4280ef:	call   427257 <flatcc_json_parser_set_error@@Base>
  4280f4:	jmp    428115 <flatcc_json_parser_double@@Base+0x143>
  4280f6:	mov    rdx,QWORD PTR [rbp-0x28]
  4280fa:	mov    rsi,QWORD PTR [rbp-0x20]
  4280fe:	mov    rax,QWORD PTR [rbp-0x18]
  428102:	mov    ecx,0x6
  428107:	mov    rdi,rax
  42810a:	call   427257 <flatcc_json_parser_set_error@@Base>
  42810f:	jmp    428115 <flatcc_json_parser_double@@Base+0x143>
  428111:	mov    rax,QWORD PTR [rbp-0x8]
  428115:	leave  
  428116:	ret    

0000000000428117 <flatcc_json_parser_float@@Base>:
  428117:	endbr64 
  42811b:	push   rbp
  42811c:	mov    rbp,rsp
  42811f:	sub    rsp,0x30
  428123:	mov    QWORD PTR [rbp-0x18],rdi
  428127:	mov    QWORD PTR [rbp-0x20],rsi
  42812b:	mov    QWORD PTR [rbp-0x28],rdx
  42812f:	mov    QWORD PTR [rbp-0x30],rcx
  428133:	mov    rax,QWORD PTR [rbp-0x30]
  428137:	vxorps xmm0,xmm0,xmm0
  42813b:	vmovss DWORD PTR [rax],xmm0
  42813f:	mov    rax,QWORD PTR [rbp-0x20]
  428143:	cmp    rax,QWORD PTR [rbp-0x28]
  428147:	jne    428152 <flatcc_json_parser_float@@Base+0x3b>
  428149:	mov    rax,QWORD PTR [rbp-0x20]
  42814d:	jmp    42825a <flatcc_json_parser_float@@Base+0x143>
  428152:	mov    rax,QWORD PTR [rbp-0x20]
  428156:	mov    QWORD PTR [rbp-0x10],rax
  42815a:	mov    rax,QWORD PTR [rbp-0x20]
  42815e:	movzx  eax,BYTE PTR [rax]
  428161:	cmp    al,0x2d
  428163:	jne    428169 <flatcc_json_parser_float@@Base+0x52>
  428165:	inc    QWORD PTR [rbp-0x10]
  428169:	mov    rax,QWORD PTR [rbp-0x28]
  42816d:	sub    rax,QWORD PTR [rbp-0x10]
  428171:	cmp    rax,0x1
  428175:	jle    4281b9 <flatcc_json_parser_float@@Base+0xa2>
  428177:	mov    rax,QWORD PTR [rbp-0x10]
  42817b:	movzx  eax,BYTE PTR [rax]
  42817e:	cmp    al,0x2e
  428180:	je     42819b <flatcc_json_parser_float@@Base+0x84>
  428182:	mov    rax,QWORD PTR [rbp-0x10]
  428186:	movzx  eax,BYTE PTR [rax]
  428189:	cmp    al,0x30
  42818b:	jne    4281b9 <flatcc_json_parser_float@@Base+0xa2>
  42818d:	mov    rax,QWORD PTR [rbp-0x10]
  428191:	inc    rax
  428194:	movzx  eax,BYTE PTR [rax]
  428197:	cmp    al,0x30
  428199:	jne    4281b9 <flatcc_json_parser_float@@Base+0xa2>
  42819b:	mov    rdx,QWORD PTR [rbp-0x28]
  42819f:	mov    rsi,QWORD PTR [rbp-0x20]
  4281a3:	mov    rax,QWORD PTR [rbp-0x18]
  4281a7:	mov    ecx,0x6
  4281ac:	mov    rdi,rax
  4281af:	call   427257 <flatcc_json_parser_set_error@@Base>
  4281b4:	jmp    42825a <flatcc_json_parser_float@@Base+0x143>
  4281b9:	mov    rax,QWORD PTR [rbp-0x28]
  4281bd:	sub    rax,QWORD PTR [rbp-0x20]
  4281c1:	mov    ecx,eax
  4281c3:	mov    rdx,QWORD PTR [rbp-0x30]
  4281c7:	mov    rax,QWORD PTR [rbp-0x20]
  4281cb:	mov    esi,ecx
  4281cd:	mov    rdi,rax
  4281d0:	call   426740 <grisu3_diy_fp_encode_double@@Base+0xf79>
  4281d5:	mov    QWORD PTR [rbp-0x8],rax
  4281d9:	cmp    QWORD PTR [rbp-0x8],0x0
  4281de:	je     4281ea <flatcc_json_parser_float@@Base+0xd3>
  4281e0:	mov    rax,QWORD PTR [rbp-0x8]
  4281e4:	cmp    rax,QWORD PTR [rbp-0x20]
  4281e8:	jne    428256 <flatcc_json_parser_float@@Base+0x13f>
  4281ea:	mov    rax,QWORD PTR [rbp-0x30]
  4281ee:	vmovss xmm1,DWORD PTR [rax]
  4281f2:	vmovss xmm0,DWORD PTR [rip+0x13856]        # 43ba50 <flatcc_builder_padding_base@@Base+0x27f0>
  4281fa:	vandps xmm0,xmm0,xmm1
  4281fe:	vucomiss xmm0,DWORD PTR [rip+0x1385a]        # 43ba60 <flatcc_builder_padding_base@@Base+0x2800>
  428206:	setbe  al
  428209:	xor    eax,0x1
  42820c:	test   al,al
  42820e:	je     428217 <flatcc_json_parser_float@@Base+0x100>
  428210:	mov    eax,0x1
  428215:	jmp    42821c <flatcc_json_parser_float@@Base+0x105>
  428217:	mov    eax,0x0
  42821c:	test   al,al
  42821e:	je     42823b <flatcc_json_parser_float@@Base+0x124>
  428220:	mov    rdx,QWORD PTR [rbp-0x28]
  428224:	mov    rsi,QWORD PTR [rbp-0x20]
  428228:	mov    rax,QWORD PTR [rbp-0x18]
  42822c:	mov    ecx,0x7
  428231:	mov    rdi,rax
  428234:	call   427257 <flatcc_json_parser_set_error@@Base>
  428239:	jmp    42825a <flatcc_json_parser_float@@Base+0x143>
  42823b:	mov    rdx,QWORD PTR [rbp-0x28]
  42823f:	mov    rsi,QWORD PTR [rbp-0x20]
  428243:	mov    rax,QWORD PTR [rbp-0x18]
  428247:	mov    ecx,0x6
  42824c:	mov    rdi,rax
  42824f:	call   427257 <flatcc_json_parser_set_error@@Base>
  428254:	jmp    42825a <flatcc_json_parser_float@@Base+0x143>
  428256:	mov    rax,QWORD PTR [rbp-0x8]
  42825a:	leave  
  42825b:	ret    

000000000042825c <flatcc_json_parser_generic_json@@Base>:
  42825c:	endbr64 
  428260:	push   rbp
  428261:	mov    rbp,rsp
  428264:	sub    rsp,0x260
  42826b:	mov    QWORD PTR [rbp-0x248],rdi
  428272:	mov    QWORD PTR [rbp-0x250],rsi
  428279:	mov    QWORD PTR [rbp-0x258],rdx
  428280:	mov    rax,QWORD PTR fs:0x28
  428289:	mov    QWORD PTR [rbp-0x8],rax
  42828d:	xor    eax,eax
  42828f:	mov    DWORD PTR [rbp-0x234],0x0
  428299:	lea    rax,[rbp-0x210]
  4282a0:	mov    QWORD PTR [rbp-0x230],rax
  4282a7:	mov    rax,QWORD PTR [rbp-0x230]
  4282ae:	add    rax,0x200
  4282b4:	mov    QWORD PTR [rbp-0x228],rax
  4282bb:	mov    rax,QWORD PTR [rbp-0x250]
  4282c2:	cmp    rax,QWORD PTR [rbp-0x258]
  4282c9:	jne    4282d7 <flatcc_json_parser_generic_json@@Base+0x7b>
  4282cb:	mov    rax,QWORD PTR [rbp-0x250]
  4282d2:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4282d7:	lea    rax,[rbp-0x210]
  4282de:	cmp    QWORD PTR [rbp-0x230],rax
  4282e5:	je     42840c <flatcc_json_parser_generic_json@@Base+0x1b0>
  4282eb:	mov    rax,QWORD PTR [rbp-0x230]
  4282f2:	dec    rax
  4282f5:	movzx  eax,BYTE PTR [rax]
  4282f8:	cmp    al,0x7d
  4282fa:	jne    42840c <flatcc_json_parser_generic_json@@Base+0x1b0>
  428300:	mov    rdx,QWORD PTR [rbp-0x258]
  428307:	mov    rcx,QWORD PTR [rbp-0x250]
  42830e:	mov    rax,QWORD PTR [rbp-0x248]
  428315:	mov    rsi,rcx
  428318:	mov    rdi,rax
  42831b:	call   42363b <flatcc_verify_union_vector_field@@Base+0x3a7>
  428320:	mov    QWORD PTR [rbp-0x250],rax
  428327:	mov    rdx,QWORD PTR [rbp-0x258]
  42832e:	mov    rcx,QWORD PTR [rbp-0x250]
  428335:	mov    rax,QWORD PTR [rbp-0x248]
  42833c:	mov    rsi,rcx
  42833f:	mov    rdi,rax
  428342:	call   42368f <flatcc_verify_union_vector_field@@Base+0x3fb>
  428347:	mov    QWORD PTR [rbp-0x250],rax
  42834e:	mov    rdx,QWORD PTR [rbp-0x258]
  428355:	mov    rcx,QWORD PTR [rbp-0x250]
  42835c:	mov    rax,QWORD PTR [rbp-0x248]
  428363:	mov    rsi,rcx
  428366:	mov    rdi,rax
  428369:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  42836e:	mov    QWORD PTR [rbp-0x250],rax
  428375:	mov    rax,QWORD PTR [rbp-0x250]
  42837c:	cmp    rax,QWORD PTR [rbp-0x258]
  428383:	jne    4283ac <flatcc_json_parser_generic_json@@Base+0x150>
  428385:	mov    rdx,QWORD PTR [rbp-0x258]
  42838c:	mov    rsi,QWORD PTR [rbp-0x250]
  428393:	mov    rax,QWORD PTR [rbp-0x248]
  42839a:	mov    ecx,0xa
  42839f:	mov    rdi,rax
  4283a2:	call   427257 <flatcc_json_parser_set_error@@Base>
  4283a7:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4283ac:	mov    rax,QWORD PTR [rbp-0x250]
  4283b3:	movzx  eax,BYTE PTR [rax]
  4283b6:	cmp    al,0x3a
  4283b8:	je     4283e1 <flatcc_json_parser_generic_json@@Base+0x185>
  4283ba:	mov    rdx,QWORD PTR [rbp-0x258]
  4283c1:	mov    rsi,QWORD PTR [rbp-0x250]
  4283c8:	mov    rax,QWORD PTR [rbp-0x248]
  4283cf:	mov    ecx,0x4
  4283d4:	mov    rdi,rax
  4283d7:	call   427257 <flatcc_json_parser_set_error@@Base>
  4283dc:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4283e1:	mov    rax,QWORD PTR [rbp-0x250]
  4283e8:	lea    rcx,[rax+0x1]
  4283ec:	mov    rdx,QWORD PTR [rbp-0x258]
  4283f3:	mov    rax,QWORD PTR [rbp-0x248]
  4283fa:	mov    rsi,rcx
  4283fd:	mov    rdi,rax
  428400:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  428405:	mov    QWORD PTR [rbp-0x250],rax
  42840c:	mov    rax,QWORD PTR [rbp-0x250]
  428413:	movzx  eax,BYTE PTR [rax]
  428416:	movsx  eax,al
  428419:	sub    eax,0x22
  42841c:	cmp    eax,0x59
  42841f:	ja     42877c <flatcc_json_parser_generic_json@@Base+0x520>
  428425:	mov    eax,eax
  428427:	lea    rdx,[rax*4+0x0]
  42842f:	lea    rax,[rip+0x12e62]        # 43b298 <flatcc_builder_padding_base@@Base+0x2038>
  428436:	mov    eax,DWORD PTR [rdx+rax*1]
  428439:	movsxd rdx,eax
  42843c:	lea    rax,[rip+0x12e55]        # 43b298 <flatcc_builder_padding_base@@Base+0x2038>
  428443:	add    rax,rdx
  428446:	notrack jmp rax
  428449:	mov    rdx,QWORD PTR [rbp-0x258]
  428450:	mov    rcx,QWORD PTR [rbp-0x250]
  428457:	mov    rax,QWORD PTR [rbp-0x248]
  42845e:	mov    rsi,rcx
  428461:	mov    rdi,rax
  428464:	call   42359f <flatcc_verify_union_vector_field@@Base+0x30b>
  428469:	mov    QWORD PTR [rbp-0x250],rax
  428470:	jmp    4284e2 <flatcc_json_parser_generic_json@@Base+0x286>
  428472:	mov    rdx,QWORD PTR [rbp-0x258]
  428479:	mov    rcx,QWORD PTR [rbp-0x250]
  428480:	mov    rax,QWORD PTR [rbp-0x248]
  428487:	mov    rsi,rcx
  42848a:	mov    rdi,rax
  42848d:	call   4272b2 <flatcc_json_parser_string_part@@Base>
  428492:	mov    QWORD PTR [rbp-0x250],rax
  428499:	mov    rax,QWORD PTR [rbp-0x250]
  4284a0:	cmp    rax,QWORD PTR [rbp-0x258]
  4284a7:	je     4284b7 <flatcc_json_parser_generic_json@@Base+0x25b>
  4284a9:	mov    rax,QWORD PTR [rbp-0x250]
  4284b0:	movzx  eax,BYTE PTR [rax]
  4284b3:	cmp    al,0x22
  4284b5:	je     428506 <flatcc_json_parser_generic_json@@Base+0x2aa>
  4284b7:	lea    rcx,[rbp-0x214]
  4284be:	mov    rdx,QWORD PTR [rbp-0x258]
  4284c5:	mov    rsi,QWORD PTR [rbp-0x250]
  4284cc:	mov    rax,QWORD PTR [rbp-0x248]
  4284d3:	mov    rdi,rax
  4284d6:	call   4274ae <flatcc_json_parser_string_escape@@Base>
  4284db:	mov    QWORD PTR [rbp-0x250],rax
  4284e2:	mov    rax,QWORD PTR [rbp-0x250]
  4284e9:	cmp    rax,QWORD PTR [rbp-0x258]
  4284f0:	je     428507 <flatcc_json_parser_generic_json@@Base+0x2ab>
  4284f2:	mov    rax,QWORD PTR [rbp-0x250]
  4284f9:	movzx  eax,BYTE PTR [rax]
  4284fc:	cmp    al,0x22
  4284fe:	jne    428472 <flatcc_json_parser_generic_json@@Base+0x216>
  428504:	jmp    428507 <flatcc_json_parser_generic_json@@Base+0x2ab>
  428506:	nop
  428507:	mov    rdx,QWORD PTR [rbp-0x258]
  42850e:	mov    rcx,QWORD PTR [rbp-0x250]
  428515:	mov    rax,QWORD PTR [rbp-0x248]
  42851c:	mov    rsi,rcx
  42851f:	mov    rdi,rax
  428522:	call   4235ed <flatcc_verify_union_vector_field@@Base+0x359>
  428527:	mov    QWORD PTR [rbp-0x250],rax
  42852e:	jmp    4287b6 <flatcc_json_parser_generic_json@@Base+0x55a>
  428533:	mov    rdx,QWORD PTR [rbp-0x258]
  42853a:	mov    rcx,QWORD PTR [rbp-0x250]
  428541:	mov    rax,QWORD PTR [rbp-0x248]
  428548:	mov    rsi,rcx
  42854b:	mov    rdi,rax
  42854e:	call   427d49 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  428553:	mov    QWORD PTR [rbp-0x250],rax
  42855a:	jmp    4287b6 <flatcc_json_parser_generic_json@@Base+0x55a>
  42855f:	mov    rax,QWORD PTR [rbp-0x250]
  428566:	mov    QWORD PTR [rbp-0x220],rax
  42856d:	lea    rcx,[rbp-0x235]
  428574:	mov    rdx,QWORD PTR [rbp-0x258]
  42857b:	mov    rsi,QWORD PTR [rbp-0x220]
  428582:	mov    rax,QWORD PTR [rbp-0x248]
  428589:	mov    rdi,rax
  42858c:	call   424119 <flatcc_verify_union_vector_field@@Base+0xe85>
  428591:	mov    QWORD PTR [rbp-0x250],rax
  428598:	mov    rax,QWORD PTR [rbp-0x220]
  42859f:	cmp    rax,QWORD PTR [rbp-0x250]
  4285a6:	jne    4287a3 <flatcc_json_parser_generic_json@@Base+0x547>
  4285ac:	mov    rdx,QWORD PTR [rbp-0x258]
  4285b3:	mov    rsi,QWORD PTR [rbp-0x250]
  4285ba:	mov    rax,QWORD PTR [rbp-0x248]
  4285c1:	mov    ecx,0x5
  4285c6:	mov    rdi,rax
  4285c9:	call   427257 <flatcc_json_parser_set_error@@Base>
  4285ce:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4285d3:	mov    rax,QWORD PTR [rbp-0x250]
  4285da:	mov    QWORD PTR [rbp-0x220],rax
  4285e1:	mov    rdx,QWORD PTR [rbp-0x258]
  4285e8:	mov    rax,QWORD PTR [rbp-0x220]
  4285ef:	mov    rsi,rdx
  4285f2:	mov    rdi,rax
  4285f5:	call   42400c <flatcc_verify_union_vector_field@@Base+0xd78>
  4285fa:	mov    QWORD PTR [rbp-0x250],rax
  428601:	mov    rax,QWORD PTR [rbp-0x220]
  428608:	cmp    rax,QWORD PTR [rbp-0x250]
  42860f:	jne    4287a9 <flatcc_json_parser_generic_json@@Base+0x54d>
  428615:	mov    rdx,QWORD PTR [rbp-0x258]
  42861c:	mov    rsi,QWORD PTR [rbp-0x250]
  428623:	mov    rax,QWORD PTR [rbp-0x248]
  42862a:	mov    ecx,0x5
  42862f:	mov    rdi,rax
  428632:	call   427257 <flatcc_json_parser_set_error@@Base>
  428637:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  42863c:	mov    rax,QWORD PTR [rbp-0x230]
  428643:	cmp    rax,QWORD PTR [rbp-0x228]
  42864a:	jne    428673 <flatcc_json_parser_generic_json@@Base+0x417>
  42864c:	mov    rdx,QWORD PTR [rbp-0x258]
  428653:	mov    rsi,QWORD PTR [rbp-0x250]
  42865a:	mov    rax,QWORD PTR [rbp-0x248]
  428661:	mov    ecx,0x2
  428666:	mov    rdi,rax
  428669:	call   427257 <flatcc_json_parser_set_error@@Base>
  42866e:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  428673:	mov    rax,QWORD PTR [rbp-0x230]
  42867a:	lea    rdx,[rax+0x1]
  42867e:	mov    QWORD PTR [rbp-0x230],rdx
  428685:	mov    BYTE PTR [rax],0x5d
  428688:	mov    rax,QWORD PTR [rbp-0x250]
  42868f:	lea    rcx,[rax+0x1]
  428693:	mov    rdx,QWORD PTR [rbp-0x258]
  42869a:	mov    rax,QWORD PTR [rbp-0x248]
  4286a1:	mov    rsi,rcx
  4286a4:	mov    rdi,rax
  4286a7:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  4286ac:	mov    QWORD PTR [rbp-0x250],rax
  4286b3:	mov    rax,QWORD PTR [rbp-0x250]
  4286ba:	cmp    rax,QWORD PTR [rbp-0x258]
  4286c1:	je     4282bb <flatcc_json_parser_generic_json@@Base+0x5f>
  4286c7:	mov    rax,QWORD PTR [rbp-0x250]
  4286ce:	movzx  eax,BYTE PTR [rax]
  4286d1:	cmp    al,0x5d
  4286d3:	je     4287af <flatcc_json_parser_generic_json@@Base+0x553>
  4286d9:	jmp    4282bb <flatcc_json_parser_generic_json@@Base+0x5f>
  4286de:	mov    rax,QWORD PTR [rbp-0x230]
  4286e5:	cmp    rax,QWORD PTR [rbp-0x228]
  4286ec:	jne    428715 <flatcc_json_parser_generic_json@@Base+0x4b9>
  4286ee:	mov    rdx,QWORD PTR [rbp-0x258]
  4286f5:	mov    rsi,QWORD PTR [rbp-0x250]
  4286fc:	mov    rax,QWORD PTR [rbp-0x248]
  428703:	mov    ecx,0x2
  428708:	mov    rdi,rax
  42870b:	call   427257 <flatcc_json_parser_set_error@@Base>
  428710:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  428715:	mov    rax,QWORD PTR [rbp-0x230]
  42871c:	lea    rdx,[rax+0x1]
  428720:	mov    QWORD PTR [rbp-0x230],rdx
  428727:	mov    BYTE PTR [rax],0x7d
  42872a:	mov    rax,QWORD PTR [rbp-0x250]
  428731:	lea    rcx,[rax+0x1]
  428735:	mov    rdx,QWORD PTR [rbp-0x258]
  42873c:	mov    rax,QWORD PTR [rbp-0x248]
  428743:	mov    rsi,rcx
  428746:	mov    rdi,rax
  428749:	call   423531 <flatcc_verify_union_vector_field@@Base+0x29d>
  42874e:	mov    QWORD PTR [rbp-0x250],rax
  428755:	mov    rax,QWORD PTR [rbp-0x250]
  42875c:	cmp    rax,QWORD PTR [rbp-0x258]
  428763:	je     4282bb <flatcc_json_parser_generic_json@@Base+0x5f>
  428769:	mov    rax,QWORD PTR [rbp-0x250]
  428770:	movzx  eax,BYTE PTR [rax]
  428773:	cmp    al,0x7d
  428775:	je     4287b5 <flatcc_json_parser_generic_json@@Base+0x559>
  428777:	jmp    4282bb <flatcc_json_parser_generic_json@@Base+0x5f>
  42877c:	mov    rdx,QWORD PTR [rbp-0x258]
  428783:	mov    rsi,QWORD PTR [rbp-0x250]
  42878a:	mov    rax,QWORD PTR [rbp-0x248]
  428791:	mov    ecx,0x5
  428796:	mov    rdi,rax
  428799:	call   427257 <flatcc_json_parser_set_error@@Base>
  42879e:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4287a3:	nop
  4287a4:	jmp    42883e <flatcc_json_parser_generic_json@@Base+0x5e2>
  4287a9:	nop
  4287aa:	jmp    42883e <flatcc_json_parser_generic_json@@Base+0x5e2>
  4287af:	nop
  4287b0:	jmp    42883e <flatcc_json_parser_generic_json@@Base+0x5e2>
  4287b5:	nop
  4287b6:	jmp    42883e <flatcc_json_parser_generic_json@@Base+0x5e2>
  4287bb:	dec    QWORD PTR [rbp-0x230]
  4287c2:	mov    rax,QWORD PTR [rbp-0x230]
  4287c9:	movzx  eax,BYTE PTR [rax]
  4287cc:	cmp    al,0x5d
  4287ce:	jne    4287fd <flatcc_json_parser_generic_json@@Base+0x5a1>
  4287d0:	lea    rcx,[rbp-0x234]
  4287d7:	mov    rdx,QWORD PTR [rbp-0x258]
  4287de:	mov    rsi,QWORD PTR [rbp-0x250]
  4287e5:	mov    rax,QWORD PTR [rbp-0x248]
  4287ec:	mov    rdi,rax
  4287ef:	call   423967 <flatcc_verify_union_vector_field@@Base+0x6d3>
  4287f4:	mov    QWORD PTR [rbp-0x250],rax
  4287fb:	jmp    428828 <flatcc_json_parser_generic_json@@Base+0x5cc>
  4287fd:	lea    rcx,[rbp-0x234]
  428804:	mov    rdx,QWORD PTR [rbp-0x258]
  42880b:	mov    rsi,QWORD PTR [rbp-0x250]
  428812:	mov    rax,QWORD PTR [rbp-0x248]
  428819:	mov    rdi,rax
  42881c:	call   42376c <flatcc_verify_union_vector_field@@Base+0x4d8>
  428821:	mov    QWORD PTR [rbp-0x250],rax
  428828:	mov    eax,DWORD PTR [rbp-0x234]
  42882e:	test   eax,eax
  428830:	je     42883e <flatcc_json_parser_generic_json@@Base+0x5e2>
  428832:	inc    QWORD PTR [rbp-0x230]
  428839:	jmp    4282bb <flatcc_json_parser_generic_json@@Base+0x5f>
  42883e:	mov    rax,QWORD PTR [rbp-0x250]
  428845:	cmp    rax,QWORD PTR [rbp-0x258]
  42884c:	je     428862 <flatcc_json_parser_generic_json@@Base+0x606>
  42884e:	lea    rax,[rbp-0x210]
  428855:	cmp    QWORD PTR [rbp-0x230],rax
  42885c:	jne    4287bb <flatcc_json_parser_generic_json@@Base+0x55f>
  428862:	mov    rax,QWORD PTR [rbp-0x250]
  428869:	cmp    rax,QWORD PTR [rbp-0x258]
  428870:	jne    4288be <flatcc_json_parser_generic_json@@Base+0x662>
  428872:	lea    rax,[rbp-0x210]
  428879:	cmp    QWORD PTR [rbp-0x230],rax
  428880:	je     4288be <flatcc_json_parser_generic_json@@Base+0x662>
  428882:	mov    rax,QWORD PTR [rbp-0x230]
  428889:	dec    rax
  42888c:	movzx  eax,BYTE PTR [rax]
  42888f:	cmp    al,0x5d
  428891:	jne    42889a <flatcc_json_parser_generic_json@@Base+0x63e>
  428893:	mov    ecx,0x9
  428898:	jmp    42889f <flatcc_json_parser_generic_json@@Base+0x643>
  42889a:	mov    ecx,0xa
  42889f:	mov    rdx,QWORD PTR [rbp-0x258]
  4288a6:	mov    rsi,QWORD PTR [rbp-0x250]
  4288ad:	mov    rax,QWORD PTR [rbp-0x248]
  4288b4:	mov    rdi,rax
  4288b7:	call   427257 <flatcc_json_parser_set_error@@Base>
  4288bc:	jmp    4288c5 <flatcc_json_parser_generic_json@@Base+0x669>
  4288be:	mov    rax,QWORD PTR [rbp-0x250]
  4288c5:	mov    rdi,QWORD PTR [rbp-0x8]
  4288c9:	xor    rdi,QWORD PTR fs:0x28
  4288d2:	je     4288d9 <flatcc_json_parser_generic_json@@Base+0x67d>
  4288d4:	call   4061a0 <__stack_chk_fail@plt>
  4288d9:	leave  
  4288da:	ret    

00000000004288db <flatcc_json_parser_integer@@Base>:
  4288db:	endbr64 
  4288df:	push   rbp
  4288e0:	mov    rbp,rsp
  4288e3:	sub    rsp,0x50
  4288e7:	mov    QWORD PTR [rbp-0x28],rdi
  4288eb:	mov    QWORD PTR [rbp-0x30],rsi
  4288ef:	mov    QWORD PTR [rbp-0x38],rdx
  4288f3:	mov    QWORD PTR [rbp-0x40],rcx
  4288f7:	mov    QWORD PTR [rbp-0x48],r8
  4288fb:	mov    QWORD PTR [rbp-0x18],0x0
  428903:	mov    rax,QWORD PTR [rbp-0x30]
  428907:	cmp    rax,QWORD PTR [rbp-0x38]
  42890b:	jne    428916 <flatcc_json_parser_integer@@Base+0x3b>
  42890d:	mov    rax,QWORD PTR [rbp-0x30]
  428911:	jmp    428a36 <flatcc_json_parser_integer@@Base+0x15b>
  428916:	mov    rax,QWORD PTR [rbp-0x30]
  42891a:	mov    QWORD PTR [rbp-0x10],rax
  42891e:	mov    rax,QWORD PTR [rbp-0x30]
  428922:	movzx  eax,BYTE PTR [rax]
  428925:	cmp    al,0x2d
  428927:	sete   al
  42892a:	movzx  edx,al
  42892d:	mov    rax,QWORD PTR [rbp-0x40]
  428931:	mov    DWORD PTR [rax],edx
  428933:	mov    rax,QWORD PTR [rbp-0x40]
  428937:	mov    eax,DWORD PTR [rax]
  428939:	cdqe   
  42893b:	add    QWORD PTR [rbp-0x30],rax
  42893f:	jmp    4289ad <flatcc_json_parser_integer@@Base+0xd2>
  428941:	mov    rax,QWORD PTR [rbp-0x18]
  428945:	mov    QWORD PTR [rbp-0x8],rax
  428949:	mov    rdx,QWORD PTR [rbp-0x18]
  42894d:	mov    rax,rdx
  428950:	shl    rax,0x2
  428954:	add    rax,rdx
  428957:	add    rax,rax
  42895a:	mov    rdx,rax
  42895d:	mov    rax,QWORD PTR [rbp-0x30]
  428961:	movzx  eax,BYTE PTR [rax]
  428964:	movsx  rax,al
  428968:	add    rax,rdx
  42896b:	sub    rax,0x30
  42896f:	mov    QWORD PTR [rbp-0x18],rax
  428973:	mov    rax,QWORD PTR [rbp-0x8]
  428977:	cmp    rax,QWORD PTR [rbp-0x18]
  42897b:	jbe    4289a9 <flatcc_json_parser_integer@@Base+0xce>
  42897d:	cmp    QWORD PTR [rbp-0x40],0x0
  428982:	je     42898b <flatcc_json_parser_integer@@Base+0xb0>
  428984:	mov    ecx,0x8
  428989:	jmp    428990 <flatcc_json_parser_integer@@Base+0xb5>
  42898b:	mov    ecx,0x7
  428990:	mov    rdx,QWORD PTR [rbp-0x38]
  428994:	mov    rsi,QWORD PTR [rbp-0x30]
  428998:	mov    rax,QWORD PTR [rbp-0x28]
  42899c:	mov    rdi,rax
  42899f:	call   427257 <flatcc_json_parser_set_error@@Base>
  4289a4:	jmp    428a36 <flatcc_json_parser_integer@@Base+0x15b>
  4289a9:	inc    QWORD PTR [rbp-0x30]
  4289ad:	mov    rax,QWORD PTR [rbp-0x30]
  4289b1:	cmp    rax,QWORD PTR [rbp-0x38]
  4289b5:	je     4289d1 <flatcc_json_parser_integer@@Base+0xf6>
  4289b7:	mov    rax,QWORD PTR [rbp-0x30]
  4289bb:	movzx  eax,BYTE PTR [rax]
  4289be:	cmp    al,0x2f
  4289c0:	jle    4289d1 <flatcc_json_parser_integer@@Base+0xf6>
  4289c2:	mov    rax,QWORD PTR [rbp-0x30]
  4289c6:	movzx  eax,BYTE PTR [rax]
  4289c9:	cmp    al,0x39
  4289cb:	jle    428941 <flatcc_json_parser_integer@@Base+0x66>
  4289d1:	mov    rax,QWORD PTR [rbp-0x30]
  4289d5:	cmp    rax,QWORD PTR [rbp-0x10]
  4289d9:	jne    4289e1 <flatcc_json_parser_integer@@Base+0x106>
  4289db:	mov    rax,QWORD PTR [rbp-0x30]
  4289df:	jmp    428a36 <flatcc_json_parser_integer@@Base+0x15b>
  4289e1:	mov    rax,QWORD PTR [rbp-0x30]
  4289e5:	cmp    rax,QWORD PTR [rbp-0x38]
  4289e9:	je     428a27 <flatcc_json_parser_integer@@Base+0x14c>
  4289eb:	mov    rax,QWORD PTR [rbp-0x30]
  4289ef:	movzx  eax,BYTE PTR [rax]
  4289f2:	cmp    al,0x65
  4289f4:	je     428a0c <flatcc_json_parser_integer@@Base+0x131>
  4289f6:	mov    rax,QWORD PTR [rbp-0x30]
  4289fa:	movzx  eax,BYTE PTR [rax]
  4289fd:	cmp    al,0x45
  4289ff:	je     428a0c <flatcc_json_parser_integer@@Base+0x131>
  428a01:	mov    rax,QWORD PTR [rbp-0x30]
  428a05:	movzx  eax,BYTE PTR [rax]
  428a08:	cmp    al,0x2e
  428a0a:	jne    428a27 <flatcc_json_parser_integer@@Base+0x14c>
  428a0c:	mov    rdx,QWORD PTR [rbp-0x38]
  428a10:	mov    rsi,QWORD PTR [rbp-0x30]
  428a14:	mov    rax,QWORD PTR [rbp-0x28]
  428a18:	mov    ecx,0xc
  428a1d:	mov    rdi,rax
  428a20:	call   427257 <flatcc_json_parser_set_error@@Base>
  428a25:	jmp    428a36 <flatcc_json_parser_integer@@Base+0x15b>
  428a27:	mov    rax,QWORD PTR [rbp-0x48]
  428a2b:	mov    rdx,QWORD PTR [rbp-0x18]
  428a2f:	mov    QWORD PTR [rax],rdx
  428a32:	mov    rax,QWORD PTR [rbp-0x30]
  428a36:	leave  
  428a37:	ret    

0000000000428a38 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  428a38:	endbr64 
  428a3c:	push   rbp
  428a3d:	mov    rbp,rsp
  428a40:	sub    rsp,0x70
  428a44:	mov    QWORD PTR [rbp-0x48],rdi
  428a48:	mov    QWORD PTR [rbp-0x50],rsi
  428a4c:	mov    QWORD PTR [rbp-0x58],rdx
  428a50:	mov    QWORD PTR [rbp-0x60],rcx
  428a54:	mov    DWORD PTR [rbp-0x64],r8d
  428a58:	mov    rax,QWORD PTR fs:0x28
  428a61:	mov    QWORD PTR [rbp-0x8],rax
  428a65:	xor    eax,eax
  428a67:	cmp    DWORD PTR [rbp-0x64],0x0
  428a6b:	setne  al
  428a6e:	movzx  eax,al
  428a71:	mov    DWORD PTR [rbp-0x38],eax
  428a74:	mov    rdx,QWORD PTR [rbp-0x58]
  428a78:	mov    rcx,QWORD PTR [rbp-0x50]
  428a7c:	mov    rax,QWORD PTR [rbp-0x48]
  428a80:	mov    rsi,rcx
  428a83:	mov    rdi,rax
  428a86:	call   42359f <flatcc_verify_union_vector_field@@Base+0x30b>
  428a8b:	mov    QWORD PTR [rbp-0x50],rax
  428a8f:	mov    rax,QWORD PTR [rbp-0x50]
  428a93:	mov    QWORD PTR [rbp-0x20],rax
  428a97:	mov    rdx,QWORD PTR [rbp-0x58]
  428a9b:	mov    rcx,QWORD PTR [rbp-0x20]
  428a9f:	mov    rax,QWORD PTR [rbp-0x48]
  428aa3:	mov    rsi,rcx
  428aa6:	mov    rdi,rax
  428aa9:	call   4272b2 <flatcc_json_parser_string_part@@Base>
  428aae:	mov    QWORD PTR [rbp-0x50],rax
  428ab2:	mov    rax,QWORD PTR [rbp-0x50]
  428ab6:	cmp    rax,QWORD PTR [rbp-0x58]
  428aba:	je     428c36 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  428ac0:	mov    rax,QWORD PTR [rbp-0x50]
  428ac4:	movzx  eax,BYTE PTR [rax]
  428ac7:	cmp    al,0x22
  428ac9:	jne    428c36 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  428acf:	mov    rax,QWORD PTR [rbp-0x50]
  428ad3:	sub    rax,QWORD PTR [rbp-0x20]
  428ad7:	mov    rdi,rax
  428ada:	call   426923 <grisu3_diy_fp_encode_double@@Base+0x115c>
  428adf:	mov    QWORD PTR [rbp-0x18],rax
  428ae3:	mov    rax,QWORD PTR [rbp-0x48]
  428ae7:	mov    rax,QWORD PTR [rax]
  428aea:	mov    ecx,0xffffffff
  428aef:	mov    edx,0x1
  428af4:	mov    esi,0x1
  428af9:	mov    rdi,rax
  428afc:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  428b01:	test   eax,eax
  428b03:	jne    428c07 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1cf>
  428b09:	mov    rax,QWORD PTR [rbp-0x48]
  428b0d:	mov    rax,QWORD PTR [rax]
  428b10:	mov    rdx,QWORD PTR [rbp-0x18]
  428b14:	mov    rsi,rdx
  428b17:	mov    rdi,rax
  428b1a:	call   41d895 <flatcc_builder_extend_vector@@Base>
  428b1f:	mov    QWORD PTR [rbp-0x10],rax
  428b23:	cmp    QWORD PTR [rbp-0x10],0x0
  428b28:	je     428c0a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  428b2e:	mov    rax,QWORD PTR [rbp-0x50]
  428b32:	sub    rax,QWORD PTR [rbp-0x20]
  428b36:	mov    QWORD PTR [rbp-0x28],rax
  428b3a:	mov    rax,QWORD PTR [rbp-0x18]
  428b3e:	mov    QWORD PTR [rbp-0x30],rax
  428b42:	mov    edi,DWORD PTR [rbp-0x38]
  428b45:	lea    rcx,[rbp-0x28]
  428b49:	lea    rdx,[rbp-0x30]
  428b4d:	mov    rsi,QWORD PTR [rbp-0x20]
  428b51:	mov    rax,QWORD PTR [rbp-0x10]
  428b55:	mov    r8d,edi
  428b58:	mov    rdi,rax
  428b5b:	call   426c72 <grisu3_diy_fp_encode_double@@Base+0x14ab>
  428b60:	mov    DWORD PTR [rbp-0x34],eax
  428b63:	cmp    DWORD PTR [rbp-0x34],0x0
  428b67:	je     428b7d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  428b69:	mov    rdx,QWORD PTR [rbp-0x28]
  428b6d:	mov    rax,QWORD PTR [rbp-0x20]
  428b71:	add    rax,rdx
  428b74:	mov    QWORD PTR [rbp-0x50],rax
  428b78:	jmp    428c37 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  428b7d:	mov    rax,QWORD PTR [rbp-0x50]
  428b81:	sub    rax,QWORD PTR [rbp-0x20]
  428b85:	mov    rdx,QWORD PTR [rbp-0x28]
  428b89:	cmp    rax,rdx
  428b8c:	je     428ba2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16a>
  428b8e:	mov    rdx,QWORD PTR [rbp-0x28]
  428b92:	mov    rax,QWORD PTR [rbp-0x20]
  428b96:	add    rax,rdx
  428b99:	mov    QWORD PTR [rbp-0x50],rax
  428b9d:	jmp    428c37 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  428ba2:	mov    rax,QWORD PTR [rbp-0x30]
  428ba6:	cmp    QWORD PTR [rbp-0x18],rax
  428baa:	jbe    428bcd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  428bac:	mov    rax,QWORD PTR [rbp-0x30]
  428bb0:	mov    rdx,QWORD PTR [rbp-0x18]
  428bb4:	sub    rdx,rax
  428bb7:	mov    rax,QWORD PTR [rbp-0x48]
  428bbb:	mov    rax,QWORD PTR [rax]
  428bbe:	mov    rsi,rdx
  428bc1:	mov    rdi,rax
  428bc4:	call   41dd6f <flatcc_builder_truncate_vector@@Base>
  428bc9:	test   eax,eax
  428bcb:	jne    428c0d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d5>
  428bcd:	mov    rax,QWORD PTR [rbp-0x48]
  428bd1:	mov    rax,QWORD PTR [rax]
  428bd4:	mov    rdi,rax
  428bd7:	call   41f1da <flatcc_builder_end_vector@@Base>
  428bdc:	mov    edx,eax
  428bde:	mov    rax,QWORD PTR [rbp-0x60]
  428be2:	mov    DWORD PTR [rax],edx
  428be4:	mov    rax,QWORD PTR [rbp-0x60]
  428be8:	mov    eax,DWORD PTR [rax]
  428bea:	test   eax,eax
  428bec:	je     428c10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
  428bee:	mov    rdx,QWORD PTR [rbp-0x58]
  428bf2:	mov    rcx,QWORD PTR [rbp-0x50]
  428bf6:	mov    rax,QWORD PTR [rbp-0x48]
  428bfa:	mov    rsi,rcx
  428bfd:	mov    rdi,rax
  428c00:	call   4235ed <flatcc_verify_union_vector_field@@Base+0x359>
  428c05:	jmp    428c67 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  428c07:	nop
  428c08:	jmp    428c11 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  428c0a:	nop
  428c0b:	jmp    428c11 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  428c0d:	nop
  428c0e:	jmp    428c11 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  428c10:	nop
  428c11:	mov    rax,QWORD PTR [rbp-0x60]
  428c15:	mov    DWORD PTR [rax],0x0
  428c1b:	mov    rdx,QWORD PTR [rbp-0x58]
  428c1f:	mov    rsi,QWORD PTR [rbp-0x50]
  428c23:	mov    rax,QWORD PTR [rbp-0x48]
  428c27:	mov    ecx,0x21
  428c2c:	mov    rdi,rax
  428c2f:	call   427257 <flatcc_json_parser_set_error@@Base>
  428c34:	jmp    428c67 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  428c36:	nop
  428c37:	mov    rax,QWORD PTR [rbp-0x60]
  428c3b:	mov    DWORD PTR [rax],0x0
  428c41:	cmp    DWORD PTR [rbp-0x64],0x0
  428c45:	je     428c4e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x216>
  428c47:	mov    ecx,0x20
  428c4c:	jmp    428c53 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  428c4e:	mov    ecx,0x1f
  428c53:	mov    rdx,QWORD PTR [rbp-0x58]
  428c57:	mov    rsi,QWORD PTR [rbp-0x50]
  428c5b:	mov    rax,QWORD PTR [rbp-0x48]
  428c5f:	mov    rdi,rax
  428c62:	call   427257 <flatcc_json_parser_set_error@@Base>
  428c67:	mov    rdi,QWORD PTR [rbp-0x8]
  428c6b:	xor    rdi,QWORD PTR fs:0x28
  428c74:	je     428c7b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x243>
  428c76:	call   4061a0 <__stack_chk_fail@plt>
  428c7b:	leave  
  428c7c:	ret    

0000000000428c7d <flatcc_json_parser_build_string@@Base>:
  428c7d:	endbr64 
  428c81:	push   rbp
  428c82:	mov    rbp,rsp
  428c85:	sub    rsp,0x40
  428c89:	mov    QWORD PTR [rbp-0x28],rdi
  428c8d:	mov    QWORD PTR [rbp-0x30],rsi
  428c91:	mov    QWORD PTR [rbp-0x38],rdx
  428c95:	mov    QWORD PTR [rbp-0x40],rcx
  428c99:	mov    rax,QWORD PTR fs:0x28
  428ca2:	mov    QWORD PTR [rbp-0x8],rax
  428ca6:	xor    eax,eax
  428ca8:	mov    rdx,QWORD PTR [rbp-0x38]
  428cac:	mov    rcx,QWORD PTR [rbp-0x30]
  428cb0:	mov    rax,QWORD PTR [rbp-0x28]
  428cb4:	mov    rsi,rcx
  428cb7:	mov    rdi,rax
  428cba:	call   42359f <flatcc_verify_union_vector_field@@Base+0x30b>
  428cbf:	mov    QWORD PTR [rbp-0x30],rax
  428cc3:	mov    rax,QWORD PTR [rbp-0x30]
  428cc7:	mov    QWORD PTR [rbp-0x18],rax
  428ccb:	mov    rdx,QWORD PTR [rbp-0x38]
  428ccf:	mov    rcx,QWORD PTR [rbp-0x18]
  428cd3:	mov    rax,QWORD PTR [rbp-0x28]
  428cd7:	mov    rsi,rcx
  428cda:	mov    rdi,rax
  428cdd:	call   4272b2 <flatcc_json_parser_string_part@@Base>
  428ce2:	mov    QWORD PTR [rbp-0x30],rax
  428ce6:	mov    rax,QWORD PTR [rbp-0x30]
  428cea:	cmp    rax,QWORD PTR [rbp-0x38]
  428cee:	je     428d29 <flatcc_json_parser_build_string@@Base+0xac>
  428cf0:	mov    rax,QWORD PTR [rbp-0x30]
  428cf4:	movzx  eax,BYTE PTR [rax]
  428cf7:	cmp    al,0x22
  428cf9:	jne    428d29 <flatcc_json_parser_build_string@@Base+0xac>
  428cfb:	mov    rax,QWORD PTR [rbp-0x30]
  428cff:	sub    rax,QWORD PTR [rbp-0x18]
  428d03:	mov    rdx,rax
  428d06:	mov    rax,QWORD PTR [rbp-0x28]
  428d0a:	mov    rax,QWORD PTR [rax]
  428d0d:	mov    rcx,QWORD PTR [rbp-0x18]
  428d11:	mov    rsi,rcx
  428d14:	mov    rdi,rax
  428d17:	call   42007c <flatcc_builder_create_string@@Base>
  428d1c:	mov    edx,eax
  428d1e:	mov    rax,QWORD PTR [rbp-0x40]
  428d22:	mov    DWORD PTR [rax],edx
  428d24:	jmp    428e38 <flatcc_json_parser_build_string@@Base+0x1bb>
  428d29:	mov    rax,QWORD PTR [rbp-0x28]
  428d2d:	mov    rax,QWORD PTR [rax]
  428d30:	mov    rdi,rax
  428d33:	call   41e178 <flatcc_builder_start_string@@Base>
  428d38:	test   eax,eax
  428d3a:	jne    428e51 <flatcc_json_parser_build_string@@Base+0x1d4>
  428d40:	mov    rax,QWORD PTR [rbp-0x30]
  428d44:	sub    rax,QWORD PTR [rbp-0x18]
  428d48:	mov    rdx,rax
  428d4b:	mov    rax,QWORD PTR [rbp-0x28]
  428d4f:	mov    rax,QWORD PTR [rax]
  428d52:	mov    rcx,QWORD PTR [rbp-0x18]
  428d56:	mov    rsi,rcx
  428d59:	mov    rdi,rax
  428d5c:	call   41dc6c <flatcc_builder_append_string@@Base>
  428d61:	test   rax,rax
  428d64:	je     428e51 <flatcc_json_parser_build_string@@Base+0x1d4>
  428d6a:	jmp    428e08 <flatcc_json_parser_build_string@@Base+0x18b>
  428d6f:	lea    rcx,[rbp-0xc]
  428d73:	mov    rdx,QWORD PTR [rbp-0x38]
  428d77:	mov    rsi,QWORD PTR [rbp-0x30]
  428d7b:	mov    rax,QWORD PTR [rbp-0x28]
  428d7f:	mov    rdi,rax
  428d82:	call   4274ae <flatcc_json_parser_string_escape@@Base>
  428d87:	mov    QWORD PTR [rbp-0x30],rax
  428d8b:	movzx  eax,BYTE PTR [rbp-0xc]
  428d8f:	movsx  rdx,al
  428d93:	lea    rax,[rbp-0xc]
  428d97:	inc    rax
  428d9a:	mov    rcx,QWORD PTR [rbp-0x28]
  428d9e:	mov    rcx,QWORD PTR [rcx]
  428da1:	mov    rsi,rax
  428da4:	mov    rdi,rcx
  428da7:	call   41dc6c <flatcc_builder_append_string@@Base>
  428dac:	test   rax,rax
  428daf:	je     428e54 <flatcc_json_parser_build_string@@Base+0x1d7>
  428db5:	mov    rax,QWORD PTR [rbp-0x30]
  428db9:	mov    QWORD PTR [rbp-0x18],rax
  428dbd:	mov    rdx,QWORD PTR [rbp-0x38]
  428dc1:	mov    rcx,QWORD PTR [rbp-0x18]
  428dc5:	mov    rax,QWORD PTR [rbp-0x28]
  428dc9:	mov    rsi,rcx
  428dcc:	mov    rdi,rax
  428dcf:	call   4272b2 <flatcc_json_parser_string_part@@Base>
  428dd4:	mov    QWORD PTR [rbp-0x30],rax
  428dd8:	mov    rax,QWORD PTR [rbp-0x30]
  428ddc:	cmp    rax,QWORD PTR [rbp-0x38]
  428de0:	je     428e08 <flatcc_json_parser_build_string@@Base+0x18b>
  428de2:	mov    rax,QWORD PTR [rbp-0x30]
  428de6:	sub    rax,QWORD PTR [rbp-0x18]
  428dea:	mov    rdx,rax
  428ded:	mov    rax,QWORD PTR [rbp-0x28]
  428df1:	mov    rax,QWORD PTR [rax]
  428df4:	mov    rcx,QWORD PTR [rbp-0x18]
  428df8:	mov    rsi,rcx
  428dfb:	mov    rdi,rax
  428dfe:	call   41dc6c <flatcc_builder_append_string@@Base>
  428e03:	test   rax,rax
  428e06:	je     428e57 <flatcc_json_parser_build_string@@Base+0x1da>
  428e08:	mov    rax,QWORD PTR [rbp-0x30]
  428e0c:	cmp    rax,QWORD PTR [rbp-0x38]
  428e10:	je     428e21 <flatcc_json_parser_build_string@@Base+0x1a4>
  428e12:	mov    rax,QWORD PTR [rbp-0x30]
  428e16:	movzx  eax,BYTE PTR [rax]
  428e19:	cmp    al,0x22
  428e1b:	jne    428d6f <flatcc_json_parser_build_string@@Base+0xf2>
  428e21:	mov    rax,QWORD PTR [rbp-0x28]
  428e25:	mov    rax,QWORD PTR [rax]
  428e28:	mov    rdi,rax
  428e2b:	call   4202fb <flatcc_builder_end_string@@Base>
  428e30:	mov    edx,eax
  428e32:	mov    rax,QWORD PTR [rbp-0x40]
  428e36:	mov    DWORD PTR [rax],edx
  428e38:	mov    rdx,QWORD PTR [rbp-0x38]
  428e3c:	mov    rcx,QWORD PTR [rbp-0x30]
  428e40:	mov    rax,QWORD PTR [rbp-0x28]
  428e44:	mov    rsi,rcx
  428e47:	mov    rdi,rax
  428e4a:	call   4235ed <flatcc_verify_union_vector_field@@Base+0x359>
  428e4f:	jmp    428e66 <flatcc_json_parser_build_string@@Base+0x1e9>
  428e51:	nop
  428e52:	jmp    428e58 <flatcc_json_parser_build_string@@Base+0x1db>
  428e54:	nop
  428e55:	jmp    428e58 <flatcc_json_parser_build_string@@Base+0x1db>
  428e57:	nop
  428e58:	mov    rax,QWORD PTR [rbp-0x40]
  428e5c:	mov    DWORD PTR [rax],0x0
  428e62:	mov    rax,QWORD PTR [rbp-0x30]
  428e66:	mov    rsi,QWORD PTR [rbp-0x8]
  428e6a:	xor    rsi,QWORD PTR fs:0x28
  428e73:	je     428e7a <flatcc_json_parser_build_string@@Base+0x1fd>
  428e75:	call   4061a0 <__stack_chk_fail@plt>
  428e7a:	leave  
  428e7b:	ret    

0000000000428e7c <flatcc_json_parser_prepare_unions@@Base>:
  428e7c:	endbr64 
  428e80:	push   rbp
  428e81:	mov    rbp,rsp
  428e84:	sub    rsp,0x40
  428e88:	mov    QWORD PTR [rbp-0x18],rdi
  428e8c:	mov    QWORD PTR [rbp-0x20],rsi
  428e90:	mov    QWORD PTR [rbp-0x28],rdx
  428e94:	mov    QWORD PTR [rbp-0x30],rcx
  428e98:	mov    QWORD PTR [rbp-0x38],r8
  428e9c:	mov    rdx,QWORD PTR [rbp-0x30]
  428ea0:	mov    rax,rdx
  428ea3:	shl    rax,0x2
  428ea7:	add    rax,rdx
  428eaa:	shl    rax,0x3
  428eae:	lea    rdx,[rax+0x10]
  428eb2:	mov    rax,QWORD PTR [rbp-0x18]
  428eb6:	mov    rax,QWORD PTR [rax]
  428eb9:	mov    rsi,rdx
  428ebc:	mov    rdi,rax
  428ebf:	call   41c392 <flatcc_builder_enter_user_frame@@Base>
  428ec4:	mov    rdx,rax
  428ec7:	mov    rax,QWORD PTR [rbp-0x38]
  428ecb:	mov    QWORD PTR [rax],rdx
  428ece:	mov    rax,QWORD PTR [rbp-0x38]
  428ed2:	mov    rax,QWORD PTR [rax]
  428ed5:	test   rax,rax
  428ed8:	jne    428ef5 <flatcc_json_parser_prepare_unions@@Base+0x79>
  428eda:	mov    rdx,QWORD PTR [rbp-0x28]
  428ede:	mov    rsi,QWORD PTR [rbp-0x20]
  428ee2:	mov    rax,QWORD PTR [rbp-0x18]
  428ee6:	mov    ecx,0x21
  428eeb:	mov    rdi,rax
  428eee:	call   427257 <flatcc_json_parser_set_error@@Base>
  428ef3:	jmp    428f21 <flatcc_json_parser_prepare_unions@@Base+0xa5>
  428ef5:	mov    rax,QWORD PTR [rbp-0x38]
  428ef9:	mov    rdx,QWORD PTR [rax]
  428efc:	mov    rax,QWORD PTR [rbp-0x18]
  428f00:	mov    rax,QWORD PTR [rax]
  428f03:	mov    rsi,rdx
  428f06:	mov    rdi,rax
  428f09:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  428f0e:	mov    QWORD PTR [rbp-0x8],rax
  428f12:	mov    rax,QWORD PTR [rbp-0x8]
  428f16:	mov    rdx,QWORD PTR [rbp-0x30]
  428f1a:	mov    QWORD PTR [rax],rdx
  428f1d:	mov    rax,QWORD PTR [rbp-0x20]
  428f21:	leave  
  428f22:	ret    

0000000000428f23 <flatcc_json_parser_finalize_unions@@Base>:
  428f23:	endbr64 
  428f27:	push   rbp
  428f28:	mov    rbp,rsp
  428f2b:	sub    rsp,0x30
  428f2f:	mov    QWORD PTR [rbp-0x18],rdi
  428f33:	mov    QWORD PTR [rbp-0x20],rsi
  428f37:	mov    QWORD PTR [rbp-0x28],rdx
  428f3b:	mov    QWORD PTR [rbp-0x30],rcx
  428f3f:	mov    rax,QWORD PTR [rbp-0x18]
  428f43:	mov    rax,QWORD PTR [rax]
  428f46:	mov    rdx,QWORD PTR [rbp-0x30]
  428f4a:	mov    rsi,rdx
  428f4d:	mov    rdi,rax
  428f50:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  428f55:	mov    QWORD PTR [rbp-0x8],rax
  428f59:	mov    rax,QWORD PTR [rbp-0x8]
  428f5d:	mov    rax,QWORD PTR [rax+0x8]
  428f61:	test   rax,rax
  428f64:	je     428f83 <flatcc_json_parser_finalize_unions@@Base+0x60>
  428f66:	mov    rdx,QWORD PTR [rbp-0x28]
  428f6a:	mov    rsi,QWORD PTR [rbp-0x20]
  428f6e:	mov    rax,QWORD PTR [rbp-0x18]
  428f72:	mov    ecx,0x1b
  428f77:	mov    rdi,rax
  428f7a:	call   427257 <flatcc_json_parser_set_error@@Base>
  428f7f:	mov    QWORD PTR [rbp-0x20],rax
  428f83:	mov    rax,QWORD PTR [rbp-0x18]
  428f87:	mov    rax,QWORD PTR [rax]
  428f8a:	mov    rdx,QWORD PTR [rbp-0x30]
  428f8e:	mov    rsi,rdx
  428f91:	mov    rdi,rax
  428f94:	call   41c4fd <flatcc_builder_exit_user_frame_at@@Base>
  428f99:	mov    rax,QWORD PTR [rbp-0x20]
  428f9d:	leave  
  428f9e:	ret    

0000000000428f9f <flatcc_json_parser_union@@Base>:
  428f9f:	endbr64 
  428fa3:	push   rbp
  428fa4:	mov    rbp,rsp
  428fa7:	sub    rsp,0x60
  428fab:	mov    QWORD PTR [rbp-0x28],rdi
  428faf:	mov    QWORD PTR [rbp-0x30],rsi
  428fb3:	mov    QWORD PTR [rbp-0x38],rdx
  428fb7:	mov    QWORD PTR [rbp-0x40],rcx
  428fbb:	mov    eax,r8d
  428fbe:	mov    QWORD PTR [rbp-0x50],r9
  428fc2:	mov    WORD PTR [rbp-0x44],ax
  428fc6:	mov    rax,QWORD PTR [rbp+0x10]
  428fca:	mov    QWORD PTR [rbp-0x58],rax
  428fce:	mov    rax,QWORD PTR fs:0x28
  428fd7:	mov    QWORD PTR [rbp-0x8],rax
  428fdb:	xor    eax,eax
  428fdd:	mov    rax,QWORD PTR [rbp-0x28]
  428fe1:	mov    rax,QWORD PTR [rax]
  428fe4:	mov    rdx,QWORD PTR [rbp-0x50]
  428fe8:	mov    rsi,rdx
  428feb:	mov    rdi,rax
  428fee:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  428ff3:	mov    QWORD PTR [rbp-0x20],rax
  428ff7:	mov    rdx,QWORD PTR [rbp-0x40]
  428ffb:	mov    rax,rdx
  428ffe:	shl    rax,0x2
  429002:	add    rax,rdx
  429005:	shl    rax,0x3
  429009:	mov    rdx,QWORD PTR [rbp-0x20]
  42900d:	add    rax,rdx
  429010:	add    rax,0x10
  429014:	mov    QWORD PTR [rbp-0x18],rax
  429018:	mov    rax,QWORD PTR [rbp-0x18]
  42901c:	mov    rax,QWORD PTR [rax]
  42901f:	test   rax,rax
  429022:	je     429042 <flatcc_json_parser_union@@Base+0xa3>
  429024:	mov    rdx,QWORD PTR [rbp-0x38]
  429028:	mov    rsi,QWORD PTR [rbp-0x30]
  42902c:	mov    rax,QWORD PTR [rbp-0x28]
  429030:	mov    ecx,0x1c
  429035:	mov    rdi,rax
  429038:	call   427257 <flatcc_json_parser_set_error@@Base>
  42903d:	jmp    429166 <flatcc_json_parser_union@@Base+0x1c7>
  429042:	mov    rax,QWORD PTR [rbp-0x18]
  429046:	movzx  eax,BYTE PTR [rax+0x14]
  42904a:	test   al,al
  42904c:	jne    4290ae <flatcc_json_parser_union@@Base+0x10f>
  42904e:	mov    rax,QWORD PTR [rbp-0x20]
  429052:	mov    rax,QWORD PTR [rax+0x8]
  429056:	lea    rdx,[rax+0x1]
  42905a:	mov    rax,QWORD PTR [rbp-0x20]
  42905e:	mov    QWORD PTR [rax+0x8],rdx
  429062:	mov    rax,QWORD PTR [rbp-0x28]
  429066:	mov    edx,DWORD PTR [rax+0x14]
  429069:	mov    rax,QWORD PTR [rbp-0x18]
  42906d:	mov    DWORD PTR [rax+0x10],edx
  429070:	mov    rax,QWORD PTR [rbp-0x28]
  429074:	mov    rdx,QWORD PTR [rax+0x8]
  429078:	mov    rax,QWORD PTR [rbp-0x18]
  42907c:	mov    QWORD PTR [rax+0x8],rdx
  429080:	mov    rax,QWORD PTR [rbp-0x18]
  429084:	mov    rdx,QWORD PTR [rbp-0x30]
  429088:	mov    QWORD PTR [rax],rdx
  42908b:	mov    rax,QWORD PTR [rbp-0x18]
  42908f:	mov    rcx,QWORD PTR [rax]
  429092:	mov    rdx,QWORD PTR [rbp-0x38]
  429096:	mov    rax,QWORD PTR [rbp-0x28]
  42909a:	mov    rsi,rcx
  42909d:	mov    rdi,rax
  4290a0:	call   42825c <flatcc_json_parser_generic_json@@Base>
  4290a5:	mov    QWORD PTR [rbp-0x30],rax
  4290a9:	jmp    429162 <flatcc_json_parser_union@@Base+0x1c3>
  4290ae:	mov    rax,QWORD PTR [rbp-0x18]
  4290b2:	movzx  eax,BYTE PTR [rax+0x15]
  4290b6:	mov    BYTE PTR [rbp-0x10],al
  4290b9:	mov    rax,QWORD PTR [rbp-0x18]
  4290bd:	movzx  eax,BYTE PTR [rax+0x15]
  4290c1:	test   al,al
  4290c3:	jne    4290e3 <flatcc_json_parser_union@@Base+0x144>
  4290c5:	mov    rdx,QWORD PTR [rbp-0x38]
  4290c9:	mov    rsi,QWORD PTR [rbp-0x30]
  4290cd:	mov    rax,QWORD PTR [rbp-0x28]
  4290d1:	mov    ecx,0x19
  4290d6:	mov    rdi,rax
  4290d9:	call   427257 <flatcc_json_parser_set_error@@Base>
  4290de:	jmp    429166 <flatcc_json_parser_union@@Base+0x1c7>
  4290e3:	mov    rax,QWORD PTR [rbp-0x20]
  4290e7:	mov    rax,QWORD PTR [rax+0x8]
  4290eb:	lea    rdx,[rax-0x1]
  4290ef:	mov    rax,QWORD PTR [rbp-0x20]
  4290f3:	mov    QWORD PTR [rax+0x8],rdx
  4290f7:	mov    rax,QWORD PTR [rbp-0x18]
  4290fb:	movzx  eax,BYTE PTR [rax+0x15]
  4290ff:	movzx  ecx,al
  429102:	lea    rax,[rbp-0x10]
  429106:	lea    r8,[rax+0x4]
  42910a:	mov    rdx,QWORD PTR [rbp-0x38]
  42910e:	mov    rsi,QWORD PTR [rbp-0x30]
  429112:	mov    rdi,QWORD PTR [rbp-0x28]
  429116:	mov    rax,QWORD PTR [rbp-0x58]
  42911a:	call   rax
  42911c:	mov    QWORD PTR [rbp-0x30],rax
  429120:	mov    rax,QWORD PTR [rbp-0x30]
  429124:	cmp    rax,QWORD PTR [rbp-0x38]
  429128:	je     429162 <flatcc_json_parser_union@@Base+0x1c3>
  42912a:	movzx  ecx,WORD PTR [rbp-0x44]
  42912e:	mov    rax,QWORD PTR [rbp-0x28]
  429132:	mov    rax,QWORD PTR [rax]
  429135:	mov    rdx,QWORD PTR [rbp-0x10]
  429139:	mov    esi,ecx
  42913b:	mov    rdi,rax
  42913e:	call   41f7cc <flatcc_builder_table_add_union@@Base>
  429143:	test   eax,eax
  429145:	je     429162 <flatcc_json_parser_union@@Base+0x1c3>
  429147:	mov    rdx,QWORD PTR [rbp-0x38]
  42914b:	mov    rsi,QWORD PTR [rbp-0x30]
  42914f:	mov    rax,QWORD PTR [rbp-0x28]
  429153:	mov    ecx,0x1c
  429158:	mov    rdi,rax
  42915b:	call   427257 <flatcc_json_parser_set_error@@Base>
  429160:	jmp    429166 <flatcc_json_parser_union@@Base+0x1c7>
  429162:	mov    rax,QWORD PTR [rbp-0x30]
  429166:	mov    rdi,QWORD PTR [rbp-0x8]
  42916a:	xor    rdi,QWORD PTR fs:0x28
  429173:	je     42917a <flatcc_json_parser_union@@Base+0x1db>
  429175:	call   4061a0 <__stack_chk_fail@plt>
  42917a:	leave  
  42917b:	ret    

000000000042917c <flatcc_json_parser_union_type@@Base>:
  42917c:	endbr64 
  429180:	push   rbp
  429181:	mov    rbp,rsp
  429184:	add    rsp,0xffffffffffffff80
  429188:	mov    QWORD PTR [rbp-0x48],rdi
  42918c:	mov    QWORD PTR [rbp-0x50],rsi
  429190:	mov    QWORD PTR [rbp-0x58],rdx
  429194:	mov    QWORD PTR [rbp-0x60],rcx
  429198:	mov    eax,r8d
  42919b:	mov    QWORD PTR [rbp-0x70],r9
  42919f:	mov    WORD PTR [rbp-0x64],ax
  4291a3:	mov    rax,QWORD PTR [rbp+0x10]
  4291a7:	mov    QWORD PTR [rbp-0x78],rax
  4291ab:	mov    rax,QWORD PTR [rbp+0x18]
  4291af:	mov    QWORD PTR [rbp-0x80],rax
  4291b3:	mov    rax,QWORD PTR fs:0x28
  4291bc:	mov    QWORD PTR [rbp-0x8],rax
  4291c0:	xor    eax,eax
  4291c2:	mov    rax,QWORD PTR [rbp-0x48]
  4291c6:	mov    rax,QWORD PTR [rax]
  4291c9:	mov    rdx,QWORD PTR [rbp-0x70]
  4291cd:	mov    rsi,rdx
  4291d0:	mov    rdi,rax
  4291d3:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  4291d8:	mov    QWORD PTR [rbp-0x30],rax
  4291dc:	mov    rax,QWORD PTR [rbp-0x30]
  4291e0:	lea    rcx,[rax+0x10]
  4291e4:	mov    rdx,QWORD PTR [rbp-0x60]
  4291e8:	mov    rax,rdx
  4291eb:	shl    rax,0x2
  4291ef:	add    rax,rdx
  4291f2:	shl    rax,0x3
  4291f6:	add    rax,rcx
  4291f9:	mov    QWORD PTR [rbp-0x28],rax
  4291fd:	mov    rax,QWORD PTR [rbp-0x28]
  429201:	movzx  eax,BYTE PTR [rax+0x14]
  429205:	test   al,al
  429207:	je     429227 <flatcc_json_parser_union_type@@Base+0xab>
  429209:	mov    rdx,QWORD PTR [rbp-0x58]
  42920d:	mov    rsi,QWORD PTR [rbp-0x50]
  429211:	mov    rax,QWORD PTR [rbp-0x48]
  429215:	mov    ecx,0x1c
  42921a:	mov    rdi,rax
  42921d:	call   427257 <flatcc_json_parser_set_error@@Base>
  429222:	jmp    4293c5 <flatcc_json_parser_union_type@@Base+0x249>
  429227:	mov    rax,QWORD PTR [rbp-0x28]
  42922b:	mov    BYTE PTR [rax+0x14],0x1
  42922f:	mov    rax,QWORD PTR [rbp-0x28]
  429233:	lea    rcx,[rax+0x15]
  429237:	mov    rax,QWORD PTR [rbp-0x50]
  42923b:	mov    QWORD PTR [rbp-0x20],rax
  42923f:	mov    rdx,QWORD PTR [rbp-0x58]
  429243:	mov    rsi,QWORD PTR [rbp-0x20]
  429247:	mov    rax,QWORD PTR [rbp-0x48]
  42924b:	mov    rdi,rax
  42924e:	call   424056 <flatcc_verify_union_vector_field@@Base+0xdc2>
  429253:	mov    QWORD PTR [rbp-0x50],rax
  429257:	mov    rax,QWORD PTR [rbp-0x20]
  42925b:	cmp    rax,QWORD PTR [rbp-0x50]
  42925f:	jne    429288 <flatcc_json_parser_union_type@@Base+0x10c>
  429261:	mov    rax,QWORD PTR [rbp-0x28]
  429265:	lea    rdi,[rax+0x15]
  429269:	mov    rcx,QWORD PTR [rbp-0x78]
  42926d:	mov    rdx,QWORD PTR [rbp-0x58]
  429271:	mov    rsi,QWORD PTR [rbp-0x50]
  429275:	mov    rax,QWORD PTR [rbp-0x48]
  429279:	mov    r8,rdi
  42927c:	mov    rdi,rax
  42927f:	call   424623 <flatcc_verify_union_vector_field@@Base+0x138f>
  429284:	mov    QWORD PTR [rbp-0x50],rax
  429288:	mov    rax,QWORD PTR [rbp-0x28]
  42928c:	mov    rax,QWORD PTR [rax]
  42928f:	test   rax,rax
  429292:	jne    4292c0 <flatcc_json_parser_union_type@@Base+0x144>
  429294:	mov    rax,QWORD PTR [rbp-0x30]
  429298:	mov    rdx,QWORD PTR [rax+0x8]
  42929c:	mov    rax,QWORD PTR [rbp-0x28]
  4292a0:	movzx  eax,BYTE PTR [rax+0x15]
  4292a4:	test   al,al
  4292a6:	setne  al
  4292a9:	movzx  eax,al
  4292ac:	add    rdx,rax
  4292af:	mov    rax,QWORD PTR [rbp-0x30]
  4292b3:	mov    QWORD PTR [rax+0x8],rdx
  4292b7:	mov    rax,QWORD PTR [rbp-0x50]
  4292bb:	jmp    4293c5 <flatcc_json_parser_union_type@@Base+0x249>
  4292c0:	mov    rax,QWORD PTR [rbp-0x30]
  4292c4:	mov    rax,QWORD PTR [rax+0x8]
  4292c8:	test   rax,rax
  4292cb:	jne    4292ec <flatcc_json_parser_union_type@@Base+0x170>
  4292cd:	lea    rcx,[rip+0x1263c]        # 43b910 <flatcc_builder_padding_base@@Base+0x26b0>
  4292d4:	mov    edx,0x3c5
  4292d9:	lea    rsi,[rip+0x12120]        # 43b400 <flatcc_builder_padding_base@@Base+0x21a0>
  4292e0:	lea    rdi,[rip+0x1217d]        # 43b464 <flatcc_builder_padding_base@@Base+0x2204>
  4292e7:	call   4061b0 <__assert_fail@plt>
  4292ec:	mov    rax,QWORD PTR [rbp-0x30]
  4292f0:	mov    rax,QWORD PTR [rax+0x8]
  4292f4:	lea    rdx,[rax-0x1]
  4292f8:	mov    rax,QWORD PTR [rbp-0x30]
  4292fc:	mov    QWORD PTR [rax+0x8],rdx
  429300:	mov    rax,QWORD PTR [rbp-0x48]
  429304:	mov    eax,DWORD PTR [rax+0x14]
  429307:	mov    DWORD PTR [rbp-0x34],eax
  42930a:	mov    rax,QWORD PTR [rbp-0x48]
  42930e:	mov    rax,QWORD PTR [rax+0x8]
  429312:	mov    QWORD PTR [rbp-0x18],rax
  429316:	mov    rax,QWORD PTR [rbp-0x28]
  42931a:	mov    edx,DWORD PTR [rax+0x10]
  42931d:	mov    rax,QWORD PTR [rbp-0x48]
  429321:	mov    DWORD PTR [rax+0x14],edx
  429324:	mov    rax,QWORD PTR [rbp-0x28]
  429328:	mov    rdx,QWORD PTR [rax+0x8]
  42932c:	mov    rax,QWORD PTR [rbp-0x48]
  429330:	mov    QWORD PTR [rax+0x8],rdx
  429334:	mov    rax,QWORD PTR [rbp-0x28]
  429338:	movzx  eax,BYTE PTR [rax+0x15]
  42933c:	mov    BYTE PTR [rbp-0x10],al
  42933f:	mov    rax,QWORD PTR [rbp-0x28]
  429343:	movzx  eax,BYTE PTR [rax+0x15]
  429347:	movzx  ecx,al
  42934a:	mov    rax,QWORD PTR [rbp-0x28]
  42934e:	mov    rsi,QWORD PTR [rax]
  429351:	lea    rax,[rbp-0x10]
  429355:	lea    r8,[rax+0x4]
  429359:	mov    rdx,QWORD PTR [rbp-0x58]
  42935d:	mov    rdi,QWORD PTR [rbp-0x48]
  429361:	mov    rax,QWORD PTR [rbp-0x80]
  429365:	call   rax
  429367:	cmp    QWORD PTR [rbp-0x58],rax
  42936b:	jne    429373 <flatcc_json_parser_union_type@@Base+0x1f7>
  42936d:	mov    rax,QWORD PTR [rbp-0x58]
  429371:	jmp    4293c5 <flatcc_json_parser_union_type@@Base+0x249>
  429373:	movzx  ecx,WORD PTR [rbp-0x64]
  429377:	mov    rax,QWORD PTR [rbp-0x48]
  42937b:	mov    rax,QWORD PTR [rax]
  42937e:	mov    rdx,QWORD PTR [rbp-0x10]
  429382:	mov    esi,ecx
  429384:	mov    rdi,rax
  429387:	call   41f7cc <flatcc_builder_table_add_union@@Base>
  42938c:	test   eax,eax
  42938e:	je     4293ab <flatcc_json_parser_union_type@@Base+0x22f>
  429390:	mov    rdx,QWORD PTR [rbp-0x58]
  429394:	mov    rsi,QWORD PTR [rbp-0x50]
  429398:	mov    rax,QWORD PTR [rbp-0x48]
  42939c:	mov    ecx,0x1c
  4293a1:	mov    rdi,rax
  4293a4:	call   427257 <flatcc_json_parser_set_error@@Base>
  4293a9:	jmp    4293c5 <flatcc_json_parser_union_type@@Base+0x249>
  4293ab:	mov    rax,QWORD PTR [rbp-0x48]
  4293af:	mov    edx,DWORD PTR [rbp-0x34]
  4293b2:	mov    DWORD PTR [rax+0x14],edx
  4293b5:	mov    rax,QWORD PTR [rbp-0x48]
  4293b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4293bd:	mov    QWORD PTR [rax+0x8],rdx
  4293c1:	mov    rax,QWORD PTR [rbp-0x50]
  4293c5:	mov    rdi,QWORD PTR [rbp-0x8]
  4293c9:	xor    rdi,QWORD PTR fs:0x28
  4293d2:	je     4293d9 <flatcc_json_parser_union_type@@Base+0x25d>
  4293d4:	call   4061a0 <__stack_chk_fail@plt>
  4293d9:	leave  
  4293da:	ret    
  4293db:	endbr64 
  4293df:	push   rbp
  4293e0:	mov    rbp,rsp
  4293e3:	sub    rsp,0x60
  4293e7:	mov    QWORD PTR [rbp-0x38],rdi
  4293eb:	mov    QWORD PTR [rbp-0x40],rsi
  4293ef:	mov    QWORD PTR [rbp-0x48],rdx
  4293f3:	mov    QWORD PTR [rbp-0x50],rcx
  4293f7:	mov    DWORD PTR [rbp-0x54],r8d
  4293fb:	mov    eax,r9d
  4293fe:	mov    WORD PTR [rbp-0x58],ax
  429402:	mov    rax,QWORD PTR [rbp+0x10]
  429406:	mov    QWORD PTR [rbp-0x60],rax
  42940a:	mov    rax,QWORD PTR fs:0x28
  429413:	mov    QWORD PTR [rbp-0x8],rax
  429417:	xor    eax,eax
  429419:	mov    DWORD PTR [rbp-0x28],0x0
  429420:	mov    rax,QWORD PTR [rbp-0x38]
  429424:	mov    rax,QWORD PTR [rax]
  429427:	mov    rdi,rax
  42942a:	call   41e087 <flatcc_builder_start_offset_vector@@Base>
  42942f:	test   eax,eax
  429431:	jne    4295c6 <flatcc_json_parser_union_type@@Base+0x44a>
  429437:	lea    rcx,[rbp-0x24]
  42943b:	mov    rdx,QWORD PTR [rbp-0x48]
  42943f:	mov    rsi,QWORD PTR [rbp-0x40]
  429443:	mov    rax,QWORD PTR [rbp-0x38]
  429447:	mov    rdi,rax
  42944a:	call   4238aa <flatcc_verify_union_vector_field@@Base+0x616>
  42944f:	mov    QWORD PTR [rbp-0x40],rax
  429453:	mov    QWORD PTR [rbp-0x20],0x0
  42945b:	jmp    42952b <flatcc_json_parser_union_type@@Base+0x3af>
  429460:	mov    eax,DWORD PTR [rbp-0x54]
  429463:	cmp    QWORD PTR [rbp-0x20],rax
  429467:	jne    429487 <flatcc_json_parser_union_type@@Base+0x30b>
  429469:	mov    rdx,QWORD PTR [rbp-0x48]
  42946d:	mov    rsi,QWORD PTR [rbp-0x40]
  429471:	mov    rax,QWORD PTR [rbp-0x38]
  429475:	mov    ecx,0x1e
  42947a:	mov    rdi,rax
  42947d:	call   427257 <flatcc_json_parser_set_error@@Base>
  429482:	jmp    4295e9 <flatcc_json_parser_union_type@@Base+0x46d>
  429487:	mov    rax,QWORD PTR [rbp-0x38]
  42948b:	mov    rax,QWORD PTR [rax]
  42948e:	mov    rdx,QWORD PTR [rbp-0x50]
  429492:	mov    rsi,rdx
  429495:	mov    rdi,rax
  429498:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  42949d:	mov    QWORD PTR [rbp-0x18],rax
  4294a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4294a5:	mov    rax,QWORD PTR [rbp-0x20]
  4294a9:	add    rax,rdx
  4294ac:	movzx  eax,BYTE PTR [rax]
  4294af:	movzx  ecx,al
  4294b2:	lea    r8,[rbp-0x28]
  4294b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4294ba:	mov    rsi,QWORD PTR [rbp-0x40]
  4294be:	mov    rdi,QWORD PTR [rbp-0x38]
  4294c2:	mov    rax,QWORD PTR [rbp-0x60]
  4294c6:	call   rax
  4294c8:	mov    QWORD PTR [rbp-0x40],rax
  4294cc:	mov    rax,QWORD PTR [rbp-0x40]
  4294d0:	cmp    rax,QWORD PTR [rbp-0x48]
  4294d4:	jne    4294df <flatcc_json_parser_union_type@@Base+0x363>
  4294d6:	mov    rax,QWORD PTR [rbp-0x40]
  4294da:	jmp    4295e9 <flatcc_json_parser_union_type@@Base+0x46d>
  4294df:	mov    rax,QWORD PTR [rbp-0x38]
  4294e3:	mov    rax,QWORD PTR [rax]
  4294e6:	mov    esi,0x1
  4294eb:	mov    rdi,rax
  4294ee:	call   41da66 <flatcc_builder_extend_offset_vector@@Base>
  4294f3:	mov    QWORD PTR [rbp-0x10],rax
  4294f7:	cmp    QWORD PTR [rbp-0x10],0x0
  4294fc:	je     4295c9 <flatcc_json_parser_union_type@@Base+0x44d>
  429502:	mov    edx,DWORD PTR [rbp-0x28]
  429505:	mov    rax,QWORD PTR [rbp-0x10]
  429509:	mov    DWORD PTR [rax],edx
  42950b:	lea    rcx,[rbp-0x24]
  42950f:	mov    rdx,QWORD PTR [rbp-0x48]
  429513:	mov    rsi,QWORD PTR [rbp-0x40]
  429517:	mov    rax,QWORD PTR [rbp-0x38]
  42951b:	mov    rdi,rax
  42951e:	call   423967 <flatcc_verify_union_vector_field@@Base+0x6d3>
  429523:	mov    QWORD PTR [rbp-0x40],rax
  429527:	inc    QWORD PTR [rbp-0x20]
  42952b:	mov    eax,DWORD PTR [rbp-0x24]
  42952e:	test   eax,eax
  429530:	jne    429460 <flatcc_json_parser_union_type@@Base+0x2e4>
  429536:	mov    eax,DWORD PTR [rbp-0x54]
  429539:	cmp    QWORD PTR [rbp-0x20],rax
  42953d:	je     42955d <flatcc_json_parser_union_type@@Base+0x3e1>
  42953f:	mov    rdx,QWORD PTR [rbp-0x48]
  429543:	mov    rsi,QWORD PTR [rbp-0x40]
  429547:	mov    rax,QWORD PTR [rbp-0x38]
  42954b:	mov    ecx,0x1e
  429550:	mov    rdi,rax
  429553:	call   427257 <flatcc_json_parser_set_error@@Base>
  429558:	jmp    4295e9 <flatcc_json_parser_union_type@@Base+0x46d>
  42955d:	mov    rax,QWORD PTR [rbp-0x38]
  429561:	mov    rax,QWORD PTR [rax]
  429564:	mov    rdx,QWORD PTR [rbp-0x50]
  429568:	mov    rsi,rdx
  42956b:	mov    rdi,rax
  42956e:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  429573:	mov    QWORD PTR [rbp-0x18],rax
  429577:	mov    rax,QWORD PTR [rbp-0x38]
  42957b:	mov    rax,QWORD PTR [rax]
  42957e:	mov    rdx,QWORD PTR [rbp-0x18]
  429582:	mov    rsi,rdx
  429585:	mov    rdi,rax
  429588:	call   41f70a <flatcc_builder_end_offset_vector_for_unions@@Base>
  42958d:	mov    DWORD PTR [rbp-0x28],eax
  429590:	mov    eax,DWORD PTR [rbp-0x28]
  429593:	test   eax,eax
  429595:	je     4295cc <flatcc_json_parser_union_type@@Base+0x450>
  429597:	movzx  edx,WORD PTR [rbp-0x58]
  42959b:	mov    rax,QWORD PTR [rbp-0x38]
  42959f:	mov    rax,QWORD PTR [rax]
  4295a2:	mov    esi,edx
  4295a4:	mov    rdi,rax
  4295a7:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  4295ac:	mov    QWORD PTR [rbp-0x10],rax
  4295b0:	cmp    QWORD PTR [rbp-0x10],0x0
  4295b5:	je     4295cf <flatcc_json_parser_union_type@@Base+0x453>
  4295b7:	mov    edx,DWORD PTR [rbp-0x28]
  4295ba:	mov    rax,QWORD PTR [rbp-0x10]
  4295be:	mov    DWORD PTR [rax],edx
  4295c0:	mov    rax,QWORD PTR [rbp-0x40]
  4295c4:	jmp    4295e9 <flatcc_json_parser_union_type@@Base+0x46d>
  4295c6:	nop
  4295c7:	jmp    4295d0 <flatcc_json_parser_union_type@@Base+0x454>
  4295c9:	nop
  4295ca:	jmp    4295d0 <flatcc_json_parser_union_type@@Base+0x454>
  4295cc:	nop
  4295cd:	jmp    4295d0 <flatcc_json_parser_union_type@@Base+0x454>
  4295cf:	nop
  4295d0:	mov    rdx,QWORD PTR [rbp-0x48]
  4295d4:	mov    rsi,QWORD PTR [rbp-0x40]
  4295d8:	mov    rax,QWORD PTR [rbp-0x38]
  4295dc:	mov    ecx,0x21
  4295e1:	mov    rdi,rax
  4295e4:	call   427257 <flatcc_json_parser_set_error@@Base>
  4295e9:	mov    rcx,QWORD PTR [rbp-0x8]
  4295ed:	xor    rcx,QWORD PTR fs:0x28
  4295f6:	je     4295fd <flatcc_json_parser_union_type@@Base+0x481>
  4295f8:	call   4061a0 <__stack_chk_fail@plt>
  4295fd:	leave  
  4295fe:	ret    

00000000004295ff <flatcc_json_parser_union_vector@@Base>:
  4295ff:	endbr64 
  429603:	push   rbp
  429604:	mov    rbp,rsp
  429607:	sub    rsp,0x40
  42960b:	mov    QWORD PTR [rbp-0x18],rdi
  42960f:	mov    QWORD PTR [rbp-0x20],rsi
  429613:	mov    QWORD PTR [rbp-0x28],rdx
  429617:	mov    QWORD PTR [rbp-0x30],rcx
  42961b:	mov    eax,r8d
  42961e:	mov    QWORD PTR [rbp-0x40],r9
  429622:	mov    WORD PTR [rbp-0x34],ax
  429626:	mov    rax,QWORD PTR [rbp-0x18]
  42962a:	mov    rax,QWORD PTR [rax]
  42962d:	mov    rdx,QWORD PTR [rbp-0x40]
  429631:	mov    rsi,rdx
  429634:	mov    rdi,rax
  429637:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  42963c:	mov    QWORD PTR [rbp-0x10],rax
  429640:	mov    rax,QWORD PTR [rbp-0x10]
  429644:	lea    rcx,[rax+0x10]
  429648:	mov    rdx,QWORD PTR [rbp-0x30]
  42964c:	mov    rax,rdx
  42964f:	shl    rax,0x2
  429653:	add    rax,rdx
  429656:	shl    rax,0x3
  42965a:	add    rax,rcx
  42965d:	mov    QWORD PTR [rbp-0x8],rax
  429661:	mov    rax,QWORD PTR [rbp-0x8]
  429665:	mov    rax,QWORD PTR [rax]
  429668:	test   rax,rax
  42966b:	je     42968b <flatcc_json_parser_union_vector@@Base+0x8c>
  42966d:	mov    rdx,QWORD PTR [rbp-0x28]
  429671:	mov    rsi,QWORD PTR [rbp-0x20]
  429675:	mov    rax,QWORD PTR [rbp-0x18]
  429679:	mov    ecx,0x1c
  42967e:	mov    rdi,rax
  429681:	call   427257 <flatcc_json_parser_set_error@@Base>
  429686:	jmp    429749 <flatcc_json_parser_union_vector@@Base+0x14a>
  42968b:	mov    rax,QWORD PTR [rbp-0x8]
  42968f:	movzx  eax,BYTE PTR [rax+0x14]
  429693:	test   al,al
  429695:	jne    4296f4 <flatcc_json_parser_union_vector@@Base+0xf5>
  429697:	mov    rax,QWORD PTR [rbp-0x10]
  42969b:	mov    rax,QWORD PTR [rax+0x8]
  42969f:	lea    rdx,[rax+0x1]
  4296a3:	mov    rax,QWORD PTR [rbp-0x10]
  4296a7:	mov    QWORD PTR [rax+0x8],rdx
  4296ab:	mov    rax,QWORD PTR [rbp-0x18]
  4296af:	mov    edx,DWORD PTR [rax+0x14]
  4296b2:	mov    rax,QWORD PTR [rbp-0x8]
  4296b6:	mov    DWORD PTR [rax+0x10],edx
  4296b9:	mov    rax,QWORD PTR [rbp-0x18]
  4296bd:	mov    rdx,QWORD PTR [rax+0x8]
  4296c1:	mov    rax,QWORD PTR [rbp-0x8]
  4296c5:	mov    QWORD PTR [rax+0x8],rdx
  4296c9:	mov    rax,QWORD PTR [rbp-0x8]
  4296cd:	mov    rdx,QWORD PTR [rbp-0x20]
  4296d1:	mov    QWORD PTR [rax],rdx
  4296d4:	mov    rax,QWORD PTR [rbp-0x8]
  4296d8:	mov    rcx,QWORD PTR [rax]
  4296db:	mov    rdx,QWORD PTR [rbp-0x28]
  4296df:	mov    rax,QWORD PTR [rbp-0x18]
  4296e3:	mov    rsi,rcx
  4296e6:	mov    rdi,rax
  4296e9:	call   42825c <flatcc_json_parser_generic_json@@Base>
  4296ee:	mov    QWORD PTR [rbp-0x20],rax
  4296f2:	jmp    429745 <flatcc_json_parser_union_vector@@Base+0x146>
  4296f4:	mov    rax,QWORD PTR [rbp-0x10]
  4296f8:	mov    rax,QWORD PTR [rax+0x8]
  4296fc:	lea    rdx,[rax-0x1]
  429700:	mov    rax,QWORD PTR [rbp-0x10]
  429704:	mov    QWORD PTR [rax+0x8],rdx
  429708:	movzx  r8d,WORD PTR [rbp-0x34]
  42970d:	mov    rax,QWORD PTR [rbp-0x8]
  429711:	mov    edi,DWORD PTR [rax+0x18]
  429714:	mov    rax,QWORD PTR [rbp-0x8]
  429718:	mov    rcx,QWORD PTR [rax+0x20]
  42971c:	mov    rdx,QWORD PTR [rbp-0x28]
  429720:	mov    rsi,QWORD PTR [rbp-0x20]
  429724:	mov    rax,QWORD PTR [rbp-0x18]
  429728:	sub    rsp,0x8
  42972c:	push   QWORD PTR [rbp+0x10]
  42972f:	mov    r9d,r8d
  429732:	mov    r8d,edi
  429735:	mov    rdi,rax
  429738:	call   4293db <flatcc_json_parser_union_type@@Base+0x25f>
  42973d:	add    rsp,0x10
  429741:	mov    QWORD PTR [rbp-0x20],rax
  429745:	mov    rax,QWORD PTR [rbp-0x20]
  429749:	leave  
  42974a:	ret    

000000000042974b <flatcc_json_parser_union_type_vector@@Base>:
  42974b:	endbr64 
  42974f:	push   rbp
  429750:	mov    rbp,rsp
  429753:	sub    rsp,0xc0
  42975a:	mov    QWORD PTR [rbp-0x78],rdi
  42975e:	mov    QWORD PTR [rbp-0x80],rsi
  429762:	mov    QWORD PTR [rbp-0x88],rdx
  429769:	mov    QWORD PTR [rbp-0x90],rcx
  429770:	mov    eax,r8d
  429773:	mov    QWORD PTR [rbp-0xa0],r9
  42977a:	mov    WORD PTR [rbp-0x94],ax
  429781:	mov    rax,QWORD PTR [rbp+0x10]
  429785:	mov    QWORD PTR [rbp-0xa8],rax
  42978c:	mov    rax,QWORD PTR [rbp+0x18]
  429790:	mov    QWORD PTR [rbp-0xb0],rax
  429797:	mov    rax,QWORD PTR [rbp+0x20]
  42979b:	mov    QWORD PTR [rbp-0xb8],rax
  4297a2:	mov    rax,QWORD PTR fs:0x28
  4297ab:	mov    QWORD PTR [rbp-0x8],rax
  4297af:	xor    eax,eax
  4297b1:	mov    rax,QWORD PTR [rbp-0x78]
  4297b5:	mov    rax,QWORD PTR [rax]
  4297b8:	mov    rdx,QWORD PTR [rbp-0xa0]
  4297bf:	mov    rsi,rdx
  4297c2:	mov    rdi,rax
  4297c5:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  4297ca:	mov    QWORD PTR [rbp-0x50],rax
  4297ce:	mov    rax,QWORD PTR [rbp-0x50]
  4297d2:	lea    rcx,[rax+0x10]
  4297d6:	mov    rdx,QWORD PTR [rbp-0x90]
  4297dd:	mov    rax,rdx
  4297e0:	shl    rax,0x2
  4297e4:	add    rax,rdx
  4297e7:	shl    rax,0x3
  4297eb:	add    rax,rcx
  4297ee:	mov    QWORD PTR [rbp-0x48],rax
  4297f2:	mov    rax,QWORD PTR [rbp-0x48]
  4297f6:	movzx  eax,BYTE PTR [rax+0x14]
  4297fa:	test   al,al
  4297fc:	je     42981f <flatcc_json_parser_union_type_vector@@Base+0xd4>
  4297fe:	mov    rdx,QWORD PTR [rbp-0x88]
  429805:	mov    rsi,QWORD PTR [rbp-0x80]
  429809:	mov    rax,QWORD PTR [rbp-0x78]
  42980d:	mov    ecx,0x1c
  429812:	mov    rdi,rax
  429815:	call   427257 <flatcc_json_parser_set_error@@Base>
  42981a:	jmp    429be6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42981f:	mov    rax,QWORD PTR [rbp-0x48]
  429823:	mov    BYTE PTR [rax+0x14],0x1
  429827:	mov    rax,QWORD PTR [rbp-0x78]
  42982b:	mov    rax,QWORD PTR [rax]
  42982e:	mov    ecx,0xffffffff
  429833:	mov    edx,0x1
  429838:	mov    esi,0x1
  42983d:	mov    rdi,rax
  429840:	call   41dfe5 <flatcc_builder_start_vector@@Base>
  429845:	test   eax,eax
  429847:	jne    429bbd <flatcc_json_parser_union_type_vector@@Base+0x472>
  42984d:	lea    rcx,[rbp-0x60]
  429851:	mov    rdx,QWORD PTR [rbp-0x88]
  429858:	mov    rsi,QWORD PTR [rbp-0x80]
  42985c:	mov    rax,QWORD PTR [rbp-0x78]
  429860:	mov    rdi,rax
  429863:	call   4238aa <flatcc_verify_union_vector_field@@Base+0x616>
  429868:	mov    QWORD PTR [rbp-0x80],rax
  42986c:	jmp    429992 <flatcc_json_parser_union_type_vector@@Base+0x247>
  429871:	mov    rax,QWORD PTR [rbp-0x78]
  429875:	mov    rax,QWORD PTR [rax]
  429878:	mov    esi,0x1
  42987d:	mov    rdi,rax
  429880:	call   41d895 <flatcc_builder_extend_vector@@Base>
  429885:	mov    QWORD PTR [rbp-0x40],rax
  429889:	cmp    QWORD PTR [rbp-0x40],0x0
  42988e:	je     429bc0 <flatcc_json_parser_union_type_vector@@Base+0x475>
  429894:	mov    rax,QWORD PTR [rbp-0x80]
  429898:	mov    QWORD PTR [rbp-0x38],rax
  42989c:	lea    rcx,[rbp-0x61]
  4298a0:	mov    rdx,QWORD PTR [rbp-0x88]
  4298a7:	mov    rsi,QWORD PTR [rbp-0x38]
  4298ab:	mov    rax,QWORD PTR [rbp-0x78]
  4298af:	mov    rdi,rax
  4298b2:	call   424056 <flatcc_verify_union_vector_field@@Base+0xdc2>
  4298b7:	mov    QWORD PTR [rbp-0x80],rax
  4298bb:	mov    rax,QWORD PTR [rbp-0x38]
  4298bf:	cmp    rax,QWORD PTR [rbp-0x80]
  4298c3:	jne    429915 <flatcc_json_parser_union_type_vector@@Base+0x1ca>
  4298c5:	mov    rax,QWORD PTR [rbp-0x80]
  4298c9:	mov    QWORD PTR [rbp-0x38],rax
  4298cd:	lea    rdi,[rbp-0x61]
  4298d1:	mov    rcx,QWORD PTR [rbp-0xa8]
  4298d8:	mov    rdx,QWORD PTR [rbp-0x88]
  4298df:	mov    rsi,QWORD PTR [rbp-0x38]
  4298e3:	mov    rax,QWORD PTR [rbp-0x78]
  4298e7:	mov    r8,rdi
  4298ea:	mov    rdi,rax
  4298ed:	call   424623 <flatcc_verify_union_vector_field@@Base+0x138f>
  4298f2:	mov    QWORD PTR [rbp-0x80],rax
  4298f6:	mov    rax,QWORD PTR [rbp-0x80]
  4298fa:	cmp    rax,QWORD PTR [rbp-0x38]
  4298fe:	je     429bc3 <flatcc_json_parser_union_type_vector@@Base+0x478>
  429904:	mov    rax,QWORD PTR [rbp-0x80]
  429908:	cmp    rax,QWORD PTR [rbp-0x88]
  42990f:	je     429bc3 <flatcc_json_parser_union_type_vector@@Base+0x478>
  429915:	movzx  eax,BYTE PTR [rbp-0x61]
  429919:	movzx  edx,al
  42991c:	mov    rax,QWORD PTR [rbp-0xb8]
  429923:	mov    edi,edx
  429925:	call   rax
  429927:	test   eax,eax
  429929:	jne    42995e <flatcc_json_parser_union_type_vector@@Base+0x213>
  42992b:	mov    rax,QWORD PTR [rbp-0x78]
  42992f:	mov    eax,DWORD PTR [rax+0x10]
  429932:	and    eax,0x1
  429935:	test   eax,eax
  429937:	jne    42995a <flatcc_json_parser_union_type_vector@@Base+0x20f>
  429939:	mov    rdx,QWORD PTR [rbp-0x88]
  429940:	mov    rsi,QWORD PTR [rbp-0x80]
  429944:	mov    rax,QWORD PTR [rbp-0x78]
  429948:	mov    ecx,0xf
  42994d:	mov    rdi,rax
  429950:	call   427257 <flatcc_json_parser_set_error@@Base>
  429955:	jmp    429be6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42995a:	mov    BYTE PTR [rbp-0x61],0x0
  42995e:	movzx  eax,BYTE PTR [rbp-0x61]
  429962:	movzx  edx,al
  429965:	mov    rax,QWORD PTR [rbp-0x40]
  429969:	mov    esi,edx
  42996b:	mov    rdi,rax
  42996e:	call   423487 <flatcc_verify_union_vector_field@@Base+0x1f3>
  429973:	lea    rcx,[rbp-0x60]
  429977:	mov    rdx,QWORD PTR [rbp-0x88]
  42997e:	mov    rsi,QWORD PTR [rbp-0x80]
  429982:	mov    rax,QWORD PTR [rbp-0x78]
  429986:	mov    rdi,rax
  429989:	call   423967 <flatcc_verify_union_vector_field@@Base+0x6d3>
  42998e:	mov    QWORD PTR [rbp-0x80],rax
  429992:	mov    eax,DWORD PTR [rbp-0x60]
  429995:	test   eax,eax
  429997:	jne    429871 <flatcc_json_parser_union_type_vector@@Base+0x126>
  42999d:	mov    rax,QWORD PTR [rbp-0x78]
  4299a1:	mov    rax,QWORD PTR [rax]
  4299a4:	mov    rdi,rax
  4299a7:	call   41f28f <flatcc_builder_vector_count@@Base>
  4299ac:	mov    DWORD PTR [rbp-0x5c],eax
  4299af:	mov    rax,QWORD PTR [rbp-0x48]
  4299b3:	mov    edx,DWORD PTR [rbp-0x5c]
  4299b6:	mov    DWORD PTR [rax+0x18],edx
  4299b9:	mov    eax,DWORD PTR [rbp-0x5c]
  4299bc:	mov    QWORD PTR [rbp-0x30],rax
  4299c0:	mov    rax,QWORD PTR [rbp-0x78]
  4299c4:	mov    rax,QWORD PTR [rax]
  4299c7:	mov    rdx,QWORD PTR [rbp-0x30]
  4299cb:	mov    rsi,rdx
  4299ce:	mov    rdi,rax
  4299d1:	call   41c392 <flatcc_builder_enter_user_frame@@Base>
  4299d6:	mov    QWORD PTR [rbp-0x28],rax
  4299da:	mov    rax,QWORD PTR [rbp-0x78]
  4299de:	mov    rax,QWORD PTR [rax]
  4299e1:	mov    rdx,QWORD PTR [rbp-0x28]
  4299e5:	mov    rsi,rdx
  4299e8:	mov    rdi,rax
  4299eb:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  4299f0:	mov    QWORD PTR [rbp-0x20],rax
  4299f4:	mov    rax,QWORD PTR [rbp-0x78]
  4299f8:	mov    rax,QWORD PTR [rax]
  4299fb:	mov    rdi,rax
  4299fe:	call   41f2aa <flatcc_builder_vector_edit@@Base>
  429a03:	mov    rcx,rax
  429a06:	mov    rdx,QWORD PTR [rbp-0x30]
  429a0a:	mov    rax,QWORD PTR [rbp-0x20]
  429a0e:	mov    rsi,rcx
  429a11:	mov    rdi,rax
  429a14:	call   406220 <memcpy@plt>
  429a19:	mov    rax,QWORD PTR [rbp-0x78]
  429a1d:	mov    rax,QWORD PTR [rax]
  429a20:	mov    rdi,rax
  429a23:	call   41f1da <flatcc_builder_end_vector@@Base>
  429a28:	mov    DWORD PTR [rbp-0x58],eax
  429a2b:	cmp    DWORD PTR [rbp-0x58],0x0
  429a2f:	je     429bc6 <flatcc_json_parser_union_type_vector@@Base+0x47b>
  429a35:	movzx  eax,WORD PTR [rbp-0x94]
  429a3c:	lea    edx,[rax-0x1]
  429a3f:	mov    rax,QWORD PTR [rbp-0x78]
  429a43:	mov    rax,QWORD PTR [rax]
  429a46:	mov    esi,edx
  429a48:	mov    rdi,rax
  429a4b:	call   4205bd <flatcc_builder_table_add_offset@@Base>
  429a50:	mov    QWORD PTR [rbp-0x18],rax
  429a54:	cmp    QWORD PTR [rbp-0x18],0x0
  429a59:	je     429bc9 <flatcc_json_parser_union_type_vector@@Base+0x47e>
  429a5f:	mov    rax,QWORD PTR [rbp-0x18]
  429a63:	mov    edx,DWORD PTR [rbp-0x58]
  429a66:	mov    DWORD PTR [rax],edx
  429a68:	mov    rax,QWORD PTR [rbp-0x78]
  429a6c:	mov    rax,QWORD PTR [rax]
  429a6f:	mov    rdx,QWORD PTR [rbp-0xa0]
  429a76:	mov    rsi,rdx
  429a79:	mov    rdi,rax
  429a7c:	call   41c577 <flatcc_builder_get_user_frame_ptr@@Base>
  429a81:	mov    QWORD PTR [rbp-0x50],rax
  429a85:	mov    rax,QWORD PTR [rbp-0x50]
  429a89:	lea    rcx,[rax+0x10]
  429a8d:	mov    rdx,QWORD PTR [rbp-0x90]
  429a94:	mov    rax,rdx
  429a97:	shl    rax,0x2
  429a9b:	add    rax,rdx
  429a9e:	shl    rax,0x3
  429aa2:	add    rax,rcx
  429aa5:	mov    QWORD PTR [rbp-0x48],rax
  429aa9:	mov    rax,QWORD PTR [rbp-0x48]
  429aad:	mov    rdx,QWORD PTR [rbp-0x28]
  429ab1:	mov    QWORD PTR [rax+0x20],rdx
  429ab5:	mov    rax,QWORD PTR [rbp-0x48]
  429ab9:	mov    rax,QWORD PTR [rax]
  429abc:	test   rax,rax
  429abf:	jne    429ade <flatcc_json_parser_union_type_vector@@Base+0x393>
  429ac1:	mov    rax,QWORD PTR [rbp-0x50]
  429ac5:	mov    rax,QWORD PTR [rax+0x8]
  429ac9:	lea    rdx,[rax+0x1]
  429acd:	mov    rax,QWORD PTR [rbp-0x50]
  429ad1:	mov    QWORD PTR [rax+0x8],rdx
  429ad5:	mov    rax,QWORD PTR [rbp-0x80]
  429ad9:	jmp    429be6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  429ade:	mov    rax,QWORD PTR [rbp-0x50]
  429ae2:	mov    rax,QWORD PTR [rax+0x8]
  429ae6:	test   rax,rax
  429ae9:	jne    429b0a <flatcc_json_parser_union_type_vector@@Base+0x3bf>
  429aeb:	lea    rcx,[rip+0x11e4e]        # 43b940 <flatcc_builder_padding_base@@Base+0x26e0>
  429af2:	mov    edx,0x462
  429af7:	lea    rsi,[rip+0x11902]        # 43b400 <flatcc_builder_padding_base@@Base+0x21a0>
  429afe:	lea    rdi,[rip+0x1195f]        # 43b464 <flatcc_builder_padding_base@@Base+0x2204>
  429b05:	call   4061b0 <__assert_fail@plt>
  429b0a:	mov    rax,QWORD PTR [rbp-0x50]
  429b0e:	mov    rax,QWORD PTR [rax+0x8]
  429b12:	lea    rdx,[rax-0x1]
  429b16:	mov    rax,QWORD PTR [rbp-0x50]
  429b1a:	mov    QWORD PTR [rax+0x8],rdx
  429b1e:	mov    rax,QWORD PTR [rbp-0x78]
  429b22:	mov    eax,DWORD PTR [rax+0x14]
  429b25:	mov    DWORD PTR [rbp-0x54],eax
  429b28:	mov    rax,QWORD PTR [rbp-0x78]
  429b2c:	mov    rax,QWORD PTR [rax+0x8]
  429b30:	mov    QWORD PTR [rbp-0x10],rax
  429b34:	mov    rax,QWORD PTR [rbp-0x48]
  429b38:	mov    edx,DWORD PTR [rax+0x10]
  429b3b:	mov    rax,QWORD PTR [rbp-0x78]
  429b3f:	mov    DWORD PTR [rax+0x14],edx
  429b42:	mov    rax,QWORD PTR [rbp-0x48]
  429b46:	mov    rdx,QWORD PTR [rax+0x8]
  429b4a:	mov    rax,QWORD PTR [rbp-0x78]
  429b4e:	mov    QWORD PTR [rax+0x8],rdx
  429b52:	movzx  r8d,WORD PTR [rbp-0x94]
  429b5a:	mov    rax,QWORD PTR [rbp-0x48]
  429b5e:	mov    rsi,QWORD PTR [rax]
  429b61:	mov    edi,DWORD PTR [rbp-0x5c]
  429b64:	mov    rcx,QWORD PTR [rbp-0x28]
  429b68:	mov    rdx,QWORD PTR [rbp-0x88]
  429b6f:	mov    rax,QWORD PTR [rbp-0x78]
  429b73:	sub    rsp,0x8
  429b77:	push   QWORD PTR [rbp-0xb0]
  429b7d:	mov    r9d,r8d
  429b80:	mov    r8d,edi
  429b83:	mov    rdi,rax
  429b86:	call   4293db <flatcc_json_parser_union_type@@Base+0x25f>
  429b8b:	add    rsp,0x10
  429b8f:	cmp    QWORD PTR [rbp-0x88],rax
  429b96:	jne    429ba1 <flatcc_json_parser_union_type_vector@@Base+0x456>
  429b98:	mov    rax,QWORD PTR [rbp-0x88]
  429b9f:	jmp    429be6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  429ba1:	mov    rax,QWORD PTR [rbp-0x78]
  429ba5:	mov    edx,DWORD PTR [rbp-0x54]
  429ba8:	mov    DWORD PTR [rax+0x14],edx
  429bab:	mov    rax,QWORD PTR [rbp-0x78]
  429baf:	mov    rdx,QWORD PTR [rbp-0x10]
  429bb3:	mov    QWORD PTR [rax+0x8],rdx
  429bb7:	mov    rax,QWORD PTR [rbp-0x80]
  429bbb:	jmp    429be6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  429bbd:	nop
  429bbe:	jmp    429bca <flatcc_json_parser_union_type_vector@@Base+0x47f>
  429bc0:	nop
  429bc1:	jmp    429bca <flatcc_json_parser_union_type_vector@@Base+0x47f>
  429bc3:	nop
  429bc4:	jmp    429bca <flatcc_json_parser_union_type_vector@@Base+0x47f>
  429bc6:	nop
  429bc7:	jmp    429bca <flatcc_json_parser_union_type_vector@@Base+0x47f>
  429bc9:	nop
  429bca:	mov    rdx,QWORD PTR [rbp-0x88]
  429bd1:	mov    rsi,QWORD PTR [rbp-0x80]
  429bd5:	mov    rax,QWORD PTR [rbp-0x78]
  429bd9:	mov    ecx,0x21
  429bde:	mov    rdi,rax
  429be1:	call   427257 <flatcc_json_parser_set_error@@Base>
  429be6:	mov    rcx,QWORD PTR [rbp-0x8]
  429bea:	xor    rcx,QWORD PTR fs:0x28
  429bf3:	je     429bfa <flatcc_json_parser_union_type_vector@@Base+0x4af>
  429bf5:	call   4061a0 <__stack_chk_fail@plt>
  429bfa:	leave  
  429bfb:	ret    

0000000000429bfc <flatcc_json_parser_table_as_root@@Base>:
  429bfc:	endbr64 
  429c00:	push   rbp
  429c01:	mov    rbp,rsp
  429c04:	sub    rsp,0xa0
  429c0b:	mov    QWORD PTR [rbp-0x68],rdi
  429c0f:	mov    QWORD PTR [rbp-0x70],rsi
  429c13:	mov    QWORD PTR [rbp-0x78],rdx
  429c17:	mov    QWORD PTR [rbp-0x80],rcx
  429c1b:	mov    DWORD PTR [rbp-0x84],r8d
  429c22:	mov    QWORD PTR [rbp-0x90],r9
  429c29:	mov    rax,QWORD PTR [rbp+0x10]
  429c2d:	mov    QWORD PTR [rbp-0x98],rax
  429c34:	mov    rax,QWORD PTR fs:0x28
  429c3d:	mov    QWORD PTR [rbp-0x8],rax
  429c41:	xor    eax,eax
  429c43:	mov    eax,DWORD PTR [rbp-0x84]
  429c49:	sar    eax,1
  429c4b:	and    eax,0x2
  429c4e:	mov    DWORD PTR [rbp-0x54],eax
  429c51:	cmp    QWORD PTR [rbp-0x70],0x0
  429c56:	jne    429c5e <flatcc_json_parser_table_as_root@@Base+0x62>
  429c58:	lea    rax,[rbp-0x50]
  429c5c:	jmp    429c62 <flatcc_json_parser_table_as_root@@Base+0x66>
  429c5e:	mov    rax,QWORD PTR [rbp-0x70]
  429c62:	mov    QWORD PTR [rbp-0x70],rax
  429c66:	mov    rdx,QWORD PTR [rbp-0x78]
  429c6a:	mov    rax,QWORD PTR [rbp-0x80]
  429c6e:	lea    rcx,[rdx+rax*1]
  429c72:	mov    edi,DWORD PTR [rbp-0x84]
  429c78:	mov    rdx,QWORD PTR [rbp-0x78]
  429c7c:	mov    rsi,QWORD PTR [rbp-0x68]
  429c80:	mov    rax,QWORD PTR [rbp-0x70]
  429c84:	mov    r8d,edi
  429c87:	mov    rdi,rax
  429c8a:	call   4234ac <flatcc_verify_union_vector_field@@Base+0x218>
  429c8f:	mov    edx,DWORD PTR [rbp-0x54]
  429c92:	mov    rsi,QWORD PTR [rbp-0x90]
  429c99:	mov    rax,QWORD PTR [rbp-0x68]
  429c9d:	mov    ecx,edx
  429c9f:	mov    edx,0x0
  429ca4:	mov    rdi,rax
  429ca7:	call   41d46e <flatcc_builder_start_buffer@@Base>
  429cac:	test   eax,eax
  429cae:	je     429cb7 <flatcc_json_parser_table_as_root@@Base+0xbb>
  429cb0:	mov    eax,0xffffffff
  429cb5:	jmp    429d1f <flatcc_json_parser_table_as_root@@Base+0x123>
  429cb7:	mov    rdx,QWORD PTR [rbp-0x78]
  429cbb:	mov    rax,QWORD PTR [rbp-0x80]
  429cbf:	lea    r8,[rdx+rax*1]
  429cc3:	lea    rdx,[rbp-0x58]
  429cc7:	mov    rsi,QWORD PTR [rbp-0x78]
  429ccb:	mov    rdi,QWORD PTR [rbp-0x70]
  429ccf:	mov    rax,QWORD PTR [rbp-0x98]
  429cd6:	mov    rcx,rdx
  429cd9:	mov    rdx,r8
  429cdc:	call   rax
  429cde:	mov    rax,QWORD PTR [rbp-0x70]
  429ce2:	mov    eax,DWORD PTR [rax+0x1c]
  429ce5:	test   eax,eax
  429ce7:	je     429cf2 <flatcc_json_parser_table_as_root@@Base+0xf6>
  429ce9:	mov    rax,QWORD PTR [rbp-0x70]
  429ced:	mov    eax,DWORD PTR [rax+0x1c]
  429cf0:	jmp    429d1f <flatcc_json_parser_table_as_root@@Base+0x123>
  429cf2:	mov    edx,DWORD PTR [rbp-0x58]
  429cf5:	mov    rax,QWORD PTR [rbp-0x68]
  429cf9:	mov    esi,edx
  429cfb:	mov    rdi,rax
  429cfe:	call   41d5bb <flatcc_builder_end_buffer@@Base>
  429d03:	test   eax,eax
  429d05:	jne    429d0e <flatcc_json_parser_table_as_root@@Base+0x112>
  429d07:	mov    eax,0xffffffff
  429d0c:	jmp    429d1f <flatcc_json_parser_table_as_root@@Base+0x123>
  429d0e:	mov    rax,QWORD PTR [rbp-0x70]
  429d12:	mov    rdx,QWORD PTR [rbp-0x78]
  429d16:	mov    QWORD PTR [rax+0x38],rdx
  429d1a:	mov    eax,0x0
  429d1f:	mov    rcx,QWORD PTR [rbp-0x8]
  429d23:	xor    rcx,QWORD PTR fs:0x28
  429d2c:	je     429d33 <flatcc_json_parser_table_as_root@@Base+0x137>
  429d2e:	call   4061a0 <__stack_chk_fail@plt>
  429d33:	leave  
  429d34:	ret    

0000000000429d35 <flatcc_json_parser_struct_as_root@@Base>:
  429d35:	endbr64 
  429d39:	push   rbp
  429d3a:	mov    rbp,rsp
  429d3d:	sub    rsp,0xa0
  429d44:	mov    QWORD PTR [rbp-0x68],rdi
  429d48:	mov    QWORD PTR [rbp-0x70],rsi
  429d4c:	mov    QWORD PTR [rbp-0x78],rdx
  429d50:	mov    QWORD PTR [rbp-0x80],rcx
  429d54:	mov    DWORD PTR [rbp-0x84],r8d
  429d5b:	mov    QWORD PTR [rbp-0x90],r9
  429d62:	mov    rax,QWORD PTR [rbp+0x10]
  429d66:	mov    QWORD PTR [rbp-0x98],rax
  429d6d:	mov    rax,QWORD PTR fs:0x28
  429d76:	mov    QWORD PTR [rbp-0x8],rax
  429d7a:	xor    eax,eax
  429d7c:	mov    eax,DWORD PTR [rbp-0x84]
  429d82:	sar    eax,1
  429d84:	and    eax,0x2
  429d87:	mov    DWORD PTR [rbp-0x54],eax
  429d8a:	cmp    QWORD PTR [rbp-0x70],0x0
  429d8f:	jne    429d97 <flatcc_json_parser_struct_as_root@@Base+0x62>
  429d91:	lea    rax,[rbp-0x50]
  429d95:	jmp    429d9b <flatcc_json_parser_struct_as_root@@Base+0x66>
  429d97:	mov    rax,QWORD PTR [rbp-0x70]
  429d9b:	mov    QWORD PTR [rbp-0x70],rax
  429d9f:	mov    rdx,QWORD PTR [rbp-0x78]
  429da3:	mov    rax,QWORD PTR [rbp-0x80]
  429da7:	lea    rcx,[rdx+rax*1]
  429dab:	mov    edi,DWORD PTR [rbp-0x84]
  429db1:	mov    rdx,QWORD PTR [rbp-0x78]
  429db5:	mov    rsi,QWORD PTR [rbp-0x68]
  429db9:	mov    rax,QWORD PTR [rbp-0x70]
  429dbd:	mov    r8d,edi
  429dc0:	mov    rdi,rax
  429dc3:	call   4234ac <flatcc_verify_union_vector_field@@Base+0x218>
  429dc8:	mov    edx,DWORD PTR [rbp-0x54]
  429dcb:	mov    rsi,QWORD PTR [rbp-0x90]
  429dd2:	mov    rax,QWORD PTR [rbp-0x68]
  429dd6:	mov    ecx,edx
  429dd8:	mov    edx,0x0
  429ddd:	mov    rdi,rax
  429de0:	call   41d46e <flatcc_builder_start_buffer@@Base>
  429de5:	test   eax,eax
  429de7:	je     429df0 <flatcc_json_parser_struct_as_root@@Base+0xbb>
  429de9:	mov    eax,0xffffffff
  429dee:	jmp    429e58 <flatcc_json_parser_struct_as_root@@Base+0x123>
  429df0:	mov    rdx,QWORD PTR [rbp-0x78]
  429df4:	mov    rax,QWORD PTR [rbp-0x80]
  429df8:	lea    r8,[rdx+rax*1]
  429dfc:	lea    rdx,[rbp-0x58]
  429e00:	mov    rsi,QWORD PTR [rbp-0x78]
  429e04:	mov    rdi,QWORD PTR [rbp-0x70]
  429e08:	mov    rax,QWORD PTR [rbp-0x98]
  429e0f:	mov    rcx,rdx
  429e12:	mov    rdx,r8
  429e15:	call   rax
  429e17:	mov    rax,QWORD PTR [rbp-0x70]
  429e1b:	mov    eax,DWORD PTR [rax+0x1c]
  429e1e:	test   eax,eax
  429e20:	je     429e2b <flatcc_json_parser_struct_as_root@@Base+0xf6>
  429e22:	mov    rax,QWORD PTR [rbp-0x70]
  429e26:	mov    eax,DWORD PTR [rax+0x1c]
  429e29:	jmp    429e58 <flatcc_json_parser_struct_as_root@@Base+0x123>
  429e2b:	mov    edx,DWORD PTR [rbp-0x58]
  429e2e:	mov    rax,QWORD PTR [rbp-0x68]
  429e32:	mov    esi,edx
  429e34:	mov    rdi,rax
  429e37:	call   41d5bb <flatcc_builder_end_buffer@@Base>
  429e3c:	test   eax,eax
  429e3e:	jne    429e47 <flatcc_json_parser_struct_as_root@@Base+0x112>
  429e40:	mov    eax,0xffffffff
  429e45:	jmp    429e58 <flatcc_json_parser_struct_as_root@@Base+0x123>
  429e47:	mov    rax,QWORD PTR [rbp-0x70]
  429e4b:	mov    rdx,QWORD PTR [rbp-0x78]
  429e4f:	mov    QWORD PTR [rax+0x38],rdx
  429e53:	mov    eax,0x0
  429e58:	mov    rcx,QWORD PTR [rbp-0x8]
  429e5c:	xor    rcx,QWORD PTR fs:0x28
  429e65:	je     429e6c <flatcc_json_parser_struct_as_root@@Base+0x137>
  429e67:	call   4061a0 <__stack_chk_fail@plt>
  429e6c:	leave  
  429e6d:	ret    
  429e6e:	push   rbp
  429e6f:	mov    rbp,rsp
  429e72:	mov    eax,edi
  429e74:	mov    BYTE PTR [rbp-0x4],al
  429e77:	movzx  eax,BYTE PTR [rbp-0x4]
  429e7b:	pop    rbp
  429e7c:	ret    
  429e7d:	push   rbp
  429e7e:	mov    rbp,rsp
  429e81:	sub    rsp,0x8
  429e85:	mov    QWORD PTR [rbp-0x8],rdi
  429e89:	mov    rax,QWORD PTR [rbp-0x8]
  429e8d:	movzx  eax,BYTE PTR [rax]
  429e90:	movzx  eax,al
  429e93:	mov    edi,eax
  429e95:	call   429e6e <flatcc_json_parser_struct_as_root@@Base+0x139>
  429e9a:	leave  
  429e9b:	ret    
  429e9c:	push   rbp
  429e9d:	mov    rbp,rsp
  429ea0:	mov    eax,edi
  429ea2:	mov    WORD PTR [rbp-0x4],ax
  429ea6:	movzx  eax,WORD PTR [rbp-0x4]
  429eaa:	pop    rbp
  429eab:	ret    
  429eac:	push   rbp
  429ead:	mov    rbp,rsp
  429eb0:	sub    rsp,0x8
  429eb4:	mov    QWORD PTR [rbp-0x8],rdi
  429eb8:	mov    rax,QWORD PTR [rbp-0x8]
  429ebc:	movzx  eax,WORD PTR [rax]
  429ebf:	movzx  eax,ax
  429ec2:	mov    edi,eax
  429ec4:	call   429e9c <flatcc_json_parser_struct_as_root@@Base+0x167>
  429ec9:	leave  
  429eca:	ret    
  429ecb:	push   rbp
  429ecc:	mov    rbp,rsp
  429ecf:	mov    DWORD PTR [rbp-0x4],edi
  429ed2:	mov    eax,DWORD PTR [rbp-0x4]
  429ed5:	pop    rbp
  429ed6:	ret    
  429ed7:	push   rbp
  429ed8:	mov    rbp,rsp
  429edb:	sub    rsp,0x8
  429edf:	mov    QWORD PTR [rbp-0x8],rdi
  429ee3:	mov    rax,QWORD PTR [rbp-0x8]
  429ee7:	mov    eax,DWORD PTR [rax]
  429ee9:	mov    edi,eax
  429eeb:	call   429ecb <flatcc_json_parser_struct_as_root@@Base+0x196>
  429ef0:	leave  
  429ef1:	ret    
  429ef2:	push   rbp
  429ef3:	mov    rbp,rsp
  429ef6:	mov    QWORD PTR [rbp-0x8],rdi
  429efa:	mov    rax,QWORD PTR [rbp-0x8]
  429efe:	pop    rbp
  429eff:	ret    
  429f00:	push   rbp
  429f01:	mov    rbp,rsp
  429f04:	sub    rsp,0x8
  429f08:	mov    QWORD PTR [rbp-0x8],rdi
  429f0c:	mov    rax,QWORD PTR [rbp-0x8]
  429f10:	mov    rax,QWORD PTR [rax]
  429f13:	mov    rdi,rax
  429f16:	call   429ef2 <flatcc_json_parser_struct_as_root@@Base+0x1bd>
  429f1b:	leave  
  429f1c:	ret    
  429f1d:	push   rbp
  429f1e:	mov    rbp,rsp
  429f21:	mov    eax,edi
  429f23:	mov    BYTE PTR [rbp-0x4],al
  429f26:	movzx  eax,BYTE PTR [rbp-0x4]
  429f2a:	pop    rbp
  429f2b:	ret    
  429f2c:	push   rbp
  429f2d:	mov    rbp,rsp
  429f30:	sub    rsp,0x8
  429f34:	mov    QWORD PTR [rbp-0x8],rdi
  429f38:	mov    rax,QWORD PTR [rbp-0x8]
  429f3c:	movzx  eax,BYTE PTR [rax]
  429f3f:	movsx  eax,al
  429f42:	mov    edi,eax
  429f44:	call   429f1d <flatcc_json_parser_struct_as_root@@Base+0x1e8>
  429f49:	leave  
  429f4a:	ret    
  429f4b:	push   rbp
  429f4c:	mov    rbp,rsp
  429f4f:	mov    eax,edi
  429f51:	mov    WORD PTR [rbp-0x4],ax
  429f55:	movzx  eax,WORD PTR [rbp-0x4]
  429f59:	pop    rbp
  429f5a:	ret    
  429f5b:	push   rbp
  429f5c:	mov    rbp,rsp
  429f5f:	sub    rsp,0x8
  429f63:	mov    QWORD PTR [rbp-0x8],rdi
  429f67:	mov    rax,QWORD PTR [rbp-0x8]
  429f6b:	movzx  eax,WORD PTR [rax]
  429f6e:	cwde   
  429f6f:	mov    edi,eax
  429f71:	call   429f4b <flatcc_json_parser_struct_as_root@@Base+0x216>
  429f76:	leave  
  429f77:	ret    
  429f78:	push   rbp
  429f79:	mov    rbp,rsp
  429f7c:	mov    DWORD PTR [rbp-0x4],edi
  429f7f:	mov    eax,DWORD PTR [rbp-0x4]
  429f82:	pop    rbp
  429f83:	ret    
  429f84:	push   rbp
  429f85:	mov    rbp,rsp
  429f88:	sub    rsp,0x8
  429f8c:	mov    QWORD PTR [rbp-0x8],rdi
  429f90:	mov    rax,QWORD PTR [rbp-0x8]
  429f94:	mov    eax,DWORD PTR [rax]
  429f96:	mov    edi,eax
  429f98:	call   429f78 <flatcc_json_parser_struct_as_root@@Base+0x243>
  429f9d:	leave  
  429f9e:	ret    
  429f9f:	push   rbp
  429fa0:	mov    rbp,rsp
  429fa3:	mov    QWORD PTR [rbp-0x8],rdi
  429fa7:	mov    rax,QWORD PTR [rbp-0x8]
  429fab:	pop    rbp
  429fac:	ret    
  429fad:	push   rbp
  429fae:	mov    rbp,rsp
  429fb1:	sub    rsp,0x8
  429fb5:	mov    QWORD PTR [rbp-0x8],rdi
  429fb9:	mov    rax,QWORD PTR [rbp-0x8]
  429fbd:	mov    rax,QWORD PTR [rax]
  429fc0:	mov    rdi,rax
  429fc3:	call   429f9f <flatcc_json_parser_struct_as_root@@Base+0x26a>
  429fc8:	leave  
  429fc9:	ret    
  429fca:	push   rbp
  429fcb:	mov    rbp,rsp
  429fce:	vmovss DWORD PTR [rbp-0x14],xmm0
  429fd3:	vmovss xmm0,DWORD PTR [rbp-0x14]
  429fd8:	vmovss DWORD PTR [rbp-0x4],xmm0
  429fdd:	mov    eax,DWORD PTR [rbp-0x4]
  429fe0:	mov    DWORD PTR [rbp-0x4],eax
  429fe3:	vmovss xmm0,DWORD PTR [rbp-0x4]
  429fe8:	pop    rbp
  429fe9:	ret    
  429fea:	push   rbp
  429feb:	mov    rbp,rsp
  429fee:	sub    rsp,0x8
  429ff2:	mov    QWORD PTR [rbp-0x8],rdi
  429ff6:	mov    rax,QWORD PTR [rbp-0x8]
  429ffa:	mov    eax,DWORD PTR [rax]
  429ffc:	vmovd  xmm0,eax
  42a000:	call   429fca <flatcc_json_parser_struct_as_root@@Base+0x295>
  42a005:	leave  
  42a006:	ret    
  42a007:	push   rbp
  42a008:	mov    rbp,rsp
  42a00b:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42a010:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42a015:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42a01a:	mov    rax,QWORD PTR [rbp-0x8]
  42a01e:	mov    QWORD PTR [rbp-0x8],rax
  42a022:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42a027:	vmovq  rax,xmm0
  42a02c:	vmovq  xmm0,rax
  42a031:	pop    rbp
  42a032:	ret    
  42a033:	push   rbp
  42a034:	mov    rbp,rsp
  42a037:	sub    rsp,0x8
  42a03b:	mov    QWORD PTR [rbp-0x8],rdi
  42a03f:	mov    rax,QWORD PTR [rbp-0x8]
  42a043:	mov    rax,QWORD PTR [rax]
  42a046:	vmovq  xmm0,rax
  42a04b:	call   42a007 <flatcc_json_parser_struct_as_root@@Base+0x2d2>
  42a050:	vmovq  rax,xmm0
  42a055:	vmovq  xmm0,rax
  42a05a:	leave  
  42a05b:	ret    
  42a05c:	push   rbp
  42a05d:	mov    rbp,rsp
  42a060:	mov    eax,edi
  42a062:	mov    BYTE PTR [rbp-0x4],al
  42a065:	movzx  eax,BYTE PTR [rbp-0x4]
  42a069:	pop    rbp
  42a06a:	ret    
  42a06b:	push   rbp
  42a06c:	mov    rbp,rsp
  42a06f:	sub    rsp,0x8
  42a073:	mov    QWORD PTR [rbp-0x8],rdi
  42a077:	mov    rax,QWORD PTR [rbp-0x8]
  42a07b:	movzx  eax,BYTE PTR [rax]
  42a07e:	movzx  eax,al
  42a081:	mov    edi,eax
  42a083:	call   42a05c <flatcc_json_parser_struct_as_root@@Base+0x327>
  42a088:	leave  
  42a089:	ret    
  42a08a:	push   rbp
  42a08b:	mov    rbp,rsp
  42a08e:	mov    DWORD PTR [rbp-0x4],edi
  42a091:	mov    eax,DWORD PTR [rbp-0x4]
  42a094:	pop    rbp
  42a095:	ret    
  42a096:	push   rbp
  42a097:	mov    rbp,rsp
  42a09a:	sub    rsp,0x8
  42a09e:	mov    QWORD PTR [rbp-0x8],rdi
  42a0a2:	mov    rax,QWORD PTR [rbp-0x8]
  42a0a6:	mov    eax,DWORD PTR [rax]
  42a0a8:	mov    edi,eax
  42a0aa:	call   42a08a <flatcc_json_parser_struct_as_root@@Base+0x355>
  42a0af:	leave  
  42a0b0:	ret    
  42a0b1:	push   rbp
  42a0b2:	mov    rbp,rsp
  42a0b5:	mov    DWORD PTR [rbp-0x4],edi
  42a0b8:	mov    eax,DWORD PTR [rbp-0x4]
  42a0bb:	pop    rbp
  42a0bc:	ret    
  42a0bd:	push   rbp
  42a0be:	mov    rbp,rsp
  42a0c1:	sub    rsp,0x8
  42a0c5:	mov    QWORD PTR [rbp-0x8],rdi
  42a0c9:	mov    rax,QWORD PTR [rbp-0x8]
  42a0cd:	mov    eax,DWORD PTR [rax]
  42a0cf:	mov    edi,eax
  42a0d1:	call   42a0b1 <flatcc_json_parser_struct_as_root@@Base+0x37c>
  42a0d6:	leave  
  42a0d7:	ret    
  42a0d8:	push   rbp
  42a0d9:	mov    rbp,rsp
  42a0dc:	mov    eax,edi
  42a0de:	mov    WORD PTR [rbp-0x4],ax
  42a0e2:	movzx  eax,WORD PTR [rbp-0x4]
  42a0e6:	pop    rbp
  42a0e7:	ret    
  42a0e8:	push   rbp
  42a0e9:	mov    rbp,rsp
  42a0ec:	sub    rsp,0x8
  42a0f0:	mov    QWORD PTR [rbp-0x8],rdi
  42a0f4:	mov    rax,QWORD PTR [rbp-0x8]
  42a0f8:	movzx  eax,WORD PTR [rax]
  42a0fb:	movzx  eax,ax
  42a0fe:	mov    edi,eax
  42a100:	call   42a0d8 <flatcc_json_parser_struct_as_root@@Base+0x3a3>
  42a105:	leave  
  42a106:	ret    
  42a107:	push   rbp
  42a108:	mov    rbp,rsp
  42a10b:	mov    eax,edi
  42a10d:	mov    BYTE PTR [rbp-0x4],al
  42a110:	movzx  eax,BYTE PTR [rbp-0x4]
  42a114:	pop    rbp
  42a115:	ret    
  42a116:	push   rbp
  42a117:	mov    rbp,rsp
  42a11a:	sub    rsp,0x8
  42a11e:	mov    QWORD PTR [rbp-0x8],rdi
  42a122:	mov    rax,QWORD PTR [rbp-0x8]
  42a126:	movzx  eax,BYTE PTR [rax]
  42a129:	movzx  eax,al
  42a12c:	mov    edi,eax
  42a12e:	call   42a107 <flatcc_json_parser_struct_as_root@@Base+0x3d2>
  42a133:	leave  
  42a134:	ret    
  42a135:	push   rbp
  42a136:	mov    rbp,rsp
  42a139:	mov    DWORD PTR [rbp-0x4],edi
  42a13c:	mov    eax,DWORD PTR [rbp-0x4]
  42a13f:	pop    rbp
  42a140:	ret    
  42a141:	push   rbp
  42a142:	mov    rbp,rsp
  42a145:	mov    DWORD PTR [rbp-0x4],edi
  42a148:	mov    eax,DWORD PTR [rbp-0x4]
  42a14b:	pop    rbp
  42a14c:	ret    
  42a14d:	push   rbp
  42a14e:	mov    rbp,rsp
  42a151:	sub    rsp,0x8
  42a155:	mov    QWORD PTR [rbp-0x8],rdi
  42a159:	mov    rax,QWORD PTR [rbp-0x8]
  42a15d:	mov    eax,DWORD PTR [rax]
  42a15f:	mov    edi,eax
  42a161:	call   42a135 <flatcc_json_parser_struct_as_root@@Base+0x400>
  42a166:	leave  
  42a167:	ret    
  42a168:	push   rbp
  42a169:	mov    rbp,rsp
  42a16c:	mov    QWORD PTR [rbp-0x8],rdi
  42a170:	mov    DWORD PTR [rbp-0xc],esi
  42a173:	mov    rax,QWORD PTR [rbp-0x8]
  42a177:	mov    eax,DWORD PTR [rax+0x3c]
  42a17a:	test   eax,eax
  42a17c:	jne    42a188 <flatcc_json_parser_struct_as_root@@Base+0x453>
  42a17e:	mov    rax,QWORD PTR [rbp-0x8]
  42a182:	mov    edx,DWORD PTR [rbp-0xc]
  42a185:	mov    DWORD PTR [rax+0x3c],edx
  42a188:	nop
  42a189:	pop    rbp
  42a18a:	ret    
  42a18b:	push   rbp
  42a18c:	mov    rbp,rsp
  42a18f:	mov    QWORD PTR [rbp-0x8],rdi
  42a193:	mov    rax,QWORD PTR [rbp-0x8]
  42a197:	mov    eax,DWORD PTR [rax+0x3c]
  42a19a:	pop    rbp
  42a19b:	ret    
  42a19c:	push   rbp
  42a19d:	mov    rbp,rsp
  42a1a0:	sub    rsp,0x10
  42a1a4:	mov    QWORD PTR [rbp-0x8],rdi
  42a1a8:	mov    rax,QWORD PTR [rbp-0x8]
  42a1ac:	mov    rdx,QWORD PTR [rax+0x28]
  42a1b0:	mov    rax,QWORD PTR [rbp-0x8]
  42a1b4:	mov    rax,QWORD PTR [rax+0x20]
  42a1b8:	cmp    rdx,rax
  42a1bb:	jb     42a1d3 <flatcc_json_parser_struct_as_root@@Base+0x49e>
  42a1bd:	mov    rax,QWORD PTR [rbp-0x8]
  42a1c1:	mov    rax,QWORD PTR [rax+0x48]
  42a1c5:	mov    rdx,QWORD PTR [rbp-0x8]
  42a1c9:	mov    esi,0x0
  42a1ce:	mov    rdi,rdx
  42a1d1:	call   rax
  42a1d3:	nop
  42a1d4:	leave  
  42a1d5:	ret    
  42a1d6:	endbr64 
  42a1da:	push   rbp
  42a1db:	mov    rbp,rsp
  42a1de:	sub    rsp,0x10
  42a1e2:	mov    DWORD PTR [rbp-0x4],edi
  42a1e5:	mov    QWORD PTR [rbp-0x10],rsi
  42a1e9:	cmp    DWORD PTR [rbp-0x4],0x0
  42a1ed:	je     42a20e <flatcc_json_parser_struct_as_root@@Base+0x4d9>
  42a1ef:	mov    rax,QWORD PTR [rbp-0x10]
  42a1f3:	mov    edx,0x5
  42a1f8:	lea    rsi,[rip+0x1198a]        # 43bb89 <flatcc_builder_padding_base@@Base+0x2929>
  42a1ff:	mov    rdi,rax
  42a202:	call   406220 <memcpy@plt>
  42a207:	mov    eax,0x4
  42a20c:	jmp    42a22b <flatcc_json_parser_struct_as_root@@Base+0x4f6>
  42a20e:	mov    rax,QWORD PTR [rbp-0x10]
  42a212:	mov    edx,0x6
  42a217:	lea    rsi,[rip+0x11971]        # 43bb8f <flatcc_builder_padding_base@@Base+0x292f>
  42a21e:	mov    rdi,rax
  42a221:	call   406220 <memcpy@plt>
  42a226:	mov    eax,0x5
  42a22b:	leave  
  42a22c:	ret    
  42a22d:	endbr64 
  42a231:	push   rbp
  42a232:	mov    rbp,rsp
  42a235:	mov    eax,edi
  42a237:	mov    QWORD PTR [rbp-0x20],rsi
  42a23b:	mov    BYTE PTR [rbp-0x14],al
  42a23e:	cmp    BYTE PTR [rbp-0x14],0x63
  42a242:	jbe    42a2da <flatcc_json_parser_struct_as_root@@Base+0x5a5>
  42a248:	add    QWORD PTR [rbp-0x20],0x3
  42a24d:	mov    rax,QWORD PTR [rbp-0x20]
  42a251:	mov    BYTE PTR [rax],0x0
  42a254:	sub    QWORD PTR [rbp-0x20],0x2
  42a259:	movzx  ecx,BYTE PTR [rbp-0x14]
  42a25d:	movzx  edx,cl
  42a260:	mov    eax,edx
  42a262:	shl    eax,0x2
  42a265:	add    eax,edx
  42a267:	shl    eax,0x3
  42a26a:	add    eax,edx
  42a26c:	shr    ax,0x8
  42a270:	shr    al,0x4
  42a273:	mov    edx,0x64
  42a278:	imul   eax,edx
  42a27b:	sub    ecx,eax
  42a27d:	mov    eax,ecx
  42a27f:	movzx  eax,al
  42a282:	add    eax,eax
  42a284:	movsxd rdx,eax
  42a287:	lea    rax,[rip+0x11832]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a28e:	add    rax,rdx
  42a291:	mov    QWORD PTR [rbp-0x8],rax
  42a295:	movzx  eax,BYTE PTR [rbp-0x14]
  42a299:	movzx  edx,al
  42a29c:	mov    eax,edx
  42a29e:	shl    eax,0x2
  42a2a1:	add    eax,edx
  42a2a3:	shl    eax,0x3
  42a2a6:	add    eax,edx
  42a2a8:	shr    ax,0x8
  42a2ac:	shr    al,0x4
  42a2af:	mov    BYTE PTR [rbp-0x14],al
  42a2b2:	mov    rax,QWORD PTR [rbp-0x8]
  42a2b6:	movzx  eax,WORD PTR [rax]
  42a2b9:	mov    rdx,QWORD PTR [rbp-0x20]
  42a2bd:	mov    WORD PTR [rdx],ax
  42a2c0:	movzx  eax,BYTE PTR [rbp-0x14]
  42a2c4:	add    eax,0x30
  42a2c7:	mov    rdx,QWORD PTR [rbp-0x20]
  42a2cb:	dec    rdx
  42a2ce:	mov    BYTE PTR [rdx],al
  42a2d0:	mov    eax,0x3
  42a2d5:	jmp    42a37d <flatcc_json_parser_struct_as_root@@Base+0x648>
  42a2da:	cmp    BYTE PTR [rbp-0x14],0x9
  42a2de:	jbe    42a35f <flatcc_json_parser_struct_as_root@@Base+0x62a>
  42a2e0:	add    QWORD PTR [rbp-0x20],0x2
  42a2e5:	mov    rax,QWORD PTR [rbp-0x20]
  42a2e9:	mov    BYTE PTR [rax],0x0
  42a2ec:	sub    QWORD PTR [rbp-0x20],0x2
  42a2f1:	movzx  ecx,BYTE PTR [rbp-0x14]
  42a2f5:	movzx  edx,cl
  42a2f8:	mov    eax,edx
  42a2fa:	shl    eax,0x2
  42a2fd:	add    eax,edx
  42a2ff:	shl    eax,0x3
  42a302:	add    eax,edx
  42a304:	shr    ax,0x8
  42a308:	shr    al,0x4
  42a30b:	mov    edx,0x64
  42a310:	imul   eax,edx
  42a313:	sub    ecx,eax
  42a315:	mov    eax,ecx
  42a317:	movzx  eax,al
  42a31a:	add    eax,eax
  42a31c:	movsxd rdx,eax
  42a31f:	lea    rax,[rip+0x1179a]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a326:	add    rax,rdx
  42a329:	mov    QWORD PTR [rbp-0x8],rax
  42a32d:	movzx  eax,BYTE PTR [rbp-0x14]
  42a331:	movzx  edx,al
  42a334:	mov    eax,edx
  42a336:	shl    eax,0x2
  42a339:	add    eax,edx
  42a33b:	shl    eax,0x3
  42a33e:	add    eax,edx
  42a340:	shr    ax,0x8
  42a344:	shr    al,0x4
  42a347:	mov    BYTE PTR [rbp-0x14],al
  42a34a:	mov    rax,QWORD PTR [rbp-0x8]
  42a34e:	movzx  eax,WORD PTR [rax]
  42a351:	mov    rdx,QWORD PTR [rbp-0x20]
  42a355:	mov    WORD PTR [rdx],ax
  42a358:	mov    eax,0x2
  42a35d:	jmp    42a37d <flatcc_json_parser_struct_as_root@@Base+0x648>
  42a35f:	mov    rax,QWORD PTR [rbp-0x20]
  42a363:	inc    rax
  42a366:	mov    BYTE PTR [rax],0x0
  42a369:	movzx  eax,BYTE PTR [rbp-0x14]
  42a36d:	add    eax,0x30
  42a370:	mov    edx,eax
  42a372:	mov    rax,QWORD PTR [rbp-0x20]
  42a376:	mov    BYTE PTR [rax],dl
  42a378:	mov    eax,0x1
  42a37d:	pop    rbp
  42a37e:	ret    
  42a37f:	endbr64 
  42a383:	push   rbp
  42a384:	mov    rbp,rsp
  42a387:	mov    eax,edi
  42a389:	mov    QWORD PTR [rbp-0x20],rsi
  42a38d:	mov    WORD PTR [rbp-0x14],ax
  42a391:	mov    DWORD PTR [rbp-0xc],0x0
  42a398:	cmp    WORD PTR [rbp-0x14],0x3e7
  42a39e:	jbe    42a3ba <flatcc_json_parser_struct_as_root@@Base+0x685>
  42a3a0:	cmp    WORD PTR [rbp-0x14],0x270f
  42a3a6:	jbe    42a3b1 <flatcc_json_parser_struct_as_root@@Base+0x67c>
  42a3a8:	mov    DWORD PTR [rbp-0xc],0x5
  42a3af:	jmp    42a3e1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42a3b1:	mov    DWORD PTR [rbp-0xc],0x4
  42a3b8:	jmp    42a3e1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42a3ba:	cmp    WORD PTR [rbp-0x14],0x63
  42a3bf:	jbe    42a3ca <flatcc_json_parser_struct_as_root@@Base+0x695>
  42a3c1:	mov    DWORD PTR [rbp-0xc],0x3
  42a3c8:	jmp    42a3e1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42a3ca:	cmp    WORD PTR [rbp-0x14],0x9
  42a3cf:	jbe    42a3da <flatcc_json_parser_struct_as_root@@Base+0x6a5>
  42a3d1:	mov    DWORD PTR [rbp-0xc],0x2
  42a3d8:	jmp    42a3e1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42a3da:	mov    DWORD PTR [rbp-0xc],0x1
  42a3e1:	mov    eax,DWORD PTR [rbp-0xc]
  42a3e4:	cdqe   
  42a3e6:	add    QWORD PTR [rbp-0x20],rax
  42a3ea:	mov    rax,QWORD PTR [rbp-0x20]
  42a3ee:	mov    BYTE PTR [rax],0x0
  42a3f1:	mov    eax,DWORD PTR [rbp-0xc]
  42a3f4:	and    eax,0x1
  42a3f7:	test   eax,eax
  42a3f9:	je     42a51f <flatcc_json_parser_struct_as_root@@Base+0x7ea>
  42a3ff:	cmp    DWORD PTR [rbp-0xc],0x3
  42a403:	je     42a494 <flatcc_json_parser_struct_as_root@@Base+0x75f>
  42a409:	cmp    DWORD PTR [rbp-0xc],0x5
  42a40d:	je     42a41e <flatcc_json_parser_struct_as_root@@Base+0x6e9>
  42a40f:	cmp    DWORD PTR [rbp-0xc],0x1
  42a413:	je     42a50a <flatcc_json_parser_struct_as_root@@Base+0x7d5>
  42a419:	jmp    42a61f <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42a41e:	sub    QWORD PTR [rbp-0x20],0x2
  42a423:	movzx  ecx,WORD PTR [rbp-0x14]
  42a427:	mov    eax,ecx
  42a429:	shr    ax,0x2
  42a42d:	movzx  eax,ax
  42a430:	imul   eax,eax,0x147b
  42a436:	shr    eax,0x10
  42a439:	mov    edx,eax
  42a43b:	shr    dx,1
  42a43e:	mov    eax,edx
  42a440:	shl    eax,0x2
  42a443:	add    eax,edx
  42a445:	lea    edx,[rax*4+0x0]
  42a44c:	add    eax,edx
  42a44e:	shl    eax,0x2
  42a451:	sub    ecx,eax
  42a453:	mov    edx,ecx
  42a455:	movzx  eax,dx
  42a458:	add    eax,eax
  42a45a:	movsxd rdx,eax
  42a45d:	lea    rax,[rip+0x1165c]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a464:	add    rax,rdx
  42a467:	mov    QWORD PTR [rbp-0x8],rax
  42a46b:	movzx  eax,WORD PTR [rbp-0x14]
  42a46f:	shr    ax,0x2
  42a473:	movzx  eax,ax
  42a476:	imul   eax,eax,0x147b
  42a47c:	shr    eax,0x10
  42a47f:	shr    ax,1
  42a482:	mov    WORD PTR [rbp-0x14],ax
  42a486:	mov    rax,QWORD PTR [rbp-0x8]
  42a48a:	movzx  eax,WORD PTR [rax]
  42a48d:	mov    rdx,QWORD PTR [rbp-0x20]
  42a491:	mov    WORD PTR [rdx],ax
  42a494:	sub    QWORD PTR [rbp-0x20],0x2
  42a499:	movzx  ecx,WORD PTR [rbp-0x14]
  42a49d:	mov    eax,ecx
  42a49f:	shr    ax,0x2
  42a4a3:	movzx  eax,ax
  42a4a6:	imul   eax,eax,0x147b
  42a4ac:	shr    eax,0x10
  42a4af:	mov    edx,eax
  42a4b1:	shr    dx,1
  42a4b4:	mov    eax,edx
  42a4b6:	shl    eax,0x2
  42a4b9:	add    eax,edx
  42a4bb:	lea    edx,[rax*4+0x0]
  42a4c2:	add    eax,edx
  42a4c4:	shl    eax,0x2
  42a4c7:	sub    ecx,eax
  42a4c9:	mov    edx,ecx
  42a4cb:	movzx  eax,dx
  42a4ce:	add    eax,eax
  42a4d0:	movsxd rdx,eax
  42a4d3:	lea    rax,[rip+0x115e6]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a4da:	add    rax,rdx
  42a4dd:	mov    QWORD PTR [rbp-0x8],rax
  42a4e1:	movzx  eax,WORD PTR [rbp-0x14]
  42a4e5:	shr    ax,0x2
  42a4e9:	movzx  eax,ax
  42a4ec:	imul   eax,eax,0x147b
  42a4f2:	shr    eax,0x10
  42a4f5:	shr    ax,1
  42a4f8:	mov    WORD PTR [rbp-0x14],ax
  42a4fc:	mov    rax,QWORD PTR [rbp-0x8]
  42a500:	movzx  eax,WORD PTR [rax]
  42a503:	mov    rdx,QWORD PTR [rbp-0x20]
  42a507:	mov    WORD PTR [rdx],ax
  42a50a:	movzx  eax,WORD PTR [rbp-0x14]
  42a50e:	add    eax,0x30
  42a511:	mov    rdx,QWORD PTR [rbp-0x20]
  42a515:	dec    rdx
  42a518:	mov    BYTE PTR [rdx],al
  42a51a:	jmp    42a61f <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42a51f:	cmp    DWORD PTR [rbp-0xc],0x2
  42a523:	je     42a5a9 <flatcc_json_parser_struct_as_root@@Base+0x874>
  42a529:	cmp    DWORD PTR [rbp-0xc],0x4
  42a52d:	jne    42a61f <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42a533:	sub    QWORD PTR [rbp-0x20],0x2
  42a538:	movzx  ecx,WORD PTR [rbp-0x14]
  42a53c:	mov    eax,ecx
  42a53e:	shr    ax,0x2
  42a542:	movzx  eax,ax
  42a545:	imul   eax,eax,0x147b
  42a54b:	shr    eax,0x10
  42a54e:	mov    edx,eax
  42a550:	shr    dx,1
  42a553:	mov    eax,edx
  42a555:	shl    eax,0x2
  42a558:	add    eax,edx
  42a55a:	lea    edx,[rax*4+0x0]
  42a561:	add    eax,edx
  42a563:	shl    eax,0x2
  42a566:	sub    ecx,eax
  42a568:	mov    edx,ecx
  42a56a:	movzx  eax,dx
  42a56d:	add    eax,eax
  42a56f:	movsxd rdx,eax
  42a572:	lea    rax,[rip+0x11547]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a579:	add    rax,rdx
  42a57c:	mov    QWORD PTR [rbp-0x8],rax
  42a580:	movzx  eax,WORD PTR [rbp-0x14]
  42a584:	shr    ax,0x2
  42a588:	movzx  eax,ax
  42a58b:	imul   eax,eax,0x147b
  42a591:	shr    eax,0x10
  42a594:	shr    ax,1
  42a597:	mov    WORD PTR [rbp-0x14],ax
  42a59b:	mov    rax,QWORD PTR [rbp-0x8]
  42a59f:	movzx  eax,WORD PTR [rax]
  42a5a2:	mov    rdx,QWORD PTR [rbp-0x20]
  42a5a6:	mov    WORD PTR [rdx],ax
  42a5a9:	sub    QWORD PTR [rbp-0x20],0x2
  42a5ae:	movzx  ecx,WORD PTR [rbp-0x14]
  42a5b2:	mov    eax,ecx
  42a5b4:	shr    ax,0x2
  42a5b8:	movzx  eax,ax
  42a5bb:	imul   eax,eax,0x147b
  42a5c1:	shr    eax,0x10
  42a5c4:	mov    edx,eax
  42a5c6:	shr    dx,1
  42a5c9:	mov    eax,edx
  42a5cb:	shl    eax,0x2
  42a5ce:	add    eax,edx
  42a5d0:	lea    edx,[rax*4+0x0]
  42a5d7:	add    eax,edx
  42a5d9:	shl    eax,0x2
  42a5dc:	sub    ecx,eax
  42a5de:	mov    edx,ecx
  42a5e0:	movzx  eax,dx
  42a5e3:	add    eax,eax
  42a5e5:	movsxd rdx,eax
  42a5e8:	lea    rax,[rip+0x114d1]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a5ef:	add    rax,rdx
  42a5f2:	mov    QWORD PTR [rbp-0x8],rax
  42a5f6:	movzx  eax,WORD PTR [rbp-0x14]
  42a5fa:	shr    ax,0x2
  42a5fe:	movzx  eax,ax
  42a601:	imul   eax,eax,0x147b
  42a607:	shr    eax,0x10
  42a60a:	shr    ax,1
  42a60d:	mov    WORD PTR [rbp-0x14],ax
  42a611:	mov    rax,QWORD PTR [rbp-0x8]
  42a615:	movzx  eax,WORD PTR [rax]
  42a618:	mov    rdx,QWORD PTR [rbp-0x20]
  42a61c:	mov    WORD PTR [rdx],ax
  42a61f:	mov    eax,DWORD PTR [rbp-0xc]
  42a622:	pop    rbp
  42a623:	ret    
  42a624:	endbr64 
  42a628:	push   rbp
  42a629:	mov    rbp,rsp
  42a62c:	mov    DWORD PTR [rbp-0x14],edi
  42a62f:	mov    QWORD PTR [rbp-0x20],rsi
  42a633:	mov    DWORD PTR [rbp-0xc],0x0
  42a63a:	cmp    DWORD PTR [rbp-0x14],0x270f
  42a641:	jbe    42a6a6 <flatcc_json_parser_struct_as_root@@Base+0x971>
  42a643:	cmp    DWORD PTR [rbp-0x14],0x98967f
  42a64a:	jbe    42a679 <flatcc_json_parser_struct_as_root@@Base+0x944>
  42a64c:	cmp    DWORD PTR [rbp-0x14],0x3b9ac9ff
  42a653:	jbe    42a65e <flatcc_json_parser_struct_as_root@@Base+0x929>
  42a655:	mov    DWORD PTR [rbp-0xc],0xa
  42a65c:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a65e:	cmp    DWORD PTR [rbp-0x14],0x5f5e0ff
  42a665:	jbe    42a670 <flatcc_json_parser_struct_as_root@@Base+0x93b>
  42a667:	mov    DWORD PTR [rbp-0xc],0x9
  42a66e:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a670:	mov    DWORD PTR [rbp-0xc],0x8
  42a677:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a679:	cmp    DWORD PTR [rbp-0x14],0xf423f
  42a680:	jbe    42a68b <flatcc_json_parser_struct_as_root@@Base+0x956>
  42a682:	mov    DWORD PTR [rbp-0xc],0x7
  42a689:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a68b:	cmp    DWORD PTR [rbp-0x14],0x1869f
  42a692:	jbe    42a69d <flatcc_json_parser_struct_as_root@@Base+0x968>
  42a694:	mov    DWORD PTR [rbp-0xc],0x6
  42a69b:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a69d:	mov    DWORD PTR [rbp-0xc],0x5
  42a6a4:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a6a6:	cmp    DWORD PTR [rbp-0x14],0x63
  42a6aa:	jbe    42a6c7 <flatcc_json_parser_struct_as_root@@Base+0x992>
  42a6ac:	cmp    DWORD PTR [rbp-0x14],0x3e7
  42a6b3:	jbe    42a6be <flatcc_json_parser_struct_as_root@@Base+0x989>
  42a6b5:	mov    DWORD PTR [rbp-0xc],0x4
  42a6bc:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a6be:	mov    DWORD PTR [rbp-0xc],0x3
  42a6c5:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a6c7:	cmp    DWORD PTR [rbp-0x14],0x9
  42a6cb:	jbe    42a6d6 <flatcc_json_parser_struct_as_root@@Base+0x9a1>
  42a6cd:	mov    DWORD PTR [rbp-0xc],0x2
  42a6d4:	jmp    42a6dd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42a6d6:	mov    DWORD PTR [rbp-0xc],0x1
  42a6dd:	mov    eax,DWORD PTR [rbp-0xc]
  42a6e0:	cdqe   
  42a6e2:	add    QWORD PTR [rbp-0x20],rax
  42a6e6:	mov    rax,QWORD PTR [rbp-0x20]
  42a6ea:	mov    BYTE PTR [rax],0x0
  42a6ed:	mov    eax,DWORD PTR [rbp-0xc]
  42a6f0:	and    eax,0x1
  42a6f3:	test   eax,eax
  42a6f5:	je     42a87a <flatcc_json_parser_struct_as_root@@Base+0xb45>
  42a6fb:	cmp    DWORD PTR [rbp-0xc],0x9
  42a6ff:	ja     42aa34 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42a705:	mov    eax,DWORD PTR [rbp-0xc]
  42a708:	lea    rdx,[rax*4+0x0]
  42a710:	lea    rax,[rip+0x11481]        # 43bb98 <flatcc_builder_padding_base@@Base+0x2938>
  42a717:	mov    eax,DWORD PTR [rdx+rax*1]
  42a71a:	movsxd rdx,eax
  42a71d:	lea    rax,[rip+0x11474]        # 43bb98 <flatcc_builder_padding_base@@Base+0x2938>
  42a724:	add    rax,rdx
  42a727:	notrack jmp rax
  42a72a:	sub    QWORD PTR [rbp-0x20],0x2
  42a72f:	mov    ecx,DWORD PTR [rbp-0x14]
  42a732:	mov    edx,0x51eb851f
  42a737:	mov    eax,ecx
  42a739:	mul    edx
  42a73b:	mov    eax,edx
  42a73d:	shr    eax,0x5
  42a740:	imul   eax,eax,0x64
  42a743:	sub    ecx,eax
  42a745:	mov    eax,ecx
  42a747:	add    eax,eax
  42a749:	mov    edx,eax
  42a74b:	lea    rax,[rip+0x1136e]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a752:	add    rax,rdx
  42a755:	mov    QWORD PTR [rbp-0x8],rax
  42a759:	mov    eax,DWORD PTR [rbp-0x14]
  42a75c:	mov    edx,0x51eb851f
  42a761:	mul    edx
  42a763:	mov    eax,edx
  42a765:	shr    eax,0x5
  42a768:	mov    DWORD PTR [rbp-0x14],eax
  42a76b:	mov    rax,QWORD PTR [rbp-0x8]
  42a76f:	movzx  eax,WORD PTR [rax]
  42a772:	mov    rdx,QWORD PTR [rbp-0x20]
  42a776:	mov    WORD PTR [rdx],ax
  42a779:	sub    QWORD PTR [rbp-0x20],0x2
  42a77e:	mov    ecx,DWORD PTR [rbp-0x14]
  42a781:	mov    edx,0x51eb851f
  42a786:	mov    eax,ecx
  42a788:	mul    edx
  42a78a:	mov    eax,edx
  42a78c:	shr    eax,0x5
  42a78f:	imul   eax,eax,0x64
  42a792:	sub    ecx,eax
  42a794:	mov    eax,ecx
  42a796:	add    eax,eax
  42a798:	mov    edx,eax
  42a79a:	lea    rax,[rip+0x1131f]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a7a1:	add    rax,rdx
  42a7a4:	mov    QWORD PTR [rbp-0x8],rax
  42a7a8:	mov    eax,DWORD PTR [rbp-0x14]
  42a7ab:	mov    edx,0x51eb851f
  42a7b0:	mul    edx
  42a7b2:	mov    eax,edx
  42a7b4:	shr    eax,0x5
  42a7b7:	mov    DWORD PTR [rbp-0x14],eax
  42a7ba:	mov    rax,QWORD PTR [rbp-0x8]
  42a7be:	movzx  eax,WORD PTR [rax]
  42a7c1:	mov    rdx,QWORD PTR [rbp-0x20]
  42a7c5:	mov    WORD PTR [rdx],ax
  42a7c8:	sub    QWORD PTR [rbp-0x20],0x2
  42a7cd:	mov    ecx,DWORD PTR [rbp-0x14]
  42a7d0:	mov    edx,0x51eb851f
  42a7d5:	mov    eax,ecx
  42a7d7:	mul    edx
  42a7d9:	mov    eax,edx
  42a7db:	shr    eax,0x5
  42a7de:	imul   eax,eax,0x64
  42a7e1:	sub    ecx,eax
  42a7e3:	mov    eax,ecx
  42a7e5:	add    eax,eax
  42a7e7:	mov    edx,eax
  42a7e9:	lea    rax,[rip+0x112d0]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a7f0:	add    rax,rdx
  42a7f3:	mov    QWORD PTR [rbp-0x8],rax
  42a7f7:	mov    eax,DWORD PTR [rbp-0x14]
  42a7fa:	mov    edx,0x51eb851f
  42a7ff:	mul    edx
  42a801:	mov    eax,edx
  42a803:	shr    eax,0x5
  42a806:	mov    DWORD PTR [rbp-0x14],eax
  42a809:	mov    rax,QWORD PTR [rbp-0x8]
  42a80d:	movzx  eax,WORD PTR [rax]
  42a810:	mov    rdx,QWORD PTR [rbp-0x20]
  42a814:	mov    WORD PTR [rdx],ax
  42a817:	sub    QWORD PTR [rbp-0x20],0x2
  42a81c:	mov    ecx,DWORD PTR [rbp-0x14]
  42a81f:	mov    edx,0x51eb851f
  42a824:	mov    eax,ecx
  42a826:	mul    edx
  42a828:	mov    eax,edx
  42a82a:	shr    eax,0x5
  42a82d:	imul   eax,eax,0x64
  42a830:	sub    ecx,eax
  42a832:	mov    eax,ecx
  42a834:	add    eax,eax
  42a836:	mov    edx,eax
  42a838:	lea    rax,[rip+0x11281]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a83f:	add    rax,rdx
  42a842:	mov    QWORD PTR [rbp-0x8],rax
  42a846:	mov    eax,DWORD PTR [rbp-0x14]
  42a849:	mov    edx,0x51eb851f
  42a84e:	mul    edx
  42a850:	mov    eax,edx
  42a852:	shr    eax,0x5
  42a855:	mov    DWORD PTR [rbp-0x14],eax
  42a858:	mov    rax,QWORD PTR [rbp-0x8]
  42a85c:	movzx  eax,WORD PTR [rax]
  42a85f:	mov    rdx,QWORD PTR [rbp-0x20]
  42a863:	mov    WORD PTR [rdx],ax
  42a866:	mov    eax,DWORD PTR [rbp-0x14]
  42a869:	add    eax,0x30
  42a86c:	mov    rdx,QWORD PTR [rbp-0x20]
  42a870:	dec    rdx
  42a873:	mov    BYTE PTR [rdx],al
  42a875:	jmp    42aa34 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42a87a:	cmp    DWORD PTR [rbp-0xc],0xa
  42a87e:	ja     42aa34 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42a884:	mov    eax,DWORD PTR [rbp-0xc]
  42a887:	lea    rdx,[rax*4+0x0]
  42a88f:	lea    rax,[rip+0x1132a]        # 43bbc0 <flatcc_builder_padding_base@@Base+0x2960>
  42a896:	mov    eax,DWORD PTR [rdx+rax*1]
  42a899:	movsxd rdx,eax
  42a89c:	lea    rax,[rip+0x1131d]        # 43bbc0 <flatcc_builder_padding_base@@Base+0x2960>
  42a8a3:	add    rax,rdx
  42a8a6:	notrack jmp rax
  42a8a9:	sub    QWORD PTR [rbp-0x20],0x2
  42a8ae:	mov    ecx,DWORD PTR [rbp-0x14]
  42a8b1:	mov    edx,0x51eb851f
  42a8b6:	mov    eax,ecx
  42a8b8:	mul    edx
  42a8ba:	mov    eax,edx
  42a8bc:	shr    eax,0x5
  42a8bf:	imul   eax,eax,0x64
  42a8c2:	sub    ecx,eax
  42a8c4:	mov    eax,ecx
  42a8c6:	add    eax,eax
  42a8c8:	mov    edx,eax
  42a8ca:	lea    rax,[rip+0x111ef]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a8d1:	add    rax,rdx
  42a8d4:	mov    QWORD PTR [rbp-0x8],rax
  42a8d8:	mov    eax,DWORD PTR [rbp-0x14]
  42a8db:	mov    edx,0x51eb851f
  42a8e0:	mul    edx
  42a8e2:	mov    eax,edx
  42a8e4:	shr    eax,0x5
  42a8e7:	mov    DWORD PTR [rbp-0x14],eax
  42a8ea:	mov    rax,QWORD PTR [rbp-0x8]
  42a8ee:	movzx  eax,WORD PTR [rax]
  42a8f1:	mov    rdx,QWORD PTR [rbp-0x20]
  42a8f5:	mov    WORD PTR [rdx],ax
  42a8f8:	sub    QWORD PTR [rbp-0x20],0x2
  42a8fd:	mov    ecx,DWORD PTR [rbp-0x14]
  42a900:	mov    edx,0x51eb851f
  42a905:	mov    eax,ecx
  42a907:	mul    edx
  42a909:	mov    eax,edx
  42a90b:	shr    eax,0x5
  42a90e:	imul   eax,eax,0x64
  42a911:	sub    ecx,eax
  42a913:	mov    eax,ecx
  42a915:	add    eax,eax
  42a917:	mov    edx,eax
  42a919:	lea    rax,[rip+0x111a0]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a920:	add    rax,rdx
  42a923:	mov    QWORD PTR [rbp-0x8],rax
  42a927:	mov    eax,DWORD PTR [rbp-0x14]
  42a92a:	mov    edx,0x51eb851f
  42a92f:	mul    edx
  42a931:	mov    eax,edx
  42a933:	shr    eax,0x5
  42a936:	mov    DWORD PTR [rbp-0x14],eax
  42a939:	mov    rax,QWORD PTR [rbp-0x8]
  42a93d:	movzx  eax,WORD PTR [rax]
  42a940:	mov    rdx,QWORD PTR [rbp-0x20]
  42a944:	mov    WORD PTR [rdx],ax
  42a947:	sub    QWORD PTR [rbp-0x20],0x2
  42a94c:	mov    ecx,DWORD PTR [rbp-0x14]
  42a94f:	mov    edx,0x51eb851f
  42a954:	mov    eax,ecx
  42a956:	mul    edx
  42a958:	mov    eax,edx
  42a95a:	shr    eax,0x5
  42a95d:	imul   eax,eax,0x64
  42a960:	sub    ecx,eax
  42a962:	mov    eax,ecx
  42a964:	add    eax,eax
  42a966:	mov    edx,eax
  42a968:	lea    rax,[rip+0x11151]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a96f:	add    rax,rdx
  42a972:	mov    QWORD PTR [rbp-0x8],rax
  42a976:	mov    eax,DWORD PTR [rbp-0x14]
  42a979:	mov    edx,0x51eb851f
  42a97e:	mul    edx
  42a980:	mov    eax,edx
  42a982:	shr    eax,0x5
  42a985:	mov    DWORD PTR [rbp-0x14],eax
  42a988:	mov    rax,QWORD PTR [rbp-0x8]
  42a98c:	movzx  eax,WORD PTR [rax]
  42a98f:	mov    rdx,QWORD PTR [rbp-0x20]
  42a993:	mov    WORD PTR [rdx],ax
  42a996:	sub    QWORD PTR [rbp-0x20],0x2
  42a99b:	mov    ecx,DWORD PTR [rbp-0x14]
  42a99e:	mov    edx,0x51eb851f
  42a9a3:	mov    eax,ecx
  42a9a5:	mul    edx
  42a9a7:	mov    eax,edx
  42a9a9:	shr    eax,0x5
  42a9ac:	imul   eax,eax,0x64
  42a9af:	sub    ecx,eax
  42a9b1:	mov    eax,ecx
  42a9b3:	add    eax,eax
  42a9b5:	mov    edx,eax
  42a9b7:	lea    rax,[rip+0x11102]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a9be:	add    rax,rdx
  42a9c1:	mov    QWORD PTR [rbp-0x8],rax
  42a9c5:	mov    eax,DWORD PTR [rbp-0x14]
  42a9c8:	mov    edx,0x51eb851f
  42a9cd:	mul    edx
  42a9cf:	mov    eax,edx
  42a9d1:	shr    eax,0x5
  42a9d4:	mov    DWORD PTR [rbp-0x14],eax
  42a9d7:	mov    rax,QWORD PTR [rbp-0x8]
  42a9db:	movzx  eax,WORD PTR [rax]
  42a9de:	mov    rdx,QWORD PTR [rbp-0x20]
  42a9e2:	mov    WORD PTR [rdx],ax
  42a9e5:	sub    QWORD PTR [rbp-0x20],0x2
  42a9ea:	mov    ecx,DWORD PTR [rbp-0x14]
  42a9ed:	mov    edx,0x51eb851f
  42a9f2:	mov    eax,ecx
  42a9f4:	mul    edx
  42a9f6:	mov    eax,edx
  42a9f8:	shr    eax,0x5
  42a9fb:	imul   eax,eax,0x64
  42a9fe:	sub    ecx,eax
  42aa00:	mov    eax,ecx
  42aa02:	add    eax,eax
  42aa04:	mov    edx,eax
  42aa06:	lea    rax,[rip+0x110b3]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42aa0d:	add    rax,rdx
  42aa10:	mov    QWORD PTR [rbp-0x8],rax
  42aa14:	mov    eax,DWORD PTR [rbp-0x14]
  42aa17:	mov    edx,0x51eb851f
  42aa1c:	mul    edx
  42aa1e:	mov    eax,edx
  42aa20:	shr    eax,0x5
  42aa23:	mov    DWORD PTR [rbp-0x14],eax
  42aa26:	mov    rax,QWORD PTR [rbp-0x8]
  42aa2a:	movzx  eax,WORD PTR [rax]
  42aa2d:	mov    rdx,QWORD PTR [rbp-0x20]
  42aa31:	mov    WORD PTR [rdx],ax
  42aa34:	mov    eax,DWORD PTR [rbp-0xc]
  42aa37:	pop    rbp
  42aa38:	ret    
  42aa39:	endbr64 
  42aa3d:	push   rbp
  42aa3e:	mov    rbp,rsp
  42aa41:	sub    rsp,0x30
  42aa45:	mov    QWORD PTR [rbp-0x28],rdi
  42aa49:	mov    QWORD PTR [rbp-0x30],rsi
  42aa4d:	mov    DWORD PTR [rbp-0x14],0x0
  42aa54:	mov    QWORD PTR [rbp-0x10],0x3b9aca00
  42aa5c:	mov    rax,QWORD PTR [rbp-0x28]
  42aa60:	cmp    rax,QWORD PTR [rbp-0x10]
  42aa64:	jae    42aa7f <flatcc_json_parser_struct_as_root@@Base+0xd4a>
  42aa66:	mov    rax,QWORD PTR [rbp-0x28]
  42aa6a:	mov    edx,eax
  42aa6c:	mov    rax,QWORD PTR [rbp-0x30]
  42aa70:	mov    rsi,rax
  42aa73:	mov    edi,edx
  42aa75:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42aa7a:	jmp    42b2fa <flatcc_json_parser_struct_as_root@@Base+0x15c5>
  42aa7f:	mov    rax,QWORD PTR [rbp-0x10]
  42aa83:	imul   rax,rax,0x2710
  42aa8a:	cmp    QWORD PTR [rbp-0x28],rax
  42aa8e:	jb     42ab4c <flatcc_json_parser_struct_as_root@@Base+0xe17>
  42aa94:	mov    rax,QWORD PTR [rbp-0x10]
  42aa98:	imul   rax,rax,0x989680
  42aa9f:	cmp    QWORD PTR [rbp-0x28],rax
  42aaa3:	jb     42ab0f <flatcc_json_parser_struct_as_root@@Base+0xdda>
  42aaa5:	mov    rax,QWORD PTR [rbp-0x10]
  42aaa9:	imul   rax,rax,0x3b9aca00
  42aab0:	cmp    QWORD PTR [rbp-0x28],rax
  42aab4:	jb     42aae6 <flatcc_json_parser_struct_as_root@@Base+0xdb1>
  42aab6:	mov    rdx,QWORD PTR [rbp-0x10]
  42aaba:	movabs rax,0x2540be400
  42aac4:	imul   rax,rdx
  42aac8:	cmp    QWORD PTR [rbp-0x28],rax
  42aacc:	jb     42aada <flatcc_json_parser_struct_as_root@@Base+0xda5>
  42aace:	mov    DWORD PTR [rbp-0x14],0x14
  42aad5:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42aada:	mov    DWORD PTR [rbp-0x14],0x13
  42aae1:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42aae6:	mov    rax,QWORD PTR [rbp-0x10]
  42aaea:	imul   rax,rax,0x5f5e100
  42aaf1:	cmp    QWORD PTR [rbp-0x28],rax
  42aaf5:	jb     42ab03 <flatcc_json_parser_struct_as_root@@Base+0xdce>
  42aaf7:	mov    DWORD PTR [rbp-0x14],0x12
  42aafe:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab03:	mov    DWORD PTR [rbp-0x14],0x11
  42ab0a:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab0f:	mov    rax,QWORD PTR [rbp-0x10]
  42ab13:	imul   rax,rax,0xf4240
  42ab1a:	cmp    QWORD PTR [rbp-0x28],rax
  42ab1e:	jb     42ab29 <flatcc_json_parser_struct_as_root@@Base+0xdf4>
  42ab20:	mov    DWORD PTR [rbp-0x14],0x10
  42ab27:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab29:	mov    rax,QWORD PTR [rbp-0x10]
  42ab2d:	imul   rax,rax,0x186a0
  42ab34:	cmp    QWORD PTR [rbp-0x28],rax
  42ab38:	jb     42ab43 <flatcc_json_parser_struct_as_root@@Base+0xe0e>
  42ab3a:	mov    DWORD PTR [rbp-0x14],0xf
  42ab41:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab43:	mov    DWORD PTR [rbp-0x14],0xe
  42ab4a:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab4c:	mov    rax,QWORD PTR [rbp-0x10]
  42ab50:	imul   rax,rax,0x64
  42ab54:	cmp    QWORD PTR [rbp-0x28],rax
  42ab58:	jb     42ab7d <flatcc_json_parser_struct_as_root@@Base+0xe48>
  42ab5a:	mov    rax,QWORD PTR [rbp-0x10]
  42ab5e:	imul   rax,rax,0x3e8
  42ab65:	cmp    QWORD PTR [rbp-0x28],rax
  42ab69:	jb     42ab74 <flatcc_json_parser_struct_as_root@@Base+0xe3f>
  42ab6b:	mov    DWORD PTR [rbp-0x14],0xd
  42ab72:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab74:	mov    DWORD PTR [rbp-0x14],0xc
  42ab7b:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab7d:	mov    rdx,QWORD PTR [rbp-0x10]
  42ab81:	mov    rax,rdx
  42ab84:	shl    rax,0x2
  42ab88:	add    rax,rdx
  42ab8b:	add    rax,rax
  42ab8e:	cmp    QWORD PTR [rbp-0x28],rax
  42ab92:	jb     42ab9d <flatcc_json_parser_struct_as_root@@Base+0xe68>
  42ab94:	mov    DWORD PTR [rbp-0x14],0xb
  42ab9b:	jmp    42aba4 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42ab9d:	mov    DWORD PTR [rbp-0x14],0xa
  42aba4:	mov    eax,DWORD PTR [rbp-0x14]
  42aba7:	cdqe   
  42aba9:	add    QWORD PTR [rbp-0x30],rax
  42abad:	mov    rax,QWORD PTR [rbp-0x30]
  42abb1:	mov    BYTE PTR [rax],0x0
  42abb4:	mov    eax,DWORD PTR [rbp-0x14]
  42abb7:	and    eax,0x1
  42abba:	test   eax,eax
  42abbc:	je     42ae78 <flatcc_json_parser_struct_as_root@@Base+0x1143>
  42abc2:	mov    eax,DWORD PTR [rbp-0x14]
  42abc5:	sub    eax,0xb
  42abc8:	cmp    eax,0x8
  42abcb:	ja     42b13f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42abd1:	mov    eax,eax
  42abd3:	lea    rdx,[rax*4+0x0]
  42abdb:	lea    rax,[rip+0x1100a]        # 43bbec <flatcc_builder_padding_base@@Base+0x298c>
  42abe2:	mov    eax,DWORD PTR [rdx+rax*1]
  42abe5:	movsxd rdx,eax
  42abe8:	lea    rax,[rip+0x10ffd]        # 43bbec <flatcc_builder_padding_base@@Base+0x298c>
  42abef:	add    rax,rdx
  42abf2:	notrack jmp rax
  42abf5:	sub    QWORD PTR [rbp-0x30],0x2
  42abfa:	mov    rcx,QWORD PTR [rbp-0x28]
  42abfe:	mov    rax,rcx
  42ac01:	shr    rax,0x2
  42ac05:	movabs rdx,0x28f5c28f5c28f5c3
  42ac0f:	mul    rdx
  42ac12:	mov    rax,rdx
  42ac15:	shr    rax,0x2
  42ac19:	imul   rax,rax,0x64
  42ac1d:	sub    rcx,rax
  42ac20:	mov    rax,rcx
  42ac23:	lea    rdx,[rax+rax*1]
  42ac27:	lea    rax,[rip+0x10e92]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42ac2e:	add    rax,rdx
  42ac31:	mov    QWORD PTR [rbp-0x8],rax
  42ac35:	mov    rax,QWORD PTR [rbp-0x28]
  42ac39:	shr    rax,0x2
  42ac3d:	movabs rdx,0x28f5c28f5c28f5c3
  42ac47:	mul    rdx
  42ac4a:	mov    rax,rdx
  42ac4d:	shr    rax,0x2
  42ac51:	mov    QWORD PTR [rbp-0x28],rax
  42ac55:	mov    rax,QWORD PTR [rbp-0x8]
  42ac59:	movzx  eax,WORD PTR [rax]
  42ac5c:	mov    rdx,QWORD PTR [rbp-0x30]
  42ac60:	mov    WORD PTR [rdx],ax
  42ac63:	sub    QWORD PTR [rbp-0x30],0x2
  42ac68:	mov    rcx,QWORD PTR [rbp-0x28]
  42ac6c:	mov    rax,rcx
  42ac6f:	shr    rax,0x2
  42ac73:	movabs rdx,0x28f5c28f5c28f5c3
  42ac7d:	mul    rdx
  42ac80:	mov    rax,rdx
  42ac83:	shr    rax,0x2
  42ac87:	imul   rax,rax,0x64
  42ac8b:	sub    rcx,rax
  42ac8e:	mov    rax,rcx
  42ac91:	lea    rdx,[rax+rax*1]
  42ac95:	lea    rax,[rip+0x10e24]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42ac9c:	add    rax,rdx
  42ac9f:	mov    QWORD PTR [rbp-0x8],rax
  42aca3:	mov    rax,QWORD PTR [rbp-0x28]
  42aca7:	shr    rax,0x2
  42acab:	movabs rdx,0x28f5c28f5c28f5c3
  42acb5:	mul    rdx
  42acb8:	mov    rax,rdx
  42acbb:	shr    rax,0x2
  42acbf:	mov    QWORD PTR [rbp-0x28],rax
  42acc3:	mov    rax,QWORD PTR [rbp-0x8]
  42acc7:	movzx  eax,WORD PTR [rax]
  42acca:	mov    rdx,QWORD PTR [rbp-0x30]
  42acce:	mov    WORD PTR [rdx],ax
  42acd1:	sub    QWORD PTR [rbp-0x30],0x2
  42acd6:	mov    rcx,QWORD PTR [rbp-0x28]
  42acda:	mov    rax,rcx
  42acdd:	shr    rax,0x2
  42ace1:	movabs rdx,0x28f5c28f5c28f5c3
  42aceb:	mul    rdx
  42acee:	mov    rax,rdx
  42acf1:	shr    rax,0x2
  42acf5:	imul   rax,rax,0x64
  42acf9:	sub    rcx,rax
  42acfc:	mov    rax,rcx
  42acff:	lea    rdx,[rax+rax*1]
  42ad03:	lea    rax,[rip+0x10db6]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42ad0a:	add    rax,rdx
  42ad0d:	mov    QWORD PTR [rbp-0x8],rax
  42ad11:	mov    rax,QWORD PTR [rbp-0x28]
  42ad15:	shr    rax,0x2
  42ad19:	movabs rdx,0x28f5c28f5c28f5c3
  42ad23:	mul    rdx
  42ad26:	mov    rax,rdx
  42ad29:	shr    rax,0x2
  42ad2d:	mov    QWORD PTR [rbp-0x28],rax
  42ad31:	mov    rax,QWORD PTR [rbp-0x8]
  42ad35:	movzx  eax,WORD PTR [rax]
  42ad38:	mov    rdx,QWORD PTR [rbp-0x30]
  42ad3c:	mov    WORD PTR [rdx],ax
  42ad3f:	sub    QWORD PTR [rbp-0x30],0x2
  42ad44:	mov    rcx,QWORD PTR [rbp-0x28]
  42ad48:	mov    rax,rcx
  42ad4b:	shr    rax,0x2
  42ad4f:	movabs rdx,0x28f5c28f5c28f5c3
  42ad59:	mul    rdx
  42ad5c:	mov    rax,rdx
  42ad5f:	shr    rax,0x2
  42ad63:	imul   rax,rax,0x64
  42ad67:	sub    rcx,rax
  42ad6a:	mov    rax,rcx
  42ad6d:	lea    rdx,[rax+rax*1]
  42ad71:	lea    rax,[rip+0x10d48]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42ad78:	add    rax,rdx
  42ad7b:	mov    QWORD PTR [rbp-0x8],rax
  42ad7f:	mov    rax,QWORD PTR [rbp-0x28]
  42ad83:	shr    rax,0x2
  42ad87:	movabs rdx,0x28f5c28f5c28f5c3
  42ad91:	mul    rdx
  42ad94:	mov    rax,rdx
  42ad97:	shr    rax,0x2
  42ad9b:	mov    QWORD PTR [rbp-0x28],rax
  42ad9f:	mov    rax,QWORD PTR [rbp-0x8]
  42ada3:	movzx  eax,WORD PTR [rax]
  42ada6:	mov    rdx,QWORD PTR [rbp-0x30]
  42adaa:	mov    WORD PTR [rdx],ax
  42adad:	sub    QWORD PTR [rbp-0x30],0x2
  42adb2:	mov    rcx,QWORD PTR [rbp-0x28]
  42adb6:	mov    rax,rcx
  42adb9:	shr    rax,0x2
  42adbd:	movabs rdx,0x28f5c28f5c28f5c3
  42adc7:	mul    rdx
  42adca:	mov    rax,rdx
  42adcd:	shr    rax,0x2
  42add1:	imul   rax,rax,0x64
  42add5:	sub    rcx,rax
  42add8:	mov    rax,rcx
  42addb:	lea    rdx,[rax+rax*1]
  42addf:	lea    rax,[rip+0x10cda]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42ade6:	add    rax,rdx
  42ade9:	mov    QWORD PTR [rbp-0x8],rax
  42aded:	mov    rax,QWORD PTR [rbp-0x28]
  42adf1:	shr    rax,0x2
  42adf5:	movabs rdx,0x28f5c28f5c28f5c3
  42adff:	mul    rdx
  42ae02:	mov    rax,rdx
  42ae05:	shr    rax,0x2
  42ae09:	mov    QWORD PTR [rbp-0x28],rax
  42ae0d:	mov    rax,QWORD PTR [rbp-0x8]
  42ae11:	movzx  eax,WORD PTR [rax]
  42ae14:	mov    rdx,QWORD PTR [rbp-0x30]
  42ae18:	mov    WORD PTR [rdx],ax
  42ae1b:	mov    rcx,QWORD PTR [rbp-0x28]
  42ae1f:	movabs rdx,0xcccccccccccccccd
  42ae29:	mov    rax,rcx
  42ae2c:	mul    rdx
  42ae2f:	shr    rdx,0x3
  42ae33:	mov    rax,rdx
  42ae36:	shl    rax,0x2
  42ae3a:	add    rax,rdx
  42ae3d:	add    rax,rax
  42ae40:	sub    rcx,rax
  42ae43:	mov    rdx,rcx
  42ae46:	mov    eax,edx
  42ae48:	add    eax,0x30
  42ae4b:	dec    QWORD PTR [rbp-0x30]
  42ae4f:	mov    edx,eax
  42ae51:	mov    rax,QWORD PTR [rbp-0x30]
  42ae55:	mov    BYTE PTR [rax],dl
  42ae57:	mov    rax,QWORD PTR [rbp-0x28]
  42ae5b:	movabs rdx,0xcccccccccccccccd
  42ae65:	mul    rdx
  42ae68:	mov    rax,rdx
  42ae6b:	shr    rax,0x3
  42ae6f:	mov    QWORD PTR [rbp-0x28],rax
  42ae73:	jmp    42b13f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42ae78:	mov    eax,DWORD PTR [rbp-0x14]
  42ae7b:	sub    eax,0xa
  42ae7e:	cmp    eax,0xa
  42ae81:	ja     42b13f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42ae87:	mov    eax,eax
  42ae89:	lea    rdx,[rax*4+0x0]
  42ae91:	lea    rax,[rip+0x10d78]        # 43bc10 <flatcc_builder_padding_base@@Base+0x29b0>
  42ae98:	mov    eax,DWORD PTR [rdx+rax*1]
  42ae9b:	movsxd rdx,eax
  42ae9e:	lea    rax,[rip+0x10d6b]        # 43bc10 <flatcc_builder_padding_base@@Base+0x29b0>
  42aea5:	add    rax,rdx
  42aea8:	notrack jmp rax
  42aeab:	sub    QWORD PTR [rbp-0x30],0x2
  42aeb0:	mov    rcx,QWORD PTR [rbp-0x28]
  42aeb4:	mov    rax,rcx
  42aeb7:	shr    rax,0x2
  42aebb:	movabs rdx,0x28f5c28f5c28f5c3
  42aec5:	mul    rdx
  42aec8:	mov    rax,rdx
  42aecb:	shr    rax,0x2
  42aecf:	imul   rax,rax,0x64
  42aed3:	sub    rcx,rax
  42aed6:	mov    rax,rcx
  42aed9:	lea    rdx,[rax+rax*1]
  42aedd:	lea    rax,[rip+0x10bdc]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42aee4:	add    rax,rdx
  42aee7:	mov    QWORD PTR [rbp-0x8],rax
  42aeeb:	mov    rax,QWORD PTR [rbp-0x28]
  42aeef:	shr    rax,0x2
  42aef3:	movabs rdx,0x28f5c28f5c28f5c3
  42aefd:	mul    rdx
  42af00:	mov    rax,rdx
  42af03:	shr    rax,0x2
  42af07:	mov    QWORD PTR [rbp-0x28],rax
  42af0b:	mov    rax,QWORD PTR [rbp-0x8]
  42af0f:	movzx  eax,WORD PTR [rax]
  42af12:	mov    rdx,QWORD PTR [rbp-0x30]
  42af16:	mov    WORD PTR [rdx],ax
  42af19:	sub    QWORD PTR [rbp-0x30],0x2
  42af1e:	mov    rcx,QWORD PTR [rbp-0x28]
  42af22:	mov    rax,rcx
  42af25:	shr    rax,0x2
  42af29:	movabs rdx,0x28f5c28f5c28f5c3
  42af33:	mul    rdx
  42af36:	mov    rax,rdx
  42af39:	shr    rax,0x2
  42af3d:	imul   rax,rax,0x64
  42af41:	sub    rcx,rax
  42af44:	mov    rax,rcx
  42af47:	lea    rdx,[rax+rax*1]
  42af4b:	lea    rax,[rip+0x10b6e]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42af52:	add    rax,rdx
  42af55:	mov    QWORD PTR [rbp-0x8],rax
  42af59:	mov    rax,QWORD PTR [rbp-0x28]
  42af5d:	shr    rax,0x2
  42af61:	movabs rdx,0x28f5c28f5c28f5c3
  42af6b:	mul    rdx
  42af6e:	mov    rax,rdx
  42af71:	shr    rax,0x2
  42af75:	mov    QWORD PTR [rbp-0x28],rax
  42af79:	mov    rax,QWORD PTR [rbp-0x8]
  42af7d:	movzx  eax,WORD PTR [rax]
  42af80:	mov    rdx,QWORD PTR [rbp-0x30]
  42af84:	mov    WORD PTR [rdx],ax
  42af87:	sub    QWORD PTR [rbp-0x30],0x2
  42af8c:	mov    rcx,QWORD PTR [rbp-0x28]
  42af90:	mov    rax,rcx
  42af93:	shr    rax,0x2
  42af97:	movabs rdx,0x28f5c28f5c28f5c3
  42afa1:	mul    rdx
  42afa4:	mov    rax,rdx
  42afa7:	shr    rax,0x2
  42afab:	imul   rax,rax,0x64
  42afaf:	sub    rcx,rax
  42afb2:	mov    rax,rcx
  42afb5:	lea    rdx,[rax+rax*1]
  42afb9:	lea    rax,[rip+0x10b00]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42afc0:	add    rax,rdx
  42afc3:	mov    QWORD PTR [rbp-0x8],rax
  42afc7:	mov    rax,QWORD PTR [rbp-0x28]
  42afcb:	shr    rax,0x2
  42afcf:	movabs rdx,0x28f5c28f5c28f5c3
  42afd9:	mul    rdx
  42afdc:	mov    rax,rdx
  42afdf:	shr    rax,0x2
  42afe3:	mov    QWORD PTR [rbp-0x28],rax
  42afe7:	mov    rax,QWORD PTR [rbp-0x8]
  42afeb:	movzx  eax,WORD PTR [rax]
  42afee:	mov    rdx,QWORD PTR [rbp-0x30]
  42aff2:	mov    WORD PTR [rdx],ax
  42aff5:	sub    QWORD PTR [rbp-0x30],0x2
  42affa:	mov    rcx,QWORD PTR [rbp-0x28]
  42affe:	mov    rax,rcx
  42b001:	shr    rax,0x2
  42b005:	movabs rdx,0x28f5c28f5c28f5c3
  42b00f:	mul    rdx
  42b012:	mov    rax,rdx
  42b015:	shr    rax,0x2
  42b019:	imul   rax,rax,0x64
  42b01d:	sub    rcx,rax
  42b020:	mov    rax,rcx
  42b023:	lea    rdx,[rax+rax*1]
  42b027:	lea    rax,[rip+0x10a92]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b02e:	add    rax,rdx
  42b031:	mov    QWORD PTR [rbp-0x8],rax
  42b035:	mov    rax,QWORD PTR [rbp-0x28]
  42b039:	shr    rax,0x2
  42b03d:	movabs rdx,0x28f5c28f5c28f5c3
  42b047:	mul    rdx
  42b04a:	mov    rax,rdx
  42b04d:	shr    rax,0x2
  42b051:	mov    QWORD PTR [rbp-0x28],rax
  42b055:	mov    rax,QWORD PTR [rbp-0x8]
  42b059:	movzx  eax,WORD PTR [rax]
  42b05c:	mov    rdx,QWORD PTR [rbp-0x30]
  42b060:	mov    WORD PTR [rdx],ax
  42b063:	sub    QWORD PTR [rbp-0x30],0x2
  42b068:	mov    rcx,QWORD PTR [rbp-0x28]
  42b06c:	mov    rax,rcx
  42b06f:	shr    rax,0x2
  42b073:	movabs rdx,0x28f5c28f5c28f5c3
  42b07d:	mul    rdx
  42b080:	mov    rax,rdx
  42b083:	shr    rax,0x2
  42b087:	imul   rax,rax,0x64
  42b08b:	sub    rcx,rax
  42b08e:	mov    rax,rcx
  42b091:	lea    rdx,[rax+rax*1]
  42b095:	lea    rax,[rip+0x10a24]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b09c:	add    rax,rdx
  42b09f:	mov    QWORD PTR [rbp-0x8],rax
  42b0a3:	mov    rax,QWORD PTR [rbp-0x28]
  42b0a7:	shr    rax,0x2
  42b0ab:	movabs rdx,0x28f5c28f5c28f5c3
  42b0b5:	mul    rdx
  42b0b8:	mov    rax,rdx
  42b0bb:	shr    rax,0x2
  42b0bf:	mov    QWORD PTR [rbp-0x28],rax
  42b0c3:	mov    rax,QWORD PTR [rbp-0x8]
  42b0c7:	movzx  eax,WORD PTR [rax]
  42b0ca:	mov    rdx,QWORD PTR [rbp-0x30]
  42b0ce:	mov    WORD PTR [rdx],ax
  42b0d1:	sub    QWORD PTR [rbp-0x30],0x2
  42b0d6:	mov    rcx,QWORD PTR [rbp-0x28]
  42b0da:	mov    rax,rcx
  42b0dd:	shr    rax,0x2
  42b0e1:	movabs rdx,0x28f5c28f5c28f5c3
  42b0eb:	mul    rdx
  42b0ee:	mov    rax,rdx
  42b0f1:	shr    rax,0x2
  42b0f5:	imul   rax,rax,0x64
  42b0f9:	sub    rcx,rax
  42b0fc:	mov    rax,rcx
  42b0ff:	lea    rdx,[rax+rax*1]
  42b103:	lea    rax,[rip+0x109b6]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b10a:	add    rax,rdx
  42b10d:	mov    QWORD PTR [rbp-0x8],rax
  42b111:	mov    rax,QWORD PTR [rbp-0x28]
  42b115:	shr    rax,0x2
  42b119:	movabs rdx,0x28f5c28f5c28f5c3
  42b123:	mul    rdx
  42b126:	mov    rax,rdx
  42b129:	shr    rax,0x2
  42b12d:	mov    QWORD PTR [rbp-0x28],rax
  42b131:	mov    rax,QWORD PTR [rbp-0x8]
  42b135:	movzx  eax,WORD PTR [rax]
  42b138:	mov    rdx,QWORD PTR [rbp-0x30]
  42b13c:	mov    WORD PTR [rdx],ax
  42b13f:	sub    QWORD PTR [rbp-0x30],0x2
  42b144:	mov    rcx,QWORD PTR [rbp-0x28]
  42b148:	mov    rax,rcx
  42b14b:	shr    rax,0x2
  42b14f:	movabs rdx,0x28f5c28f5c28f5c3
  42b159:	mul    rdx
  42b15c:	mov    rax,rdx
  42b15f:	shr    rax,0x2
  42b163:	imul   rax,rax,0x64
  42b167:	sub    rcx,rax
  42b16a:	mov    rax,rcx
  42b16d:	lea    rdx,[rax+rax*1]
  42b171:	lea    rax,[rip+0x10948]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b178:	add    rax,rdx
  42b17b:	mov    QWORD PTR [rbp-0x8],rax
  42b17f:	mov    rax,QWORD PTR [rbp-0x28]
  42b183:	shr    rax,0x2
  42b187:	movabs rdx,0x28f5c28f5c28f5c3
  42b191:	mul    rdx
  42b194:	mov    rax,rdx
  42b197:	shr    rax,0x2
  42b19b:	mov    QWORD PTR [rbp-0x28],rax
  42b19f:	mov    rax,QWORD PTR [rbp-0x8]
  42b1a3:	movzx  eax,WORD PTR [rax]
  42b1a6:	mov    rdx,QWORD PTR [rbp-0x30]
  42b1aa:	mov    WORD PTR [rdx],ax
  42b1ad:	sub    QWORD PTR [rbp-0x30],0x2
  42b1b2:	mov    rcx,QWORD PTR [rbp-0x28]
  42b1b6:	mov    rax,rcx
  42b1b9:	shr    rax,0x2
  42b1bd:	movabs rdx,0x28f5c28f5c28f5c3
  42b1c7:	mul    rdx
  42b1ca:	mov    rax,rdx
  42b1cd:	shr    rax,0x2
  42b1d1:	imul   rax,rax,0x64
  42b1d5:	sub    rcx,rax
  42b1d8:	mov    rax,rcx
  42b1db:	lea    rdx,[rax+rax*1]
  42b1df:	lea    rax,[rip+0x108da]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b1e6:	add    rax,rdx
  42b1e9:	mov    QWORD PTR [rbp-0x8],rax
  42b1ed:	mov    rax,QWORD PTR [rbp-0x28]
  42b1f1:	shr    rax,0x2
  42b1f5:	movabs rdx,0x28f5c28f5c28f5c3
  42b1ff:	mul    rdx
  42b202:	mov    rax,rdx
  42b205:	shr    rax,0x2
  42b209:	mov    QWORD PTR [rbp-0x28],rax
  42b20d:	mov    rax,QWORD PTR [rbp-0x8]
  42b211:	movzx  eax,WORD PTR [rax]
  42b214:	mov    rdx,QWORD PTR [rbp-0x30]
  42b218:	mov    WORD PTR [rdx],ax
  42b21b:	sub    QWORD PTR [rbp-0x30],0x2
  42b220:	mov    rcx,QWORD PTR [rbp-0x28]
  42b224:	mov    rax,rcx
  42b227:	shr    rax,0x2
  42b22b:	movabs rdx,0x28f5c28f5c28f5c3
  42b235:	mul    rdx
  42b238:	mov    rax,rdx
  42b23b:	shr    rax,0x2
  42b23f:	imul   rax,rax,0x64
  42b243:	sub    rcx,rax
  42b246:	mov    rax,rcx
  42b249:	lea    rdx,[rax+rax*1]
  42b24d:	lea    rax,[rip+0x1086c]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b254:	add    rax,rdx
  42b257:	mov    QWORD PTR [rbp-0x8],rax
  42b25b:	mov    rax,QWORD PTR [rbp-0x28]
  42b25f:	shr    rax,0x2
  42b263:	movabs rdx,0x28f5c28f5c28f5c3
  42b26d:	mul    rdx
  42b270:	mov    rax,rdx
  42b273:	shr    rax,0x2
  42b277:	mov    QWORD PTR [rbp-0x28],rax
  42b27b:	mov    rax,QWORD PTR [rbp-0x8]
  42b27f:	movzx  eax,WORD PTR [rax]
  42b282:	mov    rdx,QWORD PTR [rbp-0x30]
  42b286:	mov    WORD PTR [rdx],ax
  42b289:	sub    QWORD PTR [rbp-0x30],0x2
  42b28e:	mov    rcx,QWORD PTR [rbp-0x28]
  42b292:	mov    rax,rcx
  42b295:	shr    rax,0x2
  42b299:	movabs rdx,0x28f5c28f5c28f5c3
  42b2a3:	mul    rdx
  42b2a6:	mov    rax,rdx
  42b2a9:	shr    rax,0x2
  42b2ad:	imul   rax,rax,0x64
  42b2b1:	sub    rcx,rax
  42b2b4:	mov    rax,rcx
  42b2b7:	lea    rdx,[rax+rax*1]
  42b2bb:	lea    rax,[rip+0x107fe]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b2c2:	add    rax,rdx
  42b2c5:	mov    QWORD PTR [rbp-0x8],rax
  42b2c9:	mov    rax,QWORD PTR [rbp-0x28]
  42b2cd:	shr    rax,0x2
  42b2d1:	movabs rdx,0x28f5c28f5c28f5c3
  42b2db:	mul    rdx
  42b2de:	mov    rax,rdx
  42b2e1:	shr    rax,0x2
  42b2e5:	mov    QWORD PTR [rbp-0x28],rax
  42b2e9:	mov    rax,QWORD PTR [rbp-0x8]
  42b2ed:	movzx  eax,WORD PTR [rax]
  42b2f0:	mov    rdx,QWORD PTR [rbp-0x30]
  42b2f4:	mov    WORD PTR [rdx],ax
  42b2f7:	mov    eax,DWORD PTR [rbp-0x14]
  42b2fa:	leave  
  42b2fb:	ret    
  42b2fc:	endbr64 
  42b300:	push   rbp
  42b301:	mov    rbp,rsp
  42b304:	sub    rsp,0x20
  42b308:	mov    eax,edi
  42b30a:	mov    QWORD PTR [rbp-0x20],rsi
  42b30e:	mov    BYTE PTR [rbp-0x14],al
  42b311:	movzx  eax,BYTE PTR [rbp-0x14]
  42b315:	shr    al,0x7
  42b318:	movzx  eax,al
  42b31b:	mov    DWORD PTR [rbp-0x4],eax
  42b31e:	cmp    DWORD PTR [rbp-0x4],0x0
  42b322:	je     42b33c <flatcc_json_parser_struct_as_root@@Base+0x1607>
  42b324:	mov    rax,QWORD PTR [rbp-0x20]
  42b328:	lea    rdx,[rax+0x1]
  42b32c:	mov    QWORD PTR [rbp-0x20],rdx
  42b330:	mov    BYTE PTR [rax],0x2d
  42b333:	movzx  eax,BYTE PTR [rbp-0x14]
  42b337:	neg    eax
  42b339:	mov    BYTE PTR [rbp-0x14],al
  42b33c:	movzx  eax,BYTE PTR [rbp-0x14]
  42b340:	movzx  eax,al
  42b343:	mov    rdx,QWORD PTR [rbp-0x20]
  42b347:	mov    rsi,rdx
  42b34a:	mov    edi,eax
  42b34c:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42b351:	mov    edx,eax
  42b353:	mov    eax,DWORD PTR [rbp-0x4]
  42b356:	add    eax,edx
  42b358:	leave  
  42b359:	ret    
  42b35a:	endbr64 
  42b35e:	push   rbp
  42b35f:	mov    rbp,rsp
  42b362:	sub    rsp,0x20
  42b366:	mov    eax,edi
  42b368:	mov    QWORD PTR [rbp-0x20],rsi
  42b36c:	mov    WORD PTR [rbp-0x14],ax
  42b370:	movzx  eax,WORD PTR [rbp-0x14]
  42b374:	shr    ax,0xf
  42b378:	movzx  eax,al
  42b37b:	mov    DWORD PTR [rbp-0x4],eax
  42b37e:	cmp    DWORD PTR [rbp-0x4],0x0
  42b382:	je     42b39d <flatcc_json_parser_struct_as_root@@Base+0x1668>
  42b384:	mov    rax,QWORD PTR [rbp-0x20]
  42b388:	lea    rdx,[rax+0x1]
  42b38c:	mov    QWORD PTR [rbp-0x20],rdx
  42b390:	mov    BYTE PTR [rax],0x2d
  42b393:	movzx  eax,WORD PTR [rbp-0x14]
  42b397:	neg    eax
  42b399:	mov    WORD PTR [rbp-0x14],ax
  42b39d:	movzx  eax,WORD PTR [rbp-0x14]
  42b3a1:	movzx  eax,ax
  42b3a4:	mov    rdx,QWORD PTR [rbp-0x20]
  42b3a8:	mov    rsi,rdx
  42b3ab:	mov    edi,eax
  42b3ad:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42b3b2:	mov    edx,eax
  42b3b4:	mov    eax,DWORD PTR [rbp-0x4]
  42b3b7:	add    eax,edx
  42b3b9:	leave  
  42b3ba:	ret    
  42b3bb:	endbr64 
  42b3bf:	push   rbp
  42b3c0:	mov    rbp,rsp
  42b3c3:	sub    rsp,0x20
  42b3c7:	mov    DWORD PTR [rbp-0x14],edi
  42b3ca:	mov    QWORD PTR [rbp-0x20],rsi
  42b3ce:	mov    eax,DWORD PTR [rbp-0x14]
  42b3d1:	shr    eax,0x1f
  42b3d4:	movzx  eax,al
  42b3d7:	mov    DWORD PTR [rbp-0x4],eax
  42b3da:	cmp    DWORD PTR [rbp-0x4],0x0
  42b3de:	je     42b3f2 <flatcc_json_parser_struct_as_root@@Base+0x16bd>
  42b3e0:	mov    rax,QWORD PTR [rbp-0x20]
  42b3e4:	lea    rdx,[rax+0x1]
  42b3e8:	mov    QWORD PTR [rbp-0x20],rdx
  42b3ec:	mov    BYTE PTR [rax],0x2d
  42b3ef:	neg    DWORD PTR [rbp-0x14]
  42b3f2:	mov    eax,DWORD PTR [rbp-0x14]
  42b3f5:	mov    rdx,QWORD PTR [rbp-0x20]
  42b3f9:	mov    rsi,rdx
  42b3fc:	mov    edi,eax
  42b3fe:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42b403:	mov    edx,eax
  42b405:	mov    eax,DWORD PTR [rbp-0x4]
  42b408:	add    eax,edx
  42b40a:	leave  
  42b40b:	ret    
  42b40c:	endbr64 
  42b410:	push   rbp
  42b411:	mov    rbp,rsp
  42b414:	sub    rsp,0x20
  42b418:	mov    QWORD PTR [rbp-0x18],rdi
  42b41c:	mov    QWORD PTR [rbp-0x20],rsi
  42b420:	mov    rax,QWORD PTR [rbp-0x18]
  42b424:	shr    rax,0x3f
  42b428:	movzx  eax,al
  42b42b:	mov    DWORD PTR [rbp-0x4],eax
  42b42e:	cmp    DWORD PTR [rbp-0x4],0x0
  42b432:	je     42b447 <flatcc_json_parser_struct_as_root@@Base+0x1712>
  42b434:	mov    rax,QWORD PTR [rbp-0x20]
  42b438:	lea    rdx,[rax+0x1]
  42b43c:	mov    QWORD PTR [rbp-0x20],rdx
  42b440:	mov    BYTE PTR [rax],0x2d
  42b443:	neg    QWORD PTR [rbp-0x18]
  42b447:	mov    rax,QWORD PTR [rbp-0x18]
  42b44b:	mov    rdx,QWORD PTR [rbp-0x20]
  42b44f:	mov    rsi,rdx
  42b452:	mov    rdi,rax
  42b455:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42b45a:	mov    edx,eax
  42b45c:	mov    eax,DWORD PTR [rbp-0x4]
  42b45f:	add    eax,edx
  42b461:	leave  
  42b462:	ret    
  42b463:	endbr64 
  42b467:	push   rbp
  42b468:	mov    rbp,rsp
  42b46b:	sub    rsp,0x50
  42b46f:	mov    DWORD PTR [rbp-0x44],edi
  42b472:	mov    QWORD PTR [rbp-0x50],rsi
  42b476:	mov    rax,QWORD PTR fs:0x28
  42b47f:	mov    QWORD PTR [rbp-0x8],rax
  42b483:	xor    eax,eax
  42b485:	lea    rax,[rbp-0x20]
  42b489:	add    rax,0x14
  42b48d:	mov    QWORD PTR [rbp-0x30],rax
  42b491:	mov    rax,QWORD PTR [rbp-0x30]
  42b495:	mov    QWORD PTR [rbp-0x28],rax
  42b499:	jmp    42b4e6 <flatcc_json_parser_struct_as_root@@Base+0x17b1>
  42b49b:	sub    QWORD PTR [rbp-0x30],0x2
  42b4a0:	mov    ecx,DWORD PTR [rbp-0x44]
  42b4a3:	mov    edx,0x51eb851f
  42b4a8:	mov    eax,ecx
  42b4aa:	mul    edx
  42b4ac:	mov    eax,edx
  42b4ae:	shr    eax,0x5
  42b4b1:	imul   eax,eax,0x64
  42b4b4:	sub    ecx,eax
  42b4b6:	mov    eax,ecx
  42b4b8:	add    eax,eax
  42b4ba:	mov    DWORD PTR [rbp-0x38],eax
  42b4bd:	mov    eax,DWORD PTR [rbp-0x44]
  42b4c0:	mov    edx,0x51eb851f
  42b4c5:	mul    edx
  42b4c7:	mov    eax,edx
  42b4c9:	shr    eax,0x5
  42b4cc:	mov    DWORD PTR [rbp-0x44],eax
  42b4cf:	mov    edx,DWORD PTR [rbp-0x38]
  42b4d2:	lea    rax,[rip+0x105e7]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b4d9:	add    rax,rdx
  42b4dc:	movzx  eax,WORD PTR [rax]
  42b4df:	mov    rdx,QWORD PTR [rbp-0x30]
  42b4e3:	mov    WORD PTR [rdx],ax
  42b4e6:	cmp    DWORD PTR [rbp-0x44],0x63
  42b4ea:	ja     42b49b <flatcc_json_parser_struct_as_root@@Base+0x1766>
  42b4ec:	sub    QWORD PTR [rbp-0x30],0x2
  42b4f1:	mov    eax,DWORD PTR [rbp-0x44]
  42b4f4:	add    eax,eax
  42b4f6:	mov    DWORD PTR [rbp-0x38],eax
  42b4f9:	mov    edx,DWORD PTR [rbp-0x38]
  42b4fc:	lea    rax,[rip+0x105bd]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b503:	add    rax,rdx
  42b506:	movzx  eax,WORD PTR [rax]
  42b509:	mov    rdx,QWORD PTR [rbp-0x30]
  42b50d:	mov    WORD PTR [rdx],ax
  42b510:	cmp    DWORD PTR [rbp-0x44],0x9
  42b514:	ja     42b51a <flatcc_json_parser_struct_as_root@@Base+0x17e5>
  42b516:	inc    QWORD PTR [rbp-0x30]
  42b51a:	mov    rax,QWORD PTR [rbp-0x28]
  42b51e:	sub    rax,QWORD PTR [rbp-0x30]
  42b522:	mov    DWORD PTR [rbp-0x34],eax
  42b525:	jmp    42b544 <flatcc_json_parser_struct_as_root@@Base+0x180f>
  42b527:	mov    rax,QWORD PTR [rbp-0x30]
  42b52b:	lea    rdx,[rax+0x1]
  42b52f:	mov    QWORD PTR [rbp-0x30],rdx
  42b533:	mov    rdx,QWORD PTR [rbp-0x50]
  42b537:	lea    rcx,[rdx+0x1]
  42b53b:	mov    QWORD PTR [rbp-0x50],rcx
  42b53f:	movzx  eax,BYTE PTR [rax]
  42b542:	mov    BYTE PTR [rdx],al
  42b544:	mov    rax,QWORD PTR [rbp-0x30]
  42b548:	cmp    rax,QWORD PTR [rbp-0x28]
  42b54c:	jne    42b527 <flatcc_json_parser_struct_as_root@@Base+0x17f2>
  42b54e:	mov    rax,QWORD PTR [rbp-0x50]
  42b552:	mov    BYTE PTR [rax],0x0
  42b555:	mov    eax,DWORD PTR [rbp-0x34]
  42b558:	mov    rsi,QWORD PTR [rbp-0x8]
  42b55c:	xor    rsi,QWORD PTR fs:0x28
  42b565:	je     42b56c <flatcc_json_parser_struct_as_root@@Base+0x1837>
  42b567:	call   4061a0 <__stack_chk_fail@plt>
  42b56c:	leave  
  42b56d:	ret    
  42b56e:	endbr64 
  42b572:	push   rbp
  42b573:	mov    rbp,rsp
  42b576:	sub    rsp,0x20
  42b57a:	mov    DWORD PTR [rbp-0x14],edi
  42b57d:	mov    QWORD PTR [rbp-0x20],rsi
  42b581:	mov    eax,DWORD PTR [rbp-0x14]
  42b584:	shr    eax,0x1f
  42b587:	movzx  eax,al
  42b58a:	mov    DWORD PTR [rbp-0x4],eax
  42b58d:	cmp    DWORD PTR [rbp-0x4],0x0
  42b591:	je     42b5a5 <flatcc_json_parser_struct_as_root@@Base+0x1870>
  42b593:	mov    rax,QWORD PTR [rbp-0x20]
  42b597:	lea    rdx,[rax+0x1]
  42b59b:	mov    QWORD PTR [rbp-0x20],rdx
  42b59f:	mov    BYTE PTR [rax],0x2d
  42b5a2:	neg    DWORD PTR [rbp-0x14]
  42b5a5:	mov    eax,DWORD PTR [rbp-0x14]
  42b5a8:	mov    rdx,QWORD PTR [rbp-0x20]
  42b5ac:	mov    rsi,rdx
  42b5af:	mov    edi,eax
  42b5b1:	call   42b463 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42b5b6:	mov    edx,eax
  42b5b8:	mov    eax,DWORD PTR [rbp-0x4]
  42b5bb:	add    eax,edx
  42b5bd:	leave  
  42b5be:	ret    
  42b5bf:	endbr64 
  42b5c3:	push   rbp
  42b5c4:	mov    rbp,rsp
  42b5c7:	sub    rsp,0x50
  42b5cb:	mov    QWORD PTR [rbp-0x48],rdi
  42b5cf:	mov    QWORD PTR [rbp-0x50],rsi
  42b5d3:	mov    rax,QWORD PTR fs:0x28
  42b5dc:	mov    QWORD PTR [rbp-0x8],rax
  42b5e0:	xor    eax,eax
  42b5e2:	lea    rax,[rbp-0x20]
  42b5e6:	add    rax,0x14
  42b5ea:	mov    QWORD PTR [rbp-0x30],rax
  42b5ee:	mov    rax,QWORD PTR [rbp-0x30]
  42b5f2:	mov    QWORD PTR [rbp-0x28],rax
  42b5f6:	jmp    42b662 <flatcc_json_parser_struct_as_root@@Base+0x192d>
  42b5f8:	sub    QWORD PTR [rbp-0x30],0x2
  42b5fd:	mov    rcx,QWORD PTR [rbp-0x48]
  42b601:	mov    rax,rcx
  42b604:	shr    rax,0x2
  42b608:	movabs rdx,0x28f5c28f5c28f5c3
  42b612:	mul    rdx
  42b615:	mov    rax,rdx
  42b618:	shr    rax,0x2
  42b61c:	imul   rax,rax,0x64
  42b620:	sub    rcx,rax
  42b623:	mov    rax,rcx
  42b626:	add    eax,eax
  42b628:	mov    DWORD PTR [rbp-0x38],eax
  42b62b:	mov    rax,QWORD PTR [rbp-0x48]
  42b62f:	shr    rax,0x2
  42b633:	movabs rdx,0x28f5c28f5c28f5c3
  42b63d:	mul    rdx
  42b640:	mov    rax,rdx
  42b643:	shr    rax,0x2
  42b647:	mov    QWORD PTR [rbp-0x48],rax
  42b64b:	mov    edx,DWORD PTR [rbp-0x38]
  42b64e:	lea    rax,[rip+0x1046b]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b655:	add    rax,rdx
  42b658:	movzx  eax,WORD PTR [rax]
  42b65b:	mov    rdx,QWORD PTR [rbp-0x30]
  42b65f:	mov    WORD PTR [rdx],ax
  42b662:	cmp    QWORD PTR [rbp-0x48],0x63
  42b667:	ja     42b5f8 <flatcc_json_parser_struct_as_root@@Base+0x18c3>
  42b669:	sub    QWORD PTR [rbp-0x30],0x2
  42b66e:	mov    rax,QWORD PTR [rbp-0x48]
  42b672:	add    eax,eax
  42b674:	mov    DWORD PTR [rbp-0x38],eax
  42b677:	mov    edx,DWORD PTR [rbp-0x38]
  42b67a:	lea    rax,[rip+0x1043f]        # 43bac0 <flatcc_builder_padding_base@@Base+0x2860>
  42b681:	add    rax,rdx
  42b684:	movzx  eax,WORD PTR [rax]
  42b687:	mov    rdx,QWORD PTR [rbp-0x30]
  42b68b:	mov    WORD PTR [rdx],ax
  42b68e:	cmp    QWORD PTR [rbp-0x48],0x9
  42b693:	ja     42b699 <flatcc_json_parser_struct_as_root@@Base+0x1964>
  42b695:	inc    QWORD PTR [rbp-0x30]
  42b699:	mov    rax,QWORD PTR [rbp-0x28]
  42b69d:	sub    rax,QWORD PTR [rbp-0x30]
  42b6a1:	mov    DWORD PTR [rbp-0x34],eax
  42b6a4:	jmp    42b6c3 <flatcc_json_parser_struct_as_root@@Base+0x198e>
  42b6a6:	mov    rax,QWORD PTR [rbp-0x30]
  42b6aa:	lea    rdx,[rax+0x1]
  42b6ae:	mov    QWORD PTR [rbp-0x30],rdx
  42b6b2:	mov    rdx,QWORD PTR [rbp-0x50]
  42b6b6:	lea    rcx,[rdx+0x1]
  42b6ba:	mov    QWORD PTR [rbp-0x50],rcx
  42b6be:	movzx  eax,BYTE PTR [rax]
  42b6c1:	mov    BYTE PTR [rdx],al
  42b6c3:	mov    rax,QWORD PTR [rbp-0x30]
  42b6c7:	cmp    rax,QWORD PTR [rbp-0x28]
  42b6cb:	jne    42b6a6 <flatcc_json_parser_struct_as_root@@Base+0x1971>
  42b6cd:	mov    rax,QWORD PTR [rbp-0x50]
  42b6d1:	mov    BYTE PTR [rax],0x0
  42b6d4:	mov    eax,DWORD PTR [rbp-0x34]
  42b6d7:	mov    rsi,QWORD PTR [rbp-0x8]
  42b6db:	xor    rsi,QWORD PTR fs:0x28
  42b6e4:	je     42b6eb <flatcc_json_parser_struct_as_root@@Base+0x19b6>
  42b6e6:	call   4061a0 <__stack_chk_fail@plt>
  42b6eb:	leave  
  42b6ec:	ret    
  42b6ed:	endbr64 
  42b6f1:	push   rbp
  42b6f2:	mov    rbp,rsp
  42b6f5:	sub    rsp,0x20
  42b6f9:	mov    QWORD PTR [rbp-0x18],rdi
  42b6fd:	mov    QWORD PTR [rbp-0x20],rsi
  42b701:	mov    rax,QWORD PTR [rbp-0x18]
  42b705:	shr    rax,0x3f
  42b709:	movzx  eax,al
  42b70c:	mov    DWORD PTR [rbp-0x4],eax
  42b70f:	cmp    DWORD PTR [rbp-0x4],0x0
  42b713:	je     42b728 <flatcc_json_parser_struct_as_root@@Base+0x19f3>
  42b715:	mov    rax,QWORD PTR [rbp-0x20]
  42b719:	lea    rdx,[rax+0x1]
  42b71d:	mov    QWORD PTR [rbp-0x20],rdx
  42b721:	mov    BYTE PTR [rax],0x2d
  42b724:	neg    QWORD PTR [rbp-0x18]
  42b728:	mov    rax,QWORD PTR [rbp-0x18]
  42b72c:	mov    rdx,QWORD PTR [rbp-0x20]
  42b730:	mov    rsi,rdx
  42b733:	mov    rdi,rax
  42b736:	call   42b5bf <flatcc_json_parser_struct_as_root@@Base+0x188a>
  42b73b:	mov    edx,eax
  42b73d:	mov    eax,DWORD PTR [rbp-0x4]
  42b740:	add    eax,edx
  42b742:	leave  
  42b743:	ret    
  42b744:	endbr64 
  42b748:	push   rbp
  42b749:	mov    rbp,rsp
  42b74c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42b751:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42b756:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42b75b:	mov    rax,QWORD PTR [rbp-0x8]
  42b75f:	pop    rbp
  42b760:	ret    
  42b761:	endbr64 
  42b765:	push   rbp
  42b766:	mov    rbp,rsp
  42b769:	mov    QWORD PTR [rbp-0x18],rdi
  42b76d:	mov    rax,QWORD PTR [rbp-0x18]
  42b771:	mov    QWORD PTR [rbp-0x8],rax
  42b775:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42b77a:	vmovq  rax,xmm0
  42b77f:	vmovq  xmm0,rax
  42b784:	pop    rbp
  42b785:	ret    
  42b786:	endbr64 
  42b78a:	push   rbp
  42b78b:	mov    rbp,rsp
  42b78e:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42b793:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42b798:	vcvttsd2si eax,xmm0
  42b79c:	mov    DWORD PTR [rbp-0x4],eax
  42b79f:	vxorpd xmm0,xmm0,xmm0
  42b7a3:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  42b7a8:	jbe    42b7af <flatcc_json_parser_struct_as_root@@Base+0x1a7a>
  42b7aa:	mov    eax,DWORD PTR [rbp-0x4]
  42b7ad:	jmp    42b7db <flatcc_json_parser_struct_as_root@@Base+0x1aa6>
  42b7af:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42b7b4:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42b7b9:	vsubsd xmm0,xmm1,xmm0
  42b7bd:	vxorpd xmm1,xmm1,xmm1
  42b7c1:	vucomisd xmm0,xmm1
  42b7c5:	jp     42b7d1 <flatcc_json_parser_struct_as_root@@Base+0x1a9c>
  42b7c7:	vxorpd xmm1,xmm1,xmm1
  42b7cb:	vucomisd xmm0,xmm1
  42b7cf:	je     42b7d8 <flatcc_json_parser_struct_as_root@@Base+0x1aa3>
  42b7d1:	mov    eax,DWORD PTR [rbp-0x4]
  42b7d4:	inc    eax
  42b7d6:	jmp    42b7db <flatcc_json_parser_struct_as_root@@Base+0x1aa6>
  42b7d8:	mov    eax,DWORD PTR [rbp-0x4]
  42b7db:	pop    rbp
  42b7dc:	ret    
  42b7dd:	endbr64 
  42b7e1:	push   rbp
  42b7e2:	mov    rbp,rsp
  42b7e5:	sub    rsp,0x20
  42b7e9:	mov    DWORD PTR [rbp-0x14],edi
  42b7ec:	mov    QWORD PTR [rbp-0x20],rsi
  42b7f0:	mov    eax,DWORD PTR [rbp-0x14]
  42b7f3:	add    eax,0x3f
  42b7f6:	vcvtsi2sd xmm0,xmm0,eax
  42b7fa:	vmovsd xmm1,QWORD PTR [rip+0x11326]        # 43cb28 <flatcc_builder_padding_base@@Base+0x38c8>
  42b802:	vmulsd xmm2,xmm0,xmm1
  42b806:	vmovq  rax,xmm2
  42b80b:	vmovq  xmm0,rax
  42b810:	call   42b786 <flatcc_json_parser_struct_as_root@@Base+0x1a51>
  42b815:	mov    DWORD PTR [rbp-0x8],eax
  42b818:	mov    eax,DWORD PTR [rbp-0x8]
  42b81b:	add    eax,0x15b
  42b820:	lea    edx,[rax+0x7]
  42b823:	test   eax,eax
  42b825:	cmovs  eax,edx
  42b828:	sar    eax,0x3
  42b82b:	inc    eax
  42b82d:	mov    DWORD PTR [rbp-0x4],eax
  42b830:	mov    eax,DWORD PTR [rbp-0x4]
  42b833:	cdqe   
  42b835:	shl    rax,0x4
  42b839:	mov    rdx,rax
  42b83c:	lea    rax,[rip+0x103fd]        # 43bc40 <flatcc_builder_padding_base@@Base+0x29e0>
  42b843:	mov    rdx,QWORD PTR [rdx+rax*1]
  42b847:	mov    rax,QWORD PTR [rbp-0x20]
  42b84b:	mov    QWORD PTR [rax],rdx
  42b84e:	mov    eax,DWORD PTR [rbp-0x4]
  42b851:	cdqe   
  42b853:	shl    rax,0x4
  42b857:	mov    rdx,rax
  42b85a:	lea    rax,[rip+0x103e7]        # 43bc48 <flatcc_builder_padding_base@@Base+0x29e8>
  42b861:	movzx  eax,WORD PTR [rdx+rax*1]
  42b865:	movsx  edx,ax
  42b868:	mov    rax,QWORD PTR [rbp-0x20]
  42b86c:	mov    DWORD PTR [rax+0x8],edx
  42b86f:	mov    eax,DWORD PTR [rbp-0x4]
  42b872:	cdqe   
  42b874:	shl    rax,0x4
  42b878:	mov    rdx,rax
  42b87b:	lea    rax,[rip+0x103c8]        # 43bc4a <flatcc_builder_padding_base@@Base+0x29ea>
  42b882:	movzx  eax,WORD PTR [rdx+rax*1]
  42b886:	cwde   
  42b887:	leave  
  42b888:	ret    
  42b889:	endbr64 
  42b88d:	push   rbp
  42b88e:	mov    rbp,rsp
  42b891:	sub    rsp,0x30
  42b895:	mov    rax,rdi
  42b898:	mov    r8,rsi
  42b89b:	mov    rsi,rax
  42b89e:	mov    rdi,rdx
  42b8a1:	mov    rdi,r8
  42b8a4:	mov    QWORD PTR [rbp-0x20],rsi
  42b8a8:	mov    QWORD PTR [rbp-0x18],rdi
  42b8ac:	mov    QWORD PTR [rbp-0x30],rdx
  42b8b0:	mov    QWORD PTR [rbp-0x28],rcx
  42b8b4:	mov    rdx,QWORD PTR [rbp-0x20]
  42b8b8:	mov    rax,QWORD PTR [rbp-0x30]
  42b8bc:	sub    rdx,rax
  42b8bf:	mov    rax,rdx
  42b8c2:	mov    QWORD PTR [rbp-0x10],rax
  42b8c6:	mov    eax,DWORD PTR [rbp-0x18]
  42b8c9:	mov    DWORD PTR [rbp-0x8],eax
  42b8cc:	mov    edx,DWORD PTR [rbp-0x18]
  42b8cf:	mov    eax,DWORD PTR [rbp-0x28]
  42b8d2:	cmp    edx,eax
  42b8d4:	jne    42b8e3 <flatcc_json_parser_struct_as_root@@Base+0x1bae>
  42b8d6:	mov    rdx,QWORD PTR [rbp-0x20]
  42b8da:	mov    rax,QWORD PTR [rbp-0x30]
  42b8de:	cmp    rdx,rax
  42b8e1:	jae    42b902 <flatcc_json_parser_struct_as_root@@Base+0x1bcd>
  42b8e3:	lea    rcx,[rip+0x10ce6]        # 43c5d0 <flatcc_builder_padding_base@@Base+0x3370>
  42b8ea:	mov    edx,0xef
  42b8ef:	lea    rsi,[rip+0x108ba]        # 43c1b0 <flatcc_builder_padding_base@@Base+0x2f50>
  42b8f6:	lea    rdi,[rip+0x10923]        # 43c220 <flatcc_builder_padding_base@@Base+0x2fc0>
  42b8fd:	call   4061b0 <__assert_fail@plt>
  42b902:	mov    rax,QWORD PTR [rbp-0x10]
  42b906:	mov    rdx,QWORD PTR [rbp-0x8]
  42b90a:	leave  
  42b90b:	ret    
  42b90c:	endbr64 
  42b910:	push   rbp
  42b911:	mov    rbp,rsp
  42b914:	sub    rsp,0x8
  42b918:	mov    rax,rdi
  42b91b:	mov    r8,rsi
  42b91e:	mov    rsi,rax
  42b921:	mov    rdi,rdx
  42b924:	mov    rdi,r8
  42b927:	mov    QWORD PTR [rbp-0x70],rsi
  42b92b:	mov    QWORD PTR [rbp-0x68],rdi
  42b92f:	mov    QWORD PTR [rbp-0x80],rdx
  42b933:	mov    QWORD PTR [rbp-0x78],rcx
  42b937:	mov    rax,QWORD PTR [rbp-0x70]
  42b93b:	shr    rax,0x20
  42b93f:	mov    QWORD PTR [rbp-0x58],rax
  42b943:	mov    rax,QWORD PTR [rbp-0x70]
  42b947:	and    eax,0xffffffff
  42b94a:	mov    QWORD PTR [rbp-0x50],rax
  42b94e:	mov    rax,QWORD PTR [rbp-0x80]
  42b952:	shr    rax,0x20
  42b956:	mov    QWORD PTR [rbp-0x48],rax
  42b95a:	mov    rax,QWORD PTR [rbp-0x80]
  42b95e:	and    eax,0xffffffff
  42b961:	mov    QWORD PTR [rbp-0x40],rax
  42b965:	mov    rax,QWORD PTR [rbp-0x58]
  42b969:	imul   rax,QWORD PTR [rbp-0x48]
  42b96e:	mov    QWORD PTR [rbp-0x38],rax
  42b972:	mov    rax,QWORD PTR [rbp-0x50]
  42b976:	imul   rax,QWORD PTR [rbp-0x48]
  42b97b:	mov    QWORD PTR [rbp-0x30],rax
  42b97f:	mov    rax,QWORD PTR [rbp-0x58]
  42b983:	imul   rax,QWORD PTR [rbp-0x40]
  42b988:	mov    QWORD PTR [rbp-0x28],rax
  42b98c:	mov    rax,QWORD PTR [rbp-0x50]
  42b990:	imul   rax,QWORD PTR [rbp-0x40]
  42b995:	mov    QWORD PTR [rbp-0x20],rax
  42b999:	mov    rax,QWORD PTR [rbp-0x20]
  42b99d:	shr    rax,0x20
  42b9a1:	mov    rdx,QWORD PTR [rbp-0x28]
  42b9a5:	mov    edx,edx
  42b9a7:	add    rax,rdx
  42b9aa:	mov    rdx,QWORD PTR [rbp-0x30]
  42b9ae:	mov    edx,edx
  42b9b0:	add    rax,rdx
  42b9b3:	mov    QWORD PTR [rbp-0x18],rax
  42b9b7:	mov    eax,0x80000000
  42b9bc:	add    QWORD PTR [rbp-0x18],rax
  42b9c0:	mov    rax,QWORD PTR [rbp-0x28]
  42b9c4:	shr    rax,0x20
  42b9c8:	mov    rdx,rax
  42b9cb:	mov    rax,QWORD PTR [rbp-0x38]
  42b9cf:	add    rdx,rax
  42b9d2:	mov    rax,QWORD PTR [rbp-0x30]
  42b9d6:	shr    rax,0x20
  42b9da:	add    rdx,rax
  42b9dd:	mov    rax,QWORD PTR [rbp-0x18]
  42b9e1:	shr    rax,0x20
  42b9e5:	add    rax,rdx
  42b9e8:	mov    QWORD PTR [rbp-0x10],rax
  42b9ec:	mov    edx,DWORD PTR [rbp-0x68]
  42b9ef:	mov    eax,DWORD PTR [rbp-0x78]
  42b9f2:	add    eax,edx
  42b9f4:	add    eax,0x40
  42b9f7:	mov    DWORD PTR [rbp-0x8],eax
  42b9fa:	mov    rax,QWORD PTR [rbp-0x10]
  42b9fe:	mov    rdx,QWORD PTR [rbp-0x8]
  42ba02:	leave  
  42ba03:	ret    
  42ba04:	endbr64 
  42ba08:	push   rbp
  42ba09:	mov    rbp,rsp
  42ba0c:	sub    rsp,0x10
  42ba10:	mov    rax,rdi
  42ba13:	mov    rcx,rsi
  42ba16:	mov    rdx,rcx
  42ba19:	mov    QWORD PTR [rbp-0x10],rax
  42ba1d:	mov    QWORD PTR [rbp-0x8],rdx
  42ba21:	mov    rax,QWORD PTR [rbp-0x10]
  42ba25:	test   rax,rax
  42ba28:	jne    42ba5e <flatcc_json_parser_struct_as_root@@Base+0x1d29>
  42ba2a:	lea    rcx,[rip+0x10bbf]        # 43c5f0 <flatcc_builder_padding_base@@Base+0x3390>
  42ba31:	mov    edx,0x104
  42ba36:	lea    rsi,[rip+0x10773]        # 43c1b0 <flatcc_builder_padding_base@@Base+0x2f50>
  42ba3d:	lea    rdi,[rip+0x107f5]        # 43c239 <flatcc_builder_padding_base@@Base+0x2fd9>
  42ba44:	call   4061b0 <__assert_fail@plt>
  42ba49:	mov    rax,QWORD PTR [rbp-0x10]
  42ba4d:	shl    rax,0xa
  42ba51:	mov    QWORD PTR [rbp-0x10],rax
  42ba55:	mov    eax,DWORD PTR [rbp-0x8]
  42ba58:	sub    eax,0xa
  42ba5b:	mov    DWORD PTR [rbp-0x8],eax
  42ba5e:	mov    rdx,QWORD PTR [rbp-0x10]
  42ba62:	movabs rax,0xffc0000000000000
  42ba6c:	and    rax,rdx
  42ba6f:	test   rax,rax
  42ba72:	je     42ba49 <flatcc_json_parser_struct_as_root@@Base+0x1d14>
  42ba74:	jmp    42ba89 <flatcc_json_parser_struct_as_root@@Base+0x1d54>
  42ba76:	mov    rax,QWORD PTR [rbp-0x10]
  42ba7a:	add    rax,rax
  42ba7d:	mov    QWORD PTR [rbp-0x10],rax
  42ba81:	mov    eax,DWORD PTR [rbp-0x8]
  42ba84:	dec    eax
  42ba86:	mov    DWORD PTR [rbp-0x8],eax
  42ba89:	mov    rax,QWORD PTR [rbp-0x10]
  42ba8d:	test   rax,rax
  42ba90:	jns    42ba76 <flatcc_json_parser_struct_as_root@@Base+0x1d41>
  42ba92:	mov    rax,QWORD PTR [rbp-0x10]
  42ba96:	mov    rdx,QWORD PTR [rbp-0x8]
  42ba9a:	leave  
  42ba9b:	ret    
  42ba9c:	endbr64 
  42baa0:	push   rbp
  42baa1:	mov    rbp,rsp
  42baa4:	sub    rsp,0x28
  42baa8:	vmovsd QWORD PTR [rbp-0x28],xmm0
  42baad:	mov    rax,QWORD PTR [rbp-0x28]
  42bab1:	vmovq  xmm0,rax
  42bab6:	call   42b744 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42babb:	mov    QWORD PTR [rbp-0x18],rax
  42babf:	movabs rax,0x7ff0000000000000
  42bac9:	and    rax,QWORD PTR [rbp-0x18]
  42bacd:	test   rax,rax
  42bad0:	jne    42baed <flatcc_json_parser_struct_as_root@@Base+0x1db8>
  42bad2:	movabs rax,0xfffffffffffff
  42badc:	and    rax,QWORD PTR [rbp-0x18]
  42bae0:	mov    QWORD PTR [rbp-0x10],rax
  42bae4:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  42baeb:	jmp    42bb24 <flatcc_json_parser_struct_as_root@@Base+0x1def>
  42baed:	movabs rax,0xfffffffffffff
  42baf7:	and    rax,QWORD PTR [rbp-0x18]
  42bafb:	mov    rdx,rax
  42bafe:	movabs rax,0x10000000000000
  42bb08:	add    rax,rdx
  42bb0b:	mov    QWORD PTR [rbp-0x10],rax
  42bb0f:	mov    rax,QWORD PTR [rbp-0x18]
  42bb13:	shr    rax,0x34
  42bb17:	and    eax,0x7ff
  42bb1c:	sub    eax,0x433
  42bb21:	mov    DWORD PTR [rbp-0x8],eax
  42bb24:	mov    rax,QWORD PTR [rbp-0x10]
  42bb28:	mov    rdx,QWORD PTR [rbp-0x8]
  42bb2c:	leave  
  42bb2d:	ret    
  42bb2e:	endbr64 
  42bb32:	push   rbp
  42bb33:	mov    rbp,rsp
  42bb36:	sub    rsp,0x50
  42bb3a:	mov    rax,rdi
  42bb3d:	mov    rcx,rsi
  42bb40:	mov    rdx,rcx
  42bb43:	mov    QWORD PTR [rbp-0x50],rax
  42bb47:	mov    QWORD PTR [rbp-0x48],rdx
  42bb4b:	movabs rax,0x10000000000000
  42bb55:	mov    QWORD PTR [rbp-0x20],rax
  42bb59:	movabs rax,0xfffffffffffff
  42bb63:	mov    QWORD PTR [rbp-0x18],rax
  42bb67:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  42bb6e:	mov    DWORD PTR [rbp-0x30],0x433
  42bb75:	mov    DWORD PTR [rbp-0x2c],0x34
  42bb7c:	mov    rax,QWORD PTR [rbp-0x50]
  42bb80:	mov    rdx,QWORD PTR [rbp-0x48]
  42bb84:	mov    QWORD PTR [rbp-0x10],rax
  42bb88:	mov    QWORD PTR [rbp-0x8],rdx
  42bb8c:	jmp    42bba1 <flatcc_json_parser_struct_as_root@@Base+0x1e6c>
  42bb8e:	mov    rax,QWORD PTR [rbp-0x10]
  42bb92:	shr    rax,1
  42bb95:	mov    QWORD PTR [rbp-0x10],rax
  42bb99:	mov    eax,DWORD PTR [rbp-0x8]
  42bb9c:	inc    eax
  42bb9e:	mov    DWORD PTR [rbp-0x8],eax
  42bba1:	mov    rax,QWORD PTR [rbp-0x10]
  42bba5:	mov    rcx,QWORD PTR [rbp-0x20]
  42bba9:	mov    rdx,QWORD PTR [rbp-0x18]
  42bbad:	add    rdx,rcx
  42bbb0:	cmp    rax,rdx
  42bbb3:	ja     42bb8e <flatcc_json_parser_struct_as_root@@Base+0x1e59>
  42bbb5:	mov    eax,DWORD PTR [rbp-0x8]
  42bbb8:	cmp    DWORD PTR [rbp-0x34],eax
  42bbbb:	jle    42bbd9 <flatcc_json_parser_struct_as_root@@Base+0x1ea4>
  42bbbd:	mov    rax,QWORD PTR [rip+0x10f5c]        # 43cb20 <flatcc_builder_padding_base@@Base+0x38c0>
  42bbc4:	jmp    42bc42 <flatcc_json_parser_struct_as_root@@Base+0x1f0d>
  42bbc6:	mov    rax,QWORD PTR [rbp-0x10]
  42bbca:	add    rax,rax
  42bbcd:	mov    QWORD PTR [rbp-0x10],rax
  42bbd1:	mov    eax,DWORD PTR [rbp-0x8]
  42bbd4:	dec    eax
  42bbd6:	mov    DWORD PTR [rbp-0x8],eax
  42bbd9:	mov    eax,DWORD PTR [rbp-0x8]
  42bbdc:	cmp    DWORD PTR [rbp-0x34],eax
  42bbdf:	jge    42bbee <flatcc_json_parser_struct_as_root@@Base+0x1eb9>
  42bbe1:	mov    rax,QWORD PTR [rbp-0x10]
  42bbe5:	and    rax,QWORD PTR [rbp-0x20]
  42bbe9:	test   rax,rax
  42bbec:	je     42bbc6 <flatcc_json_parser_struct_as_root@@Base+0x1e91>
  42bbee:	mov    eax,DWORD PTR [rbp-0x8]
  42bbf1:	cmp    DWORD PTR [rbp-0x34],eax
  42bbf4:	jne    42bc0d <flatcc_json_parser_struct_as_root@@Base+0x1ed8>
  42bbf6:	mov    rax,QWORD PTR [rbp-0x10]
  42bbfa:	and    rax,QWORD PTR [rbp-0x20]
  42bbfe:	test   rax,rax
  42bc01:	jne    42bc0d <flatcc_json_parser_struct_as_root@@Base+0x1ed8>
  42bc03:	mov    QWORD PTR [rbp-0x28],0x0
  42bc0b:	jmp    42bc1b <flatcc_json_parser_struct_as_root@@Base+0x1ee6>
  42bc0d:	mov    edx,DWORD PTR [rbp-0x8]
  42bc10:	mov    eax,DWORD PTR [rbp-0x30]
  42bc13:	add    eax,edx
  42bc15:	cdqe   
  42bc17:	mov    QWORD PTR [rbp-0x28],rax
  42bc1b:	mov    rax,QWORD PTR [rbp-0x10]
  42bc1f:	and    rax,QWORD PTR [rbp-0x18]
  42bc23:	mov    rdx,rax
  42bc26:	mov    eax,DWORD PTR [rbp-0x2c]
  42bc29:	mov    rcx,QWORD PTR [rbp-0x28]
  42bc2d:	shlx   rax,rcx,rax
  42bc32:	or     rax,rdx
  42bc35:	mov    rdi,rax
  42bc38:	call   42b761 <flatcc_json_parser_struct_as_root@@Base+0x1a2c>
  42bc3d:	vmovq  rax,xmm0
  42bc42:	vmovq  xmm0,rax
  42bc47:	leave  
  42bc48:	ret    
  42bc49:	endbr64 
  42bc4d:	push   rbp
  42bc4e:	mov    rbp,rsp
  42bc51:	mov    DWORD PTR [rbp-0x14],edi
  42bc54:	mov    DWORD PTR [rbp-0x18],esi
  42bc57:	mov    QWORD PTR [rbp-0x20],rdx
  42bc5b:	mov    eax,DWORD PTR [rbp-0x18]
  42bc5e:	inc    eax
  42bc60:	imul   eax,eax,0x4d1
  42bc66:	sar    eax,0xc
  42bc69:	inc    eax
  42bc6b:	mov    DWORD PTR [rbp-0x4],eax
  42bc6e:	mov    eax,DWORD PTR [rbp-0x4]
  42bc71:	cdqe   
  42bc73:	lea    rdx,[rax*4+0x0]
  42bc7b:	lea    rax,[rip+0x105de]        # 43c260 <flatcc_builder_padding_base@@Base+0x3000>
  42bc82:	mov    eax,DWORD PTR [rdx+rax*1]
  42bc85:	cmp    DWORD PTR [rbp-0x14],eax
  42bc88:	jae    42bc8d <flatcc_json_parser_struct_as_root@@Base+0x1f58>
  42bc8a:	dec    DWORD PTR [rbp-0x4]
  42bc8d:	mov    eax,DWORD PTR [rbp-0x4]
  42bc90:	cdqe   
  42bc92:	lea    rdx,[rax*4+0x0]
  42bc9a:	lea    rax,[rip+0x105bf]        # 43c260 <flatcc_builder_padding_base@@Base+0x3000>
  42bca1:	mov    edx,DWORD PTR [rdx+rax*1]
  42bca4:	mov    rax,QWORD PTR [rbp-0x20]
  42bca8:	mov    DWORD PTR [rax],edx
  42bcaa:	mov    eax,DWORD PTR [rbp-0x4]
  42bcad:	pop    rbp
  42bcae:	ret    
  42bcaf:	endbr64 
  42bcb3:	push   rbp
  42bcb4:	mov    rbp,rsp
  42bcb7:	mov    QWORD PTR [rbp-0x18],rdi
  42bcbb:	mov    DWORD PTR [rbp-0x1c],esi
  42bcbe:	mov    QWORD PTR [rbp-0x28],rdx
  42bcc2:	mov    QWORD PTR [rbp-0x30],rcx
  42bcc6:	mov    QWORD PTR [rbp-0x38],r8
  42bcca:	mov    QWORD PTR [rbp-0x40],r9
  42bcce:	mov    rax,QWORD PTR [rbp-0x28]
  42bcd2:	sub    rax,QWORD PTR [rbp+0x10]
  42bcd6:	mov    QWORD PTR [rbp-0x10],rax
  42bcda:	mov    rdx,QWORD PTR [rbp-0x28]
  42bcde:	mov    rax,QWORD PTR [rbp+0x10]
  42bce2:	add    rax,rdx
  42bce5:	mov    QWORD PTR [rbp-0x8],rax
  42bce9:	jmp    42bd0a <flatcc_json_parser_struct_as_root@@Base+0x1fd5>
  42bceb:	mov    eax,DWORD PTR [rbp-0x1c]
  42bcee:	cdqe   
  42bcf0:	lea    rdx,[rax-0x1]
  42bcf4:	mov    rax,QWORD PTR [rbp-0x18]
  42bcf8:	add    rax,rdx
  42bcfb:	movzx  edx,BYTE PTR [rax]
  42bcfe:	dec    edx
  42bd00:	mov    BYTE PTR [rax],dl
  42bd02:	mov    rax,QWORD PTR [rbp-0x40]
  42bd06:	add    QWORD PTR [rbp-0x38],rax
  42bd0a:	mov    rax,QWORD PTR [rbp-0x38]
  42bd0e:	cmp    rax,QWORD PTR [rbp-0x10]
  42bd12:	jae    42bd52 <flatcc_json_parser_struct_as_root@@Base+0x201d>
  42bd14:	mov    rax,QWORD PTR [rbp-0x30]
  42bd18:	sub    rax,QWORD PTR [rbp-0x38]
  42bd1c:	cmp    QWORD PTR [rbp-0x40],rax
  42bd20:	ja     42bd52 <flatcc_json_parser_struct_as_root@@Base+0x201d>
  42bd22:	mov    rdx,QWORD PTR [rbp-0x38]
  42bd26:	mov    rax,QWORD PTR [rbp-0x40]
  42bd2a:	add    rax,rdx
  42bd2d:	cmp    QWORD PTR [rbp-0x10],rax
  42bd31:	ja     42bceb <flatcc_json_parser_struct_as_root@@Base+0x1fb6>
  42bd33:	mov    rax,QWORD PTR [rbp-0x10]
  42bd37:	sub    rax,QWORD PTR [rbp-0x38]
  42bd3b:	mov    rdx,rax
  42bd3e:	mov    rcx,QWORD PTR [rbp-0x38]
  42bd42:	mov    rax,QWORD PTR [rbp-0x40]
  42bd46:	add    rax,rcx
  42bd49:	sub    rax,QWORD PTR [rbp-0x10]
  42bd4d:	cmp    rdx,rax
  42bd50:	jae    42bceb <flatcc_json_parser_struct_as_root@@Base+0x1fb6>
  42bd52:	mov    rax,QWORD PTR [rbp-0x38]
  42bd56:	cmp    rax,QWORD PTR [rbp-0x8]
  42bd5a:	jae    42bda1 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42bd5c:	mov    rax,QWORD PTR [rbp-0x30]
  42bd60:	sub    rax,QWORD PTR [rbp-0x38]
  42bd64:	cmp    QWORD PTR [rbp-0x40],rax
  42bd68:	ja     42bda1 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42bd6a:	mov    rdx,QWORD PTR [rbp-0x38]
  42bd6e:	mov    rax,QWORD PTR [rbp-0x40]
  42bd72:	add    rax,rdx
  42bd75:	cmp    QWORD PTR [rbp-0x8],rax
  42bd79:	ja     42bd9a <flatcc_json_parser_struct_as_root@@Base+0x2065>
  42bd7b:	mov    rax,QWORD PTR [rbp-0x8]
  42bd7f:	sub    rax,QWORD PTR [rbp-0x38]
  42bd83:	mov    rdx,rax
  42bd86:	mov    rcx,QWORD PTR [rbp-0x38]
  42bd8a:	mov    rax,QWORD PTR [rbp-0x40]
  42bd8e:	add    rax,rcx
  42bd91:	sub    rax,QWORD PTR [rbp-0x8]
  42bd95:	cmp    rdx,rax
  42bd98:	jbe    42bda1 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42bd9a:	mov    eax,0x0
  42bd9f:	jmp    42bdd3 <flatcc_json_parser_struct_as_root@@Base+0x209e>
  42bda1:	mov    rax,QWORD PTR [rbp+0x10]
  42bda5:	add    rax,rax
  42bda8:	cmp    QWORD PTR [rbp-0x38],rax
  42bdac:	jb     42bdce <flatcc_json_parser_struct_as_root@@Base+0x2099>
  42bdae:	mov    rax,QWORD PTR [rbp+0x10]
  42bdb2:	lea    rdx,[rax*4+0x0]
  42bdba:	mov    rax,QWORD PTR [rbp-0x30]
  42bdbe:	sub    rax,rdx
  42bdc1:	cmp    QWORD PTR [rbp-0x38],rax
  42bdc5:	ja     42bdce <flatcc_json_parser_struct_as_root@@Base+0x2099>
  42bdc7:	mov    eax,0x1
  42bdcc:	jmp    42bdd3 <flatcc_json_parser_struct_as_root@@Base+0x209e>
  42bdce:	mov    eax,0x0
  42bdd3:	pop    rbp
  42bdd4:	ret    
  42bdd5:	endbr64 
  42bdd9:	push   rbp
  42bdda:	mov    rbp,rsp
  42bddd:	push   r12
  42bddf:	push   rbx
  42bde0:	sub    rsp,0xd0
  42bde7:	mov    rax,rdi
  42bdea:	mov    r10,rsi
  42bded:	mov    rsi,rax
  42bdf0:	mov    rdi,rdx
  42bdf3:	mov    rdi,r10
  42bdf6:	mov    QWORD PTR [rbp-0xa0],rsi
  42bdfd:	mov    QWORD PTR [rbp-0x98],rdi
  42be04:	mov    QWORD PTR [rbp-0xb0],rdx
  42be0b:	mov    QWORD PTR [rbp-0xa8],rcx
  42be12:	mov    QWORD PTR [rbp-0xc0],r8
  42be19:	mov    QWORD PTR [rbp-0xb8],r9
  42be20:	mov    rax,QWORD PTR [rbp+0x10]
  42be24:	mov    QWORD PTR [rbp-0xc8],rax
  42be2b:	mov    rax,QWORD PTR [rbp+0x18]
  42be2f:	mov    QWORD PTR [rbp-0xd0],rax
  42be36:	mov    rax,QWORD PTR [rbp+0x20]
  42be3a:	mov    QWORD PTR [rbp-0xd8],rax
  42be41:	mov    rax,QWORD PTR fs:0x28
  42be4a:	mov    QWORD PTR [rbp-0x18],rax
  42be4e:	xor    eax,eax
  42be50:	mov    QWORD PTR [rbp-0x78],0x1
  42be58:	mov    rax,QWORD PTR [rbp-0xa0]
  42be5f:	sub    rax,QWORD PTR [rbp-0x78]
  42be63:	mov    QWORD PTR [rbp-0x60],rax
  42be67:	mov    eax,DWORD PTR [rbp-0x98]
  42be6d:	mov    DWORD PTR [rbp-0x58],eax
  42be70:	mov    rdx,QWORD PTR [rbp-0xc0]
  42be77:	mov    rax,QWORD PTR [rbp-0x78]
  42be7b:	add    rax,rdx
  42be7e:	mov    QWORD PTR [rbp-0x50],rax
  42be82:	mov    eax,DWORD PTR [rbp-0xb8]
  42be88:	mov    DWORD PTR [rbp-0x48],eax
  42be8b:	mov    rax,QWORD PTR [rbp-0x60]
  42be8f:	mov    rdx,QWORD PTR [rbp-0x58]
  42be93:	mov    rdi,QWORD PTR [rbp-0x50]
  42be97:	mov    rsi,QWORD PTR [rbp-0x48]
  42be9b:	mov    rcx,rdx
  42be9e:	mov    rdx,rax
  42bea1:	call   42b889 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42bea6:	mov    QWORD PTR [rbp-0x40],rax
  42beaa:	mov    QWORD PTR [rbp-0x38],rdx
  42beae:	mov    eax,DWORD PTR [rbp-0xa8]
  42beb4:	neg    eax
  42beb6:	mov    edx,0x1
  42bebb:	shlx   rax,rdx,rax
  42bec0:	mov    QWORD PTR [rbp-0x30],rax
  42bec4:	mov    eax,DWORD PTR [rbp-0xa8]
  42beca:	mov    DWORD PTR [rbp-0x28],eax
  42becd:	mov    rdx,QWORD PTR [rbp-0x50]
  42bed1:	mov    eax,DWORD PTR [rbp-0x28]
  42bed4:	neg    eax
  42bed6:	shrx   rax,rdx,rax
  42bedb:	mov    DWORD PTR [rbp-0x84],eax
  42bee1:	mov    rax,QWORD PTR [rbp-0x50]
  42bee5:	mov    rdx,QWORD PTR [rbp-0x30]
  42bee9:	dec    rdx
  42beec:	and    rax,rdx
  42beef:	mov    QWORD PTR [rbp-0x70],rax
  42bef3:	mov    eax,DWORD PTR [rbp-0x28]
  42bef6:	lea    ecx,[rax+0x40]
  42bef9:	lea    rdx,[rbp-0x88]
  42bf00:	mov    eax,DWORD PTR [rbp-0x84]
  42bf06:	mov    esi,ecx
  42bf08:	mov    edi,eax
  42bf0a:	call   42bc49 <flatcc_json_parser_struct_as_root@@Base+0x1f14>
  42bf0f:	mov    edx,eax
  42bf11:	mov    rax,QWORD PTR [rbp-0xd8]
  42bf18:	mov    DWORD PTR [rax],edx
  42bf1a:	mov    rax,QWORD PTR [rbp-0xd0]
  42bf21:	mov    DWORD PTR [rax],0x0
  42bf27:	jmp    42c054 <flatcc_json_parser_struct_as_root@@Base+0x231f>
  42bf2c:	mov    ebx,DWORD PTR [rbp-0x88]
  42bf32:	mov    eax,DWORD PTR [rbp-0x84]
  42bf38:	mov    edx,0x0
  42bf3d:	div    ebx
  42bf3f:	mov    DWORD PTR [rbp-0x80],eax
  42bf42:	mov    eax,DWORD PTR [rbp-0x80]
  42bf45:	lea    ecx,[rax+0x30]
  42bf48:	mov    rax,QWORD PTR [rbp-0xd0]
  42bf4f:	mov    eax,DWORD PTR [rax]
  42bf51:	movsxd rdx,eax
  42bf54:	mov    rax,QWORD PTR [rbp-0xc8]
  42bf5b:	add    rdx,rax
  42bf5e:	mov    eax,ecx
  42bf60:	mov    BYTE PTR [rdx],al
  42bf62:	mov    rax,QWORD PTR [rbp-0xd0]
  42bf69:	mov    eax,DWORD PTR [rax]
  42bf6b:	lea    edx,[rax+0x1]
  42bf6e:	mov    rax,QWORD PTR [rbp-0xd0]
  42bf75:	mov    DWORD PTR [rax],edx
  42bf77:	mov    ecx,DWORD PTR [rbp-0x88]
  42bf7d:	mov    eax,DWORD PTR [rbp-0x84]
  42bf83:	mov    edx,0x0
  42bf88:	div    ecx
  42bf8a:	mov    DWORD PTR [rbp-0x84],edx
  42bf90:	mov    rax,QWORD PTR [rbp-0xd8]
  42bf97:	mov    eax,DWORD PTR [rax]
  42bf99:	lea    edx,[rax-0x1]
  42bf9c:	mov    rax,QWORD PTR [rbp-0xd8]
  42bfa3:	mov    DWORD PTR [rax],edx
  42bfa5:	mov    edx,DWORD PTR [rbp-0x84]
  42bfab:	mov    eax,DWORD PTR [rbp-0x28]
  42bfae:	neg    eax
  42bfb0:	shlx   rdx,rdx,rax
  42bfb5:	mov    rax,QWORD PTR [rbp-0x70]
  42bfb9:	add    rax,rdx
  42bfbc:	mov    QWORD PTR [rbp-0x68],rax
  42bfc0:	mov    rax,QWORD PTR [rbp-0x40]
  42bfc4:	cmp    QWORD PTR [rbp-0x68],rax
  42bfc8:	jae    42c03c <flatcc_json_parser_struct_as_root@@Base+0x2307>
  42bfca:	mov    eax,DWORD PTR [rbp-0x88]
  42bfd0:	mov    edx,eax
  42bfd2:	mov    eax,DWORD PTR [rbp-0x28]
  42bfd5:	neg    eax
  42bfd7:	shlx   r12,rdx,rax
  42bfdc:	mov    rbx,QWORD PTR [rbp-0x40]
  42bfe0:	mov    rax,QWORD PTR [rbp-0xb0]
  42bfe7:	mov    rdx,QWORD PTR [rbp-0xa8]
  42bfee:	mov    rdi,QWORD PTR [rbp-0x50]
  42bff2:	mov    rsi,QWORD PTR [rbp-0x48]
  42bff6:	mov    rcx,rdx
  42bff9:	mov    rdx,rax
  42bffc:	call   42b889 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42c001:	mov    rdi,rax
  42c004:	mov    rax,QWORD PTR [rbp-0xd0]
  42c00b:	mov    esi,DWORD PTR [rax]
  42c00d:	mov    rdx,QWORD PTR [rbp-0x68]
  42c011:	mov    rax,QWORD PTR [rbp-0xc8]
  42c018:	sub    rsp,0x8
  42c01c:	push   QWORD PTR [rbp-0x78]
  42c01f:	mov    r9,r12
  42c022:	mov    r8,rdx
  42c025:	mov    rcx,rbx
  42c028:	mov    rdx,rdi
  42c02b:	mov    rdi,rax
  42c02e:	call   42bcaf <flatcc_json_parser_struct_as_root@@Base+0x1f7a>
  42c033:	add    rsp,0x10
  42c037:	jmp    42c179 <flatcc_json_parser_struct_as_root@@Base+0x2444>
  42c03c:	mov    eax,DWORD PTR [rbp-0x88]
  42c042:	mov    edx,0xcccccccd
  42c047:	mul    edx
  42c049:	mov    eax,edx
  42c04b:	shr    eax,0x3
  42c04e:	mov    DWORD PTR [rbp-0x88],eax
  42c054:	mov    rax,QWORD PTR [rbp-0xd8]
  42c05b:	mov    eax,DWORD PTR [rax]
  42c05d:	test   eax,eax
  42c05f:	jg     42bf2c <flatcc_json_parser_struct_as_root@@Base+0x21f7>
  42c065:	mov    rdx,QWORD PTR [rbp-0x70]
  42c069:	mov    rax,rdx
  42c06c:	shl    rax,0x2
  42c070:	add    rax,rdx
  42c073:	add    rax,rax
  42c076:	mov    QWORD PTR [rbp-0x70],rax
  42c07a:	mov    rdx,QWORD PTR [rbp-0x78]
  42c07e:	mov    rax,rdx
  42c081:	shl    rax,0x2
  42c085:	add    rax,rdx
  42c088:	add    rax,rax
  42c08b:	mov    QWORD PTR [rbp-0x78],rax
  42c08f:	mov    rdx,QWORD PTR [rbp-0x40]
  42c093:	mov    rax,rdx
  42c096:	shl    rax,0x2
  42c09a:	add    rax,rdx
  42c09d:	add    rax,rax
  42c0a0:	mov    QWORD PTR [rbp-0x40],rax
  42c0a4:	mov    eax,DWORD PTR [rbp-0x28]
  42c0a7:	neg    eax
  42c0a9:	mov    rdx,QWORD PTR [rbp-0x70]
  42c0ad:	shrx   rax,rdx,rax
  42c0b2:	mov    DWORD PTR [rbp-0x7c],eax
  42c0b5:	mov    eax,DWORD PTR [rbp-0x7c]
  42c0b8:	lea    ecx,[rax+0x30]
  42c0bb:	mov    rax,QWORD PTR [rbp-0xd0]
  42c0c2:	mov    eax,DWORD PTR [rax]
  42c0c4:	movsxd rdx,eax
  42c0c7:	mov    rax,QWORD PTR [rbp-0xc8]
  42c0ce:	add    rdx,rax
  42c0d1:	mov    eax,ecx
  42c0d3:	mov    BYTE PTR [rdx],al
  42c0d5:	mov    rax,QWORD PTR [rbp-0xd0]
  42c0dc:	mov    eax,DWORD PTR [rax]
  42c0de:	lea    edx,[rax+0x1]
  42c0e1:	mov    rax,QWORD PTR [rbp-0xd0]
  42c0e8:	mov    DWORD PTR [rax],edx
  42c0ea:	mov    rax,QWORD PTR [rbp-0x30]
  42c0ee:	dec    rax
  42c0f1:	and    QWORD PTR [rbp-0x70],rax
  42c0f5:	mov    rax,QWORD PTR [rbp-0xd8]
  42c0fc:	mov    eax,DWORD PTR [rax]
  42c0fe:	lea    edx,[rax-0x1]
  42c101:	mov    rax,QWORD PTR [rbp-0xd8]
  42c108:	mov    DWORD PTR [rax],edx
  42c10a:	mov    rax,QWORD PTR [rbp-0x40]
  42c10e:	cmp    QWORD PTR [rbp-0x70],rax
  42c112:	jae    42c065 <flatcc_json_parser_struct_as_root@@Base+0x2330>
  42c118:	mov    r12,QWORD PTR [rbp-0x30]
  42c11c:	mov    rbx,QWORD PTR [rbp-0x40]
  42c120:	mov    rax,QWORD PTR [rbp-0xb0]
  42c127:	mov    rdx,QWORD PTR [rbp-0xa8]
  42c12e:	mov    rdi,QWORD PTR [rbp-0x50]
  42c132:	mov    rsi,QWORD PTR [rbp-0x48]
  42c136:	mov    rcx,rdx
  42c139:	mov    rdx,rax
  42c13c:	call   42b889 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42c141:	imul   rax,QWORD PTR [rbp-0x78]
  42c146:	mov    rdx,rax
  42c149:	mov    rax,QWORD PTR [rbp-0xd0]
  42c150:	mov    esi,DWORD PTR [rax]
  42c152:	mov    rcx,QWORD PTR [rbp-0x70]
  42c156:	mov    rax,QWORD PTR [rbp-0xc8]
  42c15d:	sub    rsp,0x8
  42c161:	push   QWORD PTR [rbp-0x78]
  42c164:	mov    r9,r12
  42c167:	mov    r8,rcx
  42c16a:	mov    rcx,rbx
  42c16d:	mov    rdi,rax
  42c170:	call   42bcaf <flatcc_json_parser_struct_as_root@@Base+0x1f7a>
  42c175:	add    rsp,0x10
  42c179:	mov    rbx,QWORD PTR [rbp-0x18]
  42c17d:	xor    rbx,QWORD PTR fs:0x28
  42c186:	je     42c18d <flatcc_json_parser_struct_as_root@@Base+0x2458>
  42c188:	call   4061a0 <__stack_chk_fail@plt>
  42c18d:	lea    rsp,[rbp-0x10]
  42c191:	pop    rbx
  42c192:	pop    r12
  42c194:	pop    rbp
  42c195:	ret    
  42c196:	endbr64 
  42c19a:	push   rbp
  42c19b:	mov    rbp,rsp
  42c19e:	push   rbx
  42c19f:	sub    rsp,0xb8
  42c1a6:	vmovsd QWORD PTR [rbp-0xa8],xmm0
  42c1ae:	mov    QWORD PTR [rbp-0xb0],rdi
  42c1b5:	mov    QWORD PTR [rbp-0xb8],rsi
  42c1bc:	mov    QWORD PTR [rbp-0xc0],rdx
  42c1c3:	mov    rax,QWORD PTR fs:0x28
  42c1cc:	mov    QWORD PTR [rbp-0x18],rax
  42c1d0:	xor    eax,eax
  42c1d2:	mov    rax,QWORD PTR [rbp-0xa8]
  42c1d9:	vmovq  xmm0,rax
  42c1de:	call   42ba9c <flatcc_json_parser_struct_as_root@@Base+0x1d67>
  42c1e3:	mov    QWORD PTR [rbp-0x80],rax
  42c1e7:	mov    QWORD PTR [rbp-0x78],rdx
  42c1eb:	mov    rdx,QWORD PTR [rbp-0x80]
  42c1ef:	mov    rax,QWORD PTR [rbp-0x78]
  42c1f3:	mov    rdi,rdx
  42c1f6:	mov    rsi,rax
  42c1f9:	call   42ba04 <flatcc_json_parser_struct_as_root@@Base+0x1ccf>
  42c1fe:	mov    QWORD PTR [rbp-0x70],rax
  42c202:	mov    QWORD PTR [rbp-0x68],rdx
  42c206:	mov    rax,QWORD PTR [rbp-0x80]
  42c20a:	add    rax,rax
  42c20d:	inc    rax
  42c210:	mov    QWORD PTR [rbp-0x60],rax
  42c214:	mov    eax,DWORD PTR [rbp-0x78]
  42c217:	dec    eax
  42c219:	mov    DWORD PTR [rbp-0x58],eax
  42c21c:	mov    rdx,QWORD PTR [rbp-0x60]
  42c220:	mov    rax,QWORD PTR [rbp-0x58]
  42c224:	mov    rdi,rdx
  42c227:	mov    rsi,rax
  42c22a:	call   42ba04 <flatcc_json_parser_struct_as_root@@Base+0x1ccf>
  42c22f:	mov    QWORD PTR [rbp-0x50],rax
  42c233:	mov    QWORD PTR [rbp-0x48],rdx
  42c237:	mov    rax,QWORD PTR [rbp-0xa8]
  42c23e:	vmovq  xmm0,rax
  42c243:	call   42b744 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42c248:	mov    QWORD PTR [rbp-0x88],rax
  42c24f:	vmovsd xmm0,QWORD PTR [rbp-0xa8]
  42c257:	vxorpd xmm1,xmm1,xmm1
  42c25b:	vcomisd xmm0,xmm1
  42c25f:	seta   al
  42c262:	xor    eax,0x1
  42c265:	test   al,al
  42c267:	jne    42c283 <flatcc_json_parser_struct_as_root@@Base+0x254e>
  42c269:	vmovsd xmm0,QWORD PTR [rip+0x108bf]        # 43cb30 <flatcc_builder_padding_base@@Base+0x38d0>
  42c271:	vcomisd xmm0,QWORD PTR [rbp-0xa8]
  42c279:	setae  al
  42c27c:	xor    eax,0x1
  42c27f:	test   al,al
  42c281:	je     42c2a2 <flatcc_json_parser_struct_as_root@@Base+0x256d>
  42c283:	lea    rcx,[rip+0x1037e]        # 43c608 <flatcc_builder_padding_base@@Base+0x33a8>
  42c28a:	mov    edx,0x8a
  42c28f:	lea    rsi,[rip+0xfffa]        # 43c290 <flatcc_builder_padding_base@@Base+0x3030>
  42c296:	lea    rdi,[rip+0x1006b]        # 43c308 <flatcc_builder_padding_base@@Base+0x30a8>
  42c29d:	call   4061b0 <__assert_fail@plt>
  42c2a2:	movabs rax,0xfffffffffffff
  42c2ac:	and    rax,QWORD PTR [rbp-0x88]
  42c2b3:	test   rax,rax
  42c2b6:	jne    42c2e8 <flatcc_json_parser_struct_as_root@@Base+0x25b3>
  42c2b8:	movabs rax,0x7ff0000000000000
  42c2c2:	and    rax,QWORD PTR [rbp-0x88]
  42c2c9:	test   rax,rax
  42c2cc:	je     42c2e8 <flatcc_json_parser_struct_as_root@@Base+0x25b3>
  42c2ce:	mov    rax,QWORD PTR [rbp-0x80]
  42c2d2:	shl    rax,0x2
  42c2d6:	dec    rax
  42c2d9:	mov    QWORD PTR [rbp-0x40],rax
  42c2dd:	mov    eax,DWORD PTR [rbp-0x78]
  42c2e0:	sub    eax,0x2
  42c2e3:	mov    DWORD PTR [rbp-0x38],eax
  42c2e6:	jmp    42c2fe <flatcc_json_parser_struct_as_root@@Base+0x25c9>
  42c2e8:	mov    rax,QWORD PTR [rbp-0x80]
  42c2ec:	add    rax,rax
  42c2ef:	dec    rax
  42c2f2:	mov    QWORD PTR [rbp-0x40],rax
  42c2f6:	mov    eax,DWORD PTR [rbp-0x78]
  42c2f9:	dec    eax
  42c2fb:	mov    DWORD PTR [rbp-0x38],eax
  42c2fe:	mov    rdx,QWORD PTR [rbp-0x40]
  42c302:	mov    ecx,DWORD PTR [rbp-0x38]
  42c305:	mov    eax,DWORD PTR [rbp-0x48]
  42c308:	sub    ecx,eax
  42c30a:	mov    eax,ecx
  42c30c:	shlx   rax,rdx,rax
  42c311:	mov    QWORD PTR [rbp-0x40],rax
  42c315:	mov    eax,DWORD PTR [rbp-0x48]
  42c318:	mov    DWORD PTR [rbp-0x38],eax
  42c31b:	mov    eax,DWORD PTR [rbp-0x68]
  42c31e:	mov    edx,0xffffff84
  42c323:	sub    edx,eax
  42c325:	lea    rax,[rbp-0x30]
  42c329:	mov    rsi,rax
  42c32c:	mov    edi,edx
  42c32e:	call   42b7dd <flatcc_json_parser_struct_as_root@@Base+0x1aa8>
  42c333:	mov    DWORD PTR [rbp-0x90],eax
  42c339:	mov    rax,QWORD PTR [rbp-0x30]
  42c33d:	mov    rdx,QWORD PTR [rbp-0x28]
  42c341:	mov    rdi,QWORD PTR [rbp-0x70]
  42c345:	mov    rsi,QWORD PTR [rbp-0x68]
  42c349:	mov    rcx,rdx
  42c34c:	mov    rdx,rax
  42c34f:	call   42b90c <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42c354:	mov    QWORD PTR [rbp-0x70],rax
  42c358:	mov    QWORD PTR [rbp-0x68],rdx
  42c35c:	mov    rax,QWORD PTR [rbp-0x30]
  42c360:	mov    rdx,QWORD PTR [rbp-0x28]
  42c364:	mov    rdi,QWORD PTR [rbp-0x40]
  42c368:	mov    rsi,QWORD PTR [rbp-0x38]
  42c36c:	mov    rcx,rdx
  42c36f:	mov    rdx,rax
  42c372:	call   42b90c <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42c377:	mov    QWORD PTR [rbp-0x40],rax
  42c37b:	mov    QWORD PTR [rbp-0x38],rdx
  42c37f:	mov    rax,QWORD PTR [rbp-0x30]
  42c383:	mov    rdx,QWORD PTR [rbp-0x28]
  42c387:	mov    rdi,QWORD PTR [rbp-0x50]
  42c38b:	mov    rsi,QWORD PTR [rbp-0x48]
  42c38f:	mov    rcx,rdx
  42c392:	mov    rdx,rax
  42c395:	call   42b90c <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42c39a:	mov    QWORD PTR [rbp-0x50],rax
  42c39e:	mov    QWORD PTR [rbp-0x48],rdx
  42c3a2:	mov    rcx,QWORD PTR [rbp-0x50]
  42c3a6:	mov    rbx,QWORD PTR [rbp-0x48]
  42c3aa:	mov    rax,QWORD PTR [rbp-0x70]
  42c3ae:	mov    rdx,QWORD PTR [rbp-0x68]
  42c3b2:	mov    rdi,QWORD PTR [rbp-0x40]
  42c3b6:	mov    rsi,QWORD PTR [rbp-0x38]
  42c3ba:	sub    rsp,0x8
  42c3be:	lea    r8,[rbp-0x94]
  42c3c5:	push   r8
  42c3c7:	push   QWORD PTR [rbp-0xb8]
  42c3cd:	push   QWORD PTR [rbp-0xb0]
  42c3d3:	mov    r8,rcx
  42c3d6:	mov    r9,rbx
  42c3d9:	mov    rcx,rdx
  42c3dc:	mov    rdx,rax
  42c3df:	call   42bdd5 <flatcc_json_parser_struct_as_root@@Base+0x20a0>
  42c3e4:	add    rsp,0x20
  42c3e8:	mov    DWORD PTR [rbp-0x8c],eax
  42c3ee:	mov    eax,DWORD PTR [rbp-0x94]
  42c3f4:	sub    eax,DWORD PTR [rbp-0x90]
  42c3fa:	mov    edx,eax
  42c3fc:	mov    rax,QWORD PTR [rbp-0xc0]
  42c403:	mov    DWORD PTR [rax],edx
  42c405:	mov    eax,DWORD PTR [rbp-0x8c]
  42c40b:	mov    rbx,QWORD PTR [rbp-0x18]
  42c40f:	xor    rbx,QWORD PTR fs:0x28
  42c418:	je     42c41f <flatcc_json_parser_struct_as_root@@Base+0x26ea>
  42c41a:	call   4061a0 <__stack_chk_fail@plt>
  42c41f:	mov    rbx,QWORD PTR [rbp-0x8]
  42c423:	leave  
  42c424:	ret    
  42c425:	endbr64 
  42c429:	push   rbp
  42c42a:	mov    rbp,rsp
  42c42d:	mov    DWORD PTR [rbp-0x34],edi
  42c430:	mov    QWORD PTR [rbp-0x40],rsi
  42c434:	mov    rax,QWORD PTR [rbp-0x40]
  42c438:	mov    QWORD PTR [rbp-0x8],rax
  42c43c:	cmp    DWORD PTR [rbp-0x34],0x0
  42c440:	jns    42c454 <flatcc_json_parser_struct_as_root@@Base+0x271f>
  42c442:	mov    rax,QWORD PTR [rbp-0x40]
  42c446:	lea    rdx,[rax+0x1]
  42c44a:	mov    QWORD PTR [rbp-0x40],rdx
  42c44e:	mov    BYTE PTR [rax],0x2d
  42c451:	neg    DWORD PTR [rbp-0x34]
  42c454:	mov    rax,QWORD PTR [rbp-0x40]
  42c458:	mov    QWORD PTR [rbp-0x10],rax
  42c45c:	mov    ecx,DWORD PTR [rbp-0x34]
  42c45f:	mov    edx,0x66666667
  42c464:	mov    eax,ecx
  42c466:	imul   edx
  42c468:	sar    edx,0x2
  42c46b:	mov    eax,ecx
  42c46d:	sar    eax,0x1f
  42c470:	sub    edx,eax
  42c472:	mov    eax,edx
  42c474:	mov    DWORD PTR [rbp-0x1c],eax
  42c477:	mov    edx,DWORD PTR [rbp-0x1c]
  42c47a:	mov    eax,edx
  42c47c:	shl    eax,0x2
  42c47f:	add    eax,edx
  42c481:	add    eax,eax
  42c483:	neg    eax
  42c485:	mov    edx,eax
  42c487:	mov    eax,DWORD PTR [rbp-0x34]
  42c48a:	add    eax,edx
  42c48c:	mov    DWORD PTR [rbp-0x18],eax
  42c48f:	mov    eax,DWORD PTR [rbp-0x18]
  42c492:	lea    ecx,[rax+0x30]
  42c495:	mov    rax,QWORD PTR [rbp-0x10]
  42c499:	lea    rdx,[rax+0x1]
  42c49d:	mov    QWORD PTR [rbp-0x10],rdx
  42c4a1:	mov    edx,ecx
  42c4a3:	mov    BYTE PTR [rax],dl
  42c4a5:	cmp    DWORD PTR [rbp-0x1c],0x0
  42c4a9:	je     42c4b3 <flatcc_json_parser_struct_as_root@@Base+0x277e>
  42c4ab:	mov    eax,DWORD PTR [rbp-0x1c]
  42c4ae:	mov    DWORD PTR [rbp-0x34],eax
  42c4b1:	jmp    42c45c <flatcc_json_parser_struct_as_root@@Base+0x2727>
  42c4b3:	nop
  42c4b4:	mov    rax,QWORD PTR [rbp-0x10]
  42c4b8:	mov    BYTE PTR [rax],0x0
  42c4bb:	mov    rax,QWORD PTR [rbp-0x10]
  42c4bf:	sub    rax,QWORD PTR [rbp-0x40]
  42c4c3:	mov    DWORD PTR [rbp-0x14],eax
  42c4c6:	mov    DWORD PTR [rbp-0x20],0x0
  42c4cd:	jmp    42c521 <flatcc_json_parser_struct_as_root@@Base+0x27ec>
  42c4cf:	mov    eax,DWORD PTR [rbp-0x20]
  42c4d2:	movsxd rdx,eax
  42c4d5:	mov    rax,QWORD PTR [rbp-0x40]
  42c4d9:	add    rax,rdx
  42c4dc:	movzx  eax,BYTE PTR [rax]
  42c4df:	mov    BYTE PTR [rbp-0x21],al
  42c4e2:	mov    eax,DWORD PTR [rbp-0x14]
  42c4e5:	dec    eax
  42c4e7:	sub    eax,DWORD PTR [rbp-0x20]
  42c4ea:	movsxd rdx,eax
  42c4ed:	mov    rax,QWORD PTR [rbp-0x40]
  42c4f1:	add    rax,rdx
  42c4f4:	mov    edx,DWORD PTR [rbp-0x20]
  42c4f7:	movsxd rcx,edx
  42c4fa:	mov    rdx,QWORD PTR [rbp-0x40]
  42c4fe:	add    rdx,rcx
  42c501:	movzx  eax,BYTE PTR [rax]
  42c504:	mov    BYTE PTR [rdx],al
  42c506:	mov    eax,DWORD PTR [rbp-0x14]
  42c509:	dec    eax
  42c50b:	sub    eax,DWORD PTR [rbp-0x20]
  42c50e:	movsxd rdx,eax
  42c511:	mov    rax,QWORD PTR [rbp-0x40]
  42c515:	add    rdx,rax
  42c518:	movzx  eax,BYTE PTR [rbp-0x21]
  42c51c:	mov    BYTE PTR [rdx],al
  42c51e:	inc    DWORD PTR [rbp-0x20]
  42c521:	mov    eax,DWORD PTR [rbp-0x14]
  42c524:	mov    edx,eax
  42c526:	shr    edx,0x1f
  42c529:	add    eax,edx
  42c52b:	sar    eax,1
  42c52d:	cmp    DWORD PTR [rbp-0x20],eax
  42c530:	jl     42c4cf <flatcc_json_parser_struct_as_root@@Base+0x279a>
  42c532:	mov    rax,QWORD PTR [rbp-0x10]
  42c536:	sub    rax,QWORD PTR [rbp-0x8]
  42c53a:	pop    rbp
  42c53b:	ret    
  42c53c:	endbr64 
  42c540:	push   rbp
  42c541:	mov    rbp,rsp
  42c544:	sub    rsp,0x40
  42c548:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42c54d:	mov    QWORD PTR [rbp-0x40],rdi
  42c551:	mov    rax,QWORD PTR fs:0x28
  42c55a:	mov    QWORD PTR [rbp-0x8],rax
  42c55e:	xor    eax,eax
  42c560:	mov    rax,QWORD PTR [rbp-0x38]
  42c564:	vmovq  xmm0,rax
  42c569:	call   42b744 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42c56e:	mov    QWORD PTR [rbp-0x18],rax
  42c572:	mov    rax,QWORD PTR [rbp-0x40]
  42c576:	mov    QWORD PTR [rbp-0x10],rax
  42c57a:	cmp    QWORD PTR [rbp-0x40],0x0
  42c57f:	jne    42c5a0 <flatcc_json_parser_struct_as_root@@Base+0x286b>
  42c581:	lea    rcx,[rip+0x10088]        # 43c610 <flatcc_builder_padding_base@@Base+0x33b0>
  42c588:	mov    edx,0xbd
  42c58d:	lea    rsi,[rip+0xfcfc]        # 43c290 <flatcc_builder_padding_base@@Base+0x3030>
  42c594:	lea    rdi,[rip+0xfd92]        # 43c32d <flatcc_builder_padding_base@@Base+0x30cd>
  42c59b:	call   4061b0 <__assert_fail@plt>
  42c5a0:	mov    rax,QWORD PTR [rbp-0x18]
  42c5a4:	lea    rdx,[rax+rax*1]
  42c5a8:	movabs rax,0xffe0000000000000
  42c5b2:	cmp    rdx,rax
  42c5b5:	jbe    42c5e4 <flatcc_json_parser_struct_as_root@@Base+0x28af>
  42c5b7:	mov    rax,QWORD PTR [rbp-0x18]
  42c5bb:	mov    ecx,eax
  42c5bd:	mov    rax,QWORD PTR [rbp-0x18]
  42c5c1:	shr    rax,0x20
  42c5c5:	mov    edx,eax
  42c5c7:	mov    rax,QWORD PTR [rbp-0x40]
  42c5cb:	lea    rsi,[rip+0xfd5f]        # 43c331 <flatcc_builder_padding_base@@Base+0x30d1>
  42c5d2:	mov    rdi,rax
  42c5d5:	mov    eax,0x0
  42c5da:	call   406260 <sprintf@plt>
  42c5df:	jmp    42c92e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42c5e4:	mov    rax,QWORD PTR [rbp-0x18]
  42c5e8:	test   rax,rax
  42c5eb:	jns    42c620 <flatcc_json_parser_struct_as_root@@Base+0x28eb>
  42c5ed:	mov    rax,QWORD PTR [rbp-0x10]
  42c5f1:	lea    rdx,[rax+0x1]
  42c5f5:	mov    QWORD PTR [rbp-0x10],rdx
  42c5f9:	mov    BYTE PTR [rax],0x2d
  42c5fc:	vmovsd xmm1,QWORD PTR [rbp-0x38]
  42c601:	vmovq  xmm0,QWORD PTR [rip+0x10537]        # 43cb40 <flatcc_builder_padding_base@@Base+0x38e0>
  42c609:	vxorpd xmm0,xmm0,xmm1
  42c60d:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42c612:	movabs rax,0x8000000000000000
  42c61c:	xor    QWORD PTR [rbp-0x18],rax
  42c620:	cmp    QWORD PTR [rbp-0x18],0x0
  42c625:	jne    42c64a <flatcc_json_parser_struct_as_root@@Base+0x2915>
  42c627:	mov    rax,QWORD PTR [rbp-0x10]
  42c62b:	lea    rdx,[rax+0x1]
  42c62f:	mov    QWORD PTR [rbp-0x10],rdx
  42c633:	mov    BYTE PTR [rax],0x30
  42c636:	mov    rax,QWORD PTR [rbp-0x10]
  42c63a:	mov    BYTE PTR [rax],0x0
  42c63d:	mov    rax,QWORD PTR [rbp-0x10]
  42c641:	sub    rax,QWORD PTR [rbp-0x40]
  42c645:	jmp    42c92e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42c64a:	movabs rax,0x7ff0000000000000
  42c654:	cmp    QWORD PTR [rbp-0x18],rax
  42c658:	jne    42c69b <flatcc_json_parser_struct_as_root@@Base+0x2966>
  42c65a:	mov    rax,QWORD PTR [rbp-0x10]
  42c65e:	lea    rdx,[rax+0x1]
  42c662:	mov    QWORD PTR [rbp-0x10],rdx
  42c666:	mov    BYTE PTR [rax],0x69
  42c669:	mov    rax,QWORD PTR [rbp-0x10]
  42c66d:	lea    rdx,[rax+0x1]
  42c671:	mov    QWORD PTR [rbp-0x10],rdx
  42c675:	mov    BYTE PTR [rax],0x6e
  42c678:	mov    rax,QWORD PTR [rbp-0x10]
  42c67c:	lea    rdx,[rax+0x1]
  42c680:	mov    QWORD PTR [rbp-0x10],rdx
  42c684:	mov    BYTE PTR [rax],0x66
  42c687:	mov    rax,QWORD PTR [rbp-0x10]
  42c68b:	mov    BYTE PTR [rax],0x0
  42c68e:	mov    rax,QWORD PTR [rbp-0x10]
  42c692:	sub    rax,QWORD PTR [rbp-0x40]
  42c696:	jmp    42c92e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42c69b:	lea    rdx,[rbp-0x2c]
  42c69f:	lea    rsi,[rbp-0x28]
  42c6a3:	mov    rcx,QWORD PTR [rbp-0x10]
  42c6a7:	mov    rax,QWORD PTR [rbp-0x38]
  42c6ab:	mov    rdi,rcx
  42c6ae:	vmovq  xmm0,rax
  42c6b3:	call   42c196 <flatcc_json_parser_struct_as_root@@Base+0x2461>
  42c6b8:	mov    DWORD PTR [rbp-0x20],eax
  42c6bb:	cmp    DWORD PTR [rbp-0x20],0x0
  42c6bf:	jne    42c6f3 <flatcc_json_parser_struct_as_root@@Base+0x29be>
  42c6c1:	mov    rdx,QWORD PTR [rbp-0x38]
  42c6c5:	mov    rax,QWORD PTR [rbp-0x10]
  42c6c9:	vmovq  xmm0,rdx
  42c6ce:	lea    rsi,[rip+0xfc6a]        # 43c33f <flatcc_builder_padding_base@@Base+0x30df>
  42c6d5:	mov    rdi,rax
  42c6d8:	mov    eax,0x1
  42c6dd:	call   406260 <sprintf@plt>
  42c6e2:	mov    edx,eax
  42c6e4:	mov    rax,QWORD PTR [rbp-0x10]
  42c6e8:	sub    rax,QWORD PTR [rbp-0x40]
  42c6ec:	add    eax,edx
  42c6ee:	jmp    42c92e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42c6f3:	mov    eax,DWORD PTR [rbp-0x28]
  42c6f6:	mov    edx,0x2
  42c6fb:	cmp    eax,0x2
  42c6fe:	cmovl  eax,edx
  42c701:	mov    edx,DWORD PTR [rbp-0x2c]
  42c704:	neg    edx
  42c706:	cmp    eax,edx
  42c708:	jle    42c711 <flatcc_json_parser_struct_as_root@@Base+0x29dc>
  42c70a:	mov    eax,DWORD PTR [rbp-0x2c]
  42c70d:	neg    eax
  42c70f:	jmp    42c721 <flatcc_json_parser_struct_as_root@@Base+0x29ec>
  42c711:	mov    eax,DWORD PTR [rbp-0x28]
  42c714:	mov    edx,0x2
  42c719:	cmp    eax,0x2
  42c71c:	cmovl  eax,edx
  42c71f:	dec    eax
  42c721:	mov    DWORD PTR [rbp-0x1c],eax
  42c724:	mov    eax,DWORD PTR [rbp-0x2c]
  42c727:	test   eax,eax
  42c729:	jns    42c7d7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42c72f:	mov    edx,DWORD PTR [rbp-0x28]
  42c732:	mov    eax,DWORD PTR [rbp-0x2c]
  42c735:	add    eax,edx
  42c737:	cmp    eax,0xfffffffe
  42c73a:	jl     42c7d7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42c740:	mov    eax,DWORD PTR [rbp-0x2c]
  42c743:	neg    eax
  42c745:	mov    edx,eax
  42c747:	mov    eax,DWORD PTR [rbp-0x28]
  42c74a:	cmp    edx,eax
  42c74c:	jl     42c7d7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42c752:	mov    eax,DWORD PTR [rbp-0x28]
  42c755:	movsxd rdx,eax
  42c758:	mov    eax,DWORD PTR [rbp-0x2c]
  42c75b:	movsxd rcx,eax
  42c75e:	mov    eax,DWORD PTR [rbp-0x28]
  42c761:	cdqe   
  42c763:	add    rax,rcx
  42c766:	mov    ecx,0x2
  42c76b:	sub    rcx,rax
  42c76e:	mov    rax,QWORD PTR [rbp-0x10]
  42c772:	add    rcx,rax
  42c775:	mov    rax,QWORD PTR [rbp-0x10]
  42c779:	mov    rsi,rax
  42c77c:	mov    rdi,rcx
  42c77f:	call   406250 <memmove@plt>
  42c784:	mov    rax,QWORD PTR [rbp-0x10]
  42c788:	mov    BYTE PTR [rax],0x30
  42c78b:	mov    rax,QWORD PTR [rbp-0x10]
  42c78f:	inc    rax
  42c792:	mov    BYTE PTR [rax],0x2e
  42c795:	mov    DWORD PTR [rbp-0x24],0x2
  42c79c:	jmp    42c7b1 <flatcc_json_parser_struct_as_root@@Base+0x2a7c>
  42c79e:	mov    eax,DWORD PTR [rbp-0x24]
  42c7a1:	movsxd rdx,eax
  42c7a4:	mov    rax,QWORD PTR [rbp-0x10]
  42c7a8:	add    rax,rdx
  42c7ab:	mov    BYTE PTR [rax],0x30
  42c7ae:	inc    DWORD PTR [rbp-0x24]
  42c7b1:	mov    eax,DWORD PTR [rbp-0x2c]
  42c7b4:	mov    edx,0x2
  42c7b9:	sub    edx,eax
  42c7bb:	mov    eax,DWORD PTR [rbp-0x28]
  42c7be:	sub    edx,eax
  42c7c0:	mov    eax,edx
  42c7c2:	cmp    DWORD PTR [rbp-0x24],eax
  42c7c5:	jl     42c79e <flatcc_json_parser_struct_as_root@@Base+0x2a69>
  42c7c7:	mov    edx,DWORD PTR [rbp-0x28]
  42c7ca:	mov    eax,DWORD PTR [rbp-0x24]
  42c7cd:	add    eax,edx
  42c7cf:	mov    DWORD PTR [rbp-0x28],eax
  42c7d2:	jmp    42c90d <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42c7d7:	mov    eax,DWORD PTR [rbp-0x2c]
  42c7da:	test   eax,eax
  42c7dc:	jns    42c896 <flatcc_json_parser_struct_as_root@@Base+0x2b61>
  42c7e2:	mov    eax,DWORD PTR [rbp-0x28]
  42c7e5:	cmp    eax,0x1
  42c7e8:	jle    42c896 <flatcc_json_parser_struct_as_root@@Base+0x2b61>
  42c7ee:	mov    DWORD PTR [rbp-0x24],0x0
  42c7f5:	jmp    42c823 <flatcc_json_parser_struct_as_root@@Base+0x2aee>
  42c7f7:	mov    eax,DWORD PTR [rbp-0x28]
  42c7fa:	sub    eax,DWORD PTR [rbp-0x24]
  42c7fd:	cdqe   
  42c7ff:	lea    rdx,[rax-0x1]
  42c803:	mov    rax,QWORD PTR [rbp-0x10]
  42c807:	lea    rcx,[rdx+rax*1]
  42c80b:	mov    eax,DWORD PTR [rbp-0x28]
  42c80e:	sub    eax,DWORD PTR [rbp-0x24]
  42c811:	movsxd rdx,eax
  42c814:	mov    rax,QWORD PTR [rbp-0x10]
  42c818:	add    rdx,rax
  42c81b:	movzx  eax,BYTE PTR [rcx]
  42c81e:	mov    BYTE PTR [rdx],al
  42c820:	inc    DWORD PTR [rbp-0x24]
  42c823:	mov    eax,DWORD PTR [rbp-0x24]
  42c826:	cmp    eax,DWORD PTR [rbp-0x1c]
  42c829:	jl     42c7f7 <flatcc_json_parser_struct_as_root@@Base+0x2ac2>
  42c82b:	mov    eax,DWORD PTR [rbp-0x28]
  42c82e:	lea    edx,[rax+0x1]
  42c831:	mov    DWORD PTR [rbp-0x28],edx
  42c834:	sub    eax,DWORD PTR [rbp-0x1c]
  42c837:	movsxd rdx,eax
  42c83a:	mov    rax,QWORD PTR [rbp-0x10]
  42c83e:	add    rax,rdx
  42c841:	mov    BYTE PTR [rax],0x2e
  42c844:	mov    edx,DWORD PTR [rbp-0x2c]
  42c847:	mov    eax,DWORD PTR [rbp-0x1c]
  42c84a:	add    eax,edx
  42c84c:	mov    DWORD PTR [rbp-0x2c],eax
  42c84f:	mov    eax,DWORD PTR [rbp-0x2c]
  42c852:	test   eax,eax
  42c854:	je     42c90d <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42c85a:	mov    eax,DWORD PTR [rbp-0x28]
  42c85d:	lea    edx,[rax+0x1]
  42c860:	mov    DWORD PTR [rbp-0x28],edx
  42c863:	movsxd rdx,eax
  42c866:	mov    rax,QWORD PTR [rbp-0x10]
  42c86a:	add    rax,rdx
  42c86d:	mov    BYTE PTR [rax],0x65
  42c870:	mov    eax,DWORD PTR [rbp-0x28]
  42c873:	movsxd rdx,eax
  42c876:	mov    rax,QWORD PTR [rbp-0x10]
  42c87a:	add    rdx,rax
  42c87d:	mov    eax,DWORD PTR [rbp-0x2c]
  42c880:	mov    rsi,rdx
  42c883:	mov    edi,eax
  42c885:	call   42c425 <flatcc_json_parser_struct_as_root@@Base+0x26f0>
  42c88a:	mov    edx,eax
  42c88c:	mov    eax,DWORD PTR [rbp-0x28]
  42c88f:	add    eax,edx
  42c891:	mov    DWORD PTR [rbp-0x28],eax
  42c894:	jmp    42c90d <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42c896:	mov    eax,DWORD PTR [rbp-0x2c]
  42c899:	test   eax,eax
  42c89b:	js     42c8a5 <flatcc_json_parser_struct_as_root@@Base+0x2b70>
  42c89d:	mov    eax,DWORD PTR [rbp-0x2c]
  42c8a0:	cmp    eax,0x2
  42c8a3:	jle    42c8e1 <flatcc_json_parser_struct_as_root@@Base+0x2bac>
  42c8a5:	mov    eax,DWORD PTR [rbp-0x28]
  42c8a8:	lea    edx,[rax+0x1]
  42c8ab:	mov    DWORD PTR [rbp-0x28],edx
  42c8ae:	movsxd rdx,eax
  42c8b1:	mov    rax,QWORD PTR [rbp-0x10]
  42c8b5:	add    rax,rdx
  42c8b8:	mov    BYTE PTR [rax],0x65
  42c8bb:	mov    eax,DWORD PTR [rbp-0x28]
  42c8be:	movsxd rdx,eax
  42c8c1:	mov    rax,QWORD PTR [rbp-0x10]
  42c8c5:	add    rdx,rax
  42c8c8:	mov    eax,DWORD PTR [rbp-0x2c]
  42c8cb:	mov    rsi,rdx
  42c8ce:	mov    edi,eax
  42c8d0:	call   42c425 <flatcc_json_parser_struct_as_root@@Base+0x26f0>
  42c8d5:	mov    edx,eax
  42c8d7:	mov    eax,DWORD PTR [rbp-0x28]
  42c8da:	add    eax,edx
  42c8dc:	mov    DWORD PTR [rbp-0x28],eax
  42c8df:	jmp    42c90d <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42c8e1:	mov    eax,DWORD PTR [rbp-0x2c]
  42c8e4:	test   eax,eax
  42c8e6:	jle    42c90d <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42c8e8:	jmp    42c900 <flatcc_json_parser_struct_as_root@@Base+0x2bcb>
  42c8ea:	mov    eax,DWORD PTR [rbp-0x28]
  42c8ed:	lea    edx,[rax+0x1]
  42c8f0:	mov    DWORD PTR [rbp-0x28],edx
  42c8f3:	movsxd rdx,eax
  42c8f6:	mov    rax,QWORD PTR [rbp-0x10]
  42c8fa:	add    rax,rdx
  42c8fd:	mov    BYTE PTR [rax],0x30
  42c900:	mov    eax,DWORD PTR [rbp-0x2c]
  42c903:	lea    edx,[rax-0x1]
  42c906:	mov    DWORD PTR [rbp-0x2c],edx
  42c909:	test   eax,eax
  42c90b:	jg     42c8ea <flatcc_json_parser_struct_as_root@@Base+0x2bb5>
  42c90d:	mov    eax,DWORD PTR [rbp-0x28]
  42c910:	movsxd rdx,eax
  42c913:	mov    rax,QWORD PTR [rbp-0x10]
  42c917:	add    rax,rdx
  42c91a:	mov    BYTE PTR [rax],0x0
  42c91d:	mov    eax,DWORD PTR [rbp-0x28]
  42c920:	movsxd rdx,eax
  42c923:	mov    rax,QWORD PTR [rbp-0x10]
  42c927:	add    rax,rdx
  42c92a:	sub    rax,QWORD PTR [rbp-0x40]
  42c92e:	mov    rdi,QWORD PTR [rbp-0x8]
  42c932:	xor    rdi,QWORD PTR fs:0x28
  42c93b:	je     42c942 <flatcc_json_parser_struct_as_root@@Base+0x2c0d>
  42c93d:	call   4061a0 <__stack_chk_fail@plt>
  42c942:	leave  
  42c943:	ret    
  42c944:	endbr64 
  42c948:	push   rbp
  42c949:	mov    rbp,rsp
  42c94c:	mov    DWORD PTR [rbp-0x4],edi
  42c94f:	cmp    DWORD PTR [rbp-0x4],0x5
  42c953:	ja     42c9b0 <flatcc_json_parser_struct_as_root@@Base+0x2c7b>
  42c955:	mov    eax,DWORD PTR [rbp-0x4]
  42c958:	lea    rdx,[rax*4+0x0]
  42c960:	lea    rax,[rip+0xfa49]        # 43c3b0 <flatcc_builder_padding_base@@Base+0x3150>
  42c967:	mov    eax,DWORD PTR [rdx+rax*1]
  42c96a:	movsxd rdx,eax
  42c96d:	lea    rax,[rip+0xfa3c]        # 43c3b0 <flatcc_builder_padding_base@@Base+0x3150>
  42c974:	add    rax,rdx
  42c977:	notrack jmp rax
  42c97a:	lea    rax,[rip+0xf9c4]        # 43c345 <flatcc_builder_padding_base@@Base+0x30e5>
  42c981:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c983:	lea    rax,[rip+0xf9be]        # 43c348 <flatcc_builder_padding_base@@Base+0x30e8>
  42c98a:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c98c:	lea    rax,[rip+0xf9c6]        # 43c359 <flatcc_builder_padding_base@@Base+0x30f9>
  42c993:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c995:	lea    rax,[rip+0xf9ca]        # 43c366 <flatcc_builder_padding_base@@Base+0x3106>
  42c99c:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c99e:	lea    rax,[rip+0xf9d2]        # 43c377 <flatcc_builder_padding_base@@Base+0x3117>
  42c9a5:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c9a7:	lea    rax,[rip+0xf9dd]        # 43c38b <flatcc_builder_padding_base@@Base+0x312b>
  42c9ae:	jmp    42c9b7 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42c9b0:	lea    rax,[rip+0xf9e9]        # 43c3a0 <flatcc_builder_padding_base@@Base+0x3140>
  42c9b7:	pop    rbp
  42c9b8:	ret    
  42c9b9:	endbr64 
  42c9bd:	push   rbp
  42c9be:	mov    rbp,rsp
  42c9c1:	mov    QWORD PTR [rbp-0x28],rdi
  42c9c5:	mov    DWORD PTR [rbp-0x2c],esi
  42c9c8:	mov    rcx,QWORD PTR [rbp-0x28]
  42c9cc:	movabs rdx,0xaaaaaaaaaaaaaaab
  42c9d6:	mov    rax,rcx
  42c9d9:	mul    rdx
  42c9dc:	shr    rdx,1
  42c9df:	mov    rax,rdx
  42c9e2:	add    rax,rax
  42c9e5:	add    rax,rdx
  42c9e8:	sub    rcx,rax
  42c9eb:	mov    rax,rcx
  42c9ee:	mov    QWORD PTR [rbp-0x8],rax
  42c9f2:	mov    rax,QWORD PTR [rbp-0x28]
  42c9f6:	shl    rax,0x2
  42c9fa:	movabs rdx,0xaaaaaaaaaaaaaaab
  42ca04:	mul    rdx
  42ca07:	mov    rax,rdx
  42ca0a:	shr    rax,1
  42ca0d:	add    rax,0x3
  42ca11:	and    rax,0xfffffffffffffffc
  42ca15:	mov    QWORD PTR [rbp-0x10],rax
  42ca19:	mov    eax,DWORD PTR [rbp-0x2c]
  42ca1c:	and    eax,0x80
  42ca21:	mov    DWORD PTR [rbp-0x14],eax
  42ca24:	cmp    DWORD PTR [rbp-0x14],0x0
  42ca28:	jne    42ca45 <flatcc_json_parser_struct_as_root@@Base+0x2d10>
  42ca2a:	cmp    QWORD PTR [rbp-0x8],0x1
  42ca2f:	je     42ca3e <flatcc_json_parser_struct_as_root@@Base+0x2d09>
  42ca31:	cmp    QWORD PTR [rbp-0x8],0x2
  42ca36:	jne    42ca48 <flatcc_json_parser_struct_as_root@@Base+0x2d13>
  42ca38:	dec    QWORD PTR [rbp-0x10]
  42ca3c:	jmp    42ca49 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42ca3e:	sub    QWORD PTR [rbp-0x10],0x2
  42ca43:	jmp    42ca49 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42ca45:	nop
  42ca46:	jmp    42ca49 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42ca48:	nop
  42ca49:	mov    rax,QWORD PTR [rbp-0x10]
  42ca4d:	pop    rbp
  42ca4e:	ret    
  42ca4f:	endbr64 
  42ca53:	push   rbp
  42ca54:	mov    rbp,rsp
  42ca57:	mov    QWORD PTR [rbp-0x18],rdi
  42ca5b:	mov    rax,QWORD PTR [rbp-0x18]
  42ca5f:	and    eax,0x3
  42ca62:	mov    QWORD PTR [rbp-0x10],rax
  42ca66:	mov    rax,QWORD PTR [rbp-0x18]
  42ca6a:	shr    rax,0x2
  42ca6e:	mov    rdx,rax
  42ca71:	mov    rax,rdx
  42ca74:	add    rax,rax
  42ca77:	add    rax,rdx
  42ca7a:	mov    QWORD PTR [rbp-0x8],rax
  42ca7e:	cmp    QWORD PTR [rbp-0x10],0x2
  42ca83:	je     42ca96 <flatcc_json_parser_struct_as_root@@Base+0x2d61>
  42ca85:	cmp    QWORD PTR [rbp-0x10],0x3
  42ca8a:	jne    42ca9f <flatcc_json_parser_struct_as_root@@Base+0x2d6a>
  42ca8c:	mov    rax,QWORD PTR [rbp-0x8]
  42ca90:	add    rax,0x2
  42ca94:	jmp    42caa3 <flatcc_json_parser_struct_as_root@@Base+0x2d6e>
  42ca96:	mov    rax,QWORD PTR [rbp-0x8]
  42ca9a:	inc    rax
  42ca9d:	jmp    42caa3 <flatcc_json_parser_struct_as_root@@Base+0x2d6e>
  42ca9f:	mov    rax,QWORD PTR [rbp-0x8]
  42caa3:	pop    rbp
  42caa4:	ret    
  42caa5:	endbr64 
  42caa9:	push   rbp
  42caaa:	mov    rbp,rsp
  42caad:	mov    QWORD PTR [rbp-0x38],rdi
  42cab1:	mov    QWORD PTR [rbp-0x40],rsi
  42cab5:	mov    QWORD PTR [rbp-0x48],rdx
  42cab9:	mov    QWORD PTR [rbp-0x50],rcx
  42cabd:	mov    DWORD PTR [rbp-0x54],r8d
  42cac1:	lea    rax,[rip+0xf900]        # 43c3c8 <flatcc_builder_padding_base@@Base+0x3168>
  42cac8:	mov    QWORD PTR [rbp-0x18],rax
  42cacc:	lea    rax,[rip+0xf93d]        # 43c410 <flatcc_builder_padding_base@@Base+0x31b0>
  42cad3:	mov    QWORD PTR [rbp-0x10],rax
  42cad7:	mov    rax,QWORD PTR [rbp-0x38]
  42cadb:	mov    QWORD PTR [rbp-0x8],rax
  42cadf:	mov    eax,DWORD PTR [rbp-0x54]
  42cae2:	and    eax,0x80
  42cae7:	mov    DWORD PTR [rbp-0x2c],eax
  42caea:	mov    QWORD PTR [rbp-0x20],0x0
  42caf2:	mov    DWORD PTR [rbp-0x30],0x3
  42caf9:	cmp    QWORD PTR [rbp-0x50],0x0
  42cafe:	jne    42cb0c <flatcc_json_parser_struct_as_root@@Base+0x2dd7>
  42cb00:	mov    DWORD PTR [rbp-0x30],0x2
  42cb07:	jmp    42cd64 <flatcc_json_parser_struct_as_root@@Base+0x302f>
  42cb0c:	mov    rax,QWORD PTR [rbp-0x50]
  42cb10:	mov    rax,QWORD PTR [rax]
  42cb13:	mov    QWORD PTR [rbp-0x20],rax
  42cb17:	and    DWORD PTR [rbp-0x54],0xffffff1f
  42cb1e:	cmp    DWORD PTR [rbp-0x54],0x0
  42cb22:	je     42cb2f <flatcc_json_parser_struct_as_root@@Base+0x2dfa>
  42cb24:	cmp    DWORD PTR [rbp-0x54],0x1
  42cb28:	je     42cb39 <flatcc_json_parser_struct_as_root@@Base+0x2e04>
  42cb2a:	jmp    42cd64 <flatcc_json_parser_struct_as_root@@Base+0x302f>
  42cb2f:	mov    rax,QWORD PTR [rbp-0x18]
  42cb33:	mov    QWORD PTR [rbp-0x28],rax
  42cb37:	jmp    42cb42 <flatcc_json_parser_struct_as_root@@Base+0x2e0d>
  42cb39:	mov    rax,QWORD PTR [rbp-0x10]
  42cb3d:	mov    QWORD PTR [rbp-0x28],rax
  42cb41:	nop
  42cb42:	mov    DWORD PTR [rbp-0x30],0x0
  42cb49:	jmp    42cc1b <flatcc_json_parser_struct_as_root@@Base+0x2ee6>
  42cb4e:	mov    rax,QWORD PTR [rbp-0x40]
  42cb52:	movzx  eax,BYTE PTR [rax]
  42cb55:	shr    al,0x2
  42cb58:	movzx  edx,al
  42cb5b:	mov    rax,QWORD PTR [rbp-0x28]
  42cb5f:	add    rax,rdx
  42cb62:	movzx  eax,BYTE PTR [rax]
  42cb65:	mov    rdx,QWORD PTR [rbp-0x38]
  42cb69:	mov    BYTE PTR [rdx],al
  42cb6b:	mov    rax,QWORD PTR [rbp-0x40]
  42cb6f:	movzx  eax,BYTE PTR [rax]
  42cb72:	movzx  eax,al
  42cb75:	shl    eax,0x4
  42cb78:	and    eax,0x30
  42cb7b:	mov    edx,eax
  42cb7d:	mov    rax,QWORD PTR [rbp-0x40]
  42cb81:	inc    rax
  42cb84:	movzx  eax,BYTE PTR [rax]
  42cb87:	shr    al,0x4
  42cb8a:	movzx  eax,al
  42cb8d:	or     eax,edx
  42cb8f:	movsxd rdx,eax
  42cb92:	mov    rax,QWORD PTR [rbp-0x28]
  42cb96:	add    rax,rdx
  42cb99:	mov    rdx,QWORD PTR [rbp-0x38]
  42cb9d:	inc    rdx
  42cba0:	movzx  eax,BYTE PTR [rax]
  42cba3:	mov    BYTE PTR [rdx],al
  42cba5:	mov    rax,QWORD PTR [rbp-0x40]
  42cba9:	inc    rax
  42cbac:	movzx  eax,BYTE PTR [rax]
  42cbaf:	movzx  eax,al
  42cbb2:	shl    eax,0x2
  42cbb5:	and    eax,0x3c
  42cbb8:	mov    edx,eax
  42cbba:	mov    rax,QWORD PTR [rbp-0x40]
  42cbbe:	add    rax,0x2
  42cbc2:	movzx  eax,BYTE PTR [rax]
  42cbc5:	shr    al,0x6
  42cbc8:	movzx  eax,al
  42cbcb:	or     eax,edx
  42cbcd:	movsxd rdx,eax
  42cbd0:	mov    rax,QWORD PTR [rbp-0x28]
  42cbd4:	add    rax,rdx
  42cbd7:	mov    rdx,QWORD PTR [rbp-0x38]
  42cbdb:	add    rdx,0x2
  42cbdf:	movzx  eax,BYTE PTR [rax]
  42cbe2:	mov    BYTE PTR [rdx],al
  42cbe4:	mov    rax,QWORD PTR [rbp-0x40]
  42cbe8:	add    rax,0x2
  42cbec:	movzx  eax,BYTE PTR [rax]
  42cbef:	movzx  eax,al
  42cbf2:	and    eax,0x3f
  42cbf5:	mov    rdx,rax
  42cbf8:	mov    rax,QWORD PTR [rbp-0x28]
  42cbfc:	add    rax,rdx
  42cbff:	mov    rdx,QWORD PTR [rbp-0x38]
  42cc03:	add    rdx,0x3
  42cc07:	movzx  eax,BYTE PTR [rax]
  42cc0a:	mov    BYTE PTR [rdx],al
  42cc0c:	sub    QWORD PTR [rbp-0x20],0x3
  42cc11:	add    QWORD PTR [rbp-0x38],0x4
  42cc16:	add    QWORD PTR [rbp-0x40],0x3
  42cc1b:	cmp    QWORD PTR [rbp-0x20],0x2
  42cc20:	ja     42cb4e <flatcc_json_parser_struct_as_root@@Base+0x2e19>
  42cc26:	cmp    QWORD PTR [rbp-0x20],0x1
  42cc2b:	je     42ccdf <flatcc_json_parser_struct_as_root@@Base+0x2faa>
  42cc31:	cmp    QWORD PTR [rbp-0x20],0x2
  42cc36:	jne    42cd4f <flatcc_json_parser_struct_as_root@@Base+0x301a>
  42cc3c:	mov    rax,QWORD PTR [rbp-0x40]
  42cc40:	movzx  eax,BYTE PTR [rax]
  42cc43:	shr    al,0x2
  42cc46:	movzx  edx,al
  42cc49:	mov    rax,QWORD PTR [rbp-0x28]
  42cc4d:	add    rax,rdx
  42cc50:	movzx  eax,BYTE PTR [rax]
  42cc53:	mov    rdx,QWORD PTR [rbp-0x38]
  42cc57:	mov    BYTE PTR [rdx],al
  42cc59:	mov    rax,QWORD PTR [rbp-0x40]
  42cc5d:	movzx  eax,BYTE PTR [rax]
  42cc60:	movzx  eax,al
  42cc63:	shl    eax,0x4
  42cc66:	and    eax,0x30
  42cc69:	mov    edx,eax
  42cc6b:	mov    rax,QWORD PTR [rbp-0x40]
  42cc6f:	inc    rax
  42cc72:	movzx  eax,BYTE PTR [rax]
  42cc75:	shr    al,0x4
  42cc78:	movzx  eax,al
  42cc7b:	or     eax,edx
  42cc7d:	movsxd rdx,eax
  42cc80:	mov    rax,QWORD PTR [rbp-0x28]
  42cc84:	add    rax,rdx
  42cc87:	mov    rdx,QWORD PTR [rbp-0x38]
  42cc8b:	inc    rdx
  42cc8e:	movzx  eax,BYTE PTR [rax]
  42cc91:	mov    BYTE PTR [rdx],al
  42cc93:	mov    rax,QWORD PTR [rbp-0x40]
  42cc97:	inc    rax
  42cc9a:	movzx  eax,BYTE PTR [rax]
  42cc9d:	movzx  eax,al
  42cca0:	shl    eax,0x2
  42cca3:	cdqe   
  42cca5:	and    eax,0x3c
  42cca8:	mov    rdx,rax
  42ccab:	mov    rax,QWORD PTR [rbp-0x28]
  42ccaf:	add    rax,rdx
  42ccb2:	mov    rdx,QWORD PTR [rbp-0x38]
  42ccb6:	add    rdx,0x2
  42ccba:	movzx  eax,BYTE PTR [rax]
  42ccbd:	mov    BYTE PTR [rdx],al
  42ccbf:	add    QWORD PTR [rbp-0x38],0x3
  42ccc4:	cmp    DWORD PTR [rbp-0x2c],0x0
  42ccc8:	je     42cd58 <flatcc_json_parser_struct_as_root@@Base+0x3023>
  42ccce:	mov    rax,QWORD PTR [rbp-0x38]
  42ccd2:	lea    rdx,[rax+0x1]
  42ccd6:	mov    QWORD PTR [rbp-0x38],rdx
  42ccda:	mov    BYTE PTR [rax],0x3d
  42ccdd:	jmp    42cd58 <flatcc_json_parser_struct_as_root@@Base+0x3023>
  42ccdf:	mov    rax,QWORD PTR [rbp-0x40]
  42cce3:	movzx  eax,BYTE PTR [rax]
  42cce6:	shr    al,0x2
  42cce9:	movzx  edx,al
  42ccec:	mov    rax,QWORD PTR [rbp-0x28]
  42ccf0:	add    rax,rdx
  42ccf3:	movzx  eax,BYTE PTR [rax]
  42ccf6:	mov    rdx,QWORD PTR [rbp-0x38]
  42ccfa:	mov    BYTE PTR [rdx],al
  42ccfc:	mov    rax,QWORD PTR [rbp-0x40]
  42cd00:	movzx  eax,BYTE PTR [rax]
  42cd03:	movzx  eax,al
  42cd06:	shl    eax,0x4
  42cd09:	cdqe   
  42cd0b:	and    eax,0x30
  42cd0e:	mov    rdx,rax
  42cd11:	mov    rax,QWORD PTR [rbp-0x28]
  42cd15:	add    rax,rdx
  42cd18:	mov    rdx,QWORD PTR [rbp-0x38]
  42cd1c:	inc    rdx
  42cd1f:	movzx  eax,BYTE PTR [rax]
  42cd22:	mov    BYTE PTR [rdx],al
  42cd24:	add    QWORD PTR [rbp-0x38],0x2
  42cd29:	cmp    DWORD PTR [rbp-0x2c],0x0
  42cd2d:	je     42cd5b <flatcc_json_parser_struct_as_root@@Base+0x3026>
  42cd2f:	mov    rax,QWORD PTR [rbp-0x38]
  42cd33:	lea    rdx,[rax+0x1]
  42cd37:	mov    QWORD PTR [rbp-0x38],rdx
  42cd3b:	mov    BYTE PTR [rax],0x3d
  42cd3e:	mov    rax,QWORD PTR [rbp-0x38]
  42cd42:	lea    rdx,[rax+0x1]
  42cd46:	mov    QWORD PTR [rbp-0x38],rdx
  42cd4a:	mov    BYTE PTR [rax],0x3d
  42cd4d:	jmp    42cd5b <flatcc_json_parser_struct_as_root@@Base+0x3026>
  42cd4f:	mov    DWORD PTR [rbp-0x2c],0x0
  42cd56:	jmp    42cd5c <flatcc_json_parser_struct_as_root@@Base+0x3027>
  42cd58:	nop
  42cd59:	jmp    42cd5c <flatcc_json_parser_struct_as_root@@Base+0x3027>
  42cd5b:	nop
  42cd5c:	mov    QWORD PTR [rbp-0x20],0x0
  42cd64:	cmp    QWORD PTR [rbp-0x48],0x0
  42cd69:	je     42cd7d <flatcc_json_parser_struct_as_root@@Base+0x3048>
  42cd6b:	mov    rax,QWORD PTR [rbp-0x38]
  42cd6f:	sub    rax,QWORD PTR [rbp-0x8]
  42cd73:	mov    rdx,rax
  42cd76:	mov    rax,QWORD PTR [rbp-0x48]
  42cd7a:	mov    QWORD PTR [rax],rdx
  42cd7d:	cmp    QWORD PTR [rbp-0x50],0x0
  42cd82:	je     42cd99 <flatcc_json_parser_struct_as_root@@Base+0x3064>
  42cd84:	mov    rax,QWORD PTR [rbp-0x50]
  42cd88:	mov    rax,QWORD PTR [rax]
  42cd8b:	sub    rax,QWORD PTR [rbp-0x20]
  42cd8f:	mov    rdx,rax
  42cd92:	mov    rax,QWORD PTR [rbp-0x50]
  42cd96:	mov    QWORD PTR [rax],rdx
  42cd99:	mov    eax,DWORD PTR [rbp-0x30]
  42cd9c:	pop    rbp
  42cd9d:	ret    
  42cd9e:	endbr64 
  42cda2:	push   rbp
  42cda3:	mov    rbp,rsp
  42cda6:	add    rsp,0xffffffffffffff80
  42cdaa:	mov    QWORD PTR [rbp-0x58],rdi
  42cdae:	mov    QWORD PTR [rbp-0x60],rsi
  42cdb2:	mov    QWORD PTR [rbp-0x68],rdx
  42cdb6:	mov    QWORD PTR [rbp-0x70],rcx
  42cdba:	mov    DWORD PTR [rbp-0x74],r8d
  42cdbe:	mov    rax,QWORD PTR fs:0x28
  42cdc7:	mov    QWORD PTR [rbp-0x8],rax
  42cdcb:	xor    eax,eax
  42cdcd:	mov    DWORD PTR [rbp-0x50],0x0
  42cdd4:	mov    rax,QWORD PTR [rbp-0x58]
  42cdd8:	mov    QWORD PTR [rbp-0x18],rax
  42cddc:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  42cde4:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42cdec:	lea    rax,[rip+0xf84d]        # 43c640 <flatcc_builder_padding_base@@Base+0x33e0>
  42cdf3:	mov    QWORD PTR [rbp-0x20],rax
  42cdf7:	mov    eax,DWORD PTR [rbp-0x74]
  42cdfa:	and    eax,0x20
  42cdfd:	mov    DWORD PTR [rbp-0x4c],eax
  42ce00:	cmp    QWORD PTR [rbp-0x70],0x0
  42ce05:	je     42ce12 <flatcc_json_parser_struct_as_root@@Base+0x30dd>
  42ce07:	mov    rax,QWORD PTR [rbp-0x70]
  42ce0b:	mov    rax,QWORD PTR [rax]
  42ce0e:	mov    QWORD PTR [rbp-0x30],rax
  42ce12:	mov    rax,QWORD PTR [rbp-0x30]
  42ce16:	mov    QWORD PTR [rbp-0x28],rax
  42ce1a:	and    DWORD PTR [rbp-0x74],0xffffff1f
  42ce21:	cmp    DWORD PTR [rbp-0x74],0x0
  42ce25:	je     42ce2f <flatcc_json_parser_struct_as_root@@Base+0x30fa>
  42ce27:	cmp    DWORD PTR [rbp-0x74],0x1
  42ce2b:	je     42ce4b <flatcc_json_parser_struct_as_root@@Base+0x3116>
  42ce2d:	jmp    42ce67 <flatcc_json_parser_struct_as_root@@Base+0x3132>
  42ce2f:	cmp    DWORD PTR [rbp-0x4c],0x0
  42ce33:	je     42ce3e <flatcc_json_parser_struct_as_root@@Base+0x3109>
  42ce35:	lea    rax,[rip+0xf904]        # 43c740 <flatcc_builder_padding_base@@Base+0x34e0>
  42ce3c:	jmp    42ce45 <flatcc_json_parser_struct_as_root@@Base+0x3110>
  42ce3e:	lea    rax,[rip+0xf7fb]        # 43c640 <flatcc_builder_padding_base@@Base+0x33e0>
  42ce45:	mov    QWORD PTR [rbp-0x20],rax
  42ce49:	jmp    42ce73 <flatcc_json_parser_struct_as_root@@Base+0x313e>
  42ce4b:	cmp    DWORD PTR [rbp-0x4c],0x0
  42ce4f:	je     42ce5a <flatcc_json_parser_struct_as_root@@Base+0x3125>
  42ce51:	lea    rax,[rip+0xf9e8]        # 43c840 <flatcc_builder_padding_base@@Base+0x35e0>
  42ce58:	jmp    42ce61 <flatcc_json_parser_struct_as_root@@Base+0x312c>
  42ce5a:	lea    rax,[rip+0xfadf]        # 43c940 <flatcc_builder_padding_base@@Base+0x36e0>
  42ce61:	mov    QWORD PTR [rbp-0x20],rax
  42ce65:	jmp    42ce73 <flatcc_json_parser_struct_as_root@@Base+0x313e>
  42ce67:	mov    DWORD PTR [rbp-0x50],0x3
  42ce6e:	jmp    42d073 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42ce73:	cmp    QWORD PTR [rbp-0x68],0x0
  42ce78:	je     42d067 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42ce7e:	mov    rax,QWORD PTR [rbp-0x68]
  42ce82:	mov    rax,QWORD PTR [rax]
  42ce85:	test   rax,rax
  42ce88:	je     42d067 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42ce8e:	mov    rax,QWORD PTR [rbp-0x68]
  42ce92:	mov    rax,QWORD PTR [rax]
  42ce95:	mov    QWORD PTR [rbp-0x38],rax
  42ce99:	jmp    42d067 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42ce9e:	mov    QWORD PTR [rbp-0x48],0x0
  42cea6:	jmp    42cfd5 <flatcc_json_parser_struct_as_root@@Base+0x32a0>
  42ceab:	mov    rax,QWORD PTR [rbp-0x30]
  42ceaf:	cmp    rax,QWORD PTR [rbp-0x48]
  42ceb3:	jne    42ceca <flatcc_json_parser_struct_as_root@@Base+0x3195>
  42ceb5:	mov    rax,QWORD PTR [rbp-0x48]
  42ceb9:	mov    QWORD PTR [rbp-0x40],rax
  42cebd:	mov    rax,QWORD PTR [rbp-0x48]
  42cec1:	sub    QWORD PTR [rbp-0x30],rax
  42cec5:	jmp    42d0c3 <flatcc_json_parser_struct_as_root@@Base+0x338e>
  42ceca:	mov    rdx,QWORD PTR [rbp-0x60]
  42cece:	mov    rax,QWORD PTR [rbp-0x48]
  42ced2:	add    rax,rdx
  42ced5:	movzx  eax,BYTE PTR [rax]
  42ced8:	movzx  edx,al
  42cedb:	mov    rax,QWORD PTR [rbp-0x20]
  42cedf:	add    rax,rdx
  42cee2:	movzx  eax,BYTE PTR [rax]
  42cee5:	lea    rcx,[rbp-0xc]
  42cee9:	mov    rdx,QWORD PTR [rbp-0x48]
  42ceed:	add    rdx,rcx
  42cef0:	mov    BYTE PTR [rdx],al
  42cef2:	lea    rdx,[rbp-0xc]
  42cef6:	mov    rax,QWORD PTR [rbp-0x48]
  42cefa:	add    rax,rdx
  42cefd:	movzx  edx,BYTE PTR [rax]
  42cf00:	movzx  eax,BYTE PTR [rip+0xfb39]        # 43ca40 <flatcc_builder_padding_base@@Base+0x37e0>
  42cf07:	cmp    dl,al
  42cf09:	jb     42cfd1 <flatcc_json_parser_struct_as_root@@Base+0x329c>
  42cf0f:	lea    rdx,[rbp-0xc]
  42cf13:	mov    rax,QWORD PTR [rbp-0x48]
  42cf17:	add    rax,rdx
  42cf1a:	movzx  edx,BYTE PTR [rax]
  42cf1d:	movzx  eax,BYTE PTR [rip+0xfb1d]        # 43ca41 <flatcc_builder_padding_base@@Base+0x37e1>
  42cf24:	cmp    dl,al
  42cf26:	jne    42cf39 <flatcc_json_parser_struct_as_root@@Base+0x3204>
  42cf28:	inc    QWORD PTR [rbp-0x60]
  42cf2c:	dec    QWORD PTR [rbp-0x30]
  42cf30:	dec    QWORD PTR [rbp-0x48]
  42cf34:	jmp    42cfd1 <flatcc_json_parser_struct_as_root@@Base+0x329c>
  42cf39:	mov    rax,QWORD PTR [rbp-0x48]
  42cf3d:	mov    QWORD PTR [rbp-0x40],rax
  42cf41:	lea    rdx,[rbp-0xc]
  42cf45:	mov    rax,QWORD PTR [rbp-0x48]
  42cf49:	add    rax,rdx
  42cf4c:	movzx  edx,BYTE PTR [rax]
  42cf4f:	movzx  eax,BYTE PTR [rip+0xfaec]        # 43ca42 <flatcc_builder_padding_base@@Base+0x37e2>
  42cf56:	cmp    dl,al
  42cf58:	jne    42cfc4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42cf5a:	inc    QWORD PTR [rbp-0x48]
  42cf5e:	jmp    42cfb0 <flatcc_json_parser_struct_as_root@@Base+0x327b>
  42cf60:	mov    rdx,QWORD PTR [rbp-0x60]
  42cf64:	mov    rax,QWORD PTR [rbp-0x48]
  42cf68:	add    rax,rdx
  42cf6b:	movzx  eax,BYTE PTR [rax]
  42cf6e:	movzx  edx,al
  42cf71:	mov    rax,QWORD PTR [rbp-0x20]
  42cf75:	add    rax,rdx
  42cf78:	movzx  edx,BYTE PTR [rax]
  42cf7b:	movzx  eax,BYTE PTR [rip+0xfac0]        # 43ca42 <flatcc_builder_padding_base@@Base+0x37e2>
  42cf82:	cmp    dl,al
  42cf84:	je     42cfac <flatcc_json_parser_struct_as_root@@Base+0x3277>
  42cf86:	mov    rdx,QWORD PTR [rbp-0x60]
  42cf8a:	mov    rax,QWORD PTR [rbp-0x48]
  42cf8e:	add    rax,rdx
  42cf91:	movzx  eax,BYTE PTR [rax]
  42cf94:	movzx  edx,al
  42cf97:	mov    rax,QWORD PTR [rbp-0x20]
  42cf9b:	add    rax,rdx
  42cf9e:	movzx  edx,BYTE PTR [rax]
  42cfa1:	movzx  eax,BYTE PTR [rip+0xfa99]        # 43ca41 <flatcc_builder_padding_base@@Base+0x37e1>
  42cfa8:	cmp    dl,al
  42cfaa:	jne    42cfc3 <flatcc_json_parser_struct_as_root@@Base+0x328e>
  42cfac:	inc    QWORD PTR [rbp-0x48]
  42cfb0:	mov    rax,QWORD PTR [rbp-0x48]
  42cfb4:	cmp    rax,QWORD PTR [rbp-0x30]
  42cfb8:	jae    42cfc4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42cfba:	cmp    QWORD PTR [rbp-0x48],0x7
  42cfbf:	jbe    42cf60 <flatcc_json_parser_struct_as_root@@Base+0x322b>
  42cfc1:	jmp    42cfc4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42cfc3:	nop
  42cfc4:	mov    rax,QWORD PTR [rbp-0x48]
  42cfc8:	sub    QWORD PTR [rbp-0x30],rax
  42cfcc:	jmp    42d0c3 <flatcc_json_parser_struct_as_root@@Base+0x338e>
  42cfd1:	inc    QWORD PTR [rbp-0x48]
  42cfd5:	cmp    QWORD PTR [rbp-0x48],0x3
  42cfda:	jbe    42ceab <flatcc_json_parser_struct_as_root@@Base+0x3176>
  42cfe0:	cmp    QWORD PTR [rbp-0x38],0x2
  42cfe5:	jbe    42d1ac <flatcc_json_parser_struct_as_root@@Base+0x3477>
  42cfeb:	movzx  eax,BYTE PTR [rbp-0xc]
  42cfef:	movzx  eax,al
  42cff2:	shl    eax,0x2
  42cff5:	mov    edx,eax
  42cff7:	movzx  eax,BYTE PTR [rbp-0xb]
  42cffb:	shr    al,0x4
  42cffe:	or     eax,edx
  42d000:	mov    edx,eax
  42d002:	mov    rax,QWORD PTR [rbp-0x58]
  42d006:	mov    BYTE PTR [rax],dl
  42d008:	movzx  eax,BYTE PTR [rbp-0xb]
  42d00c:	movzx  eax,al
  42d00f:	shl    eax,0x4
  42d012:	mov    edx,eax
  42d014:	movzx  eax,BYTE PTR [rbp-0xa]
  42d018:	shr    al,0x2
  42d01b:	mov    ecx,edx
  42d01d:	or     ecx,eax
  42d01f:	mov    rax,QWORD PTR [rbp-0x58]
  42d023:	lea    rdx,[rax+0x1]
  42d027:	mov    eax,ecx
  42d029:	mov    BYTE PTR [rdx],al
  42d02b:	movzx  eax,BYTE PTR [rbp-0xa]
  42d02f:	movzx  eax,al
  42d032:	shl    eax,0x6
  42d035:	mov    edx,eax
  42d037:	movzx  eax,BYTE PTR [rbp-0x9]
  42d03b:	mov    ecx,edx
  42d03d:	or     ecx,eax
  42d03f:	mov    rax,QWORD PTR [rbp-0x58]
  42d043:	lea    rdx,[rax+0x2]
  42d047:	mov    eax,ecx
  42d049:	mov    BYTE PTR [rdx],al
  42d04b:	add    QWORD PTR [rbp-0x58],0x3
  42d050:	add    QWORD PTR [rbp-0x60],0x4
  42d055:	sub    QWORD PTR [rbp-0x38],0x3
  42d05a:	sub    QWORD PTR [rbp-0x30],0x4
  42d05f:	mov    rax,QWORD PTR [rbp-0x30]
  42d063:	mov    QWORD PTR [rbp-0x28],rax
  42d067:	cmp    QWORD PTR [rbp-0x38],0x0
  42d06c:	jne    42ce9e <flatcc_json_parser_struct_as_root@@Base+0x3169>
  42d072:	nop
  42d073:	cmp    QWORD PTR [rbp-0x68],0x0
  42d078:	je     42d08c <flatcc_json_parser_struct_as_root@@Base+0x3357>
  42d07a:	mov    rax,QWORD PTR [rbp-0x58]
  42d07e:	sub    rax,QWORD PTR [rbp-0x18]
  42d082:	mov    rdx,rax
  42d085:	mov    rax,QWORD PTR [rbp-0x68]
  42d089:	mov    QWORD PTR [rax],rdx
  42d08c:	cmp    QWORD PTR [rbp-0x70],0x0
  42d091:	je     42d0a8 <flatcc_json_parser_struct_as_root@@Base+0x3373>
  42d093:	mov    rax,QWORD PTR [rbp-0x70]
  42d097:	mov    rax,QWORD PTR [rax]
  42d09a:	sub    rax,QWORD PTR [rbp-0x28]
  42d09e:	mov    rdx,rax
  42d0a1:	mov    rax,QWORD PTR [rbp-0x70]
  42d0a5:	mov    QWORD PTR [rax],rdx
  42d0a8:	mov    eax,DWORD PTR [rbp-0x50]
  42d0ab:	mov    rsi,QWORD PTR [rbp-0x8]
  42d0af:	xor    rsi,QWORD PTR fs:0x28
  42d0b8:	je     42d1c4 <flatcc_json_parser_struct_as_root@@Base+0x348f>
  42d0be:	jmp    42d1bf <flatcc_json_parser_struct_as_root@@Base+0x348a>
  42d0c3:	cmp    QWORD PTR [rbp-0x40],0x2
  42d0c8:	je     42d0e1 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42d0ca:	cmp    QWORD PTR [rbp-0x40],0x3
  42d0cf:	je     42d124 <flatcc_json_parser_struct_as_root@@Base+0x33ef>
  42d0d1:	cmp    QWORD PTR [rbp-0x40],0x0
  42d0d6:	jne    42d183 <flatcc_json_parser_struct_as_root@@Base+0x344e>
  42d0dc:	jmp    42d18f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42d0e1:	movzx  eax,BYTE PTR [rbp-0xb]
  42d0e5:	movzx  eax,al
  42d0e8:	shl    eax,0x4
  42d0eb:	movzx  eax,al
  42d0ee:	test   eax,eax
  42d0f0:	jne    42d19c <flatcc_json_parser_struct_as_root@@Base+0x3467>
  42d0f6:	cmp    QWORD PTR [rbp-0x38],0x0
  42d0fb:	je     42d1af <flatcc_json_parser_struct_as_root@@Base+0x347a>
  42d101:	movzx  eax,BYTE PTR [rbp-0xc]
  42d105:	movzx  eax,al
  42d108:	shl    eax,0x2
  42d10b:	mov    edx,eax
  42d10d:	movzx  eax,BYTE PTR [rbp-0xb]
  42d111:	shr    al,0x4
  42d114:	or     eax,edx
  42d116:	mov    edx,eax
  42d118:	mov    rax,QWORD PTR [rbp-0x58]
  42d11c:	mov    BYTE PTR [rax],dl
  42d11e:	inc    QWORD PTR [rbp-0x58]
  42d122:	jmp    42d18f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42d124:	movzx  eax,BYTE PTR [rbp-0xa]
  42d128:	movzx  eax,al
  42d12b:	shl    eax,0x6
  42d12e:	movzx  eax,al
  42d131:	test   eax,eax
  42d133:	jne    42d19f <flatcc_json_parser_struct_as_root@@Base+0x346a>
  42d135:	cmp    QWORD PTR [rbp-0x38],0x1
  42d13a:	jbe    42d1b2 <flatcc_json_parser_struct_as_root@@Base+0x347d>
  42d13c:	movzx  eax,BYTE PTR [rbp-0xc]
  42d140:	movzx  eax,al
  42d143:	shl    eax,0x2
  42d146:	mov    edx,eax
  42d148:	movzx  eax,BYTE PTR [rbp-0xb]
  42d14c:	shr    al,0x4
  42d14f:	or     eax,edx
  42d151:	mov    edx,eax
  42d153:	mov    rax,QWORD PTR [rbp-0x58]
  42d157:	mov    BYTE PTR [rax],dl
  42d159:	movzx  eax,BYTE PTR [rbp-0xb]
  42d15d:	movzx  eax,al
  42d160:	shl    eax,0x4
  42d163:	mov    edx,eax
  42d165:	movzx  eax,BYTE PTR [rbp-0xa]
  42d169:	shr    al,0x2
  42d16c:	mov    ecx,edx
  42d16e:	or     ecx,eax
  42d170:	mov    rax,QWORD PTR [rbp-0x58]
  42d174:	lea    rdx,[rax+0x1]
  42d178:	mov    eax,ecx
  42d17a:	mov    BYTE PTR [rdx],al
  42d17c:	add    QWORD PTR [rbp-0x58],0x2
  42d181:	jmp    42d18f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42d183:	mov    DWORD PTR [rbp-0x50],0x4
  42d18a:	jmp    42d073 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42d18f:	mov    rax,QWORD PTR [rbp-0x30]
  42d193:	mov    QWORD PTR [rbp-0x28],rax
  42d197:	jmp    42d073 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42d19c:	nop
  42d19d:	jmp    42d1a0 <flatcc_json_parser_struct_as_root@@Base+0x346b>
  42d19f:	nop
  42d1a0:	mov    DWORD PTR [rbp-0x50],0x5
  42d1a7:	jmp    42d073 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42d1ac:	nop
  42d1ad:	jmp    42d1b3 <flatcc_json_parser_struct_as_root@@Base+0x347e>
  42d1af:	nop
  42d1b0:	jmp    42d1b3 <flatcc_json_parser_struct_as_root@@Base+0x347e>
  42d1b2:	nop
  42d1b3:	mov    DWORD PTR [rbp-0x50],0x1
  42d1ba:	jmp    42d073 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42d1bf:	call   4061a0 <__stack_chk_fail@plt>
  42d1c4:	leave  
  42d1c5:	ret    

000000000042d1c6 <flatcc_json_printer_error_string@@Base>:
  42d1c6:	endbr64 
  42d1ca:	push   rbp
  42d1cb:	mov    rbp,rsp
  42d1ce:	mov    DWORD PTR [rbp-0x4],edi
  42d1d1:	cmp    DWORD PTR [rbp-0x4],0x1
  42d1d5:	je     42d1fc <flatcc_json_printer_error_string@@Base+0x36>
  42d1d7:	cmp    DWORD PTR [rbp-0x4],0x1
  42d1db:	jg     42d1e5 <flatcc_json_printer_error_string@@Base+0x1f>
  42d1dd:	cmp    DWORD PTR [rbp-0x4],0x0
  42d1e1:	je     42d1f3 <flatcc_json_printer_error_string@@Base+0x2d>
  42d1e3:	jmp    42d217 <flatcc_json_printer_error_string@@Base+0x51>
  42d1e5:	cmp    DWORD PTR [rbp-0x4],0x2
  42d1e9:	je     42d205 <flatcc_json_printer_error_string@@Base+0x3f>
  42d1eb:	cmp    DWORD PTR [rbp-0x4],0x3
  42d1ef:	je     42d20e <flatcc_json_printer_error_string@@Base+0x48>
  42d1f1:	jmp    42d217 <flatcc_json_printer_error_string@@Base+0x51>
  42d1f3:	lea    rax,[rip+0xf14b]        # 43c345 <flatcc_builder_padding_base@@Base+0x30e5>
  42d1fa:	jmp    42d21e <flatcc_json_printer_error_string@@Base+0x58>
  42d1fc:	lea    rax,[rip+0xf24e]        # 43c451 <flatcc_builder_padding_base@@Base+0x31f1>
  42d203:	jmp    42d21e <flatcc_json_printer_error_string@@Base+0x58>
  42d205:	lea    rax,[rip+0xf24f]        # 43c45b <flatcc_builder_padding_base@@Base+0x31fb>
  42d20c:	jmp    42d21e <flatcc_json_printer_error_string@@Base+0x58>
  42d20e:	lea    rax,[rip+0xf255]        # 43c46a <flatcc_builder_padding_base@@Base+0x320a>
  42d215:	jmp    42d21e <flatcc_json_printer_error_string@@Base+0x58>
  42d217:	lea    rax,[rip+0xf255]        # 43c473 <flatcc_builder_padding_base@@Base+0x3213>
  42d21e:	pop    rbp
  42d21f:	ret    
  42d220:	push   rbp
  42d221:	mov    rbp,rsp
  42d224:	sub    rsp,0x8
  42d228:	mov    QWORD PTR [rbp-0x8],rdi
  42d22c:	mov    rax,QWORD PTR [rbp-0x8]
  42d230:	mov    rdi,rax
  42d233:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42d238:	mov    edx,eax
  42d23a:	mov    rax,QWORD PTR [rbp-0x8]
  42d23e:	add    rax,rdx
  42d241:	leave  
  42d242:	ret    
  42d243:	push   rbp
  42d244:	mov    rbp,rsp
  42d247:	sub    rsp,0x10
  42d24b:	mov    QWORD PTR [rbp-0x8],rdi
  42d24f:	mov    DWORD PTR [rbp-0xc],esi
  42d252:	mov    edx,DWORD PTR [rbp-0xc]
  42d255:	mov    rax,QWORD PTR [rbp-0x8]
  42d259:	add    rax,rdx
  42d25c:	mov    rdi,rax
  42d25f:	call   42a0e8 <flatcc_json_parser_struct_as_root@@Base+0x3b3>
  42d264:	leave  
  42d265:	ret    
  42d266:	push   rbp
  42d267:	mov    rbp,rsp
  42d26a:	sub    rsp,0x20
  42d26e:	mov    QWORD PTR [rbp-0x18],rdi
  42d272:	mov    DWORD PTR [rbp-0x1c],esi
  42d275:	mov    eax,DWORD PTR [rbp-0x1c]
  42d278:	add    eax,0x2
  42d27b:	cdqe   
  42d27d:	add    eax,eax
  42d27f:	mov    DWORD PTR [rbp-0x4],eax
  42d282:	mov    rax,QWORD PTR [rbp-0x18]
  42d286:	mov    eax,DWORD PTR [rax+0x10]
  42d289:	cmp    DWORD PTR [rbp-0x4],eax
  42d28c:	jl     42d295 <flatcc_json_printer_error_string@@Base+0xcf>
  42d28e:	mov    eax,0x0
  42d293:	jmp    42d2cc <flatcc_json_printer_error_string@@Base+0x106>
  42d295:	mov    edx,DWORD PTR [rbp-0x4]
  42d298:	mov    rax,QWORD PTR [rbp-0x18]
  42d29c:	mov    rax,QWORD PTR [rax+0x8]
  42d2a0:	mov    esi,edx
  42d2a2:	mov    rdi,rax
  42d2a5:	call   42d243 <flatcc_json_printer_error_string@@Base+0x7d>
  42d2aa:	movzx  eax,ax
  42d2ad:	mov    DWORD PTR [rbp-0x4],eax
  42d2b0:	cmp    DWORD PTR [rbp-0x4],0x0
  42d2b4:	jne    42d2bd <flatcc_json_printer_error_string@@Base+0xf7>
  42d2b6:	mov    eax,0x0
  42d2bb:	jmp    42d2cc <flatcc_json_printer_error_string@@Base+0x106>
  42d2bd:	mov    rax,QWORD PTR [rbp-0x18]
  42d2c1:	mov    rdx,QWORD PTR [rax]
  42d2c4:	mov    eax,DWORD PTR [rbp-0x4]
  42d2c7:	cdqe   
  42d2c9:	add    rax,rdx
  42d2cc:	leave  
  42d2cd:	ret    

000000000042d2ce <flatcc_json_printer_fmt_float@@Base>:
  42d2ce:	endbr64 
  42d2d2:	push   rbp
  42d2d3:	mov    rbp,rsp
  42d2d6:	sub    rsp,0x10
  42d2da:	mov    QWORD PTR [rbp-0x8],rdi
  42d2de:	vmovss DWORD PTR [rbp-0xc],xmm0
  42d2e3:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42d2e8:	vmovq  rax,xmm1
  42d2ed:	mov    rdx,QWORD PTR [rbp-0x8]
  42d2f1:	mov    rdi,rdx
  42d2f4:	vmovq  xmm0,rax
  42d2f9:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42d2fe:	leave  
  42d2ff:	ret    

000000000042d300 <flatcc_json_printer_fmt_double@@Base>:
  42d300:	endbr64 
  42d304:	push   rbp
  42d305:	mov    rbp,rsp
  42d308:	sub    rsp,0x10
  42d30c:	mov    QWORD PTR [rbp-0x8],rdi
  42d310:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42d315:	mov    rdx,QWORD PTR [rbp-0x8]
  42d319:	mov    rax,QWORD PTR [rbp-0x10]
  42d31d:	mov    rdi,rdx
  42d320:	vmovq  xmm0,rax
  42d325:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42d32a:	leave  
  42d32b:	ret    

000000000042d32c <flatcc_json_printer_fmt_bool@@Base>:
  42d32c:	endbr64 
  42d330:	push   rbp
  42d331:	mov    rbp,rsp
  42d334:	sub    rsp,0x10
  42d338:	mov    QWORD PTR [rbp-0x8],rdi
  42d33c:	mov    DWORD PTR [rbp-0xc],esi
  42d33f:	cmp    DWORD PTR [rbp-0xc],0x0
  42d343:	je     42d364 <flatcc_json_printer_fmt_bool@@Base+0x38>
  42d345:	mov    rax,QWORD PTR [rbp-0x8]
  42d349:	mov    edx,0x4
  42d34e:	lea    rsi,[rip+0xf126]        # 43c47b <flatcc_builder_padding_base@@Base+0x321b>
  42d355:	mov    rdi,rax
  42d358:	call   406220 <memcpy@plt>
  42d35d:	mov    eax,0x4
  42d362:	jmp    42d381 <flatcc_json_printer_fmt_bool@@Base+0x55>
  42d364:	mov    rax,QWORD PTR [rbp-0x8]
  42d368:	mov    edx,0x5
  42d36d:	lea    rsi,[rip+0xf10c]        # 43c480 <flatcc_builder_padding_base@@Base+0x3220>
  42d374:	mov    rdi,rax
  42d377:	call   406220 <memcpy@plt>
  42d37c:	mov    eax,0x5
  42d381:	leave  
  42d382:	ret    
  42d383:	endbr64 
  42d387:	push   rbp
  42d388:	mov    rbp,rsp
  42d38b:	sub    rsp,0x30
  42d38f:	mov    QWORD PTR [rbp-0x18],rdi
  42d393:	mov    QWORD PTR [rbp-0x20],rsi
  42d397:	mov    QWORD PTR [rbp-0x28],rdx
  42d39b:	mov    rax,QWORD PTR [rbp-0x18]
  42d39f:	mov    rdx,QWORD PTR [rax+0x28]
  42d3a3:	mov    rax,QWORD PTR [rbp-0x18]
  42d3a7:	mov    rax,QWORD PTR [rax+0x20]
  42d3ab:	cmp    rdx,rax
  42d3ae:	jb     42d3c6 <flatcc_json_printer_fmt_bool@@Base+0x9a>
  42d3b0:	mov    rax,QWORD PTR [rbp-0x18]
  42d3b4:	mov    rax,QWORD PTR [rax+0x48]
  42d3b8:	mov    rdx,QWORD PTR [rbp-0x18]
  42d3bc:	mov    esi,0x0
  42d3c1:	mov    rdi,rdx
  42d3c4:	call   rax
  42d3c6:	mov    rax,QWORD PTR [rbp-0x18]
  42d3ca:	mov    rdx,QWORD PTR [rax+0x20]
  42d3ce:	mov    rax,QWORD PTR [rbp-0x18]
  42d3d2:	mov    rax,QWORD PTR [rax+0x28]
  42d3d6:	sub    rdx,rax
  42d3d9:	mov    rax,rdx
  42d3dc:	mov    QWORD PTR [rbp-0x8],rax
  42d3e0:	jmp    42d454 <flatcc_json_printer_fmt_bool@@Base+0x128>
  42d3e2:	mov    rax,QWORD PTR [rbp-0x18]
  42d3e6:	mov    rax,QWORD PTR [rax+0x28]
  42d3ea:	mov    rdx,QWORD PTR [rbp-0x8]
  42d3ee:	mov    rcx,QWORD PTR [rbp-0x20]
  42d3f2:	mov    rsi,rcx
  42d3f5:	mov    rdi,rax
  42d3f8:	call   406220 <memcpy@plt>
  42d3fd:	mov    rax,QWORD PTR [rbp-0x18]
  42d401:	mov    rdx,QWORD PTR [rax+0x28]
  42d405:	mov    rax,QWORD PTR [rbp-0x8]
  42d409:	add    rdx,rax
  42d40c:	mov    rax,QWORD PTR [rbp-0x18]
  42d410:	mov    QWORD PTR [rax+0x28],rdx
  42d414:	mov    rax,QWORD PTR [rbp-0x8]
  42d418:	add    QWORD PTR [rbp-0x20],rax
  42d41c:	mov    rax,QWORD PTR [rbp-0x8]
  42d420:	sub    QWORD PTR [rbp-0x28],rax
  42d424:	mov    rax,QWORD PTR [rbp-0x18]
  42d428:	mov    rax,QWORD PTR [rax+0x48]
  42d42c:	mov    rdx,QWORD PTR [rbp-0x18]
  42d430:	mov    esi,0x0
  42d435:	mov    rdi,rdx
  42d438:	call   rax
  42d43a:	mov    rax,QWORD PTR [rbp-0x18]
  42d43e:	mov    rdx,QWORD PTR [rax+0x20]
  42d442:	mov    rax,QWORD PTR [rbp-0x18]
  42d446:	mov    rax,QWORD PTR [rax+0x28]
  42d44a:	sub    rdx,rax
  42d44d:	mov    rax,rdx
  42d450:	mov    QWORD PTR [rbp-0x8],rax
  42d454:	mov    rax,QWORD PTR [rbp-0x28]
  42d458:	cmp    rax,QWORD PTR [rbp-0x8]
  42d45c:	ja     42d3e2 <flatcc_json_printer_fmt_bool@@Base+0xb6>
  42d45e:	mov    rax,QWORD PTR [rbp-0x18]
  42d462:	mov    rax,QWORD PTR [rax+0x28]
  42d466:	mov    rdx,QWORD PTR [rbp-0x28]
  42d46a:	mov    rcx,QWORD PTR [rbp-0x20]
  42d46e:	mov    rsi,rcx
  42d471:	mov    rdi,rax
  42d474:	call   406220 <memcpy@plt>
  42d479:	mov    rax,QWORD PTR [rbp-0x18]
  42d47d:	mov    rdx,QWORD PTR [rax+0x28]
  42d481:	mov    rax,QWORD PTR [rbp-0x28]
  42d485:	add    rdx,rax
  42d488:	mov    rax,QWORD PTR [rbp-0x18]
  42d48c:	mov    QWORD PTR [rax+0x28],rdx
  42d490:	nop
  42d491:	leave  
  42d492:	ret    
  42d493:	push   rbp
  42d494:	mov    rbp,rsp
  42d497:	sub    rsp,0x20
  42d49b:	mov    QWORD PTR [rbp-0x8],rdi
  42d49f:	mov    QWORD PTR [rbp-0x10],rsi
  42d4a3:	mov    QWORD PTR [rbp-0x18],rdx
  42d4a7:	mov    rax,QWORD PTR [rbp-0x8]
  42d4ab:	mov    rdx,QWORD PTR [rax+0x28]
  42d4af:	mov    rax,QWORD PTR [rbp-0x18]
  42d4b3:	add    rdx,rax
  42d4b6:	mov    rax,QWORD PTR [rbp-0x8]
  42d4ba:	mov    rax,QWORD PTR [rax+0x20]
  42d4be:	cmp    rdx,rax
  42d4c1:	jb     42d4dc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
  42d4c3:	mov    rdx,QWORD PTR [rbp-0x18]
  42d4c7:	mov    rcx,QWORD PTR [rbp-0x10]
  42d4cb:	mov    rax,QWORD PTR [rbp-0x8]
  42d4cf:	mov    rsi,rcx
  42d4d2:	mov    rdi,rax
  42d4d5:	call   42d383 <flatcc_json_printer_fmt_bool@@Base+0x57>
  42d4da:	jmp    42d50e <flatcc_json_printer_fmt_bool@@Base+0x1e2>
  42d4dc:	mov    rax,QWORD PTR [rbp-0x8]
  42d4e0:	mov    rax,QWORD PTR [rax+0x28]
  42d4e4:	mov    rdx,QWORD PTR [rbp-0x18]
  42d4e8:	mov    rcx,QWORD PTR [rbp-0x10]
  42d4ec:	mov    rsi,rcx
  42d4ef:	mov    rdi,rax
  42d4f2:	call   406220 <memcpy@plt>
  42d4f7:	mov    rax,QWORD PTR [rbp-0x8]
  42d4fb:	mov    rdx,QWORD PTR [rax+0x28]
  42d4ff:	mov    rax,QWORD PTR [rbp-0x18]
  42d503:	add    rdx,rax
  42d506:	mov    rax,QWORD PTR [rbp-0x8]
  42d50a:	mov    QWORD PTR [rax+0x28],rdx
  42d50e:	nop
  42d50f:	leave  
  42d510:	ret    
  42d511:	endbr64 
  42d515:	push   rbp
  42d516:	mov    rbp,rsp
  42d519:	sub    rsp,0x40
  42d51d:	mov    QWORD PTR [rbp-0x28],rdi
  42d521:	mov    QWORD PTR [rbp-0x30],rsi
  42d525:	mov    QWORD PTR [rbp-0x38],rdx
  42d529:	mov    rax,QWORD PTR [rbp-0x30]
  42d52d:	mov    QWORD PTR [rbp-0x10],rax
  42d531:	mov    rax,QWORD PTR [rbp-0x28]
  42d535:	mov    rax,QWORD PTR [rax+0x28]
  42d539:	lea    rcx,[rax+0x1]
  42d53d:	mov    rdx,QWORD PTR [rbp-0x28]
  42d541:	mov    QWORD PTR [rdx+0x28],rcx
  42d545:	mov    BYTE PTR [rax],0x22
  42d548:	mov    rax,QWORD PTR [rbp-0x10]
  42d54c:	movzx  eax,BYTE PTR [rax]
  42d54f:	mov    BYTE PTR [rbp-0x12],al
  42d552:	jmp    42d562 <flatcc_json_printer_fmt_bool@@Base+0x236>
  42d554:	inc    QWORD PTR [rbp-0x10]
  42d558:	mov    rax,QWORD PTR [rbp-0x10]
  42d55c:	movzx  eax,BYTE PTR [rax]
  42d55f:	mov    BYTE PTR [rbp-0x12],al
  42d562:	cmp    BYTE PTR [rbp-0x12],0x1f
  42d566:	jbe    42d574 <flatcc_json_printer_fmt_bool@@Base+0x248>
  42d568:	cmp    BYTE PTR [rbp-0x12],0x22
  42d56c:	je     42d574 <flatcc_json_printer_fmt_bool@@Base+0x248>
  42d56e:	cmp    BYTE PTR [rbp-0x12],0x5c
  42d572:	jne    42d554 <flatcc_json_printer_fmt_bool@@Base+0x228>
  42d574:	mov    rax,QWORD PTR [rbp-0x10]
  42d578:	sub    rax,QWORD PTR [rbp-0x30]
  42d57c:	mov    QWORD PTR [rbp-0x8],rax
  42d580:	mov    rdx,QWORD PTR [rbp-0x8]
  42d584:	mov    rcx,QWORD PTR [rbp-0x30]
  42d588:	mov    rax,QWORD PTR [rbp-0x28]
  42d58c:	mov    rsi,rcx
  42d58f:	mov    rdi,rax
  42d592:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42d597:	mov    rax,QWORD PTR [rbp-0x8]
  42d59b:	sub    QWORD PTR [rbp-0x38],rax
  42d59f:	cmp    QWORD PTR [rbp-0x38],0x0
  42d5a4:	je     42d798 <flatcc_json_printer_fmt_bool@@Base+0x46c>
  42d5aa:	mov    rax,QWORD PTR [rbp-0x8]
  42d5ae:	add    QWORD PTR [rbp-0x30],rax
  42d5b2:	mov    rax,QWORD PTR [rbp-0x28]
  42d5b6:	mov    rax,QWORD PTR [rax+0x28]
  42d5ba:	lea    rcx,[rax+0x1]
  42d5be:	mov    rdx,QWORD PTR [rbp-0x28]
  42d5c2:	mov    QWORD PTR [rdx+0x28],rcx
  42d5c6:	mov    BYTE PTR [rax],0x5c
  42d5c9:	movzx  eax,BYTE PTR [rbp-0x12]
  42d5cd:	cmp    eax,0xc
  42d5d0:	je     42d65f <flatcc_json_printer_fmt_bool@@Base+0x333>
  42d5d6:	cmp    eax,0xc
  42d5d9:	jg     42d5f7 <flatcc_json_printer_fmt_bool@@Base+0x2cb>
  42d5db:	cmp    eax,0x9
  42d5de:	je     42d643 <flatcc_json_printer_fmt_bool@@Base+0x317>
  42d5e0:	cmp    eax,0xa
  42d5e3:	je     42d697 <flatcc_json_printer_fmt_bool@@Base+0x36b>
  42d5e9:	cmp    eax,0x8
  42d5ec:	je     42d6b3 <flatcc_json_printer_fmt_bool@@Base+0x387>
  42d5f2:	jmp    42d6cf <flatcc_json_printer_fmt_bool@@Base+0x3a3>
  42d5f7:	cmp    eax,0x22
  42d5fa:	je     42d60b <flatcc_json_printer_fmt_bool@@Base+0x2df>
  42d5fc:	cmp    eax,0x5c
  42d5ff:	je     42d627 <flatcc_json_printer_fmt_bool@@Base+0x2fb>
  42d601:	cmp    eax,0xd
  42d604:	je     42d67b <flatcc_json_printer_fmt_bool@@Base+0x34f>
  42d606:	jmp    42d6cf <flatcc_json_printer_fmt_bool@@Base+0x3a3>
  42d60b:	mov    rax,QWORD PTR [rbp-0x28]
  42d60f:	mov    rax,QWORD PTR [rax+0x28]
  42d613:	lea    rcx,[rax+0x1]
  42d617:	mov    rdx,QWORD PTR [rbp-0x28]
  42d61b:	mov    QWORD PTR [rdx+0x28],rcx
  42d61f:	mov    BYTE PTR [rax],0x22
  42d622:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d627:	mov    rax,QWORD PTR [rbp-0x28]
  42d62b:	mov    rax,QWORD PTR [rax+0x28]
  42d62f:	lea    rcx,[rax+0x1]
  42d633:	mov    rdx,QWORD PTR [rbp-0x28]
  42d637:	mov    QWORD PTR [rdx+0x28],rcx
  42d63b:	mov    BYTE PTR [rax],0x5c
  42d63e:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d643:	mov    rax,QWORD PTR [rbp-0x28]
  42d647:	mov    rax,QWORD PTR [rax+0x28]
  42d64b:	lea    rcx,[rax+0x1]
  42d64f:	mov    rdx,QWORD PTR [rbp-0x28]
  42d653:	mov    QWORD PTR [rdx+0x28],rcx
  42d657:	mov    BYTE PTR [rax],0x74
  42d65a:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d65f:	mov    rax,QWORD PTR [rbp-0x28]
  42d663:	mov    rax,QWORD PTR [rax+0x28]
  42d667:	lea    rcx,[rax+0x1]
  42d66b:	mov    rdx,QWORD PTR [rbp-0x28]
  42d66f:	mov    QWORD PTR [rdx+0x28],rcx
  42d673:	mov    BYTE PTR [rax],0x66
  42d676:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d67b:	mov    rax,QWORD PTR [rbp-0x28]
  42d67f:	mov    rax,QWORD PTR [rax+0x28]
  42d683:	lea    rcx,[rax+0x1]
  42d687:	mov    rdx,QWORD PTR [rbp-0x28]
  42d68b:	mov    QWORD PTR [rdx+0x28],rcx
  42d68f:	mov    BYTE PTR [rax],0x72
  42d692:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d697:	mov    rax,QWORD PTR [rbp-0x28]
  42d69b:	mov    rax,QWORD PTR [rax+0x28]
  42d69f:	lea    rcx,[rax+0x1]
  42d6a3:	mov    rdx,QWORD PTR [rbp-0x28]
  42d6a7:	mov    QWORD PTR [rdx+0x28],rcx
  42d6ab:	mov    BYTE PTR [rax],0x6e
  42d6ae:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d6b3:	mov    rax,QWORD PTR [rbp-0x28]
  42d6b7:	mov    rax,QWORD PTR [rax+0x28]
  42d6bb:	lea    rcx,[rax+0x1]
  42d6bf:	mov    rdx,QWORD PTR [rbp-0x28]
  42d6c3:	mov    QWORD PTR [rdx+0x28],rcx
  42d6c7:	mov    BYTE PTR [rax],0x62
  42d6ca:	jmp    42d787 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42d6cf:	mov    rax,QWORD PTR [rbp-0x28]
  42d6d3:	mov    rax,QWORD PTR [rax+0x28]
  42d6d7:	lea    rcx,[rax+0x1]
  42d6db:	mov    rdx,QWORD PTR [rbp-0x28]
  42d6df:	mov    QWORD PTR [rdx+0x28],rcx
  42d6e3:	mov    BYTE PTR [rax],0x75
  42d6e6:	mov    rax,QWORD PTR [rbp-0x28]
  42d6ea:	mov    rax,QWORD PTR [rax+0x28]
  42d6ee:	lea    rcx,[rax+0x1]
  42d6f2:	mov    rdx,QWORD PTR [rbp-0x28]
  42d6f6:	mov    QWORD PTR [rdx+0x28],rcx
  42d6fa:	mov    BYTE PTR [rax],0x30
  42d6fd:	mov    rax,QWORD PTR [rbp-0x28]
  42d701:	mov    rax,QWORD PTR [rax+0x28]
  42d705:	lea    rcx,[rax+0x1]
  42d709:	mov    rdx,QWORD PTR [rbp-0x28]
  42d70d:	mov    QWORD PTR [rdx+0x28],rcx
  42d711:	mov    BYTE PTR [rax],0x30
  42d714:	movzx  eax,BYTE PTR [rbp-0x12]
  42d718:	shr    al,0x4
  42d71b:	mov    BYTE PTR [rbp-0x11],al
  42d71e:	cmp    BYTE PTR [rbp-0x11],0x9
  42d722:	ja     42d72b <flatcc_json_printer_fmt_bool@@Base+0x3ff>
  42d724:	mov    eax,0x30
  42d729:	jmp    42d730 <flatcc_json_printer_fmt_bool@@Base+0x404>
  42d72b:	mov    eax,0x57
  42d730:	add    BYTE PTR [rbp-0x11],al
  42d733:	mov    rax,QWORD PTR [rbp-0x28]
  42d737:	mov    rdx,QWORD PTR [rax+0x28]
  42d73b:	lea    rcx,[rdx+0x1]
  42d73f:	mov    rax,QWORD PTR [rbp-0x28]
  42d743:	mov    QWORD PTR [rax+0x28],rcx
  42d747:	movzx  eax,BYTE PTR [rbp-0x11]
  42d74b:	mov    BYTE PTR [rdx],al
  42d74d:	movzx  eax,BYTE PTR [rbp-0x12]
  42d751:	and    eax,0xf
  42d754:	mov    BYTE PTR [rbp-0x11],al
  42d757:	cmp    BYTE PTR [rbp-0x11],0x9
  42d75b:	ja     42d764 <flatcc_json_printer_fmt_bool@@Base+0x438>
  42d75d:	mov    eax,0x30
  42d762:	jmp    42d769 <flatcc_json_printer_fmt_bool@@Base+0x43d>
  42d764:	mov    eax,0x57
  42d769:	add    BYTE PTR [rbp-0x11],al
  42d76c:	mov    rax,QWORD PTR [rbp-0x28]
  42d770:	mov    rdx,QWORD PTR [rax+0x28]
  42d774:	lea    rcx,[rdx+0x1]
  42d778:	mov    rax,QWORD PTR [rbp-0x28]
  42d77c:	mov    QWORD PTR [rax+0x28],rcx
  42d780:	movzx  eax,BYTE PTR [rbp-0x11]
  42d784:	mov    BYTE PTR [rdx],al
  42d786:	nop
  42d787:	inc    QWORD PTR [rbp-0x10]
  42d78b:	dec    QWORD PTR [rbp-0x38]
  42d78f:	inc    QWORD PTR [rbp-0x30]
  42d793:	jmp    42d548 <flatcc_json_printer_fmt_bool@@Base+0x21c>
  42d798:	nop
  42d799:	mov    rax,QWORD PTR [rbp-0x28]
  42d79d:	mov    rax,QWORD PTR [rax+0x28]
  42d7a1:	lea    rcx,[rax+0x1]
  42d7a5:	mov    rdx,QWORD PTR [rbp-0x28]
  42d7a9:	mov    QWORD PTR [rdx+0x28],rcx
  42d7ad:	mov    BYTE PTR [rax],0x22
  42d7b0:	nop
  42d7b1:	leave  
  42d7b2:	ret    
  42d7b3:	endbr64 
  42d7b7:	push   rbp
  42d7b8:	mov    rbp,rsp
  42d7bb:	sub    rsp,0x60
  42d7bf:	mov    QWORD PTR [rbp-0x48],rdi
  42d7c3:	mov    QWORD PTR [rbp-0x50],rsi
  42d7c7:	mov    DWORD PTR [rbp-0x54],edx
  42d7ca:	mov    rax,QWORD PTR fs:0x28
  42d7d3:	mov    QWORD PTR [rbp-0x8],rax
  42d7d7:	xor    eax,eax
  42d7d9:	mov    eax,DWORD PTR [rbp-0x54]
  42d7dc:	and    al,0x7f
  42d7de:	mov    DWORD PTR [rbp-0x3c],eax
  42d7e1:	mov    rax,QWORD PTR [rbp-0x50]
  42d7e5:	mov    rdi,rax
  42d7e8:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42d7ed:	mov    eax,eax
  42d7ef:	mov    QWORD PTR [rbp-0x38],rax
  42d7f3:	mov    rax,QWORD PTR [rbp-0x50]
  42d7f7:	add    rax,0x4
  42d7fb:	mov    QWORD PTR [rbp-0x20],rax
  42d7ff:	mov    rax,QWORD PTR [rbp-0x48]
  42d803:	mov    rax,QWORD PTR [rax+0x28]
  42d807:	lea    rcx,[rax+0x1]
  42d80b:	mov    rdx,QWORD PTR [rbp-0x48]
  42d80f:	mov    QWORD PTR [rdx+0x28],rcx
  42d813:	mov    BYTE PTR [rax],0x22
  42d816:	mov    rax,QWORD PTR [rbp-0x38]
  42d81a:	mov    edx,DWORD PTR [rbp-0x54]
  42d81d:	mov    esi,edx
  42d81f:	mov    rdi,rax
  42d822:	call   42c9b9 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
  42d827:	mov    QWORD PTR [rbp-0x28],rax
  42d82b:	mov    rax,QWORD PTR [rbp-0x48]
  42d82f:	mov    rdx,QWORD PTR [rax+0x28]
  42d833:	mov    rax,QWORD PTR [rbp-0x28]
  42d837:	add    rdx,rax
  42d83a:	mov    rax,QWORD PTR [rbp-0x48]
  42d83e:	mov    rax,QWORD PTR [rax+0x20]
  42d842:	cmp    rdx,rax
  42d845:	jb     42d950 <flatcc_json_printer_fmt_bool@@Base+0x624>
  42d84b:	mov    rax,QWORD PTR [rbp-0x48]
  42d84f:	mov    rax,QWORD PTR [rax+0x48]
  42d853:	mov    rdx,QWORD PTR [rbp-0x48]
  42d857:	mov    esi,0x0
  42d85c:	mov    rdi,rdx
  42d85f:	call   rax
  42d861:	jmp    42d950 <flatcc_json_printer_fmt_bool@@Base+0x624>
  42d866:	mov    rax,QWORD PTR [rbp-0x48]
  42d86a:	mov    rdx,QWORD PTR [rax+0x20]
  42d86e:	mov    rax,QWORD PTR [rbp-0x48]
  42d872:	mov    rax,QWORD PTR [rax+0x28]
  42d876:	sub    rdx,rax
  42d879:	mov    rax,rdx
  42d87c:	and    rax,0xfffffffffffffffc
  42d880:	mov    QWORD PTR [rbp-0x18],rax
  42d884:	mov    rdx,QWORD PTR [rbp-0x18]
  42d888:	mov    rax,rdx
  42d88b:	add    rax,rax
  42d88e:	add    rax,rdx
  42d891:	shr    rax,0x2
  42d895:	mov    QWORD PTR [rbp-0x10],rax
  42d899:	cmp    QWORD PTR [rbp-0x10],0x0
  42d89e:	jne    42d8bf <flatcc_json_printer_fmt_bool@@Base+0x593>
  42d8a0:	lea    rcx,[rip+0xf1b9]        # 43ca60 <flatcc_builder_padding_base@@Base+0x3800>
  42d8a7:	mov    edx,0x115
  42d8ac:	lea    rsi,[rip+0xebd5]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  42d8b3:	lea    rdi,[rip+0xec33]        # 43c4ed <flatcc_builder_padding_base@@Base+0x328d>
  42d8ba:	call   4061b0 <__assert_fail@plt>
  42d8bf:	mov    rdx,QWORD PTR [rbp-0x18]
  42d8c3:	mov    rax,rdx
  42d8c6:	add    rax,rax
  42d8c9:	add    rax,rdx
  42d8cc:	shr    rax,0x2
  42d8d0:	mov    QWORD PTR [rbp-0x30],rax
  42d8d4:	mov    rax,QWORD PTR [rbp-0x48]
  42d8d8:	mov    rax,QWORD PTR [rax+0x28]
  42d8dc:	mov    ecx,DWORD PTR [rbp-0x3c]
  42d8df:	lea    rdx,[rbp-0x30]
  42d8e3:	mov    rsi,QWORD PTR [rbp-0x20]
  42d8e7:	mov    r8d,ecx
  42d8ea:	mov    rcx,rdx
  42d8ed:	mov    edx,0x0
  42d8f2:	mov    rdi,rax
  42d8f5:	call   42caa5 <flatcc_json_parser_struct_as_root@@Base+0x2d70>
  42d8fa:	mov    rax,QWORD PTR [rbp-0x48]
  42d8fe:	mov    rdx,QWORD PTR [rax+0x28]
  42d902:	mov    rax,QWORD PTR [rbp-0x18]
  42d906:	add    rdx,rax
  42d909:	mov    rax,QWORD PTR [rbp-0x48]
  42d90d:	mov    QWORD PTR [rax+0x28],rdx
  42d911:	mov    rax,QWORD PTR [rbp-0x10]
  42d915:	add    QWORD PTR [rbp-0x20],rax
  42d919:	mov    rax,QWORD PTR [rbp-0x38]
  42d91d:	sub    rax,QWORD PTR [rbp-0x10]
  42d921:	mov    QWORD PTR [rbp-0x38],rax
  42d925:	mov    rax,QWORD PTR [rbp-0x48]
  42d929:	mov    rax,QWORD PTR [rax+0x48]
  42d92d:	mov    rdx,QWORD PTR [rbp-0x48]
  42d931:	mov    esi,0x0
  42d936:	mov    rdi,rdx
  42d939:	call   rax
  42d93b:	mov    rax,QWORD PTR [rbp-0x38]
  42d93f:	mov    edx,DWORD PTR [rbp-0x54]
  42d942:	mov    esi,edx
  42d944:	mov    rdi,rax
  42d947:	call   42c9b9 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
  42d94c:	mov    QWORD PTR [rbp-0x28],rax
  42d950:	mov    rax,QWORD PTR [rbp-0x48]
  42d954:	mov    rdx,QWORD PTR [rax+0x28]
  42d958:	mov    rax,QWORD PTR [rbp-0x28]
  42d95c:	add    rdx,rax
  42d95f:	mov    rax,QWORD PTR [rbp-0x48]
  42d963:	mov    rax,QWORD PTR [rax+0x20]
  42d967:	cmp    rdx,rax
  42d96a:	ja     42d866 <flatcc_json_printer_fmt_bool@@Base+0x53a>
  42d970:	mov    rax,QWORD PTR [rbp-0x48]
  42d974:	mov    rax,QWORD PTR [rax+0x28]
  42d978:	mov    ecx,DWORD PTR [rbp-0x54]
  42d97b:	lea    rdx,[rbp-0x38]
  42d97f:	mov    rsi,QWORD PTR [rbp-0x20]
  42d983:	mov    r8d,ecx
  42d986:	mov    rcx,rdx
  42d989:	mov    edx,0x0
  42d98e:	mov    rdi,rax
  42d991:	call   42caa5 <flatcc_json_parser_struct_as_root@@Base+0x2d70>
  42d996:	mov    rax,QWORD PTR [rbp-0x48]
  42d99a:	mov    rdx,QWORD PTR [rax+0x28]
  42d99e:	mov    rax,QWORD PTR [rbp-0x28]
  42d9a2:	add    rdx,rax
  42d9a5:	mov    rax,QWORD PTR [rbp-0x48]
  42d9a9:	mov    QWORD PTR [rax+0x28],rdx
  42d9ad:	mov    rax,QWORD PTR [rbp-0x48]
  42d9b1:	mov    rax,QWORD PTR [rax+0x28]
  42d9b5:	lea    rcx,[rax+0x1]
  42d9b9:	mov    rdx,QWORD PTR [rbp-0x48]
  42d9bd:	mov    QWORD PTR [rdx+0x28],rcx
  42d9c1:	mov    BYTE PTR [rax],0x22
  42d9c4:	nop
  42d9c5:	mov    rax,QWORD PTR [rbp-0x8]
  42d9c9:	xor    rax,QWORD PTR fs:0x28
  42d9d2:	je     42d9d9 <flatcc_json_printer_fmt_bool@@Base+0x6ad>
  42d9d4:	call   4061a0 <__stack_chk_fail@plt>
  42d9d9:	leave  
  42d9da:	ret    
  42d9db:	endbr64 
  42d9df:	push   rbp
  42d9e0:	mov    rbp,rsp
  42d9e3:	sub    rsp,0x20
  42d9e7:	mov    QWORD PTR [rbp-0x18],rdi
  42d9eb:	mov    QWORD PTR [rbp-0x20],rsi
  42d9ef:	mov    rax,QWORD PTR [rbp-0x18]
  42d9f3:	mov    rdx,QWORD PTR [rax+0x28]
  42d9f7:	mov    rax,QWORD PTR [rbp-0x18]
  42d9fb:	mov    rax,QWORD PTR [rax+0x20]
  42d9ff:	cmp    rdx,rax
  42da02:	jb     42da1a <flatcc_json_printer_fmt_bool@@Base+0x6ee>
  42da04:	mov    rax,QWORD PTR [rbp-0x18]
  42da08:	mov    rax,QWORD PTR [rax+0x48]
  42da0c:	mov    rdx,QWORD PTR [rbp-0x18]
  42da10:	mov    esi,0x0
  42da15:	mov    rdi,rdx
  42da18:	call   rax
  42da1a:	mov    rax,QWORD PTR [rbp-0x18]
  42da1e:	mov    rdx,QWORD PTR [rax+0x20]
  42da22:	mov    rax,QWORD PTR [rbp-0x18]
  42da26:	mov    rax,QWORD PTR [rax+0x28]
  42da2a:	sub    rdx,rax
  42da2d:	mov    rax,rdx
  42da30:	mov    QWORD PTR [rbp-0x8],rax
  42da34:	jmp    42da9e <flatcc_json_printer_fmt_bool@@Base+0x772>
  42da36:	mov    rax,QWORD PTR [rbp-0x18]
  42da3a:	mov    rax,QWORD PTR [rax+0x28]
  42da3e:	mov    rdx,QWORD PTR [rbp-0x8]
  42da42:	mov    esi,0x20
  42da47:	mov    rdi,rax
  42da4a:	call   4061c0 <memset@plt>
  42da4f:	mov    rax,QWORD PTR [rbp-0x18]
  42da53:	mov    rdx,QWORD PTR [rax+0x28]
  42da57:	mov    rax,QWORD PTR [rbp-0x8]
  42da5b:	add    rdx,rax
  42da5e:	mov    rax,QWORD PTR [rbp-0x18]
  42da62:	mov    QWORD PTR [rax+0x28],rdx
  42da66:	mov    rax,QWORD PTR [rbp-0x8]
  42da6a:	sub    QWORD PTR [rbp-0x20],rax
  42da6e:	mov    rax,QWORD PTR [rbp-0x18]
  42da72:	mov    rax,QWORD PTR [rax+0x48]
  42da76:	mov    rdx,QWORD PTR [rbp-0x18]
  42da7a:	mov    esi,0x0
  42da7f:	mov    rdi,rdx
  42da82:	call   rax
  42da84:	mov    rax,QWORD PTR [rbp-0x18]
  42da88:	mov    rdx,QWORD PTR [rax+0x20]
  42da8c:	mov    rax,QWORD PTR [rbp-0x18]
  42da90:	mov    rax,QWORD PTR [rax+0x28]
  42da94:	sub    rdx,rax
  42da97:	mov    rax,rdx
  42da9a:	mov    QWORD PTR [rbp-0x8],rax
  42da9e:	mov    rax,QWORD PTR [rbp-0x20]
  42daa2:	cmp    rax,QWORD PTR [rbp-0x8]
  42daa6:	ja     42da36 <flatcc_json_printer_fmt_bool@@Base+0x70a>
  42daa8:	mov    rax,QWORD PTR [rbp-0x18]
  42daac:	mov    rax,QWORD PTR [rax+0x28]
  42dab0:	mov    rdx,QWORD PTR [rbp-0x20]
  42dab4:	mov    esi,0x20
  42dab9:	mov    rdi,rax
  42dabc:	call   4061c0 <memset@plt>
  42dac1:	mov    rax,QWORD PTR [rbp-0x18]
  42dac5:	mov    rdx,QWORD PTR [rax+0x28]
  42dac9:	mov    rax,QWORD PTR [rbp-0x20]
  42dacd:	add    rdx,rax
  42dad0:	mov    rax,QWORD PTR [rbp-0x18]
  42dad4:	mov    QWORD PTR [rax+0x28],rdx
  42dad8:	nop
  42dad9:	leave  
  42dada:	ret    
  42dadb:	push   rbp
  42dadc:	mov    rbp,rsp
  42dadf:	sub    rsp,0x20
  42dae3:	mov    QWORD PTR [rbp-0x18],rdi
  42dae7:	mov    rax,QWORD PTR [rbp-0x18]
  42daeb:	mov    edx,DWORD PTR [rax+0x38]
  42daee:	mov    rax,QWORD PTR [rbp-0x18]
  42daf2:	movzx  eax,BYTE PTR [rax+0x31]
  42daf6:	movzx  eax,al
  42daf9:	imul   eax,edx
  42dafc:	cdqe   
  42dafe:	mov    QWORD PTR [rbp-0x8],rax
  42db02:	mov    rax,QWORD PTR [rbp-0x18]
  42db06:	mov    rdx,QWORD PTR [rax+0x28]
  42db0a:	mov    rax,QWORD PTR [rbp-0x8]
  42db0e:	add    rdx,rax
  42db11:	mov    rax,QWORD PTR [rbp-0x18]
  42db15:	mov    rax,QWORD PTR [rax+0x20]
  42db19:	cmp    rdx,rax
  42db1c:	jbe    42db33 <flatcc_json_printer_fmt_bool@@Base+0x807>
  42db1e:	mov    rdx,QWORD PTR [rbp-0x8]
  42db22:	mov    rax,QWORD PTR [rbp-0x18]
  42db26:	mov    rsi,rdx
  42db29:	mov    rdi,rax
  42db2c:	call   42d9db <flatcc_json_printer_fmt_bool@@Base+0x6af>
  42db31:	jmp    42db63 <flatcc_json_printer_fmt_bool@@Base+0x837>
  42db33:	mov    rax,QWORD PTR [rbp-0x18]
  42db37:	mov    rax,QWORD PTR [rax+0x28]
  42db3b:	mov    rdx,QWORD PTR [rbp-0x8]
  42db3f:	mov    esi,0x20
  42db44:	mov    rdi,rax
  42db47:	call   4061c0 <memset@plt>
  42db4c:	mov    rax,QWORD PTR [rbp-0x18]
  42db50:	mov    rdx,QWORD PTR [rax+0x28]
  42db54:	mov    rax,QWORD PTR [rbp-0x8]
  42db58:	add    rdx,rax
  42db5b:	mov    rax,QWORD PTR [rbp-0x18]
  42db5f:	mov    QWORD PTR [rax+0x28],rdx
  42db63:	nop
  42db64:	leave  
  42db65:	ret    

000000000042db66 <flatcc_json_printer_string@@Base>:
  42db66:	endbr64 
  42db6a:	push   rbp
  42db6b:	mov    rbp,rsp
  42db6e:	sub    rsp,0x20
  42db72:	mov    QWORD PTR [rbp-0x8],rdi
  42db76:	mov    QWORD PTR [rbp-0x10],rsi
  42db7a:	mov    DWORD PTR [rbp-0x14],edx
  42db7d:	mov    eax,DWORD PTR [rbp-0x14]
  42db80:	movsxd rdx,eax
  42db83:	mov    rcx,QWORD PTR [rbp-0x10]
  42db87:	mov    rax,QWORD PTR [rbp-0x8]
  42db8b:	mov    rsi,rcx
  42db8e:	mov    rdi,rax
  42db91:	call   42d511 <flatcc_json_printer_fmt_bool@@Base+0x1e5>
  42db96:	nop
  42db97:	leave  
  42db98:	ret    

000000000042db99 <flatcc_json_printer_write@@Base>:
  42db99:	endbr64 
  42db9d:	push   rbp
  42db9e:	mov    rbp,rsp
  42dba1:	sub    rsp,0x20
  42dba5:	mov    QWORD PTR [rbp-0x8],rdi
  42dba9:	mov    QWORD PTR [rbp-0x10],rsi
  42dbad:	mov    DWORD PTR [rbp-0x14],edx
  42dbb0:	mov    eax,DWORD PTR [rbp-0x14]
  42dbb3:	movsxd rdx,eax
  42dbb6:	mov    rcx,QWORD PTR [rbp-0x10]
  42dbba:	mov    rax,QWORD PTR [rbp-0x8]
  42dbbe:	mov    rsi,rcx
  42dbc1:	mov    rdi,rax
  42dbc4:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42dbc9:	nop
  42dbca:	leave  
  42dbcb:	ret    

000000000042dbcc <flatcc_json_printer_nl@@Base>:
  42dbcc:	endbr64 
  42dbd0:	push   rbp
  42dbd1:	mov    rbp,rsp
  42dbd4:	sub    rsp,0x10
  42dbd8:	mov    QWORD PTR [rbp-0x8],rdi
  42dbdc:	mov    rax,QWORD PTR [rbp-0x8]
  42dbe0:	mov    rax,QWORD PTR [rax+0x28]
  42dbe4:	lea    rcx,[rax+0x1]
  42dbe8:	mov    rdx,QWORD PTR [rbp-0x8]
  42dbec:	mov    QWORD PTR [rdx+0x28],rcx
  42dbf0:	mov    BYTE PTR [rax],0xa
  42dbf3:	mov    rax,QWORD PTR [rbp-0x8]
  42dbf7:	mov    rdi,rax
  42dbfa:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  42dbff:	nop
  42dc00:	leave  
  42dc01:	ret    

000000000042dc02 <flatcc_json_printer_char@@Base>:
  42dc02:	endbr64 
  42dc06:	push   rbp
  42dc07:	mov    rbp,rsp
  42dc0a:	mov    QWORD PTR [rbp-0x8],rdi
  42dc0e:	mov    eax,esi
  42dc10:	mov    BYTE PTR [rbp-0xc],al
  42dc13:	mov    rax,QWORD PTR [rbp-0x8]
  42dc17:	mov    rdx,QWORD PTR [rax+0x28]
  42dc1b:	lea    rcx,[rdx+0x1]
  42dc1f:	mov    rax,QWORD PTR [rbp-0x8]
  42dc23:	mov    QWORD PTR [rax+0x28],rcx
  42dc27:	movzx  eax,BYTE PTR [rbp-0xc]
  42dc2b:	mov    BYTE PTR [rdx],al
  42dc2d:	nop
  42dc2e:	pop    rbp
  42dc2f:	ret    

000000000042dc30 <flatcc_json_printer_indent@@Base>:
  42dc30:	endbr64 
  42dc34:	push   rbp
  42dc35:	mov    rbp,rsp
  42dc38:	sub    rsp,0x10
  42dc3c:	mov    QWORD PTR [rbp-0x8],rdi
  42dc40:	mov    rax,QWORD PTR [rbp-0x8]
  42dc44:	mov    rdi,rax
  42dc47:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42dc4c:	nop
  42dc4d:	leave  
  42dc4e:	ret    

000000000042dc4f <flatcc_json_printer_add_level@@Base>:
  42dc4f:	endbr64 
  42dc53:	push   rbp
  42dc54:	mov    rbp,rsp
  42dc57:	mov    QWORD PTR [rbp-0x8],rdi
  42dc5b:	mov    DWORD PTR [rbp-0xc],esi
  42dc5e:	mov    rax,QWORD PTR [rbp-0x8]
  42dc62:	mov    edx,DWORD PTR [rax+0x38]
  42dc65:	mov    eax,DWORD PTR [rbp-0xc]
  42dc68:	add    edx,eax
  42dc6a:	mov    rax,QWORD PTR [rbp-0x8]
  42dc6e:	mov    DWORD PTR [rax+0x38],edx
  42dc71:	nop
  42dc72:	pop    rbp
  42dc73:	ret    

000000000042dc74 <flatcc_json_printer_get_level@@Base>:
  42dc74:	endbr64 
  42dc78:	push   rbp
  42dc79:	mov    rbp,rsp
  42dc7c:	mov    QWORD PTR [rbp-0x8],rdi
  42dc80:	mov    rax,QWORD PTR [rbp-0x8]
  42dc84:	mov    eax,DWORD PTR [rax+0x38]
  42dc87:	pop    rbp
  42dc88:	ret    
  42dc89:	push   rbp
  42dc8a:	mov    rbp,rsp
  42dc8d:	sub    rsp,0x20
  42dc91:	mov    QWORD PTR [rbp-0x8],rdi
  42dc95:	mov    QWORD PTR [rbp-0x10],rsi
  42dc99:	mov    QWORD PTR [rbp-0x18],rdx
  42dc9d:	mov    rax,QWORD PTR [rbp-0x8]
  42dca1:	mov    rax,QWORD PTR [rax+0x28]
  42dca5:	mov    BYTE PTR [rax],0x22
  42dca8:	mov    rax,QWORD PTR [rbp-0x8]
  42dcac:	mov    rdx,QWORD PTR [rax+0x28]
  42dcb0:	mov    rax,QWORD PTR [rbp-0x8]
  42dcb4:	movzx  eax,BYTE PTR [rax+0x32]
  42dcb8:	test   al,al
  42dcba:	sete   al
  42dcbd:	movzx  eax,al
  42dcc0:	add    rdx,rax
  42dcc3:	mov    rax,QWORD PTR [rbp-0x8]
  42dcc7:	mov    QWORD PTR [rax+0x28],rdx
  42dccb:	mov    rax,QWORD PTR [rbp-0x8]
  42dccf:	mov    rdx,QWORD PTR [rax+0x28]
  42dcd3:	mov    rax,QWORD PTR [rbp-0x18]
  42dcd7:	add    rdx,rax
  42dcda:	mov    rax,QWORD PTR [rbp-0x8]
  42dcde:	mov    rax,QWORD PTR [rax+0x20]
  42dce2:	cmp    rdx,rax
  42dce5:	jae    42dd1b <flatcc_json_printer_get_level@@Base+0xa7>
  42dce7:	mov    rax,QWORD PTR [rbp-0x8]
  42dceb:	mov    rax,QWORD PTR [rax+0x28]
  42dcef:	mov    rdx,QWORD PTR [rbp-0x18]
  42dcf3:	mov    rcx,QWORD PTR [rbp-0x10]
  42dcf7:	mov    rsi,rcx
  42dcfa:	mov    rdi,rax
  42dcfd:	call   406220 <memcpy@plt>
  42dd02:	mov    rax,QWORD PTR [rbp-0x8]
  42dd06:	mov    rdx,QWORD PTR [rax+0x28]
  42dd0a:	mov    rax,QWORD PTR [rbp-0x18]
  42dd0e:	add    rdx,rax
  42dd11:	mov    rax,QWORD PTR [rbp-0x8]
  42dd15:	mov    QWORD PTR [rax+0x28],rdx
  42dd19:	jmp    42dd32 <flatcc_json_printer_get_level@@Base+0xbe>
  42dd1b:	mov    rdx,QWORD PTR [rbp-0x18]
  42dd1f:	mov    rcx,QWORD PTR [rbp-0x10]
  42dd23:	mov    rax,QWORD PTR [rbp-0x8]
  42dd27:	mov    rsi,rcx
  42dd2a:	mov    rdi,rax
  42dd2d:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42dd32:	mov    rax,QWORD PTR [rbp-0x8]
  42dd36:	mov    rax,QWORD PTR [rax+0x28]
  42dd3a:	mov    BYTE PTR [rax],0x22
  42dd3d:	mov    rax,QWORD PTR [rbp-0x8]
  42dd41:	mov    rdx,QWORD PTR [rax+0x28]
  42dd45:	mov    rax,QWORD PTR [rbp-0x8]
  42dd49:	movzx  eax,BYTE PTR [rax+0x32]
  42dd4d:	test   al,al
  42dd4f:	sete   al
  42dd52:	movzx  eax,al
  42dd55:	add    rdx,rax
  42dd58:	mov    rax,QWORD PTR [rbp-0x8]
  42dd5c:	mov    QWORD PTR [rax+0x28],rdx
  42dd60:	nop
  42dd61:	leave  
  42dd62:	ret    
  42dd63:	push   rbp
  42dd64:	mov    rbp,rsp
  42dd67:	sub    rsp,0x20
  42dd6b:	mov    QWORD PTR [rbp-0x8],rdi
  42dd6f:	mov    QWORD PTR [rbp-0x10],rsi
  42dd73:	mov    QWORD PTR [rbp-0x18],rdx
  42dd77:	mov    rax,QWORD PTR [rbp-0x8]
  42dd7b:	movzx  eax,BYTE PTR [rax+0x31]
  42dd7f:	test   al,al
  42dd81:	je     42dda8 <flatcc_json_printer_get_level@@Base+0x134>
  42dd83:	mov    rax,QWORD PTR [rbp-0x8]
  42dd87:	mov    rax,QWORD PTR [rax+0x28]
  42dd8b:	lea    rcx,[rax+0x1]
  42dd8f:	mov    rdx,QWORD PTR [rbp-0x8]
  42dd93:	mov    QWORD PTR [rdx+0x28],rcx
  42dd97:	mov    BYTE PTR [rax],0xa
  42dd9a:	mov    rax,QWORD PTR [rbp-0x8]
  42dd9e:	mov    rdi,rax
  42dda1:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42dda6:	jmp    42ddb4 <flatcc_json_printer_get_level@@Base+0x140>
  42dda8:	mov    rax,QWORD PTR [rbp-0x8]
  42ddac:	mov    rdi,rax
  42ddaf:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  42ddb4:	mov    rdx,QWORD PTR [rbp-0x18]
  42ddb8:	mov    rcx,QWORD PTR [rbp-0x10]
  42ddbc:	mov    rax,QWORD PTR [rbp-0x8]
  42ddc0:	mov    rsi,rcx
  42ddc3:	mov    rdi,rax
  42ddc6:	call   42dc89 <flatcc_json_printer_get_level@@Base+0x15>
  42ddcb:	mov    rax,QWORD PTR [rbp-0x8]
  42ddcf:	mov    rax,QWORD PTR [rax+0x28]
  42ddd3:	lea    rcx,[rax+0x1]
  42ddd7:	mov    rdx,QWORD PTR [rbp-0x8]
  42dddb:	mov    QWORD PTR [rdx+0x28],rcx
  42dddf:	mov    BYTE PTR [rax],0x3a
  42dde2:	mov    rax,QWORD PTR [rbp-0x8]
  42dde6:	mov    rax,QWORD PTR [rax+0x28]
  42ddea:	mov    BYTE PTR [rax],0x20
  42dded:	mov    rax,QWORD PTR [rbp-0x8]
  42ddf1:	mov    rdx,QWORD PTR [rax+0x28]
  42ddf5:	mov    rax,QWORD PTR [rbp-0x8]
  42ddf9:	movzx  eax,BYTE PTR [rax+0x31]
  42ddfd:	test   al,al
  42ddff:	setne  al
  42de02:	movzx  eax,al
  42de05:	add    rdx,rax
  42de08:	mov    rax,QWORD PTR [rbp-0x8]
  42de0c:	mov    QWORD PTR [rax+0x28],rdx
  42de10:	nop
  42de11:	leave  
  42de12:	ret    

000000000042de13 <flatcc_json_printer_uint8@@Base>:
  42de13:	endbr64 
  42de17:	push   rbp
  42de18:	mov    rbp,rsp
  42de1b:	sub    rsp,0x10
  42de1f:	mov    QWORD PTR [rbp-0x8],rdi
  42de23:	mov    eax,esi
  42de25:	mov    BYTE PTR [rbp-0xc],al
  42de28:	mov    rax,QWORD PTR [rbp-0x8]
  42de2c:	mov    rdx,QWORD PTR [rax+0x28]
  42de30:	movzx  eax,BYTE PTR [rbp-0xc]
  42de34:	mov    rsi,rdx
  42de37:	mov    edi,eax
  42de39:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42de3e:	mov    ecx,eax
  42de40:	mov    rax,QWORD PTR [rbp-0x8]
  42de44:	mov    rdx,QWORD PTR [rax+0x28]
  42de48:	movsxd rax,ecx
  42de4b:	add    rdx,rax
  42de4e:	mov    rax,QWORD PTR [rbp-0x8]
  42de52:	mov    QWORD PTR [rax+0x28],rdx
  42de56:	nop
  42de57:	leave  
  42de58:	ret    

000000000042de59 <flatcc_json_printer_uint16@@Base>:
  42de59:	endbr64 
  42de5d:	push   rbp
  42de5e:	mov    rbp,rsp
  42de61:	sub    rsp,0x10
  42de65:	mov    QWORD PTR [rbp-0x8],rdi
  42de69:	mov    eax,esi
  42de6b:	mov    WORD PTR [rbp-0xc],ax
  42de6f:	mov    rax,QWORD PTR [rbp-0x8]
  42de73:	mov    rdx,QWORD PTR [rax+0x28]
  42de77:	movzx  eax,WORD PTR [rbp-0xc]
  42de7b:	mov    rsi,rdx
  42de7e:	mov    edi,eax
  42de80:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42de85:	mov    ecx,eax
  42de87:	mov    rax,QWORD PTR [rbp-0x8]
  42de8b:	mov    rdx,QWORD PTR [rax+0x28]
  42de8f:	movsxd rax,ecx
  42de92:	add    rdx,rax
  42de95:	mov    rax,QWORD PTR [rbp-0x8]
  42de99:	mov    QWORD PTR [rax+0x28],rdx
  42de9d:	nop
  42de9e:	leave  
  42de9f:	ret    

000000000042dea0 <flatcc_json_printer_uint32@@Base>:
  42dea0:	endbr64 
  42dea4:	push   rbp
  42dea5:	mov    rbp,rsp
  42dea8:	sub    rsp,0x10
  42deac:	mov    QWORD PTR [rbp-0x8],rdi
  42deb0:	mov    DWORD PTR [rbp-0xc],esi
  42deb3:	mov    rax,QWORD PTR [rbp-0x8]
  42deb7:	mov    rdx,QWORD PTR [rax+0x28]
  42debb:	mov    eax,DWORD PTR [rbp-0xc]
  42debe:	mov    rsi,rdx
  42dec1:	mov    edi,eax
  42dec3:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42dec8:	mov    ecx,eax
  42deca:	mov    rax,QWORD PTR [rbp-0x8]
  42dece:	mov    rdx,QWORD PTR [rax+0x28]
  42ded2:	movsxd rax,ecx
  42ded5:	add    rdx,rax
  42ded8:	mov    rax,QWORD PTR [rbp-0x8]
  42dedc:	mov    QWORD PTR [rax+0x28],rdx
  42dee0:	nop
  42dee1:	leave  
  42dee2:	ret    

000000000042dee3 <flatcc_json_printer_uint64@@Base>:
  42dee3:	endbr64 
  42dee7:	push   rbp
  42dee8:	mov    rbp,rsp
  42deeb:	sub    rsp,0x10
  42deef:	mov    QWORD PTR [rbp-0x8],rdi
  42def3:	mov    QWORD PTR [rbp-0x10],rsi
  42def7:	mov    rax,QWORD PTR [rbp-0x8]
  42defb:	mov    rdx,QWORD PTR [rax+0x28]
  42deff:	mov    rax,QWORD PTR [rbp-0x10]
  42df03:	mov    rsi,rdx
  42df06:	mov    rdi,rax
  42df09:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42df0e:	mov    ecx,eax
  42df10:	mov    rax,QWORD PTR [rbp-0x8]
  42df14:	mov    rdx,QWORD PTR [rax+0x28]
  42df18:	movsxd rax,ecx
  42df1b:	add    rdx,rax
  42df1e:	mov    rax,QWORD PTR [rbp-0x8]
  42df22:	mov    QWORD PTR [rax+0x28],rdx
  42df26:	nop
  42df27:	leave  
  42df28:	ret    

000000000042df29 <flatcc_json_printer_int8@@Base>:
  42df29:	endbr64 
  42df2d:	push   rbp
  42df2e:	mov    rbp,rsp
  42df31:	sub    rsp,0x10
  42df35:	mov    QWORD PTR [rbp-0x8],rdi
  42df39:	mov    eax,esi
  42df3b:	mov    BYTE PTR [rbp-0xc],al
  42df3e:	mov    rax,QWORD PTR [rbp-0x8]
  42df42:	mov    rdx,QWORD PTR [rax+0x28]
  42df46:	movsx  eax,BYTE PTR [rbp-0xc]
  42df4a:	mov    rsi,rdx
  42df4d:	mov    edi,eax
  42df4f:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42df54:	mov    ecx,eax
  42df56:	mov    rax,QWORD PTR [rbp-0x8]
  42df5a:	mov    rdx,QWORD PTR [rax+0x28]
  42df5e:	movsxd rax,ecx
  42df61:	add    rdx,rax
  42df64:	mov    rax,QWORD PTR [rbp-0x8]
  42df68:	mov    QWORD PTR [rax+0x28],rdx
  42df6c:	nop
  42df6d:	leave  
  42df6e:	ret    

000000000042df6f <flatcc_json_printer_int16@@Base>:
  42df6f:	endbr64 
  42df73:	push   rbp
  42df74:	mov    rbp,rsp
  42df77:	sub    rsp,0x10
  42df7b:	mov    QWORD PTR [rbp-0x8],rdi
  42df7f:	mov    eax,esi
  42df81:	mov    WORD PTR [rbp-0xc],ax
  42df85:	mov    rax,QWORD PTR [rbp-0x8]
  42df89:	mov    rdx,QWORD PTR [rax+0x28]
  42df8d:	movsx  eax,WORD PTR [rbp-0xc]
  42df91:	mov    rsi,rdx
  42df94:	mov    edi,eax
  42df96:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42df9b:	mov    ecx,eax
  42df9d:	mov    rax,QWORD PTR [rbp-0x8]
  42dfa1:	mov    rdx,QWORD PTR [rax+0x28]
  42dfa5:	movsxd rax,ecx
  42dfa8:	add    rdx,rax
  42dfab:	mov    rax,QWORD PTR [rbp-0x8]
  42dfaf:	mov    QWORD PTR [rax+0x28],rdx
  42dfb3:	nop
  42dfb4:	leave  
  42dfb5:	ret    

000000000042dfb6 <flatcc_json_printer_int32@@Base>:
  42dfb6:	endbr64 
  42dfba:	push   rbp
  42dfbb:	mov    rbp,rsp
  42dfbe:	sub    rsp,0x10
  42dfc2:	mov    QWORD PTR [rbp-0x8],rdi
  42dfc6:	mov    DWORD PTR [rbp-0xc],esi
  42dfc9:	mov    rax,QWORD PTR [rbp-0x8]
  42dfcd:	mov    rdx,QWORD PTR [rax+0x28]
  42dfd1:	mov    eax,DWORD PTR [rbp-0xc]
  42dfd4:	mov    rsi,rdx
  42dfd7:	mov    edi,eax
  42dfd9:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42dfde:	mov    ecx,eax
  42dfe0:	mov    rax,QWORD PTR [rbp-0x8]
  42dfe4:	mov    rdx,QWORD PTR [rax+0x28]
  42dfe8:	movsxd rax,ecx
  42dfeb:	add    rdx,rax
  42dfee:	mov    rax,QWORD PTR [rbp-0x8]
  42dff2:	mov    QWORD PTR [rax+0x28],rdx
  42dff6:	nop
  42dff7:	leave  
  42dff8:	ret    

000000000042dff9 <flatcc_json_printer_int64@@Base>:
  42dff9:	endbr64 
  42dffd:	push   rbp
  42dffe:	mov    rbp,rsp
  42e001:	sub    rsp,0x10
  42e005:	mov    QWORD PTR [rbp-0x8],rdi
  42e009:	mov    QWORD PTR [rbp-0x10],rsi
  42e00d:	mov    rax,QWORD PTR [rbp-0x8]
  42e011:	mov    rdx,QWORD PTR [rax+0x28]
  42e015:	mov    rax,QWORD PTR [rbp-0x10]
  42e019:	mov    rsi,rdx
  42e01c:	mov    rdi,rax
  42e01f:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42e024:	mov    ecx,eax
  42e026:	mov    rax,QWORD PTR [rbp-0x8]
  42e02a:	mov    rdx,QWORD PTR [rax+0x28]
  42e02e:	movsxd rax,ecx
  42e031:	add    rdx,rax
  42e034:	mov    rax,QWORD PTR [rbp-0x8]
  42e038:	mov    QWORD PTR [rax+0x28],rdx
  42e03c:	nop
  42e03d:	leave  
  42e03e:	ret    

000000000042e03f <flatcc_json_printer_float@@Base>:
  42e03f:	endbr64 
  42e043:	push   rbp
  42e044:	mov    rbp,rsp
  42e047:	sub    rsp,0x10
  42e04b:	mov    QWORD PTR [rbp-0x8],rdi
  42e04f:	vmovss DWORD PTR [rbp-0xc],xmm0
  42e054:	mov    rax,QWORD PTR [rbp-0x8]
  42e058:	mov    rdx,QWORD PTR [rax+0x28]
  42e05c:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42e061:	vmovq  rax,xmm1
  42e066:	mov    rdi,rdx
  42e069:	vmovq  xmm0,rax
  42e06e:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42e073:	mov    ecx,eax
  42e075:	mov    rax,QWORD PTR [rbp-0x8]
  42e079:	mov    rdx,QWORD PTR [rax+0x28]
  42e07d:	movsxd rax,ecx
  42e080:	add    rdx,rax
  42e083:	mov    rax,QWORD PTR [rbp-0x8]
  42e087:	mov    QWORD PTR [rax+0x28],rdx
  42e08b:	nop
  42e08c:	leave  
  42e08d:	ret    

000000000042e08e <flatcc_json_printer_double@@Base>:
  42e08e:	endbr64 
  42e092:	push   rbp
  42e093:	mov    rbp,rsp
  42e096:	sub    rsp,0x10
  42e09a:	mov    QWORD PTR [rbp-0x8],rdi
  42e09e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42e0a3:	mov    rax,QWORD PTR [rbp-0x8]
  42e0a7:	mov    rdx,QWORD PTR [rax+0x28]
  42e0ab:	mov    rax,QWORD PTR [rbp-0x10]
  42e0af:	mov    rdi,rdx
  42e0b2:	vmovq  xmm0,rax
  42e0b7:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42e0bc:	mov    ecx,eax
  42e0be:	mov    rax,QWORD PTR [rbp-0x8]
  42e0c2:	mov    rdx,QWORD PTR [rax+0x28]
  42e0c6:	movsxd rax,ecx
  42e0c9:	add    rdx,rax
  42e0cc:	mov    rax,QWORD PTR [rbp-0x8]
  42e0d0:	mov    QWORD PTR [rax+0x28],rdx
  42e0d4:	nop
  42e0d5:	leave  
  42e0d6:	ret    

000000000042e0d7 <flatcc_json_printer_enum@@Base>:
  42e0d7:	endbr64 
  42e0db:	push   rbp
  42e0dc:	mov    rbp,rsp
  42e0df:	sub    rsp,0x20
  42e0e3:	mov    QWORD PTR [rbp-0x8],rdi
  42e0e7:	mov    QWORD PTR [rbp-0x10],rsi
  42e0eb:	mov    DWORD PTR [rbp-0x14],edx
  42e0ee:	mov    eax,DWORD PTR [rbp-0x14]
  42e0f1:	movsxd rdx,eax
  42e0f4:	mov    rcx,QWORD PTR [rbp-0x10]
  42e0f8:	mov    rax,QWORD PTR [rbp-0x8]
  42e0fc:	mov    rsi,rcx
  42e0ff:	mov    rdi,rax
  42e102:	call   42dc89 <flatcc_json_printer_get_level@@Base+0x15>
  42e107:	nop
  42e108:	leave  
  42e109:	ret    

000000000042e10a <flatcc_json_printer_delimit_enum_flags@@Base>:
  42e10a:	endbr64 
  42e10e:	push   rbp
  42e10f:	mov    rbp,rsp
  42e112:	mov    QWORD PTR [rbp-0x18],rdi
  42e116:	mov    DWORD PTR [rbp-0x1c],esi
  42e119:	mov    rax,QWORD PTR [rbp-0x18]
  42e11d:	movzx  eax,BYTE PTR [rax+0x32]
  42e121:	test   al,al
  42e123:	je     42e12b <flatcc_json_printer_delimit_enum_flags@@Base+0x21>
  42e125:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e129:	je     42e132 <flatcc_json_printer_delimit_enum_flags@@Base+0x28>
  42e12b:	mov    eax,0x1
  42e130:	jmp    42e137 <flatcc_json_printer_delimit_enum_flags@@Base+0x2d>
  42e132:	mov    eax,0x0
  42e137:	mov    DWORD PTR [rbp-0x4],eax
  42e13a:	mov    rax,QWORD PTR [rbp-0x18]
  42e13e:	mov    rax,QWORD PTR [rax+0x28]
  42e142:	mov    BYTE PTR [rax],0x22
  42e145:	mov    rax,QWORD PTR [rbp-0x18]
  42e149:	mov    rdx,QWORD PTR [rax+0x28]
  42e14d:	mov    eax,DWORD PTR [rbp-0x4]
  42e150:	cdqe   
  42e152:	add    rdx,rax
  42e155:	mov    rax,QWORD PTR [rbp-0x18]
  42e159:	mov    QWORD PTR [rax+0x28],rdx
  42e15d:	nop
  42e15e:	pop    rbp
  42e15f:	ret    

000000000042e160 <flatcc_json_printer_enum_flag@@Base>:
  42e160:	endbr64 
  42e164:	push   rbp
  42e165:	mov    rbp,rsp
  42e168:	sub    rsp,0x20
  42e16c:	mov    QWORD PTR [rbp-0x8],rdi
  42e170:	mov    DWORD PTR [rbp-0xc],esi
  42e173:	mov    QWORD PTR [rbp-0x18],rdx
  42e177:	mov    DWORD PTR [rbp-0x10],ecx
  42e17a:	mov    rax,QWORD PTR [rbp-0x8]
  42e17e:	mov    rax,QWORD PTR [rax+0x28]
  42e182:	mov    BYTE PTR [rax],0x20
  42e185:	mov    rax,QWORD PTR [rbp-0x8]
  42e189:	mov    rdx,QWORD PTR [rax+0x28]
  42e18d:	cmp    DWORD PTR [rbp-0xc],0x0
  42e191:	setg   al
  42e194:	movzx  eax,al
  42e197:	add    rdx,rax
  42e19a:	mov    rax,QWORD PTR [rbp-0x8]
  42e19e:	mov    QWORD PTR [rax+0x28],rdx
  42e1a2:	mov    eax,DWORD PTR [rbp-0x10]
  42e1a5:	movsxd rdx,eax
  42e1a8:	mov    rcx,QWORD PTR [rbp-0x18]
  42e1ac:	mov    rax,QWORD PTR [rbp-0x8]
  42e1b0:	mov    rsi,rcx
  42e1b3:	mov    rdi,rax
  42e1b6:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42e1bb:	nop
  42e1bc:	leave  
  42e1bd:	ret    
  42e1be:	push   rbp
  42e1bf:	mov    rbp,rsp
  42e1c2:	sub    rsp,0x20
  42e1c6:	mov    QWORD PTR [rbp-0x18],rdi
  42e1ca:	mov    QWORD PTR [rbp-0x20],rsi
  42e1ce:	mov    rax,QWORD PTR [rbp-0x20]
  42e1d2:	mov    rdi,rax
  42e1d5:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42e1da:	mov    eax,eax
  42e1dc:	mov    QWORD PTR [rbp-0x10],rax
  42e1e0:	mov    rax,QWORD PTR [rbp-0x20]
  42e1e4:	add    rax,0x4
  42e1e8:	mov    QWORD PTR [rbp-0x8],rax
  42e1ec:	mov    rdx,QWORD PTR [rbp-0x10]
  42e1f0:	mov    rcx,QWORD PTR [rbp-0x8]
  42e1f4:	mov    rax,QWORD PTR [rbp-0x18]
  42e1f8:	mov    rsi,rcx
  42e1fb:	mov    rdi,rax
  42e1fe:	call   42d511 <flatcc_json_printer_fmt_bool@@Base+0x1e5>
  42e203:	nop
  42e204:	leave  
  42e205:	ret    
  42e206:	push   rbp
  42e207:	mov    rbp,rsp
  42e20a:	sub    rsp,0x50
  42e20e:	mov    QWORD PTR [rbp-0x38],rdi
  42e212:	mov    QWORD PTR [rbp-0x40],rsi
  42e216:	mov    DWORD PTR [rbp-0x44],edx
  42e219:	mov    QWORD PTR [rbp-0x50],rcx
  42e21d:	mov    rax,QWORD PTR fs:0x28
  42e226:	mov    QWORD PTR [rbp-0x8],rax
  42e22a:	xor    eax,eax
  42e22c:	dec    DWORD PTR [rbp-0x44]
  42e22f:	cmp    DWORD PTR [rbp-0x44],0x0
  42e233:	jne    42e24b <flatcc_json_printer_enum_flag@@Base+0xeb>
  42e235:	mov    rax,QWORD PTR [rbp-0x38]
  42e239:	mov    esi,0x2
  42e23e:	mov    rdi,rax
  42e241:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  42e246:	jmp    42e324 <flatcc_json_printer_enum_flag@@Base+0x1c4>
  42e24b:	mov    rax,QWORD PTR [rbp-0x38]
  42e24f:	mov    eax,DWORD PTR [rax+0x38]
  42e252:	lea    edx,[rax+0x1]
  42e255:	mov    rax,QWORD PTR [rbp-0x38]
  42e259:	mov    DWORD PTR [rax+0x38],edx
  42e25c:	mov    rax,QWORD PTR [rbp-0x38]
  42e260:	mov    rax,QWORD PTR [rax+0x28]
  42e264:	lea    rcx,[rax+0x1]
  42e268:	mov    rdx,QWORD PTR [rbp-0x38]
  42e26c:	mov    QWORD PTR [rdx+0x28],rcx
  42e270:	mov    BYTE PTR [rax],0x7b
  42e273:	mov    DWORD PTR [rbp-0x18],0x0
  42e27a:	mov    eax,DWORD PTR [rbp-0x44]
  42e27d:	mov    DWORD PTR [rbp-0x1c],eax
  42e280:	mov    rax,QWORD PTR [rbp-0x40]
  42e284:	mov    QWORD PTR [rbp-0x30],rax
  42e288:	mov    rax,QWORD PTR [rbp-0x40]
  42e28c:	mov    rdi,rax
  42e28f:	call   42a0bd <flatcc_json_parser_struct_as_root@@Base+0x388>
  42e294:	cdqe   
  42e296:	neg    rax
  42e299:	mov    rdx,rax
  42e29c:	mov    rax,QWORD PTR [rbp-0x40]
  42e2a0:	add    rax,rdx
  42e2a3:	mov    QWORD PTR [rbp-0x28],rax
  42e2a7:	mov    rax,QWORD PTR [rbp-0x28]
  42e2ab:	mov    rdi,rax
  42e2ae:	call   42a0e8 <flatcc_json_parser_struct_as_root@@Base+0x3b3>
  42e2b3:	movzx  eax,ax
  42e2b6:	mov    DWORD PTR [rbp-0x20],eax
  42e2b9:	lea    rcx,[rbp-0x30]
  42e2bd:	mov    rdx,QWORD PTR [rbp-0x38]
  42e2c1:	mov    rax,QWORD PTR [rbp-0x50]
  42e2c5:	mov    rsi,rcx
  42e2c8:	mov    rdi,rdx
  42e2cb:	call   rax
  42e2cd:	mov    rax,QWORD PTR [rbp-0x38]
  42e2d1:	movzx  eax,BYTE PTR [rax+0x31]
  42e2d5:	test   al,al
  42e2d7:	je     42e30d <flatcc_json_printer_enum_flag@@Base+0x1ad>
  42e2d9:	mov    rax,QWORD PTR [rbp-0x38]
  42e2dd:	mov    rax,QWORD PTR [rax+0x28]
  42e2e1:	lea    rcx,[rax+0x1]
  42e2e5:	mov    rdx,QWORD PTR [rbp-0x38]
  42e2e9:	mov    QWORD PTR [rdx+0x28],rcx
  42e2ed:	mov    BYTE PTR [rax],0xa
  42e2f0:	mov    rax,QWORD PTR [rbp-0x38]
  42e2f4:	mov    eax,DWORD PTR [rax+0x38]
  42e2f7:	lea    edx,[rax-0x1]
  42e2fa:	mov    rax,QWORD PTR [rbp-0x38]
  42e2fe:	mov    DWORD PTR [rax+0x38],edx
  42e301:	mov    rax,QWORD PTR [rbp-0x38]
  42e305:	mov    rdi,rax
  42e308:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42e30d:	mov    rax,QWORD PTR [rbp-0x38]
  42e311:	mov    rax,QWORD PTR [rax+0x28]
  42e315:	lea    rcx,[rax+0x1]
  42e319:	mov    rdx,QWORD PTR [rbp-0x38]
  42e31d:	mov    QWORD PTR [rdx+0x28],rcx
  42e321:	mov    BYTE PTR [rax],0x7d
  42e324:	mov    rax,QWORD PTR [rbp-0x8]
  42e328:	xor    rax,QWORD PTR fs:0x28
  42e331:	je     42e338 <flatcc_json_printer_enum_flag@@Base+0x1d8>
  42e333:	call   4061a0 <__stack_chk_fail@plt>
  42e338:	leave  
  42e339:	ret    

000000000042e33a <flatcc_json_printer_string_field@@Base>:
  42e33a:	endbr64 
  42e33e:	push   rbp
  42e33f:	mov    rbp,rsp
  42e342:	sub    rsp,0x30
  42e346:	mov    QWORD PTR [rbp-0x18],rdi
  42e34a:	mov    QWORD PTR [rbp-0x20],rsi
  42e34e:	mov    DWORD PTR [rbp-0x24],edx
  42e351:	mov    QWORD PTR [rbp-0x30],rcx
  42e355:	mov    DWORD PTR [rbp-0x28],r8d
  42e359:	mov    edx,DWORD PTR [rbp-0x24]
  42e35c:	mov    rax,QWORD PTR [rbp-0x20]
  42e360:	mov    esi,edx
  42e362:	mov    rdi,rax
  42e365:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e36a:	mov    QWORD PTR [rbp-0x8],rax
  42e36e:	cmp    QWORD PTR [rbp-0x8],0x0
  42e373:	je     42e3d8 <flatcc_json_printer_string_field@@Base+0x9e>
  42e375:	mov    rax,QWORD PTR [rbp-0x20]
  42e379:	mov    eax,DWORD PTR [rax+0x18]
  42e37c:	lea    ecx,[rax+0x1]
  42e37f:	mov    rdx,QWORD PTR [rbp-0x20]
  42e383:	mov    DWORD PTR [rdx+0x18],ecx
  42e386:	test   eax,eax
  42e388:	je     42e3a1 <flatcc_json_printer_string_field@@Base+0x67>
  42e38a:	mov    rax,QWORD PTR [rbp-0x18]
  42e38e:	mov    rax,QWORD PTR [rax+0x28]
  42e392:	lea    rcx,[rax+0x1]
  42e396:	mov    rdx,QWORD PTR [rbp-0x18]
  42e39a:	mov    QWORD PTR [rdx+0x28],rcx
  42e39e:	mov    BYTE PTR [rax],0x2c
  42e3a1:	mov    eax,DWORD PTR [rbp-0x28]
  42e3a4:	movsxd rdx,eax
  42e3a7:	mov    rcx,QWORD PTR [rbp-0x30]
  42e3ab:	mov    rax,QWORD PTR [rbp-0x18]
  42e3af:	mov    rsi,rcx
  42e3b2:	mov    rdi,rax
  42e3b5:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e3ba:	mov    rax,QWORD PTR [rbp-0x8]
  42e3be:	mov    rdi,rax
  42e3c1:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  42e3c6:	mov    rdx,rax
  42e3c9:	mov    rax,QWORD PTR [rbp-0x18]
  42e3cd:	mov    rsi,rdx
  42e3d0:	mov    rdi,rax
  42e3d3:	call   42e1be <flatcc_json_printer_enum_flag@@Base+0x5e>
  42e3d8:	nop
  42e3d9:	leave  
  42e3da:	ret    

000000000042e3db <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  42e3db:	endbr64 
  42e3df:	push   rbp
  42e3e0:	mov    rbp,rsp
  42e3e3:	sub    rsp,0x40
  42e3e7:	mov    QWORD PTR [rbp-0x18],rdi
  42e3eb:	mov    QWORD PTR [rbp-0x20],rsi
  42e3ef:	mov    DWORD PTR [rbp-0x24],edx
  42e3f2:	mov    QWORD PTR [rbp-0x30],rcx
  42e3f6:	mov    DWORD PTR [rbp-0x28],r8d
  42e3fa:	mov    DWORD PTR [rbp-0x34],r9d
  42e3fe:	mov    edx,DWORD PTR [rbp-0x24]
  42e401:	mov    rax,QWORD PTR [rbp-0x20]
  42e405:	mov    esi,edx
  42e407:	mov    rdi,rax
  42e40a:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e40f:	mov    QWORD PTR [rbp-0x8],rax
  42e413:	cmp    DWORD PTR [rbp-0x34],0x0
  42e417:	setne  al
  42e41a:	movzx  eax,al
  42e41d:	mov    DWORD PTR [rbp-0xc],eax
  42e420:	or     DWORD PTR [rbp-0xc],0x80
  42e427:	cmp    QWORD PTR [rbp-0x8],0x0
  42e42c:	je     42e494 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb9>
  42e42e:	mov    rax,QWORD PTR [rbp-0x20]
  42e432:	mov    eax,DWORD PTR [rax+0x18]
  42e435:	lea    ecx,[rax+0x1]
  42e438:	mov    rdx,QWORD PTR [rbp-0x20]
  42e43c:	mov    DWORD PTR [rdx+0x18],ecx
  42e43f:	test   eax,eax
  42e441:	je     42e45a <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7f>
  42e443:	mov    rax,QWORD PTR [rbp-0x18]
  42e447:	mov    rax,QWORD PTR [rax+0x28]
  42e44b:	lea    rcx,[rax+0x1]
  42e44f:	mov    rdx,QWORD PTR [rbp-0x18]
  42e453:	mov    QWORD PTR [rdx+0x28],rcx
  42e457:	mov    BYTE PTR [rax],0x2c
  42e45a:	mov    eax,DWORD PTR [rbp-0x28]
  42e45d:	movsxd rdx,eax
  42e460:	mov    rcx,QWORD PTR [rbp-0x30]
  42e464:	mov    rax,QWORD PTR [rbp-0x18]
  42e468:	mov    rsi,rcx
  42e46b:	mov    rdi,rax
  42e46e:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e473:	mov    rax,QWORD PTR [rbp-0x8]
  42e477:	mov    rdi,rax
  42e47a:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  42e47f:	mov    rcx,rax
  42e482:	mov    edx,DWORD PTR [rbp-0xc]
  42e485:	mov    rax,QWORD PTR [rbp-0x18]
  42e489:	mov    rsi,rcx
  42e48c:	mov    rdi,rax
  42e48f:	call   42d7b3 <flatcc_json_printer_fmt_bool@@Base+0x487>
  42e494:	nop
  42e495:	leave  
  42e496:	ret    

000000000042e497 <flatcc_json_printer_uint8_field@@Base>:
  42e497:	endbr64 
  42e49b:	push   rbp
  42e49c:	mov    rbp,rsp
  42e49f:	sub    rsp,0x40
  42e4a3:	mov    QWORD PTR [rbp-0x18],rdi
  42e4a7:	mov    QWORD PTR [rbp-0x20],rsi
  42e4ab:	mov    DWORD PTR [rbp-0x24],edx
  42e4ae:	mov    QWORD PTR [rbp-0x30],rcx
  42e4b2:	mov    DWORD PTR [rbp-0x28],r8d
  42e4b6:	mov    eax,r9d
  42e4b9:	mov    BYTE PTR [rbp-0x34],al
  42e4bc:	mov    edx,DWORD PTR [rbp-0x24]
  42e4bf:	mov    rax,QWORD PTR [rbp-0x20]
  42e4c3:	mov    esi,edx
  42e4c5:	mov    rdi,rax
  42e4c8:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e4cd:	mov    QWORD PTR [rbp-0x8],rax
  42e4d1:	cmp    QWORD PTR [rbp-0x8],0x0
  42e4d6:	je     42e501 <flatcc_json_printer_uint8_field@@Base+0x6a>
  42e4d8:	mov    rax,QWORD PTR [rbp-0x8]
  42e4dc:	mov    rdi,rax
  42e4df:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  42e4e4:	mov    BYTE PTR [rbp-0x9],al
  42e4e7:	movzx  eax,BYTE PTR [rbp-0x9]
  42e4eb:	cmp    al,BYTE PTR [rbp-0x34]
  42e4ee:	jne    42e514 <flatcc_json_printer_uint8_field@@Base+0x7d>
  42e4f0:	mov    rax,QWORD PTR [rbp-0x18]
  42e4f4:	movzx  eax,BYTE PTR [rax+0x34]
  42e4f8:	test   al,al
  42e4fa:	je     42e514 <flatcc_json_printer_uint8_field@@Base+0x7d>
  42e4fc:	jmp    42e58a <flatcc_json_printer_uint8_field@@Base+0xf3>
  42e501:	mov    rax,QWORD PTR [rbp-0x18]
  42e505:	movzx  eax,BYTE PTR [rax+0x35]
  42e509:	test   al,al
  42e50b:	je     42e589 <flatcc_json_printer_uint8_field@@Base+0xf2>
  42e50d:	movzx  eax,BYTE PTR [rbp-0x34]
  42e511:	mov    BYTE PTR [rbp-0x9],al
  42e514:	mov    rax,QWORD PTR [rbp-0x20]
  42e518:	mov    eax,DWORD PTR [rax+0x18]
  42e51b:	lea    ecx,[rax+0x1]
  42e51e:	mov    rdx,QWORD PTR [rbp-0x20]
  42e522:	mov    DWORD PTR [rdx+0x18],ecx
  42e525:	test   eax,eax
  42e527:	je     42e540 <flatcc_json_printer_uint8_field@@Base+0xa9>
  42e529:	mov    rax,QWORD PTR [rbp-0x18]
  42e52d:	mov    rax,QWORD PTR [rax+0x28]
  42e531:	lea    rcx,[rax+0x1]
  42e535:	mov    rdx,QWORD PTR [rbp-0x18]
  42e539:	mov    QWORD PTR [rdx+0x28],rcx
  42e53d:	mov    BYTE PTR [rax],0x2c
  42e540:	mov    eax,DWORD PTR [rbp-0x28]
  42e543:	movsxd rdx,eax
  42e546:	mov    rcx,QWORD PTR [rbp-0x30]
  42e54a:	mov    rax,QWORD PTR [rbp-0x18]
  42e54e:	mov    rsi,rcx
  42e551:	mov    rdi,rax
  42e554:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e559:	mov    rax,QWORD PTR [rbp-0x18]
  42e55d:	mov    rdx,QWORD PTR [rax+0x28]
  42e561:	movzx  eax,BYTE PTR [rbp-0x9]
  42e565:	mov    rsi,rdx
  42e568:	mov    edi,eax
  42e56a:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42e56f:	mov    ecx,eax
  42e571:	mov    rax,QWORD PTR [rbp-0x18]
  42e575:	mov    rdx,QWORD PTR [rax+0x28]
  42e579:	movsxd rax,ecx
  42e57c:	add    rdx,rax
  42e57f:	mov    rax,QWORD PTR [rbp-0x18]
  42e583:	mov    QWORD PTR [rax+0x28],rdx
  42e587:	jmp    42e58a <flatcc_json_printer_uint8_field@@Base+0xf3>
  42e589:	nop
  42e58a:	leave  
  42e58b:	ret    

000000000042e58c <flatcc_json_printer_uint16_field@@Base>:
  42e58c:	endbr64 
  42e590:	push   rbp
  42e591:	mov    rbp,rsp
  42e594:	sub    rsp,0x40
  42e598:	mov    QWORD PTR [rbp-0x18],rdi
  42e59c:	mov    QWORD PTR [rbp-0x20],rsi
  42e5a0:	mov    DWORD PTR [rbp-0x24],edx
  42e5a3:	mov    QWORD PTR [rbp-0x30],rcx
  42e5a7:	mov    DWORD PTR [rbp-0x28],r8d
  42e5ab:	mov    eax,r9d
  42e5ae:	mov    WORD PTR [rbp-0x34],ax
  42e5b2:	mov    edx,DWORD PTR [rbp-0x24]
  42e5b5:	mov    rax,QWORD PTR [rbp-0x20]
  42e5b9:	mov    esi,edx
  42e5bb:	mov    rdi,rax
  42e5be:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e5c3:	mov    QWORD PTR [rbp-0x8],rax
  42e5c7:	cmp    QWORD PTR [rbp-0x8],0x0
  42e5cc:	je     42e5f9 <flatcc_json_printer_uint16_field@@Base+0x6d>
  42e5ce:	mov    rax,QWORD PTR [rbp-0x8]
  42e5d2:	mov    rdi,rax
  42e5d5:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  42e5da:	mov    WORD PTR [rbp-0xa],ax
  42e5de:	movzx  eax,WORD PTR [rbp-0xa]
  42e5e2:	cmp    ax,WORD PTR [rbp-0x34]
  42e5e6:	jne    42e60d <flatcc_json_printer_uint16_field@@Base+0x81>
  42e5e8:	mov    rax,QWORD PTR [rbp-0x18]
  42e5ec:	movzx  eax,BYTE PTR [rax+0x34]
  42e5f0:	test   al,al
  42e5f2:	je     42e60d <flatcc_json_printer_uint16_field@@Base+0x81>
  42e5f4:	jmp    42e683 <flatcc_json_printer_uint16_field@@Base+0xf7>
  42e5f9:	mov    rax,QWORD PTR [rbp-0x18]
  42e5fd:	movzx  eax,BYTE PTR [rax+0x35]
  42e601:	test   al,al
  42e603:	je     42e682 <flatcc_json_printer_uint16_field@@Base+0xf6>
  42e605:	movzx  eax,WORD PTR [rbp-0x34]
  42e609:	mov    WORD PTR [rbp-0xa],ax
  42e60d:	mov    rax,QWORD PTR [rbp-0x20]
  42e611:	mov    eax,DWORD PTR [rax+0x18]
  42e614:	lea    ecx,[rax+0x1]
  42e617:	mov    rdx,QWORD PTR [rbp-0x20]
  42e61b:	mov    DWORD PTR [rdx+0x18],ecx
  42e61e:	test   eax,eax
  42e620:	je     42e639 <flatcc_json_printer_uint16_field@@Base+0xad>
  42e622:	mov    rax,QWORD PTR [rbp-0x18]
  42e626:	mov    rax,QWORD PTR [rax+0x28]
  42e62a:	lea    rcx,[rax+0x1]
  42e62e:	mov    rdx,QWORD PTR [rbp-0x18]
  42e632:	mov    QWORD PTR [rdx+0x28],rcx
  42e636:	mov    BYTE PTR [rax],0x2c
  42e639:	mov    eax,DWORD PTR [rbp-0x28]
  42e63c:	movsxd rdx,eax
  42e63f:	mov    rcx,QWORD PTR [rbp-0x30]
  42e643:	mov    rax,QWORD PTR [rbp-0x18]
  42e647:	mov    rsi,rcx
  42e64a:	mov    rdi,rax
  42e64d:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e652:	mov    rax,QWORD PTR [rbp-0x18]
  42e656:	mov    rdx,QWORD PTR [rax+0x28]
  42e65a:	movzx  eax,WORD PTR [rbp-0xa]
  42e65e:	mov    rsi,rdx
  42e661:	mov    edi,eax
  42e663:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42e668:	mov    ecx,eax
  42e66a:	mov    rax,QWORD PTR [rbp-0x18]
  42e66e:	mov    rdx,QWORD PTR [rax+0x28]
  42e672:	movsxd rax,ecx
  42e675:	add    rdx,rax
  42e678:	mov    rax,QWORD PTR [rbp-0x18]
  42e67c:	mov    QWORD PTR [rax+0x28],rdx
  42e680:	jmp    42e683 <flatcc_json_printer_uint16_field@@Base+0xf7>
  42e682:	nop
  42e683:	leave  
  42e684:	ret    

000000000042e685 <flatcc_json_printer_uint32_field@@Base>:
  42e685:	endbr64 
  42e689:	push   rbp
  42e68a:	mov    rbp,rsp
  42e68d:	sub    rsp,0x40
  42e691:	mov    QWORD PTR [rbp-0x18],rdi
  42e695:	mov    QWORD PTR [rbp-0x20],rsi
  42e699:	mov    DWORD PTR [rbp-0x24],edx
  42e69c:	mov    QWORD PTR [rbp-0x30],rcx
  42e6a0:	mov    DWORD PTR [rbp-0x28],r8d
  42e6a4:	mov    DWORD PTR [rbp-0x34],r9d
  42e6a8:	mov    edx,DWORD PTR [rbp-0x24]
  42e6ab:	mov    rax,QWORD PTR [rbp-0x20]
  42e6af:	mov    esi,edx
  42e6b1:	mov    rdi,rax
  42e6b4:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e6b9:	mov    QWORD PTR [rbp-0x8],rax
  42e6bd:	cmp    QWORD PTR [rbp-0x8],0x0
  42e6c2:	je     42e6ec <flatcc_json_printer_uint32_field@@Base+0x67>
  42e6c4:	mov    rax,QWORD PTR [rbp-0x8]
  42e6c8:	mov    rdi,rax
  42e6cb:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  42e6d0:	mov    DWORD PTR [rbp-0xc],eax
  42e6d3:	mov    eax,DWORD PTR [rbp-0xc]
  42e6d6:	cmp    eax,DWORD PTR [rbp-0x34]
  42e6d9:	jne    42e6fe <flatcc_json_printer_uint32_field@@Base+0x79>
  42e6db:	mov    rax,QWORD PTR [rbp-0x18]
  42e6df:	movzx  eax,BYTE PTR [rax+0x34]
  42e6e3:	test   al,al
  42e6e5:	je     42e6fe <flatcc_json_printer_uint32_field@@Base+0x79>
  42e6e7:	jmp    42e773 <flatcc_json_printer_uint32_field@@Base+0xee>
  42e6ec:	mov    rax,QWORD PTR [rbp-0x18]
  42e6f0:	movzx  eax,BYTE PTR [rax+0x35]
  42e6f4:	test   al,al
  42e6f6:	je     42e772 <flatcc_json_printer_uint32_field@@Base+0xed>
  42e6f8:	mov    eax,DWORD PTR [rbp-0x34]
  42e6fb:	mov    DWORD PTR [rbp-0xc],eax
  42e6fe:	mov    rax,QWORD PTR [rbp-0x20]
  42e702:	mov    eax,DWORD PTR [rax+0x18]
  42e705:	lea    ecx,[rax+0x1]
  42e708:	mov    rdx,QWORD PTR [rbp-0x20]
  42e70c:	mov    DWORD PTR [rdx+0x18],ecx
  42e70f:	test   eax,eax
  42e711:	je     42e72a <flatcc_json_printer_uint32_field@@Base+0xa5>
  42e713:	mov    rax,QWORD PTR [rbp-0x18]
  42e717:	mov    rax,QWORD PTR [rax+0x28]
  42e71b:	lea    rcx,[rax+0x1]
  42e71f:	mov    rdx,QWORD PTR [rbp-0x18]
  42e723:	mov    QWORD PTR [rdx+0x28],rcx
  42e727:	mov    BYTE PTR [rax],0x2c
  42e72a:	mov    eax,DWORD PTR [rbp-0x28]
  42e72d:	movsxd rdx,eax
  42e730:	mov    rcx,QWORD PTR [rbp-0x30]
  42e734:	mov    rax,QWORD PTR [rbp-0x18]
  42e738:	mov    rsi,rcx
  42e73b:	mov    rdi,rax
  42e73e:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e743:	mov    rax,QWORD PTR [rbp-0x18]
  42e747:	mov    rdx,QWORD PTR [rax+0x28]
  42e74b:	mov    eax,DWORD PTR [rbp-0xc]
  42e74e:	mov    rsi,rdx
  42e751:	mov    edi,eax
  42e753:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42e758:	mov    ecx,eax
  42e75a:	mov    rax,QWORD PTR [rbp-0x18]
  42e75e:	mov    rdx,QWORD PTR [rax+0x28]
  42e762:	movsxd rax,ecx
  42e765:	add    rdx,rax
  42e768:	mov    rax,QWORD PTR [rbp-0x18]
  42e76c:	mov    QWORD PTR [rax+0x28],rdx
  42e770:	jmp    42e773 <flatcc_json_printer_uint32_field@@Base+0xee>
  42e772:	nop
  42e773:	leave  
  42e774:	ret    

000000000042e775 <flatcc_json_printer_uint64_field@@Base>:
  42e775:	endbr64 
  42e779:	push   rbp
  42e77a:	mov    rbp,rsp
  42e77d:	sub    rsp,0x40
  42e781:	mov    QWORD PTR [rbp-0x18],rdi
  42e785:	mov    QWORD PTR [rbp-0x20],rsi
  42e789:	mov    DWORD PTR [rbp-0x24],edx
  42e78c:	mov    QWORD PTR [rbp-0x30],rcx
  42e790:	mov    DWORD PTR [rbp-0x28],r8d
  42e794:	mov    QWORD PTR [rbp-0x38],r9
  42e798:	mov    edx,DWORD PTR [rbp-0x24]
  42e79b:	mov    rax,QWORD PTR [rbp-0x20]
  42e79f:	mov    esi,edx
  42e7a1:	mov    rdi,rax
  42e7a4:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e7a9:	mov    QWORD PTR [rbp-0x8],rax
  42e7ad:	cmp    QWORD PTR [rbp-0x8],0x0
  42e7b2:	je     42e7df <flatcc_json_printer_uint64_field@@Base+0x6a>
  42e7b4:	mov    rax,QWORD PTR [rbp-0x8]
  42e7b8:	mov    rdi,rax
  42e7bb:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  42e7c0:	mov    QWORD PTR [rbp-0x10],rax
  42e7c4:	mov    rax,QWORD PTR [rbp-0x10]
  42e7c8:	cmp    rax,QWORD PTR [rbp-0x38]
  42e7cc:	jne    42e7f3 <flatcc_json_printer_uint64_field@@Base+0x7e>
  42e7ce:	mov    rax,QWORD PTR [rbp-0x18]
  42e7d2:	movzx  eax,BYTE PTR [rax+0x34]
  42e7d6:	test   al,al
  42e7d8:	je     42e7f3 <flatcc_json_printer_uint64_field@@Base+0x7e>
  42e7da:	jmp    42e86a <flatcc_json_printer_uint64_field@@Base+0xf5>
  42e7df:	mov    rax,QWORD PTR [rbp-0x18]
  42e7e3:	movzx  eax,BYTE PTR [rax+0x35]
  42e7e7:	test   al,al
  42e7e9:	je     42e869 <flatcc_json_printer_uint64_field@@Base+0xf4>
  42e7eb:	mov    rax,QWORD PTR [rbp-0x38]
  42e7ef:	mov    QWORD PTR [rbp-0x10],rax
  42e7f3:	mov    rax,QWORD PTR [rbp-0x20]
  42e7f7:	mov    eax,DWORD PTR [rax+0x18]
  42e7fa:	lea    ecx,[rax+0x1]
  42e7fd:	mov    rdx,QWORD PTR [rbp-0x20]
  42e801:	mov    DWORD PTR [rdx+0x18],ecx
  42e804:	test   eax,eax
  42e806:	je     42e81f <flatcc_json_printer_uint64_field@@Base+0xaa>
  42e808:	mov    rax,QWORD PTR [rbp-0x18]
  42e80c:	mov    rax,QWORD PTR [rax+0x28]
  42e810:	lea    rcx,[rax+0x1]
  42e814:	mov    rdx,QWORD PTR [rbp-0x18]
  42e818:	mov    QWORD PTR [rdx+0x28],rcx
  42e81c:	mov    BYTE PTR [rax],0x2c
  42e81f:	mov    eax,DWORD PTR [rbp-0x28]
  42e822:	movsxd rdx,eax
  42e825:	mov    rcx,QWORD PTR [rbp-0x30]
  42e829:	mov    rax,QWORD PTR [rbp-0x18]
  42e82d:	mov    rsi,rcx
  42e830:	mov    rdi,rax
  42e833:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e838:	mov    rax,QWORD PTR [rbp-0x18]
  42e83c:	mov    rdx,QWORD PTR [rax+0x28]
  42e840:	mov    rax,QWORD PTR [rbp-0x10]
  42e844:	mov    rsi,rdx
  42e847:	mov    rdi,rax
  42e84a:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42e84f:	mov    ecx,eax
  42e851:	mov    rax,QWORD PTR [rbp-0x18]
  42e855:	mov    rdx,QWORD PTR [rax+0x28]
  42e859:	movsxd rax,ecx
  42e85c:	add    rdx,rax
  42e85f:	mov    rax,QWORD PTR [rbp-0x18]
  42e863:	mov    QWORD PTR [rax+0x28],rdx
  42e867:	jmp    42e86a <flatcc_json_printer_uint64_field@@Base+0xf5>
  42e869:	nop
  42e86a:	leave  
  42e86b:	ret    

000000000042e86c <flatcc_json_printer_int8_field@@Base>:
  42e86c:	endbr64 
  42e870:	push   rbp
  42e871:	mov    rbp,rsp
  42e874:	sub    rsp,0x40
  42e878:	mov    QWORD PTR [rbp-0x18],rdi
  42e87c:	mov    QWORD PTR [rbp-0x20],rsi
  42e880:	mov    DWORD PTR [rbp-0x24],edx
  42e883:	mov    QWORD PTR [rbp-0x30],rcx
  42e887:	mov    DWORD PTR [rbp-0x28],r8d
  42e88b:	mov    eax,r9d
  42e88e:	mov    BYTE PTR [rbp-0x34],al
  42e891:	mov    edx,DWORD PTR [rbp-0x24]
  42e894:	mov    rax,QWORD PTR [rbp-0x20]
  42e898:	mov    esi,edx
  42e89a:	mov    rdi,rax
  42e89d:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e8a2:	mov    QWORD PTR [rbp-0x8],rax
  42e8a6:	cmp    QWORD PTR [rbp-0x8],0x0
  42e8ab:	je     42e8d6 <flatcc_json_printer_int8_field@@Base+0x6a>
  42e8ad:	mov    rax,QWORD PTR [rbp-0x8]
  42e8b1:	mov    rdi,rax
  42e8b4:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  42e8b9:	mov    BYTE PTR [rbp-0x9],al
  42e8bc:	movzx  eax,BYTE PTR [rbp-0x9]
  42e8c0:	cmp    al,BYTE PTR [rbp-0x34]
  42e8c3:	jne    42e8e9 <flatcc_json_printer_int8_field@@Base+0x7d>
  42e8c5:	mov    rax,QWORD PTR [rbp-0x18]
  42e8c9:	movzx  eax,BYTE PTR [rax+0x34]
  42e8cd:	test   al,al
  42e8cf:	je     42e8e9 <flatcc_json_printer_int8_field@@Base+0x7d>
  42e8d1:	jmp    42e95f <flatcc_json_printer_int8_field@@Base+0xf3>
  42e8d6:	mov    rax,QWORD PTR [rbp-0x18]
  42e8da:	movzx  eax,BYTE PTR [rax+0x35]
  42e8de:	test   al,al
  42e8e0:	je     42e95e <flatcc_json_printer_int8_field@@Base+0xf2>
  42e8e2:	movzx  eax,BYTE PTR [rbp-0x34]
  42e8e6:	mov    BYTE PTR [rbp-0x9],al
  42e8e9:	mov    rax,QWORD PTR [rbp-0x20]
  42e8ed:	mov    eax,DWORD PTR [rax+0x18]
  42e8f0:	lea    ecx,[rax+0x1]
  42e8f3:	mov    rdx,QWORD PTR [rbp-0x20]
  42e8f7:	mov    DWORD PTR [rdx+0x18],ecx
  42e8fa:	test   eax,eax
  42e8fc:	je     42e915 <flatcc_json_printer_int8_field@@Base+0xa9>
  42e8fe:	mov    rax,QWORD PTR [rbp-0x18]
  42e902:	mov    rax,QWORD PTR [rax+0x28]
  42e906:	lea    rcx,[rax+0x1]
  42e90a:	mov    rdx,QWORD PTR [rbp-0x18]
  42e90e:	mov    QWORD PTR [rdx+0x28],rcx
  42e912:	mov    BYTE PTR [rax],0x2c
  42e915:	mov    eax,DWORD PTR [rbp-0x28]
  42e918:	movsxd rdx,eax
  42e91b:	mov    rcx,QWORD PTR [rbp-0x30]
  42e91f:	mov    rax,QWORD PTR [rbp-0x18]
  42e923:	mov    rsi,rcx
  42e926:	mov    rdi,rax
  42e929:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42e92e:	mov    rax,QWORD PTR [rbp-0x18]
  42e932:	mov    rdx,QWORD PTR [rax+0x28]
  42e936:	movsx  eax,BYTE PTR [rbp-0x9]
  42e93a:	mov    rsi,rdx
  42e93d:	mov    edi,eax
  42e93f:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42e944:	mov    ecx,eax
  42e946:	mov    rax,QWORD PTR [rbp-0x18]
  42e94a:	mov    rdx,QWORD PTR [rax+0x28]
  42e94e:	movsxd rax,ecx
  42e951:	add    rdx,rax
  42e954:	mov    rax,QWORD PTR [rbp-0x18]
  42e958:	mov    QWORD PTR [rax+0x28],rdx
  42e95c:	jmp    42e95f <flatcc_json_printer_int8_field@@Base+0xf3>
  42e95e:	nop
  42e95f:	leave  
  42e960:	ret    

000000000042e961 <flatcc_json_printer_int16_field@@Base>:
  42e961:	endbr64 
  42e965:	push   rbp
  42e966:	mov    rbp,rsp
  42e969:	sub    rsp,0x40
  42e96d:	mov    QWORD PTR [rbp-0x18],rdi
  42e971:	mov    QWORD PTR [rbp-0x20],rsi
  42e975:	mov    DWORD PTR [rbp-0x24],edx
  42e978:	mov    QWORD PTR [rbp-0x30],rcx
  42e97c:	mov    DWORD PTR [rbp-0x28],r8d
  42e980:	mov    eax,r9d
  42e983:	mov    WORD PTR [rbp-0x34],ax
  42e987:	mov    edx,DWORD PTR [rbp-0x24]
  42e98a:	mov    rax,QWORD PTR [rbp-0x20]
  42e98e:	mov    esi,edx
  42e990:	mov    rdi,rax
  42e993:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42e998:	mov    QWORD PTR [rbp-0x8],rax
  42e99c:	cmp    QWORD PTR [rbp-0x8],0x0
  42e9a1:	je     42e9ce <flatcc_json_printer_int16_field@@Base+0x6d>
  42e9a3:	mov    rax,QWORD PTR [rbp-0x8]
  42e9a7:	mov    rdi,rax
  42e9aa:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  42e9af:	mov    WORD PTR [rbp-0xa],ax
  42e9b3:	movzx  eax,WORD PTR [rbp-0xa]
  42e9b7:	cmp    ax,WORD PTR [rbp-0x34]
  42e9bb:	jne    42e9e2 <flatcc_json_printer_int16_field@@Base+0x81>
  42e9bd:	mov    rax,QWORD PTR [rbp-0x18]
  42e9c1:	movzx  eax,BYTE PTR [rax+0x34]
  42e9c5:	test   al,al
  42e9c7:	je     42e9e2 <flatcc_json_printer_int16_field@@Base+0x81>
  42e9c9:	jmp    42ea58 <flatcc_json_printer_int16_field@@Base+0xf7>
  42e9ce:	mov    rax,QWORD PTR [rbp-0x18]
  42e9d2:	movzx  eax,BYTE PTR [rax+0x35]
  42e9d6:	test   al,al
  42e9d8:	je     42ea57 <flatcc_json_printer_int16_field@@Base+0xf6>
  42e9da:	movzx  eax,WORD PTR [rbp-0x34]
  42e9de:	mov    WORD PTR [rbp-0xa],ax
  42e9e2:	mov    rax,QWORD PTR [rbp-0x20]
  42e9e6:	mov    eax,DWORD PTR [rax+0x18]
  42e9e9:	lea    ecx,[rax+0x1]
  42e9ec:	mov    rdx,QWORD PTR [rbp-0x20]
  42e9f0:	mov    DWORD PTR [rdx+0x18],ecx
  42e9f3:	test   eax,eax
  42e9f5:	je     42ea0e <flatcc_json_printer_int16_field@@Base+0xad>
  42e9f7:	mov    rax,QWORD PTR [rbp-0x18]
  42e9fb:	mov    rax,QWORD PTR [rax+0x28]
  42e9ff:	lea    rcx,[rax+0x1]
  42ea03:	mov    rdx,QWORD PTR [rbp-0x18]
  42ea07:	mov    QWORD PTR [rdx+0x28],rcx
  42ea0b:	mov    BYTE PTR [rax],0x2c
  42ea0e:	mov    eax,DWORD PTR [rbp-0x28]
  42ea11:	movsxd rdx,eax
  42ea14:	mov    rcx,QWORD PTR [rbp-0x30]
  42ea18:	mov    rax,QWORD PTR [rbp-0x18]
  42ea1c:	mov    rsi,rcx
  42ea1f:	mov    rdi,rax
  42ea22:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ea27:	mov    rax,QWORD PTR [rbp-0x18]
  42ea2b:	mov    rdx,QWORD PTR [rax+0x28]
  42ea2f:	movsx  eax,WORD PTR [rbp-0xa]
  42ea33:	mov    rsi,rdx
  42ea36:	mov    edi,eax
  42ea38:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42ea3d:	mov    ecx,eax
  42ea3f:	mov    rax,QWORD PTR [rbp-0x18]
  42ea43:	mov    rdx,QWORD PTR [rax+0x28]
  42ea47:	movsxd rax,ecx
  42ea4a:	add    rdx,rax
  42ea4d:	mov    rax,QWORD PTR [rbp-0x18]
  42ea51:	mov    QWORD PTR [rax+0x28],rdx
  42ea55:	jmp    42ea58 <flatcc_json_printer_int16_field@@Base+0xf7>
  42ea57:	nop
  42ea58:	leave  
  42ea59:	ret    

000000000042ea5a <flatcc_json_printer_int32_field@@Base>:
  42ea5a:	endbr64 
  42ea5e:	push   rbp
  42ea5f:	mov    rbp,rsp
  42ea62:	sub    rsp,0x40
  42ea66:	mov    QWORD PTR [rbp-0x18],rdi
  42ea6a:	mov    QWORD PTR [rbp-0x20],rsi
  42ea6e:	mov    DWORD PTR [rbp-0x24],edx
  42ea71:	mov    QWORD PTR [rbp-0x30],rcx
  42ea75:	mov    DWORD PTR [rbp-0x28],r8d
  42ea79:	mov    DWORD PTR [rbp-0x34],r9d
  42ea7d:	mov    edx,DWORD PTR [rbp-0x24]
  42ea80:	mov    rax,QWORD PTR [rbp-0x20]
  42ea84:	mov    esi,edx
  42ea86:	mov    rdi,rax
  42ea89:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42ea8e:	mov    QWORD PTR [rbp-0x8],rax
  42ea92:	cmp    QWORD PTR [rbp-0x8],0x0
  42ea97:	je     42eac1 <flatcc_json_printer_int32_field@@Base+0x67>
  42ea99:	mov    rax,QWORD PTR [rbp-0x8]
  42ea9d:	mov    rdi,rax
  42eaa0:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  42eaa5:	mov    DWORD PTR [rbp-0xc],eax
  42eaa8:	mov    eax,DWORD PTR [rbp-0xc]
  42eaab:	cmp    eax,DWORD PTR [rbp-0x34]
  42eaae:	jne    42ead3 <flatcc_json_printer_int32_field@@Base+0x79>
  42eab0:	mov    rax,QWORD PTR [rbp-0x18]
  42eab4:	movzx  eax,BYTE PTR [rax+0x34]
  42eab8:	test   al,al
  42eaba:	je     42ead3 <flatcc_json_printer_int32_field@@Base+0x79>
  42eabc:	jmp    42eb48 <flatcc_json_printer_int32_field@@Base+0xee>
  42eac1:	mov    rax,QWORD PTR [rbp-0x18]
  42eac5:	movzx  eax,BYTE PTR [rax+0x35]
  42eac9:	test   al,al
  42eacb:	je     42eb47 <flatcc_json_printer_int32_field@@Base+0xed>
  42eacd:	mov    eax,DWORD PTR [rbp-0x34]
  42ead0:	mov    DWORD PTR [rbp-0xc],eax
  42ead3:	mov    rax,QWORD PTR [rbp-0x20]
  42ead7:	mov    eax,DWORD PTR [rax+0x18]
  42eada:	lea    ecx,[rax+0x1]
  42eadd:	mov    rdx,QWORD PTR [rbp-0x20]
  42eae1:	mov    DWORD PTR [rdx+0x18],ecx
  42eae4:	test   eax,eax
  42eae6:	je     42eaff <flatcc_json_printer_int32_field@@Base+0xa5>
  42eae8:	mov    rax,QWORD PTR [rbp-0x18]
  42eaec:	mov    rax,QWORD PTR [rax+0x28]
  42eaf0:	lea    rcx,[rax+0x1]
  42eaf4:	mov    rdx,QWORD PTR [rbp-0x18]
  42eaf8:	mov    QWORD PTR [rdx+0x28],rcx
  42eafc:	mov    BYTE PTR [rax],0x2c
  42eaff:	mov    eax,DWORD PTR [rbp-0x28]
  42eb02:	movsxd rdx,eax
  42eb05:	mov    rcx,QWORD PTR [rbp-0x30]
  42eb09:	mov    rax,QWORD PTR [rbp-0x18]
  42eb0d:	mov    rsi,rcx
  42eb10:	mov    rdi,rax
  42eb13:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42eb18:	mov    rax,QWORD PTR [rbp-0x18]
  42eb1c:	mov    rdx,QWORD PTR [rax+0x28]
  42eb20:	mov    eax,DWORD PTR [rbp-0xc]
  42eb23:	mov    rsi,rdx
  42eb26:	mov    edi,eax
  42eb28:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42eb2d:	mov    ecx,eax
  42eb2f:	mov    rax,QWORD PTR [rbp-0x18]
  42eb33:	mov    rdx,QWORD PTR [rax+0x28]
  42eb37:	movsxd rax,ecx
  42eb3a:	add    rdx,rax
  42eb3d:	mov    rax,QWORD PTR [rbp-0x18]
  42eb41:	mov    QWORD PTR [rax+0x28],rdx
  42eb45:	jmp    42eb48 <flatcc_json_printer_int32_field@@Base+0xee>
  42eb47:	nop
  42eb48:	leave  
  42eb49:	ret    

000000000042eb4a <flatcc_json_printer_int64_field@@Base>:
  42eb4a:	endbr64 
  42eb4e:	push   rbp
  42eb4f:	mov    rbp,rsp
  42eb52:	sub    rsp,0x40
  42eb56:	mov    QWORD PTR [rbp-0x18],rdi
  42eb5a:	mov    QWORD PTR [rbp-0x20],rsi
  42eb5e:	mov    DWORD PTR [rbp-0x24],edx
  42eb61:	mov    QWORD PTR [rbp-0x30],rcx
  42eb65:	mov    DWORD PTR [rbp-0x28],r8d
  42eb69:	mov    QWORD PTR [rbp-0x38],r9
  42eb6d:	mov    edx,DWORD PTR [rbp-0x24]
  42eb70:	mov    rax,QWORD PTR [rbp-0x20]
  42eb74:	mov    esi,edx
  42eb76:	mov    rdi,rax
  42eb79:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42eb7e:	mov    QWORD PTR [rbp-0x8],rax
  42eb82:	cmp    QWORD PTR [rbp-0x8],0x0
  42eb87:	je     42ebb4 <flatcc_json_printer_int64_field@@Base+0x6a>
  42eb89:	mov    rax,QWORD PTR [rbp-0x8]
  42eb8d:	mov    rdi,rax
  42eb90:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  42eb95:	mov    QWORD PTR [rbp-0x10],rax
  42eb99:	mov    rax,QWORD PTR [rbp-0x10]
  42eb9d:	cmp    rax,QWORD PTR [rbp-0x38]
  42eba1:	jne    42ebc8 <flatcc_json_printer_int64_field@@Base+0x7e>
  42eba3:	mov    rax,QWORD PTR [rbp-0x18]
  42eba7:	movzx  eax,BYTE PTR [rax+0x34]
  42ebab:	test   al,al
  42ebad:	je     42ebc8 <flatcc_json_printer_int64_field@@Base+0x7e>
  42ebaf:	jmp    42ec3f <flatcc_json_printer_int64_field@@Base+0xf5>
  42ebb4:	mov    rax,QWORD PTR [rbp-0x18]
  42ebb8:	movzx  eax,BYTE PTR [rax+0x35]
  42ebbc:	test   al,al
  42ebbe:	je     42ec3e <flatcc_json_printer_int64_field@@Base+0xf4>
  42ebc0:	mov    rax,QWORD PTR [rbp-0x38]
  42ebc4:	mov    QWORD PTR [rbp-0x10],rax
  42ebc8:	mov    rax,QWORD PTR [rbp-0x20]
  42ebcc:	mov    eax,DWORD PTR [rax+0x18]
  42ebcf:	lea    ecx,[rax+0x1]
  42ebd2:	mov    rdx,QWORD PTR [rbp-0x20]
  42ebd6:	mov    DWORD PTR [rdx+0x18],ecx
  42ebd9:	test   eax,eax
  42ebdb:	je     42ebf4 <flatcc_json_printer_int64_field@@Base+0xaa>
  42ebdd:	mov    rax,QWORD PTR [rbp-0x18]
  42ebe1:	mov    rax,QWORD PTR [rax+0x28]
  42ebe5:	lea    rcx,[rax+0x1]
  42ebe9:	mov    rdx,QWORD PTR [rbp-0x18]
  42ebed:	mov    QWORD PTR [rdx+0x28],rcx
  42ebf1:	mov    BYTE PTR [rax],0x2c
  42ebf4:	mov    eax,DWORD PTR [rbp-0x28]
  42ebf7:	movsxd rdx,eax
  42ebfa:	mov    rcx,QWORD PTR [rbp-0x30]
  42ebfe:	mov    rax,QWORD PTR [rbp-0x18]
  42ec02:	mov    rsi,rcx
  42ec05:	mov    rdi,rax
  42ec08:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ec0d:	mov    rax,QWORD PTR [rbp-0x18]
  42ec11:	mov    rdx,QWORD PTR [rax+0x28]
  42ec15:	mov    rax,QWORD PTR [rbp-0x10]
  42ec19:	mov    rsi,rdx
  42ec1c:	mov    rdi,rax
  42ec1f:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42ec24:	mov    ecx,eax
  42ec26:	mov    rax,QWORD PTR [rbp-0x18]
  42ec2a:	mov    rdx,QWORD PTR [rax+0x28]
  42ec2e:	movsxd rax,ecx
  42ec31:	add    rdx,rax
  42ec34:	mov    rax,QWORD PTR [rbp-0x18]
  42ec38:	mov    QWORD PTR [rax+0x28],rdx
  42ec3c:	jmp    42ec3f <flatcc_json_printer_int64_field@@Base+0xf5>
  42ec3e:	nop
  42ec3f:	leave  
  42ec40:	ret    

000000000042ec41 <flatcc_json_printer_bool_field@@Base>:
  42ec41:	endbr64 
  42ec45:	push   rbp
  42ec46:	mov    rbp,rsp
  42ec49:	sub    rsp,0x40
  42ec4d:	mov    QWORD PTR [rbp-0x18],rdi
  42ec51:	mov    QWORD PTR [rbp-0x20],rsi
  42ec55:	mov    DWORD PTR [rbp-0x24],edx
  42ec58:	mov    QWORD PTR [rbp-0x30],rcx
  42ec5c:	mov    DWORD PTR [rbp-0x28],r8d
  42ec60:	mov    eax,r9d
  42ec63:	mov    BYTE PTR [rbp-0x34],al
  42ec66:	mov    edx,DWORD PTR [rbp-0x24]
  42ec69:	mov    rax,QWORD PTR [rbp-0x20]
  42ec6d:	mov    esi,edx
  42ec6f:	mov    rdi,rax
  42ec72:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42ec77:	mov    QWORD PTR [rbp-0x8],rax
  42ec7b:	cmp    QWORD PTR [rbp-0x8],0x0
  42ec80:	je     42ecab <flatcc_json_printer_bool_field@@Base+0x6a>
  42ec82:	mov    rax,QWORD PTR [rbp-0x8]
  42ec86:	mov    rdi,rax
  42ec89:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  42ec8e:	mov    BYTE PTR [rbp-0x9],al
  42ec91:	movzx  eax,BYTE PTR [rbp-0x9]
  42ec95:	cmp    al,BYTE PTR [rbp-0x34]
  42ec98:	jne    42ecbe <flatcc_json_printer_bool_field@@Base+0x7d>
  42ec9a:	mov    rax,QWORD PTR [rbp-0x18]
  42ec9e:	movzx  eax,BYTE PTR [rax+0x34]
  42eca2:	test   al,al
  42eca4:	je     42ecbe <flatcc_json_printer_bool_field@@Base+0x7d>
  42eca6:	jmp    42ed34 <flatcc_json_printer_bool_field@@Base+0xf3>
  42ecab:	mov    rax,QWORD PTR [rbp-0x18]
  42ecaf:	movzx  eax,BYTE PTR [rax+0x35]
  42ecb3:	test   al,al
  42ecb5:	je     42ed33 <flatcc_json_printer_bool_field@@Base+0xf2>
  42ecb7:	movzx  eax,BYTE PTR [rbp-0x34]
  42ecbb:	mov    BYTE PTR [rbp-0x9],al
  42ecbe:	mov    rax,QWORD PTR [rbp-0x20]
  42ecc2:	mov    eax,DWORD PTR [rax+0x18]
  42ecc5:	lea    ecx,[rax+0x1]
  42ecc8:	mov    rdx,QWORD PTR [rbp-0x20]
  42eccc:	mov    DWORD PTR [rdx+0x18],ecx
  42eccf:	test   eax,eax
  42ecd1:	je     42ecea <flatcc_json_printer_bool_field@@Base+0xa9>
  42ecd3:	mov    rax,QWORD PTR [rbp-0x18]
  42ecd7:	mov    rax,QWORD PTR [rax+0x28]
  42ecdb:	lea    rcx,[rax+0x1]
  42ecdf:	mov    rdx,QWORD PTR [rbp-0x18]
  42ece3:	mov    QWORD PTR [rdx+0x28],rcx
  42ece7:	mov    BYTE PTR [rax],0x2c
  42ecea:	mov    eax,DWORD PTR [rbp-0x28]
  42eced:	movsxd rdx,eax
  42ecf0:	mov    rcx,QWORD PTR [rbp-0x30]
  42ecf4:	mov    rax,QWORD PTR [rbp-0x18]
  42ecf8:	mov    rsi,rcx
  42ecfb:	mov    rdi,rax
  42ecfe:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ed03:	mov    rax,QWORD PTR [rbp-0x18]
  42ed07:	mov    rdx,QWORD PTR [rax+0x28]
  42ed0b:	movzx  eax,BYTE PTR [rbp-0x9]
  42ed0f:	mov    rsi,rdx
  42ed12:	mov    edi,eax
  42ed14:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  42ed19:	mov    ecx,eax
  42ed1b:	mov    rax,QWORD PTR [rbp-0x18]
  42ed1f:	mov    rdx,QWORD PTR [rax+0x28]
  42ed23:	movsxd rax,ecx
  42ed26:	add    rdx,rax
  42ed29:	mov    rax,QWORD PTR [rbp-0x18]
  42ed2d:	mov    QWORD PTR [rax+0x28],rdx
  42ed31:	jmp    42ed34 <flatcc_json_printer_bool_field@@Base+0xf3>
  42ed33:	nop
  42ed34:	leave  
  42ed35:	ret    

000000000042ed36 <flatcc_json_printer_float_field@@Base>:
  42ed36:	endbr64 
  42ed3a:	push   rbp
  42ed3b:	mov    rbp,rsp
  42ed3e:	sub    rsp,0x40
  42ed42:	mov    QWORD PTR [rbp-0x18],rdi
  42ed46:	mov    QWORD PTR [rbp-0x20],rsi
  42ed4a:	mov    DWORD PTR [rbp-0x24],edx
  42ed4d:	mov    QWORD PTR [rbp-0x30],rcx
  42ed51:	mov    DWORD PTR [rbp-0x28],r8d
  42ed55:	vmovss DWORD PTR [rbp-0x34],xmm0
  42ed5a:	mov    edx,DWORD PTR [rbp-0x24]
  42ed5d:	mov    rax,QWORD PTR [rbp-0x20]
  42ed61:	mov    esi,edx
  42ed63:	mov    rdi,rax
  42ed66:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42ed6b:	mov    QWORD PTR [rbp-0x8],rax
  42ed6f:	cmp    QWORD PTR [rbp-0x8],0x0
  42ed74:	je     42edb2 <flatcc_json_printer_float_field@@Base+0x7c>
  42ed76:	mov    rax,QWORD PTR [rbp-0x8]
  42ed7a:	mov    rdi,rax
  42ed7d:	call   429fea <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  42ed82:	vmovd  eax,xmm0
  42ed86:	mov    DWORD PTR [rbp-0xc],eax
  42ed89:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42ed8e:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42ed93:	jp     42edcc <flatcc_json_printer_float_field@@Base+0x96>
  42ed95:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42ed9a:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42ed9f:	jne    42edcc <flatcc_json_printer_float_field@@Base+0x96>
  42eda1:	mov    rax,QWORD PTR [rbp-0x18]
  42eda5:	movzx  eax,BYTE PTR [rax+0x34]
  42eda9:	test   al,al
  42edab:	je     42edcc <flatcc_json_printer_float_field@@Base+0x96>
  42edad:	jmp    42ee4b <flatcc_json_printer_float_field@@Base+0x115>
  42edb2:	mov    rax,QWORD PTR [rbp-0x18]
  42edb6:	movzx  eax,BYTE PTR [rax+0x35]
  42edba:	test   al,al
  42edbc:	je     42ee4a <flatcc_json_printer_float_field@@Base+0x114>
  42edc2:	vmovss xmm0,DWORD PTR [rbp-0x34]
  42edc7:	vmovss DWORD PTR [rbp-0xc],xmm0
  42edcc:	mov    rax,QWORD PTR [rbp-0x20]
  42edd0:	mov    eax,DWORD PTR [rax+0x18]
  42edd3:	lea    ecx,[rax+0x1]
  42edd6:	mov    rdx,QWORD PTR [rbp-0x20]
  42edda:	mov    DWORD PTR [rdx+0x18],ecx
  42eddd:	test   eax,eax
  42eddf:	je     42edf8 <flatcc_json_printer_float_field@@Base+0xc2>
  42ede1:	mov    rax,QWORD PTR [rbp-0x18]
  42ede5:	mov    rax,QWORD PTR [rax+0x28]
  42ede9:	lea    rcx,[rax+0x1]
  42eded:	mov    rdx,QWORD PTR [rbp-0x18]
  42edf1:	mov    QWORD PTR [rdx+0x28],rcx
  42edf5:	mov    BYTE PTR [rax],0x2c
  42edf8:	mov    eax,DWORD PTR [rbp-0x28]
  42edfb:	movsxd rdx,eax
  42edfe:	mov    rcx,QWORD PTR [rbp-0x30]
  42ee02:	mov    rax,QWORD PTR [rbp-0x18]
  42ee06:	mov    rsi,rcx
  42ee09:	mov    rdi,rax
  42ee0c:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ee11:	mov    rax,QWORD PTR [rbp-0x18]
  42ee15:	mov    rdx,QWORD PTR [rax+0x28]
  42ee19:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42ee1e:	vmovq  rax,xmm1
  42ee23:	mov    rdi,rdx
  42ee26:	vmovq  xmm0,rax
  42ee2b:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42ee30:	mov    ecx,eax
  42ee32:	mov    rax,QWORD PTR [rbp-0x18]
  42ee36:	mov    rdx,QWORD PTR [rax+0x28]
  42ee3a:	movsxd rax,ecx
  42ee3d:	add    rdx,rax
  42ee40:	mov    rax,QWORD PTR [rbp-0x18]
  42ee44:	mov    QWORD PTR [rax+0x28],rdx
  42ee48:	jmp    42ee4b <flatcc_json_printer_float_field@@Base+0x115>
  42ee4a:	nop
  42ee4b:	leave  
  42ee4c:	ret    

000000000042ee4d <flatcc_json_printer_double_field@@Base>:
  42ee4d:	endbr64 
  42ee51:	push   rbp
  42ee52:	mov    rbp,rsp
  42ee55:	sub    rsp,0x40
  42ee59:	mov    QWORD PTR [rbp-0x18],rdi
  42ee5d:	mov    QWORD PTR [rbp-0x20],rsi
  42ee61:	mov    DWORD PTR [rbp-0x24],edx
  42ee64:	mov    QWORD PTR [rbp-0x30],rcx
  42ee68:	mov    DWORD PTR [rbp-0x28],r8d
  42ee6c:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42ee71:	mov    edx,DWORD PTR [rbp-0x24]
  42ee74:	mov    rax,QWORD PTR [rbp-0x20]
  42ee78:	mov    esi,edx
  42ee7a:	mov    rdi,rax
  42ee7d:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42ee82:	mov    QWORD PTR [rbp-0x8],rax
  42ee86:	cmp    QWORD PTR [rbp-0x8],0x0
  42ee8b:	je     42eecb <flatcc_json_printer_double_field@@Base+0x7e>
  42ee8d:	mov    rax,QWORD PTR [rbp-0x8]
  42ee91:	mov    rdi,rax
  42ee94:	call   42a033 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  42ee99:	vmovq  rax,xmm0
  42ee9e:	mov    QWORD PTR [rbp-0x10],rax
  42eea2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42eea7:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42eeac:	jp     42eee5 <flatcc_json_printer_double_field@@Base+0x98>
  42eeae:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42eeb3:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42eeb8:	jne    42eee5 <flatcc_json_printer_double_field@@Base+0x98>
  42eeba:	mov    rax,QWORD PTR [rbp-0x18]
  42eebe:	movzx  eax,BYTE PTR [rax+0x34]
  42eec2:	test   al,al
  42eec4:	je     42eee5 <flatcc_json_printer_double_field@@Base+0x98>
  42eec6:	jmp    42ef5e <flatcc_json_printer_double_field@@Base+0x111>
  42eecb:	mov    rax,QWORD PTR [rbp-0x18]
  42eecf:	movzx  eax,BYTE PTR [rax+0x35]
  42eed3:	test   al,al
  42eed5:	je     42ef5d <flatcc_json_printer_double_field@@Base+0x110>
  42eedb:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  42eee0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42eee5:	mov    rax,QWORD PTR [rbp-0x20]
  42eee9:	mov    eax,DWORD PTR [rax+0x18]
  42eeec:	lea    ecx,[rax+0x1]
  42eeef:	mov    rdx,QWORD PTR [rbp-0x20]
  42eef3:	mov    DWORD PTR [rdx+0x18],ecx
  42eef6:	test   eax,eax
  42eef8:	je     42ef11 <flatcc_json_printer_double_field@@Base+0xc4>
  42eefa:	mov    rax,QWORD PTR [rbp-0x18]
  42eefe:	mov    rax,QWORD PTR [rax+0x28]
  42ef02:	lea    rcx,[rax+0x1]
  42ef06:	mov    rdx,QWORD PTR [rbp-0x18]
  42ef0a:	mov    QWORD PTR [rdx+0x28],rcx
  42ef0e:	mov    BYTE PTR [rax],0x2c
  42ef11:	mov    eax,DWORD PTR [rbp-0x28]
  42ef14:	movsxd rdx,eax
  42ef17:	mov    rcx,QWORD PTR [rbp-0x30]
  42ef1b:	mov    rax,QWORD PTR [rbp-0x18]
  42ef1f:	mov    rsi,rcx
  42ef22:	mov    rdi,rax
  42ef25:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ef2a:	mov    rax,QWORD PTR [rbp-0x18]
  42ef2e:	mov    rdx,QWORD PTR [rax+0x28]
  42ef32:	mov    rax,QWORD PTR [rbp-0x10]
  42ef36:	mov    rdi,rdx
  42ef39:	vmovq  xmm0,rax
  42ef3e:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42ef43:	mov    ecx,eax
  42ef45:	mov    rax,QWORD PTR [rbp-0x18]
  42ef49:	mov    rdx,QWORD PTR [rax+0x28]
  42ef4d:	movsxd rax,ecx
  42ef50:	add    rdx,rax
  42ef53:	mov    rax,QWORD PTR [rbp-0x18]
  42ef57:	mov    QWORD PTR [rax+0x28],rdx
  42ef5b:	jmp    42ef5e <flatcc_json_printer_double_field@@Base+0x111>
  42ef5d:	nop
  42ef5e:	leave  
  42ef5f:	ret    

000000000042ef60 <flatcc_json_printer_uint8_enum_field@@Base>:
  42ef60:	endbr64 
  42ef64:	push   rbp
  42ef65:	mov    rbp,rsp
  42ef68:	sub    rsp,0x40
  42ef6c:	mov    QWORD PTR [rbp-0x18],rdi
  42ef70:	mov    QWORD PTR [rbp-0x20],rsi
  42ef74:	mov    DWORD PTR [rbp-0x24],edx
  42ef77:	mov    QWORD PTR [rbp-0x30],rcx
  42ef7b:	mov    DWORD PTR [rbp-0x28],r8d
  42ef7f:	mov    eax,r9d
  42ef82:	mov    BYTE PTR [rbp-0x34],al
  42ef85:	mov    edx,DWORD PTR [rbp-0x24]
  42ef88:	mov    rax,QWORD PTR [rbp-0x20]
  42ef8c:	mov    esi,edx
  42ef8e:	mov    rdi,rax
  42ef91:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42ef96:	mov    QWORD PTR [rbp-0x8],rax
  42ef9a:	cmp    QWORD PTR [rbp-0x8],0x0
  42ef9f:	je     42efca <flatcc_json_printer_uint8_enum_field@@Base+0x6a>
  42efa1:	mov    rax,QWORD PTR [rbp-0x8]
  42efa5:	mov    rdi,rax
  42efa8:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  42efad:	mov    BYTE PTR [rbp-0x9],al
  42efb0:	movzx  eax,BYTE PTR [rbp-0x9]
  42efb4:	cmp    al,BYTE PTR [rbp-0x34]
  42efb7:	jne    42efe1 <flatcc_json_printer_uint8_enum_field@@Base+0x81>
  42efb9:	mov    rax,QWORD PTR [rbp-0x18]
  42efbd:	movzx  eax,BYTE PTR [rax+0x34]
  42efc1:	test   al,al
  42efc3:	je     42efe1 <flatcc_json_printer_uint8_enum_field@@Base+0x81>
  42efc5:	jmp    42f078 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42efca:	mov    rax,QWORD PTR [rbp-0x18]
  42efce:	movzx  eax,BYTE PTR [rax+0x35]
  42efd2:	test   al,al
  42efd4:	je     42f077 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  42efda:	movzx  eax,BYTE PTR [rbp-0x34]
  42efde:	mov    BYTE PTR [rbp-0x9],al
  42efe1:	mov    rax,QWORD PTR [rbp-0x20]
  42efe5:	mov    eax,DWORD PTR [rax+0x18]
  42efe8:	lea    ecx,[rax+0x1]
  42efeb:	mov    rdx,QWORD PTR [rbp-0x20]
  42efef:	mov    DWORD PTR [rdx+0x18],ecx
  42eff2:	test   eax,eax
  42eff4:	je     42f00d <flatcc_json_printer_uint8_enum_field@@Base+0xad>
  42eff6:	mov    rax,QWORD PTR [rbp-0x18]
  42effa:	mov    rax,QWORD PTR [rax+0x28]
  42effe:	lea    rcx,[rax+0x1]
  42f002:	mov    rdx,QWORD PTR [rbp-0x18]
  42f006:	mov    QWORD PTR [rdx+0x28],rcx
  42f00a:	mov    BYTE PTR [rax],0x2c
  42f00d:	mov    eax,DWORD PTR [rbp-0x28]
  42f010:	movsxd rdx,eax
  42f013:	mov    rcx,QWORD PTR [rbp-0x30]
  42f017:	mov    rax,QWORD PTR [rbp-0x18]
  42f01b:	mov    rsi,rcx
  42f01e:	mov    rdi,rax
  42f021:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f026:	mov    rax,QWORD PTR [rbp-0x18]
  42f02a:	movzx  eax,BYTE PTR [rax+0x33]
  42f02e:	test   al,al
  42f030:	je     42f062 <flatcc_json_printer_uint8_enum_field@@Base+0x102>
  42f032:	mov    rax,QWORD PTR [rbp-0x18]
  42f036:	mov    rdx,QWORD PTR [rax+0x28]
  42f03a:	movzx  eax,BYTE PTR [rbp-0x9]
  42f03e:	mov    rsi,rdx
  42f041:	mov    edi,eax
  42f043:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42f048:	mov    ecx,eax
  42f04a:	mov    rax,QWORD PTR [rbp-0x18]
  42f04e:	mov    rdx,QWORD PTR [rax+0x28]
  42f052:	movsxd rax,ecx
  42f055:	add    rdx,rax
  42f058:	mov    rax,QWORD PTR [rbp-0x18]
  42f05c:	mov    QWORD PTR [rax+0x28],rdx
  42f060:	jmp    42f078 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42f062:	movzx  ecx,BYTE PTR [rbp-0x9]
  42f066:	mov    rdx,QWORD PTR [rbp-0x18]
  42f06a:	mov    rax,QWORD PTR [rbp+0x10]
  42f06e:	mov    esi,ecx
  42f070:	mov    rdi,rdx
  42f073:	call   rax
  42f075:	jmp    42f078 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42f077:	nop
  42f078:	leave  
  42f079:	ret    

000000000042f07a <flatcc_json_printer_uint16_enum_field@@Base>:
  42f07a:	endbr64 
  42f07e:	push   rbp
  42f07f:	mov    rbp,rsp
  42f082:	sub    rsp,0x40
  42f086:	mov    QWORD PTR [rbp-0x18],rdi
  42f08a:	mov    QWORD PTR [rbp-0x20],rsi
  42f08e:	mov    DWORD PTR [rbp-0x24],edx
  42f091:	mov    QWORD PTR [rbp-0x30],rcx
  42f095:	mov    DWORD PTR [rbp-0x28],r8d
  42f099:	mov    eax,r9d
  42f09c:	mov    WORD PTR [rbp-0x34],ax
  42f0a0:	mov    edx,DWORD PTR [rbp-0x24]
  42f0a3:	mov    rax,QWORD PTR [rbp-0x20]
  42f0a7:	mov    esi,edx
  42f0a9:	mov    rdi,rax
  42f0ac:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f0b1:	mov    QWORD PTR [rbp-0x8],rax
  42f0b5:	cmp    QWORD PTR [rbp-0x8],0x0
  42f0ba:	je     42f0e7 <flatcc_json_printer_uint16_enum_field@@Base+0x6d>
  42f0bc:	mov    rax,QWORD PTR [rbp-0x8]
  42f0c0:	mov    rdi,rax
  42f0c3:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  42f0c8:	mov    WORD PTR [rbp-0xa],ax
  42f0cc:	movzx  eax,WORD PTR [rbp-0xa]
  42f0d0:	cmp    ax,WORD PTR [rbp-0x34]
  42f0d4:	jne    42f0ff <flatcc_json_printer_uint16_enum_field@@Base+0x85>
  42f0d6:	mov    rax,QWORD PTR [rbp-0x18]
  42f0da:	movzx  eax,BYTE PTR [rax+0x34]
  42f0de:	test   al,al
  42f0e0:	je     42f0ff <flatcc_json_printer_uint16_enum_field@@Base+0x85>
  42f0e2:	jmp    42f196 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42f0e7:	mov    rax,QWORD PTR [rbp-0x18]
  42f0eb:	movzx  eax,BYTE PTR [rax+0x35]
  42f0ef:	test   al,al
  42f0f1:	je     42f195 <flatcc_json_printer_uint16_enum_field@@Base+0x11b>
  42f0f7:	movzx  eax,WORD PTR [rbp-0x34]
  42f0fb:	mov    WORD PTR [rbp-0xa],ax
  42f0ff:	mov    rax,QWORD PTR [rbp-0x20]
  42f103:	mov    eax,DWORD PTR [rax+0x18]
  42f106:	lea    ecx,[rax+0x1]
  42f109:	mov    rdx,QWORD PTR [rbp-0x20]
  42f10d:	mov    DWORD PTR [rdx+0x18],ecx
  42f110:	test   eax,eax
  42f112:	je     42f12b <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  42f114:	mov    rax,QWORD PTR [rbp-0x18]
  42f118:	mov    rax,QWORD PTR [rax+0x28]
  42f11c:	lea    rcx,[rax+0x1]
  42f120:	mov    rdx,QWORD PTR [rbp-0x18]
  42f124:	mov    QWORD PTR [rdx+0x28],rcx
  42f128:	mov    BYTE PTR [rax],0x2c
  42f12b:	mov    eax,DWORD PTR [rbp-0x28]
  42f12e:	movsxd rdx,eax
  42f131:	mov    rcx,QWORD PTR [rbp-0x30]
  42f135:	mov    rax,QWORD PTR [rbp-0x18]
  42f139:	mov    rsi,rcx
  42f13c:	mov    rdi,rax
  42f13f:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f144:	mov    rax,QWORD PTR [rbp-0x18]
  42f148:	movzx  eax,BYTE PTR [rax+0x33]
  42f14c:	test   al,al
  42f14e:	je     42f180 <flatcc_json_printer_uint16_enum_field@@Base+0x106>
  42f150:	mov    rax,QWORD PTR [rbp-0x18]
  42f154:	mov    rdx,QWORD PTR [rax+0x28]
  42f158:	movzx  eax,WORD PTR [rbp-0xa]
  42f15c:	mov    rsi,rdx
  42f15f:	mov    edi,eax
  42f161:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42f166:	mov    ecx,eax
  42f168:	mov    rax,QWORD PTR [rbp-0x18]
  42f16c:	mov    rdx,QWORD PTR [rax+0x28]
  42f170:	movsxd rax,ecx
  42f173:	add    rdx,rax
  42f176:	mov    rax,QWORD PTR [rbp-0x18]
  42f17a:	mov    QWORD PTR [rax+0x28],rdx
  42f17e:	jmp    42f196 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42f180:	movzx  ecx,WORD PTR [rbp-0xa]
  42f184:	mov    rdx,QWORD PTR [rbp-0x18]
  42f188:	mov    rax,QWORD PTR [rbp+0x10]
  42f18c:	mov    esi,ecx
  42f18e:	mov    rdi,rdx
  42f191:	call   rax
  42f193:	jmp    42f196 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42f195:	nop
  42f196:	leave  
  42f197:	ret    

000000000042f198 <flatcc_json_printer_uint32_enum_field@@Base>:
  42f198:	endbr64 
  42f19c:	push   rbp
  42f19d:	mov    rbp,rsp
  42f1a0:	sub    rsp,0x40
  42f1a4:	mov    QWORD PTR [rbp-0x18],rdi
  42f1a8:	mov    QWORD PTR [rbp-0x20],rsi
  42f1ac:	mov    DWORD PTR [rbp-0x24],edx
  42f1af:	mov    QWORD PTR [rbp-0x30],rcx
  42f1b3:	mov    DWORD PTR [rbp-0x28],r8d
  42f1b7:	mov    DWORD PTR [rbp-0x34],r9d
  42f1bb:	mov    edx,DWORD PTR [rbp-0x24]
  42f1be:	mov    rax,QWORD PTR [rbp-0x20]
  42f1c2:	mov    esi,edx
  42f1c4:	mov    rdi,rax
  42f1c7:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f1cc:	mov    QWORD PTR [rbp-0x8],rax
  42f1d0:	cmp    QWORD PTR [rbp-0x8],0x0
  42f1d5:	je     42f1ff <flatcc_json_printer_uint32_enum_field@@Base+0x67>
  42f1d7:	mov    rax,QWORD PTR [rbp-0x8]
  42f1db:	mov    rdi,rax
  42f1de:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  42f1e3:	mov    DWORD PTR [rbp-0xc],eax
  42f1e6:	mov    eax,DWORD PTR [rbp-0xc]
  42f1e9:	cmp    eax,DWORD PTR [rbp-0x34]
  42f1ec:	jne    42f215 <flatcc_json_printer_uint32_enum_field@@Base+0x7d>
  42f1ee:	mov    rax,QWORD PTR [rbp-0x18]
  42f1f2:	movzx  eax,BYTE PTR [rax+0x34]
  42f1f6:	test   al,al
  42f1f8:	je     42f215 <flatcc_json_printer_uint32_enum_field@@Base+0x7d>
  42f1fa:	jmp    42f2aa <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42f1ff:	mov    rax,QWORD PTR [rbp-0x18]
  42f203:	movzx  eax,BYTE PTR [rax+0x35]
  42f207:	test   al,al
  42f209:	je     42f2a9 <flatcc_json_printer_uint32_enum_field@@Base+0x111>
  42f20f:	mov    eax,DWORD PTR [rbp-0x34]
  42f212:	mov    DWORD PTR [rbp-0xc],eax
  42f215:	mov    rax,QWORD PTR [rbp-0x20]
  42f219:	mov    eax,DWORD PTR [rax+0x18]
  42f21c:	lea    ecx,[rax+0x1]
  42f21f:	mov    rdx,QWORD PTR [rbp-0x20]
  42f223:	mov    DWORD PTR [rdx+0x18],ecx
  42f226:	test   eax,eax
  42f228:	je     42f241 <flatcc_json_printer_uint32_enum_field@@Base+0xa9>
  42f22a:	mov    rax,QWORD PTR [rbp-0x18]
  42f22e:	mov    rax,QWORD PTR [rax+0x28]
  42f232:	lea    rcx,[rax+0x1]
  42f236:	mov    rdx,QWORD PTR [rbp-0x18]
  42f23a:	mov    QWORD PTR [rdx+0x28],rcx
  42f23e:	mov    BYTE PTR [rax],0x2c
  42f241:	mov    eax,DWORD PTR [rbp-0x28]
  42f244:	movsxd rdx,eax
  42f247:	mov    rcx,QWORD PTR [rbp-0x30]
  42f24b:	mov    rax,QWORD PTR [rbp-0x18]
  42f24f:	mov    rsi,rcx
  42f252:	mov    rdi,rax
  42f255:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f25a:	mov    rax,QWORD PTR [rbp-0x18]
  42f25e:	movzx  eax,BYTE PTR [rax+0x33]
  42f262:	test   al,al
  42f264:	je     42f295 <flatcc_json_printer_uint32_enum_field@@Base+0xfd>
  42f266:	mov    rax,QWORD PTR [rbp-0x18]
  42f26a:	mov    rdx,QWORD PTR [rax+0x28]
  42f26e:	mov    eax,DWORD PTR [rbp-0xc]
  42f271:	mov    rsi,rdx
  42f274:	mov    edi,eax
  42f276:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42f27b:	mov    ecx,eax
  42f27d:	mov    rax,QWORD PTR [rbp-0x18]
  42f281:	mov    rdx,QWORD PTR [rax+0x28]
  42f285:	movsxd rax,ecx
  42f288:	add    rdx,rax
  42f28b:	mov    rax,QWORD PTR [rbp-0x18]
  42f28f:	mov    QWORD PTR [rax+0x28],rdx
  42f293:	jmp    42f2aa <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42f295:	mov    ecx,DWORD PTR [rbp-0xc]
  42f298:	mov    rdx,QWORD PTR [rbp-0x18]
  42f29c:	mov    rax,QWORD PTR [rbp+0x10]
  42f2a0:	mov    esi,ecx
  42f2a2:	mov    rdi,rdx
  42f2a5:	call   rax
  42f2a7:	jmp    42f2aa <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42f2a9:	nop
  42f2aa:	leave  
  42f2ab:	ret    

000000000042f2ac <flatcc_json_printer_uint64_enum_field@@Base>:
  42f2ac:	endbr64 
  42f2b0:	push   rbp
  42f2b1:	mov    rbp,rsp
  42f2b4:	sub    rsp,0x40
  42f2b8:	mov    QWORD PTR [rbp-0x18],rdi
  42f2bc:	mov    QWORD PTR [rbp-0x20],rsi
  42f2c0:	mov    DWORD PTR [rbp-0x24],edx
  42f2c3:	mov    QWORD PTR [rbp-0x30],rcx
  42f2c7:	mov    DWORD PTR [rbp-0x28],r8d
  42f2cb:	mov    QWORD PTR [rbp-0x38],r9
  42f2cf:	mov    edx,DWORD PTR [rbp-0x24]
  42f2d2:	mov    rax,QWORD PTR [rbp-0x20]
  42f2d6:	mov    esi,edx
  42f2d8:	mov    rdi,rax
  42f2db:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f2e0:	mov    QWORD PTR [rbp-0x8],rax
  42f2e4:	cmp    QWORD PTR [rbp-0x8],0x0
  42f2e9:	je     42f316 <flatcc_json_printer_uint64_enum_field@@Base+0x6a>
  42f2eb:	mov    rax,QWORD PTR [rbp-0x8]
  42f2ef:	mov    rdi,rax
  42f2f2:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  42f2f7:	mov    QWORD PTR [rbp-0x10],rax
  42f2fb:	mov    rax,QWORD PTR [rbp-0x10]
  42f2ff:	cmp    rax,QWORD PTR [rbp-0x38]
  42f303:	jne    42f32e <flatcc_json_printer_uint64_enum_field@@Base+0x82>
  42f305:	mov    rax,QWORD PTR [rbp-0x18]
  42f309:	movzx  eax,BYTE PTR [rax+0x34]
  42f30d:	test   al,al
  42f30f:	je     42f32e <flatcc_json_printer_uint64_enum_field@@Base+0x82>
  42f311:	jmp    42f3c7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42f316:	mov    rax,QWORD PTR [rbp-0x18]
  42f31a:	movzx  eax,BYTE PTR [rax+0x35]
  42f31e:	test   al,al
  42f320:	je     42f3c6 <flatcc_json_printer_uint64_enum_field@@Base+0x11a>
  42f326:	mov    rax,QWORD PTR [rbp-0x38]
  42f32a:	mov    QWORD PTR [rbp-0x10],rax
  42f32e:	mov    rax,QWORD PTR [rbp-0x20]
  42f332:	mov    eax,DWORD PTR [rax+0x18]
  42f335:	lea    ecx,[rax+0x1]
  42f338:	mov    rdx,QWORD PTR [rbp-0x20]
  42f33c:	mov    DWORD PTR [rdx+0x18],ecx
  42f33f:	test   eax,eax
  42f341:	je     42f35a <flatcc_json_printer_uint64_enum_field@@Base+0xae>
  42f343:	mov    rax,QWORD PTR [rbp-0x18]
  42f347:	mov    rax,QWORD PTR [rax+0x28]
  42f34b:	lea    rcx,[rax+0x1]
  42f34f:	mov    rdx,QWORD PTR [rbp-0x18]
  42f353:	mov    QWORD PTR [rdx+0x28],rcx
  42f357:	mov    BYTE PTR [rax],0x2c
  42f35a:	mov    eax,DWORD PTR [rbp-0x28]
  42f35d:	movsxd rdx,eax
  42f360:	mov    rcx,QWORD PTR [rbp-0x30]
  42f364:	mov    rax,QWORD PTR [rbp-0x18]
  42f368:	mov    rsi,rcx
  42f36b:	mov    rdi,rax
  42f36e:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f373:	mov    rax,QWORD PTR [rbp-0x18]
  42f377:	movzx  eax,BYTE PTR [rax+0x33]
  42f37b:	test   al,al
  42f37d:	je     42f3b0 <flatcc_json_printer_uint64_enum_field@@Base+0x104>
  42f37f:	mov    rax,QWORD PTR [rbp-0x18]
  42f383:	mov    rdx,QWORD PTR [rax+0x28]
  42f387:	mov    rax,QWORD PTR [rbp-0x10]
  42f38b:	mov    rsi,rdx
  42f38e:	mov    rdi,rax
  42f391:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42f396:	mov    ecx,eax
  42f398:	mov    rax,QWORD PTR [rbp-0x18]
  42f39c:	mov    rdx,QWORD PTR [rax+0x28]
  42f3a0:	movsxd rax,ecx
  42f3a3:	add    rdx,rax
  42f3a6:	mov    rax,QWORD PTR [rbp-0x18]
  42f3aa:	mov    QWORD PTR [rax+0x28],rdx
  42f3ae:	jmp    42f3c7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42f3b0:	mov    rcx,QWORD PTR [rbp-0x10]
  42f3b4:	mov    rdx,QWORD PTR [rbp-0x18]
  42f3b8:	mov    rax,QWORD PTR [rbp+0x10]
  42f3bc:	mov    rsi,rcx
  42f3bf:	mov    rdi,rdx
  42f3c2:	call   rax
  42f3c4:	jmp    42f3c7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42f3c6:	nop
  42f3c7:	leave  
  42f3c8:	ret    

000000000042f3c9 <flatcc_json_printer_int8_enum_field@@Base>:
  42f3c9:	endbr64 
  42f3cd:	push   rbp
  42f3ce:	mov    rbp,rsp
  42f3d1:	sub    rsp,0x40
  42f3d5:	mov    QWORD PTR [rbp-0x18],rdi
  42f3d9:	mov    QWORD PTR [rbp-0x20],rsi
  42f3dd:	mov    DWORD PTR [rbp-0x24],edx
  42f3e0:	mov    QWORD PTR [rbp-0x30],rcx
  42f3e4:	mov    DWORD PTR [rbp-0x28],r8d
  42f3e8:	mov    eax,r9d
  42f3eb:	mov    BYTE PTR [rbp-0x34],al
  42f3ee:	mov    edx,DWORD PTR [rbp-0x24]
  42f3f1:	mov    rax,QWORD PTR [rbp-0x20]
  42f3f5:	mov    esi,edx
  42f3f7:	mov    rdi,rax
  42f3fa:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f3ff:	mov    QWORD PTR [rbp-0x8],rax
  42f403:	cmp    QWORD PTR [rbp-0x8],0x0
  42f408:	je     42f433 <flatcc_json_printer_int8_enum_field@@Base+0x6a>
  42f40a:	mov    rax,QWORD PTR [rbp-0x8]
  42f40e:	mov    rdi,rax
  42f411:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  42f416:	mov    BYTE PTR [rbp-0x9],al
  42f419:	movzx  eax,BYTE PTR [rbp-0x9]
  42f41d:	cmp    al,BYTE PTR [rbp-0x34]
  42f420:	jne    42f44a <flatcc_json_printer_int8_enum_field@@Base+0x81>
  42f422:	mov    rax,QWORD PTR [rbp-0x18]
  42f426:	movzx  eax,BYTE PTR [rax+0x34]
  42f42a:	test   al,al
  42f42c:	je     42f44a <flatcc_json_printer_int8_enum_field@@Base+0x81>
  42f42e:	jmp    42f4e1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42f433:	mov    rax,QWORD PTR [rbp-0x18]
  42f437:	movzx  eax,BYTE PTR [rax+0x35]
  42f43b:	test   al,al
  42f43d:	je     42f4e0 <flatcc_json_printer_int8_enum_field@@Base+0x117>
  42f443:	movzx  eax,BYTE PTR [rbp-0x34]
  42f447:	mov    BYTE PTR [rbp-0x9],al
  42f44a:	mov    rax,QWORD PTR [rbp-0x20]
  42f44e:	mov    eax,DWORD PTR [rax+0x18]
  42f451:	lea    ecx,[rax+0x1]
  42f454:	mov    rdx,QWORD PTR [rbp-0x20]
  42f458:	mov    DWORD PTR [rdx+0x18],ecx
  42f45b:	test   eax,eax
  42f45d:	je     42f476 <flatcc_json_printer_int8_enum_field@@Base+0xad>
  42f45f:	mov    rax,QWORD PTR [rbp-0x18]
  42f463:	mov    rax,QWORD PTR [rax+0x28]
  42f467:	lea    rcx,[rax+0x1]
  42f46b:	mov    rdx,QWORD PTR [rbp-0x18]
  42f46f:	mov    QWORD PTR [rdx+0x28],rcx
  42f473:	mov    BYTE PTR [rax],0x2c
  42f476:	mov    eax,DWORD PTR [rbp-0x28]
  42f479:	movsxd rdx,eax
  42f47c:	mov    rcx,QWORD PTR [rbp-0x30]
  42f480:	mov    rax,QWORD PTR [rbp-0x18]
  42f484:	mov    rsi,rcx
  42f487:	mov    rdi,rax
  42f48a:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f48f:	mov    rax,QWORD PTR [rbp-0x18]
  42f493:	movzx  eax,BYTE PTR [rax+0x33]
  42f497:	test   al,al
  42f499:	je     42f4cb <flatcc_json_printer_int8_enum_field@@Base+0x102>
  42f49b:	mov    rax,QWORD PTR [rbp-0x18]
  42f49f:	mov    rdx,QWORD PTR [rax+0x28]
  42f4a3:	movsx  eax,BYTE PTR [rbp-0x9]
  42f4a7:	mov    rsi,rdx
  42f4aa:	mov    edi,eax
  42f4ac:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42f4b1:	mov    ecx,eax
  42f4b3:	mov    rax,QWORD PTR [rbp-0x18]
  42f4b7:	mov    rdx,QWORD PTR [rax+0x28]
  42f4bb:	movsxd rax,ecx
  42f4be:	add    rdx,rax
  42f4c1:	mov    rax,QWORD PTR [rbp-0x18]
  42f4c5:	mov    QWORD PTR [rax+0x28],rdx
  42f4c9:	jmp    42f4e1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42f4cb:	movsx  ecx,BYTE PTR [rbp-0x9]
  42f4cf:	mov    rdx,QWORD PTR [rbp-0x18]
  42f4d3:	mov    rax,QWORD PTR [rbp+0x10]
  42f4d7:	mov    esi,ecx
  42f4d9:	mov    rdi,rdx
  42f4dc:	call   rax
  42f4de:	jmp    42f4e1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42f4e0:	nop
  42f4e1:	leave  
  42f4e2:	ret    

000000000042f4e3 <flatcc_json_printer_int16_enum_field@@Base>:
  42f4e3:	endbr64 
  42f4e7:	push   rbp
  42f4e8:	mov    rbp,rsp
  42f4eb:	sub    rsp,0x40
  42f4ef:	mov    QWORD PTR [rbp-0x18],rdi
  42f4f3:	mov    QWORD PTR [rbp-0x20],rsi
  42f4f7:	mov    DWORD PTR [rbp-0x24],edx
  42f4fa:	mov    QWORD PTR [rbp-0x30],rcx
  42f4fe:	mov    DWORD PTR [rbp-0x28],r8d
  42f502:	mov    eax,r9d
  42f505:	mov    WORD PTR [rbp-0x34],ax
  42f509:	mov    edx,DWORD PTR [rbp-0x24]
  42f50c:	mov    rax,QWORD PTR [rbp-0x20]
  42f510:	mov    esi,edx
  42f512:	mov    rdi,rax
  42f515:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f51a:	mov    QWORD PTR [rbp-0x8],rax
  42f51e:	cmp    QWORD PTR [rbp-0x8],0x0
  42f523:	je     42f550 <flatcc_json_printer_int16_enum_field@@Base+0x6d>
  42f525:	mov    rax,QWORD PTR [rbp-0x8]
  42f529:	mov    rdi,rax
  42f52c:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  42f531:	mov    WORD PTR [rbp-0xa],ax
  42f535:	movzx  eax,WORD PTR [rbp-0xa]
  42f539:	cmp    ax,WORD PTR [rbp-0x34]
  42f53d:	jne    42f568 <flatcc_json_printer_int16_enum_field@@Base+0x85>
  42f53f:	mov    rax,QWORD PTR [rbp-0x18]
  42f543:	movzx  eax,BYTE PTR [rax+0x34]
  42f547:	test   al,al
  42f549:	je     42f568 <flatcc_json_printer_int16_enum_field@@Base+0x85>
  42f54b:	jmp    42f5ff <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  42f550:	mov    rax,QWORD PTR [rbp-0x18]
  42f554:	movzx  eax,BYTE PTR [rax+0x35]
  42f558:	test   al,al
  42f55a:	je     42f5fe <flatcc_json_printer_int16_enum_field@@Base+0x11b>
  42f560:	movzx  eax,WORD PTR [rbp-0x34]
  42f564:	mov    WORD PTR [rbp-0xa],ax
  42f568:	mov    rax,QWORD PTR [rbp-0x20]
  42f56c:	mov    eax,DWORD PTR [rax+0x18]
  42f56f:	lea    ecx,[rax+0x1]
  42f572:	mov    rdx,QWORD PTR [rbp-0x20]
  42f576:	mov    DWORD PTR [rdx+0x18],ecx
  42f579:	test   eax,eax
  42f57b:	je     42f594 <flatcc_json_printer_int16_enum_field@@Base+0xb1>
  42f57d:	mov    rax,QWORD PTR [rbp-0x18]
  42f581:	mov    rax,QWORD PTR [rax+0x28]
  42f585:	lea    rcx,[rax+0x1]
  42f589:	mov    rdx,QWORD PTR [rbp-0x18]
  42f58d:	mov    QWORD PTR [rdx+0x28],rcx
  42f591:	mov    BYTE PTR [rax],0x2c
  42f594:	mov    eax,DWORD PTR [rbp-0x28]
  42f597:	movsxd rdx,eax
  42f59a:	mov    rcx,QWORD PTR [rbp-0x30]
  42f59e:	mov    rax,QWORD PTR [rbp-0x18]
  42f5a2:	mov    rsi,rcx
  42f5a5:	mov    rdi,rax
  42f5a8:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f5ad:	mov    rax,QWORD PTR [rbp-0x18]
  42f5b1:	movzx  eax,BYTE PTR [rax+0x33]
  42f5b5:	test   al,al
  42f5b7:	je     42f5e9 <flatcc_json_printer_int16_enum_field@@Base+0x106>
  42f5b9:	mov    rax,QWORD PTR [rbp-0x18]
  42f5bd:	mov    rdx,QWORD PTR [rax+0x28]
  42f5c1:	movsx  eax,WORD PTR [rbp-0xa]
  42f5c5:	mov    rsi,rdx
  42f5c8:	mov    edi,eax
  42f5ca:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42f5cf:	mov    ecx,eax
  42f5d1:	mov    rax,QWORD PTR [rbp-0x18]
  42f5d5:	mov    rdx,QWORD PTR [rax+0x28]
  42f5d9:	movsxd rax,ecx
  42f5dc:	add    rdx,rax
  42f5df:	mov    rax,QWORD PTR [rbp-0x18]
  42f5e3:	mov    QWORD PTR [rax+0x28],rdx
  42f5e7:	jmp    42f5ff <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  42f5e9:	movsx  ecx,WORD PTR [rbp-0xa]
  42f5ed:	mov    rdx,QWORD PTR [rbp-0x18]
  42f5f1:	mov    rax,QWORD PTR [rbp+0x10]
  42f5f5:	mov    esi,ecx
  42f5f7:	mov    rdi,rdx
  42f5fa:	call   rax
  42f5fc:	jmp    42f5ff <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  42f5fe:	nop
  42f5ff:	leave  
  42f600:	ret    

000000000042f601 <flatcc_json_printer_int32_enum_field@@Base>:
  42f601:	endbr64 
  42f605:	push   rbp
  42f606:	mov    rbp,rsp
  42f609:	sub    rsp,0x40
  42f60d:	mov    QWORD PTR [rbp-0x18],rdi
  42f611:	mov    QWORD PTR [rbp-0x20],rsi
  42f615:	mov    DWORD PTR [rbp-0x24],edx
  42f618:	mov    QWORD PTR [rbp-0x30],rcx
  42f61c:	mov    DWORD PTR [rbp-0x28],r8d
  42f620:	mov    DWORD PTR [rbp-0x34],r9d
  42f624:	mov    edx,DWORD PTR [rbp-0x24]
  42f627:	mov    rax,QWORD PTR [rbp-0x20]
  42f62b:	mov    esi,edx
  42f62d:	mov    rdi,rax
  42f630:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f635:	mov    QWORD PTR [rbp-0x8],rax
  42f639:	cmp    QWORD PTR [rbp-0x8],0x0
  42f63e:	je     42f668 <flatcc_json_printer_int32_enum_field@@Base+0x67>
  42f640:	mov    rax,QWORD PTR [rbp-0x8]
  42f644:	mov    rdi,rax
  42f647:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  42f64c:	mov    DWORD PTR [rbp-0xc],eax
  42f64f:	mov    eax,DWORD PTR [rbp-0xc]
  42f652:	cmp    eax,DWORD PTR [rbp-0x34]
  42f655:	jne    42f67e <flatcc_json_printer_int32_enum_field@@Base+0x7d>
  42f657:	mov    rax,QWORD PTR [rbp-0x18]
  42f65b:	movzx  eax,BYTE PTR [rax+0x34]
  42f65f:	test   al,al
  42f661:	je     42f67e <flatcc_json_printer_int32_enum_field@@Base+0x7d>
  42f663:	jmp    42f713 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  42f668:	mov    rax,QWORD PTR [rbp-0x18]
  42f66c:	movzx  eax,BYTE PTR [rax+0x35]
  42f670:	test   al,al
  42f672:	je     42f712 <flatcc_json_printer_int32_enum_field@@Base+0x111>
  42f678:	mov    eax,DWORD PTR [rbp-0x34]
  42f67b:	mov    DWORD PTR [rbp-0xc],eax
  42f67e:	mov    rax,QWORD PTR [rbp-0x20]
  42f682:	mov    eax,DWORD PTR [rax+0x18]
  42f685:	lea    ecx,[rax+0x1]
  42f688:	mov    rdx,QWORD PTR [rbp-0x20]
  42f68c:	mov    DWORD PTR [rdx+0x18],ecx
  42f68f:	test   eax,eax
  42f691:	je     42f6aa <flatcc_json_printer_int32_enum_field@@Base+0xa9>
  42f693:	mov    rax,QWORD PTR [rbp-0x18]
  42f697:	mov    rax,QWORD PTR [rax+0x28]
  42f69b:	lea    rcx,[rax+0x1]
  42f69f:	mov    rdx,QWORD PTR [rbp-0x18]
  42f6a3:	mov    QWORD PTR [rdx+0x28],rcx
  42f6a7:	mov    BYTE PTR [rax],0x2c
  42f6aa:	mov    eax,DWORD PTR [rbp-0x28]
  42f6ad:	movsxd rdx,eax
  42f6b0:	mov    rcx,QWORD PTR [rbp-0x30]
  42f6b4:	mov    rax,QWORD PTR [rbp-0x18]
  42f6b8:	mov    rsi,rcx
  42f6bb:	mov    rdi,rax
  42f6be:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f6c3:	mov    rax,QWORD PTR [rbp-0x18]
  42f6c7:	movzx  eax,BYTE PTR [rax+0x33]
  42f6cb:	test   al,al
  42f6cd:	je     42f6fe <flatcc_json_printer_int32_enum_field@@Base+0xfd>
  42f6cf:	mov    rax,QWORD PTR [rbp-0x18]
  42f6d3:	mov    rdx,QWORD PTR [rax+0x28]
  42f6d7:	mov    eax,DWORD PTR [rbp-0xc]
  42f6da:	mov    rsi,rdx
  42f6dd:	mov    edi,eax
  42f6df:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42f6e4:	mov    ecx,eax
  42f6e6:	mov    rax,QWORD PTR [rbp-0x18]
  42f6ea:	mov    rdx,QWORD PTR [rax+0x28]
  42f6ee:	movsxd rax,ecx
  42f6f1:	add    rdx,rax
  42f6f4:	mov    rax,QWORD PTR [rbp-0x18]
  42f6f8:	mov    QWORD PTR [rax+0x28],rdx
  42f6fc:	jmp    42f713 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  42f6fe:	mov    ecx,DWORD PTR [rbp-0xc]
  42f701:	mov    rdx,QWORD PTR [rbp-0x18]
  42f705:	mov    rax,QWORD PTR [rbp+0x10]
  42f709:	mov    esi,ecx
  42f70b:	mov    rdi,rdx
  42f70e:	call   rax
  42f710:	jmp    42f713 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  42f712:	nop
  42f713:	leave  
  42f714:	ret    

000000000042f715 <flatcc_json_printer_int64_enum_field@@Base>:
  42f715:	endbr64 
  42f719:	push   rbp
  42f71a:	mov    rbp,rsp
  42f71d:	sub    rsp,0x40
  42f721:	mov    QWORD PTR [rbp-0x18],rdi
  42f725:	mov    QWORD PTR [rbp-0x20],rsi
  42f729:	mov    DWORD PTR [rbp-0x24],edx
  42f72c:	mov    QWORD PTR [rbp-0x30],rcx
  42f730:	mov    DWORD PTR [rbp-0x28],r8d
  42f734:	mov    QWORD PTR [rbp-0x38],r9
  42f738:	mov    edx,DWORD PTR [rbp-0x24]
  42f73b:	mov    rax,QWORD PTR [rbp-0x20]
  42f73f:	mov    esi,edx
  42f741:	mov    rdi,rax
  42f744:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f749:	mov    QWORD PTR [rbp-0x8],rax
  42f74d:	cmp    QWORD PTR [rbp-0x8],0x0
  42f752:	je     42f77f <flatcc_json_printer_int64_enum_field@@Base+0x6a>
  42f754:	mov    rax,QWORD PTR [rbp-0x8]
  42f758:	mov    rdi,rax
  42f75b:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  42f760:	mov    QWORD PTR [rbp-0x10],rax
  42f764:	mov    rax,QWORD PTR [rbp-0x10]
  42f768:	cmp    rax,QWORD PTR [rbp-0x38]
  42f76c:	jne    42f797 <flatcc_json_printer_int64_enum_field@@Base+0x82>
  42f76e:	mov    rax,QWORD PTR [rbp-0x18]
  42f772:	movzx  eax,BYTE PTR [rax+0x34]
  42f776:	test   al,al
  42f778:	je     42f797 <flatcc_json_printer_int64_enum_field@@Base+0x82>
  42f77a:	jmp    42f830 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  42f77f:	mov    rax,QWORD PTR [rbp-0x18]
  42f783:	movzx  eax,BYTE PTR [rax+0x35]
  42f787:	test   al,al
  42f789:	je     42f82f <flatcc_json_printer_int64_enum_field@@Base+0x11a>
  42f78f:	mov    rax,QWORD PTR [rbp-0x38]
  42f793:	mov    QWORD PTR [rbp-0x10],rax
  42f797:	mov    rax,QWORD PTR [rbp-0x20]
  42f79b:	mov    eax,DWORD PTR [rax+0x18]
  42f79e:	lea    ecx,[rax+0x1]
  42f7a1:	mov    rdx,QWORD PTR [rbp-0x20]
  42f7a5:	mov    DWORD PTR [rdx+0x18],ecx
  42f7a8:	test   eax,eax
  42f7aa:	je     42f7c3 <flatcc_json_printer_int64_enum_field@@Base+0xae>
  42f7ac:	mov    rax,QWORD PTR [rbp-0x18]
  42f7b0:	mov    rax,QWORD PTR [rax+0x28]
  42f7b4:	lea    rcx,[rax+0x1]
  42f7b8:	mov    rdx,QWORD PTR [rbp-0x18]
  42f7bc:	mov    QWORD PTR [rdx+0x28],rcx
  42f7c0:	mov    BYTE PTR [rax],0x2c
  42f7c3:	mov    eax,DWORD PTR [rbp-0x28]
  42f7c6:	movsxd rdx,eax
  42f7c9:	mov    rcx,QWORD PTR [rbp-0x30]
  42f7cd:	mov    rax,QWORD PTR [rbp-0x18]
  42f7d1:	mov    rsi,rcx
  42f7d4:	mov    rdi,rax
  42f7d7:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f7dc:	mov    rax,QWORD PTR [rbp-0x18]
  42f7e0:	movzx  eax,BYTE PTR [rax+0x33]
  42f7e4:	test   al,al
  42f7e6:	je     42f819 <flatcc_json_printer_int64_enum_field@@Base+0x104>
  42f7e8:	mov    rax,QWORD PTR [rbp-0x18]
  42f7ec:	mov    rdx,QWORD PTR [rax+0x28]
  42f7f0:	mov    rax,QWORD PTR [rbp-0x10]
  42f7f4:	mov    rsi,rdx
  42f7f7:	mov    rdi,rax
  42f7fa:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42f7ff:	mov    ecx,eax
  42f801:	mov    rax,QWORD PTR [rbp-0x18]
  42f805:	mov    rdx,QWORD PTR [rax+0x28]
  42f809:	movsxd rax,ecx
  42f80c:	add    rdx,rax
  42f80f:	mov    rax,QWORD PTR [rbp-0x18]
  42f813:	mov    QWORD PTR [rax+0x28],rdx
  42f817:	jmp    42f830 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  42f819:	mov    rcx,QWORD PTR [rbp-0x10]
  42f81d:	mov    rdx,QWORD PTR [rbp-0x18]
  42f821:	mov    rax,QWORD PTR [rbp+0x10]
  42f825:	mov    rsi,rcx
  42f828:	mov    rdi,rdx
  42f82b:	call   rax
  42f82d:	jmp    42f830 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  42f82f:	nop
  42f830:	leave  
  42f831:	ret    

000000000042f832 <flatcc_json_printer_bool_enum_field@@Base>:
  42f832:	endbr64 
  42f836:	push   rbp
  42f837:	mov    rbp,rsp
  42f83a:	sub    rsp,0x40
  42f83e:	mov    QWORD PTR [rbp-0x18],rdi
  42f842:	mov    QWORD PTR [rbp-0x20],rsi
  42f846:	mov    DWORD PTR [rbp-0x24],edx
  42f849:	mov    QWORD PTR [rbp-0x30],rcx
  42f84d:	mov    DWORD PTR [rbp-0x28],r8d
  42f851:	mov    eax,r9d
  42f854:	mov    BYTE PTR [rbp-0x34],al
  42f857:	mov    edx,DWORD PTR [rbp-0x24]
  42f85a:	mov    rax,QWORD PTR [rbp-0x20]
  42f85e:	mov    esi,edx
  42f860:	mov    rdi,rax
  42f863:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  42f868:	mov    QWORD PTR [rbp-0x8],rax
  42f86c:	cmp    QWORD PTR [rbp-0x8],0x0
  42f871:	je     42f89c <flatcc_json_printer_bool_enum_field@@Base+0x6a>
  42f873:	mov    rax,QWORD PTR [rbp-0x8]
  42f877:	mov    rdi,rax
  42f87a:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  42f87f:	mov    BYTE PTR [rbp-0x9],al
  42f882:	movzx  eax,BYTE PTR [rbp-0x9]
  42f886:	cmp    al,BYTE PTR [rbp-0x34]
  42f889:	jne    42f8b3 <flatcc_json_printer_bool_enum_field@@Base+0x81>
  42f88b:	mov    rax,QWORD PTR [rbp-0x18]
  42f88f:	movzx  eax,BYTE PTR [rax+0x34]
  42f893:	test   al,al
  42f895:	je     42f8b3 <flatcc_json_printer_bool_enum_field@@Base+0x81>
  42f897:	jmp    42f94a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  42f89c:	mov    rax,QWORD PTR [rbp-0x18]
  42f8a0:	movzx  eax,BYTE PTR [rax+0x35]
  42f8a4:	test   al,al
  42f8a6:	je     42f949 <flatcc_json_printer_bool_enum_field@@Base+0x117>
  42f8ac:	movzx  eax,BYTE PTR [rbp-0x34]
  42f8b0:	mov    BYTE PTR [rbp-0x9],al
  42f8b3:	mov    rax,QWORD PTR [rbp-0x20]
  42f8b7:	mov    eax,DWORD PTR [rax+0x18]
  42f8ba:	lea    ecx,[rax+0x1]
  42f8bd:	mov    rdx,QWORD PTR [rbp-0x20]
  42f8c1:	mov    DWORD PTR [rdx+0x18],ecx
  42f8c4:	test   eax,eax
  42f8c6:	je     42f8df <flatcc_json_printer_bool_enum_field@@Base+0xad>
  42f8c8:	mov    rax,QWORD PTR [rbp-0x18]
  42f8cc:	mov    rax,QWORD PTR [rax+0x28]
  42f8d0:	lea    rcx,[rax+0x1]
  42f8d4:	mov    rdx,QWORD PTR [rbp-0x18]
  42f8d8:	mov    QWORD PTR [rdx+0x28],rcx
  42f8dc:	mov    BYTE PTR [rax],0x2c
  42f8df:	mov    eax,DWORD PTR [rbp-0x28]
  42f8e2:	movsxd rdx,eax
  42f8e5:	mov    rcx,QWORD PTR [rbp-0x30]
  42f8e9:	mov    rax,QWORD PTR [rbp-0x18]
  42f8ed:	mov    rsi,rcx
  42f8f0:	mov    rdi,rax
  42f8f3:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f8f8:	mov    rax,QWORD PTR [rbp-0x18]
  42f8fc:	movzx  eax,BYTE PTR [rax+0x33]
  42f900:	test   al,al
  42f902:	je     42f934 <flatcc_json_printer_bool_enum_field@@Base+0x102>
  42f904:	mov    rax,QWORD PTR [rbp-0x18]
  42f908:	mov    rdx,QWORD PTR [rax+0x28]
  42f90c:	movzx  eax,BYTE PTR [rbp-0x9]
  42f910:	mov    rsi,rdx
  42f913:	mov    edi,eax
  42f915:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  42f91a:	mov    ecx,eax
  42f91c:	mov    rax,QWORD PTR [rbp-0x18]
  42f920:	mov    rdx,QWORD PTR [rax+0x28]
  42f924:	movsxd rax,ecx
  42f927:	add    rdx,rax
  42f92a:	mov    rax,QWORD PTR [rbp-0x18]
  42f92e:	mov    QWORD PTR [rax+0x28],rdx
  42f932:	jmp    42f94a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  42f934:	movzx  ecx,BYTE PTR [rbp-0x9]
  42f938:	mov    rdx,QWORD PTR [rbp-0x18]
  42f93c:	mov    rax,QWORD PTR [rbp+0x10]
  42f940:	mov    esi,ecx
  42f942:	mov    rdi,rdx
  42f945:	call   rax
  42f947:	jmp    42f94a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  42f949:	nop
  42f94a:	leave  
  42f94b:	ret    

000000000042f94c <flatcc_json_printer_uint8_struct_field@@Base>:
  42f94c:	endbr64 
  42f950:	push   rbp
  42f951:	mov    rbp,rsp
  42f954:	sub    rsp,0x40
  42f958:	mov    QWORD PTR [rbp-0x18],rdi
  42f95c:	mov    DWORD PTR [rbp-0x1c],esi
  42f95f:	mov    QWORD PTR [rbp-0x28],rdx
  42f963:	mov    QWORD PTR [rbp-0x30],rcx
  42f967:	mov    QWORD PTR [rbp-0x38],r8
  42f96b:	mov    DWORD PTR [rbp-0x20],r9d
  42f96f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f973:	mov    rax,QWORD PTR [rbp-0x30]
  42f977:	add    rax,rdx
  42f97a:	mov    rdi,rax
  42f97d:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  42f982:	mov    BYTE PTR [rbp-0x1],al
  42f985:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f989:	je     42f9a2 <flatcc_json_printer_uint8_struct_field@@Base+0x56>
  42f98b:	mov    rax,QWORD PTR [rbp-0x18]
  42f98f:	mov    rax,QWORD PTR [rax+0x28]
  42f993:	lea    rcx,[rax+0x1]
  42f997:	mov    rdx,QWORD PTR [rbp-0x18]
  42f99b:	mov    QWORD PTR [rdx+0x28],rcx
  42f99f:	mov    BYTE PTR [rax],0x2c
  42f9a2:	mov    eax,DWORD PTR [rbp-0x20]
  42f9a5:	movsxd rdx,eax
  42f9a8:	mov    rcx,QWORD PTR [rbp-0x38]
  42f9ac:	mov    rax,QWORD PTR [rbp-0x18]
  42f9b0:	mov    rsi,rcx
  42f9b3:	mov    rdi,rax
  42f9b6:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42f9bb:	mov    rax,QWORD PTR [rbp-0x18]
  42f9bf:	mov    rdx,QWORD PTR [rax+0x28]
  42f9c3:	movzx  eax,BYTE PTR [rbp-0x1]
  42f9c7:	mov    rsi,rdx
  42f9ca:	mov    edi,eax
  42f9cc:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42f9d1:	mov    ecx,eax
  42f9d3:	mov    rax,QWORD PTR [rbp-0x18]
  42f9d7:	mov    rdx,QWORD PTR [rax+0x28]
  42f9db:	movsxd rax,ecx
  42f9de:	add    rdx,rax
  42f9e1:	mov    rax,QWORD PTR [rbp-0x18]
  42f9e5:	mov    QWORD PTR [rax+0x28],rdx
  42f9e9:	nop
  42f9ea:	leave  
  42f9eb:	ret    

000000000042f9ec <flatcc_json_printer_uint16_struct_field@@Base>:
  42f9ec:	endbr64 
  42f9f0:	push   rbp
  42f9f1:	mov    rbp,rsp
  42f9f4:	sub    rsp,0x40
  42f9f8:	mov    QWORD PTR [rbp-0x18],rdi
  42f9fc:	mov    DWORD PTR [rbp-0x1c],esi
  42f9ff:	mov    QWORD PTR [rbp-0x28],rdx
  42fa03:	mov    QWORD PTR [rbp-0x30],rcx
  42fa07:	mov    QWORD PTR [rbp-0x38],r8
  42fa0b:	mov    DWORD PTR [rbp-0x20],r9d
  42fa0f:	mov    rdx,QWORD PTR [rbp-0x28]
  42fa13:	mov    rax,QWORD PTR [rbp-0x30]
  42fa17:	add    rax,rdx
  42fa1a:	mov    rdi,rax
  42fa1d:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  42fa22:	mov    WORD PTR [rbp-0x2],ax
  42fa26:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fa2a:	je     42fa43 <flatcc_json_printer_uint16_struct_field@@Base+0x57>
  42fa2c:	mov    rax,QWORD PTR [rbp-0x18]
  42fa30:	mov    rax,QWORD PTR [rax+0x28]
  42fa34:	lea    rcx,[rax+0x1]
  42fa38:	mov    rdx,QWORD PTR [rbp-0x18]
  42fa3c:	mov    QWORD PTR [rdx+0x28],rcx
  42fa40:	mov    BYTE PTR [rax],0x2c
  42fa43:	mov    eax,DWORD PTR [rbp-0x20]
  42fa46:	movsxd rdx,eax
  42fa49:	mov    rcx,QWORD PTR [rbp-0x38]
  42fa4d:	mov    rax,QWORD PTR [rbp-0x18]
  42fa51:	mov    rsi,rcx
  42fa54:	mov    rdi,rax
  42fa57:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fa5c:	mov    rax,QWORD PTR [rbp-0x18]
  42fa60:	mov    rdx,QWORD PTR [rax+0x28]
  42fa64:	movzx  eax,WORD PTR [rbp-0x2]
  42fa68:	mov    rsi,rdx
  42fa6b:	mov    edi,eax
  42fa6d:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42fa72:	mov    ecx,eax
  42fa74:	mov    rax,QWORD PTR [rbp-0x18]
  42fa78:	mov    rdx,QWORD PTR [rax+0x28]
  42fa7c:	movsxd rax,ecx
  42fa7f:	add    rdx,rax
  42fa82:	mov    rax,QWORD PTR [rbp-0x18]
  42fa86:	mov    QWORD PTR [rax+0x28],rdx
  42fa8a:	nop
  42fa8b:	leave  
  42fa8c:	ret    

000000000042fa8d <flatcc_json_printer_uint32_struct_field@@Base>:
  42fa8d:	endbr64 
  42fa91:	push   rbp
  42fa92:	mov    rbp,rsp
  42fa95:	sub    rsp,0x40
  42fa99:	mov    QWORD PTR [rbp-0x18],rdi
  42fa9d:	mov    DWORD PTR [rbp-0x1c],esi
  42faa0:	mov    QWORD PTR [rbp-0x28],rdx
  42faa4:	mov    QWORD PTR [rbp-0x30],rcx
  42faa8:	mov    QWORD PTR [rbp-0x38],r8
  42faac:	mov    DWORD PTR [rbp-0x20],r9d
  42fab0:	mov    rdx,QWORD PTR [rbp-0x28]
  42fab4:	mov    rax,QWORD PTR [rbp-0x30]
  42fab8:	add    rax,rdx
  42fabb:	mov    rdi,rax
  42fabe:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  42fac3:	mov    DWORD PTR [rbp-0x4],eax
  42fac6:	cmp    DWORD PTR [rbp-0x1c],0x0
  42faca:	je     42fae3 <flatcc_json_printer_uint32_struct_field@@Base+0x56>
  42facc:	mov    rax,QWORD PTR [rbp-0x18]
  42fad0:	mov    rax,QWORD PTR [rax+0x28]
  42fad4:	lea    rcx,[rax+0x1]
  42fad8:	mov    rdx,QWORD PTR [rbp-0x18]
  42fadc:	mov    QWORD PTR [rdx+0x28],rcx
  42fae0:	mov    BYTE PTR [rax],0x2c
  42fae3:	mov    eax,DWORD PTR [rbp-0x20]
  42fae6:	movsxd rdx,eax
  42fae9:	mov    rcx,QWORD PTR [rbp-0x38]
  42faed:	mov    rax,QWORD PTR [rbp-0x18]
  42faf1:	mov    rsi,rcx
  42faf4:	mov    rdi,rax
  42faf7:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fafc:	mov    rax,QWORD PTR [rbp-0x18]
  42fb00:	mov    rdx,QWORD PTR [rax+0x28]
  42fb04:	mov    eax,DWORD PTR [rbp-0x4]
  42fb07:	mov    rsi,rdx
  42fb0a:	mov    edi,eax
  42fb0c:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42fb11:	mov    ecx,eax
  42fb13:	mov    rax,QWORD PTR [rbp-0x18]
  42fb17:	mov    rdx,QWORD PTR [rax+0x28]
  42fb1b:	movsxd rax,ecx
  42fb1e:	add    rdx,rax
  42fb21:	mov    rax,QWORD PTR [rbp-0x18]
  42fb25:	mov    QWORD PTR [rax+0x28],rdx
  42fb29:	nop
  42fb2a:	leave  
  42fb2b:	ret    

000000000042fb2c <flatcc_json_printer_uint64_struct_field@@Base>:
  42fb2c:	endbr64 
  42fb30:	push   rbp
  42fb31:	mov    rbp,rsp
  42fb34:	sub    rsp,0x40
  42fb38:	mov    QWORD PTR [rbp-0x18],rdi
  42fb3c:	mov    DWORD PTR [rbp-0x1c],esi
  42fb3f:	mov    QWORD PTR [rbp-0x28],rdx
  42fb43:	mov    QWORD PTR [rbp-0x30],rcx
  42fb47:	mov    QWORD PTR [rbp-0x38],r8
  42fb4b:	mov    DWORD PTR [rbp-0x20],r9d
  42fb4f:	mov    rdx,QWORD PTR [rbp-0x28]
  42fb53:	mov    rax,QWORD PTR [rbp-0x30]
  42fb57:	add    rax,rdx
  42fb5a:	mov    rdi,rax
  42fb5d:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  42fb62:	mov    QWORD PTR [rbp-0x8],rax
  42fb66:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fb6a:	je     42fb83 <flatcc_json_printer_uint64_struct_field@@Base+0x57>
  42fb6c:	mov    rax,QWORD PTR [rbp-0x18]
  42fb70:	mov    rax,QWORD PTR [rax+0x28]
  42fb74:	lea    rcx,[rax+0x1]
  42fb78:	mov    rdx,QWORD PTR [rbp-0x18]
  42fb7c:	mov    QWORD PTR [rdx+0x28],rcx
  42fb80:	mov    BYTE PTR [rax],0x2c
  42fb83:	mov    eax,DWORD PTR [rbp-0x20]
  42fb86:	movsxd rdx,eax
  42fb89:	mov    rcx,QWORD PTR [rbp-0x38]
  42fb8d:	mov    rax,QWORD PTR [rbp-0x18]
  42fb91:	mov    rsi,rcx
  42fb94:	mov    rdi,rax
  42fb97:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fb9c:	mov    rax,QWORD PTR [rbp-0x18]
  42fba0:	mov    rdx,QWORD PTR [rax+0x28]
  42fba4:	mov    rax,QWORD PTR [rbp-0x8]
  42fba8:	mov    rsi,rdx
  42fbab:	mov    rdi,rax
  42fbae:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42fbb3:	mov    ecx,eax
  42fbb5:	mov    rax,QWORD PTR [rbp-0x18]
  42fbb9:	mov    rdx,QWORD PTR [rax+0x28]
  42fbbd:	movsxd rax,ecx
  42fbc0:	add    rdx,rax
  42fbc3:	mov    rax,QWORD PTR [rbp-0x18]
  42fbc7:	mov    QWORD PTR [rax+0x28],rdx
  42fbcb:	nop
  42fbcc:	leave  
  42fbcd:	ret    

000000000042fbce <flatcc_json_printer_int8_struct_field@@Base>:
  42fbce:	endbr64 
  42fbd2:	push   rbp
  42fbd3:	mov    rbp,rsp
  42fbd6:	sub    rsp,0x40
  42fbda:	mov    QWORD PTR [rbp-0x18],rdi
  42fbde:	mov    DWORD PTR [rbp-0x1c],esi
  42fbe1:	mov    QWORD PTR [rbp-0x28],rdx
  42fbe5:	mov    QWORD PTR [rbp-0x30],rcx
  42fbe9:	mov    QWORD PTR [rbp-0x38],r8
  42fbed:	mov    DWORD PTR [rbp-0x20],r9d
  42fbf1:	mov    rdx,QWORD PTR [rbp-0x28]
  42fbf5:	mov    rax,QWORD PTR [rbp-0x30]
  42fbf9:	add    rax,rdx
  42fbfc:	mov    rdi,rax
  42fbff:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  42fc04:	mov    BYTE PTR [rbp-0x1],al
  42fc07:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fc0b:	je     42fc24 <flatcc_json_printer_int8_struct_field@@Base+0x56>
  42fc0d:	mov    rax,QWORD PTR [rbp-0x18]
  42fc11:	mov    rax,QWORD PTR [rax+0x28]
  42fc15:	lea    rcx,[rax+0x1]
  42fc19:	mov    rdx,QWORD PTR [rbp-0x18]
  42fc1d:	mov    QWORD PTR [rdx+0x28],rcx
  42fc21:	mov    BYTE PTR [rax],0x2c
  42fc24:	mov    eax,DWORD PTR [rbp-0x20]
  42fc27:	movsxd rdx,eax
  42fc2a:	mov    rcx,QWORD PTR [rbp-0x38]
  42fc2e:	mov    rax,QWORD PTR [rbp-0x18]
  42fc32:	mov    rsi,rcx
  42fc35:	mov    rdi,rax
  42fc38:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fc3d:	mov    rax,QWORD PTR [rbp-0x18]
  42fc41:	mov    rdx,QWORD PTR [rax+0x28]
  42fc45:	movsx  eax,BYTE PTR [rbp-0x1]
  42fc49:	mov    rsi,rdx
  42fc4c:	mov    edi,eax
  42fc4e:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42fc53:	mov    ecx,eax
  42fc55:	mov    rax,QWORD PTR [rbp-0x18]
  42fc59:	mov    rdx,QWORD PTR [rax+0x28]
  42fc5d:	movsxd rax,ecx
  42fc60:	add    rdx,rax
  42fc63:	mov    rax,QWORD PTR [rbp-0x18]
  42fc67:	mov    QWORD PTR [rax+0x28],rdx
  42fc6b:	nop
  42fc6c:	leave  
  42fc6d:	ret    

000000000042fc6e <flatcc_json_printer_int16_struct_field@@Base>:
  42fc6e:	endbr64 
  42fc72:	push   rbp
  42fc73:	mov    rbp,rsp
  42fc76:	sub    rsp,0x40
  42fc7a:	mov    QWORD PTR [rbp-0x18],rdi
  42fc7e:	mov    DWORD PTR [rbp-0x1c],esi
  42fc81:	mov    QWORD PTR [rbp-0x28],rdx
  42fc85:	mov    QWORD PTR [rbp-0x30],rcx
  42fc89:	mov    QWORD PTR [rbp-0x38],r8
  42fc8d:	mov    DWORD PTR [rbp-0x20],r9d
  42fc91:	mov    rdx,QWORD PTR [rbp-0x28]
  42fc95:	mov    rax,QWORD PTR [rbp-0x30]
  42fc99:	add    rax,rdx
  42fc9c:	mov    rdi,rax
  42fc9f:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  42fca4:	mov    WORD PTR [rbp-0x2],ax
  42fca8:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fcac:	je     42fcc5 <flatcc_json_printer_int16_struct_field@@Base+0x57>
  42fcae:	mov    rax,QWORD PTR [rbp-0x18]
  42fcb2:	mov    rax,QWORD PTR [rax+0x28]
  42fcb6:	lea    rcx,[rax+0x1]
  42fcba:	mov    rdx,QWORD PTR [rbp-0x18]
  42fcbe:	mov    QWORD PTR [rdx+0x28],rcx
  42fcc2:	mov    BYTE PTR [rax],0x2c
  42fcc5:	mov    eax,DWORD PTR [rbp-0x20]
  42fcc8:	movsxd rdx,eax
  42fccb:	mov    rcx,QWORD PTR [rbp-0x38]
  42fccf:	mov    rax,QWORD PTR [rbp-0x18]
  42fcd3:	mov    rsi,rcx
  42fcd6:	mov    rdi,rax
  42fcd9:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fcde:	mov    rax,QWORD PTR [rbp-0x18]
  42fce2:	mov    rdx,QWORD PTR [rax+0x28]
  42fce6:	movsx  eax,WORD PTR [rbp-0x2]
  42fcea:	mov    rsi,rdx
  42fced:	mov    edi,eax
  42fcef:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42fcf4:	mov    ecx,eax
  42fcf6:	mov    rax,QWORD PTR [rbp-0x18]
  42fcfa:	mov    rdx,QWORD PTR [rax+0x28]
  42fcfe:	movsxd rax,ecx
  42fd01:	add    rdx,rax
  42fd04:	mov    rax,QWORD PTR [rbp-0x18]
  42fd08:	mov    QWORD PTR [rax+0x28],rdx
  42fd0c:	nop
  42fd0d:	leave  
  42fd0e:	ret    

000000000042fd0f <flatcc_json_printer_int32_struct_field@@Base>:
  42fd0f:	endbr64 
  42fd13:	push   rbp
  42fd14:	mov    rbp,rsp
  42fd17:	sub    rsp,0x40
  42fd1b:	mov    QWORD PTR [rbp-0x18],rdi
  42fd1f:	mov    DWORD PTR [rbp-0x1c],esi
  42fd22:	mov    QWORD PTR [rbp-0x28],rdx
  42fd26:	mov    QWORD PTR [rbp-0x30],rcx
  42fd2a:	mov    QWORD PTR [rbp-0x38],r8
  42fd2e:	mov    DWORD PTR [rbp-0x20],r9d
  42fd32:	mov    rdx,QWORD PTR [rbp-0x28]
  42fd36:	mov    rax,QWORD PTR [rbp-0x30]
  42fd3a:	add    rax,rdx
  42fd3d:	mov    rdi,rax
  42fd40:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  42fd45:	mov    DWORD PTR [rbp-0x4],eax
  42fd48:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fd4c:	je     42fd65 <flatcc_json_printer_int32_struct_field@@Base+0x56>
  42fd4e:	mov    rax,QWORD PTR [rbp-0x18]
  42fd52:	mov    rax,QWORD PTR [rax+0x28]
  42fd56:	lea    rcx,[rax+0x1]
  42fd5a:	mov    rdx,QWORD PTR [rbp-0x18]
  42fd5e:	mov    QWORD PTR [rdx+0x28],rcx
  42fd62:	mov    BYTE PTR [rax],0x2c
  42fd65:	mov    eax,DWORD PTR [rbp-0x20]
  42fd68:	movsxd rdx,eax
  42fd6b:	mov    rcx,QWORD PTR [rbp-0x38]
  42fd6f:	mov    rax,QWORD PTR [rbp-0x18]
  42fd73:	mov    rsi,rcx
  42fd76:	mov    rdi,rax
  42fd79:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fd7e:	mov    rax,QWORD PTR [rbp-0x18]
  42fd82:	mov    rdx,QWORD PTR [rax+0x28]
  42fd86:	mov    eax,DWORD PTR [rbp-0x4]
  42fd89:	mov    rsi,rdx
  42fd8c:	mov    edi,eax
  42fd8e:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42fd93:	mov    ecx,eax
  42fd95:	mov    rax,QWORD PTR [rbp-0x18]
  42fd99:	mov    rdx,QWORD PTR [rax+0x28]
  42fd9d:	movsxd rax,ecx
  42fda0:	add    rdx,rax
  42fda3:	mov    rax,QWORD PTR [rbp-0x18]
  42fda7:	mov    QWORD PTR [rax+0x28],rdx
  42fdab:	nop
  42fdac:	leave  
  42fdad:	ret    

000000000042fdae <flatcc_json_printer_int64_struct_field@@Base>:
  42fdae:	endbr64 
  42fdb2:	push   rbp
  42fdb3:	mov    rbp,rsp
  42fdb6:	sub    rsp,0x40
  42fdba:	mov    QWORD PTR [rbp-0x18],rdi
  42fdbe:	mov    DWORD PTR [rbp-0x1c],esi
  42fdc1:	mov    QWORD PTR [rbp-0x28],rdx
  42fdc5:	mov    QWORD PTR [rbp-0x30],rcx
  42fdc9:	mov    QWORD PTR [rbp-0x38],r8
  42fdcd:	mov    DWORD PTR [rbp-0x20],r9d
  42fdd1:	mov    rdx,QWORD PTR [rbp-0x28]
  42fdd5:	mov    rax,QWORD PTR [rbp-0x30]
  42fdd9:	add    rax,rdx
  42fddc:	mov    rdi,rax
  42fddf:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  42fde4:	mov    QWORD PTR [rbp-0x8],rax
  42fde8:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fdec:	je     42fe05 <flatcc_json_printer_int64_struct_field@@Base+0x57>
  42fdee:	mov    rax,QWORD PTR [rbp-0x18]
  42fdf2:	mov    rax,QWORD PTR [rax+0x28]
  42fdf6:	lea    rcx,[rax+0x1]
  42fdfa:	mov    rdx,QWORD PTR [rbp-0x18]
  42fdfe:	mov    QWORD PTR [rdx+0x28],rcx
  42fe02:	mov    BYTE PTR [rax],0x2c
  42fe05:	mov    eax,DWORD PTR [rbp-0x20]
  42fe08:	movsxd rdx,eax
  42fe0b:	mov    rcx,QWORD PTR [rbp-0x38]
  42fe0f:	mov    rax,QWORD PTR [rbp-0x18]
  42fe13:	mov    rsi,rcx
  42fe16:	mov    rdi,rax
  42fe19:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42fe1e:	mov    rax,QWORD PTR [rbp-0x18]
  42fe22:	mov    rdx,QWORD PTR [rax+0x28]
  42fe26:	mov    rax,QWORD PTR [rbp-0x8]
  42fe2a:	mov    rsi,rdx
  42fe2d:	mov    rdi,rax
  42fe30:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42fe35:	mov    ecx,eax
  42fe37:	mov    rax,QWORD PTR [rbp-0x18]
  42fe3b:	mov    rdx,QWORD PTR [rax+0x28]
  42fe3f:	movsxd rax,ecx
  42fe42:	add    rdx,rax
  42fe45:	mov    rax,QWORD PTR [rbp-0x18]
  42fe49:	mov    QWORD PTR [rax+0x28],rdx
  42fe4d:	nop
  42fe4e:	leave  
  42fe4f:	ret    

000000000042fe50 <flatcc_json_printer_bool_struct_field@@Base>:
  42fe50:	endbr64 
  42fe54:	push   rbp
  42fe55:	mov    rbp,rsp
  42fe58:	sub    rsp,0x40
  42fe5c:	mov    QWORD PTR [rbp-0x18],rdi
  42fe60:	mov    DWORD PTR [rbp-0x1c],esi
  42fe63:	mov    QWORD PTR [rbp-0x28],rdx
  42fe67:	mov    QWORD PTR [rbp-0x30],rcx
  42fe6b:	mov    QWORD PTR [rbp-0x38],r8
  42fe6f:	mov    DWORD PTR [rbp-0x20],r9d
  42fe73:	mov    rdx,QWORD PTR [rbp-0x28]
  42fe77:	mov    rax,QWORD PTR [rbp-0x30]
  42fe7b:	add    rax,rdx
  42fe7e:	mov    rdi,rax
  42fe81:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  42fe86:	mov    BYTE PTR [rbp-0x1],al
  42fe89:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fe8d:	je     42fea6 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  42fe8f:	mov    rax,QWORD PTR [rbp-0x18]
  42fe93:	mov    rax,QWORD PTR [rax+0x28]
  42fe97:	lea    rcx,[rax+0x1]
  42fe9b:	mov    rdx,QWORD PTR [rbp-0x18]
  42fe9f:	mov    QWORD PTR [rdx+0x28],rcx
  42fea3:	mov    BYTE PTR [rax],0x2c
  42fea6:	mov    eax,DWORD PTR [rbp-0x20]
  42fea9:	movsxd rdx,eax
  42feac:	mov    rcx,QWORD PTR [rbp-0x38]
  42feb0:	mov    rax,QWORD PTR [rbp-0x18]
  42feb4:	mov    rsi,rcx
  42feb7:	mov    rdi,rax
  42feba:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42febf:	mov    rax,QWORD PTR [rbp-0x18]
  42fec3:	mov    rdx,QWORD PTR [rax+0x28]
  42fec7:	movzx  eax,BYTE PTR [rbp-0x1]
  42fecb:	mov    rsi,rdx
  42fece:	mov    edi,eax
  42fed0:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  42fed5:	mov    ecx,eax
  42fed7:	mov    rax,QWORD PTR [rbp-0x18]
  42fedb:	mov    rdx,QWORD PTR [rax+0x28]
  42fedf:	movsxd rax,ecx
  42fee2:	add    rdx,rax
  42fee5:	mov    rax,QWORD PTR [rbp-0x18]
  42fee9:	mov    QWORD PTR [rax+0x28],rdx
  42feed:	nop
  42feee:	leave  
  42feef:	ret    

000000000042fef0 <flatcc_json_printer_float_struct_field@@Base>:
  42fef0:	endbr64 
  42fef4:	push   rbp
  42fef5:	mov    rbp,rsp
  42fef8:	sub    rsp,0x40
  42fefc:	mov    QWORD PTR [rbp-0x18],rdi
  42ff00:	mov    DWORD PTR [rbp-0x1c],esi
  42ff03:	mov    QWORD PTR [rbp-0x28],rdx
  42ff07:	mov    QWORD PTR [rbp-0x30],rcx
  42ff0b:	mov    QWORD PTR [rbp-0x38],r8
  42ff0f:	mov    DWORD PTR [rbp-0x20],r9d
  42ff13:	mov    rdx,QWORD PTR [rbp-0x28]
  42ff17:	mov    rax,QWORD PTR [rbp-0x30]
  42ff1b:	add    rax,rdx
  42ff1e:	mov    rdi,rax
  42ff21:	call   429fea <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  42ff26:	vmovd  eax,xmm0
  42ff2a:	mov    DWORD PTR [rbp-0x4],eax
  42ff2d:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ff31:	je     42ff4a <flatcc_json_printer_float_struct_field@@Base+0x5a>
  42ff33:	mov    rax,QWORD PTR [rbp-0x18]
  42ff37:	mov    rax,QWORD PTR [rax+0x28]
  42ff3b:	lea    rcx,[rax+0x1]
  42ff3f:	mov    rdx,QWORD PTR [rbp-0x18]
  42ff43:	mov    QWORD PTR [rdx+0x28],rcx
  42ff47:	mov    BYTE PTR [rax],0x2c
  42ff4a:	mov    eax,DWORD PTR [rbp-0x20]
  42ff4d:	movsxd rdx,eax
  42ff50:	mov    rcx,QWORD PTR [rbp-0x38]
  42ff54:	mov    rax,QWORD PTR [rbp-0x18]
  42ff58:	mov    rsi,rcx
  42ff5b:	mov    rdi,rax
  42ff5e:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  42ff63:	mov    rax,QWORD PTR [rbp-0x18]
  42ff67:	mov    rdx,QWORD PTR [rax+0x28]
  42ff6b:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0x4]
  42ff70:	vmovq  rax,xmm1
  42ff75:	mov    rdi,rdx
  42ff78:	vmovq  xmm0,rax
  42ff7d:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42ff82:	mov    ecx,eax
  42ff84:	mov    rax,QWORD PTR [rbp-0x18]
  42ff88:	mov    rdx,QWORD PTR [rax+0x28]
  42ff8c:	movsxd rax,ecx
  42ff8f:	add    rdx,rax
  42ff92:	mov    rax,QWORD PTR [rbp-0x18]
  42ff96:	mov    QWORD PTR [rax+0x28],rdx
  42ff9a:	nop
  42ff9b:	leave  
  42ff9c:	ret    

000000000042ff9d <flatcc_json_printer_double_struct_field@@Base>:
  42ff9d:	endbr64 
  42ffa1:	push   rbp
  42ffa2:	mov    rbp,rsp
  42ffa5:	sub    rsp,0x40
  42ffa9:	mov    QWORD PTR [rbp-0x18],rdi
  42ffad:	mov    DWORD PTR [rbp-0x1c],esi
  42ffb0:	mov    QWORD PTR [rbp-0x28],rdx
  42ffb4:	mov    QWORD PTR [rbp-0x30],rcx
  42ffb8:	mov    QWORD PTR [rbp-0x38],r8
  42ffbc:	mov    DWORD PTR [rbp-0x20],r9d
  42ffc0:	mov    rdx,QWORD PTR [rbp-0x28]
  42ffc4:	mov    rax,QWORD PTR [rbp-0x30]
  42ffc8:	add    rax,rdx
  42ffcb:	mov    rdi,rax
  42ffce:	call   42a033 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  42ffd3:	vmovq  rax,xmm0
  42ffd8:	mov    QWORD PTR [rbp-0x8],rax
  42ffdc:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ffe0:	je     42fff9 <flatcc_json_printer_double_struct_field@@Base+0x5c>
  42ffe2:	mov    rax,QWORD PTR [rbp-0x18]
  42ffe6:	mov    rax,QWORD PTR [rax+0x28]
  42ffea:	lea    rcx,[rax+0x1]
  42ffee:	mov    rdx,QWORD PTR [rbp-0x18]
  42fff2:	mov    QWORD PTR [rdx+0x28],rcx
  42fff6:	mov    BYTE PTR [rax],0x2c
  42fff9:	mov    eax,DWORD PTR [rbp-0x20]
  42fffc:	movsxd rdx,eax
  42ffff:	mov    rcx,QWORD PTR [rbp-0x38]
  430003:	mov    rax,QWORD PTR [rbp-0x18]
  430007:	mov    rsi,rcx
  43000a:	mov    rdi,rax
  43000d:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430012:	mov    rax,QWORD PTR [rbp-0x18]
  430016:	mov    rdx,QWORD PTR [rax+0x28]
  43001a:	mov    rax,QWORD PTR [rbp-0x8]
  43001e:	mov    rdi,rdx
  430021:	vmovq  xmm0,rax
  430026:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  43002b:	mov    ecx,eax
  43002d:	mov    rax,QWORD PTR [rbp-0x18]
  430031:	mov    rdx,QWORD PTR [rax+0x28]
  430035:	movsxd rax,ecx
  430038:	add    rdx,rax
  43003b:	mov    rax,QWORD PTR [rbp-0x18]
  43003f:	mov    QWORD PTR [rax+0x28],rdx
  430043:	nop
  430044:	leave  
  430045:	ret    

0000000000430046 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  430046:	endbr64 
  43004a:	push   rbp
  43004b:	mov    rbp,rsp
  43004e:	sub    rsp,0x40
  430052:	mov    QWORD PTR [rbp-0x18],rdi
  430056:	mov    DWORD PTR [rbp-0x1c],esi
  430059:	mov    QWORD PTR [rbp-0x28],rdx
  43005d:	mov    QWORD PTR [rbp-0x30],rcx
  430061:	mov    QWORD PTR [rbp-0x38],r8
  430065:	mov    DWORD PTR [rbp-0x20],r9d
  430069:	mov    rdx,QWORD PTR [rbp-0x28]
  43006d:	mov    rax,QWORD PTR [rbp-0x30]
  430071:	add    rax,rdx
  430074:	mov    rdi,rax
  430077:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  43007c:	mov    BYTE PTR [rbp-0x1],al
  43007f:	cmp    DWORD PTR [rbp-0x1c],0x0
  430083:	je     43009c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x56>
  430085:	mov    rax,QWORD PTR [rbp-0x18]
  430089:	mov    rax,QWORD PTR [rax+0x28]
  43008d:	lea    rcx,[rax+0x1]
  430091:	mov    rdx,QWORD PTR [rbp-0x18]
  430095:	mov    QWORD PTR [rdx+0x28],rcx
  430099:	mov    BYTE PTR [rax],0x2c
  43009c:	mov    eax,DWORD PTR [rbp-0x20]
  43009f:	movsxd rdx,eax
  4300a2:	mov    rcx,QWORD PTR [rbp-0x38]
  4300a6:	mov    rax,QWORD PTR [rbp-0x18]
  4300aa:	mov    rsi,rcx
  4300ad:	mov    rdi,rax
  4300b0:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4300b5:	mov    rax,QWORD PTR [rbp-0x18]
  4300b9:	movzx  eax,BYTE PTR [rax+0x33]
  4300bd:	test   al,al
  4300bf:	je     4300f1 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xab>
  4300c1:	mov    rax,QWORD PTR [rbp-0x18]
  4300c5:	mov    rdx,QWORD PTR [rax+0x28]
  4300c9:	movzx  eax,BYTE PTR [rbp-0x1]
  4300cd:	mov    rsi,rdx
  4300d0:	mov    edi,eax
  4300d2:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  4300d7:	mov    ecx,eax
  4300d9:	mov    rax,QWORD PTR [rbp-0x18]
  4300dd:	mov    rdx,QWORD PTR [rax+0x28]
  4300e1:	movsxd rax,ecx
  4300e4:	add    rdx,rax
  4300e7:	mov    rax,QWORD PTR [rbp-0x18]
  4300eb:	mov    QWORD PTR [rax+0x28],rdx
  4300ef:	jmp    430104 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbe>
  4300f1:	movzx  ecx,BYTE PTR [rbp-0x1]
  4300f5:	mov    rdx,QWORD PTR [rbp-0x18]
  4300f9:	mov    rax,QWORD PTR [rbp+0x10]
  4300fd:	mov    esi,ecx
  4300ff:	mov    rdi,rdx
  430102:	call   rax
  430104:	nop
  430105:	leave  
  430106:	ret    

0000000000430107 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  430107:	endbr64 
  43010b:	push   rbp
  43010c:	mov    rbp,rsp
  43010f:	sub    rsp,0x40
  430113:	mov    QWORD PTR [rbp-0x18],rdi
  430117:	mov    DWORD PTR [rbp-0x1c],esi
  43011a:	mov    QWORD PTR [rbp-0x28],rdx
  43011e:	mov    QWORD PTR [rbp-0x30],rcx
  430122:	mov    QWORD PTR [rbp-0x38],r8
  430126:	mov    DWORD PTR [rbp-0x20],r9d
  43012a:	mov    rdx,QWORD PTR [rbp-0x28]
  43012e:	mov    rax,QWORD PTR [rbp-0x30]
  430132:	add    rax,rdx
  430135:	mov    rdi,rax
  430138:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  43013d:	mov    WORD PTR [rbp-0x2],ax
  430141:	cmp    DWORD PTR [rbp-0x1c],0x0
  430145:	je     43015e <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  430147:	mov    rax,QWORD PTR [rbp-0x18]
  43014b:	mov    rax,QWORD PTR [rax+0x28]
  43014f:	lea    rcx,[rax+0x1]
  430153:	mov    rdx,QWORD PTR [rbp-0x18]
  430157:	mov    QWORD PTR [rdx+0x28],rcx
  43015b:	mov    BYTE PTR [rax],0x2c
  43015e:	mov    eax,DWORD PTR [rbp-0x20]
  430161:	movsxd rdx,eax
  430164:	mov    rcx,QWORD PTR [rbp-0x38]
  430168:	mov    rax,QWORD PTR [rbp-0x18]
  43016c:	mov    rsi,rcx
  43016f:	mov    rdi,rax
  430172:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430177:	mov    rax,QWORD PTR [rbp-0x18]
  43017b:	movzx  eax,BYTE PTR [rax+0x33]
  43017f:	test   al,al
  430181:	je     4301b3 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xac>
  430183:	mov    rax,QWORD PTR [rbp-0x18]
  430187:	mov    rdx,QWORD PTR [rax+0x28]
  43018b:	movzx  eax,WORD PTR [rbp-0x2]
  43018f:	mov    rsi,rdx
  430192:	mov    edi,eax
  430194:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  430199:	mov    ecx,eax
  43019b:	mov    rax,QWORD PTR [rbp-0x18]
  43019f:	mov    rdx,QWORD PTR [rax+0x28]
  4301a3:	movsxd rax,ecx
  4301a6:	add    rdx,rax
  4301a9:	mov    rax,QWORD PTR [rbp-0x18]
  4301ad:	mov    QWORD PTR [rax+0x28],rdx
  4301b1:	jmp    4301c6 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbf>
  4301b3:	movzx  ecx,WORD PTR [rbp-0x2]
  4301b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4301bb:	mov    rax,QWORD PTR [rbp+0x10]
  4301bf:	mov    esi,ecx
  4301c1:	mov    rdi,rdx
  4301c4:	call   rax
  4301c6:	nop
  4301c7:	leave  
  4301c8:	ret    

00000000004301c9 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  4301c9:	endbr64 
  4301cd:	push   rbp
  4301ce:	mov    rbp,rsp
  4301d1:	sub    rsp,0x40
  4301d5:	mov    QWORD PTR [rbp-0x18],rdi
  4301d9:	mov    DWORD PTR [rbp-0x1c],esi
  4301dc:	mov    QWORD PTR [rbp-0x28],rdx
  4301e0:	mov    QWORD PTR [rbp-0x30],rcx
  4301e4:	mov    QWORD PTR [rbp-0x38],r8
  4301e8:	mov    DWORD PTR [rbp-0x20],r9d
  4301ec:	mov    rdx,QWORD PTR [rbp-0x28]
  4301f0:	mov    rax,QWORD PTR [rbp-0x30]
  4301f4:	add    rax,rdx
  4301f7:	mov    rdi,rax
  4301fa:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  4301ff:	mov    DWORD PTR [rbp-0x4],eax
  430202:	cmp    DWORD PTR [rbp-0x1c],0x0
  430206:	je     43021f <flatcc_json_printer_uint32_enum_struct_field@@Base+0x56>
  430208:	mov    rax,QWORD PTR [rbp-0x18]
  43020c:	mov    rax,QWORD PTR [rax+0x28]
  430210:	lea    rcx,[rax+0x1]
  430214:	mov    rdx,QWORD PTR [rbp-0x18]
  430218:	mov    QWORD PTR [rdx+0x28],rcx
  43021c:	mov    BYTE PTR [rax],0x2c
  43021f:	mov    eax,DWORD PTR [rbp-0x20]
  430222:	movsxd rdx,eax
  430225:	mov    rcx,QWORD PTR [rbp-0x38]
  430229:	mov    rax,QWORD PTR [rbp-0x18]
  43022d:	mov    rsi,rcx
  430230:	mov    rdi,rax
  430233:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430238:	mov    rax,QWORD PTR [rbp-0x18]
  43023c:	movzx  eax,BYTE PTR [rax+0x33]
  430240:	test   al,al
  430242:	je     430273 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xaa>
  430244:	mov    rax,QWORD PTR [rbp-0x18]
  430248:	mov    rdx,QWORD PTR [rax+0x28]
  43024c:	mov    eax,DWORD PTR [rbp-0x4]
  43024f:	mov    rsi,rdx
  430252:	mov    edi,eax
  430254:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  430259:	mov    ecx,eax
  43025b:	mov    rax,QWORD PTR [rbp-0x18]
  43025f:	mov    rdx,QWORD PTR [rax+0x28]
  430263:	movsxd rax,ecx
  430266:	add    rdx,rax
  430269:	mov    rax,QWORD PTR [rbp-0x18]
  43026d:	mov    QWORD PTR [rax+0x28],rdx
  430271:	jmp    430285 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xbc>
  430273:	mov    ecx,DWORD PTR [rbp-0x4]
  430276:	mov    rdx,QWORD PTR [rbp-0x18]
  43027a:	mov    rax,QWORD PTR [rbp+0x10]
  43027e:	mov    esi,ecx
  430280:	mov    rdi,rdx
  430283:	call   rax
  430285:	nop
  430286:	leave  
  430287:	ret    

0000000000430288 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  430288:	endbr64 
  43028c:	push   rbp
  43028d:	mov    rbp,rsp
  430290:	sub    rsp,0x40
  430294:	mov    QWORD PTR [rbp-0x18],rdi
  430298:	mov    DWORD PTR [rbp-0x1c],esi
  43029b:	mov    QWORD PTR [rbp-0x28],rdx
  43029f:	mov    QWORD PTR [rbp-0x30],rcx
  4302a3:	mov    QWORD PTR [rbp-0x38],r8
  4302a7:	mov    DWORD PTR [rbp-0x20],r9d
  4302ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4302af:	mov    rax,QWORD PTR [rbp-0x30]
  4302b3:	add    rax,rdx
  4302b6:	mov    rdi,rax
  4302b9:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  4302be:	mov    QWORD PTR [rbp-0x8],rax
  4302c2:	cmp    DWORD PTR [rbp-0x1c],0x0
  4302c6:	je     4302df <flatcc_json_printer_uint64_enum_struct_field@@Base+0x57>
  4302c8:	mov    rax,QWORD PTR [rbp-0x18]
  4302cc:	mov    rax,QWORD PTR [rax+0x28]
  4302d0:	lea    rcx,[rax+0x1]
  4302d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4302d8:	mov    QWORD PTR [rdx+0x28],rcx
  4302dc:	mov    BYTE PTR [rax],0x2c
  4302df:	mov    eax,DWORD PTR [rbp-0x20]
  4302e2:	movsxd rdx,eax
  4302e5:	mov    rcx,QWORD PTR [rbp-0x38]
  4302e9:	mov    rax,QWORD PTR [rbp-0x18]
  4302ed:	mov    rsi,rcx
  4302f0:	mov    rdi,rax
  4302f3:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4302f8:	mov    rax,QWORD PTR [rbp-0x18]
  4302fc:	movzx  eax,BYTE PTR [rax+0x33]
  430300:	test   al,al
  430302:	je     430335 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xad>
  430304:	mov    rax,QWORD PTR [rbp-0x18]
  430308:	mov    rdx,QWORD PTR [rax+0x28]
  43030c:	mov    rax,QWORD PTR [rbp-0x8]
  430310:	mov    rsi,rdx
  430313:	mov    rdi,rax
  430316:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  43031b:	mov    ecx,eax
  43031d:	mov    rax,QWORD PTR [rbp-0x18]
  430321:	mov    rdx,QWORD PTR [rax+0x28]
  430325:	movsxd rax,ecx
  430328:	add    rdx,rax
  43032b:	mov    rax,QWORD PTR [rbp-0x18]
  43032f:	mov    QWORD PTR [rax+0x28],rdx
  430333:	jmp    430349 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc1>
  430335:	mov    rcx,QWORD PTR [rbp-0x8]
  430339:	mov    rdx,QWORD PTR [rbp-0x18]
  43033d:	mov    rax,QWORD PTR [rbp+0x10]
  430341:	mov    rsi,rcx
  430344:	mov    rdi,rdx
  430347:	call   rax
  430349:	nop
  43034a:	leave  
  43034b:	ret    

000000000043034c <flatcc_json_printer_int8_enum_struct_field@@Base>:
  43034c:	endbr64 
  430350:	push   rbp
  430351:	mov    rbp,rsp
  430354:	sub    rsp,0x40
  430358:	mov    QWORD PTR [rbp-0x18],rdi
  43035c:	mov    DWORD PTR [rbp-0x1c],esi
  43035f:	mov    QWORD PTR [rbp-0x28],rdx
  430363:	mov    QWORD PTR [rbp-0x30],rcx
  430367:	mov    QWORD PTR [rbp-0x38],r8
  43036b:	mov    DWORD PTR [rbp-0x20],r9d
  43036f:	mov    rdx,QWORD PTR [rbp-0x28]
  430373:	mov    rax,QWORD PTR [rbp-0x30]
  430377:	add    rax,rdx
  43037a:	mov    rdi,rax
  43037d:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  430382:	mov    BYTE PTR [rbp-0x1],al
  430385:	cmp    DWORD PTR [rbp-0x1c],0x0
  430389:	je     4303a2 <flatcc_json_printer_int8_enum_struct_field@@Base+0x56>
  43038b:	mov    rax,QWORD PTR [rbp-0x18]
  43038f:	mov    rax,QWORD PTR [rax+0x28]
  430393:	lea    rcx,[rax+0x1]
  430397:	mov    rdx,QWORD PTR [rbp-0x18]
  43039b:	mov    QWORD PTR [rdx+0x28],rcx
  43039f:	mov    BYTE PTR [rax],0x2c
  4303a2:	mov    eax,DWORD PTR [rbp-0x20]
  4303a5:	movsxd rdx,eax
  4303a8:	mov    rcx,QWORD PTR [rbp-0x38]
  4303ac:	mov    rax,QWORD PTR [rbp-0x18]
  4303b0:	mov    rsi,rcx
  4303b3:	mov    rdi,rax
  4303b6:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4303bb:	mov    rax,QWORD PTR [rbp-0x18]
  4303bf:	movzx  eax,BYTE PTR [rax+0x33]
  4303c3:	test   al,al
  4303c5:	je     4303f7 <flatcc_json_printer_int8_enum_struct_field@@Base+0xab>
  4303c7:	mov    rax,QWORD PTR [rbp-0x18]
  4303cb:	mov    rdx,QWORD PTR [rax+0x28]
  4303cf:	movsx  eax,BYTE PTR [rbp-0x1]
  4303d3:	mov    rsi,rdx
  4303d6:	mov    edi,eax
  4303d8:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  4303dd:	mov    ecx,eax
  4303df:	mov    rax,QWORD PTR [rbp-0x18]
  4303e3:	mov    rdx,QWORD PTR [rax+0x28]
  4303e7:	movsxd rax,ecx
  4303ea:	add    rdx,rax
  4303ed:	mov    rax,QWORD PTR [rbp-0x18]
  4303f1:	mov    QWORD PTR [rax+0x28],rdx
  4303f5:	jmp    43040a <flatcc_json_printer_int8_enum_struct_field@@Base+0xbe>
  4303f7:	movsx  ecx,BYTE PTR [rbp-0x1]
  4303fb:	mov    rdx,QWORD PTR [rbp-0x18]
  4303ff:	mov    rax,QWORD PTR [rbp+0x10]
  430403:	mov    esi,ecx
  430405:	mov    rdi,rdx
  430408:	call   rax
  43040a:	nop
  43040b:	leave  
  43040c:	ret    

000000000043040d <flatcc_json_printer_int16_enum_struct_field@@Base>:
  43040d:	endbr64 
  430411:	push   rbp
  430412:	mov    rbp,rsp
  430415:	sub    rsp,0x40
  430419:	mov    QWORD PTR [rbp-0x18],rdi
  43041d:	mov    DWORD PTR [rbp-0x1c],esi
  430420:	mov    QWORD PTR [rbp-0x28],rdx
  430424:	mov    QWORD PTR [rbp-0x30],rcx
  430428:	mov    QWORD PTR [rbp-0x38],r8
  43042c:	mov    DWORD PTR [rbp-0x20],r9d
  430430:	mov    rdx,QWORD PTR [rbp-0x28]
  430434:	mov    rax,QWORD PTR [rbp-0x30]
  430438:	add    rax,rdx
  43043b:	mov    rdi,rax
  43043e:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  430443:	mov    WORD PTR [rbp-0x2],ax
  430447:	cmp    DWORD PTR [rbp-0x1c],0x0
  43044b:	je     430464 <flatcc_json_printer_int16_enum_struct_field@@Base+0x57>
  43044d:	mov    rax,QWORD PTR [rbp-0x18]
  430451:	mov    rax,QWORD PTR [rax+0x28]
  430455:	lea    rcx,[rax+0x1]
  430459:	mov    rdx,QWORD PTR [rbp-0x18]
  43045d:	mov    QWORD PTR [rdx+0x28],rcx
  430461:	mov    BYTE PTR [rax],0x2c
  430464:	mov    eax,DWORD PTR [rbp-0x20]
  430467:	movsxd rdx,eax
  43046a:	mov    rcx,QWORD PTR [rbp-0x38]
  43046e:	mov    rax,QWORD PTR [rbp-0x18]
  430472:	mov    rsi,rcx
  430475:	mov    rdi,rax
  430478:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43047d:	mov    rax,QWORD PTR [rbp-0x18]
  430481:	movzx  eax,BYTE PTR [rax+0x33]
  430485:	test   al,al
  430487:	je     4304b9 <flatcc_json_printer_int16_enum_struct_field@@Base+0xac>
  430489:	mov    rax,QWORD PTR [rbp-0x18]
  43048d:	mov    rdx,QWORD PTR [rax+0x28]
  430491:	movsx  eax,WORD PTR [rbp-0x2]
  430495:	mov    rsi,rdx
  430498:	mov    edi,eax
  43049a:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  43049f:	mov    ecx,eax
  4304a1:	mov    rax,QWORD PTR [rbp-0x18]
  4304a5:	mov    rdx,QWORD PTR [rax+0x28]
  4304a9:	movsxd rax,ecx
  4304ac:	add    rdx,rax
  4304af:	mov    rax,QWORD PTR [rbp-0x18]
  4304b3:	mov    QWORD PTR [rax+0x28],rdx
  4304b7:	jmp    4304cc <flatcc_json_printer_int16_enum_struct_field@@Base+0xbf>
  4304b9:	movsx  ecx,WORD PTR [rbp-0x2]
  4304bd:	mov    rdx,QWORD PTR [rbp-0x18]
  4304c1:	mov    rax,QWORD PTR [rbp+0x10]
  4304c5:	mov    esi,ecx
  4304c7:	mov    rdi,rdx
  4304ca:	call   rax
  4304cc:	nop
  4304cd:	leave  
  4304ce:	ret    

00000000004304cf <flatcc_json_printer_int32_enum_struct_field@@Base>:
  4304cf:	endbr64 
  4304d3:	push   rbp
  4304d4:	mov    rbp,rsp
  4304d7:	sub    rsp,0x40
  4304db:	mov    QWORD PTR [rbp-0x18],rdi
  4304df:	mov    DWORD PTR [rbp-0x1c],esi
  4304e2:	mov    QWORD PTR [rbp-0x28],rdx
  4304e6:	mov    QWORD PTR [rbp-0x30],rcx
  4304ea:	mov    QWORD PTR [rbp-0x38],r8
  4304ee:	mov    DWORD PTR [rbp-0x20],r9d
  4304f2:	mov    rdx,QWORD PTR [rbp-0x28]
  4304f6:	mov    rax,QWORD PTR [rbp-0x30]
  4304fa:	add    rax,rdx
  4304fd:	mov    rdi,rax
  430500:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  430505:	mov    DWORD PTR [rbp-0x4],eax
  430508:	cmp    DWORD PTR [rbp-0x1c],0x0
  43050c:	je     430525 <flatcc_json_printer_int32_enum_struct_field@@Base+0x56>
  43050e:	mov    rax,QWORD PTR [rbp-0x18]
  430512:	mov    rax,QWORD PTR [rax+0x28]
  430516:	lea    rcx,[rax+0x1]
  43051a:	mov    rdx,QWORD PTR [rbp-0x18]
  43051e:	mov    QWORD PTR [rdx+0x28],rcx
  430522:	mov    BYTE PTR [rax],0x2c
  430525:	mov    eax,DWORD PTR [rbp-0x20]
  430528:	movsxd rdx,eax
  43052b:	mov    rcx,QWORD PTR [rbp-0x38]
  43052f:	mov    rax,QWORD PTR [rbp-0x18]
  430533:	mov    rsi,rcx
  430536:	mov    rdi,rax
  430539:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43053e:	mov    rax,QWORD PTR [rbp-0x18]
  430542:	movzx  eax,BYTE PTR [rax+0x33]
  430546:	test   al,al
  430548:	je     430579 <flatcc_json_printer_int32_enum_struct_field@@Base+0xaa>
  43054a:	mov    rax,QWORD PTR [rbp-0x18]
  43054e:	mov    rdx,QWORD PTR [rax+0x28]
  430552:	mov    eax,DWORD PTR [rbp-0x4]
  430555:	mov    rsi,rdx
  430558:	mov    edi,eax
  43055a:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  43055f:	mov    ecx,eax
  430561:	mov    rax,QWORD PTR [rbp-0x18]
  430565:	mov    rdx,QWORD PTR [rax+0x28]
  430569:	movsxd rax,ecx
  43056c:	add    rdx,rax
  43056f:	mov    rax,QWORD PTR [rbp-0x18]
  430573:	mov    QWORD PTR [rax+0x28],rdx
  430577:	jmp    43058b <flatcc_json_printer_int32_enum_struct_field@@Base+0xbc>
  430579:	mov    ecx,DWORD PTR [rbp-0x4]
  43057c:	mov    rdx,QWORD PTR [rbp-0x18]
  430580:	mov    rax,QWORD PTR [rbp+0x10]
  430584:	mov    esi,ecx
  430586:	mov    rdi,rdx
  430589:	call   rax
  43058b:	nop
  43058c:	leave  
  43058d:	ret    

000000000043058e <flatcc_json_printer_int64_enum_struct_field@@Base>:
  43058e:	endbr64 
  430592:	push   rbp
  430593:	mov    rbp,rsp
  430596:	sub    rsp,0x40
  43059a:	mov    QWORD PTR [rbp-0x18],rdi
  43059e:	mov    DWORD PTR [rbp-0x1c],esi
  4305a1:	mov    QWORD PTR [rbp-0x28],rdx
  4305a5:	mov    QWORD PTR [rbp-0x30],rcx
  4305a9:	mov    QWORD PTR [rbp-0x38],r8
  4305ad:	mov    DWORD PTR [rbp-0x20],r9d
  4305b1:	mov    rdx,QWORD PTR [rbp-0x28]
  4305b5:	mov    rax,QWORD PTR [rbp-0x30]
  4305b9:	add    rax,rdx
  4305bc:	mov    rdi,rax
  4305bf:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  4305c4:	mov    QWORD PTR [rbp-0x8],rax
  4305c8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4305cc:	je     4305e5 <flatcc_json_printer_int64_enum_struct_field@@Base+0x57>
  4305ce:	mov    rax,QWORD PTR [rbp-0x18]
  4305d2:	mov    rax,QWORD PTR [rax+0x28]
  4305d6:	lea    rcx,[rax+0x1]
  4305da:	mov    rdx,QWORD PTR [rbp-0x18]
  4305de:	mov    QWORD PTR [rdx+0x28],rcx
  4305e2:	mov    BYTE PTR [rax],0x2c
  4305e5:	mov    eax,DWORD PTR [rbp-0x20]
  4305e8:	movsxd rdx,eax
  4305eb:	mov    rcx,QWORD PTR [rbp-0x38]
  4305ef:	mov    rax,QWORD PTR [rbp-0x18]
  4305f3:	mov    rsi,rcx
  4305f6:	mov    rdi,rax
  4305f9:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4305fe:	mov    rax,QWORD PTR [rbp-0x18]
  430602:	movzx  eax,BYTE PTR [rax+0x33]
  430606:	test   al,al
  430608:	je     43063b <flatcc_json_printer_int64_enum_struct_field@@Base+0xad>
  43060a:	mov    rax,QWORD PTR [rbp-0x18]
  43060e:	mov    rdx,QWORD PTR [rax+0x28]
  430612:	mov    rax,QWORD PTR [rbp-0x8]
  430616:	mov    rsi,rdx
  430619:	mov    rdi,rax
  43061c:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  430621:	mov    ecx,eax
  430623:	mov    rax,QWORD PTR [rbp-0x18]
  430627:	mov    rdx,QWORD PTR [rax+0x28]
  43062b:	movsxd rax,ecx
  43062e:	add    rdx,rax
  430631:	mov    rax,QWORD PTR [rbp-0x18]
  430635:	mov    QWORD PTR [rax+0x28],rdx
  430639:	jmp    43064f <flatcc_json_printer_int64_enum_struct_field@@Base+0xc1>
  43063b:	mov    rcx,QWORD PTR [rbp-0x8]
  43063f:	mov    rdx,QWORD PTR [rbp-0x18]
  430643:	mov    rax,QWORD PTR [rbp+0x10]
  430647:	mov    rsi,rcx
  43064a:	mov    rdi,rdx
  43064d:	call   rax
  43064f:	nop
  430650:	leave  
  430651:	ret    

0000000000430652 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  430652:	endbr64 
  430656:	push   rbp
  430657:	mov    rbp,rsp
  43065a:	sub    rsp,0x40
  43065e:	mov    QWORD PTR [rbp-0x18],rdi
  430662:	mov    DWORD PTR [rbp-0x1c],esi
  430665:	mov    QWORD PTR [rbp-0x28],rdx
  430669:	mov    QWORD PTR [rbp-0x30],rcx
  43066d:	mov    QWORD PTR [rbp-0x38],r8
  430671:	mov    DWORD PTR [rbp-0x20],r9d
  430675:	mov    rdx,QWORD PTR [rbp-0x28]
  430679:	mov    rax,QWORD PTR [rbp-0x30]
  43067d:	add    rax,rdx
  430680:	mov    rdi,rax
  430683:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  430688:	mov    BYTE PTR [rbp-0x1],al
  43068b:	cmp    DWORD PTR [rbp-0x1c],0x0
  43068f:	je     4306a8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x56>
  430691:	mov    rax,QWORD PTR [rbp-0x18]
  430695:	mov    rax,QWORD PTR [rax+0x28]
  430699:	lea    rcx,[rax+0x1]
  43069d:	mov    rdx,QWORD PTR [rbp-0x18]
  4306a1:	mov    QWORD PTR [rdx+0x28],rcx
  4306a5:	mov    BYTE PTR [rax],0x2c
  4306a8:	mov    eax,DWORD PTR [rbp-0x20]
  4306ab:	movsxd rdx,eax
  4306ae:	mov    rcx,QWORD PTR [rbp-0x38]
  4306b2:	mov    rax,QWORD PTR [rbp-0x18]
  4306b6:	mov    rsi,rcx
  4306b9:	mov    rdi,rax
  4306bc:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4306c1:	mov    rax,QWORD PTR [rbp-0x18]
  4306c5:	movzx  eax,BYTE PTR [rax+0x33]
  4306c9:	test   al,al
  4306cb:	je     4306fd <flatcc_json_printer_bool_enum_struct_field@@Base+0xab>
  4306cd:	mov    rax,QWORD PTR [rbp-0x18]
  4306d1:	mov    rdx,QWORD PTR [rax+0x28]
  4306d5:	movzx  eax,BYTE PTR [rbp-0x1]
  4306d9:	mov    rsi,rdx
  4306dc:	mov    edi,eax
  4306de:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  4306e3:	mov    ecx,eax
  4306e5:	mov    rax,QWORD PTR [rbp-0x18]
  4306e9:	mov    rdx,QWORD PTR [rax+0x28]
  4306ed:	movsxd rax,ecx
  4306f0:	add    rdx,rax
  4306f3:	mov    rax,QWORD PTR [rbp-0x18]
  4306f7:	mov    QWORD PTR [rax+0x28],rdx
  4306fb:	jmp    430710 <flatcc_json_printer_bool_enum_struct_field@@Base+0xbe>
  4306fd:	movzx  ecx,BYTE PTR [rbp-0x1]
  430701:	mov    rdx,QWORD PTR [rbp-0x18]
  430705:	mov    rax,QWORD PTR [rbp+0x10]
  430709:	mov    esi,ecx
  43070b:	mov    rdi,rdx
  43070e:	call   rax
  430710:	nop
  430711:	leave  
  430712:	ret    

0000000000430713 <flatcc_json_printer_utype_vector_field@@Base>:
  430713:	endbr64 
  430717:	push   rbp
  430718:	mov    rbp,rsp
  43071b:	push   rbx
  43071c:	sub    rsp,0x38
  430720:	mov    QWORD PTR [rbp-0x28],rdi
  430724:	mov    QWORD PTR [rbp-0x30],rsi
  430728:	mov    DWORD PTR [rbp-0x34],edx
  43072b:	mov    QWORD PTR [rbp-0x40],rcx
  43072f:	mov    DWORD PTR [rbp-0x38],r8d
  430733:	mov    edx,DWORD PTR [rbp-0x34]
  430736:	mov    rax,QWORD PTR [rbp-0x30]
  43073a:	mov    esi,edx
  43073c:	mov    rdi,rax
  43073f:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  430744:	mov    QWORD PTR [rbp-0x18],rax
  430748:	cmp    QWORD PTR [rbp-0x18],0x0
  43074d:	je     43097e <flatcc_json_printer_utype_vector_field@@Base+0x26b>
  430753:	mov    rax,QWORD PTR [rbp-0x30]
  430757:	mov    eax,DWORD PTR [rax+0x18]
  43075a:	lea    ecx,[rax+0x1]
  43075d:	mov    rdx,QWORD PTR [rbp-0x30]
  430761:	mov    DWORD PTR [rdx+0x18],ecx
  430764:	test   eax,eax
  430766:	je     43077f <flatcc_json_printer_utype_vector_field@@Base+0x6c>
  430768:	mov    rax,QWORD PTR [rbp-0x28]
  43076c:	mov    rax,QWORD PTR [rax+0x28]
  430770:	lea    rcx,[rax+0x1]
  430774:	mov    rdx,QWORD PTR [rbp-0x28]
  430778:	mov    QWORD PTR [rdx+0x28],rcx
  43077c:	mov    BYTE PTR [rax],0x2c
  43077f:	mov    rax,QWORD PTR [rbp-0x18]
  430783:	mov    rdi,rax
  430786:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  43078b:	mov    QWORD PTR [rbp-0x18],rax
  43078f:	mov    rax,QWORD PTR [rbp-0x18]
  430793:	mov    rdi,rax
  430796:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43079b:	mov    DWORD PTR [rbp-0x1c],eax
  43079e:	mov    rax,QWORD PTR [rbp-0x18]
  4307a2:	add    rax,0x4
  4307a6:	mov    QWORD PTR [rbp-0x18],rax
  4307aa:	mov    eax,DWORD PTR [rbp-0x38]
  4307ad:	movsxd rdx,eax
  4307b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4307b4:	mov    rax,QWORD PTR [rbp-0x28]
  4307b8:	mov    rsi,rcx
  4307bb:	mov    rdi,rax
  4307be:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4307c3:	mov    rax,QWORD PTR [rbp-0x28]
  4307c7:	mov    eax,DWORD PTR [rax+0x38]
  4307ca:	lea    edx,[rax+0x1]
  4307cd:	mov    rax,QWORD PTR [rbp-0x28]
  4307d1:	mov    DWORD PTR [rax+0x38],edx
  4307d4:	mov    rax,QWORD PTR [rbp-0x28]
  4307d8:	mov    rax,QWORD PTR [rax+0x28]
  4307dc:	lea    rcx,[rax+0x1]
  4307e0:	mov    rdx,QWORD PTR [rbp-0x28]
  4307e4:	mov    QWORD PTR [rdx+0x28],rcx
  4307e8:	mov    BYTE PTR [rax],0x5b
  4307eb:	cmp    DWORD PTR [rbp-0x1c],0x0
  4307ef:	je     430916 <flatcc_json_printer_utype_vector_field@@Base+0x203>
  4307f5:	mov    rax,QWORD PTR [rbp-0x28]
  4307f9:	movzx  eax,BYTE PTR [rax+0x31]
  4307fd:	test   al,al
  4307ff:	je     430826 <flatcc_json_printer_utype_vector_field@@Base+0x113>
  430801:	mov    rax,QWORD PTR [rbp-0x28]
  430805:	mov    rax,QWORD PTR [rax+0x28]
  430809:	lea    rcx,[rax+0x1]
  43080d:	mov    rdx,QWORD PTR [rbp-0x28]
  430811:	mov    QWORD PTR [rdx+0x28],rcx
  430815:	mov    BYTE PTR [rax],0xa
  430818:	mov    rax,QWORD PTR [rbp-0x28]
  43081c:	mov    rdi,rax
  43081f:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430824:	jmp    430832 <flatcc_json_printer_utype_vector_field@@Base+0x11f>
  430826:	mov    rax,QWORD PTR [rbp-0x28]
  43082a:	mov    rdi,rax
  43082d:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430832:	mov    rax,QWORD PTR [rbp-0x28]
  430836:	mov    rbx,QWORD PTR [rax+0x28]
  43083a:	mov    rax,QWORD PTR [rbp-0x18]
  43083e:	mov    rdi,rax
  430841:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  430846:	movzx  eax,al
  430849:	mov    rsi,rbx
  43084c:	mov    edi,eax
  43084e:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  430853:	mov    ecx,eax
  430855:	mov    rax,QWORD PTR [rbp-0x28]
  430859:	mov    rdx,QWORD PTR [rax+0x28]
  43085d:	movsxd rax,ecx
  430860:	add    rdx,rax
  430863:	mov    rax,QWORD PTR [rbp-0x28]
  430867:	mov    QWORD PTR [rax+0x28],rdx
  43086b:	mov    rax,QWORD PTR [rbp-0x18]
  43086f:	inc    rax
  430872:	mov    QWORD PTR [rbp-0x18],rax
  430876:	dec    DWORD PTR [rbp-0x1c]
  430879:	jmp    430916 <flatcc_json_printer_utype_vector_field@@Base+0x203>
  43087e:	mov    rax,QWORD PTR [rbp-0x28]
  430882:	mov    rax,QWORD PTR [rax+0x28]
  430886:	lea    rcx,[rax+0x1]
  43088a:	mov    rdx,QWORD PTR [rbp-0x28]
  43088e:	mov    QWORD PTR [rdx+0x28],rcx
  430892:	mov    BYTE PTR [rax],0x2c
  430895:	mov    rax,QWORD PTR [rbp-0x28]
  430899:	movzx  eax,BYTE PTR [rax+0x31]
  43089d:	test   al,al
  43089f:	je     4308c6 <flatcc_json_printer_utype_vector_field@@Base+0x1b3>
  4308a1:	mov    rax,QWORD PTR [rbp-0x28]
  4308a5:	mov    rax,QWORD PTR [rax+0x28]
  4308a9:	lea    rcx,[rax+0x1]
  4308ad:	mov    rdx,QWORD PTR [rbp-0x28]
  4308b1:	mov    QWORD PTR [rdx+0x28],rcx
  4308b5:	mov    BYTE PTR [rax],0xa
  4308b8:	mov    rax,QWORD PTR [rbp-0x28]
  4308bc:	mov    rdi,rax
  4308bf:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4308c4:	jmp    4308d2 <flatcc_json_printer_utype_vector_field@@Base+0x1bf>
  4308c6:	mov    rax,QWORD PTR [rbp-0x28]
  4308ca:	mov    rdi,rax
  4308cd:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4308d2:	mov    rax,QWORD PTR [rbp-0x28]
  4308d6:	mov    rbx,QWORD PTR [rax+0x28]
  4308da:	mov    rax,QWORD PTR [rbp-0x18]
  4308de:	mov    rdi,rax
  4308e1:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4308e6:	movzx  eax,al
  4308e9:	mov    rsi,rbx
  4308ec:	mov    edi,eax
  4308ee:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  4308f3:	mov    ecx,eax
  4308f5:	mov    rax,QWORD PTR [rbp-0x28]
  4308f9:	mov    rdx,QWORD PTR [rax+0x28]
  4308fd:	movsxd rax,ecx
  430900:	add    rdx,rax
  430903:	mov    rax,QWORD PTR [rbp-0x28]
  430907:	mov    QWORD PTR [rax+0x28],rdx
  43090b:	mov    rax,QWORD PTR [rbp-0x18]
  43090f:	inc    rax
  430912:	mov    QWORD PTR [rbp-0x18],rax
  430916:	mov    eax,DWORD PTR [rbp-0x1c]
  430919:	lea    edx,[rax-0x1]
  43091c:	mov    DWORD PTR [rbp-0x1c],edx
  43091f:	test   eax,eax
  430921:	jne    43087e <flatcc_json_printer_utype_vector_field@@Base+0x16b>
  430927:	mov    rax,QWORD PTR [rbp-0x28]
  43092b:	movzx  eax,BYTE PTR [rax+0x31]
  43092f:	test   al,al
  430931:	je     430967 <flatcc_json_printer_utype_vector_field@@Base+0x254>
  430933:	mov    rax,QWORD PTR [rbp-0x28]
  430937:	mov    rax,QWORD PTR [rax+0x28]
  43093b:	lea    rcx,[rax+0x1]
  43093f:	mov    rdx,QWORD PTR [rbp-0x28]
  430943:	mov    QWORD PTR [rdx+0x28],rcx
  430947:	mov    BYTE PTR [rax],0xa
  43094a:	mov    rax,QWORD PTR [rbp-0x28]
  43094e:	mov    eax,DWORD PTR [rax+0x38]
  430951:	lea    edx,[rax-0x1]
  430954:	mov    rax,QWORD PTR [rbp-0x28]
  430958:	mov    DWORD PTR [rax+0x38],edx
  43095b:	mov    rax,QWORD PTR [rbp-0x28]
  43095f:	mov    rdi,rax
  430962:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430967:	mov    rax,QWORD PTR [rbp-0x28]
  43096b:	mov    rax,QWORD PTR [rax+0x28]
  43096f:	lea    rcx,[rax+0x1]
  430973:	mov    rdx,QWORD PTR [rbp-0x28]
  430977:	mov    QWORD PTR [rdx+0x28],rcx
  43097b:	mov    BYTE PTR [rax],0x5d
  43097e:	nop
  43097f:	add    rsp,0x38
  430983:	pop    rbx
  430984:	pop    rbp
  430985:	ret    

0000000000430986 <flatcc_json_printer_uint8_vector_field@@Base>:
  430986:	endbr64 
  43098a:	push   rbp
  43098b:	mov    rbp,rsp
  43098e:	push   rbx
  43098f:	sub    rsp,0x38
  430993:	mov    QWORD PTR [rbp-0x28],rdi
  430997:	mov    QWORD PTR [rbp-0x30],rsi
  43099b:	mov    DWORD PTR [rbp-0x34],edx
  43099e:	mov    QWORD PTR [rbp-0x40],rcx
  4309a2:	mov    DWORD PTR [rbp-0x38],r8d
  4309a6:	mov    edx,DWORD PTR [rbp-0x34]
  4309a9:	mov    rax,QWORD PTR [rbp-0x30]
  4309ad:	mov    esi,edx
  4309af:	mov    rdi,rax
  4309b2:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4309b7:	mov    QWORD PTR [rbp-0x18],rax
  4309bb:	cmp    QWORD PTR [rbp-0x18],0x0
  4309c0:	je     430bf1 <flatcc_json_printer_uint8_vector_field@@Base+0x26b>
  4309c6:	mov    rax,QWORD PTR [rbp-0x30]
  4309ca:	mov    eax,DWORD PTR [rax+0x18]
  4309cd:	lea    ecx,[rax+0x1]
  4309d0:	mov    rdx,QWORD PTR [rbp-0x30]
  4309d4:	mov    DWORD PTR [rdx+0x18],ecx
  4309d7:	test   eax,eax
  4309d9:	je     4309f2 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
  4309db:	mov    rax,QWORD PTR [rbp-0x28]
  4309df:	mov    rax,QWORD PTR [rax+0x28]
  4309e3:	lea    rcx,[rax+0x1]
  4309e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4309eb:	mov    QWORD PTR [rdx+0x28],rcx
  4309ef:	mov    BYTE PTR [rax],0x2c
  4309f2:	mov    rax,QWORD PTR [rbp-0x18]
  4309f6:	mov    rdi,rax
  4309f9:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4309fe:	mov    QWORD PTR [rbp-0x18],rax
  430a02:	mov    rax,QWORD PTR [rbp-0x18]
  430a06:	mov    rdi,rax
  430a09:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  430a0e:	mov    DWORD PTR [rbp-0x1c],eax
  430a11:	mov    rax,QWORD PTR [rbp-0x18]
  430a15:	add    rax,0x4
  430a19:	mov    QWORD PTR [rbp-0x18],rax
  430a1d:	mov    eax,DWORD PTR [rbp-0x38]
  430a20:	movsxd rdx,eax
  430a23:	mov    rcx,QWORD PTR [rbp-0x40]
  430a27:	mov    rax,QWORD PTR [rbp-0x28]
  430a2b:	mov    rsi,rcx
  430a2e:	mov    rdi,rax
  430a31:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430a36:	mov    rax,QWORD PTR [rbp-0x28]
  430a3a:	mov    eax,DWORD PTR [rax+0x38]
  430a3d:	lea    edx,[rax+0x1]
  430a40:	mov    rax,QWORD PTR [rbp-0x28]
  430a44:	mov    DWORD PTR [rax+0x38],edx
  430a47:	mov    rax,QWORD PTR [rbp-0x28]
  430a4b:	mov    rax,QWORD PTR [rax+0x28]
  430a4f:	lea    rcx,[rax+0x1]
  430a53:	mov    rdx,QWORD PTR [rbp-0x28]
  430a57:	mov    QWORD PTR [rdx+0x28],rcx
  430a5b:	mov    BYTE PTR [rax],0x5b
  430a5e:	cmp    DWORD PTR [rbp-0x1c],0x0
  430a62:	je     430b89 <flatcc_json_printer_uint8_vector_field@@Base+0x203>
  430a68:	mov    rax,QWORD PTR [rbp-0x28]
  430a6c:	movzx  eax,BYTE PTR [rax+0x31]
  430a70:	test   al,al
  430a72:	je     430a99 <flatcc_json_printer_uint8_vector_field@@Base+0x113>
  430a74:	mov    rax,QWORD PTR [rbp-0x28]
  430a78:	mov    rax,QWORD PTR [rax+0x28]
  430a7c:	lea    rcx,[rax+0x1]
  430a80:	mov    rdx,QWORD PTR [rbp-0x28]
  430a84:	mov    QWORD PTR [rdx+0x28],rcx
  430a88:	mov    BYTE PTR [rax],0xa
  430a8b:	mov    rax,QWORD PTR [rbp-0x28]
  430a8f:	mov    rdi,rax
  430a92:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430a97:	jmp    430aa5 <flatcc_json_printer_uint8_vector_field@@Base+0x11f>
  430a99:	mov    rax,QWORD PTR [rbp-0x28]
  430a9d:	mov    rdi,rax
  430aa0:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430aa5:	mov    rax,QWORD PTR [rbp-0x28]
  430aa9:	mov    rbx,QWORD PTR [rax+0x28]
  430aad:	mov    rax,QWORD PTR [rbp-0x18]
  430ab1:	mov    rdi,rax
  430ab4:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  430ab9:	movzx  eax,al
  430abc:	mov    rsi,rbx
  430abf:	mov    edi,eax
  430ac1:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  430ac6:	mov    ecx,eax
  430ac8:	mov    rax,QWORD PTR [rbp-0x28]
  430acc:	mov    rdx,QWORD PTR [rax+0x28]
  430ad0:	movsxd rax,ecx
  430ad3:	add    rdx,rax
  430ad6:	mov    rax,QWORD PTR [rbp-0x28]
  430ada:	mov    QWORD PTR [rax+0x28],rdx
  430ade:	mov    rax,QWORD PTR [rbp-0x18]
  430ae2:	inc    rax
  430ae5:	mov    QWORD PTR [rbp-0x18],rax
  430ae9:	dec    DWORD PTR [rbp-0x1c]
  430aec:	jmp    430b89 <flatcc_json_printer_uint8_vector_field@@Base+0x203>
  430af1:	mov    rax,QWORD PTR [rbp-0x28]
  430af5:	mov    rax,QWORD PTR [rax+0x28]
  430af9:	lea    rcx,[rax+0x1]
  430afd:	mov    rdx,QWORD PTR [rbp-0x28]
  430b01:	mov    QWORD PTR [rdx+0x28],rcx
  430b05:	mov    BYTE PTR [rax],0x2c
  430b08:	mov    rax,QWORD PTR [rbp-0x28]
  430b0c:	movzx  eax,BYTE PTR [rax+0x31]
  430b10:	test   al,al
  430b12:	je     430b39 <flatcc_json_printer_uint8_vector_field@@Base+0x1b3>
  430b14:	mov    rax,QWORD PTR [rbp-0x28]
  430b18:	mov    rax,QWORD PTR [rax+0x28]
  430b1c:	lea    rcx,[rax+0x1]
  430b20:	mov    rdx,QWORD PTR [rbp-0x28]
  430b24:	mov    QWORD PTR [rdx+0x28],rcx
  430b28:	mov    BYTE PTR [rax],0xa
  430b2b:	mov    rax,QWORD PTR [rbp-0x28]
  430b2f:	mov    rdi,rax
  430b32:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430b37:	jmp    430b45 <flatcc_json_printer_uint8_vector_field@@Base+0x1bf>
  430b39:	mov    rax,QWORD PTR [rbp-0x28]
  430b3d:	mov    rdi,rax
  430b40:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430b45:	mov    rax,QWORD PTR [rbp-0x28]
  430b49:	mov    rbx,QWORD PTR [rax+0x28]
  430b4d:	mov    rax,QWORD PTR [rbp-0x18]
  430b51:	mov    rdi,rax
  430b54:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  430b59:	movzx  eax,al
  430b5c:	mov    rsi,rbx
  430b5f:	mov    edi,eax
  430b61:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  430b66:	mov    ecx,eax
  430b68:	mov    rax,QWORD PTR [rbp-0x28]
  430b6c:	mov    rdx,QWORD PTR [rax+0x28]
  430b70:	movsxd rax,ecx
  430b73:	add    rdx,rax
  430b76:	mov    rax,QWORD PTR [rbp-0x28]
  430b7a:	mov    QWORD PTR [rax+0x28],rdx
  430b7e:	mov    rax,QWORD PTR [rbp-0x18]
  430b82:	inc    rax
  430b85:	mov    QWORD PTR [rbp-0x18],rax
  430b89:	mov    eax,DWORD PTR [rbp-0x1c]
  430b8c:	lea    edx,[rax-0x1]
  430b8f:	mov    DWORD PTR [rbp-0x1c],edx
  430b92:	test   eax,eax
  430b94:	jne    430af1 <flatcc_json_printer_uint8_vector_field@@Base+0x16b>
  430b9a:	mov    rax,QWORD PTR [rbp-0x28]
  430b9e:	movzx  eax,BYTE PTR [rax+0x31]
  430ba2:	test   al,al
  430ba4:	je     430bda <flatcc_json_printer_uint8_vector_field@@Base+0x254>
  430ba6:	mov    rax,QWORD PTR [rbp-0x28]
  430baa:	mov    rax,QWORD PTR [rax+0x28]
  430bae:	lea    rcx,[rax+0x1]
  430bb2:	mov    rdx,QWORD PTR [rbp-0x28]
  430bb6:	mov    QWORD PTR [rdx+0x28],rcx
  430bba:	mov    BYTE PTR [rax],0xa
  430bbd:	mov    rax,QWORD PTR [rbp-0x28]
  430bc1:	mov    eax,DWORD PTR [rax+0x38]
  430bc4:	lea    edx,[rax-0x1]
  430bc7:	mov    rax,QWORD PTR [rbp-0x28]
  430bcb:	mov    DWORD PTR [rax+0x38],edx
  430bce:	mov    rax,QWORD PTR [rbp-0x28]
  430bd2:	mov    rdi,rax
  430bd5:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430bda:	mov    rax,QWORD PTR [rbp-0x28]
  430bde:	mov    rax,QWORD PTR [rax+0x28]
  430be2:	lea    rcx,[rax+0x1]
  430be6:	mov    rdx,QWORD PTR [rbp-0x28]
  430bea:	mov    QWORD PTR [rdx+0x28],rcx
  430bee:	mov    BYTE PTR [rax],0x5d
  430bf1:	nop
  430bf2:	add    rsp,0x38
  430bf6:	pop    rbx
  430bf7:	pop    rbp
  430bf8:	ret    

0000000000430bf9 <flatcc_json_printer_uint16_vector_field@@Base>:
  430bf9:	endbr64 
  430bfd:	push   rbp
  430bfe:	mov    rbp,rsp
  430c01:	push   rbx
  430c02:	sub    rsp,0x38
  430c06:	mov    QWORD PTR [rbp-0x28],rdi
  430c0a:	mov    QWORD PTR [rbp-0x30],rsi
  430c0e:	mov    DWORD PTR [rbp-0x34],edx
  430c11:	mov    QWORD PTR [rbp-0x40],rcx
  430c15:	mov    DWORD PTR [rbp-0x38],r8d
  430c19:	mov    edx,DWORD PTR [rbp-0x34]
  430c1c:	mov    rax,QWORD PTR [rbp-0x30]
  430c20:	mov    esi,edx
  430c22:	mov    rdi,rax
  430c25:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  430c2a:	mov    QWORD PTR [rbp-0x18],rax
  430c2e:	cmp    QWORD PTR [rbp-0x18],0x0
  430c33:	je     430e66 <flatcc_json_printer_uint16_vector_field@@Base+0x26d>
  430c39:	mov    rax,QWORD PTR [rbp-0x30]
  430c3d:	mov    eax,DWORD PTR [rax+0x18]
  430c40:	lea    ecx,[rax+0x1]
  430c43:	mov    rdx,QWORD PTR [rbp-0x30]
  430c47:	mov    DWORD PTR [rdx+0x18],ecx
  430c4a:	test   eax,eax
  430c4c:	je     430c65 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
  430c4e:	mov    rax,QWORD PTR [rbp-0x28]
  430c52:	mov    rax,QWORD PTR [rax+0x28]
  430c56:	lea    rcx,[rax+0x1]
  430c5a:	mov    rdx,QWORD PTR [rbp-0x28]
  430c5e:	mov    QWORD PTR [rdx+0x28],rcx
  430c62:	mov    BYTE PTR [rax],0x2c
  430c65:	mov    rax,QWORD PTR [rbp-0x18]
  430c69:	mov    rdi,rax
  430c6c:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  430c71:	mov    QWORD PTR [rbp-0x18],rax
  430c75:	mov    rax,QWORD PTR [rbp-0x18]
  430c79:	mov    rdi,rax
  430c7c:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  430c81:	mov    DWORD PTR [rbp-0x1c],eax
  430c84:	mov    rax,QWORD PTR [rbp-0x18]
  430c88:	add    rax,0x4
  430c8c:	mov    QWORD PTR [rbp-0x18],rax
  430c90:	mov    eax,DWORD PTR [rbp-0x38]
  430c93:	movsxd rdx,eax
  430c96:	mov    rcx,QWORD PTR [rbp-0x40]
  430c9a:	mov    rax,QWORD PTR [rbp-0x28]
  430c9e:	mov    rsi,rcx
  430ca1:	mov    rdi,rax
  430ca4:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430ca9:	mov    rax,QWORD PTR [rbp-0x28]
  430cad:	mov    eax,DWORD PTR [rax+0x38]
  430cb0:	lea    edx,[rax+0x1]
  430cb3:	mov    rax,QWORD PTR [rbp-0x28]
  430cb7:	mov    DWORD PTR [rax+0x38],edx
  430cba:	mov    rax,QWORD PTR [rbp-0x28]
  430cbe:	mov    rax,QWORD PTR [rax+0x28]
  430cc2:	lea    rcx,[rax+0x1]
  430cc6:	mov    rdx,QWORD PTR [rbp-0x28]
  430cca:	mov    QWORD PTR [rdx+0x28],rcx
  430cce:	mov    BYTE PTR [rax],0x5b
  430cd1:	cmp    DWORD PTR [rbp-0x1c],0x0
  430cd5:	je     430dfe <flatcc_json_printer_uint16_vector_field@@Base+0x205>
  430cdb:	mov    rax,QWORD PTR [rbp-0x28]
  430cdf:	movzx  eax,BYTE PTR [rax+0x31]
  430ce3:	test   al,al
  430ce5:	je     430d0c <flatcc_json_printer_uint16_vector_field@@Base+0x113>
  430ce7:	mov    rax,QWORD PTR [rbp-0x28]
  430ceb:	mov    rax,QWORD PTR [rax+0x28]
  430cef:	lea    rcx,[rax+0x1]
  430cf3:	mov    rdx,QWORD PTR [rbp-0x28]
  430cf7:	mov    QWORD PTR [rdx+0x28],rcx
  430cfb:	mov    BYTE PTR [rax],0xa
  430cfe:	mov    rax,QWORD PTR [rbp-0x28]
  430d02:	mov    rdi,rax
  430d05:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430d0a:	jmp    430d18 <flatcc_json_printer_uint16_vector_field@@Base+0x11f>
  430d0c:	mov    rax,QWORD PTR [rbp-0x28]
  430d10:	mov    rdi,rax
  430d13:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430d18:	mov    rax,QWORD PTR [rbp-0x28]
  430d1c:	mov    rbx,QWORD PTR [rax+0x28]
  430d20:	mov    rax,QWORD PTR [rbp-0x18]
  430d24:	mov    rdi,rax
  430d27:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  430d2c:	movzx  eax,ax
  430d2f:	mov    rsi,rbx
  430d32:	mov    edi,eax
  430d34:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  430d39:	mov    ecx,eax
  430d3b:	mov    rax,QWORD PTR [rbp-0x28]
  430d3f:	mov    rdx,QWORD PTR [rax+0x28]
  430d43:	movsxd rax,ecx
  430d46:	add    rdx,rax
  430d49:	mov    rax,QWORD PTR [rbp-0x28]
  430d4d:	mov    QWORD PTR [rax+0x28],rdx
  430d51:	mov    rax,QWORD PTR [rbp-0x18]
  430d55:	add    rax,0x2
  430d59:	mov    QWORD PTR [rbp-0x18],rax
  430d5d:	dec    DWORD PTR [rbp-0x1c]
  430d60:	jmp    430dfe <flatcc_json_printer_uint16_vector_field@@Base+0x205>
  430d65:	mov    rax,QWORD PTR [rbp-0x28]
  430d69:	mov    rax,QWORD PTR [rax+0x28]
  430d6d:	lea    rcx,[rax+0x1]
  430d71:	mov    rdx,QWORD PTR [rbp-0x28]
  430d75:	mov    QWORD PTR [rdx+0x28],rcx
  430d79:	mov    BYTE PTR [rax],0x2c
  430d7c:	mov    rax,QWORD PTR [rbp-0x28]
  430d80:	movzx  eax,BYTE PTR [rax+0x31]
  430d84:	test   al,al
  430d86:	je     430dad <flatcc_json_printer_uint16_vector_field@@Base+0x1b4>
  430d88:	mov    rax,QWORD PTR [rbp-0x28]
  430d8c:	mov    rax,QWORD PTR [rax+0x28]
  430d90:	lea    rcx,[rax+0x1]
  430d94:	mov    rdx,QWORD PTR [rbp-0x28]
  430d98:	mov    QWORD PTR [rdx+0x28],rcx
  430d9c:	mov    BYTE PTR [rax],0xa
  430d9f:	mov    rax,QWORD PTR [rbp-0x28]
  430da3:	mov    rdi,rax
  430da6:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430dab:	jmp    430db9 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
  430dad:	mov    rax,QWORD PTR [rbp-0x28]
  430db1:	mov    rdi,rax
  430db4:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430db9:	mov    rax,QWORD PTR [rbp-0x28]
  430dbd:	mov    rbx,QWORD PTR [rax+0x28]
  430dc1:	mov    rax,QWORD PTR [rbp-0x18]
  430dc5:	mov    rdi,rax
  430dc8:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  430dcd:	movzx  eax,ax
  430dd0:	mov    rsi,rbx
  430dd3:	mov    edi,eax
  430dd5:	call   42a37f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  430dda:	mov    ecx,eax
  430ddc:	mov    rax,QWORD PTR [rbp-0x28]
  430de0:	mov    rdx,QWORD PTR [rax+0x28]
  430de4:	movsxd rax,ecx
  430de7:	add    rdx,rax
  430dea:	mov    rax,QWORD PTR [rbp-0x28]
  430dee:	mov    QWORD PTR [rax+0x28],rdx
  430df2:	mov    rax,QWORD PTR [rbp-0x18]
  430df6:	add    rax,0x2
  430dfa:	mov    QWORD PTR [rbp-0x18],rax
  430dfe:	mov    eax,DWORD PTR [rbp-0x1c]
  430e01:	lea    edx,[rax-0x1]
  430e04:	mov    DWORD PTR [rbp-0x1c],edx
  430e07:	test   eax,eax
  430e09:	jne    430d65 <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
  430e0f:	mov    rax,QWORD PTR [rbp-0x28]
  430e13:	movzx  eax,BYTE PTR [rax+0x31]
  430e17:	test   al,al
  430e19:	je     430e4f <flatcc_json_printer_uint16_vector_field@@Base+0x256>
  430e1b:	mov    rax,QWORD PTR [rbp-0x28]
  430e1f:	mov    rax,QWORD PTR [rax+0x28]
  430e23:	lea    rcx,[rax+0x1]
  430e27:	mov    rdx,QWORD PTR [rbp-0x28]
  430e2b:	mov    QWORD PTR [rdx+0x28],rcx
  430e2f:	mov    BYTE PTR [rax],0xa
  430e32:	mov    rax,QWORD PTR [rbp-0x28]
  430e36:	mov    eax,DWORD PTR [rax+0x38]
  430e39:	lea    edx,[rax-0x1]
  430e3c:	mov    rax,QWORD PTR [rbp-0x28]
  430e40:	mov    DWORD PTR [rax+0x38],edx
  430e43:	mov    rax,QWORD PTR [rbp-0x28]
  430e47:	mov    rdi,rax
  430e4a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430e4f:	mov    rax,QWORD PTR [rbp-0x28]
  430e53:	mov    rax,QWORD PTR [rax+0x28]
  430e57:	lea    rcx,[rax+0x1]
  430e5b:	mov    rdx,QWORD PTR [rbp-0x28]
  430e5f:	mov    QWORD PTR [rdx+0x28],rcx
  430e63:	mov    BYTE PTR [rax],0x5d
  430e66:	nop
  430e67:	add    rsp,0x38
  430e6b:	pop    rbx
  430e6c:	pop    rbp
  430e6d:	ret    

0000000000430e6e <flatcc_json_printer_uint32_vector_field@@Base>:
  430e6e:	endbr64 
  430e72:	push   rbp
  430e73:	mov    rbp,rsp
  430e76:	push   rbx
  430e77:	sub    rsp,0x38
  430e7b:	mov    QWORD PTR [rbp-0x28],rdi
  430e7f:	mov    QWORD PTR [rbp-0x30],rsi
  430e83:	mov    DWORD PTR [rbp-0x34],edx
  430e86:	mov    QWORD PTR [rbp-0x40],rcx
  430e8a:	mov    DWORD PTR [rbp-0x38],r8d
  430e8e:	mov    edx,DWORD PTR [rbp-0x34]
  430e91:	mov    rax,QWORD PTR [rbp-0x30]
  430e95:	mov    esi,edx
  430e97:	mov    rdi,rax
  430e9a:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  430e9f:	mov    QWORD PTR [rbp-0x18],rax
  430ea3:	cmp    QWORD PTR [rbp-0x18],0x0
  430ea8:	je     4310d5 <flatcc_json_printer_uint32_vector_field@@Base+0x267>
  430eae:	mov    rax,QWORD PTR [rbp-0x30]
  430eb2:	mov    eax,DWORD PTR [rax+0x18]
  430eb5:	lea    ecx,[rax+0x1]
  430eb8:	mov    rdx,QWORD PTR [rbp-0x30]
  430ebc:	mov    DWORD PTR [rdx+0x18],ecx
  430ebf:	test   eax,eax
  430ec1:	je     430eda <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
  430ec3:	mov    rax,QWORD PTR [rbp-0x28]
  430ec7:	mov    rax,QWORD PTR [rax+0x28]
  430ecb:	lea    rcx,[rax+0x1]
  430ecf:	mov    rdx,QWORD PTR [rbp-0x28]
  430ed3:	mov    QWORD PTR [rdx+0x28],rcx
  430ed7:	mov    BYTE PTR [rax],0x2c
  430eda:	mov    rax,QWORD PTR [rbp-0x18]
  430ede:	mov    rdi,rax
  430ee1:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  430ee6:	mov    QWORD PTR [rbp-0x18],rax
  430eea:	mov    rax,QWORD PTR [rbp-0x18]
  430eee:	mov    rdi,rax
  430ef1:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  430ef6:	mov    DWORD PTR [rbp-0x1c],eax
  430ef9:	mov    rax,QWORD PTR [rbp-0x18]
  430efd:	add    rax,0x4
  430f01:	mov    QWORD PTR [rbp-0x18],rax
  430f05:	mov    eax,DWORD PTR [rbp-0x38]
  430f08:	movsxd rdx,eax
  430f0b:	mov    rcx,QWORD PTR [rbp-0x40]
  430f0f:	mov    rax,QWORD PTR [rbp-0x28]
  430f13:	mov    rsi,rcx
  430f16:	mov    rdi,rax
  430f19:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  430f1e:	mov    rax,QWORD PTR [rbp-0x28]
  430f22:	mov    eax,DWORD PTR [rax+0x38]
  430f25:	lea    edx,[rax+0x1]
  430f28:	mov    rax,QWORD PTR [rbp-0x28]
  430f2c:	mov    DWORD PTR [rax+0x38],edx
  430f2f:	mov    rax,QWORD PTR [rbp-0x28]
  430f33:	mov    rax,QWORD PTR [rax+0x28]
  430f37:	lea    rcx,[rax+0x1]
  430f3b:	mov    rdx,QWORD PTR [rbp-0x28]
  430f3f:	mov    QWORD PTR [rdx+0x28],rcx
  430f43:	mov    BYTE PTR [rax],0x5b
  430f46:	cmp    DWORD PTR [rbp-0x1c],0x0
  430f4a:	je     43106d <flatcc_json_printer_uint32_vector_field@@Base+0x1ff>
  430f50:	mov    rax,QWORD PTR [rbp-0x28]
  430f54:	movzx  eax,BYTE PTR [rax+0x31]
  430f58:	test   al,al
  430f5a:	je     430f81 <flatcc_json_printer_uint32_vector_field@@Base+0x113>
  430f5c:	mov    rax,QWORD PTR [rbp-0x28]
  430f60:	mov    rax,QWORD PTR [rax+0x28]
  430f64:	lea    rcx,[rax+0x1]
  430f68:	mov    rdx,QWORD PTR [rbp-0x28]
  430f6c:	mov    QWORD PTR [rdx+0x28],rcx
  430f70:	mov    BYTE PTR [rax],0xa
  430f73:	mov    rax,QWORD PTR [rbp-0x28]
  430f77:	mov    rdi,rax
  430f7a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  430f7f:	jmp    430f8d <flatcc_json_printer_uint32_vector_field@@Base+0x11f>
  430f81:	mov    rax,QWORD PTR [rbp-0x28]
  430f85:	mov    rdi,rax
  430f88:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  430f8d:	mov    rax,QWORD PTR [rbp-0x28]
  430f91:	mov    rbx,QWORD PTR [rax+0x28]
  430f95:	mov    rax,QWORD PTR [rbp-0x18]
  430f99:	mov    rdi,rax
  430f9c:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  430fa1:	mov    rsi,rbx
  430fa4:	mov    edi,eax
  430fa6:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  430fab:	mov    ecx,eax
  430fad:	mov    rax,QWORD PTR [rbp-0x28]
  430fb1:	mov    rdx,QWORD PTR [rax+0x28]
  430fb5:	movsxd rax,ecx
  430fb8:	add    rdx,rax
  430fbb:	mov    rax,QWORD PTR [rbp-0x28]
  430fbf:	mov    QWORD PTR [rax+0x28],rdx
  430fc3:	mov    rax,QWORD PTR [rbp-0x18]
  430fc7:	add    rax,0x4
  430fcb:	mov    QWORD PTR [rbp-0x18],rax
  430fcf:	dec    DWORD PTR [rbp-0x1c]
  430fd2:	jmp    43106d <flatcc_json_printer_uint32_vector_field@@Base+0x1ff>
  430fd7:	mov    rax,QWORD PTR [rbp-0x28]
  430fdb:	mov    rax,QWORD PTR [rax+0x28]
  430fdf:	lea    rcx,[rax+0x1]
  430fe3:	mov    rdx,QWORD PTR [rbp-0x28]
  430fe7:	mov    QWORD PTR [rdx+0x28],rcx
  430feb:	mov    BYTE PTR [rax],0x2c
  430fee:	mov    rax,QWORD PTR [rbp-0x28]
  430ff2:	movzx  eax,BYTE PTR [rax+0x31]
  430ff6:	test   al,al
  430ff8:	je     43101f <flatcc_json_printer_uint32_vector_field@@Base+0x1b1>
  430ffa:	mov    rax,QWORD PTR [rbp-0x28]
  430ffe:	mov    rax,QWORD PTR [rax+0x28]
  431002:	lea    rcx,[rax+0x1]
  431006:	mov    rdx,QWORD PTR [rbp-0x28]
  43100a:	mov    QWORD PTR [rdx+0x28],rcx
  43100e:	mov    BYTE PTR [rax],0xa
  431011:	mov    rax,QWORD PTR [rbp-0x28]
  431015:	mov    rdi,rax
  431018:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43101d:	jmp    43102b <flatcc_json_printer_uint32_vector_field@@Base+0x1bd>
  43101f:	mov    rax,QWORD PTR [rbp-0x28]
  431023:	mov    rdi,rax
  431026:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43102b:	mov    rax,QWORD PTR [rbp-0x28]
  43102f:	mov    rbx,QWORD PTR [rax+0x28]
  431033:	mov    rax,QWORD PTR [rbp-0x18]
  431037:	mov    rdi,rax
  43103a:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  43103f:	mov    rsi,rbx
  431042:	mov    edi,eax
  431044:	call   42a624 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  431049:	mov    ecx,eax
  43104b:	mov    rax,QWORD PTR [rbp-0x28]
  43104f:	mov    rdx,QWORD PTR [rax+0x28]
  431053:	movsxd rax,ecx
  431056:	add    rdx,rax
  431059:	mov    rax,QWORD PTR [rbp-0x28]
  43105d:	mov    QWORD PTR [rax+0x28],rdx
  431061:	mov    rax,QWORD PTR [rbp-0x18]
  431065:	add    rax,0x4
  431069:	mov    QWORD PTR [rbp-0x18],rax
  43106d:	mov    eax,DWORD PTR [rbp-0x1c]
  431070:	lea    edx,[rax-0x1]
  431073:	mov    DWORD PTR [rbp-0x1c],edx
  431076:	test   eax,eax
  431078:	jne    430fd7 <flatcc_json_printer_uint32_vector_field@@Base+0x169>
  43107e:	mov    rax,QWORD PTR [rbp-0x28]
  431082:	movzx  eax,BYTE PTR [rax+0x31]
  431086:	test   al,al
  431088:	je     4310be <flatcc_json_printer_uint32_vector_field@@Base+0x250>
  43108a:	mov    rax,QWORD PTR [rbp-0x28]
  43108e:	mov    rax,QWORD PTR [rax+0x28]
  431092:	lea    rcx,[rax+0x1]
  431096:	mov    rdx,QWORD PTR [rbp-0x28]
  43109a:	mov    QWORD PTR [rdx+0x28],rcx
  43109e:	mov    BYTE PTR [rax],0xa
  4310a1:	mov    rax,QWORD PTR [rbp-0x28]
  4310a5:	mov    eax,DWORD PTR [rax+0x38]
  4310a8:	lea    edx,[rax-0x1]
  4310ab:	mov    rax,QWORD PTR [rbp-0x28]
  4310af:	mov    DWORD PTR [rax+0x38],edx
  4310b2:	mov    rax,QWORD PTR [rbp-0x28]
  4310b6:	mov    rdi,rax
  4310b9:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4310be:	mov    rax,QWORD PTR [rbp-0x28]
  4310c2:	mov    rax,QWORD PTR [rax+0x28]
  4310c6:	lea    rcx,[rax+0x1]
  4310ca:	mov    rdx,QWORD PTR [rbp-0x28]
  4310ce:	mov    QWORD PTR [rdx+0x28],rcx
  4310d2:	mov    BYTE PTR [rax],0x5d
  4310d5:	nop
  4310d6:	add    rsp,0x38
  4310da:	pop    rbx
  4310db:	pop    rbp
  4310dc:	ret    

00000000004310dd <flatcc_json_printer_uint64_vector_field@@Base>:
  4310dd:	endbr64 
  4310e1:	push   rbp
  4310e2:	mov    rbp,rsp
  4310e5:	push   rbx
  4310e6:	sub    rsp,0x38
  4310ea:	mov    QWORD PTR [rbp-0x28],rdi
  4310ee:	mov    QWORD PTR [rbp-0x30],rsi
  4310f2:	mov    DWORD PTR [rbp-0x34],edx
  4310f5:	mov    QWORD PTR [rbp-0x40],rcx
  4310f9:	mov    DWORD PTR [rbp-0x38],r8d
  4310fd:	mov    edx,DWORD PTR [rbp-0x34]
  431100:	mov    rax,QWORD PTR [rbp-0x30]
  431104:	mov    esi,edx
  431106:	mov    rdi,rax
  431109:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  43110e:	mov    QWORD PTR [rbp-0x18],rax
  431112:	cmp    QWORD PTR [rbp-0x18],0x0
  431117:	je     431346 <flatcc_json_printer_uint64_vector_field@@Base+0x269>
  43111d:	mov    rax,QWORD PTR [rbp-0x30]
  431121:	mov    eax,DWORD PTR [rax+0x18]
  431124:	lea    ecx,[rax+0x1]
  431127:	mov    rdx,QWORD PTR [rbp-0x30]
  43112b:	mov    DWORD PTR [rdx+0x18],ecx
  43112e:	test   eax,eax
  431130:	je     431149 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
  431132:	mov    rax,QWORD PTR [rbp-0x28]
  431136:	mov    rax,QWORD PTR [rax+0x28]
  43113a:	lea    rcx,[rax+0x1]
  43113e:	mov    rdx,QWORD PTR [rbp-0x28]
  431142:	mov    QWORD PTR [rdx+0x28],rcx
  431146:	mov    BYTE PTR [rax],0x2c
  431149:	mov    rax,QWORD PTR [rbp-0x18]
  43114d:	mov    rdi,rax
  431150:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  431155:	mov    QWORD PTR [rbp-0x18],rax
  431159:	mov    rax,QWORD PTR [rbp-0x18]
  43115d:	mov    rdi,rax
  431160:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431165:	mov    DWORD PTR [rbp-0x1c],eax
  431168:	mov    rax,QWORD PTR [rbp-0x18]
  43116c:	add    rax,0x4
  431170:	mov    QWORD PTR [rbp-0x18],rax
  431174:	mov    eax,DWORD PTR [rbp-0x38]
  431177:	movsxd rdx,eax
  43117a:	mov    rcx,QWORD PTR [rbp-0x40]
  43117e:	mov    rax,QWORD PTR [rbp-0x28]
  431182:	mov    rsi,rcx
  431185:	mov    rdi,rax
  431188:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43118d:	mov    rax,QWORD PTR [rbp-0x28]
  431191:	mov    eax,DWORD PTR [rax+0x38]
  431194:	lea    edx,[rax+0x1]
  431197:	mov    rax,QWORD PTR [rbp-0x28]
  43119b:	mov    DWORD PTR [rax+0x38],edx
  43119e:	mov    rax,QWORD PTR [rbp-0x28]
  4311a2:	mov    rax,QWORD PTR [rax+0x28]
  4311a6:	lea    rcx,[rax+0x1]
  4311aa:	mov    rdx,QWORD PTR [rbp-0x28]
  4311ae:	mov    QWORD PTR [rdx+0x28],rcx
  4311b2:	mov    BYTE PTR [rax],0x5b
  4311b5:	cmp    DWORD PTR [rbp-0x1c],0x0
  4311b9:	je     4312de <flatcc_json_printer_uint64_vector_field@@Base+0x201>
  4311bf:	mov    rax,QWORD PTR [rbp-0x28]
  4311c3:	movzx  eax,BYTE PTR [rax+0x31]
  4311c7:	test   al,al
  4311c9:	je     4311f0 <flatcc_json_printer_uint64_vector_field@@Base+0x113>
  4311cb:	mov    rax,QWORD PTR [rbp-0x28]
  4311cf:	mov    rax,QWORD PTR [rax+0x28]
  4311d3:	lea    rcx,[rax+0x1]
  4311d7:	mov    rdx,QWORD PTR [rbp-0x28]
  4311db:	mov    QWORD PTR [rdx+0x28],rcx
  4311df:	mov    BYTE PTR [rax],0xa
  4311e2:	mov    rax,QWORD PTR [rbp-0x28]
  4311e6:	mov    rdi,rax
  4311e9:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4311ee:	jmp    4311fc <flatcc_json_printer_uint64_vector_field@@Base+0x11f>
  4311f0:	mov    rax,QWORD PTR [rbp-0x28]
  4311f4:	mov    rdi,rax
  4311f7:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4311fc:	mov    rax,QWORD PTR [rbp-0x28]
  431200:	mov    rbx,QWORD PTR [rax+0x28]
  431204:	mov    rax,QWORD PTR [rbp-0x18]
  431208:	mov    rdi,rax
  43120b:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  431210:	mov    rsi,rbx
  431213:	mov    rdi,rax
  431216:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  43121b:	mov    ecx,eax
  43121d:	mov    rax,QWORD PTR [rbp-0x28]
  431221:	mov    rdx,QWORD PTR [rax+0x28]
  431225:	movsxd rax,ecx
  431228:	add    rdx,rax
  43122b:	mov    rax,QWORD PTR [rbp-0x28]
  43122f:	mov    QWORD PTR [rax+0x28],rdx
  431233:	mov    rax,QWORD PTR [rbp-0x18]
  431237:	add    rax,0x8
  43123b:	mov    QWORD PTR [rbp-0x18],rax
  43123f:	dec    DWORD PTR [rbp-0x1c]
  431242:	jmp    4312de <flatcc_json_printer_uint64_vector_field@@Base+0x201>
  431247:	mov    rax,QWORD PTR [rbp-0x28]
  43124b:	mov    rax,QWORD PTR [rax+0x28]
  43124f:	lea    rcx,[rax+0x1]
  431253:	mov    rdx,QWORD PTR [rbp-0x28]
  431257:	mov    QWORD PTR [rdx+0x28],rcx
  43125b:	mov    BYTE PTR [rax],0x2c
  43125e:	mov    rax,QWORD PTR [rbp-0x28]
  431262:	movzx  eax,BYTE PTR [rax+0x31]
  431266:	test   al,al
  431268:	je     43128f <flatcc_json_printer_uint64_vector_field@@Base+0x1b2>
  43126a:	mov    rax,QWORD PTR [rbp-0x28]
  43126e:	mov    rax,QWORD PTR [rax+0x28]
  431272:	lea    rcx,[rax+0x1]
  431276:	mov    rdx,QWORD PTR [rbp-0x28]
  43127a:	mov    QWORD PTR [rdx+0x28],rcx
  43127e:	mov    BYTE PTR [rax],0xa
  431281:	mov    rax,QWORD PTR [rbp-0x28]
  431285:	mov    rdi,rax
  431288:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43128d:	jmp    43129b <flatcc_json_printer_uint64_vector_field@@Base+0x1be>
  43128f:	mov    rax,QWORD PTR [rbp-0x28]
  431293:	mov    rdi,rax
  431296:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43129b:	mov    rax,QWORD PTR [rbp-0x28]
  43129f:	mov    rbx,QWORD PTR [rax+0x28]
  4312a3:	mov    rax,QWORD PTR [rbp-0x18]
  4312a7:	mov    rdi,rax
  4312aa:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  4312af:	mov    rsi,rbx
  4312b2:	mov    rdi,rax
  4312b5:	call   42aa39 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  4312ba:	mov    ecx,eax
  4312bc:	mov    rax,QWORD PTR [rbp-0x28]
  4312c0:	mov    rdx,QWORD PTR [rax+0x28]
  4312c4:	movsxd rax,ecx
  4312c7:	add    rdx,rax
  4312ca:	mov    rax,QWORD PTR [rbp-0x28]
  4312ce:	mov    QWORD PTR [rax+0x28],rdx
  4312d2:	mov    rax,QWORD PTR [rbp-0x18]
  4312d6:	add    rax,0x8
  4312da:	mov    QWORD PTR [rbp-0x18],rax
  4312de:	mov    eax,DWORD PTR [rbp-0x1c]
  4312e1:	lea    edx,[rax-0x1]
  4312e4:	mov    DWORD PTR [rbp-0x1c],edx
  4312e7:	test   eax,eax
  4312e9:	jne    431247 <flatcc_json_printer_uint64_vector_field@@Base+0x16a>
  4312ef:	mov    rax,QWORD PTR [rbp-0x28]
  4312f3:	movzx  eax,BYTE PTR [rax+0x31]
  4312f7:	test   al,al
  4312f9:	je     43132f <flatcc_json_printer_uint64_vector_field@@Base+0x252>
  4312fb:	mov    rax,QWORD PTR [rbp-0x28]
  4312ff:	mov    rax,QWORD PTR [rax+0x28]
  431303:	lea    rcx,[rax+0x1]
  431307:	mov    rdx,QWORD PTR [rbp-0x28]
  43130b:	mov    QWORD PTR [rdx+0x28],rcx
  43130f:	mov    BYTE PTR [rax],0xa
  431312:	mov    rax,QWORD PTR [rbp-0x28]
  431316:	mov    eax,DWORD PTR [rax+0x38]
  431319:	lea    edx,[rax-0x1]
  43131c:	mov    rax,QWORD PTR [rbp-0x28]
  431320:	mov    DWORD PTR [rax+0x38],edx
  431323:	mov    rax,QWORD PTR [rbp-0x28]
  431327:	mov    rdi,rax
  43132a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43132f:	mov    rax,QWORD PTR [rbp-0x28]
  431333:	mov    rax,QWORD PTR [rax+0x28]
  431337:	lea    rcx,[rax+0x1]
  43133b:	mov    rdx,QWORD PTR [rbp-0x28]
  43133f:	mov    QWORD PTR [rdx+0x28],rcx
  431343:	mov    BYTE PTR [rax],0x5d
  431346:	nop
  431347:	add    rsp,0x38
  43134b:	pop    rbx
  43134c:	pop    rbp
  43134d:	ret    

000000000043134e <flatcc_json_printer_int8_vector_field@@Base>:
  43134e:	endbr64 
  431352:	push   rbp
  431353:	mov    rbp,rsp
  431356:	push   rbx
  431357:	sub    rsp,0x38
  43135b:	mov    QWORD PTR [rbp-0x28],rdi
  43135f:	mov    QWORD PTR [rbp-0x30],rsi
  431363:	mov    DWORD PTR [rbp-0x34],edx
  431366:	mov    QWORD PTR [rbp-0x40],rcx
  43136a:	mov    DWORD PTR [rbp-0x38],r8d
  43136e:	mov    edx,DWORD PTR [rbp-0x34]
  431371:	mov    rax,QWORD PTR [rbp-0x30]
  431375:	mov    esi,edx
  431377:	mov    rdi,rax
  43137a:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  43137f:	mov    QWORD PTR [rbp-0x18],rax
  431383:	cmp    QWORD PTR [rbp-0x18],0x0
  431388:	je     4315b9 <flatcc_json_printer_int8_vector_field@@Base+0x26b>
  43138e:	mov    rax,QWORD PTR [rbp-0x30]
  431392:	mov    eax,DWORD PTR [rax+0x18]
  431395:	lea    ecx,[rax+0x1]
  431398:	mov    rdx,QWORD PTR [rbp-0x30]
  43139c:	mov    DWORD PTR [rdx+0x18],ecx
  43139f:	test   eax,eax
  4313a1:	je     4313ba <flatcc_json_printer_int8_vector_field@@Base+0x6c>
  4313a3:	mov    rax,QWORD PTR [rbp-0x28]
  4313a7:	mov    rax,QWORD PTR [rax+0x28]
  4313ab:	lea    rcx,[rax+0x1]
  4313af:	mov    rdx,QWORD PTR [rbp-0x28]
  4313b3:	mov    QWORD PTR [rdx+0x28],rcx
  4313b7:	mov    BYTE PTR [rax],0x2c
  4313ba:	mov    rax,QWORD PTR [rbp-0x18]
  4313be:	mov    rdi,rax
  4313c1:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4313c6:	mov    QWORD PTR [rbp-0x18],rax
  4313ca:	mov    rax,QWORD PTR [rbp-0x18]
  4313ce:	mov    rdi,rax
  4313d1:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4313d6:	mov    DWORD PTR [rbp-0x1c],eax
  4313d9:	mov    rax,QWORD PTR [rbp-0x18]
  4313dd:	add    rax,0x4
  4313e1:	mov    QWORD PTR [rbp-0x18],rax
  4313e5:	mov    eax,DWORD PTR [rbp-0x38]
  4313e8:	movsxd rdx,eax
  4313eb:	mov    rcx,QWORD PTR [rbp-0x40]
  4313ef:	mov    rax,QWORD PTR [rbp-0x28]
  4313f3:	mov    rsi,rcx
  4313f6:	mov    rdi,rax
  4313f9:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4313fe:	mov    rax,QWORD PTR [rbp-0x28]
  431402:	mov    eax,DWORD PTR [rax+0x38]
  431405:	lea    edx,[rax+0x1]
  431408:	mov    rax,QWORD PTR [rbp-0x28]
  43140c:	mov    DWORD PTR [rax+0x38],edx
  43140f:	mov    rax,QWORD PTR [rbp-0x28]
  431413:	mov    rax,QWORD PTR [rax+0x28]
  431417:	lea    rcx,[rax+0x1]
  43141b:	mov    rdx,QWORD PTR [rbp-0x28]
  43141f:	mov    QWORD PTR [rdx+0x28],rcx
  431423:	mov    BYTE PTR [rax],0x5b
  431426:	cmp    DWORD PTR [rbp-0x1c],0x0
  43142a:	je     431551 <flatcc_json_printer_int8_vector_field@@Base+0x203>
  431430:	mov    rax,QWORD PTR [rbp-0x28]
  431434:	movzx  eax,BYTE PTR [rax+0x31]
  431438:	test   al,al
  43143a:	je     431461 <flatcc_json_printer_int8_vector_field@@Base+0x113>
  43143c:	mov    rax,QWORD PTR [rbp-0x28]
  431440:	mov    rax,QWORD PTR [rax+0x28]
  431444:	lea    rcx,[rax+0x1]
  431448:	mov    rdx,QWORD PTR [rbp-0x28]
  43144c:	mov    QWORD PTR [rdx+0x28],rcx
  431450:	mov    BYTE PTR [rax],0xa
  431453:	mov    rax,QWORD PTR [rbp-0x28]
  431457:	mov    rdi,rax
  43145a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43145f:	jmp    43146d <flatcc_json_printer_int8_vector_field@@Base+0x11f>
  431461:	mov    rax,QWORD PTR [rbp-0x28]
  431465:	mov    rdi,rax
  431468:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43146d:	mov    rax,QWORD PTR [rbp-0x28]
  431471:	mov    rbx,QWORD PTR [rax+0x28]
  431475:	mov    rax,QWORD PTR [rbp-0x18]
  431479:	mov    rdi,rax
  43147c:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  431481:	movsx  eax,al
  431484:	mov    rsi,rbx
  431487:	mov    edi,eax
  431489:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  43148e:	mov    ecx,eax
  431490:	mov    rax,QWORD PTR [rbp-0x28]
  431494:	mov    rdx,QWORD PTR [rax+0x28]
  431498:	movsxd rax,ecx
  43149b:	add    rdx,rax
  43149e:	mov    rax,QWORD PTR [rbp-0x28]
  4314a2:	mov    QWORD PTR [rax+0x28],rdx
  4314a6:	mov    rax,QWORD PTR [rbp-0x18]
  4314aa:	inc    rax
  4314ad:	mov    QWORD PTR [rbp-0x18],rax
  4314b1:	dec    DWORD PTR [rbp-0x1c]
  4314b4:	jmp    431551 <flatcc_json_printer_int8_vector_field@@Base+0x203>
  4314b9:	mov    rax,QWORD PTR [rbp-0x28]
  4314bd:	mov    rax,QWORD PTR [rax+0x28]
  4314c1:	lea    rcx,[rax+0x1]
  4314c5:	mov    rdx,QWORD PTR [rbp-0x28]
  4314c9:	mov    QWORD PTR [rdx+0x28],rcx
  4314cd:	mov    BYTE PTR [rax],0x2c
  4314d0:	mov    rax,QWORD PTR [rbp-0x28]
  4314d4:	movzx  eax,BYTE PTR [rax+0x31]
  4314d8:	test   al,al
  4314da:	je     431501 <flatcc_json_printer_int8_vector_field@@Base+0x1b3>
  4314dc:	mov    rax,QWORD PTR [rbp-0x28]
  4314e0:	mov    rax,QWORD PTR [rax+0x28]
  4314e4:	lea    rcx,[rax+0x1]
  4314e8:	mov    rdx,QWORD PTR [rbp-0x28]
  4314ec:	mov    QWORD PTR [rdx+0x28],rcx
  4314f0:	mov    BYTE PTR [rax],0xa
  4314f3:	mov    rax,QWORD PTR [rbp-0x28]
  4314f7:	mov    rdi,rax
  4314fa:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4314ff:	jmp    43150d <flatcc_json_printer_int8_vector_field@@Base+0x1bf>
  431501:	mov    rax,QWORD PTR [rbp-0x28]
  431505:	mov    rdi,rax
  431508:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43150d:	mov    rax,QWORD PTR [rbp-0x28]
  431511:	mov    rbx,QWORD PTR [rax+0x28]
  431515:	mov    rax,QWORD PTR [rbp-0x18]
  431519:	mov    rdi,rax
  43151c:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  431521:	movsx  eax,al
  431524:	mov    rsi,rbx
  431527:	mov    edi,eax
  431529:	call   42b2fc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  43152e:	mov    ecx,eax
  431530:	mov    rax,QWORD PTR [rbp-0x28]
  431534:	mov    rdx,QWORD PTR [rax+0x28]
  431538:	movsxd rax,ecx
  43153b:	add    rdx,rax
  43153e:	mov    rax,QWORD PTR [rbp-0x28]
  431542:	mov    QWORD PTR [rax+0x28],rdx
  431546:	mov    rax,QWORD PTR [rbp-0x18]
  43154a:	inc    rax
  43154d:	mov    QWORD PTR [rbp-0x18],rax
  431551:	mov    eax,DWORD PTR [rbp-0x1c]
  431554:	lea    edx,[rax-0x1]
  431557:	mov    DWORD PTR [rbp-0x1c],edx
  43155a:	test   eax,eax
  43155c:	jne    4314b9 <flatcc_json_printer_int8_vector_field@@Base+0x16b>
  431562:	mov    rax,QWORD PTR [rbp-0x28]
  431566:	movzx  eax,BYTE PTR [rax+0x31]
  43156a:	test   al,al
  43156c:	je     4315a2 <flatcc_json_printer_int8_vector_field@@Base+0x254>
  43156e:	mov    rax,QWORD PTR [rbp-0x28]
  431572:	mov    rax,QWORD PTR [rax+0x28]
  431576:	lea    rcx,[rax+0x1]
  43157a:	mov    rdx,QWORD PTR [rbp-0x28]
  43157e:	mov    QWORD PTR [rdx+0x28],rcx
  431582:	mov    BYTE PTR [rax],0xa
  431585:	mov    rax,QWORD PTR [rbp-0x28]
  431589:	mov    eax,DWORD PTR [rax+0x38]
  43158c:	lea    edx,[rax-0x1]
  43158f:	mov    rax,QWORD PTR [rbp-0x28]
  431593:	mov    DWORD PTR [rax+0x38],edx
  431596:	mov    rax,QWORD PTR [rbp-0x28]
  43159a:	mov    rdi,rax
  43159d:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4315a2:	mov    rax,QWORD PTR [rbp-0x28]
  4315a6:	mov    rax,QWORD PTR [rax+0x28]
  4315aa:	lea    rcx,[rax+0x1]
  4315ae:	mov    rdx,QWORD PTR [rbp-0x28]
  4315b2:	mov    QWORD PTR [rdx+0x28],rcx
  4315b6:	mov    BYTE PTR [rax],0x5d
  4315b9:	nop
  4315ba:	add    rsp,0x38
  4315be:	pop    rbx
  4315bf:	pop    rbp
  4315c0:	ret    

00000000004315c1 <flatcc_json_printer_int16_vector_field@@Base>:
  4315c1:	endbr64 
  4315c5:	push   rbp
  4315c6:	mov    rbp,rsp
  4315c9:	push   rbx
  4315ca:	sub    rsp,0x38
  4315ce:	mov    QWORD PTR [rbp-0x28],rdi
  4315d2:	mov    QWORD PTR [rbp-0x30],rsi
  4315d6:	mov    DWORD PTR [rbp-0x34],edx
  4315d9:	mov    QWORD PTR [rbp-0x40],rcx
  4315dd:	mov    DWORD PTR [rbp-0x38],r8d
  4315e1:	mov    edx,DWORD PTR [rbp-0x34]
  4315e4:	mov    rax,QWORD PTR [rbp-0x30]
  4315e8:	mov    esi,edx
  4315ea:	mov    rdi,rax
  4315ed:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4315f2:	mov    QWORD PTR [rbp-0x18],rax
  4315f6:	cmp    QWORD PTR [rbp-0x18],0x0
  4315fb:	je     43182a <flatcc_json_printer_int16_vector_field@@Base+0x269>
  431601:	mov    rax,QWORD PTR [rbp-0x30]
  431605:	mov    eax,DWORD PTR [rax+0x18]
  431608:	lea    ecx,[rax+0x1]
  43160b:	mov    rdx,QWORD PTR [rbp-0x30]
  43160f:	mov    DWORD PTR [rdx+0x18],ecx
  431612:	test   eax,eax
  431614:	je     43162d <flatcc_json_printer_int16_vector_field@@Base+0x6c>
  431616:	mov    rax,QWORD PTR [rbp-0x28]
  43161a:	mov    rax,QWORD PTR [rax+0x28]
  43161e:	lea    rcx,[rax+0x1]
  431622:	mov    rdx,QWORD PTR [rbp-0x28]
  431626:	mov    QWORD PTR [rdx+0x28],rcx
  43162a:	mov    BYTE PTR [rax],0x2c
  43162d:	mov    rax,QWORD PTR [rbp-0x18]
  431631:	mov    rdi,rax
  431634:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  431639:	mov    QWORD PTR [rbp-0x18],rax
  43163d:	mov    rax,QWORD PTR [rbp-0x18]
  431641:	mov    rdi,rax
  431644:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431649:	mov    DWORD PTR [rbp-0x1c],eax
  43164c:	mov    rax,QWORD PTR [rbp-0x18]
  431650:	add    rax,0x4
  431654:	mov    QWORD PTR [rbp-0x18],rax
  431658:	mov    eax,DWORD PTR [rbp-0x38]
  43165b:	movsxd rdx,eax
  43165e:	mov    rcx,QWORD PTR [rbp-0x40]
  431662:	mov    rax,QWORD PTR [rbp-0x28]
  431666:	mov    rsi,rcx
  431669:	mov    rdi,rax
  43166c:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  431671:	mov    rax,QWORD PTR [rbp-0x28]
  431675:	mov    eax,DWORD PTR [rax+0x38]
  431678:	lea    edx,[rax+0x1]
  43167b:	mov    rax,QWORD PTR [rbp-0x28]
  43167f:	mov    DWORD PTR [rax+0x38],edx
  431682:	mov    rax,QWORD PTR [rbp-0x28]
  431686:	mov    rax,QWORD PTR [rax+0x28]
  43168a:	lea    rcx,[rax+0x1]
  43168e:	mov    rdx,QWORD PTR [rbp-0x28]
  431692:	mov    QWORD PTR [rdx+0x28],rcx
  431696:	mov    BYTE PTR [rax],0x5b
  431699:	cmp    DWORD PTR [rbp-0x1c],0x0
  43169d:	je     4317c2 <flatcc_json_printer_int16_vector_field@@Base+0x201>
  4316a3:	mov    rax,QWORD PTR [rbp-0x28]
  4316a7:	movzx  eax,BYTE PTR [rax+0x31]
  4316ab:	test   al,al
  4316ad:	je     4316d4 <flatcc_json_printer_int16_vector_field@@Base+0x113>
  4316af:	mov    rax,QWORD PTR [rbp-0x28]
  4316b3:	mov    rax,QWORD PTR [rax+0x28]
  4316b7:	lea    rcx,[rax+0x1]
  4316bb:	mov    rdx,QWORD PTR [rbp-0x28]
  4316bf:	mov    QWORD PTR [rdx+0x28],rcx
  4316c3:	mov    BYTE PTR [rax],0xa
  4316c6:	mov    rax,QWORD PTR [rbp-0x28]
  4316ca:	mov    rdi,rax
  4316cd:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4316d2:	jmp    4316e0 <flatcc_json_printer_int16_vector_field@@Base+0x11f>
  4316d4:	mov    rax,QWORD PTR [rbp-0x28]
  4316d8:	mov    rdi,rax
  4316db:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4316e0:	mov    rax,QWORD PTR [rbp-0x28]
  4316e4:	mov    rbx,QWORD PTR [rax+0x28]
  4316e8:	mov    rax,QWORD PTR [rbp-0x18]
  4316ec:	mov    rdi,rax
  4316ef:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  4316f4:	cwde   
  4316f5:	mov    rsi,rbx
  4316f8:	mov    edi,eax
  4316fa:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  4316ff:	mov    ecx,eax
  431701:	mov    rax,QWORD PTR [rbp-0x28]
  431705:	mov    rdx,QWORD PTR [rax+0x28]
  431709:	movsxd rax,ecx
  43170c:	add    rdx,rax
  43170f:	mov    rax,QWORD PTR [rbp-0x28]
  431713:	mov    QWORD PTR [rax+0x28],rdx
  431717:	mov    rax,QWORD PTR [rbp-0x18]
  43171b:	add    rax,0x2
  43171f:	mov    QWORD PTR [rbp-0x18],rax
  431723:	dec    DWORD PTR [rbp-0x1c]
  431726:	jmp    4317c2 <flatcc_json_printer_int16_vector_field@@Base+0x201>
  43172b:	mov    rax,QWORD PTR [rbp-0x28]
  43172f:	mov    rax,QWORD PTR [rax+0x28]
  431733:	lea    rcx,[rax+0x1]
  431737:	mov    rdx,QWORD PTR [rbp-0x28]
  43173b:	mov    QWORD PTR [rdx+0x28],rcx
  43173f:	mov    BYTE PTR [rax],0x2c
  431742:	mov    rax,QWORD PTR [rbp-0x28]
  431746:	movzx  eax,BYTE PTR [rax+0x31]
  43174a:	test   al,al
  43174c:	je     431773 <flatcc_json_printer_int16_vector_field@@Base+0x1b2>
  43174e:	mov    rax,QWORD PTR [rbp-0x28]
  431752:	mov    rax,QWORD PTR [rax+0x28]
  431756:	lea    rcx,[rax+0x1]
  43175a:	mov    rdx,QWORD PTR [rbp-0x28]
  43175e:	mov    QWORD PTR [rdx+0x28],rcx
  431762:	mov    BYTE PTR [rax],0xa
  431765:	mov    rax,QWORD PTR [rbp-0x28]
  431769:	mov    rdi,rax
  43176c:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431771:	jmp    43177f <flatcc_json_printer_int16_vector_field@@Base+0x1be>
  431773:	mov    rax,QWORD PTR [rbp-0x28]
  431777:	mov    rdi,rax
  43177a:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43177f:	mov    rax,QWORD PTR [rbp-0x28]
  431783:	mov    rbx,QWORD PTR [rax+0x28]
  431787:	mov    rax,QWORD PTR [rbp-0x18]
  43178b:	mov    rdi,rax
  43178e:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  431793:	cwde   
  431794:	mov    rsi,rbx
  431797:	mov    edi,eax
  431799:	call   42b35a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  43179e:	mov    ecx,eax
  4317a0:	mov    rax,QWORD PTR [rbp-0x28]
  4317a4:	mov    rdx,QWORD PTR [rax+0x28]
  4317a8:	movsxd rax,ecx
  4317ab:	add    rdx,rax
  4317ae:	mov    rax,QWORD PTR [rbp-0x28]
  4317b2:	mov    QWORD PTR [rax+0x28],rdx
  4317b6:	mov    rax,QWORD PTR [rbp-0x18]
  4317ba:	add    rax,0x2
  4317be:	mov    QWORD PTR [rbp-0x18],rax
  4317c2:	mov    eax,DWORD PTR [rbp-0x1c]
  4317c5:	lea    edx,[rax-0x1]
  4317c8:	mov    DWORD PTR [rbp-0x1c],edx
  4317cb:	test   eax,eax
  4317cd:	jne    43172b <flatcc_json_printer_int16_vector_field@@Base+0x16a>
  4317d3:	mov    rax,QWORD PTR [rbp-0x28]
  4317d7:	movzx  eax,BYTE PTR [rax+0x31]
  4317db:	test   al,al
  4317dd:	je     431813 <flatcc_json_printer_int16_vector_field@@Base+0x252>
  4317df:	mov    rax,QWORD PTR [rbp-0x28]
  4317e3:	mov    rax,QWORD PTR [rax+0x28]
  4317e7:	lea    rcx,[rax+0x1]
  4317eb:	mov    rdx,QWORD PTR [rbp-0x28]
  4317ef:	mov    QWORD PTR [rdx+0x28],rcx
  4317f3:	mov    BYTE PTR [rax],0xa
  4317f6:	mov    rax,QWORD PTR [rbp-0x28]
  4317fa:	mov    eax,DWORD PTR [rax+0x38]
  4317fd:	lea    edx,[rax-0x1]
  431800:	mov    rax,QWORD PTR [rbp-0x28]
  431804:	mov    DWORD PTR [rax+0x38],edx
  431807:	mov    rax,QWORD PTR [rbp-0x28]
  43180b:	mov    rdi,rax
  43180e:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431813:	mov    rax,QWORD PTR [rbp-0x28]
  431817:	mov    rax,QWORD PTR [rax+0x28]
  43181b:	lea    rcx,[rax+0x1]
  43181f:	mov    rdx,QWORD PTR [rbp-0x28]
  431823:	mov    QWORD PTR [rdx+0x28],rcx
  431827:	mov    BYTE PTR [rax],0x5d
  43182a:	nop
  43182b:	add    rsp,0x38
  43182f:	pop    rbx
  431830:	pop    rbp
  431831:	ret    

0000000000431832 <flatcc_json_printer_int32_vector_field@@Base>:
  431832:	endbr64 
  431836:	push   rbp
  431837:	mov    rbp,rsp
  43183a:	push   rbx
  43183b:	sub    rsp,0x38
  43183f:	mov    QWORD PTR [rbp-0x28],rdi
  431843:	mov    QWORD PTR [rbp-0x30],rsi
  431847:	mov    DWORD PTR [rbp-0x34],edx
  43184a:	mov    QWORD PTR [rbp-0x40],rcx
  43184e:	mov    DWORD PTR [rbp-0x38],r8d
  431852:	mov    edx,DWORD PTR [rbp-0x34]
  431855:	mov    rax,QWORD PTR [rbp-0x30]
  431859:	mov    esi,edx
  43185b:	mov    rdi,rax
  43185e:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  431863:	mov    QWORD PTR [rbp-0x18],rax
  431867:	cmp    QWORD PTR [rbp-0x18],0x0
  43186c:	je     431a99 <flatcc_json_printer_int32_vector_field@@Base+0x267>
  431872:	mov    rax,QWORD PTR [rbp-0x30]
  431876:	mov    eax,DWORD PTR [rax+0x18]
  431879:	lea    ecx,[rax+0x1]
  43187c:	mov    rdx,QWORD PTR [rbp-0x30]
  431880:	mov    DWORD PTR [rdx+0x18],ecx
  431883:	test   eax,eax
  431885:	je     43189e <flatcc_json_printer_int32_vector_field@@Base+0x6c>
  431887:	mov    rax,QWORD PTR [rbp-0x28]
  43188b:	mov    rax,QWORD PTR [rax+0x28]
  43188f:	lea    rcx,[rax+0x1]
  431893:	mov    rdx,QWORD PTR [rbp-0x28]
  431897:	mov    QWORD PTR [rdx+0x28],rcx
  43189b:	mov    BYTE PTR [rax],0x2c
  43189e:	mov    rax,QWORD PTR [rbp-0x18]
  4318a2:	mov    rdi,rax
  4318a5:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4318aa:	mov    QWORD PTR [rbp-0x18],rax
  4318ae:	mov    rax,QWORD PTR [rbp-0x18]
  4318b2:	mov    rdi,rax
  4318b5:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4318ba:	mov    DWORD PTR [rbp-0x1c],eax
  4318bd:	mov    rax,QWORD PTR [rbp-0x18]
  4318c1:	add    rax,0x4
  4318c5:	mov    QWORD PTR [rbp-0x18],rax
  4318c9:	mov    eax,DWORD PTR [rbp-0x38]
  4318cc:	movsxd rdx,eax
  4318cf:	mov    rcx,QWORD PTR [rbp-0x40]
  4318d3:	mov    rax,QWORD PTR [rbp-0x28]
  4318d7:	mov    rsi,rcx
  4318da:	mov    rdi,rax
  4318dd:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4318e2:	mov    rax,QWORD PTR [rbp-0x28]
  4318e6:	mov    eax,DWORD PTR [rax+0x38]
  4318e9:	lea    edx,[rax+0x1]
  4318ec:	mov    rax,QWORD PTR [rbp-0x28]
  4318f0:	mov    DWORD PTR [rax+0x38],edx
  4318f3:	mov    rax,QWORD PTR [rbp-0x28]
  4318f7:	mov    rax,QWORD PTR [rax+0x28]
  4318fb:	lea    rcx,[rax+0x1]
  4318ff:	mov    rdx,QWORD PTR [rbp-0x28]
  431903:	mov    QWORD PTR [rdx+0x28],rcx
  431907:	mov    BYTE PTR [rax],0x5b
  43190a:	cmp    DWORD PTR [rbp-0x1c],0x0
  43190e:	je     431a31 <flatcc_json_printer_int32_vector_field@@Base+0x1ff>
  431914:	mov    rax,QWORD PTR [rbp-0x28]
  431918:	movzx  eax,BYTE PTR [rax+0x31]
  43191c:	test   al,al
  43191e:	je     431945 <flatcc_json_printer_int32_vector_field@@Base+0x113>
  431920:	mov    rax,QWORD PTR [rbp-0x28]
  431924:	mov    rax,QWORD PTR [rax+0x28]
  431928:	lea    rcx,[rax+0x1]
  43192c:	mov    rdx,QWORD PTR [rbp-0x28]
  431930:	mov    QWORD PTR [rdx+0x28],rcx
  431934:	mov    BYTE PTR [rax],0xa
  431937:	mov    rax,QWORD PTR [rbp-0x28]
  43193b:	mov    rdi,rax
  43193e:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431943:	jmp    431951 <flatcc_json_printer_int32_vector_field@@Base+0x11f>
  431945:	mov    rax,QWORD PTR [rbp-0x28]
  431949:	mov    rdi,rax
  43194c:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431951:	mov    rax,QWORD PTR [rbp-0x28]
  431955:	mov    rbx,QWORD PTR [rax+0x28]
  431959:	mov    rax,QWORD PTR [rbp-0x18]
  43195d:	mov    rdi,rax
  431960:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  431965:	mov    rsi,rbx
  431968:	mov    edi,eax
  43196a:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  43196f:	mov    ecx,eax
  431971:	mov    rax,QWORD PTR [rbp-0x28]
  431975:	mov    rdx,QWORD PTR [rax+0x28]
  431979:	movsxd rax,ecx
  43197c:	add    rdx,rax
  43197f:	mov    rax,QWORD PTR [rbp-0x28]
  431983:	mov    QWORD PTR [rax+0x28],rdx
  431987:	mov    rax,QWORD PTR [rbp-0x18]
  43198b:	add    rax,0x4
  43198f:	mov    QWORD PTR [rbp-0x18],rax
  431993:	dec    DWORD PTR [rbp-0x1c]
  431996:	jmp    431a31 <flatcc_json_printer_int32_vector_field@@Base+0x1ff>
  43199b:	mov    rax,QWORD PTR [rbp-0x28]
  43199f:	mov    rax,QWORD PTR [rax+0x28]
  4319a3:	lea    rcx,[rax+0x1]
  4319a7:	mov    rdx,QWORD PTR [rbp-0x28]
  4319ab:	mov    QWORD PTR [rdx+0x28],rcx
  4319af:	mov    BYTE PTR [rax],0x2c
  4319b2:	mov    rax,QWORD PTR [rbp-0x28]
  4319b6:	movzx  eax,BYTE PTR [rax+0x31]
  4319ba:	test   al,al
  4319bc:	je     4319e3 <flatcc_json_printer_int32_vector_field@@Base+0x1b1>
  4319be:	mov    rax,QWORD PTR [rbp-0x28]
  4319c2:	mov    rax,QWORD PTR [rax+0x28]
  4319c6:	lea    rcx,[rax+0x1]
  4319ca:	mov    rdx,QWORD PTR [rbp-0x28]
  4319ce:	mov    QWORD PTR [rdx+0x28],rcx
  4319d2:	mov    BYTE PTR [rax],0xa
  4319d5:	mov    rax,QWORD PTR [rbp-0x28]
  4319d9:	mov    rdi,rax
  4319dc:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4319e1:	jmp    4319ef <flatcc_json_printer_int32_vector_field@@Base+0x1bd>
  4319e3:	mov    rax,QWORD PTR [rbp-0x28]
  4319e7:	mov    rdi,rax
  4319ea:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4319ef:	mov    rax,QWORD PTR [rbp-0x28]
  4319f3:	mov    rbx,QWORD PTR [rax+0x28]
  4319f7:	mov    rax,QWORD PTR [rbp-0x18]
  4319fb:	mov    rdi,rax
  4319fe:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  431a03:	mov    rsi,rbx
  431a06:	mov    edi,eax
  431a08:	call   42b3bb <flatcc_json_parser_struct_as_root@@Base+0x1686>
  431a0d:	mov    ecx,eax
  431a0f:	mov    rax,QWORD PTR [rbp-0x28]
  431a13:	mov    rdx,QWORD PTR [rax+0x28]
  431a17:	movsxd rax,ecx
  431a1a:	add    rdx,rax
  431a1d:	mov    rax,QWORD PTR [rbp-0x28]
  431a21:	mov    QWORD PTR [rax+0x28],rdx
  431a25:	mov    rax,QWORD PTR [rbp-0x18]
  431a29:	add    rax,0x4
  431a2d:	mov    QWORD PTR [rbp-0x18],rax
  431a31:	mov    eax,DWORD PTR [rbp-0x1c]
  431a34:	lea    edx,[rax-0x1]
  431a37:	mov    DWORD PTR [rbp-0x1c],edx
  431a3a:	test   eax,eax
  431a3c:	jne    43199b <flatcc_json_printer_int32_vector_field@@Base+0x169>
  431a42:	mov    rax,QWORD PTR [rbp-0x28]
  431a46:	movzx  eax,BYTE PTR [rax+0x31]
  431a4a:	test   al,al
  431a4c:	je     431a82 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  431a4e:	mov    rax,QWORD PTR [rbp-0x28]
  431a52:	mov    rax,QWORD PTR [rax+0x28]
  431a56:	lea    rcx,[rax+0x1]
  431a5a:	mov    rdx,QWORD PTR [rbp-0x28]
  431a5e:	mov    QWORD PTR [rdx+0x28],rcx
  431a62:	mov    BYTE PTR [rax],0xa
  431a65:	mov    rax,QWORD PTR [rbp-0x28]
  431a69:	mov    eax,DWORD PTR [rax+0x38]
  431a6c:	lea    edx,[rax-0x1]
  431a6f:	mov    rax,QWORD PTR [rbp-0x28]
  431a73:	mov    DWORD PTR [rax+0x38],edx
  431a76:	mov    rax,QWORD PTR [rbp-0x28]
  431a7a:	mov    rdi,rax
  431a7d:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431a82:	mov    rax,QWORD PTR [rbp-0x28]
  431a86:	mov    rax,QWORD PTR [rax+0x28]
  431a8a:	lea    rcx,[rax+0x1]
  431a8e:	mov    rdx,QWORD PTR [rbp-0x28]
  431a92:	mov    QWORD PTR [rdx+0x28],rcx
  431a96:	mov    BYTE PTR [rax],0x5d
  431a99:	nop
  431a9a:	add    rsp,0x38
  431a9e:	pop    rbx
  431a9f:	pop    rbp
  431aa0:	ret    

0000000000431aa1 <flatcc_json_printer_int64_vector_field@@Base>:
  431aa1:	endbr64 
  431aa5:	push   rbp
  431aa6:	mov    rbp,rsp
  431aa9:	push   rbx
  431aaa:	sub    rsp,0x38
  431aae:	mov    QWORD PTR [rbp-0x28],rdi
  431ab2:	mov    QWORD PTR [rbp-0x30],rsi
  431ab6:	mov    DWORD PTR [rbp-0x34],edx
  431ab9:	mov    QWORD PTR [rbp-0x40],rcx
  431abd:	mov    DWORD PTR [rbp-0x38],r8d
  431ac1:	mov    edx,DWORD PTR [rbp-0x34]
  431ac4:	mov    rax,QWORD PTR [rbp-0x30]
  431ac8:	mov    esi,edx
  431aca:	mov    rdi,rax
  431acd:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  431ad2:	mov    QWORD PTR [rbp-0x18],rax
  431ad6:	cmp    QWORD PTR [rbp-0x18],0x0
  431adb:	je     431d0a <flatcc_json_printer_int64_vector_field@@Base+0x269>
  431ae1:	mov    rax,QWORD PTR [rbp-0x30]
  431ae5:	mov    eax,DWORD PTR [rax+0x18]
  431ae8:	lea    ecx,[rax+0x1]
  431aeb:	mov    rdx,QWORD PTR [rbp-0x30]
  431aef:	mov    DWORD PTR [rdx+0x18],ecx
  431af2:	test   eax,eax
  431af4:	je     431b0d <flatcc_json_printer_int64_vector_field@@Base+0x6c>
  431af6:	mov    rax,QWORD PTR [rbp-0x28]
  431afa:	mov    rax,QWORD PTR [rax+0x28]
  431afe:	lea    rcx,[rax+0x1]
  431b02:	mov    rdx,QWORD PTR [rbp-0x28]
  431b06:	mov    QWORD PTR [rdx+0x28],rcx
  431b0a:	mov    BYTE PTR [rax],0x2c
  431b0d:	mov    rax,QWORD PTR [rbp-0x18]
  431b11:	mov    rdi,rax
  431b14:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  431b19:	mov    QWORD PTR [rbp-0x18],rax
  431b1d:	mov    rax,QWORD PTR [rbp-0x18]
  431b21:	mov    rdi,rax
  431b24:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431b29:	mov    DWORD PTR [rbp-0x1c],eax
  431b2c:	mov    rax,QWORD PTR [rbp-0x18]
  431b30:	add    rax,0x4
  431b34:	mov    QWORD PTR [rbp-0x18],rax
  431b38:	mov    eax,DWORD PTR [rbp-0x38]
  431b3b:	movsxd rdx,eax
  431b3e:	mov    rcx,QWORD PTR [rbp-0x40]
  431b42:	mov    rax,QWORD PTR [rbp-0x28]
  431b46:	mov    rsi,rcx
  431b49:	mov    rdi,rax
  431b4c:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  431b51:	mov    rax,QWORD PTR [rbp-0x28]
  431b55:	mov    eax,DWORD PTR [rax+0x38]
  431b58:	lea    edx,[rax+0x1]
  431b5b:	mov    rax,QWORD PTR [rbp-0x28]
  431b5f:	mov    DWORD PTR [rax+0x38],edx
  431b62:	mov    rax,QWORD PTR [rbp-0x28]
  431b66:	mov    rax,QWORD PTR [rax+0x28]
  431b6a:	lea    rcx,[rax+0x1]
  431b6e:	mov    rdx,QWORD PTR [rbp-0x28]
  431b72:	mov    QWORD PTR [rdx+0x28],rcx
  431b76:	mov    BYTE PTR [rax],0x5b
  431b79:	cmp    DWORD PTR [rbp-0x1c],0x0
  431b7d:	je     431ca2 <flatcc_json_printer_int64_vector_field@@Base+0x201>
  431b83:	mov    rax,QWORD PTR [rbp-0x28]
  431b87:	movzx  eax,BYTE PTR [rax+0x31]
  431b8b:	test   al,al
  431b8d:	je     431bb4 <flatcc_json_printer_int64_vector_field@@Base+0x113>
  431b8f:	mov    rax,QWORD PTR [rbp-0x28]
  431b93:	mov    rax,QWORD PTR [rax+0x28]
  431b97:	lea    rcx,[rax+0x1]
  431b9b:	mov    rdx,QWORD PTR [rbp-0x28]
  431b9f:	mov    QWORD PTR [rdx+0x28],rcx
  431ba3:	mov    BYTE PTR [rax],0xa
  431ba6:	mov    rax,QWORD PTR [rbp-0x28]
  431baa:	mov    rdi,rax
  431bad:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431bb2:	jmp    431bc0 <flatcc_json_printer_int64_vector_field@@Base+0x11f>
  431bb4:	mov    rax,QWORD PTR [rbp-0x28]
  431bb8:	mov    rdi,rax
  431bbb:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431bc0:	mov    rax,QWORD PTR [rbp-0x28]
  431bc4:	mov    rbx,QWORD PTR [rax+0x28]
  431bc8:	mov    rax,QWORD PTR [rbp-0x18]
  431bcc:	mov    rdi,rax
  431bcf:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  431bd4:	mov    rsi,rbx
  431bd7:	mov    rdi,rax
  431bda:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  431bdf:	mov    ecx,eax
  431be1:	mov    rax,QWORD PTR [rbp-0x28]
  431be5:	mov    rdx,QWORD PTR [rax+0x28]
  431be9:	movsxd rax,ecx
  431bec:	add    rdx,rax
  431bef:	mov    rax,QWORD PTR [rbp-0x28]
  431bf3:	mov    QWORD PTR [rax+0x28],rdx
  431bf7:	mov    rax,QWORD PTR [rbp-0x18]
  431bfb:	add    rax,0x8
  431bff:	mov    QWORD PTR [rbp-0x18],rax
  431c03:	dec    DWORD PTR [rbp-0x1c]
  431c06:	jmp    431ca2 <flatcc_json_printer_int64_vector_field@@Base+0x201>
  431c0b:	mov    rax,QWORD PTR [rbp-0x28]
  431c0f:	mov    rax,QWORD PTR [rax+0x28]
  431c13:	lea    rcx,[rax+0x1]
  431c17:	mov    rdx,QWORD PTR [rbp-0x28]
  431c1b:	mov    QWORD PTR [rdx+0x28],rcx
  431c1f:	mov    BYTE PTR [rax],0x2c
  431c22:	mov    rax,QWORD PTR [rbp-0x28]
  431c26:	movzx  eax,BYTE PTR [rax+0x31]
  431c2a:	test   al,al
  431c2c:	je     431c53 <flatcc_json_printer_int64_vector_field@@Base+0x1b2>
  431c2e:	mov    rax,QWORD PTR [rbp-0x28]
  431c32:	mov    rax,QWORD PTR [rax+0x28]
  431c36:	lea    rcx,[rax+0x1]
  431c3a:	mov    rdx,QWORD PTR [rbp-0x28]
  431c3e:	mov    QWORD PTR [rdx+0x28],rcx
  431c42:	mov    BYTE PTR [rax],0xa
  431c45:	mov    rax,QWORD PTR [rbp-0x28]
  431c49:	mov    rdi,rax
  431c4c:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431c51:	jmp    431c5f <flatcc_json_printer_int64_vector_field@@Base+0x1be>
  431c53:	mov    rax,QWORD PTR [rbp-0x28]
  431c57:	mov    rdi,rax
  431c5a:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431c5f:	mov    rax,QWORD PTR [rbp-0x28]
  431c63:	mov    rbx,QWORD PTR [rax+0x28]
  431c67:	mov    rax,QWORD PTR [rbp-0x18]
  431c6b:	mov    rdi,rax
  431c6e:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  431c73:	mov    rsi,rbx
  431c76:	mov    rdi,rax
  431c79:	call   42b40c <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  431c7e:	mov    ecx,eax
  431c80:	mov    rax,QWORD PTR [rbp-0x28]
  431c84:	mov    rdx,QWORD PTR [rax+0x28]
  431c88:	movsxd rax,ecx
  431c8b:	add    rdx,rax
  431c8e:	mov    rax,QWORD PTR [rbp-0x28]
  431c92:	mov    QWORD PTR [rax+0x28],rdx
  431c96:	mov    rax,QWORD PTR [rbp-0x18]
  431c9a:	add    rax,0x8
  431c9e:	mov    QWORD PTR [rbp-0x18],rax
  431ca2:	mov    eax,DWORD PTR [rbp-0x1c]
  431ca5:	lea    edx,[rax-0x1]
  431ca8:	mov    DWORD PTR [rbp-0x1c],edx
  431cab:	test   eax,eax
  431cad:	jne    431c0b <flatcc_json_printer_int64_vector_field@@Base+0x16a>
  431cb3:	mov    rax,QWORD PTR [rbp-0x28]
  431cb7:	movzx  eax,BYTE PTR [rax+0x31]
  431cbb:	test   al,al
  431cbd:	je     431cf3 <flatcc_json_printer_int64_vector_field@@Base+0x252>
  431cbf:	mov    rax,QWORD PTR [rbp-0x28]
  431cc3:	mov    rax,QWORD PTR [rax+0x28]
  431cc7:	lea    rcx,[rax+0x1]
  431ccb:	mov    rdx,QWORD PTR [rbp-0x28]
  431ccf:	mov    QWORD PTR [rdx+0x28],rcx
  431cd3:	mov    BYTE PTR [rax],0xa
  431cd6:	mov    rax,QWORD PTR [rbp-0x28]
  431cda:	mov    eax,DWORD PTR [rax+0x38]
  431cdd:	lea    edx,[rax-0x1]
  431ce0:	mov    rax,QWORD PTR [rbp-0x28]
  431ce4:	mov    DWORD PTR [rax+0x38],edx
  431ce7:	mov    rax,QWORD PTR [rbp-0x28]
  431ceb:	mov    rdi,rax
  431cee:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431cf3:	mov    rax,QWORD PTR [rbp-0x28]
  431cf7:	mov    rax,QWORD PTR [rax+0x28]
  431cfb:	lea    rcx,[rax+0x1]
  431cff:	mov    rdx,QWORD PTR [rbp-0x28]
  431d03:	mov    QWORD PTR [rdx+0x28],rcx
  431d07:	mov    BYTE PTR [rax],0x5d
  431d0a:	nop
  431d0b:	add    rsp,0x38
  431d0f:	pop    rbx
  431d10:	pop    rbp
  431d11:	ret    

0000000000431d12 <flatcc_json_printer_bool_vector_field@@Base>:
  431d12:	endbr64 
  431d16:	push   rbp
  431d17:	mov    rbp,rsp
  431d1a:	push   rbx
  431d1b:	sub    rsp,0x38
  431d1f:	mov    QWORD PTR [rbp-0x28],rdi
  431d23:	mov    QWORD PTR [rbp-0x30],rsi
  431d27:	mov    DWORD PTR [rbp-0x34],edx
  431d2a:	mov    QWORD PTR [rbp-0x40],rcx
  431d2e:	mov    DWORD PTR [rbp-0x38],r8d
  431d32:	mov    edx,DWORD PTR [rbp-0x34]
  431d35:	mov    rax,QWORD PTR [rbp-0x30]
  431d39:	mov    esi,edx
  431d3b:	mov    rdi,rax
  431d3e:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  431d43:	mov    QWORD PTR [rbp-0x18],rax
  431d47:	cmp    QWORD PTR [rbp-0x18],0x0
  431d4c:	je     431f7d <flatcc_json_printer_bool_vector_field@@Base+0x26b>
  431d52:	mov    rax,QWORD PTR [rbp-0x30]
  431d56:	mov    eax,DWORD PTR [rax+0x18]
  431d59:	lea    ecx,[rax+0x1]
  431d5c:	mov    rdx,QWORD PTR [rbp-0x30]
  431d60:	mov    DWORD PTR [rdx+0x18],ecx
  431d63:	test   eax,eax
  431d65:	je     431d7e <flatcc_json_printer_bool_vector_field@@Base+0x6c>
  431d67:	mov    rax,QWORD PTR [rbp-0x28]
  431d6b:	mov    rax,QWORD PTR [rax+0x28]
  431d6f:	lea    rcx,[rax+0x1]
  431d73:	mov    rdx,QWORD PTR [rbp-0x28]
  431d77:	mov    QWORD PTR [rdx+0x28],rcx
  431d7b:	mov    BYTE PTR [rax],0x2c
  431d7e:	mov    rax,QWORD PTR [rbp-0x18]
  431d82:	mov    rdi,rax
  431d85:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  431d8a:	mov    QWORD PTR [rbp-0x18],rax
  431d8e:	mov    rax,QWORD PTR [rbp-0x18]
  431d92:	mov    rdi,rax
  431d95:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431d9a:	mov    DWORD PTR [rbp-0x1c],eax
  431d9d:	mov    rax,QWORD PTR [rbp-0x18]
  431da1:	add    rax,0x4
  431da5:	mov    QWORD PTR [rbp-0x18],rax
  431da9:	mov    eax,DWORD PTR [rbp-0x38]
  431dac:	movsxd rdx,eax
  431daf:	mov    rcx,QWORD PTR [rbp-0x40]
  431db3:	mov    rax,QWORD PTR [rbp-0x28]
  431db7:	mov    rsi,rcx
  431dba:	mov    rdi,rax
  431dbd:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  431dc2:	mov    rax,QWORD PTR [rbp-0x28]
  431dc6:	mov    eax,DWORD PTR [rax+0x38]
  431dc9:	lea    edx,[rax+0x1]
  431dcc:	mov    rax,QWORD PTR [rbp-0x28]
  431dd0:	mov    DWORD PTR [rax+0x38],edx
  431dd3:	mov    rax,QWORD PTR [rbp-0x28]
  431dd7:	mov    rax,QWORD PTR [rax+0x28]
  431ddb:	lea    rcx,[rax+0x1]
  431ddf:	mov    rdx,QWORD PTR [rbp-0x28]
  431de3:	mov    QWORD PTR [rdx+0x28],rcx
  431de7:	mov    BYTE PTR [rax],0x5b
  431dea:	cmp    DWORD PTR [rbp-0x1c],0x0
  431dee:	je     431f15 <flatcc_json_printer_bool_vector_field@@Base+0x203>
  431df4:	mov    rax,QWORD PTR [rbp-0x28]
  431df8:	movzx  eax,BYTE PTR [rax+0x31]
  431dfc:	test   al,al
  431dfe:	je     431e25 <flatcc_json_printer_bool_vector_field@@Base+0x113>
  431e00:	mov    rax,QWORD PTR [rbp-0x28]
  431e04:	mov    rax,QWORD PTR [rax+0x28]
  431e08:	lea    rcx,[rax+0x1]
  431e0c:	mov    rdx,QWORD PTR [rbp-0x28]
  431e10:	mov    QWORD PTR [rdx+0x28],rcx
  431e14:	mov    BYTE PTR [rax],0xa
  431e17:	mov    rax,QWORD PTR [rbp-0x28]
  431e1b:	mov    rdi,rax
  431e1e:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431e23:	jmp    431e31 <flatcc_json_printer_bool_vector_field@@Base+0x11f>
  431e25:	mov    rax,QWORD PTR [rbp-0x28]
  431e29:	mov    rdi,rax
  431e2c:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431e31:	mov    rax,QWORD PTR [rbp-0x28]
  431e35:	mov    rbx,QWORD PTR [rax+0x28]
  431e39:	mov    rax,QWORD PTR [rbp-0x18]
  431e3d:	mov    rdi,rax
  431e40:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  431e45:	movzx  eax,al
  431e48:	mov    rsi,rbx
  431e4b:	mov    edi,eax
  431e4d:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  431e52:	mov    ecx,eax
  431e54:	mov    rax,QWORD PTR [rbp-0x28]
  431e58:	mov    rdx,QWORD PTR [rax+0x28]
  431e5c:	movsxd rax,ecx
  431e5f:	add    rdx,rax
  431e62:	mov    rax,QWORD PTR [rbp-0x28]
  431e66:	mov    QWORD PTR [rax+0x28],rdx
  431e6a:	mov    rax,QWORD PTR [rbp-0x18]
  431e6e:	inc    rax
  431e71:	mov    QWORD PTR [rbp-0x18],rax
  431e75:	dec    DWORD PTR [rbp-0x1c]
  431e78:	jmp    431f15 <flatcc_json_printer_bool_vector_field@@Base+0x203>
  431e7d:	mov    rax,QWORD PTR [rbp-0x28]
  431e81:	mov    rax,QWORD PTR [rax+0x28]
  431e85:	lea    rcx,[rax+0x1]
  431e89:	mov    rdx,QWORD PTR [rbp-0x28]
  431e8d:	mov    QWORD PTR [rdx+0x28],rcx
  431e91:	mov    BYTE PTR [rax],0x2c
  431e94:	mov    rax,QWORD PTR [rbp-0x28]
  431e98:	movzx  eax,BYTE PTR [rax+0x31]
  431e9c:	test   al,al
  431e9e:	je     431ec5 <flatcc_json_printer_bool_vector_field@@Base+0x1b3>
  431ea0:	mov    rax,QWORD PTR [rbp-0x28]
  431ea4:	mov    rax,QWORD PTR [rax+0x28]
  431ea8:	lea    rcx,[rax+0x1]
  431eac:	mov    rdx,QWORD PTR [rbp-0x28]
  431eb0:	mov    QWORD PTR [rdx+0x28],rcx
  431eb4:	mov    BYTE PTR [rax],0xa
  431eb7:	mov    rax,QWORD PTR [rbp-0x28]
  431ebb:	mov    rdi,rax
  431ebe:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431ec3:	jmp    431ed1 <flatcc_json_printer_bool_vector_field@@Base+0x1bf>
  431ec5:	mov    rax,QWORD PTR [rbp-0x28]
  431ec9:	mov    rdi,rax
  431ecc:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431ed1:	mov    rax,QWORD PTR [rbp-0x28]
  431ed5:	mov    rbx,QWORD PTR [rax+0x28]
  431ed9:	mov    rax,QWORD PTR [rbp-0x18]
  431edd:	mov    rdi,rax
  431ee0:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  431ee5:	movzx  eax,al
  431ee8:	mov    rsi,rbx
  431eeb:	mov    edi,eax
  431eed:	call   42a1d6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  431ef2:	mov    ecx,eax
  431ef4:	mov    rax,QWORD PTR [rbp-0x28]
  431ef8:	mov    rdx,QWORD PTR [rax+0x28]
  431efc:	movsxd rax,ecx
  431eff:	add    rdx,rax
  431f02:	mov    rax,QWORD PTR [rbp-0x28]
  431f06:	mov    QWORD PTR [rax+0x28],rdx
  431f0a:	mov    rax,QWORD PTR [rbp-0x18]
  431f0e:	inc    rax
  431f11:	mov    QWORD PTR [rbp-0x18],rax
  431f15:	mov    eax,DWORD PTR [rbp-0x1c]
  431f18:	lea    edx,[rax-0x1]
  431f1b:	mov    DWORD PTR [rbp-0x1c],edx
  431f1e:	test   eax,eax
  431f20:	jne    431e7d <flatcc_json_printer_bool_vector_field@@Base+0x16b>
  431f26:	mov    rax,QWORD PTR [rbp-0x28]
  431f2a:	movzx  eax,BYTE PTR [rax+0x31]
  431f2e:	test   al,al
  431f30:	je     431f66 <flatcc_json_printer_bool_vector_field@@Base+0x254>
  431f32:	mov    rax,QWORD PTR [rbp-0x28]
  431f36:	mov    rax,QWORD PTR [rax+0x28]
  431f3a:	lea    rcx,[rax+0x1]
  431f3e:	mov    rdx,QWORD PTR [rbp-0x28]
  431f42:	mov    QWORD PTR [rdx+0x28],rcx
  431f46:	mov    BYTE PTR [rax],0xa
  431f49:	mov    rax,QWORD PTR [rbp-0x28]
  431f4d:	mov    eax,DWORD PTR [rax+0x38]
  431f50:	lea    edx,[rax-0x1]
  431f53:	mov    rax,QWORD PTR [rbp-0x28]
  431f57:	mov    DWORD PTR [rax+0x38],edx
  431f5a:	mov    rax,QWORD PTR [rbp-0x28]
  431f5e:	mov    rdi,rax
  431f61:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431f66:	mov    rax,QWORD PTR [rbp-0x28]
  431f6a:	mov    rax,QWORD PTR [rax+0x28]
  431f6e:	lea    rcx,[rax+0x1]
  431f72:	mov    rdx,QWORD PTR [rbp-0x28]
  431f76:	mov    QWORD PTR [rdx+0x28],rcx
  431f7a:	mov    BYTE PTR [rax],0x5d
  431f7d:	nop
  431f7e:	add    rsp,0x38
  431f82:	pop    rbx
  431f83:	pop    rbp
  431f84:	ret    

0000000000431f85 <flatcc_json_printer_float_vector_field@@Base>:
  431f85:	endbr64 
  431f89:	push   rbp
  431f8a:	mov    rbp,rsp
  431f8d:	push   rbx
  431f8e:	sub    rsp,0x38
  431f92:	mov    QWORD PTR [rbp-0x28],rdi
  431f96:	mov    QWORD PTR [rbp-0x30],rsi
  431f9a:	mov    DWORD PTR [rbp-0x34],edx
  431f9d:	mov    QWORD PTR [rbp-0x40],rcx
  431fa1:	mov    DWORD PTR [rbp-0x38],r8d
  431fa5:	mov    edx,DWORD PTR [rbp-0x34]
  431fa8:	mov    rax,QWORD PTR [rbp-0x30]
  431fac:	mov    esi,edx
  431fae:	mov    rdi,rax
  431fb1:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  431fb6:	mov    QWORD PTR [rbp-0x18],rax
  431fba:	cmp    QWORD PTR [rbp-0x18],0x0
  431fbf:	je     432204 <flatcc_json_printer_float_vector_field@@Base+0x27f>
  431fc5:	mov    rax,QWORD PTR [rbp-0x30]
  431fc9:	mov    eax,DWORD PTR [rax+0x18]
  431fcc:	lea    ecx,[rax+0x1]
  431fcf:	mov    rdx,QWORD PTR [rbp-0x30]
  431fd3:	mov    DWORD PTR [rdx+0x18],ecx
  431fd6:	test   eax,eax
  431fd8:	je     431ff1 <flatcc_json_printer_float_vector_field@@Base+0x6c>
  431fda:	mov    rax,QWORD PTR [rbp-0x28]
  431fde:	mov    rax,QWORD PTR [rax+0x28]
  431fe2:	lea    rcx,[rax+0x1]
  431fe6:	mov    rdx,QWORD PTR [rbp-0x28]
  431fea:	mov    QWORD PTR [rdx+0x28],rcx
  431fee:	mov    BYTE PTR [rax],0x2c
  431ff1:	mov    rax,QWORD PTR [rbp-0x18]
  431ff5:	mov    rdi,rax
  431ff8:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  431ffd:	mov    QWORD PTR [rbp-0x18],rax
  432001:	mov    rax,QWORD PTR [rbp-0x18]
  432005:	mov    rdi,rax
  432008:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43200d:	mov    DWORD PTR [rbp-0x1c],eax
  432010:	mov    rax,QWORD PTR [rbp-0x18]
  432014:	add    rax,0x4
  432018:	mov    QWORD PTR [rbp-0x18],rax
  43201c:	mov    eax,DWORD PTR [rbp-0x38]
  43201f:	movsxd rdx,eax
  432022:	mov    rcx,QWORD PTR [rbp-0x40]
  432026:	mov    rax,QWORD PTR [rbp-0x28]
  43202a:	mov    rsi,rcx
  43202d:	mov    rdi,rax
  432030:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  432035:	mov    rax,QWORD PTR [rbp-0x28]
  432039:	mov    eax,DWORD PTR [rax+0x38]
  43203c:	lea    edx,[rax+0x1]
  43203f:	mov    rax,QWORD PTR [rbp-0x28]
  432043:	mov    DWORD PTR [rax+0x38],edx
  432046:	mov    rax,QWORD PTR [rbp-0x28]
  43204a:	mov    rax,QWORD PTR [rax+0x28]
  43204e:	lea    rcx,[rax+0x1]
  432052:	mov    rdx,QWORD PTR [rbp-0x28]
  432056:	mov    QWORD PTR [rdx+0x28],rcx
  43205a:	mov    BYTE PTR [rax],0x5b
  43205d:	cmp    DWORD PTR [rbp-0x1c],0x0
  432061:	je     43219c <flatcc_json_printer_float_vector_field@@Base+0x217>
  432067:	mov    rax,QWORD PTR [rbp-0x28]
  43206b:	movzx  eax,BYTE PTR [rax+0x31]
  43206f:	test   al,al
  432071:	je     432098 <flatcc_json_printer_float_vector_field@@Base+0x113>
  432073:	mov    rax,QWORD PTR [rbp-0x28]
  432077:	mov    rax,QWORD PTR [rax+0x28]
  43207b:	lea    rcx,[rax+0x1]
  43207f:	mov    rdx,QWORD PTR [rbp-0x28]
  432083:	mov    QWORD PTR [rdx+0x28],rcx
  432087:	mov    BYTE PTR [rax],0xa
  43208a:	mov    rax,QWORD PTR [rbp-0x28]
  43208e:	mov    rdi,rax
  432091:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432096:	jmp    4320a4 <flatcc_json_printer_float_vector_field@@Base+0x11f>
  432098:	mov    rax,QWORD PTR [rbp-0x28]
  43209c:	mov    rdi,rax
  43209f:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4320a4:	mov    rax,QWORD PTR [rbp-0x28]
  4320a8:	mov    rbx,QWORD PTR [rax+0x28]
  4320ac:	mov    rax,QWORD PTR [rbp-0x18]
  4320b0:	mov    rdi,rax
  4320b3:	call   429fea <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  4320b8:	vcvtss2sd xmm1,xmm1,xmm0
  4320bc:	vmovq  rax,xmm1
  4320c1:	mov    rdi,rbx
  4320c4:	vmovq  xmm0,rax
  4320c9:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  4320ce:	mov    ecx,eax
  4320d0:	mov    rax,QWORD PTR [rbp-0x28]
  4320d4:	mov    rdx,QWORD PTR [rax+0x28]
  4320d8:	movsxd rax,ecx
  4320db:	add    rdx,rax
  4320de:	mov    rax,QWORD PTR [rbp-0x28]
  4320e2:	mov    QWORD PTR [rax+0x28],rdx
  4320e6:	mov    rax,QWORD PTR [rbp-0x18]
  4320ea:	add    rax,0x4
  4320ee:	mov    QWORD PTR [rbp-0x18],rax
  4320f2:	dec    DWORD PTR [rbp-0x1c]
  4320f5:	jmp    43219c <flatcc_json_printer_float_vector_field@@Base+0x217>
  4320fa:	mov    rax,QWORD PTR [rbp-0x28]
  4320fe:	mov    rax,QWORD PTR [rax+0x28]
  432102:	lea    rcx,[rax+0x1]
  432106:	mov    rdx,QWORD PTR [rbp-0x28]
  43210a:	mov    QWORD PTR [rdx+0x28],rcx
  43210e:	mov    BYTE PTR [rax],0x2c
  432111:	mov    rax,QWORD PTR [rbp-0x28]
  432115:	movzx  eax,BYTE PTR [rax+0x31]
  432119:	test   al,al
  43211b:	je     432142 <flatcc_json_printer_float_vector_field@@Base+0x1bd>
  43211d:	mov    rax,QWORD PTR [rbp-0x28]
  432121:	mov    rax,QWORD PTR [rax+0x28]
  432125:	lea    rcx,[rax+0x1]
  432129:	mov    rdx,QWORD PTR [rbp-0x28]
  43212d:	mov    QWORD PTR [rdx+0x28],rcx
  432131:	mov    BYTE PTR [rax],0xa
  432134:	mov    rax,QWORD PTR [rbp-0x28]
  432138:	mov    rdi,rax
  43213b:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432140:	jmp    43214e <flatcc_json_printer_float_vector_field@@Base+0x1c9>
  432142:	mov    rax,QWORD PTR [rbp-0x28]
  432146:	mov    rdi,rax
  432149:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43214e:	mov    rax,QWORD PTR [rbp-0x28]
  432152:	mov    rbx,QWORD PTR [rax+0x28]
  432156:	mov    rax,QWORD PTR [rbp-0x18]
  43215a:	mov    rdi,rax
  43215d:	call   429fea <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  432162:	vcvtss2sd xmm2,xmm2,xmm0
  432166:	vmovq  rax,xmm2
  43216b:	mov    rdi,rbx
  43216e:	vmovq  xmm0,rax
  432173:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432178:	mov    ecx,eax
  43217a:	mov    rax,QWORD PTR [rbp-0x28]
  43217e:	mov    rdx,QWORD PTR [rax+0x28]
  432182:	movsxd rax,ecx
  432185:	add    rdx,rax
  432188:	mov    rax,QWORD PTR [rbp-0x28]
  43218c:	mov    QWORD PTR [rax+0x28],rdx
  432190:	mov    rax,QWORD PTR [rbp-0x18]
  432194:	add    rax,0x4
  432198:	mov    QWORD PTR [rbp-0x18],rax
  43219c:	mov    eax,DWORD PTR [rbp-0x1c]
  43219f:	lea    edx,[rax-0x1]
  4321a2:	mov    DWORD PTR [rbp-0x1c],edx
  4321a5:	test   eax,eax
  4321a7:	jne    4320fa <flatcc_json_printer_float_vector_field@@Base+0x175>
  4321ad:	mov    rax,QWORD PTR [rbp-0x28]
  4321b1:	movzx  eax,BYTE PTR [rax+0x31]
  4321b5:	test   al,al
  4321b7:	je     4321ed <flatcc_json_printer_float_vector_field@@Base+0x268>
  4321b9:	mov    rax,QWORD PTR [rbp-0x28]
  4321bd:	mov    rax,QWORD PTR [rax+0x28]
  4321c1:	lea    rcx,[rax+0x1]
  4321c5:	mov    rdx,QWORD PTR [rbp-0x28]
  4321c9:	mov    QWORD PTR [rdx+0x28],rcx
  4321cd:	mov    BYTE PTR [rax],0xa
  4321d0:	mov    rax,QWORD PTR [rbp-0x28]
  4321d4:	mov    eax,DWORD PTR [rax+0x38]
  4321d7:	lea    edx,[rax-0x1]
  4321da:	mov    rax,QWORD PTR [rbp-0x28]
  4321de:	mov    DWORD PTR [rax+0x38],edx
  4321e1:	mov    rax,QWORD PTR [rbp-0x28]
  4321e5:	mov    rdi,rax
  4321e8:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4321ed:	mov    rax,QWORD PTR [rbp-0x28]
  4321f1:	mov    rax,QWORD PTR [rax+0x28]
  4321f5:	lea    rcx,[rax+0x1]
  4321f9:	mov    rdx,QWORD PTR [rbp-0x28]
  4321fd:	mov    QWORD PTR [rdx+0x28],rcx
  432201:	mov    BYTE PTR [rax],0x5d
  432204:	nop
  432205:	add    rsp,0x38
  432209:	pop    rbx
  43220a:	pop    rbp
  43220b:	ret    

000000000043220c <flatcc_json_printer_double_vector_field@@Base>:
  43220c:	endbr64 
  432210:	push   rbp
  432211:	mov    rbp,rsp
  432214:	push   rbx
  432215:	sub    rsp,0x38
  432219:	mov    QWORD PTR [rbp-0x28],rdi
  43221d:	mov    QWORD PTR [rbp-0x30],rsi
  432221:	mov    DWORD PTR [rbp-0x34],edx
  432224:	mov    QWORD PTR [rbp-0x40],rcx
  432228:	mov    DWORD PTR [rbp-0x38],r8d
  43222c:	mov    edx,DWORD PTR [rbp-0x34]
  43222f:	mov    rax,QWORD PTR [rbp-0x30]
  432233:	mov    esi,edx
  432235:	mov    rdi,rax
  432238:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  43223d:	mov    QWORD PTR [rbp-0x18],rax
  432241:	cmp    QWORD PTR [rbp-0x18],0x0
  432246:	je     432483 <flatcc_json_printer_double_vector_field@@Base+0x277>
  43224c:	mov    rax,QWORD PTR [rbp-0x30]
  432250:	mov    eax,DWORD PTR [rax+0x18]
  432253:	lea    ecx,[rax+0x1]
  432256:	mov    rdx,QWORD PTR [rbp-0x30]
  43225a:	mov    DWORD PTR [rdx+0x18],ecx
  43225d:	test   eax,eax
  43225f:	je     432278 <flatcc_json_printer_double_vector_field@@Base+0x6c>
  432261:	mov    rax,QWORD PTR [rbp-0x28]
  432265:	mov    rax,QWORD PTR [rax+0x28]
  432269:	lea    rcx,[rax+0x1]
  43226d:	mov    rdx,QWORD PTR [rbp-0x28]
  432271:	mov    QWORD PTR [rdx+0x28],rcx
  432275:	mov    BYTE PTR [rax],0x2c
  432278:	mov    rax,QWORD PTR [rbp-0x18]
  43227c:	mov    rdi,rax
  43227f:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  432284:	mov    QWORD PTR [rbp-0x18],rax
  432288:	mov    rax,QWORD PTR [rbp-0x18]
  43228c:	mov    rdi,rax
  43228f:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432294:	mov    DWORD PTR [rbp-0x1c],eax
  432297:	mov    rax,QWORD PTR [rbp-0x18]
  43229b:	add    rax,0x4
  43229f:	mov    QWORD PTR [rbp-0x18],rax
  4322a3:	mov    eax,DWORD PTR [rbp-0x38]
  4322a6:	movsxd rdx,eax
  4322a9:	mov    rcx,QWORD PTR [rbp-0x40]
  4322ad:	mov    rax,QWORD PTR [rbp-0x28]
  4322b1:	mov    rsi,rcx
  4322b4:	mov    rdi,rax
  4322b7:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4322bc:	mov    rax,QWORD PTR [rbp-0x28]
  4322c0:	mov    eax,DWORD PTR [rax+0x38]
  4322c3:	lea    edx,[rax+0x1]
  4322c6:	mov    rax,QWORD PTR [rbp-0x28]
  4322ca:	mov    DWORD PTR [rax+0x38],edx
  4322cd:	mov    rax,QWORD PTR [rbp-0x28]
  4322d1:	mov    rax,QWORD PTR [rax+0x28]
  4322d5:	lea    rcx,[rax+0x1]
  4322d9:	mov    rdx,QWORD PTR [rbp-0x28]
  4322dd:	mov    QWORD PTR [rdx+0x28],rcx
  4322e1:	mov    BYTE PTR [rax],0x5b
  4322e4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4322e8:	je     43241b <flatcc_json_printer_double_vector_field@@Base+0x20f>
  4322ee:	mov    rax,QWORD PTR [rbp-0x28]
  4322f2:	movzx  eax,BYTE PTR [rax+0x31]
  4322f6:	test   al,al
  4322f8:	je     43231f <flatcc_json_printer_double_vector_field@@Base+0x113>
  4322fa:	mov    rax,QWORD PTR [rbp-0x28]
  4322fe:	mov    rax,QWORD PTR [rax+0x28]
  432302:	lea    rcx,[rax+0x1]
  432306:	mov    rdx,QWORD PTR [rbp-0x28]
  43230a:	mov    QWORD PTR [rdx+0x28],rcx
  43230e:	mov    BYTE PTR [rax],0xa
  432311:	mov    rax,QWORD PTR [rbp-0x28]
  432315:	mov    rdi,rax
  432318:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43231d:	jmp    43232b <flatcc_json_printer_double_vector_field@@Base+0x11f>
  43231f:	mov    rax,QWORD PTR [rbp-0x28]
  432323:	mov    rdi,rax
  432326:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43232b:	mov    rax,QWORD PTR [rbp-0x28]
  43232f:	mov    rbx,QWORD PTR [rax+0x28]
  432333:	mov    rax,QWORD PTR [rbp-0x18]
  432337:	mov    rdi,rax
  43233a:	call   42a033 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  43233f:	vmovq  rax,xmm0
  432344:	mov    rdi,rbx
  432347:	vmovq  xmm0,rax
  43234c:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432351:	mov    ecx,eax
  432353:	mov    rax,QWORD PTR [rbp-0x28]
  432357:	mov    rdx,QWORD PTR [rax+0x28]
  43235b:	movsxd rax,ecx
  43235e:	add    rdx,rax
  432361:	mov    rax,QWORD PTR [rbp-0x28]
  432365:	mov    QWORD PTR [rax+0x28],rdx
  432369:	mov    rax,QWORD PTR [rbp-0x18]
  43236d:	add    rax,0x8
  432371:	mov    QWORD PTR [rbp-0x18],rax
  432375:	dec    DWORD PTR [rbp-0x1c]
  432378:	jmp    43241b <flatcc_json_printer_double_vector_field@@Base+0x20f>
  43237d:	mov    rax,QWORD PTR [rbp-0x28]
  432381:	mov    rax,QWORD PTR [rax+0x28]
  432385:	lea    rcx,[rax+0x1]
  432389:	mov    rdx,QWORD PTR [rbp-0x28]
  43238d:	mov    QWORD PTR [rdx+0x28],rcx
  432391:	mov    BYTE PTR [rax],0x2c
  432394:	mov    rax,QWORD PTR [rbp-0x28]
  432398:	movzx  eax,BYTE PTR [rax+0x31]
  43239c:	test   al,al
  43239e:	je     4323c5 <flatcc_json_printer_double_vector_field@@Base+0x1b9>
  4323a0:	mov    rax,QWORD PTR [rbp-0x28]
  4323a4:	mov    rax,QWORD PTR [rax+0x28]
  4323a8:	lea    rcx,[rax+0x1]
  4323ac:	mov    rdx,QWORD PTR [rbp-0x28]
  4323b0:	mov    QWORD PTR [rdx+0x28],rcx
  4323b4:	mov    BYTE PTR [rax],0xa
  4323b7:	mov    rax,QWORD PTR [rbp-0x28]
  4323bb:	mov    rdi,rax
  4323be:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4323c3:	jmp    4323d1 <flatcc_json_printer_double_vector_field@@Base+0x1c5>
  4323c5:	mov    rax,QWORD PTR [rbp-0x28]
  4323c9:	mov    rdi,rax
  4323cc:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4323d1:	mov    rax,QWORD PTR [rbp-0x28]
  4323d5:	mov    rbx,QWORD PTR [rax+0x28]
  4323d9:	mov    rax,QWORD PTR [rbp-0x18]
  4323dd:	mov    rdi,rax
  4323e0:	call   42a033 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  4323e5:	vmovq  rax,xmm0
  4323ea:	mov    rdi,rbx
  4323ed:	vmovq  xmm0,rax
  4323f2:	call   42c53c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  4323f7:	mov    ecx,eax
  4323f9:	mov    rax,QWORD PTR [rbp-0x28]
  4323fd:	mov    rdx,QWORD PTR [rax+0x28]
  432401:	movsxd rax,ecx
  432404:	add    rdx,rax
  432407:	mov    rax,QWORD PTR [rbp-0x28]
  43240b:	mov    QWORD PTR [rax+0x28],rdx
  43240f:	mov    rax,QWORD PTR [rbp-0x18]
  432413:	add    rax,0x8
  432417:	mov    QWORD PTR [rbp-0x18],rax
  43241b:	mov    eax,DWORD PTR [rbp-0x1c]
  43241e:	lea    edx,[rax-0x1]
  432421:	mov    DWORD PTR [rbp-0x1c],edx
  432424:	test   eax,eax
  432426:	jne    43237d <flatcc_json_printer_double_vector_field@@Base+0x171>
  43242c:	mov    rax,QWORD PTR [rbp-0x28]
  432430:	movzx  eax,BYTE PTR [rax+0x31]
  432434:	test   al,al
  432436:	je     43246c <flatcc_json_printer_double_vector_field@@Base+0x260>
  432438:	mov    rax,QWORD PTR [rbp-0x28]
  43243c:	mov    rax,QWORD PTR [rax+0x28]
  432440:	lea    rcx,[rax+0x1]
  432444:	mov    rdx,QWORD PTR [rbp-0x28]
  432448:	mov    QWORD PTR [rdx+0x28],rcx
  43244c:	mov    BYTE PTR [rax],0xa
  43244f:	mov    rax,QWORD PTR [rbp-0x28]
  432453:	mov    eax,DWORD PTR [rax+0x38]
  432456:	lea    edx,[rax-0x1]
  432459:	mov    rax,QWORD PTR [rbp-0x28]
  43245d:	mov    DWORD PTR [rax+0x38],edx
  432460:	mov    rax,QWORD PTR [rbp-0x28]
  432464:	mov    rdi,rax
  432467:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43246c:	mov    rax,QWORD PTR [rbp-0x28]
  432470:	mov    rax,QWORD PTR [rax+0x28]
  432474:	lea    rcx,[rax+0x1]
  432478:	mov    rdx,QWORD PTR [rbp-0x28]
  43247c:	mov    QWORD PTR [rdx+0x28],rcx
  432480:	mov    BYTE PTR [rax],0x5d
  432483:	nop
  432484:	add    rsp,0x38
  432488:	pop    rbx
  432489:	pop    rbp
  43248a:	ret    

000000000043248b <flatcc_json_printer_utype_enum_vector_field@@Base>:
  43248b:	endbr64 
  43248f:	push   rbp
  432490:	mov    rbp,rsp
  432493:	sub    rsp,0x40
  432497:	mov    QWORD PTR [rbp-0x18],rdi
  43249b:	mov    QWORD PTR [rbp-0x20],rsi
  43249f:	mov    DWORD PTR [rbp-0x24],edx
  4324a2:	mov    QWORD PTR [rbp-0x30],rcx
  4324a6:	mov    DWORD PTR [rbp-0x28],r8d
  4324aa:	mov    QWORD PTR [rbp-0x38],r9
  4324ae:	mov    rax,QWORD PTR [rbp-0x18]
  4324b2:	movzx  eax,BYTE PTR [rax+0x33]
  4324b6:	test   al,al
  4324b8:	je     4324dc <flatcc_json_printer_utype_enum_vector_field@@Base+0x51>
  4324ba:	mov    edi,DWORD PTR [rbp-0x28]
  4324bd:	mov    rcx,QWORD PTR [rbp-0x30]
  4324c1:	mov    edx,DWORD PTR [rbp-0x24]
  4324c4:	mov    rsi,QWORD PTR [rbp-0x20]
  4324c8:	mov    rax,QWORD PTR [rbp-0x18]
  4324cc:	mov    r8d,edi
  4324cf:	mov    rdi,rax
  4324d2:	call   430713 <flatcc_json_printer_utype_vector_field@@Base>
  4324d7:	jmp    4326ee <flatcc_json_printer_utype_enum_vector_field@@Base+0x263>
  4324dc:	mov    edx,DWORD PTR [rbp-0x24]
  4324df:	mov    rax,QWORD PTR [rbp-0x20]
  4324e3:	mov    esi,edx
  4324e5:	mov    rdi,rax
  4324e8:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4324ed:	mov    QWORD PTR [rbp-0x8],rax
  4324f1:	cmp    QWORD PTR [rbp-0x8],0x0
  4324f6:	je     4326ee <flatcc_json_printer_utype_enum_vector_field@@Base+0x263>
  4324fc:	mov    rax,QWORD PTR [rbp-0x20]
  432500:	mov    eax,DWORD PTR [rax+0x18]
  432503:	lea    ecx,[rax+0x1]
  432506:	mov    rdx,QWORD PTR [rbp-0x20]
  43250a:	mov    DWORD PTR [rdx+0x18],ecx
  43250d:	test   eax,eax
  43250f:	je     432528 <flatcc_json_printer_utype_enum_vector_field@@Base+0x9d>
  432511:	mov    rax,QWORD PTR [rbp-0x18]
  432515:	mov    rax,QWORD PTR [rax+0x28]
  432519:	lea    rcx,[rax+0x1]
  43251d:	mov    rdx,QWORD PTR [rbp-0x18]
  432521:	mov    QWORD PTR [rdx+0x28],rcx
  432525:	mov    BYTE PTR [rax],0x2c
  432528:	mov    rax,QWORD PTR [rbp-0x8]
  43252c:	mov    rdi,rax
  43252f:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  432534:	mov    QWORD PTR [rbp-0x8],rax
  432538:	mov    rax,QWORD PTR [rbp-0x8]
  43253c:	mov    rdi,rax
  43253f:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432544:	mov    DWORD PTR [rbp-0xc],eax
  432547:	mov    rax,QWORD PTR [rbp-0x8]
  43254b:	add    rax,0x4
  43254f:	mov    QWORD PTR [rbp-0x8],rax
  432553:	mov    eax,DWORD PTR [rbp-0x28]
  432556:	movsxd rdx,eax
  432559:	mov    rcx,QWORD PTR [rbp-0x30]
  43255d:	mov    rax,QWORD PTR [rbp-0x18]
  432561:	mov    rsi,rcx
  432564:	mov    rdi,rax
  432567:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43256c:	mov    rax,QWORD PTR [rbp-0x18]
  432570:	mov    eax,DWORD PTR [rax+0x38]
  432573:	lea    edx,[rax+0x1]
  432576:	mov    rax,QWORD PTR [rbp-0x18]
  43257a:	mov    DWORD PTR [rax+0x38],edx
  43257d:	mov    rax,QWORD PTR [rbp-0x18]
  432581:	mov    rax,QWORD PTR [rax+0x28]
  432585:	lea    rcx,[rax+0x1]
  432589:	mov    rdx,QWORD PTR [rbp-0x18]
  43258d:	mov    QWORD PTR [rdx+0x28],rcx
  432591:	mov    BYTE PTR [rax],0x5b
  432594:	cmp    DWORD PTR [rbp-0xc],0x0
  432598:	je     432686 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fb>
  43259e:	mov    rax,QWORD PTR [rbp-0x18]
  4325a2:	movzx  eax,BYTE PTR [rax+0x31]
  4325a6:	test   al,al
  4325a8:	je     4325cf <flatcc_json_printer_utype_enum_vector_field@@Base+0x144>
  4325aa:	mov    rax,QWORD PTR [rbp-0x18]
  4325ae:	mov    rax,QWORD PTR [rax+0x28]
  4325b2:	lea    rcx,[rax+0x1]
  4325b6:	mov    rdx,QWORD PTR [rbp-0x18]
  4325ba:	mov    QWORD PTR [rdx+0x28],rcx
  4325be:	mov    BYTE PTR [rax],0xa
  4325c1:	mov    rax,QWORD PTR [rbp-0x18]
  4325c5:	mov    rdi,rax
  4325c8:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4325cd:	jmp    4325db <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
  4325cf:	mov    rax,QWORD PTR [rbp-0x18]
  4325d3:	mov    rdi,rax
  4325d6:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4325db:	mov    rax,QWORD PTR [rbp-0x8]
  4325df:	mov    rdi,rax
  4325e2:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4325e7:	movzx  ecx,al
  4325ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4325ee:	mov    rax,QWORD PTR [rbp-0x38]
  4325f2:	mov    esi,ecx
  4325f4:	mov    rdi,rdx
  4325f7:	call   rax
  4325f9:	mov    rax,QWORD PTR [rbp-0x8]
  4325fd:	inc    rax
  432600:	mov    QWORD PTR [rbp-0x8],rax
  432604:	dec    DWORD PTR [rbp-0xc]
  432607:	jmp    432686 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fb>
  432609:	mov    rax,QWORD PTR [rbp-0x18]
  43260d:	mov    rax,QWORD PTR [rax+0x28]
  432611:	lea    rcx,[rax+0x1]
  432615:	mov    rdx,QWORD PTR [rbp-0x18]
  432619:	mov    QWORD PTR [rdx+0x28],rcx
  43261d:	mov    BYTE PTR [rax],0x2c
  432620:	mov    rax,QWORD PTR [rbp-0x18]
  432624:	movzx  eax,BYTE PTR [rax+0x31]
  432628:	test   al,al
  43262a:	je     432651 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c6>
  43262c:	mov    rax,QWORD PTR [rbp-0x18]
  432630:	mov    rax,QWORD PTR [rax+0x28]
  432634:	lea    rcx,[rax+0x1]
  432638:	mov    rdx,QWORD PTR [rbp-0x18]
  43263c:	mov    QWORD PTR [rdx+0x28],rcx
  432640:	mov    BYTE PTR [rax],0xa
  432643:	mov    rax,QWORD PTR [rbp-0x18]
  432647:	mov    rdi,rax
  43264a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43264f:	jmp    43265d <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d2>
  432651:	mov    rax,QWORD PTR [rbp-0x18]
  432655:	mov    rdi,rax
  432658:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43265d:	mov    rax,QWORD PTR [rbp-0x8]
  432661:	mov    rdi,rax
  432664:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  432669:	movzx  ecx,al
  43266c:	mov    rdx,QWORD PTR [rbp-0x18]
  432670:	mov    rax,QWORD PTR [rbp-0x38]
  432674:	mov    esi,ecx
  432676:	mov    rdi,rdx
  432679:	call   rax
  43267b:	mov    rax,QWORD PTR [rbp-0x8]
  43267f:	inc    rax
  432682:	mov    QWORD PTR [rbp-0x8],rax
  432686:	mov    eax,DWORD PTR [rbp-0xc]
  432689:	lea    edx,[rax-0x1]
  43268c:	mov    DWORD PTR [rbp-0xc],edx
  43268f:	test   eax,eax
  432691:	jne    432609 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17e>
  432697:	mov    rax,QWORD PTR [rbp-0x18]
  43269b:	movzx  eax,BYTE PTR [rax+0x31]
  43269f:	test   al,al
  4326a1:	je     4326d7 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
  4326a3:	mov    rax,QWORD PTR [rbp-0x18]
  4326a7:	mov    rax,QWORD PTR [rax+0x28]
  4326ab:	lea    rcx,[rax+0x1]
  4326af:	mov    rdx,QWORD PTR [rbp-0x18]
  4326b3:	mov    QWORD PTR [rdx+0x28],rcx
  4326b7:	mov    BYTE PTR [rax],0xa
  4326ba:	mov    rax,QWORD PTR [rbp-0x18]
  4326be:	mov    eax,DWORD PTR [rax+0x38]
  4326c1:	lea    edx,[rax-0x1]
  4326c4:	mov    rax,QWORD PTR [rbp-0x18]
  4326c8:	mov    DWORD PTR [rax+0x38],edx
  4326cb:	mov    rax,QWORD PTR [rbp-0x18]
  4326cf:	mov    rdi,rax
  4326d2:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4326d7:	mov    rax,QWORD PTR [rbp-0x18]
  4326db:	mov    rax,QWORD PTR [rax+0x28]
  4326df:	lea    rcx,[rax+0x1]
  4326e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4326e7:	mov    QWORD PTR [rdx+0x28],rcx
  4326eb:	mov    BYTE PTR [rax],0x5d
  4326ee:	leave  
  4326ef:	ret    

00000000004326f0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  4326f0:	endbr64 
  4326f4:	push   rbp
  4326f5:	mov    rbp,rsp
  4326f8:	sub    rsp,0x40
  4326fc:	mov    QWORD PTR [rbp-0x18],rdi
  432700:	mov    QWORD PTR [rbp-0x20],rsi
  432704:	mov    DWORD PTR [rbp-0x24],edx
  432707:	mov    QWORD PTR [rbp-0x30],rcx
  43270b:	mov    DWORD PTR [rbp-0x28],r8d
  43270f:	mov    QWORD PTR [rbp-0x38],r9
  432713:	mov    rax,QWORD PTR [rbp-0x18]
  432717:	movzx  eax,BYTE PTR [rax+0x33]
  43271b:	test   al,al
  43271d:	je     432741 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x51>
  43271f:	mov    edi,DWORD PTR [rbp-0x28]
  432722:	mov    rcx,QWORD PTR [rbp-0x30]
  432726:	mov    edx,DWORD PTR [rbp-0x24]
  432729:	mov    rsi,QWORD PTR [rbp-0x20]
  43272d:	mov    rax,QWORD PTR [rbp-0x18]
  432731:	mov    r8d,edi
  432734:	mov    rdi,rax
  432737:	call   430986 <flatcc_json_printer_uint8_vector_field@@Base>
  43273c:	jmp    432953 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x263>
  432741:	mov    edx,DWORD PTR [rbp-0x24]
  432744:	mov    rax,QWORD PTR [rbp-0x20]
  432748:	mov    esi,edx
  43274a:	mov    rdi,rax
  43274d:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  432752:	mov    QWORD PTR [rbp-0x8],rax
  432756:	cmp    QWORD PTR [rbp-0x8],0x0
  43275b:	je     432953 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x263>
  432761:	mov    rax,QWORD PTR [rbp-0x20]
  432765:	mov    eax,DWORD PTR [rax+0x18]
  432768:	lea    ecx,[rax+0x1]
  43276b:	mov    rdx,QWORD PTR [rbp-0x20]
  43276f:	mov    DWORD PTR [rdx+0x18],ecx
  432772:	test   eax,eax
  432774:	je     43278d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x9d>
  432776:	mov    rax,QWORD PTR [rbp-0x18]
  43277a:	mov    rax,QWORD PTR [rax+0x28]
  43277e:	lea    rcx,[rax+0x1]
  432782:	mov    rdx,QWORD PTR [rbp-0x18]
  432786:	mov    QWORD PTR [rdx+0x28],rcx
  43278a:	mov    BYTE PTR [rax],0x2c
  43278d:	mov    rax,QWORD PTR [rbp-0x8]
  432791:	mov    rdi,rax
  432794:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  432799:	mov    QWORD PTR [rbp-0x8],rax
  43279d:	mov    rax,QWORD PTR [rbp-0x8]
  4327a1:	mov    rdi,rax
  4327a4:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4327a9:	mov    DWORD PTR [rbp-0xc],eax
  4327ac:	mov    rax,QWORD PTR [rbp-0x8]
  4327b0:	add    rax,0x4
  4327b4:	mov    QWORD PTR [rbp-0x8],rax
  4327b8:	mov    eax,DWORD PTR [rbp-0x28]
  4327bb:	movsxd rdx,eax
  4327be:	mov    rcx,QWORD PTR [rbp-0x30]
  4327c2:	mov    rax,QWORD PTR [rbp-0x18]
  4327c6:	mov    rsi,rcx
  4327c9:	mov    rdi,rax
  4327cc:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4327d1:	mov    rax,QWORD PTR [rbp-0x18]
  4327d5:	mov    eax,DWORD PTR [rax+0x38]
  4327d8:	lea    edx,[rax+0x1]
  4327db:	mov    rax,QWORD PTR [rbp-0x18]
  4327df:	mov    DWORD PTR [rax+0x38],edx
  4327e2:	mov    rax,QWORD PTR [rbp-0x18]
  4327e6:	mov    rax,QWORD PTR [rax+0x28]
  4327ea:	lea    rcx,[rax+0x1]
  4327ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4327f2:	mov    QWORD PTR [rdx+0x28],rcx
  4327f6:	mov    BYTE PTR [rax],0x5b
  4327f9:	cmp    DWORD PTR [rbp-0xc],0x0
  4327fd:	je     4328eb <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fb>
  432803:	mov    rax,QWORD PTR [rbp-0x18]
  432807:	movzx  eax,BYTE PTR [rax+0x31]
  43280b:	test   al,al
  43280d:	je     432834 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x144>
  43280f:	mov    rax,QWORD PTR [rbp-0x18]
  432813:	mov    rax,QWORD PTR [rax+0x28]
  432817:	lea    rcx,[rax+0x1]
  43281b:	mov    rdx,QWORD PTR [rbp-0x18]
  43281f:	mov    QWORD PTR [rdx+0x28],rcx
  432823:	mov    BYTE PTR [rax],0xa
  432826:	mov    rax,QWORD PTR [rbp-0x18]
  43282a:	mov    rdi,rax
  43282d:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432832:	jmp    432840 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
  432834:	mov    rax,QWORD PTR [rbp-0x18]
  432838:	mov    rdi,rax
  43283b:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432840:	mov    rax,QWORD PTR [rbp-0x8]
  432844:	mov    rdi,rax
  432847:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  43284c:	movzx  ecx,al
  43284f:	mov    rdx,QWORD PTR [rbp-0x18]
  432853:	mov    rax,QWORD PTR [rbp-0x38]
  432857:	mov    esi,ecx
  432859:	mov    rdi,rdx
  43285c:	call   rax
  43285e:	mov    rax,QWORD PTR [rbp-0x8]
  432862:	inc    rax
  432865:	mov    QWORD PTR [rbp-0x8],rax
  432869:	dec    DWORD PTR [rbp-0xc]
  43286c:	jmp    4328eb <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fb>
  43286e:	mov    rax,QWORD PTR [rbp-0x18]
  432872:	mov    rax,QWORD PTR [rax+0x28]
  432876:	lea    rcx,[rax+0x1]
  43287a:	mov    rdx,QWORD PTR [rbp-0x18]
  43287e:	mov    QWORD PTR [rdx+0x28],rcx
  432882:	mov    BYTE PTR [rax],0x2c
  432885:	mov    rax,QWORD PTR [rbp-0x18]
  432889:	movzx  eax,BYTE PTR [rax+0x31]
  43288d:	test   al,al
  43288f:	je     4328b6 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c6>
  432891:	mov    rax,QWORD PTR [rbp-0x18]
  432895:	mov    rax,QWORD PTR [rax+0x28]
  432899:	lea    rcx,[rax+0x1]
  43289d:	mov    rdx,QWORD PTR [rbp-0x18]
  4328a1:	mov    QWORD PTR [rdx+0x28],rcx
  4328a5:	mov    BYTE PTR [rax],0xa
  4328a8:	mov    rax,QWORD PTR [rbp-0x18]
  4328ac:	mov    rdi,rax
  4328af:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4328b4:	jmp    4328c2 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d2>
  4328b6:	mov    rax,QWORD PTR [rbp-0x18]
  4328ba:	mov    rdi,rax
  4328bd:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4328c2:	mov    rax,QWORD PTR [rbp-0x8]
  4328c6:	mov    rdi,rax
  4328c9:	call   429e7d <flatcc_json_parser_struct_as_root@@Base+0x148>
  4328ce:	movzx  ecx,al
  4328d1:	mov    rdx,QWORD PTR [rbp-0x18]
  4328d5:	mov    rax,QWORD PTR [rbp-0x38]
  4328d9:	mov    esi,ecx
  4328db:	mov    rdi,rdx
  4328de:	call   rax
  4328e0:	mov    rax,QWORD PTR [rbp-0x8]
  4328e4:	inc    rax
  4328e7:	mov    QWORD PTR [rbp-0x8],rax
  4328eb:	mov    eax,DWORD PTR [rbp-0xc]
  4328ee:	lea    edx,[rax-0x1]
  4328f1:	mov    DWORD PTR [rbp-0xc],edx
  4328f4:	test   eax,eax
  4328f6:	jne    43286e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17e>
  4328fc:	mov    rax,QWORD PTR [rbp-0x18]
  432900:	movzx  eax,BYTE PTR [rax+0x31]
  432904:	test   al,al
  432906:	je     43293c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
  432908:	mov    rax,QWORD PTR [rbp-0x18]
  43290c:	mov    rax,QWORD PTR [rax+0x28]
  432910:	lea    rcx,[rax+0x1]
  432914:	mov    rdx,QWORD PTR [rbp-0x18]
  432918:	mov    QWORD PTR [rdx+0x28],rcx
  43291c:	mov    BYTE PTR [rax],0xa
  43291f:	mov    rax,QWORD PTR [rbp-0x18]
  432923:	mov    eax,DWORD PTR [rax+0x38]
  432926:	lea    edx,[rax-0x1]
  432929:	mov    rax,QWORD PTR [rbp-0x18]
  43292d:	mov    DWORD PTR [rax+0x38],edx
  432930:	mov    rax,QWORD PTR [rbp-0x18]
  432934:	mov    rdi,rax
  432937:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43293c:	mov    rax,QWORD PTR [rbp-0x18]
  432940:	mov    rax,QWORD PTR [rax+0x28]
  432944:	lea    rcx,[rax+0x1]
  432948:	mov    rdx,QWORD PTR [rbp-0x18]
  43294c:	mov    QWORD PTR [rdx+0x28],rcx
  432950:	mov    BYTE PTR [rax],0x5d
  432953:	leave  
  432954:	ret    

0000000000432955 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  432955:	endbr64 
  432959:	push   rbp
  43295a:	mov    rbp,rsp
  43295d:	sub    rsp,0x40
  432961:	mov    QWORD PTR [rbp-0x18],rdi
  432965:	mov    QWORD PTR [rbp-0x20],rsi
  432969:	mov    DWORD PTR [rbp-0x24],edx
  43296c:	mov    QWORD PTR [rbp-0x30],rcx
  432970:	mov    DWORD PTR [rbp-0x28],r8d
  432974:	mov    QWORD PTR [rbp-0x38],r9
  432978:	mov    rax,QWORD PTR [rbp-0x18]
  43297c:	movzx  eax,BYTE PTR [rax+0x33]
  432980:	test   al,al
  432982:	je     4329a6 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x51>
  432984:	mov    edi,DWORD PTR [rbp-0x28]
  432987:	mov    rcx,QWORD PTR [rbp-0x30]
  43298b:	mov    edx,DWORD PTR [rbp-0x24]
  43298e:	mov    rsi,QWORD PTR [rbp-0x20]
  432992:	mov    rax,QWORD PTR [rbp-0x18]
  432996:	mov    r8d,edi
  432999:	mov    rdi,rax
  43299c:	call   430bf9 <flatcc_json_printer_uint16_vector_field@@Base>
  4329a1:	jmp    432bba <flatcc_json_printer_uint16_enum_vector_field@@Base+0x265>
  4329a6:	mov    edx,DWORD PTR [rbp-0x24]
  4329a9:	mov    rax,QWORD PTR [rbp-0x20]
  4329ad:	mov    esi,edx
  4329af:	mov    rdi,rax
  4329b2:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4329b7:	mov    QWORD PTR [rbp-0x8],rax
  4329bb:	cmp    QWORD PTR [rbp-0x8],0x0
  4329c0:	je     432bba <flatcc_json_printer_uint16_enum_vector_field@@Base+0x265>
  4329c6:	mov    rax,QWORD PTR [rbp-0x20]
  4329ca:	mov    eax,DWORD PTR [rax+0x18]
  4329cd:	lea    ecx,[rax+0x1]
  4329d0:	mov    rdx,QWORD PTR [rbp-0x20]
  4329d4:	mov    DWORD PTR [rdx+0x18],ecx
  4329d7:	test   eax,eax
  4329d9:	je     4329f2 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x9d>
  4329db:	mov    rax,QWORD PTR [rbp-0x18]
  4329df:	mov    rax,QWORD PTR [rax+0x28]
  4329e3:	lea    rcx,[rax+0x1]
  4329e7:	mov    rdx,QWORD PTR [rbp-0x18]
  4329eb:	mov    QWORD PTR [rdx+0x28],rcx
  4329ef:	mov    BYTE PTR [rax],0x2c
  4329f2:	mov    rax,QWORD PTR [rbp-0x8]
  4329f6:	mov    rdi,rax
  4329f9:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4329fe:	mov    QWORD PTR [rbp-0x8],rax
  432a02:	mov    rax,QWORD PTR [rbp-0x8]
  432a06:	mov    rdi,rax
  432a09:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432a0e:	mov    DWORD PTR [rbp-0xc],eax
  432a11:	mov    rax,QWORD PTR [rbp-0x8]
  432a15:	add    rax,0x4
  432a19:	mov    QWORD PTR [rbp-0x8],rax
  432a1d:	mov    eax,DWORD PTR [rbp-0x28]
  432a20:	movsxd rdx,eax
  432a23:	mov    rcx,QWORD PTR [rbp-0x30]
  432a27:	mov    rax,QWORD PTR [rbp-0x18]
  432a2b:	mov    rsi,rcx
  432a2e:	mov    rdi,rax
  432a31:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  432a36:	mov    rax,QWORD PTR [rbp-0x18]
  432a3a:	mov    eax,DWORD PTR [rax+0x38]
  432a3d:	lea    edx,[rax+0x1]
  432a40:	mov    rax,QWORD PTR [rbp-0x18]
  432a44:	mov    DWORD PTR [rax+0x38],edx
  432a47:	mov    rax,QWORD PTR [rbp-0x18]
  432a4b:	mov    rax,QWORD PTR [rax+0x28]
  432a4f:	lea    rcx,[rax+0x1]
  432a53:	mov    rdx,QWORD PTR [rbp-0x18]
  432a57:	mov    QWORD PTR [rdx+0x28],rcx
  432a5b:	mov    BYTE PTR [rax],0x5b
  432a5e:	cmp    DWORD PTR [rbp-0xc],0x0
  432a62:	je     432b52 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fd>
  432a68:	mov    rax,QWORD PTR [rbp-0x18]
  432a6c:	movzx  eax,BYTE PTR [rax+0x31]
  432a70:	test   al,al
  432a72:	je     432a99 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x144>
  432a74:	mov    rax,QWORD PTR [rbp-0x18]
  432a78:	mov    rax,QWORD PTR [rax+0x28]
  432a7c:	lea    rcx,[rax+0x1]
  432a80:	mov    rdx,QWORD PTR [rbp-0x18]
  432a84:	mov    QWORD PTR [rdx+0x28],rcx
  432a88:	mov    BYTE PTR [rax],0xa
  432a8b:	mov    rax,QWORD PTR [rbp-0x18]
  432a8f:	mov    rdi,rax
  432a92:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432a97:	jmp    432aa5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
  432a99:	mov    rax,QWORD PTR [rbp-0x18]
  432a9d:	mov    rdi,rax
  432aa0:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432aa5:	mov    rax,QWORD PTR [rbp-0x8]
  432aa9:	mov    rdi,rax
  432aac:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  432ab1:	movzx  ecx,ax
  432ab4:	mov    rdx,QWORD PTR [rbp-0x18]
  432ab8:	mov    rax,QWORD PTR [rbp-0x38]
  432abc:	mov    esi,ecx
  432abe:	mov    rdi,rdx
  432ac1:	call   rax
  432ac3:	mov    rax,QWORD PTR [rbp-0x8]
  432ac7:	add    rax,0x2
  432acb:	mov    QWORD PTR [rbp-0x8],rax
  432acf:	dec    DWORD PTR [rbp-0xc]
  432ad2:	jmp    432b52 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fd>
  432ad4:	mov    rax,QWORD PTR [rbp-0x18]
  432ad8:	mov    rax,QWORD PTR [rax+0x28]
  432adc:	lea    rcx,[rax+0x1]
  432ae0:	mov    rdx,QWORD PTR [rbp-0x18]
  432ae4:	mov    QWORD PTR [rdx+0x28],rcx
  432ae8:	mov    BYTE PTR [rax],0x2c
  432aeb:	mov    rax,QWORD PTR [rbp-0x18]
  432aef:	movzx  eax,BYTE PTR [rax+0x31]
  432af3:	test   al,al
  432af5:	je     432b1c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c7>
  432af7:	mov    rax,QWORD PTR [rbp-0x18]
  432afb:	mov    rax,QWORD PTR [rax+0x28]
  432aff:	lea    rcx,[rax+0x1]
  432b03:	mov    rdx,QWORD PTR [rbp-0x18]
  432b07:	mov    QWORD PTR [rdx+0x28],rcx
  432b0b:	mov    BYTE PTR [rax],0xa
  432b0e:	mov    rax,QWORD PTR [rbp-0x18]
  432b12:	mov    rdi,rax
  432b15:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432b1a:	jmp    432b28 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d3>
  432b1c:	mov    rax,QWORD PTR [rbp-0x18]
  432b20:	mov    rdi,rax
  432b23:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432b28:	mov    rax,QWORD PTR [rbp-0x8]
  432b2c:	mov    rdi,rax
  432b2f:	call   429eac <flatcc_json_parser_struct_as_root@@Base+0x177>
  432b34:	movzx  ecx,ax
  432b37:	mov    rdx,QWORD PTR [rbp-0x18]
  432b3b:	mov    rax,QWORD PTR [rbp-0x38]
  432b3f:	mov    esi,ecx
  432b41:	mov    rdi,rdx
  432b44:	call   rax
  432b46:	mov    rax,QWORD PTR [rbp-0x8]
  432b4a:	add    rax,0x2
  432b4e:	mov    QWORD PTR [rbp-0x8],rax
  432b52:	mov    eax,DWORD PTR [rbp-0xc]
  432b55:	lea    edx,[rax-0x1]
  432b58:	mov    DWORD PTR [rbp-0xc],edx
  432b5b:	test   eax,eax
  432b5d:	jne    432ad4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17f>
  432b63:	mov    rax,QWORD PTR [rbp-0x18]
  432b67:	movzx  eax,BYTE PTR [rax+0x31]
  432b6b:	test   al,al
  432b6d:	je     432ba3 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24e>
  432b6f:	mov    rax,QWORD PTR [rbp-0x18]
  432b73:	mov    rax,QWORD PTR [rax+0x28]
  432b77:	lea    rcx,[rax+0x1]
  432b7b:	mov    rdx,QWORD PTR [rbp-0x18]
  432b7f:	mov    QWORD PTR [rdx+0x28],rcx
  432b83:	mov    BYTE PTR [rax],0xa
  432b86:	mov    rax,QWORD PTR [rbp-0x18]
  432b8a:	mov    eax,DWORD PTR [rax+0x38]
  432b8d:	lea    edx,[rax-0x1]
  432b90:	mov    rax,QWORD PTR [rbp-0x18]
  432b94:	mov    DWORD PTR [rax+0x38],edx
  432b97:	mov    rax,QWORD PTR [rbp-0x18]
  432b9b:	mov    rdi,rax
  432b9e:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432ba3:	mov    rax,QWORD PTR [rbp-0x18]
  432ba7:	mov    rax,QWORD PTR [rax+0x28]
  432bab:	lea    rcx,[rax+0x1]
  432baf:	mov    rdx,QWORD PTR [rbp-0x18]
  432bb3:	mov    QWORD PTR [rdx+0x28],rcx
  432bb7:	mov    BYTE PTR [rax],0x5d
  432bba:	leave  
  432bbb:	ret    

0000000000432bbc <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  432bbc:	endbr64 
  432bc0:	push   rbp
  432bc1:	mov    rbp,rsp
  432bc4:	sub    rsp,0x40
  432bc8:	mov    QWORD PTR [rbp-0x18],rdi
  432bcc:	mov    QWORD PTR [rbp-0x20],rsi
  432bd0:	mov    DWORD PTR [rbp-0x24],edx
  432bd3:	mov    QWORD PTR [rbp-0x30],rcx
  432bd7:	mov    DWORD PTR [rbp-0x28],r8d
  432bdb:	mov    QWORD PTR [rbp-0x38],r9
  432bdf:	mov    rax,QWORD PTR [rbp-0x18]
  432be3:	movzx  eax,BYTE PTR [rax+0x33]
  432be7:	test   al,al
  432be9:	je     432c0d <flatcc_json_printer_uint32_enum_vector_field@@Base+0x51>
  432beb:	mov    edi,DWORD PTR [rbp-0x28]
  432bee:	mov    rcx,QWORD PTR [rbp-0x30]
  432bf2:	mov    edx,DWORD PTR [rbp-0x24]
  432bf5:	mov    rsi,QWORD PTR [rbp-0x20]
  432bf9:	mov    rax,QWORD PTR [rbp-0x18]
  432bfd:	mov    r8d,edi
  432c00:	mov    rdi,rax
  432c03:	call   430e6e <flatcc_json_printer_uint32_vector_field@@Base>
  432c08:	jmp    432e1f <flatcc_json_printer_uint32_enum_vector_field@@Base+0x263>
  432c0d:	mov    edx,DWORD PTR [rbp-0x24]
  432c10:	mov    rax,QWORD PTR [rbp-0x20]
  432c14:	mov    esi,edx
  432c16:	mov    rdi,rax
  432c19:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  432c1e:	mov    QWORD PTR [rbp-0x8],rax
  432c22:	cmp    QWORD PTR [rbp-0x8],0x0
  432c27:	je     432e1f <flatcc_json_printer_uint32_enum_vector_field@@Base+0x263>
  432c2d:	mov    rax,QWORD PTR [rbp-0x20]
  432c31:	mov    eax,DWORD PTR [rax+0x18]
  432c34:	lea    ecx,[rax+0x1]
  432c37:	mov    rdx,QWORD PTR [rbp-0x20]
  432c3b:	mov    DWORD PTR [rdx+0x18],ecx
  432c3e:	test   eax,eax
  432c40:	je     432c59 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x9d>
  432c42:	mov    rax,QWORD PTR [rbp-0x18]
  432c46:	mov    rax,QWORD PTR [rax+0x28]
  432c4a:	lea    rcx,[rax+0x1]
  432c4e:	mov    rdx,QWORD PTR [rbp-0x18]
  432c52:	mov    QWORD PTR [rdx+0x28],rcx
  432c56:	mov    BYTE PTR [rax],0x2c
  432c59:	mov    rax,QWORD PTR [rbp-0x8]
  432c5d:	mov    rdi,rax
  432c60:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  432c65:	mov    QWORD PTR [rbp-0x8],rax
  432c69:	mov    rax,QWORD PTR [rbp-0x8]
  432c6d:	mov    rdi,rax
  432c70:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432c75:	mov    DWORD PTR [rbp-0xc],eax
  432c78:	mov    rax,QWORD PTR [rbp-0x8]
  432c7c:	add    rax,0x4
  432c80:	mov    QWORD PTR [rbp-0x8],rax
  432c84:	mov    eax,DWORD PTR [rbp-0x28]
  432c87:	movsxd rdx,eax
  432c8a:	mov    rcx,QWORD PTR [rbp-0x30]
  432c8e:	mov    rax,QWORD PTR [rbp-0x18]
  432c92:	mov    rsi,rcx
  432c95:	mov    rdi,rax
  432c98:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  432c9d:	mov    rax,QWORD PTR [rbp-0x18]
  432ca1:	mov    eax,DWORD PTR [rax+0x38]
  432ca4:	lea    edx,[rax+0x1]
  432ca7:	mov    rax,QWORD PTR [rbp-0x18]
  432cab:	mov    DWORD PTR [rax+0x38],edx
  432cae:	mov    rax,QWORD PTR [rbp-0x18]
  432cb2:	mov    rax,QWORD PTR [rax+0x28]
  432cb6:	lea    rcx,[rax+0x1]
  432cba:	mov    rdx,QWORD PTR [rbp-0x18]
  432cbe:	mov    QWORD PTR [rdx+0x28],rcx
  432cc2:	mov    BYTE PTR [rax],0x5b
  432cc5:	cmp    DWORD PTR [rbp-0xc],0x0
  432cc9:	je     432db7 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1fb>
  432ccf:	mov    rax,QWORD PTR [rbp-0x18]
  432cd3:	movzx  eax,BYTE PTR [rax+0x31]
  432cd7:	test   al,al
  432cd9:	je     432d00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x144>
  432cdb:	mov    rax,QWORD PTR [rbp-0x18]
  432cdf:	mov    rax,QWORD PTR [rax+0x28]
  432ce3:	lea    rcx,[rax+0x1]
  432ce7:	mov    rdx,QWORD PTR [rbp-0x18]
  432ceb:	mov    QWORD PTR [rdx+0x28],rcx
  432cef:	mov    BYTE PTR [rax],0xa
  432cf2:	mov    rax,QWORD PTR [rbp-0x18]
  432cf6:	mov    rdi,rax
  432cf9:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432cfe:	jmp    432d0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
  432d00:	mov    rax,QWORD PTR [rbp-0x18]
  432d04:	mov    rdi,rax
  432d07:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432d0c:	mov    rax,QWORD PTR [rbp-0x8]
  432d10:	mov    rdi,rax
  432d13:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  432d18:	mov    ecx,eax
  432d1a:	mov    rdx,QWORD PTR [rbp-0x18]
  432d1e:	mov    rax,QWORD PTR [rbp-0x38]
  432d22:	mov    esi,ecx
  432d24:	mov    rdi,rdx
  432d27:	call   rax
  432d29:	mov    rax,QWORD PTR [rbp-0x8]
  432d2d:	add    rax,0x4
  432d31:	mov    QWORD PTR [rbp-0x8],rax
  432d35:	dec    DWORD PTR [rbp-0xc]
  432d38:	jmp    432db7 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1fb>
  432d3a:	mov    rax,QWORD PTR [rbp-0x18]
  432d3e:	mov    rax,QWORD PTR [rax+0x28]
  432d42:	lea    rcx,[rax+0x1]
  432d46:	mov    rdx,QWORD PTR [rbp-0x18]
  432d4a:	mov    QWORD PTR [rdx+0x28],rcx
  432d4e:	mov    BYTE PTR [rax],0x2c
  432d51:	mov    rax,QWORD PTR [rbp-0x18]
  432d55:	movzx  eax,BYTE PTR [rax+0x31]
  432d59:	test   al,al
  432d5b:	je     432d82 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c6>
  432d5d:	mov    rax,QWORD PTR [rbp-0x18]
  432d61:	mov    rax,QWORD PTR [rax+0x28]
  432d65:	lea    rcx,[rax+0x1]
  432d69:	mov    rdx,QWORD PTR [rbp-0x18]
  432d6d:	mov    QWORD PTR [rdx+0x28],rcx
  432d71:	mov    BYTE PTR [rax],0xa
  432d74:	mov    rax,QWORD PTR [rbp-0x18]
  432d78:	mov    rdi,rax
  432d7b:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432d80:	jmp    432d8e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d2>
  432d82:	mov    rax,QWORD PTR [rbp-0x18]
  432d86:	mov    rdi,rax
  432d89:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432d8e:	mov    rax,QWORD PTR [rbp-0x8]
  432d92:	mov    rdi,rax
  432d95:	call   429ed7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  432d9a:	mov    ecx,eax
  432d9c:	mov    rdx,QWORD PTR [rbp-0x18]
  432da0:	mov    rax,QWORD PTR [rbp-0x38]
  432da4:	mov    esi,ecx
  432da6:	mov    rdi,rdx
  432da9:	call   rax
  432dab:	mov    rax,QWORD PTR [rbp-0x8]
  432daf:	add    rax,0x4
  432db3:	mov    QWORD PTR [rbp-0x8],rax
  432db7:	mov    eax,DWORD PTR [rbp-0xc]
  432dba:	lea    edx,[rax-0x1]
  432dbd:	mov    DWORD PTR [rbp-0xc],edx
  432dc0:	test   eax,eax
  432dc2:	jne    432d3a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17e>
  432dc8:	mov    rax,QWORD PTR [rbp-0x18]
  432dcc:	movzx  eax,BYTE PTR [rax+0x31]
  432dd0:	test   al,al
  432dd2:	je     432e08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
  432dd4:	mov    rax,QWORD PTR [rbp-0x18]
  432dd8:	mov    rax,QWORD PTR [rax+0x28]
  432ddc:	lea    rcx,[rax+0x1]
  432de0:	mov    rdx,QWORD PTR [rbp-0x18]
  432de4:	mov    QWORD PTR [rdx+0x28],rcx
  432de8:	mov    BYTE PTR [rax],0xa
  432deb:	mov    rax,QWORD PTR [rbp-0x18]
  432def:	mov    eax,DWORD PTR [rax+0x38]
  432df2:	lea    edx,[rax-0x1]
  432df5:	mov    rax,QWORD PTR [rbp-0x18]
  432df9:	mov    DWORD PTR [rax+0x38],edx
  432dfc:	mov    rax,QWORD PTR [rbp-0x18]
  432e00:	mov    rdi,rax
  432e03:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432e08:	mov    rax,QWORD PTR [rbp-0x18]
  432e0c:	mov    rax,QWORD PTR [rax+0x28]
  432e10:	lea    rcx,[rax+0x1]
  432e14:	mov    rdx,QWORD PTR [rbp-0x18]
  432e18:	mov    QWORD PTR [rdx+0x28],rcx
  432e1c:	mov    BYTE PTR [rax],0x5d
  432e1f:	leave  
  432e20:	ret    

0000000000432e21 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  432e21:	endbr64 
  432e25:	push   rbp
  432e26:	mov    rbp,rsp
  432e29:	sub    rsp,0x40
  432e2d:	mov    QWORD PTR [rbp-0x18],rdi
  432e31:	mov    QWORD PTR [rbp-0x20],rsi
  432e35:	mov    DWORD PTR [rbp-0x24],edx
  432e38:	mov    QWORD PTR [rbp-0x30],rcx
  432e3c:	mov    DWORD PTR [rbp-0x28],r8d
  432e40:	mov    QWORD PTR [rbp-0x38],r9
  432e44:	mov    rax,QWORD PTR [rbp-0x18]
  432e48:	movzx  eax,BYTE PTR [rax+0x33]
  432e4c:	test   al,al
  432e4e:	je     432e72 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x51>
  432e50:	mov    edi,DWORD PTR [rbp-0x28]
  432e53:	mov    rcx,QWORD PTR [rbp-0x30]
  432e57:	mov    edx,DWORD PTR [rbp-0x24]
  432e5a:	mov    rsi,QWORD PTR [rbp-0x20]
  432e5e:	mov    rax,QWORD PTR [rbp-0x18]
  432e62:	mov    r8d,edi
  432e65:	mov    rdi,rax
  432e68:	call   4310dd <flatcc_json_printer_uint64_vector_field@@Base>
  432e6d:	jmp    433088 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x267>
  432e72:	mov    edx,DWORD PTR [rbp-0x24]
  432e75:	mov    rax,QWORD PTR [rbp-0x20]
  432e79:	mov    esi,edx
  432e7b:	mov    rdi,rax
  432e7e:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  432e83:	mov    QWORD PTR [rbp-0x8],rax
  432e87:	cmp    QWORD PTR [rbp-0x8],0x0
  432e8c:	je     433088 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x267>
  432e92:	mov    rax,QWORD PTR [rbp-0x20]
  432e96:	mov    eax,DWORD PTR [rax+0x18]
  432e99:	lea    ecx,[rax+0x1]
  432e9c:	mov    rdx,QWORD PTR [rbp-0x20]
  432ea0:	mov    DWORD PTR [rdx+0x18],ecx
  432ea3:	test   eax,eax
  432ea5:	je     432ebe <flatcc_json_printer_uint64_enum_vector_field@@Base+0x9d>
  432ea7:	mov    rax,QWORD PTR [rbp-0x18]
  432eab:	mov    rax,QWORD PTR [rax+0x28]
  432eaf:	lea    rcx,[rax+0x1]
  432eb3:	mov    rdx,QWORD PTR [rbp-0x18]
  432eb7:	mov    QWORD PTR [rdx+0x28],rcx
  432ebb:	mov    BYTE PTR [rax],0x2c
  432ebe:	mov    rax,QWORD PTR [rbp-0x8]
  432ec2:	mov    rdi,rax
  432ec5:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  432eca:	mov    QWORD PTR [rbp-0x8],rax
  432ece:	mov    rax,QWORD PTR [rbp-0x8]
  432ed2:	mov    rdi,rax
  432ed5:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432eda:	mov    DWORD PTR [rbp-0xc],eax
  432edd:	mov    rax,QWORD PTR [rbp-0x8]
  432ee1:	add    rax,0x4
  432ee5:	mov    QWORD PTR [rbp-0x8],rax
  432ee9:	mov    eax,DWORD PTR [rbp-0x28]
  432eec:	movsxd rdx,eax
  432eef:	mov    rcx,QWORD PTR [rbp-0x30]
  432ef3:	mov    rax,QWORD PTR [rbp-0x18]
  432ef7:	mov    rsi,rcx
  432efa:	mov    rdi,rax
  432efd:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  432f02:	mov    rax,QWORD PTR [rbp-0x18]
  432f06:	mov    eax,DWORD PTR [rax+0x38]
  432f09:	lea    edx,[rax+0x1]
  432f0c:	mov    rax,QWORD PTR [rbp-0x18]
  432f10:	mov    DWORD PTR [rax+0x38],edx
  432f13:	mov    rax,QWORD PTR [rbp-0x18]
  432f17:	mov    rax,QWORD PTR [rax+0x28]
  432f1b:	lea    rcx,[rax+0x1]
  432f1f:	mov    rdx,QWORD PTR [rbp-0x18]
  432f23:	mov    QWORD PTR [rdx+0x28],rcx
  432f27:	mov    BYTE PTR [rax],0x5b
  432f2a:	cmp    DWORD PTR [rbp-0xc],0x0
  432f2e:	je     433020 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ff>
  432f34:	mov    rax,QWORD PTR [rbp-0x18]
  432f38:	movzx  eax,BYTE PTR [rax+0x31]
  432f3c:	test   al,al
  432f3e:	je     432f65 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x144>
  432f40:	mov    rax,QWORD PTR [rbp-0x18]
  432f44:	mov    rax,QWORD PTR [rax+0x28]
  432f48:	lea    rcx,[rax+0x1]
  432f4c:	mov    rdx,QWORD PTR [rbp-0x18]
  432f50:	mov    QWORD PTR [rdx+0x28],rcx
  432f54:	mov    BYTE PTR [rax],0xa
  432f57:	mov    rax,QWORD PTR [rbp-0x18]
  432f5b:	mov    rdi,rax
  432f5e:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432f63:	jmp    432f71 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
  432f65:	mov    rax,QWORD PTR [rbp-0x18]
  432f69:	mov    rdi,rax
  432f6c:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432f71:	mov    rax,QWORD PTR [rbp-0x8]
  432f75:	mov    rdi,rax
  432f78:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  432f7d:	mov    rcx,rax
  432f80:	mov    rdx,QWORD PTR [rbp-0x18]
  432f84:	mov    rax,QWORD PTR [rbp-0x38]
  432f88:	mov    rsi,rcx
  432f8b:	mov    rdi,rdx
  432f8e:	call   rax
  432f90:	mov    rax,QWORD PTR [rbp-0x8]
  432f94:	add    rax,0x8
  432f98:	mov    QWORD PTR [rbp-0x8],rax
  432f9c:	dec    DWORD PTR [rbp-0xc]
  432f9f:	jmp    433020 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ff>
  432fa1:	mov    rax,QWORD PTR [rbp-0x18]
  432fa5:	mov    rax,QWORD PTR [rax+0x28]
  432fa9:	lea    rcx,[rax+0x1]
  432fad:	mov    rdx,QWORD PTR [rbp-0x18]
  432fb1:	mov    QWORD PTR [rdx+0x28],rcx
  432fb5:	mov    BYTE PTR [rax],0x2c
  432fb8:	mov    rax,QWORD PTR [rbp-0x18]
  432fbc:	movzx  eax,BYTE PTR [rax+0x31]
  432fc0:	test   al,al
  432fc2:	je     432fe9 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
  432fc4:	mov    rax,QWORD PTR [rbp-0x18]
  432fc8:	mov    rax,QWORD PTR [rax+0x28]
  432fcc:	lea    rcx,[rax+0x1]
  432fd0:	mov    rdx,QWORD PTR [rbp-0x18]
  432fd4:	mov    QWORD PTR [rdx+0x28],rcx
  432fd8:	mov    BYTE PTR [rax],0xa
  432fdb:	mov    rax,QWORD PTR [rbp-0x18]
  432fdf:	mov    rdi,rax
  432fe2:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432fe7:	jmp    432ff5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
  432fe9:	mov    rax,QWORD PTR [rbp-0x18]
  432fed:	mov    rdi,rax
  432ff0:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432ff5:	mov    rax,QWORD PTR [rbp-0x8]
  432ff9:	mov    rdi,rax
  432ffc:	call   429f00 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  433001:	mov    rcx,rax
  433004:	mov    rdx,QWORD PTR [rbp-0x18]
  433008:	mov    rax,QWORD PTR [rbp-0x38]
  43300c:	mov    rsi,rcx
  43300f:	mov    rdi,rdx
  433012:	call   rax
  433014:	mov    rax,QWORD PTR [rbp-0x8]
  433018:	add    rax,0x8
  43301c:	mov    QWORD PTR [rbp-0x8],rax
  433020:	mov    eax,DWORD PTR [rbp-0xc]
  433023:	lea    edx,[rax-0x1]
  433026:	mov    DWORD PTR [rbp-0xc],edx
  433029:	test   eax,eax
  43302b:	jne    432fa1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  433031:	mov    rax,QWORD PTR [rbp-0x18]
  433035:	movzx  eax,BYTE PTR [rax+0x31]
  433039:	test   al,al
  43303b:	je     433071 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x250>
  43303d:	mov    rax,QWORD PTR [rbp-0x18]
  433041:	mov    rax,QWORD PTR [rax+0x28]
  433045:	lea    rcx,[rax+0x1]
  433049:	mov    rdx,QWORD PTR [rbp-0x18]
  43304d:	mov    QWORD PTR [rdx+0x28],rcx
  433051:	mov    BYTE PTR [rax],0xa
  433054:	mov    rax,QWORD PTR [rbp-0x18]
  433058:	mov    eax,DWORD PTR [rax+0x38]
  43305b:	lea    edx,[rax-0x1]
  43305e:	mov    rax,QWORD PTR [rbp-0x18]
  433062:	mov    DWORD PTR [rax+0x38],edx
  433065:	mov    rax,QWORD PTR [rbp-0x18]
  433069:	mov    rdi,rax
  43306c:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433071:	mov    rax,QWORD PTR [rbp-0x18]
  433075:	mov    rax,QWORD PTR [rax+0x28]
  433079:	lea    rcx,[rax+0x1]
  43307d:	mov    rdx,QWORD PTR [rbp-0x18]
  433081:	mov    QWORD PTR [rdx+0x28],rcx
  433085:	mov    BYTE PTR [rax],0x5d
  433088:	leave  
  433089:	ret    

000000000043308a <flatcc_json_printer_int8_enum_vector_field@@Base>:
  43308a:	endbr64 
  43308e:	push   rbp
  43308f:	mov    rbp,rsp
  433092:	sub    rsp,0x40
  433096:	mov    QWORD PTR [rbp-0x18],rdi
  43309a:	mov    QWORD PTR [rbp-0x20],rsi
  43309e:	mov    DWORD PTR [rbp-0x24],edx
  4330a1:	mov    QWORD PTR [rbp-0x30],rcx
  4330a5:	mov    DWORD PTR [rbp-0x28],r8d
  4330a9:	mov    QWORD PTR [rbp-0x38],r9
  4330ad:	mov    rax,QWORD PTR [rbp-0x18]
  4330b1:	movzx  eax,BYTE PTR [rax+0x33]
  4330b5:	test   al,al
  4330b7:	je     4330db <flatcc_json_printer_int8_enum_vector_field@@Base+0x51>
  4330b9:	mov    edi,DWORD PTR [rbp-0x28]
  4330bc:	mov    rcx,QWORD PTR [rbp-0x30]
  4330c0:	mov    edx,DWORD PTR [rbp-0x24]
  4330c3:	mov    rsi,QWORD PTR [rbp-0x20]
  4330c7:	mov    rax,QWORD PTR [rbp-0x18]
  4330cb:	mov    r8d,edi
  4330ce:	mov    rdi,rax
  4330d1:	call   43134e <flatcc_json_printer_int8_vector_field@@Base>
  4330d6:	jmp    4332ed <flatcc_json_printer_int8_enum_vector_field@@Base+0x263>
  4330db:	mov    edx,DWORD PTR [rbp-0x24]
  4330de:	mov    rax,QWORD PTR [rbp-0x20]
  4330e2:	mov    esi,edx
  4330e4:	mov    rdi,rax
  4330e7:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4330ec:	mov    QWORD PTR [rbp-0x8],rax
  4330f0:	cmp    QWORD PTR [rbp-0x8],0x0
  4330f5:	je     4332ed <flatcc_json_printer_int8_enum_vector_field@@Base+0x263>
  4330fb:	mov    rax,QWORD PTR [rbp-0x20]
  4330ff:	mov    eax,DWORD PTR [rax+0x18]
  433102:	lea    ecx,[rax+0x1]
  433105:	mov    rdx,QWORD PTR [rbp-0x20]
  433109:	mov    DWORD PTR [rdx+0x18],ecx
  43310c:	test   eax,eax
  43310e:	je     433127 <flatcc_json_printer_int8_enum_vector_field@@Base+0x9d>
  433110:	mov    rax,QWORD PTR [rbp-0x18]
  433114:	mov    rax,QWORD PTR [rax+0x28]
  433118:	lea    rcx,[rax+0x1]
  43311c:	mov    rdx,QWORD PTR [rbp-0x18]
  433120:	mov    QWORD PTR [rdx+0x28],rcx
  433124:	mov    BYTE PTR [rax],0x2c
  433127:	mov    rax,QWORD PTR [rbp-0x8]
  43312b:	mov    rdi,rax
  43312e:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  433133:	mov    QWORD PTR [rbp-0x8],rax
  433137:	mov    rax,QWORD PTR [rbp-0x8]
  43313b:	mov    rdi,rax
  43313e:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433143:	mov    DWORD PTR [rbp-0xc],eax
  433146:	mov    rax,QWORD PTR [rbp-0x8]
  43314a:	add    rax,0x4
  43314e:	mov    QWORD PTR [rbp-0x8],rax
  433152:	mov    eax,DWORD PTR [rbp-0x28]
  433155:	movsxd rdx,eax
  433158:	mov    rcx,QWORD PTR [rbp-0x30]
  43315c:	mov    rax,QWORD PTR [rbp-0x18]
  433160:	mov    rsi,rcx
  433163:	mov    rdi,rax
  433166:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43316b:	mov    rax,QWORD PTR [rbp-0x18]
  43316f:	mov    eax,DWORD PTR [rax+0x38]
  433172:	lea    edx,[rax+0x1]
  433175:	mov    rax,QWORD PTR [rbp-0x18]
  433179:	mov    DWORD PTR [rax+0x38],edx
  43317c:	mov    rax,QWORD PTR [rbp-0x18]
  433180:	mov    rax,QWORD PTR [rax+0x28]
  433184:	lea    rcx,[rax+0x1]
  433188:	mov    rdx,QWORD PTR [rbp-0x18]
  43318c:	mov    QWORD PTR [rdx+0x28],rcx
  433190:	mov    BYTE PTR [rax],0x5b
  433193:	cmp    DWORD PTR [rbp-0xc],0x0
  433197:	je     433285 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fb>
  43319d:	mov    rax,QWORD PTR [rbp-0x18]
  4331a1:	movzx  eax,BYTE PTR [rax+0x31]
  4331a5:	test   al,al
  4331a7:	je     4331ce <flatcc_json_printer_int8_enum_vector_field@@Base+0x144>
  4331a9:	mov    rax,QWORD PTR [rbp-0x18]
  4331ad:	mov    rax,QWORD PTR [rax+0x28]
  4331b1:	lea    rcx,[rax+0x1]
  4331b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4331b9:	mov    QWORD PTR [rdx+0x28],rcx
  4331bd:	mov    BYTE PTR [rax],0xa
  4331c0:	mov    rax,QWORD PTR [rbp-0x18]
  4331c4:	mov    rdi,rax
  4331c7:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4331cc:	jmp    4331da <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
  4331ce:	mov    rax,QWORD PTR [rbp-0x18]
  4331d2:	mov    rdi,rax
  4331d5:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4331da:	mov    rax,QWORD PTR [rbp-0x8]
  4331de:	mov    rdi,rax
  4331e1:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  4331e6:	movsx  ecx,al
  4331e9:	mov    rdx,QWORD PTR [rbp-0x18]
  4331ed:	mov    rax,QWORD PTR [rbp-0x38]
  4331f1:	mov    esi,ecx
  4331f3:	mov    rdi,rdx
  4331f6:	call   rax
  4331f8:	mov    rax,QWORD PTR [rbp-0x8]
  4331fc:	inc    rax
  4331ff:	mov    QWORD PTR [rbp-0x8],rax
  433203:	dec    DWORD PTR [rbp-0xc]
  433206:	jmp    433285 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fb>
  433208:	mov    rax,QWORD PTR [rbp-0x18]
  43320c:	mov    rax,QWORD PTR [rax+0x28]
  433210:	lea    rcx,[rax+0x1]
  433214:	mov    rdx,QWORD PTR [rbp-0x18]
  433218:	mov    QWORD PTR [rdx+0x28],rcx
  43321c:	mov    BYTE PTR [rax],0x2c
  43321f:	mov    rax,QWORD PTR [rbp-0x18]
  433223:	movzx  eax,BYTE PTR [rax+0x31]
  433227:	test   al,al
  433229:	je     433250 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c6>
  43322b:	mov    rax,QWORD PTR [rbp-0x18]
  43322f:	mov    rax,QWORD PTR [rax+0x28]
  433233:	lea    rcx,[rax+0x1]
  433237:	mov    rdx,QWORD PTR [rbp-0x18]
  43323b:	mov    QWORD PTR [rdx+0x28],rcx
  43323f:	mov    BYTE PTR [rax],0xa
  433242:	mov    rax,QWORD PTR [rbp-0x18]
  433246:	mov    rdi,rax
  433249:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43324e:	jmp    43325c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d2>
  433250:	mov    rax,QWORD PTR [rbp-0x18]
  433254:	mov    rdi,rax
  433257:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43325c:	mov    rax,QWORD PTR [rbp-0x8]
  433260:	mov    rdi,rax
  433263:	call   429f2c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  433268:	movsx  ecx,al
  43326b:	mov    rdx,QWORD PTR [rbp-0x18]
  43326f:	mov    rax,QWORD PTR [rbp-0x38]
  433273:	mov    esi,ecx
  433275:	mov    rdi,rdx
  433278:	call   rax
  43327a:	mov    rax,QWORD PTR [rbp-0x8]
  43327e:	inc    rax
  433281:	mov    QWORD PTR [rbp-0x8],rax
  433285:	mov    eax,DWORD PTR [rbp-0xc]
  433288:	lea    edx,[rax-0x1]
  43328b:	mov    DWORD PTR [rbp-0xc],edx
  43328e:	test   eax,eax
  433290:	jne    433208 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17e>
  433296:	mov    rax,QWORD PTR [rbp-0x18]
  43329a:	movzx  eax,BYTE PTR [rax+0x31]
  43329e:	test   al,al
  4332a0:	je     4332d6 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
  4332a2:	mov    rax,QWORD PTR [rbp-0x18]
  4332a6:	mov    rax,QWORD PTR [rax+0x28]
  4332aa:	lea    rcx,[rax+0x1]
  4332ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4332b2:	mov    QWORD PTR [rdx+0x28],rcx
  4332b6:	mov    BYTE PTR [rax],0xa
  4332b9:	mov    rax,QWORD PTR [rbp-0x18]
  4332bd:	mov    eax,DWORD PTR [rax+0x38]
  4332c0:	lea    edx,[rax-0x1]
  4332c3:	mov    rax,QWORD PTR [rbp-0x18]
  4332c7:	mov    DWORD PTR [rax+0x38],edx
  4332ca:	mov    rax,QWORD PTR [rbp-0x18]
  4332ce:	mov    rdi,rax
  4332d1:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4332d6:	mov    rax,QWORD PTR [rbp-0x18]
  4332da:	mov    rax,QWORD PTR [rax+0x28]
  4332de:	lea    rcx,[rax+0x1]
  4332e2:	mov    rdx,QWORD PTR [rbp-0x18]
  4332e6:	mov    QWORD PTR [rdx+0x28],rcx
  4332ea:	mov    BYTE PTR [rax],0x5d
  4332ed:	leave  
  4332ee:	ret    

00000000004332ef <flatcc_json_printer_int16_enum_vector_field@@Base>:
  4332ef:	endbr64 
  4332f3:	push   rbp
  4332f4:	mov    rbp,rsp
  4332f7:	sub    rsp,0x40
  4332fb:	mov    QWORD PTR [rbp-0x18],rdi
  4332ff:	mov    QWORD PTR [rbp-0x20],rsi
  433303:	mov    DWORD PTR [rbp-0x24],edx
  433306:	mov    QWORD PTR [rbp-0x30],rcx
  43330a:	mov    DWORD PTR [rbp-0x28],r8d
  43330e:	mov    QWORD PTR [rbp-0x38],r9
  433312:	mov    rax,QWORD PTR [rbp-0x18]
  433316:	movzx  eax,BYTE PTR [rax+0x33]
  43331a:	test   al,al
  43331c:	je     433340 <flatcc_json_printer_int16_enum_vector_field@@Base+0x51>
  43331e:	mov    edi,DWORD PTR [rbp-0x28]
  433321:	mov    rcx,QWORD PTR [rbp-0x30]
  433325:	mov    edx,DWORD PTR [rbp-0x24]
  433328:	mov    rsi,QWORD PTR [rbp-0x20]
  43332c:	mov    rax,QWORD PTR [rbp-0x18]
  433330:	mov    r8d,edi
  433333:	mov    rdi,rax
  433336:	call   4315c1 <flatcc_json_printer_int16_vector_field@@Base>
  43333b:	jmp    433554 <flatcc_json_printer_int16_enum_vector_field@@Base+0x265>
  433340:	mov    edx,DWORD PTR [rbp-0x24]
  433343:	mov    rax,QWORD PTR [rbp-0x20]
  433347:	mov    esi,edx
  433349:	mov    rdi,rax
  43334c:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  433351:	mov    QWORD PTR [rbp-0x8],rax
  433355:	cmp    QWORD PTR [rbp-0x8],0x0
  43335a:	je     433554 <flatcc_json_printer_int16_enum_vector_field@@Base+0x265>
  433360:	mov    rax,QWORD PTR [rbp-0x20]
  433364:	mov    eax,DWORD PTR [rax+0x18]
  433367:	lea    ecx,[rax+0x1]
  43336a:	mov    rdx,QWORD PTR [rbp-0x20]
  43336e:	mov    DWORD PTR [rdx+0x18],ecx
  433371:	test   eax,eax
  433373:	je     43338c <flatcc_json_printer_int16_enum_vector_field@@Base+0x9d>
  433375:	mov    rax,QWORD PTR [rbp-0x18]
  433379:	mov    rax,QWORD PTR [rax+0x28]
  43337d:	lea    rcx,[rax+0x1]
  433381:	mov    rdx,QWORD PTR [rbp-0x18]
  433385:	mov    QWORD PTR [rdx+0x28],rcx
  433389:	mov    BYTE PTR [rax],0x2c
  43338c:	mov    rax,QWORD PTR [rbp-0x8]
  433390:	mov    rdi,rax
  433393:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  433398:	mov    QWORD PTR [rbp-0x8],rax
  43339c:	mov    rax,QWORD PTR [rbp-0x8]
  4333a0:	mov    rdi,rax
  4333a3:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4333a8:	mov    DWORD PTR [rbp-0xc],eax
  4333ab:	mov    rax,QWORD PTR [rbp-0x8]
  4333af:	add    rax,0x4
  4333b3:	mov    QWORD PTR [rbp-0x8],rax
  4333b7:	mov    eax,DWORD PTR [rbp-0x28]
  4333ba:	movsxd rdx,eax
  4333bd:	mov    rcx,QWORD PTR [rbp-0x30]
  4333c1:	mov    rax,QWORD PTR [rbp-0x18]
  4333c5:	mov    rsi,rcx
  4333c8:	mov    rdi,rax
  4333cb:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4333d0:	mov    rax,QWORD PTR [rbp-0x18]
  4333d4:	mov    eax,DWORD PTR [rax+0x38]
  4333d7:	lea    edx,[rax+0x1]
  4333da:	mov    rax,QWORD PTR [rbp-0x18]
  4333de:	mov    DWORD PTR [rax+0x38],edx
  4333e1:	mov    rax,QWORD PTR [rbp-0x18]
  4333e5:	mov    rax,QWORD PTR [rax+0x28]
  4333e9:	lea    rcx,[rax+0x1]
  4333ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4333f1:	mov    QWORD PTR [rdx+0x28],rcx
  4333f5:	mov    BYTE PTR [rax],0x5b
  4333f8:	cmp    DWORD PTR [rbp-0xc],0x0
  4333fc:	je     4334ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fd>
  433402:	mov    rax,QWORD PTR [rbp-0x18]
  433406:	movzx  eax,BYTE PTR [rax+0x31]
  43340a:	test   al,al
  43340c:	je     433433 <flatcc_json_printer_int16_enum_vector_field@@Base+0x144>
  43340e:	mov    rax,QWORD PTR [rbp-0x18]
  433412:	mov    rax,QWORD PTR [rax+0x28]
  433416:	lea    rcx,[rax+0x1]
  43341a:	mov    rdx,QWORD PTR [rbp-0x18]
  43341e:	mov    QWORD PTR [rdx+0x28],rcx
  433422:	mov    BYTE PTR [rax],0xa
  433425:	mov    rax,QWORD PTR [rbp-0x18]
  433429:	mov    rdi,rax
  43342c:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433431:	jmp    43343f <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
  433433:	mov    rax,QWORD PTR [rbp-0x18]
  433437:	mov    rdi,rax
  43343a:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43343f:	mov    rax,QWORD PTR [rbp-0x8]
  433443:	mov    rdi,rax
  433446:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  43344b:	movsx  ecx,ax
  43344e:	mov    rdx,QWORD PTR [rbp-0x18]
  433452:	mov    rax,QWORD PTR [rbp-0x38]
  433456:	mov    esi,ecx
  433458:	mov    rdi,rdx
  43345b:	call   rax
  43345d:	mov    rax,QWORD PTR [rbp-0x8]
  433461:	add    rax,0x2
  433465:	mov    QWORD PTR [rbp-0x8],rax
  433469:	dec    DWORD PTR [rbp-0xc]
  43346c:	jmp    4334ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fd>
  43346e:	mov    rax,QWORD PTR [rbp-0x18]
  433472:	mov    rax,QWORD PTR [rax+0x28]
  433476:	lea    rcx,[rax+0x1]
  43347a:	mov    rdx,QWORD PTR [rbp-0x18]
  43347e:	mov    QWORD PTR [rdx+0x28],rcx
  433482:	mov    BYTE PTR [rax],0x2c
  433485:	mov    rax,QWORD PTR [rbp-0x18]
  433489:	movzx  eax,BYTE PTR [rax+0x31]
  43348d:	test   al,al
  43348f:	je     4334b6 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c7>
  433491:	mov    rax,QWORD PTR [rbp-0x18]
  433495:	mov    rax,QWORD PTR [rax+0x28]
  433499:	lea    rcx,[rax+0x1]
  43349d:	mov    rdx,QWORD PTR [rbp-0x18]
  4334a1:	mov    QWORD PTR [rdx+0x28],rcx
  4334a5:	mov    BYTE PTR [rax],0xa
  4334a8:	mov    rax,QWORD PTR [rbp-0x18]
  4334ac:	mov    rdi,rax
  4334af:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4334b4:	jmp    4334c2 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d3>
  4334b6:	mov    rax,QWORD PTR [rbp-0x18]
  4334ba:	mov    rdi,rax
  4334bd:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4334c2:	mov    rax,QWORD PTR [rbp-0x8]
  4334c6:	mov    rdi,rax
  4334c9:	call   429f5b <flatcc_json_parser_struct_as_root@@Base+0x226>
  4334ce:	movsx  ecx,ax
  4334d1:	mov    rdx,QWORD PTR [rbp-0x18]
  4334d5:	mov    rax,QWORD PTR [rbp-0x38]
  4334d9:	mov    esi,ecx
  4334db:	mov    rdi,rdx
  4334de:	call   rax
  4334e0:	mov    rax,QWORD PTR [rbp-0x8]
  4334e4:	add    rax,0x2
  4334e8:	mov    QWORD PTR [rbp-0x8],rax
  4334ec:	mov    eax,DWORD PTR [rbp-0xc]
  4334ef:	lea    edx,[rax-0x1]
  4334f2:	mov    DWORD PTR [rbp-0xc],edx
  4334f5:	test   eax,eax
  4334f7:	jne    43346e <flatcc_json_printer_int16_enum_vector_field@@Base+0x17f>
  4334fd:	mov    rax,QWORD PTR [rbp-0x18]
  433501:	movzx  eax,BYTE PTR [rax+0x31]
  433505:	test   al,al
  433507:	je     43353d <flatcc_json_printer_int16_enum_vector_field@@Base+0x24e>
  433509:	mov    rax,QWORD PTR [rbp-0x18]
  43350d:	mov    rax,QWORD PTR [rax+0x28]
  433511:	lea    rcx,[rax+0x1]
  433515:	mov    rdx,QWORD PTR [rbp-0x18]
  433519:	mov    QWORD PTR [rdx+0x28],rcx
  43351d:	mov    BYTE PTR [rax],0xa
  433520:	mov    rax,QWORD PTR [rbp-0x18]
  433524:	mov    eax,DWORD PTR [rax+0x38]
  433527:	lea    edx,[rax-0x1]
  43352a:	mov    rax,QWORD PTR [rbp-0x18]
  43352e:	mov    DWORD PTR [rax+0x38],edx
  433531:	mov    rax,QWORD PTR [rbp-0x18]
  433535:	mov    rdi,rax
  433538:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43353d:	mov    rax,QWORD PTR [rbp-0x18]
  433541:	mov    rax,QWORD PTR [rax+0x28]
  433545:	lea    rcx,[rax+0x1]
  433549:	mov    rdx,QWORD PTR [rbp-0x18]
  43354d:	mov    QWORD PTR [rdx+0x28],rcx
  433551:	mov    BYTE PTR [rax],0x5d
  433554:	leave  
  433555:	ret    

0000000000433556 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  433556:	endbr64 
  43355a:	push   rbp
  43355b:	mov    rbp,rsp
  43355e:	sub    rsp,0x40
  433562:	mov    QWORD PTR [rbp-0x18],rdi
  433566:	mov    QWORD PTR [rbp-0x20],rsi
  43356a:	mov    DWORD PTR [rbp-0x24],edx
  43356d:	mov    QWORD PTR [rbp-0x30],rcx
  433571:	mov    DWORD PTR [rbp-0x28],r8d
  433575:	mov    QWORD PTR [rbp-0x38],r9
  433579:	mov    rax,QWORD PTR [rbp-0x18]
  43357d:	movzx  eax,BYTE PTR [rax+0x33]
  433581:	test   al,al
  433583:	je     4335a7 <flatcc_json_printer_int32_enum_vector_field@@Base+0x51>
  433585:	mov    edi,DWORD PTR [rbp-0x28]
  433588:	mov    rcx,QWORD PTR [rbp-0x30]
  43358c:	mov    edx,DWORD PTR [rbp-0x24]
  43358f:	mov    rsi,QWORD PTR [rbp-0x20]
  433593:	mov    rax,QWORD PTR [rbp-0x18]
  433597:	mov    r8d,edi
  43359a:	mov    rdi,rax
  43359d:	call   431832 <flatcc_json_printer_int32_vector_field@@Base>
  4335a2:	jmp    4337b9 <flatcc_json_printer_int32_enum_vector_field@@Base+0x263>
  4335a7:	mov    edx,DWORD PTR [rbp-0x24]
  4335aa:	mov    rax,QWORD PTR [rbp-0x20]
  4335ae:	mov    esi,edx
  4335b0:	mov    rdi,rax
  4335b3:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4335b8:	mov    QWORD PTR [rbp-0x8],rax
  4335bc:	cmp    QWORD PTR [rbp-0x8],0x0
  4335c1:	je     4337b9 <flatcc_json_printer_int32_enum_vector_field@@Base+0x263>
  4335c7:	mov    rax,QWORD PTR [rbp-0x20]
  4335cb:	mov    eax,DWORD PTR [rax+0x18]
  4335ce:	lea    ecx,[rax+0x1]
  4335d1:	mov    rdx,QWORD PTR [rbp-0x20]
  4335d5:	mov    DWORD PTR [rdx+0x18],ecx
  4335d8:	test   eax,eax
  4335da:	je     4335f3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x9d>
  4335dc:	mov    rax,QWORD PTR [rbp-0x18]
  4335e0:	mov    rax,QWORD PTR [rax+0x28]
  4335e4:	lea    rcx,[rax+0x1]
  4335e8:	mov    rdx,QWORD PTR [rbp-0x18]
  4335ec:	mov    QWORD PTR [rdx+0x28],rcx
  4335f0:	mov    BYTE PTR [rax],0x2c
  4335f3:	mov    rax,QWORD PTR [rbp-0x8]
  4335f7:	mov    rdi,rax
  4335fa:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4335ff:	mov    QWORD PTR [rbp-0x8],rax
  433603:	mov    rax,QWORD PTR [rbp-0x8]
  433607:	mov    rdi,rax
  43360a:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43360f:	mov    DWORD PTR [rbp-0xc],eax
  433612:	mov    rax,QWORD PTR [rbp-0x8]
  433616:	add    rax,0x4
  43361a:	mov    QWORD PTR [rbp-0x8],rax
  43361e:	mov    eax,DWORD PTR [rbp-0x28]
  433621:	movsxd rdx,eax
  433624:	mov    rcx,QWORD PTR [rbp-0x30]
  433628:	mov    rax,QWORD PTR [rbp-0x18]
  43362c:	mov    rsi,rcx
  43362f:	mov    rdi,rax
  433632:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  433637:	mov    rax,QWORD PTR [rbp-0x18]
  43363b:	mov    eax,DWORD PTR [rax+0x38]
  43363e:	lea    edx,[rax+0x1]
  433641:	mov    rax,QWORD PTR [rbp-0x18]
  433645:	mov    DWORD PTR [rax+0x38],edx
  433648:	mov    rax,QWORD PTR [rbp-0x18]
  43364c:	mov    rax,QWORD PTR [rax+0x28]
  433650:	lea    rcx,[rax+0x1]
  433654:	mov    rdx,QWORD PTR [rbp-0x18]
  433658:	mov    QWORD PTR [rdx+0x28],rcx
  43365c:	mov    BYTE PTR [rax],0x5b
  43365f:	cmp    DWORD PTR [rbp-0xc],0x0
  433663:	je     433751 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1fb>
  433669:	mov    rax,QWORD PTR [rbp-0x18]
  43366d:	movzx  eax,BYTE PTR [rax+0x31]
  433671:	test   al,al
  433673:	je     43369a <flatcc_json_printer_int32_enum_vector_field@@Base+0x144>
  433675:	mov    rax,QWORD PTR [rbp-0x18]
  433679:	mov    rax,QWORD PTR [rax+0x28]
  43367d:	lea    rcx,[rax+0x1]
  433681:	mov    rdx,QWORD PTR [rbp-0x18]
  433685:	mov    QWORD PTR [rdx+0x28],rcx
  433689:	mov    BYTE PTR [rax],0xa
  43368c:	mov    rax,QWORD PTR [rbp-0x18]
  433690:	mov    rdi,rax
  433693:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433698:	jmp    4336a6 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
  43369a:	mov    rax,QWORD PTR [rbp-0x18]
  43369e:	mov    rdi,rax
  4336a1:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4336a6:	mov    rax,QWORD PTR [rbp-0x8]
  4336aa:	mov    rdi,rax
  4336ad:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  4336b2:	mov    ecx,eax
  4336b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4336b8:	mov    rax,QWORD PTR [rbp-0x38]
  4336bc:	mov    esi,ecx
  4336be:	mov    rdi,rdx
  4336c1:	call   rax
  4336c3:	mov    rax,QWORD PTR [rbp-0x8]
  4336c7:	add    rax,0x4
  4336cb:	mov    QWORD PTR [rbp-0x8],rax
  4336cf:	dec    DWORD PTR [rbp-0xc]
  4336d2:	jmp    433751 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1fb>
  4336d4:	mov    rax,QWORD PTR [rbp-0x18]
  4336d8:	mov    rax,QWORD PTR [rax+0x28]
  4336dc:	lea    rcx,[rax+0x1]
  4336e0:	mov    rdx,QWORD PTR [rbp-0x18]
  4336e4:	mov    QWORD PTR [rdx+0x28],rcx
  4336e8:	mov    BYTE PTR [rax],0x2c
  4336eb:	mov    rax,QWORD PTR [rbp-0x18]
  4336ef:	movzx  eax,BYTE PTR [rax+0x31]
  4336f3:	test   al,al
  4336f5:	je     43371c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c6>
  4336f7:	mov    rax,QWORD PTR [rbp-0x18]
  4336fb:	mov    rax,QWORD PTR [rax+0x28]
  4336ff:	lea    rcx,[rax+0x1]
  433703:	mov    rdx,QWORD PTR [rbp-0x18]
  433707:	mov    QWORD PTR [rdx+0x28],rcx
  43370b:	mov    BYTE PTR [rax],0xa
  43370e:	mov    rax,QWORD PTR [rbp-0x18]
  433712:	mov    rdi,rax
  433715:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43371a:	jmp    433728 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d2>
  43371c:	mov    rax,QWORD PTR [rbp-0x18]
  433720:	mov    rdi,rax
  433723:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433728:	mov    rax,QWORD PTR [rbp-0x8]
  43372c:	mov    rdi,rax
  43372f:	call   429f84 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  433734:	mov    ecx,eax
  433736:	mov    rdx,QWORD PTR [rbp-0x18]
  43373a:	mov    rax,QWORD PTR [rbp-0x38]
  43373e:	mov    esi,ecx
  433740:	mov    rdi,rdx
  433743:	call   rax
  433745:	mov    rax,QWORD PTR [rbp-0x8]
  433749:	add    rax,0x4
  43374d:	mov    QWORD PTR [rbp-0x8],rax
  433751:	mov    eax,DWORD PTR [rbp-0xc]
  433754:	lea    edx,[rax-0x1]
  433757:	mov    DWORD PTR [rbp-0xc],edx
  43375a:	test   eax,eax
  43375c:	jne    4336d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17e>
  433762:	mov    rax,QWORD PTR [rbp-0x18]
  433766:	movzx  eax,BYTE PTR [rax+0x31]
  43376a:	test   al,al
  43376c:	je     4337a2 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
  43376e:	mov    rax,QWORD PTR [rbp-0x18]
  433772:	mov    rax,QWORD PTR [rax+0x28]
  433776:	lea    rcx,[rax+0x1]
  43377a:	mov    rdx,QWORD PTR [rbp-0x18]
  43377e:	mov    QWORD PTR [rdx+0x28],rcx
  433782:	mov    BYTE PTR [rax],0xa
  433785:	mov    rax,QWORD PTR [rbp-0x18]
  433789:	mov    eax,DWORD PTR [rax+0x38]
  43378c:	lea    edx,[rax-0x1]
  43378f:	mov    rax,QWORD PTR [rbp-0x18]
  433793:	mov    DWORD PTR [rax+0x38],edx
  433796:	mov    rax,QWORD PTR [rbp-0x18]
  43379a:	mov    rdi,rax
  43379d:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4337a2:	mov    rax,QWORD PTR [rbp-0x18]
  4337a6:	mov    rax,QWORD PTR [rax+0x28]
  4337aa:	lea    rcx,[rax+0x1]
  4337ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4337b2:	mov    QWORD PTR [rdx+0x28],rcx
  4337b6:	mov    BYTE PTR [rax],0x5d
  4337b9:	leave  
  4337ba:	ret    

00000000004337bb <flatcc_json_printer_int64_enum_vector_field@@Base>:
  4337bb:	endbr64 
  4337bf:	push   rbp
  4337c0:	mov    rbp,rsp
  4337c3:	sub    rsp,0x40
  4337c7:	mov    QWORD PTR [rbp-0x18],rdi
  4337cb:	mov    QWORD PTR [rbp-0x20],rsi
  4337cf:	mov    DWORD PTR [rbp-0x24],edx
  4337d2:	mov    QWORD PTR [rbp-0x30],rcx
  4337d6:	mov    DWORD PTR [rbp-0x28],r8d
  4337da:	mov    QWORD PTR [rbp-0x38],r9
  4337de:	mov    rax,QWORD PTR [rbp-0x18]
  4337e2:	movzx  eax,BYTE PTR [rax+0x33]
  4337e6:	test   al,al
  4337e8:	je     43380c <flatcc_json_printer_int64_enum_vector_field@@Base+0x51>
  4337ea:	mov    edi,DWORD PTR [rbp-0x28]
  4337ed:	mov    rcx,QWORD PTR [rbp-0x30]
  4337f1:	mov    edx,DWORD PTR [rbp-0x24]
  4337f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4337f8:	mov    rax,QWORD PTR [rbp-0x18]
  4337fc:	mov    r8d,edi
  4337ff:	mov    rdi,rax
  433802:	call   431aa1 <flatcc_json_printer_int64_vector_field@@Base>
  433807:	jmp    433a22 <flatcc_json_printer_int64_enum_vector_field@@Base+0x267>
  43380c:	mov    edx,DWORD PTR [rbp-0x24]
  43380f:	mov    rax,QWORD PTR [rbp-0x20]
  433813:	mov    esi,edx
  433815:	mov    rdi,rax
  433818:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  43381d:	mov    QWORD PTR [rbp-0x8],rax
  433821:	cmp    QWORD PTR [rbp-0x8],0x0
  433826:	je     433a22 <flatcc_json_printer_int64_enum_vector_field@@Base+0x267>
  43382c:	mov    rax,QWORD PTR [rbp-0x20]
  433830:	mov    eax,DWORD PTR [rax+0x18]
  433833:	lea    ecx,[rax+0x1]
  433836:	mov    rdx,QWORD PTR [rbp-0x20]
  43383a:	mov    DWORD PTR [rdx+0x18],ecx
  43383d:	test   eax,eax
  43383f:	je     433858 <flatcc_json_printer_int64_enum_vector_field@@Base+0x9d>
  433841:	mov    rax,QWORD PTR [rbp-0x18]
  433845:	mov    rax,QWORD PTR [rax+0x28]
  433849:	lea    rcx,[rax+0x1]
  43384d:	mov    rdx,QWORD PTR [rbp-0x18]
  433851:	mov    QWORD PTR [rdx+0x28],rcx
  433855:	mov    BYTE PTR [rax],0x2c
  433858:	mov    rax,QWORD PTR [rbp-0x8]
  43385c:	mov    rdi,rax
  43385f:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  433864:	mov    QWORD PTR [rbp-0x8],rax
  433868:	mov    rax,QWORD PTR [rbp-0x8]
  43386c:	mov    rdi,rax
  43386f:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433874:	mov    DWORD PTR [rbp-0xc],eax
  433877:	mov    rax,QWORD PTR [rbp-0x8]
  43387b:	add    rax,0x4
  43387f:	mov    QWORD PTR [rbp-0x8],rax
  433883:	mov    eax,DWORD PTR [rbp-0x28]
  433886:	movsxd rdx,eax
  433889:	mov    rcx,QWORD PTR [rbp-0x30]
  43388d:	mov    rax,QWORD PTR [rbp-0x18]
  433891:	mov    rsi,rcx
  433894:	mov    rdi,rax
  433897:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43389c:	mov    rax,QWORD PTR [rbp-0x18]
  4338a0:	mov    eax,DWORD PTR [rax+0x38]
  4338a3:	lea    edx,[rax+0x1]
  4338a6:	mov    rax,QWORD PTR [rbp-0x18]
  4338aa:	mov    DWORD PTR [rax+0x38],edx
  4338ad:	mov    rax,QWORD PTR [rbp-0x18]
  4338b1:	mov    rax,QWORD PTR [rax+0x28]
  4338b5:	lea    rcx,[rax+0x1]
  4338b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4338bd:	mov    QWORD PTR [rdx+0x28],rcx
  4338c1:	mov    BYTE PTR [rax],0x5b
  4338c4:	cmp    DWORD PTR [rbp-0xc],0x0
  4338c8:	je     4339ba <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ff>
  4338ce:	mov    rax,QWORD PTR [rbp-0x18]
  4338d2:	movzx  eax,BYTE PTR [rax+0x31]
  4338d6:	test   al,al
  4338d8:	je     4338ff <flatcc_json_printer_int64_enum_vector_field@@Base+0x144>
  4338da:	mov    rax,QWORD PTR [rbp-0x18]
  4338de:	mov    rax,QWORD PTR [rax+0x28]
  4338e2:	lea    rcx,[rax+0x1]
  4338e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4338ea:	mov    QWORD PTR [rdx+0x28],rcx
  4338ee:	mov    BYTE PTR [rax],0xa
  4338f1:	mov    rax,QWORD PTR [rbp-0x18]
  4338f5:	mov    rdi,rax
  4338f8:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4338fd:	jmp    43390b <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
  4338ff:	mov    rax,QWORD PTR [rbp-0x18]
  433903:	mov    rdi,rax
  433906:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43390b:	mov    rax,QWORD PTR [rbp-0x8]
  43390f:	mov    rdi,rax
  433912:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  433917:	mov    rcx,rax
  43391a:	mov    rdx,QWORD PTR [rbp-0x18]
  43391e:	mov    rax,QWORD PTR [rbp-0x38]
  433922:	mov    rsi,rcx
  433925:	mov    rdi,rdx
  433928:	call   rax
  43392a:	mov    rax,QWORD PTR [rbp-0x8]
  43392e:	add    rax,0x8
  433932:	mov    QWORD PTR [rbp-0x8],rax
  433936:	dec    DWORD PTR [rbp-0xc]
  433939:	jmp    4339ba <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ff>
  43393b:	mov    rax,QWORD PTR [rbp-0x18]
  43393f:	mov    rax,QWORD PTR [rax+0x28]
  433943:	lea    rcx,[rax+0x1]
  433947:	mov    rdx,QWORD PTR [rbp-0x18]
  43394b:	mov    QWORD PTR [rdx+0x28],rcx
  43394f:	mov    BYTE PTR [rax],0x2c
  433952:	mov    rax,QWORD PTR [rbp-0x18]
  433956:	movzx  eax,BYTE PTR [rax+0x31]
  43395a:	test   al,al
  43395c:	je     433983 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
  43395e:	mov    rax,QWORD PTR [rbp-0x18]
  433962:	mov    rax,QWORD PTR [rax+0x28]
  433966:	lea    rcx,[rax+0x1]
  43396a:	mov    rdx,QWORD PTR [rbp-0x18]
  43396e:	mov    QWORD PTR [rdx+0x28],rcx
  433972:	mov    BYTE PTR [rax],0xa
  433975:	mov    rax,QWORD PTR [rbp-0x18]
  433979:	mov    rdi,rax
  43397c:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433981:	jmp    43398f <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
  433983:	mov    rax,QWORD PTR [rbp-0x18]
  433987:	mov    rdi,rax
  43398a:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43398f:	mov    rax,QWORD PTR [rbp-0x8]
  433993:	mov    rdi,rax
  433996:	call   429fad <flatcc_json_parser_struct_as_root@@Base+0x278>
  43399b:	mov    rcx,rax
  43399e:	mov    rdx,QWORD PTR [rbp-0x18]
  4339a2:	mov    rax,QWORD PTR [rbp-0x38]
  4339a6:	mov    rsi,rcx
  4339a9:	mov    rdi,rdx
  4339ac:	call   rax
  4339ae:	mov    rax,QWORD PTR [rbp-0x8]
  4339b2:	add    rax,0x8
  4339b6:	mov    QWORD PTR [rbp-0x8],rax
  4339ba:	mov    eax,DWORD PTR [rbp-0xc]
  4339bd:	lea    edx,[rax-0x1]
  4339c0:	mov    DWORD PTR [rbp-0xc],edx
  4339c3:	test   eax,eax
  4339c5:	jne    43393b <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  4339cb:	mov    rax,QWORD PTR [rbp-0x18]
  4339cf:	movzx  eax,BYTE PTR [rax+0x31]
  4339d3:	test   al,al
  4339d5:	je     433a0b <flatcc_json_printer_int64_enum_vector_field@@Base+0x250>
  4339d7:	mov    rax,QWORD PTR [rbp-0x18]
  4339db:	mov    rax,QWORD PTR [rax+0x28]
  4339df:	lea    rcx,[rax+0x1]
  4339e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4339e7:	mov    QWORD PTR [rdx+0x28],rcx
  4339eb:	mov    BYTE PTR [rax],0xa
  4339ee:	mov    rax,QWORD PTR [rbp-0x18]
  4339f2:	mov    eax,DWORD PTR [rax+0x38]
  4339f5:	lea    edx,[rax-0x1]
  4339f8:	mov    rax,QWORD PTR [rbp-0x18]
  4339fc:	mov    DWORD PTR [rax+0x38],edx
  4339ff:	mov    rax,QWORD PTR [rbp-0x18]
  433a03:	mov    rdi,rax
  433a06:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433a0b:	mov    rax,QWORD PTR [rbp-0x18]
  433a0f:	mov    rax,QWORD PTR [rax+0x28]
  433a13:	lea    rcx,[rax+0x1]
  433a17:	mov    rdx,QWORD PTR [rbp-0x18]
  433a1b:	mov    QWORD PTR [rdx+0x28],rcx
  433a1f:	mov    BYTE PTR [rax],0x5d
  433a22:	leave  
  433a23:	ret    

0000000000433a24 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  433a24:	endbr64 
  433a28:	push   rbp
  433a29:	mov    rbp,rsp
  433a2c:	sub    rsp,0x40
  433a30:	mov    QWORD PTR [rbp-0x18],rdi
  433a34:	mov    QWORD PTR [rbp-0x20],rsi
  433a38:	mov    DWORD PTR [rbp-0x24],edx
  433a3b:	mov    QWORD PTR [rbp-0x30],rcx
  433a3f:	mov    DWORD PTR [rbp-0x28],r8d
  433a43:	mov    QWORD PTR [rbp-0x38],r9
  433a47:	mov    rax,QWORD PTR [rbp-0x18]
  433a4b:	movzx  eax,BYTE PTR [rax+0x33]
  433a4f:	test   al,al
  433a51:	je     433a75 <flatcc_json_printer_bool_enum_vector_field@@Base+0x51>
  433a53:	mov    edi,DWORD PTR [rbp-0x28]
  433a56:	mov    rcx,QWORD PTR [rbp-0x30]
  433a5a:	mov    edx,DWORD PTR [rbp-0x24]
  433a5d:	mov    rsi,QWORD PTR [rbp-0x20]
  433a61:	mov    rax,QWORD PTR [rbp-0x18]
  433a65:	mov    r8d,edi
  433a68:	mov    rdi,rax
  433a6b:	call   431d12 <flatcc_json_printer_bool_vector_field@@Base>
  433a70:	jmp    433c87 <flatcc_json_printer_bool_enum_vector_field@@Base+0x263>
  433a75:	mov    edx,DWORD PTR [rbp-0x24]
  433a78:	mov    rax,QWORD PTR [rbp-0x20]
  433a7c:	mov    esi,edx
  433a7e:	mov    rdi,rax
  433a81:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  433a86:	mov    QWORD PTR [rbp-0x8],rax
  433a8a:	cmp    QWORD PTR [rbp-0x8],0x0
  433a8f:	je     433c87 <flatcc_json_printer_bool_enum_vector_field@@Base+0x263>
  433a95:	mov    rax,QWORD PTR [rbp-0x20]
  433a99:	mov    eax,DWORD PTR [rax+0x18]
  433a9c:	lea    ecx,[rax+0x1]
  433a9f:	mov    rdx,QWORD PTR [rbp-0x20]
  433aa3:	mov    DWORD PTR [rdx+0x18],ecx
  433aa6:	test   eax,eax
  433aa8:	je     433ac1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x9d>
  433aaa:	mov    rax,QWORD PTR [rbp-0x18]
  433aae:	mov    rax,QWORD PTR [rax+0x28]
  433ab2:	lea    rcx,[rax+0x1]
  433ab6:	mov    rdx,QWORD PTR [rbp-0x18]
  433aba:	mov    QWORD PTR [rdx+0x28],rcx
  433abe:	mov    BYTE PTR [rax],0x2c
  433ac1:	mov    rax,QWORD PTR [rbp-0x8]
  433ac5:	mov    rdi,rax
  433ac8:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  433acd:	mov    QWORD PTR [rbp-0x8],rax
  433ad1:	mov    rax,QWORD PTR [rbp-0x8]
  433ad5:	mov    rdi,rax
  433ad8:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433add:	mov    DWORD PTR [rbp-0xc],eax
  433ae0:	mov    rax,QWORD PTR [rbp-0x8]
  433ae4:	add    rax,0x4
  433ae8:	mov    QWORD PTR [rbp-0x8],rax
  433aec:	mov    eax,DWORD PTR [rbp-0x28]
  433aef:	movsxd rdx,eax
  433af2:	mov    rcx,QWORD PTR [rbp-0x30]
  433af6:	mov    rax,QWORD PTR [rbp-0x18]
  433afa:	mov    rsi,rcx
  433afd:	mov    rdi,rax
  433b00:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  433b05:	mov    rax,QWORD PTR [rbp-0x18]
  433b09:	mov    eax,DWORD PTR [rax+0x38]
  433b0c:	lea    edx,[rax+0x1]
  433b0f:	mov    rax,QWORD PTR [rbp-0x18]
  433b13:	mov    DWORD PTR [rax+0x38],edx
  433b16:	mov    rax,QWORD PTR [rbp-0x18]
  433b1a:	mov    rax,QWORD PTR [rax+0x28]
  433b1e:	lea    rcx,[rax+0x1]
  433b22:	mov    rdx,QWORD PTR [rbp-0x18]
  433b26:	mov    QWORD PTR [rdx+0x28],rcx
  433b2a:	mov    BYTE PTR [rax],0x5b
  433b2d:	cmp    DWORD PTR [rbp-0xc],0x0
  433b31:	je     433c1f <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fb>
  433b37:	mov    rax,QWORD PTR [rbp-0x18]
  433b3b:	movzx  eax,BYTE PTR [rax+0x31]
  433b3f:	test   al,al
  433b41:	je     433b68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x144>
  433b43:	mov    rax,QWORD PTR [rbp-0x18]
  433b47:	mov    rax,QWORD PTR [rax+0x28]
  433b4b:	lea    rcx,[rax+0x1]
  433b4f:	mov    rdx,QWORD PTR [rbp-0x18]
  433b53:	mov    QWORD PTR [rdx+0x28],rcx
  433b57:	mov    BYTE PTR [rax],0xa
  433b5a:	mov    rax,QWORD PTR [rbp-0x18]
  433b5e:	mov    rdi,rax
  433b61:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433b66:	jmp    433b74 <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
  433b68:	mov    rax,QWORD PTR [rbp-0x18]
  433b6c:	mov    rdi,rax
  433b6f:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433b74:	mov    rax,QWORD PTR [rbp-0x8]
  433b78:	mov    rdi,rax
  433b7b:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  433b80:	movzx  ecx,al
  433b83:	mov    rdx,QWORD PTR [rbp-0x18]
  433b87:	mov    rax,QWORD PTR [rbp-0x38]
  433b8b:	mov    esi,ecx
  433b8d:	mov    rdi,rdx
  433b90:	call   rax
  433b92:	mov    rax,QWORD PTR [rbp-0x8]
  433b96:	inc    rax
  433b99:	mov    QWORD PTR [rbp-0x8],rax
  433b9d:	dec    DWORD PTR [rbp-0xc]
  433ba0:	jmp    433c1f <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fb>
  433ba2:	mov    rax,QWORD PTR [rbp-0x18]
  433ba6:	mov    rax,QWORD PTR [rax+0x28]
  433baa:	lea    rcx,[rax+0x1]
  433bae:	mov    rdx,QWORD PTR [rbp-0x18]
  433bb2:	mov    QWORD PTR [rdx+0x28],rcx
  433bb6:	mov    BYTE PTR [rax],0x2c
  433bb9:	mov    rax,QWORD PTR [rbp-0x18]
  433bbd:	movzx  eax,BYTE PTR [rax+0x31]
  433bc1:	test   al,al
  433bc3:	je     433bea <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c6>
  433bc5:	mov    rax,QWORD PTR [rbp-0x18]
  433bc9:	mov    rax,QWORD PTR [rax+0x28]
  433bcd:	lea    rcx,[rax+0x1]
  433bd1:	mov    rdx,QWORD PTR [rbp-0x18]
  433bd5:	mov    QWORD PTR [rdx+0x28],rcx
  433bd9:	mov    BYTE PTR [rax],0xa
  433bdc:	mov    rax,QWORD PTR [rbp-0x18]
  433be0:	mov    rdi,rax
  433be3:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433be8:	jmp    433bf6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d2>
  433bea:	mov    rax,QWORD PTR [rbp-0x18]
  433bee:	mov    rdi,rax
  433bf1:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433bf6:	mov    rax,QWORD PTR [rbp-0x8]
  433bfa:	mov    rdi,rax
  433bfd:	call   42a06b <flatcc_json_parser_struct_as_root@@Base+0x336>
  433c02:	movzx  ecx,al
  433c05:	mov    rdx,QWORD PTR [rbp-0x18]
  433c09:	mov    rax,QWORD PTR [rbp-0x38]
  433c0d:	mov    esi,ecx
  433c0f:	mov    rdi,rdx
  433c12:	call   rax
  433c14:	mov    rax,QWORD PTR [rbp-0x8]
  433c18:	inc    rax
  433c1b:	mov    QWORD PTR [rbp-0x8],rax
  433c1f:	mov    eax,DWORD PTR [rbp-0xc]
  433c22:	lea    edx,[rax-0x1]
  433c25:	mov    DWORD PTR [rbp-0xc],edx
  433c28:	test   eax,eax
  433c2a:	jne    433ba2 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17e>
  433c30:	mov    rax,QWORD PTR [rbp-0x18]
  433c34:	movzx  eax,BYTE PTR [rax+0x31]
  433c38:	test   al,al
  433c3a:	je     433c70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
  433c3c:	mov    rax,QWORD PTR [rbp-0x18]
  433c40:	mov    rax,QWORD PTR [rax+0x28]
  433c44:	lea    rcx,[rax+0x1]
  433c48:	mov    rdx,QWORD PTR [rbp-0x18]
  433c4c:	mov    QWORD PTR [rdx+0x28],rcx
  433c50:	mov    BYTE PTR [rax],0xa
  433c53:	mov    rax,QWORD PTR [rbp-0x18]
  433c57:	mov    eax,DWORD PTR [rax+0x38]
  433c5a:	lea    edx,[rax-0x1]
  433c5d:	mov    rax,QWORD PTR [rbp-0x18]
  433c61:	mov    DWORD PTR [rax+0x38],edx
  433c64:	mov    rax,QWORD PTR [rbp-0x18]
  433c68:	mov    rdi,rax
  433c6b:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433c70:	mov    rax,QWORD PTR [rbp-0x18]
  433c74:	mov    rax,QWORD PTR [rax+0x28]
  433c78:	lea    rcx,[rax+0x1]
  433c7c:	mov    rdx,QWORD PTR [rbp-0x18]
  433c80:	mov    QWORD PTR [rdx+0x28],rcx
  433c84:	mov    BYTE PTR [rax],0x5d
  433c87:	leave  
  433c88:	ret    

0000000000433c89 <flatcc_json_printer_struct_vector_field@@Base>:
  433c89:	endbr64 
  433c8d:	push   rbp
  433c8e:	mov    rbp,rsp
  433c91:	sub    rsp,0x40
  433c95:	mov    QWORD PTR [rbp-0x18],rdi
  433c99:	mov    QWORD PTR [rbp-0x20],rsi
  433c9d:	mov    DWORD PTR [rbp-0x24],edx
  433ca0:	mov    QWORD PTR [rbp-0x30],rcx
  433ca4:	mov    DWORD PTR [rbp-0x28],r8d
  433ca8:	mov    QWORD PTR [rbp-0x38],r9
  433cac:	mov    edx,DWORD PTR [rbp-0x24]
  433caf:	mov    rax,QWORD PTR [rbp-0x20]
  433cb3:	mov    esi,edx
  433cb5:	mov    rdi,rax
  433cb8:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  433cbd:	mov    QWORD PTR [rbp-0x8],rax
  433cc1:	cmp    QWORD PTR [rbp-0x8],0x0
  433cc6:	je     433f96 <flatcc_json_printer_struct_vector_field@@Base+0x30d>
  433ccc:	mov    rax,QWORD PTR [rbp-0x20]
  433cd0:	mov    eax,DWORD PTR [rax+0x18]
  433cd3:	lea    ecx,[rax+0x1]
  433cd6:	mov    rdx,QWORD PTR [rbp-0x20]
  433cda:	mov    DWORD PTR [rdx+0x18],ecx
  433cdd:	test   eax,eax
  433cdf:	je     433cf8 <flatcc_json_printer_struct_vector_field@@Base+0x6f>
  433ce1:	mov    rax,QWORD PTR [rbp-0x18]
  433ce5:	mov    rax,QWORD PTR [rax+0x28]
  433ce9:	lea    rcx,[rax+0x1]
  433ced:	mov    rdx,QWORD PTR [rbp-0x18]
  433cf1:	mov    QWORD PTR [rdx+0x28],rcx
  433cf5:	mov    BYTE PTR [rax],0x2c
  433cf8:	mov    rax,QWORD PTR [rbp-0x8]
  433cfc:	mov    rdi,rax
  433cff:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  433d04:	mov    QWORD PTR [rbp-0x8],rax
  433d08:	mov    rax,QWORD PTR [rbp-0x8]
  433d0c:	mov    rdi,rax
  433d0f:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433d14:	mov    DWORD PTR [rbp-0xc],eax
  433d17:	add    QWORD PTR [rbp-0x8],0x4
  433d1c:	mov    eax,DWORD PTR [rbp-0x28]
  433d1f:	movsxd rdx,eax
  433d22:	mov    rcx,QWORD PTR [rbp-0x30]
  433d26:	mov    rax,QWORD PTR [rbp-0x18]
  433d2a:	mov    rsi,rcx
  433d2d:	mov    rdi,rax
  433d30:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  433d35:	mov    rax,QWORD PTR [rbp-0x18]
  433d39:	mov    eax,DWORD PTR [rax+0x38]
  433d3c:	lea    edx,[rax+0x1]
  433d3f:	mov    rax,QWORD PTR [rbp-0x18]
  433d43:	mov    DWORD PTR [rax+0x38],edx
  433d46:	mov    rax,QWORD PTR [rbp-0x18]
  433d4a:	mov    rax,QWORD PTR [rax+0x28]
  433d4e:	lea    rcx,[rax+0x1]
  433d52:	mov    rdx,QWORD PTR [rbp-0x18]
  433d56:	mov    QWORD PTR [rdx+0x28],rcx
  433d5a:	mov    BYTE PTR [rax],0x5b
  433d5d:	cmp    DWORD PTR [rbp-0xc],0x0
  433d61:	je     433f2e <flatcc_json_printer_struct_vector_field@@Base+0x2a5>
  433d67:	mov    rax,QWORD PTR [rbp-0x18]
  433d6b:	movzx  eax,BYTE PTR [rax+0x31]
  433d6f:	test   al,al
  433d71:	je     433d98 <flatcc_json_printer_struct_vector_field@@Base+0x10f>
  433d73:	mov    rax,QWORD PTR [rbp-0x18]
  433d77:	mov    rax,QWORD PTR [rax+0x28]
  433d7b:	lea    rcx,[rax+0x1]
  433d7f:	mov    rdx,QWORD PTR [rbp-0x18]
  433d83:	mov    QWORD PTR [rdx+0x28],rcx
  433d87:	mov    BYTE PTR [rax],0xa
  433d8a:	mov    rax,QWORD PTR [rbp-0x18]
  433d8e:	mov    rdi,rax
  433d91:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433d96:	jmp    433da4 <flatcc_json_printer_struct_vector_field@@Base+0x11b>
  433d98:	mov    rax,QWORD PTR [rbp-0x18]
  433d9c:	mov    rdi,rax
  433d9f:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433da4:	mov    rax,QWORD PTR [rbp-0x18]
  433da8:	mov    eax,DWORD PTR [rax+0x38]
  433dab:	lea    edx,[rax+0x1]
  433dae:	mov    rax,QWORD PTR [rbp-0x18]
  433db2:	mov    DWORD PTR [rax+0x38],edx
  433db5:	mov    rax,QWORD PTR [rbp-0x18]
  433db9:	mov    rax,QWORD PTR [rax+0x28]
  433dbd:	lea    rcx,[rax+0x1]
  433dc1:	mov    rdx,QWORD PTR [rbp-0x18]
  433dc5:	mov    QWORD PTR [rdx+0x28],rcx
  433dc9:	mov    BYTE PTR [rax],0x7b
  433dcc:	mov    rcx,QWORD PTR [rbp-0x8]
  433dd0:	mov    rdx,QWORD PTR [rbp-0x18]
  433dd4:	mov    rax,QWORD PTR [rbp+0x10]
  433dd8:	mov    rsi,rcx
  433ddb:	mov    rdi,rdx
  433dde:	call   rax
  433de0:	mov    rax,QWORD PTR [rbp-0x18]
  433de4:	movzx  eax,BYTE PTR [rax+0x31]
  433de8:	test   al,al
  433dea:	je     433e20 <flatcc_json_printer_struct_vector_field@@Base+0x197>
  433dec:	mov    rax,QWORD PTR [rbp-0x18]
  433df0:	mov    rax,QWORD PTR [rax+0x28]
  433df4:	lea    rcx,[rax+0x1]
  433df8:	mov    rdx,QWORD PTR [rbp-0x18]
  433dfc:	mov    QWORD PTR [rdx+0x28],rcx
  433e00:	mov    BYTE PTR [rax],0xa
  433e03:	mov    rax,QWORD PTR [rbp-0x18]
  433e07:	mov    eax,DWORD PTR [rax+0x38]
  433e0a:	lea    edx,[rax-0x1]
  433e0d:	mov    rax,QWORD PTR [rbp-0x18]
  433e11:	mov    DWORD PTR [rax+0x38],edx
  433e14:	mov    rax,QWORD PTR [rbp-0x18]
  433e18:	mov    rdi,rax
  433e1b:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433e20:	mov    rax,QWORD PTR [rbp-0x18]
  433e24:	mov    rax,QWORD PTR [rax+0x28]
  433e28:	lea    rcx,[rax+0x1]
  433e2c:	mov    rdx,QWORD PTR [rbp-0x18]
  433e30:	mov    QWORD PTR [rdx+0x28],rcx
  433e34:	mov    BYTE PTR [rax],0x7d
  433e37:	dec    DWORD PTR [rbp-0xc]
  433e3a:	jmp    433f2e <flatcc_json_printer_struct_vector_field@@Base+0x2a5>
  433e3f:	mov    rax,QWORD PTR [rbp-0x38]
  433e43:	add    QWORD PTR [rbp-0x8],rax
  433e47:	mov    rax,QWORD PTR [rbp-0x18]
  433e4b:	mov    rax,QWORD PTR [rax+0x28]
  433e4f:	lea    rcx,[rax+0x1]
  433e53:	mov    rdx,QWORD PTR [rbp-0x18]
  433e57:	mov    QWORD PTR [rdx+0x28],rcx
  433e5b:	mov    BYTE PTR [rax],0x2c
  433e5e:	mov    rax,QWORD PTR [rbp-0x18]
  433e62:	movzx  eax,BYTE PTR [rax+0x31]
  433e66:	test   al,al
  433e68:	je     433e8f <flatcc_json_printer_struct_vector_field@@Base+0x206>
  433e6a:	mov    rax,QWORD PTR [rbp-0x18]
  433e6e:	mov    rax,QWORD PTR [rax+0x28]
  433e72:	lea    rcx,[rax+0x1]
  433e76:	mov    rdx,QWORD PTR [rbp-0x18]
  433e7a:	mov    QWORD PTR [rdx+0x28],rcx
  433e7e:	mov    BYTE PTR [rax],0xa
  433e81:	mov    rax,QWORD PTR [rbp-0x18]
  433e85:	mov    rdi,rax
  433e88:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433e8d:	jmp    433e9b <flatcc_json_printer_struct_vector_field@@Base+0x212>
  433e8f:	mov    rax,QWORD PTR [rbp-0x18]
  433e93:	mov    rdi,rax
  433e96:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433e9b:	mov    rax,QWORD PTR [rbp-0x18]
  433e9f:	mov    eax,DWORD PTR [rax+0x38]
  433ea2:	lea    edx,[rax+0x1]
  433ea5:	mov    rax,QWORD PTR [rbp-0x18]
  433ea9:	mov    DWORD PTR [rax+0x38],edx
  433eac:	mov    rax,QWORD PTR [rbp-0x18]
  433eb0:	mov    rax,QWORD PTR [rax+0x28]
  433eb4:	lea    rcx,[rax+0x1]
  433eb8:	mov    rdx,QWORD PTR [rbp-0x18]
  433ebc:	mov    QWORD PTR [rdx+0x28],rcx
  433ec0:	mov    BYTE PTR [rax],0x7b
  433ec3:	mov    rcx,QWORD PTR [rbp-0x8]
  433ec7:	mov    rdx,QWORD PTR [rbp-0x18]
  433ecb:	mov    rax,QWORD PTR [rbp+0x10]
  433ecf:	mov    rsi,rcx
  433ed2:	mov    rdi,rdx
  433ed5:	call   rax
  433ed7:	mov    rax,QWORD PTR [rbp-0x18]
  433edb:	movzx  eax,BYTE PTR [rax+0x31]
  433edf:	test   al,al
  433ee1:	je     433f17 <flatcc_json_printer_struct_vector_field@@Base+0x28e>
  433ee3:	mov    rax,QWORD PTR [rbp-0x18]
  433ee7:	mov    rax,QWORD PTR [rax+0x28]
  433eeb:	lea    rcx,[rax+0x1]
  433eef:	mov    rdx,QWORD PTR [rbp-0x18]
  433ef3:	mov    QWORD PTR [rdx+0x28],rcx
  433ef7:	mov    BYTE PTR [rax],0xa
  433efa:	mov    rax,QWORD PTR [rbp-0x18]
  433efe:	mov    eax,DWORD PTR [rax+0x38]
  433f01:	lea    edx,[rax-0x1]
  433f04:	mov    rax,QWORD PTR [rbp-0x18]
  433f08:	mov    DWORD PTR [rax+0x38],edx
  433f0b:	mov    rax,QWORD PTR [rbp-0x18]
  433f0f:	mov    rdi,rax
  433f12:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433f17:	mov    rax,QWORD PTR [rbp-0x18]
  433f1b:	mov    rax,QWORD PTR [rax+0x28]
  433f1f:	lea    rcx,[rax+0x1]
  433f23:	mov    rdx,QWORD PTR [rbp-0x18]
  433f27:	mov    QWORD PTR [rdx+0x28],rcx
  433f2b:	mov    BYTE PTR [rax],0x7d
  433f2e:	mov    eax,DWORD PTR [rbp-0xc]
  433f31:	lea    edx,[rax-0x1]
  433f34:	mov    DWORD PTR [rbp-0xc],edx
  433f37:	test   eax,eax
  433f39:	jne    433e3f <flatcc_json_printer_struct_vector_field@@Base+0x1b6>
  433f3f:	mov    rax,QWORD PTR [rbp-0x18]
  433f43:	movzx  eax,BYTE PTR [rax+0x31]
  433f47:	test   al,al
  433f49:	je     433f7f <flatcc_json_printer_struct_vector_field@@Base+0x2f6>
  433f4b:	mov    rax,QWORD PTR [rbp-0x18]
  433f4f:	mov    rax,QWORD PTR [rax+0x28]
  433f53:	lea    rcx,[rax+0x1]
  433f57:	mov    rdx,QWORD PTR [rbp-0x18]
  433f5b:	mov    QWORD PTR [rdx+0x28],rcx
  433f5f:	mov    BYTE PTR [rax],0xa
  433f62:	mov    rax,QWORD PTR [rbp-0x18]
  433f66:	mov    eax,DWORD PTR [rax+0x38]
  433f69:	lea    edx,[rax-0x1]
  433f6c:	mov    rax,QWORD PTR [rbp-0x18]
  433f70:	mov    DWORD PTR [rax+0x38],edx
  433f73:	mov    rax,QWORD PTR [rbp-0x18]
  433f77:	mov    rdi,rax
  433f7a:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433f7f:	mov    rax,QWORD PTR [rbp-0x18]
  433f83:	mov    rax,QWORD PTR [rax+0x28]
  433f87:	lea    rcx,[rax+0x1]
  433f8b:	mov    rdx,QWORD PTR [rbp-0x18]
  433f8f:	mov    QWORD PTR [rdx+0x28],rcx
  433f93:	mov    BYTE PTR [rax],0x5d
  433f96:	nop
  433f97:	leave  
  433f98:	ret    

0000000000433f99 <flatcc_json_printer_string_vector_field@@Base>:
  433f99:	endbr64 
  433f9d:	push   rbp
  433f9e:	mov    rbp,rsp
  433fa1:	sub    rsp,0x30
  433fa5:	mov    QWORD PTR [rbp-0x18],rdi
  433fa9:	mov    QWORD PTR [rbp-0x20],rsi
  433fad:	mov    DWORD PTR [rbp-0x24],edx
  433fb0:	mov    QWORD PTR [rbp-0x30],rcx
  433fb4:	mov    DWORD PTR [rbp-0x28],r8d
  433fb8:	mov    edx,DWORD PTR [rbp-0x24]
  433fbb:	mov    rax,QWORD PTR [rbp-0x20]
  433fbf:	mov    esi,edx
  433fc1:	mov    rdi,rax
  433fc4:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  433fc9:	mov    QWORD PTR [rbp-0x8],rax
  433fcd:	cmp    QWORD PTR [rbp-0x8],0x0
  433fd2:	je     4341b2 <flatcc_json_printer_string_vector_field@@Base+0x219>
  433fd8:	mov    rax,QWORD PTR [rbp-0x20]
  433fdc:	mov    eax,DWORD PTR [rax+0x18]
  433fdf:	lea    ecx,[rax+0x1]
  433fe2:	mov    rdx,QWORD PTR [rbp-0x20]
  433fe6:	mov    DWORD PTR [rdx+0x18],ecx
  433fe9:	test   eax,eax
  433feb:	je     434004 <flatcc_json_printer_string_vector_field@@Base+0x6b>
  433fed:	mov    rax,QWORD PTR [rbp-0x18]
  433ff1:	mov    rax,QWORD PTR [rax+0x28]
  433ff5:	lea    rcx,[rax+0x1]
  433ff9:	mov    rdx,QWORD PTR [rbp-0x18]
  433ffd:	mov    QWORD PTR [rdx+0x28],rcx
  434001:	mov    BYTE PTR [rax],0x2c
  434004:	mov    rax,QWORD PTR [rbp-0x8]
  434008:	mov    rdi,rax
  43400b:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434010:	mov    QWORD PTR [rbp-0x8],rax
  434014:	mov    rax,QWORD PTR [rbp-0x8]
  434018:	mov    rdi,rax
  43401b:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  434020:	mov    DWORD PTR [rbp-0xc],eax
  434023:	add    QWORD PTR [rbp-0x8],0x4
  434028:	mov    eax,DWORD PTR [rbp-0x28]
  43402b:	movsxd rdx,eax
  43402e:	mov    rcx,QWORD PTR [rbp-0x30]
  434032:	mov    rax,QWORD PTR [rbp-0x18]
  434036:	mov    rsi,rcx
  434039:	mov    rdi,rax
  43403c:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  434041:	mov    rax,QWORD PTR [rbp-0x18]
  434045:	mov    eax,DWORD PTR [rax+0x38]
  434048:	lea    edx,[rax+0x1]
  43404b:	mov    rax,QWORD PTR [rbp-0x18]
  43404f:	mov    DWORD PTR [rax+0x38],edx
  434052:	mov    rax,QWORD PTR [rbp-0x18]
  434056:	mov    rax,QWORD PTR [rax+0x28]
  43405a:	lea    rcx,[rax+0x1]
  43405e:	mov    rdx,QWORD PTR [rbp-0x18]
  434062:	mov    QWORD PTR [rdx+0x28],rcx
  434066:	mov    BYTE PTR [rax],0x5b
  434069:	cmp    DWORD PTR [rbp-0xc],0x0
  43406d:	je     43414a <flatcc_json_printer_string_vector_field@@Base+0x1b1>
  434073:	mov    rax,QWORD PTR [rbp-0x18]
  434077:	movzx  eax,BYTE PTR [rax+0x31]
  43407b:	test   al,al
  43407d:	je     4340a4 <flatcc_json_printer_string_vector_field@@Base+0x10b>
  43407f:	mov    rax,QWORD PTR [rbp-0x18]
  434083:	mov    rax,QWORD PTR [rax+0x28]
  434087:	lea    rcx,[rax+0x1]
  43408b:	mov    rdx,QWORD PTR [rbp-0x18]
  43408f:	mov    QWORD PTR [rdx+0x28],rcx
  434093:	mov    BYTE PTR [rax],0xa
  434096:	mov    rax,QWORD PTR [rbp-0x18]
  43409a:	mov    rdi,rax
  43409d:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4340a2:	jmp    4340b0 <flatcc_json_printer_string_vector_field@@Base+0x117>
  4340a4:	mov    rax,QWORD PTR [rbp-0x18]
  4340a8:	mov    rdi,rax
  4340ab:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4340b0:	mov    rax,QWORD PTR [rbp-0x8]
  4340b4:	mov    rdi,rax
  4340b7:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4340bc:	mov    rdx,rax
  4340bf:	mov    rax,QWORD PTR [rbp-0x18]
  4340c3:	mov    rsi,rdx
  4340c6:	mov    rdi,rax
  4340c9:	call   42e1be <flatcc_json_printer_enum_flag@@Base+0x5e>
  4340ce:	dec    DWORD PTR [rbp-0xc]
  4340d1:	jmp    43414a <flatcc_json_printer_string_vector_field@@Base+0x1b1>
  4340d3:	add    QWORD PTR [rbp-0x8],0x4
  4340d8:	mov    rax,QWORD PTR [rbp-0x18]
  4340dc:	mov    rax,QWORD PTR [rax+0x28]
  4340e0:	lea    rcx,[rax+0x1]
  4340e4:	mov    rdx,QWORD PTR [rbp-0x18]
  4340e8:	mov    QWORD PTR [rdx+0x28],rcx
  4340ec:	mov    BYTE PTR [rax],0x2c
  4340ef:	mov    rax,QWORD PTR [rbp-0x18]
  4340f3:	movzx  eax,BYTE PTR [rax+0x31]
  4340f7:	test   al,al
  4340f9:	je     434120 <flatcc_json_printer_string_vector_field@@Base+0x187>
  4340fb:	mov    rax,QWORD PTR [rbp-0x18]
  4340ff:	mov    rax,QWORD PTR [rax+0x28]
  434103:	lea    rcx,[rax+0x1]
  434107:	mov    rdx,QWORD PTR [rbp-0x18]
  43410b:	mov    QWORD PTR [rdx+0x28],rcx
  43410f:	mov    BYTE PTR [rax],0xa
  434112:	mov    rax,QWORD PTR [rbp-0x18]
  434116:	mov    rdi,rax
  434119:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43411e:	jmp    43412c <flatcc_json_printer_string_vector_field@@Base+0x193>
  434120:	mov    rax,QWORD PTR [rbp-0x18]
  434124:	mov    rdi,rax
  434127:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43412c:	mov    rax,QWORD PTR [rbp-0x8]
  434130:	mov    rdi,rax
  434133:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434138:	mov    rdx,rax
  43413b:	mov    rax,QWORD PTR [rbp-0x18]
  43413f:	mov    rsi,rdx
  434142:	mov    rdi,rax
  434145:	call   42e1be <flatcc_json_printer_enum_flag@@Base+0x5e>
  43414a:	mov    eax,DWORD PTR [rbp-0xc]
  43414d:	lea    edx,[rax-0x1]
  434150:	mov    DWORD PTR [rbp-0xc],edx
  434153:	test   eax,eax
  434155:	jne    4340d3 <flatcc_json_printer_string_vector_field@@Base+0x13a>
  43415b:	mov    rax,QWORD PTR [rbp-0x18]
  43415f:	movzx  eax,BYTE PTR [rax+0x31]
  434163:	test   al,al
  434165:	je     43419b <flatcc_json_printer_string_vector_field@@Base+0x202>
  434167:	mov    rax,QWORD PTR [rbp-0x18]
  43416b:	mov    rax,QWORD PTR [rax+0x28]
  43416f:	lea    rcx,[rax+0x1]
  434173:	mov    rdx,QWORD PTR [rbp-0x18]
  434177:	mov    QWORD PTR [rdx+0x28],rcx
  43417b:	mov    BYTE PTR [rax],0xa
  43417e:	mov    rax,QWORD PTR [rbp-0x18]
  434182:	mov    eax,DWORD PTR [rax+0x38]
  434185:	lea    edx,[rax-0x1]
  434188:	mov    rax,QWORD PTR [rbp-0x18]
  43418c:	mov    DWORD PTR [rax+0x38],edx
  43418f:	mov    rax,QWORD PTR [rbp-0x18]
  434193:	mov    rdi,rax
  434196:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43419b:	mov    rax,QWORD PTR [rbp-0x18]
  43419f:	mov    rax,QWORD PTR [rax+0x28]
  4341a3:	lea    rcx,[rax+0x1]
  4341a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4341ab:	mov    QWORD PTR [rdx+0x28],rcx
  4341af:	mov    BYTE PTR [rax],0x5d
  4341b2:	nop
  4341b3:	leave  
  4341b4:	ret    

00000000004341b5 <flatcc_json_printer_table_vector_field@@Base>:
  4341b5:	endbr64 
  4341b9:	push   rbp
  4341ba:	mov    rbp,rsp
  4341bd:	push   rbx
  4341be:	sub    rsp,0x48
  4341c2:	mov    QWORD PTR [rbp-0x28],rdi
  4341c6:	mov    QWORD PTR [rbp-0x30],rsi
  4341ca:	mov    DWORD PTR [rbp-0x34],edx
  4341cd:	mov    QWORD PTR [rbp-0x40],rcx
  4341d1:	mov    DWORD PTR [rbp-0x38],r8d
  4341d5:	mov    QWORD PTR [rbp-0x48],r9
  4341d9:	mov    edx,DWORD PTR [rbp-0x34]
  4341dc:	mov    rax,QWORD PTR [rbp-0x30]
  4341e0:	mov    esi,edx
  4341e2:	mov    rdi,rax
  4341e5:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4341ea:	mov    QWORD PTR [rbp-0x18],rax
  4341ee:	cmp    QWORD PTR [rbp-0x18],0x0
  4341f3:	je     43436b <flatcc_json_printer_table_vector_field@@Base+0x1b6>
  4341f9:	mov    rax,QWORD PTR [rbp-0x30]
  4341fd:	mov    eax,DWORD PTR [rax+0x18]
  434200:	lea    ecx,[rax+0x1]
  434203:	mov    rdx,QWORD PTR [rbp-0x30]
  434207:	mov    DWORD PTR [rdx+0x18],ecx
  43420a:	test   eax,eax
  43420c:	je     434225 <flatcc_json_printer_table_vector_field@@Base+0x70>
  43420e:	mov    rax,QWORD PTR [rbp-0x28]
  434212:	mov    rax,QWORD PTR [rax+0x28]
  434216:	lea    rcx,[rax+0x1]
  43421a:	mov    rdx,QWORD PTR [rbp-0x28]
  43421e:	mov    QWORD PTR [rdx+0x28],rcx
  434222:	mov    BYTE PTR [rax],0x2c
  434225:	mov    rax,QWORD PTR [rbp-0x18]
  434229:	mov    rdi,rax
  43422c:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434231:	mov    QWORD PTR [rbp-0x18],rax
  434235:	mov    rax,QWORD PTR [rbp-0x18]
  434239:	mov    rdi,rax
  43423c:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  434241:	mov    DWORD PTR [rbp-0x1c],eax
  434244:	add    QWORD PTR [rbp-0x18],0x4
  434249:	mov    eax,DWORD PTR [rbp-0x38]
  43424c:	movsxd rdx,eax
  43424f:	mov    rcx,QWORD PTR [rbp-0x40]
  434253:	mov    rax,QWORD PTR [rbp-0x28]
  434257:	mov    rsi,rcx
  43425a:	mov    rdi,rax
  43425d:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  434262:	mov    rax,QWORD PTR [rbp-0x28]
  434266:	mov    eax,DWORD PTR [rax+0x38]
  434269:	lea    edx,[rax+0x1]
  43426c:	mov    rax,QWORD PTR [rbp-0x28]
  434270:	mov    DWORD PTR [rax+0x38],edx
  434273:	mov    rax,QWORD PTR [rbp-0x28]
  434277:	mov    rax,QWORD PTR [rax+0x28]
  43427b:	lea    rcx,[rax+0x1]
  43427f:	mov    rdx,QWORD PTR [rbp-0x28]
  434283:	mov    QWORD PTR [rdx+0x28],rcx
  434287:	mov    BYTE PTR [rax],0x5b
  43428a:	cmp    DWORD PTR [rbp-0x1c],0x0
  43428e:	je     434307 <flatcc_json_printer_table_vector_field@@Base+0x152>
  434290:	mov    rax,QWORD PTR [rbp-0x30]
  434294:	mov    ebx,DWORD PTR [rax+0x14]
  434297:	mov    rax,QWORD PTR [rbp-0x18]
  43429b:	mov    rdi,rax
  43429e:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4342a3:	mov    rsi,rax
  4342a6:	mov    rdx,QWORD PTR [rbp-0x48]
  4342aa:	mov    rax,QWORD PTR [rbp-0x28]
  4342ae:	mov    rcx,rdx
  4342b1:	mov    edx,ebx
  4342b3:	mov    rdi,rax
  4342b6:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  4342bb:	dec    DWORD PTR [rbp-0x1c]
  4342be:	jmp    434307 <flatcc_json_printer_table_vector_field@@Base+0x152>
  4342c0:	add    QWORD PTR [rbp-0x18],0x4
  4342c5:	mov    rax,QWORD PTR [rbp-0x28]
  4342c9:	mov    rax,QWORD PTR [rax+0x28]
  4342cd:	lea    rcx,[rax+0x1]
  4342d1:	mov    rdx,QWORD PTR [rbp-0x28]
  4342d5:	mov    QWORD PTR [rdx+0x28],rcx
  4342d9:	mov    BYTE PTR [rax],0x2c
  4342dc:	mov    rax,QWORD PTR [rbp-0x30]
  4342e0:	mov    ebx,DWORD PTR [rax+0x14]
  4342e3:	mov    rax,QWORD PTR [rbp-0x18]
  4342e7:	mov    rdi,rax
  4342ea:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4342ef:	mov    rsi,rax
  4342f2:	mov    rdx,QWORD PTR [rbp-0x48]
  4342f6:	mov    rax,QWORD PTR [rbp-0x28]
  4342fa:	mov    rcx,rdx
  4342fd:	mov    edx,ebx
  4342ff:	mov    rdi,rax
  434302:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  434307:	mov    eax,DWORD PTR [rbp-0x1c]
  43430a:	lea    edx,[rax-0x1]
  43430d:	mov    DWORD PTR [rbp-0x1c],edx
  434310:	test   eax,eax
  434312:	jne    4342c0 <flatcc_json_printer_table_vector_field@@Base+0x10b>
  434314:	mov    rax,QWORD PTR [rbp-0x28]
  434318:	movzx  eax,BYTE PTR [rax+0x31]
  43431c:	test   al,al
  43431e:	je     434354 <flatcc_json_printer_table_vector_field@@Base+0x19f>
  434320:	mov    rax,QWORD PTR [rbp-0x28]
  434324:	mov    rax,QWORD PTR [rax+0x28]
  434328:	lea    rcx,[rax+0x1]
  43432c:	mov    rdx,QWORD PTR [rbp-0x28]
  434330:	mov    QWORD PTR [rdx+0x28],rcx
  434334:	mov    BYTE PTR [rax],0xa
  434337:	mov    rax,QWORD PTR [rbp-0x28]
  43433b:	mov    eax,DWORD PTR [rax+0x38]
  43433e:	lea    edx,[rax-0x1]
  434341:	mov    rax,QWORD PTR [rbp-0x28]
  434345:	mov    DWORD PTR [rax+0x38],edx
  434348:	mov    rax,QWORD PTR [rbp-0x28]
  43434c:	mov    rdi,rax
  43434f:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434354:	mov    rax,QWORD PTR [rbp-0x28]
  434358:	mov    rax,QWORD PTR [rax+0x28]
  43435c:	lea    rcx,[rax+0x1]
  434360:	mov    rdx,QWORD PTR [rbp-0x28]
  434364:	mov    QWORD PTR [rdx+0x28],rcx
  434368:	mov    BYTE PTR [rax],0x5d
  43436b:	nop
  43436c:	add    rsp,0x48
  434370:	pop    rbx
  434371:	pop    rbp
  434372:	ret    

0000000000434373 <flatcc_json_printer_union_vector_field@@Base>:
  434373:	endbr64 
  434377:	push   rbp
  434378:	mov    rbp,rsp
  43437b:	sub    rsp,0xe0
  434382:	mov    QWORD PTR [rbp-0xb8],rdi
  434389:	mov    QWORD PTR [rbp-0xc0],rsi
  434390:	mov    DWORD PTR [rbp-0xc4],edx
  434396:	mov    QWORD PTR [rbp-0xd0],rcx
  43439d:	mov    DWORD PTR [rbp-0xc8],r8d
  4343a4:	mov    QWORD PTR [rbp-0xd8],r9
  4343ab:	mov    rax,QWORD PTR [rbp+0x10]
  4343af:	mov    QWORD PTR [rbp-0xe0],rax
  4343b6:	mov    rax,QWORD PTR fs:0x28
  4343bf:	mov    QWORD PTR [rbp-0x8],rax
  4343c3:	xor    eax,eax
  4343c5:	mov    eax,DWORD PTR [rbp-0xc4]
  4343cb:	lea    edx,[rax-0x1]
  4343ce:	mov    rax,QWORD PTR [rbp-0xc0]
  4343d5:	mov    esi,edx
  4343d7:	mov    rdi,rax
  4343da:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4343df:	mov    QWORD PTR [rbp-0x98],rax
  4343e6:	mov    edx,DWORD PTR [rbp-0xc4]
  4343ec:	mov    rax,QWORD PTR [rbp-0xc0]
  4343f3:	mov    esi,edx
  4343f5:	mov    rdi,rax
  4343f8:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4343fd:	mov    QWORD PTR [rbp-0xa8],rax
  434404:	mov    rax,QWORD PTR [rbp-0xc0]
  43440b:	mov    eax,DWORD PTR [rax+0x14]
  43440e:	mov    DWORD PTR [rbp-0x88],eax
  434414:	cmp    DWORD PTR [rbp-0xc8],0x64
  43441b:	jle    434450 <flatcc_json_printer_union_vector_field@@Base+0xdd>
  43441d:	mov    rax,QWORD PTR [rbp-0xb8]
  434424:	mov    esi,0x1
  434429:	mov    rdi,rax
  43442c:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  434431:	lea    rcx,[rip+0x8668]        # 43caa0 <flatcc_builder_padding_base@@Base+0x3840>
  434438:	mov    edx,0x34b
  43443d:	lea    rsi,[rip+0x8044]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  434444:	lea    rdi,[rip+0x80a8]        # 43c4f3 <flatcc_builder_padding_base@@Base+0x3293>
  43444b:	call   4061b0 <__assert_fail@plt>
  434450:	mov    eax,DWORD PTR [rbp-0xc8]
  434456:	movsxd rdx,eax
  434459:	mov    rcx,QWORD PTR [rbp-0xd0]
  434460:	lea    rax,[rbp-0x80]
  434464:	mov    rsi,rcx
  434467:	mov    rdi,rax
  43446a:	call   406220 <memcpy@plt>
  43446f:	mov    eax,DWORD PTR [rbp-0xc8]
  434475:	cdqe   
  434477:	lea    rdx,[rbp-0x80]
  43447b:	add    rax,rdx
  43447e:	mov    edx,0x5
  434483:	lea    rsi,[rip+0x8084]        # 43c50e <flatcc_builder_padding_base@@Base+0x32ae>
  43448a:	mov    rdi,rax
  43448d:	call   406220 <memcpy@plt>
  434492:	cmp    QWORD PTR [rbp-0xa8],0x0
  43449a:	je     434839 <flatcc_json_printer_union_vector_field@@Base+0x4c6>
  4344a0:	cmp    QWORD PTR [rbp-0x98],0x0
  4344a8:	je     434839 <flatcc_json_printer_union_vector_field@@Base+0x4c6>
  4344ae:	mov    eax,DWORD PTR [rbp-0xc8]
  4344b4:	lea    r8d,[rax+0x5]
  4344b8:	mov    eax,DWORD PTR [rbp-0xc4]
  4344be:	lea    edi,[rax-0x1]
  4344c1:	mov    rcx,QWORD PTR [rbp-0xd8]
  4344c8:	lea    rdx,[rbp-0x80]
  4344cc:	mov    rsi,QWORD PTR [rbp-0xc0]
  4344d3:	mov    rax,QWORD PTR [rbp-0xb8]
  4344da:	mov    r9,rcx
  4344dd:	mov    rcx,rdx
  4344e0:	mov    edx,edi
  4344e2:	mov    rdi,rax
  4344e5:	call   43248b <flatcc_json_printer_utype_enum_vector_field@@Base>
  4344ea:	mov    rax,QWORD PTR [rbp-0xc0]
  4344f1:	mov    eax,DWORD PTR [rax+0x18]
  4344f4:	lea    ecx,[rax+0x1]
  4344f7:	mov    rdx,QWORD PTR [rbp-0xc0]
  4344fe:	mov    DWORD PTR [rdx+0x18],ecx
  434501:	test   eax,eax
  434503:	je     434522 <flatcc_json_printer_union_vector_field@@Base+0x1af>
  434505:	mov    rax,QWORD PTR [rbp-0xb8]
  43450c:	mov    rax,QWORD PTR [rax+0x28]
  434510:	lea    rcx,[rax+0x1]
  434514:	mov    rdx,QWORD PTR [rbp-0xb8]
  43451b:	mov    QWORD PTR [rdx+0x28],rcx
  43451f:	mov    BYTE PTR [rax],0x2c
  434522:	mov    rax,QWORD PTR [rbp-0xa8]
  434529:	mov    rdi,rax
  43452c:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434531:	mov    QWORD PTR [rbp-0xa8],rax
  434538:	mov    rax,QWORD PTR [rbp-0x98]
  43453f:	mov    rdi,rax
  434542:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434547:	mov    QWORD PTR [rbp-0x98],rax
  43454e:	mov    rax,QWORD PTR [rbp-0xa8]
  434555:	mov    rdi,rax
  434558:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43455d:	mov    DWORD PTR [rbp-0xac],eax
  434563:	add    QWORD PTR [rbp-0xa8],0x4
  43456b:	add    QWORD PTR [rbp-0x98],0x4
  434573:	mov    rax,QWORD PTR [rbp-0x98]
  43457a:	mov    QWORD PTR [rbp-0xa0],rax
  434581:	mov    eax,DWORD PTR [rbp-0xc8]
  434587:	movsxd rdx,eax
  43458a:	mov    rcx,QWORD PTR [rbp-0xd0]
  434591:	mov    rax,QWORD PTR [rbp-0xb8]
  434598:	mov    rsi,rcx
  43459b:	mov    rdi,rax
  43459e:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4345a3:	mov    rax,QWORD PTR [rbp-0xb8]
  4345aa:	mov    eax,DWORD PTR [rax+0x38]
  4345ad:	lea    edx,[rax+0x1]
  4345b0:	mov    rax,QWORD PTR [rbp-0xb8]
  4345b7:	mov    DWORD PTR [rax+0x38],edx
  4345ba:	mov    rax,QWORD PTR [rbp-0xb8]
  4345c1:	mov    rax,QWORD PTR [rax+0x28]
  4345c5:	lea    rcx,[rax+0x1]
  4345c9:	mov    rdx,QWORD PTR [rbp-0xb8]
  4345d0:	mov    QWORD PTR [rdx+0x28],rcx
  4345d4:	mov    BYTE PTR [rax],0x5b
  4345d7:	cmp    DWORD PTR [rbp-0xac],0x0
  4345de:	je     4347b3 <flatcc_json_printer_union_vector_field@@Base+0x440>
  4345e4:	mov    rax,QWORD PTR [rbp-0xa0]
  4345eb:	mov    rdi,rax
  4345ee:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4345f3:	mov    BYTE PTR [rbp-0xad],al
  4345f9:	cmp    BYTE PTR [rbp-0xad],0x0
  434600:	je     43463c <flatcc_json_printer_union_vector_field@@Base+0x2c9>
  434602:	movzx  eax,BYTE PTR [rbp-0xad]
  434609:	mov    BYTE PTR [rbp-0x84],al
  43460f:	mov    rax,QWORD PTR [rbp-0xa8]
  434616:	mov    QWORD PTR [rbp-0x90],rax
  43461d:	lea    rcx,[rbp-0x90]
  434624:	mov    rdx,QWORD PTR [rbp-0xb8]
  43462b:	mov    rax,QWORD PTR [rbp-0xe0]
  434632:	mov    rsi,rcx
  434635:	mov    rdi,rdx
  434638:	call   rax
  43463a:	jmp    4346b0 <flatcc_json_printer_union_vector_field@@Base+0x33d>
  43463c:	mov    rax,QWORD PTR [rbp-0xb8]
  434643:	mov    rax,QWORD PTR [rax+0x28]
  434647:	lea    rcx,[rax+0x1]
  43464b:	mov    rdx,QWORD PTR [rbp-0xb8]
  434652:	mov    QWORD PTR [rdx+0x28],rcx
  434656:	mov    BYTE PTR [rax],0x6e
  434659:	mov    rax,QWORD PTR [rbp-0xb8]
  434660:	mov    rax,QWORD PTR [rax+0x28]
  434664:	lea    rcx,[rax+0x1]
  434668:	mov    rdx,QWORD PTR [rbp-0xb8]
  43466f:	mov    QWORD PTR [rdx+0x28],rcx
  434673:	mov    BYTE PTR [rax],0x75
  434676:	mov    rax,QWORD PTR [rbp-0xb8]
  43467d:	mov    rax,QWORD PTR [rax+0x28]
  434681:	lea    rcx,[rax+0x1]
  434685:	mov    rdx,QWORD PTR [rbp-0xb8]
  43468c:	mov    QWORD PTR [rdx+0x28],rcx
  434690:	mov    BYTE PTR [rax],0x6c
  434693:	mov    rax,QWORD PTR [rbp-0xb8]
  43469a:	mov    rax,QWORD PTR [rax+0x28]
  43469e:	lea    rcx,[rax+0x1]
  4346a2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4346a9:	mov    QWORD PTR [rdx+0x28],rcx
  4346ad:	mov    BYTE PTR [rax],0x6c
  4346b0:	dec    DWORD PTR [rbp-0xac]
  4346b6:	jmp    4347b3 <flatcc_json_printer_union_vector_field@@Base+0x440>
  4346bb:	add    QWORD PTR [rbp-0xa8],0x4
  4346c3:	inc    QWORD PTR [rbp-0xa0]
  4346ca:	mov    rax,QWORD PTR [rbp-0xa0]
  4346d1:	mov    rdi,rax
  4346d4:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4346d9:	mov    BYTE PTR [rbp-0xad],al
  4346df:	mov    rax,QWORD PTR [rbp-0xb8]
  4346e6:	mov    rax,QWORD PTR [rax+0x28]
  4346ea:	lea    rcx,[rax+0x1]
  4346ee:	mov    rdx,QWORD PTR [rbp-0xb8]
  4346f5:	mov    QWORD PTR [rdx+0x28],rcx
  4346f9:	mov    BYTE PTR [rax],0x2c
  4346fc:	cmp    BYTE PTR [rbp-0xad],0x0
  434703:	je     43473f <flatcc_json_printer_union_vector_field@@Base+0x3cc>
  434705:	movzx  eax,BYTE PTR [rbp-0xad]
  43470c:	mov    BYTE PTR [rbp-0x84],al
  434712:	mov    rax,QWORD PTR [rbp-0xa8]
  434719:	mov    QWORD PTR [rbp-0x90],rax
  434720:	lea    rcx,[rbp-0x90]
  434727:	mov    rdx,QWORD PTR [rbp-0xb8]
  43472e:	mov    rax,QWORD PTR [rbp-0xe0]
  434735:	mov    rsi,rcx
  434738:	mov    rdi,rdx
  43473b:	call   rax
  43473d:	jmp    4347b3 <flatcc_json_printer_union_vector_field@@Base+0x440>
  43473f:	mov    rax,QWORD PTR [rbp-0xb8]
  434746:	mov    rax,QWORD PTR [rax+0x28]
  43474a:	lea    rcx,[rax+0x1]
  43474e:	mov    rdx,QWORD PTR [rbp-0xb8]
  434755:	mov    QWORD PTR [rdx+0x28],rcx
  434759:	mov    BYTE PTR [rax],0x6e
  43475c:	mov    rax,QWORD PTR [rbp-0xb8]
  434763:	mov    rax,QWORD PTR [rax+0x28]
  434767:	lea    rcx,[rax+0x1]
  43476b:	mov    rdx,QWORD PTR [rbp-0xb8]
  434772:	mov    QWORD PTR [rdx+0x28],rcx
  434776:	mov    BYTE PTR [rax],0x75
  434779:	mov    rax,QWORD PTR [rbp-0xb8]
  434780:	mov    rax,QWORD PTR [rax+0x28]
  434784:	lea    rcx,[rax+0x1]
  434788:	mov    rdx,QWORD PTR [rbp-0xb8]
  43478f:	mov    QWORD PTR [rdx+0x28],rcx
  434793:	mov    BYTE PTR [rax],0x6c
  434796:	mov    rax,QWORD PTR [rbp-0xb8]
  43479d:	mov    rax,QWORD PTR [rax+0x28]
  4347a1:	lea    rcx,[rax+0x1]
  4347a5:	mov    rdx,QWORD PTR [rbp-0xb8]
  4347ac:	mov    QWORD PTR [rdx+0x28],rcx
  4347b0:	mov    BYTE PTR [rax],0x6c
  4347b3:	mov    eax,DWORD PTR [rbp-0xac]
  4347b9:	lea    edx,[rax-0x1]
  4347bc:	mov    DWORD PTR [rbp-0xac],edx
  4347c2:	test   eax,eax
  4347c4:	jne    4346bb <flatcc_json_printer_union_vector_field@@Base+0x348>
  4347ca:	mov    rax,QWORD PTR [rbp-0xb8]
  4347d1:	movzx  eax,BYTE PTR [rax+0x31]
  4347d5:	test   al,al
  4347d7:	je     43481c <flatcc_json_printer_union_vector_field@@Base+0x4a9>
  4347d9:	mov    rax,QWORD PTR [rbp-0xb8]
  4347e0:	mov    rax,QWORD PTR [rax+0x28]
  4347e4:	lea    rcx,[rax+0x1]
  4347e8:	mov    rdx,QWORD PTR [rbp-0xb8]
  4347ef:	mov    QWORD PTR [rdx+0x28],rcx
  4347f3:	mov    BYTE PTR [rax],0xa
  4347f6:	mov    rax,QWORD PTR [rbp-0xb8]
  4347fd:	mov    eax,DWORD PTR [rax+0x38]
  434800:	lea    edx,[rax-0x1]
  434803:	mov    rax,QWORD PTR [rbp-0xb8]
  43480a:	mov    DWORD PTR [rax+0x38],edx
  43480d:	mov    rax,QWORD PTR [rbp-0xb8]
  434814:	mov    rdi,rax
  434817:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43481c:	mov    rax,QWORD PTR [rbp-0xb8]
  434823:	mov    rax,QWORD PTR [rax+0x28]
  434827:	lea    rcx,[rax+0x1]
  43482b:	mov    rdx,QWORD PTR [rbp-0xb8]
  434832:	mov    QWORD PTR [rdx+0x28],rcx
  434836:	mov    BYTE PTR [rax],0x5d
  434839:	mov    rax,QWORD PTR [rbp-0x8]
  43483d:	xor    rax,QWORD PTR fs:0x28
  434846:	je     43484d <flatcc_json_printer_union_vector_field@@Base+0x4da>
  434848:	call   4061a0 <__stack_chk_fail@plt>
  43484d:	leave  
  43484e:	ret    

000000000043484f <flatcc_json_printer_table_field@@Base>:
  43484f:	endbr64 
  434853:	push   rbp
  434854:	mov    rbp,rsp
  434857:	push   rbx
  434858:	sub    rsp,0x48
  43485c:	mov    QWORD PTR [rbp-0x28],rdi
  434860:	mov    QWORD PTR [rbp-0x30],rsi
  434864:	mov    DWORD PTR [rbp-0x34],edx
  434867:	mov    QWORD PTR [rbp-0x40],rcx
  43486b:	mov    DWORD PTR [rbp-0x38],r8d
  43486f:	mov    QWORD PTR [rbp-0x48],r9
  434873:	mov    edx,DWORD PTR [rbp-0x34]
  434876:	mov    rax,QWORD PTR [rbp-0x30]
  43487a:	mov    esi,edx
  43487c:	mov    rdi,rax
  43487f:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  434884:	mov    QWORD PTR [rbp-0x18],rax
  434888:	cmp    QWORD PTR [rbp-0x18],0x0
  43488d:	je     4348ff <flatcc_json_printer_table_field@@Base+0xb0>
  43488f:	mov    rax,QWORD PTR [rbp-0x30]
  434893:	mov    eax,DWORD PTR [rax+0x18]
  434896:	lea    ecx,[rax+0x1]
  434899:	mov    rdx,QWORD PTR [rbp-0x30]
  43489d:	mov    DWORD PTR [rdx+0x18],ecx
  4348a0:	test   eax,eax
  4348a2:	je     4348bb <flatcc_json_printer_table_field@@Base+0x6c>
  4348a4:	mov    rax,QWORD PTR [rbp-0x28]
  4348a8:	mov    rax,QWORD PTR [rax+0x28]
  4348ac:	lea    rcx,[rax+0x1]
  4348b0:	mov    rdx,QWORD PTR [rbp-0x28]
  4348b4:	mov    QWORD PTR [rdx+0x28],rcx
  4348b8:	mov    BYTE PTR [rax],0x2c
  4348bb:	mov    eax,DWORD PTR [rbp-0x38]
  4348be:	movsxd rdx,eax
  4348c1:	mov    rcx,QWORD PTR [rbp-0x40]
  4348c5:	mov    rax,QWORD PTR [rbp-0x28]
  4348c9:	mov    rsi,rcx
  4348cc:	mov    rdi,rax
  4348cf:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4348d4:	mov    rax,QWORD PTR [rbp-0x30]
  4348d8:	mov    ebx,DWORD PTR [rax+0x14]
  4348db:	mov    rax,QWORD PTR [rbp-0x18]
  4348df:	mov    rdi,rax
  4348e2:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4348e7:	mov    rsi,rax
  4348ea:	mov    rdx,QWORD PTR [rbp-0x48]
  4348ee:	mov    rax,QWORD PTR [rbp-0x28]
  4348f2:	mov    rcx,rdx
  4348f5:	mov    edx,ebx
  4348f7:	mov    rdi,rax
  4348fa:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  4348ff:	nop
  434900:	add    rsp,0x48
  434904:	pop    rbx
  434905:	pop    rbp
  434906:	ret    

0000000000434907 <flatcc_json_printer_union_field@@Base>:
  434907:	endbr64 
  43490b:	push   rbp
  43490c:	mov    rbp,rsp
  43490f:	sub    rsp,0x70
  434913:	mov    QWORD PTR [rbp-0x48],rdi
  434917:	mov    QWORD PTR [rbp-0x50],rsi
  43491b:	mov    DWORD PTR [rbp-0x54],edx
  43491e:	mov    QWORD PTR [rbp-0x60],rcx
  434922:	mov    DWORD PTR [rbp-0x58],r8d
  434926:	mov    QWORD PTR [rbp-0x68],r9
  43492a:	mov    rax,QWORD PTR [rbp+0x10]
  43492e:	mov    QWORD PTR [rbp-0x70],rax
  434932:	mov    rax,QWORD PTR fs:0x28
  43493b:	mov    QWORD PTR [rbp-0x8],rax
  43493f:	xor    eax,eax
  434941:	mov    eax,DWORD PTR [rbp-0x54]
  434944:	lea    edx,[rax-0x1]
  434947:	mov    rax,QWORD PTR [rbp-0x50]
  43494b:	mov    esi,edx
  43494d:	mov    rdi,rax
  434950:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  434955:	mov    QWORD PTR [rbp-0x30],rax
  434959:	mov    edx,DWORD PTR [rbp-0x54]
  43495c:	mov    rax,QWORD PTR [rbp-0x50]
  434960:	mov    esi,edx
  434962:	mov    rdi,rax
  434965:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  43496a:	mov    QWORD PTR [rbp-0x28],rax
  43496e:	cmp    QWORD PTR [rbp-0x28],0x0
  434973:	je     434bd6 <flatcc_json_printer_union_field@@Base+0x2cf>
  434979:	cmp    QWORD PTR [rbp-0x30],0x0
  43497e:	je     434bd6 <flatcc_json_printer_union_field@@Base+0x2cf>
  434984:	mov    rax,QWORD PTR [rbp-0x30]
  434988:	mov    rdi,rax
  43498b:	call   42a116 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  434990:	mov    BYTE PTR [rbp-0x31],al
  434993:	mov    rax,QWORD PTR [rbp-0x50]
  434997:	mov    eax,DWORD PTR [rax+0x18]
  43499a:	lea    ecx,[rax+0x1]
  43499d:	mov    rdx,QWORD PTR [rbp-0x50]
  4349a1:	mov    DWORD PTR [rdx+0x18],ecx
  4349a4:	test   eax,eax
  4349a6:	je     4349bf <flatcc_json_printer_union_field@@Base+0xb8>
  4349a8:	mov    rax,QWORD PTR [rbp-0x48]
  4349ac:	mov    rax,QWORD PTR [rax+0x28]
  4349b0:	lea    rcx,[rax+0x1]
  4349b4:	mov    rdx,QWORD PTR [rbp-0x48]
  4349b8:	mov    QWORD PTR [rdx+0x28],rcx
  4349bc:	mov    BYTE PTR [rax],0x2c
  4349bf:	mov    rax,QWORD PTR [rbp-0x48]
  4349c3:	movzx  eax,BYTE PTR [rax+0x31]
  4349c7:	test   al,al
  4349c9:	je     4349f0 <flatcc_json_printer_union_field@@Base+0xe9>
  4349cb:	mov    rax,QWORD PTR [rbp-0x48]
  4349cf:	mov    rax,QWORD PTR [rax+0x28]
  4349d3:	lea    rcx,[rax+0x1]
  4349d7:	mov    rdx,QWORD PTR [rbp-0x48]
  4349db:	mov    QWORD PTR [rdx+0x28],rcx
  4349df:	mov    BYTE PTR [rax],0xa
  4349e2:	mov    rax,QWORD PTR [rbp-0x48]
  4349e6:	mov    rdi,rax
  4349e9:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4349ee:	jmp    4349fc <flatcc_json_printer_union_field@@Base+0xf5>
  4349f0:	mov    rax,QWORD PTR [rbp-0x48]
  4349f4:	mov    rdi,rax
  4349f7:	call   42a19c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4349fc:	mov    rax,QWORD PTR [rbp-0x48]
  434a00:	mov    rax,QWORD PTR [rax+0x28]
  434a04:	mov    BYTE PTR [rax],0x22
  434a07:	mov    rax,QWORD PTR [rbp-0x48]
  434a0b:	mov    rdx,QWORD PTR [rax+0x28]
  434a0f:	mov    rax,QWORD PTR [rbp-0x48]
  434a13:	movzx  eax,BYTE PTR [rax+0x32]
  434a17:	test   al,al
  434a19:	sete   al
  434a1c:	movzx  eax,al
  434a1f:	add    rdx,rax
  434a22:	mov    rax,QWORD PTR [rbp-0x48]
  434a26:	mov    QWORD PTR [rax+0x28],rdx
  434a2a:	mov    rax,QWORD PTR [rbp-0x48]
  434a2e:	mov    rdx,QWORD PTR [rax+0x28]
  434a32:	mov    eax,DWORD PTR [rbp-0x58]
  434a35:	cdqe   
  434a37:	add    rdx,rax
  434a3a:	mov    rax,QWORD PTR [rbp-0x48]
  434a3e:	mov    rax,QWORD PTR [rax+0x20]
  434a42:	cmp    rdx,rax
  434a45:	jae    434a7e <flatcc_json_printer_union_field@@Base+0x177>
  434a47:	mov    eax,DWORD PTR [rbp-0x58]
  434a4a:	movsxd rdx,eax
  434a4d:	mov    rax,QWORD PTR [rbp-0x48]
  434a51:	mov    rax,QWORD PTR [rax+0x28]
  434a55:	mov    rcx,QWORD PTR [rbp-0x60]
  434a59:	mov    rsi,rcx
  434a5c:	mov    rdi,rax
  434a5f:	call   406220 <memcpy@plt>
  434a64:	mov    rax,QWORD PTR [rbp-0x48]
  434a68:	mov    rdx,QWORD PTR [rax+0x28]
  434a6c:	mov    eax,DWORD PTR [rbp-0x58]
  434a6f:	cdqe   
  434a71:	add    rdx,rax
  434a74:	mov    rax,QWORD PTR [rbp-0x48]
  434a78:	mov    QWORD PTR [rax+0x28],rdx
  434a7c:	jmp    434a97 <flatcc_json_printer_union_field@@Base+0x190>
  434a7e:	mov    eax,DWORD PTR [rbp-0x58]
  434a81:	movsxd rdx,eax
  434a84:	mov    rcx,QWORD PTR [rbp-0x60]
  434a88:	mov    rax,QWORD PTR [rbp-0x48]
  434a8c:	mov    rsi,rcx
  434a8f:	mov    rdi,rax
  434a92:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  434a97:	mov    rax,QWORD PTR [rbp-0x48]
  434a9b:	mov    edx,0x5
  434aa0:	lea    rsi,[rip+0x7a67]        # 43c50e <flatcc_builder_padding_base@@Base+0x32ae>
  434aa7:	mov    rdi,rax
  434aaa:	call   42d493 <flatcc_json_printer_fmt_bool@@Base+0x167>
  434aaf:	mov    rax,QWORD PTR [rbp-0x48]
  434ab3:	mov    rax,QWORD PTR [rax+0x28]
  434ab7:	mov    BYTE PTR [rax],0x22
  434aba:	mov    rax,QWORD PTR [rbp-0x48]
  434abe:	mov    rdx,QWORD PTR [rax+0x28]
  434ac2:	mov    rax,QWORD PTR [rbp-0x48]
  434ac6:	movzx  eax,BYTE PTR [rax+0x32]
  434aca:	test   al,al
  434acc:	sete   al
  434acf:	movzx  eax,al
  434ad2:	add    rdx,rax
  434ad5:	mov    rax,QWORD PTR [rbp-0x48]
  434ad9:	mov    QWORD PTR [rax+0x28],rdx
  434add:	mov    rax,QWORD PTR [rbp-0x48]
  434ae1:	mov    rax,QWORD PTR [rax+0x28]
  434ae5:	lea    rcx,[rax+0x1]
  434ae9:	mov    rdx,QWORD PTR [rbp-0x48]
  434aed:	mov    QWORD PTR [rdx+0x28],rcx
  434af1:	mov    BYTE PTR [rax],0x3a
  434af4:	mov    rax,QWORD PTR [rbp-0x48]
  434af8:	mov    rax,QWORD PTR [rax+0x28]
  434afc:	mov    BYTE PTR [rax],0x20
  434aff:	mov    rax,QWORD PTR [rbp-0x48]
  434b03:	mov    rdx,QWORD PTR [rax+0x28]
  434b07:	mov    rax,QWORD PTR [rbp-0x48]
  434b0b:	movzx  eax,BYTE PTR [rax+0x31]
  434b0f:	test   al,al
  434b11:	setne  al
  434b14:	movzx  eax,al
  434b17:	add    rdx,rax
  434b1a:	mov    rax,QWORD PTR [rbp-0x48]
  434b1e:	mov    QWORD PTR [rax+0x28],rdx
  434b22:	mov    rax,QWORD PTR [rbp-0x48]
  434b26:	movzx  eax,BYTE PTR [rax+0x33]
  434b2a:	test   al,al
  434b2c:	je     434b5e <flatcc_json_printer_union_field@@Base+0x257>
  434b2e:	mov    rax,QWORD PTR [rbp-0x48]
  434b32:	mov    rdx,QWORD PTR [rax+0x28]
  434b36:	movzx  eax,BYTE PTR [rbp-0x31]
  434b3a:	mov    rsi,rdx
  434b3d:	mov    edi,eax
  434b3f:	call   42a22d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  434b44:	mov    ecx,eax
  434b46:	mov    rax,QWORD PTR [rbp-0x48]
  434b4a:	mov    rdx,QWORD PTR [rax+0x28]
  434b4e:	movsxd rax,ecx
  434b51:	add    rdx,rax
  434b54:	mov    rax,QWORD PTR [rbp-0x48]
  434b58:	mov    QWORD PTR [rax+0x28],rdx
  434b5c:	jmp    434b71 <flatcc_json_printer_union_field@@Base+0x26a>
  434b5e:	movzx  ecx,BYTE PTR [rbp-0x31]
  434b62:	mov    rdx,QWORD PTR [rbp-0x48]
  434b66:	mov    rax,QWORD PTR [rbp-0x68]
  434b6a:	mov    esi,ecx
  434b6c:	mov    rdi,rdx
  434b6f:	call   rax
  434b71:	cmp    BYTE PTR [rbp-0x31],0x0
  434b75:	je     434bd7 <flatcc_json_printer_union_field@@Base+0x2d0>
  434b77:	mov    rax,QWORD PTR [rbp-0x48]
  434b7b:	mov    rax,QWORD PTR [rax+0x28]
  434b7f:	lea    rcx,[rax+0x1]
  434b83:	mov    rdx,QWORD PTR [rbp-0x48]
  434b87:	mov    QWORD PTR [rdx+0x28],rcx
  434b8b:	mov    BYTE PTR [rax],0x2c
  434b8e:	mov    eax,DWORD PTR [rbp-0x58]
  434b91:	movsxd rdx,eax
  434b94:	mov    rcx,QWORD PTR [rbp-0x60]
  434b98:	mov    rax,QWORD PTR [rbp-0x48]
  434b9c:	mov    rsi,rcx
  434b9f:	mov    rdi,rax
  434ba2:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  434ba7:	mov    rax,QWORD PTR [rbp-0x50]
  434bab:	mov    eax,DWORD PTR [rax+0x14]
  434bae:	mov    DWORD PTR [rbp-0x18],eax
  434bb1:	movzx  eax,BYTE PTR [rbp-0x31]
  434bb5:	mov    BYTE PTR [rbp-0x14],al
  434bb8:	mov    rax,QWORD PTR [rbp-0x28]
  434bbc:	mov    QWORD PTR [rbp-0x20],rax
  434bc0:	lea    rcx,[rbp-0x20]
  434bc4:	mov    rdx,QWORD PTR [rbp-0x48]
  434bc8:	mov    rax,QWORD PTR [rbp-0x70]
  434bcc:	mov    rsi,rcx
  434bcf:	mov    rdi,rdx
  434bd2:	call   rax
  434bd4:	jmp    434bd7 <flatcc_json_printer_union_field@@Base+0x2d0>
  434bd6:	nop
  434bd7:	mov    rax,QWORD PTR [rbp-0x8]
  434bdb:	xor    rax,QWORD PTR fs:0x28
  434be4:	je     434beb <flatcc_json_printer_union_field@@Base+0x2e4>
  434be6:	call   4061a0 <__stack_chk_fail@plt>
  434beb:	leave  
  434bec:	ret    

0000000000434bed <flatcc_json_printer_union_table@@Base>:
  434bed:	endbr64 
  434bf1:	push   rbp
  434bf2:	mov    rbp,rsp
  434bf5:	push   rbx
  434bf6:	sub    rsp,0x28
  434bfa:	mov    QWORD PTR [rbp-0x18],rdi
  434bfe:	mov    QWORD PTR [rbp-0x20],rsi
  434c02:	mov    QWORD PTR [rbp-0x28],rdx
  434c06:	mov    rax,QWORD PTR [rbp-0x20]
  434c0a:	mov    ebx,DWORD PTR [rax+0x8]
  434c0d:	mov    rax,QWORD PTR [rbp-0x20]
  434c11:	mov    rax,QWORD PTR [rax]
  434c14:	mov    rdi,rax
  434c17:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434c1c:	mov    rsi,rax
  434c1f:	mov    rdx,QWORD PTR [rbp-0x28]
  434c23:	mov    rax,QWORD PTR [rbp-0x18]
  434c27:	mov    rcx,rdx
  434c2a:	mov    edx,ebx
  434c2c:	mov    rdi,rax
  434c2f:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  434c34:	nop
  434c35:	add    rsp,0x28
  434c39:	pop    rbx
  434c3a:	pop    rbp
  434c3b:	ret    

0000000000434c3c <flatcc_json_printer_union_struct@@Base>:
  434c3c:	endbr64 
  434c40:	push   rbp
  434c41:	mov    rbp,rsp
  434c44:	sub    rsp,0x20
  434c48:	mov    QWORD PTR [rbp-0x8],rdi
  434c4c:	mov    QWORD PTR [rbp-0x10],rsi
  434c50:	mov    QWORD PTR [rbp-0x18],rdx
  434c54:	mov    rax,QWORD PTR [rbp-0x8]
  434c58:	mov    eax,DWORD PTR [rax+0x38]
  434c5b:	lea    edx,[rax+0x1]
  434c5e:	mov    rax,QWORD PTR [rbp-0x8]
  434c62:	mov    DWORD PTR [rax+0x38],edx
  434c65:	mov    rax,QWORD PTR [rbp-0x8]
  434c69:	mov    rax,QWORD PTR [rax+0x28]
  434c6d:	lea    rcx,[rax+0x1]
  434c71:	mov    rdx,QWORD PTR [rbp-0x8]
  434c75:	mov    QWORD PTR [rdx+0x28],rcx
  434c79:	mov    BYTE PTR [rax],0x7b
  434c7c:	mov    rax,QWORD PTR [rbp-0x10]
  434c80:	mov    rax,QWORD PTR [rax]
  434c83:	mov    rdi,rax
  434c86:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434c8b:	mov    rcx,rax
  434c8e:	mov    rdx,QWORD PTR [rbp-0x8]
  434c92:	mov    rax,QWORD PTR [rbp-0x18]
  434c96:	mov    rsi,rcx
  434c99:	mov    rdi,rdx
  434c9c:	call   rax
  434c9e:	mov    rax,QWORD PTR [rbp-0x8]
  434ca2:	movzx  eax,BYTE PTR [rax+0x31]
  434ca6:	test   al,al
  434ca8:	je     434cde <flatcc_json_printer_union_struct@@Base+0xa2>
  434caa:	mov    rax,QWORD PTR [rbp-0x8]
  434cae:	mov    rax,QWORD PTR [rax+0x28]
  434cb2:	lea    rcx,[rax+0x1]
  434cb6:	mov    rdx,QWORD PTR [rbp-0x8]
  434cba:	mov    QWORD PTR [rdx+0x28],rcx
  434cbe:	mov    BYTE PTR [rax],0xa
  434cc1:	mov    rax,QWORD PTR [rbp-0x8]
  434cc5:	mov    eax,DWORD PTR [rax+0x38]
  434cc8:	lea    edx,[rax-0x1]
  434ccb:	mov    rax,QWORD PTR [rbp-0x8]
  434ccf:	mov    DWORD PTR [rax+0x38],edx
  434cd2:	mov    rax,QWORD PTR [rbp-0x8]
  434cd6:	mov    rdi,rax
  434cd9:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434cde:	mov    rax,QWORD PTR [rbp-0x8]
  434ce2:	mov    rax,QWORD PTR [rax+0x28]
  434ce6:	lea    rcx,[rax+0x1]
  434cea:	mov    rdx,QWORD PTR [rbp-0x8]
  434cee:	mov    QWORD PTR [rdx+0x28],rcx
  434cf2:	mov    BYTE PTR [rax],0x7d
  434cf5:	nop
  434cf6:	leave  
  434cf7:	ret    

0000000000434cf8 <flatcc_json_printer_union_string@@Base>:
  434cf8:	endbr64 
  434cfc:	push   rbp
  434cfd:	mov    rbp,rsp
  434d00:	sub    rsp,0x10
  434d04:	mov    QWORD PTR [rbp-0x8],rdi
  434d08:	mov    QWORD PTR [rbp-0x10],rsi
  434d0c:	mov    rax,QWORD PTR [rbp-0x10]
  434d10:	mov    rax,QWORD PTR [rax]
  434d13:	mov    rdi,rax
  434d16:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  434d1b:	mov    rdx,rax
  434d1e:	mov    rax,QWORD PTR [rbp-0x8]
  434d22:	mov    rsi,rdx
  434d25:	mov    rdi,rax
  434d28:	call   42e1be <flatcc_json_printer_enum_flag@@Base+0x5e>
  434d2d:	nop
  434d2e:	leave  
  434d2f:	ret    

0000000000434d30 <flatcc_json_printer_embedded_struct_field@@Base>:
  434d30:	endbr64 
  434d34:	push   rbp
  434d35:	mov    rbp,rsp
  434d38:	sub    rsp,0x30
  434d3c:	mov    QWORD PTR [rbp-0x8],rdi
  434d40:	mov    DWORD PTR [rbp-0xc],esi
  434d43:	mov    QWORD PTR [rbp-0x18],rdx
  434d47:	mov    QWORD PTR [rbp-0x20],rcx
  434d4b:	mov    QWORD PTR [rbp-0x28],r8
  434d4f:	mov    DWORD PTR [rbp-0x10],r9d
  434d53:	cmp    DWORD PTR [rbp-0xc],0x0
  434d57:	je     434d70 <flatcc_json_printer_embedded_struct_field@@Base+0x40>
  434d59:	mov    rax,QWORD PTR [rbp-0x8]
  434d5d:	mov    rax,QWORD PTR [rax+0x28]
  434d61:	lea    rcx,[rax+0x1]
  434d65:	mov    rdx,QWORD PTR [rbp-0x8]
  434d69:	mov    QWORD PTR [rdx+0x28],rcx
  434d6d:	mov    BYTE PTR [rax],0x2c
  434d70:	mov    eax,DWORD PTR [rbp-0x10]
  434d73:	movsxd rdx,eax
  434d76:	mov    rcx,QWORD PTR [rbp-0x28]
  434d7a:	mov    rax,QWORD PTR [rbp-0x8]
  434d7e:	mov    rsi,rcx
  434d81:	mov    rdi,rax
  434d84:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  434d89:	mov    rax,QWORD PTR [rbp-0x8]
  434d8d:	mov    eax,DWORD PTR [rax+0x38]
  434d90:	lea    edx,[rax+0x1]
  434d93:	mov    rax,QWORD PTR [rbp-0x8]
  434d97:	mov    DWORD PTR [rax+0x38],edx
  434d9a:	mov    rax,QWORD PTR [rbp-0x8]
  434d9e:	mov    rax,QWORD PTR [rax+0x28]
  434da2:	lea    rcx,[rax+0x1]
  434da6:	mov    rdx,QWORD PTR [rbp-0x8]
  434daa:	mov    QWORD PTR [rdx+0x28],rcx
  434dae:	mov    BYTE PTR [rax],0x7b
  434db1:	mov    rdx,QWORD PTR [rbp-0x18]
  434db5:	mov    rax,QWORD PTR [rbp-0x20]
  434db9:	lea    rcx,[rdx+rax*1]
  434dbd:	mov    rdx,QWORD PTR [rbp-0x8]
  434dc1:	mov    rax,QWORD PTR [rbp+0x10]
  434dc5:	mov    rsi,rcx
  434dc8:	mov    rdi,rdx
  434dcb:	call   rax
  434dcd:	mov    rax,QWORD PTR [rbp-0x8]
  434dd1:	movzx  eax,BYTE PTR [rax+0x31]
  434dd5:	test   al,al
  434dd7:	je     434e0d <flatcc_json_printer_embedded_struct_field@@Base+0xdd>
  434dd9:	mov    rax,QWORD PTR [rbp-0x8]
  434ddd:	mov    rax,QWORD PTR [rax+0x28]
  434de1:	lea    rcx,[rax+0x1]
  434de5:	mov    rdx,QWORD PTR [rbp-0x8]
  434de9:	mov    QWORD PTR [rdx+0x28],rcx
  434ded:	mov    BYTE PTR [rax],0xa
  434df0:	mov    rax,QWORD PTR [rbp-0x8]
  434df4:	mov    eax,DWORD PTR [rax+0x38]
  434df7:	lea    edx,[rax-0x1]
  434dfa:	mov    rax,QWORD PTR [rbp-0x8]
  434dfe:	mov    DWORD PTR [rax+0x38],edx
  434e01:	mov    rax,QWORD PTR [rbp-0x8]
  434e05:	mov    rdi,rax
  434e08:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434e0d:	mov    rax,QWORD PTR [rbp-0x8]
  434e11:	mov    rax,QWORD PTR [rax+0x28]
  434e15:	lea    rcx,[rax+0x1]
  434e19:	mov    rdx,QWORD PTR [rbp-0x8]
  434e1d:	mov    QWORD PTR [rdx+0x28],rcx
  434e21:	mov    BYTE PTR [rax],0x7d
  434e24:	nop
  434e25:	leave  
  434e26:	ret    

0000000000434e27 <flatcc_json_printer_struct_field@@Base>:
  434e27:	endbr64 
  434e2b:	push   rbp
  434e2c:	mov    rbp,rsp
  434e2f:	sub    rsp,0x40
  434e33:	mov    QWORD PTR [rbp-0x18],rdi
  434e37:	mov    QWORD PTR [rbp-0x20],rsi
  434e3b:	mov    DWORD PTR [rbp-0x24],edx
  434e3e:	mov    QWORD PTR [rbp-0x30],rcx
  434e42:	mov    DWORD PTR [rbp-0x28],r8d
  434e46:	mov    QWORD PTR [rbp-0x38],r9
  434e4a:	mov    edx,DWORD PTR [rbp-0x24]
  434e4d:	mov    rax,QWORD PTR [rbp-0x20]
  434e51:	mov    esi,edx
  434e53:	mov    rdi,rax
  434e56:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  434e5b:	mov    QWORD PTR [rbp-0x8],rax
  434e5f:	cmp    QWORD PTR [rbp-0x8],0x0
  434e64:	je     434f42 <flatcc_json_printer_struct_field@@Base+0x11b>
  434e6a:	mov    rax,QWORD PTR [rbp-0x20]
  434e6e:	mov    eax,DWORD PTR [rax+0x18]
  434e71:	lea    ecx,[rax+0x1]
  434e74:	mov    rdx,QWORD PTR [rbp-0x20]
  434e78:	mov    DWORD PTR [rdx+0x18],ecx
  434e7b:	test   eax,eax
  434e7d:	je     434e96 <flatcc_json_printer_struct_field@@Base+0x6f>
  434e7f:	mov    rax,QWORD PTR [rbp-0x18]
  434e83:	mov    rax,QWORD PTR [rax+0x28]
  434e87:	lea    rcx,[rax+0x1]
  434e8b:	mov    rdx,QWORD PTR [rbp-0x18]
  434e8f:	mov    QWORD PTR [rdx+0x28],rcx
  434e93:	mov    BYTE PTR [rax],0x2c
  434e96:	mov    eax,DWORD PTR [rbp-0x28]
  434e99:	movsxd rdx,eax
  434e9c:	mov    rcx,QWORD PTR [rbp-0x30]
  434ea0:	mov    rax,QWORD PTR [rbp-0x18]
  434ea4:	mov    rsi,rcx
  434ea7:	mov    rdi,rax
  434eaa:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  434eaf:	mov    rax,QWORD PTR [rbp-0x18]
  434eb3:	mov    eax,DWORD PTR [rax+0x38]
  434eb6:	lea    edx,[rax+0x1]
  434eb9:	mov    rax,QWORD PTR [rbp-0x18]
  434ebd:	mov    DWORD PTR [rax+0x38],edx
  434ec0:	mov    rax,QWORD PTR [rbp-0x18]
  434ec4:	mov    rax,QWORD PTR [rax+0x28]
  434ec8:	lea    rcx,[rax+0x1]
  434ecc:	mov    rdx,QWORD PTR [rbp-0x18]
  434ed0:	mov    QWORD PTR [rdx+0x28],rcx
  434ed4:	mov    BYTE PTR [rax],0x7b
  434ed7:	mov    rcx,QWORD PTR [rbp-0x8]
  434edb:	mov    rdx,QWORD PTR [rbp-0x18]
  434edf:	mov    rax,QWORD PTR [rbp-0x38]
  434ee3:	mov    rsi,rcx
  434ee6:	mov    rdi,rdx
  434ee9:	call   rax
  434eeb:	mov    rax,QWORD PTR [rbp-0x18]
  434eef:	movzx  eax,BYTE PTR [rax+0x31]
  434ef3:	test   al,al
  434ef5:	je     434f2b <flatcc_json_printer_struct_field@@Base+0x104>
  434ef7:	mov    rax,QWORD PTR [rbp-0x18]
  434efb:	mov    rax,QWORD PTR [rax+0x28]
  434eff:	lea    rcx,[rax+0x1]
  434f03:	mov    rdx,QWORD PTR [rbp-0x18]
  434f07:	mov    QWORD PTR [rdx+0x28],rcx
  434f0b:	mov    BYTE PTR [rax],0xa
  434f0e:	mov    rax,QWORD PTR [rbp-0x18]
  434f12:	mov    eax,DWORD PTR [rax+0x38]
  434f15:	lea    edx,[rax-0x1]
  434f18:	mov    rax,QWORD PTR [rbp-0x18]
  434f1c:	mov    DWORD PTR [rax+0x38],edx
  434f1f:	mov    rax,QWORD PTR [rbp-0x18]
  434f23:	mov    rdi,rax
  434f26:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434f2b:	mov    rax,QWORD PTR [rbp-0x18]
  434f2f:	mov    rax,QWORD PTR [rax+0x28]
  434f33:	lea    rcx,[rax+0x1]
  434f37:	mov    rdx,QWORD PTR [rbp-0x18]
  434f3b:	mov    QWORD PTR [rdx+0x28],rcx
  434f3f:	mov    BYTE PTR [rax],0x7d
  434f42:	nop
  434f43:	leave  
  434f44:	ret    
  434f45:	endbr64 
  434f49:	push   rbp
  434f4a:	mov    rbp,rsp
  434f4d:	sub    rsp,0x30
  434f51:	mov    QWORD PTR [rbp-0x18],rdi
  434f55:	mov    QWORD PTR [rbp-0x20],rsi
  434f59:	mov    QWORD PTR [rbp-0x28],rdx
  434f5d:	mov    QWORD PTR [rbp-0x30],rcx
  434f61:	mov    rax,QWORD PTR fs:0x28
  434f6a:	mov    QWORD PTR [rbp-0x8],rax
  434f6e:	xor    eax,eax
  434f70:	mov    DWORD PTR [rbp-0x10],0x0
  434f77:	cmp    QWORD PTR [rbp-0x20],0x0
  434f7c:	je     434f85 <flatcc_json_printer_struct_field@@Base+0x15e>
  434f7e:	cmp    QWORD PTR [rbp-0x28],0x7
  434f83:	ja     434fb5 <flatcc_json_printer_struct_field@@Base+0x18e>
  434f85:	mov    rax,QWORD PTR [rbp-0x18]
  434f89:	mov    esi,0x1
  434f8e:	mov    rdi,rax
  434f91:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  434f96:	lea    rcx,[rip+0x7b2b]        # 43cac8 <flatcc_builder_padding_base@@Base+0x3868>
  434f9d:	mov    edx,0x3fb
  434fa2:	lea    rsi,[rip+0x74df]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  434fa9:	lea    rdi,[rip+0x7568]        # 43c518 <flatcc_builder_padding_base@@Base+0x32b8>
  434fb0:	call   4061b0 <__assert_fail@plt>
  434fb5:	cmp    QWORD PTR [rbp-0x30],0x0
  434fba:	je     435033 <flatcc_json_printer_struct_field@@Base+0x20c>
  434fbc:	mov    rcx,QWORD PTR [rbp-0x30]
  434fc0:	lea    rax,[rbp-0x10]
  434fc4:	mov    edx,0x4
  434fc9:	mov    rsi,rcx
  434fcc:	mov    rdi,rax
  434fcf:	call   406170 <strncpy@plt>
  434fd4:	mov    eax,DWORD PTR [rbp-0x10]
  434fd7:	mov    edi,eax
  434fd9:	call   42a141 <flatcc_json_parser_struct_as_root@@Base+0x40c>
  434fde:	mov    DWORD PTR [rbp-0x10],eax
  434fe1:	mov    rax,QWORD PTR [rbp-0x20]
  434fe5:	add    rax,0x4
  434fe9:	mov    rdi,rax
  434fec:	call   42a14d <flatcc_json_parser_struct_as_root@@Base+0x418>
  434ff1:	mov    DWORD PTR [rbp-0xc],eax
  434ff4:	mov    eax,DWORD PTR [rbp-0x10]
  434ff7:	test   eax,eax
  434ff9:	je     435033 <flatcc_json_printer_struct_field@@Base+0x20c>
  434ffb:	mov    eax,DWORD PTR [rbp-0x10]
  434ffe:	cmp    DWORD PTR [rbp-0xc],eax
  435001:	je     435033 <flatcc_json_printer_struct_field@@Base+0x20c>
  435003:	mov    rax,QWORD PTR [rbp-0x18]
  435007:	mov    esi,0x1
  43500c:	mov    rdi,rax
  43500f:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  435014:	lea    rcx,[rip+0x7aad]        # 43cac8 <flatcc_builder_padding_base@@Base+0x3868>
  43501b:	mov    edx,0x404
  435020:	lea    rsi,[rip+0x7461]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  435027:	lea    rdi,[rip+0x7509]        # 43c537 <flatcc_builder_padding_base@@Base+0x32d7>
  43502e:	call   4061b0 <__assert_fail@plt>
  435033:	mov    eax,0x1
  435038:	mov    rdx,QWORD PTR [rbp-0x8]
  43503c:	xor    rdx,QWORD PTR fs:0x28
  435045:	je     43504c <flatcc_json_printer_struct_field@@Base+0x225>
  435047:	call   4061a0 <__stack_chk_fail@plt>
  43504c:	leave  
  43504d:	ret    

000000000043504e <flatcc_json_printer_struct_as_root@@Base>:
  43504e:	endbr64 
  435052:	push   rbp
  435053:	mov    rbp,rsp
  435056:	sub    rsp,0x30
  43505a:	mov    QWORD PTR [rbp-0x8],rdi
  43505e:	mov    QWORD PTR [rbp-0x10],rsi
  435062:	mov    QWORD PTR [rbp-0x18],rdx
  435066:	mov    QWORD PTR [rbp-0x20],rcx
  43506a:	mov    QWORD PTR [rbp-0x28],r8
  43506e:	mov    rcx,QWORD PTR [rbp-0x20]
  435072:	mov    rdx,QWORD PTR [rbp-0x18]
  435076:	mov    rsi,QWORD PTR [rbp-0x10]
  43507a:	mov    rax,QWORD PTR [rbp-0x8]
  43507e:	mov    rdi,rax
  435081:	call   434f45 <flatcc_json_printer_struct_field@@Base+0x11e>
  435086:	test   eax,eax
  435088:	jne    435094 <flatcc_json_printer_struct_as_root@@Base+0x46>
  43508a:	mov    eax,0xffffffff
  43508f:	jmp    4351ae <flatcc_json_printer_struct_as_root@@Base+0x160>
  435094:	mov    rax,QWORD PTR [rbp-0x8]
  435098:	mov    eax,DWORD PTR [rax+0x38]
  43509b:	lea    edx,[rax+0x1]
  43509e:	mov    rax,QWORD PTR [rbp-0x8]
  4350a2:	mov    DWORD PTR [rax+0x38],edx
  4350a5:	mov    rax,QWORD PTR [rbp-0x8]
  4350a9:	mov    rax,QWORD PTR [rax+0x28]
  4350ad:	lea    rcx,[rax+0x1]
  4350b1:	mov    rdx,QWORD PTR [rbp-0x8]
  4350b5:	mov    QWORD PTR [rdx+0x28],rcx
  4350b9:	mov    BYTE PTR [rax],0x7b
  4350bc:	mov    rax,QWORD PTR [rbp-0x10]
  4350c0:	mov    rdi,rax
  4350c3:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4350c8:	mov    rcx,rax
  4350cb:	mov    rdx,QWORD PTR [rbp-0x8]
  4350cf:	mov    rax,QWORD PTR [rbp-0x28]
  4350d3:	mov    rsi,rcx
  4350d6:	mov    rdi,rdx
  4350d9:	call   rax
  4350db:	mov    rax,QWORD PTR [rbp-0x8]
  4350df:	movzx  eax,BYTE PTR [rax+0x31]
  4350e3:	test   al,al
  4350e5:	je     43511b <flatcc_json_printer_struct_as_root@@Base+0xcd>
  4350e7:	mov    rax,QWORD PTR [rbp-0x8]
  4350eb:	mov    rax,QWORD PTR [rax+0x28]
  4350ef:	lea    rcx,[rax+0x1]
  4350f3:	mov    rdx,QWORD PTR [rbp-0x8]
  4350f7:	mov    QWORD PTR [rdx+0x28],rcx
  4350fb:	mov    BYTE PTR [rax],0xa
  4350fe:	mov    rax,QWORD PTR [rbp-0x8]
  435102:	mov    eax,DWORD PTR [rax+0x38]
  435105:	lea    edx,[rax-0x1]
  435108:	mov    rax,QWORD PTR [rbp-0x8]
  43510c:	mov    DWORD PTR [rax+0x38],edx
  43510f:	mov    rax,QWORD PTR [rbp-0x8]
  435113:	mov    rdi,rax
  435116:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43511b:	mov    rax,QWORD PTR [rbp-0x8]
  43511f:	mov    rax,QWORD PTR [rax+0x28]
  435123:	lea    rcx,[rax+0x1]
  435127:	mov    rdx,QWORD PTR [rbp-0x8]
  43512b:	mov    QWORD PTR [rdx+0x28],rcx
  43512f:	mov    BYTE PTR [rax],0x7d
  435132:	mov    rax,QWORD PTR [rbp-0x8]
  435136:	movzx  eax,BYTE PTR [rax+0x31]
  43513a:	test   al,al
  43513c:	je     435160 <flatcc_json_printer_struct_as_root@@Base+0x112>
  43513e:	mov    rax,QWORD PTR [rbp-0x8]
  435142:	mov    eax,DWORD PTR [rax+0x38]
  435145:	test   eax,eax
  435147:	jne    435160 <flatcc_json_printer_struct_as_root@@Base+0x112>
  435149:	mov    rax,QWORD PTR [rbp-0x8]
  43514d:	mov    rax,QWORD PTR [rax+0x28]
  435151:	lea    rcx,[rax+0x1]
  435155:	mov    rdx,QWORD PTR [rbp-0x8]
  435159:	mov    QWORD PTR [rdx+0x28],rcx
  43515d:	mov    BYTE PTR [rax],0xa
  435160:	mov    rax,QWORD PTR [rbp-0x8]
  435164:	mov    rax,QWORD PTR [rax+0x48]
  435168:	mov    rdx,QWORD PTR [rbp-0x8]
  43516c:	mov    esi,0x1
  435171:	mov    rdi,rdx
  435174:	call   rax
  435176:	mov    rax,QWORD PTR [rbp-0x8]
  43517a:	mov    rdi,rax
  43517d:	call   42a18b <flatcc_json_parser_struct_as_root@@Base+0x456>
  435182:	test   eax,eax
  435184:	jne    4351a9 <flatcc_json_printer_struct_as_root@@Base+0x15b>
  435186:	mov    rax,QWORD PTR [rbp-0x8]
  43518a:	mov    rax,QWORD PTR [rax+0x18]
  43518e:	mov    ecx,eax
  435190:	mov    rax,QWORD PTR [rbp-0x8]
  435194:	mov    rdx,QWORD PTR [rax+0x28]
  435198:	mov    rax,QWORD PTR [rbp-0x8]
  43519c:	mov    rax,QWORD PTR [rax]
  43519f:	sub    rdx,rax
  4351a2:	mov    rax,rdx
  4351a5:	add    eax,ecx
  4351a7:	jmp    4351ae <flatcc_json_printer_struct_as_root@@Base+0x160>
  4351a9:	mov    eax,0xffffffff
  4351ae:	leave  
  4351af:	ret    

00000000004351b0 <flatcc_json_printer_table_as_root@@Base>:
  4351b0:	endbr64 
  4351b4:	push   rbp
  4351b5:	mov    rbp,rsp
  4351b8:	sub    rsp,0x30
  4351bc:	mov    QWORD PTR [rbp-0x8],rdi
  4351c0:	mov    QWORD PTR [rbp-0x10],rsi
  4351c4:	mov    QWORD PTR [rbp-0x18],rdx
  4351c8:	mov    QWORD PTR [rbp-0x20],rcx
  4351cc:	mov    QWORD PTR [rbp-0x28],r8
  4351d0:	mov    rcx,QWORD PTR [rbp-0x20]
  4351d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4351d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4351dc:	mov    rax,QWORD PTR [rbp-0x8]
  4351e0:	mov    rdi,rax
  4351e3:	call   434f45 <flatcc_json_printer_struct_field@@Base+0x11e>
  4351e8:	test   eax,eax
  4351ea:	jne    4351f6 <flatcc_json_printer_table_as_root@@Base+0x46>
  4351ec:	mov    eax,0xffffffff
  4351f1:	jmp    435299 <flatcc_json_printer_table_as_root@@Base+0xe9>
  4351f6:	mov    rax,QWORD PTR [rbp-0x10]
  4351fa:	mov    rdi,rax
  4351fd:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  435202:	mov    rsi,rax
  435205:	mov    rdx,QWORD PTR [rbp-0x28]
  435209:	mov    rax,QWORD PTR [rbp-0x8]
  43520d:	mov    rcx,rdx
  435210:	mov    edx,0x64
  435215:	mov    rdi,rax
  435218:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  43521d:	mov    rax,QWORD PTR [rbp-0x8]
  435221:	movzx  eax,BYTE PTR [rax+0x31]
  435225:	test   al,al
  435227:	je     43524b <flatcc_json_printer_table_as_root@@Base+0x9b>
  435229:	mov    rax,QWORD PTR [rbp-0x8]
  43522d:	mov    eax,DWORD PTR [rax+0x38]
  435230:	test   eax,eax
  435232:	jne    43524b <flatcc_json_printer_table_as_root@@Base+0x9b>
  435234:	mov    rax,QWORD PTR [rbp-0x8]
  435238:	mov    rax,QWORD PTR [rax+0x28]
  43523c:	lea    rcx,[rax+0x1]
  435240:	mov    rdx,QWORD PTR [rbp-0x8]
  435244:	mov    QWORD PTR [rdx+0x28],rcx
  435248:	mov    BYTE PTR [rax],0xa
  43524b:	mov    rax,QWORD PTR [rbp-0x8]
  43524f:	mov    rax,QWORD PTR [rax+0x48]
  435253:	mov    rdx,QWORD PTR [rbp-0x8]
  435257:	mov    esi,0x1
  43525c:	mov    rdi,rdx
  43525f:	call   rax
  435261:	mov    rax,QWORD PTR [rbp-0x8]
  435265:	mov    rdi,rax
  435268:	call   42a18b <flatcc_json_parser_struct_as_root@@Base+0x456>
  43526d:	test   eax,eax
  43526f:	jne    435294 <flatcc_json_printer_table_as_root@@Base+0xe4>
  435271:	mov    rax,QWORD PTR [rbp-0x8]
  435275:	mov    rax,QWORD PTR [rax+0x18]
  435279:	mov    ecx,eax
  43527b:	mov    rax,QWORD PTR [rbp-0x8]
  43527f:	mov    rdx,QWORD PTR [rax+0x28]
  435283:	mov    rax,QWORD PTR [rbp-0x8]
  435287:	mov    rax,QWORD PTR [rax]
  43528a:	sub    rdx,rax
  43528d:	mov    rax,rdx
  435290:	add    eax,ecx
  435292:	jmp    435299 <flatcc_json_printer_table_as_root@@Base+0xe9>
  435294:	mov    eax,0xffffffff
  435299:	leave  
  43529a:	ret    

000000000043529b <flatcc_json_printer_struct_as_nested_root@@Base>:
  43529b:	endbr64 
  43529f:	push   rbp
  4352a0:	mov    rbp,rsp
  4352a3:	sub    rsp,0x40
  4352a7:	mov    QWORD PTR [rbp-0x18],rdi
  4352ab:	mov    QWORD PTR [rbp-0x20],rsi
  4352af:	mov    DWORD PTR [rbp-0x24],edx
  4352b2:	mov    QWORD PTR [rbp-0x30],rcx
  4352b6:	mov    DWORD PTR [rbp-0x28],r8d
  4352ba:	mov    QWORD PTR [rbp-0x38],r9
  4352be:	mov    edx,DWORD PTR [rbp-0x24]
  4352c1:	mov    rax,QWORD PTR [rbp-0x20]
  4352c5:	mov    esi,edx
  4352c7:	mov    rdi,rax
  4352ca:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  4352cf:	mov    QWORD PTR [rbp-0x8],rax
  4352d3:	cmp    QWORD PTR [rbp-0x8],0x0
  4352d8:	je     43540a <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  4352de:	mov    rax,QWORD PTR [rbp-0x8]
  4352e2:	mov    rdi,rax
  4352e5:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4352ea:	mov    edx,eax
  4352ec:	mov    rax,QWORD PTR [rbp-0x8]
  4352f0:	add    rax,rdx
  4352f3:	mov    QWORD PTR [rbp-0x8],rax
  4352f7:	mov    rax,QWORD PTR [rbp-0x8]
  4352fb:	mov    rdi,rax
  4352fe:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435303:	mov    DWORD PTR [rbp-0xc],eax
  435306:	mov    edx,DWORD PTR [rbp-0xc]
  435309:	mov    rcx,QWORD PTR [rbp-0x38]
  43530d:	mov    rsi,QWORD PTR [rbp-0x8]
  435311:	mov    rax,QWORD PTR [rbp-0x18]
  435315:	mov    rdi,rax
  435318:	call   434f45 <flatcc_json_printer_struct_field@@Base+0x11e>
  43531d:	test   eax,eax
  43531f:	je     43540d <flatcc_json_printer_struct_as_nested_root@@Base+0x172>
  435325:	mov    rax,QWORD PTR [rbp-0x20]
  435329:	mov    eax,DWORD PTR [rax+0x18]
  43532c:	lea    ecx,[rax+0x1]
  43532f:	mov    rdx,QWORD PTR [rbp-0x20]
  435333:	mov    DWORD PTR [rdx+0x18],ecx
  435336:	test   eax,eax
  435338:	je     435351 <flatcc_json_printer_struct_as_nested_root@@Base+0xb6>
  43533a:	mov    rax,QWORD PTR [rbp-0x18]
  43533e:	mov    rax,QWORD PTR [rax+0x28]
  435342:	lea    rcx,[rax+0x1]
  435346:	mov    rdx,QWORD PTR [rbp-0x18]
  43534a:	mov    QWORD PTR [rdx+0x28],rcx
  43534e:	mov    BYTE PTR [rax],0x2c
  435351:	mov    eax,DWORD PTR [rbp-0x28]
  435354:	movsxd rdx,eax
  435357:	mov    rcx,QWORD PTR [rbp-0x30]
  43535b:	mov    rax,QWORD PTR [rbp-0x18]
  43535f:	mov    rsi,rcx
  435362:	mov    rdi,rax
  435365:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  43536a:	mov    rax,QWORD PTR [rbp-0x18]
  43536e:	mov    eax,DWORD PTR [rax+0x38]
  435371:	lea    edx,[rax+0x1]
  435374:	mov    rax,QWORD PTR [rbp-0x18]
  435378:	mov    DWORD PTR [rax+0x38],edx
  43537b:	mov    rax,QWORD PTR [rbp-0x18]
  43537f:	mov    rax,QWORD PTR [rax+0x28]
  435383:	lea    rcx,[rax+0x1]
  435387:	mov    rdx,QWORD PTR [rbp-0x18]
  43538b:	mov    QWORD PTR [rdx+0x28],rcx
  43538f:	mov    BYTE PTR [rax],0x7b
  435392:	mov    rax,QWORD PTR [rbp-0x8]
  435396:	mov    rdi,rax
  435399:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  43539e:	mov    rcx,rax
  4353a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4353a5:	mov    rax,QWORD PTR [rbp+0x10]
  4353a9:	mov    rsi,rcx
  4353ac:	mov    rdi,rdx
  4353af:	call   rax
  4353b1:	mov    rax,QWORD PTR [rbp-0x18]
  4353b5:	movzx  eax,BYTE PTR [rax+0x31]
  4353b9:	test   al,al
  4353bb:	je     4353f1 <flatcc_json_printer_struct_as_nested_root@@Base+0x156>
  4353bd:	mov    rax,QWORD PTR [rbp-0x18]
  4353c1:	mov    rax,QWORD PTR [rax+0x28]
  4353c5:	lea    rcx,[rax+0x1]
  4353c9:	mov    rdx,QWORD PTR [rbp-0x18]
  4353cd:	mov    QWORD PTR [rdx+0x28],rcx
  4353d1:	mov    BYTE PTR [rax],0xa
  4353d4:	mov    rax,QWORD PTR [rbp-0x18]
  4353d8:	mov    eax,DWORD PTR [rax+0x38]
  4353db:	lea    edx,[rax-0x1]
  4353de:	mov    rax,QWORD PTR [rbp-0x18]
  4353e2:	mov    DWORD PTR [rax+0x38],edx
  4353e5:	mov    rax,QWORD PTR [rbp-0x18]
  4353e9:	mov    rdi,rax
  4353ec:	call   42dadb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4353f1:	mov    rax,QWORD PTR [rbp-0x18]
  4353f5:	mov    rax,QWORD PTR [rax+0x28]
  4353f9:	lea    rcx,[rax+0x1]
  4353fd:	mov    rdx,QWORD PTR [rbp-0x18]
  435401:	mov    QWORD PTR [rdx+0x28],rcx
  435405:	mov    BYTE PTR [rax],0x7d
  435408:	jmp    43540e <flatcc_json_printer_struct_as_nested_root@@Base+0x173>
  43540a:	nop
  43540b:	jmp    43540e <flatcc_json_printer_struct_as_nested_root@@Base+0x173>
  43540d:	nop
  43540e:	leave  
  43540f:	ret    

0000000000435410 <flatcc_json_printer_table_as_nested_root@@Base>:
  435410:	endbr64 
  435414:	push   rbp
  435415:	mov    rbp,rsp
  435418:	push   rbx
  435419:	sub    rsp,0x48
  43541d:	mov    QWORD PTR [rbp-0x28],rdi
  435421:	mov    QWORD PTR [rbp-0x30],rsi
  435425:	mov    DWORD PTR [rbp-0x34],edx
  435428:	mov    QWORD PTR [rbp-0x40],rcx
  43542c:	mov    DWORD PTR [rbp-0x38],r8d
  435430:	mov    QWORD PTR [rbp-0x48],r9
  435434:	mov    edx,DWORD PTR [rbp-0x34]
  435437:	mov    rax,QWORD PTR [rbp-0x30]
  43543b:	mov    esi,edx
  43543d:	mov    rdi,rax
  435440:	call   42d266 <flatcc_json_printer_error_string@@Base+0xa0>
  435445:	mov    QWORD PTR [rbp-0x18],rax
  435449:	cmp    QWORD PTR [rbp-0x18],0x0
  43544e:	je     43550b <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  435454:	mov    rax,QWORD PTR [rbp-0x18]
  435458:	mov    rdi,rax
  43545b:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435460:	mov    edx,eax
  435462:	mov    rax,QWORD PTR [rbp-0x18]
  435466:	add    rax,rdx
  435469:	mov    QWORD PTR [rbp-0x18],rax
  43546d:	mov    rax,QWORD PTR [rbp-0x18]
  435471:	mov    rdi,rax
  435474:	call   42a096 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435479:	mov    DWORD PTR [rbp-0x1c],eax
  43547c:	add    QWORD PTR [rbp-0x18],0x4
  435481:	mov    edx,DWORD PTR [rbp-0x1c]
  435484:	mov    rcx,QWORD PTR [rbp-0x48]
  435488:	mov    rsi,QWORD PTR [rbp-0x18]
  43548c:	mov    rax,QWORD PTR [rbp-0x28]
  435490:	mov    rdi,rax
  435493:	call   434f45 <flatcc_json_printer_struct_field@@Base+0x11e>
  435498:	test   eax,eax
  43549a:	je     43550e <flatcc_json_printer_table_as_nested_root@@Base+0xfe>
  43549c:	mov    rax,QWORD PTR [rbp-0x30]
  4354a0:	mov    eax,DWORD PTR [rax+0x18]
  4354a3:	lea    ecx,[rax+0x1]
  4354a6:	mov    rdx,QWORD PTR [rbp-0x30]
  4354aa:	mov    DWORD PTR [rdx+0x18],ecx
  4354ad:	test   eax,eax
  4354af:	je     4354c8 <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
  4354b1:	mov    rax,QWORD PTR [rbp-0x28]
  4354b5:	mov    rax,QWORD PTR [rax+0x28]
  4354b9:	lea    rcx,[rax+0x1]
  4354bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4354c1:	mov    QWORD PTR [rdx+0x28],rcx
  4354c5:	mov    BYTE PTR [rax],0x2c
  4354c8:	mov    eax,DWORD PTR [rbp-0x38]
  4354cb:	movsxd rdx,eax
  4354ce:	mov    rcx,QWORD PTR [rbp-0x40]
  4354d2:	mov    rax,QWORD PTR [rbp-0x28]
  4354d6:	mov    rsi,rcx
  4354d9:	mov    rdi,rax
  4354dc:	call   42dd63 <flatcc_json_printer_get_level@@Base+0xef>
  4354e1:	mov    rax,QWORD PTR [rbp-0x30]
  4354e5:	mov    ebx,DWORD PTR [rax+0x14]
  4354e8:	mov    rax,QWORD PTR [rbp-0x18]
  4354ec:	mov    rdi,rax
  4354ef:	call   42d220 <flatcc_json_printer_error_string@@Base+0x5a>
  4354f4:	mov    rsi,rax
  4354f7:	mov    rax,QWORD PTR [rbp-0x28]
  4354fb:	mov    rcx,QWORD PTR [rbp+0x10]
  4354ff:	mov    edx,ebx
  435501:	mov    rdi,rax
  435504:	call   42e206 <flatcc_json_printer_enum_flag@@Base+0xa6>
  435509:	jmp    43550f <flatcc_json_printer_table_as_nested_root@@Base+0xff>
  43550b:	nop
  43550c:	jmp    43550f <flatcc_json_printer_table_as_nested_root@@Base+0xff>
  43550e:	nop
  43550f:	add    rsp,0x48
  435513:	pop    rbx
  435514:	pop    rbp
  435515:	ret    
  435516:	endbr64 
  43551a:	push   rbp
  43551b:	mov    rbp,rsp
  43551e:	sub    rsp,0x20
  435522:	mov    QWORD PTR [rbp-0x18],rdi
  435526:	mov    DWORD PTR [rbp-0x1c],esi
  435529:	cmp    DWORD PTR [rbp-0x1c],0x0
  43552d:	jne    4355e9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d9>
  435533:	mov    rax,QWORD PTR [rbp-0x18]
  435537:	mov    rdx,QWORD PTR [rax+0x28]
  43553b:	mov    rax,QWORD PTR [rbp-0x18]
  43553f:	mov    rax,QWORD PTR [rax+0x20]
  435543:	cmp    rdx,rax
  435546:	jb     4355e9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d9>
  43554c:	mov    rax,QWORD PTR [rbp-0x18]
  435550:	mov    rdx,QWORD PTR [rax+0x28]
  435554:	mov    rax,QWORD PTR [rbp-0x18]
  435558:	mov    rax,QWORD PTR [rax+0x20]
  43555c:	sub    rdx,rax
  43555f:	mov    rax,rdx
  435562:	mov    QWORD PTR [rbp-0x10],rax
  435566:	mov    rax,QWORD PTR [rbp-0x18]
  43556a:	mov    rdx,QWORD PTR [rax+0x40]
  43556e:	mov    rax,QWORD PTR [rbp-0x18]
  435572:	mov    rsi,QWORD PTR [rax+0x10]
  435576:	mov    rax,QWORD PTR [rbp-0x18]
  43557a:	mov    rax,QWORD PTR [rax]
  43557d:	mov    rcx,rdx
  435580:	mov    edx,0x1
  435585:	mov    rdi,rax
  435588:	call   406270 <fwrite@plt>
  43558d:	mov    rax,QWORD PTR [rbp-0x18]
  435591:	mov    rdx,QWORD PTR [rax]
  435594:	mov    rax,QWORD PTR [rbp-0x18]
  435598:	mov    rax,QWORD PTR [rax+0x10]
  43559c:	lea    rcx,[rdx+rax*1]
  4355a0:	mov    rax,QWORD PTR [rbp-0x18]
  4355a4:	mov    rax,QWORD PTR [rax]
  4355a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4355ab:	mov    rsi,rcx
  4355ae:	mov    rdi,rax
  4355b1:	call   406220 <memcpy@plt>
  4355b6:	mov    rax,QWORD PTR [rbp-0x18]
  4355ba:	mov    rdx,QWORD PTR [rax]
  4355bd:	mov    rax,QWORD PTR [rbp-0x10]
  4355c1:	add    rdx,rax
  4355c4:	mov    rax,QWORD PTR [rbp-0x18]
  4355c8:	mov    QWORD PTR [rax+0x28],rdx
  4355cc:	mov    rax,QWORD PTR [rbp-0x18]
  4355d0:	mov    rdx,QWORD PTR [rax+0x18]
  4355d4:	mov    rax,QWORD PTR [rbp-0x18]
  4355d8:	mov    rax,QWORD PTR [rax+0x10]
  4355dc:	add    rdx,rax
  4355df:	mov    rax,QWORD PTR [rbp-0x18]
  4355e3:	mov    QWORD PTR [rax+0x18],rdx
  4355e7:	jmp    43564b <flatcc_json_printer_table_as_nested_root@@Base+0x23b>
  4355e9:	mov    rax,QWORD PTR [rbp-0x18]
  4355ed:	mov    rdx,QWORD PTR [rax+0x28]
  4355f1:	mov    rax,QWORD PTR [rbp-0x18]
  4355f5:	mov    rax,QWORD PTR [rax]
  4355f8:	sub    rdx,rax
  4355fb:	mov    rax,rdx
  4355fe:	mov    QWORD PTR [rbp-0x8],rax
  435602:	mov    rax,QWORD PTR [rbp-0x18]
  435606:	mov    rdx,QWORD PTR [rax+0x40]
  43560a:	mov    rax,QWORD PTR [rbp-0x18]
  43560e:	mov    rax,QWORD PTR [rax]
  435611:	mov    rsi,QWORD PTR [rbp-0x8]
  435615:	mov    rcx,rdx
  435618:	mov    edx,0x1
  43561d:	mov    rdi,rax
  435620:	call   406270 <fwrite@plt>
  435625:	mov    rax,QWORD PTR [rbp-0x18]
  435629:	mov    rdx,QWORD PTR [rax]
  43562c:	mov    rax,QWORD PTR [rbp-0x18]
  435630:	mov    QWORD PTR [rax+0x28],rdx
  435634:	mov    rax,QWORD PTR [rbp-0x18]
  435638:	mov    rdx,QWORD PTR [rax+0x18]
  43563c:	mov    rax,QWORD PTR [rbp-0x8]
  435640:	add    rdx,rax
  435643:	mov    rax,QWORD PTR [rbp-0x18]
  435647:	mov    QWORD PTR [rax+0x18],rdx
  43564b:	mov    rax,QWORD PTR [rbp-0x18]
  43564f:	mov    rax,QWORD PTR [rax+0x28]
  435653:	mov    BYTE PTR [rax],0x0
  435656:	nop
  435657:	leave  
  435658:	ret    

0000000000435659 <flatcc_json_printer_init@@Base>:
  435659:	endbr64 
  43565d:	push   rbp
  43565e:	mov    rbp,rsp
  435661:	sub    rsp,0x10
  435665:	mov    QWORD PTR [rbp-0x8],rdi
  435669:	mov    QWORD PTR [rbp-0x10],rsi
  43566d:	mov    rax,QWORD PTR [rbp-0x8]
  435671:	mov    edx,0x50
  435676:	mov    esi,0x0
  43567b:	mov    rdi,rax
  43567e:	call   4061c0 <memset@plt>
  435683:	cmp    QWORD PTR [rbp-0x10],0x0
  435688:	je     435690 <flatcc_json_printer_init@@Base+0x37>
  43568a:	mov    rax,QWORD PTR [rbp-0x10]
  43568e:	jmp    43569a <flatcc_json_printer_init@@Base+0x41>
  435690:	mov    rax,QWORD PTR [rip+0xf939]        # 444fd0 <stdout@GLIBC_2.2.5>
  435697:	mov    rax,QWORD PTR [rax]
  43569a:	mov    rdx,QWORD PTR [rbp-0x8]
  43569e:	mov    QWORD PTR [rdx+0x40],rax
  4356a2:	mov    rax,QWORD PTR [rbp-0x8]
  4356a6:	lea    rdx,[rip+0xfffffffffffffe69]        # 435516 <flatcc_json_printer_table_as_nested_root@@Base+0x106>
  4356ad:	mov    QWORD PTR [rax+0x48],rdx
  4356b1:	mov    edi,0x4040
  4356b6:	call   406230 <malloc@plt>
  4356bb:	mov    rdx,rax
  4356be:	mov    rax,QWORD PTR [rbp-0x8]
  4356c2:	mov    QWORD PTR [rax],rdx
  4356c5:	mov    rax,QWORD PTR [rbp-0x8]
  4356c9:	mov    rax,QWORD PTR [rax]
  4356cc:	test   rax,rax
  4356cf:	jne    4356db <flatcc_json_printer_init@@Base+0x82>
  4356d1:	mov    eax,0xffffffff
  4356d6:	jmp    435761 <flatcc_json_printer_init@@Base+0x108>
  4356db:	mov    rax,QWORD PTR [rbp-0x8]
  4356df:	mov    BYTE PTR [rax+0x30],0x1
  4356e3:	mov    rax,QWORD PTR [rbp-0x8]
  4356e7:	mov    QWORD PTR [rax+0x8],0x4040
  4356ef:	mov    rax,QWORD PTR [rbp-0x8]
  4356f3:	mov    QWORD PTR [rax+0x10],0x4000
  4356fb:	mov    rax,QWORD PTR [rbp-0x8]
  4356ff:	mov    rdx,QWORD PTR [rax]
  435702:	mov    rax,QWORD PTR [rbp-0x8]
  435706:	mov    QWORD PTR [rax+0x28],rdx
  43570a:	mov    rax,QWORD PTR [rbp-0x8]
  43570e:	mov    rdx,QWORD PTR [rax]
  435711:	mov    rax,QWORD PTR [rbp-0x8]
  435715:	mov    rax,QWORD PTR [rax+0x10]
  435719:	add    rdx,rax
  43571c:	mov    rax,QWORD PTR [rbp-0x8]
  435720:	mov    QWORD PTR [rax+0x20],rdx
  435724:	mov    rax,QWORD PTR [rbp-0x8]
  435728:	mov    rax,QWORD PTR [rax+0x10]
  43572c:	lea    rdx,[rax+0x40]
  435730:	mov    rax,QWORD PTR [rbp-0x8]
  435734:	mov    rax,QWORD PTR [rax+0x8]
  435738:	cmp    rdx,rax
  43573b:	jbe    43575c <flatcc_json_printer_init@@Base+0x103>
  43573d:	lea    rcx,[rip+0x739c]        # 43cae0 <flatcc_builder_padding_base@@Base+0x3880>
  435744:	mov    edx,0x47b
  435749:	lea    rsi,[rip+0x6d38]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  435750:	lea    rdi,[rip+0x6e01]        # 43c558 <flatcc_builder_padding_base@@Base+0x32f8>
  435757:	call   4061b0 <__assert_fail@plt>
  43575c:	mov    eax,0x0
  435761:	leave  
  435762:	ret    
  435763:	endbr64 
  435767:	push   rbp
  435768:	mov    rbp,rsp
  43576b:	sub    rsp,0x10
  43576f:	mov    QWORD PTR [rbp-0x8],rdi
  435773:	mov    DWORD PTR [rbp-0xc],esi
  435776:	mov    rax,QWORD PTR [rbp-0x8]
  43577a:	mov    rdx,QWORD PTR [rax+0x28]
  43577e:	mov    rax,QWORD PTR [rbp-0x8]
  435782:	mov    rax,QWORD PTR [rax+0x20]
  435786:	cmp    rdx,rax
  435789:	jb     4357d3 <flatcc_json_printer_init@@Base+0x17a>
  43578b:	mov    rax,QWORD PTR [rbp-0x8]
  43578f:	mov    esi,0x3
  435794:	mov    rdi,rax
  435797:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  43579c:	mov    rax,QWORD PTR [rbp-0x8]
  4357a0:	mov    rdx,QWORD PTR [rax+0x18]
  4357a4:	mov    rax,QWORD PTR [rbp-0x8]
  4357a8:	mov    rcx,QWORD PTR [rax+0x28]
  4357ac:	mov    rax,QWORD PTR [rbp-0x8]
  4357b0:	mov    rax,QWORD PTR [rax]
  4357b3:	sub    rcx,rax
  4357b6:	mov    rax,rcx
  4357b9:	add    rdx,rax
  4357bc:	mov    rax,QWORD PTR [rbp-0x8]
  4357c0:	mov    QWORD PTR [rax+0x18],rdx
  4357c4:	mov    rax,QWORD PTR [rbp-0x8]
  4357c8:	mov    rdx,QWORD PTR [rax]
  4357cb:	mov    rax,QWORD PTR [rbp-0x8]
  4357cf:	mov    QWORD PTR [rax+0x28],rdx
  4357d3:	mov    rax,QWORD PTR [rbp-0x8]
  4357d7:	mov    rax,QWORD PTR [rax+0x28]
  4357db:	mov    BYTE PTR [rax],0x0
  4357de:	nop
  4357df:	leave  
  4357e0:	ret    

00000000004357e1 <flatcc_json_printer_init_buffer@@Base>:
  4357e1:	endbr64 
  4357e5:	push   rbp
  4357e6:	mov    rbp,rsp
  4357e9:	sub    rsp,0x20
  4357ed:	mov    QWORD PTR [rbp-0x8],rdi
  4357f1:	mov    QWORD PTR [rbp-0x10],rsi
  4357f5:	mov    QWORD PTR [rbp-0x18],rdx
  4357f9:	cmp    QWORD PTR [rbp-0x18],0x3f
  4357fe:	ja     43581f <flatcc_json_printer_init_buffer@@Base+0x3e>
  435800:	lea    rcx,[rip+0x72f9]        # 43cb00 <flatcc_builder_padding_base@@Base+0x38a0>
  435807:	mov    edx,0x48d
  43580c:	lea    rsi,[rip+0x6c75]        # 43c488 <flatcc_builder_padding_base@@Base+0x3228>
  435813:	lea    rdi,[rip+0x6d7e]        # 43c598 <flatcc_builder_padding_base@@Base+0x3338>
  43581a:	call   4061b0 <__assert_fail@plt>
  43581f:	cmp    QWORD PTR [rbp-0x18],0x3f
  435824:	ja     43582d <flatcc_json_printer_init_buffer@@Base+0x4c>
  435826:	mov    eax,0xffffffff
  43582b:	jmp    4358ab <flatcc_json_printer_init_buffer@@Base+0xca>
  43582d:	mov    rax,QWORD PTR [rbp-0x8]
  435831:	mov    edx,0x50
  435836:	mov    esi,0x0
  43583b:	mov    rdi,rax
  43583e:	call   4061c0 <memset@plt>
  435843:	mov    rax,QWORD PTR [rbp-0x8]
  435847:	mov    rdx,QWORD PTR [rbp-0x10]
  43584b:	mov    QWORD PTR [rax],rdx
  43584e:	mov    rax,QWORD PTR [rbp-0x8]
  435852:	mov    rdx,QWORD PTR [rbp-0x18]
  435856:	mov    QWORD PTR [rax+0x8],rdx
  43585a:	mov    rax,QWORD PTR [rbp-0x8]
  43585e:	mov    rax,QWORD PTR [rax+0x8]
  435862:	lea    rdx,[rax-0x40]
  435866:	mov    rax,QWORD PTR [rbp-0x8]
  43586a:	mov    QWORD PTR [rax+0x10],rdx
  43586e:	mov    rax,QWORD PTR [rbp-0x8]
  435872:	mov    rdx,QWORD PTR [rax]
  435875:	mov    rax,QWORD PTR [rbp-0x8]
  435879:	mov    QWORD PTR [rax+0x28],rdx
  43587d:	mov    rax,QWORD PTR [rbp-0x8]
  435881:	mov    rdx,QWORD PTR [rax]
  435884:	mov    rax,QWORD PTR [rbp-0x8]
  435888:	mov    rax,QWORD PTR [rax+0x10]
  43588c:	add    rdx,rax
  43588f:	mov    rax,QWORD PTR [rbp-0x8]
  435893:	mov    QWORD PTR [rax+0x20],rdx
  435897:	mov    rax,QWORD PTR [rbp-0x8]
  43589b:	lea    rdx,[rip+0xfffffffffffffec1]        # 435763 <flatcc_json_printer_init@@Base+0x10a>
  4358a2:	mov    QWORD PTR [rax+0x48],rdx
  4358a6:	mov    eax,0x0
  4358ab:	leave  
  4358ac:	ret    
  4358ad:	endbr64 
  4358b1:	push   rbp
  4358b2:	mov    rbp,rsp
  4358b5:	sub    rsp,0x20
  4358b9:	mov    QWORD PTR [rbp-0x18],rdi
  4358bd:	mov    DWORD PTR [rbp-0x1c],esi
  4358c0:	mov    rax,QWORD PTR [rbp-0x18]
  4358c4:	mov    rdx,QWORD PTR [rax+0x28]
  4358c8:	mov    rax,QWORD PTR [rbp-0x18]
  4358cc:	mov    rax,QWORD PTR [rax]
  4358cf:	sub    rdx,rax
  4358d2:	mov    rax,rdx
  4358d5:	mov    QWORD PTR [rbp-0x10],rax
  4358d9:	mov    rax,QWORD PTR [rbp-0x18]
  4358dd:	mov    rax,QWORD PTR [rax+0x28]
  4358e1:	mov    BYTE PTR [rax],0x0
  4358e4:	mov    rax,QWORD PTR [rbp-0x18]
  4358e8:	mov    rdx,QWORD PTR [rax+0x28]
  4358ec:	mov    rax,QWORD PTR [rbp-0x18]
  4358f0:	mov    rax,QWORD PTR [rax+0x20]
  4358f4:	cmp    rdx,rax
  4358f7:	jb     4359c9 <flatcc_json_printer_init_buffer@@Base+0x1e8>
  4358fd:	mov    rax,QWORD PTR [rbp-0x18]
  435901:	mov    rax,QWORD PTR [rax+0x8]
  435905:	lea    rdx,[rax+rax*1]
  435909:	mov    rax,QWORD PTR [rbp-0x18]
  43590d:	mov    rax,QWORD PTR [rax]
  435910:	mov    rsi,rdx
  435913:	mov    rdi,rax
  435916:	call   406240 <realloc@plt>
  43591b:	mov    QWORD PTR [rbp-0x8],rax
  43591f:	cmp    QWORD PTR [rbp-0x8],0x0
  435924:	jne    43595f <flatcc_json_printer_init_buffer@@Base+0x17e>
  435926:	mov    rax,QWORD PTR [rbp-0x18]
  43592a:	mov    esi,0x3
  43592f:	mov    rdi,rax
  435932:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  435937:	mov    rax,QWORD PTR [rbp-0x18]
  43593b:	mov    rdx,QWORD PTR [rax+0x18]
  43593f:	mov    rax,QWORD PTR [rbp-0x10]
  435943:	add    rdx,rax
  435946:	mov    rax,QWORD PTR [rbp-0x18]
  43594a:	mov    QWORD PTR [rax+0x18],rdx
  43594e:	mov    rax,QWORD PTR [rbp-0x18]
  435952:	mov    rdx,QWORD PTR [rax]
  435955:	mov    rax,QWORD PTR [rbp-0x18]
  435959:	mov    QWORD PTR [rax+0x28],rdx
  43595d:	jmp    4359bc <flatcc_json_printer_init_buffer@@Base+0x1db>
  43595f:	mov    rax,QWORD PTR [rbp-0x18]
  435963:	mov    rax,QWORD PTR [rax+0x8]
  435967:	lea    rdx,[rax+rax*1]
  43596b:	mov    rax,QWORD PTR [rbp-0x18]
  43596f:	mov    QWORD PTR [rax+0x8],rdx
  435973:	mov    rax,QWORD PTR [rbp-0x18]
  435977:	mov    rax,QWORD PTR [rax+0x8]
  43597b:	lea    rdx,[rax-0x40]
  43597f:	mov    rax,QWORD PTR [rbp-0x18]
  435983:	mov    QWORD PTR [rax+0x10],rdx
  435987:	mov    rax,QWORD PTR [rbp-0x18]
  43598b:	mov    rdx,QWORD PTR [rbp-0x8]
  43598f:	mov    QWORD PTR [rax],rdx
  435992:	mov    rdx,QWORD PTR [rbp-0x8]
  435996:	mov    rax,QWORD PTR [rbp-0x10]
  43599a:	add    rdx,rax
  43599d:	mov    rax,QWORD PTR [rbp-0x18]
  4359a1:	mov    QWORD PTR [rax+0x28],rdx
  4359a5:	mov    rax,QWORD PTR [rbp-0x18]
  4359a9:	mov    rdx,QWORD PTR [rax+0x10]
  4359ad:	mov    rax,QWORD PTR [rbp-0x8]
  4359b1:	add    rdx,rax
  4359b4:	mov    rax,QWORD PTR [rbp-0x18]
  4359b8:	mov    QWORD PTR [rax+0x20],rdx
  4359bc:	mov    rax,QWORD PTR [rbp-0x18]
  4359c0:	mov    rax,QWORD PTR [rax+0x28]
  4359c4:	mov    BYTE PTR [rax],0x0
  4359c7:	jmp    4359ca <flatcc_json_printer_init_buffer@@Base+0x1e9>
  4359c9:	nop
  4359ca:	leave  
  4359cb:	ret    

00000000004359cc <flatcc_json_printer_init_dynamic_buffer@@Base>:
  4359cc:	endbr64 
  4359d0:	push   rbp
  4359d1:	mov    rbp,rsp
  4359d4:	sub    rsp,0x10
  4359d8:	mov    QWORD PTR [rbp-0x8],rdi
  4359dc:	mov    QWORD PTR [rbp-0x10],rsi
  4359e0:	cmp    QWORD PTR [rbp-0x10],0x0
  4359e5:	jne    4359ef <flatcc_json_printer_init_dynamic_buffer@@Base+0x23>
  4359e7:	mov    QWORD PTR [rbp-0x10],0x1000
  4359ef:	cmp    QWORD PTR [rbp-0x10],0x3f
  4359f4:	ja     4359fe <flatcc_json_printer_init_dynamic_buffer@@Base+0x32>
  4359f6:	mov    QWORD PTR [rbp-0x10],0x40
  4359fe:	mov    rax,QWORD PTR [rbp-0x8]
  435a02:	mov    edx,0x50
  435a07:	mov    esi,0x0
  435a0c:	mov    rdi,rax
  435a0f:	call   4061c0 <memset@plt>
  435a14:	mov    rax,QWORD PTR [rbp-0x10]
  435a18:	mov    rdi,rax
  435a1b:	call   406230 <malloc@plt>
  435a20:	mov    rdx,rax
  435a23:	mov    rax,QWORD PTR [rbp-0x8]
  435a27:	mov    QWORD PTR [rax],rdx
  435a2a:	mov    rax,QWORD PTR [rbp-0x8]
  435a2e:	mov    BYTE PTR [rax+0x30],0x1
  435a32:	mov    rax,QWORD PTR [rbp-0x8]
  435a36:	mov    rdx,QWORD PTR [rbp-0x10]
  435a3a:	mov    QWORD PTR [rax+0x8],rdx
  435a3e:	mov    rax,QWORD PTR [rbp-0x8]
  435a42:	mov    rax,QWORD PTR [rax+0x8]
  435a46:	lea    rdx,[rax-0x40]
  435a4a:	mov    rax,QWORD PTR [rbp-0x8]
  435a4e:	mov    QWORD PTR [rax+0x10],rdx
  435a52:	mov    rax,QWORD PTR [rbp-0x8]
  435a56:	mov    rdx,QWORD PTR [rax]
  435a59:	mov    rax,QWORD PTR [rbp-0x8]
  435a5d:	mov    QWORD PTR [rax+0x28],rdx
  435a61:	mov    rax,QWORD PTR [rbp-0x8]
  435a65:	mov    rdx,QWORD PTR [rax]
  435a68:	mov    rax,QWORD PTR [rbp-0x8]
  435a6c:	mov    rax,QWORD PTR [rax+0x10]
  435a70:	add    rdx,rax
  435a73:	mov    rax,QWORD PTR [rbp-0x8]
  435a77:	mov    QWORD PTR [rax+0x20],rdx
  435a7b:	mov    rax,QWORD PTR [rbp-0x8]
  435a7f:	lea    rdx,[rip+0xfffffffffffffe27]        # 4358ad <flatcc_json_printer_init_buffer@@Base+0xcc>
  435a86:	mov    QWORD PTR [rax+0x48],rdx
  435a8a:	mov    rax,QWORD PTR [rbp-0x8]
  435a8e:	mov    rax,QWORD PTR [rax]
  435a91:	test   rax,rax
  435a94:	jne    435aae <flatcc_json_printer_init_dynamic_buffer@@Base+0xe2>
  435a96:	mov    rax,QWORD PTR [rbp-0x8]
  435a9a:	mov    esi,0x3
  435a9f:	mov    rdi,rax
  435aa2:	call   42a168 <flatcc_json_parser_struct_as_root@@Base+0x433>
  435aa7:	mov    eax,0xffffffff
  435aac:	jmp    435ab3 <flatcc_json_printer_init_dynamic_buffer@@Base+0xe7>
  435aae:	mov    eax,0x0
  435ab3:	leave  
  435ab4:	ret    

0000000000435ab5 <flatcc_json_printer_get_buffer@@Base>:
  435ab5:	endbr64 
  435ab9:	push   rbp
  435aba:	mov    rbp,rsp
  435abd:	sub    rsp,0x10
  435ac1:	mov    QWORD PTR [rbp-0x8],rdi
  435ac5:	mov    QWORD PTR [rbp-0x10],rsi
  435ac9:	mov    rax,QWORD PTR [rbp-0x8]
  435acd:	mov    rax,QWORD PTR [rax+0x48]
  435ad1:	mov    rdx,QWORD PTR [rbp-0x8]
  435ad5:	mov    esi,0x0
  435ada:	mov    rdi,rdx
  435add:	call   rax
  435adf:	cmp    QWORD PTR [rbp-0x10],0x0
  435ae4:	je     435b05 <flatcc_json_printer_get_buffer@@Base+0x50>
  435ae6:	mov    rax,QWORD PTR [rbp-0x8]
  435aea:	mov    rdx,QWORD PTR [rax+0x28]
  435aee:	mov    rax,QWORD PTR [rbp-0x8]
  435af2:	mov    rax,QWORD PTR [rax]
  435af5:	sub    rdx,rax
  435af8:	mov    rax,rdx
  435afb:	mov    rdx,rax
  435afe:	mov    rax,QWORD PTR [rbp-0x10]
  435b02:	mov    QWORD PTR [rax],rdx
  435b05:	mov    rax,QWORD PTR [rbp-0x8]
  435b09:	mov    rax,QWORD PTR [rax]
  435b0c:	leave  
  435b0d:	ret    

0000000000435b0e <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  435b0e:	endbr64 
  435b12:	push   rbp
  435b13:	mov    rbp,rsp
  435b16:	sub    rsp,0x20
  435b1a:	mov    QWORD PTR [rbp-0x18],rdi
  435b1e:	mov    QWORD PTR [rbp-0x20],rsi
  435b22:	mov    rdx,QWORD PTR [rbp-0x20]
  435b26:	mov    rax,QWORD PTR [rbp-0x18]
  435b2a:	mov    rsi,rdx
  435b2d:	mov    rdi,rax
  435b30:	call   435ab5 <flatcc_json_printer_get_buffer@@Base>
  435b35:	mov    QWORD PTR [rbp-0x8],rax
  435b39:	mov    rax,QWORD PTR [rbp-0x18]
  435b3d:	mov    edx,0x50
  435b42:	mov    esi,0x0
  435b47:	mov    rdi,rax
  435b4a:	call   4061c0 <memset@plt>
  435b4f:	mov    rax,QWORD PTR [rbp-0x8]
  435b53:	leave  
  435b54:	ret    

0000000000435b55 <flatcc_json_printer_clear@@Base>:
  435b55:	endbr64 
  435b59:	push   rbp
  435b5a:	mov    rbp,rsp
  435b5d:	sub    rsp,0x10
  435b61:	mov    QWORD PTR [rbp-0x8],rdi
  435b65:	mov    rax,QWORD PTR [rbp-0x8]
  435b69:	movzx  eax,BYTE PTR [rax+0x30]
  435b6d:	test   al,al
  435b6f:	je     435b8c <flatcc_json_printer_clear@@Base+0x37>
  435b71:	mov    rax,QWORD PTR [rbp-0x8]
  435b75:	mov    rax,QWORD PTR [rax]
  435b78:	test   rax,rax
  435b7b:	je     435b8c <flatcc_json_printer_clear@@Base+0x37>
  435b7d:	mov    rax,QWORD PTR [rbp-0x8]
  435b81:	mov    rax,QWORD PTR [rax]
  435b84:	mov    rdi,rax
  435b87:	call   406160 <free@plt>
  435b8c:	mov    rax,QWORD PTR [rbp-0x8]
  435b90:	mov    edx,0x50
  435b95:	mov    esi,0x0
  435b9a:	mov    rdi,rax
  435b9d:	call   4061c0 <memset@plt>
  435ba2:	nop
  435ba3:	leave  
  435ba4:	ret    
  435ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435baf:	nop

0000000000435bb0 <__libc_csu_init@@Base>:
  435bb0:	endbr64 
  435bb4:	push   r15
  435bb6:	lea    r15,[rip+0xf1d3]        # 444d90 <flatcc_builder_padding_base@@Base+0xbb30>
  435bbd:	push   r14
  435bbf:	mov    r14,rdx
  435bc2:	push   r13
  435bc4:	mov    r13,rsi
  435bc7:	push   r12
  435bc9:	mov    r12d,edi
  435bcc:	push   rbp
  435bcd:	lea    rbp,[rip+0xf1c4]        # 444d98 <flatcc_builder_padding_base@@Base+0xbb38>
  435bd4:	push   rbx
  435bd5:	sub    rbp,r15
  435bd8:	sub    rsp,0x8
  435bdc:	call   406000 <free@plt-0x160>
  435be1:	sar    rbp,0x3
  435be5:	je     435c06 <__libc_csu_init@@Base+0x56>
  435be7:	xor    ebx,ebx
  435be9:	nop    DWORD PTR [rax+0x0]
  435bf0:	mov    rdx,r14
  435bf3:	mov    rsi,r13
  435bf6:	mov    edi,r12d
  435bf9:	call   QWORD PTR [r15+rbx*8]
  435bfd:	add    rbx,0x1
  435c01:	cmp    rbp,rbx
  435c04:	jne    435bf0 <__libc_csu_init@@Base+0x40>
  435c06:	add    rsp,0x8
  435c0a:	pop    rbx
  435c0b:	pop    rbp
  435c0c:	pop    r12
  435c0e:	pop    r13
  435c10:	pop    r14
  435c12:	pop    r15
  435c14:	ret    
  435c15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000435c20 <__libc_csu_fini@@Base>:
  435c20:	endbr64 
  435c24:	ret    

Disassembly of section .fini:

0000000000435c28 <.fini>:
  435c28:	endbr64 
  435c2c:	sub    rsp,0x8
  435c30:	add    rsp,0x8
  435c34:	ret    
