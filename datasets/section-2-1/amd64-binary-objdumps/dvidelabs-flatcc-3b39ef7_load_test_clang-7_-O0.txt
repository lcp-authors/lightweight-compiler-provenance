
../repos/dvidelabs-flatcc-3b39ef7/test/load_test/load_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe9]        # 410ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <flatcc_builder_padding_base@@Base+0x4888>
  403026:	jmp    QWORD PTR [rip+0xdfe4]        # 411010 <flatcc_builder_padding_base@@Base+0x4890>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xdfe2]        # 411018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xdfda]        # 411020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <fclose@plt>:
  403050:	jmp    QWORD PTR [rip+0xdfd2]        # 411028 <fclose@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0xdfca]        # 411030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0xdfc2]        # 411038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <gettimeofday@plt>:
  403080:	jmp    QWORD PTR [rip+0xdfba]        # 411040 <gettimeofday@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <__assert_fail@plt>:
  403090:	jmp    QWORD PTR [rip+0xdfb2]        # 411048 <__assert_fail@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memset@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xdfaa]        # 411050 <memset@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memchr@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xdfa2]        # 411058 <memchr@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcmp@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xdf9a]        # 411060 <memcmp@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <strcmp@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xdf92]        # 411068 <strcmp@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <memcpy@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xdf8a]        # 411070 <memcpy@GLIBC_2.14>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <malloc@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xdf82]        # 411078 <malloc@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <realloc@plt>:
  403100:	jmp    QWORD PTR [rip+0xdf7a]        # 411080 <realloc@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

0000000000403110 <fopen@plt>:
  403110:	jmp    QWORD PTR [rip+0xdf72]        # 411088 <fopen@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <free@plt-0x10>

0000000000403120 <fwrite@plt>:
  403120:	jmp    QWORD PTR [rip+0xdf6a]        # 411090 <fwrite@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <free@plt-0x10>

0000000000403130 <posix_memalign@plt>:
  403130:	jmp    QWORD PTR [rip+0xdf62]        # 411098 <posix_memalign@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403140 <_start@@Base>:
  403140:	endbr64 
  403144:	xor    ebp,ebp
  403146:	mov    r9,rdx
  403149:	pop    rsi
  40314a:	mov    rdx,rsp
  40314d:	and    rsp,0xfffffffffffffff0
  403151:	push   rax
  403152:	push   rsp
  403153:	mov    r8,0x40b3d0
  40315a:	mov    rcx,0x40b360
  403161:	mov    rdi,0x403230
  403168:	call   QWORD PTR [rip+0xde82]        # 410ff0 <__libc_start_main@GLIBC_2.2.5>
  40316e:	hlt    
  40316f:	nop
  403170:	endbr64 
  403174:	ret    
  403175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40317f:	nop
  403180:	mov    eax,0x4110b0
  403185:	cmp    rax,0x4110b0
  40318b:	je     4031a0 <_start@@Base+0x60>
  40318d:	mov    eax,0x0
  403192:	test   rax,rax
  403195:	je     4031a0 <_start@@Base+0x60>
  403197:	mov    edi,0x4110b0
  40319c:	jmp    rax
  40319e:	xchg   ax,ax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	mov    esi,0x4110b0
  4031b5:	sub    rsi,0x4110b0
  4031bc:	mov    rax,rsi
  4031bf:	shr    rsi,0x3f
  4031c3:	sar    rax,0x3
  4031c7:	add    rsi,rax
  4031ca:	sar    rsi,1
  4031cd:	je     4031e0 <_start@@Base+0xa0>
  4031cf:	mov    eax,0x0
  4031d4:	test   rax,rax
  4031d7:	je     4031e0 <_start@@Base+0xa0>
  4031d9:	mov    edi,0x4110b0
  4031de:	jmp    rax
  4031e0:	ret    
  4031e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	endbr64 
  4031f4:	cmp    BYTE PTR [rip+0xdeb5],0x0        # 4110b0 <__bss_start@@Base>
  4031fb:	jne    403210 <_start@@Base+0xd0>
  4031fd:	push   rbp
  4031fe:	mov    rbp,rsp
  403201:	call   403180 <_start@@Base+0x40>
  403206:	mov    BYTE PTR [rip+0xdea3],0x1        # 4110b0 <__bss_start@@Base>
  40320d:	pop    rbp
  40320e:	ret    
  40320f:	nop
  403210:	ret    
  403211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	endbr64 
  403224:	jmp    4031b0 <_start@@Base+0x70>
  403226:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403230 <main@@Base>:
  403230:	push   rbp
  403231:	mov    rbp,rsp
  403234:	sub    rsp,0x220
  40323b:	mov    DWORD PTR [rbp-0x4],0x0
  403242:	mov    DWORD PTR [rbp-0x8],edi
  403245:	mov    QWORD PTR [rbp-0x10],rsi
  403249:	mov    DWORD PTR [rbp-0x1dc],0xa
  403253:	mov    DWORD PTR [rbp-0x1e4],0x0
  40325d:	lea    rsi,[rbp-0x1b0]
  403264:	mov    QWORD PTR [rbp-0x1b8],rsi
  40326b:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403272:	call   404be0 <flatcc_builder_init@@Base>
  403277:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40327e:	mov    DWORD PTR [rbp-0x1ec],eax
  403284:	call   4035f0 <main@@Base+0x3c0>
  403289:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403290:	lea    rsi,[rbp-0x28]
  403294:	mov    DWORD PTR [rbp-0x1f0],eax
  40329a:	call   40a1f0 <flatcc_builder_finalize_buffer@@Base>
  40329f:	mov    QWORD PTR [rbp-0x20],rax
  4032a3:	lea    rdi,[rip+0x8da6]        # 40c050 <_IO_stdin_used@@Base+0x50>
  4032aa:	lea    rsi,[rip+0x8db5]        # 40c066 <_IO_stdin_used@@Base+0x66>
  4032b1:	call   403110 <fopen@plt>
  4032b6:	mov    QWORD PTR [rbp-0x18],rax
  4032ba:	cmp    QWORD PTR [rbp-0x18],0x0
  4032bf:	jne    4032d4 <main@@Base+0xa4>
  4032c5:	mov    DWORD PTR [rbp-0x1e4],0xffffffff
  4032cf:	jmp    40359c <main@@Base+0x36c>
  4032d4:	mov    eax,0x1
  4032d9:	mov    esi,eax
  4032db:	mov    rcx,QWORD PTR [rbp-0x28]
  4032df:	mov    rdi,QWORD PTR [rbp-0x20]
  4032e3:	mov    rdx,QWORD PTR [rbp-0x28]
  4032e7:	mov    r8,QWORD PTR [rbp-0x18]
  4032eb:	mov    QWORD PTR [rbp-0x1f8],rcx
  4032f2:	mov    rcx,r8
  4032f5:	call   403120 <fwrite@plt>
  4032fa:	mov    rcx,QWORD PTR [rbp-0x1f8]
  403301:	cmp    rcx,rax
  403304:	setne  r9b
  403308:	and    r9b,0x1
  40330c:	movzx  r10d,r9b
  403310:	or     r10d,DWORD PTR [rbp-0x1e4]
  403317:	mov    DWORD PTR [rbp-0x1e4],r10d
  40331e:	mov    rdi,QWORD PTR [rbp-0x18]
  403322:	call   403050 <fclose@plt>
  403327:	cmp    DWORD PTR [rbp-0x1e4],0x0
  40332e:	mov    DWORD PTR [rbp-0x1fc],eax
  403334:	je     40333f <main@@Base+0x10f>
  40333a:	jmp    40359c <main@@Base+0x36c>
  40333f:	mov    rsi,QWORD PTR [rbp-0x28]
  403343:	lea    rdi,[rip+0x8d1f]        # 40c069 <_IO_stdin_used@@Base+0x69>
  40334a:	mov    al,0x0
  40334c:	call   403070 <printf@plt>
  403351:	lea    rdi,[rip+0x8d23]        # 40c07b <_IO_stdin_used@@Base+0x7b>
  403358:	mov    DWORD PTR [rbp-0x200],eax
  40335e:	mov    al,0x0
  403360:	call   403070 <printf@plt>
  403365:	mov    DWORD PTR [rbp-0x204],eax
  40336b:	call   403690 <main@@Base+0x460>
  403370:	vmovsd QWORD PTR [rbp-0x1d0],xmm0
  403378:	mov    DWORD PTR [rbp-0x1e0],0x0
  403382:	mov    eax,DWORD PTR [rbp-0x1e0]
  403388:	cmp    eax,DWORD PTR [rbp-0x1dc]
  40338e:	jge    40355f <main@@Base+0x32f>
  403394:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40339b:	call   4035f0 <main@@Base+0x3c0>
  4033a0:	mov    rdi,QWORD PTR [rbp-0x1b8]
  4033a7:	mov    rsi,QWORD PTR [rbp-0x20]
  4033ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4033af:	mov    DWORD PTR [rbp-0x208],eax
  4033b5:	call   40a150 <flatcc_builder_copy_buffer@@Base>
  4033ba:	mov    rdi,QWORD PTR [rbp-0x20]
  4033be:	mov    QWORD PTR [rbp-0x210],rax
  4033c5:	call   403710 <main@@Base+0x4e0>
  4033ca:	mov    QWORD PTR [rbp-0x1c0],rax
  4033d1:	mov    rdi,QWORD PTR [rbp-0x1c0]
  4033d8:	call   403780 <main@@Base+0x550>
  4033dd:	lea    rsi,[rip+0x8ca9]        # 40c08d <_IO_stdin_used@@Base+0x8d>
  4033e4:	mov    rdi,rax
  4033e7:	call   4030d0 <strcmp@plt>
  4033ec:	or     eax,DWORD PTR [rbp-0x1e4]
  4033f2:	mov    DWORD PTR [rbp-0x1e4],eax
  4033f8:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4033ff:	jne    40340a <main@@Base+0x1da>
  403405:	jmp    403429 <main@@Base+0x1f9>
  40340a:	lea    rdi,[rip+0x8c89]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  403411:	lea    rsi,[rip+0x8c8b]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403418:	mov    edx,0x8b
  40341d:	lea    rcx,[rip+0x8ce4]        # 40c108 <_IO_stdin_used@@Base+0x108>
  403424:	call   403090 <__assert_fail@plt>
  403429:	mov    rdi,QWORD PTR [rbp-0x1c0]
  403430:	call   4038c0 <main@@Base+0x690>
  403435:	mov    QWORD PTR [rbp-0x1c8],rax
  40343c:	mov    rdi,QWORD PTR [rbp-0x1c8]
  403443:	call   4039f0 <main@@Base+0x7c0>
  403448:	cmp    rax,0x3e8
  40344e:	setne  cl
  403451:	and    cl,0x1
  403454:	movzx  edx,cl
  403457:	or     edx,DWORD PTR [rbp-0x1e4]
  40345d:	mov    DWORD PTR [rbp-0x1e4],edx
  403463:	cmp    DWORD PTR [rbp-0x1e4],0x0
  40346a:	jne    403475 <main@@Base+0x245>
  403470:	jmp    403494 <main@@Base+0x264>
  403475:	lea    rdi,[rip+0x8c1e]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  40347c:	lea    rsi,[rip+0x8c20]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403483:	mov    edx,0x8f
  403488:	lea    rcx,[rip+0x8c79]        # 40c108 <_IO_stdin_used@@Base+0x108>
  40348f:	call   403090 <__assert_fail@plt>
  403494:	mov    DWORD PTR [rbp-0x1e8],0x0
  40349e:	cmp    DWORD PTR [rbp-0x1e8],0x3e8
  4034a8:	jge    403534 <main@@Base+0x304>
  4034ae:	mov    rdi,QWORD PTR [rbp-0x20]
  4034b2:	mov    rax,QWORD PTR [rbp-0x1c8]
  4034b9:	movsxd rsi,DWORD PTR [rbp-0x1e8]
  4034c0:	mov    QWORD PTR [rbp-0x218],rdi
  4034c7:	mov    rdi,rax
  4034ca:	call   403c40 <main@@Base+0xa10>
  4034cf:	mov    rdi,QWORD PTR [rbp-0x218]
  4034d6:	mov    rsi,rax
  4034d9:	call   403a40 <main@@Base+0x810>
  4034de:	or     eax,DWORD PTR [rbp-0x1e4]
  4034e4:	mov    DWORD PTR [rbp-0x1e4],eax
  4034ea:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4034f1:	jne    4034fc <main@@Base+0x2cc>
  4034f7:	jmp    40351b <main@@Base+0x2eb>
  4034fc:	lea    rdi,[rip+0x8b97]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  403503:	lea    rsi,[rip+0x8b99]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  40350a:	mov    edx,0x93
  40350f:	lea    rcx,[rip+0x8bf2]        # 40c108 <_IO_stdin_used@@Base+0x108>
  403516:	call   403090 <__assert_fail@plt>
  40351b:	jmp    403520 <main@@Base+0x2f0>
  403520:	mov    eax,DWORD PTR [rbp-0x1e8]
  403526:	add    eax,0x1
  403529:	mov    DWORD PTR [rbp-0x1e8],eax
  40352f:	jmp    40349e <main@@Base+0x26e>
  403534:	cmp    DWORD PTR [rbp-0x1e4],0x0
  40353b:	je     403546 <main@@Base+0x316>
  403541:	jmp    40359c <main@@Base+0x36c>
  403546:	jmp    40354b <main@@Base+0x31b>
  40354b:	mov    eax,DWORD PTR [rbp-0x1e0]
  403551:	add    eax,0x1
  403554:	mov    DWORD PTR [rbp-0x1e0],eax
  40355a:	jmp    403382 <main@@Base+0x152>
  40355f:	call   403690 <main@@Base+0x460>
  403564:	xor    eax,eax
  403566:	mov    ecx,eax
  403568:	vmovsd QWORD PTR [rbp-0x1d8],xmm0
  403570:	vmovsd xmm0,QWORD PTR [rbp-0x1d0]
  403578:	vmovsd xmm1,QWORD PTR [rbp-0x1d8]
  403580:	mov    rsi,QWORD PTR [rbp-0x28]
  403584:	mov    edx,DWORD PTR [rbp-0x1dc]
  40358a:	lea    rdi,[rip+0x8b8e]        # 40c11f <_IO_stdin_used@@Base+0x11f>
  403591:	call   403ce0 <main@@Base+0xab0>
  403596:	mov    DWORD PTR [rbp-0x21c],eax
  40359c:	mov    rdi,QWORD PTR [rbp-0x1b8]
  4035a3:	call   404ea0 <flatcc_builder_clear@@Base>
  4035a8:	mov    rdi,QWORD PTR [rbp-0x20]
  4035ac:	call   403030 <free@plt>
  4035b1:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4035b8:	je     4035d2 <main@@Base+0x3a2>
  4035be:	lea    rdi,[rip+0x8b83]        # 40c148 <_IO_stdin_used@@Base+0x148>
  4035c5:	mov    al,0x0
  4035c7:	call   403070 <printf@plt>
  4035cc:	mov    DWORD PTR [rbp-0x220],eax
  4035d2:	mov    eax,DWORD PTR [rbp-0x1e4]
  4035d8:	add    rsp,0x220
  4035df:	pop    rbp
  4035e0:	ret    
  4035e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4035f0:	push   rbp
  4035f1:	mov    rbp,rsp
  4035f4:	sub    rsp,0x20
  4035f8:	mov    QWORD PTR [rbp-0x8],rdi
  4035fc:	mov    rdi,QWORD PTR [rbp-0x8]
  403600:	call   404e70 <flatcc_builder_reset@@Base>
  403605:	mov    rdi,QWORD PTR [rbp-0x8]
  403609:	mov    DWORD PTR [rbp-0x10],eax
  40360c:	call   403f20 <main@@Base+0xcf0>
  403611:	mov    rdi,QWORD PTR [rbp-0x8]
  403615:	lea    rsi,[rip+0x8a71]        # 40c08d <_IO_stdin_used@@Base+0x8d>
  40361c:	mov    DWORD PTR [rbp-0x14],eax
  40361f:	call   403f70 <main@@Base+0xd40>
  403624:	mov    rdi,QWORD PTR [rbp-0x8]
  403628:	mov    DWORD PTR [rbp-0x18],eax
  40362b:	call   403fb0 <main@@Base+0xd80>
  403630:	mov    DWORD PTR [rbp-0xc],eax
  403633:	cmp    DWORD PTR [rbp-0xc],0x0
  403637:	je     403642 <main@@Base+0x412>
  40363d:	jmp    403661 <main@@Base+0x431>
  403642:	lea    rdi,[rip+0x8b11]        # 40c15a <_IO_stdin_used@@Base+0x15a>
  403649:	lea    rsi,[rip+0x8a53]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403650:	mov    edx,0x38
  403655:	lea    rcx,[rip+0x8b01]        # 40c15d <_IO_stdin_used@@Base+0x15d>
  40365c:	call   403090 <__assert_fail@plt>
  403661:	mov    rdi,QWORD PTR [rbp-0x8]
  403665:	mov    esi,DWORD PTR [rbp-0xc]
  403668:	call   404050 <main@@Base+0xe20>
  40366d:	mov    rdi,QWORD PTR [rbp-0x8]
  403671:	mov    DWORD PTR [rbp-0x1c],eax
  403674:	call   4040b0 <main@@Base+0xe80>
  403679:	xor    esi,esi
  40367b:	mov    DWORD PTR [rbp-0x20],eax
  40367e:	mov    eax,esi
  403680:	add    rsp,0x20
  403684:	pop    rbp
  403685:	ret    
  403686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403690:	push   rbp
  403691:	mov    rbp,rsp
  403694:	sub    rsp,0x20
  403698:	xor    eax,eax
  40369a:	mov    esi,eax
  40369c:	lea    rdi,[rbp-0x10]
  4036a0:	call   403080 <gettimeofday@plt>
  4036a5:	cmp    QWORD PTR [rip+0xddfb],0x0        # 4114a8 <__bss_start@@Base+0x3f8>
  4036ad:	mov    DWORD PTR [rbp-0x14],eax
  4036b0:	jne    4036cc <main@@Base+0x49c>
  4036b6:	mov    rax,QWORD PTR [rbp-0x10]
  4036ba:	mov    QWORD PTR [rip+0xdde7],rax        # 4114a8 <__bss_start@@Base+0x3f8>
  4036c1:	mov    rax,QWORD PTR [rbp-0x8]
  4036c5:	mov    QWORD PTR [rip+0xdde4],rax        # 4114b0 <__bss_start@@Base+0x400>
  4036cc:	vmovsd xmm0,QWORD PTR [rip+0x8934]        # 40c008 <_IO_stdin_used@@Base+0x8>
  4036d4:	mov    rax,QWORD PTR [rbp-0x10]
  4036d8:	sub    rax,QWORD PTR [rip+0xddc9]        # 4114a8 <__bss_start@@Base+0x3f8>
  4036df:	vcvtsi2sd xmm1,xmm1,rax
  4036e4:	mov    rax,QWORD PTR [rbp-0x8]
  4036e8:	sub    rax,QWORD PTR [rip+0xddc1]        # 4114b0 <__bss_start@@Base+0x400>
  4036ef:	vcvtsi2sd xmm2,xmm2,rax
  4036f4:	vdivsd xmm0,xmm2,xmm0
  4036f8:	vaddsd xmm0,xmm1,xmm0
  4036fc:	add    rsp,0x20
  403700:	pop    rbp
  403701:	ret    
  403702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40370c:	nop    DWORD PTR [rax+0x0]
  403710:	push   rbp
  403711:	mov    rbp,rsp
  403714:	sub    rsp,0x20
  403718:	mov    QWORD PTR [rbp-0x8],rdi
  40371c:	lea    rdi,[rip+0x8a66]        # 40c189 <_IO_stdin_used@@Base+0x189>
  403723:	mov    QWORD PTR [rbp-0x10],rdi
  403727:	cmp    QWORD PTR [rbp-0x8],0x0
  40372c:	je     403748 <main@@Base+0x518>
  403732:	mov    rdi,QWORD PTR [rbp-0x8]
  403736:	mov    rsi,QWORD PTR [rbp-0x10]
  40373a:	call   404570 <main@@Base+0x1340>
  40373f:	cmp    eax,0x0
  403742:	jne    403755 <main@@Base+0x525>
  403748:	xor    eax,eax
  40374a:	mov    ecx,eax
  40374c:	mov    QWORD PTR [rbp-0x18],rcx
  403750:	jmp    403775 <main@@Base+0x545>
  403755:	mov    rax,QWORD PTR [rbp-0x8]
  403759:	mov    rdi,QWORD PTR [rbp-0x8]
  40375d:	mov    QWORD PTR [rbp-0x20],rax
  403761:	call   404610 <main@@Base+0x13e0>
  403766:	mov    eax,eax
  403768:	mov    edi,eax
  40376a:	mov    rcx,QWORD PTR [rbp-0x20]
  40376e:	add    rcx,rdi
  403771:	mov    QWORD PTR [rbp-0x18],rcx
  403775:	mov    rax,QWORD PTR [rbp-0x18]
  403779:	add    rsp,0x20
  40377d:	pop    rbp
  40377e:	ret    
  40377f:	nop
  403780:	push   rbp
  403781:	mov    rbp,rsp
  403784:	sub    rsp,0x30
  403788:	mov    QWORD PTR [rbp-0x8],rdi
  40378c:	mov    WORD PTR [rbp-0x12],0x0
  403792:	cmp    QWORD PTR [rbp-0x8],0x0
  403797:	je     4037b1 <main@@Base+0x581>
  40379d:	mov    al,0x1
  40379f:	test   al,0x1
  4037a1:	jne    4037ac <main@@Base+0x57c>
  4037a7:	jmp    4037b1 <main@@Base+0x581>
  4037ac:	jmp    4037d0 <main@@Base+0x5a0>
  4037b1:	lea    rdi,[rip+0x8bac]        # 40c364 <_IO_stdin_used@@Base+0x364>
  4037b8:	lea    rsi,[rip+0x8bcb]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  4037bf:	mov    edx,0x2bb
  4037c4:	lea    rcx,[rip+0x8c38]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4037cb:	call   403090 <__assert_fail@plt>
  4037d0:	mov    WORD PTR [rbp-0x14],0x3
  4037d6:	mov    rax,QWORD PTR [rbp-0x8]
  4037da:	mov    rcx,QWORD PTR [rbp-0x8]
  4037de:	mov    rdi,rcx
  4037e1:	mov    QWORD PTR [rbp-0x28],rax
  4037e5:	call   404680 <main@@Base+0x1450>
  4037ea:	xor    edx,edx
  4037ec:	mov    ecx,edx
  4037ee:	movsxd rdi,eax
  4037f1:	sub    rcx,rdi
  4037f4:	mov    rdi,QWORD PTR [rbp-0x28]
  4037f8:	add    rdi,rcx
  4037fb:	mov    QWORD PTR [rbp-0x20],rdi
  4037ff:	mov    rcx,QWORD PTR [rbp-0x20]
  403803:	mov    rdi,rcx
  403806:	call   4046a0 <main@@Base+0x1470>
  40380b:	movzx  edx,ax
  40380e:	mov    ecx,edx
  403810:	movzx  edx,WORD PTR [rbp-0x14]
  403814:	add    edx,0x3
  403817:	movsxd rdi,edx
  40381a:	shl    rdi,0x1
  40381e:	cmp    rcx,rdi
  403821:	jb     403849 <main@@Base+0x619>
  403827:	mov    rax,QWORD PTR [rbp-0x20]
  40382b:	movzx  ecx,WORD PTR [rbp-0x14]
  40382f:	movsxd rdx,ecx
  403832:	shl    rdx,0x1
  403836:	add    rax,rdx
  403839:	add    rax,0x4
  40383d:	mov    rdi,rax
  403840:	call   4046a0 <main@@Base+0x1470>
  403845:	mov    WORD PTR [rbp-0x12],ax
  403849:	cmp    WORD PTR [rbp-0x12],0x0
  40384e:	je     403892 <main@@Base+0x662>
  403854:	mov    rax,QWORD PTR [rbp-0x8]
  403858:	movzx  ecx,WORD PTR [rbp-0x12]
  40385c:	movsxd rdx,ecx
  40385f:	add    rax,rdx
  403862:	mov    QWORD PTR [rbp-0x10],rax
  403866:	mov    rax,QWORD PTR [rbp-0x10]
  40386a:	add    rax,0x4
  40386e:	mov    rdx,QWORD PTR [rbp-0x10]
  403872:	mov    rdi,rdx
  403875:	mov    QWORD PTR [rbp-0x30],rax
  403879:	call   404610 <main@@Base+0x13e0>
  40387e:	mov    eax,eax
  403880:	mov    edx,eax
  403882:	mov    rdi,QWORD PTR [rbp-0x30]
  403886:	add    rdi,rdx
  403889:	mov    rax,rdi
  40388c:	add    rsp,0x30
  403890:	pop    rbp
  403891:	ret    
  403892:	lea    rdi,[rip+0x8bbb]        # 40c454 <_IO_stdin_used@@Base+0x454>
  403899:	lea    rsi,[rip+0x8aea]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  4038a0:	mov    edx,0x2bb
  4038a5:	lea    rcx,[rip+0x8b57]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4038ac:	call   403090 <__assert_fail@plt>
  4038b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4038c0:	push   rbp
  4038c1:	mov    rbp,rsp
  4038c4:	sub    rsp,0x40
  4038c8:	mov    QWORD PTR [rbp-0x10],rdi
  4038cc:	mov    WORD PTR [rbp-0x1a],0x0
  4038d2:	cmp    QWORD PTR [rbp-0x10],0x0
  4038d7:	je     4038f1 <main@@Base+0x6c1>
  4038dd:	mov    al,0x1
  4038df:	test   al,0x1
  4038e1:	jne    4038ec <main@@Base+0x6bc>
  4038e7:	jmp    4038f1 <main@@Base+0x6c1>
  4038ec:	jmp    403910 <main@@Base+0x6e0>
  4038f1:	lea    rdi,[rip+0x8a6c]        # 40c364 <_IO_stdin_used@@Base+0x364>
  4038f8:	lea    rsi,[rip+0x8a8b]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  4038ff:	mov    edx,0x2c7
  403904:	lea    rcx,[rip+0x8b6a]        # 40c475 <_IO_stdin_used@@Base+0x475>
  40390b:	call   403090 <__assert_fail@plt>
  403910:	mov    WORD PTR [rbp-0x1c],0xb
  403916:	mov    rax,QWORD PTR [rbp-0x10]
  40391a:	mov    rcx,QWORD PTR [rbp-0x10]
  40391e:	mov    rdi,rcx
  403921:	mov    QWORD PTR [rbp-0x30],rax
  403925:	call   404680 <main@@Base+0x1450>
  40392a:	xor    edx,edx
  40392c:	mov    ecx,edx
  40392e:	movsxd rdi,eax
  403931:	sub    rcx,rdi
  403934:	mov    rdi,QWORD PTR [rbp-0x30]
  403938:	add    rdi,rcx
  40393b:	mov    QWORD PTR [rbp-0x28],rdi
  40393f:	mov    rcx,QWORD PTR [rbp-0x28]
  403943:	mov    rdi,rcx
  403946:	call   4046a0 <main@@Base+0x1470>
  40394b:	movzx  edx,ax
  40394e:	mov    ecx,edx
  403950:	movzx  edx,WORD PTR [rbp-0x1c]
  403954:	add    edx,0x3
  403957:	movsxd rdi,edx
  40395a:	shl    rdi,0x1
  40395e:	cmp    rcx,rdi
  403961:	jb     403989 <main@@Base+0x759>
  403967:	mov    rax,QWORD PTR [rbp-0x28]
  40396b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40396f:	movsxd rdx,ecx
  403972:	shl    rdx,0x1
  403976:	add    rax,rdx
  403979:	add    rax,0x4
  40397d:	mov    rdi,rax
  403980:	call   4046a0 <main@@Base+0x1470>
  403985:	mov    WORD PTR [rbp-0x1a],ax
  403989:	cmp    WORD PTR [rbp-0x1a],0x0
  40398e:	je     4039d2 <main@@Base+0x7a2>
  403994:	mov    rax,QWORD PTR [rbp-0x10]
  403998:	movzx  ecx,WORD PTR [rbp-0x1a]
  40399c:	movsxd rdx,ecx
  40399f:	add    rax,rdx
  4039a2:	mov    QWORD PTR [rbp-0x18],rax
  4039a6:	mov    rax,QWORD PTR [rbp-0x18]
  4039aa:	add    rax,0x4
  4039ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4039b2:	mov    rdi,rdx
  4039b5:	mov    QWORD PTR [rbp-0x38],rax
  4039b9:	call   404610 <main@@Base+0x13e0>
  4039be:	mov    eax,eax
  4039c0:	mov    edx,eax
  4039c2:	mov    rdi,QWORD PTR [rbp-0x38]
  4039c6:	add    rdi,rdx
  4039c9:	mov    QWORD PTR [rbp-0x8],rdi
  4039cd:	jmp    4039da <main@@Base+0x7aa>
  4039d2:	mov    QWORD PTR [rbp-0x8],0x0
  4039da:	mov    rax,QWORD PTR [rbp-0x8]
  4039de:	add    rsp,0x40
  4039e2:	pop    rbp
  4039e3:	ret    
  4039e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039ee:	xchg   ax,ax
  4039f0:	push   rbp
  4039f1:	mov    rbp,rsp
  4039f4:	sub    rsp,0x10
  4039f8:	mov    QWORD PTR [rbp-0x8],rdi
  4039fc:	cmp    QWORD PTR [rbp-0x8],0x0
  403a01:	je     403a24 <main@@Base+0x7f4>
  403a07:	mov    rax,QWORD PTR [rbp-0x8]
  403a0b:	add    rax,0xfffffffffffffffc
  403a0f:	mov    rdi,rax
  403a12:	call   404610 <main@@Base+0x13e0>
  403a17:	mov    eax,eax
  403a19:	mov    edi,eax
  403a1b:	mov    QWORD PTR [rbp-0x10],rdi
  403a1f:	jmp    403a31 <main@@Base+0x801>
  403a24:	xor    eax,eax
  403a26:	mov    ecx,eax
  403a28:	mov    QWORD PTR [rbp-0x10],rcx
  403a2c:	jmp    403a31 <main@@Base+0x801>
  403a31:	mov    rax,QWORD PTR [rbp-0x10]
  403a35:	add    rsp,0x10
  403a39:	pop    rbp
  403a3a:	ret    
  403a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a40:	push   rbp
  403a41:	mov    rbp,rsp
  403a44:	sub    rsp,0x40
  403a48:	mov    QWORD PTR [rbp-0x8],rdi
  403a4c:	mov    QWORD PTR [rbp-0x10],rsi
  403a50:	mov    rdi,QWORD PTR [rbp-0x10]
  403a54:	call   403780 <main@@Base+0x550>
  403a59:	mov    QWORD PTR [rbp-0x20],rax
  403a5d:	mov    rdi,QWORD PTR [rbp-0x10]
  403a61:	call   404700 <main@@Base+0x14d0>
  403a66:	mov    QWORD PTR [rbp-0x28],rax
  403a6a:	mov    rdi,QWORD PTR [rbp-0x20]
  403a6e:	call   404830 <main@@Base+0x1600>
  403a73:	cmp    rax,0x2bc
  403a79:	je     403a9e <main@@Base+0x86e>
  403a7f:	lea    rdi,[rip+0xa0cc]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403a86:	lea    rsi,[rip+0x8616]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403a8d:	mov    edx,0x4a
  403a92:	lea    rcx,[rip+0x8a42]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403a99:	call   403090 <__assert_fail@plt>
  403a9e:	mov    rdi,QWORD PTR [rbp-0x28]
  403aa2:	call   404880 <main@@Base+0x1650>
  403aa7:	cmp    rax,0x186a0
  403aad:	je     403ad2 <main@@Base+0x8a2>
  403ab3:	lea    rdi,[rip+0xa098]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403aba:	lea    rsi,[rip+0x85e2]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403ac1:	mov    edx,0x4e
  403ac6:	lea    rcx,[rip+0x8a0e]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403acd:	call   403090 <__assert_fail@plt>
  403ad2:	mov    QWORD PTR [rbp-0x18],0x0
  403ada:	cmp    QWORD PTR [rbp-0x18],0x64
  403adf:	jae    403bb6 <main@@Base+0x986>
  403ae5:	mov    rax,QWORD PTR [rbp-0x20]
  403ae9:	imul   rcx,QWORD PTR [rbp-0x18],0x7
  403aee:	add    rax,rcx
  403af1:	lea    rsi,[rip+0x86dd]        # 40c1d5 <_IO_stdin_used@@Base+0x1d5>
  403af8:	mov    edx,0x7
  403afd:	mov    rdi,rax
  403b00:	call   4030c0 <memcmp@plt>
  403b05:	cmp    eax,0x0
  403b08:	je     403ba0 <main@@Base+0x970>
  403b0e:	mov    rsi,QWORD PTR [rbp-0x18]
  403b12:	cmp    QWORD PTR [rbp-0x20],0x0
  403b17:	mov    QWORD PTR [rbp-0x30],rsi
  403b1b:	je     403b2e <main@@Base+0x8fe>
  403b21:	mov    rax,QWORD PTR [rbp-0x20]
  403b25:	mov    QWORD PTR [rbp-0x38],rax
  403b29:	jmp    403b3e <main@@Base+0x90e>
  403b2e:	lea    rax,[rip+0x8a07]        # 40c53c <_IO_stdin_used@@Base+0x53c>
  403b35:	mov    QWORD PTR [rbp-0x38],rax
  403b39:	jmp    403b3e <main@@Base+0x90e>
  403b3e:	mov    rax,QWORD PTR [rbp-0x38]
  403b42:	lea    rdi,[rip+0x89d3]        # 40c51c <_IO_stdin_used@@Base+0x51c>
  403b49:	mov    rsi,QWORD PTR [rbp-0x30]
  403b4d:	mov    rdx,rax
  403b50:	mov    al,0x0
  403b52:	call   403070 <printf@plt>
  403b57:	mov    rdx,QWORD PTR [rbp-0x20]
  403b5b:	imul   rsi,QWORD PTR [rbp-0x18],0x7
  403b60:	add    rdx,rsi
  403b63:	mov    rsi,QWORD PTR [rbp-0x8]
  403b67:	sub    rdx,rsi
  403b6a:	lea    rdi,[rip+0x89d0]        # 40c541 <_IO_stdin_used@@Base+0x541>
  403b71:	mov    rsi,rdx
  403b74:	mov    DWORD PTR [rbp-0x3c],eax
  403b77:	mov    al,0x0
  403b79:	call   403070 <printf@plt>
  403b7e:	lea    rdi,[rip+0x9fcd]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403b85:	lea    rsi,[rip+0x8517]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403b8c:	mov    edx,0x55
  403b91:	lea    rcx,[rip+0x8943]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403b98:	mov    DWORD PTR [rbp-0x40],eax
  403b9b:	call   403090 <__assert_fail@plt>
  403ba0:	jmp    403ba5 <main@@Base+0x975>
  403ba5:	mov    rax,QWORD PTR [rbp-0x18]
  403ba9:	add    rax,0x1
  403bad:	mov    QWORD PTR [rbp-0x18],rax
  403bb1:	jmp    403ada <main@@Base+0x8aa>
  403bb6:	mov    QWORD PTR [rbp-0x18],0x0
  403bbe:	cmp    QWORD PTR [rbp-0x18],0x64
  403bc3:	jae    403c2a <main@@Base+0x9fa>
  403bc9:	mov    rax,QWORD PTR [rbp-0x28]
  403bcd:	imul   rcx,QWORD PTR [rbp-0x18],0x3e8
  403bd5:	add    rax,rcx
  403bd8:	lea    rsi,[rip+0xd4e1]        # 4110c0 <__bss_start@@Base+0x10>
  403bdf:	mov    edx,0x3e8
  403be4:	mov    rdi,rax
  403be7:	call   4030c0 <memcmp@plt>
  403bec:	cmp    eax,0x0
  403bef:	je     403c14 <main@@Base+0x9e4>
  403bf5:	lea    rdi,[rip+0x9f56]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403bfc:	lea    rsi,[rip+0x84a0]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403c03:	mov    edx,0x5b
  403c08:	lea    rcx,[rip+0x88cc]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403c0f:	call   403090 <__assert_fail@plt>
  403c14:	jmp    403c19 <main@@Base+0x9e9>
  403c19:	mov    rax,QWORD PTR [rbp-0x18]
  403c1d:	add    rax,0x1
  403c21:	mov    QWORD PTR [rbp-0x18],rax
  403c25:	jmp    403bbe <main@@Base+0x98e>
  403c2a:	xor    eax,eax
  403c2c:	add    rsp,0x40
  403c30:	pop    rbp
  403c31:	ret    
  403c32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c3c:	nop    DWORD PTR [rax+0x0]
  403c40:	push   rbp
  403c41:	mov    rbp,rsp
  403c44:	sub    rsp,0x20
  403c48:	mov    QWORD PTR [rbp-0x8],rdi
  403c4c:	mov    QWORD PTR [rbp-0x10],rsi
  403c50:	mov    rsi,QWORD PTR [rbp-0x8]
  403c54:	mov    rdi,QWORD PTR [rbp-0x10]
  403c58:	shl    rdi,0x2
  403c5c:	add    rsi,rdi
  403c5f:	mov    QWORD PTR [rbp-0x18],rsi
  403c63:	mov    rsi,QWORD PTR [rbp-0x8]
  403c67:	mov    rdi,rsi
  403c6a:	call   4048a0 <main@@Base+0x1670>
  403c6f:	cmp    rax,QWORD PTR [rbp-0x10]
  403c73:	jbe    403c8d <main@@Base+0xa5d>
  403c79:	mov    al,0x1
  403c7b:	test   al,0x1
  403c7d:	jne    403c88 <main@@Base+0xa58>
  403c83:	jmp    403c8d <main@@Base+0xa5d>
  403c88:	jmp    403cac <main@@Base+0xa7c>
  403c8d:	lea    rdi,[rip+0x8926]        # 40c5ba <_IO_stdin_used@@Base+0x5ba>
  403c94:	lea    rsi,[rip+0x86ef]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  403c9b:	mov    edx,0x2b5
  403ca0:	lea    rcx,[rip+0x894a]        # 40c5f1 <_IO_stdin_used@@Base+0x5f1>
  403ca7:	call   403090 <__assert_fail@plt>
  403cac:	mov    rax,QWORD PTR [rbp-0x18]
  403cb0:	mov    rcx,QWORD PTR [rbp-0x18]
  403cb4:	mov    rdi,rcx
  403cb7:	mov    QWORD PTR [rbp-0x20],rax
  403cbb:	call   404610 <main@@Base+0x13e0>
  403cc0:	mov    eax,eax
  403cc2:	mov    ecx,eax
  403cc4:	mov    rdi,QWORD PTR [rbp-0x20]
  403cc8:	add    rdi,rcx
  403ccb:	mov    rax,rdi
  403cce:	add    rsp,0x20
  403cd2:	pop    rbp
  403cd3:	ret    
  403cd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cde:	xchg   ax,ax
  403ce0:	push   rbp
  403ce1:	mov    rbp,rsp
  403ce4:	sub    rsp,0x80
  403ceb:	vmovsd xmm2,QWORD PTR [rip+0x8315]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403cf3:	mov    QWORD PTR [rbp-0x8],rdi
  403cf7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  403cfc:	vmovsd QWORD PTR [rbp-0x18],xmm1
  403d01:	mov    QWORD PTR [rbp-0x20],rsi
  403d05:	mov    DWORD PTR [rbp-0x24],edx
  403d08:	mov    QWORD PTR [rbp-0x30],rcx
  403d0c:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  403d11:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  403d16:	vsubsd xmm0,xmm0,xmm1
  403d1a:	vmovsd QWORD PTR [rbp-0x38],xmm0
  403d1f:	mov    rsi,QWORD PTR [rbp-0x8]
  403d23:	lea    rdi,[rip+0x892a]        # 40c654 <_IO_stdin_used@@Base+0x654>
  403d2a:	xor    edx,edx
  403d2c:	mov    al,dl
  403d2e:	mov    BYTE PTR [rbp-0x41],al
  403d31:	vmovsd QWORD PTR [rbp-0x50],xmm2
  403d36:	call   403070 <printf@plt>
  403d3b:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  403d40:	lea    rdi,[rip+0x891c]        # 40c663 <_IO_stdin_used@@Base+0x663>
  403d47:	mov    r8b,0x1
  403d4a:	mov    DWORD PTR [rbp-0x54],eax
  403d4d:	mov    al,r8b
  403d50:	call   403070 <printf@plt>
  403d55:	mov    esi,DWORD PTR [rbp-0x24]
  403d58:	lea    rdi,[rip+0x891c]        # 40c67b <_IO_stdin_used@@Base+0x67b>
  403d5f:	mov    r8b,BYTE PTR [rbp-0x41]
  403d63:	mov    DWORD PTR [rbp-0x58],eax
  403d66:	mov    al,r8b
  403d69:	call   403070 <printf@plt>
  403d6e:	mov    rsi,QWORD PTR [rbp-0x20]
  403d72:	lea    rdi,[rip+0x8912]        # 40c68b <_IO_stdin_used@@Base+0x68b>
  403d79:	mov    r8b,BYTE PTR [rbp-0x41]
  403d7d:	mov    DWORD PTR [rbp-0x5c],eax
  403d80:	mov    al,r8b
  403d83:	call   403070 <printf@plt>
  403d88:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  403d8d:	vmovdqa xmm1,XMMWORD PTR [rip+0x829b]        # 40c030 <_IO_stdin_used@@Base+0x30>
  403d95:	vmovq  xmm2,QWORD PTR [rbp-0x20]
  403d9a:	vpunpckldq xmm1,xmm2,xmm1
  403d9e:	vmovapd xmm2,XMMWORD PTR [rip+0x829a]        # 40c040 <_IO_stdin_used@@Base+0x40>
  403da6:	vsubpd xmm1,xmm1,xmm2
  403daa:	vhaddpd xmm1,xmm1,xmm1
  403dae:	vmulsd xmm0,xmm0,xmm1
  403db2:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  403db7:	vdivsd xmm0,xmm0,xmm1
  403dbb:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403dc0:	lea    rdi,[rip+0x88d7]        # 40c69e <_IO_stdin_used@@Base+0x69e>
  403dc7:	mov    DWORD PTR [rbp-0x60],eax
  403dca:	mov    al,0x1
  403dcc:	call   403070 <printf@plt>
  403dd1:	mov    edx,DWORD PTR [rbp-0x24]
  403dd4:	vcvtsi2sd xmm0,xmm0,edx
  403dd8:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403ddd:	lea    rdi,[rip+0x88d2]        # 40c6b6 <_IO_stdin_used@@Base+0x6b6>
  403de4:	mov    DWORD PTR [rbp-0x64],eax
  403de7:	mov    al,0x1
  403de9:	call   403070 <printf@plt>
  403dee:	cmp    QWORD PTR [rbp-0x30],0x0
  403df3:	mov    DWORD PTR [rbp-0x68],eax
  403df6:	je     403e28 <main@@Base+0xbf8>
  403dfc:	cmp    DWORD PTR [rbp-0x24],0x1
  403e00:	je     403e28 <main@@Base+0xbf8>
  403e06:	vmovsd xmm0,QWORD PTR [rip+0x8202]        # 40c010 <_IO_stdin_used@@Base+0x10>
  403e0e:	mov    rsi,QWORD PTR [rbp-0x30]
  403e12:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403e17:	lea    rdi,[rip+0x88b9]        # 40c6d7 <_IO_stdin_used@@Base+0x6d7>
  403e1e:	mov    al,0x1
  403e20:	call   403070 <printf@plt>
  403e25:	mov    DWORD PTR [rbp-0x6c],eax
  403e28:	vmovsd xmm0,QWORD PTR [rip+0x81e8]        # 40c018 <_IO_stdin_used@@Base+0x18>
  403e30:	vmovsd xmm1,QWORD PTR [rip+0x81e8]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403e38:	vmulsd xmm1,xmm1,QWORD PTR [rbp-0x38]
  403e3d:	mov    eax,DWORD PTR [rbp-0x24]
  403e40:	vcvtsi2sd xmm2,xmm2,eax
  403e44:	vdivsd xmm1,xmm1,xmm2
  403e48:	vmovsd QWORD PTR [rbp-0x40],xmm1
  403e4d:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403e52:	jbe    403e73 <main@@Base+0xc43>
  403e58:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  403e5d:	lea    rdi,[rip+0x8897]        # 40c6fb <_IO_stdin_used@@Base+0x6fb>
  403e64:	mov    al,0x1
  403e66:	call   403070 <printf@plt>
  403e6b:	mov    DWORD PTR [rbp-0x70],eax
  403e6e:	jmp    403f13 <main@@Base+0xce3>
  403e73:	vmovsd xmm0,QWORD PTR [rip+0x818d]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403e7b:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403e80:	jbe    403ead <main@@Base+0xc7d>
  403e86:	vmovsd xmm0,QWORD PTR [rip+0x818a]        # 40c018 <_IO_stdin_used@@Base+0x18>
  403e8e:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403e93:	vdivsd xmm0,xmm1,xmm0
  403e97:	lea    rdi,[rip+0x8875]        # 40c713 <_IO_stdin_used@@Base+0x713>
  403e9e:	mov    al,0x1
  403ea0:	call   403070 <printf@plt>
  403ea5:	mov    DWORD PTR [rbp-0x74],eax
  403ea8:	jmp    403f0e <main@@Base+0xcde>
  403ead:	vmovsd xmm0,QWORD PTR [rip+0x816b]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403eb5:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403eba:	jbe    403ee7 <main@@Base+0xcb7>
  403ec0:	vmovsd xmm0,QWORD PTR [rip+0x8140]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403ec8:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403ecd:	vdivsd xmm0,xmm1,xmm0
  403ed1:	lea    rdi,[rip+0x8853]        # 40c72b <_IO_stdin_used@@Base+0x72b>
  403ed8:	mov    al,0x1
  403eda:	call   403070 <printf@plt>
  403edf:	mov    DWORD PTR [rbp-0x78],eax
  403ee2:	jmp    403f09 <main@@Base+0xcd9>
  403ee7:	vmovsd xmm0,QWORD PTR [rip+0x8131]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403eef:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403ef4:	vdivsd xmm0,xmm1,xmm0
  403ef8:	lea    rdi,[rip+0x8844]        # 40c743 <_IO_stdin_used@@Base+0x743>
  403eff:	mov    al,0x1
  403f01:	call   403070 <printf@plt>
  403f06:	mov    DWORD PTR [rbp-0x7c],eax
  403f09:	jmp    403f0e <main@@Base+0xcde>
  403f0e:	jmp    403f13 <main@@Base+0xce3>
  403f13:	xor    eax,eax
  403f15:	add    rsp,0x80
  403f1c:	pop    rbp
  403f1d:	ret    
  403f1e:	xchg   ax,ax
  403f20:	push   rbp
  403f21:	mov    rbp,rsp
  403f24:	sub    rsp,0x10
  403f28:	mov    QWORD PTR [rbp-0x8],rdi
  403f2c:	mov    rdi,QWORD PTR [rbp-0x8]
  403f30:	lea    rsi,[rip+0x8252]        # 40c189 <_IO_stdin_used@@Base+0x189>
  403f37:	call   4040f0 <main@@Base+0xec0>
  403f3c:	cmp    eax,0x0
  403f3f:	je     403f52 <main@@Base+0xd22>
  403f45:	mov    eax,0xffffffff
  403f4a:	mov    DWORD PTR [rbp-0xc],eax
  403f4d:	jmp    403f5e <main@@Base+0xd2e>
  403f52:	mov    rdi,QWORD PTR [rbp-0x8]
  403f56:	call   404120 <main@@Base+0xef0>
  403f5b:	mov    DWORD PTR [rbp-0xc],eax
  403f5e:	mov    eax,DWORD PTR [rbp-0xc]
  403f61:	add    rsp,0x10
  403f65:	pop    rbp
  403f66:	ret    
  403f67:	nop    WORD PTR [rax+rax*1+0x0]
  403f70:	push   rbp
  403f71:	mov    rbp,rsp
  403f74:	sub    rsp,0x20
  403f78:	mov    QWORD PTR [rbp-0x8],rdi
  403f7c:	mov    QWORD PTR [rbp-0x10],rsi
  403f80:	mov    rdi,QWORD PTR [rbp-0x8]
  403f84:	mov    rsi,QWORD PTR [rbp-0x8]
  403f88:	mov    rax,QWORD PTR [rbp-0x10]
  403f8c:	mov    QWORD PTR [rbp-0x18],rdi
  403f90:	mov    rdi,rsi
  403f93:	mov    rsi,rax
  403f96:	call   409920 <flatcc_builder_create_string_str@@Base>
  403f9b:	mov    rdi,QWORD PTR [rbp-0x18]
  403f9f:	mov    esi,eax
  403fa1:	call   404140 <main@@Base+0xf10>
  403fa6:	add    rsp,0x20
  403faa:	pop    rbp
  403fab:	ret    
  403fac:	nop    DWORD PTR [rax+0x0]
  403fb0:	push   rbp
  403fb1:	mov    rbp,rsp
  403fb4:	sub    rsp,0x20
  403fb8:	mov    QWORD PTR [rbp-0x8],rdi
  403fbc:	mov    rdi,QWORD PTR [rbp-0x8]
  403fc0:	call   4041a0 <main@@Base+0xf70>
  403fc5:	mov    QWORD PTR [rbp-0x10],0x0
  403fcd:	mov    DWORD PTR [rbp-0x18],eax
  403fd0:	cmp    QWORD PTR [rbp-0x10],0x3e8
  403fd8:	jae    404039 <main@@Base+0xe09>
  403fde:	mov    rdi,QWORD PTR [rbp-0x8]
  403fe2:	call   4041c0 <main@@Base+0xf90>
  403fe7:	mov    DWORD PTR [rbp-0x14],eax
  403fea:	cmp    DWORD PTR [rbp-0x14],0x0
  403fee:	je     403ff9 <main@@Base+0xdc9>
  403ff4:	jmp    404018 <main@@Base+0xde8>
  403ff9:	lea    rdi,[rip+0x818e]        # 40c18e <_IO_stdin_used@@Base+0x18e>
  404000:	lea    rsi,[rip+0x809c]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  404007:	mov    edx,0x2a
  40400c:	lea    rcx,[rip+0x817d]        # 40c190 <_IO_stdin_used@@Base+0x190>
  404013:	call   403090 <__assert_fail@plt>
  404018:	mov    rdi,QWORD PTR [rbp-0x8]
  40401c:	mov    esi,DWORD PTR [rbp-0x14]
  40401f:	call   4042a0 <main@@Base+0x1070>
  404024:	mov    QWORD PTR [rbp-0x20],rax
  404028:	mov    rax,QWORD PTR [rbp-0x10]
  40402c:	add    rax,0x1
  404030:	mov    QWORD PTR [rbp-0x10],rax
  404034:	jmp    403fd0 <main@@Base+0xda0>
  404039:	mov    rdi,QWORD PTR [rbp-0x8]
  40403d:	call   4042f0 <main@@Base+0x10c0>
  404042:	add    rsp,0x20
  404046:	pop    rbp
  404047:	ret    
  404048:	nop    DWORD PTR [rax+rax*1+0x0]
  404050:	push   rbp
  404051:	mov    rbp,rsp
  404054:	sub    rsp,0x20
  404058:	mov    QWORD PTR [rbp-0x8],rdi
  40405c:	mov    DWORD PTR [rbp-0xc],esi
  40405f:	cmp    DWORD PTR [rbp-0xc],0x0
  404063:	je     404098 <main@@Base+0xe68>
  404069:	mov    rdi,QWORD PTR [rbp-0x8]
  40406d:	mov    esi,0xb
  404072:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  404077:	mov    QWORD PTR [rbp-0x18],rax
  40407b:	cmp    rax,0x0
  40407f:	je     404098 <main@@Base+0xe68>
  404085:	xor    eax,eax
  404087:	mov    ecx,DWORD PTR [rbp-0xc]
  40408a:	mov    rdx,QWORD PTR [rbp-0x18]
  40408e:	mov    DWORD PTR [rdx],ecx
  404090:	mov    DWORD PTR [rbp-0x1c],eax
  404093:	jmp    4040a5 <main@@Base+0xe75>
  404098:	mov    eax,0xffffffff
  40409d:	mov    DWORD PTR [rbp-0x1c],eax
  4040a0:	jmp    4040a5 <main@@Base+0xe75>
  4040a5:	mov    eax,DWORD PTR [rbp-0x1c]
  4040a8:	add    rsp,0x20
  4040ac:	pop    rbp
  4040ad:	ret    
  4040ae:	xchg   ax,ax
  4040b0:	push   rbp
  4040b1:	mov    rbp,rsp
  4040b4:	sub    rsp,0x10
  4040b8:	mov    QWORD PTR [rbp-0x8],rdi
  4040bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4040c0:	mov    rax,QWORD PTR [rbp-0x8]
  4040c4:	mov    QWORD PTR [rbp-0x10],rdi
  4040c8:	mov    rdi,rax
  4040cb:	call   404430 <main@@Base+0x1200>
  4040d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4040d4:	mov    esi,eax
  4040d6:	call   404540 <main@@Base+0x1310>
  4040db:	add    rsp,0x10
  4040df:	pop    rbp
  4040e0:	ret    
  4040e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4040f0:	push   rbp
  4040f1:	mov    rbp,rsp
  4040f4:	sub    rsp,0x10
  4040f8:	xor    eax,eax
  4040fa:	mov    QWORD PTR [rbp-0x8],rdi
  4040fe:	mov    QWORD PTR [rbp-0x10],rsi
  404102:	mov    rdi,QWORD PTR [rbp-0x8]
  404106:	mov    rsi,QWORD PTR [rbp-0x10]
  40410a:	mov    edx,eax
  40410c:	mov    ecx,eax
  40410e:	call   405e50 <flatcc_builder_start_buffer@@Base>
  404113:	add    rsp,0x10
  404117:	pop    rbp
  404118:	ret    
  404119:	nop    DWORD PTR [rax+0x0]
  404120:	push   rbp
  404121:	mov    rbp,rsp
  404124:	sub    rsp,0x10
  404128:	mov    QWORD PTR [rbp-0x8],rdi
  40412c:	mov    rdi,QWORD PTR [rbp-0x8]
  404130:	mov    esi,0x24
  404135:	call   4074c0 <flatcc_builder_start_table@@Base>
  40413a:	add    rsp,0x10
  40413e:	pop    rbp
  40413f:	ret    
  404140:	push   rbp
  404141:	mov    rbp,rsp
  404144:	sub    rsp,0x20
  404148:	mov    QWORD PTR [rbp-0x8],rdi
  40414c:	mov    DWORD PTR [rbp-0xc],esi
  40414f:	cmp    DWORD PTR [rbp-0xc],0x0
  404153:	je     404188 <main@@Base+0xf58>
  404159:	mov    rdi,QWORD PTR [rbp-0x8]
  40415d:	mov    esi,0x3
  404162:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  404167:	mov    QWORD PTR [rbp-0x18],rax
  40416b:	cmp    rax,0x0
  40416f:	je     404188 <main@@Base+0xf58>
  404175:	xor    eax,eax
  404177:	mov    ecx,DWORD PTR [rbp-0xc]
  40417a:	mov    rdx,QWORD PTR [rbp-0x18]
  40417e:	mov    DWORD PTR [rdx],ecx
  404180:	mov    DWORD PTR [rbp-0x1c],eax
  404183:	jmp    404195 <main@@Base+0xf65>
  404188:	mov    eax,0xffffffff
  40418d:	mov    DWORD PTR [rbp-0x1c],eax
  404190:	jmp    404195 <main@@Base+0xf65>
  404195:	mov    eax,DWORD PTR [rbp-0x1c]
  404198:	add    rsp,0x20
  40419c:	pop    rbp
  40419d:	ret    
  40419e:	xchg   ax,ax
  4041a0:	push   rbp
  4041a1:	mov    rbp,rsp
  4041a4:	sub    rsp,0x10
  4041a8:	mov    QWORD PTR [rbp-0x8],rdi
  4041ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4041b0:	call   407140 <flatcc_builder_start_offset_vector@@Base>
  4041b5:	add    rsp,0x10
  4041b9:	pop    rbp
  4041ba:	ret    
  4041bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4041c0:	push   rbp
  4041c1:	mov    rbp,rsp
  4041c4:	sub    rsp,0x40
  4041c8:	mov    QWORD PTR [rbp-0x8],rdi
  4041cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4041d0:	call   404120 <main@@Base+0xef0>
  4041d5:	mov    rdi,QWORD PTR [rbp-0x8]
  4041d9:	mov    DWORD PTR [rbp-0x14],eax
  4041dc:	call   404310 <main@@Base+0x10e0>
  4041e1:	mov    QWORD PTR [rbp-0x10],0x0
  4041e9:	mov    DWORD PTR [rbp-0x18],eax
  4041ec:	cmp    QWORD PTR [rbp-0x10],0x64
  4041f1:	jae    404223 <main@@Base+0xff3>
  4041f7:	mov    eax,0x7
  4041fc:	mov    edx,eax
  4041fe:	mov    rdi,QWORD PTR [rbp-0x8]
  404202:	lea    rsi,[rip+0x7fcc]        # 40c1d5 <_IO_stdin_used@@Base+0x1d5>
  404209:	call   404330 <main@@Base+0x1100>
  40420e:	mov    QWORD PTR [rbp-0x20],rax
  404212:	mov    rax,QWORD PTR [rbp-0x10]
  404216:	add    rax,0x1
  40421a:	mov    QWORD PTR [rbp-0x10],rax
  40421e:	jmp    4041ec <main@@Base+0xfbc>
  404223:	mov    rdi,QWORD PTR [rbp-0x8]
  404227:	call   404360 <main@@Base+0x1130>
  40422c:	mov    rdi,QWORD PTR [rbp-0x8]
  404230:	mov    DWORD PTR [rbp-0x24],eax
  404233:	call   4043a0 <main@@Base+0x1170>
  404238:	mov    QWORD PTR [rbp-0x10],0x0
  404240:	mov    DWORD PTR [rbp-0x28],eax
  404243:	cmp    QWORD PTR [rbp-0x10],0x64
  404248:	jae    40427a <main@@Base+0x104a>
  40424e:	mov    eax,0x3e8
  404253:	mov    edx,eax
  404255:	mov    rdi,QWORD PTR [rbp-0x8]
  404259:	lea    rsi,[rip+0xce60]        # 4110c0 <__bss_start@@Base+0x10>
  404260:	call   4043c0 <main@@Base+0x1190>
  404265:	mov    QWORD PTR [rbp-0x30],rax
  404269:	mov    rax,QWORD PTR [rbp-0x10]
  40426d:	add    rax,0x1
  404271:	mov    QWORD PTR [rbp-0x10],rax
  404275:	jmp    404243 <main@@Base+0x1013>
  40427a:	mov    rdi,QWORD PTR [rbp-0x8]
  40427e:	call   4043f0 <main@@Base+0x11c0>
  404283:	mov    rdi,QWORD PTR [rbp-0x8]
  404287:	mov    DWORD PTR [rbp-0x34],eax
  40428a:	call   404430 <main@@Base+0x1200>
  40428f:	add    rsp,0x40
  404293:	pop    rbp
  404294:	ret    
  404295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40429f:	nop
  4042a0:	push   rbp
  4042a1:	mov    rbp,rsp
  4042a4:	sub    rsp,0x20
  4042a8:	mov    QWORD PTR [rbp-0x8],rdi
  4042ac:	mov    DWORD PTR [rbp-0xc],esi
  4042af:	cmp    DWORD PTR [rbp-0xc],0x0
  4042b3:	je     4042ce <main@@Base+0x109e>
  4042b9:	mov    rdi,QWORD PTR [rbp-0x8]
  4042bd:	mov    esi,DWORD PTR [rbp-0xc]
  4042c0:	call   406990 <flatcc_builder_offset_vector_push@@Base>
  4042c5:	mov    QWORD PTR [rbp-0x18],rax
  4042c9:	jmp    4042db <main@@Base+0x10ab>
  4042ce:	xor    eax,eax
  4042d0:	mov    ecx,eax
  4042d2:	mov    QWORD PTR [rbp-0x18],rcx
  4042d6:	jmp    4042db <main@@Base+0x10ab>
  4042db:	mov    rax,QWORD PTR [rbp-0x18]
  4042df:	add    rsp,0x20
  4042e3:	pop    rbp
  4042e4:	ret    
  4042e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042ef:	nop
  4042f0:	push   rbp
  4042f1:	mov    rbp,rsp
  4042f4:	sub    rsp,0x10
  4042f8:	mov    QWORD PTR [rbp-0x8],rdi
  4042fc:	mov    rdi,QWORD PTR [rbp-0x8]
  404300:	call   407250 <flatcc_builder_end_offset_vector@@Base>
  404305:	add    rsp,0x10
  404309:	pop    rbp
  40430a:	ret    
  40430b:	nop    DWORD PTR [rax+rax*1+0x0]
  404310:	push   rbp
  404311:	mov    rbp,rsp
  404314:	sub    rsp,0x10
  404318:	mov    QWORD PTR [rbp-0x8],rdi
  40431c:	mov    rdi,QWORD PTR [rbp-0x8]
  404320:	call   4072f0 <flatcc_builder_start_string@@Base>
  404325:	add    rsp,0x10
  404329:	pop    rbp
  40432a:	ret    
  40432b:	nop    DWORD PTR [rax+rax*1+0x0]
  404330:	push   rbp
  404331:	mov    rbp,rsp
  404334:	sub    rsp,0x20
  404338:	mov    QWORD PTR [rbp-0x8],rdi
  40433c:	mov    QWORD PTR [rbp-0x10],rsi
  404340:	mov    QWORD PTR [rbp-0x18],rdx
  404344:	mov    rdi,QWORD PTR [rbp-0x8]
  404348:	mov    rsi,QWORD PTR [rbp-0x10]
  40434c:	mov    rdx,QWORD PTR [rbp-0x18]
  404350:	call   406bb0 <flatcc_builder_append_string@@Base>
  404355:	add    rsp,0x20
  404359:	pop    rbp
  40435a:	ret    
  40435b:	nop    DWORD PTR [rax+rax*1+0x0]
  404360:	push   rbp
  404361:	mov    rbp,rsp
  404364:	sub    rsp,0x10
  404368:	mov    QWORD PTR [rbp-0x8],rdi
  40436c:	mov    rdi,QWORD PTR [rbp-0x8]
  404370:	mov    rax,QWORD PTR [rbp-0x8]
  404374:	mov    QWORD PTR [rbp-0x10],rdi
  404378:	mov    rdi,rax
  40437b:	call   4099c0 <flatcc_builder_end_string@@Base>
  404380:	mov    rdi,QWORD PTR [rbp-0x10]
  404384:	mov    esi,eax
  404386:	call   404140 <main@@Base+0xf10>
  40438b:	add    rsp,0x10
  40438f:	pop    rbp
  404390:	ret    
  404391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40439b:	nop    DWORD PTR [rax+rax*1+0x0]
  4043a0:	push   rbp
  4043a1:	mov    rbp,rsp
  4043a4:	sub    rsp,0x10
  4043a8:	mov    QWORD PTR [rbp-0x8],rdi
  4043ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4043b0:	call   404490 <main@@Base+0x1260>
  4043b5:	add    rsp,0x10
  4043b9:	pop    rbp
  4043ba:	ret    
  4043bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4043c0:	push   rbp
  4043c1:	mov    rbp,rsp
  4043c4:	sub    rsp,0x20
  4043c8:	mov    QWORD PTR [rbp-0x8],rdi
  4043cc:	mov    QWORD PTR [rbp-0x10],rsi
  4043d0:	mov    QWORD PTR [rbp-0x18],rdx
  4043d4:	mov    rdi,QWORD PTR [rbp-0x8]
  4043d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4043dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4043e0:	call   406870 <flatcc_builder_append_vector@@Base>
  4043e5:	add    rsp,0x20
  4043e9:	pop    rbp
  4043ea:	ret    
  4043eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4043f0:	push   rbp
  4043f1:	mov    rbp,rsp
  4043f4:	sub    rsp,0x10
  4043f8:	mov    QWORD PTR [rbp-0x8],rdi
  4043fc:	mov    rdi,QWORD PTR [rbp-0x8]
  404400:	mov    rax,QWORD PTR [rbp-0x8]
  404404:	mov    QWORD PTR [rbp-0x10],rdi
  404408:	mov    rdi,rax
  40440b:	call   404520 <main@@Base+0x12f0>
  404410:	mov    rdi,QWORD PTR [rbp-0x10]
  404414:	mov    esi,eax
  404416:	call   4044c0 <main@@Base+0x1290>
  40441b:	add    rsp,0x10
  40441f:	pop    rbp
  404420:	ret    
  404421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40442b:	nop    DWORD PTR [rax+rax*1+0x0]
  404430:	push   rbp
  404431:	mov    rbp,rsp
  404434:	sub    rsp,0x10
  404438:	mov    QWORD PTR [rbp-0x8],rdi
  40443c:	mov    rdi,QWORD PTR [rbp-0x8]
  404440:	lea    rsi,[rip+0x8313]        # 40c75a <_IO_stdin_used@@Base+0x75a>
  404447:	mov    edx,0x1
  40444c:	call   408080 <flatcc_builder_check_required@@Base>
  404451:	cmp    eax,0x0
  404454:	je     40445f <main@@Base+0x122f>
  40445a:	jmp    40447e <main@@Base+0x124e>
  40445f:	lea    rdi,[rip+0x7d77]        # 40c1dd <_IO_stdin_used@@Base+0x1dd>
  404466:	lea    rsi,[rip+0x7e12]        # 40c27f <_IO_stdin_used@@Base+0x27f>
  40446d:	mov    edx,0xeb
  404472:	lea    rcx,[rip+0x7e80]        # 40c2f9 <_IO_stdin_used@@Base+0x2f9>
  404479:	call   403090 <__assert_fail@plt>
  40447e:	mov    rdi,QWORD PTR [rbp-0x8]
  404482:	call   408150 <flatcc_builder_end_table@@Base>
  404487:	add    rsp,0x10
  40448b:	pop    rbp
  40448c:	ret    
  40448d:	nop    DWORD PTR [rax]
  404490:	push   rbp
  404491:	mov    rbp,rsp
  404494:	sub    rsp,0x10
  404498:	mov    eax,0x1
  40449d:	mov    esi,eax
  40449f:	mov    eax,0xffffffff
  4044a4:	mov    ecx,eax
  4044a6:	mov    QWORD PTR [rbp-0x8],rdi
  4044aa:	mov    rdi,QWORD PTR [rbp-0x8]
  4044ae:	mov    edx,0x1
  4044b3:	call   407060 <flatcc_builder_start_vector@@Base>
  4044b8:	add    rsp,0x10
  4044bc:	pop    rbp
  4044bd:	ret    
  4044be:	xchg   ax,ax
  4044c0:	push   rbp
  4044c1:	mov    rbp,rsp
  4044c4:	sub    rsp,0x20
  4044c8:	mov    QWORD PTR [rbp-0x8],rdi
  4044cc:	mov    DWORD PTR [rbp-0xc],esi
  4044cf:	cmp    DWORD PTR [rbp-0xc],0x0
  4044d3:	je     404508 <main@@Base+0x12d8>
  4044d9:	mov    rdi,QWORD PTR [rbp-0x8]
  4044dd:	mov    esi,0x5
  4044e2:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  4044e7:	mov    QWORD PTR [rbp-0x18],rax
  4044eb:	cmp    rax,0x0
  4044ef:	je     404508 <main@@Base+0x12d8>
  4044f5:	xor    eax,eax
  4044f7:	mov    ecx,DWORD PTR [rbp-0xc]
  4044fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4044fe:	mov    DWORD PTR [rdx],ecx
  404500:	mov    DWORD PTR [rbp-0x1c],eax
  404503:	jmp    404515 <main@@Base+0x12e5>
  404508:	mov    eax,0xffffffff
  40450d:	mov    DWORD PTR [rbp-0x1c],eax
  404510:	jmp    404515 <main@@Base+0x12e5>
  404515:	mov    eax,DWORD PTR [rbp-0x1c]
  404518:	add    rsp,0x20
  40451c:	pop    rbp
  40451d:	ret    
  40451e:	xchg   ax,ax
  404520:	push   rbp
  404521:	mov    rbp,rsp
  404524:	sub    rsp,0x10
  404528:	mov    QWORD PTR [rbp-0x8],rdi
  40452c:	mov    rdi,QWORD PTR [rbp-0x8]
  404530:	call   4085a0 <flatcc_builder_end_vector@@Base>
  404535:	add    rsp,0x10
  404539:	pop    rbp
  40453a:	ret    
  40453b:	nop    DWORD PTR [rax+rax*1+0x0]
  404540:	push   rbp
  404541:	mov    rbp,rsp
  404544:	sub    rsp,0x10
  404548:	mov    QWORD PTR [rbp-0x8],rdi
  40454c:	mov    DWORD PTR [rbp-0xc],esi
  40454f:	mov    rdi,QWORD PTR [rbp-0x8]
  404553:	mov    esi,DWORD PTR [rbp-0xc]
  404556:	call   406190 <flatcc_builder_end_buffer@@Base>
  40455b:	add    rsp,0x10
  40455f:	pop    rbp
  404560:	ret    
  404561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40456b:	nop    DWORD PTR [rax+rax*1+0x0]
  404570:	push   rbp
  404571:	mov    rbp,rsp
  404574:	sub    rsp,0x30
  404578:	mov    QWORD PTR [rbp-0x10],rdi
  40457c:	mov    QWORD PTR [rbp-0x18],rsi
  404580:	mov    DWORD PTR [rbp-0x20],0x0
  404587:	cmp    QWORD PTR [rbp-0x18],0x0
  40458c:	jne    40459e <main@@Base+0x136e>
  404592:	mov    DWORD PTR [rbp-0x4],0x1
  404599:	jmp    4045ff <main@@Base+0x13cf>
  40459e:	mov    eax,0x4
  4045a3:	mov    edx,eax
  4045a5:	lea    rcx,[rbp-0x20]
  4045a9:	mov    rsi,QWORD PTR [rbp-0x18]
  4045ad:	mov    rdi,rcx
  4045b0:	call   403040 <strncpy@plt>
  4045b5:	mov    edi,DWORD PTR [rbp-0x20]
  4045b8:	mov    QWORD PTR [rbp-0x28],rax
  4045bc:	call   404630 <main@@Base+0x1400>
  4045c1:	mov    DWORD PTR [rbp-0x20],eax
  4045c4:	mov    rcx,QWORD PTR [rbp-0x10]
  4045c8:	add    rcx,0x4
  4045cc:	mov    rdi,rcx
  4045cf:	call   404640 <main@@Base+0x1410>
  4045d4:	mov    DWORD PTR [rbp-0x1c],eax
  4045d7:	cmp    DWORD PTR [rbp-0x20],0x0
  4045db:	mov    r8b,0x1
  4045de:	mov    BYTE PTR [rbp-0x29],r8b
  4045e2:	je     4045f4 <main@@Base+0x13c4>
  4045e8:	mov    eax,DWORD PTR [rbp-0x1c]
  4045eb:	cmp    eax,DWORD PTR [rbp-0x20]
  4045ee:	sete   cl
  4045f1:	mov    BYTE PTR [rbp-0x29],cl
  4045f4:	mov    al,BYTE PTR [rbp-0x29]
  4045f7:	and    al,0x1
  4045f9:	movzx  ecx,al
  4045fc:	mov    DWORD PTR [rbp-0x4],ecx
  4045ff:	mov    eax,DWORD PTR [rbp-0x4]
  404602:	add    rsp,0x30
  404606:	pop    rbp
  404607:	ret    
  404608:	nop    DWORD PTR [rax+rax*1+0x0]
  404610:	push   rbp
  404611:	mov    rbp,rsp
  404614:	sub    rsp,0x10
  404618:	mov    QWORD PTR [rbp-0x8],rdi
  40461c:	mov    rdi,QWORD PTR [rbp-0x8]
  404620:	mov    edi,DWORD PTR [rdi]
  404622:	call   404670 <main@@Base+0x1440>
  404627:	add    rsp,0x10
  40462b:	pop    rbp
  40462c:	ret    
  40462d:	nop    DWORD PTR [rax]
  404630:	push   rbp
  404631:	mov    rbp,rsp
  404634:	mov    DWORD PTR [rbp-0x4],edi
  404637:	mov    eax,DWORD PTR [rbp-0x4]
  40463a:	pop    rbp
  40463b:	ret    
  40463c:	nop    DWORD PTR [rax+0x0]
  404640:	push   rbp
  404641:	mov    rbp,rsp
  404644:	sub    rsp,0x10
  404648:	mov    QWORD PTR [rbp-0x8],rdi
  40464c:	mov    rdi,QWORD PTR [rbp-0x8]
  404650:	mov    edi,DWORD PTR [rdi]
  404652:	call   404660 <main@@Base+0x1430>
  404657:	add    rsp,0x10
  40465b:	pop    rbp
  40465c:	ret    
  40465d:	nop    DWORD PTR [rax]
  404660:	push   rbp
  404661:	mov    rbp,rsp
  404664:	mov    DWORD PTR [rbp-0x4],edi
  404667:	mov    eax,DWORD PTR [rbp-0x4]
  40466a:	pop    rbp
  40466b:	ret    
  40466c:	nop    DWORD PTR [rax+0x0]
  404670:	push   rbp
  404671:	mov    rbp,rsp
  404674:	mov    DWORD PTR [rbp-0x4],edi
  404677:	mov    eax,DWORD PTR [rbp-0x4]
  40467a:	pop    rbp
  40467b:	ret    
  40467c:	nop    DWORD PTR [rax+0x0]
  404680:	push   rbp
  404681:	mov    rbp,rsp
  404684:	sub    rsp,0x10
  404688:	mov    QWORD PTR [rbp-0x8],rdi
  40468c:	mov    rdi,QWORD PTR [rbp-0x8]
  404690:	mov    edi,DWORD PTR [rdi]
  404692:	call   4046d0 <main@@Base+0x14a0>
  404697:	add    rsp,0x10
  40469b:	pop    rbp
  40469c:	ret    
  40469d:	nop    DWORD PTR [rax]
  4046a0:	push   rbp
  4046a1:	mov    rbp,rsp
  4046a4:	sub    rsp,0x10
  4046a8:	mov    QWORD PTR [rbp-0x8],rdi
  4046ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4046b0:	movzx  edi,WORD PTR [rdi]
  4046b3:	call   4046e0 <main@@Base+0x14b0>
  4046b8:	movzx  eax,ax
  4046bb:	add    rsp,0x10
  4046bf:	pop    rbp
  4046c0:	ret    
  4046c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d0:	push   rbp
  4046d1:	mov    rbp,rsp
  4046d4:	mov    DWORD PTR [rbp-0x4],edi
  4046d7:	mov    eax,DWORD PTR [rbp-0x4]
  4046da:	pop    rbp
  4046db:	ret    
  4046dc:	nop    DWORD PTR [rax+0x0]
  4046e0:	push   rbp
  4046e1:	mov    rbp,rsp
  4046e4:	mov    ax,di
  4046e7:	mov    WORD PTR [rbp-0x2],ax
  4046eb:	movzx  eax,WORD PTR [rbp-0x2]
  4046ef:	pop    rbp
  4046f0:	ret    
  4046f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404700:	push   rbp
  404701:	mov    rbp,rsp
  404704:	sub    rsp,0x40
  404708:	mov    QWORD PTR [rbp-0x10],rdi
  40470c:	mov    WORD PTR [rbp-0x1a],0x0
  404712:	cmp    QWORD PTR [rbp-0x10],0x0
  404717:	je     404731 <main@@Base+0x1501>
  40471d:	mov    al,0x1
  40471f:	test   al,0x1
  404721:	jne    40472c <main@@Base+0x14fc>
  404727:	jmp    404731 <main@@Base+0x1501>
  40472c:	jmp    404750 <main@@Base+0x1520>
  404731:	lea    rdi,[rip+0x7c2c]        # 40c364 <_IO_stdin_used@@Base+0x364>
  404738:	lea    rsi,[rip+0x7c4b]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  40473f:	mov    edx,0x2c2
  404744:	lea    rcx,[rip+0x7e03]        # 40c54e <_IO_stdin_used@@Base+0x54e>
  40474b:	call   403090 <__assert_fail@plt>
  404750:	mov    WORD PTR [rbp-0x1c],0x5
  404756:	mov    rax,QWORD PTR [rbp-0x10]
  40475a:	mov    rcx,QWORD PTR [rbp-0x10]
  40475e:	mov    rdi,rcx
  404761:	mov    QWORD PTR [rbp-0x30],rax
  404765:	call   404680 <main@@Base+0x1450>
  40476a:	xor    edx,edx
  40476c:	mov    ecx,edx
  40476e:	movsxd rdi,eax
  404771:	sub    rcx,rdi
  404774:	mov    rdi,QWORD PTR [rbp-0x30]
  404778:	add    rdi,rcx
  40477b:	mov    QWORD PTR [rbp-0x28],rdi
  40477f:	mov    rcx,QWORD PTR [rbp-0x28]
  404783:	mov    rdi,rcx
  404786:	call   4046a0 <main@@Base+0x1470>
  40478b:	movzx  edx,ax
  40478e:	mov    ecx,edx
  404790:	movzx  edx,WORD PTR [rbp-0x1c]
  404794:	add    edx,0x3
  404797:	movsxd rdi,edx
  40479a:	shl    rdi,0x1
  40479e:	cmp    rcx,rdi
  4047a1:	jb     4047c9 <main@@Base+0x1599>
  4047a7:	mov    rax,QWORD PTR [rbp-0x28]
  4047ab:	movzx  ecx,WORD PTR [rbp-0x1c]
  4047af:	movsxd rdx,ecx
  4047b2:	shl    rdx,0x1
  4047b6:	add    rax,rdx
  4047b9:	add    rax,0x4
  4047bd:	mov    rdi,rax
  4047c0:	call   4046a0 <main@@Base+0x1470>
  4047c5:	mov    WORD PTR [rbp-0x1a],ax
  4047c9:	cmp    WORD PTR [rbp-0x1a],0x0
  4047ce:	je     404812 <main@@Base+0x15e2>
  4047d4:	mov    rax,QWORD PTR [rbp-0x10]
  4047d8:	movzx  ecx,WORD PTR [rbp-0x1a]
  4047dc:	movsxd rdx,ecx
  4047df:	add    rax,rdx
  4047e2:	mov    QWORD PTR [rbp-0x18],rax
  4047e6:	mov    rax,QWORD PTR [rbp-0x18]
  4047ea:	add    rax,0x4
  4047ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4047f2:	mov    rdi,rdx
  4047f5:	mov    QWORD PTR [rbp-0x38],rax
  4047f9:	call   404610 <main@@Base+0x13e0>
  4047fe:	mov    eax,eax
  404800:	mov    edx,eax
  404802:	mov    rdi,QWORD PTR [rbp-0x38]
  404806:	add    rdi,rdx
  404809:	mov    QWORD PTR [rbp-0x8],rdi
  40480d:	jmp    40481a <main@@Base+0x15ea>
  404812:	mov    QWORD PTR [rbp-0x8],0x0
  40481a:	mov    rax,QWORD PTR [rbp-0x8]
  40481e:	add    rsp,0x40
  404822:	pop    rbp
  404823:	ret    
  404824:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40482e:	xchg   ax,ax
  404830:	push   rbp
  404831:	mov    rbp,rsp
  404834:	sub    rsp,0x10
  404838:	mov    QWORD PTR [rbp-0x8],rdi
  40483c:	cmp    QWORD PTR [rbp-0x8],0x0
  404841:	je     404864 <main@@Base+0x1634>
  404847:	mov    rax,QWORD PTR [rbp-0x8]
  40484b:	add    rax,0xfffffffffffffffc
  40484f:	mov    rdi,rax
  404852:	call   404610 <main@@Base+0x13e0>
  404857:	mov    eax,eax
  404859:	mov    edi,eax
  40485b:	mov    QWORD PTR [rbp-0x10],rdi
  40485f:	jmp    404871 <main@@Base+0x1641>
  404864:	xor    eax,eax
  404866:	mov    ecx,eax
  404868:	mov    QWORD PTR [rbp-0x10],rcx
  40486c:	jmp    404871 <main@@Base+0x1641>
  404871:	mov    rax,QWORD PTR [rbp-0x10]
  404875:	add    rsp,0x10
  404879:	pop    rbp
  40487a:	ret    
  40487b:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	push   rbp
  404881:	mov    rbp,rsp
  404884:	sub    rsp,0x10
  404888:	mov    QWORD PTR [rbp-0x8],rdi
  40488c:	mov    rdi,QWORD PTR [rbp-0x8]
  404890:	call   4048a0 <main@@Base+0x1670>
  404895:	add    rsp,0x10
  404899:	pop    rbp
  40489a:	ret    
  40489b:	nop    DWORD PTR [rax+rax*1+0x0]
  4048a0:	push   rbp
  4048a1:	mov    rbp,rsp
  4048a4:	sub    rsp,0x10
  4048a8:	mov    QWORD PTR [rbp-0x8],rdi
  4048ac:	cmp    QWORD PTR [rbp-0x8],0x0
  4048b1:	je     4048d4 <main@@Base+0x16a4>
  4048b7:	mov    rax,QWORD PTR [rbp-0x8]
  4048bb:	add    rax,0xfffffffffffffffc
  4048bf:	mov    rdi,rax
  4048c2:	call   404610 <main@@Base+0x13e0>
  4048c7:	mov    eax,eax
  4048c9:	mov    edi,eax
  4048cb:	mov    QWORD PTR [rbp-0x10],rdi
  4048cf:	jmp    4048e1 <main@@Base+0x16b1>
  4048d4:	xor    eax,eax
  4048d6:	mov    ecx,eax
  4048d8:	mov    QWORD PTR [rbp-0x10],rcx
  4048dc:	jmp    4048e1 <main@@Base+0x16b1>
  4048e1:	mov    rax,QWORD PTR [rbp-0x10]
  4048e5:	add    rsp,0x10
  4048e9:	pop    rbp
  4048ea:	ret    
  4048eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004048f0 <flatcc_builder_default_alloc@@Base>:
  4048f0:	push   rbp
  4048f1:	mov    rbp,rsp
  4048f4:	sub    rsp,0x50
  4048f8:	mov    QWORD PTR [rbp-0x10],rdi
  4048fc:	mov    QWORD PTR [rbp-0x18],rsi
  404900:	mov    QWORD PTR [rbp-0x20],rdx
  404904:	mov    DWORD PTR [rbp-0x24],ecx
  404907:	mov    DWORD PTR [rbp-0x28],r8d
  40490b:	cmp    QWORD PTR [rbp-0x20],0x0
  404910:	jne    404953 <flatcc_builder_default_alloc@@Base+0x63>
  404916:	mov    rax,QWORD PTR [rbp-0x18]
  40491a:	cmp    QWORD PTR [rax],0x0
  40491e:	je     404947 <flatcc_builder_default_alloc@@Base+0x57>
  404924:	mov    rax,QWORD PTR [rbp-0x18]
  404928:	mov    rdi,QWORD PTR [rax]
  40492b:	call   403030 <free@plt>
  404930:	mov    rax,QWORD PTR [rbp-0x18]
  404934:	mov    QWORD PTR [rax],0x0
  40493b:	mov    rax,QWORD PTR [rbp-0x18]
  40493f:	mov    QWORD PTR [rax+0x8],0x0
  404947:	mov    DWORD PTR [rbp-0x4],0x0
  40494e:	jmp    404a9c <flatcc_builder_default_alloc@@Base+0x1ac>
  404953:	mov    eax,DWORD PTR [rbp-0x28]
  404956:	add    eax,0xffffffff
  404959:	mov    ecx,eax
  40495b:	sub    eax,0x6
  40495e:	mov    QWORD PTR [rbp-0x40],rcx
  404962:	mov    DWORD PTR [rbp-0x44],eax
  404965:	ja     4049b3 <flatcc_builder_default_alloc@@Base+0xc3>
  40496b:	lea    rax,[rip+0x7dee]        # 40c760 <_IO_stdin_used@@Base+0x760>
  404972:	mov    rcx,QWORD PTR [rbp-0x40]
  404976:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40497a:	add    rdx,rax
  40497d:	jmp    rdx
  40497f:	mov    QWORD PTR [rbp-0x38],0x100
  404987:	jmp    4049bb <flatcc_builder_default_alloc@@Base+0xcb>
  40498c:	mov    rax,QWORD PTR [rbp-0x20]
  404990:	mov    QWORD PTR [rbp-0x38],rax
  404994:	jmp    4049bb <flatcc_builder_default_alloc@@Base+0xcb>
  404999:	mov    QWORD PTR [rbp-0x38],0x120
  4049a1:	jmp    4049bb <flatcc_builder_default_alloc@@Base+0xcb>
  4049a6:	mov    QWORD PTR [rbp-0x38],0x40
  4049ae:	jmp    4049bb <flatcc_builder_default_alloc@@Base+0xcb>
  4049b3:	mov    QWORD PTR [rbp-0x38],0x20
  4049bb:	jmp    4049c0 <flatcc_builder_default_alloc@@Base+0xd0>
  4049c0:	mov    rax,QWORD PTR [rbp-0x38]
  4049c4:	cmp    rax,QWORD PTR [rbp-0x20]
  4049c8:	jae    4049df <flatcc_builder_default_alloc@@Base+0xef>
  4049ce:	mov    rax,QWORD PTR [rbp-0x38]
  4049d2:	shl    rax,0x1
  4049d6:	mov    QWORD PTR [rbp-0x38],rax
  4049da:	jmp    4049c0 <flatcc_builder_default_alloc@@Base+0xd0>
  4049df:	mov    rax,QWORD PTR [rbp-0x20]
  4049e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4049e7:	cmp    rax,QWORD PTR [rcx+0x8]
  4049eb:	ja     404a13 <flatcc_builder_default_alloc@@Base+0x123>
  4049f1:	mov    rax,QWORD PTR [rbp-0x18]
  4049f5:	mov    rax,QWORD PTR [rax+0x8]
  4049f9:	shr    rax,0x1
  4049fd:	cmp    rax,QWORD PTR [rbp-0x38]
  404a01:	jb     404a13 <flatcc_builder_default_alloc@@Base+0x123>
  404a07:	mov    DWORD PTR [rbp-0x4],0x0
  404a0e:	jmp    404a9c <flatcc_builder_default_alloc@@Base+0x1ac>
  404a13:	mov    rax,QWORD PTR [rbp-0x18]
  404a17:	mov    rdi,QWORD PTR [rax]
  404a1a:	mov    rsi,QWORD PTR [rbp-0x38]
  404a1e:	call   403100 <realloc@plt>
  404a23:	mov    QWORD PTR [rbp-0x30],rax
  404a27:	cmp    rax,0x0
  404a2b:	jne    404a3d <flatcc_builder_default_alloc@@Base+0x14d>
  404a31:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404a38:	jmp    404a9c <flatcc_builder_default_alloc@@Base+0x1ac>
  404a3d:	cmp    DWORD PTR [rbp-0x24],0x0
  404a41:	je     404a7e <flatcc_builder_default_alloc@@Base+0x18e>
  404a47:	mov    rax,QWORD PTR [rbp-0x18]
  404a4b:	mov    rax,QWORD PTR [rax+0x8]
  404a4f:	cmp    rax,QWORD PTR [rbp-0x38]
  404a53:	jae    404a7e <flatcc_builder_default_alloc@@Base+0x18e>
  404a59:	xor    esi,esi
  404a5b:	mov    rax,QWORD PTR [rbp-0x30]
  404a5f:	mov    rcx,QWORD PTR [rbp-0x18]
  404a63:	add    rax,QWORD PTR [rcx+0x8]
  404a67:	mov    rcx,QWORD PTR [rbp-0x38]
  404a6b:	mov    rdx,QWORD PTR [rbp-0x18]
  404a6f:	sub    rcx,QWORD PTR [rdx+0x8]
  404a73:	mov    rdi,rax
  404a76:	mov    rdx,rcx
  404a79:	call   4030a0 <memset@plt>
  404a7e:	mov    rax,QWORD PTR [rbp-0x30]
  404a82:	mov    rcx,QWORD PTR [rbp-0x18]
  404a86:	mov    QWORD PTR [rcx],rax
  404a89:	mov    rax,QWORD PTR [rbp-0x38]
  404a8d:	mov    rcx,QWORD PTR [rbp-0x18]
  404a91:	mov    QWORD PTR [rcx+0x8],rax
  404a95:	mov    DWORD PTR [rbp-0x4],0x0
  404a9c:	mov    eax,DWORD PTR [rbp-0x4]
  404a9f:	add    rsp,0x50
  404aa3:	pop    rbp
  404aa4:	ret    
  404aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aaf:	nop

0000000000404ab0 <flatcc_builder_flush_vtable_cache@@Base>:
  404ab0:	push   rbp
  404ab1:	mov    rbp,rsp
  404ab4:	sub    rsp,0x10
  404ab8:	mov    QWORD PTR [rbp-0x8],rdi
  404abc:	mov    rdi,QWORD PTR [rbp-0x8]
  404ac0:	add    rdi,0x58
  404ac4:	add    rdi,0x50
  404ac8:	mov    QWORD PTR [rbp-0x10],rdi
  404acc:	mov    rdi,QWORD PTR [rbp-0x8]
  404ad0:	cmp    QWORD PTR [rdi+0xd8],0x0
  404ad8:	jne    404ae3 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  404ade:	jmp    404b15 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  404ae3:	xor    esi,esi
  404ae5:	mov    rax,QWORD PTR [rbp-0x10]
  404ae9:	mov    rdi,QWORD PTR [rax]
  404aec:	mov    rax,QWORD PTR [rbp-0x10]
  404af0:	mov    rdx,QWORD PTR [rax+0x8]
  404af4:	call   4030a0 <memset@plt>
  404af9:	mov    rax,QWORD PTR [rbp-0x8]
  404afd:	mov    DWORD PTR [rax+0xe4],0x10
  404b07:	mov    rax,QWORD PTR [rbp-0x8]
  404b0b:	mov    DWORD PTR [rax+0xe0],0x0
  404b15:	add    rsp,0x10
  404b19:	pop    rbp
  404b1a:	ret    
  404b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b20 <flatcc_builder_custom_init@@Base>:
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x30
  404b28:	xor    eax,eax
  404b2a:	mov    r9d,0x188
  404b30:	mov    r10d,r9d
  404b33:	mov    QWORD PTR [rbp-0x8],rdi
  404b37:	mov    QWORD PTR [rbp-0x10],rsi
  404b3b:	mov    QWORD PTR [rbp-0x18],rdx
  404b3f:	mov    QWORD PTR [rbp-0x20],rcx
  404b43:	mov    QWORD PTR [rbp-0x28],r8
  404b47:	mov    rcx,QWORD PTR [rbp-0x8]
  404b4b:	mov    rdi,rcx
  404b4e:	mov    esi,eax
  404b50:	mov    rdx,r10
  404b53:	call   4030a0 <memset@plt>
  404b58:	cmp    QWORD PTR [rbp-0x10],0x0
  404b5d:	jne    404b8a <flatcc_builder_custom_init@@Base+0x6a>
  404b63:	lea    rax,[rip+0x5e96]        # 40aa00 <flatcc_emitter@@Base>
  404b6a:	mov    rcx,QWORD PTR [rbp-0x8]
  404b6e:	mov    DWORD PTR [rcx+0x128],0x1
  404b78:	mov    QWORD PTR [rbp-0x10],rax
  404b7c:	mov    rax,QWORD PTR [rbp-0x8]
  404b80:	add    rax,0x130
  404b86:	mov    QWORD PTR [rbp-0x18],rax
  404b8a:	cmp    QWORD PTR [rbp-0x20],0x0
  404b8f:	jne    404ba0 <flatcc_builder_custom_init@@Base+0x80>
  404b95:	lea    rax,[rip+0xfffffffffffffd54]        # 4048f0 <flatcc_builder_default_alloc@@Base>
  404b9c:	mov    QWORD PTR [rbp-0x20],rax
  404ba0:	xor    eax,eax
  404ba2:	mov    rcx,QWORD PTR [rbp-0x28]
  404ba6:	mov    rdx,QWORD PTR [rbp-0x8]
  404baa:	mov    QWORD PTR [rdx+0x40],rcx
  404bae:	mov    rcx,QWORD PTR [rbp-0x20]
  404bb2:	mov    rdx,QWORD PTR [rbp-0x8]
  404bb6:	mov    QWORD PTR [rdx+0x50],rcx
  404bba:	mov    rcx,QWORD PTR [rbp-0x18]
  404bbe:	mov    rdx,QWORD PTR [rbp-0x8]
  404bc2:	mov    QWORD PTR [rdx+0x38],rcx
  404bc6:	mov    rcx,QWORD PTR [rbp-0x10]
  404bca:	mov    rdx,QWORD PTR [rbp-0x8]
  404bce:	mov    QWORD PTR [rdx+0x48],rcx
  404bd2:	add    rsp,0x30
  404bd6:	pop    rbp
  404bd7:	ret    
  404bd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404be0 <flatcc_builder_init@@Base>:
  404be0:	push   rbp
  404be1:	mov    rbp,rsp
  404be4:	sub    rsp,0x10
  404be8:	xor    eax,eax
  404bea:	mov    ecx,eax
  404bec:	mov    QWORD PTR [rbp-0x8],rdi
  404bf0:	mov    rdi,QWORD PTR [rbp-0x8]
  404bf4:	mov    rsi,rcx
  404bf7:	mov    rdx,rcx
  404bfa:	mov    QWORD PTR [rbp-0x10],rcx
  404bfe:	mov    r8,QWORD PTR [rbp-0x10]
  404c02:	call   404b20 <flatcc_builder_custom_init@@Base>
  404c07:	add    rsp,0x10
  404c0b:	pop    rbp
  404c0c:	ret    
  404c0d:	nop    DWORD PTR [rax]

0000000000404c10 <flatcc_builder_custom_reset@@Base>:
  404c10:	push   rbp
  404c11:	mov    rbp,rsp
  404c14:	sub    rsp,0x30
  404c18:	mov    QWORD PTR [rbp-0x10],rdi
  404c1c:	mov    DWORD PTR [rbp-0x14],esi
  404c1f:	mov    DWORD PTR [rbp-0x18],edx
  404c22:	mov    DWORD PTR [rbp-0x24],0x0
  404c29:	cmp    DWORD PTR [rbp-0x24],0x8
  404c2d:	jge    404d18 <flatcc_builder_custom_reset@@Base+0x108>
  404c33:	mov    rax,QWORD PTR [rbp-0x10]
  404c37:	add    rax,0x58
  404c3b:	movsxd rcx,DWORD PTR [rbp-0x24]
  404c3f:	shl    rcx,0x4
  404c43:	add    rax,rcx
  404c46:	mov    QWORD PTR [rbp-0x20],rax
  404c4a:	mov    rax,QWORD PTR [rbp-0x20]
  404c4e:	cmp    QWORD PTR [rax],0x0
  404c52:	je     404ccd <flatcc_builder_custom_reset@@Base+0xbd>
  404c58:	cmp    DWORD PTR [rbp-0x24],0x5
  404c5c:	je     404cb2 <flatcc_builder_custom_reset@@Base+0xa2>
  404c62:	cmp    DWORD PTR [rbp-0x18],0x0
  404c66:	je     404cb2 <flatcc_builder_custom_reset@@Base+0xa2>
  404c6c:	mov    eax,0x1
  404c71:	mov    edx,eax
  404c73:	mov    rcx,QWORD PTR [rbp-0x10]
  404c77:	mov    rcx,QWORD PTR [rcx+0x50]
  404c7b:	mov    rsi,QWORD PTR [rbp-0x10]
  404c7f:	mov    rdi,QWORD PTR [rsi+0x40]
  404c83:	mov    rsi,QWORD PTR [rbp-0x20]
  404c87:	mov    r8d,DWORD PTR [rbp-0x24]
  404c8b:	mov    eax,0x1
  404c90:	mov    QWORD PTR [rbp-0x30],rcx
  404c94:	mov    ecx,eax
  404c96:	mov    r9,QWORD PTR [rbp-0x30]
  404c9a:	call   r9
  404c9d:	cmp    eax,0x0
  404ca0:	je     404cb2 <flatcc_builder_custom_reset@@Base+0xa2>
  404ca6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404cad:	jmp    404e59 <flatcc_builder_custom_reset@@Base+0x249>
  404cb2:	xor    esi,esi
  404cb4:	mov    rax,QWORD PTR [rbp-0x20]
  404cb8:	mov    rdi,QWORD PTR [rax]
  404cbb:	mov    rax,QWORD PTR [rbp-0x20]
  404cbf:	mov    rdx,QWORD PTR [rax+0x8]
  404cc3:	call   4030a0 <memset@plt>
  404cc8:	jmp    404d05 <flatcc_builder_custom_reset@@Base+0xf5>
  404ccd:	mov    rax,QWORD PTR [rbp-0x20]
  404cd1:	cmp    QWORD PTR [rax+0x8],0x0
  404cd6:	jne    404ce1 <flatcc_builder_custom_reset@@Base+0xd1>
  404cdc:	jmp    404d00 <flatcc_builder_custom_reset@@Base+0xf0>
  404ce1:	lea    rdi,[rip+0x7c98]        # 40c980 <flatcc_builder_padding_base@@Base+0x200>
  404ce8:	lea    rsi,[rip+0x7ca3]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  404cef:	mov    edx,0x1b2
  404cf4:	lea    rcx,[rip+0x7cf7]        # 40c9f2 <flatcc_builder_padding_base@@Base+0x272>
  404cfb:	call   403090 <__assert_fail@plt>
  404d00:	jmp    404d05 <flatcc_builder_custom_reset@@Base+0xf5>
  404d05:	jmp    404d0a <flatcc_builder_custom_reset@@Base+0xfa>
  404d0a:	mov    eax,DWORD PTR [rbp-0x24]
  404d0d:	add    eax,0x1
  404d10:	mov    DWORD PTR [rbp-0x24],eax
  404d13:	jmp    404c29 <flatcc_builder_custom_reset@@Base+0x19>
  404d18:	mov    rax,QWORD PTR [rbp-0x10]
  404d1c:	mov    DWORD PTR [rax+0xe0],0x0
  404d26:	mov    rax,QWORD PTR [rbp-0x10]
  404d2a:	cmp    DWORD PTR [rax+0xe4],0x0
  404d31:	jbe    404d45 <flatcc_builder_custom_reset@@Base+0x135>
  404d37:	mov    rax,QWORD PTR [rbp-0x10]
  404d3b:	mov    DWORD PTR [rax+0xe4],0x10
  404d45:	mov    rax,QWORD PTR [rbp-0x10]
  404d49:	mov    WORD PTR [rax+0xe8],0x0
  404d52:	mov    rax,QWORD PTR [rbp-0x10]
  404d56:	mov    DWORD PTR [rax+0xf0],0x0
  404d60:	mov    rax,QWORD PTR [rbp-0x10]
  404d64:	mov    DWORD PTR [rax+0xf4],0x0
  404d6e:	mov    rax,QWORD PTR [rbp-0x10]
  404d72:	mov    DWORD PTR [rax+0x104],0x0
  404d7c:	mov    rax,QWORD PTR [rbp-0x10]
  404d80:	mov    DWORD PTR [rax+0x108],0x0
  404d8a:	mov    rax,QWORD PTR [rbp-0x10]
  404d8e:	mov    DWORD PTR [rax+0x20],0x0
  404d95:	mov    rax,QWORD PTR [rbp-0x10]
  404d99:	mov    DWORD PTR [rax+0x24],0x0
  404da0:	mov    rax,QWORD PTR [rbp-0x10]
  404da4:	mov    DWORD PTR [rax+0xfc],0x0
  404dae:	mov    rax,QWORD PTR [rbp-0x10]
  404db2:	mov    DWORD PTR [rax+0x100],0x0
  404dbc:	mov    rax,QWORD PTR [rbp-0x10]
  404dc0:	mov    rax,QWORD PTR [rax+0x68]
  404dc4:	mov    rcx,QWORD PTR [rbp-0x10]
  404dc8:	mov    QWORD PTR [rcx+0x18],rax
  404dcc:	mov    rax,QWORD PTR [rbp-0x10]
  404dd0:	mov    rax,QWORD PTR [rax+0x88]
  404dd7:	mov    rcx,QWORD PTR [rbp-0x10]
  404ddb:	mov    QWORD PTR [rcx],rax
  404dde:	mov    rax,QWORD PTR [rbp-0x10]
  404de2:	mov    rax,QWORD PTR [rax+0x58]
  404de6:	mov    rcx,QWORD PTR [rbp-0x10]
  404dea:	mov    QWORD PTR [rcx+0x8],rax
  404dee:	mov    rax,QWORD PTR [rbp-0x10]
  404df2:	mov    QWORD PTR [rax+0x30],0x0
  404dfa:	cmp    DWORD PTR [rbp-0x14],0x0
  404dfe:	je     404e2f <flatcc_builder_custom_reset@@Base+0x21f>
  404e04:	mov    rax,QWORD PTR [rbp-0x10]
  404e08:	mov    QWORD PTR [rax+0x118],0x0
  404e13:	mov    rax,QWORD PTR [rbp-0x10]
  404e17:	mov    DWORD PTR [rax+0x120],0x0
  404e21:	mov    rax,QWORD PTR [rbp-0x10]
  404e25:	mov    DWORD PTR [rax+0x124],0x0
  404e2f:	mov    rax,QWORD PTR [rbp-0x10]
  404e33:	cmp    DWORD PTR [rax+0x128],0x0
  404e3a:	je     404e52 <flatcc_builder_custom_reset@@Base+0x242>
  404e40:	mov    rax,QWORD PTR [rbp-0x10]
  404e44:	add    rax,0x130
  404e4a:	mov    rdi,rax
  404e4d:	call   40a7c0 <flatcc_emitter_reset@@Base>
  404e52:	mov    DWORD PTR [rbp-0x4],0x0
  404e59:	mov    eax,DWORD PTR [rbp-0x4]
  404e5c:	add    rsp,0x30
  404e60:	pop    rbp
  404e61:	ret    
  404e62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e6c:	nop    DWORD PTR [rax+0x0]

0000000000404e70 <flatcc_builder_reset@@Base>:
  404e70:	push   rbp
  404e71:	mov    rbp,rsp
  404e74:	sub    rsp,0x10
  404e78:	xor    eax,eax
  404e7a:	mov    QWORD PTR [rbp-0x8],rdi
  404e7e:	mov    rdi,QWORD PTR [rbp-0x8]
  404e82:	mov    esi,eax
  404e84:	mov    edx,eax
  404e86:	call   404c10 <flatcc_builder_custom_reset@@Base>
  404e8b:	add    rsp,0x10
  404e8f:	pop    rbp
  404e90:	ret    
  404e91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ea0 <flatcc_builder_clear@@Base>:
  404ea0:	push   rbp
  404ea1:	mov    rbp,rsp
  404ea4:	sub    rsp,0x30
  404ea8:	mov    QWORD PTR [rbp-0x8],rdi
  404eac:	mov    DWORD PTR [rbp-0x14],0x0
  404eb3:	cmp    DWORD PTR [rbp-0x14],0x8
  404eb7:	jge    404f13 <flatcc_builder_clear@@Base+0x73>
  404ebd:	xor    eax,eax
  404ebf:	mov    edx,eax
  404ec1:	xor    ecx,ecx
  404ec3:	mov    rsi,QWORD PTR [rbp-0x8]
  404ec7:	add    rsi,0x58
  404ecb:	movsxd rdi,DWORD PTR [rbp-0x14]
  404ecf:	shl    rdi,0x4
  404ed3:	add    rsi,rdi
  404ed6:	mov    QWORD PTR [rbp-0x10],rsi
  404eda:	mov    rsi,QWORD PTR [rbp-0x8]
  404ede:	mov    rsi,QWORD PTR [rsi+0x50]
  404ee2:	mov    rdi,QWORD PTR [rbp-0x8]
  404ee6:	mov    rdi,QWORD PTR [rdi+0x40]
  404eea:	mov    r8,QWORD PTR [rbp-0x10]
  404eee:	mov    eax,DWORD PTR [rbp-0x14]
  404ef1:	mov    QWORD PTR [rbp-0x20],rsi
  404ef5:	mov    rsi,r8
  404ef8:	mov    r8d,eax
  404efb:	mov    r9,QWORD PTR [rbp-0x20]
  404eff:	call   r9
  404f02:	mov    DWORD PTR [rbp-0x24],eax
  404f05:	mov    eax,DWORD PTR [rbp-0x14]
  404f08:	add    eax,0x1
  404f0b:	mov    DWORD PTR [rbp-0x14],eax
  404f0e:	jmp    404eb3 <flatcc_builder_clear@@Base+0x13>
  404f13:	mov    rax,QWORD PTR [rbp-0x8]
  404f17:	cmp    DWORD PTR [rax+0x128],0x0
  404f1e:	je     404f36 <flatcc_builder_clear@@Base+0x96>
  404f24:	mov    rax,QWORD PTR [rbp-0x8]
  404f28:	add    rax,0x130
  404f2e:	mov    rdi,rax
  404f31:	call   40a960 <flatcc_emitter_clear@@Base>
  404f36:	xor    esi,esi
  404f38:	mov    eax,0x188
  404f3d:	mov    edx,eax
  404f3f:	mov    rcx,QWORD PTR [rbp-0x8]
  404f43:	mov    rdi,rcx
  404f46:	call   4030a0 <memset@plt>
  404f4b:	add    rsp,0x30
  404f4f:	pop    rbp
  404f50:	ret    
  404f51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f60 <flatcc_builder_enter_user_frame_ptr@@Base>:
  404f60:	push   rbp
  404f61:	mov    rbp,rsp
  404f64:	sub    rsp,0x20
  404f68:	xor    r8d,r8d
  404f6b:	mov    QWORD PTR [rbp-0x10],rdi
  404f6f:	mov    QWORD PTR [rbp-0x18],rsi
  404f73:	mov    rsi,QWORD PTR [rbp-0x18]
  404f77:	add    rsi,0x8
  404f7b:	sub    rsi,0x1
  404f7f:	and    rsi,0xfffffffffffffff8
  404f83:	add    rsi,0x8
  404f87:	mov    QWORD PTR [rbp-0x18],rsi
  404f8b:	mov    rdi,QWORD PTR [rbp-0x10]
  404f8f:	mov    rsi,QWORD PTR [rbp-0x10]
  404f93:	mov    rdx,QWORD PTR [rsi+0x180]
  404f9a:	mov    rcx,QWORD PTR [rbp-0x18]
  404f9e:	mov    esi,0x7
  404fa3:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  404fa8:	mov    QWORD PTR [rbp-0x20],rax
  404fac:	cmp    rax,0x0
  404fb0:	jne    404fc3 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  404fb6:	mov    QWORD PTR [rbp-0x8],0x0
  404fbe:	jmp    40502a <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  404fc3:	xor    esi,esi
  404fc5:	mov    rax,QWORD PTR [rbp-0x20]
  404fc9:	mov    rdx,QWORD PTR [rbp-0x18]
  404fcd:	mov    rdi,rax
  404fd0:	call   4030a0 <memset@plt>
  404fd5:	mov    rax,QWORD PTR [rbp-0x10]
  404fd9:	mov    rax,QWORD PTR [rax+0x178]
  404fe0:	mov    rdx,QWORD PTR [rbp-0x20]
  404fe4:	mov    rdi,rdx
  404fe7:	add    rdi,0x8
  404feb:	mov    QWORD PTR [rbp-0x20],rdi
  404fef:	mov    QWORD PTR [rdx],rax
  404ff2:	mov    rax,QWORD PTR [rbp-0x10]
  404ff6:	mov    rax,QWORD PTR [rax+0x180]
  404ffd:	add    rax,0x8
  405001:	mov    rdx,QWORD PTR [rbp-0x10]
  405005:	mov    QWORD PTR [rdx+0x178],rax
  40500c:	mov    rax,QWORD PTR [rbp-0x18]
  405010:	mov    rdx,QWORD PTR [rbp-0x10]
  405014:	add    rax,QWORD PTR [rdx+0x180]
  40501b:	mov    QWORD PTR [rdx+0x180],rax
  405022:	mov    rax,QWORD PTR [rbp-0x20]
  405026:	mov    QWORD PTR [rbp-0x8],rax
  40502a:	mov    rax,QWORD PTR [rbp-0x8]
  40502e:	add    rsp,0x20
  405032:	pop    rbp
  405033:	ret    
  405034:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40503e:	xchg   ax,ax
  405040:	push   rbp
  405041:	mov    rbp,rsp
  405044:	sub    rsp,0x40
  405048:	mov    QWORD PTR [rbp-0x8],rdi
  40504c:	mov    DWORD PTR [rbp-0xc],esi
  40504f:	mov    QWORD PTR [rbp-0x18],rdx
  405053:	mov    QWORD PTR [rbp-0x20],rcx
  405057:	mov    DWORD PTR [rbp-0x24],r8d
  40505b:	mov    rcx,QWORD PTR [rbp-0x8]
  40505f:	add    rcx,0x58
  405063:	movsxd rdx,DWORD PTR [rbp-0xc]
  405067:	shl    rdx,0x4
  40506b:	add    rcx,rdx
  40506e:	mov    QWORD PTR [rbp-0x30],rcx
  405072:	mov    rcx,QWORD PTR [rbp-0x18]
  405076:	add    rcx,QWORD PTR [rbp-0x20]
  40507a:	mov    rdx,QWORD PTR [rbp-0x30]
  40507e:	cmp    rcx,QWORD PTR [rdx+0x8]
  405082:	jbe    4050e3 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  405088:	mov    rax,QWORD PTR [rbp-0x8]
  40508c:	mov    rax,QWORD PTR [rax+0x50]
  405090:	mov    rcx,QWORD PTR [rbp-0x8]
  405094:	mov    rdi,QWORD PTR [rcx+0x40]
  405098:	mov    rsi,QWORD PTR [rbp-0x30]
  40509c:	mov    rcx,QWORD PTR [rbp-0x18]
  4050a0:	add    rcx,QWORD PTR [rbp-0x20]
  4050a4:	mov    edx,DWORD PTR [rbp-0x24]
  4050a7:	mov    r8d,DWORD PTR [rbp-0xc]
  4050ab:	mov    DWORD PTR [rbp-0x34],edx
  4050ae:	mov    rdx,rcx
  4050b1:	mov    ecx,DWORD PTR [rbp-0x34]
  4050b4:	call   rax
  4050b6:	cmp    eax,0x0
  4050b9:	je     4050de <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  4050bf:	lea    rdi,[rip+0x8a8c]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4050c6:	lea    rsi,[rip+0x78c5]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4050cd:	mov    edx,0x134
  4050d2:	lea    rcx,[rip+0x88b3]        # 40d98c <flatcc_builder_padding_base@@Base+0x120c>
  4050d9:	call   403090 <__assert_fail@plt>
  4050de:	jmp    4050e3 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  4050e3:	mov    rax,QWORD PTR [rbp-0x30]
  4050e7:	mov    rax,QWORD PTR [rax]
  4050ea:	add    rax,QWORD PTR [rbp-0x18]
  4050ee:	add    rsp,0x40
  4050f2:	pop    rbp
  4050f3:	ret    
  4050f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050fe:	xchg   ax,ax

0000000000405100 <flatcc_builder_enter_user_frame@@Base>:
  405100:	push   rbp
  405101:	mov    rbp,rsp
  405104:	sub    rsp,0x20
  405108:	xor    r8d,r8d
  40510b:	mov    QWORD PTR [rbp-0x10],rdi
  40510f:	mov    QWORD PTR [rbp-0x18],rsi
  405113:	mov    rsi,QWORD PTR [rbp-0x18]
  405117:	add    rsi,0x8
  40511b:	sub    rsi,0x1
  40511f:	and    rsi,0xfffffffffffffff8
  405123:	add    rsi,0x8
  405127:	mov    QWORD PTR [rbp-0x18],rsi
  40512b:	mov    rdi,QWORD PTR [rbp-0x10]
  40512f:	mov    rsi,QWORD PTR [rbp-0x10]
  405133:	mov    rdx,QWORD PTR [rsi+0x180]
  40513a:	mov    rcx,QWORD PTR [rbp-0x18]
  40513e:	mov    esi,0x7
  405143:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  405148:	mov    QWORD PTR [rbp-0x20],rax
  40514c:	cmp    rax,0x0
  405150:	jne    405163 <flatcc_builder_enter_user_frame@@Base+0x63>
  405156:	mov    QWORD PTR [rbp-0x8],0x0
  40515e:	jmp    4051d1 <flatcc_builder_enter_user_frame@@Base+0xd1>
  405163:	xor    esi,esi
  405165:	mov    rax,QWORD PTR [rbp-0x20]
  405169:	mov    rdx,QWORD PTR [rbp-0x18]
  40516d:	mov    rdi,rax
  405170:	call   4030a0 <memset@plt>
  405175:	mov    rax,QWORD PTR [rbp-0x10]
  405179:	mov    rax,QWORD PTR [rax+0x178]
  405180:	mov    rdx,QWORD PTR [rbp-0x20]
  405184:	mov    rdi,rdx
  405187:	add    rdi,0x8
  40518b:	mov    QWORD PTR [rbp-0x20],rdi
  40518f:	mov    QWORD PTR [rdx],rax
  405192:	mov    rax,QWORD PTR [rbp-0x10]
  405196:	mov    rax,QWORD PTR [rax+0x180]
  40519d:	add    rax,0x8
  4051a1:	mov    rdx,QWORD PTR [rbp-0x10]
  4051a5:	mov    QWORD PTR [rdx+0x178],rax
  4051ac:	mov    rax,QWORD PTR [rbp-0x18]
  4051b0:	mov    rdx,QWORD PTR [rbp-0x10]
  4051b4:	add    rax,QWORD PTR [rdx+0x180]
  4051bb:	mov    QWORD PTR [rdx+0x180],rax
  4051c2:	mov    rax,QWORD PTR [rbp-0x10]
  4051c6:	mov    rax,QWORD PTR [rax+0x178]
  4051cd:	mov    QWORD PTR [rbp-0x8],rax
  4051d1:	mov    rax,QWORD PTR [rbp-0x8]
  4051d5:	add    rsp,0x20
  4051d9:	pop    rbp
  4051da:	ret    
  4051db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004051e0 <flatcc_builder_exit_user_frame@@Base>:
  4051e0:	push   rbp
  4051e1:	mov    rbp,rsp
  4051e4:	sub    rsp,0x10
  4051e8:	mov    QWORD PTR [rbp-0x8],rdi
  4051ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4051f0:	cmp    QWORD PTR [rdi+0x178],0x0
  4051f8:	jbe    405203 <flatcc_builder_exit_user_frame@@Base+0x23>
  4051fe:	jmp    405222 <flatcc_builder_exit_user_frame@@Base+0x42>
  405203:	lea    rdi,[rip+0x7826]        # 40ca30 <flatcc_builder_padding_base@@Base+0x2b0>
  40520a:	lea    rsi,[rip+0x7781]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405211:	mov    edx,0x21e
  405216:	lea    rcx,[rip+0x782c]        # 40ca49 <flatcc_builder_padding_base@@Base+0x2c9>
  40521d:	call   403090 <__assert_fail@plt>
  405222:	mov    rax,QWORD PTR [rbp-0x8]
  405226:	mov    rax,QWORD PTR [rax+0xc8]
  40522d:	mov    rcx,QWORD PTR [rbp-0x8]
  405231:	mov    rcx,QWORD PTR [rcx+0x178]
  405238:	mov    edx,ecx
  40523a:	mov    edx,edx
  40523c:	mov    ecx,edx
  40523e:	add    rax,rcx
  405241:	mov    QWORD PTR [rbp-0x10],rax
  405245:	mov    rax,QWORD PTR [rbp-0x8]
  405249:	mov    rax,QWORD PTR [rax+0x178]
  405250:	sub    rax,0x8
  405254:	mov    rcx,QWORD PTR [rbp-0x8]
  405258:	mov    QWORD PTR [rcx+0x180],rax
  40525f:	mov    rax,QWORD PTR [rbp-0x10]
  405263:	mov    rax,QWORD PTR [rax-0x8]
  405267:	mov    rcx,QWORD PTR [rbp-0x8]
  40526b:	mov    QWORD PTR [rcx+0x178],rax
  405272:	add    rsp,0x10
  405276:	pop    rbp
  405277:	ret    
  405278:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405280 <flatcc_builder_exit_user_frame_at@@Base>:
  405280:	push   rbp
  405281:	mov    rbp,rsp
  405284:	sub    rsp,0x10
  405288:	mov    QWORD PTR [rbp-0x8],rdi
  40528c:	mov    QWORD PTR [rbp-0x10],rsi
  405290:	mov    rsi,QWORD PTR [rbp-0x8]
  405294:	mov    rsi,QWORD PTR [rsi+0x178]
  40529b:	cmp    rsi,QWORD PTR [rbp-0x10]
  40529f:	jb     4052aa <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  4052a5:	jmp    4052c9 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  4052aa:	lea    rdi,[rip+0x77d2]        # 40ca83 <flatcc_builder_padding_base@@Base+0x303>
  4052b1:	lea    rsi,[rip+0x76da]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4052b8:	mov    edx,0x227
  4052bd:	lea    rcx,[rip+0x77de]        # 40caa2 <flatcc_builder_padding_base@@Base+0x322>
  4052c4:	call   403090 <__assert_fail@plt>
  4052c9:	mov    rax,QWORD PTR [rbp-0x10]
  4052cd:	mov    rcx,QWORD PTR [rbp-0x8]
  4052d1:	mov    QWORD PTR [rcx+0x178],rax
  4052d8:	mov    rdi,QWORD PTR [rbp-0x8]
  4052dc:	call   4051e0 <flatcc_builder_exit_user_frame@@Base>
  4052e1:	add    rsp,0x10
  4052e5:	pop    rbp
  4052e6:	ret    
  4052e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004052f0 <flatcc_builder_get_current_user_frame@@Base>:
  4052f0:	push   rbp
  4052f1:	mov    rbp,rsp
  4052f4:	mov    QWORD PTR [rbp-0x8],rdi
  4052f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4052fc:	mov    rax,QWORD PTR [rdi+0x178]
  405303:	pop    rbp
  405304:	ret    
  405305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40530f:	nop

0000000000405310 <flatcc_builder_get_user_frame_ptr@@Base>:
  405310:	push   rbp
  405311:	mov    rbp,rsp
  405314:	mov    QWORD PTR [rbp-0x8],rdi
  405318:	mov    QWORD PTR [rbp-0x10],rsi
  40531c:	mov    rsi,QWORD PTR [rbp-0x8]
  405320:	mov    rsi,QWORD PTR [rsi+0xc8]
  405327:	mov    rdi,QWORD PTR [rbp-0x10]
  40532b:	mov    eax,edi
  40532d:	mov    eax,eax
  40532f:	mov    edi,eax
  405331:	add    rsi,rdi
  405334:	mov    rax,rsi
  405337:	pop    rbp
  405338:	ret    
  405339:	nop    DWORD PTR [rax+0x0]

0000000000405340 <flatcc_builder_embed_buffer@@Base>:
  405340:	push   rbp
  405341:	mov    rbp,rsp
  405344:	sub    rsp,0xd0
  40534b:	mov    ax,r8w
  40534f:	mov    r10w,si
  405353:	mov    QWORD PTR [rbp-0x10],rdi
  405357:	mov    WORD PTR [rbp-0x12],r10w
  40535c:	mov    QWORD PTR [rbp-0x20],rdx
  405360:	mov    QWORD PTR [rbp-0x28],rcx
  405364:	mov    WORD PTR [rbp-0x2a],ax
  405368:	mov    DWORD PTR [rbp-0x30],r9d
  40536c:	mov    esi,DWORD PTR [rbp-0x30]
  40536f:	and    esi,0x2
  405372:	mov    DWORD PTR [rbp-0xcc],esi
  405378:	mov    rdi,QWORD PTR [rbp-0x10]
  40537c:	mov    ax,WORD PTR [rbp-0x12]
  405380:	mov    rcx,QWORD PTR [rbp-0x10]
  405384:	cmp    DWORD PTR [rcx+0x100],0x0
  40538b:	sete   r11b
  40538f:	xor    r11b,0xff
  405393:	and    r11b,0x1
  405397:	movzx  ecx,r11b
  40539b:	lea    rsi,[rbp-0x2a]
  40539f:	movzx  edx,ax
  4053a2:	call   405590 <flatcc_builder_embed_buffer@@Base+0x250>
  4053a7:	cmp    eax,0x0
  4053aa:	je     4053bc <flatcc_builder_embed_buffer@@Base+0x7c>
  4053b0:	mov    DWORD PTR [rbp-0x4],0x0
  4053b7:	jmp    405575 <flatcc_builder_embed_buffer@@Base+0x235>
  4053bc:	xor    eax,eax
  4053be:	mov    ecx,eax
  4053c0:	mov    eax,0x4
  4053c5:	mov    edx,eax
  4053c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4053cb:	mov    rsi,QWORD PTR [rbp-0x28]
  4053cf:	mov    eax,esi
  4053d1:	mov    eax,eax
  4053d3:	mov    esi,eax
  4053d5:	mov    eax,DWORD PTR [rbp-0xcc]
  4053db:	cmp    eax,0x0
  4053de:	cmovne rcx,rdx
  4053e2:	add    rsi,rcx
  4053e5:	mov    eax,esi
  4053e7:	mov    esi,eax
  4053e9:	movzx  edx,WORD PTR [rbp-0x2a]
  4053ed:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4053f2:	mov    DWORD PTR [rbp-0x38],eax
  4053f5:	mov    rcx,QWORD PTR [rbp-0x28]
  4053f9:	mov    eax,ecx
  4053fb:	add    eax,DWORD PTR [rbp-0x38]
  4053fe:	mov    edi,eax
  405400:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  405405:	mov    DWORD PTR [rbp-0x34],eax
  405408:	mov    QWORD PTR [rbp-0xc8],0x0
  405413:	mov    DWORD PTR [rbp-0xc0],0x0
  40541d:	mov    rcx,QWORD PTR [rbp-0x10]
  405421:	cmp    DWORD PTR [rcx+0x100],0x0
  405428:	je     40548c <flatcc_builder_embed_buffer@@Base+0x14c>
  40542e:	mov    rax,QWORD PTR [rbp-0xc8]
  405435:	add    rax,0x4
  405439:	mov    QWORD PTR [rbp-0xc8],rax
  405440:	lea    rax,[rbp-0x34]
  405444:	lea    rcx,[rbp-0xc8]
  40544b:	mov    rdx,rcx
  40544e:	add    rdx,0x10
  405452:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405459:	shl    rsi,0x4
  40545d:	add    rdx,rsi
  405460:	mov    QWORD PTR [rdx],rax
  405463:	add    rcx,0x10
  405467:	movsxd rax,DWORD PTR [rbp-0xc0]
  40546e:	shl    rax,0x4
  405472:	add    rcx,rax
  405475:	mov    QWORD PTR [rcx+0x8],0x4
  40547d:	mov    edi,DWORD PTR [rbp-0xc0]
  405483:	add    edi,0x1
  405486:	mov    DWORD PTR [rbp-0xc0],edi
  40548c:	cmp    QWORD PTR [rbp-0x28],0x0
  405491:	jbe    4054f5 <flatcc_builder_embed_buffer@@Base+0x1b5>
  405497:	mov    rax,QWORD PTR [rbp-0x28]
  40549b:	add    rax,QWORD PTR [rbp-0xc8]
  4054a2:	mov    QWORD PTR [rbp-0xc8],rax
  4054a9:	mov    rax,QWORD PTR [rbp-0x20]
  4054ad:	lea    rcx,[rbp-0xc8]
  4054b4:	mov    rdx,rcx
  4054b7:	add    rdx,0x10
  4054bb:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4054c2:	shl    rsi,0x4
  4054c6:	add    rdx,rsi
  4054c9:	mov    QWORD PTR [rdx],rax
  4054cc:	mov    rax,QWORD PTR [rbp-0x28]
  4054d0:	add    rcx,0x10
  4054d4:	movsxd rdx,DWORD PTR [rbp-0xc0]
  4054db:	shl    rdx,0x4
  4054df:	add    rcx,rdx
  4054e2:	mov    QWORD PTR [rcx+0x8],rax
  4054e6:	mov    edi,DWORD PTR [rbp-0xc0]
  4054ec:	add    edi,0x1
  4054ef:	mov    DWORD PTR [rbp-0xc0],edi
  4054f5:	cmp    DWORD PTR [rbp-0x38],0x0
  4054f9:	jbe    405562 <flatcc_builder_embed_buffer@@Base+0x222>
  4054ff:	lea    rax,[rip+0x727a]        # 40c780 <flatcc_builder_padding_base@@Base>
  405506:	mov    ecx,DWORD PTR [rbp-0x38]
  405509:	mov    edx,ecx
  40550b:	add    rdx,QWORD PTR [rbp-0xc8]
  405512:	mov    QWORD PTR [rbp-0xc8],rdx
  405519:	lea    rdx,[rbp-0xc8]
  405520:	mov    rsi,rdx
  405523:	add    rsi,0x10
  405527:	movsxd rdi,DWORD PTR [rbp-0xc0]
  40552e:	shl    rdi,0x4
  405532:	add    rsi,rdi
  405535:	mov    QWORD PTR [rsi],rax
  405538:	mov    ecx,DWORD PTR [rbp-0x38]
  40553b:	mov    eax,ecx
  40553d:	add    rdx,0x10
  405541:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405548:	shl    rsi,0x4
  40554c:	add    rdx,rsi
  40554f:	mov    QWORD PTR [rdx+0x8],rax
  405553:	mov    ecx,DWORD PTR [rbp-0xc0]
  405559:	add    ecx,0x1
  40555c:	mov    DWORD PTR [rbp-0xc0],ecx
  405562:	mov    rdi,QWORD PTR [rbp-0x10]
  405566:	lea    rsi,[rbp-0xc8]
  40556d:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  405572:	mov    DWORD PTR [rbp-0x4],eax
  405575:	mov    eax,DWORD PTR [rbp-0x4]
  405578:	add    rsp,0xd0
  40557f:	pop    rbp
  405580:	ret    
  405581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40558b:	nop    DWORD PTR [rax+rax*1+0x0]
  405590:	push   rbp
  405591:	mov    rbp,rsp
  405594:	sub    rsp,0xc0
  40559b:	mov    ax,dx
  40559e:	mov    QWORD PTR [rbp-0x8],rdi
  4055a2:	mov    QWORD PTR [rbp-0x10],rsi
  4055a6:	mov    WORD PTR [rbp-0x12],ax
  4055aa:	mov    DWORD PTR [rbp-0x18],ecx
  4055ad:	movzx  ecx,WORD PTR [rbp-0x12]
  4055b1:	cmp    ecx,0x0
  4055b4:	je     4055c9 <flatcc_builder_embed_buffer@@Base+0x289>
  4055ba:	movzx  eax,WORD PTR [rbp-0x12]
  4055be:	mov    DWORD PTR [rbp-0xb4],eax
  4055c4:	jmp    40560f <flatcc_builder_embed_buffer@@Base+0x2cf>
  4055c9:	mov    rax,QWORD PTR [rbp-0x8]
  4055cd:	movzx  ecx,WORD PTR [rax+0xec]
  4055d4:	cmp    ecx,0x0
  4055d7:	je     4055f3 <flatcc_builder_embed_buffer@@Base+0x2b3>
  4055dd:	mov    rax,QWORD PTR [rbp-0x8]
  4055e1:	movzx  ecx,WORD PTR [rax+0xec]
  4055e8:	mov    DWORD PTR [rbp-0xb8],ecx
  4055ee:	jmp    405603 <flatcc_builder_embed_buffer@@Base+0x2c3>
  4055f3:	mov    eax,0x1
  4055f8:	mov    DWORD PTR [rbp-0xb8],eax
  4055fe:	jmp    405603 <flatcc_builder_embed_buffer@@Base+0x2c3>
  405603:	mov    eax,DWORD PTR [rbp-0xb8]
  405609:	mov    DWORD PTR [rbp-0xb4],eax
  40560f:	mov    eax,DWORD PTR [rbp-0xb4]
  405615:	mov    cx,ax
  405618:	mov    WORD PTR [rbp-0x12],cx
  40561c:	mov    rdi,QWORD PTR [rbp-0x10]
  405620:	mov    esi,0x4
  405625:	call   407110 <flatcc_builder_start_vector@@Base+0xb0>
  40562a:	mov    rdi,QWORD PTR [rbp-0x10]
  40562e:	movzx  esi,WORD PTR [rbp-0x12]
  405632:	call   407110 <flatcc_builder_start_vector@@Base+0xb0>
  405637:	cmp    DWORD PTR [rbp-0x18],0x0
  40563b:	jne    405725 <flatcc_builder_embed_buffer@@Base+0x3e5>
  405641:	mov    rdi,QWORD PTR [rbp-0x8]
  405645:	movzx  esi,WORD PTR [rbp-0x12]
  405649:	call   40a4a0 <flatcc_builder_get_emit_context@@Base+0x20>
  40564e:	mov    eax,eax
  405650:	mov    edi,eax
  405652:	mov    QWORD PTR [rbp-0x20],rdi
  405656:	cmp    QWORD PTR [rbp-0x20],0x0
  40565b:	je     405720 <flatcc_builder_embed_buffer@@Base+0x3e0>
  405661:	mov    QWORD PTR [rbp-0xb0],0x0
  40566c:	mov    DWORD PTR [rbp-0xa8],0x0
  405676:	cmp    QWORD PTR [rbp-0x20],0x0
  40567b:	jbe    4056e2 <flatcc_builder_embed_buffer@@Base+0x3a2>
  405681:	lea    rax,[rip+0x70f8]        # 40c780 <flatcc_builder_padding_base@@Base>
  405688:	mov    rcx,QWORD PTR [rbp-0x20]
  40568c:	add    rcx,QWORD PTR [rbp-0xb0]
  405693:	mov    QWORD PTR [rbp-0xb0],rcx
  40569a:	lea    rcx,[rbp-0xb0]
  4056a1:	mov    rdx,rcx
  4056a4:	add    rdx,0x10
  4056a8:	movsxd rsi,DWORD PTR [rbp-0xa8]
  4056af:	shl    rsi,0x4
  4056b3:	add    rdx,rsi
  4056b6:	mov    QWORD PTR [rdx],rax
  4056b9:	mov    rax,QWORD PTR [rbp-0x20]
  4056bd:	add    rcx,0x10
  4056c1:	movsxd rdx,DWORD PTR [rbp-0xa8]
  4056c8:	shl    rdx,0x4
  4056cc:	add    rcx,rdx
  4056cf:	mov    QWORD PTR [rcx+0x8],rax
  4056d3:	mov    edi,DWORD PTR [rbp-0xa8]
  4056d9:	add    edi,0x1
  4056dc:	mov    DWORD PTR [rbp-0xa8],edi
  4056e2:	mov    rdi,QWORD PTR [rbp-0x8]
  4056e6:	lea    rsi,[rbp-0xb0]
  4056ed:	call   407710 <flatcc_builder_create_vtable@@Base+0x140>
  4056f2:	xor    ecx,ecx
  4056f4:	cmp    ecx,eax
  4056f6:	jne    40571b <flatcc_builder_embed_buffer@@Base+0x3db>
  4056fc:	lea    rdi,[rip+0x844f]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405703:	lea    rsi,[rip+0x7288]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40570a:	mov    edx,0x2be
  40570f:	lea    rcx,[rip+0x82b9]        # 40d9cf <flatcc_builder_padding_base@@Base+0x124f>
  405716:	call   403090 <__assert_fail@plt>
  40571b:	jmp    405720 <flatcc_builder_embed_buffer@@Base+0x3e0>
  405720:	jmp    405725 <flatcc_builder_embed_buffer@@Base+0x3e5>
  405725:	xor    eax,eax
  405727:	add    rsp,0xc0
  40572e:	pop    rbp
  40572f:	ret    
  405730:	push   rbp
  405731:	mov    rbp,rsp
  405734:	mov    ax,dx
  405737:	mov    QWORD PTR [rbp-0x8],rdi
  40573b:	mov    DWORD PTR [rbp-0xc],esi
  40573e:	mov    WORD PTR [rbp-0xe],ax
  405742:	mov    rdi,QWORD PTR [rbp-0x8]
  405746:	mov    edx,DWORD PTR [rdi+0xf0]
  40574c:	sub    edx,DWORD PTR [rbp-0xc]
  40574f:	movzx  esi,WORD PTR [rbp-0xe]
  405753:	sub    esi,0x1
  405756:	and    edx,esi
  405758:	mov    eax,edx
  40575a:	pop    rbp
  40575b:	ret    
  40575c:	nop    DWORD PTR [rax+0x0]
  405760:	push   rbp
  405761:	mov    rbp,rsp
  405764:	mov    DWORD PTR [rbp-0x4],edi
  405767:	mov    eax,DWORD PTR [rbp-0x4]
  40576a:	pop    rbp
  40576b:	ret    
  40576c:	nop    DWORD PTR [rax+0x0]
  405770:	push   rbp
  405771:	mov    rbp,rsp
  405774:	sub    rsp,0x20
  405778:	mov    QWORD PTR [rbp-0x8],rdi
  40577c:	mov    QWORD PTR [rbp-0x10],rsi
  405780:	mov    rsi,QWORD PTR [rbp-0x8]
  405784:	mov    eax,DWORD PTR [rsi+0xf0]
  40578a:	mov    rsi,QWORD PTR [rbp-0x10]
  40578e:	mov    rsi,QWORD PTR [rsi]
  405791:	mov    ecx,esi
  405793:	sub    eax,ecx
  405795:	mov    DWORD PTR [rbp-0x14],eax
  405798:	mov    rsi,QWORD PTR [rbp-0x10]
  40579c:	cmp    QWORD PTR [rsi],0x10
  4057a0:	jbe    4057c1 <flatcc_builder_embed_buffer@@Base+0x481>
  4057a6:	mov    eax,0xffffffff
  4057ab:	mov    ecx,eax
  4057ad:	mov    rdx,QWORD PTR [rbp-0x10]
  4057b1:	mov    rdx,QWORD PTR [rdx]
  4057b4:	sub    rdx,0x10
  4057b8:	cmp    rdx,rcx
  4057bb:	ja     4057d4 <flatcc_builder_embed_buffer@@Base+0x494>
  4057c1:	mov    eax,DWORD PTR [rbp-0x14]
  4057c4:	mov    rcx,QWORD PTR [rbp-0x8]
  4057c8:	cmp    eax,DWORD PTR [rcx+0xf0]
  4057ce:	jl     4057f3 <flatcc_builder_embed_buffer@@Base+0x4b3>
  4057d4:	lea    rdi,[rip+0x8377]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4057db:	lea    rsi,[rip+0x71b0]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4057e2:	mov    edx,0x287
  4057e7:	lea    rcx,[rip+0x8223]        # 40da11 <flatcc_builder_padding_base@@Base+0x1291>
  4057ee:	call   403090 <__assert_fail@plt>
  4057f3:	mov    rax,QWORD PTR [rbp-0x8]
  4057f7:	mov    rax,QWORD PTR [rax+0x48]
  4057fb:	mov    rcx,QWORD PTR [rbp-0x8]
  4057ff:	mov    rdi,QWORD PTR [rcx+0x38]
  405803:	mov    rcx,QWORD PTR [rbp-0x10]
  405807:	add    rcx,0x10
  40580b:	mov    rdx,QWORD PTR [rbp-0x10]
  40580f:	mov    edx,DWORD PTR [rdx+0x8]
  405812:	mov    esi,DWORD PTR [rbp-0x14]
  405815:	mov    r8,QWORD PTR [rbp-0x10]
  405819:	mov    r8,QWORD PTR [r8]
  40581c:	mov    DWORD PTR [rbp-0x18],esi
  40581f:	mov    rsi,rcx
  405822:	mov    ecx,DWORD PTR [rbp-0x18]
  405825:	call   rax
  405827:	cmp    eax,0x0
  40582a:	je     40584f <flatcc_builder_embed_buffer@@Base+0x50f>
  405830:	lea    rdi,[rip+0x831b]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405837:	lea    rsi,[rip+0x7154]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40583e:	mov    edx,0x28b
  405843:	lea    rcx,[rip+0x81c7]        # 40da11 <flatcc_builder_padding_base@@Base+0x1291>
  40584a:	call   403090 <__assert_fail@plt>
  40584f:	mov    eax,DWORD PTR [rbp-0x14]
  405852:	mov    rcx,QWORD PTR [rbp-0x8]
  405856:	mov    DWORD PTR [rcx+0xf0],eax
  40585c:	add    rsp,0x20
  405860:	pop    rbp
  405861:	ret    
  405862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40586c:	nop    DWORD PTR [rax+0x0]

0000000000405870 <flatcc_builder_create_buffer@@Base>:
  405870:	push   rbp
  405871:	mov    rbp,rsp
  405874:	sub    rsp,0xf0
  40587b:	mov    ax,r8w
  40587f:	mov    r10w,dx
  405883:	mov    QWORD PTR [rbp-0x10],rdi
  405887:	mov    QWORD PTR [rbp-0x18],rsi
  40588b:	mov    WORD PTR [rbp-0x1a],r10w
  405890:	mov    DWORD PTR [rbp-0x20],ecx
  405893:	mov    WORD PTR [rbp-0x22],ax
  405897:	mov    DWORD PTR [rbp-0x28],r9d
  40589b:	mov    DWORD PTR [rbp-0x34],0x0
  4058a2:	mov    DWORD PTR [rbp-0xd4],0x0
  4058ac:	mov    ecx,DWORD PTR [rbp-0x28]
  4058af:	and    ecx,0x1
  4058b2:	cmp    ecx,0x0
  4058b5:	setne  r11b
  4058b9:	and    r11b,0x1
  4058bd:	movzx  ecx,r11b
  4058c1:	mov    DWORD PTR [rbp-0xd8],ecx
  4058c7:	mov    ecx,DWORD PTR [rbp-0x28]
  4058ca:	and    ecx,0x2
  4058cd:	cmp    ecx,0x0
  4058d0:	setne  r11b
  4058d4:	and    r11b,0x1
  4058d8:	movzx  ecx,r11b
  4058dc:	mov    DWORD PTR [rbp-0xdc],ecx
  4058e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4058e6:	mov    ax,WORD PTR [rbp-0x1a]
  4058ea:	mov    ecx,DWORD PTR [rbp-0xd8]
  4058f0:	lea    rsi,[rbp-0x22]
  4058f4:	movzx  edx,ax
  4058f7:	call   405590 <flatcc_builder_embed_buffer@@Base+0x250>
  4058fc:	cmp    eax,0x0
  4058ff:	je     405911 <flatcc_builder_create_buffer@@Base+0xa1>
  405905:	mov    DWORD PTR [rbp-0x4],0x0
  40590c:	jmp    405c6b <flatcc_builder_create_buffer@@Base+0x3fb>
  405911:	mov    rdi,QWORD PTR [rbp-0x10]
  405915:	movzx  esi,WORD PTR [rbp-0x22]
  405919:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  40591e:	cmp    QWORD PTR [rbp-0x18],0x0
  405923:	je     405957 <flatcc_builder_create_buffer@@Base+0xe7>
  405929:	mov    rax,QWORD PTR [rbp-0x18]
  40592d:	mov    ecx,DWORD PTR [rax]
  40592f:	mov    DWORD PTR [rbp-0xd4],ecx
  405935:	mov    edi,DWORD PTR [rbp-0xd4]
  40593b:	call   405cc0 <flatcc_builder_create_buffer@@Base+0x450>
  405940:	mov    DWORD PTR [rbp-0xd4],eax
  405946:	mov    edi,DWORD PTR [rbp-0xd4]
  40594c:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  405951:	mov    DWORD PTR [rbp-0xd4],eax
  405957:	xor    eax,eax
  405959:	mov    ecx,eax
  40595b:	mov    eax,0x4
  405960:	mov    edx,eax
  405962:	xor    eax,eax
  405964:	mov    esi,DWORD PTR [rbp-0xd4]
  40596a:	cmp    esi,0x0
  40596d:	mov    esi,0x4
  405972:	cmovne eax,esi
  405975:	mov    DWORD PTR [rbp-0x34],eax
  405978:	mov    rdi,QWORD PTR [rbp-0x10]
  40597c:	mov    eax,DWORD PTR [rbp-0x34]
  40597f:	mov    r8d,eax
  405982:	add    r8,0x4
  405986:	mov    eax,DWORD PTR [rbp-0xdc]
  40598c:	cmp    eax,0x0
  40598f:	cmovne rcx,rdx
  405993:	add    r8,rcx
  405996:	mov    eax,r8d
  405999:	mov    esi,eax
  40599b:	movzx  edx,WORD PTR [rbp-0x22]
  40599f:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4059a4:	mov    DWORD PTR [rbp-0x30],eax
  4059a7:	mov    QWORD PTR [rbp-0xd0],0x0
  4059b2:	mov    DWORD PTR [rbp-0xc8],0x0
  4059bc:	cmp    DWORD PTR [rbp-0xd8],0x0
  4059c3:	jne    4059d6 <flatcc_builder_create_buffer@@Base+0x166>
  4059c9:	cmp    DWORD PTR [rbp-0xdc],0x0
  4059d0:	je     405a34 <flatcc_builder_create_buffer@@Base+0x1c4>
  4059d6:	mov    rax,QWORD PTR [rbp-0xd0]
  4059dd:	add    rax,0x4
  4059e1:	mov    QWORD PTR [rbp-0xd0],rax
  4059e8:	lea    rax,[rbp-0x3c]
  4059ec:	lea    rcx,[rbp-0xd0]
  4059f3:	mov    rdx,rcx
  4059f6:	add    rdx,0x10
  4059fa:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405a01:	shl    rsi,0x4
  405a05:	add    rdx,rsi
  405a08:	mov    QWORD PTR [rdx],rax
  405a0b:	add    rcx,0x10
  405a0f:	movsxd rax,DWORD PTR [rbp-0xc8]
  405a16:	shl    rax,0x4
  405a1a:	add    rcx,rax
  405a1d:	mov    QWORD PTR [rcx+0x8],0x4
  405a25:	mov    edi,DWORD PTR [rbp-0xc8]
  405a2b:	add    edi,0x1
  405a2e:	mov    DWORD PTR [rbp-0xc8],edi
  405a34:	mov    rax,QWORD PTR [rbp-0xd0]
  405a3b:	add    rax,0x4
  405a3f:	mov    QWORD PTR [rbp-0xd0],rax
  405a46:	lea    rax,[rbp-0x38]
  405a4a:	lea    rcx,[rbp-0xd0]
  405a51:	mov    rdx,rcx
  405a54:	add    rdx,0x10
  405a58:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405a5f:	shl    rsi,0x4
  405a63:	add    rdx,rsi
  405a66:	mov    QWORD PTR [rdx],rax
  405a69:	add    rcx,0x10
  405a6d:	movsxd rax,DWORD PTR [rbp-0xc8]
  405a74:	shl    rax,0x4
  405a78:	add    rcx,rax
  405a7b:	mov    QWORD PTR [rcx+0x8],0x4
  405a83:	mov    edi,DWORD PTR [rbp-0xc8]
  405a89:	add    edi,0x1
  405a8c:	mov    DWORD PTR [rbp-0xc8],edi
  405a92:	cmp    DWORD PTR [rbp-0x34],0x0
  405a96:	jbe    405aff <flatcc_builder_create_buffer@@Base+0x28f>
  405a9c:	mov    eax,DWORD PTR [rbp-0x34]
  405a9f:	mov    ecx,eax
  405aa1:	add    rcx,QWORD PTR [rbp-0xd0]
  405aa8:	mov    QWORD PTR [rbp-0xd0],rcx
  405aaf:	lea    rcx,[rbp-0xd4]
  405ab6:	lea    rdx,[rbp-0xd0]
  405abd:	mov    rsi,rdx
  405ac0:	add    rsi,0x10
  405ac4:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405acb:	shl    rdi,0x4
  405acf:	add    rsi,rdi
  405ad2:	mov    QWORD PTR [rsi],rcx
  405ad5:	mov    eax,DWORD PTR [rbp-0x34]
  405ad8:	mov    ecx,eax
  405ada:	add    rdx,0x10
  405ade:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405ae5:	shl    rsi,0x4
  405ae9:	add    rdx,rsi
  405aec:	mov    QWORD PTR [rdx+0x8],rcx
  405af0:	mov    eax,DWORD PTR [rbp-0xc8]
  405af6:	add    eax,0x1
  405af9:	mov    DWORD PTR [rbp-0xc8],eax
  405aff:	cmp    DWORD PTR [rbp-0x30],0x0
  405b03:	jbe    405b6c <flatcc_builder_create_buffer@@Base+0x2fc>
  405b09:	lea    rax,[rip+0x6c70]        # 40c780 <flatcc_builder_padding_base@@Base>
  405b10:	mov    ecx,DWORD PTR [rbp-0x30]
  405b13:	mov    edx,ecx
  405b15:	add    rdx,QWORD PTR [rbp-0xd0]
  405b1c:	mov    QWORD PTR [rbp-0xd0],rdx
  405b23:	lea    rdx,[rbp-0xd0]
  405b2a:	mov    rsi,rdx
  405b2d:	add    rsi,0x10
  405b31:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405b38:	shl    rdi,0x4
  405b3c:	add    rsi,rdi
  405b3f:	mov    QWORD PTR [rsi],rax
  405b42:	mov    ecx,DWORD PTR [rbp-0x30]
  405b45:	mov    eax,ecx
  405b47:	add    rdx,0x10
  405b4b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405b52:	shl    rsi,0x4
  405b56:	add    rdx,rsi
  405b59:	mov    QWORD PTR [rdx+0x8],rax
  405b5d:	mov    ecx,DWORD PTR [rbp-0xc8]
  405b63:	add    ecx,0x1
  405b66:	mov    DWORD PTR [rbp-0xc8],ecx
  405b6c:	mov    rax,QWORD PTR [rbp-0x10]
  405b70:	mov    ecx,DWORD PTR [rax+0xf0]
  405b76:	mov    rax,QWORD PTR [rbp-0xd0]
  405b7d:	mov    edx,eax
  405b7f:	sub    ecx,edx
  405b81:	mov    ecx,ecx
  405b83:	mov    eax,ecx
  405b85:	cmp    DWORD PTR [rbp-0xd8],0x0
  405b8c:	mov    sil,0x1
  405b8f:	mov    QWORD PTR [rbp-0xe8],rax
  405b96:	mov    BYTE PTR [rbp-0xe9],sil
  405b9d:	jne    405bb3 <flatcc_builder_create_buffer@@Base+0x343>
  405ba3:	cmp    DWORD PTR [rbp-0xdc],0x0
  405baa:	setne  al
  405bad:	mov    BYTE PTR [rbp-0xe9],al
  405bb3:	mov    al,BYTE PTR [rbp-0xe9]
  405bb9:	xor    ecx,ecx
  405bbb:	mov    edx,ecx
  405bbd:	mov    ecx,0x4
  405bc2:	mov    esi,ecx
  405bc4:	test   al,0x1
  405bc6:	cmovne rdx,rsi
  405bca:	mov    rsi,QWORD PTR [rbp-0xe8]
  405bd1:	add    rsi,rdx
  405bd4:	mov    ecx,esi
  405bd6:	mov    DWORD PTR [rbp-0x40],ecx
  405bd9:	cmp    DWORD PTR [rbp-0xd8],0x0
  405be0:	je     405c02 <flatcc_builder_create_buffer@@Base+0x392>
  405be6:	mov    rax,QWORD PTR [rbp-0x10]
  405bea:	mov    ecx,DWORD PTR [rax+0xf8]
  405bf0:	sub    ecx,DWORD PTR [rbp-0x40]
  405bf3:	mov    edi,ecx
  405bf5:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  405bfa:	mov    DWORD PTR [rbp-0x3c],eax
  405bfd:	jmp    405c19 <flatcc_builder_create_buffer@@Base+0x3a9>
  405c02:	mov    rax,QWORD PTR [rbp-0x10]
  405c06:	mov    ecx,DWORD PTR [rax+0xf4]
  405c0c:	sub    ecx,DWORD PTR [rbp-0x40]
  405c0f:	mov    edi,ecx
  405c11:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  405c16:	mov    DWORD PTR [rbp-0x3c],eax
  405c19:	mov    eax,DWORD PTR [rbp-0x20]
  405c1c:	sub    eax,DWORD PTR [rbp-0x40]
  405c1f:	mov    edi,eax
  405c21:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  405c26:	mov    DWORD PTR [rbp-0x38],eax
  405c29:	mov    rdi,QWORD PTR [rbp-0x10]
  405c2d:	lea    rsi,[rbp-0xd0]
  405c34:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  405c39:	xor    ecx,ecx
  405c3b:	mov    DWORD PTR [rbp-0x2c],eax
  405c3e:	cmp    ecx,eax
  405c40:	jne    405c65 <flatcc_builder_create_buffer@@Base+0x3f5>
  405c46:	lea    rdi,[rip+0x7f05]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405c4d:	lea    rsi,[rip+0x6d3e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405c54:	mov    edx,0x304
  405c59:	lea    rcx,[rip+0x6e87]        # 40cae7 <flatcc_builder_padding_base@@Base+0x367>
  405c60:	call   403090 <__assert_fail@plt>
  405c65:	mov    eax,DWORD PTR [rbp-0x2c]
  405c68:	mov    DWORD PTR [rbp-0x4],eax
  405c6b:	mov    eax,DWORD PTR [rbp-0x4]
  405c6e:	add    rsp,0xf0
  405c75:	pop    rbp
  405c76:	ret    
  405c77:	nop    WORD PTR [rax+rax*1+0x0]
  405c80:	push   rbp
  405c81:	mov    rbp,rsp
  405c84:	mov    ax,si
  405c87:	mov    QWORD PTR [rbp-0x8],rdi
  405c8b:	mov    WORD PTR [rbp-0xa],ax
  405c8f:	mov    rdi,QWORD PTR [rbp-0x8]
  405c93:	movzx  esi,WORD PTR [rdi+0xe8]
  405c9a:	movzx  ecx,WORD PTR [rbp-0xa]
  405c9e:	cmp    esi,ecx
  405ca0:	jge    405cb5 <flatcc_builder_create_buffer@@Base+0x445>
  405ca6:	mov    ax,WORD PTR [rbp-0xa]
  405caa:	mov    rcx,QWORD PTR [rbp-0x8]
  405cae:	mov    WORD PTR [rcx+0xe8],ax
  405cb5:	pop    rbp
  405cb6:	ret    
  405cb7:	nop    WORD PTR [rax+rax*1+0x0]
  405cc0:	push   rbp
  405cc1:	mov    rbp,rsp
  405cc4:	mov    DWORD PTR [rbp-0x4],edi
  405cc7:	mov    eax,DWORD PTR [rbp-0x4]
  405cca:	pop    rbp
  405ccb:	ret    
  405ccc:	nop    DWORD PTR [rax+0x0]

0000000000405cd0 <flatcc_builder_create_struct@@Base>:
  405cd0:	push   rbp
  405cd1:	mov    rbp,rsp
  405cd4:	sub    rsp,0xc0
  405cdb:	mov    ax,cx
  405cde:	mov    QWORD PTR [rbp-0x8],rdi
  405ce2:	mov    QWORD PTR [rbp-0x10],rsi
  405ce6:	mov    QWORD PTR [rbp-0x18],rdx
  405cea:	mov    WORD PTR [rbp-0x1a],ax
  405cee:	movzx  ecx,WORD PTR [rbp-0x1a]
  405cf2:	cmp    ecx,0x1
  405cf5:	jl     405d00 <flatcc_builder_create_struct@@Base+0x30>
  405cfb:	jmp    405d1f <flatcc_builder_create_struct@@Base+0x4f>
  405d00:	lea    rdi,[rip+0x6e63]        # 40cb6a <flatcc_builder_padding_base@@Base+0x3ea>
  405d07:	lea    rsi,[rip+0x6c84]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405d0e:	mov    edx,0x30f
  405d13:	lea    rcx,[rip+0x6e5b]        # 40cb75 <flatcc_builder_padding_base@@Base+0x3f5>
  405d1a:	call   403090 <__assert_fail@plt>
  405d1f:	mov    rdi,QWORD PTR [rbp-0x8]
  405d23:	movzx  esi,WORD PTR [rbp-0x1a]
  405d27:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  405d2c:	mov    rdi,QWORD PTR [rbp-0x8]
  405d30:	mov    rax,QWORD PTR [rbp-0x18]
  405d34:	mov    esi,eax
  405d36:	movzx  edx,WORD PTR [rbp-0x1a]
  405d3a:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405d3f:	mov    eax,eax
  405d41:	mov    edi,eax
  405d43:	mov    QWORD PTR [rbp-0x28],rdi
  405d47:	mov    QWORD PTR [rbp-0xb8],0x0
  405d52:	mov    DWORD PTR [rbp-0xb0],0x0
  405d5c:	cmp    QWORD PTR [rbp-0x18],0x0
  405d61:	jbe    405dc5 <flatcc_builder_create_struct@@Base+0xf5>
  405d67:	mov    rax,QWORD PTR [rbp-0x18]
  405d6b:	add    rax,QWORD PTR [rbp-0xb8]
  405d72:	mov    QWORD PTR [rbp-0xb8],rax
  405d79:	mov    rax,QWORD PTR [rbp-0x10]
  405d7d:	lea    rcx,[rbp-0xb8]
  405d84:	mov    rdx,rcx
  405d87:	add    rdx,0x10
  405d8b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405d92:	shl    rsi,0x4
  405d96:	add    rdx,rsi
  405d99:	mov    QWORD PTR [rdx],rax
  405d9c:	mov    rax,QWORD PTR [rbp-0x18]
  405da0:	add    rcx,0x10
  405da4:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405dab:	shl    rdx,0x4
  405daf:	add    rcx,rdx
  405db2:	mov    QWORD PTR [rcx+0x8],rax
  405db6:	mov    edi,DWORD PTR [rbp-0xb0]
  405dbc:	add    edi,0x1
  405dbf:	mov    DWORD PTR [rbp-0xb0],edi
  405dc5:	cmp    QWORD PTR [rbp-0x28],0x0
  405dca:	jbe    405e31 <flatcc_builder_create_struct@@Base+0x161>
  405dd0:	lea    rax,[rip+0x69a9]        # 40c780 <flatcc_builder_padding_base@@Base>
  405dd7:	mov    rcx,QWORD PTR [rbp-0x28]
  405ddb:	add    rcx,QWORD PTR [rbp-0xb8]
  405de2:	mov    QWORD PTR [rbp-0xb8],rcx
  405de9:	lea    rcx,[rbp-0xb8]
  405df0:	mov    rdx,rcx
  405df3:	add    rdx,0x10
  405df7:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405dfe:	shl    rsi,0x4
  405e02:	add    rdx,rsi
  405e05:	mov    QWORD PTR [rdx],rax
  405e08:	mov    rax,QWORD PTR [rbp-0x28]
  405e0c:	add    rcx,0x10
  405e10:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405e17:	shl    rdx,0x4
  405e1b:	add    rcx,rdx
  405e1e:	mov    QWORD PTR [rcx+0x8],rax
  405e22:	mov    edi,DWORD PTR [rbp-0xb0]
  405e28:	add    edi,0x1
  405e2b:	mov    DWORD PTR [rbp-0xb0],edi
  405e31:	mov    rdi,QWORD PTR [rbp-0x8]
  405e35:	lea    rsi,[rbp-0xb8]
  405e3c:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  405e41:	add    rsp,0xc0
  405e48:	pop    rbp
  405e49:	ret    
  405e4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405e50 <flatcc_builder_start_buffer@@Base>:
  405e50:	push   rbp
  405e51:	mov    rbp,rsp
  405e54:	sub    rsp,0x30
  405e58:	mov    ax,dx
  405e5b:	mov    QWORD PTR [rbp-0x10],rdi
  405e5f:	mov    QWORD PTR [rbp-0x18],rsi
  405e63:	mov    WORD PTR [rbp-0x1a],ax
  405e67:	mov    DWORD PTR [rbp-0x20],ecx
  405e6a:	mov    rdi,QWORD PTR [rbp-0x10]
  405e6e:	mov    rsi,QWORD PTR [rbp-0x10]
  405e72:	movzx  esi,WORD PTR [rsi+0xe8]
  405e79:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  405e7e:	cmp    eax,0x0
  405e81:	je     405e93 <flatcc_builder_start_buffer@@Base+0x43>
  405e87:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405e8e:	jmp    405fb7 <flatcc_builder_start_buffer@@Base+0x167>
  405e93:	mov    rax,QWORD PTR [rbp-0x10]
  405e97:	mov    WORD PTR [rax+0xe8],0x1
  405ea0:	mov    rax,QWORD PTR [rbp-0x10]
  405ea4:	mov    cx,WORD PTR [rax+0xec]
  405eab:	mov    rax,QWORD PTR [rbp-0x10]
  405eaf:	mov    rax,QWORD PTR [rax+0x30]
  405eb3:	mov    WORD PTR [rax+0x22],cx
  405eb7:	mov    cx,WORD PTR [rbp-0x1a]
  405ebb:	mov    rax,QWORD PTR [rbp-0x10]
  405ebf:	mov    WORD PTR [rax+0xec],cx
  405ec6:	mov    rax,QWORD PTR [rbp-0x10]
  405eca:	mov    cx,WORD PTR [rax+0x10c]
  405ed1:	mov    rax,QWORD PTR [rbp-0x10]
  405ed5:	mov    rax,QWORD PTR [rax+0x30]
  405ed9:	mov    WORD PTR [rax+0x20],cx
  405edd:	mov    edx,DWORD PTR [rbp-0x20]
  405ee0:	mov    cx,dx
  405ee3:	mov    rax,QWORD PTR [rbp-0x10]
  405ee7:	mov    WORD PTR [rax+0x10c],cx
  405eee:	mov    rax,QWORD PTR [rbp-0x10]
  405ef2:	mov    edx,DWORD PTR [rax+0xf8]
  405ef8:	mov    rax,QWORD PTR [rbp-0x10]
  405efc:	mov    rax,QWORD PTR [rax+0x30]
  405f00:	mov    DWORD PTR [rax+0x14],edx
  405f03:	mov    rax,QWORD PTR [rbp-0x10]
  405f07:	mov    edx,DWORD PTR [rax+0x100]
  405f0d:	mov    rax,QWORD PTR [rbp-0x10]
  405f11:	mov    rax,QWORD PTR [rax+0x30]
  405f15:	mov    DWORD PTR [rax+0x1c],edx
  405f18:	mov    rax,QWORD PTR [rbp-0x10]
  405f1c:	mov    edx,DWORD PTR [rax+0xf0]
  405f22:	mov    rax,QWORD PTR [rbp-0x10]
  405f26:	mov    DWORD PTR [rax+0xf8],edx
  405f2c:	mov    rax,QWORD PTR [rbp-0x10]
  405f30:	mov    edx,DWORD PTR [rax+0xfc]
  405f36:	mov    esi,edx
  405f38:	add    esi,0x1
  405f3b:	mov    DWORD PTR [rax+0xfc],esi
  405f41:	mov    rax,QWORD PTR [rbp-0x10]
  405f45:	mov    DWORD PTR [rax+0x100],edx
  405f4b:	mov    rax,QWORD PTR [rbp-0x10]
  405f4f:	mov    edx,DWORD PTR [rax+0x110]
  405f55:	mov    rax,QWORD PTR [rbp-0x10]
  405f59:	mov    rax,QWORD PTR [rax+0x30]
  405f5d:	mov    DWORD PTR [rax+0x10],edx
  405f60:	mov    rax,QWORD PTR [rbp-0x10]
  405f64:	add    rax,0x110
  405f6a:	cmp    QWORD PTR [rbp-0x18],0x0
  405f6f:	mov    QWORD PTR [rbp-0x28],rax
  405f73:	je     405f86 <flatcc_builder_start_buffer@@Base+0x136>
  405f79:	mov    rax,QWORD PTR [rbp-0x18]
  405f7d:	mov    QWORD PTR [rbp-0x30],rax
  405f81:	jmp    405f96 <flatcc_builder_start_buffer@@Base+0x146>
  405f86:	lea    rax,[rip+0x67f3]        # 40c780 <flatcc_builder_padding_base@@Base>
  405f8d:	mov    QWORD PTR [rbp-0x30],rax
  405f91:	jmp    405f96 <flatcc_builder_start_buffer@@Base+0x146>
  405f96:	mov    rax,QWORD PTR [rbp-0x30]
  405f9a:	mov    ecx,DWORD PTR [rax]
  405f9c:	mov    rax,QWORD PTR [rbp-0x28]
  405fa0:	mov    DWORD PTR [rax],ecx
  405fa2:	mov    rdx,QWORD PTR [rbp-0x10]
  405fa6:	mov    rdx,QWORD PTR [rdx+0x30]
  405faa:	mov    WORD PTR [rdx+0xe],0x1
  405fb0:	mov    DWORD PTR [rbp-0x4],0x0
  405fb7:	mov    eax,DWORD PTR [rbp-0x4]
  405fba:	add    rsp,0x30
  405fbe:	pop    rbp
  405fbf:	ret    
  405fc0:	push   rbp
  405fc1:	mov    rbp,rsp
  405fc4:	sub    rsp,0x20
  405fc8:	mov    ax,si
  405fcb:	mov    QWORD PTR [rbp-0x10],rdi
  405fcf:	mov    WORD PTR [rbp-0x12],ax
  405fd3:	mov    rdi,QWORD PTR [rbp-0x10]
  405fd7:	mov    esi,DWORD PTR [rdi+0x104]
  405fdd:	add    esi,0x1
  405fe0:	mov    DWORD PTR [rdi+0x104],esi
  405fe6:	mov    rdi,QWORD PTR [rbp-0x10]
  405fea:	cmp    esi,DWORD PTR [rdi+0x108]
  405ff0:	jle    4060e0 <flatcc_builder_start_buffer@@Base+0x290>
  405ff6:	mov    rax,QWORD PTR [rbp-0x10]
  405ffa:	cmp    DWORD PTR [rax+0x120],0x0
  406001:	jle    40602d <flatcc_builder_start_buffer@@Base+0x1dd>
  406007:	mov    rax,QWORD PTR [rbp-0x10]
  40600b:	mov    ecx,DWORD PTR [rax+0x104]
  406011:	mov    rax,QWORD PTR [rbp-0x10]
  406015:	cmp    ecx,DWORD PTR [rax+0x120]
  40601b:	jle    40602d <flatcc_builder_start_buffer@@Base+0x1dd>
  406021:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406028:	jmp    406178 <flatcc_builder_start_buffer@@Base+0x328>
  40602d:	mov    eax,0x24
  406032:	mov    ecx,eax
  406034:	xor    r8d,r8d
  406037:	mov    rdi,QWORD PTR [rbp-0x10]
  40603b:	mov    rdx,QWORD PTR [rbp-0x10]
  40603f:	mov    eax,DWORD PTR [rdx+0x104]
  406045:	sub    eax,0x1
  406048:	movsxd rdx,eax
  40604b:	imul   rdx,rdx,0x24
  40604f:	mov    esi,0x4
  406054:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  406059:	mov    rcx,QWORD PTR [rbp-0x10]
  40605d:	mov    QWORD PTR [rcx+0x30],rax
  406061:	cmp    rax,0x0
  406065:	jne    406077 <flatcc_builder_start_buffer@@Base+0x227>
  40606b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406072:	jmp    406178 <flatcc_builder_start_buffer@@Base+0x328>
  406077:	mov    eax,0x24
  40607c:	mov    ecx,eax
  40607e:	mov    rdx,QWORD PTR [rbp-0x10]
  406082:	mov    rax,QWORD PTR [rdx+0xa0]
  406089:	xor    esi,esi
  40608b:	mov    edx,esi
  40608d:	div    rcx
  406090:	mov    esi,eax
  406092:	mov    rax,QWORD PTR [rbp-0x10]
  406096:	mov    DWORD PTR [rax+0x108],esi
  40609c:	mov    rax,QWORD PTR [rbp-0x10]
  4060a0:	cmp    DWORD PTR [rax+0x120],0x0
  4060a7:	jle    4060db <flatcc_builder_start_buffer@@Base+0x28b>
  4060ad:	mov    rax,QWORD PTR [rbp-0x10]
  4060b1:	mov    ecx,DWORD PTR [rax+0x120]
  4060b7:	mov    rax,QWORD PTR [rbp-0x10]
  4060bb:	cmp    ecx,DWORD PTR [rax+0x108]
  4060c1:	jge    4060db <flatcc_builder_start_buffer@@Base+0x28b>
  4060c7:	mov    rax,QWORD PTR [rbp-0x10]
  4060cb:	mov    ecx,DWORD PTR [rax+0x120]
  4060d1:	mov    rax,QWORD PTR [rbp-0x10]
  4060d5:	mov    DWORD PTR [rax+0x108],ecx
  4060db:	jmp    4060f0 <flatcc_builder_start_buffer@@Base+0x2a0>
  4060e0:	mov    rax,QWORD PTR [rbp-0x10]
  4060e4:	mov    rcx,QWORD PTR [rax+0x30]
  4060e8:	add    rcx,0x24
  4060ec:	mov    QWORD PTR [rax+0x30],rcx
  4060f0:	mov    rax,QWORD PTR [rbp-0x10]
  4060f4:	mov    ecx,DWORD PTR [rax+0x20]
  4060f7:	mov    rax,QWORD PTR [rbp-0x10]
  4060fb:	mov    rax,QWORD PTR [rax+0x30]
  4060ff:	mov    DWORD PTR [rax+0x8],ecx
  406102:	mov    rax,QWORD PTR [rbp-0x10]
  406106:	mov    dx,WORD PTR [rax+0xea]
  40610d:	mov    rax,QWORD PTR [rbp-0x10]
  406111:	mov    rax,QWORD PTR [rax+0x30]
  406115:	mov    WORD PTR [rax+0xc],dx
  406119:	mov    dx,WORD PTR [rbp-0x12]
  40611d:	mov    rax,QWORD PTR [rbp-0x10]
  406121:	mov    WORD PTR [rax+0xea],dx
  406128:	mov    rax,QWORD PTR [rbp-0x10]
  40612c:	mov    ecx,DWORD PTR [rax+0x28]
  40612f:	mov    rax,QWORD PTR [rbp-0x10]
  406133:	mov    rax,QWORD PTR [rax+0x30]
  406137:	mov    DWORD PTR [rax],ecx
  406139:	mov    rax,QWORD PTR [rbp-0x10]
  40613d:	mov    rax,QWORD PTR [rax+0x30]
  406141:	mov    DWORD PTR [rax+0x4],0xfffffffc
  406148:	mov    rax,QWORD PTR [rbp-0x10]
  40614c:	mov    ecx,DWORD PTR [rax+0x28]
  40614f:	mov    rax,QWORD PTR [rbp-0x10]
  406153:	add    ecx,DWORD PTR [rax+0x20]
  406156:	add    ecx,0x8
  406159:	sub    ecx,0x1
  40615c:	and    ecx,0xfffffff8
  40615f:	mov    rax,QWORD PTR [rbp-0x10]
  406163:	mov    DWORD PTR [rax+0x28],ecx
  406166:	mov    rax,QWORD PTR [rbp-0x10]
  40616a:	mov    DWORD PTR [rax+0x20],0x0
  406171:	mov    DWORD PTR [rbp-0x4],0x0
  406178:	mov    eax,DWORD PTR [rbp-0x4]
  40617b:	add    rsp,0x20
  40617f:	pop    rbp
  406180:	ret    
  406181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406190 <flatcc_builder_end_buffer@@Base>:
  406190:	push   rbp
  406191:	mov    rbp,rsp
  406194:	sub    rsp,0x20
  406198:	xor    eax,eax
  40619a:	mov    QWORD PTR [rbp-0x10],rdi
  40619e:	mov    DWORD PTR [rbp-0x14],esi
  4061a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4061a5:	movzx  esi,WORD PTR [rdi+0x10c]
  4061ac:	and    esi,0x2
  4061af:	mov    DWORD PTR [rbp-0x1c],esi
  4061b2:	mov    rdi,QWORD PTR [rbp-0x10]
  4061b6:	mov    esi,DWORD PTR [rdi+0x100]
  4061bc:	cmp    esi,0x0
  4061bf:	mov    esi,0x1
  4061c4:	cmove  esi,eax
  4061c7:	or     esi,DWORD PTR [rbp-0x1c]
  4061ca:	mov    DWORD PTR [rbp-0x1c],esi
  4061cd:	mov    rdi,QWORD PTR [rbp-0x10]
  4061d1:	mov    rdi,QWORD PTR [rdi+0x30]
  4061d5:	movzx  eax,WORD PTR [rdi+0xe]
  4061d9:	cmp    eax,0x1
  4061dc:	jne    4061e7 <flatcc_builder_end_buffer@@Base+0x57>
  4061e2:	jmp    406206 <flatcc_builder_end_buffer@@Base+0x76>
  4061e7:	lea    rdi,[rip+0x69ed]        # 40cbdb <flatcc_builder_padding_base@@Base+0x45b>
  4061ee:	lea    rsi,[rip+0x679d]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4061f5:	mov    edx,0x346
  4061fa:	lea    rcx,[rip+0x6a06]        # 40cc07 <flatcc_builder_padding_base@@Base+0x487>
  406201:	call   403090 <__assert_fail@plt>
  406206:	mov    rdi,QWORD PTR [rbp-0x10]
  40620a:	mov    rax,QWORD PTR [rbp-0x10]
  40620e:	movzx  esi,WORD PTR [rax+0xec]
  406215:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  40621a:	mov    rdi,QWORD PTR [rbp-0x10]
  40621e:	mov    rax,QWORD PTR [rbp-0x10]
  406222:	add    rax,0x110
  406228:	mov    rcx,QWORD PTR [rbp-0x10]
  40622c:	mov    dx,WORD PTR [rcx+0xec]
  406233:	mov    ecx,DWORD PTR [rbp-0x14]
  406236:	mov    r8,QWORD PTR [rbp-0x10]
  40623a:	mov    r9w,WORD PTR [r8+0xe8]
  406242:	mov    esi,DWORD PTR [rbp-0x1c]
  406245:	mov    DWORD PTR [rbp-0x20],esi
  406248:	mov    rsi,rax
  40624b:	movzx  edx,dx
  40624e:	movzx  r8d,r9w
  406252:	mov    r9d,DWORD PTR [rbp-0x20]
  406256:	call   405870 <flatcc_builder_create_buffer@@Base>
  40625b:	xor    ecx,ecx
  40625d:	mov    DWORD PTR [rbp-0x18],eax
  406260:	cmp    ecx,eax
  406262:	jne    406274 <flatcc_builder_end_buffer@@Base+0xe4>
  406268:	mov    DWORD PTR [rbp-0x4],0x0
  40626f:	jmp    4062d9 <flatcc_builder_end_buffer@@Base+0x149>
  406274:	mov    rax,QWORD PTR [rbp-0x10]
  406278:	mov    rax,QWORD PTR [rax+0x30]
  40627c:	mov    ecx,DWORD PTR [rax+0x14]
  40627f:	mov    rax,QWORD PTR [rbp-0x10]
  406283:	mov    DWORD PTR [rax+0xf8],ecx
  406289:	mov    rax,QWORD PTR [rbp-0x10]
  40628d:	mov    rax,QWORD PTR [rax+0x30]
  406291:	mov    ecx,DWORD PTR [rax+0x1c]
  406294:	mov    rax,QWORD PTR [rbp-0x10]
  406298:	mov    DWORD PTR [rax+0x100],ecx
  40629e:	mov    rax,QWORD PTR [rbp-0x10]
  4062a2:	mov    rax,QWORD PTR [rax+0x30]
  4062a6:	mov    ecx,DWORD PTR [rax+0x10]
  4062a9:	mov    rax,QWORD PTR [rbp-0x10]
  4062ad:	mov    DWORD PTR [rax+0x110],ecx
  4062b3:	mov    rax,QWORD PTR [rbp-0x10]
  4062b7:	mov    rax,QWORD PTR [rax+0x30]
  4062bb:	mov    dx,WORD PTR [rax+0x20]
  4062bf:	mov    rax,QWORD PTR [rbp-0x10]
  4062c3:	mov    WORD PTR [rax+0x10c],dx
  4062ca:	mov    rdi,QWORD PTR [rbp-0x10]
  4062ce:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  4062d3:	mov    ecx,DWORD PTR [rbp-0x18]
  4062d6:	mov    DWORD PTR [rbp-0x4],ecx
  4062d9:	mov    eax,DWORD PTR [rbp-0x4]
  4062dc:	add    rsp,0x20
  4062e0:	pop    rbp
  4062e1:	ret    
  4062e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	push   rbp
  4062f1:	mov    rbp,rsp
  4062f4:	sub    rsp,0x10
  4062f8:	xor    esi,esi
  4062fa:	mov    QWORD PTR [rbp-0x8],rdi
  4062fe:	mov    rdi,QWORD PTR [rbp-0x8]
  406302:	mov    rdi,QWORD PTR [rdi+0x18]
  406306:	mov    rax,QWORD PTR [rbp-0x8]
  40630a:	mov    ecx,DWORD PTR [rax+0x20]
  40630d:	mov    edx,ecx
  40630f:	call   4030a0 <memset@plt>
  406314:	mov    rax,QWORD PTR [rbp-0x8]
  406318:	mov    rax,QWORD PTR [rax+0x30]
  40631c:	mov    ecx,DWORD PTR [rax+0x8]
  40631f:	mov    rax,QWORD PTR [rbp-0x8]
  406323:	mov    DWORD PTR [rax+0x20],ecx
  406326:	mov    rax,QWORD PTR [rbp-0x8]
  40632a:	mov    rax,QWORD PTR [rax+0x30]
  40632e:	mov    ecx,DWORD PTR [rax]
  406330:	mov    rax,QWORD PTR [rbp-0x8]
  406334:	mov    DWORD PTR [rax+0x28],ecx
  406337:	mov    rdi,QWORD PTR [rbp-0x8]
  40633b:	mov    rax,QWORD PTR [rbp-0x8]
  40633f:	mov    rax,QWORD PTR [rax+0x30]
  406343:	mov    esi,DWORD PTR [rax+0x4]
  406346:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  40634b:	mov    rdi,QWORD PTR [rbp-0x8]
  40634f:	mov    rax,QWORD PTR [rbp-0x8]
  406353:	movzx  esi,WORD PTR [rax+0xea]
  40635a:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  40635f:	mov    rax,QWORD PTR [rbp-0x8]
  406363:	mov    rax,QWORD PTR [rax+0x30]
  406367:	mov    r8w,WORD PTR [rax+0xc]
  40636c:	mov    rax,QWORD PTR [rbp-0x8]
  406370:	mov    WORD PTR [rax+0xea],r8w
  406378:	mov    rax,QWORD PTR [rbp-0x8]
  40637c:	mov    rdx,QWORD PTR [rax+0x30]
  406380:	add    rdx,0xffffffffffffffdc
  406384:	mov    QWORD PTR [rax+0x30],rdx
  406388:	mov    rax,QWORD PTR [rbp-0x8]
  40638c:	mov    ecx,DWORD PTR [rax+0x104]
  406392:	add    ecx,0xffffffff
  406395:	mov    DWORD PTR [rax+0x104],ecx
  40639b:	add    rsp,0x10
  40639f:	pop    rbp
  4063a0:	ret    
  4063a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004063b0 <flatcc_builder_start_struct@@Base>:
  4063b0:	push   rbp
  4063b1:	mov    rbp,rsp
  4063b4:	sub    rsp,0x20
  4063b8:	mov    ax,dx
  4063bb:	mov    QWORD PTR [rbp-0x10],rdi
  4063bf:	mov    QWORD PTR [rbp-0x18],rsi
  4063c3:	mov    WORD PTR [rbp-0x1a],ax
  4063c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4063cb:	movzx  esi,WORD PTR [rbp-0x1a]
  4063cf:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  4063d4:	cmp    eax,0x0
  4063d7:	je     4063ea <flatcc_builder_start_struct@@Base+0x3a>
  4063dd:	mov    QWORD PTR [rbp-0x8],0x0
  4063e5:	jmp    406419 <flatcc_builder_start_struct@@Base+0x69>
  4063ea:	mov    rax,QWORD PTR [rbp-0x10]
  4063ee:	mov    rax,QWORD PTR [rax+0x30]
  4063f2:	mov    WORD PTR [rax+0xe],0x2
  4063f8:	mov    rdi,QWORD PTR [rbp-0x10]
  4063fc:	mov    esi,0xfffffffc
  406401:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  406406:	mov    rdi,QWORD PTR [rbp-0x10]
  40640a:	mov    rax,QWORD PTR [rbp-0x18]
  40640e:	mov    esi,eax
  406410:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  406415:	mov    QWORD PTR [rbp-0x8],rax
  406419:	mov    rax,QWORD PTR [rbp-0x8]
  40641d:	add    rsp,0x20
  406421:	pop    rbp
  406422:	ret    
  406423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40642d:	nop    DWORD PTR [rax]
  406430:	push   rbp
  406431:	mov    rbp,rsp
  406434:	mov    QWORD PTR [rbp-0x8],rdi
  406438:	mov    DWORD PTR [rbp-0xc],esi
  40643b:	mov    rdi,QWORD PTR [rbp-0x8]
  40643f:	add    rdi,0x58
  406443:	add    rdi,0x10
  406447:	mov    QWORD PTR [rbp-0x18],rdi
  40644b:	mov    rdi,QWORD PTR [rbp-0x8]
  40644f:	mov    rdi,QWORD PTR [rdi+0x68]
  406453:	mov    rax,QWORD PTR [rbp-0x8]
  406457:	mov    esi,DWORD PTR [rax+0x28]
  40645a:	mov    eax,esi
  40645c:	add    rdi,rax
  40645f:	mov    rax,QWORD PTR [rbp-0x8]
  406463:	mov    QWORD PTR [rax+0x18],rdi
  406467:	mov    rax,QWORD PTR [rbp-0x18]
  40646b:	mov    rax,QWORD PTR [rax+0x8]
  40646f:	mov    esi,eax
  406471:	mov    rax,QWORD PTR [rbp-0x8]
  406475:	sub    esi,DWORD PTR [rax+0x28]
  406478:	mov    rax,QWORD PTR [rbp-0x8]
  40647c:	mov    DWORD PTR [rax+0x24],esi
  40647f:	mov    rax,QWORD PTR [rbp-0x8]
  406483:	mov    esi,DWORD PTR [rax+0x24]
  406486:	cmp    esi,DWORD PTR [rbp-0xc]
  406489:	jbe    406499 <flatcc_builder_start_struct@@Base+0xe9>
  40648f:	mov    eax,DWORD PTR [rbp-0xc]
  406492:	mov    rcx,QWORD PTR [rbp-0x8]
  406496:	mov    DWORD PTR [rcx+0x24],eax
  406499:	mov    eax,DWORD PTR [rbp-0xc]
  40649c:	mov    rcx,QWORD PTR [rbp-0x8]
  4064a0:	mov    rcx,QWORD PTR [rcx+0x30]
  4064a4:	mov    DWORD PTR [rcx+0x4],eax
  4064a7:	pop    rbp
  4064a8:	ret    
  4064a9:	nop    DWORD PTR [rax+0x0]
  4064b0:	push   rbp
  4064b1:	mov    rbp,rsp
  4064b4:	sub    rsp,0x20
  4064b8:	mov    QWORD PTR [rbp-0x10],rdi
  4064bc:	mov    DWORD PTR [rbp-0x14],esi
  4064bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4064c3:	mov    esi,DWORD PTR [rdi+0x20]
  4064c6:	mov    edi,esi
  4064c8:	mov    QWORD PTR [rbp-0x20],rdi
  4064cc:	mov    esi,DWORD PTR [rbp-0x14]
  4064cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4064d3:	add    esi,DWORD PTR [rdi+0x20]
  4064d6:	mov    DWORD PTR [rdi+0x20],esi
  4064d9:	mov    rdi,QWORD PTR [rbp-0x10]
  4064dd:	cmp    esi,DWORD PTR [rdi+0x24]
  4064e0:	jb     40651d <flatcc_builder_start_struct@@Base+0x16d>
  4064e6:	mov    rdi,QWORD PTR [rbp-0x10]
  4064ea:	mov    rax,QWORD PTR [rbp-0x10]
  4064ee:	mov    ecx,DWORD PTR [rax+0x20]
  4064f1:	add    ecx,0x1
  4064f4:	mov    ecx,ecx
  4064f6:	mov    esi,ecx
  4064f8:	mov    edx,0xfffffffc
  4064fd:	call   40a4d0 <flatcc_builder_get_emit_context@@Base+0x50>
  406502:	cmp    eax,0x0
  406505:	je     406518 <flatcc_builder_start_struct@@Base+0x168>
  40650b:	mov    QWORD PTR [rbp-0x8],0x0
  406513:	jmp    40652d <flatcc_builder_start_struct@@Base+0x17d>
  406518:	jmp    40651d <flatcc_builder_start_struct@@Base+0x16d>
  40651d:	mov    rax,QWORD PTR [rbp-0x10]
  406521:	mov    rax,QWORD PTR [rax+0x18]
  406525:	add    rax,QWORD PTR [rbp-0x20]
  406529:	mov    QWORD PTR [rbp-0x8],rax
  40652d:	mov    rax,QWORD PTR [rbp-0x8]
  406531:	add    rsp,0x20
  406535:	pop    rbp
  406536:	ret    
  406537:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406540 <flatcc_builder_struct_edit@@Base>:
  406540:	push   rbp
  406541:	mov    rbp,rsp
  406544:	mov    QWORD PTR [rbp-0x8],rdi
  406548:	mov    rdi,QWORD PTR [rbp-0x8]
  40654c:	mov    rax,QWORD PTR [rdi+0x18]
  406550:	pop    rbp
  406551:	ret    
  406552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40655c:	nop    DWORD PTR [rax+0x0]

0000000000406560 <flatcc_builder_end_struct@@Base>:
  406560:	push   rbp
  406561:	mov    rbp,rsp
  406564:	sub    rsp,0x20
  406568:	mov    QWORD PTR [rbp-0x10],rdi
  40656c:	mov    rdi,QWORD PTR [rbp-0x10]
  406570:	mov    rdi,QWORD PTR [rdi+0x30]
  406574:	movzx  eax,WORD PTR [rdi+0xe]
  406578:	cmp    eax,0x2
  40657b:	jne    406586 <flatcc_builder_end_struct@@Base+0x26>
  406581:	jmp    4065a5 <flatcc_builder_end_struct@@Base+0x45>
  406586:	lea    rdi,[rip+0x66d3]        # 40cc60 <flatcc_builder_padding_base@@Base+0x4e0>
  40658d:	lea    rsi,[rip+0x63fe]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406594:	mov    edx,0x368
  406599:	lea    rcx,[rip+0x66ec]        # 40cc8c <flatcc_builder_padding_base@@Base+0x50c>
  4065a0:	call   403090 <__assert_fail@plt>
  4065a5:	mov    rdi,QWORD PTR [rbp-0x10]
  4065a9:	mov    rax,QWORD PTR [rbp-0x10]
  4065ad:	mov    rsi,QWORD PTR [rax+0x18]
  4065b1:	mov    rax,QWORD PTR [rbp-0x10]
  4065b5:	mov    ecx,DWORD PTR [rax+0x20]
  4065b8:	mov    edx,ecx
  4065ba:	mov    rax,QWORD PTR [rbp-0x10]
  4065be:	movzx  ecx,WORD PTR [rax+0xea]
  4065c5:	call   405cd0 <flatcc_builder_create_struct@@Base>
  4065ca:	xor    ecx,ecx
  4065cc:	mov    DWORD PTR [rbp-0x14],eax
  4065cf:	cmp    ecx,eax
  4065d1:	jne    4065e3 <flatcc_builder_end_struct@@Base+0x83>
  4065d7:	mov    DWORD PTR [rbp-0x4],0x0
  4065de:	jmp    4065f2 <flatcc_builder_end_struct@@Base+0x92>
  4065e3:	mov    rdi,QWORD PTR [rbp-0x10]
  4065e7:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  4065ec:	mov    eax,DWORD PTR [rbp-0x14]
  4065ef:	mov    DWORD PTR [rbp-0x4],eax
  4065f2:	mov    eax,DWORD PTR [rbp-0x4]
  4065f5:	add    rsp,0x20
  4065f9:	pop    rbp
  4065fa:	ret    
  4065fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406600 <flatcc_builder_extend_vector@@Base>:
  406600:	push   rbp
  406601:	mov    rbp,rsp
  406604:	sub    rsp,0x20
  406608:	mov    QWORD PTR [rbp-0x10],rdi
  40660c:	mov    QWORD PTR [rbp-0x18],rsi
  406610:	mov    rdi,QWORD PTR [rbp-0x10]
  406614:	mov    rsi,QWORD PTR [rbp-0x18]
  406618:	mov    eax,esi
  40661a:	mov    rsi,QWORD PTR [rbp-0x10]
  40661e:	mov    rsi,QWORD PTR [rsi+0x30]
  406622:	mov    edx,DWORD PTR [rsi+0x18]
  406625:	mov    esi,eax
  406627:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  40662c:	cmp    eax,0x0
  40662f:	je     406642 <flatcc_builder_extend_vector@@Base+0x42>
  406635:	mov    QWORD PTR [rbp-0x8],0x0
  40663d:	jmp    406665 <flatcc_builder_extend_vector@@Base+0x65>
  406642:	mov    rdi,QWORD PTR [rbp-0x10]
  406646:	mov    rax,QWORD PTR [rbp-0x10]
  40664a:	mov    rax,QWORD PTR [rax+0x30]
  40664e:	mov    ecx,DWORD PTR [rax+0x10]
  406651:	mov    rax,QWORD PTR [rbp-0x18]
  406655:	mov    edx,eax
  406657:	imul   ecx,edx
  40665a:	mov    esi,ecx
  40665c:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  406661:	mov    QWORD PTR [rbp-0x8],rax
  406665:	mov    rax,QWORD PTR [rbp-0x8]
  406669:	add    rsp,0x20
  40666d:	pop    rbp
  40666e:	ret    
  40666f:	nop
  406670:	push   rbp
  406671:	mov    rbp,rsp
  406674:	sub    rsp,0x20
  406678:	mov    QWORD PTR [rbp-0x10],rdi
  40667c:	mov    DWORD PTR [rbp-0x14],esi
  40667f:	mov    DWORD PTR [rbp-0x18],edx
  406682:	mov    rdi,QWORD PTR [rbp-0x10]
  406686:	mov    rdi,QWORD PTR [rdi+0x30]
  40668a:	mov    edx,DWORD PTR [rdi+0x14]
  40668d:	mov    DWORD PTR [rbp-0x1c],edx
  406690:	mov    edx,DWORD PTR [rbp-0x1c]
  406693:	add    edx,DWORD PTR [rbp-0x14]
  406696:	mov    DWORD PTR [rbp-0x20],edx
  406699:	mov    edx,DWORD PTR [rbp-0x1c]
  40669c:	cmp    edx,DWORD PTR [rbp-0x20]
  40669f:	ja     4066b1 <flatcc_builder_extend_vector@@Base+0xb1>
  4066a5:	mov    eax,DWORD PTR [rbp-0x20]
  4066a8:	cmp    eax,DWORD PTR [rbp-0x18]
  4066ab:	jbe    4066f9 <flatcc_builder_extend_vector@@Base+0xf9>
  4066b1:	mov    eax,DWORD PTR [rbp-0x1c]
  4066b4:	cmp    eax,DWORD PTR [rbp-0x20]
  4066b7:	ja     4066ce <flatcc_builder_extend_vector@@Base+0xce>
  4066bd:	mov    eax,DWORD PTR [rbp-0x20]
  4066c0:	cmp    eax,DWORD PTR [rbp-0x18]
  4066c3:	ja     4066ce <flatcc_builder_extend_vector@@Base+0xce>
  4066c9:	jmp    4066ed <flatcc_builder_extend_vector@@Base+0xed>
  4066ce:	lea    rdi,[rip+0x7386]        # 40da5b <flatcc_builder_padding_base@@Base+0x12db>
  4066d5:	lea    rsi,[rip+0x62b6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4066dc:	mov    edx,0x37c
  4066e1:	lea    rcx,[rip+0x738e]        # 40da76 <flatcc_builder_padding_base@@Base+0x12f6>
  4066e8:	call   403090 <__assert_fail@plt>
  4066ed:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066f4:	jmp    40670e <flatcc_builder_extend_vector@@Base+0x10e>
  4066f9:	mov    eax,DWORD PTR [rbp-0x20]
  4066fc:	mov    rcx,QWORD PTR [rbp-0x10]
  406700:	mov    rcx,QWORD PTR [rcx+0x30]
  406704:	mov    DWORD PTR [rcx+0x14],eax
  406707:	mov    DWORD PTR [rbp-0x4],0x0
  40670e:	mov    eax,DWORD PTR [rbp-0x4]
  406711:	add    rsp,0x20
  406715:	pop    rbp
  406716:	ret    
  406717:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406720 <flatcc_builder_vector_push@@Base>:
  406720:	push   rbp
  406721:	mov    rbp,rsp
  406724:	sub    rsp,0x20
  406728:	mov    QWORD PTR [rbp-0x10],rdi
  40672c:	mov    QWORD PTR [rbp-0x18],rsi
  406730:	mov    rsi,QWORD PTR [rbp-0x10]
  406734:	mov    rsi,QWORD PTR [rsi+0x30]
  406738:	movzx  eax,WORD PTR [rsi+0xe]
  40673c:	cmp    eax,0x4
  40673f:	jne    40674a <flatcc_builder_vector_push@@Base+0x2a>
  406745:	jmp    406769 <flatcc_builder_vector_push@@Base+0x49>
  40674a:	lea    rdi,[rip+0x657e]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  406751:	lea    rsi,[rip+0x623a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406758:	mov    edx,0x38b
  40675d:	lea    rcx,[rip+0x6597]        # 40ccfb <flatcc_builder_padding_base@@Base+0x57b>
  406764:	call   403090 <__assert_fail@plt>
  406769:	mov    rax,QWORD PTR [rbp-0x10]
  40676d:	mov    rax,QWORD PTR [rax+0x30]
  406771:	mov    ecx,DWORD PTR [rax+0x14]
  406774:	mov    rax,QWORD PTR [rbp-0x10]
  406778:	mov    rax,QWORD PTR [rax+0x30]
  40677c:	cmp    ecx,DWORD PTR [rax+0x18]
  40677f:	jbe    4067d2 <flatcc_builder_vector_push@@Base+0xb2>
  406785:	mov    rax,QWORD PTR [rbp-0x10]
  406789:	mov    rax,QWORD PTR [rax+0x30]
  40678d:	mov    ecx,DWORD PTR [rax+0x14]
  406790:	mov    rax,QWORD PTR [rbp-0x10]
  406794:	mov    rax,QWORD PTR [rax+0x30]
  406798:	cmp    ecx,DWORD PTR [rax+0x18]
  40679b:	ja     4067a6 <flatcc_builder_vector_push@@Base+0x86>
  4067a1:	jmp    4067c5 <flatcc_builder_vector_push@@Base+0xa5>
  4067a6:	lea    rdi,[rip+0x6591]        # 40cd3e <flatcc_builder_padding_base@@Base+0x5be>
  4067ad:	lea    rsi,[rip+0x61de]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4067b4:	mov    edx,0x38c
  4067b9:	lea    rcx,[rip+0x653b]        # 40ccfb <flatcc_builder_padding_base@@Base+0x57b>
  4067c0:	call   403090 <__assert_fail@plt>
  4067c5:	mov    QWORD PTR [rbp-0x8],0x0
  4067cd:	jmp    4067ff <flatcc_builder_vector_push@@Base+0xdf>
  4067d2:	mov    rax,QWORD PTR [rbp-0x10]
  4067d6:	mov    rax,QWORD PTR [rax+0x30]
  4067da:	mov    ecx,DWORD PTR [rax+0x14]
  4067dd:	add    ecx,0x1
  4067e0:	mov    DWORD PTR [rax+0x14],ecx
  4067e3:	mov    rdi,QWORD PTR [rbp-0x10]
  4067e7:	mov    rsi,QWORD PTR [rbp-0x18]
  4067eb:	mov    rax,QWORD PTR [rbp-0x10]
  4067ef:	mov    rax,QWORD PTR [rax+0x30]
  4067f3:	mov    edx,DWORD PTR [rax+0x10]
  4067f6:	call   406810 <flatcc_builder_vector_push@@Base+0xf0>
  4067fb:	mov    QWORD PTR [rbp-0x8],rax
  4067ff:	mov    rax,QWORD PTR [rbp-0x8]
  406803:	add    rsp,0x20
  406807:	pop    rbp
  406808:	ret    
  406809:	nop    DWORD PTR [rax+0x0]
  406810:	push   rbp
  406811:	mov    rbp,rsp
  406814:	sub    rsp,0x30
  406818:	mov    QWORD PTR [rbp-0x10],rdi
  40681c:	mov    QWORD PTR [rbp-0x18],rsi
  406820:	mov    DWORD PTR [rbp-0x1c],edx
  406823:	mov    rdi,QWORD PTR [rbp-0x10]
  406827:	mov    esi,DWORD PTR [rbp-0x1c]
  40682a:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  40682f:	mov    QWORD PTR [rbp-0x28],rax
  406833:	cmp    rax,0x0
  406837:	jne    40684a <flatcc_builder_vector_push@@Base+0x12a>
  40683d:	mov    QWORD PTR [rbp-0x8],0x0
  406845:	jmp    406864 <flatcc_builder_vector_push@@Base+0x144>
  40684a:	mov    rdi,QWORD PTR [rbp-0x28]
  40684e:	mov    rsi,QWORD PTR [rbp-0x18]
  406852:	mov    eax,DWORD PTR [rbp-0x1c]
  406855:	mov    edx,eax
  406857:	call   4030e0 <memcpy@plt>
  40685c:	mov    rdx,QWORD PTR [rbp-0x28]
  406860:	mov    QWORD PTR [rbp-0x8],rdx
  406864:	mov    rax,QWORD PTR [rbp-0x8]
  406868:	add    rsp,0x30
  40686c:	pop    rbp
  40686d:	ret    
  40686e:	xchg   ax,ax

0000000000406870 <flatcc_builder_append_vector@@Base>:
  406870:	push   rbp
  406871:	mov    rbp,rsp
  406874:	sub    rsp,0x20
  406878:	mov    QWORD PTR [rbp-0x10],rdi
  40687c:	mov    QWORD PTR [rbp-0x18],rsi
  406880:	mov    QWORD PTR [rbp-0x20],rdx
  406884:	mov    rdx,QWORD PTR [rbp-0x10]
  406888:	mov    rdx,QWORD PTR [rdx+0x30]
  40688c:	movzx  eax,WORD PTR [rdx+0xe]
  406890:	cmp    eax,0x4
  406893:	jne    40689e <flatcc_builder_append_vector@@Base+0x2e>
  406899:	jmp    4068bd <flatcc_builder_append_vector@@Base+0x4d>
  40689e:	lea    rdi,[rip+0x642a]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  4068a5:	lea    rsi,[rip+0x60e6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4068ac:	mov    edx,0x393
  4068b1:	lea    rcx,[rip+0x64c3]        # 40cd7b <flatcc_builder_padding_base@@Base+0x5fb>
  4068b8:	call   403090 <__assert_fail@plt>
  4068bd:	mov    rdi,QWORD PTR [rbp-0x10]
  4068c1:	mov    rax,QWORD PTR [rbp-0x20]
  4068c5:	mov    ecx,eax
  4068c7:	mov    rax,QWORD PTR [rbp-0x10]
  4068cb:	mov    rax,QWORD PTR [rax+0x30]
  4068cf:	mov    edx,DWORD PTR [rax+0x18]
  4068d2:	mov    esi,ecx
  4068d4:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  4068d9:	cmp    eax,0x0
  4068dc:	je     4068ef <flatcc_builder_append_vector@@Base+0x7f>
  4068e2:	mov    QWORD PTR [rbp-0x8],0x0
  4068ea:	jmp    406916 <flatcc_builder_append_vector@@Base+0xa6>
  4068ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4068f3:	mov    rsi,QWORD PTR [rbp-0x18]
  4068f7:	mov    rax,QWORD PTR [rbp-0x10]
  4068fb:	mov    rax,QWORD PTR [rax+0x30]
  4068ff:	mov    ecx,DWORD PTR [rax+0x10]
  406902:	mov    rax,QWORD PTR [rbp-0x20]
  406906:	mov    edx,eax
  406908:	imul   ecx,edx
  40690b:	mov    edx,ecx
  40690d:	call   406810 <flatcc_builder_vector_push@@Base+0xf0>
  406912:	mov    QWORD PTR [rbp-0x8],rax
  406916:	mov    rax,QWORD PTR [rbp-0x8]
  40691a:	add    rsp,0x20
  40691e:	pop    rbp
  40691f:	ret    

0000000000406920 <flatcc_builder_extend_offset_vector@@Base>:
  406920:	push   rbp
  406921:	mov    rbp,rsp
  406924:	sub    rsp,0x20
  406928:	mov    QWORD PTR [rbp-0x10],rdi
  40692c:	mov    QWORD PTR [rbp-0x18],rsi
  406930:	mov    rdi,QWORD PTR [rbp-0x10]
  406934:	mov    rsi,QWORD PTR [rbp-0x18]
  406938:	mov    eax,esi
  40693a:	mov    esi,eax
  40693c:	mov    edx,0x3fffffff
  406941:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  406946:	cmp    eax,0x0
  406949:	je     40695c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  40694f:	mov    QWORD PTR [rbp-0x8],0x0
  406957:	jmp    40697b <flatcc_builder_extend_offset_vector@@Base+0x5b>
  40695c:	mov    rdi,QWORD PTR [rbp-0x10]
  406960:	mov    rax,QWORD PTR [rbp-0x18]
  406964:	mov    ecx,eax
  406966:	mov    ecx,ecx
  406968:	mov    eax,ecx
  40696a:	shl    rax,0x2
  40696e:	mov    ecx,eax
  406970:	mov    esi,ecx
  406972:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  406977:	mov    QWORD PTR [rbp-0x8],rax
  40697b:	mov    rax,QWORD PTR [rbp-0x8]
  40697f:	add    rsp,0x20
  406983:	pop    rbp
  406984:	ret    
  406985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40698f:	nop

0000000000406990 <flatcc_builder_offset_vector_push@@Base>:
  406990:	push   rbp
  406991:	mov    rbp,rsp
  406994:	sub    rsp,0x20
  406998:	mov    QWORD PTR [rbp-0x10],rdi
  40699c:	mov    DWORD PTR [rbp-0x14],esi
  40699f:	mov    rdi,QWORD PTR [rbp-0x10]
  4069a3:	mov    rdi,QWORD PTR [rdi+0x30]
  4069a7:	movzx  esi,WORD PTR [rdi+0xe]
  4069ab:	cmp    esi,0x5
  4069ae:	jne    4069b9 <flatcc_builder_offset_vector_push@@Base+0x29>
  4069b4:	jmp    4069d8 <flatcc_builder_offset_vector_push@@Base+0x48>
  4069b9:	lea    rdi,[rip+0x6408]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  4069c0:	lea    rsi,[rip+0x5fcb]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4069c7:	mov    edx,0x3a6
  4069cc:	lea    rcx,[rip+0x6428]        # 40cdfb <flatcc_builder_padding_base@@Base+0x67b>
  4069d3:	call   403090 <__assert_fail@plt>
  4069d8:	mov    rax,QWORD PTR [rbp-0x10]
  4069dc:	mov    rax,QWORD PTR [rax+0x30]
  4069e0:	mov    ecx,DWORD PTR [rax+0x14]
  4069e3:	mov    eax,ecx
  4069e5:	cmp    rax,0x3fffffff
  4069eb:	jne    4069fe <flatcc_builder_offset_vector_push@@Base+0x6e>
  4069f1:	mov    QWORD PTR [rbp-0x8],0x0
  4069f9:	jmp    406a4c <flatcc_builder_offset_vector_push@@Base+0xbc>
  4069fe:	mov    rax,QWORD PTR [rbp-0x10]
  406a02:	mov    rax,QWORD PTR [rax+0x30]
  406a06:	mov    ecx,DWORD PTR [rax+0x14]
  406a09:	add    ecx,0x1
  406a0c:	mov    DWORD PTR [rax+0x14],ecx
  406a0f:	mov    rdi,QWORD PTR [rbp-0x10]
  406a13:	mov    esi,0x4
  406a18:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  406a1d:	xor    ecx,ecx
  406a1f:	mov    edi,ecx
  406a21:	mov    QWORD PTR [rbp-0x20],rax
  406a25:	cmp    rdi,rax
  406a28:	jne    406a3b <flatcc_builder_offset_vector_push@@Base+0xab>
  406a2e:	mov    QWORD PTR [rbp-0x8],0x0
  406a36:	jmp    406a4c <flatcc_builder_offset_vector_push@@Base+0xbc>
  406a3b:	mov    eax,DWORD PTR [rbp-0x14]
  406a3e:	mov    rcx,QWORD PTR [rbp-0x20]
  406a42:	mov    DWORD PTR [rcx],eax
  406a44:	mov    rcx,QWORD PTR [rbp-0x20]
  406a48:	mov    QWORD PTR [rbp-0x8],rcx
  406a4c:	mov    rax,QWORD PTR [rbp-0x8]
  406a50:	add    rsp,0x20
  406a54:	pop    rbp
  406a55:	ret    
  406a56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406a60 <flatcc_builder_append_offset_vector@@Base>:
  406a60:	push   rbp
  406a61:	mov    rbp,rsp
  406a64:	sub    rsp,0x20
  406a68:	mov    QWORD PTR [rbp-0x10],rdi
  406a6c:	mov    QWORD PTR [rbp-0x18],rsi
  406a70:	mov    QWORD PTR [rbp-0x20],rdx
  406a74:	mov    rdx,QWORD PTR [rbp-0x10]
  406a78:	mov    rdx,QWORD PTR [rdx+0x30]
  406a7c:	movzx  eax,WORD PTR [rdx+0xe]
  406a80:	cmp    eax,0x5
  406a83:	jne    406a8e <flatcc_builder_append_offset_vector@@Base+0x2e>
  406a89:	jmp    406aad <flatcc_builder_append_offset_vector@@Base+0x4d>
  406a8e:	lea    rdi,[rip+0x6333]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  406a95:	lea    rsi,[rip+0x5ef6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406a9c:	mov    edx,0x3b4
  406aa1:	lea    rcx,[rip+0x63b5]        # 40ce5d <flatcc_builder_padding_base@@Base+0x6dd>
  406aa8:	call   403090 <__assert_fail@plt>
  406aad:	mov    rdi,QWORD PTR [rbp-0x10]
  406ab1:	mov    rax,QWORD PTR [rbp-0x20]
  406ab5:	mov    ecx,eax
  406ab7:	mov    esi,ecx
  406ab9:	mov    edx,0x3fffffff
  406abe:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  406ac3:	cmp    eax,0x0
  406ac6:	je     406ad9 <flatcc_builder_append_offset_vector@@Base+0x79>
  406acc:	mov    QWORD PTR [rbp-0x8],0x0
  406ad4:	jmp    406afd <flatcc_builder_append_offset_vector@@Base+0x9d>
  406ad9:	mov    rdi,QWORD PTR [rbp-0x10]
  406add:	mov    rax,QWORD PTR [rbp-0x18]
  406ae1:	mov    rcx,QWORD PTR [rbp-0x20]
  406ae5:	mov    edx,ecx
  406ae7:	mov    edx,edx
  406ae9:	mov    ecx,edx
  406aeb:	shl    rcx,0x2
  406aef:	mov    edx,ecx
  406af1:	mov    rsi,rax
  406af4:	call   406810 <flatcc_builder_vector_push@@Base+0xf0>
  406af9:	mov    QWORD PTR [rbp-0x8],rax
  406afd:	mov    rax,QWORD PTR [rbp-0x8]
  406b01:	add    rsp,0x20
  406b05:	pop    rbp
  406b06:	ret    
  406b07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406b10 <flatcc_builder_extend_string@@Base>:
  406b10:	push   rbp
  406b11:	mov    rbp,rsp
  406b14:	sub    rsp,0x20
  406b18:	mov    QWORD PTR [rbp-0x10],rdi
  406b1c:	mov    QWORD PTR [rbp-0x18],rsi
  406b20:	mov    rsi,QWORD PTR [rbp-0x10]
  406b24:	mov    rsi,QWORD PTR [rsi+0x30]
  406b28:	movzx  eax,WORD PTR [rsi+0xe]
  406b2c:	cmp    eax,0x6
  406b2f:	jne    406b3a <flatcc_builder_extend_string@@Base+0x2a>
  406b35:	jmp    406b59 <flatcc_builder_extend_string@@Base+0x49>
  406b3a:	lea    rdi,[rip+0x6390]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406b41:	lea    rsi,[rip+0x5e4a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406b48:	mov    edx,0x3bd
  406b4d:	lea    rcx,[rip+0x63a9]        # 40cefd <flatcc_builder_padding_base@@Base+0x77d>
  406b54:	call   403090 <__assert_fail@plt>
  406b59:	mov    rdi,QWORD PTR [rbp-0x10]
  406b5d:	mov    rax,QWORD PTR [rbp-0x18]
  406b61:	mov    ecx,eax
  406b63:	mov    esi,ecx
  406b65:	mov    edx,0xffffffff
  406b6a:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  406b6f:	cmp    eax,0x0
  406b72:	je     406b85 <flatcc_builder_extend_string@@Base+0x75>
  406b78:	mov    QWORD PTR [rbp-0x8],0x0
  406b80:	jmp    406b9a <flatcc_builder_extend_string@@Base+0x8a>
  406b85:	mov    rdi,QWORD PTR [rbp-0x10]
  406b89:	mov    rax,QWORD PTR [rbp-0x18]
  406b8d:	mov    ecx,eax
  406b8f:	mov    esi,ecx
  406b91:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  406b96:	mov    QWORD PTR [rbp-0x8],rax
  406b9a:	mov    rax,QWORD PTR [rbp-0x8]
  406b9e:	add    rsp,0x20
  406ba2:	pop    rbp
  406ba3:	ret    
  406ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bae:	xchg   ax,ax

0000000000406bb0 <flatcc_builder_append_string@@Base>:
  406bb0:	push   rbp
  406bb1:	mov    rbp,rsp
  406bb4:	sub    rsp,0x20
  406bb8:	mov    QWORD PTR [rbp-0x10],rdi
  406bbc:	mov    QWORD PTR [rbp-0x18],rsi
  406bc0:	mov    QWORD PTR [rbp-0x20],rdx
  406bc4:	mov    rdx,QWORD PTR [rbp-0x10]
  406bc8:	mov    rdx,QWORD PTR [rdx+0x30]
  406bcc:	movzx  eax,WORD PTR [rdx+0xe]
  406bd0:	cmp    eax,0x6
  406bd3:	jne    406bde <flatcc_builder_append_string@@Base+0x2e>
  406bd9:	jmp    406bfd <flatcc_builder_append_string@@Base+0x4d>
  406bde:	lea    rdi,[rip+0x62ec]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406be5:	lea    rsi,[rip+0x5da6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406bec:	mov    edx,0x3c6
  406bf1:	lea    rcx,[rip+0x6344]        # 40cf3c <flatcc_builder_padding_base@@Base+0x7bc>
  406bf8:	call   403090 <__assert_fail@plt>
  406bfd:	mov    rdi,QWORD PTR [rbp-0x10]
  406c01:	mov    rax,QWORD PTR [rbp-0x20]
  406c05:	mov    ecx,eax
  406c07:	mov    esi,ecx
  406c09:	mov    edx,0xffffffff
  406c0e:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  406c13:	cmp    eax,0x0
  406c16:	je     406c29 <flatcc_builder_append_string@@Base+0x79>
  406c1c:	mov    QWORD PTR [rbp-0x8],0x0
  406c24:	jmp    406c42 <flatcc_builder_append_string@@Base+0x92>
  406c29:	mov    rdi,QWORD PTR [rbp-0x10]
  406c2d:	mov    rsi,QWORD PTR [rbp-0x18]
  406c31:	mov    rax,QWORD PTR [rbp-0x20]
  406c35:	mov    ecx,eax
  406c37:	mov    edx,ecx
  406c39:	call   406810 <flatcc_builder_vector_push@@Base+0xf0>
  406c3e:	mov    QWORD PTR [rbp-0x8],rax
  406c42:	mov    rax,QWORD PTR [rbp-0x8]
  406c46:	add    rsp,0x20
  406c4a:	pop    rbp
  406c4b:	ret    
  406c4c:	nop    DWORD PTR [rax+0x0]

0000000000406c50 <flatcc_builder_append_string_str@@Base>:
  406c50:	push   rbp
  406c51:	mov    rbp,rsp
  406c54:	sub    rsp,0x20
  406c58:	mov    QWORD PTR [rbp-0x8],rdi
  406c5c:	mov    QWORD PTR [rbp-0x10],rsi
  406c60:	mov    rdi,QWORD PTR [rbp-0x8]
  406c64:	mov    rsi,QWORD PTR [rbp-0x10]
  406c68:	mov    rax,QWORD PTR [rbp-0x10]
  406c6c:	mov    QWORD PTR [rbp-0x18],rdi
  406c70:	mov    rdi,rax
  406c73:	mov    QWORD PTR [rbp-0x20],rsi
  406c77:	call   403060 <strlen@plt>
  406c7c:	mov    rdi,QWORD PTR [rbp-0x18]
  406c80:	mov    rsi,QWORD PTR [rbp-0x20]
  406c84:	mov    rdx,rax
  406c87:	call   406bb0 <flatcc_builder_append_string@@Base>
  406c8c:	add    rsp,0x20
  406c90:	pop    rbp
  406c91:	ret    
  406c92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c9c:	nop    DWORD PTR [rax+0x0]

0000000000406ca0 <flatcc_builder_append_string_strn@@Base>:
  406ca0:	push   rbp
  406ca1:	mov    rbp,rsp
  406ca4:	sub    rsp,0x30
  406ca8:	mov    QWORD PTR [rbp-0x8],rdi
  406cac:	mov    QWORD PTR [rbp-0x10],rsi
  406cb0:	mov    QWORD PTR [rbp-0x18],rdx
  406cb4:	mov    rdi,QWORD PTR [rbp-0x8]
  406cb8:	mov    rsi,QWORD PTR [rbp-0x10]
  406cbc:	mov    rdx,QWORD PTR [rbp-0x10]
  406cc0:	mov    rax,QWORD PTR [rbp-0x18]
  406cc4:	mov    QWORD PTR [rbp-0x20],rdi
  406cc8:	mov    rdi,rdx
  406ccb:	mov    QWORD PTR [rbp-0x28],rsi
  406ccf:	mov    rsi,rax
  406cd2:	call   406cf0 <flatcc_builder_append_string_strn@@Base+0x50>
  406cd7:	mov    rdi,QWORD PTR [rbp-0x20]
  406cdb:	mov    rsi,QWORD PTR [rbp-0x28]
  406cdf:	mov    rdx,rax
  406ce2:	call   406bb0 <flatcc_builder_append_string@@Base>
  406ce7:	add    rsp,0x30
  406ceb:	pop    rbp
  406cec:	ret    
  406ced:	nop    DWORD PTR [rax]
  406cf0:	push   rbp
  406cf1:	mov    rbp,rsp
  406cf4:	sub    rsp,0x20
  406cf8:	mov    QWORD PTR [rbp-0x8],rdi
  406cfc:	mov    QWORD PTR [rbp-0x10],rsi
  406d00:	mov    rdi,QWORD PTR [rbp-0x8]
  406d04:	mov    rdx,QWORD PTR [rbp-0x10]
  406d08:	xor    esi,esi
  406d0a:	call   4030b0 <memchr@plt>
  406d0f:	mov    QWORD PTR [rbp-0x18],rax
  406d13:	cmp    QWORD PTR [rbp-0x18],0x0
  406d18:	je     406d32 <flatcc_builder_append_string_strn@@Base+0x92>
  406d1e:	mov    rax,QWORD PTR [rbp-0x18]
  406d22:	mov    rcx,QWORD PTR [rbp-0x8]
  406d26:	sub    rax,rcx
  406d29:	mov    QWORD PTR [rbp-0x20],rax
  406d2d:	jmp    406d3a <flatcc_builder_append_string_strn@@Base+0x9a>
  406d32:	mov    rax,QWORD PTR [rbp-0x10]
  406d36:	mov    QWORD PTR [rbp-0x20],rax
  406d3a:	mov    rax,QWORD PTR [rbp-0x20]
  406d3e:	add    rsp,0x20
  406d42:	pop    rbp
  406d43:	ret    
  406d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d4e:	xchg   ax,ax

0000000000406d50 <flatcc_builder_truncate_vector@@Base>:
  406d50:	push   rbp
  406d51:	mov    rbp,rsp
  406d54:	sub    rsp,0x20
  406d58:	mov    QWORD PTR [rbp-0x10],rdi
  406d5c:	mov    QWORD PTR [rbp-0x18],rsi
  406d60:	mov    rsi,QWORD PTR [rbp-0x10]
  406d64:	mov    rsi,QWORD PTR [rsi+0x30]
  406d68:	movzx  eax,WORD PTR [rsi+0xe]
  406d6c:	cmp    eax,0x4
  406d6f:	jne    406d7a <flatcc_builder_truncate_vector@@Base+0x2a>
  406d75:	jmp    406d99 <flatcc_builder_truncate_vector@@Base+0x49>
  406d7a:	lea    rdi,[rip+0x5f4e]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  406d81:	lea    rsi,[rip+0x5c0a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406d88:	mov    edx,0x3d9
  406d8d:	lea    rcx,[rip+0x61f5]        # 40cf89 <flatcc_builder_padding_base@@Base+0x809>
  406d94:	call   403090 <__assert_fail@plt>
  406d99:	mov    rax,QWORD PTR [rbp-0x10]
  406d9d:	mov    rax,QWORD PTR [rax+0x30]
  406da1:	mov    ecx,DWORD PTR [rax+0x14]
  406da4:	mov    eax,ecx
  406da6:	cmp    rax,QWORD PTR [rbp-0x18]
  406daa:	jae    406df7 <flatcc_builder_truncate_vector@@Base+0xa7>
  406db0:	mov    rax,QWORD PTR [rbp-0x10]
  406db4:	mov    rax,QWORD PTR [rax+0x30]
  406db8:	mov    ecx,DWORD PTR [rax+0x14]
  406dbb:	mov    eax,ecx
  406dbd:	cmp    rax,QWORD PTR [rbp-0x18]
  406dc1:	jb     406dcc <flatcc_builder_truncate_vector@@Base+0x7c>
  406dc7:	jmp    406deb <flatcc_builder_truncate_vector@@Base+0x9b>
  406dcc:	lea    rdi,[rip+0x61f5]        # 40cfc8 <flatcc_builder_padding_base@@Base+0x848>
  406dd3:	lea    rsi,[rip+0x5bb8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406dda:	mov    edx,0x3da
  406ddf:	lea    rcx,[rip+0x61a3]        # 40cf89 <flatcc_builder_padding_base@@Base+0x809>
  406de6:	call   403090 <__assert_fail@plt>
  406deb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406df2:	jmp    406e33 <flatcc_builder_truncate_vector@@Base+0xe3>
  406df7:	mov    rax,QWORD PTR [rbp-0x18]
  406dfb:	mov    ecx,eax
  406dfd:	mov    rax,QWORD PTR [rbp-0x10]
  406e01:	mov    rax,QWORD PTR [rax+0x30]
  406e05:	mov    edx,DWORD PTR [rax+0x14]
  406e08:	sub    edx,ecx
  406e0a:	mov    DWORD PTR [rax+0x14],edx
  406e0d:	mov    rdi,QWORD PTR [rbp-0x10]
  406e11:	mov    rax,QWORD PTR [rbp-0x10]
  406e15:	mov    rax,QWORD PTR [rax+0x30]
  406e19:	mov    ecx,DWORD PTR [rax+0x10]
  406e1c:	mov    rax,QWORD PTR [rbp-0x18]
  406e20:	mov    edx,eax
  406e22:	imul   ecx,edx
  406e25:	mov    esi,ecx
  406e27:	call   406e40 <flatcc_builder_truncate_vector@@Base+0xf0>
  406e2c:	mov    DWORD PTR [rbp-0x4],0x0
  406e33:	mov    eax,DWORD PTR [rbp-0x4]
  406e36:	add    rsp,0x20
  406e3a:	pop    rbp
  406e3b:	ret    
  406e3c:	nop    DWORD PTR [rax+0x0]
  406e40:	push   rbp
  406e41:	mov    rbp,rsp
  406e44:	sub    rsp,0x10
  406e48:	xor    eax,eax
  406e4a:	mov    QWORD PTR [rbp-0x8],rdi
  406e4e:	mov    DWORD PTR [rbp-0xc],esi
  406e51:	mov    esi,DWORD PTR [rbp-0xc]
  406e54:	mov    rdi,QWORD PTR [rbp-0x8]
  406e58:	mov    ecx,DWORD PTR [rdi+0x20]
  406e5b:	sub    ecx,esi
  406e5d:	mov    DWORD PTR [rdi+0x20],ecx
  406e60:	mov    rdi,QWORD PTR [rbp-0x8]
  406e64:	mov    rdi,QWORD PTR [rdi+0x18]
  406e68:	mov    rdx,QWORD PTR [rbp-0x8]
  406e6c:	mov    ecx,DWORD PTR [rdx+0x20]
  406e6f:	mov    edx,ecx
  406e71:	add    rdi,rdx
  406e74:	mov    ecx,DWORD PTR [rbp-0xc]
  406e77:	mov    edx,ecx
  406e79:	mov    esi,eax
  406e7b:	call   4030a0 <memset@plt>
  406e80:	add    rsp,0x10
  406e84:	pop    rbp
  406e85:	ret    
  406e86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406e90 <flatcc_builder_truncate_offset_vector@@Base>:
  406e90:	push   rbp
  406e91:	mov    rbp,rsp
  406e94:	sub    rsp,0x20
  406e98:	mov    QWORD PTR [rbp-0x10],rdi
  406e9c:	mov    QWORD PTR [rbp-0x18],rsi
  406ea0:	mov    rsi,QWORD PTR [rbp-0x10]
  406ea4:	mov    rsi,QWORD PTR [rsi+0x30]
  406ea8:	movzx  eax,WORD PTR [rsi+0xe]
  406eac:	cmp    eax,0x5
  406eaf:	jne    406eba <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  406eb5:	jmp    406ed9 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  406eba:	lea    rdi,[rip+0x5f07]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  406ec1:	lea    rsi,[rip+0x5aca]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406ec8:	mov    edx,0x3e2
  406ecd:	lea    rcx,[rip+0x6118]        # 40cfec <flatcc_builder_padding_base@@Base+0x86c>
  406ed4:	call   403090 <__assert_fail@plt>
  406ed9:	mov    rax,QWORD PTR [rbp-0x10]
  406edd:	mov    rax,QWORD PTR [rax+0x30]
  406ee1:	mov    ecx,DWORD PTR [rax+0x14]
  406ee4:	mov    rax,QWORD PTR [rbp-0x18]
  406ee8:	mov    edx,eax
  406eea:	cmp    ecx,edx
  406eec:	jae    406f3b <flatcc_builder_truncate_offset_vector@@Base+0xab>
  406ef2:	mov    rax,QWORD PTR [rbp-0x10]
  406ef6:	mov    rax,QWORD PTR [rax+0x30]
  406efa:	mov    ecx,DWORD PTR [rax+0x14]
  406efd:	mov    rax,QWORD PTR [rbp-0x18]
  406f01:	mov    edx,eax
  406f03:	cmp    ecx,edx
  406f05:	jb     406f10 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  406f0b:	jmp    406f2f <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  406f10:	lea    rdi,[rip+0x611b]        # 40d032 <flatcc_builder_padding_base@@Base+0x8b2>
  406f17:	lea    rsi,[rip+0x5a74]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406f1e:	mov    edx,0x3e3
  406f23:	lea    rcx,[rip+0x60c2]        # 40cfec <flatcc_builder_padding_base@@Base+0x86c>
  406f2a:	call   403090 <__assert_fail@plt>
  406f2f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406f36:	jmp    406f77 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  406f3b:	mov    rax,QWORD PTR [rbp-0x18]
  406f3f:	mov    ecx,eax
  406f41:	mov    rax,QWORD PTR [rbp-0x10]
  406f45:	mov    rax,QWORD PTR [rax+0x30]
  406f49:	mov    edx,DWORD PTR [rax+0x14]
  406f4c:	sub    edx,ecx
  406f4e:	mov    DWORD PTR [rax+0x14],edx
  406f51:	mov    rdi,QWORD PTR [rbp-0x10]
  406f55:	mov    rax,QWORD PTR [rbp-0x10]
  406f59:	mov    rax,QWORD PTR [rax+0x30]
  406f5d:	mov    ecx,DWORD PTR [rax+0x10]
  406f60:	mov    rax,QWORD PTR [rbp-0x18]
  406f64:	mov    edx,eax
  406f66:	imul   ecx,edx
  406f69:	mov    esi,ecx
  406f6b:	call   406e40 <flatcc_builder_truncate_vector@@Base+0xf0>
  406f70:	mov    DWORD PTR [rbp-0x4],0x0
  406f77:	mov    eax,DWORD PTR [rbp-0x4]
  406f7a:	add    rsp,0x20
  406f7e:	pop    rbp
  406f7f:	ret    

0000000000406f80 <flatcc_builder_truncate_string@@Base>:
  406f80:	push   rbp
  406f81:	mov    rbp,rsp
  406f84:	sub    rsp,0x20
  406f88:	mov    QWORD PTR [rbp-0x10],rdi
  406f8c:	mov    QWORD PTR [rbp-0x18],rsi
  406f90:	mov    rsi,QWORD PTR [rbp-0x10]
  406f94:	mov    rsi,QWORD PTR [rsi+0x30]
  406f98:	movzx  eax,WORD PTR [rsi+0xe]
  406f9c:	cmp    eax,0x6
  406f9f:	jne    406faa <flatcc_builder_truncate_string@@Base+0x2a>
  406fa5:	jmp    406fc9 <flatcc_builder_truncate_string@@Base+0x49>
  406faa:	lea    rdi,[rip+0x5f20]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406fb1:	lea    rsi,[rip+0x59da]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406fb8:	mov    edx,0x3eb
  406fbd:	lea    rcx,[rip+0x60a9]        # 40d06d <flatcc_builder_padding_base@@Base+0x8ed>
  406fc4:	call   403090 <__assert_fail@plt>
  406fc9:	mov    rax,QWORD PTR [rbp-0x10]
  406fcd:	mov    rax,QWORD PTR [rax+0x30]
  406fd1:	mov    ecx,DWORD PTR [rax+0x14]
  406fd4:	mov    eax,ecx
  406fd6:	cmp    rax,QWORD PTR [rbp-0x18]
  406fda:	jae    407027 <flatcc_builder_truncate_string@@Base+0xa7>
  406fe0:	mov    rax,QWORD PTR [rbp-0x10]
  406fe4:	mov    rax,QWORD PTR [rax+0x30]
  406fe8:	mov    ecx,DWORD PTR [rax+0x14]
  406feb:	mov    eax,ecx
  406fed:	cmp    rax,QWORD PTR [rbp-0x18]
  406ff1:	jb     406ffc <flatcc_builder_truncate_string@@Base+0x7c>
  406ff7:	jmp    40701b <flatcc_builder_truncate_string@@Base+0x9b>
  406ffc:	lea    rdi,[rip+0x60a9]        # 40d0ac <flatcc_builder_padding_base@@Base+0x92c>
  407003:	lea    rsi,[rip+0x5988]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40700a:	mov    edx,0x3ec
  40700f:	lea    rcx,[rip+0x6057]        # 40d06d <flatcc_builder_padding_base@@Base+0x8ed>
  407016:	call   403090 <__assert_fail@plt>
  40701b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407022:	jmp    407055 <flatcc_builder_truncate_string@@Base+0xd5>
  407027:	mov    rax,QWORD PTR [rbp-0x18]
  40702b:	mov    ecx,eax
  40702d:	mov    rax,QWORD PTR [rbp-0x10]
  407031:	mov    rax,QWORD PTR [rax+0x30]
  407035:	mov    edx,DWORD PTR [rax+0x14]
  407038:	sub    edx,ecx
  40703a:	mov    DWORD PTR [rax+0x14],edx
  40703d:	mov    rdi,QWORD PTR [rbp-0x10]
  407041:	mov    rax,QWORD PTR [rbp-0x18]
  407045:	mov    ecx,eax
  407047:	mov    esi,ecx
  407049:	call   406e40 <flatcc_builder_truncate_vector@@Base+0xf0>
  40704e:	mov    DWORD PTR [rbp-0x4],0x0
  407055:	mov    eax,DWORD PTR [rbp-0x4]
  407058:	add    rsp,0x20
  40705c:	pop    rbp
  40705d:	ret    
  40705e:	xchg   ax,ax

0000000000407060 <flatcc_builder_start_vector@@Base>:
  407060:	push   rbp
  407061:	mov    rbp,rsp
  407064:	sub    rsp,0x30
  407068:	mov    ax,dx
  40706b:	mov    QWORD PTR [rbp-0x10],rdi
  40706f:	mov    QWORD PTR [rbp-0x18],rsi
  407073:	mov    WORD PTR [rbp-0x1a],ax
  407077:	mov    QWORD PTR [rbp-0x28],rcx
  40707b:	lea    rdi,[rbp-0x1a]
  40707f:	mov    esi,0x4
  407084:	call   407110 <flatcc_builder_start_vector@@Base+0xb0>
  407089:	mov    rdi,QWORD PTR [rbp-0x10]
  40708d:	movzx  esi,WORD PTR [rbp-0x1a]
  407091:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  407096:	cmp    eax,0x0
  407099:	je     4070ab <flatcc_builder_start_vector@@Base+0x4b>
  40709f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070a6:	jmp    4070ff <flatcc_builder_start_vector@@Base+0x9f>
  4070ab:	mov    rax,QWORD PTR [rbp-0x18]
  4070af:	mov    ecx,eax
  4070b1:	mov    rax,QWORD PTR [rbp-0x10]
  4070b5:	mov    rax,QWORD PTR [rax+0x30]
  4070b9:	mov    DWORD PTR [rax+0x10],ecx
  4070bc:	mov    rax,QWORD PTR [rbp-0x10]
  4070c0:	mov    rax,QWORD PTR [rax+0x30]
  4070c4:	mov    DWORD PTR [rax+0x14],0x0
  4070cb:	mov    rax,QWORD PTR [rbp-0x28]
  4070cf:	mov    ecx,eax
  4070d1:	mov    rax,QWORD PTR [rbp-0x10]
  4070d5:	mov    rax,QWORD PTR [rax+0x30]
  4070d9:	mov    DWORD PTR [rax+0x18],ecx
  4070dc:	mov    rax,QWORD PTR [rbp-0x10]
  4070e0:	mov    rax,QWORD PTR [rax+0x30]
  4070e4:	mov    WORD PTR [rax+0xe],0x4
  4070ea:	mov    rdi,QWORD PTR [rbp-0x10]
  4070ee:	mov    esi,0xfffffffc
  4070f3:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  4070f8:	mov    DWORD PTR [rbp-0x4],0x0
  4070ff:	mov    eax,DWORD PTR [rbp-0x4]
  407102:	add    rsp,0x30
  407106:	pop    rbp
  407107:	ret    
  407108:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	push   rbp
  407111:	mov    rbp,rsp
  407114:	mov    ax,si
  407117:	mov    QWORD PTR [rbp-0x8],rdi
  40711b:	mov    WORD PTR [rbp-0xa],ax
  40711f:	mov    rdi,QWORD PTR [rbp-0x8]
  407123:	movzx  esi,WORD PTR [rdi]
  407126:	movzx  ecx,WORD PTR [rbp-0xa]
  40712a:	cmp    esi,ecx
  40712c:	jge    40713d <flatcc_builder_start_vector@@Base+0xdd>
  407132:	mov    ax,WORD PTR [rbp-0xa]
  407136:	mov    rcx,QWORD PTR [rbp-0x8]
  40713a:	mov    WORD PTR [rcx],ax
  40713d:	pop    rbp
  40713e:	ret    
  40713f:	nop

0000000000407140 <flatcc_builder_start_offset_vector@@Base>:
  407140:	push   rbp
  407141:	mov    rbp,rsp
  407144:	sub    rsp,0x10
  407148:	mov    QWORD PTR [rbp-0x10],rdi
  40714c:	mov    rdi,QWORD PTR [rbp-0x10]
  407150:	mov    esi,0x4
  407155:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  40715a:	cmp    eax,0x0
  40715d:	je     40716f <flatcc_builder_start_offset_vector@@Base+0x2f>
  407163:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40716a:	jmp    4071b0 <flatcc_builder_start_offset_vector@@Base+0x70>
  40716f:	mov    rax,QWORD PTR [rbp-0x10]
  407173:	mov    rax,QWORD PTR [rax+0x30]
  407177:	mov    DWORD PTR [rax+0x10],0x4
  40717e:	mov    rax,QWORD PTR [rbp-0x10]
  407182:	mov    rax,QWORD PTR [rax+0x30]
  407186:	mov    DWORD PTR [rax+0x14],0x0
  40718d:	mov    rax,QWORD PTR [rbp-0x10]
  407191:	mov    rax,QWORD PTR [rax+0x30]
  407195:	mov    WORD PTR [rax+0xe],0x5
  40719b:	mov    rdi,QWORD PTR [rbp-0x10]
  40719f:	mov    esi,0xfffffffc
  4071a4:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  4071a9:	mov    DWORD PTR [rbp-0x4],0x0
  4071b0:	mov    eax,DWORD PTR [rbp-0x4]
  4071b3:	add    rsp,0x10
  4071b7:	pop    rbp
  4071b8:	ret    
  4071b9:	nop    DWORD PTR [rax+0x0]

00000000004071c0 <flatcc_builder_create_offset_vector@@Base>:
  4071c0:	push   rbp
  4071c1:	mov    rbp,rsp
  4071c4:	sub    rsp,0x30
  4071c8:	mov    QWORD PTR [rbp-0x10],rdi
  4071cc:	mov    QWORD PTR [rbp-0x18],rsi
  4071d0:	mov    QWORD PTR [rbp-0x20],rdx
  4071d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4071d8:	call   407140 <flatcc_builder_start_offset_vector@@Base>
  4071dd:	cmp    eax,0x0
  4071e0:	je     4071f2 <flatcc_builder_create_offset_vector@@Base+0x32>
  4071e6:	mov    DWORD PTR [rbp-0x4],0x0
  4071ed:	jmp    407240 <flatcc_builder_create_offset_vector@@Base+0x80>
  4071f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4071f6:	mov    rsi,QWORD PTR [rbp-0x20]
  4071fa:	call   406920 <flatcc_builder_extend_offset_vector@@Base>
  4071ff:	mov    QWORD PTR [rbp-0x28],rax
  407203:	cmp    rax,0x0
  407207:	jne    407219 <flatcc_builder_create_offset_vector@@Base+0x59>
  40720d:	mov    DWORD PTR [rbp-0x4],0x0
  407214:	jmp    407240 <flatcc_builder_create_offset_vector@@Base+0x80>
  407219:	mov    rax,QWORD PTR [rbp-0x28]
  40721d:	mov    rcx,QWORD PTR [rbp-0x18]
  407221:	mov    rdx,QWORD PTR [rbp-0x20]
  407225:	shl    rdx,0x2
  407229:	mov    rdi,rax
  40722c:	mov    rsi,rcx
  40722f:	call   4030e0 <memcpy@plt>
  407234:	mov    rdi,QWORD PTR [rbp-0x10]
  407238:	call   407250 <flatcc_builder_end_offset_vector@@Base>
  40723d:	mov    DWORD PTR [rbp-0x4],eax
  407240:	mov    eax,DWORD PTR [rbp-0x4]
  407243:	add    rsp,0x30
  407247:	pop    rbp
  407248:	ret    
  407249:	nop    DWORD PTR [rax+0x0]

0000000000407250 <flatcc_builder_end_offset_vector@@Base>:
  407250:	push   rbp
  407251:	mov    rbp,rsp
  407254:	sub    rsp,0x20
  407258:	mov    QWORD PTR [rbp-0x10],rdi
  40725c:	mov    rdi,QWORD PTR [rbp-0x10]
  407260:	mov    rdi,QWORD PTR [rdi+0x30]
  407264:	movzx  eax,WORD PTR [rdi+0xe]
  407268:	cmp    eax,0x5
  40726b:	jne    407276 <flatcc_builder_end_offset_vector@@Base+0x26>
  407271:	jmp    407295 <flatcc_builder_end_offset_vector@@Base+0x45>
  407276:	lea    rdi,[rip+0x5b4b]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  40727d:	lea    rsi,[rip+0x570e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407284:	mov    edx,0x5c8
  407289:	lea    rcx,[rip+0x6167]        # 40d3f7 <flatcc_builder_padding_base@@Base+0xc77>
  407290:	call   403090 <__assert_fail@plt>
  407295:	mov    rdi,QWORD PTR [rbp-0x10]
  407299:	mov    rax,QWORD PTR [rbp-0x10]
  40729d:	mov    rax,QWORD PTR [rax+0x18]
  4072a1:	mov    rcx,QWORD PTR [rbp-0x10]
  4072a5:	mov    rcx,QWORD PTR [rcx+0x30]
  4072a9:	mov    edx,DWORD PTR [rcx+0x14]
  4072ac:	mov    rsi,rax
  4072af:	call   4086a0 <flatcc_builder_create_offset_vector_direct@@Base>
  4072b4:	xor    r8d,r8d
  4072b7:	mov    DWORD PTR [rbp-0x14],eax
  4072ba:	cmp    r8d,eax
  4072bd:	jne    4072cf <flatcc_builder_end_offset_vector@@Base+0x7f>
  4072c3:	mov    DWORD PTR [rbp-0x4],0x0
  4072ca:	jmp    4072de <flatcc_builder_end_offset_vector@@Base+0x8e>
  4072cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4072d3:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  4072d8:	mov    eax,DWORD PTR [rbp-0x14]
  4072db:	mov    DWORD PTR [rbp-0x4],eax
  4072de:	mov    eax,DWORD PTR [rbp-0x4]
  4072e1:	add    rsp,0x20
  4072e5:	pop    rbp
  4072e6:	ret    
  4072e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004072f0 <flatcc_builder_start_string@@Base>:
  4072f0:	push   rbp
  4072f1:	mov    rbp,rsp
  4072f4:	sub    rsp,0x10
  4072f8:	mov    QWORD PTR [rbp-0x10],rdi
  4072fc:	mov    rdi,QWORD PTR [rbp-0x10]
  407300:	mov    esi,0x1
  407305:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  40730a:	cmp    eax,0x0
  40730d:	je     40731f <flatcc_builder_start_string@@Base+0x2f>
  407313:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40731a:	jmp    407360 <flatcc_builder_start_string@@Base+0x70>
  40731f:	mov    rax,QWORD PTR [rbp-0x10]
  407323:	mov    rax,QWORD PTR [rax+0x30]
  407327:	mov    DWORD PTR [rax+0x10],0x1
  40732e:	mov    rax,QWORD PTR [rbp-0x10]
  407332:	mov    rax,QWORD PTR [rax+0x30]
  407336:	mov    DWORD PTR [rax+0x14],0x0
  40733d:	mov    rax,QWORD PTR [rbp-0x10]
  407341:	mov    rax,QWORD PTR [rax+0x30]
  407345:	mov    WORD PTR [rax+0xe],0x6
  40734b:	mov    rdi,QWORD PTR [rbp-0x10]
  40734f:	mov    esi,0xfffffffc
  407354:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  407359:	mov    DWORD PTR [rbp-0x4],0x0
  407360:	mov    eax,DWORD PTR [rbp-0x4]
  407363:	add    rsp,0x10
  407367:	pop    rbp
  407368:	ret    
  407369:	nop    DWORD PTR [rax+0x0]

0000000000407370 <flatcc_builder_reserve_table@@Base>:
  407370:	push   rbp
  407371:	mov    rbp,rsp
  407374:	sub    rsp,0x10
  407378:	mov    QWORD PTR [rbp-0x8],rdi
  40737c:	mov    DWORD PTR [rbp-0xc],esi
  40737f:	cmp    DWORD PTR [rbp-0xc],0x0
  407383:	jl     40738e <flatcc_builder_reserve_table@@Base+0x1e>
  407389:	jmp    4073ad <flatcc_builder_reserve_table@@Base+0x3d>
  40738e:	lea    rdi,[rip+0x5d7a]        # 40d10f <flatcc_builder_padding_base@@Base+0x98f>
  407395:	lea    rsi,[rip+0x55f6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40739c:	mov    edx,0x429
  4073a1:	lea    rcx,[rip+0x5d26]        # 40d0ce <flatcc_builder_padding_base@@Base+0x94e>
  4073a8:	call   403090 <__assert_fail@plt>
  4073ad:	mov    rdi,QWORD PTR [rbp-0x8]
  4073b1:	mov    esi,DWORD PTR [rbp-0xc]
  4073b4:	call   4073c0 <flatcc_builder_reserve_table@@Base+0x50>
  4073b9:	add    rsp,0x10
  4073bd:	pop    rbp
  4073be:	ret    
  4073bf:	nop
  4073c0:	push   rbp
  4073c1:	mov    rbp,rsp
  4073c4:	sub    rsp,0x20
  4073c8:	xor    eax,eax
  4073ca:	mov    QWORD PTR [rbp-0x10],rdi
  4073ce:	mov    DWORD PTR [rbp-0x14],esi
  4073d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4073d5:	mov    rdi,QWORD PTR [rdi+0x30]
  4073d9:	mov    esi,DWORD PTR [rdi+0x10]
  4073dc:	mov    edi,esi
  4073de:	mov    rcx,QWORD PTR [rbp-0x10]
  4073e2:	mov    rcx,QWORD PTR [rcx+0x30]
  4073e6:	movzx  esi,WORD PTR [rcx+0x1c]
  4073ea:	mov    ecx,esi
  4073ec:	shl    rcx,0x1
  4073f0:	add    rdi,rcx
  4073f3:	mov    esi,edi
  4073f5:	mov    DWORD PTR [rbp-0x18],esi
  4073f8:	mov    esi,DWORD PTR [rbp-0x14]
  4073fb:	add    esi,0x2
  4073fe:	movsxd rcx,esi
  407401:	shl    rcx,0x1
  407405:	mov    esi,ecx
  407407:	mov    DWORD PTR [rbp-0x1c],esi
  40740a:	mov    rdi,QWORD PTR [rbp-0x10]
  40740e:	mov    esi,DWORD PTR [rbp-0x18]
  407411:	mov    edx,esi
  407413:	mov    esi,DWORD PTR [rbp-0x1c]
  407416:	mov    ecx,esi
  407418:	mov    esi,eax
  40741a:	mov    r8d,0x1
  407420:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407425:	mov    rcx,QWORD PTR [rbp-0x10]
  407429:	mov    QWORD PTR [rcx+0x8],rax
  40742d:	cmp    rax,0x0
  407431:	jne    407443 <flatcc_builder_reserve_table@@Base+0xd3>
  407437:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40743e:	jmp    4074af <flatcc_builder_reserve_table@@Base+0x13f>
  407443:	xor    r8d,r8d
  407446:	mov    rax,QWORD PTR [rbp-0x10]
  40744a:	mov    rcx,QWORD PTR [rax+0x8]
  40744e:	add    rcx,0x4
  407452:	mov    QWORD PTR [rax+0x8],rcx
  407456:	mov    rax,QWORD PTR [rbp-0x10]
  40745a:	mov    rax,QWORD PTR [rax+0x30]
  40745e:	mov    edx,DWORD PTR [rax+0x14]
  407461:	mov    DWORD PTR [rbp-0x18],edx
  407464:	movsxd rax,DWORD PTR [rbp-0x14]
  407468:	shl    rax,0x1
  40746c:	add    rax,0x1
  407470:	mov    edx,eax
  407472:	mov    DWORD PTR [rbp-0x1c],edx
  407475:	mov    rdi,QWORD PTR [rbp-0x10]
  407479:	mov    edx,DWORD PTR [rbp-0x18]
  40747c:	mov    esi,DWORD PTR [rbp-0x1c]
  40747f:	mov    ecx,esi
  407481:	mov    esi,0x3
  407486:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40748b:	mov    rcx,QWORD PTR [rbp-0x10]
  40748f:	mov    QWORD PTR [rcx],rax
  407492:	cmp    rax,0x0
  407496:	jne    4074a8 <flatcc_builder_reserve_table@@Base+0x138>
  40749c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4074a3:	jmp    4074af <flatcc_builder_reserve_table@@Base+0x13f>
  4074a8:	mov    DWORD PTR [rbp-0x4],0x0
  4074af:	mov    eax,DWORD PTR [rbp-0x4]
  4074b2:	add    rsp,0x20
  4074b6:	pop    rbp
  4074b7:	ret    
  4074b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004074c0 <flatcc_builder_start_table@@Base>:
  4074c0:	push   rbp
  4074c1:	mov    rbp,rsp
  4074c4:	sub    rsp,0x20
  4074c8:	mov    QWORD PTR [rbp-0x10],rdi
  4074cc:	mov    DWORD PTR [rbp-0x14],esi
  4074cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4074d3:	mov    esi,0x4
  4074d8:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  4074dd:	cmp    eax,0x0
  4074e0:	je     4074f2 <flatcc_builder_start_table@@Base+0x32>
  4074e6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4074ed:	jmp    4075be <flatcc_builder_start_table@@Base+0xfe>
  4074f2:	mov    rax,QWORD PTR [rbp-0x10]
  4074f6:	mov    rax,QWORD PTR [rax+0x8]
  4074fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4074fe:	mov    rcx,QWORD PTR [rcx+0x58]
  407502:	sub    rax,rcx
  407505:	mov    edx,eax
  407507:	mov    rax,QWORD PTR [rbp-0x10]
  40750b:	mov    rax,QWORD PTR [rax+0x30]
  40750f:	mov    DWORD PTR [rax+0x10],edx
  407512:	mov    rax,QWORD PTR [rbp-0x10]
  407516:	mov    rax,QWORD PTR [rax]
  407519:	mov    rcx,QWORD PTR [rbp-0x10]
  40751d:	mov    rcx,QWORD PTR [rcx+0x88]
  407524:	sub    rax,rcx
  407527:	mov    edx,eax
  407529:	mov    rax,QWORD PTR [rbp-0x10]
  40752d:	mov    rax,QWORD PTR [rax+0x30]
  407531:	mov    DWORD PTR [rax+0x14],edx
  407534:	mov    rax,QWORD PTR [rbp-0x10]
  407538:	mov    edx,DWORD PTR [rax+0x14]
  40753b:	mov    rax,QWORD PTR [rbp-0x10]
  40753f:	mov    rax,QWORD PTR [rax+0x30]
  407543:	mov    DWORD PTR [rax+0x18],edx
  407546:	mov    rax,QWORD PTR [rbp-0x10]
  40754a:	mov    si,WORD PTR [rax+0x10]
  40754e:	mov    rax,QWORD PTR [rbp-0x10]
  407552:	mov    rax,QWORD PTR [rax+0x30]
  407556:	mov    WORD PTR [rax+0x1c],si
  40755a:	mov    rax,QWORD PTR [rbp-0x10]
  40755e:	mov    DWORD PTR [rax+0x14],0x0
  407565:	mov    rax,QWORD PTR [rbp-0x10]
  407569:	mov    DWORD PTR [rax+0x14],0x2f693b52
  407570:	mov    rax,QWORD PTR [rbp-0x10]
  407574:	mov    WORD PTR [rax+0x10],0x0
  40757a:	mov    rax,QWORD PTR [rbp-0x10]
  40757e:	mov    rax,QWORD PTR [rax+0x30]
  407582:	mov    WORD PTR [rax+0xe],0x3
  407588:	mov    rdi,QWORD PTR [rbp-0x10]
  40758c:	mov    esi,DWORD PTR [rbp-0x14]
  40758f:	call   4073c0 <flatcc_builder_reserve_table@@Base+0x50>
  407594:	cmp    eax,0x0
  407597:	je     4075a9 <flatcc_builder_start_table@@Base+0xe9>
  40759d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4075a4:	jmp    4075be <flatcc_builder_start_table@@Base+0xfe>
  4075a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4075ad:	mov    esi,0xfffc
  4075b2:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  4075b7:	mov    DWORD PTR [rbp-0x4],0x0
  4075be:	mov    eax,DWORD PTR [rbp-0x4]
  4075c1:	add    rsp,0x20
  4075c5:	pop    rbp
  4075c6:	ret    
  4075c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004075d0 <flatcc_builder_create_vtable@@Base>:
  4075d0:	push   rbp
  4075d1:	mov    rbp,rsp
  4075d4:	sub    rsp,0xc0
  4075db:	mov    ax,dx
  4075de:	mov    QWORD PTR [rbp-0x10],rdi
  4075e2:	mov    QWORD PTR [rbp-0x18],rsi
  4075e6:	mov    WORD PTR [rbp-0x1a],ax
  4075ea:	mov    QWORD PTR [rbp-0xb0],0x0
  4075f5:	mov    DWORD PTR [rbp-0xa8],0x0
  4075ff:	movzx  edx,WORD PTR [rbp-0x1a]
  407603:	cmp    edx,0x0
  407606:	jle    40766e <flatcc_builder_create_vtable@@Base+0x9e>
  40760c:	movzx  eax,WORD PTR [rbp-0x1a]
  407610:	mov    ecx,eax
  407612:	add    rcx,QWORD PTR [rbp-0xb0]
  407619:	mov    QWORD PTR [rbp-0xb0],rcx
  407620:	mov    rcx,QWORD PTR [rbp-0x18]
  407624:	lea    rdx,[rbp-0xb0]
  40762b:	mov    rsi,rdx
  40762e:	add    rsi,0x10
  407632:	movsxd rdi,DWORD PTR [rbp-0xa8]
  407639:	shl    rdi,0x4
  40763d:	add    rsi,rdi
  407640:	mov    QWORD PTR [rsi],rcx
  407643:	movzx  eax,WORD PTR [rbp-0x1a]
  407647:	mov    ecx,eax
  407649:	add    rdx,0x10
  40764d:	movsxd rsi,DWORD PTR [rbp-0xa8]
  407654:	shl    rsi,0x4
  407658:	add    rdx,rsi
  40765b:	mov    QWORD PTR [rdx+0x8],rcx
  40765f:	mov    eax,DWORD PTR [rbp-0xa8]
  407665:	add    eax,0x1
  407668:	mov    DWORD PTR [rbp-0xa8],eax
  40766e:	mov    rax,QWORD PTR [rbp-0x10]
  407672:	cmp    DWORD PTR [rax+0x100],0x0
  407679:	jne    4076be <flatcc_builder_create_vtable@@Base+0xee>
  40767f:	mov    rax,QWORD PTR [rbp-0x10]
  407683:	cmp    DWORD PTR [rax+0x124],0x0
  40768a:	jne    4076be <flatcc_builder_create_vtable@@Base+0xee>
  407690:	mov    rdi,QWORD PTR [rbp-0x10]
  407694:	lea    rsi,[rbp-0xb0]
  40769b:	call   407710 <flatcc_builder_create_vtable@@Base+0x140>
  4076a0:	xor    ecx,ecx
  4076a2:	mov    DWORD PTR [rbp-0x20],eax
  4076a5:	cmp    ecx,eax
  4076a7:	jne    4076b9 <flatcc_builder_create_vtable@@Base+0xe9>
  4076ad:	mov    DWORD PTR [rbp-0x4],0x0
  4076b4:	jmp    4076f6 <flatcc_builder_create_vtable@@Base+0x126>
  4076b9:	jmp    4076f0 <flatcc_builder_create_vtable@@Base+0x120>
  4076be:	mov    rdi,QWORD PTR [rbp-0x10]
  4076c2:	lea    rsi,[rbp-0xb0]
  4076c9:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  4076ce:	xor    ecx,ecx
  4076d0:	mov    DWORD PTR [rbp-0x20],eax
  4076d3:	cmp    ecx,eax
  4076d5:	jne    4076e7 <flatcc_builder_create_vtable@@Base+0x117>
  4076db:	mov    DWORD PTR [rbp-0x4],0x0
  4076e2:	jmp    4076f6 <flatcc_builder_create_vtable@@Base+0x126>
  4076e7:	mov    eax,DWORD PTR [rbp-0x20]
  4076ea:	add    eax,0x1
  4076ed:	mov    DWORD PTR [rbp-0x20],eax
  4076f0:	mov    eax,DWORD PTR [rbp-0x20]
  4076f3:	mov    DWORD PTR [rbp-0x4],eax
  4076f6:	mov    eax,DWORD PTR [rbp-0x4]
  4076f9:	add    rsp,0xc0
  407700:	pop    rbp
  407701:	ret    
  407702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40770c:	nop    DWORD PTR [rax+0x0]
  407710:	push   rbp
  407711:	mov    rbp,rsp
  407714:	sub    rsp,0x20
  407718:	mov    QWORD PTR [rbp-0x8],rdi
  40771c:	mov    QWORD PTR [rbp-0x10],rsi
  407720:	mov    rsi,QWORD PTR [rbp-0x8]
  407724:	mov    eax,DWORD PTR [rsi+0xf4]
  40772a:	mov    DWORD PTR [rbp-0x14],eax
  40772d:	mov    eax,DWORD PTR [rbp-0x14]
  407730:	mov    rsi,QWORD PTR [rbp-0x10]
  407734:	mov    rsi,QWORD PTR [rsi]
  407737:	mov    ecx,esi
  407739:	add    eax,ecx
  40773b:	mov    rsi,QWORD PTR [rbp-0x8]
  40773f:	mov    DWORD PTR [rsi+0xf4],eax
  407745:	mov    rsi,QWORD PTR [rbp-0x8]
  407749:	mov    eax,DWORD PTR [rsi+0xf4]
  40774f:	cmp    eax,DWORD PTR [rbp-0x14]
  407752:	jge    407777 <flatcc_builder_create_vtable@@Base+0x1a7>
  407758:	lea    rdi,[rip+0x63f3]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40775f:	lea    rsi,[rip+0x522c]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407766:	mov    edx,0x2a1
  40776b:	lea    rcx,[rip+0x635b]        # 40dacd <flatcc_builder_padding_base@@Base+0x134d>
  407772:	call   403090 <__assert_fail@plt>
  407777:	mov    rax,QWORD PTR [rbp-0x8]
  40777b:	mov    rax,QWORD PTR [rax+0x48]
  40777f:	mov    rcx,QWORD PTR [rbp-0x8]
  407783:	mov    rdi,QWORD PTR [rcx+0x38]
  407787:	mov    rcx,QWORD PTR [rbp-0x10]
  40778b:	add    rcx,0x10
  40778f:	mov    rdx,QWORD PTR [rbp-0x10]
  407793:	mov    edx,DWORD PTR [rdx+0x8]
  407796:	mov    esi,DWORD PTR [rbp-0x14]
  407799:	mov    r8,QWORD PTR [rbp-0x10]
  40779d:	mov    r8,QWORD PTR [r8]
  4077a0:	mov    DWORD PTR [rbp-0x18],esi
  4077a3:	mov    rsi,rcx
  4077a6:	mov    ecx,DWORD PTR [rbp-0x18]
  4077a9:	call   rax
  4077ab:	cmp    eax,0x0
  4077ae:	je     4077d3 <flatcc_builder_create_vtable@@Base+0x203>
  4077b4:	lea    rdi,[rip+0x6397]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4077bb:	lea    rsi,[rip+0x51d0]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4077c2:	mov    edx,0x2a5
  4077c7:	lea    rcx,[rip+0x62ff]        # 40dacd <flatcc_builder_padding_base@@Base+0x134d>
  4077ce:	call   403090 <__assert_fail@plt>
  4077d3:	mov    eax,DWORD PTR [rbp-0x14]
  4077d6:	add    eax,0x1
  4077d9:	add    rsp,0x20
  4077dd:	pop    rbp
  4077de:	ret    
  4077df:	nop

00000000004077e0 <flatcc_builder_create_cached_vtable@@Base>:
  4077e0:	push   rbp
  4077e1:	mov    rbp,rsp
  4077e4:	sub    rsp,0x70
  4077e8:	mov    ax,dx
  4077eb:	mov    QWORD PTR [rbp-0x10],rdi
  4077ef:	mov    QWORD PTR [rbp-0x18],rsi
  4077f3:	mov    WORD PTR [rbp-0x1a],ax
  4077f7:	mov    DWORD PTR [rbp-0x20],ecx
  4077fa:	mov    rdi,QWORD PTR [rbp-0x10]
  4077fe:	mov    esi,DWORD PTR [rbp-0x20]
  407801:	call   407b10 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407806:	mov    QWORD PTR [rbp-0x40],rax
  40780a:	cmp    rax,0x0
  40780e:	jne    407820 <flatcc_builder_create_cached_vtable@@Base+0x40>
  407814:	mov    DWORD PTR [rbp-0x4],0x0
  40781b:	jmp    407af8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407820:	mov    rax,QWORD PTR [rbp-0x40]
  407824:	mov    QWORD PTR [rbp-0x38],rax
  407828:	mov    rax,QWORD PTR [rbp-0x38]
  40782c:	mov    ecx,DWORD PTR [rax]
  40782e:	mov    DWORD PTR [rbp-0x44],ecx
  407831:	mov    QWORD PTR [rbp-0x30],0x0
  407839:	cmp    DWORD PTR [rbp-0x44],0x0
  40783d:	je     40794c <flatcc_builder_create_cached_vtable@@Base+0x16c>
  407843:	mov    rax,QWORD PTR [rbp-0x10]
  407847:	mov    rax,QWORD PTR [rax+0xb8]
  40784e:	mov    ecx,DWORD PTR [rbp-0x44]
  407851:	mov    edx,ecx
  407853:	add    rax,rdx
  407856:	mov    QWORD PTR [rbp-0x28],rax
  40785a:	mov    rax,QWORD PTR [rbp-0x10]
  40785e:	mov    rax,QWORD PTR [rax+0x78]
  407862:	mov    rdx,QWORD PTR [rbp-0x28]
  407866:	mov    ecx,DWORD PTR [rdx+0x8]
  407869:	mov    edx,ecx
  40786b:	add    rax,rdx
  40786e:	mov    QWORD PTR [rbp-0x50],rax
  407872:	mov    rax,QWORD PTR [rbp-0x50]
  407876:	movzx  ecx,WORD PTR [rax]
  407879:	movzx  esi,WORD PTR [rbp-0x1a]
  40787d:	cmp    ecx,esi
  40787f:	jne    4078b8 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  407885:	xor    eax,eax
  407887:	mov    rcx,QWORD PTR [rbp-0x18]
  40788b:	mov    rdx,QWORD PTR [rbp-0x50]
  40788f:	movzx  esi,WORD PTR [rbp-0x1a]
  407893:	mov    edi,esi
  407895:	mov    QWORD PTR [rbp-0x58],rdi
  407899:	mov    rdi,rcx
  40789c:	mov    rsi,rdx
  40789f:	mov    rdx,QWORD PTR [rbp-0x58]
  4078a3:	mov    DWORD PTR [rbp-0x5c],eax
  4078a6:	call   4030c0 <memcmp@plt>
  4078ab:	mov    r8d,DWORD PTR [rbp-0x5c]
  4078af:	cmp    r8d,eax
  4078b2:	je     4078d3 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  4078b8:	mov    rax,QWORD PTR [rbp-0x28]
  4078bc:	add    rax,0xc
  4078c0:	mov    QWORD PTR [rbp-0x38],rax
  4078c4:	mov    rax,QWORD PTR [rbp-0x28]
  4078c8:	mov    ecx,DWORD PTR [rax+0xc]
  4078cb:	mov    DWORD PTR [rbp-0x44],ecx
  4078ce:	jmp    407839 <flatcc_builder_create_cached_vtable@@Base+0x59>
  4078d3:	mov    rax,QWORD PTR [rbp-0x28]
  4078d7:	mov    ecx,DWORD PTR [rax+0x4]
  4078da:	mov    rax,QWORD PTR [rbp-0x10]
  4078de:	cmp    ecx,DWORD PTR [rax+0x100]
  4078e4:	je     40790d <flatcc_builder_create_cached_vtable@@Base+0x12d>
  4078ea:	mov    rax,QWORD PTR [rbp-0x28]
  4078ee:	mov    QWORD PTR [rbp-0x30],rax
  4078f2:	mov    rax,QWORD PTR [rbp-0x28]
  4078f6:	add    rax,0xc
  4078fa:	mov    QWORD PTR [rbp-0x38],rax
  4078fe:	mov    rax,QWORD PTR [rbp-0x28]
  407902:	mov    ecx,DWORD PTR [rax+0xc]
  407905:	mov    DWORD PTR [rbp-0x44],ecx
  407908:	jmp    407839 <flatcc_builder_create_cached_vtable@@Base+0x59>
  40790d:	mov    rax,QWORD PTR [rbp-0x38]
  407911:	cmp    rax,QWORD PTR [rbp-0x40]
  407915:	je     40793e <flatcc_builder_create_cached_vtable@@Base+0x15e>
  40791b:	mov    rax,QWORD PTR [rbp-0x28]
  40791f:	mov    ecx,DWORD PTR [rax+0xc]
  407922:	mov    rax,QWORD PTR [rbp-0x38]
  407926:	mov    DWORD PTR [rax],ecx
  407928:	mov    rax,QWORD PTR [rbp-0x40]
  40792c:	mov    ecx,DWORD PTR [rax]
  40792e:	mov    rax,QWORD PTR [rbp-0x28]
  407932:	mov    DWORD PTR [rax+0xc],ecx
  407935:	mov    ecx,DWORD PTR [rbp-0x44]
  407938:	mov    rax,QWORD PTR [rbp-0x40]
  40793c:	mov    DWORD PTR [rax],ecx
  40793e:	mov    rax,QWORD PTR [rbp-0x28]
  407942:	mov    ecx,DWORD PTR [rax]
  407944:	mov    DWORD PTR [rbp-0x4],ecx
  407947:	jmp    407af8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40794c:	mov    eax,0x10
  407951:	mov    ecx,eax
  407953:	xor    r8d,r8d
  407956:	mov    rdi,QWORD PTR [rbp-0x10]
  40795a:	mov    rdx,QWORD PTR [rbp-0x10]
  40795e:	mov    eax,DWORD PTR [rdx+0xe4]
  407964:	mov    edx,eax
  407966:	mov    esi,0x6
  40796b:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407970:	mov    QWORD PTR [rbp-0x28],rax
  407974:	cmp    rax,0x0
  407978:	jne    40798a <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  40797e:	mov    DWORD PTR [rbp-0x4],0x0
  407985:	jmp    407af8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40798a:	mov    rax,QWORD PTR [rbp-0x10]
  40798e:	mov    ecx,DWORD PTR [rax+0xe4]
  407994:	mov    DWORD PTR [rbp-0x44],ecx
  407997:	mov    rax,QWORD PTR [rbp-0x10]
  40799b:	mov    ecx,DWORD PTR [rax+0xe4]
  4079a1:	mov    edx,ecx
  4079a3:	add    rdx,0x10
  4079a7:	mov    ecx,edx
  4079a9:	mov    DWORD PTR [rax+0xe4],ecx
  4079af:	mov    rax,QWORD PTR [rbp-0x10]
  4079b3:	mov    ecx,DWORD PTR [rax+0x100]
  4079b9:	mov    rax,QWORD PTR [rbp-0x28]
  4079bd:	mov    DWORD PTR [rax+0x4],ecx
  4079c0:	mov    rax,QWORD PTR [rbp-0x40]
  4079c4:	mov    ecx,DWORD PTR [rax]
  4079c6:	mov    rax,QWORD PTR [rbp-0x28]
  4079ca:	mov    DWORD PTR [rax+0xc],ecx
  4079cd:	mov    ecx,DWORD PTR [rbp-0x44]
  4079d0:	mov    rax,QWORD PTR [rbp-0x40]
  4079d4:	mov    DWORD PTR [rax],ecx
  4079d6:	mov    rdi,QWORD PTR [rbp-0x10]
  4079da:	mov    rsi,QWORD PTR [rbp-0x18]
  4079de:	movzx  edx,WORD PTR [rbp-0x1a]
  4079e2:	call   4075d0 <flatcc_builder_create_vtable@@Base>
  4079e7:	xor    ecx,ecx
  4079e9:	mov    rsi,QWORD PTR [rbp-0x28]
  4079ed:	mov    DWORD PTR [rsi],eax
  4079ef:	cmp    ecx,eax
  4079f1:	jne    407a03 <flatcc_builder_create_cached_vtable@@Base+0x223>
  4079f7:	mov    DWORD PTR [rbp-0x4],0x0
  4079fe:	jmp    407af8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407a03:	cmp    QWORD PTR [rbp-0x30],0x0
  407a08:	je     407a21 <flatcc_builder_create_cached_vtable@@Base+0x241>
  407a0e:	mov    rax,QWORD PTR [rbp-0x30]
  407a12:	mov    ecx,DWORD PTR [rax+0x8]
  407a15:	mov    rax,QWORD PTR [rbp-0x28]
  407a19:	mov    DWORD PTR [rax+0x8],ecx
  407a1c:	jmp    407aef <flatcc_builder_create_cached_vtable@@Base+0x30f>
  407a21:	mov    rax,QWORD PTR [rbp-0x10]
  407a25:	cmp    QWORD PTR [rax+0x118],0x0
  407a2d:	je     407a69 <flatcc_builder_create_cached_vtable@@Base+0x289>
  407a33:	mov    rax,QWORD PTR [rbp-0x10]
  407a37:	mov    rax,QWORD PTR [rax+0x118]
  407a3e:	mov    rcx,QWORD PTR [rbp-0x10]
  407a42:	mov    edx,DWORD PTR [rcx+0xe0]
  407a48:	movzx  esi,WORD PTR [rbp-0x1a]
  407a4c:	add    edx,esi
  407a4e:	mov    edx,edx
  407a50:	mov    ecx,edx
  407a52:	cmp    rax,rcx
  407a55:	jae    407a69 <flatcc_builder_create_cached_vtable@@Base+0x289>
  407a5b:	mov    rdi,QWORD PTR [rbp-0x10]
  407a5f:	call   404ab0 <flatcc_builder_flush_vtable_cache@@Base>
  407a64:	jmp    407aea <flatcc_builder_create_cached_vtable@@Base+0x30a>
  407a69:	xor    r8d,r8d
  407a6c:	mov    rdi,QWORD PTR [rbp-0x10]
  407a70:	mov    rax,QWORD PTR [rbp-0x10]
  407a74:	mov    ecx,DWORD PTR [rax+0xe0]
  407a7a:	mov    edx,ecx
  407a7c:	movzx  ecx,WORD PTR [rbp-0x1a]
  407a80:	mov    esi,0x2
  407a85:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407a8a:	mov    QWORD PTR [rbp-0x50],rax
  407a8e:	cmp    rax,0x0
  407a92:	jne    407aa4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  407a98:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a9f:	jmp    407af8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407aa4:	mov    rax,QWORD PTR [rbp-0x10]
  407aa8:	mov    ecx,DWORD PTR [rax+0xe0]
  407aae:	mov    rax,QWORD PTR [rbp-0x28]
  407ab2:	mov    DWORD PTR [rax+0x8],ecx
  407ab5:	movzx  ecx,WORD PTR [rbp-0x1a]
  407ab9:	mov    rax,QWORD PTR [rbp-0x10]
  407abd:	add    ecx,DWORD PTR [rax+0xe0]
  407ac3:	mov    DWORD PTR [rax+0xe0],ecx
  407ac9:	mov    rax,QWORD PTR [rbp-0x50]
  407acd:	mov    rdx,QWORD PTR [rbp-0x18]
  407ad1:	movzx  ecx,WORD PTR [rbp-0x1a]
  407ad5:	mov    esi,ecx
  407ad7:	mov    rdi,rax
  407ada:	mov    QWORD PTR [rbp-0x68],rsi
  407ade:	mov    rsi,rdx
  407ae1:	mov    rdx,QWORD PTR [rbp-0x68]
  407ae5:	call   4030e0 <memcpy@plt>
  407aea:	jmp    407aef <flatcc_builder_create_cached_vtable@@Base+0x30f>
  407aef:	mov    rax,QWORD PTR [rbp-0x28]
  407af3:	mov    ecx,DWORD PTR [rax]
  407af5:	mov    DWORD PTR [rbp-0x4],ecx
  407af8:	mov    eax,DWORD PTR [rbp-0x4]
  407afb:	add    rsp,0x70
  407aff:	pop    rbp
  407b00:	ret    
  407b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b10:	push   rbp
  407b11:	mov    rbp,rsp
  407b14:	sub    rsp,0x20
  407b18:	mov    QWORD PTR [rbp-0x10],rdi
  407b1c:	mov    DWORD PTR [rbp-0x14],esi
  407b1f:	mov    rdi,QWORD PTR [rbp-0x10]
  407b23:	cmp    QWORD PTR [rdi+0xd8],0x0
  407b2b:	jne    407b55 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407b31:	mov    rdi,QWORD PTR [rbp-0x10]
  407b35:	call   40a560 <flatcc_builder_get_emit_context@@Base+0xe0>
  407b3a:	cmp    eax,0x0
  407b3d:	je     407b50 <flatcc_builder_create_cached_vtable@@Base+0x370>
  407b43:	mov    QWORD PTR [rbp-0x8],0x0
  407b4b:	jmp    407b92 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  407b50:	jmp    407b55 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407b55:	mov    eax,0x20
  407b5a:	mov    ecx,eax
  407b5c:	mov    rdx,QWORD PTR [rbp-0x10]
  407b60:	mov    rdx,QWORD PTR [rdx+0xa8]
  407b67:	mov    QWORD PTR [rbp-0x20],rdx
  407b6b:	mov    rdx,QWORD PTR [rbp-0x20]
  407b6f:	mov    eax,DWORD PTR [rbp-0x14]
  407b72:	mov    rsi,QWORD PTR [rbp-0x10]
  407b76:	sub    rcx,QWORD PTR [rsi+0xd8]
  407b7d:	mov    edi,ecx
  407b7f:	mov    ecx,edi
  407b81:	shr    eax,cl
  407b83:	mov    eax,eax
  407b85:	mov    esi,eax
  407b87:	shl    rsi,0x2
  407b8b:	add    rdx,rsi
  407b8e:	mov    QWORD PTR [rbp-0x8],rdx
  407b92:	mov    rax,QWORD PTR [rbp-0x8]
  407b96:	add    rsp,0x20
  407b9a:	pop    rbp
  407b9b:	ret    
  407b9c:	nop    DWORD PTR [rax+0x0]

0000000000407ba0 <flatcc_builder_create_table@@Base>:
  407ba0:	push   rbp
  407ba1:	mov    rbp,rsp
  407ba4:	sub    rsp,0xf0
  407bab:	mov    ax,cx
  407bae:	mov    ecx,DWORD PTR [rbp+0x10]
  407bb1:	mov    QWORD PTR [rbp-0x10],rdi
  407bb5:	mov    QWORD PTR [rbp-0x18],rsi
  407bb9:	mov    QWORD PTR [rbp-0x20],rdx
  407bbd:	mov    WORD PTR [rbp-0x22],ax
  407bc1:	mov    QWORD PTR [rbp-0x30],r8
  407bc5:	mov    DWORD PTR [rbp-0x34],r9d
  407bc9:	cmp    DWORD PTR [rbp-0x34],0x0
  407bcd:	mov    DWORD PTR [rbp-0xec],ecx
  407bd3:	jl     407bde <flatcc_builder_create_table@@Base+0x3e>
  407bd9:	jmp    407bfd <flatcc_builder_create_table@@Base+0x5d>
  407bde:	lea    rdi,[rip+0x5523]        # 40d108 <flatcc_builder_padding_base@@Base+0x988>
  407be5:	lea    rsi,[rip+0x4da6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407bec:	mov    edx,0x4d5
  407bf1:	lea    rcx,[rip+0x5522]        # 40d11a <flatcc_builder_padding_base@@Base+0x99a>
  407bf8:	call   403090 <__assert_fail@plt>
  407bfd:	mov    eax,DWORD PTR [rbp+0x10]
  407c00:	and    eax,0x1
  407c03:	cmp    eax,0x0
  407c06:	je     407c11 <flatcc_builder_create_table@@Base+0x71>
  407c0c:	jmp    407c30 <flatcc_builder_create_table@@Base+0x90>
  407c11:	lea    rdi,[rip+0x559e]        # 40d1b6 <flatcc_builder_padding_base@@Base+0xa36>
  407c18:	lea    rsi,[rip+0x4d73]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407c1f:	mov    edx,0x4db
  407c24:	lea    rcx,[rip+0x54ef]        # 40d11a <flatcc_builder_padding_base@@Base+0x99a>
  407c2b:	call   403090 <__assert_fail@plt>
  407c30:	lea    rdi,[rbp-0x22]
  407c34:	mov    esi,0x4
  407c39:	call   407110 <flatcc_builder_start_vector@@Base+0xb0>
  407c3e:	mov    rdi,QWORD PTR [rbp-0x10]
  407c42:	movzx  esi,WORD PTR [rbp-0x22]
  407c46:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  407c4b:	mov    rdi,QWORD PTR [rbp-0x10]
  407c4f:	mov    rax,QWORD PTR [rbp-0x20]
  407c53:	mov    esi,eax
  407c55:	movzx  edx,WORD PTR [rbp-0x22]
  407c59:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  407c5e:	mov    DWORD PTR [rbp-0x3c],eax
  407c61:	mov    rdi,QWORD PTR [rbp-0x10]
  407c65:	mov    eax,DWORD PTR [rdi+0xf0]
  407c6b:	mov    edx,DWORD PTR [rbp-0x3c]
  407c6e:	mov    edi,edx
  407c70:	add    rdi,QWORD PTR [rbp-0x20]
  407c74:	add    rdi,0x4
  407c78:	mov    edx,edi
  407c7a:	sub    eax,edx
  407c7c:	mov    DWORD PTR [rbp-0x4c],eax
  407c7f:	mov    eax,DWORD PTR [rbp+0x10]
  407c82:	sub    eax,0x1
  407c85:	mov    DWORD PTR [rbp-0x48],eax
  407c88:	mov    eax,DWORD PTR [rbp-0x4c]
  407c8b:	sub    eax,DWORD PTR [rbp-0x48]
  407c8e:	mov    DWORD PTR [rbp-0x40],eax
  407c91:	mov    eax,DWORD PTR [rbp-0x4c]
  407c94:	sub    eax,DWORD PTR [rbp-0x40]
  407c97:	cmp    eax,DWORD PTR [rbp-0x48]
  407c9a:	je     407cac <flatcc_builder_create_table@@Base+0x10c>
  407ca0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407ca7:	jmp    407e7f <flatcc_builder_create_table@@Base+0x2df>
  407cac:	mov    edi,DWORD PTR [rbp-0x40]
  407caf:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  407cb4:	mov    DWORD PTR [rbp-0x44],eax
  407cb7:	mov    DWORD PTR [rbp-0x38],0x0
  407cbe:	mov    eax,DWORD PTR [rbp-0x38]
  407cc1:	cmp    eax,DWORD PTR [rbp-0x34]
  407cc4:	jge    407d23 <flatcc_builder_create_table@@Base+0x183>
  407cca:	mov    rax,QWORD PTR [rbp-0x18]
  407cce:	mov    rcx,QWORD PTR [rbp-0x30]
  407cd2:	movsxd rdx,DWORD PTR [rbp-0x38]
  407cd6:	movzx  esi,WORD PTR [rcx+rdx*2]
  407cda:	mov    ecx,esi
  407cdc:	add    rax,rcx
  407cdf:	mov    QWORD PTR [rbp-0x58],rax
  407ce3:	mov    rax,QWORD PTR [rbp-0x58]
  407ce7:	mov    esi,DWORD PTR [rax]
  407ce9:	sub    esi,DWORD PTR [rbp-0x4c]
  407cec:	mov    rax,QWORD PTR [rbp-0x30]
  407cf0:	movsxd rcx,DWORD PTR [rbp-0x38]
  407cf4:	movzx  edi,WORD PTR [rax+rcx*2]
  407cf8:	sub    esi,edi
  407cfa:	mov    esi,esi
  407cfc:	mov    eax,esi
  407cfe:	sub    rax,0x4
  407d02:	mov    esi,eax
  407d04:	mov    DWORD PTR [rbp-0x50],esi
  407d07:	mov    edi,DWORD PTR [rbp-0x50]
  407d0a:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  407d0f:	mov    rcx,QWORD PTR [rbp-0x58]
  407d13:	mov    DWORD PTR [rcx],eax
  407d15:	mov    eax,DWORD PTR [rbp-0x38]
  407d18:	add    eax,0x1
  407d1b:	mov    DWORD PTR [rbp-0x38],eax
  407d1e:	jmp    407cbe <flatcc_builder_create_table@@Base+0x11e>
  407d23:	mov    QWORD PTR [rbp-0xe8],0x0
  407d2e:	mov    DWORD PTR [rbp-0xe0],0x0
  407d38:	mov    rax,QWORD PTR [rbp-0xe8]
  407d3f:	add    rax,0x4
  407d43:	mov    QWORD PTR [rbp-0xe8],rax
  407d4a:	lea    rax,[rbp-0x44]
  407d4e:	lea    rcx,[rbp-0xe8]
  407d55:	mov    rdx,rcx
  407d58:	add    rdx,0x10
  407d5c:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407d63:	shl    rsi,0x4
  407d67:	add    rdx,rsi
  407d6a:	mov    QWORD PTR [rdx],rax
  407d6d:	add    rcx,0x10
  407d71:	movsxd rax,DWORD PTR [rbp-0xe0]
  407d78:	shl    rax,0x4
  407d7c:	add    rcx,rax
  407d7f:	mov    QWORD PTR [rcx+0x8],0x4
  407d87:	mov    edi,DWORD PTR [rbp-0xe0]
  407d8d:	add    edi,0x1
  407d90:	mov    DWORD PTR [rbp-0xe0],edi
  407d96:	cmp    QWORD PTR [rbp-0x20],0x0
  407d9b:	jbe    407dff <flatcc_builder_create_table@@Base+0x25f>
  407da1:	mov    rax,QWORD PTR [rbp-0x20]
  407da5:	add    rax,QWORD PTR [rbp-0xe8]
  407dac:	mov    QWORD PTR [rbp-0xe8],rax
  407db3:	mov    rax,QWORD PTR [rbp-0x18]
  407db7:	lea    rcx,[rbp-0xe8]
  407dbe:	mov    rdx,rcx
  407dc1:	add    rdx,0x10
  407dc5:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407dcc:	shl    rsi,0x4
  407dd0:	add    rdx,rsi
  407dd3:	mov    QWORD PTR [rdx],rax
  407dd6:	mov    rax,QWORD PTR [rbp-0x20]
  407dda:	add    rcx,0x10
  407dde:	movsxd rdx,DWORD PTR [rbp-0xe0]
  407de5:	shl    rdx,0x4
  407de9:	add    rcx,rdx
  407dec:	mov    QWORD PTR [rcx+0x8],rax
  407df0:	mov    edi,DWORD PTR [rbp-0xe0]
  407df6:	add    edi,0x1
  407df9:	mov    DWORD PTR [rbp-0xe0],edi
  407dff:	cmp    DWORD PTR [rbp-0x3c],0x0
  407e03:	jbe    407e6c <flatcc_builder_create_table@@Base+0x2cc>
  407e09:	lea    rax,[rip+0x4970]        # 40c780 <flatcc_builder_padding_base@@Base>
  407e10:	mov    ecx,DWORD PTR [rbp-0x3c]
  407e13:	mov    edx,ecx
  407e15:	add    rdx,QWORD PTR [rbp-0xe8]
  407e1c:	mov    QWORD PTR [rbp-0xe8],rdx
  407e23:	lea    rdx,[rbp-0xe8]
  407e2a:	mov    rsi,rdx
  407e2d:	add    rsi,0x10
  407e31:	movsxd rdi,DWORD PTR [rbp-0xe0]
  407e38:	shl    rdi,0x4
  407e3c:	add    rsi,rdi
  407e3f:	mov    QWORD PTR [rsi],rax
  407e42:	mov    ecx,DWORD PTR [rbp-0x3c]
  407e45:	mov    eax,ecx
  407e47:	add    rdx,0x10
  407e4b:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407e52:	shl    rsi,0x4
  407e56:	add    rdx,rsi
  407e59:	mov    QWORD PTR [rdx+0x8],rax
  407e5d:	mov    ecx,DWORD PTR [rbp-0xe0]
  407e63:	add    ecx,0x1
  407e66:	mov    DWORD PTR [rbp-0xe0],ecx
  407e6c:	mov    rdi,QWORD PTR [rbp-0x10]
  407e70:	lea    rsi,[rbp-0xe8]
  407e77:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  407e7c:	mov    DWORD PTR [rbp-0x4],eax
  407e7f:	mov    eax,DWORD PTR [rbp-0x4]
  407e82:	add    rsp,0xf0
  407e89:	pop    rbp
  407e8a:	ret    
  407e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407e90 <flatcc_builder_check_required_field@@Base>:
  407e90:	push   rbp
  407e91:	mov    rbp,rsp
  407e94:	sub    rsp,0x10
  407e98:	mov    ax,si
  407e9b:	mov    QWORD PTR [rbp-0x8],rdi
  407e9f:	mov    WORD PTR [rbp-0xa],ax
  407ea3:	mov    rdi,QWORD PTR [rbp-0x8]
  407ea7:	mov    rdi,QWORD PTR [rdi+0x30]
  407eab:	movzx  esi,WORD PTR [rdi+0xe]
  407eaf:	cmp    esi,0x3
  407eb2:	jne    407ebd <flatcc_builder_check_required_field@@Base+0x2d>
  407eb8:	jmp    407edc <flatcc_builder_check_required_field@@Base+0x4c>
  407ebd:	lea    rdi,[rip+0x52fd]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  407ec4:	lea    rsi,[rip+0x4ac7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407ecb:	mov    edx,0x4f8
  407ed0:	lea    rcx,[rip+0x5315]        # 40d1ec <flatcc_builder_padding_base@@Base+0xa6c>
  407ed7:	call   403090 <__assert_fail@plt>
  407edc:	xor    eax,eax
  407ede:	mov    cl,al
  407ee0:	movzx  eax,WORD PTR [rbp-0xa]
  407ee4:	mov    rdx,QWORD PTR [rbp-0x8]
  407ee8:	movzx  esi,WORD PTR [rdx+0x10]
  407eec:	cmp    eax,esi
  407eee:	mov    BYTE PTR [rbp-0xb],cl
  407ef1:	jge    407f14 <flatcc_builder_check_required_field@@Base+0x84>
  407ef7:	mov    rax,QWORD PTR [rbp-0x8]
  407efb:	mov    rax,QWORD PTR [rax+0x8]
  407eff:	movzx  ecx,WORD PTR [rbp-0xa]
  407f03:	mov    edx,ecx
  407f05:	movzx  ecx,WORD PTR [rax+rdx*2]
  407f09:	cmp    ecx,0x0
  407f0c:	setne  sil
  407f10:	mov    BYTE PTR [rbp-0xb],sil
  407f14:	mov    al,BYTE PTR [rbp-0xb]
  407f17:	and    al,0x1
  407f19:	movzx  eax,al
  407f1c:	add    rsp,0x10
  407f20:	pop    rbp
  407f21:	ret    
  407f22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f2c:	nop    DWORD PTR [rax+0x0]

0000000000407f30 <flatcc_builder_check_union_field@@Base>:
  407f30:	push   rbp
  407f31:	mov    rbp,rsp
  407f34:	sub    rsp,0x20
  407f38:	mov    ax,si
  407f3b:	mov    QWORD PTR [rbp-0x10],rdi
  407f3f:	mov    WORD PTR [rbp-0x12],ax
  407f43:	mov    rdi,QWORD PTR [rbp-0x10]
  407f47:	mov    rdi,QWORD PTR [rdi+0x30]
  407f4b:	movzx  esi,WORD PTR [rdi+0xe]
  407f4f:	cmp    esi,0x3
  407f52:	jne    407f5d <flatcc_builder_check_union_field@@Base+0x2d>
  407f58:	jmp    407f7c <flatcc_builder_check_union_field@@Base+0x4c>
  407f5d:	lea    rdi,[rip+0x525d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  407f64:	lea    rsi,[rip+0x4a27]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407f6b:	mov    edx,0x4ff
  407f70:	lea    rcx,[rip+0x52c8]        # 40d23f <flatcc_builder_padding_base@@Base+0xabf>
  407f77:	call   403090 <__assert_fail@plt>
  407f7c:	movzx  eax,WORD PTR [rbp-0x12]
  407f80:	cmp    eax,0x0
  407f83:	je     407f9d <flatcc_builder_check_union_field@@Base+0x6d>
  407f89:	movzx  eax,WORD PTR [rbp-0x12]
  407f8d:	mov    rcx,QWORD PTR [rbp-0x10]
  407f91:	movzx  edx,WORD PTR [rcx+0x10]
  407f95:	cmp    eax,edx
  407f97:	jl     407fa9 <flatcc_builder_check_union_field@@Base+0x79>
  407f9d:	mov    DWORD PTR [rbp-0x4],0x0
  407fa4:	jmp    408069 <flatcc_builder_check_union_field@@Base+0x139>
  407fa9:	mov    rax,QWORD PTR [rbp-0x10]
  407fad:	mov    rax,QWORD PTR [rax+0x8]
  407fb1:	movzx  ecx,WORD PTR [rbp-0x12]
  407fb5:	sub    ecx,0x1
  407fb8:	movsxd rdx,ecx
  407fbb:	movzx  ecx,WORD PTR [rax+rdx*2]
  407fbf:	cmp    ecx,0x0
  407fc2:	jne    407ff1 <flatcc_builder_check_union_field@@Base+0xc1>
  407fc8:	mov    rax,QWORD PTR [rbp-0x10]
  407fcc:	mov    rax,QWORD PTR [rax+0x8]
  407fd0:	movzx  ecx,WORD PTR [rbp-0x12]
  407fd4:	mov    edx,ecx
  407fd6:	movzx  ecx,WORD PTR [rax+rdx*2]
  407fda:	cmp    ecx,0x0
  407fdd:	sete   sil
  407fe1:	and    sil,0x1
  407fe5:	movzx  ecx,sil
  407fe9:	mov    DWORD PTR [rbp-0x4],ecx
  407fec:	jmp    408069 <flatcc_builder_check_union_field@@Base+0x139>
  407ff1:	mov    rax,QWORD PTR [rbp-0x10]
  407ff5:	mov    rax,QWORD PTR [rax+0x18]
  407ff9:	mov    rcx,QWORD PTR [rbp-0x10]
  407ffd:	mov    rcx,QWORD PTR [rcx+0x8]
  408001:	movzx  edx,WORD PTR [rbp-0x12]
  408005:	sub    edx,0x1
  408008:	movsxd rsi,edx
  40800b:	movzx  edx,WORD PTR [rcx+rsi*2]
  40800f:	movsxd rcx,edx
  408012:	cmp    BYTE PTR [rax+rcx*1],0x0
  408016:	je     408045 <flatcc_builder_check_union_field@@Base+0x115>
  40801c:	mov    rax,QWORD PTR [rbp-0x10]
  408020:	mov    rax,QWORD PTR [rax+0x8]
  408024:	movzx  ecx,WORD PTR [rbp-0x12]
  408028:	mov    edx,ecx
  40802a:	movzx  ecx,WORD PTR [rax+rdx*2]
  40802e:	cmp    ecx,0x0
  408031:	setne  sil
  408035:	and    sil,0x1
  408039:	movzx  ecx,sil
  40803d:	mov    DWORD PTR [rbp-0x4],ecx
  408040:	jmp    408069 <flatcc_builder_check_union_field@@Base+0x139>
  408045:	mov    rax,QWORD PTR [rbp-0x10]
  408049:	mov    rax,QWORD PTR [rax+0x8]
  40804d:	movzx  ecx,WORD PTR [rbp-0x12]
  408051:	mov    edx,ecx
  408053:	movzx  ecx,WORD PTR [rax+rdx*2]
  408057:	cmp    ecx,0x0
  40805a:	sete   sil
  40805e:	and    sil,0x1
  408062:	movzx  ecx,sil
  408066:	mov    DWORD PTR [rbp-0x4],ecx
  408069:	mov    eax,DWORD PTR [rbp-0x4]
  40806c:	add    rsp,0x20
  408070:	pop    rbp
  408071:	ret    
  408072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40807c:	nop    DWORD PTR [rax+0x0]

0000000000408080 <flatcc_builder_check_required@@Base>:
  408080:	push   rbp
  408081:	mov    rbp,rsp
  408084:	sub    rsp,0x20
  408088:	mov    QWORD PTR [rbp-0x10],rdi
  40808c:	mov    QWORD PTR [rbp-0x18],rsi
  408090:	mov    DWORD PTR [rbp-0x1c],edx
  408093:	mov    rsi,QWORD PTR [rbp-0x10]
  408097:	mov    rsi,QWORD PTR [rsi+0x30]
  40809b:	movzx  edx,WORD PTR [rsi+0xe]
  40809f:	cmp    edx,0x3
  4080a2:	jne    4080ad <flatcc_builder_check_required@@Base+0x2d>
  4080a8:	jmp    4080cc <flatcc_builder_check_required@@Base+0x4c>
  4080ad:	lea    rdi,[rip+0x510d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  4080b4:	lea    rsi,[rip+0x48d7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4080bb:	mov    edx,0x511
  4080c0:	lea    rcx,[rip+0x51c8]        # 40d28f <flatcc_builder_padding_base@@Base+0xb0f>
  4080c7:	call   403090 <__assert_fail@plt>
  4080cc:	mov    rax,QWORD PTR [rbp-0x10]
  4080d0:	movzx  ecx,WORD PTR [rax+0x10]
  4080d4:	cmp    ecx,DWORD PTR [rbp-0x1c]
  4080d7:	jge    4080e9 <flatcc_builder_check_required@@Base+0x69>
  4080dd:	mov    DWORD PTR [rbp-0x4],0x0
  4080e4:	jmp    408145 <flatcc_builder_check_required@@Base+0xc5>
  4080e9:	mov    DWORD PTR [rbp-0x20],0x0
  4080f0:	mov    eax,DWORD PTR [rbp-0x20]
  4080f3:	cmp    eax,DWORD PTR [rbp-0x1c]
  4080f6:	jge    40813e <flatcc_builder_check_required@@Base+0xbe>
  4080fc:	mov    rax,QWORD PTR [rbp-0x10]
  408100:	mov    rax,QWORD PTR [rax+0x8]
  408104:	mov    rcx,QWORD PTR [rbp-0x18]
  408108:	movsxd rdx,DWORD PTR [rbp-0x20]
  40810c:	movzx  esi,WORD PTR [rcx+rdx*2]
  408110:	mov    ecx,esi
  408112:	movzx  esi,WORD PTR [rax+rcx*2]
  408116:	cmp    esi,0x0
  408119:	jne    40812b <flatcc_builder_check_required@@Base+0xab>
  40811f:	mov    DWORD PTR [rbp-0x4],0x0
  408126:	jmp    408145 <flatcc_builder_check_required@@Base+0xc5>
  40812b:	jmp    408130 <flatcc_builder_check_required@@Base+0xb0>
  408130:	mov    eax,DWORD PTR [rbp-0x20]
  408133:	add    eax,0x1
  408136:	mov    DWORD PTR [rbp-0x20],eax
  408139:	jmp    4080f0 <flatcc_builder_check_required@@Base+0x70>
  40813e:	mov    DWORD PTR [rbp-0x4],0x1
  408145:	mov    eax,DWORD PTR [rbp-0x4]
  408148:	add    rsp,0x20
  40814c:	pop    rbp
  40814d:	ret    
  40814e:	xchg   ax,ax

0000000000408150 <flatcc_builder_end_table@@Base>:
  408150:	push   rbp
  408151:	mov    rbp,rsp
  408154:	sub    rsp,0x40
  408158:	mov    QWORD PTR [rbp-0x10],rdi
  40815c:	mov    rdi,QWORD PTR [rbp-0x10]
  408160:	mov    rdi,QWORD PTR [rdi+0x30]
  408164:	movzx  eax,WORD PTR [rdi+0xe]
  408168:	cmp    eax,0x3
  40816b:	jne    408176 <flatcc_builder_end_table@@Base+0x26>
  408171:	jmp    408195 <flatcc_builder_end_table@@Base+0x45>
  408176:	lea    rdi,[rip+0x5044]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  40817d:	lea    rsi,[rip+0x480e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408184:	mov    edx,0x525
  408189:	lea    rcx,[rip+0x5159]        # 40d2e9 <flatcc_builder_padding_base@@Base+0xb69>
  408190:	call   403090 <__assert_fail@plt>
  408195:	mov    rax,QWORD PTR [rbp-0x10]
  408199:	mov    rax,QWORD PTR [rax+0x8]
  40819d:	add    rax,0xfffffffffffffffc
  4081a1:	mov    QWORD PTR [rbp-0x18],rax
  4081a5:	mov    rax,QWORD PTR [rbp-0x10]
  4081a9:	movzx  ecx,WORD PTR [rax+0x10]
  4081ad:	add    ecx,0x2
  4081b0:	movsxd rax,ecx
  4081b3:	shl    rax,0x1
  4081b7:	mov    dx,ax
  4081ba:	mov    WORD PTR [rbp-0x1a],dx
  4081be:	mov    dx,WORD PTR [rbp-0x1a]
  4081c2:	mov    rax,QWORD PTR [rbp-0x18]
  4081c6:	mov    WORD PTR [rax],dx
  4081c9:	mov    rax,QWORD PTR [rbp-0x10]
  4081cd:	mov    ecx,DWORD PTR [rax+0x20]
  4081d0:	mov    dx,cx
  4081d3:	movzx  ecx,dx
  4081d6:	mov    eax,ecx
  4081d8:	add    rax,0x4
  4081dc:	mov    dx,ax
  4081df:	mov    rax,QWORD PTR [rbp-0x18]
  4081e3:	mov    WORD PTR [rax+0x2],dx
  4081e7:	mov    rax,QWORD PTR [rbp-0x18]
  4081eb:	movzx  ecx,WORD PTR [rax]
  4081ee:	mov    rax,QWORD PTR [rbp-0x10]
  4081f2:	xor    ecx,DWORD PTR [rax+0x14]
  4081f5:	imul   ecx,ecx,0x9e3779b1
  4081fb:	mov    rax,QWORD PTR [rbp-0x18]
  4081ff:	movzx  esi,WORD PTR [rax+0x2]
  408203:	xor    ecx,esi
  408205:	imul   ecx,ecx,0x9e3779b1
  40820b:	mov    rax,QWORD PTR [rbp-0x10]
  40820f:	mov    DWORD PTR [rax+0x14],ecx
  408212:	mov    rdi,QWORD PTR [rbp-0x10]
  408216:	mov    rsi,QWORD PTR [rbp-0x18]
  40821a:	mov    dx,WORD PTR [rbp-0x1a]
  40821e:	mov    rax,QWORD PTR [rbp-0x10]
  408222:	mov    ecx,DWORD PTR [rax+0x14]
  408225:	movzx  edx,dx
  408228:	call   4077e0 <flatcc_builder_create_cached_vtable@@Base>
  40822d:	mov    DWORD PTR [rbp-0x24],eax
  408230:	cmp    eax,0x0
  408233:	jne    408245 <flatcc_builder_end_table@@Base+0xf5>
  408239:	mov    DWORD PTR [rbp-0x4],0x0
  408240:	jmp    408365 <flatcc_builder_end_table@@Base+0x215>
  408245:	xor    esi,esi
  408247:	mov    rax,QWORD PTR [rbp-0x18]
  40824b:	movzx  ecx,WORD PTR [rbp-0x1a]
  40824f:	mov    edx,ecx
  408251:	mov    rdi,rax
  408254:	call   4030a0 <memset@plt>
  408259:	mov    rax,QWORD PTR [rbp-0x10]
  40825d:	mov    rax,QWORD PTR [rax+0x88]
  408264:	mov    rdx,QWORD PTR [rbp-0x10]
  408268:	mov    rdx,QWORD PTR [rdx+0x30]
  40826c:	mov    ecx,DWORD PTR [rdx+0x14]
  40826f:	mov    edx,ecx
  408271:	add    rax,rdx
  408274:	mov    QWORD PTR [rbp-0x30],rax
  408278:	mov    rax,QWORD PTR [rbp-0x10]
  40827c:	mov    rax,QWORD PTR [rax]
  40827f:	mov    rdx,QWORD PTR [rbp-0x30]
  408283:	sub    rax,rdx
  408286:	sar    rax,0x1
  40828a:	mov    ecx,eax
  40828c:	mov    DWORD PTR [rbp-0x28],ecx
  40828f:	mov    rdi,QWORD PTR [rbp-0x10]
  408293:	mov    rax,QWORD PTR [rbp-0x10]
  408297:	mov    rsi,QWORD PTR [rax+0x18]
  40829b:	mov    rax,QWORD PTR [rbp-0x10]
  40829f:	mov    ecx,DWORD PTR [rax+0x20]
  4082a2:	mov    edx,ecx
  4082a4:	mov    rax,QWORD PTR [rbp-0x10]
  4082a8:	mov    r8w,WORD PTR [rax+0xea]
  4082b0:	mov    rax,QWORD PTR [rbp-0x30]
  4082b4:	mov    r9d,DWORD PTR [rbp-0x28]
  4082b8:	mov    ecx,DWORD PTR [rbp-0x24]
  4082bb:	movzx  r10d,r8w
  4082bf:	mov    DWORD PTR [rbp-0x34],ecx
  4082c2:	mov    ecx,r10d
  4082c5:	mov    r8,rax
  4082c8:	mov    r10d,DWORD PTR [rbp-0x34]
  4082cc:	mov    DWORD PTR [rsp],r10d
  4082d0:	call   407ba0 <flatcc_builder_create_table@@Base>
  4082d5:	xor    ecx,ecx
  4082d7:	mov    DWORD PTR [rbp-0x20],eax
  4082da:	cmp    ecx,eax
  4082dc:	jne    4082ee <flatcc_builder_end_table@@Base+0x19e>
  4082e2:	mov    DWORD PTR [rbp-0x4],0x0
  4082e9:	jmp    408365 <flatcc_builder_end_table@@Base+0x215>
  4082ee:	mov    rax,QWORD PTR [rbp-0x10]
  4082f2:	mov    rax,QWORD PTR [rax+0x30]
  4082f6:	mov    ecx,DWORD PTR [rax+0x18]
  4082f9:	mov    rax,QWORD PTR [rbp-0x10]
  4082fd:	mov    DWORD PTR [rax+0x14],ecx
  408300:	mov    rax,QWORD PTR [rbp-0x10]
  408304:	mov    rax,QWORD PTR [rax+0x30]
  408308:	mov    dx,WORD PTR [rax+0x1c]
  40830c:	mov    rax,QWORD PTR [rbp-0x10]
  408310:	mov    WORD PTR [rax+0x10],dx
  408314:	mov    rax,QWORD PTR [rbp-0x10]
  408318:	mov    rax,QWORD PTR [rax+0x58]
  40831c:	mov    rsi,QWORD PTR [rbp-0x10]
  408320:	mov    rsi,QWORD PTR [rsi+0x30]
  408324:	mov    ecx,DWORD PTR [rsi+0x10]
  408327:	mov    esi,ecx
  408329:	add    rax,rsi
  40832c:	mov    rsi,QWORD PTR [rbp-0x10]
  408330:	mov    QWORD PTR [rsi+0x8],rax
  408334:	mov    rax,QWORD PTR [rbp-0x10]
  408338:	mov    rax,QWORD PTR [rax+0x88]
  40833f:	mov    rsi,QWORD PTR [rbp-0x10]
  408343:	mov    rsi,QWORD PTR [rsi+0x30]
  408347:	mov    ecx,DWORD PTR [rsi+0x14]
  40834a:	mov    esi,ecx
  40834c:	add    rax,rsi
  40834f:	mov    rsi,QWORD PTR [rbp-0x10]
  408353:	mov    QWORD PTR [rsi],rax
  408356:	mov    rdi,QWORD PTR [rbp-0x10]
  40835a:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  40835f:	mov    ecx,DWORD PTR [rbp-0x20]
  408362:	mov    DWORD PTR [rbp-0x4],ecx
  408365:	mov    eax,DWORD PTR [rbp-0x4]
  408368:	add    rsp,0x40
  40836c:	pop    rbp
  40836d:	ret    
  40836e:	xchg   ax,ax

0000000000408370 <flatcc_builder_create_vector@@Base>:
  408370:	push   rbp
  408371:	mov    rbp,rsp
  408374:	sub    rsp,0xe0
  40837b:	mov    ax,r8w
  40837f:	mov    QWORD PTR [rbp-0x10],rdi
  408383:	mov    QWORD PTR [rbp-0x18],rsi
  408387:	mov    QWORD PTR [rbp-0x20],rdx
  40838b:	mov    QWORD PTR [rbp-0x28],rcx
  40838f:	mov    WORD PTR [rbp-0x2a],ax
  408393:	mov    QWORD PTR [rbp-0x38],r9
  408397:	mov    rcx,QWORD PTR [rbp-0x20]
  40839b:	cmp    rcx,QWORD PTR [rbp-0x38]
  40839f:	jbe    4083e3 <flatcc_builder_create_vector@@Base+0x73>
  4083a5:	mov    rax,QWORD PTR [rbp-0x20]
  4083a9:	cmp    rax,QWORD PTR [rbp-0x38]
  4083ad:	ja     4083b8 <flatcc_builder_create_vector@@Base+0x48>
  4083b3:	jmp    4083d7 <flatcc_builder_create_vector@@Base+0x67>
  4083b8:	lea    rdi,[rip+0x4f6c]        # 40d32b <flatcc_builder_padding_base@@Base+0xbab>
  4083bf:	lea    rsi,[rip+0x45cc]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4083c6:	mov    edx,0x555
  4083cb:	lea    rcx,[rip+0x4f6c]        # 40d33e <flatcc_builder_padding_base@@Base+0xbbe>
  4083d2:	call   403090 <__assert_fail@plt>
  4083d7:	mov    DWORD PTR [rbp-0x4],0x0
  4083de:	jmp    408590 <flatcc_builder_create_vector@@Base+0x220>
  4083e3:	lea    rdi,[rbp-0x2a]
  4083e7:	mov    esi,0x4
  4083ec:	call   407110 <flatcc_builder_start_vector@@Base+0xb0>
  4083f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4083f5:	movzx  esi,WORD PTR [rbp-0x2a]
  4083f9:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  4083fe:	mov    rdi,QWORD PTR [rbp-0x20]
  408402:	mov    esi,edi
  408404:	mov    rdi,QWORD PTR [rbp-0x28]
  408408:	mov    eax,edi
  40840a:	imul   esi,eax
  40840d:	mov    DWORD PTR [rbp-0x3c],esi
  408410:	mov    rdi,QWORD PTR [rbp-0x20]
  408414:	mov    eax,edi
  408416:	mov    edi,eax
  408418:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  40841d:	mov    DWORD PTR [rbp-0x44],eax
  408420:	mov    rdi,QWORD PTR [rbp-0x10]
  408424:	mov    esi,DWORD PTR [rbp-0x3c]
  408427:	movzx  edx,WORD PTR [rbp-0x2a]
  40842b:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  408430:	mov    DWORD PTR [rbp-0x40],eax
  408433:	mov    QWORD PTR [rbp-0xd8],0x0
  40843e:	mov    DWORD PTR [rbp-0xd0],0x0
  408448:	mov    rdi,QWORD PTR [rbp-0xd8]
  40844f:	add    rdi,0x4
  408453:	mov    QWORD PTR [rbp-0xd8],rdi
  40845a:	lea    rdi,[rbp-0x44]
  40845e:	lea    rcx,[rbp-0xd8]
  408465:	mov    r8,rcx
  408468:	add    r8,0x10
  40846c:	movsxd r9,DWORD PTR [rbp-0xd0]
  408473:	shl    r9,0x4
  408477:	add    r8,r9
  40847a:	mov    QWORD PTR [r8],rdi
  40847d:	add    rcx,0x10
  408481:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408488:	shl    rdi,0x4
  40848c:	add    rcx,rdi
  40848f:	mov    QWORD PTR [rcx+0x8],0x4
  408497:	mov    eax,DWORD PTR [rbp-0xd0]
  40849d:	add    eax,0x1
  4084a0:	mov    DWORD PTR [rbp-0xd0],eax
  4084a6:	cmp    DWORD PTR [rbp-0x3c],0x0
  4084aa:	jbe    408510 <flatcc_builder_create_vector@@Base+0x1a0>
  4084b0:	mov    eax,DWORD PTR [rbp-0x3c]
  4084b3:	mov    ecx,eax
  4084b5:	add    rcx,QWORD PTR [rbp-0xd8]
  4084bc:	mov    QWORD PTR [rbp-0xd8],rcx
  4084c3:	mov    rcx,QWORD PTR [rbp-0x18]
  4084c7:	lea    rdx,[rbp-0xd8]
  4084ce:	mov    rsi,rdx
  4084d1:	add    rsi,0x10
  4084d5:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4084dc:	shl    rdi,0x4
  4084e0:	add    rsi,rdi
  4084e3:	mov    QWORD PTR [rsi],rcx
  4084e6:	mov    eax,DWORD PTR [rbp-0x3c]
  4084e9:	mov    ecx,eax
  4084eb:	add    rdx,0x10
  4084ef:	movsxd rsi,DWORD PTR [rbp-0xd0]
  4084f6:	shl    rsi,0x4
  4084fa:	add    rdx,rsi
  4084fd:	mov    QWORD PTR [rdx+0x8],rcx
  408501:	mov    eax,DWORD PTR [rbp-0xd0]
  408507:	add    eax,0x1
  40850a:	mov    DWORD PTR [rbp-0xd0],eax
  408510:	cmp    DWORD PTR [rbp-0x40],0x0
  408514:	jbe    40857d <flatcc_builder_create_vector@@Base+0x20d>
  40851a:	lea    rax,[rip+0x425f]        # 40c780 <flatcc_builder_padding_base@@Base>
  408521:	mov    ecx,DWORD PTR [rbp-0x40]
  408524:	mov    edx,ecx
  408526:	add    rdx,QWORD PTR [rbp-0xd8]
  40852d:	mov    QWORD PTR [rbp-0xd8],rdx
  408534:	lea    rdx,[rbp-0xd8]
  40853b:	mov    rsi,rdx
  40853e:	add    rsi,0x10
  408542:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408549:	shl    rdi,0x4
  40854d:	add    rsi,rdi
  408550:	mov    QWORD PTR [rsi],rax
  408553:	mov    ecx,DWORD PTR [rbp-0x40]
  408556:	mov    eax,ecx
  408558:	add    rdx,0x10
  40855c:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408563:	shl    rsi,0x4
  408567:	add    rdx,rsi
  40856a:	mov    QWORD PTR [rdx+0x8],rax
  40856e:	mov    ecx,DWORD PTR [rbp-0xd0]
  408574:	add    ecx,0x1
  408577:	mov    DWORD PTR [rbp-0xd0],ecx
  40857d:	mov    rdi,QWORD PTR [rbp-0x10]
  408581:	lea    rsi,[rbp-0xd8]
  408588:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  40858d:	mov    DWORD PTR [rbp-0x4],eax
  408590:	mov    eax,DWORD PTR [rbp-0x4]
  408593:	add    rsp,0xe0
  40859a:	pop    rbp
  40859b:	ret    
  40859c:	nop    DWORD PTR [rax+0x0]

00000000004085a0 <flatcc_builder_end_vector@@Base>:
  4085a0:	push   rbp
  4085a1:	mov    rbp,rsp
  4085a4:	sub    rsp,0x20
  4085a8:	mov    QWORD PTR [rbp-0x10],rdi
  4085ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4085b0:	mov    rdi,QWORD PTR [rdi+0x30]
  4085b4:	movzx  eax,WORD PTR [rdi+0xe]
  4085b8:	cmp    eax,0x4
  4085bb:	jne    4085c6 <flatcc_builder_end_vector@@Base+0x26>
  4085c1:	jmp    4085e5 <flatcc_builder_end_vector@@Base+0x45>
  4085c6:	lea    rdi,[rip+0x4702]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  4085cd:	lea    rsi,[rip+0x43be]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4085d4:	mov    edx,0x578
  4085d9:	lea    rcx,[rip+0x4dd4]        # 40d3b4 <flatcc_builder_padding_base@@Base+0xc34>
  4085e0:	call   403090 <__assert_fail@plt>
  4085e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4085e9:	mov    rax,QWORD PTR [rbp-0x10]
  4085ed:	mov    rsi,QWORD PTR [rax+0x18]
  4085f1:	mov    rax,QWORD PTR [rbp-0x10]
  4085f5:	mov    rax,QWORD PTR [rax+0x30]
  4085f9:	mov    ecx,DWORD PTR [rax+0x14]
  4085fc:	mov    edx,ecx
  4085fe:	mov    rax,QWORD PTR [rbp-0x10]
  408602:	mov    rax,QWORD PTR [rax+0x30]
  408606:	mov    ecx,DWORD PTR [rax+0x10]
  408609:	mov    rax,QWORD PTR [rbp-0x10]
  40860d:	mov    r8w,WORD PTR [rax+0xea]
  408615:	mov    rax,QWORD PTR [rbp-0x10]
  408619:	mov    rax,QWORD PTR [rax+0x30]
  40861d:	mov    r9d,DWORD PTR [rax+0x18]
  408621:	movzx  r8d,r8w
  408625:	call   408370 <flatcc_builder_create_vector@@Base>
  40862a:	xor    r8d,r8d
  40862d:	mov    DWORD PTR [rbp-0x14],eax
  408630:	cmp    r8d,eax
  408633:	jne    408645 <flatcc_builder_end_vector@@Base+0xa5>
  408639:	mov    DWORD PTR [rbp-0x4],0x0
  408640:	jmp    408654 <flatcc_builder_end_vector@@Base+0xb4>
  408645:	mov    rdi,QWORD PTR [rbp-0x10]
  408649:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  40864e:	mov    eax,DWORD PTR [rbp-0x14]
  408651:	mov    DWORD PTR [rbp-0x4],eax
  408654:	mov    eax,DWORD PTR [rbp-0x4]
  408657:	add    rsp,0x20
  40865b:	pop    rbp
  40865c:	ret    
  40865d:	nop    DWORD PTR [rax]

0000000000408660 <flatcc_builder_vector_count@@Base>:
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	mov    QWORD PTR [rbp-0x8],rdi
  408668:	mov    rdi,QWORD PTR [rbp-0x8]
  40866c:	mov    rdi,QWORD PTR [rdi+0x30]
  408670:	mov    eax,DWORD PTR [rdi+0x14]
  408673:	pop    rbp
  408674:	ret    
  408675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40867f:	nop

0000000000408680 <flatcc_builder_vector_edit@@Base>:
  408680:	push   rbp
  408681:	mov    rbp,rsp
  408684:	mov    QWORD PTR [rbp-0x8],rdi
  408688:	mov    rdi,QWORD PTR [rbp-0x8]
  40868c:	mov    rax,QWORD PTR [rdi+0x18]
  408690:	pop    rbp
  408691:	ret    
  408692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40869c:	nop    DWORD PTR [rax+0x0]

00000000004086a0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4086a0:	push   rbp
  4086a1:	mov    rbp,rsp
  4086a4:	sub    rsp,0x20
  4086a8:	xor    eax,eax
  4086aa:	mov    ecx,eax
  4086ac:	mov    QWORD PTR [rbp-0x8],rdi
  4086b0:	mov    QWORD PTR [rbp-0x10],rsi
  4086b4:	mov    QWORD PTR [rbp-0x18],rdx
  4086b8:	mov    rdi,QWORD PTR [rbp-0x8]
  4086bc:	mov    rsi,QWORD PTR [rbp-0x10]
  4086c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4086c4:	call   4086d0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  4086c9:	add    rsp,0x20
  4086cd:	pop    rbp
  4086ce:	ret    
  4086cf:	nop
  4086d0:	push   rbp
  4086d1:	mov    rbp,rsp
  4086d4:	sub    rsp,0xd0
  4086db:	mov    QWORD PTR [rbp-0x10],rdi
  4086df:	mov    QWORD PTR [rbp-0x18],rsi
  4086e3:	mov    QWORD PTR [rbp-0x20],rdx
  4086e7:	mov    QWORD PTR [rbp-0x28],rcx
  4086eb:	mov    rcx,QWORD PTR [rbp-0x20]
  4086ef:	mov    eax,ecx
  4086f1:	mov    eax,eax
  4086f3:	mov    ecx,eax
  4086f5:	cmp    rcx,0x3fffffff
  4086fc:	jbe    40870e <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  408702:	mov    DWORD PTR [rbp-0x4],0x0
  408709:	jmp    4089ff <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  40870e:	mov    rdi,QWORD PTR [rbp-0x10]
  408712:	mov    esi,0x4
  408717:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  40871c:	mov    rdi,QWORD PTR [rbp-0x20]
  408720:	mov    esi,edi
  408722:	mov    esi,esi
  408724:	mov    edi,esi
  408726:	shl    rdi,0x2
  40872a:	mov    esi,edi
  40872c:	mov    DWORD PTR [rbp-0x2c],esi
  40872f:	mov    rdi,QWORD PTR [rbp-0x20]
  408733:	mov    esi,edi
  408735:	mov    edi,esi
  408737:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  40873c:	mov    DWORD PTR [rbp-0x34],eax
  40873f:	mov    rdi,QWORD PTR [rbp-0x10]
  408743:	mov    esi,DWORD PTR [rbp-0x2c]
  408746:	mov    edx,0x4
  40874b:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  408750:	mov    DWORD PTR [rbp-0x30],eax
  408753:	mov    QWORD PTR [rbp-0xd0],0x0
  40875e:	mov    DWORD PTR [rbp-0xc8],0x0
  408768:	mov    rdi,QWORD PTR [rbp-0xd0]
  40876f:	add    rdi,0x4
  408773:	mov    QWORD PTR [rbp-0xd0],rdi
  40877a:	lea    rdi,[rbp-0x34]
  40877e:	lea    rcx,[rbp-0xd0]
  408785:	mov    r8,rcx
  408788:	add    r8,0x10
  40878c:	movsxd r9,DWORD PTR [rbp-0xc8]
  408793:	shl    r9,0x4
  408797:	add    r8,r9
  40879a:	mov    QWORD PTR [r8],rdi
  40879d:	add    rcx,0x10
  4087a1:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4087a8:	shl    rdi,0x4
  4087ac:	add    rcx,rdi
  4087af:	mov    QWORD PTR [rcx+0x8],0x4
  4087b7:	mov    eax,DWORD PTR [rbp-0xc8]
  4087bd:	add    eax,0x1
  4087c0:	mov    DWORD PTR [rbp-0xc8],eax
  4087c6:	cmp    DWORD PTR [rbp-0x2c],0x0
  4087ca:	jbe    408830 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  4087d0:	mov    eax,DWORD PTR [rbp-0x2c]
  4087d3:	mov    ecx,eax
  4087d5:	add    rcx,QWORD PTR [rbp-0xd0]
  4087dc:	mov    QWORD PTR [rbp-0xd0],rcx
  4087e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4087e7:	lea    rdx,[rbp-0xd0]
  4087ee:	mov    rsi,rdx
  4087f1:	add    rsi,0x10
  4087f5:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4087fc:	shl    rdi,0x4
  408800:	add    rsi,rdi
  408803:	mov    QWORD PTR [rsi],rcx
  408806:	mov    eax,DWORD PTR [rbp-0x2c]
  408809:	mov    ecx,eax
  40880b:	add    rdx,0x10
  40880f:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408816:	shl    rsi,0x4
  40881a:	add    rdx,rsi
  40881d:	mov    QWORD PTR [rdx+0x8],rcx
  408821:	mov    eax,DWORD PTR [rbp-0xc8]
  408827:	add    eax,0x1
  40882a:	mov    DWORD PTR [rbp-0xc8],eax
  408830:	cmp    DWORD PTR [rbp-0x30],0x0
  408834:	jbe    40889d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  40883a:	lea    rax,[rip+0x3f3f]        # 40c780 <flatcc_builder_padding_base@@Base>
  408841:	mov    ecx,DWORD PTR [rbp-0x30]
  408844:	mov    edx,ecx
  408846:	add    rdx,QWORD PTR [rbp-0xd0]
  40884d:	mov    QWORD PTR [rbp-0xd0],rdx
  408854:	lea    rdx,[rbp-0xd0]
  40885b:	mov    rsi,rdx
  40885e:	add    rsi,0x10
  408862:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408869:	shl    rdi,0x4
  40886d:	add    rsi,rdi
  408870:	mov    QWORD PTR [rsi],rax
  408873:	mov    ecx,DWORD PTR [rbp-0x30]
  408876:	mov    eax,ecx
  408878:	add    rdx,0x10
  40887c:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408883:	shl    rsi,0x4
  408887:	add    rdx,rsi
  40888a:	mov    QWORD PTR [rdx+0x8],rax
  40888e:	mov    ecx,DWORD PTR [rbp-0xc8]
  408894:	add    ecx,0x1
  408897:	mov    DWORD PTR [rbp-0xc8],ecx
  40889d:	mov    rax,QWORD PTR [rbp-0x10]
  4088a1:	mov    ecx,DWORD PTR [rax+0xf0]
  4088a7:	mov    rax,QWORD PTR [rbp-0xd0]
  4088ae:	mov    edx,eax
  4088b0:	sub    ecx,edx
  4088b2:	mov    DWORD PTR [rbp-0x38],ecx
  4088b5:	mov    DWORD PTR [rbp-0x40],0x0
  4088bc:	mov    eax,DWORD PTR [rbp-0x40]
  4088bf:	mov    rcx,QWORD PTR [rbp-0x20]
  4088c3:	mov    edx,ecx
  4088c5:	cmp    eax,edx
  4088c7:	jae    4089ec <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  4088cd:	mov    rax,QWORD PTR [rbp-0x18]
  4088d1:	mov    ecx,DWORD PTR [rbp-0x40]
  4088d4:	mov    edx,ecx
  4088d6:	cmp    DWORD PTR [rax+rdx*4],0x0
  4088da:	je     40896b <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  4088e0:	mov    rax,QWORD PTR [rbp-0x18]
  4088e4:	mov    ecx,DWORD PTR [rbp-0x40]
  4088e7:	mov    edx,ecx
  4088e9:	mov    ecx,DWORD PTR [rax+rdx*4]
  4088ec:	sub    ecx,DWORD PTR [rbp-0x38]
  4088ef:	mov    ecx,ecx
  4088f1:	mov    eax,ecx
  4088f3:	mov    ecx,DWORD PTR [rbp-0x40]
  4088f6:	mov    edx,ecx
  4088f8:	shl    rdx,0x2
  4088fc:	sub    rax,rdx
  4088ff:	sub    rax,0x4
  408903:	mov    ecx,eax
  408905:	mov    DWORD PTR [rbp-0x3c],ecx
  408908:	mov    edi,DWORD PTR [rbp-0x3c]
  40890b:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  408910:	mov    rdx,QWORD PTR [rbp-0x18]
  408914:	mov    ecx,DWORD PTR [rbp-0x40]
  408917:	mov    esi,ecx
  408919:	mov    DWORD PTR [rdx+rsi*4],eax
  40891c:	cmp    QWORD PTR [rbp-0x28],0x0
  408921:	je     408966 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  408927:	mov    rax,QWORD PTR [rbp-0x28]
  40892b:	mov    ecx,DWORD PTR [rbp-0x40]
  40892e:	mov    edx,ecx
  408930:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408934:	cmp    ecx,0x0
  408937:	je     408942 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  40893d:	jmp    408961 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  408942:	lea    rdi,[rip+0x51fd]        # 40db46 <flatcc_builder_padding_base@@Base+0x13c6>
  408949:	lea    rsi,[rip+0x4042]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408950:	mov    edx,0x5b1
  408955:	lea    rcx,[rip+0x51f8]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  40895c:	call   403090 <__assert_fail@plt>
  408961:	jmp    408966 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  408966:	jmp    4089d9 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  40896b:	cmp    QWORD PTR [rbp-0x28],0x0
  408970:	je     4089b5 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  408976:	mov    rax,QWORD PTR [rbp-0x28]
  40897a:	mov    ecx,DWORD PTR [rbp-0x40]
  40897d:	mov    edx,ecx
  40897f:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408983:	cmp    ecx,0x0
  408986:	jne    408991 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  40898c:	jmp    4089b0 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  408991:	lea    rdi,[rip+0x523f]        # 40dbd7 <flatcc_builder_padding_base@@Base+0x1457>
  408998:	lea    rsi,[rip+0x3ff3]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40899f:	mov    edx,0x5b5
  4089a4:	lea    rcx,[rip+0x51a9]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  4089ab:	call   403090 <__assert_fail@plt>
  4089b0:	jmp    4089d4 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  4089b5:	lea    rdi,[rip+0x5196]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4089bc:	lea    rsi,[rip+0x3fcf]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4089c3:	mov    edx,0x5b7
  4089c8:	lea    rcx,[rip+0x5185]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  4089cf:	call   403090 <__assert_fail@plt>
  4089d4:	jmp    4089d9 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  4089d9:	jmp    4089de <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  4089de:	mov    eax,DWORD PTR [rbp-0x40]
  4089e1:	add    eax,0x1
  4089e4:	mov    DWORD PTR [rbp-0x40],eax
  4089e7:	jmp    4088bc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  4089ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4089f0:	lea    rsi,[rbp-0xd0]
  4089f7:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  4089fc:	mov    DWORD PTR [rbp-0x4],eax
  4089ff:	mov    eax,DWORD PTR [rbp-0x4]
  408a02:	add    rsp,0xd0
  408a09:	pop    rbp
  408a0a:	ret    
  408a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408a10 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408a10:	push   rbp
  408a11:	mov    rbp,rsp
  408a14:	sub    rsp,0x20
  408a18:	mov    QWORD PTR [rbp-0x10],rdi
  408a1c:	mov    QWORD PTR [rbp-0x18],rsi
  408a20:	mov    rsi,QWORD PTR [rbp-0x10]
  408a24:	mov    rsi,QWORD PTR [rsi+0x30]
  408a28:	movzx  eax,WORD PTR [rsi+0xe]
  408a2c:	cmp    eax,0x5
  408a2f:	jne    408a3a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  408a35:	jmp    408a59 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  408a3a:	lea    rdi,[rip+0x4387]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  408a41:	lea    rsi,[rip+0x3f4a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408a48:	mov    edx,0x5d5
  408a4d:	lea    rcx,[rip+0x49ed]        # 40d441 <flatcc_builder_padding_base@@Base+0xcc1>
  408a54:	call   403090 <__assert_fail@plt>
  408a59:	mov    rdi,QWORD PTR [rbp-0x10]
  408a5d:	mov    rax,QWORD PTR [rbp-0x10]
  408a61:	mov    rax,QWORD PTR [rax+0x18]
  408a65:	mov    rcx,QWORD PTR [rbp-0x10]
  408a69:	mov    rcx,QWORD PTR [rcx+0x30]
  408a6d:	mov    edx,DWORD PTR [rcx+0x14]
  408a70:	mov    rcx,QWORD PTR [rbp-0x18]
  408a74:	mov    rsi,rax
  408a77:	call   4086d0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408a7c:	xor    r8d,r8d
  408a7f:	mov    DWORD PTR [rbp-0x1c],eax
  408a82:	cmp    r8d,eax
  408a85:	jne    408a97 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  408a8b:	mov    DWORD PTR [rbp-0x4],0x0
  408a92:	jmp    408aa6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  408a97:	mov    rdi,QWORD PTR [rbp-0x10]
  408a9b:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  408aa0:	mov    eax,DWORD PTR [rbp-0x1c]
  408aa3:	mov    DWORD PTR [rbp-0x4],eax
  408aa6:	mov    eax,DWORD PTR [rbp-0x4]
  408aa9:	add    rsp,0x20
  408aad:	pop    rbp
  408aae:	ret    
  408aaf:	nop

0000000000408ab0 <flatcc_builder_offset_vector_edit@@Base>:
  408ab0:	push   rbp
  408ab1:	mov    rbp,rsp
  408ab4:	mov    QWORD PTR [rbp-0x8],rdi
  408ab8:	mov    rdi,QWORD PTR [rbp-0x8]
  408abc:	mov    rax,QWORD PTR [rdi+0x18]
  408ac0:	pop    rbp
  408ac1:	ret    
  408ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408acc:	nop    DWORD PTR [rax+0x0]

0000000000408ad0 <flatcc_builder_offset_vector_count@@Base>:
  408ad0:	push   rbp
  408ad1:	mov    rbp,rsp
  408ad4:	mov    QWORD PTR [rbp-0x8],rdi
  408ad8:	mov    rdi,QWORD PTR [rbp-0x8]
  408adc:	mov    rdi,QWORD PTR [rdi+0x30]
  408ae0:	mov    eax,DWORD PTR [rdi+0x14]
  408ae3:	pop    rbp
  408ae4:	ret    
  408ae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408aef:	nop

0000000000408af0 <flatcc_builder_table_add_union@@Base>:
  408af0:	push   rbp
  408af1:	mov    rbp,rsp
  408af4:	sub    rsp,0x30
  408af8:	mov    QWORD PTR [rbp-0x10],rdx
  408afc:	mov    QWORD PTR [rbp-0x18],rdi
  408b00:	mov    DWORD PTR [rbp-0x1c],esi
  408b03:	mov    rdx,QWORD PTR [rbp-0x18]
  408b07:	mov    rdx,QWORD PTR [rdx+0x30]
  408b0b:	movzx  esi,WORD PTR [rdx+0xe]
  408b0f:	cmp    esi,0x3
  408b12:	jne    408b1d <flatcc_builder_table_add_union@@Base+0x2d>
  408b18:	jmp    408b3c <flatcc_builder_table_add_union@@Base+0x4c>
  408b1d:	lea    rdi,[rip+0x469d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408b24:	lea    rsi,[rip+0x3e67]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408b2b:	mov    edx,0x5ee
  408b30:	lea    rcx,[rip+0x497c]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408b37:	call   403090 <__assert_fail@plt>
  408b3c:	movzx  eax,BYTE PTR [rbp-0x10]
  408b40:	cmp    eax,0x0
  408b43:	jne    408b9a <flatcc_builder_table_add_union@@Base+0xaa>
  408b49:	cmp    DWORD PTR [rbp-0xc],0x0
  408b4d:	je     408b9a <flatcc_builder_table_add_union@@Base+0xaa>
  408b53:	movzx  eax,BYTE PTR [rbp-0x10]
  408b57:	cmp    eax,0x0
  408b5a:	jne    408b6a <flatcc_builder_table_add_union@@Base+0x7a>
  408b60:	cmp    DWORD PTR [rbp-0xc],0x0
  408b64:	jne    408b6f <flatcc_builder_table_add_union@@Base+0x7f>
  408b6a:	jmp    408b8e <flatcc_builder_table_add_union@@Base+0x9e>
  408b6f:	lea    rdi,[rip+0x4995]        # 40d50b <flatcc_builder_padding_base@@Base+0xd8b>
  408b76:	lea    rsi,[rip+0x3e15]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408b7d:	mov    edx,0x5ef
  408b82:	lea    rcx,[rip+0x492a]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408b89:	call   403090 <__assert_fail@plt>
  408b8e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408b95:	jmp    408c80 <flatcc_builder_table_add_union@@Base+0x190>
  408b9a:	cmp    DWORD PTR [rbp-0xc],0x0
  408b9e:	je     408c03 <flatcc_builder_table_add_union@@Base+0x113>
  408ba4:	mov    rdi,QWORD PTR [rbp-0x18]
  408ba8:	mov    esi,DWORD PTR [rbp-0x1c]
  408bab:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  408bb0:	mov    QWORD PTR [rbp-0x28],rax
  408bb4:	cmp    QWORD PTR [rbp-0x28],0x0
  408bb9:	jne    408bfa <flatcc_builder_table_add_union@@Base+0x10a>
  408bbf:	cmp    QWORD PTR [rbp-0x28],0x0
  408bc4:	je     408bcf <flatcc_builder_table_add_union@@Base+0xdf>
  408bca:	jmp    408bee <flatcc_builder_table_add_union@@Base+0xfe>
  408bcf:	lea    rdi,[rip+0x4957]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  408bd6:	lea    rsi,[rip+0x3db5]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408bdd:	mov    edx,0x5f2
  408be2:	lea    rcx,[rip+0x48ca]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408be9:	call   403090 <__assert_fail@plt>
  408bee:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408bf5:	jmp    408c80 <flatcc_builder_table_add_union@@Base+0x190>
  408bfa:	mov    eax,DWORD PTR [rbp-0xc]
  408bfd:	mov    rcx,QWORD PTR [rbp-0x28]
  408c01:	mov    DWORD PTR [rcx],eax
  408c03:	mov    eax,0x1
  408c08:	mov    edx,eax
  408c0a:	mov    rdi,QWORD PTR [rbp-0x18]
  408c0e:	mov    eax,DWORD PTR [rbp-0x1c]
  408c11:	sub    eax,0x1
  408c14:	mov    esi,eax
  408c16:	mov    ecx,0x1
  408c1b:	call   408d90 <flatcc_builder_table_add@@Base>
  408c20:	mov    QWORD PTR [rbp-0x30],rax
  408c24:	cmp    QWORD PTR [rbp-0x30],0x0
  408c29:	jne    408c6a <flatcc_builder_table_add_union@@Base+0x17a>
  408c2f:	cmp    QWORD PTR [rbp-0x30],0x0
  408c34:	je     408c3f <flatcc_builder_table_add_union@@Base+0x14f>
  408c3a:	jmp    408c5e <flatcc_builder_table_add_union@@Base+0x16e>
  408c3f:	lea    rdi,[rip+0x48f1]        # 40d537 <flatcc_builder_padding_base@@Base+0xdb7>
  408c46:	lea    rsi,[rip+0x3d45]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408c4d:	mov    edx,0x5f6
  408c52:	lea    rcx,[rip+0x485a]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408c59:	call   403090 <__assert_fail@plt>
  408c5e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c65:	jmp    408c80 <flatcc_builder_table_add_union@@Base+0x190>
  408c6a:	movzx  edi,BYTE PTR [rbp-0x10]
  408c6e:	call   408ee0 <flatcc_builder_table_add@@Base+0x150>
  408c73:	mov    rcx,QWORD PTR [rbp-0x30]
  408c77:	mov    BYTE PTR [rcx],al
  408c79:	mov    DWORD PTR [rbp-0x4],0x0
  408c80:	mov    eax,DWORD PTR [rbp-0x4]
  408c83:	add    rsp,0x30
  408c87:	pop    rbp
  408c88:	ret    
  408c89:	nop    DWORD PTR [rax+0x0]

0000000000408c90 <flatcc_builder_table_add_offset@@Base>:
  408c90:	push   rbp
  408c91:	mov    rbp,rsp
  408c94:	sub    rsp,0x10
  408c98:	mov    QWORD PTR [rbp-0x8],rdi
  408c9c:	mov    DWORD PTR [rbp-0xc],esi
  408c9f:	mov    rdi,QWORD PTR [rbp-0x8]
  408ca3:	mov    rdi,QWORD PTR [rdi+0x30]
  408ca7:	movzx  esi,WORD PTR [rdi+0xe]
  408cab:	cmp    esi,0x3
  408cae:	jne    408cb9 <flatcc_builder_table_add_offset@@Base+0x29>
  408cb4:	jmp    408cd8 <flatcc_builder_table_add_offset@@Base+0x48>
  408cb9:	lea    rdi,[rip+0x4501]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408cc0:	lea    rsi,[rip+0x3ccb]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408cc7:	mov    edx,0x713
  408ccc:	lea    rcx,[rip+0x4be2]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408cd3:	call   403090 <__assert_fail@plt>
  408cd8:	cmp    DWORD PTR [rbp-0xc],0x0
  408cdc:	jl     408cf4 <flatcc_builder_table_add_offset@@Base+0x64>
  408ce2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408ce9:	jg     408cf4 <flatcc_builder_table_add_offset@@Base+0x64>
  408cef:	jmp    408d13 <flatcc_builder_table_add_offset@@Base+0x83>
  408cf4:	lea    rdi,[rip+0x4b3a]        # 40d835 <flatcc_builder_padding_base@@Base+0x10b5>
  408cfb:	lea    rsi,[rip+0x3c90]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408d02:	mov    edx,0x714
  408d07:	lea    rcx,[rip+0x4ba7]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408d0e:	call   403090 <__assert_fail@plt>
  408d13:	mov    rax,QWORD PTR [rbp-0x8]
  408d17:	mov    rax,QWORD PTR [rax+0x8]
  408d1b:	movsxd rcx,DWORD PTR [rbp-0xc]
  408d1f:	movzx  edx,WORD PTR [rax+rcx*2]
  408d23:	cmp    edx,0x0
  408d26:	je     408d4b <flatcc_builder_table_add_offset@@Base+0xbb>
  408d2c:	lea    rdi,[rip+0x4e1f]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  408d33:	lea    rsi,[rip+0x3c58]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408d3a:	mov    edx,0x71b
  408d3f:	lea    rcx,[rip+0x4b6f]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408d46:	call   403090 <__assert_fail@plt>
  408d4b:	mov    eax,DWORD PTR [rbp-0xc]
  408d4e:	mov    rcx,QWORD PTR [rbp-0x8]
  408d52:	xor    eax,DWORD PTR [rcx+0x14]
  408d55:	imul   eax,eax,0x9e3779b1
  408d5b:	xor    eax,0x4
  408d5e:	imul   eax,eax,0x9e3779b1
  408d64:	mov    rcx,QWORD PTR [rbp-0x8]
  408d68:	mov    DWORD PTR [rcx+0x14],eax
  408d6b:	mov    rdi,QWORD PTR [rbp-0x8]
  408d6f:	mov    eax,DWORD PTR [rbp-0xc]
  408d72:	mov    dx,ax
  408d75:	movzx  esi,dx
  408d78:	call   409cb0 <flatcc_builder_table_add_copy@@Base+0x60>
  408d7d:	add    rsp,0x10
  408d81:	pop    rbp
  408d82:	ret    
  408d83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d8d:	nop    DWORD PTR [rax]

0000000000408d90 <flatcc_builder_table_add@@Base>:
  408d90:	push   rbp
  408d91:	mov    rbp,rsp
  408d94:	sub    rsp,0x20
  408d98:	mov    ax,cx
  408d9b:	mov    QWORD PTR [rbp-0x8],rdi
  408d9f:	mov    DWORD PTR [rbp-0xc],esi
  408da2:	mov    QWORD PTR [rbp-0x18],rdx
  408da6:	mov    WORD PTR [rbp-0x1a],ax
  408daa:	mov    rdx,QWORD PTR [rbp-0x8]
  408dae:	mov    rdx,QWORD PTR [rdx+0x30]
  408db2:	movzx  ecx,WORD PTR [rdx+0xe]
  408db6:	cmp    ecx,0x3
  408db9:	jne    408dc4 <flatcc_builder_table_add@@Base+0x34>
  408dbf:	jmp    408de3 <flatcc_builder_table_add@@Base+0x53>
  408dc4:	lea    rdi,[rip+0x43f6]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408dcb:	lea    rsi,[rip+0x3bc0]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408dd2:	mov    edx,0x6ed
  408dd7:	lea    rcx,[rip+0x4a0d]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408dde:	call   403090 <__assert_fail@plt>
  408de3:	cmp    DWORD PTR [rbp-0xc],0x0
  408de7:	jl     408dff <flatcc_builder_table_add@@Base+0x6f>
  408ded:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408df4:	jg     408dff <flatcc_builder_table_add@@Base+0x6f>
  408dfa:	jmp    408e1e <flatcc_builder_table_add@@Base+0x8e>
  408dff:	lea    rdi,[rip+0x4a2f]        # 40d835 <flatcc_builder_padding_base@@Base+0x10b5>
  408e06:	lea    rsi,[rip+0x3b85]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408e0d:	mov    edx,0x6ee
  408e12:	lea    rcx,[rip+0x49d2]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408e19:	call   403090 <__assert_fail@plt>
  408e1e:	movzx  eax,WORD PTR [rbp-0x1a]
  408e22:	mov    rcx,QWORD PTR [rbp-0x8]
  408e26:	movzx  edx,WORD PTR [rcx+0xea]
  408e2d:	cmp    eax,edx
  408e2f:	jle    408e44 <flatcc_builder_table_add@@Base+0xb4>
  408e35:	mov    ax,WORD PTR [rbp-0x1a]
  408e39:	mov    rcx,QWORD PTR [rbp-0x8]
  408e3d:	mov    WORD PTR [rcx+0xea],ax
  408e44:	mov    rax,QWORD PTR [rbp-0x8]
  408e48:	mov    rax,QWORD PTR [rax+0x8]
  408e4c:	movsxd rcx,DWORD PTR [rbp-0xc]
  408e50:	movzx  edx,WORD PTR [rax+rcx*2]
  408e54:	cmp    edx,0x0
  408e57:	je     408e7c <flatcc_builder_table_add@@Base+0xec>
  408e5d:	lea    rdi,[rip+0x4cee]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  408e64:	lea    rsi,[rip+0x3b27]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408e6b:	mov    edx,0x6f8
  408e70:	lea    rcx,[rip+0x4974]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408e77:	call   403090 <__assert_fail@plt>
  408e7c:	mov    eax,DWORD PTR [rbp-0xc]
  408e7f:	mov    rcx,QWORD PTR [rbp-0x8]
  408e83:	xor    eax,DWORD PTR [rcx+0x14]
  408e86:	imul   eax,eax,0x9e3779b1
  408e8c:	mov    rcx,QWORD PTR [rbp-0x18]
  408e90:	mov    edx,ecx
  408e92:	xor    eax,edx
  408e94:	imul   eax,eax,0x9e3779b1
  408e9a:	mov    rcx,QWORD PTR [rbp-0x8]
  408e9e:	mov    DWORD PTR [rcx+0x14],eax
  408ea1:	mov    rdi,QWORD PTR [rbp-0x8]
  408ea5:	mov    rcx,QWORD PTR [rbp-0x18]
  408ea9:	mov    eax,ecx
  408eab:	mov    si,WORD PTR [rbp-0x1a]
  408eaf:	mov    edx,DWORD PTR [rbp-0xc]
  408eb2:	mov    r8w,dx
  408eb6:	mov    WORD PTR [rbp-0x1c],si
  408eba:	mov    esi,eax
  408ebc:	mov    r9w,WORD PTR [rbp-0x1c]
  408ec1:	movzx  edx,r9w
  408ec5:	movzx  ecx,r8w
  408ec9:	call   409ad0 <flatcc_builder_string_len@@Base+0x20>
  408ece:	add    rsp,0x20
  408ed2:	pop    rbp
  408ed3:	ret    
  408ed4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ede:	xchg   ax,ax
  408ee0:	push   rbp
  408ee1:	mov    rbp,rsp
  408ee4:	mov    al,dil
  408ee7:	mov    BYTE PTR [rbp-0x1],al
  408eea:	movzx  eax,BYTE PTR [rbp-0x1]
  408eee:	pop    rbp
  408eef:	ret    

0000000000408ef0 <flatcc_builder_table_add_union_vector@@Base>:
  408ef0:	push   rbp
  408ef1:	mov    rbp,rsp
  408ef4:	sub    rsp,0x30
  408ef8:	mov    QWORD PTR [rbp-0x10],rdx
  408efc:	mov    QWORD PTR [rbp-0x18],rdi
  408f00:	mov    DWORD PTR [rbp-0x1c],esi
  408f03:	mov    rdx,QWORD PTR [rbp-0x18]
  408f07:	mov    rdx,QWORD PTR [rdx+0x30]
  408f0b:	movzx  esi,WORD PTR [rdx+0xe]
  408f0f:	cmp    esi,0x3
  408f12:	jne    408f1d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  408f18:	jmp    408f3c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  408f1d:	lea    rdi,[rip+0x429d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408f24:	lea    rsi,[rip+0x3a67]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408f2b:	mov    edx,0x600
  408f30:	lea    rcx,[rip+0x460c]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408f37:	call   403090 <__assert_fail@plt>
  408f3c:	cmp    DWORD PTR [rbp-0x10],0x0
  408f40:	sete   al
  408f43:	and    al,0x1
  408f45:	movzx  ecx,al
  408f48:	cmp    DWORD PTR [rbp-0xc],0x0
  408f4c:	sete   al
  408f4f:	and    al,0x1
  408f51:	movzx  edx,al
  408f54:	cmp    ecx,edx
  408f56:	je     408fac <flatcc_builder_table_add_union_vector@@Base+0xbc>
  408f5c:	cmp    DWORD PTR [rbp-0x10],0x0
  408f60:	sete   al
  408f63:	and    al,0x1
  408f65:	movzx  ecx,al
  408f68:	cmp    DWORD PTR [rbp-0xc],0x0
  408f6c:	sete   al
  408f6f:	and    al,0x1
  408f71:	movzx  edx,al
  408f74:	cmp    ecx,edx
  408f76:	jne    408f81 <flatcc_builder_table_add_union_vector@@Base+0x91>
  408f7c:	jmp    408fa0 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  408f81:	lea    rdi,[rip+0x461e]        # 40d5a6 <flatcc_builder_padding_base@@Base+0xe26>
  408f88:	lea    rsi,[rip+0x3a03]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408f8f:	mov    edx,0x601
  408f94:	lea    rcx,[rip+0x45a8]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408f9b:	call   403090 <__assert_fail@plt>
  408fa0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408fa7:	jmp    409080 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408fac:	cmp    DWORD PTR [rbp-0x10],0x0
  408fb0:	je     409079 <flatcc_builder_table_add_union_vector@@Base+0x189>
  408fb6:	mov    rdi,QWORD PTR [rbp-0x18]
  408fba:	mov    eax,DWORD PTR [rbp-0x1c]
  408fbd:	sub    eax,0x1
  408fc0:	mov    esi,eax
  408fc2:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  408fc7:	mov    QWORD PTR [rbp-0x28],rax
  408fcb:	cmp    QWORD PTR [rbp-0x28],0x0
  408fd0:	jne    409011 <flatcc_builder_table_add_union_vector@@Base+0x121>
  408fd6:	cmp    QWORD PTR [rbp-0x28],0x0
  408fdb:	je     408fe6 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  408fe1:	jmp    409005 <flatcc_builder_table_add_union_vector@@Base+0x115>
  408fe6:	lea    rdi,[rip+0x4540]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  408fed:	lea    rsi,[rip+0x399e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408ff4:	mov    edx,0x604
  408ff9:	lea    rcx,[rip+0x4543]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  409000:	call   403090 <__assert_fail@plt>
  409005:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40900c:	jmp    409080 <flatcc_builder_table_add_union_vector@@Base+0x190>
  409011:	mov    eax,DWORD PTR [rbp-0x10]
  409014:	mov    rcx,QWORD PTR [rbp-0x28]
  409018:	mov    DWORD PTR [rcx],eax
  40901a:	mov    rdi,QWORD PTR [rbp-0x18]
  40901e:	mov    esi,DWORD PTR [rbp-0x1c]
  409021:	call   408c90 <flatcc_builder_table_add_offset@@Base>
  409026:	mov    QWORD PTR [rbp-0x28],rax
  40902a:	cmp    QWORD PTR [rbp-0x28],0x0
  40902f:	jne    409070 <flatcc_builder_table_add_union_vector@@Base+0x180>
  409035:	cmp    QWORD PTR [rbp-0x28],0x0
  40903a:	je     409045 <flatcc_builder_table_add_union_vector@@Base+0x155>
  409040:	jmp    409064 <flatcc_builder_table_add_union_vector@@Base+0x174>
  409045:	lea    rdi,[rip+0x44e1]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  40904c:	lea    rsi,[rip+0x393f]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409053:	mov    edx,0x608
  409058:	lea    rcx,[rip+0x44e4]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  40905f:	call   403090 <__assert_fail@plt>
  409064:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40906b:	jmp    409080 <flatcc_builder_table_add_union_vector@@Base+0x190>
  409070:	mov    eax,DWORD PTR [rbp-0xc]
  409073:	mov    rcx,QWORD PTR [rbp-0x28]
  409077:	mov    DWORD PTR [rcx],eax
  409079:	mov    DWORD PTR [rbp-0x4],0x0
  409080:	mov    eax,DWORD PTR [rbp-0x4]
  409083:	add    rsp,0x30
  409087:	pop    rbp
  409088:	ret    
  409089:	nop    DWORD PTR [rax+0x0]

0000000000409090 <flatcc_builder_create_union_vector@@Base>:
  409090:	push   rbp
  409091:	mov    rbp,rsp
  409094:	sub    rsp,0x40
  409098:	xor    eax,eax
  40909a:	mov    ecx,0x8
  40909f:	mov    r8d,ecx
  4090a2:	mov    QWORD PTR [rbp-0x10],rdi
  4090a6:	mov    QWORD PTR [rbp-0x18],rsi
  4090aa:	mov    QWORD PTR [rbp-0x20],rdx
  4090ae:	lea    rdx,[rbp-0x8]
  4090b2:	mov    rdi,rdx
  4090b5:	mov    esi,eax
  4090b7:	mov    rdx,r8
  4090ba:	call   4030a0 <memset@plt>
  4090bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4090c3:	call   407140 <flatcc_builder_start_offset_vector@@Base>
  4090c8:	cmp    eax,0x0
  4090cb:	je     4090d6 <flatcc_builder_create_union_vector@@Base+0x46>
  4090d1:	jmp    4091ab <flatcc_builder_create_union_vector@@Base+0x11b>
  4090d6:	mov    rdi,QWORD PTR [rbp-0x10]
  4090da:	mov    rsi,QWORD PTR [rbp-0x20]
  4090de:	call   406920 <flatcc_builder_extend_offset_vector@@Base>
  4090e3:	xor    ecx,ecx
  4090e5:	mov    esi,ecx
  4090e7:	cmp    rsi,rax
  4090ea:	jne    4090f5 <flatcc_builder_create_union_vector@@Base+0x65>
  4090f0:	jmp    4091ab <flatcc_builder_create_union_vector@@Base+0x11b>
  4090f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4090f9:	mov    rax,QWORD PTR [rbp-0x20]
  4090fd:	shl    rax,0x0
  409101:	mov    ecx,eax
  409103:	mov    esi,ecx
  409105:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  40910a:	xor    ecx,ecx
  40910c:	mov    edi,ecx
  40910e:	mov    QWORD PTR [rbp-0x28],rax
  409112:	cmp    rdi,rax
  409115:	jne    409120 <flatcc_builder_create_union_vector@@Base+0x90>
  40911b:	jmp    4091ab <flatcc_builder_create_union_vector@@Base+0x11b>
  409120:	mov    rdi,QWORD PTR [rbp-0x10]
  409124:	call   408ab0 <flatcc_builder_offset_vector_edit@@Base>
  409129:	mov    QWORD PTR [rbp-0x30],rax
  40912d:	mov    QWORD PTR [rbp-0x38],0x0
  409135:	mov    rax,QWORD PTR [rbp-0x38]
  409139:	cmp    rax,QWORD PTR [rbp-0x20]
  40913d:	jae    409181 <flatcc_builder_create_union_vector@@Base+0xf1>
  409143:	mov    rax,QWORD PTR [rbp-0x18]
  409147:	mov    rcx,QWORD PTR [rbp-0x38]
  40914b:	mov    dl,BYTE PTR [rax+rcx*8]
  40914e:	mov    rax,QWORD PTR [rbp-0x28]
  409152:	mov    rcx,QWORD PTR [rbp-0x38]
  409156:	mov    BYTE PTR [rax+rcx*1],dl
  409159:	mov    rax,QWORD PTR [rbp-0x18]
  40915d:	mov    rcx,QWORD PTR [rbp-0x38]
  409161:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409165:	mov    rax,QWORD PTR [rbp-0x30]
  409169:	mov    rcx,QWORD PTR [rbp-0x38]
  40916d:	mov    DWORD PTR [rax+rcx*4],esi
  409170:	mov    rax,QWORD PTR [rbp-0x38]
  409174:	add    rax,0x1
  409178:	mov    QWORD PTR [rbp-0x38],rax
  40917c:	jmp    409135 <flatcc_builder_create_union_vector@@Base+0xa5>
  409181:	mov    rdi,QWORD PTR [rbp-0x10]
  409185:	mov    rsi,QWORD PTR [rbp-0x28]
  409189:	mov    rdx,QWORD PTR [rbp-0x30]
  40918d:	mov    rcx,QWORD PTR [rbp-0x20]
  409191:	call   4091c0 <flatcc_builder_create_union_vector_direct@@Base>
  409196:	mov    QWORD PTR [rbp-0x40],rax
  40919a:	mov    rax,QWORD PTR [rbp-0x40]
  40919e:	mov    QWORD PTR [rbp-0x8],rax
  4091a2:	mov    rdi,QWORD PTR [rbp-0x10]
  4091a6:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  4091ab:	mov    rax,QWORD PTR [rbp-0x8]
  4091af:	add    rsp,0x40
  4091b3:	pop    rbp
  4091b4:	ret    
  4091b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091bf:	nop

00000000004091c0 <flatcc_builder_create_union_vector_direct@@Base>:
  4091c0:	push   rbp
  4091c1:	mov    rbp,rsp
  4091c4:	sub    rsp,0x30
  4091c8:	xor    eax,eax
  4091ca:	mov    r8d,0x8
  4091d0:	mov    r9d,r8d
  4091d3:	mov    QWORD PTR [rbp-0x10],rdi
  4091d7:	mov    QWORD PTR [rbp-0x18],rsi
  4091db:	mov    QWORD PTR [rbp-0x20],rdx
  4091df:	mov    QWORD PTR [rbp-0x28],rcx
  4091e3:	lea    rcx,[rbp-0x8]
  4091e7:	mov    rdi,rcx
  4091ea:	mov    esi,eax
  4091ec:	mov    rdx,r9
  4091ef:	call   4030a0 <memset@plt>
  4091f4:	mov    rdi,QWORD PTR [rbp-0x10]
  4091f8:	mov    rsi,QWORD PTR [rbp-0x20]
  4091fc:	mov    rdx,QWORD PTR [rbp-0x28]
  409200:	mov    rcx,QWORD PTR [rbp-0x18]
  409204:	call   4086d0 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  409209:	xor    r8d,r8d
  40920c:	mov    DWORD PTR [rbp-0x4],eax
  40920f:	cmp    r8d,eax
  409212:	jne    40921d <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  409218:	jmp    40925c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40921d:	mov    eax,0x1
  409222:	mov    ecx,eax
  409224:	mov    eax,0xffffffff
  409229:	mov    r9d,eax
  40922c:	mov    rdi,QWORD PTR [rbp-0x10]
  409230:	mov    rsi,QWORD PTR [rbp-0x18]
  409234:	mov    rdx,QWORD PTR [rbp-0x28]
  409238:	mov    r8d,0x1
  40923e:	call   408370 <flatcc_builder_create_vector@@Base>
  409243:	xor    r8d,r8d
  409246:	mov    DWORD PTR [rbp-0x8],eax
  409249:	cmp    r8d,eax
  40924c:	jne    409257 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  409252:	jmp    40925c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  409257:	jmp    40925c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40925c:	mov    rax,QWORD PTR [rbp-0x8]
  409260:	add    rsp,0x30
  409264:	pop    rbp
  409265:	ret    
  409266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409270 <flatcc_builder_start_union_vector@@Base>:
  409270:	push   rbp
  409271:	mov    rbp,rsp
  409274:	sub    rsp,0x10
  409278:	mov    QWORD PTR [rbp-0x10],rdi
  40927c:	mov    rdi,QWORD PTR [rbp-0x10]
  409280:	mov    esi,0x4
  409285:	call   405fc0 <flatcc_builder_start_buffer@@Base+0x170>
  40928a:	cmp    eax,0x0
  40928d:	je     40929f <flatcc_builder_start_union_vector@@Base+0x2f>
  409293:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40929a:	jmp    4092e0 <flatcc_builder_start_union_vector@@Base+0x70>
  40929f:	mov    rax,QWORD PTR [rbp-0x10]
  4092a3:	mov    rax,QWORD PTR [rax+0x30]
  4092a7:	mov    DWORD PTR [rax+0x10],0x8
  4092ae:	mov    rax,QWORD PTR [rbp-0x10]
  4092b2:	mov    rax,QWORD PTR [rax+0x30]
  4092b6:	mov    DWORD PTR [rax+0x14],0x0
  4092bd:	mov    rax,QWORD PTR [rbp-0x10]
  4092c1:	mov    rax,QWORD PTR [rax+0x30]
  4092c5:	mov    WORD PTR [rax+0xe],0x7
  4092cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4092cf:	mov    esi,0xfffffffc
  4092d4:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  4092d9:	mov    DWORD PTR [rbp-0x4],0x0
  4092e0:	mov    eax,DWORD PTR [rbp-0x4]
  4092e3:	add    rsp,0x10
  4092e7:	pop    rbp
  4092e8:	ret    
  4092e9:	nop    DWORD PTR [rax+0x0]

00000000004092f0 <flatcc_builder_end_union_vector@@Base>:
  4092f0:	push   rbp
  4092f1:	mov    rbp,rsp
  4092f4:	sub    rsp,0x40
  4092f8:	xor    esi,esi
  4092fa:	mov    eax,0x8
  4092ff:	mov    edx,eax
  409301:	mov    QWORD PTR [rbp-0x10],rdi
  409305:	lea    rdi,[rbp-0x8]
  409309:	call   4030a0 <memset@plt>
  40930e:	mov    rdx,QWORD PTR [rbp-0x10]
  409312:	mov    rdx,QWORD PTR [rdx+0x30]
  409316:	movzx  eax,WORD PTR [rdx+0xe]
  40931a:	cmp    eax,0x7
  40931d:	jne    409328 <flatcc_builder_end_union_vector@@Base+0x38>
  409323:	jmp    409347 <flatcc_builder_end_union_vector@@Base+0x57>
  409328:	lea    rdi,[rip+0x429f]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  40932f:	lea    rsi,[rip+0x365c]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409336:	mov    edx,0x651
  40933b:	lea    rcx,[rip+0x42be]        # 40d600 <flatcc_builder_padding_base@@Base+0xe80>
  409342:	call   403090 <__assert_fail@plt>
  409347:	mov    rdi,QWORD PTR [rbp-0x10]
  40934b:	call   409430 <flatcc_builder_union_vector_count@@Base>
  409350:	mov    QWORD PTR [rbp-0x38],rax
  409354:	mov    rdi,QWORD PTR [rbp-0x10]
  409358:	imul   rax,QWORD PTR [rbp-0x38],0x5
  40935d:	mov    ecx,eax
  40935f:	mov    esi,ecx
  409361:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  409366:	xor    ecx,ecx
  409368:	mov    edi,ecx
  40936a:	mov    QWORD PTR [rbp-0x28],rax
  40936e:	cmp    rdi,rax
  409371:	jne    40937c <flatcc_builder_end_union_vector@@Base+0x8c>
  409377:	jmp    40941a <flatcc_builder_end_union_vector@@Base+0x12a>
  40937c:	mov    rax,QWORD PTR [rbp-0x28]
  409380:	mov    rcx,QWORD PTR [rbp-0x38]
  409384:	shl    rcx,0x2
  409388:	add    rax,rcx
  40938b:	mov    QWORD PTR [rbp-0x18],rax
  40938f:	mov    rdi,QWORD PTR [rbp-0x10]
  409393:	call   409450 <flatcc_builder_union_vector_edit@@Base>
  409398:	mov    QWORD PTR [rbp-0x20],rax
  40939c:	mov    QWORD PTR [rbp-0x30],0x0
  4093a4:	mov    rax,QWORD PTR [rbp-0x30]
  4093a8:	cmp    rax,QWORD PTR [rbp-0x38]
  4093ac:	jae    4093f0 <flatcc_builder_end_union_vector@@Base+0x100>
  4093b2:	mov    rax,QWORD PTR [rbp-0x20]
  4093b6:	mov    rcx,QWORD PTR [rbp-0x30]
  4093ba:	mov    dl,BYTE PTR [rax+rcx*8]
  4093bd:	mov    rax,QWORD PTR [rbp-0x18]
  4093c1:	mov    rcx,QWORD PTR [rbp-0x30]
  4093c5:	mov    BYTE PTR [rax+rcx*1],dl
  4093c8:	mov    rax,QWORD PTR [rbp-0x20]
  4093cc:	mov    rcx,QWORD PTR [rbp-0x30]
  4093d0:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  4093d4:	mov    rax,QWORD PTR [rbp-0x28]
  4093d8:	mov    rcx,QWORD PTR [rbp-0x30]
  4093dc:	mov    DWORD PTR [rax+rcx*4],esi
  4093df:	mov    rax,QWORD PTR [rbp-0x30]
  4093e3:	add    rax,0x1
  4093e7:	mov    QWORD PTR [rbp-0x30],rax
  4093eb:	jmp    4093a4 <flatcc_builder_end_union_vector@@Base+0xb4>
  4093f0:	mov    rdi,QWORD PTR [rbp-0x10]
  4093f4:	mov    rsi,QWORD PTR [rbp-0x18]
  4093f8:	mov    rdx,QWORD PTR [rbp-0x28]
  4093fc:	mov    rcx,QWORD PTR [rbp-0x38]
  409400:	call   4091c0 <flatcc_builder_create_union_vector_direct@@Base>
  409405:	mov    QWORD PTR [rbp-0x40],rax
  409409:	mov    rax,QWORD PTR [rbp-0x40]
  40940d:	mov    QWORD PTR [rbp-0x8],rax
  409411:	mov    rdi,QWORD PTR [rbp-0x10]
  409415:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  40941a:	mov    rax,QWORD PTR [rbp-0x8]
  40941e:	add    rsp,0x40
  409422:	pop    rbp
  409423:	ret    
  409424:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40942e:	xchg   ax,ax

0000000000409430 <flatcc_builder_union_vector_count@@Base>:
  409430:	push   rbp
  409431:	mov    rbp,rsp
  409434:	mov    QWORD PTR [rbp-0x8],rdi
  409438:	mov    rdi,QWORD PTR [rbp-0x8]
  40943c:	mov    rdi,QWORD PTR [rdi+0x30]
  409440:	mov    eax,DWORD PTR [rdi+0x14]
  409443:	pop    rbp
  409444:	ret    
  409445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40944f:	nop

0000000000409450 <flatcc_builder_union_vector_edit@@Base>:
  409450:	push   rbp
  409451:	mov    rbp,rsp
  409454:	mov    QWORD PTR [rbp-0x8],rdi
  409458:	mov    rdi,QWORD PTR [rbp-0x8]
  40945c:	mov    rax,QWORD PTR [rdi+0x18]
  409460:	pop    rbp
  409461:	ret    
  409462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40946c:	nop    DWORD PTR [rax+0x0]

0000000000409470 <flatcc_builder_extend_union_vector@@Base>:
  409470:	push   rbp
  409471:	mov    rbp,rsp
  409474:	sub    rsp,0x20
  409478:	mov    QWORD PTR [rbp-0x10],rdi
  40947c:	mov    QWORD PTR [rbp-0x18],rsi
  409480:	mov    rdi,QWORD PTR [rbp-0x10]
  409484:	mov    rsi,QWORD PTR [rbp-0x18]
  409488:	mov    eax,esi
  40948a:	mov    esi,eax
  40948c:	mov    edx,0x1fffffff
  409491:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  409496:	cmp    eax,0x0
  409499:	je     4094ac <flatcc_builder_extend_union_vector@@Base+0x3c>
  40949f:	mov    QWORD PTR [rbp-0x8],0x0
  4094a7:	jmp    4094cb <flatcc_builder_extend_union_vector@@Base+0x5b>
  4094ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4094b0:	mov    rax,QWORD PTR [rbp-0x18]
  4094b4:	mov    ecx,eax
  4094b6:	mov    ecx,ecx
  4094b8:	mov    eax,ecx
  4094ba:	shl    rax,0x3
  4094be:	mov    ecx,eax
  4094c0:	mov    esi,ecx
  4094c2:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  4094c7:	mov    QWORD PTR [rbp-0x8],rax
  4094cb:	mov    rax,QWORD PTR [rbp-0x8]
  4094cf:	add    rsp,0x20
  4094d3:	pop    rbp
  4094d4:	ret    
  4094d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094df:	nop

00000000004094e0 <flatcc_builder_truncate_union_vector@@Base>:
  4094e0:	push   rbp
  4094e1:	mov    rbp,rsp
  4094e4:	sub    rsp,0x20
  4094e8:	mov    QWORD PTR [rbp-0x10],rdi
  4094ec:	mov    QWORD PTR [rbp-0x18],rsi
  4094f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4094f4:	mov    rsi,QWORD PTR [rsi+0x30]
  4094f8:	movzx  eax,WORD PTR [rsi+0xe]
  4094fc:	cmp    eax,0x7
  4094ff:	jne    40950a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  409505:	jmp    409529 <flatcc_builder_truncate_union_vector@@Base+0x49>
  40950a:	lea    rdi,[rip+0x40bd]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409511:	lea    rsi,[rip+0x347a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409518:	mov    edx,0x681
  40951d:	lea    rcx,[rip+0x412f]        # 40d653 <flatcc_builder_padding_base@@Base+0xed3>
  409524:	call   403090 <__assert_fail@plt>
  409529:	mov    rax,QWORD PTR [rbp-0x10]
  40952d:	mov    rax,QWORD PTR [rax+0x30]
  409531:	mov    ecx,DWORD PTR [rax+0x14]
  409534:	mov    rax,QWORD PTR [rbp-0x18]
  409538:	mov    edx,eax
  40953a:	cmp    ecx,edx
  40953c:	jae    40958b <flatcc_builder_truncate_union_vector@@Base+0xab>
  409542:	mov    rax,QWORD PTR [rbp-0x10]
  409546:	mov    rax,QWORD PTR [rax+0x30]
  40954a:	mov    ecx,DWORD PTR [rax+0x14]
  40954d:	mov    rax,QWORD PTR [rbp-0x18]
  409551:	mov    edx,eax
  409553:	cmp    ecx,edx
  409555:	jb     409560 <flatcc_builder_truncate_union_vector@@Base+0x80>
  40955b:	jmp    40957f <flatcc_builder_truncate_union_vector@@Base+0x9f>
  409560:	lea    rdi,[rip+0x3acb]        # 40d032 <flatcc_builder_padding_base@@Base+0x8b2>
  409567:	lea    rsi,[rip+0x3424]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40956e:	mov    edx,0x682
  409573:	lea    rcx,[rip+0x40d9]        # 40d653 <flatcc_builder_padding_base@@Base+0xed3>
  40957a:	call   403090 <__assert_fail@plt>
  40957f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409586:	jmp    4095c7 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  40958b:	mov    rax,QWORD PTR [rbp-0x18]
  40958f:	mov    ecx,eax
  409591:	mov    rax,QWORD PTR [rbp-0x10]
  409595:	mov    rax,QWORD PTR [rax+0x30]
  409599:	mov    edx,DWORD PTR [rax+0x14]
  40959c:	sub    edx,ecx
  40959e:	mov    DWORD PTR [rax+0x14],edx
  4095a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4095a5:	mov    rax,QWORD PTR [rbp-0x10]
  4095a9:	mov    rax,QWORD PTR [rax+0x30]
  4095ad:	mov    ecx,DWORD PTR [rax+0x10]
  4095b0:	mov    rax,QWORD PTR [rbp-0x18]
  4095b4:	mov    edx,eax
  4095b6:	imul   ecx,edx
  4095b9:	mov    esi,ecx
  4095bb:	call   406e40 <flatcc_builder_truncate_vector@@Base+0xf0>
  4095c0:	mov    DWORD PTR [rbp-0x4],0x0
  4095c7:	mov    eax,DWORD PTR [rbp-0x4]
  4095ca:	add    rsp,0x20
  4095ce:	pop    rbp
  4095cf:	ret    

00000000004095d0 <flatcc_builder_union_vector_push@@Base>:
  4095d0:	push   rbp
  4095d1:	mov    rbp,rsp
  4095d4:	sub    rsp,0x20
  4095d8:	mov    QWORD PTR [rbp-0x10],rsi
  4095dc:	mov    QWORD PTR [rbp-0x18],rdi
  4095e0:	mov    rsi,QWORD PTR [rbp-0x18]
  4095e4:	mov    rsi,QWORD PTR [rsi+0x30]
  4095e8:	movzx  eax,WORD PTR [rsi+0xe]
  4095ec:	cmp    eax,0x7
  4095ef:	jne    4095fa <flatcc_builder_union_vector_push@@Base+0x2a>
  4095f5:	jmp    409619 <flatcc_builder_union_vector_push@@Base+0x49>
  4095fa:	lea    rdi,[rip+0x3fcd]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409601:	lea    rsi,[rip+0x338a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409608:	mov    edx,0x68d
  40960d:	lea    rcx,[rip+0x4084]        # 40d698 <flatcc_builder_padding_base@@Base+0xf18>
  409614:	call   403090 <__assert_fail@plt>
  409619:	mov    rax,QWORD PTR [rbp-0x18]
  40961d:	mov    rax,QWORD PTR [rax+0x30]
  409621:	mov    ecx,DWORD PTR [rax+0x14]
  409624:	mov    eax,ecx
  409626:	cmp    rax,0x1fffffff
  40962c:	jne    40963f <flatcc_builder_union_vector_push@@Base+0x6f>
  409632:	mov    QWORD PTR [rbp-0x8],0x0
  40963a:	jmp    40968f <flatcc_builder_union_vector_push@@Base+0xbf>
  40963f:	mov    rax,QWORD PTR [rbp-0x18]
  409643:	mov    rax,QWORD PTR [rax+0x30]
  409647:	mov    ecx,DWORD PTR [rax+0x14]
  40964a:	add    ecx,0x1
  40964d:	mov    DWORD PTR [rax+0x14],ecx
  409650:	mov    rdi,QWORD PTR [rbp-0x18]
  409654:	mov    esi,0x8
  409659:	call   4064b0 <flatcc_builder_start_struct@@Base+0x100>
  40965e:	xor    ecx,ecx
  409660:	mov    edi,ecx
  409662:	mov    QWORD PTR [rbp-0x20],rax
  409666:	cmp    rdi,rax
  409669:	jne    40967c <flatcc_builder_union_vector_push@@Base+0xac>
  40966f:	mov    QWORD PTR [rbp-0x8],0x0
  409677:	jmp    40968f <flatcc_builder_union_vector_push@@Base+0xbf>
  40967c:	mov    rax,QWORD PTR [rbp-0x20]
  409680:	mov    rcx,QWORD PTR [rbp-0x10]
  409684:	mov    QWORD PTR [rax],rcx
  409687:	mov    rax,QWORD PTR [rbp-0x20]
  40968b:	mov    QWORD PTR [rbp-0x8],rax
  40968f:	mov    rax,QWORD PTR [rbp-0x8]
  409693:	add    rsp,0x20
  409697:	pop    rbp
  409698:	ret    
  409699:	nop    DWORD PTR [rax+0x0]

00000000004096a0 <flatcc_builder_append_union_vector@@Base>:
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	sub    rsp,0x20
  4096a8:	mov    QWORD PTR [rbp-0x10],rdi
  4096ac:	mov    QWORD PTR [rbp-0x18],rsi
  4096b0:	mov    QWORD PTR [rbp-0x20],rdx
  4096b4:	mov    rdx,QWORD PTR [rbp-0x10]
  4096b8:	mov    rdx,QWORD PTR [rdx+0x30]
  4096bc:	movzx  eax,WORD PTR [rdx+0xe]
  4096c0:	cmp    eax,0x7
  4096c3:	jne    4096ce <flatcc_builder_append_union_vector@@Base+0x2e>
  4096c9:	jmp    4096ed <flatcc_builder_append_union_vector@@Base+0x4d>
  4096ce:	lea    rdi,[rip+0x3ef9]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  4096d5:	lea    rsi,[rip+0x32b6]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4096dc:	mov    edx,0x69c
  4096e1:	lea    rcx,[rip+0x401d]        # 40d705 <flatcc_builder_padding_base@@Base+0xf85>
  4096e8:	call   403090 <__assert_fail@plt>
  4096ed:	mov    rdi,QWORD PTR [rbp-0x10]
  4096f1:	mov    rax,QWORD PTR [rbp-0x20]
  4096f5:	mov    ecx,eax
  4096f7:	mov    esi,ecx
  4096f9:	mov    edx,0x1fffffff
  4096fe:	call   406670 <flatcc_builder_extend_vector@@Base+0x70>
  409703:	cmp    eax,0x0
  409706:	je     409719 <flatcc_builder_append_union_vector@@Base+0x79>
  40970c:	mov    QWORD PTR [rbp-0x8],0x0
  409714:	jmp    40973d <flatcc_builder_append_union_vector@@Base+0x9d>
  409719:	mov    rdi,QWORD PTR [rbp-0x10]
  40971d:	mov    rax,QWORD PTR [rbp-0x18]
  409721:	mov    rcx,QWORD PTR [rbp-0x20]
  409725:	mov    edx,ecx
  409727:	mov    edx,edx
  409729:	mov    ecx,edx
  40972b:	shl    rcx,0x3
  40972f:	mov    edx,ecx
  409731:	mov    rsi,rax
  409734:	call   406810 <flatcc_builder_vector_push@@Base+0xf0>
  409739:	mov    QWORD PTR [rbp-0x8],rax
  40973d:	mov    rax,QWORD PTR [rbp-0x8]
  409741:	add    rsp,0x20
  409745:	pop    rbp
  409746:	ret    
  409747:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409750 <flatcc_builder_create_string@@Base>:
  409750:	push   rbp
  409751:	mov    rbp,rsp
  409754:	sub    rsp,0xc0
  40975b:	mov    eax,0xffffffff
  409760:	mov    ecx,eax
  409762:	mov    QWORD PTR [rbp-0x10],rdi
  409766:	mov    QWORD PTR [rbp-0x18],rsi
  40976a:	mov    QWORD PTR [rbp-0x20],rdx
  40976e:	cmp    QWORD PTR [rbp-0x20],rcx
  409772:	jbe    409784 <flatcc_builder_create_string@@Base+0x34>
  409778:	mov    DWORD PTR [rbp-0x4],0x0
  40977f:	jmp    40990f <flatcc_builder_create_string@@Base+0x1bf>
  409784:	mov    rax,QWORD PTR [rbp-0x20]
  409788:	mov    ecx,eax
  40978a:	mov    edi,ecx
  40978c:	call   405760 <flatcc_builder_embed_buffer@@Base+0x420>
  409791:	mov    DWORD PTR [rbp-0x28],eax
  409794:	mov    rdi,QWORD PTR [rbp-0x10]
  409798:	mov    rdx,QWORD PTR [rbp-0x20]
  40979c:	mov    eax,edx
  40979e:	add    eax,0x1
  4097a1:	mov    esi,eax
  4097a3:	mov    edx,0x4
  4097a8:	call   405730 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4097ad:	add    eax,0x1
  4097b0:	mov    DWORD PTR [rbp-0x24],eax
  4097b3:	mov    QWORD PTR [rbp-0xb8],0x0
  4097be:	mov    DWORD PTR [rbp-0xb0],0x0
  4097c8:	mov    rdi,QWORD PTR [rbp-0xb8]
  4097cf:	add    rdi,0x4
  4097d3:	mov    QWORD PTR [rbp-0xb8],rdi
  4097da:	lea    rdi,[rbp-0x28]
  4097de:	lea    r8,[rbp-0xb8]
  4097e5:	mov    r9,r8
  4097e8:	add    r9,0x10
  4097ec:	movsxd r10,DWORD PTR [rbp-0xb0]
  4097f3:	shl    r10,0x4
  4097f7:	add    r9,r10
  4097fa:	mov    QWORD PTR [r9],rdi
  4097fd:	add    r8,0x10
  409801:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409808:	shl    rdi,0x4
  40980c:	add    r8,rdi
  40980f:	mov    QWORD PTR [r8+0x8],0x4
  409817:	mov    eax,DWORD PTR [rbp-0xb0]
  40981d:	add    eax,0x1
  409820:	mov    DWORD PTR [rbp-0xb0],eax
  409826:	cmp    QWORD PTR [rbp-0x20],0x0
  40982b:	jbe    40988f <flatcc_builder_create_string@@Base+0x13f>
  409831:	mov    rax,QWORD PTR [rbp-0x20]
  409835:	add    rax,QWORD PTR [rbp-0xb8]
  40983c:	mov    QWORD PTR [rbp-0xb8],rax
  409843:	mov    rax,QWORD PTR [rbp-0x18]
  409847:	lea    rcx,[rbp-0xb8]
  40984e:	mov    rdx,rcx
  409851:	add    rdx,0x10
  409855:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40985c:	shl    rsi,0x4
  409860:	add    rdx,rsi
  409863:	mov    QWORD PTR [rdx],rax
  409866:	mov    rax,QWORD PTR [rbp-0x20]
  40986a:	add    rcx,0x10
  40986e:	movsxd rdx,DWORD PTR [rbp-0xb0]
  409875:	shl    rdx,0x4
  409879:	add    rcx,rdx
  40987c:	mov    QWORD PTR [rcx+0x8],rax
  409880:	mov    edi,DWORD PTR [rbp-0xb0]
  409886:	add    edi,0x1
  409889:	mov    DWORD PTR [rbp-0xb0],edi
  40988f:	cmp    DWORD PTR [rbp-0x24],0x0
  409893:	jbe    4098fc <flatcc_builder_create_string@@Base+0x1ac>
  409899:	lea    rax,[rip+0x2ee0]        # 40c780 <flatcc_builder_padding_base@@Base>
  4098a0:	mov    ecx,DWORD PTR [rbp-0x24]
  4098a3:	mov    edx,ecx
  4098a5:	add    rdx,QWORD PTR [rbp-0xb8]
  4098ac:	mov    QWORD PTR [rbp-0xb8],rdx
  4098b3:	lea    rdx,[rbp-0xb8]
  4098ba:	mov    rsi,rdx
  4098bd:	add    rsi,0x10
  4098c1:	movsxd rdi,DWORD PTR [rbp-0xb0]
  4098c8:	shl    rdi,0x4
  4098cc:	add    rsi,rdi
  4098cf:	mov    QWORD PTR [rsi],rax
  4098d2:	mov    ecx,DWORD PTR [rbp-0x24]
  4098d5:	mov    eax,ecx
  4098d7:	add    rdx,0x10
  4098db:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4098e2:	shl    rsi,0x4
  4098e6:	add    rdx,rsi
  4098e9:	mov    QWORD PTR [rdx+0x8],rax
  4098ed:	mov    ecx,DWORD PTR [rbp-0xb0]
  4098f3:	add    ecx,0x1
  4098f6:	mov    DWORD PTR [rbp-0xb0],ecx
  4098fc:	mov    rdi,QWORD PTR [rbp-0x10]
  409900:	lea    rsi,[rbp-0xb8]
  409907:	call   405770 <flatcc_builder_embed_buffer@@Base+0x430>
  40990c:	mov    DWORD PTR [rbp-0x4],eax
  40990f:	mov    eax,DWORD PTR [rbp-0x4]
  409912:	add    rsp,0xc0
  409919:	pop    rbp
  40991a:	ret    
  40991b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409920 <flatcc_builder_create_string_str@@Base>:
  409920:	push   rbp
  409921:	mov    rbp,rsp
  409924:	sub    rsp,0x20
  409928:	mov    QWORD PTR [rbp-0x8],rdi
  40992c:	mov    QWORD PTR [rbp-0x10],rsi
  409930:	mov    rdi,QWORD PTR [rbp-0x8]
  409934:	mov    rsi,QWORD PTR [rbp-0x10]
  409938:	mov    rax,QWORD PTR [rbp-0x10]
  40993c:	mov    QWORD PTR [rbp-0x18],rdi
  409940:	mov    rdi,rax
  409943:	mov    QWORD PTR [rbp-0x20],rsi
  409947:	call   403060 <strlen@plt>
  40994c:	mov    rdi,QWORD PTR [rbp-0x18]
  409950:	mov    rsi,QWORD PTR [rbp-0x20]
  409954:	mov    rdx,rax
  409957:	call   409750 <flatcc_builder_create_string@@Base>
  40995c:	add    rsp,0x20
  409960:	pop    rbp
  409961:	ret    
  409962:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40996c:	nop    DWORD PTR [rax+0x0]

0000000000409970 <flatcc_builder_create_string_strn@@Base>:
  409970:	push   rbp
  409971:	mov    rbp,rsp
  409974:	sub    rsp,0x30
  409978:	mov    QWORD PTR [rbp-0x8],rdi
  40997c:	mov    QWORD PTR [rbp-0x10],rsi
  409980:	mov    QWORD PTR [rbp-0x18],rdx
  409984:	mov    rdi,QWORD PTR [rbp-0x8]
  409988:	mov    rsi,QWORD PTR [rbp-0x10]
  40998c:	mov    rdx,QWORD PTR [rbp-0x10]
  409990:	mov    rax,QWORD PTR [rbp-0x18]
  409994:	mov    QWORD PTR [rbp-0x20],rdi
  409998:	mov    rdi,rdx
  40999b:	mov    QWORD PTR [rbp-0x28],rsi
  40999f:	mov    rsi,rax
  4099a2:	call   406cf0 <flatcc_builder_append_string_strn@@Base+0x50>
  4099a7:	mov    rdi,QWORD PTR [rbp-0x20]
  4099ab:	mov    rsi,QWORD PTR [rbp-0x28]
  4099af:	mov    rdx,rax
  4099b2:	call   409750 <flatcc_builder_create_string@@Base>
  4099b7:	add    rsp,0x30
  4099bb:	pop    rbp
  4099bc:	ret    
  4099bd:	nop    DWORD PTR [rax]

00000000004099c0 <flatcc_builder_end_string@@Base>:
  4099c0:	push   rbp
  4099c1:	mov    rbp,rsp
  4099c4:	sub    rsp,0x20
  4099c8:	mov    QWORD PTR [rbp-0x10],rdi
  4099cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4099d0:	mov    rdi,QWORD PTR [rdi+0x30]
  4099d4:	movzx  eax,WORD PTR [rdi+0xe]
  4099d8:	cmp    eax,0x6
  4099db:	jne    4099e6 <flatcc_builder_end_string@@Base+0x26>
  4099e1:	jmp    409a05 <flatcc_builder_end_string@@Base+0x45>
  4099e6:	lea    rdi,[rip+0x34e4]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  4099ed:	lea    rsi,[rip+0x2f9e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4099f4:	mov    edx,0x6c4
  4099f9:	lea    rcx,[rip+0x3d84]        # 40d784 <flatcc_builder_padding_base@@Base+0x1004>
  409a00:	call   403090 <__assert_fail@plt>
  409a05:	mov    rax,QWORD PTR [rbp-0x10]
  409a09:	mov    rax,QWORD PTR [rax+0x30]
  409a0d:	mov    ecx,DWORD PTR [rax+0x14]
  409a10:	mov    rax,QWORD PTR [rbp-0x10]
  409a14:	cmp    ecx,DWORD PTR [rax+0x20]
  409a17:	jne    409a22 <flatcc_builder_end_string@@Base+0x62>
  409a1d:	jmp    409a41 <flatcc_builder_end_string@@Base+0x81>
  409a22:	lea    rdi,[rip+0x3d9e]        # 40d7c7 <flatcc_builder_padding_base@@Base+0x1047>
  409a29:	lea    rsi,[rip+0x2f62]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409a30:	mov    edx,0x6c5
  409a35:	lea    rcx,[rip+0x3d48]        # 40d784 <flatcc_builder_padding_base@@Base+0x1004>
  409a3c:	call   403090 <__assert_fail@plt>
  409a41:	mov    rdi,QWORD PTR [rbp-0x10]
  409a45:	mov    rax,QWORD PTR [rbp-0x10]
  409a49:	mov    rsi,QWORD PTR [rax+0x18]
  409a4d:	mov    rax,QWORD PTR [rbp-0x10]
  409a51:	mov    ecx,DWORD PTR [rax+0x20]
  409a54:	mov    edx,ecx
  409a56:	call   409750 <flatcc_builder_create_string@@Base>
  409a5b:	xor    ecx,ecx
  409a5d:	mov    DWORD PTR [rbp-0x14],eax
  409a60:	cmp    ecx,eax
  409a62:	jne    409a74 <flatcc_builder_end_string@@Base+0xb4>
  409a68:	mov    DWORD PTR [rbp-0x4],0x0
  409a6f:	jmp    409a83 <flatcc_builder_end_string@@Base+0xc3>
  409a74:	mov    rdi,QWORD PTR [rbp-0x10]
  409a78:	call   4062f0 <flatcc_builder_end_buffer@@Base+0x160>
  409a7d:	mov    eax,DWORD PTR [rbp-0x14]
  409a80:	mov    DWORD PTR [rbp-0x4],eax
  409a83:	mov    eax,DWORD PTR [rbp-0x4]
  409a86:	add    rsp,0x20
  409a8a:	pop    rbp
  409a8b:	ret    
  409a8c:	nop    DWORD PTR [rax+0x0]

0000000000409a90 <flatcc_builder_string_edit@@Base>:
  409a90:	push   rbp
  409a91:	mov    rbp,rsp
  409a94:	mov    QWORD PTR [rbp-0x8],rdi
  409a98:	mov    rdi,QWORD PTR [rbp-0x8]
  409a9c:	mov    rax,QWORD PTR [rdi+0x18]
  409aa0:	pop    rbp
  409aa1:	ret    
  409aa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409aac:	nop    DWORD PTR [rax+0x0]

0000000000409ab0 <flatcc_builder_string_len@@Base>:
  409ab0:	push   rbp
  409ab1:	mov    rbp,rsp
  409ab4:	mov    QWORD PTR [rbp-0x8],rdi
  409ab8:	mov    rdi,QWORD PTR [rbp-0x8]
  409abc:	mov    rdi,QWORD PTR [rdi+0x30]
  409ac0:	mov    eax,DWORD PTR [rdi+0x14]
  409ac3:	pop    rbp
  409ac4:	ret    
  409ac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409acf:	nop
  409ad0:	push   rbp
  409ad1:	mov    rbp,rsp
  409ad4:	sub    rsp,0x20
  409ad8:	mov    ax,cx
  409adb:	mov    r8w,dx
  409adf:	mov    QWORD PTR [rbp-0x10],rdi
  409ae3:	mov    DWORD PTR [rbp-0x14],esi
  409ae6:	mov    WORD PTR [rbp-0x16],r8w
  409aeb:	mov    WORD PTR [rbp-0x18],ax
  409aef:	mov    rdi,QWORD PTR [rbp-0x10]
  409af3:	mov    ecx,DWORD PTR [rdi+0x20]
  409af6:	movzx  edx,WORD PTR [rbp-0x16]
  409afa:	add    ecx,edx
  409afc:	sub    ecx,0x1
  409aff:	movzx  edx,WORD PTR [rbp-0x16]
  409b03:	sub    edx,0x1
  409b06:	xor    edx,0xffffffff
  409b09:	and    ecx,edx
  409b0b:	mov    DWORD PTR [rbp-0x1c],ecx
  409b0e:	mov    ecx,DWORD PTR [rbp-0x1c]
  409b11:	add    ecx,DWORD PTR [rbp-0x14]
  409b14:	mov    rdi,QWORD PTR [rbp-0x10]
  409b18:	mov    DWORD PTR [rdi+0x20],ecx
  409b1b:	mov    rdi,QWORD PTR [rbp-0x10]
  409b1f:	cmp    ecx,DWORD PTR [rdi+0x24]
  409b22:	jb     409b5f <flatcc_builder_string_len@@Base+0xaf>
  409b28:	mov    rdi,QWORD PTR [rbp-0x10]
  409b2c:	mov    rax,QWORD PTR [rbp-0x10]
  409b30:	mov    ecx,DWORD PTR [rax+0x20]
  409b33:	add    ecx,0x1
  409b36:	mov    ecx,ecx
  409b38:	mov    esi,ecx
  409b3a:	mov    edx,0xfffc
  409b3f:	call   40a4d0 <flatcc_builder_get_emit_context@@Base+0x50>
  409b44:	cmp    eax,0x0
  409b47:	je     409b5a <flatcc_builder_string_len@@Base+0xaa>
  409b4d:	mov    QWORD PTR [rbp-0x8],0x0
  409b55:	jmp    409bb7 <flatcc_builder_string_len@@Base+0x107>
  409b5a:	jmp    409b5f <flatcc_builder_string_len@@Base+0xaf>
  409b5f:	mov    eax,DWORD PTR [rbp-0x1c]
  409b62:	mov    ecx,eax
  409b64:	add    rcx,0x4
  409b68:	mov    dx,cx
  409b6b:	mov    rcx,QWORD PTR [rbp-0x10]
  409b6f:	mov    rcx,QWORD PTR [rcx+0x8]
  409b73:	movzx  eax,WORD PTR [rbp-0x18]
  409b77:	mov    esi,eax
  409b79:	mov    WORD PTR [rcx+rsi*2],dx
  409b7d:	movzx  eax,WORD PTR [rbp-0x18]
  409b81:	mov    rcx,QWORD PTR [rbp-0x10]
  409b85:	movzx  edi,WORD PTR [rcx+0x10]
  409b89:	cmp    eax,edi
  409b8b:	jl     409ba3 <flatcc_builder_string_len@@Base+0xf3>
  409b91:	movzx  eax,WORD PTR [rbp-0x18]
  409b95:	add    eax,0x1
  409b98:	mov    cx,ax
  409b9b:	mov    rdx,QWORD PTR [rbp-0x10]
  409b9f:	mov    WORD PTR [rdx+0x10],cx
  409ba3:	mov    rax,QWORD PTR [rbp-0x10]
  409ba7:	mov    rax,QWORD PTR [rax+0x18]
  409bab:	mov    ecx,DWORD PTR [rbp-0x1c]
  409bae:	mov    edx,ecx
  409bb0:	add    rax,rdx
  409bb3:	mov    QWORD PTR [rbp-0x8],rax
  409bb7:	mov    rax,QWORD PTR [rbp-0x8]
  409bbb:	add    rsp,0x20
  409bbf:	pop    rbp
  409bc0:	ret    
  409bc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409bd0 <flatcc_builder_table_edit@@Base>:
  409bd0:	push   rbp
  409bd1:	mov    rbp,rsp
  409bd4:	sub    rsp,0x10
  409bd8:	mov    QWORD PTR [rbp-0x8],rdi
  409bdc:	mov    QWORD PTR [rbp-0x10],rsi
  409be0:	mov    rsi,QWORD PTR [rbp-0x8]
  409be4:	mov    rsi,QWORD PTR [rsi+0x30]
  409be8:	movzx  eax,WORD PTR [rsi+0xe]
  409bec:	cmp    eax,0x3
  409bef:	jne    409bfa <flatcc_builder_table_edit@@Base+0x2a>
  409bf5:	jmp    409c19 <flatcc_builder_table_edit@@Base+0x49>
  409bfa:	lea    rdi,[rip+0x35c0]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  409c01:	lea    rsi,[rip+0x2d8a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409c08:	mov    edx,0x702
  409c0d:	lea    rcx,[rip+0x3c65]        # 40d879 <flatcc_builder_padding_base@@Base+0x10f9>
  409c14:	call   403090 <__assert_fail@plt>
  409c19:	xor    eax,eax
  409c1b:	mov    ecx,eax
  409c1d:	mov    rdx,QWORD PTR [rbp-0x8]
  409c21:	mov    rdx,QWORD PTR [rdx+0x18]
  409c25:	mov    rsi,QWORD PTR [rbp-0x8]
  409c29:	mov    eax,DWORD PTR [rsi+0x20]
  409c2c:	mov    esi,eax
  409c2e:	add    rdx,rsi
  409c31:	sub    rcx,QWORD PTR [rbp-0x10]
  409c35:	add    rdx,rcx
  409c38:	mov    rax,rdx
  409c3b:	add    rsp,0x10
  409c3f:	pop    rbp
  409c40:	ret    
  409c41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409c50 <flatcc_builder_table_add_copy@@Base>:
  409c50:	push   rbp
  409c51:	mov    rbp,rsp
  409c54:	sub    rsp,0x30
  409c58:	mov    ax,r8w
  409c5c:	mov    QWORD PTR [rbp-0x8],rdi
  409c60:	mov    DWORD PTR [rbp-0xc],esi
  409c63:	mov    QWORD PTR [rbp-0x18],rdx
  409c67:	mov    QWORD PTR [rbp-0x20],rcx
  409c6b:	mov    WORD PTR [rbp-0x22],ax
  409c6f:	mov    rdi,QWORD PTR [rbp-0x8]
  409c73:	mov    esi,DWORD PTR [rbp-0xc]
  409c76:	mov    rdx,QWORD PTR [rbp-0x20]
  409c7a:	movzx  ecx,WORD PTR [rbp-0x22]
  409c7e:	call   408d90 <flatcc_builder_table_add@@Base>
  409c83:	mov    QWORD PTR [rbp-0x30],rax
  409c87:	cmp    rax,0x0
  409c8b:	je     409ca2 <flatcc_builder_table_add_copy@@Base+0x52>
  409c91:	mov    rdi,QWORD PTR [rbp-0x30]
  409c95:	mov    rsi,QWORD PTR [rbp-0x18]
  409c99:	mov    rdx,QWORD PTR [rbp-0x20]
  409c9d:	call   4030e0 <memcpy@plt>
  409ca2:	mov    rax,QWORD PTR [rbp-0x30]
  409ca6:	add    rsp,0x30
  409caa:	pop    rbp
  409cab:	ret    
  409cac:	nop    DWORD PTR [rax+0x0]
  409cb0:	push   rbp
  409cb1:	mov    rbp,rsp
  409cb4:	sub    rsp,0x20
  409cb8:	mov    ax,si
  409cbb:	mov    QWORD PTR [rbp-0x10],rdi
  409cbf:	mov    WORD PTR [rbp-0x12],ax
  409cc3:	mov    rdi,QWORD PTR [rbp-0x10]
  409cc7:	mov    esi,DWORD PTR [rdi+0x20]
  409cca:	mov    edi,esi
  409ccc:	add    rdi,0x4
  409cd0:	sub    rdi,0x1
  409cd4:	and    rdi,0xfffffffffffffffc
  409cd8:	mov    esi,edi
  409cda:	mov    DWORD PTR [rbp-0x18],esi
  409cdd:	mov    esi,DWORD PTR [rbp-0x18]
  409ce0:	mov    edi,esi
  409ce2:	add    rdi,0x4
  409ce6:	mov    esi,edi
  409ce8:	mov    rdi,QWORD PTR [rbp-0x10]
  409cec:	mov    DWORD PTR [rdi+0x20],esi
  409cef:	mov    rdi,QWORD PTR [rbp-0x10]
  409cf3:	cmp    esi,DWORD PTR [rdi+0x24]
  409cf6:	jbe    409d2e <flatcc_builder_table_add_copy@@Base+0xde>
  409cfc:	mov    rdi,QWORD PTR [rbp-0x10]
  409d00:	mov    rax,QWORD PTR [rbp-0x10]
  409d04:	mov    ecx,DWORD PTR [rax+0x20]
  409d07:	mov    esi,ecx
  409d09:	mov    edx,0xfffc
  409d0e:	call   40a4d0 <flatcc_builder_get_emit_context@@Base+0x50>
  409d13:	cmp    eax,0x0
  409d16:	je     409d29 <flatcc_builder_table_add_copy@@Base+0xd9>
  409d1c:	mov    QWORD PTR [rbp-0x8],0x0
  409d24:	jmp    409da0 <flatcc_builder_table_add_copy@@Base+0x150>
  409d29:	jmp    409d2e <flatcc_builder_table_add_copy@@Base+0xde>
  409d2e:	mov    eax,DWORD PTR [rbp-0x18]
  409d31:	mov    ecx,eax
  409d33:	add    rcx,0x4
  409d37:	mov    dx,cx
  409d3a:	mov    rcx,QWORD PTR [rbp-0x10]
  409d3e:	mov    rcx,QWORD PTR [rcx+0x8]
  409d42:	movzx  eax,WORD PTR [rbp-0x12]
  409d46:	mov    esi,eax
  409d48:	mov    WORD PTR [rcx+rsi*2],dx
  409d4c:	movzx  eax,WORD PTR [rbp-0x12]
  409d50:	mov    rcx,QWORD PTR [rbp-0x10]
  409d54:	movzx  edi,WORD PTR [rcx+0x10]
  409d58:	cmp    eax,edi
  409d5a:	jl     409d72 <flatcc_builder_table_add_copy@@Base+0x122>
  409d60:	movzx  eax,WORD PTR [rbp-0x12]
  409d64:	add    eax,0x1
  409d67:	mov    cx,ax
  409d6a:	mov    rdx,QWORD PTR [rbp-0x10]
  409d6e:	mov    WORD PTR [rdx+0x10],cx
  409d72:	mov    eax,DWORD PTR [rbp-0x18]
  409d75:	mov    cx,ax
  409d78:	mov    rdx,QWORD PTR [rbp-0x10]
  409d7c:	mov    rsi,QWORD PTR [rdx]
  409d7f:	mov    rdi,rsi
  409d82:	add    rdi,0x2
  409d86:	mov    QWORD PTR [rdx],rdi
  409d89:	mov    WORD PTR [rsi],cx
  409d8c:	mov    rdx,QWORD PTR [rbp-0x10]
  409d90:	mov    rdx,QWORD PTR [rdx+0x18]
  409d94:	mov    eax,DWORD PTR [rbp-0x18]
  409d97:	mov    esi,eax
  409d99:	add    rdx,rsi
  409d9c:	mov    QWORD PTR [rbp-0x8],rdx
  409da0:	mov    rax,QWORD PTR [rbp-0x8]
  409da4:	add    rsp,0x20
  409da8:	pop    rbp
  409da9:	ret    
  409daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409db0 <flatcc_builder_push_buffer_alignment@@Base>:
  409db0:	push   rbp
  409db1:	mov    rbp,rsp
  409db4:	mov    QWORD PTR [rbp-0x8],rdi
  409db8:	mov    rdi,QWORD PTR [rbp-0x8]
  409dbc:	mov    ax,WORD PTR [rdi+0xe8]
  409dc3:	mov    WORD PTR [rbp-0xa],ax
  409dc7:	mov    rdi,QWORD PTR [rbp-0x8]
  409dcb:	mov    WORD PTR [rdi+0xe8],0x4
  409dd4:	movzx  eax,WORD PTR [rbp-0xa]
  409dd8:	pop    rbp
  409dd9:	ret    
  409dda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409de0 <flatcc_builder_pop_buffer_alignment@@Base>:
  409de0:	push   rbp
  409de1:	mov    rbp,rsp
  409de4:	sub    rsp,0x10
  409de8:	mov    ax,si
  409deb:	mov    QWORD PTR [rbp-0x8],rdi
  409def:	mov    WORD PTR [rbp-0xa],ax
  409df3:	mov    rdi,QWORD PTR [rbp-0x8]
  409df7:	movzx  esi,WORD PTR [rbp-0xa]
  409dfb:	call   405c80 <flatcc_builder_create_buffer@@Base+0x410>
  409e00:	add    rsp,0x10
  409e04:	pop    rbp
  409e05:	ret    
  409e06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409e10 <flatcc_builder_get_buffer_alignment@@Base>:
  409e10:	push   rbp
  409e11:	mov    rbp,rsp
  409e14:	mov    QWORD PTR [rbp-0x8],rdi
  409e18:	mov    rdi,QWORD PTR [rbp-0x8]
  409e1c:	movzx  eax,WORD PTR [rdi+0xe8]
  409e23:	pop    rbp
  409e24:	ret    
  409e25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e2f:	nop

0000000000409e30 <flatcc_builder_set_vtable_clustering@@Base>:
  409e30:	push   rbp
  409e31:	mov    rbp,rsp
  409e34:	mov    QWORD PTR [rbp-0x8],rdi
  409e38:	mov    DWORD PTR [rbp-0xc],esi
  409e3b:	cmp    DWORD PTR [rbp-0xc],0x0
  409e3f:	setne  al
  409e42:	xor    al,0xff
  409e44:	and    al,0x1
  409e46:	movzx  esi,al
  409e49:	mov    rdi,QWORD PTR [rbp-0x8]
  409e4d:	mov    DWORD PTR [rdi+0x124],esi
  409e53:	pop    rbp
  409e54:	ret    
  409e55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e5f:	nop

0000000000409e60 <flatcc_builder_set_block_align@@Base>:
  409e60:	push   rbp
  409e61:	mov    rbp,rsp
  409e64:	mov    ax,si
  409e67:	mov    QWORD PTR [rbp-0x8],rdi
  409e6b:	mov    WORD PTR [rbp-0xa],ax
  409e6f:	mov    ax,WORD PTR [rbp-0xa]
  409e73:	mov    rdi,QWORD PTR [rbp-0x8]
  409e77:	mov    WORD PTR [rdi+0xec],ax
  409e7e:	pop    rbp
  409e7f:	ret    

0000000000409e80 <flatcc_builder_get_level@@Base>:
  409e80:	push   rbp
  409e81:	mov    rbp,rsp
  409e84:	mov    QWORD PTR [rbp-0x8],rdi
  409e88:	mov    rdi,QWORD PTR [rbp-0x8]
  409e8c:	mov    eax,DWORD PTR [rdi+0x104]
  409e92:	pop    rbp
  409e93:	ret    
  409e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e9e:	xchg   ax,ax

0000000000409ea0 <flatcc_builder_set_max_level@@Base>:
  409ea0:	push   rbp
  409ea1:	mov    rbp,rsp
  409ea4:	mov    QWORD PTR [rbp-0x8],rdi
  409ea8:	mov    DWORD PTR [rbp-0xc],esi
  409eab:	mov    esi,DWORD PTR [rbp-0xc]
  409eae:	mov    rdi,QWORD PTR [rbp-0x8]
  409eb2:	mov    DWORD PTR [rdi+0x120],esi
  409eb8:	mov    rdi,QWORD PTR [rbp-0x8]
  409ebc:	mov    esi,DWORD PTR [rdi+0x108]
  409ec2:	mov    rdi,QWORD PTR [rbp-0x8]
  409ec6:	cmp    esi,DWORD PTR [rdi+0x120]
  409ecc:	jge    409ee6 <flatcc_builder_set_max_level@@Base+0x46>
  409ed2:	mov    rax,QWORD PTR [rbp-0x8]
  409ed6:	mov    ecx,DWORD PTR [rax+0x120]
  409edc:	mov    rax,QWORD PTR [rbp-0x8]
  409ee0:	mov    DWORD PTR [rax+0x108],ecx
  409ee6:	pop    rbp
  409ee7:	ret    
  409ee8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ef0 <flatcc_builder_get_buffer_size@@Base>:
  409ef0:	push   rbp
  409ef1:	mov    rbp,rsp
  409ef4:	mov    QWORD PTR [rbp-0x8],rdi
  409ef8:	mov    rdi,QWORD PTR [rbp-0x8]
  409efc:	mov    eax,DWORD PTR [rdi+0xf4]
  409f02:	mov    rdi,QWORD PTR [rbp-0x8]
  409f06:	sub    eax,DWORD PTR [rdi+0xf0]
  409f0c:	cdqe   
  409f0e:	pop    rbp
  409f0f:	ret    

0000000000409f10 <flatcc_builder_get_buffer_start@@Base>:
  409f10:	push   rbp
  409f11:	mov    rbp,rsp
  409f14:	mov    QWORD PTR [rbp-0x8],rdi
  409f18:	mov    rdi,QWORD PTR [rbp-0x8]
  409f1c:	mov    eax,DWORD PTR [rdi+0xf0]
  409f22:	pop    rbp
  409f23:	ret    
  409f24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f2e:	xchg   ax,ax

0000000000409f30 <flatcc_builder_get_buffer_end@@Base>:
  409f30:	push   rbp
  409f31:	mov    rbp,rsp
  409f34:	mov    QWORD PTR [rbp-0x8],rdi
  409f38:	mov    rdi,QWORD PTR [rbp-0x8]
  409f3c:	mov    eax,DWORD PTR [rdi+0xf4]
  409f42:	pop    rbp
  409f43:	ret    
  409f44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f4e:	xchg   ax,ax

0000000000409f50 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409f50:	push   rbp
  409f51:	mov    rbp,rsp
  409f54:	mov    QWORD PTR [rbp-0x8],rdi
  409f58:	mov    QWORD PTR [rbp-0x10],rsi
  409f5c:	mov    rsi,QWORD PTR [rbp-0x10]
  409f60:	mov    rdi,QWORD PTR [rbp-0x8]
  409f64:	mov    QWORD PTR [rdi+0x118],rsi
  409f6b:	pop    rbp
  409f6c:	ret    
  409f6d:	nop    DWORD PTR [rax]

0000000000409f70 <flatcc_builder_set_identifier@@Base>:
  409f70:	push   rbp
  409f71:	mov    rbp,rsp
  409f74:	mov    QWORD PTR [rbp-0x8],rdi
  409f78:	mov    QWORD PTR [rbp-0x10],rsi
  409f7c:	mov    rsi,QWORD PTR [rbp-0x8]
  409f80:	add    rsi,0x110
  409f87:	cmp    QWORD PTR [rbp-0x10],0x0
  409f8c:	mov    QWORD PTR [rbp-0x18],rsi
  409f90:	je     409fa3 <flatcc_builder_set_identifier@@Base+0x33>
  409f96:	mov    rax,QWORD PTR [rbp-0x10]
  409f9a:	mov    QWORD PTR [rbp-0x20],rax
  409f9e:	jmp    409fb3 <flatcc_builder_set_identifier@@Base+0x43>
  409fa3:	lea    rax,[rip+0x27d6]        # 40c780 <flatcc_builder_padding_base@@Base>
  409faa:	mov    QWORD PTR [rbp-0x20],rax
  409fae:	jmp    409fb3 <flatcc_builder_set_identifier@@Base+0x43>
  409fb3:	mov    rax,QWORD PTR [rbp-0x20]
  409fb7:	mov    ecx,DWORD PTR [rax]
  409fb9:	mov    rax,QWORD PTR [rbp-0x18]
  409fbd:	mov    DWORD PTR [rax],ecx
  409fbf:	pop    rbp
  409fc0:	ret    
  409fc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409fd0 <flatcc_builder_get_type@@Base>:
  409fd0:	push   rbp
  409fd1:	mov    rbp,rsp
  409fd4:	mov    QWORD PTR [rbp-0x8],rdi
  409fd8:	mov    rdi,QWORD PTR [rbp-0x8]
  409fdc:	cmp    QWORD PTR [rdi+0x30],0x0
  409fe1:	je     409ffb <flatcc_builder_get_type@@Base+0x2b>
  409fe7:	mov    rax,QWORD PTR [rbp-0x8]
  409feb:	mov    rax,QWORD PTR [rax+0x30]
  409fef:	movzx  ecx,WORD PTR [rax+0xe]
  409ff3:	mov    DWORD PTR [rbp-0xc],ecx
  409ff6:	jmp    40a005 <flatcc_builder_get_type@@Base+0x35>
  409ffb:	xor    eax,eax
  409ffd:	mov    DWORD PTR [rbp-0xc],eax
  40a000:	jmp    40a005 <flatcc_builder_get_type@@Base+0x35>
  40a005:	mov    eax,DWORD PTR [rbp-0xc]
  40a008:	pop    rbp
  40a009:	ret    
  40a00a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a010 <flatcc_builder_get_type_at@@Base>:
  40a010:	push   rbp
  40a011:	mov    rbp,rsp
  40a014:	mov    QWORD PTR [rbp-0x10],rdi
  40a018:	mov    DWORD PTR [rbp-0x14],esi
  40a01b:	cmp    DWORD PTR [rbp-0x14],0x1
  40a01f:	jl     40a038 <flatcc_builder_get_type_at@@Base+0x28>
  40a025:	mov    eax,DWORD PTR [rbp-0x14]
  40a028:	mov    rcx,QWORD PTR [rbp-0x10]
  40a02c:	cmp    eax,DWORD PTR [rcx+0x104]
  40a032:	jle    40a044 <flatcc_builder_get_type_at@@Base+0x34>
  40a038:	mov    DWORD PTR [rbp-0x4],0x0
  40a03f:	jmp    40a06a <flatcc_builder_get_type_at@@Base+0x5a>
  40a044:	mov    rax,QWORD PTR [rbp-0x10]
  40a048:	mov    rax,QWORD PTR [rax+0x30]
  40a04c:	mov    ecx,DWORD PTR [rbp-0x14]
  40a04f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a053:	sub    ecx,DWORD PTR [rdx+0x104]
  40a059:	movsxd rdx,ecx
  40a05c:	imul   rdx,rdx,0x24
  40a060:	add    rax,rdx
  40a063:	movzx  ecx,WORD PTR [rax+0xe]
  40a067:	mov    DWORD PTR [rbp-0x4],ecx
  40a06a:	mov    eax,DWORD PTR [rbp-0x4]
  40a06d:	pop    rbp
  40a06e:	ret    
  40a06f:	nop

000000000040a070 <flatcc_builder_get_direct_buffer@@Base>:
  40a070:	push   rbp
  40a071:	mov    rbp,rsp
  40a074:	sub    rsp,0x20
  40a078:	mov    QWORD PTR [rbp-0x10],rdi
  40a07c:	mov    QWORD PTR [rbp-0x18],rsi
  40a080:	mov    rsi,QWORD PTR [rbp-0x10]
  40a084:	cmp    DWORD PTR [rsi+0x128],0x0
  40a08b:	je     40a0b0 <flatcc_builder_get_direct_buffer@@Base+0x40>
  40a091:	mov    rax,QWORD PTR [rbp-0x10]
  40a095:	add    rax,0x130
  40a09b:	mov    rsi,QWORD PTR [rbp-0x18]
  40a09f:	mov    rdi,rax
  40a0a2:	call   40a0e0 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40a0a7:	mov    QWORD PTR [rbp-0x8],rax
  40a0ab:	jmp    40a0d3 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40a0b0:	cmp    QWORD PTR [rbp-0x18],0x0
  40a0b5:	je     40a0c6 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40a0bb:	mov    rax,QWORD PTR [rbp-0x18]
  40a0bf:	mov    QWORD PTR [rax],0x0
  40a0c6:	jmp    40a0cb <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40a0cb:	mov    QWORD PTR [rbp-0x8],0x0
  40a0d3:	mov    rax,QWORD PTR [rbp-0x8]
  40a0d7:	add    rsp,0x20
  40a0db:	pop    rbp
  40a0dc:	ret    
  40a0dd:	nop    DWORD PTR [rax]
  40a0e0:	push   rbp
  40a0e1:	mov    rbp,rsp
  40a0e4:	mov    QWORD PTR [rbp-0x10],rdi
  40a0e8:	mov    QWORD PTR [rbp-0x18],rsi
  40a0ec:	mov    rsi,QWORD PTR [rbp-0x10]
  40a0f0:	mov    rsi,QWORD PTR [rsi]
  40a0f3:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0f7:	cmp    rsi,QWORD PTR [rdi+0x8]
  40a0fb:	jne    40a12c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40a101:	cmp    QWORD PTR [rbp-0x18],0x0
  40a106:	je     40a11b <flatcc_builder_get_direct_buffer@@Base+0xab>
  40a10c:	mov    rax,QWORD PTR [rbp-0x10]
  40a110:	mov    rax,QWORD PTR [rax+0x30]
  40a114:	mov    rcx,QWORD PTR [rbp-0x18]
  40a118:	mov    QWORD PTR [rcx],rax
  40a11b:	mov    rax,QWORD PTR [rbp-0x10]
  40a11f:	mov    rax,QWORD PTR [rax+0x10]
  40a123:	mov    QWORD PTR [rbp-0x8],rax
  40a127:	jmp    40a14a <flatcc_builder_get_direct_buffer@@Base+0xda>
  40a12c:	cmp    QWORD PTR [rbp-0x18],0x0
  40a131:	je     40a142 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40a137:	mov    rax,QWORD PTR [rbp-0x18]
  40a13b:	mov    QWORD PTR [rax],0x0
  40a142:	mov    QWORD PTR [rbp-0x8],0x0
  40a14a:	mov    rax,QWORD PTR [rbp-0x8]
  40a14e:	pop    rbp
  40a14f:	ret    

000000000040a150 <flatcc_builder_copy_buffer@@Base>:
  40a150:	push   rbp
  40a151:	mov    rbp,rsp
  40a154:	sub    rsp,0x20
  40a158:	mov    QWORD PTR [rbp-0x10],rdi
  40a15c:	mov    QWORD PTR [rbp-0x18],rsi
  40a160:	mov    QWORD PTR [rbp-0x20],rdx
  40a164:	mov    rdx,QWORD PTR [rbp-0x10]
  40a168:	cmp    DWORD PTR [rdx+0x128],0x0
  40a16f:	jne    40a182 <flatcc_builder_copy_buffer@@Base+0x32>
  40a175:	mov    QWORD PTR [rbp-0x8],0x0
  40a17d:	jmp    40a1d7 <flatcc_builder_copy_buffer@@Base+0x87>
  40a182:	mov    rax,QWORD PTR [rbp-0x10]
  40a186:	add    rax,0x130
  40a18c:	mov    rsi,QWORD PTR [rbp-0x18]
  40a190:	mov    rdx,QWORD PTR [rbp-0x20]
  40a194:	mov    rdi,rax
  40a197:	call   40adf0 <flatcc_emitter_copy_buffer@@Base>
  40a19c:	mov    QWORD PTR [rbp-0x18],rax
  40a1a0:	cmp    QWORD PTR [rbp-0x18],0x0
  40a1a5:	je     40a1b0 <flatcc_builder_copy_buffer@@Base+0x60>
  40a1ab:	jmp    40a1cf <flatcc_builder_copy_buffer@@Base+0x7f>
  40a1b0:	lea    rdi,[rip+0x1f8a]        # 40c141 <_IO_stdin_used@@Base+0x141>
  40a1b7:	lea    rsi,[rip+0x27d4]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a1be:	mov    edx,0x786
  40a1c3:	lea    rcx,[rip+0x373a]        # 40d904 <flatcc_builder_padding_base@@Base+0x1184>
  40a1ca:	call   403090 <__assert_fail@plt>
  40a1cf:	mov    rax,QWORD PTR [rbp-0x18]
  40a1d3:	mov    QWORD PTR [rbp-0x8],rax
  40a1d7:	mov    rax,QWORD PTR [rbp-0x8]
  40a1db:	add    rsp,0x20
  40a1df:	pop    rbp
  40a1e0:	ret    
  40a1e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a1f0 <flatcc_builder_finalize_buffer@@Base>:
  40a1f0:	push   rbp
  40a1f1:	mov    rbp,rsp
  40a1f4:	sub    rsp,0x20
  40a1f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a1fc:	mov    QWORD PTR [rbp-0x10],rsi
  40a200:	mov    rdi,QWORD PTR [rbp-0x8]
  40a204:	call   409ef0 <flatcc_builder_get_buffer_size@@Base>
  40a209:	mov    QWORD PTR [rbp-0x20],rax
  40a20d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a212:	je     40a223 <flatcc_builder_finalize_buffer@@Base+0x33>
  40a218:	mov    rax,QWORD PTR [rbp-0x20]
  40a21c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a220:	mov    QWORD PTR [rcx],rax
  40a223:	mov    rdi,QWORD PTR [rbp-0x20]
  40a227:	call   4030f0 <malloc@plt>
  40a22c:	mov    QWORD PTR [rbp-0x18],rax
  40a230:	cmp    QWORD PTR [rbp-0x18],0x0
  40a235:	jne    40a25a <flatcc_builder_finalize_buffer@@Base+0x6a>
  40a23b:	lea    rdi,[rip+0x3910]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40a242:	lea    rsi,[rip+0x2749]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a249:	mov    edx,0x798
  40a24e:	lea    rcx,[rip+0x36f4]        # 40d949 <flatcc_builder_padding_base@@Base+0x11c9>
  40a255:	call   403090 <__assert_fail@plt>
  40a25a:	mov    rdi,QWORD PTR [rbp-0x8]
  40a25e:	mov    rsi,QWORD PTR [rbp-0x18]
  40a262:	mov    rdx,QWORD PTR [rbp-0x20]
  40a266:	call   40a150 <flatcc_builder_copy_buffer@@Base>
  40a26b:	cmp    rax,0x0
  40a26f:	jne    40a294 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40a275:	lea    rdi,[rip+0x38d6]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40a27c:	lea    rsi,[rip+0x270f]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a283:	mov    edx,0x79c
  40a288:	lea    rcx,[rip+0x36ba]        # 40d949 <flatcc_builder_padding_base@@Base+0x11c9>
  40a28f:	call   403090 <__assert_fail@plt>
  40a294:	jmp    40a299 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40a299:	cmp    QWORD PTR [rbp-0x18],0x0
  40a29e:	jne    40a2ba <flatcc_builder_finalize_buffer@@Base+0xca>
  40a2a4:	cmp    QWORD PTR [rbp-0x10],0x0
  40a2a9:	je     40a2ba <flatcc_builder_finalize_buffer@@Base+0xca>
  40a2af:	mov    rax,QWORD PTR [rbp-0x10]
  40a2b3:	mov    QWORD PTR [rax],0x0
  40a2ba:	mov    rax,QWORD PTR [rbp-0x18]
  40a2be:	add    rsp,0x20
  40a2c2:	pop    rbp
  40a2c3:	ret    
  40a2c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2ce:	xchg   ax,ax

000000000040a2d0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x30
  40a2d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a2dc:	mov    QWORD PTR [rbp-0x10],rsi
  40a2e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2e4:	call   409ef0 <flatcc_builder_get_buffer_size@@Base>
  40a2e9:	mov    QWORD PTR [rbp-0x28],rax
  40a2ed:	cmp    QWORD PTR [rbp-0x10],0x0
  40a2f2:	je     40a303 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40a2f8:	mov    rax,QWORD PTR [rbp-0x28]
  40a2fc:	mov    rcx,QWORD PTR [rbp-0x10]
  40a300:	mov    QWORD PTR [rcx],rax
  40a303:	mov    rdi,QWORD PTR [rbp-0x8]
  40a307:	call   409e10 <flatcc_builder_get_buffer_alignment@@Base>
  40a30c:	movzx  ecx,ax
  40a30f:	mov    edi,ecx
  40a311:	mov    QWORD PTR [rbp-0x20],rdi
  40a315:	mov    rdi,QWORD PTR [rbp-0x28]
  40a319:	add    rdi,QWORD PTR [rbp-0x20]
  40a31d:	sub    rdi,0x1
  40a321:	mov    rdx,QWORD PTR [rbp-0x20]
  40a325:	sub    rdx,0x1
  40a329:	xor    rdx,0xffffffffffffffff
  40a32d:	and    rdi,rdx
  40a330:	mov    QWORD PTR [rbp-0x28],rdi
  40a334:	mov    rdi,QWORD PTR [rbp-0x20]
  40a338:	mov    rsi,QWORD PTR [rbp-0x28]
  40a33c:	call   40a3c0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a341:	mov    QWORD PTR [rbp-0x18],rax
  40a345:	cmp    QWORD PTR [rbp-0x18],0x0
  40a34a:	jne    40a355 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  40a350:	jmp    40a38b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a355:	mov    rdi,QWORD PTR [rbp-0x8]
  40a359:	mov    rsi,QWORD PTR [rbp-0x18]
  40a35d:	mov    rdx,QWORD PTR [rbp-0x28]
  40a361:	call   40a150 <flatcc_builder_copy_buffer@@Base>
  40a366:	cmp    rax,0x0
  40a36a:	jne    40a386 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40a370:	mov    rdi,QWORD PTR [rbp-0x18]
  40a374:	call   403030 <free@plt>
  40a379:	mov    QWORD PTR [rbp-0x18],0x0
  40a381:	jmp    40a38b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a386:	jmp    40a38b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a38b:	cmp    QWORD PTR [rbp-0x18],0x0
  40a390:	jne    40a3ac <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a396:	cmp    QWORD PTR [rbp-0x10],0x0
  40a39b:	je     40a3ac <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a3a1:	mov    rax,QWORD PTR [rbp-0x10]
  40a3a5:	mov    QWORD PTR [rax],0x0
  40a3ac:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b0:	add    rsp,0x30
  40a3b4:	pop    rbp
  40a3b5:	ret    
  40a3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	sub    rsp,0x20
  40a3c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a3cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a3d0:	mov    QWORD PTR [rbp-0x20],0x0
  40a3d8:	cmp    QWORD PTR [rbp-0x8],0x8
  40a3dd:	jae    40a3eb <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40a3e3:	mov    QWORD PTR [rbp-0x8],0x8
  40a3eb:	mov    rsi,QWORD PTR [rbp-0x8]
  40a3ef:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3f3:	lea    rdi,[rbp-0x20]
  40a3f7:	call   403130 <posix_memalign@plt>
  40a3fc:	mov    DWORD PTR [rbp-0x14],eax
  40a3ff:	cmp    DWORD PTR [rbp-0x14],0x0
  40a403:	je     40a425 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a409:	cmp    QWORD PTR [rbp-0x20],0x0
  40a40e:	je     40a425 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a414:	mov    rdi,QWORD PTR [rbp-0x20]
  40a418:	call   403030 <free@plt>
  40a41d:	mov    QWORD PTR [rbp-0x20],0x0
  40a425:	mov    rax,QWORD PTR [rbp-0x20]
  40a429:	add    rsp,0x20
  40a42d:	pop    rbp
  40a42e:	ret    
  40a42f:	nop

000000000040a430 <flatcc_builder_aligned_alloc@@Base>:
  40a430:	push   rbp
  40a431:	mov    rbp,rsp
  40a434:	sub    rsp,0x10
  40a438:	mov    QWORD PTR [rbp-0x8],rdi
  40a43c:	mov    QWORD PTR [rbp-0x10],rsi
  40a440:	mov    rdi,QWORD PTR [rbp-0x8]
  40a444:	mov    rsi,QWORD PTR [rbp-0x10]
  40a448:	call   40a3c0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a44d:	add    rsp,0x10
  40a451:	pop    rbp
  40a452:	ret    
  40a453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a45d:	nop    DWORD PTR [rax]

000000000040a460 <flatcc_builder_aligned_free@@Base>:
  40a460:	push   rbp
  40a461:	mov    rbp,rsp
  40a464:	sub    rsp,0x10
  40a468:	mov    QWORD PTR [rbp-0x8],rdi
  40a46c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a470:	call   403030 <free@plt>
  40a475:	add    rsp,0x10
  40a479:	pop    rbp
  40a47a:	ret    
  40a47b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a480 <flatcc_builder_get_emit_context@@Base>:
  40a480:	push   rbp
  40a481:	mov    rbp,rsp
  40a484:	mov    QWORD PTR [rbp-0x8],rdi
  40a488:	mov    rdi,QWORD PTR [rbp-0x8]
  40a48c:	mov    rax,QWORD PTR [rdi+0x38]
  40a490:	pop    rbp
  40a491:	ret    
  40a492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a49c:	nop    DWORD PTR [rax+0x0]
  40a4a0:	push   rbp
  40a4a1:	mov    rbp,rsp
  40a4a4:	mov    ax,si
  40a4a7:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ab:	mov    WORD PTR [rbp-0xa],ax
  40a4af:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4b3:	mov    esi,DWORD PTR [rdi+0xf4]
  40a4b9:	movzx  ecx,WORD PTR [rbp-0xa]
  40a4bd:	sub    ecx,0x1
  40a4c0:	and    esi,ecx
  40a4c2:	mov    eax,esi
  40a4c4:	pop    rbp
  40a4c5:	ret    
  40a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4d0:	push   rbp
  40a4d1:	mov    rbp,rsp
  40a4d4:	sub    rsp,0x30
  40a4d8:	mov    QWORD PTR [rbp-0x10],rdi
  40a4dc:	mov    QWORD PTR [rbp-0x18],rsi
  40a4e0:	mov    DWORD PTR [rbp-0x1c],edx
  40a4e3:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4e7:	add    rsi,0x58
  40a4eb:	add    rsi,0x10
  40a4ef:	mov    QWORD PTR [rbp-0x28],rsi
  40a4f3:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4f7:	mov    rsi,QWORD PTR [rsi+0x50]
  40a4fb:	mov    rdi,QWORD PTR [rbp-0x10]
  40a4ff:	mov    rdi,QWORD PTR [rdi+0x40]
  40a503:	mov    rax,QWORD PTR [rbp-0x28]
  40a507:	mov    rcx,QWORD PTR [rbp-0x10]
  40a50b:	mov    edx,DWORD PTR [rcx+0x28]
  40a50e:	mov    ecx,edx
  40a510:	add    rcx,QWORD PTR [rbp-0x18]
  40a514:	mov    QWORD PTR [rbp-0x30],rsi
  40a518:	mov    rsi,rax
  40a51b:	mov    rdx,rcx
  40a51e:	mov    r8d,0x1
  40a524:	mov    ecx,r8d
  40a527:	mov    rax,QWORD PTR [rbp-0x30]
  40a52b:	call   rax
  40a52d:	cmp    eax,0x0
  40a530:	je     40a542 <flatcc_builder_get_emit_context@@Base+0xc2>
  40a536:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a53d:	jmp    40a555 <flatcc_builder_get_emit_context@@Base+0xd5>
  40a542:	mov    rdi,QWORD PTR [rbp-0x10]
  40a546:	mov    esi,DWORD PTR [rbp-0x1c]
  40a549:	call   406430 <flatcc_builder_start_struct@@Base+0x80>
  40a54e:	mov    DWORD PTR [rbp-0x4],0x0
  40a555:	mov    eax,DWORD PTR [rbp-0x4]
  40a558:	add    rsp,0x30
  40a55c:	pop    rbp
  40a55d:	ret    
  40a55e:	xchg   ax,ax
  40a560:	push   rbp
  40a561:	mov    rbp,rsp
  40a564:	sub    rsp,0x30
  40a568:	mov    QWORD PTR [rbp-0x10],rdi
  40a56c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a570:	add    rdi,0x58
  40a574:	add    rdi,0x50
  40a578:	mov    QWORD PTR [rbp-0x18],rdi
  40a57c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a580:	cmp    DWORD PTR [rdi+0xe4],0x0
  40a587:	jne    40a592 <flatcc_builder_get_emit_context@@Base+0x112>
  40a58d:	jmp    40a5b1 <flatcc_builder_get_emit_context@@Base+0x131>
  40a592:	lea    rdi,[rip+0x357d]        # 40db16 <flatcc_builder_padding_base@@Base+0x1396>
  40a599:	lea    rsi,[rip+0x23f2]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a5a0:	mov    edx,0x156
  40a5a5:	lea    rcx,[rip+0x3579]        # 40db25 <flatcc_builder_padding_base@@Base+0x13a5>
  40a5ac:	call   403090 <__assert_fail@plt>
  40a5b1:	mov    eax,0x10
  40a5b6:	mov    ecx,eax
  40a5b8:	xor    r8d,r8d
  40a5bb:	mov    rdi,QWORD PTR [rbp-0x10]
  40a5bf:	mov    rdx,QWORD PTR [rbp-0x10]
  40a5c3:	mov    eax,DWORD PTR [rdx+0xe4]
  40a5c9:	mov    edx,eax
  40a5cb:	mov    esi,0x6
  40a5d0:	call   405040 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40a5d5:	cmp    rax,0x0
  40a5d9:	jne    40a5eb <flatcc_builder_get_emit_context@@Base+0x16b>
  40a5df:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a5e6:	jmp    40a6ca <flatcc_builder_get_emit_context@@Base+0x24a>
  40a5eb:	mov    rax,QWORD PTR [rbp-0x10]
  40a5ef:	mov    DWORD PTR [rax+0xe4],0x10
  40a5f9:	mov    QWORD PTR [rbp-0x20],0x100
  40a601:	mov    rax,QWORD PTR [rbp-0x10]
  40a605:	mov    rax,QWORD PTR [rax+0x50]
  40a609:	mov    rcx,QWORD PTR [rbp-0x10]
  40a60d:	mov    rdi,QWORD PTR [rcx+0x40]
  40a611:	mov    rsi,QWORD PTR [rbp-0x18]
  40a615:	mov    rdx,QWORD PTR [rbp-0x20]
  40a619:	mov    ecx,0x1
  40a61e:	mov    r8d,0x5
  40a624:	call   rax
  40a626:	cmp    eax,0x0
  40a629:	je     40a63b <flatcc_builder_get_emit_context@@Base+0x1bb>
  40a62f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a636:	jmp    40a6ca <flatcc_builder_get_emit_context@@Base+0x24a>
  40a63b:	jmp    40a640 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a640:	mov    rax,QWORD PTR [rbp-0x20]
  40a644:	shl    rax,0x1
  40a648:	mov    rcx,QWORD PTR [rbp-0x18]
  40a64c:	cmp    rax,QWORD PTR [rcx+0x8]
  40a650:	ja     40a667 <flatcc_builder_get_emit_context@@Base+0x1e7>
  40a656:	mov    rax,QWORD PTR [rbp-0x20]
  40a65a:	shl    rax,0x1
  40a65e:	mov    QWORD PTR [rbp-0x20],rax
  40a662:	jmp    40a640 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a667:	mov    rax,QWORD PTR [rbp-0x20]
  40a66b:	shr    rax,0x2
  40a66f:	mov    QWORD PTR [rbp-0x20],rax
  40a673:	mov    QWORD PTR [rbp-0x28],0x0
  40a67b:	mov    eax,0x1
  40a680:	mov    ecx,eax
  40a682:	mov    rdx,QWORD PTR [rbp-0x28]
  40a686:	mov    QWORD PTR [rbp-0x30],rcx
  40a68a:	mov    rcx,rdx
  40a68d:	mov    rdx,QWORD PTR [rbp-0x30]
  40a691:	shl    rdx,cl
  40a694:	cmp    rdx,QWORD PTR [rbp-0x20]
  40a698:	jae    40a6b4 <flatcc_builder_get_emit_context@@Base+0x234>
  40a69e:	jmp    40a6a3 <flatcc_builder_get_emit_context@@Base+0x223>
  40a6a3:	mov    rax,QWORD PTR [rbp-0x28]
  40a6a7:	add    rax,0x1
  40a6ab:	mov    QWORD PTR [rbp-0x28],rax
  40a6af:	jmp    40a67b <flatcc_builder_get_emit_context@@Base+0x1fb>
  40a6b4:	mov    rax,QWORD PTR [rbp-0x28]
  40a6b8:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6bc:	mov    QWORD PTR [rcx+0xd8],rax
  40a6c3:	mov    DWORD PTR [rbp-0x4],0x0
  40a6ca:	mov    eax,DWORD PTR [rbp-0x4]
  40a6cd:	add    rsp,0x30
  40a6d1:	pop    rbp
  40a6d2:	ret    
  40a6d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6dd:	nop    DWORD PTR [rax]

000000000040a6e0 <flatcc_emitter_recycle_page@@Base>:
  40a6e0:	push   rbp
  40a6e1:	mov    rbp,rsp
  40a6e4:	mov    QWORD PTR [rbp-0x10],rdi
  40a6e8:	mov    QWORD PTR [rbp-0x18],rsi
  40a6ec:	mov    rsi,QWORD PTR [rbp-0x18]
  40a6f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a6f4:	cmp    rsi,QWORD PTR [rdi]
  40a6f7:	je     40a70f <flatcc_emitter_recycle_page@@Base+0x2f>
  40a6fd:	mov    rax,QWORD PTR [rbp-0x18]
  40a701:	mov    rcx,QWORD PTR [rbp-0x10]
  40a705:	cmp    rax,QWORD PTR [rcx+0x8]
  40a709:	jne    40a71b <flatcc_emitter_recycle_page@@Base+0x3b>
  40a70f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a716:	jmp    40a7b3 <flatcc_emitter_recycle_page@@Base+0xd3>
  40a71b:	mov    rax,QWORD PTR [rbp-0x18]
  40a71f:	mov    rax,QWORD PTR [rax+0xb88]
  40a726:	mov    rcx,QWORD PTR [rbp-0x18]
  40a72a:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a731:	mov    QWORD PTR [rcx+0xb88],rax
  40a738:	mov    rax,QWORD PTR [rbp-0x18]
  40a73c:	mov    rax,QWORD PTR [rax+0xb80]
  40a743:	mov    rcx,QWORD PTR [rbp-0x18]
  40a747:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a74e:	mov    QWORD PTR [rcx+0xb80],rax
  40a755:	mov    rax,QWORD PTR [rbp-0x10]
  40a759:	mov    rax,QWORD PTR [rax]
  40a75c:	mov    rax,QWORD PTR [rax+0xb88]
  40a763:	mov    rcx,QWORD PTR [rbp-0x18]
  40a767:	mov    QWORD PTR [rcx+0xb88],rax
  40a76e:	mov    rax,QWORD PTR [rbp-0x10]
  40a772:	mov    rax,QWORD PTR [rax]
  40a775:	mov    rcx,QWORD PTR [rbp-0x18]
  40a779:	mov    QWORD PTR [rcx+0xb80],rax
  40a780:	mov    rax,QWORD PTR [rbp-0x18]
  40a784:	mov    rcx,QWORD PTR [rbp-0x18]
  40a788:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a78f:	mov    QWORD PTR [rcx+0xb80],rax
  40a796:	mov    rax,QWORD PTR [rbp-0x18]
  40a79a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a79e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a7a5:	mov    QWORD PTR [rcx+0xb88],rax
  40a7ac:	mov    DWORD PTR [rbp-0x4],0x0
  40a7b3:	mov    eax,DWORD PTR [rbp-0x4]
  40a7b6:	pop    rbp
  40a7b7:	ret    
  40a7b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a7c0 <flatcc_emitter_reset@@Base>:
  40a7c0:	push   rbp
  40a7c1:	mov    rbp,rsp
  40a7c4:	sub    rsp,0x20
  40a7c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7d0:	mov    rdi,QWORD PTR [rdi]
  40a7d3:	mov    QWORD PTR [rbp-0x10],rdi
  40a7d7:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7db:	cmp    QWORD PTR [rdi],0x0
  40a7df:	jne    40a7ea <flatcc_emitter_reset@@Base+0x2a>
  40a7e5:	jmp    40a959 <flatcc_emitter_reset@@Base+0x199>
  40a7ea:	xor    eax,eax
  40a7ec:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7f0:	mov    rcx,QWORD PTR [rcx]
  40a7f3:	mov    rdx,QWORD PTR [rbp-0x8]
  40a7f7:	mov    QWORD PTR [rdx+0x8],rcx
  40a7fb:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7ff:	mov    rcx,QWORD PTR [rcx]
  40a802:	add    rcx,0x5c0
  40a809:	mov    rdx,QWORD PTR [rbp-0x8]
  40a80d:	mov    QWORD PTR [rdx+0x10],rcx
  40a811:	mov    rcx,QWORD PTR [rbp-0x8]
  40a815:	mov    rcx,QWORD PTR [rcx+0x10]
  40a819:	mov    rdx,QWORD PTR [rbp-0x8]
  40a81d:	mov    QWORD PTR [rdx+0x20],rcx
  40a821:	mov    rcx,QWORD PTR [rbp-0x8]
  40a825:	mov    QWORD PTR [rcx+0x18],0x5c0
  40a82d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a831:	mov    QWORD PTR [rcx+0x28],0x5c0
  40a839:	mov    rcx,QWORD PTR [rbp-0x8]
  40a83d:	mov    rcx,QWORD PTR [rcx+0x18]
  40a841:	mov    esi,ecx
  40a843:	sub    eax,esi
  40a845:	mov    rcx,QWORD PTR [rbp-0x8]
  40a849:	mov    rcx,QWORD PTR [rcx]
  40a84c:	mov    DWORD PTR [rcx+0xb90],eax
  40a852:	mov    rcx,QWORD PTR [rbp-0x8]
  40a856:	cmp    QWORD PTR [rcx+0x40],0x0
  40a85b:	jne    40a871 <flatcc_emitter_reset@@Base+0xb1>
  40a861:	mov    rax,QWORD PTR [rbp-0x8]
  40a865:	mov    rax,QWORD PTR [rax+0x30]
  40a869:	mov    rcx,QWORD PTR [rbp-0x8]
  40a86d:	mov    QWORD PTR [rcx+0x40],rax
  40a871:	mov    rax,QWORD PTR [rbp-0x8]
  40a875:	imul   rax,QWORD PTR [rax+0x40],0x3
  40a87a:	shr    rax,0x2
  40a87e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a882:	mov    rcx,QWORD PTR [rcx+0x30]
  40a886:	shr    rcx,0x2
  40a88a:	add    rax,rcx
  40a88d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a891:	mov    QWORD PTR [rcx+0x40],rax
  40a895:	mov    rax,QWORD PTR [rbp-0x8]
  40a899:	mov    QWORD PTR [rax+0x30],0x0
  40a8a1:	xor    eax,eax
  40a8a3:	mov    cl,al
  40a8a5:	mov    rdx,QWORD PTR [rbp-0x8]
  40a8a9:	mov    rdx,QWORD PTR [rdx+0x40]
  40a8ad:	shl    rdx,0x1
  40a8b1:	mov    rsi,QWORD PTR [rbp-0x8]
  40a8b5:	cmp    rdx,QWORD PTR [rsi+0x38]
  40a8b9:	mov    BYTE PTR [rbp-0x11],cl
  40a8bc:	jae    40a8de <flatcc_emitter_reset@@Base+0x11e>
  40a8c2:	mov    rax,QWORD PTR [rbp-0x8]
  40a8c6:	mov    rax,QWORD PTR [rax+0x8]
  40a8ca:	mov    rax,QWORD PTR [rax+0xb80]
  40a8d1:	mov    rcx,QWORD PTR [rbp-0x8]
  40a8d5:	cmp    rax,QWORD PTR [rcx]
  40a8d8:	setne  dl
  40a8db:	mov    BYTE PTR [rbp-0x11],dl
  40a8de:	mov    al,BYTE PTR [rbp-0x11]
  40a8e1:	test   al,0x1
  40a8e3:	jne    40a8ee <flatcc_emitter_reset@@Base+0x12e>
  40a8e9:	jmp    40a959 <flatcc_emitter_reset@@Base+0x199>
  40a8ee:	mov    rax,QWORD PTR [rbp-0x8]
  40a8f2:	mov    rax,QWORD PTR [rax+0x8]
  40a8f6:	mov    rax,QWORD PTR [rax+0xb80]
  40a8fd:	mov    QWORD PTR [rbp-0x10],rax
  40a901:	mov    rax,QWORD PTR [rbp-0x10]
  40a905:	mov    rax,QWORD PTR [rax+0xb80]
  40a90c:	mov    rcx,QWORD PTR [rbp-0x8]
  40a910:	mov    rcx,QWORD PTR [rcx+0x8]
  40a914:	mov    QWORD PTR [rcx+0xb80],rax
  40a91b:	mov    rax,QWORD PTR [rbp-0x8]
  40a91f:	mov    rax,QWORD PTR [rax+0x8]
  40a923:	mov    rcx,QWORD PTR [rbp-0x10]
  40a927:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a92e:	mov    QWORD PTR [rcx+0xb88],rax
  40a935:	mov    rax,QWORD PTR [rbp-0x10]
  40a939:	mov    rdi,rax
  40a93c:	call   403030 <free@plt>
  40a941:	mov    rax,QWORD PTR [rbp-0x8]
  40a945:	mov    rcx,QWORD PTR [rax+0x38]
  40a949:	sub    rcx,0xb80
  40a950:	mov    QWORD PTR [rax+0x38],rcx
  40a954:	jmp    40a8a1 <flatcc_emitter_reset@@Base+0xe1>
  40a959:	add    rsp,0x20
  40a95d:	pop    rbp
  40a95e:	ret    
  40a95f:	nop

000000000040a960 <flatcc_emitter_clear@@Base>:
  40a960:	push   rbp
  40a961:	mov    rbp,rsp
  40a964:	sub    rsp,0x10
  40a968:	mov    QWORD PTR [rbp-0x8],rdi
  40a96c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a970:	mov    rdi,QWORD PTR [rdi]
  40a973:	mov    QWORD PTR [rbp-0x10],rdi
  40a977:	cmp    QWORD PTR [rbp-0x10],0x0
  40a97c:	jne    40a987 <flatcc_emitter_clear@@Base+0x27>
  40a982:	jmp    40a9f7 <flatcc_emitter_clear@@Base+0x97>
  40a987:	mov    rax,QWORD PTR [rbp-0x10]
  40a98b:	mov    rax,QWORD PTR [rax+0xb88]
  40a992:	mov    QWORD PTR [rax+0xb80],0x0
  40a99d:	mov    rax,QWORD PTR [rbp-0x10]
  40a9a1:	cmp    QWORD PTR [rax+0xb80],0x0
  40a9a9:	je     40a9d6 <flatcc_emitter_clear@@Base+0x76>
  40a9af:	mov    rax,QWORD PTR [rbp-0x10]
  40a9b3:	mov    rax,QWORD PTR [rax+0xb80]
  40a9ba:	mov    QWORD PTR [rbp-0x10],rax
  40a9be:	mov    rax,QWORD PTR [rbp-0x10]
  40a9c2:	mov    rax,QWORD PTR [rax+0xb88]
  40a9c9:	mov    rdi,rax
  40a9cc:	call   403030 <free@plt>
  40a9d1:	jmp    40a99d <flatcc_emitter_clear@@Base+0x3d>
  40a9d6:	mov    rax,QWORD PTR [rbp-0x10]
  40a9da:	mov    rdi,rax
  40a9dd:	call   403030 <free@plt>
  40a9e2:	xor    esi,esi
  40a9e4:	mov    ecx,0x48
  40a9e9:	mov    edx,ecx
  40a9eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a9ef:	mov    rdi,rax
  40a9f2:	call   4030a0 <memset@plt>
  40a9f7:	add    rsp,0x10
  40a9fb:	pop    rbp
  40a9fc:	ret    
  40a9fd:	nop    DWORD PTR [rax]

000000000040aa00 <flatcc_emitter@@Base>:
  40aa00:	push   rbp
  40aa01:	mov    rbp,rsp
  40aa04:	sub    rsp,0x40
  40aa08:	mov    QWORD PTR [rbp-0x10],rdi
  40aa0c:	mov    QWORD PTR [rbp-0x18],rsi
  40aa10:	mov    DWORD PTR [rbp-0x1c],edx
  40aa13:	mov    DWORD PTR [rbp-0x20],ecx
  40aa16:	mov    QWORD PTR [rbp-0x28],r8
  40aa1a:	mov    rsi,QWORD PTR [rbp-0x10]
  40aa1e:	mov    QWORD PTR [rbp-0x30],rsi
  40aa22:	mov    rsi,QWORD PTR [rbp-0x28]
  40aa26:	mov    rdi,QWORD PTR [rbp-0x30]
  40aa2a:	add    rsi,QWORD PTR [rdi+0x30]
  40aa2e:	mov    QWORD PTR [rdi+0x30],rsi
  40aa32:	cmp    DWORD PTR [rbp-0x20],0x0
  40aa36:	jge    40aaf8 <flatcc_emitter@@Base+0xf8>
  40aa3c:	mov    rax,QWORD PTR [rbp-0x28]
  40aa40:	mov    rcx,QWORD PTR [rbp-0x30]
  40aa44:	cmp    rax,QWORD PTR [rcx+0x18]
  40aa48:	ja     40aa8c <flatcc_emitter@@Base+0x8c>
  40aa4e:	xor    eax,eax
  40aa50:	mov    ecx,eax
  40aa52:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa56:	mov    rsi,QWORD PTR [rbp-0x30]
  40aa5a:	mov    rdi,QWORD PTR [rsi+0x10]
  40aa5e:	sub    rcx,rdx
  40aa61:	add    rdi,rcx
  40aa64:	mov    QWORD PTR [rsi+0x10],rdi
  40aa68:	mov    rcx,QWORD PTR [rbp-0x28]
  40aa6c:	mov    rdx,QWORD PTR [rbp-0x30]
  40aa70:	mov    rsi,QWORD PTR [rdx+0x18]
  40aa74:	sub    rsi,rcx
  40aa77:	mov    QWORD PTR [rdx+0x18],rsi
  40aa7b:	mov    rcx,QWORD PTR [rbp-0x30]
  40aa7f:	mov    rcx,QWORD PTR [rcx+0x10]
  40aa83:	mov    QWORD PTR [rbp-0x38],rcx
  40aa87:	jmp    40aba6 <flatcc_emitter@@Base+0x1a6>
  40aa8c:	mov    eax,DWORD PTR [rbp-0x1c]
  40aa8f:	mov    rcx,QWORD PTR [rbp-0x18]
  40aa93:	movsxd rdx,eax
  40aa96:	shl    rdx,0x4
  40aa9a:	add    rcx,rdx
  40aa9d:	mov    QWORD PTR [rbp-0x18],rcx
  40aaa1:	mov    eax,DWORD PTR [rbp-0x1c]
  40aaa4:	mov    ecx,eax
  40aaa6:	add    ecx,0xffffffff
  40aaa9:	mov    DWORD PTR [rbp-0x1c],ecx
  40aaac:	cmp    eax,0x0
  40aaaf:	je     40aaf3 <flatcc_emitter@@Base+0xf3>
  40aab5:	mov    rax,QWORD PTR [rbp-0x18]
  40aab9:	add    rax,0xfffffffffffffff0
  40aabd:	mov    QWORD PTR [rbp-0x18],rax
  40aac1:	mov    rdi,QWORD PTR [rbp-0x30]
  40aac5:	mov    rax,QWORD PTR [rbp-0x18]
  40aac9:	mov    rsi,QWORD PTR [rax]
  40aacc:	mov    rax,QWORD PTR [rbp-0x18]
  40aad0:	mov    rdx,QWORD PTR [rax+0x8]
  40aad4:	call   40ac10 <flatcc_emitter@@Base+0x210>
  40aad9:	cmp    eax,0x0
  40aadc:	je     40aaee <flatcc_emitter@@Base+0xee>
  40aae2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aae9:	jmp    40abff <flatcc_emitter@@Base+0x1ff>
  40aaee:	jmp    40aaa1 <flatcc_emitter@@Base+0xa1>
  40aaf3:	jmp    40ab9a <flatcc_emitter@@Base+0x19a>
  40aaf8:	mov    rax,QWORD PTR [rbp-0x28]
  40aafc:	mov    rcx,QWORD PTR [rbp-0x30]
  40ab00:	cmp    rax,QWORD PTR [rcx+0x28]
  40ab04:	ja     40ab3e <flatcc_emitter@@Base+0x13e>
  40ab0a:	mov    rax,QWORD PTR [rbp-0x30]
  40ab0e:	mov    rax,QWORD PTR [rax+0x20]
  40ab12:	mov    QWORD PTR [rbp-0x38],rax
  40ab16:	mov    rax,QWORD PTR [rbp-0x28]
  40ab1a:	mov    rcx,QWORD PTR [rbp-0x30]
  40ab1e:	add    rax,QWORD PTR [rcx+0x20]
  40ab22:	mov    QWORD PTR [rcx+0x20],rax
  40ab26:	mov    rax,QWORD PTR [rbp-0x28]
  40ab2a:	mov    rcx,QWORD PTR [rbp-0x30]
  40ab2e:	mov    rdx,QWORD PTR [rcx+0x28]
  40ab32:	sub    rdx,rax
  40ab35:	mov    QWORD PTR [rcx+0x28],rdx
  40ab39:	jmp    40aba6 <flatcc_emitter@@Base+0x1a6>
  40ab3e:	jmp    40ab43 <flatcc_emitter@@Base+0x143>
  40ab43:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab46:	mov    ecx,eax
  40ab48:	add    ecx,0xffffffff
  40ab4b:	mov    DWORD PTR [rbp-0x1c],ecx
  40ab4e:	cmp    eax,0x0
  40ab51:	je     40ab95 <flatcc_emitter@@Base+0x195>
  40ab57:	mov    rdi,QWORD PTR [rbp-0x30]
  40ab5b:	mov    rax,QWORD PTR [rbp-0x18]
  40ab5f:	mov    rsi,QWORD PTR [rax]
  40ab62:	mov    rax,QWORD PTR [rbp-0x18]
  40ab66:	mov    rdx,QWORD PTR [rax+0x8]
  40ab6a:	call   40ad10 <flatcc_emitter@@Base+0x310>
  40ab6f:	cmp    eax,0x0
  40ab72:	je     40ab84 <flatcc_emitter@@Base+0x184>
  40ab78:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ab7f:	jmp    40abff <flatcc_emitter@@Base+0x1ff>
  40ab84:	mov    rax,QWORD PTR [rbp-0x18]
  40ab88:	add    rax,0x10
  40ab8c:	mov    QWORD PTR [rbp-0x18],rax
  40ab90:	jmp    40ab43 <flatcc_emitter@@Base+0x143>
  40ab95:	jmp    40ab9a <flatcc_emitter@@Base+0x19a>
  40ab9a:	mov    DWORD PTR [rbp-0x4],0x0
  40aba1:	jmp    40abff <flatcc_emitter@@Base+0x1ff>
  40aba6:	jmp    40abab <flatcc_emitter@@Base+0x1ab>
  40abab:	mov    eax,DWORD PTR [rbp-0x1c]
  40abae:	mov    ecx,eax
  40abb0:	add    ecx,0xffffffff
  40abb3:	mov    DWORD PTR [rbp-0x1c],ecx
  40abb6:	cmp    eax,0x0
  40abb9:	je     40abf8 <flatcc_emitter@@Base+0x1f8>
  40abbf:	mov    rdi,QWORD PTR [rbp-0x38]
  40abc3:	mov    rax,QWORD PTR [rbp-0x18]
  40abc7:	mov    rsi,QWORD PTR [rax]
  40abca:	mov    rax,QWORD PTR [rbp-0x18]
  40abce:	mov    rdx,QWORD PTR [rax+0x8]
  40abd2:	call   4030e0 <memcpy@plt>
  40abd7:	mov    rax,QWORD PTR [rbp-0x18]
  40abdb:	mov    rax,QWORD PTR [rax+0x8]
  40abdf:	add    rax,QWORD PTR [rbp-0x38]
  40abe3:	mov    QWORD PTR [rbp-0x38],rax
  40abe7:	mov    rax,QWORD PTR [rbp-0x18]
  40abeb:	add    rax,0x10
  40abef:	mov    QWORD PTR [rbp-0x18],rax
  40abf3:	jmp    40abab <flatcc_emitter@@Base+0x1ab>
  40abf8:	mov    DWORD PTR [rbp-0x4],0x0
  40abff:	mov    eax,DWORD PTR [rbp-0x4]
  40ac02:	add    rsp,0x40
  40ac06:	pop    rbp
  40ac07:	ret    
  40ac08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac10:	push   rbp
  40ac11:	mov    rbp,rsp
  40ac14:	sub    rsp,0x30
  40ac18:	mov    QWORD PTR [rbp-0x10],rdi
  40ac1c:	mov    QWORD PTR [rbp-0x18],rsi
  40ac20:	mov    QWORD PTR [rbp-0x20],rdx
  40ac24:	mov    rdx,QWORD PTR [rbp-0x20]
  40ac28:	add    rdx,QWORD PTR [rbp-0x18]
  40ac2c:	mov    QWORD PTR [rbp-0x18],rdx
  40ac30:	cmp    QWORD PTR [rbp-0x20],0x0
  40ac35:	je     40acff <flatcc_emitter@@Base+0x2ff>
  40ac3b:	mov    rax,QWORD PTR [rbp-0x20]
  40ac3f:	mov    QWORD PTR [rbp-0x28],rax
  40ac43:	mov    rax,QWORD PTR [rbp-0x28]
  40ac47:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac4b:	cmp    rax,QWORD PTR [rcx+0x18]
  40ac4f:	jbe    40ac94 <flatcc_emitter@@Base+0x294>
  40ac55:	mov    rax,QWORD PTR [rbp-0x10]
  40ac59:	mov    rax,QWORD PTR [rax+0x18]
  40ac5d:	mov    QWORD PTR [rbp-0x28],rax
  40ac61:	cmp    QWORD PTR [rbp-0x28],0x0
  40ac66:	jne    40ac8f <flatcc_emitter@@Base+0x28f>
  40ac6c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac70:	call   40af40 <flatcc_emitter_copy_buffer@@Base+0x150>
  40ac75:	cmp    eax,0x0
  40ac78:	je     40ac8a <flatcc_emitter@@Base+0x28a>
  40ac7e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ac85:	jmp    40ad06 <flatcc_emitter@@Base+0x306>
  40ac8a:	jmp    40ac30 <flatcc_emitter@@Base+0x230>
  40ac8f:	jmp    40ac94 <flatcc_emitter@@Base+0x294>
  40ac94:	xor    eax,eax
  40ac96:	mov    ecx,eax
  40ac98:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac9c:	mov    rsi,QWORD PTR [rbp-0x10]
  40aca0:	mov    rdi,QWORD PTR [rsi+0x10]
  40aca4:	mov    r8,rcx
  40aca7:	sub    r8,rdx
  40acaa:	add    rdi,r8
  40acad:	mov    QWORD PTR [rsi+0x10],rdi
  40acb1:	mov    rdx,QWORD PTR [rbp-0x28]
  40acb5:	mov    rsi,QWORD PTR [rbp-0x10]
  40acb9:	mov    rdi,QWORD PTR [rsi+0x18]
  40acbd:	sub    rdi,rdx
  40acc0:	mov    QWORD PTR [rsi+0x18],rdi
  40acc4:	mov    rdx,QWORD PTR [rbp-0x28]
  40acc8:	mov    rsi,QWORD PTR [rbp-0x18]
  40accc:	sub    rcx,rdx
  40accf:	add    rsi,rcx
  40acd2:	mov    QWORD PTR [rbp-0x18],rsi
  40acd6:	mov    rcx,QWORD PTR [rbp-0x28]
  40acda:	mov    rdx,QWORD PTR [rbp-0x20]
  40acde:	sub    rdx,rcx
  40ace1:	mov    QWORD PTR [rbp-0x20],rdx
  40ace5:	mov    rcx,QWORD PTR [rbp-0x10]
  40ace9:	mov    rdi,QWORD PTR [rcx+0x10]
  40aced:	mov    rsi,QWORD PTR [rbp-0x18]
  40acf1:	mov    rdx,QWORD PTR [rbp-0x28]
  40acf5:	call   4030e0 <memcpy@plt>
  40acfa:	jmp    40ac30 <flatcc_emitter@@Base+0x230>
  40acff:	mov    DWORD PTR [rbp-0x4],0x0
  40ad06:	mov    eax,DWORD PTR [rbp-0x4]
  40ad09:	add    rsp,0x30
  40ad0d:	pop    rbp
  40ad0e:	ret    
  40ad0f:	nop
  40ad10:	push   rbp
  40ad11:	mov    rbp,rsp
  40ad14:	sub    rsp,0x30
  40ad18:	mov    QWORD PTR [rbp-0x10],rdi
  40ad1c:	mov    QWORD PTR [rbp-0x18],rsi
  40ad20:	mov    QWORD PTR [rbp-0x20],rdx
  40ad24:	cmp    QWORD PTR [rbp-0x20],0x0
  40ad29:	je     40ade0 <flatcc_emitter@@Base+0x3e0>
  40ad2f:	mov    rax,QWORD PTR [rbp-0x20]
  40ad33:	mov    QWORD PTR [rbp-0x28],rax
  40ad37:	mov    rax,QWORD PTR [rbp-0x28]
  40ad3b:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad3f:	cmp    rax,QWORD PTR [rcx+0x28]
  40ad43:	jbe    40ad88 <flatcc_emitter@@Base+0x388>
  40ad49:	mov    rax,QWORD PTR [rbp-0x10]
  40ad4d:	mov    rax,QWORD PTR [rax+0x28]
  40ad51:	mov    QWORD PTR [rbp-0x28],rax
  40ad55:	cmp    QWORD PTR [rbp-0x28],0x0
  40ad5a:	jne    40ad83 <flatcc_emitter@@Base+0x383>
  40ad60:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad64:	call   40b160 <flatcc_emitter_copy_buffer@@Base+0x370>
  40ad69:	cmp    eax,0x0
  40ad6c:	je     40ad7e <flatcc_emitter@@Base+0x37e>
  40ad72:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ad79:	jmp    40ade7 <flatcc_emitter@@Base+0x3e7>
  40ad7e:	jmp    40ad24 <flatcc_emitter@@Base+0x324>
  40ad83:	jmp    40ad88 <flatcc_emitter@@Base+0x388>
  40ad88:	mov    rax,QWORD PTR [rbp-0x10]
  40ad8c:	mov    rdi,QWORD PTR [rax+0x20]
  40ad90:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad94:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad98:	call   4030e0 <memcpy@plt>
  40ad9d:	mov    rax,QWORD PTR [rbp-0x28]
  40ada1:	mov    rdx,QWORD PTR [rbp-0x20]
  40ada5:	sub    rdx,rax
  40ada8:	mov    QWORD PTR [rbp-0x20],rdx
  40adac:	mov    rax,QWORD PTR [rbp-0x28]
  40adb0:	add    rax,QWORD PTR [rbp-0x18]
  40adb4:	mov    QWORD PTR [rbp-0x18],rax
  40adb8:	mov    rax,QWORD PTR [rbp-0x28]
  40adbc:	mov    rdx,QWORD PTR [rbp-0x10]
  40adc0:	add    rax,QWORD PTR [rdx+0x20]
  40adc4:	mov    QWORD PTR [rdx+0x20],rax
  40adc8:	mov    rax,QWORD PTR [rbp-0x28]
  40adcc:	mov    rdx,QWORD PTR [rbp-0x10]
  40add0:	mov    rsi,QWORD PTR [rdx+0x28]
  40add4:	sub    rsi,rax
  40add7:	mov    QWORD PTR [rdx+0x28],rsi
  40addb:	jmp    40ad24 <flatcc_emitter@@Base+0x324>
  40ade0:	mov    DWORD PTR [rbp-0x4],0x0
  40ade7:	mov    eax,DWORD PTR [rbp-0x4]
  40adea:	add    rsp,0x30
  40adee:	pop    rbp
  40adef:	ret    

000000000040adf0 <flatcc_emitter_copy_buffer@@Base>:
  40adf0:	push   rbp
  40adf1:	mov    rbp,rsp
  40adf4:	sub    rsp,0x30
  40adf8:	mov    QWORD PTR [rbp-0x10],rdi
  40adfc:	mov    QWORD PTR [rbp-0x18],rsi
  40ae00:	mov    QWORD PTR [rbp-0x20],rdx
  40ae04:	mov    rdx,QWORD PTR [rbp-0x20]
  40ae08:	mov    rsi,QWORD PTR [rbp-0x10]
  40ae0c:	cmp    rdx,QWORD PTR [rsi+0x30]
  40ae10:	jae    40ae23 <flatcc_emitter_copy_buffer@@Base+0x33>
  40ae16:	mov    QWORD PTR [rbp-0x8],0x0
  40ae1e:	jmp    40af2f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40ae23:	mov    rax,QWORD PTR [rbp-0x10]
  40ae27:	cmp    QWORD PTR [rax],0x0
  40ae2b:	jne    40ae3e <flatcc_emitter_copy_buffer@@Base+0x4e>
  40ae31:	mov    QWORD PTR [rbp-0x8],0x0
  40ae39:	jmp    40af2f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40ae3e:	mov    rax,QWORD PTR [rbp-0x10]
  40ae42:	mov    rax,QWORD PTR [rax]
  40ae45:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae49:	cmp    rax,QWORD PTR [rcx+0x8]
  40ae4d:	jne    40ae79 <flatcc_emitter_copy_buffer@@Base+0x89>
  40ae53:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae57:	mov    rax,QWORD PTR [rbp-0x10]
  40ae5b:	mov    rsi,QWORD PTR [rax+0x10]
  40ae5f:	mov    rax,QWORD PTR [rbp-0x10]
  40ae63:	mov    rdx,QWORD PTR [rax+0x30]
  40ae67:	call   4030e0 <memcpy@plt>
  40ae6c:	mov    rax,QWORD PTR [rbp-0x18]
  40ae70:	mov    QWORD PTR [rbp-0x8],rax
  40ae74:	jmp    40af2f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40ae79:	mov    eax,0xb80
  40ae7e:	mov    ecx,eax
  40ae80:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae84:	sub    rcx,QWORD PTR [rdx+0x18]
  40ae88:	mov    QWORD PTR [rbp-0x30],rcx
  40ae8c:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae90:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae94:	mov    rsi,QWORD PTR [rcx+0x10]
  40ae98:	mov    rdx,QWORD PTR [rbp-0x30]
  40ae9c:	call   4030e0 <memcpy@plt>
  40aea1:	mov    rcx,QWORD PTR [rbp-0x18]
  40aea5:	add    rcx,QWORD PTR [rbp-0x30]
  40aea9:	mov    QWORD PTR [rbp-0x18],rcx
  40aead:	mov    rcx,QWORD PTR [rbp-0x10]
  40aeb1:	mov    rcx,QWORD PTR [rcx]
  40aeb4:	mov    rcx,QWORD PTR [rcx+0xb80]
  40aebb:	mov    QWORD PTR [rbp-0x28],rcx
  40aebf:	mov    rax,QWORD PTR [rbp-0x28]
  40aec3:	mov    rcx,QWORD PTR [rbp-0x10]
  40aec7:	cmp    rax,QWORD PTR [rcx+0x8]
  40aecb:	je     40af08 <flatcc_emitter_copy_buffer@@Base+0x118>
  40aed1:	mov    eax,0xb80
  40aed6:	mov    edx,eax
  40aed8:	mov    rdi,QWORD PTR [rbp-0x18]
  40aedc:	mov    rsi,QWORD PTR [rbp-0x28]
  40aee0:	call   4030e0 <memcpy@plt>
  40aee5:	mov    rdx,QWORD PTR [rbp-0x18]
  40aee9:	add    rdx,0xb80
  40aef0:	mov    QWORD PTR [rbp-0x18],rdx
  40aef4:	mov    rdx,QWORD PTR [rbp-0x28]
  40aef8:	mov    rdx,QWORD PTR [rdx+0xb80]
  40aeff:	mov    QWORD PTR [rbp-0x28],rdx
  40af03:	jmp    40aebf <flatcc_emitter_copy_buffer@@Base+0xcf>
  40af08:	mov    eax,0xb80
  40af0d:	mov    ecx,eax
  40af0f:	mov    rdi,QWORD PTR [rbp-0x18]
  40af13:	mov    rsi,QWORD PTR [rbp-0x28]
  40af17:	mov    rdx,QWORD PTR [rbp-0x10]
  40af1b:	sub    rcx,QWORD PTR [rdx+0x28]
  40af1f:	mov    rdx,rcx
  40af22:	call   4030e0 <memcpy@plt>
  40af27:	mov    rcx,QWORD PTR [rbp-0x18]
  40af2b:	mov    QWORD PTR [rbp-0x8],rcx
  40af2f:	mov    rax,QWORD PTR [rbp-0x8]
  40af33:	add    rsp,0x30
  40af37:	pop    rbp
  40af38:	ret    
  40af39:	nop    DWORD PTR [rax+0x0]
  40af40:	push   rbp
  40af41:	mov    rbp,rsp
  40af44:	sub    rsp,0x20
  40af48:	mov    QWORD PTR [rbp-0x10],rdi
  40af4c:	mov    QWORD PTR [rbp-0x18],0x0
  40af54:	mov    rdi,QWORD PTR [rbp-0x10]
  40af58:	cmp    QWORD PTR [rdi],0x0
  40af5c:	je     40afbf <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40af62:	mov    rax,QWORD PTR [rbp-0x10]
  40af66:	mov    rax,QWORD PTR [rax]
  40af69:	mov    rax,QWORD PTR [rax+0xb88]
  40af70:	mov    rcx,QWORD PTR [rbp-0x10]
  40af74:	cmp    rax,QWORD PTR [rcx+0x8]
  40af78:	je     40afbf <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40af7e:	mov    rax,QWORD PTR [rbp-0x10]
  40af82:	mov    rax,QWORD PTR [rax]
  40af85:	mov    ecx,DWORD PTR [rax+0xb90]
  40af8b:	sub    ecx,0xb80
  40af91:	mov    rax,QWORD PTR [rbp-0x10]
  40af95:	mov    rax,QWORD PTR [rax]
  40af98:	mov    rax,QWORD PTR [rax+0xb88]
  40af9f:	mov    DWORD PTR [rax+0xb90],ecx
  40afa5:	mov    rax,QWORD PTR [rbp-0x10]
  40afa9:	mov    rax,QWORD PTR [rax]
  40afac:	mov    rax,QWORD PTR [rax+0xb88]
  40afb3:	mov    rdx,QWORD PTR [rbp-0x10]
  40afb7:	mov    QWORD PTR [rdx],rax
  40afba:	jmp    40b102 <flatcc_emitter_copy_buffer@@Base+0x312>
  40afbf:	mov    eax,0xb98
  40afc4:	mov    edi,eax
  40afc6:	call   4030f0 <malloc@plt>
  40afcb:	mov    QWORD PTR [rbp-0x18],rax
  40afcf:	cmp    rax,0x0
  40afd3:	jne    40afe5 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  40afd9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40afe0:	jmp    40b151 <flatcc_emitter_copy_buffer@@Base+0x361>
  40afe5:	mov    rax,QWORD PTR [rbp-0x10]
  40afe9:	mov    rcx,QWORD PTR [rax+0x38]
  40afed:	add    rcx,0xb80
  40aff4:	mov    QWORD PTR [rax+0x38],rcx
  40aff8:	mov    rax,QWORD PTR [rbp-0x10]
  40affc:	cmp    QWORD PTR [rax],0x0
  40b000:	je     40b060 <flatcc_emitter_copy_buffer@@Base+0x270>
  40b006:	mov    rax,QWORD PTR [rbp-0x10]
  40b00a:	mov    rax,QWORD PTR [rax+0x8]
  40b00e:	mov    rcx,QWORD PTR [rbp-0x18]
  40b012:	mov    QWORD PTR [rcx+0xb88],rax
  40b019:	mov    rax,QWORD PTR [rbp-0x10]
  40b01d:	mov    rax,QWORD PTR [rax]
  40b020:	mov    rcx,QWORD PTR [rbp-0x18]
  40b024:	mov    QWORD PTR [rcx+0xb80],rax
  40b02b:	mov    rax,QWORD PTR [rbp-0x18]
  40b02f:	mov    rcx,QWORD PTR [rbp-0x10]
  40b033:	mov    rcx,QWORD PTR [rcx]
  40b036:	mov    QWORD PTR [rcx+0xb88],rax
  40b03d:	mov    rax,QWORD PTR [rbp-0x18]
  40b041:	mov    rcx,QWORD PTR [rbp-0x10]
  40b045:	mov    rcx,QWORD PTR [rcx+0x8]
  40b049:	mov    QWORD PTR [rcx+0xb80],rax
  40b050:	mov    rax,QWORD PTR [rbp-0x18]
  40b054:	mov    rcx,QWORD PTR [rbp-0x10]
  40b058:	mov    QWORD PTR [rcx],rax
  40b05b:	jmp    40b102 <flatcc_emitter_copy_buffer@@Base+0x312>
  40b060:	xor    eax,eax
  40b062:	mov    ecx,0xb80
  40b067:	mov    edx,ecx
  40b069:	mov    rsi,QWORD PTR [rbp-0x18]
  40b06d:	mov    rdi,QWORD PTR [rbp-0x10]
  40b071:	mov    QWORD PTR [rdi],rsi
  40b074:	mov    rsi,QWORD PTR [rbp-0x18]
  40b078:	mov    rdi,QWORD PTR [rbp-0x10]
  40b07c:	mov    QWORD PTR [rdi+0x8],rsi
  40b080:	mov    rsi,QWORD PTR [rbp-0x18]
  40b084:	mov    rdi,QWORD PTR [rbp-0x18]
  40b088:	mov    QWORD PTR [rdi+0xb80],rsi
  40b08f:	mov    rsi,QWORD PTR [rbp-0x18]
  40b093:	mov    rdi,QWORD PTR [rbp-0x18]
  40b097:	mov    QWORD PTR [rdi+0xb88],rsi
  40b09e:	mov    rsi,QWORD PTR [rbp-0x10]
  40b0a2:	mov    rsi,QWORD PTR [rsi]
  40b0a5:	add    rsi,0x5c0
  40b0ac:	mov    rdi,QWORD PTR [rbp-0x10]
  40b0b0:	mov    QWORD PTR [rdi+0x10],rsi
  40b0b4:	mov    rsi,QWORD PTR [rbp-0x10]
  40b0b8:	mov    rsi,QWORD PTR [rsi+0x10]
  40b0bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40b0c0:	mov    QWORD PTR [rdi+0x20],rsi
  40b0c4:	mov    rsi,QWORD PTR [rbp-0x10]
  40b0c8:	mov    QWORD PTR [rsi+0x18],0x5c0
  40b0d0:	mov    rsi,QWORD PTR [rbp-0x10]
  40b0d4:	sub    rdx,QWORD PTR [rsi+0x18]
  40b0d8:	mov    rsi,QWORD PTR [rbp-0x10]
  40b0dc:	mov    QWORD PTR [rsi+0x28],rdx
  40b0e0:	mov    rdx,QWORD PTR [rbp-0x10]
  40b0e4:	mov    rdx,QWORD PTR [rdx+0x18]
  40b0e8:	mov    ecx,edx
  40b0ea:	sub    eax,ecx
  40b0ec:	mov    rdx,QWORD PTR [rbp-0x18]
  40b0f0:	mov    DWORD PTR [rdx+0xb90],eax
  40b0f6:	mov    DWORD PTR [rbp-0x4],0x0
  40b0fd:	jmp    40b151 <flatcc_emitter_copy_buffer@@Base+0x361>
  40b102:	mov    rax,QWORD PTR [rbp-0x10]
  40b106:	mov    rax,QWORD PTR [rax]
  40b109:	add    rax,0xb80
  40b10f:	mov    rcx,QWORD PTR [rbp-0x10]
  40b113:	mov    QWORD PTR [rcx+0x10],rax
  40b117:	mov    rax,QWORD PTR [rbp-0x10]
  40b11b:	mov    QWORD PTR [rax+0x18],0xb80
  40b123:	mov    rax,QWORD PTR [rbp-0x10]
  40b127:	mov    rax,QWORD PTR [rax]
  40b12a:	mov    rax,QWORD PTR [rax+0xb80]
  40b131:	mov    edx,DWORD PTR [rax+0xb90]
  40b137:	sub    edx,0xb80
  40b13d:	mov    rax,QWORD PTR [rbp-0x10]
  40b141:	mov    rax,QWORD PTR [rax]
  40b144:	mov    DWORD PTR [rax+0xb90],edx
  40b14a:	mov    DWORD PTR [rbp-0x4],0x0
  40b151:	mov    eax,DWORD PTR [rbp-0x4]
  40b154:	add    rsp,0x20
  40b158:	pop    rbp
  40b159:	ret    
  40b15a:	nop    WORD PTR [rax+rax*1+0x0]
  40b160:	push   rbp
  40b161:	mov    rbp,rsp
  40b164:	sub    rsp,0x20
  40b168:	mov    QWORD PTR [rbp-0x10],rdi
  40b16c:	mov    QWORD PTR [rbp-0x18],0x0
  40b174:	mov    rdi,QWORD PTR [rbp-0x10]
  40b178:	cmp    QWORD PTR [rdi+0x8],0x0
  40b17d:	je     40b1bb <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b183:	mov    rax,QWORD PTR [rbp-0x10]
  40b187:	mov    rax,QWORD PTR [rax+0x8]
  40b18b:	mov    rax,QWORD PTR [rax+0xb80]
  40b192:	mov    rcx,QWORD PTR [rbp-0x10]
  40b196:	cmp    rax,QWORD PTR [rcx]
  40b199:	je     40b1bb <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b19f:	mov    rax,QWORD PTR [rbp-0x10]
  40b1a3:	mov    rax,QWORD PTR [rax+0x8]
  40b1a7:	mov    rax,QWORD PTR [rax+0xb80]
  40b1ae:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1b2:	mov    QWORD PTR [rcx+0x8],rax
  40b1b6:	jmp    40b300 <flatcc_emitter_copy_buffer@@Base+0x510>
  40b1bb:	mov    eax,0xb98
  40b1c0:	mov    edi,eax
  40b1c2:	call   4030f0 <malloc@plt>
  40b1c7:	mov    QWORD PTR [rbp-0x18],rax
  40b1cb:	cmp    rax,0x0
  40b1cf:	jne    40b1e1 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  40b1d5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b1dc:	jmp    40b34c <flatcc_emitter_copy_buffer@@Base+0x55c>
  40b1e1:	mov    rax,QWORD PTR [rbp-0x10]
  40b1e5:	mov    rcx,QWORD PTR [rax+0x38]
  40b1e9:	add    rcx,0xb80
  40b1f0:	mov    QWORD PTR [rax+0x38],rcx
  40b1f4:	mov    rax,QWORD PTR [rbp-0x10]
  40b1f8:	cmp    QWORD PTR [rax+0x8],0x0
  40b1fd:	je     40b25e <flatcc_emitter_copy_buffer@@Base+0x46e>
  40b203:	mov    rax,QWORD PTR [rbp-0x10]
  40b207:	mov    rax,QWORD PTR [rax+0x8]
  40b20b:	mov    rcx,QWORD PTR [rbp-0x18]
  40b20f:	mov    QWORD PTR [rcx+0xb88],rax
  40b216:	mov    rax,QWORD PTR [rbp-0x10]
  40b21a:	mov    rax,QWORD PTR [rax]
  40b21d:	mov    rcx,QWORD PTR [rbp-0x18]
  40b221:	mov    QWORD PTR [rcx+0xb80],rax
  40b228:	mov    rax,QWORD PTR [rbp-0x18]
  40b22c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b230:	mov    rcx,QWORD PTR [rcx]
  40b233:	mov    QWORD PTR [rcx+0xb88],rax
  40b23a:	mov    rax,QWORD PTR [rbp-0x18]
  40b23e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b242:	mov    rcx,QWORD PTR [rcx+0x8]
  40b246:	mov    QWORD PTR [rcx+0xb80],rax
  40b24d:	mov    rax,QWORD PTR [rbp-0x18]
  40b251:	mov    rcx,QWORD PTR [rbp-0x10]
  40b255:	mov    QWORD PTR [rcx+0x8],rax
  40b259:	jmp    40b300 <flatcc_emitter_copy_buffer@@Base+0x510>
  40b25e:	xor    eax,eax
  40b260:	mov    ecx,0xb80
  40b265:	mov    edx,ecx
  40b267:	mov    rsi,QWORD PTR [rbp-0x18]
  40b26b:	mov    rdi,QWORD PTR [rbp-0x10]
  40b26f:	mov    QWORD PTR [rdi],rsi
  40b272:	mov    rsi,QWORD PTR [rbp-0x18]
  40b276:	mov    rdi,QWORD PTR [rbp-0x10]
  40b27a:	mov    QWORD PTR [rdi+0x8],rsi
  40b27e:	mov    rsi,QWORD PTR [rbp-0x18]
  40b282:	mov    rdi,QWORD PTR [rbp-0x18]
  40b286:	mov    QWORD PTR [rdi+0xb80],rsi
  40b28d:	mov    rsi,QWORD PTR [rbp-0x18]
  40b291:	mov    rdi,QWORD PTR [rbp-0x18]
  40b295:	mov    QWORD PTR [rdi+0xb88],rsi
  40b29c:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2a0:	mov    rsi,QWORD PTR [rsi]
  40b2a3:	add    rsi,0x5c0
  40b2aa:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2ae:	mov    QWORD PTR [rdi+0x10],rsi
  40b2b2:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2b6:	mov    rsi,QWORD PTR [rsi+0x10]
  40b2ba:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2be:	mov    QWORD PTR [rdi+0x20],rsi
  40b2c2:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2c6:	mov    QWORD PTR [rsi+0x18],0x5c0
  40b2ce:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2d2:	sub    rdx,QWORD PTR [rsi+0x18]
  40b2d6:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2da:	mov    QWORD PTR [rsi+0x28],rdx
  40b2de:	mov    rdx,QWORD PTR [rbp-0x10]
  40b2e2:	mov    rdx,QWORD PTR [rdx+0x18]
  40b2e6:	mov    ecx,edx
  40b2e8:	sub    eax,ecx
  40b2ea:	mov    rdx,QWORD PTR [rbp-0x18]
  40b2ee:	mov    DWORD PTR [rdx+0xb90],eax
  40b2f4:	mov    DWORD PTR [rbp-0x4],0x0
  40b2fb:	jmp    40b34c <flatcc_emitter_copy_buffer@@Base+0x55c>
  40b300:	mov    rax,QWORD PTR [rbp-0x10]
  40b304:	mov    rax,QWORD PTR [rax+0x8]
  40b308:	mov    rcx,QWORD PTR [rbp-0x10]
  40b30c:	mov    QWORD PTR [rcx+0x20],rax
  40b310:	mov    rax,QWORD PTR [rbp-0x10]
  40b314:	mov    QWORD PTR [rax+0x28],0xb80
  40b31c:	mov    rax,QWORD PTR [rbp-0x10]
  40b320:	mov    rax,QWORD PTR [rax+0x8]
  40b324:	mov    rax,QWORD PTR [rax+0xb88]
  40b32b:	mov    edx,DWORD PTR [rax+0xb90]
  40b331:	add    edx,0xb80
  40b337:	mov    rax,QWORD PTR [rbp-0x10]
  40b33b:	mov    rax,QWORD PTR [rax+0x8]
  40b33f:	mov    DWORD PTR [rax+0xb90],edx
  40b345:	mov    DWORD PTR [rbp-0x4],0x0
  40b34c:	mov    eax,DWORD PTR [rbp-0x4]
  40b34f:	add    rsp,0x20
  40b353:	pop    rbp
  40b354:	ret    
  40b355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b35f:	nop

000000000040b360 <__libc_csu_init@@Base>:
  40b360:	endbr64 
  40b364:	push   r15
  40b366:	lea    r15,[rip+0x5a93]        # 410e00 <flatcc_builder_padding_base@@Base+0x4680>
  40b36d:	push   r14
  40b36f:	mov    r14,rdx
  40b372:	push   r13
  40b374:	mov    r13,rsi
  40b377:	push   r12
  40b379:	mov    r12d,edi
  40b37c:	push   rbp
  40b37d:	lea    rbp,[rip+0x5a84]        # 410e08 <flatcc_builder_padding_base@@Base+0x4688>
  40b384:	push   rbx
  40b385:	sub    rbp,r15
  40b388:	sub    rsp,0x8
  40b38c:	call   403000 <free@plt-0x30>
  40b391:	sar    rbp,0x3
  40b395:	je     40b3b6 <__libc_csu_init@@Base+0x56>
  40b397:	xor    ebx,ebx
  40b399:	nop    DWORD PTR [rax+0x0]
  40b3a0:	mov    rdx,r14
  40b3a3:	mov    rsi,r13
  40b3a6:	mov    edi,r12d
  40b3a9:	call   QWORD PTR [r15+rbx*8]
  40b3ad:	add    rbx,0x1
  40b3b1:	cmp    rbp,rbx
  40b3b4:	jne    40b3a0 <__libc_csu_init@@Base+0x40>
  40b3b6:	add    rsp,0x8
  40b3ba:	pop    rbx
  40b3bb:	pop    rbp
  40b3bc:	pop    r12
  40b3be:	pop    r13
  40b3c0:	pop    r14
  40b3c2:	pop    r15
  40b3c4:	ret    
  40b3c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b3d0 <__libc_csu_fini@@Base>:
  40b3d0:	endbr64 
  40b3d4:	ret    

Disassembly of section .fini:

000000000040b3d8 <.fini>:
  40b3d8:	endbr64 
  40b3dc:	sub    rsp,0x8
  40b3e0:	add    rsp,0x8
  40b3e4:	ret    
